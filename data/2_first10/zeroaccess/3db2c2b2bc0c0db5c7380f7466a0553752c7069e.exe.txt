push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
or
mov
mov
mov
sbb
mov
mov
orl
push
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
push
jmp
enter
fldenv
add
mov
jl
jl
add
aam
ret
rol
in
lret
fmul
cli
icebp
fmul
aam
clc
sar
rcl
xchg
mov
loopne
cli
jmp
leave
xor
icebp
xor
neg
aad
int
fnclex
out
repz
ljmp
out
ret
clc
fxch
in
leave
icebp
hlt
dec
cmp
rolb
repnz
in
fildl
shl
sub
shl
xlat
stc
aas
adc
out
out
test
mov
iret
cld
fdivp
jecxz
hlt
jecxz
aaa
ret
fcmovu
neg
in
iret
out
lock
in
lock
in
aad
jmp
sti
call
aam
int
int3
out
ds
fmulp
sti
out
fmuls
hlt
icebp
rol
repnz
aad
xor
lret
sarl
cld
hlt
cmp
ret
loopne
out
sti
xchg
call
neg
les
fsubr
jecxz
fnstsw
in
in
loope
out
repz
rol
in
aaa
int
xor
out
cmp
aas
hlt
cmc
lds
hlt
fcmovu
test
fcmovne
shl
lock
cli
cmp
shr
rcr
cmp
cld
sti
jmp
loop
lret
xchg
rcr
icebp
cs
sti
xlat
idiv
cmp
in
cmp
and
xchg
out
out
jmp
aam
aad
in
cmp
roll
inc
call
int3
cld
mov
out
mov
aaa
in
ret
fst
into
cmp
aas
inc
fdiv
cmp
stc
add
mov
ret
jecxz
adcb
xor
cmp
out
repz
fcmovne
in
cmc
div
fucom
stc
jecxz
lret
rorl
out
out
cmp
clc
lret
ror
jecxz
loopne
fld
test
fdivrp
test
fmul
addb
in
hlt
icebp
cmp
sti
rolb
rol
aas
in
xchg
fimuls
leave
aad
aaa
aad
fucomi
sar
lret
jecxz
out
xchg
aad
test
stc
out
mov
ret
enter
sti
hlt
ret
hlt
cli
repz
test
loope
test
lret
stc
cli
out
in
mov
out
rol
in
cmp
lret
lock
cmp
fcomip
aad
mov
mov
loopne
aaa
fidivl
xor
aam
lret
xor
rorb
fucompp
std
loop
or
out
in
ret
fcom
fnsave
aad
jmp
into
shl
fsubp
cmc
sti
aam
cmp
sti
out
addl
out
iret
bnd
cld
aam
mul
std
loopne
std
sbb
out
loopne
xchg
jmp
in
sub
lret
rcl
repz
out
rcr
shl
clc
in
jecxz
fcmovnbe
in
xchg
shr
out
repz
jmp
in
std
clc
jecxz
ret
bnd
fildl
xchg
test
aad
sarb
fst
mul
and
enter
out
into
enter
out
stc
out
lret
fmulp
cmc
fsubr
neg
sti
loopne
aad
ret
add
fisttps
lret
ljmp
ss
out
cmp
aas
rcl
idiv
cmc
push
int
int3
ljmp
shl
shl
iret
das
out
fucomp
in
ret
test
shl
jmp
or
sub
out
shl
in
xor
jmp
int
xlat
cmc
fdiv
aad
xchg
lret
addl
clc
lds
rcl
in
enter
sti
cmp
mov
sub
out
orb
int
int3
out
shll
xlat
leave
int3
rol
loope
shl
cmp
out
cmp
lret
iret
test
loop
div
xor
int3
cli
call
sub
rcr
hlt
incb
addl
in
cmp
sar
xor
repz
std
in
in
out
jmp
call
stc
repnz
cmc
cs
into
shr
test
roll
in
iret
int3
jmp
sub
into
ss
loop
aaa
aad
in
out
aam
fdivrs
ds
add
rolb
cmc
shl
lret
leave
aad
jmp
stc
hlt
rorl
xlat
jecxz
fmul
out
jmp
mov
ret
out
out
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
enter
lret
xor
inc
test
mov
addb
jl
fidivrl
out
stc
sarb
clc
xlat
aam
loopne
mov
in
iret
addb
icebp
sub
in
out
cmp
call
shl
fsubr
xlat
std
test
in
clc
std
xchg
in
sub
jmp
jmp
loop
loop
repz
ret
test
in
xchg
hlt
rol
leave
cmp
fprem1
fdiv
icebp
cmp
rcr
rcr
in
nop
std
int
xchg
jmp
lret
not
int3
cmp
ljmp
cld
rorb
nop
xchg
ljmp
sub
int3
aad
call
iret
aas
shr
xlat
std
and
out
fdivr
xor
enter
jecxz
roll
faddp
in
iret
icebp
sbb
mov
iret
lret
fistpll
fsubr
clc
loope
ss
call
mov
jecxz
into
in
adcl
lret
jmp
fmulp
cmp
sti
xlat
aad
hlt
fsub
nop
lret
test
div
in
out
sarb
loopne
test
fldl
loope
icebp
hlt
mov
icebp
shll
icebp
xor
cs
enter
cli
icebp
in
mul
add
iret
cld
repnz
rcl
aad
cli
fdivrs
sarb
cld
in
rcl
clc
not
icebp
rorb
call
rol
sub
into
int
cmp
fidivl
cmp
ds
out
xlat
out
mov
rcr
nop
int
int3
int
in
xor
out
leave
call
mul
repz
fdivr
sar
ret
xchg
mov
xchg
out
sub
xlat
mov
into
cmp
icebp
fst
f2xm1
sar
ffree
fiaddl
nop
xchg
xchg
mov
int3
cmp
shl
int3
jmp
loope
cmp
repz
rol
enter
and
sub
adc
hlt
shl
xor
loope
cld
cmpb
loop
loope
ret
int3
ljmp
repz
aaa
in
lret
jmp
dec
rol
aam
std
ret
aam
flds
sub
xor
aam
out
int3
stc
sti
cmp
repnz
testb
lret
cld
iret
shl
repz
icebp
cmp
fdivrl
xchg
fcmovbe
loopne
fld
mov
xchg
mov
hlt
cmp
lret
cld
enter
repz
jecxz
std
std
lret
in
test
jecxz
or
mov
int
shr
ss
hlt
std
ss
loopne
aam
xchg
fcomip
adc
cld
out
ljmp
cmp
call
sarl
fcmovnbe
shl
fisttpll
clc
icebp
les
rol
repnz
cmp
stc
iret
int3
adc
out
ret
aad
testl
das
ljmp
cli
out
std
aam
aad
repnz
hlt
repz
fsubr
lret
cld
lret
lret
int
xor
imul
out
bnd
ret
in
mov
mov
out
cld
out
jmp
mul
int3
cmp
cmp
lret
iret
not
std
loopne
aad
mul
ret
in
les
mov
in
std
in
clc
sar
not
cmc
into
into
in
fmul
test
iret
out
ds
aad
xor
cld
cmp
aaa
stc
lock
and
lret
aas
lret
std
mov
loope
loopne
jmp
aad
cld
icebp
fildl
addl
cmc
sar
loopne
iret
cmp
fmul
sarb
fcmovnu
int
loopne
out
in
jecxz
sti
fsubr
lret
iret
lret
fucom
xchg
subb
ror
not
rol
in
loopne
ror
jecxz
fld
leave
repnz
lret
stc
loopne
xchg
rcr
loopne
in
clc
xor
leave
in
fptan
ret
test
sar
fucomip
mov
xor
sti
aam
jmp
iret
aas
jecxz
shl
lds
into
out
ljmp
lock
iret
test
int
shl
loope
loope
and
in
jecxz
fadds
ret
sti
in
cli
xor
loopne
aam
cmp
ds
ds
in
int
out
mov
sub
leave
icebp
in
ffreep
shlb
mov
mov
inc
add
add
add
add
je
cmpl
jne
pushl
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
adc
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
mov
lea
mov
mov
sub
and
mov
jmp
lret
aad
fcmovu
adc
inc
mov
cmpsl
or
jl
addb
jl
neg
rcl
lock
rolb
cmp
loopne
xor
ret
jmp
jmp
fnstcw
stc
testb
mov
xor
enter
cld
ss
aam
cmpl
fcmovne
loop
addl
xchg
aam
cs
flds
mul
call
imul
mov
mov
xchg
xorl
loop
fcmovnb
fucomip
div
call
idiv
in
repz
ffree
into
in
cli
iret
in
loop
int
into
cmp
jmp
fcomip
xor
std
repz
out
sar
fcom
out
mov
in
in
ret
lret
out
cmp
cld
cld
out
roll
out
lret
ljmp
ret
ss
enter
cmp
cld
in
out
lea
lret
std
cmc
ret
ss
cmp
aaa
ds
aam
clc
repnz
fucomi
xchg
ljmp
xor
lock
xor
stc
loope
loopne
loope
cld
ret
lret
lock
lret
fcomp
int3
into
ss
out
cmc
fldl
jmp
fsubr
orb
repnz
fdivp
in
xor
in
shlb
in
shr
cmp
in
loope
lret
loop
in
jmp
cmp
ret
xor
hlt
in
fdivp
fptan
cmc
lret
sbb
enter
xchg
div
fstpt
ss
ss
int3
in
stc
les
shl
ret
jmp
addl
call
std
ret
cmc
repz
fstp
fsub
test
lock
out
int3
das
in
lret
fxch
inc
fstpt
out
icebp
shl
mov
ret
iret
out
fcmovu
sub
cmc
sarb
enter
cmp
jecxz
fld
loope
fsubr
cmp
icebp
mov
int
test
aas
lret
int3
cmp
ret
mov
clc
mov
sti
sti
and
enter
xor
divl
cmp
out
hlt
lock
ror
in
clc
cmp
in
enter
lock
out
xor
jecxz
sti
cmc
lock
frndint
ljmp
incb
mov
xchg
loopne
out
test
aad
ret
in
fyl2xp1
xor
fcomi
fcmovbe
mov
not
xchg
in
out
fistl
xor
ret
std
call
cli
int
ror
ret
loope
mov
mov
loopne
test
mul
ss
das
hlt
out
aas
xor
jecxz
xchg
enter
lea
xchg
hlt
jecxz
int
in
rcr
into
int
cmp
xlat
idivl
add
ds
loope
cli
xchg
xor
in
xor
ljmp
jmp
cli
nop
ljmp
fnstenv
mul
icebp
enter
sbb
add
test
call
stc
sub
loop
sub
ret
vpandn
aam
fdivr
jmp
sti
jmp
ds
sar
out
fcmove
xor
shr
cmp
std
call
fnsetpm(287
nop
incb
jecxz
call
divb
stc
into
repnz
sar
lock
jmp
sar
loop
lds
jmp
neg
aam
ds
roll
lret
fildl
test
xor
imul
cmc
cmp
cmp
aaa
into
lret
lock
in
sti
in
cmp
and
in
aad
not
out
fidivl
cmp
bnd
aaa
fninit
test
loop
into
mov
mov
addb
aam
cmp
cmp
out
rolb
mov
fsub
cs
shll
std
repnz
cmp
jecxz
cmp
test
aam
lret
xchg
mov
in
rorb
lock
clc
std
fcmovnu
addl
jmp
neg
mov
repnz
fdiv
das
leave
int3
cmp
out
sti
xor
loope
lret
xlat
mov
into
test
loop
out
test
aaa
sar
fcomp
iret
lock
cli
out
mov
and
mov
orl
jmp
rol
aas
ror
daa
jae
lea
jl
addb
jl
sbb
stc
int3
lret
hlt
int3
xor
aad
xlat
repz
lret
test
roll
loope
sti
lock
aas
xor
aad
sti
lret
cmc
fdivrs
ret
xlat
clc
fdivr
fmul
sub
mov
cli
shl
ds
loope
enter
fnstsw
loope
loope
loopne
out
repnz
aad
fmul
lret
leave
ror
aas
adc
aas
cld
loope
in
jecxz
cli
jecxz
iret
and
lret
in
in
loop
ss
xor
in
aas
sar
in
in
cmc
out
mov
ljmp
mov
jmp
jmp
in
cli
div
fsubr
inc
jmp
decb
lea
cs
cmp
out
lock
cmp
cmp
out
fldl
loopne
lock
into
repnz
sti
fidivl
clc
enter
stc
sub
loop
xchg
loop
in
jmp
xlat
into
lret
int
out
xor
ret
cli
cli
not
sar
clc
mov
lret
sti
leave
into
enter
ss
xor
lret
shr
jmp
xlat
test
call
jmp
ret
repz
nop
int
rol
cmp
dec
sar
fdivp
fadd
mov
ftst
clc
xchg
sub
out
cmp
sarb
xlat
cmp
iret
xlat
fcomip
icebp
fdivrs
ljmp
in
std
xchg
out
ror
loope
repnz
out
aad
xor
in
fcom
call
int3
in
xchg
incb
fdivs
call
cmc
int3
ret
loop
repz
fdiv
xlat
test
out
mov
loopne
out
in
cmc
aaa
xor
int3
cmp
int
cmp
fnstcw
fiadds
mov
mov
out
in
lret
lret
not
hlt
hlt
out
stc
inc
push
ljmp
incb
loop
xchg
out
in
icebp
xlat
shr
cmp
cmp
out
aam
fcmovnbe
enter
fisttpl
divl
out
xlat
aam
lock
int3
aam
sbb
div
jmp
ds
icebp
orb
aam
lock
in
int3
aad
shl
cli
int
in
aas
cmc
sti
cld
jmp
xchg
ss
call
int3
cmp
sti
xlat
fiaddl
mov
call
ljmp
stc
cmc
int3
cmp
cmc
jmp
aam
enter
int3
fmull
enter
fdivr
xor
xor
fsub
std
repnz
xchg
in
xchg
xchg
lea
rol
stc
cmp
in
in
ret
aad
neg
ret
ret
out
faddl
sub
ret
xor
fcomip
stc
loope
cmp
xchg
jmp
rolb
out
jmp
cmp
cmp
add
cmp
fldl
div
mov
or
ret
ss
rcl
cmp
icebp
jmp
dec
incl
loopne
cmc
out
jmp
sbb
in
std
loop
shll
clc
cmp
cmp
jmp
loopne
iret
repz
test
lock
sti
out
lret
iret
xlat
out
fst
fdiv
clc
shl
rcl
rcl
fldl2e
ret
lret
in
aas
jecxz
int3
fld
out
cmp
fmulp
ljmp
decl
mov
fdivr
cld
into
rorb
xor
cmp
dec
fucomi
cmp
cmc
sbb
ret
orl
mov
in
call
out
repz
cmp
rcr
out
out
nop
test
into
sti
std
cmp
cli
int
sarb
iret
xchg
loope
rcl
xlat
fcmovu
incb
aas
jmp
out
int
out
ljmp
aam
push
loop
imul
test
loopne
in
shr
in
xor
jmp
jmp
fcomi
ds
fabs
out
jmp
lret
leave
cld
leave
loop
sub
out
hlt
xor
std
int
xor
fcom
cmc
repnz
out
mov
xchg
lock
int
xor
loop
lret
cmp
enter
hlt
clc
rolb
aad
pushl
xor
add
mov
add
add
mov
movl
lea
jmp
ror
rcl
fcmovnu
ror
and
clc
in
adc
jl
addb
jl
fmul
fcmovne
out
xchg
int3
loopne
xlat
stc
into
fsub
lret
stc
icebp
cmp
loop
int
in
icebp
fsub
in
rorb
cmc
ret
call
ljmp
repnz
cmp
jmp
clc
out
call
xor
int3
idivl
cmp
cmp
shl
rcl
xrelease
out
lret
loop
xor
lret
int
repnz
fst
iret
sti
cld
in
fnstsw
fiaddl
test
test
ror
adc
leave
into
in
ss
fnop
loopne
fmuls
idiv
fmull
in
stc
repnz
xlat
xor
aad
jmp
fnstcw
ss
fucom
repz
xchg
in
repnz
int
not
stc
lock
ss
stc
leave
sar
faddp
out
fcomp
loop
lock
in
test
aaa
repz
shl
out
jmp
out
cli
enter
test
loopne
iret
sarb
repz
aam
cmp
aam
in
shl
jmp
f2xm1
out
loop
orl
enter
lret
ret
sti
aas
adc
ljmp
enter
not
lock
clc
in
loopne
repz
shl
sar
loop
addl
in
in
out
loop
xor
iret
xor
repnz
sarb
rol
fsubp
out
test
jmp
shl
jmp
into
xor
test
cmc
cmp
and
fucomi
ljmp
cs
xor
fucomip
out
xor
repnz
or
lret
loope
in
dec
leave
nop
rcll
lret
stc
out
stc
dec
stc
cmp
in
out
enter
call
out
repz
clc
out
sti
cmp
cmp
cmc
add
fiaddl
xchg
in
fcmovne
nop
and
clc
xlat
out
das
fsubr
int
cld
cmp
aaa
repnz
cmp
call
faddl
incb
aam
imul
aad
leave
stc
fdivr
sbb
test
mov
mov
into
out
out
loop
out
cmc
lret
filds
clc
ror
fsubrp
std
clc
loop
in
iret
aad
hlt
xor
ljmp
loop
loop
rolb
ljmp
iret
out
shr
std
cld
cmp
ret
neg
out
xchg
into
repnz
lock
icebp
aam
enter
jmp
loopne
loopne
out
xlat
jmp
xchg
into
out
xchg
call
fptan
out
xor
sbb
hlt
into
fmul
out
div
out
mov
xor
in
in
cmp
cmp
lock
sar
hlt
sti
cld
cmp
in
sti
mov
out
xchg
xor
shl
int
cmp
jecxz
iret
cmp
out
rolb
xchg
dec
loop
int3
std
sarl
loopne
leave
std
xor
lret
fnstenv
cmp
cmp
out
lock
fdivrp
ljmp
out
test
out
cmc
cmp
cmc
fcmovbe
icebp
sarl
repz
out
loope
fadds
fisttpl
jecxz
xor
aam
in
lock
sti
lret
and
rolb
loop
cld
out
and
iret
in
cmp
enter
shr
out
cld
aam
xchg
xlat
faddl
out
jecxz
icebp
cmc
cs
rcr
in
jmp
out
test
out
rol
fsubrp
aam
ljmp
lea
aaa
repz
xor
sti
fdivr
in
fsincos
xor
jmp
imul
lret
mov
fistl
ret
enter
shlb
repz
ret
into
ds
xchg
ds
jecxz
mov
fimuls
out
xlat
rcl
in
xor
xlat
cmc
stc
mul
aas
ljmp
shr
jecxz
lret
mov
loop
cmp
cmc
int
fidivrl
xchg
in
out
ret
enter
repnz
enter
cmp
aas
sti
repnz
out
in
jmp
sbb
loopne
mov
in
xor
icebp
jmp
clc
sarl
into
fcmovbe
repz
cmpl
dec
loopne
std
mov
mov
mov
jmp
aam
into
lret
rcr
fstp
les
xor
jl
add
mov
iret
aaa
sub
xor
int3
jmp
idivl
fucomp
leave
cmc
jmp
lret
in
or
lock
repnz
xor
in
shl
idiv
int
cli
int
fsub
clc
addl
lret
fnsetpm(287
xchg
out
out
xor
cmc
ljmp
into
ror
in
xchg
fdivr
cld
addl
fcmovbe
in
ss
aad
jmp
hlt
sti
rcr
fiadds
orb
hlt
out
aam
in
cmp
addl
in
hlt
sti
enter
mov
xchg
loop
sar
iret
repnz
int
hlt
cmc
sti
ret
in
xchg
ljmp
sub
mov
int
out
repz
fucomp
shl
cld
lret
test
idiv
incl
out
jmp
sub
jmp
out
into
fdivr
cmp
loopne
jecxz
rorb
leave
in
call
sar
cmp
fsubp
fldl
call
out
fucomi
in
out
in
in
fcomi
cli
jmp
ds
call
in
filds
xor
int
addl
repz
aad
cmc
cli
aad
test
fcmovne
cli
ret
mov
in
test
ret
leave
stc
cmp
sti
leave
lret
rolb
aas
cmp
mov
fiaddl
sub
sub
xor
in
out
icebp
cli
jmp
xor
hlt
mov
mov
cld
xchg
call
div
xor
fcmovnb
sti
cmp
xor
sti
out
in
mov
jmp
imul
test
int3
xor
enter
cld
ss
aad
fndisi(8087
idivb
cmc
fldpi
movb
fcomip
das
lds
loope
jecxz
xor
ss
icebp
enter
iret
sti
in
nop
xlat
lock
out
fstpt
xor
push
int3
repz
shl
xchg
sbb
orl
xor
fcmovu
int3
in
sbb
out
rcl
mov
test
repz
in
sub
xor
test
int
sar
out
and
ret
ret
nop
mov
das
iret
aad
cli
out
fucomi
rcr
ds
ds
repz
lret
nop
out
xor
lret
rcl
sar
xor
aam
repnz
mov
flds
cmp
lret
in
fcmovb
in
jmp
aam
neg
push
mov
enter
cld
iret
test
lds
cs
jmp
xor
loop
aas
ret
and
jmp
sub
xchg
nop
cmc
mov
iret
aam
leave
xor
fcmove
in
cmp
out
icebp
into
repnz
jecxz
xchg
jmp
nop
jecxz
in
hlt
xlat
in
lret
fld
fcmovnbe
fdivr
sti
aad
aad
shl
fadd
sub
int3
std
int3
rorb
in
aaa
fdivp
repnz
cmp
loopne
leave
mov
out
out
lret
fdivs
cmp
cmp
ss
adc
ret
loope
leave
and
int3
std
mov
ljmp
lret
cmp
testl
jecxz
mov
xchg
lock
imull
xor
lock
shr
cmp
sar
fadd
rcl
fcom
jmp
lea
dec
jecxz
out
cmp
xor
fucom
iret
stc
shl
loope
repnz
aam
sti
lret
iret
mov
shl
rcll
clc
lret
bnd
test
xlat
hlt
xchg
rcl
jmp
cld
xchg
mov
jmp
xor
aad
shl
shr
out
icebp
shl
out
jmp
std
fiadds
ss
cli
fcmovnbe
shll
cmc
hlt
shl
lds
out
enter
call
mov
out
aad
int3
cmp
ljmp
fld
cli
loop
jmp
mov
xlat
les
ss
lret
loop
loopne
aad
jmp
test
sti
jecxz
out
loop
jmp
in
cmc
jmp
clc
hlt
repz
out
fnstsw
fprem
incb
out
xor
test
mov
mov
mov
mov
mov
jmp
ret
rcl
rcl
aad
shrl
add
jl
addb
jl
ret
idiv
cmp
cmp
ds
fimuls
jmp
sti
mov
ret
shl
stc
fdivrl
clc
cmp
out
cld
rolb
fildl
in
into
ljmp
sar
aaa
enter
sbb
fld
fucomi
in
fstl
cs
sar
repnz
xor
shl
adc
cli
repz
fimuls
xorb
xor
clc
lock
fidivrs
ljmp
loop
lret
iret
lock
xor
cmp
clc
sar
loopne
xor
call
jmp
mov
nop
call
in
lock
hlt
repz
std
push
into
ljmp
call
out
loopne
loope
loope
sarb
cli
fst
call
out
repz
cmp
in
fdivrl
call
cli
icebp
test
sub
out
out
les
ds
fdivr
shl
sar
mov
iret
out
mov
lock
out
cmp
clc
cmp
int
hlt
repnz
cld
in
cmc
leave
leave
mov
xchg
xor
idiv
lret
cmpb
in
ret
and
out
in
jecxz
lea
xor
enter
jmp
cmp
mov
in
decb
test
call
jmp
fcmovne
ror
out
lret
sti
add
fmul
test
lret
jmp
not
fcom
dec
cli
in
ds
loope
cmc
in
out
lock
cmc
aad
repz
cmp
xor
cld
out
fidivrl
fdivrs
clc
lock
testl
cs
clc
leave
in
idiv
sti
jmp
loop
xchg
jmp
stc
std
out
fisttpl
hlt
in
clc
lock
repz
repz
into
cmp
test
mov
lret
shl
call
fxch
lret
not
faddp
xlat
cmpl
hlt
xchg
xchg
ljmp
inc
shrl
out
aam
xor
ljmp
cmp
mov
and
cld
out
cld
sti
fildl
cs
out
lret
lock
neg
shl
fcomi
lock
fiadds
in
rclb
out
mul
aad
jmp
leave
xor
cli
cld
cli
fimuls
repz
aam
leave
sub
idivl
sub
loopne
fcmovbe
jmp
jmp
jmp
shr
xor
aaa
loopne
enter
jmp
xchg
in
rol
mov
in
out
nop
jmp
hlt
call
aaa
into
les
cmp
iret
sar
in
idiv
mul
lds
call
xchg
fidivs
in
stc
into
out
fcomp
icebp
aad
cmp
sar
int3
test
clc
leave
clc
loop
ljmp
test
das
ret
lret
ret
xor
aaa
hlt
sarl
inc
fcmovb
stc
test
test
mov
jmp
fcmovnu
fdivr
sarb
lret
neg
rol
std
out
cmp
idiv
xchg
repnz
sar
fcmovnu
icebp
int
lret
out
jecxz
out
xor
iret
lock
call
les
cmp
repz
not
std
ror
hlt
loop
xchg
mov
cld
xchg
fldln2
mov
in
icebp
repnz
std
cmp
int3
in
in
std
icebp
stc
jmp
cld
in
fscale
out
call
in
idiv
xlat
jmp
clc
fdivr
icebp
clc
aas
out
test
fdivr
ljmp
icebp
not
out
in
into
aas
aam
loopne
addl
idiv
mov
fcomi
incl
aam
int
xlat
repz
lock
fucomp
mov
aam
xor
xlat
xor
out
aad
ss
out
iret
hlt
out
fdivp
cli
in
out
fiadds
aad
in
out
ret
lret
into
cld
out
adc
icebp
aad
jecxz
std
aad
testb
xrelease
fmulp
xor
int
jmp
in
ret
std
out
cmc
roll
in
lret
in
iret
in
cmp
icebp
ror
aas
mov
jmp
sarb
enter
fidivl
mov
outsb
data16
sbb
jl
fcom
idivl
in
aas
testb
mov
lret
fucomp
jmp
xor
in
fxch
cmp
loopne
in
sbb
incl
out
nop
aad
in
leave
into
aam
cmp
loop
repz
into
jmp
stc
mov
fldlg2
or
aad
shr
hlt
xor
int
xlat
into
cmp
out
test
xlat
fldlg2
mov
in
xor
fcmovne
in
stc
out
aaa
enter
shl
loop
sar
xlat
in
xor
call
cmp
flds
cli
test
aam
mov
in
iret
jmp
icebp
mov
loopne
out
xor
cmc
lock
test
cmp
mov
div
mov
ficoml
test
ror
into
xlat
call
fcmovne
loope
not
ds
cmc
sti
in
icebp
test
lret
in
cmp
xor
cmp
aad
in
cmp
aad
testb
xchg
in
test
hlt
xlat
loop
lret
lret
lret
loopne
lret
aas
roll
call
int3
aad
rol
icebp
fcmovbe
jmp
loop
rcr
cli
xchg
lret
lret
fsubr
mov
lret
cli
jmp
xor
into
fmul
cmp
roll
incl
shrl
loop
xor
cmc
xor
xlat
div
cmc
rolb
cld
shl
out
xor
leave
clc
xor
not
lret
fdivrs
lret
aad
shl
mul
std
cli
xchg
in
adc
rol
shll
cmp
xor
loope
testl
call
test
xchg
xchg
in
das
xor
cmc
hlt
cmc
in
cmp
loope
icebp
aas
in
sar
mov
in
enter
shl
ror
int3
aam
cmp
cs
loope
xlat
idiv
fcomip
loope
rol
lret
out
popl
rcl
lret
stc
call
cmp
out
int
into
cmp
fcmovnbe
into
jmp
in
loopne
loopne
out
mov
shl
int
ffreep
icebp
cmp
cmc
cmc
lock
aam
xlat
clc
stc
in
ret
shl
icebp
into
sar
xor
xor
int
in
sbb
aam
loop
addb
jecxz
xchg
in
int
shl
lret
in
clc
stc
xlat
repnz
sti
add
xlat
addb
call
aad
neg
lret
clc
fsubrp
rcr
int3
cli
xchg
cmp
in
loop
xchg
out
aam
shll
in
out
aam
into
out
jmp
into
cmc
std
aad
repnz
neg
aad
in
shl
repnz
xor
ljmp
ljmp
repz
std
xchg
enter
jecxz
hlt
loop
in
mul
aad
aaa
xor
aaa
aam
ret
lock
cmp
sbb
out
sti
ret
fcomp
repnz
jecxz
icebp
shr
fstp
push
aad
fcom
or
notrack
fsubrp
in
out
rcl
loopne
xchg
dec
into
in
aaa
lock
rcr
cmc
std
sti
sub
fmull
imul
mov
cmp
icebp
stc
faddl
hlt
int3
mov
shr
mov
loop
fsub
cmp
shl
rol
cli
sti
in
enter
lret
mov
in
cmp
clc
sbb
lock
loope
testl
aad
lock
into
repnz
cld
faddl
fadds
out
and
mov
aam
fxam
in
sti
sar
loope
lret
out
std
std
out
xchg
jecxz
xchg
ret
cld
ljmp
jecxz
out
xor
divl
roll
sbb
mov
jecxz
in
icebp
icebp
jmp
fucomp
lret
leave
cmp
fcom
aam
lock
cli
stc
out
shl
xchg
lock
into
int3
in
enter
neg
out
cmp
fcmovnb
addl
test
xor
nop
xor
into
fadd
xlat
jmp
hlt
cmp
repz
out
ror
mov
vshufps
in
ret
xchg
shl
rcl
ret
hlt
out
pushl
rolb
movzwl
add
mov
mov
mov
xor
add
cmp
jmp
iret
leave
rcl
fstp
leave
repz
sub
fldl
and
add
aad
ds
cli
ljmp
loop
fsubp
ret
out
cmp
fcmovne
fiadds
add
out
cmp
std
shl
mul
sub
aad
iret
cmp
hlt
sarl
cli
repnz
test
std
lret
cld
iret
test
fsubr
ror
into
ljmp
aad
cmp
ret
cld
mov
leave
out
xor
xchg
leave
cs
aas
aas
adc
repz
rolb
fcmove
rclb
ret
jmp
jecxz
into
sarl
call
mov
mov
ss
in
cmp
rcr
out
xchg
ds
hlt
ffree
in
out
nop
jmp
out
icebp
sti
cmp
or
fistpll
repz
in
xchg
loop
jmp
test
fucomi
stc
lock
int3
rolb
out
call
icebp
xchg
cli
lock
in
jmp
icebp
iret
cs
fsubr
test
lock
cmp
lret
icebp
xchg
leave
sbb
xor
enter
aaa
ror
aam
rcl
cmp
aad
jecxz
xchg
jmp
int
leave
rcl
jmp
into
aas
cli
xchg
icebp
fsubr
sar
mov
fdiv
iret
xchg
out
xor
stc
shl
sti
cmp
hlt
fmulp
hlt
lock
rolb
test
out
in
call
shr
xlat
aad
in
stc
cli
cmp
lock
cmp
cmp
mov
enter
std
cli
jmp
jecxz
hlt
cmp
rcr
iret
fstp
fnstenv
shl
xlat
std
not
fdivr
xchg
lock
loope
vpaddw
aad
idiv
loopne
adc
repz
hlt
mov
cli
std
enter
lock
lock
lret
xor
in
repnz
jecxz
hlt
lock
stc
orl
sti
lret
out
mov
ss
lret
jmp
cmp
jmp
jecxz
fndisi(8087
xor
stc
clc
in
loope
mov
shl
lret
leave
in
cmp
cmp
enter
lret
in
loope
int3
xchg
loop
xor
in
cmp
aas
xlat
repnz
std
faddp
mov
ret
xchg
out
fadd
leave
cmp
cmp
rcr
sub
loop
xchg
cli
fdivrp
ljmp
cmp
int
into
hlt
rcl
jmp
out
sarb
fucomi
fmul
cmp
jmp
mov
jmp
aas
lock
jmp
imul
fdivr
loope
addl
xchg
sti
mov
ljmp
cs
rcl
enter
rol
fcmovu
incb
out
in
out
mov
int
out
ret
xor
cmp
int3
cli
icebp
out
ljmp
jecxz
leave
jmp
repz
cld
adc
ret
clc
aas
cmp
in
sbb
test
cli
cmc
in
in
mov
mov
ljmp
in
fdiv
idivb
xchg
fxch
sar
lock
aad
lret
xor
xor
shl
sti
std
addb
decl
mov
loopne
iret
xor
call
fprem
sub
test
mov
jmp
ds
xor
call
cmp
test
cli
sbb
mov
fucomp
fsub
lret
xor
bnd
enter
fcomp
aaa
xchg
cmp
enter
fsubr
fsubrp
out
mov
repnz
shl
cld
sti
aad
cmp
xchg
cmp
neg
ret
leave
test
add
stc
xor
xor
shl
lret
repz
hlt
cmc
loop
in
lret
mov
xchg
int3
shl
fdiv
loope
xor
jmp
cmc
cli
cli
cmpl
lret
loopne
jmp
faddp
jmp
test
loope
ss
cmp
iret
aad
shl
repnz
aas
xlat
ds
ret
out
ret
std
mov
cld
out
enter
jmp
sti
cld
in
cmp
cld
cmc
repnz
cmpl
test
xchg
iret
repz
into
jecxz
hlt
xor
fcomi
cmp
ljmp
lock
jne
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
jmp
int
lret
xlat
int
es
add
mov
jl
addb
jl
enter
fst
out
bnd
shl
fcmovne
lock
sti
fdivrs
in
stc
fdivr
inc
out
ficoml
shl
in
xor
ljmp
aad
fcmove
in
cmp
loop
mov
lret
add
lret
adc
shrb
lock
lock
xlat
rcr
xlat
jecxz
int3
icebp
cli
fabs
sti
fiaddl
fmul
hlt
dec
ds
sar
fcmovnb
aam
xor
ds
into
and
fsin
jecxz
leave
rorl
fucomip
ds
hlt
std
fstpt
lret
out
fstpt
rcr
xor
jmp
orl
xor
sarl
lret
iret
sbb
shl
mov
out
in
lret
xchg
in
aad
xor
sti
aad
cmp
test
jecxz
out
fdivrp
loopne
loop
call
xchg
jmp
cmc
aam
cmp
cmc
addl
lret
int3
in
shl
lock
icebp
repz
cmc
repnz
aam
lock
leave
shr
cli
fxch
sti
into
ljmp
stc
iret
in
std
idiv
xor
cli
ret
sti
in
cmp
jmp
sub
shl
shlb
cmp
aad
ret
hlt
sar
aas
out
fnclex
test
neg
fmuls
sub
lret
div
sar
das
call
sub
faddp
xor
enter
or
fdivr
test
pushl
sarl
clc
out
xor
cmp
hlt
into
cmp
fcmovne
shl
sbb
test
cmc
sub
jmp
test
in
xlat
xlat
sar
aam
cmp
in
aad
aad
out
aam
loope
mov
test
lret
rol
call
ljmp
cmp
test
nop
xorb
call
repnz
ds
icebp
aas
stc
sti
testb
xchg
int
mov
in
rcl
xor
lock
rolb
sbb
cmp
and
mov
into
loop
icebp
shll
not
lock
cmp
aam
test
lock
aam
fmull
call
das
into
shlb
xlat
jmp
into
fildl
flds
int
test
xchg
fcomip
lret
lock
in
into
aam
int
stc
cld
clc
and
cli
enter
mov
ret
ljmp
shr
xlat
sarb
cmpl
hlt
call
lret
int
cld
fdivp
repnz
cmc
out
repz
cmp
std
fcmovnu
loope
into
neg
fadds
xbegin
out
sub
xor
fucomi
lock
iret
aam
cli
div
fstp
inc
cld
fsubr
call
shl
in
int3
clc
aaa
cmp
fistpll
lret
clc
lock
fiadds
stc
leave
cld
fsts
cmc
sub
in
repz
fmul
ss
bnd
aam
cmp
mov
clc
aam
fists
loope
xor
cmp
cmc
int3
cmp
cmp
idivb
clc
aam
fsub
in
into
in
mov
jecxz
xor
xor
sar
cli
stc
cli
ds
jecxz
fcmovnbe
fisttpl
out
out
shr
in
repnz
lret
in
loope
in
repnz
sti
out
in
out
out
std
lock
lds
aaa
shl
cmp
ljmp
rorb
jmp
call
ljmp
cld
icebp
cmp
idivl
test
testl
in
test
ror
fucomp
stc
fdivr
int3
lock
out
out
repnz
cli
mov
enter
out
xor
xor
cmp
xor
int
fsubrp
ret
sti
aad
not
cmc
call
repz
lock
leave
in
icebp
fdivrs
lock
ss
xchg
mov
aad
aaa
std
jmp
cmp
out
ret
aam
cmc
incb
in
in
jmp
mov
fbstp
loopne
in
out
cmp
incl
push
clc
or
shl
divb
in
icebp
out
cmp
cmp
idiv
shl
hlt
jmp
fimull
sahf
add
add
les
rcr
fxch
enter
and
pop
cmp
jl
addb
jl
lret
aad
cs
in
ret
into
rcl
cmp
repz
mov
leave
in
call
in
in
aaa
in
sub
in
cmc
lock
loopne
cmp
test
fcmove
mov
in
ljmp
out
lret
in
dec
fabs
std
aad
rol
cmp
loop
test
ror
fcomip
jmp
aad
fucompp
shr
into
test
cli
clc
test
mov
iret
in
xchg
in
jmp
aaa
lret
out
sti
fsubrp
shl
neg
aas
jmp
loop
stc
shl
xchg
out
rol
aam
cs
int3
dec
xlat
cmp
fdivrp
test
jmp
out
cld
sbb
ljmp
sbb
aad
clc
flds
test
loope
lret
das
in
out
cli
repnz
loope
shl
loopne
repz
ds
xchg
idiv
addb
shr
das
jmp
lock
iret
repnz
in
rcr
fiadds
jecxz
into
leave
call
jecxz
fadd
xlat
repnz
fucomp
aam
testb
call
repz
mov
aaa
in
ret
xlat
cmp
int
add
out
inc
cmp
sti
fucom
out
ljmp
repz
cli
aaa
cli
rcr
ds
call
repnz
out
repnz
in
icebp
test
hlt
clc
fcmovnu
ljmp
aad
fsubr
jmp
loopne
cmp
xor
lret
jmp
enter
test
rol
jmp
mov
iret
mov
mov
jecxz
lret
shlb
stc
aaa
fsincos
xor
ljmp
fsub
lret
lea
test
cmc
mov
ffreep
loop
cmp
aad
cmp
cmp
aas
aam
dec
clc
mov
ret
mov
in
test
sub
out
xlat
fmul
adc
in
loopne
sti
jmp
fcmovne
in
leave
xchg
mov
xor
int
icebp
idivl
enter
sar
in
lock
leave
sub
test
mov
ljmp
jmp
fdivr
fstp
shl
loop
out
test
in
fstl
leave
repz
iret
shll
rcr
rol
div
ljmp
out
loopne
neg
jecxz
std
rcr
sarb
test
lock
fmul
or
cmc
incl
int3
test
repz
roll
les
in
rol
enter
not
in
sar
std
cmp
jmp
fucomp
fnclex
mov
out
repz
repz
jmp
fucomi
fcmovnb
loope
out
lock
jmp
test
ljmp
loop
mov
xor
icebp
hlt
call
cli
cmp
fdivr
clc
xchg
in
int3
mov
rol
xor
cli
call
xlat
cmp
sti
mov
decb
fmull
xor
out
lock
fbstp
ret
in
int
jecxz
sti
std
test
xlat
xor
iret
xor
call
jmp
rolb
ffree
cld
mov
xchg
out
out
xchg
icebp
sub
shlb
hlt
xlat
repz
ret
hlt
fsub
loope
jmp
lret
int
xchg
shr
in
jmp
stc
cli
repnz
out
rcl
in
cli
out
xlat
xchg
aad
jmp
fsubrp
out
out
sub
lock
in
in
aam
icebp
std
sub
ret
xlat
out
hlt
out
mov
rcll
repz
enter
fucompp
cmp
roll
icebp
hlt
repz
aad
and
cmc
out
xor
leave
sti
in
sti
fcomi
fcomi
ljmp
jmp
mov
mov
clc
in
icebp
in
lret
fdivr
int3
lret
fcomip
xor
jecxz
int3
sar
leave
stc
jecxz
fucomi
leave
ljmp
ss
xor
icebp
ror
fcomip
icebp
in
in
rcr
aas
clc
movb
in
shr
lea
cmp
aad
clc
out
enter
aam
shl
test
les
out
jecxz
out
out
in
inc
lock
xor
jmp
enter
vpsubusb
sub
xor
xchg
mov
add
xor
cmp
cli
cmc
cmp
int
in
int
ret
repz
xchg
sub
loope
cmp
call
iret
icebp
ljmp
xchg
nop
fcmovu
call
enter
xor
icebp
aad
cmp
ds
out
test
mov
cld
jecxz
in
int3
aaa
iret
xor
hlt
fdivr
sarb
div
sbb
std
icebp
out
ds
cmp
int3
sbb
xchg
jmp
ret
fnstcw
fdivr
xlat
repnz
lock
loop
std
out
sti
clc
incl
in
ljmp
fld
fdivl
shl
cmp
fcomip
hlt
cld
fsubp
lret
out
mov
in
shrb
cmp
loopne
lock
fucomi
xchg
ret
repnz
in
in
nop
fcomip
orb
in
enter
cmp
cmp
loop
call
mov
loop
jmp
icebp
rcl
cld
cli
in
aam
cmp
cmp
fiaddl
jecxz
ljmp
cmp
shl
repz
repnz
cmp
aas
cmc
stc
loopne
in
hlt
fsubr
in
xchg
xchg
jmp
cmp
jmp
aas
addb
not
clc
shr
std
mov
lock
ss
jmp
repnz
iret
repnz
shl
cmc
loope
ret
in
in
cli
mov
repz
in
sarl
iret
in
cmp
int3
lret
hlt
fdivr
in
hlt
repnz
sbb
cmp
out
fyl2x
fcom
fdivrs
filds
div
cmp
loop
call
shl
xor
cmp
ljmp
aas
ss
test
incb
out
test
call
cmp
out
fsubp
in
cmc
repnz
jmp
aad
in
int
and
test
xor
shl
icebp
lds
jecxz
mov
call
fcmove
hlt
sub
repnz
cmc
repz
hlt
shl
std
cmpb
aam
ffreep
test
xchg
in
xchg
imul
cmp
jmp
rcl
cmc
cmp
fld
cmc
sti
loope
add
xchg
jmp
mov
fdiv
aam
sti
fcmovu
fdivrl
int
cmpl
out
loope
cli
cld
loop
sub
ret
ljmp
aam
flds
cmp
test
orl
int3
jmp
int
cli
cld
fcmovbe
add
cmp
les
jecxz
shl
mov
sub
cmp
xlat
fptan
jmp
fucomi
lret
loope
test
aad
inc
enter
loopne
imul
xor
lret
lret
in
fsubr
jecxz
repz
test
test
loop
flds
jmp
jecxz
out
rol
out
int
aam
or
aas
loopne
test
lds
into
ror
out
repz
mul
in
cmp
xor
in
idiv
repz
imul
repz
clc
cmc
jmp
enter
mov
adc
shlb
shr
cmc
icebp
repz
aad
jmp
out
in
mov
xchg
int3
into
xor
enter
into
jmp
shl
xchg
call
int
lret
mov
mov
ss
sar
xor
aam
repnz
int3
xchg
fdivr
jmp
fcmovu
jecxz
repnz
int
lret
iret
into
int3
out
sub
mul
repnz
loope
decb
aam
out
int3
into
into
cmp
fdivp
int3
fmul
loope
in
out
ret
loopne
xchg
iret
in
shr
sub
hlt
out
stc
xor
enter
cmp
out
ror
sti
fcmovb
test
test
out
xor
mov
in
leave
divl
rcl
int
in
cmp
cmp
aad
xchg
in
loope
in
cld
mov
sbb
lret
stc
divl
leave
xor
jmp
ret
neg
ret
ret
jmp
mov
enter
enter
hlt
enter
rcr
std
std
test
cmp
mov
sub
mov
jmp
lock
in
repz
out
xlat
idivb
div
fiaddl
lret
ljmp
stc
shl
lock
push
int
sub
add
mov
mov
mov
movzwl
add
mov
jmp
iret
int3
ror
fcmovu
frstor
movsl
je
imul
jl
fxch
std
in
lock
loopne
repnz
rol
ret
cld
int
lret
xchg
shl
out
loopne
ror
leave
out
ds
fdivrl
icebp
loope
jecxz
lds
mov
xchg
int3
in
in
out
in
aam
out
sar
fucom
rcr
ds
out
orb
repz
lret
xor
out
call
lret
xor
addb
jmp
lret
xchg
jecxz
mov
mov
repz
in
fdecstp
int3
loope
cmc
cmp
repz
lock
int3
xchg
fdivp
iret
xlat
aam
out
ss
in
cmpl
repz
repnz
xor
cli
xchg
jecxz
iret
hlt
call
out
int
cmp
cmp
not
ljmp
test
sti
enter
test
loop
xchg
ret
loop
sar
idivl
fsub
xlat
ljmp
flds
std
call
mov
xlat
jmp
jmp
std
adc
xlat
faddp
stc
test
fmul
clc
hlt
loope
cli
in
push
lea
xor
int
cmc
leave
add
out
push
hlt
hlt
loop
fimuls
loope
call
into
aad
cmp
fsub
fdivrs
fadd
lock
loop
in
out
int3
mov
aad
xor
jmp
lret
cmp
lock
idiv
rcl
mov
int3
or
addl
imul
loopne
push
repz
repz
clc
call
jmp
out
jmp
leave
rcl
mul
ret
cmc
jecxz
mov
in
fldl
loope
jmp
jmp
out
hlt
xor
repnz
jmp
cmp
jmp
into
xor
xchg
test
out
call
mov
ljmp
xor
aam
in
cmp
repz
shl
mov
in
cmc
testl
clc
out
lret
jmp
into
not
in
aaa
cmp
xchg
fxch
loopne
mov
jecxz
enter
int3
fcom
ret
out
stc
repnz
sti
out
shl
out
cld
repnz
lret
loope
jecxz
in
in
shl
ret
repnz
shl
cld
addl
ret
out
shr
jmp
fnstenv
in
icebp
mul
in
cmp
fcomip
loope
fiaddl
loope
divl
clc
rcr
lret
fsubrp
rcr
loop
cli
stc
out
mov
sti
mov
xlat
idivb
xlat
xor
ret
xlat
xchg
not
in
loope
sub
fists
out
lock
xlat
stc
loopne
in
cmpb
test
sub
clc
icebp
out
std
jecxz
sub
shll
lret
fcmovne
cmp
cmp
cld
orb
aas
out
in
aad
xor
cmp
std
out
cmp
adc
rolb
lret
filds
xor
xor
fcom
out
cmp
shl
int
into
sbb
adc
in
out
shl
in
xchg
int
xor
shl
fnsave
cmp
aam
rcl
rol
mov
aam
out
orb
aaa
sti
ret
divb
fld
roll
loope
aad
ret
ljmp
loope
repnz
xlat
hlt
div
aad
in
xlat
in
out
add
cld
repz
mul
int
cmp
icebp
in
out
cmp
ret
repz
test
fdivp
fpatan
mov
repnz
in
lock
in
aam
cmp
int
jecxz
into
testl
std
xchg
orb
shl
fcmovne
leave
xor
int3
in
sar
mul
faddp
jecxz
loop
cli
mov
xor
call
ljmp
fisttpll
lret
in
in
rorl
shr
xor
div
int
ds
not
ror
incb
fucomi
fldl
rcl
call
rcl
fidivrs
fidivrs
mov
enter
test
repnz
lret
call
cmc
aad
hlt
aas
loop
fsub
aad
rolb
jecxz
jecxz
jmp
xor
cmp
in
into
std
aaa
shr
fisttpl
or
sahf
add
add
iret
leave
ret
int
xor
les
out
ss
addb
jl
shl
std
jecxz
mov
mov
fiadds
clc
div
fnstcw
ror
icebp
out
inc
cld
cld
sti
jmp
clc
icebp
loop
nop
loop
repz
xor
iret
xor
sar
jmp
push
into
rolb
ds
mov
cli
fucomp
xlat
loop
leave
xlat
xor
stc
cld
lret
aam
xor
lock
ret
cmc
xlat
sti
mov
shr
into
les
out
out
int
stc
fstp
fdiv
cmc
aam
aas
rcr
repnz
ljmp
mov
sarb
hlt
ror
rcl
jecxz
into
sti
not
les
adcb
iret
jmp
fcomip
cmp
stc
fdiv
cmp
jecxz
mov
shr
repnz
shll
cmp
cmp
fidivs
lock
clc
ds
fdivr
cli
mov
xchg
test
jmp
aam
out
sar
loope
add
cmc
aad
test
nop
icebp
ljmp
ret
out
call
std
lock
std
fcmovu
movb
aad
shl
fsubr
not
xlat
cmpl
in
loop
adc
in
int3
leave
roll
out
in
jecxz,pn
out
fcomp
into
div
in
dec
ret
idivl
ljmp
xchg
out
lret
loopne
xor
xor
call
shl
repnz
aam
aam
in
fsub
out
mov
shr
les
xor
fsincos
enter
jmp
cmp
out
cli
lds
iret
mov
ror
shr
xor
test
lret
aas
ret
stc
movl
in
enter
cmc
in
rcr
in
fucomip
clc
frstpm(287
shl
mov
fmulp
call
out
out
cs
aad
ret
cmc
jmp
aam
ds
hlt
les
fsubr
in
jmp
cmp
ljmp
lret
cmpb
into
test
fcmovu
aam
jmp
in
nop
adcb
out
cmp
cmc
in
ffreep
clc
mov
ror
fyl2xp1
out
test
incl
mov
iret
fcmovne
xor
fldl
fsubrp
orb
icebp
rcl
les
xor
aaa
aaa
ss
lock
test
fcmovu
ljmp
divl
in
iret
ror
cmc
cmp
cmp
idiv
ffreep
jmp
out
fcoml
xor
shl
xor
hlt
test
loopne
aaa
rcr
stc
fadd
adc
mov
out
mov
loope
lock
fidivrl
cmp
not
fprem
xlat
out
test
imul
lret
fisttps
ret
lret
cmp
rcl
aaa
out
into
sarl
aaa
cmc
sti
icebp
ror
repnz
jmp
loope
repz
xor
not
ljmp
cmp
loope
out
push
fimuls
imul
fdivrs
sarl
rcl
fnstsw
ret
std
rcl
xchg
jecxz
add
loop
repnz
ret
mul
shl
xor
sarl
ds
vpsubsb
loop
mov
ret
ret
shr
cmp
xor
cld
fmul
loopne
loop
ffree
add
xchg
repnz
in
leave
in
fld1
clc
cmp
out
fcom
call
mov
lret
xchg
jmp
leave
xor
cld
fnstenv
or
fucomp
ficoml
ror
jmp
repz
aad
xlat
stc
in
cmpl
test
jmp
sbb
mov
jmp
call
hlt
shl
xlat
rol
rcr
fimuls
iret
xchg
mov
shl
sar
aaa
sarb
out
fmul
testb
rolb
movb
sub
fsubr
jmp
shlb
shl
cmp
out
faddp
ret
adc
loopne
fldl
rolb
loope
repz
sti
shl
in
std
fdiv
shr
mov
out
fmull
shl
shll
xor
jmp
stc
cli
xor
lea
jmp
rcl
int3
iret
rol
shll
or
ljmp
jl
stc
leave
aam
int
jecxz
lock
loopne
clc
aad
stc
sar
sti
call
icebp
fiadds
aam
adcb
cs
aad
cmp
lret
stc
sarb
test
std
cld
hlt
faddp
fadds
nop
jecxz
jecxz
leave
sub
fcmovnbe
shr
shl
repz
int3
loopne
fcomp
enter
jecxz
xchg
mov
iret
xchg
loop
lret
ret
cmc
jmp
sar
fndisi(8087
lret
test
xchg
std
xchg
in
leave
fnstcw
cmp
enter
in
out
ds
cli
test
fdivr
fsub
into
repz
lock
fyl2x
xor
loope
fcmovnb
orb
clc
sti
in
out
ror
call
repz
repnz
cmp
cld
roll
clc
xlat
div
mov
in
fadd
shl
lock
sub
call
ss
cmp
call
icebp
test
fadd
popl
xchg
std
jmp
cmp
in
in
cmp
testb
fcmovbe
fcmovnbe
in
mov
jecxz
fcmovu
loop
in
stc
ret
enter
fdivr
sarb
incl
cld
hlt
in
cld
into
loop
out
xchg
in
int3
xor
int3
sti
not
ljmp
in
fcomip
xlat
faddp
lret
call
loope
out
loope
aaa
cmc
cmp
repz
cmp
shl
cmc
fiaddl
xchg
int
fmul
in
ret
jmp
xor
shr
fxch
clc
fucom
sti
mov
xchg
mov
enter
shl
into
out
fnstenv
aad
shr
enter
xor
push
ret
shr
cmp
cld
and
nop
repnz
cmp
xor
cmp
clc
cli
enter
cli
aam
loopne
loop
loope
int3
fsubr
mov
lock
xchg
rcl
not
int3
lret
cmp
xor
hlt
aas
in
clc
test
shl
or
enter
jmp
jecxz
jecxz
repnz
call
clc
out
mov
in
adcl
in
xor
in
hlt
shr
in
roll
aas
fiaddl
fdivp
loope
das
shl
jmp
aaa
test
enter
sub
mov
xlat
in
std
xchg
int3
out
xchg
ret
shll
enter
iret
stc
cli
fsubp
std
std
rol
les
mov
lret
xchg
leave
aam
cmp
ss
in
repz
testb
out
int
repz
xchg
lock
repz
ds
xlat
xlat
loop
xlat
in
mov
int3
lock
or
sub
in
hlt
cmc
cli
stc
and
ds
in
int
jecxz
lret
in
mov
mov
sub
call
iret
leave
cmp
call
fsubr
test
fcmovbe
std
add
rcr
fcmovbe
cld
fxch
lret
clc
in
ljmp
loop
cli
fisttpl
loop
in
loope
leave
rol
in
xor
xor
clc
call
ret
lock
loope
test
jmp
ret
fdivr
fcomi
sarl
faddl
fcmovb
rcl
adc
xlat
fcmove
jmp
in
mov
lret
lret
jecxz
fcmovnu
rcr
shr
cmp
loopne
rol
ret
shl
int
cmc
lock
stc
lret
aaa
fstp
std
or
ret
aam
out
std
test
in
in
fsubr
ljmp
out
repz
aad
aas
stc
out
into
cld
aam
out
testl
lret
neg
into
cli
lret
rcr
clc
jecxz
fcom
cmp
jmp
std
cmp
mov
repnz
out
enter
xlat
stc
clc
stc
cmp
sti
or
xor
out
cmp
loopne
filds
cs
call
cmp
cmp
addl
neg
ffree
lock
mov
aad
test
out
rcl
lret
ret
int3
rol
incb
std
rorb
xlat
ds
divl
call
loop
test
cmc
fadds
popl
icebp
jmp
fyl2x
aas
into
cmp
fcos
lds
test
clc
and
into
sub
mov
movzwl
cmp
jmp
lret
rcr
int
orb
cwtl
add
ss
sarl
jl
iret
loopne
loope
sub
jmp
loope
repz
loop
out
rcl
fldl
jmp
shr
lret
cmp
ljmp
ret
jmp
aad
xchg
in
incb
in
xor
xor
clc
in
out
cli
loope
shl
incl
loope
fcomp
xchg
and
cld
xchg
cmp
aam
xlat
imul
fld
loop
div
fdivrl
sbb
int3
test
xchg
out
shl
xchg
xor
xor
fnstenv
enter
clc
shl
mov
cli
in
fsubp
xchg
ror
leave
xor
xor
ljmp
int
rol
rol
mov
stc
leave
ljmp
xor
in
fucomi
leave
ss
cmp
xlat
stc
fidivrs
cli
xchg
sti
in
fdivr
out
xchg
jmp
sub
ror
in
lock
cmp
shl
ror
div
aad
cli
out
loopne
sti
ficoml
aaa
rcr
clc
cmp
adc
aas
sbb
in
testl
iret
aad
loop
repz
lret
fcmovnbe
fld
jmp
enter
int
fucomip
into
into
ss
hlt
lret
rcr
icebp
stc
jecxz
cmp
repz
clc
mov
mov
in
out
mov
repnz
in
out
fld
clc
loope
shl
cmpl
enter
loop
repz
loope
rcl
sar
idiv
into
out
aam
std
inc
aas
fadd
out
sti
test
into
xor
sub
shr
icebp
fnstsw
ljmp
fdivr
adc
cli
xlat
and
fcomp
jmp
mov
nop
int
jecxz
test
push
cmp
repnz
testb
loope
in
xlat
into
out
aad
std
jmp
out
rcl
aad
inc
loopne
in
mov
ror
xor
xor
xor
out
fnstcw
out
div
fildl
loopne
loope
or
fcomip
loopne
ret
aad
xor
lret
xor
std
out
repnz
xlat
popl
lock
loop
call
cli
lret
cld
jecxz
fsub
fmuls
call
xchg
repz
shr
cld
hlt
fdiv
out
cmp
div
sbb
sub
mov
xchg
in
ss
ret
xor
lret
fcmovnbe
aad
int
ss
repz
enter
mov
xchg
enter
sub
out
xor
ss
fsubr
cli
rcl
loopne
std
test
lock
aad
sub
in
shl
aam
in
jecxz
ss
hlt
loope
test
mov
xchg
test
hlt
leave
cmp
leave
idivl
ror
fcom
ds
xor
aad
out
lret
sbb
roll
in
in
icebp
cmp
sti
int3
fstpt
lret
cmpb
and
std
cli
lret
call
xor
das
jmp
cmp
cmp
clc
aad
xorb
fisttpll
jmp
in
out
test
jecxz
lret
shl
cmp
leave
or
loopne
aas
fldl2t
and
loop
in
ljmp
lock
lret
in
ror
lock
cmp
aad
repz
cmc
test
in
icebp
mov
fcomp
lret
jmp
repnz
iret
and
repnz
aam
xlat
xchg
ret
stc
out
repz
icebp
out
cmc
loope
sbb
cmp
cmc
call
in
jmp
xor
sti
enter
xor
sbb
hlt
cli
orb
jmp
lds
shll
cmp
lock
shl
loope
mov
cmc
lea
out
ljmp
loop
ljmp
push
loope
shl
bnd
loopne
fmul
leave
mov
out
repz
clc
std
int
loope
hlt
cmp
jmp
mov
test
iret
fcmovb
out
loop
xor
xlat
fdivs
cmp
in
clc
testl
xchg
loop
lock
out
xor
enter
rcr
cmp
cmp
ret
out
cld
and
in
loopne
inc
adc
mov
cld
jg
xor
sub
jmp
rcl
rcr
fcmovbe
xlat
ja
inc
mov
fadd
jl
addb
jl
lret
les
loopne
repz
fucomp
cmp
out
fisttpll
jmp
in
xlat
in
out
stc
xor
clc
repz
in
repnz
ret
aam
sti
cli
lock
icebp
out
ror
ror
rol
repz
fst
hlt
aad
or
movb
in
repz
incb
les
jmp
cld
out
cli
std
cmpl
cmp
out
sbb
incl
shl
fdiv
aad
call
ds
in
fstp
call
enter
fcmovnbe
std
hlt
xlat
idiv
cmc
int3
cld
rcl
test
ret
aam
fmulp
out
mov
out
in
ds
in
fidivl
clc
icebp
out
cmp
aam
lret
in
int3
mov
cmc
test
jmp
cmp
clc
shr
lret
into
loopne
int
in
aam
incl
aam
in
mov
lock
in
push
rcl
std
aas
out
cmp
lock
mov
shl
out
xchg
loopne
int3
loope
repz
fdivs
ds
shl
clc
rcr
stc
xlat
in
lret
out
loopne
std
lret
or
aaa
lret
out
clc
or
idiv
rcl
repnz
clc
out
int
repz
xor
leave
fstp
fst
ds
ss
repz
ret
loope
sub
mov
repz
mov
in
not
aam
repnz
enter
sar
loope
out
fcmovu
clc
cld
fisttps
loope
shll
xor
ss
fstpt
into
ds
fidivrl
fsub
cmp
aam
add
addb
in
div
in
fucomi
fidivs
call
cmp
not
add
cld
std
ljmp
cmc
cmp
xor
clc
ds
clc
out
fsubr
cmp
jmp
fsub
loope
jmp
lock
in
aaa
int3
lret
aaa
loopne
ret
out
les
jecxz
xchg
imull
cmc
jmp
fiadds
jmp
ljmp
mov
int
loopne
shll
std
shl
out
ds
ss
cli
mov
std
test
loopne
dec
dec
in
shl
sub
cld
out
icebp
clc
lret
loop
cmp
cld
cli
idiv
in
rcr
lret
fcmovbe
test
das
out
sti
out
ljmp
hlt
cmp
loope
sar
mov
mov
ret
aam
aam
dec
aam
cmp
in
jmp
mov
lea
jecxz
rcr
xor
jmp
cmpb
lock
lret
clc
fld
filds
rol
enter
out
leave
lock
idiv
test
fadd
add
fsub
xchg
lock
in
jmp
lret
xor
out
ss
jecxz
xor
out
fcomi
clc
cmc
test
sti
in
test
add
ror
xor
lret
cmp
repnz
cmp
in
icebp
not
loopne
test
out
repnz
decl
loop
test
loopne
ret
icebp
cmp
in
stc
call
cli
fcom
xchg
and
in
out
mov
fcmovnbe
std
icebp
shll
out
repnz
jmp
stc
shll
ret
test
fdiv
hlt
ljmp
sti
iret
xchg
fildll
cmc
jmp
into
iret
cld
loop
out
ffreep
loope
call
cld
ljmp
sti
aad
out
out
into
loope
rcl
icebp
cmc
lock
fdivrp
les
loop
jmp
mov
in
into
out
repz
clc
cmp
rcl
loope
ds
flds
mov
test
xchg
aas
sub
int
xor
std
fcmovnbe
std
cmp
push
rolb
flds
jmp
out
hlt
jmp
fnstcw
int
int3
lret
cmp
cmp
shl
lock
int3
cli
fsubp
mov
into
cmc
loopne
call
shl
int
ret
faddp
repnz
fimuls
xchg
fimuls
cs
cmc
out
lret
aaa
repz
ss
adc
std
call
shl
xchg
loop
hlt
ror
in
fmul
xor
ljmp
in
fidivrl
jmp
and
lea
hlt
stc
sub
mov
jmp
jmp
rcl
rol
fstp
xchg
fs
enter
add
fst
repz
iret
in
xor
hlt
leave
in
jecxz
int
and
call
ss
out
ret
fidivrl
cmp
in
decb
repnz
leave
fdivp
out
sub
out
int3
jecxz
xbegin
mov
mov
loopne
int
into
pushl
leave
cmp
std
int3
fcmovnbe
cmp
fcmovnbe
hlt
repnz
fnstenv
out
shl
lret
fsub
fadds
adc
stc
aas
mov
cld
jmp
or
aad
loope
jmp
cmp
fucomp
jecxz
out
fstpt
cld
mov
iret
lret
repz
cmp
icebp
repnz
test
loope
cmp
jecxz
out
xchg
ret
shl
repnz
jmp
cmc
xlat
loopne
test
fst
mov
push
out
rorb
int
stc
lret
fcomp
iret
shl
int3
lret
lock
mov
test
int
in
lret
cli
xchg
in
sub
lock
lret
fdivr
cmp
in
call
fmull
jmp
aaa
aam
lret
fdivrs
rcr
loopne
mov
sti
adcb
cld
xor
in
iret
aaa
clc
in
ss
std
repnz
in
sti
lea
addb
hlt
icebp
jmp
xlat
cmp
ljmp
sar
sti
clc
int
jecxz
int3
jmp
into
rcl
xor
int3
loopne,pt
loope
les
sar
out
fmul
xorl
out
cld
xor
fnstcw
idivl
rcl
clc
cmp
jecxz
sti
into
jecxz
mov
ds
shr
icebp
xlat
cmp
cmp
fldl
rol
aas
loop
out
icebp
out
rcr
hlt
das
ss
ds
out
aam
fdivrp
jmp
xchg
xor
lock
clc
enter
cld
cmp
cmpl
fdivrp
out
fildl
call
icebp
aaa
aam
repz
rcl
shl
in
fcomp
fucom
loopne
int
test
cld
leave
int
or
stc
ss
xor
cmc
clc
aaa
clc
int
fsubrp
repnz
leave
cmc
mov
xchg
mov
loopne
ret
int
xor
xor
cmp
cmp
repnz
repnz
cmc
cmp
into
enter
aam
out
aad
cld
out
fucomp
fidivrs
fadds
loopne
hlt
mov
out
out
mov
iret
mov
enter
cmp
lret
filds
in
leave
aad
faddp
clc
fcmovu
rorl
jmp
fmul
xlat
fsubr
fcmovnb
in
out
aam
loopne
fucom
orb
fdiv
repnz
out
fnstenv
in
cmp
test
hlt
icebp
fadd
xlat
out
sbb
int3
cli
rcl
ljmp
out
xor
fdivp
rcr
addb
in
in
sti
ret
call
xor
sarl
lret
fdivrl
cli
std
fucom
loopne
ret
movb
mov
jmp
out
cmp
cmp
aad
lock
sar
and
xchg
cli
cld
cli
jmp
in
ret
lret
test
iret
xor
ret
stc
in
not
int3
rcl
aam
loop
lock
cli
hlt
in
dec
xchg
icebp
test
test
xlat
cs
out
ret
loop
leave
ljmp
mov
loop
sub
rol
cld
ss
leave
sarb
in
repnz
ror
in
cmp
sti
fmull
int3
shl
clc
int3
in
repnz
lret
cmp
xchg
test
fldl
fiaddl
aaa
int3
xor
out
shl
lret
loop
loopne
fcmovnu
clc
fcomp
xchg
in
mov
cmp
out
cmp
clc
loopne
stc
in
aam
and
cmp
ljmp
xlat
xlat
lock
cmp
out
out
repz
loopne
aad
testl
test
cmp
int
fcmovbe
ror
sti
loope
repz
out
or
repz
out
xor
xor
in
in
jmp
cmp
lea
mov
jmp
mov
lret
fnstenv
inc
add
call
add
aam
test
rolb
int3
rcr
int3
xchg
nop
in
sub
int
fnstenv
aaa
call
aad
xlat
in
fldl
flds
rcr
out
loope
out
out
into
clc
cmp
lret
fmul
rcl
in
loop
jmp
int
std
int
leave
fmulp
loop
shr
out
hlt
neg
lret
xor
sti
xlat
out
aam
clc
clc
clc
jmp
fmuls
loope
in
ret
rol
cmp
out
repz
int
int3
fistpll
addb
lret
or
iret
out
sub
in
icebp
div
iret
xor
repnz
sar
test
jmp
fildl
mov
das
loop
not
in
xlat
roll
fildl
out
in
mov
shl
loopne
out
ljmp
loop
in
icebp
fsubr
xchg
mov
or
test
icebp
hlt
bnd
out
rcl
fnstsw
sarl
sti
clc
lock
repnz
jmp
iret
mov
imull
enter
xor
cmp
aaa
in
fndisi(8087
hlt
cli
inc
mov
out
out
aad
ret
cmp
hlt
icebp
and
aas
cmp
std
in
out
test
int
in
lds
clc
xor
idivb
cli
jecxz
loop
hlt
stc
in
test
leave
xchg
jmp
icebp
xor
ftst
div
adc
ror
xlat
enter
fcmovnu
xchg
lret
out
out
xor
cmc
hlt
cmp
in
or
xlat
mul
imul
loope
out
icebp
lret
jecxz
cmp
fidivl
cld
int3
ljmp
fcmovb
rolb
sub
xchg
nop
test
shr
cmc
hlt
fcom
cmp
clc
cli
in
ljmp
cmp
xlat
out
int
lret
nop
jecxz
in
out
int3
loop
jmp
ds
shl
rcr
xchg
idiv
out
shl
loope
lret
cmp
aad
das
in
xlat
aam
cmp
imul
fiaddl
les
nop
shl
xchg
lock
ss
shll
xor
cmp
loope
iret
cld
test
rcl
div
std
cld
fiaddl
repz
ss
sar
xor
enter
jecxz
aad
repnz
mov
fsub
clc
ljmp
in
xor
leave
int
out
lret
idiv
jmp
loop
call
dec
loopne
mov
mov
shl
leave
test
cmp
xlat
clc
repz
loopne
mov
aam
lret
lds
xchg
leave
stc
shl
icebp
sarl
xor
loopne
roll
loopne
fstp
in
std
adc
mul
clc
cmc
cmp
ljmp
cmp
in
cli
out
fmulp
int
mov
into
fdivp
in
call
cmp
sbb
lock
jmp
cmp
sbb
iret
int3
xlat
fxch
cli
int3
clc
shll
idiv
fcomi
sti
mov
int
leave
int3
leave
icebp
xchg
icebp
out
stc
out
lock
hlt
into
int3
neg
std
cmp
call
loop
xchg
sti
into
aad
leave
in
xor
aad
lret
out
roll
test
clc
in
std
in
shr
sti
lret
icebp
shll
neg
fcmovne
rcl
xlat
iret
mov
loope
cli
xchg
icebp
out
lret
shl
cli
in
in
hlt
cmp
cmpb
loopne
rol
fdiv
incl
xchg
int
mov
fmul
jmp
shr
sti
iret
cld
cmp
in
std
cmp
leave
fmulp
call
test
iret
cmc
test
out
ss
fmul
stc
rol
in
int
test
xchg
in
aas
mov
out
mov
jecxz
lock
aam
in
hlt
enter
lock
ret
cmc
rorb
leave
mov
aam
cmc
cs
xor
in
std
xlat
divb
xor
into
out
addl
loop
in
repnz
aaa
bnd
clc
icebp
cmp
cmc
cmp
lock
test
out
loope
leave
cld
xrelease
into
xor
out
shr
aaa
repz
cld
mov
stc
ret
in
int
rcl
int3
cmc
out
jmp
in
xor
cmc
cmp
in
je
mov
jmp
ror
lret
int
loopne
and
outsb
sarl
add
xchg
lret
stc
flds
xchg
cmc
repnz
int
iret
cmp
lret
enter
ret
xchg
iret
in
cli
rorb
loop
leave
ljmp
mul
sti
clc
loop
call
ljmp
in
cmc
ror
hlt
xlat
cmp
aad
sti
out
icebp
out
idivb
lret
ljmp
in
into
clc
test
ljmp
stc
aam
clc
aam
fsubr
loopne
into
div
into
call
call
int3
rol
loop
neg
neg
call
nop
lock
loop
fdiv
dec
lret
add
ffreep
loope
mov
xchg
xlat
clc
in
rcr
idiv
lock
repz
loopne
idiv
repnz
clc
stc
sar
lds
ret
shl
hlt
sarl
fcompp
shl
repnz
loope
fadds
cld
in
std
adcl
xor
leave
fnstsw
in
iret
sti
aad
sti
decl
mov
shll
leave
out
out
aam
xor
ffree
lds
iret
icebp
xor
aam
jecxz
aaa
sti
lock
in
jecxz
std
repnz
aam
int
lret
test
fisttpl
ss
lret
add
stc
fnstcw
icebp
in
fcmovnbe
ror
out
orb
aam
xor
xor
in
xor
aas
cmp
fcomip
fdivrp
cmp
leave
fldl2e
lret
jmp
call
ds
out
sarb
hlt
loopne
cmp
sar
aam
imul
lret
jmp
mov
loope
loop
cmp
leave
ds
push
cmp
out
stc
sti
add
enter
loopne
in
xorl
aam
cmp
aaa
out
aas
aad
sti
out
test
ds
cmp
ljmp
icebp
jmp
loop
in
neg
shr
shl
sti
rol
aad
loop
loopne
int3
mov
nop
into
in
lock
loop
xor
int3
int3
sti
xlat
loop
incb
test
xchg
out
iret
mov
sub
aad
leave
cli
fxch
hlt
in
cmc
fdivrs
xor
fxtract
into
lret
call
enter
cmp
lock
cmp
stc
xor
out
xor
stc
jecxz
cli
xchg
loop
loop
rol
xlat
in
leave
leave
ds
cld
cld
cmp
test
aas
fmuls
jecxz
out
lret
repnz
lret
test
cmp
aad
incb
rorl
xchg
xor
divb
divl
lret
fcmovu
not
fabs
stc
rcl
lret
loopne
int
mov
xchg
xchg
jmp
rcl
out
aad
xlat
in
lock
repz
fistpll
fadd
fisttpl
loop
fdivrp
ss
clc
int3
cmc
into
lock
enter
cli
clc
fcmovnu
addl
int
enter
jecxz
aam
loop
fdivs
push
call
out
cmc
call
clc
dec
shl
icebp
xchg
in
loop
in
rol
leave
aaa
aad
cmp
mov
leave
std
call
in
cmc
ret
cmp
fucomip
aas
rcl
shl
hlt
imul
loope
lret
in
out
call
jecxz
lock
cli
cmp
xor
fmul
fstp
test
not
cmp
fdivrp
int3
xchg
out
mov
rcl
xlat
cmp
idiv
std
std
clc
idivl
cmp
ret
int3
mov
test
ror
repnz
fdivrl
int
fidivrs
sarb
jmp
in
jmp
icebp
lret
out
int3
cmc
or
lock
fcom
cld
ds
out
shl
ret
loop
mov
out
icebp
in
ficoms
repnz
enter
lret
aas
xor
jmp
xchg
out
iret
mov
xchg
mov
in
imul
into
les
out
ss
int3
fdivr
sbb
jmp
xchg
into
sti
test
test
shll
cli
neg
jmp
cmc
aad
sti
sar
in
idiv
out
mov
loopne
aaa
lret
lret
cmp
cld
shl
stc
repz
rol
mov
stc
movl
jmp
jmp
ret
lret
enter
dec
mov
pop
hlt
jl
addb
jl
sti
cli
fcmovnu
push
ljmp
in
clc
std
loopne
lret
ret
fxch
sar
cmc
call
icebp
mov
mov
repnz
lret
lock
enter
out
ret
cmp
test
fcos
adc
loopne
mov
rcll
enter
divb
stc
cmp
fcmovu
out
fcomi
fld
mov
int
nop
fstp
ljmp
out
out
iret
int
cmp
adc
into
repnz
sti
out
cld
test
loop
int3
enter
xlat
sbb
loop
loopne
xchg
lret
out
jmp
jmp
clc
sbb
repnz
jmp
in
xchg
xchg
rcr
ffreep
lret
leave
in
iret
in
enter
lock
xlat
cmp
test
ret
cld
jmp
imul
out
mov
int3
sub
xor
xor
cmc
incl
repnz
fcmovnb
in
rorl
aam
fcmovnbe
in
idivb
into
jecxz
cld
in
aad
repnz
out
test
loopne
loopne
xchg
shr
fmulp
rcr
ss
ffree
cmp
aam
aam
ret
jmp
fiadds
enter
enter
cmp
sar
xlat
repz
cld
fst
addl
int
lock
int3
repnz
sub
enter
ljmp
repnz
fneni(8087
mov
cld
out
mov
aam
xor
rcl
std
cmp
neg
into
into
cmp
ret
loopne
mov
fldl2e
loope
test
call
sti
enter
aam
cmp
out
leave
enter
fucomi
dec
mov
ljmp
out
xor
lret
cmp
cli
fnclex
std
sti
sti
hlt
cmp
mov
mov
mov
repnz
cli
aam
xlat
xlat
shr
repnz
xchg
aad
imul
sbb
std
mov
jmp
xor
in
shll
int
out
shr
cmp
loop
ftst
add
cmp
roll
xor
ss
out
rcl
cld
cmp
loop
fucompp
mov
testb
mov
into
sti
xor
std
cmp
hlt
leave
clc
in
cld
lock
fsubrp
fstl
sti
in
out
aad
repz
cmp
leave
mov
jecxz
in
in
ljmp
stc
repz
loopne
cmp
ret
jmp
jmp
loopne
in
orb
stc
rcl
xor
fcmovu
aam
fcmovnu
div
out
loopne
cmp
stc
mov
iret
imul
fsubr
loope
ljmp
clc
rcr
in
cmp
cmp
out
ret
in
stc
xlat
out
loopne
fdivr
rcr
in
jmp
iret
fdivr
ret
repnz
fucomp
in
sar
xlat
out
jecxz
fsubp
jmp
jecxz
lret
shl
cmp
ljmp
cld
xchg
orb
subl
rcr
fbstp
int3
cmp
int3
in
jmp
mov
mov
loop
in
enter
fptan
in
cmp
in
ret
cli
mov
xabort
test
addb
jmp
aaa
out
call
loop
clc
ret
repnz
in
lret
mov
nop
aad
bnd
jmp
cli
leave
clc
lret
rol
fisttpll
loope
in
in
orl
shr
std
out
ds
sar
hlt
iret
faddl
mov
out
and
sub
lret
fdivs
icebp
iret
fadd
repnz
fidivs
fistpll
repz
mov
out
not
cmp
out
cmc
stc
aam
stc
cmp
sti
neg
shl
std
mov
fldpi
jmp
xchg
into
in
loope
xor
lret
sar
aas
incl
ljmp
fsubr
lret
xchg
shlb
into
fcmovnb
xor
cs
clc
in
xor
in
cld
fdivp
mov
stc
test
clc
loopne
leave
xchg
ljmp
cmp
call
shlb
xor
rolb
enter
xchg
xchg
lret
int3
out
imul
int
loope
ret
cmp
std
and
int
ljmp
sahf
add
add
rcl
aad
lret
enter
repnz
jl
add
out
out
aaa
icebp
loop
sti
in
aam
neg
cli
sub
shl
loope
loop
in
into
rorl
ret
mul
jmp
fndisi(8087
out
roll
dec
loopne
jmp
mov
sub
in
hlt
out
aas
enter
rcr
repz
fdivr
test
clc
mov
jmp
cs
cli
les
pushl
in
xor
sub
std
stc
repnz
fld
xor
xor
not
xor
imul
ret
fildl
fadd
out
in
icebp
enter
not
ret
cmp
cmp
stc
add
shl
ljmp
xchg
xchg
fldl2t
ss
ljmp
icebp
aas
icebp
stc
aad
fcomip
jecxz
fists
ret
lds
sub
aad
ss
cmp
icebp
lock
out
fdivp
loope
out
mov
mov
call
lock
les
aas
lock
xchg
in
hlt
sti
xchg
in
sub
cmc
mov
aad
xor
cmp
ljmp
rcl
cld
loop
vpmulhuw
jecxz
neg
xchg
cmc
cmc
xchg
loopne,pt
out
mov
cmp
idivb
loopne
fnstcw
xchg
fcmove
mov
hlt
cli
cmc
xor
leave
rcr
cmp
iret
out
cmc
aad
fisttps
shl
xor
lret
in
out
cld
iret
lret
clc
fmul
loope
in
div
cld
orb
sub
aaa
xlat
xlat
fsub
lret
out
cli
stc
loopne
iret
rol
fcom
repnz
aam
xchg
mov
iret
call
xor
repz
aad
aad
ror
enter
fldl
xlat
mov
cmc
cmc
in
call
cmp
stc
aaa
sti
ds
call
lret
faddl
out
int
test
lock
ffree
xchg
xlat
flds
out
ljmp
xlat
out
xlat
cld
cmp
xor
hlt
ror
test
addl
mov
shl
in
ljmp
fnstenv
shl
std
sub
fcmovne
out
loopne
cmc
lock
shl
repz
aad
rol
loop
and
repz
xchg
lret
out
mov
loop
in
shl
int3
cmp
shl
xchg
shl
jmp
xchg
test
rorb
icebp
into
idivl
aaa
int
lret
in
icebp
shl
sbb
cli
leave
sti
mov
loop
icebp
xchg
in
leave
cmp
cli
cmp
idiv
stc
cld
iret
xorl
aad
faddl
enter
repz
ljmp
repnz
repnz
cmpb
clc
loop
int
movb
aad
xor
enter
stc
out
in
fiaddl
lock
cmp
out
fcmovnbe
cli
jmp
shrb
sti
loopne
ret
repz
xchg
out
cmc
in
lret
rcll
iret
lds
in
std
cld
lret
test
mov
hlt
orb
test
jmp
out
xor
ss
rcr
cld
sarb
testb
out
lret
out
enter
shr
shl
shll
in
aaa
lock
sarl
sbb
testl
repz
bnd
sti
cmp
sub
xchg
xchg
fldl
xchg
jmp
xchg
aad
out
into
div
call
fincstp
cmc
xlat
ret
out
sbb
loopne
loope
shr
aaa
hlt
fucom
stc
jmp
sarb
loopne
shl
ljmp
out
into
mov
out
les
into
cmp
jecxz
in
icebp
in
mov
clc
ret
jecxz
mov
cs
vaddsubps
mul
repnz
xorl
shl
fstp
cmp
mov
out
jmp
loop
cmc
xor
lock
enter
in
in
cld
xlat
addb
stc
xchg
int
popl
ljmp
stc
fldln2
cmp
cmp
lock
clc
shl
out
mov
mov
shl
aam
aam
mov
xor
add
jmp
rol
rcr
jbe
dec
dec
addb
jl
iret
jmp
std
cmp
xchg
stc
xchg
sti
incb
repnz
iret
ljmp
cmp
into
ret
rol
aad
aad
xlat
loop
fucomip
out
out
jmp
cmp
out
std
out
aas
out
cmp
aam
shl
call
stc
mov
shr
cmc
enter
shr
xor
in
out
hlt
repnz
jecxz
and
std
test
enter
repz
fscale
lock
cmp
in
cld
xor
loope
test
shr
xchg
cli
xlat
in
loopne
xchg
sar
out
aaa
repz
lock
ljmp
push
in
in
mov
out
out
out
in
loop
sub
in
stc
xlat
ss
lock
sar
repz
fdivrp
leave
loope
test
lret
int3
jmp
jmp
fdivs
ljmp
rcl
aas
fcmovu
loop
jmp
stc
sti
int3
cmp
out
loop
loope
ljmp
int3
cmp
sar
aam
ds
aad
filds
in
test
xor
in
clc
aas
hlt
xlat
sarl
fisttps
fcmovu
sub
int
aaa
xor
cmp
clc
aas
cli
ds
fdivr
ret
int3
xchg
lret
mov
in
enter
sar
xor
cmp
test
jmp
stc
test
out
nop
fsub
call
rcl
icebp
int3
aaa
aam
stc
xlat
aam
ret
std
cmp
lds
and
les
lret
rol
cmp
fcmovne
std
cmp
out
aad
out
cld
call
xchg
repnz
idivb
cmc
xlat
call
enter
ret
jmp
ret
lret
std
ficoms
mov
imull
xor
cmp
std
or
ds
ds
mov
in
lret
in
faddp
lock
mov
repz
ret
aam
xor
xlat
hlt
into
ror
cmp
fadd
stc
fiadds
cld
cld
loopne
aam
aad
in
aad
fdiv
shl
test
mov
ret
loope
test
ror
ret
in
out
test
loop
loop
rcr
in
into
out
rcll
not
std
rcr
call
loopne
out
fsubrp
ljmp
iret
lret
icebp
cmc
ljmp
cld
fadds
cmc
ret
int
test
fmul
icebp
cld
in
out
xor
clc
iret
cmp
out
sti
cld
cmc
testb
addl
xor
xor
stc
repnz
cmp
and
test
in
incb
rcl
enter
out
call
fcom
aam
fadd
in
lret
ret
xchg
mov
repnz
aaa
shll
xor
sti
fcomi
rolb
incb
xchg
lret
cli
test
fimuls
cmc
iret
neg
fcomi
int
sar
cmp
sbb
ret
fmul
xchg
in
dec
xchg
sti
into
imul
aas
clc
ss
fucom
test
xchg
stc
fiadds
call
xor
repz
test
cld
loop
ds
hlt
flds
std
sub
fxch
aad
repnz
sarl
loope
repz
fdivrl
loop
lock
mov
sti
int
in
iret
orb
repnz
repz
lock
ret
stc
shl
xor
mov
fprem
lret
icebp
mov
test
lret
fdivrl
ljmp
rol
fisttps
call
icebp
mul
in
lock
cli
les
hlt
iret
hlt
cmp
clc
xchg
leave
movb
cli
lock
in
int
fnsetpm(287
out
hlt
sar
ss
fdivr
aas
cmp
mov
div
or
mov
xchg
cs
clc
xor
leave
shll
cmp
rcl
in
xchg
loope
int
loopne
jecxz
xchg
in
in
cmc
not
lret
divl
fsubp
iret
int
clc
roll
in
icebp
leave
int
mov
out
stc
jmp
loop
test
clc
fdivp
cli
jmp
ret
mov
lock
ret
ss
ss
cmp
je
mov
mov
mov
mov
lea
add
jmp
mov
fcmovnu
jnp
clc
mov
xchg
inc
lret
jl
addb
jl
ss
sti
fcmovbe
loopne
std
repz
lea
decb
in
jmp
leave
aad
xlat
int
fucomi
repz
ret
lret
xchg
jecxz
imul
enter
in
aad
fnsave
jecxz
sti
cli
in
idiv
jmp
jmp
xchg
icebp
repnz
xor
int3
rcl
in
shl
into
aas
loopne
fucom
mov
imul
enter
xor
sar
fucomp
adc
aam
mov
mov
xchg
mov
out
out
ljmp
cmp
xlat
fdiv
xchg
bnd
mov
test
mov
nop
or
in
test
hlt
in
jmp
aas
fiaddl
mov
xchg
loope
repnz
cmp
cmp
xor
ret
cld
std
leave
in
int
and
in
xchg
cld
xor
ss
in
lret
int3
out
into
in
jecxz
xchg
xchg
xchg
iret
lock
out
into
in
shl
jecxz
sub
ret
clc
fadd
cmp
xchg
flds
loop
out
fcmovnbe
cmp
idivl
xor
cmp
cld
clc
ds
rcl
leave
cld
call
cld
xchg
loop
in
xor
rcl
cmp
cmc
xor
cmp
in
aad
jmp
fcom
int3
fcmove
xchg
int
repnz
xlat
xor
cmp
std
in
call
mov
lret
in
cli
call
lret
int3
lret
rcl
lret
lret
in
lret
shll
out
shl
leave
addb
sti
in
out
lret
loop
icebp
xor
loope
cmp
ret
inc
repnz
leave
aad
in
fldl2t
out
xchg
xchg
aaa
xor
cmp
xlat
shr
cmp
jmp
add
cmp
mov
jmp
cmp
fimull
ror
in
cmp
int3
std
aam
fidivs
ret
fnop
shl
leave
cmc
enter
lret
lret
int3
jecxz
nop
hlt
into
xlat
sar
std
fidivrl
fld
leave
loopne
xchg
xlat
fcoml
sub
ret
cmc
jmp
in
cmc
aaa
xor
loopne
out
fadd
jmp
clc
movl
test
ret
fcom
sti
cli
fadds
rcr
cli
ljmp
xchg
int
xchg
imulb
vmovq
repz
aaa
rcl
sti
iret
repnz
loope
mul
loopne
xchg
call
shl
xor
fadd
ror
call
iret
clc
xchg
mov
cmc
aam
ror
sti
int3
xor
ret
call
int
repnz
fmul
test
les
loope
lea
jmp
std
hlt
cli
cmp
lret
out
test
ljmp
in
rcr
xor
enter
sti
fdivrl
cmp
loopne
cld
faddp
jecxz
clc
ret
test
fsubr
ljmp
loopne
ret
rcr
fcmovnu
cld
fucomp
clc
mov
out
clc
or
xchg
iret
das
cmp
clc
jmp
and
div
cmp
jmp
ljmp
divb
loop
out
hlt
in
sti
clc
rolb
fcmovnb
xlat
cli
int
mov
test
mov
ret
xor
repz
cmc
cld
idivl
out
jmp
fadd
jecxz
mov
cmc
out
out
jmp
cmp
rcl
icebp
bnd
out
leave
icebp
fdiv
ljmp
lock
jmp
call
fiadds
ljmp
in
ljmp
mul
ljmp
or
cli
and
test
in
out
mov
out
sub
ret
mul
jmp
out
push
fdivr
jecxz
repz
test
testl
loopne
jecxz
leave
aam
xor
aam
int3
out
test
jmp
incb
mov
in
cli
rcl
out
lock
mul
mov
std
test
and
loopne
lret
cmp
fcomip
clc
sti
loopne,pt
fmul
fcomp
loopne
out
sti
jmp
repnz
into
fprem
jmp
loop
test
mov
jmp
int
xlat
int3
int
cmc
or
mulb
call
jl
fucom
rolb
ljmp
lret
int3
xor
cmp
neg
ljmp
xchg
aas
fucomp
in
imul
leave
iret
mov
enter
cs
sti
int3
fcom
out
jmp
repz
hlt
fldl
in
iret
lock
in
aad
ss
cmp
cld
cld
in
ljmp
leave
ret
aad
stc
out
loopne
out
test
xor
shl
lock
fnsave
fidivrl
sti
cmp
addb
mov
div
in
xchg
int3
mov
int3
in
out
xor
enter
sti
imul
ds
cld
sbb
lock
ljmp
in
hlt
cld
call
ret
jmp
clc
sti
repnz
xlat
test
jmp
ret
loopne
cld
out
nop
icebp
not
fldcw
shlb
sti
cmp
rolb
leave
neg
nop
mov
stc
das
sar
sti
imul
cmc
rcl
ror
adc
sti
call
ret
ljmp
lock
fst
iret
cmc
ss
int3
lret
fcom
std
lock
loop
fsubr
out
loop
rcr
int3
xor
clc
ror
int
xor
testl
lds
fucomi
fdivp
cs
repnz
rcl
jmp
in
std
shl
ret
addb
movb
jmp
leave
div
out
cmp
leave
dec
jmp
out
sbb
cmc
cld
fsub
mov
cmp
icebp
clc
out
not
xor
fucomip
idivb
adc
jecxz
cld
jmp
icebp
xchg
shl
ret
in
hlt
xlat
int
leave
cmp
lret
test
fildl
into
into
xchg
lret
aaa
loope
int3
in
out
icebp
cmp
sar
loopne
fnstsw
out
cld
hlt
ret
into
adcl
aam
xor
shr
cmp
out
jmp
aad
fcmovnb
rcl
ds
adc
loope
fmulp
lret
ret
aad
ds
lock
fildl
xchg
add
int3
std
stc
repz
aad
cmp
std
hlt
mov
sti
jmp
addb
fcmovnb
shl
jmp
lock
ret
test
or
in
jmp
in
int
fsubr
sub
repnz
loope
out
clc
cmp
repnz
call
xor
cmp
jmp
out
clc
jmp
test
inc
les
in
fdiv
ret
test
test
xor
ss
aas
loop
loop
in
lret
mov
into
call
rol
in
shl
aas
ret
repnz
hlt
mov
mov
sub
xchg
shl
cs
aaa
out
clc
pushl
stc
hlt
mul
repnz
les
xchg
jecxz
xor
loope
cmc
sar
sti
cmp
int
neg
rcl
in
jecxz
cli
fiaddl
aad
out
repnz
stc
fld
fxch
clc
in
std
call
out
in
mov
ror
cs
fcmovb
cmp
sarl
push
cmp
aam
jmp
test
aad
cmc
in
repnz
leave
cmp
in
hlt
shl
cmp
repnz
xlat
test
jmp
lret
in
mul
xlat
ljmp
sti
loopne
out
jecxz
cmp
loop
xchg
loopne
out
icebp
out
xchg
out
dec
ljmp
int
cmp
stc
ljmp
aad
fsin
xchg
test
out
sti
ror
not
filds
jecxz
rcl
loope
hlt
and
nop
and
jecxz
fsub
std
cmp
lret
sti
fucom
icebp
inc
mov
xchg
fstp
mov
out
xchg
divl
ret
xor
cmp
in
xor
sbb
fmuls
cli
icebp
into
xchg
roll
clc
xor
out
fyl2xp1
shr
stc
test
xchg
iret
lea
lock
fcmovne
aad
fcmovne
int
xor
not
loop
hlt
xlat
cld
stc
loop
iret
mov
xlat
ljmp
sti
in
aam
into
in
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
jmp
leave
aam
fld
fpatan
cwtl
jp
out
inc
stc
adc
jl
addb
jl
loop
out
faddl
shl
aad
loop
iret
sarb
cmpl
test
rcr
jmp
out
orl
cmc
aad
out
bnd
cmp
cmp
in
bnd
xlat
leave
sti
fldl
loope
cs
imul
fucomi
iret
jmp
xor
out
lret
test
fst
stc
mov
out
xchg
int3
out
repz
fsub
hlt
fucom
cmp
ss
repnz
leave
fadd
orb
cli
lret
fdivp
loopne
jmp
icebp
cli
rolb
xor
jecxz
nop
test
jmp
fsubr
std
in
cmp
lock
jmp
repnz
mov
out
das
ret
clc
rcl
ljmp
hlt
repz
fidivrl
adc
jmp
ret
xchg
test
loopne
sub
les
ljmp
or
jecxz
loopne
std
out
test
out
jmp
out
in
fyl2xp1
cmp
cmp
fucom
sbb
fdivrp
fdivrp
in
mov
shl
out
xor
xor
fstpt
xor
aam
flds
incl
cli
in
lock
jecxz
out
lret
aad
in
sarl
iret
push
rolb
stc
lea
test
cmp
rcl
test
idivb
in
cli
in
div
fdivr
xchg
imul
fucomip
xchg
mov
int3
lret
call
cld
xor
cli
aad
mov
idiv
lds
test
cmc
loop
sub
fnstsw
out
cmp
neg
out
repz
xor
movl
ret
fcmovne
shl
int3
out
in
clc
shr
repz
dec
movb
enter
cld
xlat
sarb
enter
cmp
loope
test
out
ret
xchg
fdivr
repz
xchg
icebp
cmc
divl
ds
mov
out
test
xor
iret
jmp
lock
lret
cli
aad
loopne
enter
cmp
xchg
ret
aad
in
ljmp
aas
adc
and
mov
cli
fmulp
test
out
jmp
icebp
cmc
aaa
fdivrs
aaa
enter
sti
lock
fcomi
cmp
neg
fprem
cli
addb
in
int3
fstp
fcmovnu
cmp
incb
aad
std
std
ret
call
shr
loop
iret
fst
cld
shl
aad
in
aad
xrelease
test
cli
mov
in
call
cmc
lret
out
jecxz
jecxz
test
loope
lret
in
ds
loop
out
iret
xor
icebp
repz
ret
lret
fsub
lret
call
out
cmc
icebp
sub
fldlg2
int3
hlt
int3
xor
aad
cli
cmp
loopne
icebp
hlt
fimuls
fcomp
mov
leave
in
in
in
int
lret
xor
xlat
aad
cli
ds
mov
mov
out
shlb
repz
cld
lret
neg
in
cli
loop
repnz
std
lds
mov
repz
leave
fst
xlat
aad
shr
repnz
aam
add
int
xchg
in
icebp
jmp
out
xor
ss
out
iret
rcr
jecxz
fcomp
fcomp
fcmovbe
mov
test
ret
jecxz
shrb
ljmp
out
enter
test
xchg
repz
aaa
ljmp
in
in
loope
fcmovnb
icebp
xchg
sti
enter
in
lret
clc
fcmovne
nop
iret
fildll
stc
repz
ljmp
sarb
mov
repnz
jecxz
mov
repnz
ror
rol
jmp
sti
fucom
shl
faddp
in
xlat
enter
in
out
aaa
jmp
fst
cmp
addl
mov
call
lret
cld
in
rcl
fcmovne
int
call
call
clc
repz
mov
cld
jmp
xchg
ror
sar
int
lock
rcl
loop
std
shl
jecxz
ret
lret
std
add
jmp
ror
int
fcmove
mov
push
or
cwtl
repz
addb
jl
lret
hlt
dec
int
f2xm1
cli
fsubrs
stc
cmpl
ffree
hlt
xlat
enter
in
fisttps
repnz
out
ror
enter
shr
aaa
lock
shl
in
repz
aam
loopne
in
lret
out
sar
shl
shll
fcmovne
out
in
hlt
sar
cmp
stc
fsubrp
faddl
nop
jmp
out
iret
repz
cmp
sti
not
ljmp
mov
clc
loop
fiadds
in
stc
out
aaa
sar
cmp
aam
repnz
fdivrs
shl
ror
mov
into
loop
xchg
loopne
shl
div
cli
std
aas
hlt
cmp
cmp
in
loopne
rorl
or
in
in
out
xchg
ds
xor
xor
iret
repnz
into
cmp
ret
enter
loope
loopne
into
iret
orb
lret
fdivrs
cmpb
loop,pt
aad
mul
clc
leave
jecxz
out
lret
jecxz
loope
fucom
hlt
imul
cmp
fldl
jecxz
mov
out
iret
mov
ljmp
std
aas
testb
hlt
fidivrs
repnz
xchg
sti
loop
int
loopne
imul
xor
cli
fdivr
lock
lock
ljmp
in
lret
aad
in
into
leave
idivl
repz
fsubp
std
enter
fldl2t
in
shr
shl
hlt
in
shl
shl
lret
lock
xor
loopne
lds
out
mov
out
in
repz
shr
repnz
clc
ljmp
shr
jmp
loopne
inc
xlat
loop
std
in
ljmp
fnsetpm(287
fcmovnbe
shr
loopne
and
repnz
fisttpl
enter
int
test
jmp
out
clc
fucom
loope
and
fsubrp
loop
out
fsubrp
iret
icebp
sub
in
jmp
aad
shr
aad
mov
shr
std
xchg
sti
fcmovne
fimuls
lock
aad
std
clc
sarl
shl
jecxz
repz
lea
jmp
mov
repnz
test
xor
loopne
sarb
call
stc
sbb
xlat
in
cli
jmp
rol
out
les
loop
mov
repz
fcom
ss
aam
imul
fidivrl
int3
into
out
test
cmp
mov
out
fisttps
jmp
fucomp
fxch
sarb
aam
out
in
ds
loopne
jecxz
mov
in
repz
fcomi
iret
fucomi
cmp
xlat
cld
out
ds
neg
stc
mov
fisttpll
leave
les
loop
into
hlt
cmp
aas
xor
ds
ds
rcl
int3
int3
icebp
decb
ljmp
xor
lock
ds
filds
jecxz
adcl
stc
shll
in
xor
rol
fildl
in
xchg
out
lret
mov
lock
aad
lret
out
ret
xlat
into
test
jmp
mov
into
xor
sar
divl
clc
in
fnsave
add
fdivrp
cmc
cld
shl
out
in
in
fcomp
mov
not
aam
enter
xor
in
icebp
fcomip
xlat
loop
fdivp
fcmovu
clc
jmp
xlat
mov
sar
test
fisubrs
xor
bnd
in
test
test
aam
shl
cli
xchg
loope
jmp
xchg
shl
repz
xlat
repz
aaa
clc
rcr
cmp
test
fidivrl
std
int3
xrelease
ret
aaa
int
clc
jmp
shl
fmull
orb
xlat
int3
clc
cmc
enter
lret
cli
jecxz
fistpll
sar
fcomi
leave
sub
out
in
das
div
jmp
icebp
cmp
clc
cld
addb
call
loop
mov
xchg
shl
sub
lock
sti
std
cld
rol
mov
fildl
leave
fsubrp
repnz
cmp
sarb
jmp
ror
cmp
cld
rcl
out
incl
nop
lret
xchg
xor
cmp
je
mov
jmp
xlat
ror
ror
xlat
fisttpl
lock
push
and
push
idivb
add
jmp
lret
xlat
cli
clc
iret
leave
ror
out
fsub
std
movl
mov
in
icebp
int
leave
ror
loope
and
fnstcw
cld
ret
test
int
nop
mov
jecxz
out
aaa
stc
hlt
stc
test
icebp
xor
ret
test
fcmovnu
test
mov
xchg
mov
ret
repnz
int
int
cli
aaa
cmp
sti
loopne
xchg
test
out
mov
into
int
jecxz
stc
fmul
cli
jecxz
icebp
aas
sti
sarl
addb
out
cmc
loopne
cmp
in
in
cmp
lock
adc
call
in
out
roll
out
leave
fstp
jmp
xlat
ds
dec
cmp
sbb
out
fiaddl
in
out
out
test
cmp
in
adc
and
mov
fmull
repnz
call
leave
cmp
xor
int
rcr
xchg
out
call
out
xchg
xchg
out
das
out
cmp
iret
fdivrs
icebp
iret
ret
cmp
clc
fcmovb
imul
fmulp
xchg
out
incb
ljmp
cmp
test
fcmovbe
orl
fimull
int3
aaa
ss
ljmp
test
icebp
mov
icebp
out
mov
aad
int
jecxz
sti
in
ss
cmp
test
sti
inc
jmp
fdivr
leave
int
enter
repz
int3
shll
fstp
hlt
loope
out
cli
into
fcomip
in
ljmp
mov
into
xor
hlt
lret
cmp
lret
cld
fsubr
out
xchg
fcmovu
vpsubsb
leave
sti
lock
fsubrp
out
sarl
repnz
loope
xlat
idivb
stc
hlt
aam
hlt
xlat
cli
in
loope
fcmovu
lret
ret
fsub
call
cld
ss
fcmovu
into
decb
jmp
out
rorb
call
fcmovnu
sti
cmc
cmp
shl
movl
test
xchg
lret
in
repnz
lock
in
testb
cld
mov
sub
shlb
xor
into
xor
lret
lret
int3
fsincos
fprem
call
mov
cld
fucom
xchg
icebp
aad
aad
enter
into
aas
into
cmp
cld
int3
idivb
xor
jmp
sbb
loope
test
int3
leave
int
out
cmp
shl
lock
cli
in
test
fcom
in
jmp
sub
ljmp
ror
cmp
out
lock
shl
aam
ret
mov
xlat
cli
call
std
loope
shl
call
fst
not
loope
fcomi
sar
out
stc
int
in
mov
shll
ret
test
sti
cli
int3
aas
and
xchg
int3
cli
loopne
fsubr
out
test
xor
out
out
int3
cmp
jmp
aaa
in
adc
std
test
fcmovnu
fildl
fucomip
icebp
shlb
icebp
sti
clc
fcomi
fstpt
xor
leave
loopne
test
xor
lret
int3
cmp
roll
cmp
aad
aad
imul
loop
xchg
jmp
les
divl
cmp
xor
neg
shl
fsub
faddp
flds
fmul
nop
out
rol
xlat
loop
fdivr
cmp
out
int3
cmp
test
fadd
sbb
fisttpll
jmp
xor
idiv
enter
in
in
and
xlat
test
stc
orb
ljmp
aad
iret
iret
leave
cmp
fidivrs
ds
sbb
mov
call
cmc
shl
sarl
fdiv
aam
stc
repz
sti
cmc
fcomi
push
add
ljmp
shl
xor
les
lock
xchg
aad
nop
in
int
loop
cs
shlb
out
xlat
fistpll
ror
loopne
rcr
loop
shl
lret
out
orl
aas
cmc
shlb
lret
ret
iret
xor
cli
aaa
roll
ret
idiv
fmul
mov
xchg
lds
shr
enter
dec
in
or
add
add
leave
iret
xlat
rcr
flds
cwtl
pop
dec
addr16
push
mov
addb
jl
ss
xlat
out
jmp
hlt
in
test
loop
ss
cmp
fdivr
shl
out
fnclex
test
in
aam
lea
in
aam
ret
ljmp
sar
loopne
xlat
mov
shl
in
clc
int
test
xchg
ljmp
into
xlat
in
icebp
iret
into
xor
shl
fdiv
jecxz
xlat
mov
call
in
mov
loop
icebp
ljmp
loope
loopne
fneni(8087
jmp
std
mov
loopne
mov
mov
loope
in
xor
in
repz
cmp
loop
in
cli
cmc
in
hlt
ljmp
mov
hlt
call
dec
roll
rcl
adc
out
jecxz
in
ljmp
xlat
cmp
aad
cmp
stc
fcom
lret
cld
fadd
idiv
shl
cmc
in
call
out
lock
xor
out
lock
roll
cmp
cmp
out
jmp
repnz
enter
lret
lret
cld
loope
clc
hlt
aam
lret
test
mov
out
xor
lret
cmp
sti
faddl
cmp
jmp
mov
adcl
lret
fdivr
fnop
iret
cmc
into
xlat
cmp
fsubr
aad
mov
xchg
neg
out
cmp
incb
call
mov
hlt
fcmovne
in
lock
cmc
rcl
shll
fxch
neg
out
lret
rcr
out
hlt
xchg
jecxz
fisttps
xor
ret
xor
shl
rcl
icebp
cmp
cld
cmc
loopne
fninit
movb
lret
iret
rol
in
int3
rcr
hlt
sarb
cmp
or
aam
out
cmp
popl
out
int
xlat
cs
ret
fsub
out
call
cld
into
loope
lret
fcmovnbe
mov
lret
or
sub
fyl2x
cmp
aam
enter
cmp
test
lock
not
rolb
xchg
jmp
out
in
ret
in
jmp
idivb
aam
cld
shl
hlt
std
hlt
mov
lret
clc
test
int
shl
test
repnz
loop
cmp
icebp
lret
shr
rolb
orb
out
in
out
shl
xor
rcl
imul
jmp
in
fidivrs
loopne
out
out
lret
loopne
icebp
out
aad
in
clc
out
imul
out
ljmp
div
xor
jecxz
xchg
out
aad
out
xor
xor
aam
xlat
sti
cli
fdivp
fnstsw
cld
mov
test
leave
nop
rorl
lret
call
cmp
shr
ds
fcomip
shl
in
loop
jmp
xchg
xor
sti
xor
aaa
not
roll
filds
fdivrp
loope
faddl
cli
xlat
in
std
call
sti
ret
call
cli
loopne
fmul
xchg
leave
in
jmp
std
ss
fdiv
stc
cld
fcmovu
in
lret
sti
filds
xchg
sub
xlat
in
int3
xor
loope
out
fdivr
rol
incb
icebp
cld
test
shl
mov
jmp
cmp
into
aam
std
or
clc
call
jmp
rol
fnsetpm(287
cmp
not
lock
cmp
ffree
fucom
addl
in
loope
out
ret
enter
aaa
ljmp
mov
in
test
test
ljmp
repnz
xor
jmp
out
rol
sar
cmpb
not
out
test
out
jmp
mov
aad
xor
aam
xor
shl
lock
in
sti
roll
out
in
mov
nop
loop
into
cmc
xor
rcl
call
ret
loop
mov
xchg
int
and
repz
xchg
test
cmc
in
in
out
aad
cmp
roll
jecxz
stc
int
and
leave
xchg
mov
out
int3
in
in
lock
aad
fcmovnu
shl
cld
repnz
out
xchg
xor
rorb
xlat
repnz
divl
clc
filds
mov
jmp
leave
int
int
int
mov
aam
mov
jl
addb
jl
idiv
rcr
xchg
fadds
rcl
lret
aad
dec
xor
shl
in
rolb
xchg
fsub
in
mov
shll
loop
int
xlat
leave
idiv
adc
sti
test
out
fucomp
sar
cmc
call
out
out
enter
repz
cmc
clc
rolb
int3
iret
fcmovnb
sti
xchg
xchg
in
ljmp
aas
cmp
cli
in
icebp
out
jmp
jmp
mov
fldl
repnz
lock
out
cmpl
enter
fimuls
shl
fidivrs
ds
ljmp
ss
aam
mov
mov
fisttpll
mov
fld1
fdivs
std
shlb
sti
loop,pt
testb
loopne
xchg
lock
ror
out
hlt
xor
xor
dec
fcomip
std
rcl
stc
testb
cli
jmp
test
mov
xor
ljmp
into
rcl
repz
fdiv
xchg
or
int3
aam
xor
cmc
lret
ret
fucomp
ret
hlt
in
call
mov
or
repz
inc
hlt
lret
lock
lret
shl
icebp
ret
cmp
fucom
test
xlat
fadd
clc
out
out
lock
jmp
repz
cmp
fdivrl
sbb
and
or
sar
repnz
cld
aad
lret
xor
jecxz,pt
xlat
in
fmul
jmp
test
xchg
jmp
ds
xor
lret
xlat
enter
push
ds
push
mov
stc
fisttpll
xor
in
jecxz
xor
rcr
sti
in
sar
test
aas
repz
fmulp
orb
mov
repz
ror
cld
cmp
int
cmp
ds
fidivrl
sti
sar
ljmp
mov
vaddsubpd
xor
in
cld
lret
fdiv
iret
icebp
idiv
fiadds
jmp
lret
jmp
fucomip
loope
shl
out
in
addl
mov
out
loope
repnz
cs
imul
stc
jecxz
aas
sti
fsub
filds
cli
jmp
fcmovne
in
hlt
jecxz
enter
sar
fucomi
std
rolb
fisttps
mov
test
xor
fcmovne
int
out
xlat
cmc
fnstcw
stc
jmp
out
cli
cli
cli
xchg
xchg
shlb
fcmovne
into
xor
stc
flds
aas
enter
fucomp
sub
mov
lret
in
das
jmp
fsubp
std
test
sbb
out
incb
aad
rcr
ljmp
stc
jmp
std
test
incl
incl
loop
leave
repnz
idivl
out
fdivr
int3
ror
int
fcmovu
xchg
cmc
xlat
xchg
fstl
out
into
rcl
xor
cmc
fcomip
ss
lret
shl
jecxz
ret
fsub
addb
mov
xor
clc
ret
cmc
out
stc
int
rcl
rol
out
fdivr
xchg
shl
mov
nop
repz
cmc
aam
hlt
cmp
cmp
cmp
enter
ret
loopne
rol
jmp
neg
int3
cld
and
loope
jmp
rol
rol
aad
lret
cmp
hlt
cli
shl
ss
sarl
cmp
sti
xchg
jmp
std
mov
and
stc
call
inc
out
shr
movl
fcomi
jecxz
int3
jecxz
lret
idiv
cmpb
icebp
incl
cld
std
or
loope
loop
loop
test
stc
not
into
div
add
jmp
fucom
icebp
ret
call
lret
icebp
repz
lret
call
clc
xchg
jmp
sti
lret
xchg
nop
rol
out
sub
shl
ljmp
in
xlat
addl
test
jmp
iret
fmul
loope
fld
mov
lds
popl
out
into
out
aad
in
int3
repz
ljmp
mov
jmp
aad
leave
lret
fstp
aad
mov
fldenv
addb
jl
clc
cmc
xlat
lret
iret
fstp
mov
in
sarb
icebp
shl
ljmp
mov
vpsubsb
sti
test
xlat
rol
fisubrl
aam
fcmovnu
out
idivl
rolb
test
ljmp
rorl
leave
repz
repz
xor
lock
les
out
fcmovbe
repz
xor
clc
shr
cmp
hlt
lret
adc
icebp
mov
ret
fdivrp
lret
enter
repz
icebp
loopne
repz
out
out
xor
ljmp
out
int
std
jmp
fcmovnbe
shl
xor
stc
ss
sti
out
roll
fdivr
sbb
loop
xchg
call
lret
aaa
ds
aaa
ret
ret
out
xor
out
sub
jmp
lret
xor
cmp
cld
jmp
fcom
sti
icebp
fdivr
div
idiv
lret
test
int
aad
enter
xor
push
sarl
and
les
hlt
repz
cmp
ljmp
shll
int
enter
fmul
shr
loope,pt
test
ret
mov
mov
aad
in
in
cmp
les
aas
cmp
ds
jecxz
fldpi
jmp
sub
int3
in
out
hlt
xor
out
hlt
int3
icebp
rcr
shr
test
cli
fdivrs
xchg
test
jecxz
std
fdiv
in
ljmp
sub
out
repnz
out
int
cmp
loopne
out
out
loopne
ret
jmp
jmp
xchg
sub
ljmp
fdiv
cmp
rol
std
mov
ret
hlt
jmp
int
repz
das
ret
lret
cmp
cmp
aas
ljmp
mov
aam
rcr
test
xor
jmp
or
std
out
icebp
jmp
mov
popl
loope
lret
in
out
in
das
fcomp
into
int3
divb
loop
fiaddl
fxch
loope
orl
cmp
cmp
cmc
out
sarl
in
loope
out
cli
sti
repz
repnz
cmp
ror
cmp
xor
loopne
hlt
out
cmp
leave
fcomi
ret
mov
test
fucomip
ret
iret
lret
aad
aam
repz
int3
in
addb
sti
in
in
xchg
fimuls
in
cmc
leave
aad
fmul
repz
stc
lds
hlt
sbb
cld
loop
jmp
xor
icebp
sar
call
sar
out
fcmovu
and
stc
loopne
test
in
xchg
into
mov
repz
xor
call
aas
ret
repz
sti
in
fmul
std
out
in
test
out
sub
out
repz
cmp
ss
out
out
repnz
ret
ffreep
mov
lock
std
fsubp
xor
ljmp
loopne
iret
aad
neg
xchg
mov
sti
stc
out
fstl
iret
loop
aad
cmp
les
repz
icebp
std
in
faddl
mov
ret
jmp
rol
in
repnz
leave
stc
cli
cmp
cmp
mul
in
out
fnstsw
loop
aam
leave
jecxz
int3
in
jecxz
xchg
adc
hlt
cmp
out
out
loop
sub
loopne
fmull
and
hlt
enter
in
in
clc
iret
out
rcl
ds
stc
fcmovnu
loope
std
int
enter
ljmp
cmp
std
out
aam
cmp
call
fucomip
loop
test
cli
into
in
icebp
cmc
lret
out
cmc
jecxz
fsubr
fcom
into
lock
xlat
cmp
ret
xbegin
cli
rclb
leave
sar
lock
out
fstpt
cmp
rol
div
hlt
sarl
mov
in
loope
xchg
loope
shlb
out
out
fcmovbe
cmp
loope
fsubp
shl
fincstp
fmulp
fcomip
in
xchg
fidivs
ljmp
loope
repnz
clc
lret
out
mov
idiv
cmp
stc
hlt
ds
filds
out
test
lret
mov
shl
ret
loopne
xor
rcr
aaa
in
in
fucom
cmp
rcl
in
clc
out
lret
or
or
xor
cmp
je
mov
mov
jmp
rol
lds
aad
aad
lcall
xlat
mov
add
xchg
lret
fdivp
icebp
das
rcl
iret
shl
xor
cmp
into
shr
idiv
repz
call
test
leave
cli
out
fmul
rcr
sar
not
ljmp
cld
lock
loopne
fucom
mov
jmp
lret
mov
cmp
iret
cmc
fdivr
int3
shr
jmp
imul
lock
loopne
in
shr
clc
in
into
hlt
jmp
int
lret
cmp
enter
divb
test
jmp
mov
in
test
in
out
int
fsqrt
int3
fadd
fiadds
enter
in
ljmp
leave
xor
in
fldcw
in
xor
in
fdivs
fdivrl
idiv
fiadds
popl
push
shr
fcmovb
cmc
repz
hlt
jmp
fstp
sti
jmp
jmp
decl
out
cmc
imul
std
fstpt
out
lock
call
stc
leave
cmp
xchg
ret
out
std
xchg
aad
call
aas
ds
ljmp
mov
lret
cmc
in
xchg
xchg
icebp
in
mov
out
in
aaa
xor
ss
call
clc
xchg
filds
out
mov
xor
out
in
jecxz
out
out
adc
rcr
xlat
mov
out
lret
sub
int3
ret
out
std
cmp
repz
rcl
ds
testl
xchg
loopne
out
sar
ret
sub
rcl
lock
sbb
inc
mov
aam
xlat
out
icebp
fsubrp
in
xor
clc
cmc
aam
out
hlt
shl
aas
in
shl
in
loopne
xchg
neg
loop
enter
iret
ljmp
leave
enter
repnz
aaa
cmp
loope
sti
cld
faddl
flds
mov
xlat
idiv
out
int3
fidivl
shl
shl
out
stc
xchg
mov
mov
icebp
xchg
loop
lret
fcmovnb
vcvttpd2dq
aaa
in
and
loopne
test
loopne
mov
mov
jecxz
sub
in
xor
aam
rcr
aas
sbb
repnz
mov
mov
jmp
mov
int
hlt
xor
test
ljmp
mov
xor
or
mov
out
test
loope
out
xor
xor
call
cmp
aas
in
cmc
loopne
fchs
out
shl
xchg
aad
enter
fcomi
not
aad
loop
cmp
out
xchg
cld
call
mov
rcr
cmc
cli
out
sar
out
fsubr
aam
loop
repz
fninit
into
mov
sarb
xor
into
lret
aam
ds
cmp
cmp
out
sti
xchg
neg
mov
icebp
cld
out
cmc
in
int3
shl
ljmp
loopne,pt
cmp
lds
aam
iret
into
xchg
jmp
xor
out
ror
call
out
fldl
test
fiaddl
xchg
xor
icebp
lret
rol
cmp
jmp
cmc
test
jmp
aad
testl
into
sar
call
xor
incb
mov
enter
jmp
shrl
fucomp
xlat
ss
aam
fdivp
loopne
repnz
test
xchg
lret
in
shr
hlt
xor
cmp
cmp
icebp
cmp
repnz
shl
test
rcr
jecxz,pt
decl
das
loopne
aaa
cmp
ror
shl
xlat
out
test
rcl
cld
cld
leave
popl
loopne
xor
out
ret
in
sti
std
sar
dec
cmp
sub
out
out
xlat
in
mov
hlt
out
and
das
aam
cmp
lret
fnstenv
aam
cmp
in
rolb
shl
loopne
fisttpll
xor
fucomi
cs
lock
adc
fdivr
rcl
out
loop
xchg
cmp
cld
icebp
xor
aad
rcl
loop
fadds
xchg
shr
out
div
ds
jecxz
lret
repz
stc
jecxz
ret
out
fcmovb
shl
fsub
add
fsub
jmp
lds
ljmp
fcmovnb
sti
lock
xchg
fcom
sub
cld
test
adc
mov
add
jmp
xlat
aad
rcr
fstp
aaa
ret
jl
addb
jl
int
in
les
fiaddl
sbb
aam
lret
in
out
sti
iret
out
lea
iret
loope
loop
lock
clc
into
lret
rolb
aad
fld
mov
leave
decb
in
out
int
icebp
xor
lret
xlat
cli
iret
ret
jecxz
ds
xchg
fsubr
iret
repz
int3
ret
cmp
fidivrl
out
cmp
stc
out
repz
xchg
idiv
imul
aam
sti
mov
sar
in
xor
stc
stc
int3
repnz
jmp
lret
iret
faddp
leave
fucom
in
fimuls
xchg
mov
enter
call
cmp
fadds
in
fcomp
xor
out
lret
cmp
fmul
fdiv
ss
fcomp
cmp
dec
loop
cli
fimull
ljmp
shl
cmp
sti
fcomp
ds
test
test
fdivrp
test
neg
movb
mov
jmp
aam
lock
aad
fucomi
cmp
test
cmp
call
xchg
in
leave
fcmove
cld
icebp
loop
stc
xor
aam
sbb
cld
jecxz
lret
xchg
jmp
in
xor
imul
fsubr
call
out
cld
rolb
lret
enter
int
loopne
out
xor
fcmovbe
cmp
int
cmc
cmp
fdivp
jmp
fld
in
ror
xchg
jmp
idivl
cmp
cmp
mov
jecxz
cli
in
sti
out
sti
test
in
sub
in
out
shr
in
shl
repnz
fadd
out
addb
mov
cmc
lock
out
xor
xor
rcr
in
aad
lock
sub
in
cli
or
in
jmp
cs
xor
in
cmp
rcr
rcr
ffreep
mov
ljmp
int3
shlb
aaa
out
call
jmp
jecxz
repz
clc
cmp
cld
cld
jmp
mov
das
idivl
stc
int3
leave
repz
xor
shr
aam
faddp
ret
aam
out
mov
test
fucomi
jmp
repz
cli
lret
in
fildl
rcl
loop
loop
icebp
mov
lret
leave
int3
into
int
icebp
repnz
cmc
rcr
not
into
out
jecxz
loopne
mov
int
ljmp
aad
cli
ss
cli
int3
out
xor
in
out
mov
fsubr
lret
shl
int
stc
out
out
icebp
fcomp
fucom
fiaddl
sub
int3
xchg
xchg
jmp
ljmp
stc
lock
ds
clc
mov
loope
fucomip
xchg
fsubrp
shl
ljmp
loope
and
fisttpl
loopne
jmp
in
repz
ffree
xor
jecxz
in
fdiv
loop
ret
jecxz
nop
mov
shl
das
cmc
rcl
fnstenv
lret
fcmovu
lret
out
ds
xchg
fcomp
std
mov
mov
jecxz
xchg
out
icebp
lret
not
lock
in
std
xlat
aam
fdivp
fsubr
fucom
cli
repz
repnz
out
icebp
into
cmp
stc
repnz
std
in
not
sbb
std
test
repnz
aad
lock
repz
lock
aad
jmp
std
icebp
mul
out
lret
out
icebp
loopne
int
mul
rcr
xor
idiv
cmp
clc
in
repz
loopne
jecxz
dec
mov
rcr
enter
icebp
fcmovne
cmp
testb
test
jmp
int3
lret
shrl
rcr
imul
iret
mul
clc
addb
test
neg
xchg
hlt
out
enter
into
xlat
into
cmp
fdiv
not
enter
neg
in
lret
xchg
mov
out
aad
clc
mov
int3
out
out
call
repnz
ret
iret
xchg
mov
enter
hlt
int
ror
aaa
fdivrp
neg
sti
incb
enter
iret
out
aaa
int3
loopne
in
fdivr
cmp
repz
shll
out
sar
idiv
clc
lret
mov
repnz
in
int
stc
leave
mov
jmp
jmp
ds
leave
fstp
ret
lds
ret
jl
add
into
cmp
xor
sti
ffreep
sar
mov
enter
in
repz
out
xor
fxch
out
enter
clc
in
in
cmp
addl
mov
clc
int
fsubr
in
div
cmc
neg
out
leave
loop
loope
in
xchg
repz
nop
aad
aaa
leave
cmp
das
jmp
fxch
cmp
in
cli
out
lret
xchg
lock
fcmovnu
cmp
call
cli
repnz
fdiv
mov
enter
leave
enter
fsubr
out
hlt
loopne
out
out
repnz
cli
rcr
fcmovu
jmp
mov
xrelease
repnz
cli
aad
ffree
fdiv
ds
fcmovnbe
xlat
lret
idiv
orb
in
test
in
stc
cmp
fstp
cmp
vpminsw
mov
rorl
in
jmp
fcmovnb
fbstp
aam
ret
stc
cmp
xchg
loope
fiaddl
shl
in
divb
test
enter
rcl
not
rol
leave
loope
jmp
repz
cld
mov
loopne
sub
fcmovnu
cmp
dec
cmp
lret
shl
mov
fiadds
repz
stc
cmp
xlat
out
sarb
lock
sti
in
ljmp
repnz
ret
out
xlat
hlt
loop
ss
std
icebp
cmp
stc
sti
cmc
sar
out
loopne
mov
mov
xchg
test
shl
lret
lret
int
sti
cmp
mul
out
jecxz
xchg
faddl
out
mov
jmp
fmul
lret
cmp
std
iret
fsubr
sar
cmp
shl
fstp
in
out
xchg
sub
aas
lret
clc
repz
cli
repz
cmp
shr
sti
fisttpl
loopne
cmp
lret
dec
fldz
rcr
incl
cld
ljmp
loop
leave
in
lret
hlt
lret
sarl
icebp
loope
std
test
loope
out
lock
int3
xor
in
aam
out
lret
shl
cmp
cmpl
and
in
xlat
out
out
xlat
out
repz
enter
stc
rcl
loope
rcr
inc
fadd
mov
loopne
stc
xor
xor
iret
neg
cmp
cmc
faddp
out
ret
filds
stc
dec
shl
in
xor
xlat
jmp
call
cmp
ret
filds
mov
xchg
sar
out
out
rol
out
xlat
hlt
cmpl
aad
xlat
fcmove
loopne
sbb
jmp
out
xor
int
in
cmc
repnz
icebp
cmp
test
clc
leave
or
or
jecxz
shl
lock
ss
idivl
fnstsw
ret
ljmp
test
orl
cmp
jmp
in
aam
clc
fmul
dec
xchg
lock
loope
shl
xor
cld
hlt
enter
ret
xor
mov
loopne
repnz
nop
xlat
repz
aam
shlb
cmp
loope
stc
addb
call
test
mul
mov
std
adc
cs
hlt
xor
in
ljmp
in
jmp
mov
mov
ljmp
fdivrp
fdivp
sti
hlt
not
lret
lds
in
ror
in
cmc
lret
lret
in
iret
cld
shl
out
incl
fcmovu
mov
test
mov
in
test
sub
loop
repz
aaa
out
xor
lret
cmp
cmp
shl
out
lret
cld
movl
ror
icebp
ljmp
stc
aam
shl
lds
int
xchg
lret
mov
ds
cs
cmp
leave
cmp
in
cld
cld
cmc
fst
jecxz
mov
aam
fidivs
aad
out
int3
clc
repnz
fdivrl
cmp
fnsetpm(287
in
mov
sar
mov
lret
into
aam
ret
sti
and
aam
xchg
in
vpxor
into
aas
cmc
sub
repz
clc
in
jmp
lods
std
add
add
jmp
ror
int3
fcmovne
inc
clc
adc
cmpl
addb
jl
stc
loope
stc
rorl
enter
int
loop
into
repnz
rcl
int3
fmul
fcmovu
ds
out
ret
mov
in
or
repz
xor
in
aam
das
into
neg
repz
aad
mov
xchg
mov
out
hlt
loop
out
out
out
cmp
adc
xlat
xchg
clc
int3
fsts
test
cli
test
xlat
xlat
iret
xchg
xchg
jecxz
decl
and
sar
jmp
std
sti
cs
clc
out
bnd
test
jecxz
loopne
mov
test
jmp
leave
xlat
jmp
fcom
out
in
lock
sti
cli
call
cld
in
mov
loope
lret
xchg
out
aad
xor
out
cmp
cli
incl
ret
ret
cld
mul
test
rol
ret
enter
lock
clc
neg
aam
rcr
lock
loopne
mov
in
std
out
xchg
int3
int
jmp
cmp
int3
shl
call
cmp
fdivr
cld
cld
lret
mov
loop
in
int3
jmp
leave
cmp
int3
loopne
adc
xchg
aam
cld
shl
lret
xchg
repz
out
aam
in
into
stc
repnz
addl
fcom
rclb
xor
leave
std
cmp
iret
cmpl
out
jmp
fcmovne
orb
out
int3
cmc
leave
out
aaa
div
cmp
cmp
faddl
fcmovnbe
sti
xchg
loop
lea
enter
cmp
lret
xlat
divl
out
ret
test
jmp
clc
sub
fcomip
rcr
xor
iret
std
aam
repnz
cli
jecxz
stc
aam
test
inc
loopne
addb
xchg
repz
fmul
fcmovnb
lock
cmp
ds
repnz
in
iret
fcmovnu
in
cmc
rolb
fsub
fxch
call
ret
sbb
ret
out
jmp
sti
ret
aad
in
in
out
clc
aam
cmp
test
flds
div
jecxz
shl
not
ss
enter
aam
aad
ret
testb
nop
out
or
xor
aad
jmp
jecxz
into
into
rcl
aad
cld
ljmp
fisttpll
jmp
ss
sar
iret
clc
cli
std
rol
leave
enter
ret
in
xchg
mov
cli
fcmovne
cs
cli
ds
lock
out
leave
test
hlt
mov
test
jmp
loop
xor
out
stc
sar
repnz
xchg
fld
out
lret
call
ret
aaa
cmp
icebp
out
enter
shl
shl
repnz
mov
test
cmc
icebp
ret
div
rcl
aaa
int3
aam
idiv
xlat
aam
into
repz
hlt
ret
jmp
fiaddl
mov
int3
iret
int
rcl
repnz
lret
out
icebp
clc
fstp
shl
aad
neg
mov
test
lock
clc
clc
cmc
aad
icebp
in
int3
rcl
loope
ljmp
mov
test
repz
rcl
cmp
call
call
loopne
fmul
aas
xor
jecxz
xchg
mov
out
repz
jmp
xor
roll
leave
and
leave
xlat
in
loopne
sti
test
jecxz
loop
int
cli
leave
std
fcmovnu
cmc
loop
icebp
aam
neg
in
clc
enter
test
sub
jmp
aam
test
movb
in
iret
aam
ror
into
in
out
ljmp
in
aad
hlt
out
stc
jecxz
lret
icebp
orl
stc
xor
cli
loope
loop
xlat
cmp
fdivr
loopne
call
rolb
xor
out
shr
fcom
fdiv
sarb
neg
in
out
out
call
mov
sub
sub
shr
cli
sar
cmp
test
in
icebp
clc
fildl
mov
imul
loope
iret
aaa
lret
in
fdivp
cmp
int3
fldz
cmp
inc
clc
mov
mov
mov
mov
mov
pushl
call
mov
cmp
jmp
lret
leave
aas
lret
int
pop
push
icebp
jne
fcmovnbe
into
lcall
test
xchg
jmp
shr
imul
aam
sti
ljmp
test
stc
fadd
call
sti
xchg
xchg
xchg
aaa
mov
fmul
ds
out
out
aas
rcl
mov
xchg
hlt
out
xor
xor
cmp
stc
aad
cmp
jecxz
cmp
rolb
int3
in
mov
repnz
ljmp
ds
aad
loop
cld
loope
ljmp
std
loop
xor
int3
in
test
ror
inc
aas
fcmovnb
rcl
fimull
repz
int
jmp
fnstcw
out
out
leave
sti
clc
loope
repnz
faddl
xchg
mov
test
iret
out
lret
cmp
cmp
call
idiv
int
cli
iret
std
clc
clc
stc
jmp
xchg
iret
loopne
jmp
icebp
mov
rcl
out
xor
jmp
stc
sar
jecxz
aas
cli
jmp
and
vpmaxsw
ret
lret
cmp
ljmp
cmp
stc
testl
and
aaa
xor
cli
jmp
aad
cmc
fiadds
jmp
aam
jmp
rclb
cmp
shr
das
xor
fmul
repnz
loop
test
xchg
out
incb
mov
loope
lds
clc
fcmovne
int3
cmp
lock
iret
out
xor
std
fsubp
rorl
call
leave
fidivs
ss
out
loop
mov
fildl
shl
call
xlat
fnstsw
stc
loope
cld
out
loope
mov
ftst
cmp
mov
in
shl
repnz
repnz
in
loope
cmp
loop
loopne
vpsubb
nop
mov
icebp
std
mov
call
out
lock
xorb
cmpb
std
loopne
xchg
xchg
in
mov
rcr
lret
out
xor
clc
out
cmp
hlt
cmc
jecxz
cld
jecxz
ret
out
in
mov
xchg
test
ror
rcr
int3
fdivr
ds
fcmovnu
hlt
xchg
ret
sub
enter
xchg
out
lret
repnz
out
std
rcr
int3
fdivl
cmp
cmp
sar
loope
mov
mov
out
xchg
in
sarb
jmp
lret
fsubr
lret
repz
cmp
clc
cmp
cld
mov
icebp
fdiv
mov
loopne
leave
shll
in
lret
rcl
repnz
fcmove
out
out
fld
hlt
ds
stc
sub
or
ss
call
xlat
lock
sti
in
xchg
lds
jmp
aam
xor
ss
loopne
ret
hlt
mov
rcr
in
add
out
mov
in
xlat
rcl
lret
fidivrl
idiv
cmp
fidivrl
fnsetpm(287
lret
sbb
clc
mov
leave
cmc
in
in
lock
xor
fcmovbe
in
cmp
into
roll
out
loopne
enter
iret
fsubp
xor
shl
icebp
xor
rcl
lock
ds
test
stc
out
lret
orl
mov
ffreep
fadd
xchg
cli
mov
ret
loope
icebp
in
iret
in
shl
xor
cmp
into
les
out
lret
out
int3
sti
repz
sarl
stc
xlat
ljmp
call
stc
xor
into
idiv
aam
cmc
aad
div
aam
mov
mov
fneni(8087
lock
iret
xor
ret
fxch
fucomp
cmc
cli
div
cmp
call
fmul
mov
int
icebp
ret
sub
aad
loopne
hlt
sti
loopne
out
fadds
in
subb
aam
cmp
cs
into
cld
loope
out
repz
addb
vaddsubps
ret
icebp
xor
in
not
enter
repz
in
lock
clc
xlat
xlat
ror
iret
fsubr
rol
in
fsubrp
into
loop
call
lock
cli
in
incl
clc
loope
lds
in
ljmp
jmp
out
in
fadd
dec
dec
hlt
loop
int3
test
mov
repz
out
cmp
out
rolb
and
jecxz
loope
test
test
jl
decl
jmp
iret
iret
ror
ror
xlat
fnop
and
xor
sbb
jp
sahf
jl
addb
jl
fdivr
in
into
xchg
repnz
out
ss
aad
cmc
cmc
icebp
in
vpmaxub
out
call
xchg
xchg
xor
hlt
sti
stc
ljmp
xor
fucomi
aad
xlat
in
decl
std
in
xchg
in
hlt
ss
cli
out
fstp
in
shl
std
loopne
imul
fstp
adcl
cmc
xor
jmp
into
sar
cmp
mov
mov
rol
icebp
loop
xlat
hlt
lret
shr
sar
aad
out
repz
rorl
fsubr
test
popl
out
in
cmp
cmp
loope
loop
in
xlat
fildl
out
int
rcl
xor
xor
sub
jmp
repnz
clc
hlt
repnz
in
enter
enter
out
xchg
xor
xor
out
lret
fcomip
sar
jmp
aam
out
jmp
xchg
jecxz
int
cli
shll
out
aas
std
repnz
jecxz
cmp
hlt
add
out
jmp
xchg
xchg
out
in
mul
xor
lret
hlt
fucomi
repz
rcr
std
int
in
leave
lea
ror
rcl
sarl
out
repnz
adc
in
fcmove
shl
aam
fmulp
vpandn
in
ds
cmp
not
icebp
fdiv
cmc
loope
loope
ffree
xchg
cli
lret
call
rcl
fbstp
xor
lock
stc
aam
out
aas
mov
loop
test
stc
call
out
fcomip
stc
xlat
lret
mul
fidivs
cmp
aad
add
sar
mov
jmp
mov
std
mov
rorb
hlt
int
xor
cmc
enter
sbb
clc
stc
loopne
mov
aam
loopne
enter
cld
xchg
shr
cmc
lret
fdivr
in
shlb
into
sti
lret
rcr
mov
cmc
in
fisttpl
cmc
mov
shlb
int3
lret
jmp
in
sti
cmp
leave
xchg
into
icebp
out
les
aad
icebp
xor
cmp
frstpm(287
sti
shl
jecxz
out
ror
jecxz
mov
ds
icebp
aam
jmp
mul
rcl
cmp
cld
out
cld
loopne
mov
orb
in
int
jmp
hlt
idivb
rcr
out
movl
ret
out
repnz
jmp
loopne
loopne
loopne
rol
mov
int
lret
out
jecxz
loope
nop
not
xor
hlt
in
shr
rol
ss
cmc
cmp
cmc
les
rclb
aad
das
xor
in
ss
ljmp
std
rol
cld
loopne
ret
in
flds
fmulp
stc
divl
fsubr
cmpl
mov
cmp
lret
fcomp
mov
std
out
iret
nop
icebp
cld
loop
leave
int3
shr
iret
lret
idivb
rcr
int3
hlt
shr
neg
xchg
enter
into
mov
xlat
into
out
aaa
stc
ss
call
jecxz
aas
rolb
sbb
jmp
mov
ds
aam
xor
cmp
aaa
int
int
cmp
rcr
testl
std
in
mov
out
shlb
hlt
lock
rcr
fcmovnu
mov
decb
ljmp
out
ror
out
repnz
ror
iret
sti
lock
out
out
stc
jmp
leave
fimuls
xchg
call
vpsllw
sub
repz
jmp
mov
loopne
icebp
xor
test
clc
fsubrp
cli
sar
aas
iret
clc
into
fcmovnu
jmp
frndint
fiadds
xor
jecxz
xlat
xlat
out
out
aam
iret
cmp
in
into
les
aad
roll
in
fld
out
call
fsubr
enter
loop
ret
clc
xlat
test
loope
jmp
shr
lret
xor
in
aaa
fsubrp
in
loop
cld
shl
test
mov
fmull
enter
lock
sbb
incb
fimuls
roll
not
ljmp
fildl
out
lds
out
leave
test
mov
in
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
mov
jmp
xlat
enter
fcmovbe
cmp
rolb
fisubl
jl
hlt
not
loopne
stc
xor
cmp
cld
aad
jecxz
in
mov
lret
or
enter
into
ljmp
lret
in
jmp
lret
xlat
add
aas
cld
loopne
stc
xchg
std
jmp
repnz
into
test
loope
loop
loope
fdivr
fyl2xp1
aam
cmp
xchg
into
aaa
fidivl
cmp
cmc
xor
sarl
jmp
fcmovb
cli
adc
cld
call
iret
aaa
xor
rcl
shl
iret
in
repz
enter
fisttpl
out
repnz
std
rol
repz
sar
sti
std
call
int
mov
hlt
das
jmp
cmc
cmp
cld
out
fsubp
mov
in
ffreep
loope
sti
fst
nop
shrl
ss
xor
loopne
shl
sti
xchg
rol
jmp
out
test
int3
iret
int3
iret
call
fcmovu
int3
fpatan
iret
int3
cmp
mov
lret
jecxz
cmc
in
leave
ljmp
repnz
cmp
roll
out
jmp
std
test
std
loop
xor
rol
sarb
lret
enter
fucomi
add
roll
int
in
lret
fsub
in
jmp
xor
aad
fmulp
flds
cmc
fdivrp
jecxz
std
xchg
stc
rclb
xor
xor
cmp
shl
jmp
xor
rolb
aam
repnz
sub
sub
aam
ror
xlat
fnstsw
rolb
idiv
testb
lock
test
jmp
lock
in
cmp
fstpt
fcom
std
in
shl
icebp
xchg
loope
shr
out
out
push
aad
roll
in
mov
aad
xchg
call
in
ror
jmp
xor
cmp
fucomp
out
ss
aad
in
lret
int
loopne
int
xor
into
xlat
aaa
ljmp
rolb
stc
cld
std
in
mov
sub
div
lret
repnz
stc
into
call
jecxz
testl
rorl
call
aaa
iret
iret
hlt
loopne
adc
std
aad
jmp
addb
iret
repnz
jmp
xlat
cmp
fsubr
or
out
out
in
lds
jmp
repz
rcll
out
aas
aaa
fsub
lret
int
repz
fucom
cmp
mov
call
rcl
xor
cmp
clc
fdivr
fptan
xlat
mov
fstl
out
in
in
xlat
repz
jecxz
aas
repnz
lret
loope
stc
mov
in
clc
rorb
xor
clc
in
jmp
jmp
repz
loope
mov
das
aad
icebp
stc
jmp
cld
rcl
ret
xchg
clc
cld
incb
in
shll
hlt
fcmovbe
repz
fstp
rcl
test
out
fimuls
nop
enter
call
sub
ss
cmp
ljmp
repnz
enter
cld
xchg
aaa
xor
in
aam
in
clc
std
iret
cmp
out
cli
addb
lock
in
rol
sub
shl
idivl
cmp
in
clc
icebp
test
cli
xlat
leave
out
fcmovu
rcl
xchg
in
xor
aam
stc
out
leave
in
ss
int3
flds
repnz
fcmovnu
out
cld
sub
std
fsubp
out
xlat
aam
sti
clc
aad
test
inc
shl
out
in
xchg
cld
cld
xchg
mov
jmp
leave
ss
fnstsw
cmp
call
fdivrp
leave
shl
ret
xchg
out
xchg
int3
ror
repz
ss
fsub
sti
fcompp
hlt
shr
in
jecxz
xchg
sti
cmp
mov
lret
jecxz
in
xlat
xor
cld
in
sarb
rolb
mov
mov
mov
mov
and
mov
sub
mov
sbbl
push
inc
jmp
aas
lret
lret
xchg
pop
xchg
add
ret
lret
shrb
int3
ret
ror
lock
aam
lret
enter
sarl
test
in
ljmp
out
ljmp
jmp
int
into
cli
mov
fucom
idiv
int3
addl
loop
enter
in
jmp
jmp
div
loopne
hlt
into
fdivrp
ret
mov
loop
int3
popl
int3
shlb
clc
cmp
fucomi
call
jecxz
roll
clc
orb
loope
xor
clc
int3
in
cmp
ror
xor
std
ror
icebp
stc
fsubp
xchg
ret
loopne
iret
mov
cmc
ljmp
repnz
loopne
and
xlat
in
test
rcr
shl
out
lret
in
fsubr
ss
lret
incl
enter
faddl
shl
rol
int3
repnz
out
call
loopne
test
xlat
imul
call
clc
int
fldl
clc
cmp
hlt
cld
ss
cmp
ret
sarb
xchg
stc
fadd
cld
cmp
mov
aad
out
xor
shll
cmp
out
fst
in
aas
out
xchg
cli
fucomi
mov
fimuls
lret
in
icebp
aad
ljmp
sti
lock
cli
loope
or
lret
repz
mov
stc
cmp
loope
loop
rcl
cmc
std
sti
mov
fcmovu
std
xchg
mov
ljmp
sar
xor
fidivs
fcomip
div
loope
xlat
fucomi
int
mov
jecxz
out
lret
les
cmc
cld
fidivrl
enter
sarl
jecxz
out
fsubr
loope
out
lret
lret
ljmp
in
cmp
xlat
idiv
idiv
stc
repz
loope
fdivrs
mov
ffree
adcb
xor
rcr
lret
jmp
ss
ds
fdiv
iret
jecxz
jmp
cmc
mov
lret
fdivr
sub
repz
icebp
xlat
out
out
fcmovnbe
icebp
xlat
loopne
cmp
rcl
fisttpl
fucomp
mov
faddl
lret
out
lock
cmp
sarl
out
test
out
out
icebp
loop
lock
das
fdivs
call
sti
cmc
cli
xor
cmp
clc
stc
rorb
fucomp
and
lock
out
iret
in
cld
out
lock
lret
cmp
in
xchg
add
out
test
or
xchg
cs
sti
aaa
hlt
in
add
loope
stc
icebp
icebp
out
fucomi
cld
call
or
test
aaa
ror
mul
cmp
call
in
in
rol
addl
jecxz
sub
ror
xor
shl
out
out
aad
out
icebp
fcomi
loop
aad
call
in
cld
loopne
xchg
lds
repz
cli
icebp
stc
cmp
lret
stc
repnz
fadd
test
rcr
cld
nop
mov
repz
fstp
xlat
fyl2xp1
aad
fcom
roll
inc
faddl
nop
ret
aad
loop
cmp
jmp
in
and
test
leave
xchg
leave
stc
out
fsub
std
push
das
out
out
xor
cmp
sarb
sti
stc
out
cld
loope
mov
jmp
out
shl
call
cmp
call
ds
fiaddl
jmp
xchg
jmp
leave
fnstcw
into
fucomi
jecxz
iret
out
sub
mov
cli
clc
iret
jmp
loop
out
lock
aaa
aam
iret
sarb
clc
int
std
iret
cmp
fcmovnbe
xchg
leave
aam
shl
iret
cmp
xchg
in
jmp
out
ss
fcmovne
enter
int3
ffree
cmpb
frndint
fsubr
cld
orb
shl
int
iret
lret
int
leave
sub
cmp
ds
loope
cld
fsin
jmp
jmp
fdivl
in
out
leave
call
out
lret
cli
aas
out
stc
xchg
fucomp
orl
in
aaa
leave
aad
lret
shl
out
into
clc
in
aam
cmp
fldl
cli
xchg
out
in
fisttps
jmp
aaa
xor
stc
clc
loop
test
xchg
sbb
into
push
add
xor
jmp
ret
lret
ror
lret
sub
sahf
in
call
lods
jl
flds
jl
loop
fiaddl
in
lret
decl
stc
jmp
fdivl
out
icebp
xlat
test
cmc
jecxz
sar
mov
loopne
in
xchg
icebp
loopne
shl
fdivs
call
lret
hlt
ret
repnz
xchg
mov
jmp
rcr
test
xor
fcomp
add
sti
repnz
leave
ljmp
xchg
xor
sub
fcmovnbe
in
fistpll
repnz
lret
call
in
aas
aas
clc
out
mov
fucomi
sar
roll
cmp
vpor
in
std
cmp
into
clc
cmp
lds
leave
xor
repz
fcmovu
loopne,pt
hlt
xlat
stc
test
jecxz
fstp
out
movb
ljmp
cmp
ljmp
adc
loope
aam
fcmove
cld
out
xchg
hlt
repz
xlat
test
into
cmp
rcr
jecxz
loope
cmc
aad
iret
cli
int
and
cld
xor
ss
jmp
iret
cmc
cmc
std
test
xlat
rcl
cmc
xlat
mov
out
roll
shr
repz
neg
lock
test
rcl
rcr
orb
mov
lock
in
shl
cmp
cmp
roll
jmp
sti
jecxz
xchg
int
jecxz
xor
shr
fcmovnu
cmpb
ds
cmp
mov
in
loopne
fcmovbe
das
leave
cld
cmc
aaa
fdiv
cmpb
ret
ror
stc
iret
fmuls
sub
jmp
in
icebp
incb
fdiv
ret
add
iret
and
test
and
in
bnd
sti
in
iret
ror
into
cmp
fcmovu
aad
cmp
in
mov
rol
xchg
in
fsubrp
fsubr
cmp
out
std
repz
cli
lock
jmp
fucomip
int3
nop
clc
out
xrelease
into
clc
xor
rcr
aad
std
aas
ror
ss
loope,pt
rcr
mov
fcmovnu
call
shll
das
in
test
icebp
xlat
xlat
imul
cmc
fst
aas
into
cmp
xchg
fldl
incb
repz
test
repnz
ljmp
fsubr
jmp
ror
addl
shrb
xor
cmp
shr
mov
repnz
lret
xor
aad
cmp
rolb
ret
test
std
adc
xlat
fucom
int3
enter
loop
into
ljmp
cli
icebp
aad
in
cmc
aad
ds
out
mov
into
shr
repnz
rcr
call
int
icebp
cld
aad
test
mov
clc
iret
std
lret
xchg
loope
loope
in
xor
int
cmp
test
test
not
fiadds
nop
repz
std
out
stc
ret
std
sti
lret
cmp
add
loope
jmp
fcmove
mov
xor
fcomp
sti
in
enter
fdivr
lock
in
sub
fucomip
fldl
sub
out
xor
aaa
not
cld
lret
aas
aas
cli
test
std
mov
fadds
jecxz
lock
test
int
sti
cli
shl
neg
ss
rcr
fcmovnu
repnz
jmp
mov
repnz
rcl
ror
fcmovnbe
cmp
jmp
cmpb
call
stc
addb
rcl
cmp
repz
in
icebp
cmp
aaa
ss
aam
inc
jmp
mov
ljmp
aas
cmp
clc
int3
cli
loop
mov
aad
inc
cmp
mov
jmp
cmp
out
fdivp
out
adc
leave
hlt
cli
fsub
fimull
shll
repnz
xor
not
call
hlt
stc
decb
leave
out
mov
xor
sarl
sti
out
cmp
fucomip
std
shl
ror
clc
out
addb
iret
cmp
fnstsw
cmc
fsubp
hlt
loope
cmp
je
jmp
iret
aad
aad
aad
aad
mov
das
and
in
mov
jl
add
out
clc
fdivp
int3
mov
rorl
sar
xor
aaa
shr
div
cmpl
hlt
mov
leave
int3
xchg
shl
int3
lret
in
xlat
xor
cmp
shl
loope
hlt
in
testl
loop
rcl
aaa
aad
jmp
in
hlt
cli
shl
call
clc
jmp
xchg
xor
lock
lock
in
cmp
fcmovu
fdivrp
mov
fiadds
xchg
mov
xor
in
stc
jmp
std
xor
call
xchg
fadd
test
lds
nop
filds
fcmovbe
in
stc
leave
rcl
into
and
repz
loope
aam
iret
jecxz
in
cld
mov
out
out
sub
sub
std
shl
idiv
cld
out
ret
cli
test
in
lret
out
iret
orb
in
fxch
out
std
out
repz
repz
ret
jmp
out
decl
cli
xor
jmp
cmp
jmp
fnstcw
sti
repnz
fst
jecxz
mov
xchg
test
ret
repnz
into
enter
iret
repz
jmp
fnstsw
ret
enter
out
sub
loopne
int3
xor
iret
sub
into
out
xlat
shl
int
aaa
stc
fldl
loope
std
test
xchg
repz
int3
rcl
jecxz
in
std
xlat
std
out
mov
fsubp
flds
sub
xor
shr
lock
cmp
repnz
fadd
repnz
cld
lret
inc
iret
mov
sub
repz
fdivr
cmp
loopne
test
out
out
leave
repz
loopne,pt
shr
ljmp
sti
fcomp
inc
std
cmc
xchg
loope
in
in
loop
iret
fldl2e
lret
out
in
div
out
ffree
xchg
cmp
jmp
call
int
sub
leave
repz
cmp
cmc
xlat
cmp
adc
aad
out
xlat
cmp
sub
call
or
int
repz
cmp
flds
sar
aam
leave
in
xchg
xchg
mov
ret
fcomi
f2xm1
xlat
jecxz
xor
cmp
aad
stc
fldln2
fsubr
loope
enter
ljmp
in
fcmovu
fstp
aad
repnz
in
idiv
ret
fucom
rcl
enter
ss
xor
aad
ds
int3
div
aas
out
test
filds
mov
jmp
ljmp
loope,pt
xor
aad
rcl
cld
cli
fmul
mov
xchg
loopne
lret
shl
xor
clc
xlat
xor
test
fildl
clc
test
loopne
loopne
out
subb
aam
ret
shll
hlt
cmp
cli
repnz
in
test
mov
lea
fdiv
xor
out
rcr
cmp
iret
out
cli
clc
sar
enter
jecxz
call
into
out
aad
xlat
sar
enter
loope
cmp
aad
clc
shr
jmp
in
fdivrp
vphadduwd
sub
cmp
aad
lret
loop
ret
rcl
jmp
test
cmc
aam
repz
cmp
fdivr
and
fucomi
fcmovnu
xchg
std
out
out
cmc
lock
rcr
rcl
fdiv
ror
ds
xlat
test
jmp
leave
das
rol
sub
lock
repnz
in
fsubr
fcmovnb
rcr
call
out
xchg
aaa
lds
rcl
aaa
cmpl
fstpt
ret
shl
sar
call
xor
sti
xlat
fnstsw
out
rcr
aad
fcom
lock
test
fdivp
stc
loopne
fcom
shr
cmp
ljmp
rol
repz
faddp
fcmovbe
lret
out
xchg
sub
fadd
cli
fadd
std
repnz
ffreep
fiaddl
in
out
ret
icebp
lds
ljmp
andl
ret
inc
fs
add
inc
add
rol
into
fs
add
xor
add
mov
lcall
add
test
adc
jmp
ds
ret
ds
jmp
shlb
mov
jl
add
sbb
fidivrl
call
loope
lds
xchg
xchg
fldl
xor
clc
in
lret
hlt
jmp
ljmp
jmp
lret
icebp
orl
jmp
loop
sarl
not
icebp
ds
sti
aad
add
call
jmp
jecxz
jmp
loopne
xor
incl
icebp
aas
ret
idivl
ljmp
out
in
int3
sar
sti
cmp
into
out
cmp
ror
lock
rorb
lret
sub
in
ljmp
cmp
out
out
sti
sar
neg
aam
idiv
out
idiv
jecxz
aam
fdivr
aas
icebp
cld
call
sarb
mov
jecxz
clc
mov
lret
rolb
xor
int3
stc
jmp
cmp
xor
hlt
in
repnz
in
mov
out
ljmp
cmc
sti
idiv
fcmovnbe
clc
out
ljmp
shl
xchg
movl
loope
cmp
cmp
not
ljmp
cmp
jecxz
decl
ljmp
jecxz
call
std
shr
std
std
hlt
icebp
ds
leave
xlat
xchg
sti
jecxz
not
shll
shr
icebp
shr
aad
fxam
icebp
aas
rol
sti
loop
icebp
nop
in
mov
ss
xor
fxch
sar
fld
fcmovnbe
les
ljmp
test
sub
xor
fcmovne
lret
xlat
idiv
shl
fnstsw
fmull
jmp
hlt
nop
ffreep
divb
iret
xlat
test
lret
shl
out
ret
out
aam
rcr
in
incb
and
ret
cmp
fmul
cmp
ss
loopne
fidivrs
rcl
addb
cld
clc
int
int
sub
sub
xor
xlat
cmp
shr
cmp
clc
loop
ret
in
lret
shl
int
shl
loope
xor
xor
stc
xor
jmp
cmp
hlt
icebp
xor
call
fsub
icebp
mov
lret
in
xor
fst
clc
jmp
sar
std
cli
cmc
fimull
jmp
in
aam
test
call
cli
std
hlt
cmp
loopne
cmp
frndint
hlt
xchg
mov
in
fdivr
in
shll
xor
cmp
fxch
cmp
filds
lock
orb
mov
repnz
repz
cmp
lret
out
in
and
fldl
jmp
xlat
divl
cmp
test
out
sar
sbb
cli
stc
jecxz
test
int
fstl
in
fmul
lock
call
cmc
and
test
stc
out
in
add
xor
sub
cmp
cmp
jmp
int3
rcl
aas
aad
test
jecxz
and
out
call
enter
fcom
jmp
int3
div
shl
cli
xor
out
clc
out
repz
call
cmp
out
fmul
aas
in
rcl
rcr
out
clc
sar
and
mov
incb
out
loop
shr
div
lret
int3
out
adc
add
stc
cmp
cld
aad
mov
xchg
shr
repz
jmp
lret
ds
hlt
sarb
vpsrad
fdivr
cli
out
sti
nop
shl
xchg
rol
lret
cli
int3
not
xlat
jmp
repz
inc
jecxz
in
aam
sti
addb
stc
xor
rcr
in
leave
xor
idiv
std
in
jecxz
std
xchg
rol
cs
div
cmp
out
out
aad
cmp
xlat
test
div
fstpt
in
mov
mov
fmulp
rcl
out
out
stc
std
std
xor
lock
fsin
fnstcw
xlat
repz
dec
sti
lds
lret
in
jmp
xor
jmp
loope
repz
out
lret
jecxz
add
enter
lret
call
iret
shl
call
jmp
cmp
cmp
fadd
clc
fldl
lret
xchg
out
out
mov
add
jmp
mov
andl
xor
jmp
ds
rcr
fcmovbe
rcl
aad
sbb
lods
push
jl
add
out
out
cmc
cli
fdivr
shlb
shr
cmc
jecxz
ljmp
mov
in
in
ret
jmp
enter
cmp
std
cmp
testl
jecxz
out
shll
ljmp
out
fdiv
test
icebp
fadd
loop
sti
in
xchg
jmp
loopne
xchg
enter
call
cmp
aad
aam
cld
xchg
fadd
mov
ret
std
and
xor
xor
lret
cmp
hlt
aam
sti
fistpll
lret
clc
ret
xchg
or
in
xor
xor
out
std
into
jecxz
cmp
fadd
out
rcl
xchg
out
std
in
loope
lret
leave
idiv
fcmove
xor
cld
sar
faddl
xchg
fisttpll
cmp
cmp
lret
lret
lds
shr
mov
nop
cld
int
into
vpsadbw
call
xlat
sbb
int3
in
and
xchg
mov
test
mov
mov
divl
clc
out
in
fdivrl
fcmovbe
fdivr
aaa
out
vpsllw
orb
loopne
xor
in
sti
fcmovbe
cmp
lret
adc
testl
stc
fcmove
lret
aam
iret
xor
in
xor
into
fdivrp
cli
cld
fnstsw
into
addl
cmc
loope
std
nop
int3
cmc
loopne
ljmp
cli
hlt
in
hlt
xlat
icebp
mov
stc
dec
test
out
loop
ret
rol
clc
jmp
out
icebp
cmp
test
std
fcomip
test
int
fiaddl
nop
out
out
xor
fcmovbe
stc
aaa
iret
int
stc
out
in
rcr
shl
out
jmp
mov
repz
repz
xor
int3
fidivl
adc
cmp
in
cmp
stc
xchg
mov
repz
out
repnz
incb
faddp
clc
fcmovnb
mov
loopne
lret
test
rcl
int
jmp
leave
jmp
fstpt
fucomi
xlat
ret
testl
loop
in
in
leave
ds
ss
fdiv
fst
enter
fdiv
loop
mov
mul
in
mov
in
xor
in
cmp
sarb
into
cmp
hlt
loop
shl
in
fxch
addl
addb
int3
aaa
aam
shl
ljmp
ds
sti
call
loop
int
jecxz
fst
fdivr
ljmp
repnz
ror
out
fmulp
cld
mov
in
jmp
aad
leave
ds
cmp
rcr
cmp
clc
sbb
test
jecxz
xchg
rcl
jmp
in
das
int
jmp
sarb
fxch
cli
sarl
lock
sbb
adc
lret
test
fmulp
int
int3
xor
sti
shl
shrb
enter
loope
ds
ds
loop
stc
fcomp
in
xchg
xchg
shr
xchg
int
enter
ss
xor
jecxz
mov
jmp
int3
cli
loope
in
jmp
repz
sarl
rcr
icebp
cli
shl
aad
fneni(8087
call
cli
out
in
repnz
stc
aam
cmp
call
fsubp
sbb
mov
xchg
jmp
lock
cld
xlat
leave
shlb
cmp
int
cmp
loope
in
ds
decb
icebp
in
mov
call
cmc
out
call
sti
icebp
repz
adc
jmp
out
aad
in
in
in
fsubr
aad
shl
xchg
std
test
loopne
int
leave
out
out
loopne
ds
cmp
clc
cmc
xabort
out
shl
adc
leave
fcmovb
test
in
jmp
cli
out
lock
ror
xor
fcmovu
sti
fsubr
test
out
sar
mov
out
test
int
shl
rcl
stc
not
loope
cmp
fcomip
fincstp
loope
mov
into
out
std
rclb
lock
repnz
cmp
loope
cmp
ffree
xchg
fmul
idiv
mov
cli
mov
add
mov
mov
xorl
jmp
ds
aam
aam
aad
inc
dec
push
pop
cmp
int3
sub
mov
jl
xor
iret
xor
fisubrl
rcl
int3
xlat
xor
hlt
in
rcr
neg
incl
xchg
lock
in
int
repz
fucomp
int
ljmp
jecxz
call
mov
shr
xor
into
out
into
aam
fcmove
cmp
xor
out
rorb
out
loop
int
aad
rcl
xor
xabort
out
cmp
int3
stc
test
shl
jmp
leave
cli
in
rcll
into
repnz
leave
out
clc
in
fsubr
loope
iret
into
rolb
or
out
incb
jecxz
xor
in
leave
lret
fnop
or
shl
cmc
mov
cli
fucomi
out
xchg
mov
mov
cli
out
fcmove
icebp
pushl
lock
aaa
sar
std
filds
clc
cmp
xchg
ror
repz
sti
lret
in
in
sar
sarb
lret
ffreep
ret
jmp
mov
fcmovne
shl
xchg
shl
les
cli
shl
iret
or
sar
xchg
mov
in
ficoms
sub
repz
fnop
hlt
clc
ret
loop
xchg
test
enter
lret
lock
call
int
aam
ftst
jecxz
rcl
cld
mov
mov
bnd
aam
clc
in
cmp
in
out
cmp
mov
sti
hlt
fst
loope
leave
lock
xchg
xchg
mov
xlat
stc
aaa
ljmp
roll
ret
mov
xchg
into
into
lret
in
int3
clc
in
xor
not
out
icebp
sti
test
call
lret
xchg
ror
ljmp
cmp
int3
jmp
into
ret
test
jmp
out
xchg
xchg
cld
lret
into
ljmp
lret
leave
jmp
in
f2xm1
loopne
repz
in
test
or
out
loop
call
cmp
in
icebp
and
rcl
xlat
cld
xlat
loopne
enter
jecxz
sti
or
leave
aad
out
rcl
cmp
cmp
in
icebp
xor
cmc
addb
lret
xor
out
xor
stc
ss
addl
std
call
in
mov
in
xor
fnstenv
cmp
fsub
rcr
test
sti
test
in
in
cld
cld
mov
fmulp
neg
sub
aad
cmc
fcom
fdivp
repnz
hlt
filds
aas
int3
xchg
out
ljmp
imulb
lret
ss
shl
call
hlt
adc
fdivrp
mov
stc
fmulp
enter
aad
loope
iret
aad
div
std
cmp
cmpb
clc
fisttpll
out
in
sub
icebp
in
cmp
shl
clc
fsub
xchg
cmp
jecxz
xchg
ljmp
repnz
jmp
ss
jmp
test
fmuls
xchg
jecxz
ljmp
call
cmp
lds
loope
fxch
iret
std
test
out
add
in
loop
out
cs
sti
cmc
cmp
fcomip
ffree
aad
filds
fisttpll
jecxz
out
iret
out
shl
repnz
iret
cmp
testl
nop
std
mov
lock
int
in
ljmp
xlat
loopne
enter
mov
iret
idiv
in
fdivl
int3
sarl
jecxz
fdivrs
test
vshufpd
in
into
hlt
in
ss
lret
icebp
fsubrp
hlt
icebp
int
vpandn
ret
fldln2
in
test
iret
lock
repz
lock
repz
loopne
test
stc
fisttps
in
hlt
add
stc
sbb
in
adc
ret
fdivr
neg
xchg
lock
das
xor
std
cld
lret
in
cmp
in
test
aam
test
in
cmc
xchg
enter
loop
iret
test
shr
lock
fcmove
loopne
testb
ret
lret
add
movl
jmp
mov
xor
or
sub
add
jmp
ret
aad
fstp
int
ja
imul
pop
inc
jl
flds
jl
fcomi
ljmp
jmp
xlat
cld
in
sar
aam
out
std
les
out
lds
mov
ljmp
iret
out
xlat
ret
call
sti
xchg
in
cld
iret
test
inc
repz
in
aaa
shr
cmp
int3
lock
mov
ljmp
cld
call
fsqrt
lret
iret
stc
iret
aam
aam
repnz
out
inc
fildl
adc
shl
xlat
divl
xor
ljmp
sti
ret
jmp
cld
into
xchg
decb
ret
div
shr
iret
int3
clc
loopne,pt
aas
fcomip
rcr
loopne
clc
into
int
orb
clc
fsub
lock
xor
int3
aas
test
ds
in
enter
into
rorb
int
ljmp
neg
hlt
lds
cli
std
mov
shl
sub
cs
not
aaa
in
leave
rcl
lock
cmp
clc
cmp
out
xchg
test
in
lret
stc
fmul
aam
ror
div
lock
test
stc
ret
xchg
xchg
repz
ror
aam
repz
aad
jecxz
test
cld
leave
clc
sti
aad
out
cld
out
repnz
sub
shl
fcom
enter
fdiv
in
fidivl
int3
lock
shl
out
incl
call
icebp
icebp
aaa
cmp
sarb
fcmovnbe
lret
xlat
fadds
lret
ret
fstp
fmulp
cli
repz
in
ror
ljmp
repnz
cli
fstpt
ret
cli
fucomi
cmp
xchg
enter
repnz
int3
idivl
aas
test
lock
fxch
mov
orb
xlat
leave
ss
cmp
aas
fprem
aas
loopne
ret
into
lock
shl
bnd
int
loope
loope
ret
xor
out
aas
imul
repz
jecxz
xchg
lret
mov
leave
fisttpll
loop
fidivs
jmp
sti
ret
loopne
icebp
fiaddl
hlt
dec
fucomi
nop
repz
iret
mov
leave
repz
fndisi(8087
sti
aad
hlt
repnz
sti
testb
fsubr
jmp
xchg
xlat
xor
ret
aaa
out
iret
loopne
mul
fsubp
dec
fildl
in
jmp
mov
in
shl
cmc
div
fmul
fcmovne
aam
out
xchg
testl
xor
in
lock
repz
aas
fidivrs
fchs
shl
cmp
popl
repnz
in
aad
xor
fsubr
cld
cmp
in
aad
sar
mov
loopne
into
sar
jmp
icebp
xor
shl
call
sti
hlt
lock
enter
int
jmp
stc
out
out
not
shl
cmp
iret
test
in
fsubr
mov
roll
xor
aaa
cmp
and
jmp
ffree
jecxz
inc
mov
fmull
aaa
xlat
ss
std
in
cmp
ret
flds
fsub
filds
loopne
rol
cmc
enter
lock
cli
cmp
in
aad
and
in
xlat
mov
std
jmp
xor
iret
xor
fdivrs
jecxz
loop
icebp
testb
decl
fucomip
shl
out
ss
repnz
in
cmp
and
repnz
out
call
mov
test
cmp
call
cmp
shl
push
call
ret
xchg
std
mov
sti
lock
cmp
into
xor
stc
iret
test
out
rolb
in
add
in
xchg
out
jmp
icebp
rcl
std
sar
shr
test
into
sar
cld
jecxz
lret
xor
fcmovnbe
hlt
int
in
into
in
clc
shll
xor
fiaddl
clc
jmp
jmp
in
loop
lret
out
std
ss
cmc
aaa
ds
cmp
fisubl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
pushl
call
jmp
mov
mov
jmp
iret
ror
fstp
xlat
ret
dec
or
inc
jl
flds
jl
in
lret
lret
mov
sub
xor
int
out
cmp
ljmp
sti
loopne
mov
ljmp
rcl
rcr
das
out
cli
leave
jmp
xor
shl
cld
ret
test
out
sub
call
clc
lret
hlt
jmp
shr
out
in
xlat
ljmp
test
repz
imull
cli
xor
std
icebp
aad
loop
loop
neg
cmpb
lret
clc
lret
cli
xor
xor
mul
into
div
xor
adc
rcl
or
aad
clc
aas
ljmp
mov
jecxz
in
fcmovne
cld
rol
cmc
aad
aas
fdiv
push
enter
fiadds
icebp
mov
xor
lock
shr
lret
loope
cld
rolb
mov
in
in
out
jmp
jmp
cmc
das
call
cmp
cmp
xor
call
out
int
int
ret
aaa
in
call
aas
fdivr
lret
loope
ds
clc
mov
xchg
std
out
loop
ss
xor
out
aaa
aad
test
in
fdivrp
test
out
shr
int
sub
aaa
cmp
int
fcmovbe
iret
in
std
ret
cmp
mov
testb
sub
call
jmp
in
jmp
loopne
xchg
sti
jmp
fmull
lret
nop
not
hlt
jecxz
lock
sti
stc
xor
sbb
ds
mov
ret
sar
orl
cli
out
repnz
aas
in
aad
ds
fnstsw
int
ret
loope
fdivp
int3
leave
ret
sarl
ss
shl
loop
test
neg
aam
out
in
incl
sub
sarl
clc
xor
sarb
incb
loop
ret
test
xchg
in
out
out
out
lock
xor
rcl
loop
aad
aas
addb
out
movb
cmp
ss
div
jecxz
cli
fidivrs
roll
jecxz
int
roll
fucomip
int3
xor
xor
repnz
test
mov
clc
cld
mov
ljmp
int
xor
int
aad
sarb
fidivrs
xor
xor
test
cmp
out
shl
aam
jmp
fnsave
iret
cmp
test
fnstcw
sti
sbb
cmc
movl
lock
jmp
clc
hlt
idiv
cmp
clc
mul
sti
jecxz
fsubr
fcom
mov
fucomi
lret
icebp
fsubrp
rol
fmul
cmc
int
aam
roll
aad
xchg
clc
lret
repnz
shll
lret
call
aad
sti
shl
sbb
loopne
addb
mov
mov
jmp
jmp
int3
lock
into
into
std
icebp
in
sti
cld
fld
cmp
in
out
sub
lret
cmc
xor
fpatan
ror
not
ror
cmp
xchg
hlt
xrelease
fucom
lock
test
in
shlb
fnstenv
lret
std
hlt
aas
rcr
loope
fdiv
stc
incb
clc
fucomp
lea
out
lock
shl
shl
out
dec
dec
fcmovne
xchg
loop
out
in
sub
fisubrl
cs
cld
fnstcw
lock
cld
aas
test
jmp
cld
in
xchg
hlt
sub
jmp
clc
fadd
int3
int
rcr
in
filds
fcmovnu
xor
xchg
rcl
into
lock
sub
out
xor
into
out
fucom
cmc
fcomip
aad
out
mov
test
mov
leave
xor
lret
cmp
cmp
cmp
fadd
aad
xlat
fcomi
test
loopne
xor
call
idivb
cmp
icebp
loope
out
int
movl
loop
ret
shr
int
cmp
loope
ret
sti
fistpll
jecxz
cld
in
ljmp
xchg
loopne
xor
call
cli
int
fdivr
cmp
repnz
add
lret
aam
fstp
fisubrl
push
int3
push
adc
jl
add
std
out
aam
in
mov
lock
enter
std
sti
rcl
fadds
mov
in
loopne
out
cli
addl
cmc
iret
out
cmp
loope
clc
xchg
cld
jecxz
fdivr
dec
fst
mov
xor
fcomi
int3
sti
cmp
cld
into
stc
clc
dec
cmp
xlat
roll
jecxz
out
rorl
loopne
jmp
cli
int
in
shl
mov
sti
test
jecxz
fdivp
xchg
xchg
test
out
shr
loopne
shl
in
xlat
out
fldl
xchg
jmp
loope
out
out
out
xor
clc
fdiv
bnd
loop
test
xchg
cli
mov
mov
int
les
rol
loopne
rolb
clc
jmp
aam
jecxz
jecxz
out
test
call
int3
int
jmp
out
ret
sar
ret
xchg
sti
fdiv
int3
int
rol
int
aam
in
cmp
in
sti
out
in
into
shl
stc
fyl2xp1
movl
xchg
rol
das
aaa
icebp
mov
repz
aad
test
not
sti
mov
int3
out
xchg
xchg
jmp
test
in
in
and
rcl
leave
leave
sti
xlat
fdivr
and
xchg
hlt
shl
cli
cmpb
repz
std
fcmove
test
mov
orb
cmc
into
repz
xor
ljmp
xor
hlt
lock
int
test
out
shr
xchg
fmulp
shll
icebp
vpandn
hlt
fsub
rcr
cmp
fcmovnu
in
fld
test
loope
call
shlb
sub
iret
fdivrs
test
sti
sarb
loop
hlt
int3
xchg
test
in
xchg
int
hlt
cld
leave
fidivrl
icebp
hlt
shl
in
repz
mov
mov
out
jecxz
lock
lea
int
xor
aad
xor
in
fcmovu
cmp
out
mov
leave
test
in
repz
test
sub
fdivrs
in
cmp
aad
sar
cli
out
fdiv
in
fucomp
nop
lret
addb
cli
vpsrlq
aas
std
mul
stc
out
xor
test
xchg
mov
fsubr
sti
nop
das
xor
lret
xor
xor
sti
sti
in
lock
ffreep
cli
fisttpll
ljmp
xchg
div
into
int3
in
rcl
cmp
out
cli
xlat
mul
repz
mov
jecxz
sar
cmp
sar
repnz
rcr
fiadds
lret
out
int3
mov
not
lock
xor
aam
rcl
repnz
into
fcomip
cli
jecxz
fcmovb
fiadds
mov
ss
aaa
ljmp
cmp
icebp
fldl
mov
loopne
xchg
lret
xchg
shl
les
aaa
aam
in
into
repz
aas
cmp
mov
stc
xchg
xor
clc
shl
test
std
lret
icebp
lret
aam
loopne
not
std
rolb
icebp
decl
call
iret
aam
fdivr
icebp
cmpb
lret
out
jecxz
jmp
xchg
in
icebp
shr
fcmovbe
enter
cli
idiv
loopne
out
lock
leave
out
in
mov
std
lret
iret
xor
jmp
cmp
repz
test
fcmovb
in
cli
mov
xchg
shl
shrb
rol
xor
sarb
cld
iret
xlat
out
call
xchg
leave
xchg
in
call
lret
aaa
iret
cmc
sar
test
stc
lret
div
lock
out
xor
out
into
stc
out
xor
push
lret
cli
cmp
fadd
rorl
out
xchg
mov
xchg
aas
jmp
xor
xlat
repz
roll
rcl
jmp
xchg
mov
adc
in
cmp
fmul
fildl
std
fcmovnu
rol
ljmp
aad
imul
out
cmp
out
aam
lret
cmp
add
or
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
jmp
iret
into
ret
ror
aad
addb
mov
jl
lret
jl
loop
ret
loope
xchg
idiv
fdivr
and
rcr
xlat
lds
fsincos
shl
cmp
fidivrs
aad
xlat
into
stc
repz
dec
fisttpll
in
lret
jecxz
aad
rcl
shl
xor
sbb
adc
in
mov
std
iret
enter
cld
ror
xlat
jmp
out
in
cmp
cmp
test
fcomip
xlat
cli
ffreep
mov
test
mov
cs
into
iret
std
roll
rcl
fldl
xchg
rcll
into
xor
xor
and
test
mov
xchg
loopne
ds
in
call
cmp
cmp
in
sti
loopne
addl
addl
sub
stc
icebp
call
rcl
cmp
int3
int
idiv
rol
fisttpl
fisttps
cmc
repz
lret
into
out
cmc
call
sar
xchg
stc
enter
int3
xchg
call
xor
aaa
out
dec
cmp
shr
loope
jecxz
out
xchg
loope
call
xor
fcmovne
clc
jmp
out
stc
cmp
fcos
cmc
hlt
ret
clc
enter
in
jmp
out
sub
rol
into
adc
loope
jmp
jmp
iret
xchg
in
xor
leave
aad
loope
aad
clc
cmp
in
in
call
leave
cld
sar
shl
xor
enter
cmp
cmp
in
loope
out
push
clc
in
loop
int
lret
test
ds
fcomp
enter
stc
idivb
lds
loop
out
xor
loopne
loop
into
leave
leave
inc
int
repz
xchg
fdiv
loop
out
cld
lret
repz
ljmp
in
aad
lret
ret
and
out
in
out
aas
fucom
leave
icebp
nop
repz
loopne
ss
sarl
rcr
fcmovne
int
out
sbb
repz
icebp
std
xchg
out
out
sub
lret
add
int3
cmp
repnz
int3
cmp
cmc
or
out
cli
sti
xchg
xchg
mov
out
sub
shlb
lock
clc
cmp
shl
repz
sti
sbb
jmp
jecxz
call
cmp
fcmove
std
lret
std
cli
ret
in
mul
testb
ficoms
ljmp
lret
lock
out
loope
fcomip
rcl
fucom
mov
jmp
hlt
xor
int3
ss
icebp
idivl
cmp
out
stc
filds
int3
fmull
shr
in
in
leave
aam
in
int3
jmp
shl
not
mov
in
loopne
out
or
xchg
xchg
aas
hlt
enter
xor
iret
rcr
call
repz
shr
lock
jmp
in
sbb
cld
ds
cmc
out
out
clc
cli
into
aad
enter
fsubp
xor
ret
in
cmp
cmc
leave
xor
out
sti
int3
lds
out
cmp
std
std
cmp
and
aas
test
fcmovnb
cli
fisttpll
in
xchg
int
jmp
cmc
cld
jecxz
fcmovu
out
jecxz
stc
test
fisttps
jecxz
out
aam
xlat
int3
fidivl
lock
icebp
fisttps
out
rolb
shl
iret
jmp
lret
shl
std
in
mov
or
aas
rcl
sti
xor
into
xlat
repz
cli
sub
clc
repnz
fucom
test
int3
fcmovu
sti
mov
xchg
jecxz
lret
iret
fcmovne
fxch
div
in
jmp
loope
in
lds
fucom
jecxz
enter
mov
lret
clc
xor
ds
hlt
cmpb
loop
cmpl
lds
xor
ret
in
in
xor
cmp
ffree
testl
shr
int
rol
xlat
aaa
repnz
fiadds
fsubp
in
loope
enter
in
pop
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
pushl
pushl
push
pushl
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
mov
add
mov
orl
xor
sub
mov
xorl
add
movzwl
movl
mov
movl
movb
sbbl
lea
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
orl
mov
mov
xor
incl
sub
xorl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
jmp
ret
rcl
rol
aad
nop
push
pop
les
lock
push
jl
lret
jl
in
mov
loop
iret
aaa
jmp
leave
out
fmul
sar
fst
fsubrp
in
fcom
call
cld
call
in
rcr
in
aaa
into
out
cli
aad
fcom
hlt
repnz
icebp
leave
loope
jmp
lea
sub
xor
out
std
fxch
sar
out
jmp
clc
or
cli
cli
ljmp
stc
fdivrl
jmp
cli
int
fdivrp
in
mov
jmp
leave
std
out
into
adc
rol
lock
hlt
xor
enter
cmp
inc
ret
mov
jmp
in
stc
int
lret
out
shlb
jmp
repz
rol
hlt
ds
test
xchg
in
ret
hlt
rol
sti
lret
cmc
fcmovbe
testl
enter
in
xchg
mov
shrl
in
xor
in
int3
loopne
in
test
call
jmp
leave
out
mov
mov
in
cmc
shlb
sti
neg
ror
aad
rcl
xchg
fcmovnb
out
int
xchg
mov
out
lret
out
xlat
int3
int3
cmc
cmp
fiadds
jmp
int
xchg
shl
call
fcmove
fst
aam
lret
hlt
out
fucom
aam
mov
mov
aad
sti
call
lret
fcomi
repz
addb
mov
sti
in
decl
out
loop
xor
ss
ds
int
test
fcomip
ljmp
clc
out
jecxz
xchg
imul
lret
in
cmc
into
out
xlat
cmp
sub
stc
sar
hlt
mul
in
mov
fstl
cmc
xor
out
fcomi
lret
repnz
clc
idiv
mov
stc
out
into
cmc
int3
ror
out
rcr
aad
loope
out
std
shl
icebp
neg
faddl
fdivrp
int3
loopne
in
xchg
icebp
call
cmp
cli
aad
std
cmp
hlt
aad
test
in
test
cmc
shr
xor
loop
int3
xor
ss
cmp
fldl2t
test
shr
sub
aam
icebp
aad
icebp
cmp
aad
into
cmp
lock
cmc
stc
decl
mov
out
xchg
enter
das
ror
out
xor
ss
aam
aad
xor
xlat
test
mov
xchg
in
cmc
loopne
out
into
aaa
clc
loope
cmp
adc
add
aad
mov
lds
loop
xlat
xor
icebp
repz
clc
in
cmp
cmp
out
ds
vpaddw
test
test
ljmp
loop
iret
fpatan
cmp
jmp
fsub
shl
call
leave
loope
xchg
into
loop
imull
iret
in
stc
repnz
fdivrp
cld
adc
loopne,pt
mov
test
loop
rcl
aaa
xor
sti
cld
aad
test
loop
lock
loopne
mov
in
xchg
ss
jmp
sar
out
xor
cmc
cmp
jmp
out
out
in
test
out
ljmp
ss
xor
sar
loop
std
sbb
incb
lock
icebp
iret
cmp
repz
hlt
xlat
adc
leave
call
mov
in
fildl
xlat
clc
xlat
sti
cmp
int3
leave
mul
fcmovbe
fcmovb
out
test
cmc
in
faddp
test
xchg
out
mov
aam
cmc
lret
ss
sar
faddl
into
add
mov
mov
in
loopne
in
call
cmc
ss
cmp
cmp
incb
rol
ret
mov
loop
fucomip
out
repnz
lret
lock
fsin
xor
cli
cmp
cmp
jmp
loope
mov
xchg
icebp
sub
hlt
iret
cmp
ljmp
cmc
out
repnz
fsub
stc
iret
call
std
in
out
int3
ret
out
iret
iret
in
call
ret
cmp
xchg
xchg
testb
loop
lret
repz
fdivr
call
lock
dec
or
push
xor
mov
add
jmp
jmp
aad
shlb
stc
loopne
test
jl
add
pushl
cld
into
cmc
shl
movb
loopne
test
out
mov
in
vmovq
jmp
fcmovnu
aaa
ds
out
xlat
clc
test
stc
repnz
clc
sbb
and
aad
repnz
icebp
cmc
repz
sar
cli
cmp
in
orb
mov
aam
cs
not
call
cmp
cld
cmc
aad
testl
sti
in
aam
lret
rcl
call
out
loope
in
mov
rcr
int
int3
enter
aas
sar
icebp
cld
loopne
not
frstpm(287
xchg
sti
fmul
loopne
jmp
loop
into
call
cmp
in
repz
leave
cmp
cmc
fdivrp
clc
cmp
cmc
int
sbb
fdiv
das
loop
xlat
sti
leave
cmp
enter
into
ret
fiadds
cmp
movl
cmp
clc
ret
cmc
xchg
ret
lret
xchg
jecxz
out
fmull
jecxz
int3
fcmovne
aad
cmp
stc
shl
in
rcr
stc
fcmovne
lret
jecxz
iret
mov
cmc
sub
out
shr
into
rcr
cmp
sarl
stc
sti
xchg
icebp
addb
aam
ss
fnstsw
cmp
cmc
mov
cli
lret
or
adc
xor
jmp
dec
cmp
jmp
aas
fadd
shl
fadds
mov
xor
fcom
cmp
cmc
fcmove
jmp
fdivp
iret
mul
jecxz
adc
rorl
loopne
ljmp
cld
cmp
idiv
sti
cld
icebp
loope
cld
fsubr
fimuls
into
shl
fcom
jecxz
cmc
lret
cmp
jecxz
div
xor
imul
jmp
lret
mov
fadd
cmp
fsubr
hlt
cmp
xchg
xchg
jmp
hlt
lock
call
cmp
ljmp
stc
ret
lret
jmp
mov
in
lret
loop
int3
loopne
shr
clc
cmp
stc
out
cmc
sti
sar
fcomp
lret
test
fmul
call
enter
cmp
leave
aad
shl
int
iret
clc
std
cmp
addl
call
ljmp
aad
repz
in
stc
enter
mov
lret
loop
ds
in
fld
cld
cli
rcr
fcmovu
cmp
xlat
test
jecxz
testl
jmp
shr
icebp
aaa
call
icebp
sbb
ds
loope
or
mov
int
out
into
aad
cmp
int3
shr
aam
cld
aas
rol
hlt
rcl
cld
adc
in
int3
test
mov
lock
shl
int3
std
loope
addl
out
mov
loope
enter
mov
test
jmp
cmp
sti
iret
out
cld
ret
fsub
mov
enter
sar
into
in
loopne
int
cmc
int3
repz
aas
adc
std
ffreep
lret
loop
xor
shl
xlat
enter
cmp
aad
shr
in
std
in
xchg
mov
out
lret
repz
imul
cs
cmp
stc
fcmovnbe
cmp
jmp
in
in
xor
xor
hlt
xor
test
fcmovnu
fcom
rolb
flds
xor
ret
aad
ss
aam
fdivrs
xchg
sti
filds
loopne
aam
out
stc
aad
cmp
cld
cli
aam
cmp
aam
leave
loope
std
mov
or
ret
ljmp
aad
rolb
lds
enter
out
in
lret
lock
aad
repz
rol
cld
cmp
hlt
cli
mov
call
into
shl
shr
not
ffree
rcr
ret
out
ds
jmp
push
decl
data16
add
rcl
aad
fcmovne
scas
push
mov
mov
pop
jl
lret
jl
in
sbb
xchg
mov
int
shll
repnz
idiv
aam
rol
fstp
hlt
repz
clc
fucom
fsubp
mov
call
fcmovbe
icebp
iret
fstpt
aam
fsubp
into
lock
fsubr
jecxz
repnz
aaa
into
out
aas
roll
rcl
ffree
and
fcmove
lock
in
int
bnd
xor
out
cmp
jmp
addl
hlt
sti
int
fldl2t
int
xchg
ret
out
iret
shl
repnz
int
clc
shll
cmpb
jmp
mov
jecxz
mov
in
sarb
enter
int
pushl
cmp
fsubr
stc
mul
cli
mov
in
fcmovb
lret
repnz
loop
out
out
cmp
int
fcmovnb
sarb
out
aad
cmp
mov
orb
rol
vaddsubpd
ljmp
sti
out
in
loop
imul
call
call
in
lret
xor
fdivrs
cmp
and
xchg
call
out
imul
cmp
sti
out
repnz
loopne
int3
in
out
lock
lock
std
cli
faddl
adcb
les
fucomi
ljmp
shl
neg
clc
clc
cld
cli
cli
loop
int3
sar
xor
xor
iret
iret
rcl
into
addb
test
aam
loope
out
in
xchg
xchg
ret
repz
xor
lock
cmp
cli
sarb
fucomi
lock
not
fisttps
fsubr
lret
loopne
in
leave
loope
cmc
lret
stc
fcomi
cmp
shl
cmp
stc
cmp
mov
vpminsw
iret
lea
xor
in
out
jmp
jecxz
loop
mul
sti
stc
std
int
jmp
xchg
cld
into
shl
shrl
repz
out
or
call
sub
mov
out
xor
mul
hlt
aam
xlat
in
stc
shr
xlat
cld
xlat
testl
nop
mov
lret
aam
icebp
clc
repz
lret
in
ljmp
in
clc
fisttpll
mov
loop
cmp
in
jmp
repnz
sbb
idiv
int
sbb
sub
enter
cs
clc
xlat
sar
cmp
rcr
rcr
ds
repz
test
in
cmc
in
cmp
fsubr
fnstenv
int
lock
rcr
les
jmp
into
out
xlat
xor
test
rcl
aas
cmp
fabs
clc
test
test
fcmovu
mov
ljmp
jecxz
out
leave
fsubrp
out
hlt
in
into
ds
sar
testb
enter
int3
enter
xlat
fstp
sarb
int3
ss
ss
hlt
test
sti
fucomp
fcmove
lock
lret
jmp
leave
hlt
sti
call
rolb
enter
call
loope
or
ret
shl
cmp
in
rcr
repnz
jecxz
out
fadds
test
into
in
int3
shr
out
aad
aad
cmp
add
hlt
repnz
jmp
cmp
mov
ret
repz
cmp
aaa
loope
fistpll
lock
mov
sar
ss
aam
shr
not
fadd
cmp
in
in
call
out
xchg
lret
hlt
xor
sarl
int3
sar
sar
mov
loopne
jmp
in
xchg
out
lds
jecxz
out
in
clc
int3
fldlg2
loop
aaa
add
enter
test
in
mov
ret
stc
out
clc
loopne
stc
fstp
cmp
adc
test
stc
fsubp
leave
cmp
jecxz
fincstp
not
in
icebp
ror
in
lock
loop
jmp
fadds
mov
int3
aas
loope
call
adc
fprem1
jecxz
jmp
in
ljmp
clc
inc
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
jmp
aad
xor
rcll
lret
jl
fnop
not
xlat
repz
loopne
cld
stc
out
jmp
loop
xchg
int3
cmc
repnz
in
int
in
aaa
cmp
cld
loope
cmp
cmp
icebp
fisttps
xor
in
lock
idiv
neg
sbb
cld
test
lea
lret
fsubr
lock
lret
clc
shr
int
xor
rolb
cld
vpxor
clc
mov
cmp
out
out
ret
fst
sarb
ljmp
repnz
out
lret
out
lret
aaa
xor
cld
xor
out
call
into
icebp
aam
adc
sub
addl
xor
repnz
cmp
out
ss
cmc
cmc
in
repz
fisttpl
xchg
xchg
nop
repnz
repz
cmp
cmc
fcmovne
hlt
std
cli
cmp
adc
fisttpll
xchg
aam
out
imul
aad
lret
hlt
aas
lret
sar
out
icebp
leave
ret
test
loope
jecxz
xlat
leave
vcvtss2si
std
shr
icebp
shr
loop
jecxz
cmc
xlat
sar
lea
fcom
aam
ss
cmp
fsqrt
xchg
in
cli
out
in
fsub
enter
lock
fcomp
repz
lock
iret
loopne,pt
lret
clc
xchg
lret
fsubp
lock
jmp
das
bnd
cmc
cld
loopne
std
add
neg
call
fstl
sbb
shl
lds
icebp
cld
shr
rol
test
loopne
jmp
fdivr
into
jmp
aas
in
aad
fdivr
cmp
cmp
lock
hlt
add
ds
loopne
sub
icebp
in
nop
in
in
xor
loop
repnz
aad
shr
std
xlat
xlat
loop
sti
icebp
ret
out
jmp
call
xlat
std
jecxz
xor
sarl
in
call
mov
in
hlt
sub
call
icebp
addb
and
std
fxch
mov
mov
int
int
lock
out
loopne
loop
fcmovu
jecxz
aam
bnd
cmp
test
shl
loop
shl
out
int3
sbb
lock
clc
stc
aam
fcmovbe
fcmovbe
fcom
out
rol
repnz
in
lea
lret
in
out
sar
idivb
fcmove
test
loopne
idiv
not
loopne
ftst
int
enter
aam
xor
xor
enter
lret
int3
shl
cmp
jmp
leave
jmp
jecxz
lret
out
iret
xor
fcmovu
fdivrl
icebp
fucomip
iret
sti
aas
xchg
xchg
mov
out
nop
xchg
int
enter
fstp
int
fldz
cmp
int3
dec
sub
mov
fiadds
xchg
mov
iret
divl
neg
enter
sti
enter
out
test
xchg
inc
xlat
mov
stc
lret
sub
enter
call
lock
loopne
shl
mov
testl
xor
out
enter
in
repz
out
aad
stc
lret
or
std
test
jmp
cs
out
iret
fcmovu
out
test
mov
in
mov
in
in
faddp
int
jecxz
vpsrld
icebp
repz
loope
cmp
clc
icebp
testl
std
repz
repz
out
idiv
cli
int
cmp
rcr
mov
in
ljmp
in
repnz
sub
fcmovnbe
cmp
in
leave
shl
test
fcomp
jmp
out
faddl
out
xlat
enter
aad
aaa
loope
shl
cmp
cli
mov
lret
clc
in
fsubp
xchg
cld
roll
lret
out
fcmovnbe
loope
in
ret
roll
mov
in
cld
leave
stc
icebp
jecxz
xor
out
in
out
lock
repz
vpcmpgtd
inc
xchg
add
add
jmp
ret
int
lret
sub
pop
lret
jl
lret
jl
aam
lret
out
mov
jmp
out
into
fcmovnb
repz
loopne
in
repnz
cld
rol
lock
lock
repz
xor
ds
add
fdivr
jmp
ljmp
mov
jmp
aas
into
imul
xor
xor
fstp
fcmovnb
fdivr
ds
loope
aad
jecxz
repz
xchg
shr
xlat
xor
xor
shll
ror
std
aas
cld
loopne
test
nop
lock
lock
loop
hlt
in
fucomip
lret
ffreep
rcr
div
out
fsub
cld
fucomi
adcb
xor
std
cmc
xor
repnz
xchg
cli
xchg
xorl
sar
divb
lret
leave
lret
xlat
std
clc
lock
jmp
testb
icebp
loopne
cs
xor
div
movb
and
in
mov
stc
cmp
cmp
rcl
ret
loop
loopne
repnz
mov
test
testb
aam
xor
ret
cmp
ss
adc
shr
fsubp
testb
fcmovne
jmp
hlt
loop
sub
iret
ss
xlat
lock
fsub
fxam
out
and
iret
lock
enter
out
xor
out
aad
cmp
aad
leave
loop
xchg
fildl
int
cs
rcl
int3
repz
lret
loop
out
mov
lret
fisttps
in
xlat
hlt
fcomip
icebp
xor
cli
out
jecxz
hlt
in
ret
in
enter
jecxz
xchg
int3
repz
in
fmul
fdivrl
xor
ss
lds
out
test
repnz
lret
sbb
in
rcl
lock
xor
loop
out
faddl
ljmp
into
loopne
loopne
repz
test
out
int3
fadd
repz
aad
in
lret
out
mov
repnz
repnz
out
cmp
jmp
enter
rol
lock
ljmp
mov
xchg
rcl
ds
into
out
hlt
cld
in
rcl
cli
dec
fcmovu
rorb
leave
test
mov
mov
out
repz
fsubr
out
rcr
repnz
adc
lock
mov
in
int3
rcl
repnz
lret
enter
sti
fmuls
aas
fcmovnbe
fsubp
sti
mov
in
neg
aaa
stc
call
repz
idiv
aad
add
mov
loop
and
orb
lret
xlat
xor
out
idivb
repz
repz
in
in
cli
out
fmull
aaa
in
rcl
out
cmc
ffree
ret
stc
sarl
in
std
in
sub
repz
ss
fstp
rolb
fmull
lds
out
in
out
xor
jmp
jmp
cmp
xlat
xlat
jecxz
clc
test
jmp
cmp
xor
jmp
int
xlat
imul
cmp
in
jmp
ljmp
lret
xor
out
jmp
aam
add
cmp
out
cli
jmp
mov
in
shll
in
aaa
aad
xlat
fcomi
fcmovnbe
cmp
fcmovnbe
fdiv
aad
jmp
cld
test
xor
icebp
cli
aaa
out
aaa
cmp
cmp
cld
aas
test
leave
call
test
test
in
cmp
aas
lret
test
fcomp
fmuls
popl
aad
clc
cmp
shl
out
cmp
aad
cmc
leave
repnz
call
leave
xchg
ds
shr
aam
jmp
addb
inc
mov
lea
hlt
cmp
std
into
icebp
jmp
rcl
fidivrl
out
cli
fidivrl
vpsraw
sar
orl
rorb
jmp
ds
int
int
int
mov
xor
mov
jl
lret
jl
sub
iret
jmp
fdiv
out
xor
ljmp
jmp
test
enter
in
fldl
xor
xlat
cmp
shr
cmp
cmp
sar
loopne
jecxz
mov
repz
out
aad
call
aas
lret
into
test
stc
add
out
int
sbb
dec
shr
xlat
jmp
shl
rcl
sar
rcl
fidivrs
incb
mul
in
loop
addl
repz
fcomi
cmc
stc
into
icebp
sarb
xlat
ljmp
ljmp
jecxz
shl
lret
cmp
xor
icebp
out
fdivrl
rcl
test
mov
in
xor
ret
aam
clc
into
enter
shl
fnstsw
movl
xor
aaa
leave
rcr
in
fucomp
ljmp
in
hlt
in
dec
fcmovnu
loope
shr
xor
xor
icebp
aaa
jmp
rcl
ret
rcl
sti
test
int
int
movb
lret
int
lds
out
fdiv
sti
rolb
out
loopne
fisttpl
int3
in
shr
loopne
xor
int
cmp
ret
xchg
ftst
jecxz
xchg
iret
loopne
leave
ss
fnstcw
aam
lock
sub
out
fmull
mov
mov
fcmovnu
cld
out
int
in
out
loop
into
ds
addl
loop
cs
lock
clc
in
lret
cmp
xor
in
hlt
ror
orl
hlt
loopne
xor
iret
in
divl
xor
test
adc
cld
fildl
stc
mov
xchg
shl
enter
cmp
xor
aaa
cmp
loope
xchg
hlt
leave
out
aam
sti
sbb
mov
aad
out
xor
out
jmp
out
out
ljmp
clc
enter
sti
cld
test
loop
xchg
das
les
cmp
ss
std
fsub
shl
cmc
std
loopne
loop
int
out
fdivp
lret
shl
jmp
repz
jecxz
test
in
rorb
fsub
mov
test
jmp
in
into
ret
loopne
repz
rcl
cmp
aas
out
ret
sar
fcmove
iret
xchg
in
out
call
cmp
iret
fiaddl
leave
lret
nop
lret
loop
into
mov
jmp
cmp
stc
lret
aaa
rcr
into
std
lock
test
xchg
out
nop
repnz
sti
cli
neg
cmc
in
cmp
loope
call
mov
mov
enter
fbstp
cs
aad
cmp
sti
sar
hlt
xlat
xlat
testl
subb
ljmp
cld
call
cmp
fxtract
loopne
test
loope
into
int3
rcll
xlat
fucomi
enter
iret
rolb
inc
mov
rcl
lret
decl
ror
aas
lock
clc
enter
sar
std
cmp
shl
rcl
ljmp
mov
repz
xor
rolb
in
fiadds
leave
ljmp
test
fdiv
cli
xlat
hlt
shr
cmp
repz
std
cmc
std
ret
mov
addl
aam
xor
icebp
aam
jmp
cmp
cmp
fadds
into
mov
int3
jecxz
xchg
not
xor
clc
cmp
fmul
cmp
sar
std
repnz
or
int3
in
in
lret
fnop
cmp
shl
int
shl
cli
test
ljmp
out
fmul
fcomip
out
stc
lret
stc
neg
in
fnstsw
cli
lock
iret
repz
mov
xor
aaa
shr
out
lret
fucomip
loopne
icebp
repnz
test
cli
sti
or
sti
ljmp
int3
icebp
repnz
xlat
cmc
enter
rorb
mov
nop
xor
add
mov
jmp
rcl
ret
fst
xlat
inc
dec
push
lods
mov
jo
or
jl
add
repz
out
xlat
cmc
leave
fsub
test
ljmp
lret
idiv
int
iret
leave
stc
cmc
out
in
loop
ffreep
in
iret
out
out
aad
lock
jmp
jmp
in
rcl
test
repnz
addl
out
call
sar
in
cmp
aas
fdivrs
cli
fcmovnu
xchg
fildl
iret
out
and
test
xlat
lret
clc
lret
cmp
out
sar
cmc
sbb
fucomip
call
in
repz
clc
in
xor
cmp
cmp
stc
cmp
jecxz
ljmp
lock
fdivrl
loop
out
cmc
hlt
out
cmp
rcr
cmp
cmc
icebp
repz
test
fiaddl
xchg
ret
in
into
out
aam
xor
out
fidivrs
ret
fiadds
clc
lret
decl
icebp
fcomp
out
hlt
dec
cmp
ret
repnz
jmp
aam
int3
out
leave
ret
hlt
cmp
enter
cmpl
fcmovu
loopne
mov
test
cmp
cmp
rcr
lret
loope
loop
leave
enter
fcmovnb
lret
std
in
test
xor
repz
loope
aad
in
fmuls
loope
cli
in
iret
lret
cs
xor
ror
leave
xor
loop
lock
jmp
loop
ffreep
test
enter
ret
hlt
sti
repz
sti
repnz
cmp
test
mov
testl
xchg
shll
lret
xor
les
out
call
lock
iret
aad
ret
ljmp
out
int3
enter
int
ret
xor
hlt
divl
fdivrs
cmp
jmp
loopne
sub
enter
fnstenv
mov
cmp
not
cmc
aaa
aad
roll
in
mov
xor
xor
fdiv
lret
ffree
hlt
loope
rol
les
cld
idiv
iret
faddl
ret
repnz
ljmp
shl
cli
jecxz
test
fdivr
int3
int
aam
xor
enter
repz
sar
out
iret
div
out
loop
jmp
ljmp
ret
xor
ret
out
jmp
out
hlt
sti
testl
lret
test
adc
ret
repz
enter
enter
fcmovu
fdiv
cld
into
aam
xlat
in
out
fadds
xchg
ret
fnclex
cld
stc
cld
repz
cld
ret
repnz
ds
xchg
cmc
loopne
iret
xor
stc
fyl2x
stc
leave
leave
out
hlt
iret
ds
fadd
incb
fisttpl
stc
in
f2xm1
xlat
lock
cmp
cmp
cmp
int3
out
rolb
out
lret
test
xor
shl
lret
cld
addl
sar
dec
ljmp
jecxz
rol
fcmovnbe
repnz
repz
cmp
sar
mov
addb
rol
ljmp
rolb
flds
int3
loope
fsub
xor
in
cmc
cs
cmp
cmc
int3
ljmp
cmp
enter
in
in
std
fimuls
in
ss
leave
xor
ret
cmc
out
mov
jmp
call
aad
shr
aas
sti
int
lret
test
jmp
test
and
cmc
rcl
div
lret
out
xor
in
out
fidivrl
fldl
ret
aad
mov
stc
lret
mov
test
loope
cmc
lock
out
out
out
int
test
cmc
xchg
xchg
cmpl
xor
cmp
jmp
cmp
cmp
loop
xlat
sub
mov
icebp
mov
into
loopne
aaa
lock
out
imul
incl
xchg
cmp
sti
mul
mov
enter
cmp
jmp
aad
enter
fsts
pop
pop
push
lret
jl
in
xchg
loopne
xor
repz
jmp
jecxz
cmc
ds
clc
ret
testb
call
rcl
cmp
into
leave
test
test
hlt
shr
jmp
testb
std
repz
into
in
loopne
out
ss
clc
into
out
aad
shr
fmul
jmp
fiaddl
out
vphaddubd
repz
hlt
clc
idiv
cmp
jmp
add
mov
xchg
jmp
lret
lock
icebp
aaa
enter
fcmovnu
out
adc
rorl
test
xchg
nop
rorl
call
fildl
rol
fadds
jmp
ljmp
shl
in
xor
call
jmp
in
loopne
repnz
stc
enter
jmp
cli
in
xchg
nop
in
loopne
lret
xlat
sarb
std
out
out
sar
out
mov
ret
fsubrp
decl
cld
rcl
out
cmp
out
cmp
test
jecxz
ret
lret
testl
int
iret
in
lret
in
cmp
lret
xchg
repnz
fdivrp
in
mov
loopne
in
out
fldl
out
int
neg
icebp
fcmovnbe
fld
repnz
cmp
call
mov
jmp
hlt
aaa
jecxz
rcr
out
cmp
shl
fdivp
hlt
cmp
add
int
fcmovnu
fcomp
xor
ror
idivl
fcmovu
cli
repnz
clc
shl
cmc
lock
addl
loopne
in
aas
imull
out
fcmovne
fdivl
idivb
ret
and
aas
test
loop
call
lock
shr
loop
repz
rcl
fsubp
in
hlt
rcr
icebp
idiv
xlat
mov
add
fmul
jecxz
icebp
aaa
xor
xor
iret
int
aam
lret
cmp
repnz
mov
mov
fdivrp
call
out
xlat
ss
icebp
loope
in
icebp
out
in
out
mov
xchg
loope
test
ljmp
div
fdivrl
loopne
loopne
add
cld
stc
cld
fldl
out
repnz
fsubp
xor
leave
fnstenv
in
int3
xor
frndint
sarb
stc
xchg
out
out
bnd
rcl
out
repz
ljmp
test
lds
leave
mov
cld
in
dec
out
loope
fsubr
stc
repz
sarb
hlt
loopne
fiaddl
std
test
enter
repnz
iret
in
lock
iret
cld
out
repnz
repnz
test
jmp
out
jmp
ffree
xor
ss
div
jmp
out
filds
call
leave
loope
jecxz
hlt
imul
leave
jmp
jmp
in
cmp
clc
sarb
loop
jmp
in
cli
ffree
out
out
ss
aam
ljmp
xlat
loope
sti
fisttps
xlat
enter
iret
ror
lret
enter
repnz
rcl
loope
loop
addb
xor
test
repnz
hlt
in
leave
xor
out
fdivr
cmp
sub
jecxz
fdivrp
jmp
nop
int
icebp
aam
loop
ret
xor
int3
aad
aaa
fcomip
repz
int3
rorl
lret
fcomi
stc
lock
xor
testl
cmc
xchg
out
stc
lret
cmc
ljmp
ror
cld
repz
fildl
mov
mov
aam
stc
ror
enter
stc
filds
hlt
hlt
div
call
xchg
or
call
fcmovu
into
cmp
cli
fdiv
out
sti
test
loope
lret
repnz
imul
div
jmp
out
sti
idiv
out
idivb
fdiv
and
mov
mov
repz
xor
ret
enter
hlt
cmp
ljmp
ljmp
sub
rclb
cmp
iret
hlt
testb
add
add
xlat
aas
fst
fcmovne
mov
imul
lret
jl
lret
clc
movl
fsubr
mov
lock
in
xor
fadd
loop
std
xlat
fucomi
test
fadds
hlt
sub
hlt
sti
fld
cmp
shl
stc
test
out
in
cmc
cmc
lret
out
out
adc
into
iret
xor
fsub
hlt
ljmp
fsub
fdivrl
in
addl
int3
repnz
fcmovnbe
call
ljmp
fcomp
out
in
sti
call
test
call
shll
repnz
faddl
ret
jmp
addl
xchg
loop
in
fdivs
repnz
adc
add
ljmp
jmp
shl
aam
aad
sarl
out
in
fucom
fcomi
test
test
xchg
test
in
fnstsw
jmp
into
loop
lret
jmp
jmp
out
aad
rcr
fdiv
cld
xlat
enter
loope
in
vmovntps
int3
iret
aad
shr
stc
fnstsw
cmp
sti
repz
cli
jmp
nop
fsub
fiaddl
xor
in
bnd
loopne
hlt
shr
fsubr
enter
test
in
imull
aad
aad
cli
sti
xlat
jecxz
fsubrp
shl
ret
ds
loop
test
xor
int3
enter
aam
loope
xlat
call
leave
aad
loopne
in
iret
sub
loopne
out
xor
out
idiv
call
ror
jmp
jecxz
out
lret
cld
out
icebp
cli
out
test
rcl
pushl
cmp
sarb
addb
sti
loope
jmp
repnz
in
xlat
std
repz
cmp
cli
hlt
fadd
incl
in
lret
testb
aaa
ror
ljmp
icebp
adc
stc
aam
repz
xlat
sti
xchg
ljmp
cmp
aaa
lret
pushl
stc
stc
cmpl
addb
ss
imul
repz
cmp
int3
repnz
neg
cmc
ret
mov
nop
fistl
jmp
fdivr
lock
icebp
int
repz
mov
decl
enter
xor
fucompp
jmp
sarb
faddp
repz
jecxz
sub
in
jecxz
xchg
in
rcr
ror
loop
leave
ror
int3
stc
int3
icebp
cmp
push
rcr
incb
xchg
mov
xor
xor
into
xor
xor
jmp
clc
cld
sub
call
shl
lret
xor
int
loopne
std
clc
int3
test
rol
fdivp
sti
loopne
cli
repz
loop
mul
ret
lock
int
repnz
out
hlt
in
rol
sti
mov
enter
repnz
ss
sti
in
ljmp
cld
cmp
sub
fsubr
int3
out
enter
xchg
ret
clc
aam
les
not
loopne
shl
ror
out
loop
flds
sar
cmc
in
xor
out
jmp
in
std
fidivrl
jecxz
call
fmulp
jecxz
call
jecxz
lds
int3
leave
ljmp
cmp
aam
rorb
fcom
fsub
call
stc
shr
cld
enter
fsub
out
fdiv
icebp
aad
rcl
fadd
call
iret
iret
in
into
shr
ror
ss
out
fstpt
loopne
ret
sti
cld
sti
jmp
hlt
fiadds
mov
out
std
fdivs
fcomp
repnz
in
sti
in
out
lock
xchg
out
out
hlt
int
int3
ljmp
in
shl
ds
sar
call
cli
jmp
leave
mov
shl
fucom
cmp
xor
shr
fsubp
fildl
xchg
int
out
mov
loop
out
leave
ret
lock
ss
loope
jecxz
loope
rcl
ret
testl
in
lcall
jmp
int
into
fcmove
fst
aam
lods
push
aas
fs
clc
je
jl
lret
jl
in
std
rcr
test
in
shr
in
shl
in
cmp
iret
lret
into
int
into
incb
popl
sub
lret
int3
cld
call
iret
loope
out
clc
out
or
lret
jmp
ljmp
int
repz
icebp
fmull
icebp
in
enter
aad
leave
ret
lret
jecxz
out
repz
jmp
in
aad
loopne
cld
rcr
mov
fmulp
fsubr
xchg
lock
idiv
in
loopne
int3
aas
fcmovnbe
out
test
out
in
call
into
xchg
lret
aaa
cmp
hlt
cmp
cmp
div
rcr
cmpb
aad
repnz
hlt
sti
icebp
fxch
xor
das
les
fnstsw
fsubr
fcomi
clc
cmpl
ds
call
jmp
ret
std
fucom
xchg
ljmp
stc
xlat
fcmovb
lret
in
ljmp
aam
fst
loopne
xlat
xchg
cli
repz
fpatan
aaa
cld
int3
frndint
cmp
idiv
movb
in
out
in
lret
jmp
int
sub
iret
call
shr
iret
sar
fsubrp
lds
xchg
xlat
xchg
loope
std
mov
int
shr
out
in
lock
xor
fcmovnu
rcr
in
jmp
les
call
in
in
sti
jecxz
xor
xlat
repnz
jmp
test
lret
int3
mov
adc
ret
fcomi
lret
cmp
loope
fcmovnbe
loop
ds
ret
std
addb
repz
sub
in
ror
lock
loope
clc
sar
cld
ret
lret
aam
icebp
decl
rcr
ss
cmc
cmp
xor
cmp
idiv
jmp
test
addb
inc
imul
xlat
div
int3
in
out
iret
cmp
cmp
test
sar
mov
fucom
xchg
lret
xchg
mov
aaa
in
out
jmp
in
fsubr
into
fucom
test
int
movb
loop
xor
out
enter
in
ds
xchg
rolb
out
loop
lock
xor
cmp
xor
and
fcomp
xlat
fucomp
in
orl
shl
icebp
xlat
lret
fdivr
xlat
iret
in
lock
test
lret
in
lock
rclb
call
lret
fdiv
repz
icebp
ret
hlt
hlt
filds
in
lock
jmp
lret
int3
in
ret
sar
xor
out
test
idiv
in
repnz
inc
test
frstpm(287
jmp
aad
iret
out
xor
clc
idivb
fadds
in
call
mov
shrl
cs
iret
clc
leave
jmp
idivl
out
fnstsw
ret
call
decl
lret
in
ror
stc
ds
in
cmp
inc
enter
fmull
xor
xor
out
leave
in
cmp
rcr
loop
rcr
ffreep
and
fimull
repnz
xor
repz
cmp
sar
cmp
cmp
in
aam
mov
adc
out
iret
int
out
aas
fcmovnu
icebp
xor
jecxz
out
rcl
test
into
in
int3
xchg
sti
xor
jmp
fcmovbe
xor
fdivrs
jmp
ljmp
lret
sub
shll
out
ss
xor
shl
loop
ror
lds
fnsetpm(287
int3
mov
xchg
xlat
into
ror
in
sarb
xor
in
shl
int
cmc
sbb
in
fisttpll
orb
repz
in
jmp
cmp
div
repnz
mov
fld
out
lock
loop
in
ror
xor
not
cli
iret
push
into
cmp
cmp
idiv
out
jecxz
out
in
lock
in
out
xlat
repz
enter
xorl
sti
cmc
fsub
int3
sbb
loop
ret
in
sti
mov
mov
xor
add
mov
mov
xor
add
mov
mov
jmp
sarl
rcr
ret
fucomp
pop
mov
mov
lret
jl
cmp
in
xor
lret
sti
rcr
stc
cmp
in
test
xchg
icebp
int3
cmc
aaa
lock
in
aad
stc
lret
aam
test
aam
sti
fucom
fmul
in
lock
mov
jmp
xor
lret
fcmovnb
icebp
test
imul
orb
loope
out
icebp
cmc
cmc
cmp
cmp
ss
ret
fdivp
in
jecxz
fmuls
repz
xor
enter
leave
hlt
sti
rcl
cmc
roll
aad
out
loopne
iret
dec
iret
loopne
clc
les
ss
icebp
leave
cmp
fstpt
not
cmp
hlt
shl
jmp
leave
test
loop
loop
mov
loopne
sub
std
cmp
loope
cmp
ds
shl
fiadds
mov
in
les
ss
ljmp
in
sti
ds
aad
xlat
fucomip
imul
int3
in
out
loopne
cs
cmc
xor
in
repnz
test
xlat
aad
idiv
aam
jecxz
fiaddl
ror
vcmppd
out
lret
loopne
fdecstp
loopne
stc
test
loope
fsubr
hlt
ljmp
not
ftst
xor
out
out
ljmp
fcomp
xchg
cld
loop
out
enter
lret
std
call
xor
in
aam
aas
cmp
cmp
out
filds
fcmovb
in
loopne
in
int
xor
jecxz
iret
shl
cmc
cld
aas
fadd
roll
test
enter
iret
jmp
xor
in
ljmp
aad
cmc
aam
xchg
hlt
cmp
mov
cld
mov
fisttps
repnz
xor
cld
ds
loopne
in
in
fxch
stc
out
mov
test
std
out
in
ljmp
ret
cli
out
mov
leave
fyl2x
fucomp
fildl
jmp
xor
fdivs
aaa
cmp
ljmp
rol
cmp
out
into
aas
xor
out
cli
jmp
in
icebp
loope
shl
std
out
std
fucom
leave
test
out
sti
loope
jmp
aad
loopne
loop
xor
fdivp
xor
rol
ds
cld
shl
repnz
hlt
xor
ss
xor
std
ror
cmp
fnstcw
aam
cmc
cmp
loopne
in
cmc
iret
ret
aaa
aad
out
xor
cmp
into
clc
rol
sti
rol
jmp
enter
mov
ret
div
cli
repnz
fistpll
jecxz
jmp
filds
sar
std
rorb
repz
in
cld
sti
rcl
sbb
lret
loop
call
faddl
in
ret
cld
rcl
rcl
iret
hlt
repz
test
in
call
icebp
fnstcw
rcr
ljmp
xlat
cmp
addb
mov
mov
ror
ds
loop
repz
iret
aas
lret
dec
rcr
add
faddp
enter
lock
xor
lret
jmp
clc
fistpll
sti
fcmovbe
sti
cld
cli
test
loop
int3
jmp
xor
out
cmp
int
cmp
movb
out
rclb
ss
aam
ds
ds
ds
rcl
stc
jmp
xchg
hlt
mov
in
stc
xor
imul
cmp
int3
fpatan
neg
in
leave
clc
xchg
rcr
icebp
jmp
out
out
xor
cmpl
fcmovu
xlat
shr
jmp
jecxz
xchg
ror
ds
cmp
cmp
fidivrs
ljmp
idiv
fsubp
lret
fmull
ret
out
into
xor
lock
rol
fucomi
test
ret
test
inc
mov
leave
mov
mov
in
xlat
lret
ror
icebp
loope
out
hlt
not
shr
rolb
mov
xchg
lret
xchg
hlt
test
out
cmp
fcmovne
xor
cmc
cmp
out
lock
shl
cmp
adc
inc
add
add
ror
ds
ret
or
or
nop
add
lret
jl
xlat
loopne
nop
cmc
shr
int3
aaa
jecxz
out
iret
fnsave
jmp
hlt
test
hlt
fstp
sti
jecxz
out
mov
xlat
jmp
neg
sub
out
test
loopne
mov
mov
mov
ror
cmp
repnz
jmp
cmp
fcom
rcr
ret
cmc
cld
xlat
out
testl
cs
jmp
in
add
aas
fcmovnu
fstp
ljmp
mov
cmp
cmp
hlt
test
shl
loope
lret
add
fmuls
rol
leave
hlt
cmp
cmp
ss
clc
incb
xchg
cld
mov
fimuls
fsubr
ss
sarb
out
enter
xlat
ss
leave
rol
testl
ss
sub
call
in
jecxz
loop
sti
out
xchg
cli
in
int3
xchg
xchg
mov
icebp
cmc
in
xor
xor
out
out
leave
shlb
aas
sar
sti
call
fcmovbe
loop
loopne
in
rol
aad
in
hlt
fdivr
jmp
test
rol
out
test
out
std
ret
into
out
out
icebp
iret
ret
cmp
fcomp
call
mul
cld
xor
in
out
mov
mov
sub
aam
jmp
int3
cmp
cmp
in
shr
fcomi
mov
jecxz
mov
int3
out
ss
fbstp
ror
out
stc
fmuls
xchg
in
xor
das
iret
cmp
loope
icebp
xlat
rol
sar
cmc
std
mov
adc
lret
out
hlt
xchg
rcl
lret
in
fptan
jmp
int3
stc
fcmovnb
cmp
clc
add
inc
mov
xchg
in
iret
shr
in
int3
repz
out
aas
fdivr
in
rcr
cmp
ret
fadd
cmp
sub
lock
repz
cs
jmp
repz
cmp
fst
cmp
sub
test
icebp
cmp
decl
out
icebp
ret
lret
cmp
rcr
cmc
div
loopne
and
clc
leave
clc
sar
loop
xchg
repz
cmp
stc
xor
lret
iret
out
out
clc
loopne
fadd
fmull
jecxz
fdivs
cmp
icebp
leave
imul
cld
fdiv
rcr
shl
cmp
jmp
fldl
ljmp
aad
shr
shr
cld
lret
loopne
xlat
sar
clc
cli
mov
stc
fprem
mov
xor
lret
fcomp
out
rcl
cmp
clc
hlt
cmp
xlat
hlt
sub
ljmp
repnz
vpsllw
icebp
sar
sar
cmc
fucom
leave
in
lret
lock
jmp
out
cmp
out
adc
test
in
orb
nop
fcmovnbe
jmp
xor
in
jmp
int3
fcmovne
clc
loope
fsubp
cli
fildl
fdiv
in
loopne
loop
ret
xlat
enter
ljmp
loopne
mov
not
cli
mov
rorb
imul
hlt
call
cld
shlb
shr
loop
ret
jmp
lret
jmp
test
rorl
shl
iret
cli
fnstcw
xlat
aaa
rol
cmp
fucomi
fcmovbe
call
ret
xchg
shr
ror
clc
repnz
aad
cld
fucomi
fcmove
repnz
iret
xor
xor
sar
xor
fcom
dec
xor
aam
rol
mul
leave
mov
nop
iret
cmc
ret
in
divl
out
hlt
sar
rcr
fucomi
sti
adc
cld
in
jmp
lret
leave
aad
cmp
call
jmp
loop
cmp
enter
loope
cli
lret
cmc
xor
jecxz
lock
cld
cmc
cmp
addl
fmul
out
mov
into
iret
enter
aad
aad
xlat
incb
loope
ror
repnz
mov
in
leave
xlat
mov
cmp
je
mov
mov
mov
jmp
lret
aam
fcomp
aad
andb
push
loopne
pop
push
jg
lret
jl
aam
std
std
fucomp
cli
repz
cld
ret
cli
sti
fadds
fstl
out
loope
sarl
in
cmp
fcomp
lret
cmp
fndisi(8087
cmp
aam
stc
lea
in
iret
xchg
fsubp
out
cmp
int3
lret
cmc
xor
cld
test
ljmp
ret
xor
icebp
out
cmc
ss
aas
sbb
lock
lock
lret
out
enter
aad
out
lock
lock
cmp
in
cmp
fsub
ret
out
xchg
jmp
cmc
jmp
cmp
rol
in
aas
repz
std
fst
fadd
fld1
loopne
mov
int3
in
out
fmul
ret
sub
cmc
in
rcr
ffree
mul
in
mov
incb
mov
test
fnstsw
jmp
stc
test
repz
movl
int
ljmp
cld
ror
cmp
xchg
incl
mov
int
call
lret
out
in
fldl2e
sar
cmp
test
loop
std
hlt
mov
lret
lret
sbb
loop
cld
shrl
sub
aam
in
ds
cmp
fcomi
rcl
in
orb
xchg
lret
hlt
call
lock
jmp
cld
roll
cld
fcmovu
out
leave
out
loopne
rcl
out
in
hlt
call
not
ljmp
xchg
cli
fdivrp
jmp
into
addl
stc
loope
in
cmc
neg
cmp
int
fdivp
cmp
out
cld
and
in
lret
loope
aam
rcl
leave
enter
loope
in
xlat
sub
shr
decl
cli
out
in
xchg
loop
loopne
lock
fcomi
lock
std
test
orl
int
int
addl
xlat
xlat
in
aam
in
hlt
stc
aas
stc
cmp
fcmovnb
lock
in
sbb
sti
enter
out
xor
xor
lret
enter
out
cmp
fsub
aas
xlat
cli
ret
call
in
into
subb
cmp
cmp
ror
jmp
int3
fsubrp
call
lret
ljmp
rcl
fcomp
icebp
xor
jmp
push
mul
leave
mov
nop
hlt
loope
xor
ror
repnz
cmp
xlat
fcmovu
fcomip
fdivp
mov
mov
out
repz
loopne
shlb
out
aad
cli
lock
std
in
cmp
loop
fsubr
fincstp
icebp
in
in
adc
lret
xor
cmp
xor
fcmovne
mov
fxch
clc
out
int
xor
fstpt
cs
repz
aas
vcmppd
aam
rol
movl
jmp
out
out
fld
rcl
fyl2x
cmp
xlat
rolb
mov
rcl
xor
cmp
cmp
rolb
sti
or
jecxz
xchg
aam
in
lret
cli
rcl
ss
fpatan
loope
fucomi
faddl
out
ret
out
ret
in
lret
aad
jmp
fscale
in
sti
rol
aas
stc
jmp
fldl
out
aaa
out
xor
enter
ds
aad
out
jecxz
call
mov
mov
repnz
ss
in
into
in
ljmp
sti
in
fisttps
enter
jmp
bnd
cmc
icebp
cmc
ljmp
adc
repnz
fdivr
lret
nop
shl
xchg
aad
repz
aas
aad
cmp
cmp
rolb
out
mov
fldl
loopne
int
aad
in
fmul
stc
ds
clc
ret
orl
repnz
in
aam
idivl
cli
fdiv
in
std
fmull
testb
cld
xchg
ljmp
xlat
out
ffreep
out
iret
int3
cmp
jmp
mov
fcmovnb
in
mov
pop
insb
sub
jg
lret
jl
aas
loopne
fucom
call
nop
mov
call
shr
ss
repz
icebp
flds
leave
rcl
aam
idiv
jecxz
adc
fucomi
in
cmp
out
fcmovnbe
hlt
in
in
repnz
lds
xchg
mov
call
jmp
shl
iret
sti
aas
xlat
icebp
leave
ret
hlt
fsub
out
mov
loope
aad
cmp
int
cmp
fucomip
in
out
in
movl
lock
int3
not
repz
leave
leave
lock
cmp
repz
idiv
int
jmp
cli
jecxz
lock
test
sti
aam
fidivrs
cmp
clc
ds
loop
xchg
mov
sub
not
fstpt
sub
fiadds
incb
xchg
ret
xor
cmp
neg
fucomi
rcl
rolb
mov
fcmovu
out
stc
lret
out
test
xchg
rcl
das
call
jmp
cmp
out
fcmovu
lds
mov
rcl
leave
ret
les
idivl
aam
cmp
sti
in
out
jecxz
in
enter
test
in
aad
sub
shlb
testl
addb
lock
xor
cmp
aaa
into
icebp
xor
sar
xlat
test
out
jmp
ror
faddl
xor
repnz
jmp
std
clc
rcl
add
cmc
xchg
ljmp
int3
loopne
cs
shl
xor
aad
lock
cli
fucom
cmc
repnz
shl
test
cld
leave
fiaddl
lock
aam
iret
cmp
lret
cmp
mul
cmp
rcr
ffree
sbb
out
cmp
decb
out
icebp
hlt
loop
icebp
xor
ljmp
leave
mov
rcr
lret
rcl
cmc
rcr
int
out
ror
xlat
sarl
jmp
addl
lret
jecxz
ljmp
clc
repnz
ds
xchg
out
mov
cld
xchg
cmc
rcl
out
stc
lret
out
or
loop
shl
mov
out
and
cmp
int
les
hlt
int
sar
xor
sbb
xchg
sub
fcom
orl
call
out
cmp
cli
out
fdivrl
out
neg
ds
fsubr
addb
aaa
leave
leave
out
out
cmc
aas
xlat
rcl
aas
out
in
ffreep
shr
stc
in
in
jecxz
cli
repnz
xor
out
repz
in
out
fsubr
fld
in
cmp
out
mov
stc
idiv
in
hlt
sti
cmc
out
cmp
aam
test
hlt
std
lret
xchg
fcoml
mov
xor
xlat
out
xlat
xor
cmp
int3
test
fadd
lock
pop
mov
shl
xor
out
cmp
cmp
lret
iret
out
fdivp
fcmovbe
testb
repnz
ss
idiv
lret
jecxz
ror
sar
fstpt
fucomi
fadd
testb
and
xlat
div
aaa
out
jmp
ret
in
sti
fmulp
cmc
mov
sti
clc
repz
xchg
mov
loop
in
out
aad
clc
cmp
aam
lret
aad
dec
loop
fsub
cmc
lret
int
lret
test
rol
out
enter
int3
shl
into
hlt
fucomip
test
call
loope
loope
shr
xor
vpsrlq
fdivp
in
fcmovnbe
xlat
cli
cmp
fcmovb
test
lret
clc
and
out
cmp
ss
fstp
stc
lock
in
test
xchg
xchg
in
xchg
sub
iret
loopne
xor
cmp
xor
fldl
not
rol
orb
iret
jecxz
sub
cmp
in
leave
aas
sar
ret
loopne
clc
mov
ffree
jmp
out
out
ror
jne
mov
mov
movsbl
xor
jmp
rcl
rcr
int
add
sbb
adc
lret
jl
mov
ds
aam
aad
cmp
repnz
add
ret
repnz
loope
in
fucom
out
loopne
xor
jmp
rcl
lret
ljmp
repnz
cmp
call
fsubp
lret
ror
loope
ret
xor
repnz
or
out
clc
sar
clc
xchg
fucomip
icebp
xchg
into
in
incb
hlt
clc
xor
shl
out
ss
cld
shr
lret
xchg
out
fiadds
ds
xor
in
fcom
aas
aam
in
ret
int
clc
iret
mov
filds
xor
out
out
cmp
cli
cmp
loope
test
fisttps
lret
loope
repnz
ror
in
loopne
shl
sar
fxtract
ss
xor
in
in
ffree
iret
sti
xchg
out
call
fnstenv
div
ss
loope
in
in
out
ret
idiv
in
lds
in
int3
ror
loope
in
das
cs
cmp
lds
mov
cli
cli
fcmove
in
out
cmc
jmp
loope
das
int
int
cli
xor
rcl
in
and
shl
cmp
loop
rorb
lret
shl
fcmovnb
hlt
cs
xor
xorl
cld
mov
out
test
xchg
shll
repz
int3
out
stc
ds
icebp
fdivr
rol
jmp
stc
fucomp
icebp
fists
out
sub
out
int
repnz
cmp
xlat
add
xrelease
out
loop
xchg
xor
cmc
shl
int3
in
idiv
in
loopne
hlt
cli
cmc
decb
lret
enter
mov
icebp
shr
out
jmp
cmp
in
call
rol
in
in
in
fists
xor
ret
xlat
ror
fmulp
lock
inc
fcmovu
add
loop
imul
jmp
in
shl
ret
int3
shl
cmc
fst
fnstenv
ljmp
in
fiadds
loope
fucomp
rorl
out
shr
stc
lock
icebp
aam
rcl
fsubrp
cld
fists
das
loope
int
jmp
std
fcmovbe
div
ffree
cmp
jmp
flds
mov
hlt
out
loope
icebp
repnz
jmp
idivb
jmp
jecxz
jmp
dec
in
out
fdivr
test
loope
cmc
rol
stc
out
cld
ss
into
fmul
sarl
imul
cmp
out
loope
iret
jecxz
ljmp
int
clc
xlat
cmp
cld
in
out
enter
in
lret
hlt
xlat
ljmp
out
std
lock
fiadds
in
inc
cli
ljmp
in
clc
enter
cld
int
div
test
out
cmc
jmp
mov
or
ret
shl
cmc
out
lock
sar
shr
icebp
call
aad
repnz
std
xchg
in
jmp
addl
out
xor
fucomi
shll
clc
fdivr
neg
ret
incb
stc
fadd
lea
clc
lock
in
sti
cmp
shl
ret
sarl
test
loopne
repnz
out
fsubp
loop
int
test
into
cmp
out
add
or
repz
cmc
not
imul
in
fucomp
cli
out
cmp
test
fcom
repz
testb
adc
shl
jmp
cs
sar
leave
cmp
addb
mov
test
fcmovu
int
std
aam
lret
imul
in
div
fidivrs
cmp
aad
cmc
fildl
inc
jecxz
int3
cli
in
fdivp
hlt
icebp
aam
fucomi
std
stc
rcl
repnz
fcmovnbe
loope
loope
idiv
xchg
roll
lret
out
shr
fld1
out
int3
ror
icebp
sti
test
out
jmp
into
enter
xor
in
cmc
out
shl
fdivrl
fadds
lret
lea
xor
int
aad
repnz
fdivrl
rorb
test
adc
add
inc
call
jmp
rcl
rcl
roll
popf
icebp
adc
jg
lret
jl
aam
jecxz
loop
cli
leave
aam
loop
out
out
rorl
cli
xor
lret
aad
addb
faddp
faddl
mov
jmp
into
ljmp
repnz
hlt
ret
fisttps
iret
shl
fdivr
int3
int
lret
lret
enter
sar
cmp
repz
xchg
stc
clc
enter
ret
in
repz
jmp
aaa
cmp
int
cmc
loop,pt
lock
movl
adcb
xor
call
xor
lock
rcl
in
jmp
dec
in
repnz
xor
in
call
rcr
fcomi
rolb
in
fcmovbe
jmp
mov
lock
aaa
lret
clc
xor
cmp
ss
out
mov
out
in
repz
out
enter
cmc
into
enter
xlat
stc
ret
xchg
ret
rorl
not
cs
cld
lret
lret
cmc
xor
in
mov
int3
out
xchg
xlat
xor
ret
in
in
fsubr
iret
cmp
cmp
repz
aas
fcomip
in
test
jmp
ljmp
cmc
ss
sti
in
in
fdivrs
xlat
cmp
shl
test
fadd
mul
fadd
cld
in
nop
fsubrp
in
repnz
repnz
lock
cmc
jmp
int3
loopne
cld
hlt
fsubr
stc
icebp
shr
sti
fsubr
mul
rcl
lret
out
shr
cmp
and
sar
rol
rcr
test
repz
aas
icebp
sar
aaa
jmp
fcmovnu
rcr
fdivrp
aas
cld
repnz
shl
xchg
shll
leave
iret
cmp
cmp
sar
cld
call
fmulp
test
shr
xchg
fbstp
ret
into
jmp
enter
icebp
shl
sti
repnz
mov
fucomip
fcomp
rclb
clc
int
aas
fstpt
loope
rcl
cmp
ret
stc
stc
loopne
hlt
mov
icebp
out
out
iret
nop
out
ret
cmp
xor
cli
int3
fcomip
cmp
xlat
shl
in
cli
in
out
enter
int3
nop
lock
int3
aad
ljmp
in
cmc
cmp
cli
les
loop
in
xchg
iret
xchg
fidivrs
out
repz
fisubrl
rcl
ss
out
lock
clc
ds
fsub
loop
jecxz
loop
out
jmp
hlt
out
iret
cmp
loop
sti
call
int
xchg
call
lock
loop
lret
repz
cmp
in
out
cmc
not
out
movb
int
cmc
cmp
icebp
icebp
hlt
int3
xlat
fdivp
loop
cmc
repnz
jmp
fmulp
test
nop
in
loopne
call
lock
hlt
rcl
icebp
fsubp
cld
fcomip
rorl
mov
ljmp
jmp
hlt
aad
aad
loope
fidivrl
push
lret
add
loope
iret
sub
xor
xor
in
loope
jecxz
cmp
xchg
lret
out
into
fcmovnb
into
hlt
jmp
int3
ss
sti
aad
out
aas
fiadds
cmpb
mul
enter
nop
test
lock
fucomi
xor
mul
loopne
aam
loopne
adc
fdivp
ljmp
xchg
mov
out
into
hlt
cmp
shl
cmp
fstpt
and
imul
jmp
ret
nop
loop
rol
aam
in
imul
call
icebp
shl
hlt
lock
fucomip
int
out
in
cld
out
leave
shl
cmp
cmp
lock
aas
fiadds
hlt
out
cmpb
out
mov
jmp
lock
clc
int3
ret
fucomip
jmp
xlat
lret
out
stc
add
jmp
jmp
loopne
cmc
cmp
das
shr
fxch
cli
cld
cmp
loop
lret
les
xchg
xchg
xchg
shl
jmp
out
rcr
cmp
push
xlat
ret
fdivrp
mov
loop
inc
call
add
lret
ret
int
jle
shrb
jg
lret
jl
xchg
jmp
out
aam
xor
in
ljmp
les
std
in
out
out
jmp
test
call
divl
fxtract
int3
cmp
cmp
lret
mov
mov
xchg
int
shl
cmp
aad
imul
enter
ret
icebp
repz
sarl
addl
ret
cs
shr
xor
into
addl
fcmovu
lret
lock
xor
xchg
sub
stc
xor
shlb
xor
int3
shl
rol
std
aam
cli
xchg
fsubrp
sbb
test
in
in
clc
fcmovbe
call
ljmp
repz
fmul
jecxz
mov
fucomi
test
xor
shl
out
enter
fldl
mov
in
ret
in
fcmovnu
hlt
cmc
aam
xor
xor
rcl
rcr
in
std
clc
fld
std
xlat
loope
vpaddb
xchg
fmulp
xor
rol
jmp
in
enter
fcmovnb
lock
sarb
shl
mul
xlat
mov
shl
mov
aam
ret
xor
in
fcmovu
jmp
int
adc
addl
loopne
rolb
out
out
iret
in
repz
test
ds
stc
addb
loope
xor
int3
loop
in
out
shr
testb
stc
in
stc
sub
int
fsubr
xchg
sub
leave
repz
aad
fidivrs
out
hlt
aad
clc
fsub
mov
leave
in
test
xchg
test
sti
shl
iret
in
sub
out
div
sar
xchg
out
xlat
call
cli
jmp
in
hlt
aad
aad
loope
xchg
mov
cs
aam
cmp
push
xlat
ds
cmp
lds
in
sti
in
mov
das
xor
cld
cmc
std
aam
aas
filds
lret
fsincos
nop
ljmp
iret
f2xm1
in
clc
fmulp
leave
cmp
loopne
rol
mov
in
std
fadd
int3
in
xchg
xchg
lock
lock
ljmp
repz
lock
movl
fmuls
in
xlat
clc
in
in
clc
out
jmp
addl
fiadds
fsubr
int
fstpt
ror
into
lret
xor
cmp
test
xlat
fadd
in
stc
clc
stc
mov
xchg
mov
fldcw
in
int
cmp
iret
add
ret
fmull
sub
rcl
shll
ss
std
out
cmp
cmp
out
xchg
loope
out
out
xor
ror
ss
sarb
out
cmp
aam
fld
sti
aam
in
mov
test
out
xor
fcomp
call
in
fdiv
test
adc
cli
repz
test
jmp
rorl
cmp
shl
aaa
fdivp
cld
in
aas
xor
cli
filds
into
ror
cld
loop
sar
in
in
aam
cmp
rol
adc
mov
mov
loope
sar
hlt
in
idiv
icebp
jecxz
jmp
lock
mul
lock
rcr
rorb
loopne
in
enter
aaa
in
call
adc
loope
and
in
in
jmp
jecxz
in
jmp
imul
fdivl
ret
out
push
rol
ret
dec
int
orb
jecxz
lret
fcmovnbe
loope
aas
int
icebp
std
fsub
xchg
stc
dec
leave
shl
cmc
icebp
das
xor
hlt
out
into
cmp
xor
cmp
ror
ds
xchg
jecxz
cld
ror
test
xor
out
fscale
cmp
lock
aam
std
flds
in
test
ret
jmp
sub
cs
jmp
lock
lock
int3
ret
in
jecxz
testb
xchg
in
xor
int
xor
mov
mov
addl
mov
jmp
rol
into
ret
rcl
aad
pop
repz
push
jmp
jg
lret
jl
cmp
ss
icebp
and
std
jmp
in
cld
lret
out
lret
sar
fucomi
xor
clc
repz
int3
ljmp
ret
fisttpl
fldl
ljmp
fadd
sti
cmc
fdivp
les
loop
out
in
loop
aas
xor
lock
in
in
not
xor
loopne
in
aam
cli
repz
sub
nop
loop
iret
int3
shl
in
hlt
xor
cmc
jmp
sar
xchg
xlat
ror
sti
sar
test
in
fsub
xchg
movl
dec
out
stc
ljmp
test
sti
mov
iret
mov
aad
lret
jecxz
cmp
rcr
lock
in
fcomip
fcomp
rorb
int
into
and
loope
lock
repnz
fbstp
cld
aaa
cli
ds
into
xchg
fadd
test
loope
inc
jmp
loop
std
cmp
leave
out
fcmovbe
rcl
sbb
cli
jmp
fxch
fmul
icebp
fisttpll
ljmp
in
filds
lret
sbb
xor
sar
iret
clc
enter
fcmovnu
rolb
loope
fcmove
fdivr
in
mov
lret
cli
mov
ljmp
aam
lret
ror
fcmovbe
test
ret
test
cmp
out
lret
ljmp
iret
repnz
lock
out
out
jmp
fsubr
jmp
in
mov
xchg
ret
xor
ror
test
cli
cmp
cmp
stc
out
shl
repz
sti
loope
test
jmp
cmc
aam
cmp
out
jmp
xor
les
out
jecxz
xor
sar
aaa
fucomi
cmp
cmp
aas
out
aam
mov
stc
jmp
movb
call
les
cmp
shr
fcomp
std
xlat
or
xchg
orl
aam
cmp
repz
cmp
lock
cli
stc
jmp
in
test
nop
jecxz
lea
fdecstp
cmp
aaa
fnstcw
loopne
ds
out
shlb
hlt
cmp
idiv
fadd
neg
xchg
out
mov
fprem
leave
fprem
mov
fmull
aaa
xor
rcr
int3
cmc
cmp
out
lret
lret
fildl
out
shl
iret
call
shl
int3
aad
sarl
loope
rol
ljmp
xchg
in
loop
rcr
fcmovbe
out
xor
mov
hlt
fld
clc
leave
iret
jmp
out
enter
in
idiv
cmp
loop
lret
not
int
out
jmp
out
into
into
out
repz
fxch
out
std
ds
ret
aad
out
out
in
fsub
mov
mov
jecxz
out
ss
cmp
cld
int
in
jecxz
clc
rcr
fucomp
call
into
lret
rol
fdivs
fdivrs
enter
loopne
cmp
xor
neg
mov
in
mov
repnz
jecxz
xor
call
shr
sarb
idiv
loopne
mov
mov
xchg
leave
test
in
rol
aad
cmp
cmp
in
in
ret
fcomp
faddl
in
test
stc
icebp
repz
cmp
aad
fcmovb
into
hlt
cmc
cld
lret
fmul
out
xchg
fucomp
call
sti
sti
call
ds
rcr
xor
shl
xchg
xchg
ljmp
ss
aaa
repnz
fdivrl
sti
jmp
test
jmp
in
jmp
lret
in
std
ds
ds
bnd
sti
fdivr
call
std
mov
fcom
enter
ljmp
clc
xchg
mov
rcr
lea
cmc
out
aam
cmp
int3
test
fiadds
mov
xor
lea
mov
jmp
into
int3
ret
ds
jge
jae
jl
cmp
lret
jl
hlt
stc
jmp
into
orb
jmp
fcomi
ds
ljmp
loopne
fadds
sbb
aaa
fdivrp
xor
in
lock
repnz
loopne
icebp
cli
out
loope
jmp
cld
out
movl
out
call
aaa
sbb
jecxz
cld
cld
mov
in
lret
out
mov
call
call
fdivp
into
ds
add
ret
call
out
xchg
cmp
jmp
into
sar
clc
loop
cld
int3
fsubp
cli
int
in
lock
imull
xlat
aad
enter
aam
std
push
loopne
test
cmp
incb
jecxz
stc
mul
in
cmp
rolb
roll
orl
lret
fdiv
loope
rcr
fabs
std
ret
shl
in
out
lret
fcom
fsubr
icebp
int
rcr
in
into
xor
cld
cmp
not
clc
icebp
mov
xchg
repz
xchg
mov
fprem
loop
vpsubusw
xlat
in
repnz
fsub
cmp
sti
ret
leave
mul
cmp
les
test
leave
shr
repz
fidivrl
ret
test
ds
enter
movl
jmp
rcr
shl
shl
ds
shr
sti
jmp
mov
hlt
jmp
rcr
call
in
iret
out
ds
jecxz
cmc
in
call
hlt
into
lret
aam
cli
fistpll
in
jecxz
hlt
fucom
test
rorl
out
leave
lret
out
pushl
sti
stc
hlt
icebp
fdivrs
loop
test
call
clc
out
loopne
xchg
lret
in
ss
fmul
hlt
xor
cmp
sbb
out
in
xchg
fisttpll
mul
into
icebp
into
out
cmp
in
int3
in
into
aas
lock
incb
ret
vpaddd
aad
ss
in
fstpt
std
cld
fcmovb
sti
iret
shl
out
test
cmp
mov
out
mov
icebp
nop
repz
cmp
rolb
xlat
repz
roll
sbb
out
shl
div
cmp
fadds
sar
stc
out
loop
out
out
into
das
ret
lret
cmp
loop
cli
repz
fpatan
clc
cli
loope
stc
aam
addl
cmc
into
not
das
xor
clc
xlat
fsubrs
out
cmp
fidivrs
out
aam
aad
mov
shl
shl
ret
xor
rcl
repnz
lret
rcr
stc
div
sti
not
clc
jmp
in
jmp
nop
jmp
aam
jecxz
enter
repz
cmp
jmp
out
sbb
out
iret
xor
xlat
xor
aam
sti
aad
aas
xlat
xlat
int3
cli
movb
orl
jecxz
not
jecxz
repnz
fnstcw
out
loopne
mul
mov
std
in
leave
in
loopne
lret
aad
xlat
xor
cli
idiv
aam
cmp
in
ds
test
jmp
shl
ret
jmp
stc
fdiv
ljmp
sub
into
and
test
out
xor
ss
ljmp
loop
repnz
jecxz
test
xchg
in
xor
iret
int
cmp
repnz
out
ffree
repnz
fcomp
sti
cli
leave
filds
neg
jmp
sarb
jmp
xor
idiv
loop
imul
ret
sar
fmul
vpsraw
icebp
xchg
fstl
xor
leave
out
cmp
repnz
fldl
clc
mov
loope
out
in
sti
xchg
xchg
sub
fst
call
not
neg
out
icebp
faddp
ret
leave
fisttps
mov
repnz
jmp
fdivr
into
sbb
cmc
shr
lret
xchg
ffreep
fildl
xor
xor
incl
jmp
mov
jmp
lret
ds
fcmove
fisubrl
cwtl
incl
daa
jg
lret
jl
xor
aas
cmp
aas
call
fcmovbe
repz
ret
sti
clc
cmp
ljmp
test
shl
repz
cld
cli
shl
rcr
inc
vfrczpd
int3
test
out
aam
aad
or
ds
xchg
shl
aad
incb
icebp
int
enter
sti
fmul
aaa
cmp
ret
stc
aam
not
loop
fnsetpm(287
aas
fsubrp
test
xchg
xchg
fucomp
int3
call
out
fcmove
stc
cld
stc
cli
cli
icebp
cmp
ljmp
mov
in
out
loope
ror
iret
in
cld
cmp
lock
cmp
ret
cld
ljmp
shll
cmp
shl
xlat
cmp
aam
in
hlt
fcomi
ret
out
aam
incl
loopne
das
icebp
xor
shlb
in
out
fcmove
repnz
test
shl
stc
mov
repnz
sub
xor
aad
jmp
sbb
aad
std
mov
fsubrp
sti
lret
iret
aaa
repnz
fldl2e
xlat
repz
lock
not
cli
cli
orb
fsubr
call
lock
xor
std
fcomip
aas
hlt
loopne
orl
fmul
shl
into
in
enter
in
ljmp
stc
cmp
repz
sbb
std
xor
aaa
cmp
cmp
stc
leave
out
cmp
icebp
hlt
enter
rcll
jmp
iret
repz
repnz
xlat
into
int3
fcmovu
testb
cmc
hlt
loopne
out
mov
adcl
fnstcw
cmp
xlat
test
addl
shlb
cmp
in
xor
out
stc
cld
sarb
clc
sti
jecxz
mov
int3
repz
call
in
lret
jmp
rcl
addl
cli
sti
in
mov
rorl
xor
repz
in
std
inc
fcmovbe
repz
cli
jmp
cld
nop
out
test
in
cmc
leave
ljmp
cmp
inc
in
add
addb
into
in
iret
cmp
in
out
fcmovnb
sbb
out
in
clc
cli
std
test
lret
rolb
rcr
int
xor
cmp
int3
fildl
mul
fdivr
jmp
sar
and
into
ret
jmp
cmp
cmp
lret
out
xlat
repnz
clc
out
ror
xchg
out
cmp
ret
icebp
sar
fnstsw
cld
cld
not
fucomp
fyl2xp1
in
mov
jecxz
jmp
xor
stc
jmp
div
aas
cmp
cmp
in
mov
lret
int3
iret
loopne
leave
cmp
jmp
out
xor
lock
out
ftst
int
mov
jmp
shr
std
xor
cmp
icebp
loopne
jecxz
out
xchg
call
lret
out
xlat
enter
out
std
aas
xlat
adc
inc
rolb
jmp
call
jmp
jmp
aam
repz
icebp
test
add
ret
stc
lds
xchg
add
hlt
cmp
std
cmp
xor
adc
add
aad
ret
xchg
jecxz
cld
cld
jmp
iret
in
int3
out
imul
xor
jmp
out
jmp
fiaddl
fcomip
jmp
sub
cmc
enter
lock
ret
incb
mov
mov
test
aaa
shl
out
cmp
aam
cli
ret
clc
jmp
addl
call
fnstsw
icebp
cmp
ds
xlat
xchg
in
mov
loop
out
icebp
xor
stc
out
xor
std
cmp
ret
aam
sar
sub
fisttpll
xchg
in
shr
fldpi
in
hlt
aaa
idivl
rol
incl
xor
jmp
sarl
lret
rcr
fsubr
push
mov
cmp
into
sub
lret
jl
cld
leave
mov
mov
xor
in
fxch
sti
cmpb
fdivp
xchg
sub
jmp
int3
xchg
mov
xchg
out
lret
ljmp
shl
cmp
fcmovnu
stc
ds
out
ljmp
aad
in
xor
fstpt
in
cmp
aas
int3
lret
fucomp
repz
jmp
fadds
mov
hlt
ror
ds
clc
lock
xor
xor
loop
iret
enter
call
leave
out
aaa
fmul
cld
fucomp
in
test
jmp
loope
std
out
loope
int
ror
das
in
xor
loop
clc
int
in
aas
int
loopne
fiaddl
mov
enter
repnz
fnstenv
icebp
jmp
in
loopne
test
ljmp
in
fsub
cmp
cli
clc
repz
icebp
fld
fcmovnu
idivb
cmc
rcr
in
mov
call
int3
int3
jmp
out
ss
sarb
cmp
sarl
xchg
cld
leave
sti
in
fiadds
loope
enter
cmp
hlt
fxch
idiv
out
lock
mov
leave
mov
fucomip
cs
in
jmp
aad
frndint
sti
repnz
xchg
repnz
clc
and
fcmovu
std
aad
loopne
out
jmp
in
lret
loope
in
fsub
out
jmp
out
jmp
sub
iret
hlt
aad
in
stc
xor
in
or
iret
add
ret
loope
jmp
loopne
loope
sti
repz
cmp
test
xor
cmc
fsubr
cld
stc
in
out
rorb
repz
out
cmp
fcmovnbe
repz
ret
fscale
call
jecxz
sti
lret
xchg
adc
ret
fisubrl
lret
rcl
sti
lret
icebp
jmp
jmp
shl
mov
lret
int
cs
aam
iret
stc
sti
ljmp
adc
lret
iret
ret
fxch
cmp
repz
cmc
test
rcl
test
loopne
neg
jmp
fmul
lret
out
in
sub
mul
stc
lret
leave
shr
cmp
cld
out
fcmovnb
fcmovnu
in
roll
loop
lret
call
in
leave
cmp
std
cmp
fdivr
loopne
mov
out
out
int
not
lret
repnz
idiv
repnz
aaa
cmp
lds
test
xlat
mov
test
sub
divl
in
rcr
fcompp
sti
aam
cmp
jecxz
jmp
loopne
std
in
std
lret
jmp
out
clc
jmp
aaa
rcl
or
add
mov
lret
ds
test
xchg
out
in
ret
loop
rol
fscale
loope
cmpl
fcmovu
out
sti
and
int
and
xchg
xor
in
aad
fcmovnu
lret
jecxz
icebp
std
cld
out
int
xchg
jmp
cld
shrl
leave
fcmovnbe
not
jmp
rcl
repz
into
loopne
aam
lret
call
call
sti
lret
cmp
icebp
cmp
out
out
xor
in
in
out
in
cld
fdivp
lret
lock
icebp
icebp
std
lret
fiadds
mov
in
in
rorb
xor
in
shl
repnz
cmp
icebp
in
xlat
in
stc
fadd
xlat
ffree
hlt
out
iret
addb
fcomip
lock
jmp
sarl
test
sar
sti
rcl
faddl
out
test
imul
out
out
icebp
in
xor
xlat
fcomp
in
ds
loope
int
lret
sti
jmp
in
jmp
xor
out
out
cmp
fnstsw
rol
in
int3
cli
call
xchg
int3
lock
ljmp
ljmp
ret
stc
decb
fbstp
ret
call
icebp
rcr
into
out
lock
loope
loop
clc
sub
loopne
test
add
add
int3
fcmovnbe
int
loope
insl
lahf
xchg
add
das
jg
lret
jl
out
fcomp
sar
iret
cmp
fdivrp
cli
fdiv
sti
ret
jmp
mov
into
aas
out
xlat
icebp
lret
call
fptan
in
lock
neg
fcmovu
stc
idiv
lret
repnz
iret
int
aam
clc
call
loop
cmp
ret
cmc
repnz
lret
xlat
in
xchg
faddl
loope
int3
sar
out
xor
clc
out
push
lret
fdivp
lock
fcmovnu
in
enter
out
sub
lds
fnstcw
sarb
in
lock
ds
cmp
iret
ret
call
int3
in
sti
xchg
in
int3
loop
icebp
ret
lret
jecxz
cmc
idiv
and
cmp
jmp
xchg
leave
ret
ret
jecxz
in
fldl2e
out
in
sti
cmp
aam
stc
cmc
mov
std
call
xchg
fsubp
out
clc
xor
rcl
cmpb
into
test
jecxz
stc
fstp
mov
mov
icebp
ret
test
cmp
filds
ljmp
cmp
loop
in
int
ffree
fsubr
sti
fdivr
jecxz
and
test
hlt
enter
out
fcmovnu
xchg
mov
iret
neg
xlat
ljmp
cmp
into
ret
hlt
aas
and
mov
in
xchg
sarb
loop
lock
sar
ss
fcomi
test
addb
in
ret
lret
in
dec
loop
aam
jmp
jecxz
mul
loop
fdivr
test
loop
clc
sar
fisttps
das
xor
sar
ljmp
fsub
in
fmuls
into
aam
in
lock
lret
fdivr
cs
test
jecxz
aad
stc
loop
sti
mov
fucomip
mov
nop
lret
xor
xor
into
cmp
std
ds
repz
ret
and
hlt
in
xchg
jecxz
loopne
std
xchg
cmc
fxch
sarl
cli
leave
int
lret
shl
cmp
test
xchg
jecxz
mov
xor
imul
jmp
aas
call
cmp
rol
out
in
test
loopne
loope
aam
in
sub
fcmovbe
sti
std
clc
stc
sti
out
stc
test
xchg
orb
rorl
fnstcw
out
xor
in
xor
add
in
jecxz
jecxz
icebp
int3
out
mov
clc
rcl
sar
out
jmp
into
std
movb
and
jecxz
mov
mov
vpsubsb
aaa
in
cmc
cmp
shr
cmp
in
stc
mov
loopne
enter
loop
xchg
in
div
jmp
sti
cmp
int3
sti
idiv
jecxz
jecxz
in
fadd
call
lret
ljmp
aad
std
repz
cmp
std
add
out
mov
fcomip
xchg
ror
ret
rcl
jmp
stc
rcl
hlt
lds
test
mov
lret
xor
xor
std
out
std
xor
aam
addb
fabs
call
mov
into
out
cmc
clc
sti
out
xlat
out
fsubr
std
ds
hlt
leave
loop
lret
icebp
int3
mov
jmp
cmc
cmp
test
shr
in
std
cmp
loopne
out
cli
sub
mov
lret
out
xor
xlat
cmp
ret
fildl
xlat
fisttpl
loop
ljmp
call
repz
xor
mov
xchg
xchg
in
jmp
aaa
aam
cli
xor
stc
loopne
jecxz
loopne
stc
mov
ffreep
in
into
mov
cmp
fxch
fldln2
lret
into
aad
fcmovnbe
shl
out
rcl
lret
shl
call
ret
icebp
into
stc
aas
xor
adc
jecxz
rcl
idiv
in
hlt
in
iret
mov
int
out
idiv
lret
cld
rcl
xlat
fucomp
rol
out
std
xchg
jecxz
fdivrp
clc
xchg
loop
jmp
sti
clc
leave
call
ror
jmp
iret
iret
sarb
aad
aad
pop
sbb
arpl
jl
add
aas
cmp
xchg
repnz
jmp
fmulp
mov
hlt
sub
aaa
ljmp
lret
xlat
loopne
jmp
loope
in
nop
xchg
faddp
ljmp
clc
jecxz
in
cmp
cmp
xlat
dec
sub
icebp
xchg
out
shr
out
out
cli
int
rcr
fsubrp
faddp
icebp
ret
jmp
cmp
iret
ret
in
leave
mov
xchg
xor
rcr
lock
cmp
rcl
neg
fidivrl
rcl
repnz
in
out
in
std
in
mov
in
rol
lret
int
ljmp
in
int
ss
loop
jmp
leave
roll
out
fdecstp
aam
out
out
imul
int3
std
int
shl
in
repnz
and
mov
xchg
or
loop
int
cmp
neg
xchg
cmp
idiv
xlat
ljmp
ljmp
jmp
idiv
loopne
ds
ret
hlt
loop
fldl2e
lret
lret
shl
jmp
mov
jmp
ss
fsub
cli
loope
out
clc
loope
jmp
loopne
fisttps
jecxz
cmp
cmp
enter
fdivr
xlat
jecxz
repnz
lret
std
int
jmp
stc
fprem1
test
std
cmp
clc
in
lock
aad
out
call
shl
xchg
div
jmp
ss
repz
cmc
ds
fcmovb
ret
ret
sti
mov
fucomi
popl
aas
out
sti
loop
cs
cmp
fdivrp
incl
jecxz
out
iret
out
mov
xchg
orb
call
out
sti
rcr
sti
jecxz
test
out
xchg
jmp
fdivp
in
xor
out
lret
repz
fcmovbe
aad
rol
loopne
icebp
sbb
jmp
test
orb
in
out
fstpt
hlt
xlat
fcmovnbe
out
cmp
shl
jmp
loope
out
call
out
lret
test
cmc
in
ror
shl
repz
clc
mov
mov
fcmove
lret
fxch
leave
xor
sti
cli
xor
ret
xchg
hlt
loopne
jmp
cmc
mov
out
iret
sub
hlt
jmp
enter
rcl
fnstcw
mov
sbb
cli
cld
xchg
ffreep
sar
in
int3
icebp
xlat
xlat
stc
cmp
cld
fstp
in
rol
ljmp
sub
mov
out
clc
iret
xor
int
fdiv
cmp
shl
sarb
test
loope
out
out
std
xchg
cli
in
out
leave
xor
rol
into
cmp
repnz
jmp
cmp
jmp
lret
ret
xchg
out
imul
aaa
jmp
out
std
ds
shl
idivb
repnz
xchg
out
fisubrs
stc
xor
iret
xlat
sar
xor
fiadds
out
xlat
fimuls
call
divl
lret
lret
aam
rcr
out
cmp
fsubp
sbb
fiaddl
out
loope
rol
loop
sti
stc
out
rolb
out
xchg
notrack
fcomp
mov
hlt
fdivp
sub
aaa
repnz
jmp
fcos
loope
in
ret
icebp
call
testb
leave
sub
ret
ljmp
jecxz
fcmovb
decb
loope
xchg
iret
out
call
xlat
das
out
lret
loopne
lret
icebp
shl
cmpb
cld
sub
fmull
sar
in
std
xor
sti
inc
fmulp
xchg
mov
shr
lret
out
decl
fyl2xp1
lock
rolb
hlt
repz
sub
ljmp
loopne
int3
into
cld
cmc
cmp
clc
aas
cmp
loopne
aam
stc
idiv
out
xchg
or
out
shl
loope
fstp
ffreep
repz
mov
in
mov
loopne
xor
jmp
lock
fsubrp
in
cli
jecxz
std
shl
enter
ret
mov
mov
pop
leave
ret
push
mov
jmp
rol
rol
fstp
dec
lahf
push
dec
pop
inc
jl
cmp
jg
add
xchg
rcr
shl
leave
out
aad
ds
cmp
cmp
call
cli
loopne
xchg
fisttps
into
stc
enter
rcl
cli
iret
jecxz
rcl
sub
ror
in
into
sub
int
lret
ror
fbstp
icebp
shr
aam
icebp
adc
test
repz
lds
repnz
mov
aas
in
icebp
cmp
xor
cmp
ror
rcr
fst
out
out
repnz
mov
std
into
ret
aaa
aam
ljmp
and
xchg
fsqrt
stc
mov
shl
rcl
icebp
out
sub
out
hlt
clc
loopne
std
out
loop
repz
nop
out
subl
in
fistpll
cli
int
xlat
int3
icebp
cmc
or
sti
out
faddl
xchg
ror
fmul
hlt
iret
jmp
sarl
sti
rcr
rol
sti
in
mov
fildl
ret
aaa
repz
in
fcom
sarb
adc
imul
lea
into
sub
stc
sar
out
xor
fiaddl
stc
mov
stc
ffreep
lret
mov
rcl
leave
neg
jecxz
rol
sar
fildl
addl
ror
lret
repz
cmp
shl
xlat
call
test
out
and
cli
loopne
ror
rol
shr
fnstcw
jmp
aad
xor
stc
ret
loop
cmc
in
mov
in
in
cld
in
in
in
repnz
stc
lock
sar
cmp
repz
jmp
xor
xor
loop
rcl
repz
out
sarl
cmp
ret
loope
int
out
lds
out
ss
aad
cmp
cmp
or
lds
filds
out
xchg
icebp
cs
shlb
leave
fcomip
into
stc
cld
lret
fcmovu
xor
ret
fcomi
fists
jmp
lock
xor
out
aaa
fidivs
fsub
shll
shl
loopne
ret
fmul
enter
shl
loop
fyl2x
ss
cmp
out
cmc
cmpl
loopne
aam
cli
fcmovnu
out
fstl
in
stc
out
xor
out
repnz
int
fdivp
aam
lock
loopne
enter
lea
leave
fdivrp
shl
clc
aad
cli
rol
hlt
xor
ret
cld
cld
cmc
loopne
incb
lret
out
aam
out
fnstenv
sar
not
fdiv
sub
ret
loop
rcl
xchg
jecxz
mov
shl
in
fdivr
loopne
test
iret
loop
rolb
in
cli
fucom
fmul
loope
icebp
in
jmp
aaa
fstp
int
in
icebp
and
test
in
cld
std
xchg
test
xor
rcl
ror
fmulp
loopne
in
rcl
add
stc
idivl
call
mov
out
shlb
jecxz
jmp
cmp
aas
cmc
rcr
rcl
sarl
leave
fmul
fsubp
mov
icebp
fiadds
das
leave
mov
fmulp
rcr
cmp
xor
test
orb
in
int3
cmp
idivb
cs
stc
stc
mul
xor
cld
addb
jmp
fcoml
les
fsubrp
out
idiv
aam
iret
test
sti
enter
testb
ljmp
das
lret
in
xlat
into
hlt
cmp
xlat
not
ds
xchg
mov
aam
in
iret
fiaddl
in
out
ljmp
adc
aad
out
leave
loop
testl
cmc
xor
mul
jmp
in
cmc
repz
out
xlat
out
neg
test
in
repnz
in
in
ret
das
repz
xor
out
jmp
cld
repnz
std
fsubr
cmp
orl
jmp
leave
cmp
repz
cmp
ljmp
leave
loop
xchg
loop
loopne
enter
repz
hlt
xlat
loop
fisttps
mov
out
imul
hlt
fstpt
fcmovbe
shl
cmc
shl
shl
fxch
std
test
out
mov
ffreep
lret
out
xor
cmp
xor
into
hlt
test
mov
adc
loop
rcr
cld
cld
xor
mul
cmp
idiv
iret
loope
cld
fdivrs
repnz
aam
cld
out
aas
clc
int
xchg
incb
out
jecxz
xor
cs
int3
stc
jecxz
ds
xlat
loopne
mov
fsub
int
out
testb
lret
shl
push
xor
push
movl
jmp
into
rol
aad
rcl
jmp
decl
jl
add
cli
cld
lock
cmp
lock
enter
fdivrp
fistl
int3
cs
call
cmp
out
cmpb
ror
lock
enter
in
fcmove
std
out
ror
xor
cmp
fucomi
xlat
test
ds
jecxz
fsubrp
int3
clc
mov
loop
mov
out
repz
ss
ss
jecxz
aad
cld
repnz
fiaddl
ljmp
fchs
shlb
aaa
call
loop
out
rcl
loop
in
out
fstl
loope
cmp
std
aam
lret
f2xm1
test
in
jmp
int3
addl
rol
repz
lock
fcmovnbe
shl
xor
stc
test
lea
in
int3
xor
hlt
call
jecxz
in
repz
sti
fisttpll
fsubr
out
int3
ljmp
out
in
xor
lock
into
loope
fadd
ffree
fisttps
iret
loopne
mov
ror
sar
jmp
divb
std
int
push
rcl
aam
fadd
xchg
out
enter
icebp
xor
in
out
out
cmp
cmp
aam
out
in
xlat
xchg
cli
fdivr
rcl
lret
fcomi
lret
cmp
lret
fstpt
out
not
cmp
ret
orb
jecxz
shrb
jecxz
hlt
leave
clc
fcmovnbe
int3
lret
test
xchg
fisttpll
in
sarl
shr
repnz
xor
out
and
jmp
fcomi
xchg
sbb
xchg
in
cmc
test
icebp
not
xor
cmp
in
fdivrp
in
fisttpll
int3
cld
divl
sub
repz
clc
into
out
loopne
repz
ret
jecxz
lret
enter
cli
loope
xor
rcr
xor
in
add
aad
cld
ds
xchg
in
cld
cld
iret
icebp
out
xor
xor
lock
call
cmp
incb
aas
fxch
out
in
xchg
aad
icebp
in
test
out
ds
or
jecxz
and
cli
fmull
sub
xchg
jmp
xor
iret
lock
loope,pt
add
jecxz
std
fisttpll
out
aam
sti
lret
fstpt
stc
aam
repnz
sti
loop
rcl
std
repnz
int
nop
in
test
out
out
in
xor
sti
out
aam
fnstcw
aad
xor
call
lock
cli
call
jmp
xor
ljmp
clc
cmp
clc
cld
clc
xlat
add
fadd
iret
jmp
rorb
cmp
shlb
shr
fdivs
cmp
in
cli
stc
rol
out
xlat
out
sbb
lock
ss
stc
lret
addl
xchg
out
mov
hlt
xlat
shrb
not
xor
into
rcr
cmp
ds
loop
icebp
out
in
lret
fists
xor
out
in
xor
jmp
repnz
rol
test
ret
sbb
xchg
jmp
mov
sti
xor
fnop
ds
cmp
xor
mov
into
hlt
xor
lret
cli
cli
hlt
fcmove
stc
in
cmp
fiaddl
stc
cmp
int
cld
addl
call
rcr
ds
cmp
in
neg
mov
sti
lds
jmp
stc
lock
jmp
stc
into
icebp
out
fdivr
cld
clc
fiaddl
xlat
ret
ror
into
cmp
leave
rcr
rcl
repnz
sbb
xbegin
fimull
aaa
in
ljmp
ds
loopne
xor
aad
fisttpl
jmp
shll
fdiv
aad
jmp
or
loopne
call
iret
neg
repnz
icebp
out
shl
xor
cli
cmp
ds
xor
rcl
fildl
mov
in
fimuls
lock
enter
in
in
xor
mul
lock
and
cld
mov
ljmp
sar
div
not
leave
std
int
aas
int3
loope
and
loopne
mov
movb
iret
aam
cmp
sub
shl
rcr
not
test
jmp
in
jmp
int3
ljmp
das
repnz
fdivr
shr
stc
test
cld
fmul
sti
out
int
ljmp
jmp
movl
mov
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
push
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
sbb
jmp
rol
enter
aad
add
xchg
push
mov
jg
add
incb
loope
out
cmc
mov
ret
lret
cmc
pushl
aaa
out
ds
fsubp
into
aad
mov
out
cli
icebp
loope
in
mov
aaa
shr
fpatan
sti
hlt
repnz
cli
ret
fcmovnbe
jmp
fscale
lret
cli
int
xor
ret
lret
cmp
fdivrp
adc
jecxz
and
fucomp
xchg
shl
rol
aaa
ss
xlat
adc
not
les
in
mov
roll
div
in
xor
test
jmp
loopne
out
fistpll
in
sub
mov
out
repz
loopne
xor
out
push
call
ss
hlt
lds
xchg
mov
lret
cs
fmulp
sti
fiadds
leave
clc
sbb
mov
lret
xchg
mov
aad
cmc
clc
xor
test
ljmp
xchg
in
fmul
in
lock
in
loop
ret
xor
iret
xor
hlt
fdivp
test
out
clc
addl
mov
in
clc
aam
repnz
cmp
shl
aas
ret
fstp
shl
ret
ret
loope
mov
test
in
xor
fincstp
sar
out
out
xchg
in
call
xchg
in
stc
out
repnz
in
xor
fcomip
cmp
loopne
loope
mul
jmp
cli
lret
xchg
icebp
xchg
xor
jmp
neg
out
rcr
lret
clc
in
xlat
fprem
jmp
test
loopne
mov
in
lret
cli
aaa
neg
xor
ss
shl
out
icebp
test
fdivr
jmp
loop
ljmp
repz
call
cmp
lock
ds
icebp
std
mov
jecxz
shl
iret
mov
orl
call
cmc
test
out
loope
enter
call
std
loop
stc
sti
aaa
aaa
aas
repz
lret
adc
cmp
fdiv
fcmove
sub
ret
not
aaa
xlat
xor
out
cmp
sar
ds
ret
inc
loop
ret
in
in
loop
in
out
mov
xor
shl
repz
fcmovu
sbb
xlat
cli
xchg
call
in
repnz
ss
fcmovu
aad
sar
fcmovne
add
in
call
jmp
in
ret
rcr
leave
fnstsw
cmp
cld
addb
mov
out
imul
aad
cmc
hlt
aad
xlat
fcom
sar
repnz
cld
stc
cli
in
fcmovnu
out
jmp
xchg
hlt
into
shr
iret
shl
xor
in
fldl
jmp
cmp
jecxz
leave
lock
repnz
ret
xlat
sarl
ljmp
jmp
ret
cli
fsubp
jmp
lret
hlt
out
lret
sbb
cmp
jecxz
repz
in
cmc
xlat
int3
loopne
fcmove
loopne
shr
fcmovnbe
xor
fidivrl
clc
std
out
testb
incb
loope
int3
xchg
cld
cmc
cs
shr
cmp
hlt
xor
repz
std
repz
cmp
jmp
test
lock
cmp
aad
neg
cmp
clc
loop
loopne
ret
aad
mov
lret
xchg
sub
das
enter
cli
cmp
aas
xlat
cmp
in
fyl2xp1
out
sub
iret
or
cs
test
in
cmp
idivb
out
repz
test
aam
fucomip
lret
fsub
loope
sub
loop
aad
imul
fstp
repz
xlat
icebp
cmp
ret
test
loope
test
cs
out
cmp
enter
rcl
and
stc
in
xchg
aad
cli
test
fimull
divb
das
rcl
int
int
sarl
test
out
stc
enter
into
ret
lret
test
ret
ret
fsub
lret
in
ret
adc
int
out
in
jmp
xor
sar
lret
aas
stc
rcr
in
hlt
rol
cmp
stc
in
mov
ror
out
cli
enter
out
in
mul
fst
aas
idiv
jecxz
cld
addb
sub
xor
ljmp
repnz
incl
int
loope
repnz
mov
rcl
enter
int3
aam
fdivrp
sarl
jmp
int3
in
vphaddwd
repz
in
fcomip
ret
cmp
jne
movzbl
and
mov
mov
adc
xor
or
jmp
int3
ror
fnop
xchg
sti
add
les
add
stc
or
add
int
cld
out
test
mov
xor
lock
repnz
jecxz
icebp
rcr
aam
testb
jecxz
call
sarl
iret
xor
jmp
aas
idiv
sarl
enter
in
mov
fsubr
shl
ljmp
loope
cmc
icebp
loopne
fldl
out
and
in
out
in
out
fisubrs
loopne
sub
fcmovnu
lret
fdiv
cmc
clc
cmc
repnz
int3
out
in
int
ljmp
test
out
lret
cli
lret
fdivrs
xchg
leave
lea
call
cmp
xor
jecxz
sar
aad
sbb
cld
jmp
jecxz
loopne
jecxz
das
in
out
xor
hlt
cmp
xor
neg
test
xlat
adc
loope
iret
ret
filds
jmp
cmp
int3
aad
icebp
in
jmp
loope
clc
mov
lock
in
aad
ffreep
lret
aaa
cmp
jmp
cmp
fistpll
repnz
fdivr
jmp
out
repnz
xor
xor
jmp
aad
ds
cmp
repnz
mov
in
out
cmc
enter
cmp
xlat
lret
roll
xlat
test
enter
in
lret
cli
out
out
jecxz
aam
lret
repnz
push
fneni(8087
int
loop
cmp
int3
jmp
out
int
int3
xor
fnstcw
cld
dec
clc
sub
rcl
stc
cmp
jmp
ljmp
fsubrp
ds
into
stc
cmp
fsubr
loopne
iret
ss
rolb
jecxz
out
mov
in
ror
xor
aas
out
aas
aad
aam
idiv
in
lret
fucom
lret
fmul
in
jmp
sarb
cld
aas
into
in
cld
fcmovbe
lret
shl
xchg
icebp
fiadds
jmp
repz
xor
fdivrl
cmp
fcomip
repz
sub
in
test
fsubp
cld
fcompp
ret
ljmp
rol
filds
test
clc
flds
repz
aad
xor
out
aam
xor
hlt
shl
ds
cld
test
idiv
fdivr
int
rclb
ret
cmp
cmp
ret
fcmovne
in
ret
mov
std
int
xchg
sub
clc
out
cmc
rcr
adc
leave
ret
out
fadds
into
shr
enter
fmul
aaa
cmp
ljmp
jmp
mov
hlt
sti
fsubr
xchg
sub
xor
lret
fyl2x
testb
test
ljmp
loop
xlat
jmp
xorl
in
lock
lret
leave
orb
xor
shr
sub
clc
ljmp
test
xor
mov
sub
jmp
call
out
lret
aaa
adc
test
fidivrs
leave
out
lret
int3
jecxz
mov
shlb
call
out
hlt
out
cmc
inc
std
repz
cmc
mul
enter
or
iret
jmp
cmc
lret
lock
ljmp
sti
fimuls
addl
lock
jmp
push
ret
lret
mul
leave
ror
aam
xchg
lret
clc
out
int3
lret
pushl
shr
xor
sarl
shl
aam
hlt
ds
icebp
out
sub
sti
lret
fdivrp
into
stc
rol
ss
cmpb
in
stc
out
aas
test
xchg
ljmp
repnz
aad
shl
icebp
leave
sarl
rcl
filds
decl
in
iret
cs
out
stc
std
in
lock
aas
lock
sti
fcmovnb
cmc
call
mov
xchg
sar
lret
xor
xor
clc
fcmove
cmp
icebp
cmp
fcomip
mov
out
xchg
icebp
mov
mov
ret
ret
mul
xor
in
ss
cli
iret
rol
repnz
xlat
stc
cld
out
fsubr
fcom
les
in
jmp
iret
sti
adc
mov
icebp
popl
ret
icebp
sub
fyl2x
int
sarl
repnz
out
cmc
ljmp
cmc
xchg
int3
ds
ret
rcl
ljmp
sti
cld
cld
fucomip
test
enter
nop
sub
leave
fyl2xp1
aaa
aaa
repz
fnstsw
shl
std
jmp
aad
lds
bnd
xlat
ror
fcmovu
fcmovne
sbb
es
push
lret
jg
add
leave
int3
in
into
in
call
leave
xor
repnz
neg
into
int3
call
lock
out
cmp
fsub
fucomp
out
in
xchg
repnz
jecxz
lret
out
into
aam
sarb
addl
jmp
mov
in
jecxz
ljmp
out
fdiv
cmc
fdivr
test
ds
sti
mov
lret
aaa
in
xor
cmp
lock
aad
cld
out
loope
jmp
shl
loopne
ljmp
hlt
cmp
sar
fldl
mov
lret
mov
faddp
imulb
rol
shr
repnz
xlat
fcmove
rcl
cmp
jmp
xlat
in
inc
stc
jecxz
shr
xchg
iret
xor
cld
aad
out
lret
jecxz
cld
loopne
mov
hlt
ffreep
stc
out
jmp
sub
aam
xor
test
in
rcr
aad
hlt
in
fiaddl
jmp
int
cs
in
out
into
sub
fdivr
rcr
in
lds
mov
shr
fcmove
xor
out
hlt
cli
iret
xor
ds
out
int3
ljmp
out
int3
iret
cmc
aad
iret
in
cmp
jmp
shl
cmp
in
ljmp
in
cld
into
out
xor
xor
in
fmul
cmp
std
rcr
out
fxch
in
mov
leave
test
in
shr
out
out
ss
int
out
enter
fcmovnb
out
out
jecxz
mov
neg
mov
fsubp
xlat
hlt
ret
int
lock
cmp
std
ljmp
ret
mov
enter
repnz
xchg
cs
xor
fnstcw
ss
repnz
iret
fst
repnz
or
iret
int
loopne
fsubrl
xor
sub
call
lret
loopne
sarl
loopne
fisttps
out
test
jmp
xlat
lds
in
repnz
sti
ds
cmp
loopne
cmc
in
lea
fildll
jmp
xlat
in
ds
sarb
repnz
test
in
out
loopne
xchg
xor
aad
aad
int3
iret
aad
cmc
ljmp
mov
fimull
cmc
xchg
int
f2xm1
clc
xor
cli
ss
ror
fdivrp
fdivrl
ffree
div
loope
clc
std
icebp
lret
mov
xlat
call
rcl
ljmp
roll
test
ljmp
cmc
into
rcr
fnstcw
fscale
clc
cld
fdiv
ret
shl
mov
in
mov
loop
ffree
in
faddl
out
iret
ss
shl
lock
cmp
ds
jmp
int
and
rcl
test
sar
ror
rol
stc
repz
roll
loopne
lds
fstp
jmp
fstp
jmp
sti
repnz
cmp
icebp
lock
xchg
stc
or
cmp
test
lret
cli
cld
aam
not
loope
enter
mov
shl
iret
into
loopne
lock
sti
cmp
xor
stc
adc
xchg
icebp
fcom
mov
fcomp
repz
xor
into
xor
clc
lret
repnz
xchg
test
lret
jmp
repnz
jecxz
into
ret
xor
iret
cmp
aas
cmp
int3
jecxz
ret
ret
clc
orb
ror
enter
into
xlat
xor
aad
int3
fdiv
repnz
ljmp
enter
hlt
shl
xor
ljmp
in
aas
stc
out
hlt
leave
xlat
jmp
lock
lds
xor
std
cmc
xchg
aam
rcr
cli
fdivr
in
test
adc
aam
loop
hlt
int3
into
repnz
out
out
ftst
ret
in
xlat
fincstp
fldln2
mov
in
call
out
xor
int
cmp
xchg
sti
imul
mov
mov
icebp
enter
xlat
in
loopne
loop
lret
fst
xlat
xlat
ds
in
sti
mov
mov
cli
into
incl
cmc
xlat
shll
aam
in
jmp
cmp
jecxz
in
les
lds
int3
xchg
leave
repz
rcl
cmc
out
aas
cmp
into
cmp
iret
ss
jmp
jmp
shl
ret
xor
ror
lret
in
hlt
jmp
idivb
aam
mov
loopne
fimuls
into
ret
sub
sarb
test
fsub
out
cmc
mov
cmc
jecxz
xchg
jb
add
incl
add
ds
fstp
fnstsw
aaa
dec
jmp
mov
add
jecxz
into
ret
leave
icebp
stc
cmp
aad
in
into
div
repnz
jmp
fisttpl
icebp
nop
xchg
aam
cs
clc
les
xor
iret
ror
jecxz
cmp
fcomip
out
clc
neg
incb
repz
xor
loop
in
cli
int
int
into
out
repnz
hlt
cmp
loop
enter
mov
out
fcom
into
in
lret
test
icebp
out
ret
in
mov
loope
mul
in
in
in
loope
aad
sarb
out
aaa
cmp
fmul
rol
ret
test
call
xlat
enter
out
in
fdivp
repnz
test
ffree
fucomi
mov
lock
ss
xor
imul
ljmp
cmpb
in
mov
faddl
xchg
call
rol
cmp
int
loopne
sarb
jecxz
fcmovb
xlat
lret
test
xor
into
div
out
xor
ds
hlt
and
out
sti
in
in
mov
out
lret
faddp
jmp
xor
lret
div
shr
testb
test
test
out
fsubr
shl
iret
xor
cmc
aad
aad
cmp
icebp
sti
xchg
test
ds
xbegin
xchg
clc
shl
rcl
cmp
dec
cld
cld
ret
faddp
cld
fdivr
in
in
lret
jmp
mov
jmp
cmp
xor
into
into
loope
cmc
iret
aam
out
std
in
cli
fmuls
lock
aad
aam
cmp
xlat
ss
sar
cli
in
cmc
out
call
ror
lret
icebp
cmp
clc
loopne
ljmp
rorl
test
repnz
xor
fcomi
ljmp
sub
out
cld
movb
push
xor
jecxz
call
icebp
aam
hlt
fdivp
jmp
test
test
out
lret
aam
rcr
in
in
sti
xor
cmp
xlat
cmc
ljmp
not
call
add
rol
leave
loop
cmp
fistpll
xorb
lds
xlat
into
in
mov
clc
cs
enter
aam
fiaddl
in
fdivr
mov
cli
loopne
rcl
in
fcom
fcmove
cld
repnz
sar
std
rolb
test
in
mov
sti
in
xchg
and
cmp
out
in
fistpll
cmp
out
stc
test
xchg
cld
std
int
xchg
xor
idivl
in
fsubr
into
cmp
in
lret
or
sti
jmp
std
roll
enter
call
cli
idivb
jmp
shr
loopne
cld
in
in
in
aam
sti
out
iret
aas
cmp
cld
in
loope
aam
std
call
stc
leave
and
in
icebp
lret
das
aam
fdivr
in
repnz
shr
lret
fstp
not
in
loop
in
in
lret
xchg
cmc
xor
repz
clc
cmc
ror
jmp
fadd
loope
rcr
test
test
in
jmp
mov
loop
enter
cmp
hlt
ds
fadds
lea
fucom
in
sar
rcr
rcl
cmc
cmp
aad
icebp
fdivr
lock
test
stc
xlat
aam
cld
int
jmp
jecxz
hlt
shl
in
in
ret
icebp
int3
rcl
ljmp
std
enter
jmp
fadds
in
cmp
rcl
int
cmp
cmp
aad
fcmovbe
filds
in
stc
jmp
cmc
jecxz
xor
cmp
flds
out
fcmove
fldl
jmp
rcl
repz
not
cmc
fstpt
hlt
cli
xchg
test
ror
sbb
mov
aam
repnz
lret
idivl
lret
loopne
cli
testl
orl
not
ljmp
cmc
dec
shl
cli
jmp
cmp
in
enter
repz
repnz
cmp
aam
enter
ss
out
fneni(8087
stc
mov
std
fdivrp
mov
filds
mov
cmp
lock
shl
jecxz
aad
decl
testb
out
out
into
aaa
out
xor
call
icebp
cmp
inc
clc
out
xchg
loopne
xor
lock
cli
hlt
fcomp
lock
ds
rol
roll
in
xchg
repz
lds
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
jmp
iret
ret
fstp
insb
sub
repz
or
add
icebp
int
repz
aam
std
cmc
test
test
cmp
clc
loope
fiadds
mov
shr
cmp
aas
cmc
incb
clc
mov
sti
hlt
leave
jmp
lret
decb
iret
repz
cli
dec
loopne
jecxz
sti
adc
test
int3
fimuls
shl
lret
ds
cmp
vmaskmovdqu
add
loopne
xchg
fisttpll
out
clc
leave
cmc
jmp
cmp
aam
jmp
aam
fstp
lret
xchg
aam
aaa
leave
leave
hlt
out
xor
aaa
fistpll
cmp
in
fnstcw
and
loop
fiadds
mov
shl
repz
in
call
jecxz
xlat
xchg
sar
mov
cmc
or
xchg
jmp
and
lret
aaa
aaa
enter
call
iret
cmp
cld
rolb
fimuls
repnz
cmc
rcl
lds
rcl
aad
not
xor
ret
stc
aas
fisttpll
lret
aad
lock
ret
aaa
clc
in
call
cmp
stc
loope
ret
sbb
cli
fadds
rcr
repz
in
fsub
cmp
jmp
iret
cmp
in
loope
jecxz
ljmp
jmp
lret
repnz
add
neg
fcomp
mov
xchg
addb
ret
sarl
rcr
enter
int
fchs
shl
fcomp
in
into
xchg
decb
hlt
cmp
fdivrs
fmul
jmp
flds
call
fadds
sti
sub
cmc
int
leave
std
idiv
cmp
cmp
lock
loopne
std
lock
out
std
in
loopne
call
lret
leave
hlt
out
cmp
into
repz
test
jecxz
testb
xchg
xor
idiv
ror
icebp
aam
call
repz
test
jmp
ljmp
in
jecxz
aam
int3
fdivr
ror
fadds
fdivrp
ljmp
xchg
xchg
xchg
lret
call
cmp
out
lret
xlat
xlat
and
ljmp
out
into
shl
ljmp
sarb
fiaddl
loop
leave
mov
in
repnz
repz
rol
ret
into
sar
loopne
fcom
hlt
cmp
leave
fiadds
nop
lret
push
xor
rol
cmc
out
fnstsw
lock
fsub
cmp
hlt
imul
test
out
icebp
jmp
das
das
ljmp
clc
lock
jecxz
vpextrw
incl
in
loopne
in
xlat
repnz
lock
xor
shl
orb
adcl
test
lret
aad
xlat
out
int
lret
fcom
icebp
call
out
dec
call
adcl
idiv
in
stc
cmp
int3
icebp
fildl
in
test
fimull
out
std
cmp
call
std
rolb
call
loope
clc
call
aad
xor
cli
lock
jmp
loop
loope
cmp
std
out
int3
shl
cmp
in
in
xor
iret
repnz
enter
sar
stc
cmp
into
les
leave
xchg
hlt
hlt
sti
clc
shrl
hlt
cmp
in
repz
jecxz
fcmovnbe
cli
in
out
loop
in
cli
fimull
cmc
mul
aaa
lock
lock
clc
fdiv
clc
cld
ret
fmull
test
cli
into
xor
repz
aad
jmp
out
into
repz
and
out
mov
out
xlat
mov
loopne
leave
int3
shl
test
jecxz
loop
sub
in
repnz
sar
cmp
loope
xor
lret
repnz
loop
repnz
loop
leave
out
jecxz
fsubr
push
out
xchg
cmp
imul
ss
into
loopne
aad
jecxz,pt
rcl
mov
call
in
fcomp
jmp
mul
addb
mov
iret
faddp
test
repz
iret
clc
int
rcl
cmp
jmp
aad
clc
fisttpll
loopne
fdivs
sub
cmp
add
into
rolb
enter
incb
icebp
shr
jmp
cmp
lret
addl
fdiv
int
out
lret
repz
xor
repz
clc
cmp
enter
mov
mov
mov
mov
mov
xor
xor
add
add
jmp
rol
int3
fcmovnu
fcmovb
and
ja
stos
mov
jg
add
rolb
loope
fsubp
call
test
shrl
icebp
shr
int
cld
int3
fcomi
repz
xchg
mov
lds
mov
repz
clc
fcmovu
leave
lret
xlat
repz
loop,pt
fadds
out
popl
test
stc
int3
sub
jmp
push
in
out
aad
stc
shl
sub
out
out
sbb
roll
ret
cmp
loope
addb
repnz
orl
mov
repz
repnz
ss
xor
xor
stc
loope
div
enter
mov
out
fucomp
nop
ljmp
fdiv
cmp
cmp
hlt
in
rorb
hlt
out
in
lock
xlat
xlat
leave
cmp
cmp
iret
xlat
xlat
sti
faddp
cmc
leave
loopne
add
cld
into
fidivs
lds
xlat
into
int3
call
loopne
and
test
int
clc
xchg
cmc
lock
lock
xor
ljmp
test
test
xlat
fstp
in
xchg
sti
lock
aam
les
hlt
call
xchg
aad
shl
cli
fmuls
cld
cmc
test
into
stc
call
out
fcomip
lock
cmp
cmp
jmp
cmp
into
loopne
cmp
cmp
into
xlat
in
and
cmp
addl
lret
shrb
divl
rol
cmp
aad
ror
enter
ss
stc
std
mov
xchg
out
cli
incl
lret
xor
iret
cmp
int3
int3
std
in
fadds
movl
xor
vpminsw
lock
aas
cmc
sarb
out
cmp
mov
lret
nop
mov
ret
fmul
in
out
aad
cmp
in
cmp
sti
ret
jecxz
call
fucomip
ffreep
lock
ljmp
fst
jmp
int3
cmp
fmul
xlat
rol
out
cmc
fmul
clc
out
out
in
rol
xor
int
xor
fcomp
fucomi
jmp
std
out
mov
clc
testb
repz
int
xor
cmp
int3
call
xlat
repnz
loop
mov
fsubrp
fcmovnbe
loop
test
xlat
cli
jmp
shl
enter
hlt
test
cmp
fiadds
fstp
in
xor
out
xor
fdivr
xor
cmc
add
jecxz
clc
test
mov
out
xor
cmp
neg
cli
fdivp
addl
testb
aad
jecxz
jecxz
les
stc
loopne
out
out
rcl
repz
xlat
jecxz
repz
ror
out
out
xor
ss
adc
test
xchg
mov
enter
xchg
shr
rcl
les
repnz
icebp
shr
imul
loopne
rcl
rcl
mov
jmp
in
int
and
repnz
in
call
enter
aam
fdivrp
aam
shl
test
mov
ret
xchg
cld
xor
cmp
call
out
xlat
shr
ds
ret
inc
adc
xchg
std
xchg
icebp
out
fcomi
jmp
int3
fidivrs
lock
sti
inc
mov
ret
in
lret
hlt
jmp
test
call
enter
in
std
loop
test
fdivrs
in
out
call
out
int3
enter
icebp
jmp
shl
ret
std
cmc
fcmovbe
ret
sti
leave
out
in
in
in
icebp
iret
sti
fsubr
in
idivl
into
stc
test
test
loop
in
in
icebp
sti
in
or
ds
icebp
cmp
aam
int3
ret
sar
fst
not
movl
cs
xor
stc
sarb
test
sti
fadd
cmc
out
cmp
cmc
loop
lret
xchg
into
call
loopne
rol
cmp
xlat
jmp
xlat
aam
movl
loopne
in
xchg
shl
xlat
repnz
aad
aam
lret
in
repz
shl
test
fsubr
fisttpll
icebp
xlat
out
lret
jmp
xor
cmp
cmp
cmp
fdivrs
ds
clc
fisttpl
fcmovb
in
jmp
int
aam
int
lock
cmc
clc
xchg
shl
mov
jmp
xchg
iret
in
shll
aam
enter
not
lock
fcmovnb
or
shl
xchg
in
leave
int
rcl
cli
fnop
neg
imul
ret
aad
imul
mov
cmp
jmp
iret
aad
ret
fst
dec
cwtl
mov
push
add
leave
jecxz
fdivr
ljmp
ror
aaa
fsubr
imul
stc
fdivrs
fcmovbe
fcomi
sbb
jecxz
add
xchg
fcomip
in
call
xor
cli
call
fdivp
sar
fcompp
ret
test
mov
roll
xor
out
lock
cld
aad
aas
in
in
out
aam
loope
fnstcw
in
icebp
mov
int
xchg
rol
repnz
repz
shr
clc
ss
cmp
in
ljmp
lea
cmp
hlt
cmp
ss
cmp
rcr
orl
into
jmp
xor
out
rcl
ret
repnz
loopne
loopne
aaa
fisttps
addb
test
xor
shr
cmp
into
fld
filds
aam
jmp
cld
out
test
mov
ljmp
icebp
cmp
hlt
shr
idivb
incb
incl
fcomip
xor
repnz
ljmp
icebp
aam
loope
shl
cmp
xchg
jmp
cmc
call
leave
jecxz
div
in
cmp
test
repnz
ret
loopne
int3
xchg
and
repz
cmp
repnz
xor
not
sti
loopne
test
fadds
loop
iret
test
ljmp
std
icebp
cmp
aad
push
ds
faddl
ljmp
ds
jmp
aam
cmp
ror
in
jecxz
not
fdiv
repnz
jmp
shl
fsub
xor
repz
aam
stc
aas
ds
out
repnz
idiv
sti
mov
xor
xor
sub
xor
cmp
xor
add
jmp
ret
jecxz
fstp
iret
loop
repz
lock
xor
std
int
cmp
lret
jecxz
repz
roll
incb
divb
ljmp
add
fdiv
shl
xlat
in
std
out
in
jecxz
sar
xor
aam
fcmovnbe
fcomp
aad
cmp
out
cmp
test
xchg
jmp
loop
jmp
in
int
ljmp
in
jmp
int3
mov
xchg
out
lret
iret
mov
xor
into
sub
into
lret
add
shr
jmp
stc
loopne
lock
lock
out
iret
in
xor
shr
loopne
int3
lock
incb
fdivp
in
xor
int
in
stc
jmp
std
out
loop
rol
lds
jmp
xor
sti
shr
jmp
cmp
int3
rcl
sti
fdivp
loop
in
mov
into
ret
mov
in
lock
fcom
cmp
fcmovbe
jecxz
aam
ljmp
lret
ljmp
aaa
std
ss
ds
addl
int
int
mov
in
ss
xor
cmc
fnstsw
loopne
loopne
roll
mov
xchg
iret
in
rcr
shl
fcom
jmp
ret
not
out
fadd
ljmp
stc
iret
int3
rcl
aaa
fstp
cli
aam
idiv
out
out
xor
mov
cmp
mov
xor
cmp
int
repz
in
repz
imul
lock
sbb
out
icebp
icebp
enter
ror
cmp
fnop
loopne
fiaddl
mov
shl
aad
sub
sti
in
jmp
icebp
cli
cmpb
fdiv
shl
clc
call
leave
jmp
mov
out
shrb
aam
hlt
aaa
shl
hlt
in
icebp
fxch
loope
jmp
mov
call
shr
shr
shl
loop
leave
xlat
aam
addb
hlt
loopne
mov
int3
test
mov
int3
ds
out
test
sti
cmp
sar
in
cmp
fcmovu
loop
jmp
in
into
cmp
aad
aam
aaa
out
fucomi
jmp
idiv
stc
jecxz
rcr
mov
test
mov
xor
cli
std
ss
enter
test
icebp
fmulp
lret
aam
out
loopne
repz
in
aam
call
ss
adc
cmc
jmp
clc
int
mov
fcomip
xor
xor
lret
rcr
rcr
fcmovne
icebp
out
std
incb
xchg
nop
test
aad
cmp
xor
aad
in
sar
fucom
or
inc
cld
jmp
iret
int
ret
fstp
sbb
jle
jg
add
icebp
aad
enter
idivl
hlt
in
div
test
call
jmp
xchg
fmull
test
aad
aam
stc
cmp
clc
ret
std
lret
jmp
mov
out
leave
loop
iret
sti
xor
iret
cmp
loope
adc
cmp
ret
fsubrp
cli
out
int3
call
rcl
lret
xor
out
leave
cmc
fldl
cli
jecxz
ljmp
call
out
cmp
jmp
int3
fcmovbe
iret
cmc
cmp
ret
shl
mov
mov
into
out
fucom
mov
les
xor
xor
aam
bnd
divb
inc
lds
mov
out
mov
xor
in
cmp
fcmovnbe
lret
lret
test
mov
cli
jmp
decb
in
shr
fcomp
stc
cmp
loopne
xor
std
fldl
in
rol
lret
cli
aam
int3
cld
leave
in
in
cmp
ret
fcomip
ret
xchg
std
sbb
shr
rol
lret
fucomi
ljmp
cmc
ret
stc
jmp
test
ljmp
fstpt
shr
lret
lock
cld
mul
test
lret
repnz
test
xor
jmp
cmp
int
shl
cli
adc
ljmp
repz
fdivp
xlat
out
jecxz
std
into
cmp
xor
lock
jmp
lret
lret
out
fcmovne
stc
cmp
clc
sar
ret
ret
mov
cli
xlat
loopne
cld
loop
in
std
or
sar
imul
lret
aaa
fsubr
sarb
fsub
repz
fsub
test
mov
shl
fcompp
divb
icebp
int3
fucomip
fcom
xor
in
idiv
in
lret
loope
out
in
ret
out
xlat
idivb
iret
xlat
int
call
in
out
test
xchg
int3
iret
aaa
divl
hlt
icebp
cmp
repz
rcr
not
jmp
in
loope
clc
and
ljmp
aaa
aaa
std
jmp
sti
rcl
mov
in
cli
hlt
in
adcl
ss
int
enter
cmp
icebp
fcomip
testb
enter
hlt
int3
aam
int
idiv
ljmp
flds
int
leave
mov
in
call
cmc
out
aam
ret
fadds
ffree
out
fcomp
sti
int
in
repz
enter
lret
lock
test
fldlg2
xchg
lock
hlt
lret
aaa
stc
fsincos
ffree
sti
fucomi
cmp
sti
fiadds
call
nop
repz
in
xchg
ds
loopne
aaa
aam
cmp
jmp
loop
cli
jmp
fisttps
test
ds
xor
cmp
fucomip
fnstsw
sti
fcmovbe
repz
faddp
and
fucom
test
iret
mov
in
cld
in
shl
loopne
lock
fdivr
sar
iret
fsubr
into
fucompp
hlt
fnstsw
fucomi
loopne
repz
lret
in
into
ljmp
std
stc
cli
test
ret
cmp
mov
sbb
mov
call
lds
int3
clc
xor
stc
out
sti
out
loopne
std
cmp
cld
jmp
aam
stc
in
std
lret
repnz
in
xor
fxch
cmc
cli
cmp
ds
cmp
out
ljmp
nop
out
in
ret
out
rcl
rcr
stc
icebp
rol
rol
loope
mov
cmc
ret
jmp
in
cli
xchg
divb
cli
rcl
leave
out
cli
idivb
cmp
cmc
addb
in
out
rolb
xor
neg
ss
not
cmp
ds
les
cmp
in
jmp
shll
aad
lock
cld
xor
cmp
ds
out
stc
and
enter
lret
lret
xor
out
ss
cmc
clc
int
int
out
cmp
std
rcr
test
loope
call
fdivl
int3
xor
into
aam
cmp
rcl
mul
xor
aam
ffree
neg
aam
jmp
fld
loopne
test
call
std
cli
repnz
rcr
rcl
in
sti
shr
mul
movb
lret
loopne
not
cli
xor
aas
shr
rcl
cli
in
repz
xchg
fdivr
in
lock
hlt
xor
lret
rcl
in
cmp
fstpt
lock
jmp
fimuls
loop
xchg
jmp
jmp
pushl
ret
jmp
rol
sarl
rcl
mov
addr16
ds
jl
ret
xlat
xlat
in
out
shl
cmp
sti
fcmovb
in
ret
fisttps
adc
ret
aaa
sub
out
cmp
cmp
lock
loope
jecxz
out
sub
fcomi
repz
shl
cmp
lret
aam
sar
cmp
push
shl
out
in
mov
fmulp
jmp
repnz
jecxz
enter
in
cli
into
xlat
ss
cld
fiadds
jmp
lret
mov
out
cli
shr
xor
test
hlt
out
divb
xor
loope
cmp
out
sti
out
mov
xchg
ror
out
aam
cmp
test
loope
xlat
in
aam
cmp
loopne
in
test
filds
int
in
jmp
enter
xor
cmc
aas
rol
mov
loopne
fistl
inc
fsqrt
fstp
fst
sarl
loop
loope
lds
cld
int3
int
and
rol
cmc
sti
stc
xlat
clc
fcmovu
sar
test
cli
incl
call
loope
loopne
xor
int
aad
cmp
fnstsw
enter
ds
ljmp
lret
jmp
icebp
int
repz
cmp
out
lock
sar
in
jecxz
out
stc
xor
in
leave
into
lret
rcr
cmp
ds
cli
call
repz
xchg
lret
lock
fmul
ljmp
rol
rcr
test
loopne
loopne
mov
sub
loopne
aad
fst
out
dec
loopne
aam
fsubp
mov
clc
fisttpl
xor
aad
lret
cli
repz
cmpb
test
addl
ljmp
rcl
xor
lret
call
cmp
in
shl
test
cmp
call
out
das
lock
jmp
sarl
aam
std
jecxz
clc
out
fcmovu
cli
sbb
std
in
mov
in
icebp
icebp
aam
leave
repnz
sbb
fadd
in
mov
in
loop
out
sub
sub
sub
cmp
jmp
lock
aas
neg
repz
in
jmp
loop
jecxz
into
repnz
hlt
fcom
jmp
out
ds
fst
in
cmp
in
cmp
jmp
int3
xchg
fcmovb
clc
cld
xor
cli
call
cmp
addb
rorb
lock
cmp
std
cmp
loopne
fiaddl
jmp
lret
fsubp
rclb
rol
out
sub
out
out
test
cmc
cmp
rol
lock
in
out
fmul
out
enter
icebp
lock
rcl
ror
out
cmp
repnz
leave
leave
leave
cld
lret
sti
sbb
xchg
ret
ss
jmp
hlt
sti
jmp
sar
fdivs
sar
hlt
fsubrp
lea
out
rorb
idiv
fldt
shl
dec
cmp
loopne
aad
repz
in
fstp
out
fisttpl
enter
cld
cmp
repnz
cmc
fcmovnbe
rolb
xchg
lret
out
sub
out
repz
int
in
out
int3
cmp
xor
incb
in
cmc
decl
std
std
cmc
shl
les
lock
lret
fst
loope
aad
adc
ror
cld
icebp
ficoml
aad
ret
lret
lock
enter
rcr
leave
xor
fsubp
in
jecxz
test
int
sti
sub
cld
ss
int
cmp
loopne
vpsubusb
in
repnz
xor
loope
cmc
in
aaa
aad
repz
cmp
cld
aad
loopne
flds
cld
jmp
iret
fld
jmp
fnstenv
hlt
xor
in
loop
fldl2e
fsubr
int
cli
ljmp
shlb
icebp
repnz
test
into
fcmovnu
flds
clc
fmulp
cmc
lock
xlat
int
xor
cs
jmp
cli
mul
fcmovnb
mov
iret
addl
cld
aad
cmp
int
in
in
enter
ror
jecxz
out
call
aad
lock
cld
ds
repz
call
addb
int
jecxz
call
out
ds
div
out
incl
or
xchg
in
sti
int3
mov
ljmp
cmp
test
cmp
cmc
test
out
ffree
jecxz
addb
leave
les
aad
in
mov
jmp
iret
aad
aad
push
pop
aam
daa
in
jg
add
sti
int3
rcr
aaa
add
fcmovbe
mov
call
fucomip
enter
aad
enter
jmp
aaa
fucomip
fcmovnbe
aas
cmpl
xchg
lret
fimuls
xor
std
out
xlat
cmc
std
cmc
out
fdivr
adc
test
mov
fstl
sub
enter
lret
cs
ds
jecxz
cli
stc
xchg
aam
in
loope
mov
repz
cs
cmp
aas
not
faddp
out
out
mov
xchg
or
leave
ret
jmp
enter
call
fnstcw
cmpb
test
test
xlat
out
lret
addb
rol
out
std
xor
rol
repnz
mov
enter
fdiv
lea
imul
sti
repnz
hlt
jmp
into
fsub
test
rcl
loopne
ljmp
sub
aad
sub
fidivrl
xlat
rcl
aas
sbb
enter
mov
mov
ret
xor
cmp
cmp
repnz
fdivrp
sbb
aad
adc
mov
aad
in
shl
fcmovne
into
cmp
rcr
iret
shl
xlat
in
and
into
xchg
mov
shlb
out
hlt
cmp
fldlg2
aad
aam
ret
repnz
ret
rolb
enter
mov
idivl
shl
not
ffree
fprem1
cli
shll
rcr
iret
in
rol
ljmp
sti
ljmp
lock
aad
repnz
aad
cld
cmp
int
rol
mov
cli
call
in
test
out
enter
imul
into
shr
cli
ror
rcl
iret
roll
ljmp
repz
loopne
out
hlt
ljmp
test
test
sbb
std
loopne
fisttpl
rol
cs
fucomi
lret
idivl
fnstsw
loopne
fsubp
fisttpl
out
xchg
jmp
cmp
icebp
cmp
leave
shl
rcl
ret
out
cmp
clc
jecxz
loop
jmp
in
and
xchg
aam
out
lret
cmp
lret
loope
test
cli
in
in
into
fistl
int3
xor
lock
ror
cmpl
cld
jmp
in
ret
loope
fucom
icebp
loopne
imul
jecxz
in
leave
cli
test
jmp
loop
sti
out
sti
jmp
out
int3
lret
lock
jmp
loope
ljmp
loop
loope
enter
xchg
cmpl
sub
in
out
sar
and
in
roll
mov
xchg
xchg
int
bnd
in
out
icebp
out
cmp
cmp
loope
roll
sub
out
fsubrp
and
out
call
ljmp
enter
int3
mov
fnsetpm(287
filds
xlat
mov
into
in
xlat
aas
cld
cld
in
in
into
add
out
test
loope
aad
jecxz
das
xor
hlt
cld
jmp
jecxz
cmp
incb
stc
lret
in
out
in
out
lock
loopne
aad
fcmove
fnstsw
movl
lock
leave
icebp
leave
cmp
hlt
fdivrp
cmp
cmp
jmp
lret
fstl
out
int3
call
repnz
cmp
fucomip
ret
iret
mul
clc
in
les
xlat
out
xor
not
aad
shl
cmp
cmp
addl
icebp
lret
lea
int3
cmp
cmp
jmp
clc
cmp
fdivr
in
jmp
fsubr
enter
mov
in
das
cmp
repz
aas
cmp
cmp
cmc
stc
xchg
mov
faddl
rol
out
in
cmp
rcr
xor
loopne
cmc
ds
loopne
fsubp
fiaddl
int3
call
jmp
xor
repz
imul
cmp
out
fcos
xchg
loopne
fsubrp
sbb
jmp
repnz
fldpi
out
in
fcmove
ffree
fcmovu
xchg
cmp
sbb
mov
xchg
xchg
and
out
lock
iret
sti
in
leave
in
ljmp
ret
ret
flds
shl
enter
call
sarb
aam
out
faddl
sbb
loope
mov
lock
xchg
fcomip
in
xor
jmp
cmp
cmp
jecxz
repz
fcmovnu
fdivr
fiaddl
ret
idivb
ljmp
iret
sti
imul
add
mov
mov
pop
leave
ret
push
mov
push
not
push
movl
mov
mov
mov
mov
mov
movl
cmp
movl
jmp
int3
aam
xlat
fst
fldl
mov
movl
jl
add
mov
mov
hlt
mov
fldl
jmp
into
loop
int
sub
fcmovb
fsub
fcmovnu
xchg
jecxz
ret
xchg
out
lock
in
fcmovne
lret
aam
sarb
out
sbb
aam
enter
repnz
int
jmp
in
xor
cld
ss
lret
fcmovne
enter
into
out
lock
test
in
call
in
std
loope
cmp
hlt
mov
aam
mov
mov
mov
mov
ror
lret
aam
in
cmp
ljmp
xchg
movl
cmp
ror
push
ljmp
fidivrl
ffreep
testl
sub
lock
jmp
leave
int
rcl
cmp
xchg
repz
out
in
icebp
aad
cli
cmp
std
fcom
roll
fdecstp
stc
cli
nop
lock
ljmp
hlt
lock
xor
cld
fcmovnb
stc
fsubr
cmp
std
in
int
cld
ret
test
lock
out
lock
in
idiv
rol
sti
fdiv
vcmpps
rol
call
ss
xor
aad
cmc
cld
fcomip
into
test
fcomi
fcomp
ljmp
xchg
cmc
xor
lret
out
cli
ss
shl
std
loop
fcmovnu
ftst
xchg
shr
xor
ror
repnz
hlt
or
repnz
faddl
loopne
xchg
out
fmulp
into
call
aad
cmp
loope
cmp
out
sti
jmp
cli
fsubr
std
nop
lret
cmc
xor
ljmp
ljmp
xchg
inc
in
cld
fsubr
in
in
in
jmp
ljmp
cli
cmc
inc
lret
jmp
mov
roll
repnz
aaa
cmc
into
lret
rcr
cmp
xchg
fiaddl
lret
mov
mov
lret
mov
int
int3
loope
cli
shr
lret
fsubp
repz
out
jecxz
ror
call
lret
xor
hlt
icebp
test
ret
mov
loop
loop
int3
filds
in
lret
repnz
cmp
loopne
int3
fadds
jecxz
in
jecxz
nop
test
in
fidivl
repnz
fistpll
cmp
aas
xchg
jmp
test
in
xchg
fsubp
xor
in
xor
ljmp
int
sti
icebp
jecxz
addb
int3
fdiv
mov
xor
jecxz
fidivrl
mov
cmp
iret
repnz
in
repnz
out
loopne
mov
fiaddl
cmp
xlat
sti
fistpll
repz
shl
repz
in
out
cld
leave
sub
fsubp
out
in
test
std
jmp
into
test
xchg
repnz
sti
clc
out
out
mov
in
sti
cli
shr
fcmovnb
jmp
repz
in
ret
ds
out
in
cld
in
xor
repz
in
ss
in
cmp
int
jmp
ds
not
aad
ret
in
fstp
test
fcmovnu
mov
xor
cld
cmp
fst
repnz
cmp
out
call
in
mov
jecxz
iret
vpsubusw
int
out
xor
out
out
xlat
xlat
int
add
out
sub
xchg
ret
icebp
call
hlt
xlat
add
fadd
fld
cli
mov
iret
fadds
call
aad
cld
out
repnz
iret
fucom
faddp
fmulp
cmc
mov
or
jmp
fdivr
sar
idivb
cmpl
out
cld
leave
shl
test
xchg
loop
into
div
int
shr
repz
clc
cmp
fsub
fstpt
imul
adcb
aas
enter
xor
cmp
fldl2e
ret
stc
fldl
and
mov
in
out
xlat
ljmp
cmp
cmp
loope
loopne
int
dec
repz
lret
rol
cmp
xor
fadds
add
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
mov
xor
mov
add
mov
movzwl
not
jmp
rcl
ror
fstp
fldenv
stos
mov
idivl
std
add
fildl
xor
lret
mov
out
aad
xor
ret
ds
icebp
loop
fucom
filds
shr
mov
shr
jmp
cmp
cmp
jmp
adc
inc
out
test
loopne
aaa
enter
fxch
cmp
cmpb
aam
ret
mov
loopne
jmp
fimull
cmc
jmp
repz
test
mov
fsub
xlat
enter
lock
repz
shl
not
int
repz
into
testb
cmc
jecxz
out
int
xchg
lret
cld
hlt
out
in
ror
in
xor
rcl
loop
fstp
ds
repz
and
in
std
nop
enter
faddp
aad
aad
into
call
clc
out
jecxz
fcmovb
rolb
mov
cli
sti
in
ljmp
neg
idivl
cld
fsub
cmp
roll
sub
flds
call
sub
int
ds
aas
into
test
loopne
cld
incl
out
fdivs
cmp
cmc
rolb
loope
loopne
aam
in
leave
loopne
enter
ljmp
aaa
in
neg
clc
stc
jecxz
loope
cli
lret
out
cmp
hlt
loopne
in
xlat
lock
not
cmp
jecxz
out
into
stc
int
xchg
loope
xlat
aad
sub
stc
into
adc
sti
rol
out
loope
loop
in
into
call
enter
les
cmp
enter
shl
test
out
clc
sbb
sbb
into
loopne
stc
sub
jmp
fcmovnu
xlat
clc
shl
mov
testl
sub
shl
aad
repnz
cmp
aaa
repnz
cmc
cmp
ret
addl
test
repnz
hlt
xor
cmp
cmp
aad
cmp
aas
std
lea
xchg
icebp
repz
shl
out
cmp
cmc
cmp
fstp
clc
roll
in
and
mov
shr
lock
imul
fucomip
lock
loop
loopne
test
mov
fucomip
clc
jmp
test
les
cmp
ljmp
std
add
sbb
out
int
std
cld
fisttpll
lds
cmc
xor
fadd
cli
fcmovbe
fsubr
cmp
rol
fimull
out
call
imul
in
lret
xor
cmc
repnz
ret
cmp
sti
mov
out
mov
in
mov
cs
hlt
ss
cmp
aad
cmp
loope
test
clc
mov
nop
test
ret
enter
in
in
fdivrp
std
fcmovnu
addl
std
loop,pt
nop
jmp
lret
sub
ret
sarb
out
stc
fdivrs
loope
test
addl
xchg
out
ror
jmp
leave
loop
xor
out
out
loop
loope
xchg
jecxz
sti
clc
out
lea
in
loopne
repz
xlat
enter
rol
loope
ret
out
sar
fsubr
in
xchg
aam
out
aam
das
aam
xlat
aam
lret
in
into
in
vpmulhw
cmp
orl
vpminsw
test
loope
jecxz
fabs
xor
ret
icebp
in
or
rcl
loopne
in
sti
clc
cmp
cmp
ds
sti
cli
mov
xchg
lret
mov
shr
repz
xor
call
cmp
in
icebp
sarl
out
fadd
cmp
and
jecxz
ror
in
fcom
ror
cmp
fnstsw
rcr
aam
loopne
in
xchg
sbb
xchg
lock
leave
repz
hlt
fld
xor
cmp
lret
repz
repnz
decl
jmp
cmp
pushl
leave
sti
ljmp
jmp
int
in
adcl
cmp
xor
cli
aam
out
sti
jmp
out
mov
clc
lret
jmp
ljmp
push
ror
add
jmp
jmp
enter
fstp
fstp
adc
xor
jg
std
add
ret
hlt
fiadds
iret
shl
ljmp
iret
fxtract
int
cmc
or
rcr
test
mov
loop
fcmovnu
out
loope
icebp
fisubrs
das
leave
into
cmp
repnz
xor
lret
out
repz
in
aam
faddl
nop
sub
enter
xlat
sub
xor
in
fcmovbe
ds
shl
fnstsw
jecxz
jmp
mov
xchg
rcl
icebp
fcmove
aas
cmp
adc
shl
loope
hlt
hlt
lea
orl
std
iret
in
out
in
fnsave
into
in
shl
std
lock
loopne
call
mov
out
iret
rcl
cmp
hlt
lds
jmp
xor
ds
call
fsubr
test
xchg
lret
xlat
leave
jmp
shl
in
clc
shl
int3
cli
cli
test
leave
mov
shl
cld
rcr
out
xlat
call
fxch
cmp
fcmovnu
repnz
jmp
int
test
ljmp
ljmp
testl
mov
mov
shl
cmp
in
rcl
sarl
cli
add
fninit
out
lret
sti
in
lret
xchg
call
cmc
ror
repz
aam
ror
icebp
clc
repnz
cld
fcom
mov
test
fisttps
lret
lret
rcl
fnstsw
cmp
repnz
repnz
not
test
test
out
adc
mul
cmp
ror
roll
repnz
clc
cmp
sti
mov
in
orl
cmp
fcom
out
ret
jmp
std
ror
xor
shlb
bnd
ljmp
incl
addl
xor
aad
std
sti
cmp
loopne
rcl
fiaddl
ljmp
mov
adc
xor
enter
test
cmp
cmp
lds
adc
mov
xor
out
ret
int
int
loope
jecxz
and
cmp
call
fildl
das
xor
int3
shl
in
sarl
ljmp
cmp
cmc
cmp
out
loopne
fisttps
ss
in
aam
cmpb
hlt
xchg
loopne
mov
jmp
out
in
roll
ss
ret
iret
out
lock
xchg
rcl
stc
jmp
fucom
enter
call
aad
in
fucomp
in
aas
addl
test
sar
jmp
cld
jecxz
shr
shr
lret
icebp
fdivrs
fcmovbe
mul
stc
aas
addb
idiv
out
in
into
repnz
lret
icebp
loopne
xor
fstp
in
lret
ror
add
out
cld
out
lea
xor
sti
aad
sti
cmp
cld
or
in
cmp
cmp
xchg
ds
ss
cmp
aam
enter
ret
xlat
fcomi
cmc
jecxz
stc
mov
xchg
jmp
xchg
xor
cs
leave
ljmp
in
test
ret
cmp
in
iret
rcr
mov
loope
loope
aam
xor
jmp
cli
stc
fld
not
rol
lret
loope
test
std
jmp
ds
xor
shl
fdivr
icebp
ret
icebp
and
loope
idiv
mov
fdivr
jmp
xor
ret
hlt
frndint
fsubr
out
in
fdivrs
iret
xlat
mov
in
out
iret
adc
xlat
leave
xor
ror
iret
into
lock
in
call
fxam
std
sti
in
mov
shr
sub
xor
repz
out
cld
ror
clc
clc
in
xor
test
fadd
test
in
out
icebp
addl
into
jmp
rcr
addl
decl
into
in
sub
idiv
test
shll
cli
into
fcom
loop
xchg
in
xchg
ret
xor
xor
rcl
aam
cli
fcmovnbe
aad
cli
call
sti
test
int
into
in
fimuls
repnz
out
mul
aam
xorl
jmp
aad
rcr
fstp
sbb
fldenv
std
add
rol
out
in
leave
fsubrp
addl
rol
cmp
in
aaa
fcmovne
lret
push
xchg
ret
ror
std
fdivr
in
jecxz
mov
xor
xor
lret
cmp
cld
addb
fmul
lds
into
repz
cs
out
out
stc
ss
jecxz
jecxz
sti
cld
hlt
test
nop
in
int
out
out
int
xor
ljmp
fidivrs
leave
cli
loopne
sti
cli
out
lret
lock
orl
aam
loope
jecxz
loopne
hlt
cmp
test
shl
mov
jmp
loop
out
ljmp
int
xor
fildl
aam
call
imulb
xor
stc
shr
out
lret
cmp
cld
cmc
out
test
fstp
les
call
ret
fxch
std
in
call
ror
fadd
fcmovu
stc
hlt
addl
shll
ljmp
xor
ds
test
sub
xchg
call
sub
call
cmp
icebp
ss
adc
div
in
xlat
jmp
out
fucomi
fstl
ror
out
jmp
lret
lock
sub
ret
testb
out
call
loopne
lret
jmp
out
imul
cmp
int3
out
addl
std
ljmp
xor
clc
cmc
aaa
xor
cmp
adc
cmpb
stc
cmc
sbb
dec
loop
les
lock
cmp
xlat
repnz
ss
clc
rcr
test
fdivr
cld
in
in
fldl
aam
lds
call
int
in
hlt
stc
int3
int3
in
ret
loopne
cmc
fsub
fildl
rol
in
enter
fcmovne
ss
clc
inc
sbb
orb
test
in
rcl
cmp
xor
fdiv
div
ret
xchg
repz
lret
xor
call
xor
in
fnstcw
test
clc
cmc
stc
rcl
mov
fisttpl
shrb
call
divl
icebp
lret
sti
sti
rcl
fucom
mov
sti
nop
lock
int3
shl
cmc
lret
leave
cmp
into
roll
loop
jmp
fimuls
hlt
clc
out
aaa
cmp
in
into
repz
cmp
hlt
call
cli
ljmp
jecxz
aad
lret
cmp
xor
repnz
ds
stc
lds
or
hlt
fmulp
shll
into
fscale
cmp
repz
mov
lret
ljmp
int3
in
lret
cs
fnstenv
cmp
xchg
loope
lret
add
test
lock
xor
repnz
lock
aad
fstp
fsub
rcl
call
in
or
mov
test
repz
stc
aas
fcmovne
iret
test
lret
loope
cli
jmp
lock
cmp
in
stc
xor
xor
loopne
aaa
out
loope
out
cli
fucom
mov
repz
sub
fcmove
cmp
out
ffree
out
out
cld
out
aam
clc
test
out
out
ljmp
enter
aad
sarb
cmp
loopne
xlat
test
mov
out
int3
lock
fdecstp
cmp
cmc
into
leave
rcr
dec
and
xlat
aas
in
faddl
int
iret
out
xchg
enter
out
lret
out
shl
rcr
in
ret
cmp
mov
repz
imul
rcl
call
cmp
in
adc
mov
xchg
mov
clc
fimuls
repnz
shl
cmp
shl
in
fstp
cmp
leave
orl
xchg
cli
cli
icebp
int
out
rcr
xlat
repz
test
repz
ljmp
addb
clc
in
std
xor
fxch
fcmovu
hlt
in
aas
icebp
div
fld
shl
iret
mov
ret
int3
bnd
jmp
aam
xor
jmp
inc
clc
pushl
call
test
je
leave
ret
push
mov
sub
adcl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
aad
xlat
int3
ret
sahf
in
cmp
or
jl
cmp
not
out
ret
fisttpl
xchg
cld
in
loop
shl
mov
fsub
clc
lret
filds
xchg
jmp
xchg
loope
jmp
jmp
fstp
out
xor
stc
xor
cli
shl
in
sub
lea
in
jecxz
int
jmp
out
idivb
cld
ds
xchg
xor
ljmp
mov
fldcw
iret
fdivr
call
shl
cld
ret
xchg
loope
lret
jecxz
shr
aam
cmp
shl
sti
cmc
ror
shr
cmp
fmull
mov
mov
cmp
fidivrs
rcl
in
sti
test
ljmp
ret
in
lret
loope
xor
aam
not
fdiv
jecxz
stc
les
clc
enter
int3
jmp
cmp
xor
out
out
roll
test
test
xlat
fists
iret
xor
ret
lret
not
aas
jmp
fcmovnb
std
xchg
jmp
int3
mov
xchg
leave
lret
in
imul
out
loop
cli
in
fdivp
jecxz
ret
out
cmc
jmp
ret
sti
jmp
jecxz
hlt
rol
in
int
out
enter
rcl
sar
in
hlt
xor
jmp
fsubr
adcl
xlat
out
fcomp
std
fidivrl
rcl
xor
jmp
and
ljmp
int3
xor
jecxz
idiv
rcl
in
flds
jecxz
xlat
jmp
loope
in
jmp
repnz
in
aam
rcl
jecxz,pt
cmp
stc
xchg
and
xlat
fdivrp
test
clc
repz
ret
xor
xor
cmp
sti
cmp
ror
inc
sar
xlat
sub
and
repz
repnz
cmc
fucomi
cmc
repnz
cmp
fcmovu
in
fndisi(8087
enter
int3
xchg
jmp
lock
fcomi
sub
int3
rcl
out
idivb
addb
aad
sti
mov
orl
loop
fcmovnu
repnz
std
stc
aam
shr
repnz
fimull
or
shrl
lret
cmc
cmp
sti
sti
ror
repz
or
rcr
addb
lret
iret
call
clc
xor
aam
call
sub
int
int
mov
ss
shl
out
jmp
adc
aad
shr
iret
cmp
mov
mov
cs
into
out
fidivrl
ds
aad
fyl2x
sti
aam
cmc
stc
in
out
in
ficoml
loop
aad
fdiv
loope
int
hlt
sti
rolb
ret
iret
out
int
loopne
xchg
enter
fidivl
sti
cmp
shl
cmp
loop
lock
cli
loop
sti
in
stc
xor
call
int3
aad
ret
addl
test
fdiv
or
xor
int3
call
xlat
fdiv
in
push
std
fcomip
test
aad
mov
fucomp
loop
test
cmc
ret
fldt
fcmovnu
xlat
imul
cmp
sarl
icebp
jecxz
hlt
jmp
int3
mov
into
repz
aaa
in
aaa
sti
out
lock
shl
xchg
cmp
test
addl
shr
fmulp
cmp
test
adc
mov
jecxz
jmp
xor
loopne
in
enter
stc
fucomi
sarb
cli
xchg
xrelease
lret
out
xchg
lret
rcl
stc
out
cmp
jecxz
test
cmp
out
ret
mov
jmp
sub
aam
cmp
in
lock
imul
cmpl
sar
enter
rcr
ljmp
enter
enter
fstp
pushl
cmp
shl
loopne
fsin
dec
mov
in
out
cmc
shr
std
ror
ds
adc
sti
sti
aam
repnz
in
fildl
in
out
iret
xor
int
shr
loope
cli
sar
sub
mov
cli
in
in
icebp
xchg
jmp
lock
in
iret
sar
cli
aam
ret
leave
mov
xchg
sub
int
aam
call
into
repz
add
mov
in
daa
test
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
lea
adcl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
jmp
ror
fcmovb
rcr
fs
lods
mov
fmull
cmpsb
add
out
orl
jecxz
lret
dec
fsub
ret
out
test
ljmp
std
int
ss
jmp
fcom
into
fnstsw
loopne
aas
fdivrp
in
in
jmp
in
in
xchg
in
nop
int
xor
jecxz
hlt
lock
in
xor
shl
adc
ret
les
into
in
loopne
out
out
call
in
aam
enter
rcr
aas
std
shl
shl
loop
clc
int3
test
xor
out
rol
sub
loopne
cmp
test
in
hlt
loope
xchg
shl
stc
shr
loop
repnz
in
rcr
clc
loopne
xlat
hlt
cmp
jmp
in
and
iret
cmc
int3
xchg
aaa
int3
test
out
ss
ror
iret
cmp
push
mov
loop
mov
xor
out
xor
out
int
loopne
repnz
jmp
neg
mov
shl
cmp
into
cmp
enter
out
cmp
fcomp
in
cli
in
std
iret
repz
xor
jmp
cmp
iret
idiv
jecxz
shl
mul
cli
ret
test
fmul
mov
mov
jecxz
xor
enter
int3
int3
fcmovnb
stc
jecxz
repnz
std
xchg
in
int
fndisi(8087
into
loope
jmp
call
aad
ds
addb
ljmp
iret
les
int3
xor
aaa
jmp
lret
sarl
fcmovbe
stc
cmp
enter
mov
lock
fsubrp
shr
sub
aaa
shl
cmp
divl
fdivrs
out
out
not
cld
sti
ret
enter
std
jmp
repnz
enter
xor
xor
aas
adc
rcr
in
mov
mov
jecxz
int
out
xchg
int
iret
ljmp
cmp
adc
mov
mov
out
loope
faddp
call
fstp
sti
fsub
icebp
sbb
jmp
loopne
addl
shr
ret
out
cmp
rcl
sti
hlt
cmp
out
rcl
ret
iret
mov
ror
sub
call
shlb
adc
rcl
jmp
and
test
in
xchg
in
shr
xor
repz
fcmove
aad
xor
orl
int
fcmovnu
icebp
mov
in
cmc
ret
jmp
cmp
sub
xchg
ret
xchg
ret
loopne
cli
loope
roll
xor
icebp
lret
into
cmp
cmp
cmp
loop
cmp
mov
rcr
jmp
clc
sub
cld
rcr
icebp
enter
out
shr
xlat
in
xchg
clc
in
out
mov
out
shlb
fnop
aad
xor
iret
iret
sti
ds
out
cmc
xchg
loop
loop
jmp
mov
enter
xor
leave
hlt
leave
rcr
aad
call
fnclex
fiaddl
out
xchg
jmp
cmp
int
xor
aas
test
cld
push
cmc
fisttps
decb
cs
jecxz
lret
sti
lock
loopne
clc
rcl
out
loope
out
call
icebp
out
cmp
int3
lret
shl
testb
enter
call
aam
in
cli
stc
cld
out
enter
int
loop
in
jmp
lret
clc
adcb
out
shlb
aad
cmpb
clc
fisttpl
call
lret
sub
out
lock
test
iret
lock
in
repz
mov
ds
in
fucomi
xchg
test
xor
ljmp
iret
lret
shr
aaa
ds
in
shr
xchg
in
sti
ljmp
aad
mov
cli
fucomp
and
xlat
aam
fsub
cli
loop
loopne
ror
into
jmp
cmp
fptan
lock
loopne
xor
roll
clc
lret
ljmp
stc
shl
fucomi
ljmp
out
test
dec
out
xchg
mov
shl
rcl
hlt
jmp
mul
int3
leave
cmp
in
aad
rcl
rcl
test
fmuls
xchg
lock
out
in
repnz
loopne
fsub
test
cld
in
in
sti
jmp
or
or
xor
push
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
orl
jmp
rol
into
into
fnstcw
imul
mov
cmpsb
add
lock
sub
cmp
in
cmp
in
cli
shl
cmp
mov
loopne
fucomip
into
mov
movl
test
jecxz
div
hlt
idiv
enter
xchg
rcll
repnz
stc
shr
lock
cmp
rcl
add
fadd
out
addl
jmp
rolb
loop
frndint
fdivrl
mov
into
sbb
ret
rcl
aad
xor
jecxz
stc
fdivr
cmp
hlt
fsubr
addl
xchg
lret
jecxz
leave
iret
cld
fdecstp
repnz
aaa
cli
rolb
testb
in
aad
loope
aad
cmp
iret
hlt
stc
lock
lret
iret
out
call
cli
icebp
lea
jmp
cmc
in
cmc
jmp
shlb
cmp
cmp
cmp
fld
xor
fsub
ljmp
nop
xlat
sub
sarb
aam
neg
shl
fscale
int3
aam
xlat
ror
call
fsubrp
mov
shlb
loop
clc
in
out
out
aas
cli
or
loope
fsub
loope
test
jmp
fsubp
fmul
cmc
rol
xor
iret
aaa
fistpll
in
ds
fscale
cld
repz
testb
xchg
loop
aaa
stc
aaa
cmp
loope
lock
out
cmp
shl
aam
jmp
test
cld
int3
cs
xor
xor
in
repnz
lret
fndisi(8087
in
xchg
loopne
call
incl
vcvtpd2dq
jmp
hlt
fcmovne
sarl
decb
test
out
and
sub
les
stc
cld
aam
loope
in
shl
std
test
lret
in
lret
xchg
sarb
shl
ljmp
in
int
cmp
icebp
loope
cld
mov
in
out
out
lock
out
divb
cmp
out
stc
int
iret
faddl
mov
in
testb
div
xlat
xor
fxch
ljmp
cmp
fsub
jmp
hlt
decb
xchg
in
shr
out
cmpb
aas
shl
in
ljmp
rcl
fdivs
leave
cld
icebp
cmp
call
loopne
out
hlt
sti
jmp
in
xchg
loopne
hlt
hlt
icebp
aaa
lret
icebp
cmc
fmulp
xor
ret
xlat
rorb
out
enter
shr
enter
shl
fnstsw
rcr
xorl
fdivp
cmp
leave
cli
mov
test
das
into
repz
fsubr
lret
int3
sar
addl
std
leave
int3
test
xchg
icebp
lock
into
jmp
stc
xlat
repnz
sar
test
mov
ljmp
sub
lret
rcr
repnz
test
lock
stc
iret
sub
sti
mov
test
xchg
out
mov
sub
jmp
in
out
hlt
icebp
cmc
stc
stc
addb
mov
div
fucomp
ljmp
in
fdivr
std
sti
jmp
out
clc
icebp
loop
fdivr
lds
ljmp
fldl
xor
aaa
lret
ss
stc
loope
ret
shl
movl
iret
mov
xlat
fsubr
icebp
test
ljmp
rcr
cli
jmp
fsubr
out
mov
in
mov
fxch
shl
xbegin
or
loop,pt
cld
sti
not
ret
test
loope
call
aaa
lret
in
in
cmp
fdiv
in
aas
sti
ret
cmp
test
cli
test
xchg
int
int3
out
fld
lock
stc
into
rolb
shl
mov
int3
in
jmp
xchg
mov
xor
xor
int3
cmc
in
test
out
cld
cmc
cmc
in
mov
xchg
sti
roll
shl
enter
aaa
ds
cmp
roll
stc
fdiv
out
loopne
repnz
xchg
jecxz
ror
test
aas
shr
or
rolb
div
mov
shl
jmp
iret
repz
out
inc
addl
lret
iret
stc
icebp
iret
test
jecxz
aaa
stc
repz
int
fsin
std
clc
out
sub
clc
lock
test
orb
repnz
sub
sub
ss
hlt
jmp
lea
mov
mov
xor
push
sbbl
push
mov
xorl
jmp
ror
rol
aad
ror
fstpt
jno
and
insl
jmp
cmpsb
add
xor
ror
cli
fmul
cmc
mov
call
mov
call
lret
aad
std
lret
ljmp
aad
addl
fsubrp
mov
fld
cmp
int3
iret
xor
stc
in
in
ret
in
jmp
in
fcmovb
test
shl
call
xor
icebp
out
sar
repz
rcr
fcmovne
les
test
int3
ret
xlat
xor
cli
cmp
fistpll
cmp
loopne
repnz
fiaddl
int3
xchg
shll
shl
in
cmp
fdivrs
xor
cmp
cmp
aam
in
in
lret
fcmovnu
test
jecxz
loopne
ret
int
hlt
repz
sarl
int3
loopne
aad
rol
cld
loop
xor
jmp
xchg
shl
shl
icebp
sar
in
clc
into
aas
iret
faddl
cmp
cmp
ret
in
xlat
in
ljmp
shlb
aaa
clc
shlb
std
out
lock
rcr
int3
xchg
into
enter
aam
fxch
enter
testl
fucom
ret
in
repz
ror
xor
ret
jmp
idivl
out
cmp
aad
cld
test
loopne
rcr
xchg
int3
xchg
call
std
clc
in
aaa
int3
ss
sti
sar
rorl
in
out
in
loope
call
aad
loopne
cmp
stc
stc
ffree
std
addl
fldl2e
int
fdivr
roll
fsubr
test
idiv
out
mov
lock
in
in
icebp
jmp
lock
aaa
xor
cmpb
idiv
jecxz
jecxz
fmul
std
aam
sub
mov
int
lret
lret
ds
testl
xchg
cld
icebp
repz
lret
xor
cli
jmp
repz
cmp
cmp
test
out
mov
out
aas
jmp
cmp
rcr
std
xchg
fimull
xchg
fmuls
stc
ret
out
out
lock
cli
lock
cmp
ds
in
addl
xchg
rcl
xor
lret
repnz
fcmovu
lret
xlat
cmp
test
repz
mul
ret
aam
out
jecxz
out
icebp
nop
int
out
out
stc
hlt
xor
cmc
repz
ror
ds
mov
mov
fucomip
xchg
ds
int3
fcom
repnz
lock
stc
shl
cmp
flds
fildl
imulb
jmp
xor
iret
fstpt
loop
fldl
out
test
mov
int
in
out
ror
in
fstp
repz
roll
fsub
xchg
ret
in
loop
ljmp
int3
int
loopne
ljmp
rcr
ds
lock
out
loopne
fmul
mov
out
sar
out
int
in
neg
in
cmc
call
call
xbegin
jmp
mov
mov
rcl
stc
cs
cmp
div
lret
repnz
clc
leave
call
int3
loop
loopne
xor
fdiv
sti
aad
sarl
in
out
fadds
loop
test
cs
cmp
cmp
aad
cmc
in
aaa
fdiv
repnz
ffreep
mov
testl
xchg
in
loope
in
loop
lock
lock
shl
fnstsw
lret
loope
lret
das
cs
aaa
rcl
in
div
aas
iret
into
iret
test
ret
mov
lock
lret
clc
lock
cmp
cli
fcmovnbe
fsubp
mov
test
fcomip
orb
leave
repz
out
cmp
sbb
hlt
fsubp
sbb
les
in
ss
loopne
repnz
xor
shl
std
roll
mov
incl
std
jmp
loope
xor
shl
std
imul
xlat
fxch
rolb
fucomip
loope
int
stc
out
loopne
int3
icebp
jmp
xlat
das
lock
hlt
lock
int3
ret
adc
aad
xlat
shr
cli
fdivrp
loope
in
and
loop
out
lret
rcl
cmp
clc
lret
ror
test
fadds
sti
xor
int
rorl
in
aam
ljmp
cmp
in
faddl
inc
in
mov
mov
xor
mov
jmp
leave
mov
lret
mov
add
dec
ret
mov
jg
cmpsb
add
test
in
out
std
iret
subb
iret
jmp
clc
ror
stc
fiaddl
stc
repnz
lret
repz
aam
aam
ss
cmc
repz
mul
xor
aad
out
test
leave
clc
sub
mov
out
shr
xor
fnop
call
out
lock
icebp
xchg
xchg
hlt
test
and
in
in
in
out
cmp
fnstcw
cmp
in
loop
sti
loope
fmul
incl
int3
in
sar
shrl
stc
cli
ljmp
cmp
ror
out
loop
test
mov
into
ss
hlt
out
jmp
cmp
shl
out
out
mov
mov
sub
in
in
cmp
into
in
fdivp
or
mov
xchg
lock
enter
repnz
repnz
leave
xor
fsubr
int3
rcr
cmc
repnz
aam
cld
jmp
lock
xlat
shr
in
xor
icebp
cld
div
clc
int
lock
in
fldl2e
cld
ret
movl
cmc
xor
jmp
enter
aad
cli
xchg
mov
jecxz
in
loopne
int
mov
fucomp
xor
icebp
sarl
jecxz
ds
mov
loope
incb
out
call
enter
cmp
testb
jmp
shl
out
imul
clc
in
shlb
xor
stc
shl
iret
neg
fdivp
cmc
les
out
shrb
int
cli
rcr
fsubrp
into
in
iret
shl
not
shl
mov
test
loopne
iret
mov
leave
cs
rol
xlat
xor
out
loope
sti
sti
sti
iret
clc
fnstsw
cld
fld
in
out
icebp
leave
loop
xchg
int
jecxz
enter
cs
int3
ss
sarb
inc
stc
ret
aad
fdivr
out
xchg
fdiv
xor
ror
enter
iret
xor
in
test
xchg
fsubrp
jecxz
fcomp
enter
rcr
in
enter
xor
out
aad
into
out
rcr
stc
clc
aam
fcmovnb
ret
fmul
test
repnz
xor
fstpt
idivl
repz
in
bnd
loopne
clc
and
orb
in
out
in
rcr
rcr
cmp
jecxz
rcl
jmp
and
icebp
fmul
cmc
hlt
int3
xor
xor
lret
in
cmp
rol
rcr
iret
shl
testl
fsubp
cmc
in
xor
into
aaa
lret
cmc
idiv
cmp
ds
ret
aad
hlt
orl
out
jecxz
aam
cmp
xor
adc
in
fdivr
aas
xchg
dec
loop
int3
int3
out
nop
int3
loop
lret
divb
jmp
int
aam
fcom
icebp
loope
test
fdivr
out
mov
fcmovne
in
call
shl
xor
jmp
ljmp
fcmovnbe
lret
cli
out
incl
xor
jmp
int3
shr
rol
div
leave
test
xchg
mov
xchg
sub
out
not
call
fcos
aad
vshufps
lret
repnz
div
shl
int3
aas
ds
fcomi
sbb
loope
jecxz
cmp
lret
aad
int3
sub
cld
cmp
out
out
ret
neg
shl
fcmovb
enter
lock
loopne
fsubrl
aaa
ljmp
int
cmc
cmp
ret
loope
aam
out
fadd
mov
mov
cld
lds
call
in
sti
cmp
aam
roll
fisttps
jecxz
cld
rcl
loopne
int3
int3
cmp
lock
xlat
rcl
inc
test
ljmp
fpatan
xor
into
ss
out
cmp
loopne
cmc
xchg
aad
in
lret
popl
lret
in
ljmp
xrelease
loop
ds
out
clc
mov
loop
ljmp
lret
enter
fidivrs
cmp
faddp
cmp
clc
iret
int3
xchg
ljmp
ljmp
ror
idiv
sar
mul
loop
ret
ljmp
xor
loope
ret
cmp
icebp
into
adc
sar
sti
adc
call
lock
fldl2t
ret
add
leave
rcl
fst
leave
pop
push
ljmp
ficompl
jl
lea
lret
ljmp
loop
out
fdivr
rorb
loopne
int
mov
jecxz
shlb
cmp
cli
idiv
leave
aam
fisttpl
sti
test
add
vucomisd
flds
test
sub
jmp
sti
jmp
out
loop
lock
xor
fcomi
ss
ds
aas
fildl
repnz
in
adcb
shl
jmp
cmp
roll
adc
lds
call
sti
les
ret
xor
out
ds
fdivrp
cmc
addb
incb
xchg
cmc
fidivs
jmp
aad
rcr
shl
fcmovnb
ret
loop
ret
jecxz
addl
ds
enter
call
loopne
aaa
rolb
loop
cld
loop
fstl
ljmp
repz
lret
xor
sti
in
clc
fmuls
rorl
bnd
fidivrl
cmp
loope
sar
in
jmp
sbb
int
test
aaa
in
out
vpsubd
rcl
into
int3
div
in
jecxz
loop
fdivrp
jmp
in
in
iret
xchg
loope
jmp
xor
cmp
aad
call
loop
fucomp
in
rcl
lret
mov
out
iret
int
loope
sub
cmp
les
fst
imul
rcr
cmp
repnz
aad
fst
out
in
jmp
cmp
repnz
xlat
cmp
xchg
cmp
in
std
mov
loope
enter
call
jmp
xor
sti
lock
ret
fiaddl
iret
adc
out
int3
shlb
in
leave
fdivr
clc
out
fdivr
loop
clc
aad
faddp
call
stc
std
mov
imul
aam
xor
ror
shl
fiaddl
add
decl
fdiv
iret
ljmp
not
cmp
roll
xlat
fucomi
mov
loope
in
std
mov
out
mul
sti
lret
shl
aad
loope
cld
in
ljmp
sti
lds
hlt
aad
cmp
out
aam
cmp
rolb
mov
loop
xor
int3
lret
repz
in
in
fsubr
repz
imul
ds
out
rcr
cmc
in
in
iret
out
rorl
stc
cmc
xor
ss
or
loope
fstp
repz
xchg
test
out
rcl
ds
cmp
out
pushl
stc
cld
incb
ds
in
mov
rolb
sub
xor
out
fcmovbe
cmp
cmp
fldl
fsubp
in
xor
adcl
xor
out
cld
in
fldl2t
loopne
xor
loopne
mov
xor
cmp
leave
in
xlat
cmp
lock
cmp
ret
aad
cld
out
fadd
out
mov
sub
fstp
cld
mov
aad
jmp
icebp
lret
fdivrp
clc
sti
out
addl
test
mov
loop
repnz
stc
int3
cmp
in
fcom
leave
incl
cli
icebp
mov
jmp
ror
cld
loope
out
frstpm(287
cld
rol
decb
out
mov
sti
mov
cld
lea
sti
xor
rcl
aam
cld
in
shl
fadd
fcomi
cmp
mov
icebp
jmp
orl
xlat
shll
lds
repnz
ret
sarb
sar
mov
icebp
iret
nop
loop
xchg
ljmp
dec
in
sti
xchg
movl
lret
xor
into
lret
cmc
cmp
out
xor
cld
hlt
jecxz
cli
rcl
cli
faddl
in
fucomp
shr
mov
jmp
sti
lock
xor
sarb
sti
xlat
testb
mov
ficoms
icebp
leave
xor
fnsave
loopne
testb
mov
cld
mov
jecxz
rol
aam
shl
ror
jmp
fsubp
sti
loopne
xor
in
jmp
int
loop
aaa
sub
stc
clc
lock
jmp
xlat
fcomip
xchg
orb
xchg
rcl
loope
jmp
movb
jmp
leave
sarl
rcl
int
mov
push
cmp
jl
add
cli
xor
cmp
rcr
fimull
int3
nop
xchg
int
xor
out
out
cmp
cmp
lock
cmp
test
loope
ror
ds
aad
stc
shl
fcmovbe
aam
sar
cmp
iret
and
sti
cli
hlt
fdivr
test
jmp
cld
std
int3
fbstp
cs
xlat
in
ror
out
addl
jmp
jecxz
mov
out
std
lret
ror
xor
fmul
ror
out
aas
fbstp
sub
leave
fst
mul
xlat
imul
decb
loop
out
lret
cli
rcl
out
cmp
idivl
cmp
or
mov
lret
ret
icebp
shl
cmp
enter
cmp
in
sti
and
shl
enter
cmc
decl
in
fnstcw
xlat
leave
out
or
aam
lock
mov
ljmp
test
xor
in
shr
cli
cmp
xchg
repnz
neg
fmull
shl
jecxz
xor
in
out
hlt
ljmp
int
fnstcw
test
test
in
cld
test
loope
nop
cmc
xchg
iret
int
repz
lret
icebp
sti
stc
mov
out
cmp
lret
call
lret
xor
aam
jmp
dec
sar
aaa
in
roll
xchg
xchg
into
ljmp
ljmp
orl
out
int
repnz
mov
jmp
out
int
hlt
xor
ds
fdivr
int
sti
sti
repnz
fimuls
hlt
ret
out
out
imul
repnz
rcr
test
ret
les
rcr
ret
xor
jmp
ss
aad
xchg
and
mul
jecxz
in
out
ljmp
cmp
cmp
fcmovnu
lret
cld
repnz
loopne
lret
out
int
xor
xchg
shrb
in
iret
ret
fnsave
in
xlat
cmp
rol
out
repnz
loopne
cmp
lret
in
les
out
rcl
loopne
testb
test
aam
rol
cli
icebp
into
fdiv
int
idiv
icebp
iret
into
leave
dec
in
std
in
jmp
ror
aas
mov
jmp
icebp
enter
fcomip
out
loop
rorl
hlt
fcoml
cmc
mov
lret
sarl
shl
in
out
fmul
fsubrp
hlt
aam
aad
clc
lret
in
loop
repz
shl
aaa
loopne
xor
fdivr
cmp
call
loop
xor
call
loop
test
ret
aad
cmc
loopne
lock
out
jmp
mov
jmp
loopne
int
shl
in
aad
out
cmp
add
loopne
test
loope
orb
aad
rcl
rcr
std
fcmovu
xlat
out
mul
fsub
jecxz
fsubp
out
jecxz
in
loope
sar
mov
out
sti
xor
enter
and
loop
sar
ljmp
int
hlt
int
lret
hlt
repnz
stc
fadds
shr
fmulp
cld
fdivp
int
jmp
cmc
out
cs
lret
clc
aad
std
out
clc
int
cmc
out
xchg
in
aas
shll
xor
ror
cmc
jmp
cmp
in
cmpb
jmp
cli
stc
fadds
rcl
xchg
stc
ret
lret
cmp
cld
aaa
repz
cmp
cmp
lock
call
ffree
loop
mov
in
fstl
aaa
hlt
lret
sar
cmp
in
hlt
fst
test
mov
mov
icebp
int
in
rol
leave
mov
jmp
ljmp
fidivrs
cmp
loopne
stc
in
fmulp
loopne
xchg
out
leave
xlat
clc
ds
repnz
jmp
lret
int
xchg
rorb
xor
in
in
in
aam
rol
into
xchg
cld
fisttpll
xchg
in
in
repnz
shrb
in
lock
aam
ljmp
ret
test
fsubp
fcmovu
lds
das
xlat
jmp
in
jmp
test
aas
icebp
and
lret
out
out
xchg
xchg
iret
neg
clc
aam
cmc
out
fsubr
repnz
iret
xlat
repz
repz
movl
cmp
jmp
mov
leave
ret
int
leave
lret
and
scas
movsl
jg
cmpsb
add
mov
lea
xchg
jmp
iret
hlt
repz
lock
out
repnz
cmc
in
out
fadd
roll
stc
loopne
aam
cs
jmp
ds
cli
clc
jmp
mov
xorb
fld
int3
out
int
in
dec
cmp
ffree
mov
out
xchg
mov
mov
jmp
lock
in
stc
in
leave
aaa
aad
stc
aam
cmp
aad
sar
out
hlt
stc
out
mov
loopne
sub
fcmovbe
lret
loopne
loopne
fcomip
rcr
cld
loop
fucomp
fmul
ret
out
out
out
shr
stc
enter
addl
lock
loopne
sbb
nop
enter
ljmp
stc
hlt
aam
shll
rolb
jmp
out
lret
lret
adcl
aam
repnz
shr
lret
xor
std
std
fcmove
out
aas
int
fcmovnu
out
adcb
shr
cmp
or
loope
jmp
mov
xchg
mov
into
call
sarb
fadds
repnz
leave
ds
leave
out
jecxz
fucom
jmp
fbstp
shlb
leave
lret
cld
fdiv
in
cmpl
hlt
filds
or
repnz
ret
repz
fstp
aas
jmp
hlt
fsub
sti
fcmovnbe
cmp
clc
loopne
shl
ror
aad
ss
in
ds
rcl
fdiv
xlat
loope
les
cld
lock
sarl
out
in
test
aas
aad
sar
repz
orl
xlat
enter
call
fiaddl
cmc
rol
orl
repnz
fsubr
fdivr
in
in
ds
rcl
aam
out
testl
in
shl
ror
call
lret
in
rcl
neg
fcmovnu
fnstsw
shl
rcr
mov
leave
std
incb
ljmp
int
shl
sar
lock
sar
fisttpll
out
sti
lret
icebp
repz
loop
rol
jmp
lret
shl
shl
fcmovbe
sti
xchg
in
std
call
xor
jmp
not
sar
int
adc
cmc
lea
lret
out
in
fcmovne
aad
in
rcl
in
stc
loop
inc
xchg
in
mov
shr
nop
mov
shr
ljmp
addb
cld
xlat
jmp
mov
lret
out
sar
sti
repnz
int
aas
xlat
fucom
into
fcom
leave
fcmovnu
out
test
loopne
lock
lret
sub
jecxz
shr
cld
enter
cmp
cmpb
mov
fimuls
imul
aad
xor
in
lock
cmp
aas
cmp
std
idiv
ret
out
iret
addb
aad
repnz
sti
xlat
ljmp
decl
mov
in
out
loop
xor
cmp
divl
cmp
int3
cmp
out
rcl
fmul
lds
shr
xchg
sub
ret
xor
lret
loopne
shl
loop
faddp
test
stc
addb
lea
repz
aam
out
aam
fld
out
clc
addb
mul
iret
lock
adc
int3
cmp
xor
in
lock
out
test
fld
repnz
in
jmp
iret
xor
xlat
jmp
icebp
ss
roll
int3
mov
mov
shl
in
xor
lret
fincstp
cmp
ffreep
loope
mul
out
faddl
lret
xchg
jecxz
dec
jmp
sti
cmc
lret
jmp
cmpl
aam
ret
loop
fucomi
lret
test
repnz
aad
rol
ds
ds
out
jmp
icebp
xchg
mov
cs
int3
loop
fcmovnbe
cmp
icebp
aas
cli
fstp
clc
aad
call
enter
lret
test
cli
cmp
ss
loopne
into
out
out
into
fcomip
inc
or
mov
in
icebp
test
ljmp
ss
shl
cmp
idiv
ljmp
xchg
test
push
add
movl
jmp
sarl
rcl
rcl
rol
ret
bound
test
jl
add
repnz
in
cmc
in
call
cld
shl
jmp
fsincos
sti
stc
into
adcl
iret
xor
jmp
int3
lret
iret
aaa
testb
sti
int3
in
loope
fcmovne
mov
divl
aam
lret
call
aam
jecxz
loop
ret
incb
loopne
out
mov
repz
aad
neg
xor
fabs
ljmp
sti
xchg
mov
in
rorb
aad
rcl
aaa
out
cmc
clc
cmp
in
fdiv
std
cld
int
into
ljmp
xor
stc
fpatan
out
enter
loope
cmp
std
leave
in
fimull
out
cld
repz
out
out
shl
cmp
repnz
rol
repnz
std
out
test
mov
repnz
lret
sti
repz
cmp
cmp
std
cmp
fxch
xchg
neg
cmp
std
loop
out
mov
repnz
iret
out
int3
int
lret
cld
loopne
into
repz
adc
fmuls
lret
mov
in
xor
out
out
cmp
and
xchg
mov
in
clc
mov
jmp
loop
pushl
aam
in
aam
rcl
loope
ret
xor
filds
loopne
repnz
aaa
lock
fdivrl
shl
clc
fnclex
fcomp
sti
ret
xchg
addl
shl
aam
leave
sar
fadds
out
cmp
xchg
ljmp
stc
out
lret
cli
hlt
fsubrp
aam
xlat
out
stc
xchg
loope
cli
ljmp
out
aaa
les
ss
lret
aam
rol
fimull
in
into
xchg
loop
icebp
out
shl
aad
out
std
cmp
jmp
iret
lea
repnz
aad
lock
cmp
lret
cmp
sarb
out
xlat
shl
call
lock
jmp
in
repnz
int
cli
out
in
cmp
filds
ret
test
into
ljmp
loop
sub
xor
shl
loope
cmc
loopne
testl
fisttps
or
in
int3
lret
xor
repnz
repz
in
inc
in
cli
fadd
xchg
loope
cli
lret
test
xor
call
in
cmp
jecxz
fucomip
aad
sar
fucomp
out
call
out
repz
leave
out
call
repnz
aam
orb
int
aad
out
aas
aam
in
fcom
iret
out
hlt
in
fisttps
loop
jmp
xor
in
xor
fucomp
clc
shl
dec
and
loope
lret
ljmp
xor
sbb
aad
mul
aam
in
test
xor
int3
fidivrl
leave
sarl
in
clc
sti
xchg
rol
sar
loop
loop
lret
ret
incb
shll
ljmp
stc
fsubp
cmp
fcmovnbe
roll
lret
mov
call
ljmp
cli
in
repz
cli
xlat
fdivr
into
iret
rol
aam
lret
in
enter
lret
jmp
loop
xor
in
sar
fcomi
ljmp
in
lock
cmp
fmulp
jecxz
lret
xchg
icebp
dec
loope
hlt
jmp
int3
ljmp
fdivrp
xor
loop
lret
std
and
cli
dec
xchg
shr
in
shl
into
fstp
cli
xor
call
shl
adc
fdivr
add
fcmovnbe
xchg
test
cmc
leave
cmp
xor
xlat
int
lret
fdivrs
addl
repnz
rol
clc
lret
test
leave
out
repz
leave
int3
les
in
lock
sub
cmp
fdiv
aam
aam
ljmp
addl
fmul
hlt
in
enter
ds
repnz
mov
les
out
in
xchg
sub
lock
lret
fadd
jmp
cmp
testb
shl
jmp
mov
mov
lret
out
lret
in
xor
bnd
loope
rol
neg
loopne
hlt
faddl
repz
loop
repnz
aad
loop
cs
cmp
out
fsubr
test
testl
fdivrp
in
rolb
shl
lea
mov
mov
jmp
sarl
aad
aad
aad
sbb
or
out
ljmp
cmpsb
add
icebp
aam
loope
cmp
fmull
in
fiadds
loopne
in
repnz
shr
neg
aam
xchg
faddl
mov
mov
hlt
vpsubsb
cmp
cmp
fucom
clc
cld
lret
mov
fisttpll
in
lret
enter
aaa
in
idiv
in
sti
jecxz
out
fstp
fcomi
mov
mov
shl
cmp
rcr
sarl
cmc
in
jmp
clc
imul
into
aam
cmp
in
xlat
loope
out
loopne
out
int3
lret
ret
sar
cld
xor
int
cmc
fiadds
rcr
stc
fnstsw
in
faddl
ret
into
iret
in
fdiv
sarb
cmc
int3
cmp
rcr
xchg
sub
loop
xchg
rorl
xor
ss
cmp
loope
out
fdivrl
sarl
mov
loop
iret
into
xchg
orb
shlb
neg
aas
clc
int
cmp
std
cmpb
jecxz
icebp
loopne
dec
xchg
in
xor
cli
sti
into
loop
rcr
fninit
test
xchg
dec
call
xor
ret
cmp
repz
cmp
jmp
std
idiv
xchg
ffree
stc
and
call
out
icebp
into
jmp
in
aaa
ljmp
fcomip
sar
jmp
mov
mov
cmc
lret
clc
in
das
rcr
fcmovnbe
idiv
ds
std
fsincos
test
mov
xor
cs
cld
ss
hlt
clc
into
cmpb
loope
loop
xchg
jmp
jmp
fucomip
ror
call
aaa
out
aad
cmp
cli
clc
ror
mov
cli
fiadds
not
cmc
int3
cld
fdivp
fistpll
ds
clc
cli
jecxz
cmp
in
xchg
decl
hlt
aam
das
cmp
icebp
ffree
cmc
fsub
mov
stc
decb
mov
out
aaa
out
iret
jmp
dec
sar
std
loop
cli
idiv
orb
mov
icebp
stc
aad
out
call
hlt
repnz
rcr
push
loop
ret
fldl
out
enter
cmp
in
rcl
notrack
loope
out
popl
lret
cmc
in
ss
in
cli
xor
repnz
out
std
testb
in
leave
mov
out
xchg
loop
cs
jecxz
call
sti
fadds
in
xlat
fucom
and
xchg
ret
out
fnstenv
clc
stc
aaa
stc
ret
aas
fdiv
cli
lock
jmp
ljmp
call
xor
lds
sar
xor
xlat
idiv
shl
out
ret
and
aad
xor
call
not
out
loop,pn
aam
enter
cmc
int3
cld
shl
sbb
xchg
xchg
leave
sar
xchg
aad
out
jecxz
repnz
in
icebp
testl
fucom
movb
ret
test
enter
repz
adc
mov
fiaddl
jecxz
in
xor
sub
repnz
out
call
out
div
into
rcr
fsubp
faddp
test
out
fnstsw
in
out
loope
stc
aad
call
cmp
rcr
addb
lret
sti
mov
out
icebp
test
lock
cmp
cli
addl
sti
xchg
mov
in
rcl
stc
fcmovnb
ss
fcmovbe
rol
cmp
lock
xlat
loopne
ret
cld
into
lea
sub
stc
xor
shl
out
icebp
loope
shl
cmc
fcmovnu
jmp
mov
out
xchg
in
loop
int3
lock
std
stc
jmp
in
repnz
out
out
sub
jmp
in
sar
inc
in
std
cmc
repnz
lds
fdivp
faddp
int
test
out
sar
iret
sarb
cmp
xlat
rcl
fdivp
xchg
loope
rcr
mov
jecxz
into
jmp
xlat
int3
int3
lock
int
call
sarb
cli
loop
leave
test
clc
xchg
xchg
cmp
in
shr
cmp
aad
testl
xchg
repz
aam
xor
ljmp
in
aad
mov
imul
jmp
ret
fcmovnu
aad
inc
pop
inc
pop
insb
mov
jl
add
sarb
bnd
mov
jmp
into
aaa
lret
aaa
sarl
cmc
iret
stc
adc
cld
fmulp
ljmp
into
rcl
shl
fcomi
cmp
xor
sar
in
fxtract
imul
ljmp
into
in
sub
cmp
xor
aaa
lret
iret
loop
fucom
cld
in
add
test
fldl
aad
ss
cld
in
fdivrs
std
out
fcmovne
fsqrt
cld
jmp
cld
xchg
not
int3
clc
repnz
cld
clc
out
cmp
mov
in
sbb
out
orl
lret
repz
fcmovne
cmc
aad
call
in
aas
leave
cld
lret
jmp
in
fbstp
les
out
int
dec
lret
rcr
idiv
loopne
sti
enter
into
call
cmc
loope
xor
in
aad
cmp
aad
test
std
icebp
ret
ror
fdivr
fsubp
in
std
in
test
fcomi
repnz
loope
int
fcomp
out
fdiv
out
sti
fsubrp
int
lret
fmul
xchg
int3
call
in
jmp
hlt
cmp
fadd
rcl
imul
leave
hlt
aam
jmp
test
xchg
aad
xor
xor
shl
in
cld
fdiv
loopne
icebp
cli
stc
shl
mov
out
out
loopne
in
mov
xchg
not
sub
sti
aaa
jmp
loope
fucomp
out
and
clc
enter
test
out
fucomp
fildll
aam
in
out
out
lock
testl
jecxz
in
stc
xchg
fbstp
jecxz
stc
into
out
rcr
cld
enter
ret
std
ds
cli
xchg
aam
decl
mov
loope
out
loop
fadd
hlt
lret
loopne
and
repz
in
stc
into
loopne
fldl
neg
xor
shr
rcl
fsubr
jecxz
ffreep
rcl
enter
mov
in
or
jmp
sarl
aaa
in
int
loop
shl
xchg
test
test
out
into
cmc
in
cld
leave
out
aas
cmpl
fucomi
rcl
leave
aam
in
xchg
xchg
in
out
int
shl
in
cmp
hlt
enter
ds
fprem1
mov
jmp
int
loope
loope
test
mul
aaa
aad
std
in
xor
loop
aas
repnz
fucom
ljmp
clc
lret
into
call
in
in
aad
lret
repnz
rol
xchg
icebp
loope
sti
xchg
xchg
fucom
xor
int3
xor
sti
into
in
in
in
std
ds
repz
sbb
fmul
sti
out
cmc
int
shrb
sub
xlat
in
ror
fsubrp
repnz
repnz
fdiv
hlt
hlt
enter
cli
icebp
or
out
das
jmp
in
and
hlt
jecxz
aas
loop
fcomip
leave
loopne
out
jmp
out
divl
cld
cmp
shl
sti
in
movl
hlt
fsubr
in
fnstenv
fidivrl
lock
mov
cld
fiaddl
and
out
aaa
enter
out
shl
and
roll
in
ror
int3
test
lret
aad
cmp
xor
filds
repnz
ds
movb
mov
xchg
xor
aaa
lock
ss
in
icebp
fucom
loopne
test
loop
fdivrl
mov
mov
into
aas
cs
rcl
hlt
icebp
xor
lret
hlt
cmp
jmp
les
xchg
fdivrl
loopne,pt
leave
xor
ror
ds
cmp
out
aad
cmc
ror
shr
int3
jmp
loopne
out
into
xor
out
out
rcl
clc
shl
int3
jmp
loope
cli
and
ret
cld
in
out
lret
ljmp
lret
xor
int
ljmp
cmc
fcmovb
fadd
in
ljmp
ds
mov
loopne
ljmp
xchg
jmp
out
mov
iret
lock
in
xor
repz
in
sti
repnz
lret
mov
in
fdivrp
mov
mul
jecxz
cmc
int
stc
fnstcw
loopne
xlat
cmp
repz
in
fdivr
fldl
jecxz
out
ljmp
cli
cmp
loopne
idiv
roll
adc
add
rorb
insb
push
add
mov
orl
mov
xor
jmp
xlat
int
ret
ljmp
jg
cmpsb
add
lret
xchg
out
repz
xor
jmp
aad
fcmovu
jecxz
xchg
call
cli
test
test
shrl
divb
lret
in
neg
f2xm1
cmp
ret
cli
std
cld
mov
int3
shl
mov
in
int
in
sti
ss
cmp
out
fadds
loop
dec
out
nop
xchg
mov
xor
jmp
ffree
xchg
loopne
cli
mov
addb
ror
rcl
int
addb
and
mov
out
decb
jmp
lret
in
hlt
out
out
cmp
loop
icebp
cmp
cli
test
xchg
xchg
mov
xchg
in
std
cmp
in
fdivr
repz
iret
out
loope
mov
fxch
orb
in
aam
fmul
ror
out
enter
neg
std
icebp
out
fiaddl
test
mov
lret
sti
call
shl
xlat
out
rorb
in
lret
iret
jecxz
out
rcl
clc
aaa
xor
out
sarl
fiadds
addl
ljmp
xlat
idivl
sar
loopne,pt
cmp
std
in
icebp
ret
call
out
cmp
repz
repnz
in
leave
cli
ret
ljmp
shl
xor
lock
in
hlt
int3
lret
repz
jecxz
repnz
sti
hlt
mov
out
mov
int3
xchg
mov
jmp
test
in
sar
loop
shl
call
loopne
lret
rorl
xlat
in
jmp
ror
loope
xor
aas
rcr
mov
rcll
xor
shl
xor
jmp
jmp
cmp
incl
aam
fcmovbe
std
clc
jecxz
xchg
mov
das
loop
iret
jmp
les
cmp
xlat
cld
ds
iret
test
hlt
xchg
lea
mov
ds
aad
call
into
lret
into
ret
fucomp
xlat
out
out
lret
lret
rol
loopne
enter
repz
aam
rcr
hlt
sar
jmp
or
loopne
jmp
in
sub
lock
xor
rol
ror
fucomip
lock
sar
cli
les
jmp
into
icebp
rcll
fdivs
icebp
fst
fdivr
cmc
in
rol
cmc
mov
rorl
out
jmp
repnz
lret
in
lret
call
cmp
fucomi
loope
cld
xlat
cmc
out
leave
addb
mov
iret
jmp
leave
das
int3
fdivr
aas
ds
int3
fsub
cmp
ljmp
enter
out
out
lret
iret
aad
fcmovnu
fcmovne
aas
hlt
loopne
enter
ljmp
mov
xor
out
cmp
jmp
lock
test
fst
lret
cmp
hlt
xchg
ror
aam
leave
cmp
int
call
xchg
test
sti
mov
test
xor
imul
aam
ss
call
repnz
into
add
rcr
cld
aad
fiaddl
xchg
sar
call
in
fadd
ds
ret
out
jecxz
loop
cmp
fdivrp
out
mov
int3
iret
in
ret
fnsave
aaa
jmp
fdivr
test
test
movl
lret
lret
repnz
cld
ds
cmp
into
out
loop
call
neg
ret
std
int3
cld
loope
icebp
mul
imul
std
fpatan
cmp
in
ss
icebp
fdiv
xlat
loopne
enter
loop
icebp
jecxz
sti
jecxz
iret
enter
lock
idivl
rcl
fadds
std
ds
loopne
loopne
cld
fndisi(8087
xchg
mov
icebp
not
fldt
fdivr
shl
add
clc
ds
adc
mov
ficoml
jmp
cmp
das
std
xor
std
adc
out
out
clc
rorb
mov
in
in
push
not
fucomi
fxch
jmp
xlat
cmp
ret
aad
int
mov
in
jmp
int3
out
repz
sti
fcom
rol
add
lret
loopne
in
loope
fmulp
xchg
sub
in
in
sarb
jmp
jmp
jmp
rcr
loopne
cmp
test
xchg
out
xchg
sub
loope
add
jmp
rol
int
fst
fcmovne
xor
testb
jg
cmpsb
add
out
fcom
in
icebp
cmpb
incl
mov
shl
xchg
cld
call
aam
iret
fst
lret
rcl
fcompp
fdivrp
stc
std
leave
in
jmp
xchg
rcr
les
jmp
in
jecxz,pt
and
loope
out
mov
int3
faddl
in
cmc
xor
out
sarl
fucomip
clc
cld
rcl
sarl
or
mov
rol
lock
enter
shr
sti
iret
not
aam
inc
in
sti
filds
in
enter
out
icebp
into
call
test
dec
addl
enter
fcomip
imull
out
xor
into
rcl
sti
fscale
xchg
mov
mov
into
cld
int3
iret
shl
fincstp
aam
shr
out
idiv
xlat
fucomp
cli
cmc
fcmovb
mov
std
cli
flds
fmulp
icebp
xor
aaa
aaa
out
cmp
aam
clc
hlt
icebp
rol
ret
mov
out
out
rolb
xor
ljmp
into
add
rol
cld
sti
fadd
mov
in
aad
iret
shll
cmp
not
fidivrs
test
std
mov
cld
int
xchg
loopne
int
lret
icebp
lock
fdivp
ds
fadds
adc
in
fsincos
sub
mov
clc
aad
fdivr
fucomi
stc
test
sarb
aad
loopne
fldz
mov
in
xor
repnz
jecxz
enter
fidivl
cmp
jecxz
out
aam
std
enter
out
repz
lret
out
hlt
aam
cmp
ljmp
sar
xchg
out
call
lret
xor
fld1
int
stc
jmp
icebp
cmc
cmc
shl
test
xlat
lret
cmp
loope
enter
out
fsub
loop
icebp
jmp
std
ss
test
fadds
sti
lret
in
shr
adcb
loop
aaa
les
repnz
cmpb
repz
jmp
out
loope
out
in
leave
jecxz
out
cmp
in
idivb
aam
clc
repnz
ljmp
loope
enter
ror
sar
fdivrp
iret
loopne
ret
addl
aam
in
mov
xor
xor
jecxz
stc
cld
repz
or
fadds
in
lds
mov
xor
clc
xor
lret
icebp
fcomi
clc
cmp
sbb
in
lds
ror
cmc
xor
cmp
in
aam
icebp
shl
ds
idiv
neg
out
loope
mov
jmp
xor
enter
out
cmp
loope
aam
add
loopne
out
cmp
out
int3
xor
aam
xor
out
loopne
std
shl
sbb
ret
dec
fcmovu
and
in
sar
fcom
xlat
ljmp
in
rcl
cmc
aas
cli
fucomip
int3
ror
mov
not
into
ret
icebp
call
cmp
stc
repz
fdivr
clc
std
jmp
test
lret
out
ret
shl
leave
hlt
aas
in
repz
lret
shl
repnz
cmc
loop
stc
int3
int
ror
sub
icebp
sarb
lret
cmp
cmp
fdiv
std
in
cli
vcvtpd2dq
testl
icebp
hlt
int3
jecxz
hlt
call
rolb
fdivr
icebp
jmp
jecxz
out
loope
mov
call
hlt
int
ror
iret
cmp
or
fcomp
out
jecxz
cld
push
xchg
into
push
repz
lock
ret
lret
shll
out
test
fucomp
orb
lret
jmp
mov
xlat
int
out
icebp
fucomp
cmp
into
int
sbb
jmp
enter
out
jmp
aad
shl
ss
jmp
aam
mul
out
iret
aad
lock
ret
test
fsubrp
filds
xor
ljmp
iret
cmp
ffreep
sbb
stc
cmc
jmp
call
aam
out
in
enter
loope
iret
ds
out
ffreep
cmp
cld
test
aam
aaa
xor
jmp
not
clc
ljmp
cli
ret
mul
loop
rcl
repz
test
cmp
aam
ds
icebp
pop
jmp
lret
ret
fstpl
fidivrl
jne
sub
add
in
flds
mov
fucomp
test
lock
mov
loop
sarb
aaa
fstp
cmp
xor
stc
cld
aas
in
in
fdivr
test
lock
sub
icebp
fxch
lds
icebp
cli
fdivrs
repnz
cld
jmp
jmp
into
in
lret
rcr
call
ljmp
push
test
fsubrp
out
clc
jecxz
icebp
out
fmul
jmp
jmp
out
icebp
test
sbb
aas
cli
fdivp
cmp
cmp
repnz
shl
cli
stc
xlat
stc
lock
ret
iret
xchg
aad
mov
xchg
mov
int3
xor
sti
xor
std
fsqrt
test
out
test
in
mov
lea
mov
mov
xlat
stc
in
cli
sarl
clc
lock
ror
in
cld
fmul
int
xchg
in
jmp
in
xor
repnz
ss
cli
shlb
ret
aad
loop
cld
fldl
cs
xor
cmc
cmp
xlat
cmp
sarb
aas
rol
fsubp
std
enter
ffree
lock
out
div
stc
shl
lock
repnz
into
aad
shl
jmp
xchg
fimull
icebp
ret
cmc
repz
clc
or
vpmullw
ret
or
xchg
out
in
shl
stc
cmp
int3
lret
lret
cmp
out
lock
decl
test
repz
int
hlt
aaa
leave
xor
cli
shr
ds
cli
fucom
out
or
in
cmc
aam
loopne
fcmovu
sarl
ret
ftst
mov
mov
out
in
in
repz
sar
cld
call
rcr
hlt
testl
sub
out
out
rcl
icebp
xor
cmp
repz
rcr
cmp
aam
cli
fcmove
loope
cmp
in
fdiv
into
repz
shll
clc
jmp
int
loopne
int3
cmp
into
roll
loop
popl
shl
jmp
cmp
cmp
clc
repnz
sar
cmc
jmp
xchg
in
mov
repz
int
cmp
std
int3
cli
repnz
ret
sti
ljmp
lret
jmp
in
enter
stc
aam
out
aad
or
fadd
test
ror
mov
int
lock
clc
hlt
aam
sarl
fdiv
fmul
out
incb
lret
ss
jecxz
shlb
hlt
lret
fcmove
cmpl
mov
mov
fists
test
call
fcmovnbe
fdivrl
icebp
cmp
loopne
loopne
in
fcomp
mov
out
in
cli
in
lret
shll
ds
fcmovnu
fdivrp
in
clc
mul
lret
xor
mov
into
std
xor
divb
sar
xlat
xor
rcr
rorb
clc
std
xchg
fldl
ss
lret
xlat
lret
cmp
repz
aam
out
xchg
repnz
imul
cli
fcmovbe
lock
testl
clc
ljmp
xchg
aam
cmp
icebp
stc
into
xlat
clc
int3
iret
lret
out
clc
vcvtdq2pd
fcmovbe
mov
popl
repnz
in
out
ljmp
ds
out
loopne
lret
in
mov
lret
std
xchg
enter
jmp
cmp
cmp
hlt
loopne
aam
shl
loopne
loope
fmul
test
iret
lock
loopne
int
loop
cmp
shl
aad
xor
loope
fnstsw
icebp
lret
repz
ljmp
fdivrp
aad
fdivrs
fsub
fcmovnb
in
cmc
in
xchg
call
jmp
cli
clc
leave
cmp
shr
xor
sti
sar
jmp
jecxz
clc
lock
into
hlt
test
in
xor
rcl
fcmovnbe
idiv
mov
test
int3
loop
leave
ficoms
ret
ror
std
int3
cmp
lock
aad
xlat
add
dec
cli
int3
fdivrp
out
out
xchg
loope
sar
xor
lret
out
icebp
cmp
into
fucomi
sbb
out
int3
out
in
loope
mov
lret
xor
out
sti
cmp
rolb
fadd
lea
add
mov
jmp
aam
fcmovnu
mulb
mov
cmpsb
add
int3
jecxz
fcoml
int
int3
aam
into
cmp
std
aam
xchg
fiadds
orb
jmp
cmp
fcmovu
cmp
les
jmp
stc
xchg
xchg
mov
ror
in
out
int3
jmp
push
cmp
repnz
xchg
neg
loop
ljmp
out
loop
fstpt
fcom
out
jecxz
sarb
xchg
fcmovu
mov
addl
lret
sar
rcl
loope
icebp
fmul
loope
orb
lret
in
lret
test
int
cmp
jmp
clc
out
cmp
out
loop
aad
ret
cld
loop
and
int3
lret
int3
lret
cmp
int
lock
fcmovnbe
std
stc
cld
mov
xor
rcr
xor
shlb
aad
fdivrs
sarb
repnz
xchg
mov
in
sti
mov
xchg
cld
loop
rol
fdivr
in
call
ret
ds
vcvtdq2pd
mov
repz
in
shl
fcmovnb
sarb
std
adc
mov
ret
loope
icebp
filds
xor
out
out
out
bnd
cmp
hlt
push
cmp
cli
out
jecxz
enter
in
ljmp
fcomp
std
cmp
incl
test
out
repnz
out
cmc
out
ret
shl
cmp
cmp
fucom
fsubrp
mov
repnz
in
jecxz
das
out
cmp
xor
iret
stc
repz
sar
fisttpll
out
loop
pushl
in
ljmp
sti
shl
jecxz
fdivrp
sti
mov
in
vshufpd
repz
enter
out
sti
out
iret
xor
xlat
cli
jmp
fisttps
out
call
shl
out
cmp
lret
aas
icebp
shl
hlt
out
rcr
fisttps
out
xchg
xchg
repz
out
icebp
cmp
fcom
leave
into
filds
call
std
leave
sti
fisttpl
in
loope
out
lret
fcmove
out
in
lret
cld
add
cmc
lret
cmc
jmp
cld
loope
aad
lock
call
rcr
repnz
out
in
fsub
fmulp
jmp
mov
in
cld
lret
clc
lock
xchg
int
in
xor
into
idivl
testl
aam
xchg
int3
out
clc
mov
das
test
hlt
cli
fcmovbe
xlat
iret
ret
rcl
ret
out
cmp
loope
int
out
fidivrs
vcmppd
in
xor
rcl
cmp
aas
lock
inc
aam
ret
in
mov
loop
fdivr
out
fisttpll
iret
ret
idiv
into
in
int3
cli
in
aas
xchg
ret
jecxz
decb
orb
ss
fstpt
xor
fcmovnbe
les
cmp
mul
xchg
vfrczsd
in
int
sti
repnz
out
rcr
shr
mov
fdivrp
enter
xchg
xor
ret
xor
xor
xlat
xor
aam
aam
aad
test
lret
cli
fsubp
lret
stc
sub
fcomp
les
ljmp
out
shl
ret
xlat
cmc
in
fiadds
xchg
lret
ret
fld
out
hlt
lock
out
fldl
sbb
fcmovnu
loop
xchg
rcll
in
out
repnz
icebp
int3
icebp
icebp
out
cli
cmp
loopne
ret
jecxz
mov
loope
shr
ss
enter
out
std
cli
jecxz
enter
leave
jmp
test
shl
iret
out
aad
out
fcmovnbe
hlt
cld
cmp
fst
mov
cli
icebp
nop
std
repz
jecxz
int
icebp
iret
jmp
repnz
ds
fsubp
fsubr
loope
shl
loop
cmc
nop
cs
fidivrl
iret
rcr
mul
cmc
aas
into
fucomi
fscale
test
jecxz
sti
fcmovne
ljmp
out
out
into
fucomip
in
hlt
aas
cmp
shl
cld
call
fsubr
flds
faddp
xor
ljmp
cmp
in
jecxz
xlat
ljmp
idivl
call
in
cmp
incb
jmp
addl
or
add
cmp
je
mov
jmp
int
aas
ror
rcr
fcmove
mov
js
xlat
pop
sub
jg
cmpsb
add
xor
rcl
cmp
hlt
out
clc
int
ds
xlat
ffree
aam
fcmovbe
in
mov
test
nop
int
into
aaa
sub
iret
lock
jecxz
faddp
std
ret
jmp
icebp
fucomip
sar
nop
ret
aam
sti
rcl
rcl
jmp
loope,pt
loop
fucomip
aas
fiadds
pop
xor
xor
call
cli
out
cld
out
mov
xchg
in
xchg
out
loop
in
out
cmc
out
jmp
stc
iret
ret
lret
addb
shr
xor
sub
fldl2t
xor
cld
xor
xlat
jecxz
hlt
filds
lret
fldl
xor
rcr
aaa
cmc
out
int
cmp
sti
out
clc
rol
faddp
call
enter
loop
leave
lret
int3
fcmovnbe
shr
dec
cli
in
repnz
enter
int
fcomp
or
ljmp
cmc
fnstsw
in
ffreep
cmpl
loope
lea
out
loopne
ljmp
xlat
clc
lret
ret
loope
fchs
rol
mov
mov
in
loop
int
ljmp
clc
stc
sub
addb
xchg
fsub
out
test
aad
xor
cli
fmulp
call
ret
ret
cmc
test
stc
out
fildl
out
int
ror
cmp
xor
aad
loope
icebp
shl
out
xchg
jmp
stc
orl
loopne
out
fcmove
fmul
aam
lret
ds
fstp
fadd
xchg
out
mov
out
std
in
aad
out
loop
call
loopne
repnz
lock
lret
test
loop
call
jmp
cmp
aam
xor
loop
sarl
fcomi
jmp
jmp
out
ljmp
in
shl
std
out
jmp
cmp
jecxz
cmp
ljmp
cld
fisttpl
in
iret
cmp
in
jmp
rcl
test
aad
out
out
sbb
mov
rclb
aam
xor
iret
cld
div
std
cmc
cli
xlat
loop
cmp
and
ret
aad
hlt
xor
ret
ljmp
cmp
sti
ret
lock
filds
leave
lret
xor
fcomp
out
in
xlat
repnz
clc
jecxz
incl
jmp
sti
fadd
fcmove
xchg
rol
loopne
cli
aad
jmp
sti
int3
fcomip
clc
rol
repnz
ret
add
jmp
jmp
xchg
mov
sub
clc
xor
out
lret
cmp
lret
loop
ret
mov
in
jecxz
in
test
out
xor
lock
leave
cld
aam
fdivrp
repnz
lea
in
filds
xor
std
aam
repnz
out
rcr
ret
in
test
lret
shr
rol
ror
in
repz
leave
rcr
loop
cli
into
jecxz
loope
leave
mov
repnz
shlb
sar
sti
cmp
lret
jecxz
shl
jmp
fisttps
out
mul
ljmp
lret
lock
faddl
imul
lea
mov
ljmp
lock
clc
icebp
ret
call
idiv
nop
xchg
mov
test
xor
xor
lret
fdivrs
jmp
jmp
into
cmp
les
xchg
iret
ljmp
aad
fld
ror
sti
cld
rcl
cmpl
stc
fcomp
int3
in
fsubp
lret
and
loope
xor
cmc
stc
out
call
sar
in
jmp
mov
mov
repnz
ret
fcom
icebp
enter
cmp
iret
xor
loop
or
test
fmuls
sub
xlat
loop
jmp
enter
sbb
hlt
in
cld
ret
ret
mov
jmp
roll
not
stc
out
aam
idivl
stc
cmp
ret
mov
loopne
in
test
lret
lret
xchg
cmc
loop
repnz
hlt
int
leave
cmp
fsubp
int3
sti
and
sar
lret
and
lret
mov
xor
not
ljmp
cmp
int
out
rorl
in
jmp
addb
icebp
in
lds
aam
aas
cmp
sbb
add
lock
decl
add
add
rol
iret
aad
aad
adc
lea
rclb
int
dec
jg
cmpsb
add
hlt
iret
clc
in
rol
cmp
fcomp
xchg
out
mov
das
fnstcw
out
cmp
ror
ret
jmp
mov
ficoml
rcr
cmc
lret
ljmp
loope,pt
xchg
leave
lret
stc
mul
jmp
out
and
hlt
into
lock
cld
in
fistpll
cmp
loope
clc
call
iret
lock
repnz
lret
loopne
shlb
rcl
out
ror
add
repz
ffree
mov
in
icebp
in
in
call
stc
loop
in
repz
cmc
stc
rcr
cli
test
into
test
loopne
std
in
out
ret
clc
into
shr
xchg
repz
xlat
aad
icebp
clc
fsin
call
aad
ror
jecxz
in
aad
loopne
xchg
ficoml
shr
fcom
stc
not
fstpt
clc
cmp
out
in
clc
std
rorb
out
ljmp
clc
in
rcr
shll
clc
aas
repnz
loop
sti
push
in
and
fisttpll
xor
stc
enter
cmp
cmp
fcom
stc
test
in
out
filds
fnop
xor
filds
addl
cld
jmp
adcb
int
cmp
enter
ret
xlat
in
aas
loope
call
out
fadds
shl
ss
vpsubusb
aad
lock
fmul
shl
fsubr
sti
sti
xchg
lret
out
xchg
aaa
out
cmp
aam
hlt
shr
loop
repnz
hlt
out
xabort
iret
loopne
and
xor
icebp
std
stc
in
aas
div
cmp
sarb
jecxz
test
clc
clc
fucomi
lret
loop
not
shl
ror
aaa
xor
aas
icebp
aaa
std
cmp
hlt
xchg
loop
call
leave
lret
call
iret
lock
int3
out
cld
sti
ds
filds
sar
xchg
jmp
xchg
sub
rcl
hlt
cmc
stc
cmp
jmp
hlt
cmp
cld
mul
mov
in
xor
aam
in
loope
fxch
sbb
loop
std
int
jecxz
fucomp
out
xchg
rol
into
call
cmp
clc
shl
cmp
mov
out
sub
cli
call
xor
fsubr
jmp
jecxz
ret
test
test
call
stc
in
out
loop
xchg
test
xor
call
out
cmp
fptan
test
lret
call
into
out
shl
in
out
fdiv
jmp
lret
fsubp
test
fcomi
fiaddl
out
sar
aaa
cmp
xor
test
xlat
sbb
out
std
fcmovnu
out
jmp
lock
xor
idiv
adc
hlt
loop
in
loop
mov
or
fdivr
lret
loop
cmp
fsubr
leave
int3
ljmp
in
xor
flds
aaa
ljmp
sarb
add
fcmovnbe
aam
ror
in
vpaddsw
leave
das
aam
ss
test
into
sar
lret
ffree
ret
int3
mov
fucomip
out
out
xor
shl
into
in
cmp
fcmovnbe
mov
stc
fiaddl
mov
jmp
loope
repz
cmp
aam
cld
fucomi
loope
faddp
loop
sar
in
out
fxch
iret
out
jmp
lret
icebp
iret
out
fcomip
fdiv
lret
cmpl
fsubrp
addl
loopne
lret
jmp
xor
repz
cmp
rol
icebp
loope
out
fsubrp
out
stc
orl
sub
aam
ror
aam
stc
aam
out
vpsraw
cld
movb
aad
ret
into
cli
iret
div
imul
out
fchs
xchg
cmp
aad
hlt
ftst
loopne
nop
int
aad
aam
loopne
xor
icebp
cld
fxch
cmp
rolb
testl
fldl
lock
sub
xor
ret
testb
aam
in
std
rcll
stc
ss
cmp
cmp
hlt
ffree
cmp
in
test
loopne
int3
clc
loopne
rorl
sarb
ss
aas
lret
sti
into
cmp
stc
cld
mov
jmp
mov
int
mov
add
rclb
jl
add
out
incb
out
xor
jmp
in
cmc
cld
adc
iret
aas
cmp
in
test
clc
clc
mov
lret
shll
ret
std
idiv
repz
cmp
bnd
neg
leave
int3
mov
cmc
repnz
sti
xor
lock
in
repz
sarb
test
in
clc
lret
test
int3
ljmp
cmp
mov
fcmovnu
in
xchg
ljmp
not
xor
sti
cmp
cmp
faddp
enter
jmp
mov
mov
out
out
hlt
cmp
fcmovne
rolb
fdivr
incb
jmp
sub
out
xor
aam
cmp
int3
ds
incb
add
fisttpll
iret
std
orb
cli
rcl
lret
cmp
testb
call
jmp
jmp
in
aam
out
ljmp
test
loope
cli
test
cs
xor
neg
rcl
divb
out
repz
sar
mul
mov
mov
lds
iret
mov
shlb
aaa
hlt
call
std
iret
ds
xchg
sar
call
fisttps
loope
repnz
sub
fyl2xp1
in
ror
fsubrp
repnz
out
aam
clc
fildl
lock
fdivl
ret
jmp
leave
iret
shr
sar
in
cmc
out
faddp
loopne
addb
test
rcl
ret
in
call
lret
loop
loopne
jmp
out
jmp
in
adc
int
in
ret
lret
aas
ret
test
ljmp
ljmp
iret
std
iret
into
repz
not
les
jecxz
and
out
int3
fsubr
shl
test
shr
in
cld
stc
xlat
cmp
aas
cmp
aam
in
loope
clc
testb
aad
int
cld
cmp
cld
loope
aam
inc
sar
jmp
cli
out
leave
rorl
xor
jmp
fst
fcomp
incl
sti
fcmovnu
mov
lret
lret
cli
xchg
orl
hlt
jmp
cmp
jecxz
roll
lret
test
shl
xor
xlat
out
cmp
cli
jecxz
rol
lret
dec
in
fld1
ror
cmc
jmp
stc
sub
ror
fcmovu
clc
aad
in
std
sar
loopne
in
jmp
lret
divl
shll
int
lret
cmp
fcmovbe
fdiv
lock
stc
and
rcr
mov
fst
loopne
jmp
stc
std
ss
cmp
in
stc
aas
sti
xlat
in
idivl
xor
in
jmp
loopne
div
rcl
stc
in
idivl
shl
cmp
std
lock
mov
hlt
lds
xchg
int3
shrl
hlt
clc
cmp
rcr
cmp
cmc
fisttpll
mov
jecxz
in
jecxz
xchg
in
aad
jmp
clc
call
sbb
fdivr
fsubr
in
filds
in
out
out
das
test
sbb
xlat
in
vpavgw
test
sub
jmp
repnz
ss
lret
out
iret
iret
out
cli
xchg
fmuls
mov
cmc
lret
ror
in
cmp
adc
fiaddl
fsubrp
lret
xor
loope
xor
jecxz
xor
lock
ss
lock
sbb
clc
rolb
xor
icebp
int3
push
aas
iret
fdivp
cmc
in
loop
ret
aad
inc
lret
xchg
fadds
shl
int3
ret
hlt
cmp
iret
out
icebp
imul
clc
repnz
incb
iret
loop
xor
call
fxch
not
cmp
sti
call
cli
mov
orl
lret
div
into
in
fdivp
xlat
sti
sar
mov
mov
mov
fisttps
xor
xor
hlt
loopne
cli
cmp
sar
xlat
jmp
ljmp
shl
aam
call
shl
divb
imul
xor
cmp
sar
stc
test
sar
fsubp
in
loop
loop
loopne
or
cmp
je
mov
jmp
int
aad
fstp
ffree
push
jl
push
jl
jg
cmpsb
add
fnstenv
xor
int3
push
ds
roll
in
clc
in
and
orl
lock
sti
cs
ljmp
test
test
loope
lret
ljmp
repnz
in
into
aad
cld
lock
xchg
fsubr
lret
into
jmp
xor
out
out
iret
leave
leave
fnstsw
cmc
cmp
aam
mov
xchg
in
nop
mov
mov
int
in
in
sub
imul
repz
repnz
mov
stc
aam
jmp
in
fiadds
xor
xor
aas
test
fstp
loope
mov
in
int3
xor
out
xor
out
ds
xor
repnz
int3
mov
out
jmp
loop
hlt
xor
mov
idiv
stc
leave
push
into
aas
repnz
jecxz
testb
into
jmp
loope
in
clc
ljmp
jecxz
in
xchg
cli
mov
mov
xor
repnz
call
in
pushl
flds
cld
dec
out
mov
int3
int
out
stc
jmp
aaa
sar
fucomip
repz
ljmp
enter
test
ss
sti
into
repz
ss
loopne
lock
test
jmp
mov
out
stc
in
test
jecxz
out
std
lret
fdivr
enter
rcr
test
mov
fisttps
adc
jmp
int3
neg
stc
xlat
cmp
cmp
jmp
jecxz
stc
icebp
icebp
stc
sar
aad
std
xchg
loope
in
repz
aas
cs
cli
int
jmp
iret
adc
fxch
enter
sub
cli
int3
into
int
loop
cmp
ljmp
faddp
aad
xchg
out
test
rorb
cmp
lret
stc
call
cld
cmp
hlt
frstpm(287
xchg
sti
jecxz
leave
call
rcl
xor
enter
out
shl
cmp
jmp
fcmovnbe
in
out
in
test
and
aam
out
out
cmp
lock
leave
ret
stc
nop
mov
loopne
int3
sti
xor
sarb
testb
in
mov
sar
loope
rcl
cmc
xor
test
out
in
clc
repz
mov
fildl
hlt
rcl
xor
in
stc
fucomip
sub
loop
cmc
cld
icebp
shl
fcmovb
xchg
xchg
xor
icebp
das
fprem1
fdivrp
int3
aam
clc
test
rol
imul
fiaddl
loop
int3
xchg
lock
icebp
sarl
int3
enter
out
test
shl
or
loopne
cld
int
std
lret
das
cmc
test
aaa
shl
fadds
leave
and
fucomi
mov
lock
repnz
repz
jmp
fsincos
leave
sar
in
xlat
stc
hlt
loopne
in
shl
mov
mov
xor
das
shl
idiv
aam
fdivr
fdiv
xlat
ret
loop
jmp
iret
xchg
fsubr
aad
out
repnz
fdivr
lock
rcr
loop
sti
aam
cmp
iret
int3
out
in
jmp
lret
into
cmc
leave
cmc
aam
cmp
fdiv
aam
xchg
shr
fsub
in
xchg
ret
xchg
leave
cmp
lret
flds
not
jmp
loope
testl
out
cmp
cmp
jecxz
fucomip
shl
aam
lock
adcl
loopne
mov
cmc
fmul
jecxz
loop
sbb
call
orl
in
loop
fst
in
cld
sti
jecxz
adc
or
loop
mov
rol
stc
in
idiv
xlat
fmul
aas
test
aad
test
out
xrelease
div
rol
sti
in
hlt
repnz
int3
loop
fnstsw
ret
xabort
lret
std
xor
sub
int3
idiv
aam
clc
clc
hlt
cmp
imul
loop
hlt
repz
leave
leave
test
fildll
int
xlat
shll
loop
not
add
xlat
fsubrp
ffree
mov
int
leave
out
aad
call
int3
repnz
xor
jp
jmp
inc
cld
mov
mov
mov
xor
jmp
aam
ror
rcl
fld
sub
add
cmpsb
pop
jg
cmpsb
add
ljmp
mov
fsubr
mov
and
ror
in
shl
int
jecxz
ret
in
in
cmp
repnz
out
test
ret
hlt
mul
enter
fcmovne
nop
mov
aaa
out
xor
iret
stc
shr
shl
call
roll
std
ret
test
test
xchg
out
cs
hlt
enter
into
aas
lret
adc
call
fnclex
ljmp
lret
test
jmp
idiv
xlat
iret
hlt
loope
xchg
in
int3
mov
loopne
xchg
sub
xor
cmp
aaa
loope
repnz
hlt
out
incb
test
fcmove
fimull
shl
sti
lock
cs
aas
lock
repz
repz
jmp
cld
addl
mov
in
jmp
stc
out
leave
fcom
jecxz
loope
cld
faddp
leave
icebp
nop
loope
xchg
sub
xor
hlt
fnstenv
cmp
hlt
flds
fmuls
xchg
jecxz
loop
aaa
sar
fmul
jmp
enter
fdivrp
hlt
sar
call
lret
mov
stc
ljmp
int
cmpl
cld
out
loop
jmp
loopne
jmp
int3
aad
aad
fmul
incb
rcl
movl
out
iret
call
lock
cmp
cmp
loope
sbb
ljmp
shl
loop
out
in
les
cmp
aam
loop
add
shl
lock
loope
lret
call
out
xor
cmc
leave
sti
loope
cmp
cmp
cmp
int
test
jecxz
xchg
sub
cmp
fldl2e
cmc
loopne
icebp
aad
xor
xchg
sti
enter
iret
xchg
lock
repz
stc
out
call
cmp
loop
jmp
leave
call
nop
xchg
call
cmp
int
aas
inc
repnz
test
and
fucomi
out
rorb
leave
xor
iret
out
in
enter
shl
iret
out
loopne
fimuls
clc
out
cld
fucomp
bnd
call
xlat
xlat
enter
int3
cmc
xor
loopne
jmp
fisttpl
ljmp
hlt
cmp
sarl
std
fcmovnu
mov
in
fmuls
aad
icebp
loopne
enter
cmp
cmp
rcr
aam
xor
hlt
mov
in
mov
int3
shll
cmp
lret
lock
loopne
mov
repz
call
fcmovnbe
repz
cmp
rcr
ds
in
addb
in
int3
int3
in
aam
lret
cmp
sbb
out
xchg
repnz
fcmovnb
test
icebp
orl
repz
into
sarb
into
lock
clc
addb
iret
fsubrp
int3
loop
xchg
xchg
aaa
fdivr
lock
test
std
repnz
incl
int3
out
out
repnz
out
divb
int3
ljmp
test
out
neg
int3
mov
ficoms
fprem
xor
cmp
cmp
fnstcw
loope
sar
shr
in
test
cmc
mov
xor
test
cs
std
int3
out
cmp
cmp
cmp
repz
jecxz
ret
fxch
xchg
hlt
sub
shr
hlt
fdiv
pushl
rcr
fstpt
sar
mov
in
aam
cli
roll
idivl
xor
fxch
rcl
int
in
testb
lds
addb
repz
in
out
out
cli
std
out
sti
adc
fdivr
loopne
icebp
ljmp
xor
rcl
fnstenv
fucomi
cmp
sarb
ret
icebp
fidivrs
mov
loopne
sbb
mov
cmc
loope
out
leave
cmp
aam
cmc
out
ss
shl
hlt
jecxz
jmp
cmp
mov
and
xor
call
fidivrl
in
loope
ds
aas
fmul
clc
fldl
jmp
shll
lret
repz
fucomp
in
adc
rcl
mov
fcmovbe
sub
test
jecxz
ret
cmp
std
aam
fcmovbe
hlt
ds
ds
mov
add
cmp
je
mov
xor
add
mov
mov
jmp
enter
int
insb
push
push
mov
dec
outsb
shlb
jl
add
fmuls
orl
sar
aaa
icebp
jmp
ds
loop
cmc
fsin
xchg
mov
shr
aaa
in
out
fdivr
out
lret
repnz
cmp
lret
int
jmp
std
lret
and
in
sti
cmp
out
in
iret
clc
out
mov
filds
cld
out
mov
shr
sarb
leave
jmp
ds
fiaddl
or
xchg
loop
popl
repnz
leave
fstp
repz
out
loopne
faddl
std
cli
in
mov
int
fdivr
int3
icebp
iret
in
loop
rcr
inc
shl
sti
xchg
ret
jmp
in
mov
xor
lret
or
cli
cmp
jmp
mov
out
ljmp
stc
xor
shr
lret
hlt
fsubr
clc
div
shl
dec
aad
idiv
and
out
loopne
in
call
fucomi
test
ljmp
cmp
out
addb
fdiv
xor
aaa
cmc
out
clc
sbb
ret
stc
test
cli
loop
out
out
ss
aaa
rol
leave
xor
fcmovbe
rol
out
testl
int
mov
loope
lret
sti
ljmp
repz
fiaddl
orb
xchg
call
sub
ret
in
sar
fcmovu
into
aam
fdivrp
ffreep
loope
call
test
mov
aad
xor
in
repz
ret
xor
int3
in
repz
ror
incl
lret
into
cld
in
leave
lock
lock
int
in
sti
cmp
clc
cld
aas
neg
loope
test
xchg
int
xor
out
jmp
shl
stc
ds
call
out
fdivp
loop
mov
in
and
mov
in
ror
ljmp
loope
fcmovu
ds
aam
loope
fldln2
fldl
ljmp
repnz
aad
sti
fdivrs
ds
std
ret
lds
lret
out
xchg
jecxz
divl
loop
in
rcr
jecxz
xchg
call
shr
in
in
stc
cs
cld
into
rcr
lret
clc
aam
loope
mov
leave
jecxz
sub
xor
xor
hlt
shr
repnz
into
xlat
out
loope
or
lret
jecxz
fcomp
fmul
xchg
add
in
neg
fnstsw
stc
ror
fnop
testb
mov
rorl
mov
lds
ljmp
clc
ret
ret
inc
in
ret
test
loope
clc
in
cmp
fildll
repz
cmp
enter
loope
sbb
in
cld
jmp
decb
repz
icebp
in
out
int
fcmovbe
cmp
std
mov
jecxz
jecxz
mov
test
in
xlat
fdivr
xor
repnz
icebp
repz
aas
fcmovnu
clc
loop
stc
testl
in
iret
in
hlt
aaa
aad
ror
cmp
jecxz
repnz
int3
in
xchg
fimull
int3
ret
cmp
jmp
out
ror
rcl
test
and
incb
hlt
ljmp
dec
cmp
shl
in
std
jmp
out
test
mov
out
ror
sar
aad
out
neg
clc
loope
fcmovnb
iret
std
mov
int3
iret
out
into
lret
in
xchg
aam
leave
xor
aaa
call
ds
sti
in
cmp
out
out
fsubr
xchg
fadd
loop
fdiv
sar
cmp
rcr
aad
and
filds
test
adc
out
shlb
shl
cli
cmc
fcmovnbe
stc
adc
aas
shr
call
aam
add
xchg
in
xchg
xor
divl
in
std
cmp
into
jmp
aaa
testl
mov
loope
xlat
cmc
cmp
das
call
cmp
fadd
test
fcmovb
fxch
fdivrp
ljmp
out
enter
clc
std
out
cmp
sarb
test
loope
aam
testb
jmp
aaa
fsqrt
out
fst
hlt
fnstcw
loope
rolb
cli
int3
in
loop
mov
mov
jmp
rcl
rcr
fcmovb
mov
fstpl
call
fs
cmpsb
add
xor
jecxz
aaa
aaa
xlat
sti
hlt
cmp
in
sti
hlt
and
cmc
leave
in
fimull
enter
xchg
xor
les
clc
lret
stc
hlt
lock
cli
mov
out
out
nop
cmc
loopne
ret
jmp
xor
fxch
repnz
cld
sub
sub
in
aam
aas
test
fcmovnbe
vpaddusb
out
fmul
lock
sar
icebp
shlb
hlt
shr
ror
aad
shl
int
cmp
ret
ljmp
jmp
shl
jecxz
fst
cli
out
in
ds
cli
leave
addl
loop
iret
icebp
ds
xor
fcmovbe
aad
lock
hlt
sar
fcomip
aas
fstp
test
into
in
shl
in
shlb
out
enter
cmpb
xlat
repnz
cli
iret
loop
into
int3
ret
xor
cmp
movb
jecxz
clc
fcoml
repz
xlat
enter
aam
ljmp
cmpl
incb
repnz
aaa
cmp
cli
out
in
aaa
cmp
aad
xchg
xlat
mov
loope
fisttpl
shl
ror
repz
jmp
call
out
addl
jecxz
jecxz
loopne
cmp
repz
fstp
sbb
idivl
fcos
clc
movl
cmc
fdivrs
rcr
ror
lock
cmp
loope
xor
stc
cmp
not
int3
and
in
xchg
out
mov
shr
fldz
aaa
lret
cmp
out
out
sarb
out
mov
mov
aam
cmc
lret
shl
cld
cmp
rol
test
div
xrelease
out
loope
enter
shl
repz
out
xor
fcmovnu
in
mov
testb
xchg
out
in
clc
aaa
hlt
enter
int
rcl
test
cli
call
mov
mov
addb
cli
cmp
repz
aad
enter
ret
ffree
cmc
int
fadds
rorb
aam
jmp
cmp
cmp
fldl
cmp
inc
sti
test
shl
xor
int3
lret
cmp
aaa
cmp
testb
cmp
mov
cli
mov
jmp
out
fcmovnb
std
out
aam
iret
rcr
sti
fdivrp
incb
in
in
in
out
ds
out
sar
ss
incb
rol
cld
ljmp
in
mov
std
xchg
jmp
fdivs
xor
enter
cmp
icebp
lret
fmuls
mov
std
jmp
mov
aaa
aad
aaa
std
in
in
cmp
cli
jecxz
icebp
repz
idivl
in
adc
repnz
repz
xor
shll
leave
hlt
out
fldpi
loopne
cmpl
mov
out
in
ret
out
in
shr
aam
cmp
jmp
stc
aas
loopne
test
repnz
movb
cmp
leave
out
clc
xor
cmp
in
repnz
stc
repnz
xlat
in
out
aad
lret
enter
fdivp
out
loopne
clc
aaa
xor
lock
in
cld
cmp
lock
fnstcw
out
cld
jecxz
rolb
loope
into
ljmp
test
repnz
stc
loope
or
out
loope
sub
cmp
cs
enter
inc
cli
out
aas
cmp
les
mov
int3
in
xchg
lret
in
mov
out
add
sar
xlat
adc
test
loop
mov
call
in
call
neg
cmp
cmp
jecxz
jmp
in
lret
clc
rorb
int
into
cmp
fbstp
out
fsubr
aam
int3
fucomi
and
mov
idiv
xchg
loopne
iret
xor
das
ljmp
cld
out
fcomp
loopne
fadd
push
in
nop
shr
in
repz
lock
hlt
stc
lret
add
in
xchg
flds
xchg
xor
out
ror
lock
xor
iret
test
mov
aas
cld
fildl
in
cmpl
int3
jmp
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
jmp
ds
leave
fstp
ror
cmp
mov
pop
lock
jl
cmp
in
repz
cmc
roll
in
movl
call
int3
aad
mul
and
ds
lret
in
test
call
jmp
fsub
xor
out
fcmove
aad
repz
int
cld
loopne
mov
ret
ss
clc
enter
rcr
out
out
jmp
mov
ljmp
ror
aam
sti
cmp
stc
hlt
hlt
in
test
aam
std
fadds
loop
jmp
in
cmp
clc
fcmovnb
loop
mov
and
into
loopne
adcb
lock
fdiv
cmp
fcmovb
cmp
cmp
cmc
mov
in
jmp
out
lret
xor
aad
ds
loope
fcomp
and
iret
enter
in
in
aam
out
imul
aad
lret
ret
shl
in
in
call
xchg
jmp
loopne
shl
aad
in
int3
leave
divb
out
fdivr
in
out
hlt
aad
mov
loope
frndint
fmull
jecxz
shl
shr
icebp
into
lret
hlt
clc
stc
filds
test
fldlg2
out
cld
jecxz
loopne
out
ss
std
in
iret
lret
stc
cld
repnz
ds
cld
stc
sbb
out
out
int3
hlt
fcmovbe
jmp
aas
stc
shl
repnz
icebp
fdivrp
out
fdivr
jmp
in
std
jmp
stc
shl
ljmp
lret
cmp
repnz
and
ljmp
lret
lret
aad
ror
div
cmp
mov
in
repz
fsubr
ror
imul
cmp
clc
jmp
fadd
aam
aaa
cli
rolb
fdivrp
int3
or
mov
lret
repnz
aaa
out
aam
xlat
clc
testl
clc
cmp
addb
aaa
loop
fsubr
in
into
jmp
in
lds
xchg
mov
repz
decb
hlt
sti
std
stc
enter
hlt
iret
in
movb
mov
loopne
xchg
addl
iret
fcmovne
cmp
in
out
loopne
vpor
in
jecxz
fildl
rcl
icebp
aam
ljmp
cmp
xor
imul
xchg
ljmp
out
out
cmp
lock
cmp
call
ds
cld
sar
hlt
mov
int
out
mov
enter
ss
fcmovnbe
not
sbb
cld
mov
in
call
sub
loopne
cli
aaa
xor
out
int3
jecxz
xchg
int3
in
lret
jecxz
lret
aad
xor
fld
loop
cmc
cld
fcmovnbe
xlat
fxch
sar
repnz
loop
aad
in
stc
clc
jecxz
fisttpll
fld
repnz
aad
cmp
aam
cmc
out
les
sti
fcmovu
in
not
test
out
iret
int
roll
leave
in
jmp
fstp
sar
in
call
aad
icebp
call
test
ret
loop
aad
in
testl
out
ftst
sar
xor
icebp
aad
loopne
bnd
ror
test
incb
call
loop
xor
aam
aaa
ror
in
cld
jmp
mov
test
in
xor
jmp
out
shr
stc
fldz
cmp
stc
xchg
leave
out
enter
xor
in
cld
clc
aad
stc
not
cmp
aad
ffreep
lds
aad
loopne
ret
in
xlat
fadd
aad
ret
repnz
aas
and
cld
sub
fmul
nop
aad
into
ret
clc
fldt
std
repz
add
shr
ret
adc
fdivrp
out
xchg
into
imulb
fdivs
out
ss
out
loopne
ret
shl
aam
out
out
cmp
in
rol
xor
fsubr
cmc
enter
rcr
rolb
cmp
lret
shr
mov
jmp
jmp
jmp
into
cmp
fadds
int
sub
orb
lock
aaa
aad
aam
in
fsubp
fistpll
ret
jmp
int
ret
fcmovu
add
dec
xor
jg
cmpsb
add
aad
lret
loop
incb
repz
vpsrlq
out
out
call
lock
stc
out
mov
xchg
cmc
sub
ss
jmp
int3
lret
not
cmp
fcomip
cli
push
aam
loope
xchg
lret
loope
into
icebp
stc
sarl
jmp
in
lock
out
enter
mov
roll
out
in
cmp
fcmovne
lock
roll
clc
in
sti
loop
mov
into
ror
int3
into
lock
aas
lret
call
idiv
cli
fld
in
jmp
jmp
mov
hlt
iret
out
ss
clc
fcomp
hlt
out
cli
stc
fistpll
out
fdecstp
jecxz
fisttps
into
sub
enter
in
repnz
cmp
fcomp
fidivrl
repnz
stc
aam
mov
out
ret
cmc
into
cs
out
in
fidivrl
ss
loope
hlt
xlat
rolb
test
addb
xlat
xor
into
neg
ss
xlat
sarb
call
cld
and
out
aam
cli
jmp
lret
fucom
sti
test
std
mov
sti
sub
iret
loope
subb
iret
xor
cmp
ljmp
in
lds
out
mov
iret
sar
sbb
shr
out
imul
cmp
lret
cli
cmp
fdivrp
cld
into
clc
repz
enter
loopne
iret
xchg
test
rcr
cmp
cmp
dec
fcmovb
xchg
xchg
lret
rcr
test
addb
hlt
icebp
cmc
xlat
in
sti
repz
faddp
stc
jmp
ljmp
out
int3
in
ds
jmp
aad
cmc
xlat
loopne
jmp
out
clc
lea
repnz
into
cmp
jmp
enter
out
add
rolb
cli
nop
xchg
and
lret
aam
xor
icebp
fmul
aas
cld
test
cld
out
test
stc
std
iret
fimull
loopne
out
cmp
iret
lret
cli
cmp
out
repnz
std
fcmovnbe
fsubp
jmp
divb
ss
out
call
sar
int3
stc
test
ret
leave
std
add
call
jmp
fnstcw
cmp
stc
in
loopne
or
fcomp
loopne
fcmovbe
shl
hlt
sti
call
sti
xlat
fsubr
test
clc
shl
rolb
fimull
xor
int
fnsave
cmp
not
aas
cmp
sbb
loope
xchg
cld
lock
xchg
mov
enter
cmp
int
not
test
jmp
fcmovne
cli
test
out
fisttps
xor
ror
sti
or
std
int3
repz
aas
in
or
xchg
fcmovne
cmc
cld
out
sti
leave
fchs
cmp
in
test
aad
call
xchg
jmp
out
sti
repz
call
loope
icebp
cmc
out
fdivr
test
repnz
test
repz
iret
cmp
rcr
cmc
clc
call
loopne
repz
mov
adc
fcmovnb
clc
sbb
lock
jmp
sti
in
cmp
cmp
into
out
ror
cmp
jmp
hlt
fmulp
cld
enter
jecxz
loopne
out
repz
fcos
fdiv
loope
test
test
in
jmp
mov
fld
cmc
in
fdiv
ds
stc
test
in
enter
in
in
leave
in
jmp
jmp
ss
sbb
cmpb
mov
fdivr
out
rcl
aad
jmp
xor
jmp
lret
cmp
fidivrl
cmp
addl
fsubr
test
shr
aam
in
cmp
aam
int3
xlat
ds
cld
ret
in
clc
clc
fcmovne
leave
shr
in
mov
lret
ret
leave
int
int
cmp
shl
aam
roll
sti
mov
leave
mov
in
icebp
sub
xor
cmc
mul
xlat
testb
in
ret
in
in
fisttps
stc
into
cmc
sar
lock
repnz
stc
les
in
not
out
out
sti
iret
cmp
sar
aad
out
sbb
movb
scas
xlat
sub
mov
jmp
mov
mov
xor
cmp
jmp
aas
enter
xlat
fcmovnu
mov
pop
stos
pusha
push
jb
jb
jl
add
mov
out
hlt
divl
sub
aad
cmp
int3
aam
adc
clc
fisttpll
out
ljmp
iret
shr
fucomi
lock
fnstcw
aad
fcmovb
lock
loopne
in
cli
out
lock
jmp
aas
cmc
int3
aam
cmc
fcmovne
cmp
ds
inc
in
enter
xchg
out
loopne
aad
in
in
ljmp
xlat
out
cmp
fadd
loope
out
or
cld
xchg
xor
aad
xor
divb
cmc
loope
cmc
repz
addb
loope
jmp
call
sarb
cmp
repz
cmp
std
sbb
and
jmp
ret
lret
jmp
call
enter
cmp
call
lock
out
clc
movl
leave
lret
int
aaa
cmc
ror
cmc
jecxz
ret
std
loopne
orb
cmp
imulb
cmc
shr
aad
lret
ror
aam
out
fsubp
loop
out
ret
fld
out
mov
xchg
xor
xor
ror
shll
cmp
test
sarb
test
leave
loope
sbb
fadd
lock
xor
cmc
lock
repz
cld
fcmovbe
lret
mov
test
aas
ss
clc
rcr
out
std
aas
into
iret
cmp
cld
aam
std
in
aam
in
sbb
int
mov
xor
cli
out
enter
in
fdiv
into
ror
fimuls
fmuls
xchg
xchg
xchg
shl
sti
in
in
xlat
sar
aam
cld
fdiv
aas
cmp
call
sbb
enter
out
clc
jmp
lret
ljmp
std
in
mov
in
enter
nop
iret
cld
aad
loope
xor
out
rcl
fadds
out
repnz
std
ret
out
in
in
lret
ror
icebp
int3
divb
cli
fcmovnb
cmp
cmpb
addb
in
cli
nop
jmp
xor
idivl
fcmovnu
fucomp
aad
clc
clc
xlat
in
call
out
sub
cmp
in
in
xabort
repnz
in
add
fndisi(8087
enter
xchg
xchg
ficoml
shll
lret
hlt
jmp
in
cmp
jecxz
loop
fisttpll
fninit
test
call
clc
fcmove
filds
ror
fildl
lret
faddl
ret
repz
icebp
fcomi
iret
out
sar
cmc
rcl
sar
leave
test
out
std
out
jecxz
std
nop
out
int
xlat
cmp
ljmp
hlt
cmp
hlt
aas
aam
inc
aad
in
mov
ror
iret
lret
out
div
fsubr
call
loope
in
fsubp
in
mov
xchg
fucomi
sti
or
xchg
mov
lret
std
neg
or
hlt
loop
hlt
loop
mov
fmull
leave
cs
cmc
fdecstp
neg
ds
aam
into
ret
xor
test
orl
in
jmp
call
ljmp
xchg
enter
jecxz
std
das
lret
into
iret
clc
call
hlt
roll
loope
loope
cld
mov
jecxz
in
cmc
xlat
xor
das
fsubr
loope
std
std
cmp
add
test
in
cld
mov
cli
repz
loopne
jmp
xor
cmp
fistpll
repz
mul
sbb
jecxz
in
fcmovnbe
dec
xchg
add
xor
enter
repz
shl
roll
clc
ljmp
std
rorl
rcl
cmc
icebp
jmp
cmp
add
in
xlat
jmp
test
jmp
std
mov
shr
lret
iret
vpsrlq
cmp
clc
int
cmp
int3
icebp
and
call
fstl
aaa
imul
xor
xor
xor
aaa
loope
sti
rcr
cmp
rcl
std
std
jmp
out
nop
and
cmp
lock
iret
icebp
aam
mov
hlt
out
std
jmp
xchg
loop
dec
in
jecxz
xor
out
into
cmp
enter
cmc
fadds
in
int
std
lret
repz
int3
sub
xor
ret
clc
jmp
cmc
in
jmp
std
mov
xchg
loopne
int3
je
mov
addl
jmp
jmp
vpsrlq
rcl
aad
xchg
mov
in
and
jmp
mov
add
in
lret
std
ljmp
jmp
xchg
mov
addl
jecxz
repz
aad
aas
ljmp
xchg
jecxz
jecxz
xor
nop
cmc
jmp
leave
lock
in
sti
fdivr
test
clc
loop
flds
in
ljmp
ror
cmp
lock
rcl
cmc
cmp
sub
stc
sti
loopne
into
test
cs
call
aam
loope
in
incl
cmc
int
fdivr
fstl
in
aad
ret
rcl
fdiv
lock
cli
not
mov
fcmove
test
iret
loopne
icebp
lock
rol
cs
xor
rcr
fnstsw
cmp
sar
ret
rol
fadds
orb
fmul
lret
ret
aad
lock
shr
ds
int3
testl
jecxz
out
imul
jmp
fadds
div
shl
ffree
test
loopne
mov
enter
sti
fcmovnu
rcr
jmp
roll
loop
mov
cld
mov
fdivrp
sti
loopne
loopne
int
hlt
into
cmp
cld
xlat
cmp
fst
jecxz
cmc
orl
in
ficoml
cmp
xor
icebp
aaa
aad
shl
std
aad
dec
in
mov
mov
fsubrs
aad
in
cmp
call
fsub
fcmovnb
sbb
mov
fucomp
cld
decb
test
out
in
in
xlat
repnz
dec
xor
icebp
test
iret
out
int3
jecxz
lock
jecxz
shll
repnz
fildl
adc
adc
in
testb
lea
stc
sar
test
out
fcmovnu
aam
loop
out
incl
fldl
call
ds
cmp
xor
leave
in
lret
sub
out
aas
ret
mul
int
pop
cli
loope
mov
out
lock
test
ror
fcomip
fsub
aam
notb
cmc
in
xor
hlt
iret
fnstsw
stc
icebp
ror
cmp
fsubp
repz
fdivr
div
sub
int3
jmp
sub
aad
xor
test
sarl
repz
mul
fsub
in
jmp
mov
ficoml
aad
out
out
ljmp
out
xchg
test
ret
test
fldl
loop
sub
repnz
shr
std
cli
in
xor
inc
cmc
fdiv
jmp
xchg
enter
in
in
cld
fmul
jecxz
into
out
cld
lock
mov
popl
in
lret
out
ss
lret
repz
in
in
hlt
std
cli
lock
xchg
enter
jmp
addb
ror
cli
cmc
enter
cmp
std
lret
and
enter
xchg
ljmp
repnz
xor
hlt
jecxz
aam
cld
adc
out
cld
int3
out
in
xchg
xlat
jecxz
cmp
in
lret
stc
cld
cli
int3
repz
cmc
sbb
jecxz
ffree
cld
dec
fstp
rorl
cmc
clc
cmp
icebp
call
jmp
repnz
aad
fcom
or
iret
enter
into
xchg
repnz
call
lock
fdivr
fadd
out
mov
xchg
aas
or
jmp
cld
dec
repz
aad
cs
cmp
rcl
lock
repz
rol
fisttps
loop
lret
fidivs
int
int3
std
lret
lock
cmp
mov
out
cld
xchg
sti
jecxz
enter
xlat
stc
xor
rcl
xor
jmp
call
call
clc
int
enter
aam
cmp
xchg
mov
leave
test
mov
std
fdivrp
cld
cs
shl
in
call
std
lret
clc
loope
mov
out
in
cmc
aad
xor
shl
repnz
cmp
out
out
jmp
aas
out
in
stc
orl
clc
rcr
xor
cmp
fdivp
int
ljmp
cmp
icebp
fsubp
out
shl
test
hlt
not
fidivrl
out
rcl
jmp
loope
rcr
fadd
or
out
lret
sti
orl
leave
icebp
repz
cmp
ds
mov
cmp
je
mov
jmp
push
mov
sub
incl
mov
push
or
push
mov
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
rol
sarb
aas
rcl
mov
scas
mov
jl
add
cmc
ret
in
test
int
imull
loop
leave
stc
cld
fnstenv
hlt
xchg
cmp
repz
out
test
shl
xchg
in
shl
ljmp
cmp
loope
xlat
ffreep
fiadds
in
mov
sub
lret
ljmp
enter
mul
ljmp
xor
std
lea
icebp
shl
xor
ret
aam
idiv
cmp
int3
into
shl
sti
std
mov
jmp
test
icebp
aad
aad
rcl
in
fsubr
into
in
fcmovnbe
not
loope
stc
std
rorb
int3
test
jecxz
repz
aad
xor
cmp
fucomip
aad
xlat
sti
cmp
mov
lock
mov
repz
fldl2e
aas
aas
imul
cmp
add
clc
loopne
jecxz
in
mov
out
loop
ss
in
iret
leave
jmp
in
xlat
lock
fcmovnb
aam
mov
jmp
in
roll
aam
in
ss
aad
shl
sti
stc
stc
mov
lret
loop
and
jmp
out
xor
divb
fidivl
fcmovnb
xor
cmp
rcr
ret
jmp
fdivr
cld
mov
xchg
aad
jmp
fnstsw
ss
not
out
cmpb
mov
iret
jecxz
shr
sub
shl
repnz
call
out
incl
mov
roll
jecxz
mov
fidivrl
lret
cmp
jecxz
aad
in
mov
out
int
out
xor
aaa
imul
int
lock
shl
roll
mov
call
repz
cmp
in
ds
fmul
aad
loope
les
in
xor
ret
ror
out
ljmp
into
aas
neg
test
in
fmul
in
lret
xor
jecxz
cmp
fucom
fdiv
test
loopne
xlat
faddl
fsub
div
shlb
ss
hlt
aas
ljmp
xchg
test
loopne
icebp
xchg
int
repnz
aad
into
jmp
aas
rolb
clc
testb
adc
iret
repz
hlt
fnstcw
repnz
fsub
xchg
out
lret
ret
fdivs
xor
rcl
fucom
xchg
jecxz
out
cld
mov
stc
enter
xchg
int3
shr
xor
cmp
out
lret
fucomip
sar
clc
test
call
sti
jmp
and
int
loope
test
xor
loope
fdiv
shl
rcl
fadd
rol
loope
mov
lock
loopne
in
stc
std
aam
cmp
out
adc
fcomp
jmp
nop
test
out
loop
xor
int
repnz
fdiv
leave
xlat
ds
cmp
xlat
cmp
ljmp
jecxz
loope
shr
ror
shll
out
sar
loope
xchg
fsubr
cli
lea
rorl
xor
ffreep
cmp
jecxz
fldl
vpsubsb
loop
mov
jmp
lret
lock
cmp
fmul
cld
fsub
aad
cmp
enter
std
out
in
mov
out
into
neg
enter
ss
jecxz,pt
mov
testl
cld
out
rol
lret
jmp
roll
fstpt
aad
in
loop
mov
in
icebp
in
cli
sti
cld
in
rcl
shr
cmp
sti
cmc
out
mov
sbb
out
jecxz
repz
lock
ror
fucom
xchg
adc
in
in
icebp
jecxz
cmc
mov
sub
cmp
enter
repz
imul
jecxz
mov
imul
mov
in
popl
xor
leave
in
lret
aam
and
repz
shl
in
in
ljmp
fptan
xor
xlat
out
aas
clc
cld
cmp
and
testl
xor
imull
cmc
cmc
ljmp
into
hlt
ret
test
fsubp
into
clc
out
xor
icebp
into
xlat
ljmp
loop
mov
fsubr
icebp
fsub
fcmovbe
repz
rol
xor
out
aam
clc
not
flds
neg
roll
mov
icebp
int
in
int3
fucomi
iret
out
adc
ret
stc
mov
test
sar
jmp
mov
loop
cmp
xor
icebp
cmp
loop
mov
orl
add
sbbl
push
neg
jmp
int
aad
ffree
fstp
stos
push
push
ror
repz
jge
jl
in
aas
sbb
fisttpl
aad
xor
in
into
xor
fcmovnbe
std
icebp
fcomp
int3
clc
aaa
into
aad
fcmovne
div
addl
xor
shl
ret
test
fnstsw
fsub
cmc
fldl
mov
loope
lock
out
lret
call
in
addl
lds
leave
int
jmp
int
out
fcmovnu
ss
repnz
in
loopne
fsub
ret
in
stc
fiaddl
sub
loop
int3
cmc
hlt
in
xlat
shl
jecxz
add
mov
cld
jmp
icebp
in
jmp
jmp
call
int3
stc
out
cmp
test
sbb
jmp
subl
xor
repz
aaa
leave
cmp
cli
roll
int3
xlat
in
shl
shlb
lret
ljmp
lock
and
ljmp
xchg
jmp
in
ds
xor
stc
clc
ds
addb
lea
ljmp
in
aad
xor
call
in
std
fcmovbe
and
in
stc
std
mov
test
in
in
out
xor
ljmp
ds
cld
fucom
leave
test
loop
rol
ljmp
int
into
lock
int
lock
aad
xlat
jecxz
out
pop
icebp
xchg
test
shl
in
repz
hlt
inc
xor
iret
add
ret
xlat
test
loope
mov
into
ret
xor
rcl
fstp
aas
ljmp
fcmovnbe
leave
call
mov
xlat
lret
cmp
out
cmp
out
cmp
test
fistpll
fimull
int
int
out
das
fcmovnb
out
out
aaa
ljmp
shl
icebp
fcmovnu
jecxz
sbb
sub
out
rcl
xor
std
icebp
cmp
test
out
test
test
testl
repnz
cmp
shr
cmp
fxch
fldl2e
icebp
loopne
ret
repz
mov
xchg
jmp
fneni(8087
ljmp
jecxz
out
aas
lock
cmp
and
shl
enter
cli
xchg
jmp
xchg
out
cmp
repnz
incl
rcl
cli
imul
out
iret
shr
jmp
sarb
repz
sar
adc
ds
loope
xlat
shl
int3
stc
std
jmp
call
in
lock
out
das
out
fcomp
iret
cmp
xor
sar
hlt
in
loop
jecxz
lret
xchg
xchg
jmp
ror
aaa
cld
int3
fst
cmp
aas
xlat
aad
test
fcmovne
jecxz
flds
fsubr
out
in
xor
out
xor
repz
out
ret
fldl
cmp
std
orl
out
repnz
out
repnz
test
call
clc
cld
cmp
int3
mov
into
xor
into
cs
ljmp
shl
cld
out
aad
mov
test
xchg
xor
xlat
fadd
icebp
rcr
rcr
or
dec
test
sbb
aam
cli
rolb
loope
shrb
int
sarl
cli
lret
into
cmp
stc
dec
icebp
shl
ljmp
int
call
in
lock
shl
sti
int
aas
aam
adc
in
fadds
enter
int3
out
jmp
xlat
call
loope
fnop
add
mov
sbb
mov
xchg
xchg
xor
xor
sub
aas
neg
and
clc
add
ljmp
rol
shl
aad
cmp
repnz
adc
in
ret
out
addb
out
xchg
rol
iret
loop
jmp
jecxz
fsubr
ret
xlat
aad
xchg
sti
out
iret
ret
repz
ret
in
xlat
imul
call
cmp
loope
enter
jecxz
mov
cld
rcll
repnz
xor
iret
sar
out
loopne
in
fcmovnbe
ljmp
mov
shl
and
not
iret
xor
xor
aad
out
cmpl
test
repnz
loopne
loope
test
xor
cmc
cmp
ljmp
lds
call
aas
cmc
xor
jmp
int
jmp
jecxz,pt
test
in
in
in
out
out
out
xlat
lock
ret
cmc
xlat
iret
idiv
imul
cmpb
shl
mov
test
mov
cld
out
out
xor
ljmp
in
cmp
inc
call
inc
add
scas
arpl
push
fs
add
incb
add
inc
add
inc
hlt
out
pushf
clc
sbbl
jmp
rcl
int3
fstp
arpl
test
pop
lret
jl
add
sarb
add
jmp
decl
int
rcl
shr
aaa
out
cmp
cmp
neg
xchg
fadd
mov
aam
mov
jmp
mul
clc
sar
not
rcl
fld
clc
sti
fninit
clc
xchg
shr
shr
repnz
ret
fcomip
int3
xlat
cmp
out
adc
jecxz
repnz
in
repnz
in
out
cmp
fdiv
cmp
call
fchs
xlat
fildl
jmp
jmp
div
sarl
test
aas
sarb
addl
out
int3
jmp
enter
std
jmp
xlat
in
fnclex
out
shr
clc
cli
fcmovb
mov
test
sub
shl
sub
not
in
int3
not
idiv
sti
xlat
sti
repnz
in
stc
fcom
mov
loopne
lds
sti
neg
jmp
fmul
or
rcl
clc
jmp
xchg
and
sarl
shll
out
cmp
fidivrs
repz
shl
fnsetpm(287
clc
fstp
ljmp
and
stc
sub
rcr
aam
iret
in
fstpt
filds
aad
enter
iret
ljmp
idivl
fnsave
lret
sti
aad
loopne
decl
in
in
mov
lret
sti
fmul
leave
cmp
fdivrl
loopne
out
sar
repnz
repnz
mov
mov
test
ss
cmp
loope
cmp
cmp
hlt
aas
xchg
cli
fiadds
sti
loopne
out
out
les
std
std
leave
roll
shl
lret
sar
hlt
loope
loope
nop
loope
mov
cmc
repnz
icebp
enter
xor
cmp
rol
cli
xlat
xchg
out
testb
idivl
in
in
aam
in
out
aad
fucom
ret
stc
lock
repnz
mov
clc
clc
jmp
lock
xor
clc
hlt
sarl
repnz
cmc
sbb
ret
stc
ror
in
jecxz
aad
imul
out
aad
cmp
fdivr
shr
out
testb
sti
stc
out
fucomip
jmp
out
shl
xor
xlat
out
std
jmp
faddl
filds
nop
repz
repz
out
hlt
fdivp
fxch
in
repnz
xchg
roll
lret
test
aas
cmp
sub
fcmovu
fstpt
ds
enter
std
lret
test
xchg
xchg
xor
les
xor
ss
cmp
rcl
call
fcmovu
ljmp
aaa
cmp
cli
lret
idiv
cmp
cmp
cmp
in
mul
shl
sub
loope
lock
lock
jmp
out
out
int
iret
orl
lock
fcmovnbe
cld
hlt
rcl
aad
hlt
fincstp
ffreep
cmp
out
lea
enter
fsub
cmp
cmp
cli
faddl
clc
out
xchg
aad
not
clc
repz
loopne
incl
popl
ljmp
loop
test
fdivr
loopne
cmc
fcmovu
jecxz
dec
into
fsts
sub
rcl
xlat
hlt
cmp
std
clc
fprem
neg
loopne
ret
fsub
cli
in
nop
lock
int
iret
fprem
divb
int3
stc
shl
fcmovu
sti
in
cmp
call
icebp
lret
call
aaa
loopne
not
out
aas
cmc
cmp
sar
repnz
adc
hlt
rol
xchg
xchg
xchg
hlt
leave
stc
call
not
rolb
cli
repz
iret
sub
test
out
shr
enter
aaa
cli
xlat
add
cli
mov
mov
icebp
lock
xchg
cs
icebp
lock
lock
cli
in
rcl
fisttps
call
fmull
sti
call
aad
cmp
ret
inc
imul
rorl
fdivrp
jmp
ds
hlt
aad
repz
aam
into
out
jmp
xlat
lock
call
fimull
enter
imul
int3
jmp
shl
icebp
aam
repnz
int3
out
out
out
in
cs
xlat
enter
repnz
rcr
std
xchg
loop
mov
fdivp
std
repz
ss
xor
fidivrl
xor
idivl
ret
rcr
int
loop
in
adc
mov
out
icebp
xor
aad
aad
out
faddl
daa
xchg
fs
add
push
dec
add
movl
jmp
xlat
enter
enter
xchg
rol
sarb
lret
or
jl
shl
shl
roll
call
cli
hlt
xchg
enter
repnz
stc
aaa
fsqrt
into
neg
sbb
clc
out
testl
sub
ss
xlat
into
lock
into
fucomip
ffree
in
fcmovu
fsub
mov
in
test
xchg
jmp
in
xor
int
iret
shlb
xlat
fcomip
sbb
stc
xlat
out
aam
cld
sbb
leave
xor
in
in
hlt
call
out
sub
fucomp
aaa
int3
icebp
jmp
clc
test
rol
enter
mov
out
cld
and
hlt
xlat
repz
shl
out
fmul
cli
loop
cmc
jecxz
aam
fxch
in
sub
sub
xchg
int3
jmp
shl
fsub
icebp
in
shr
rol
hlt
ss
hlt
rorb
loopne
int
into
mov
out
out
shr
xor
f2xm1
aas
in
hlt
fdivrl
sarl
mov
or
aam
loopne
cmp
fucomp
call
repnz
cli
fninit
ret
sti
stc
leave
sbb
jmp
mov
aam
clc
aam
out
fdivr
jmp
loope
adc
testb
repz
lret
call
cmp
ljmp
out
xlat
loopne
ret
mov
mov
std
xchg
in
repnz
xor
vshufps
fdivr
jmp
clc
rorl
add
call
int3
into
das
sar
int3
cmp
and
fcmovu
fcmovb
rcl
xchg
call
lret
xchg
in
sub
rcl
fsqrt
shl
iret
sarb
lock
out
jecxz
icebp
out
aam
icebp
cli
int3
not
aad
loopne
out
addb
mov
icebp
in
shll
ds
fucomi
mul
idiv
ljmp
fsubr
jecxz
mov
nop
int3
ret
les
sti
jmp
int
out
out
cmp
fsub
fcmovb
mov
repz
mov
stc
fdiv
xor
rcl
aad
call
rcl
sbb
clc
loope
sar
ret
lret
out
cmc
test
call
xor
fcomp
fmull
test
jmp
test
iret
loopne
rcl
out
shl
cmp
aas
icebp
into
shl
test
xchg
xchg
xchg
xchg
shl
test
in
repz
sarl
cmp
xchg
fdiv
testl
xor
loope
in
rcr
stc
iret
lret
fdivp
repz
fdivrl
enter
cmp
jmp
mov
test
fxch
cmp
lret
ss
call
loopne
sbb
fucomip
lret
out
ljmp
aaa
leave
int3
jmp
sar
cmp
fcom
cmpl
faddl
fsub
int3
shr
icebp
cld
in
rol
xor
aas
cli
ss
ss
div
mov
mov
loopne
in
loopne
shl
ljmp
ljmp
enter
fisttps
in
into
in
rcl
hlt
ss
out
fnstsw
fadd
iret
mov
loopne
shl
test
in
sub
loop
out
in
cmc
fcmovne
or
fxch
out
xlat
rcr
test
or
out
mov
mov
ljmp
cmp
cmp
repnz
out
call
in
xor
icebp
aad
call
repz
int3
int
fucomp
shl
aam
ret
fndisi(8087
mov
repnz
xchg
not
aad
not
shr
xlat
sub
fcmovb
mov
aas
loop
cld
adc
out
repz
shl
test
hlt
cmc
ds
out
repz
out
stc
mov
fsub
cli
jecxz
addb
xor
call
lret
test
test
sti
cli
hlt
mov
out
test
int3
iret
shl
in
jmp
out
xor
imul
neg
fdivr
into
and
std
xlat
jecxz
orb
in
call
aad
cmp
jecxz
out
fcmovnbe
fcomp
hlt
out
iret
in
nop
push
xor
mov
repnz
repnz
std
aad
in
loopne
ljmp
mov
xor
clc
icebp
aad
cmc
cmp
shl
in
fadd
aam
out
xlat
loop
mov
lret
decl
enter
cmp
in
iret
cmp
repz
fst
xchg
out
shr
out
loop
stc
stc
loop
fcomi
enter
lret
cmp
rol
jmp
std
sti
fstl
hlt
shl
clc
xor
jmp
sarb
repz
out
call
jecxz
test
repz
loop
repnz
jmp
sti
cmp
movl
jne
mov
movl
mov
movl
mov
mov
movl
jmp
aad
leave
fcmovne
fcmovbe
test
incl
in
enter
jge
jl
loope
loop
cmp
ffreep
mov
std
icebp
clc
ljmp
cmc
out
fidivl
iret
icebp
repz
repnz
out
cld
test
repz
iret
ss
leave
out
ffreep
hlt
fcmovnu
fdivr
std
test
bnd
cli
call
out
nop
std
ljmp
xor
xor
std
cmp
jmp
xchg
xchg
in
mov
out
iret
repz
ljmp
shl
fdiv
mov
sti
loopne
clc
std
cmp
repz
cs
out
enter
in
repz
fpatan
clc
fdivrp
fcmovu
ljmp
mov
in
jecxz
jmp
icebp
int3
xlat
sti
lret
ljmp
mov
test
into
rol
lret
les
enter
jmp
loopne,pt
int
loopne
clc
cmp
call
out
in
roll
xor
cmp
jmp
repz
fistpll
fld
lock
mov
ljmp
out
iret
shr
aam
fidivrl
cld
jmp
sti
int
hlt
ss
mov
orb
dec
ror
repnz
lock
xor
enter
aas
int
not
or
test
xchg
jmp
in
aaa
jmp
repz
cmp
iret
xlat
lock
clc
cli
leave
in
sti
out
stc
mov
test
shlb
sub
jecxz
call
cmp
ret
shl
sti
aas
mov
repnz
hlt
stc
int
clc
or
neg
jmp
int
ss
sbb
fildl
xchg
xchg
jmp
in
in
xlat
cmp
xlat
aas
cmp
sti
xchg
mov
in
sbb
fucomp
jecxz
lret
loopne
rcl
in
out
cmp
fnstsw
mul
loope
cmp
xchg
shl
out
leave
in
cmp
fidivrs
fdivrp
ret
icebp
ds
xchg
fdivr
cmp
out
nop
repz
leave
xor
sti
fnop
ljmp
icebp
neg
mov
std
lret
in
in
adc
loopne
in
sti
aam
div
repz
ds
ret
fdivrp
mov
int3
bnd
inc
hlt
repz
ss
shl
in
sarl
shl
xchg
out
mov
in
icebp
cli
in
adc
into
out
std
out
out
fcomip
aad
fcmovbe
sar
shl
cli
ret
cli
fmul
clc
repnz
aad
not
repnz
les
fsubrs
shl
aam
hlt
iret
icebp
loope
stc
fsubr
fcmovnbe
stc
sbb
aam
jecxz
cmp
clc
fidivl
xor
xor
xlat
out
in
loopne
mov
nop
into
jecxz
hlt
xchg
shl
out
call
fsubrp
repz
cmp
test
ds
repnz
nop
cld
repz
repz
xlat
sarb
fldln2
cmc
shr
fcmovu
fadd
cmp
stc
mov
jecxz
xlat
out
lock
sar
fcmovnu
stc
ds
fsubr
fcmovu
mov
out
lret
aad
in
int
xor
sti
xor
cmp
fmulp
out
fcmovne
cmp
fsubr
xchg
leave
add
out
xor
les
xor
rcr
rcr
cmc
orl
out
rcr
out
in
out
aam
ret
icebp
int3
aam
iret
in
bnd
iret
mov
repz
sub
call
shr
not
icebp
in
cmc
jmp
mov
imul
adc
loopne
loopne
in
lret
cmp
jmp
addl
test
int
in
cs
lret
repnz
fdivr
lock
fcmove
loopne
cli
dec
jecxz
leave
testb
into
hlt
ror
jmp
call
xlat
aas
jecxz
xchg
cmc
div
ret
mov
xchg
out
xchg
in
repz
cs
in
ljmp
aam
mov
frstpm(287
stc
sar
in
ljmp
ror
ljmp
xchg
xlat
mov
orb
std
xchg
div
xlat
cmc
jmp
in
test
jecxz
mov
test
in
in
shl
fdivs
leave
xor
aas
rcl
shl
out
in
out
jecxz
jmp
test
out
into
ficoms
ror
leave
aam
std
cmp
call
lock
mov
add
hlt
mov
in
into
out
icebp
xor
hlt
repz
into
rcl
repz
repnz
call
mov
mov
xchg
jmp
ret
cmc
f2xm1
cmp
sar
ret
icebp
cli
fildl
in
call
clc
lret
lret
leave
cmp
mov
mov
jmp
movl
cmp
jne
or
andl
or
mov
subl
jmp
int3
ds
rcl
iret
or
jnp
leave
pop
jle
jge
jl
xlat
int3
cmp
hlt
clc
cmc
loop
sti
out
faddl
ror
xor
aam
cli
repnz
ljmp
ret
xchg
in
xchg
out
repz
repnz
hlt
ror
fsub
out
neg
aad
lock
test
out
out
cld
loop
in
leave
clc
div
fcmovu
cmp
ret
loope
cmp
repz
test
in
jmp
call
enter
out
sti
iret
sar
in
cld
sar
in
iret
test
loope
repz
lock
cld
enter
rcl
cmp
fsubp
adc
not
std
incb
xorl
iret
xlat
leave
sarl
sar
out
cmp
cli
stc
ljmp
in
ljmp
int3
lock
cmc
int
ret
roll
lret
fsubrp
in
rorb
repnz
xlat
aam
ds
hlt
cli
add
in
call
or
int
enter
jmp
repnz
out
lret
xor
fst
call
stc
fmulp
int3
hlt
out
iret
fdivr
fdivr
cld
aam
clc
sti
shl
xlat
repz
out
shr
sti
int
xchg
icebp
into
xor
xor
fcmovne
lret
cmp
lret
not
hlt
ret
cli
test
fimull
loop
bnd
int3
repnz
addb
mov
shl
mov
jecxz
std
lret
mov
hlt
hlt
lret
iret
xor
shl
int
sarl
cmp
jmp
repnz
clc
iret
in
jmp
in
enter
aaa
in
aas
jecxz
aas
idivl
test
int3
mov
cmp
out
int3
in
iret
cmp
repz
sarl
cmp
test
lret
int
lret
cld
iret
loopne
shr
ror
ljmp
std
and
xlat
clc
hlt
stc
stc
notb
xchg
ljmp
in
fmulp
aad
lret
fcomip
mul
mov
mov
xchg
shll
repnz
ss
fcmovne
ss
mul
fnstsw
xlat
mov
xchg
repz
rol
shlb
aaa
icebp
fcomip
aas
repz
cmc
cmpl
rol
cmp
hlt
fcmovne
sbb
loop
jecxz
leave
xlat
hlt
iret
cmp
in
enter
lret
into
out
stc
ret
mul
hlt
out
xchg
sar
jmp
nop
in
ds
repz
xor
in
out
int
ljmp
faddp
decb
xchg
decb
fucomi
iret
lret
enter
in
clc
mov
int
movb
ljmp
lret
repz
in
sti
vpmulhuw
fdivrp
jmp
call
mov
shl
leave
call
repnz
fdivrp
cmp
call
cli
addl
xor
fcmovnbe
repnz
and
loopne
fildl
mov
in
leave
popl
aaa
lock
in
ret
cmp
fxam
loopne
out
loop
mov
ficoml
aad
jecxz
jmp
fucom
aam
aam
fildl
testl
adc
in
cmc
sub
xlat
cli
sti
sarb
loopne
addb
incl
aad
shlb
sti
iret
fstp
rol
ljmp
cmp
mov
xlat
in
leave
jmp
mov
mov
in
loopne
ret
rcl
out
leave
jecxz
rcl
fnsetpm(287
loopne
cli
int
out
cmp
xchg
xchg
mov
iret
loop
repz
cmp
int
cmc
int3
aas
flds
ret
out
mov
cs
into
cmp
jmp
std
aas
cmp
sar
leave
loope
int3
cld
out
fsubr
jecxz
out
in
fstpt
stc
leave
out
ss
loop
rcl
xchg
fcos
cli
enter
std
hlt
int3
out
stc
xor
std
int
cmp
test
aad
jecxz
in
sti
loope
fstl
int
iret
fdiv
aad
xlat
into
test
std
sar
cmc
loopne
loop
cli
mov
nop
aad
aaa
out
out
ss
int
fnstcw
fst
cld
repnz
shl
aam
in
fldl
xchg
shr
ret
int3
loop
call
aas
fsubr
into
repnz
clc
xchg
fucomip
clc
std
mov
loop
xchg
ljmp
aam
roll
cmp
jmp
int
fmul
fdivp
das
jmp
iret
int3
idiv
fnstenv
repz
fcmove
imul
aam
cmc
ds
lret
idiv
mov
xchg
mov
aam
xor
icebp
leave
sti
cmp
lret
inc
or
add
fs
add
adc
mov
incl
add
orl
push
call
movl
incl
cmpl
jb
movl
jmp
cmp
movl
jmp
ror
int
lret
xchg
or
imul
sti
sbb
jge
jl
repnz
int3
out
les
ret
fadds
int
jmp
ss
xlat
xor
cmp
ss
ret
ret
xlat
loopne
addb
mov
incb
ljmp
fidivrs
roll
test
jmp
iret
int
pop
shr
out
int3
shr
in
lret
clc
cmpl
aam
in
into
addl
aaa
in
cmp
xorb
stc
repz
fisttpll
leave
adcl
cmc
cmp
cmp
clc
repnz
fisttpl
jmp
add
jmp
hlt
sti
leave
cmp
iret
fdivp
shl
jmp
jmp
mov
loopne
fidivl
xlat
enter
aad
hlt
frndint
fxch
cmp
mov
ljmp
loop
cs
sti
lret
aad
stc
fsubr
fnstsw
div
xchg
stc
cli
ds
dec
xchg
enter
in
loope
cmp
ss
xlat
xor
fidivrl
fdivl
cmp
xchg
loop
fcmovne
mov
cld
jmp
and
lock
sub
fsubr
stc
cmp
f2xm1
cmc
int3
ljmp
xchg
das
in
leave
ss
aad
repnz
repnz
test
mov
lea
in
in
divb
fst
cmp
cld
lock
cli
ds
loop
hlt
test
in
xchg
fsub
into
xchg
shlb
shrl
ljmp
lock
cld
sti
ret
xchg
out
in
out
movl
aam
leave
std
int3
fcomip
cmp
out
sarb
shl
ret
jecxz
into
rcl
das
into
call
dec
sti
fadds
repz
ret
mov
decb
faddl
sub
div
sti
cmp
test
out
filds
filds
rclb
xor
cmp
leave
cmp
dec
in
lock
in
idiv
fucomi
mov
mov
lock
sti
shr
shl
sarl
enter
in
in
jmp
xlat
rcl
fadd
jecxz
jmp
call
repnz
loop
in
fmul
icebp
out
clc
ljmp
call
mov
jecxz
mov
xchg
out
in
shl
int
movl
out
cld
mov
fildl
xor
cmp
cmp
idivb
into
aas
loope
out
adc
loop
out
xchg
mov
repz
sar
shll
fcmovu
cmp
cmp
testb
fdivp
out
xor
aaa
sti
xor
shlb
clc
sar
fmulp
loopne
enter
lds
jmp
loop
cmc
enter
aaa
aas
loopne
addb
hlt
out
lret
lret
rclb
xor
int3
int3
ss
fcmovu
sar
ds
jmp
sbb
addl
cmp
idiv
cmp
hlt
sti
aad
rcl
stc
fdiv
test
std
cmc
aam
dec
in
in
ljmp
ret
aad
lock
rcl
ljmp
jmp
out
xchg
dec
out
in
iret
aaa
xor
leave
aad
stc
leave
out
jmp
in
jecxz
repz
mov
in
or
xchg
fmul
in
hlt
shr
leave
cmp
cmp
rcl
ds
repnz
mov
sub
test
jecxz
das
cmp
fnstcw
lret
fmulp
cmp
call
test
fsub
in
loop
fisttpll
div
ret
cmp
xor
stc
aad
adc
adc
loope
in
test
nop
fcmovu
xchg
xlat
shl
iret
idivl
lock
ds
testb
ret
mov
icebp
call
xor
ljmp
aaa
mul
int
aad
hlt
filds
test
xchg
int
in
out
in
clc
fst
int3
xor
lret
xor
ds
lds
sub
cmc
orl
hlt
jmp
stc
jmp
stc
loopne
xor
mov
mov
sti
out
jmp
shl
sub
aaa
rcr
out
test
xor
in
sbb
enter
jmp
out
cs
lds
xor
icebp
lret
rcr
sar
cli
jecxz
mov
int3
repz
in
lock
xor
cmp
in
shr
leave
ffreep
lock
cmp
ret
in
cmc
clc
mov
iret
in
lock
enter
ljmp
stc
shll
test
test
xchg
clc
in
in
jecxz
call
clc
fstpt
leave
cmp
add
xor
or
adc
movl
orl
mov
sbbl
mov
xorl
jmp
rcl
lret
rcl
cmp
mov
mov
jge
jl
in
cmp
out
repz
shr
cmc
neg
fucomp
lds
jmp
xor
ljmp
aad
loop
mov
mov
in
xchg
in
xor
xor
shl
out
hlt
aam
repz
iret
cli
rol
decl
xchg
iret
xrelease
in
repz
sub
cmp
hlt
loope
ds
test
jmp
lret
loopne
push
repz
out
loop
in
ljmp
sar
out
lret
jmp
in
into
fmul
mov
ljmp
xor
xor
fstp
rcl
sti
shl
loope
call
std
ljmp
loopne
ror
repnz
ret
ror
not
clc
int
fstp
repnz
test
frndint
mov
sbb
enter
out
in
fcomp
lret
rcl
sti
loop
ret
addl
call
xor
aam
xor
cmp
sti
ss
repz
loope
enter
fchs
jecxz
mov
lret
imull
cmp
xlat
enter
sarl
loopne
fadds
fst
int3
iret
sti
in
out
loope
das
repnz
lock
cmp
fucom
leave
fsub
xchg
xchg
in
mov
imul
cmp
aaa
cmp
aad
lret
iret
xchg
div
int
in
fcmovne
mov
ret
lret
out
jmp
lock
xlat
ljmp
neg
jmp
dec
ror
loope
lret
xor
clc
out
aam
sbb
aas
mov
enter
fmuls
into
xor
divb
testb
out
ret
loope
fstp
loope
sti
test
filds
jecxz
in
in
into
xor
in
cmp
ljmp
rcl
xchg
ret
out
test
call
aaa
xor
out
aam
shl
in
clc
hlt
faddl
xchg
xchg
xchg
shrl
int
ss
out
ljmp
aas
test
aad
idiv
mov
test
rol
xor
lret
aad
fcomi
rcl
aas
xor
mov
xchg
xchg
xchg
loope
int3
in
out
ljmp
fdiv
shl
test
fisttpl
mov
xor
in
shl
xlat
iret
xor
leave
fst
cmp
in
xlat
mov
addb
fisttpll
into
aaa
ljmp
cmp
lock
loop
sar
call
test
ffreep
sub
lret
aad
lret
in
icebp
icebp
cmp
cmp
lock
repz
test
test
mov
fmulp
in
lock
shl
ss
lret
cld
out
ss
rcr
rolb
jmp
jmp
lds
loopne
ljmp
into
roll
jecxz
leave
fcomp
idiv
lret
loope
jmp
mov
enter
hlt
cmp
addl
mov
mov
into
xor
out
xor
cmp
cmp
int3
repnz
vpaddusb
mov
sbb
xchg
nop
shr
aam
jmp
shl
aad
out
test
ljmp
leave
xchg
jmp
in
xor
aam
xor
std
imul
fcomip
jecxz
stc
std
jecxz
loop,pt
roll
repz
in
loop
aad
ror
into
into
aad
enter
shl
sti
aad
in
xlat
in
int
subl
repz
aad
in
shl
repz
out
fstp
lret
out
jecxz
ret
lret
cmp
fcmovnbe
aam
cmp
cmp
aam
sti
cmp
fstp
sub
in
lret
in
xor
lock
std
lds
clc
call
iret
aas
clc
hlt
cli
cld
loope
cld
out
jmp
xchg
ds
fcmovne
cmp
cmp
out
leave
out
ljmp
in
loopne
jmp
out
fsub
leave
incl
call
cmp
jmp
hlt
aam
flds
mov
loope
incl
ret
int
xor
fcom
loope
test
out
std
in
sti
jmp
jmp
mov
xor
jmp
xor
in
cmc
int3
fnstsw
aam
sti
imul
jmp
out
fcmovnu
xchg
xchg
and
xchg
into
jecxz
repz
in
leave
repnz
aas
xacquire
mov
clc
fucomi
call
aad
imul
repz
xor
cli
sarl
rcr
aad
cli
loopne
in
out
incb
rcl
shlb
idivl
enter
xlat
cli
addl
enter
mov
shr
loop
xor
stc
ljmp
add
jmp
int
iret
rcl
fsts
fs
mov
and
jl
add
aam
fmulp
loop
ret
ret
lret
rorb
iret
lret
xor
lret
out
mul
fadd
aas
clc
cmc
out
out
fucom
loopne
int
out
in
in
hlt
shl
sti
ss
fcomp
fucompp
icebp
adc
rcl
les
aam
lret
leave
sti
lret
call
in
fld
xor
out
xlat
div
int3
fadds
std
aam
stc
in
int3
fucompp
test
add
lds
divl
int
aad
hlt
inc
fmull
jmp
and
jmp
out
xor
rcr
cmc
aaa
testl
ret
aam
out
jmp
nop
xchg
rorb
in
xor
repnz
ds
icebp
into
shl
hlt
test
fadd
mov
div
out
out
into
neg
std
jmp
test
incb
and
loope
out
out
leave
xor
xor
ret
sti
out
lock
aas
iret
in
ret
rcr
xlat
in
cld
int
enter
out
loope
jmp
xor
cli
out
div
fsub
jmp
std
nop
ljmp
fdivr
xor
icebp
enter
int3
loopne
fstp
sar
orb
fcomip
loop
loop
int
xor
icebp
icebp
int3
rol
repz
cmp
leave
int
loop
fsubr
test
idivl
jmp
ljmp
cmc
std
in
ret
not
jmp
out
out
rcl
not
out
cli
std
fmul
ret
cmp
sar
jecxz
enter
sbb
lret
sub
fcom
shl
out
lret
iret
repz
icebp
testb
mov
nop
lret
jecxz
lret
jmp
out
fsub
ret
cmp
rol
cld
repz
idiv
jmp
rolb
in
fnstcw
out
std
aas
sarb
stc
stc
idiv
loopne
repnz
loopne
cld
mov
bnd
cmc
xor
xlat
cmp
sar
aas
fcomi
shl
leave
fdivr
xchg
ljmp
not
xlat
sti
das
clc
sarb
in
xor
repz
mov
fdivrp
iret
fdivr
repnz
ljmp
aam
fst
idivl
jmp
std
int3
repz
enter
leave
xchg
mov
xchg
fldl
lret
ljmp
repz
cmp
repz
flds
mov
lret
aad
stc
repnz
fmulp
int3
cli
fadds
xchg
leave
ret
fsubr
fiaddl
into
aaa
mov
hlt
sti
int
aad
fcmovne
incb
cmpb
loope
loope
mov
jmp
idivb
xor
cmp
cld
cmp
lds
out
fmul
repnz
xchg
out
loop
fxch
ljmp
ret
int3
int3
fdiv
neg
fdivp
call
orb
jmp
lock
enter
shl
fdiv
xlat
call
in
fildl
shl
jmp
rcr
aad
cmp
roll
lds
jecxz
jmp
ds
div
divb
push
shl
fdiv
call
add
in
std
lret
in
out
stc
out
stc
fidivrl
call
ljmp
test
aam
loopne
mov
cld
in
jmp
clc
fcmovnb
out
enter
cli
cmp
rol
jecxz
out
icebp
xchg
xchg
in
not
in
into
idivb
filds
into
sar
xchg
loopne
mov
xor
jmp
lret
call
aam
sbb
orl
xor
ljmp
out
and
neg
rcr
fdivp
jmp
mov
sub
into
test
in
cld
lock
rcl
cmp
rcr
lock
cmp
mov
in
stc
jmp
fidivs
fnstcw
fcom
shl
stc
mov
test
fisttps
repnz
rol
cmc
repz
cmp
fxch
cld
in
ds
cmc
cmp
fadds
enter
and
out
ljmp
sarb
std
loopne
repz
in
sub
fsubr
ret
mov
mov
xchg
ret
ss
cmp
cmp
rol
in
fcomip
in
sti
cli
in
in
and
call
int
cmp
fsubr
sar
shl
cld
ret
std
aam
flds
call
repnz
fdiv
clc
sarl
cli
rcr
ret
fincstp
dec
int
call
mov
xor
out
ror
mov
mov
jmp
ds
aad
aad
aad
movb
lds
jle
jge
jl
fcomi
cmc
sti
int3
sar
out
rcl
lds
imul
out
xchg
lret
shr
loop
repz
out
fsubrp
cmp
loop
rol
mov
std
lret
mov
mov
hlt
xor
out
sarb
icebp
iret
fdiv
std
fdivrs
cmp
fiadds
vpminub
out
mov
in
les
not
fildl
std
xchg
orl
aam
mul
loopne
clc
jmp
cmp
neg
ror
hlt
rcl
mov
and
in
repz
div
int3
xor
cmp
cld
into
cmpb
clc
cli
cli
loop
and
int
call
aam
fdivrp
cmp
cld
aas
lock
call
out
in
fucom
fdivp
call
rcr
cmp
xlat
in
sarb
in
mul
sar
in
sub
les
test
fidivs
fld
aam
cmp
int
hlt
rcl
aad
repnz
std
mov
loope
lret
mov
mov
cld
int3
enter
lret
call
shl
cmp
sarb
xlat
jecxz
ret
mov
addl
into
neg
sti
vpsubb
aaa
jecxz
ret
xchg
ret
mul
ret
stc
xlat
jecxz
mov
lock
xchg
lret
lock
fucomi
shr
cmp
std
cmp
enter
xlat
fucomi
call
aaa
ret
ljmp
xor
fistpll
neg
xlat
out
cmp
std
ret
out
enter
int3
int3
jmp
in
call
fidivrs
repz
cld
ffree
lock
loopne
leave
sti
fucomp
int3
xchg
jmp
std
cmp
cli
stc
cld
sarl
out
rcr
addl
out
test
fmulp
aam
repnz
in
jmp
int3
out
and
cmp
xchg
jecxz
mov
xor
cmc
cmc
aad
in
in
shr
fdivp
filds
sbb
add
jmp
loop
lret
loop
jmp
loopne
in
cld
stc
test
orl
fdivr
int
not
jecxz,pn
leave
ftst
into
xor
repnz
out
idiv
ret
fsubp
leave
rcr
nop
int3
aad
out
fucomi
enter
out
lock
fdivrl
fchs
fucomip
mov
lock
fnstsw
rcl
xor
hlt
out
fcmovnbe
shl
iret
aam
out
aad
loopne
aam
int
fdiv
std
xchg
xchg
out
shr
in
das
jmp
cmp
cmp
xchg
fsubrp
lds
in
std
std
les
jecxz
cmp
aam
in
fcmovnu
repz
in
mov
enter
cs
leave
int
in
fcmovnbe
hlt
int
sar
out
xlat
jecxz
ljmp
adcl
jmp
out
shl
fdivrs
lock
fldln2
loope
loopne
test
mov
out
divl
stc
sti
out
hlt
shl
ss
rol
aas
fninit
fdiv
cmc
xchg
or
cld
addb
xor
ljmp
xlat
xchg
jecxz
testl
out
shr
call
fistpll
out
hlt
aad
test
cli
int
call
out
into
cmc
repnz
rcr
icebp
lret
out
out
cld
aad
mul
cld
rclb
xlat
shlb
xor
stc
aaa
lret
sbb
aaa
clc
decl
jmp
clc
ljmp
loop
fst
in
ret
jecxz
xchg
icebp
into
and
in
ljmp
fucomp
mul
fistpll
repz
incl
stc
stc
loop
icebp
int3
out
hlt
xchg
shlb
loop
fstp
xlat
cmp
shr
lret
div
stc
mov
mov
addl
adc
sub
in
fsubr
ds
ret
cmp
loope
mov
sub
int
hlt
lret
aas
hlt
int
faddl
adc
ljmp
lret
out
ds
in
shl
xor
jecxz
loopne
stc
rol
int
call
mov
loopne
out
jmp
cmp
shr
cmp
aam
ffreep
fidivrs
sti
ret
enter
mov
xchg
xlat
repnz
std
in
cmp
fcmove
cmp
ret
loop
shl
cmp
loope
fsubrp
xchg
in
div
cmp
in
fdivrp
sarb
loopne
jmp
or
fmull
ljmp
cmp
repz
and
cli
jmp
filds
xchg
hlt
icebp
xor
ss
xor
jmp
rcl
aad
aad
rolb
push
xlat
push
mov
jge
jl
in
icebp
aaa
xlat
ds
loop
cmp
jecxz
clc
stc
mov
fsubrp
xchg
divb
fdiv
clc
ss
shr
xchg
test
les
mov
jecxz
lret
repz
fdivrs
cli
rcr
in
hlt
or
fstp
test
mov
ljmp
ljmp
in
stc
cli
test
ljmp
loope
lock
cmc
out
aaa
cld
aas
cmp
roll
stc
mov
mov
in
incl
ret
cmp
cmp
int
aam
ret
into
cmp
sarb
mov
cmpb
ror
lock
idivl
int
sti
cli
cld
aas
sar
cld
fsub
cmp
leave
xlat
out
mov
int
xchg
sub
call
sti
icebp
xlat
aas
jecxz
cmp
fsubr
jmp
jmp
in
nop
shll
xor
in
aam
lret
loopne,pt
rcr
rol
shl
fcmovu
fdivr
loope
fucomi
in
fmulp
clc
stc
in
aad
sti
aam
rcr
loopne
fdivr
mov
incb
stc
fdiv
cli
in
sub
lret
iret
cmp
xlat
aad
adc
hlt
cli
out
add
out
ror
std
clc
cmc
enter
ds
fcomp
out
in
aad
add
loope
int
cmc
shl
shl
out
leave
cld
cmp
cmp
cmp
sti
shl
std
fcmovbe
leave
movl
clc
out
hlt
cmp
cmp
clc
sti
movl
call
sub
in
lret
fldl2e
out
cmp
fcmovnu
loope
in
decb
out
lret
test
out
clc
hlt
out
lret
fyl2xp1
mul
sbb
lret
cld
in
test
xchg
in
out
aam
shl
in
clc
int
out
fstp
sbb
leave
shl
ret
icebp
mov
xchg
jmp
lret
repz
cmp
cli
xlat
icebp
idivb
cmp
out
cmp
stc
icebp
enter
in
cli
int3
out
test
enter
in
shr
int
int
fdivrl
in
test
iret
jmp
divb
in
jmp
std
in
int
fsub
testl
stc
test
icebp
stc
cmp
xor
cmp
std
ss
cmp
std
enter
fsubp
mov
ret
iret
out
jmp
ljmp
aas
addl
mov
jmp
cmp
out
shl
in
loope
xor
cmpl
enter
orb
jmp
repnz
aam
cld
aam
cmc
cmp
jecxz
mov
ljmp
lret
aam
test
rcr
fcmovu
loop
not
test
ret
in
int
mov
fmulp
cmc
divb
std
cmc
into
lret
fidivrl
jecxz
out
cmp
dec
sti
incl
xor
xor
aad
into
ljmp
fcmovnu
fadd
or
jmp
sar
lret
ret
loopne
loop
hlt
cmp
fmul
fld
out
rcr
fdivr
out
fadds
loopne
aam
enter
lret
fnop
fiadds
hlt
out
ret
std
out
ret
sti
fdivp
into
mov
repnz
cmc
cli
rcl
cmp
loop
int3
loop
cli
decb
test
fmul
repnz
in
in
in
int
in
fcmovne
fucomip
in
enter
cmp
repz
lret
cli
stc
out
cld
hlt
lret
xor
fprem
enter
rolb
cmc
repz
xchg
xchg
jmp
ret
lock
aam
ljmp
cmc
mov
fcmovnb
fcmovne
decl
and
aaa
fdivs
cli
cmp
cmp
cmp
rcl
idivl
loop
test
nop
in
cli
ror
xlat
cmp
leave
repz
cmp
in
repz
out
enter
loope
or
mov
das
sub
sti
out
cmp
sarl
cmc
ret
aam
hlt
into
stc
fcomp
fimull
mov
xchg
xchg
das
rcl
divl
in
rcr
aad
cmp
aad
repz
incb
ljmp
shlb
out
not
rcl
loop
aas
cmc
loopne
jmp
out
icebp
lret
fucomip
lock
int
ljmp
shl
frndint
aad
cmc
ljmp
fmulp
mov
rcl
std
into
int3
cmp
shl
lock
add
loop
fcomp
fimuls
aad
xor
fsubr
add
mov
lea
mov
mov
xor
add
mov
lea
jmp
into
aad
int3
fcmovnu
aad
add
sub
ret
xor
jl
stc
out
int3
shl
fsub
into
iret
aam
jmp
int
fucomip
lea
out
ss
in
in
xor
shr
int3
shr
out
neg
mov
in
in
out
out
ljmp
iret
cli
int
aaa
lret
sarl
roll
cmp
std
sar
into
fcmovb
int
cmp
xor
std
shl
cld
in
out
xor
lret
sti
orb
or
int
hlt
stc
shl
hlt
xor
addl
stc
mov
iret
test
fcmove
cli
rolb
cmp
stc
orb
jmp
lea
repnz
cmp
rcl
cmc
cmp
cmp
mov
xchg
loopne
fdivp
out
fxch
fucomp
stc
inc
out
xor
xchg
rcl
leave
jmp
fdivrp
loope
aad
int
in
leave
xor
cmp
aas
fldl
cmp
jecxz
xchg
stc
mov
fimuls
xor
xor
aaa
repnz
in
cli
lock
rcl
fdivr
out
mov
fiadds
xlat
xlat
cmp
in
out
call
loope
out
jecxz
fadds
xchg
jmp
mov
fcomip
lret
fdivs
cmp
aaa
cmp
sar
ret
in
mov
fisttps
in
enter
lret
stc
aam
shl
ss
cmc
in
aas
ds
sti
clc
jmp
call
jecxz
xor
rol
cld
cmp
addl
fadd
stc
aad
movb
aaa
shl
out
xor
xor
lret
xchg
cmc
in
aam
mov
out
int3
loopne
in
out
enter
xlat
fnstcw
xlat
ror
int3
repz
std
mov
out
aam
loopne
out
incl
int
cli
rcl
aas
fcmovu
sar
into
aas
cmp
jecxz
call
fsubrp
test
in
in
cmp
cmp
shlb
leave
loopne
icebp
repz
lret
lret
out
test
into
hlt
cld
in
cmp
in
repz
icebp
loopne
fsubp
mov
cld
enter
out
out
cmc
ljmp
cmc
ss
aam
cli
aam
fptan
ret
hlt
mov
test
in
std
out
xor
cmc
in
xor
cmp
repnz
aam
cmc
incl
cmc
addl
lock
shlb
out
out
div
cmc
cld
fcmovbe
jmp
hlt
repnz
orl
cmp
shl
aam
cmp
rcl
hlt
in
rol
cli
cmp
icebp
fcmovu
out
jmp
das
aad
aad
imulb
stc
out
cld
ds
xlat
xlat
out
out
in
ret
cli
cmp
sub
xlat
lret
fst
repz
sarl
rol
cmp
repz
ret
out
jmp
sub
cmp
icebp
sarb
std
frstpm(287
int3
test
loopne
cli
lret
xchg
sti
jmp
out
jecxz
cs
clc
lock
sarl
out
cmp
loopne
mov
roll
in
int3
neg
call
fnstcw
cmp
in
jmp
xlat
faddp
fdivr
int
in
hlt
and
fyl2x
bnd
cmc
lret
into
cmpb
cli
cmc
loope
enter
lret
sti
and
lock
call
sbb
test
aam
faddl
orl
cmp
jmp
sarb
frndint
in
in
cld
mov
aas
enter
out
cmp
out
out
call
fldz
shl
fcmovu
aam
int
mov
into
test
out
int3
fsubr
iret
enter
sarb
shl
in
cld
jmp
out
in
nop
mov
sub
shl
sub
sti
cmp
lret
div
test
ds
mul
enter
clc
xacquire
stc
aad
aaa
clc
cmp
cmpl
cmp
xchg
loopne
enter
lret
xchg
xchg
mov
fdivrp
out
icebp
fstpt
cmp
cmp
filds
in
int
out
enter
in
ret
in
aad
aas
shr
fsubr
lret
out
cli
fsub
orl
cli
cli
xchg
int
das
xor
ror
xor
aam
stc
xor
leave
in
enter
in
xchg
fucomp
xor
aaa
in
in
loopne
loope
cmp
aam
out
mov
sti
loope
call
out
icebp
das
ss
lret
aas
call
fdivr
loopne
add
aad
test
nop
mov
jecxz
mov
ljmp
xor
jmp
ror
ror
rcr
frstor
pop
sub
jne
data16
jl
add
aam
enter
cmc
test
fldl
clc
ljmp
in
repz
leave
std
xor
sar
stc
ror
ret
lock
cli
cli
jmp
xchg
xchg
cli
jmp
aam
ret
lret
call
hlt
lret
shlb
cmpl
test
idiv
cld
fninit
jecxz
nop
in
in
loop
repnz
not
cmc
leave
cmp
aad
into
hlt
aam
in
int3
div
lret
in
test
repnz
into
clc
aas
cmp
shl
neg
sarl
leave
out
mov
cld
xchg
out
icebp
clc
xor
imul
xor
test
loop
orb
or
xor
repnz
cmp
cmp
lret
shl
fst
fdivr
mul
neg
mov
sti
out
mov
xor
loopne
out
cmp
repnz
loopne
sub
xchg
shl
fadds
xchg
test
sar
int
loop
icebp
iret
repnz
ljmp
loope
test
iret
lret
mov
xor
fcmovbe
lock
cmp
sar
xchg
lret
xchg
iret
lock
jmp
div
lret
cmp
repnz
shl
loopne
ret
fcmovnb
cli
in
mov
icebp
loopne
lret
hlt
sub
cli
imul
cmp
icebp
fcmovb
movl
out
iret
xchg
shrb
aad
rcr
lock
ljmp
hlt
jmp
clc
fcmove
out
iret
fisttps
ss
xor
in
ror
fsub
ljmp
add
int
repz
in
mov
aam
ret
stc
std
int
lock
xlat
int3
cli
xlat
std
cld
out
fdivrp
lds
xchg
mov
xor
iret
std
lret
cmp
leave
repz
aas
aad
test
ret
and
fsubr
sub
test
ret
cmp
int3
ss
jmp
int
int
ds
shl
fcmovu
in
fmul
int3
rcll
repz
fidivrl
cmp
out
sti
fldln2
addb
fsubrp
xor
lret
jmp
shl
stc
shr
cmp
ss
cld
std
sbb
fprem
xlat
sti
sti
leave
test
add
ret
sub
out
out
roll
inc
aad
cmc
in
adcl
shl
sub
leave
call
cmc
repz
std
mov
lock
in
lock
cmp
iret
out
sbb
neg
lock
fucom
sbb
icebp
repz
int3
rcl
rcr
not
repz
cmp
cmp
mov
fadds
lea
xor
mov
fiadds
jecxz
xor
mov
fimull
lock
fstpt
cmp
fdiv
ss
aas
test
jmp
jecxz
cli
in
xchg
int
xor
in
fcomi
iret
cli
call
cmc
icebp
ret
fneni(8087
ret
cld
ljmp
lea
in
jecxz
xor
xor
cmp
aas
lock
fsubp
leave
addb
xchg
sub
leave
cmc
fxch
lock
lret
int3
cli
rol
shl
ret
clc
aas
testl
in
loop
clc
xor
rcr
enter
mul
div
xchg
fisttps
jmp
xchg
adcl
repnz
cmp
into
icebp
mov
fucomp
xchg
loop
xchg
xchg
cmc
call
div
out
cmp
hlt
in
fnstcw
jmp
jmp
loopne
ror
jecxz
clc
int
in
xor
test
in
ffree
mov
out
out
std
orl
cs
int3
cmp
out
loope
loopne
cmc
in
out
mov
icebp
decl
xor
leave
cmpl
aas
out
icebp
clc
ljmp
xchg
mov
xchg
mov
test
cld
out
fcmovbe
fcomip
ret
ljmp
mul
fucom
cld
jecxz
jecxz
lock
stc
test
cmp
lock
cmp
lock
fadd
aad
enter
out
in
loope
out
xor
into
fxch
cld
hlt
xor
sar
test
sar
shl
rcl
out
mov
ret
out
fistpll
shlb
in
repz
fsub
fcmovnbe
aas
repnz
in
loope
hlt
loope
addl
out
aad
out
cmp
ljmp
push
les
in
in
ffree
addb
ljmp
cmp
fdivrp
int3
aad
ffreep
sti
std
orb
mov
test
divb
pop
add
lret
leave
lret
rol
loop
cmpsl
jecxz
sarl
jl
add
shr
frndint
fucomp
adc
in
idiv
lret
test
xchg
into
shr
out
in
idiv
stc
aam
aas
stc
into
jecxz
clc
cmp
fcmovu
test
fsub
and
icebp
int
stc
cmc
out
in
clc
lret
cmc
int3
call
idivl
aad
aam
std
mov
lret
das
xor
mul
cmc
cmp
icebp
aam
int
cld
cld
fneni(8087
lock
xchg
lret
mov
ficoms
lock
fpatan
aas
cmp
jmp
xor
ds
xchg
shl
ret
jmp
stc
mov
lret
int
int3
repz
fdiv
jmp
addl
enter
iret
loopne
rcl
das
ret
out
aam
call
ret
into
loop
out
test
cmc
ljmp
out
cli
addl
cmp
ss
call
sbb
add
out
mov
sbb
nop
shl
shl
fptan
lock
shl
lret
cmp
int3
cld
mov
cld
int3
loop
loope
jmp
shlb
out
xor
call
call
iret
fdivrs
ds
ljmp
in
lock
xor
jmp
out
xlat
in
div
in
fcmovne
mov
lret
ret
repz
fcomi
aas
xlat
lret
clc
cli
repnz
div
aam
cli
lret
loopne
xchg
fists
aam
cmp
cmp
int3
out
cmp
aad
mov
mov
cmc
out
ret
in
stc
stc
fucom
ds
clc
lock
xchg
loope
loop
test
fdiv
in
shr
xor
aaa
xor
cmp
lret
aam
sar
out
jecxz
rolb
mov
ljmp
lret
cli
cmp
hlt
iret
fyl2x
shl
lret
fiaddl
repnz
aad
ss
ss
out
jmp
in
inc
mov
fmul
loope
std
loop
loop
das
shrl
ret
into
fmul
cmp
shr
jecxz
incb
int3
in
in
call
in
clc
fstpt
fstp
lret
cmp
stc
ds
clc
fcmovnbe
jmp
ljmp
sti
std
in
jecxz
imulb
out
enter
ss
enter
inc
cmc
shl
ffree
lret
sbb
fxch
incl
enter
aam
std
aam
cmp
repnz
and
not
clc
ret
loopne
enter
loope
enter
in
cmc
xor
fnstsw
cmc
in
ret
testl
adcb
repnz
in
icebp
lret
cli
in
cmp
into
out
aas
fdiv
ret
xchg
fstp
out
shr
out
in
repz
cmc
icebp
hlt
cli
repz
repnz
sti
aad
cmp
cmp
iret
mov
in
out
lret
in
clc
ss
shlb
jecxz
fcom
cmc
out
leave
and
mul
fcoml
fucomip
xlat
out
out
repnz
hlt
cmp
repz
sub
fst
mov
mov
xchg
jecxz
in
out
fdiv
into
cmp
div
idiv
sar
loopne
loopne,pt
aad
idiv
stc
mov
mov
addb
xor
in
fpatan
in
cld
fadd
cld
shl
faddp
aam
clc
div
std
mov
leave
mov
and
sarl
cmp
in
cld
cmp
clc
rol
cli
cmc
jecxz
in
orl
sub
aas
ds
out
int3
in
xor
rcr
incb
sbb
mov
enter
into
repz
in
clc
iret
fcmove
std
std
aam
cmp
test
into
loope
cmp
mov
loope
xchg
subb
out
cli
leave
icebp
fucomp
iret
xor
aad
imul
in
mov
mov
enter
int3
ret
jmp
int
iret
rcl
sarl
int3
loop
lock
sti
cmc
lret
cmc
jmp
test
mov
in
ss
fsubrp
shr
shl
lock
loop
mov
in
loopne
fmul
fucom
loop
call
jmp
rcl
loope
cld
icebp
loopne
jecxz
ror
cld
sti
cmc
loop
icebp
nop
fsub
cmc
repnz
fldt
out
sti
repz
repz
call
call
xor
int
jmp
fldl
in
cmp
fprem1
ljmp
out
out
aas
lret
xor
dec
hlt
cli
out
xlat
cmp
test
fcmovu
loope
loope
repz
into
jecxz
hlt
ret
ss
aad
cmp
xor
icebp
in
aam
add
aam
lret
in
ror
jecxz
xlat
jmp
aas
sub
ret
stc
aad
mov
aam
xchg
int3
fcmovne
addb
inc
add
sub
jmp
rcl
mov
neg
repnz
inc
inc
out
ds
jge
jl
repnz
repz
aad
cmp
loopne
roll
in
lds
test
shr
jmp
call
cmpl
leave
xlat
in
mov
mov
nop
out
out
fcomip
fsub
stc
repz
repz
jecxz
ret
xchg
fsubr
loope
xchg
xor
mov
lret
aam
not
rcr
cmp
loopne
loope
mov
enter
mov
sbb
sti
out
ss
cmp
cli
xlat
stc
leave
ret
int3
xchg
decl
ret
xor
lret
ss
cmp
repnz
sti
ds
iret
fdiv
rcr
ljmp
mov
icebp
divb
ror
fxch
test
aad
iret
out
out
nop
lret
fsubp
cmc
aam
cmp
aam
lock
cli
int3
shl
std
jecxz
sbb
fstp
xchg
jmp
in
rol
aam
into
fcmovnb
cmp
lret
clc
repz
lock
leave
jecxz
fildl
cld
in
cmc
leave
test
rcl
into
iret
ret
neg
cmp
and
out
fsub
lret
shr
rol
aad
stc
out
ss
loope
in
rcl
out
stc
lret
xchg
cmp
jmp
lret
cmp
fcmovbe
ror
iret
aam
jmp
in
mov
ljmp
lret
cli
lret
hlt
rcr
int
fdiv
neg
sbb
jmp
int
jecxz
fldl2e
shl
aad
stc
jmp
iret
cmp
sbb
shl
ret
cli
mov
ret
fcomi
lret
ljmp
cmc
fmul
call
out
shr
mul
clc
imulb
not
std
cld
lret
aad
ror
sti
sub
decb
loop
loope
aad
jmp
out
push
fucomp
xor
movl
jecxz
mov
jmp
lock
cmp
shl
fsub
cld
xchg
dec
lret
enter
into
rcl
cmp
xor
fdivrl
out
adc
fldl2t
jmp
cld
incb
cmp
lock
cmp
lret
xor
shr
cld
shl
ret
or
lret
in
ffreep
rol
cmp
cmp
fmul
in
sar
ds
jmp
jecxz
mov
rol
enter
out
lds
cmp
ljmp
ret
ret
icebp
ret
rcr
call
cld
mov
stc
call
out
rcr
jmp
and
std
cmp
testl
sub
into
in
cli
out
cmp
lock
cmpb
loop
mov
lock
loope
lret
stc
fcmovu
lret
aad
lock
out
cmpb
mov
int
mov
jmp
in
imul
jmp
out
sarl
aad
rcr
shr
fdivp
ljmp
xchg
xchg
shr
das
repnz
cmp
out
fcompp
imul
cli
sti
cmp
loope
fisttps
fucomp
neg
xlat
clc
lock
into
fmulp
shl
cmp
cli
les
iret
fcmovnbe
int3
test
xchg
cs
in
xor
int3
jmp
iret
into
neg
xor
hlt
fdivrp
mov
out
and
mov
jmp
shl
std
cmc
icebp
fdivrl
into
out
sar
cmc
cli
lret
vpsllw
mov
repz
xor
jmp
cmp
ljmp
hlt
mov
test
lret
leave
lret
int3
xor
call
iret
hlt
cmp
cmp
addb
mov
int3
mov
cmc
imul
fsub
call
cli
not
repz
rolb
fimull
lret
lret
xor
loopne
xlat
loopne
cmp
in
cmpb
in
ror
call
rcl
lret
lret
loopne
clc
sarl
iret
icebp
ds
aad
call
adc
ljmp
jmp
int
aam
stc
ret
in
jmp
test
int3
std
xchg
loopne
mov
leave
in
jmp
cmp
into
fcomp
lock
loope
hlt
out
movl
fidivl
xor
icebp
out
loopne
ror
fcomi
fcmovnb
xor
mov
lret
sar
hlt
icebp
in
sarl
into
fidivl
fucomip
ds
cmp
xor
call
mov
ljmp
repnz
xor
enter
sar
vaddsubps
fsub
test
mov
int
pushl
call
jmp
jmp
int
mov
cmp
xchg
inc
fwait
cwtl
aas
leave
jle
jge
jl
in
aad
fcmovnbe
sti
lret
aam
cmp
cli
cmp
fcmovnb
ret
cmc
ljmp
mov
cld
faddp
out
cs
fdivr
sti
xor
out
icebp
fcomp
test
cmc
fcmovbe
mov
xchg
in
fidivrs
int3
lock
or
shl
mov
ret
loopne
orl
out
lret
in
out
aad
fdiv
les
sub
repnz
jmp
int3
fadd
xor
cmp
cmp
fcmove
fsubr
iret
out
xchg
out
add
aaa
repz
call
cmp
out
clc
clc
sub
jmp
jmp
mov
loop
xor
enter
fidivl
in
cmp
shl
std
ret
ret
cmc
aad
in
fucomp
mov
ss
lds
int3
jmp
rcr
rol
jmp
jecxz
test
mov
in
jecxz
leave
in
std
cmp
lret
addb
repz
xlat
out
std
into
into
jmp
mov
repnz
loopne
rolb
cmc
aas
mov
mov
icebp
int
icebp
icebp
cmp
ljmp
int3
fst
sti
std
out
ljmp
cld
roll
rol
xor
cmp
rol
rcl
hlt
hlt
test
xlat
mov
int3
iret
enter
xchg
mov
out
repnz
std
repnz
icebp
cmc
stc
fcom
ss
hlt
in
loope
mov
ljmp
fstpt
test
int
in
std
lds
in
enter
lret
aad
ds
lret
cmc
out
cs
shr
cli
std
fdivrp
fadd
in
fdivr
into
out
adcl
lock
cmc
hlt
sar
aam
inc
call
in
loop
fsub
in
out
xor
in
xor
rol
cli
cmp
sti
rolb
int3
ljmp
lret
divl
out
in
rcr
rcl
stc
ret
std
into
ret
repnz
in
in
call
aam
in
loopne
out
sar
aam
rcl
iret
loopne
and
in
div
mov
test
sub
addb
aam
cli
aas
lock
int
xor
add
aad
mov
iret
sti
in
ljmp
xor
in
cld
fsubr
cmp
faddl
aam
test
loop
mov
out
loope
clc
ret
cmp
cli
int
iret
sar
fdiv
test
leave
xchg
jmp
in
cld
fcmove
xchg
rol
ret
fdivs
aad
int3
fnstcw
sarl
shl
orb
or
cmc
rcl
cli
icebp
fcmovbe
aaa
cld
div
iret
ret
decb
fisttpl
int3
mov
ret
fcmovb
ljmp
loope
cmp
imul
loopne
ret
xchg
sub
cmc
aad
call
cld
addl
loop
imul
call
int
repnz
repnz
aad
ljmp
add
sar
enter
int3
xchg
loop
fucomip
jmp
int
clc
std
fidivrs
cmp
repz
fldl
testb
aas
fdivrp
xor
into
xor
clc
sarb
int
rcr
sar
not
jmp
sti
orb
mov
lret
fmul
int3
ljmp
cmp
ret
sti
xchg
in
ret
mov
jmp
repnz
lret
sub
test
test
fucomi
sti
enter
iret
aaa
hlt
lret
shl
call
aam
cmp
xchg
out
icebp
xchg
loope
das
ret
ljmp
enter
aad
stc
lds
ljmp
call
jmp
int
ss
std
enter
idiv
test
hlt
flds
cld
fsubp
out
lret
repnz
ret
fxch
clc
test
sar
out
aam
fcmovb
stc
fprem
fst
fsub
lock
jmp
fdivr
cmp
clc
icebp
fstpt
aad
sti
in
out
loopne
jmp
into
jecxz
jecxz,pt
lock
xor
clc
into
loop
loop
leave
mov
out
in
sti
loop
dec
adc
shl
enter
ss
lock
out
cli
ffreep
add
ljmp
xchg
cmc
in
shr
cmp
out
iret
sbb
lock
test
frndint
mov
aam
hlt
lds
ss
cmp
out
repz
fmul
sub
enter
cmp
add
jne
mov
xor
add
mov
mov
mov
jmp
rol
leave
rcr
fstp
lds
mov
pop
cmp
jle
jge
jl
lret
lret
jmp
int
in
rolb
fdiv
std
fsts
mov
icebp
repz
xor
int
iret
fdivp
repz
cmp
cmp
loop
loope
stc
in
sti
int3
ror
mov
shrb
xor
shl
out
aam
in
repnz
ret
cmc
std
cld
mov
hlt
add
int3
loopne
cmp
leave
icebp
cmp
into
cmp
xchg
int3
lret
out
jmp
mov
call
imul
loop
fst
leave
int3
in
fcmovnbe
test
ffreep
aam
neg
jecxz
fsubrp
and
loop
xor
ret
repz
call
clc
test
xchg
out
fadds
decb
loopne,pn
leave
jmp
or
lock
ljmp
test
loope
in
aaa
in
icebp
lret
out
hlt
aas
fdiv
vcvttpd2dq
mov
call
mov
lret
xor
into
cli
cld
cmp
loopne
xor
out
movl
jmp
mov
xchg
jmp
shlb
lret
clc
out
sti
cmp
aas
aad
cli
cli
and
ds
xchg
jmp
in
divb
out
sar
int3
jecxz
sub
add
flds
lret
sub
aas
fsubrp
fcomi
shl
cmc
sti
out
jmp
cmp
inc
loope
mov
lret
fdiv
jmp
in
int
test
hlt
repnz
adc
mov
std
sti
mov
jmp
xor
in
aas
lock
repz
fcmovnbe
fnsetpm(287
cmc
mov
loopne
add
lock
call
ret
test
out
neg
out
faddl
in
fucompp
test
mov
in
aaa
iret
neg
fstp
int
roll
std
clc
fnsetpm(287
jmp
shl
ror
loop
ret
ret
das
aaa
xor
int
in
ret
ret
repz
mov
inc
decb
xchg
subb
repz
aam
out
cmp
ret
fcmovbe
adc
mul
mov
ror
fdivr
int
lret
enter
leave
lret
not
fsub
fcmovu
adc
in
orb
test
cld
fimuls
out
aad
cld
cmc
repz
std
mov
mul
hlt
cmp
enter
cmc
in
repnz
div
cmp
xchg
aam
loope
mov
in
lea
aad
enter
shl
cli
cmp
lock
out
fndisi(8087
enter
out
enter
jecxz
aam
lds
out
lret
enter
clc
loope
hlt
fmul
loop
int3
loop
jecxz
cmc
out
in
icebp
cmc
out
cmp
fcmovb
cli
stc
loope
aam
fmulp
fadd
orb
int
test
xor
cmc
in
cmp
enter
iret
add
and
fadd
mov
or
in
ret
clc
enter
fnstsw
int
test
mov
in
mov
mov
mov
in
in
stc
int3
out
call
ljmp
sar
fcomi
sub
cli
loopne
ror
int3
clc
clc
stc
cmp
fdivrs
fcomi
ds
loope
or
fucom
xchg
fsubr
mov
or
in
sub
ret
ljmp
ror
ret
shr
hlt
loope
into
stc
mov
in
out
repz
in
iret
int
fcmovbe
call
sti
not
fucom
fisttps
loop
xchg
xchg
repz
ljmp
out
out
and
aaa
iret
xchg
addl
lret
fcomi
out
cmp
push
incb
clc
cld
cmc
mov
mov
enter
xor
aaa
cmp
jecxz
std
fadd
cmp
roll
out
cmc
lea
mov
cmp
cmpl
cmp
shl
fsubr
jecxz
sub
fsubrp
xchg
icebp
fldl
jmp
cmp
lret
shr
test
sti
rol
cld
mov
jmp
in
xor
in
into
aam
cld
in
div
aas
cmp
sbb
out
clc
fucomp
call
jmp
enter
aas
cmp
lret
in
aam
out
loope
clc
jmp
int
fmul
test
cmc
loopne
rcr
fsubr
into
ds
in
cmpl
ret
loopne
lret
test
mov
fcos
clc
out
loope
ret
jecxz
ljmp
into
cmp
loopne
aad
loope
mov
cld
int3
loop
shr
icebp
lock
test
fidivrs
sbb
fincstp
xchg
sti
in
out
std
sub
mov
mov
push
pop
sub
add
jmp
ds
rcr
fst
xlat
xchg
icebp
mov
popf
jge
cmp
add
shl
into
in
cmp
into
cmp
rol
fdivrp
mov
mov
stc
mov
loop
lea
in
rol
aaa
xor
loope
aad
out
fstpt
into
cmp
cmp
cli
call
loopne
iret
fxch
aaa
sti
ds
cmp
shl
out
stc
ljmp
nop
hlt
jecxz
xor
xor
hlt
out
fmul
cld
cmp
call
icebp
repz
dec
neg
jmp
fst
in
fbstp
stc
in
sar
lret
in
jecxz
stc
repz
mov
test
or
xor
fdivl
xlat
cmp
fucomp
iret
lock
cld
mov
lock
or
repz
fcmovnu
not
repnz
jmp
jecxz
cmc
repnz
xchg
loope
enter
in
fldl
out
in
jmp
cmc
out
or
loop
ret
lock
ret
mov
int
fsub
addb
ss
repz
cmp
aam
sti
aas
in
leave
fadds
jmp
and
hlt
aam
xor
into
jmp
fcomp
sarl
in
rcl
fstp
cmp
aam
test
mov
sti
clc
and
fcomip
xor
int
shl
in
into
sar
shr
aam
rol
orl
rcll
xor
shr
in
cmp
clc
fcmovbe
repnz
std
fstp
in
jmp
aam
xor
out
call
sar
filds
hlt
xor
repnz
out
jmp
xor
cmp
stc
ljmp
flds
int
test
ror
loop
in
enter
aam
xor
int3
std
repnz
loope
in
shl
xor
clc
aaa
into
iret
cmp
ss
cmc
fabs
shl
in
repnz
loope
cli
into
sbb
xchg
out
jmp
shl
lret
fstpt
std
rcl
out
leave
fld
mov
fimull
fsubrp
loopne
jecxz
rcl
iret
rcr
aam
cmp
xor
and
orl
test
loop
int3
out
lock
xlat
enter
rolb
mov
fldl2e
lret
mov
test
lret
fnsave
cmc
cmp
cmp
sar
testb
ljmp
xor
fmul
out
lock
std
aam
hlt
sar
loope
sti
loop
mov
fisttpll
aad
in
fcmovbe
sub
lock
std
ftst
fucomi
sti
out
call
add
iret
xor
leave
das
leave
sar
flds
xchg
fsubrp
lret
loop
stc
xchg
ljmp
int3
repz
sti
cmp
hlt
repz
int
add
cmp
testb
xchg
ffree
ljmp
xor
out
lret
cld
fcmovnbe
repz
loope
ffree
test
mul
loop
mov
out
loopne
test
out
fcom
cmp
sarl
fxch
imul
cmp
incl
call
int
int3
mov
imul
shl
int3
fstp
cmp
aas
sar
cli
in
fiaddl
in
hlt
cli
clc
ret
xchg
les
in
cmp
cmc
rcl
cmp
out
xlat
icebp
cmp
addl
xchg
out
mov
xchg
out
aaa
hlt
div
iret
idiv
fiaddl
rcr
enter
in
int
ljmp
shr
lret
std
call
fmul
repnz
aad
out
xlat
lret
mov
shr
jecxz
out
les
idivb
loopne
xchg
sti
and
test
cli
fimull
int3
into
ret
loop
in
sarb
iret
jecxz,pt
cld
xchg
jmp
cli
out
jmp
lea
in
out
shl
out
cmp
clc
out
lret
repnz
iret
sar
out
cli
mov
xchg
mov
cld
xchg
xchg
in
in
clc
cli
in
cmp
fdivr
and
fdivr
mov
ret
lret
cld
iret
rorb
xor
repnz
out
fdivl
addl
lret
rolb
test
mov
jecxz
int
hlt
fmul
rcl
loop
icebp
clc
cmc
fldl
leave
shr
xchg
xchg
xor
cmp
cld
in
ds
xlat
idiv
rol
jmp
mov
xchg
enter
lret
jmp
enter
in
icebp
hlt
ss
repnz
cli
lret
rcl
aad
ror
xor
xlat
out
cmpl
out
mul
stc
clc
test
int
jecxz
mov
lock
repz
shr
into
div
fdiv
fadd
xor
out
cmp
out
fucomi
call
inc
or
lea
cmp
jne
jmp
int
ds
int
lock
dec
cmp
jle
jge
jl
add
lock
jmp
in
rcl
cld
repnz
jmp
ret
rol
cli
lock
repz
fmuls
icebp
fdivp
mov
in
ljmp
fdiv
fdivrl
and
test
mul
fsubrp
lea
adcl
int
cmc
cmp
int
hlt
loop
std
fistpll
fcmovu
adc
mov
div
into
enter
mov
xor
xor
jmp
cmp
jmp
ss
jecxz
loopne
loope
sti
std
test
iret
int
enter
ds
aad
int
cmp
shl
hlt
mov
lock
in
loop
icebp
xlat
fcomi
sti
aam
repnz
test
call
out
incb
ds
sub
int3
xlat
std
cmp
loopne
cmc
push
fcmovnbe
fnstsw
roll
loope
out
rorb
lret
int3
call
cmp
repnz
icebp
sar
mov
and
cld
subl
stc
enter
leave
mul
cmc
cli
aas
fcmovnbe
hlt
rcl
addb
addb
shl
not
cmp
in
int
jmp
test
hlt
jmp
orl
shr
fcomp
cmp
std
aam
cli
int
roll
test
ljmp
xor
cmp
out
fmul
loopne
rcr
neg
aas
roll
int3
fsubrp
jecxz
test
ffreep
xor
cmp
out
std
in
into
aam
repnz
leave
jmp
aad
in
jecxz
jmp
xor
mov
clc
lret
out
repz
repnz
adc
out
int
ror
orb
divb
fnstcw
ret
test
test
mov
fndisi(8087
rorl
das
lret
enter
cli
cmp
sti
icebp
iret
loopne
fcmovb
in
sbb
int3
jecxz
in
repz
xor
neg
jmp
idiv
cld
repnz
add
adc
testl
stc
iret
xor
neg
fmul
sarb
rcr
idiv
out
dec
into
into
addl
in
stc
xlat
fdivrs
cmp
mov
loop
in
in
in
test
xchg
repnz
int
in
cmp
ret
fucomp
int3
flds
jmp
cmp
test
xor
call
cmc
out
call
test
ds
addb
cli
faddl
fdivrs
cli
int3
cmc
test
shl
fcmovnu
jmp
stc
in
test
loopne
lea
sub
int
int3
sti
lret
xor
rcr
in
filds
into
or
out
loope
sub
cmp
cmp
int
roll
enter
call
xor
repz
std
sar
aad
into
loope
out
faddl
icebp
fsts
das
loopne
aam
jmp
int3
test
sbb
adc
cld
fsubrp
sbb
std
icebp
jmp
sar
idiv
call
lret
roll
loop
lret
test
xchg
xchg
or
xor
call
jmp
xlat
cmp
inc
ret
decb
mov
test
in
loope
lock
repz
dec
jecxz
ds
shl
clc
aad
call
iret
std
orl
xor
cmp
ror
fcmove
rol
rcl
fnsetpm(287
hlt
xchg
call
ret
xlat
iret
divb
repz
in
loop
adc
mov
aad
loopne
in
jecxz
loopne
out
idiv
cmp
fldln2
iret
bnd
loopne
std
std
fidivrl
repnz
lock
iret
jecxz
in
xlat
repz
int3
ljmp
shl
ds
repnz
decb
mov
xchg
loope
fmulp
clc
int
ljmp
ds
icebp
xor
leave
leave
xbegin
out
icebp
int
xor
shl
ljmp
fucomi
fcmovnu
lock
fsts
sub
repz
enter
hlt
cmp
mov
std
lret
mov
fdivr
rcl
out
in
lock
out
jmp
sti
lock
ds
loop,pt
cli
and
call
out
ret
clc
aaa
ror
cmc
cli
in
int3
in
int3
out
int3
cld
fcom
jecxz
mov
hlt
ffreep
mov
out
out
aad
enter
aam
ror
ljmp
jecxz
xchg
into
nop
xchg
repz
shr
aaa
in
in
cmp
jecxz
ror
test
lret
sub
xor
jmp
int
enter
int
lds
mov
fnstsw
jge
jl
jmp
cmc
xor
xor
repz
out
in
rcr
lock
bnd
in
fsubrp
in
in
mov
in
fisttps
lret
stc
repz
rcl
fucomi
aas
ljmp
cmp
hlt
mov
enter
or
aad
in
shl
cmp
lock
ds
cld
fildl
testb
ret
sub
xchg
iret
aam
int
out
cli
clc
cmp
fldl2e
int3
sti
shl
jmp
aas
fcmovne
fisttps
jmp
in
cmp
cmp
cmp
loope
ret
mov
rcr
out
mov
call
fxch
loop
xor
repnz
cmc
repnz
cmp
clc
loopne
and
repnz
aam
rol
shlb
cmc
int
lret
repz
in
leave
xchg
xchg
shlb
rcr
fcmovbe
std
cli
leave
std
fscale
cmp
sar
fadds
out
mov
repnz
xor
sar
rcl
into
aam
loop
sti
in
aas
mul
loopne
mul
out
sbb
lret
call
rcr
in
cmc
stc
ss
cli
fildl
mov
in
enter
ljmp
jmp
and
out
icebp
cli
adc
test
in
enter
nop
incl
fldcw
sar
repnz
hlt
out
loope
clc
icebp
std
sarb
lea
out
hlt
xor
xor
aam
fidivs
ljmp
clc
cmc
cli
testl
xor
ror
enter
cmp
iret
cmp
fadd
out
out
out
aad
jecxz
jecxz
leave
loopne
into
xchg
lds
jmp
enter
out
stc
sar
cli
xchg
call
ljmp
repz
ss
xor
jmp
cmp
int3
fsubr
cmp
ret
xlat
jmp
xchg
ljmp
cmc
in
out
aad
fsubr
cmp
frstpm(287
testl
in
in
fcmovb
ljmp
lret
hlt
loop
hlt
fdiv
fucomp
into
ficoms
shlb
loop
cmp
repnz
rcr
aad
cmc
sbb
idiv
in
call
and
xor
out
stc
clc
cld
into
shr
sarb
cmp
cmp
rcr
ret
in
test
mov
int3
loopne
in
in
shl
fidivrl
hlt
repnz
in
icebp
icebp
sar
cmp
into
fsubrp
rol
ljmp
lret
aam
stc
shl
shl
shl
aad
repnz
int
loope
mov
out
lock
in
out
out
iret
ffree
fildl
icebp
repnz
out
in
into
addl
iret
lret
idiv
ss
ds
fstp
cmp
xlat
out
and
testb
shr
lret
jmp
lock
ror
clc
shr
iret
cmp
icebp
idivl
lock
call
test
loope
loop
rcl
in
xor
repnz
cmp
addl
xchg
in
lret
rol
xor
aam
shl
int3
xlat
iret
adc
loopne
rcr
shl
in
xchg
in
mov
in
lret
hlt
hlt
loopne
clc
idiv
cmp
aas
mov
rorb
lret
xchg
loope
shll
clc
xor
aam
idivl
cmp
icebp
loope
loopne
mov
stc
mov
nop
cmc
test
lret
shl
xor
int
repz
or
idiv
loope
mov
stc
mov
decb
icebp
loop
shrb
repz
jmp
les
loopne
ret
call
aam
ss
out
cmp
aas
les
mov
enter
iret
cmc
cld
test
into
shll
int
test
hlt
sti
out
cmc
icebp
cmc
incb
aam
loopne
fisttps
lock
loopne
fnstenv
aam
aas
lock
lret
jmp
in
out
lret
xchg
ds
shr
vpsubb
fnop
sar
or
cmp
jmp
int
jecxz
iret
enter
iret
aad
call
stc
in
shl
aam
fiadds
mov
mov
into
loope
repz
in
into
call
jmp
cmp
aad
aas
filds
in
ljmp
ror
shll
xlat
stc
out
aam
cmp
sarb
cli
xchg
cld
lret
lds
shl
out
ss
aad
out
sti
cmp
int3
icebp
ds
orb
mov
fimuls
shl
imul
fstp
stc
out
cli
repz
test
fst
fcom
ret
int3
mov
pop
add
ror
aad
fistl
loop
aam
sahf
addr16
jle
jge
jl
fimuls
lock
fdivr
out
fcmovnbe
loope
xlat
lds
out
out
cli
int3
cld
in
mov
xor
aam
cmc
int3
sar
icebp
imul
xor
aad
sar
sti
in
mov
out
hlt
out
not
aaa
rcl
roll
sar
out
std
ds
jmp
faddl
addl
enter
aaa
cmp
rcr
xorb
ret
fadds
jmp
repz
xor
aad
fstp
repnz
repnz
cli
aas
mov
xlat
sti
aas
int
out
jecxz
jmp
subl
cli
lock
cmp
enter
aas
iret
test
leave
test
call
xchg
test
xor
aad
int
aaa
out
out
fst
repz
out
lret
decb
out
out
jecxz
in
into
xlat
out
lret
call
fdiv
in
lds
int
int3
std
shl
rol
shr
repnz
stc
push
idivl
repnz
addl
fcmovne
fcmovb
in
jmp
into
hlt
lret
aaa
les
sub
lret
iret
stc
sub
ljmp
fcmovne
fadds
xchg
das
jecxz
in
fdecstp
fcmovbe
into
fiadds
fcmovu
add
call
leave
mov
in
xor
aas
ds
cmc
cmc
div
loope
clc
int3
in
int
repnz
xor
lock
in
out
addl
aad
shl
cmp
clc
fdivrp
ds
clc
hlt
test
ds
test
std
out
xchg
ret
xor
call
aam
in
out
decb
fcmove
fucomip
clc
mov
call
shll
dec
cmp
shl
rcl
rcl
sbb
clc
mov
in
stc
out
lock
fidivl
xor
fdivr
out
test
xlat
aad
ret
fisttpll
ds
into
rcl
fptan
sti
ss
int3
icebp
hlt
faddl
inc
enter
icebp
xchg
mov
aaa
xor
shl
ljmp
aas
leave
fxch
xchg
in
fsubp
cmc
repz
xor
xor
loopne
in
rcr
ret
fsubr
incl
lds
shl
cli
repz
cmp
cmp
lret
fdiv
stc
std
movl
aas
out
int3
fisubrl
stc
xlat
aam
int3
or
and
xchg
lret
sub
mov
std
fsub
out
cmc
das
loop
out
fxch
fcmovne
out
hlt
hlt
aad
sbb
repnz
test
addb
repnz
xchg
rcl
jmp
into
cmp
fmul
jmp
loopne
out
addb
cli
leave
adc
loopne
lret
xor
cli
hlt
fstpt
dec
aad
faddp
std
fsubp
ret
out
mov
int3
xchg
xor
lret
stc
clc
fcmovne
rcl
into
std
sbb
flds
fdivr
in
in
loopne
aad
int
jmp
clc
loop
loopne
roll
ret
cld
out
cmp
jmp
out
in
cmc
lock
clc
xlat
and
cmc
enter
out
out
xchg
ret
int
xor
xor
fucomp
iret
out
out
int3
faddl
fisttps
shr
xchg
dec
aam
in
clc
hlt
xlat
int3
call
int3
test
loopne
call
std
cmc
mov
fcom
lret
dec
sti
ds
cmp
xor
ret
rolb
in
mov
ljmp
int
in
xor
loop
xor
std
fsub
cmp
stc
mov
lret
out
lret
icebp
in
cmc
in
lret
lret
fcmove
sti
test
addb
test
cld
lock
in
test
fpatan
in
aam
jmp
in
aas
clc
xchg
mov
mov
jmp
int3
ljmp
cmp
in
addb
out
call
sub
out
cmc
xor
ds
idivb
repz
ret
shr
cmp
cmp
in
and
out
ret
shl
div
loope
xor
out
xlat
fld
loop
addb
out
iret
iret
xor
loop
leave
fmulp
out
in
loopne
in
std
cmc
shl
inc
std
sti
repz
lock
xor
cli
ss
repnz
in
xlat
icebp
ret
int
adcb
test
cmc
ljmp
ffreep
imul
test
cmp
fadd
test
mov
ret
pop
leave
ret
push
mov
jmp
int3
ret
ds
fst
decl
push
cwtl
inc
or
pop
add
sti
cmc
in
ffreep
aad
aad
aad
cmp
ljmp
test
mov
mov
in
loopne
fucomp
xchg
cld
xor
in
lret
in
in
in
in
call
xor
loopne
sub
addl
jecxz
lock
out
int3
cmc
sti
loop
lock
test
loopne
int3
xor
mov
jmp
ret
sub
aam
fst
in
clc
add
mov
loop
lds
mov
mov
stc
ror
out
fucom
sti
enter
adc
in
repnz
in
mov
rorl
loop
out
shll
shl
test
cld
xlat
test
out
mov
in
lret
sarl
int
out
int3
fcmovnu
cmp
out
loopne
xchg
fmul
xchg
out
mov
lret
icebp
cmp
into
fstp
cmp
lock
xlat
loop
xchg
leave
call
xchg
enter
in
lock
shr
fnstenv
call
stc
sarl
ret
loop
cmp
fmul
inc
clc
in
jecxz
out
cs
sti
jmp
aam
fstp
and
rcr
cmp
lret
mov
adcl
xor
xlat
cli
call
stc
jecxz
fidivrl
sti
ds
test
inc
fcmovnu
test
in
in
lret
out
out
into
rcl
jmp
cmp
fsub
les
test
icebp
test
lret
lret
cmp
sti
aam
loopne
out
cli
in
clc
les
testb
mov
xchg
rolb
sti
ret
repz
cmp
into
int3
loop
rol
cmpb
std
test
jmp
ds
lock
xor
sti
test
faddl
out
ds
and
jmp
xor
icebp
enter
ror
ljmp
ret
xor
in
lret
fiaddl
mov
stc
cmc
hlt
aaa
cmp
aad
add
fmulp
in
xlat
les
cld
rclb
out
xor
iret
jecxz
sar
repnz
rcr
mov
fstp
ljmp
xor
fcmovnbe
ljmp
fsub
cmp
xchg
hlt
fiaddl
xor
xor
aam
repnz
aad
into
cmp
in
sub
ffree
hlt
xlat
mov
xchg
out
in
mov
lock
neg
xor
cmp
repz
out
mul
sar
sar
mov
cld
mov
xchg
fsub
lret
repnz
lret
cmp
aad
fcomp
lock
lock
in
fmull
out
rorb
lret
hlt
sar
repnz
ret
rcr
call
enter
hlt
hlt
aam
in
fmul
shlb
cmp
neg
hlt
mov
jmp
xchg
xchg
mov
sub
fadd
sar
fucomp
fstp
rcl
cmp
fcomi
jmp
xchg
test
addb
cmp
int
aad
call
hlt
loop
test
iret
xchg
mov
call
ffree
shl
icebp
lret
test
icebp
aam
aas
hlt
mov
int
loope
iret
icebp
std
rol
ljmp
cli
lret
shr
aad
loop
orb
jmp
adc
fdiv
icebp
repz
aad
shl
stc
test
ds
stc
repz
in
mov
ret
call
xor
fcom
xor
cmp
in
ds
test
cmc
ret
cli
mov
shr
xlat
sti
fucomp
rcr
fsubrp
rcr
cmp
fcom
inc
enter
std
xor
jmp
loop
jmp
cmp
ds
repnz
test
in
fdivrp
loopne
repz
xor
in
jmp
rol
icebp
shl
cmc
mov
fisttpll
rolb
shll
out
enter
into
not
fdivrs
out
out
out
cmc
loope
mul
ljmp
addl
xor
out
into
testb
cld
in
test
leave
jmp
fucomip
xchg
cld
out
sub
ret
fnsave
sar
aaa
sti
repnz
cmc
cmp
ret
cli
aam
mov
icebp
ljmp
mov
lret
out
into
cmc
fistpll
div
ret
fucomp
int3
icebp
nop
in
mov
cs
repnz
xor
icebp
cmp
fcomi
call
icebp
rolb
mov
mov
mov
shlb
leave
ss
lock
repz
fsubrp
div
xchg
fiadds
xor
and
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
mov
mov
mov
jmp
rcl
leave
leave
fst
fimull
mov
or
pop
add
jmp
adc
cmp
call
out
fsub
icebp
jecxz
fyl2xp1
std
out
aam
mov
xchg
lret
repz
int3
fistpll
out
cmp
clc
cli
stc
std
leave
fdivrs
idiv
loope
mov
icebp
in
loope
clc
int3
out
aam
cmp
shl
aas
iret
adc
fcomp
out
aad
dec
mov
fsub
fmulp
into
ror
xor
int3
aaa
xor
cmp
loop
hlt
in
xlat
cmp
mov
loope
in
cmc
and
cmc
das
not
clc
idiv
aas
fmul
hlt
lock
ret
neg
cli
out
aad
lock
lret
call
cmp
aaa
sarl
rcr
stc
out
adc
cli
jecxz
lock
loop
into
jmp
call
repnz
add
rcr
movl
and
aad
out
aaa
xor
shl
aad
ds
cli
jmp
in
lret
iret
jmp
sub
clc
imul
fcmovu
fcmovu
loope
test
test
mov
iret
in
call
out
ljmp
sti
cmp
ds
addb
in
ljmp
out
rcl
iret
repnz
sar
aam
rol
rcl
rcl
in
in
jecxz
mov
enter
not
xor
sub
loope
loopne
rol
loop
mov
out
xlat
cld
jmp
ficoms
xor
cmp
hlt
rolb
fdivr
mov
fisttpl
fstp
ret
ret
cmp
xor
shlb
mov
mov
jecxz
addl
fnop
cmc
stc
loopne
sar
jecxz
xchg
jecxz
loopne
lret
in
loope
out
cmp
int
ljmp
ret
xchg
sar
out
neg
fistl
mov
sub
repnz
xor
not
stc
ret
in
fmulp
clc
cli
fsub
sti
out
enter
out
lock
repnz
loop
repz
repz
lock
in
jmp
in
fucom
jmp
xchg
cmc
into
ss
cli
aad
aas
mul
incb
inc
fcomi
leave
jmp
ret
jecxz
xor
in
xor
call
xor
xlat
clc
in
enter
fsubrp
cli
mov
xchg
mov
fcmovnbe
fsubr
ss
lret
sar
ds
fdecstp
mov
fsubr
jmp
ret
stc
shl
lret
cmp
ret
loopne
repnz
out
mov
in
xor
fcomi
sti
cmp
fcmovnbe
sarl
in
iret
std
cli
call
testb
rol
iret
int
fdivrs
in
cmp
call
xor
ret
fildl
xchg
out
xor
icebp
call
not
lret
aam
xor
out
test
in
div
int3
sbb
jmp
in
jecxz
shr
aam
sti
repnz
call
mov
clc
xchg
rcr
jmp
in
les
leave
ds
in
cmp
cmp
fildl
shlb
div
rcl
das
xor
aad
iret
rcl
cmp
cli
ror
cli
fscale
sub
addb
lret
sar
fucomip
jmp
in
loop
mov
repz
loopne
fmulp
jmp
jmp
aad
aam
out
out
cmp
int
cmp
loopne
xlat
xlat
clc
mov
in
out
xchg
xchg
loop
fmulp
lret
aad
aad
call
aas
and
sbb
out
loop
mov
les
int
jmp
clc
enter
fdivr
mov
ffreep
cmp
out
call
test
into
aam
ljmp
frndint
ljmp
add
jmp
jmp
out
out
faddp
iret
xor
not
shl
ljmp
std
fprem
idiv
lds
icebp
xchg
xor
neg
fcmovnbe
call
icebp
out
cli
loopne
test
cmc
mov
movl
enter
aaa
ss
fidivrs
xor
call
cld
aam
lret
fmul
in
ljmp
xor
cmp
into
in
cmp
aad
out
sbb
inc
out
cld
std
clc
mov
enter
lock
shr
cmp
std
stc
icebp
aam
ljmp
mov
shl
out
out
xor
cmc
ror
aas
aad
xchg
shl
movl
subl
jmp
lret
ffree
fst
in
notl
adc
lods
jae
jle
pop
add
xchg
xchg
out
into
xor
leave
shl
fadd
icebp
fincstp
fucomip
cmp
and
ret
in
in
fneni(8087
ror
in
icebp
lret
ret
sti
lock
repz
ret
addl
fsin
cld
mov
rorl
hlt
xor
aas
shl
hlt
rcl
loop
xchg
jmp
fucomip
das
das
cmp
les
cmp
cmp
cmp
neg
aam
mov
jmp
loop
loop
xchg
aaa
aad
stc
out
sti
in
cli
push
rcr
loope
out
xchg
sbb
xlat
int
lret
loop
mov
loop
out
shl
fsub
out
xlat
out
repz
aam
xchg
fcomip
fstp
mov
loop
sti
repnz
in
loopne
loope
out
sti
out
jmp
fucomip
cmp
xchg
in
ret
call
jmp
int
imul
fscale
rcl
shl
fiadds
loopne
mov
test
icebp
test
hlt
rcr
lret
ror
in
fdivr
loop
shl
loope
icebp
in
xlat
call
aam
ss
ret
cmp
fndisi(8087
cld
in
clc
mov
cmp
fcmovnbe
std
in
lock
cli
test
jmp
in
loopne
sti
in
in
xor
enter
enter
aaa
jmp
fdivp
out
out
ds
fxch
stc
test
jmp
xchg
enter
out
out
cmp
neg
xor
lret
test
test
xlat
repnz
in
std
iret
test
loop
xor
aad
clc
cmp
xor
shl
in
in
jmp
int3
ljmp
int
into
in
aad
aam
lock
fmul
repnz
mov
xor
clc
cmp
fmul
aaa
and
sti
aam
cld
rcr
stc
jmp
mov
lret
lret
xchg
int3
aaa
xlat
xor
cmp
out
clc
jecxz
aad
loope
cmp
sti
jmp
lret
shl
ret
shl
aam
cmp
jmp
testl
lea
out
decl
lock
cli
cmc
in
aam
fadd
xlat
clc
aam
out
enter
in
loope
jecxz
ret
std
cmp
cli
ljmp
cmp
aam
jecxz
loop
int3
fxch
icebp
std
rcl
lret
aaa
leave
shll
fst
out
aam
fcmovne
aam
cmc
stc
cli
std
xchg
mov
out
mov
icebp
in
into
enter
cmc
jmp
repnz
out
shl
leave
out
nop
ljmp
aam
xor
hlt
lret
int3
loop
fnstsw
aad
std
mov
test
clc
lret
int
hlt
hlt
ret
cli
aad
cmp
loopne
fmul
rcr
hlt
leave
cmp
xchg
shl
int3
rcr
ret
jmp
cmp
enter
loopne
xor
aas
out
test
loop
xchg
ret
ljmp
icebp
repz
aad
and
out
into
jmp
xor
loop
ret
leave
sar
stc
cmc
incb
xchg
filds
fsubrp
iret
out
lret
leave
rol
cmp
xor
leave
aas
cmp
test
enter
and
in
xchg
lock
lret
shll
sar
ljmp
aad
idivb
lret
loopne
out
cld
sti
in
mov
lret
jmp
stc
fstp
fcmovne
rcl
out
cli
out
mov
in
fcoml
xor
in
int
rcl
out
lret
rcl
mov
in
mov
mov
lret
int3
aaa
in
fdivr
clc
shr
lret
in
rcr
out
loope
ret
fdivr
testl
xor
rol
icebp
int3
fdivr
jmp
shl
fucom
not
call
test
fsub
lret
sub
out
fcomi
jmp
rcl
xchg
ret
sub
ljmp
rclb
lock
out
icebp
lret
shl
cli
loope
cmc
roll
xchg
loopne
iret
loopne
call
out
xor
cmp
sti
orb
out
mov
cli
aad
jmp
jmp
enter
in
cld
mov
out
test
mov
rorl
iret
enter
sti
enter
clc
fucomi
div
hlt
aas
clc
sub
loop
out
jmp
ljmp
loope
fcmovnu
movl
mov
subl
jmp
rol
ror
aad
lahf
mov
lock
jle
pop
add
in
cmp
in
out
lret
sbb
enter
repz
xor
ss
ss
ds
test
fdiv
cmp
hlt
xlat
adc
loope
repnz
fidivrl
cmp
rcl
sarl
loopne
sti
ret
imul
int3
loop
lock
test
xchg
int
cmp
ret
cli
fcmovnu
rol
ret
fcomp
std
test
fadd
fisttps
loope
fists
jmp
test
sbb
addb
loopne
ljmp
xor
loop
div
aad
fstpt
in
rol
out
test
test
in
in
stc
out
jmp
sti
cmp
jmp
hlt
fstp
cmc
xchg
flds
addb
sarb
lret
shl
leave
ss
repnz
test
cmc
out
cmc
clc
fld
mov
jmp
ret
leave
std
sti
fstp
jmp
cmp
loopne
fadds
cld
jmp
out
mov
xor
repnz
aaa
fmul
shl
test
hlt
repz
xchg
jmp
out
mov
xchg
xchg
lret
out
in
cli
std
div
fdivrl
out
cmp
rcr
ficoms
shl
int3
loopne
sub
ret
rcr
loope
xlat
cmc
ret
lret
fucomip
and
shr
or
int
loop
test
xor
jmp
clc
fcmovb
cli
ret
xlat
aam
out
fstp
nop
test
rorl
xor
out
xlat
fsub
int
in
cmp
fsubrp
in
in
repz
loop
ret
loop
aad
in
fsub
repnz
lret
cmp
aad
fdivp
out
ret
decl
test
in
ljmp
xor
ss
cmp
aaa
in
icebp
ftst
vshufps
test
loopne
fdiv
xlat
into
out
ljmp
clc
fcmovnb
iret
fdivr
test
ds
cmp
xlat
dec
fcomi
icebp
mov
cmp
sar
xlat
sbb
cmp
flds
cmp
cmc
sub
cmc
sub
fsubr
out
iret
lret
int3
fnstcw
out
fildl
lret
xchg
xchg
int3
idivb
call
cmc
cmp
rcl
test
clc
std
jmp
roll
icebp
icebp
div
cmp
int3
leave
leave
std
lret
cld
xlat
ret
aad
jecxz
fld
cld
in
xor
xor
ret
stc
jmp
shr
cli
ret
out
xlat
orb
into
lret
mov
enter
xlat
rol
cmp
ror
cmp
ret
fidivrl
fst
sub
lret
and
xlat
cs
iret
repnz
fiaddl
aad
enter
loop
test
lock
std
mov
test
jmp
sti
loopne
repnz
faddl
sbb
mov
mov
mov
enter
cli
ss
ljmp
shl
sti
add
jecxz
enter
call
cmp
aad
int3
call
fnstcw
cli
fsub
sti
hlt
fdivr
mov
mov
repz
mov
aad
repz
aaa
aaa
ror
aam
hlt
faddl
int
leave
xchg
jecxz
jecxz
xor
cs
shll
fdivr
leave
shll
fninit
fcmovu
stc
out
and
lret
out
cmp
xchg
in
enter
cmc
fcmovne
iret
xor
ror
std
fcmove
shl
mul
fmuls
in
xchg
shl
in
out
iret
jmp
hlt
repz
cmp
aad
rol
fnstcw
aam
fadd
in
mov
out
xchg
decl
in
cmc
xor
xor
imul
cmp
shl
adc
loope
out
nop
out
xchg
icebp
rol
sub
fcomp
hlt
xlat
repnz
out
and
loopne
mov
fucomi
jmp
rcr
loope
icebp
ror
div
pushl
ds
cmp
xchg
fstp
fisttpll
aam
sti
out
cmp
call
cmc
faddp
int3
rcr
ds
testb
xchg
iret
out
xor
ds
aas
imul
idivl
icebp
loopne
fldl
into
orb
lret
les
cmp
out
lret
repz
and
fucomip
lret
mov
test
lds
int
neg
sarl
aas
cmp
std
stc
in
mov
loope
mov
xchg
or
loop,pn
icebp
out
aam
xor
lret
cmc
fcomi
into
rol
call
jmp
loopne
in
shl
shll
xlat
in
out
fsubr
fxch
shl
mov
mov
adc
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
leave
lret
aad
int
cmpsl
mov
ret
clc
jle
pop
add
out
aam
shr
aad
lret
icebp
fisttpll
repz
repz
not
xor
into
stc
into
hlt
cmp
ds
std
loop
loop
in
sub
xchg
int
lret
loope
icebp
in
in
aad
rcr
cmp
fprem1
aad
in
out
sbb
xor
div
xor
iret
shr
in
cld
div
ret
cmp
cmp
aas
addl
in
in
shr
sar
stc
jmp
loopne
out
xlat
fcomi
xlat
enter
stc
ficoms
int3
aam
loope
lock
sar
cld
clc
jmp
in
into
ret
cld
ret
jmp
out
jecxz
xor
aam
icebp
rcl
fstp
cmp
hlt
sarl
fucom
sub
fxch
in
fcmovnb
mov
cmp
lret
xor
in
aad
int
stc
repnz
fisttps
in
into
repnz
icebp
lds
int3
enter
sarl
cmp
filds
decl
loope
into
ror
leave
cmc
ljmp
iret
sti
repnz
cld
fdiv
jecxz
int3
int
test
adcl
cmp
leave
jmp
cmp
mul
cli
cmp
jmp
lret
in
out
jmp
shl
leave
repnz
fdivrp
ljmp
mov
orb
loope
fprem
cmp
cmp
cmpl
std
loop
jmp
fmull
ljmp
in
ror
aas
cmp
aaa
in
rcr
ds
in
hlt
jecxz
or
lock
iret
aam
in
in
shr
lret
lret
std
or
in
xlat
fisttps
out
xor
aam
sti
aaa
lret
stc
fucomp
lock
cmp
ret
in
cmp
enter
clc
repnz
in
shl
icebp
std
aam
enter
aaa
clc
test
test
int3
icebp
into
icebp
iret
cli
mov
xor
enter
xor
shl
cli
clc
repz
rcl
stc
addl
fdiv
int
ljmp
sti
in
sar
div
loop
clc
out
cmp
fsub
repnz
jmp
fdecstp
out
hlt
cmp
xor
aad
cmp
loopne
aam
stc
in
out
shl
lret
jmp
in
into
int3
int
lret
lret
cmc
xchg
loop
testl
mov
jmp
cs
fnstcw
mov
xchg
mov
test
out
fmulp
xor
xor
xor
cld
shl
loope
test
cld
mov
cmc
aad
xor
idiv
out
cmp
shl
loop
stc
xchg
loopne
in
decl
shll
cld
fdiv
xor
sti
ds
icebp
test
aad
out
testb
or
lret
das
fcmovu
rcl
out
xlat
sub
aad
sti
loop
in
jecxz
jmp
xor
int
ret
int3
jmp
shl
loopne
icebp
cmp
aad
lret
fsub
lds
loop
subl
loop
cmp
fsqrt
hlt
out
mov
ret
or
mul
xor
icebp
in
loopne
cmc
cld
hlt
clc
out
loope
out
in
xchg
iret
loope
jmp
cmp
xlat
fsubr
cmp
shl
repnz
sub
fdivrp
xchg
out
enter
in
std
into
fucomip
cli
aam
adc
hlt
fiadds
jmp
rcr
xor
cmp
fnstcw
out
enter
std
loop
ds
lret
stc
fcmovnbe
add
out
repz
in
jmp
enter
aas
aaa
cmp
std
out
cld
clc
xlat
fcomi
std
call
fadd
icebp
aam
aaa
xlat
hlt
in
rcr
aad
loop
sarl
rcl
and
loope
fdivr
ljmp
out
rol
in
ds
call
loope
sbb
call
mov
imulb
xor
shr
aad
test
test
roll
ret
icebp
leave
rcl
cmp
icebp
out
cmc
ret
jmp
std
in
cmc
loop
jmp
out
jmp
jmp
loop
cld
cmp
std
fld1
sarl
loop
iret
mov
loopne
lret
in
int
test
xor
clc
cmp
into
repnz
mul
loop
fstp
in
fcmove
loopne
in
xchg
das
out
lock
fistpll
shll
shr
cmc
add
add
ror
aas
aad
iret
rol
adcb
jle
push
mov
jle
pop
add
xor
iret
out
xlat
addb
xchg
leave
ljmp
repnz
cmc
out
fdivrs
aam
aad
loope
not
mov
fmulp
cld
int
mov
ret
shl
aam
das
cmp
cmp
shl
hlt
adc
mov
orl
in
repnz
xor
int
xor
fst
shl
test
out
fucomi
xchg
int3
hlt
sub
in
xor
ror
neg
out
aam
shl
roll
fadds
adc
into
std
cmp
lret
cmc
enter
lock
out
lds
fisttpll
ror
cmp
out
xor
cld
jmp
fiadds
mov
in
mov
repz
clc
shlb
aam
out
lock
jmp
sarb
iret
stc
shl
ret
mov
enter
in
shr
jecxz
aad
xor
jmp
cli
shl
cmp
xor
sar
test
xchg
int
xor
cli
sarl
cld
les
jecxz
stc
mov
out
lret
fcmovbe
aad
into
aam
fidivrl
les
in
iret
mov
iret
in
xor
ljmp
out
rcr
out
ds
sti
lret
in
xchg
into
fsubp
in
loopne
out
cmc
xor
leave
ljmp
aas
sar
ds
cmp
xchg
leave
xor
int3
ss
sti
cmp
int
test
mov
lea
int
sub
imulb
repnz
lret
call
cmp
fidivrl
in
aad
clc
loope
fabs
fdivp
mov
cmc
jecxz
test
fcmovbe
cli
lock
ss
mov
orb
lock
divb
cmp
call
shl
cmc
imul
les
loop
cld
repnz
rol
ss
test
loopne
sar
cmp
call
decb
ljmp
into
test
aad
cli
cmp
lock
xchg
jmp
xchg
cmp
std
lea
xor
jmp
test
fdivrp
call
sti
jmp
lret
jmp
shl
loop
repnz
aad
hlt
jmp
int
into
hlt
stc
loopne
mov
mov
out
lea
loop
lret
jmp
aad
clc
out
out
cld
xchg
fcmovnbe
jecxz
test
clc
ror
lock
iret
orl
fcmovnu
aam
icebp
idiv
cmpb
test
out
ffreep
leave
lret
mov
dec
repnz
stc
cmc
xlat
out
out
cmp
enter
lock
cmp
loop
cli
sbb
iret
rolb
call
not
ljmp
les
shr
xchg
nop
cmp
ror
ror
icebp
ljmp
or
stc
jecxz
std
leave
int3
out
mov
iret
xlat
enter
lret
lock
roll
not
sub
faddl
in
hlt
into
sti
sarl
hlt
jmp
cmp
out
fcmovnb
mov
in
loope
cld
fucomi
incl
cmc
xor
lret
neg
fsqrt
cmc
shl
sar
movl
loop
out
sub
enter
lret
std
mul
cmc
sar
test
lret
fmuls
mov
repz
in
in
cmp
imul
cmp
in
sti
cmp
lret
test
loopne
repz
flds
out
in
shrl
in
shr
not
repnz
xor
cmc
fisttps
out
xchg
loope
mov
ljmp
out
enter
aad
iret
aad
out
cmc
mov
mov
loope
lret
ret
shr
hlt
icebp
aad
xor
loop
repz
ret
sti
fmulp
cli
xchg
out
shrb
ss
fmul
loopne
jecxz
xlat
fcmovbe
leave
xlat
orl
das
aaa
int3
cmp
in
aam
sti
sti
jecxz
stc
hlt
idiv
fmul
orb
aaa
fadd
ljmp
into
fcomip
iret
iret
cmc
rol
std
mul
enter
aam
out
mov
fcmovnu
out
into
out
fidivrl
iret
cmp
mov
sbb
stc
mov
in
int
in
mov
lds
lret
cmp
fsubr
aam
rcl
rcr
cli
lret
add
xchg
jmp
into
xor
rol
std
jmp
add
roll
add
add
add
pushl
cmp
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
sbb
mov
subl
mov
add
xor
mov
mov
sbb
add
mov
xorl
jmp
enter
fstp
fstpl
sub
repnz
fwait
mov
cmpb
add
jmp
iret
fdivrp
cli
sti
test
fadds
mov
int3
xor
loope
lret
cmp
std
xor
cmpb
xlat
jecxz
mov
lret
shl
out
std
aad
in
loop
jmp
icebp
ljmp
cmp
ret
shr
out
les
mov
out
repnz
stc
xor
clc
rcr
cld
std
stc
stc
std
ret
cli
sub
adcb
loope
xor
leave
cmp
ljmp
mov
add
out
lret
test
sub
ret
ljmp
iret
xor
sti
in
xlat
mov
call
mov
repnz
out
loop
leave
lret
jmp
cmp
neg
addl
nop
test
in
in
in
leave
enter
in
jmp
add
mov
hlt
repnz
xchg
loop
enter
rcl
call
in
leave
shl
xor
std
loopne
out
loope
and
std
test
iret
xchg
lock
fucomi
cmp
aad
sar
and
add
ror
or
lret
sub
fstpt
sti
enter
lret
cmp
out
fld
enter
in
fcmovne
mov
jmp
jmp
enter
cld
shl
in
ret
fmul
jecxz
cmpb
lret
mov
rcl
hlt
aaa
into
jmp
cmpb
sti
incl
fadd
add
std
adc
aam
ss
shl
xlat
test
aad
mov
int
xchg
lock
fucomip
sub
out
into
lock
leave
neg
lret
fcmovu
out
ret
loop
test
jmp
rorb
cs
lret
loopne
fcmovnb
cli
fistpll
shlb
cmp
hlt
clc
aam
stc
test
jmp
adc
iret
xor
cmp
iret
cmp
cmp
fnsave
cmp
ds
orb
cmc
loope
fcom
enter
cmp
neg
rol
aam
xlat
test
lret
loope
enter
clc
xchg
sar
test
aam
ss
iret
rcl
loopne
int
ret
sar
jmp
incb
ret
in
ret
out
in
out
hlt
clc
jmp
clc
sti
clc
xor
lock
aas
in
mov
repz
call
test
sub
jecxz
out
div
ljmp
in
fdivp
shl
cs
cmc
rcl
int3
cld
fdivrs
rcl
icebp
mov
out
mov
ljmp
hlt
out
ret
idiv
icebp
enter
aad
shl
repz
rorl
fisttpll
rcl
xor
das
fcmovnb
xlat
cli
fucomi
out
jecxz
out
fsubr
test
enter
aam
into
fdiv
jmp
cmp
in
std
out
out
fcmovnb
xlat
clc
cli
fidivrs
jmp
test
in
repnz
clc
cmp
call
enter
cmp
and
into
sub
cmc
loope
int3
jmp
cmc
xor
out
cmpl
xchg
repz
mov
mov
fstp
sti
faddl
lret
neg
cld
aam
cmp
fsub
faddl
filds
int
xchg
int3
xchg
loopne
jecxz
call
xlat
std
stc
xchg
clc
out
jmp
fcmove
xchg
mov
ror
ret
in
hlt
aam
out
lret
cmp
cmp
cmp
into
mov
and
std
loopne
sbb
xor
cmc
out
clc
not
cmp
jmp
cmp
repz
add
loop
mov
int3
xor
loop
fsubrs
rcl
xor
fcos
ret
rcl
fucomip
mov
lret
enter
ret
cmp
cmp
cmp
loope
aad
sti
loopne
cli
mov
iret
loop
mov
jmp
in
into
aad
jmp
jecxz
and
faddl
xchg
ljmp
divb
repz
fstp
fdivp
repz
fdivrl
shl
movl
cmc
mov
repz
icebp
ss
aad
div
in
shl
ljmp
loope
repz
sarb
xor
xor
fmul
sti
cli
ret
out
repz
xchg
neg
ret
jecxz
repz
xchg
aad
cmp
repz
mov
mov
xlat
loop
xchg
in
out
ljmp
repnz
ss
in
loope
lds
fcmovnu
aad
out
in
test
fisttpl
int
sub
lret
movl
and
movl
movl
movl
or
jmp
rcl
aad
aad
fstp
sub
cld
fnstcw
jle
pop
add
leave
repz
out
lret
fcmovu
cmc
cmp
repnz
jecxz
in
cld
movl
out
leave
cli
ds
in
mov
call
cld
call
lock
clc
cmp
into
cld
idivb
loopne
loope
aad
xlat
out
int3
loopne
xchg
repz
sar
shl
leave
call
stc
div
out
out
mov
fucomi
enter
fiaddl
clc
in
clc
fcmovbe
clc
aas
in
ss
out
cmp
test
mov
fmul
out
xchg
shl
in
neg
clc
cmc
lock
xor
jmp
hlt
cld
fsub
std
out
xchg
icebp
ss
stc
int
into
ljmp
test
jmp
ljmp
out
xor
hlt
int
cmp
clc
enter
std
shl
ret
aad
ror
sti
loopne
test
into
test
ss
in
std
cmp
ljmp
repz
test
xchg
int
aad
xor
repnz
cmp
jmp
lret
sar
loope
repnz
dec
jmp
sub
aaa
shll
lret
cld
in
ds
xlat
clc
fst
sti
mov
aam
sub
stc
xor
das
xlat
fsubr
fdivrl
cmp
std
sarb
cmc
in
loopne
fdivrp
fdiv
xchg
hlt
xor
enter
lock
call
test
vpmulhw
addl
jmp
test
rcl
lret
lret
lret
hlt
fmul
hlt
ret
rcr
jecxz
cmp
loop
int3
mov
sub
xor
ret
out
in
cmc
cmc
repz
fst
test
test
into
in
out
jecxz
xchg
cmc
aad
out
xlat
ds
aam
int3
fidivrl
aas
fcmovb
fiadds
mov
lea
icebp
shl
aam
cmp
loop
aaa
fistpll
mov
int
icebp
fcomip
addl
aad
std
lret
cmp
testb
nop
cld
mov
aas
enter
stc
sti
ror
hlt
aam
repnz
and
aam
mov
fucomp
mov
mov
ret
xor
div
fcmovb
sbb
fcmovbe
neg
loop
in
mov
lret
aas
xlat
cmp
xor
in
call
testl
enter
in
jmp
out
ret
jmp
add
shr
fld
and
aam
enter
nop
lret
rol
xor
lock
cmc
hlt
rol
aam
xchg
fmulp
mov
jecxz
jmp
cmp
repz
repz
out
out
fcmovnu
out
cmc
or
call
loopne
mov
mov
loop
hlt
sti
rcr
aas
sarb
bnd
cmp
not
rolb
out
rcll
xor
in
out
std
stc
jmp
fcom
filds
cli
loopne
std
lret
into
mov
rcr
in
sub
repnz
fdivr
call
fstp
rcl
mov
out
loope
out
in
repz
repnz
aam
in
ffree
ror
cmp
aam
out
repz
out
sti
testb
decl
mul
aaa
clc
call
call
cli
fcomip
cmp
lret
fldpi
out
std
fsubr
enter
out
out
test
xor
cmp
clc
fsubp
loop
loopne
xchg
int
mov
fdivs
divb
xlat
ror
test
xor
ret
cmp
out
enter
xchg
xor
out
out
xor
repnz
xlat
stc
rol
out
les
xlat
mov
xchg
sti
out
cmc
shr
xlat
xlat
xor
lret
out
fdivrl
loope
aas
fldl
loop
lret
mov
rcl
int
cmp
shl
idivl
imul
std
cmp
aam
mov
mov
int
loopne
mov
shl
shr
in
ror
std
iret
out
aas
sbb
sbb
out
jecxz
sub
lock
leave
out
std
fmul
jmp
or
or
test
lret
leave
loope
loop
mov
jmp
out
repnz
flds
mov
lret
lret
lret
lret
shl
rcl
cmp
repnz
loope
xchg
filds
shr
call
leave
ljmp
hlt
addl
adc
repz
xchg
ret
jmp
movl
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
mov
xor
xor
sub
xor
movl
movl
xor
jmp
into
aad
lret
rcr
mov
add
and
jl
xor
neg
ljmp
out
hlt
cmpb
call
fildl
aas
fld
out
in
cli
cmp
fcmove
hlt
out
rcl
test
xlat
lret
call
test
rol
out
stc
cmc
ljmp
ret
jecxz
sti
out
mov
call
and
leave
sub
loop
int
ljmp
hlt
rorb
mov
xor
in
cmp
sarl
fcmovne
lret
idivl
hlt
jecxz
cmc
mov
in
mov
lret
icebp
xor
out
ss
jmp
ss
fcomp
mov
rolb
in
shr
into
jmp
sti
in
iret
fcom
cmc
shl
sar
clc
in
call
mov
xlat
cmp
into
idiv
in
rcl
aas
fsubp
fstp
mov
test
xor
ret
jmp
xlat
cmp
loopne
in
aad
aas
fsub
cld
test
std
in
mov
loop
mov
in
xor
enter
cmp
fcmovu
lock
sub
cli
out
in
test
loopne
mov
xchg
loop
stc
aam
cmp
int
sarb
int
rol
jmp
in
std
out
incb
les
aaa
cmp
shr
fcmovbe
repnz
cmp
aam
std
in
jecxz
fsubr
fmulp
repz
shl
ljmp
neg
fildl
in
sti
stc
std
jecxz
lock
shr
lock
mov
cmc
ds
jmp
std
out
cld
jecxz
lock
out
lret
iret
fdivrl
enter
out
out
repz
ret
in
out
out
in
int
enter
ret
hlt
sti
xlat
lret
fdivs
fsubr
in
cmp
and
fxam
in
iret
fildl
jmp
aad
xor
aad
out
test
shl
enter
test
std
lds
in
icebp
in
call
cli
lock
cmp
mul
aad
in
int
int3
into
icebp
nop
into
out
rol
lds
hlt
in
ss
sti
stc
xlat
xor
lret
cmp
test
call
lock
lret
out
aad
cmp
cmp
f2xm1
in
ret
out
lret
aam
in
lock
shl
das
hlt
cmc
cmp
ss
fndisi(8087
in
repz
clc
out
les
std
xchg
loope
loopne
ss
out
fidivrs
iret
fadds
xchg
cmp
fucomip
in
fdivr
idivl
enter
in
iret
repz
shr
cmp
repnz
and
xchg
lock
aas
sub
aad
call
call
aam
stc
add
or
in
stc
mov
xor
fdivrs
call
jmp
int3
lock
aam
cli
cld
fcom
fsubr
incl
xchg
shl
cmp
iret
aaa
xor
xlat
loopne
ds
jmp
sti
xchg
in
fiadds
rol
into
call
into
sub
loop
mov
idiv
loop
in
loopne
dec
in
out
xor
test
fstpt
ret
sbb
out
aad
ljmp
loopne
test
ss
jmp
inc
imul
std
cld
in
test
sar
in
fpatan
jecxz
in
jmp
in
int3
xor
cld
fnstsw
stc
icebp
jecxz
ret
mov
lret
jmp
cli
int3
ljmp
int3
fcomp
sbb
test
add
mov
jmp
xchg
in
hlt
leave
out
loop
std
test
loopne
addb
jmp
in
in
int3
adc
xor
sub
cmc
lock
out
fcmovnbe
clc
jecxz
cmp
mov
std
stc
std
jmp
loope
shr
cmp
stc
std
lret
out
aaa
roll
call
shl
mov
iret
repnz
fcmovbe
sarl
aad
hlt
cmp
in
ljmp
out
sub
aaa
mov
in
ss
cld
aas
std
cmp
test
clc
test
orl
out
das
les
repnz
ror
loopne
test
fyl2xp1
shl
out
in
test
test
mul
loop
aad
out
test
mul
cli
aam
mov
jecxz
jmp
stc
int
cmp
fiadds
xor
clc
loope
lds
or
cmp
jmp
aad
fstl
xor
jl
add
xlat
stc
in
enter
repnz
repnz
in
faddp
cmc
clc
ret
inc
std
fsubr
mov
xchg
in
xor
xor
lret
rcl
repnz
cli
sar
repz
ffreep
mov
lret
out
fucomi
out
cld
ljmp
in
xor
frndint
fdiv
repnz
fdivr
testl
xchg
in
ror
rcl
repnz
lret
neg
in
std
cmp
roll
call
mov
int3
iret
out
cs
xor
ljmp
fucom
aam
xchg
in
hlt
cld
lret
out
nop
mov
out
out
xlat
in
out
shl
fcmovbe
ljmp
test
out
jmp
add
in
aaa
hlt
aad
cmp
stc
aam
hlt
clc
jecxz
fcmovu
stc
iret
cli
xchg
xchg
test
shll
ret
repz
fdivs
div
neg
out
adc
ret
rolb
fucom
shl
loope
cmp
std
aad
div
cmp
aad
adc
fdivr
test
jecxz
cmp
loopne
out
repz
std
xlat
call
xlat
idivb
add
call
jecxz
out
jecxz
repz
sar
xor
ffreep
fnclex
rolb
loop
iret
ret
xchg
idiv
cmp
idiv
int
fsubrp
and
shl
mov
faddl
in
out
hlt
aaa
das
loope
out
hlt
int3
enter
cmp
addl
xchg
fcomip
loop
das
loopne
idivb
fucomi
std
ss
lock
cld
rorl
call
lock
out
ret
fldz
std
ss
sti
repz
sti
xor
sti
clc
call
xchg
jecxz
iret
in
repnz
cmp
ds
repnz
lds
sti
clc
int3
into
test
into
test
ftst
leave
lock
sarb
fucomi
std
out
hlt
ljmp
in
loopne
in
out
jecxz
lret
enter
imul
cmp
ds
ret
loop
xchg
fsubr
loopne
out
call
repz
aaa
int
in
and
clc
cld
testb
icebp
lret
ret
shl
cmp
int
stc
int3
ret
mov
stc
movl
in
not
iret
int
xor
int
adc
clc
lds
xchg
cld
in
mov
sbb
shr
in
xlat
cmp
aam
aam
xlat
adc
test
mov
cmc
fsubr
out
in
cmp
ljmp
stc
xor
into
cld
neg
clc
enter
fucomi
fcoml
aaa
in
fxch
clc
jmp
cmp
into
lret
fiaddl
repz
xchg
mov
ljmp
cmp
cli
aam
in
test
fnstcw
cli
clc
lret
ret
fxch
in
out
ret
xor
ss
aaa
aam
out
in
faddl
out
shl
test
flds
int3
xor
stc
shlb
fnsave
xor
aad
ret
rcr
fstpt
flds
test
loop
sar
ss
cmp
cmp
icebp
jmp
cmp
fldl
in
ljmp
xor
enter
cmp
sbb
sbb
test
push
lea
fmulp
into
repnz
sar
sti
cmp
fcmovnbe
lock
shl
jmp
loop
int3
sub
rcl
loop
out
jecxz
lock
fdiv
jecxz
rolb
xchg
addl
jmp
out
lds
rcr
fdecstp
cld
sar
test
sbb
fcmovne
mov
nop
xchg
aas
int3
lret
sub
roll
xor
fadds
xchg
ficoms
out
int3
xor
repz
aam
sar
xlat
ds
mov
cld
jmp
out
hlt
repz
aad
loope
fdivrp
sub
xchg
out
in
loope
cld
iret
cmc
in
int3
hlt
xor
lret
enter
jmp
loope
cld
aaa
aam
flds
stc
lea
in
ror
out
call
int
lret
std
rorb
jecxz
xchg
fdivl
shlb
ss
cmp
ror
cmp
out
out
in
aas
test
dec
ljmp
out
out
cmp
ret
aad
stc
div
cmp
adc
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xorl
jmp
iret
ror
aas
aad
iret
shlb
lods
jmp
int
lcall
jl
rolb
sti
out
iret
xlat
aam
aaa
sarl
in
into
cmp
roll
fdivr
fucomi
jmp
xchg
aaa
shl
jmp
and
and
sbb
lret
enter
in
loope
aam
sar
hlt
aad
fdivr
fcmovu
cld
and
cmp
out
cli
fdiv
sti
nop
ficoml
in
sti
loop
fprem
enter
cmp
iret
out
loope
ljmp
mov
in
in
ret
cmp
fxch
cmc
push
bnd
std
sti
xchg
iret
iret
faddp
not
xor
aam
hlt
cmp
jecxz
cmp
loopne
fsub
sar
test
rorl
ror
cmp
clc
fadd
sar
cmp
hlt
cld
faddl
loope
cld
out
repz
fidivrs
lret
repnz
enter
idiv
cmc
sti
int3
clc
leave
add
loopne
clc
in
cmp
nop
test
lock
in
idivl
repz
adc
lock
out
loope
incl
stc
xor
out
out
enter
out
cmp
sbb
in
fcmovbe
test
out
xchg
out
hlt
ret
sub
cmp
hlt
in
mov
incb
lret
in
lock
icebp
out
aam
cld
in
sti
ret
aam
aam
in
mov
fucompp
add
out
jmp
enter
fucomp
in
ret
fcmovnb
fcomi
ret
jmp
shl
in
inc
into
sub
repnz
ljmp
std
loop
loop
ret
fildl
out
int
in
rcl
in
cmp
cmp
cmc
cmp
lock
test
rol
cli
sti
aam
in
in
into
int
in
rol
lret
aam
xor
icebp
cmp
out
lret
fnstsw
in
fadd
sbb
ffree
fcmovnb
fcmove
jecxz
xor
out
xor
out
cli
cmp
ret
fstpt
cmp
mov
xchg
sub
cmp
ljmp
cli
shl
test
mov
out
rorl
out
std
cmp
cmp
add
ret
in
sub
rcl
call
loope
lret
hlt
fucomip
out
int
cli
fdivr
lock
loopne
add
xchg
filds
hlt
out
out
cli
int
int
fabs
bnd
out
sar
mov
fmulp
icebp
mov
xor
out
xor
sti
leave
xor
fucomi
cli
int
testb
xchg
decb
int
int3
xor
lock
xlat
xor
xor
lret
in
fcmovnbe
cmp
cmc
in
fsubr
mov
cli
jecxz
decl
vpminsw
xor
jmp
lock
fucomi
hlt
fucom
mov
in
out
jmp
xchg
int
cmp
into
call
cld
cmc
clc
ret
aam
loopne
sbb
test
fsubr
or
xchg
std
jmp
xor
xor
xor
in
xlat
cmp
incb
clc
mov
in
lret
int
les
ret
shr
iret
cmp
incl
cld
faddl
mov
aam
xor
leave
call
into
lret
jecxz
cmp
aam
in
cli
enter
loopne
in
jmp
ljmp
sar
sarl
not
in
and
stc
addb
enter
xor
repnz
clc
cmp
lret
lret
fcmovb
in
cmpb
decl
shlb
aad
xor
int
into
aad
loope
stc
dec
mov
ret
shl
iret
xor
cmc
neg
xor
ss
loopne
cmp
loop
loop
ds
mul
fcomp
mov
adc
nop
shl
out
in
cmp
enter
in
jmp
xor
in
enter
hlt
lret
loop
out
xor
lret
lock
jmp
out
into
loope
sti
loope
jmp
sub
fcomi
in
out
xor
in
clc
cmc
fiaddl
add
xchg
neg
out
fisttpl
into
shl
rcl
cmp
sti
ds
sbb
mov
xchg
in
int
out
xchg
loopne
jecxz
hlt
out
int3
cmc
fdiv
int
cmp
fdiv
sti
leave
fsubrp
fsubp
fsub
sub
cmp
loopne
neg
shl
jmp
not
idivb
clc
loope
shl
fdiv
lret
fadd
mov
fdivp
stc
aad
in
aas
out
out
fdiv
rcl
test
and
sar
jge
xorl
add
movl
cmp
je
push
movl
jmp
and
jmp
enter
fcmovnbe
int
pushw
jle
lahf
notl
mov
jle
pop
add
mov
and
repz
into
aad
fldl2t
out
stc
cli
icebp
rol
inc
xchg
loope
fucomip
adc
mov
sub
rcl
aam
rcl
call
cmc
fsub
mul
ret
sti
mov
faddp
fsubp
aad
xor
rcl
lret
ds
ds
fcmovne
rolb
out
mov
icebp
sbb
out
fld
repnz
lret
ljmp
rcl
shr
loop
cmp
call
nop
leave
hlt
loopne
aam
fxch
clc
in
lret
ljmp
ljmp
shl
mov
mov
cli
fsubr
lock
div
fst
xchg
enter
rorl
fidivs
sub
xor
xor
int
out
cmp
xchg
rcr
repz
in
mov
ljmp
icebp
enter
int3
cli
clc
fcomi
aaa
xor
rcl
ret
int3
call
rol
loopne
rol
xor
fcom
cmp
aam
add
cmc
mov
fcomp
mov
stc
icebp
mov
xor
xor
bnd
lds
std
rolb
test
mov
in
rol
neg
into
aam
fcmovbe
in
mul
int3
cmpl
fdivrp
aad
out
out
leave
out
fmul
out
int
imul
aad
leave
iret
cmp
fcmovne
ror
cmp
in
xlat
repz
out
clc
loop
jmp
out
shl
sub
repz
aas
jmp
cli
lret
addl
ljmp
test
loopne
out
lret
cli
fcmove
lock
ret
mov
div
jmp
loopne
jecxz
enter
in
repz
leave
hlt
cmp
out
repz
hlt
fucomi
aad
in
out
repz
xchg
in
int3
in
icebp
cmp
int
aam
adc
cmp
jmp
loopne
call
iret
fiadds
icebp
int3
call
sarl
int3
ret
fcmovnb
mul
aam
mov
nop
out
mov
rorl
leave
iret
std
jmp
stc
lock
aam
loope
fcmove
loop
jmp
int
int3
sti
ret
cmp
call
into
cmp
div
ret
mov
loope
fiaddl
in
shl
jecxz
icebp
jmp
lock
cmp
sbb
ds
fimull
fadd
out
ljmp
repz
rcl
cmp
neg
ret
fadd
in
rcl
xchg
addb
xbegin
aad
ss
ds
cld
jmp
mov
sti
in
out
repnz
xor
cmp
call
xlat
xlat
add
fisttps
mov
mov
iret
stc
cmp
sar
fcos
xlat
clc
cli
fcomp
rol
shl
xlat
lret
fsubrp
sub
xchg
ljmp
in
aam
fcom
leave
loope
loop
stc
roll
ljmp
out
lock
icebp
ret
vshufpd
cmp
sbb
aad
in
ret
cld
xchg
loopne
aad
xor
rcl
out
xor
cmp
cmp
stc
cmc
ret
lret
fsubr
in
mov
aad
xor
lds
in
ss
out
sarl
cmc
std
cli
loope
aas
lret
stc
rcll
loop
fcomp
out
jmp
stc
shl
std
mul
jmp
cmp
fucomp
cmc
sbb
cs
int
in
cmp
clc
cmp
xlat
aas
hlt
sar
mov
test
out
jmp
xchg
int3
lock
xor
repnz
cmp
hlt
jmp
fld
cmp
les
out
out
clc
in
out
int
shr
ss
fcomp
cld
int3
lret
rcr
out
test
sti
aad
aam
clc
out
ljmp
not
loope
sar
std
xlat
in
test
fildl
out
hlt
shl
ror
fcmovnbe
movb
in
cmp
in
lret
mov
lret
lock
out
jmp
repz
fiaddl
cmp
xchg
in
clc
loop
jmp
enter
ret
shlb
enter
sar
fnstcw
fsub
sti
filds
jecxz
fildl
call
int
clc
leave
rcl
fdivrp
out
mov
sti
aad
ljmp
cmc
loope
xor
aad
test
cmp
fcomip
xchg
addb
lea
fcmovnu
shl
jmp
dec
in
test
in
incb
pop
fs
add
push
fs
add
add
jmp
leave
aam
xlat
in
fsubrl
xor
add
mov
test
sub
shl
cmc
push
ljmp
sbb
or
icebp
sti
cli
ljmp
iret
cmp
call
shl
test
call
lret
roll
leave
call
ss
faddp
cmp
roll
call
cli
fsubp
rol
out
xor
ror
sti
xor
leave
push
std
test
sbb
mov
hlt
call
mov
int
in
out
fdivr
fdivrp
rcr
neg
ret
ds
nop
fldl
enter
jmp
xlat
jmp
xlat
std
fcomi
sar
fimuls
xlat
movl
hlt
iret
enter
ljmp
jecxz
test
loope
ret
rcr
xchg
jecxz
fcom
ljmp
stc
inc
mov
jmp
loope
jmp
fucom
or
sub
cmp
cld
xlat
xlat
int3
cld
or
loope
cmc
cmc
fdiv
jecxz
filds
in
aad
aas
leave
repz
fcom
ds
aas
test
xchg
jmp
xchg
hlt
aad
sub
aam
fdivrs
mul
test
test
jmp
mov
loope
into
in
cs
lret
enter
stc
in
std
fsubp
add
cli
dec
mov
ljmp
enter
xorl
test
test
test
in
ljmp
in
call
fadd
sti
hlt
ror
in
idiv
add
mov
loopne
repz
xor
rcl
sarb
test
fmulp
repz
mov
ljmp
repnz
in
loopne
fcmovbe
lret
xlat
loope
fnstsw
rcr
sbb
xchg
fmuls
sub
icebp
aam
ss
aad
loopne
addl
fadds
in
jecxz
ljmp
shl
iret
out
cmp
or
jmp
hlt
out
xchg
jecxz
mov
out
into
lret
out
std
rcl
fdiv
aad
mov
jecxz
mov
out
cmp
leave
xor
shl
lock
stc
loope
test
not
fmul
fsub
xchg
cs
cmp
stc
idivl
cmp
ret
hlt
icebp
xor
loopne
cld
test
in
lret
std
loop
and
repnz
jmp
cmp
out
sarb
aas
les
out
orl
enter
xor
in
cmp
ror
mul
cmc
rol
loopne
orl
enter
out
loope
aaa
lret
aam
stc
stc
into
cld
jmp
fucomi
out
cmc
leave
in
xchg
iret
cli
test
mov
in
xor
clc
ljmp
loopne
adc
test
xchg
testb
and
stc
ss
iret
loope
fstp
repz
cmp
sti
ror
std
decb
and
loopne
enter
fistpll
sti
rcr
cmp
fldl2t
fmuls
in
test
ss
jmp
aaa
int3
loop
filds
aad
fcomi
decl
in
xor
int
cmp
fucom
flds
lret
stc
loope
fucomp
into
repnz
icebp
cmp
lret
cmp
aad
cmpl
stc
hlt
cli
out
ljmp
test
xor
not
enter
fmul
icebp
aad
hlt
fdivr
test
out
and
fmull
xor
out
icebp
icebp
neg
ljmp
lock
xor
fucomp
in
sub
cmp
f2xm1
xor
icebp
shlb
idivl
aaa
test
xlat
sti
mov
lret
xchg
addb
xor
ror
shr
xlat
cmpl
loopne
fildl
iret
out
ljmp
leave
jmp
int3
hlt
ss
int
cmp
ret
in
loope
and
sti
in
repnz
mov
ret
xor
hlt
stc
cmp
int3
aas
std
cmp
lds
test
fcomp
repz
jmp
xlat
aam
out
ds
int
hlt
sti
repz
or
cld
fldlg2
enter
hlt
divb
into
repz
idiv
fdiv
rcl
fcom
cli
fdivrp
shl
enter
test
fstl
loop
aaa
int3
fcmovnu
aad
in
sti
cmp
shl
cmp
cli
adc
mov
jmp
leave
aam
rcl
aam
insb
out
ds
pop
add
test
out
rorb
loopne
xor
lret
call
fdivr
ljmp
fcmovbe
addl
rorl
enter
out
sti
lret
lret
adc
fstp
fcmovnu
clc
jmp
repnz
das
in
rcl
clc
div
ljmp
jecxz
shl
fcmovnb
in
fisttpll
sub
fst
cmp
cmp
fcmove
cli
ftst
ljmp
ljmp
neg
lret
leave
fsubr
adc
fcmovu
ret
mov
cli
test
jmp
sub
lret
xlat
fdivrs
bnd
fidivrs
clc
leave
fsub
in
xchg
icebp
test
shr
std
and
repz
fisttpll
sub
std
rclb
fcmovne
sarb
out
clc
cli
cmp
in
in
mul
xchg
test
out
loope
in
rcl
jecxz
sti
leave
enter
cmp
int3
test
iret
icebp
addl
sub
cmp
out
cmp
std
out
ljmp
loope
leave
and
in
lock
jmp
in
in
in
sti
neg
int3
shr
loope
repnz
test
lret
icebp
cld
repnz
loope
xor
int3
enter
cmc
lock
repz
jmp
dec
in
mov
lret
jmp
icebp
iret
enter
leave
cmp
stc
test
fdivrl
test
xlat
mul
in
fldl
xor
aam
shl
cmp
cmc
repnz
lret
jmp
les
jmp
stc
fucom
xor
int
into
aam
idiv
rcr
repnz
aam
std
aam
cld
xchg
out
jmp
repz
sub
aad
ss
in
aas
cli
idiv
xchg
out
int
in
in
test
aad
aam
loopne
aaa
fmul
neg
loopne
xor
add
ds
xchg
out
icebp
xor
rol
int
int
cmp
shl
rol
sti
fcomip
cli
lret
mov
xchg
sub
mov
jmp
test
addb
test
mov
cmc
iret
rcl
sub
xlat
idivb
ret
fcomp
repz
or
out
fldl
iret
int3
cmp
cmp
cli
sar
rcl
lock
in
addl
lock
xor
cs
lock
add
in
fimull
rcr
repz
into
std
out
hlt
ss
repnz
cld
in
call
pop
cmp
cld
icebp
loop
sub
xor
cmp
hlt
not
aam
aad
xchg
push
mul
jmp
and
call
aad
sti
shr
fnstsw
cmp
f2xm1
cmp
jecxz
sbb
in
xchg
out
iret
leave
xlat
out
xor
fnstsw
fdivs
lock
cli
idiv
in
les
lock
lret
cld
not
fnstsw
cmp
enter
movb
test
into
sti
in
cli
leave
fcomp
fcmovnu
cli
lock
rol
incl
std
iret
lock
ljmp
out
iret
xor
in
idiv
cmp
test
lret
mov
clc
fcomi
call
ror
ss
cld
fistpll
fcomip
stc
out
fnsetpm(287
mov
hlt
in
iret
into
in
aas
sub
fcom
icebp
cmc
idivl
call
xor
enter
fsincos
sti
ret
leave
into
fdiv
loopne
fdivp
enter
fnsave
sarl
add
fabs
loop
call
out
sub
out
std
fdiv
jmp
and
stc
call
fsubr
loop
ljmp
fnsave
int
fst
shl
fcmovne
sti
cld
std
test
out
stc
repz
icebp
test
shl
sti
cmp
clc
out
loope
out
fdivr
xchg
mov
ret
loope
neg
icebp
cmp
shl
xor
sarb
das
lret
stc
fadds
test
in
mov
shl
jmp
cmp
fsubr
cmp
cmpl
cmp
mov
sub
fnstcw
jecxz
shl
jecxz
idiv
fldl2e
fnstcw
in
mov
xrelease
rol
lret
cmp
not
cmp
xor
add
movl
jmp
rol
ret
ret
ret
fwait
cmp
iret
stos
jle
pop
add
ror
cld
ljmp
ror
call
hlt
out
cmp
int
cmpl
ljmp
loope
jmp
repz
rcl
xor
fistpll
fcmovnbe
cmp
out
loopne
mov
call
aaa
xor
in
xor
fcmovne
ror
in
fcmovu
repz
in
mov
jecxz
fcmove
out
sar
shl
repz
stc
out
ret
fsubr
jecxz
stc
cli
sti
cli
les
fdivr
lret
shr
ficoms
leave
int
cld
clc
int3
out
cmp
repz
into
flds
in
xor
call
lret
clc
les
cmp
cmc
ljmp
loopne
sar
mov
mov
std
mov
lret
xlat
ss
les
leave
ss
fiadds
fadd
xor
loope
out
fdivr
nop
lret
lock
sti
out
int3
aas
in
lock
out
icebp
xchg
idiv
jecxz
test
lock
call
aad
icebp
leave
iret
call
out
ror
cli
stc
frstpm(287
test
enter
xchg
cmc
ljmp
into
out
neg
repz
ror
std
cld
out
lret
out
rclb
jmp
incb
icebp
cmp
stc
clc
and
call
iret
lock
int
shr
in
pushl
std
in
addl
ret
dec
out
fsubp
call
cmp
xor
neg
loopne
into
shr
repz
cmp
fiadds
xchg
xchg
incb
icebp
hlt
cmc
cmp
loopne
ljmp
mov
out
fisttps
repz
in
test
fcom
testl
cli
cld
addb
xchg
out
int3
mov
out
in
out
ss
test
out
lock
cli
mov
shl
jmp
sub
out
xor
incb
ret
fadd
call
xchg
loop
in
test
out
bnd
call
rcl
shl
repz
out
fiadds
test
call
shlb
xor
int
sti
imul
rcr
fyl2xp1
sti
cmp
ss
rcl
imul
add
xlat
enter
cli
jmp
in
repz
xor
sti
shl
out
loopne
mov
testb
cmc
repnz
ljmp
cmp
cmp
int
neg
fsubp
shr
in
fmulp
out
cli
xchg
and
xor
fucomp
clc
loopne
ret
cmp
ret
out
loopne
leave
nop
orl
jmp
sub
fcmovnb
mov
ftst
fsub
jecxz
int3
in
test
cli
repnz
cmp
test
stc
ret
aas
in
in
fdivr
repz
loope
out
enter
xor
aam
lock
ret
loop
aam
jecxz
std
mov
out
int
aaa
cs
iret
rcr
jmp
int3
lock
fcompp
lock
aas
rol
ret
adc
out
in
and
fucomi
rcl
leave
repz
repnz
cmpl
jmp
test
in
int
xchg
call
ror
imul
ds
shr
ss
loope
loop
loopne
fucomip
out
xchg
in
out
repnz
int3
cmp
rol
std
sub
sti
test
jmp
fimuls
lret
nop
cld
test
sti
leave
out
into
in
loopne
lret
ds
mov
repnz
fsqrt
and
fiaddl
xor
hlt
sti
in
cld
lret
ret
loop
out
out
ret
loope
loop
lea
rolb
lock
aad
ljmp
in
cmp
std
sub
lret
loope
in
ret
jmp
out
cmp
cmp
int
iret
aad
hlt
jmp
jecxz
mov
mov
in
into
fadd
repnz
shr
cli
shl
test
iret
cmc
out
stc
fmul
fsub
sub
jmp
xchg
ret
into
repz
das
out
cmp
idivb
sbb
repz
adc
fdivr
mov
call
jmp
lock
std
iret
fcmovnbe
lock
repz
cld
fildl
fxch
out
sar
in
aam
int3
xor
stc
in
icebp
fiadds
roll
in
out
into
out
out
jmp
shll
cmp
cli
out
cmp
xlat
aad
mov
leave
mov
in
in
stc
enter
cmp
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
orl
jmp
into
ds
rcl
aad
arpl
mov
jl
add
repnz
push
or
sub
aad
shl
out
hlt
cmp
lret
repnz
cmp
out
in
test
test
test
ljmp
xchg
repz
aad
lret
std
out
fdiv
cmc
std
rol
xchg
loop
jmp
rol
xchg
shl
in
icebp
in
rcl
sub
sar
leave
std
stc
shl
icebp
xlat
add
sar
mov
call
cs
fucomip
sub
cld
roll
aam
rol
fimuls
call
aam
xor
xlat
cmp
les
aas
fdivr
stc
repz
xor
vpand
sub
lock
ljmp
rcl
repnz
in
xor
int
out
aam
ljmp
ret
clc
enter
jecxz
cld
loopne
lret
out
sti
cmp
in
lret
cmp
lret
rcl
fcmovnb
mov
mov
mov
nop
rcl
loopne
fcmove
cmp
jmp
cli
cmp
clc
leave
repz
out
fdivr
cmc
loopne
xor
out
in
xlat
int3
aam
xor
fiaddl
mov
test
repnz
jmp
xor
xor
out
call
rcr
cmp
iret
std
in
stc
rorl
clc
test
int3
lock
aad
cmp
rcl
loopne
repnz
in
shl
std
shr
clc
jmp
or
xor
int3
cmp
clc
lret
imul
aas
lret
int
jecxz
mov
test
out
xchg
mov
addl
int
rcl
cmc
test
dec
flds
fsubr
jmp
cmp
aad
fndisi(8087
aam
aad
fsqrt
test
test
fcoml
mov
sti
aad
fsubr
int3
loopne
jmp
iret
jecxz
test
mov
ret
loopne
fucomi
loope
shl
ror
aam
in
leave
rcr
cmp
cmp
rcl
stc
aad
mov
ljmp
in
jecxz
enter
neg
cmc
ds
hlt
repnz
cmc
ret
cli
loopne
mov
in
fiadds
repnz
ret
fcom
leave
out
in
repz
cmc
cmp
test
repnz
cld
call
lea
in
xor
hlt
fcom
call
ret
sar
xchg
call
in
xchg
mov
not
lock
fcmove
ss
std
cmp
test
mov
fiaddl
xchg
xchg
aaa
into
xor
out
call
iret
in
jmp
enter
int
iret
lret
aas
stc
lock
in
cmp
iret
iret
lock
loop
roll
cld
nop
fiadds
f2xm1
ljmp
int3
cmp
lock
leave
cld
shl
test
lret
clc
test
int
call
xor
repnz
ljmp
hlt
xlat
mul
or
leave
fsubp
xchg
inc
int3
aad
jmp
repz
out
hlt
aas
icebp
out
ret
clc
aam
sbb
repz
repz
lock
lret
addb
loop
fldl2t
jmp
enter
iret
xchg
rclb
cmc
iret
shr
out
jmp
xlat
loope
in
les
mul
fimull
das
aad
repnz
leave
cmp
fistpll
addb
testb
nop
repz
shll
clc
lock
loope
in
ret
jmp
out
ljmp
in
ds
std
ljmp
jecxz
int3
fsub
out
xlat
ret
loop
call
add
jmp
ljmp
fucom
ffree
in
cli
in
cli
mov
fcmovu
faddp
xor
xor
fstpt
xor
aam
fnstsw
loope
jecxz
not
ds
mov
out
loopne
jecxz
int3
not
lret
fdivrs
repnz
sti
in
fisttpll
rolb
jmp
neg
xor
fnstsw
loope
rcl
mov
xchg
xchg
aam
imul
aam
shr
hlt
in
aas
aam
fcomi
ds
sbb
loop
in
adc
fdiv
int
jmp
xor
in
cmp
loopne
cmc
cmp
repz
jecxz
fsubr
test
in
lret
iret
lock
int
ror
out
lock
aas
shr
out
in
cmp
ffree
int3
ljmp
shll
jmp
std
icebp
mov
sbb
xor
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
add
imul
mov
jmp
leave
sarb
int
leave
jle
mov
add
testb
jle
idivl
out
in
rcl
xchg
fucomip
std
nop
xchg
aaa
ret
lret
clc
cmp
iret
cmp
div
loop
test
fisttps
lock
icebp
in
clc
into
rcr
fmul
std
std
inc
ds
bnd
movb
mov
xlat
leave
fcom
cmp
out
cmp
sti
cli
out
aas
rcl
xlat
cmc
sbb
sti
test
lock
iret
divl
out
loop
pop
lock
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
push
andl
push
subl
push
xorl
xor
lea
xor
movl
or
andl
xor
add
adcl
push
orl
lea
subl
push
push
xorl
lea
movl
inc
subl
xor
negl
xor
call
movl
movl
mov
mov
jmp
adcl
xor
movl
xor
sbb
xor
addl
xor
movl
incl
mov
mov
cmp
jb
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jb
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
andl
movl
sub
lea
mov
sbb
mov
mov
and
lea
neg
mov
xor
or
sub
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
movzwl
sub
mov
mov
mov
add
mov
add
xor
mov
add
not
mov
mov
mov
cmp
mov
movl
mov
movl
je
sub
mov
xor
add
adcl
imul
mov
movl
jmp
sbbl
xor
movl
add
mov
xor
mov
mov
sub
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
jmp
sbb
add
mov
xorl
mov
xor
mov
orl
xor
movl
add
movl
cmp
movl
jne
push
pushl
andl
pushl
andl
call
mov
mov
mov
xorl
mov
mov
mov
mov
movl
movl
andl
mov
and
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
andl
mov
xorl
xor
sbbl
add
movl
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
xorl
xor
sub
lea
mov
mov
xor
orl
lea
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
and
mov
movl
mov
movl
or
mov
mov
xor
addl
add
cmp
movl
je
xor
mov
xor
addl
add
add
mov
mov
mov
sub
and
mov
xor
and
mov
orl
sub
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
xor
add
adc
add
mov
movl
cmp
ja
mov
and
mov
movzwl
sub
mov
xor
add
movl
cmpl
je
cmpl
jne
push
push
push
push
call
mov
dec
mov
jmp
orl
imul
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
xor
add
and
mov
xor
adc
add
add
mov
mov
mov
mov
mov
mov
sub
or
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
push
sub
push
xor
push
mov
call
pushl
pushl
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
je
mov
jmp
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
push
movl
push
movl
mov
movl
push
movl
mov
movl
mov
mov
push
not
mov
movzbl
mov
cmp
movl
je
mov
mov
xor
addl
add
cmp
je
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
sbb
xor
add
push
mov
adc
pushl
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
pushl
mov
call
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
push
movl
mov
mov
sbbl
add
andl
xor
movl
cmp
jne
and
mov
mov
movl
add
mov
mov
mov
movl
xor
and
push
xor
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
movzbl
adc
mov
xor
mov
addl
xor
subl
add
movl
mov
mov
movl
movl
mov
movl
push
mov
movl
mov
cmp
movl
je
orl
mov
addl
xor
adcl
xor
xorl
lea
negl
xor
movl
cmp
movl
jne
jmp
add
mov
xor
addl
add
andl
mov
movl
mov
xor
and
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
adc
movl
dec
movl
mov
push
mov
adc
xor
mov
add
mov
xor
or
mov
add
mov
push
push
adcl
test
movl
je
mov
mov
mov
sbb
mov
mov
imul
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
sbbl
mov
add
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbbl
mov
xchg
sub
xor
orl
mov
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
sub
mov
xor
sub
xor
add
mov
movl
mov
movl
je
andl
mov
xorl
xor
andl
add
cmp
jne
adcl
pushl
call
subl
mov
movzwl
add
mov
mov
mov
or
mov
sbbl
mov
xor
andl
add
cmp
je
pushl
pushl
orl
call
movl
mov
mov
add
mov
xorl
xor
add
movl
cmp
movl
je
orl
mov
mov
mov
sbb
mov
mov
notl
add
movzwl
sbb
mov
sub
mov
subl
mov
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
orl
mov
mov
subl
add
adc
xor
mov
sub
mov
xor
add
mov
sub
mov
add
xorl
lea
mov
xorl
push
pushl
subl
pushl
orl
call
mov
xor
add
sub
mov
mov
notl
xor
decl
add
movl
cmp
movl
jne
inc
mov
movl
inc
movl
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
