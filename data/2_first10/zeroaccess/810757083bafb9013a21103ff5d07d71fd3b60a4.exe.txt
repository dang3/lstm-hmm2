push
mov
sub
mov
adc
mov
mov
or
mov
sub
push
movl
mov
mov
mov
sbb
mov
and
mov
orl
mov
mov
add
orl
mov
add
mov
jmp
iret
inc
loopne
push
adc
fmuls
notl
ja
sub
mov
jmp
xlat
sahf
je
in
mov
adc
ss
data16
mov
dec
inc
movsl
mov
pop
inc
xchg
mov
fdiv
ret
orl
adc
movsb
jge
dec
mov
and
cwtl
clc
pusha
lds
popf
mov
inc
push
mov
cli
imul
loop
push
stos
xor
notb
out
mov
cmp
xor
sub
jae
jp
call
jle
push
push
jl
adc
or
cmp
lret
xor
mov
aam
jne
push
ret
clc
sbb
pop
xlat
mov
test
xchg
call
jp
push
inc
sbb
aas
shll
loope
cmp
adc
mov
cmpsb
and
add
in
push
xor
dec
in
test
pop
iret
fldcw
call
addb
repnz
scas
je
bound
int3
daa
jg
push
mov
mov
mov
and
mov
sub
cs
fldcw
ds
cmp
inc
jg
inc
movsb
adc
push
subl
je
push
arpl
jle
outsb
sbb
stos
add
add
dec
loopne
data16
cmp
jb
pop
clc
popa
xor
mov
dec
cmp
ljmp
movsb
roll
not
adc
out
ja
adc
ds
dec
or
out
lret
add
lods
stos
lret
int
mov
cmc
iret
sub
mov
adc
rcrl
pop
ss
ret
xor
adc
inc
lea
mov
adc
pop
call
bound
or
inc
inc
pusha
lods
and
add
es
pop
les
mov
or
cmp
adc
cmpl
scas
and
lods
mov
adc
xor
cmp
daa
and
aad
inc
f2xm1
dec
lret
xchg
dec
dec
dec
push
pop
push
mov
in
and
test
pop
pop
pop
jecxz
jnp
jo
pop
inc
sbb
pop
repz
pop
mov
cmp
cli
pop
mov
sub
call
add
testl
test
lea
in
jmp
aas
xchg
lock
or
insl
adc
ja
outsl
cmp
scas
cwtl
jg
push
faddl
les
push
push
ja
cmc
movsl
arpl
pop
ds
push
bound
pop
push
sub
filds
je
mov
sub
inc
dec
mov
scas
xchg
bound
in
adc
jmp
push
sub
shlb
ds
fbstp
adc
fwait
push
mov
cld
sar
cmpsb
lret
mov
ds
fnstenv
jp
dec
nop
cmpsl
cld
insl
fcompl
jle
push
aaa
lea
enter
int3
mov
add
push
shr
add
in
stos
jns
movb
xchg
popf
inc
insl
cmp
mov
rcrb
pop
push
add
jmp
adc
sub
pusha
hlt
lahf
or
test
add
mov
xchg
mov
xor
add
push
mov
pop
enter
ljmp
push
out
fldcw
dec
sbb
into
scas
cltd
sbb
int
push
mov
jecxz
sti
pminub
lods
sbb
movsl
inc
adc
fstpl
inc
dec
push
add
popa
out
nop
hlt
push
pop
mov
ljmp
jecxz
inc
jnp
xlat
and
mov
jns
jb
mov
jge
lock
int3
and
or
push
jnp
ret
inc
loop
outsb
test
push
and
mov
ffree
fcomps
jg
in
mov
push
dec
dec
stc
cld
sahf
jnp
je
idivb
stos
mov
jno
sbb
sbb
inc
pop
push
inc
jno
mov
jno
fwait
dec
mov
sbbb
xlat
stc
mov
sbb
cmpsw
enter
loop
lock
inc
movsb
movsb
or
cmpsb
xchg
hlt
inc
or
out
movsb
inc
loop,pt
fstl
push
xor
and
icebp
imul
pop
and
cmpsl
or
cmp
jl
jae
cwtl
mov
pop
fldcw
inc
outsl
scas
push
enter
mov
jb
or
lret
jno
fldcw
xchg
jbe
mov
div
ds
lods
jmp
cmp
push
pop
pop
cmp
xchg
mov
or
adc
les
mov
out
test
xchg
es
dec
push
mov
push
jle
pushf
scas
mov
adc
sbb
enter
cld
in
daa
and
adc
outsb
jo
imul
adc
int
imul
sbb
xor
lahf
mov
cmp
pop
ss
sub
cmp
pop
adc
mov
insl
cmp
mov
imul
and
mov
add
lret
sub
dec
dec
pop
stc
je
insb
add
push
xor
xchg
outsb
jb
push
and
and
lea
push
xchg
rorb
repnz
test
fwait
mov
dec
or
add
push
or
je
add
arpl
adc
dec
xor
stc
mov
out
stos
test
push
loope
es
xchg
mov
push
outsb
popf
fwait
mov
sub
or
jmp
or
xchg
push
in
and
movsb
sub
aaa
mov
sahf
mov
test
xchg
aad
mov
out
xor
push
sbb
scas
lds
and
push
xchg
cmp
lahf
inc
lahf
rcll
or
in
lods
leave
xchg
jo
or
add
mov
incb
test
lcall
mov
popa
cld
push
xchg
imull
gs
fsts
sub
jne
inc
lret
cmc
lcall
rorl
xor
mov
int
mov
aam
outsb
sbb
dec
lds
ja
dec
loopne
jmp
bound
push
clc
int3
jle
daa
lret
repnz
rcll
lods
enter
shl
jmp
add
xchg
in
imul
aad
fcmovu
sarb
add
es
and
scas
cmpsb
dec
xchg
ss
int
lret
stos
lds
mov
cltd
inc
and
mov
or
sbb
cmp
or
add
xor
outsl
dec
shll
cltd
adcb
sbb
repz
and
sbb
out
sub
arpl
sbb
xor
mov
jb
notb
outsb
push
cld
imul
inc
cmp
ljmp
fwait
loope
xchg
insl
pusha
scas
out
sbb
and
push
sub
xlat
xchg
jno
sub
pop
aad
fcomp
lret
std
incb
dec
cmp
aas
icebp
dec
xchg
jns
inc
sbb
adc
cmp
daa
mov
inc
mov
mov
mov
addl
sub
notl
mov
movl
sbb
add
mov
not
orl
orl
cmpl
movl
mov
jmp
mov
jg
pushl
pushl
call
sbb
sbb
sub
or
orl
lea
adc
mov
or
mov
and
mov
xorl
mov
adc
add
mov
dec
mov
mov
adc
jmp
mov
xor
js
cmp
xchg
jle
sbb
fidivrs
jns
rcrb
adc
inc
cltd
xlat
xchg
xor
pop
cmpsl
mov
in
xlat
add
subps
daa
inc
dec
sbb
pop
fwait
js
xchg
iret
test
shll
mov
pop
fistl
stos
stos
add
cmp
lret
test
std
lds
adc
cmpsb
sub
push
push
cs
daa
dec
sbb
xlat
mov
pop
faddl
dec
arpl
mov
addr16
shll
fnstcw
fimuls
mov
ret
cltd
mov
adc
hlt
push
mov
dec
pop
lcall
ljmp
fdivrp
lock
sbb
out
inc
fcoms
jnp
or
stc
xor
push
daa
shlb
xchg
add
mov
btc
lea
xchg
mov
aad
test
cltd
gs
call
loop
in
push
or
jbe
es
push
aad
sbbb
mov
sahf
fistps
pop
xchg
jl
jecxz
fcmovu
int
inc
lret
je
rcrl
mov
das
mov
add
mov
mov
inc
icebp
insb
bound
lds
fwait
jmp
mov
inc
or
or
cwtl
je,pt
mov
and
pop
push
std
movsl
mov
mov
mov
push
add
cmpl
lret
or
dec
mov
outsl
jns
push
insb
fs
pusha
pop
xor
or
dec
xor
sub
dec
or
adc
addr16
out
adcb
mov
cmpxchg
add
ret
fcmovu
imul
mov
clc
ss
loop
pop
xor
gs
pop
mov
xor
push
pop
adc
ret
imul
nop
in
enter
pop
push
cwtl
push
or
insl
mov
decb
pop
xchg
hlt
int
inc
fdivs
addl
push
dec
push
ds
pop
pop
pop
aam
push
dec
push
cltd
mov
fsts
clc
test
sub
xchg
jb
xchg
fcmovb
mov
aam
js
xor
inc
daa
add
xor
cmpsl
jb
jb
push
pop
push
rorb
cmp
pmulhw
int3
dec
xor
mov
sub
neg
add
insl
jle
inc
push
sbb
inc
fsubrl
add
insl
ss
movsb
mov
ds
roll
xor
mov
loop
andnps
xor
sbb
sarb
mov
subb
jp
jg
repnz
lds
add
fnstenv
stc
out
mov
ja
inc
imul
fadd
sahf
divb
lahf
fsub
pop
in
sbb
sub
or
pushf
xchg
push
data16
jg
xchg
adc
push
push
push
out
stos
je
imul
inc
pop
sub
push
out
jl
fsubs
sbb
jbe
jb
xlat
int
mov
mov
imul
lcall
out
mov
mov
xor
movsl
sbb
sti
push
gs
add
sub
pusha
icebp
out
jb
pop
lock
rorl
scas
cmp
cld
jbe
inc
mov
sbb
sbb
pop
test
inc
cmp
jno
jb
jnp
mov
shrl
out
pop
loop
mov
mov
lods
testb
lret
mov
pushf
pop
stos
push
and
cltd
pop
and
jb
cld
js
dec
loope
imulb
xchg
mov
mov
pusha
pop
xlat
add
sti
sbb
lret
sub
cmpsb
or
lea
dec
cmp
shll
add
sub
out
dec
arpl
punpckldq
insl
mov
or
sub
mov
push
addr16
mov
pop
mov
or
mov
ror
inc
or
mov
push
outsb
cwtl
leave
xchg
xchg
push
xor
inc
imul
jbe
push
jns
jb
outsl
std
jno
push
push
inc
mov
xor
outsl
loope
add
sbb
sbb
cmp
push
adc
out
ret
push
sub
pop
push
mov
inc
ja
jle
dec
xchg
inc
sub
xor
std
sub
add
je
clc
fs
mov
scas
jno
imul
popl
insl
adc
jg
aad
cwtl
fstpt
iret
lock
sar
les
inc
push
or
flds
and
prefetcht2
cmp
and
daa
jae
push
lret
nop
fs
inc
popf
and
jmp
pop
mov
divl
pop
jle
inc
sub
mov
xchg
das
add
lcall
xlat
fildl
fidivrl
mov
lret
pop
xchg
daa
shll
test
in
xor
out
cwtl
jne
add
jmp
inc
bound
push
push
sub
mov
jno
iret
mov
mov
pop
sbb
insb
and
rolb
adc
mov
dec
inc
add
sbb
stos
push
fwait
adc
cltd
sti
outsb
iret
cmp
stos
orl
aad
movsb
daa
fsubl
push
mov
ss
push
xchg
insb
fnstenv
mov
out
mov
push
pushf
arpl
mov
jne
mov
call
cmp
mov
sub
sbb
fnstenv
insl
cmc
push
xchg
inc
mov
xlat
ret
sahf
push
sbb
cwtl
into
jne
jns
inc
dec
jg
iret
dec
negl
pop
push
mov
insb
lret
mov
and
fadds
adc
pop
xlat
xchg
dec
inc
sub
ja
mov
int3
mov
movsb
xchg
xor
divb
cmpsb
adc
aas
dec
mov
pop
pop
or
adc
call
dec
lret
mov
leave
fnstcw
cmovg
data16
leave
adc
mov
mov
jo
add
push
imul
test
cmpsl
adc
in
dec
test
xchg
test
jl
dec
push
cltd
jb
shr
adc
dec
or
or
push
aad
pop
pop
lds
inc
sbb
adc
stos
sbb
mov
jp
xor
lods
loop
adc
add
mov
mov
add
stos
sti
and
xchg
lret
or
hlt
mov
dec
cwtl
pop
inc
je
jne
hlt
pushf
lret
mov
ljmp
mov
out
jo
les
sbb
cmp
test
push
in
pop
dec
cmpsb
cmp
xchg
fwait
and
popl
jo
dec
cmp
inc
xlat
lods
pop
sbbl
xor
jl
push
lock
jnp
cmp
and
out
xchg
xchg
pop
insl
hlt
inc
jecxz
mov
call
js
cmpsb
push
lsl
mov
push
mov
pusha
inc
pop
cmp
pcmpeqb
or
push
cmpsb
test
les
xor
xor
pop
negl
mov
lods
enter
hlt
adc
add
jmp
jmp
mov
lock
popf
mov
scas
mov
ja
cmp
mov
add
jge
test
push
mov
cmpsl
xchg
pop
shlb
push
xchg
adc
push
dec
adc
adc
cld
loope
jns
testl
add
pop
fdivl
or
mov
shll
cld
lock
xchg
lods
mov
xchg
into
orl
fcomps
lock
lcall
mov
xor
cltd
add
iret
hlt
mov
stos
sub
sub
daa
lds
jmp
aas
sahf
test
dec
jbe
pusha
and
push
mov
jmp
xor
inc
call
xchg
fs
out
push
pop
ljmp
push
mov
in
mov
push
and
dec
leave
subl
popa
or
jecxz
ret
pop
adc
push
out
push
scas
icebp
mov
insl
ja
notl
mov
or
mov
mov
xor
sbb
cmp
fildl
push
cmpb
outsl
xlat
adc
pop
out
mov
lods
xlat
sbb
iret
dec
or
dec
lds
sarl
aaa
dec
jecxz
ss
add
mov
jecxz
jp
mov
movsl
pop
js
dec
jl
xor
fcompl
fldenv
inc
jge
fdivrl
mov
pop
pop
jae
mov
or
imul
aas
push
pmulhw
subl
jo
enter
dec
aaa
nop
fdivrl
adc
loopne
pop
repz
popa
mov
xchg
jmp
repz
negb
or
clc
xor
inc
or
sbb
filds
push
inc
xchg
in
mov
or
adc
pop
stos
add
sbb
mov
push
mov
or
push
ja
or
enter
jno
pop
pop
push
inc
aam
xchg
in
adc
loope
jg
mov
sub
dec
pop
imul
testl
inc
push
hlt
fbstp
pop
mov
push
lcall
and
sbb
adcb
adc
mov
or
dec
push
push
jns
int3
pusha
clc
fs
mov
mul
cmp
insl
ss
or
or
leave
push
push
mov
xor
daa
jo
adc
fadds
nop
or
aam
inc
testb
js
pushf
mov
jnp
test
hlt
or
sub
arpl
int3
cmpb
mov
mov
xchg
daa
adc
fucomp
xor
mov
add
clc
pop
xlat
js
cld
xlat
shlb
add
lea
pop
scas
or
nop
ret
repz
out
cld
add
loopne
ja
imul
inc
xchg
mov
sub
orl
fucomi
lahf
pusha
imull
ja
leave
add
adc
or
sub
roll
xor
inc
xorb
jl
jecxz
cmp
and
sbb
sbbl
sar
scas
call
xchg
pop
mov
negl
sbb
stos
pop
jae
xchg
push
icebp
dec
mov
aad
push
fstpt
je
xchg
and
enter
xlat
or
mov
push
cmc
pop
push
mov
pop
or
or
jno
gs
mov
mov
push
mov
push
out
outsb
push
daa
insb
test
sub
dec
xchg
jns
cld
mov
iret
mov
bound
pop
add
cmp
cmc
scas
mov
cmp
cli
push
mov
mov
imul
clc
testl
xor
jns
inc
cltd
sahf
enter
adc
dec
xor
sub
inc
fidivrs
dec
es
mov
xorb
imul
lods
cmpsb
sbb
dec
fistpll
gs
gs
clc
fstps
and
mov
push
repnz
inc
cwtl
daa
ret
fsubrs
and
sub
outsl
inc
pop
xor
cmp
popf
std
sbb
sub
jne
or
mov
mov
loop
dec
mov
pop
mov
cmc
jle
mov
mov
adc
or
sahf
inc
adc
cmpsl
emms
fwait
cmpsb
mov
cmp
sub
int3
jns
daa
add
jg
inc
arpl
cmp
jbe
lea
stc
outsb
inc
mov
movb
xchg
or
rclb
mov
in
loop
ja
or
es
mov
inc
decl
mov
addr16
in
lret
int3
inc
jmp
sti
jo
lahf
push
aam
gs
push
dec
push
imul
push
push
enter
mov
int3
loope
push
adc
sub
or
push
push
sbb
sti
push
sub
loop
cmpsb
or
mov
ljmp
xor
fldl
mov
xchg
lock
push
in
lahf
pop
out
xlat
clc
dec
mov
ficompl
in
loope
dec
and
insb
insb
jne
cld
test
and
and
mov
dec
jns
fiadds
lret
in
stc
bound
xor
andl
mov
xchg
pop
in
pushf
pusha
dec
dec
cwtl
or
flds
aas
push
adc
jl
push
lcall
sub
sarl
mov
mov
fisubl
shll
push
pusha
push
cli
lret
sahf
das
and
call
xchg
and
cs
jne
jmp
mov
out
push
test
jmp
xor
inc
jmp
sbbb
andb
pop
jle
loop
sub
divb
pushf
pop
sbb
mov
ror
addr16
movsl
pop
hlt
cmpsb
bound
cmpsl
inc
push
xchg
and
es
mov
inc
and
mov
pop
pop
and
jl
fwait
push
jae
push
cmp
insb
clc
insb
xor
std
fmuls
and
sbb
jp
call
dec
and
lods
cmp
data16
xor
pop
and
insl
xchg
lret
xlat
lock
call
adc
adc
rcl
into
pop
daa
popa
stos
dec
test
out
jb
ljmp
inc
xchg
ret
addr16
movsl
jno
fidivl
mov
and
sub
enter
lds
je
lods
mov
push
jne
sbb
pusha
dec
sub
sbb
sbb
loope
cmpsb
mov
jg
mov
and
add
add
clc
arpl
xor
outsl
in
mov
pop
jmp
sarl
adc
iret
popf
mov
imul
movsb
adc
dec
jl
or
xor
call
push
test
pop
bswap
insl
fidivrs
pop
xchg
dec
push
insb
and
inc
aaa
mov
xor
jecxz
adc
xor
loopne
or
pop
repnz
ss
push
in
xor
sub
jno
pusha
movsb
and
lods
jns
in
fwait
test
jecxz
mov
pop
mov
mov
mov
mov
andl
xor
adcl
xor
or
cmpl
movl
movl
movl
jmp
movl
not
jg
pushl
push
push
push
pushl
push
pushl
call
sub
xorl
andl
andl
addl
addl
adcl
movzbl
adc
jmp
sti
loopne
stos
dec
or
xor
sarb
xchg
cwtl
out
ja
sub
pusha
xchg
pop
fstl
scas
movb
test
pop
cmp
repz
ret
les
inc
lret
popf
popf
mov
lea
xor
mov
dec
cmpsl
das
dec
les
adc
addr16
test
mov
mov
ja
fwait
xchg
nop
rcrb
test
lret
lret
xchg
rclb
adc
imul
hlt
and
repz
in
cmp
xor
std
sub
lds
or
into
push
mov
ds
out
pop
imul
jmp
outsl
cmpsb
pop
sub
mov
push
pop
enter
sti
inc
repnz
xchg
xchg
scas
lret
scas
rcrb
mov
cld
dec
lret
arpl
test
pop
push
mov
mov
pop
mov
loope
push
daa
ds
inc
dec
mov
lcall
sbb
aam
mov
push
icebp
out
mov
sbb
jle
cmp
push
add
out
cli
ss
roll
push
lock
aam
clc
cmc
lahf
orl
mov
xchg
mov
rcll
pop
test
ret
fmuls
lods
or
div
adc
shll
imul
orb
and
bound
mov
jns
and
lcall
mov
daa
sbb
es
jns
cmc
leave
test
repnz
sub
fimull
jnp
mov
popa
mov
int3
mov
xor
mov
repz
inc
push
jge
jge
sbb
or
pusha
rol
sbb
push
xchg
cs
mov
xchg
shlb
jge
int3
dec
iret
pop
fisubs
mov
sti
xchg
cwtl
mov
fimull
adc
adc
sti
adc
xchg
jle
sarb
mov
push
mov
test
divb
repnz
adc
pop
push
js
xchg
jno
jne
add
sbb
push
hlt
loope
xchg
es
lods
mov
out
cmp
lcall
mov
jge
jecxz
sub
cmp
push
fsubrp
mov
sysret
push
inc
mov
dec
xor
mov
hlt
sub
push
sahf
out
mov
sbb
sub
inc
sbb
xlat
mov
inc
xor
add
outsl
mov
add
scas
outsl
jge
jns
out
popa
cmp
mov
ja
jmp
cmp
jl
movsb
mov
and
testl
into
jbe
repz
sub
add
stc
dec
push
orb
adc
dec
cmp
push
push
dec
cltd
sbb
aas
in
aad
loopne
leave
and
ret
pop
gs
push
test
stos
stc
mov
aad
hlt
insl
xchg
hlt
mov
and
jne
iret
das
and
mulb
pop
mov
das
fsubl
imul
outsl
cwtl
xor
mov
and
subl
hlt
and
ror
std
test
push
dec
sbb
aam
xor
and
inc
lods
inc
out
stos
jno
es
lods
xor
push
push
das
stos
and
or
add
xchg
mov
inc
push
in
xor
lods
mov
idivb
xor
mov
pop
or
ja
lahf
pop
ja
mov
cmp
outsl
call
pop
cmp
fmull
push
xor
xchg
push
adc
inc
fbstp
xchg
inc
fcmovnu
or
jmp
pop
push
fstpt
test
aas
adc
pop
fisubrl
stos
push
jb
inc
inc
inc
scas
sub
faddl
inc
dec
iret
rorl
sub
adc
out
mov
add
ljmp
jb
xor
stos
jb
sub
stos
pop
ficoms
les
pop
and
in
addr16
mov
mov
xchg
xlat
bswap
sbb
xchg
fucom
dec
ret
out
push
in
adcb
insb
cmp
sub
andl
cmpb
ret
out
mov
in
pop
sub
mov
jl
jb
ljmp
ljmp
jecxz
add
lods
shrl
sub
mov
inc
pop
divb
mov
rclb
push
in
outsl
cmc
xchg
jbe
je
jns
lods
sub
test
pop
add
jecxz
leave
push
mov
outsl
test
mov
adc
lcall
mov
add
sarb
pop
xchg
jecxz
out
jle
push
enter
sub
xor
push
jle
orl
jmp
pop
decb
lret
std
push
mov
sbb
push
mov
mov
insb
cmp
adc
out
add
mov
aam
and
sub
loop
addr16
bound
mov
jns
jge
lahf
icebp
pop
pop
jl
orl
mov
mov
pusha
lcall
lcall
add
fbld
cltd
stos
jmp
ret
lret
xlat
inc
jne
fldenv
or
ja
xchg
fisubs
pushl
lea
xlat
push
and
adc
data16
mov
sub
pop
mov
lock
sbb
or
testb
fiadds
xchg
dec
pop
div
enter
or
loop
lcall
xor
jmp
sbb
imul
lods
xchg
lods
and
cmp
repz
jp
imul
and
and
mov
sbb
jecxz
dec
es
outsl
mov
jmp
mov
xchg
mov
fnstenv
fnstsw
mov
pop
ljmp
nop
xor
and
loop
and
push
popa
push
in
pop
or
sbb
out
cmp
popf
fcomps
in
pop
negb
ret
sub
and
neg
test
enter
gs
test
cwtl
mov
and
enter
enter
idiv
sbb
loop
lret
popf
adc
fdiv
inc
insl
mov
test
shlb
and
xchg
jno
fistpll
dec
stos
cmp
das
bound
enter
pop
lock
and
xor
jno
neg
roll
cmp
push
test
dec
inc
jb
cli
repz
in
mov
jp
or
into
loopne
lcall
outsb
cs
mov
repz
xchg
je
push
bound
jne
dec
jmp
movsb
in
sub
pop
inc
in
sbb
clc
imul
js,pt
into
andb
stc
or
pop
jmp
fisubrs
adc
and
sub
push
iret
and
xchg
dec
lock
mov
push
call
outsb
pop
lods
movsb
mov
in
dec
mov
or
movl
movl
sub
movl
movl
and
movl
movl
movl
xor
or
adc
movl
cmpl
movl
mov
jmp
not
jl
push
pushl
pushl
push
call
add
sbbl
add
sbbl
xorl
sbbl
notl
or
movl
addl
movl
movl
movl
mov
or
mov
movl
dec
movl
movl
cmpl
movl
movl
movl
movl
jmp
mov
jge
push
call
movl
orl
orl
add
xorl
xorl
xorl
and
movl
cmpl
movl
mov
jmp
mov
mov
jb
push
pushl
push
push
pushl
push
pushl
push
push
pushl
pushl
call
orl
sbbl
adc
addl
movl
sbbl
movl
add
movl
jmp
and
jnp
sub
mov
pop
shrl
das
aam
ja
stc
pop
pusha
xlat
mov
pop
andb
enter
xor
sub
adc
aad
pop
xchg
mov
lock
out
jbe
insb
lods
push
fildl
xchg
mov
jl
lcall
add
jno
adc
out
cmc
xor
mov
sahf
out
push
jbe
mov
inc
jno
or
mov
dec
mov
jae
mov
mov
aas
xor
cmpsl
xchg
mov
pop
sub
addr16
mov
adc
sub
icebp
sbb
xor
out
bound
dec
pop
nop
push
ficoml
es
xchg
sbb
stos
jb
outsb
mov
and
sti
dec
inc
or
adc
push
pop
xchg
rcr
cs
jl
movsl
gs
xor
outsb
jecxz
scas
mov
lods
push
xchg
and
push
subb
or
dec
or
rcll
in
lea
dec
fbld
aas
in
out
and
mov
mov
pop
pusha
cli
adcb
inc
adc
in
cli
cmp
jns
in
sarl
stos
inc
mov
shlb
push
mov
arpl
arpl
push
mov
iret
adcl
pop
ja
rol
cmp
jo
add
cmpsl
xorl
lds
clc
xchg
loope
mov
sub
xchg
loope
aam
jb
cmc
mov
int3
outsl
fimull
mov
or
mov
ja
sbb
mov
clc
movsb
das
lods
xchg
inc
test
sub
cmp
fdivrl
cwtl
imul
xor
mov
arpl
clc
push
jp
mov
sbb
in
sahf
push
scas
and
lcall
xor
andl
mov
enter
outsb
lret
jbe
inc
xchg
int
xchg
test
inc
subl
sbb
es
movsl
shrb
sub
lea
inc
add
movsb
divb
jb
cli
push
mov
sahf
xor
or
icebp
insb
movsb
sbb
adc
loope
cld
pop
inc
insb
popl
xchg
and
mov
pop
inc
rclb
mov
ret
jbe
jns
xchg
inc
je
out
in
mov
dec
or
adc
mov
jnp
or
xor
idivb
arpl
dec
push
jnp
sbb
hlt
dec
push
sbb
aad
pop
push
fs
mov
mov
sbb
xor
jbe
imul
jmp
xor
js
push
adc
sub
imul
fwait
adc
sbb
aaa
inc
int3
fwait
ja
mov
adc
lret
test
pop
xchg
div
shlb
and
jmp
test
dec
out
aad
dec
jo
adc
xchg
jae
push
fs
or
das
mov
inc
stc
aaa
cld
mov
outsl
leave
loop
or
outsb
lcall
xchg
push
cmp
lahf
femms
in
xchg
imul
push
pop
sub
ss
in
mov
repnz
ss
pop
xor
sbb
xchg
leave
dec
mov
pop
cmp
cmp
sbb
mov
mov
cmpsl
movsl
inc
in
xor
dec
sti
call
or
sysenter
rclb
mov
pop
mov
ja
push
call
lods
outsb
out
mov
rep
lret
test
dec
sub
lods
out
sub
arpl
sbb
pxor
push
pop
cmpsb
je
imul
fldcw
inc
inc
adc
rcrl
push
pushf
sbb
jno
jno
ficomps
insl
loop
mov
sbb
sbb
adc
sbb
or
add
inc
mov
dec
xor
xor
mov
pusha
dec
rcr
jle
aaa
shll
pusha
jbe
stc
mov
mov
dec
repz
mov
adc
jno
jmp
mov
shlb
inc
clc
sub
cmpsb
mov
xlat
xor
pushf
mov
sahf
jae
mov
test
jecxz
int
cmpsl
arpl
notb
jae
pop
xchg
xchg
repz
push
sub
sahf
jge
and
movsl
xchg
push
cmp
add
add
out
scas
stos
xor
subl
dec
xor
not
stos
or
or
in
aam
lods
test
dec
mov
mov
jmp
fsubr
negl
mov
shll
fsubrp
cmp
cld
ficomps
and
rorl
shrb
inc
inc
enter
xchg
xlat
or
popf
mov
pop
sbb
mov
mov
jle
iret
xchg
cmpb
xchg
scas
add
mov
sti
jmp
jno
sub
sub
shrb
sub
pop
inc
fldl
pop
ret
stos
inc
adcb
cmpl
ret
insl
mov
or
push
pop
rclb
mov
mov
les
scas
xchg
scas
insl
lock
es
in
bound
mov
cmp
shrl
or
in
rcl
add
loope
cld
cmp
xchg
jmp
mov
leave
loopne
sarb
dec
clc
dec
gs
add
sbb
ss
mov
aaa
sbb
sbb
mov
fldenv
push
add
mull
jmp
mov
bsr
js
test
je
sbb
test
rclb
add
movsb
xchg
inc
mov
inc
or
push
inc
inc
fsts
cltd
cmp
push
enter
movss
adc
mov
sub
inc
jecxz
jbe
pop
inc
jle
les
sub
dec
popf
test
daa
inc
int3
mov
lahf
loopne
mov
in
insb
sub
jecxz
adc
in
faddl
or
dec
inc
out
jno
xor
stc
flds
mov
sub
call
pop
movsl
outsl
pop
xchg
mov
pop
subl
andl
test
cmc
sub
push
test
add
test
cltd
mov
jnp
dec
sub
ret
mov
and
adcb
rorl
add
xor
jl
inc
dec
aaa
jp
add
add
mov
sbb
mov
cmp
nop
adc
in
inc
jmp
inc
cmp
inc
add
stos
cs
mov
cmp
sub
fdivs
jg
das
xor
mov
pop
jbe
les
pusha
sub
jmp
sbb
fldt
stc
add
mov
sti
mov
ficoms
sub
ficomps
xor
cli
psraw
fcoml
cld
rorb
and
and
fadd
fists
dec
cmp
push
in
repnz
les
pop
xor
xchg
bnd
aaa
jle
mov
lea
jae
inc
aam
push
add
inc
movl
xorl
movl
mov
xor
movl
not
movl
mov
addl
jmp
in
outsl
dec
gs
notb
inc
test
cmpsl
les
ja
mov
mov
pushf
addr16
std
repz
out
aaa
sti
add
int
mov
outsb
loope
inc
stc
insl
pop
scas
xchg
sbb
lahf
push
jl
rcrb
mov
aas
repnz
mov
test
and
loop
std
imul
mov
test
lret
inc
sarb
cli
pop
icebp
shl
fmull
pop
sbb
sub
push
push
icebp
jl
test
int
cmp
call
dec
sbbl
sahf
andl
bound
xchg
repz
pop
xchg
imul
push
test
fisttpl
sbb
cwtl
lret
mov
bound
mov
push
fiaddl
mov
mov
sub
push
pop
fdivrl
pop
adc
clc
xor
jp
sbb
push
jmp
leave
dec
adc
pusha
mov
stos
pop
arpl
cld
lods
pop
clc
test
out
mov
fsubr
adc
repz
inc
pop
movsb
pop
test
adc
xchg
dec
and
ret
dec
cltd
bound
lea
cmp
inc
cs
call
add
test
jns
aaa
fidivrs
test
rol
aam
ja
sahf
xchg
mov
daa
pop
cwtl
imul
pop
mov
mov
loopne
cltd
in
or
adc
mov
arpl
and
cmp
cltd
push
push
push
aam
popa
enter
scas
push
ds
lock
sub
cmp
mov
popf
dec
push
repnz
jp
cmp
in
push
push
add
lds
add
inc
jne
mov
shll
test
loopw
mov
xlat
arpl
mov
xor
push
lret
pusha
dec
mov
out
mov
sbb
stc
xchg
jae
inc
or
add
dec
mov
sub
jbe
aaa
mov
rclb
inc
ja
cwtd
loopne
mov
adc
aaa
jae
xor
xchg
icebp
and
xchg
ficomps
jae
pop
loopne
hlt
add
inc
push
or
cld
leave
push
hlt
ffree
mov
add
dec
cmp
inc
outsb
xor
lods
loop
mov
jp
xor
mov
xor
dec
sbb
ret
es
dec
xor
pop
test
cmp
xor
scas
xor
in
jecxz
lds
cmpb
shll
push
sbb
and
jge
int3
or
cs
adc
jmp
jae
int
pop
outsl
cmp
push
es
movsl
xor
nop
aaa
jo
mov
jge
lret
sarb
push
xchg
mov
lret
sbbl
fisubl
pop
jb
jle
rcll
movsl
adc
test
jge
adc
nop
jg
int3
gs
and
gs
dec
outsb
and
sbb
scas
adc
xor
lret
sbb
sbb
test
xchg
jno
jecxz
cmp
xlat
or
push
jo
push
stos
sbb
ss
pop
lods
aas
jge
jns
dec
sbb
mov
mov
int
sub
lcall
pop
imul
inc
in
movsl
cmc
jbe
adc
insl
xorb
mov
outsb
mov
sbb
push
and
push
mov
push
fucomi
sub
pop
lods
nop
add
sub
xchg
data16
jp
cmc
outsb
pop
inc
std
gs
iret
data16
jp
pop
push
push
xchg
xchg
xchg
lock
sti
cs
iret
pcmpgtd
inc
ja
push
repnz
clc
sti
test
jb
push
xchg
add
push
data16
sbb
jecxz
mov
aaa
mov
lcall
popa
lcall
js
ljmp
jp
fs
and
cmp
out
int
sahf
sahf
test
jbe
push
or
insb
and
mov
dec
mov
je
popa
and
js
jo
add
in
lock
sahf
std
sub
in
test
pop
mov
fs
insl
cs
and
in
sahf
fldcw
sbb
outsb
jmp
adc
or
add
sub
inc
cmp
push
cmpsb
cld
addr16
movsl
js
nop
push
stos
push
mov
add
cltd
mov
xor
jbe
bound
ss
xor
or
lock
or
popl
ljmp
mov
insl
pop
sub
int
mov
or
cmpsl
xchg
jnp
cmp
dec
insl
test
cmp
xchg
fwait
mov
iret
jl
lods
cwtl
jb,pt
out
add
in
sub
push
inc
into
les
inc
flds
inc
add
mov
addr16
call
mov
les
or
cmp
jno
jns
push
divb
int
cli
mov
mov
js
sbb
das
mov
negl
xchg
shrl
dec
ret
xor
jb
test
adc
inc
mov
dec
inc
jl
ficoml
adc
and
popa
dec
push
adc
fcomp
les
lds
inc
sti
call
lcall
sbb
push
out
sub
mov
add
xorb
sub
mov
and
pop
or
mov
add
jbe
cmp
outsl
adc
pop
ror
mov
xchg
jl
movsl
push
rcrb
lahf
sbb
adc
xor
dec
xchg
popf
jnp
xchg
mov
data16
pusha
cwtl
dec
add
pop
bound
jg
mov
mov
or
fxch
enter
xlat
jge
mov
mov
lret
call
aas
outsl
lret
call
xor
out
popf
cld
and
sbb
loop
mov
xchg
and
push
cmpsl
nop
mov
stc
mov
pop
jmp
stos
and
cmpsb
adcl
sub
push
fdivrl
nop
lret
mov
mov
stos
inc
add
xchg
int3
push
add
imul
pop
push
dec
fcmovnb
mov
movsl
adc
cmp
pop
push
call
lcall
ds
incl
in
insb
add
jnp
adc
mov
inc
and
bound
mov
fstpt
dec
mov
or
es
pusha
xor
daa
pop
cmp
or
and
mov
js
xor
ss
mov
repz
push
adc
flds
mov
mov
xor
pop
fimull
test
and
dec
cmc
dec
sti
sbb
push
cmp
jae
push
add
fidivrl
sti
das
popf
push
int3
repz
mov
in
adc
test
sbb
test
add
sub
lds
push
inc
out
stos
jg
das
jno
mov
mov
ja
mov
mov
lods
dec
xor
jle
sub
int
add
jbe
mov
loope
mov
orl
push
adcl
push
andl
push
push
adcl
call
adc
mov
subl
mov
xor
mov
sub
mov
movl
jmp
mov
daa
xchg
gs
or
mov
xchg
push
inc
mov
ja
sbb
or
push
inc
adc
out
mov
sbbb
insb
lcall
xor
add
out
push
aam
test
dec
das
out
lods
dec
jae
shl
sbb
cmpl
push
dec
leave
fidivrl
outsl
adc
pop
aam
stc
mov
loopne
fidivs
sbb
test
dec
or
into
sahf
cmp
jmp
mov
sbb
faddl
pop
jo
mov
popa
jle
pop
push
mov
or
imul
jp
adc
push
jbe
into
xor
mov
pop
xchg
dec
lret
add
mov
repz
and
fstl
pop
and
int3
push
inc
dec
inc
sub
xorb
faddl
xor
push
push
enter
sbb
pop
stos
cmp
add
fst
push
movsb
test
mov
push
stos
inc
scas
pop
add
stos
lods
pop
je
test
mov
mov
insb
movsb
push
fildl
add
pcmpgtb
cmpb
das
fs
test
xlat
sub
cmc
mov
outsl
insl
aad
gs
push
cmp
pop
adc
xor
xchg
insl
fsubrl
inc
inc
ja
movsb
add
pop
xlat
lcall
push
pop
jmp
insb
imul
out
cmp
jns
pop
xchg
pushf
cmpsl
lret
mov
mov
out
ret
popa
lods
push
sbb
jnp
mov
sub
adc
jg
push
idivb
neg
pop
mov
jo
jno
mov
js
or
outsl
aas
fists
push
inc
and
mov
jge
mov
jmp
push
aaa
dec
pop
lahf
rol
jb
jae
cmp
and
out
pop
dec
cmpsl
add
aam
mov
imul
jb
push
mov
xchg
adc
xchg
xchg
mov
inc
push
dec
push
inc
mov
pop
imul
cli
sbb
xchg
xor
adc
lret
inc
mov
add
jle
and
mov
and
movsb
sbb
daa
shrl
dec
aad
mov
cmp
rcrb
mov
lret
inc
rcr
lret
sub
jle
xchg
mov
insb
repnz
pop
push
lods
mov
push
dec
movsb
or
clc
xor
mov
aam
xchg
jae
adc
cmp
repz
shll
or
xchg
cmp
int3
mov
and
push
push
fwait
cmc
sbb
mov
popa
or
repnz
dec
adc
inc
loopne
mov
cmp
int3
pushf
cld
sbb
int3
adc
xchg
aam
pop
adc
pushl
add
loope
jae
cs
or
je
in
xlat
sbb
dec
popf
enter
xlat
cmp
sub
pop
loopne
out
fdivr
popa
pop
orl
lea
pop
ret
xor
fstpl
or
push
pop
adc
inc
ret
mov
aad
jo
mov
or
add
mov
mov
cwtl
xor
pusha
sahf
pop
pop
mov
and
mov
push
push
jmp
in
addl
pop
add
out
and
jnp
jb
push
or
or
inc
repz
aad
clc
jecxz
cltd
mov
fucomi
ret
mov
xor
lods
and
pop
stos
or
mov
repz
mov
in
movsb
nop
in
xchg
or
in
cltd
push
movsl
cltd
pop
mov
out
es
movsl
fwait
imul
cmpsl
inc
mov
mov
movsb
shr
insl
or
sub
movb
loopne
bound
lods
pop
ja
icebp
adc
popf
xchg
fs
pop
pop
fstpl
cmp
in
add
pop
mov
jae
out
add
and
popa
xor
jle
inc
ja
push
sbb
mov
ss
dec
fwait
xchg
and
adc
enter
pop
pop
not
and
mov
sbb
adc
pop
das
adc
mov
or
inc
das
sub
loopne
pop
es
sahf
stos
notb
lds
jle
mov
jnp
and
or
add
adc
or
rcrl
clc
es
out
data16
add
mov
out
pop
in
dec
cmp
sti
and
stc
mov
test
adc
or
xchg
dec
ret
jb
xchg
jb
jp
jge
test
je
arpl
mov
pushf
fmull
ds
and
xchg
pop
insl
mov
mov
push
push
fwait
pop
pushf
xchg
int
stos
cmc
ja
dec
cmp
insb
fisubl
pop
shrl
jle
dec
xchg
mov
test
loopne
inc
adc
ret
dec
mov
mov
push
add
mulb
add
xchg
add
lods
ss
or
push
push
lods
fcoml
push
push
arpl
sbb
push
popf
xchg
mov
test
sbb
pop
xor
mov
call
std
dec
xchg
out
repz
cmc
sbb
ljmp
shlb
ss
xchg
out
mov
xor
or
xchg
test
jmp
pop
andl
fidivrs
dec
mov
cmp
mov
call
shll
pop
dec
pop
or
dec
xor
frstpm(287
into
imul
imul
addr16
jne
aas
jle
je
loopne
cld
lcall
adc
lcall
shrl
pop
stos
cmp
jle
mov
add
scas
push
lcall
gs
lahf
movsb
and
out
stos
sub
out
or
jbe
adc
mov
insl
subb
xchg
xchg
dec
fimull
jl
and
add
cs
popa
lea
loopne
adc
outsb
out
inc
sbb
cmp
adc
rcrb
sub
cmpsb
icebp
and
fucomp
push
mov
mul
dec
cmp
cwtl
xchg
sub
push
add
sub
out
jno
pop
in
push
dec
nop
js
xchg
dec
adc
and
mov
sbb
mov
jbe
out
jle
into
cli
dec
mov
mov
add
scas
mov
jge
insb
repnz
scas
push
pop
in
shr
mov
xchg
out
xor
cwtl
lds
js
dec
cli
pop
fbld
daa
bound
mov
rcrl
pop
xlat
cmp
pop
pop
dec
shlb
cmp
cs
loop
xor
sahf
insb
mov
dec
icebp
pusha
jno
addr16
jns
xchg
pop
js
xlat
cwtl
push
mov
decb
icebp
or
jno
repnz
lock
and
std
stos
pop
das
jno
cmp
mov
out
daa
xlat
xchg
test
jle
aam
push
repz
cwtl
jg
cwtl
jl
push
in
idiv
aaa
movsl
outsl
xchg
test
aaa
cmc
push
aaa
inc
stc
sub
mov
xor
push
add
xchg
or
inc
sub
mov
adcl
lea
mov
mov
or
subl
and
mov
or
adcl
xor
movl
cmp
movl
jne
mov
and
mov
shrd
adcl
shr
adc
mov
mov
orl
shl
xor
andl
jmp
sub
sub
sub
adc
xchg
push
test
mov
add
mov
xor
inc
pavgb
push
test
xor
ficoms
scas
add
sub
fstl
mov
sub
add
mov
popa
jns
call
xor
xor
dec
data16
cmp
gs
mov
js
adc
call
rol
aas
ret
add
push
add
adc
inc
movsl
xchg
fnsave
orb
pop
push
mov
ds
add
fidivrs
jno
fcmovb
mov
cltd
jae
or
xchg
or
cmp
cltd
or
mov
shl
mov
mov
lret
xor
mov
popa
div
jp
push
pusha
xchg
mov
jg
mov
cmpsl
jp
push
pop
and
in
push
addr16
pop
scas
lahf
xchg
push
add
insl
mov
and
cs
mov
shlb
mov
sbb
dec
ficompl
sbb
mov
in
outsb
popf
jl
jmp
jae
jne
mov
fs
mov
jge
sub
insl
lahf
mov
ja
sbb
loope
cmp
rorl
fdivrl
imulb
lret
data16
adc
jne
lea
sbb
dec
cmpsb
in
lea
jecxz
out
popa
popa
leave
pop
sub
imul
sahf
and
into
mov
jb
and
ret
ret
inc
or
sbb
faddl
mov
sarb
mov
scas
mov
or
in
pop
adc
mov
pop
ficompl
sub
fdivl
xor
pusha
mov
xchg
filds
inc
mov
adc
or
xchg
pusha
addr16
test
repnz
mov
push
outsl
enter
or
arpl
and
inc
and
xchg
push
push
push
mov
mov
push
and
mov
pop
std
push
pushf
test
imull
xchg
out
cmpsb
adc
sbb
cmpsl
and
adc
cmc
cltd
arpl
adc
xor
sbb
es
xor
dec
sbb
test
inc
cmpsb
cli
xlat
popa
test
xchg
mov
rcll
popa
hlt
push
pop
int3
arpl
inc
sbb
adc
cmp
int3
add
nop
sbb
and
rcr
lods
out
push
or
shrl
mov
and
jnp
insb
int3
aad
add
mov
in
scas
jg
loope
inc
subb
cltd
push
inc
adc
aad
sub
inc
xlat
pushf
test
stos
add
subb
ja
int
insl
sub
jg
popa
push
jne
adc
int
mov
in
enter
outsb
cli
sub
fnstenv
mov
push
ja
mov
push
sub
add
mov
or
xor
add
add
mov
imul
pop
subb
pop
mov
repz
mov
loope
sbb
jo
repnz
push
push
sti
push
ret
xchg
mov
out
sbb
adc
push
xchg
repz
inc
lret
cmp
test
sbb
xlat
push
pop
or
xor
lock
xor
add
ja
aaa
es
loop
or
and
ss
out
js
mov
adc
cs
add
mov
and
jp
ret
fcom
sti
dec
fisubl
mov
mov
push
sub
or
mov
jmp
or
imul
stos
sbb
mov
daa
daa
xor
push
pop
arpl
inc
pop
cmc
mov
push
loop
mov
out
add
cmpsl
push
and
xchg
mov
lods
cli
lds
mov
testb
and
push
push
mov
xchg
in
in
mov
xor
sahf
adc
jp
xor
cld
fdivrs
aas
dec
or
jmp
mov
cwtl
mov
push
stos
sahf
xchg
outsl
mov
cmp
inc
movsb
int
fadd
mov
call
sub
push
xchg
nop
add
pop
in
sbbl
jbe
cmp
xorb
sub
add
mov
mov
test
repnz
rclb
dec
pop
dec
fidivs
mov
mov
and
std
cmp
cmovb
jmp
out
dec
jg
lds
lahf
mov
push
adc
mov
cli
xchg
fsubs
add
pop
or
sbb
lock
push
mov
cmp
mov
daa
inc
outsb
or
pop
test
pop
scas
out
add
or
push
call
mov
jge
movsw
dec
into
mov
mov
and
lahf
cmc
jo
int
mov
sarl
in
sub
js
sbb
scas
xor
fdivrs
rolb
cli
mov
cmp
jge
adc
cwtl
xchg
aaa
xchg
cmp
sbb
out
aaa
inc
push
cs
mov
stc
jle
mov
add
sub
inc
fmuls
dec
xor
subl
ja,pn
sbb
push
xchg
mov
push
and
jl
ds
push
in
out
cmpsb
mov
push
stc
pop
mov
jno
lahf
stc
test
sub
mov
test
dec
pop
movsb
int
ljmp
loopne
out
cli
dec
cmpsl
andb
into
mov
rcrb
inc
rolb
pop
dec
adc
push
rclb
loop,pn
and
adc
ret
mov
call
fsubrl
add
push
cli
loop
jo
push
mov
push
or
inc
xchg
shl
testb
adc
sub
xchg
int3
push
aas
jle
fwait
jmp
lcall
inc
fdivr
loope
lahf
fsubs
jmp
leave
imull
shr
daa
insb
shl
call
fistpll
arpl
int3
adc
add
mov
hlt
pop
fcompl
or
and
inc
gs
adc
sti
pop
jne
or
fsubs
xor
aam
ljmp
sbbl
je
movsb
lret
pop
out
negb
adc
inc
jne
in
add
mov
jae
xor
xor
add
pop
pop
mov
pop
les
aam
or
addr16
xchg
and
add
faddp
mov
repz
stc
movsb
add
je
jae
push
out
jae
out
add
mov
sahf
mov
ss
into
add
lret
repz
dec
xor
popf
std
sbb
int3
and
push
xchg
sub
daa
fdivp
adc
and
inc
daa
movsb
jb
push
call
in
adc
inc
sti
cmp
xchg
jp
adc
inc
mov
into
xchg
sti
push
add
aad
mov
jp
test
clc
test
xchg
dec
dec
es
cmpsb
push
mov
mov
cmc
inc
add
shl
adc
add
subb
add
sbb
dec
clc
sub
jbe
fdivs
rorb
mov
movl
cmp
jne
notl
mov
mov
xor
cmpl
mov
movl
mov
jmp
mov
movl
jl
push
call
xor
or
movl
movzbl
xor
and
mov
xor
mov
xorl
mov
jmp
daa
mov
or
ret
add
dec
mov
ja
dec
jbe
sbb
push
or
adc
int
push
xor
out
jge
xlat
in
inc
xchg
or
shl
mov
pop
xlat
jb
jmp
sub
pop
mov
push
inc
rcrb
xor
sub
pop
push
push
js
adc
push
or
or
add
push
hlt
xor
jge
lock
gs
inc
add
dec
sbb
mov
mov
js
jecxz
inc
pop
sbb
and
cwtl
jg
js
dec
icebp
or
pop
and
call
popa
mov
add
adc
jae
jl
fs
outsl
sti
or
adc
imul
pop
stc
mov
fisubrl
fidivrs
push
cmc
cmp
cltd
jno
jl
push
pop
imul
scas
jle
pop
cmp
ret
xchg
push
mov
jae
jg
xor
popa
jns
cmp
mov
mov
fcos
dec
das
mov
mov
pop
testb
adc
xor
iret
cmpsb
xor
push
inc
ror
test
in
xchg
pop
mov
inc
fistpll
out
pusha
es
and
sbb
cmc
jns
outsb
rcr
and
aaa
stc
addl
popa
push
js
cld
jl
mov
mov
inc
scas
mov
movsb
sahf
mov
repz
cmp
sub
mov
xor
test
mov
mov
add
push
push
shlb
ss
or
mov
sub
incb
xchg
inc
mov
xor
notl
lods
add
and
stos
loope
insl
es
adcl
fnstsw
pop
repz
loopne
ret
lret
add
insl
lods
out
dec
pushw
sbb
cmp
sbb
pop
fcmovnu
xchg
xchg
and
add
mov
push
xchg
orl
mov
out
fsubrl
out
sbb
xor
xorl
pop
mov
sbb
das
mov
pop
imul
or
jge
in
cmp
hlt
cmpb
or
mov
mov
add
push
lock
pushf
jg
jecxz
sub
out
out
aam
dec
push
mov
ret
ljmp
jno
inc
out
pop
dec
in
rorb
scas
sub
jge
jnp
in
shlb
ficompl
pop
dec
xchg
out
inc
cmovns
and
sub
dec
arpl
push
pusha
data16
mov
or
xor
ja
adc
add
sub
cs
scas
sarb
fsubrl
test
cmp
movsb
imulb
and
adc
fsts
sbb
movsl
mov
pop
daa
bound
sub
rep
adc
jp
nop
jns
mov
nop
rcrl
sti
pop
xor
push
out
data16
cs
mov
mov
pop
push
cmpsb
mov
jle
repnz
push
mov
adcb
test
jl
js
xor
scas
add
fistps
cli
mov
jl
aam
pcmpeqb
jb
ds
dec
mov
movsb
jno
test
clc
movl
dec
movsb
pushf
mov
aas
xchg
out
sti
jbe
jne
ds
dec
aam
loopne
sbb
mov
jno
jmp
sbb
jle
scas
scas
movsl
push
pushf
hlt
pop
ds
lds
sbb
scas
iret
cmp
push
js
gs
pop
mov
les
scas
ss
jnp
pop
jns
loope
out
fisttps
out
jp
aas
pop
jno
mov
pop
mov
sahf
in
dec
orb
outsb
je
sub
fwait
xor
stc
mov
inc
add
fsubrs
push
imul
movsl
pop
jns
jo
mov
sub
jp
mov
mov
push
sub
idivl
popa
test
push
dec
pop
jg
mov
inc
or
pushf
jmp
push
add
scas
sub
xchg
lods
push
push
jo
xchg
pop
xchg
out
mov
xor
cwtl
cmp
leave
xchg
adc
or
dec
or
add
imul
or
mov
push
mov
cmp
xchg
ret
jbe
fwait
cmc
or
add
daa
pusha
data16
jo
pop
mov
lret
hlt
scas
ss
add
xchg
fcom
or
fsts
pop
push
mov
imul
test
xchg
lds
push
inc
imul
enter
or
push
mov
and
dec
xchg
test
ds
daa
imul
fistpll
pop
add
mov
mov
sbb
cmp
xchg
pop
dec
addr16
insb
jnp
or
push
call
orb
rorl
mov
xor
xor
mov
mov
pop
lds
mov
dec
aas
pusha
xor
push
xor
test
mov
dec
or
lahf
in
mov
pop
outsb
xlat
int3
rcll
sbb
int
sub
mov
xchg
stc
lret
aaa
fdivrs
in
les
mov
mov
stos
jbe
negb
mov
cwtl
pop
ds
fstps
or
push
or
cs
push
ljmp
pop
pop
jg
movsl
mov
aas
mov
adc
int3
sbb
loopne
dec
push
mov
and
inc
shlb
jmp
out
iret
data16
xor
or
out
aad
push
xchg
push
jae
ret
jl
lret
jbe
or
or
ss
std
fisubl
jge
sbb
mov
stos
lock
push
into
js
stc
sub
xorl
loope
cmc
sbb
aam
ljmp
fsubr
inc
sarl
mov
add
movsl
ljmp
shlb
bound
out
divb
jl
loop
ja
test
call
sbb
std
mov
cmp
aas
adc
push
insl
rolb
repz
loop
idivl
scas
mov
and
cmp
and
and
inc
inc
mov
mov
addr16
inc
lret
cld
mov
outsl
push
mov
outsl
lret
mov
out
jg
xor
popa
pop
loop
imul
adc
mov
scas
mov
cmp
js
inc
push
roll
daa
in
pop
add
cmp
imul
sbb
ljmp
mov
ss
mov
stc
xor
fbstp
mov
mov
xlat
push
cmp
pushf
pop
jecxz
stos
pop
ret
test
cmp
mov
nop
popa
daa
mov
and
jl
xor
jmp
lcall
inc
pop
mov
mov
push
add
xchg
and
cld
orb
lret
mov
push
or
pop
movsl
cltd
hlt
js
push
test
mov
stos
mov
mov
rorb
jmp
daa
ret
hlt
fwait
and
and
in
in
outsl
fildll
lods
loopne
lods
roll
andl
mov
cmpl
movl
mov
jmp
movl
movl
jne
push
push
push
push
push
pushl
push
push
call
orl
or
xor
xor
xor
add
adc
adc
sub
add
mov
xor
xorl
shr
xorl
mov
orl
xor
or
movl
shl
cmpl
movzwl
movl
jmp
movl
movl
jle
push
call
not
or
sub
sub
sbb
sub
mov
mov
sub
imul
mov
cmpl
not
movl
jmp
mov
jne
push
pushl
pushl
push
push
call
sbb
adc
neg
subl
adc
mov
mov
not
add
mov
mov
mov
shrd
shr
adcl
mov
mov
xor
add
shl
incl
xor
jmp
jle
jl
dec
mov
push
mov
push
jp
ja
lahf
dec
scas
fldl
cmp
or
test
cmpsb
fisttpl
sub
adc
stos
int
das
jp
mov
rclb
lea
mov
lods
inc
test
scas
or
mov
jne
adc
inc
sbb
pop
js
rorb
cmp
fucomi
lahf
mov
jl
jmp
cltd
mov
or
mov
pushf
mov
sbb
or
aas
add
jmp
cmp
xor
ja
xorl
fwait
dec
push
pop
pushf
lea
inc
cs
dec
scas
mov
data16
xchg
shlb
jg
fisttpll
adc
int3
cmp
hlt
insb
hlt
fidivrs
push
rclb
test
inc
xor
imul
xor
mov
les
inc
scas
xchg
sub
mov
loop
loop
fistpll
fcom
imul
lods
add
mov
dec
test
mov
mov
dec
js
and
fcmovnbe
scas
add
loopne
add
inc
aaa
jmp
clc
mov
mov
sub
pop
sbb
xor
mov
sarb
das
lcall
ljmp
xchg
xchg
lods
jnp
push
pop
push
sub
jnp
push
mov
push
mov
xor
pop
fmull
int3
andb
pusha
and
imul
fistpll
fwait
sub
and
shlb
negb
add
cmp
sub
popa
jo
nop
rcrb
adc
rcl
bound
mov
cmp
mov
mov
ljmp
inc
pushf
adc
mov
jg
lahf
xor
rorl
test
in
enter
in
dec
push
inc
xchg
sbb
jp
mov
in
lea
xchg
jo
enter
fsubl
xor
mov
scas
enter
out
pop
mov
pop
mov
sbb
sbb
incb
jno
add
jge
pop
mov
adcb
mov
xor
adc
mov
mov
lcall
filds
xor
push
dec
jb
cmp
imulb
push
sarw
mov
sbbl
aad
cmp
punpckhdq
gs
push
loope
test
sbb
stc
mov
subb
jmp
gs
repnz
or
mov
loop
or
cli
lods
or
and
lock
cmpsl
hlt
cmp
les
cld
mov
add
and
lret
jge
add
mov
cltd
aaa
mov
add
int
movsb
cwtl
pop
push
push
jae
stos
lret
xchg
pusha
push
lcall
loop
aas
sbb
jecxz
mov
xor
lea
ret
aam
cmc
stos
dec
push
cmp
cmp
cmp
jge
mov
sbbb
mov
pop
iret
data16
push
add
shrl
aas
mov
out
enter
enter
add
shlb
lret
pop
ja
movsl
icebp
jb
cmp
xor
jo
inc
repnz
add
and
push
enter
mov
adc
mov
in
jl
push
insl
mov
cmp
test
icebp
dec
jp
sub
xchg
repnz
inc
adcb
cmpb
addr16
pop
pop
jmp
or
inc
mov
fisubs
mov
into
pop
fstpt
jge
pusha
xchg
add
pop
cltd
dec
mov
push
std
mov
jmp
fsubp
iret
inc
scas
pop
fistl
rcll
ficomps
andb
push
sub
lahf
insl
inc
xor
inc
cmpsl
mov
dec
ficompl
subl
cmpsl
xchg
std
pop
ss
daa
jb
enter
rcrb
mov
and
dec
aas
stos
and
cmpsl
aas
out
je
xor
jp
clc
ret
mov
add
addr16
mov
xchg
lcall
inc
roll
ss
cmp
cmp
addr16
fldcw
scas
adc
les
popl
jmp
inc
outsl
and
cmpsl
inc
adc
adc
push
mov
sub
dec
sub
gs
jae
shll
jae
ret
mov
incl
pop
or
stos
mov
mov
xor
mov
mov
push
outsl
repz
xchg
add
test
je
pusha
lock
clc
mov
lds
adc
ret
idivl
mov
jg
dec
jmp
sub
jne
imulb
test
pop
adc
pop
cmp
jnp
les
fimull
mov
mov
cmp
mov
or
mov
mov
arpl
inc
jnp
dec
stos
mov
notl
xchg
sbb
jg
push
hlt
xorb
sub
test
movb
lock
lock
std
pop
xchg
fmull
mov
addl
aas
daa
scas
cmp
add
ret
or
sub
sub
aas
int
jle
lods
js
mov
cs
mov
jo
out
icebp
push
xor
daa
shrl
pop
insl
mov
xor
movsl
jecxz
fiadds
mov
cmpsl
cmp
in
fdivr
mov
scas
bound
jno
test
xor
sbb
iret
sbb
repnz
aaa
and
push
and
mov
and
push
rcll
inc
test
sbbl
and
sub
lea
mov
jbe
push
lods
cmp
mov
xor
jle
adc
leave
lret
push
ror
xor
mov
dec
mov
xchg
jg
out
or
jg
sbb
pop
mov
add
out
aam
gs
popl
push
jmp
int
adc
sub
or
xchg
jmp
call
ja
mov
jp
sbb
leave
mov
push
mov
jg
xchg
mov
mov
mov
and
dec
sbb
dec
clc
jge
idivb
sbb
push
and
dec
dec
push
mov
xor
sub
add
dec
pop
in
pop
xlat
xlat
pusha
cmp
cmp
jae
jmp
rorl
add
push
cmp
mov
mov
pop
sub
and
and
cmc
cmp
or
fdivrl
push
lret
pop
xchg
xlat
mov
or
sub
sub
cmp
testb
xchg
cmp
mov
jae
add
push
test
jle
divb
xchg
call
ret
ds
lret
cmpsl
mov
xlat
jl
lods
mov
mov
mov
pop
add
sbb
nop
mov
mov
push
push
mov
push
mov
jecxz
mov
popa
add
lahf
mov
hlt
jnp
xchg
pop
mov
adc
or
cmpl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
xor
or
mov
sub
sub
mov
xor
or
sub
xor
and
xor
or
sbb
mov
mov
add
mov
mov
sbb
mov
mov
incl
shrd
subl
shr
adcl
mov
add
mov
cmpl
not
mov
jmp
not
jne
push
push
push
call
mov
sbb
and
andl
and
orl
sub
or
sbb
jmp
pop
and
push
adc
clc
lock
pusha
push
ja
mov
mov
xchg
inc
imul
adc
jno
adc
cmp
or
enter
outsb
cmp
mov
inc
and
xor
out
jge
fcomps
call
test
cmp
pop
xor
ja
out
pusha
mov
bound
data16
jecxz
dec
jno
bound
cmpb
lods
decl
sbb
ja
inc
lods
leave
jg
daa
cmpsl
xchg
dec
and
mov
mov
iret
xor
or
cwtl
icebp
fs
sbb
jo
daa
mov
cmpb
fs
xor
ss
lods
sub
pop
pop
inc
adc
push
add
filds
cmpsb
jnp
mov
push
jo
stos
mov
mov
jle
lea
shrl
sbb
pop
lock
cmp
pop
imul
and
imul
imul
pop
sub
iret
sub
decl
pop
aaa
or
fwait
dec
push
inc
push
cmp
mov
sub
mov
xor
in
mov
ljmp
inc
rep
xlat
pusha
jl
add
int3
xor
pop
repnz
mov
push
xchg
dec
cmp
xor
mov
inc
js
xor
cwtl
push
mov
sub
stos
mov
push
movsb
clc
mov
sti
mov
nop
icebp
jl
lock
cmp
dec
mov
dec
sub
mov
movsw
xchg
sbb
jle
ja
popw
aam
cmc
shlb
mov
push
stos
jae
insb
xchg
scas
aam
movsb
adc
dec
pop
inc
hlt
imul
out
sahf
sarl
cmp
jecxz
xchg
sub
dec
dec
mov
add
cwtl
in
imul
mov
stos
ret
test
pop
sbb
pusha
mov
inc
bound
decl
fimull
jg
mov
push
out
xor
popf
pop
fmull
sub
jnp
pop
mov
ja
lods
orl
mov
pop
and
jp
mov
inc
vunpckhps
in
cmp
cmp
or
jne
mov
andb
aad
and
pop
push
addr16
cmp
js
lea
ja
pop
jae
test
xchg
out
push
imul
fdivs
mov
inc
aas
push
xor
mov
add
mov
stos
mov
mov
xor
lret
scas
pop
cmpsl
test
jne
test
mov
cmp
pop
cwtl
add
jge
jg
mov
pop
push
jmp
jg
pop
loop
mov
test
les
pop
push
lods
sarb
addr16
jae
das
cmpsl
mov
adc
xchg
dec
ret
mov
inc
iret
sub
mov
mov
push
sarb
rol
add
mov
pushl
outsb
mov
cli
js
imul
add
sub
repnz
xor
jmp
scas
jnp
jno
scas
mov
ret
aas
xchg
sahf
out
xchg
sub
jecxz
out
jp
inc
adc
xchg
sti
test
or
push
in
fldcw
loopne
stos
int3
out
daa
mov
ljmp
pusha
scas
dec
ja
mov
pop
sbb
inc
xor
jae
jo
dec
mov
gs
in
pushf
add
mov
leave
pop
sti
stc
aad
or
rcrb
jnp
mov
jno
imul
or
pop
and
pop
mov
lret
mov
movsl
hlt
and
data16
loopne,pt
ret
dec
inc
mov
xor
jb
rorb
or
push
push
stos
jbe
pop
add
cmc
repz
sub
dec
vmovshdup
rcrl
add
sub
push
lret
sti
push
rcr
cmp
nop
kortestw
adc
je
das
dec
mov
add
sub
mov
jp
and
mov
xchg
scas
sub
xchg
inc
int3
addr16
pop
sub
inc
ss
dec
sbbl
dec
sbb
dec
inc
aaa
imul
pop
adc
inc
jmp
dec
repz
push
mov
sub
or
int3
sbb
inc
and
std
dec
push
sbb
mov
mov
test
fwait
pop
jg
ds
icebp
jne
sahf
adc
sbb
xchg
dec
cmpsl
or
push
dec
in
xor
outsb
adc
ljmp
and
add
mov
cmp
inc
mov
fcmovnbe
sub
inc
push
repz
mov
sub
pop
xor
test
xor
stos
inc
mov
sub
add
scas
cs
rcl
lock
jge
bound
into
dec
mov
inc
hlt
push
dec
inc
lret
xor
js
or
mov
or
fisubs
and
loope
push
sbb
shl
push
or
lcall
call
sub
inc
stos
xchg
dec
sub
out
test
into
loopne
arpl
mov
popa
pop
enter
mov
lahf
fisubrl
popa
jbe
cld
ja
dec
sub
cmp
push
lds
in
jnp
push
test
mov
lock
aam
mov
sub
sbb
pop
cld
je
ret
std
mov
jnp
icebp
sysret
dec
mov
imul
dec
cld
or
cmp
push
or
pop
push
test
sbb
pop
nop
pop
hlt
lahf
aam
jl
and
es
jmp
clc
sahf
fcos
mov
test
sbb
into
push
clc
xchg
les
movsl
shll
sub
or
xor
loop
dec
imul
repz
jnp
dec
popf
or
pop
and
add
jg
lretw
dec
movsb
aam
pusha
dec
sbb
push
outsb
push
cmp
jge
das
cwtl
xor
scas
int3
and
and
jb
cmp
push
movb
gs
or
movsb
push
add
mov
test
scas
or
fnstenv
fstpl
fs
mov
lock
dec
jle
lds
mov
adc
mov
sub
inc
sub
je
jb
dec
aaa
or
ljmp
sbb
and
sbb
sub
pop
jg
cmpsb
shl
push
cmp
dec
xor
dec
out
out
add
loopne
xchg
repz
cmp
lock
out
aad
or
add
aaa
and
imul
adc
inc
arpl
lahf
fcomip
mov
mov
push
dec
sub
dec
sub
push
mov
sbb
dec
popf
jae
mov
push
loop
test
cmpsb
cmpsl
inc
push
dec
fcomps
add
arpl
leave
jl
sbb
xchg
adc
adc
popa
sbb
aas
insl
cmp
hlt
mov
mov
ss
and
xchg
pusha
pop
adc
das
fs
and
xor
mov
jge
xor
subl
or
andl
shl
sbbl
lea
sub
mov
cmpl
mov
mov
mov
mov
jmp
movl
jg
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
pushl
push
call
xorl
movzbl
adc
movzbl
add
or
add
movzwl
sub
mov
shrd
shr
cmpl
mov
mov
mov
jmp
mov
jbe
push
call
andl
mov
adc
sbb
movl
mov
mov
or
not
mov
mov
sub
mov
add
jmp
rcrl
cmp
and
and
scas
dec
or
fcomps
ja
push
fmuls
fnsave
lahf
in
bound
sub
xchg
jno
jge
out
mov
jmp
add
pop
push
mov
mov
sti
lret
mov
mov
sbb
popa
ja
out
imul
cmp
ljmp
shll
push
xchg
aas
popa
icebp
pop
cwtl
push
loop
outsb
push
popa
and
std
xor
xchg
aam
and
arpl
inc
dec
add
imul
mov
insl
les
aas
or
jnp
into
mov
pop
jle
shr
mov
inc
dec
aaa
inc
out
jb
loop
sbb
or
dec
add
test
fdivl
mov
inc
popf
mov
clc
sbb
adc
lods
xchg
and
imul
adc
inc
inc
out
repz
sar
imul
filds
lds
jae
jle
out
test
cmpsb
es
dec
rclb
sub
dec
rol
cli
mov
ret
jl
fmuls
lock
mov
cmp
subb
fwait
cwtl
in
jmp
sub
mov
sbb
les
popa
jb
fwait
and
or
lock
jo
arpl
pop
std
dec
stos
mov
shrl
out
cmpl
loop
cmp
out
adc
dec
xchg
pop
rorb
inc
std
icebp
test
out
cltd
nop
ja
sub
push
mov
push
ljmp
pop
mov
insb
xor
pop
push
ljmp
lahf
inc
mov
xlat
xchg
jle
sahf
push
mov
cmp
adc
in
sbb
outsl
push
sbb
andb
enter
std
lret
jge
jle
enter
or
jae
jle
add
imul
stos
sub
push
in
sub
aad
pop
inc
aaa
adc
lahf
mov
sbb
mov
iret
test
and
mov
andb
inc
or
sbb
mov
inc
icebp
sub
pop
push
insl
jl
mov
repz
pusha
xchg
add
push
xchg
cmp
ss
les
cmpsl
cmp
dec
mov
fdivrl
imul
imul
jge
sti
jmp
lds
mov
test
std
in
dec
xchg
mov
jl
sub
fldt
fs
adc
mov
mov
out
xor
stc
lahf
or
and
loope
mov
inc
mov
sbb
test
je
xor
mov
es
xchg
scas
popa
inc
inc
aam
hlt
sbb
gs
mov
outsb
xchg
sbb
xor
repnz
ljmp
arpl
adc
mov
jecxz
add
inc
sbb
push
push
adc
push
pop
adc
sbbb
cmp
dec
notl
adc
push
insb
jp
fcomps
mov
sub
jl
cs
das
lock
cld
cmp
jp
jmp
pop
cmc
pop
pop
pop
add
add
movb
and
popf
popa
orl
shl
fnstenv
xchg
out
xchg
sub
in
js
imulb
dec
pop
ss
cltd
outsl
jle
xor
cmp
xchg
or
adc
inc
mov
dec
xchg
dec
mov
dec
mov
ljmp
cwtl
mov
cmpsb
pusha
test
scas
xor
jmp
js
repz
mov
fld
xchg
and
es
sti
pushf
fmuls
sbb
xchg
jnp
js
mov
add
pop
aaa
push
xor
add
cwtl
mov
cltd
mov
rcl
pop
dec
jge
inc
adc
xchg
or
and
ds
cli
jecxz
loop
pop
in
or
aam
mov
xor
repz
dec
inc
pop
mov
jecxz
pusha
adc
cmc
cs
mov
lods
dec
mov
imul
sbb
sub
loopne
dec
inc
mov
fwait
or
adc
adc
mov
aas
jbe
jg
lret
mov
jns
orl
add
lahf
sbb
jecxz
jns
pusha
std
gs
mov
das
stc
fs
nop
pushf
cmp
ja
dec
repz
in
out
sub
mov
iret
idivl
sbb
cli
inc
and
icebp
push
mov
inc
cltd
add
mull
add
incb
outsb
push
fsubrs
inc
call
addr16
pop
aas
stos
aad
adc
into
mov
fs
pop
mov
test
clc
std
sbb
movsb
cmp
pop
or
pop
push
into
les
sti
lcall
and
add
in
mov
sti
xchg
xchg
shr
int
adc
cmpsb
push
stos
mov
lods
insb
mov
mov
cmp
or
or
xchg
ss
mov
in
xor
repnz
roll
mov
ljmp
movsl
push
sbb
xor
add
ljmp
pop
std
mov
cwtl
jbe
add
pop
pushf
lcall
or
lahf
xchg
or
aaa
sbb
adc
call
mov
or
cli
notl
mov
jno
shll
push
test
mov
sub
jg
sahf
ret
add
sbb
fs
mov
adc
or
in
int
cmp
add
xchg
or
and
js
popa
lods
cmp
push
les
sub
stos
or
divps
mov
pop
ds
sub
in
and
or
jae
add
out
iret
inc
mov
ja
cli
clc
filds
xorl
adc
popf
or
or
lcall
imul
aad
sub
out
insl
enter
add
xor
fildl
mov
or
jge
out
into
into
dec
or
cld
xor
fwait
sbb
ret
out
jecxz
sbb
sbb
adc
stos
jmp
xchg
push
gs
enter
pop
adc
ret
sbb
shrb
das
in
lret
fcomps
cmc
push
pop
and
xlat
and
add
out
das
hlt
xlat
jns
iret
pop
icebp
scas
ds
mov
aaa
std
mov
sahf
call
pop
movsb
adc
repz
jmp
mov
test
mov
adc
loopne
pushf
pop
sti
push
inc
jnp
dec
cmp
sti
sbb
subl
lods
fiadds
lea
in
aas
lods
mov
jle
xchg
fiadds
mov
adc
scas
loopne
negl
into
cmpsl
jecxz
rclb
hlt
fadd
inc
push
xchg
iret
sahf
xor
sbb
clc
lahf
mov
sub
or
pop
je
push
mov
movsb
shlb
mov
push
das
pop
add
call
jo
pop
mov
lret
sub
jo
into
hlt
jae
ss
fiaddl
mov
xor
mov
xor
adcl
or
shl
movzbl
or
imul
mov
mov
xorl
shrd
xorl
mov
mov
xor
shr
mov
and
mov
sbbl
xor
orl
or
sbbl
shl
adcl
sub
mov
mov
cmp
mov
mov
jg
xor
add
mov
sub
and
mov
cmpl
movl
movl
jmp
mov
mov
jb
push
push
call
xor
mov
sub
sbb
movzbl
and
mov
jmp
les
cmp
push
mov
mov
movsb
js
pop
fadd
outsl
dec
ja
cwtl
aad
xor
icebp
xchg
mov
jecxz
scas
fmuls
pushf
pop
xor
adc
out
push
cmp
cmp
loope
es
xchg
lods
pusha
int3
push
jno
dec
pop
mov
jbe
mov
xchg
push
add
lret
leave
push
shrl
pushf
pop
xor
loope
scas
shll
push
dec
sub
and
hlt
adc
cwtl
and
sub
int
mov
mov
shrl
push
add
mov
dec
push
mov
mov
xlat
sbb
icebp
fistpl
push
cs
mov
push
aad
stos
out
les
aaa
jle
inc
mov
push
leave
sub
xchg
lahf
ljmp
addb
cltd
popa
or
mov
dec
mov
rclb
pop
jmp
ds
jno
mov
dec
movntps
pop
lea
and
addr16
add
push
fidivs
int
ret
ror
mov
daa
daa
mov
and
inc
hlt
pop
repnz
xchg
sub
and
sarb
roll
nop
pop
jp
and
mov
cli
jb
mov
inc
or
stc
lcall
in
test
fiaddl
ret
inc
hlt
je
or
imul
inc
xlat
lahf
jg
fwait
out
lods
cmp
arpl
cmc
mov
out
dec
sbb
xor
fbld
add
mov
lahf
out
shrl
scas
jbe
cmpsb
js
jno
sbb
cli
mov
lds
xchg
or
mov
dec
mov
sbb
imul
mov
fucomip
add
mov
rclb
in
ja
jecxz
mov
adc
lods
pop
push
in
movb
dec
fwait
pop
mov
xlat
dec
sbbl
push
mov
inc
jb
pushf
fwait
mov
jno
push
add
aad
pop
dec
lret
fiadds
scas
mov
xchg
mov
pop
ret
and
ljmp
movsb
lods
fcmovne
adc
ret
test
mov
jmp
enter
inc
jns
mov
pop
dec
cmp
arpl
test
loopne
mov
xchg
push
pop
idivl
xor
lds
inc
xchg
lods
push
insl
aaa
sbb
loope
dec
outsb
loopne
aam
lahf
fwait
or
inc
int
ret
bound
test
lds
mov
mov
or
fs
cmpsl
icebp
imul
stos
mov
sbb
stc
pop
scas
add
fadd
mov
outsl
lock
popf
addr16
inc
xchg
adc
xchg
ret
out
dec
mov
mov
mov
lahf
mov
adc
mov
sub
nop
xor
and
in
mov
pop
or
hlt
cmc
ds
xchg
sbb
adc
and
mov
ss
xchg
and
arpl
jne
imull
insl
outsb
or
xorl
dec
arpl
stos
in
add
out
or
arpl
xchg
leave
mov
add
xchg
ret
gs
in
and
pop
in
pop
dec
mov
dec
pusha
scas
sbb
ss
clc
push
mov
xchg
xchg
xor
xor
mov
shl
xchg
sbb
cmpsl
sbb
inc
sti
push
je
pop
dec
xor
dec
jg
lock
xchg
push
adc
cmpb
xor
in
jp
pop
aas
inc
daa
sahf
sbbl
outsb
aas
das
dec
cmp
cwtl
addr16
inc
xor
push
push
mov
push
or
pop
out
push
jmp
mov
fcoml
jg
das
jp
and
fwait
sub
bound
lret
ljmp
mov
mov
lods
jbe
xor
pop
mov
inc
adc
cli
jns
mov
pop
push
in
enter
lock
ss
mov
lret
cmp
jg
or
or
lods
mov
mov
jmp
orb
test
add
imul
nop
dec
movsl
lods
test
leave
xlat
and
jmp
js
cmp
adc
add
mov
data16
cmpsb
out
jg
loopne
inc
aam
sbb
push
les
mov
push
cmpsl
xchg
mov
cld
add
les
loop
dec
mov
cwtl
mov
jbe
addr16
cmpsb
xchg
mov
fcmovnu
adc
orl
addr16
gs
lahf
pop
cmpsl
mov
xor
dec
sub
pop
das
orb
dec
imul
mov
test
shrb
jno
pop
and
shlb
push
xor
shll
jmp
mov
ret
mov
lods
in
fcmovnbe
xlat
cmpsb
sbb
inc
sbb
aad
fidivs
push
scas
add
scas
cmp
cmp
out
jne
popa
aaa
pusha
and
sbb
xchg
orl
scas
adc
cld
sahf
rorl
js
test
jbe
andl
or
cmpsb
cmp
outsl
inc
int
cld
mov
addr16
mov
fcomp
scas
mov
fidivrl
add
insb
stos
loopne
cld
mov
push
mov
add
ss
arpl
int
add
out
out
mov
push
imul
push
jno
daa
insb
mov
xchg
add
push
cmc
subb
adc
in
es
push
out
dec
mov
fcoml
sbb
movb
std
mov
and
popf
data16
push
adc
loop
mov
cmp
insl
and
and
fstps
and
sub
mov
imul
or
jmp
dec
stc
out
mov
jae
loop
inc
push
sbb
mov
sbbb
repz
add
jb
aad
dec
outsl
test
sub
cwtl
mov
lcall
xchg
sarl
fcompl
xor
std
int
push
aad
insl
adc
pop
mov
in
insl
lret
popf
push
jecxz
fwait
les
enter
jae
adc
enterw
out
push
add
aam
lock
inc
adc
mov
sti
jmp
dec
fldcw
cmp
jae
cmp
outsl
addr16
jl
jb
jo
xor
lds
out
mov
stc
stos
movl
xchg
addb
out
imul
adc
pop
dec
cmp
in
test
mov
sahf
mov
scas
pop
cs
mov
or
icebp
rcrb
sub
popf
andb
sti
in
shll
adc
xchg
int3
data16
out
loop
aas
gs
scas
mov
add
ds
cmpsl
xor
cltd
lret
adc
scas
dec
inc
fs
xchg
mov
filds
mov
mov
pop
notb
mov
mov
jl
add
inc
push
sbb
iret
vpmuludq
les
push
add
and
stos
aaa
inc
add
lods
roll
mov
movzwl
or
mov
adcl
xor
andl
shl
orl
xor
adcl
or
sbbl
shr
and
mov
jmp
mov
mov
sbbl
call
add
stc
push
pop
gs
lahf
daa
pop
lret
xor
lock
rcl
xchg
or
push
mov
add
test
decl
xor
scas
movaps
sub
mov
es
mov
dec
pop
push
mov
test
in
push
mov
in
ss
push
dec
xchg
sti
loope
mov
icebp
add
ficoml
dec
sahf
push
enter
mov
add
lret
push
ret
jg
xchg
test
jge
sbbb
sub
decb
mov
mov
lcall
inc
enter
push
daa
push
push
push
xchg
fwait
aas
sti
outsb
jae
shr
mov
mov
lods
or
sub
jge
or
jb
int3
mull
cli
dec
lods
in
in
xchg
jmp
mov
cmpsl
inc
jo
mov
out
jne
jne
push
in
fisubrl
mov
mov
xor
outsl
mov
adc
jle
xchg
fwait
or
inc
mov
sahf
cwtl
addr16
add
shlb
lahf
testl
mov
hlt
cld
in
or
pop
cs
xlat
incb
lods
fldcw
in
fsubl
fnsave
iret
mov
jo
sbb
sbb
adc
add
dec
lds
dec
cmp
fmuls
or
clc
aaa
jae
sahf
stc
aad
dec
pop
or
pop
js
out
das
xor
cltd
addr16
mov
scas
mov
loope
mov
jp
jle
jo
out
push
mov
adc
jae
shll
jnp
and
ds
nop
sti
rclb
fwait
cmp
mov
mov
and
and
dec
mov
fsub
adc
mov
inc
pop
test
mov
rcll
loope
repz
out
outsb
xchg
cmp
pop
loop
out
fnsave
cld
aad
jecxz
int3
jg
sub
xchg
clc
mov
sub
icebp
insb
sbb
loop
test
xchg
xchg
cltd
jle
and
icebp
lret
mov
jle
dec
js
cld
scas
jmp
out
mov
in
ss
insb
icebp
inc
aam
lcall
fcoml
test
ret
lahf
out
push
cmp
cmpsb
jecxz
sub
es
test
popf
inc
cmp
int3
fiaddl
dec
dec
xor
and
enter
inc
pop
je
pop
ret
dec
cltd
mov
push
sub
dec
mov
sub
shll
fdivl
xchg
add
les
mov
stos
mov
test
mov
push
lock
sub
test
xchg
xchg
test
cld
jae
scas
call
inc
push
adc
jno
fbld
and
fadds
xchg
add
lock
aaa
out
cmpsl
in
hlt
stc
push
cmc
jb
ret
pop
mov
add
aad
aas
add
pop
jg
sub
pop
push
test
scas
gs
decl
push
test
cmp
loopne
sbb
insl
or
inc
test
adc
fisubs
mov
jg
mov
lds
loope
push
icebp
push
sub
mov
addr16
clc
imul
int
and
xchg
lahf
cmp
out
jl
jle
dec
and
jecxz
stos
insb
mov
jb
jnp
cmp
add
pop
outsb
jle
pushf
rclb
inc
ja
mul
cld
sub
sub
jmp
add
jno
mov
imulb
inc
push
in
and
push
divl
jne
mov
add
leave
out
cmp
inc
fistpll
mov
jmp
insl
loop
xchg
pop
sahf
sub
cmp
mov
loopne
sub
or
jmp
sbb
out
mov
mov
mov
out
mov
push
lea
adc
scas
sbb
and
in
mov
movsb
popf
adc
sbb
add
fadds
dec
divb
icebp
adc
cs
xor
jnp
pop
gs
push
push
cmp
dec
insb
lock
aam
lahf
pop
cmc
shll
pop
cli
or
dec
ret
xchg
pushf
aam
and
lods
mov
pop
shl
subb
fdivl
es
dec
dec
sbbb
rcrb
mov
lds
out
fdivrp
pop
out
jno
cmp
mov
std
jg
xor
outsl
mov
mov
gs
sub
cmp
xor
fcomp
test
repz
pop
cmp
mov
lods
xchg
dec
lods
popf
inc
pusha
inc
pop
mov
mov
subb
cmp
dec
outsl
push
lods
scas
ret
mov
notb
inc
pop
arpl
xchg
fs
add
hlt
xchg
ds
sub
and
cmc
int3
mov
loop
movsb
sti
jae
mov
je
lea
xor
xchg
pusha
idiv
or
sub
les
sub
aad
dec
mov
fmull
jecxz
adc
and
dec
and
push
lahf
or
aaa
cmp
js
xlat
cmpsl
mov
sub
lea
int
push
adc
mov
add
out
ret
fildll
mov
sub
stos
ficomps
mov
sahf
push
pop
push
orl
and
mov
mov
mov
pop
int3
in
and
xchg
std
push
daa
jecxz
jl
outsl
jp
aam
gs
mov
test
ja
push
add
dec
mov
jge
add
fcoml
mov
lods
insl
lock
xchg
aas
mov
dec
mov
jb
add
int
out
fmull
fnop
jge
mov
pusha
popa
sub
adc
xchg
mov
out
inc
push
mov
imul
pushf
xchg
insl
mov
push
movsl
mov
pop
test
sub
lea
xchg
rorb
push
xchg
lahf
add
xor
aad
in
xor
adc
jne
xchg
mov
fnstsw
or
mov
scas
outsl
out
dec
mov
loop
inc
sbb
cwtl
pop
mov
hlt
and
push
jp
mov
imul
jle
cmp
movb
rcl
jmp
push
push
leave
jg
mov
out
mov
fildll
pop
call
fcmovnu
mov
lahf
mov
addl
push
xor
dec
shlb
int
cmpsl
and
testl
ds
in
faddl
adc
rol
mov
dec
outsb
repz
xchg
sahf
test
and
ljmp
or
test
cmp
subb
ja
mov
or
dec
loopne
adc
sub
cmp
cmp
xchg
or
or
push
int3
add
fsubl
mov
out
sub
lret
xchg
bound
pop
mov
clc
mov
inc
and
xor
adc
xor
and
aas
cmp
mov
or
mov
mov
mov
add
mov
andl
shrd
sbbl
shr
mov
mov
inc
jmp
shll
adc
push
scas
xchg
insb
lret
subb
ja
in
cld
scas
add
jo
out
dec
in
add
xor
or
cmp
push
hlt
push
and
mov
mov
in
push
xchg
fcoml
sbbb
add
int3
jmp
push
jle
inc
or
icebp
dec
loopne
jg
ret
mov
add
dec
fcoms
out
iret
test
add
or
pushf
arpl
lods
xchg
cmpsb
mov
lahf
loop
dec
lcall
int3
gs
in
lcall
dec
inc
and
ret
dec
into
popf
ret
xor
sub
cmp
test
int
sbb
cmp
sub
stos
dec
icebp
adc
loope
push
jb
jns
pop
fildl
inc
xchg
insl
mov
test
out
pop
mov
jno
sub
xor
minps
inc
xor
jbe
sub
and
jns
push
lds
jae
faddl
aas
jne
int3
into
cltd
sub
lcall
jle
adc
jecxz
xchg
dec
insl
pop
inc
dec
sub
fisubs
call
clc
incl
jg
jae
mov
mov
addl
mov
mov
cmp
test
pop
nop
or
xchg
pop
imul
cmp
inc
rcll
lods
lret
adcb
ret
xchg
ss
or
lock
pop
pop
movsl
stos
cmp
mov
adc
adc
inc
test
scas
push
cld
lods
cmpl
xchg
sub
lods
out
dec
aas
mov
pop
outsl
ret
and
pushf
cld
sbb
out
push
rclb
push
mov
inc
push
imul
mov
test
das
int3
movsl
mov
insb
and
loope
adc
xor
cmp
inc
fwait
mov
push
or
data16
stc
out
pop
cmpb
in
iret
out
test
outsl
xchg
xchg
dec
lcall
mov
roll
scas
daa
pop
out
pop
jne
in
jnp
and
orl
cmp
jo
and
sahf
fiaddl
push
into
je
loop
mov
into
push
jmp
rorl
inc
mov
jecxz
sti
jno
mov
cli
mov
es
rolb
fs
enter
mov
dec
repz
fstpt
xor
jb
ljmp
imull
lds
ja
jg
divb
xor
dec
jb
bound
sti
mov
mov
or
cltd
add
sub
outsb
ds
jge
clc
aaa
arpl
daa
js
loope
mov
sbb
cmpsl
lds
push
jecxz
in
push
xor
mov
inc
or
xchg
icebp
mov
xchg
stc
push
stos
call
sbb
rclb
mov
jmp
enter
xchg
mov
aas
scas
pop
int
pop
out
mov
xor
nop
jecxz
jo
lahf
push
popa
mov
adc
loope
mov
add
das
jo
bnd
pushf
popa
ss
xlat
or
rorb
cmpsl
icebp
enter
cmove
sarl
mov
jmp
sub
cltd
lea
or
notb
cmp
dec
pop
sbb
jle
mov
into
push
mov
aaa
mov
lods
repz
mov
and
sarl
dec
mov
dec
test
sarb
nop
ja
sbb
xor
inc
in
xchg
cmp
cmp
lcall
std
das
cmpsb
sti
jge
pop
pop
movsl
mov
sub
jecxz
inc
and
ja
xor
popa
ds
mov
add
dec
xchg
scas
jnp
and
test
dec
in
sti
adc
cwtl
fcmovne
sbb
fidivrs
pop
mov
pop
gs
adc
mov
cltd
pop
jae
xlat
cltd
mov
lcall
ja
mov
cmp
inc
mull
dec
std
dec
sub
sar
lret
jb
push
sar
enter
fdiv
cmpsl
xor
xchg
inc
inc
push
sub
cwtl
or
dec
xchg
push
dec
shll
dec
ljmp
js
rorb
mov
outsl
lods
sub
repz
cltd
or
sahf
cli
jns
shl
or
clc
dec
pop
push
dec
fisubrl
rcl
pop
cmpsb
fwait
sbb
jmp
or
movl
rcrb
pusha
out
sahf
pop
mov
pop
xchg
loop
aas
pop
cmpsb
push
mov
jmp
dec
mov
stos
cmp
ds
pusha
and
add
push
das
push
and
mov
call
and
sbb
push
mov
inc
sub
lods
adc
jmp
add
movsl
dec
mov
lods
cmp
fildl
fldcw
jle
movsl
jae
jbe
mov
inc
loopne
out
jbe
into
cmp
push
inc
bound
adc
cwtl
and
sbb
stos
jno
into
lods
popf
push
xchg
sub
push
sub
mov
into
decl
aam
loope
jnp
in
scas
stc
mov
lock
bound
mov
aam
and
add
dec
in
sbb
fisubs
fcoml
lds
jo
loopne
sbb
sub
xorl
inc
aaa
fisttpl
adc
mov
add
inc
xor
or
leave
lret
xor
enter
mov
or
fcompl
ja
pop
or
mov
xor
fcmovbe
je
fwait
movsl
sub
jno
sbb
xchg
sbb
sub
add
xor
shl
pop
fildll
in
repnz
iret
ret
shll
in
nop
fs
decl
aas
mov
sub
push
pushf
mov
xchg
pusha
in
out
pop
cmovge
js
jo
mov
outsb
cld
and
push
mov
cmp
test
cmp
xor
movsb
fistps
xchg
out
ss
iret
or
leave
test
pop
jge
xorl
xor
mov
pusha
add
fdivl
decl
push
xchg
stos
call
hlt
shrd
int
sarb
fdivs
inc
jg
push
jns
pop
pop
stos
lcall
xchg
out
jg
ljmp
inc
pop
or
mov
lret
ja
test
in
in
hlt
repnz
mov
stc
mov
adc
test
dec
push
inc
dec
addr16
jl
mov
in
pusha
or
mov
aad
lods
les
sbb
fdivr
jge
scas
out
in
repnz
mov
dec
mov
testb
pop
sbb
push
cld
and
push
gs
xor
cmp
push
cmp
outsb
sahf
mov
jns
xchg
sub
repz
mov
lock
mov
push
fwait
or
imulb
scas
add
dec
dec
orl
xchg
out
in
push
and
xor
scas
sub
push
sbb
xor
cmp
add
jge
subl
jmp
scas
popa
inc
jge
sbb
cs
mov
sbb
ja
adc
pop
imul
or
sbb
into
inc
repnz
xor
xor
aas
mov
bound
pusha
fldcw
insl
and
nop
push
ds
addr16
adc
outsb
in
push
xchg
hlt
jbe
push
in
add
inc
out
imul
sbb
test
icebp
shl
mov
insl
in
ret
adc
dec
stos
sbb
out
ljmp
out
mov
or
data16
cmp
and
cmp
cmp
xchg
xor
cltd
pop
mov
and
lret
aad
adcl
jp
push
in
loop
repz
lahf
jo
fs
dec
inc
dec
leave
sbb
mov
addb
lock
mov
fmul
mov
cmp
stc
lret
fs
push
and
ds
shrl
pop
mov
and
js
jno
and
and
test
bound
cmp
dec
xchg
mov
leave
jnp
add
ss
sbb
or
mov
pop
js
xor
mov
mov
or
adc
cltd
push
jecxz
enter
inc
xchg
ja
push
cmc
fs
subl
popf
iret
or
loop
pop
mov
xor
xchg
fldl
jmp
scas
add
fidivrs
dec
or
adc
cmp
xchg
push
adc
fsub
mov
jbe
enter
mov
jg
into
sub
mov
adc
mov
dec
into
mov
mov
add
shll
jbe
xchg
add
fdivl
jp
outsl
es
lods
es
int3
pop
inc
mov
dec
sub
pop
add
outsl
mov
outsl
adc
repz
lret
mov
cmpsl
ret
jb
pop
pop
mov
xlat
ret
das
sub
jecxz
aas
adc
pop
fneni(8087
into
cli
ret
push
jns
scas
sub
inc
in
aaa
in
mov
lods
sbb
xchg
jp
iret
out
xor
jae
jmp
dec
movsb
mov
and
inc
mov
push
imul
shrl
fidivrl
pop
addl
pop
adcb
mov
scas
mov
xchg
aaa
mov
pop
jae
jne
xchg
and
xchg
frndint
rolb
mov
sub
xor
xor
stc
jp
jl
inc
pop
dec
test
loope
leave
lods
in
popf
add
xchg
and
jo
in
xlat
out
add
push
mov
sub
jg
daa
popf
je
out
movsb
and
push
jb
cmp
dec
cmp
and
fs
out
add
jne
das
jo
jnp
es
psraw
cmpsb
push
mov
add
fs
lds
aas
add
xor
shrl
mov
test
rorb
and
bound
sbb
popa
xchg
pop
fnstsw
pop
inc
xchg
lods
sbbl
push
fcompl
jg
mov
stos
sub
fwait
out
fcmovu
dec
fs
jae
std
es
and
std
test
in
pop
std
mov
mov
movsb
fdivs
jne
jns
leave
or
leave
stc
mov
pop
add
les
adc
in
inc
inc
jns,pn
jae
lahf
fsubrl
fwait
rorl
aad
shr
mov
lods
adc
mov
aaa
xchg
into
or
sahf
out
enter
adc
shr
fsts
cmp
ret
xor
adc
cmpsb
subb
lret
daa
jecxz
xchg
jmp
fistps
test
xchg
adc
xorl
mov
dec
xchg
jp
call
sbb
push
adc
cmc
arpl
push
int
sarl
dec
cmc
sbbb
inc
movsl
int3
popf
or
pop
aad
add
addr16
in
mov
pusha
mov
dec
aam
rclb
stc
mov
in
mov
xchg
jbe
cmpb
or
pushf
mov
sbb
sbb
shlb
fidivrl
sbb
pop
cmp
ds
adc
inc
pop
test
testl
pop
xchg
and
or
xor
shll
or
lods
xchg
mov
int
clc
and
roll
aaa
testb
loop
and
aam
pushf
nop
das
jge
inc
push
repz
into
pop
aam
mov
int
adc
cmpsb
push
xor
mov
rolb
and
xor
adc
inc
orl
sbb
lcall
pusha
xchg
dec
xchg
rol
in
push
stc
lret
cli
call
pop
add
mov
xor
pusha
loop
add
lods
adc
leave
mov
in
daa
fldt
popf
xorl
sbb
push
pop
fucomp
test
daa
push
xchg
hlt
push
mov
sbb
inc
adc
imul
push
add
adc
xor
nop
xchg
das
inc
mov
add
mov
push
adc
dec
jg
bound
fs
arpl
cmp
ss
imul
cmpb
pop
xor
jno
mov
mov
int3
sub
imul
lds
shll
sbbb
mulps
xlat
xchg
sbb
in
jmp
adcb
jmp
in
xchg
xchg
ljmp
subl
dec
test
pop
dec
sahf
insl
jb
xlat
cwtl
repnz
push
inc
mov
popa
push
inc
jbe
inc
call
outsl
sti
rclb
fs
inc
dec
call
dec
mov
xor
les
jae
gs
pop
fs
push
sub
pop
push
jmp
and
mov
scas
mov
lret
sbbb
dec
pop
das
adc
jle
fnstsw
mov
sbb
dec
xor
popf
adc
adc
sub
xor
push
ljmp
movsb
int
pop
pop
inc
sbb
or
pop
rcrb
xchg
xchg
pop
lea
fimuls
adc
or
inc
loopne
xchg
cmp
into
mov
mov
jno
xchg
cs
push
pusha
ljmp
push
mov
dec
push
stos
popf
mov
fcmove
pop
fwait
rcll
mov
scas
mov
pop
pop
add
xchg
mov
dec
ds
mov
mov
movsl
andl
je
outsb
bnd
cld
test
inc
mov
add
inc
sub
lods
mov
addr16
cmpsl
mov
imul
pop
lret
dec
in
cmc
fcompl
sub
xchg
bound
out
jo
inc
or
xchg
ljmp
in
jne
jg
sub
shrl
divl
jle
leave
add
ficompl
jecxz
jg
fldl
filds
fistps
xchg
xchg
sub
cs
repz
push
cmp
push
loopne
fwait
pusha
mov
push
push
jno
or
add
cwtl
rcll
jecxz
shlb
sbb
jmp
leave
xorl
cmp
int
lods
aam
sbb
sbb
bound
insl
xchg
mov
stos
xor
or
addl
shl
imul
jmp
add
or
or
adc
push
push
ja
dec
mov
sbb
andb
mov
fs
and
mov
clc
fdivp
jnp
scas
aas
insl
lcall
lahf
lock
jge
fdivl
jbe
push
or
and
ja
inc
pop
lret
data16
xor
push
dec
dec
mov
int
mov
and
repnz
inc
pusha
out
adc
push
push
and
xor
add
sub
adc
push
push
ljmp
rorb
jp
add
and
cmp
push
bound
arpl
sub
dec
lods
sbb
out
addr16
shll
xor
xlat
stos
lcall
mov
rorb
mov
pop
les
aas
push
inc
mov
sub
shlb
cltd
dec
insl
out
jns
popf
scas
fwait
mov
adc
or
outsb
pop
lds
cmpsl
sub
hlt
xchg
mov
enter
sahf
inc
imulb
jne
sbb
test
sbb
outsb
adc
sahf
ja
fnstsw
test
sbb
cmp
repnz
cmp
mov
mov
xor
pop
call
jns
adc
in
cltd
iret
mov
fidivl
fiadds
in
in
push
sahf
sbb
fwait
push
je
imul
and
nop
mov
mov
mov
aaa
cld
inc
and
dec
mov
int3
movsb
or
pop
ss
mov
pushf
push
jne
lret
sbb
outsl
pop
inc
sub
mov
leave
sti
aam
arpl
cs
cmpsb
rcrb
lcall
jp
je
dec
add
add
ret
les
mov
sti
sub
or
js
pusha
jmp
shlb
xor
cwtl
ljmp
and
and
push
sahf
das
or
xlat
sub
jns
mov
pop
or
push
lret
or
and
rorb
clc
lea
jno
dec
rcrb
push
out
stos
cmp
add
push
mov
dec
pop
lock
or
push
mov
sub
jle
xchg
sahf
in
cmp
cmp
sub
adc
loop
and
pop
xor
lock
imul
dec
call
test
nop
pop
push
pop
loop
mov
cmc
inc
pop
stc
ss
retw
imul
adc
bound
fmul
ficomps
dec
xchg
xor
cmp
ret
jnp
jecxz
inc
xor
and
daa
xchg
jb
movb
out
loope
xchg
mov
imull
pusha
xchg
loopne
cmp
pop
xlat
decl
popa
push
or
insl
sahf
cmp
out
dec
adc
loopne
and
scas
stos
leave
inc
rorb
popf
xor
jmp
jge
imul
cmc
rcrl
mov
or
sub
out
add
adc
mov
jne
cmp
mov
test
push
and
clc
sub
xchg
jne
test
rorl
aaa
iret
xchg
sbb
sahf
movsb
push
inc
xor
or
outsl
inc
into
ljmp
scas
push
scas
sahf
inc
into
cld
push
mov
clc
dec
inc
sbb
pusha
shrl
jmp
jg
xchg
xchg
push
and
nop
in
add
aad
sub
mov
mov
movsb
jmp
inc
push
cwtl
xchg
sub
push
inc
ss
dec
icebp
pusha
lret
ss
repz
enter
nop
mov
arpl
adcl
shrb
leave
mov
aas
arpl
inc
sbb
lret
shlb
addl
jp
add
loop
pop
and
push
xorl
out
adc
dec
jmp
inc
dec
stos
cwtl
movsl
jg
cmp
push
inc
mov
push
lods
xchg
add
cmp
iret
lret
lcall
sub
pop
popa
push
sub
lret
iret
cmpsl
add
imulb
jecxz
xlat
cmp
xchg
in
pop
cwtl
xor
sbb
xchg
pop
sbb
cld
fiaddl
nop
aas
push
sahf
jne
inc
adc
js
mov
negb
aad
aad
adcl
sahf
mov
sub
notb
out
cmp
xor
mov
add
inc
mov
mov
xor
in
jl
push
jmp
clc
push
lcall
arpl
fisttps
movsb
pop
mov
int3
push
lahf
js
lcall
and
les
sbb
and
mov
mov
add
mov
or
in
cmpsb
cmp
sub
xchg
jns
mov
pop
or
mov
jecxz
outsb
mov
jbe
jne
stos
mov
add
jae
cwtl
pop
daa
jbe
add
adc
push
mov
loopne
pop
ds
gs
or
and
xchg
out
pop
shrl
adc
in
dec
sub
dec
in
lea
mov
gs
lcall
sbb
mov
jl
jne
cmp
and
es
sub
call
xor
outsl
xchg
sub
jnp
shlb
fwait
push
xlat
xchg
push
dec
add
lea
test
dec
mov
mov
or
rcll
outsb
pop
ret
sub
cmpsb
jno
data16
loopne
mov
subb
cmpl
cmp
or
and
mov
sub
or
jmp
movsl
stc
les
jne
pop
push
mov
mov
xchg
mov
xor
add
adc
sahf
add
imul
mov
push
leave
cmp
sbb
mov
pop
push
pusha
adc
aaa
test
cmp
rolb
adc
push
notb
dec
adc
xchg
jge
sub
jo
sbb
jl
movsl
dec
out
xlat
jns
or
adc
mov
cs
mov
jo
jnp
sub
xchg
mov
sbbb
push
outsl
sbbb
scas
xor
sbb
repz
nop
nop
addl
mov
aas
inc
in
mov
push
fwait
outsl
add
movsl
push
in
dec
inc
cmovne
call
jae
mov
das
mov
dec
imull
inc
push
mov
jle
mov
enter
shll
dec
xor
mov
or
xchg
pop
add
dec
mov
sub
cmp
mov
and
insb
mov
fisttpl
mov
xchg
mov
fsubr
inc
leave
cmp
cwtl
into
in
pop
pop
aam
pop
jae
leave
pop
mov
inc
dec
std
into
xchg
sti
je
imul
decb
mov
jp
xor
leave
xchg
mov
push
mov
ja
xor
aam
mov
das
out
add
mov
test
or
cmpsl
dec
adc
pop
movsb
in
lret
repz
fidivrl
sbb
sarl
mov
mov
jg
fwait
dec
ficoml
sbb
push
int
adc
add
subl
or
add
add
mov
movl
movl
mov
jmp
movl
jle
push
pushl
call
andl
adc
xor
xor
mov
sub
and
not
and
movzwl
adc
cmpl
mov
movl
movzbl
mov
jmp
movl
movl
jbe
push
push
push
pushl
call
add
sbb
sbb
xor
add
mov
mov
shrd
adcl
mov
or
mov
addl
jmp
inc
or
add
cltd
or
pop
call
ja
push
pop
pop
inc
pop
jne
and
call
and
mov
fwait
push
sub
lods
stos
push
aam
push
inc
mov
cmp
andb
stc
lods
xchg
mov
xchg
fldcw
arpl
adc
fwait
nop
xchg
push
shll
pop
or
dec
sub
in
push
and
mov
icebp
sub
cwtl
inc
mov
out
leave
pop
cld
pop
es
mov
jge
or
in
ljmp
movsl
div
ja
mov
outsl
cld
clc
add
insl
in
pushf
jnp
push
mov
xchg
out
test
stc
mov
xchg
lea
loop
jno
gs
nop
jnp
dec
push
inc
or
dec
sub
faddp
xor
mov
je
cltd
or
outsb
jmp
aad
ret
mov
pop
xchg
xchg
pushf
clc
out
cmpsb
icebp
inc
push
cltd
inc
rcrl
cmpsb
or
imul
or
nop
stos
pop
mov
cltd
fbld
mov
xchg
xchg
scas
xchg
shr
imull
shl
inc
rolb
loopne
daa
nop
add
repz
js
pop
mov
enter
scas
xlat
sahf
adc
and
cmp
icebp
inc
cmp
es
cwtl
sbb
lret
ficoml
pop
test
sahf
in
jl
dec
inc
lret
inc
adc
pop
nop
sub
clc
xchg
cmp
adc
je
rcl
xor
aaa
pop
sub
inc
das
mov
or
shll
insl
cmpsb
imul
in
mov
insl
jmp
repnz
fadds
sub
mov
aas
fcoms
stc
int
mov
pusha
outsb
mov
and
adc
push
jecxz
mov
test
push
lret
test
shrb
push
imul
pop
mov
std
or
movsb
push
inc
adc
pcmpgtw
pop
pop
lods
mov
add
js
add
ds
cmp
cmp
and
cwtl
dec
ret
lods
sub
inc
adc
lea
stos
dec
std
pop
mov
xchg
out
lret
adc
mov
mov
icebp
cs
fdivrl
push
lret
dec
adc
cmp
cmpsb
inc
test
push
inc
mov
inc
pop
jg
icebp
divl
lcall
add
sbb
xchg
inc
arpl
adc
or
mov
jns
push
xchg
adc
in
sub
sbb
cmc
pop
mov
rcrl
xor
inc
repz
sahf
jb
push
xchg
stc
enter
jl
or
pop
xchg
enter
es
inc
bound
jge
mov
inc
clc
inc
cmp
inc
sarl
aad
loopne
mov
xchg
sub
inc
insb
popf
jmp
lret
inc
sbb
into
xor
push
cmp
or
out
add
pop
inc
add
mov
xor
add
fistl
dec
rcrb
xchg
rclb
mov
or
inc
fsubl
mov
ret
shl
pop
push
ffreep
jl
mov
dec
idivb
xor
xchg
test
insb
pop
mov
stos
sti
outsl
pop
ret
or
ret
xchg
pop
push
xchg
data16
lock
xor
or
jbe
testb
pop
push
lock
add
stc
adc
mov
xor
das
out
xchg
mulb
pop
jg
cmpsb
or
leave
test
js
subps
pop
push
dec
sub
fimull
mov
fsubr
sahf
js
std
push
adc
bound
mov
mov
cli
mov
aas
shrb
icebp
sbb
cmpsl
mov
test
ret
push
test
cmpsb
outsl
cmp
dec
dec
or
cltd
pop
cld
xchg
iret
ds
subb
inc
std
mov
clc
push
stos
cmp
xchg
repz
add
add
xchg
push
inc
sub
mov
mov
sub
in
add
inc
imul
dec
addb
pusha
add
jnp
mov
xchg
pop
and
out
rclb
cmp
inc
mov
movb
fsubrs
or
movsl
in
aam
scas
add
adc
cmp
in
aas
mov
xchg
pop
rcl
lea
insb
rol
lret
or
mov
sub
fsub
jl
jbe
js
pop
cmp
outsb
loopne
mov
out
insb
aas
cmp
xchg
lock
sbb
inc
pop
popl
leave
cmp
sbb
push
and
mov
nop
ret
sbb
pop
mov
push
outsb
lcall
out
pop
mov
pop
push
lock
inc
and
xor
jl
and
ss
push
and
in
push
and
add
andnps
adc
jp
pop
mov
sarb
shrl
add
inc
icebp
cli
pop
xor
pop
rcrb
pop
or
or
cmpsb
dec
cmpb
pop
inc
lods
xchg
cmp
ror
sahf
cmpsb
lock
mov
sub
jge
lods
add
aas
cmpsl
daa
xor
into
mov
imul
and
pop
iret
fwait
push
je
sub
add
mov
bnd
cmc
movsb
icebp
aam
sbb
dec
cmpl
and
icebp
mov
je
shlb
jp
xchg
je
adc
jo
cmp
stos
and
jg
in
andl
xchg
pop
jo
cmc
xchg
cltd
push
cltd
add
xchg
push
xchg
lds
xchg
shll
cld
std
ret
aaa
scas
mov
int3
xlat
idivl
add
and
mov
inc
scas
pop
or
mov
out
cmp
insl
or
add
push
mov
lea
in
je
push
pop
std
pop
push
dec
sub
pop
jmp
cs
movsl
rolb
daa
xchg
fimull
sarl
lahf
inc
inc
ror
mov
popa
add
shlb
jg
setl
dec
sbb
pop
and
sbb
push
cmc
push
repz
popa
inc
fstps
cld
adc
or
push
push
xor
loopne
shlb
test
andb
pusha
sbb
lcall
gs
adc
xchg
xor
dec
mov
jns
push
sti
sub
test
roll
cmp
push
flds
shll
ficomps
xchg
out
jb
out
mov
jg
push
stc
sbb
lea
lods
xchg
or
test
mov
xchg
push
hlt
mov
and
arpl
push
inc
subl
push
enter
frstor
fcoms
xchg
nop
bound
xlat
push
push
rcrl
jmp
pop
cld
das
jmp
sahf
lock
and
inc
jl
aam
aad
pop
dec
add
mov
rorl
faddl
fisttpll
cmpsl
lcall
hlt
and
das
mov
xchg
xchg
push
dec
mov
fs
xor
shl
xor
movl
or
shr
mov
subl
mov
mov
addl
mov
adcl
shrd
shr
mov
cmpl
not
mov
movl
mov
jmp
mov
mov
jb
pushl
pushl
pushl
pushl
push
pushl
call
or
adcl
movl
sub
and
subl
subl
mov
mov
xor
xor
adcl
or
adcl
shl
add
add
add
mov
mov
adc
mov
and
shrd
cmpl
movl
not
mov
mov
jmp
movl
movl
jge
pushl
pushl
push
pushl
push
push
call
sbb
add
or
or
xor
or
add
mov
movl
cmpl
mov
movl
mov
jmp
movl
movl
jg
push
push
pushl
call
add
sbbl
mov
adc
mov
xor
mov
addl
sub
shr
movl
mov
or
mov
addl
xor
shl
cmpl
movl
mov
not
jmp
movl
ja
pushl
push
push
push
call
xorl
xor
incl
xorl
subl
sub
xor
mov
sub
or
cmpl
mov
mov
movl
jmp
mov
jl
push
call
addl
adc
xor
neg
mov
mov
add
sbb
and
mov
movl
mov
and
mov
movl
mov
add
movl
mov
mov
adc
jmp
ret
mov
dec
rcrl
js
out
ja
movl
mov
xchg
or
stc
pop
or
push
add
push
or
dec
movsl
mov
lcallw
pop
call
jno
lret
scas
pop
shlb
lods
mov
loop
test
inc
cmpsl
xor
inc
ret
inc
inc
sub
adc
insl
or
sub
int3
test
xchg
fstps
push
inc
hlt
jne
and
push
sbb
inc
out
out
xchg
dec
int3
xchg
jmp
in
mov
ds
inc
sub
clc
xor
jg
mov
adc
or
loop
flds
lret
dec
mov
inc
adc
or
xchg
test
jns
xchg
xlat
add
outsb
mov
jae
pusha
data16
loopne
pop
negl
or
das
inc
cmpsb
js
jnp
or
cmp
aad
fisubs
and
mov
mov
les
push
mov
sub
adc
adc
push
or
mov
jle
stc
add
dec
push
gs
out
cli
sub
into
fwait
sub
mov
shlb
js
ret
mov
sahf
ja
stos
sahf
iret
popf
inc
ret
sti
cmp
cmp
jle
mov
ss
fiaddl
mov
es
test
pushf
mov
cmp
or
stos
in
xchg
call
mov
hlt
mov
jae
adc
push
xchg
and
lahf
cli
pop
mov
add
mov
mov
aam
mov
mov
mov
jne
out
fidivl
jnp
add
cli
je
cld
or
or
movsb
pop
dec
jne
adc
sbb
inc
stos
sub
xor
pslld
mov
push
mov
outsb
rcrl
int3
pop
out
inc
sti
mov
jg
inc
inc
jbe
and
jmp
or
xchg
leave
and
and
ds
push
fcoms
ficomps
addl
jge
loope
outsb
cli
sbb
dec
ja
ljmp
into
pop
cmp
jmp
lahf
xorb
fimull
pop
cld
lahf
push
push
adc
das
mov
ret
jg
ret
xchg
push
std
pop
sbb
shll
in
mov
mov
cmp
pop
sbb
call
nop
mov
sbb
lods
in
lahf
sbb
lea
imul
aam
pop
jp
ljmp
jno
popf
cltd
adc
mov
xor
mov
dec
push
cmp
iret
sub
inc
xchg
fsubs
mov
dec
daa
test
adc
jb
fisubl
cmp
add
pop
mov
adc
stos
scas
in
pop
sub
rcl
mov
lcall
adc
div
mov
stos
dec
repz
dec
sub
gs
dec
lea
in
adc
sub
cmp
push
dec
xor
test
lock
addr16
push
pop
imul
mov
arpl
or
add
lcall
int
outsb
outsl
pusha
sbb
lock
jo
or
insb
lea
out
bnd
add
repz
rcl
mov
shrb
in
test
xchg
xor
fidivrs
jbe
sarl
jno
push
cmp
test
xchg
jg
repz
movntq
push
mov
add
in
js
push
mov
in
or
scas
mov
and
push
iret
pop
pop
das
sub
data16
test
ss
and
cmpb
or
orb
push
xchg
outsl
jle
push
mov
mov
mov
ljmp
adcb
insb
xlat
jnp
xor
lods
ret
movsl
nop
icebp
ficoml
dec
cmpsb
imul
pushf
mov
in
cs
in
sti
jmp
in
das
repnz
lods
fnstsw
dec
xchg
inc
xchg
mov
jnp
imul
stos
mov
nop
int3
stos
jb
lret
das
push
mov
push
sub
mov
push
sub
sub
stc
movsb
in
repz
adc
in
push
sti
add
mov
or
jg
cmp
subl
xor
and
test
add
mov
sub
rorl
pop
lcall
scas
mov
mov
clc
mov
das
das
mov
push
repz
ret
push
pop
mov
movsb
lods
sbb
add
dec
leave
sbb
dec
fnstsw
stc
sbb
seto
hlt
outsb
cmc
push
in
mov
mov
or
jae
xor
imul
rcl
pop
sbb
add
pop
stc
mov
and
mov
sbb
cli
ret
inc
cmp
pushf
lods
scas
sarb
adc
pop
ret
lds
jg
cmp
jmp
mov
cmp
or
mov
sahf
adc
lods
dec
cmpsl
idivl
stos
ljmp
cmp
or
inc
sbb
pop
dec
pop
jle
ficompl
and
cmp
xor
push
test
mov
xlat
xchg
rcrl
fidivs
hlt
sti
pop
aaa
leave
mov
into
call
xor
test
mov
imul
cmpsl
clc
incl
pop
lret
subb
leave
push
sub
sub
mov
gs
lea
cmp
mov
icebp
mov
xor
inc
inc
pushf
xchg
daa
adc
sbb
stos
jmp
push
rcr
jge
pop
push
daa
pop
fiaddl
xchg
adc
sbb
xor
pop
dec
ja
test
add
add
pop
jmp
hlt
je
xchg
shll
and
loop
push
jnp
lods
bound
xlat
insl
xchg
nop
out
adc
cmp
sub
shrb
lds
cmpl
in
xchg
test
cmp
je
dec
dec
inc
sbb
aas
mov
test
push
push
xor
int
test
adc
inc
clc
push
mov
push
xchg
pop
loopne
or
mov
lock
popa
in
in
daa
mov
dec
mov
or
adc
cmpsb
mov
sahf
mov
insb
rcr
and
iret
ljmp
mov
lock
sbb
xor
mov
and
push
out
sbb
jns
inc
xor
pushw
and
fldl
mov
pop
mulb
mov
sub
inc
sbb
or
jmp
sti
inc
push
insl
lret
cmp
xor
mov
ss
js
dec
mov
mov
imul
inc
sub
insl
add
pop
mov
sbb
sub
push
xor
inc
add
fwait
or
jae
fisttpll
xor
in
jne
sbb
movsb
sarl
enter
int3
xor
out
xor
lods
shlb
clc
jge
roll
inc
loopne
xor
movb
rorl
popf
and
add
flds
push
mov
inc
mov
jmp
lods
jp
scas
adc
xchg
mov
pop
fisttpl
ja
sarb
inc
dec
or
pop
faddl
bound
insl
in
fimuls
inc
idivb
pop
cmp
pop
stc
mov
xchg
push
dec
or
idivb
pop
jle
cmpsb
in
dec
addl
pop
xchg
out
push
xor
aad
or
js
xchg
pusha
clc
je
or
xchg
jno
inc
jmp
in
jae
pusha
xor
scas
popf
orb
dec
dec
mov
adc
xor
leave
dec
xor
das
std
or
mov
js
adc
out
test
orb
loop
inc
fimuls
xor
xor
stos
mov
mov
pushl
outsl
xor
aaa
adc
mov
inc
push
subb
sub
add
pop
mov
ljmp
and
adc
negb
inc
and
loop
into
aad
cmp
in
sahf
xor
bnd
push
lcall
in
fsubrs
inc
lds
sub
and
add
iret
and
mov
sbb
sbb
js
incb
clc
hlt
mov
punpckhwd
lds
fistpll
pop
sbb
or
xchg
leave
push
imul
inc
stos
leave
mov
ja
sub
aas
pop
in
std
js
push
or
mov
lret
in
shlb
mov
cmp
jbe
jmp
int3
fisubs
sub
xor
imul
xchg
jbe
mov
sarb
insb
roll
xchg
dec
inc
test
fsubr
fistl
dec
mov
rclb
jns
shll
iret
in
mov
lahf
dec
or
out
jno
inc
rorb
aam
imul
pop
lock
lret
sbb
jmp
pop
das
nop
xor
fstps
inc
xchg
adc
push
pop
imul
mov
dec
inc
sub
cmp
mov
test
fidivs
fldl
push
pop
push
cmc
movl
jnp
sti
and
jbe
dec
test
and
xchg
mov
imul
sbb
jb
stos
ret
xchg
adc
sub
mov
and
mov
rolb
xchg
iret
into
sub
push
mov
xor
pushf
mov
add
int3
adc
cmpsb
inc
cmp
or
scas
cmpsl
into
xor
cwtl
gs
gs
dec
fdivrs
mov
jne
mov
push
push
daa
sub
ffree
pop
jne
xchg
out
loopne
push
and
fld
insb
cmpsl
jp
testl
lret
and
fs
sbb
jae
or
arpl
das
adc
in
in
push
icebp
clc
repnz
cmp
arpl
cltd
sub
int3
les
pop
shll
mov
jmp
cmp
mov
push
xchg
stos
ret
push
and
push
sub
pop
adc
jo
and
mov
sbb
das
clc
mov
int3
lea
cmp
popa
nop
sbb
aam
or
adcb
dec
mov
or
les
inc
out
sub
pusha
ds
ljmp
mov
cmp
in
xchg
cmp
pop
inc
push
lret
gs
and
outsl
test
sti
mov
out
test
fs
dec
xor
imul
pop
mov
cwtl
rcrb
cli
rolb
dec
jnp
insb
andb
cmp
push
jmp
dec
outsl
movsl
fidivs
add
sub
push
pop
rolb
aad
outsb
cltd
pop
mov
sbbl
push
fwait
and
popa
shr
lret
inc
push
pop
jp
cmp
loopne
push
xor
into
out
out
mov
sub
xor
insb
outsb
sub
xor
adc
jns
adcb
mov
mov
rep
sti
in
cmp
std
cmp
dec
push
icebp
jno
mov
jmp
int3
int
mov
cmp
orl
dec
aad
int
dec
push
mov
dec
pop
test
jmp
testl
pop
inc
and
hlt
mov
icebp
repz
icebp
gs
lahf
enter
jp
sahf
mov
mov
dec
cli
cmp
stc
push
adc
push
adc
jnp
xchg
jae
jle
add
fst
sub
bound
imul
cmp
fcmovbe
mov
cltd
mov
lock
mov
data16
dec
mov
cs
mov
int
inc
dec
test
xchg
test
push
ret
sbbb
xor
insb
pop
pop
inc
pop
add
lods
jnp
lods
sub
xlat
mov
out
fmul
mov
pop
dec
cmp
aas
loopne
xor
pop
repz
je
cmp
mull
imul
test
decb
clc
xor
stc
add
sahf
fabs
int
test
dec
jp
je
dec
lret
jae
mov
xchg
mov
sub
loope
mov
jg
test
fs
mov
inc
xor
dec
shr
adc
sub
cmp
mov
mov
sub
push
pushf
lods
addl
mov
push
mov
out
pop
jbe
scas
dec
adc
popf
or
sbb
lods
ret
enter
xchg
add
xor
jmp
test
cmp
hlt
cmpsb
sub
loopne
jmp
dec
add
scas
arpl
inc
cmp
push
fstps
mov
xchg
ss
xor
or
sbb
je
ficoml
fld
ljmp
xchg
push
ja
imul
push
arpl
repnz
or
test
adc
sub
decb
jb
xchg
pop
jbe
lock
pop
andl
xchg
add
repz
xor
push
mov
inc
sti
out
sbbb
or
jo
test
mov
and
mov
or
arpl
push
xor
sbb
mov
push
jae
fmull
mov
fistpl
push
add
jb
pop
add
bound
xor
adc
xchg
into
sbb
in
sub
pop
pusha
test
xchg
loope
dec
xchg
inc
pop
or
pushl
push
jae
hlt
es
and
fs
out
xchg
jmp
push
cld
push
je
and
int
xchg
jns
jns
xchg
xchg
pop
insl
cmp
js
pop
jge
jp
popf
xchg
cmp
outsb
mov
mov
inc
sbb
scas
push
sub
inc
sbb
cwtl
xchg
mov
lcall
leave
inc
in
jbe
push
lahf
and
jae
dec
and
cltd
cmp
ljmp
sub
addl
aaa
aad
xchg
mov
inc
rorb
enter
pop
add
add
dec
push
adc
call
js
xchg
add
pop
xchg
mov
mov
sahf
mov
mov
pop
js
lock
movsl
test
adc
pushf
daa
mov
es
cmp
push
lds
xchg
aaa
in
jle
jbe
fmull
hlt
sbb
data16
aad
clc
fsubl
or
loopne
pop
add
pop
cmc
hlt
jl
pop
mov
add
mov
hlt
fcompl
pop
loopne
addr16
dec
mov
mov
jns
mov
jl
cmp
outsb
aad
push
mov
xchg
jne
movsb
mov
add
cwtl
rcrb
mov
sbb
xor
dec
subb
lcall
pushf
cs
xchg
fs
xchg
inc
das
pop
aam
sahf
mov
enter
mov
dec
test
jmp
cmpl
push
les
mov
std
mov
testl
out
xor
and
xchg
pop
xchg
mov
ret
movsb
hlt
rcll
push
mov
lret
dec
or
pop
nop
imul
nop
ljmp
push
mov
sbb
cmp
imul
fnstenv
jne
inc
stos
and
les
pop
stos
rcrb
cli
cmp
adc
int3
xchg
insb
sti
imul
cmp
push
xchg
icebp
test
dec
pop
mov
out
adc
mov
iret
or
fisubrl
loopne
cwtl
pop
cltd
cmpsl
into
mov
dec
pcmpgtd
adc
or
push
cmp
xchg
xor
cmp
rorl
dec
and
rcll
out
jbe
mov
cli
adc
or
jmp
adc
loope
leave
jp
stos
lcall
shr
and
push
imul
jnp
pop
loopne
movzwl
add
lmsw
inc
mov
data16
in
and
scas
xchg
cwtl
pushf
movsb
test
sti
mov
lods
loop
ja
enter
xor
inc
shll
hlt
pop
dec
mov
xor
mov
pop
bound
loopne
mov
andb
adc
mov
dec
mov
jecxz
into
sbb
push
lock
jg
xor
out
jp
dec
lcall
cs
lods
test
enter
lods
mov
hlt
push
or
sbb
push
js
and
cltd
es
inc
xor
mov
sbb
push
cmpsl
xor
sbb
push
imul
in
dec
outsb
dec
inc
push
cmc
aas
in
gs
xchg
adc
pop
push
ret
dec
js
jns
mov
pop
cmp
fbld
out
push
or
and
mov
mov
das
aaa
pop
loope
popa
inc
and
lock
mov
lods
push
int
mov
aaa
add
inc
fsubrl
jno
mov
out
fdivrs
cmp
test
add
or
inc
movsl
mov
dec
in
jo
aam
pusha
fcom
bound
jne
xor
and
shlb
int
jae
add
mov
sbbl
movsb
into
jmp
pushf
jle
sub
push
lock
mov
xor
andb
inc
add
addl
sub
lods
in
push
movd
les
mov
std
in
nop
movsl
jne
stos
mov
add
fdiv
and
in
or
ss
adc
dec
jnp
pusha
pop
dec
push
aas
jle
and
cld
pop
pop
sarb
out
adc
lock
cmp
add
stc
inc
jno
sbb
in
pop
cmp
mull
jmp
or
add
xor
jne
stos
mov
popa
imul
adc
pop
rcll
ret
xorb
mov
mov
jge
std
adc
sbb
je
pusha
sub
pop
sub
dec
pushf
add
jmp
sub
repnz
in
daa
xchg
cli
dec
inc
mov
jno
mov
jp
jl
outsl
mov
ret
ret
mov
jmp
jmp
push
push
xor
icebp
and
lcall
or
dec
addr16
mov
in
data16
popf
sub
or
mov
mov
sarl
jecxz
add
jbe
ja
xchg
iret
push
push
push
cmp
push
inc
mov
cwtl
cwtl
int
arpl
test
out
int
jno
inc
fsubrs
mov
pop
mov
push
dec
clc
ja
sbb
push
sub
lods
sbb
cmp
in
nop
add
cmpsb
push
mov
push
test
das
sub
shl
xor
ficompl
mov
ret
or
imul
pop
mov
jmp
push
lods
or
stos
std
jae
pop
xchg
mov
inc
repz
dec
adc
imul
scas
test
leave
xchg
test
jbe
mov
scas
pushf
mov
sbb
xchg
xor
cmp
test
testl
dec
in
inc
push
orb
jmp
ja
add
sub
sbb
lds
and
ja
adc
push
cmp
push
inc
shlb
inc
pop
dec
and
fwait
mov
inc
into
dec
cli
addr16
or
mov
adc
insb
lea
jle
lret
jnp
insb
scas
dec
cmp
push
or
insb
insl
pop
ror
shll
enter
imul
inc
xor
ret
jge
and
hlt
dec
sti
sti
jg
mov
inc
jno
mov
pop
or
ss
cmp
sbb
jae
pop
inc
inc
in
xor
mov
vunpckhps
lret
push
adc
sbb
rcrl
mov
repz
push
in
adc
and
out
xchg
repnz
jecxz
push
cli
stos
sbbb
divb
push
mov
arpl
and
fiadds
mov
test
pop
push
xor
or
pop
add
int
shrl
mov
xor
lods
mov
ret
les
bound
lock
mov
rcll
mov
fsub
call
aas
cmp
out
or
inc
test
pop
xor
in
addr16
das
stos
data16
in
loope
cwtl
cmp
add
push
shl
jno
mov
ja
mov
push
mov
out
sub
or
jno
inc
lret
cli
inc
sahf
ljmp
aad
pusha
jl
dec
xor
dec
xor
data16
gs
aaa
lea
mov
jno
mov
outsb
aas
mov
popf
inc
test
sbb
out
xchg
and
add
pop
mulb
pop
mov
jmp
xchg
sub
jns
cmp
dec
mov
and
fldl
movsb
mov
dec
rcrb
mov
sahf
sub
sub
rclb
mov
lea
xor
aad
jl
out
and
ret
ljmp
and
add
pop
jl
xor
repnz
pop
hlt
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
jmp
in
in
data16
push
sbb
aam
xchg
sub
stc
or
iret
dec
mov
add
jge
xchg
mov
ret
jns
xchg
mov
dec
mov
mov
data16
test
mov
inc
mov
imul
mov
int3
jae
loopne
mov
mov
roll
jo
mov
mov
or
icebp
pop
and
xchg
cltd
out
mov
ficoms
lcall
cmp
das
hlt
notb
ret
push
pusha
pop
sbb
dec
or
jae
mov
in
adc
xchg
adc
lcall
pop
jg
loop
sbb
cmp
push
enter
inc
leave
es
cmpsb
sbb
pop
or
push
repz
pop
push
cs
scas
jmp
dec
lcall
cmc
test
outsb
push
shrl
sub
push
sub
gs
fmul
cmc
addr16
and
out
add
and
mov
lret
xor
inc
imul
mov
jmp
int
insl
pop
adc
cmc
add
daa
orl
lods
sbbb
add
inc
movsb
ljmp
fstl
outsl
addr16
push
add
test
push
and
jne
ret
loope
add
dec
push
mov
out
adc
pop
mov
ja
sbb
xchg
or
or
fdivrl
insb
jl
daa
int
fucomp
xor
int
jne
add
mov
popf
hlt
bound
lock
dec
ljmp
xchg
jp
inc
mov
push
popa
subb
rcll
push
sub
loopne
leave
out
mov
mov
and
and
xchg
add
cmpl
mov
rcl
movsl
inc
test
cli
jge
dec
fists
aam
aam
lret
mov
loopne
cld
mov
mov
fcmovne
jb
add
orb
movsb
popf
mov
cmpsl
clc
push
sub
dec
adc
xchg
test
int3
dec
jle
das
pop
or
sbb
imulb
and
or
sbb
fs
int3
out
ss
loopne
adc
dec
mov
lods
xchg
inc
adc
push
mov
jle
fwait
xchg
xchg
out
cmp
mov
push
std
aam
in
adc
and
pop
sarb
mov
xor
lcall
xchg
cltd
outsl
sahf
lcall
enter
insb
jl
inc
clc
mov
jno
adc
jns
cld
arpl
insb
and
sbb
clc
aas
mov
rcll
sarb
addb
or
ret
or
inc
push
ja
jno
imul
es
push
aaa
std
mov
push
xlat
add
cmp
mov
lret
in
push
push
add
jns
loopne
and
xlat
sbbb
and
mov
ret
and
aad
lds
in
push
js
enter
jns
es
popa
add
sub
hlt
loopne
xor
mov
std
pop
or
or
mov
clc
divb
cmp
xchg
mov
dec
bound
push
dec
cmp
mov
jle
dec
push
adc
adc
mov
neg
cmp
ret
dec
pop
inc
f2xm1
popa
cli
mov
adc
xchg
inc
rolb
dec
in
rolb
js
orl
ror
sbb
and
xor
sbbl
lret
or
stos
stos
sbb
aad
mov
pop
pusha
push
and
push
inc
aas
in
dec
ds
lcall
arpl
lods
and
inc
cs
mov
push
call
out
mov
sahf
xchg
mov
ljmp
test
or
dec
mov
adc
insb
add
cmp
shlb
push
shll
lahf
sahf
jmp
dec
mov
ret
cs
lret
push
roll
in
mov
fwait
xchg
mov
loop
adc
scas
jmp
mov
fidivrs
dec
inc
pusha
add
popa
xor
mov
aam
inc
repnz
bound
mov
jns
sub
push
in
jnp
rcrb
out
mov
loope
cmc
add
out
mov
and
jecxz
int3
mov
lcall
and
fidivs
cmp
aaa
out
jnp
cmp
cmc
xchg
imul
dec
in
inc
push
out
mov
fstpt
sahf
inc
and
orb
adc
pop
insb
dec
add
add
xacquire
shll
inc
stos
mov
pop
sbb
insl
inc
cli
dec
les
xor
je
sub
xor
repnz
ret
int3
xor
sti
sahf
pop
push
cs
or
adc
or
dec
divb
leave
cmp
lahf
adc
xchg
mov
xor
xor
jmp
xchg
pop
inc
jg
mov
xlat
mov
ret
jge
jecxz
fdivl
ljmp
pop
xor
test
fsts
pop
in
mov
and
jne
and
fcmovne
or
fwait
daa
sub
test
out
xchg
fsubr
enter
mov
push
xchg
rorl
mov
cmpsb
scas
sub
mov
leave
jbe
xchg
dec
test
loopne
into
mov
fisubs
mov
inc
mov
fstps
pop
adc
fwait
lock
mov
out
gs
cmp
test
dec
and
pop
mov
mov
xchg
call
push
jno
frstor
sub
fwait
cmp
add
add
dec
std
in
xor
push
movsb
scas
stc
sub
rsm
pop
push
jg
pop
fxrstor
push
inc
mov
and
xor
jne
ja
sbb
test
notb
pop
pop
jg
dec
fildll
dec
lea
lods
and
jno
jns
call
rorb
movsl
push
sub
xchg
inc
or
scas
test
pop
test
inc
xor
jle
cmp
mov
es
adc
xchg
movsl
int
filds
sub
fsubl
in
sub
sbb
xlat
xchg
xchg
or
or
push
adc
popf
loope
mov
mov
pop
shll
fsubl
icebp
nop
addr16
sbb
sbbl
or
scas
je
cmp
inc
cli
or
in
je
mov
stos
dec
popf
loopne
fldt
orl
imul
cmc
inc
gs
jmp
add
std
aas
pushf
xchg
mov
sub
ja
in
mov
aaa
push
jo
mov
sbb
xchg
sbb
scas
pop
fadds
test
mov
stos
pop
inc
dec
icebp
mov
loope
vpsllw
mov
push
lret
mov
mov
dec
pop
std
jge
or
scas
cld
inc
sub
ret
push
repz
mov
shl
mov
xor
xor
or
mov
mov
xor
jmp
outsb
hlt
xorl
and
xchg
stos
ja
lret
pop
mov
outsl
repnz
ret
xchg
mov
dec
jg
aad
jmp
loop
idivb
test
aad
movsl
ljmp
fldcw
mov
lret
lea
fwait
test
xchg
pop
sub
push
fistps
sub
adcl
jp
inc
pop
jo
jb
call
pop
or
popa
xor
xor
movsb
mov
add
xchg
sub
dec
scas
mov
ljmp
addr16
mov
push
lods
loope
movsl
fistpll
cmp
pop
or
jge
mov
ds
push
dec
sbb
cmpsl
cmpsb
inc
pop
test
or
inc
repnz
adc
das
cli
es
xorl
rcrl
cmp
push
cmp
adc
jne
sub
inc
jb
ret
pop
push
clc
jb
pop
xor
pop
mov
imul
add
xor
subb
xor
xchg
mov
adc
insl
popa
lea
pop
or
repz
out
in
cs
incb
jecxz
call
ja
or
ss
mov
test
movsb
ficomps
or
cmp
enter
das
push
aad
push
inc
push
or
cmp
sub
add
es
outsl
mov
jbe
enter
outsb
test
rcll
das
sub
icebp
mov
les
cmp
fldenv
inc
or
arpl
mov
lahf
test
leave
call
sbb
inc
and
fsubrp
dec
pop
repz
shr
popf
test
pop
cmpsb
test
call
adc
cli
add
insb
lods
pop
fnstcw
fimuls
mov
mov
and
scas
loopne
lods
sub
or
add
fiadds
inc
push
push
jns
xchg
pusha
jg
xor
xchg
jnp
nop
daa
or
xchg
inc
sub
sub
sbb
push
js
insl
jno
adc
push
and
jne
xchg
mov
inc
call
mov
xchg
add
mov
setne
add
jg
ds
cmp
shl
arpl
sub
popf
inc
insb
lret
and
push
push
vcvtpd2dqx
cmp
pop
push
mov
out
lods
popf
pop
lock
push
mov
out
cmc
outsb
jmp
shrl
mov
mov
mov
test
iret
adc
cli
xor
pop
stos
aam
add
cmp
jle
dec
cwtl
dec
fcmovnb
jno
inc
aam
mov
add
xlat
nop
movsb
sub
fstps
add
fldpi
jnp
shrb
adc
mov
rcrl
push
xor
lret
dec
arpl
mov
xchg
push
mov
or
dec
push
xchg
aad
repz
insl
push
rcrb
aas
or
sub
and
ret
lea
cmp
xchg
push
or
and
std
cli
mov
mov
int3
xor
fs
out
add
or
sbb
add
lret
les
test
sahf
mov
mov
in
dec
inc
mov
pop
mov
fisttpl
or
rcll
cmp
xchg
mov
add
je
stos
pop
das
push
or
fucomip
in
popf
insb
lods
lock
add
xor
je
gs
and
out
loopne
shlb
push
mov
pop
dec
xlat
xchg
insl
cmp
inc
out
pop
mov
int3
sbbb
sub
lods
mov
cmp
xor
mov
pop
mov
dec
lahf
jg
push
dec
xchg
stos
sbbb
daa
or
imull
dec
aad
sti
outsl
cmp
incb
xchg
repnz
incb
xor
mov
and
jecxz
xchg
and
pop
jl
lock
mov
adc
mov
fldt
cmpl
cltd
xchg
cld
jmp
sbb
test
push
hlt
jnp
addb
mov
xor
jb
popa
mov
sub
jle
scas
jne
adc
cltd
insl
xor
or
std
repnz
shll
lea
push
stc
data16
fnstsw
jae
sbb
cmp
jo
imul
sti
mov
xor
out
push
push
jg
lret
xor
pop
outsb
stc
cmc
or
xchg
xor
bound
and
icebp
lea
cltd
xchg
cwtl
gs
ds
ss
or
pusha
jne
aam
mov
cld
xor
sub
into
jg
aam
cmc
pop
ja
sub
clc
adc
dec
jns
das
mov
add
ljmp
add
mov
loopne
shl
fnsave
dec
rcrb
fs
adc
mov
push
sahf
shll
popf
and
cmp
pop
adc
out
lods
inc
lods
repnz
mov
je
push
dec
push
push
call
or
into
or
push
push
jp
inc
xor
jle
add
mov
iret
push
push
jl
loopne
out
cwtl
jae
cwtl
fbld
adc
incb
icebp
je
test
pop
mov
call
jb
pop
adc
inc
xchg
jecxz
idivl
imul
in
or
inc
fwait
test
bound
mov
test
clc
les
cmc
or
aad
stos
mov
and
mov
jae
test
mov
cs
and
out
lcall
xor
lret
sub
pusha
adc
push
call
pop
cs
insb
or
cmp
push
das
je
dec
xchg
fwait
sahf
je
inc
push
pop
or
ds
mov
out
shrb
int
fisttpll
aas
push
mov
lea
mov
pop
sub
add
loope
mov
mov
in
xor
outsb
jl
hlt
movb
movsb
imul
jo
xchg
mov
jo
sbb
and
xor
dec
cltd
mov
jg
push
and
lea
mov
testb
dec
mov
rol
loopne
mov
scas
sub
add
daa
xor
add
lock
mov
jecxz,pt
push
dec
arpl
movsl
rolb
push
lret
gs
ja
das
insl
int
xchg
mov
je
inc
jecxz
mov
movb
out
ja
ds
push
sbb
cld
loope
mov
out
xchg
adc
and
mov
lods
xchg
fstl
or
push
or
popa
popa
into
inc
push
jo
adc
mov
ljmp
adc
xor
clc
mov
push
or
ucomiss
movsb
lods
mov
and
pop
or
cs
push
inc
stos
sbb
lret
push
clc
cmpsb
mov
mov
mov
jns
dec
loopne
test
and
push
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
jmp
add
mov
inc
imul
aaa
mov
ja
popa
imulb
in
mov
negl
fidivs
movl
rcl
or
leave
pop
mov
fildl
push
sahf
arpl
rolb
andb
icebp
xchg
jg
sub
test
mov
mov
or
fists
addb
mov
pusha
cwtl
stos
dec
jb
jno
xor
std
stos
aaa
sbb
xor
outsb
in
lods
cmp
daa
rorl
rcr
xor
test
xlat
adc
loopne
int3
data16
mov
mov
push
fists
loopne
fbld
xchg
or
and
in
dec
and
js
dec
mov
cmp
loop
jno
imul
mov
push
std
lcall
lods
push
xchg
push
aam
addb
sub
jnp
jns
fwait
cmp
into
lea
popa
popw
ds
icebp
dec
dec
mov
fdivl
imul
sbbb
cmpsl
repnz
xchg
fdecstp
mov
xchg
movsb
add
arpl
or
mov
mov
stc
divl
and
imul
stc
dec
add
jl
sub
adc
je
out
movsb
les
or
and
or
rclb
xchg
repnz
inc
ljmp
les
and
inc
jl
stos
mov
pushf
fldl
mov
sarb
mov
int
lock
mov
xor
out
or
push
jae
addl
stc
dec
lcall
pop
and
xor
fstpt
int
xorb
xchg
dec
scas
cltd
pop
mov
cld
cmp
das
popa
inc
lret
xor
mov
inc
out
aaa
sub
lds
insl
imul
mov
dec
hlt
pop
dec
cmp
aas
push
cmp
cmp
add
and
mov
mov
mov
jb
shr
mov
aam
jg
jns
push
dec
sbb
pop
gs
or
or
dec
and
push
aaa
inc
lret
stc
test
and
repz
jae
push
fidivrs
fsubrl
sub
adc
inc
sub
mov
inc
cmpsb
mov
popf
add
xchg
add
orb
mov
into
jecxz
jne
fs
push
xlat
mov
inc
lea
stos
sbb
dec
cmpsb
arpl
cmc
push
out
inc
pop
fnsave
xor
inc
arpl
push
cmp
mov
pop
push
movsb
inc
call
xor
mov
call
std
dec
xlat
loop
insl
cli
scas
ds
sbb
add
push
in
push
mov
and
loope
pop
mull
loope
and
jb
jecxz
add
lock
outsl
adcl
shr
fmulp
enter
sbb
adc
cmp
lods
add
lea
testb
add
insb
adc
lret
mov
icebp
fildll
adc
aaa
adc
push
cmp
push
incb
pop
inc
fisubrs
sub
push
ss
cmp
or
mov
adc
in
dec
pusha
push
xor
jo
dec
mov
xor
imul
dec
sbb
inc
dec
xchg
pop
repz
adc
adc
fsubrp
nop
pop
mov
sub
and
pop
cmp
dec
sub
arpl
sti
push
push
mov
mov
mov
add
enter
jg
mov
mov
and
add
nop
cltd
lods
cmpsb
cmpsl
xor
int3
mov
test
xchg
jmp
fcmovne
pop
out
repnz
leave
xchg
lds
add
pop
pop
lods
sbb
dec
pop
in
sbb
scas
pop
aad
adc
adc
ret
sbb
pushf
mov
or
es
add
mov
insl
jmp
sbb
adc
cmp
xor
mov
pushf
mov
pop
outsb
daa
jbe,pn
outsb
add
push
cld
push
pop
jmp
cltd
test
push
xchg
dec
dec
roll
sbb
sub
lcall
stc
fdiv
jnp
ret
popf
push
push
cmpsb
dec
aaa
mov
call
mov
outsl
jo
rolb
nop
lret
insb
jmp
sbb
mov
cmpsb
jbe
and
pop
repnz
dec
inc
fbstp
lret
lret
scas
testb
xchg
xchg
mov
das
and
hlt
mov
inc
cmpl
in
jp
notb
sub
pop
leave
pop
dec
push
dec
lcall
mov
mov
fpatan
sbb
out
adc
hlt
enter
push
repz
sub
mov
mov
or
ljmp
fsubrl
and
dec
pop
cld
rorl
rclb
jl
sub
jo
sub
fstpl
and
xor
mov
iret
outsl
sub
imul
inc
xor
jg
add
cld
fbld
test
shll
mov
movsb
lea
popf
fs
mov
jecxz
out
into
mov
push
cld
mov
jp
and
jecxz
fisubrs
adc
jnp
adc
jge
jbe
out
and
mov
in
xchg
out
aam
jns
dec
loopne
out
frstor
inc
andl
pop
lret
sbb
xchg
push
add
aad
xor
arpl
addl
out
fisttps
or
push
mov
test
jno
mov
or
aas
ret
or
jg
cmovne
xchg
add
mov
repz
add
stos
jg
xor
loop
pop
ljmp
pop
pop
jns
mov
cltd
call
mov
fsub
sub
sub
mov
inc
ret
fdivl
fcoml
movsb
jbe
add
pusha
sbb
jb
rclb
imul
fdivs
adc
pop
arpl
dec
cmp
push
aaa
sarl
push
fistpll
jl
push
filds
mov
iret
ds
sub
rclb
pushf
jmp
aam
fmuls
push
push
in
and
insb
sarl
inc
sahf
cmc
mov
arpl
mov
cmp
fld
dec
das
xchg
cmpsb
push
jne
xchg
fcoms
outsb
cmpsb
dec
adc
pop
dec
orb
xchg
mov
mov
rolb
shrl
dec
repnz
cli
inc
or
les
or
shll
pop
fmuls
adc
outsl
push
cmp
or
js
sbb
jmp
out
dec
sub
call
xor
mov
aas
aas
js
jecxz
dec
and
dec
sbb
push
xchg
stos
fcoms
in
rclb
inc
ret
cmpsl
ret
dec
mov
inc
push
in
je
fldt
hlt
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
jmp
orl
push
cmpb
xchg
ja
jg
bound
shlb
out
loopne
add
pop
cmp
sti
cltd
scas
cli
inc
stos
repz
adc
addr16
cld
pop
adc
lahf
xchg
aaa
dec
mov
push
inc
inc
int
ljmp
rcrl
fnstenv
cmp
pop
push
imul
dec
mov
aad
adc
inc
xchg
addb
cltd
pop
sti
incb
stos
pop
cltd
stc
dec
adc
or
sbb
push
xchg
cmp
fptan
sub
and
into
xchg
dec
lret
sahf
in
sbb
xor
iret
push
push
stc
imul
sub
stc
and
out
sbb
dec
shrb
std
cmc
mov
xchg
mov
mov
push
push
cld
mov
mov
ds
add
xchg
pop
mov
sti
adcl
xchg
int3
test
arpl
pusha
push
sbb
jns
mov
call
jno
data16
in
in
mov
dec
loop
mov
dec
xor
int
sbb
or
fnstenv
stos
daa
add
xor
inc
sub
dec
push
test
cltd
sbb
dec
cmp
outsl
inc
int3
fstpt
sbb
mov
inc
adc
sbb
mov
jae
das
mov
mov
sub
popa
push
fldl2t
mov
jl
adc
mov
fsubrp
daa
cmpl
aaa
in
outsb
mov
add
mov
mov
in
jl
pop
not
mov
jp
idivl
jb
arpl
pop
add
xchg
dec
jae
loop
sub
fcompl
leave
loope
mov
mov
pop
xchg
pop
jb
fistl
scas
out
adc
cmp
dec
stos
bound
xor
outsb
or
fstpt
sub
adc
lret
cmp
adc
mov
int
xor
dec
push
imul
sbb
icebp
dec
push
gs
pop
mov
mov
dec
cmpl
clc
push
dec
cs
shlb
sub
xchg
scas
xchg
dec
pop
notl
notb
adc
pop
fincstp
xchg
xor
jo
sub
mov
dec
leave
cmp
xor
add
jns
iret
fwait
cmc
lahf
cmpsb
push
mov
push
sbb
jne
xor
xchg
mov
xchg
mov
lret
adc
ds
push
mov
and
js
adc
icebp
nop
dec
out
dec
aam
lods
jb
adc
sub
lea
aad
mov
aam
sub
mov
add
inc
add
frstor
mov
les
pop
sahf
les
ljmp
adc
bound
or
rolb
shrb
xchg
iret
daa
std
lret
and
cmp
pop
xchg
xor
rcrl
or
enter
in
cmc
out
mov
and
lds
or
and
data16
jge
cs
aad
lds
mov
mov
cs
mov
dec
sbb
xchg
je
xchg
inc
roll
push
xchg
loope
outsl
test
sbb
xor
fidivl
data16
adc
enter
mov
push
mov
push
mov
iret
iret
sbb
mov
lods
jno
or
cwtl
pop
inc
adc
cmp
js
inc
and
and
ds
clc
fcmovnb
repz
cmp
aad
pusha
stc
dec
repnz
mov
cmpsb
xor
push
repz
mov
jno
xchg
pushf
add
faddl
test
lret
fadds
jg
shlb
das
add
nop
lods
sbb
sbb
jo
inc
xadd
xchg
cmp
xor
dec
pop
repz
out
push
mov
lods
add
adc
leave
aam
mov
fsts
pop
enter
pop
shll
movsl
lcall
in
pop
lcall
mov
pushf
push
cmovp
mov
outsb
dec
cmpsl
or
jo
es
lds
xor
xchg
icebp
sbb
dec
in
xchg
insl
sbb
lock
pop
ss
dec
pop
addr16
pop
sbb
movsl
push
les
aad
into
loope
dec
push
cltd
sti
push
jg
and
adc
pop
mov
jle
jmp
les
call
sub
frstor
ret
xchg
xchg
imul
into
jp
lods
jecxz
jnp
jecxz
jnp
pushf
into
push
fwait
pop
cmp
int3
cmpsl
cmp
sub
jo
leave
inc
jg
mov
test
lds
ret
rorl
insb
xchg
lret
dec
fs
sub
into
xlat
mov
es
ret
mov
shlb
dec
outsb
pop
adc
mov
adc
fidivrs
dec
cltd
outsl
cli
mov
cmp
dec
push
stos
enter
fucomp
test
pop
sahf
notl
imul
mov
rolb
sub
test
lea
jb
pop
movsb
test
pop
push
insl
mov
mov
mov
lret
scas
scas
push
jge
jge
xchg
sub
ss
in
sarb
dec
mov
jae
test
mov
mov
jnp
addr16
cmp
jmp
inc
add
sub
pop
mov
and
dec
andl
push
stc
repnz
pop
inc
popf
pop
fcmovu
and
sub
in
or
push
jno
test
xchg
test
test
and
cmpl
mov
and
popa
inc
add
xor
mov
jno
fisubrs
sti
push
push
cmp
xor
inc
stc
out
push
pop
mov
repnz
jno
push
popa
std
push
jmp
daa
mov
push
jnp
cmpsb
test
fidivl
mov
fucomp
push
and
je
jne
outsl
push
mov
cmp
pop
mov
sub
mov
push
lods
ss
mov
and
mov
sahf
roll
cmc
movsb
aam
incl
and
daa
mov
in
rcrb
push
sbb
lock
pop
dec
jle
mov
popf
gs
push
adc
stc
push
mov
cmpsb
fdiv
xor
jl
push
and
push
sub
mov
aam
hlt
stos
and
inc
scas
xlat
repz
mov
xchg
stos
fstpt
ss
emms
jle
test
add
call
test
or
xor
ja
jg
add
jb
clc
cli
push
js
sbb
adc
add
call
outsb
xchg
bound
mov
cmovp
cmp
mov
sub
das
push
push
repnz
movsb
icebp
or
sub
sub
pop
pop
inc
gs
push
mov
rcl
pop
lret
sti
cmc
and
loopne
loope
or
imul
mov
int3
inc
mov
stc
push
inc
aaa
rcrb
outsb
fildl
jb
mov
mov
dec
mov
aaa
adc
lea
or
in
and
jbe,pn
jge
fs
dec
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
jmp
mov
and
setns
dec
xor
push
dec
xchg
ja
in
pop
push
inc
je
iret
mov
xchg
mov
sbb
cmpsl
and
xchg
mov
jns
jb
shrl
int
ljmp
and
pop
push
jecxz
inc
daa
daa
mov
or
jmp
mulb
aas
pop
sti
mov
push
inc
push
xchg
das
jnp
mov
mov
xor
aaa
cwtl
aas
adc
jne
cmpsl
movsl
or
jbe
shlb
loop
lret
call
add
inc
add
fldenv
call
xor
sbb
std
xchg
xor
ror
inc
out
cld
pushf
cmc
ror
mov
lock
in
and
xchg
lret
push
loopne
popa
inc
jae
pop
or
mov
dec
push
repz
aas
scas
mov
xor
fsubs
push
push
ret
xor
mov
sbb
pop
aas
repnz
shll
test
aam
dec
stos
call
pop
test
dec
xor
aad
push
mov
inc
out
dec
mov
jle
or
pop
xchg
push
pop
rorb
nop
xchg
and
fxch
jb
inc
jp
push
mov
pop
lods
aaa
cmp
outsl
aam
xor
call
int
fxch
sbb
fadd
popf
shrb
cli
sub
jle
les
in
shll
out
xor
in
jb
loopne
lds
imul
enter
out
inc
add
push
fildll
jo
in
cmpsb
dec
aam
and
scas
push
lret
nop
mov
rcr
into
or
mov
push
dec
out
outsl
dec
jp
xchg
imull
mov
out
jp
ret
cli
xchg
arpl
mov
nop
mov
pop
xchg
or
sbb
mov
setp
dec
sbb
dec
push
mov
jecxz
movsb
jg
and
loopne
fcomps
jmp
or
jne
adc
lods
jge
mov
mov
mov
xor
mov
aad
scas
push
arpl
scas
cld
mov
jecxz
inc
jns
sahf
and
pop
xchg
mov
cmp
adc
hlt
xchg
mov
call
add
ret
cmovb
mov
mov
add
push
xchg
and
shll
icebp
jmp
stos
cmp
out
sub
push
lods
lds
test
outsl
push
sahf
lds
into
aam
clc
xorb
stc
sbb
push
xchg
inc
xor
ja
inc
cmp
mov
or
adc
ja
lret
push
lcall
stos
ficoms
mov
pop
add
in
cmp
out
dec
push
scas
sarl
pop
push
jae
push
inc
dec
jo
cmp
sti
lock
mov
mov
pop
sub
lcall
out
xchg
inc
dec
fwait
cmpsl
clc
xchg
inc
xor
mov
jno
mov
adc
loope
adc
hlt
movb
dec
fcmove
lret
xchg
insl
es
pop
icebp
mov
add
sbbl
push
xchg
ret
addr16
jae
aaa
or
lahf
mov
jbe
push
mov
sub
cltd
cmpl
pop
inc
mov
movsl
shlb
int
mov
jg
mov
movl
sub
add
cmp
int3
jnp
dec
xor
xchg
aam
in
xchg
inc
enter
cwtl
cmp
xchg
mov
adc
cmp
and
sbb
in
cltd
jp
fnop
fstps
sbb
inc
and
sub
cmpb
loop
sbb
dec
lea
xor
add
idivl
clc
js
ret
std
cmp
pushf
and
adc
xchg
xor
fcmovnbe
add
repnz
jae
lret
mov
mov
dec
or
in
mov
inc
inc
rcrl
xchg
cld
loop
ljmp
xlat
push
test
sub
fdivs
sub
mov
sub
cwtl
iret
push
cmc
rorb
movsl
arpl
das
pusha
mov
fidivs
mov
in
sub
lcall
fs
sub
xchg
fwait
pop
int3
or
and
adc
fdivl
sub
scas
js
adcl
sub
ret
aam
sub
adc
js
insb
lock
lret
dec
sub
cmp
add
addr16
ljmp
sub
inc
in
xor
cmp
adc
sub
notb
daa
pop
xchg
aas
daa
pop
out
xchg
in
call
pop
lret
xor
mov
adc
or
subl
sbb
sbb
stc
inc
mov
jmp
gs
xor
shr
mov
jl
mov
or
sbb
mov
movsl
push
insb
std
jmp
xchg
or
fwait
in
iret
loope
dec
push
sub
roll
xchg
pop
shl
xchg
add
movsl
xor
fistpll
jp
sbb
outsb
dec
jmp
fists
in
enter
push
fwait
lret
xlat
jno
or
mov
outsl
in
outsl
jg
dec
pop
push
inc
and
xchg
xchg
das
mov
sub
push
jo
adc
jo
out
inc
aaa
sub
pop
xchg
sub
addr16
clc
pop
call
fsubr
xchg
out
inc
lahf
sbb
lock
into
xor
cmp
loop
mov
aad
js
sbb
dec
int3
fisubrl
jo
mov
enter
inc
mov
ss
add
mov
mov
dec
movzwl
rcrb
xchg
push
lods
bnd
pop
and
jne
xor
mov
testb
jbe
rcrl
test
xchg
or
jg
pop
loop
fstps
xor
popf
mov
lds
repz
push
es
dec
popl
scas
stos
je
dec
in
add
mov
nop
in
adc
test
push
sub
mov
fcom
mov
mov
sbb
ret
sbbb
mov
mulb
add
sahf
jae
pop
dec
dec
lret
mov
lods
dec
dec
mov
mov
adc
mov
cs
mov
xlat
inc
mov
into
mov
mov
punpckhbw
xor
push
xchg
repz
jecxz
dec
mov
shlb
add
inc
sbb
out
jge
sub
inc
sbb
or
lret
xchg
scas
adc
xchg
insb
test
cmp
pop
xchg
lret
xchg
data16
adc
inc
adc
pop
arpl
rep
mov
scas
aaa
in
jo
or
test
push
mov
jmp
push
xchg
adc
movsl
mov
or
pop
pop
inc
jmp
pusha
movsb
pop
inc
rcrb
push
out
cmp
enter
bnd
pusha
leave
mov
ffree
pop
sbb
sub
mov
cmpsb
mov
dec
popa
add
call
cmp
push
insb
dec
lahf
test
cld
inc
imul
xor
cmp
out
sub
push
add
push
mov
cmp
or
push
pop
inc
popf
jecxz
fldcw
insl
fsubrl
outsb
pop
das
pop
loop
in
push
xchg
push
cmpsl
mov
lret
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
jmp
ret
fwait
mov
and
dec
and
ja
sarl
add
mov
repz
pushf
dec
rorl
pop
push
ja
repz
xor
mov
dec
jo
arpl
inc
mov
push
rcl
xor
jb
out
mov
jg
sbbl
in
mov
dec
xchg
stos
xor
shl
stos
pushf
jg
xor
subb
lret
mov
push
adc
mov
cmp
nop
arpl
pop
stos
data16
sarl
adc
inc
sub
sahf
jo
in
cmp
cmp
jno
test
add
push
jae
loop
pop
out
sub
test
popf
scas
pop
sbbb
shlb
rcrl
xchg
ret
push
pop
mov
shll
jbe
pop
jl
jno
mov
mov
repnz
and
aaa
xor
js
ret
jo
cwtl
sub
jae
popa
lea
test
push
outsb
test
inc
cmpsb
add
push
push
mov
aas
sub
and
dec
push
ret
aas
into
and
sub
cwtl
cwtl
rorb
fisubrs
pushf
or
cli
nop
fstps
ficoms
shrl
arpl
xchg
jp
inc
pop
jno
mov
xor
xchg
test
daa
or
in
or
in
cmpb
clc
lret
shlb
sbb
jo
mov
fnsave
adc
add
stc
lcall
cmp
mov
push
ror
inc
or
insb
cwtl
pop
je
popa
add
pop
scas
add
adc
lods
test
dec
xor
or
shl
inc
mov
pop
shlb
inc
mov
into
inc
pop
addr16
test
push
mov
pop
stos
adcl
dec
add
jne
xchg
enter
cmp
pop
dec
cld
push
popf
push
mov
jnp
push
stos
repz
test
cmpsl
sti
js
pop
jp
sti
sbb
les
adc
in
xor
aaa
pusha
jnp
push
insb
xchg
shlb
test
bnd
test
rep
push
mov
cs
push
pop
jl
faddp
and
sbb
dec
pop
or
les
clc
dec
push
or
adc
sar
popa
xlat
push
pop
scas
push
aam
stc
and
insb
jmp
idivb
jae
or
aad
loop
mov
mov
insb
nop
jo
daa
idivb
mov
xchg
int
out
push
add
cmp
adc
les
mov
sub
fistpl
xchg
out
ret
push
lcall
inc
xchg
mov
aad
sbb
and
push
scas
pop
loope
aad
sub
xor
adc
push
or
inc
aad
xchg
or
iret
aas
fs
inc
ret
iret
cmpsl
in
insb
dec
dec
add
and
xor
cs
js
add
inc
in
sbb
pop
mov
es
fldenv
ffreep
jle
sbb
mov
btc
in
ret
dec
jae
cmp
daa
xchg
jecxz
cmpsl
or
xchg
mov
stc
fwait
test
fiadds
add
or
fwait
and
cmpsb
int
cltd
lods
xchg
clc
or
stos
aam
into
aam
fistpll
testb
gs
push
dec
pop
lret
ljmp
ficompl
pushf
mov
mov
push
pop
lock
pop
fnsave
iret
jecxz
stc
jge
clc
aas
adc
ficomps
or
ljmp
jo
test
sar
cld
lea
call
scas
loop
push
mov
js
xchg
and
js
jns
mov
sbb
push
mov
aaa
call
mov
sub
js
aas
mov
imul
and
data16
fcom
aam
or
test
movb
push
out
imul
lret
pop
pop
sbb
sub
sarb
mov
or
jle
out
aam
add
imul
cs
ret
jmp
mov
xlat
rcrb
and
das
sbb
mov
xchg
sub
xchg
icebp
xor
pop
sahf
pushf
pop
faddl
fwait
rolb
clc
jle
fnstcw
cmp
call
xchg
mov
sub
and
jae
jns
je
popa
icebp
sub
test
mov
xchg
jo
aad
orl
mov
cmp
int
fcmovnu
mov
outsb
sub
jae
jno
scas
mov
loop
roll
jge
xchg
pop
out
cmp
xor
mov
sub
andl
ds
or
sbb
das
xchg
jnp
inc
outsb
nop
xchg
mov
push
adc
push
data16
shl
jg
mov
add
fidivrl
mov
rcll
imul
pop
scas
mov
into
jge
icebp
xchg
sbb
xchg
rcrl
divl
pop
mov
sub
add
sbb
scas
lods
bound
cmpsl
mov
stc
sbb
cmp
mov
or
lods
mov
les
fsubrs
and
sti
sbb
or
fidivl
or
pop
ljmp
cmp
mov
push
push
lcall
xlat
cmpsb
scas
lods
jno
or
std
in
test
or
lods
mov
push
and
popa
mov
pop
mov
mov
ficomps
fisubrl
lahf
iret
pop
sbb
sub
push
pop
pop
sub
xor
mov
add
in
andb
push
sub
imul
cwtl
and
cmp
popf
pop
in
adc
fs
and
int
adc
stos
addr16
and
cs
int3
mov
and
shll
repz
jo
int3
dec
push
mov
outsl
filds
out
aam
imul
dec
push
inc
pop
push
addr16
adc
push
mov
test
or
in
in
push
sti
inc
pop
jne
jp
mov
sub
mov
pop
movsb
xor
inc
fs
push
clc
and
dec
mov
adc
pusha
jo
push
push
dec
xor
stc
aaa
xor
xchg
jmp
cmpsb
mov
jno
out
jl
ds
test
frstor
dec
add
dec
fwait
cmc
or
or
mov
leave
xchg
inc
mov
fiadds
aad
add
xor
pop
test
and
mov
sub
cmpsb
push
ret
add
xor
loop
sbb
jne
lock
add
push
jbe
mov
mov
adcb
notb
xor
xorl
or
scas
int
mov
add
xchg
or
mov
xor
cmc
or
inc
dec
mov
jo
hlt
mov
jo
inc
icebp
ljmp
xchg
inc
sahf
push
js
ja
mov
pop
xor
pushf
sti
mov
adcb
mov
push
inc
out
and
movsl
and
xor
or
or
mov
jmp
aam
inc
test
addr16
add
or
outsl
pfsubr
out
mov
sti
inc
jno
mov
dec
lea
movsb
cli
mov
cmp
insl
xlat
xor
add
add
cmpsb
mov
jecxz
ret
or
mov
adc
shrd
mov
mov
ss
mov
or
in
or
adc
or
fmul
jne
xlat
clc
pusha
and
fsub
je
fwait
pop
mov
int3
xor
out
sbbb
push
mov
pop
pop
enter
and
push
fstp
scas
notl
adc
xchg
aad
or
dec
push
enter
in
push
push
lret
push
out
cmpsb
out
lcall
mov
mov
adc
mov
add
push
fwait
jno
lock
mov
fsubr
int
cwtl
int3
mov
shll
adc
movsb
jl
shr
test
inc
out
inc
dec
mov
jl
filds
sbb
xchg
push
outsb
std
out
xchg
jns
or
jo
or
inc
mov
jbe
icebp
in
dec
rcrb
jecxz
cmp
cmpsl
repnz
aaa
push
shlb
cli
fsub
es
addr16
mov
push
mov
in
sub
nop
jnp
shll
or
push
push
loop
cmpsl
test
clc
pop
aam
stc
movsl
adc
jg
and
cmpsl
add
int
xchg
push
data16
cmp
cli
fidivs
ret
divl
jb
pop
inc
push
negb
sub
shl
in
fsub
cmp
mov
cld
int3
stos
and
and
cmp
cmp
rcrl
adc
les
jb
cltd
loopne
sbb
stos
je
xchg
adc
cmp
aaa
mov
leave
sub
jb
inc
pushf
loopne
movsb
push
sti
imul
lcall
inc
sub
dec
mov
ljmp
mov
sbb
push
cmpl
in
jbe
out
push
jns
xchg
mov
in
xchg
lods
jp
test
pop
subb
jmp
add
addr16
in
xchg
cmp
stc
mov
cmpb
inc
ja
xor
iret
ss
lods
test
jo
pop
jb
push
sbb
and
es
mov
inc
mov
mov
dec
xchg
jmp
popa
dec
xor
addb
mov
es
lahf
jae
lock
jle
fmul
sub
xor
add
mov
je
and
scas
iret
popf
insl
sub
xchg
push
jae
ds
jno
shll
mov
insl
repnz
mov
cmp
sahf
mov
test
or
mov
shrl
dec
mov
inc
dec
cld
sub
and
push
mov
outsl
stos
inc
sub
cmp
xor
push
mov
arpl
jp
mov
mov
decb
and
ret
or
std
pcmpgtd
sub
lods
cs
das
jmp
cmp
outsb
sbb
add
pop
mov
cmp
lds
sub
lahf
mov
in
fwait
cmc
ja
stos
mov
cmc
push
and
std
add
inc
pop
mov
adc
dec
xlat
cmpsb
pop
adc
jae
pop
cwtl
add
addr16
shll
lcall
int3
fiadds
fdivrl
shl
lds
inc
outsl
test
icebp
stc
dec
jo
pop
cmpsb
mov
sbb
fwait
mov
cmp
push
add
movsb
mov
or
ret
movsl
and
push
jmp
loopne
mov
push
xchg
pushf
xchg
andl
add
pop
loop
lods
xorl
ret
rcl
dec
xchg
stos
mov
jno
dec
sahf
bound
repz
sub
nop
lret
in
movq
ret
test
cli
push
int3
nop
pushf
adc
pusha
out
out
xchg
jg
mov
out
movsb
jo
lret
dec
add
and
lahf
jb
xchg
iret
cmp
inc
out
mov
inc
fisttpll
mov
mov
sarl
std
imul
lods
gs
loopne
nop
xchg
sbb
jo
aaa
into
push
and
add
popa
and
push
cmp
in
icebp
push
pushl
xchg
out
pop
xchg
xorl
sub
dec
mov
test
sahf
sbb
jne
ja
cmpsb
cmp
inc
push
xor
xor
andb
sub
cmp
pop
lock
jnp
cmp
mov
int3
in
mov
pop
stos
inc
fimuls
xlat
inc
xchg
rorb
lds
inc
mov
movsl
pusha
das
cmp
push
fs
bound
test
dec
aas
in
arpl
xchg
loope
sbb
cmp
pop
ja
jb
pop
andl
lea
aaa
dec
jbe
adc
mov
sub
xchg
lret
push
pop
rclb
xchg
idiv
cltd
and
push
lret
and
push
xor
or
popf
cltd
in
les
mov
add
scas
movsl
or
adc
and
mov
push
push
in
pop
ds
jb
std
movsl
and
mov
lods
ljmp
dec
push
repnz
ja
test
or
push
imul
jl
cmc
out
inc
pushf
push
sbb
pushf
cld
and
ss
cld
jns,pn
sub
into
or
pop
push
xchg
and
push
int
mov
jns
clc
xlat
sbb
adc
jecxz
int3
and
pusha
cli
imul
and
mov
jbe
int3
or
sbb
pusha
xchg
mov
sbb
cld
js
and
mov
ror
lea
dec
adc
imul
mov
icebp
mov
dec
stc
inc
dec
push
jg
mov
xlat
push
ljmp
fwait
pop
imul
lret
pop
shrl
cmp
pop
sub
in
in
iret
out
jl
lods
scas
xchg
pop
pop
xor
cld
shll
push
xor
inc
test
or
xor
lret
mov
outsb
xlat
loop
xor
mov
dec
or
bnd
loopne
xchg
movsb
imul
mov
or
and
loop
insb
les
imul
xor
cmp
les
aas
push
inc
and
xor
mov
or
mov
mov
hlt
mov
sbbb
xchg
adc
stc
into
xor
into
xchg
imul
mov
into
sahf
cmp
push
mov
push
mov
push
xchg
add
dec
xchg
ret
in
inc
push
jmp
cs
xchg
and
imulb
xlat
push
popa
js
add
cwtl
in
sahf
nop
mov
call
pop
orb
into
clc
jl
jl
cmc
inc
daa
xor
loope
out
push
lds
pop
or
addr16
and
aad
pop
push
mov
out
pop
fimuls
jb
and
inc
aas
dec
ret
fcoms
out
out
movsb
outsb
lock
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
jmp
adc
cmp
ret
aam
mov
cwtl
sbb
pop
ja
mov
push
stos
out
or
arpl
dec
dec
mov
xchg
popf
lahf
inc
xor
cmp
insb
xchg
inc
cwtl
je
mov
stos
sub
cmpl
push
and
aas
cmp
add
inc
ret
stc
push
fsub
vpcmpgtw
sahf
ret
inc
imul
lods
subl
nop
xchg
leave
push
inc
scas
add
mov
xchg
pop
adc
xchg
outsb
jo
jae
pop
popf
dec
or
jmp
movsb
fnstenv
push
push
in
mov
xchg
and
fs
dec
inc
lret
mov
mov
fsts
scas
cltd
repnz
leave
dec
ret
imul
inc
xor
stc
cmp
jno
inc
out
cmp
adc
adc
inc
loop
inc
pop
cs
aad
iret
imul
std
fsubp
icebp
adc
dec
pop
nop
jmp
lea
and
pop
push
rorl
fcomip
sarb
push
push
jo
popa
cli
cmpsl
mov
pop
sub
sbb
test
add
inc
push
ja
cmp
jp
clc
loop
push
es
rclb
sub
pop
cmp
stc
pop
push
cmpsl
insb
jno
jns
sub
jle
test
mov
in
mov
loopne
mov
repz
ss
imul
lahf
mov
bound
clc
call
lret
cmp
cmpsb
lcall
xor
insl
push
add
xor
mov
inc
into
add
lea
pop
mov
dec
jmp
xchg
push
cmp
pop
pop
jge
ljmp
int3
and
sbb
xor
sub
std
mov
push
ret
adc
jbe
lods
iret
ret
xor
xor
xor
repz
and
jge
in
xchg
adc
add
inc
aaa
inc
jp
cmp
test
out
pushf
fs
or
fisttpl
adc
jecxz
jg
or
xchg
adc
mov
cmp
mov
add
jae
out
pop
push
and
hlt
dec
subb
mov
xchg
lods
xchg
cmp
lcall
xor
out
outsl
out
divl
dec
jb
mov
mov
xchg
jmp
adc
mov
sahf
xlat
cmp
cmpsl
sbb
adcb
testb
jecxz
out
test
inc
mov
mov
xor
or
lods
mov
ror
add
imulb
icebp
cmp
mov
mov
push
sub
dec
fisttpl
jns
push
push
inc
pop
add
cmpsb
fnsave
push
jb
sub
pop
mov
fwait
push
iret
or
dec
and
scas
inc
daa
sub
sub
mov
dec
insl
pusha
inc
jns
jg
mov
sbb
notb
vxorps
stos
call
cmp
sahf
mov
xor
or
push
dec
iret
ds
pop
jecxz
push
outsb
xor
sbb
mov
pop
mov
xlat
cmc
loop
sti
add
cmpb
insl
mov
push
daa
int3
dec
and
push
sti
xor
sbb
out
mov
xchg
and
sbb
in
inc
out
test
inc
xchg
cld
repz
daa
add
pushf
aas
and
xor
shl
popa
or
lahf
push
stos
mov
mov
out
and
dec
add
test
xchg
lods
sub
cmpsb
push
push
sub
in
stc
jp
outsl
loop
sbb
jo
rcr
out
pushl
mov
pop
jp
push
das
cmp
adcl
daa
and
fimuls
push
in
inc
adc
cli
enter
or
pminsw
jp
into
daa
clc
lahf
and
add
fs
sbb
dec
icebp
mov
movsl
mov
test
cltd
popa
cmc
mov
stos
or
or
jg
or
cmc
xor
arpl
sbb
add
sub
dec
cmpsl
mov
sub
xchg
adc
out
cli
lret
pop
jmpw
xchg
cli
fists
sub
aam
sbb
test
aas
ret
add
push
sbb
aas
lds
add
stc
cld
and
mov
sbb
mov
xchg
dec
add
mov
ret
lds
mov
jle
js
inc
cmp
cmp
adc
dec
jge
bound
bound
pop
mov
inc
dec
arpl
jge
mov
pushf
imul
stc
in
imul
lret
daa
rcr
cmpl
sbb
lods
push
mov
mov
pop
lods
mov
fcomp
and
pop
out
mov
ret
cmp
rcl
cwtl
add
data16
sahf
mov
xchg
ret
mov
lahf
xor
mov
inc
pop
lret
add
loop
imul
and
stos
popa
jb
xchg
sbb
sbb
sub
std
jmp
das
mov
xchg
outsb
lcall
add
aas
mov
aas
xor
xchg
mov
mov
adc
sahf
clc
push
aas
cli
mov
sbb
xorl
mov
xchg
mov
imulb
cmpsl
inc
ds
fwait
inc
jne
jne
or
mov
js
mov
cmpb
dec
inc
inc
mov
arpl
xchg
or
xchg
xchg
cmpsl
pop
cmp
sub
or
std
add
inc
pop
jmp
test
pop
dec
mov
enter
out
cltd
jle
sbb
scas
sbb
fnstcw
icebp
mov
pop
xchg
iret
and
sbb
and
xchg
and
inc
cmpsb
adc
out
scas
fyl2xp1
sub
xor
test
js
jo
pusha
sar
out
outsl
dec
xchg
je
xchg
out
rol
and
xor
ljmp
aam
pop
xor
add
jns
test
jne
add
cmp
mov
movsb
jle
test
or
xchg
aam
bound
daa
jmp
cld
cs
or
push
mov
aam
daa
lret
add
rclb
aaa
push
icebp
inc
cmp
movsl
pushf
fucomi
add
xor
lret
inc
loopne
lock
adc
inc
stos
and
adc
movl
addl
mov
fiadds
jge
std
and
xor
fstl
push
mov
adc
outsl
int
fidivs
div
sbb
ret
das
push
xor
ss
cld
pop
cmp
not
mov
sbbl
repz
hlt
insl
inc
aaa
xchg
lods
pop
mov
leave
pop
xor
mov
pop
jge
in
loop
sub
and
fwait
sbb
sub
adc
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
jmp
sbb
and
xor
in
push
add
and
in
jmp
dec
clc
xor
stc
jno
cwtl
cld
ret
je
cmpsb
stos
setge
or
popa
adc
ljmp
ljmp
and
sbb
sbb
call
cs
cmp
pop
mov
cmc
scas
lds
mov
aam
cmp
or
sub
add
idivl
pop
push
jge
cmpsb
mov
faddl
mov
fwait
movw
fists
out
dec
cmpl
fnstsw
cmpl
sbb
xor
pop
add
mov
xor
jb
push
mov
mov
ds
mov
inc
cs
cwtl
xchg
xchg
enter
movsb
mov
mov
arpl
lret
inc
sbb
pop
pop
push
inc
xchg
push
push
bound
dec
pop
out
mov
out
mov
test
dec
jl
movsb
fists
leave
mov
push
call
push
mov
lret
cmp
jge
xchg
sbbl
les
xchg
adc
and
sbb
push
int3
lea
testb
sbb
aas
mov
jns
sbb
divb
add
iret
cli
mov
or
gs
xor
and
adc
jg
push
je
push
mov
mov
in
xor
sbb
test
shrl
or
mov
rcll
xor
fnstcw
out
aam
out
lock
mov
loope
nop
jbe
or
pop
dec
rorl
enter
jmp
and
add
push
gs
hlt
mov
mov
push
jmp
mov
fs
cmp
jmp
cmpsb
arpl
xor
xor
dec
mov
imul
inc
push
popa
aad
lahf
arpl
pop
jae
mov
sub
jecxz
mov
test
test
pop
fwait
in
or
insl
fs
xchg
sub
test
daa
jle
inc
dec
xor
lods
push
addl
es
cli
popf
fcmovb
loopne
aad
test
lcall
adcb
lea
ja
cltd
or
test
clc
addr16
pop
stos
push
inc
mov
inc
xchg
add
fwait
bound
jbe
lcall
or
jb
hlt
xor
repz
mov
xchg
mov
sbb
imul
pop
jae
sbb
shrb
inc
dec
mov
mov
xor
sbb
cmp
int
movsl
hlt
aas
aad
pop
or
xchg
or
jl
sub
rcrb
cld
pop
mov
jo
xchg
mov
cmpsl
insl
push
faddl
outsb
lret
mov
bound
in
in
mov
mov
inc
fisubs
movsb
push
xlat
jp
std
inc
cmp
pop
scas
cmp
sbb
mov
push
mov
xchg
cli
sbb
mov
cmp
test
push
mov
fiaddl
pop
xchg
add
or
push
fimuls
inc
xor
shl
xor
push
mov
cld
sub
pop
and
lods
xor
notl
mov
cld
pushf
int3
or
lods
lret
xor
pop
jmp
mov
imul
mov
cmp
mov
scas
jmp
lods
pop
adc
pop
sbb
fwait
xchg
orb
bound
syscall
stos
sub
xchg
sbb
aas
sti
cmpsb
push
xchg
decl
mov
jo
testb
das
dec
sub
jb
sub
nop
jnp
xchg
cmp
sbb
test
lret
into
loopne
nop
mov
sbbb
rol
ss
mov
les
xlat
test
call
movsl
testl
xorl
xchg
push
add
pop
push
inc
dec
es
jo
out
inc
aad
mov
les
sbb
cmp
pop
fdivr
cmc
mov
out
or
push
cs
test
imul
mov
loopne
lods
std
iret
mov
dec
sti
lea
nop
cmp
dec
adc
cltd
lcall
push
add
movsb
fildl
jne
fsts
and
pop
push
cmp
mov
and
cmp
inc
out
scas
xor
mov
js
adc
fidivrs
fisttpl
mov
out
mov
push
xor
dec
adc
enter
stos
xor
and
xchg
bound
jne
mov
lds
cmpsl
iret
std
sub
clc
addb
jae
mov
and
inc
sbb
shl
data16
insb
xorl
mov
test
icebp
inc
mov
daa
addb
sub
cwtl
push
daa
push
in
test
adc
jecxz
cmp
mov
push
sti
popf
push
inc
out
push
stos
push
in
shrl
loope
cmp
push
push
loopne
mov
loop
nop
add
push
mov
mov
xor
xchg
mov
pushf
ds
das
xor
inc
int
pop
inc
mov
push
sbb
xchg
and
das
stos
cmp
jnp
outsb
xor
les
or
xor
lock
stos
stc
cmp
mov
sbb
mov
dec
mov
popf
and
inc
fldt
push
sub
rcrl
in
ror
dec
push
les
xor
lahf
sub
push
jmp
xlat
out
shrb
lds
dec
subl
mov
add
out
ret
imul
inc
repnz
lds
sub
mov
adc
inc
lea
rol
cmp
ljmp
iret
mov
dec
dec
add
and
inc
pop
ds
sti
fnstsw
scas
mov
push
test
push
cs
addr16
and
push
mov
cmp
push
in
js
cwtl
cmp
mov
sub
outsl
outsl
xlat
jg
fdecstp
pop
dec
jge
sbb
repz
das
dec
jge
call
adc
sub
add
pop
xchg
nop
or
xchg
or
or
mov
mov
inc
popf
push
sub
dec
pop
and
dec
lcall
add
loope
iret
jns
and
out
loope
cli
xor
push
mov
shrl
or
cmpsb
loope
daa
lret
or
daa
jge
mov
imul
cwtl
sub
or
adc
popl
mov
jbe
cmp
enter
mov
mov
and
adc
cmp
imulb
or
xor
enter
stos
push
ret
dec
lret
loope
adc
dec
faddl
pushf
in
shrb
xchg
pop
inc
scas
mov
dec
shll
lea
xchg
jb
test
gs
clc
cmp
ja
sar
jmp
in
xchg
cs
inc
mov
arpl
fiadds
mov
nop
add
mov
mov
mov
xor
shl
xor
mov
mov
mov
jmp
sti
test
sbbl
xabort
mov
aas
ja
jo
mov
mov
and
cmp
movsb
push
pop
jns
ret
jae
push
push
inc
jno
cmp
xor
out
daa
jo
clc
lcall
sbb
mov
cmp
sbb
push
je
mov
sti
iret
add
call
jmp
mov
sbb
int
imul
adc
or
adc
clc
outsb
cld
fistpll
mov
fs
bnd
mov
clc
and
jp
mov
out
jle
outsb
les
iret
lock
jno
and
xor
or
xor
cltd
pop
sbb
dec
mov
divl
mov
adc
mov
mov
stc
push
rcl
aaa
push
sub
or
mov
cmpsb
jno
roll
fildl
sub
mov
xchg
pop
adc
mul
xor
cmp
jno
xor
jg
loop
cltd
into
push
push
insb
mov
pop
hlt
pop
sti
mov
adc
sbb
sub
jecxz
inc
adc
dec
out
jo
jmp
out
jno
loopne
jne
ja
pop
pop
mov
push
mov
sbb
and
jp
xchg
pushf
mov
sub
es
jno
sbb
sbb
addl
lcall
sub
jnp
stos
mov
jmp
xor
out
lods
adc
push
out
pusha
mov
sub
aad
jge
pop
xor
pop
scas
xorb
sti
cmc
lods
inc
jl
out
xor
add
inc
and
jmp
cltd
mov
sub
inc
insb
scas
pushf
fadds
mov
cmp
dec
sub
movsb
sbb
dec
pop
insb
fisttps
sbb
in
push
out
jecxz
int
shl
lahf
das
add
jnp
lods
jns
incb
jecxz
pop
jg
je
cwtl
inc
xor
nop
mov
roll
in
mov
inc
pop
or
add
xchg
cltd
or
test
xchg
push
mov
pop
rorl
mov
ljmp
sbb
cmc
mov
inc
jne
cmp
mov
xlat
fidivl
jbe
ja
mov
xchg
std
fnstsw
ds
jnp
adc
cmp
jmp
dec
jae
jne
xchg
cmp
fildl
and
incl
cs
leave
sar
int3
rcll
pop
push
mov
test
jo
mov
push
in
jbe
inc
btc
jge
rcl
notb
cltd
cmp
push
leave
push
dec
leave
add
stc
call
je
addb
sbb
cmp
jb
bound
mov
xor
dec
adc
add
mov
cmp
or
xor
mov
cmpsb
sbb
pop
add
xchg
inc
and
xlat
or
jne
test
and
sub
lcall
popa
addr16
shl
stos
cmp
fisttps
out
aad
call
mov
dec
push
xchg
stc
push
cmp
and
cmpl
sbb
pop
pop
dec
mov
fsubs
cmp
in
add
call
jg
insl
adc
mov
ja
ret
pushl
sarl
sbb
pop
iret
fcoml
push
ss
int3
hlt
idivl
andb
mov
icebp
xchg
or
aas
and
inc
js
xchg
xchg
inc
jnp
ljmp
jb
inc
lret
call
mov
inc
test
stos
rorl
mov
andl
fldcw
pop
push
cmp
mov
xor
aaa
in
sbb
xchg
frstor
roll
sub
xchg
addr16
xlat
loop
lahf
aad
push
push
lret
data16
mov
out
ds
cmp
push
icebp
xlat
cwtl
sub
jb
popa
movl
xor
movsl
and
in
jo
fdivr
pop
mov
fs
mov
outsb
jo
inc
orl
iret
pusha
das
subb
jne
mov
cld
pop
mov
xlat
leave
xchg
cltd
sbb
and
xchg
hlt
imull
das
sub
sub
out
add
add
stos
loope
divl
and
ds
out
mov
mov
js
gs
mov
sub
cmpsl
xchg
sbb
cmp
jo
gs
scas
sbb
pop
pop
or
test
and
pop
and
movsl
mov
jecxz
mov
sbb
add
pop
add
xchg
in
xchg
dec
inc
stc
sub
jo
jecxz
pop
push
jle
pusha
sar
add
jb
xchg
jecxz
mov
inc
xlat
pop
sbb
enter
scas
stos
ret
idivl
testb
into
mov
adc
pop
xchg
aas
lret
pop
pop
and
int
or
xchg
dec
push
ds
sub
cmc
jmp
jae,pt
das
pusha
sbb
pop
cmp
stos
mov
xchg
or
test
ja
idiv
sub
cmpl
popl
sub
repnz
mov
int3
addr16
cmp
push
jl
out
xchg
movsl
fwait
push
daa
mov
add
int3
dec
sti
cltd
mov
mov
subb
mov
mov
out
insb
push
mov
xchg
imul
or
jp
push
mov
and
cmc
inc
ja
iret
lds
call
scas
pop
sbb
dec
adc
inc
nop
stc
les
adc
cmc
repz
jle
insl
jl
and
ror
or
cld
cmpsb
and
adc
dec
dec
jne
xchg
mov
in
mov
xor
mov
sbb
ss
dec
into
out
xchg
pusha
sbb
cmpsb
es
or
mov
sbb
shrl
pop
jne
push
dec
adc
repnz
xchg
aaa
lds
mov
stos
in
pop
mov
jae
mov
shlb
pushf
push
cmp
xor
pushl
shl
fsubrs
jno
xchg
jns
loopne
pop
push
xorb
sbb
jne
mov
dec
das
leave
mov
push
mov
mov
inc
fwait
mov
and
xchg
adc
or
enter
and
jb
subb
jge
pop
cs
aaa
cmp
repnz
int3
inc
push
les
cwtl
lret
cmp
pop
push
leave
jae
push
or
daa
rol
cmpsb
sbb
xlat
ds
test
testl
dec
mov
sub
and
mov
fwait
das
rolb
cmp
and
loopne
jle
mov
push
pop
mov
int
cmp
sub
pop
mov
dec
mov
arpl
dec
fs
inc
cmp
push
int3
shll
cmp
cmpsb
loopne
mov
adc
test
dec
cmc
add
mov
ret
push
pusha
outsb
pop
adc
rcrb
bound
shrb
shr
xchg
or
adc
inc
fiadds
inc
mov
pop
xor
lret
test
xchg
add
ror
loope
pop
icebp
stos
push
push
add
arpl
test
ljmp
inc
nop
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
jmp
nop
loope
pop
dec
gs
int
xlat
sub
clc
add
xchg
addr16
insb
pop
jle
lret
jl
add
pop
cld
mov
pop
movsl
dec
jb
lcall
xchg
mov
dec
pop
xchg
stos
xchg
adc
sub
lods
lret
add
rolb
and
or
std
and
xor
and
jnp
cmp
aam
pusha
in
mov
mov
ret
or
sub
loopne
vorps
adc
lret
imul
mov
std
push
push
lret
rclb
dec
mov
movsl
scas
rolb
pop
arpl
mov
sti
jecxz
iret
scas
outsl
jl
fwait
std
jne
fnsave
xchg
xchg
push
cwtl
mov
arpl
in
scas
inc
fimuls
cmpsl
jne
popf
push
or
dec
push
xchg
push
popf
add
icebp
loopne
or
cmp
nop
ficomps
aam
and
sub
outsl
push
fidivs
cs
fmull
mov
sarb
jno
repz
dec
xchg
push
inc
dec
and
mov
dec
shlb
mov
fidivl
add
xchg
sub
xor
jo
lcall
ljmp
pop
push
xchg
add
stos
andb
lods
notb
rolb
aad
hlt
lcall
or
dec
nop
insl
cltd
and
roll
cmp
mov
mov
inc
ds
dec
cmp
mov
push
pop
mov
out
gs
hlt
test
inc
adc
hlt
out
imul
xchg
data16
cmp
mov
shrb
shrb
into
int
and
sbb
dec
add
loop
cmp
pop
jne
mov
js
lods
pusha
push
add
mov
cmp
dec
fsubrs
inc
mov
int
lcall
cmpsb
sub
sub
into
jp
aas
enter
jg
setae
divb
jmp
lods
sub
or
inc
xor
movsl
ds
shr
lods
sub
cmc
call
dec
movsb
addr16
dec
cld
sub
out
incb
inc
mov
jg
inc
pop
loop
inc
scas
mov
pop
popa
and
jp
and
xchg
stc
and
pusha
cmpsb
cld
and
nop
sbb
mov
in
pop
cmp
dec
jo
or
sahf
shll
add
stos
in
push
sbb
inc
cmpsb
add
ds
rol
or
mov
stos
sub
outsb
fucompp
xchg
je
jb
aam
mov
mov
or
es
andb
and
mov
or
pop
aam
inc
cmp
mov
out
imul
xchg
sti
les
rolb
push
inc
pop
mov
add
fs
out
movb
nop
dec
mov
repnz
data16
addr16
lock
shll
addr16
add
pop
out
and
or
daa
xor
sbb
int
sub
fisubs
and
jmp
mov
filds
xor
sub
dec
into
daa
sub
push
test
fcomps
cmp
jmp
mov
xor
pushf
fwait
test
sahf
cmp
mov
xorb
mov
inc
fiaddl
adc
push
jl
cmp
xchg
inc
cmpsb
outsl
jno
xor
push
rorb
iret
push
insb
sahf
ds
pop
sti
or
jb
rorb
mov
xchg
fisttpll
sahf
adc
in
lods
inc
jno
shll
xchg
out
mov
clc
dec
add
ss
ds
js
dec
add
jne
jnp
rclb
orb
imul
and
daa
add
ret
xchg
nop
movb
stos
mov
aad
outsl
jmp
and
sub
inc
pusha
xchg
mov
es
mov
push
inc
lahf
addr16
pop
jo
outsb
ds
cld
xchg
and
in
mov
dec
xchg
adc
lock
jle
and
and
clc
inc
into
xchg
andb
repnz
pushf
adc
icebp
xchg
push
fsubrs
xchg
dec
sbb
mov
scas
push
sub
dec
and
dec
sbb
fistpll
add
mov
repz
adc
mov
popa
mov
jne
pop
xor
into
sbb
and
mov
cli
jp
fisubl
add
test
lcall
inc
ret
push
jae
into
lahf
pop
arpl
pop
xchg
sbb
mov
push
aas
lds
sbb
scas
pop
cmp
push
mov
cltd
xchg
mov
in
pop
es
cld
add
dec
mov
ret
icebp
pop
dec
mov
stos
loop
dec
dec
fsubrs
and
inc
mov
lds
xor
sub
ljmp
pop
lret
xlat
call
cmp
adc
loope
aam
pushf
xor
loopne
rol
pusha
fisttpl
scas
cmp
cmp
push
cmpsl
movsl
jnp
cmp
shrl
pop
sbb
mov
punpckhdq
xor
in
out
xchg
jp
je
and
int
jb
cmpsl
cmp
pop
in
jecxz
std
xchg
adc
sbb
lret
cld
add
sahf
jmp
dec
xor
adc
mov
rorb
or
hlt
add
xchg
mov
xchg
jo
ds
aad
test
fistps
inc
add
in
jnp
repnz
out
xor
adc
pop
into
jle
adc
dec
dec
mov
mov
int
inc
aam
mov
bswap
xor
inc
and
jmp
pop
adc
pop
dec
inc
shrb
lds
or
sbbb
enterw
pop
xchg
mov
cmp
fistl
stos
dec
push
sub
fdivs
je
adc
cmp
out
daa
jo
adc
test
andb
push
fcoms
cmp
dec
in
inc
xchg
pusha
stos
dec
sbb
jle
add
sarb
inc
adc
push
mov
js
test
jb
xacquire
dec
sbb
das
dec
sub
push
outsl
std
test
mull
inc
lahf
xor
xchg
rclb
xchg
in
decb
push
xor
xor
and
jns
inc
cmp
stos
pusha
adc
jge
xor
dec
mov
cmc
lcall
xor
shlb
loope
jno
mov
pxor
daa
pushf
outsb
jo
mov
sbb
xlat
push
sti
sbb
pop
cmp
adc
nop
aad
jae
stos
jbe
testl
dec
ret
mov
jge
sub
lea
cmp
add
xor
arpl
and
testb
push
or
inc
stos
imul
ja
dec
sbb
sub
inc
inc
xchg
int3
mov
aas
xchg
or
jmp
lods
je
push
ja
cmp
dec
lahf
sbb
xlat
inc
call
xchg
in
in
bound
dec
fsubrp
decl
pop
imul
xchg
pop
and
neg
xor
mov
testb
jecxz
mov
enter
xor
and
ljmp
dec
adc
test
ljmp
add
inc
adc
ljmp
or
mov
mov
mov
jmp
dec
loope
lret
sbb
or
mov
adc
maskmovq
mov
cmp
int
xchg
orb
sbb
push
sbb
and
pop
icebp
or
cmpl
ja
and
icebp
mov
aam
and
insl
sbb
push
push
imul
aas
bound
push
cld
leave
xchg
aam
movsb
sbb
mov
hlt
out
int3
iret
les
out
popf
loopnew
out
push
fldenv
in
stos
sub
mov
sub
inc
mov
aas
daa
lods
jnp
aam
test
xor
sub
or
inc
cltd
daa
mov
insl
jmp
mov
das
cmp
in
dec
jno
or
mov
data16
rol
cmpsb
add
sub
stc
shr
cmpb
popa
in
xchg
mov
xchg
ficomps
xchg
inc
pop
sarb
cmpl
jb
dec
push
adc
mov
stos
stos
shll
mov
fisubs
daa
ffreep
bound
stos
das
inc
jp
fnstsw
gs
or
pop
mov
fdivl
add
push
dec
sbbb
imul
es
jmp
mov
push
shl
jnp
jg
loope
xchg
insl
push
adc
push
jge
andl
or
add
pop
mov
pop
sub
in
addr16
rcrl
aas
inc
shrl
inc
or
cmpsl
xor
cmp
mov
lret
scas
sbbl
jno
stc
in
movsl
insl
push
sbb
adc
lahf
push
xchg
icebp
rcrl
xor
pop
mov
pop
sbb
push
lahf
or
ss
stc
xchg
test
cmpl
sahf
xor
dec
js
out
sbb
inc
lea
inc
cmp
cmp
push
push
cmp
dec
push
xlat
mov
mov
aam
gs
cltd
rcr
push
pop
cld
xchg
add
pop
out
popl
xchg
push
mov
scas
fs
mov
sbb
add
dec
popa
jo
insl
fisubrl
shlb
stc
rol
jb
jbe
sbb
outsb
cmp
sti
jo
sub
pop
jle
lods
in
sarl
adc
ljmp
movsb
cwtl
lods
sti
push
inc
jmp
ljmp
xchg
fmul
mov
push
cmp
xor
in
cmp
xor
lahf
mov
add
pop
in
enter
shll
insb
push
mov
jp
test
or
jno
aaa
ss
mov
mov
jb
xor
push
pop
ds
adc
pop
das
dec
stc
mov
movsl
fnstsw
pop
jg
or
rolb
or
cmp
data16
lea
sahf
mov
dec
lcall
addr16
daa
push
inc
call
xchg
adc
test
in
push
mov
add
shll
popa
bound
repz
adc
stc
adc
popa
repnz
pop
lds
cmp
mov
jecxz
mov
mov
arpl
jnp
dec
idivb
pushf
push
leave
lcall
mov
jp
dec
cmp
jae
mov
sarb
jae
dec
jge
or
mov
push
insb
push
lea
push
and
mov
mov
fimuls
lahf
cmp
in
repnz
fnstcw
add
xchg
decb
pop
or
adcl
sarl
add
icebp
lods
sbb
xor
test
test
call
cmp
pop
nop
in
and
jmp
fsts
cmc
fidivrs
pop
cmp
cmp
enter
sbb
mov
sbb
scas
or
sbb
dec
out
xchg
cmc
repnz
and
push
sub
pop
popa
mov
call
mov
aad
cmpsb
fisubrl
addl
or
inc
roll
out
fs
inc
hlt
and
cltd
into
cmp
push
mov
jg
fidivl
mov
and
mov
fistl
push
jl
dec
cmp
adc
sti
fdiv
dec
mov
ret
jnp
je
mov
sub
pop
mov
sub
adc
add
mov
mov
sbb
adc
icebp
jecxz
jl
cs
fucomi
repz
xchg
divb
and
adc
push
xor
sbb
in
xlat
fnop
test
adc
icebp
dec
push
inc
mov
cmp
repz
dec
sbb
cs
mov
and
add
mov
loope
rclb
push
xchg
daa
or
outsl
rcrl
and
or
je
push
push
lcall
or
aam
scas
mov
sub
lahf
movsb
xor
sub
fldl
mov
mov
mov
cmp
mov
sbb
cmc
xchg
mov
es
insl
xchg
aad
sub
xchg
sbb
push
imul
rcll
pushf
pusha
aaa
xchg
push
pushf
enter
cli
mov
lret
outsl
pop
or
int3
ljmp
inc
jb
cmp
scas
mov
cmp
lret
cmpsb
outsb
dec
or
sbb
add
pushf
cmp
lret
ficompl
adc
lds
popf
cld
sbb
loop
or
loope
fcomps
rcr
aam
push
lea
mov
adc
outsl
movsb
fucomi
or
rcrl
pop
insb
cmp
and
mov
loop
jno
mov
inc
int
push
loopne
push
inc
add
ljmp
sahf
nop
pushf
dec
bound
jne
jns
ret
fistps
cmp
fimuls
std
inc
mov
xor
test
movsb
int
push
push
insl
cwtl
sahf
cmp
das
xchg
pusha
cmp
dec
push
pop
les
pop
mov
int3
push
sbb
pop
push
outsl
or
jno
sub
pop
pop
loop
in
sarb
mov
fadds
rcr
jp
pop
cmp
cmp
sbb
cwtl
or
mov
fwait
popa
cmp
hlt
cmp
xchg
cmp
dec
mov
cltd
repnz
repz
pop
cmp
mov
cmp
jne
insl
xchg
fdivp
push
sbb
sub
scas
test
and
add
and
xchg
push
subl
mov
ljmp
hlt
push
les
orb
xchg
subl
aaa
cmp
in
sbb
or
cltd
jl
sbb
inc
loope
sbb
ret
aaa
scas
cmpsb
and
jb
fdivrp
std
xor
add
test
push
imul
xchg
mov
sub
fcompl
lods
xchg
cmp
test
cmp
and
in
fisubrs
jns
loopne
sar
push
lds
pop
inc
jmp
mov
ljmp
xor
test
mov
clc
loope
int
or
sbb
inc
cwtl
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
jmp
cltd
push
in
sub
jno
mov
adc
psrad
inc
mov
call
jecxz
iret
pop
ljmp
aaa
cmp
cmc
aaa
adc
aas
lret
xchg
ret
pop
xchg
xchg
outsl
imul
aaa
inc
add
aas
repz
cmp
push
arpl
in
jle
and
pushf
cwtl
mov
lret
mov
or
adc
call
pusha
pop
add
sub
jnp
push
faddl
mov
xor
and
mov
adc
pop
mov
fdivs
dec
ss
fsubs
cwtl
mov
xchg
jnp
push
idivl
dec
mov
lock
cli
lret
push
xorl
data16
in
push
or
in
inc
jecxz
ja
jo
cwtl
fs
test
xorl
adc
adc
dec
sbb
push
popl
ss
je
popa
dec
pop
repz
xchg
ljmp
add
adc
mov
sbb
or
sbb
sub
data16
jmp
mov
lock
push
imul
adc
popa
dec
pop
adc
xor
mov
das
lahf
out
rclb
inc
sahf
aas
ja
fiaddl
and
cmpsb
mov
je
jb
loopne
out
mov
xor
xor
sbb
cmp
mov
add
mov
cmp
shrl
dec
inc
mov
push
scas
mov
pop
pushf
push
pop
cwtl
in
fld
pop
fisubrs
jle
ljmp
and
adc
lcall
inc
mov
xor
lahf
jmp
fstpl
pop
ljmp
jp
inc
jmp
cmpsb
paddsb
gs
xchg
cmp
inc
mov
dec
cli
fiaddl
jns
push
adc
pop
arpl
scas
adc
pusha
dec
fists
ror
cmp
imul
xchg
sub
adc
outsb
xor
sub
in
rclb
push
mov
and
roll
fs
sbb
adc
js
lock
inc
negb
sub
adc
sbb
pop
leave
lods
and
xchg
xlat
cmp
xchg
lods
aas
xchg
or
aaa
xchg
fisubrs
andl
insb
test
add
jmp
pop
inc
mov
cmpsb
insl
jg
push
decb
mov
aam
vpcmpeqw
dec
mov
jbe
push
push
dec
std
lcall
sbb
dec
inc
inc
mov
or
sbb
fidivrl
mov
rcr
adc
mov
jge
mov
inc
clc
sti
and
mov
cld
mov
shrb
sub
mov
cmc
sbb
jo
out
mov
inc
xor
mov
js
popa
jns
in
pop
mov
xchg
test
sub
cmpsl
nop
js
arpl
jne
mov
mov
cmp
hlt
sti
andl
aas
or
jmp
pop
or
arpl
mov
icebp
pop
cmp
sbbb
mov
and
mov
push
hlt
nop
cmc
lods
outsl
xchg
fsubp
out
fcomi
minps
call
mov
test
fstl
push
movsb
and
int
xor
dec
wrmsr
jb
adc
jo
in
out
imul
leave
popf
stc
mov
inc
aad
jge
daa
xorl
adcb
pop
jle
pop
inc
pop
xor
adc
xchg
mov
mov
sub
js
add
les
or
clc
pop
inc
jge
sub
push
jecxz
jmp
arpl
jnp
faddp
sub
cs
push
mov
in
mov
pop
js
out
int
mov
push
shlb
sub
ret
and
fdivs
pusha
imul
sbb
pop
rorb
and
aaa
enter
sbb
cli
sbb
xor
sbb
mov
sub
xor
pop
jmp
push
lds
cmp
scas
cmc
or
int3
dec
mov
sbb
lret
push
aas
sarl
int3
fidivrl
leave
push
and
xchg
xor
dec
pop
mul
adc
pushf
sahf
sub
xlat
sbbb
loope
lods
inc
shlb
out
test
outsl
lods
jp
and
xchg
cmp
aaa
aam
movsb
shll
xlat
lods
pusha
js
pop
sti
movaps
shlb
repz
pop
sub
add
or
das
or
push
sub
pop
xor
jns
lea
std
push
in
add
jmp
mov
int
and
cmc
or
decb
jne
sub
mov
stos
lods
aaa
xchg
jne
shl
push
mov
out
sub
pop
lods
cmc
inc
dec
xlat
cltd
push
jge,pt
out
lea
push
lock
sbb
fwait
test
or
loop
gs
sbb
jno
ficomps
lret
aas
andb
and
inc
cld
jae
xchg
call
mov
cmp
and
adcl
cmp
cmp
movsl
pop
pop
in
jle
bound
out
daa
mov
adc
bound
mov
in
popf
pop
jb
and
mov
pop
lcall
push
divl
pop
js
sbb
and
jns
jl
jg
push
xor
dec
jmp
ret
shl
push
stos
sbb
ja
int3
lret
adc
sbbb
and
xchg
ss
scas
mov
xchg
movsb
test
pushf
ss
and
add
test
push
fucompp
orl
movsb
mov
push
daa
dec
xchg
mov
xchg
daa
mov
push
outsb
sub
imul
cs
push
pop
xorb
jnp
fisttps
add
repz
outsb
xor
mov
int
xor
mov
pop
ds
shl
rcrl
test
in
inc
mov
mov
pop
pop
mulb
mov
lods
ljmp
mov
lahf
xchg
aaa
aam
pop
in
daa
push
cmp
xchg
mov
iret
cwtl
push
mov
jge
mov
test
dec
sbb
xor
inc
sub
mov
xor
sbb
pop
xchg
test
pop
out
imul
pop
outsb
push
pop
shlb
movsl
lods
inc
cmpsb
int
cltd
add
adcl
adc
ret
dec
subl
push
pop
scas
sub
jl
and
test
sbb
mov
and
jmp
scas
cs
roll
cmp
jno
clc
push
repnz
push
lods
jae
jmp
mov
movsl
inc
scas
xchg
cmp
test
aad
inc
hlt
mov
scas
jmp
mov
ret
out
or
xchg
xchg
leave
clc
lcall
cmc
js
rcll
push
test
push
push
fcmovbe
daa
inc
inc
adc
jecxz
in
pop
jb,pt
jp
outsl
incb
xor
jno
cmpsl
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
jmp
push
mov
adc
xchg
mov
add
ja
shrl
aas
aam
dec
mov
or
into
sub
nop
push
sarl
icebp
xor
cmp
inc
loopne
cmp
sbb
lods
push
pop
lock
add
lahf
dec
jp
dec
sbb
adc
mov
push
or
lods
lret
mov
mov
das
repz
shrb
jo
in
or
cmp
dec
aad
lods
adc
iret
mov
icebp
xchg
adc
cs
or
sti
xor
in
sbb
lock
sbb
mov
pop
jge
or
inc
cmpl
fcomps
xchg
and
cld
add
xlat
pop
push
and
pop
mov
mov
out
add
mov
cltd
pop
pop
cmp
inc
div
loop
pop
mov
mov
int3
adc
das
mov
mov
inc
pop
add
mov
bound
mov
dec
xchg
stos
adc
add
roll
popa
push
mov
js
scas
aas
sub
das
add
mov
clc
lcall
dec
mov
fsts
sbb
cmp
add
hlt
decl
push
test
ja
sub
sub
xchg
and
mov
or
loope
add
or
sub
addr16
jno
mov
add
imulb
cmpsl
addl
sub
inc
mov
iret
jmp
jle
icebp
pop
jbe
shrb
imul
rolb
cmp
mov
enter
out
stos
shll
add
inc
xchg
xor
mov
xchg
das
lock
push
or
xor
sbb
cltd
sub
cmpsl
shlb
and
adc
pop
fs
sub
insl
sti
bound
cmc
sahf
xlat
ss
mov
in
mov
mov
ret
xor
addl
pop
cmpsb
mov
hlt
cmp
push
jae
or
scas
rorb
stos
and
fnstcw
loop
gs
jnp
testb
dec
push
clc
ret
jbe
movsl
adc
outsl
xor
add
cmpsb
rolb
jne
cli
fstpt
mov
inc
lret
dec
imul
ss
pop
dec
jb
cmp
and
jmp
and
movsb
cltd
mov
mov
popf
decb
push
jecxz
pop
adcl
ret
xchg
imulb
lods
pushf
dec
js
in
mov
mov
adc
iret
and
loop
insl
lea
pop
pop
pushf
mov
pop
push
iret
hlt
and
je
dec
shl
lret
inc
aaa
test
xor
icebp
xor
mov
inc
sbb
roll
aad
lods
insl
or
imul
jno
fwait
lods
cmp
test
lret
adc
xor
and
xchg
mov
inc
pop
out
or
mov
pop
cli
inc
mov
xchg
sbb
or
pop
aad
mov
ljmp
insb
mov
push
insl
jmp
mov
cmp
inc
jne
fs
sbb
xchg
jge
lock
aad
jae
test
loop
lea
mov
out
push
add
and
cmp
or
xchg
jle
stos
or
ret
mov
insb
mov
and
jno
imul
mov
loope
ss
xlat
pusha
mov
fs
out
and
dec
pusha
xchg
pop
cmc
scas
jg
add
rorl
imul
or
jbe
in
mov
mov
push
mov
int3
push
repz
movsb
frstor
pop
mov
push
in
movsb
or
and
cltd
inc
das
mov
stos
mov
fildl
xor
das
xlat
jmp
inc
lret
ret
push
cmp
dec
stos
xchg
add
outsb
in
xchg
adc
sarl
mov
mov
or
cmp
mov
inc
hlt
sub
ja
push
shlb
cmp
jge
lods
adc
pop
mov
sar
cmpsl
jne
test
icebp
inc
stos
mov
shrl
jecxz
loope
sbb
push
loope
pop
adc
inc
iret
jb
mov
lret
ja
cld
loop
and
and
aad
pop
pop
es
inc
pop
pop
imul
adc
xchg
lods
shl
insl
push
sbb
inc
push
push
ja
in
ret
jbe
adc
xchg
xchg
pop
push
push
loop
mov
adc
shl
pop
and
stos
pop
push
mov
jns
inc
popf
sub
sahf
addr16
ret
dec
mov
fsubrs
scas
push
or
cwtl
xor
in
cwtl
call
jne
cmc
fs
out
cmp
push
sbb
sub
sarb
ljmp
or
push
scas
repz
inc
popa
xchg
out
and
stc
das
popf
dec
xchg
repz
mov
sub
leave
filds
fdivrp
fdivrl
and
pop
jnp
mov
pop
call
fbstp
fstpl
into
scas
xchg
insb
or
into
adc
sub
add
mov
mov
add
movsl
testb
decl
fisubs
lcall
jge
xchg
xor
pop
into
mov
and
mov
lret
lcall
lret
gs
repnz
test
inc
push
pop
jo
jo
fimuls
or
push
test
repz
imul
pop
fisttps
iret
add
enter
and
sahf
cmp
inc
ds
in
insb
ret
xchg
test
dec
mov
test
add
xor
ds
push
mov
adc
dec
in
xor
inc
shlb
ss
cli
stc
jge
mov
jno
cmp
loopne
push
mov
lret
scas
push
jle
sub
pxor
in
sbb
xchg
fistl
cmp
icebp
pop
mov
pop
push
fucomip
stos
out
shlb
fistpll
lahf
inc
add
stos
mov
adc
jecxz
mov
or
dec
pop
adc
fidivrl
jnp
sbb
push
icebp
fs
inc
bound
mov
add
jne
jb
iret
aam
test
std
xor
and
aad
out
fwait
add
add
fdivrl
shr
inc
dec
jns
in
test
pop
inc
pop
sub
push
cmp
enter
je
loop
mov
pmaxsw
xchg
push
imul
stos
push
lret
sahf
dec
add
push
aas
test
push
xchg
insl
inc
imul
ljmp
stos
pusha
imul
add
cmp
loope
mov
andl
scas
adc
push
jge
add
lock
nop
inc
cmp
imul
fucomp
or
loope
mov
cwtl
dec
orl
mov
pushl
jp
shr
insb
cli
les
addl
jle
sbbb
test
lahf
jmp
and
lea
out
sysexit
push
fcompl
outsb
inc
ss
inc
movsb
pop
sbb
cmp
rcll
imul
sub
mov
xchg
repnz
std
cmp
fadds
add
cmp
adc
mov
test
xchg
repz
xchg
cli
scas
stc
mov
jecxz
test
mov
imul
jne
xor
push
push
xor
ljmp
pop
dec
and
mov
les
xchg
jmp
imul
or
inc
pop
mov
dec
jnp
subl
mov
inc
xor
xchg
fistl
xchg
sub
nop
cmpsl
lods
int3
mov
into
mov
mov
sbb
cmpsb
jbe
pop
add
insb
jecxz
cs
cmp
mov
and
inc
add
xchg
idivb
mov
repnz
mov
into
fs
lods
fdivs
ret
bound
in
lods
mov
sub
push
insl
push
cmp
repz
pop
lods
loop
push
or
fisubl
int3
arpl
adc
icebp
std
data16
bound
jae
jne
cmp
sbb
aas
iret
push
insl
test
cmp
jbe
sbb
sahf
movsl
mov
mov
dec
mov
call
in
repz
pop
les
xor
insb
stos
in
xchg
fdivl
mov
mov
in
adc
shlb
push
rcl
lret
fcoml
outsl
push
add
inc
dec
cld
mov
loop
popa
push
movsl
fwait
rorb
and
lock
leave
xchg
test
outsl
jnp
xor
mov
sbb
jne
xchg
pop
pop
pusha
out
xchg
jecxz
call
hlt
data16
nop
cs
and
test
jb
mov
lock
in
push
cmp
scas
arpl
in
pop
cmpl
jns
aad
inc
cvtpi2ps
lcall
ja
or
mov
fists
and
xor
repz
sub
push
mov
fmul
add
mov
cmp
jle
push
push
imul
jb
sbb
cmp
or
dec
sbb
inc
cmpsb
clc
pop
out
in
push
jno
cs
in
push
push
xor
enter
mov
sub
cs
cmp
sarl
ss
cwtl
out
pop
or
pop
in
mov
iret
aad
push
pop
stos
ds
fwait
cmp
in
inc
mov
push
pop
push
sbbb
cmp
aaa
sti
inc
je
add
les
outsl
lret
dec
xor
int3
fisubl
pop
jbe
push
movsl
adc
jb
adcl
push
or
cmc
xchg
and
jo
das
jmp
cmp
frstor
aas
fmull
lods
xor
into
cmp
push
adc
mov
jle
push
cmp
xor
iret
lods
sbb
das
pop
xchg
test
or
ljmp
clc
mov
js
mov
and
enter
inc
cmp
mov
xor
pushf
or
icebp
into
daa
sub
bound
enter
pusha
mov
push
test
inc
dec
std
out
dec
xor
and
mov
int3
jnp
out
mov
mov
push
adcb
pushf
adc
lock
rcrl
mov
and
jo
xchg
mov
ja
stos
in
insb
pushf
mov
adc
push
dec
mov
jge
add
lret
xor
jb
aaa
out
hlt
jae
jb
test
xor
fs
jmp
mov
ljmp
xor
enter
test
dec
fisubrl
xor
xchg
mov
iret
inc
sbb
and
push
push
sub
call
test
sub
insb
int
push
lods
pushf
xchg
loope
mov
lods
les
icebp
mov
xchg
in
xor
nop
cmp
pop
popa
xor
gs
push
mov
nop
es
dec
cmp
mov
sbb
addl
aas
movsl
aam
pop
xor
inc
sbb
inc
xchg
jg
pop
fldenv
addr16
sbb
cwtl
lock
adc
inc
jb
hlt
cmp
add
dec
xchg
or
test
jns
add
xchg
decl
mov
dec
or
lahf
loope
outsl
xor
lahf
cmp
dec
sbb
jl
not
aam
or
outsl
jle
jns,pn
lods
sarl
xchg
push
push
lock
mov
xchg
call
outsl
pop
movsl
sub
out
xchg
loopne
mov
or
movsl
sbb
out
fiaddl
outsb
xor
pop
scas
jne
mov
stc
sbb
push
and
nop
pop
mov
inc
mov
cltd
cmp
loop
inc
fs
lcall
sbb
cli
mov
adc
cmp
in
ds
cltd
mov
mov
sbb
sbb
add
add
dec
jl
out
pushf
jno
push
mov
xor
fstpl
sbb
loope
xor
sub
push
ret
dec
push
pop
mov
sub
push
mov
je
cmp
inc
movsl
cmp
dec
clc
mov
jge
lret
and
cmpsl
dec
cmpsb
popf
bound
inc
test
mov
adc
and
jns
popf
mov
pop
adc
jae
xchg
pop
mov
or
repnz
add
pop
lahf
mov
xchg
hlt
jo
incb
cmpsb
mov
inc
out
mov
aam
movsl
jecxz
pusha
adc
inc
ret
cld
dec
fisttpll
inc
and
sbb
mov
das
mov
fwait
testb
outsb
and
mov
ds
jno
cmp
jmp
mov
pushf
add
add
out
clc
push
push
dec
dec
imul
cwtl
mov
fimull
and
cmc
imull
xor
cmpsb
inc
and
cmpsl
imul
stos
test
loopne
push
in
fildll
inc
das
cmpsl
jne
sub
pop
mov
inc
stc
push
movsb
pop
mov
push
add
sbb
test
mov
mov
mov
sar
pop
int
lods
mov
daa
inc
push
inc
jo
cli
mov
push
lods
arpl
mov
cmp
inc
push
enter
aad
cmpsl
mov
jno
stc
repnz
dec
dec
cmpsb
mov
jle
mov
imul
adc
add
fbld
shrl
cli
sarl
or
xchg
in
dec
std
inc
xchg
jne
ret
sub
lea
fs
jge
in
push
mov
sbb
into
adc
pop
adc
xchg
sbb
xchg
mov
jns
aaa
outsl
cmp
je
sbb
fdivl
add
je
fstpl
dec
cmp
and
leave
sbb
cmp
stos
and
pop
mov
mov
outsb
arpl
in
and
fldcw
clc
mov
xchg
aas
ret
mov
push
lds
imul
mov
enter
das
popa
pop
jns
imul
repnz
mov
out
xchg
dec
pop
adc
push
xor
into
stos
lret
fiaddl
fldl
inc
pusha
leave
sahf
cmp
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
jmp
cmpsl
icebp
cmp
pop
dec
arpl
xor
adc
xchg
ret
lds
jl
inc
mov
xchg
mov
jge
rcrb
lret
pop
int3
mov
xchg
imul
cmp
cmp
inc
arpl
incl
lock
stos
add
push
ficompl
inc
push
add
fs
das
add
mov
lea
adc
outsb
cltd
jg
bound
aad
fidivrl
mov
mov
push
icebp
iret
adc
rcrb
ss
leave
and
sbb
out
jle
pop
sub
cmp
movsb
pushf
or
cmp
xchg
adc
ja
sbb
push
pop
pop
mov
pop
cmc
inc
ljmp
mov
jo
lods
loopne
mov
aam
jb
adc
and
clc
into
pop
in
push
push
mov
xor
nop
or
loop
lods
nop
adc
or
lret
mov
xchg
lcall
pop
add
mov
mov
icebp
mov
fs
push
jb
rcrb
pop
and
mov
push
int3
pop
cmp
dec
cmp
or
mov
test
push
outsl
xchg
adc
xlat
and
mov
cld
pop
xor
fs
rcll
sbb
repnz
insl
int3
adc
add
or
add
ds
insl
in
mov
out
mov
cmpsl
icebp
inc
add
mov
and
pop
aam
sahf
leave
movsb
pop
sub
cmpsb
insb
inc
scas
ret
push
js
inc
cli
xor
mov
cld
addr16
addr16
push
test
shrl
das
inc
in
fwait
daa
inc
out
mov
push
cld
out
fistpll
rorb
push
jb
cmp
mov
in
cmp
inc
xchg
add
stos
push
adc
jo
adc
inc
mov
xor
inc
add
sub
sub
mov
jno,pt
fs
inc
mov
push
aaa
push
add
das
xor
cmpsb
addr16
push
add
mov
cwtl
or
add
addr16
xor
js
jnp
outsb
jb
test
ljmp
fwait
jmp
mov
push
fsub
push
or
repz
mov
mov
daa
lret
mov
adcb
cmc
xor
mov
push
sub
loop
dec
clc
xor
cmp
and
les
pop
mov
mov
or
mov
push
push
cld
or
add
outsb
sub
sub
add
add
mov
jns
jge
adc
scas
rcrb
lds
xchg
cwtl
stos
mov
jo
rorl
dec
orb
fs
loop
enter
xor
fnstcw
fistl
arpl
dec
add
bound
psrlq
mov
cmp
pop
scas
int
mov
mov
cltd
sub
scas
xchg
out
dec
mov
movsb
fbld
cmp
shr
pop
out
push
ror
mov
cmp
sub
in
andb
jnp
mov
cwtl
daa
pop
out
dec
lds
int
pop
sbb
jecxz
pop
or
roll
ds
aas
sahf
popa
inc
out
sbb
les
das
ja
mov
arpl
cmpsl
mov
es
fcmovnbe
insb
jl
mov
cmpsl
into
add
mov
mov
add
push
push
mov
scas
sbb
and
int
mov
jecxz
or
pop
push
pop
cmp
inc
roll
fsub
fcmovnb
pop
subl
mov
dec
inc
int
cmc
lahf
je
cltd
fwait
pop
repnz
iret
mov
aam
cmp
pop
lods
sub
jle
push
and
fistpl
stc
out
xchg
jmp
movb
or
sbb
stc
iret
inc
ret
das
dec
fbld
lret
dec
pop
push
push
push
mov
and
dec
in
in
in
clc
mov
sub
dec
adc
dec
divl
sub
cs
adcb
add
repz
inc
nop
jecxz
push
sti
inc
in
test
jne
adc
cwtl
ds
cwtl
fdivrs
cmp
jno
mov
cmp
mov
mov
std
and
idivl
sub
clc
and
test
xor
jnp
add
add
nop
stos
fwait
pop
cmp
imul
cwtl
fstpl
lret
in
mov
jg
lods
and
stc
outsb
gs
mov
popa
rcrb
add
arpl
add
xor
pop
arpl
lods
enter
adc
loop
imul
mov
scas
psraw
jp
mov
xchg
mov
jns
jge
enter
ljmp
push
lock
fildll
mov
xchg
lcall
call
jge
jmp
or
xchg
push
inc
pop
in
rcr
lahf
cmp
cmpsl
mov
jmp
cmp
and
insb
cmpsl
ret
inc
cltd
sbb
mov
jle
cmp
sbb
pusha
xor
push
sbb
idivb
scas
cmc
les
ret
mov
incb
inc
pop
mov
fisubrl
or
cmpsb
popa
xor
jne
jl
dec
lods
push
pop
fisubs
loop
dec
fidivl
add
jp
lock
gs
mov
mov
cmpsl
pop
aad
stc
mov
fcoms
pop
mov
pop
pop
aam
mov
out
dec
mov
lds
or
and
imul
add
sbb
popf
push
fdivl
inc
add
adc
cmc
in
shll
lods
js
cltd
jle
sub
mov
pop
or
dec
or
inc
and
fs
sub
lret
add
lret
jae
pop
sarb
cld
hlt
add
lea
movsb
mov
les
stos
adc
pop
repz
insb
out
popf
out
repz
sub
into
pop
nop
in
jo
add
dec
adc
mov
js
or
subb
cmp
or
das
inc
hlt
inc
add
subl
mov
adc
pop
sahf
and
movsb
sbb
xor
push
sub
insb
cmpsl
push
lahf
cs
jne
loope
and
mov
xchg
subb
dec
mov
xchg
jl
ss
cmp
xlat
xchg
aaa
sbb
xor
jge
movswl
aam
xchg
aam
mov
dec
pop
pop
std
aaa
or
mov
push
es
mov
xor
add
inc
test
or
fcmovne
xor
pop
divb
repnz
lds
leave
andb
lahf
repz
push
loope
sbb
test
in
or
push
xor
jle
pop
aas
cli
out
jecxz
jae
sbb
ficompl
dec
lret
pop
dec
shl
mov
or
out
pop
fbld
push
sub
scas
sbb
test
mov
mov
jmp
ljmp
sub
and
adc
xchg
and
lock
pusha
or
repnz
mov
in
insb
mov
dec
mov
mov
fstpt
into
out
mov
repz
sub
stc
leave
sbb
pop
cmp
pop
add
jmp
mov
call
mov
call
imul
push
xchg
mov
loopne
test
jecxz
ja
addr16
mov
lahf
pop
xor
mov
pusha
ja
push
gs
out
inc
out
aaa
add
sbb
outsl
mov
mov
fidivs
pushf
pop
jae
ja
ss
pop
out
loope
fwait
inc
imul
fs
sub
mov
mov
inc
xchg
fldl
insl
call
insb
cmp
or
xor
jl
pop
pop
rclb
mov
fsubrl
lods
addr16
fists
sbb
popa
movsb
mov
lods
test
out
xchg
cli
mov
pop
add
push
shlb
and
fsub
movsl
js
imul
lret
xor
test
sub
or
cmp
dec
rolb
fs
push
ret
sbb
xor
pop
cld
addl
jle
out
push
outsl
lahf
and
cltd
out
mul
mov
stos
aad
jmp
adc
add
shlb
imull
pop
pop
notb
dec
jne
or
stc
add
pop
mov
scas
xchg
mov
mov
cli
aaa
cli
jnp
cmp
mull
cwtl
popa
mov
inc
and
jne
sahf
pop
add
mov
in
test
xchg
neg
data16
lock
leave
or
adc
repz
int
mov
push
or
mov
arpl
aad
outsl
xchg
movsb
stc
adc
xor
and
cmp
jno
cmpsb
addl
cltd
ret
push
shl
or
push
pop
rorl
movsl
insb
jp
lods
imul
mov
xor
push
dec
cmc
sbb
mov
lcall
repnz
js
cmp
aad
pcmpgtw
addb
aaa
and
adc
scas
or
nop
cltd
xchg
je
cmc
xlat
ret
adc
cli
in
imulb
sbb
addr16
imul
xchg
push
mov
adc
sbb
xor
push
adc
xchg
push
or
push
jmp
and
mov
sub
jp
or
sarl
lahf
testb
sti
dec
js
test
jbe
test
std
mov
loopne
cmc
adc
dec
xor
lahf
pop
mov
fdivr
inc
dec
lea
push
sub
out
cmp
mov
daa
mov
mov
or
or
and
and
popf
push
and
pop
ss
test
jns
rcrl
or
jle
test
shr
sti
and
mov
ficoml
add
out
movsb
cwtl
push
adc
and
cmc
inc
outsb
add
stos
xor
or
test
popa
mov
shrl
fwait
push
xchg
mov
jnp
jge
test
mov
mov
addr16
xchg
dec
adc
mov
sub
rol
pop
psrlq
cmp
push
jno
add
push
inc
xchg
lcall
in
sarb
mov
shl
push
mov
fisubs
into
in
mov
adc
push
dec
pop
mov
mov
add
and
pop
ja
mov
inc
pop
aas
push
call
cs
inc
dec
push
hlt
mov
lods
idivb
popf
outsl
lret
cmpsb
push
push
pop
into
neg
mov
pop
adc
and
mov
push
push
in
cmp
jl
sbb
inc
dec
out
aas
loop
sahf
xchg
push
ss
pop
das
mov
lret
pop
dec
jmp
mov
repnz
adc
ret
mov
fwait
ret
test
jno
test
test
lods
add
add
or
push
neg
shll
ja
dec
dec
js
sub
pop
shll
mov
pop
lahf
les
dec
adc
mov
addl
jle
cmpsl
mov
aas
pop
int
or
out
bound
sahf
inc
hlt
sub
fimull
nop
sub
gs
out
outsl
inc
gs
mov
xor
enter
xchg
imul
jb
add
xchg
data16
push
sbb
addr16
or
int3
or
scas
test
insb
mov
push
mov
bound
test
stos
bound
arpl
rcll
data16
adc
and
imul
add
mov
in
mov
mov
popa
sub
mov
xchg
adc
cmp
in
ljmp
mov
ficomps
lods
into
iret
or
arpl
lahf
and
movl
jb
bound
mov
fadds
out
adc
push
mov
ret
dec
dec
call
and
add
imul
jle
out
lret
movsl
jle
aam
jmp
pop
xlat
dec
mov
pop
dec
dec
jge
outsb
dec
inc
mov
movsl
shl
sbbb
bound
cmpsl
and
negb
loop
std
sub
ljmp
cmpsb
repnz
mov
xlat
decl
pop
stc
insl
jl
loop,pn
and
ds
int3
std
fcmovb
cmpsb
pop
cld
sbbl
xchg
aaa
test
cmc
and
xchg
fbld
add
mov
popf
jb
cmp
stos
stos
or
cli
in
push
cld
enter
jns
dec
mov
mov
dec
mov
inc
xchg
add
add
icebp
dec
dec
mov
int3
jg
lret
pop
push
and
add
mov
data16
pop
jns
adc
sti
mov
sarl
fidivs
cmpsb
das
rol
dec
xor
adc
jno
lret
adc
inc
xchg
sub
push
popa
mov
rorb
movsl
adc
mov
popf
in
fmull
imul
lret
mull
jle
jp
sbb
test
enter
jns
sbb
mov
adc
popa
mov
lret
or
xor
xor
shll
das
mov
push
into
clc
push
or
push
into
jecxz
and
cmp
sbb
and
dec
xchg
inc
sar
jge,pt
fcmovnb
mov
lds
push
or
hlt
enter
rcl
cmpsl
cli
cmpsl
mov
jae
push
rol
mov
push
ds
pop
dec
sbb
sub
cli
insb
sbb
mov
mov
mov
xor
lods
mov
les
test
inc
or
pushl
push
push
call
mov
jmp
push
rcrb
and
inc
outsb
xchg
stos
outsb
xchg
aas
mov
pxor
pusha
shll
jno
movsl
sbb
cmp
adc
jmp
pop
dec
js
sarb
das
mov
pop
rcrl
mov
sbb
mov
pop
push
lds
cmpb
adc
mov
pop
and
lea
mov
xchg
xchg
sarb
pop
or
pop
out
pop
dec
or
xorl
dec
loope
aas
mov
pop
mov
orb
push
inc
out
movsl
push
dec
mov
sahf
pop
inc
mov
push
popa
test
arpl
or
cwtl
xorl
cmpsb
mov
int
pop
and
pop
pop
lret
inc
pop
pop
xor
dec
sub
test
popa
sbb
ja
xlat
mov
mov
insl
and
cmp
shlb
add
mov
hlt
in
pop
cmp
adc
xchg
nop
push
out
call
int3
fucomp
mov
push
inc
dec
push
mov
call
cmpsb
jb
sti
xchg
cmovns
shll
mov
push
push
push
inc
mov
sti
jns
das
leave
out
inc
test
xchg
mov
mov
mov
je
jecxz
adc
nop
mov
sub
mov
or
sub
pop
xchg
sub
inc
imul
mov
adc
xchg
jl
rol
xor
xor
and
aam
add
jnp
movb
fs
and
clc
divl
leave
cli
adc
cmp
sub
es
jno
and
jb
int
ss
sub
mov
dec
xor
mov
enter
iret
das
sarb
jle
inc
sub
je
mov
adc
push
repz
cmp
les
ret
insl
mov
push
sgdtl
or
fstpt
push
call
xchg
jp
add
ret
inc
mov
pop
mov
push
mov
into
pop
out
sub
cmp
inc
loop
popa
add
mov
xor
rcrb
out
aas
adc
out
fs
fcoms
or
lds
push
xlat
fsts
cli
mov
and
mov
pop
xor
in
test
dec
je
fdivl
shrl
sub
mov
pop
out
adc
popa
cmpsl
jbe
int
out
addb
iret
and
cwtl
mov
push
sbb
enter
mov
sbb
xlat
outsl
stos
mov
mov
xor
lret
pop
in
push
jcxz
std
push
ljmp
add
fdivl
jo
bound
pop
pop
sbb
lea
push
cltd
nop
nop
sub
popf
test
push
js
jnp
aas
mov
test
jnp
jle
push
dec
inc
fdivl
push
inc
js
cltd
sbb
cmp
imul
and
or
jecxz
mov
fisubrl
pop
jge
leave
stc
lock
mov
cltd
xor
jbe
adc
fcmovnbe
leave
fildl
or
mov
xor
js
addl
mov
iret
cli
dec
leave
iret
popa
mov
lods
lcall
in
hlt
or
stos
inc
push
mov
in
leave
je,pn
sub
insl
aad
inc
cld
sbb
mov
xchg
cmp
push
mov
test
push
jl
ss
pushl
dec
ss
inc
mov
les
mov
push
xchg
sbb
cmc
dec
xchg
test
imul
inc
and
pop
mov
pop
mov
jno
jge
cli
mov
dec
lds
cmp
in
dec
jecxz
sub
lret
mov
mov
jp
popf
cmp
xchg
outsl
jne
scas
mov
adcl
cmc
daa
and
or
dec
mov
fstpt
mov
mov
mov
jp
gs
out
or
lret
mov
pop
jl
xchg
mov
aad
xchg
cltd
jmp
mov
mov
sbb
xor
imul
dec
or
daa
push
test
in
insl
fsubrl
lret
xlat
mov
xchg
xchg
arpl
scas
inc
and
fbstp
dec
inc
mov
cs
mull
xchg
push
push
dec
pop
adc
shrl
stc
mov
scas
movsl
push
push
gs
push
data16
sbb
xor
xor
out
sbb
mov
das
das
fldcw
ret
and
shrl
pop
xchg
mov
sub
mov
adc
jbe
incb
sbb
mov
sub
shlb
jb
iret
je
or
add
sub
inc
cmc
pop
cmpl
loop
iret
daa
mov
inc
in
push
out
pop
mov
mov
fisubs
mov
jne
cmp
push
jns
dec
movsl
aaa
imul
push
adc
add
xor
dec
fistl
aam
sbb
in
xchg
pop
or
test
test
stc
or
outsb
mov
pushf
jl
cmp
lods
out
xchg
mov
lcall
xor
mov
sub
test
notl
ljmp
push
cmc
mov
add
packssdw
lcall
pop
out
or
pop
out
push
xchg
xchg
sti
push
das
stos
xchg
gs
adc
decl
in
out
jnp
lret
adc
and
stc
add
push
adc
sbb
testb
add
icebp
mov
loopne
mov
xor
cmp
xchg
push
movsb
sub
fimull
inc
fbld
cmp
scas
stos
imul
or
push
sar
jae
xlat
dec
mov
mov
insb
in
and
jne
clc
shll
out
mov
sbb
mov
add
rorl
outsl
sti
fwait
jl
or
push
into
lcall
mov
rol
fcoml
rcrb
mov
loope
xor
pop
inc
outsl
push
inc
xchg
in
xchg
nop
mov
mov
cmp
mov
sahf
int
sub
repz
loop
xor
fsts
out
icebp
in
jae
adc
aas
dec
into
cmp
int3
lds
popf
jo
sub
addr16
xor
push
inc
adc
rclb
or
xchg
bound
mov
jo
add
ljmp
daa
pushf
aad
in
mov
int
pop
aaa
jp
das
lcall
xchg
xor
sub
pop
icebp
mov
lods
adc
or
sub
adc
daa
xchg
sub
fistpll
xchg
sbb
ss
repz
nop
shrl
sbb
dec
mov
and
sub
mov
xchg
xorl
jae
xlat
xchg
cwtl
sub
ficoms
sub
or
adc
xor
cmp
daa
int
sub
gs
mov
mov
xor
push
dec
rcrb
out
mov
insb
sbb
inc
mov
pop
out
leave
out
jmp
pop
iret
and
push
mov
lock
shrd
shr
shr
jmp
imul
scas
sbb
xor
or
push
mov
adc
xchg
cltd
pop
fsubrs
adc
xchg
mov
stc
enter
cltd
out
mov
addr16
iret
jge
loop
inc
imul
js
mov
repnz
inc
push
dec
or
cwtl
push
inc
lea
andl
rclb
out
sub
sbb
xchg
outsb
dec
xchg
sub
push
mov
xchg
lret
das
insl
mov
jecxz
call
jge
and
sub
movsl
mov
out
pop
mov
push
inc
int3
push
sbb
add
jbe
inc
cmp
stc
dec
rcrl
push
jb
stos
popf
mov
pop
lcall
cmc
cltd
mov
lods
out
jns
enter
les
rolb
fstpt
add
arpl
adc
cmp
jnp
ret
cli
lock
inc
fwait
outsl
rcr
xchg
bound
jbe,pn
jecxz
mov
inc
jns
pop
dec
pop
push
lahf
movsb
clc
std
test
sbb
push
mov
dec
push
jg
push
push
test
daa
xchg
out
nop
sbb
push
imul
fldt
push
push
cmovp
mov
dec
pop
aas
pop
sbb
ror
loop
stos
lcall
xchg
test
jae
fcomps
mov
insl
lcall
ret
icebp
or
pop
or
push
lahf
adc
les
or
xchg
jo
aad
sub
mov
stc
mov
jecxz
and
ret
xchg
pop
mulps
dec
xor
shl
mov
mov
or
scas
clc
imul
jg
mov
arpl
xor
out
pushf
jno
adc
fisubs
aas
ss
mov
inc
pop
into
cmpsl
pop
mov
fldenv
and
pop
in
xbegin
mov
xlat
testl
mov
fmull
dec
cmp
lcall
int
fmul
shlb
filds
pop
sub
int
cltd
lods
xchg
inc
lds
stc
add
jno
sbb
mov
dec
in
cmpb
ljmp
jno
and
push
sub
dec
jle
int3
in
or
push
sub
cmp
cli
addr16
fwait
add
sub
mov
add
test
xchg
ret
cmp
or
pushl
adc
outsl
mov
int3
jge
fbstp
aas
shlb
jmp
jae
stos
xor
pop
ret
popf
fmulp
daa
and
fcmovb
decl
popf
in
popa
or
scas
sub
ljmp
push
xchg
add
out
cwtl
ret
xchg
inc
sbb
mov
das
cwtl
pusha
imul
cmp
adc
jne
sub
and
addr16
pop
pushl
cli
cli
imul
mov
sub
lock
je
mov
mov
and
dec
xor
add
xchg
jmp
fwait
movsb
pop
clc
mov
xor
ffreep
and
sbb
enter
push
and
inc
inc
stc
leave
sarl
fwait
hlt
cmp
mov
outsl
push
xor
cmp
push
inc
add
enter
shll
jmp
pusha
cmp
xchg
push
movsl
xchg
adc
ja
pop
or
notl
jne
shr
insl
pop
into
popa
inc
insl
in
call
pop
fs
ret
ret
shl
fsubl
sbb
sbb
subb
cmp
imull
fsubrs
adc
mov
sub
daa
sub
outsl
push
mov
cmc
mov
in
scas
dec
xchg
jle
test
cmpl
data16
jmp
cli
aam
dec
xor
sar
insl
in
shrd
lea
dec
loope
aaa
enter
imul
push
mov
pop
popa
jmp
aam
jge
mulb
je
push
sbb
ret
les
movsl
adc
xor
mov
dec
push
das
pop
mov
xchg
cmp
xor
rorl
xor
fwait
movl
les
out
cltd
push
jno
mov
fucom
dec
mov
adc
icebp
push
pop
jns
push
in
add
pushf
lret
pop
xlat
popf
inc
in
cmp
idivl
les
mov
movsl
jne
movsl
test
adcl
incb
mov
lods
subb
call
inc
shr
test
gs
push
sub
xchg
lds
pop
or
je
jne
sbb
scas
cmp
jp
push
repnz
insb
pop
mov
mov
cmp
mov
mov
cmp
je
mov
outsl
push
fcomp
xor
jae
fisttpll
lock
incb
ret
das
fisubrl
cmp
insb
and
call
test
leave
pop
add
or
mov
pop
cli
cmp
test
stos
dec
pop
pop
fdivrl
cmp
sbb
cmc
and
inc
imul
int
or
mov
sub
xchg
outsl
or
cwtl
push
jnp
int3
cltd
sbb
ds
pop
inc
jo
sbb
and
repnz
sub
jecxz
mov
adc
ljmp
int
jns
fbstp
jb
int3
add
subl
mov
das
sub
scas
rorb
pop
inc
inc
add
fdivr
in
inc
jbe
cmp
lea
in
push
je
xor
shll
or
xor
out
decl
jbe
jle
in
jge
or
ss
inc
inc
and
outsl
in
inc
lret
mov
lods
sbb
add
outsl
mov
cli
mov
je
jg
jmp
and
lock
xchg
popa
dec
jns
int3
div
les
push
push
inc
xchg
pop
enter
pop
mov
repz
imul
pop
add
fwait
xchg
mov
push
sub
push
xor
add
push
mov
push
out
rcr
cltd
add
test
xchg
pop
and
je
lret
test
mov
gs
jecxz
fidivrl
setle
mov
sub
jg
inc
mov
mov
cmpsl
xlat
inc
iret
xchg
test
and
cmp
insl
sbb
push
and
decb
adc
movl
cld
pusha
and
push
aam
ret
mov
int3
outsl
xchg
in
mov
test
xchg
lea
sub
and
mov
inc
icebp
cmp
pop
fnsave
sbb
mov
add
add
xchg
in
pushf
adc
adc
jae
mov
xor
cld
pusha
dec
or
stc
xor
mov
lret
popa
out
cmp
xlat
xchg
les
cmp
jns
sbb
cmp
pop
in
or
aaa
testb
lret
and
jge
sahf
jg
bound
mov
pop
je
repnz
cs
je
or
and
roll
mov
stos
lret
subl
cmp
xchg
xchg
lock
sahf
mov
fs
int
dec
imul
and
les
shrb
mov
pop
pushf
xor
mov
ljmp
out
xor
mov
mov
mov
push
push
jmp
push
xchg
stos
les
ret
loop
in
push
lcall
aas
pop
or
mov
mov
pop
xchg
xor
setle
mov
jge
fimuls
adc
push
lahf
cmp
fiaddl
mul
shl
ja
xor
jecxz
lcall
popf
mov
mov
adcb
aaa
adc
add
and
jns
push
dec
cmp
xchg
mov
mov
aad
fldt
fldenv
cli
cltd
ret
in
imull
mov
je
mov
loopne
out
insb
ret
adc
fcmovnb
and
add
stos
inc
add
ds
or
xor
scas
mov
pop
lock
mov
jns
add
xchg
xchg
mov
test
jbe
pop
call
mov
xchg
in
cmpl
pop
imul
fdivl
mov
push
adc
pop
in
cltd
popa
xchg
pop
in
stc
pop
push
test
push
je
in
inc
hlt
xor
pop
cmpsb
addr16
add
mov
cmpl
mov
stos
jl
jb
dec
push
ds
mov
mov
int3
jp
push
int
cmp
and
xor
push
ret
dec
push
add
adc
mov
jne
les
or
xlat
cmp
lock
imul
imul
cld
dec
pop
bound
inc
cmp
pop
or
imul
jns
jns
out
fldcw
cmp
mov
pop
and
mov
jnp
mov
pop
imul
jo
sub
pop
mov
sub
xor
je
dec
xchg
arpl
mov
scas
imul
sbb
sahf
sbb
lahf
aaa
xchg
mov
jge
xchg
cmp
cli
insb
jl
push
mov
inc
leave
mov
cs
sbb
loope
xlat
repz
fdivl
mov
in
lret
push
sbb
loopne
insl
sarl
xor
dec
xchg
jno
mov
cltd
and
leave
enter
push
inc
dec
pop
xor
sub
cld
mov
xor
call
in
hlt
xor
sbb
adc
mov
sbb
andl
xor
adcl
inc
loopne
jp
repnz
dec
das
lea
sub
sbb
arpl
repnz
aam
mov
jle
sbb
cli
cmc
add
rorb
jmp
sbb
mov
int3
mov
fmul
addb
adc
adc
sbb
or
pop
imul
mov
xchg
mov
xchg
sbb
imul
dec
int3
add
pop
mov
mov
or
in
dec
insb
popl
add
sahf
pop
xor
enter
mov
mov
pushl
leave
add
xchg
sbb
mov
push
cmp
sahf
mov
imul
lahf
push
mov
pop
mov
xor
jg
cs
push
or
jne
cld
jae
or
leave
mov
jae
mull
jecxz
addr16
sbb
insb
pop
notl
lds
sar
aad
xor
cwtl
jl
mov
xchg
or
sarb
mov
push
aad
pop
lret
cwtl
mov
pop
dec
pop
test
lds
sub
stc
inc
popa
add
mov
pop
adc
or
mov
les
inc
sahf
xchg
mov
sbb
mov
add
mov
test
aaa
cmp
test
cwtl
or
js
jge
dec
pusha
lahf
stos
popf
or
and
adc
sbb
inc
shr
popa
cmp
add
jmp
nop
outsl
pop
addr16
mov
enter
xchg
or
push
jbe
mov
pop
leave
or
out
cli
xchg
push
mull
hlt
jne
pop
or
sbb
pop
out
repnz
push
enter
xor
filds
dec
pop
mov
je
sbb
cmp
fistpl
push
xchg
mov
pop
xchg
mov
out
imul
inc
test
mov
xchg
add
mov
vcvtss2si
fisubrs
xchg
xlat
imul
cld
imul
sbb
cs
mov
movb
add
fcomp
scas
movsb
lds
xor
js
sarb
mov
cmp
stos
jae
xchg
cmpsb
push
mov
cmp
clc
jg
jmp
dec
mov
cs
notl
xor
rclb
mov
xor
jp
add
pop
add
sub
and
aas
ja
or
adc
inc
insl
test
mov
imul
pusha
popf
xor
add
clc
leave
fucom
mov
lods
jg
and
stos
pop
addr16
sbb
addr16
cmpsl
sub
data16
push
or
mov
movsl
mov
adc
pop
pop
inc
mov
xchg
xchg
dec
sub
es
xchg
test
lods
shrb
repnz
and
loop
mov
inc
lods
imul
aad
mov
gs
inc
push
jnp
lret
push
in
lahf
adc
jae
push
test
push
sarb
jg
in
mov
imull
xchg
mov
rcrl
adc
cwtl
lret
xchg
or
fmull
jp
loop
lock
dec
insb
stos
rep
and
jo
jge
adc
cmp
mov
movsl
jmp
out
loope
pop
js
in
ret
movsb
daa
inc
das
stos
aam
cli
xchg
mov
inc
fadds
test
push
hlt
mov
fildll
adc
dec
jp
push
ss
xchg
leave
lea
jmp
cmp
add
ss
fiadds
iret
mov
lahf
and
pushf
xchg
std
lods
lock
push
ret
test
in
enter
mov
inc
dec
leave
fsubrs
xchg
fstps
cmc
aam
mov
mov
ret
jge
iret
lods
cmp
in
add
push
lods
hlt
das
cld
into
lea
std
pop
xchg
xchg
xor
addr16
sub
call
popa
insl
icebp
and
xchg
popa
pusha
pop
sbb
inc
ljmp
push
pusha
fistps
stos
test
ret
xchg
inc
es
and
aaa
mov
push
inc
push
cltd
jl
out
adc
pop
cli
cmp
push
inc
jb
stos
dec
stos
push
push
and
mov
icebp
clc
inc
arpl
les
aad
aam
test
mov
pop
adc
int3
fdivp
adc
add
stc
out
and
sarl
aad
fucomi
fdivp
std
enter
lods
or
pushf
mov
mov
mov
lret
mov
ljmp
ss
mov
sub
mov
cmovbe
out
out
enter
out
fbld
loope
cmp
add
pop
mov
xchg
lcall
bound
and
nop
lcall
cltd
cwtl
sbb
inc
xchg
dec
leave
push
add
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
jmp
pop
jge
lds
hlt
inc
lods
into
pop
xchg
enter
xchg
lret
pusha
lahf
mov
lea
add
test
orb
stos
aam
mov
sub
pusha
jp
adcl
clc
pop
lahf
xchg
hlt
sbb
xchg
dec
push
sti
add
std
pop
sbb
jnp
push
in
std
mov
inc
sbb
or
mov
mov
mov
scas
popf
sub
mov
inc
or
cmp
and
shl
inc
cli
sbb
arpl
les
sub
push
rcrb
dec
add
and
sub
push
ss
cld
mov
rdtsc
pop
lea
repnz
push
orb
lods
adc
insl
je
int3
clc
jecxz
xchg
xlat
nop
mov
add
mov
mov
adc
xor
mov
repnz
dec
call
lods
stos
xchg
call
jae
cmp
sahf
movsb
xchg
sahf
pop
mov
popf
call
mov
push
jl
jns
imul
push
iret
clc
in
inc
pop
sti
mov
mov
dec
lahf
mull
repnz
ljmp
gs
popf
fs
iret
out
pop
dec
ds
jp
inc
stos
sbb
mov
add
jne
jmp
mov
jns
aad
cmp
pop
or
inc
or
aad
lea
mov
mov
pop
aaa
fisttpl
rorl
bound
call
cmp
jecxz
dec
mov
push
fiaddl
cmp
insl
jae
movsl
jno
push
mov
and
push
pusha
in
hlt
and
or
js
inc
cmp
mov
and
xchg
lods
leave
cmp
sbb
jno
scas
xchg
pop
es
cmpsl
or
mov
sbb
push
add
jns
call
clc
mov
lcall
pop
in
cmpl
movsl
xchg
jp
mov
jo
cmp
cli
mov
mov
movsl
mov
es
push
int
lods
xchg
stos
jmp
scas
in
inc
pop
aas
xchg
out
or
and
pop
xor
and
fisubrs
pop
inc
adc
push
lret
mov
fs
sub
adc
lea
jbe
mov
out
int
cld
fsubl
cmp
cmpps
in
gs
lret
dec
mov
out
hlt
cwtl
lret
xchg
sub
mov
adc
sahf
icebp
ficoml
out
push
outsl
lcall
mov
dec
and
cmc
adc
mov
mov
push
add
mull
ss
sbb
out
into
hlt
mov
filds
xchg
lods
pop
xchg
mov
inc
push
mov
inc
add
jo
push
pop
jo
inc
fcmovnbe
pop
xchg
and
cwtl
xchg
stos
adc
call
jb
fisttpll
lcall
mov
cmp
scas
mov
daa
stos
inc
push
out
push
out
dec
cmpsb
sub
xchg
jnp
lret
es
push
adc
cwtl
push
dec
sbbb
je
gs
inc
push
mov
cwtl
fistpl
pop
in
dec
nop
insl
add
lahf
and
adc
cltd
mov
daa
out
jmp
sbb
pop
mov
or
push
roll
iret
sbb
call
imul
popa
xor
sahf
pushf
sub
clc
sahf
ja
jmp
aaa
and
test
leave
jmp
ja
loopne
adc
pop
mov
mov
cs
pushf
fdivrl
sti
mov
ja
cmpsl
ret
xor
imul
in
cmp
mov
dec
cmp
es
xlat
push
mov
movsl
mov
sbb
mov
mov
or
dec
and
arpl
dec
out
push
pusha
dec
lods
addr16
mov
loope
xor
shll
jb
in
mov
fs
ss
stos
daa
addl
gs
insb
mov
int3
das
mov
enter
icebp
popa
add
mov
pop
adc
lds
popa
push
pop
pop
fs
in
jbe
out
add
enter
insb
arpl
cmp
mov
xor
std
movsl
or
pushf
jae
pop
inc
cmp
pop
jg
loopne
push
xchg
pop
cmp
dec
xchg
std
das
push
int3
xlat
mov
jge
lret
pop
pop
xchg
stos
sti
push
mov
cmp
daa
mov
fstpl
xor
fdivp
add
xchg
sbb
and
ljmp
mov
call
jo
mov
shrb
push
mov
mov
or
sub
pop
mov
outsl
xchg
jno
cli
add
rolb
cli
cmp
sbb
sbb
test
jl
or
dec
sub
cmp
rcrl
dec
or
jmp
pop
push
jge
fmuls
mov
das
scas
shll
fadds
sbb
in
jo
lret
pop
stos
inc
jae
or
scas
push
push
fwait
push
inc
jnp
pop
cmpsb
push
mov
and
mov
or
aas
out
xchg
dec
test
jae
test
mov
out
mov
mov
xchg
add
jmp
arpl
faddl
adc
mov
fstl
or
pop
fldl
xor
or
and
mov
pop
xchg
fcomps
notb
mov
inc
cmp
cmp
mov
scas
inc
mov
sub
push
loopne
add
ss
xor
xchg
out
mov
or
xchg
addb
fsubr
lahf
push
lds
lods
ror
dec
inc
adcb
and
fdivl
insb
mov
clc
fdivr
lea
enter
lret
cmp
add
dec
pop
sbb
sbb
add
mov
push
pop
xor
in
adc
hlt
or
pop
jnp
xor
fucompp
mov
ret
or
dec
xchg
cmp
and
jmp
mov
subl
mov
ret
testb
fs
or
sbb
in
clc
pop
mov
inc
xchg
lods
cmp
jb
push
loopne
movsl
mov
in
sbb
inc
cmc
pop
daa
pop
xorb
add
sub
cmp
call
call
fcmovbe
push
adc
xchg
arpl
cmpb
jo
rcr
mov
daa
jb
mov
fistpl
clc
cs
mov
icebp
fldl
fistpl
inc
rcrb
mov
xchg
sbb
insb
mov
cmp
fisttpl
arpl
pop
ljmp
sub
fwait
popf
je
out
cs
testb
imul
rcrl
mov
xor
rclb
sub
add
push
lods
jno
jp
and
call
pusha
mov
add
inc
or
out
xchg
jmp
repnz
fsubrs
test
mov
loopne
xchg
in
pop
cli
inc
gs
and
lock
and
pop
sub
les
mov
ss
out
pop
cs
sbb
mov
jns
inc
lock
mov
test
mov
mov
lods
enter
add
fadds
add
and
add
loop
es
pop
js
cld
mov
xchg
shlb
push
pusha
ret
outsb
jns
fstps
xchg
ret
sub
push
pop
clc
push
aam
pop
push
clc
aaa
adcb
sub
xchg
jae
faddl
loope
jg
in
movl
sarb
movsb
fists
outsl
jo
das
or
outsb
sbb
jg
mov
jmp
sbb
pop
mov
cmp
es
dec
mov
lea
jg
mov
lret
jbe
loope
call
and
das
fisubl
sti
inc
cwtl
rclb
rcrb
arpl
sahf
sbb
mov
xorb
cwtl
xchg
xor
int
sbb
jg
lock
xchg
mov
add
xchg
cmpsb
je
outsl
sub
mov
inc
enter
stos
std
sub
insb
aad
pop
push
ret
aas
xchg
mov
repnz
fcoms
xlat
push
js
cli
jp
imul
pop
insb
repnz
mov
insb
push
xor
test
xchg
jg
out
test
cmp
sbb
fcmovb
cwtl
shrb
adc
push
dec
insb
dec
std
adc
negb
jne
stos
mov
vmread
negb
data16
pop
divl
imul
xchg
adc
xchg
roll
xlat
dec
cs
nop
icebp
xor
or
jl
fcmovnb
rcll
inc
mov
dec
lea
ja
and
xlat
pop
ret
inc
in
lret
ja
out
jne
bound
add
in
push
gs
push
or
in
lcall
add
subb
sahf
cltd
mov
ret
or
and
fistl
xorb
mov
jp
lcall
hlt
mov
daa
dec
daa
jb
dec
jmp
cs
mov
ss
stos
int
ret
jecxz
lds
es
shlb
fnsave
aaa
xchg
cmp
lcall
dec
insl
inc
arpl
pop
popf
mov
sahf
dec
scas
inc
inc
xor
mov
add
into
jo
rcl
inc
test
jno
outsl
movsb
xchg
fwait
mov
dec
inc
insl
push
sbb
mov
sbb
sub
outsb
jecxz
jg
or
mov
movsb
dec
fisttpll
test
jb
or
in
sahf
and
mov
icebp
xor
adc
xchg
cmp
iret
es
sub
mov
mov
js
stos
les
out
stc
mov
jmp
call
push
popf
push
add
roll
iret
push
mov
aad
aaa
cmc
mov
sbbb
inc
ds
xor
fs
out
movsb
mov
mov
sbb
into
lret
xor
xchg
in
xchg
orb
xchg
adc
inc
ljmp
adc
xchg
and
imul
sub
int3
stos
sti
jmp
jb
xor
cmpsl
outsb
in
xchg
add
rcl
jle
in
mov
xor
bound
data16
push
pop
ljmp
stos
fs
loop
add
std
dec
leave
jle
cmpsl
lret
mov
adc
xchg
in
adc
or
cmpsl
imul
movsb
mov
or
ja
hlt
in
xchg
mov
adc
push
jo
fisubl
arpl
and
fiadds
ret
js
into
jmp
xor
xchg
push
push
jp
xchg
clc
xchg
dec
je
repz
sarl
xor
ja
push
cwtl
or
inc
test
cmc
ret
pusha
push
dec
cmp
jle
sbbl
mov
mov
cli
out
pop
out
test
popa
pop
sbb
add
jns
data16
xchg
pusha
es
and
mov
dec
dec
inc
scas
loopne
mov
adc
mov
pop
js
pushf
cld
nop
cli
or
scas
push
inc
and
daa
cld
sbb
xor
iret
loop
fs
mov
pop
or
adc
stos
cwtl
jbe
movsl
leave
jmp
lock
jne
pop
jge
cmp
ds
lcall
adc
jae
push
dec
jno
dec
dec
push
test
sbb
ds
out
pop
aas
adc
xchg
shlb
inc
clc
sbb
or
outsl
test
dec
xchg
mov
out
push
shrl
and
sub
std
or
jbe
cmpsl
repz
push
jnp
lahf
jp
rol
pop
out
test
sub
jno
int3
aaa
sbb
cmp
cmc
fadds
xchg
arpl
ss
sbbl
sub
xchg
lea
sbb
pop
jb
jp
call
pop
lods
mov
cmp
jb
out
cld
xchg
int
je
push
cmpsl
xlat
ja
inc
add
pop
shlb
mov
sub
sub
mov
push
jns
fldt
imul
incl
cs
push
or
andb
dec
dec
mov
decl
mov
jo
sub
rcrl
andl
cli
dec
dec
shl
mov
dec
xchg
lods
push
mov
aam
inc
adc
xchg
cmp
jge
clc
cmp
addr16
iret
aas
xlat
pop
pushf
inc
cmp
mov
out
arpl
stos
cmp
or
sbb
jecxz
or
enter
js
int
mov
pop
imul
test
cltd
jae
xchg
sbb
cmc
call
das
sub
sbb
int
mov
loop
das
jo
into
bound
lret
clc
test
rcll
xadd
inc
iret
clc
fbstp
mov
lods
cmpsb
cmp
push
ficoms
mov
xchg
stc
gs
add
xchg
mov
stos
scas
insl
jnp
loopne
les
jge
or
xchg
pop
adc
les
or
ss
outsl
and
enter
xchg
js,pt
mov
outsl
xchg
mov
cli
mov
lds
mov
fisttpl
aaa
cmp
xchg
in
ret
fwait
mov
repnz
xchg
jge
xchg
lea
test
push
push
lret
imul
cmp
fs
xlat
aam
je
outsb
incb
mov
xchg
xchg
pop
jbe
lock
stc
mov
sub
xor
jo
int
lods
push
sub
aas
xchg
icebp
mov
hlt
adc
push
imul
lea
std
in
jne
scas
mov
cmp
out
push
enter
in
sti
jge
aas
pop
ret
rcrl
sbb
pop
enter
aas
stc
mov
fmuls
out
xchg
rep
ficoml
xor
fldt
xchg
xchg
mov
add
mov
sbb
adcb
incb
fstp
sbb
jb
in
das
inc
push
jbe
lahf
arpl
das
mov
push
add
dec
cmp
mov
aad
xor
loop
dec
mov
ret
lods
orb
cmp
out
mov
pop
cli
aad
inc
mov
mov
xor
shl
xor
or
jmp
aam
mov
xor
push
sub
dec
xlat
push
cpuid
push
push
pop
jp
add
leave
push
or
mov
in
xchg
xor
push
mov
xlat
fwait
cmp
hlt
jnp
jo
fadds
dec
mov
pop
je
pop
or
mov
stos
jne
adc
fidivs
mov
mov
test
sub
int
xor
lods
and
sub
outsl
ret
sbb
in
cmp
inc
jb
insl
xor
jbe
jbe
orb
mov
mov
mov
popa
test
inc
push
adc
jbe
cmp
mov
std
into
aas
fwait
adc
xchg
stos
dec
movsl
leave
pop
and
cmpsl
jo
imul
loop
fidivl
pusha
iret
xor
loopne
cmc
test
xchg
aad
and
cmpsb
scas
pushf
repz
ds
fidivs
lds
call
fcomi
aas
or
mov
sub
cmp
shlb
aam
in
or
int3
mov
lcall
mov
xchg
arpl
in
add
stos
popa
cwtl
adc
out
pop
arpl
in
pop
lock
cmp
mov
scas
stos
std
subl
push
nop
int3
iret
loope
or
xor
iret
fnstsw
cltd
jecxz
out
cmp
repz
mulb
imul
pop
fwait
jmp
movsl
xchg
jnp
cli
mov
mov
out
dec
sbb
and
shr
aaa
push
repnz
bound
add
inc
adc
mov
lds
lea
xor
scas
mul
mov
test
push
or
mov
inc
mov
cli
rorb
ja
rcll
inc
js
test
mov
sub
inc
leave
nop
pop
shrl
mov
cmp
pop
jp
sub
pop
jg
shr
sbb
pop
cmp
insl
xchg
iret
lds
sbb
mov
test
ss
test
xor
out
adc
xchg
add
mov
inc
lods
pushf
add
xor
sub
inc
fs
lds
and
aad
fidivrl
push
loop
adc
pop
xchg
mov
add
popf
ret
mov
daa
les
mov
rol
insb
and
sbb
jecxz
adc
cmp
inc
fistpll
inc
std
lahf
jl
movsl
loopne
repnz
stos
ljmp
lret
ret
xchg
inc
ss
mov
into
fisubs
push
mov
ret
jbe
icebp
enter
mov
lods
sub
cwtl
inc
data16
cmpsb
lds
inc
test
cwtl
rclb
sub
out
dec
ss
xchg
mov
in
daa
lods
mov
lock
out
das
das
gs
lds
scas
push
push
mov
xchg
mov
icebp
lock
ret
sbb
inc
jns
repnz
cs
pop
lods
jne
pop
cmp
pop
or
les
popf
dec
popa
and
xor
pop
inc
in
cmp
dec
lea
daa
scas
fstl
and
and
pop
dec
push
loope
push
addr16
aad
or
shr
pop
or
imul
or
enter
dec
sbb
inc
cli
pusha
fwait
lods
xchg
mov
sbb
movsl
add
pop
fidivl
and
and
loope
and
or
jp
mov
and
dec
mov
pop
jne
dec
cmp
pop
mov
mov
out
sub
fsubr
or
bound
xchg
fnstsw
rcr
notl
adc
xor
dec
push
hlt
out
jle
xchg
push
sub
cmp
cmp
les
or
imul
jne
inc
aas
aas
adc
hlt
xor
inc
pop
leave
dec
sub
jns
lea
mov
jae
sbb
or
outsl
pop
je
test
mov
int
push
xchg
cmc
repz
sub
hlt
fistl
or
sbb
nop
sub
daa
bound
popa
rol
aas
push
push
icebp
ret
bound
mov
jmp
mov
into
sahf
subb
push
mov
cmpsb
popf
or
mov
ds
loop
xlat
inc
jae
mov
subl
pop
or
push
pop
pusha
adc
inc
fcoms
push
xchg
stc
cmp
xlat
pop
mov
data16
scas
mov
int
jbe
sbb
lahf
dec
pop
nop
popf
in
fisubrs
rcrl
sbb
pop
push
movsb
xor
lock
pusha
loopne
adc
rclb
call
rorb
lcall
push
mov
inc
jecxz
add
fnstenv
iret
push
gs
cmpsb
movsl
clc
lret
bound
cmp
loop
rcll
cvtpi2ps
xchg
fistpll
xor
dec
lds
test
lds
push
stos
das
stc
ljmp
mov
xchg
cmp
add
icebp
lea
arpl
outsl
push
mov
jge,pn
and
jmp
pop
adc
dec
out
insb
cs
stos
cmp
mov
out
cmpsl
cli
cltd
jbe
jbe,pt
cmp
pop
and
mov
or
icebp
or
dec
pop
push
dec
fstpl
loop
cmp
insb
in
sub
add
mov
cmpsb
leave
addl
xor
adc
lds
and
fcmove
or
mov
mov
cmp
pusha
mov
leave
jmp
fxrstor
scas
add
or
hlt
push
xchg
adc
pop
pusha
enter
xor
sbb
in
popa
mov
fnsave
xor
inc
loope
push
sbb
cld
fwait
iret
sub
lahf
pushf
xchg
cmp
cmpsb
add
gs
fbstp
test
popa
dec
fs
xchg
sarb
adc
jnp
fsubrs
sub
sub
mov
jo
sbb
sbb
cmp
xchg
divl
add
and
jbe
sub
pop
aaa
int
ret
and
mov
scas
fisubs
jg
shlb
and
pop
inc
sub
push
call
lea
out
sbbb
mov
jp
mov
sbb
aad
jo
mov
add
pop
ljmp
mov
push
jmp
adc
pop
loop
rcl
mov
insb
sub
adc
adc
test
ljmp
outsb
mov
fdivrs
lret
cmpsb
sbb
test
cmp
popf
movsb
imul
jmp
adc
xchg
mov
sbb
outsb
xchg
xor
std
add
mov
cmp
add
adc
imul
outsb
jl
mov
aam
and
inc
push
push
add
jl
outsb
pop
repz
push
xchg
jle
sbb
loop
ror
mov
xchg
inc
jae
sub
bound
xchg
mov
paddw
xor
outsl
mov
loope
jecxz
rcr
add
fstpt
ds
sub
iret
xor
out
lcall
mov
clc
xchg
shrl
fsubr
mov
adcb
pop
movsl
stc
fwait
mov
jmp
or
pop
inc
or
and
jo
adc
xchg
cs
mov
inc
mov
jns
inc
sub
insb
or
sbb
in
xor
cmpsb
je
xchg
push
sub
jg
sbb
push
add
xor
loope
aam
bound
movsl
adc
in
cmpsl
lcall
cmc
lcall
nop
aaa
inc
push
mov
push
fs
adc
test
add
test
lds
push
and
sbb
mov
hlt
cmpsb
xchg
add
je
or
dec
stos
movsl
orb
adc
insb
loope
fwait
push
xchg
outsb
je
cmp
jg
loopne
outsl
enter
adc
mov
cmpsl
push
repz
hlt
inc
les
call
adc
scas
aaa
sub
inc
xor
and
in
pop
cmp
adc
fdivrl
push
outsb
mov
sub
movsb
popf
sbb
cmp
lret
and
dec
fstpl
and
sbb
bound
pop
inc
not
cwtl
jne
ffreep
nop
push
push
cmp
pop
int
pop
or
inc
test
gs
xor
push
in
lods
shr
and
fcmovnb
push
popl
or
ss
mov
std
pop
inc
in
xchg
mov
mov
ja
pop
std
jge
out
jmp
push
xchg
enter
jp
jmp
rclb
js
dec
je
jo
orb
xor
mov
cmp
je
aaa
push
and
mov
pop
cmp
cltd
cmc
mov
int3
jecxz
punpcklwd
xchg
push
inc
out
sbb
cmp
mov
arpl
mov
out
js
fwait
cmp
stos
fidivrs
orl
push
mov
outsb
mov
out
outsl
iret
mov
inc
add
jp
ja
cltd
inc
cmpsl
xchg
mov
sti
movsl
ret
sub
inc
repz
ffree
sbb
jp
mov
xchg
iret
clc
mov
cmpsl
push
cld
lret
adc
add
dec
jbe
cltd
test
test
sub
jnp
cmpsl
sbb
imull
dec
pop
inc
pusha
lret
int3
call
add
mov
or
loop
inc
test
push
pushf
pop
mov
jnp
fnstsw
je
stos
xchg
xchg
in
mov
push
mov
adc
jle
mov
dec
pop
and
inc
jp
cmpsl
dec
fldl
pop
push
js
rclb
dec
int
fldcw
mov
sub
and
or
sbb
stos
dec
mov
adc
jne
cmp
add
xlat
sbb
leave
sub
and
push
mov
into
inc
xor
push
pusha
mov
outsl
ret
inc
and
jecxz
sahf
push
cwtl
dec
dec
hlt
mov
les
sub
jns
jge
ds
pop
mov
push
dec
xor
repz
dec
inc
sar
rcl
aad
mov
sub
movsb
aas
push
sarl
sbb
int3
sub
adc
inc
nop
add
mov
xchg
cmp
ret
lods
xchg
push
test
xchg
pop
mov
pop
sbb
das
les
arpl
dec
jl
aas
mov
test
mov
out
mov
inc
cmp
push
sahf
js
popf
jmp
mov
loope
loop
es
lock
inc
jae
fnstsw
pop
addr16
pop
inc
aam
pop
jmp
mov
das
aad
add
jmp
repz
xlat
ret
movsb
inc
mov
jp
rcpps
int
divl
push
shlb
fmulp
dec
int3
dec
cmp
jnp
adc
mov
fadd
pop
push
xchg
enter
sbb
out
dec
push
or
out
sahf
movsb
dec
pop
sbb
push
xchg
scas
leave
loope
xor
or
dec
push
or
push
xchg
shrb
lret
ret
pushf
into
int3
daa
cmpsb
or
adc
aas
fxtract
xor
xchg
loope
adcb
jge
cmpsl
add
xor
sarb
fdivs
mov
jo
stos
mov
inc
inc
clc
fnstcw
pop
mov
out
pop
repz
mov
xor
mov
ret
loop
mov
ficoms
dec
stc
in
adc
sbb
inc
pop
jbe
pop
push
jne
xor
add
adcl
shl
adc
dec
fwait
jbe
cmp
sbb
negb
push
orb
testb
push
dec
pop
cmpsb
cmpsl
test
fcom
sbb
mov
dec
sub
inc
pop
rol
mov
jo
sbb
sbb
ret
std
shrb
jecxz
insb
pop
mov
adc
cmpsl
mov
ljmp
pop
in
lods
addr16
push
add
mov
aaa
imul
lret
and
jae
loop
mov
mov
sti
add
test
stos
xchg
leave
dec
rcrb
int3
data16
jmp
cltd
xor
stc
lock
lret
inc
repnz
sub
jne
dec
jo
inc
jnp
data16
fidivs
sbb
mov
inc
test
in
in
cmp
mov
lret
push
iret
mov
imul
jne
outsb
pop
cwtl
fneni(8087
lcall
es
sub
push
mov
or
mov
sub
adc
mov
test
les
xchg
daa
pop
push
ss
fs
lahf
cli
test
or
sbb
dec
push
out
fwait
xchg
cmp
mov
jne
add
scas
mov
inc
xchg
sub
cs
sahf
and
jmpw
cmpsb
enter
leave
cmp
and
outsl
mov
js
and
dec
jo
and
push
add
movsb
pop
test
shll
ficomps
jne
lds
cltd
xor
push
fimull
aaa
fdivrl
ds
roll
ja
ja
and
ret
inc
dec
scas
adc
ret
and
adc
jnp
xlat
inc
rcll
adc
stos
and
mov
jle
mov
pop
pop
div
mov
enter
xor
test
insb
adc
inc
fsts
into
enter
nop
fcoms
repnz
adc
nop
adc
adc
xor
clc
dec
cmp
shll
fs
out
push
sahf
sbbl
push
adc
fisttpl
sahf
scas
sbb
out
sarl
xor
xchg
stc
mov
cld
les
xor
stos
scas
inc
xchg
test
and
push
sub
push
leave
sub
cmc
enter
in
aas
cmp
jl
push
xchg
mov
sbb
sbb
out
dec
jbe
adc
imul
int3
push
and
loop
mull
sbb
insb
dec
lahf
xchg
addl
xorl
inc
jmp
jb
pop
lcall
cltd
aaa
fisubrs
daa
sub
insl
pop
aaa
xor
sbb
push
xlat
mov
cmc
xor
pop
add
nop
jo
insb
adc
cwtl
iret
vcvtss2sd
jmp
std
sti
sbb
sbb
mov
out
adc
xchg
fwait
pop
sub
arpl
stos
movsl
lods
sbb
int
ds
jns,pt
insb
pop
ret
push
cltd
or
inc
or
lret
arpl
mov
mov
cld
int3
arpl
xchg
cmp
mov
test
sub
addr16
push
push
rorb
cmp
push
arpl
aas
or
hlt
cli
jg
popa
add
xor
jnp
pop
mov
pop
dec
jo
mov
mov
jb
pop
mov
xchg
stos
imul
stos
push
loopne
imul
enter
jmp
sub
aad
fstpt
and
fldenv
daa
mov
jle
fadds
js
pop
std
pop
xchg
add
sarl
aas
cmc
ljmp
xchg
nop
fwait
pop
or
fildl
outsb
fidivrs
sub
inc
add
xchg
test
aam
sbb
pop
xchg
aas
and
mov
add
les
sub
repz
mov
jno
push
mov
ret
cmp
mov
jmp
mov
or
adc
inc
xor
xchg
mov
and
insl
enter
mov
jp
jb
xchg
mov
clc
fnstcw
push
pop
sbb
xchg
fistpl
mov
mov
jg
pop
fistpl
movsb
and
xchg
loopne
mov
adc
fstpt
dec
xchg
xor
and
not
shlb
add
das
mov
mov
stos
stos
insb
fwait
inc
jbe
imul
cmp
add
cmp
pop
push
adc
lods
inc
xor
jl
fsts
adc
rorl
add
mov
out
cmpsl
and
dec
ljmp
mov
repnz
fildl
inc
leave
pop
subb
jbe
add
mov
sti
pop
add
adc
push
rclb
sbb
cmp
or
std
xlat
scas
add
add
data16
mov
pop
rcrb
mov
and
mov
ja
adc
lock
lds
movsb
mov
inc
jmp
cmp
fwait
test
dec
inc
gs
and
mov
daa
mov
icebp
mov
mov
repnz
test
cmc
xor
ret
push
insl
repz
shll
sub
movsl
mov
mov
fiadds
in
xlat
dec
pop
movsb
into
adc
fisubrl
xor
push
stos
jbe
cs
push
movsl
adc
jle
test
push
mov
roll
repnz
sarl
div
dec
push
push
dec
ret
in
xor
ljmp
dec
sub
ret
xor
sub
and
test
mov
lahf
xchg
or
xchg
aad
femms
mov
js
negb
xchg
out
cmp
shl
cmp
dec
je
add
push
je
dec
jp
jb
outsl
sbb
mov
mov
loop
fists
aad
outsl
dec
xor
mov
add
arpl
dec
cs
aad
sbb
adc
pop
xor
mov
ss
sbb
sbb
mov
or
std
out
cltd
adc
sti
in
fucomp
dec
mov
mov
sbb
add
and
subb
cli
push
mov
nop
mov
jmp
xchg
sbb
push
push
test
xlat
int
xlat
insb
jno
repz
lea
jno
mov
js
out
insl
dec
mov
int
mov
push
xlat
push
dec
popf
aas
jge,pn
push
mov
icebp
mov
mov
clc
xchg
lahf
popf
arpl
ss
pop
push
xor
in
mov
cmp
mov
mov
xchg
dec
push
mov
mov
xor
inc
or
cmp
add
inc
repz
fstpl
sarl
push
mov
pop
jg
xor
add
movsl
add
pop
push
sbb
pop
stos
fcom
call
mov
adc
aad
push
outsb
adc
push
jge
adc
and
xlat
jns
or
mov
fwait
scas
mov
xchg
popa
adc
imul
mov
test
mov
jecxz
lahf
lods
movsb
sub
int
mov
mov
arpl
test
int3
and
and
xchg
mov
xor
jmp
dec
cmp
out
jmp
psrld
lret
add
inc
or
mov
jl
in
or
test
push
xchg
outsb
inc
addr16
jg
sub
dec
mov
ficomps
mov
pop
popa
aas
lods
vcmpsd
sbb
pushl
add
jnp
dec
xchg
pop
adc
daa
sub
xchg
ja
push
jbe
pop
push
sub
test
inc
jp
jbe
insb
jmp
call
adc
insb
dec
and
xchg
hlt
cmp
jno
mov
mov
test
rclb
cmp
sbb
sub
loop
cmc
xchg
iret
dec
cmp
pop
xchg
shll
shll
ds
imul
out
fiaddl
push
stos
xchg
mov
mov
aaa
orb
dec
daa
push
mov
push
xor
jno
in
lret
ret
fsubs
out
xchg
or
xor
add
das
cld
pop
fnstenv
ja
loop
dec
in
imul
lcall
fucomi
por
inc
dec
pusha
sbb
mov
ja
notb
es
mov
popa
mov
adc
lret
mov
add
hlt
hlt
xchg
push
adcb
push
insl
sub
gs
jmp
aas
mov
ficoms
pop
sti
test
sub
loopne
notl
idivl
cwtl
xchg
data16
mov
std
in
mov
mov
sahf
jle
iret
cli
fs
imul
inc
dec
sbb
jp
dec
dec
cld
test
je
dec
iret
mov
sub
cmpsb
fistpll
or
push
or
mov
mov
sub
jo
test
adc
pop
push
sbb
test
mov
sbb
pop
mov
pop
dec
cmp
movsb
xor
out
fisubrs
mov
in
or
in
inc
push
pop
shlb
fs
sahf
fcoms
std
test
push
lock
sbb
adc
inc
push
jmp
cmp
jle
je
push
mov
test
test
lods
jge
es
test
adc
lock
aad
cld
andb
and
out
outsl
push
jae
lods
cmp
pusha
cmp
nop
push
or
push
mov
inc
loop
xchg
jo
xor
jb
mov
sub
imul
mov
xor
pop
push
xchg
add
or
ss
call
push
fsub
push
jo
and
repnz
insb
add
jb
out
xchg
push
loop
test
sub
aam
sbb
pop
aam
rcrl
and
jge
pop
adc
inc
inc
cmc
leave
rol
sub
insl
imul
or
movsb
shrd
shr
mov
mov
xor
shl
jmp
xlat
mov
iret
or
push
mov
pusha
stc
mov
xchg
les
jbe
or
dec
sbb
pop
aam
loope
imul
clc
nop
push
loop
adc
enter
shl
mov
and
repnz
push
add
mov
rcrl
mov
jne
xchg
scas
in
jmp
sti
or
cld
testl
test
mov
leave
adc
test
je
out
scas
jg
dec
inc
je
rorl
and
xor
test
scas
test
es
xchg
xor
fwait
xchg
pusha
sti
stc
orb
enter
shll
inc
aaa
cmp
sub
sub
add
add
aad
jne
push
hlt
mov
fldenv
clc
shl
push
inc
push
dec
ljmp
sbb
push
fsubrl
sarl
pop
and
adc
imul
pop
outsb
aad
pop
cmp
pop
inc
int3
push
clc
mov
imul
push
jl
repnz
mov
xchg
cmp
fcmovb
dec
cmp
sub
and
push
pop
rorl
aas
insl
shlb
and
imul
cwtl
popa
frstor
or
cmpsb
cmp
push
out
outsl
mov
arpl
in
cmp
leave
insb
dec
fstpt
sbbl
or
sbbl
xor
jmp
lods
xchg
lock
cmp
add
daa
xor
cld
mov
stos
xchg
test
mov
mov
cmp
cmc
ds
popa
mov
in
xor
outsl
xor
inc
js
cmp
lcall
test
inc
inc
xchg
xor
shrb
sbb
xor
mov
cwtl
int
negb
mov
test
rclb
push
dec
enter
loop
test
in
mov
jmp
mov
jp
aad
inc
jb
inc
in
pop
sbb
push
int
cmp
jecxz
mov
dec
aas
or
push
les
mov
test
xchg
mov
int3
fidivl
loope
loop
imul
dec
aad
xor
mov
stos
movsb
ljmp
push
ret
mov
inc
cmp
cmpsl
sub
and
pusha
fisubs
lea
jmp
xchg
sbb
pop
in
subb
aam
repnz
push
imulb
dec
add
shll
fmull
pop
icebp
inc
aas
stc
sarb
cmp
pop
out
sub
sbb
jp
add
mov
or
loopne
int
mov
xor
pop
outsb
jne
dec
adc
int
cmp
nop
xor
popf
and
negl
pop
push
inc
mov
pop
mov
mov
aad
mov
xor
fsubrs
cli
add
test
inc
mov
fst
fidivrl
loope
inc
mov
xor
fsubrs
aam
sbb
ret
mull
divl
fwait
push
jo
fimuls
test
lock
adc
and
out
mov
nop
xchg
cltd
sbb
pop
lret
xchg
dec
pop
outsl
hlt
shlb
mov
loopne
sub
addr16
popf
loope
cmp
push
inc
fwait
cli
xor
jl
je
adc
mov
adc
jg
mov
push
bound
iret
jb
pop
xor
cld
ss
adc
int
out
or
cli
adc
loop
lods
or
cmp
imul
push
inc
add
dec
cmp
out
sbb
push
pop
scas
insb
pusha
and
mov
jb
pop
or
les
adc
outsb
and
push
cmp
sbb
shl
add
sub
add
dec
es
cmpsl
movsl
pop
popf
push
mov
adc
movsl
loop
push
jne
lods
mov
xchg
lods
cmp
push
out
xorl
lcall
sub
push
jno
xchg
jg
mov
out
loope
ss
daa
sahf
aas
test
mov
popf
pusha
adc
es
xchg
aad
fmul
xor
pop
pop
dec
loope
mulb
arpl
repz
push
mov
push
mov
inc
scas
outsl
or
pusha
fdivs
and
lret
stos
or
sub
enter
out
jbe
mov
sub
stos
mov
jecxz
push
test
out
fdivp
jg
hlt
clc
notl
sysexit
xlat
xor
std
mov
std
sti
mov
out
pop
mov
daa
xlat
push
lods
push
push
in
add
dec
mov
cwtl
or
inc
stos
jne
fstp
fistpl
lea
scas
add
inc
sbb
add
lret
leave
into
jb
push
in
sbb
mov
or
vpcmpgtd
int3
push
pop
xor
movsb
int3
das
adc
push
adc
sti
mov
pop
dec
and
or
inc
xor
adc
in
mov
push
std
push
xor
inc
dec
lds
mov
adc
sbb
lock
pushf
jl
cmp
lds
jae
push
out
setnp
and
in
mov
lock
jbe
jp
imul
mov
mov
lahf
push
es
out
push
adc
mov
rolb
cmpl
mov
leave
nop
roll
ret
mov
push
inc
jmp
sub
add
sub
mov
cmp
subl
xchg
add
pop
inc
mov
push
xor
pop
hlt
sbb
cmp
push
or
and
jecxz
addb
xchg
loop
outsl
push
and
jnp
addr16
jbe
dec
aam
test
insl
dec
imul
scas
inc
clc
cli
add
idivl
in
xor
dec
push
mov
jno
daa
lahf
outsl
jmp
je
push
and
cmpsl
pop
jo
or
test
xchg
inc
icebp
jne
inc
call
jns
scas
inc
inc
push
sub
pop
cmp
lret
in
test
stc
pop
xchg
movsb
leave
mov
stc
push
rorb
push
xchg
sbb
xor
cmp
inc
shl
stc
les
xchg
lret
sbb
gs
out
add
jg
dec
or
outsb
mov
xor
fdivs
mov
aad
mov
pusha
sbb
xchg
ss
jg
adc
call
jl
into
popf
in
mov
mov
inc
jns
aam
neg
and
test
into
scas
mov
adc
mov
add
inc
xchg
push
add
and
stos
out
rol
mov
arpl
push
xor
mov
jp
sbb
jns
sub
fcmovne
and
enter
incl
sti
mov
test
mov
xor
lret
mov
jle
pop
outsl
xchg
sub
xor
je
ret
inc
test
loope
dec
gs
sub
adc
lret
enter
into
aad
rorb
push
cmp
push
ficoml
pop
xchg
rolb
sub
sub
and
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
mov
outsb
arpl
xchg
and
xchg
inc
mov
xchg
adc
xchg
pop
mov
fs
lret
sbb
dec
adc
add
addr16
lahf
xlat
daa
cmpsl
sub
dec
hlt
cli
inc
sarb
mov
inc
xchg
mov
inc
inc
mov
scas
daa
cs
aad
mov
dec
scas
or
mov
popf
aaa
xchg
add
cmp
arpl
nop
cmp
push
and
xchg
arpl
adc
cmp
stos
xor
testl
hlt
xchg
cli
sub
adc
out
xchg
mov
fstl
xor
jnp
inc
lret
popf
xor
ljmp
lods
fisubrl
inc
stc
in
xor
sbb
and
push
cmp
adc
adc
leave
jae
adc
mov
addr16
cmp
cmp
or
mov
repnz
ss
pop
sbb
adc
mov
out
add
cld
movsb
push
jae
xchg
inc
and
aas
push
or
jnp
scas
add
jmp
test
push
xchg
sbb
sub
push
stc
sbb
out
mov
out
jae
adc
pop
sbb
fwait
pop
sub
jmp
push
test
mov
mov
test
leave
sub
jo
pushf
cmp
push
and
repz
xchg
push
fmuls
mov
je
adc
outsl
push
test
notb
add
cmp
xchg
loope
fs
add
jmp
outsl
mov
hlt
stos
cltd
lret
push
and
outsb
aam
adc
fmull
jl
mov
pop
aaa
push
rorb
and
es
lcall
jns
clc
jle
sub
cmpsl
sub
cmpsb
out
adc
lret
and
pushf
push
mov
ss
sub
and
pop
jl
int
mov
push
mov
clc
mov
lcall
push
mov
in
lcall
and
pop
outsl
and
imul
dec
cmpsb
jae
lret
adc
cmp
xchg
clc
jp
mov
inc
xlat
push
stos
sub
lea
pop
ja
call
into
mov
dec
and
or
adc
cltd
jno
ss
push
mov
bound
cmp
shrl
push
imul
mov
addr16
cmc
fdiv
push
lahf
xchg
outsb
arpl
adc
xchg
fs
dec
push
or
jecxz
and
rcll
fwait
in
lahf
testb
outsb
cmpsl
add
insb
dec
push
dec
dec
inc
push
in
mov
cmp
aam
cmp
inc
mov
or
sub
cmpl
sbb
jne
pop
out
push
in
add
lcall
or
xchg
fidivl
jp
nop
lea
ja
enter
add
xlat
xchg
pop
mov
add
xchg
pop
int3
in
add
push
ficompl
xchg
jno
jp,pt
or
xchg
or
enter
lcall
and
pop
inc
in
leave
imul
dec
out
push
pop
cmpsb
outsl
fcmovne
out
cmp
std
nop
xchg
xchg
mov
mov
pop
mov
mov
sub
or
mov
jge
cli
enter
jecxz
cmp
push
mov
mov
push
jns
stos
in
and
mov
cmp
add
sbb
fsts
es
pop
mov
fcoms
push
adc
or
sbb
orl
xor
sbb
int
loope
and
fadd
stos
mov
cmp
mov
pop
xlat
outsb
mov
je
hlt
adc
test
dec
stc
shrl
push
nop
xorl
mov
pop
incb
jno
inc
adc
pop
sub
mov
jge
out
daa
add
arpl
or
mov
clc
sahf
lcall
inc
int3
push
mov
fimull
imulb
icebp
mov
mov
into
sbb
popa
and
fstpt
sub
cmpsl
mov
enter
stos
jb
adc
cmp
jecxz
popl
cltd
push
aas
mov
call
stos
mov
pop
add
mov
out
fcmovnbe
es
add
sub
or
cli
jp
fbstp
addr16
das
xchg
mov
scas
jnp
xorb
mov
lahf
sbb
lds
pop
aas
ljmp
jnp
or
inc
rol
mov
lock
mov
adc
mov
mov
sub
xchg
adc
sbb
lods
and
adc
mov
aam
mov
or
rcll
scas
add
lods
push
ljmp
cmp
pop
add
daa
les
pop
popa
ss
or
imul
jecxz
into
sub
outsl
scas
mov
shlb
int3
jle
or
mov
lock
sahf
out
and
sbb
mov
ficoml
aad
pop
out
repz
es
mov
and
add
push
pusha
leave
mov
push
stos
cmp
dec
int3
pop
adc
jl
in
inc
push
cmp
setl
lods
cli
fcoml
cs
in
adc
icebp
daa
out
loopne
sub
mov
jl
mov
push
push
cmc
adc
pop
pop
inc
xchg
pusha
xor
mov
or
adc
nop
repz
ret
fldl
sbb
add
inc
enter
outsl
sub
fisttpl
and
inc
add
lret
mov
pop
xchg
loopne
std
testb
movsb
scas
lret
push
dec
push
sbb
negl
test
das
adc
pushl
sti
aam
stos
sbb
test
fdivs
les
and
jbe
addl
gs
insb
loope
xchg
movsb
test
mov
in
inc
arpl
in
cs
out
test
popa
mov
xchg
xchg
adc
negb
ret
mov
repnz
hlt
adc
movsb
rcr
pop
ja
inc
cld
movsl
shrb
pop
mov
or
outsb
jae
mov
cltd
push
or
imul
and
loopne
xor
push
add
test
mov
andb
mov
xchg
mov
sub
jb,pn
cmp
sahf
out
xor
daa
xchg
daa
add
xchg
sti
sbbb
mov
xor
xor
jp
and
mov
mov
sub
jp
pop
das
push
movsl
inc
orl
in
sub
push
stos
pop
add
mov
nop
das
jnp
inc
punpckhdq
je
push
aaa
aaa
sub
jmp
fcmovne
dec
push
dec
xor
mov
dec
pop
jo
aad
and
and
jge
sub
adc
hlt
std
shr
decl
xchg
sarl
jno
mov
into
xchg
xor
inc
pushf
mov
imul
mov
push
mov
and
push
lods
push
fadd
push
mov
out
aad
int
dec
lea
dec
std
inc
mov
cmp
inc
in
nop
imul
enter
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
jmp
fnsave
push
adc
adcb
adc
xchg
xchg
test
loop,pt
push
mov
les
into
ss
divb
shr
jns
jns
shld
fbld
adc
rcrl
add
stos
or
inc
cli
jg
ds
pushf
outsb
mov
or
addr16
pop
std
ljmp
aas
out
sub
das
das
dec
pop
shlb
fdivp
sbb
xchg
mov
push
or
adc
dec
dec
mov
push
pop
loop
or
mov
outsb
aam
xor
sahf
cmpsb
jle
push
pop
jae
sub
gs
or
inc
movl
clc
mulb
jo
mov
or
jo
sbb
mov
cmp
mov
fstps
inc
add
inc
div
or
jecxz
out
add
int3
mov
mov
jle
gs
jbe
mov
jmp
aaa
mov
sub
push
fdivr
mov
pop
jg
mov
xchg
sti
mov
ret
sahf
push
fsubr
sbb
insl
cld
and
sub
sbb
dec
in
pusha
jmp
sbb
lahf
das
pop
xchg
neg
into
lahf
int3
add
ret
mov
ljmp
mov
jle
fsts
aam
lret
or
mov
pushf
incl
divl
mov
pop
push
cmp
mov
xchg
jb
xchg
inc
dec
sbb
imul
movsl
popf
lds
mov
lock
aam
loop
push
fdivrl
and
in
into
adc
dec
loop
in
and
call
adc
push
jne
ds
dec
mov
imul
push
gs
lahf
data16
jl
arpl
andl
inc
pop
insb
cwtl
pop
add
xchg
xchg
js
pop
jbe
add
je
jne
inc
cli
lds
stos
pop
mov
test
test
shlb
ss
sub
test
xor
negl
movb
addl
je
jne
sub
les
subl
xor
fcoml
test
mov
cmpsl
and
popa
jb
mov
stc
lcall
mov
push
sbbl
push
mov
pop
push
outsl
je
icebp
shlb
xor
jno
jmp
js
dec
lds
rorb
xor
adc
in
mov
pop
daa
roll
outsl
jnp
xor
popa
sti
pop
popf
xchg
cwtl
adc
sub
fiadds
or
ret
aad
popf
fidivs
mov
jmp
dec
sub
sbb
inc
iret
fs
inc
push
cmpsb
lret
aas
mov
jbe
mov
loope
pushf
ror
jle,pt
push
add
jae
sbb
pop
ds
pop
or
loopne
das
idivl
xchg
cmpsb
pop
dec
lcall
or
mulb
push
jecxz
idivl
and
adc
loop
dec
and
les
xchg
add
fcoml
fstl
rorb
mov
ja
cmc
sbb
imul
into
pop
xor
pusha
adc
mov
lds
dec
jmp
insl
xchg
xchg
cmp
in
adc
inc
in
loope
out
test
mov
pop
mov
pop
pop
sub
sbb
xor
dec
mov
sub
pop
mov
xchg
sub
ss
mov
outsl
xor
ss
push
adc
lock
or
mov
scas
outsl
xor
sub
xchg
sub
mov
adc
push
out
mov
or
add
jl
push
cli
inc
arpl
popf
filds
mov
dec
aad
xchg
pop
ljmp
pop
mov
add
ljmp
and
mov
add
push
movsb
repz
xor
hlt
mov
lret
add
add
sub
and
aad
add
fisttpl
cmp
mov
mov
mov
mov
pop
inc
rorb
mov
adc
push
jge
sub
inc
ljmp
or
xor
fisubrl
mov
jl
xlat
jbe
mov
loope
iret
xchg
push
xchg
enter
mov
out
cmpsl
jb
mov
sbb
js
jl
andl
adc
lods
push
jns
addr16
add
jnp
mov
mov
shll
sti
pop
out
dec
jecxz
mov
testl
rorl
lcall
pushf
mov
jbe
popf
rorb
sub
add
inc
xchg
xor
addr16
mov
or
push
imulb
imul
push
xor
imul
lea
jb
xchg
ret
cmp
push
add
popa
hlt
pop
sub
fwait
imul
enter
sti
imul
pushf
cmc
xchg
sti
push
mov
adc
aas
mov
sbb
test
pop
movsb
loopne
inc
test
sub
bound
lcall
push
dec
ja
and
dec
lock
cli
fcoms
stos
test
push
jne
subb
js
movl
jae
std
xor
mov
mov
and
ss
push
nop
adc
aaa
aad
and
mov
sahf
jle
xchg
cld
xchg
sub
popa
int
push
jl
sbb
xchg
and
jle
je
insb
call
jb
mov
sbb
push
scas
push
dec
adc
cs
push
mov
pop
loopne
and
push
mov
cmp
and
repz
mov
push
loope,pn
cmp
shll
into
in
lret
or
test
cli
or
testb
pop
cwtl
push
scas
inc
es
pop
negb
sti
popf
negb
add
inc
aad
cltd
shll
cwtl
mov
and
fmull
mov
inc
lods
inc
xchg
loop
rolb
je
fdecstp
xchg
xor
in
cwtl
aas
fnsave
rcrl
fstl
mov
inc
and
test
pop
mov
jnp
add
shrl
sbb
in
mov
inc
sbb
imul
int3
adc
push
jge
lock
push
add
adcb
pop
jne
mov
add
fnsave
sub
xchg
nop
xlat
cltd
sbb
push
mov
shl
cmp
inc
shlb
repnz
dec
pop
aas
xchg
mov
stc
xchg
pop
cwtl
mov
cwtl
xor
mov
cmp
xlat
lods
cmp
xor
adc
out
mov
cmp
sub
push
jge
xor
mov
jne
std
jmp
push
and
imul
scas
cmp
cli
imul
jbe
filds
out
mov
dec
jb
inc
adc
inc
xchg
mov
scas
cmp
movsb
mov
cmp
cmpsl
xor
push
and
addr16
in
leave
lods
mov
popf
mov
mov
shl
shl
mov
mov
jmp
test
fcoms
push
cli
push
ja
inc
aaa
scas
or
or
outsl
dec
jnp
sub
pop
push
clc
repnz
hlt
es
out
xor
cmp
pop
rolb
push
push
sub
sbb
testb
scas
in
xor
pusha
or
loope
pop
sub
mov
mov
rorl
in
loopne
adc
xchg
inc
or
sub
inc
sub
pop
into
movsl
in
stos
imul
mov
cltd
test
jnp
int3
xchg
ss
pop
mov
inc
add
sbb
into
jmp
fiaddl
mov
shll
jmp
loop
dec
pusha
mov
push
imul
mov
mov
or
pop
ret
test
js
mov
adc
fwait
test
imul
stos
lea
xor
mov
push
xor
pop
xor
inc
mov
add
addb
push
adc
jl
shll
cwtl
mov
pop
jecxz
push
and
mov
inc
pop
dec
cmpsl
int3
push
nop
mov
cli
push
add
js
cmpsl
insb
bound
das
adc
std
mov
repnz
hlt
xchg
sarl
shlb
andl
or
mov
mov
adc
sub
or
push
push
mov
loopne
cmp
lret
jb
nop
data16
es
in
xlat
scas
mov
push
scas
andw
dec
xor
push
iret
sbb
mov
add
xchg
addr16
fwait
xchg
sysenter
orb
adc
push
jo
xchg
push
pop
fwait
and
ret
jbe
and
dec
stos
faddl
sti
mov
fidivrl
mov
adc
xchg
movsl
sbb
jae
adc
testl
pop
fs
incb
shlb
sbb
pushf
inc
sarb
dec
sti
iret
rcll
int3
xlat
cli
cmp
push
or
fcmovnb
add
inc
or
rcrb
out
sub
cli
outsb
scas
rcrb
stc
cmp
int
cmc
lahf
ret
gs
lcall
xchg
and
arpl
sbb
mulb
ret
mov
push
pushf
cmp
jp
or
leave
jbe
sbb
cld
pop
mov
mov
push
scas
cltd
jae
add
cmc
cmp
pop
mul
cltd
gs
xlat
aaa
rorl
ss
out
jae
mov
xor
out
inc
in
adc
sbb
in
or
ret
push
sub
jl
jge
inc
mov
fcomps
xor
imul
push
je
dec
icebp
mov
mov
xchg
data16
xchg
ret
mov
test
sbb
leave
out
fidivl
pop
pop
sub
sub
push
loop
leave
nop
inc
inc
and
pop
fstl
sub
pop
push
inc
insl
xor
lahf
test
xchg
inc
js
inc
repz
pop
mov
pushf
nop
les
aas
ret
xor
sarl
addb
adc
out
push
repnz
outsl
pushw
cmp
loop
stos
inc
inc
sti
ss
pusha
pop
xor
xchg
xchg
lds
mov
or
lcall
cmp
dec
push
pop
push
adc
lods
addr16
and
mov
test
cmp
xor
jnp
xchg
ljmp
inc
pushf
loopne
xchg
sub
pop
and
fcmove
push
xchg
rcl
aaa
imul
and
or
inc
outsl
xor
mov
cli
je
or
adcb
subb
jl
aas
test
mov
mov
jns
loope
shll
fdivrl
ret
ds
dec
scas
mov
mov
cmp
popa
jnp
fcmovnb
popf
cmpsl
jne
jge
mov
fidivs
les
xor
jbe
push
jle
sbb
push
ret
adc
adc
pop
cs
test
push
push
push
and
sbb
fistpll
xchg
dec
jnp
pop
icebp
sbb
adc
inc
mov
pop
xor
stos
cmpsb
cmp
add
inc
rcll
aas
pushf
xchg
jns
jno
xchg
add
insl
sub
mov
mov
addr16
enter
cmp
cmp
mov
int
mov
inc
aaa
nop
daa
jb
stos
test
sarl
stc
loopne
xchg
int
repz
mov
outsl
pop
mov
cmp
int3
lods
int
sub
stc
cwtl
lcall
addr16
clc
cmp
leave
inc
lods
insl
lods
lret
xor
bound
jl
mov
shll
int3
pushf
mov
adc
adc
push
push
pop
movsl
ret
adc
adcl
pop
ds
imul
pop
pushf
pop
mov
add
sub
pop
sub
jle
test
decb
inc
cltd
ffreep
sbb
call
pushf
fwait
or
out
push
cmc
out
xchg
sub
cmp
or
mov
cmc
mov
andl
ljmp
xorb
cmpl
or
orl
xchg
repz
out
lcall
bound
mov
cmp
pop
sahf
dec
and
jb
jmp
mov
sub
sub
adc
pop
pop
adc
cmp
push
and
and
sbb
xor
cld
dec
aam
outsb
aam
cmpsl
int
xchg
shr
cli
jp
scas
popa
imul
mov
mov
inc
pushf
nop
mov
inc
xchg
inc
fsubrs
nop
adc
lock
sbb
ds
in
cs
scas
add
insl
fisubrl
mov
roll
in
sbb
dec
xchg
inc
jne
lret
filds
sub
cmp
popa
xor
sbb
jne
jle
push
and
mov
jg
push
popf
xor
inc
mov
or
sub
popa
sbb
mov
scas
mov
mov
dec
ds
mov
in
mov
inc
inc
inc
cmpsl
mov
mov
jl
mov
andb
imul
sub
mov
jne
insb
lods
sbb
leave
popf
xchg
je
mov
push
pusha
mov
cmp
rcl
jle
out
add
aam
outsb
ss
cmpsl
xchg
jbe
mov
push
mov
dec
add
leave
dec
push
scas
inc
inc
add
pop
inc
sahf
xchg
add
out
mov
pop
fs
adcb
out
fmul
cmp
push
dec
sbb
sbb
add
movsb
lret
std
mov
xor
imul
ret
fmuls
loop
cmp
aad
or
gs
scas
sbb
jae
fs
xchg
cmp
mov
fcomip
mov
and
push
sub
and
mov
scas
imul
dec
enter
and
mov
jae
test
pop
add
xor
lret
dec
mov
add
adc
cs
push
push
add
sbb
aaa
roll
insb
aas
andl
and
mov
lcall
inc
adc
arpl
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
jmp
sti
icebp
lods
mov
outsb
fs
jl
mov
testl
pop
pushf
cli
outsl
loope
lods
xchg
push
cmp
out
aaa
in
sub
sbb
fbld
inc
adc
sbb
sub
jmp
mov
sub
lds
loope
sub
out
push
test
push
sub
lcall
stos
and
add
sahf
mov
sahf
lock
mov
or
add
je
sub
int3
lahf
in
rcrb
xor
inc
decb
daa
ror
test
gs
mov
sub
lods
fdivl
cmp
insb
and
dec
xchg
arpl
push
in
push
and
xor
xchg
xor
icebp
xchg
movsb
cwtl
mov
in
pop
adc
in
fnstsw
out
jmp
adc
lahf
sahf
imul
daa
jecxz
mov
adc
sahf
gs
cmc
push
les
aaa
xor
int3
lret
mov
sub
or
inc
int3
xchg
jge
pop
push
lahf
cmpsb
bound
repz
loop
enter
add
loop
incb
xor
xchg
loop
adc
fdivl
lea
mov
sbbb
xchg
add
lods
rolb
test
lock
pop
or
cmp
inc
push
leavew
stos
enter
lret
stc
push
enter
out
pop
incb
orb
call
lret
ja
std
lock
adc
add
mov
add
divb
in
fisubrl
ss
pop
movsl
or
cmpb
mov
cwtl
sub
pop
push
cmp
mov
jp
imul
dec
jg
xorl
dec
repnz
inc
lds
cli
cmp
sub
xor
adc
mov
iret
cli
in
bnd
fsub
sub
scas
and
data16
lret
addl
push
inc
sbb
mov
insb
jno
and
call
jl
in
js
int3
jnp
in
mov
imul
data16
cmp
test
xor
lods
pop
aaa
push
outsb
push
sbb
movsl
xchg
and
lret
dec
mov
inc
neg
movsl
sti
popf
cmpsl
inc
sbb
int3
and
mov
add
lcall
cmp
ja
xor
cmp
cltd
jp
xor
dec
std
dec
mov
mov
inc
pusha
mov
repnz
insb
loope
mov
add
xor
add
sbb
lret
add
arpl
rcrl
lea
clc
add
xor
dec
fisubrs
insb
imul
lds
lahf
out
test
xchg
fisubrl
xchg
fiadds
sub
sbb
fmul
dec
fistpl
ret
ret
rcrl
and
cwtl
mov
mov
add
mov
sub
js
xor
lods
inc
test
push
in
mov
scas
sbb
push
fcom
loop
mov
stc
add
call
push
subb
out
dec
mov
jg
inc
cli
rolb
sub
mov
mov
sub
lods
sub
cltd
dec
cmp
cltd
rolb
jbe
sub
cmp
lret
cwtl
push
jl
movsl
fstpl
nop
test
push
test
mov
not
fmul
icebp
cmpsb
dec
pushf
or
push
inc
dec
push
xlat
jns
adc
push
mov
stos
and
sbb
xchg
push
pop
cmp
stc
insl
mov
cs
adc
fwait
lods
mov
xchg
inc
and
cmp
iret
inc
push
inc
cmp
mov
jno
mov
into
push
je
rorl
scas
mov
ljmp
or
fsubrs
inc
fisttpl
int
xor
cld
aam
fsubrs
cli
mov
mov
loope
sahf
scas
cmp
notl
loopne
xor
lret
jg
inc
inc
fists
mov
rorb
add
jno
lock
jbe
outsl
jmp
mov
push
add
cmp
clc
jle
out
fwait
jge
mov
cmpb
andb
add
jge
cmp
dec
adc
popf
fs
clc
inc
add
adc
cmp
cmpsb
jg
lcall
in
or
sbb
js
mov
sbb
icebp
and
shlb
push
cld
fwait
push
or
and
aad
lret
jnp
or
js
out
ret
xor
loope
cs
movsl
fstpt
push
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
cmp
jae
xorl
shrd
movl
shr
ret
adcl
mov
xorl
xor
sbbl
and
shr
ret
xor
xor
ret
push
mov
sub
cmpl
movl
movl
jmp
movl
notl
jle
push
pushl
call
notl
andl
andl
sbbl
adcl
movl
mov
incl
mov
adcl
movl
mov
movb
sbbl
movb
and
movb
adc
movzbl
andl
mov
sbbl
sub
addl
imul
movzbl
andl
push
and
andl
mov
addl
movb
movb
andl
movb
movb
negl
mov
mov
negl
add
adcl
imul
sbbl
mov
subl
or
mov
sbbl
and
mov
movl
cmp
ja
mov
mov
mov
or
mov
mov
cmpl
not
mov
movl
jmp
movl
jb
push
push
call
dec
xor
add
mov
add
adc
xorl
xor
adc
mov
movzwl
addl
movzwl
sbbl
shr
notl
or
sub
mov
subl
movb
notl
movb
mov
orl
mov
xor
xorl
add
mov
or
mov
movzbl
and
cltd
sub
push
cmpl
not
mov
mov
jmp
mov
je
push
push
call
mov
adc
xor
neg
adcl
or
adc
pop
adcl
idiv
mov
addl
movb
addl
movb
xorl
mov
mov
negl
add
movzbl
movzbl
xorl
cltd
idiv
mov
movl
cmp
jae
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
idiv
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
sub
mov
and
xor
imul
mov
push
sub
push
movl
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
or
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
and
add
cmp
jb
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
lea
add
movl
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
xor
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
add
imul
xor
mov
div
mov
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
xor
and
mov
add
mov
add
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
push
push
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
push
mov
mov
mov
push
push
push
call
push
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
or
xor
mov
xor
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
and
push
cmpl
not
mov
not
not
jmp
movl
movzbl
je
push
pushl
pushl
push
pushl
call
sbb
adc
adc
subl
add
push
adc
mov
cmpl
mov
mov
mov
jmp
mov
movl
ja
pushl
push
pushl
push
push
call
sbb
adc
xor
mov
mov
sub
sub
xor
add
xor
or
sub
and
addl
addl
sbb
mov
shrd
shr
cmpl
movl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
push
pushl
call
addl
orl
mov
add
mov
add
mov
sub
mov
mov
mov
sub
sub
xor
movzwl
sbb
mov
neg
xor
sub
or
mov
mov
cmpl
mov
mov
jmp
movl
mov
jne
call
dec
addl
xor
sub
inc
andl
mov
mov
adc
shl
cmpl
mov
movl
movl
jmp
mov
movzbl
jle
push
push
call
mov
adc
mov
adc
xor
inc
xor
or
or
notl
add
movl
mov
cmpl
mov
mov
jmp
mov
jge
pushl
push
pushl
pushl
call
andl
or
add
xor
or
shrd
xor
orl
shr
xorl
mov
and
mov
xor
or
or
cmpl
not
mov
mov
movzwl
jmp
mov
mov
jge
push
pushl
call
movzwl
xor
movzwl
add
mov
or
mov
sub
or
addl
xor
mov
mov
and
mov
mov
mov
mov
inc
mov
xor
mov
mov
mov
mov
cmpl
mov
movl
jmp
movl
movl
jle
pushl
push
pushl
pushl
call
not
andl
adc
sub
xor
shl
orl
xor
and
shld
sub
shl
inc
mov
orl
xor
addl
xor
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
cmpl
movl
movl
not
jmp
mov
movzwl
jle
push
push
push
call
sub
adc
or
sbb
adcl
sbbl
xor
adc
mov
mov
mov
and
mov
xor
shld
sbbl
shl
xor
xor
cmp
jne
movl
cmp
movl
je
cmpl
mov
movl
jmp
mov
not
jbe
push
pushl
push
pushl
call
xor
mov
add
adc
and
adc
not
mov
subl
mov
cmpl
mov
movl
mov
jmp
movl
mov
jg
pushl
pushl
pushl
call
subl
mov
add
add
add
xor
shl
mov
xorl
xor
shr
adcl
or
mov
mov
movzwl
or
mov
mov
and
mov
mov
cmpl
movl
movl
movl
jmp
movl
ja
pushl
push
call
and
orl
subl
subl
sbbl
orl
and
cmpl
movl
movl
movl
movl
jmp
movl
je
push
call
sbbl
movl
orl
andl
adcl
sbbl
xor
subl
cmpl
movl
movl
movl
jmp
movl
not
jb
pushl
pushl
call
xorl
sbb
add
addl
subl
movl
and
push
pop
sbbl
sub
mov
add
mov
lea
mov
mov
mov
sub
and
mov
xor
or
xor
mov
xorl
xor
xorl
shr
subl
shl
or
add
mov
cmpl
movl
mov
jmp
mov
mov
jae
push
call
add
sbb
or
movl
and
movl
add
mov
mov
andl
xor
movl
shr
shl
adcl
or
push
orl
lea
adcl
push
adcl
lea
push
call
cmpl
mov
movl
jmp
movzbl
jbe
push
push
pushl
pushl
pushl
pushl
call
orl
addl
movzwl
sub
mov
movzwl
sub
mov
sub
movl
sub
mov
mov
subl
xor
subl
shr
mov
xor
shl
or
cmpl
mov
mov
mov
jmp
movl
mov
jne
call
add
sub
add
adcl
mov
or
movzwl
or
push
lea
sub
push
or
mov
mov
sbb
shrd
sbb
shr
xor
add
xor
or
sub
imul
mov
notl
mov
xor
addl
xor
or
xorl
lea
adcl
push
adcl
shl
subl
call
mov
mov
xor
shl
cmpl
mov
movl
mov
jmp
movl
jne
push
push
call
xorl
xorl
add
orl
and
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
push
call
mov
mov
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
mov
rol
mov
xor
mov
cmp
je
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
sub
mov
adcl
or
movl
mov
jne
sub
mov
adcl
mul
ret
push
mul
cmpl
movzbl
movl
push
pop
jmp
mov
mov
je
push
push
pushl
push
push
push
pushl
call
mov
sbb
mov
not
movzwl
adc
mov
mov
add
mov
xorl
sbb
mov
adc
mov
xorl
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
push
mov
and
sub
push
push
push
mov
pushl
call
test
jg
movl
movl
movl
push
dec
movl
mov
xor
mov
andl
push
notl
push
orl
push
call
sbbl
push
andl
push
and
and
push
subl
push
andl
call
cmpl
mov
movzwl
notl
movl
jmp
movl
jbe
push
push
pushl
call
neg
subl
dec
sbb
subl
xor
or
mov
sub
or
mov
mov
xor
or
cmpl
movl
not
jmp
mov
jg
push
push
push
push
call
sbbl
xor
movzwl
and
orl
xor
mov
xor
or
mov
movl
movl
or
movl
sbb
movl
mov
xor
or
sub
add
movl
cmpl
mov
mov
jmp
mov
movl
jg
push
push
pushl
call
dec
xor
inc
adc
movl
xor
add
xor
mov
adcl
movl
cmpl
mov
movl
jmp
mov
mov
jg
push
push
call
addl
mov
sbb
sbbl
mov
mov
sub
xor
xor
or
xor
movl
or
sub
sbb
mov
cmpl
mov
movl
notl
jmp
mov
movzbl
jg
pushl
call
xor
movzbl
sub
mov
mov
sub
add
adc
xor
mov
mov
mov
andl
or
or
mov
or
mov
sub
mov
mov
sbb
or
mov
xor
subl
xor
addl
and
adcl
and
cmp
movl
jne
cmp
jne
movl
decl
movl
xor
movl
adc
movl
xor
or
mov
sub
xor
movl
mov
and
mov
sub
adc
mov
orl
imul
subl
and
notl
imul
mov
xorl
pushl
or
imul
adc
xor
mov
movl
div
mov
xor
cmpl
movl
notl
mov
jmp
movl
je
pushl
pushl
push
pushl
push
call
sbb
adcl
or
mov
sbb
mov
add
cmpl
mov
mov
not
jmp
mov
jb
pushl
push
call
neg
mov
mov
xor
sbb
sub
sbb
cmpl
movzwl
mov
movl
jmp
movl
jl
pushl
call
sbb
or
addl
and
sub
xor
add
mov
sub
dec
mov
sbbl
sub
addl
or
xor
adcl
pushl
pushl
addl
call
addl
pushl
call
movl
cmpl
mov
movl
not
jmp
mov
mov
jge
pushl
call
and
add
adc
xor
movl
adc
movl
xorl
movl
movl
movl
mov
mov
xor
mov
mov
subl
add
movzwl
mov
adc
add
mov
add
adc
and
xorl
mov
orl
and
mov
movl
movl
subl
movl
orl
movl
dec
cmp
jne
and
movl
mov
xorl
mov
subl
movl
mov
subl
call
andl
lea
mov
cmpl
movl
movzbl
jmp
movl
jb
push
call
adc
sub
and
andl
mov
xor
add
sub
imul
xor
sub
lea
mov
sub
mov
sbb
mov
add
mov
mov
decl
xor
shl
and
shr
movl
or
mov
or
mov
mov
cmpl
movl
mov
movl
jmp
mov
movl
ja
pushl
push
push
pushl
call
and
xorl
add
sub
addl
addl
cmpl
not
mov
jmp
not
jae
push
call
adc
subl
and
xor
add
adc
and
mov
cmpl
not
mov
jmp
movl
movl
jbe
push
pushl
call
or
andl
and
sub
adc
mov
and
mov
mov
mov
shrd
shr
and
mov
not
mov
movl
xor
xor
andl
or
mov
sbb
mov
mov
orl
push
addl
pushl
subl
lea
andl
push
adcl
shl
orl
call
addl
lea
addl
push
mov
mov
sbbl
lea
orl
push
mov
orl
lea
adcl
mov
adcl
mov
mov
push
call
subl
push
andl
push
pushl
xorl
call
andl
mov
or
mov
and
mov
cmpl
mov
movl
mov
jmp
mov
jg
push
pushl
push
push
push
call
sbb
xor
or
mov
adc
xor
adc
mov
shr
not
shl
or
sub
mov
or
xor
mov
notl
lea
xor
mov
lea
movzbl
or
mov
cmpl
mov
movl
movl
mov
jmp
movl
movl
je
push
call
or
add
mov
or
mov
xor
inc
add
not
mov
mov
and
mov
cmpl
mov
mov
mov
jmp
movl
mov
jne
push
call
or
sbb
addl
add
orl
mov
mov
sub
sub
movzwl
sbb
mov
and
sub
cmpl
movzbl
mov
movl
jmp
movl
jae
pushl
call
add
add
movzbl
add
add
movl
add
lea
andl
xor
cmpl
mov
mov
movl
jmp
mov
jg
push
pushl
pushl
push
push
call
or
adc
xor
mov
adc
mov
movl
movl
movl
cmpl
movl
not
jmp
movl
not
jle
push
call
subl
not
orl
and
and
mov
or
mov
movl
mov
mov
add
mov
not
mov
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
shr
or
or
mov
mov
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
cmpl
movl
mov
movl
jmp
movl
jbe
push
pushl
push
pushl
push
call
adcl
sbb
sub
adc
mov
xor
mov
mov
mov
sub
xor
movl
cmpl
mov
movl
movl
jmp
mov
mov
jle
push
push
pushl
pushl
call
adcl
notl
dec
add
subl
sbb
not
sub
movl
mov
subl
mov
xor
xor
mov
xor
and
adc
mov
sub
xor
or
and
cmpl
mov
mov
not
jmp
mov
jl
push
push
call
inc
xorl
and
sub
sub
add
mov
add
xor
mov
or
movl
movl
mov
sbb
mov
add
xor
sub
adcl
mov
or
imul
adc
xor
mov
or
div
subl
sub
and
mov
movl
sub
movl
movl
mov
mov
adc
movl
cmpl
movl
mov
movzbl
jmp
mov
movzbl
jg
pushl
push
push
push
call
or
xor
or
or
mov
sub
add
inc
movl
mov
sbb
mov
movl
movl
mov
xor
mov
imul
adc
add
xorl
and
adc
sub
cmpl
mov
movl
mov
mov
jmp
mov
je
pushl
push
push
call
add
adc
neg
and
not
mov
sub
or
mov
mov
cmpl
mov
movl
mov
movl
jmp
movl
jne
push
pushl
push
call
inc
or
dec
sub
adc
adc
or
add
sub
add
mov
xor
adcl
div
not
mov
sub
and
mov
add
addl
mov
cmpl
mov
mov
mov
jmp
mov
mov
jle
push
push
call
add
add
sbbl
subl
xorl
movl
movl
dec
movl
cmpl
movzbl
mov
jmp
mov
jne
pushl
pushl
pushl
push
call
sbb
orl
movzwl
adc
add
mov
mov
add
mov
xor
add
mov
andl
xor
movl
div
add
and
mov
or
cmpl
movl
mov
jmp
movl
movl
jg
push
push
push
call
mov
sbb
mov
add
mov
movzbl
sub
subl
decl
adc
cmpl
not
mov
jmp
mov
movl
jae
push
push
push
push
call
xor
sbbl
mov
sbb
mov
inc
mov
mov
sub
sbbl
cmpl
mov
movl
mov
jmp
mov
movl
jg
pushl
call
mov
adc
mov
mov
adc
mov
mov
xor
xor
or
mov
sub
sub
adcl
mov
and
movl
movl
movl
and
movl
mov
sub
mov
orl
xor
sbb
xor
push
xor
pop
orl
div
mov
andl
xor
div
mov
or
sub
xor
mov
xor
movl
inc
mov
movzwl
sbb
mov
xor
div
imul
adcl
xor
xor
sub
imul
xor
dec
mov
adc
movl
cmpl
movzwl
movl
mov
jmp
movl
mov
jg
pushl
push
pushl
pushl
pushl
pushl
push
push
pushl
push
push
call
adc
xor
mov
adc
mov
mov
xor
mov
xor
or
xor
mov
movzwl
sub
or
or
movl
movl
cmpl
mov
movl
movzwl
jmp
mov
movl
ja
pushl
call
xor
dec
adc
movzbl
sbb
xorl
mov
and
mov
xor
subl
div
mov
sub
mov
orl
imul
xor
add
mov
or
add
xor
sbb
mov
sub
movzbl
or
mov
mov
movl
cmpl
notl
mov
mov
mov
jmp
notl
mov
jg
pushl
call
notl
adc
adc
sbb
movl
mov
or
and
notl
and
or
xor
cmpl
mov
mov
movl
jmp
movzwl
mov
jg
pushl
push
pushl
call
movzbl
sbb
add
negl
sub
dec
mov
movl
movl
movl
cmpl
movl
movl
movl
mov
jmp
mov
jb
pushl
push
push
call
mov
and
mov
neg
xor
andl
and
movl
mov
xor
and
add
xor
add
or
or
cmpl
notl
movl
mov
movl
jmp
movl
jle
push
pushl
push
push
pushl
pushl
pushl
push
call
adc
mov
add
or
sub
neg
sbb
sub
mov
inc
movl
cmpl
mov
movl
mov
jmp
mov
mov
jne
push
pushl
call
decl
decl
sbbl
and
movl
movl
movl
xor
mov
shr
xorl
sub
cmpl
movl
mov
mov
mov
jmp
mov
movl
jbe
pushl
pushl
call
add
xorl
mov
sbb
and
adc
or
xor
mov
lea
sbbl
push
adcl
call
addl
mov
adc
or
cmpl
mov
mov
jmp
movl
movl
jbe
push
pushl
call
sub
mov
xor
or
sub
imul
negl
sbbl
and
mov
orl
or
xor
and
lea
adc
mov
movl
movzwl
xor
movl
movl
xor
xor
or
movl
movl
and
movl
cmpl
mov
not
movl
movl
jmp
mov
notl
jg
push
call
sbb
orl
xorl
add
xor
xorl
xor
xor
xor
mov
sub
or
movl
sbbl
movl
mov
mov
mov
sub
xor
mov
sub
and
cmpl
movzbl
movl
jmp
movl
movl
je
push
push
push
push
push
call
sub
or
notl
sub
xor
add
add
mov
sbb
sub
and
sub
or
mov
sbb
lea
mov
mov
add
mov
add
mov
mov
imul
sbbl
and
cmpl
mov
mov
mov
movzbl
jmp
notl
mov
jbe
pushl
pushl
pushl
push
pushl
pushl
call
xorl
add
movzbl
adc
not
or
imul
mov
lea
mov
addl
movl
movl
movl
movl
mov
sbb
mov
or
mov
movl
xor
andl
xor
sbbl
mov
call
cmpl
movl
movl
movzbl
movzwl
jmp
movl
movl
jb
call
sub
and
and
add
adc
subl
sub
sbbl
mov
mov
sub
mov
mov
adcl
xor
xor
mov
call
xorl
or
or
sub
mov
or
mov
andl
xor
xorl
xor
mov
call
mov
cmpl
movl
mov
movl
jmp
movl
jbe
call
or
xor
inc
or
andl
cmpl
notl
mov
jmp
mov
movl
je
push
pushl
call
mov
mov
and
sbb
not
mov
sub
sbb
or
and
mov
movl
mov
mov
xor
xorl
xor
addl
mov
mov
xor
mov
xor
or
mov
sub
mov
movl
mov
mov
movl
call
cmpl
mov
movl
mov
jmp
movl
movl
ja
push
push
call
and
addl
adcl
movzbl
xor
or
mov
adcl
or
mov
or
subl
push
push
subl
push
andl
push
orl
call
movzbl
mov
cmp
movl
jne
mov
sub
mov
mov
xorl
mov
subl
xor
xorl
xor
mov
call
adc
mov
add
mov
xor
mov
mov
incl
xor
addl
xor
xorl
mov
xorl
call
or
and
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
mov
sub
mov
xor
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
sub
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
or
mov
xor
mov
sub
mov
mov
sub
mov
xor
mov
div
mov
xor
div
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
notl
jmp
movl
mov
jle
pushl
push
push
pushl
call
negl
addl
orl
adc
sbbl
sbbl
not
push
push
not
mov
or
movl
jne
cmpl
movl
mov
mov
jmp
mov
jl
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
sbb
and
or
xor
xor
mov
sub
add
add
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
je
add
mov
mov
pop
pop
movl
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
shld
shl
ret
xor
mov
addl
xor
and
shl
ret
xor
xor
ret
