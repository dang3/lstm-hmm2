push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
add
mov
mov
mov
mov
mov
sbbl
push
sbb
jmp
ret
aas
ret
aad
aad
mov
ljmp
jle
fld
fcom
enter
leave
cld
icebp
fmulp
cmc
repnz
rcl
mov
nop
fsub
nop
cld
jmp
leave
ss
xor
neg
aad
int
fnsetpm(287
lock
in
cli
sti
jmp
xchg
in
cli
fxch
out
leave
icebp
idiv
iret
ds
lock
repz
enter
out
fildl
ret
sub
shl
xlat
fdiv
stc
aas
adc
call
fmuls
repz
mul
ret
into
jmp
loopne
iret
lock
in
repnz
into
sub
sti
ljmp
int
into
out
rorb
fimull
div
aam
hlt
cmc
aad
ss
int3
rcl
rol
idivb
icebp
les
out
sti
xchg
jmp
ss
icebp
cli
sti
int
icebp
shr
idivb
ret
in
addb
mov
jecxz
enter
in
stc
iret
lret
sar
icebp
aas
idivb
idiv
enter
mov
loopne
aas
repz
cmp
cli
xor
dec
shll
add
mov
jmp
out
shl
out
xor
jmp
int3
enter
stc
xor
repz
cmc
rol
roll
out
sti
icebp
mov
push
ret
repz
xor
cmp
aam
cmp
jecxz
test
lea
hlt
lock
cli
in
leave
fcmovnbe
sar
rolb
fucomip
in
loop
enter
mov
out
aam
cmp
cmp
lock
in
hlt
test
jmp
stc
enter
mov
int3
call
ljmp
mov
in
jmp
fneni(8087
xor
out
lret
lret
into
aam
cmp
cmc
div
sti
repnz
les
enter
in
int
lock
ret
xor
stc
cld
ljmp
fsubrp
add
add
rcr
fcmovnu
mov
push
lds
or
jle
test
ret
xlat
repnz
mov
cld
jmp
ljmp
ret
in
call
ds
loope
int3
hlt
roll
lret
testl
in
jecxz
ljmp
aas
fscale
int
out
jecxz
rcl
lret
decb
in
xchg
repz
loopne
ss
cli
repnz
shr
sbb
ret
hlt
fadd
ret
leave
and
mov
loopne
shl
xor
cmp
lret
cld
in
in
cmc
neg
fdivr
iret
sbb
mov
out
xchg
xor
aam
lret
shr
cmp
in
out
in
mul
std
jecxz
cmc
fcmovnu
xlat
xlat
fsubrp
loope
out
iret
icebp
loope
loope
cmp
ror
std
ljmp
call
fildl
jecxz
ret
xlat
out
aaa
enter
and
rcr
rcl
cld
cli
ret
test
cld
pop
aam
aad
rcr
clc
stc
shlb
cmp
lock
aam
rcl
leave
test
std
jmp
mov
rcl
mov
out
sbb
jmp
cld
fucom
cld
faddp
ffree
lret
xlat
std
in
out
mov
int
in
cmp
rcl
out
xor
std
loop
ret
add
flds
jecxz
ss
aas
fmul
jecxz
aad
std
fdivr
fnstsw
out
addl
in
xor
fmul
aad
idivb
aas
icebp
fadd
aad
icebp
loop
fsub
ljmp
mov
xchg
aam
fdivrs
sarb
sar
cmp
cmp
cmc
xlat
neg
std
lret
out
enter
xor
clc
cmc
fdiv
out
fdivl
in
or
test
sti
jecxz
into
hlt
xchg
shl
xor
das
cmp
jmp
cmp
cli
jmp
test
sti
xchg
mov
loop
out
lds
in
clc
cmp
fst
repnz
enter
jmp
bnd
pop
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
xor
jmp
ret
leave
aad
fcmovnu
sub
mov
jle
or
jle
std
cld
out
xor
out
lock
into
fsubp
in
cmc
std
ret
lock
shl
clc
mov
mov
aam
cmp
in
int3
sti
hlt
neg
fdiv
shl
sbb
std
fsub
lea
leave
xor
fsub
cli
enter
iret
fistpll
int
ffree
jmp
call
in
decb
shlb
into
xlat
repz
idivl
rcl
loop
clc
aas
fldl2e
mov
vprotw
ret
cmp
cld
lock
aaa
clc
out
fcmovnb
stc
rol
cld
ljmp
mov
xor
out
jmp
cmp
repnz
loope
fcmovbe
ret
cmc
fadds
cmc
nop
in
hlt
lock
loop
aaa
out
fistpll
lret
cmp
lock
loopne
cmp
shl
jmp
icebp
in
in
jmp
leave
lret
cmp
xor
clc
xchg
out
in
mov
xor
int3
hlt
lret
in
sti
fdivp
fucomip
sti
loopne
mov
xchg
iret
ror
stc
cmp
push
rcl
ss
out
sub
enter
out
xchg
lds
xor
enter
fsubrp
lret
call
aam
sti
stc
loope
flds
loopne
jmp
shr
divb
call
in
fsub
cmp
int
leave
mov
lret
ljmp
cmp
ss
sarl
cmp
clc
flds
lock
rolb
in
cmc
cmp
fsubr
sti
fcom
ret
loope
enter
fiaddl
xchg
jmp
loope
rol
out
in
idivb
and
ret
neg
fdivr
aam
ret
in
lea
xlat
int3
lret
cmp
stc
ret
in
sar
neg
int
stc
sti
loop
lds
jmp
call
ficoms
mov
sub
add
andl
mov
sub
jmp
vaddsubpd
rcr
pop
push
xchg
icebp
pop
jmp
or
jle
ds
aam
shl
ret
fcmovbe
leave
aam
out
mov
jecxz
jmp
sub
in
cmp
xlat
fld
loopne
in
sti
in
xchg
mov
shrb
iret
aam
cmp
stc
rcl
fcom
hlt
fcmovb
and
iret
call
xor
hlt
repz
stc
icebp
lock
repz
xchg
in
mov
mov
jmp
rcl
loope
jecxz
shr
call
sub
fcmovu
loope
fcomip
cmp
xlat
jecxz
cld
out
into
loop
out
lret
in
into
xor
xor
ss
fucom
cmp
repnz
inc
loop
loopne
in
clc
mov
aad
shl
xor
std
shr
idiv
out
cmp
ret
shl
and
adc
rcll
xor
fidivl
cmp
ss
rol
fiadds
inc
in
test
shl
std
out
xchg
out
in
leave
bnd
aam
sarb
in
cmp
loope
out
out
jmp
icebp
out
mov
div
in
call
sbb
fstpt
out
repnz
ljmp
loope
xlat
stc
repz
fnstcw
aas
cmc
test
fdiv
lret
out
xchg
test
in
fmulp
int3
xor
xlat
out
out
sar
icebp
cmp
cld
int
addb
jmp
ljmp
call
fxam
cmp
fprem
loope
fcmovb
cld
stc
jmp
xor
ror
out
in
xor
idiv
sarb
call
stc
or
repnz
rcr
cmp
fucomp
lret
ret
fucom
ffreep
neg
ljmp
jmp
xchg
iret
in
iret
fcmovnbe
shl
xor
out
sti
addb
xchg
out
xor
in
iret
fsubrp
int3
hlt
aas
loopne
cmp
fdivp
and
clc
enter
inc
cld
sbb
mov
jmp
rcl
fcom
fcom
fstp
outsb
push
mov
negb
jle
or
jle
sub
test
ret
ror
repnz
cmp
rolb
call
xchg
adc
sti
in
aaa
xor
repnz
out
cld
xchg
jmp
in
shr
in
xor
out
xlat
aas
rcr
shl
std
rorb
xlat
loop
mov
rcl
test
shl
cli
leave
fld1
cli
ror
jmp
int
rcr
clc
aad
test
in
int
fisttpll
int
icebp
test
fyl2x
ret
fcmovnb
sti
cmc
cld
fincstp
lret
test
call
call
fadd
in
loope
loopne
repnz
aas
fadd
enter
ret
adcb
repnz
cmp
lock
cld
test
fdiv
not
ret
test
loop
jmp
shl
jmp
lret
cmc
out
cmc
int
cmp
jmp
mov
enter
ror
int
ss
fdivs
aad
into
hlt
imul
decb
rorl
out
icebp
lock
xor
iret
idivl
aam
loop
std
clc
rorl
lret
mov
xchg
cmc
loopne
int3
xor
neg
repz
std
loope
lock
test
sar
xchg
loopne
or
out
fcmovne
in
ljmp
aaa
jmp
xorb
stc
fdivr
xchg
neg
std
ljmp
loop
sub
into
xor
into
fnstenv
in
int3
cmp
iret
icebp
ret
rcl
mul
out
out
icebp
out
xorl
ds
xor
out
call
out
mov
aad
cli
lret
call
shl
ret
adc
cli
lock
int
int3
test
xchg
iret
rcl
xlat
enter
or
loope
test
cld
xlat
sti
call
fcmovne
aad
out
rorb
lock
xor
orl
add
xor
add
mov
add
mov
movl
mov
xor
mov
lea
and
mov
mov
mov
or
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
sub
mov
mov
and
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
add
add
jmp
ret
fstp
ret
frstor
mov
cwtl
out
inc
daa
les
jle
or
jle
out
aaa
cmp
icebp
rcl
shr
std
enter
mov
rol
int3
xor
neg
int
cmp
fdiv
rolb
not
in
lret
cli
icebp
lret
jmp
in
int3
in
aad
lock
jmp
fdivrp
add
ret
fucom
loop
sbb
fsin
mov
leave
aaa
in
in
jmp
fxch
clc
aad
adc
ljmp
out
icebp
mov
repz
into
cld
enter
fadds
ret
in
call
jmp
test
jmp
imul
cmp
into
int
movl
fcmovnu
icebp
repz
mov
xor
sar
cmp
clc
jmp
rol
out
in
in
fdivr
xchg
aam
clc
out
lock
int3
sar
rcl
cld
ret
out
test
icebp
fdiv
ret
loop
in
lret
in
int3
icebp
jecxz
cs
in
aad
fnsave
hlt
hlt
test
aam
mov
aas
testb
mov
icebp
ret
aam
cmp
repnz
xchg
xlat
idiv
xchg
test
cmc
jmp
cmc
int3
ds
hlt
xlat
cmp
mov
iret
sti
xchg
sub
cmp
xor
rcl
fstpt
rol
jecxz
orb
iret
std
fnclex
aam
clc
shr
xor
shl
iret
in
in
clc
aas
in
cli
repnz
jmp
test
out
iret
mov
in
jecxz
int
ret
fcmovbe
fstpt
clc
lock
cli
loope
test
xchg
lret
loopne
ljmp
call
icebp
cmp
shl
mov
fisttpll
xchg
sarb
idivl
in
xbegin
faddp
shl
aad
cli
orl
xchg
and
xor
imulb
cmc
idiv
in
cmp
in
not
mov
adc
mov
add
mov
mov
mov
mov
adcl
movzwl
andl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
and
mov
and
mov
mov
xor
add
jmp
aam
fistl
ljmp
or
jle
xlat
mov
fcmovu
loopne
in
xchg
xchg
xchg
out
cmp
xorb
cld
fucom
mov
loopne
mov
fsubrp
nop
xchg
loop
cmc
ret
in
xor
ds
int3
cmp
sar
mov
fsubr
int
shr
lea
repz
idivl
ss
rol
div
lock
stc
jmp
out
call
xlat
fcomp
leave
fistpll
icebp
test
xor
enter
lret
jmp
test
in
xor
rcr
fistpll
fucomp
ret
cmp
mul
fsub
iret
out
lock
stc
shl
out
aaa
fnstsw
neg
xlat
rcr
sub
shr
in
nop
cli
mov
fucomip
xor
cmc
cmp
std
ds
aam
cmp
incb
xchg
loopne
rcl
aad
xor
out
imul
vpsubb
lock
fcmovne
cli
test
decb
in
xchg
shl
xchg
ffreep
out
lret
cmc
shl
aaa
aam
sub
sti
sarl
cmp
mov
fiaddl
sar
call
cmp
repz
adc
loop
in
loopne
jmp
rcl
std
xchg
sarl
leave
icebp
clc
fcom
repz
aam
out
fstp
add
in
loop
nop
mov
loop
xor
icebp
enter
stc
ljmp
mov
out
xchg
stc
out
test
aad
in
sti
ds
fcmovnu
rcl
loope
shl
in
out
in
in
leave
ljmp
xchg
int3
ss
cmp
out
mul
les
cld
mov
int
out
in
test
jecxz
xor
into
cmp
repnz
xlat
not
ss
in
enter
leave
ljmp
lea
lret
into
call
lret
xlat
xor
stc
ret
std
xlat
movl
rcl
xchg
nop
shl
cmp
jmp
fstp
je
xchg
or
loopne
jle
or
jle
fcomp
icebp
hlt
cmp
into
iret
jecxz
ret
xlat
xor
xor
loopne
repnz
in
int3
xchg
aaa
int
mov
aaa
ror
rcl
test
test
sar
out
int
loope
or
imulb
in
cld
fldl2t
leave
aam
stc
icebp
idiv
test
rcl
std
vpsrad
lret
xchg
lret
xor
cld
aad
icebp
hlt
idiv
fucomi
xlat
xlat
std
enter
xchg
shr
leave
fcom
leave
rcr
aad
int3
in
stc
fdivp
jmp
cmp
in
out
std
call
rcl
cmp
xor
in
ret
loop
stc
rcr
xchg
mov
fstp
into
xchg
out
icebp
imul
out
aad
ss
aad
and
ret
and
jecxz
out
mov
xor
ss
xor
lock
clc
icebp
iret
ds
ljmp
iret
in
notb
jmp
sar
sti
sar
aas
sti
loopne
shl
mov
sbb
ljmp
jecxz
icebp
loop
cmp
cmp
sti
enter
cmc
ret
xchg
inc
in
out
call
orb
sar
cmp
ss
roll
leave
clc
xchg
decl
ljmp
jmp
ljmp
rolb
fdiv
pop
jmp
mov
enter
in
out
idiv
int
sti
fcmovnu
test
fsubrp
fcmovne
mov
clc
mov
repz
test
hlt
out
sarb
std
fsubr
rol
cmp
cli
shl
fstp
fld
aam
fdivr
jmp
mov
lret
fsubrs
int
aad
int3
repz
loopne
ffree
cmc
testb
fadd
jecxz
lea
jmp
repnz
in
sti
cmp
clc
faddp
out
xlat
xchg
orl
loopne
ror
aaa
stc
cmp
ret
jne
mov
mov
xor
add
cmp
jne
mov
mov
jmp
int
rol
fst
lcall
sahf
out
push
jle
or
jle
test
lds
addl
cmc
into
jecxz
int3
out
aaa
ljmp
cmc
enter
addb
out
mov
das
leave
shr
sub
lret
loope
call
stc
cmp
jmp
orl
loop
out
fcmovb
cmp
jecxz
xlat
push
fcmovu
enter
popl
in
repz
call
shl
aad
loop
aas
loop,pt
cmp
decl
xchg
ficoms
xor
enter
in
aam
sarl
ret
cld
loope
lret
loopne
cld
aam
shrb
xor
aam
in
imul
clc
add
aas
sbb
shr
lret
fmul
out
mov
out
mov
not
out
xor
cli
ljmp
into
icebp
test
aas
xlat
std
rcr
enter
shl
rcl
in
repz
cmp
cmp
fucom
jecxz
fadds
out
in
jecxz
repnz
iret
in
in
fcomp
out
xlat
sar
loope
test
stc
ffreep
adc
fprem
leave
in
shl
rorl
cmp
ror
fcomp
int
stc
add
sar
shr
add
loop
sti
jmp
out
enter
xor
sti
repnz
and
fadds
call
leave
rolb
icebp
not
cmp
loopne
incl
repz
mov
ret
and
icebp
decb
rol
leave
idivl
hlt
fcom
rcl
sti
cmc
neg
test
rolb
out
out
out
mov
xchg
shr
sub
lock
iret
cli
fldlg2
rol
sti
std
aad
xchg
jmp
sti
fucom
sar
shl
iret
lret
cmp
idivl
lock
out
xor
xchg
lret
loop
xchg
icebp
out
ror
enter
out
cmp
repz
ffree
cld
aas
call
loope
lret
fiaddl
add
mov
mov
mov
jmp
leave
ret
int
int
mov
lret
cld
adc
or
jle
xchg
clc
shll
repnz
fidivs
fnsave
lock
adc
shl
mov
call
mov
cli
fld
call
sbb
cmp
xor
cmp
sub
fisttps
loop
jmp
ds
cmp
aam
fmuls
adcl
cli
idivl
cmp
aas
int
test
ror
in
dec
ffree
in
mov
out
mov
into
enter
cld
fst
fdiv
std
std
test
std
out
cld
mov
call
loopne
not
xor
sti
das
ss
stc
cmp
aam
cmp
clc
fisttpl
jecxz
mov
jmp
cmp
cmp
out
aam
fcmovne
sbb
mov
shl
addb
cmp
int3
cmp
fsubr
imul
std
cli
xchg
rcl
hlt
test
fsubrp
shl
jmp
cmp
out
xor
fptan
jecxz
cmp
loope
jmp
into
out
xchg
ljmp
shl
ds
shl
lret
icebp
cli
rcr
jecxz
rol
or
mov
loope
std
fsubp
leave
clc
cli
jmp
hlt
sti
aas
or
clc
fdivp
aad
fadd
mov
jecxz
in
xor
enter
out
ljmp
cld
rcr
sti
loope
filds
orl
cmc
aad
jmp
incl
jecxz
std
adc
lret
xchg
xchg
out
sar
ss
shr
cmp
aad
hlt
std
fucomip
mov
in
out
int
rorl
xor
clc
cmc
aad
jmp
loop
idiv
ffree
mov
out
aam
leave
fucomip
out
jecxz
in
shr
idiv
lock
fmul
lock
cmp
rolb
fcomi
mov
lea
in
out
ret
hlt
xor
ror
fcmovne
xor
jmp
aam
mov
dec
mov
jle
or
jle
sti
fadd
in
sarl
cmc
lea
std
loope
adc
leave
shr
lret
cmp
shr
cmp
aad
rol
ret
fstp
loope
in
into
repnz
in
xor
fcmovnu
int3
jecxz
out
hlt
cmp
fcmovb
loope
mov
test
loopne
lret
in
xor
in
cli
hlt
cli
test
loope
rcl
test
fdivrp
loope
loop
mov
out
ret
aaa
into
ljmp
clc
xlat
test
loope
lret
fisttpll
loope
in
aad
aas
fistpll
cld
aad
out
cmc
mov
mov
out
loope
in
int
stc
lds
out
cli
cmp
hlt
repnz
cmp
call
imul
enter
adcb
out
cli
int3
ss
sbb
cli
xchg
aad
imul
ljmp
jmp
loope
repnz
shll
lret
test
ds
fiaddl
int
jecxz
in
cld
cli
shr
stc
cmp
in
not
std
fsub
sti
mov
lret
addl
out
loope
sar
test
out
shl
out
lock
ret
shl
imul
nop
lret
leave
shl
in
jmp
ror
lock
xchg
aad
ret
in
out
sti
lret
sbb
sub
call
hlt
ret
into
test
lds
addl
cmc
cmp
idiv
repnz
adc
ljmp
ss
repnz
xor
fsub
lret
mul
aam
aam
call
cli
in
icebp
test
repz
int3
repnz
fnstcw
aam
int
cmp
mov
in
nop
xchg
lock
xchg
xlat
ds
call
imul
cli
clc
call
fidivrl
sub
add
mov
mov
jmp
xlat
rol
xlat
enter
push
in
push
ficompl
add
out
fcomip
xchg
into
sarl
ljmp
jecxz
icebp
in
loope
cld
call
popl
xorl
aaa
xor
rcl
aas
fidivrl
cmpb
icebp
cli
faddp
xlat
call
in
jmp
out
cmp
fsub
ds
cli
sar
rolb
stc
xchg
shl
in
into
call
out
fdivp
cld
fsub
cld
xor
rol
fcmovu
leave
rolb
out
ror
idivl
idivl
ret
out
xor
fcmovne
fsubr
mov
mov
xchg
fmul
sub
repnz
jmp
addl
ljmp
rolb
xlat
ret
xor
hlt
cli
cli
lret
repz
xor
clc
fiadds
test
xchg
shr
ss
jecxz
test
ljmp
aam
sti
loop
filds
cld
out
shl
fidivl
cmp
int
inc
shl
sbb
not
cmc
xchg
sti
clc
stc
xlat
or
in
roll
div
icebp
cmp
fidivrs
xlat
cmp
aas
inc
out
out
int3
enter
cld
idiv
fucomi
std
cmc
cli
icebp
addb
test
jmp
in
fdivp
divb
sub
into
test
aam
loope
enter
loope
les
xor
in
rcl
out
leave
lret
fadd
loope
iret
loop
shr
cld
xlat
into
int
in
in
decb
xor
cmp
fsubrp
imul
out
loopne
sti
mov
fcmovnb
xchg
in
xchg
test
in
hlt
cmp
jmp
lret
loope
out
roll
and
test
hlt
leave
sub
ljmp
jecxz
in
add
jmp
faddl
int
mov
jmp
into
ror
fxch
fst
cmc
mov
mov
cmpsb
push
jle
or
jle
loopne
idivb
test
test
cli
test
cld
lret
out
test
enter
fucomp
out
cmp
cli
fildl
sbb
mov
aad
mov
out
out
in
aas
xlat
jecxz
int3
jmp
fdivrs
test
hlt
out
idiv
out
into
call
jmp
cmp
fsub
cli
roll
in
out
orb
mov
into
loope
call
leave
jmp
ljmp
out
flds
mov
fdivr
loope
jmp
jmp
cmp
sarl
xlat
ds
cmp
cld
in
jmp
out
out
lret
test
into
mov
loope
xor
fnsave
call
lret
shl
in
in
loop
lret
mov
or
and
xchg
jmp
jecxz
loop
lret
repnz
aam
fistpll
std
ds
dec
ffreep
call
call
shl
std
rcl
stc
lret
out
filds
mov
orb
call
xor
adc
aam
shl
ret
std
mul
out
out
loopne
xlat
loop
repnz
out
loopne
hlt
hlt
cmc
in
into
flds
jecxz
movl
in
div
faddp
into
in
clc
rolb
out
clc
jmp
int
xchg
cmc
xchg
out
xor
cmp
rcl
aas
sti
xorb
cmp
or
mov
icebp
ret
jecxz
leave
fsubr
aam
loope
hlt
aas
sbb
shl
fldl
jecxz
int3
xchg
lds
enter
cmp
cmp
jecxz,pt
jecxz
aas
repnz
in
mov
into
int3
lock
rcr
xlat
loop
cmp
cmp
stc
mov
in
mov
xchg
out
xor
jmp
repnz
aas
icebp
repz
fsub
mov
mov
add
mov
jmp
ret
rol
rcl
rcl
sar
and
adc
sbb
or
jle
test
mov
mov
cmc
clc
div
into
cld
rcr
in
aas
aas
cmp
mov
cli
fmulp
out
xchg
jmp
rcl
out
sti
cmp
icebp
xlat
in
stc
cmp
loop
repnz
loope
jmp
fxam
cld
out
xchg
leave
cmc
cmc
jecxz
ljmp
ds
fsubr
fcmovne
fcmovbe
aad
aas
or
and
rcl
sarl
xor
lret
fdivrp
iret
hlt
iret
cmpl
orl
jmp
repz
test
shll
fucom
sbb
sti
incl
sar
xchg
repnz
lock
fsub
cmp
fxch
repz
hlt
stc
out
out
xchg
mov
loop
fdivp
jecxz
iret
clc
jmp
out
fsubrp
sti
aad
rcr
xlat
out
cli
dec
or
incb
out
cmp
jmp
cmc
fsubr
out
repz
test
fildl
lock
xchg
in
enter
enter
int3
jmp
ret
iret
fsubp
lds
int
mov
aam
in
aaa
cmp
out
shl
sbb
jecxz
lds
loope
jmp
divb
repnz
in
fucomp
xlat
out
std
loop
roll
jecxz
cld
flds
int
hlt
iret
out
ret
lret
shll
fmulp
cmc
fdivr
fcmovbe
call
rorb
loopne
mov
cmp
xchg
loopne
int
ret
int3
clc
sarl
cmp
stc
iret
cmc
aad
aad
or
call
int
leave
lret
jecxz
in
xor
cmp
fcomi
cmp
ret
fcmovnbe
icebp
enter
cld
xlat
xchg
shr
cmp
repz
clc
jmp
rcr
std
enter
clc
and
out
mov
xor
fldl2t
fnstsw
cmp
loop
test
call
enter
jecxz
lret
mov
mov
xor
add
jmp
rcl
rcl
fstp
rcr
cld
cmp
jmp
mov
jle
or
jle
mov
lret
fsubr
rcl
mov
enter
repnz
repnz
repnz
cmp
lret
call
ret
ret
fisttpll
fsub
out
mov
sar
xor
loop
fucomi
cli
int3
aad
in
repnz
in
fcmovb
mov
std
in
in
xchg
in
aam
in
icebp
lret
out
int
icebp
in
sbb
call
cld
out
fldl
in
ret
cld
aas
cmp
cmp
testl
call
jecxz
aam
shl
xlat
cmp
cmp
cmc
loopne
cmp
xlat
mov
xchg
cli
in
out
xlat
lret
icebp
icebp
stc
repz
vpmuludq
test
jmp
xor
repz
icebp
out
ss
cmp
fucomp
loop
rcl
shl
fcmovne
mov
mov
test
in
aad
fsubr
out
cmc
shl
xlat
cmp
loope
incl
clc
lock
lret
notb
rcr
repnz
not
stc
fst
enter
and
fucomi
xchg
xlat
stc
fdivs
cmp
xlat
repz
les
fdivrp
loop
in
mov
sti
enter
xchg
sarl
iret
fdivr
push
cmp
ds
fcmovnbe
and
call
lea
aaa
shr
aam
fidivrl
fchs
aas
out
clc
loope
fisttps
cli
out
mov
out
xor
lds
in
out
iret
cli
loope
aas
std
xchg
sub
cmc
sbb
jmp
adcl
into
fdivrs
ror
aad
cmc
repnz
xchg
ret
fdivr
out
sti
mov
xor
stc
clc
repnz
divl
aaa
out
fucom
aam
iret
xchg
shl
fcomi
or
ljmp
iret
out
cmp
jmp
sarb
test
cmp
xor
sub
mov
jmp
int3
enter
lret
int
stos
test
cmp
jle
or
jle
mov
cld
cmc
loopne
into
test
loopne
out
ljmp
cmp
lret
in
out
loopne
fcmovu
xchg
xrelease
ror
in
hlt
icebp
ror
div
aam
fcmovnbe
std
rol
stc
jmp
jmp
fisttps
repnz
fsub
cld
cmp
cmp
test
xlat
mov
rcll
xor
xor
leave
fdivrs
stc
ds
in
loopne
sti
sti
cli
cli
rcr
mov
in
iret
shr
shr
ss
roll
test
dec
xchg
hlt
xchg
nop
shl
ljmp
neg
ljmp
lock
fsqrt
mov
mov
shr
cld
fisttpll
sub
lret
cmp
fdiv
clc
out
bnd
call
movl
xor
fidivs
int
icebp
cld
xlat
repz
cli
jecxz
rorb
mov
rol
in
ljmp
rcr
shl
in
fcomi
cmp
out
test
repz
pop
jecxz
sub
cmp
repnz
aaa
rcr
fucom
out
xchg
ljmp
hlt
aad
shl
cmp
fcmovne
lock
repz
in
clc
enter
decl
int3
out
xor
xor
out
fsubr
add
sti
out
std
shl
aad
in
loope
mov
mov
rcl
xor
loope
ret
roll
lret
leave
lds
loopne
repnz
shr
shl
aas
shl
lock
std
ret
xchg
fsubp
vpor
ljmp
fnsetpm(287
shl
lock
repz
xor
hlt
stc
fsub
jmp
ror
fst
xchg
in
sub
lret
int3
cld
aad
jmp
cli
sti
icebp
xlat
enter
in
stc
fucomi
loopne
enter
sub
cmp
mov
movzwl
jg
xor
jmp
int
rcl
fcmovu
int
xchg
daa
ljmp
push
jle
or
jle
xor
ljmp
shl
loop
ror
xchg
mov
fldl
out
ljmp
iret
iret
out
cmp
aam
cmpb
fcomip
loope
in
mov
ljmp
ljmp
ret
ss
test
idiv
ret
lock
clc
std
fcmovbe
jecxz
sti
out
jmp
icebp
test
into
rcr
sti
stc
fcomi
ret
fdiv
jecxz
testl
decb
fdiv
xor
not
ljmp
test
xchg
jecxz
ret
test
roll
cld
out
int3
fucomip
loope
sti
iret
aas
fcomp
sti
mov
out
in
mov
movl
cmp
iret
ror
cmp
stc
aas
fcmovbe
addb
add
std
mov
mov
in
fcmovu
not
fcmovne
fdivrl
roll
fdivp
into
fsubr
int3
cld
in
xchg
iret
loopne
out
fnsetpm(287
int3
cmp
or
ljmp
sti
clc
leave
int3
faddl
loop
fcom
fcmovu
lock
xor
fdivrl
out
in
ds
ffree
addb
mov
aad
lret
aad
icebp
xor
ds
inc
fnstsw
loope
out
sub
in
repnz
ljmp
xlat
lret
sti
jmp
ret
not
fucom
fiaddl
lret
mov
std
iret
out
xor
cmp
fadd
cmp
jmp
enter
ror
out
cmp
fadd
fcomi
ror
test
shl
out
ret
lret
les
jmp
out
cli
aaa
neg
cmp
xor
fucomi
rolb
call
in
out
lret
bnd
jmp
in
int3
fidivrl
repz
repz
fcmovnb
lret
mov
rorl
xor
cmp
clc
shr
hlt
xor
sub
sub
mov
jmp
xor
jmp
mov
fst
fxch
jg
lods
loop
ds
into
insb
and
or
jle
ds
std
loop
leave
stc
in
loopne
jmp
out
jecxz
into
rol
iret
ds
sar
cmp
mul
rol
test
addl
out
in
shr
int3
idivl
enter
ret
lock
cmc
vpsubusw
in
lea
out
enter
fdivrs
jmp
test
loop
mov
lret
out
in
stc
in
ss
in
lret
loope
roll
cmp
test
and
repnz
xor
cmp
aad
out
adc
cmp
icebp
in
ret
lds
in
aad
clc
xor
aam
call
les
jmp
std
loop
leave
lret
out
sub
cmp
loope
hlt
repnz
rcr
ds
repz
lret
in
in
xchg
loopne
in
enter
in
leave
jmp
fucomi
xlat
clc
test
enter
in
cli
cld
loop
iret
shl
jmp
leave
xlat
out
cmp
frstpm(287
aaa
ffree
hlt
jmp
in
std
fmul
int
xchg
sub
xor
xor
fidivrl
fst
aaa
fiaddl
test
incl
mov
lea
rol
ljmp
lock
repz
orl
out
xchg
mov
leave
iret
lock
cmp
sti
rol
repnz
xchg
clc
ficoms
xchg
lret
cmp
aam
int
into
in
cli
loope
std
testl
iret
fsubr
repnz
xor
out
in
call
cmp
loopne
fiadds
fsubr
and
faddl
xor
ror
lret
iret
lock
clc
loop
loopne
jecxz
sti
loope
in
xchg
std
shl
hlt
mov
hlt
out
xor
out
into
cmp
sti
into
aam
cli
in
stc
aam
xchg
mov
xor
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
jmp
rol
lret
aad
mov
cmp
or
jle
mov
int3
xor
lret
imul
not
repnz
cmp
in
mov
lret
sub
loopne
mov
repnz
repz
jmp
int
out
or
out
addb
mov
cli
xor
lret
jecxz
into
ljmp
fdivr
in
repnz
aad
loop
or
fisttpl
hlt
ss
enter
xor
fadd
loope
fldl
mov
clc
clc
fldl
mov
xor
jmp
lret
cli
in
cld
add
sti
test
fcmovnu
out
test
std
sub
ljmp
clc
aam
loope
in
loopne
incb
cli
call
lock
mov
lds
call
cmp
fdiv
fcomip
out
loope
mov
addb
rcr
and
ror
xor
aaa
enter
xor
aaa
std
cld
icebp
repnz
int3
stc
jecxz
ficoms
int
hlt
cmp
out
cmp
cmp
out
shl
stc
testb
in
decb
lock
xor
cli
sarb
ret
ret
loop
fcmovbe
jmp
xchg
fcomip
in
ljmp
fsubr
aad
cld
loop
repz
ljmp
mov
loope
int
ror
lock
cli
cmp
idivl
fsub
out
xlat
sar
in
mov
xchg
mov
out
icebp
jmp
xor
ljmp
filds
out
in
test
out
in
rclb
in
xor
shr
lock
testl
loopne
mov
fmul
xchg
call
in
into
jmp
lock
cmp
aas
stc
sbb
xchg
addb
enter
lret
ljmp
xlat
ret
fnstcw
stc
loope
sti
mov
mov
xchg
jecxz
out
int
cmc
xor
ror
xor
fnstsw
add
test
adc
add
add
add
ror
aad
fldt
sbb
or
jle
lret
fucomp
cmp
add
movl
jecxz
adcl
cmp
icebp
loopne
sar
hlt
test
stc
rcr
ror
leave
into
test
jecxz
jecxz
aam
out
fst
lret
into
xlat
loop
cli
incl
jmp
test
dec
shr
ljmp
shl
test
test
repnz
incl
lea
sar
ret
xlat
call
sub
test
call
mov
loop
std
loop
in
lea
int
aam
fdiv
lock
cmc
rol
sti
addl
decb
enter
cmp
frndint
iret
sbb
out
in
in
lret
test
cli
lret
fcom
icebp
xor
cmc
in
cmp
xor
out
repz
roll
mov
in
test
mov
ret
hlt
enter
in
push
shl
fneni(8087
sti
nop
ret
repnz
mul
xor
aam
enter
fdivrl
lret
neg
cmp
ret
test
sti
into
sti
mov
cmc
leave
out
cmp
xor
fcmovbe
rcl
rcr
lret
loope
repnz
call
fldz
fndisi(8087
mov
rcr
int
cmp
ljmp
fistpll
cmp
repnz
mov
xchg
cmp
nop
fidivs
clc
ror
iret
aad
cmc
out
cmp
incl
loop
loopne
fldl
out
in
leave
aad
cli
out
xor
shl
lret
sub
sar
xlat
mov
in
into
cld
mov
and
xchg
icebp
clc
call
ror
ljmp
aam
test
lret
int3
in
cld
faddl
xchg
sub
xor
mul
int
div
aam
ret
stc
fstpt
mov
or
in
aaa
aad
jmp
cmp
cmp
cli
iret
xchg
stc
mov
mov
in
mov
jmp
aam
iret
int3
fst
outsl
fmull
and
les
daa
jle
or
jle
mov
lret
mov
xor
lret
neg
dec
cmp
lret
jmp
out
loopne
rcr
sti
jmp
xlat
ljmp
loope,pn
int
repz
out
aas
neg
out
in
rcr
loope
addl
rol
fucomip
loop
jmp
int3
ss
iret
xor
lds
mov
out
fsubr
cld
xchg
shlb
repnz
test
out
aam
bnd
filds
out
clc
incl
in
jmp
shr
in
fcmovnbe
repnz
cli
clc
cmp
stc
fcmovnbe
loopne
test
mov
in
in
rorb
xor
repnz
sti
shr
lret
xor
fcmovu
rolb
std
fsub
in
repz
cmp
clc
loop
loopne
fcompp
fdivr
fmul
loop
nop
popl
loopne
out
fnstenv
cli
repnz
in
clc
fdivp
test
out
fmull
lret
lret
xchg
cmp
fdivr
cld
shll
cmp
fucomp
cli
in
aad
leave
mov
shl
addb
xlat
aad
cmp
aam
out
in
cmp
aam
idiv
xlat
mov
cmp
in
cmc
xlat
fsubr
icebp
iret
jmp
faddl
cld
cmp
sti
std
test
repnz
loopne
cmp
cs
divl
rolb
rorl
in
in
test
mov
xor
aad
clc
sarl
in
fdivp
aad
rcr
mov
xchg
into
cld
mov
into
cld
idiv
stc
aas
lock
std
test
clc
les
aad
xor
loope
stc
divl
repnz
sti
in
rcr
loope
aam
jmp
les
ljmp
cld
fucomp
ss
stc
aas
out
in
fsubp
in
sti
sar
idiv
sbb
int3
roll
loope
xor
mov
mov
jmp
ret
xlat
int
fstp
cltd
sbb
in
sub
or
jle
call
out
sub
lds
std
out
leave
xchg
and
into
repz
xor
jmp
sti
fldz
loopne
cmp
hlt
call
incl
out
ret
cmc
imul
std
into
iret
aam
loopne
fmul
repz
repnz
rcl
out
out
jecxz
hlt
mov
mov
loop
out
ljmp
imul
loopne
clc
cmp
aad
std
cli
in
fisttpl
in
shr
in
out
loopne
jecxz
lock
test
mov
mov
sub
test
mov
in
call
cmp
aas
cmp
xchg
clc
shr
in
movl
in
leave
cmp
cld
cmp
cmc
int
cmp
out
out
test
in
jmp
xchg
dec
xchg
rcr
out
std
cmp
cmp
shl
lock
ret
rcl
decb
test
cmp
ljmp
xor
sarb
in
hlt
cmc
shl
mov
repz
in
ljmp
loop
aad
sarl
cmp
cmp
aam
out
rcr
loopne
fsubrp
into
lret
xchg
out
xor
leave
repz
xor
icebp
cld
addl
in
in
loopne
jmp
fimuls
ljmp
fucomp
int3
fistpll
fimuls
lea
stc
sti
xor
int
call
test
addl
test
lock
out
in
xor
lock
addb
jecxz
std
fsubrp
mov
lea
xchg
in
das
int3
repnz
cmp
cmp
clc
cmp
loop
rolb
test
in
int
xchg
test
int
jmp
shr
fsubp
cmp
sbb
ret
lret
in
fimuls
enter
icebp
fsqrt
cli
int
int3
fldlg2
sbb
call
mov
add
add
mov
mov
mov
jmp
rol
xlat
int
arpl
mov
fisttpl
jle
or
jle
mov
stc
mov
dec
int3
int3
jmp
out
mov
fdivp
fdivrp
loop
aad
repz
clc
mov
test
lret
repz
aad
call
into
sar
ffreep
stc
stc
mov
ret
ret
cmp
clc
sbb
mul
not
int
in
iret
sub
jecxz
lock
call
xlat
cmc
in
out
out
mov
mov
hlt
cmp
loop
lret
das
shll
loop
stc
in
out
ljmp
fmulp
icebp
loop
ljmp
sbb
lock
fdivrl
aad
xchg
aam
fcomi
lret
fucomp
mov
in
sar
leave
fdivs
sti
std
imul
filds
into
jecxz
in
in
xchg
rol
lock
int
into
rcr
in
stc
rcl
out
in
fcom
repz
in
xlat
mov
xchg
call
in
sub
neg
das
jmp
adc
aam
flds
cld
nop
orl
imul
fdivrp
cmp
out
std
fcmovb
mov
push
imul
enter
mov
out
int3
cmc
ss
rol
aaa
test
repnz
loope
addl
into
fcmovbe
repz
repnz
ljmp
xlat
vpsrld
addb
sti
out
hlt
xchg
jmp
xlat
in
in
iret
xor
clc
leave
ljmp
movb
leave
fdivr
in
in
int3
xor
not
sti
iret
leave
loopne
int
cld
cld
fdiv
neg
loop
mov
int
cld
xchg
aam
in
cli
cmp
cmp
aas
shl
dec
fcmovb
fcomi
fisttps
mov
xor
xor
repz
enter
fcmovnu
fprem
fdivr
jmp
fld1
rolb
or
loope
lret
cli
iret
cmp
in
int
shl
hlt
ret
xlat
idiv
hlt
out
xor
fucom
repnz
aad
inc
in
add
add
enter
ret
xorb
mov
sub
jle
cmc
repnz
ljmp
cli
sbb
call
loop
mov
cli
fdiv
sar
ljmp
cli
sti
jecxz
test
test
repnz
out
pushl
out
jmp
hlt
ror
repnz
into
repnz
rcl
loop
jmp
in
fadd
in
int3
mov
loop
rcl
cmp
in
out
aas
xlat
fmul
out
loop
cmc
repnz
aas
fisttpl
mov
nop
mov
nop
out
ret
das
shlb
fst
cmp
cmc
idiv
fistpll
fmuls
enter
aaa
cmp
repz
cmp
std
fxch
ljmp
in
loope
shr
xor
imul
rcl
xlat
call
filds
aad
sti
sbb
mov
leave
int
fcomi
out
repz
ret
repz
std
xlat
ret
fsubr
dec
into
iret
loope
in
shl
das
xlat
sub
repnz
stc
lret
fidivs
les
sub
icebp
xor
repnz
cli
cli
lret
lret
repz
rolb
cld
testb
nop
shl
out
hlt
leave
into
loopne
fdivr
aam
faddl
repz
int3
iret
out
adc
out
cmc
cmp
shl
xor
iret
cmp
jmp
mov
lret
icebp
mov
fcmovnb
out
fmulp
int3
div
cmpl
lock
cld
lret
nop
fdiv
rol
rcr
repz
shl
clc
stc
jmp
repnz
fiadds
xlat
fstp
lret
mov
loope
aaa
call
cmp
or
fdiv
cmp
test
jecxz
fsub
repnz
out
mov
shl
lret
ljmp
iret
std
add
xchg
xchg
into
shr
repnz
xor
icebp
sub
cmp
call
fidivrl
cli
into
fisttpl
jmp
leave
xchg
aaa
cmp
fwait
into
das
jle
or
jle
loopne
in
xlat
xlat
test
jecxz
call
lret
xor
fst
jmp
aam
test
xlat
xchg
cli
loopne
nop
cli
mov
mov
in
das
ss
int3
xlat
xor
in
int
cmp
imul
repnz
shr
xchg
xchg
lret
jmp
lock
aaa
rcr
ss
lock
aaa
aam
cmp
fmul
test
loop
mov
in
ss
lds
fdivl
fsin
iret
loopne
loope
in
repnz
icebp
in
fsubrp
mov
ret
mov
iret
shl
imul
rcr
xlat
cld
hlt
hlt
ret
fsub
test
mov
icebp
out
stc
test
divb
cmpl
std
cmc
add
fcmovne
loopne
icebp
mov
loope
cmc
repnz
repz
cmc
filds
xlat
mov
xchg
xchg
xor
cmp
in
out
xor
aaa
cmp
into
in
rcl
icebp
call
in
mov
hlt
loop
fldpi
repz
in
aad
fsub
rol
stc
xchg
xchg
loope
and
lock
xchg
jmp
loopne
in
icebp
icebp
hlt
rcr
int
cmp
repz
loopne
mov
jmp
icebp
hlt
aad
fidivrs
neg
into
cmp
repnz
mov
xlat
fsub
flds
mov
enter
xor
shr
fistpll
cmp
cld
cmp
hlt
shl
aas
in
into
sbb
mov
sarl
lock
iret
lret
aad
iret
cmp
xor
lret
test
mul
test
int3
fsubrp
xchg
aad
repz
jmp
icebp
lret
rolb
fisttps
sub
lret
repnz
jmp
iret
clc
cmp
in
in
aad
les
std
mov
lret
mov
iret
rol
shr
cmp
sti
fstp
cmc
aad
xor
cld
cmp
sbb
fiadds
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
jmp
into
lret
fcmovne
into
fistpl
adcl
fdivl
jle
or
jle
xchg
mov
rol
jecxz
enter
std
iret
shl
testl
jmp
repz
jecxz
jmp
cmp
ret
rorl
in
ret
out
aad
loop
cmc
ss
fucomp
fdivrs
cld
repz
stc
out
loope
xlat
xor
ljmp
nop
out
mov
rcl
hlt
leave
icebp
cmc
shr
out
xor
sti
test
xchg
mov
xchg
mov
ftst
out
out
out
lret
sti
cmp
rcl
cmp
sti
jmp
or
mov
orl
clc
loopne
cmp
addb
out
mov
adc
fucomip
xchg
repnz
cmp
hlt
repz
sbb
les
xlat
in
aam
in
jmp
rolb
lret
jecxz
call
aas
bnd
icebp
cmc
xchg
rcl
ret
icebp
loope
xchg
ss
idivl
sti
fcmovne
fdivr
jecxz
ret
out
aad
jecxz
leave
fcoml
xchg
int3
divl
shr
int3
sar
cmp
ffree
lds
int
mov
out
jmp
stc
cmp
int3
shl
orb
test
out
int3
mov
hlt
aam
div
into
xlat
cli
cmc
cmp
fsub
out
ljmp
rorb
leave
jecxz
shl
jmp
int3
fcmovbe
iret
lock
les
imul
xchg
nop
xchg
orl
xor
rcr
shl
fcom
mul
hlt
cmp
addb
out
lret
lret
shr
shr
xlat
imul
enter
fldz
shl
cmp
mov
mov
hlt
jmp
aam
iret
in
ret
cmc
movb
out
mov
ss
int3
fcomp
lret
mov
add
jmp
ret
enter
int
aas
icebp
jg
lock
jle
add
hlt
loope
loop
stc
leave
in
xchg
rcl
out
sar
xchg
mov
xor
fucomi
xlat
cmc
cmp
or
jecxz
fyl2xp1
fildl
mov
ljmp
cld
faddp
xor
in
xor
imul
cli
mov
jmp
adcl
xor
shl
hlt
lret
lock
into
out
cmc
vpandn
fstp
sub
xor
into
cmp
repz
in
ffreep
out
bnd
mul
loope
faddl
aad
lret
xor
stc
fsub
aas
cmp
clc
loope
rcr
std
mov
push
lret
out
in
lock
call
fldl
ljmp
fists
int3
xor
ror
out
shr
out
xor
push
sub
addl
icebp
xor
in
int3
shr
jmp
cmp
fdivp
repz
rorb
fucomp
ljmp
int
fdivrs
cmp
repnz
iret
push
fcmovnbe
lock
mov
shr
fucomi
fisttpl
out
loope
int3
into
rcl
aam
test
jecxz
repz
in
fcomp
std
test
mov
shlb
xlat
loop
into
xor
loop
rol
cld
movb
cmp
int3
xchg
test
aam
div
faddp
fnsave
fucom
ret
in
hlt
enter
jmp
iret
ror
sub
div
xor
cli
aam
idivl
into
aas
jmp
cmc
ret
int3
fstp
in
shl
adcb
icebp
in
neg
adc
testl
fprem
mov
test
xchg
lret
cmp
in
icebp
aas
jmp
and
cmp
fucom
jmp
cli
fsubp
xchg
mov
in
cs
ret
icebp
lret
aas
cmp
rolb
mul
std
call
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
jmp
rcl
rcl
rcl
aad
xchg
stos
gs
rorl
add
mov
out
aad
aas
ror
jecxz
out
int3
aad
lret
aam
out
ret
test
out
loop
stc
orl
ss
into
hlt
ljmp
enter
fstp
jecxz
loopne
mov
hlt
hlt
hlt
fprem
idiv
fmulp
cmp
sbb
in
mov
std
cld
out
neg
fiaddl
in
cmp
fdivr
idivl
loope
in
icebp
std
icebp
xlat
jmp
in
xchg
in
fisttpll
not
vpminsw
fcomi
sbb
faddl
push
cli
out
fsub
in
jmp
rcl
mov
ret
into
hlt
int
std
aaa
out
stc
cmp
rcr
orl
stc
test
mov
jmp
call
fnop
cli
call
not
leave
hlt
jecxz
out
lock
int
mov
cmp
jecxz
std
int
leave
cmc
sti
sti
loopne
fsub
sarl
roll
adcl
fcmovu
xor
cmp
hlt
xlat
stc
repnz
jecxz
mov
fdiv
faddp
repz
xor
cmp
cli
fcmovbe
icebp
aam
aas
cmc
cmp
repz
lret
out
ljmp
das
call
in
lock
in
sar
fstp
loopne
loop
sti
loop
mov
cli
rclb
int3
out
in
out
xlat
aaa
jecxz
testl
xlat
loop
sub
fists
fadd
in
in
xor
lret
into
cmc
fcom
xchg
stc
xchg
cmc
out
xchg
xchg
loop
lret
xor
int3
cmp
stc
repz
clc
cli
fcmovu
ljmp
sti
hlt
aad
in
iret
out
out
hlt
fprem1
fcomi
cli
int3
neg
ret
incb
out
orl
in
cli
fucomi
jmp
stc
cmp
xchg
in
out
mov
imul
ljmp
leave
lret
enter
test
mov
mov
pushl
call
mov
jmp
enter
int
int
repz
xchg
jle
or
jle
out
into
aas
in
ss
shl
loop
out
in
cmp
in
mov
shr
adcl
shr
jmp
out
icebp
int3
fcmovu
xlat
loop
mov
test
mov
out
fldl
xlat
int3
xor
in
fsubr
cld
iret
cmp
out
xchg
std
jmp
int
rorb
fmul
leave
fdiv
sarb
cmp
ds
cmp
jmp
jmp
xchg
rol
aad
repnz
sti
out
mul
fndisi(8087
neg
test
inc
out
enter
ljmp
mov
out
out
cmp
sarl
stc
into
jmp
loope
cmp
loop
std
fcoml
xchg
aas
in
cmp
xor
sti
in
cmp
repnz
out
cmc
ffree
in
test
jecxz
sti
out
hlt
loopne
repnz
ss
hlt
jmp
cld
not
ret
loop
cld
xlat
xchg
jmp
iret
lea
aad
hlt
leave
jmp
fdivp
fiaddl
clc
out
enter
jmp
ficoms
fcmovnbe
cmp
call
cli
hlt
cmc
addl
call
sub
idivl
shl
cmp
fcmovbe
cli
sbb
repnz
out
jecxz
out
in
enter
cmp
das
xor
aaa
fdivrl
cmp
loope
and
jecxz
mov
stc
enter
fucomip
lret
repz
std
cmc
int3
lret
out
and
out
repz
call
lea
in
icebp
call
in
lock
and
test
jecxz
mov
out
cld
sarl
shr
xor
and
in
xchg
mov
out
enter
mov
das
ret
call
idivb
jmp
out
ds
ret
cld
decl
cmc
out
jecxz
stc
in
xor
loopne
fnstsw
clc
aas
loop
jecxz
ret
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
mov
movl
mov
movzwl
xor
mov
jmp
aad
aas
fst
int3
aad
adc
cmp
sub
jle
add
loope
std
fmuls
jecxz
out
fmul
xlat
aam
lret
aaa
and
fincstp
rcl
fmul
int3
fcmovnu
call
iret
neg
ret
rcr
std
repz
xlat
xlat
cmp
addl
rcr
ljmp
fdivl
iret
fdivrs
sti
adc
fmul
fiaddl
out
not
enter
jmp
aam
cli
hlt
ds
fcmovnu
add
in
faddl
aam
cmp
icebp
fcmove
sar
std
cmc
shl
loopne
repz
orb
int
neg
jmp
cmp
test
mov
aad
in
leave
in
jecxz
test
rol
aad
int3
cmp
lock
shr
ret
mov
leave
enter
xchg
xchg
in
jecxz
into
jmp
loope
test
fsubr
rcr
loop
or
iret
loop
lret
in
into
fsub
jmp
int
ret
iret
cli
fucom
mov
sti
adc
jecxz
repz
fdivrp
cld
loop
loope
ret
fucom
in
mov
loope
jmp
in
xchg
in
enter
out
shlb
in
sar
aad
clc
int3
loop
into
mov
out
loop
lret
cmp
fnsave
jmp
ret
cmp
mov
sbb
jecxz
out
jmp
cmc
aad
hlt
clc
idivl
sarl
cmc
xlat
rolb
int3
call
ljmp
int
not
hlt
fnstcw
and
jmp
ljmp
lock
jmp
repz
not
addb
enter
nop
rorl
cmp
lret
fnstsw
int3
cmp
xlat
mov
int3
mov
mov
iret
xor
fcomp
leave
std
shl
sbb
mov
dec
xchg
cld
repz
int3
xchg
lret
fcom
cli
cmp
shl
fcmovne
test
loop
enter
ret
or
xorl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
xorl
xor
cmp
je
mov
mov
sub
add
mov
andl
mov
sub
andl
xor
jmp
into
int
fstp
aam
or
das
clc
push
cmp
cmp
jle
repz
stc
jmp
in
lret
mov
aad
div
loope
icebp
add
out
enter
cli
mov
test
lret
in
jecxz
cmp
ljmp
out
in
fcmove
out
mov
mov
hlt
jmp
in
lret
das
xor
sar
xor
cli
std
fsubp
cli
fld
ds
in
leave
stc
fsqrt
lea
aaa
sti
xor
std
int3
clc
jecxz
addb
or
repnz
xchg
call
fdivs
cld
cli
lret
in
xlat
cli
cmp
ret
fisttpl
lret
les
fdivr
lret
iret
fxtract
repnz
ror
lock
cmp
addl
mov
int
test
vshufps
lret
leave
int
out
iret
repnz
sti
shl
jecxz
shl
or
in
xchg
xor
ret
sti
imul
out
cmp
aad
fiaddl
clc
sti
cli
aas
xchg
rcr
sub
aad
shlb
out
cmc
std
icebp
xor
cmp
cld
iret
aam
les
enter
shl
test
out
neg
out
fscale
icebp
leave
stc
mul
xlat
in
repz
in
loopne
leave
cld
jmp
out
lds
in
cmp
int3
sti
int3
cmp
rol
aas
sar
mov
mov
xlat
clc
loop
ljmp
cmc
aam
enter
loope,pt
cli
aam
repnz
mov
mov
fucom
in
ror
xchg
mov
loopne
in
xor
hlt
ljmp
shr
addl
fdivr
stc
loop
adc
in
hlt
lret
int3
fstpt
cmc
adc
ret
sbb
aam
lret
in
iret
xchg
fmul
bnd
xchg
aad
jmp
xor
out
in
fistpll
jecxz
test
lock
ffreep
sbb
rcl
enter
sbb
iret
ss
int
ds
xchg
add
orl
xor
xor
enter
ror
ror
cld
cmp
movb
nop
faddl
ret
icebp
lock
not
rcl
cmp
xor
aad
mov
and
inc
add
test
add
mov
subl
jmp
leave
rol
ret
int
cwtl
stos
cltd
fs
neg
adc
jle,pt
cmp
jle
ffree
movl
mov
xor
aam
rolb
xlat
test
aas
test
loopne
mov
les
ret
icebp
xor
out
repz
int3
rcr
into
jecxz
out
fld
xlat
faddp
jecxz
into
fdivp
in
xor
test
int
call
std
incl
hlt
testl
in
xor
clc
fsub
cld
cmp
into
clc
lock
lret
lret
or
jecxz
repz
aam
aam
repz
call
xlat
jmp
cmp
enter
cli
in
ljmp
enter
xlat
cld
cmp
out
shl
cli
out
loop
jecxz
int3
loope
int
rol
fstpt
clc
cli
idiv
call
cmp
out
aam
test
sbb
out
enter
mov
cmc
loopne
aam
xlat
lock
stc
clc
std
loop
sar
int3
loop
ljmp
int
lret
ss
rcl
out
jmp
rcl
mov
rol
clc
cmp
xchg
call
ret
fdiv
int
out
rcl
cmp
iret
in
in
mov
mov
jmp
call
ljmp
rolb
fld1
jecxz
mov
jmp
std
loope
in
enter
int
cs
fmul
call
push
loope
xchg
cld
loope
lret
in
lret
sbb
aaa
loope
hlt
cmp
aam
int
in
in
shl
lock
std
mov
loope
mov
repz
enter
ror
ss
into
ret
stc
fucom
rcr
ds
std
fldpi
cld
in
ror
in
xlat
fnsave
sarl
out
cmp
fld
enter
in
xlat
cmp
repz
enter
out
int3
rcl
into
loopne
mul
iret
cmp
loop
int
shr
jecxz
repnz
jecxz
cs
lret
cld
in
out
ljmp
test
mov
fucomp
loope
loopne
fcomip
aad
rcr
ret
lret
cmp
neg
cmp
xlat
shl
rolb
add
movl
jmp
mov
incl
xor
jmp
into
into
rol
rol
rcl
mov
or
nop
sub
into
sarb
add
ffreep
cmc
hlt
jmp
or
orl
ljmp
rol
loopne
test
xchg
fisttpll
repz
cmp
addb
sti
mov
in
aad
testb
in
mov
xor
in
clc
loopne
sti
rcl
in
lds
in
or
mov
lret
subb
std
out
sti
adc
fnstsw
sti
testl
mov
rol
rcr
leave
fcmove
neg
shl
rol
lock
fcomi
jmp
shr
nop
rolb
lret
in
xor
test
cmc
ret
ffreep
sti
lea
out
enter
repz
jmp
xlat
icebp
rcr
repnz
not
out
aad
cmc
call
incl
xlat
int
out
cmp
fyl2x
test
lock
loope
jecxz
fadd
mov
xchg
xchg
mov
xor
ljmp
out
stc
cli
cmp
ret
in
mov
adc
iret
das
aad
aad
xor
sarb
ds
add
jmp
out
stc
shl
sbb
xchg
jecxz
shl
xor
aaa
std
loope
std
shl
std
out
fstp
xchg
in
test
mov
xchg
repz
jecxz
lret
xor
ljmp
and
ret
test
out
loope
leave
xchg
xchg
lret
aam
icebp
int3
cld
shl
cmp
ljmp
lret
shr
mov
icebp
hlt
cmp
cmp
ret
xlat
cmp
aad
xchg
loop
mov
xor
int3
icebp
out
out
aam
out
fdivrl
enter
cmp
test
mov
test
test
shr
loopne
in
loop
enter
into
fstp
clc
aad
out
repnz
rcl
clc
fmull
sub
lea
in
cmc
in
icebp
aam
icebp
loop
clc
iret
aam
loope
leave
cli
jmp
lret
int3
fmulp
shr
out
shr
aaa
aam
in
cmp
cli
into
int
add
mov
jmp
ret
leave
lret
aad
flds
filds
pop
mov
jle
cmp
jle
out
in
vcvttpd2dq
lea
jmp
out
sub
lds
idivl
std
and
call
test
lret
lock
xchg
xchg
aas
repz
jmp
out
fdivr
out
out
mul
loop
flds
xchg
lock
loop
int3
repnz
not
iret
cmpb
stc
stc
enter
in
test
cld
xchg
repz
shll
ror
cmp
stc
shll
jmp
shl
in
repnz
mov
faddl
mov
out
xor
in
into
incl
hlt
xchg
in
mov
fdivrp
fmul
fdiv
aam
loop
into
ss
lock
lret
loopne
ret
icebp
add
mov
cld
test
sti
xchg
nop
jecxz
iret
cs
iret
lock
fmul
aas
shl
loopne
fcmovnu
testb
cmp
in
ror
out
in
fxch
cmp
test
hlt
loopne
xlat
leave
int
addl
cli
fsubrp
repnz
lock
flds
lea
xchg
xchg
nop
xlat
xor
int3
xor
xor
rcl
lock
bnd
incl
call
loop
xlat
out
lret
call
std
shl
jecxz
in
xchg
leave
leave
loope
xchg
aad
sub
out
out
xor
loopne
cmp
ret
div
aad
leave
sti
sbb
lock
shll
xlat
into
out
cmp
lret
loopne
fucomi
cmp
cmc
ret
lret
fadd
sbb
mov
jmp
shl
hlt
cmc
iret
out
xor
lret
cmp
aam
in
test
clc
out
enter
adc
iret
call
repz
fstpt
div
repz
out
iret
fcoms
int
xor
fsubr
hlt
sti
xor
loope
aam
in
fdivrs
out
stc
fstp
lret
leave
jecxz
ljmp
out
lret
into
aad
and
rcr
mov
sti
mov
mov
repnz
shl
neg
cmp
mov
jmp
iret
fmul
aad
clc
sub
mov
dec
les
cmp
jle
cld
loop
rolb
cli
test
int3
addb
in
xor
imul
in
clc
xchg
mov
add
incl
jmp
sarb
cli
aam
int3
cmp
int
test
ret
fcomi
jecxz
lret
std
adcb
aaa
rol
xlat
int3
call
loop
ret
shl
shl
mov
ljmp
mov
xor
iret
aaa
icebp
out
jmp
jecxz
repnz
jecxz
mul
in
call
mov
jmp
cmc
sub
aaa
lret
clc
sbb
sarb
shl
lret
lret
icebp
loopne
jmp
aam
shl
jmp
fnstsw
ret
call
fiaddl
jecxz
in
rol
das
les
xor
faddp
jmp
into
rcr
out
cld
mov
cld
int
mov
hlt
out
loop
in
std
shl
lret
rcl
rol
repnz
cld
xchg
test
xchg
fucomip
repnz
xor
out
cmp
shr
icebp
shl
int
cmp
fcmovu
ret
ret
and
call
fcomip
iret
shr
les
stc
xor
fadd
sti
std
sub
testl
mov
jmp
loopne
ljmp
stc
fst
cmp
fcomi
cmc
jmp
xchg
loopne
iret
int
xor
xlat
fcomp
int3
cmp
repz
mov
mov
lock
or
cmp
cmp
cmp
repz
incl
ret
sti
flds
call
int3
aam
lret
stc
cmp
lret
testb
fsub
ret
int3
loope
int
xchg
fmul
lret
cmc
das
imul
cmp
jmp
ss
iret
cmp
fistpll
cmp
enter
in
iret
rolb
aas
aam
cmp
in
int3
lret
sti
addb
std
test
jmp
mov
jmp
or
cmp
cmp
out
rol
loopne
cmp
out
repnz
clc
jmp
mul
ror
faddl
hlt
iret
fxam
leave
cmp
enter
ret
cld
inc
add
add
add
mov
jmp
rcl
xlat
fcmovnu
rcr
in
repnz
insl
mov
jle
cmp
jle
xlat
fnstcw
loope
sarl
test
xrelease
fiaddl
and
in
int
cmp
cmp
call
call
cli
in
int
fnstsw
lret
fdiv
out
cmp
cmp
hlt
fldl
lret
loopne
sbb
nop
test
aas
repz
xlat
in
repnz
shr
iret
aam
out
out
hlt
iret
sbb
mov
fucom
mov
hlt
ljmp
in
iret
jecxz
std
rcl
leave
loopne
out
in
mov
fildl
repnz
repnz
fnstcw
hlt
loope
sarb
xchg
std
loop
icebp
test
in
lret
fmul
jmp
repnz
in
hlt
ret
loope
fucomi
aad
test
test
in
xor
jecxz
int
xlat
jecxz
fsub
cmp
shr
out
loop
int3
int
in
cmc
hlt
iret
shl
out
icebp
cmc
cmc
cmp
sar
aad
out
enter
ljmp
loop
in
lock
icebp
out
hlt
shl
aas
hlt
cmp
out
mov
test
mov
xor
into
ror
cmp
fcmove
inc
out
filds
in
mov
addl
xor
fdiv
out
cli
int
ds
loope
les
mov
aam
jmp
into
cmc
lret
flds
lock
in
testl
icebp
xlat
cmp
repnz
lret
ror
out
fcmovbe
sarl
mov
adc
out
in
out
idiv
cmp
lret
loop
in
xchg
cli
jmp
fsubr
fyl2x
test
into
cld
repnz
iret
out
lds
shr
xlat
clc
in
cli
cli
into
int
loop
neg
aad
ljmp
shl
aad
enter
xor
rcl
fsubr
jmp
sti
loopne
xchg
in
lock
div
out
cs
into
ret
xor
divb
repnz
test
xchg
stc
in
loop
lret
iret
in
loope
out
vcvtdq2pd
iret
fdivs
add
push
add
add
aam
iret
fcmovnbe
fcomp
insb
jae
ficoms
cmp
jle
add
shr
icebp
cmp
repz
fdiv
in
fst
loope
fndisi(8087
nop
call
shr
repnz
stc
iret
cmc
cmp
int3
fcmovnbe
idivb
in
aad
addb
int
shr
fcmovnb
repz
sti
fstpt
roll
jecxz
jmp
loope
xchg
test
aam
ds
iret
xchg
jmp
out
lret
iret
mov
xor
repz
out
cld
fcomip
repz
stc
loopne
fcmovnb
fcmovbe
aam
ljmp
aam
aas
loopne
out
cli
out
cmp
cmp
shl
cli
loop
decl
mov
iret
ljmp
lret
ret
sar
repz
lret
xchg
shl
aam
xor
cmp
fcomip
shl
roll
shr
call
iret
aam
cmpl
into
sub
xor
lret
out
fcompp
test
xchg
mov
mov
repnz
mov
jmp
jmp
push
iret
hlt
cmc
hlt
cld
sti
xchg
sar
in
sub
in
test
lret
out
xlat
and
test
fcmovb
sti
and
std
sti
cld
int
ror
loopne
aam
repz
in
aaa
repz
cmp
test
out
loope
sti
out
mov
not
icebp
shl
fcmovnu
rcl
jmp
sarb
loope
ret
loopne
out
loop
mov
fisttpl
icebp
in
ljmp
cmp
sar
out
aas
les
in
fisttps
hlt
rol
lret
int
lock
cli
int
shl
fcomp
test
sarl
into
fcmovnu
sti
out
fists
shl
int
out
cli
lock
ret
in
ret
mov
dec
xchg
loop
in
nop
loop
fdivs
shl
cmp
sti
cli
dec
out
lds
jmp
in
fucomi
xchg
mov
into
xor
in
xor
lock
test
aad
in
shl
mov
aad
aam
in
cmp
mov
add
pop
jmp
aas
lret
ror
lahf
jmp
mov
jle
add
cmp
repnz
cld
xlat
loop
rcr
lret
incl
xchg
shlb
ror
std
ds
aas
xor
xchg
sti
inc
movb
xchg
cmc
shl
jecxz
ret
xor
ds
lret
cmp
lock
loope
lret
addb
rol
loopne
shl
shl
fdivr
imul
cmpl
icebp
fmul
cmc
fadd
xchg
leave
mov
nop
int3
lock
stc
rcl
cmp
icebp
int3
cmp
fildl
fldl2t
loope
clc
mov
in
call
shlb
in
shr
lret
xor
xlat
test
lock
fcmove
test
mov
sub
xchg
jecxz
in
aad
out
cmp
ss
cmp
sti
in
aad
rol
repnz
ret
mov
lea
not
lock
out
int
sti
std
rcl
out
fcomp
test
out
rcl
jmp
lret
ljmp
ss
cmc
sti
xor
ds
lds
xlat
xchg
xlat
xlat
out
loope
test
sub
leave
in
bnd
shlb
fcmovu
sti
test
fneni(8087
clc
fmull
repnz
lret
cld
fcmovne
aad
out
fcmovu
ret
ljmp
xchg
aam
in
loopne
into
jecxz
out
out
aam
out
loopne
aaa
xchg
idiv
enter
clc
decb
not
iret
out
sub
ds
cli
cld
fimuls
loop
xchg
rol
repnz
in
in
cmp
ret
xchg
cmc
jmp
fsubr
fists
loope
ret
aaa
lret
fdivrp
lock
les
xchg
sbb
loopne
out
stc
sub
hlt
loope
shl
aam
les
mov
lret
lret
popl
clc
aad
stc
cli
cmp
std
rol
idiv
rcl
repz
lret
mov
xchg
lock
lock
aam
repnz
in
sarb
fyl2x
out
xor
repz
sti
dec
mov
fiadds
repnz
mov
mov
xor
mov
jmp
ror
aas
fstp
int3
fisttpl
dec
shrl
inc
int
jle
add
xor
int3
xor
cmp
aas
addl
in
ljmp
iret
lds
shlb
ror
jmp
clc
faddl
call
stc
neg
fldl
int3
ss
fstp
loopne
in
cmc
cmp
fdivr
jmp
std
fucomp
out
orl
std
aad
cmc
loope
out
hlt
mov
lret
std
neg
mov
and
xchg
fcomip
in
shl
fmul
jmp
shl
aas
fdiv
test
loop
icebp
cli
in
mov
jmp
repz
ss
stc
lret
xor
mov
jmp
out
test
out
icebp
in
les
cmp
shl
sti
shl
clc
addb
lret
lret
loopne
std
rcl
lret
aad
enter
sar
sarl
push
mov
mov
mov
ljmp
rcl
jmp
rcr
ror
cld
fsubp
mov
and
test
xor
in
xor
std
cld
fdivrp
loope
fiaddl
in
test
call
xchg
sbb
xor
ret
fstpt
not
repz
div
decl
in
test
into
lock
call
hlt
roll
ret
cli
sti
mov
iret
mov
rol
fdivr
jmp
lret
bnd
loope
fsub
out
ds
jecxz
aam
loop
in
int3
out
incl
cmp
rcr
cmp
cmc
repnz
in
ljmp
mov
out
out
lret
stc
enter
loop
fdivr
aam
mov
jecxz
in
stc
xchg
hlt
call
hlt
cmp
int
jmp
inc
xlat
mov
enter
xor
cmp
iret
test
int3
fcomp
icebp
xchg
xlat
mov
loopne
sbb
sub
fdivs
divl
sarl
aad
fnstsw
sar
rol
mov
call
lret
sti
fsubp
xor
in
ss
icebp
mov
and
or
jmp
ret
ret
rcl
aad
sbb
mov
cmp
jle
jmp
int
ljmp
cmp
loop
xchg
cli
in
call
loope
clc
cmp
out
aaa
iret
lret
aad
jmp
rcl
fcmovnbe
std
mov
in
ret
mov
fstl
in
fcmovne
aas
rcr
loopne
cmp
aam
aam
ljmp
std
loope
loop
loop
out
aam
loopne
aas
in
loop
out
out
lret
jmp
cld
into
ljmp
sar
call
hlt
fldlg2
cli
repz
enter
loope
loope
call
aaa
leave
leave
xlat
cld
jmp
fistpll
fxch
hlt
hlt
aam
cmp
aad
stc
jmp
into
ljmp
ljmp
fidivrs
out
int3
test
aad
jmp
mov
stc
mov
repz
fldcw
cmp
cmc
sti
mov
loop
test
loope
leave
mov
xlat
icebp
in
ss
icebp
ss
fdivp
fmulp
sti
out
hlt
mov
call
fmull
xor
xor
idiv
rolb
fcomip
testl
in
xor
ret
shlb
cmp
roll
cli
imul
in
fisttpl
shl
xor
out
out
xlat
jmp
out
aam
in
call
fdivrp
incb
in
lock
in
stc
xor
cld
aad
shl
enter
loope
into
jecxz
repz
mov
das
into
cli
out
shrb
sarl
shr
aas
lock
test
fsubrp
std
fdivrp
fsubr
in
ljmp
out
clc
jecxz
leave
std
fiaddl
test
icebp
cmp
stc
xchg
orb
hlt
xor
rcr
aam
leave
int
jecxz
lock
leave
out
stc
call
loopne
cmc
repnz
xlat
out
cmc
out
jmp
vpandn
stc
fcmovnb
lret
movl
rcl
fcmovnbe
fmul
stc
rolb
repnz
testl
loope
lock
mov
pop
ret
push
mov
jmp
lret
aad
int
ss
shrl
sub
sarb
adc
jle
das
ror
lret
cmc
jmp
cld
repz
testb
jmp
repz
jecxz
loop
xor
repz
cmp
fdivrs
idiv
iret
in
into
cmp
cli
in
xlat
fchs
lock
adcl
ljmp
aas
icebp
rcr
hlt
fcmovu
rolb
clc
std
test
test
aam
out
in
cmp
sarl
testl
idiv
mov
and
int
incl
leave
aad
std
std
cmp
cmp
lds
lea
out
sub
imulb
lock
fcmovu
rcl
xlat
sarl
aas
test
enter
cmp
mov
out
aam
lret
fsubr
aaa
cmp
out
clc
ret
icebp
decl
lock
xor
fcmovnb
ss
cmpl
mov
rcll
xchg
hlt
out
xor
cmp
int
cmc
rol
div
sti
ret
mov
enter
out
jmp
decb
in
repz
jmp
movl
test
in
xchg
int
out
cmp
std
fsubr
fyl2x
sti
shll
mov
loope
lds
ljmp
shll
shl
in
int
shr
ret
call
iret
jmp
loope
xchg
out
int
idiv
fld
fcom
ds
loope
sbb
test
jmp
or
rol
aad
vpaddsb
leave
in
cmp
aas
incl
mov
int
hlt
adc
leave
into
lret
lret
stc
ds
test
cmc
aad
ljmp
filds
mov
hlt
cmp
cmp
iret
shl
test
repz
jmp
dec
mov
loope
jmp
lret
rcr
fstp
cmc
in
rcr
xchg
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbbl
jmp
ret
ror
int
outsb
xor
rcl
jle
adc
jle
loope
and
mov
mov
leave
sar
int3
fxch
in
int
inc
rcr
mov
cli
out
icebp
bnd
das
in
ret
leave
int
ss
sarb
xor
stc
loopne
sti
mov
fsub
fsub
xchg
mov
mov
ror
icebp
lret
stc
fidivrl
flds
add
sar
in
ljmp
ss
mov
std
xor
lock
loope
ds
jmp
rorb
fcmovbe
ljmp
loopne
ds
out
out
out
cli
jmp
lret
out
mul
into
xor
fcmovu
aad
int3
in
cmp
cmp
out
out
shr
out
aam
int3
stc
fiaddl
lret
in
enter
aam
cli
cmc
sbb
fcmovnb
in
ret
les
rcr
add
jecxz
aad
in
fdiv
xor
call
cmp
aam
fcmove
jecxz
out
cli
leave
xchg
lds
xor
out
repnz
fucom
fcmovb
cmp
cmc
cld
lret
out
jmp
fstl
sub
hlt
rcl
jmp
repnz
ds
shl
jecxz
aad
rorb
lret
repz
hlt
into
into
fldl2e
movb
fsubr
loopne
clc
xlat
in
fmul
enter
call
cmp
stc
jmp
out
neg
xlat
add
xchg
leave
adcb
add
aaa
xor
icebp
leave
repnz
cli
into
in
filds
cmc
hlt
fdivrp
loopne
cli
addl
into
ss
jmp
lock
ftst
faddl
in
lock
in
cmp
lret
idiv
in
sarl
aaa
clc
repnz
call
lock
in
out
cs
iret
cmp
jecxz
cmp
sti
shl
div
jmp
in
loope
in
jmp
into
aam
out
clc
mov
adcl
xor
mov
adcl
add
jmp
fcom
xlat
push
xlat
outsb
sarb
jle
adc
jle
cmp
ljmp
out
out
jecxz
cld
incl
out
lret
in
out
cmp
cmp
repz
in
aas
fsub
rol
cld
inc
ret
filds
xor
cmp
aam
cli
loopne
fcomip
add
leave
or
in
in
int
cmp
cld
in
aaa
out
fiaddl
sti
repz
mov
cli
jecxz
mov
shrb
cmp
mul
stc
idivb
aam
aas
cli
cmc
sti
cld
clc
jmp
addl
cmp
shl
out
out
xor
aas
fdivp
ret
lret
fsubp
in
icebp
xchg
icebp
test
xlat
shlb
shll
xlat
out
fdivrs
aad
fsub
cmc
sarl
loopne
inc
filds
aam
xchg
aam
in
lret
aaa
out
imul
sti
into
stc
cld
std
jecxz
cld
lret
test
in
jmp
xlat
cmp
int
cmp
repnz
cmp
clc
test
addb
in
xchg
fbstp
idiv
in
faddl
cmp
rol
fildl
mov
loope
xor
idiv
in
cmp
xabort
ds
out
repz
int3
aas
ret
enter
sar
aas
icebp
in
addb
std
in
cli
in
mov
test
lret
jmp
aad
out
cmp
fcmove
test
shr
mov
mov
adcl
xlat
fistpll
not
adc
cmc
neg
xor
aas
fmul
rorb
jmp
cs
icebp
shll
in
cmp
loopne
loope
addl
mov
hlt
repz
std
div
cmp
repnz
aam
lds
loop
out
fcmovnu
mov
xorb
lret
out
aam
ss
inc
cmc
sbb
ret
call
rorb
popa
add
movb
lea
mov
jmp
rcl
rol
rol
rcl
mov
popa
in
neg
jle
adc
jle
clc
xchg
into
std
out
addb
in
int
icebp
in
repnz
cmpl
fadd
out
lret
lea
call
in
divb
fcmovu
sarb
clc
and
neg
icebp
fimull
jecxz
lea
rol
int3
out
in
cmp
repnz
fcomp
shr
flds
cmp
out
xchg
jmp
out
test
cld
fdiv
loope
repnz
call
mov
out
into
mov
imul
lret
iret
cli
xor
stc
shl
jecxz
sar
stc
hlt
in
out
jecxz
in
fcmovnbe
int3
xchg
aad
clc
cmc
aaa
repz
lret
repnz
into
sbb
lret
jmp
test
xchg
ret
xor
ss
sar
std
xor
adc
hlt
loop
enter
xchg
rclb
aad
cmp
fiadds
in
jmp
xchg
mov
loope
das
out
rcl
xor
repnz
jmp
into
fadd
ds
idiv
ret
fcmovnu
test
xchg
mov
lock
xor
cli
fidivrs
in
rolb
ffreep
loop
cli
loopne
std
cli
jmp
out
aaa
hlt
cmp
int3
xor
xor
into
icebp
cld
sar
hlt
mov
rcr
int3
aam
ret
in
test
ds
std
aad
repnz
decl
xchg
lds
int3
std
aam
jmp
fcomip
adc
ret
cld
lds
fneni(8087
or
into
les
ret
fcmovnu
iret
loope
jecxz
in
xchg
sti
test
movl
jecxz
cmp
aaa
aad
call
xor
incb
fucom
in
jecxz
xchg
xor
xor
sti
ss
repz
leave
fcmovnu
fildl
adcb
aad
in
std
cli
xor
inc
incl
add
add
add
or
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
push
push
push
push
call
jmp
mov
movl
xor
addl
sub
mov
sbb
movl
not
movl
andl
mov
mov
push
jmp
into
mov
fmul
iret
fucomp
sub
inc
sbb
jno
mov
jle
adc
jle
cmp
fprem1
and
stc
cld
test
lock
fld1
cmp
aam
enter
cmp
cmp
out
loopne
out
jmp
stc
xchg
out
nop
xor
repnz
iret
jmp
cmp
shr
cmp
decl
jmp
ljmp
aaa
out
xor
xlat
jmp
repz
rcr
rol
cld
ror
test
jecxz
mov
ret
xchg
in
mov
fcmove
lret
clc
neg
idivl
int
aam
aam
xchg
leave
in
lret
ror
in
in
loopne
jmp
jmp
ljmp
test
mov
xchg
sub
shl
into
ds
xlat
hlt
ret
orb
mov
out
mov
out
out
cmp
idivl
sti
out
std
cmpl
out
ljmp
fsqrt
mov
loopne
loope
aam
xor
aam
fdivr
rcl
stc
in
out
cld
and
lret
xlat
iret
addb
out
sub
neg
xor
int
fcmove
std
add
sti
xchg
icebp
test
xchg
incl
fdivr
xor
shr
iret
rcr
xor
repz
cli
ljmp
mov
test
cmp
clc
in
loopne
jecxz
xchg
cmp
lea
int3
call
out
cmc
xlat
cmp
cmp
fidivrs
repz
fistpll
loop
loope
shl
repnz
xor
clc
shr
in
rcl
xor
cld
fcomip
rol
aas
stc
stc
inc
in
loop
in
xorb
enter
int
loope
or
aaa
xchg
cmc
fcomp
fsubp
enter
jecxz
loopne
loopne
sub
ds
aaa
in
xor
loopne
rcr
cli
lret
out
mov
into
repz
int
shr
icebp
out
xor
lret
repz
neg
aam
shl
sbb
sar
xchg
xor
decl
mov
movl
add
jmp
movl
mov
mov
movl
inc
jmp
ret
xlat
rcl
lret
xchg
sub
mov
popf
fdivrl
adc
jle
xchg
iret
ret
cmp
out
cmp
loope
aam
mov
fld
leave
fsubr
lret
repz
jmp
xlat
clc
jmp
cmp
xlat
call
in
leave
test
out
loop
sub
shl
call
cmc
bnd
clc
hlt
hlt
add
cmc
loope
test
loop
xchg
sub
in
cmp
aaa
into
cmp
clc
cmp
cli
cmc
ret
test
mov
std
fdivr
out
lret
ljmp
fdiv
xorl
xchg
lret
in
in
fchs
lret
out
icebp
enter
repz
iret
cmp
rolb
aad
les
lret
shl
loope
xor
cmp
leave
aaa
fmul
idiv
cli
std
xor
sbb
idiv
xchg
iret
std
sti
orb
in
fcmovnb
stc
aam
repz
fnstsw
loope
orl
out
hlt
aas
call
lret
cld
les
mov
lret
in
leave
and
mov
hlt
icebp
enter
sti
enter
fsubr
ret
stc
std
frndint
or
jmp
out
nop
out
xchg
in
vpsllw
iret
cli
int
out
fsubr
ret
out
icebp
roll
out
fcmovb
decb
enter
std
into
rcl
aam
ffreep
aad
fsubp
fcmove
fisttps
into
sar
loop
out
cmc
loopne
fdivrs
rol
in
xchg
clc
fsubr
fadd
test
repnz
icebp
cmp
xor
rcl
fcomip
out
xlat
cmp
aad
sub
idiv
lock
hlt
lret
in
shl
out
loop
in
div
aas
clc
fadd
cmp
test
jmp
in
loop
shlb
cmp
xlat
cmp
clc
cmp
incl
cmp
into
addl
int3
sar
out
repz
enter
cmp
cmp
movl
jb
dec
jmp
aam
fadd
fstp
pusha
shl
or
jle
adc
jle
ffreep
cli
mov
test
icebp
cmc
in
cmc
stc
rcl
cld
cmp
out
loopne
cmp
aas
ret
cmp
mov
fsubp
fsubr
mov
das
out
fmulp
int
cmc
cmp
jecxz
aad
out
cli
in
out
mov
test
iret
xor
cmc
out
xlat
hlt
jecxz
in
roll
xlat
fmull
loope
in
out
shr
in
call
aas
loopne
iret
cmc
int
idivl
cli
rcr
int3
addl
int
enter
repz
cmpb
xchg
in
cli
enter
cli
jmp
iret
loop
loopne
hlt
in
cld
lret
ljmp
hlt
cmp
aam
fsub
int3
fcmove
sti
lock
cmc
ss
ret
icebp
int
int
test
aad
test
clc
ret
out
leave
call
das
xlat
xor
int
jmp
rol
loop
xlat
bnd
and
out
cmc
test
iret
ss
out
xor
filds
fsqrt
std
shl
enter
int
into
mov
and
lret
fsincos
fdivrl
hlt
fsubrp
cld
loope
loopne
mov
cmp
or
enter
xchg
ret
in
repz
cmc
cmp
shl
div
cmp
loope
lret
cld
mov
fisttpl
ljmp
into
in
shl
out
icebp
int3
fnstcw
loop
test
sti
cmc
in
test
lret
nop
std
hlt
xchg
xor
xor
rcr
loop
test
mov
mov
test
jecxz
mov
not
cmp
fndisi(8087
cmp
xlat
icebp
aam
in
hlt
ret
not
xchg
std
leave
fcmove
std
in
xor
iret
out
ror
in
clc
aad
filds
rolb
mov
loope
xchg
in
aaa
fucomip
aam
aas
fstp
fsubp
shl
addb
xchg
mov
lret
xchg
aam
enter
push
clc
sbbl
mov
addl
jmp
fcomp
fistps
je
outsb
push
inc
loopne
jle
add
test
out
dec
xlat
hlt
and
hlt
test
jmp
repnz
lret
stc
in
lock
hlt
ds
repnz
aam
aam
sti
xchg
leave
idiv
enter
xchg
adc
aaa
lock
stc
cmp
lret
fdiv
fcmovbe
mov
std
decl
enter
lret
jmp
ret
orb
into
fucomi
addb
sti
out
cmp
enter
fld
in
jecxz
rorl
mov
ljmp
aam
ds
iret
repz
rcr
sar
fistpll
out
jecxz
out
xchg
dec
rcr
sub
cmp
int
les
clc
shl
call
fstp
in
xchg
jecxz
fstl
fyl2x
std
aas
cmp
not
mov
std
jmp
fcomi
ljmp
xor
out
leave
lds
cmp
in
ror
ret
hlt
out
in
test
jmp
loopne
repz
loop
xor
enter
leave
cmp
ror
and
fcomp
int3
mov
mov
mov
repnz
iret
fcomip
xor
iret
in
lock
loop
out
jmp
sbb
out
leave
ret
ljmp
icebp
aad
repz
clc
aam
inc
cld
enter
mov
call
out
cmp
cmp
rcr
aad
std
xor
in
mov
cmc
test
sti
sarl
cmp
out
aas
hlt
ror
rcr
mov
fadds
aad
hlt
repz
shl
fdiv
addb
aam
test
sti
out
loope
leave
enter
mov
loop
xor
xlat
xor
jmp
leave
loop
shr
loope
test
fisttpl
loope
lock
mov
out
cmp
in
int
cld
cmp
jecxz
xor
add
movl
cmp
movl
jmp
iret
aas
aas
ror
rcl
ret
pushf
mov
adcl
jle
adc
jle
fucom
repnz
adc
test
les
fsubr
lock
cmp
aas
mov
clc
stc
loope
decl
out
in
lret
enter
loope
ds
std
fmuls
fisttpll
enter
cli
call
rcr
fnstsw
hlt
loope
hlt
out
loope
jmp
in
call
repnz
lret
cmp
cmp
test
out
fldz
addb
jmp
hlt
jmp
shl
in
shl
out
cmp
fcom
jmp
clc
out
cld
call
xchg
out
aaa
shr
cmp
sarl
int3
loopne
aam
iret
ret
cmp
test
cmp
test
out
loope
mov
rolb
in
xor
stc
aam
int3
int3
cmp
lock
loope
loop
jmp
jmp
std
in
leave
lea
lret
fidivl
aad
xor
stc
div
int3
aam
roll
fstp
loop
fiadds
test
repnz
xor
std
out
stc
cmp
rcl
test
clc
sbb
int3
movl
ljmp
fnstsw
ret
hlt
fst
ret
lds
sti
in
enter
icebp
cmp
cmc
ljmp
int3
loopne
ret
test
mov
testb
std
filds
rol
out
in
cmc
fld
int3
lds
test
mov
lret
into
mov
das
fcmove
div
int
fcmovnb
lock
lret
int3
ret
in
cmc
testb
lock
fdiv
ror
in
aam
loope
testb
addb
shl
sub
out
into
sar
sarl
lret
in
cli
aad
cli
hlt
rcr
lock
iret
sbb
xchg
jecxz
repz
aam
repz
cmc
loopne
icebp
std
jmp
clc
clc
jmp
stc
cld
iret
call
loope
ss
ljmp
adc
add
jmp
int3
rol
aad
pop
pop
movsb
or
outsl
pop
imul
jle
rcr
aam
out
leave
out
cmc
xchg
in
out
cli
xor
xor
xor
ss
fldl
stc
jmp
int3
ljmp
xor
out
repz
in
cmp
cmp
fsub
jmp
std
out
loop
jmp
nop
xor
into
out
jmp
cmp
into
sbb
ds
xlat
clc
mov
mov
int
repz
jmp
ljmp
sar
roll
enter
in
popl
loopne
jecxz
aaa
repz
xlat
int3
cmp
loop
out
mov
ljmp
hlt
int
sub
hlt
icebp
fcmovnu
fidivrs
loop
std
cmp
out
loopne
leave
loop
in
sub
jmp
xchg
test
loopne
sub
hlt
xor
ss
repz
jecxz
adc
iret
loope
sar
enter
out
nop
sar
fsubr
sti
cmp
iret
ds
rcl
fdivrs
aam
std
jmp
sti
mov
popl
out
sub
cmp
fcomi
std
shl
mov
xchg
stc
in
loopne
nop
out
xchg
call
lock
std
in
fnstsw
aam
repz
shl
addb
in
xchg
jmp
cmc
test
and
sarb
shl
out
inc
iret
leave
test
xchg
out
not
jmp
in
iret
stc
rcl
xor
out
aad
int3
lret
rclb
xor
ss
fdivrl
not
sbb
jmp
mov
les
hlt
xor
aas
int
fneni(8087
jecxz
aam
cmc
orl
cld
call
into
loopne
ror
lret
xlat
aam
loopne
fdiv
sarl
cld
faddl
fmul
into
in
xchg
int3
ret
call
iret
out
fnstsw
fcomip
fnstsw
clc
hlt
ret
mov
call
repnz
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
mov
mov
jmp
ret
into
sarl
rol
rcl
ja
cs
movsb
jl
jle
adc
jle
not
vpaddsw
enter
out
cmp
cmp
in
cmp
enter
loope
dec
jecxz
icebp
mov
aaa
out
cmp
cmp
jmp
iret
in
cmp
hlt
clc
testb
nop
nop
into
iret
mov
out
cmc
xor
sti
std
div
lock
roll
mov
xchg
std
mov
mov
enter
clc
jmp
sar
rcl
adc
test
mov
rcl
in
sub
cmp
ss
test
out
stc
out
les
jmp
adc
in
ljmp
fdivp
cmp
hlt
std
cli
aam
jmp
test
repnz
mov
stc
call
repz
fucompp
hlt
std
repz
cld
fucom
loope
xchg
jecxz
mov
fld1
sub
in
sti
std
rcl
idivl
aad
std
hlt
testb
in
lock
lock
int3
loopne
div
ss
rcr
int3
lret
clc
out
lock
fcmovb
xlat
ljmp
xchg
int
int3
ljmp
aam
sar
loop
clc
mul
rcr
testb
rcl
test
hlt
ret
ror
cs
leave
aaa
into
out
fyl2x
aad
div
mov
aam
faddl
mov
hlt
stc
div
shr
incb
adc
fildl
mov
repz
div
call
fdiv
cmp
jmp
stc
mov
fmulp
iret
das
fldz
aaa
fcomp
sar
fcomp
repz
out
test
repnz
ljmp
xchg
repnz
in
xlat
call
cmp
test
loopne
loopne
sti
xchg
addl
call
adc
cli
and
fstp
icebp
out
out
in
fsubr
jmp
lock
out
ror
loop
ror
cld
xor
mov
add
movzwl
mov
jmp
leave
aad
movsb
inc
jb
sub
jle
adc
jle
and
sti
fldl
fst
rol
cmp
int
out
repz
flds
iret
sti
fisttps
out
aam
leave
aam
in
cmc
std
sti
testb
out
vcmpps
xchg
in
loopne
aam
sub
xor
fxtract
std
leave
lret
cmp
inc
test
std
enter
stc
int3
or
mov
repz
out
test
cmp
std
int3
repnz
rcr
fprem1
imul
hlt
std
out
test
out
repz
in
xor
fucomp
aad
mul
cli
lock
sti
fiaddl
lret
in
mov
xchg
rcll
ror
jmp
cmp
aam
test
ret
sti
mov
cmp
roll
fcmove
lret
xor
stc
hlt
icebp
sar
fildl
or
icebp
out
out
xor
aaa
xor
idivb
fnstcw
sub
clc
incl
call
loopne
xchg
ljmp
cld
iret
loope
out
loop
in
mov
hlt
ljmp
lds
iret
ret
cmp
fnstsw
xor
cmp
cmpl
add
out
out
out
ret
out
int3
cmc
fsubr
cld
leave
int
cmp
neg
icebp
orb
fldl
ss
in
cmp
xor
into
cmp
shl
loopne
fdivp
hlt
in
ret
loopne
mov
shl
shr
cmc
fdiv
jmp
and
xchg
clc
test
xlat
aad
out
rcl
repnz
out
ror
in
call
int3
sbb
jmp
ror
shl
into
cmp
cmc
aas
ljmp
ljmp
lock
mov
enter
lret
cli
cmp
cmp
cli
cld
cmp
loop
loop
ret
int
test
std
xchg
std
not
xor
enter
movzwl
xor
add
jmp
ret
into
aam
aad
fst
stc
hlt
stos
xchg
inc
lds
inc
and
jle
adc
jle
ljmp
sarl
aas
enter
mov
iret
out
out
decb
lock
in
cmp
cmc
cmp
fsub
std
hlt
jmp
vcmpsd
shl
xchg
shl
clc
jecxz
ret
aaa
cmp
sarl
fsub
cmc
fst
ret
fdivr
in
jmp
jmp
fucomp
repnz
cmc
stc
hlt
out
in
out
shl
out
clc
call
jmp
xchg
fucomip
das
jecxz
in
stc
lret
rcl
repnz
test
out
rol
imul
roll
jmp
xchg
lock
in
ss
aad
imul
fcos
fucomi
ret
fistpll
ret
xlat
leave
ret
loope
enter
in
in
shr
repz
cli
call
in
xlat
roll
xchg
out
xchg
xor
repnz
ss
into
enter
ds
aas
fsubp
int3
out
idiv
test
rorl
fucomi
in
hlt
out
into
repz
fcmovne
fdivp
jmp
repnz
test
lret
lret
cld
out
xchg
in
xchg
ljmp
cli
hlt
leave
xor
loope
hlt
cld
iret
cli
std
rorl
out
in
loopne
xor
out
leave
in
test
icebp
cld
ds
repnz
push
ror
ret
in
mov
loop
ljmp
cmc
loope
sarl
stc
neg
sbb
fdivr
mov
mov
mov
out
into
ss
xor
in
fsin
lock
ss
div
ret
test
fsubr
jmp
mov
aad
leave
jmp
ss
out
iret
jecxz
in
addb
sbb
out
xchg
xlat
out
xor
fldlg2
in
rcl
fcmovnu
rol
fcomi
leave
not
in
rorb
xchg
xor
stc
ss
div
shl
aam
loopne
xlat
out
shr
cli
aad
loope
in
rolb
hlt
xor
cli
out
aad
fdivrs
cmp
cmp
stc
mov
std
aad
jge
mov
jmp
aam
aad
fstp
movsb
ficomps
jb
in
jle
adc
jle
out
stc
mov
mov
loop
rcl
repnz
jecxz
aaa
aaa
in
int3
aaa
rcl
in
cld
fdiv
ret
test
cmp
loopne
lea
loope
xor
cli
jmp
icebp
out
roll
jmp
in
leave
in
int3
mov
aaa
ss
icebp
ljmp
loopne
out
cmc
lret
out
test
in
in
ror
in
ret
cmp
into
iret
aas
cmp
rol
aad
movb
into
fmulp
divb
xor
sti
call
lock
test
cmp
lret
sar
call
aam
xor
fidivl
stc
in
xor
cli
call
loop
fcmovne
in
sub
repz
jecxz
fcmove
fcmovne
rcl
call
ds
icebp
cmp
hlt
lret
lret
xchg
lock
rol
jmp
cmp
cld
int
add
in
loope
mov
cmc
movb
mov
into
vpsubw
xor
cmp
aas
testb
fdiv
vshufps
mov
test
sub
cmc
shl
cmp
out
out
out
fcom
shl
rcl
clc
sti
ror
leave
test
loopne
fisubrs
xor
aad
sarb
xor
fldz
rcr
std
mov
loope
call
out
jmp
lret
out
repnz
out
or
filds
lret
cmp
out
enter
stc
fmul
std
icebp
aas
sti
aam
fildl
nop
xchg
out
in
enter
fyl2x
in
sti
shl
jmp
in
out
sti
jmp
in
ret
out
xchg
jmp
xchg
ret
out
ror
call
cmp
aas
cmp
xlat
neg
leave
out
mov
xchg
ljmp
repz
lret
in
aas
div
out
cli
call
in
jmp
xchg
lock
loopne
shl
in
ljmp
hlt
jmp
ret
lret
enter
int
cltd
movsb
imul
cmc
je
fs
adc
jle
sar
iret
sti
xchg
ljmp
addl
hlt
std
repz
jmp
cmc
sarl
enter
xchg
xlat
loopne
icebp
int3
cld
shl
rcr
in
icebp
aad
iret
cld
xor
fistpll
stc
hlt
xor
mov
and
mov
div
ror
lret
jmp
aam
addb
fstp
loope
enter
out
loop
ljmp
fcom
in
cli
icebp
fld1
testb
sub
ror
in
rcr
aaa
iret
xor
out
ss
lret
int3
out
aad
std
std
lds
fdivrp
ror
lret
aad
out
cmp
fcom
aaa
xor
cmp
loopne
cmc
lret
out
fucomip
std
loopne
ret
int
lret
ds
loopne
in
in
fdiv
aam
loope
in
incb
imul
in
ss
cli
in
fsincos
cmp
cld
into
aad
xchg
xchg
mov
out
fimuls
aaa
xor
in
cmp
shr
out
fsub
rcl
out
shl
jmp
lea
lock
fsubr
jecxz
sti
push
sarb
sarl
fildl
clc
mov
cmc
mov
rcl
ss
enter
xlat
in
rcl
faddp
cmp
neg
out
fists
xchg
loope
xor
vaddsubpd
fsubp
rol
loope
loope,pt
mov
incl
lock
sti
test
icebp
std
call
lret
lret
cmp
jmp
aaa
xchg
mul
fucom
in
call
orb
fpatan
hlt
imul
hlt
fcomi
cmp
xor
cmp
loop
cld
clc
rcl
hlt
out
in
in
enter
cmpl
call
addl
enter
out
fnstcw
lret
fcmovnbe
fsub
in
loop
loope
ljmp
add
ror
fcmovnu
out
mov
fcomi
jle
adc
jle
out
out
xlat
cs
lret
aam
lret
cli
leave
in
hlt
jmp
fdivrs
fucomp
cld
xchg
xchg
in
hlt
ror
fstp
rcl
rcl
fiadds
fsubrp
cli
ljmp
adc
fidivl
filds
jecxz
flds
mov
jecxz
in
xchg
filds
in
lock
fdivrl
jmp
xchg
loope
in
imul
xchg
in
lret
mov
test
fidivl
fprem1
sbb
enter
cld
sbb
out
addb
fxch
xor
and
sti
in
mov
leave
fcmovu
jmp
in
neg
sub
aad
xor
shl
faddl
inc
test
fsub
mov
int
int3
mov
icebp
aad
call
aaa
xor
cmp
cmc
in
shl
shl
xor
in
in
orb
les
aad
sarb
ds
cmp
sar
lds
in
das
out
enter
int3
or
fdivp
jecxz
ds
fucomi
lret
jmp
xchg
test
lds
sub
in
cmp
aad
ror
aam
aam
sar
fadds
or
xchg
div
xor
in
shr
shl
aad
vpand
mov
out
nop
sti
into
aam
rcl
xor
xor
int3
jmp
aad
stc
hlt
loop
test
clc
mov
mov
aad
hlt
shr
fld1
test
fdiv
and
int3
test
call
loope
lock
aam
in
aam
cld
ror
shll
movl
iret
filds
icebp
out
cld
repz
cmp
loop
cmp
fcmovnu
in
fstp
nop
mov
test
in
int3
shr
cmp
in
cmp
test
sub
add
int3
into
fmul
fsubrl
in
jecxz
mov
repz
adc
jle
shl
clc
in
ds
lret
int3
ret
mov
shr
shl
lret
lret
ljmp
in
jecxz
repz
in
test
ret
cmp
cmp
lock
fcom
ret
ss
call
cld
lret
mov
in
cmc
out
icebp
jmp
neg
int3
fdivr
fdivrp
cmp
decb
lock
in
aam
fsubr
divl
cmp
loop
hlt
cmp
ljmp
mov
std
in
out
mov
leave
xor
ljmp
ds
cmp
repnz
ret
call
call
cmp
mov
shl
sar
cmp
sar
fcmovbe
movl
loopne
lret
aam
lret
int3
shl
cmp
out
int
and
test
mov
jmp
repz
fcmovbe
xor
jmp
aam
xchg
fdivr
fcomp
sti
sti
test
xchg
xor
in
sti
ss
cmp
shr
in
addb
aad
in
fucomip
xchg
in
das
jecxz
cli
int
in
in
fnstenv
fyl2xp1
clc
aad
sti
clc
mov
dec
ret
icebp
loopne
out
aam
sti
xor
repnz
lret
fldl
fcomi
fldl
rorl
cli
test
das
ds
fcom
clc
clc
ret
cld
mov
out
fxch
out
repz
out
cmc
xor
in
lret
aaa
repz
xor
jecxz
xlat
rorb
in
test
into
ss
out
sti
cmp
fdivp
rcr
into
cli
faddp
fst
sub
lret
test
shr
or
jmp
int
imul
fpatan
std
loope
faddl
out
fucomip
xchg
fcmovnu
loopne
aaa
jmp
enter
fmul
stc
xlat
cmp
repz
loopne
push
lret
loope
jecxz
lock
shr
divb
lret
in
jmp
ret
ror
aam
mov
jge
xor
jle
fxch
leave
out
hlt
shl
stc
int
std
repz
loopne
loop
loope
ljmp
jmp
fcom
ss
cmp
loope
ds
div
repz
orl
xchg
into
test
loop
call
xor
aam
jecxz
leave
std
xlat
rclb
jmp
bnd
cli
enter
int3
div
std
rolb
mov
test
decb
out
cmp
xlat
jmp
shr
testb
in
clc
int
xor
test
shr
shl
cli
xor
dec
xor
aas
jecxz
shl
sti
fsubrp
clc
lret
enter
aam
iret
enter
stc
jmp
out
in
fsubp
in
in
add
mov
fmull
loope
sbb
in
lret
ljmp
rol
cmp
in
xlat
aam
cld
loop
jecxz
int3
fmull
mov
xor
stc
lock
adc
cld
test
stc
ficoms
loope
jmp
iret
out
ror
aam
out
iret
xchg
out
repnz
call
aam
ffreep
hlt
fld
std
fcomi
rol
rcl
rol
out
xlat
icebp
loop
neg
fcmove
jecxz
filds
lret
int3
fidivrl
int3
xlat
std
out
repnz
ret
fptan
ret
icebp
icebp
in
fmul
out
or
adcl
lock
lock
lret
shl
div
rol
lret
std
fcmovnu
in
mov
xchg
int
hlt
repnz
call
cli
shl
mov
in
or
icebp
xchg
shr
fidivrl
xor
fdivrl
cli
addl
cld
or
in
jmp
repz
xlat
xor
int
iret
fldpi
rcr
ljmp
fcomip
jecxz
cmc
movb
jecxz
in
cmp
enter
lock
cmp
stc
stc
repnz
lds
mov
jmp
xlat
lret
aad
aad
int
jle
and
xchg
idivl
adc
jle
sbb
lret
rclb
lret
xlat
aam
hlt
aaa
in
cmc
aad
rcl
cmp
fsub
in
cld
xchg
fistl
shl
fucomi
in
iret
hlt
jecxz
rcl
std
repnz
loopne
cmc
fdivr
test
add
ret
in
std
aam
sarb
jmp
loope
test
test
jmp
leave
bnd
xor
stc
call
ret
xlat
aam
dec
ljmp
xor
sub
lret
ljmp
fcmovnbe
repnz
aam
mov
test
call
rol
jmp
fidivl
rcl
divl
loop
xchg
hlt
std
in
cld
loop
out
nop
in
jmp
repz
jmp
clc
clc
fcmove
ror
loop
iret
fcomip
cld
cli
cmp
xchg
repz
loop
jecxz
sti
imul
clc
xor
jmp
stc
cmp
jecxz
loopne
jmp
lret
leave
enter
call
bnd
in
cmp
repnz
push
aad
enter
repnz
roll
neg
cs
cmp
in
aad
test
sbb
lret
test
jecxz
mov
jmp
out
int3
std
clc
sbb
hlt
in
div
xchg
xchg
fimull
xchg
repz
xlat
cld
lret
sbb
out
into
cmc
in
mov
ret
nop
sti
mov
fcomi
loopne
icebp
lret
jmp
lret
xor
ret
loop
xor
enter
mov
in
loopne
fists
in
fnstcw
cmp
jmp
in
int
icebp
call
ret
decb
std
xchg
shlb
lret
rcl
int
shl
std
mov
int
out
enter
shlb
jmp
jmp
cmp
xor
loope
test
add
aas
rcl
test
incb
aam
and
into
cli
repnz
out
roll
mov
mov
xor
add
jmp
lret
rcr
aad
fsubr
xor
mov
adc
jle
repz
cmp
iret
ret
fyl2x
cli
aad
out
testl
in
clc
sti
out
jmp
fsubp
idiv
xchg
mov
iret
sti
ljmp
ret
cmc
cld
clc
aad
sar
clc
lds
ds
test
fmuls
std
loopne
out
stc
xor
lret
repz
fst
cli
iret
ret
ret
out
call
fstp
shr
repz
cmc
icebp
clc
int
shr
sub
test
jecxz
xlat
cmp
into
std
lea
aaa
das
aam
stc
fcmovbe
std
cmp
fcmovnbe
cmc
in
stc
rorb
loopne
lret
test
das
lock
in
in
aam
or
cmp
xchg
repz
xchg
rorl
cli
clc
cld
aad
cmp
cmp
mov
lret
cld
incl
cmc
shl
aad
icebp
int
aad
sar
cmpl
cli
jecxz
test
shl
lea
in
shr
std
int3
sti
test
cmc
rcr
cmp
hlt
ret
xchg
test
xor
xchg
aam
sarl
sub
leave
ds
addl
clc
jmp
out
out
in
call
icebp
fnsetpm(287
cmp
testl
xchg
fcom
incl
ror
xor
out
lret
adc
into
cmp
fiadds
fldl
in
lret
cmp
leave
and
ds
aam
ret
lock
faddp
xchg
flds
shll
repz
out
std
cmp
aam
shl
out
loope
cmpb
mov
lret
sub
ret
in
leave
sti
sarb
fsub
cmp
sar
enter
cld
ret
iret
addb
cmp
in
lock
int
cmp
or
test
jecxz
filds
inc
or
add
add
iret
enter
int
xchg
cmpsb
push
ja
mov
jle
add
sub
xchg
loope
in
lret
xor
ljmp
aam
fcmovnb
sar
mov
in
test
cld
xchg
xchg
shl
ret
sub
shlb
cli
call
aad
fsubp
cld
loope
in
int
ljmp
enter
or
test
aad
call
leave
loop
ljmp
xor
fsubr
rolb
mov
repnz
decl
loop
nop
test
aam
jmp
in
out
loope
rcl
shr
cli
mov
out
ret
xlat
ljmp
shl
int3
icebp
out
out
aaa
xlat
jmp
xor
hlt
call
int3
clc
push
rclb
aam
in
xor
clc
repz
cmp
jmp
cld
stc
lret
int3
lret
int
cmc
loop
out
das
iret
icebp
repz
fst
jecxz
cmp
cld
sti
call
rcll
xor
repnz
iret
cmp
cmp
fstp
stc
xor
aam
test
dec
int
add
ljmp
repnz
cmp
cmp
aad
std
and
loop
into
test
in
clc
hlt
cmp
out
in
xor
rcr
in
aas
rol
mov
ror
fucomip
lret
lock
aad
in
xor
cmp
cmp
cmp
stc
out
fimull
in
jecxz
mov
test
lds
xor
fstp
xor
fcmovbe
shl
xchg
mov
cld
out
xchg
int
out
jmp
cli
lret
cli
iret
cmp
filds
or
cld
into
loope
xor
ror
cld
fcmovbe
hlt
icebp
neg
lock
test
mov
xchg
ljmp
int3
ss
ret
stc
cmp
sar
rcl
out
loop
repnz
repnz
mov
in
or
fsub
out
xchg
in
out
aaa
stc
cmp
sti
mov
mov
cmp
jmp
lret
fst
int
test
cmp
dec
std
jle
adc
jle
lock
xor
fucom
out
jmp
mov
call
jmp
xor
in
out
xchg
sti
mov
loope
into
repz
enter
iret
cld
roll
test
test
mul
out
filds
out
rcl
into
aam
lock
ljmp
loop
incb
loope
loope
xchg
iret
jmp
in
xlat
into
loope
jecxz
sbb
test
or
ret
enter
jmp
ss
loopne
icebp
sar
xchg
rcr
cmp
jecxz
int3
mov
out
xchg
xor
in
cmp
aaa
lock
cmp
icebp
neg
out
repz
enter
lock
jmp
out
aam
lock
cmp
out
rcl
jecxz
cmpb
sti
ret
int3
loopne
cld
xchg
xchg
int3
loopne
out
shlb
ror
test
test
fisttpl
fildl
xchg
in
ljmp
cmp
sti
cmp
in
hlt
rol
leave
lret
int
std
out
into
loopne
call
iret
ror
ror
cmp
test
clc
mov
jmp
fcmovnb
in
std
jecxz
repnz
xor
xor
fsub
cmp
int3
cli
rcr
clc
rolb
fisttpl
xlat
neg
iret
aam
icebp
out
stc
aas
sarl
and
hlt
ret
int3
loope
loopne
shl
rcl
aam
int
int
into
fsubp
cmp
sti
div
icebp
cmc
loopne
lret
aas
jecxz
mov
sub
test
in
repnz
lret
clc
cmpb
idiv
hlt
sti
in
not
and
enter
jmp
ror
aad
aam
xor
not
repz
int
div
aad
in
cld
shl
mov
mov
xchg
repnz
aam
xor
ljmp
rol
icebp
std
cmp
int3
cmp
fidivs
loope
test
inc
or
push
or
sub
add
xlat
into
rcl
aad
fadd
mov
adc
mov
inc
pusha
jle
adc
jle
in
lock
jmp
repz
repz
loopne
incb
addl
aaa
aad
filds
cli
enter
aam
int3
in
mov
orl
cld
icebp
or
icebp
xor
fistpll
testb
xchg
loop
jmp
repnz
aaa
out
div
call
fucom
ret
xlat
hlt
ret
xchg
fistl
in
out
shr
leave
cmp
xlat
lock
test
fsub
leave
clc
aam
movl
sar
fcmovbe
ljmp
addl
and
cli
out
loopne
sub
aam
xor
ds
les
loop
icebp
aas
jmp
ljmp
loopne
loopne
xor
repnz
in
int3
cmp
cmp
rcl
fiadds
loop
cld
mov
out
jecxz
aam
jecxz
sub
rcl
ss
fdivp
fcmovnbe
shr
cli
icebp
jecxz
call
fcom
fiadds
mov
sub
cmp
enter
into
repnz
sar
icebp
idiv
fsubr
jecxz
fldl2e
out
out
test
jecxz
xor
out
iret
out
fnstcw
lret
roll
loopne
fldl
mov
leave
addl
int3
iret
sarb
jmp
rcr
fst
cli
rol
jecxz
std
int
fdiv
sti
iret
mov
loopne
fcom
sti
repz
lret
call
out
rolb
lret
fxch
ret
xchg
std
xchg
xor
icebp
aad
int
in
fcmovne
fsub
fnstcw
xchg
cld
lret
mov
int
imul
ljmp
iret
repnz
lret
shl
sti
xchg
in
cmc
iret
iret
xor
clc
idiv
repnz
xorb
rcl
test
mov
out
xchg
repz
rorl
int3
jmp
fdivr
out
sti
rolb
loop
stc
cmp
jmp
ror
enter
lret
add
sbb
adc
jle
fsqrt
xchg
std
jmp
hlt
ret
xlat
in
sub
icebp
jmp
xlat
call
cld
std
call
lock
xchg
shr
call
lret
stc
std
cmp
loopne
icebp
mov
in
call
nop
repnz
sub
xor
not
cmp
incb
mov
test
fistl
into
call
fucomp
fnstsw
adc
jmp
aam
into
loop
jmp
dec
leave
in
repz
rcl
cmc
jmp
cmp
std
cld
in
call
loop
jmp
in
vpsraw
cmp
iret
jmp
and
ret
rol
fcmovnu
out
ljmp
out
in
aaa
ss
ss
in
cmc
in
out
stc
in
ds
xlat
mov
test
loope
ljmp
lret
rol
hlt
sbb
aas
loopne
mov
icebp
xchg
xchg
mov
shll
aad
repnz
fidivrl
in
sti
add
jmp
mov
in
cld
fdivr
orb
shr
fucomp
cmp
fdivrl
testb
cli
in
fmuls
shr
iret
ret
call
cmp
cmp
ljmp
ret
sti
mov
leave
clc
test
repz
in
aam
ret
xor
shr
sbb
test
xlat
fdiv
fisttps
mov
int
xor
ss
int3
in
in
iret
icebp
xlat
clc
xlat
fadd
fucomip
fcomi
int3
mov
mov
xchg
call
xlat
xor
ror
cmp
dec
call
ljmp
leave
lock
std
fcmovnbe
cld
int3
idivl
in
fiadds
loopne
mov
fucomi
call
xor
cmp
sbb
cmc
sti
call
out
cmp
sar
mov
loope
ljmp
leave
jne
mov
mov
movsbl
xor
add
jmp
int3
enter
into
push
mov
stos
stos
sub
push
test
adc
jle
fucompp
cmp
cmp
push
mov
sti
xchg
lret
stc
out
fcmovnu
and
ss
loopne
fsubrp
xor
xlat
sti
cli
sub
jmp
in
jmp
repnz
ljmp
sbb
cli
in
out
mov
int
xchg
test
stc
rcl
xor
icebp
in
out
jmp
aas
int
test
aam
div
fiadds
out
in
in
aam
xor
aam
out
loope
sub
cmp
add
repnz
mov
out
int
fucomip
out
call
cmp
cmp
fsub
in
shl
idivl
repz
fmulp
mov
test
jmp
nop
out
aam
aaa
out
shl
lret
int
cmp
leave
lret
fmul
iret
iret
icebp
lock
out
xor
xor
jmp
cmp
cmc
int
shl
push
fsubp
aad
repnz
xchg
lret
ficoms
into
repz
xor
lret
fdivr
shr
std
aam
xchg
fcmovbe
and
jmp
test
fdivp
rol
in
xor
std
fidivrl
sbb
testl
mov
shr
aad
leave
in
cld
xor
roll
out
xchg
jecxz
mov
rcl
cmp
out
out
xor
jecxz,pt
shl
fcomp
enter
loope
icebp
int3
mov
icebp
enter
lret
cmp
out
lds
cli
loope
mov
ljmp
fcmovbe
in
repz
cmp
in
rcr
test
fsubp
xchg
xchg
movb
xchg
clc
in
sub
lret
int3
loope
in
xlat
idivb
rol
xchg
ret
in
out
xchg
ljmp
cmc
stc
aam
fucomi
lock
xchg
fimull
icebp
mov
xchg
iret
enter
cmp
xlat
out
icebp
sbb
ret
fiadds
out
lock
rorb
test
push
add
movl
lea
jmp
sarl
aam
aam
fcmovne
inc
cwtl
sbb
sbb
jle
rcr
mov
rcl
xor
in
xor
rol
into
rcl
out
rol
test
repz
ljmp
das
out
xor
ss
out
lock
xlat
cmc
lock
ret
incb
in
mov
mov
call
cmp
loop
neg
shl
hlt
aam
aas
test
test
shl
shr
xor
std
aaa
fcmovnbe
loop
aad
fcmovnu
fcmovu
fildl
loopne
xchg
mov
orb
fnstenv
aaa
ds
cmp
sbb
xchg
xchg
cmp
mov
xchg
rol
cmc
sub
aam
in
cmp
cmp
xor
filds
mov
loope
fucomp
xchg
into
ljmp
lock
sbb
out
sarl
fiadds
fsubr
out
into
repnz
lds
jmp
out
ss
xlat
out
test
test
enter
mov
into
lret
lret
in
cmp
cmp
cmpb
lock
mov
fcmovb
out
in
lock
add
int3
in
fidivl
push
cld
rol
iret
std
rol
mov
sti
ljmp
hlt
loop
divl
cmc
cmp
hlt
xor
aas
rcr
aas
faddp
mov
call
mov
cmc
into
aaa
aaa
lock
aaa
aam
cmp
loopne
out
sbb
icebp
rcr
clc
fucom
out
movb
aaa
into
cmp
into
xor
aam
cmc
lock
xor
repnz
ljmp
leave
mov
ret
not
fnstcw
std
into
cmp
loop
lock
ret
or
loope
mov
rolb
repnz
ss
cmp
cmp
fst
fabs
decb
lret
inc
sbb
out
addb
shlb
std
jmp
hlt
clc
cld
jecxz
mul
xchg
in
ljmp
in
xor
out
dec
imul
decb
in
addl
jmp
int
fcmove
fstp
adc
js
mov
jle
adc
jle
loopne
sti
enter
clc
ret
test
stc
xchg
mov
notb
shr
into
repz
clc
or
test
out
sti
repnz
mov
sti
enter
fadd
jecxz
fxch
fnstsw
rcl
cmp
mov
cli
stc
in
or
lret
in
mov
in
into
test
int3
cmp
incb
fld
xlat
lret
xlat
orl
div
xor
jecxz
shr
clc
repz
aaa
ds
sar
repz
cmp
ret
and
call
ffree
into
in
imul
repz
call
sarl
enter
clc
fmulp
cld
or
cmc
div
lret
hlt
testb
jmp
xchg
xchg
lock
ss
into
xor
test
fsub
xchg
cli
out
fmull
mov
hlt
ror
cmp
loopne
stc
cmp
aad
aad
call
ljmp
lock
jmp
cmp
out
leave
fdivl
in
sar
repz
rol
sbb
icebp
out
lret
xchg
enter
stc
xor
repnz
std
repz
fldl
ffreep
cmc
ljmp
icebp
dec
iret
rol
int
stc
cmp
lret
cmp
loope
fucomip
ds
in
addb
ret
sub
call
int3
xlat
jecxz
shl
std
lret
cld
fsubr
cld
fsubr
call
enter
shr
cmp
hlt
fidivrl
cmp
addl
repnz
aam
fdivs
test
hlt
loopne
sar
fiaddl
out
std
leave
aam
sbb
out
xor
xor
repz
icebp
sar
idiv
leave
std
clc
out
in
test
jmp
ret
jmp
fcmovu
ljmp
jecxz
cmc
mov
sub
out
nop
xchg
jecxz
mov
mov
mov
xor
lea
jmp
into
aam
enter
fsubl
dec
pop
jge
xchg
je
mov
adc
jle
in
repnz
leave
cmp
cmp
stc
cmpb
out
and
loopne
fcomp
in
int3
and
repz
repz
cli
imul
ror
leave
shr
lock
icebp
repz
cli
jecxz
out
mov
fdivrp
mov
loop
repz
ljmp
repz
rol
leave
movl
out
jecxz
repz
fnstcw
out
stc
lret
fdivr
loopne
enter
aad
xchg
cli
out
jecxz
fst
aaa
shr
cli
divb
icebp
xor
shl
cmp
repz
xlat
sbb
ljmp
fcom
repz
fcmovne
loope
out
xchg
sti
ljmp
stc
out
test
incl
xlat
aad
iret
cmp
into
jmp
in
std
sarl
loop
std
mov
cli
fsub
into
out
dec
ror
int
cmp
xor
repnz
aas
fldl2e
cli
jmp
loopne
xor
xchg
repz
sar
idiv
fdivrs
cld
repnz
lock
cmp
xchg
lret
jecxz
repnz
in
call
cmp
aas
fucomp
fdiv
xchg
cli
jmp
orl
in
fsubrs
enter
fsin
ret
cmp
ljmp
sub
rcl
cli
cmc
cmp
fucomi
repnz
clc
cmc
fiaddl
lret
fiadds
out
imul
int3
fcomip
cmpl
call
jmp
xchg
lea
lret
jmp
int
stc
lock
out
frndint
xlat
xlat
fsubp
and
xor
int
rcl
out
cmp
sti
std
fadd
hlt
cmc
sti
rorl
loope
clc
loop
int3
iret
aad
out
cmp
in
rcl
out
fld
test
cmc
aam
lret
test
lret
hlt
roll
ret
aad
aaa
cmp
aas
ret
test
and
or
inc
or
pop
out
decl
mov
add
mov
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
push
jmp
int3
rol
xlat
fstp
fst
mov
lcall
mov
add
int
sti
out
leave
loop
repz
jmp
xor
jmp
cmp
lock
loope
sti
into
out
lock
in
into
ror
xor
fstp
cli
sar
repz
sub
test
xchg
lds
stc
sub
enter
sarl
into
cli
add
mov
mov
fimull
fsubrp
xor
aaa
jmp
repnz
iret
xor
repnz
stc
in
in
fisttpll
xchg
loopne
jecxz
xor
into
lock
loopne
neg
ret
xchg
in
aas
int
icebp
xchg
xchg
or
aaa
xor
in
hlt
icebp
cmp
rcl
loopne
test
aas
mul
mul
or
iret
xchg
mov
lret
aaa
xor
out
cmp
cmp
xor
out
idiv
repz
ret
in
sti
xchg
call
cs
sub
icebp
in
out
cmp
sar
hlt
clc
cld
jecxz
mov
loopne
loop
and
fldl
xor
hlt
into
out
fcmovnb
fucomp
loope
cli
test
faddl
cmp
rclb
jmp
std
icebp
fld
test
aas
xlat
flds
std
call
xchg
into
loope
sub
stc
clc
int3
leave
aad
fdivp
ret
hlt
lock
cld
loopne
enter
lret
mov
lea
xor
xlat
lret
sarl
fdiv
lock
sbb
addb
mov
fisttps
cmp
loopne
repnz
fimuls
mov
ljmp
int3
cmp
repz
fsub
fstp
aas
fdivr
stc
enter
mov
hlt
xor
clc
imul
out
shr
clc
fxch
cmp
xchg
icebp
xlat
hlt
ret
ret
out
fcmove
call
hlt
cli
in
cld
call
and
adc
out
sub
out
rolb
cli
ret
int
leave
fneni(8087
repnz
out
into
in
aad
fucomi
xchg
int
xchg
hlt
repnz
out
fsub
neg
fstpt
cld
test
in
jecxz
loopne
fucomi
in
loopne
adcl
ss
call
lock
sti
out
repz
fsub
test
nop
mov
shl
xor
sti
ljmp
fsubp
repnz
shl
xchg
jecxz
sbb
incl
rol
xor
out
cmp
sar
shl
repz
ret
rol
fdivr
xlat
out
jecxz
loopne
jmp
aad
fdiv
fucomi
lret
fdivrl
cmp
inc
clc
and
insb
jbe
add
add
add
fadd
fcom
fld
pop
into
shll
adc
jle
ret
fisttps
in
test
ljmp
lret
sti
stc
loop
sti
inc
loope
aam
xor
mov
jmp
and
mov
xor
cmp
cmc
cli
xlat
jmp
sbb
xchg
fisttpl
loope
int
shll
repnz
cmp
int3
sarb
std
cmp
loop
enter
in
mov
in
lret
aaa
ss
clc
loopne
sar
ret
repnz
testb
int3
cli
ret
mov
lock
out
hlt
shl
clc
cli
repz
int3
in
repnz
cmp
test
std
mov
mov
add
shll
in
xor
icebp
repnz
loopne
fsub
jecxz
test
jecxz
cmp
loopne
fstp
loopne
mov
call
fxch
in
jmp
lock
loope
clc
fdivp
fisttps
cli
out
lret
out
cld
test
rcl
repnz
aad
into
sti
cmp
or
clc
enter
cld
int
loope
loop
rorb
leave
cli
aaa
lds
icebp
cld
std
and
cmp
in
jmp
loopne
into
sub
jecxz
in
aaa
ss
ljmp
sti
iret
ror
cli
sub
jecxz
cld
xchg
ror
call
repnz
into
out
cmp
xlat
fcom
int3
into
fsub
repz
loopne
out
out
out
fcoml
cmc
shr
stc
cmp
repz
hlt
xchg
test
leave
nop
xchg
call
rol
clc
hlt
out
cs
call
in
lock
cmp
push
loope
lock
call
out
cmp
lret
ljmp
ret
aad
xchg
or
loope
call
out
stc
icebp
sti
cmp
cmp
test
rorl
hlt
cmc
adcb
hlt
repnz
fucomp
stc
ror
ftst
sbb
aam
sti
jmp
jecxz
xchg
xchg
shll
repnz
int
aaa
fstpt
cmp
stc
clc
test
testl
in
ret
icebp
cmp
out
out
loopne,pt
in
test
clc
call
dec
loope
leave
xchg
out
shr
enter
jmp
fistpll
aaa
cli
out
out
into
cld
out
ret
fadd
std
jmp
xchg
aad
int
cmc
call
lock
ret
xchg
ret
lea
xchg
pop
cmp
in
lret
xor
sarb
lds
mov
testl
not
jmp
lret
aam
int3
ds
inc
cld
daa
test
inc
add
add
add
rolb
add
add
add
add
add
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
and
mov
jmp
aas
sarl
fcmovnbe
fcmovb
loope
add
sbb
insb
dec
xchg
jle
mov
cmc
repnz
idiv
call
fstp
lret
in
icebp
enter
in
cmc
hlt
call
test
rol
std
cmp
ljmp
mov
enter
int3
iret
enter
ds
ret
rcl
fldl
fucomi
icebp
mov
jecxz
jecxz
in
jmp
fcom
sarl
aas
cmp
ds
enter
orl
cld
mov
fsub
xlat
aaa
repz
xlat
ljmp
rcr
xchg
testb
test
lret
cmp
cmp
loope
iret
in
out
sti
call
lea
ret
out
icebp
aaa
lret
into
aas
cmp
repz
fld
test
in
testb
loop
ljmp
cmp
fmul
out
incb
fdivr
xchg
mul
test
mov
sub
hlt
cmp
iret
lret
aad
in
test
loop
jmp
mov
jmp
rcl
fmul
cli
xlat
shl
in
in
fcmovnb
sarb
xchg
nop
fcmovnb
loopne
xchg
icebp
repz
cli
cmp
int
in
sar
into
ds
out
in
jmp
ljmp
into
in
out
aaa
lds
lock
sti
xor
jmp
ret
rcl
sti
fdivrp
xchg
fucomi
loopne
adcl
out
ljmp
lock
fsubr
fcomip
mov
fdivr
orl
out
cmp
shll
clc
loope
neg
cmc
stc
fmulp
cld
cli
jecxz
jecxz
xchg
into
enter
neg
leave
repz
cmc
icebp
push
ffreep
fsub
fcomi
xchg
xchg
repnz
aad
ret
out
icebp
dec
shl
fsin
inc
clc
cld
cmp
int3
xchg
std
frstpm(287
fisttpll
fcmovne
aaa
jmp
sbb
xlat
xchg
movb
mov
loop
test
fxch
rcr
in
loope
int
test
push
repz
movb
call
repnz
fcmovb
div
xor
cmp
clc
sar
mul
repnz
xabort
cmp
xchg
ss
xor
in
divl
in
rcr
not
aas
std
cmp
imul
mov
cld
xchg
fdivp
out
out
fucomp
fstp
cmp
std
in
cmp
in
out
jecxz
lock
int
test
ret
leave
int
xor
fld
addl
int
call
rcl
jmp
lret
aam
fxch
loopne
mov
mov
adc
push
inc
mov
movl
jmp
into
aas
ror
rcl
sarl
xchg
lods
mov
mov
jle
clc
shl
in
aas
std
jecxz
xchg
test
in
call
out
fcomp
cld
cli
in
cmp
xchg
rcr
fcmovnu
sub
cld
hlt
mov
jmp
cmp
jmp
not
fiaddl
idiv
cli
std
enter
xchg
ret
cs
cmp
test
clc
cmp
in
hlt
sar
sarl
testb
ljmp
enter
shl
out
aad
shl
not
adc
aas
shl
repnz
rcll
cli
repz
ror
in
adc
cmp
fcmovnb
mov
loopne
orb
out
into
iret
repz
int3
xor
in
jmp
ret
xchg
repnz
rcl
std
sti
out
rcr
mov
rol
imul
jecxz
lret
repnz
ds
test
loope
mov
orb
lock
ss
jmp
neg
iret
ret
std
jecxz
loopne
mov
cld
mov
in
hlt
loope
ret
lret
cmc
in
ds
repnz
cli
xchg
loop
imul
repz
out
sti
lock
in
iret
in
clc
lock
aad
aad
cmp
cmp
xchg
cmp
hlt
loope
fmull
and
jecxz
idiv
xor
cmp
cmp
div
rcr
cmc
addl
xor
fnstenv
xor
in
lret
cmp
ret
not
xchg
sti
lret
ljmp
out
into
shl
ror
cmp
fistpll
in
loopne
in
cmc
repz
repnz
repnz
int3
fld
stc
lret
cld
aaa
fcmovbe
in
cmp
neg
cmp
lret
loop
xchg
xor
cmp
rcr
ret
enter
mov
xlat
loop
xchg
repz
jmp
ss
aaa
sti
adc
rcl
xchg
fsincos
sti
xchg
mov
int
cmc
hlt
call
sarl
aas
cmp
mov
fcmovu
addb
hlt
in
into
icebp
shrb
rcl
leave
jmp
icebp
sarb
hlt
rorl
cli
mov
xchg
xor
cmp
fdiv
lock
cmpl
ret
mov
in
repz
xor
stc
lock
repz
loope
hlt
into
rol
test
xchg
popl
into
imul
ret
clc
aad
int3
cmc
xor
stc
int3
cmpb
repnz
mov
jmp
lea
mov
cs
clc
in
clc
aam
cmp
pop
jmp
rcl
aad
aad
shll
add
fcmove
xchg
jle
mov
and
ds
repz
out
lret
loopne
rorb
xor
aam
jmp
ljmp
loope
mov
std
cmp
fcmove
jmp
mov
out
out
rol
out
aaa
std
icebp
sti
out
test
ret
out
out
faddl
in
cli
into
xchg
idiv
in
aam
fmul
xor
clc
icebp
in
hlt
aas
in
xlat
jmp
out
ffreep
xchg
in
into
cmp
repz
aad
fdivr
ret
fcomp
rcr
out
fildl
test
hlt
rcr
out
not
xor
cmc
in
lock
ffree
call
stc
lret
ljmp
ret
int3
in
lret
jmp
loopne
into
fdivp
cmc
stc
fstp
call
out
jecxz
lret
ret
out
cmp
roll
bnd
jmp
lock
xchg
shr
test
xor
ljmp
out
fdivrp
repz
fdivrp
jmp
loopne
repnz
icebp
cmp
clc
std
xor
clc
loop
cmp
hlt
cld
aam
test
filds
xchg
lock
aad
into
int3
das
in
cmp
clc
aaa
out
lock
fadd
ret
mov
mul
mov
test
mov
aad
shrl
cmc
xor
call
div
jecxz
test
inc
xor
ljmp
loope
ljmp
jmp
ljmp
out
out
inc
cli
aad
into
shl
test
rcl
call
iret
fdiv
int3
aam
aam
iret
and
aam
jmp
out
icebp
into
sti
in
loope
int3
sub
loop
imul
repz
cld
cmp
cmc
cmc
enter
ret
mov
decb
inc
into
xor
clc
fdivl
rcl
shl
dec
shl
xchg
cmc
mov
mov
cli
mov
xchg
mul
aam
rcl
aaa
shl
cmp
rol
test
fadd
stc
stc
clc
fiaddl
rol
iret
in
fcmovnb
out
shr
aas
lret
int
sti
fldl
mov
fcom
jmp
shl
nop
xchg
call
jmp
shl
int
out
sar
loope
cld
loope
fsubrp
out
call
stc
sarb
aam
repz
loopne
int
ficoms
out
into
icebp
xor
aad
stc
sti
fldl
movl
jmp
xor
repnz
sar
sti
lock
not
fst
cmc
out
roll
in
mov
ljmp
xor
out
idivb
idiv
cmc
ds
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
xor
mov
add
add
imul
mov
cmp
jmp
int3
rol
aad
aad
fpatan
int3
and
cltd
push
orl
add
fdivrs
xorl
orb
out
lret
mov
repnz
nop
xchg
rcl
not
xor
repnz
sar
clc
lret
in
out
in
fstl
ret
rol
out
int
xor
int
test
fstpt
repz
dec
sbb
orl
cld
xor
cmp
cmp
jecxz
xchg
jecxz
jmp
sar
repnz
xchg
jmp
clc
clc
xor
sti
repz
into
add
enter
xchg
into
lret
xchg
addb
idivl
fdiv
fxch
xlat
repz
ljmp
cld
mov
push
int3
mov
shl
xlat
lock
leave
cmp
loop
rcl
fadd
rorb
in
ljmp
clc
loope
sub
int
repnz
cld
cmp
in
jmp
mov
into
mov
aam
cmc
aad
repnz
cmp
cmp
fcmove
lock
fcom
test
lret
lds
in
std
xchg
in
cli
hlt
into
rcr
shll
cmp
rcl
fucomip
xchg
fsubp
mov
lea
ljmp
aaa
cmp
fsqrt
loope
ret
loop
ljmp
divl
fdivs
ret
repz
aam
fistpll
cmp
jecxz
fcmovb
ljmp
mov
test
out
std
icebp
iret
xor
faddl
loopne
ljmp
icebp
int
in
shl
cli
out
ret
in
fsubp
lock
cmp
mov
mov
enter
fucomi
loope
jecxz
shr
ror
jecxz
test
cli
in
test
xlat
fisttpl
mov
nop
in
ret
loop
xor
xor
icebp
xor
icebp
cmp
rcl
fld
out
mov
mov
ljmp
icebp
hlt
aam
int3
lret
cli
cli
fstpt
in
aad
loope
enter
sub
fdivr
loopne
jmp
divl
in
repnz
stc
fsubr
in
vaddsubps
stc
out
loope
fimull
ret
vpor
fcmovne
cli
ljmp
xlat
xlat
lret
jmp
call
repnz
lret
jecxz
idiv
stc
jmp
incl
jmp
enter
call
in
jecxz
out
cmc
lock
cmp
out
sti
fildl
imul
mov
rcl
repz
int
enter
aad
neg
cld
clc
fiadds
lret
ljmp
in
aad
aad
fsubr
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
jmp
into
rol
fcomp
fcomps
scas
outsb
jp
pushf
jle
mov
cmp
loop
fdivr
clc
in
fldl
int
in
jmp
aad
xor
xor
aam
idivb
cmc
mul
ret
jmp
xchg
icebp
in
into
int3
aas
in
lret
fcomp
and
mov
cmp
fadd
clc
test
jmp
repz
out
cs
lret
lock
cmp
aad
movl
icebp
aad
xor
lret
jmp
xor
fpatan
out
or
ret
flds
loope
in
lret
xor
shl
aaa
fnstsw
call
xlat
test
fiadds
test
test
filds
div
call
xlat
cmc
ror
sar
cmp
fsub
loope
test
cld
icebp
fimuls
xor
cld
aam
cmp
jmp
test
mov
test
repz
cmc
enter
hlt
fucomp
fmul
rcr
les
in
std
int3
fisttpl
into
mov
jmp
jecxz
iret
repz
std
clc
out
fsub
iret
test
cmp
fmull
enter
mov
into
das
cmp
idivb
aad
aas
out
fldl
lret
jmp
lock
hlt
stc
leave
das
call
ffreep
jmp
fchs
std
call
rorl
sbb
ror
lret
leave
repnz
loopne
sti
cmp
loop
fiaddl
and
lret
iret
repz
stc
into
repnz
fucomi
fnstsw
test
icebp
loope
cmp
jmp
fsubrp
icebp
in
fmulp
out
sub
cmp
fprem
cmp
cmp
jmp
in
cmc
div
sti
fmul
mov
in
stc
rcr
icebp
lock
shl
icebp
xor
in
cld
xlat
ret
ret
in
cld
in
clc
lock
out
mov
clc
hlt
cli
lock
repnz
aam
mov
fstp
jecxz
or
mov
int3
out
fcmovne
into
into
cmp
cmp
clc
fld
xlat
jmp
mov
ljmp
ret
aaa
sub
fsubr
out
in
hlt
sar
jecxz
aad
test
fyl2xp1
out
mov
loop
not
in
repz
leave
fucomp
lock
jecxz
aam
xchg
sbb
test
out
xor
out
in
out
xor
repz
call
in
mov
int
mov
loope
out
xor
into
leave
std
enter
clc
sarl
cmc
jecxz
clc
cld
fld
loope
mov
xchg
xor
cli
mov
mov
jmp
rcl
rcr
fstp
aam
cmp
lods
cmp
in
test
jle
in
repz
ss
fildl
xlat
ret
out
jmp
mov
loopne
iret
xor
neg
std
fidivrl
loopne
cmc
cli
cmp
ret
fucompp
in
cld
xchg
xchg
loop
fucomip
in
shl
icebp
out
int3
inc
sar
out
ret
stc
in
mov
nop
ror
xchg
stc
enter
fsubr
fcos
cmp
rcr
cmc
out
mov
mov
mov
fldl
shl
ror
int3
fdivrs
aas
or
clc
cmc
ret
call
and
test
aam
ljmp
clc
xchg
enter
aam
cli
jmp
jmp
cmp
sbb
enter
out
aam
loope
neg
rcr
fidivrl
cli
neg
mov
filds
lret
fnstcw
in
ret
fsub
jmp
out
jmp
mov
xor
lret
fucomip
loop
rcr
in
out
test
test
ljmp
sub
loope
out
clc
lret
cmp
test
in
jmp
mov
mov
jecxz
icebp
in
fdiv
hlt
fiadds
repnz
in
cmc
xchg
into
fmulp
ljmp
jmp
enter
iret
sarb
int3
aam
xchg
out
fmul
fiaddl
aam
out
iret
xor
xlat
in
fcomp
in
stc
sarb
call
cmp
call
cmp
repnz
cmp
ss
loop
in
fld
jecxz
inc
jmp
dec
fdiv
enter
testb
shl
fnstcw
repnz
shl
mul
repnz
fisttpl
jmp
cmp
xor
jmp
iret
aas
aad
adc
fildl
xchg
std
into
jmp
divb
xor
aad
sti
hlt
aad
shl
cmp
hlt
hlt
loop
cld
mov
cmp
jecxz
in
adcb
in
test
adc
xchg
sar
inc
lret
in
int
int
int3
in
in
repz
ljmp
sti
in
xchg
xor
addb
mov
lret
das
cmp
iret
sub
idivl
rolb
stc
stc
mov
out
jecxz
icebp
aam
shr
int
fldz
addl
cld
test
fcmovne
xchg
xchg
rclb
shl
lock
lret
stc
loop
ds
addb
std
rcl
repnz
in
xor
xor
add
add
imul
jmp
sarl
ret
ffree
in
jns
pusha
pop
loop
cmp
mov
jle
enter
sarb
rcl
aam
neg
enter
fdivrp
fsub
out
ror
repz
aad
lret
aas
rol
jecxz
rcr
cmp
icebp
in
jmp
stc
lret
aam
fnstsw
xlat
sti
iret
rcl
jecxz
aas
in
aad
int
dec
lret
mov
int3
ret
loope
lret
icebp
hlt
cmp
icebp
out
out
in
loope
adc
jecxz
ret
shr
iret
in
rcl
shr
neg
shl
jmp
call
out
frstpm(287
iret
xchg
in
in
cmp
enter
std
jecxz
std
jmp
cmp
std
xchg
xabort
nop
xchg
ljmp
aad
test
xor
cld
fdiv
out
in
testl
inc
xchg
rcr
xor
lret
shl
clc
sar
call
fcomp
fcmove
in
in
xchg
cli
clc
idivl
jmp
faddl
cmp
mov
stc
mov
xchg
cmc
lock
repnz
jmp
cmp
idiv
clc
in
cmp
loopne
ret
loope
xlat
jmp
ljmp
mov
ljmp
addl
sub
fisttpll
xor
repnz
int
clc
in
shl
test
frndint
loop
and
cmp
sti
leave
shr
cmc
cmp
in
repnz
loop
in
addb
xchg
leave
mov
xchg
mov
loope
ljmp
stc
roll
ljmp
mov
cmc
cmp
sti
in
fdivr
out
idivl
testl
ljmp
xor
fnstcw
xlat
into
adc
fadds
cli
call
shl
hlt
divb
iret
xor
in
aad
shl
add
xchg
ljmp
xchg
xlat
xor
clc
fidivrl
out
idivb
jecxz
cmp
mov
into
mov
int
aad
call
in
fdivrl
rorl
ljmp
cmc
jmp
imul
div
out
ret
mul
faddl
mov
mov
orb
out
div
jmp
aaa
loopne
lret
fdiv
sbb
sti
in
fdivrp
mov
lret
in
test
aaa
lret
enter
fsubp
mov
fcomi
and
loopne
repz
cmp
jmp
rcl
aad
rcrl
out
add
jle
jmp
aaa
rcl
clc
clc
rcl
xlat
cmpb
leave
jmp
int3
jmp
mov
lock
sub
aaa
xor
cmp
sbb
ds
ffreep
call
orl
xor
out
out
iret
into
into
addl
xchg
mov
cli
repz
xchg
out
icebp
jmp
out
cmpl
orb
int
and
enter
fcomp
aam
loop
faddl
out
xabort
jmp
rolb
aam
int
int3
repz
shl
sti
add
sar
mov
mov
std
nop
xchg
in
shl
xor
xor
iret
fbstp
cmp
rcr
xchg
mov
icebp
in
mov
out
shl
repz
leave
cli
shr
cld
jmp
aam
lock
lret
out
loope
out
loope
and
test
lock
aas
sub
repz
sar
ret
out
xor
and
out
in
ror
jecxz
shr
cmp
std
sub
test
lret
icebp
int3
cmc
xor
ss
sti
shl
cmp
not
mul
idiv
out
jmp
shl
call
clc
shl
cli
sarl
cmp
out
out
in
loope
or
xorl
xlat
out
xlat
lret
not
ftst
sti
fldl
rcl
fcoml
xor
in
iret
cld
fmul
sti
aam
out
out
test
out
fsub
lret
call
hlt
repnz
xor
shl
shl
aas
shr
fcmovb
fsubr
clc
into
lock
into
iret
repnz
mov
in
fcmovb
fcmovnbe
into
sti
cmp
aaa
cmp
ss
rcr
cmp
repz
neg
ret
out
mov
test
aam
enter
loopne
sarb
repnz
mul
lret
out
mov
in
xchg
fcomp
lock
cmp
cmp
and
sti
out
in
and
out
in
sub
shr
int
lock
lret
xor
int3
aam
iret
test
fsub
ds
or
std
mov
adcl
xor
into
repz
ds
test
cmp
fcmovne
hlt
loop
clc
jmp
nop
lock
icebp
sar
fcmove
aad
hlt
ds
rcl
clc
sar
ret
mov
jmp
repz
lock
out
iret
cmp
fucomp
in
call
fst
adc
fxch
fmuls
hlt
test
test
pushl
ret
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
push
mov
mov
mov
not
jmp
leave
xlat
rcr
mov
cwtl
push
fs
jle
sbb
jle
leave
in
cmp
lret
aaa
in
cmp
int3
aam
icebp
std
std
and
ljmp
repnz
lret
xor
aad
lock
cmp
sar
std
in
fildl
mov
out
fneni(8087
decb
repnz
sti
cmc
cmp
cmp
clc
shl
movb
sti
in
cmp
fsub
jmp
iret
shl
les
test
sti
sarl
out
sti
aad
iret
int
rorb
xor
clc
leave
rol
repz
loope
int3
repz
fstpt
aad
fcomp
in
in
jecxz
jecxz
xchg
xchg
icebp
out
in
rcr
call
loope
lock
sti
out
dec
call
lea
cmp
cmp
rcl
in
xor
loope
int
repnz
loopne
dec
leave
cmp
in
fstl
iret
aad
cmc
fsubp
ljmp
fcom
jmp
lock
lock
repz
cmp
jecxz
into
hlt
aad
call
out
ret
loope
loop
cmc
imul
out
icebp
shlb
xlat
xor
xor
enter
iret
out
lret
shl
fdivl
lock
leave
out
aas
xlat
out
test
div
incb
sti
xchg
fiadds
jmp
ljmp
out
aaa
sbb
add
decl
repnz
loop
leave
not
repz
cmp
in
leave
in
cmc
fdivr
out
xchg
fdivp
mov
incb
dec
mov
xor
rol
jmp
fnstcw
cmp
cmc
in
xlat
iret
out
jmp
test
shl
xor
repnz
ror
fcmove
icebp
cmp
lret
in
stc
out
mov
aad
les
icebp
xchg
xchg
les
ljmp
leave
loopne
std
sarl
adc
std
std
ljmp
out
xor
cld
rcl
incl
mov
filds
mov
in
repz
movl
movl
cmp
movl
jmp
mov
fstp
enter
imul
out
rcrl
jle
add
shr
cs
xor
cmp
sarl
std
fistpll
fdiv
loopne
testb
adc
xchg
fucomip
cmp
out
stc
cmp
leave
std
std
cmc
out
rcl
enter
mov
leave
incb
mov
leave
fcmovb
lret
out
cmp
idivl
loope
iret
addb
cli
ftst
incl
hlt
lock
cmp
xlat
lock
out
aad
sar
cld
mov
loopne
fildl
xor
jmp
loop
adc
icebp
inc
jecxz
int3
mov
orb
cmc
in
hlt
cmc
cmp
sarl
int
aaa
xchg
repz
sti
stc
out
in
test
ljmp
cmc
fcmovnbe
in
cld
cmp
aam
sti
test
xchg
testl
aad
xor
out
clc
sar
ds
icebp
hlt
out
fidivrs
in
out
enter
xchg
loop
lock
ljmp
cld
rol
and
jmp
or
aad
test
shl
rol
shl
repnz
and
cld
leave
mov
mov
repnz
adc
shl
sbb
hlt
xchg
lock
jmp
out
cmc
aam
int
aaa
aas
clc
lock
out
test
ljmp
mov
lret
shl
cmc
xor
fsubr
out
fsubr
cmp
repz
lret
sti
out
orl
fstpt
cmp
int3
cli
lret
int3
jecxz
mov
std
xlat
loop
orl
in
xchg
jmp
sar
shl
ljmp
sti
call
loopne
faddl
xchg
int3
out
call
out
iret
xor
loopne
in
lock
loopne
mov
fimuls
iret
xlat
neg
cmp
cmp
sti
xor
xlat
xchg
stc
jecxz
fcmovnb
out
ljmp
add
andl
jmp
lret
aas
fst
fcmove
fidivrs
mov
jp
jle
sbb
jle
xchg
in
ffreep
xor
hlt
aam
out
fsubrp
cmp
ret
cmp
fcomp
rolb
ljmp
out
xor
cmp
hlt
fcmovbe
fmul
test
cmc
shl
sar
xchg
out
fdivr
mov
in
cli
ljmp
stc
cmp
hlt
xchg
fisttpl
jmp
std
loop
jmp
repz
aad
xor
jmp
out
sarb
and
int
push
repz
repnz
icebp
std
cmp
xlat
testb
call
mov
mov
int
icebp
rorb
cmp
clc
neg
std
fst
icebp
sti
hlt
aad
fdivr
loop
sti
cld
mov
test
loop
ljmp
call
sbb
sar
rcl
jmp
call
int3
lock
sar
out
div
lret
cli
loop
fcomp
in
lds
clc
ljmp
repz
fdiv
rcr
fidivrs
repz
fnstsw
loope
cmp
xlat
jmp
leave
popl
jmp
lock
cmp
jmp
int
aam
lds
sti
ljmp
xlat
stc
repz
xor
cmp
fiaddl
out
loope
call
imul
sub
faddl
ret
out
xor
cli
neg
fdivr
shr
sub
aam
int3
out
xlat
cmp
lret
cmp
iret
cmc
in
ds
xchg
std
testl
iret
ljmp
adc
mov
out
mov
test
aad
test
cli
ds
rcl
repnz
leave
fcmovnu
fimull
xchg
fmul
xor
cmp
int
lret
aas
icebp
cli
std
ffree
shl
test
out
mov
out
ror
cmp
icebp
cmp
stc
shl
xor
enter
cmp
lock
inc
clc
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
jmp
aam
aas
ret
lret
fst
fnstenv
lods
pop
inc
mov
dec
sahf
sbb
jle
lock
iret
mov
loope
aaa
in
out
std
ljmp
mov
lret
loopne
std
enter
xchg
in
lock
cmc
idivb
ss
xor
adc
out
sti
cmp
loope
aad
ljmp
iret
lock
int
in
hlt
icebp
xor
lock
aas
adc
loop
in
fucomip
mov
in
aad
xor
fucom
cmp
out
add
mov
fucomp
mov
sub
out
test
call
out
fdivp
out
cmp
out
out
int
ljmp
hlt
xor
out
out
sarb
xor
sbb
sarl
call
out
mov
loope
iret
shr
leave
cmp
cli
xor
fst
in
fdivrs
sti
sbb
out
mov
stc
loop
mov
out
into
aad
xor
ror
xor
testl
enter
jmp
xlat
xlat
lds
in
fcmovnbe
clc
rcl
loopne
add
testl
rcl
jmp
jmp
int3
aad
test
xlat
ret
fxam
ret
fiaddl
loopne
xchg
out
jecxz
das
repnz
hlt
fdivr
ljmp
xchg
stc
mov
cmc
lret
out
iret
fucom
shr
out
loop
ss
clc
iret
ror
aam
div
in
loop
cmp
mov
lea
sub
cmp
shl
cmp
into
int3
stc
iret
sbb
in
sub
xchg
out
loop
ret
xor
out
aas
shl
aad
fxch
xchg
add
iret
aam
mov
repnz
cli
jecxz
enter
sarb
rcl
fcomip
std
stc
xchg
mov
xabort
fisttpl
sub
xor
jmp
sar
ljmp
mov
ljmp
out
ljmp
aad
icebp
into
cmp
into
std
leave
jecxz
ret
ds
ret
cld
jmp
add
xor
mov
add
mov
movzwl
jmp
rcl
xlat
fcom
push
outsl
bound
mov
jle
add
sar
dec
aam
xchg
out
ljmp
cmp
lret
sti
repz
not
xchg
mov
icebp
adcb
shr
jmp
loopne
sti
std
hlt
shr
cmc
aam
test
mov
out
divb
jecxz
into
in
rcl
iret
loopne
fucomi
cmp
repnz
shl
in
jmp
mov
stc
mov
cld
rclb
xlat
enter
xor
in
fcomi
clc
xchg
orb
ret
cld
test
subb
ss
xor
aaa
xor
cmp
sti
loopne
cmp
aam
sti
faddp
loopne
ljmp
xor
in
in
sti
cmp
fdivr
aas
iret
sar
xchg
stc
cmc
xchg
mov
or
xchg
loop
lret
repz
xor
sar
std
cld
cmp
fadds
or
ret
hlt
test
ret
lret
out
fsubr
test
ret
fld
in
lret
mov
repz
nop
shr
jmp
icebp
aad
xor
xlat
fcom
out
cmp
call
fprem
lock
out
in
vcvttsd2si
icebp
in
repnz
fcomp
aas
rcl
loopne
cmc
mov
enter
in
adc
call
jmp
rol
test
rol
ret
xchg
sti
fists
rcll
shr
out
in
clc
in
repz
or
stc
cli
fmull
jecxz
cld
fisttps
repnz
into
das
std
out
cmp
ret
adc
xchg
testb
xchg
or
jmp
out
in
div
loop
rcr
call
cmc
std
and
into
cld
xchg
out
lret
jmp
in
out
xor
in
clc
fcmovbe
roll
in
jecxz
int
loop
lret
fsubrs
shl
lock
fcmovnb
std
loop
mov
filds
int3
aad
shr
xor
clc
shlb
out
testb
jmp
aam
enter
aad
cmp
and
mov
jle
sbb
jle
sti
add
call
cmp
aam
ss
ret
fdivr
fnstcw
in
test
out
stc
loopne
orl
stc
ljmp
cmp
rol
aas
jecxz
les
mov
rorb
int3
in
fsubr
cmp
loope,pt
cmp
cmp
cld
cli
in
cld
clc
call
int
xchg
int3
out
ljmp
rcl
faddp
icebp
call
fsub
jmp
movl
lock
cmp
in
int
xor
test
aam
out
in
mov
out
mov
xchg
not
aam
repz
int3
fsubp
cld
lret
ds
rcl
clc
aad
call
xchg
int
adc
icebp
stc
cld
cli
repz
aam
jmp
aas
fst
cld
shr
ljmp
test
cld
loopne
xor
shl
repz
ror
idiv
fsub
ret
aam
testb
or
ret
int
aaa
cli
cmp
out
sbb
into
ds
push
ljmp
in
icebp
xchg
in
in
das
cmc
jecxz
cmp
fidivrs
test
fdiv
cld
fsubr
sti
mov
loope
xchg
xchg
repnz
out
sti
hlt
lret
rcl
test
cmp
mov
fmulp
lea
rorb
int
fmul
out
aam
cmp
test
filds
enter
int3
ljmp
xor
fstpt
lock
fprem
aas
fmul
clc
out
in
cli
hlt
out
in
sti
fistl
aad
repz
cmp
out
xlat
int3
test
jecxz
xlat
out
les
iret
test
lret
repnz
ss
fst
xor
sarb
sbb
shl
fcoml
aad
int3
out
cmp
ss
push
ret
jecxz
test
std
mov
jmp
xchg
enter
loope
in
cmc
cmp
lret
aam
shr
cmp
cld
ss
repz
xor
mov
mov
jmp
xorl
mov
jmp
rcl
enter
fcmovne
fdivl
mov
jle
add
cmp
enter
loop
into
call
fdiv
hlt
vpsllq
ffree
cmp
cli
fadd
fcmovnb
in
filds
into
call
cmc
out
ljmp
fidivrs
xchg
sub
jmp
rcl
jecxz
in
lock
out
ror
hlt
adc
out
xchg
ret
stc
mov
mov
xchg
xchg
in
out
out
out
iret
out
aam
addl
mov
in
fstp
shl
shl
jmp
ss
cmp
shl
call
mov
clc
std
jmp
faddl
lret
fcmovne
xor
idivl
icebp
cmp
icebp
xchg
orb
fcmovb
sar
in
out
cmpb
in
cmc
fcmovb
fcmovbe
in
stc
loopne
repz
mov
out
out
cli
ljmp
xor
idivl
rcr
out
mov
hlt
sub
in
xor
fdiv
out
aam
fucomi
filds
ret
call
test
call
mov
xor
fldl2e
xor
ljmp
cmc
xlat
xchg
call
xchg
fstl
shl
cmp
jmp
cmp
mov
out
leave
mov
dec
jmp
icebp
in
ljmp
loopne
cmp
ffreep
xchg
int3
iret
in
xchg
fmul
aas
iret
stc
fcmovne
fnstsw
ljmp
shl
fcomp
stc
lds
mov
call
cld
out
fucomip
fsub
cli
cmp
test
fdivr
loop
out
roll
not
xor
fdiv
rcl
clc
ljmp
enter
lret
cli
xchg
loopne
xchg
imul
in
stc
cmp
div
cmc
in
shl
fcmovu
rol
test
mov
repnz
out
in
repz
cmpb
out
clc
fistpll
stc
pushl
call
test
je
leave
ret
push
mov
sub
movl
movl
incl
mov
add
jmp
leave
ror
xlat
fstp
fst
pop
push
inc
dec
jmp
add
nop
mov
jle
add
mov
lret
out
lret
xchg
fnstenv
xlat
fldcw
in
call
repz
rcr
cli
sti
loope
int3
out
incb
int3
stc
fcomi
ljmp
ds
test
mov
test
out
mov
in
jmp
sarb
sti
les
mov
cmc
rol
in
xchg
out
out
in
mov
loope
out
std
hlt
faddl
cmp
shl
loopne
mov
ljmp
xchg
test
ss
das
repnz
out
int3
sarl
xlat
shl
xchg
call
xlat
aad
cli
mov
in
jmp
cld
cmp
jecxz
xchg
fcmovnbe
jecxz
enter
out
out
and
jecxz
loope
cmp
clc
leave
push
loop
in
fnclex
test
cld
hlt
enter
fldl
jmp
call
cmp
into
aam
les
xchg
fmuls
addl
aad
lock
shr
ror
lock
cmp
rcr
jmp
int3
out
fxch
fcoml
lret
mul
rcl
out
rcl
loope
icebp
std
in
mov
mov
rol
stc
shl
rcr
ds
cmp
cmp
sarb
leave
call
mov
call
xor
rol
call
aam
loop
idiv
jmp
fcmovu
nop
fcomi
iret
ljmp
int3
jmp
call
cli
std
not
jmp
fcomp
out
repz
rcl
or
int
clc
loop
enter
sti
fucomip
mov
mov
lret
lret
fst
fcom
loop
call
cli
jecxz
loope
mov
jecxz
lock
in
shl
cmp
hlt
repz
out
std
cld
int3
xchg
hlt
jmp
iret
iret
mov
nop
fucomip
xchg
call
cmp
aam
in
clc
not
inc
loopne
fucomip
testb
ljmp
stc
cmp
out
fcmovnu
xor
cli
testb
lret
inc
cld
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
adc
lea
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
push
lea
and
jmp
mov
into
lret
rcr
xlat
nop
aaa
dec
out
cmpsb
xchg
cmc
int
mov
jle
mov
leave
int
nop
clc
in
cmc
xor
xlat
icebp
hlt
cmp
cmp
cli
xchg
in
jmp
repnz
int
clc
repz
das
ds
rcl
loop
shl
jecxz
fcomip
test
cli
mov
int3
cli
ror
out
cli
fdivrl
roll
aas
test
in
jmp
loopne
adcb
int3
xor
out
aaa
cmp
and
aam
jmp
fucomip
ljmp
div
cmp
lret
xor
xor
rcl
aad
ret
xlat
xlat
decl
fmulp
xchg
in
call
into
icebp
fdivrp
shl
mov
in
inc
xchg
ljmp
in
cmp
jmp
out
loope
shl
inc
cli
in
xchg
cld
mov
out
fists
jmp
fidivs
repz
cld
ret
loop
mov
ljmp
int3
out
fdiv
cmp
loope
int
cmp
out
jmp
shr
faddl
stc
cli
std
int
call
les
cmp
aas
int3
roll
repz
shl
lock
aam
icebp
fcomp
aaa
jmp
neg
xlat
les
iret
adcb
in
ror
int
aad
int
rcl
fdiv
ffree
cmc
stc
xlat
call
xor
xchg
out
ss
hlt
in
lret
in
out
cmp
clc
xlat
clc
idiv
dec
sti
mov
mov
mov
mov
fxch
ljmp
cmp
test
cld
in
xchg
repz
mov
repz
out
ljmp
cmp
shl
aad
std
stc
or
sub
enter
lock
ds
cmp
out
xlat
lock
sti
mov
or
mov
xor
fucomp
iret
roll
cli
sub
into
sti
loopne
call
xor
repz
cmp
int3
fadd
test
ret
loopne
leave
mov
mov
push
adc
push
mov
mov
mov
sbb
jmp
rol
rcl
aad
addr16
sbb
jle
xchg
lret
mov
leave
cmp
hlt
int
xor
and
out
lock
out
cld
mov
repnz
cli
lock
jmp
cmp
fmul
xlat
sti
out
lret
mov
rclb
iret
stc
out
into
shr
int
cli
std
not
cmp
filds
mov
rol
shl
iret
shr
lret
shr
in
jmp
in
cmp
cmp
jmp
in
mov
xchg
int
out
fprem1
leave
cmp
into
shr
shl
loope
cli
in
int3
lock
mov
in
mov
rcr
loopne
cli
xlat
push
test
incb
in
cli
repz
neg
in
iret
lock
loop
in
icebp
fmul
stc
rcr
stc
fcomi
testb
out
shl
repnz
iret
fucomip
in
fabs
std
in
fcmovnbe
mov
cmpl
int3
fsubp
ljmp
fdivr
out
clc
aas
aam
fidivrl
xchg
loope
cld
mov
sti
in
call
mul
shl
cld
ror
fscale
cmc
lock
xchg
rcl
testl
shl
xor
idiv
int3
iret
shl
loopne
test
sub
mov
cli
lock
int3
lds
in
aam
cmp
cmp
addb
mov
mov
int
xchg
filds
in
loop
aad
cmp
xlat
cmp
cmp
rorl
loope
xchg
jecxz
loopne
in
aam
int
xor
iret
lret
lock
in
lock
fsubp
loopne
out
lock
mov
xor
stc
lock
ss
cli
in
lret
out
loopne
lock
decl
sub
aaa
div
jmp
aam
fdivp
aas
sti
mov
mov
xchg
xchg
jmp
fcmovne
aad
cmp
cmp
int
adc
mov
loope
into
xlat
fucom
in
nop
int
xor
iret
xor
int3
fcomip
repnz
xor
mul
repz
decl
call
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jb
mov
or
mov
jmp
ror
into
fcmovne
out
je
dec
mov
jle
ret
jle
jmp
fcmovu
stc
cmp
cmp
lret
std
imul
loopne
test
mov
ljmp
in
out
clc
das
aaa
ss
aam
stc
stc
aad
xchg
ret
int3
out
rcl
loope
ss
cmp
std
stc
aam
test
leave
aas
lock
jecxz
hlt
ret
cmp
rcr
cld
roll
loope
in
repnz
fcmovu
out
fucomp
out
mov
xlat
repz
ror
cmp
ret
ror
jmp
out
xchg
int
das
aad
cmc
ret
ljmp
fchs
out
lock
cld
or
mov
jmp
clc
std
lock
idiv
shl
loopne
mov
jecxz
mov
cmc
xor
int
hlt
rcr
out
std
cmp
div
cmp
fsqrt
test
test
lret
xor
ret
enter
sti
cld
out
jmp
hlt
icebp
sti
cmp
int3
enter
in
mov
cmp
fdivs
repz
ljmp
cli
enter
aad
orb
mov
loope
fprem
call
into
rcr
xlat
aaa
clc
rcl
in
in
jmp
int
or
jmp
lock
out
testb
enter
jmp
xchg
out
xor
xor
test
out
cmp
cmp
sti
repnz
mov
aam
in
cmp
decl
clc
leave
in
idiv
rcl
fldl
xchg
fucom
leave
test
xchg
loop
xor
shl
lret
fucomp
aad
ret
shl
addl
fldl
int3
xchg
rcl
xor
xor
jmp
cmp
lret
faddp
fdivp
shl
jmp
out
mul
stc
mov
lea
leave
lret
cmp
fnsave
out
cmp
repz
in
add
fmuls
xchg
aaa
xlat
repnz
in
enter
xor
fdivr
in
call
fsub
xor
ljmp
sarl
adc
push
flds
add
add
rolb
add
inc
add
movb
div
mov
movl
cmp
jmp
lret
leave
aas
int3
leave
stos
jb
push
cmc
xchg
inc
mov
add
repnz
out
out
loop
in
xchg
xchg
loopne
fdivr
in
ror
loop
repnz
rcr
in
std
cmp
hlt
loope
icebp
cmc
jmp
nop
loop
repz
out
hlt
xor
ss
shl
in
aad
fmull
lret
in
into
icebp
out
jecxz
fcomp
call
fdivrl
in
xlat
stc
mov
shl
iret
shr
int3
cmp
hlt
aam
int3
rcr
loope
rol
mov
xchg
cmp
loope
mov
aad
ss
jmp
out
fiadds
fucomi
cli
mov
cli
in
mov
into
rcl
int
sarb
lret
rolb
sbb
jmp
int
mov
aaa
into
rcl
shl
cld
fidivrs
aas
cli
out
into
test
loope
test
std
leave
loopne
lret
lret
nop
out
xor
cli
cmp
dec
lock
sar
xchg
loopne
mov
int3
mov
imul
aad
std
shll
cmp
int
lock
xchg
enter
addb
loop
in
rcr
xlat
cmc
cmp
out
cli
enter
lret
rol
jmp
iret
jmp
fdiv
cmp
fucomp
cli
jmp
cmp
ds
cmpl
xchg
xor
cld
int
lret
cmp
aas
hlt
xchg
mov
nop
out
in
xchg
xor
in
cmc
out
vpaddb
cmp
int3
cmp
test
std
xor
xchg
mov
test
test
jecxz
in
in
cld
aad
hlt
ss
aas
in
neg
idiv
out
ljmp
cmc
out
test
int
cmp
aam
aas
inc
icebp
loop
sti
mov
xchg
mov
in
out
mov
jmp
cmp
leave
leave
aaa
xor
xor
ret
idiv
out
xchg
xchg
lret
shl
xor
xor
clc
fstp
fdivr
rcl
loopne
xrelease
in
xchg
in
call
ret
je
movl
lea
jmp
iret
iret
ror
ror
xlat
fstps
pop
xor
inc
jle
ret
jle
rcr
fsub
in
iret
fdivr
ret
mov
ljmp
in
out
xchg
ret
sub
lock
shl
cld
fldl
lds
int
aad
shrl
aaa
xlat
lock
xor
clc
imul
rol
fiaddl
mov
loope
add
aaa
shl
xlat
ds
out
les
or
sbb
xchg
hlt
aad
test
sar
cmp
int3
lock
test
rcr
xlat
enter
hlt
rolb
sti
rcl
jmp
clc
shl
sti
fucomp
out
xlat
mov
in
loopne
test
div
in
cli
fcmovne
neg
lret
cmp
or
ret
out
clc
int3
mov
in
mov
cmc
icebp
enter
icebp
call
repz
test
ror
jmp
or
xchg
nop
fdivrp
mov
out
std
jmp
int
ffree
incl
aam
out
in
mov
xchg
rcl
xlat
ret
clc
cmc
xor
cmp
fcmovnb
clc
lock
fiadds
addl
xor
in
idiv
xor
xor
test
cld
and
aad
cld
fsubr
out
movl
fcmovnbe
idivb
lret
cmp
cmp
jmp
xchg
fucomip
sti
mov
xchg
iret
loopne
fcom
xor
cmc
shl
int3
cmp
in
addl
call
addl
out
rcr
ljmp
xor
in
icebp
loopne
mov
aam
cs
stc
cmp
fxch
aas
aas
out
enter
loopne
mov
rclb
in
sti
in
lock
rcl
jecxz
ret
out
loopne
mov
repz
shl
fdiv
xor
cmp
repnz
fmul
xchg
jmp
repnz
xor
aam
leave
shr
out
aam
fcom
in
fcomi
fnclex
test
xchg
in
out
stc
repnz
in
shl
aaa
sti
mov
mov
mov
jmp
lret
ret
int
lret
in
aad
xchg
jmp
sub
ret
jle
aas
out
sti
std
sar
rolb
flds
test
enter
iret
aaa
call
cmp
in
clc
loop
rol
fsubp
mov
mov
in
lock
cmp
aas
aam
rcl
into
fcmove
aad
mov
ret
aas
loope
nop
loopne
loopne
out
aad
lret
int
sar
jmp
into
hlt
test
and
leave
out
shl
xchg
xor
div
sarb
fdivrl
aad
in
out
out
out
mov
jecxz
sti
sti
icebp
jmp
test
cmc
mov
jmp
in
iret
xor
ret
leave
sti
call
stc
icebp
cli
out
cli
std
ror
loope
sti
in
in
ljmp
iret
repz
fcmovnbe
out
loope
stc
std
ret
cmc
fcmovnbe
sar
hlt
lret
out
loop
leave
in
cmc
mov
rcr
les
imul
repnz
int3
repnz
repz
loop
int3
mov
mov
rorb
ror
loop
imul
aam
fcmove
rcr
sbb
jmp
lret
xchg
jmp
jecxz
jecxz
stc
fdivrs
ljmp
fldl
fcomp
repnz
ljmp
in
ljmp
rolb
mul
cmp
xchg
in
int
div
rcr
fxtract
hlt
sub
repnz
jecxz
ror
xchg
int3
fmul
mov
in
xor
cmp
in
cmc
shr
in
std
aaa
rolb
ret
jecxz
call
shr
shrb
icebp
out
div
aam
ror
xlat
test
xchg
jmp
hlt
rcl
aad
ror
icebp
rol
stc
aas
movb
lret
fcmove
mov
cmc
int3
xlat
loope
idivb
ror
cmp
xor
std
fcomp
xchg
mov
mov
int3
jmp
mov
lret
adcl
icebp
sti
repnz
cmp
jecxz
iret
fucom
in
sbb
loop
fsubp
jmp
aam
shr
xor
out
shl
imul
mov
mov
cmp
je
jmp
rcl
mov
aad
sti
adc
in
inc
jle
ret
jle
loopne
rcl
roll
orb
out
clc
in
repz
rcr
hlt
jecxz
icebp
jmp
sar
ret
leave
mov
lret
mul
shll
shl
lret
repz
lret
call
aad
addb
out
int
enter
mov
fcmovnu
ds
xor
sar
ret
jmp
lret
or
mov
out
rolb
repnz
cmp
ret
out
loope
fcomp
test
jmp
std
xchg
cmp
cmp
fcmove
repz
cmp
test
in
out
jmp
fsub
sbb
shr
cmp
xlat
int
repnz
cli
aas
stc
fldlg2
cld
aas
leave
std
in
jmp
mov
jmp
into
aam
cmp
testl
jmp
filds
out
repnz
fmul
cmp
xor
repz
filds
call
sbb
enter
subl
fistpll
cli
lock
fnclex
cld
lret
mov
out
nop
out
aam
aad
in
out
rcr
cmp
shl
cld
test
mov
jecxz
test
repnz
jmp
call
fyl2xp1
cmp
hlt
xor
stc
sarl
sbb
out
xchg
lock
mov
int3
jmp
sar
cmp
cmp
out
aas
repnz
fildl
xchg
xchg
test
in
out
repz
clc
jecxz
fnstsw
shl
ljmp
addb
cmp
sti
cld
hlt
fsubrp
lock
sbb
enter
in
lea
std
incl
out
fcom
cld
fsubr
std
iret
cmp
loope
fcomip
out
and
loope
loope
jmp
aaa
cmp
xor
jmp
int
ret
jecxz
vpandn
out
jmp
repz
aad
cmp
leave
xor
hlt
sarb
fucom
test
aam
mov
nop
fisttps
leave
cmp
out
lock
lock
aam
aad
fmuls
fwait
sbb
pusha
mov
xor
add
jmp
rol
lret
fstp
aad
dec
jns
movsl
loop
xchg
mov
jle
ret
jle
ret
fucomp
sti
stc
xchg
jecxz
jmp
stc
repz
not
idiv
fdiv
icebp
fyl2xp1
aas
call
ljmp
mov
fprem1
leave
das
leave
cmp
sti
int3
repz
mul
icebp
add
into
mov
in
loop
idiv
aad
sub
fnstsw
faddp
sarb
mov
fucomip
ficoms
xor
xor
cmp
jmp
cmp
ret
in
or
call
mov
ljmp
loope
fdiv
cmp
fdivp
mov
out
mov
int3
jmp
ljmp
fmul
fiadds
cmc
mov
mov
into
out
int
rcr
aam
cmp
ss
int
cmp
leave
sarl
cli
out
std
lret
stc
mov
sub
clc
das
xor
repnz
fcmovne
adc
cmp
mov
xchg
std
cli
in
lret
jmp
xchg
out
rcl
into
xor
xor
lock
ret
neg
clc
fsubp
cld
out
xchg
shr
cmc
fxch
cli
fucomp
out
icebp
repz
div
rol
testb
jmp
xor
mov
jmp
clc
cli
ret
std
aaa
repz
loope
loopne
loop
lock
cmc
fildl
cld
fcmovne
iret
nop
in
int3
mov
fsincos
sar
sarb
rol
std
loopne
jecxz
jecxz
out
icebp
and
repz
ljmp
xor
std
fstpt
rcr
idiv
in
aam
fstp
cld
cli
repnz
xor
lret
out
xlat
ds
ret
icebp
cmp
ds
leave
clc
test
int
mov
mov
fsubrp
xor
in
icebp
int
sti
fcmovne
hlt
stc
cmp
cmp
xchg
ror
ret
fcomi
push
f2xm1
test
xchg
leave
int
idiv
cld
stc
into
in
hlt
sar
xchg
cmp
cli
shr
fisttpl
out
stc
fcmove
shl
ljmp
not
jecxz
sti
cld
enter
in
test
repz
in
lock
sti
cmp
ljmp
test
aas
fstp
sbbb
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
jmp
fmul
into
ror
fstp
int
dec
je
mov
ret
fnstenv
jle
add
std
mov
out
lea
cli
in
in
out
sarb
cmp
adc
cli
fsubp
xchg
fsubp
aad
cmc
xlat
ret
ror
lret
cmp
loopne
loope
mov
loop
out
enter
sti
aaa
icebp
fidivrl
call
in
sti
aam
out
fcomip
mov
loope
iret
icebp
cmp
enter
cli
fiadds
roll
mov
xor
loop
cmc
cmc
out
cli
loope
jecxz
repz
clc
hlt
sbb
jmp
int3
lock
cs
fdecstp
out
clc
loopne
cli
aad
shl
fdiv
repnz
in
std
fiadds
xchg
sub
sarl
icebp
enter
clc
in
fcomi
hlt
loopne
loope
testl
ret
xor
cli
xor
std
sarb
cmp
sti
icebp
sarb
cmp
mov
loop
loope
xor
repz
lret
into
repnz
rol
sbb
ret
mul
mov
iret
cli
xor
xchg
repnz
hlt
cli
sti
shl
shr
and
cld
not
ret
idiv
fsubr
out
mov
rclb
ljmp
in
lret
loope
clc
lock
fsubr
aad
mov
int
orb
jmp
xor
ds
fcom
cmp
cmc
cmc
mov
loope
lret
incb
jecxz
xor
out
repnz
stc
fsub
cmp
cmp
int3
cmc
jmp
in
ljmp
sarb
fdivrs
fdiv
into
incb
clc
cmp
in
faddp
loopne
stc
xchg
push
enter
in
fdivrl
rcr
sti
std
jecxz
test
repz
cld
mov
xchg
lret
test
ret
lret
fdivrp
fucomp
aas
stc
loop
flds
test
loope
cmp
xchg
mov
divl
xlat
enter
int
neg
in
lock
lret
cmc
mov
out
mov
call
sub
shr
jecxz
xor
leave
cmp
test
rcl
repnz
fdivr
in
leave
test
mov
jmp
rol
rcr
and
shll
add
rcr
rorl
aad
aad
out
xor
into
sar
clc
ss
shl
mov
add
lret
into
in
aaa
xor
cmp
into
cli
out
iret
ljmp
xchg
hlt
cli
aam
ljmp
jmp
call
cs
ret
out
fld1
leave
cld
stc
in
mov
out
xor
jmp
in
cld
repnz
int
loopne
icebp
sti
jmp
or
mov
mov
test
xabort
cmp
loopne
icebp
fsqrt
test
sbb
in
fcmovbe
mov
testb
aam
leave
cli
rolb
sbb
mov
xchg
mov
lret
int
shlb
stc
out
fidivl
cmp
cmp
into
idiv
std
xchg
int3
out
out
ljmp
lret
repnz
idiv
int3
mul
call
and
leave
xchg
fdivp
jmp
in
mov
lret
iret
std
fst
dec
out
loopne
add
test
or
fimuls
icebp
cli
xor
int
icebp
xlat
aad
ret
in
fimull
shl
sub
in
cmp
jmp
lret
cld
rolb
in
enter
iret
shl
testb
hlt
lret
fucom
mul
cmp
cli
clc
out
inc
ret
out
in
lret
leave
out
fildl
loop
jmp
fsubrp
rol
loop
roll
leave
in
enter
xchg
loope
das
cmp
shll
cmp
hlt
out
dec
cmp
decb
in
shl
lret
in
sti
lock
lock
xlat
loopne
faddp
mov
ljmp
lds
icebp
pushl
int3
in
cli
aas
rcr
decl
shl
call
lock
shr
lret
cmp
idivb
lock
jecxz
clc
vpaddq
sar
out
sub
mov
into
iret
sub
call
iret
fcmovnu
in
repnz
loop
fmul
ret
mov
mov
mov
add
pop
add
add
rcl
fstp
aad
mov
cmp
jle
ret
jle
xchg
cmc
shl
xlat
sar
clc
loopne
fnop
out
imul
loop
fsub
fsub
fdivrp
lock
shl
mov
repnz
stc
leave
out
repnz
xlat
rcl
xchg
xchg
shl
not
jmp
fdiv
call
in
fdivl
stc
loope
cmp
cmc
icebp
mov
cld
mov
into
mov
shr
hlt
hlt
repnz
rcr
ss
in
cmp
repnz
test
ret
shl
loope
stc
std
out
incl
xor
cmp
out
int
sarl
test
ret
aam
aad
fcomp
into
std
mov
xacquire
lock
aam
xor
iret
clc
xlat
aad
out
repnz
int
xchg
in
mov
rcr
int3
shll
hlt
aam
in
std
cmp
aas
loopne
in
fcmovb
sbb
call
jmp
in
in
aaa
jmp
ret
aaa
not
fcomip
jecxz
push
fsub
clc
cli
cli
in
in
jmp
fsub
mov
shl
idiv
jmp
fadd
lock
test
jecxz
xor
add
lret
lret
repz
out
loopne
jecxz
in
ljmp
loope
call
jecxz
shl
call
in
int3
out
into
icebp
not
out
sarl
shl
stc
out
flds
jmp
fst
adc
out
in
cld
xlat
lock
shr
aad
iret
mul
cmp
loop
cld
xchg
in
ss
ljmp
aad
cli
repz
lock
call
loopne
lock
fldcw
hlt
xlat
or
cli
stc
clc
mov
aam
test
in
jmp
jmp
loop
aad
enter
rol
aam
aad
cld
mov
out
iret
mov
shl
loope
lds
cld
std
cld
aaa
cmp
in
jecxz
stc
faddl
out
fsub
mov
rcr
loopne
sub
idiv
int
xlat
out
into
cmp
cmc
loop
cld
xlat
out
enter
cld
shl
xchg
in
int
xlat
into
clc
fcmove
shl
fcmovbe
cld
in
jecxz
in
jecxz
lret
ffreep
loop
mov
xor
mov
add
cmp
je
mov
xor
jmp
ror
ror
mov
cmp
mov
push
jle
ret
jle
sub
cmp
aas
lock
hlt
int3
loopne
sar
in
test
orb
cmp
idivb
in
loop
into
rcr
rcr
in
in
jmp
int3
lea
stc
lock
out
aad
cmp
sub
in
rcr
in
clc
in
out
std
jmp
xor
fdiv
aam
imul
icebp
rcr
xor
sti
incl
in
xlat
out
xor
out
fcomp
cmp
les
jmp
mov
fisttpll
xlat
lock
cli
in
clc
fxch
in
fadd
aas
cmp
call
out
mov
jmp
int
cmp
cli
cmp
test
int
jecxz
mov
sub
aaa
lret
stc
sarb
sbb
rcl
hlt
leave
cli
mov
loope
fucom
lret
out
jmp
clc
idivl
sti
cmp
aad
cmp
neg
ffree
xchg
in
in
lock
in
xchg
mov
stc
xor
ljmp
jmp
in
mov
testb
int3
call
sub
repz
hlt
out
jmp
dec
cli
fcmovbe
clc
aad
cli
fndisi(8087
in
loop
call
mov
jmp
das
aaa
rcr
repnz
ds
aam
fcmovnb
lret
addb
out
shr
enter
out
icebp
rcr
loop
aas
hlt
hlt
cld
aam
movb
lock
xor
clc
jmp
leave
jmp
fst
test
xlat
incb
jmp
adcb
aaa
sti
cmp
aam
cmc
test
fisttpl
xchg
xchg
xor
out
xlat
int3
cmp
aaa
rol
ror
lock
ret
mov
cld
in
shl
repnz
out
xor
sarl
aam
loop
sar
ret
xchg
std
idiv
jecxz
cmp
shl
xor
in
icebp
int3
ljmp
imul
test
fmul
cld
loop
cld
mov
rclb
testl
add
xlat
into
ror
fxch
flds
jp
pop
js
xor
ret
jle
repnz
int
fsubrp
ret
rcl
fdivrp
aas
cld
test
cld
fdivr
sar
fcomip
test
icebp
cli
xor
call
idiv
in
out
fimuls
loopne
xchg
int3
ss
xabort
into
adc
loopne
lock
dec
loopne
stc
addl
rcl
cmp
cmp
call
loopne
rol
inc
xchg
mov
ret
xor
fadd
aam
ds
xor
cli
out
or
lret
leave
cld
in
xchg
in
aad
cmp
lret
cli
or
int3
into
int
test
ljmp
int3
repnz
repz
xchg
xor
aad
ljmp
fdivp
aad
aas
cli
roll
into
ljmp
xlat
hlt
out
in
cli
stc
sar
std
aad
aad
iret
repnz
mov
clc
idiv
testb
addb
rcr
cli
fildl
ret
cmp
loop
int3
loopne
lea
hlt
leave
xor
sar
fptan
aam
out
addl
leave
lret
xchg
cs
not
xor
cmc
xor
cmp
test
out
xchg
mov
out
out
out
ret
leave
sarl
int
int
xor
sbb
fmulp
mov
in
xchg
aam
mov
out
sub
out
int
fdiv
mov
fucompp
mov
fistl
xor
leave
cmc
xor
clc
fidivl
shl
cmp
in
xchg
fucompp
in
loop
mov
std
mov
iret
ret
ss
iret
ss
out
aam
repz
repnz
aam
neg
cld
ljmp
adc
in
out
not
repnz
ljmp
loope
lock
lret
shl
call
clc
repnz
cld
aad
aam
and
lock
xchg
jmp
fmul
int3
iret
mov
out
out
fucom
call
xor
in
ss
aad
xor
in
std
loope
fildl
ss
cmp
add
add
leave
int3
aam
aad
fnstcw
ficompl
jmp
cmc
cmp
enter
ret
jle
xor
rol
fcmovne
cld
fsubr
cld
call
mov
shl
das
int
cli
clc
cmp
int3
aas
cmp
shl
rcl
xlat
mov
sbb
in
mov
shll
xlat
in
enter
cmp
int3
cmp
cmp
clc
fsubr
mov
movl
aad
xor
mul
fscale
jecxz
stc
loop
xchg
int3
loop
ljmp
ljmp
ljmp
test
sti
loopne
nop
mov
ljmp
lret
in
loopne
aam
faddl
in
mov
cld
or
test
shl
aaa
ret
aam
lret
fdivr
stc
aas
cmp
xor
les
out
test
aad
lret
in
neg
lret
stc
cmp
aam
lock
cmp
xlat
leave
loop
fdiv
in
lea
jmp
rcl
out
ljmp
fdivrs
adc
std
hlt
fdiv
popl
shl
shl
cmp
clc
cmp
idivl
fcmovne
cmp
ds
lock
cli
jmp
fldl
xchg
in
jmp
test
out
std
test
loopne
loopne
nop
xchg
fadd
clc
cmp
leave
out
xor
cmp
shl
add
lret
in
ljmp
aas
rol
fnstsw
cmp
xchg
icebp
repz
test
repz
hlt
cmc
hlt
xor
sub
aam
leave
out
jmp
stc
rcl
cmc
aam
std
jmp
aas
adc
xchg
int3
mov
xchg
rol
cs
fidivrs
orl
leave
in
in
enter
in
ror
iret
rcl
stc
das
call
clc
test
fcmovbe
aam
fcmovb
call
mov
loop
lret
in
cmp
out
iret
aad
cli
rcr
xlat
xchg
hlt
sar
call
test
repnz
shll
fmul
rcr
repnz
out
enter
xchg
loope
idiv
loop
out
cmp
shlb
aas
cmp
ror
mov
jmp
rol
int3
fmul
aad
mov
mov
les
jle
mul
loopne
cmp
out
fmuls
mov
lock
shl
repnz
rcr
test
or
out
mov
call
aad
icebp
aaa
cld
fistpll
cmc
xchg
mov
in
xchg
decl
xor
shl
rcl
or
out
loope
call
lds
call
bnd
lret
out
ror
cmc
out
fld
roll
or
in
out
out
cmc
cld
jmp
shl
fcmovu
loopne
fadds
int
mov
std
out
ret
sub
int
fdivrs
xor
iret
sti
sar
cmc
out
mov
in
loopne
repnz
out
in
xor
fdiv
shl
xor
int
out
stc
test
adc
loopne
cld
mov
out
shl
ljmp
enter
in
fildl
aam
test
fcmove
loope
xchg
sar
repz
cmc
leave
aaa
cli
out
ljmp
ds
cld
jecxz
cld
mov
xchg
test
repz
f2xm1
xor
fdiv
aad
jmp
int
cmc
faddp
rolb
fst
popl
xor
ret
xchg
mul
stc
cli
jmp
iret
fxch
out
call
cmp
ljmp
shl
ds
and
leave
neg
enter
shl
repz
ljmp
call
clc
lds
aam
cmc
cmc
cmc
neg
xlat
mov
mov
xor
mov
test
cli
aas
cmc
lret
in
mov
xchg
mov
aad
div
into
jmp
in
rcr
fsub
in
clc
xchg
mov
xchg
xor
sti
out
lret
lret
in
ret
push
ds
adc
stc
mov
jmp
rcr
cmp
repnz
iret
out
cmc
xlat
leave
cmp
or
jecxz
call
cli
int3
into
cmp
clc
aad
ret
xor
jge
mov
xor
add
movzwl
mov
xor
lea
add
mov
jmp
aas
into
iret
ror
rol
shr
movsb
lock
out
push
pop
jle
ret
jle
filds
enter
mov
test
out
call
loopne
ret
hlt
cmpl
out
xchg
mov
test
pop
das
xor
lret
cmp
icebp
jmp
testl
int
sub
xchg
call
cmp
fstpt
fildl
lock
lock
enter
leave
fimuls
hlt
aad
xor
in
into
ror
out
ljmp
sti
xlat
out
stc
out
fcmovnu
in
lea
in
cmp
cmp
into
bnd
lds
jmp
std
leave
repnz
call
xor
in
stc
out
in
aaa
rcr
loopne
call
stc
mov
ljmp
in
leave
xor
cmc
enter
ds
xchg
and
repnz
out
in
mov
icebp
repnz
cmp
ljmp
sarb
clc
hlt
aam
enter
out
lret
into
repz
xchg
shr
leave
int
clc
fst
cmp
ret
aad
cmp
jecxz
and
mov
xor
ljmp
loop
in
ret
xchg
xchg
ljmp
in
xor
std
aad
int3
out
iret
fcomp
cld
xchg
jmp
enter
hlt
into
shl
iret
out
iret
into
out
xor
shr
sarb
enter
cli
xchg
rcr
mov
call
rcr
cmp
out
sti
ret
xlat
ffreep
int
out
loopne
cmc
jmp
hlt
iret
rcl
test
iret
cmp
testb
test
leave
in
shl
ret
jmp
fyl2xp1
cs
ss
repz
rcr
in
clc
jecxz
in
sub
out
sti
fldl
out
call
hlt
add
testb
std
fdiv
iret
lret
xor
jmp
fsub
in
repnz
repz
call
jmp
lret
out
xor
aaa
out
out
out
ljmp
xchg
xchg
and
jge
jmp
into
aad
vpaddusw
aad
js
jg
push
jle
ret
jle
jecxz
shl
call
in
out
clc
iret
sti
std
shl
std
cmp
jmp
cld
lret
lret
test
cli
int3
in
aaa
xor
cmp
clc
xchg
mov
xchg
xor
ret
call
clc
in
int
out
ret
repz
aad
out
fdivp
xchg
int
xor
icebp
iret
loop
int
fdivr
cli
in
cmp
movb
xchg
repnz
xor
ljmp
fcomi
sbb
fiadds
ret
fcom
ljmp
jmp
out
jmp
enter
fstp
rcl
fldl
loopne
into
test
into
mov
rorb
neg
clc
into
hlt
iret
loope
cmc
sti
aam
xchg
enter
jmp
xchg
repnz
int3
int
cmp
out
ror
fcmove
cmp
out
ds
div
hlt
mov
into
hlt
out
fdiv
stc
fxch
aaa
repz
xlat
jecxz,pt
flds
fmulp
sti
out
filds
ror
cmp
into
cmp
lock
mov
fimuls
out
call
xor
fcmovbe
lret
hlt
cmp
jmp
iret
iret
fdivrp
mov
std
in
stc
nop
jecxz
ljmp
xlat
neg
fcomip
into
aad
fcmovnbe
ds
sarb
clc
xchg
clc
or
lea
cmc
cli
out
lock
icebp
mul
std
mul
loop
in
sar
fldl
lds
stc
in
aad
shl
cmp
aad
cli
cld
test
popl
mov
jmp
lret
ss
leave
imul
cmc
cmc
cli
cli
roll
imul
ret
fcmove
lock
shl
in
xchg
out
cmp
aad
fdivrl
int3
lock
sub
orl
loope
mov
call
leave
shl
fadd
ret
cmp
aas
in
out
shl
jecxz
sub
in
jecxz
divb
fmul
xor
in
sti
fimull
sbb
add
imul
sub
jmp
aad
int3
fmul
fnstsw
dec
xor
ret
jle
call
ss
fxch
aam
fcompp
fdivp
cmp
std
sar
out
loop
sti
call
test
enter
xor
aam
shl
out
icebp
ds
enter
int3
loop
cs
in
cmp
rcl
fdiv
loopne
loop
clc
mov
leave
leave
in
mov
iret
int3
loope
test
xor
int
fadd
jecxz
loop
aad
loopne
lret
orl
stc
cmc
in
not
lret
fadd
lock
sbb
cmc
ljmp
xchg
icebp
into
shl
cli
shl
xbegin
roll
repnz
in
mov
out
loope
xchg
jmp
ror
in
jmp
aad
test
aad
test
mov
jmp
enter
aaa
std
sti
cmp
jecxz
test
cmc
jmp
cli
out
test
icebp
in
sti
in
fcomi
rcl
repz
jecxz
clc
movl
xchg
in
cmc
aaa
das
call
hlt
leave
call
out
cmp
flds
lret
test
enter
test
mov
ret
rol
xor
fcmovnu
ljmp
cmc
ret
xchg
aam
test
in
int3
xchg
xchg
mov
call
lret
call
aas
inc
rol
mov
lds
out
xchg
in
jmp
shr
jmp
fcmovbe
fsub
repnz
loope
out
mov
in
icebp
icebp
and
rcl
call
rcl
jecxz
in
sarl
cli
ret
addb
cs
xor
jmp
cmp
shl
adc
out
fiaddl
in
lret
rcl
xchg
clc
icebp
vshufps
fucomip
ljmp
xabort
fdivp
ljmp
ljmp
icebp
repz
idiv
lret
in
hlt
ret
ljmp
sti
mov
in
int3
in
out
fst
aaa
out
ds
fcmovu
loop
fsub
sar
xchg
out
mov
in
decl
call
add
iret
rcl
fcmovne
fnstcw
push
out
or
jle
lock
out
xor
fdivrp
sar
ror
cli
int3
mov
xchg
loop
int
repz
lret
clc
aad
jmp
in
cmp
idivb
cld
aam
out
cli
leave
fldpi
ljmp
or
into
leave
icebp
out
std
cld
sarb
xlat
xchg
clc
in
nop
in
call
aad
jecxz
cmp
aas
cmp
cmc
aas
iret
and
xor
or
jmp
out
ss
in
in
cmp
aas
shl
repz
fucomip
leave
ffree
ds
loope
enter
rorl
cs
cmp
jmp
repnz
out
sar
xchg
jmp
les
sti
int
jmp
fdivrs
cmp
aam
fcmovne
incl
int
xor
sub
in
xlat
ror
faddl
out
cmp
call
rcr
cmc
in
cmc
leave
in
cli
sub
std
jmp
aad
cmp
stc
cmc
call
addb
shlb
in
cld
xlat
cmp
into
stc
or
mov
call
jmp
loopne
movb
clc
ljmp
rcl
lds
in
neg
int3
xchg
sub
out
lret
cmp
push
jmp
in
sar
into
fucomip
and
in
xor
xlat
hlt
cmp
icebp
std
rcr
fcom
std
aas
cli
fcomp
out
call
xor
ss
out
enter
aas
loop
ret
shl
cld
cld
cli
ljmp
icebp
xchg
adc
in
fdiv
enter
not
fxtract
out
icebp
add
test
xchg
xlat
xor
out
aad
cmp
cli
aas
out
in
mov
idivb
aam
out
sub
repnz
lret
fcmovne
lret
bnd
and
adc
fsubr
fdivr
mov
fildll
aam
xor
les
fldz
cmp
aad
aas
ret
out
sti
fadds
rclb
out
xor
cmp
jmp
int
int3
int
cmc
inc
cwtl
fcmove
cs
pusha
arpl
ret
jle
rcl
cli
cld
cmp
fadds
loope
enter
fmuls
icebp
hlt
lock
clc
neg
lret
ds
rcl
fnstsw
ffree
test
cld
mov
sbb
out
xlat
repnz
xor
cli
loopne
out
fucomp
rcl
add
clc
clc
cmc
in
int
ret
fisttps
repz
xor
jmp
fcomp
loope
test
cli
aam
enter
aam
jecxz
enter
mov
lock
iret
xor
iret
xor
cmp
fst
test
in
hlt
std
idiv
orb
fimuls
cmc
repz
cmp
ljmp
test
fadd
faddp
test
fld
mov
out
out
mul
les
in
xlat
out
sti
neg
fiadds
cmp
hlt
xchg
cmc
ljmp
lret
hlt
loop
xor
std
cld
repnz
out
xchg
jmp
enter
cmc
lock
int
stc
mov
std
jmp
out
dec
mov
cld
call
out
hlt
ljmp
aam
xlat
sti
repz
fxch
mov
loopne
or
out
xchg
aam
aam
in
aad
repz
aas
aam
ret
ret
neg
addb
mov
or
enter
in
sar
xlat
std
in
xor
xchg
fisttpll
mov
in
call
xor
out
lock
ds
aas
cmp
loope
idiv
fnstsw
fdivp
loopne
out
lret
xchg
lock
loop
out
cmp
aam
rcr
in
repnz
into
shl
fadd
test
in
int3
int3
fcmovne
xchg
into
cmc
rcr
shl
lret
lock
sar
mov
mov
cli
cli
mov
aam
add
shl
lret
repz
out
loopne
out
ds
fdivrl
clc
repnz
fisttps
int
out
dec
xor
fcom
aad
shr
iret
loope
sti
repnz
in
icebp
hlt
out
clc
or
out
out
mul
mov
fcmovb
shl
xlat
fcomi
cmp
add
xchg
filds
lret
jmp
aad
hlt
sub
enter
dec
loopne
decl
add
add
rol
int
fcmovnbe
mov
or
and
jle
ret
jle
cmp
cld
aad
cmp
lock
cmp
mov
fildl
xchg
rcr
jmp
fnstenv
loop
in
sar
rcr
xlat
cld
shl
mul
jecxz
lds
fsubrp
rol
xor
out
das
shl
leave
stc
cmp
movb
out
loopne
out
in
in
sub
lock
sbb
movl
jmp
in
lret
ss
xor
clc
fmul
cmp
ss
clc
mov
std
mul
out
xchg
lret
adc
loop
leave
ror
in
in
lret
in
test
rorb
enter
fcmovnb
repz
out
fcmove
cmp
aaa
cld
repnz
ror
cmp
jmp
mov
sti
mov
rolb
cmp
fdivr
rcl
lock
std
out
in
std
lret
iret
orl
sti
not
out
sti
std
repz
jecxz
call
cli
fcomp
leave
iret
repnz
test
fcmovnbe
int
sti
rcl
jecxz
cmp
fiadds
lret
ljmp
in
into
jmp
aas
ret
shl
fucomip
test
repz
cld
xchg
repnz
out
xchg
ljmp
in
clc
cmp
fxch
repnz
test
fxch
cli
std
in
mov
xchg
icebp
ss
lret
stc
sti
in
out
out
jecxz
loope
cli
sti
ret
div
call
out
orb
jmp
jmp
enter
aas
loope
shl
sti
lret
decl
out
lock
loop
out
fcom
cmp
cli
or
repz
aas
out
test
xor
std
int3
out
enter
ret
lock
rcr
icebp
lret
ds
in
fcmovnu
mov
xchg
repnz
jmp
ljmp
cmc
test
ljmp
jmp
nop
and
out
cmp
cmc
aad
out
aas
cmp
fsub
jmp
leave
in
loopne
in
iret
int
in
fcmovnu
int3
int3
addl
jmp
mov
jmp
ret
int
fstl
mov
adc
call
add
rcl
ret
cmp
sub
decl
xchg
lret
lock
cmc
fcmovnu
int3
xor
in
ret
shl
mov
nop
xchg
loop
xchg
out
ret
fxch
aad
cmp
div
sar
aaa
hlt
ret
enter
cld
fldl
call
out
xlat
shr
fdiv
out
test
aad
in
fcmovb
fiadds
fists
test
fmul
lret
out
fdivr
enter
xchg
fiaddl
xchg
in
ret
xor
xor
shr
cmc
in
ret
loop
repnz
mov
in
or
xlat
cld
lock
rcr
xor
in
loop
loope
in
ret
mov
jmp
xlat
jmp
out
cmp
stc
jecxz
out
fcomp
test
loopne
mov
fdivs
in
sub
out
aam
lock
ffree
sar
sar
fstp
test
out
jmp
cld
repz
jecxz
shl
repz
cmp
shl
dec
loopne
and
lret
out
mov
sti
iret
lret
jecxz
xlat
leave
clc
xor
in
ss
fptan
ffreep
fadd
loope
or
lea
out
fld
iret
rcr
test
ret
rcr
cld
call
leave
fsubrp
loop
in
repz
jmp
cmp
cmp
ljmp
rolb
loope
sti
and
into
stc
repnz
cli
fldlg2
jmp
test
jecxz
sbb
mov
in
call
aad
in
das
cmc
ljmp
ror
repnz
fmul
aam
fmulp
out
leave
cli
or
xchg
loope
in
jmp
cmc
iret
shl
imul
iret
adc
stc
testl
out
std
dec
out
fld
cmp
aad
xlat
xlat
std
neg
loopne
sti
aas
out
sbb
mov
in
out
in
repz
stc
out
test
iret
out
ds
cli
mov
in
ret
sbb
xchg
out
int
shl
xor
out
cmc
cmp
loope
ret
cmp
je
jmp
int3
ret
int
mov
pusha
das
adc
push
jle
add
roll
loop
addl
jmp
shl
fsub
aaa
out
icebp
cmc
clc
xor
loop
fisttpll
jmp
out
shr
fprem
in
leave
fucomip
sar
cmp
lock
lock
fucom
test
fucomip
jmp
jmp
ror
cmp
ljmp
mov
sti
xchg
sti
xchg
rorb
in
jmp
cmp
call
out
out
mov
test
call
mov
xor
fcmovbe
xlat
into
aad
rolb
rolb
ljmp
xorb
loope
stc
in
ror
dec
loopne
jecxz
sti
cmp
fsub
movb
lret
aam
in
ret
in
stc
aaa
fdiv
clc
sar
sarb
not
test
sti
testb
jmp
lock
lret
cmc
aaa
fsub
xor
lret
loopne
in
test
faddl
cld
test
cmc
hlt
out
leave
jecxz
leave
ljmp
rol
out
cmp
hlt
cld
mul
mov
rcr
icebp
jmp
ljmp
fcmove
cmp
sarl
call
hlt
mov
out
loop
in
out
lret
test
xor
fstp
iret
shl
out
icebp
fcomi
shl
aas
call
loop
cld
mov
repz
xor
xor
fidivrs
shlb
out
xor
cmp
xchg
xchg
mov
xchg
ret
in
lock
out
cmp
fstpt
into
loope
rol
mov
fmuls
mov
enter
in
div
cmp
cmp
shl
xchg
lret
out
xor
aad
idivb
out
xor
out
aam
int
cmp
addl
orl
out
aad
aas
ss
call
call
rcr
in
out
mov
lret
out
call
cmp
lock
cmp
xchg
jmp
adc
xchg
loopne
xor
out
cmp
jmp
xlat
fcmovbe
repnz
jmp
push
mov
jmp
aad
iret
aas
rol
aad
push
inc
push
pop
cmp
jle
test
jle
test
loopne
addb
xlat
out
in
xor
ljmp
iret
inc
icebp
fdivp
out
test
lock
repnz
ror
xor
aad
incl
repnz
ljmp
xchg
mov
cs
clc
fcmovbe
enter
clc
int
in
test
int3
in
leave
in
test
in
xchg
int
ljmp
stc
loope
rol
in
cld
ret
roll
out
adcl
hlt
in
cld
ds
cld
sar
call
sti
clc
mov
mov
shl
xor
lock
ss
cld
fcmovnbe
aad
shl
rol
repnz
fcoms
shl
jmp
ss
stc
fdivr
stc
xor
mov
or
lock
lock
adc
xor
cmp
cmp
xor
aad
icebp
aas
call
fcom
sub
and
icebp
test
rcl
cmc
div
leave
cmp
in
std
rcl
fincstp
ret
imul
sti
roll
enter
repnz
iret
loope
out
stc
stc
xor
cmp
fdivp
cli
shl
std
out
leave
into
fcomip
xchg
leave
mov
lret
hlt
leave
cmp
hlt
clc
ret
aad
sar
in
jmp
lret
cmp
xor
aam
lret
out
leave
sarb
testl
mov
xchg
mov
imulb
into
aad
neg
hlt
ljmp
sbb
ljmp
jecxz
repz
ret
aam
out
fcmovnu
call
jecxz
ret
sar
in
lret
test
fsub
mov
leave
xor
into
xor
sub
mov
xchg
in
in
bnd
jecxz
int3
out
lds
xlat
cmc
into
test
fcomp
mov
jecxz
call
dec
loop
in
int
xor
loop
cmp
out
testl
fcos
loop
lret
int
jmp
out
cli
enter
xor
cmpb
rcr
cmp
ljmp
aad
jecxz
lret
ss
out
sbb
cmc
fildl
fcmovnu
in
fsubr
fadd
call
idivl
into
int3
xor
shl
iret
sar
ret
loope
cli
xchg
ljmp
idiv
shl
xor
das
ss
in
cmp
shr
fcmovbe
xchg
mov
mov
add
add
into
lret
leave
aam
dec
jo
inc
stc
out
loopne
outsl
jle
test
jle
in
repnz
out
call
fcmovnbe
in
iret
ds
jecxz
icebp
mul
loopne
stc
stc
clc
mov
aad
lock
in
xor
aam
aam
ljmp
cmp
in
or
mov
fimuls
loop
out
out
leave
icebp
jmp
repz
orl
enter
repz
rcl
cmp
in
enter
loopne
fcmovnu
fdivp
jmp
stc
loopne
in
jecxz
xchg
rcl
enter
int
sub
aam
ffreep
call
ret
leave
stc
fdivr
ljmp
lret
sti
ljmp
jecxz
into
rcr
loope
idiv
mov
cmc
mov
enter
lret
neg
xlat
out
fdivp
std
cmp
loopne,pt
leave
sti
sti
mov
imul
out
jmp
call
cmp
cld
aad
call
in
out
ret
test
std
fsubr
loopne
out
lock
in
out
cli
cmc
sti
xor
cmc
cmp
shl
jecxz
jecxz
stc
fldlg2
enter
ror
lret
int3
repnz
ret
lret
sti
ss
jecxz
shl
and
clc
call
lea
decb
ss
cld
aad
out
iret
jecxz
cmp
loopne
repz
sub
ret
in
enter
lock
stc
rcl
addb
jecxz
xchg
xchg
cmc
xlat
xor
into
xor
cmp
rcl
aas
shl
test
ret
loope
mov
cli
xchg
std
mov
shl
iret
fdivl
lret
ljmp
xchg
stc
xlat
lret
into
mov
lret
lock
vmovq
xor
stc
xor
shl
mov
decb
xor
cmp
out
lock
test
rcr
xlat
div
mov
xor
into
int3
shlb
fcmovb
sti
out
out
ror
jecxz
clc
cld
fcmovb
cmp
jmp
out
xor
in
ljmp
ljmp
div
xchg
in
fadds
mul
out
cmp
out
repz
icebp
cmpb
sar
cli
repz
int3
cli
loope
xchg
filds
lret
int3
fsub
into
leave
lock
ret
into
cmc
ffree
stc
aad
ds
cmp
lret
in
jmp
jmp
repnz
ds
neg
cmc
repz
in
movl
test
aam
cmp
cmp
push
jmp
int3
ret
int3
int3
sahf
pushf
btr
inc
les
jle
add
ljmp
mul
rcl
xlat
repz
std
faddl
shl
aam
shl
into
into
sar
addb
shl
orb
mov
mov
aam
enter
cli
out
xlat
std
ss
test
lock
lret
mov
lret
leave
ror
cmc
out
fstpt
out
fnstcw
fdivp
stc
repnz
std
fadd
test
mov
mov
xchg
out
sar
lock
sbb
ret
adc
stc
imul
fiadds
stc
out
out
shl
ror
out
idiv
in
into
lret
xor
fucomip
fcmovu
movl
in
loopne
in
imull
out
out
cmp
cmc
adc
fcmovu
xlat
xchg
mov
call
int
aad
rol
ret
cmp
rcr
fldpi
aam
fdivp
icebp
out
aam
lret
nop
int
in
ljmp
out
cli
stc
bnd
cmp
lock
fprem
hlt
orl
xchg
loope
ret
iret
repz
loope
cli
cmp
loopne
in
or
cld
loope
mov
xor
std
aad
out
jecxz
fdivp
fndisi(8087
fcom
cli
loop
dec
fcmovne
xchg
std
rcll
xor
cmp
out
in
loopne
cmp
test
std
sti
out
imul
leave
sti
fdiv
xchg
sub
in
aaa
shr
ljmp
sti
shl
and
fcmovne
stc
fmuls
lock
aad
out
aam
icebp
into
iret
sti
test
hlt
lock
rcl
shr
in
jmp
mov
loopne
jmp
fxch
fcomi
aad
in
fcmovne
loope
sarb
loopne
xlat
xchg
in
leave
cli
popl
mov
sub
ss
xlat
inc
addl
loopne
loope
mov
in
loop
shrl
neg
out
out
aam
mul
ret
rolb
in
rolb
aam
shr
fsub
fsubr
fdivrl
cmp
sarl
out
xchg
loop
mov
in
faddl
loop
jmp
xor
aad
rol
fimuls
std
int3
jecxz
fimull
xlat
cmp
aaa
cmp
shl
cmp
cmp
ret
mov
in
in
mov
call
leave
lret
cmc
hlt
cmc
ljmp
test
ljmp
out
repz
test
cmp
aad
cli
aad
cmp
push
pop
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
pushl
pushl
pushl
call
jmp
adc
jmp
lret
into
fst
fstp
bound
add
jle
test
jle
cmp
cld
jmp
repz
loop
out
jmp
into
fsubr
icebp
aam
int
idivl
stc
cmc
xchg
std
xchg
incl
aad
shr
in
in
fucomp
loope
cmp
jecxz
stc
hlt
in
ds
jmp
jmp
repnz
call
in
iret
lret
fucom
add
xlat
mov
nop
in
lock
clc
call
rcl
cli
sbb
roll
int
cmp
rcl
xor
out
aas
leave
out
roll
idiv
loop
les
loopne
int
lock
aam
jmp
iret
cmp
lret
aad
sar
ror
cli
ds
hlt
loopne
fmul
in
mov
ror
in
repnz
in
aad
aam
loopne
clc
fcmovnu
sar
in
out
in
cld
out
call
test
out
xor
fmul
into
call
ret
shl
ret
loop
test
loop
adc
out
aaa
cmc
fnsave
xlat
cmp
imul
fsincos
stc
xchg
cli
orl
lock
out
cmp
int3
lock
in
cmp
xlat
rcr
ljmp
leave
in
decb
lret
test
lret
into
cmc
icebp
hlt
cmp
rcl
lret
xlat
popl
shl
jmp
in
testb
aad
sti
enter
incb
out
xlat
aad
in
ljmp
faddl
ds
cli
fdivr
fsubr
jmp
call
leave
clc
lret
fidivrs
jecxz
in
rorb
into
xlat
cli
in
popl
stc
clc
aam
repnz
shl
cmp
jmp
sti
loope
loope
fdivp
mul
xchg
das
hlt
loope
rcr
aaa
std
fmul
rcl
ret
in
ljmp
test
leave
into
imul
int
cli
aam
ss
xor
mov
test
enter
mov
ret
loop
fstp
aam
enter
test
in
cld
cld
fsub
jmp
iret
fmulp
into
fsubp
into
out
icebp
ret
xlat
fdivrs
mul
jmp
aam
loop
fcomp
addb
in
add
xlat
call
in
cmp
aam
xor
mov
mov
cld
mov
test
fcomip
xor
stc
cmp
aad
cmp
out
fucomip
or
shl
mov
in
jmp
int
iret
rcl
aad
inc
xor
push
sbb
test
jle
xchg
std
mov
stc
ljmp
fdiv
clc
adc
stc
fmul
enter
decl
out
out
ror
in
cmp
cmp
clc
vpavgb
loope
fisttps
out
in
mov
cmc
loope
cld
cmp
ljmp
clc
and
ret
jmp
test
hlt
das
aad
iret
cmp
rcl
stc
aas
rcl
cli
repz
stc
loope
loop
test
shl
mov
xor
int
idiv
cld
in
cmp
out
incb
xlat
inc
mov
int
in
sti
mov
nop
aam
lock
ret
lock
addl
fldl
lret
sti
shl
hlt
ljmp
ss
test
hlt
mov
mov
out
jmp
jecxz
in
out
int3
aam
jmp
ror
hlt
aam
out
repnz
aam
loop
out
call
rcl
aam
repz
push
int
sti
jmp
in
loop
cmp
cld
call
fisttps
aad
cmp
in
xor
clc
adc
fldl
out
int3
lret
int3
out
repnz
ret
aas
cmc
sbb
sti
cmc
mov
in
inc
test
ret
jmp
cmp
cmp
rcr
into
repz
adc
ljmp
fsubr
rcll
jmp
stc
out
cmp
cmc
int
fptan
fsubr
std
cmc
test
jmp
mov
adcl
fcmovu
fcmovbe
and
int3
aaa
hlt
cmp
in
stc
addb
aaa
cmp
ljmp
inc
sti
xlat
cli
sti
ret
clc
ds
test
in
incb
cmp
jmp
jmp
repz
shr
aam
sub
mov
hlt
xchg
sub
hlt
aam
fdiv
lret
xor
sub
div
lock
jecxz
in
nop
adc
xor
hlt
cmp
call
icebp
jmp
lock
cmc
enter
fsubrp
sti
out
jmp
out
nop
xchg
xlat
hlt
clc
lock
sti
aad
sarb
repz
cmpb
xchg
loope
lret
into
rcl
into
xlat
jmp
jmp
clc
repz
ret
loope
loop
div
ljmp
into
xor
ss
in
leave
lret
fdivl
aas
lret
sar
shl
out
out
out
nop
xchg
and
out
mov
adcl
add
jmp
mov
fcmovnu
or
sub
adc
je
jp
jle
add
sti
lock
sar
aam
cmp
out
xchg
loopne
mov
fldpi
cld
call
lock
sar
rcr
fsubp
cmp
jmp
test
call
out
ret
das
ss
in
cmp
ds
jmp
shl
enter
in
cli
loope
loopne
xchg
in
loope
enter
fsin
fistpll
int
fdiv
cmc
loope
mov
enter
sti
call
in
lret
aam
cmc
clc
cmp
aad
fcompp
aam
sbb
sti
lret
in
xchg
shl
jmp
rcr
cmp
cmp
div
testl
int3
int
mov
loop
lock
icebp
rcl
cmp
cmp
filds
fildl
roll
stc
fdivs
clc
jmp
cmc
in
jmp
in
shr
xchg
loope
int3
xchg
enter
cmp
clc
in
sti
into
rcr
jecxz
icebp
enter
int
roll
xchg
jecxz
ret
xor
xor
fxch
sar
rcl
test
mov
in
into
loop
leave
nop
mov
sub
in
hlt
shr
iret
xlat
xor
iret
fmulp
std
ror
loopne
cli
in
in
out
test
shl
loop
hlt
lret
shl
jecxz
std
call
in
xchg
icebp
loope
add
fmulp
int
loop
xchg
out
in
aad
call
aad
cmp
ffreep
out
jmp
test
jmp
jecxz
xor
sti
in
cmp
std
test
shl
mov
incb
icebp
hlt
jmp
xor
sti
fcmove
aam
jmp
repz
sbb
loope
loopne
sar
xchg
out
xchg
repz
iret
stc
cmp
aad
sarl
repnz
ljmp
mov
fisttpl
vpmulhuw
iret
lret
xor
test
loope
jmp
leave
lret
stc
shl
shl
xchg
loop
in
loop
into
fdivs
ds
cmp
neg
cmp
mov
lds
lret
loop
leave
cmp
enter
xor
rcl
sti
ffreep
adc
int
call
icebp
shr
repz
xor
xor
dec
push
aas
fdiv
stc
ffree
idiv
ljmp
mov
shl
mov
rol
jmp
cmp
sarb
sub
cmp
out
xlat
test
hlt
ljmp
cmp
iret
int3
aad
push
not
mov
xor
mov
adcl
xor
movl
jmp
iret
lret
rcr
aad
int
jge
ja
pushf
testl
add
loop
iret
clc
loopne
aam
fldz
orb
aad
xor
lret
cli
aad
cmp
fcmovnbe
filds
icebp
stc
jmp
jmp
shl
test
test
cmp
clc
loope
in
decl
mov
in
jecxz
mov
xchg
in
aad
cmp
ror
imul
rolb
shl
loopne
int3
fdivp
out
xor
xor
call
lret
xor
add
clc
fucom
repz
jmp
aam
jecxz
repz
cmc
lret
cmp
fcmove
into
sbb
leave
mov
in
xchg
lret
rolb
int
call
cmp
hlt
ds
lds
xchg
add
enter
lret
cmp
cmp
cmp
aas
xchg
out
nop
leave
sti
xchg
test
in
jecxz
cmp
cmp
lock
loopne
std
out
bnd
testb
cmp
jmp
xchg
shl
cld
cmp
iret
out
loope,pt
in
cmp
repnz
fimull
ljmp
ret
icebp
idiv
aad
ss
cmp
jecxz
add
hlt
loop
cld
fcmove
ljmp
out
into
ret
sti
out
xor
aad
shl
ds
ret
fneni(8087
mov
jecxz
cmc
int
enter
call
jmp
in
rolb
cld
call
xchg
lret
ret
xlat
int
cmp
fcmovnu
jecxz
loopne
aad
jmp
loope
clc
jecxz
iret
in
iret
rorl
out
cmp
fistpll
rcl
fstpt
mov
vpaddsw
xchg
in
addb
ljmp
fsubrp
cld
fld
orb
rolb
lret
sti
std
aaa
cmp
sti
cmp
cli
out
xchg
fmulp
out
jmp
test
ret
iret
xor
enter
lret
add
faddp
in
cld
mov
into
hlt
icebp
jmp
ds
cmc
fistpll
out
testl
fmulp
in
cmp
jmp
into
hlt
int3
or
in
cld
cmp
hlt
aam
or
test
in
xchg
loop
lret
xor
xor
test
aas
call
jmp
repnz
jmp
in
repnz
xor
test
cmp
sti
in
and
out
movl
add
movl
jmp
jmp
enter
int
int3
lret
xlat
ja
loopne
jbe
xchg
jg
jle
add
and
call
shlb
in
not
icebp
aaa
cli
roll
in
icebp
test
std
jmp
fnclex
cld
int3
int
imul
mov
xor
fcomip
enter
repnz
in
jmp
fucomp
lret
into
shlb
out
int
cmp
inc
loopne
mov
fsubrp
in
xchg
mov
ss
leave
ljmp
cmp
neg
icebp
cmc
enter
mov
in
test
in
into
xor
call
fpatan
lret
std
fidivrs
ret
lret
out
xchg
adcl
jmp
xlat
lret
out
loop
shl
xlat
hlt
clc
mov
rcr
out
enter
shl
out
xor
cli
repnz
out
hlt
out
loopne
mov
aam
mov
out
sar
out
lret
hlt
cmc
cmp
enter
orl
lret
shll
xor
enter
xor
imul
aad
xlat
fdivrl
in
testb
xchg
out
lret
icebp
fdiv
cmp
in
cmp
xlat
out
call
xlat
test
loopne
orb
imul
icebp
std
xor
roll
jmp
mov
repz
out
xor
das
ljmp
or
shll
ret
mov
fistpll
testb
xchg
das
ss
iret
enter
lret
cmp
mul
out
stc
rorl
mov
into
int3
xchg
das
shlb
repnz
ljmp
sti
jmp
hlt
idiv
call
mov
xchg
out
leave
cli
in
clc
in
xor
out
rcr
jmp
addb
xlat
lret
mov
jmp
jmp
enter
fstpt
cmp
cmp
call
sti
out
mov
fcom
sub
lret
jmp
stc
icebp
aas
in
leave
in
loope
call
ljmp
cmp
hlt
loopne
out
stc
xchg
les
dec
mov
call
int3
cld
out
adc
call
neg
ljmp
loope
in
das
rol
aam
lret
lret
sti
jmp
cmpl
enter
xchg
out
test
ret
out
ss
repz
aas
lock
int3
cli
out
mov
xchg
call
das
cmp
jne
mov
mov
mov
movl
mov
mov
mov
mov
notl
jmp
rol
lret
ffree
aam
mov
mov
ret
rolb
jle
add
in
out
call
int
ret
xlat
or
cli
xchg
test
xchg
sub
xor
xor
cmp
enter
std
in
addb
cli
loope
shl
repnz
mov
in
div
aaa
xor
cmp
cmp
lock
lock
ret
lret
int
lret
jecxz
std
mov
int3
jmp
fdivrp
sar
test
test
test
vpsubsw
in
incb
cmc
fsubr
ljmp
fsubr
std
ret
stc
aam
testl
xchg
icebp
div
fcmovnu
std
imul
or
cmc
loop
fiadds
jmp
test
icebp
loop
cmc
int
rcl
shll
fadds
popl
ljmp
test
test
sar
repnz
cmp
mov
jmp
enter
out
ficoms
mul
jmp
jmp
loopne
enter
in
out
in
test
icebp
into
sub
xor
fdiv
hlt
stc
xlat
sub
clc
std
fucomi
test
repz
xchg
cmc
call
stc
cmc
cmp
cmp
dec
fpatan
out
out
mov
call
in
xchg
lret
sub
sarl
lret
rcl
lret
fcmovbe
ret
shl
std
cld
loop
out
in
aam
jecxz
jmp
enter
hlt
ret
aad
cli
sti
mov
icebp
shl
xchg
repnz
repnz
xor
in
ss
xchg
inc
flds
out
test
shr
sar
les
in
fnstcw
fadd
xchg
cmp
loopne
fcmovne
mov
into
in
sub
xor
out
cmp
sarb
ret
fsubp
cli
inc
clc
ret
out
sar
mov
ljmp
lret
lret
shr
out
icebp
in
clc
rol
xchg
hlt
jmp
xchg
aaa
out
ret
cmp
sar
aad
ds
inc
neg
movb
addl
imul
lock
call
fst
in
out
loopne
std
addl
into
xchg
nop
xchg
enter
xor
jmp
jmp
ret
loop
jmp
mov
repz
int3
xor
aas
jmp
adc
mov
ljmp
repnz
int3
iret
idiv
in
lret
sarl
into
fdivrs
fisttpl
sub
add
add
ret
add
int
xlat
movsl
push
int
add
jle
add
test
repz
cld
fisttpll
ljmp
jmp
call
sti
cmp
xchg
repz
loopne
idiv
iret
int
xchg
orb
rcl
ljmp
out
ret
jecxz
xchg
xchg
xchg
repnz
not
ss
out
shlb
fdivrl
call
fadd
in
jmp
aam
in
cmp
neg
out
fstp
in
xchg
mov
out
nop
mov
xchg
mov
jmp
aaa
xor
leave
fdivrp
jmp
test
rcl
in
cld
mov
xchg
in
xchg
das
jmp
into
cmp
not
fcomi
add
mov
out
jecxz
test
neg
cmp
in
lock
out
cmp
out
aas
icebp
shr
fld
in
cld
out
iret
out
jmp
xor
icebp
hlt
sti
int3
shr
rcl
repz
sarl
cmc
xchg
test
test
mov
hlt
int3
icebp
sarb
cmp
xchg
cmp
not
test
clc
mov
call
in
ljmp
test
cli
cmpl
loop
stc
out
jmp
call
icebp
cs
in
cmp
fcmovnu
cmp
in
loope
fcmovnb
test
dec
orl
ror
aam
repnz
ffree
iret
fmulp
sti
loop
aas
div
fsub
jmp
ror
xor
int3
out
clc
repz
out
shl
std
into
out
and
ljmp
out
out
shr
out
in
ss
out
in
int
cmp
sar
les
cld
int
xchg
fldl2e
cmp
cmc
xlat
aad
sarl
repz
int
cmp
rcl
xchg
xchg
call
mov
repz
xchg
xchg
in
imul
aam
iret
xor
iret
rcr
repz
ret
fcomip
sub
jecxz
test
mov
iret
xor
enter
ss
lock
in
call
lret
in
lock
ljmp
ret
mov
jmp
fsub
mov
lock
into
and
shll
xor
repnz
fsubrp
icebp
into
or
fcmovnu
shl
out
decl
in
fst
nop
les
rcr
fsubr
ss
repz
cmp
cld
shl
mov
fcmovb
aam
int3
in
clc
fiaddl
aam
enter
div
neg
dec
xor
fmul
or
jne
sbb
andl
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
call
cmpl
jb
xorl
jmp
ret
int3
int
ret
leave
pop
cs
xchg
pop
jg
test
jle
in
in
int3
nop
repz
xchg
in
cs
jmp
idiv
enter
rcl
cmc
inc
aam
orl
jecxz
das
fsubr
shl
call
loope
fucomi
aad
call
mov
fidivl
repz
xchg
fcomi
aad
lret
iret
mov
mov
call
aad
in
shr
sub
aam
cmp
in
cli
mov
fdiv
out
into
cmp
jmp
shl
loop
into
cmp
cli
fsubp
clc
out
addl
bnd
call
xlat
out
stc
aaa
test
enter
or
out
lret
in
fcmove
fidivs
ds
fdivrp
rol
mov
test
cld
stc
call
shr
xor
icebp
aam
sarl
out
enter
cmc
ds
fcom
shl
jmp
pop
orl
bnd
fyl2x
cli
std
fiaddl
loopne
xchg
xchg
ret
out
fsubr
shl
sarl
rcr
not
testl
out
in
repz
cmpb
int3
cli
in
in
fdiv
fst
add
fsubp
lret
faddp
xchg
repnz
xor
xor
fnstcw
lds
in
ljmp
into
fnclex
out
repz
into
xor
int3
enter
cli
jmp
sarb
fcom
cld
adc
lret
mov
xor
cmp
out
jmp
cmc
ds
into
cmc
enter
lret
loop
lret
in
jmp
loop
in
stc
shl
shl
xor
not
sti
fisttpll
enter
into
nop
iret
out
clc
loope
fsubr
cmc
cmp
shl
hlt
sti
rcr
ljmp
loope
mov
call
out
fcmovne
ss
sti
out
lret
fstp
in
aam
jecxz
fxch
sbb
repz
sti
sub
sti
fcmove
clc
in
hlt
enter
and
mov
nop
std
int
xchg
shr
int3
xor
in
jmp
clc
in
int
ds
rcr
cld
lret
cld
out
mov
jmp
mov
int3
xor
aam
enter
fistpll
shr
loop
in
jmp
mov
fiaddl
nop
ss
out
div
rcl
cmp
fadds
cmp
mov
mov
orl
sub
push
orl
jmp
aam
ror
fcomp
aam
aas
idivb
sbb
or
test
jle
lret
xor
fdivr
out
sti
leave
in
lock
push
in
fildl
loope
in
adc
into
call
sar
ljmp
jmp
loope
in
in
int3
in
lea
xor
clc
in
repz
icebp
shll
clc
in
std
hlt
xchg
call
lock
jecxz
shl
ret
sarl
fst
iret
aaa
ds
cmp
mov
enter
in
aas
in
out
neg
out
hlt
int
into
lret
inc
sti
mov
mov
fsts
call
xor
repz
icebp
enter
flds
mul
fdivr
out
hlt
mov
cli
aad
iret
ljmp
cmp
sti
cmc
jecxz
ljmp
fcom
cmc
lret
fnstcw
ror
sar
loopne
fcmovb
aam
cmc
sub
aad
int
loop
jecxz
test
cmc
fmul
fcomi
aas
fiaddl
jecxz
adc
xchg
lea
aam
repnz
out
cs
jmp
call
iret
mul
fcomi
out
in
out
cli
loope
fucom
xchg
cs
leave
jecxz
shrb
std
xorb
int
test
jmp
fcmovnbe
repnz
jmp
lret
jmp
rcl
cmp
repz
mov
fildl
cli
lock
fucomp
out
xor
lock
iret
xor
cmp
sti
loop
int
cmc
xlat
leave
lock
xchg
orl
loopne
fmul
loope
clc
call
out
faddl
sub
in
loope
aaa
in
lret
loope
int
out
xlat
in
rol
std
idiv
xchg
mov
mov
aaa
call
stc
clc
into
fildl
decl
jecxz
lret
icebp
int3
test
idivb
leave
lds
xor
cmp
xchg
addb
jmp
call
repnz
iret
iret
cmp
cmp
faddp
leave
mov
mov
xchg
rcl
out
fnstenv
clc
iret
cmc
aad
fucomip
iret
hlt
idivb
and
enter
out
loope
int3
out
sti
stc
in
cmp
std
repnz
sar
not
fcmovnu
int
in
iret
jmp
xchg
std
imulb
repnz
int3
shl
aam
lock
int3
div
aad
rcl
fisttps
ficoms
cs
call
cmc
in
mov
sbbl
add
push
call
incl
jmp
ret
rcl
aam
ret
sarl
add
jle
add
mul
incl
cli
aam
aam
shr
mov
dec
out
jmp
hlt
xor
rcr
cmp
xlat
out
addb
repz
mov
xchg
shl
in
enter
aam
aaa
cld
aam
cmp
repz
vpsubsb
jmp
ficoms
neg
call
fdivrl
lock
sti
out
out
xchg
xor
lock
fyl2x
int
aas
rcr
cli
xchg
xchg
fldl2e
les
loope
xchg
ret
lret
leave
shl
fmul
stc
testb
sti
xchg
fld1
rcr
loope
xchg
leave
out
xor
leave
aam
not
jmp
orb
fmuls
int
in
ss
cmp
icebp
into
cmp
sarl
fsub
aas
in
orl
out
aam
repz
out
jmp
add
test
icebp
cli
rolb
in
les
jmp
hlt
ret
out
addb
iret
mov
fnop
cld
imul
aaa
cmpl
out
sarb
int
mov
mov
xchg
dec
hlt
div
sti
xor
call
fcmovbe
out
ret
cli
cld
loopne
lret
fsin
enter
hlt
out
loop
sub
xor
xor
fidivrs
aad
cmp
cmp
fpatan
mov
out
vpsubusw
in
cld
out
test
in
int
lret
dec
out
fdivr
rol
stc
jmp
in
lret
repnz
aam
lea
int3
fsubr
out
lock
in
repnz
repz
inc
jecxz
fsubr
into
sti
sbb
int
ror
jmp
stc
sar
adc
fstp
xor
fcmovb
stc
in
ret
sti
int
repz
inc
icebp
rol
into
aam
cmpb
shr
ds
test
sti
in
fimuls
std
xchg
into
shr
leave
out
enter
repz
fst
sarl
shl
in
loop
fisttpl
std
jecxz
jmp
out
cmc
lock
repnz
ds
ret
rcl
sbb
in
cli
loope
xchg
out
repz
lock
jecxz
ljmp
stc
fstp
fcomp
out
mov
lret
out
int3
cld
jecxz
mov
ljmp
lret
mov
cli
repnz
aam
inc
call
mov
in
mov
jmp
and
ret
xor
ss
jmp
cmp
mov
mov
adcb
jmp
cmp
jne
movl
mov
mov
mov
mov
mov
jmp
sarb
ret
enter
fldl
jge
push
movq
add
rorl
shl
aam
rol
loope
fcmovbe
aam
stc
int
int
ret
aad
cmpb
test
test
out
jmp
lret
mov
loopne
rol
in
xor
jmp
fxch
loopne
xchg
xchg
imul
jecxz
in
in
xchg
xchg
int3
cmc
xor
cli
in
fcmovnbe
sbb
roll
leave
cli
fndisi(8087
cld
out
in
jmp
cmc
std
hlt
in
in
clc
ds
aam
enter
xchg
out
cli
out
xchg
lret
sub
loope
in
in
out
call
shl
lock
leave
or
mov
in
in
ficoms
sub
leave
neg
idivb
fcmovne
cli
test
test
mov
iret
out
icebp
hlt
shll
cmp
not
xor
loopne
ret
mul
xlat
call
in
in
xchg
in
ss
stc
cmp
jmp
fsubp
fldl
fcomi
loop
leave
fninit
adc
in
ss
fstpt
leave
repz
aaa
rcl
test
rolb
fld
call
xchg
mov
inc
lret
cmp
int3
xor
jmp
hlt
hlt
xchg
mov
into
out
fucomip
lret
xchg
fiadds
out
stc
div
aas
shl
fdiv
in
iret
call
fucom
mov
repnz
imul
fsubr
ljmp
fldln2
stc
out
loopne
cli
fcmovb
test
test
lret
iret
aam
lret
lret
iret
in
jecxz
ds
jmp
call
jmp
test
cli
clc
cmp
fst
fcmovnu
loop
lret
in
cld
fdivrp
xchg
ficoms
stc
lret
in
cmp
cmc
fdivrs
add
aad
int3
fcmovb
int
icebp
xchg
lock
out
mov
imul
xor
not
aas
add
fcmovbe
call
call
fimuls
fcom
cld
enter
cld
aam
test
sar
idiv
testb
das
lret
out
cmc
fdivr
cmp
cmp
test
cli
rorb
loop
clc
repnz
int3
loop
out
lret
cmc
repz
idivb
cmc
faddl
leave
fcomip
lret
lea
in
int
rol
in
stc
ror
add
ret
fsub
or
mov
xchg
int3
shl
jmp
cmc
cmp
std
rolb
rcl
in
mov
xchg
frstpm(287
xchg
xor
add
mov
lea
mov
mov
xor
add
jmp
ror
fmul
fcomp
fcmovnb
aad
jp
dec
das
pop
cmp
jg
test
jle
into
out
xor
vpaddsb
ss
shr
fcomip
ret
stc
lret
aad
in
out
mov
fsub
clc
lds
out
fsubr
push
cld
std
shl
adc
loopne
loop
sub
jecxz
out
sbb
xor
out
enter
repnz
fadds
xlat
fisttpll
out
into
add
aaa
hlt
cmp
out
aaa
leave
fidivrl
rol
fld
neg
enter
dec
cld
std
out
fucomip
xor
shr
cmp
lret
iret
sti
and
loope
ret
mov
fsubp
mov
fdiv
mov
repz
repnz
sti
clc
out
aad
loope
stc
loop
repz
std
fdivr
sar
in
repnz
aaa
aad
rcl
adc
out
cld
out
lock
lock
fsubr
icebp
jecxz
int
jmp
shr
out
not
fidivrl
fadd
test
jmp
loope
in
lea
cmc
in
loopne
cli
xor
xlat
cmc
repnz
cmp
call
test
fisttpl
das
aad
neg
fucom
sti
cld
in
rcl
into
in
fldl
xchg
out
in
cmc
xchg
xor
shl
enter
dec
cmp
cmp
mov
enter
in
loope
mov
enter
ret
cld
xlat
or
icebp
shl
lock
mov
movl
in
shlb
into
sarl
aad
into
div
test
mov
mov
out
cld
jmp
das
in
not
cli
ss
fxch
iret
ret
hlt
idiv
jmp
fmul
sti
faddl
icebp
jmp
cmc
in
hlt
das
cmp
hlt
xor
in
clc
out
xchg
push
fdiv
cld
int
enter
mov
mov
in
enter
clc
fcmovne
stc
fdiv
loopne
ret
repnz
xor
std
mov
out
das
xor
cmp
jmp
cli
cmc
test
lock
call
lret
out
jmp
loope
das
shl
sar
cld
fmul
ljmp
rolb
in
call
mov
xorb
enter
out
into
cmpl
cmc
imul
loope
test
loope
mov
out
repnz
shl
aam
repz
enter
mov
fbstp
fld
xor
ror
lret
loope
clc
loop
aad
jecxz
cli
fcmovne
cmp
repz
rclb
jmp
enter
mov
mov
xor
jmp
int3
int
fstp
cmp
pop
pushf
stos
les
jle
add
fucomp
sar
ret
incb
lret
cli
test
repnz
aad
in
out
into
shr
lock
xchg
and
xlat
leave
out
jmp
in
out
lret
cmc
cmp
out
aaa
cmp
in
loopne
std
cmp
cmp
xchg
repz
jmp
test
cmc
cmp
fcom
test
int3
fdivr
loopne
in
rolb
out
xor
in
int
clc
shl
lret
std
fsub
les
mov
jmp
in
lret
into
xchg
divl
ljmp
xlat
sarb
aas
sti
lret
add
int3
out
lds
enter
aad
aad
adc
loope
loope
fcmovnb
xchg
cli
clc
fucom
xchg
repnz
hlt
idiv
into
sti
aaa
ljmp
icebp
lret
in
int
int
orb
xor
cld
ss
std
cmp
cld
loopne
fidivrl
and
fsubr
test
test
ret
xor
sti
rol
ljmp
call
not
stc
out
jecxz
fildl
enter
out
xlat
aad
sti
out
ds
loopne
orb
xrelease
jecxz
cmp
repnz
sub
aad
test
shl
fldl
out
out
rol
das
call
repnz
fcomi
xor
and
stc
sub
enter
repnz
std
adc
ss
enter
sarb
int3
and
jecxz
mov
int3
fiadds
loope
jmp
in
out
fsubr
shl
test
test
testb
test
iret
jmp
xchg
lret
out
ss
into
idiv
cli
and
call
jmp
jmp
out
call
jmp
leave
aam
jmp
cmp
loop
fmul
call
iret
in
divl
lret
in
out
icebp
int3
lret
xor
not
test
out
enter
jmp
out
out
stc
int
iret
shr
div
out
stc
faddp
jmp
and
lret
in
int3
lds
lock
xor
out
icebp
into
out
loop
lock
loopne
std
mov
out
std
mov
fsubp
lret
test
xor
sarl
clc
out
loopne
aad
idivb
aam
sbb
mov
loopne
and
ss
into
int
cmp
iret
cli
cmp
filds
ret
push
jmp
iret
xlat
rcl
rcr
lret
push
cmp
aad
mov
scas
nop
pop
jg
test
jle
shr
lret
out
mov
nop
fists
xor
das
div
ljmp
loop
addl
loope
call
out
shl
xor
divb
adc
fcmovu
test
stc
aad
mov
vprotq
int
in
aad
iret
cmc
fcmovnbe
lret
jmp
rcr
test
fcmovnu
std
loop
nop
cld
in
fucomi
rcl
vcvtdq2pd
sar
jmp
out
cmp
filds
std
loopne
jecxz
xchg
xchg
rcll
cmp
cmp
hlt
iret
xlat
hlt
repz
stc
jecxz
hlt
call
mov
jmp
ror
jmp
fstpt
loope
xchg
filds
nop
mov
repz
fucomip
in
jecxz
stc
xor
test
aam
icebp
repnz
fsubp
sti
lret
xchg
leave
lret
in
clc
lret
enter
inc
filds
sti
aas
neg
loopne
in
rolb
enter
idivb
fsub
repz
aam
fabs
addb
hlt
in
ret
cmc
out
cs
into
fucomi
loop
in
rol
orb
std
xchg
jecxz
das
xor
hlt
xor
fidivrl
cmp
and
imul
xchg
decl
shl
lea
out
jmp
lret
fsubr
sub
filds
mov
into
into
and
icebp
in
call
into
repz
jmp
ret
fsubrp
loopne
filds
out
and
mul
leave
xor
ljmp
jmp
out
cmc
cmp
std
mov
int
fmul
fsubr
xchg
icebp
jecxz
shlb
neg
aaa
cmp
cmp
cmp
aam
ret
mov
out
leave
mov
iret
hlt
xchg
ror
shll
int
fdivrl
cmp
cmp
out
lds
loop
mov
repz
shr
lret
iret
rcl
aam
fildl
fimuls
xchg
mov
iret
ret
cs
sar
sub
hlt
stc
fadd
enter
fcomp
cli
decl
fdivrs
leave
cld
lret
fmul
ret
stc
ret
leave
loope
sub
mov
xor
repz
shl
repz
in
rcr
out
sub
jecxz
enter
in
icebp
xor
div
into
xor
ss
ffree
rolb
mov
lret
lret
add
sti
inc
add
xor
call
fcoml
add
jmp
rol
into
xlat
rcr
fcmovne
lret
pop
xlat
adc
out
push
test
jle
xchg
jecxz
out
ss
repnz
std
loope
ljmp
repnz
mov
loop
orb
cli
lock
cmp
out
cmp
loop
rcl
fcmovnbe
int3
lret
mov
loop
das
aad
repz
into
ds
ds
fdivrl
cmp
loope
stc
mov
fst
mov
mov
repnz
into
aaa
ror
sar
fsubr
sti
fucomi
rorb
jecxz
mov
jmp
out
shlb
div
fidivrs
ss
neg
cld
push
aas
lea
adc
test
jmp
out
ss
idivb
cmp
cld
test
xchg
add
clc
out
sub
stc
call
xor
loope
cmp
loope
cmc
leave
xchg
xchg
loope
lret
shr
aaa
ret
hlt
cmp
fstp
loope
fsub
icebp
fsubrp
fadds
ror
xorb
loop
shr
aam
fcomi
xor
fcom
into
jmp
in
loop
out
ror
out
in
repz
clc
call
out
shl
ss
loop
clc
cld
enter
stc
adcl
icebp
jmp
aad
icebp
bnd
fneni(8087
fisttpl
mov
loope
std
call
lret
cmp
xor
hlt
fsubr
into
ds
mov
icebp
call
xlat
clc
mov
enter
fnstcw
iret
out
pushl
hlt
xlat
neg
fnstsw
jmp
lea
out
and
xor
shlb
enter
hlt
loopne
xor
fisttpll
std
out
lock
repz
aam
fucomi
aas
int
into
rcl
cmp
fmulp
into
int
fsts
loope
in
fptan
cld
cmp
shl
rolb
enter
in
icebp
enter
jecxz
jecxz
shr
aaa
jmp
cmp
cmp
cld
fcmovnbe
in
cmc
out
cmp
xchg
test
lret
fdivs
fadd
repz
adc
and
iret
xchg
call
lock
cli
call
cmp
shr
lret
ljmp
test
ds
ljmp
cld
iret
int
in
out
cmp
out
ss
cmp
adc
and
cli
aam
fld
loopne
int3
out
xchg
sti
out
cmp
ds
jecxz
adc
fimuls
out
mov
fbstp
call
cmp
jne
jmp
enter
rcr
adc
lock
sbb
jle
add
aam
shlb
fsubr
jmp
ror
cld
fsubp
test
ljmp
ljmp
in
in
fucomi
hlt
cmp
cmp
hlt
cli
loope
out
mov
iret
fsubrp
repz
std
test
cmp
aaa
shlb
std
xlat
cmc
fnstcw
clc
fdivp
cmp
lock
div
dec
out
nop
test
out
xor
shl
aam
hlt
int3
aad
loopne
ret
ret
fucom
out
enter
icebp
xchg
adc
icebp
out
in
int
jmp
ds
shl
xchg
in
hlt
movl
out
xor
mov
sarl
aas
cmp
xchg
fucomip
out
shr
ljmp
xor
sti
cli
ds
fsub
incb
int3
out
mov
in
call
cmp
cmp
int
icebp
cld
cmp
into
in
repnz
xlat
out
in
orl
hlt
hlt
loope
jmp
call
cmc
fadd
fildl
dec
mov
orl
leave
repz
xor
int
cmp
test
sarl
int3
xchg
into
jecxz
xchg
shr
test
cmp
out
cli
int
xor
fldz
loope
cmp
mov
fimull
repnz
aaa
into
int3
leave
lret
in
cld
lock
testb
ret
mov
out
out
fcomp
repz
loop
add
loope
int3
icebp
std
out
ror
rcr
shl
xchg
call
out
in
mov
xchg
loop
div
ss
int
ds
cmc
std
repnz
jecxz,pt
loop
int3
out
int3
ljmp
in
cmc
cld
aad
iret
test
xlat
fcmovnbe
idiv
loop
stc
inc
jmp
in
out
out
in
int3
xor
jmp
in
loopne
out
loope
sbb
xchg
cld
cmc
loop
enter
aaa
ljmp
test
frstpm(287
sbb
enter
int3
int
rorb
aaa
ret
aaa
out
cmp
aad
fchs
and
lds
mov
loop
loopne
iret
mov
rorl
aaa
fucomp
clc
iret
icebp
clc
cmp
div
aam
int
int3
loopne
xchg
lret
jmp
fxam
fstpt
into
in
loopne
fcmovu
loope
stc
test
loopne
loope
lret
mov
mov
dec
out
icebp
repnz
ds
aad
xchg
jmp
mov
out
ficoms
out
in
cmc
fcmovnb
in
cld
testl
lock
add
jmp
rcl
rcl
aad
mov
fidivl
aaa
scas
mov
jg
test
jle
loop
out
test
test
xchg
xor
stc
into
aaa
jmp
loopne
aas
iret
les
cmp
enter
orl
lock
fcomip
in
fxch
std
out
xlat
xor
in
cmc
stc
les
xchg
iret
aam
enter
lret
cld
aam
in
hlt
in
aad
std
fcmovbe
loop
xor
rolb
sar
out
std
cmc
xlat
ds
rcl
fdiv
mov
fucom
cld
xchg
jmp
xchg
in
xlat
test
fcmovbe
xor
ljmp
mov
jmp
xchg
out
into
aaa
neg
fucomi
shr
cmc
aaa
xlat
frndint
mov
std
int3
orb
loopne
test
test
int
addl
out
cli
shl
repz
icebp
call
xor
testb
xabort
lret
mov
iret
sti
xchg
rorb
test
or
aas
cmp
hlt
fadds
xchg
out
out
xlat
loope
shrl
in
fistpll
fcomip
cli
aam
jecxz
ljmp
icebp
lret
cmc
loop
sar
test
in
fcom
dec
ret
shl
ffreep
into
iret
out
cmp
das
lret
rcl
lret
cmc
ds
cld
aad
repnz
out
shl
in
int
std
ljmp
aas
xor
out
xor
faddl
lret
ret
sbb
call
shl
out
xor
fistpll
out
xor
icebp
test
test
test
cmc
into
out
xor
in
repz
lret
in
ret
ds
cld
neg
clc
leave
loope
into
repz
std
ljmp
out
std
aaa
call
filds
in
xchg
icebp
test
lret
mov
shrb
in
ss
int3
fneni(8087
shl
sub
hlt
test
repnz
jmp
into
jecxz
mov
mov
int3
leave
xor
neg
repz
hlt
rolb
fstp
fadd
repnz
jecxz
loopne
test
enter
ror
stc
fstpt
testl
shl
ss
enter
fdivr
lret
cmpb
out
cli
rcr
aad
lret
out
enter
aad
jmp
repnz
aas
stc
cli
cmp
fst
xchg
in
enter
mov
jmp
rcl
lret
rcr
ficoms
cmp
jg
test
jle
sar
call
int3
xor
bnd
lret
ljmp
jmp
in
in
stc
and
xor
cmp
stc
in
cmp
loope
std
int3
aas
jecxz
ljmp
xchg
icebp
ror
out
iret
xlat
cmpb
into
cli
ret
in
aad
cmc
leave
fadd
aas
leave
clc
lea
test
ror
int3
int3
mov
out
cmp
test
loop
aad
fucomip
xchg
xchg
sar
clc
in
xor
in
into
cmp
cld
cmp
incl
call
dec
out
adc
xor
cmp
xlat
fdivrs
iret
repnz
cmp
les
fimuls
icebp
or
xor
shr
aam
out
lret
fadd
ds
xchg
fmul
xchg
fsubr
out
in
in
into
jecxz
icebp
cli
repz
in
stc
lret
xlat
lock
roll
mov
in
xor
mov
jmp
xor
fsubr
out
aaa
ffree
push
addl
fldlg2
int
xchg
mov
jmp
xor
cmp
into
repnz
mov
loope
jmp
lret
filds
fsubr
xor
repz
loopne
and
ret
in
test
hlt
cmc
loope
out
out
sti
repz
not
cmp
in
repnz
cmpb
ljmp
xchg
int
xchg
in
repz
int3
call
fidivrs
ret
leave
cld
mov
lret
sub
in
shll
ljmp
jmp
std
aam
jecxz
hlt
call
out
loopne
rol
int3
aaa
in
out
fnstsw
xor
out
loop
xlat
fldl
in
icebp
out
orl
cmc
in
xor
fdiv
aas
lock
cli
sbb
jecxz
test
ljmp
repz
in
fucomi
fcomip
out
aas
clc
in
in
xchg
lds
repnz
jmp
in
xor
in
fnstcw
cmp
rcl
out
test
fld1
ljmp
out
shll
jmp
fucomi
loope
into
clc
loop
cli
fchs
jmp
orl
iret
loopne
lret
shlb
cli
repz
les
les
icebp
in
repnz
xlat
sub
enter
neg
jmp
hlt
faddl
fdecstp
clc
in
fsub
in
aam
int3
aaa
lret
fldenv
mov
mov
mov
mov
push
jmp
leave
ror
rcl
jecxz
in
cltd
or
xor
jg
test
jle
clc
xor
and
jecxz
stc
loopne
fchs
fucomp
in
test
int3
icebp
jmp
clc
cmp
icebp
cmc
cmp
xchg
out
in
in
in
ljmp
fdiv
cld
stc
ljmp
aad
cld
icebp
std
fildl
repnz
icebp
in
aam
xor
jecxz
sarb
fmull
sti
aas
rorb
mov
out
aad
ss
xlat
cmp
repnz
push
addl
aam
fstp
jmp
fsub
jmp
loopne
aad
not
xor
repnz
fildl
out
fimuls
jmp
into
ss
fsubrp
icebp
loop
idivb
aas
std
inc
repz
mov
adcb
xor
fsubr
aam
clc
fstpt
mov
out
jmp
mov
leave
fdivrs
int
fdivr
rcr
clc
cmp
fcmovbe
shl
fcmovnu
in
or
or
aad
clc
int3
cs
call
iret
sar
cld
fsub
sti
ret
jmp
in
mov
loopne
xchg
int3
out
aad
repnz
cmpl
jecxz
cld
rcl
rorl
int
mov
xor
cli
inc
cmp
adc
std
addl
in
rclb
cld
sti
cmp
ljmp
test
out
enter
sbb
jecxz
xor
fcmovbe
in
loope
cli
hlt
and
in
in
loop
out
add
lret
xor
into
jecxz
rcr
repz
rcl
ds
xchg
or
lret
sti
fcomip
lret
out
ljmp
int3
fstp
xor
aam
loop
test
loope
fxch
out
xchg
and
shl
xor
cmp
adc
test
fmulp
bnd
int3
int
fcmovne
repz
lock
idiv
std
cmc
idiv
cmc
mov
lret
sbb
loopne
fisttps
stc
repz
cmp
bnd
rcr
loopne
call
leave
lock
lds
aam
in
neg
call
in
clc
and
test
mov
mov
xlat
lret
lret
jmp
in
ds
stc
cld
loop
fisttpll
xchg
repnz
out
fcmovb
fucomip
out
cmp
jmp
into
iret
xlat
xlat
into
xlat
fwait
in
mov
daa
jg
test
jle
loop
std
mov
loopne
fidivrs
stc
in
loop
out
aad
stc
repz
fcom
xlat
lock
sti
not
mov
inc
loop
loopne
filds
out
shl
lock
cmp
sar
xor
cld
jecxz
movb
sar
in
repnz
out
fldl2e
ss
stc
sti
test
enter
in
add
movl
out
shr
shl
aam
repz
sar
adc
mov
iret
xchg
mov
into
out
call
loope
fxch
loopne
aas
in
roll
test
fstl
shr
into
leave
in
lret
ror
fnstsw
jecxz
int3
int
roll
mov
out
fimuls
sar
ljmp
or
rcl
xlat
leave
hlt
test
out
mov
and
in
xchg
xchg
xor
lret
aam
leave
ss
loop
fucomip
cld
fst
aas
rcr
sbb
xchg
lea
hlt
aam
xor
repz
leave
aam
aam
out
icebp
fidivrs
ret
test
loopne
jecxz
enter
repnz
repnz
shl
xor
ds
lock
rcl
ret
mov
in
mov
lret
divb
cmp
clc
cmp
sti
in
clc
or
fstp
loope
rcl
call
shl
in
out
cld
mov
rolb
aaa
jmp
ss
iret
out
stc
ds
out
out
fcomip
cmp
in
mov
lret
loope
xchg
loopne
xor
xor
into
xlat
int3
ss
xlat
into
lret
fsub
sub
fcmovnu
ret
or
decb
int3
sub
repz
std
aad
aad
inc
int
fcomi
loope
loop
in
in
addl
sti
cmp
cld
fcom
leave
sar
clc
icebp
rcr
fiadds
decb
aad
out
shl
leave
out
fidivl
xor
aas
adc
loopne
call
in
xor
into
clc
shll
loope
cmp
clc
std
vpsadbw
in
ljmp
leave
ljmp
fsubr
jmp
into
test
fucomip
repz
in
mov
mov
fildl
clc
fsubrl
int3
movl
sti
fldl
mov
int3
ret
sarl
int
cmp
jecxz
fdivp
call
loop
cli
lea
fcmovnb
cmp
test
test
repnz
stc
sub
add
mov
mov
xor
lea
jmp
leave
aad
xlat
fcmovnu
ret
pop
lock
xchg
fmull
jle
add
lret
mov
out
xchg
out
mov
out
fxch
xlat
fdiv
cli
fnstenv
out
cmp
cmp
loopne
fcmovne
loop
loop
mov
sar
cmp
fcmove
xor
rcl
loopne
flds
call
lock
xor
sti
repz
in
shl
loope
ds
sti
ret
testl
test
in
out
ftst
cmp
lret
fstpt
shr
loopne
shl
cld
cmc
fadds
xchg
stc
in
xchg
out
enter
divb
int3
lret
clc
sti
in
rcl
sti
imul
ret
in
loop
dec
sub
hlt
cli
cmc
idivb
fcmovnu
xlat
cld
in
loopne,pt
sub
xchg
xchg
nop
xchg
call
stc
ror
cmp
shr
sbb
add
cli
testl
cmc
clc
cli
fcmove
cmp
jecxz
out
cmp
cmc
fdivr
rolb
int
ror
int
lock
call
call
cmp
fucomp
in
rolb
in
jmp
and
rol
divl
out
int3
hlt
neg
hlt
iret
cld
std
in
testb
sbb
imull
xor
ss
aas
cli
into
out
testb
out
in
out
lock
xor
ss
roll
mov
mov
in
and
das
in
repnz
cmp
in
aad
rcl
stc
and
mov
out
in
cmp
ljmp
xchg
test
ljmp
incb
shrl
fsub
aam
hlt
iret
or
stc
ret
rcl
jmp
icebp
test
in
std
mov
aad
in
clc
cmp
sarl
aas
icebp
in
icebp
loope
xlat
idivb
inc
nop
mov
shl
shr
sub
aad
into
in
cmp
sti
neg
cmp
icebp
xchg
xlat
int3
cmp
stc
shl
cmp
cld
sbb
enter
std
enter
out
out
xchg
xchg
fsubp
aad
repnz
lock
jecxz
aas
fldl
fildl
xchg
iret
xor
into
aam
sar
cmc
lret
mul
rcl
mov
out
test
xchg
fcomip
hlt
out
jmp
fcomip
fsubp
fcmovnbe
faddl
fisttpl
incb
roll
add
test
sar
decl
ret
add
int
ret
int
movsb
inc
push
xor
dec
scas
pusha
sub
jle
add
xor
sti
out
in
hlt
rcl
loope
std
clc
enter
fcomp
ftst
sbb
in
std
in
ret
xor
xlat
sti
lret
xor
rcr
aas
clc
ret
sbb
fdecstp
clc
fcmove
mov
int
jmp
ljmp
div
shl
xlat
fucom
cmp
cli
xchg
loopne
fcomip
icebp
xor
int3
shl
aas
repnz
aad
xlat
out
rcr
fstp
hlt
out
fiadds
nop
xchg
xchg
leave
xor
out
out
cmp
repnz
ret
jmp
clc
mov
jmp
loopne
clc
loop
cmp
enter
fstpt
shl
aas
cmp
mov
in
loope
test
fadd
cmc
shl
repnz
sbb
stc
fadd
incl
std
leave
cli
icebp
ror
test
out
fcmovnu
rcl
ds
loopne
add
jmp
neg
out
iret
mov
repnz
cmp
imul
imul
aam
xlat
out
clc
cmc
jecxz
cli
loop
cli
into
fmull
out
cli
int3
call
call
out
out
fcomip
hlt
cmp
out
xchg
xchg
ret
lret
clc
ds
fucomip
aad
aad
ljmp
fucomi
loope
repz
shl
in
clc
cmp
cli
lock
in
repnz
aad
rorb
xchg
in
repnz
repz
idiv
cmp
aad
lret
sarl
jecxz
loop
jmp
out
cmc
fstl
cmc
lret
call
loop
fst
idiv
cmp
mov
jecxz
in
in
jmp
aam
aam
cmp
xor
clc
xlat
cmp
roll
clc
out
into
xchg
nop
fdivp
xchg
lret
out
sub
fdivr
ror
test
in
out
fcmovbe
xchg
jecxz
repz
aaa
out
test
cmp
clc
jmp
repnz
fstp
hlt
adc
leave
mov
cld
jmp
jmp
enter
cli
fst
into
aaa
and
rolb
incb
cld
jmp
enter
ret
shr
ljmp
fst
std
cld
fsub
xchg
notl
mov
mov
shl
int
repnz
div
cmp
cmc
xor
enter
ret
stc
out
out
lock
mov
lock
xlat
jmp
fcmovnbe
fcmovnu
rolb
cli
aam
clc
testl
in
jmp
fdecstp
iret
xor
jmp
ret
int3
rcl
ret
fldl
sbb
das
jg
test
jle
cmp
flds
mov
neg
fcmovnb
lret
lret
iret
xor
sub
idivl
cli
out
enter
stc
mul
out
imul
stc
idivb
clc
mov
loope
jmp
rcl
fnstenv
cld
jmp
hlt
into
repz
aad
out
ret
xchg
xchg
vpsubb
out
out
in
aad
flds
sti
stc
ret
mov
out
lock
xchg
mov
idiv
clc
loopne
loopne
sti
loop
div
enter
cld
test
std
leave
xchg
xchg
in
ret
jmp
cmp
aam
out
fdivrp
shl
loopne
add
int3
cli
ljmp
ret
shl
shr
stc
out
hlt
sar
cmp
mov
aam
xchg
rolb
rcr
xlat
fdiv
shl
lock
into
fdiv
fsubr
test
loope
test
rol
lret
call
aam
sti
sti
cld
in
std
sbb
out
xlat
jmp
or
xchg
in
inc
fcom
ror
in
into
iret
fistpll
cmp
jmp
cld
fcom
ret
mov
dec
xchg
shr
enter
cmp
enter
sar
call
cld
sti
int3
clc
sti
in
mov
iret
xor
cmp
cmp
test
ret
fsin
lret
loop
cli
cli
lret
xchg
hlt
mov
out
out
xor
iret
vpminub
not
rcr
aad
ror
mov
lret
cmp
sarl
rcr
cli
iret
out
jecxz
cmpl
add
addb
int
xchg
hlt
aaa
icebp
in
cli
hlt
fidivrs
fcmovnbe
cmc
xchg
fsub
out
out
adc
jmp
cld
int3
call
xor
adc
rcr
loop
neg
mov
int3
call
rcl
lret
cmp
rcr
cmp
hlt
rolb
ljmp
int
out
int
rcll
fdiv
in
std
out
cmp
xor
fiadds
ficoml
call
shl
shr
fdivr
lock
shl
idiv
fadd
fcmovu
sub
roll
lock
jmp
sbb
sar
xchg
ret
clc
clc
mov
cmp
out
ljmp
int
fcmovbe
rcl
idiv
xchg
loope
enter
loope
xchg
lret
xor
cs
rcr
cmp
faddl
ret
add
fadd
aam
fst
fcoms
sbb
jg
cld
lret
test
test
jle
xchg
xchg
nop
into
jmp
stc
out
cld
out
out
sti
iret
icebp
sub
xchg
aad
leave
fisttpl
in
fisttpll
leave
in
std
aaa
int
fidivrl
roll
out
xchg
loope
xchg
ljmp
ljmp
out
rolb
enter
int
test
fidivl
stc
fmul
aam
loope
flds
jecxz
jecxz
into
test
int3
test
fnsetpm(287
hlt
fldlg2
rcl
xlat
out
sti
adc
icebp
in
std
jecxz
mov
cld
cmp
cmp
roll
mov
xchg
out
ljmp
sti
out
repnz
cmp
in
ror
testb
lret
call
jmp
mov
shrb
cmp
fmul
rcr
out
fdiv
ret
cmp
loop
out
sti
in
std
jmp
lret
jecxz
cli
out
out
and
sbb
shl
xlat
stc
into
sbb
xchg
xchg
loop
shl
cld
shll
aaa
fucom
fcom
into
sar
sub
into
int
mov
xlat
shl
xor
cld
fdivp
rcr
fxch
loop
lock
test
lret
stc
call
lock
cmp
cld
shl
push
ret
cmc
loopne
test
out
test
nop
into
test
aam
int3
ljmp
int3
cmp
test
cmc
ljmp
jecxz
jmp
mul
stc
xor
ror
stc
std
std
cmc
cmp
fcomip
cmp
sti
ffreep
incl
xchg
xchg
xchg
shll
xor
cmp
fstpt
ret
test
fcomi
aas
shl
mov
div
mov
int
ror
test
aam
div
aam
enter
sar
loop
roll
loop
fsub
cli
faddl
int
cmp
icebp
ljmp
shl
loopne
and
loopne
cld
icebp
rolb
das
fnstcw
out
cmp
rcl
sar
incb
adc
out
call
adcb
sarb
in
rolb
fdivr
in
test
lret
sti
fcmovnu
mov
lret
cs
clc
lret
fcmovu
rolb
hlt
out
not
in
xchg
shl
cmc
lret
ss
xor
fstpt
lret
sti
repz
rcl
cmpb
jmp
out
cld
fsubr
lret
hlt
int
leave
ret
push
mov
sub
xorl
jmp
int
int
leave
push
hlt
cltd
loope
je
dec
pop
xor
jle
add
out
divl
loop
sarl
jecxz
testl
fmulp
in
xchg
jmp
rol
out
cld
stc
cmp
cmp
rol
ret
orb
loopne
xor
into
cmp
call
loop
sbb
fsubrp
xchg
ffree
out
lock
jmp
shll
out
test
aas
fcmovb
cmp
fldl
mov
repz
jmp
hlt
lret
into
lret
fdivr
std
test
clc
addl
jmp
loopne
and
jmp
ljmp
cmp
mul
in
jmp
xchg
and
out
hlt
iret
jmp
jmp
cmpl
sti
out
fcmovnbe
adcl
div
loope
in
aas
shl
xchg
jmp
in
out
mov
int3
shl
call
cmp
in
ret
fistpll
shr
loope
fmul
loope
out
lock
leave
imul
shr
cmp
rol
aad
push
xchg
shl
xchg
incb
test
fcmovnb
stc
in
lret
cmp
fdivr
cmp
jmp
xchg
leave
jecxz
xchg
xchg
xchg
rcll
cli
in
into
cmp
stc
shl
out
jmp
in
xlat
fucom
mov
loope
int
iret
fcmovnb
lock
out
sti
xchg
std
out
idiv
enter
jecxz
icebp
lock
shl
shr
leave
repz
fucompp
ljmp
icebp
loope
int3
fimull
out
lock
hlt
repnz
in
jmp
cmp
leave
stc
into
loopne
shl
out
mov
out
aad
aaa
rcl
cli
xor
out
fidivrl
out
cmp
fsubp
out
iret
iret
leave
mov
into
icebp
test
jmp
lock
cmp
jecxz
sti
jmp
mov
lret
xchg
ss
leave
in
ds
cmp
sar
bnd
leave
ret
leave
jmp
int3
nop
ret
hlt
in
out
shr
enter
aad
stc
ds
filds
neg
mov
leave
lret
push
or
mov
add
mov
mov
incl
jmp
int
ret
rol
fcmovnu
jecxz,pn
adc
jecxz
aaa
jg
fiaddl
jle
ljmp
aad
repnz
cmc
aas
shl
ret
aas
jmp
cld
int3
jmp
xchg
mov
in
shr
in
in
repz
lock
cmp
ffreep
int3
lret
lea
iret
out
out
shl
aad
aad
fmul
fidivs
inc
test
cmp
cmp
mov
test
out
repnz
aad
in
fdecstp
repz
mul
cmc
fdivp
in
ljmp
rcll
icebp
xor
lock
sub
lock
ret
push
decb
xchg
icebp
jecxz
enter
icebp
aaa
enter
fnclex
aas
iret
fcomp
cli
jmp
in
xchg
leave
int
shr
fcmovbe
imul
xor
fstpt
stc
ds
in
stc
add
ret
jmp
cs
xor
mov
lret
fscale
into
shl
out
call
jecxz
enter
iret
aam
cmc
enter
jmp
shl
loope
loope
ret
fcom
jecxz
int
lret
nop
icebp
hlt
in
jecxz
shlb
cmp
das
stc
enter
inc
testl
xchg
jecxz
sti
cmc
xchg
call
jmp
into
repnz
not
cld
cmp
addb
xchg
in
stc
lock
ror
cmc
into
jecxz
lds
out
cmp
fstp
cld
shl
test
int
ret
mov
shr
jmp
clc
cli
dec
loop
not
out
std
cmc
enter
enter
dec
test
jecxz
aam
in
out
aas
cmp
xchg
std
cli
xchg
icebp
hlt
in
call
cmp
loopne
lret
loopne
inc
xchg
in
les
out
iret
mov
mov
loop
fcmovu
call
int3
fdivp
in
les
leave
repnz
test
cli
cmc
bnd
loopne
lock
loopne
test
sti
loopne
xchg
cmp
leave
ljmp
in
cmc
and
ret
cld
jecxz
loope
ror
iret
test
out
lret
lret
xor
in
xlat
cmp
stc
cmp
fcomip
in
in
out
int3
test
movl
movl
mov
mov
sub
xor
mov
add
jmp
int
ret
aam
fstp
fstl
fmull
lock
xchg
cmp
fiaddl
jle
test
int3
ljmp
out
enter
call
aad
ret
aad
fucomp
mov
mov
mov
out
cmp
xor
fcmovu
or
shl
in
enter
repz
in
shll
repnz
fsub
cmp
leave
cmp
aam
loopne
xchg
xchg
mov
call
xchg
mov
in
repnz
stc
in
shl
stc
into
add
fdivrs
out
repnz
in
mov
loop
into
xchg
xlat
call
fldlg2
iret
out
icebp
mov
cmc
std
stc
call
lock
aaa
xor
shrb
lock
cmp
aas
fcmovb
mov
clc
mov
lock
in
in
sti
fxch
lock
not
cli
xlat
neg
add
mov
aam
stc
leave
ljmp
aas
xor
fdivr
cli
iret
ss
fcomp
lret
cld
repz
mul
loopne
call
fiadds
cli
repz
int
lret
in
fucomp
out
aam
loopne
xchg
aas
test
jecxz
xor
in
cmc
in
int
jmp
fucomp
sar
into
fidivrl
out
repz
xlat
mov
sar
int
lret
iret
int3
sub
aam
call
jmp
neg
add
rol
in
jecxz
pop
in
in
enter
mov
jmp
int3
call
push
rcr
testl
xchg
lock
lret
in
lea
cmc
in
out
cmp
int
in
jecxz
jecxz
xlat
fimull
lret
repz
clc
in
fsubrs
ljmp
sbb
sarl
test
out
xlat
ftst
mov
ljmp
divl
hlt
ror
aad
shl
testb
loop
in
out
int
out
out
ret
aam
out
lock
sbb
aam
flds
fisttps
into
std
loopne
xlat
ss
fucomp
sti
aaa
testl
mov
mov
enter
sti
and
in
in
ss
hlt
clc
out
in
shl
out
addl
xchg
out
lret
ror
ds
cmp
fdiv
fsin
clc
mov
movzwl
or
mov
xor
mov
movzwl
or
mov
add
mov
mov
decl
xor
add
sub
mov
xor
add
adc
jmp
rcl
rcl
dec
mov
mulb
cmp
fiaddl
jle
test
mov
xor
cmp
cmp
in
cmp
in
inc
sar
xchg
cmc
call
in
loopne
iret
out
vcvtdq2pd
xor
div
incb
ljmp
rolb
out
call
repnz
aad
rol
aad
cmp
repnz
out
loope
shl
into
xor
xor
fdivp
xor
sar
test
ds
loopne
loopne
xor
in
int3
out
aaa
in
ljmp
repz
fucomi
loopne
aad
xlat
fdivrp
clc
out
mov
repz
loop
out
shl
fistpll
sbb
ds
inc
faddp
mov
into
in
jecxz
xor
sub
ror
fcmovb
rcl
int
jecxz
iret
loope
fdiv
call
imul
cli
xchg
adcl
fmul
fsubp
fcmovnu
ret
cli
out
nop
into
sti
cld
rcl
sub
iret
cmp
int
icebp
loop
sub
ret
leave
aam
div
sub
cli
fcmovu
xchg
icebp
xchg
xor
lret
fxch
ss
fcom
aam
rolb
jmp
nop
out
fcmove
sbb
ss
ret
aad
jmp
cmpb
loopne
ffreep
loop
test
loope
out
out
hlt
ror
not
fdiv
test
ds
mov
call
sti
jmp
xchg
repnz
rcl
xor
sti
shl
aaa
rcl
in
icebp
ret
cmc
mov
leave
mov
lret
xor
sub
jecxz
shlb
sarb
fmul
sarb
repnz
repz
repz
fmull
ror
ret
in
repz
iret
lock
repnz
testl
orl
cmp
cld
fdivrp
xlat
in
xor
ret
jecxz
sti
mov
cli
enter
rcr
int3
ret
out
iret
xlat
cmp
ljmp
out
xlat
jecxz
mov
clc
xlat
fucomip
icebp
out
test
nop
xor
rcr
in
hlt
fistpll
sar
lock
loop
fadds
dec
lock
int3
in
into
das
ret
shl
fdivr
enter
cmp
cli
inc
movl
xor
or
sub
jmp
ror
rcr
ror
js
cmp
inc
or
jg
fiaddl
jle
filds
test
jmp
fnclex
sar
jmp
int3
repz
fsub
cld
adc
cli
cmp
xlat
cld
cld
out
cli
ljmp
aad
out
sub
fstp
frstpm(287
loopne
call
fiadds
test
int
jmp
shl
fdiv
in
sar
lds
sbb
sti
mov
lret
ret
in
in
shr
ret
ret
hlt
shl
fdivrp
in
call
test
lds
stc
fdivrl
jmp
notrack
cmc
cmp
shr
sar
ljmp
mov
in
fldpi
call
fsubr
clc
in
shl
repz
loop
fsub
lret
out
int
jmp
rcl
ror
enter
loop
xor
ror
lret
cld
call
mov
cs
idiv
std
repz
ds
iret
shl
notrack
neg
fisttpl
loope
neg
in
cli
xor
cld
aad
std
cmp
out
clc
lock
in
in
neg
iret
stc
faddl
aad
cmp
jecxz
repnz
testl
incb
mov
adcb
sti
jmp
stc
cmp
rcr
mov
xchg
iret
in
shrb
rcr
xor
cmp
int
out
iret
in
call
addl
popl
in
clc
repnz
std
ret
aam
clc
call
test
xchg
mov
test
out
mov
les
rcr
cmp
rcl
out
jmp
iret
aas
aaa
std
cld
test
test
fcmovb
ljmp
loope
in
fldz
into
xor
sti
cmp
loopne
lds
mov
std
int3
out
loope
in
xchg
jmp
std
sti
fstpt
aad
hlt
ret
out
shl
jecxz
cld
mov
xchg
mov
shr
aad
xor
cld
loope
in
out
mul
aam
ret
mov
in
in
in
int
cmp
jmp
aam
aam
rcr
ds
xchg
jmp
icebp
aam
xchg
lret
loope
jecxz
lret
cli
cld
int3
xor
cmp
inc
fsubs
test
add
movl
movzbl
xor
movl
mov
add
mov
movl
movl
movl
adcl
mov
mov
sub
xor
mov
addl
jmp
lret
aas
ret
aad
fldenv
js
xlat
stos
sarb
add
fsubr
loop
test
mov
or
test
in
jecxz
das
xor
cmp
cld
iret
xor
cmp
jmp
xchg
mov
adc
lock
aam
incb
aam
xor
mov
in
xor
lock
shl
cmp
cld
ds
icebp
fnsave
incl
lret
in
iret
mov
loope
xchg
in
ret
out
jmp
cli
fdivp
hlt
sarb
std
fucom
ret
in
rcr
leave
addb
icebp
cmc
xlat
cmp
call
in
f2xm1
loop
call
sub
sbb
iret
test
aaa
fnstenv
repnz
cmp
addb
jmp
mov
mov
cld
jmp
stc
icebp
out
cmp
into
add
sti
clc
cld
faddl
mov
iret
filds
shl
in
mul
mov
mov
out
int3
xchg
and
xor
fcmovbe
out
out
fmul
int3
aas
out
test
call
xchg
call
jmp
jecxz
xor
cmp
sti
sar
xchg
ljmp
lea
xor
cmp
xlat
repnz
adc
call
fucomi
int3
cmp
iret
in
in
out
in
and
xor
lret
ds
lock
std
rol
ret
aas
leave
ljmp
repz
in
xor
int
xor
test
loope
vpsubq
enter
into
fiaddl
out
rcl
xor
xor
icebp
cmp
cmp
xchg
shl
lret
in
out
out
int3
test
ret
imul
in
xor
fxch
test
testl
jecxz
nop
xchg
lock
xor
in
xor
imul
repz
lret
fmulp
clc
in
loopne
mov
int
mov
lock
int3
cli
in
les
xor
cmp
int
adc
mov
nop
fiadds
xchg
jmp
leave
aaa
iret
ss
out
out
jmp
cmp
sti
ljmp
rcll
out
into
in
leave
int3
cmp
add
push
sbb
add
cli
movl
je
push
movl
jmp
mov
mov
andl
sub
orl
mov
xor
add
jmp
rcl
lret
fcmovnbe
lods
pop
mov
jb
ret
jg
fiaddl
jle
ds
cmp
ret
roll
test
fsubr
jmp
fcmovnbe
loopne
in
lds
shl
fdivr
in
repz
lock
hlt
repz
cmp
mov
les
ljmp
shr
shr
cmp
ds
test
loopne
test
fdiv
stc
loopne
in
loopne
shl
test
repz
leave
hlt
lret
lret
loopne
cmp
cmp
in
jmp
lret
cmc
decl
cli
xor
lock
cmp
lds
mov
lea
repnz
repz
cmp
shr
repnz
cmp
fnstcw
mov
jmp
call
xchg
das
cmp
icebp
xor
fsub
cld
ljmp
sti
out
loopne
fimuls
int3
icebp
loopne
in
sub
out
out
out
fstpt
stc
aas
clc
inc
fmulp
xchg
mov
into
jecxz
loope
sub
fidivrl
lret
fdivr
aad
lock
cmc
fildl
mov
xlat
div
xor
ljmp
rcl
loope
ret
fdivp
stc
loope
mov
iret
mov
hlt
xor
ret
ror
repz
repnz
std
cmc
test
call
vpsubq
sub
repz
cli
shll
lret
aas
out
cmp
shr
in
fucomi
dec
fsub
call
jmp
shl
fsubr
sarb
fmul
loope
cmp
enter
fsubrp
xchg
rcl
lret
shl
test
repz
cmc
xchg
aad
test
int
leave
icebp
shl
repnz
cmc
jecxz
xor
repnz
cmp
cld
stc
loop
stc
cmp
ljmp
in
shr
xchg
icebp
repnz
divb
sub
push
fucomip
cmc
sti
ret
filds
sti
loope
mov
les
int
hlt
int3
std
iret
aam
jmp
out
fstp
clc
shl
jmp
out
into
mov
loopne
aam
fxch
aam
jmp
cmp
idivb
loope
aam
test
lret
lret
shr
xchg
in
aam
cmp
out
sar
repz
cli
ret
sarl
orl
add
out
aad
cli
jmp
fcom
rcr
fstp
fnstsw
fmull
dec
outsl
roll
add
lret
aad
clc
fsubr
out
cld
clc
mul
clc
cld
in
std
sti
jmp
std
repnz
call
in
cmp
aam
fsub
sti
cmp
stc
leave
out
in
test
ljmp
xor
fcmovnb
lret
repz
in
cmc
sti
cli
lock
aas
test
mov
xchg
jmp
leave
int
xchg
xor
rcl
in
fucomip
idivb
cmp
int3
lds
leave
lret
iret
iret
cld
nop
aam
jmp
icebp
xor
fnstsw
jecxz
std
rcr
test
in
out
mov
nop
call
mov
sarb
lock
cli
sarb
ror
repnz
icebp
loopne
stc
jmp
fcmovne
xchg
xchg
xchg
iret
shr
stc
repnz
out
in
fcmovnbe
repnz
sti
repz
ret
cli
fmul
std
fucomp
addl
loope
rcl
icebp
aad
stc
lret
out
jecxz
shl
hlt
xlat
ffreep
int3
cmc
test
hlt
fucomp
jecxz
ror
in
aad
fnstenv
loop
cli
jecxz
repnz
mov
out
ljmp
xchg
shr
ss
ljmp
and
std
lret
in
fxch
cld
leave
addl
fcom
into
rcl
lret
aas
test
aas
out
ret
xchg
out
xchg
iret
cmp
in
hlt
int
lret
cmp
shr
faddl
neg
ffree
mov
out
mov
hlt
jmp
cli
lret
int
cmc
cmp
fucomp
loop
loopne
mov
adc
call
fdivs
hlt
shl
int
call
repz
ds
aam
repz
frstpm(287
in
cli
ret
lret
xchg
call
sar
out
sar
cli
icebp
out
test
std
test
dec
rorl
cmp
lret
clc
leave
leave
clc
into
cli
int3
icebp
idivb
xchg
fcomp
sti
xchg
ret
loop
rcl
xor
stc
divl
lret
adc
add
stc
sar
aad
enter
nop
mov
xor
repz
clc
cmp
aad
cmp
in
jmp
dec
fcmovne
cmc
mov
xor
fcmovnbe
std
cmp
out
hlt
iret
neg
loope
rorb
in
out
clc
sub
into
testb
add
add
sbb
add
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
jmp
ror
aam
frstor
rcll
mov
jg
fiaddl
jle
sub
shl
xor
test
std
cmp
out
loop
xchg
rcr
enter
rorb
mov
loop
xor
out
cmp
cmp
cld
rcl
fcmovbe
sti
std
loope
fmul
ljmp
test
repnz
int3
in
out
or
repz
lret
fucompp
repnz
xor
rol
call
xor
cli
sti
lock
test
fisttpl
mov
lret
call
jecxz
out
clc
cmc
jmp
clc
aam
loop
mov
loop
out
mov
faddl
ljmp
sarb
and
aad
test
clc
xchg
cmc
std
sti
call
icebp
out
sub
stc
in
call
aas
cmp
sti
out
loope
jmp
xchg
loop
in
mov
lret
hlt
in
xor
jmp
aaa
out
ftst
out
faddp
and
lret
stc
int3
xchg
std
int
xor
iret
in
out
out
int
fdivr
aam
repz
out
fucomp
lds
addl
aam
hlt
cld
incb
cli
icebp
fisttps
rolb
xor
lret
enter
out
stc
repz
mov
xchg
nop
cmp
shl
aaa
in
sar
leave
cmp
clc
sbb
xchg
addb
nop
cli
fistl
call
cld
ss
hlt
xor
xchg
fst
cli
ret
xchg
out
leave
fucomip
roll
into
repnz
xlat
aas
cmc
loopne
fsincos
mul
std
stc
stc
stc
test
out
int3
fsub
lret
test
jmp
xor
hlt
sti
fcomp
addb
ret
orl
icebp
shll
shl
out
fldl2e
cmp
aas
loope
xchg
in
sti
orb
jmp
aad
ret
jmp
loope
cmpb
test
dec
nop
lret
cmc
out
into
in
ror
repnz
addb
int3
aas
out
test
xchg
out
fdiv
stc
sti
stc
fdivp
fldl2t
cmp
test
shl
mov
test
in
out
mov
mov
add
add
or
sbb
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
xor
xor
add
adcl
add
imul
mov
or
mov
sbb
mov
jmp
rol
aam
aad
aad
xchg
mov
push
or
das
sbb
jg
fiaddl
jle
aam
out
in
cs
sar
cli
shl
ror
flds
incb
mov
call
sub
in
in
ss
out
int3
rcl
enter
loop
repnz
cmp
in
ljmp
sti
mov
in
mov
enter
cmp
cmp
sti
cmp
cmp
cli
repnz
ret
mov
leave
xor
xchg
shr
clc
in
fnstcw
sbb
shl
std
fxam
fcmovu
out
mov
ret
imul
repnz
fmul
ret
sti
cmc
fcomi
cli
sti
lret
cli
int
orb
rcr
out
out
cmp
loop
rolb
in
mov
leave
call
out
ljmp
aaa
cmp
loope
repnz
stc
in
mov
fcmovu
iret
call
ss
cmp
into
repz
hlt
hlt
sbb
in
loop
in
test
lds
mov
ret
clc
repnz
aaa
iret
in
cmp
fxtract
out
fucomip
leave
fcmovb
fiaddl
icebp
shr
repnz
lds
xor
cmc
cld
ror
ds
cmp
call
in
fcmovu
loope
xrelease
out
aad
xor
cmp
sti
sub
test
fcmovu
call
fcomi
lret
icebp
lret
in
ror
aaa
call
test
fld
xchg
xlat
cmp
xchg
in
fsubr
nop
orb
xlat
xor
sbb
jecxz
vpaddd
in
cli
stc
ljmp
rcr
lret
ljmp
sbb
xchg
fcmovu
mov
leave
jmp
cmp
iret
sub
divb
fdivrp
fistpll
out
shl
out
fcmove
loope
out
mov
mov
imul
fnsave
rcr
loop
shr
xor
sti
in
in
call
jecxz
cmp
aaa
fdivr
cmp
aad
xor
out
ljmp
in
mov
xchg
hlt
lret
int
jmp
cmp
icebp
cmp
mov
out
fistpll
fcmovb
add
sub
je
add
rcl
ret
fucomp
insb
fstps
sbb
ds
test
jle
add
std
iret
int
fsubr
iret
icebp
aad
sub
jmp
jmp
fdivl
cld
orb
dec
into
stc
in
mov
xchg
rol
ret
cmp
out
shr
aas
repz
inc
roll
ret
fmulp
int
cld
loope
xchg
in
shll
jmp
cmp
stc
in
stc
sti
aad
ret
loope
testl
jmp
into
jmp
into
loopne
loop
test
addl
fucomp
fsubrp
rorl
out
leave
xor
cld
sar
rol
iret
loop
aad
call
cld
rolb
xchg
clc
cs
fdivrl
out
hlt
cmp
aas
sub
fscale
loopne
adc
hlt
jmp
test
or
xchg
xchg
aad
xlat
xor
ss
out
repz
jmp
loopne
jecxz
clc
ret
loop
orb
repz
cmp
sti
cmp
stc
ret
jecxz
loopne
in
mov
mov
nop
lret
test
ljmp
fistpll
jmp
repz
mov
and
sbb
loop
ror
ror
call
cmp
lock
sar
xlat
xlat
in
ficoms
nop
xchg
out
lds
ss
fdivrl
xor
fcmovbe
rorb
mov
out
repz
rol
fadd
aaa
clc
lret
idiv
fcmovne
fiadds
jecxz
movb
iret
fsub
xchg
repz
out
int
cmp
leave
ret
std
sti
rol
les
loope
out
xchg
sub
cmp
xor
lret
hlt
cmp
ret
out
mov
xchg
adc
xlat
jecxz
leave
clc
out
call
loopne
sbb
enter
aad
xor
ljmp
ljmp
clc
loopne
iret
loop
repz
cli
in
xchg
fiaddl
int3
loope
in
icebp
out
in
repz
cmp
lret
out
test
fadd
jmp
jmp
sub
sub
fcmovne
sar
lret
fdivrl
idivl
in
loopne
fcmovbe
leave
jecxz
out
sub
cmc
shll
imul
rcr
ljmp
cli
xchg
ja
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
orl
xor
add
movl
jmp
mov
notl
mov
xor
xor
add
add
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
sub
add
add
imul
jmp
into
ret
rcl
aad
aad
push
pop
movsl
and
push
into
jg
fiaddl
jle
movb
adcb
divb
xor
cmp
std
adc
repz
sti
leave
test
loopne
cld
xchg
sub
rcl
stc
lock
repnz
addb
rol
fsin
idiv
neg
std
cli
jmp
mul
not
in
repz
jmp
rcr
dec
repnz
ret
leave
lret
mov
icebp
test
out
ror
cmp
loopne
fsubp
cld
ljmp
call
cmc
loope
aaa
in
lret
into
rcr
cmp
jmp
in
xchg
mov
ljmp
cmp
fdivr
fcmovu
in
test
mov
ror
loop
shl
loope
xlat
ss
xlat
sti
int
loope
aas
std
rorl
cmp
int3
fcomip
out
xor
cli
aaa
aad
enter
loope
test
xchg
mov
call
xor
cmc
xlat
cld
fcmovnbe
in
repz
iret
out
shl
std
aas
adc
stc
xchg
mov
sub
loope
xor
repz
fnstsw
aas
fcmovb
fadds
div
mov
test
nop
in
ror
stc
shl
shl
sarb
iret
std
sarb
fcomi
fucom
clc
clc
std
cmc
fucomi
out
orl
cmp
cmp
stc
repz
in
loop
cmp
sar
jmp
out
mov
mov
xor
sti
out
xor
std
hlt
loope
inc
out
mov
mov
in
repz
sarl
aam
cmp
jecxz
rolb
decl
in
mov
rolb
leave
repz
stc
cmp
aas
cli
fcmovu
test
ror
jmp
xchg
xchg
rcll
int
call
stc
xor
adc
aas
repz
hlt
in
out
mov
into
jecxz
ret
fcmove
into
lds
lret
rcl
lds
fsub
stc
int3
cli
out
mov
repz
in
cmp
test
shl
repz
fisttps
hlt
lock
loop
in
fcmovne
call
iret
cmp
cmp
jmp
rcl
aad
loop
pop
sbb
icebp
addr16
sarl
fiaddl
jle
xlat
mov
hlt
ret
fiadds
out
fcmovne
mov
lret
ret
jmp
rcr
aam
in
clc
loope
jecxz
test
clc
clc
xchg
out
bnd
out
les
lock
sarl
cmc
roll
xchg
clc
loop
std
sub
out
in
lret
xor
hlt
icebp
test
enter
cmp
out
and
jmp
das
lret
aad
shl
xlat
loop
jecxz
aas
rcr
fsubp
test
mov
cld
int3
fisttpl
xor
xor
fcom
loope
repz
cmpl
fucomp
aam
imul
call
out
leave
xor
shll
cmc
in
xlat
cmp
aas
in
cmp
ret
movl
xor
in
fcomp
lret
sti
hlt
cli
dec
fadds
leave
loop
fcompp
sti
and
mov
cmp
leave
call
fnstsw
shl
mov
mov
xchg
mov
faddl
cmp
iret
lock
ret
in
loop
sar
fsubp
in
fucomip
loope
mov
jmp
rcl
fcmovu
cmc
stc
fucomip
icebp
repz
in
mov
mov
xor
cli
ss
rcr
loopne
cmp
loope
loope
lret
cld
xchg
xchg
ss
out
int
repz
cmp
stc
hlt
into
addb
leave
jecxz
loop
std
shl
in
jmp
icebp
cmp
sti
neg
std
fstpt
loope
enter
in
mov
loop
call
ret
xor
test
neg
cli
jmp
lret
mov
jmp
cmp
cld
into
cmp
iret
out
repnz
hlt
cld
fcmovu
test
fists
rol
repnz
cmp
leave
cmp
in
rcl
hlt
repz
aad
test
mov
ror
enter
jmp
out
sti
repnz
iret
lret
cmp
loope
cmc
test
hlt
add
std
fildl
nop
int
xlat
hlt
ljmp
stc
sar
fcmovnb
out
ret
out
in
xchg
xchg
ljmp
icebp
cmp
rcl
repz
mov
negl
jmp
enter
fstp
int
inc
dec
adcl
lahf
stos
mov
jg
fiaddl
jle
fucom
push
call
fiadds
out
ror
shrb
repnz
aaa
cmp
stc
lock
inc
push
shl
out
fcomp
call
int
lret
enter
ss
cmc
cli
cmp
cmc
loope
out
sarb
out
incb
loop
xchg
std
cld
xchg
mov
iret
in
cmp
lock
fdiv
into
cmp
out
jmp
fucomi
leave
xchg
addl
ret
in
ror
in
lret
rcl
hlt
stc
out
std
sub
hlt
clc
into
lret
lret
fildl
out
into
xor
sarb
hlt
aaa
jmp
test
call
loop
loope
cld
sub
hlt
int3
repz
sarb
int
aam
loope
fsubr
aad
mov
lret
rol
ror
rcr
shl
out
sbb
rcr
jmp
test
nop
mov
jmp
xor
hlt
leave
sti
in
and
loop
cld
test
sti
clc
lret
out
xchg
out
loope
hlt
aaa
sti
lock
fdivp
cli
out
ret
rcl
mov
fadd
out
enter
decl
rcl
cmp
out
into
hlt
lock
in
out
icebp
loope
add
fimull
out
loop
add
lds
into
out
xor
stc
aas
aad
fxtract
repnz
lret
repz
lret
imul
divb
fcomip
xlat
rcr
cmp
lret
stc
fmuls
jecxz
adc
hlt
out
cmp
xor
shr
out
sarl
adc
adc
in
jmp
shll
clc
cmp
int3
loope
out
dec
rol
call
jmp
call
lret
in
cmp
cli
and
repz
loopne
sbb
test
mov
xchg
cmc
jmp
in
sub
cld
xor
cmc
ror
in
std
shl
ret
fst
in
in
into
shl
in
mov
call
xlat
clc
fcmove
loop
cmp
repz
test
out
fimull
out
rol
xor
enter
xlat
in
iret
stc
lret
shl
rcl
cmpb
loopne
leave
std
out
mov
test
ror
int3
sub
cmp
movl
ja
movl
mov
jmp
mov
adc
mov
mov
movl
jmp
aas
mov
fnstcw
jae
popa
push
mov
data16
jle
add
out
stc
or
aam
leave
in
mov
div
repz
in
leave
fadd
xor
repz
xlat
cmp
test
sub
cmp
fcompp
in
xchg
loope
out
xchg
idiv
stc
in
ss
fldl2e
out
clc
xlat
clc
sti
mov
ret
mov
lea
repz
lds
xor
cmp
adc
hlt
xchg
repnz
fstl
out
cmp
aas
in
lret
cmpb
in
repnz
cli
out
call
test
lret
into
cld
cmp
ds
ret
lret
call
loopne
xchg
faddl
sar
cmc
into
rcl
in
cmp
not
jecxz
loope
test
ljmp
iret
mov
iret
cmp
lds
cmp
shl
add
loopne
sar
aad
mov
fcmove
cld
xchg
xor
in
fmul
aaa
aam
enter
mov
in
call
shr
xor
lret
fdivrs
ss
hlt
loopne
iret
hlt
sarb
rorl
out
jmp
fadd
fsub
cli
jmp
fdivrs
jmp
cmp
fcom
cli
test
fsubr
test
xchg
xchg
out
in
add
lret
aad
leave
leave
shl
stc
std
out
loop
test
ret
ffreep
fsubr
loopne
hlt
incb
jmp
aad
cmp
fsubr
jecxz
cmp
xlat
rol
std
std
decl
repnz
repz
int
clc
xabort
enter
aad
xlat
repz
xchg
test
fldl2e
xchg
into
in
iret
nop
icebp
rol
stc
ss
aaa
cmp
repnz
ret
cmc
stc
out
loope
cli
out
enter
jmp
repnz
jmp
cmp
aad
imul
lret
ss
clc
in
idiv
int3
in
call
jmp
stc
into
cmp
jmp
repz
fnsave
repnz
jmp
sub
lret
out
div
int3
ret
cmp
out
fucomip
out
rcr
cmc
mov
fimull
lret
int
jmp
iret
xor
vcvtdq2pd
out
cmp
jecxz
out
rcr
test
fst
mov
iret
jmp
sarl
xor
xorl
xor
jmp
aam
mov
int
rol
repnz
push
fsts
add
cmp
fst
aaa
int
rcl
int
in
fcmovnb
in
fld1
xchg
jmp
xor
repz
xor
jmp
lret
aas
cmp
fsubr
test
mov
out
aaa
leave
aam
cmp
rcl
ffree
iret
repnz
test
mov
int3
fiadds
loopne
out
xor
cli
mov
loopne
hlt
sar
stc
fnclex
clc
fdivrs
out
test
out
call
fcmove
icebp
enter
aam
adc
ljmp
sub
out
xor
fldz
int
ret
jecxz,pt
mov
ljmp
into
xor
leave
repz
int3
not
stc
sar
repnz
les
test
xchg
in
ret
icebp
shll
out
sti
jmp
cmp
sar
lret
out
shl
fdivp
jecxz
xor
lds
call
fiadds
lds
or
lret
sbb
fscale
xchg
repnz
xchg
rcl
in
in
icebp
enter
ss
ljmp
aas
fdivr
fimuls
adc
fbstp
clc
in
int3
into
iret
aaa
cmp
in
rol
cmc
roll
lock
loopne
sti
loopne
xchg
enter
aad
std
int3
int
loope
sar
mov
ljmp
aam
test
aam
repz
fcomi
cmp
xor
std
aas
cmc
lret
jecxz
ljmp
mov
xor
ror
fucom
lret
repz
lock
sti
ret
sub
sti
fisttpll
divl
cmp
repnz
cmp
iret
cmp
test
in
ret
shl
cmc
sti
jmp
cld
loop
adc
out
out
lock
cmp
hlt
cmc
in
cmp
ret
std
jmp
stc
int
fucomp
addb
call
cmp
test
fiaddl
ret
cli
fcmovu
xchg
in
mov
leave
fcmovnbe
out
cmp
xor
jecxz
loope
fadd
ret
test
ljmp
call
jmp
divl
cmp
fldln2
iret
aad
ds
xlat
aad
in
in
mov
mov
stc
xor
or
sub
add
mov
or
imul
mov
mov
sub
cmp
movl
ja
mov
jmp
xor
jmp
ror
iret
leave
fstp
popa
test
adc
fidivrl
fiaddl
jle
rol
iret
in
repnz
fucomip
in
fadds
out
jecxz
rcr
cld
xchg
rclb
cmp
leave
xor
cmc
int
ds
test
out
in
movb
rol
loope
in
in
xor
cmp
fdivp
cli
ret
rol
clc
cmc
cli
clc
decl
icebp
or
cmp
fstpt
aas
shl
and
mov
mov
call
cld
adcb
iret
sar
icebp
lret
repz
repz
test
ffreep
mov
xchg
and
test
fldl
ror
ss
aaa
stc
addl
lret
leave
lea
xchg
in
loope
lret
std
cmp
jmp
rcl
loopne
hlt
in
std
out
fld
jmp
loopne
aad
xlat
cli
sti
int
sar
loope
test
cld
xchg
add
mov
mov
ret
cmp
lret
cmp
sti
lret
into
icebp
fcom
fsubp
call
aad
lret
ret
into
mov
xor
ror
cmc
stc
clc
jmp
loop
leave
ret
lds
loopne
rorl
int
hlt
cmp
lret
aas
out
loop
in
hlt
int
out
lret
xchg
adcl
iret
hlt
ror
int3
fst
fmulp
cli
in
cld
push
fiadds
decb
ss
ljmp
in
roll
fadds
orl
fcmovne
in
aad
cmc
cmc
sar
rcl
ds
jmp
call
xchg
testb
lds
rcr
cmp
idivb
loop
hlt
shl
stc
loopne
mov
add
out
clc
repz
ss
lock
std
shl
sub
leave
enter
loope
test
rcr
cmc
ret
lock
ss
lret
int3
iret
test
test
cmc
or
lret
xor
in
xor
rcl
int3
cmp
in
hlt
jecxz
stc
cld
mov
out
fsubrp
repnz
aam
in
ret
int3
cmp
aam
aad
hlt
fcmovnb
hlt
cli
jmp
rorb
cld
movzwl
sub
mov
xor
xor
jmp
rcl
into
aad
fcmovu
add
pop
sub
fdivrl
fiaddl
jle
rcl
aad
xlat
mov
cmp
cmc
sarb
cmpl
cmp
std
test
cld
call
cld
ljmp
enter
fdivr
out
aas
ds
loop
aas
imul
call
loop
lret
out
leave
fcmovu
enter
aaa
ds
iret
sbb
fdivr
lret
fsub
call
out
test
clc
lret
not
ds
lock
aam
out
fld
jmp
add
in
xor
aam
leave
cmp
ror
repnz
push
out
jecxz
ret
fadd
into
loopne
loop
hlt
loope
int3
xlat
sub
enter
jmp
leave
rol
rcr
fcmovnb
sti
out
mov
mov
push
int
rorb
stc
xor
cmp
loope
int
aam
cmp
fucomi
call
shl
call
xchg
xor
clc
xor
jmp
xlat
loopne
fdivr
clc
loope
mov
enter
nop
int3
enter
out
ret
loope
repnz
fmul
leave
in
ret
ret
repz
in
mov
lea
call
cmp
xor
lock
fld
icebp
repnz
cld
mov
faddl
mov
leave
loopne
divb
ljmp
inc
shl
cmc
xlat
sbb
mov
test
sub
idivl
cld
aaa
fcmovbe
aad
iret
idiv
std
aad
movl
sar
xchg
test
clc
leave
xor
into
out
in
cmp
in
iret
loope
fxch
loopne
ret
inc
in
in
jmp
loop
aad
aad
aaa
aaa
hlt
cmp
ds
shl
xchg
mov
mov
into
int
shl
rcll
lret
repz
aad
hlt
in
ds
or
int
int3
in
pop
in
div
ret
aam
cmp
in
out
cmc
add
cmp
cmpl
call
clc
mov
into
xchg
lea
fcomi
aaa
jmp
rolb
mov
jecxz
xchg
out
repnz
aad
cmp
in
fcomp
ret
fucomp
cmp
fmulp
ret
out
loope
divl
cmp
cli
xor
cmp
aam
aad
clc
rol
testb
adc
add
jmp
aad
ret
int
fistpl
xor
fiaddl
jle
fsubrp
xchg
xchg
loopne
shl
cmc
cmp
out
hlt
icebp
fst
iret
aam
cmp
sti
mov
enter
xchg
in
iret
out
divl
into
stc
leave
ret
rcl
in
ss
aas
aam
clc
enter
lret
jmp
mov
loop
ljmp
xor
fadd
xchg
xchg
xchg
loope
in
enter
rolb
test
clc
aad
iret
fcomi
rcr
out
jecxz
ret
cmc
cmc
ljmp
jmp
out
xor
enter
fdivp
out
test
shl
jmp
std
jmp
out
aad
sti
std
cmp
cmp
icebp
cmp
fld
in
enter
into
xchg
loop
in
mov
into
aad
std
ss
jecxz
fiadds
lock
repnz
xchg
das
xor
stc
cs
enter
clc
in
ret
aas
std
ds
ret
mov
lock
filds
out
cmp
xlat
lock
fstpt
aam
xchg
in
jmp
lret
addl
aam
fsubr
out
shr
sti
into
cmp
fst
cmp
test
mov
xchg
jecxz
jmp
lret
shl
clc
lock
ds
mov
in
mul
int3
fsubr
cmp
ds
sar
incb
xlat
ret
leave
fsub
out
in
icebp
addb
shl
jmp
neg
out
sti
rcl
mov
out
cld
leave
fisttpll
loop
lret
cmp
sti
lret
in
cmc
cld
repnz
cmp
cli
in
rolb
das
vcvtpd2dq
clc
clc
ror
sar
cmp
mov
mov
testl
aad
jecxz
enter
rolb
imul
not
loope
lret
fimuls
repnz
loope
loopne
in
rcl
fmulp
stc
int
cmp
loop
loop
test
test
mov
lea
sub
hlt
aaa
out
rcl
shr
shr
loopne
cmp
out
cmc
ret
std
fcmovnu
mov
std
mov
jmp
out
out
das
lock
jmp
in
adc
test
fsub
aad
scas
xlat
xor
xor
sub
mov
mov
jmp
rcl
rcr
aam
fstp
lods
pushf
inc
outsb
jne
sub
mov
jg
fiaddl
jle
fsubp
xchg
enter
in
loopne
loope
into
jmp
aad
fst
fiaddl
roll
incb
xchg
xor
xor
icebp
fcmovbe
aad
fsubp
iret
loop
hlt
movl
int
std
mov
in
dec
cmp
jecxz
sti
aas
hlt
test
in
lret
out
lret
out
aad
in
in
not
cmp
aam
jmp
std
out
sar
loop
cld
jmp
in
out
and
test
xlat
shr
into
loop
loop
aad
jmp
in
mov
xchg
mov
clc
jmp
xlat
stc
aad
aad
aad
add
in
xchg
out
lock
aaa
clc
cmc
out
divb
repnz
ds
xor
jmp
sbb
add
mov
lea
out
std
div
sub
addb
lock
filds
int
in
iret
shr
enter
xor
cmp
test
dec
fucomip
loop
mov
hlt
repnz
cmp
cmp
in
repz
rcr
rcl
out
fcomp
ret
out
mov
lret
xlat
cmp
cmc
rolb
push
lret
loop
fcompp
fsubp
fsubp
lea
int3
in
fcomip
lock
in
test
mov
test
inc
cli
sti
shl
xchg
fadd
out
iret
ljmp
out
lds
xchg
mov
std
out
lea
int
int
aaa
cli
cmp
ret
aam
or
stc
jmp
ret
lea
shlb
jmp
jmp
cli
aas
sarb
mov
xchg
fmul
nop
fdiv
shl
popl
lock
fdivp
hlt
xor
sti
fcmove
lds
vpsraw
lret
push
iret
xchg
xchg
lret
ror
xor
iret
sarb
rcl
aas
cmp
test
fsubr
incb
sub
int
cmp
cmp
xlat
cmp
cli
rol
rcl
cli
ftst
leave
int3
int3
call
jecxz
ljmp
iret
int
sarb
aam
out
mov
sub
cmp
jmp
sarl
rol
js
pusha
mov
push
in
jle
add
shl
test
in
loopne
out
test
cli
orb
rcr
in
cli
jmp
cmp
testl
out
mov
lret
call
ret
clc
fcmove
loopne
cmp
repnz
in
addb
mov
xchg
add
ret
cmp
test
cmp
ret
repz
call
out
in
test
jecxz
ror
cmc
cmp
aam
int3
xlat
repz
std
cmp
hlt
in
test
std
xchg
xchg
rcl
int
aam
fcompp
sbb
idivb
aad
incl
incl
out
mov
shll
out
cmp
aas
fld
out
leave
shr
in
and
sti
xchg
shr
loope
iret
into
ror
cld
hlt
fdivl
fcmovu
aas
lock
in
fnclex
sti
lret
xchg
nop
and
into
lock
int
fdivr
cmp
out
cmp
fdivp
rcl
mov
loope
fucomip
xchg
iret
repnz
iret
shll
das
cmp
cmp
loopne
sti
sti
cmc
aad
mov
ljmp
xchg
jmp
int
out
out
ljmp
repnz
ret
jmp
in
cld
out
in
mov
iret
ss
sub
idivb
int
test
addb
fmulp
stc
enter
div
int3
iret
ljmp
fdivrs
iret
loope
repnz
std
mov
sti
lds
in
shl
cli
cli
fidivrl
repz
flds
cli
add
mov
in
cli
mov
repnz
rol
out
enter
call
xor
out
shl
les
jmp
ljmp
xor
shr
cmp
sar
int
hlt
icebp
fadds
loope
xchg
call
aam
aam
fcmovne
icebp
repnz
addb
clc
in
xchg
mov
out
jmp
icebp
xlat
aad
lret
xor
out
rcr
cmp
add
fcomi
enter
cld
test
out
test
mov
xor
xor
neg
fxch
aam
loop
test
sti
fsub
jmp
stc
xlat
fsubrp
loopne
out
jmp
lret
std
lock
iret
std
fmuls
xchg
add
add
or
add
cld
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
jmp
fcom
rol
fcom
add
xor
ljmp
jle
iret
in
in
enter
lret
test
lea
jecxz
lock
into
into
ss
aam
shl
ret
shl
in
ljmp
mov
das
icebp
out
cmp
ljmp
fistpll
aad
mov
xchg
jmp
in
imul
xor
neg
icebp
icebp
fnstcw
clc
cmp
jecxz
out
jmp
mov
fiadds
lret
fscale
repz
rcr
fmul
ret
jecxz
ds
repz
xchg
int3
jmp
jecxz
rcl
hlt
out
enter
xlat
sbb
std
test
fsubr
out
iret
loop
leave
sar
cli
repnz
fchs
iret
cld
fninit
repz
test
loop
shl
sub
in
out
div
aam
shr
aaa
repnz
and
repz
mov
int3
fucomi
int3
int3
icebp
out
test
icebp
leave
imull
out
cli
cmp
lret
cmp
not
out
sbb
addb
hlt
or
divl
fcmovb
shl
ror
repnz
fdiv
ljmp
lock
out
aaa
cmp
int3
int
xor
cmc
aam
mov
cli
int
jecxz
xchg
jmp
lret
hlt
cmp
icebp
cmp
jmp
iret
mov
enter
fcmovu
xchg
sub
ss
fnstcw
lret
fdivrp
fadds
mov
jecxz
and
fucomip
jmp
aam
fcmovu
fdivrp
stc
jecxz
mov
fiadds
ss
repnz
aam
out
leave
fdivp
in
loop
ljmp
cli
out
ror
mov
stc
fidivrl
rcl
cmp
lret
inc
fdiv
shr
cmp
mov
mov
xor
rcr
ds
cmp
loop
aas
in
orl
mov
loopne
rol
into
fincstp
jmp
int
ljmp
add
leave
hlt
lret
fst
out
icebp
cld
mov
cmp
out
iret
jmp
lret
clc
rol
rcl
repnz
cld
xlat
xchg
fmul
lret
in
clc
ret
rol
cmp
call
clc
add
jmp
int3
int
loope
sub
push
clc
cmp
jg
fiaddl
jle
cld
jmp
fsubp
les
xor
fdivp
fdivrp
clc
fchs
fmul
mov
ror
sti
hlt
jmp
test
loope
fucomi
testl
in
jecxz
lret
cld
lret
out
cmpb
shl
roll
mov
loope
out
mov
jecxz
rcr
xor
jmp
fstp
clc
cmp
fimull
aad
mov
leave
nop
in
test
repz
xor
rcl
fdivr
jmp
hlt
call
clc
clc
fldl2e
in
mov
divl
call
iret
ret
add
cld
in
enter
std
xchg
in
shll
shl
xor
aad
into
cli
in
stc
movb
sti
xor
call
fxch
into
stc
out
aaa
aad
ror
into
hlt
rol
ljmp
out
mov
aaa
repnz
int
repz
loopne
xchg
nop
test
lret
fiadds
jecxz
aam
cmp
out
int
cmp
add
decl
sti
jmp
repz
xor
aad
xor
leave
fst
jmp
cmc
icebp
rcl
xlat
in
aam
rorb
loopne
ror
aam
cmp
clc
repz
lret
xor
shl
fdivrs
mov
out
out
lock
aaa
imul
hlt
xor
cmp
fdivp
jecxz
call
loop
orl
xor
xor
lret
fcmovb
icebp
xlat
fcmovnbe
loope
in
loopne
cli
fst
call
mov
lret
jmp
cmp
cmp
fld1
xchg
nop
test
bnd
clc
in
lret
divl
shl
lock
or
vcvtpd2dq
orl
iret
jecxz
xor
jecxz
aad
fucomp
adc
jmp
jmp
lret
int3
aaa
repz
sti
enter
loop
aam
stc
test
hlt
in
sti
fcomp
enter
mov
shlb
cmp
jecxz
ffree
hlt
ret
fxch
std
nop
rolb
in
out
add
jmp
enter
fstp
int3
shl
scas
imul
dec
inc
inc
and
jg
fiaddl
jle
lock
cmc
cmp
sar
cli
cld
fadd
rol
leave
fsubr
loope
rclb
out
ret
in
lret
cli
out
faddl
std
xchg
out
ljmp
cmc
cmc
lock
lret
fabs
cmpb
loopne
repnz
cmc
jmp
jmp
out
iret
cmc
out
out
fdivr
ds
iret
ret
jecxz
aad
mov
cld
lock
xchg
jmp
ds
rcr
ret
fiaddl
cld
fcomp
jmp
xor
out
loop
lock
cmp
aaa
int3
cmp
out
out
not
fadd
test
adc
fsub
in
int3
aam
add
xor
out
cli
lds
jmp
int
loope
cmp
ret
repz
testb
mov
lret
mov
ljmp
cmp
and
fldl
fucomip
std
int3
jmp
and
jmp
in
cmp
out
repz
cmc
ret
shr
fdecstp
lret
popl
ret
ret
cmp
call
cmp
imul
fucom
cmp
jmp
out
or
dec
xchg
std
loopne
out
in
iret
fidivrl
ss
ss
fidivrs
test
clc
jecxz
mov
movl
cmp
ljmp
cmp
cld
in
fdivp
fcmovnu
fadds
adcb
das
xor
cmp
jecxz
sub
call
mov
mov
lock
iret
shl
enter
clc
xor
jmp
ret
out
fcomip
hlt
jmp
xchg
lret
rclb
ret
fcmove
in
into
cmp
shl
rol
aas
std
mov
in
mov
jecxz
rcl
imul
cld
out
hlt
fdiv
hlt
fucomp
fsub
xchg
mov
enter
int
ret
rcl
loopne
xor
ret
out
cmp
shl
xchg
aad
lds
fisttps
jecxz
aad
fcmovnu
enter
fsub
testl
in
iret
fildl
out
ror
sar
lret
stc
cmp
out
sar
loopne
loope
addl
testb
add
add
ror
aas
ffree
fcmovnu
out
jmp
sub
in
jg
fiaddl
jle
in
cmp
sti
not
xlat
enter
ds
loope
aas
jmp
test
in
ljmp
repz
leave
hlt
cmp
iret
sbb
adc
xchg
lret
loopne
int3
sarl
int
enter
lret
les
sti
imul
leave
nop
cli
mov
rolb
call
clc
in
stc
hlt
shl
rcl
xchg
ljmp
call
imul
out
fstp
enter
aad
loope
shr
cmc
ret
sti
loop
test
xchg
and
ljmp
cmp
test
xchg
std
stc
std
fdivr
std
or
jmp
xor
xor
lret
lds
cmc
enter
xlat
cmp
ror
faddp
xlat
xchg
jmp
xor
aaa
dec
fcmovnu
in
inc
ret
cli
iret
out
int3
xchg
icebp
xor
int
xor
cli
lock
repz
sti
out
out
call
and
out
test
jmp
shrl
cmp
xor
cmc
fcmovne
lds
test
out
ljmp
cli
xor
out
cld
stc
cli
lret
fiadds
sar
in
loop
mov
ret
xchg
mov
shl
fnstcw
iret
aam
xor
cmp
xor
repz
xlat
clc
decl
xchg
test
jmp
aad
idiv
in
fnstcw
std
into
out
not
xchg
enter
ljmp
loop
cmc
int3
int3
shl
cmp
cld
loop
in
std
cmp
shr
loopne
in
filds
out
cmp
stc
cld
in
cli
loopne
shr
ffree
rolb
sbb
in
enter
div
lds
iret
cld
aaa
cmc
lock
aad
cld
in
in
call
jecxz
jecxz
fdivr
fucom
sub
mov
xor
sti
ljmp
mov
repz
in
mov
enter
bnd
out
out
aam
fcmovne
jecxz
cmp
fstp
cmp
in
mov
ljmp
out
cmp
lock
sarb
sub
lock
test
hlt
mov
fldl
nop
mov
mov
sub
cmp
mov
jbe
jmp
lret
ret
in
call
movsl
xor
lret
jg
fiaddl
jle
into
mov
in
iret
in
lock
out
in
fadd
fsub
sti
in
adc
lret
fsub
jmp
rolb
jmp
call
dec
out
ret
sti
repz
loop
and
mov
in
cmc
int3
call
fcmovnu
lret
cmpl
cmp
sti
movl
jmp
iret
icebp
shl
ss
fcmove
cmp
fadd
idiv
fisttps
sti
fldl
faddp
fld
out
fucomi
lret
icebp
div
out
repnz
test
in
fdivr
xchg
fdivr
sbb
iret
in
jmp
int
cmp
repnz
ds
jmp
stc
xchg
test
loope
shlb
icebp
aaa
xor
lock
aaa
aas
out
ds
ffreep
hlt
fnclex
xchg
idiv
jmp
stc
out
xchg
in
jmp
fadd
vpsadbw
out
stc
iret
out
ffree
testl
clc
jecxz
mov
lret
ret
sti
out
ljmp
aam
lock
cmp
sar
std
jmp
out
xchg
clc
repnz
sub
repnz
lret
cmp
filds
sti
lds
cli
ljmp
divl
xor
leave
ljmp
sbb
fimuls
ljmp
leave
shlb
xor
fmul
cld
fdecstp
ds
fldl2e
jmp
out
xchg
icebp
lret
test
into
repnz
icebp
sti
aaa
filds
les
jmp
sbb
xor
lock
repnz
cmp
ror
roll
xchg
fucomi
stc
enter
icebp
repnz
shl
hlt
call
jmp
xorb
test
and
stc
std
xchg
pause
int3
repnz
repz
xlat
aam
fxch
cmp
ret
aas
enter
lret
xchg
fsubp
call
out
cmc
loop
in
repz
cmp
lret
into
loop
call
in
in
test
xchg
xchg
into
out
aaa
lret
cli
ds
fstpt
fdivp
cld
loop
sti
repnz
jmp
fyl2xp1
ljmp
cld
hlt
std
sti
roll
les
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
jmp
ret
rcl
rol
rorl
cs
ss
fiaddl
jle
into
ret
and
aad
cmp
loope
ret
fadds
fsubr
fucom
or
rcl
repnz
out
repnz
lret
int3
fadds
jecxz
stc
addb
bnd
out
enter
iret
xor
test
cli
orl
cli
into
xchg
iret
in
idivl
sti
ret
fmull
mov
mov
xor
fildl
idivb
out
mov
iret
in
out
aaa
in
icebp
out
test
rcl
inc
cmp
enter
loopne
lret
mov
lret
cmc
iret
fmul
clc
xlat
cmp
xlat
jmp
xlat
loopne
xchg
cli
cld
xchg
loope
lret
shll
int3
sti
cmp
leave
xor
ljmp
addl
into
mov
xor
xor
iret
hlt
sti
cmc
shll
incl
sti
mov
fcmove
xchg
std
repz
xlat
int3
cld
call
aad
loope
fadds
incb
int3
out
lret
lds
repnz
lret
test
sar
enter
enter
mov
mov
mov
loop
sar
hlt
leave
shl
sarb
in
and
jecxz
sti
stc
mov
cli
in
jmp
iret
out
int3
in
jmp
rol
stc
rcr
fsincos
cmc
loope
out
test
in
icebp
in
lock
f2xm1
lret
fcom
repz
repz
fcomi
loop
repz
or
loop
aad
int3
stc
jmp
iret
repz
loop
in
in
cli
fadd
rolb
stc
ret
int3
cmc
xchg
icebp
out
into
aam
xor
aad
jecxz
ret
in
rcl
mov
fcmovne
loopne
cld
mov
out
cmp
int
xlat
lock
in
stc
icebp
cmc
ror
in
rcl
mov
int3
std
cld
loopne
orb
cmc
jmp
lock
jmp
hlt
xor
ljmp
fcomi
loopne
sar
xlat
bnd
jmp
hlt
aad
in
iret
sti
testb
add
fcom
mov
rcr
xlat
sub
popf
daa
xchg
hlt
jg
fiaddl
jle
xlat
imul
lea
mov
aaa
aaa
hlt
ret
out
fcmovu
lret
cmp
fcmovnu
loope
xlat
fiaddl
and
shr
int
repnz
fcmovbe
in
icebp
hlt
out
hlt
ror
out
fiadds
clc
xor
in
cli
clc
cmp
cmp
cmc
rcl
icebp
cmc
aam
fsubp
enter
out
fdivr
test
jmp
xor
out
ljmp
xchg
fdivr
test
leave
adc
in
jmp
lret
cmp
fmul
lret
in
shl
cmp
neg
xlat
fsubr
vaddsubps
rcll
cmp
cmc
cmp
call
cmpl
xlat
jecxz
mov
out
jmp
cmpl
enter
stc
lret
loop
cmp
cmp
rolb
std
fisttps
aad
das
ret
ret
sarb
out
aaa
cmp
rcr
in
sti
loope
int3
dec
jmp
mov
out
ret
in
int
ss
jmp
cmp
cmc
aam
mov
neg
out
mov
test
xchg
sub
xor
fsubr
shl
fistpll
repnz
clc
ret
fimull
sub
xchg
ret
xor
call
fcmove
fmul
ds
ret
filds
xchg
lock
jmp
ds
repnz
fstpt
xor
leave
ljmp
fdivp
int
jmp
lock
xlat
cmp
icebp
int
cmc
lock
lea
hlt
mov
xor
icebp
xor
out
cmp
ljmp
div
loopne
lret
icebp
orl
xor
jmp
xlat
cmp
out
fcmovb
clc
ror
std
mul
or
out
int3
movl
cmp
fcomp
mov
out
sbb
fdivrp
rolb
jecxz
xor
iret
fcmovbe
repz
shl
cli
ret
fiadds
xlat
cld
shl
xchg
or
xor
ss
out
xlat
cmp
stc
call
iret
int
cmp
fcomip
shlb
clc
out
in
into
int
iret
cli
test
in
xor
jmp
lret
xlat
aas
rcr
int
in
push
repz
mov
jg
fiaddl
jle
rorb
fxch
fsub
int3
cld
lock
lock
out
aam
cmp
ret
cmp
decl
out
cmc
icebp
xor
out
sarb
cmp
repz
in
test
test
addl
in
lret
shl
out
stc
cli
repnz
mov
aam
mov
int
jecxz
out
ret
rol
ljmp
fdivrl
stc
ds
ljmp
orl
cmp
leave
repz
rol
cmp
mov
xchg
in
cmc
divl
sti
repz
fiaddl
add
std
leave
fsubp
loop
test
mov
xor
hlt
repz
int
cmp
xor
loop
out
std
in
mov
test
xchg
ror
in
clc
out
in
fidivrl
cli
cmp
fadd
clc
in
shl
stc
call
in
mov
in
into
sub
xor
xor
sar
ret
ret
aad
shr
fisttpl
loop
xchg
aas
into
fsub
div
fadd
sarb
shr
addb
out
cld
aad
or
in
ljmp
xor
aad
cmp
int
shl
sti
mov
enter
int
fsubp
test
jmp
dec
ljmp
ds
aam
aas
iret
add
in
out
int3
out
xchg
xchg
mov
nop
shlb
int3
rol
in
fstp
fistpll
xlat
and
neg
cld
call
fstl
rcl
aad
icebp
ss
aad
aad
lret
call
in
xchg
sti
and
ret
ljmp
loope
lock
xor
lret
ss
jmp
test
mov
in
xchg
sbb
in
nop
loope
in
out
leave
leave
lret
fld
roll
ret
xchg
lret
decb
repnz
ror
in
shl
ret
repnz
out
fadd
out
in
jmp
in
cli
hlt
jmp
xor
stc
jecxz
sbb
cmpb
xlat
aam
fcomp
in
iret
mov
iret
into
in
hlt
lret
cli
cld
loop
shr
test
je
add
lret
fst
mov
addr16
sbbl
jle
add
cmp
ret
jmp
int3
out
mov
out
loope
jmp
lret
cli
sar
sti
test
lret
fadd
mov
xchg
xor
lret
loopne
out
repnz
imul
in
test
ds
enter
out
into
int3
aaa
in
aaa
cmc
iret
out
fcmovu
lret
rcl
rcl
loope
test
fsubr
jecxz
ljmp
shr
in
fcmovbe
fnstcw
xlat
rcl
ret
sbb
icebp
iret
jmp
lret
xor
fucomp
out
ss
out
cli
stc
lret
int3
enter
nop
call
xor
cli
shlb
adc
stc
fcmovu
iret
cmc
rol
in
out
lea
fsubrp
clc
iret
in
cmp
hlt
cmp
sar
fdivl
rcl
loope
fcomi
in
jecxz
in
fiadds
in
loope
fdivrs
aam
clc
jmp
ds
std
cmp
out
ret
cld
out
out
iret
sub
div
repnz
enter
clc
int
cli
sbb
and
stc
repz
in
lret
ret
in
fdecstp
jmp
rcl
roll
in
test
out
call
ss
lret
idiv
cmp
in
icebp
fcmovbe
addb
mov
iret
shl
decb
xor
iret
repz
ss
ljmp
cmc
aam
mov
xchg
xchg
into
rcr
out
ljmp
cli
sar
aas
aam
cmc
jmp
fcmovnb
in
adcb
ljmp
aaa
jecxz
incb
call
fcmovne
ljmp
xor
shr
ss
leave
loope
fdivrp
jecxz
jecxz
cld
mov
call
sub
into
fnstsw
aam
int3
fcmovne
lock
sti
rol
xchg
cli
stc
lret
ljmp
ret
cmp
fucomi
cmp
in
cmc
cmc
sar
neg
cli
cmc
mov
fadd
cli
xchg
out
ljmp
iret
in
fcmovb
xorb
xor
in
xlat
out
out
mov
out
ror
iret
shl
xor
xor
xor
call
in
mov
mov
mov
mov
xor
add
jmp
aam
ret
aam
push
or
add
fiaddl
jle
idiv
xlat
aam
sti
rolb
clc
jmp
shl
loop
call
in
in
faddp
sti
lret
aas
cmp
cmp
cli
mov
ljmp
sub
cli
jmp
cmp
rcr
loop
icebp
loop
cmc
test
xlat
sti
jecxz
xchg
fst
nop
fcoml
out
ret
shr
xor
loope
sub
fldl
out
nop
xchg
fcomip
xor
loop
jmp
rcl
fabs
out
jmp
aam
out
fildl
fldl
aaa
call
cli
push
cmc
loopne
fmul
fadd
jecxz
fdivp
lret
ljmp
in
addb
ss
cmc
fdivr
loopne
repz
cmp
ror
aad
call
mov
mov
xor
cld
fsincos
ljmp
xchg
xlat
call
loop
decl
xor
enter
iret
sarb
cmp
std
xlat
out
xchg
in
fsubp
jmp
out
xor
fcom
sti
cmp
jmp
bnd
aad
fcmovb
lret
in
fmul
int
repnz
iret
hlt
out
fsubr
in
mov
fxch
lock
out
aaa
fildl
lret
ljmp
jmp
out
fcmovnu
repz
shr
not
xlat
xchg
mov
mov
icebp
xor
shl
ljmp
cmp
cmc
ds
in
cli
jmp
test
fcmovnu
call
xlat
or
test
idiv
int
fistl
xorl
cmp
sti
loop
stc
and
cmp
xchg
ljmp
popl
xor
stc
loope
cmp
aam
ret
mov
mov
int
lret
xchg
fucomip
call
leave
fcomip
loopne
inc
add
fildl
incl
rcl
in
out
lock
fnstcw
xlat
lret
fsub
sti
test
lret
ljmp
xor
idiv
clc
ror
fsub
std
sar
sti
out
repnz
in
hlt
testl
mov
xor
into
mov
mov
mov
jmp
lret
ret
fcmovu
fucomi
pop
test
jae
sbb
fiaddl
jle
ss
fdivrl
fucomi
fsin
fnstcw
fdivrp
inc
loop
lret
shl
test
aad
aad
cld
xor
stc
leave
ljmp
ret
call
rorl
xchg
aaa
int
out
in
ljmp
rcr
loopne
shl
cmp
mov
rorb
das
xor
out
das
in
aas
ljmp
out
loop
fadd
call
lret
lea
jmp
test
int3
aad
cmp
aas
fld1
ret
lret
test
enter
ror
aam
in
cld
in
aad
cmpb
stc
not
out
mov
in
jmp
out
das
shlb
xor
ss
std
icebp
cmp
inc
in
aad
cmc
adc
enter
in
cli
test
icebp
out
in
sarb
icebp
repnz
repnz
loop
call
out
adc
test
fnstsw
in
loop
shl
loope,pt
or
in
rcl
dec
mov
stc
sar
popl
not
enter
cmc
call
loopne
out
test
hlt
aam
in
xchg
out
clc
lret
mul
les
cmc
clc
clc
jmp
lret
out
cmp
shl
fucomp
leave
xchg
aad
aam
lds
shl
stc
fucompp
out
lock
aaa
not
out
clc
jmp
out
jmp
int3
fmulp
sti
aam
in
mov
cld
idivl
repnz
sar
in
xlat
ret
movb
xlat
out
clc
lock
shl
in
in
lret
cmc
icebp
sti
int
aad
adc
hlt
fdivrp
xlat
orb
iret
ljmp
loopne
fcmovnu
shr
xlat
shl
aas
test
xchg
test
icebp
out
mov
in
xor
sti
aas
xlat
into
shr
adc
and
sub
ljmp
xor
faddl
jecxz
lret
inc
loope
xchg
call
lret
shlb
into
cmp
xlat
int
or
test
fisttps
aad
xchg
cli
xchg
in
call
hlt
lock
sarb
xor
enter
stc
clc
cmp
repz
enter
incl
repnz
mov
mov
jmp
leave
aas
ret
vpcmpeqw
push
cwtl
mov
jle
add
out
into
cmc
fnstcw
lock
loopne
flds
int3
out
in
ret
jmp
hlt
int3
in
out
lock
int3
jmp
and
out
out
ret
out
ror
jecxz
xchg
call
cli
enter
xlat
clc
cmp
ret
fucompp
test
xlat
or
in
rclb
iret
shr
cmp
out
sarl
lock
int
clc
rolb
xchg
test
xchg
sti
xchg
repz
enter
sarb
lret
test
xchg
std
jecxz
out
movb
lock
out
ljmp
lret
repnz
incl
rcr
loopne
in
loopne
lret
xor
cli
xor
fucomip
into
icebp
fdivr
ss
std
mov
fsubr
ffreep
int3
fiaddl
fsqrt
shr
out
rcr
out
cld
out
sti
cli
fpatan
repz
fisttpll
call
xchg
shr
divl
out
cmp
fucompp
fnstsw
rol
rolb
out
int3
icebp
sti
fcmovnu
call
jmp
clc
lret
cmp
in
rolb
or
addb
loopne
rcr
rcl
int
shl
ret
out
test
out
mov
out
enter
in
std
cmp
cmp
fadd
aad
in
loopne
fimuls
ror
call
ljmp
aas
leave
incl
int
loope
in
repnz
out
rcl
rcr
cmp
aaa
aam
fsub
idivb
testb
xchg
out
mov
hlt
in
call
stc
ss
clc
aas
jecxz
cmp
test
in
in
fildl
fisttpll
not
fcom
lds
cmp
leave
stc
ret
and
out
out
fcmovnb
and
mov
aad
icebp
cli
lds
shr
enter
aam
call
mov
fxch
xchg
repz
call
enter
shr
iret
rol
aas
test
call
enter
nop
into
int3
jecxz
std
aam
hlt
into
cmp
roll
ret
jmp
clc
jmp
int3
ret
lret
ret
int
int3
int
adc
imul
add
xor
shr
iret
shl
repnz
cmp
in
idivl
out
test
cli
std
call
imul
in
addb
loope
jmp
cmp
fsincos
loopne
xlat
test
jecxz
out
call
jmp
out
jecxz
cmp
sub
xor
std
into
xlat
out
incb
clc
call
into
lds
int3
xor
int3
les
cli
orl
xchg
fucomp
xchg
loope
xlat
idivl
into
cmp
cld
repz
repz
cmpb
xlat
stc
lds
xchg
bnd
iret
sub
call
clc
int
int
sar
test
rcr
lret
ljmp
in
in
leave
int
repnz
out
repz
clc
into
iret
xchg
cmc
repnz
xrelease
int3
iret
cmp
sbb
jmp
mul
ljmp
stc
fsubrp
out
xchg
clc
rcr
out
xor
das
cmp
sti
not
aad
xlat
aam
rol
jmp
in
loopne
jmp
xchg
int3
xor
hlt
in
cmp
cmp
cmp
xlat
cld
sti
mov
fsubr
xchg
mov
mul
enter
cmp
xlat
jecxz
clc
ret
hlt
test
hlt
cmp
mov
nop
hlt
into
not
jmp
hlt
lock
roll
leave
in
jmp
stc
in
iret
sub
fyl2x
rcr
std
icebp
cmp
fcmovb
clc
sbb
out
in
cld
test
loopne
test
repnz
rol
ss
in
icebp
clc
fiadds
fstpt
leave
test
mul
fucomip
in
addl
xor
std
lret
add
fadd
mov
in
xchg
xchg
mov
rol
in
fucomi
cmp
loop
lock
out
xchg
aad
stc
cmc
int
sti
lret
out
out
loop
aaa
lock
imul
fcmovnu
sti
ftst
fcmove
rcl
jmp
mov
incb
clc
lock
lock
jmp
dec
out
out
shl
xlat
call
jmp
jmp
xchg
lock
sub
repnz
xor
cmp
in
cli
idiv
faddp
sti
test
jge
mov
jmp
ror
aas
roll
ljmp
test
fiaddl
jle
fstl
out
xchg
out
xor
xlat
out
cmp
icebp
cmp
loope
std
movl
jmp
jecxz
sarl
enter
out
fcmovnbe
repnz
cli
xor
mov
sbb
rcll
ret
in
cmp
rcl
fldl
test
stc
fildl
xlat
jmp
test
ljmp
aaa
test
into
cmc
lret
loopne
stc
ss
ret
mov
mov
call
mov
loope
jecxz
vmovq
cmp
cli
rcr
adc
cli
call
icebp
xchg
and
sub
jecxz
fsubr
stc
loope
loop
fcomp
into
sti
addl
nop
in
xchg
jecxz
mov
hlt
call
cli
cmc
lret
test
iret
call
std
out
int
xchg
or
vmaskmovdqu
in
cmp
lock
cli
repz
sar
fimull
test
in
into
stc
rol
neg
aad
lock
cli
in
lret
in
sub
xchg
xor
test
loopne
sti
out
jmp
aas
aaa
rcr
idivl
xchg
test
fdivr
mov
test
jmp
xor
lock
lret
ret
aam
call
fcom
ljmp
xchg
div
xor
ret
fnstenv
idiv
cmc
aam
repnz
xlat
rol
mov
loopne
orl
sub
out
out
sbb
out
icebp
mov
test
jmp
jecxz
int3
addb
sti
int3
faddp
stc
sti
out
rcr
testl
lea
or
xor
fdivl
idivl
aam
loop
iret
in
xchg
jmp
out
xchg
test
out
in
les
ret
cmp
cld
lret
shr
in
xlat
sar
lock
xchg
mov
out
mov
lret
lret
xor
les
in
fcmovu
aas
cmp
cmp
cmpb
testb
jmp
addl
xor
out
out
rcl
ds
out
cld
fadds
mov
mov
mov
lret
cs
iret
imul
cmc
clc
add
call
xchg
jb
add
call
add
into
aam
fmul
dec
cmp
ja
xchg
fiaddl
jle
in
fiadds
sar
icebp
out
sub
in
out
xor
lret
neg
fadd
leave
fadds
lock
into
out
idiv
fsin
shl
ret
cmc
fst
in
cmc
fiaddl
decl
jecxz
int3
jmp
aad
xor
cmc
fdivrl
mul
les
mul
mov
shr
mov
loop
or
stc
divl
call
icebp
cmp
cmp
aas
mov
leave
les
in
std
in
in
hlt
sti
ljmp
ljmp
mov
mov
jmp
xchg
adc
cmp
aad
loopne
rolb
out
sti
adc
aam
addl
mov
out
shlb
in
aaa
int
and
into
ret
loop
loope
vpmulhuw
and
in
xor
out
repz
out
lret
loop
in
xor
fldl
jmp
out
xor
cli
cmp
stc
ds
out
in
in
ret
fiaddl
ljmp
mov
clc
enter
xlat
fdivrl
out
cmp
rcl
fcmovbe
cmc
test
fcmovu
fucomip
in
lret
sub
xchg
repnz
clc
xor
xor
fistpll
cmp
ror
fst
out
jmp
mov
lret
sti
mov
repz
ljmp
jmp
cmp
sarl
fcomp
xchg
lret
imul
loopne
int3
orb
cmp
jmp
lret
adc
cmp
jecxz
in
in
mov
rcl
xor
ret
stc
shr
out
fstp
fcomip
ret
stc
test
mov
fdivrp
sbb
dec
fistpll
cmc
clc
aaa
int
out
ljmp
repz
jecxz
in
mul
lret
fisttpl
icebp
fcmovu
icebp
icebp
sar
shr
cmp
fdiv
fmul
icebp
repz
mov
cmc
aad
loopne
cli
lret
jecxz
xor
in
repz
ret
test
in
lret
ljmp
out
lds
fsubr
iret
aam
fmulp
aad
jmp
sti
out
mov
loop
xor
ret
leave
ds
shl
clc
out
fcmovnbe
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
jmp
lret
enter
int3
rorb
outsl
dec
mov
fiaddl
jle
hlt
lock
test
cld
loop
iret
xchg
loopne
int
or
cmc
lock
shlb
clc
into
aas
aas
clc
test
xchg
addl
lret
nop
in
call
lret
into
fiaddl
not
xlat
stc
xchg
clc
leave
fmul
mov
orb
clc
iret
cmpl
in
test
in
xchg
mov
out
jmp
cmp
in
lret
cli
idiv
clc
repz
call
std
shl
cmp
call
sar
sti
fucom
lock
enter
loop
fcmovbe
test
lret
in
xlat
fmul
out
repz
jmp
cmp
repz
adc
cmc
testb
mov
addl
out
lock
fdivrl
stc
fnclex
rcr
xlat
rol
mov
loope
test
fcmove
fisttpll
iret
fxch
das
stc
sti
into
in
fdivp
in
fdivr
test
repz
stc
test
cmc
repz
leave
fsubr
rcr
iret
lret
xor
fstpt
iret
sti
cmp
cmc
xchg
fxch
sub
mov
iret
loope
clc
cli
cld
repnz
aad
cmp
rolb
fmul
ret
out
loopne
icebp
into
sub
jmp
clc
hlt
ljmp
stc
cmp
cli
std
loop
cmp
fmull
rcl
leave
shl
int
icebp
fsubp
fcmovu
loopne
fcmovnb
std
loopne
out
lea
cli
shr
clc
xlat
in
int
std
std
icebp
loope
aad
aam
rorb
ror
lret
xlat
out
xlat
leave
cmp
out
sarl
fadds
fcmovnu
jmp
iret
fisttpl
shr
int3
out
aam
fcmovnbe
lock
shl
cmp
out
test
mov
lock
xchg
in
out
into
sti
in
lock
aam
cmp
cmp
leave
test
in
into
xchg
loopne
xor
aad
int
in
cmp
divb
lds
fsubr
fsubp
lock
ljmp
jmp
aaa
jmp
fcmovbe
aam
movb
xchg
xchg
addl
xlat
aam
cmp
icebp
lret
roll
in
jmp
ror
rcl
stos
sub
insl
cld
inc
int
sub
jle
into
ret
aam
aas
fcmovb
std
xchg
incl
rcl
fstpt
leave
sti
cmp
clc
xlat
in
cmp
stc
test
jecxz
xchg
out
in
aad
xor
out
rcr
stc
clc
aaa
sti
shl
sar
fisttpl
call
aaa
das
xor
cmp
into
in
ror
out
sti
loope
xchg
vpavgw
call
fcoml
shl
repz
into
aam
jmp
into
jecxz
repnz
cmc
out
xchg
mov
leave
xchg
mov
in
cmp
int
repz
in
cmp
aam
orb
ljmp
jmp
into
aam
loop
fcmovnu
filds
mov
call
mov
rcl
ljmp
roll
sti
call
leave
fcmovne
into
repnz
mov
rol
out
clc
aaa
cmc
int3
in
ljmp
test
repz
fiadds
iret
aad
stc
ret
out
fxch
aas
cmp
in
shl
loopne
aam
in
stc
jmp
std
out
hlt
xchg
cs
repz
clc
cld
ljmp
loope
ljmp
xchg
ljmp
fsubr
fxch
cmp
loope
clc
shl
fldl
xchg
ror
cld
xchg
in
int
in
ss
in
xor
aaa
iret
repz
aas
fcmovbe
repz
aam
frndint
iret
int3
shl
int3
nop
loopne
int3
leave
ror
out
sar
xlat
xor
rolb
in
addl
xchg
test
in
clc
int
cmp
idiv
out
icebp
sub
aad
fisttpl
in
repz
icebp
das
into
call
xlat
icebp
ffree
std
cli
aam
sti
repnz
in
lea
xchg
cmc
in
cmp
cmp
neg
fcomp
aam
aaa
ror
in
aad
fsub
sti
enter
xchg
loope
out
shll
xor
out
sti
enter
cmp
ds
aas
enter
leave
nop
nop
in
hlt
jecxz
aaa
sarb
iret
cmp
cli
int
fsubp
rol
call
neg
std
lret
in
fsubr
xchg
aad
aam
rcr
rcl
aam
mov
mov
mov
xor
add
jmp
aam
lret
rcr
scas
cld
cmp
xchg
jle
lock
stc
in
out
mov
inc
fdivr
out
ljmp
in
cmc
int
sar
out
rcr
test
sti
adc
fdivrp
lock
xchg
jecxz
xor
xor
leave
out
jmp
loopne
idiv
cli
and
xchg
fucomp
mov
test
shl
out
lret
fdivrs
neg
xorb
test
neg
out
in
out
in
mov
loopne
rcl
jmp
jmp
leave
lret
std
in
in
xchg
mov
jmp
test
into
das
out
jmp
fcmove
rcr
out
shlb
in
ret
test
in
orb
ret
hlt
stc
clc
lret
cmp
clc
into
fistpll
aas
aaa
cld
in
xchg
xchg
ret
clc
lock
cli
icebp
lret
call
in
rol
cmp
idiv
sti
push
fabs
hlt
fiaddl
call
mov
out
repnz
out
enter
jmp
cld
out
clc
xlat
xchg
in
fimull
int3
orl
sti
leave
in
dec
loop
lock
cli
mov
cld
fcmovnu
sar
xchg
lret
in
out
fcom
in
idiv
leave
jmp
mul
test
hlt
test
jmp
jmp
test
fld
sarb
fucomip
lret
fcmovnb
ds
loopne
shl
loop
leave
fcmovnu
addl
sub
out
in
hlt
aaa
clc
loope
out
roll
lock
loop
out
aad
aad
int
fcmovnu
clc
int
icebp
testl
out
jmp
mov
repz
fcmovbe
stc
repz
out
clc
lock
cmc
test
fucomip
in
rolb
fcmovne
jmp
lock
clc
rolb
int3
clc
int3
addb
xor
aaa
jmp
hlt
leave
hlt
iret
int
lock
sti
test
mov
faddl
int3
enter
cmc
hlt
stc
out
fidivs
int
out
enter
jmp
sub
rcl
xor
iret
in
fnsave
shr
stc
in
cmc
sti
stc
xchg
lret
lea
int
xor
jge
xor
sub
mov
mov
jmp
ret
enter
int
leave
mov
out
stos
lea
jg
fiaddl
jle
leave
cmp
fcmovnu
loope
iret
shr
cmc
sbb
cmp
int
cld
ror
loop
ret
icebp
hlt
rol
in
aas
repz
aas
icebp
ds
out
fld
ljmp
fstl
fdiv
ljmp
ret
sar
out
hlt
loopne
in
lret
decb
ret
out
enter
lret
fistpll
ds
cmc
cmp
xchg
int
loop
aam
lock
jmp
jmp
in
cmp
xchg
ret
in
call
in
icebp
aas
stc
int3
lock
repz
cld
ret
fdiv
clc
mov
sti
sti
test
test
mov
xor
call
repz
filds
loopne
jmp
fiadds
call
in
cld
loop
sbb
aad
loopne
cld
ret
call
loopne
aaa
in
divl
xor
cmp
call
idiv
fildl
in
test
jecxz
mov
in
cmc
ss
loop
lock
out
shl
lds
dec
out
xchg
repz
test
cmp
cld
fdecstp
cmc
mov
enter
and
rcl
mov
leave
lret
lret
mul
hlt
iret
ror
inc
add
out
xchg
ljmp
aad
lock
cmp
fcmovnbe
fnstsw
fxch
fsubrp
and
test
ffree
xchg
fcomip
sub
lret
std
call
shl
hlt
iret
xor
leave
repz
fimuls
xor
sub
out
lret
cli
std
xor
sti
int3
mov
out
in
sub
jecxz
cmp
aam
fmul
xor
out
jmp
neg
jecxz
ffree
ret
out
in
out
rclb
out
aad
out
cld
idiv
icebp
loope,pt
sti
mov
shl
stc
std
jmp
fmull
stc
cmc
std
int
sarb
repz
sti
xchg
fucomi
faddl
shrl
fxch
fcomp
cli
leave
cmc
cld
lret
ret
test
xlat
mov
shl
cld
mov
jmp
enter
fcmovne
fst
or
pop
push
xchg
jg
fiaddl
jle
jecxz
jmp
out
into
neg
cmp
rcr
mov
not
fdivr
xlat
int3
mov
xchg
icebp
shl
fsub
lret
in
repz
sti
clc
iret
fmuls
lret
leave
mov
lret
xor
enter
repz
cli
iret
pushl
loop
loope
cld
cmc
loope
shl
fmull
or
cmc
out
ret
repnz
sti
xlat
cmc
cmp
icebp
cmp
ret
mov
stc
testb
jecxz
repz
lret
cmc
out
sar
repnz
in
loope
xchg
mov
xlat
sti
loopne
mov
loope
shr
cmc
cmp
xlat
not
clc
ret
adc
cmp
sti
test
mov
sti
out
leave
fucomp
loop
clc
loope
jmp
aas
lret
cmp
lret
test
cld
mov
sar
mov
jecxz
xor
aad
xor
loope
lock
fildl
orl
aad
in
jmp
divb
cmp
out
rcl
ljmp
loop
ffreep
test
loope
std
fiaddl
in
iret
cmc
out
std
xor
loop
iret
aam
xlat
enter
test
into
fsqrt
orl
out
int
call
fldz
clc
les
fisttpll
leave
loopne
shl
aaa
lret
out
div
iret
cld
fdivrp
rcr
filds
hlt
in
xchg
sti
lret
lds
repz
ljmp
loope
clc
les
ret
sub
loop
xchg
out
and
ret
in
std
stc
aaa
xorb
in
cmp
fcmovnbe
aam
sbb
mov
jmp
out
xor
cmc
jmp
stc
shr
jmp
ret
hlt
repz
mov
enter
nop
int
cmc
cmp
xor
stc
call
clc
rol
sar
sbb
mov
int3
lock
xor
stc
xor
cmp
in
out
into
testl
movb
enter
xor
jmp
aad
cli
call
jmp
in
fists
into
int
cld
hlt
ror
cld
iret
lock
iret
in
mov
popl
scas
sti
mov
xor
sub
jmp
ret
fmul
ret
int
dec
filds
jp
xchg
jg
fiaddl
jle
xor
xchg
xor
ss
out
ljmp
cmc
leave
test
fimull
jecxz
in
icebp
in
xor
sar
cmc
cli
std
roll
cli
in
test
icebp
ret
rcl
xor
cmp
shr
leave
loope
std
shl
xchg
lds
orl
repz
out
cmp
rcl
jmp
in
add
out
fmull
jmp
out
in
ret
clc
ss
xlat
jmp
cmc
lock
loop
cld
xchg
leave
lock
leave
cli
repz
aad
lock
test
mov
xchg
f2xm1
lock
jecxz
int
das
cmc
iret
int
enter
repz
lock
clc
fchs
mov
lret
out
mov
in
fsubp
lret
in
in
fnstcw
ss
lret
int
fprem1
xchg
loop
lret
ficoms
rol
xor
idivb
bnd
aam
fadds
fucomp
flds
xchg
xchg
loop
rcr
lock
out
repz
or
jecxz
addl
xchg
jecxz
neg
div
fdivr
ljmp
not
cli
leave
mov
fld1
iret
mov
lret
int3
call
sarb
leave
loop
sti
aaa
in
repz
ret
test
nop
out
cld
sti
ficoms
rcl
cmc
cmc
int
in
idiv
fbstp
fsubp
idiv
xchg
fld
or
loopne
in
divl
lds
xor
in
aas
sarl
clc
out
out
fimuls
out
icebp
lret
jmp
fmul
idiv
enter
into
cmp
xchg
ret
dec
xchg
leave
out
jmp
cld
in
shl
test
in
lret
test
in
fcmovnbe
cmp
call
nop
test
sar
aam
shl
enter
fdivp
stc
in
icebp
fcos
rol
idiv
fmul
loope
mov
out
loopne
out
repz
out
hlt
cmp
loopne
xor
xor
jmp
sbb
aam
shl
aam
fstpt
loopne
lret
in
roll
fsubr
lea
cmp
jbe
mov
mov
jmp
rcl
into
test
mov
and
dec
in
jbe
jg
fiaddl
jle
in
nop
and
mov
call
cld
fistpll
xor
cmp
adc
out
fmulp
ror
int
int3
xor
cmc
addl
mov
call
out
loope
fcomip
mov
loope
int
sti
cmp
int3
cld
fdivrs
out
int
mov
jmp
int
icebp
lock
in
in
aas
ljmp
std
in
div
in
ret
rolb
jmp
into
jmp
nop
std
int
sar
jmp
out
leave
in
out
div
aaa
into
cmpl
filds
orl
into
icebp
jecxz
cli
repnz
aam
sarl
repnz
fcmovnbe
test
xchg
int3
int3
lock
jmp
int
xor
out
fnstcw
std
test
jecxz
shl
or
std
orl
out
xor
repnz
cld
cmp
cmp
cmp
std
test
cld
enter
adc
out
enter
aad
in
in
shl
cmpl
jecxz
mov
cld
in
out
lret
mov
loopne
out
cmc
cld
icebp
fidivrs
rcl
cmp
mov
fmull
shl
xor
int3
into
lret
ss
ret
hlt
ret
cmp
out
fcmovu
xchg
in
in
jecxz
jmp
bnd
ss
shl
clc
into
loope,pt
out
cmp
call
aam
les
fptan
das
xor
cmp
cld
mov
rcl
aas
stc
repz
xor
cmp
std
loop
cmc
xor
ljmp
ret
in
aad
lret
cli
cmp
int3
adc
rcr
iret
out
ret
call
ffreep
loope
mov
xor
shr
fucomi
das
cmp
repz
out
repz
mov
fsubp
jmp
out
in
cmp
cmp
sbb
xor
cmp
neg
orl
lock
lret
xlat
not
xlat
in
out
rcl
test
clc
aad
in
test
fisttpl
ljmp
xlat
iret
hlt
jmp
aas
lock
xor
add
imul
mov
xor
jmp
rcl
leave
int
aad
or
out
sbb
lcall
ret
fldl
jecxz
in
in
xor
cmp
xor
in
xor
repz
rol
orb
test
in
repnz
fdiv
out
in
cli
das
ror
rcr
fcmovne
flds
ret
testl
movl
jmp
test
ret
mov
lret
les
xchg
cmc
into
neg
sti
lret
repnz
adc
cmp
ljmp
sub
ljmp
sar
fidivl
aas
and
in
ret
aam
out
fsub
icebp
nop
xchg
int
into
xor
cmp
shl
icebp
cmp
stc
into
loope
icebp
and
jecxz
cli
enter
sti
fsubp
fimuls
shl
ror
fcmovnu
jmp
lock
test
sbb
xor
lret
aaa
fcmovb
rcl
addb
in
out
shl
test
fsubr
lret
leave
aam
loop
ret
aad
addl
fimull
enter
ror
call
lret
roll
flds
cmp
in
lock
jmp
call
fildl
stc
cmc
in
mov
aam
enter
loopne
rclb
cmp
cld
jmp
cmp
in
repz
out
ljmp
sar
xor
in
ljmp
cmc
cli
std
cmp
stc
std
std
clc
jmp
nop
and
in
call
ret
cmp
in
shl
sarb
int
into
loopne,pt
repz
test
mov
xchg
lock
fimuls
neg
cmp
hlt
int3
leave
rcr
ret
sub
fstp
mov
cld
and
in
in
xchg
fdivp
int
fcmovne
int3
int3
fcmove
iret
std
fidivrl
sub
cld
test
ret
test
xchg
lock
xor
xor
cmp
stc
fucomi
lret
ljmp
ljmp
xchg
call
xor
fmul
cs
fsin
sar
cmc
loop
ds
fsubr
neg
jmp
fmul
lret
rcl
into
mov
shl
aam
out
hlt
fxch
iret
ror
rolb
mov
lea
mov
mov
jmp
rcl
iret
aad
cmp
loop
sub
jg
fiaddl
jle
aad
sti
ljmp
sti
or
out
mov
loop
aaa
xor
enter
iret
std
jecxz
aad
stc
xchg
lret
loop
orb
int3
sub
int
xor
cmp
cmp
rol
aam
std
mov
repnz
fsubp
xor
aaa
icebp
loopne
loop
aad
not
xlat
lds
fstp
xchg
loopne
std
xchg
in
rol
sub
shl
leave
aaa
sarl
not
aaa
repz
lret
testl
in
stc
lret
cmp
shl
jmp
fcomip
xlat
out
test
in
clc
addb
xlat
ret
test
fstpt
neg
aam
lret
cld
into
fdivrp
push
clc
fcmovu
aaa
lret
jmp
fucomip
test
jmp
mov
roll
cld
rcl
repz
aaa
roll
std
fdiv
cli
aad
mul
int
lret
into
xchg
in
repnz
in
cmp
rcl
int
xor
loope
aam
hlt
cmp
xchg
ljmp
xor
ss
jmp
test
test
roll
lea
out
into
stc
lret
in
in
cmp
aam
test
icebp
in
ret
stc
icebp
out
jmp
repnz
iret
aam
cmp
fidivs
hlt
std
rol
shl
mov
int
fsubrp
mov
into
in
ret
cmc
xor
fcomp
jmp
shl
cli
adc
incb
std
loope
nop
shl
ret
das
out
cld
aad
repnz
rol
ret
lds
aam
sub
call
jmp
fldl2t
cmp
hlt
cmp
icebp
fsubr
std
loopne
aad
mov
xchg
enter
test
jmp
xor
leave
jmp
leave
clc
hlt
aas
stc
cli
addl
out
orb
out
in
cmp
cmp
std
out
faddp
xlat
loope
clc
cld
mov
out
mov
into
fdivr
cmp
cmpl
idiv
clc
rcl
sarl
sti
cli
loopne
std
out
jecxz
in
fcomp
int3
int3
cmp
ds
xor
jmp
iret
ret
rcr
fxch
in
incl
jge
or
jle
jmp
in
aas
mov
in
stc
enter
fcmovne
loopne
sub
cmp
cmp
cmp
and
ror
sarl
and
fcoms
nop
ror
rcl
cmp
enter
into
idiv
ds
hlt
icebp
leave
loope
in
in
in
out
loope
lret
ss
lret
fcmovnu
ljmp
ret
hlt
out
lret
fmul
mov
sub
in
cld
fsubr
aam
stc
faddp
xchg
fcmovnbe
fimuls
mov
fstl
ljmp
cmp
aas
cmp
cld
test
enter
lret
lret
in
in
lea
cli
jmp
ss
idivl
faddl
repz
in
nop
in
out
call
das
xor
ror
fcmovnu
imul
aas
sbb
lock
ret
test
jmp
ror
mov
xchg
xor
xor
clc
ror
idivb
sbb
aad
out
out
stc
adcb
shl
cli
lret
fmul
cmp
out
in
repnz
jmp
adc
xor
cmp
out
shr
fidivl
sar
repnz
fimuls
jmp
shl
jmp
aaa
fdiv
lock
hlt
fld
cli
rorl
xchg
mov
fidivl
cmc
ljmp
leave
call
fnsetpm(287
lea
loope
shl
xor
lret
rolb
in
xlat
cmc
into
out
enter
out
shl
fdivs
lret
cld
cmp
iret
incb
fucomp
mov
sti
or
call
repnz
stc
in
iret
xor
xlat
xor
and
leave
lret
rolb
out
imul
fistpll
int3
aaa
test
enter
mov
or
in
mov
jecxz
bnd
lret
in
out
enter
out
add
ret
xchg
xchg
mov
out
repnz
inc
loop
loope
out
loopne
out
jecxz
dec
int3
sbb
iret
out
out
imul
add
aam
fstp
fcmovnbe
push
cltd
sahf
mov
out
jg
fiaddl
jle
stc
not
lock
mov
sbb
aam
icebp
in
xor
stc
jmp
hlt
stc
hlt
mov
loop
jmp
decl
stc
sti
int
aas
out
int
fmul
xlat
fcmovnbe
filds
movl
in
xor
fidivl
out
int
int
ss
orl
lret
sbb
orl
jmp
xor
sbb
out
adc
xchg
int3
lock
nop
sbb
jmp
das
out
call
repz
imul
in
fcmovnbe
rolb
shl
in
in
ror
out
aam
shl
rcl
lock
shl
call
loope
cli
xchg
fildl
lock
mul
jmp
int
fucomp
fcmovnbe
lds
cmc
fsub
xlat
int
fcmovbe
stc
addb
loop
enter
rcl
fcmovb
fcomip
addl
addb
repnz
hlt
in
repz
aaa
icebp
cli
repnz
fstpt
cmc
in
sbb
enter
int
fsubrp
in
loopne
loope
ret
xor
lret
das
in
div
cmp
in
adc
idiv
loop
cli
icebp
fists
jmp
jmp
aam
ret
call
adc
in
loope
icebp
aam
lock
shlb
lret
cmp
aad
fmulp
cli
sti
loop
ret
out
int
leave
hlt
shr
lock
lret
cmp
enter
aam
repz
filds
std
stc
ficoms
in
in
rcl
enter
in
roll
repnz
int
in
fdivr
xchg
xor
ljmp
cld
ljmp
sti
ljmp
into
xor
fdiv
xor
ss
cmp
fld
stc
clc
rcl
aam
test
ljmp
xor
ljmp
out
mov
loopne
mov
test
out
lock
aad
cmp
clc
shr
int3
aad
sti
test
mov
ret
int3
in
iret
and
ss
sub
jmp
leave
rcr
fcomp
cmc
pop
fildl
cmpsl
cmp
jle
add
enter
shr
cmp
rol
fdiv
loop
out
in
fst
xchg
lret
hlt
fidivs
sarb
loope
in
aad
clc
out
test
mov
iret
in
rol
xlat
clc
idivb
std
lock
test
jmp
fldl
call
in
stc
hlt
in
fdivr
cmp
fndisi(8087
xlat
repnz
test
out
mov
enter
fld
or
hlt
xor
loopne
rol
repz
fnsetpm(287
fmull
cld
mov
xor
in
rol
lret
cmc
shr
ljmp
cmpb
fldl2e
mov
loope
iret
repz
out
cmp
out
xchg
ds
repnz
cmp
lret
repnz
xchg
lock
jmp
out
out
fcmovne
stc
ror
stc
loopne
or
sbb
int
fdivp
xchg
xchg
jecxz
xor
in
repz
lock
loope
std
out
shr
idiv
sbb
mov
cld
lret
decl
ljmp
into
cmp
bnd
idivb
out
fcomi
xchg
repnz
xor
cmc
iret
ror
xor
cmp
cmp
and
shr
sti
fdivr
fimuls
lret
div
stc
std
stc
fdivp
jmp
int
test
enter
in
testb
repz
sub
fld1
divb
cmp
fcmovb
test
fsubp
aad
test
sti
mov
mov
aad
ljmp
ss
aas
cld
cld
cmp
repnz
cli
int3
out
mov
int
lret
repnz
sub
addb
ret
mov
ret
aad
loop
fildl
loope
aam
lret
fsubr
fsub
cmc
aas
xlat
div
fcmove
into
xlat
cmp
cld
nop
addl
repz
call
cmc
loop
out
repnz
cmp
jecxz,pt
cli
jmp
enter
loop
ret
mul
hlt
in
fidivrl
enter
ret
loop
loopne
mov
sti
ljmp
mov
jecxz
in
aaa
frstpm(287
enter
cld
cmp
loopne
out
sbb
fsubr
lret
mov
xchg
add
jmp
rcl
iret
aam
aad
sarl
cmp
sbb
fiaddl
jle
in
lret
out
ljmp
shr
test
loop
leave
jmp
mov
xchg
xlat
xor
not
std
fdiv
ds
clc
repz
int
fcomi
call
xchg
call
decb
lock
test
xchg
test
loop
flds
mov
das
jecxz
hlt
xor
repnz
ds
loopne
out
decl
clc
sti
ljmp
xchg
das
fadd
clc
xor
out
in
cmp
fnstsw
cli
shl
loop
xlat
call
enter
lea
shl
shr
std
cmp
lock
test
addb
in
int
cmc
iret
xor
hlt
xor
into
lret
fildl
cmc
jmp
mov
in
jecxz
icebp
cmc
out
hlt
aad
ret
test
rol
lret
cld
test
out
xor
aam
lret
fdivp
in
rcr
aam
icebp
and
ret
in
mov
out
and
out
shr
sarb
ljmp
fiadds
hlt
cld
out
in
out
leave
jecxz
lret
test
icebp
fdivp
repnz
aas
test
out
mul
std
fldl2t
test
fdiv
loopne
loop
cld
cmp
call
cmp
shl
test
testb
in
test
cli
repz
cmp
fistpll
cmp
ror
mul
aad
fcmovne
mov
jmp
out
call
cmp
cli
out
loop
test
loope
stc
ror
mov
loopne
int
in
cmc
out
in
loop
div
lret
ljmp
ds
lret
cmp
icebp
and
call
xor
xlat
loopne
xor
cmp
std
loopne
addb
xchg
out
fstp
xchg
shl
cs
jmp
lock
cld
shl
shl
enter
cld
int
clc
enter
xor
lock
fsubrp
rcr
aad
addl
loopne
pop
sar
leave
int3
xchg
in
lds
xor
xor
cmp
loopne
shl
adc
shl
sti
sti
std
leave
call
mov
mov
xor
add
jmp
rcl
aad
aad
fstp
aam
xor
jmp
stos
out
test
jle
add
in
loopne
test
xlat
fidivs
xor
aad
fmul
lock
cld
call
repnz
out
into
test
ss
cmp
xor
in
sar
cld
cmc
in
cmp
fcomp
test
cmc
test
leave
out
into
loopne
enter
out
xor
clc
addb
add
fcmovnbe
call
loop
fadd
cmp
xor
aaa
aaa
fmulp
not
repnz
jecxz
icebp
loope
rcll
out
cmp
fdivr
repnz
iret
loopne
in
mov
out
mov
fdiv
out
cmc
ffreep
xor
aam
out
fcom
lock
aam
testb
sub
in
test
mov
aam
out
call
sar
hlt
in
mov
idiv
sti
fisttps
in
ret
out
xor
les
in
sti
cmp
rcr
lret
in
xchg
fcomip
shlb
aaa
stc
fcom
leave
hlt
in
loopne
xlat
sar
test
in
xchg
call
call
lds
cmp
out
enter
clc
mov
idiv
in
repz
ret
call
enter
std
icebp
test
sar
std
fadds
int
filds
out
in
jmp
icebp
ret
cmp
fcomp
shl
rcl
int
out
fdiv
int
cmp
in
fdivp
iret
std
aas
hlt
test
rcr
in
in
cmp
mov
ror
xchg
aas
stc
f2xm1
sub
clc
lret
std
in
cmp
test
mov
fmul
lret
in
mov
int3
xor
stc
xor
out
ljmp
icebp
testb
sti
xor
nop
into
shlb
lock
out
lret
cmp
cmp
loopne
aad
ret
test
inc
adcl
rcl
xlat
cld
ljmp
loop
ret
xlat
lret
sti
fdivrp
roll
xor
fdiv
out
lret
repz
test
idiv
clc
in
xlat
loope
test
lock
in
cmc
in
cli
out
out
cmp
aad
cmc
cmp
cmp
lds
testb
shr
je
add
rol
lret
ror
int
aam
imul
jle
add
fsubr
in
mov
shl
into
das
shl
aad
cmc
cmp
cli
lock
into
out
lock
cmc
mov
jmp
cmc
clc
sub
call
sti
shl
cld
xchg
in
xchg
cs
clc
aam
fcom
iret
jecxz
ds
add
mov
out
aam
call
out
cld
cmp
fcmovbe
std
aam
hlt
fninit
neg
call
fisttps
in
fdivrl
call
jecxz
loop
fld
loope
mov
into
loopne
fldl
enter
xor
cmp
in
out
rol
cmp
xchg
fldl2t
faddl
mov
jmp
not
stc
fcmovnu
out
iret
aam
xchg
jmp
cli
fldl2e
nop
xchg
xchg
lock
xor
iret
fnstcw
ret
in
repz
enter
loopne
push
clc
jecxz
shl
in
in
aaa
fdivrl
ds
aad
rol
jecxz
test
loop
mov
int3
shll
fmul
shl
ss
aas
loop
aas
loopne
cmp
rcr
rcr
jmp
in
icebp
mov
xor
stc
fsubr
rcr
jmp
rcr
inc
ds
sti
leave
mov
mov
ret
clc
ror
out
int
into
fsub
xor
ljmp
std
ror
cmp
stc
in
lret
loopne
ljmp
ret
test
lret
mov
test
xchg
out
cs
xor
repz
ffreep
mov
mov
shl
xor
enter
idiv
cli
jmp
test
loop
inc
in
in
std
mov
rorb
iret
iret
aaa
int
repz
hlt
rcl
ret
xchg
mov
loope
out
icebp
into
xchg
enter
leave
sti
out
into
cmp
xchg
lret
cld
in
out
test
xor
ds
out
out
stc
aam
sti
xchg
in
repnz
xor
shl
sti
out
out
out
ljmp
shl
cmp
jbe
jmp
int
lret
lret
int
mov
pop
repz
jle
orl
lock
out
ret
in
cmp
aaa
cmp
loop
fcmovu
sub
stc
fcmovb
xchg
mov
call
repnz
xor
rcl
xchg
in
idiv
int3
sti
call
icebp
into
int3
loop
out
shlb
fxtract
iret
fnstsw
stc
loope
shl
xor
out
jmp
xchg
xchg
divl
out
repnz
loopne
loop
stc
aas
ret
in
fsin
cmp
mov
shr
in
call
aam
cmp
cmp
in
loope
clc
lock
loope
rcr
iret
into
out
shl
idiv
test
lret
loop
shl
xlat
call
ret
aas
enter
in
addb
cmc
int3
lret
cmp
in
test
out
cli
mov
loope
rolb
fucomi
rcr
int
in
lret
rcl
cmc
fcomip
stc
xchg
testb
rolb
cmp
aad
aas
aas
sar
cmp
fld
mov
mul
testb
adc
hlt
ret
cmp
shr
cmp
into
xor
shl
aas
out
out
enter
popl
lea
divl
cmc
aaa
fxch
rcl
lret
repz
aad
loope
fdivp
loope
leave
lret
out
xchg
xchg
ret
enter
hlt
divl
repz
aas
fcmovb
cmp
xchg
aad
xchg
ror
aam
hlt
call
cmp
addb
xlat
xabort
in
enter
mov
aam
xlat
clc
xlat
int3
ret
sti
shlb
lret
xor
cld
fdivrp
std
sarb
sar
ljmp
mov
or
aam
call
fucomip
iret
in
fdiv
test
in
test
cld
faddl
xor
xor
into
int
cmp
sarb
iret
hlt
push
in
in
add
hlt
les
rcl
xchg
hlt
shl
lock
cmp
aam
cmp
sar
sbb
cmp
hlt
aad
jmp
jmp
xchg
cld
shl
popl
loop
shl
cmp
aam
stc
rol
flds
jecxz
std
out
out
out
in
leave
loop
cmp
ljmp
sbb
add
ror
ror
aad
inc
push
mov
fiaddl
jle
sbb
mov
out
lock
lock
cmp
fnstcw
ffreep
aad
loopne
cmp
fimull
stc
jecxz
rolb
loop
jmp
cmp
cmp
xor
fcmovnu
xchg
fmul
fucomi
add
mov
shl
xchg
loop
ljmp
aas
rcr
cld
fildl
fcmove
xchg
jmp
das
out
in
cmp
hlt
jmp
not
fsubp
aad
fucomp
neg
out
std
int
xchg
ss
test
repnz
repnz
idiv
cmp
fcmovb
mov
rorb
out
jmp
leave
xor
rcl
call
stc
fadds
cmc
fisttpl
out
xchg
imull
jecxz
cmp
clc
ds
cli
aam
cmp
and
add
ljmp
ss
fidivrl
xor
cli
cmp
hlt
cmp
cmpl
inc
aas
ret
stc
cmc
movl
ljmp
sarb
stc
stc
test
in
in
jmp
out
mov
aam
sub
jmp
repz
not
or
in
lret
ljmp
leave
fidivs
in
addb
aam
fisttpl
fcoml
int3
xor
jecxz
out
xlat
idiv
repnz
aad
iret
cmc
call
neg
out
lret
mov
clc
out
fdivl
rol
loop
repnz
out
out
repz
fiadds
loop
xchg
jmp
mov
leave
clc
cmc
aas
xor
ret
out
xchg
sti
clc
out
ror
ret
test
test
aam
icebp
in
icebp
xor
leave
out
cmp
lds
mov
inc
mul
jmp
loop
ljmp
test
jmp
hlt
aam
hlt
add
fdecstp
fyl2x
std
xchg
int
rcr
ret
jmp
in
shl
lret
sarl
cmp
idiv
test
cli
cmp
loopne
stc
mov
mov
test
xor
leave
inc
cld
std
sar
out
std
idiv
cli
fisttpll
fcomip
call
cmp
into
sub
jecxz
leave
ret
push
mov
sub
addl
push
andl
push
addl
push
push
addl
push
call
mov
andl
test
movl
je
andl
lea
push
andl
push
xorl
call
addl
push
addl
call
mov
test
je
movl
mov
jmp
mov
movl
jmp
push
push
push
movl
call
movl
mov
mov
movl
cmp
movl
jne
pushl
push
adcl
push
push
orl
call
inc
movl
cmp
jb
movl
inc
movl
cmp
jb
sbbl
push
call
orl
movl
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
xor
xor
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
sub
sub
movl
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
lea
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
add
lea
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
inc
mov
xor
xor
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
pushl
push
call
cmpl
jb
add
mov
movl
mov
cmp
movl
mov
mov
movl
je
mov
xorl
xor
subl
add
imul
movl
mov
movl
jmp
mov
adc
xor
and
add
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
push
call
cmpl
jb
mov
add
xor
add
add
movzbl
and
mov
orl
mov
xor
mov
adcl
xor
xorl
add
cmp
jne
subl
push
orl
pushl
andl
pushl
call
xorl
mov
notl
mov
mov
negl
mov
mov
or
mov
mov
sub
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
mov
orl
xor
add
jmp
sbb
mov
xor
sbb
lea
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movzwl
xor
lea
mov
mov
neg
mov
add
movl
adc
mov
sbb
movl
or
mov
dec
mov
xor
orl
add
movl
cmp
movl
je
xor
mov
xor
add
sub
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sub
mov
sub
add
movl
mov
cmp
ja
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
je
mov
jmp
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
fmul
ret
ror
fst
repz
mov
mov
push
jg
pop
add
in
cmp
jecxz
lret
fld
cli
in
jecxz
icebp
mov
in
xlat
in
in
aaa
shr
dec
ljmp
mov
addb
in
ljmp
sarb
std
lret
cmp
repz
stc
aam
or
idiv
mov
test
fildl
ret
loop
sti
enter
cmp
clc
ret
cld
in
enter
filds
loopne
xchg
hlt
loopne
lret
jmp
cmp
cli
sti
fcomi
xlat
test
stc
loope
test
cli
fildl
leave
ljmp
xlat
sarl
cmp
sarl
rolb
test
shll
fsubrp
jmp
cmp
out
aas
loopne
les
nop
out
divl
xor
xor
int3
repz
iret
cmp
xchg
fneni(8087
clc
mov
xor
ror
cmp
aaa
repz
clc
lock
xchg
test
in
xchg
lea
shrl
int3
lret
sar
leave
in
lret
rcl
aas
cli
mov
fucom
jecxz
in
addl
leave
cmp
cmc
loope
clc
in
aad
hlt
xchg
fcmovu
icebp
sti
ljmp
in
ds
fadd
clc
clc
fcmovbe
loop
decl
lret
repz
mov
iret
lock
lock
jmp
leave
cmp
ret
sar
sar
cld
add
int
and
lock
lret
xor
out
out
cmp
test
fucom
fadds
in
jecxz
shl
shl
rcr
clc
out
xlat
sarb
cmp
incb
mov
loop
leave
flds
xor
fmul
shl
adc
aam
call
fldl
mov
fucom
cmc
int3
loope
jecxz
leave
jmp
cmp
aaa
cmp
repnz
mov
std
in
aam
shlb
fldlg2
jmp
into
fstp
xlat
or
test
lret
mov
xchg
mov
fdivr
shl
fcomp
out
fucom
into
lds
lds
loopne
repz
repnz
call
idivb
shlb
rolb
fimull
addb
rol
test
ljmp
aad
ret
test
fisttpll
xlat
xor
aad
in
rcr
fsqrt
std
fsubr
in
rol
mov
stc
out
mov
loope
sti
ror
jmp
out
in
repz
lock
ret
repz
mov
cli
fcos
xor
int3
test
ljmp
mov
movl
mov
push
jmp
rcl
leave
leave
fst
fsubrl
std
sub
imul
aaa
inc
mov
jle
add
out
iret
loopne
rolb
stc
mov
fdivrp
stc
test
or
fmul
xor
repnz
loope
fld
bnd
inc
lret
in
xor
jmp
call
faddl
rol
loope
in
fcomip
fdivr
cld
loope
xchg
repnz
rcl
hlt
jmp
fmul
clc
repnz
stc
in
clc
xlat
or
sti
loope
jecxz
shl
shll
imul
jecxz
clc
lock
fchs
fsub
cli
in
call
nop
test
ror
shr
fsub
rcr
ljmp
fucomip
mov
call
icebp
enter
jmp
not
sti
out
lock
ret
fnstcw
aam
enter
ror
ret
cld
ljmp
divl
rcr
test
fnstcw
xchg
loop
shl
xchg
in
lds
in
in
cmp
rcr
cmc
aas
out
stc
lds
cli
test
ret
fisttps
hlt
out
fxch
fidivl
in
int
test
fmuls
out
xchg
out
jmp
into
xor
fsubr
into
cmp
fprem1
aad
cmp
sub
fiadds
shlb
shlb
in
fnstcw
int
shl
cmp
cli
aam
in
into
rolb
xor
out
ret
cmp
cmp
fdiv
ds
aam
aam
call
loopne
out
xchg
mov
cmc
ljmp
aas
cmp
cmp
enter
cmc
loopne
cld
in
icebp
mov
ljmp
test
out
test
icebp
ds
out
xchg
rclb
cli
cmc
xor
aam
call
rolb
flds
jecxz
hlt
xchg
loopne
cmp
imul
fdivrp
lock
jecxz
ffree
cmc
std
cli
clc
out
in
call
fidivl
aad
shl
orl
lret
add
out
out
into
aaa
repnz
std
xor
rcr
cmp
rol
shl
in
lret
fadd
test
sub
vphadddq
out
repz
dec
div
aas
sti
fcomp
fucom
ljmp
xchg
mov
mov
test
into
cmp
xlat
cmp
xlat
fsubp
inc
lret
mov
out
test
mov
shl
idiv
into
in
fcmovnbe
cmp
aaa
test
rcl
call
ljmp
loope
repnz
fmul
stc
loopne
aam
fiadds
lret
xchg
xchg
repnz
mov
fidivrl
add
add
iret
xlat
ffree
fst
loope
sub
hlt
test
movsb
mov
jle
add
iret
jmp
cmp
int
ffreep
ret
ret
loop
jmp
mov
fiaddl
repnz
jmp
cmp
xor
ds
cmp
loope
cmc
cld
fisttpl
icebp
inc
aad
sub
icebp
das
ljmp
loop
repnz
xabort
loopne
int3
loope
movb
lock
int3
xor
neg
sarl
fcmovnb
decb
jmp
out
xchg
xchg
into
fcomi
cli
xor
aas
jecxz
loope
test
loope
clc
mov
ljmp
ret
cli
out
aaa
iret
aam
enter
in
stc
sarl
test
mov
out
jmp
int
int3
shrl
repnz
cmp
in
inc
fcom
jmp
adcb
stc
clc
fcomi
repnz
aam
lret
in
sarb
test
in
int3
in
lret
icebp
repz
jmp
in
cmc
enter
fcmovnbe
sar
icebp
loopne
ror
imul
fmulp
lock
lret
shr
clc
xor
lret
dec
aad
cmc
aam
cmp
xchg
std
out
enter
cld
adc
cmc
fsubr
xor
not
rcl
shr
idivb
out
loope
xchg
lret
xchg
shr
lret
jmp
repnz
ds
sub
ror
ret
loop
leave
loop
addl
enter
cmp
stc
jecxz
test
loope
sbb
jmp
out
shl
out
enter
leave
int3
fcom
into
std
in
loop
out
aas
xor
add
sbb
repz
rcl
fxch
lret
faddl
cli
lds
jmp
lret
aad
iret
fsub
shl
rcl
hlt
test
test
in
in
leave
sti
fsubp
call
iret
fidivl
cmp
cmp
aas
aad
cmp
aam
fcmovnb
adc
cld
fdivp
test
out
xchg
xor
out
neg
aad
in
not
in
rolb
fadd
test
fcmove
leave
ljmp
aam
sti
jmp
ret
test
hlt
enter
in
clc
std
rolb
mov
in
clc
jmp
cli
clc
out
rol
hlt
loopne
call
addl
out
xlat
shrl
int
out
cmp
cmp
std
rol
loopne
jecxz
enter
xchg
jmp
int
aad
iret
xor
in
ljmp
xchg
fucomp
aam
enter
shl
bnd
xor
cs
div
hlt
cmpb
repz
fsub
mov
loope
enter
cmc
int
testl
add
ret
ror
aad
and
out
stos
cmpl
call
clc
ljmp
loop
hlt
jmp
jmp
jecxz
shl
fdivr
out
shlb
int3
sar
clc
out
cmp
cmp
fcomi
mov
cmc
fstpt
fmull
shr
icebp
into
jmp
xlat
into
into
cld
in
lock
ljmp
rcr
stc
mov
call
rcl
xchg
test
jecxz
shl
fcmovbe
stc
in
fst
ds
out
xchg
iret
icebp
shr
cmc
ror
fcmovnbe
fcomp
ror
out
fdivp
ret
cld
and
xchg
leave
xchg
sbb
loop
in
cli
xor
jmp
cld
rcl
hlt
fdivr
sbb
xchg
mov
into
rol
loop
leave
out
shll
iret
in
fucomip
cmp
out
stc
loop
addl
xchg
xchg
sbb
repnz
call
cmp
in
in
jecxz
sbb
add
xchg
into
lds
int3
sub
hlt
out
into
ljmp
fld
call
out
loopne
fadd
xchg
lret
dec
out
shlb
xor
fcomip
repz
xchg
loop
sti
cli
int
fsubrp
call
sub
xor
fsubrp
cmp
cmp
xchg
mov
ljmp
in
ror
rcr
xlat
cmc
int3
cmp
rcl
jecxz
rolb
addl
das
aaa
cmp
jmp
xor
fsubrp
icebp
fucom
jmp
sub
out
fnsetpm(287
jmp
ljmp
ror
cmp
icebp
cmp
hlt
shr
mov
jmp
jmp
aam
clc
xlat
jmp
loopne
faddl
sar
mov
mov
loope
call
jmp
clc
fucom
stc
jecxz
adc
out
in
loope
xchg
into
sar
jecxz
sti
ss
aam
rcr
lock
faddl
out
icebp
mov
fcmovnb
clc
hlt
icebp
cmc
cmpb
repz
call
ret
fmulp
std
fiaddl
add
in
fdiv
fucomip
cmp
shr
in
test
xchg
out
in
jmp
into
nop
lock
lret
shlb
out
cmp
rcl
sar
loopne
sti
shl
in
mov
out
aam
loopne
sub
enter
push
jmp
sti
rcl
sbb
repnz
fmul
std
out
sbb
aad
shll
in
ds
test
ret
out
aas
out
clc
mov
sti
fucomp
rolb
out
fnstcw
int
clc
lock
cmpb
clc
test
fsub
mov
ficoml
dec
or
movl
mov
jmp
leave
int3
rcl
aad
int
mov
xchg
test
pop
add
fbstp
in
lock
int3
cli
out
out
ret
aad
mov
mov
loop
rol
hlt
out
enter
aam
out
loope
test
in
fstl
sti
cmp
std
cmp
loope,pt
ffree
mov
fimull
in
out
jmp
jmp
fstp
stc
aaa
cmp
in
in
cmc
loop
loopne
mov
mov
loope
iret
sar
cld
fnstcw
cmp
mul
out
in
fucomi
int
in
xor
ss
fmul
out
rol
xlat
aad
fildl
ret
ljmp
jmp
aaa
loope
jecxz
in
aaa
xlat
loopne
shl
aad
idivl
clc
xlat
lret
aad
ljmp
int
mul
lds
int3
xor
fucomi
or
out
std
stc
or
xor
in
repnz
fiadds
cmp
out
out
ds
iret
hlt
in
cmp
in
mov
repz
out
ret
xor
push
rcl
xlat
sti
out
hlt
fucomip
mov
jecxz
std
test
aam
rol
lret
das
aad
repz
xlat
loopne
test
filds
mov
jecxz
int
repnz
in
xor
clc
ljmp
cmp
mul
jmp
or
fimuls
loop
into
in
out
sti
out
lock
fxch
rol
stc
and
out
lret
or
addb
xor
out
loop
cld
cmp
ret
xlat
and
fadds
enter
aaa
aaa
fcmovnbe
call
std
cmp
in
in
fadds
subl
jmp
loope
in
out
cld
sti
in
stc
lret
cld
jecxz
orl
xor
out
out
in
int
cmp
aad
rcr
vmaskmovdqu
jmp
ret
cmp
int
sti
in
fsubp
ror
out
leave
call
stc
loopne
cmc
test
stc
ret
faddl
fiadds
mov
ror
hlt
lret
cmpl
loopne
out
decl
call
xor
stc
xlat
ljmp
cmp
fdivr
fcmovnb
rcl
stc
imul
lret
test
xchg
icebp
cmc
std
hlt
lret
shll
xor
std
cmp
incl
cli
not
aad
iret
call
in
shlb
aam
cmpl
out
fmull
mov
fmuls
xor
jmp
jmp
repnz
fdivp
aas
in
icebp
loop
push
fadd
rorl
in
jmp
add
scas
push
add
jmp
aas
aam
aas
aad
iret
aam
adc
mov
inc
jg
pop
add
mov
jecxz
fyl2xp1
leave
xor
leave
int3
in
aad
adc
hlt
aas
aam
jmp
in
cmc
out
std
sub
addb
icebp
cmp
leave
fpatan
in
fsubr
cmp
cmp
rcr
lret
ret
mov
out
jmp
jmp
fsubrp
and
ret
stc
neg
add
jmp
in
lret
icebp
lock
into
shl
lret
jmp
out
out
ljmp
div
hlt
sbb
int3
enter
repz
in
out
in
fneni(8087
ret
cmp
jecxz
cld
ds
mov
icebp
in
xor
ss
out
repz
repz
sti
ret
aad
fucom
fsubp
cli
lret
repnz
loopne
mov
aad
aam
imul
out
clc
fcmovnu
cmc
addl
lret
jecxz
out
out
enter
out
ss
push
repnz
out
ret
xlat
fadd
hlt
fimuls
cld
test
jecxz
lret
into
fmul
int3
aad
dec
rol
faddp
loopne
sub
or
hlt
loope
lret
int
jmp
cmpl
repnz
rolb
mov
lock
shl
icebp
sti
int
cli
repz
jecxz
sub
mov
test
lret
shr
rorl
icebp
cs
repnz
icebp
mul
aas
loopne
test
in
fcmovnbe
out
lret
xchg
lret
dec
ret
in
jmp
fst
fidivrs
into
into
out
repnz
stc
stc
cmc
fmul
sub
lea
cmp
in
ds
sti
int3
cmp
fcom
mov
loopne
out
stc
jmp
sar
xchg
enter
lret
xor
imul
lret
sti
aas
rcl
mul
cmc
fcmovnbe
in
fdivrp
shr
xchg
fbstp
test
out
fmulp
cmp
into
out
cli
sti
test
mov
test
fmull
test
das
sti
cmp
fdivr
ds
int
sar
lret
in
in
xchg
jmp
iret
in
fmul
jecxz
xor
repnz
out
cmc
repnz
int3
xlat
loope
enter
in
out
jmp
mov
rol
xor
cmp
repnz
addl
mov
int3
cmc
rcl
idiv
shr
xor
aam
not
fpatan
loop
loop
jecxz
loope
jecxz
into
stc
mov
enter
rol
aaa
repz
fmulp
cld
out
loopne
shl
cmp
call
loopne
mov
fsub
jecxz
repnz
sti
std
sarb
xlat
fcomi
xor
fcmovu
in
movb
loop
rcr
xor
lret
out
cmp
iret
cld
cmp
icebp
fidivrs
repz
mov
je
mov
mov
incl
xor
add
movl
cmp
movl
je
jmp
lret
rcr
fstp
fisttpll
inc
mov
sbb
jle
add
in
fimuls
shl
xor
cld
in
cmc
roll
jmp
out
mov
xchg
in
in
cmc
clc
jmp
fcompp
out
ret
icebp
aas
shl
in
fdiv
loopne
lock
in
ret
sti
shr
aad
ss
rcr
xchg
xlat
int
jmp
int
in
enter
lret
xor
fcomi
rolb
fadd
int3
fldl2e
out
int3
cmc
push
out
int
cld
xlat
clc
out
stc
fdivrp
int3
lret
push
icebp
ds
cmc
hlt
fcomp
xchg
loop
ljmp
sti
in
fcmovnbe
std
loop
clc
testb
test
cli
in
jecxz
in
shrb
loop
xor
lret
lret
ret
clc
sbb
sarl
fcmovne
in
out
cmc
loop
loop
jmp
out
cli
fucom
out
ds
enter
orb
adcb
lret
sarl
ds
xor
or
fdivrp
loope
aad
mov
test
lret
rcr
mov
ljmp
fcmovne
fcom
cmp
sti
mov
clc
loop
mov
xchg
aad
out
cli
std
call
ror
cmp
aam
lds
fsub
int3
shrl
lock
idivl
repnz
and
fchs
lret
sub
jmp
ljmp
icebp
fadds
icebp
std
xlat
xlat
mov
in
mov
call
xlat
int
enter
cmc
fdivp
into
loop
in
roll
in
popl
xor
into
aaa
lret
fcomp
repz
ret
repz
fisttpl
int
jmp
repnz
enter
cmp
aad
cmp
in
loope
ret
cld
nop
fdivr
mov
xchg
shr
xor
xor
aaa
cli
repnz
aad
test
icebp
stc
sti
leave
jmp
test
jmp
loope
xor
xor
cmp
icebp
cmp
leave
fneni(8087
stc
lea
lret
in
clc
xor
aam
cmp
cmp
aas
cmp
out
loop
jmp
cld
out
loopne
enter
nop
jmp
aaa
cmc
xor
stc
sti
in
cmp
aas
shr
test
aas
mov
fsubrp
test
rcr
xor
int
out
hlt
aas
stc
shl
adc
sbb
popl
rcl
rol
in
aam
ds
stc
icebp
cmp
rcl
out
aam
xchg
nop
iret
in
mov
xor
sarl
ss
fdiv
ret
into
call
fcmovu
ret
mov
sub
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
add
add
orl
push
xor
jmp
rcl
aad
aad
fstp
jns
fwait
mov
jne
jg
pop
add
test
in
jecxz,pn
aaa
jmp
in
fsubr
out
not
cmc
ret
out
mov
fstp
out
test
into
lock
loop
ss
in
into
clc
clc
aad
xor
shl
aad
jecxz
mov
leave
into
add
jmp
out
das
icebp
fistpll
loope
out
fdivp
std
lea
ret
loope
hlt
sarb
divb
in
fidivrs
rcl
sar
cld
add
or
mov
lret
test
mov
xor
cmp
lret
test
fldl
fdivr
loope
faddp
xchg
mov
hlt
repz
clc
stc
cld
loopne
int
repz
out
jecxz
hlt
hlt
xchg
sti
cld
test
in
xor
das
lret
cmp
stc
idiv
fidivrl
lock
std
rcr
icebp
mov
mov
cmp
stc
shl
lret
fcmovne
lock
roll
and
mov
fiadds
neg
lret
fyl2xp1
fcomi
cmp
sar
aad
out
add
leave
out
addl
ss
sti
aam
out
lret
fsub
cmp
xor
sti
in
out
xchg
shl
test
mul
jmp
ljmp
lret
cld
fcmovb
std
in
in
mov
mov
leave
in
ss
cmp
lret
call
fadds
cmc
lds
rolb
cli
cmp
clc
int3
fdiv
loopne
shr
loope
fcmovu
clc
test
cld
mov
fisttpl
cli
sti
jmp
aam
cli
test
movb
jecxz
xchg
ror
xchg
mov
ret
lock
xor
cmp
enter
rcr
out
sar
ret
lds
sbb
inc
mov
fsub
hlt
shl
lret
fabs
std
repz
stc
fsubr
jmp
out
sub
cmp
in
aam
enter
fst
std
test
out
xlat
mov
jmp
jmp
xlat
sub
xor
std
sarl
or
idivb
loopne
adcb
lret
in
out
jmp
shl
clc
sti
clc
in
rol
sti
xlat
aas
in
in
roll
rcl
ret
iret
aad
jmp
cld
shl
ret
cmpl
in
out
shl
adc
out
in
out
cld
loop
rcr
ret
aas
sti
lds
fcmovu
xchg
int3
icebp
icebp
sub
sub
fidivrl
jmp
fdivrs
rcl
fcmovne
jmp
stc
sti
int3
jmp
repz
out
fnstenv
cmp
sarl
hlt
int3
cmc
rolb
jne
pushl
mov
jmp
rcl
int3
lret
fst
fstl
and
push
dec
jg
pop
add
cld
in
mov
rclb
ret
test
out
fcmove
rcl
cmc
cld
in
loop
cld
call
add
mov
hlt
cli
xlat
test
hlt
fcomi
repnz
shl
xchg
xchg
sti
in
orb
jecxz
fcomi
clc
aas
out
fmul
fsub
xlat
jecxz
loope
addb
mov
into
in
xor
cmp
cmp
jmp
in
ffree
ret
aad
jmp
cld
test
iret
loopne
into
jmp
divb
call
fcomi
repnz
cmp
fsubp
mov
xchg
in
rcll
fadd
div
std
clc
icebp
lret
loope
lock
in
out
and
idiv
xchg
stc
stc
out
xchg
orb
call
cld
cmc
lock
hlt
jecxz
fucomip
clc
mov
fst
ljmp
idiv
enter
lret
in
int3
sar
out
jmp
stc
out
loopne
out
loope
int
repz
cmp
fabs
loopne
mov
xchg
out
cli
xchg
mov
rol
loop
in
xor
repz
std
jmp
jmp
sar
std
hlt
neg
out
leave
loope
cli
sbb
out
shl
ljmp
cld
test
aad
hlt
loopne
out
out
jmp
fcmove
iret
in
aaa
fdiv
jmp
rol
mov
shl
fsin
cli
in
fstl
lret
in
ljmp
loop
loope
rcl
in
out
jmp
cli
xlat
nop
fldl2t
fdiv
out
xor
cmp
sarl
add
out
lret
loop
lret
out
out
int3
mov
jecxz
out
cmp
sar
jmp
into
neg
cmp
icebp
neg
loop
ljmp
aaa
enter
out
imul
int3
aam
loopne
fidivrl
in
in
hlt
cmc
addb
xchg
call
repnz
cmp
ds
icebp
stc
xchg
repz
in
call
stc
in
int3
aaa
std
ljmp
icebp
ret
sub
jmp
int3
jecxz
xchg
adc
enter
xor
iret
in
hlt
call
in
fimull
orl
out
ror
repz
cmp
idivb
sar
fimull
loopne
jmp
in
repnz
ss
xor
fcomip
xor
cmp
xchg
orl
iret
mov
loope
out
sub
call
loope
testl
icebp
ljmp
in
jecxz
cmp
sub
fcmovnbe
repnz
daa
add
jmp
aad
fnstsw
repz
jle
fisubrl
add
vcvtpd2dq
in
fyl2xp1
lock
mov
out
cld
aaa
sar
aas
cmc
rol
aam
xlat
repz
test
jmp
fists
xor
call
cmp
fcmovbe
std
loopne
fdivr
shl
fcomp
test
call
int3
out
rcl
lret
stc
cmp
shl
in
in
enter
clc
cli
call
rcl
xor
sar
xor
lret
fcom
repz
call
out
xlat
hlt
loopne
stc
fmulp
iret
nop
xchg
int3
out
xor
cmp
aad
cmp
cld
fcmovb
sbb
xchg
jmp
rcll
lock
cmp
shl
fbstp
lock
sub
mov
xchg
xor
fsubr
icebp
in
fdivrp
int3
icebp
out
sub
sbb
fstp
mov
testl
repnz
call
loope
adc
out
clc
cld
clc
add
int3
f2xm1
or
call
xor
cmp
in
stc
icebp
shr
test
cmpb
rorl
iret
jmp
call
jmp
sarb
fidivrs
div
xchg
sti
in
lret
mov
in
out
imulb
xor
cmp
int
xor
jecxz
out
clc
lock
stc
jecxz
xchg
call
in
rorl
out
out
fsubr
repz
cmp
fcmovbe
aas
sarl
fsubp
fninit
out
mov
cld
lock
ljmp
in
mov
mov
cmc
xchg
sub
stc
aas
xor
aad
lret
out
enter
rcr
loope
ret
icebp
out
icebp
cmp
loopne
xchg
cmp
cli
ret
fadds
in
sub
das
rcr
sub
fdecstp
ret
lock
addb
lret
and
mov
jmp
clc
cld
jmp
rcl
hlt
test
xlat
fld
xchg
loopne
in
rcll
in
jmp
fcom
test
loope
test
ret
loope
cld
test
lock
repz
ljmp
jmp
in
in
out
jecxz
fdivr
aas
loop
test
jmp
ljmp
xor
shl
lock
xchg
out
fcmovu
into
loopne
loope
in
out
lds
stc
repz
aad
ljmp
fmuls
std
xlat
clc
sbb
in
out
xchg
shlb
lret
fucomp
enter
icebp
cli
icebp
cld
iret
adc
aam
std
orl
jmp
das
in
int
mov
jmp
iret
aam
aas
aad
iret
aam
ljmp
test
push
cmp
jle
iret
lock
fptan
hlt
fsubr
cld
fucomi
in
mov
in
iret
ret
xor
out
in
enter
int
lock
rcl
mov
xchg
in
ljmp
out
icebp
xor
jmp
in
test
bnd
loop
cld
fdivrp
jmp
loop
mov
icebp
in
jecxz
aaa
cmp
lock
test
mul
xchg
sub
clc
out
xchg
lret
cmc
test
loop
out
in
in
ret
hlt
ds
mul
cmp
stc
jecxz
sbb
aas
xor
rcl
mov
int3
cmc
rcl
int
fmuls
in
fmul
cli
icebp
nop
out
hlt
shl
lret
aam
repz
int
cmp
cli
test
loop
xchg
idiv
out
lret
enter
aad
shl
lret
idivb
fdivrl
fistpll
cmp
fnsetpm(287
mov
lret
shl
in
hlt
xchg
das
iret
in
sti
int3
cmp
into
jmp
out
lock
std
in
fiaddl
mov
neg
into
repz
out
cmp
cli
xlat
out
out
rcl
addb
out
mov
iret
nop
fucomp
repz
cmp
out
cmp
leave
neg
lret
test
repz
fst
jmp
mov
out
hlt
fnstsw
loope
hlt
xor
fmul
fsubr
div
aas
jecxz
out
lret
mov
mov
aad
loop
ss
fsin
cmc
cmp
rcl
in
iret
in
iret
xchg
xchg
in
cmc
rcl
loope
icebp
xor
clc
loopne
cmp
fcompp
fldl
std
out
out
rorl
rol
cmc
cmp
call
mul
fstp
cli
cld
mov
loope
xlat
jecxz
int3
lret
in
jecxz
call
ljmp
shl
fcmovnb
clc
sar
clc
stc
out
fsubrp
mov
call
in
clc
jmp
fxch
aad
xlat
aas
jmp
repz
repz
mov
jmp
icebp
out
nop
into
out
cs
test
lock
repnz
shl
out
fcmovb
fcmovnu
fmulp
loopne
stc
fxam
test
nop
shr
repnz
enter
in
cmp
aaa
xor
xor
cli
and
mov
aas
clc
mov
lret
out
jmp
int3
neg
shl
aam
loop
fistpll
cmp
out
mov
out
cli
int
into
mov
into
mov
out
iret
ret
repnz
call
ret
cli
xchg
ret
ljmp
in
ret
iret
rcr
int3
fmul
call
aaa
sti
cmc
cmp
fildl
out
cli
test
int3
neg
loopne
out
fdivr
jecxz
shl
std
aad
mov
rorb
mov
xor
clc
jmp
lret
int3
cmp
rorb
mov
mov
jmp
mov
jmp
fmul
aas
xlat
aad
fmul
ss
loope
popl
jle
add
int
inc
testb
flds
loope
repz
jecxz
out
repz
fdivp
aad
xlat
cmc
out
ljmp
loope
lret
int3
jmp
rol
hlt
aad
ljmp
aad
faddl
out
testl
call
cmp
xor
clc
faddp
not
out
xchg
in
call
fistl
xor
jmp
jmp
fdivrp
fchs
int3
vpavgb
shl
loop
fucomp
incl
ljmp
in
idiv
repz
cli
fstp
hlt
xchg
stc
sar
in
jmp
aam
jmp
ljmp
xor
repz
loop
test
lret
jmp
test
fcomip
das
cli
xlat
stc
xor
out
shl
cld
iret
rol
cmp
in
int3
aad
test
jmp
hlt
lret
imul
out
cs
shll
fdivr
aad
into
sti
incb
xchg
in
iret
fsub
shr
jmp
jmp
idiv
fst
clc
stc
cmp
hlt
repnz
fsub
out
sti
jmp
out
xchg
repnz
in
jecxz
stc
mul
aaa
int3
ds
shl
fsubp
jmp
int3
sti
int
hlt
in
shll
iret
fdivr
call
fcmovnu
loopne
repnz
aad
fcomp
mov
jecxz
mov
loopne
xchg
xchg
jecxz
das
call
fstp
idiv
loop,pt
xchg
lret
test
rcll
repz
cli
fsub
lds
enter
int
fisttps
cmp
cmc
enter
aas
into
cmp
cmp
xchg
ret
rcr
xchg
xor
xlat
aaa
adc
fistpll
fildl
fdivr
mov
out
in
into
xchg
out
into
xor
hlt
repz
aas
aas
iret
rcr
ret
jmp
sti
lret
int3
iret
int
out
sar
sub
lret
std
cmp
ds
cmp
xchg
xlat
adc
ret
leave
lret
std
jecxz
mov
jmp
out
xor
lret
clc
lock
repz
in
ret
sbb
fldl2e
out
jecxz
nop
jecxz
lret
repnz
lret
shr
stc
cmp
shl
sarb
aas
roll
cmc
fadds
test
adc
jecxz
out
aaa
xor
sarl
out
shr
repz
hlt
icebp
jmp
fcmovnu
fcomp
test
std
addl
leave
out
into
xlat
loope
aam
out
div
in
mov
test
mov
xlat
hlt
xlat
out
cs
in
ljmp
cli
aad
shr
clc
fcmovu
out
out
popl
xor
xor
mov
jmp
int3
ror
fst
mov
imul
push
jg
pop
add
int3
fadd
filds
jmp
fucomip
fucomip
ljmp
cmp
aaa
lock
fdivr
hlt
int3
icebp
ret
fincstp
jmp
call
shl
incl
aad
aaa
cmp
ds
vpmulhuw
incl
std
icebp
std
in
aad
in
loop
fcmovnbe
std
repz
xorl
icebp
hlt
ret
imul
mul
icebp
sar
xchg
and
lock
cmc
fdivp
loopne
into
in
sar
ret
ftst
fnstsw
iret
fcomip
ror
lds
lret
hlt
xor
icebp
into
stc
ds
lock
roll
aam
xchg
test
orl
shl
lret
std
aaa
jmp
hlt
cmp
cli
xor
fldlg2
std
orl
xor
ret
sar
ss
in
stc
repz
fucom
cli
fcmovnb
ret
orl
out
les
out
ds
fdiv
clc
cmp
sti
fiaddl
jmp
std
xchg
xchg
xchg
lret
ljmp
shl
ret
cli
ret
cmc
fsub
lret
loope
lret
lock
shr
in
enter
aam
aam
jecxz
rcl
xlat
mov
jecxz
out
in
ljmp
ljmp
test
hlt
test
enter
mov
fdivr
call
xlat
xor
xor
cmp
mov
mov
rcl
lea
in
clc
cmc
div
jmp
into
xchg
test
fildl
mov
repz
repz
repnz
cmp
fstpt
int3
add
icebp
rolb
inc
addb
loop
int3
les
frndint
shll
in
jecxz
loopne
shl
enter
mov
mov
leave
ret
cmp
stc
enter
repnz
xchg
aam
mov
lea
loopne
lret
ror
out
cmp
hlt
ret
ret
call
in
test
mov
in
icebp
loop
sti
lret
xlat
cmp
icebp
shl
loopne
aam
fcmovnu
mov
sbb
rcl
xor
imul
cli
fcom
fsubr
incb
loope,pt
cmp
lea
out
cmc
add
lock
icebp
xlat
fdivs
dec
int3
shl
lock
fiadds
leave
nop
leave
orl
call
cmp
jecxz
mov
mov
std
xchg
out
loopne
xchg
sub
fidivrl
cld
fcomi
lret
cmp
hlt
sti
clc
mov
fldl
test
lret
xchg
out
ljmp
movl
test
or
add
cmc
add
add
aad
aad
int
jge
in
and
pop
test
and
jle
add
ss
cmp
rcl
cmp
fsubp
clc
test
fisttps
call
das
cmp
stc
xor
cli
in
cld
xor
stc
hlt
aad
fdivr
out
jmp
std
xchg
mov
int
xor
aad
sti
idiv
fucomip
lret
cmp
rcl
in
mov
fisttpll
fcom
call
fadd
int3
cmp
iret
shl
or
fimull
test
out
xor
fdivs
cmp
xlat
cmp
aad
cmp
hlt
ds
ljmp
xchg
int
lds
mul
fdivs
cmc
cmp
shl
not
fldl2e
loope
std
std
call
loopne
loopne
in
cs
leave
neg
adc
rolb
fsub
in
fmull
rol
cmp
shl
lret
fnstsw
into
out
stc
shl
loopne
xchg
jecxz
neg
lock
out
repnz
xor
sub
aad
repz
repnz
jecxz
fmulp
add
or
stc
lock
repnz
in
cld
cmp
aas
fcmovnu
sbb
rolb
repz
stc
sarb
imul
cli
repnz
in
ret
rcl
stc
in
fucomp
std
jmp
xchg
clc
shr
in
lock
std
cmp
xor
in
fadds
cmp
lret
and
out
xchg
out
out
loop
xor
icebp
call
test
loopne
shr
out
in
lock
rcr
repnz
iret
cmc
jmp
fcmovb
repz
aad
enter
faddl
aam
ss
aaa
sarl
hlt
shl
repnz
fdecstp
loop
mov
hlt
xchg
cmc
in
aad
fdivp
xorb
sbb
loop
ret
xchg
jecxz
xlat
out
flds
ret
ss
jmp
stc
xchg
fildl
cli
int
in
iret
cmc
xchg
aaa
stc
int3
cmp
shll
f2xm1
cld
cmp
aad
clc
enter
out
rolb
in
xor
stc
ljmp
fcomi
in
jmp
in
jmp
leave
mov
jecxz
in
fadd
fdivs
rcl
fyl2x
sti
ds
int
loope
cmc
mov
fadds
rcll
aam
aad
cmp
xor
xlat
cmp
sar
jecxz
lret
xchg
sub
ss
aaa
aad
ret
incl
jmp
lret
cld
cld
stc
out
xchg
in
in
ss
into
cmp
icebp
cmp
fsub
xor
call
nop
fisttps
das
ret
cld
xor
jmp
ret
les
je
push
mov
adc
jle
add
call
cli
call
cmc
sar
rorb
cli
cld
cli
mov
int
loope
in
shl
aam
in
out
in
rcr
loope
stc
xchg
repz
loope
out
mov
xchg
sub
xchg
into
ljmp
cmp
sti
xlat
hlt
sti
idiv
lds
out
call
loop
xchg
aad
int
ds
loope
xchg
jecxz
jmp
mov
int
jecxz
xchg
lret
in
iret
ljmp
idivl
ret
repnz
std
mov
xchg
mov
in
shl
in
lret
fdivl
cmp
cmp
fcmovb
jmp
and
into
fmulp
sub
iret
clc
cmp
aaa
cmp
std
fcmovnu
fidivrl
fcmovu
in
repnz
cli
jmp
sub
xchg
int3
in
neg
fldlg2
cmp
shl
cmc
repz
shl
and
lret
mov
jmp
mov
sub
in
loope
icebp
int
out
leave
fsubp
iret
lock
out
loope
addl
into
xchg
int
repnz
enter
iret
ret
in
loop
fcmovb
leave
test
rorl
repz
stc
cld
in
out
in
int
shl
fsqrt
sti
mov
int
stc
in
jecxz
mov
cmc
in
out
lret
fdivp
iret
icebp
ljmp
stc
mov
lret
out
addl
neg
rcr
clc
iret
ds
sarl
cld
sar
mov
into
in
fisttps
aam
aaa
ret
fucompp
lock
lret
int3
repnz
in
neg
fxch
out
into
out
fisttpll
xor
cmp
sti
cli
fnstsw
or
fdiv
aad
enter
stc
lret
in
xchg
not
out
ss
aam
cmp
into
int3
adc
in
sti
repnz
clc
cmc
out
addb
bnd
out
cmp
ds
hlt
aas
fst
iret
cmp
in
sar
mov
test
loope
cmc
fidivl
cld
out
cld
imul
in
fninit
xlat
loopne
ret
xor
mov
in
jmp
test
rcl
out
lret
cmp
sarl
lock
mov
in
mov
shl
aam
xor
aam
cmp
cld
stc
cmc
icebp
jmp
loope
out
shl
test
in
rcl
out
nop
xor
xor
fdivr
xor
ds
into
cmp
xlat
cmp
icebp
clc
adc
jmp
lock
fdiv
repz
aad
idiv
shr
stc
mov
into
fisttps
lret
out
xor
xlat
cld
shl
ret
aas
addb
test
addb
mov
mov
jmp
rol
rol
rcl
aad
add
sbb
outsb
pop
pop
jg
pop
add
mov
xor
ror
aam
out
cmp
flds
stc
or
in
out
cli
iret
mov
hlt
in
in
ljmp
div
loope
ffree
loopne
movb
xchg
out
ds
into
ds
loopne
ret
mov
fsubp
loopne
fmulp
xchg
in
ljmp
fnstcw
jmp
imul
xlat
inc
add
cmp
mov
out
mov
out
xor
ret
jmp
stc
into
call
test
movb
in
mov
decb
leave
repnz
sar
aas
loop
cli
sti
in
xlat
in
test
mov
shr
out
ljmp
lock
cmp
cmp
in
in
faddl
in
jecxz
mov
repz
rcr
cmp
hlt
ror
out
repz
rolb
testb
lock
repz
enter
shr
ljmp
fcos
adc
cld
aad
idiv
int3
out
test
sar
shr
out
cmp
fdiv
lock
xchg
sti
ljmp
repz
aam
shr
xor
neg
iret
aad
rol
xlat
fsin
fadds
jecxz
jmp
in
jecxz
sti
cli
std
jmp
in
hlt
shl
loop
jmp
hlt
xchg
sti
mov
ret
shl
repnz
jmp
rcl
out
fyl2x
aam
mov
mov
in
loop
lock
repnz
sti
xor
aas
cmp
cmpb
cld
in
incb
mov
in
jmp
fcmovne
loopne
cld
fst
cmp
hlt
out
mov
rclb
jmp
aam
stc
in
iret
shr
out
ffree
cmc
iret
incb
imul
mov
std
iret
int3
aad
div
cli
xor
lock
out
bnd
aaa
ffreep
ret
jmp
or
div
repz
loope
into
addb
sar
stc
out
lds
xchg
out
das
lret
fincstp
jmp
cmp
cld
loopne
fucomip
shl
loop
in
filds
std
xchg
mov
ljmp
fnstsw
ret
repnz
fiaddl
lret
adcb
cmp
fldl2e
lret
fmulp
sub
decb
nop
adcb
fyl2xp1
cs
jmp
sarb
ret
iret
rcr
in
adc
in
cli
mov
lret
aaa
xor
out
aaa
leave
cli
aad
out
aad
cmp
in
cld
decb
cmp
movl
inc
add
jne
pushl
call
mov
jmp
leave
ret
int
leave
iret
ror
rorb
jg
pop
add
jecxz
aad
in
jmp
aam
repnz
sarb
out
div
movb
repnz
leave
fnsetpm(287
fdivr
out
cmp
out
shl
loope
rolb
addb
in
out
xor
std
ds
into
push
adc
aam
aam
jmp
jmp
cmp
vpaddb
repz
inc
fidivrl
loope
fildl
in
in
xchg
test
cmc
xor
repnz
ror
xor
repz
icebp
lock
fxch
xchg
call
out
lock
xchg
xorl
aam
sti
std
std
shl
cmp
movb
mov
fcmovne
ret
test
xchg
loope
out
aam
lret
aas
sti
cmp
cli
iret
push
jmp
mov
aad
ret
cmc
cmp
ss
cmp
addb
std
aas
lret
stc
rorb
stc
loop
cmc
cmp
fsubr
leave
in
cmp
repnz
sti
xrelease
loopne
aam
loopne
in
into
clc
fcmovnb
in
repnz
test
movl
jmp
xlat
iret
cld
fldl
ret
leave
movl
out
out
cld
cmp
sarl
repz
out
out
les
div
repz
stc
ror
rolb
aas
ret
out
fucomp
mov
icebp
std
decl
in
call
cmp
cmp
xlat
lock
incl
jmp
xor
mov
lret
xor
xlat
jmp
shl
addb
fidivrl
mov
mov
xchg
into
out
aam
xor
iret
cmp
cli
icebp
lock
test
out
int
lock
jmp
jecxz
xor
leave
cmp
xor
div
in
cmc
imul
out
out
into
mov
out
mov
out
in
fdiv
xor
aas
cmp
cld
sar
ds
hlt
in
std
test
stc
enter
jmp
cmp
cmp
inc
repz
fmul
fnstsw
add
in
rolb
xchg
fbstp
in
xor
cli
aad
lock
out
fucom
in
rolb
sti
mov
int3
enter
out
shlb
ret
call
fpatan
sti
fidivrs
xrelease
out
out
rcll
cli
int
lret
xlat
ds
rolb
int3
mov
xchg
out
in
lret
roll
sti
clc
call
fnop
clc
out
in
fsubr
ret
mov
jmp
xlat
ror
fld
and
test
xchg
jp
mov
add
lock
xchg
aam
aaa
call
iret
out
call
aas
add
jecxz
cld
out
call
not
jmp
ljmp
out
out
cmp
hlt
test
mov
std
std
sti
xchg
mov
int3
repz
in
int
cmp
lock
jecxz
jecxz
lds
test
loop
ror
cmc
ret
aaa
xlat
cld
lret
sti
cli
leave
cmp
loop
hlt
cli
fiadds
jecxz
leave
cli
vpmaxsw
iret
ljmp
out
cmc
repz
icebp
out
sbb
cli
leave
idiv
out
leave
vpaddsb
in
in
out
div
in
cmp
fstpt
and
fcmovnu
mov
int3
clc
out
in
in
xchg
mov
out
cs
fdivs
roll
sti
rcl
fcmovne
lret
cli
fucomi
cli
addl
jmp
ljmp
repnz
cld
loopne
ds
in
in
ljmp
aaa
out
in
enter
int3
in
loopne
in
iret
out
fadd
mov
cld
int
shr
hlt
xchg
in
jmp
shlb
lock
xlat
loope
shl
fcomip
loop
test
ficoml
into
shl
clc
clc
das
leave
enter
test
clc
hlt
rorb
fucomip
leave
mov
xchg
nop
aam
jmp
call
or
out
std
out
jmp
test
test
xchg
xchg
mov
jmp
pushl
aaa
jmp
lock
xchg
fdiv
in
loop
mov
loopne
loopne
hlt
shr
fdivr
ss
cmc
loopne
cld
repz
or
leave
loope
rcl
xchg
xchg
int
in
out
lret
aam
dec
jmp
in
ds
test
test
decl
aam
out
cli
cmp
lret
fdivrs
ret
jecxz
fxch
cmp
cld
iret
xchg
mov
cmc
ror
cmp
hlt
lret
cld
in
repz
shr
idiv
fsubr
adc
cli
lret
out
ss
enter
sti
sbb
test
stc
call
aad
in
repnz
and
repnz
jmp
lret
cmp
rcl
out
hlt
lret
fcmovnbe
add
addb
int3
cli
hlt
xchg
jecxz
ljmp
cmp
stc
out
ds
fdiv
testl
xchg
out
movb
aaa
sar
sar
xlat
aad
cmp
sbb
jecxz
xchg
nop
out
idivl
ss
imul
out
lret
not
out
sar
sti
xchg
push
repnz
fucomp
cs
xor
lret
hlt
into
in
in
cmp
cli
idiv
test
stc
cmp
jmp
fcom
xlat
fstp
int3
fstpl
sbbb
sbb
jle
add
loope
fimull
hlt
aam
lret
clc
out
shl
rcl
lock
aad
out
loop
fcmovb
in
int
mov
fcom
loop
aam
in
rol
fcmovne
ret
shr
cmc
fsub
loopne
aas
in
xchg
jmp
xchg
in
ljmp
adc
clc
ret
cli
cli
ret
loope
test
rcll
cmp
ljmp
repz
repnz
fsin
xlat
fmul
fimuls
fiadds
mul
ss
fcmovu
ffree
stc
test
xlat
out
int
cmc
rorl
sub
jmp
cmp
rcl
neg
inc
fsubr
ljmp
shl
loop
sar
out
xlat
int
and
fucomp
cmc
and
fsubr
icebp
ljmp
out
fidivl
ds
fcomip
out
test
icebp
aad
out
loop
fsub
cli
mov
sub
ljmp
cli
xor
fldl
cld
mov
nop
xchg
call
shlb
in
test
aad
lds
xchg
call
sub
clc
out
repnz
test
shl
sti
rorl
in
lret
out
call
jecxz
ret
cmc
xlat
aaa
fistpll
testb
cli
repnz
rcr
in
orl
xor
sub
iret
aaa
cmp
cli
ret
hlt
cmp
xor
stc
mov
call
ror
repnz
shl
filds
loop
rcr
addl
hlt
out
out
cmc
cmp
cmp
ror
sarb
loopne
ror
out
mul
mov
fildl
shl
in
shl
cmp
into
iret
cmc
aas
fildl
in
stc
orb
in
sar
shl
shlb
fprem
cmp
in
sbb
in
into
in
rcr
ror
fcmovu
into
shl
fdivrl
clc
xlat
repz
test
fcomip
rol
xlat
lret
mov
repnz
lret
loope
jecxz
fnstenv
cmp
fdivp
aad
out
xchg
idiv
lret
rorb
aam
xlat
fdivrl
loop
into
out
enter
mov
repz
int3
shll
loope
hlt
fnstenv
out
cld
xlat
cli
in
cmp
cmp
xchg
ret
int
lock
cmc
ror
fadd
out
cli
fxtract
int3
icebp
loope
not
ret
test
cli
test
lret
repz
jmp
ret
loop
ss
xlat
int3
clc
repz
stc
in
sar
pop
leave
ret
push
mov
push
movl
mov
mov
add
orl
xor
movl
jmp
rol
int3
rcr
fxch
ss
insl
sub
push
jle
stc
cmp
loope
orb
lret
aaa
enter
cmp
ds
fsubr
mov
in
orb
ljmp
stc
lret
into
loop
fadd
icebp
std
mov
hlt
fiadds
repz
iret
out
xor
cmp
ret
jecxz
sti
loopne
fcomp
xlat
test
mov
xchg
in
fpatan
repz
sti
cld
out
sbb
cmc
xlat
fiadds
or
xchg
cmp
aaa
aam
cmp
aam
cmp
shr
cmp
out
leave
into
xchg
in
int
repnz
fldl
loope
rcl
leave
enter
div
leave
orl
int3
aad
add
fcomp
out
jecxz
iret
repnz
fnstsw
in
fxch
xor
fidivs
in
int
sub
fsubr
cld
ret
ret
cmc
xchg
clc
nop
mov
shr
fucom
jmp
clc
loop
stc
shr
faddl
fildl
in
leave
loop
jmp
jmp
in
ret
rorl
out
repnz
mov
xor
leave
cmp
rcl
fidivrl
in
std
cmp
mov
loop
imul
fsubr
loope
out
lret
enter
xlat
cmp
cmc
xchg
lds
in
icebp
in
out
ljmp
xlat
stc
out
sarb
fsub
test
jmp
call
loop
hlt
cmc
aas
call
leave
rcr
in
lock
xchg
cmc
aad
xlat
xchg
xlat
mov
xchg
adc
cmc
loop
in
clc
stc
aaa
fdivr
lret
std
icebp
fcmovnb
jecxz
ljmp
int
jmp
enter
repnz
iret
xor
loopne
idiv
nop
out
orb
out
rcl
iret
into
xor
loopne
sarl
movl
jne
mov
mov
mov
add
add
sbb
mov
add
mov
jmp
ror
ret
fcmovnu
fisttpl
mov
sub
jg
sbb
jle
lock
cmp
mov
jmp
fdivp
in
jmp
in
das
ljmp
jmp
lock
shr
rcr
xchg
fimull
repnz
ljmp
cmp
fdivp
hlt
sti
ret
jecxz
div
cmc
in
fld
enter
jmp
rcl
leave
icebp
loop
ss
cli
sbb
lock
cmc
in
sbb
mov
in
out
ljmp
aaa
cmp
lret
clc
aaa
clc
std
cli
fadds
sti
fisttpll
in
mul
sti
xor
lret
clc
stc
cmp
flds
test
fimuls
shlb
in
cld
rcr
shl
xor
aad
cmp
movb
std
aam
icebp
leave
aaa
std
ror
shl
roll
repz
and
fstp
ret
shl
std
in
int3
repnz
ret
sar
fdiv
sti
xor
ret
repz
out
xlat
sbb
into
int3
out
jmp
repnz
aad
std
xlat
sar
sti
hlt
cmp
ss
repz
cli
cld
ljmp
in
lock
aam
out
cmp
cmp
sub
fsubr
in
mov
adcl
shl
aaa
ljmp
aas
loop
fsubp
mov
fsub
ret
lret
xchg
loop
out
xor
cmp
xor
out
loope
add
icebp
fsub
shl
fucomip
test
fsubr
icebp
loop
xchg
repnz
idivl
xor
rcl
jecxz
iret
fnstsw
mov
adcl
lret
clc
iret
shll
lret
lret
loopne
repz
adc
jecxz
mul
nop
nop
mov
shr
das
lret
not
cmp
std
aaa
iret
repnz
test
out
ljmp
fldl
ret
shr
int
idiv
in
jmp
sar
cli
cld
out
or
incl
shr
enter
cmp
mov
xor
xorl
push
or
mov
mov
add
movl
cmp
pop
movl
je
mov
jmp
jmp
lret
xlat
lret
rcr
rcr
xlat
test
inc
sub
das
orl
jle
cmp
xor
mov
xchg
incb
imul
in
cmp
hlt
jmp
cld
out
rol
not
shl
neg
jecxz
in
lret
cld
xchg
xchg
int3
in
cmc
shl
out
hlt
cld
xlat
sar
sti
cmp
sti
clc
loope
in
faddp
leave
mov
addb
iret
ss
fcmovnb
cmp
loopne
fsubp
stc
cmp
rol
fcomp
int3
fnstsw
cld
xchg
xchg
hlt
mov
in
lret
cmp
xor
aam
cmp
into
aas
loopne
rcl
and
mov
lret
icebp
or
into
in
rcl
iret
ljmp
xlat
int
fdivrs
call
into
or
fdivr
fucomip
rol
fdivs
cmp
std
clc
fucom
repz
rcl
repnz
sbb
test
ror
xchg
test
loope
ss
xlat
aaa
jmp
mul
cmp
std
and
imul
sbb
xchg
xchg
xchg
fcomi
lock
lret
lock
loope
aam
flds
out
mov
cs
aam
in
repnz
shl
ret
out
out
out
in
int
xchg
divb
ljmp
stc
in
repnz
xchg
rcl
mov
enter
test
loop
repnz
leave
aam
xor
adc
cmp
in
lock
aam
fimull
mov
out
mov
cmp
fidivrl
lret
adc
out
test
les
mov
xchg
out
test
mov
fcom
fcmovnbe
in
cld
sti
fst
hlt
hlt
out
cmp
fdivrp
cld
jecxz
ljmp
int3
in
call
fucom
loopne
rolb
test
ljmp
aam
ss
bnd
in
out
out
sar
out
jecxz
mov
out
mov
loope
in
out
orl
aaa
fcomp
cmp
aad
add
mov
mov
enter
in
rorl
mov
into
mov
jmp
ror
aas
int
int
jbe
repnz
test
jle
add
out
cli
repnz
add
loope
fadds
xchg
roll
repnz
ret
aam
leave
std
icebp
cli
rolb
out
aam
jecxz
fucomi
out
fsubrp
jmp
fcomi
cld
int
cmc
in
cmc
lock
clc
loop
fcmovnb
add
sbb
rorb
hlt
sti
repz
aad
rcl
jmp
movl
xor
div
out
clc
lret
stc
cli
lock
int
clc
repz
rol
inc
fucom
into
ljmp
out
out
repz
lds
idiv
rcr
aam
add
sti
fadd
fiadds
jecxz
das
aad
ror
xor
adc
stc
icebp
fst
xchg
nop
loop
xchg
ljmp
imul
out
in
loop
aam
ffree
clc
test
fdivr
decb
out
in
xchg
hlt
aam
lret
stc
fdivrl
lret
in
inc
rcr
call
movb
mov
xor
sar
cmp
lock
mov
hlt
idiv
std
xchg
into
loop
rcl
out
enter
sarb
aam
xlat
jmp
loopne
iret
xlat
sbb
call
lret
xlat
in
int3
repz
in
lock
cld
jmp
loopne
in
lock
loope
ljmp
test
jmp
cmc
aam
cmp
cmp
add
iret
fdivrp
sbb
loop
int3
int
out
mov
into
xor
cmp
fcmovnbe
iret
xor
ds
repnz
shl
or
cld
loopne
out
out
lret
aam
icebp
int
hlt
adc
rcr
sti
ret
loopne
test
lds
xor
in
fxch
hlt
out
int3
lock
clc
loop
mov
test
mov
enter
add
in
int
repz
fdivrs
fsub
adc
cld
sti
out
mov
loopne
xchg
out
clc
iret
in
ret
jmp
mov
xor
add
leave
ret
push
mov
push
or
jmp
ret
ret
fst
int3
xlat
fs
test
inc
jo
jle
add
jecxz
in
jmp
std
call
in
loopne
fdivrp
aad
mov
lock
aaa
shr
leave
into
enter
cmp
aaa
cli
cmp
testl
cmc
xchg
out
iret
hlt
icebp
aad
ss
shl
aas
testl
lds
xchg
rcl
aad
lret
aam
cmp
div
lret
aam
test
call
in
lret
loope
mov
in
cmp
fpatan
into
in
std
cmc
fadd
rcr
in
xchg
loope
adcl
cmp
lret
ss
repz
sarl
test
test
jmp
ror
shl
shlb
aam
xor
std
cmp
faddp
fstpt
leave
fmuls
xchg
repnz
xorb
das
out
fmulp
jecxz
pushl
repz
xchg
test
jmp
in
in
mov
lret
repnz
cmc
enter
aad
aad
clc
clc
in
ljmp
in
in
loope
int3
in
cmp
in
icebp
rcr
iret
stc
test
jmp
filds
loop
fsubr
jecxz
ror
lock
leave
in
clc
cmc
jecxz
fcmovnb
test
lds
cmp
aaa
out
into
fcmovnb
xor
idiv
loope
ds
aas
sti
or
into
mov
xor
in
cmc
ret
lret
ss
cmp
in
xlat
std
shl
out
cmpb
mov
int3
fdiv
filds
int
repz
ljmp
ret
stc
iret
rcl
jecxz
sub
jmp
jecxz
rcr
iret
shl
fmul
fcmovnb
fnstsw
sti
rolb
jmp
sub
in
int
repz
std
xor
bnd
out
aad
fadds
fmulp
xchg
sti
fcmovnu
xchg
test
repz
loopne
ds
mul
xchg
testb
xchg
nop
mov
xor
icebp
ret
cmp
xor
sti
sti
rcr
not
aam
cli
ret
mov
repnz
cmc
clc
repz
cmp
ds
out
shr
aad
fcmovnu
out
mov
leave
enter
cmp
lret
fdivrs
neg
fdivr
in
cld
leave
leave
in
int3
xor
xchg
aam
aad
lret
ss
ds
lds
jmp
in
shl
xchg
jecxz
shrl
das
xlat
jmp
out
enter
fcmovnb
add
mov
xor
sbbl
add
movl
mov
movl
movl
movl
movl
mov
movl
push
movl
movl
mov
cmp
movl
jmp
rcl
enter
fsubl
js
aaa
lock
jle
add
out
ret
stc
mov
xchg
xchg
sub
cmc
aad
adc
clc
cmp
icebp
stc
loop
sarb
orb
rcr
test
das
call
hlt
cmp
lret
aad
shl
mul
testl
roll
out
int3
ljmp
sarl
sar
fimuls
mov
test
test
out
repnz
jecxz
fdiv
hlt
rol
shl
addl
fsubp
ret
cmp
jmp
into
enter
xlat
xor
or
jecxz
mov
mov
loop
test
idivb
ljmp
sub
jecxz
jecxz
ffree
loope
loop
jecxz
enter
ljmp
fildl
rcl
stc
in
neg
jmp
fsubp
into
sbb
fadd
leave
shll
iret
xlat
lock
xlat
rorl
mov
in
jecxz
mov
rcl
ss
repnz
rcl
repz
fucomip
fninit
jmp
add
and
xor
repnz
out
iret
repz
shr
cli
shl
mov
dec
fmul
mov
ljmp
repnz
sar
cmp
cmpl
std
xlat
mov
rorb
aas
rcl
jmp
divb
ffree
jecxz
cmp
add
aad
lock
xchg
cli
lret
in
xchg
jmp
in
call
int3
loopne
fdivp
fxch
icebp
rcr
out
call
into
xchg
mov
repz
shr
lock
into
clc
rol
rcr
loop
testb
out
orl
lret
aaa
ds
std
cli
flds
fcmovu
clc
int
lret
in
xor
xor
fstpt
xor
pushl
lock
sar
shl
ret
faddp
fcmove
jmp
sub
cs
repnz
loopne
loope
hlt
neg
aam
cld
addb
xchg
out
fdivp
leave
cmc
div
rcr
lock
sti
lret
iret
fprem1
rolb
mov
in
rcl
vpxor
leave
xlat
ljmp
int3
std
addb
clc
mov
test
mov
ljmp
cmp
iret
cmc
iret
cld
cld
fadd
idiv
loope
enter
or
mov
and
das
xor
aad
icebp
cmp
repnz
xlat
xchg
repz
jmp
in
lret
mov
xchg
or
add
xor
mov
xor
jmp
aas
leave
fmul
fcom
fld
cli
jae
lea
insb
pop
jbe
jle
add
xor
ret
cmp
xor
fidivrs
out
int
roll
test
repnz
out
das
cmp
out
lret
aaa
lock
fst
out
rcr
ret
or
sti
xchg
xor
mov
iret
iret
cmp
not
aas
lret
shl
cmc
rcr
shr
out
call
jmp
loope
in
icebp
jmp
aad
int
test
aam
rcr
incl
mov
mov
aad
lret
aam
fnsave
cmp
out
aam
loop
into
clc
rol
shl
lret
in
in
sti
fcmovne
sub
xor
repz
in
in
xor
cld
ds
shl
fdivrp
lret
addb
int
shl
out
out
rcl
repnz
inc
ret
loop
mov
loope
loopne
lock
xchg
aas
aaa
leave
in
cmc
lock
jecxz
rolb
fadd
test
mul
fcmovnbe
or
mov
clc
aad
cs
shl
cmp
cli
aas
test
xlat
in
fdivrp
shr
out
ljmp
in
aam
cmp
shl
add
roll
in
in
xchg
icebp
in
xor
leave
imul
aas
aaa
aam
test
aas
in
cmp
mov
jmp
in
nop
loopne
in
repz
clc
std
sti
aaa
rcr
ffreep
cld
xchg
cmp
ror
jecxz
decb
fld
std
cli
fdivrp
sti
cmp
xor
dec
inc
into
xlat
dec
add
icebp
repnz
aad
repz
lret
ljmp
loopne
xchg
and
xlat
in
stc
loope
fucomp
in
das
jmp
int3
xor
cmp
jecxz
ret
enter
out
flds
out
in
jmp
xor
iret
shlb
cmp
in
loope
repnz
cli
in
test
leave
xchg
faddl
xor
xlat
out
int
xor
iret
not
hlt
ret
loope,pt
neg
imul
lret
fcmovnbe
in
dec
les
iret
shr
in
cmp
into
ret
aad
test
cld
test
out
sti
ror
xchg
rcl
in
cmp
bnd
shl
xchg
fsubr
faddl
mov
mov
cmc
aam
in
xor
fstp
cmp
xchg
ret
loop
lret
in
lret
loope
ljmp
out
aaa
in
xor
rcl
lock
in
loop
lret
addb
rcl
repnz
jmp
cmp
cld
cmp
test
xor
jmp
lret
aam
aam
push
idivl
add
cmc
fdivrp
loop
jecxz
leave
mov
fxch
icebp
ljmp
cli
test
clc
cmp
in
test
dec
cmc
out
jmp
ljmp
cmp
hlt
out
rolb
movb
test
in
mov
ss
aad
cli
out
out
in
aad
ret
into
fcmovu
fdivrp
enter
mov
sti
loope
xchg
xor
xor
jmp
enter
cmp
std
int3
out
aas
jmp
in
jmp
test
aad
incb
cli
test
repnz
cld
fcmove
leave
and
rolb
repnz
ss
call
iret
sar
fcmovu
rorl
out
mov
in
jecxz
leave
aam
icebp
hlt
shll
sarb
fisttpl
clc
fucom
lret
loop
into
loop
nop
in
xor
in
cmp
in
hlt
cmp
aam
filds
mov
int3
cli
into
jecxz
test
xchg
out
in
xor
into
fcmove
shr
sar
aad
out
test
ljmp
lret
xchg
loope
clc
ret
in
jmp
cmp
sti
in
adc
in
addb
and
xor
stc
sarb
ds
aad
sarl
std
xchg
icebp
aas
mov
mov
call
repnz
cmp
divb
xlat
cmp
loopne
repnz
neg
enter
loop
repnz
iret
call
lret
divb
int3
cmp
out
rcl
rolb
cli
in
call
mov
in
div
cli
sub
aad
out
fcmovu
sti
loop
xlat
in
ljmp
jmp
nop
out
aad
test
xor
aad
imul
out
cmp
aam
loope
out
roll
iret
fsubr
aas
int
lock
loopne
ds
sti
iret
jecxz
fmul
lret
loopne
repnz
fidivl
ss
cmp
cmp
repz
in
cli
int
loope
ret
nop
sub
xchg
sar
loop
sarl
sti
aam
aas
fdivs
fdiv
loop
test
std
in
int
call
call
std
stc
fdivrl
cmp
out
mov
stc
xchg
xchg
repnz
xor
shlb
mul
adc
fiaddl
into
test
in
lret
and
rcl
repz
xor
rcr
xlat
aad
test
mov
mul
ljmp
lea
orl
jmp
int3
ror
int
lds
and
std
jnp
jle
add
int
xor
test
int
div
lret
int3
loopne
test
mov
repz
mov
cld
jmp
hlt
xor
ss
fdiv
repnz
shl
not
repz
rcr
mov
roll
clc
icebp
cli
stc
jecxz
int
cld
rol
fucom
aas
stc
cmpl
jecxz
orl
iret
xlat
out
clc
cld
shl
addl
jmp
xor
iret
leave
repnz
int
sbb
loop
faddl
sti
out
jmp
shl
call
int3
xor
leave
cli
rcr
cmp
clc
ret
xchg
testb
test
xor
aam
std
faddp
hlt
loope
call
cmp
std
int3
mov
in
repz
ss
xlat
leave
cli
ds
in
loop
roll
cld
cli
out
rclb
out
ret
cmp
lret
fdivr
loop
fiaddl
in
loopne
decl
cs
cld
fcomi
clc
or
loopne
in
cmpl
fucomip
flds
loop
icebp
fnstenv
lret
out
fnstcw
ror
sbb
sbb
in
sti
loope
in
into
fists
rcl
not
ljmp
lock
idiv
clc
jmp
mov
out
shl
into
jmp
sub
ss
iret
div
idivb
stc
jmp
jecxz
in
ljmp
cmc
jmp
lret
aas
cld
fst
cmc
cmp
ds
xlat
mov
lret
jecxz
jmp
xchg
xchg
repz
aam
ljmp
lock
out
out
call
ljmp
aam
xor
sti
rcl
leave
into
sar
fdiv
filds
test
in
repz
aam
out
idiv
cmc
repz
test
aam
xchg
lret
lret
mov
ror
filds
xor
fadd
lret
lret
cmp
in
aad
rcl
mov
out
sbb
std
orb
idivl
stc
aad
in
cmp
call
rcl
std
loope
sti
out
shr
shl
mul
icebp
jmp
xlat
lock
jecxz
rcr
hlt
incb
xchg
loopne
hlt
xchg
hlt
into
leave
fadd
cmp
ljmp
fisttps
or
in
and
aad
in
jmp
into
cmp
hlt
add
xor
cmp
jne
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
add
mov
jmp
ror
vpsrld
jl
push
push
out
ss
aam
jle
jle
add
icebp
cli
shl
test
enter
cld
jmp
out
out
jecxz
in
test
jmp
int
shl
cli
mov
jmp
in
loope
test
sub
neg
sar
shl
hlt
loope
repnz
addl
out
mov
nop
lret
mov
jmp
call
iret
div
adc
fcmove
in
loope
loope
ljmp
hlt
fcomip
aam
in
div
out
iret
cmp
cld
cmc
icebp
cmc
out
hlt
fst
ljmp
loopne
nop
mov
iret
shr
in
xor
call
clc
cmp
cmpb
fcmovne
out
in
fucomp
repz
xor
xor
in
clc
sti
fadd
rolb
aad
in
div
clc
out
enter
loope
out
in
out
not
out
loopne
cli
out
sti
icebp
in
jmp
out
out
repnz
fst
rcl
clc
ret
xor
ljmp
aaa
fdivrp
fiaddl
fucomp
mov
mov
lret
aad
in
stc
ror
clc
fdivrl
cld
repz
cmp
rcr
int3
lret
in
hlt
aad
ljmp
mul
jecxz
aaa
sar
testb
iret
lret
icebp
loop
cmc
hlt
xor
stc
fcmove
sarl
jecxz
lock
stc
test
cmp
jecxz
int3
xor
int3
fidivl
out
ss
shl
test
idiv
aam
xchg
test
std
mov
lret
enter
hlt
or
out
stc
ss
out
aad
xor
into
stc
int
std
sar
loope
rcr
aad
fmull
aam
aaa
loopne
hlt
leave
not
hlt
icebp
aas
cli
cmp
in
clc
loope
xchg
mov
mov
lret
testb
repnz
leave
dec
rcl
xchg
jecxz
test
jecxz
mov
lock
loop
out
in
icebp
iret
ror
in
std
aaa
ror
cmp
ss
sar
loopne
mov
in
jecxz
xchg
in
ljmp
cmc
sti
loope
clc
in
fdiv
fprem
test
xchg
fidivl
jmp
incb
cli
mov
mov
std
mov
repnz
jmp
into
repz
cmp
ds
sbb
div
jmp
test
and
shr
aad
int
cmp
ret
aad
loopne
in
loopne
ljmp
cmp
cmp
loope
fdivrp
clc
imul
xacquire
out
lret
jmp
aad
lret
enter
fcmovnu
push
icebp
ret
dec
mov
lods
add
in
xchg
jecxz
not
sti
cs
hlt
ds
cmp
orl
fcomip
rorb
out
lock
cmp
jmp
iret
shr
ror
cld
loopne
in
fucomp
incb
jmp
out
xor
out
aaa
call
test
jmp
hlt
repz
cmp
in
sti
cmp
fdivrl
loopne
iret
loopne
aad
ret
out
cld
and
fsubp
icebp
xchg
rcl
out
ror
aad
ror
fcom
lock
inc
fadd
filds
out
out
aad
icebp
cmc
fdivl
out
ljmp
sbb
cli
imul
out
out
xchg
cmc
in
into
in
idiv
cmp
rol
stc
iret
xor
out
lock
cld
jmp
clc
test
fdivr
ljmp
int
sar
cmp
into
jmp
lret
stc
iret
idiv
fisttps
enter
into
fisttps
xor
cmp
call
xor
ffreep
fstp
ret
div
fxch
fmul
jmp
hlt
lret
int
shlb
xor
out
ror
cmp
rol
in
sti
cli
sti
lret
clc
xchg
xchg
xor
shr
shll
xor
rcr
in
cmp
repnz
ret
addl
mov
cmp
loopne
fdivr
stc
loopne
test
jecxz
fmul
int3
mov
shl
shl
cmc
cmp
fsqrt
int3
cmp
loope
fucom
fsubrp
movb
out
xor
divl
out
repz
fst
out
mov
call
fisttpl
xlat
xor
ss
in
aas
ss
jmp
lock
sti
std
cmp
addb
shl
shr
ss
shl
sarl
loopne
mov
lret
fldlg2
cld
out
sbb
sti
cmp
shr
stc
cmp
in
lock
xlat
jmp
in
decl
mov
xchg
lret
ljmp
into
repnz
int
ret
ljmp
in
rcr
xchg
xchg
loopne
jmp
jmp
cmp
and
testb
lret
aad
iret
enter
int
cmp
sti
cmc
stc
sar
iret
cld
std
call
out
cld
repz
cs
ss
repnz
rol
loop
clc
loopne
jecxz
repnz
cmp
in
fdivr
out
ljmp
mov
xor
jmp
enter
int
enter
push
add
adc
jle
add
in
int
hlt
fcomp
in
mov
xchg
out
lea
int3
xor
shr
hlt
cmp
test
cmpl
roll
adcb
xchg
out
out
in
lret
aas
sar
cmp
aam
loopne
jmp
std
lret
mov
out
xchg
aam
xor
xlat
leave
hlt
icebp
out
xor
inc
out
idiv
shl
stc
fcmovu
fsubr
xchg
and
in
shrl
repz
fcmovnbe
out
iret
out
jmp
sar
iret
les
sbb
jmp
adc
out
ret
shl
int
lret
or
clc
add
ffree
jmp
hlt
mul
test
test
iret
icebp
icebp
fsub
into
sar
cmp
cmp
aaa
cmp
loopne
test
cmp
ljmp
shrl
out
stc
icebp
into
jmp
aam
cld
int
shl
addl
mov
repnz
xchg
out
aam
out
xor
std
out
int
ret
ret
aad
mov
xchg
lock
push
hlt
fdivrs
xor
cld
cmp
jecxz
out
xchg
call
xchg
icebp
xchg
ljmp
cmp
cli
repnz
int3
out
ds
add
sbb
test
iret
repnz
out
in
out
cld
fxch
ret
aas
test
stc
mov
fsubrp
fabs
jmp
test
sar
out
cmp
enter
div
out
test
and
in
jmp
xor
into
cmc
xor
sar
cli
loopne
fmul
out
jecxz
icebp
lret
int
jmp
lock
aam
xlat
hlt
icebp
cmp
sar
addb
mov
repnz
out
xor
ljmp
cmp
fucomip
into
out
repnz
enter
into
mov
shl
rol
call
cld
cmp
in
clc
in
dec
iret
loopne
loopne
out
int3
jmp
jmp
test
cmp
fcmovnu
test
std
out
loop
out
out
mov
ret
shll
repnz
xor
sti
or
xchg
stc
jmp
in
repz
shl
shl
out
int3
rol
incb
clc
ds
shl
ffree
addl
loope
aas
jecxz
sti
xor
rcl
roll
std
cmc
fadds
leave
ljmp
repz
call
fucomip
std
aam
int3
jecxz
addl
out
mov
add
add
aas
lret
fcmovnu
xlat
aad
jno
jnp
lock
cmp
add
add
in
sti
into
iret
hlt
ljmp
cmp
cld
into
sar
cmp
lock
testb
clc
mov
rcll
call
fcmovnbe
clc
fdivr
fdiv
and
aas
rol
ret
leave
in
int3
stc
fsubp
lret
in
iret
loope
in
xor
das
ror
rcl
lret
cld
sarl
repz
or
lock
aad
cmp
sti
not
loope
fadds
fsub
xlat
stc
int3
mov
fstp
ret
fcoml
iret
in
ret
clc
in
out
ljmp
shl
fcomp
and
xlat
stc
std
cld
stc
mov
ss
lock
sub
ror
xchg
out
test
test
sub
repnz
stc
hlt
sti
rcr
cmp
adc
fld
neg
call
jmp
jmp
out
in
xor
hlt
iret
out
call
in
lds
xchg
jmp
test
xchg
shr
ffreep
int3
leave
repz
std
xlat
aam
in
cld
mov
mov
loopne
out
std
enter
int3
loope
call
icebp
shl
fsubp
aam
shl
out
div
leave
fstl
xchg
mov
sub
cld
ror
clc
aad
aas
in
jecxz
call
addb
repnz
in
aaa
ljmp
in
cli
call
cli
xchg
mov
fdivrp
into
fbstp
in
xor
shr
clc
iret
fmulp
jmp
lock
cmp
cli
test
int3
xchg
mov
aad
sti
aam
stc
in
jmp
rcr
fcmovu
cmc
cmc
call
xlat
mov
jmp
call
xor
xor
jmp
clc
in
aam
repnz
sti
cmp
enter
cmp
clc
fldl
jecxz
loop
rcr
xlat
leave
out
fdiv
idiv
repz
int3
mov
into
cld
out
in
xchg
int
jmp
shr
in
out
int
out
sti
int
mov
mov
clc
sub
jecxz
mov
loopne
shr
fsub
lret
int
fchs
repnz
loopne
idiv
popl
dec
jecxz
int3
rcr
out
in
jmp
cmp
not
loopne
in
enter
nop
lret
ror
cmp
lock
ljmp
int
rcl
repnz
fsub
imul
mov
mov
stc
das
in
cmc
int
xlat
jmp
aaa
neg
rcr
loope
fdivr
test
movl
lock
call
decl
add
add
into
enter
int3
fwait
outsb
mov
jecxz
dec
mov
lods
add
xor
out
cli
fst
rcr
fimull
out
loop
loope
rcl
xor
repnz
push
loopne
xchg
ds
into
mov
leave
mov
in
xchg
ror
das
ret
xor
aad
jmp
roll
mov
mov
rorb
xor
ret
jmp
fsub
sbb
lock
movb
xchg
leave
xchg
xlat
fadd
in
cmp
cmp
out
loopne
fdivrp
shl
aad
sbb
int
loopne
icebp
xchg
xchg
xor
fdivr
fmul
rcr
fldl
faddl
nop
fmul
out
in
out
clc
lock
iret
icebp
iret
fmul
into
sti
cmp
fdivrs
in
loope
ret
out
ficoml
out
loopne
ret
icebp
ss
out
repz
aaa
hlt
jecxz
repnz
std
clc
faddl
shr
enter
xor
icebp
lret
fcmovne
lock
cld
ret
hlt
mov
lret
in
test
int3
xchg
xchg
xor
sti
rol
aad
xor
iret
cmc
sarb
div
div
jecxz
in
out
fildl
out
ret
cmp
jmp
ljmp
xlat
xchg
mov
mov
lock
shr
ljmp
rcr
cmp
aas
mul
loope
ret
in
in
ljmp
loope
stc
call
test
repz
loop
fdivr
out
mov
xchg
in
in
std
mov
xor
fdivl
cmp
fdivr
cmp
out
test
in
mov
mov
mov
hlt
imul
divb
xor
fpatan
out
stc
ljmp
xlat
ret
in
lret
mov
cmp
fisubrl
cld
lret
loop
roll
fpatan
loope
mov
xchg
shl
xchg
sarb
repnz
cs
into
xor
in
idivl
mul
xor
cmc
lret
loope
in
xlat
hlt
ljmp
cli
stc
ret
int
mov
out
cld
sbb
mov
jmp
cmp
repz
ret
sbb
jmp
sti
addl
adc
imul
das
testb
jecxz
faddl
call
cld
out
repz
icebp
leave
xor
aaa
cmp
enter
rolb
cli
in
int
addl
test
in
lret
sarl
fdiv
idivl
incl
shl
fucomp
xchg
mov
jmp
leave
iret
int3
into
fstp
pushf
mov
sbb
xchg
or
jle
add
fmul
faddl
loop
lret
clc
mul
fadd
sar
repz
repz
orb
xchg
xchg
xor
iret
lret
repz
hlt
cmp
cmp
sti
out
fcmovne
enter
push
in
loopne
mov
lock
das
cli
fiadds
rcl
filds
test
mov
out
xor
jmp
cmp
loope
repnz
ret
into
adc
fcom
mov
xlat
leave
xchg
xor
shr
lret
repz
sarl
fcmovnu
loop
xchg
in
enter
mov
icebp
notb
call
enter
out
std
test
ljmp
sub
xchg
out
out
iret
xor
xor
ljmp
test
out
and
std
loope
mov
icebp
in
sub
out
clc
xlat
fcmovnu
sti
loopne
loopne
clc
xlat
fcmovnu
rol
out
cld
xchg
out
ror
das
leave
sub
cmp
loop
xchg
xchg
lret
int
fmull
shl
into
repnz
ror
incl
mov
mov
sti
fists
in
cmp
std
std
int3
fdiv
iret
mul
cmp
call
mov
mov
cmc
ror
shl
call
stc
iret
loop
cmp
int
rcr
shl
in
mov
xchg
xlat
icebp
divl
cld
sti
cmp
leave
cld
mov
idiv
cmp
orl
jmp
incl
leave
sbb
aad
ror
rol
fdivr
ss
idivl
sarb
cli
xchg
testb
iret
mov
fcmove
xlat
cmc
repz
ret
xchg
in
orb
rcr
xchg
leave
in
xor
cmp
loopne
ret
lret
popl
loope
ror
stc
in
repz
clc
aam
jecxz
out
mov
out
lock
lock
loopne
jmp
jmp
xor
shr
rcl
test
ljmp
mov
jecxz
in
enter
in
xlat
cmp
int3
cmp
icebp
sbb
fmull
faddp
jmp
iret
in
jmp
jmp
fcmovbe
cmp
aas
aad
out
ret
jecxz
out
sti
cld
lret
mov
out
ss
or
add
mov
mov
jmp
rcr
int3
ror
fcmovnu
arpl
in
test
add
add
in
cmp
in
div
aam
jecxz
fstp
enter
fucom
clc
shr
xlat
ror
stc
fildl
aad
out
clc
test
xlat
lret
fsub
cld
fiadds
jmp
shl
clc
fdivrs
shl
aas
fstp
jecxz
addb
out
sbb
cs
lock
rcr
loope
int
sti
aas
cmp
cmp
xchg
clc
jecxz
iret
fists
leave
lock
iret
sti
xor
test
test
stc
out
sub
fcomi
iret
shl
fdiv
fcmovu
cs
leave
frndint
jmp
cmp
fstp
cmp
jmp
dec
out
repnz
in
jmp
xor
xor
in
shl
clc
int
fsubp
sar
and
shl
fxch
fcmovnu
jmp
sbb
shr
loop
fld
loop
int
jmp
loopne
xor
jmp
cmp
leave
iret
loopne
fpatan
std
ret
xchg
test
loope
out
repnz
loope
in
out
aad
out
int
in
jecxz
cmp
fimuls
sar
out
fdiv
enter
into
shl
aam
aad
cmp
in
fimuls
xor
lret
std
in
cmp
jmp
icebp
cld
rcr
xchg
cmp
loopne
call
out
in
test
xor
ret
ss
out
mov
fiaddl
mov
xor
cmp
into
cld
rcr
fstp
sbb
neg
fdivr
int
mov
leave
out
cmp
hlt
rcr
shl
ret
rcl
out
fninit
cmc
mov
ret
hlt
rorb
sarl
stc
cmp
rcr
faddp
iret
shl
aas
fiaddl
fcmovnu
xchg
int3
fucomp
xchg
shlb
fcmovne
imul
fdiv
testl
cmp
in
hlt
test
rol
xlat
stc
cmp
sub
out
ds
std
cld
mov
enter
fucomip
mul
lock
cmp
aad
jmp
cmp
fcmovbe
shl
jecxz
in
xchg
leave
out
aam
jmp
mov
std
clc
lock
xchg
enter
ljmp
int
in
ret
xor
cmp
shl
test
std
ljmp
iret
jmp
aad
cmc
jmp
fdivp
roll
lret
int3
mov
jmp
enter
aad
leave
fnsave
cmp
push
xchg
lret
bound
add
add
out
xchg
int3
mov
out
loope
lret
cmp
rcr
out
repnz
cmp
addb
dec
call
ror
clc
lret
lret
cmp
cmp
lock
roll
xor
into
shl
xor
leave
stc
lock
shl
mov
std
mov
icebp
out
mov
hlt
aaa
ljmp
stc
mov
mov
loop
and
shll
leave
clc
fcos
loopne
sar
fidivrl
in
test
mov
out
fdivp
lock
int3
aad
flds
ret
not
lock
out
out
lret
decb
ret
lret
lock
faddp
loopne
decl
lea
rol
jmp
ror
into
xor
aad
fistpll
shl
clc
cmp
test
xchg
test
lret
jmp
jmp
cmc
iret
hlt
aad
test
cmc
loop
ret
stc
in
mov
loop
loop
sub
neg
frndint
leave
stc
stc
std
cmp
mov
loope
std
test
aad
imulb
hlt
jmp
fistpll
lret
shr
cmp
ret
xchg
into
shr
ss
aaa
repz
shr
jecxz
xlat
aam
icebp
sar
sti
mov
out
out
aam
jecxz
int
test
cmp
lock
cmp
adc
ljmp
int3
mov
hlt
out
in
div
call
lock
ffreep
std
testb
enter
rorl
xor
out
xor
enter
sti
loope
out
fdivr
repz
out
loope
out
xchg
into
loope
cli
ss
cld
stc
ljmp
out
hlt
in
mul
std
cld
fcmove
ret
nop
xor
xchg
rcl
ret
clc
ror
cmp
clc
sar
into
test
sti
fcmovu
ret
loop
nop
out
loop
in
test
bnd
fdiv
aam
hlt
sti
stc
and
shl
jmp
aam
loop
icebp
cmp
clc
cmp
xor
cld
call
jmp
cld
rol
out
ljmp
clc
fidivrl
cmp
xlat
stc
call
rorl
lret
sub
mul
into
aas
fnsave
sar
dec
jecxz
jmp
iret
in
in
lret
test
je
jmp
mov
int
sub
movsb
adc
jle
add
fidivs
aas
std
cmc
neg
roll
lret
addl
xor
lds
jecxz
fcomp
cmp
sar
cmp
out
ljmp
cmp
rcl
enter
lret
cli
hlt
cmp
lock
cmc
adc
ror
xchg
lret
xchg
test
lret
ret
in
sarl
aas
fsubr
repz
ret
ret
std
rol
test
xchg
xchg
shl
fisttpll
shl
xrelease
fadd
aam
cmp
out
clc
iret
jmp
std
xchg
mov
call
in
icebp
std
cmp
cmc
in
out
out
stc
not
in
cld
xchg
mov
shll
jmp
jecxz
in
repz
ljmp
lret
leave
lds
xor
lock
sti
repz
cmp
leave
or
movl
lret
repz
into
in
repz
repz
addb
out
out
fsqrt
mov
out
loope
aad
out
cld
in
stc
rcr
adc
loope
fcmovu
jecxz
test
ljmp
in
out
shr
aaa
xor
icebp
rol
repnz
aam
mov
cli
mov
repz
loop
nop
repnz
lret
xlat
cmp
lret
sub
aas
test
aad
shl
fdivp
ljmp
fucom
xor
cs
lock
ljmp
jmp
std
out
icebp
iret
rcr
test
xor
aaa
in
lret
xor
shr
cli
roll
cld
jecxz
mov
xchg
lret
nop
and
lret
xor
int3
ss
repz
shl
icebp
aad
jecxz
fildl
mov
iret
xor
leave
frstpm(287
cmp
in
rcr
incb
enter
lock
fprem1
in
icebp
fdivrs
repz
into
fcmovu
fcmovbe
call
loopne
fimull
lret
stc
cmp
xlat
clc
lret
roll
clc
xchg
cmp
loop
jmp
fsubp
in
repnz
lret
out
in
cmp
clc
cmp
cmc
out
loope
aam
out
lock
ljmp
jmp
aaa
cmp
test
aam
fsubr
stc
in
fcmovu
fstp
fisttps
xor
cs
cmp
aas
out
icebp
into
xchg
cld
fiaddl
mov
int3
in
test
xchg
out
ror
mov
aas
in
loopne
clc
call
pushl
pushl
mov
pushl
mov
call
jmp
jmp
lret
rcr
lret
fstpl
jge
dec
rcll
add
add
stc
mov
in
jmp
in
jmp
cmc
cmp
xor
into
hlt
cli
sbb
xlat
fdivp
leave
out
repnz
mov
repnz
cmp
clc
hlt
hlt
stc
add
cli
rcl
clc
addb
in
ljmp
out
cmc
cli
xorb
loop
clc
xor
aad
out
xchg
test
movb
enter
fcomp
out
xor
leave
hlt
fcmovu
repz
jmp
int
iret
mov
fcoml
rcr
cmp
cmp
rolb
icebp
cmp
in
mov
sub
ret
fisttpll
in
div
jmp
ds
jecxz
test
repz
xlat
in
lret
out
loop
into
cmc
cmc
mov
fdivr
jmp
cmp
int3
or
icebp
sti
jmp
jmp
icebp
loop
jmp
jmp
shl
ror
int3
aam
cmp
idiv
cmp
fildl
nop
loope
xchg
xor
cmp
int
idivb
ljmp
ror
rcr
out
out
jecxz
into
fisttps
out
out
in
repnz
lret
icebp
fmul
in
cmc
jmp
int
test
shr
mov
popl
lret
int
push
jmp
repnz
rcl
aad
mov
mov
stc
mov
in
fmulp
in
lret
hlt
enter
lret
fcomp
aas
mov
test
std
cli
test
lret
and
idivb
aad
xor
out
cmp
loope
iret
ffreep
ret
shl
fstp
fadd
jmp
shl
out
xor
xor
fbstp
rcr
cld
xlat
shl
cld
fld1
enter
xchg
ljmp
out
fdivp
sti
aam
in
repnz
clc
incb
loope
lock
icebp
in
cmp
std
xlat
int3
mul
fcom
stc
test
clc
and
std
xchg
out
xchg
xchg
loope
ret
out
xor
aaa
lock
fidivrs
loopne
shl
rolb
sti
enter
std
xchg
call
in
int
jmp
fdiv
loopne
std
aad
mov
mov
clc
cld
jmp
lret
int
cld
enter
ds
cmp
faddl
in
jecxz
test
shl
xor
fcmovne
ror
ds
shl
cli
fneni(8087
not
cld
sbb
fldl
out
ret
out
cmp
stc
xor
aad
fadd
cmp
cld
sub
fcomip
ror
aam
lock
leave
ret
push
mov
sub
decl
movl
adc
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbb
jmp
leave
aad
fst
leave
fldl
cli
sbb
mov
cmp
jle
in
sar
lret
ds
cmpb
in
orb
out
aas
into
int
fcmovnbe
repnz
cld
aam
rcr
jmp
mov
fistl
icebp
stc
in
cmp
cld
lret
iret
int
rol
sti
out
ljmp
shlb
cmp
cli
lret
aam
not
idiv
aaa
lock
aad
out
testb
or
iret
lock
cld
icebp
cmp
ror
icebp
repz
test
in
jecxz
out
loopne
fiadds
fxtract
out
fxch
sarl
test
cli
call
mov
std
test
sub
cmp
cmp
out
cmp
jmp
rolb
decl
cmc
int3
ret
in
imulb
cmc
clc
out
shl
fcmovnb
out
test
sti
in
test
cli
xchg
mov
aam
cmc
in
clc
hlt
clc
enter
cmp
stc
ffree
roll
shl
xchg
xchg
jmp
das
clc
lret
repz
neg
loope
lock
fsubrp
std
mov
ljmp
jmp
repnz
aad
in
cmc
cmp
iret
imul
out
out
out
ret
in
fucomip
std
ret
in
out
repnz
into
xor
xabort
std
idivl
clc
cmp
cli
in
cli
mov
in
orl
int3
fcmovbe
loope
cmp
xchg
cli
jecxz
fcmove
cli
lret
ljmp
rol
iret
out
repnz
cmp
in
in
cli
mov
test
addb
mov
call
aad
shl
repnz
sar
or
adc
hlt
fdiv
xor
repz
int
cmp
icebp
not
loope
test
fucomip
in
xchg
xor
out
aad
xor
idivb
cli
cmp
repnz
bnd
fprem
fabs
mov
fcom
loope
in
icebp
fucomip
stc
xor
neg
ds
cmp
loop
clc
rcl
out
lret
jmp
xchg
push
subl
jmp
rcl
enter
fldl
push
xchg
in
test
add
add
xchg
in
xor
jmp
xor
into
repnz
sti
cli
test
cmp
aad
jmp
in
call
xchg
out
das
out
int3
jmp
clc
out
cmp
ret
vpmullw
sbb
test
in
shr
mov
ret
lret
cmp
repz
loopne
cmp
cmc
stc
ret
mov
imul
jmp
iret
fst
in
xbegin
into
xor
int
loope
neg
sti
in
fsubrp
leave
out
or
in
ljmp
int3
clc
loope
loop
ret
fidivrl
clc
ljmp
cld
out
in
loop
cmp
ret
xor
fdiv
cmc
ret
xlat
cli
clc
ffree
clc
clc
int3
enter
cmp
aad
ss
out
pushl
in
shl
fcmovnu
mov
jmp
incl
jmp
mov
not
repnz
cli
out
lock
leave
enter
in
std
loopne
cld
cmp
lock
divb
out
std
addb
mov
xchg
out
shr
shl
jmp
fistpll
fdecstp
test
cmpl
fadds
shr
in
fmulp
int3
enter
ss
sar
cld
idiv
clc
out
call
int
lock
shr
lret
clc
neg
xlat
int3
fstpt
cmp
cmp
loope
int3
sti
ljmp
mov
clc
out
icebp
icebp
fmulp
loope,pt
xorb
ret
cli
cli
mov
cld
mov
in
xor
in
in
pushl
xlat
into
loopne
lds
push
mov
lret
into
xor
into
fnstenv
fdivl
aam
cmp
shl
neg
stc
shl
sti
fldl
ljmp
shl
call
aaa
fistpll
shl
cld
in
loop
xlat
jmp
xchg
ret
enter
shr
in
div
cld
filds
testb
nop
mov
enter
in
jmp
cmp
loop
aad
cmc
fdivr
out
mov
xlat
cmp
dec
or
xor
adc
mov
andl
add
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
push
pushl
call
jmp
adc
mov
push
addl
push
test
je
mov
mov
xor
mov
sbb
jmp
xlat
aad
ror
cmpsb
xchg
jg
mov
sbb
jle
sti
mov
in
not
lret
out
f2xm1
icebp
sarb
cmp
fcomp
in
int
xchg
fcomip
test
mov
call
std
int
clc
rcl
fcmovbe
shl
lds
or
fcmovbe
fisttpl
jmp
cmp
rcr
aas
fnclex
test
cld
call
in
nop
repz
fsub
out
lret
ds
std
lock
test
mov
lret
ljmp
in
fcomi
leave
aam
in
divb
cmc
leave
test
stc
orb
cld
or
sub
cli
hlt
enter
cmp
lret
repz
xchg
cmp
std
stc
out
int
out
shl
lret
hlt
rcr
loop
cmp
cmp
stc
aaa
int
repz
out
flds
cmc
fndisi(8087
in
mov
in
iret
in
jmp
repnz
fdivp
cmpl
idiv
jmp
loope
fmull
cli
out
cld
iret
fmul
repnz
aad
icebp
sbb
cld
int
fisttps
lret
in
in
int3
repz
jecxz
not
xor
into
xlat
stc
sar
xlat
int3
cli
jmp
mov
stc
xor
sub
jmp
out
out
hlt
ret
aad
leave
fdiv
call
out
jecxz
in
imul
clc
fnsave
out
fdivr
rolb
int3
in
lret
out
mov
rcl
in
sub
cmc
in
ljmp
cmc
out
fdiv
testb
stc
test
adcb
lret
sar
fadd
cli
shr
ret
loop
mov
mov
call
mov
nop
repz
aaa
repz
das
cli
clc
iret
clc
stc
test
cmp
ds
loopne
stc
sbb
sti
sub
ret
jmp
aam
in
clc
icebp
clc
jecxz
test
rcl
leave
ret
fiadds
xchg
jmp
rol
in
out
rcl
cmp
cli
fisttps
jmp
ror
loop
int
xor
out
ljmp
fildl
mov
sbb
imul
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jb
sub
mov
add
add
sbb
jmp
int3
fstp
int
ficoml
fstps
mov
add
add
cmc
lret
leave
or
test
fadd
out
out
in
std
int3
rcr
div
cld
aas
clc
jecxz
cli
mov
mov
xchg
loop
bnd
loop
sarb
xor
cmp
cmpl
xchg
aam
and
jecxz
loopne
xchg
mov
shll
fyl2xp1
fidivrs
jmp
in
flds
sub
xchg
out
in
in
in
fucomi
cmp
dec
int
repnz
not
faddl
ljmp
call
fxch
loop
into
cmp
neg
filds
in
repz
leave
ffree
mov
fxam
fst
sub
int
fsubr
lock
cmp
out
lret
sti
rol
xlat
lret
enter
xchg
addb
cmp
call
iret
fcomi
int3
icebp
fcom
jmp
mov
iret
xchg
lock
hlt
iret
ret
xor
ror
fcom
iret
cmp
addb
div
fadds
xor
xchg
xor
not
call
into
cmp
push
shr
out
call
mov
int
lret
icebp
icebp
sar
in
jecxz
adc
clc
leave
out
in
xor
mov
jmp
in
cli
fyl2x
repnz
clc
hlt
fcmovnbe
shl
aad
fimull
lret
into
fimuls
stc
xor
shr
lret
loopne
xor
sti
cmp
mov
hlt
ljmp
rcl
repnz
fidivrs
fcmovnb
out
xchg
mov
cld
test
in
out
call
ss
stc
cld
in
adc
cmc
mov
mov
in
loopne
xchg
mov
divl
clc
xor
in
clc
sbb
in
xlat
repnz
xchg
rorb
ljmp
call
cmc
fildl
jmp
in
mov
lock
repnz
cli
clc
ror
faddp
fsub
mov
mov
loope
inc
int3
loope
xchg
out
test
in
sar
cld
cmp
aad
mov
mov
sbb
jmp
rol
xlat
lret
rcr
push
adc
adc
or
jle
add
incb
icebp
mov
loopne
fxch
xchg
sti
lret
nop
leave
icebp
hlt
xor
repnz
call
iret
int
shl
call
fsubrp
lret
addb
sti
enter
stc
xlat
std
shl
ret
test
jmp
fcmovbe
fsubr
mov
int
ss
ss
into
aas
jmp
rcr
rcl
stc
enter
fucomp
sub
xchg
cmc
fcom
xlat
lret
cmc
out
lret
cmpb
test
mov
jecxz
xchg
xchg
test
loope
shl
fucompp
hlt
int3
leave
in
aaa
aas
ret
fcmovnu
repz
fiaddl
aam
lds
in
aam
lret
cli
aad
ds
shl
sub
loopne
ret
ljmp
or
out
aad
fidivs
loope
xlat
lock
orl
jecxz
loop
ret
xchg
out
icebp
ljmp
cmp
sti
cmp
repnz
loop
test
mov
loopne
sti
repnz
xchg
out
ljmp
in
sar
cmp
shl
mov
ret
sbb
xchg
in
ljmp
or
loopne
hlt
ffree
xchg
in
loop
icebp
out
rcl
aad
iret
cld
icebp
icebp
out
cmp
cmp
mov
or
jecxz
ret
das
fidivl
out
jmp
xor
in
aad
cmp
sub
int
fdivp
jecxz
out
fdiv
ss
aad
in
sar
cmp
aad
add
cmc
ret
sti
in
lock
ljmp
aam
fcmovnbe
lret
repnz
cld
loop
repz
stc
cmp
mov
mov
cs
xor
idiv
out
enter
faddl
loop
out
jmp
mov
hlt
aam
lret
ror
cld
sti
stc
hlt
sub
loop
aam
stc
test
xchg
fdivrp
loopne
int
fsub
xchg
xchg
les
cmp
in
lret
ljmp
xlat
fsubr
addb
into
loop
addb
stc
fstpt
xchg
adc
sub
xor
sbbl
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
movzwl
add
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
mov
mov
xorl
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
jmp
iret
lret
rcr
aad
enter
mov
and
add
add
rcl
out
div
ret
cmp
and
int
enter
xchg
imul
fdiv
shl
shl
addb
mov
in
lock
in
xor
shr
cli
aaa
fcomip
lret
cli
test
std
fldl
xchg
hlt
aam
loope
cmp
cmp
xor
std
aad
xor
jmp
cld
fdivp
out
nop
fiaddl
loop
xlat
ss
ds
in
ror
test
mov
mov
nop
ljmp
leave
xor
cmp
xor
shl
hlt
in
xlat
sbb
mov
mov
mov
aam
lret
stc
repnz
aam
std
out
loop
test
lds
fcmovne
cli
cld
or
popl
rol
sub
std
xorb
test
mov
sti
loope
adcb
loop
ret
xor
cmp
ds
out
out
mov
fmul
ret
sti
fucom
icebp
test
decl
repz
stc
aad
aad
repnz
hlt
aad
out
out
int3
out
call
ret
in
clc
repnz
or
bnd
mov
mov
mov
or
xchg
shll
enter
rcl
cmp
cmp
std
in
cld
repnz
jmp
sti
std
in
out
cmc
into
rcl
aad
xchg
cmp
in
xlat
cld
addb
test
stc
ss
xor
div
shr
fdiv
ds
rcr
xchg
in
int3
rol
loop
neg
fucomi
fcom
repz
icebp
iret
in
icebp
fdivrp
test
sti
out
out
in
xchg
fucomi
cmp
std
sar
fldl
icebp
mov
out
fisttps
shl
sbb
aad
ret
int3
leave
in
xlat
fmul
cmp
iret
loop
test
cli
jecxz
mov
int
loop
shr
fpatan
lock
rcr
int
addb
xlat
aam
in
fsub
nop
orb
lret
movzbl
mov
mov
movl
je
movl
cmpl
je
cmpl
jne
pushl
push
call
xor
add
dec
mov
jmp
adcl
mov
xor
decl
jmp
rol
xlat
aad
fstp
lds
fimuls
pop
aaa
push
xor
cmp
jle
lret
fdivs
repnz
aaa
cli
shr
in
sti
rcl
xchg
jmp
enter
roll
xor
in
ljmp
stc
rcl
cli
cmc
sti
shl
fadds
lret
jecxz
into
not
shlb
in
aad
aad
faddp
neg
shl
cld
ret
aad
in
mov
mov
out
mul
int3
cmp
ror
cmp
iret
loopne
sub
test
cmc
xchg
nop
repnz
sti
clc
cmp
clc
in
ror
fdiv
repz
adc
mov
lret
fdivr
fmul
std
mov
enter
jmp
into
out
sti
sti
loopne
out
into
rolb
lret
or
ljmp
cmc
aam
iret
imul
shl
ffree
and
not
enter
mov
mov
repnz
jmp
out
jecxz
cmp
cmc
in
stc
aam
sbb
jmp
int3
cli
test
nop
ror
das
aaa
call
xor
rolb
sti
test
clc
cli
jmp
out
aad
loope
in
fcomp
stc
xor
loope
fdivr
test
hlt
cli
fmulp
int
int3
xchg
mov
stc
call
hlt
fmul
lret
iret
out
inc
orb
int3
icebp
int3
out
icebp
jecxz
aad
std
into
shr
aaa
cmp
sar
sar
enter
ljmp
xchg
int
cmc
cmp
xor
imul
not
shlb
fdiv
cmc
and
lret
sti
std
sub
xchg
xchg
out
in
shl
jecxz
hlt
xlat
out
fmul
in
stc
stc
vpmaddwd
lret
fisttpll
out
clc
into
xor
leave
lret
int3
icebp
lret
icebp
rcl
cmc
rcr
xlat
and
mov
in
iret
iret
hlt
lock
divl
lock
icebp
fcmovnb
repnz
fsub
leave
xchg
loop
mov
leave
enter
cld
dec
into
les
fsubr
stc
sub
mov
repnz
cmp
repnz
fmul
sar
in
sar
jmp
vpor
ret
movl
cmp
movl
jne
andl
pushl
xorl
call
mov
xor
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
xor
add
cmp
je
pushl
pushl
call
jmp
aam
fadd
fst
aam
add
jle
enter
cwtl
sub
jle
add
in
xchg
xor
out
aaa
aam
std
cmp
cmp
ffree
aad
lret
in
test
in
test
int3
sarb
cmp
xor
neg
clc
xchg
xchg
fdivrp
fdivrp
fyl2x
and
in
sub
leave
out
repz
cmp
out
cli
fmuls
mov
mov
rcl
in
lret
xor
int3
in
cmp
icebp
test
jmp
jmp
rcr
xor
sar
std
loop
lock
jmp
stc
mov
xchg
fildll
int3
enter
std
shr
out
loopne
ffreep
idivl
lock
cmp
mov
jmp
cmc
out
divb
out
sti
shr
not
aas
ds
in
iret
int
xchg
in
repnz
xor
test
out
in
call
out
lret
sti
sti
xchg
xchg
xor
out
call
incl
hlt
cld
cld
in
cmp
xchg
iret
rcl
out
stc
hlt
fcomi
ss
fprem1
cmp
not
hlt
hlt
fiadds
int3
loope
xchg
ss
ret
rcr
sar
leave
lret
cmc
in
out
jmp
jmp
enter
aad
cs
sti
vpminub
fnsave
cli
cmp
rcr
mov
cli
fcmovbe
addl
xor
in
stc
iret
ljmp
shr
and
cmp
aad
enter
loop
out
ror
xor
leave
leave
icebp
jmp
shl
out
in
lds
mov
in
xchg
loop
xor
out
jmp
out
enter
std
rcr
icebp
rcl
cmc
or
mov
lock
loope
faddp
clc
cmp
aaa
cmp
call
cmp
mov
add
test
int3
enter
enter
cmp
xlat
lret
ds
loope
cmp
aad
hlt
in
std
incl
mov
cmp
repz
out
aam
cmp
aad
fxch
cli
mov
mov
mov
xor
add
jmp
rcl
int
ffree
fstpl
scas
fistpll
cmp
jle
enter
test
xchg
sti
xchg
repz
cmp
lock
in
aaa
shr
ret
repz
loope
jecxz
into
fists
in
test
int
cmp
idivl
out
faddl
inc
and
loope
shl
imul
xor
in
cli
cmp
ds
cmp
shl
cld
sti
fcmovnbe
lret
int3
testb
xchg
out
aam
sarl
shr
iret
int3
stc
icebp
lret
fsubr
movl
fdivr
xchg
int3
repz
jmp
shlb
aam
jmp
icebp
rcl
sarb
rolb
cld
mov
lret
std
enter
xchg
out
in
call
stc
in
cmp
clc
xchg
loope
sub
test
mov
test
out
fsubr
loop
out
idivb
vshufps
shl
cmp
aam
in
aad
decl
fists
out
fsubr
fcmove
hlt
cmp
in
fcos
aam
fucom
stc
stc
enter
out
loope
loop
jecxz
xor
ss
fstp
cmpb
int3
clc
in
xlat
aad
repz
mov
in
les
stc
repz
jmp
clc
cmc
repz
out
xchg
xchg
sub
xlat
ss
cmc
jmp
icebp
cmc
out
loopne
repz
cmp
enter
test
jecxz
in
in
into
cli
jmp
out
shl
jmp
out
out
nop
nop
loopne
aas
ljmp
out
aaa
repnz
rcl
adc
in
repz
jmp
mov
shl
lock
sub
shr
aad
jmp
in
jmp
cmp
cmp
faddl
loopne
in
idiv
xor
aad
std
cmp
fldl
fcom
aad
mov
mov
int
out
mov
sub
loop
aad
shl
fidivrl
test
aam
rcl
mul
cld
test
int3
fdiv
jmp
jmp
aaa
cld
cmp
out
loopne
filds
jmp
ret
jecxz
in
in
xor
xor
std
fcmovnb
rcl
cmp
je
mov
mov
jmp
int3
aas
rol
fst
fadd
ljmp
jg
sub
jle
out
test
add
shl
mov
jmp
rcl
xchg
ljmp
aaa
ror
idivl
aam
rcl
jecxz
fninit
test
mov
or
mov
cmp
xor
fnstcw
fdiv
out
out
in
ds
clc
std
fmuls
orl
fdivrs
rcl
fdiv
cmp
cld
rolb
mov
stc
xchg
ret
sarl
cmp
out
ljmp
fxch
out
std
out
test
lret
lret
out
cmc
out
rcr
lock
rol
sti
shl
ret
movl
xchg
nop
fsubrp
enter
xor
hlt
stc
std
lock
cli
test
movb
vpcomd
sti
cmp
fidivrl
xor
shl
cmp
jmp
xlat
addb
lret
out
lock
into
cmp
clc
cld
rcr
aam
clc
in
inc
mov
sti
call
fnstenv
int3
call
sti
leave
clc
aad
cmp
repnz
out
test
rcll
ret
in
ror
sub
in
cmp
fidivrl
xchg
sti
bnd
std
out
int
sar
fdivs
ror
icebp
out
iret
mul
icebp
out
fadd
sbb
cli
cmp
fxch
call
mov
divl
aas
std
shl
in
ds
out
in
into
xchg
loope
in
enter
out
stc
leave
icebp
shl
aas
dec
not
fsubr
in
fcmovnu
xchg
xchg
hlt
jmp
hlt
out
jmp
out
cmp
cmc
cmc
int3
loopne
cmp
loopne
cli
sbb
shl
lock
xor
shl
idivb
out
xlat
hlt
aad
rolb
fdivr
mov
in
or
in
iret
out
repz
icebp
lret
div
adc
xchg
jecxz
into
out
shl
loope,pn
clc
in
aad
loopne
cmp
call
testl
shl
shlb
xor
cmp
in
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
jmp
aas
ror
fcomp
fnstcw
dec
int
dec
popa
nop
sbb
das
add
add
xor
rcr
inc
in
jmp
xor
lret
flds
out
ret
fdivs
in
rcr
in
repz
cli
cmc
loop
mov
int3
lock
out
jmp
in
ret
int3
aaa
test
clc
rolb
fadds
std
lea
cmp
fnstcw
ds
cmc
call
loop
sti
hlt
mov
std
hlt
jmp
das
in
cmp
out
not
out
shl
int
fistpll
testl
or
mov
divl
into
xor
fucomi
fsubrp
into
int
test
mov
enter
xchg
repnz
xchg
clc
out
in
icebp
xor
cmp
hlt
std
mov
mov
faddl
lock
cmp
ljmp
xlat
ret
iret
test
std
movb
in
enter
out
repnz
in
out
std
cmp
ret
stc
test
jecxz
fcmovnb
test
sti
xchg
leave
mov
ror
fdiv
fdivrl
cmp
xor
cmp
sarb
call
fcmove
sbb
fucomp
fsub
xchg
cs
imul
cmc
cmp
sar
aam
xchg
enter
fucomi
int
fmul
mov
xlat
fxam
rcl
cmc
cmp
shr
in
test
movl
in
loope
mov
vpaddq
in
int3
aaa
sti
out
cli
testl
ret
mov
mov
shl
xbegin
cmp
addb
fcmove
xchg
in
out
in
sarl
call
loop
fidivrl
out
in
sti
xchg
jmp
xor
in
repz
idiv
aad
int
test
out
and
fmull
in
in
jmp
repz
out
cmp
iret
repnz
fadds
roll
das
shr
aam
idivb
aam
cmp
fabs
in
sti
testl
sub
mov
jmp
aas
xlat
xlat
rcl
ror
fld
cs
and
xor
add
add
in
ljmp
fcmovne
aas
sti
mov
icebp
cld
loop
out
neg
loop
fisttpll
lock
leave
sti
cmp
in
out
out
test
aam
clc
int
lea
int3
ret
leave
ret
test
ss
int3
xor
lret
xlat
jmp
fdivr
jmp
cmc
sub
iret
rcr
iret
iret
out
rcr
faddl
addl
enter
int3
cmc
ret
in
out
out
cmc
aam
fucom
lret
sti
fcmovnbe
mov
cmc
aad
mov
jmp
int3
ljmp
cmp
testb
out
mov
into
enter
cli
cli
fnstenv
lock
sar
rcr
jmp
fcomp
clc
ljmp
icebp
aaa
repnz
cli
in
cmp
cmp
aas
fnstcw
xchg
in
shr
mov
in
rcr
clc
clc
fidivrl
rcl
shl
lds
faddl
sub
shrb
in
int
ret
fdivrp
aas
xchg
rcr
stc
int3
mov
call
int3
out
repz
cli
aas
loopne
std
hlt
aam
std
fneni(8087
mov
sti
mov
out
xor
leave
cmp
ds
cmp
jecxz
aad
loop
out
in
out
mov
shr
in
cmp
out
ljmp
repz
testb
xlat
into
sti
out
mov
fnstenv
aaa
aad
call
cmp
xchg
mov
jecxz
cld
cmp
out
sub
ret
int3
cli
cmp
loope
cmp
lock
cld
out
ret
mov
call
sub
std
in
fcmove
idiv
cmp
lock
mov
out
xchg
xor
in
das
fcmovnb
fcmovu
in
adc
repnz
aad
cld
fldl
jmp
repz
lock
in
int
sti
testl
sub
or
jmp
into
aam
xlat
int3
fcmovnbe
frstor
nop
jmp
icebp
mov
add
xchg
xchg
mov
repz
leave
repz
cld
ss
jecxz
addb
iret
fcmovu
roll
ret
out
idivb
ror
cli
std
fdiv
icebp
shl
lock
sti
sub
mov
iret
test
jecxz
out
aam
in
stc
sarl
aad
aaa
iret
cmc
fadds
faddl
test
stc
fdivr
lret
and
sar
test
fiadds
int3
mov
xchg
ljmp
cmp
enter
repnz
sti
sar
fucom
rcl
ffree
incb
in
out
shl
shl
cmp
cmp
fdiv
loope
fcmovne
ret
cmc
lret
in
in
mov
mov
xchg
lock
sti
not
fcmove
cld
cmpb
int
xchg
out
fsub
or
rol
jmp
lret
xor
repz
std
leave
mul
cmp
in
mov
sbb
jmp
repnz
in
clc
xor
repnz
ss
lret
frndint
out
xlat
sar
sti
mov
loope
cmp
xchg
cmc
xor
cmp
loope
shr
out
in
sti
jmp
mov
loop
in
aaa
cmp
fcom
rol
cmp
icebp
or
add
in
add
loop
mov
sbb
iret
in
ss
clc
fstp
cmc
aam
in
hlt
fneni(8087
sar
enter
std
in
xchg
out
xchg
xchg
xor
int3
icebp
sti
cmc
stc
cmp
cmp
loopne
cli
call
hlt
sti
aas
vpsubw
enter
jmp
loopne
repz
rcr
xor
leave
fndisi(8087
not
iret
lds
jecxz
cli
out
leave
jecxz
rorl
out
lds
iret
aad
aad
cld
repz
ret
xchg
leave
loope
test
lret
into
stc
enter
rcl
xlat
xlat
call
in
mov
iret
into
lret
out
jmp
ss
cmp
cmp
aam
cld
aam
ds
loop
mov
out
jecxz
ss
jecxz
fdivrp
stc
out
add
fisttps
rclb
jne
pushl
call
jmp
lret
rcl
fstp
xchg
sti
inc
in
loope
xchg
das
je
add
add
loop
xchg
xchg
lret
cmc
call
clc
out
div
fcomip
shl
stc
fcompp
mov
out
and
adcl
aaa
jmp
iret
xor
xlat
out
in
fld
ret
test
fxch
enter
in
fimuls
ret
ror
cmc
lret
into
aad
leave
cmp
iret
loope
clc
cli
enter
xchg
mov
rol
ljmp
rcl
ljmp
test
out
lret
mov
mov
ljmp
shr
fidivl
aas
lock
in
mov
shl
lret
sti
test
clc
stc
loop
lock
aaa
fucomp
adc
aad
in
add
les
les
xlat
lock
sarl
in
add
xchg
std
enter
mov
divl
fxch
fsubr
ror
lock
xchg
fst
ljmp
sti
loope
call
in
neg
int
shl
aad
test
aas
jecxz
rcr
in
mov
rcll
enter
enter
cmp
int
repnz
stc
fildl
shl
int3
clc
ss
in
sar
out
cmp
xor
sti
stc
loopne
mov
mov
xchg
test
xchg
loopne
xor
cmp
lock
sar
hlt
sar
fldl
cld
leave
cld
cld
lret
shl
rcl
leave
shl
leave
cli
jmp
test
stc
jmp
nop
repnz
call
int
fistpll
rcr
cld
loop
out
xchg
repnz
std
nop
xchg
jmp
lret
xor
fucom
roll
lret
xchg
mov
sbb
hlt
iret
clc
not
stc
fdivrl
int3
icebp
rcl
div
enter
lret
loopne
addl
sub
rcr
ss
aad
ljmp
in
ret
cli
stc
stc
jecxz
out
xchg
mov
loope
shl
ss
in
ljmp
iret
mov
jmp
vshufpd
ror
adc
push
add
push
cmp
jle
std
rorb
out
mov
aam
xchg
xor
in
fucomi
cli
idivl
stc
repnz
aad
mul
vpsubw
fstp
ret
lret
ret
jmp
lret
in
aad
lock
xor
std
repnz
shr
xorb
ret
cmpl
aam
addb
xchg
repz
cmp
jmp
stc
fdivr
ljmp
fsubp
lret
out
out
jmp
iret
test
jmp
cmp
cmp
cmp
cmp
icebp
int3
loop
out
fsubrp
leave
filds
les
rcl
enter
fnstcw
test
mov
cmc
jmp
xchg
icebp
cmpb
jmp
shr
cmp
not
fidivrl
cmp
sub
int
mov
mov
mov
in
das
out
fprem
into
clc
cmp
stc
loop
cmp
cmp
hlt
fcmove
fdivr
jmp
out
shl
out
hlt
int3
xlat
int
stc
add
fadd
jmp
out
mov
mov
call
bnd
cmp
cmp
int
and
fimull
xchg
sbb
decl
aad
fmul
cmc
sub
out
test
enter
fldl
out
in
les
cmp
xchg
addl
out
test
fldl
in
out
aam
in
into
std
out
cmp
movb
xlat
iret
inc
sbb
mov
xor
cmp
ret
repnz
lock
std
jmp
mov
decb
out
repnz
clc
jmp
lock
sti
sbb
hlt
jmp
ds
loopne
popl
rol
fnstenv
iret
xlat
hlt
ss
aas
cmp
aad
div
mov
jecxz
loope
fcmovnb
loope
xchg
fsub
ret
cld
std
call
cmp
aad
loop
rcl
cmp
mov
aam
imul
lret
in
repnz
sti
xlat
and
clc
cli
shl
addb
leave
xchg
in
ljmp
idivl
mov
xor
jmp
int3
aas
ret
sbb
roll
cmpsl
cmp
cmp
jle
neg
call
bnd
loope
loop
xlat
fucomi
ret
xchg
repnz
icebp
int
aas
sar
clc
loop
ret
filds
xchg
in
repz
jmp
ss
xor
lock
push
aas
in
shl
cmc
inc
xlat
icebp
mov
xchg
rclb
lret
aaa
repz
out
ror
rcr
sarb
stc
testb
mov
nop
in
loop
in
mov
lret
in
jmp
repz
cmpl
lret
fucomip
icebp
call
hlt
fxch
enter
jmp
repnz
shl
out
ljmp
loopne
mov
xchg
out
aam
div
std
fxch
cmp
fucomp
into
jmp
test
std
int
in
lret
leave
jecxz
jecxz
out
loop
ss
std
cmp
aas
xor
icebp
out
fcmovu
mov
xchg
xchg
fcomi
rolb
fnstenv
fmulp
lock
out
rcr
repnz
out
cld
in
out
ljmp
aad
lret
aad
fcom
into
in
clc
dec
cmp
clc
ds
cmp
jmp
icebp
loope
ret
xor
loopne
iret
stc
lret
fdivp
sbb
xchg
loope
out
sub
sar
mov
xor
rcr
aaa
cli
jmp
shl
ror
imul
fucomp
ljmp
in
lock
iret
xor
cmp
repz
call
jmp
xchg
xchg
xor
cmp
ss
in
rcr
fnsave
ret
not
loop
cmc
mov
repz
imul
xor
iret
cli
out
fmul
aad
fxtract
xor
fucomp
cli
fneni(8087
mov
out
fsin
in
into
test
in
xor
cli
leave
cmp
fsincos
sbb
in
clc
imul
sbb
xchg
loope
sub
jecxz
fnstenv
clc
int
fdivrp
rcr
hlt
aam
ds
loope
cld
cmc
in
out
shl
xor
call
icebp
out
rolb
cli
mov
icebp
jecxz
in
iret
nop
fcomip
aaa
int
ret
cmp
jmp
rol
rcl
rol
aad
sahf
xor
push
and
cmp
jle
add
xor
fcmovnbe
cmp
ljmp
cli
loop
jmp
cld
mov
xor
xor
jmp
aad
in
jmp
xorb
xchg
mov
jecxz
and
jmp
xor
cmc
fdiv
aad
hlt
aas
sti
fimuls
iret
shr
out
xchg
loop
int
aad
in
sti
jmp
repz
xlat
jecxz
mov
mov
xor
xor
in
lret
std
fucomip
ror
aas
rcl
jmp
stc
mov
in
in
fiadds
xor
in
rcl
shl
in
fcmovnu
or
cmc
xchg
out
idiv
lea
sub
cld
xlat
int
aad
loopne
add
hlt
xchg
cmp
in
nop
test
xor
cli
call
jmp
idivb
out
aad
xchg
rcr
leave
sub
iret
int
in
lret
in
loopne
ret
std
add
lea
repnz
cmc
mov
xor
repz
fidivrl
loope
into
fincstp
clc
clc
rol
testb
mov
call
clc
repnz
in
cmp
ret
cli
sarb
fdivrs
mov
nop
leave
rcl
icebp
test
lret
aam
ss
int3
fstp
rcr
rol
xchg
clc
leave
lea
xchg
out
jecxz
loopne
shr
fdivr
out
aas
sarb
int3
cmp
ret
test
std
fldpi
xchg
enter
test
out
repz
out
in
in
aaa
fxtract
fistpll
in
incl
loop
fsts
xchg
icebp
xor
out
out
cmp
in
fdivrp
rcl
in
test
lds
xchg
rclb
ret
shl
out
out
cld
ds
test
lock
out
test
lret
icebp
fisttps
xor
icebp
in
sar
xor
add
xchg
sti
cld
clc
ret
stc
lret
out
in
repz
in
xor
loope
cli
in
or
ret
ret
cli
mov
lret
faddl
add
jmp
aad
mov
mov
int3
das
jp
add
add
xchg
int3
in
int
fadd
repz
loop
fnstsw
aad
and
xchg
shr
hlt
jmp
clc
clc
cmp
ror
sti
fxch
out
test
in
cmc
jecxz
test
in
lock
jecxz
repnz
enter
sti
int
fnstsw
jmp
cli
roll
in
fdiv
sub
cld
fndisi(8087
loopne
enter
sub
xlat
out
cmp
ljmp
clc
sub
enter
cli
leave
out
mov
aam
xor
aam
rcl
in
leave
loop
mul
out
orb
clc
lock
lds
xlat
fdiv
cmp
xlat
cld
idiv
fsubr
clc
leave
hlt
test
sar
int3
test
int3
enter
std
fucomp
sub
xchg
out
cmp
xchg
nop
out
xor
das
ljmp
icebp
loopne
stc
ret
ds
add
xchg
mov
shrb
aad
into
leave
call
shl
fadd
hlt
ffreep
into
mov
aam
aam
xor
in
out
in
jecxz
jmp
xor
test
cli
cld
call
hlt
into
das
fdivs
fstp
jmp
cmp
xor
xchg
ljmp
xchg
bnd
lret
fsubr
call
lret
ds
repnz
leave
ljmp
leave
cmp
xor
fsin
push
in
fdivp
rcr
xchg
in
fsubrp
std
fists
out
aad
out
cmc
ror
lret
incl
cmp
std
lret
enter
rcl
call
xor
out
cmp
lock
loop
test
fcomip
mov
testb
jmp
loopne
out
out
lock
loopne
aas
rorl
xchg
shr
into
xchg
enter
jecxz
fcmovb
fidivl
iret
xlat
cmpl
vpaddq
out
mov
fdivp
mov
jmp
repnz
repz
ret
leave
or
lret
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
jmp
leave
aam
aad
int
fisttpll
scas
mov
xchg
sbb
roll
cmp
jle
into
test
mov
out
in
int3
xor
into
lret
cmp
cmp
out
int3
cmp
std
repz
test
test
hlt
lock
xor
fidivrs
cmp
in
jecxz
loope
fucomp
fcmovnu
mov
into
mov
out
in
call
cli
sti
lock
out
into
fsubrp
out
iret
xchg
call
out
sbb
out
cmc
repz
rcl
xor
cmp
cld
cmp
loopne
loopne
cld
repz
mov
in
xchg
fistl
xor
sub
repnz
shl
clc
fisttps
cmc
fstp
sbb
adcb
cld
out
int
into
cmp
roll
fisttpl
out
test
imul
iret
icebp
cmp
int3
fld
call
clc
idiv
fisttps
xchg
mov
int
loopne
aam
fcomp
out
call
out
aas
icebp
icebp
std
fcmovnu
stc
loop
shr
mov
aaa
in
sar
icebp
fiadds
xor
cld
lock
lret
test
iret
shll
int3
hlt
cmp
cmp
repnz
sar
cmc
hlt
cmp
loopne
aad
mov
sar
jmp
rol
xchg
xor
cmp
aam
lret
cmc
rcr
rcr
ds
in
fsubr
call
sar
jmp
jmp
aam
cmp
cmp
cld
out
ret
cmp
loopne
int3
cmp
rcr
fcomip
into
sar
repz
jmp
cmp
int3
sarb
icebp
idiv
cli
fcmovnu
mov
std
fstp
ret
lock
orl
cmc
rcr
fndisi(8087
cmp
rcr
mov
out
call
std
int
jmp
ret
out
into
sub
aad
out
sar
fmul
cld
in
faddl
ror
in
not
cmp
test
in
icebp
cmp
xor
mov
mov
test
into
icebp
out
clc
cmp
aad
xlat
rcl
xlat
sti
neg
mov
into
test
xchg
xchg
mov
mul
imul
xor
in
lret
rcr
cli
fidivl
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
jmp
enter
fcmovu
int3
aam
in
add
ret
add
add
cli
enter
fsub
filds
loope
fxch
xor
out
hlt
call
rcl
xchg
xchg
fmuls
xor
jmp
aaa
std
xor
push
clc
lret
cmp
enter
int3
push
rorb
int
iret
shr
stc
repnz
add
out
jmp
test
loop
loope
xchg
rolb
sub
lock
ret
faddp
in
int3
enter
repnz
in
jmp
in
cmc
call
aad
rolb
lret
loopne
or
in
aam
sub
fdivs
stc
cmp
xor
clc
fsub
int3
iret
out
in
in
ret
mov
out
mov
lret
out
lock
xor
cmp
repnz
aad
rolb
fincstp
fcmove
enter
loope
int3
lock
test
cli
xor
loopne
sti
in
loop
std
lock
xchg
ror
shl
int
out
roll
xchg
aam
out
out
ljmp
das
fmul
in
in
in
faddp
sarb
out
aam
sti
aam
cld
int
out
in
fists
loop
repz
in
aad
sti
cmp
fstp
sbb
mov
lret
out
out
out
divb
xor
jmp
cmp
xor
aad
ret
mov
leave
in
out
mov
fcom
cmc
lret
aam
aaa
out
or
out
and
xchg
into
hlt
in
xchg
fadd
xor
sub
aas
cmp
in
fildl
repz
cli
in
enter
fucomp
rcl
lret
int
xor
rcr
in
aas
into
jmp
out
jecxz
in
out
into
xchg
in
out
vpminub
or
idiv
cmp
fiadds
cmc
enter
in
shl
xor
xor
in
fcmovnb
icebp
int3
into
fidivrs
cli
jecxz
test
aas
out
fcomp
mov
sub
in
nop
xchg
leave
stc
loop
clc
aaa
int3
lret
fcomps
lret
jmp
aas
int3
mov
std
int
pushf
lea
add
add
jmp
jecxz,pt
ds
sti
out
std
fldlg2
repnz
icebp
icebp
leave
lret
rcr
shll
loop
neg
xchg
clc
xchg
orl
in
cli
call
ds
neg
mov
enter
loopne
popl
lret
leave
icebp
hlt
fcomp
shl
std
cmp
icebp
fldpi
test
out
xchg
out
loop
mov
loope
xlat
hlt
jecxz
cld
lock
ss
rol
cmp
stc
shl
cmc
in
in
fucomip
leave
loop
ror
shl
sub
xor
ror
shr
aad
ret
loopne
stc
roll
sti
in
pop
mov
xchg
fstl
fidivrl
xlat
cli
stc
xlat
xor
cld
sar
aam
mov
mov
lret
xchg
xchg
out
or
hlt
fsub
fxch
cmp
in
cld
push
shl
out
rcr
aam
int
cli
xchg
out
std
out
add
aad
aad
fcmovbe
xor
in
test
std
test
lret
test
ljmp
fcmovu
lret
dec
cld
xlat
testl
in
testl
loope
rol
out
lret
int3
fcom
loope
idivb
cmc
aad
jmp
mov
lret
fdivs
fucomi
cmp
push
hlt
fdivrl
icebp
neg
xchg
fdivr
iret
int
bnd
out
lock
int3
cld
cmp
test
xchg
jmp
mov
sti
int
call
fldpi
in
jmp
fistpll
in
and
repz
xbegin
into
out
xchg
xchg
loope
fdivs
divl
cmp
testl
jecxz
iret
fmull
clc
ss
shl
ljmp
fidivrl
adc
imul
in
in
fdivr
xchg
jmp
call
leave
leave
fdiv
cmp
into
lret
test
ret
cmc
fsub
stc
clc
decl
jecxz
xchg
in
shl
fcmovnbe
xor
aas
in
cld
fucom
out
in
loop
out
enter
ret
sti
icebp
int
icebp
xor
jmp
sub
xchg
dec
jmp
lret
int3
fcmovnu
mov
test
movl
jle
into
aam
cmp
rcl
loopne
div
repz
fucomi
loope
lret
in
rorl
cmp
cmp
hlt
std
icebp
in
icebp
les
clc
lret
xchg
fcomi
jmp
cmp
not
rolb
std
test
lret
fmulp
loop
out
hlt
divl
cli
std
stc
int
fnstsw
int
aam
sti
aad
add
out
int
xchg
ret
sti
sti
enter
cmp
loope
loop,pt
cld
aas
in
cmp
in
sti
xchg
fstl
repz
shlb
int
lret
rcl
in
in
out
decb
mov
in
jecxz
loop
lret
clc
lret
rcr
cmp
lock
iret
idiv
adc
ffree
enter
lret
nop
lret
aad
ror
out
das
sti
xor
shl
xchg
mov
ret
clc
mov
shl
mov
in
fcmovne
ljmp
out
add
loopne
ret
call
int
loop
lret
out
cmp
loope
shl
in
not
clc
clc
ffreep
in
jmp
jmp
rclb
lock
xor
std
loop
rol
rol
xor
mov
mov
lea
stc
repz
cli
in
aas
in
cmp
loopne
xchg
idiv
xchg
out
out
xchg
rcr
repnz
clc
aaa
ljmp
in
cmc
test
sbb
vpaddsb
out
cli
xchg
in
out
xchg
aam
rcl
call
iret
aas
fsqrt
shl
ret
test
fdivr
mov
mov
mul
xor
icebp
enter
stc
iret
ss
call
fld1
lock
aaa
cmp
out
fdivr
fcmovu
repz
push
ret
in
mov
xchg
std
ljmp
shr
iret
ljmp
test
sti
repnz
int3
leave
out
jecxz
xchg
aad
int3
xor
ds
aas
int
cmp
rol
fst
sti
int
filds
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
mov
rcl
ror
fnstcw
lret
or
xor
cmp
jle
in
out
xor
out
icebp
cmp
lock
shl
loope
mov
lret
leave
mov
out
lret
xchg
xchg
hlt
fsub
clc
xlat
out
div
fdiv
lock
aad
ds
leave
in
les
in
xor
clc
cld
clc
rcl
in
test
cld
repnz
faddl
out
mov
xchg
div
xor
out
cmp
fnstsw
cmp
and
test
cmc
mov
loope
jmp
ret
aam
enter
cli
cmp
cld
shl
repnz
icebp
enter
xabort
fcmovnu
loope
xchg
ljmp
enter
div
into
clc
ds
testl
repz
call
iret
jmp
std
cmp
cmc
std
rol
hlt
jecxz
jecxz
xchg
out
mov
aad
shrb
xor
out
xor
lret
fstpt
fsub
loopne
out
or
fcmovnb
ffreep
lret
rcr
not
repz
repz
std
sarl
lret
xor
mov
hlt
fcmovnu
out
mov
out
lock
ss
cmp
sti
not
cli
not
enter
cmc
in
mov
lret
fimuls
cmp
shll
cmp
lret
idiv
aas
loopne
loop
fildl
rolb
jmp
lret
in
aam
xor
shr
shl
mov
in
lock
cmc
cmp
fcmovb
lds
shr
repnz
in
loopne
cmc
call
in
mov
sti
mov
mov
xor
out
repnz
cld
loope
loop
rol
cld
hlt
mov
std
orl
clc
xlat
rcr
faddp
and
test
and
call
in
cs
testb
in
rorl
into
orl
aaa
lret
shr
jmp
fstp
fchs
repz
jecxz
shr
mov
lock
ljmp
out
not
cmp
leave
xor
into
aad
rol
sti
loop
fiaddl
imul
mov
jmp
aam
int
int
aam
xchg
inc
lret
pop
cmp
add
add
xchg
mov
orb
into
xor
int3
cmp
int
cmp
neg
in
loopne
mov
and
ret
loop
fdivr
xlat
idiv
jecxz
icebp
sar
xchg
sub
enter
xchg
mov
into
jecxz
xor
ds
in
std
repz
test
in
aam
or
std
xchg
xchg
imul
ret
out
ss
cmp
std
ret
in
mov
iret
mov
loopne
cmc
xor
aaa
into
out
cmp
cmp
jmp
into
fdiv
cli
test
xchg
loopne
out
mov
das
cmp
in
aaa
into
aas
in
int3
cmp
cmp
call
and
icebp
iret
jmp
nop
std
call
repz
xor
hlt
cmp
mov
mov
fists
hlt
ret
xor
int3
fidivs
rcl
cmc
fildl
fidivrs
fstp
mov
cmp
out
cmp
fdivr
xor
loope
jmp
std
incl
xor
xor
int
lret
lret
cmp
repnz
shl
xlat
out
xchg
lea
das
sarl
cmc
shr
iret
aaa
aad
in
cmc
loopne
cld
repnz
out
out
addl
hlt
lret
clc
lret
lret
ljmp
int
xlat
call
fcmovu
in
orl
out
lock
xor
addl
jmp
sbb
xchg
enter
xor
jecxz
std
div
repz
mov
loope
fucomip
xchg
rclb
out
iret
aaa
out
leave
jmp
fdivp
repz
lea
xchg
cmc
iret
subb
shl
lret
aad
fsincos
lock
loop
icebp
out
fmull
sti
leave
mov
lock
jmp
xor
fldl
sti
fcomp
aam
out
std
jecxz
in
loop
in
fprem
cmp
out
cli
jmp
icebp
out
loopne
mov
xorb
mov
lea
jmp
rcr
int
stos
outsl
int3
nop
inc
fs
jle
add
clc
in
lret
loope
enter
test
lret
int3
hlt
fcmovne
clc
cmp
addb
mov
xchg
repz
ret
das
lock
fcom
out
out
jmp
ret
loop
out
mov
jmp
into
or
xor
lret
ret
clc
div
iret
neg
loop
stc
in
ds
xchg
loop
test
aad
shl
int3
cmp
leave
fdivrp
aad
cld
aad
cmp
and
jmp
call
loop
xlat
out
hlt
fsub
cmp
aad
sar
iret
test
mov
cli
mov
lret
test
rol
lock
cmp
cmp
aam
into
loop
xchg
xrelease
in
int3
test
clc
lret
out
shl
std
in
stc
fsub
lock
out
in
jmp
in
test
cmc
fucomi
fcom
cli
xchg
in
fimull
rolb
into
jmp
cmp
rcl
rcl
addb
mov
sbb
jmp
loop
aam
into
in
leave
cmc
aam
lret
repz
loop
ret
enter
lret
mov
std
loopne
aam
repz
sti
stc
repz
iret
ds
and
and
jmp
lea
std
in
shl
xor
aad
fdivrl
ret
and
loopne
decb
in
aam
clc
xlat
repz
cmp
aad
into
xchg
std
in
sub
rorb
hlt
ljmp
sti
repnz
roll
call
in
int
int3
xchg
jecxz
mov
int
cmp
imul
aam
sti
idivl
ffreep
out
repnz
aad
ljmp
mov
xor
aam
xlat
aas
idiv
ffreep
out
sbb
xlat
ffreep
in
stc
stc
lock
loope
xor
in
shl
out
fcmovu
fnstsw
or
loope
ffreep
mul
sti
clc
mov
jmp
rcr
in
xlat
aam
cmp
cmp
jmp
cmp
jmp
ret
xlat
fmul
fmul
rcr
test
jno
aad
rolb
jle
add
or
lock
and
mov
xchg
xchg
orl
icebp
cmp
cld
into
sbb
rolb
mov
mov
ljmp
repz
out
ret
lock
cli
rorb
dec
leave
jmp
faddp
loop
out
lock
xor
idivb
test
jmp
std
fiaddl
rorb
repnz
cli
out
cli
cli
sar
test
in
in
xchg
out
int3
into
ljmp
cmp
idivl
fildl
sti
fstp
in
stc
stc
fcmovu
into
out
fstl
out
sarl
call
ret
loopne
aam
movl
out
mov
shlb
leave
lret
xor
call
rcl
roll
test
leave
in
in
out
fucom
ljmp
cmp
call
fdivr
int3
ds
aad
in
fdivr
out
int
ror
int3
decb
aaa
shrb
call
incb
sti
fidivrs
xchg
fucomp
aad
shll
out
aaa
fmul
jmp
shl
hlt
sar
aad
sbb
filds
ljmp
repnz
out
aaa
xor
ds
cld
in
fnclex
not
xchg
xchg
in
aad
stc
shr
fldl
and
roll
xchg
xor
sub
shl
loopne
fnstsw
jmp
rcr
ret
cld
repz
fcomp
in
loop
std
jmp
or
das
aaa
repz
repnz
leave
rol
fcomip
iret
loop
loopne
in
loopne
fcmove
rorb
repnz
xor
std
rcl
std
ss
shl
into
out
fdivr
xchg
ljmp
mov
xchg
loop
int
lret
sarb
cmp
in
into
in
ret
cmp
out
out
call
xlat
loopne
ss
in
fptan
loope
jecxz
rcr
test
aam
jmp
in
cli
in
push
mov
ror
ljmp
xlat
pop
add
mov
jmp
rcl
leave
int3
leave
fldt
pop
and
rolb
jle
add
iret
aas
fcom
cmp
out
cmp
shl
rolb
loopne
mov
rol
sti
repnz
lret
loope
fdivp
sti
out
cli
call
in
mov
lock
xchg
out
fdiv
int3
repz
adc
in
out
std
enter
cli
xlat
loopne
in
out
icebp
lret
xchg
out
jmp
ds
sub
rcl
std
dec
ret
add
fldl
xchg
fdiv
xor
jmp
cli
jecxz
hlt
loop
repnz
jmp
xchg
out
rol
xor
call
aad
out
lret
lret
sub
rcr
jmp
shl
cmp
out
out
aad
out
cmp
repnz
aam
stc
idiv
fadd
sti
out
out
mov
fmul
int
repz
addb
aam
in
cli
out
out
in
enter
leave
shl
lret
stc
into
filds
loope
std
mov
aas
out
fucomp
or
mov
enter
shl
shl
test
in
rol
test
loop
enter
nop
adc
fidivl
out
xlat
cmp
rcr
lret
xor
fidivrl
mov
loope
mov
xchg
lret
rcr
rcl
cmp
iret
int3
ljmp
rorl
mov
in
adcb
in
jmp
aad
std
icebp
repnz
jecxz
test
cmc
fsubrp
xor
jecxz
hlt
shll
ljmp
loope
cli
sbb
sti
mov
lret
out
in
fsubr
mov
ss
cmp
jmp
jmp
int3
clc
idivb
and
repz
out
mul
repnz
in
faddp
stc
enter
fstpt
ljmp
fucom
std
loope
lds
mov
enter
sub
cmp
or
ds
loopne
loopne
jmp
hlt
in
jmp
out
call
in
neg
jmp
stc
fmul
mov
hlt
fst
out
sub
adc
inc
addb
add
add
ror
fstp
ffree
pop
fiadds
dec
and
add
add
xor
aam
jmp
hlt
test
cmp
call
jecxz
sti
xor
lret
fisttps
mov
xor
cmc
out
fldt
repz
rolb
and
fdivr
loop
fdivr
int
loopne
xchg
lret
ss
loopne
clc
aaa
testb
in
mov
fcomip
mov
in
aam
cli
fdivrl
lret
ss
incl
jecxz
jmp
call
test
enter
into
fdivr
cmp
jmp
or
xchg
ljmp
repnz
lret
vpaddusb
shl
aaa
cmc
cmp
lds
std
out
lret
aaa
stc
int3
into
cmp
icebp
std
ror
fcmovb
in
cld
cli
rcl
mov
clc
cmc
out
addb
into
loop
icebp
lock
sar
cld
loope
repnz
xor
in
int
ret
cs
leave
cld
sar
aas
ljmp
fadd
loopne
cmc
sti
out
ljmp
loop
aad
jmp
aas
fst
ss
test
les
xlat
orl
loopne
sub
cli
ss
lret
icebp
cli
cmp
xlat
test
aam
mov
lock
repz
into
int
rol
in
int3
aad
lret
sti
int
fcmovne
out
loopne
int
cld
fnclex
fcomip
rolb
int3
fsubrl
sar
shl
sarb
xor
aas
jmp
out
cld
call
repz
jmp
sti
rcr
xlat
in
jecxz
ret
std
fsubr
sti
loopne
nop
jecxz
decl
test
fmulp
fidivrs
inc
loope
add
addl
xor
cli
cmp
clc
iret
test
in
inc
jmp
movb
loope
sbb
ret
aad
aam
xor
clc
stc
aas
xlat
repnz
leave
loopne
enter
lret
sub
xor
adc
out
out
sbb
fucom
into
fmul
repnz
mov
jmp
enter
int3
aam
pop
adc
adc
cmc
fcmovbe
add
add
test
lea
cmp
call
cmp
stc
lock
jecxz
and
mov
enter
xchg
jmp
shlb
xor
call
out
into
in
ret
add
ljmp
out
xchg
xchg
aas
fsub
stc
cmp
xor
fcmovnu
sbb
sar
out
sub
mov
out
into
mov
in
jmp
enter
fdivr
cmp
adc
out
loope
sbb
fsubr
in
cli
lret
fimuls
out
xor
out
fidivl
jmp
rcr
xor
fdivr
jecxz
mov
out
call
aam
int3
xlat
sub
fidivs
jecxz
fcomp
ds
cmp
ljmp
ljmp
stc
enter
fyl2xp1
sar
cld
xlat
call
and
int
loop
jmp
ror
ret
cli
xor
xor
leave
cmc
cmp
repnz
in
dec
hlt
xor
test
enter
shrb
shl
fcmovnbe
xor
cmp
jmp
cmp
fiadds
fadds
addl
int
leave
xor
cld
icebp
cmp
rolb
loopne
imul
shr
mov
out
cmc
xchg
int
jmp
aad
sar
icebp
fdiv
stc
jmp
ret
ret
repnz
loopne
sar
call
hlt
std
mov
sub
vshufps
repz
int
fucomp
xchg
xchg
ret
fdivr
xchg
sar
out
mov
ss
neg
in
cmp
fdivr
roll
jmp
fimull
push
xor
ret
out
sar
lret
lock
xlat
shl
xchg
ljmp
das
rcl
hlt
stc
leave
ds
repnz
faddp
cmpb
mov
or
cld
jmp
in
icebp
test
call
fdiv
lret
std
test
mul
sti
loope
test
jmp
lret
lret
xchg
hlt
jecxz
loopne
in
in
dec
fnstsw
lock
xchg
rcl
mul
xlat
jmp
mov
xchg
lds
out
lret
enter
aaa
int
ret
stc
repnz
cmp
les
shr
push
add
add
lret
int
jp
fimuls
xchg
flds
jle
add
clc
fcmovnb
incb
in
jmp
jmp
ljmp
sti
std
sti
cld
sti
incl
les
call
aaa
fdivp
loop
cmp
fdiv
out
aam
fldlg2
jmp
iret
mov
in
mov
loop
out
fidivrl
cmp
shl
push
in
mov
stc
xchg
loopne
fucomp
jmp
int
aaa
stc
fcmovbe
xor
iret
out
test
out
fildl
xchg
int
sar
xor
div
filds
call
fucomi
jmp
in
xor
in
cli
lock
lock
ss
aas
jecxz
shl
repnz
test
enter
fcmovne
ljmp
out
xlat
xor
lret
xor
cmp
rolb
fldpi
cmc
mov
int3
fdivr
mov
leave
xor
in
fidivrl
lock
icebp
shr
call
or
fiadds
jecxz
xor
enter
cmp
hlt
stc
lds
hlt
mov
int3
enter
xchg
in
sub
neg
in
vpor
cli
rcl
rcl
xchg
cli
int
xchg
mov
ret
xor
call
ljmp
stc
test
fadd
mov
test
and
xchg
aas
hlt
shl
cld
in
rcl
call
sarl
repz
ret
add
loope
int
int3
xchg
jmp
aad
xlat
leave
imul
out
cld
lret
fcomip
repnz
clc
out
sarb
mov
jmp
int3
cli
shr
int
clc
in
cmc
hlt
aad
lret
call
cmp
mov
loope
cmc
test
clc
test
mov
lea
fucomi
in
int3
stc
idivl
in
in
cmpb
fdivp
shl
lret
fcmovb
loop
ljmp
ret
xor
sar
call
cmp
cmp
jmp
sti
mov
loop
orb
lock
fyl2xp1
sarb
inc
cmpl
sbb
lret
clc
in
incl
xor
in
std
int3
xlat
shr
rcl
lock
xor
mov
add
jmp
aas
push
mov
adc
orl
jle
fistpll
call
into
nop
into
shl
test
lea
cmp
leave
int
rolb
fcmovnbe
rcl
repz
out
out
cli
leave
out
add
xor
test
jmp
cld
repz
rolb
out
fld1
sbb
jmp
leave
in
icebp
int
fdivr
fcmovnb
call
lret
int3
lret
fstl
aad
shrb
cs
out
sti
hlt
sarb
cmp
test
xlat
testb
jecxz
mov
mov
shlb
shrb
ds
xlat
cld
cmp
fmull
fcmovnu
fistl
das
ss
div
loope
out
repnz
loope
loope
testl
lret
hlt
clc
lret
cmc
fdivrp
out
shl
hlt
std
loope
test
lret
mov
shl
out
int
jmp
in
lret
int
std
aas
cmp
decb
fcmovne
enter
test
aad
cmp
cmp
push
aas
or
clc
ret
addl
fsubrp
xchg
xchg
repz
xor
jmp
cmp
cmc
rcl
jmp
enter
int
into
repz
enter
stc
ss
cld
loop
xor
aam
aad
loop
lea
fsubr
cmc
mul
in
lock
aad
rcl
mul
stc
aad
icebp
xlat
out
hlt
in
fcom
in
adcl
ret
std
out
jmp
cmp
jmp
sti
xchg
jecxz
mov
ss
cmp
shl
ds
cmp
out
call
int3
fsubp
jmp
in
xor
repnz
cmp
cmp
add
jmp
jmp
into
xchg
jmp
repz
jmp
repnz
cmp
cli
out
fsub
aam
fsubrp
fsub
jmp
in
sub
out
repnz
loopne
stc
sbb
addl
into
iret
hlt
fcoml
out
int
cmp
div
mov
jmp
enter
lret
jno
sbb
sub
add
add
lret
cmp
sar
fcomp
movl
ljmp
rol
loopne
clc
in
int3
fistpll
loopne
aam
in
in
xchg
lret
sar
orb
into
test
xor
rorl
leave
fcos
std
out
jmp
in
aam
call
idivl
rolb
call
stc
test
mov
lock
in
lret
aam
fadd
rcr
cld
fiaddl
incl
sar
xchg
repnz
bnd
in
icebp
iret
jmp
xor
int3
imul
and
in
shr
loop
iret
nop
test
in
jmp
fucomi
fstp
aad
rcl
aam
rcr
fdiv
jmp
int
call
xor
int3
shll
out
cmc
clc
cmp
ret
fcom
in
cli
mov
jmp
out
ljmp
aad
leave
xor
rcl
cmp
stc
cmp
orb
out
mov
jmp
jmp
cmc
cmp
cmc
ds
xchg
sar
loopne
nop
nop
xchg
testb
lret
int3
ljmp
out
icebp
jecxz
add
test
sti
lret
out
not
ret
int3
lret
sti
jmp
sar
add
test
orl
xchg
lret
aaa
std
out
aaa
int
fadd
in
cld
hlt
xchg
sub
sti
fists
xor
divl
rol
ljmp
fsubrp
xchg
in
ror
fildl
sub
lret
stc
lret
out
out
loopne
cmp
fdiv
fisttpll
fsubp
or
out
in
lock
fstp
enter
lock
in
test
aam
leave
lret
fcmovu
jmp
decl
hlt
hlt
in
cmpl
loope
clc
aam
cld
in
out
ret
out
iret
jecxz
in
out
cli
fstpt
jmp
repz
adc
cmp
leave
fiaddl
in
loop
ss
jmp
int
rol
fcmovu
fstps
outsl
inc
inc
jge
nop
ret
jle
add
fcom
stc
icebp
aaa
iret
cmp
xor
incb
add
int3
xchg
mov
in
hlt
in
in
xor
fmul
lret
out
int3
in
aas
fdivr
cld
in
mov
mov
out
xor
leave
out
cmc
into
jmp
in
fucom
fstpt
out
fsubp
lock
leave
jmp
iret
aam
icebp
sar
ss
repz
fucom
test
xchg
in
jmp
xchg
std
in
dec
fxch
int3
leave
shl
in
xor
xor
cmp
sarb
xlat
cli
mov
clc
out
jecxz
in
xchg
mov
ljmp
out
shll
repnz
lock
out
cmc
repz
lret
cli
mov
rolb
rol
out
int
iret
neg
ds
test
cld
in
out
ljmp
into
enter
fcmovne
in
fdivr
repz
xchg
loop
repnz
mov
addb
loope
lret
into
cmp
cmp
loopne
in
cld
rcl
cld
clc
shl
aam
test
adc
out
mov
xchg
jmp
rcl
xor
repnz
icebp
loop
std
cmc
rcl
cli
ret
call
mov
filds
iret
out
cmp
stc
shlb
incl
xlat
mov
aas
out
out
in
lret
fmull
cmc
rcl
leave
cmp
sbb
xchg
cmp
xchg
lret
clc
call
test
shl
lret
int3
fyl2xp1
aad
ffree
aas
repnz
xchg
roll
mov
in
mov
in
repnz
hlt
out
out
shr
iret
cmp
xchg
xchg
cld
leave
out
into
mov
mov
int
in
fadd
out
std
shl
loope,pt
into
cli
rol
xchg
fcmovnu
cmp
or
repz
aaa
stc
fucomi
aad
out
fcom
test
ret
stc
orl
repz
out
in
shr
xor
out
repnz
aas
fiadds
inc
cmp
jecxz
xchg
cld
iret
icebp
cmc
jecxz
cli
leave
out
cli
cli
ds
out
mov
xlat
mov
incb
test
xchg
jb
add
fmull
call
rorl
add
call
add
ret
rcl
fcmovbe
lret
shll
in
push
arpl
sar
loop
jle
add
filds
clc
clc
out
fcmovnu
hlt
test
jecxz
sub
rorl
loope
out
rcl
repz
cli
hlt
repz
fdivr
hlt
ror
cmp
icebp
orb
loope
loopne
icebp
out
loope
shl
idiv
cli
idivb
sti
cli
cmp
fcomp
sarb
hlt
fcom
addb
loope
fsubr
in
sti
cmp
int
repnz
add
aam
xlat
loop
dec
vpmulhuw
sub
ljmp
cmp
rol
cld
jmp
out
test
out
aad
out
in
out
aam
cmc
ror
loope
cld
cmc
in
testb
mov
cmp
sti
icebp
int
adc
in
bnd
fcomi
testl
rol
int3
ss
aam
not
std
loope,pt
call
call
loope
loop
shl
into
fxtract
clc
leave
sar
clc
out
cmp
lock
xor
fsub
in
cld
enter
loop
repnz
into
jmp
xor
cmc
rcr
out
aas
aas
jmp
in
std
fld
fcmovu
rorl
in
jmp
icebp
shll
stc
aam
enter
aam
in
aas
fcmovnb
shr
loopne
mov
lret
mov
and
cmc
in
out
divb
ror
ljmp
idivb
xchg
enter
mov
loope
test
rcl
in
xor
cmp
lock
sti
out
fsubr
in
in
cld
out
adc
out
ljmp
clc
repz
shl
rcr
stc
leave
fisttps
loope
xchg
fcomip
enter
cmp
sar
cmp
test
fadd
xchg
cld
faddp
fsub
jmp
loopne
aaa
xor
iret
int
jmp
hlt
fptan
fxtract
out
in
repz
sti
loopne
in
icebp
lret
ljmp
jmp
loope
int3
cmp
jecxz
les
test
leave
xchg
adcb
ljmp
out
repnz
test
push
adc
push
add
add
mov
ret
fstp
fcoml
jmp
mov
cmp
jle
ljmp
xor
aam
out
hlt
fldl
loopne
xlat
cmp
fucomip
mov
lock
jmp
shr
cmp
into
aam
aaa
cld
rcl
loop
jmp
in
roll
xchg
sar
jmp
int3
rcr
hlt
ds
test
sar
rol
fcmove
int
loope
in
loope
xlat
sub
neg
stc
shl
cmc
lret
sti
out
test
std
repnz
aam
mov
nop
test
loop
lret
sub
cmp
ret
xlat
shlb
fcmovnb
lret
ret
cmc
fcmovnb
adc
int
mov
iret
ljmp
fdivrs
lock
cmp
mov
jmp
test
jecxz
test
cmc
into
loopne
in
stc
out
jmp
cmp
aas
or
cli
xchg
aad
ret
loope
lock
rorb
ror
call
shr
cld
cli
loope
lock
fcom
lret
lret
enter
adcl
xlat
repnz
int3
cmc
fdivrl
mov
in
mov
iret
ss
leave
cmp
sarl
aas
and
filds
ljmp
nop
shr
in
int3
out
ljmp
cmp
sbb
hlt
jmp
mov
out
sub
lret
lret
shll
shl
fucomip
ds
cmp
sbb
test
xchg
jmp
aam
repnz
sarb
rol
repz
rol
mov
ret
out
popl
aaa
jmp
cmp
sti
xorl
fst
in
addb
into
cld
lock
repz
stc
aas
enter
out
iret
nop
ljmp
aam
leave
jmp
shl
fcom
shl
incl
cld
xlat
fsubp
lret
into
test
aam
sti
int
jmp
not
xlat
hlt
idiv
ljmp
fsubrp
int3
out
fxch
cli
ljmp
cli
adc
decl
jmp
ret
enter
int3
or
test
jo
add
add
xchg
and
fstp
aam
in
lret
xor
fsubrs
ds
cli
aad
iret
rol
in
loopne
mov
in
test
shr
out
mul
test
lret
cmp
ljmp
out
ret
repnz
cmc
cmc
sbb
xchg
jecxz
cmp
ss
hlt
iret
sar
std
std
aad
sti
testl
iret
xor
shl
cs
cli
rcl
cmc
hlt
push
repz
stc
stc
loopne
xlat
loope
or
repz
out
icebp
ss
xor
repz
aam
int3
into
out
shl
rcr
loope
xlat
out
jmp
hlt
das
mov
test
int3
shl
cmp
incl
jmp
fucom
int3
xchg
into
shll
cmp
shr
shl
fst
cmp
xlat
mov
loope
aam
xchg
repz
cmp
cmp
faddp
fucom
ljmp
in
xchg
jecxz
fidivs
cmp
int
repz
not
xlat
into
mov
jmp
addl
repnz
iret
jmp
fxtract
cli
out
lret
xchg
lock
nop
cs
das
leave
xor
fcmovnu
ss
clc
cld
dec
in
clc
jecxz
jmp
jmp
out
test
ss
fnstsw
cmc
iret
fsub
loopne
shl
jmp
cli
mov
jmp
xchg
rol
in
jmp
lret
cmc
not
cld
sbb
ftst
sarb
stc
in
enter
nop
xchg
aas
ljmp
cmp
shl
out
aad
aad
test
ljmp
rorb
loop
out
leave
not
dec
int3
hlt
cmp
rcr
loopne
decb
into
jecxz
jmp
loop
std
lret
int
lock
in
faddl
ljmp
mov
xchg
rol
call
repz
into
xlat
into
xlat
sarl
cmc
lret
loop
in
in
addb
sarb
jmp
xor
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
jmp
rcl
ret
int
fstp
fnsave
mov
jnp
sub
add
add
fucom
ffreep
test
cmpl
aas
jecxz
lret
fdivp
xchg
rcl
rcr
hlt
cmp
int3
in
int3
cmp
sarb
fldl
addl
xchg
xor
xlat
in
loope
test
cmpl
movl
orl
aaa
leave
lret
std
div
cmp
int
rcl
aas
stc
out
mov
test
repnz
aaa
in
enter
repz
lret
cld
cmp
aam
mov
clc
out
test
repz
ss
int3
addl
out
in
xchg
out
mov
vpxor
cmp
ret
ds
les
nop
jecxz
jmp
icebp
xor
ror
cmc
fidivrl
fistpll
cmp
lds
xchg
test
in
mul
ss
cmp
out
out
fcmovb
in
leave
mov
int
roll
cli
jecxz
stc
fcmovbe
jmp
fsubr
cmc
xchg
fdivr
in
enter
mov
call
lret
sti
ljmp
movb
int3
fucomip
xor
icebp
out
mov
jecxz
in
repz
cmp
rcl
test
enter
fdivrp
test
rcll
in
fdivrs
out
fndisi(8087
int
xor
loop
aam
lret
lock
enter
out
cli
in
flds
xchg
and
out
rol
in
xor
cmp
lret
int3
rol
std
rcr
cli
fcmovbe
dec
stc
mov
jmp
jmp
aaa
sarb
int
in
sar
jmp
fdivr
cld
fnop
aad
loopne
testl
jmp
idiv
stc
in
fcmovu
jmp
test
fiadds
jmp
in
fcmovb
repz
icebp
jmp
xor
jmp
cld
stc
into
xlat
cld
ret
std
mov
loopne
faddl
test
xor
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
jmp
xlat
aas
lret
fcmovne
sbb
dec
mov
in
add
add
fsubr
out
fnstcw
incb
out
mov
icebp
int3
mov
cmc
aaa
ret
aad
in
aad
sar
aas
cmp
iret
xlat
in
lret
std
in
stc
lret
shl
aam
lret
ds
xlat
cmp
clc
sti
out
rol
std
ffree
and
addb
cmp
xor
jmp
cld
rolb
fucomip
loope
in
sub
rcl
call
cmp
xor
out
aad
fdivrp
fsubrp
std
in
ljmp
iret
loope
xchg
lret
hlt
fpatan
ss
sti
sar
fldl2t
stc
in
cmp
fcomi
out
xchg
mov
divl
aad
lret
clc
sti
loope
lock
mov
fninit
out
xlat
enter
roll
fld
sti
fldl2e
out
clc
jecxz
ror
fstp
inc
xlat
lret
jmp
out
rorb
ljmp
jmp
icebp
in
icebp
call
clc
loop
jmp
in
ljmp
aam
cmp
int3
clc
aad
cli
fsubrp
rcr
fcmovb
rcr
jmp
jmp
stc
ror
shl
out
in
out
aad
fdivr
sti
clc
fldln2
jecxz
fisttpl
jecxz
fdiv
aaa
in
cmp
fdivrl
xchg
loopne
clc
sbb
loop
jecxz
test
lret
cmp
iret
enter
cmc
ss
cmp
xlat
loope
xchg
in
mov
ljmp
enter
fmul
cmp
sbb
sbb
xlat
loop
mov
loop
lret
test
mov
div
enter
ss
lret
sar
fsubrp
xor
sti
repz
out
out
adcb
int
jecxz
in
stc
ror
in
clc
cmp
loopne
fadds
mov
lret
or
and
enter
xlat
ljmp
cmp
in
fistpll
mov
jmp
out
hlt
ss
ret
cmp
test
aam
test
in
std
sti
mov
jmp
inc
xchg
sub
jmp
rcl
iret
aad
aad
pop
aaa
jp
arpl
jle
add
aaa
rcl
in
enter
adc
ret
div
loope
cld
mov
fisttps
mov
cs
aad
cmp
in
ss
lret
cld
cld
roll
test
cmp
vpsubb
cmp
rol
cmp
in
filds
int3
shrb
jmp
in
fidivrs
jmp
clc
lock
fucomi
out
std
xchg
std
loop
xlat
cmp
idiv
fcmovnbe
hlt
cli
hlt
std
dec
xor
jmp
into
in
imul
enter
stc
in
fcmove
idivb
and
clc
vpaddb
lock
loop
out
int3
loop
icebp
in
int3
test
out
stc
aam
repnz
cmp
cmp
xchg
sti
fmulp
loopne
out
clc
ss
fmul
stc
cmp
cmp
std
fisttpll
out
incl
xlat
rcr
rcr
cmp
fxch
aad
ret
fdivp
in
iret
nop
out
cmc
xchg
rcl
xor
out
stc
fdiv
cmp
stc
lock
fmulp
loopne
xchg
loopne
jmp
cmc
xor
out
cmc
icebp
iret
into
aam
ds
rol
mov
rol
testl
pop
loope
lock
fnstcw
in
sbb
mov
clc
call
loope
loopne
ss
aam
out
fxch
neg
hlt
sbb
stc
hlt
in
faddl
out
decb
int
cmp
sarb
cmp
xchg
jmp
stc
xchg
int3
call
enter
enter
fxch
cli
lret
out
repnz
sti
in
sti
loopne
loop
test
in
rcl
xor
aaa
clc
in
out
cmp
sti
clc
test
call
lret
faddl
ror
icebp
lret
aaa
in
cmp
repnz
out
add
out
into
lret
out
xchg
xchg
lock
xor
cmp
clc
in
clc
cld
aaa
lret
into
in
clc
cmc
mov
out
ljmp
add
add
rcl
fcomp
aad
mov
in
pop
out
add
add
out
loop
icebp
icebp
xor
fnstenv
aam
rcl
lret
jmp
in
repz
test
ljmp
xchg
out
mov
out
cmp
idivb
iret
aam
loope
cmp
xchg
out
ljmp
int3
call
in
int3
cld
sarl
cmp
decl
jmp
xchg
add
xlat
fadd
in
fstp
adc
loope
in
test
repnz
loope
lds
loope
rcl
cs
out
shl
xor
ljmp
cmc
out
dec
xchg
loope
xchg
xor
shl
xor
clc
cmc
std
xor
lret
in
cld
test
enter
loop
fiadds
icebp
fdivr
xlat
stc
loopne
cmp
int
repz
rcl
out
lret
xchg
xchg
fstp
out
out
xchg
into
into
lock
xor
ffree
sti
aam
repnz
cmp
faddl
jmp
rcr
jmp
int3
in
iret
lret
jecxz
jmp
int
int
in
test
clc
out
enter
aas
mov
hlt
lock
bnd
shl
ljmp
out
in
mov
mov
clc
loope
imul
sti
mov
icebp
sar
in
into
cmp
roll
jmp
fmuls
fmull
out
xor
loope
std
loop
aad
idivl
lds
into
test
out
out
sti
xlat
lret
into
sar
sar
in
shl
sbb
enter
icebp
out
test
shl
call
int
lret
jmp
fcomi
cmp
repz
and
lock
clc
aad
int3
in
fdivr
aad
test
fdiv
mov
test
aad
xor
in
enter
cld
clc
fdivr
cmp
fucom
ret
fld
xlat
mov
les
rol
icebp
out
repz
jmp
rolb
ret
fldl2e
enter
out
orl
in
xor
cmp
xlat
ret
cli
aam
repnz
imul
add
xchg
jmp
int
int
fstp
fst
das
dec
fwait
lahf
xchg
xor
jle
add
lret
fimuls
xchg
jmp
stc
out
cmp
into
cmp
xor
loope
std
ret
jmp
dec
add
ljmp
jmp
cli
int
sar
divb
xchg
ffreep
fsubr
mov
out
enter
out
in
fdivr
icebp
repnz
fnstsw
xor
rol
jecxz
roll
test
ret
ljmp
neg
cmp
ds
fstp
xchg
xchg
enter
loopne
out
cld
loopne
repz
xor
lock
ror
fcmovne
in
in
xor
in
clc
lret
call
loopne
in
loope
shl
loop
ss
cmp
jmp
int
hlt
xchg
fadd
in
cld
test
mov
xchg
sub
fcomi
aaa
ss
idiv
call
fadd
cli
in
stc
jmp
enter
shl
xchg
loope
xor
aaa
lret
xlat
stc
ds
fbstp
rol
xchg
int3
loope
shrb
lret
into
out
idiv
cmp
icebp
idiv
hlt
jmp
out
out
clc
fcmovnu
out
leave
mov
loopne
bnd
clc
lock
rcl
cmpb
repz
in
in
lret
icebp
int
fmul
jecxz
cmp
jmp
ljmp
fdivp
enter
loope
leave
loope
test
xor
shll
aad
aam
sar
fldlg2
cmp
int
out
aad
stc
clc
fcmovu
out
test
out
iret
test
leave
cmp
std
cmp
fdivr
xlat
icebp
aad
vmaskmovdqu
out
out
out
xchg
or
ss
iret
hlt
std
shl
cmp
out
aam
cld
fiadds
test
fmul
xchg
xchg
fdiv
clc
shll
fucomip
cmp
aam
xchg
enter
loop
loop
call
loop
xor
shl
clc
das
enter
rcl
cmp
shl
jecxz
hlt
cmc
jmp
mov
int
out
jmp
shrl
shlb
in
repz
out
addl
repz
cmc
xchg
xor
shl
out
neg
rolb
inc
add
dec
jmp
int
ret
lret
aad
int
jmp
gs
int3
hlt
add
add
repz
rol
out
ret
ficoms
sub
cli
leave
ljmp
inc
div
mov
out
lret
in
jmp
out
leave
aad
fdiv
cld
stc
fxch
out
cmpl
cmp
cld
int3
in
std
int
shr
mov
int
loop
leave
out
idivl
loop
faddl
out
leave
loopne
out
out
out
int
test
ss
lret
test
ds
in
stc
and
adc
mov
mov
leave
xrelease
fyl2x
das
xor
fcomp
ss
add
xchg
cli
ljmp
aam
out
aam
jmp
cmp
fcos
rolb
loope
hlt
xlat
test
lret
ror
aad
call
xor
loope
test
out
fchs
mov
iret
xchg
xlat
xor
icebp
cmp
int3
iret
loop
jecxz
fadd
add
fcomi
cli
out
mov
mov
lock
out
ret
jmp
int
roll
fiadds
cli
lret
nop
adcl
cmp
loop
aad
clc
rcr
mov
mov
out
in
xor
call
in
addl
ffreep
div
test
dec
loopne
fcomip
jmp
cmc
ss
out
repnz
stc
ret
sbb
call
out
loope
stc
test
das
aaa
out
cmp
in
rol
icebp
ffreep
ret
fiaddl
std
in
in
shlb
lock
ss
ds
iret
aas
shl
sub
mov
not
orb
in
loopne
cmp
cmc
faddp
cmp
loopne
cld
int3
icebp
aad
std
out
call
mov
in
in
shl
repnz
imull
out
cmp
jecxz
or
fmul
loopne
lock
sti
loopne
loop
aam
in
enter
iret
std
in
cmp
fsubr
sar
out
ret
in
loope
jmp
shr
loop
cmp
aad
jmp
hlt
pop
mov
pop
pop
pop
leave
ret
