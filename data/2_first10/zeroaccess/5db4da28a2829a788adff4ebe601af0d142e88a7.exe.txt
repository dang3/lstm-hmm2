push
mov
sub
push
add
push
adc
push
adc
xor
sbb
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
push
mov
pop
push
call
push
andl
push
push
push
push
xorl
push
sbbl
call
push
addl
push
push
push
sbbl
push
push
push
incl
call
addl
dec
movl
jne
push
sbbl
push
push
andl
call
test
je
mov
adc
imul
mov
mov
movl
mov
movl
cmp
jne
addl
movl
pushl
subl
pushl
andl
pushl
xorl
call
mov
mov
or
mov
xor
mov
mov
sub
movl
lea
xor
mov
lea
mov
addl
mov
mov
adc
mov
mov
add
mov
mov
xor
mov
xor
mov
adcl
add
movl
mov
mov
movl
cmp
movl
jne
mov
mov
mov
xor
add
mov
xor
mov
movzbl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
xor
dec
mov
jmp
mov
or
mov
xor
add
or
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
mov
xor
or
adc
mov
xor
xor
mov
sbb
mov
xor
mov
mov
mov
sub
mov
orl
mov
movl
add
mov
xor
add
mov
add
mov
andl
mov
adcl
xor
xor
sbbl
add
movzbl
and
mov
xor
lea
cmp
ja
or
mov
mov
xor
mov
sbbl
xor
andl
lea
subl
push
sbb
mov
xorl
xor
lea
orl
push
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
mov
andl
pushl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jb
xor
lea
mov
mov
decl
xor
xor
sbbl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
movzbl
sub
mov
mov
xorl
xor
lea
mov
cmp
movl
jbe
add
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
adc
mov
mov
xor
mov
sub
andl
xor
mov
not
mov
movl
cmp
movl
jne
addl
lea
andl
mov
lea
addl
mov
mov
xorl
test
movl
je
adc
mov
mov
mov
sub
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
sub
cltd
mov
mov
mov
or
add
mov
adc
andl
subl
xor
xor
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
push
call
mov
dec
mov
jmp
not
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
negl
add
mov
mov
movl
adcl
xor
addl
mov
mov
xor
movl
mov
cmp
movl
jne
mov
mov
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
negl
mov
movl
mov
andl
xor
add
movl
adc
andl
xor
addl
xor
movl
cmp
movl
jne
cmp
jne
mov
addl
mov
andl
xor
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
addl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
xorl
add
movl
jmp
movl
mov
movl
cmp
je
mov
mov
orl
xor
add
cmp
je
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
movl
mov
mov
mov
adcl
pushl
addl
mov
pushl
addl
add
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
add
mov
mov
orl
pushl
call
mov
mov
movl
mov
movl
jmp
adc
mov
sub
mov
andl
xor
subl
add
cmp
jne
add
mov
movzwl
sbb
mov
adcl
mov
xor
sbbl
add
cmp
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
andl
push
xor
movl
add
xorl
push
xorl
push
andl
pushl
adcl
pushl
sbbl
call
add
mov
mov
sub
mov
or
mov
sub
mov
adc
mov
xor
mov
sub
add
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
incl
mov
mov
mov
mov
mov
mov
mov
sbb
movl
mov
xor
decl
add
mov
sbb
mov
mov
or
mov
mov
and
mov
mov
push
sbb
pop
orl
sub
add
xorl
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
mov
lea
lea
xor
cmp
jne
mov
xor
mov
mov
mov
mov
xor
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
mov
movl
movl
movl
movl
mov
mov
mov
andl
mov
movl
mov
mov
xor
mov
orl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
xor
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
movl
movl
pop
jmp
xor
inc
ret
push
mov
push
movl
movl
mov
addl
mov
add
xor
cmp
movl
jne
add
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
xorl
push
adcl
push
addl
push
push
andl
lea
push
push
adcl
call
push
call
sub
movl
xorl
movl
mov
mov
xor
mov
xorl
add
mov
sbb
mov
test
je
mov
mov
orl
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
sbb
imul
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
add
movzbl
and
xchg
sbb
mov
movl
sub
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adc
add
mov
sub
mov
sub
xor
add
mov
sub
mov
mov
xor
xor
add
add
mov
movzbl
sbb
mov
mov
adc
xor
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
or
mov
orl
sub
addl
lea
xor
andl
xor
movl
cmp
movl
je
sub
mov
xorl
xor
adcl
add
cmp
jne
orl
pushl
call
movl
cmpl
je
cmpl
jne
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
inc
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
add
cmp
movl
je
adcl
pushl
addl
pushl
negl
call
mov
xor
mov
add
mov
subl
xor
subl
add
cmp
je
or
mov
mov
adc
mov
mov
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
jmp
or
xchg
xchg
pushf
cmp
add
jl
pop
jl
adc
and
imul
xor
fsubp
push
dec
imul
bound
iret
pop
dec
and
dec
jg
jb
jg
movsb
cmp
ljmp
cld
push
jg
in
cmp
mov
mov
mulps
fldl
lock
sub
dec
push
sub
mov
test
jmp
lret
sbb
jp
arpl
lcall
xor
cmpb
jae
fsubrl
push
jecxz
mov
mov
out
push
dec
push
and
cmp
lods
dec
int3
cmpsl
xor
push
pop
std
push
pop
movsl
stc
push
cli
cmp
pop
les
jecxz
sub
pop
xchg
mov
dec
or
mov
xchg
pop
jbe
cmp
lock
imul
or
dec
sub
mov
pushf
fcompp
inc
outsl
pushf
out
jmp
sub
stc
cmp
in
sbb
adc
adc
sub
adc
jmp
fwait
es
js
mull
jle
loope
inc
addr16
mov
popa
jnp
and
lahf
jl
sub
xchg
lcall
push
mov
add
push
pop
inc
xor
fwait
mov
and
xchg
jge
mov
jecxz
inc
dec
mov
sar
dec
mov
push
dec
mov
stc
dec
je
or
aam
inc
inc
sahf
hlt
lahf
push
nop
ljmp
jnp
test
mov
jae
mov
or
mov
and
out
pop
xor
mov
or
addr16
lea
into
jp
push
ror
push
pop
cmp
loop
pop
in
adc
rclb
stos
push
sbbb
fs
lcall
dec
xchg
ljmp
gs
mov
fidivs
shl
ret
jns
and
test
mov
mov
out
aam
das
fisubrl
adc
sub
aad
cmc
jmp
cld
mov
sub
std
aaa
lea
sbb
dec
loopne
loope
xchg
pop
cld
sbb
cmp
lcall
add
mov
pushf
inc
jge
dec
addr16
push
je
mov
inc
das
dec
adc
sbb
jg
aas
jp
or
int
jno
fisttps
inc
orb
push
stc
flds
das
gs
push
add
jo
icebp
adc
in
cld
mov
sub
in
push
repz
adc
push
ret
sbb
imul
xchg
mov
xchg
mov
lcall
stos
dec
sub
sub
inc
and
adc
xchg
out
or
pop
divl
and
jg
clc
lret
pop
pop
dec
jmp
cltd
lock
or
mov
faddl
pop
xor
sbb
cmc
xor
sahf
xchg
or
fidivrl
mov
sahf
aaa
sbb
scas
push
sub
addr16
repz
in
cld
mov
insl
and
rcll
push
or
add
cmc
jbe
loopne
scas
add
ds
cmp
sahf
cmpsl
fisttps
imul
mov
mov
imul
jno
jl
pop
push
cmp
bound
mov
int3
sub
jecxz
or
or
mov
fs
mov
ljmp
xchg
pusha
push
stc
stc
je
int3
outsb
or
sub
push
lahf
mov
and
aad
shlb
push
leave
subl
nop
add
adc
lea
fstps
push
push
sbb
cmp
cmp
out
ror
shll
outsl
outsl
imul
arpl
dec
push
or
pop
mov
sarl
sbb
push
mov
jb
daa
imul
jecxz
stos
sbb
mov
cmovae
jbe
jno
dec
stos
fisubrs
and
stos
leave
push
mov
js
sahf
lahf
fwait
nop
addr16
mov
pop
jb
stos
xor
mov
mov
sub
pop
lods
ja
pop
mov
lods
and
sub
jb
aaa
cmpsb
add
popa
icebp
stos
fcompl
push
cmp
movsl
push
hlt
lahf
adc
mov
jns
jle
cmp
adc
pop
jnp
movsb
idiv
xchg
mov
xor
rolb
mov
out
mov
xchg
jge
xor
les
mov
loopne
addr16
jno
jne
mov
mov
mov
adc
push
je
pop
out
insl
mov
lds
in
cs
lods
and
ret
push
fsts
jb
out
adc
or
xchg
lods
xor
ficoms
mov
cld
ret
add
aaa
cmp
add
pop
popl
ret
cmp
lods
xorb
add
mov
fstpt
push
adc
pop
mov
jo
rorb
push
leave
into
mov
mov
xor
and
adc
int3
inc
push
or
mov
adc
shr
push
out
mov
adc
notl
pop
fdivrl
pusha
jg
pop
lods
in
push
pop
inc
in
inc
xchg
ffreep
es
cmp
rol
adc
es
sub
int3
sbb
or
jecxz
sub
add
xlat
mov
mov
loop
sub
or
sti
push
imul
pop
adc
mov
jne
mov
rorb
dec
jp
xchg
shlb
popf
jp
mov
in
push
lds
out
and
rcrb
lret
push
mov
dec
sbb
pushw
sub
mov
repz
cltd
test
mov
jae
inc
sbb
xchg
dec
jnp
stc
push
push
out
sbb
and
and
enter
cwtl
in
jo
mov
push
xchg
pop
lds
lcall
xchg
mov
fbstp
mov
ljmp
mov
mov
push
mov
xor
ja
sbb
cmp
mov
cmp
jl
mov
js
rolb
stos
push
lcall
test
xchg
pushw
pop
fnstenv
cld
lret
mov
imul
pop
adc
cs
in
cmpsl
aas
pop
and
jno
pusha
adcb
or
repz
nop
cltd
add
pop
xchg
icebp
push
nop
push
pop
xor
incl
ret
insl
pop
fcomi
lret
notb
xor
xor
push
mov
lret
mov
cwtl
jne
jns
roll
outsl
pop
and
pusha
mov
mulb
push
test
jl
dec
push
sbb
xor
cmpsl
call
enter
cwtl
fcmovbe
pop
mov
sub
dec
jle
sbb
dec
icebp
fstpl
das
sbb
iret
inc
notl
jge
outsb
add
lea
add
dec
lahf
and
insl
xchg
cmp
dec
dec
enter
inc
repnz
cmp
je
cltd
add
sub
xlat
clc
out
fdivrl
jmp
sub
cmp
incl
and
fidivs
faddl
inc
dec
mov
aaa
stc
xchg
out
cld
cmp
gs
xlat
in
daa
cmp
lret
mov
xchg
cs
int
gs
xchg
scas
imull
bnd
add
test
hlt
iret
mov
inc
arpl
push
adc
dec
adc
inc
test
mov
dec
pop
mov
ret
adc
inc
adc
pop
adc
gs
cltd
xchg
xchg
sub
das
jg
data16
dec
or
pop
and
jmp
adc
sub
shl
jmp
jmp
dec
or
push
sbb
sub
sti
stos
push
je
mov
dec
insl
jae
or
add
in
cmp
xor
push
ljmp
mov
mov
cwtl
mov
fiadds
aas
in
adc
dec
cwtl
std
loop
sbb
inc
insb
iret
xor
rcr
add
lcall
cmpsb
jae
lds
into
push
imul
clc
cwtl
clc
add
jb
lcall
imul
add
adc
jnp
test
imul
sbb
inc
inc
or
push
mov
dec
sbb
or
je
mov
fiaddl
adc
lret
ja
sub
xor
sub
jae
push
fwait
add
push
mov
stc
sahf
mov
jg
pop
sub
jnp
mov
nop
xchg
inc
dec
aaa
jns
mov
dec
fcmovb
or
imul
movsl
xlat
cld
jmp
outsb
imul
pusha
pop
xchg
rolb
dec
mov
sub
outsb
jne
shll
imul
fdivrs
es
jmp
jo
inc
adc
mov
call
out
cmpsb
add
cmp
mov
addl
fldenv
sbb
out
imul
dec
jg
xchg
mov
sub
fnstcw
push
mov
movsb
jne
inc
jbe
sub
or
outsb
jmp
push
cmpsl
sub
out
mov
outsl
cwtl
or
pushf
pushf
mov
inc
dec
insl
movsb
jno
xchg
insl
jp
stos
call
mov
lcall
fiadds
push
dec
xchg
pop
cmp
lds
jae
cmpsl
das
inc
cwtl
mov
jmp
add
outsb
testb
or
rorb
add
clc
mov
sbb
add
and
out
bound
push
pop
mov
arpl
fildll
and
in
push
mov
fdivrl
xchg
sbb
test
pushw
push
rorl
loop
cmc
or
rcrb
in
lea
je
jns
and
and
popa
js
in
mov
inc
js
test
out
xor
inc
or
push
cmpsb
push
repz
push
cmp
add
outsl
cmpsb
pop
push
loope
or
xchg
ficomps
or
xchg
mov
repz
dec
xchg
jno
in
mov
or
mov
pop
mov
cltd
int
push
sbbb
or
and
jbe
add
xchg
or
into
xchg
or
inc
cmp
push
sub
cmp
pushf
ds
test
xchg
repz
sub
repnz
xor
jb
shl
xchg
popa
cld
and
movsl
inc
jne
test
ficomps
dec
lret
or
jae
xchg
movsb
add
in
test
fnstsw
jp
mov
cmp
pop
int3
push
popa
rcr
and
enter
cmpsb
xor
xchg
pop
rcll
int3
add
rorb
in
fmull
pop
push
or
scas
push
loopne
push
jo
leave
or
xchg
lods
sbb
sbb
sbb
pop
pop
loope
mov
imul
lahf
inc
push
cli
pop
xchg
push
mov
fldcw
out
dec
push
in
push
inc
xor
push
add
jns
add
dec
popa
xchg
das
inc
in
adc
cld
movsb
rcll
sti
or
aaa
jno
fsubl
xor
pop
pop
lret
pushf
ret
sti
ds
sti
scas
pop
test
movhlps
popa
mov
xchg
fisttpl
dec
insb
mov
mov
push
add
or
add
mov
pop
ret
in
idiv
pusha
pop
push
mov
adc
cs
aaa
xchg
lret
sub
xchg
mov
lea
daa
push
add
jno
mov
or
xchg
imul
push
jae
gs
popf
mov
lret
push
lods
dec
mov
je
int3
sbb
fcomps
jmp
lods
enter
pop
mov
cmp
mov
fmuls
movsb
and
dec
rcrl
or
jmp
jecxz
and
mov
lods
mov
outsl
mov
mov
inc
xchg
push
dec
cmpsb
arpl
cmp
jne
mov
sbb
inc
aas
cmpsb
inc
andl
xchg
aad
xchg
sub
xor
xchg
adc
cmc
mov
push
stos
fisubl
scas
and
insl
cwtl
out
jge
in
or
dec
jbe
in
mov
fmuls
je
dec
shll
inc
jge
jge
jns
mov
sbb
mov
mov
mov
cmp
adc
xchg
stos
jnp
jne
adc
fincstp
mov
or
mov
jmp
std
xchg
fisubrs
mov
add
lret
ds
lret
pop
jl
in
ds
lock
leave
test
jecxz
mov
lcall
ret
fiaddl
and
and
jno
sub
jne
js
mov
add
cmpsb
add
in
std
std
mov
jns
mov
xchg
icebp
pop
sahf
movsb
test
cmp
imul
lods
and
or
jnp
mov
dec
rcr
cmc
test
jae
cmp
adc
rcrb
fucomp
xor
nop
inc
mov
sbb
cs
stos
jmp
pop
test
leave
stc
mov
shlb
jne
dec
jae
sbb
pop
cmpsl
push
sbb
mov
jg
or
scas
test
ja
in
sahf
mov
ljmp
pop
popf
lcall
jg
push
popf
enter
jb
insb
lcall
fildll
cmp
out
les
xlat
in
iret
and
pusha
icebp
mov
enter
xchg
loop
jae
or
cwtl
iret
xchg
iret
shll
jbe
lcall
cs
js
loop
cmp
stos
rcr
xor
fdivrl
test
sub
ret
cmp
pop
dec
cmp
data16
imul
aad
mov
jge
loope
sbb
mov
cld
dec
loope
sub
int
rcl
addr16
es
mov
adcl
ja
lret
jae
aas
push
in
int3
in
jb
push
dec
mov
sti
ds
jp
fiaddl
mov
rolb
std
cmc
lcall
sbb
mov
aam
cmpb
sbb
sbb
pop
push
lahf
sbb
sub
jb
into
mov
je
push
vxorps
xchg
jp
shrb
sti
ficoml
adc
push
jmp
pop
aas
sbb
dec
mov
clc
shll
enter
fcomps
jl
mov
sub
subb
push
subb
jbe
cmp
jmp
inc
mov
inc
mov
pop
repz
js
bound
out
mov
mov
pop
add
add
inc
andl
movsl
lock
jle
test
ss
inc
dec
dec
dec
lods
lret
jmp
dec
mov
rorb
jae
lock
xor
repz
out
pop
loopne
cmpsb
pop
lods
shll
scas
fists
bnd
jle
idivb
out
lahf
sub
inc
icebp
dec
sbb
insl
loopne
add
and
mov
loop
push
movsb
jno
jb
mov
subb
cmpsl
rcrl
mov
lcall
lods
mov
in
sbb
addb
jmp
mov
jp,pn
lret
je
mov
dec
pusha
pop
js
gs
ret
shll
push
aaa
hlt
movsb
dec
cmpsb
mov
flds
mov
adc
dec
dec
pop
cmpsb
jbe
and
in
dec
mov
dec
imul
sahf
cmp
push
std
or
add
movsb
push
addl
push
shl
dec
pop
ret
dec
cmpl
push
pop
rsm
movb
icebp
clc
jecxz
dec
push
push
arpl
xchg
test
pushf
mov
outsl
inc
xchg
add
fld1
jge
mov
fldt
xchg
outsb
stos
cmp
inc
mov
int
insb
test
das
xor
rcrl
sbb
or
int
inc
sbb
mov
scas
sub
adc
mov
iret
cmp
call
and
movsb
rol
mov
cmpsb
push
jne
orb
mov
pop
inc
insb
call
push
xchg
mov
push
cmpb
jnp
pop
fcmovbe
in
aaa
mov
sub
rcr
or
testl
stos
js
mov
xchg
adc
and
jmp
xor
jmp
cmp
cmpsb
sbb
adc
repnz
dec
xchg
inc
ds
mov
mov
aaa
mov
dec
sub
bound
das
lock
push
sbb
int
inc
negb
cwtl
les
in
mov
mov
shr
xor
pop
dec
test
push
orb
adc
leave
add
add
shll
sub
je
mov
push
jmp
jae
mov
int
pop
fcom
fidivrl
push
fadd
outsl
mov
jle
lcall
jl
ljmp
movsl
shrd
sarl
jmp
mov
aas
sbb
mov
sarl
fiadds
cltd
push
and
jl
movsb
xor
jne
cltd
dec
xchg
sbb
repnz
int
sub
scas
loope
mov
mov
push
mov
mov
int
adc
inc
movsl
jecxz
shr
pop
jno
and
xchg
cltd
repz
test
and
in
ds
xor
pop
cmc
or
xchg
stos
pop
mov
xchg
sbb
orl
add
mov
shlb
movsl
xchg
out
push
bt
xor
mov
jle
ficoml
cwtl
pop
jg
testl
cld
mov
xlat
lret
js
andl
fwait
mov
test
icebp
jo
push
jl
popa
scas
cltd
pushf
inc
pusha
inc
fsubl
adcl
loop
mov
or
xchg
movsb
sub
lds
push
test
jl
push
cmpsl
das
mov
cmp
xor
sub
cltd
dec
sarb
inc
mov
clc
inc
sbb
or
jle
rcrb
mov
pushf
xchg
pop
in
gs
mov
jg
pop
enter
push
mov
adc
xor
adc
mov
cmp
cmovbe
and
pop
jecxz
cwtl
mov
mov
inc
push
movsb
and
add
fwait
lret
xlat
push
mov
js
adc
cmp
adc
scas
sahf
cmp
notb
add
sarb
adc
adc
stos
cmp
sub
or
scas
pop
mov
inc
jmp
inc
leave
xor
addr16
mov
jle
lcall
lcall
xor
jle
mov
popa
test
adc
mov
jmp
fdivr
ss
sti
std
ficoml
pusha
movsb
add
test
cmpsl
fsts
rclb
cmp
xor
in
out
lret
cmc
fidivs
add
fwait
movsb
dec
mov
ret
or
mov
sbb
aam
clc
mov
jge
dec
out
push
jle
pop
es
sbb
cmp
sbbb
stos
inc
xchg
out
fldenv
push
xchg
subb
vshufps
pop
out
cli
or
enter
mov
int
out
arpl
cwtl
sbb
xor
jae
xor
sub
hlt
push
addr16
push
and
adc
scas
aaa
push
push
out
inc
jo
jecxz
ret
cs
std
jp
pop
ret
jbe
aam
pop
loope
daa
dec
ficoms
mov
pop
add
or
loopne
fcmove
mov
int
insb
fiaddl
addb
icebp
imul
push
scas
push
je
xor
les
js
push
dec
stc
push
xchg
xor
clc
jmp
pop
rcl
cs
and
sub
mov
push
paddq
add
jle
pop
push
out
push
xor
ret
and
popf
mov
pop
jbe
xchg
or
addl
adcb
fnsave
aaa
mov
sti
test
call
and
data16
ret
xchg
int3
ljmp
xor
loope
and
sub
pop
jecxz
leave
mov
xor
mov
cmp
adc
loop
cltd
xchg
fmul
mov
int3
cwtl
data16
mov
fiaddl
scas
mov
stos
dec
mov
fsub
mov
or
adc
and
stc
dec
push
insl
filds
xchg
sahf
sub
inc
jo
add
push
push
mov
imul
jmp
in
idivb
orb
js
push
dec
pop
jg
fdivrs
notl
mov
add
mull
xor
xor
add
ja
jp
test
outsb
cli
inc
xchg
pop
push
xchg
ja
mov
icebp
iret
mov
data16
and
fldcw
out
das
adc
jnp
ret
jo
cmp
mov
push
dec
fstl
mov
cmc
mov
xor
add
sbb
adc
sbb
in
mov
push
mov
in
push
popa
adc
add
push
push
push
jg
das
mov
stc
adcl
test
adc
adc
cmp
sub
push
imul
xchg
pop
adcb
sarb
xor
scas
test
or
out
push
js
and
ss
test
cmp
sub
dec
cmpsb
cmc
pop
xorps
or
jb,pn
mov
and
aad
out
cs
push
push
in
jmp
add
out
enter
mov
shll
clc
pop
mov
jb
in
loopne
inc
push
xlat
jl
hlt
addl
and
jns
popf
aam
cmp
jo
jo
dec
xchg
jno
mov
pushf
mov
mov
sub
xorb
mov
pop
xchg
fs
dec
jge
es
fldenv
scas
xchg
cmpl
ss
insl
fs
add
xor
enter
lcall
push
in
test
lods
ficoml
in
imul
insb
push
int
cmc
push
cmp
push
xchg
xor
push
fldl
mov
ljmp
loopne
int
cmp
dec
xchg
mov
mov
movsb
enter
pop
insl
mov
jge
dec
and
jae
ljmp
fwait
mov
mov
mov
sbb
adc
in
mov
pcmpeqw
push
cmp
cli
in
dec
scas
pop
and
cmp
aaa
jo
in
test
pushf
sub
fs
cmpl
lds
lahf
mov
ffreep
cmc
inc
sbb
dec
cwtl
sub
dec
xor
sub
dec
xlat
sub
pop
and
pop
cmpsl
idivl
in
pop
subl
imul
out
sbb
clc
pop
fdivl
lods
je
inc
adc
std
insl
lds
lock
movsl
or
mov
insb
or
mov
cmp
xor
loope
add
mov
mov
fwait
sub
dec
mov
cltd
nop
xchg
mov
or
dec
or
and
pop
pop
rcrl
sub
mov
mov
or
gs
fldt
lcall
lock
pop
dec
fs
ds
aad
adc
cmp
and
dec
adc
mov
pop
mov
push
xor
movsb
add
ret
ds
rclb
cmc
sti
sub
jae
push
cmc
pusha
bound
loope
outsl
shrl
jo
add
xor
out
enter
jb
sbb
aam
jg
pop
repnz
add
push
jg
push
pop
cmc
in
mov
or
jmp
jmp
enter
inc
ficompl
xor
mov
xchg
je
loop
pop
lods
fwait
aad
ret
fidivs
pushf
xchg
inc
repnz
xor
xlat
mov
xchg
cmp
sbb
cmp
leave
or
mov
gs
rclb
mov
jne,pt
mov
jae
idivl
outsb
cwtl
or
rcrl
nop
ja
xchg
jo
dec
ficoms
bt
inc
imul
shll
xor
jae
lret
js
xor
movsb
pop
cmpsl
not
leave
ds
mov
add
adc
out
pushl
cmc
mov
inc
xchg
dec
subl
out
pop
aam
ret
gs
popa
mov
cmpsb
push
pop
add
aad
mov
cmp
xchg
xchg
out
imul
push
add
mov
dec
cmpsb
subb
xlat
pushf
push
xor
or
in
aad
mov
lret
xorl
cmp
xchg
mov
movsl
sbb
test
lret
ja
arpl
add
mov
cmp
push
xchg
lcall
jecxz
mov
std
and
cmp
sarb
lock
jmp
mov
cmpsb
das
jae
dec
or
sub
les
inc
outsl
lret
mov
sar
nop
jmp
dec
movsl
shll
dec
and
pop
mov
jp
sbb
push
enter
icebp
push
xchg
pop
addr16
in
push
inc
mov
jg
xchg
imul
jmp
sbb
inc
inc
popa
pushf
jns
test
jnp
push
arpl
mov
stc
lret
test
mov
mov
das
xchg
jle
subb
sbb
sarb
dec
ss
and
or
fisubrl
or
dec
cmp
lods
movsl
jg
std
test
adc
mov
out
xlat
mov
rol
xchg
cmp
push
inc
movsl
lahf
mov
popa
sub
gs
int3
popf
adc
push
popf
cmp
daa
in
inc
add
mov
mov
enter
xlat
test
out
repz
insl
dec
or
sar
xor
loopne
fnstcw
push
sbb
out
imul
pop
add
push
pop
pop
daa
sbb
leave
stc
adc
dec
push
adc
bound
or
push
sub
cmp
inc
jecxz
enter
xchg
inc
cmp
fdivl
test
mov
dec
mov
lds
jmp
mov
insl
sub
mov
jmp
xor
sub
sub
cmp
iret
leave
add
cs
mov
hlt
cli
idiv
adc
push
or
push
inc
or
pop
inc
addb
ds
and
xor
fwait
inc
pushf
mov
push
xlat
in
testl
call
jnp
jl
mov
dec
fbstp
lret
mov
add
test
adc
cmpsb
lret
pop
pop
inc
dec
xchg
fsubr
mov
sub
dec
inc
in
popf
mov
shll
repz
pop
outsl
int3
xchg
jbe
push
push
add
mov
stos
or
inc
adc
mov
or
cmp
sbb
lret
fldln2
mov
stos
dec
push
cmp
lret
jo
mov
repz
sbb
lret
ja
mov
in
fidivs
or
mov
pop
or
cld
leave
loope
add
and
push
ds
pop
pop
aaa
repz
pushf
add
push
test
mov
scas
bnd
sarb
cmp
inc
inc
mov
sarl
outsb
outsl
mov
jbe
cmp
stc
imul
popf
cmc
loop
sbb
adc
fsts
jne
lock
and
test
sbb
or
ret
aad
pop
loopne
lahf
arpl
lods
icebp
mov
adc
inc
and
outsb
jl
jne
or
inc
xor
ret
and
rolb
setg
jle
sub
add
std
push
sbb
push
jg
jmp
ret
cmp
mov
jle
jo
fisttps
ja
aam
sub
dec
in
dec
mov
cmpsb
test
adc
add
pop
mulb
mov
mov
pop
fldt
dec
out
jnp
sbb
arpl
test
sqrtps
mov
dec
xor
icebp
js
lds
fadd
xchg
fldt
ja
or
xor
push
mov
aaa
ja
xchg
pop
lds
jmp
cwtl
arpl
mov
adc
mov
sub
or
cmpsl
lahf
pop
clc
push
insl
shlb
dec
push
in
out
adc
dec
dec
movsb
pop
loop
add
push
xchg
add
lods
sbb
mov
jae
and
arpl
adc
cmp
cmp
lret
test
dec
daa
repnz
test
cwtl
push
and
lods
mov
mov
pop
leave
test
pop
xchg
mov
xchg
push
and
pop
neg
pop
movsb
hlt
les
testl
add
sbb
outsb
and
sbb
cmpsl
mov
cmp
mov
and
ss
dec
cs
fstpt
dec
push
in
mov
jne
fisubrl
es
jns
sti
dec
mov
dec
out
fldcw
das
adc
call
push
mov
add
adc
dec
dec
lret
js
push
out
sbb
or
ds
push
or
lret
pop
repz
stos
out
mov
ret
sub
imul
xchg
inc
mov
stos
lret
sbb
sbb
rcrl
psubq
data16
push
in
adc
call
lods
mov
inc
sti
mov
cwtl
adc
mov
pop
or
cmp
test
sbb
in
jg
pop
mov
addr16
pop
icebp
mov
loope
dec
or
cmp
aad
adc
push
gs
sbb
lret
orb
int
cmpsl
cmp
inc
pop
push
lods
pop
xchg
mov
sub
insl
movsb
scas
lret
stos
inc
repnz
sbb
sbb
daa
inc
hlt
sarl
sti
fdivrl
ret
push
jmp
and
in
es
sub
cmpsb
adc
add
adc
leave
or
pop
mov
fisubrs
mov
sbb
inc
lds
aad
aad
dec
adc
dec
jae
xor
sub
popf
out
inc
xchg
push
and
xchg
or
filds
pop
dec
cwtl
rorl
sub
xor
call
mov
pop
cmp
fs
ljmp
insb
sbb
jmp
das
xchg
push
pusha
xor
adc
dec
mov
pop
xor
mov
mov
xchg
popf
lock
aaa
jns
pop
mov
push
jge
js
jecxz
inc
lock
adc
cmp
inc
cmp
stc
jbe
cmp
faddl
sub
sti
aad
xor
sub
cmc
pop
inc
sbb
add
and
fdiv
lea
mov
cmp
mov
inc
lahf
iret
push
jle
mov
dec
push
push
mov
rolb
mov
inc
scas
cltd
test
fistpll
test
dec
shl
dec
adc
shl
dec
push
sbb
test
nop
lea
inc
clc
dec
test
test
inc
inc
xchg
lcall
mov
mov
push
cmpsl
sahf
xor
loope
sbb
insl
mov
pop
jecxz
pop
mov
adc
xor
div
cli
mov
lds
dec
es
add
cmp
or
cmpb
sbb
bnd
push
sbb
pop
or
ja
push
rol
xchg
lea
push
daa
andl
jne
xlat
stos
in
ljmp
cli
lret
push
repnz
and
push
jle
ljmp
jno
mov
negb
and
jae
lock
and
lahf
xor
lret
vpaddd
lods
mov
jo
mov
dec
pop
in
or
into
xchg
insb
adc
cmp
int3
lods
and
cmc
push
addb
int3
mov
loopne
sbb
hlt
subb
leave
loopne
cs
pop
in
pop
lock
fsubrl
popa
add
adc
jge
ret
adc
pushl
push
sbb
mov
popa
sub
das
inc
mov
das
lahf
popa
fs
iret
test
cmp
loopne
mov
sahf
faddp
or
cmc
test
push
mov
xchg
lahf
into
jbe
mov
cmc
push
dec
mov
cmp
dec
pushf
sbb
mov
push
negb
addr16
mov
mov
pop
push
add
rclb
daa
out
pop
push
push
cmc
test
pushf
data16
sbb
sub
inc
push
lret
arpl
inc
jecxz
xor
ret
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
movl
xor
or
mov
and
lea
mov
push
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
lea
mov
or
mov
and
mov
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
mov
addl
mov
add
sbbl
push
xor
mov
mov
movzbl
sub
mov
mov
adc
xor
mov
addl
add
movl
cmp
je
mov
movl
jmp
mov
movl
cmp
movl
jne
push
jmp
mov
movzwl
mov
cmp
jne
mov
incl
xor
add
mov
adcl
mov
mov
xor
sbbl
add
imul
and
mov
andl
xor
add
cmp
movzbl
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
jmp
imul
stos
sbb
add
dec
pop
jl
push
loopne
lret
push
pop
jg
divl
lods
into
jge
fstps
cmp
push
inc
adc
loop
ljmp
ds
fneni(8087
jmp
inc
cld
in
in
stc
push
add
or
push
fcoml
or
fcmovu
hlt
js
out
imul
xlat
data16
addr16
addr16
iret
jns
mov
jmp
jb
mov
iret
xor
setae
push
scas
dec
inc
push
push
sbb
nop
icebp
xchg
dec
out
or
in
or
or
ja
lea
mov
adc
dec
lock
test
add
mov
jnp
add
data16
stos
nop
movsb
sbb
inc
jbe
push
aas
in
outsl
mov
or
sti
test
ja
jmp
dec
test
fbld
insb
add
out
in
cmp
sub
sub
jge
jnp,pn
or
sub
cmp
jns
sahf
and
sbb
int3
adc
or
mov
sbb
cmp
and
sbb
and
sbb
pop
cli
or
enter
jno
popf
mull
jnp
scas
mov
jmp
ficoms
ja
aad
idivb
insb
aas
push
xor
pop
cltd
fucomp
loop
fldl2t
ljmp
stc
cmp
data16
lods
arpl
add
push
push
sti
inc
mov
in
xchg
ss
test
loop
aaa
cmc
outsb
inc
cmp
cmpsb
fldcw
in
stos
test
je
out
out
fimuls
cs
movsb
push
ret
cmp
mov
ret
inc
ss
push
mov
xor
lret
lret
xchg
sub
adc
adc
je
cmp
inc
iret
sub
xor
out
nop
push
inc
add
jb
es
sahf
or
fistl
lock
adc
add
icebp
mov
and
inc
inc
ss
insl
in
push
cwtl
aam
gs
pusha
xor
adc
test
hlt
arpl
add
push
cmp
mov
adc
jbe
sti
xchg
mov
cmp
push
std
lea
scas
sbb
in
aad
adc
popa
stos
jno
in
add
scas
mov
sub
aam
jmp
or
out
mov
cmp
or
mov
jg
sub
dec
stos
pop
cmpsb
jp
sub
andl
or
in
and
push
mov
js
mov
add
notl
jnp
sub
jns
or
loop
and
mov
inc
sar
int3
insb
inc
loope
arpl
aas
aad
into
mov
jmp
add
out
repz
push
push
sahf
adc
mov
xchg
movsl
xor
into
mov
mov
in
push
pusha
pop
adc
mov
sbb
pusha
out
mov
dec
and
sahf
lea
mov
aam
mov
inc
dec
mov
addr16
xchg
lea
jbe
or
xchg
in
mov
imul
lds
je
mov
xchg
push
out
loope
mov
xlat
pushf
mov
or
cmpsl
inc
shrb
pop
je
fiaddl
jne
jg
or
xor
dec
jb
mov
pop
mov
mov
push
notb
mov
arpl
lds
in
xchg
xchg
pop
mov
push
fcompl
sub
aad
jnp
sub
xlat
and
mov
faddp
xlat
call
or
movsl
or
shr
iret
or
jecxz
or
pop
addl
inc
ja
cmpsb
jae
rcr
addb
testw
push
pop
xchg
aaa
xchg
je
aaa
loop
jg
mov
adc
pop
lahf
rcrb
jo
lods
cld
ds
or
add
dec
sbb
pop
or
lds
inc
or
pop
sub
out
ja
inc
jbe
adc
test
andl
pushf
pop
lods
cs
pop
sub
lret
aaa
nop
xor
fdivrl
jb
xor
lods
shlb
outsl
sub
sbb
outsb
dec
es
xor
lds
jg
add
iret
fcoml
jnp
add
jne
sarl
pushf
roll
sub
sbb
lea
aas
test
xorb
js
ljmp
int3
pop
fidivrl
push
push
dec
and
jge
mov
push
mov
fs
add
ja
data16
ret
add
dec
cs
mov
ds
imul
mov
clc
sbb
adc
cmc
in
call
orb
jmp
sub
dec
ljmp
stos
push
imul
andl
enter
pop
call
leave
jno
idiv
loope
jge
in
and
in
push
mov
xchg
jp
bound
enter
aaa
pushf
push
jns
pusha
mov
mov
dec
xchg
and
popa
dec
mov
dec
mov
xor
xor
adc
jo
push
outsl
out
in
or
sub
push
or
mov
mov
sub
mov
cmp
js
jmp
cmp
jbe
loope
pop
pop
out
or
push
lret
or
lock
add
adc
fsubr
push
push
adc
mov
idiv
aas
dec
or
test
jmp
mov
or
imul
dec
push
sub
jmp
fwait
mov
pop
mov
rcrl
mov
jae
scas
outsb
sub
pop
fadd
cld
cmc
xchg
or
cld
lcall
push
inc
mov
push
mov
test
sbb
lea
jg
imul
inc
xor
ficoms
fimuls
mov
add
iret
andb
mov
and
adc
sbb
push
addr16
popa
xchg
sub
popa
sub
aaa
mov
add
jge
loop
test
mov
es
add
or
inc
incl
mov
rolb
test
ljmp
push
cmc
mov
imul
adc
lock
cli
add
clc
xlat
sbb
dec
xlat
aaa
aad
iret
int
xor
sub
adc
mov
out
sub
int
mov
js
cmc
popf
int
sub
fsub
imul
or
cmp
testb
popf
dec
jns
mov
movsl
push
xchg
popf
jnp
fs
aas
mov
mov
pop
push
mov
mov
xchg
in
test
les
loopne,pn
daa
inc
arpl
push
pop
sbb
xlat
mov
jl
cltd
aaa
fldl
xchg
out
jge
mov
add
jg
repz
xor
test
aad
ss
cmpsl
jae
in
pop
or
inc
dec
lods
xchg
pop
xor
cmp
stc
fs
addr16
jmp
inc
stc
fadd
popf
xor
dec
xor
movb
pop
dec
adc
inc
pusha
orb
push
shr
mov
and
test
add
leave
xorl
fs
cmpsl
mov
popf
addr16
leave
call
sub
mov
or
mov
sub
xlat
rdpmc
fadd
testl
mov
add
cli
enter
jne
push
jb
outsb
pop
icebp
rclb
nop
jnp
notl
or
sub
out
xchg
mov
pop
push
hlt
pop
es
mov
xor
pop
xchg
pop
inc
outsb
sbb
mov
and
test
push
sbb
cld
cmp
adc
fwait
mov
orl
cld
fsubp
xlat
jecxz
mov
sub
lods
push
bnd
leave
and
je
xchg
lret
mov
xor
xor
pusha
mov
mov
xor
fdivp
loopne
mov
mov
sbb
pop
adc
mov
popa
inc
lahf
je
pop
test
leave
or
dec
aam
cs
dec
loopne
pop
mov
fdiv
scas
cmp
movd
sti
jae
fiaddl
jno
xchg
faddl
stos
bound
sbbb
dec
leave
int3
xor
loop
mov
mov
test
imul
push
mov
sub
fwait
mov
mov
mov
inc
sahf
fsubs
push
divb
adc
xchg
data16
cmpl
mov
jne
rcll
mov
test
lret
mulb
sbb
data16
stos
push
pop
lds
stos
in
pop
pop
mov
sbbl
pop
ljmp
stos
mov
mov
adc
push
incl
add
mov
aas
mov
hlt
in
dec
dec
insl
ss
jecxz
aad
mov
sbbb
jne
mov
pop
lods
int3
sub
push
aam
sti
stos
fwait
adc
jle
out
test
adc
popf
into
mov
filds
sbb
push
test
add
jecxz
in
push
clc
mov
pop
adc
pop
pop
repnz
sbb
out
jmp
sub
xchg
mov
or
pop
into
xchg
dec
jb
jnp
or
aad
and
cmp
push
mov
xchg
push
push
xlat
ret
jns
or
addr16
dec
adc
fmul
test
cmpsb
inc
cmp
or
adc
call
add
and
xchg
inc
mov
pop
inc
stos
lods
fstpl
mov
xor
leave
pop
pop
add
lcall
xor
data16
sub
xchg
pop
adc
fmuls
inc
fisttpl
add
rolb
mov
repz
je
push
dec
test
xor
cmp
sbb
jle
sub
es
and
leave
xor
jmp
mov
orl
xor
mov
in
push
xchg
add
xlat
ja
sbb
jp
jb
ret
sbb
hlt
shl
out
cltd
add
test
push
dec
call
lahf
jnp
aad
aad
mov
data16
enter
loopne
jge
push
pop
jae
je
aad
push
inc
mov
push
mov
and
imul
ficomps
test
sub
xchg
out
push
stos
daa
pop
jno
lcall
xor
xor
push
push
xor
pop
rolb
inc
ret
jecxz
jg
rcll
cmp
jmp
jae
loop
jbe
cwtl
rcll
add
cmpsb
pop
add
mov
aad
stos
decb
andb
cmp
cltd
fwait
ss
adc
cli
mov
jae
aam
push
mov
mov
and
mov
dec
mov
jne
dec
std
add
subl
or
outsb
mov
mov
sbb
push
sub
push
cmp
movsl
cmp
dec
sub
cmp
leave
mov
cli
pop
hlt
int3
push
aaa
stos
pop
xchg
inc
ret
and
push
lock
into
xchg
loope
mov
adc
jge
fsubrp
jmp
shrl
divb
dec
lahf
xor
fnstcw
or
and
xlat
ss
cmp
cmp
lds
adc
cmp
push
repnz
push
cli
sbbb
inc
gs
les
ret
mov
cli
jecxz
jg
mov
daa
jmp
sbb
loopne
cs
call
push
fsubrl
cmp
in
pop
pop
loope
shlb
lods
scas
ljmp
inc
popf
jecxz
push
sbb
or
mov
sar
je
pusha
mov
scas
dec
push
push
sbb
out
push
stos
dec
mov
rcl
fstpl
push
dec
or
imul
stos
aaa
jno
or
pop
daa
push
or
sub
shr
dec
jo
ss
mov
aad
aas
jg
jne
fdiv
cmp
dec
pop
lods
insb
loop
mov
dec
or
push
inc
movsl
icebp
pushf
aas
jecxz
or
aam
rcr
test
pop
adc
popf
lret
mov
sbb
sub
mov
inc
inc
dec
ds
dec
jp
addb
test
inc
rcrb
or
bnd
sbb
sbb
imul
mov
in
ret
test
test
dec
int3
mov
pop
sbb
jecxz
imul
gs
leave
push
lods
jl
cmp
xchg
vmread
iret
aam
or
out
cld
aad
push
daa
ds
sbb
xchg
rcrl
push
lcall
fmull
inc
xchg
push
jo
sub
popa
sbb
std
andb
jl
icebp
roll
in
jbe
js
pop
and
leave
cli
scas
popa
aad
xchg
addl
push
sbb
out
iret
loope
lock
jle
mov
fs
fwait
mov
mov
xor
popa
jle
inc
or
mov
out
rcll
cmpsb
or
pop
sahf
push
cmpsl
int3
sub
xchg
jns
mov
movsb
and
jne
ds
pop
jp
rcll
lods
xor
cmp
mov
in
subb
daa
cmp
pop
dec
sarl
mov
mov
sub
in
pusha
flds
sub
imul
jnp
movsl
pushf
mulb
inc
lret
xchg
test
mov
shl
test
lods
cs
arpl
cmp
test
mov
bound
sub
imul
sbb
jb
movsb
aaa
xchg
lcall
jmp
cltd
popf
je
popf
sub
xchg
mov
idivb
mov
mov
inc
jno
pop
stos
pop
fldcw
std
xchg
push
push
inc
shr
and
adc
in
js
pop
xor
xlat
add
inc
pop
inc
call
xchg
gs
bnd
and
sbb
shll
inc
mov
rorb
clc
mov
popf
test
mov
xchg
jae
and
push
and
mov
mov
ffreep
cmp
dec
cs
sub
push
add
xlat
mov
ftst
xchg
sbb
lds
fsubs
int3
fwait
hlt
mov
xor
and
mov
xchg
lea
movsb
mov
leavew
stc
mov
mov
test
xor
lret
fisubrs
dec
stos
sarl
push
add
dec
add
lret
cmp
ret
adc
int3
imull
rcr
test
dec
jno
adc
imul
sub
mov
push
inc
mov
cmp
jo
cmp
and
inc
sbb
enter
out
push
add
jnp
ds
popf
mov
inc
mov
int3
mov
call
and
xor
mov
pop
nop
fmull
out
adc
cs
les
xchg
ficompl
or
mov
add
xor
pusha
push
out
push
nop
jl
mov
mov
je
daa
sub
pop
incl
lods
inc
xor
sbb
push
popf
repnz
inc
fcoms
into
int
dec
rcr
stc
mov
mov
mov
push
cli
jns
sti
les
movntps
cmp
sub
popa
xor
sarb
arpl
gs
or
mov
push
and
dec
pop
imul
sti
faddl
cmp
inc
lock
dec
pusha
mov
add
repnz
insl
notl
cmc
aas
rcll
aas
cmp
add
xchg
push
mov
mov
je
inc
loope
mov
insl
push
sbb
mul
adc
cltd
aam
mov
ja
stos
inc
out
je
popf
and
push
push
aad
arpl
scas
push
inc
or
xchg
movaps
lahf
lock
lock
pop
push
aad
mov
mov
fsubrs
jae
xchg
cmp
jl
mov
jno
ret
sbb
or
frstpm(287
or
jo
repz
test
dec
orb
dec
ds
popf
sub
inc
cltd
lds
out
clc
test
pop
pop
data16
hlt
in
leave
es
lahf
scas
pop
add
je
in
push
jmp
pushf
xchg
pop
into
adc
add
loope
sub
icebp
mov
mov
cmp
mov
imul
movsb
push
push
test
lcall
xchg
les
cs
imul
mulb
jge
jne
jp
testl
xor
add
adc
xor
divl
xor
adc
jle
or
jae
push
mov
cmpsl
les
leave
enter
ds
pop
iret
fimuls
aad
lods
adcl
dec
cmp
ljmp
pop
sbb
imul
jmp
xor
sbb
fbstp
addr16
sbb
xlat
mov
sbb
sub
sbb
stc
xorb
flds
mov
pop
xchg
testl
outsb
scas
sbb
mov
scas
pop
xchg
cld
inc
minps
sti
pop
fstpt
sbb
jns
shr
iret
pusha
fimuls
std
or
adc
xchg
mov
jp
inc
xorl
inc
adc
les
adc
and
aad
hlt
cmp
lock
clc
mov
jmp
cmp
enter
or
dec
rol
test
dec
lea
push
addr16
enter
adc
sahf
dec
sub
nop
mov
and
roll
call
pop
test
jmp
sub
and
scas
movsl
les
stos
push
pushf
xchg
sbb
js
push
shlb
push
fidivs
jge
add
adc
jecxz
xchg
mov
push
js
cs
add
outsl
stc
or
lds
cmp
outsl
subl
xchg
das
jo
pop
orb
sub
xor
add
mov
add
push
fdivr
addb
in
scas
aam
mov
inc
cmpsb
mov
or
inc
and
stos
mov
ss
data16
push
cltd
mov
and
or
jle
xor
xor
adc
fs
ja
cli
movsl
ljmp
imulb
xchg
inc
jnp
in
jae
int
aam
fnstsw
mov
fnsave
dec
es
insb
enter
lret
push
inc
test
fs
out
out
jp
sahf
push
mov
add
pop
mov
leave
arpl
adc
lret
int3
insb
into
mov
mov
and
loope
xchg
outsb
adc
mov
fwait
jne
js
sbb
rcrl
ljmp
movsb
adc
pop
das
pushf
dec
test
lret
cwtl
push
inc
mov
jmp
mov
sti
jns
aas
pop
stos
gs
test
out
adc
lea
ret
cli
xor
mov
stc
imulb
push
inc
jb
cmp
jmp
push
adc
scas
dec
sbb
and
xchg
in
xchg
leave
jno
cmp
popa
mov
repz
adc
inc
sbbb
lea
mov
bswap
out
sbb
push
jb
and
push
int
push
mov
add
sub
push
lock
cmc
xchg
cld
lcall
leave
subl
ja
jl
jne
je
fwait
jge
insb
idiv
jmp
sub
mov
repz
xor
push
daa
adc
popa
jne
jns
pop
sub
cli
jecxz
or
sbb
out
mov
les
xchg
popa
shll
test
out
adc
rcll
subb
jecxz
enter
adc
jbe
rorl
xchg
xor
push
faddl
adc
cmp
call
jge
movsb
loope
jno
sub
pop
or
in
adc
jmp
test
pop
inc
arpl
mov
or
std
inc
mov
ja
mov
shll
mov
aas
pop
mov
xor
jbe
nop
push
jne
jno
jae
fwait
test
or
dec
rolb
repnz
clc
and
push
mov
sub
pushf
popa
rorl
sub
cmp
jmp
mov
test
mov
cltd
mov
sbb
mov
popa
sahf
das
lret
push
mov
call
push
or
shrb
push
push
nop
dec
xchg
push
push
push
lods
outsb
lock
mov
in
jl
shl
stc
aam
jae
imul
test
movsl
add
sub
lcall
les
lods
scas
sbb
push
xchg
cli
ss
stos
sub
mov
mov
mov
cs
outsb
mov
ret
sbb
inc
push
and
push
out
in
dec
adc
lret
pop
in
xlat
leave
mov
fsubrs
mov
insl
xor
mulb
inc
out
mov
into
push
jns
lods
mov
incb
and
or
into
imul
jno
dec
xchg
fidivrl
lods
das
in
cmp
xchg
jp
push
or
mov
aam
ret
push
cli
aas
out
rcll
mov
imul
daa
imul
mov
xchg
xchg
xchg
out
pop
movsb
fwait
xor
cmp
stos
mov
int
repnz
scas
mov
fcompl
leave
push
addb
cmp
sub
jmp
push
in
and
push
cld
movsl
pop
mov
inc
lret
movb
jbe
inc
xchg
negb
sub
pop
jo,pt
mov
sub
mov
sahf
or
aam
enter
push
insb
bnd
mov
cs
pop
dec
movsb
or
jo
cmc
jmp
xchg
in
loop
jecxz
and
jnp
jae
inc
cmc
call
ds
lcall
stos
aam
into
jo
lods
lahf
fsubs
sub
lods
movsl
pop
shr
movsb
ret
jg
leave
inc
cmp
mov
pop
inc
dec
sbb
sahf
outsb
lcall
call
mov
push
cltd
imul
loopne
or
inc
pop
and
jne
pop
pop
jbe
leave
cwtl
ret
push
push
inc
repz
call
xchg
mov
pop
and
lret
mov
push
or
enter
ljmp
ret
pop
add
mov
sarb
outsb
or
fcoms
xchg
and
mov
xchg
outsl
fs
shll
adc
aaa
or
push
cld
cvttps2pi
inc
or
scas
jbe
aam
cmpsb
fwait
mov
dec
movsl
adc
jge
data16
mov
cmc
pop
jecxz
sub
cli
dec
xchg
out
sub
mov
jnp
daa
jecxz
je
mov
inc
aad
fadds
cmc
add
sbbl
mul
pop
pop
lcall
gs
dec
fstpt
cmc
add
xchg
push
aas
notl
shl
repz
jne
xchg
movsl
jecxz
add
dec
mov
fidivl
sbb
push
xchg
les
and
imul
jb
or
jns
loope
sbb
cmp
adc
xor
das
or
xor
stc
std
jg
mov
insb
mov
test
fistl
dec
xor
int
push
pop
mov
orl
cmp
aad
movsb
fildl
pop
mov
mov
stos
call
adcb
mov
push
pop
mov
push
rcrb
pop
sub
mov
out
imul
testl
jecxz
iret
in
push
pop
mov
lds
fisubs
or
cmova
jle
lret
shlb
pop
std
xchg
dec
pop
imul
scas
insb
iret
ret
lcall
daa
shll
out
jo
cmp
dec
js
pop
cld
aaa
roll
arpl
roll
mov
lret
pop
ds
and
mov
adc
aaa
cmpsl
out
fdivrs
pop
pop
roll
cmc
sub
jecxz
aaa
cmpsb
insb
push
insl
aam
ljmp
test
stos
lahf
jb
adc
jg
mov
xlat
leave
pop
pop
les
imul
iret
or
aad
decb
cs
jbe
mov
xchg
jo
imul
jg
xchg
popl
cmpsb
repz
xchg
xchg
aas
pushl
aam
push
sbb
xchg
std
pop
es
push
fmuls
les
add
and
insb
in
sbb
pop
mov
xchg
xlat
lods
jecxz
or
testb
sbb
mov
jmp
fisubs
xor
adc
popa
lss
xchg
mov
push
shll
mov
in
movsb
cli
mov
insb
dec
jo
lods
fisttps
js
jge
stos
mov
mov
or
mov
pusha
and
fistps
add
pop
dec
fdivr
cmp
dec
sbb
je
mov
sbbb
ja
arpl
movsl
xor
scas
cld
sbb
inc
xlat
repnz
xor
inc
stos
mov
jmp
pop
xor
shl
imul
add
into
mov
shl
fstpt
or
inc
cmc
dec
movsb
jecxz
aad
movsl
push
test
cmp
mov
push
add
shlb
mulb
dec
xchg
outsl
xor
mov
push
mov
jne
loop
lods
jle
data16
pop
iret
jmp
xchg
enter
adc
stc
pop
xor
jno
and
or
in
mov
mov
jno
dec
add
pop
jmp
push
clc
lea
sub
ret
mov
fcoms
add
loop
inc
jle
out
xchg
fadds
call
sub
cli
mov
test
stos
xchg
and
adc
stc
push
mov
and
inc
jb
xor
xchg
jecxz
and
xchg
mov
dec
mov
push
mov
adc
js
cmp
loopne
jecxz
add
ljmp
xor
xor
xchg
scas
push
jb
shrb
imul
jl,pn
mov
mov
jg
int
das
aas
jno
push
fs
clc
mov
or
jmp
push
dec
stc
or
sbb
jne
jmp
je
pop
xchg
xor
push
fisubl
lcall
shrl
nop
jb
sub
addl
push
aaa
jecxz
or
jb
push
and
add
incl
insl
or
fldenv
call
xchg
xchg
gs
movsl
sub
in
add
dec
push
aas
mov
xor
mov
adc
mov
sub
je
cmp
mov
movsl
repnz
cmp
int
mov
and
mov
bound
lods
add
je
out
cltd
sub
lret
sub
mov
arpl
and
out
outsb
cmp
fcomi
xor
mov
mov
imul
mov
imul
rorl
inc
xorb
in
outsl
lahf
test
dec
popa
mov
repnz
add
lods
inc
xlat
aam
or
cltd
mov
mov
call
imul
ret
xlat
addr16
and
mov
fidivrl
cs
iret
fiaddl
std
nop
jno
fcmovnb
sar
clc
add
cli
inc
pop
fisubl
cmpsl
fists
imul
pop
push
push
dec
cld
xchg
xor
fsubrl
cld
xchg
adc
cmp
enter
inc
sub
rcl
adc
jp
cmp
or
push
sbb
std
inc
cs
cmp
sbb
in
sahf
hlt
inc
adc
sub
xor
nop
div
hlt
mov
mov
add
xchg
mov
shrb
xor
cmp
ss
lock
out
test
mov
jmp
push
or
pop
std
sbb
or
push
inc
add
enter
mov
std
jge
xchg
cmp
ret
cmp
stos
cmp
lret
adc
sysret
mov
rorl
adc
xor
push
xchg
aas
fsubr
jp
out
xchg
adc
push
adc
aad
mov
push
dec
fistpl
imul
cmp
outsb
mov
mov
pop
fucomip
cmp
sbb
testl
shll
inc
sub
ljmp
testb
push
xor
scas
out
and
cmovbe
jl
dec
mov
sbb
pop
sub
and
or
insb
aam
mov
leave
mov
clc
xchg
clc
cmp
xor
out
dec
xor
cmp
pusha
inc
mov
call
push
fsubrs
sti
out
cwtl
scas
jnp
imul
sbb
cs
push
adc
mov
out
xor
cmpsb
pop
or
mov
pop
dec
scas
xchg
test
pop
jl
cmp
pop
dec
and
nop
scas
push
push
movsl
pop
roll
mov
ret
sarl
xchg
add
sub
xchg
rcl
sti
and
dec
xlat
and
lds
push
jg
repnz
mov
push
insb
dec
dec
or
jno
loopne
adc
mov
jae
fwait
inc
or
push
cltd
imul
push
jecxz
cmp
xchg
mov
inc
fidivs
push
insb
arpl
fbld
hlt
repnz
xrelease
sbb
popf
cmp
lahf
inc
lret
lods
dec
movsl
pusha
ret
lea
popf
mov
in
movl
lcall
sahf
lret
mov
adc
jns
mov
outsl
enter
jmp
rcrl
xor
leave
daa
sub
das
out
subb
mov
dec
sbb
std
pop
into
jecxz
mov
cltd
movsb
rcl
adc
cld
lahf
add
es
jmp
or
fisubrl
pop
adc
push
or
std
push
jl
aam
mov
gs
cmp
ficoml
call
mov
sub
hlt
in
je
mov
jns
lods
mov
dec
xor
or
cmp
xchg
jge
fidivl
gs
cmc
ljmp
stos
sbb
fcmovbe
pop
add
imulb
mov
push
cwtl
jge
daa
cmp
movl
add
fstps
mov
dec
sbb
dec
mov
out
dec
imul
pop
add
xor
and
int3
xchg
js
mov
push
testb
hlt
mov
es
inc
test
int3
adc
les
lea
mov
sti
xorl
fildll
adcb
fcoms
in
xchg
stc
and
xchg
into
jmp
in
in
insb
jno
sbb
jns
jae
aaa
clc
xchg
inc
insb
popf
decl
adc
repz
popa
shll
or
gs
scas
jl
out
ja
cmpsl
xchg
aaa
and
or
and
xchg
cwtl
lahf
and
insl
clc
lods
leave
xchg
push
mov
push
pop
add
mov
sbb
add
nop
sub
ds
ljmp
mov
cmp
mov
dec
mov
sbb
push
sub
adc
mov
push
lret
scas
test
add
addb
mov
imul
jns
add
mov
pslld
aad
fsubr
mull
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
andl
mov
mov
mov
xor
add
mov
movzwl
and
mov
mov
sbbl
xor
adc
push
sub
mov
movzwl
sbb
mov
negl
add
xorl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
push
andl
xor
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
push
call
jmp
and
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
push
mov
mov
xor
xor
mov
add
add
imul
mov
jmp
mov
in
xor
mov
fdivrl
jl
aam
jl
or
out
out
dec
push
cmp
ffreep
orl
cmp
xchg
lcall
fists
mov
sbb
cli
sbb
push
and
and
lahf
pop
adc
lea
movsb
push
test
fildl
shll
or
adc
lcall
pop
mov
push
outsb
mov
out
jecxz
adc
inc
cmp
sub
xor
scas
cmc
lcall
stos
test
fisubrs
sub
cmpsl
cmp
std
stc
pop
bound
outsb
dec
xor
cmovl
in
test
testl
scas
sbb
mov
out
mov
sarb
std
sbb
mov
sbb
adc
pop
cwtl
jmp
imul
sub
inc
or
je
push
adc
mov
out
pop
loope
daa
fs
loop
push
in
mov
stc
mov
leave
int3
cmp
ret
dec
stos
pop
cmp
pop
popa
scas
jp
xchg
sub
sub
inc
pop
mov
sahf
jnp
lods
mov
sub
pop
std
xchg
mov
frndint
push
jge
mov
mov
imul
test
ljmp
into
xor
stc
sbb
xor
sarl
repz
dec
mov
pusha
int3
fmulp
and
shrl
jne
xchg
push
xor
or
pop
inc
in
movsl
stc
xor
ja
sbb
addb
cmp
cltd
mov
xor
pop
mov
or
sub
mov
sbb
push
jmp
jle
dec
stos
xchg
cwtl
xor
inc
fld
xchg
outsl
jbe
or
mov
scas
sbb
imul
cltd
mov
arpl
adc
shll
push
inc
aad
addr16
cltd
les
xor
cmp
push
aam
fmull
int3
cwtl
cmpl
mov
pop
xchg
cmpl
inc
add
pop
mov
mov
ffreep
mov
popf
lahf
incl
mov
in
mov
daa
push
aam
nop
sub
fisttpll
mov
ds
movsb
out
cmc
sub
fcoml
aam
push
cwtl
gs
cmp
enter
xor
inc
add
dec
add
popf
dec
adc
sub
inc
push
sbb
push
leave
and
jl
scas
and
cmc
dec
fs
hlt
adc
test
adc
repz
stos
stos
pop
mov
movb
notb
sub
jge
jae
pop
pop
fcompl
aad
xor
rcll
adc
ss
test
pop
cmp
mov
ds
rolb
or
repnz
rorb
jb
pop
xorps
jo
xor
loopne
push
ror
sbb
xor
adc
push
adc
inc
lods
stc
sub
mov
xor
xchg
add
inc
mov
mov
dec
imul
jbe
jbe
xchg
sub
pusha
outsb
mov
sub
sbbb
icebp
mov
mov
adc
inc
daa
sbb
xor
aam
xor
cld
xor
clc
test
and
mov
imul
ret
mov
sar
mov
call
inc
iret
out
fcomi
dec
xor
and
inc
fmull
je
fidivrs
xor
and
iret
jp
out
test
xlat
scas
fnstenv
shlb
stos
cmc
lock
mov
std
enter
jmp
movd
dec
aam
pop
sub
jge
das
pusha
lods
adc
stos
das
daa
aaa
xor
add
stos
das
mov
fiaddl
sarb
lock
outsl
sub
fimuls
mov
jl
cmp
in
icebp
fisubrs
scas
push
cmpsl
nop
lods
lret
dec
test
adc
sub
cltd
lock
imul
subb
jge
push
xlat
shr
sub
fbld
icebp
sub
cs
ret
push
popf
add
cs
or
sub
inc
push
les
int3
adc
and
out
mov
in
cwtl
call
mov
loop
xchg
ret
mov
add
mov
aas
roll
xchg
cmp
jp
or
es
xor
movsl
lret
cmp
jp
mov
and
scas
imul
sbb
es
mov
push
push
jmp
and
jg
js
movsl
lret
xorb
and
in
xor
and
jmp
jno
fisubrl
incb
out
cwtl
dec
movsb
and
pushf
lret
dec
je
mov
pop
push
cmp
adc
push
sbb
jo
pop
les
negl
lock
push
enter
mov
fistps
lret
pop
push
cmc
push
xchg
and
mov
xchg
int
ja
and
jns
or
aaa
incl
inc
fisttpll
fxch
xchg
xchg
jns
xchg
rcll
mov
vucomisd
je
stos
adc
pop
adc
and
xor
call
daa
push
mov
push
xlat
js
mov
jecxz
push
popa
les
lds
pop
sbb
sti
sbb
jge
push
jle
fisubrs
sbb
aam
mov
test
mov
fwait
mov
sub
nop
dec
cmp
push
out
jecxz
addr16
push
or
xchg
jae
cmp
adcb
mov
sub
cltd
jle,pn
stos
inc
mov
inc
push
leave
roll
sbb
mov
adc
adcb
into
dec
jecxz
in
and
inc
fistps
jnp
stos
movsl
mov
mov
cmp
adc
popa
test
in
test
aad
bound
fldenv
sbb
ret
push
sbb
mov
jnp
and
loope
addr16
jge
adc
lcall
mov
xor
mov
das
cmp
dec
pop
sub
into
iret
insb
jg
mov
adc
popa
imul
add
and
loope
out
sub
xchg
jp
test
jnp
xchg
mov
fldl
cmpsb
int3
mov
push
dec
jl
ret
and
cld
punpckldq
sub
addr16
pop
adc
mov
xor
dec
push
ret
iret
dec
cld
dec
aas
cmp
xor
mov
push
pop
call
adc
xchg
aam
lahf
jmp
mov
sub
enter
xor
lcall
or
mov
fisubl
jge
sub
mov
jae
adc
jnp
mov
std
pop
pop
cld
adc
jae
xchg
inc
cmp
bt
xor
les
sub
mov
lret
into
xor
xor
ret
popf
cmp
or
imul
jl
mov
add
or
loop
mov
fildl
insl
sbb
inc
dec
data16
push
sub
fnsave
nop
clc
and
xor
jno
dec
lea
jg
stos
add
sbb
cmp
shl
fldcw
mov
movsl
insb
das
call
cmpsl
out
cwtl
mov
xor
in
pop
inc
pop
pop
repz
or
stos
lock
and
jns
jecxz
es
mov
pop
or
fsubrs
cmp
incb
dec
push
clc
add
add
sub
divb
mov
std
mov
sti
cmp
loop
sahf
mov
jb
xor
into
lret
rclb
mov
and
xchg
mov
stos
cmp
pop
in
jp
jmp
stc
aas
in
lahf
mov
mov
mov
fnsave
out
cld
xor
pop
sbb
jge
and
lods
scas
shlb
adc
mov
ret
sub
js
pop
insl
pusha
dec
dec
push
fwait
mov
gs
mov
push
add
stos
pop
or
pop
push
sbb
enter
push
push
fisttps
fstpt
cmpsl
jp
ljmp
cmpsl
lock
test
in
dec
push
push
cltd
adc
ja
adc
or
shrb
push
jge
fnstcw
xchg
nop
xlat
ficoml
sbb
xchg
pop
pop
stos
aad
enter
adc
xchg
and
idivb
cltd
repnz
js
inc
adc
xchg
rcrl
add
insl
mov
aam
fimull
pop
shll
pop
insb
dec
movsb
sub
pushf
ret
push
mov
inc
imul
stos
cmc
push
sbb
dec
push
aas
iret
push
jne
insl
pushl
je
divl
mov
out
mov
cmp
sbb
xchg
ljmp
dec
imul
lret
mov
or
jnp
pop
dec
sub
jge
sub
subl
adc
push
cmp
cmp
sub
mov
push
xor
in
mov
loopne
aam
ja
xor
and
adc
pop
xchg
add
sbb
inc
add
sbb
test
clc
mov
addl
fcomps
inc
push
jg
mov
iret
arpl
icebp
jno
and
sbbb
mov
repz
test
iret
mov
jle
scas
jbe
in
cmp
mov
insb
enter
jg
mov
mov
xor
lods
jno
xchg
out
mov
movsl
push
arpl
mov
cmp
push
fdivs
fwait
xor
aas
inc
pop
cwtl
cmp
adc
stos
out
mov
ds
mov
add
jae
rsqrtps
xchg
outsl
adc
xchg
movsb
sub
out
in
ficoml
push
in
enter
xor
mov
pop
add
mov
push
stc
xchg
popf
jmp
sub
xor
mov
jbe
mov
mov
adcb
jg
lods
sub
jp
jno
dec
gs
lahf
jecxz
repnz
addl
in
mov
jle
sub
test
push
stc
push
jmp
dec
pop
in
sbb
in
xor
in
in
cmpsl
lock
push
shrb
aam
aas
fs
leave
mov
aaa
cmp
cmp
push
pushl
pop
xor
sti
cmpsb
cmpb
scas
dec
iret
pop
imul
lds
push
push
lahf
and
sarb
cmpsb
loop
mov
orb
pop
xrstor
or
inc
mov
add
lret
mov
or
lods
fs
adc
mov
adc
flds
jnp
aam
pushf
xor
fsubrs
pop
add
std
stc
xor
rcrl
es
stos
int
iret
add
insb
fs
iret
dec
xchg
cld
mov
outsl
rolb
pop
push
aam
push
int
test
repz
into
cmpsl
sub
mov
mov
aas
inc
xor
shll
icebp
sti
jo
dec
jno
test
iret
push
fbstp
mov
cmp
jge
fwait
outsl
rcrl
jnp
jg
les
clc
and
and
lock
stc
int3
xor
pop
aam
sub
push
mov
mov
dec
rorl
movsl
inc
fdiv
lret
shufps
mov
arpl
jecxz
loope
dec
lods
cmc
mov
pushf
sti
xor
add
incb
xor
shrl
cmp
insl
bound
xor
aaa
sbb
ret
xchg
movsl
icebp
subl
je
adc
fs
lcall
xorb
stc
in
xchg
lea
adc
mov
imul
stc
arpl
idivb
mov
cwtl
cwtl
xor
or
xchg
dec
pop
adc
lret
lods
inc
push
sub
movsl
lea
hlt
inc
cld
sub
push
fcompl
adc
addr16
inc
in
insb
out
adc
xlat
jg
pop
add
filds
mov
xorl
xor
fisubrl
scas
mov
xor
ficomps
andl
mov
shrl
mov
icebp
jo
inc
mov
jp
and
adc
test
push
xchg
xor
adc
cmc
jmp
idiv
sbb
inc
call
test
jp
jge
or
and
mov
stos
inc
repz
dec
push
xchg
scas
push
leave
add
rcrb
or
popf
daa
pop
mov
cld
cmp
push
jae
fwait
xchg
mov
push
aaa
call
cld
inc
adc
fs
xchg
cmc
push
lret
and
cmp
cmp
lret
popa
xchg
and
in
and
gs
es
sub
sbb
out
cli
inc
inc
push
pop
pusha
mov
xchg
sti
out
ljmp
mov
jbe
mov
ret
jge
xchg
lret
lcall
into
inc
les
loop
mov
repnz
adc
inc
movb
pop
jp
ss
inc
testl
xor
test
pusha
add
and
aas
sbb
cmp
stos
push
inc
sub
pop
add
lds
hlt
pushf
jle
ret
aam
cwtl
jbe
in
and
xor
xchg
lea
lods
lds
inc
cmp
inc
jle
xchg
int3
fs
add
mov
and
or
lcall
add
mov
cwtl
add
sahf
leave
xchg
cltd
iret
mov
test
out
cs
daa
stc
pop
stc
push
xchg
rclb
mov
push
popa
mov
cld
push
inc
clc
or
xchg
push
adc
movsb
scas
mov
int3
cmp
mov
aas
dec
ss
cld
inc
je
adcl
pop
ss
fdiv
lods
in
mov
add
js
xchg
jl
xchg
mov
mov
fidivrs
addl
push
cmpsl
cmpsb
std
filds
adc
mov
sub
mov
push
xor
imul
mov
lds
push
jg
clc
dec
repz
leave
std
adc
jl
das
lret
out
cmp
das
mov
mov
fdivrs
stc
mov
and
test
pusha
add
push
xor
pusha
push
leave
mov
xor
ret
pop
pop
sub
mov
dec
lahf
inc
lock
inc
outsb
add
mov
pop
rcl
int3
lods
xor
sub
imul
jno
and
mov
fcomi
pop
dec
jbe
mov
int3
test
jl
mov
sbb
and
jae
cmp
inc
in
rcrl
xor
pop
cmp
nop
stc
ljmp
mov
sbb
xchg
insl
stos
ret
add
jle
sub
mov
push
cmp
inc
in
insb
addr16
sbb
dec
adc
repnz
jo
xor
fstpt
push
inc
sub
pop
arpl
or
data16
xchg
out
insl
mov
xchg
xor
dec
faddl
cmpsb
inc
push
pop
xor
int3
push
imul
jle
loopne
mov
sbb
fldl
add
cmovns
arpl
out
fisubrl
dec
xor
sub
nop
rorb
test
mov
pop
push
xchg
sbb
inc
or
xor
adc
jle
xchg
xorl
lahf
mov
in
rcrb
test
mov
mov
bound
sbb
fisubrl
data16
insb
cli
ss
push
mov
inc
iret
ret
aam
sub
cltd
jl
test
jle
pop
lock
adc
mov
sbb
cmpsl
mov
out
lcall
shrb
xchg
popa
or
or
sub
adc
decl
dec
pusha
and
sbb
out
mov
adc
ja
mov
jnp
and
add
call
or
push
mov
lods
std
in
popa
sarb
sub
inc
sub
fdivrs
inc
out
les
cmp
dec
pop
mov
adc
insb
cmp
daa
cmpsb
mov
fwait
xor
mov
imull
and
es
mov
push
jg
inc
scas
xchg
cltd
cmpsb
mov
mov
aam
mov
cmp
lds
mov
jbe
sti
sbb
icebp
and
movsl
and
data16
lock
outsb
pop
jg
dec
in
hlt
enter
cmp
mov
xchg
jne
cmc
fwait
push
push
or
pop
push
ljmp
adc
mov
add
jecxz
mov
push
xchg
push
pop
lret
inc
sub
xchg
aas
and
mov
shr
popa
cmc
push
nop
mov
push
add
ret
sub
in
push
mov
lahf
xchg
or
cmp
and
and
call
sub
sbb
push
retw
jo
pop
jge
jmp
aaa
les
orl
cmp
sbb
imull
test
xor
cltd
ss
ss
xchg
stc
mov
and
jecxz
add
add
add
adc
dec
mov
shrl
cltd
addr16
js
repz
lods
adc
popf
adc
out
add
xor
push
sub
dec
lret
inc
mov
rorb
test
sub
les
xchg
orl
shlb
push
xchg
bound
xchg
and
std
sub
cmc
sbb
mov
and
shll
adc
mov
add
xlat
call
sti
push
jno
or
sub
scas
push
ljmp
int3
pop
or
lds
fstl
pop
sub
sub
mull
movsb
or
mov
xchg
dec
jbe
cmp
lods
cmp
test
jb
push
sub
cmpsb
sbb
rcrl
inc
in
sub
movsl
pop
pop
imul
into
insl
mov
ja
in
cmp
fdivrs
out
cli
lods
outsb
int
stos
and
ja
ljmp
lret
outsl
pop
push
xchg
pop
or
xor
lods
movb
shrl
jno
adc
pop
push
scas
add
ljmp
jecxz
xlat
push
outsl
movsb
cmp
adc
ret
pop
or
xor
fcompl
push
sti
sub
xchg
cltd
and
nop
jecxz
pop
out
xchg
movsb
pop
adc
cmp
mov
icebp
sti
lea
mov
cltd
mov
lock
mov
pop
cwtl
imul
add
fsubl
mov
sub
mov
shr
dec
outsl
popa
cli
jp
inc
je
nop
lds
add
cltd
sbb
and
xchg
and
scas
jne
pop
pushf
fisubrs
push
xor
sbb
lock
sbb
xor
and
es
dec
aas
pop
data16
in
in
pushf
xchg
icebp
add
xchg
and
and
sbb
push
and
push
mov
lret
adc
scas
cmpsb
test
mov
insb
and
xchg
jbe
push
popw
push
testl
imul
fs
adc
cmp
jnp
xchg
mov
pop
push
adc
movsl
andb
out
mov
dec
xor
mov
test
sbb
xorb
in
psubusb
call
lahf
xchg
adc
jne
fdivl
and
jae
push
jl
jmp
iret
inc
mov
jp
inc
adcb
xchg
sub
arpl
xchg
inc
push
mov
xor
sti
outsb
ret
push
icebp
clc
push
mov
notl
icebp
mov
test
pop
push
and
lahf
jecxz
sbb
push
divl
cwtl
add
enter
cmp
popf
lcall
mov
add
jg
or
cld
cmp
lcall
xchg
mov
jg
lods
pop
loope
and
sbb
push
pop
mov
fldcw
mov
pop
sub
ss
xchg
aas
dec
andb
bound
cmp
jns
sub
push
mov
push
movsl
insl
adc
mov
int
push
ja
or
fwait
shlb
push
xor
xchg
mov
lret
mov
pop
cmp
sub
mov
push
shlb
fs
jbe
arpl
jge
jae
gs
mov
lods
jle
enter
ret
cwtl
xlat
das
mov
nop
fcomps
popa
jp
lret
lds
lret
fiaddl
cwtl
stos
cld
loop
popa
lods
jne
pop
xchg
and
push
es
mov
rclb
push
jmp
inc
mov
inc
in
aad
subl
insb
les
mov
xor
scas
fadd
adc
inc
push
into
xchg
nop
mov
mov
pop
aam
pop
jae
dec
call
loopne
dec
or
out
ljmp
inc
push
int3
inc
cmpsb
pop
stc
pushf
divl
mov
inc
enter
pavgb
mov
stc
jnp
ds
push
mov
icebp
sub
rorl
push
imulb
push
movsb
or
cmc
jmp
xchg
std
call
push
je
int3
shl
add
fidivrs
dec
sub
add
in
iret
adc
inc
sbb
mov
add
sbb
ret
sub
je
jle
xchg
mov
outsl
jl
pop
mov
or
scas
push
push
adc
add
lock
xchg
ljmp
sti
imul
add
mov
loopne
push
add
sub
sbb
test
je
jg
xchg
jnp
push
add
pop
flds
push
dec
in
mov
loop
push
push
mov
jl
cmpsb
shl
inc
cmpsl
pushf
roll
stos
mov
adc
rolb
jge
dec
dec
test
mov
leave
inc
neg
inc
stc
daa
dec
retw
jb
ljmp
mov
das
or
mov
jecxz
lods
test
mov
push
out
int
and
adc
imul
outsl
inc
mov
add
or
mov
cmp
das
and
jno
mov
pop
subl
jno
rclb
xor
test
cmp
lahf
sub
outsb
sbb
sbb
rcrb
faddl
and
adc
sbb
adc
rcll
jo
xchg
arpl
mov
or
sti
lds
push
and
mov
aaa
jg
sti
xchg
and
mov
or
dec
out
cmp
ret
sub
inc
aam
inc
mov
push
push
push
scas
lock
jno
ja
aaa
dec
xchg
insl
xchg
dec
push
xchg
inc
add
mov
sbbl
mov
fimuls
movsl
std
xlat
xchg
pushl
sbb
or
push
mov
pushf
dec
pushf
add
mov
les
or
aas
mov
stc
inc
bound
xchg
shlb
bswap
mov
cmpsb
adc
cmp
insb
cmp
test
dec
sbbl
sub
pop
sub
jnp
dec
fisttps
and
js
aaa
dec
ja
sub
mov
jl
or
cmc
sub
pop
sti
movb
nop
leave
loop
and
pusha
lods
ret
jl
sub
nop
ret
ret
mov
pusha
xlat
pop
pusha
adc
ficomps
fisttpl
test
fwait
ja
imul
lret
sub
xor
mov
or
ljmp
popf
inc
clc
mov
cltd
xor
repz
add
imul
cmp
xchg
sahf
sub
mov
add
movsb
cmp
dec
aas
shll
inc
cmp
xor
mov
outsl
dec
xor
data16
sarb
enter
cmc
clc
or
mov
mov
mov
loop
jg
lock
sbb
mov
js
pop
clc
pop
ljmp
ret
aaa
inc
xlat
das
mov
mov
push
sbb
aaa
sub
sbb
xlat
adc
inc
cmpsb
mov
cmp
and
pop
sahf
xchg
incb
xchg
or
push
popa
fidivrs
lods
fsubs
pop
mov
fsts
dec
sbb
mov
adc
sbb
sar
rclb
push
loope
movb
or
add
xchg
imul
shrl
std
xchg
add
pop
xchg
dec
fdivr
mov
ud2
and
push
lcall
xor
adc
test
and
inc
in
pop
lret
cld
cmp
idivb
sbbb
insl
cmp
inc
cmp
jbe
pop
jp
dec
push
std
andl
cmp
loop
into
xor
mov
or
inc
std
mov
push
movaps
stc
or
aas
repz
pop
dec
push
add
inc
add
adc
test
out
add
dec
pushf
sbb
adc
insl
movsl
push
and
cmc
out
cltd
push
inc
adc
cmc
inc
fwait
adc
lds
add
ljmp
loop
int3
cmp
and
insl
jbe
add
mov
fimuls
aas
ss
loope
movsl
jns
cmp
movsl
jne
mov
cld
and
jnp
cmp
push
jle
mov
jecxz
inc
popf
test
fwait
cmp
mov
and
test
jbe
dec
xor
pop
xchg
js
imulb
jmp
test
jo,pn
pushf
sbb
ljmp
rsm
scas
add
fldl
cmpsb
sbb
adc
cmp
addl
repz
jl
xchg
out
mov
sbb
push
pushf
mov
adc
and
test
mov
mov
jnp
ret
popf
jae
xor
lods
inc
jge
shrl
je
push
pop
cmp
add
pop
fisubrl
xchg
insl
subb
lret
pop
jne
repnz
push
sub
jne
cmc
or
idiv
mov
enter
adc
cmpsl
lods
call
and
jo
pop
stc
rcrl
pop
lock
fs
out
ljmp
jno
sub
dec
lret
pop
pop
jge
pop
sbb
jg
pop
fdivl
jbe
sub
sti
loopne
les
add
dec
imul
fnsave
cmp
mov
pop
sbbl
jp
and
mov
aas
adc
dec
incb
in
scas
test
or
insl
mov
cmpsb
fistl
sbb
sbb
push
push
ljmp
cld
and
cld
jp
fidivs
repnz
and
and
lcall
sub
add
push
xchg
shrb
sbb
jnp
jecxz
mov
xchg
mov
push
or
jmp
or
adc
inc
popf
fmuls
std
dec
dec
arpl
out
xor
add
and
mov
xchg
mov
inc
sub
xor
inc
jle
enter
mov
gs
jo
icebp
outsb
push
mov
inc
jae
pop
fidivrl
lods
and
and
sub
xchg
cmpsl
xchg
int3
sbb
push
dec
fisubrs
and
pop
fisttpl
fcomps
loopne
cwtl
sbb
std
bound
pop
data16
xorb
xor
sub
leave
fsubrs
push
jnp
aas
sbb
aam
mov
dec
jp
add
xchg
lahf
xor
pop
arpl
out
ljmp
fcom
adc
daa
shlb
add
das
sbb
jle
jne
adc
mov
lds
push
jp
or
inc
movsb
ja
sbb
pop
pushaw
mov
mov
cwtl
xor
push
mov
lods
int
jge
xchg
sub
cwtl
or
cltd
fisubrl
mov
loope
inc
and
or
dec
xchg
fstps
sbb
pop
sbb
test
loope
fmul
add
popa
sbb
xchg
shrl
pop
cmp
jle
or
mov
push
pop
inc
inc
fiadds
daa
sbb
cmc
xor
sbb
sbb
mov
sbb
jne
js
mov
outsb
sub
call
cld
jns
cmc
mov
and
and
ljmp
int
test
testb
mov
hlt
cmp
leave
jmp
mov
popa
add
lret
es
ret
jno
xchg
lods
dec
mov
out
dec
fsubr
int3
fmull
popf
mov
ja
sbb
sub
out
je
push
mov
fs
sub
jmp
cmp
ds
xor
bnd
cmc
push
or
call
cmp
popf
pop
cmp
test
pop
push
ret
pop
xor
xor
sbb
xor
in
and
jle,pn
xchg
out
lods
cs
sarb
xchg
daa
adcb
fdivrp
inc
scas
iret
ss
lcall
inc
xchg
sbb
xchg
adc
popf
gs
sbb
and
roll
mov
xor
stc
pushf
and
jge
push
pop
int3
in
xlat
out
pop
loopne
aas
aad
iret
xlat
mov
sarb
push
test
mov
aaa
imul
lock
mov
cltd
stc
add
lods
fisttpl
nop
cs
jge
sti
inc
sbb
test
es
mov
ljmp
scas
enter
mov
imul
lret
mov
imul
not
or
xor
sti
testl
push
and
xor
imul
or
push
bound
int3
xorb
mov
sbb
push
pop
push
xchg
xor
mov
fbstp
shll
mov
shll
mov
sub
add
pop
xchg
sub
jecxz
in
add
push
mov
xor
cmp
shll
pop
xor
lds
push
popa
xor
pop
push
jmp
orl
in
stos
ljmp
shrl
dec
push
cmp
dec
push
in
push
sub
or
cmp
ja
popa
sub
loope
or
xchg
lods
out
loop
clc
sbb
loopne
inc
jb
testb
mov
stc
lret
mov
inc
sub
rorl
mov
mov
outsb
js
cmp
cmp
imul
mov
icebp
or
push
or
int3
jge
jge
and
andb
push
stos
adc
sbb
jecxz
rcr
std
xor
xor
frstor
cmc
cmp
iret
cmp
jg
pop
push
fnsave
adc
push
jle
out
dec
lea
lods
jo
add
xchg
insw
lcall
dec
pop
mov
adc
fimull
xchg
loop
mov
mov
repnz
jge
imul
pop
fildl
add
xor
xchg
aam
fisubs
add
lods
adc
not
fadd
into
inc
cmp
and
mov
or
clc
sub
sbb
push
fnsave
xor
roll
inc
sti
cmp
icebp
mov
jge
sub
scas
ret
sub
popf
jg
pop
pop
dec
mov
dec
movups
cmc
fsubrl
inc
adcb
push
ret
or
xchg
or
sbb
pusha
adcl
std
movsl
lods
add
lea
fistl
decb
xchg
sbb
sub
rolb
sbb
adc
pop
and
mov
adc
xchg
fldenv
sbb
adc
clc
imul
cmp
and
test
inc
sbb
xor
mov
dec
insl
xchg
cmp
call
lock
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
sbb
mov
xor
xor
sub
mov
add
movl
or
mov
push
mov
add
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
add
mov
negl
push
mov
adcl
add
cmp
movl
je
mov
mov
xor
xor
adcl
add
add
adc
negl
xor
mov
push
movzbl
adc
xor
xor
mov
and
mov
add
movl
adc
addl
xor
movl
xor
movl
cmp
movl
jne
movl
cmp
je
jmp
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
sbbl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
notl
mov
adcl
add
movzwl
mov
mov
sbb
movb
add
lea
xor
mov
addl
mov
mov
orl
xor
andl
sub
andl
mov
movl
or
push
jmp
and
add
outsl
pusha
push
jl
pop
jl
lock
sbb
and
lret
aaa
mov
fcomip
in
bound
pop
aaa
fidivrl
cmpsl
scas
jb
xor
push
mov
push
push
mov
in
mov
or
jo
jge
repnz
iret
bound
mov
jle
sub
out
jg
imul
sub
repnz
inc
xor
cld
or
in
hlt
cmc
mov
lods
cmp
jbe
aam
fistpl
in
cmp
in
xchg
push
scas
testl
xor
pop
sub
outsb
pop
pop
pop
xchg
add
repz
pop
ret
mov
cli
hlt
sarb
aam
fldt
mov
pop
and
jl
add
adc
fwait
adc
or
inc
jmp
rcll
mov
das
add
fwait
inc
and
pusha
movsb
mov
outsb
cmp
xchg
mov
sub
push
int3
push
jp
fdivrl
pop
xchg
sub
fcoml
sbb
into
mov
cmp
xchg
pop
je
xchg
inc
sbb
push
shrb
rorb
daa
les
inc
pop
out
dec
mov
cmp
int3
mov
stc
mov
sbb
insl
movsl
adc
or
inc
mov
sub
jl
int
push
aad
adc
xchg
xchg
jns
shl
aam
pushl
movsl
inc
decb
sbb
push
push
cwtl
sbb
mov
ljmp
enter
dec
mov
mov
icebp
mov
test
clc
pop
lds
adc
sbb
lea
rcr
mov
in
mov
idivl
push
lcall
sbb
cmp
aaa
ss
sub
lods
cmp
stc
repz
push
adc
xor
jl
xchg
mov
fsubl
jecxz
push
sub
mov
sub
and
test
push
pop
or
inc
cmp
sub
mov
mov
ljmp
lret
outsl
jp
mov
pop
stos
push
push
mov
xlat
xchg
push
rcrb
loopne
xchg
shr
adc
push
pop
adc
icebp
jo
xchg
jp
mov
lds
fldenv
fldl2t
lcall
loop
bound
clc
rol
sarl
repnz
jle
loopne
dec
or
mov
mov
mov
in
cmc
sbb
jg
jecxz
idivl
shrb
cmp
pop
push
jecxz
mov
ss
pop
push
adc
negl
pop
xor
test
loopne
jb
pushf
inc
mov
push
aaa
mov
push
daa
dec
int
popa
cmc
ljmp
sub
stos
push
fadd
mov
les
loope
pusha
or
add
jle
add
sahf
or
rorl
fdivrl
push
fs
das
shll
adc
mov
dec
repz
pop
xchg
jno
xchg
enter
pop
icebp
push
les
jno
loop
xlat
loopne
pop
fstpl
int
outsl
loopne
mov
adc
push
stos
add
in
into
scas
inc
and
and
ret
push
int
insl
xchg
aaa
sbb
addr16
and
dec
pop
sub
push
jno
cmp
sbb
push
stos
jnp
push
dec
sub
mov
mov
fisubs
bnd
je
out
imul
out
push
pop
sahf
stos
adc
jb
adc
xchg
pop
outsb
popf
loop
les
imul
repnz
shrl
sub
stos
out
mov
xor
out
sbb
das
lcall
inc
ror
xchg
andb
adc
outsl
sub
leave
out
xchg
adc
and
cmp
jge
push
mov
push
mov
mov
push
sbb
dec
cmpl
push
add
pop
outsl
jne
mov
scas
int
inc
fwait
imul
or
enter
jns
cmpsl
in
add
les
inc
pop
daa
dec
dec
xor
subl
aas
bound
mov
sbb
test
pop
cmp
mov
pop
pusha
testb
adc
lea
xchg
mov
fldt
imul
push
mov
loopne
mov
and
outsl
mov
fs
add
xchg
jle
insb
dec
fwait
jg
jns
xchg
jle
xor
cmp
push
les
in
or
fcoml
jecxz
inc
cli
aas
push
or
pop
add
repnz
mov
mov
mov
scas
sub
ljmp
jle
add
or
or
jno
imull
xor
pop
sahf
inc
mov
or
mov
xchg
or
cmp
or
pop
and
hlt
dec
push
repz
cmpsl
add
jbe
ljmp
sahf
mov
lret
insl
test
fmull
sbb
xor
ds
sahf
enter
shlb
ja
and
ret
or
ret
out
fsts
loope
lret
repz
dec
repnz
scas
mov
push
jge
dec
notl
mov
dec
or
jecxz
dec
dec
and
adc
xchg
inc
aad
roll
mov
jo
xchg
mov
insl
icebp
popf
push
loop
sbb
adcl
ret
add
mov
xlat
lods
loopne
mov
bound
mov
add
addr16
pop
fnstenv
or
or
xchg
lods
sub
call
test
aaa
sub
mov
pop
add
ljmp
outsb
xor
or
hlt
test
lods
pop
jno
or
lds
ds
icebp
arpl
mov
punpcklwd
cmp
add
ja
les
adc
cmpsb
sarl
pop
sub
rcr
cwtl
inc
cmp
idivb
cld
mov
daa
gs
out
mov
iret
dec
dec
fwait
mov
loopne
pop
int3
lock
adc
push
out
dec
adc
testl
ret
out
cmp
jb
mov
or
int3
or
add
mov
out
jmp
xchg
iret
push
dec
sbb
jae
dec
jbe
icebp
loopne
mov
jb
fldl
cmp
or
sub
xchg
xor
lds
out
loopne
in
ja
js
insl
mov
cmp
ja
nop
lahf
shlb
xor
mov
inc
ret
xor
fbstp
rcrb
sti
jne
sbb
fcoms
dec
mov
mov
adc
movsb
pusha
test
imul
or
stc
aad
mov
adc
stos
sub
mov
call
inc
xchg
subb
ja
adc
jo
cmp
add
push
pop
sahf
shrl
pop
andb
adc
sarb
pop
jl
push
jge
mov
jecxz
sub
daa
pop
pop
in
dec
add
cwtl
cltd
mov
imul
aaa
dec
jp
hlt
sbb
mov
push
or
sbb
cmp
mov
fmul
movsb
roll
jge
cltd
outsl
cli
jne
mov
pop
loop
cltd
sahf
lods
pop
push
gs
inc
mov
sarl
jnp
sub
andb
rcl
sbb
aam
incb
pop
pop
mov
pop
ljmp
inc
or
test
rolb
out
insl
jbe
es
push
fsubrs
pop
mov
in
jle,pt
mov
dec
icebp
push
mov
out
adc
cmp
and
popa
adc
xor
mov
or
sbb
out
mov
and
sub
test
scas
insb
and
push
stos
or
divl
int3
mov
sub
movsb
je
sbb
cltd
cmp
adc
ror
xchg
dec
mov
cld
or
xor
xchg
fwait
cmpsl
shr
out
test
andb
addr16
xor
mov
aad
movsb
imul
addr16
imul
fdivl
mov
jb
jp
ja
sar
cli
mov
push
inc
or
jno
fmuls
filds
shrb
mov
fdiv
cmc
gs
inc
jle
dec
into
adc
pushf
lock
loope
add
imul
xlat
imul
or
inc
adc
mov
adc
lret
arpl
aaa
pusha
pop
loope
adc
in
sub
fadds
roll
ss
jb
jmp
lret
inc
pop
icebp
add
in
adc
mov
cmp
arpl
inc
icebp
fisubrl
mov
lods
mov
sti
ds
clc
jle
test
scas
inc
out
addl
popf
xchg
mov
pop
xor
mov
sub
pop
popf
cmp
adc
js
jle
cmp
push
cmp
and
add
arpl
scas
stc
fcomp
test
rol
cmpsb
out
mov
sbb
fcomps
psubw
mov
test
or
bound
test
icebp
rcr
in
cmp
mov
or
popf
cmp
add
sahf
sub
push
mov
mov
add
fwait
mov
fdiv
ss
in
push
add
aas
jo
adc
sti
and
jmp
dec
push
out
das
sbbb
jp
push
aam
pop
pushf
addb
and
xor
add
in
fstpl
rcl
loope
xor
cmpsb
cmp
aas
mov
fistpl
outsb
lret
flds
daa
cmp
jge
in
jns
rcrb
sbb
or
mov
pop
fs
outsl
js
popa
popf
ret
pop
test
cmp
fidivl
inc
and
mov
pop
aas
lret
push
xchg
loopne
stc
jns
push
jno
jo
sbb
dec
xchg
call
xchg
imul
mov
sub
jne
cmp
xchg
sub
pop
fs
int3
in
adc
je
jno
aaa
inc
enter
push
adc
mov
std
mov
shlb
loopne
and
jmp
roll
sbbl
lahf
leave
flds
test
into
add
xchg
xchg
hlt
dec
pop
mov
add
jp
mov
mov
xor
and
ret
setnp
cmpsb
out
ret
ljmp
outsl
adc
dec
jbe
and
adc
stc
fcmovbe
cmp
mov
push
jno
jge
repnz
dec
push
divb
pop
pop
loop
or
jl
cmc
jo
jecxz
sub
sbb
jmp
push
mov
xor
dec
mov
push
dec
cmp
popf
popa
imul
xlat
or
xchg
divl
in
jl
or
mov
dec
fidivl
adc
inc
cmpsl
test
jg
pop
or
out
pop
dec
lods
mov
sbb
push
mov
popa
std
and
cwtl
mov
push
in
inc
ret
mov
lods
out
mov
shrl
mov
and
gs
cli
ret
mov
cmc
stc
pop
xchg
test
movb
repnz
dec
xchg
mov
push
icebp
dec
sbb
mov
imul
ds
push
push
rcl
nop
mov
imul
push
add
pcmpeqb
xchg
loop
out
sbb
mov
sarb
jle
xchg
addr16
pushf
add
xor
cmp
scas
aas
enter
insb
out
imul
mov
xor
and
dec
lahf
in
les
lahf
test
pop
out
rep
mov
pop
push
das
sub
sti
pop
sub
xor
insl
push
jnp
sub
mov
mov
cmp
sbb
or
stos
mov
push
mov
cmp
push
and
sub
minps
iret
addr16
cmpsb
jbe
mov
add
xchg
mov
out
cmpsb
add
imul
jge
movsl
fucom
into
and
leave
xor
aaa
js
xchg
jmp
sub
stos
cmp
mov
pop
mov
inc
push
scas
cmp
add
mov
shll
xchg
jns
lahf
jge
ljmp
push
mov
push
mov
scas
adc
inc
xchg
and
jl
dec
pop
fnstenv
inc
std
hlt
jmp
push
les
ljmp
sbb
daa
ficoms
jo
push
sub
dec
mov
aaa
pop
mov
stc
test
scas
inc
xor
mov
jecxz
add
sbbb
rcrl
stos
outsb
lods
fisttps
pop
repnz
mov
data16
js
scas
and
mov
arpl
xorl
mov
jl
cltd
sbb
sub
mov
mov
mov
ret
sbb
sbb
das
loop
add
xor
and
and
inc
ds
sub
in
and
or
lcall
int
daa
sarb
rol
popf
add
cmpsl
lret
jae
int
ud1
adc
xchg
mov
inc
out
pop
mov
cmc
repnz
movsb
ret
push
sub
ljmp
mov
fwait
mov
pop
std
xchg
jns
push
dec
popa
arpl
sbb
cmp
cld
jbe
inc
inc
out
jmp
add
pop
pop
push
les
dec
xlat
and
js
push
cmpl
sti
inc
push
popa
loope
scas
loopne
rcl
imul
pop
and
sahf
push
cli
test
adc
pop
and
cmp
ret
dec
mov
jg,pt
es
movsl
test
iret
pop
fistpl
add
fcmovu
jno
cmp
data16
shll
cmp
ret
fbld
loop
insl
xchg
and
sbbb
movb
movsl
fnstenv
push
aam
ret
inc
and
ficompl
cmc
sbb
notl
cmp
mull
scas
mov
aas
pop
xor
jae
dec
dec
cmc
sub
jae
fidivs
push
les
mov
fs
push
jecxz
lret
nop
outsl
adc
mov
sahf
jb
xorb
push
aam
cmp
mov
jnp
xchg
fwait
jae,pt
xchg
into
out
jae
xchg
sub
mov
lret
das
adc
stc
dec
std
test
and
daa
insb
adc
stos
test
and
jbe
shll
sub
stos
mov
xor
xor
vmread
mov
xchg
inc
mov
or
and
lea
push
outsl
sbb
jae
pop
cmpsb
mov
xchg
sbb
addb
out
call
pop
or
int3
out
test
cli
mov
aam
add
cmp
mov
rcrb
mov
loop
lds
testl
repnz
xor
sbb
subl
repnz
cmpsb
sarl
jo
jo
imul
enter
sbb
shll
jmp
stos
outsl
mov
leave
jns
jno
nop
mov
push
xor
ja
aad
test
mov
and
das
pop
xorb
sti
out
or
inc
adc
inc
or
sub
mov
lods
mov
push
or
dec
sbb
jle
movsb
lea
shlb
fs
sbb
mov
lods
stc
ffree
adc
jle
adc
jo
mov
cwtl
xor
fsub
dec
jnp
popa
decl
jmp
lds
mov
mov
movsb
addb
std
scas
xor
lods
repnz
mov
xchg
sbb
or
jp
mov
andl
cld
or
pop
ljmp
mov
mov
cli
mov
imul
dec
push
lods
or
cmp
xlat
jmp
xor
lret
and
inc
inc
add
cmp
in
push
add
inc
js
push
ja
pop
or
leave
jmp
inc
jae
daa
mov
test
clc
jge
xor
jbe
cmp
jo
lods
mov
cmp
inc
and
adc
push
add
cmpsb
pop
addb
negb
leave
inc
and
adc
jecxz
ficoms
mov
add
add
lret
pop
xchg
cmpsl
jg
mov
jnp
hlt
loopne
push
aaa
adc
adc
lret
pop
lods
dec
mov
ret
daa
push
mov
dec
pusha
sub
nop
jmp
insl
inc
in
sbb
adcl
inc
jmp
dec
rcrl
ss
xchg
add
cmp
aam
orl
push
push
ror
rorb
pop
adc
inc
pop
inc
testl
repnz
mov
popf
loope
adc
xchg
xchg
mov
repz
fcomps
and
push
add
mov
pop
movsl
lcall
addl
mov
notl
sbb
frstor
loop
test
and
xchg
add
fbstp
cmp
sbb
lea
stos
popf
cmpsl
gs
fdivrs
adc
jb
iret
mov
or
shll
jae
lret
test
fs
sti
test
iret
cmp
jns
jmp
iret
dec
dec
xor
fs
xchg
imul
bound
mov
insl
pop
stos
iret
jg
dec
mov
mov
mov
fcmovnbe
fcoml
cs
or
or
int
js
es
or
leave
dec
flds
or
mov
test
xchg
mov
bound
xlat
dec
dec
loope
or
jmp
daa
in
testl
cld
mov
cmc
movsl
jno
or
sbb
add
pusha
inc
scas
das
popf
or
or
adc
push
xchg
enter
cltd
cmp
and
mov
cmpsb
lock
dec
fwait
sub
fs
andl
mov
dec
scas
data16
frndint
ljmp
loop
jns
xchg
and
lock
jmp
outsb
and
fstl
and
pusha
std
or
dec
pop
push
xor
mov
xor
cmp
js
sarb
inc
push
inc
aad
sub
sub
ret
jl
xchg
xor
cld
fwait
push
inc
js
loope,pn
sbb
or
pop
xchg
mov
int
int3
push
mov
pop
jl
outsl
clc
xchg
inc
std
test
fnstsw
xchg
mov
and
sbbb
jl
push
fcompl
cmpsb
setle
lock
xorl
sbb
mov
repnz
fimuls
jbe
cmpsl
cmp
cmp
sahf
inc
imul
push
and
ret
mov
cmc
sbb
les
push
hlt
push
test
jb
cmpsl
mov
cwtl
sub
cmp
xchg
mov
sub
push
ret
mov
mov
cwtl
mov
out
jno
push
pop
stc
outsl
push
cmpsb
mov
shrl
aaa
jo
adc
dec
data16
mov
fcoml
movsb
out
mov
aad
sbb
ret
fistl
pop
mov
dec
pop
dec
push
rol
mov
ja
data16
xchg
pop
jl
lock
cmp
lret
out
mov
dec
mov
addb
call
or
in
fs
aaa
lahf
inc
adc
inc
add
push
inc
clc
loopne
test
cmp
and
jnp
xchg
bound
notl
bound
mov
lret
das
insb
adcl
notb
pop
lods
loope
iret
pop
testl
addl
aad
dec
and
mov
adc
dec
cmp
add
test
pop
ss
ret
push
adc
xchg
sub
or
rcrl
sbb
adc
push
ffreep
shl
jecxz
jae
aas
and
cmpsl
orb
flds
add
xchg
test
das
push
shlb
xchg
xor
arpl
dec
add
loop
rcl
push
jp
das
in
sbb
das
pop
dec
mov
mov
lock
sbb
jbe
pop
push
insl
pop
data16
mov
pop
xlat
push
icebp
sahf
sub
sahf
inc
rolb
push
cmp
add
add
mov
ltr
xor
sbb
dec
mov
add
lret
push
sub
sbb
in
ret
lea
hlt
fdivr
cld
xchg
and
mov
or
mov
jnp
imull
fsts
dec
cmp
push
sbb
std
adc
lret
jmp
stc
lret
sub
popa
loope
lds
outsb
jp
push
aam
add
adc
adc
std
pop
push
lock
adc
pop
orl
fdivrl
dec
imul
push
jecxz
sub
xchg
std
inc
mov
xlat
aas
into
sbb
ja
push
cs
gs
enter
aas
jns
dec
pushf
outsl
or
jne
andb
loop
xorb
rcrl
int
outsl
dec
push
pop
lock
cmp
icebp
xchg
adc
push
xor
xor
outsl
push
out
icebp
lcall
notl
sbb
outsl
adc
and
xchg
scas
call
sarl
repz
and
jno
les
pop
neg
imul
pop
and
ret
ljmp
loop
dec
xor
xchg
jg
gs
xchg
mov
test
cld
nop
jo
mov
dec
sbb
mov
loop
or
and
and
les
dec
jmp
scas
dec
sub
test
mul
inc
mov
in
mov
dec
ljmp
ret
jmp
dec
lods
cli
fisttpl
and
cmp
pushf
enter
cwtl
movsb
iret
outsb
push
arpl
bound
int3
js
fcomps
sahf
push
add
and
mov
movsl
data16
jb
aas
lret
iret
xor
in
xor
cmpsl
mov
cmc
imul
and
fisubrs
jmp
insl
ljmp
jge
sarb
cld
int
clc
and
sub
inc
lds
popa
ret
insl
stc
nop
push
movsb
xor
cli
sbb
popa
add
das
xchg
push
inc
lods
pop
pop
addb
add
cmp
loopne
cmp
popf
jle
ds
mov
sub
add
cmp
iret
inc
dec
pop
pop
xor
jg
adc
cli
mov
sub
push
sub
aas
pop
mov
xchg
jae
nop
sub
mov
xchg
icebp
push
jne
add
mov
daa
jl
ret
mov
xlat
loope
popf
loop
pop
lret
xchg
xchg
pop
call
stos
daa
fsin
pop
and
int
inc
das
sarb
push
sub
insl
leave
shll
cmp
mov
add
js
icebp
or
lods
push
pop
outsl
sahf
lret
adc
leave
into
popa
pop
xor
inc
add
sbb
cld
sub
jb
test
mov
and
outsb
je
dec
xor
leave
cmp
movsb
movsl
insb
or
ret
inc
xchg
add
es
clc
push
fwait
sbb
mov
and
xchg
loop
out
sbb
pop
pop
cs
adc
dec
dec
shll
das
add
xchg
ss
jnp
enter
flds
or
test
jge
inc
into
inc
leave
enter
push
fdiv
movsl
xor
cmp
movsl
pop
popf
pop
lea
cld
into
mov
cld
push
leave
xor
aaa
mov
lahf
and
fdivr
jmp
jmp
xchg
imul
xor
mov
inc
dec
push
mov
mov
xor
adc
sub
lret
es
adcb
jb
xchg
push
fidivrs
sbb
fs
xor
ljmp
xor
mov
lea
ss
xor
mov
mov
fcomip
in
bts
shl
movb
imull
shr
dec
inc
bound
test
daa
jne
fwait
jp
enter
cli
jns
rcrl
sti
push
ljmp
cmpsb
xlat
sub
in
cld
imul
jns
jns
push
cmp
cli
push
pop
or
push
sahf
mov
mov
cmpsl
rclb
mov
xor
mov
xlat
mov
add
inc
mov
sub
mov
dec
mov
sub
add
jns
scas
roll
repz
jge
inc
addr16
je
add
mov
fldlg2
cmpsb
push
cs
mov
add
imulb
or
int3
or
dec
out
icebp
fcoml
addr16
jb
add
jno
pop
mov
push
push
inc
jge
test
loopne
push
outsl
sbb
inc
out
orl
sbbl
cmp
shrb
xchg
xchg
add
mov
push
add
adc
aam
mov
adc
push
lds
nop
pushf
mov
and
and
push
in
cmp
adc
mov
pop
mov
leave
shll
jno
sbb
fimull
fwait
jno
xlat
cmp
jae
pop
daa
xchg
aas
out
adc
jne
dec
movb
hlt
repnz
add
je
repnz
lods
out
and
cmp
xlat
sti
jns
xor
dec
stos
add
fcoms
jbe
push
cmp
mov
push
add
loopne
cmp
and
jmp
int
push
pop
daa
stos
hlt
jno
jae
lods
loopne
and
insl
fdivrl
fidivrl
add
dec
cmp
test
mov
aas
jno
xor
cmp
dec
or
in
xlat
add
dec
jg
cwtl
inc
les
jg
ss
lock
dec
mov
rep
out
push
mov
pushf
pushf
test
dec
mov
jp
adc
clc
add
sub
jg
sub
scas
popa
mov
jbe
in
sub
pusha
je
add
leave
je
ja
adc
mov
into
inc
int
out
in
bound
out
les
pop
dec
int
mov
mov
add
pop
dec
dec
pop
adc
jb,pn
rcll
data16
or
fs
mov
inc
int3
call
sub
add
pop
rcl
sub
shrl
jno
xchg
in
jo
aaa
loop
into
dec
lcall
js
jecxz
adc
dec
mov
icebp
arpl
and
shrl
mov
xor
insl
and
or
pop
std
xchg
lds
scas
insl
cmc
jb
sbb
addr16
push
mov
mov
fisttpl
dec
push
pop
xchg
stos
inc
add
jae
addr16
jle
or
in
into
sbb
insl
jnp
dec
mov
inc
pop
popa
insl
pop
mov
addb
dec
mov
jb
lcall
cli
call
pop
lcall
xlat
popw
xchg
aaa
mov
and
lock
mov
insb
shrl
dec
cli
fnstenv
lds
inc
mov
jbe
add
les
jmp
out
mov
fisubrs
loop
enter
ljmp
mov
lcall
add
inc
push
or
add
xchg
lret
adc
sub
xor
popa
cmp
outsl
jg
mov
scas
mov
outsl
push
add
xor
push
jmp
rorl
jmp
les
and
ss
fdivp
stos
xchg
jnp
mov
xchg
bound
sub
shl
and
adc
xchg
adcl
adc
mov
xor
mov
stos
jae
mov
pop
jne
inc
hlt
int3
divl
push
jecxz
mov
pop
lock
inc
mov
test
fistl
ficoms
add
xchg
ret
iret
scas
rorl
lret
outsb
cmp
loop
repnz
les
mov
mov
arpl
dec
sbb
cld
add
lock
xor
pusha
and
in
jbe
rcll
and
outsb
ss
mov
push
call
out
loope
jae
pushf
jo
std
jge
jecxz
xchg
jb
ja
inc
out
std
nop
frstor
jne
mov
pop
insl
push
loopne
fisttps
mov
fisubrs
and
and
jno
mov
imul
test
fdivrp
sbb
inc
repz
mov
xor
or
or
and
xchg
adc
xor
test
call
stc
add
adc
lcall
outsb
popa
outsb
jo
filds
sub
push
iret
in
loopne
pusha
mov
out
lret
mov
int
scas
out
mulb
inc
cs
lods
aad
dec
mov
fnstsw
call
out
out
aad
inc
xor
mov
ret
sub
cmc
push
xchg
jle
xchg
out
fs
stos
mov
adc
sub
in
sbb
mov
test
or
insl
dec
push
lcall
cmpsl
sub
js
rcll
dec
les
in
xchg
push
mov
lahf
adc
test
push
dec
sub
loope
pop
sahf
into
das
es
or
jns
lea
aam
and
mov
aas
add
sub
aam
fwait
mov
lock
stos
inc
roll
std
pop
mov
mov
out
movsb
sarl
mov
cld
pop
pusha
dec
cli
je
insl
xchg
call
fistps
cld
adc
sub
jns
jne
inc
or
std
push
adc
mov
enter
jae
test
xor
sbb
test
in
jne
jp
es
push
jmp
aad
out
rorl
cwtl
loope
push
mov
add
fstps
xlat
sub
imul
movsl
cmpsb
inc
add
movsb
xor
sbb
out
adc
xchg
inc
mov
pop
or
js
sbb
adc
push
jno
rorl
or
sub
pop
aaa
adc
nop
fsubl
shll
mov
sar
or
xor
enter
mov
xor
xchg
and
mov
mov
out
out
daa
adc
cmp
retw
and
pop
in
lods
incb
push
push
inc
ljmp
repnz
mov
lahf
mov
cld
sub
mov
sub
test
and
repz
sbb
inc
ja
add
sub
stos
stc
notl
add
and
insl
stos
jge
fwait
cwtl
xchg
pop
das
mov
fld
jne
cmp
xchg
sbb
push
inc
mov
mov
fsubl
mov
out
lods
inc
popf
xorb
push
cli
subb
loop
iret
xlat
cmc
cmp
mov
push
fsubs
cmc
pop
daa
es
jle
pop
push
mov
mov
add
push
inc
xor
push
mov
ret
dec
rorb
sub
mov
xor
jp
lods
mov
test
testl
loop
leave
cmovs
clc
mov
mov
or
iret
sti
std
mov
dec
mov
sti
ret
inc
xor
outsl
movsl
and
loopne
jne
xchg
push
ljmp
fisttps
lahf
into
sub
stos
mov
inc
out
mov
das
sbbb
and
inc
mov
inc
shrl
shl
mov
leave
push
inc
and
sbb
and
jp
das
mov
int3
add
vmread
sbb
dec
cmp
sbb
imul
mov
fldt
fistpll
aad
pop
pop
and
scas
cltd
mov
dec
cmp
das
jne
inc
cs
test
int3
out
and
cmp
cli
sub
fists
and
movl
xorl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
push
push
pushl
call
mov
dec
mov
jmp
push
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
inc
xor
sub
mov
movl
push
xorl
add
jmp
mov
notl
mov
notl
inc
cmp
movl
jb
adc
mov
xor
add
jmp
andl
mov
and
mov
adcl
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xorl
mov
add
sbbl
movzwl
xorl
mov
negl
mov
orl
movzwl
xorl
xor
add
mov
mov
inc
mov
cmp
movl
jne
mov
movl
mov
decl
xor
add
andl
mov
dec
mov
xor
andl
add
movl
mov
not
movl
movl
movl
mov
mov
movl
mov
jmp
mov
add
mov
andl
xor
xor
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
movl
mov
lea
mov
mov
mov
lea
movzwl
sbb
mov
mov
andl
mov
add
mov
negl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
orl
mov
mov
add
mov
lea
add
mov
mov
orl
mov
lea
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
sbbl
lea
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jb
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
jmp
sarb
jae
dec
bound
adc
pop
jl
std
sub
jb
adc
rorl
sub
jnp
inc
pop
dec
xchg
das
ret
dec
xor
xchg
ss
daa
mov
push
cvtdq2ps
adc
xor
lods
pop
loope
and
outsl
or
jecxz
mov
jecxz
loope
cmc
ss
cmp
jmp
cmp
and
xlat
stc
sub
stos
lea
jb
push
adc
mov
lret
in
jge
and
int
div
dec
dec
mov
movsb
imul
das
pop
mov
dec
sbb
xchg
pusha
sub
mov
xorl
or
data16
jg
call
push
xchg
dec
insl
jecxz
fcmovbe
xchg
lods
xchg
mov
sub
cmpsl
mov
mov
pop
sbb
and
cmpsl
sbb
fwait
add
jg
mov
cmpsb
fisubs
notl
cmp
std
adc
mov
jo
loopne
iret
push
fsubp
shrb
inc
outsl
mov
fimull
in
push
or
pop
test
jae
negl
cmp
push
cmpsb
lcall
movsb
lock
mov
inc
es
loope
lret
fmull
shlb
sbb
daa
arpl
inc
xchg
cmp
jle
push
sub
jle
pop
sub
cmpsl
aaa
and
mov
mov
pop
ret
jns
outsb
push
cmp
mov
xlat
roll
inc
add
or
lods
add
jno
push
imul
test
leave
aas
xor
xchg
sbb
push
push
clc
cmp
out
xchg
xor
mov
xor
jnp
jne
imul
mov
xchg
mov
jge
sub
mov
add
stc
nop
cmp
mov
scas
inc
inc
fidivrl
dec
and
cmp
ficompl
dec
sbb
pop
jae
cmpsl
xchg
in
jb
inc
push
int
test
mov
out
xor
ret
mov
in
neg
fidivs
cmpl
insb
mov
ret
adc
inc
adc
add
xchg
xor
loopne
aaa
mov
sbb
and
mov
test
fnstcw
dec
cmc
adc
mov
push
push
push
pusha
ret
pop
je
cmc
and
in
mov
es
mov
dec
push
aas
dec
stc
pop
mov
cmpsb
add
loopne
adc
test
or
js
dec
lahf
test
test
xchg
inc
leave
push
ljmp
inc
jmp
scas
mov
aas
push
push
cmp
scas
insl
lea
fcomi
fsubl
mov
test
mov
out
repz
into
icebp
sbb
cmp
clc
cmc
loop
je
push
in
lar
mov
ljmp
mov
daa
xchg
icebp
push
fsubrs
ds
push
daa
sbb
ljmp
xchg
push
lods
cs
inc
fidivl
loopne
addr16
into
je
sbb
cmp
xor
push
pop
sub
iret
fs
std
cld
insb
lea
xchg
jnp
add
insb
dec
outsl
mov
sub
enter
add
sbb
dec
fcoms
into
mov
mov
push
fs
dec
sbb
insb
cmp
jbe,pt
roll
idivb
pushf
xor
push
cmpsb
leave
daa
push
inc
out
jmp
pushf
jl
ret
or
repnz
jmp
xor
jae
xor
cmp
and
and
lock
xchg
imul
fwait
add
sbb
push
fs
aam
xchg
dec
jns
add
xchg
adc
jnp
add
inc
shrb
lcall
push
jns
xor
scas
mov
enter
push
test
cmp
jmp
jbe
xchg
or
xchg
sub
leave
jecxz
sub
or
ljmp
movsb
push
in
outsb
test
mov
loope
jnp
inc
push
scas
insl
mov
movsb
xor
test
out
lret
push
mov
xchg
stc
or
leave
mov
nop
insb
sbb
aas
push
push
out
jae
xor
xchg
mov
sahf
mov
xlat
and
lods
mov
push
fwait
repz
scas
nop
arpl
xchg
jo
movsb
sbb
cld
cltd
mov
outsl
add
imul
pop
cmp
fldcw
inc
and
pop
outsb
push
mov
xor
pop
mulb
add
lock
setno
pop
cmp
and
or
jecxz
cmpb
roll
enter
adc
lcall
inc
and
xchg
sbb
lds
movsb
jbe
cltd
test
jmp
ret
dec
sti
mov
dec
data16
lahf
push
xchg
pop
push
push
or
idivb
inc
mov
mov
iret
or
loop
and
add
cli
fsubrp
sub
aas
call
mov
mov
lcall
mov
mov
pop
inc
jns
pop
mov
fdivp
in
negb
mov
inc
mov
and
rcl
xchg
sbb
mov
leave
adc
lock
jbe
xchg
in
and
jns
xchg
in
icebp
sbb
adc
mov
movsl
cmp
mov
adc
jecxz
cmp
addr16
in
cmp
fadds
out
mov
cmp
add
mov
repnz
pop
fnstsw
xor
pusha
or
xchg
xchg
lods
mov
stos
rolb
gs
mov
rol
mov
mov
orb
dec
lret
push
cmp
mov
jmp
faddp
clc
cmp
mov
pusha
mov
cli
cld
cmpsl
xchg
enter
push
mov
leave
aas
iret
mov
sub
ja
xchg
rcr
jl
icebp
repnz
push
and
std
sbb
sbb
xchg
lods
push
loop
out
ja
in
imul
sbb
or
or
addb
pop
mov
xchg
adc
out
loope
fcmovbe
inc
pop
cld
inc
dec
mov
dec
shld
xchg
cmp
adc
out
cli
add
in
inc
jle
std
out
or
outsb
imull
cmp
lods
in
jecxz
cmp
cmp
jo
adc
fdivp
ja
mov
push
push
xor
stos
sbb
les
dec
adc
nop
fwait
je
call
dec
and
pop
inc
aam
aad
jmp
inc
xor
cmp
push
clc
insb
dec
repz
shll
test
sbb
sbb
ss
sub
pop
rol
outsb
and
jns
add
add
xchg
movsb
push
cltd
arpl
sub
xchg
push
mov
pop
aas
dec
mov
mov
arpl
out
adc
scas
dec
leave
jmp
mov
lahf
sahf
orb
in
jmp
jp
lahf
lock
cmc
loope
fwait
mov
mov
out
jmp
fstpl
hlt
push
push
mov
jns
mov
dec
divb
dec
icebp
jbe
out
ds
stc
xchg
xchg
xchg
push
jbe
loop
lds
mov
lea
lods
pop
insl
pusha
outsb
outsl
jecxz
sub
lods
inc
pop
out
sbb
rcrl
mov
mov
je
into
inc
jns
hlt
daa
dec
ret
int
cltd
jns
andb
out
xor
inc
sarl
inc
xchg
mov
daa
jge
mov
push
mov
fildl
in
pop
xor
xor
mov
ljmp
fsubrl
dec
mov
cmp
in
movsl
addr16
movsl
pop
aam
xchg
mov
loop
test
enter
in
scas
adc
add
cld
and
push
call
lods
fstps
cmp
cmp
fwait
push
insl
cmp
insl
fiaddl
xor
jmp
scas
mov
adc
icebp
sbbl
mov
jle
push
mov
int3
mov
pop
push
dec
cmp
out
in
insl
adc
add
fs
outsl
add
test
inc
pusha
cmp
dec
xor
shlb
sbbl
data16
ret
jno
xchg
rorb
iret
fsubrp
mov
movsl
jb
stc
inc
cmp
cltd
lods
add
pop
imul
adc
mov
out
lods
sarb
mov
cmc
ret
add
adcl
loop
js
lock
out
in
jno
cld
fs
sbb
dec
int
gs
lahf
push
iret
lock
adc
pop
lds
push
lahf
sub
dec
in
ja
mov
sbb
out
add
cwtl
pop
xchg
mov
xchg
or
cmp
adc
gs
mov
shlb
sub
jae
frstor
stos
loopne
inc
sahf
mov
adc
daa
mov
mov
sarl
pop
push
jb
dec
and
push
das
inc
shrb
jp
out
mov
mov
push
fidivrl
adc
movnti
shrb
shll
mov
out
outsl
test
dec
or
mov
mov
lods
leave
and
or
xchg
sti
push
out
lcall
inc
adc
xchg
out
jp
mov
mov
sbb
outsb
out
insl
or
cmp
fisubrs
lahf
xchg
test
aad
xchg
jns
mov
das
daa
hlt
and
lods
scas
xorps
jl
rorb
cmp
cli
jnp
ss
jl
jp
cmp
js
mov
jne
in
in
mov
sbb
test
lcall
ja
lea
jb
jle
insb
mov
inc
inc
xor
sub
cld
int3
movsl
mov
shrb
jge
js
pop
cmp
mov
loope
xchg
mov
mov
daa
stc
adc
or
call
jp
and
cmp
xchg
lods
and
sbb
movsb
cmp
aam
repz
xchg
push
and
mov
arpl
test
add
lock
stos
pop
mov
sub
nop
add
jne
mov
stc
sub
rolb
jecxz
lods
push
jmp
movsl
aas
inc
test
jno
scas
movsb
jp
jg
cmp
or
mov
adc
test
hlt
and
jmp
jecxz,pt
shr
loope
out
sbb
adc
jne
data16
jp
data16
or
inc
or
or
out
mov
je
jae
lret
mov
push
into
mov
mov
push
ljmp
mov
sbb
int
lods
bnd
mov
add
sahf
addr16
sbb
popa
imul
dec
fisttpll
push
push
sub
sahf
movb
pushf
stc
pop
data16
adc
pop
cmp
cltd
div
outsl
xchg
jbe
or
shrl
inc
inc
push
lods
dec
mov
xchg
jbe
xchg
push
mov
loope
mov
jmp
inc
mov
std
xchg
inc
out
and
push
or
pop
dec
push
stos
lret
fs
hlt
push
ja
mov
cs
inc
mov
dec
mov
in
xor
rclb
addr16
aam
imul
addr16
lods
xor
cmp
dec
data16
jge
jge
or
cmp
add
mov
test
dec
cmpb
mov
push
fiaddl
mov
stos
ds
pop
outsl
adc
mov
fisubs
clc
aad
pop
pop
daa
mov
int
sub
adc
jno
or
pop
fsubs
ljmp
loope
jns
loopne
mov
jl
add
aas
jo
mov
jae
inc
and
mov
add
xchg
fucomp
sbb
inc
xor
sbb
loope
mov
aam
mov
lds
movsb
and
ds
lret
cmc
scas
mov
dec
mov
loope
shlb
popf
xor
aas
xchg
and
or
pushf
fwait
or
sti
mov
ja
mulb
out
jp
cmp
and
inc
add
ret
lret
orl
jno
out
outsb
incl
jg
std
sti
sub
movsl
ljmp
and
test
lds
mov
addr16
jmp
ja
sbb
es
and
sub
sbb
pop
jb
insb
aaa
add
inc
jp
xor
ss
insl
pop
ja
lret
adc
js
ljmp
mov
mov
movsb
sub
repz
test
xchg
mov
pop
rol
cwtl
sbb
loopne
fdivrs
xor
adc
jne
xlat
popf
mov
xchg
jg
mov
cmc
rclb
cmpsb
mov
pusha
mov
lods
lods
out
and
add
xchg
or
fildll
jg
pop
xor
and
ds
inc
ds
jo
inc
outsb
outsb
cli
and
ss
cmp
cmc
es
ret
es
clc
mov
sub
xchg
mov
sbb
ficoms
int
mov
scas
jo
in
fucomip
pusha
cmc
fdivs
je
mov
push
mov
cwtl
fcomi
cmpsl
testl
cmp
jge
and
jae
push
into
sub
popa
add
lret
aas
xchg
sbb
fsubrp
mov
pop
pop
cmp
push
inc
ljmp
or
mov
movsb
lret
hlt
imul
adc
xor
dec
cmp
sub
pop
jmp
roll
icebp
mov
lret
cmp
loopne
and
test
std
pop
add
in
mov
out
xchg
das
adc
out
adc
int3
push
mov
xchg
cmp
je
mov
sbb
xchg
pop
shlb
push
mov
lock
bound
ljmp
aaa
into
mov
push
push
mov
add
or
test
lcall
mov
in
jnp
xor
jecxz
lcall
xor
test
mov
sbb
inc
lret
jle
xchg
sub
sub
dec
xlat
inc
cmpsb
cmp
cmp
mov
adc
call
repz
cmp
dec
mov
insb
outsb
mov
bound
and
cld
xor
push
int3
dec
dec
daa
int
sarl
gs
add
lock
sub
mov
leave
push
in
xchg
jg
push
cmp
jne
lret
enter
xorl
loopne
mov
cwtl
arpl
es
dec
inc
mov
sub
mov
jb
push
sub
shrl
or
shlb
adc
pop
cmp
outsl
jge
inc
mov
repnz
xor
mov
lret
loopne
sbb
pop
insl
mov
add
mov
outsb
jnp
cmpl
push
fcmovbe
add
hlt
push
mov
xor
testl
cli
fwait
or
pop
xor
jbe
mov
cs
sbb
or
mov
scas
mov
cmp
mov
mov
xchg
adc
pop
and
xor
stos
and
imul
adc
xchg
sub
cmc
mov
je
lahf
cmp
sbb
mov
dec
inc
or
in
inc
stos
xchg
push
stc
pusha
lret
dec
cmc
repz
and
xacquire
sub
aam
sbb
or
xchg
outsb
and
mov
and
xlat
rcr
dec
into
jecxz
push
into
ljmp
mov
mov
xor
sbb
xor
xor
jle
jno
negb
jb
mov
jb
divl
gs
leave
dec
ficoml
mov
sub
lods
enter
mov
xchg
mov
es
test
sbb
xchg
shrb
push
xor
mov
add
xchg
xchg
fsubl
fistl
xor
test
and
roll
adc
cmp
mov
and
in
jns
xchg
mov
jo
mov
stos
lret
aas
sub
idiv
mov
negl
insl
jg
int
aam
movsb
xor
cmp
xchg
and
loopne
lods
inc
cmc
cmp
or
daa
xor
mov
movsb
movsb
cmp
add
hlt
mov
popf
pop
inc
inc
jno
loop
outsl
sarb
push
std
push
fadds
int
sahf
mov
ss
data16
test
in
mov
pop
inc
pop
rorl
dec
adcb
pop
movsl
xchg
outsb
out
inc
push
adcb
out
xchg
out
sarb
mov
fbld
dec
stc
in
pop
les
popa
mov
mov
cmp
shlb
call
sub
mov
jecxz
push
lcall
cmp
hlt
push
ljmp
lcall
xchg
aam
js,pt
les
or
xchg
fs
dec
leave
mov
or
leave
mov
pop
in
out
mov
push
in
pop
push
push
dec
and
les
sbb
je
add
xor
loop
mov
cwtl
pop
jl
jge
inc
xchg
push
lcall
push
fstps
pop
mov
pop
pop
pop
dec
sub
sahf
pop
repz
arpl
add
mov
bound
sti
push
lock
sub
or
inc
pop
aad
jmp
test
js
mov
jns
shll
sbb
sub
inc
or
sub
test
inc
fdivr
and
xchg
xor
in
push
adc
push
dec
mov
cmc
jo
sbb
shrl
sub
jg
and
dec
fs
sub
xorb
out
stos
mov
mov
out
mov
mov
jnp
mov
mov
adc
sbb
xchg
add
push
dec
loopne
xchg
cmc
daa
sahf
push
das
and
add
sub
mov
jge
stc
test
imul
fsincos
and
cmpsl
ds
gs
ljmp
inc
cmp
cmp
in
cwtl
inc
stc
push
lods
into
aas
xchg
shll
or
mov
rol
fwait
cmc
lret
out
ljmp
sbb
xchg
shl
or
mov
les
stc
int
mov
mov
int3
add
push
scas
lret
inc
insb
scas
and
mov
push
cmpsb
lret
push
repnz
adc
jmp
pop
pop
stos
lds
push
lret
sbb
adc
sub
cmpsb
out
mov
insl
and
and
sbb
mov
out
adc
lcall
pushf
cld
pop
inc
mov
push
add
dec
testb
sbb
dec
jg
lcall
aam
xchg
cmp
rorb
repz
ja
test
pop
shll
xchg
ja
xchg
pop
jo
inc
sbb
and
xor
outsl
pop
dec
mov
mov
inc
clc
xchg
mov
push
mov
and
test
mov
sahf
cmp
adc
fdivl
inc
or
testb
test
mov
frstor
addr16
xor
jbe
mov
shrb
daa
aam
pop
imul
push
add
mov
fadd
push
xchg
pop
jecxz
sbb
mov
leave
hlt
sbb
adc
pop
mov
push
ljmp
insb
shrl
pop
push
adc
jmp
cld
sti
rol
mov
stos
mov
aas
dec
jne
mov
movsb
pop
imul
push
xchg
lods
jo
dec
sti
je
adc
aaa
xor
test
jp
out
repz
sarb
loop
xor
jmp
out
sar
fs
mov
daa
or
sbb
data16
cmp
inc
pop
fcompl
jp
es
cmpsl
cs
push
adc
lret
loope
rcrl
xchg
add
in
rcrb
insl
rol
je
repz
stos
sub
mov
lods
xchg
fwait
mov
dec
sub
dec
and
adc
dec
mov
sub
sti
and
jns
int3
push
jmp
mov
or
pushf
cmp
popa
pop
xor
fldcw
sti
pop
stc
js
sub
pop
sub
xchg
jmp
addr16
or
stos
subb
in
pop
cmp
cmp
mov
fdivrs
sbbb
sub
pop
jge
cwtl
pusha
std
jns
jne
rorl
dec
inc
aam
and
xchg
cmp
aaa
cmc
fsubs
mov
aaa
sub
addr16
sub
imul
inc
sbb
ret
test
sub
cs
aaa
push
push
push
jbe
out
test
shlb
lods
in
call
mov
inc
inc
dec
mov
lea
int
sbb
filds
fs
sbb
les
xor
enter
fwait
negl
sub
fiaddl
pop
dec
sub
dec
xor
bound
sti
fisubrl
pop
rcrl
or
mov
push
jnp
sub
movsl
fdivl
xor
mov
stos
or
xchg
inc
mov
popl
and
xchg
es
mov
in
xor
mov
movsb
hlt
aam
movsl
negl
sub
sbb
test
add
ret
push
pop
jle
add
int3
push
js
dec
push
dec
xchg
mov
repnz
in
mov
enter
icebp
lock
push
jle
xor
sub
lret
add
sub
lcall
pushf
sub
dec
fisubl
jl
cmc
adc
mov
adc
jmp
popa
imul
stos
idiv
inc
pop
repz
mov
mov
in
decb
decl
mov
mov
sbb
daa
movsb
movsl
sub
cmpsb
inc
mov
adc
inc
ljmp
sbb
mov
add
lea
sti
or
adc
xchg
lock
mov
rcll
cmp
xor
pop
fdivrs
stc
and
negl
mov
mov
int3
cmp
or
sub
mov
test
test
push
jl
fwait
dec
arpl
int3
lret
mov
or
dec
push
push
rcrl
push
mov
lea
jg
sub
mov
or
inc
lcall
pop
icebp
testb
lret
call
push
mov
jno
mov
out
mov
in
outsl
out
add
sub
push
stos
sub
mov
sbbb
xchg
ja
rcll
jnp
cmpsb
mov
popa
cs
mov
into
mov
jb
sbb
lods
pusha
outsb
mov
adc
addb
mov
mov
xor
icebp
js
leave
or
repz
out
mov
arpl
xchg
jae
ret
shll
or
inc
dec
pop
pusha
pop
imul
jbe
cmpb
push
fstpt
adc
icebp
mov
xor
in
and
adc
pop
hlt
or
mov
test
sbb
sub
jmp
mov
addb
movsb
int3
cmp
xchg
add
insb
xor
xor
dec
or
mov
mov
mov
ficoml
shrl
aad
js
add
mov
sti
loopne
push
repz
popf
cmp
popa
inc
ret
mov
xrelease
lock
addr16
mov
jmp
je
inc
cmpsl
cmpsb
rcrl
std
out
pop
dec
es
fbstp
mov
inc
hlt
fbstp
mov
ucomiss
xchg
scas
cmp
push
imul
fsubr
adc
xlat
push
fst
insl
or
or
rcll
mov
pop
dec
jp
clc
cltd
pop
mov
daa
lds
sub
push
push
push
aam
jns
in
lock
rcll
fidivs
ret
mov
and
and
rcrb
lret
lret
pop
push
sub
scas
mov
inc
popf
mov
jae
test
xchg
ss
sbb
pop
fs
enter
sti
sahf
fiadds
pop
ja
mov
mov
push
mov
mov
jns
stos
pop
pusha
lahf
lret
pop
dec
test
jmp
mov
dec
cld
xchg
imul
loop
mov
lcall
adc
inc
mov
movsb
jnp
fbld
std
outsb
push
mov
push
lea
call
das
xchg
sti
mov
add
or
pop
jmp
sub
incb
add
test
mov
xchg
js
mov
jo
mov
loopne
cltd
in
data16
xor
fcomps
rcll
dec
mov
push
lea
inc
cmpsb
mov
and
mov
popf
enter
mov
inc
mov
and
or
data16
adc
in
subb
or
pop
mov
mov
xchg
mov
cmpsb
inc
mov
xlat
sub
or
mov
outsl
cmpsb
scas
out
push
addr16
ds
push
sbb
add
adc
fchs
xchg
inc
int3
ja
arpl
inc
movsb
mov
lods
inc
mov
xor
cmp
jnp
xor
lret
jmp
cmpsb
jp
xchg
lods
jg
xchg
addr16
fwait
sub
or
xchg
adc
test
inc
lahf
les
aas
cmp
nop
inc
pusha
test
or
xchg
push
dec
inc
mov
mov
push
out
cmp
xchg
and
insb
scas
loop
push
pop
repnz
into
ret
sbb
lea
mov
xor
inc
stos
das
jae
pop
out
pop
xchg
outsl
jp
and
pop
int
outsb
jp
hlt
ret
pop
test
jns
pop
push
pushf
aaa
push
jmp
prefetch
stos
sub
or
cmp
bound
jne
fs
xchg
adc
negb
movsl
pop
inc
test
repnz
sub
xchg
xchg
lcall
mov
mov
ret
cltd
lea
sahf
roll
arpl
push
sbb
movl
pop
xor
sbb
loop
ss
test
fbld
arpl
and
lcall
jl
hlt
ret
push
out
or
push
rcrb
xchg
cltd
pushf
jg
shl
out
adc
dec
xchg
mov
lods
push
adc
je
into
cmp
test
adc
sbb
jmp
std
test
clc
or
idivl
jge
add
test
outsl
loope
adc
jbe
in
shlb
mov
shlb
sbb
mov
adc
sbb
cmp
fidivl
pop
inc
testl
ret
and
cld
clc
add
mov
fwait
mov
aam
pop
jmp
push
inc
rclb
aaa
mov
test
leave
jbe
lcall
mov
outsl
inc
inc
rclb
mov
test
mov
ja
addr16
cli
or
push
fnstenv
aam
mov
clc
sub
dec
lock
sbbl
xchg
enter
scas
in
shr
xchg
push
push
pusha
push
push
movsb
adc
and
jno
loop
adc
dec
sub
sub
mov
lahf
sahf
cmp
xchg
mov
and
arpl
push
or
jl
inc
nop
push
insb
cli
testb
ljmp
mulb
lahf
dec
data16
jnp
enter
push
sbb
aam
xchg
inc
dec
cmpsl
test
mov
addr16
mov
loopne
mov
dec
dec
cmp
lds
pop
push
mov
dec
pop
aad
sub
cmc
std
shll
popf
lahf
mov
sbb
jb
lcall
mov
sub
lods
addr16
test
subb
test
daa
es
stos
jle
xchg
pop
xchg
sbbb
sbb
fwait
push
pop
lods
rorl
lahf
ja
and
mov
cli
mov
lock
sarl
lcall
repnz
pushw
xchg
idivl
push
lret
adc
pop
jns
inc
mov
jmp
sti
je
fwait
dec
into
sub
cwtl
stos
ficompl
add
flds
decb
cmp
pop
inc
sub
push
fndisi(8087
shlb
dec
cmp
pop
sti
mov
fistpl
fisubrl
jbe
ret
sahf
jne
mov
fwait
mov
test
jp
sbb
daa
les
jb
scas
mov
mov
push
xchg
cmpl
mov
push
sar
mov
outsl
std
fsts
xor
dec
push
es
lock
adcb
push
sarb
mov
push
cwtl
in
movsl
fildll
push
mov
data16
pusha
mov
sub
sbb
jne
hlt
jae
testl
mov
pop
in
in
push
fucomp
xlat
cltd
movsl
insl
cwtl
dec
addr16
pushf
xchg
hlt
addr16
ret
sub
cmp
adc
or
xor
cmc
pusha
xor
dec
sbb
xor
xchg
push
fnstsw
push
xchg
dec
cmc
je
fidivrs
loopne
imull
push
inc
sub
adc
js
not
xor
adc
dec
fimull
insb
cmc
push
mov
clc
and
mov
inc
les
add
dec
ret
fiadds
xlat
sub
cmp
mov
fdivl
pop
fs
or
test
out
adc
or
mov
adc
lods
loope
pop
xor
adc
fwait
sub
sub
js
push
mov
add
adc
mov
push
push
jo
fimuls
sbb
lds
mov
imul
mov
add
add
dec
unpckhps
mov
int3
loopne
gs
jecxz
inc
inc
test
jge
mov
mulb
pop
mov
enter
test
loop
in
push
fiadds
dec
fstps
dec
and
adc
mov
xchg
adcl
test
xor
inc
pop
xchg
add
inc
rol
push
mov
mov
mov
or
lods
hlt
addl
dec
popa
cmpsl
nop
mov
in
cmpsb
xchg
inc
repz
adc
popa
xor
mov
cld
js
leave
in
push
mov
sub
jg
les
dec
aam
out
pop
sti
ds
jmp
cmp
jns
out
xchg
in
scas
iret
mov
repz
mov
adcl
jae
adc
shr
rcr
pushf
ret
sub
fnstsw
pop
mov
jle
fldl
cmc
sbb
sbb
add
cmp
jge
in
pushf
sbb
add
or
aam
or
mov
in
cmp
out
cmp
dec
mov
mov
cwtl
lcall
add
xchg
rcl
push
lahf
fadds
or
sub
push
lahf
call
cmp
jle
push
vmwrite
sbb
adc
cmp
sahf
test
in
xor
out
push
sub
out
mov
xor
and
or
jno
icebp
mov
movsb
mov
or
push
pop
mov
xchg
push
int3
push
push
scas
and
mov
mov
xor
sarb
jmp
call
pop
jl
or
mov
mov
les
js
inc
dec
lcall
fcoml
nop
cmp
clc
pop
arpl
repnz
jl
sub
mov
dec
pop
mov
fs
enter
xor
aad
xor
sbb
sti
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
jmp
mov
cmp
mov
pop
int
jl
pop
jl
mov
mov
and
dec
mov
dec
aam
outsb
mov
ljmp
rcrl
dec
loope
mov
jmp
insb
push
enter
dec
adc
lea
inc
mov
jb
flds
data16
lahf
incl
xchg
loop
sar
scas
rorb
arpl
xchg
inc
mov
jno
cmpsb
in
out
addb
add
repnz
and
loopne
and
cmpsl
mov
test
aaa
and
mov
xorb
push
cmp
bound
and
pop
int
mov
lods
mov
ja
out
xorb
fidivrs
sbb
mov
fdivl
push
pop
and
pop
xchg
stc
cmc
mov
fdivrl
mov
fsubl
adc
icebp
jmp
mov
cld
shrb
jb
pop
das
adc
outsb
pusha
push
push
movsb
mov
inc
inc
shr
jp
adc
fcomps
jbe
adc
xchg
imul
loopne
cmpsl
adc
mov
add
sarb
push
testb
add
leave
fisubrs
jg
jp
dec
dec
fucom
inc
cli
and
inc
ja
gs
cmp
mov
aad
into
push
cmpsb
sbb
mov
dec
repnz
rcr
pop
test
fstps
add
jg
mov
popa
dec
shr
add
jle
out
and
incl
xor
scas
jo
repz
js
pop
sub
ja
or
or
jb
or
pop
in
xchg
or
insl
nop
arpl
xor
lods
lret
push
call
cmpb
pop
popf
pop
sbb
ja
xchg
movsl
mov
xor
jg
pop
enter
inc
out
adc
scas
xor
jae
rcrl
in
mov
adc
pop
jmp
jns
cltd
dec
pop
inc
add
jns
cltd
mov
mov
inc
movsl
xor
xor
icebp
push
out
daa
daa
adc
or
or
mov
int
dec
jno
adc
bound
push
xor
dec
stc
lds
addl
testb
cmp
lea
ds
test
mov
aaa
inc
sub
xchg
adc
xchg
lods
dec
aas
aaa
or
pop
pop
mov
pop
in
ss
push
dec
stos
mov
push
mov
xchg
jmp
jp
cmp
imul
pop
in
jno
addr16
push
push
mov
ds
out
and
mov
or
adc
out
cli
js
test
inc
mov
jb
outsb
jns
lret
in
sub
adc
shlb
add
mov
int3
enter
mov
popa
mov
out
fmull
sbb
jns
enter
aad
mov
sbb
out
jns
push
mov
in
leave
xlat
cmp
lods
xor
mov
xchg
jno
test
call
dec
jl
mov
push
sbb
mov
das
mov
in
jmp
adcb
ss
push
xchg
lret
adc
xchg
out
cli
enter
enter
jbe
jle
nop
and
into
loop
xor
enter
push
aas
inc
pop
sub
push
push
js
cltd
dec
xor
mov
mov
pop
cmp
jae
push
sbb
mov
mov
push
jge
lods
daa
cmc
push
pusha
scas
pusha
pop
sbb
add
fcmovb
cmpl
dec
je
mov
dec
popf
out
out
es
pop
testb
sbb
cmp
icebp
mov
int
pop
out
orb
mov
xor
pop
push
mov
sub
xor
mov
fstpt
mov
dec
adc
jbe
cmp
mov
adc
repz
bound
aas
fwait
add
insb
jl
inc
clc
dec
sbb
add
mov
xchg
ds
mov
dec
or
imul
dec
rolb
popl
lret
jae
and
jne
leave
movsl
inc
jno
sub
or
dec
lds
fcmovu
enter
stc
cmp
pop
xchg
out
sbb
mov
icebp
dec
jl
aam
jns
je
stos
sbb
sbb
testb
add
inc
inc
pop
sarl
pop
inc
xchg
jnp
xor
add
jp
aas
sbb
jl
enter
cli
test
pop
inc
int3
mov
xchg
in
or
mov
add
sub
push
sahf
in
mov
popf
mov
bound
shrb
sub
rolb
adc
out
pop
cmpsb
mov
das
and
cmp
mov
jle
add
sub
xor
mov
xlat
test
mov
adcl
cmc
inc
cltd
mov
imul
adc
imul
xchg
data16
push
mov
xor
lods
ficoms
shll
dec
das
jg
roll
pop
es
call
pusha
push
sbb
adcl
out
cmp
test
xchg
pop
push
pop
andnps
es
out
pusha
stc
mov
std
int
adc
loop
mov
add
add
repz
push
xchg
push
cltd
shll
jmp
add
sbb
gs
mov
inc
push
iret
push
pop
fsubp
push
xchg
adc
cmp
jle
loopne
popa
movsb
mov
enter
sbb
loopne
rcr
sbb
adc
mov
inc
inc
mov
xor
jp
inc
dec
test
or
mov
inc
push
mov
gs
dec
jne,pn
xor
sbb
fs
and
dec
push
cmp
xchg
test
loopne
dec
movsl
push
or
popf
mov
mov
xchg
loope
mov
mov
stos
flds
cmc
int
or
add
push
scas
les
loope
or
icebp
mov
in
or
xchg
cmpsl
cltd
js
rclb
and
pop
out
xor
stc
add
mov
iret
mov
xchg
mov
aam
mov
repnz
add
mov
ds
push
mov
iretw
stos
dec
or
mov
or
and
cmp
xchg
pushw
push
cs
xchg
fnstcw
mov
lret
stos
out
lods
xchg
jbe
cmc
adcl
cli
adc
imul
hlt
mov
pop
mov
sbb
rclb
dec
push
ror
inc
jo
scas
lea
out
inc
mov
xchg
imul
xor
pop
into
xor
cmpsb
mov
push
and
sub
cmp
lcall
mov
mov
rorl
sub
lret
outsb
adc
xlat
lret
iret
fdivrs
cwtl
test
cmp
sub
xchg
adc
mov
rorb
leave
sbb
call
loope
mov
mov
ja
cld
test
mov
popf
outsb
dec
in
test
add
aas
stos
imul
or
in
out
cmpsb
popl
jecxz
fs
sbb
fstps
or
icebp
push
and
inc
mov
sub
cmpsl
je
movsb
xor
xchg
inc
add
adc
test
inc
push
sub
and
in
pop
xor
push
add
push
fldcw
sahf
mov
sbb
arpl
jb
inc
xor
enter
int3
insb
cwtl
aaa
call
sub
sub
es
dec
cltd
loopne
insl
ror
inc
outsl
jl
push
iret
sbb
adc
imul
mov
push
push
dec
or
pop
sub
out
insl
dec
inc
jge
jp
ret
ret
jne
ret
sub
sbb
jae
mov
xchg
xchg
insb
cmpsl
add
cmc
mov
mov
stc
mov
les
ljmp
call
inc
dec
dec
cmp
repz
jae
mov
data16
daa
pop
int3
push
and
nop
in
mov
scas
jne
lock
lret
xchg
jmp
mov
xor
test
mov
or
lods
notl
push
cmp
lods
sbb
jl
out
mov
std
addr16
pushl
repnz
daa
mov
jne
or
fst
aam
cltd
mov
mov
sbb
add
subl
inc
mov
movsl
out
lea
fcoml
cmpsl
mov
xorb
adc
xchg
add
xor
xchg
in
or
loop
dec
xchg
ret
jmp
mov
orl
mov
dec
or
jns
into
scas
cmpsl
movsl
fdiv
movsb
in
pop
jl
mov
mov
loope
push
sbb
sub
pop
ss
inc
mov
mov
mov
sbb
negb
outsl
pop
pop
mov
sahf
pop
adc
mov
and
movsb
stc
push
fwait
dec
mov
xor
dec
mov
mov
daa
and
mov
mov
add
dec
sub
cltd
push
xor
push
flds
cmp
add
sbbl
or
out
xorb
iret
adcb
or
inc
cmp
repnz
cmc
adc
stos
push
das
stc
divl
mov
lret
cmp
outsl
xchg
out
mov
lret
mov
xchg
decb
xor
aaa
xchg
into
test
iret
fidivl
cwtl
add
sbb
call
subl
and
pop
jecxz
outsl
je
popf
lock
fcoml
xor
int
dec
or
mov
sub
scas
push
xor
cmc
push
jle
mov
mov
jg
movsb
rclb
outsl
sub
rcrl
sbb
cmp
xor
test
in
mov
idivl
loope
mov
fnstcw
iret
xor
rol
jecxz
pusha
jns
push
sti
mov
fsubr
push
rol
test
in
movsl
mov
and
movsl
push
ret
fiadds
scas
mov
or
pop
mov
loopne
pop
sbb
mov
stos
jmp
js
cwtl
aas
fisubrs
sbb
movsl
adc
or
int3
out
sbb
lcall
fstps
rcrl
es
je
insb
adc
popf
sti
or
and
scas
addr16
and
sti
lods
ljmp
in
xor
add
sub
out
je
add
icebp
inc
mov
in
xor
mov
inc
sbb
pop
cmpsb
ficoml
pop
and
loope
testl
jle
ret
jp
lret
xchg
xchg
subl
mov
push
mov
sbb
repnz
insb
sub
imul
leave
cwtl
add
sbb
push
xchg
pop
push
in
push
fs
add
clc
inc
fs
push
and
xorl
cs
jmp
int
loop
ret
fwait
cmp
ss
jg
popf
movsb
in
push
push
std
lret
jb
pop
arpl
into
cmc
pop
sahf
notb
adc
popf
rcrl
lret
movsl
push
sbb
pop
pop
pop
outsb
aaa
adc
loopne
mov
out
push
shlb
push
jge
pop
cmc
push
mov
xor
cmp
xchg
cmpsb
mov
and
mov
sbb
dec
mov
jecxz
das
aam
lret
jns
pusha
shl
sub
dec
inc
test
hlt
push
mov
jecxz
push
lahf
mov
inc
ljmp
out
xor
outsl
lcall
sub
test
aad
push
mov
scas
xor
or
dec
rcrl
popf
out
int3
repnz
adc
lods
iret
sbb
jl
jo
pop
ret
stos
mov
and
push
sbb
fs
and
pop
push
ljmp
and
jb
cs
sub
test
ds
pusha
pop
pop
adc
and
subb
mov
arpl
gs
push
data16
pop
cltd
lods
aas
mov
fadds
mov
xor
sub
adc
push
jmp
call
fidivrs
or
mov
out
cmp
into
pop
dec
test
ret
in
shlb
dec
dec
mov
ficoml
cwtl
inc
xchg
dec
mov
stc
xchg
inc
jl
shll
repz
cltd
fsubl
sti
icebp
lds
adc
pop
xlat
pushf
subl
cmp
aas
lcall
int
js
push
ds
mov
scas
imul
jg
insl
cltd
xchg
fdiv
push
mov
mov
cmp
adc
inc
test
cmp
lds
xchg
dec
shl
stc
jo
cmpb
xchg
sbb
xor
xchg
ds
xchg
cmp
add
mov
loope
scas
mov
adc
add
ljmp
push
xchg
int3
add
pop
mov
ds
and
jecxz
mov
push
popa
scas
std
cmpsl
dec
dec
scas
iret
add
orb
lret
and
add
push
dec
imul
mov
test
dec
fidivl
clc
jb
aam
aas
inc
imul
jle
in
push
fwait
pop
inc
add
push
shrb
dec
inc
imul
inc
daa
push
loopne
cltd
arpl
xor
fnstcw
mov
add
add
cmp
and
adc
bound
pop
mov
mov
fsubl
ss
std
adc
jle
xorb
es
cmc
adc
sahf
xor
shrl
or
and
sub
add
mov
cmp
add
add
cltd
push
jnp
dec
mov
dec
xor
inc
pop
shll
jp
daa
cmp
sti
pop
prefetcht1
pop
jge
and
jge
cmpsb
cmpsl
cltd
push
movsl
mov
fidivrl
jmp
fisubrl
rcrb
push
jns
dec
lcall
stos
clc
inc
popf
fldcw
mov
loope
and
nop
adc
fwait
dec
sarb
mov
iret
xor
out
lahf
adc
sahf
dec
idivb
lods
sub
jge
cmp
add
scas
jnp
or
popf
push
xchg
fadds
cmpb
or
stc
pusha
aas
inc
pmaxsw
gs
out
xor
pop
scas
mov
lea
pop
cld
aad
inc
icebp
add
push
sbb
gs
loopne
mov
mov
stos
imul
out
movsb
pop
xchg
shlb
rclb
xor
jo
int3
add
add
mov
or
sbb
xchg
ds
add
ljmp
jb
shll
adc
jbe
mov
and
insb
fsubs
cs
or
mov
sub
jnp
mov
call
push
mov
mov
xchg
and
push
mov
data16
lret
cmp
loop
pop
adc
hlt
mov
sub
sbb
or
int
push
jl
dec
loop
test
cmp
push
dec
fwait
xchg
movsb
aas
es
test
in
pusha
mov
push
and
jbe
icebp
cmp
ja
mov
gs
dec
cmp
ret
loopne
enter
adc
mov
jl
mov
int3
icebp
inc
ficompl
subl
gs
push
shlb
mov
andl
mov
jmpw
std
jb
test
pop
push
dec
cwtl
adc
or
mov
scas
xchg
mov
xchg
add
xor
jae
bound
test
mov
popf
sbb
scas
lahf
enter
sub
in
inc
mov
pushf
and
sub
aas
sub
mov
or
pop
inc
into
push
xchg
aam
movsb
ror
cmp
adc
push
iret
adc
mov
hlt
cmp
rcll
jl
mov
pusha
jle
jecxz
cli
bound
lahf
jb
xor
pop
int3
lcall
pop
or
out
insb
movl
and
aaa
sub
roll
fisttps
out
jne
adc
push
insb
cwtl
pop
sbb
inc
xchg
jl
iret
xchg
nop
cmpsb
dec
ficompl
jp
mov
rolb
cmp
pop
subl
mov
mov
fadd
mov
add
adc
fwait
pop
test
notb
sub
jmp
jne
fldl
xchg
mov
mov
push
outsl
mov
push
clc
shl
cs
cmpb
imul
lahf
cmc
pop
push
mov
dec
inc
mov
jbe
ds
nop
in
mov
inc
jp
pop
mov
lret
mov
mov
fstps
dec
out
fidivrl
add
jno
inc
push
mov
js
lods
lds
xchg
stos
xchg
sbb
mov
lcall
add
adc
dec
inc
mov
nop
rclb
jae
push
mov
dec
ficompl
inc
setne
mov
push
push
xor
data16
bound
ja
mov
popa
jge
jnp
out
push
mov
scas
push
sahf
lods
int
jo
xor
lahf
adc
mov
loop
mov
cmpsl
ret
mov
jmp
andl
pop
sti
pop
add
loopne
and
cwtl
xchg
stc
cmc
jp
mov
and
jge
imul
xlat
sub
scas
add
sub
xchg
xor
jecxz
sahf
lahf
insb
movsb
loop
adc
xchg
daa
sub
pop
cmp
xchg
jns
shlb
iret
or
je
sbb
lret
loopne
lock
cmc
imul
adc
push
mov
sbb
lds
cmc
cs
dec
mov
adc
push
xor
lret
xor
cltd
shll
lods
lock
test
xchg
int
iret
xchg
pop
jmp
mov
inc
push
js
sub
scas
lret
jno
push
bound
leave
mov
bound
aas
and
push
xchg
lds
sbb
movsl
out
neg
insb
test
xor
mov
aas
jecxz
pop
mov
cmp
cs
into
jecxz
lea
push
or
inc
lea
inc
inc
add
cmc
add
or
mov
test
repz
imul
cmc
sbb
std
fwait
test
cmp
in
mov
scas
jb
inc
in
jp
push
rorb
sub
inc
and
mov
mov
inc
cld
push
cltd
scas
arpl
push
mov
into
stos
sbb
sub
pop
insl
xor
aaa
cmp
push
mov
adc
fwait
mov
ret
mov
icebp
push
inc
roll
loopne
cltd
jecxz
adc
js
xor
bound
sub
or
mov
int
adc
cmp
cmp
adc
push
pop
in
adc
je
cmpsb
das
add
or
jns
stc
mov
adc
or
ret
outsl
push
jbe
out
mov
loop
cltd
and
mov
inc
fidivrl
or
mov
mov
icebp
add
xor
repz
push
ss
jne
aad
mov
dec
xchg
cmp
mov
push
cli
int3
mov
mov
or
inc
push
xor
or
clc
fwait
and
fldt
in
pusha
ret
cmp
rcll
int3
ret
js
sbb
adc
adc
ret
inc
ror
mov
je
pop
rcll
xlat
jo
sub
lds
sbb
push
mov
test
in
xchg
je
dec
jg
lret
jp
push
in
lret
cwtl
sbb
arpl
fidivrl
dec
or
es
outsl
mov
movsl
pop
push
push
mov
js
mov
jmp
jns
loope
mov
cmp
or
roll
fisttps
ficoms
cli
dec
aas
adc
pop
push
lcall
dec
shlb
inc
cltd
or
fstps
jo
cld
mov
arpl
sbb
imul
daa
cmp
push
das
lock
xor
out
dec
push
je
sbb
aad
pop
movsb
sbb
out
mov
mov
test
lahf
xchg
xlat
pop
add
xor
inc
jb
or
inc
loop
js
mov
and
leave
ret
jp
xlat
mov
mov
inc
jno
cmc
clc
jle
popf
add
adc
jns
or
sub
push
lret
cmp
movsb
sbb
shr
dec
sub
push
in
gs
xor
fildl
xor
addl
mov
xchg
out
repz
movsl
xor
pusha
cmpl
in
jb
adc
sbb
in
mov
je
lahf
sbb
mov
and
dec
and
jl
in
into
pand
sub
stos
loopne
fdivrl
outsl
adc
sarl
sub
scas
pushf
std
pop
or
sbb
jae
push
mov
scas
mov
push
das
daa
inc
out
lret
adc
ret
in
inc
or
cld
dec
and
cmc
push
das
adc
movsl
add
sbb
jecxz
mov
adc
adc
mov
jl
jnp
hlt
es
mov
stos
into
mov
repnz
dec
roll
sbb
aaa
ret
lds
add
cli
pop
arpl
incl
ss
mov
mov
in
add
mov
jns
lods
jne
jnp
or
and
test
mov
test
cmpsb
in
and
mov
popl
add
hlt
lea
pop
jmp
repz
sbb
push
and
and
mov
arpl
pop
push
push
pop
int
mov
pop
int
ffreep
pop
enter
inc
sub
fistps
mov
aaa
cmpsl
fisubl
out
enter
and
mov
ds
ljmp
pop
xor
shlb
xchg
aaa
xchg
inc
xchg
add
mov
xchg
cltd
dec
jns
lds
ret
ja
mov
xchg
outsl
mov
nop
pop
not
cmp
out
lea
lret
push
mov
mov
mov
rcll
mov
les
inc
cmp
xchg
or
pop
adc
sbb
sbb
imulb
xor
adc
push
ja
mov
push
add
loop
jne
xchg
xchg
imull
sbb
in
inc
xchg
sub
fsubrl
inc
jge
mov
inc
or
mov
mov
rorl
aaa
jns
inc
pop
sub
mov
out
add
mov
cli
fucomp
push
jae
pusha
popf
aad
fwait
adc
daa
gs
pop
into
call
shr
sti
push
shl
jne
or
jl
insl
jno
mov
xor
pop
push
sahf
cmpb
mov
or
imul
pop
fdivs
ret
push
stos
stc
cmp
les
jae
fdivrs
pop
xchg
lock
aam
mov
lret
push
cmpl
enter
mov
insl
data16
mov
inc
cwtl
fiaddl
push
adc
mov
pop
sbb
fcmovnb
xor
jbe
adc
subl
jae
mov
fsts
inc
fcmovnbe
subb
lret
test
fiadds
adc
cmc
lock
sub
out
test
mov
push
jle
js
fistpll
inc
or
fnstsw
jne
inc
jp
pop
sub
adc
mov
fcmovne
stc
mov
cmpsb
test
jl
mov
push
push
fsubs
loop
pushf
cli
pushf
notl
sbb
enter
je
xor
cmpl
cmpsb
loop
fisubrs
sti
fwait
test
add
inc
sub
mov
sub
test
fildll
mov
das
jle
xor
xchg
mov
icebp
mov
sti
push
jno
out
pop
push
mov
inc
out
xor
push
and
sub
pop
jns
push
popfw
negb
xchg
sbb
sub
rorl
mov
setne
imul
imul
in
imul
jle
sti
jne
pop
cmp
push
icebp
sbb
xchg
ljmp
addb
lret
mov
ret
ljmp
sub
or
mov
ficompl
dec
dec
xchg
and
adc
push
jo
pcmpeqb
cmp
mov
arpl
daa
out
mov
jb
mov
mov
push
outsl
jnp
imul
jae
outsb
test
xchg
cli
mov
dec
add
out
push
movsb
std
cmp
xchg
xlat
xor
xchg
lock
loope
inc
cmp
mov
in
xor
cmp
sbb
pop
jbe
call
shl
push
mov
ljmp
ss
gs
cmp
gs
cld
pop
addr16
cmpsb
push
jb
pushf
lret
fxch
out
enter
in
xor
gs
mov
pop
popa
sbb
and
xor
xchg
add
xchg
jne
jmp
dec
push
inc
cld
es
lcall
pop
cmpsl
aas
sub
pop
push
and
out
insb
mull
xor
out
les
sub
mov
stc
sbb
push
daa
test
pop
mov
jg
pop
lret
jne
repz
cmpsb
cld
addl
rorb
xchg
mov
cmc
decl
repnz
mov
sbb
mov
cmpsl
stos
push
sub
jp
shll
add
or
mov
mov
mov
lret
sbb
into
mov
out
xchg
gs
aad
push
dec
pop
xchg
insl
es
pushf
push
iret
mov
imul
out
cwtl
mov
int3
push
and
xchg
pushf
and
xchg
jo
xchg
not
adc
sbb
ja
push
shrb
icebp
jecxz
jnp
cmp
jp
fstps
push
outsl
xchg
fidivl
loope
iret
xor
mov
leave
sub
fdivrl
ficompl
pop
outsl
stos
jmp
sarb
fnstsw
stc
cld
mov
cmp
xchg
sarl
out
dec
cmp
or
cli
xchg
loop
push
test
inc
xor
sub
jne
jns
mov
add
sti
or
ljmp
cmp
adc
pop
in
push
xlat
fistpll
mov
out
pop
pop
imul
mov
sar
out
pop
lock
push
pusha
inc
fistl
mov
test
test
les
in
push
fcoml
hlt
aam
xor
push
mov
scas
mov
fs
das
test
xchg
in
xchg
ficomps
pusha
add
js
arpl
cmpsb
and
aam
les
mov
outsb
sub
lcall
push
sar
dec
and
sbb
mov
ficoml
jnp
aad
and
xchg
xchg
mov
ss
mov
das
rcrb
inc
pusha
outsl
lret
clc
adc
fprem
es
cmpsb
mov
je
push
mov
jae
xchg
adc
rorl
nop
ljmp
daa
pusha
lcall
js
es
dec
ja
push
and
int
dec
adc
xor
mov
ficoml
jg
cmpsb
dec
mov
push
add
nop
pop
int3
adc
xchg
in
cmp
test
inc
pop
dec
out
scas
ljmp
gs
push
jnp
or
add
ljmp
jb
mov
xor
idivl
mov
bound
jge
pop
addr16
add
scas
and
adc
fmull
ja
or
xchg
pop
popf
js
pop
pushf
psrlq
andl
adc
sbb
mov
cltd
lock
inc
mov
leave
in
pop
pop
movsl
jbe
jo
adc
push
aaa
loop
idivl
mov
sbb
lcall
jmp
push
jge
sbb
add
dec
movsb
or
cmc
fisttpll
jno
and
fwait
inc
pop
and
adc
mov
arpl
inc
jle
jge
mov
hlt
mov
test
insb
roll
outsb
cmp
pop
push
add
rcr
mov
sub
adc
xchg
dec
dec
rcl
mov
clc
out
cld
mov
rol
out
arpl
jl
popa
pop
sub
lock
mov
sub
or
jae
pop
in
pushf
stos
mov
fwait
lcall
popf
rorl
or
test
fdiv
jge
test
xchg
repnz
xchg
insl
outsl
mov
mov
xchg
add
cmpsl
les
ffreep
mov
jbe
sti
cmp
mov
pop
scas
js
xor
cmp
or
out
inc
add
inc
add
inc
pop
addl
movsb
js
add
sub
sub
sub
fcomps
mov
scas
aas
and
or
incb
xchg
mov
xor
or
mov
scas
pop
or
sub
imul
add
inc
or
lock
mov
cmp
xchg
shrb
jb
inc
push
mov
fnstsw
pop
in
rcl
aaa
jae
mov
jae
cmpb
es
cmp
stos
inc
xor
or
mov
cs
fistps
pop
in
in
testl
dec
pop
in
and
decw
stos
rcrb
iret
inc
mov
mov
sub
loope
insb
subb
bound
pop
xchg
repnz
adc
cmp
and
jbe
pop
out
inc
xchg
xor
fstpl
imul
xchg
or
hlt
loope
mov
gs
push
dec
jnp
sub
cs
adc
inc
mov
sahf
aam
and
or
pushf
sbb
adc
jecxz
mov
xchg
sub
dec
aad
pop
sbb
in
jmpw
push
je,pn
adc
xchg
xor
scas
mov
divb
outsb
test
pop
jb
jne
stc
fistpl
leave
fs
imul
inc
push
repnz
mov
in
pushf
sbb
and
jno,pt
mov
pop
lret
outsl
outsb
rcrl
loopne
insb
sbb
fcomps
rcr
cmp
mov
xchg
sub
fistps
jp
mov
jo
sbb
decl
orb
or
sub
jp
jp
cmpsl
nop
xchg
outsl
test
stos
sub
outsl
lea
jecxz
mov
mov
dec
int3
adc
xchg
push
mov
mov
jge
testb
clc
mov
mov
iret
dec
icebp
lea
xor
ficompl
jb
cs
out
jp
das
clc
xchg
and
mulb
mov
pop
xchg
imul
and
movsb
xor
mov
das
mov
cmp
jl
mov
jno
and
mov
xchg
xchg
sbb
fimuls
cmp
or
fisubrs
sub
outsb
in
mov
mov
idiv
cmp
negb
pop
or
mov
cmc
ret
lock
stc
pop
xchg
in
push
negl
ljmp
lahf
mov
lahf
mov
mov
dec
ljmp
dec
inc
fdiv
fdivrl
enter
pop
pop
dec
pop
push
xchg
inc
shrl
or
in
aas
das
cmpsl
ret
incb
into
arpl
pop
xchg
das
adc
int
push
fisttpll
sbb
add
loopne
and
out
les
dec
movsb
rol
out
add
jge
das
cmp
cmpsb
mov
mov
mov
mov
ss
add
add
push
sub
dec
jle
jne
sti
mov
out
jno
lds
outsb
mov
push
jne
cmpsb
ss
mov
adc
cmp
hlt
xor
mov
push
sbb
out
into
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
jmp
insb
jns
sbb
mov
push
fsubs
mov
nop
jl
pop
pop
jl
maskmovq
mull
pause
mov
pop
sub
adc
jb
jo
fistpll
sbb
aas
mov
jo
inc
call
mov
lahf
pop
iret
pop
mov
jns
mov
in
mov
mov
out
adc
addw
in
sbb
mov
int3
mov
mov
jge
scas
outsb
lret
cmpsl
jmp
int3
mov
sub
sub
jno
into
xor
mov
inc
inc
adc
pop
adc
out
adc
adc
sbb
es
push
add
sbb
jl
dec
and
mov
cld
arpl
fnsave
cmc
leave
je
jle
test
fprem
mov
popf
les
jmp
cmpb
sbb
xor
mov
test
mov
mov
data16
js
xchg
pop
pop
xor
int3
push
sbb
jge
mov
push
pop
sub
cmp
xchg
movsb
and
add
movsb
mov
aad
cld
out
inc
xchg
hlt
xor
mov
mov
pop
mov
enter
sbb
cmp
test
int3
xchg
repnz
add
push
fisubrs
add
inc
imul
lods
inc
cli
cmpsl
scas
push
jb
ja
ret
pop
xchg
aas
test
mov
cmp
push
pop
call
mov
outsl
out
jle
nop
mov
les
jbe
int
inc
jne
aas
cmp
and
mov
xor
pop
jg
je
cmp
adc
cmp
dec
mov
dec
js
cmp
pop
rcrb
sub
jne
out
js
mov
or
pusha
into
insb
sub
cmp
xor
xor
int3
push
daa
mov
out
fimuls
sbbl
xor
icebp
fimuls
and
popf
dec
adc
movsl
xlat
lahf
arpl
cmpsb
cmc
jo
cmp
orb
sub
adc
call
xchg
leave
jnp
xchg
fmuls
cwtl
into
xorb
jbe
sub
mov
jae
in
cmpsl
dec
das
popf
nop
add
popa
shll
dec
in
mov
mov
fcoml
movsb
insb
sbb
cltd
mov
inc
xchg
pusha
loop
cmp
cwtl
imul
add
add
add
fiaddl
std
scas
cmpsl
sub
int
out
xor
xor
xchg
inc
push
adc
pop
outsb
sarl
pop
push
sbb
jns
jae
mov
sub
pop
mov
mov
mov
fdivr
mov
adc
repz
pushf
imul
jno
repz
xchg
jl
mov
ja
jo
sbb
sub
pop
xlat
sbb
or
stos
sub
mov
cli
push
inc
sbb
dec
mov
fcomps
pop
cmpsb
jbe
int3
mov
jne
adc
ss
xor
and
in
jecxz
xor
fsubs
daa
jb
fs
push
mov
inc
insb
lahf
icebp
add
fstps
jo
repnz
cmp
inc
ljmp
hlt
rcll
lret
repnz
sbb
mov
das
hlt
fwait
movsl
mov
cmp
fcomi
mov
repnz
dec
adc
jecxz
sbb
sbb
call
sbb
xchg
push
das
jl
pushf
shrl
mov
out
insl
mov
data16
subl
rcl
and
add
inc
dec
ret
sti
sub
sub
dec
and
mov
dec
mov
push
xchg
or
das
push
ja
loop
into
add
mov
cmp
pop
shlb
add
out
adc
jmp
push
pop
adc
adc
stos
nop
sbb
sub
cmpsb
jle
and
arpl
push
inc
dec
mov
cmpsb
mov
mov
or
push
movsb
jp
std
jge
fadd
fwait
xchg
rorl
sbb
push
cmpsb
inc
xchg
or
xchg
lds
aad
icebp
bound
pusha
shlb
test
movsl
je
ja
or
imul
in
inc
mov
notl
push
loope
xchg
or
fs
push
adc
mov
daa
dec
inc
ss
dec
fbld
or
mov
sub
int
xor
and
das
cmp
lahf
mov
adc
aaa
mov
scas
mov
sti
ja
daa
inc
jmp
jmp
rclb
sub
int
insb
pop
sub
fnsave
push
and
mov
xchg
or
loope
jge
adc
dec
mov
pop
addb
push
in
pop
lret
jg
inc
shl
out
imul
pop
lods
xchg
or
mov
dec
push
cwtl
xor
sub
call
push
mov
cmpsb
adc
xchg
xchg
and
mov
ja
inc
jns
jne
push
out
fimuls
mov
or
fs
repz
in
ret
push
fndisi(8087
xor
addr16
decl
arpl
dec
sub
dec
adc
jg
es
sbb
into
ret
adc
push
push
push
mov
test
bound
push
imul
mov
sbb
les
mov
fidivrl
mov
xchg
inc
mov
ret
mov
xchg
pop
nop
rorl
stos
inc
adc
pop
xor
sti
into
mov
inc
push
push
out
fucom
inc
daa
and
imul
shl
mov
jno
ja
push
or
jmp
stos
data16
cltd
add
sub
jbe
add
mov
add
or
xlat
lcall
pushf
and
or
push
sub
out
cmp
mov
cs
and
loopne
mov
pop
out
pushf
jno
xor
inc
pushf
sub
pop
in
lret
lea
jmp
xor
hlt
mov
adc
ja
stc
fwait
cld
sub
pop
and
or
arpl
cmpb
sbb
stos
cwtl
sub
pop
sti
push
push
adc
xorl
pop
add
ficoml
sub
mov
add
mov
clc
stc
cltd
lods
and
dec
inc
mov
clc
mov
cmp
pop
enter
pop
dec
outsb
loop
xchg
insb
cld
dec
inc
cld
push
ret
shlb
lods
inc
jmp
movsb
or
push
inc
clc
add
mov
xor
cmc
xlat
lock
push
jmp
repnz
pusha
or
jno
sub
xor
popa
cmp
xchg
mov
jae
outsb
mov
xorl
not
arpl
mov
iret
imul
into
leave
bound
cmc
xchg
cltd
dec
inc
stos
mov
push
push
or
lret
bound
mov
flds
mov
xchg
cmp
das
push
jne
into
int3
mov
xchg
cmp
pop
adc
int3
adc
iret
mov
mov
fidivl
insb
rcrb
pop
xchg
sub
push
mov
dec
sub
cwtl
icebp
icebp
jo
xchg
out
sti
and
ret
xor
push
jo
std
dec
sbb
jbe
xchg
xchg
xorb
popa
cltd
and
xlat
mov
cmp
repz
pop
add
mov
addr16
pop
or
adc
inc
inc
pop
or
sub
xchg
adc
das
test
pop
adc
xor
mov
lods
mov
and
das
shlb
das
mov
and
mov
pushf
insb
insl
mov
adc
xchg
add
mov
pop
shlb
jp
clc
mov
jl
lock
adc
mov
pushf
stos
and
xchg
push
bt
scas
jne
mov
fsubrl
pusha
xorl
pop
jg
push
sub
and
sete
jge
leave
ret
jmp
leave
rcrb
cwtl
hlt
inc
cmp
dec
jle
mov
push
sbb
jmp
mov
or
bound
mov
stos
out
outsb
ja
popa
jecxz
stc
mov
mov
inc
daa
mov
xchg
cmp
dec
aaa
and
xor
shll
cmp
mov
cli
mov
fldenv
ds
add
xchg
add
and
out
xchg
pmullw
je
jge
int
dec
stos
pop
test
outsl
mov
cmp
mov
dec
xor
cltd
ficoms
xorl
loope
movb
fs
lods
movsl
test
inc
movsl
inc
push
dec
jg
mov
xlat
xchg
out
fadds
test
pop
enter
insl
mov
and
push
cs
loope
aad
mov
adcl
roll
lea
clc
xchg
pop
xor
vcvtpd2dqx
lcall
je
aad
fisubl
xor
orb
mov
sti
add
pop
and
out
or
leave
shrb
cmpsb
cwtl
mov
rcr
test
icebp
mov
pushf
ja
pop
inc
repnz
mov
cmp
in
aam
and
mov
clc
loopne
ja
imull
dec
mov
orl
fsubl
inc
or
jmp
cs
fdiv
jge
adc
pop
dec
add
jecxz
mov
mov
nopl
and
cmp
mov
mov
xor
aad
fidivrs
shlb
push
das
xlat
sbb
push
rolb
inc
nop
addr16
rol
lods
mov
push
dec
fstps
sbb
lock
dec
insl
cld
test
and
stos
fdivs
or
out
push
add
stos
xchg
push
insb
dec
or
mov
call
mov
and
aas
dec
xchg
shlb
pop
inc
xchg
es
or
add
xchg
fstl
xchg
movsb
inc
sbb
mov
loop
adc
jo
xor
insl
mov
inc
mov
xor
push
mov
jg
dec
cmpsb
push
sub
lret
sub
aam
into
cmp
cs
movsl
aas
sub
push
shlb
push
nop
and
fisubrl
push
push
repnz
test
ds
xchg
sbb
sahf
and
mov
push
pop
push
mov
jge
iret
cmp
clts
scas
sbb
and
mov
jecxz
cmp
jg
ficoml
or
scas
or
mov
dec
fadd
mov
inc
add
in
dec
fstpl
cmp
pop
test
xor
pop
testb
je
call
test
repnz
adc
lea
push
xor
and
jnp
insl
test
cmp
cmp
inc
dec
ret
push
xor
or
popf
stos
lahf
movsl
out
jp
and
push
mov
ja
jg
add
in
scas
aas
jns
fbstp
fisubrs
push
popa
xor
sub
call
sub
in
dec
mov
enter
ds
push
lods
pop
cli
pushf
jmp
and
lret
inc
dec
in
and
daa
movsl
push
das
scas
push
mov
adc
mov
test
inc
fidivrs
cmpsb
or
dec
jmp
mov
repnz
les
or
add
lahf
pop
push
xchg
xchg
mov
mov
js
rcll
adc
scas
inc
lea
mov
ss
push
and
cmp
cmpb
ret
test
shl
call
mov
xor
pusha
ja
repnz
pushf
mov
jg
mov
jg
fucomip
aam
fwait
sbb
pop
mov
call
sbb
pop
scas
mov
xor
jae
movsl
mov
push
mov
pop
iret
xchg
repz
gs
jmp
or
add
daa
cmp
cmpsl
xchg
ret
and
mov
int3
daa
pop
fdivl
mov
subl
lahf
out
xchg
push
cli
divb
inc
jg
adc
sub
loop
negb
in
jo
mov
mov
movsb
xor
ficomps
loopne
lods
inc
int
sbb
add
sbb
rcl
jb
sbb
icebp
insb
mov
ret
imul
pop
jg
pusha
test
loopne
fstl
dec
cmp
mov
je
push
mov
js
ret
sbb
dec
dec
idiv
adc
mov
add
test
lods
inc
leave
add
sub
dec
or
dec
mov
mov
imul
add
addb
repnz
or
les
sub
cmp
pop
pop
lahf
nop
hlt
mov
lret
mov
in
data16
pusha
dec
inc
test
add
loope
bound
xchg
pop
lods
jae
push
loop
inc
sbb
sahf
jge
pop
xchg
fsubrs
dec
xor
aas
inc
dec
mov
sbb
inc
movsb
lret
mov
sti
cmp
sbb
test
push
int3
inc
pusha
das
cld
cs
in
jne
out
movsb
jb,pt
aas
lea
push
mov
inc
sti
jp
push
sub
sarb
cs
mov
cli
jl
inc
jg
cmp
addr16
add
in
xchg
push
pop
nop
mov
int
movsl
pusha
adc
movsl
cmp
jne
jo
jnp
test
fstp
mov
mov
jno
cmc
mov
test
xor
mov
inc
in
rcrb
fisttps
inc
jae
push
paddw
push
dec
jae
or
xchg
lcall
movsb
arpl
sub
mov
pop
jae
push
rorl
push
arpl
xor
shll
std
xor
loop
sub
inc
cmp
test
push
fwait
insb
adc
push
push
nop
pushf
fldt
push
mov
push
dec
mov
mov
adc
dec
out
cmp
mov
sbb
fdivrs
cmp
adc
icebp
gs
pop
scas
test
pop
pop
push
pop
xor
incb
push
inc
jns
outsl
subl
cmp
addr16
and
incb
fsubs
pop
enter
push
nop
aas
push
lods
daa
and
jno
std
popf
idivb
jecxz
in
les
shlb
cltd
rcrb
fucomip
mov
int
loopne
mov
push
mov
push
scas
loope
adc
add
inc
loope
xlat
push
in
stc
mov
jo
xchg
sbb
sub
sbb
mov
mov
aaa
in
dec
pop
mov
and
and
mov
movsb
pop
into
ss
loope
add
daa
int
pop
fsubl
sub
in
pop
jo
or
fbld
jb
aas
xlat
ret
mov
in
adc
sbb
xchg
pusha
pop
sbb
arpl
and
nop
fwait
in
hlt
rorb
aam
out
sahf
jno
add
shrl
stos
sbb
shlb
push
bnd
dec
dec
sahf
xlat
jp
add
and
andb
outsb
sub
iret
sbb
pop
fs
das
push
jecxz
xorl
lret
or
push
adc
test
out
addb
out
pop
xchg
cld
push
inc
adc
mov
ja
fcompl
shr
dec
or
cmpsb
jp
movsb
add
xchg
loopne
nop
or
mov
ds
mov
xor
sbb
mov
xor
and
and
shlb
hlt
repz
cld
xorl
mov
sarb
sub
mov
sbb
leave
jb
cltd
jnp
mov
jp
and
and
adc
cs
xchg
adc
jne
stos
mov
xchg
push
inc
adc
sub
xor
xor
scas
mov
fdivrs
mov
dec
scas
mov
cmp
ret
add
push
and
mov
aas
in
cmpsl
push
dec
xor
iret
xor
pop
jmp
pop
mov
sbb
ret
stc
mov
cli
pop
and
sti
xchg
sbb
popf
ja
inc
dec
inc
xchg
mov
adcb
jne
into
addb
leave
or
in
jnp
jp
jbe
jnp
pushf
outsl
or
outsb
mov
sahf
sbbb
repnz
stos
xchg
loope
jne
std
mov
sahf
movsl
fsubr
rorb
lods
mov
adc
xchg
or
push
out
ss
je
push
adc
leave
push
aad
out
and
and
xor
cli
loope
in
or
mov
mov
je
or
outsb
outsb
jne
loop
insb
push
pop
ljmp
mov
lea
stc
imul
incb
out
xchg
sbb
rclb
repnz
sbb
stos
popf
aas
int
jge
in
ss
bound
notl
js
adc
stos
sub
cmp
sub
and
lock
loopne
ds
shlb
repnz
stos
push
inc
dec
sti
mov
xor
sub
cmpsl
rcll
xchg
mov
gs
jge
stc
inc
fidivrs
xlat
push
sbb
sub
lods
js
rorb
test
adc
cmp
scas
or
sub
mov
rclb
bound
mov
popa
adc
mov
sbb
stos
pop
cmpsb
dec
add
push
pop
jo
lcall
push
dec
lcall
inc
xchg
or
dec
xchg
daa
leave
push
xor
loop
out
adc
push
inc
imul
cmp
inc
bsf
test
dec
daa
outsb
jns
adc
pusha
icebp
dec
les
push
into
stos
dec
or
mov
cmp
fnstcw
fisttpl
out
mov
push
add
adc
inc
xchg
cmp
lods
cmp
cmc
xchg
mov
jmp
inc
enter
xor
jp
jl
stc
icebp
xor
xchg
loop
jle
cwtl
inc
lock
push
push
sbb
mov
add
push
sbb
cld
enter
jl
out
push
fcoms
dec
xor
pop
lret
add
pop
sub
rcl
cld
shlb
addb
arpl
xchg
repz
je
js
dec
imul
stos
rorl
cwtl
bswap
shlb
push
mov
icebp
stc
add
mov
rol
adcb
push
ja
pop
bound
push
lret
inc
jbe
jmp
xchg
mov
addr16
fistpll
add
jb
dec
ljmp
mov
xchg
test
xorb
jg
scas
mov
test
add
add
out
int
jne
xchg
jecxz
add
xlat
inc
sub
mov
add
push
push
xchg
or
add
dec
std
in
mov
pop
jle
repnz
xchg
pushf
lds
clc
fnstsw
push
popf
lret
mov
in
setg
cli
jg
mov
add
dec
push
xchg
addr16
jno
and
xchg
push
sub
mul
add
push
xchg
test
js
ljmp
stos
aam
bound
or
pop
pusha
lcall
hlt
jmp
jg
jmp
pop
cmp
jp
mov
hlt
xor
adc
sbb
mov
push
out
sub
aad
and
jge
outsb
jmp
sbb
mov
es
push
das
xchg
hlt
push
shl
xor
fstps
ret
xlat
cs
stos
xor
cs
test
xchg
push
or
les
fwait
test
xchg
js
test
gs
pop
sub
jb
xchg
pop
loopne
or
sbb
mov
daa
add
fimull
adc
in
jge
inc
jl
jb
push
fmuls
push
ds
lret
mov
repz
inc
insb
paddw
mov
lahf
rcr
push
shlb
xchg
push
popa
push
popw
hlt
pop
mov
fsubl
call
mov
insb
jl
or
jl
add
inc
adc
loop
inc
fcomp
out
fwait
add
out
mov
stc
add
div
and
mov
cmp
xor
or
xchg
cmpsl
mov
add
cmp
out
fdivrp
aas
xor
call
push
mov
jl
out
sub
push
jl
lahf
ss
lods
jl
shrb
mov
sti
int3
pop
xchg
inc
dec
pushf
xchg
sub
shl
pop
sbb
mov
addr16
test
outsb
lahf
popa
rcl
mov
and
ret
orl
ds
stc
inc
nop
sbb
dec
aad
out
std
push
mov
lret
test
icebp
mov
ja
dec
xchg
lret
xchg
sbb
and
sti
sub
rcll
sbb
ss
jne
rcr
cmp
cwtl
sbb
adc
leave
xchg
orl
loop
jge
or
push
jae
lea
adc
mov
inc
xor
add
pop
adc
call
cs
imull
jecxz
pop
int3
pushf
enter
fisubl
and
mov
cmp
mov
xadd
jle
xchg
adc
dec
add
xlat
es
lahf
xchg
mov
and
pushf
ret
mov
jg
pusha
bound
push
gs
icebp
xor
mov
mov
test
jecxz
insb
incl
mov
pushf
xlat
xlat
push
or
mov
or
inc
out
pop
inc
dec
loop
fildll
insl
ljmp
je
lahf
js
loopne
pop
and
out
ja
lds
loopne
mov
and
rol
sub
hlt
jne
lods
and
imul
jecxz
mov
add
arpl
nop
sbb
fdiv
cmp
in
lret
mov
int3
dec
adc
clc
scas
gs
fcomps
add
sub
and
out
pop
pop
hlt
dec
insl
add
jecxz
jp
mov
popa
and
add
lcall
lods
mov
inc
cmpsl
jmp
ficoml
lret
pushf
hlt
loop
pop
aad
jmp
or
xchg
fmull
imul
mov
cmp
add
xchg
orb
movsb
mov
mov
add
out
in
xchg
or
popa
mov
in
movsl
stos
rcll
push
sub
jnp
into
jge
pop
xchg
outsl
sarb
jle
adc
cmc
add
shrb
push
test
ja
pop
testb
mov
or
fs
inc
add
arpl
test
pop
mov
jnp
pop
stos
popa
add
add
test
xchg
ljmp
or
add
repnz
pop
mov
movsl
cmp
or
jecxz
negl
mov
aad
imul
int
std
push
xchg
mov
ficoms
adc
xchg
insb
shl
sub
inc
pop
insb
sarb
hlt
cmp
add
lods
and
inc
jp
sub
mov
dec
pop
out
cmp
mov
or
sub
fimuls
clc
mov
adc
inc
outsb
out
std
push
mov
mov
or
aam
shll
cmpl
sbb
movb
aas
repz
ret
clc
fwait
and
cmc
dec
mov
pop
cmp
das
jge
cmp
sub
sbb
or
jge
xor
stos
mov
mov
enter
int
mov
mov
dec
add
pop
out
out
into
pop
mov
ljmp
scas
out
cmp
xchg
scas
and
sbb
mov
lahf
popf
inc
cmp
mov
call
jbe
int3
adc
push
mov
movsl
push
addr16
shr
pusha
pop
scas
inc
cld
lods
or
add
in
icebp
mov
inc
push
out
jns
lahf
xlat
pop
lret
loopne
stos
test
mov
cltd
frstor
cmp
shr
repnz
int
fwait
mov
adc
adc
cmpsb
fiadds
xlat
cmp
xchg
jle
aas
pop
mov
jno
popf
adc
addb
popf
mov
sbb
jbe
outsl
dec
xchg
jne
cltd
mov
add
inc
repz
out
fmuls
sbb
cmp
and
inc
les
test
pop
xor
push
in
jb
das
xchg
daa
cmp
hlt
jp
test
xchg
cmpsb
mov
rcrl
in
int
lds
aaa
add
pop
xor
mov
mov
dec
adc
notl
xlat
fs
jne
jbe
xchg
mov
push
adcl
fcmove
jne
mov
mov
jle
movsl
adc
cmpsl
into
cmpsl
jne
pop
ljmp
leave
scas
sbb
outsb
cmp
lods
sbb
loopne
jb,pt
insw
dec
xor
push
dec
jp
xchg
sbb
dec
sub
jge
sbb
in
pop
and
andb
rep
cmpsl
push
mov
cmp
cmp
les
ss
cmp
test
sbb
push
or
and
sbb
nop
stc
adc
add
imul
cltd
in
insb
lock
push
jb
dec
push
mov
jne
xchg
fcoms
jne
jno
dec
add
xorl
gs
testl
fabs
jmp
pop
push
jns
adc
inc
fcomps
or
cld
xorb
mov
sub
out
test
repnz
jb
inc
mov
or
mov
int3
push
ljmp
cmp
repz
jns
push
push
adc
mov
lret
and
dec
out
mov
hlt
or
in
sbb
jmp
xchg
js
mov
add
push
push
add
push
adc
bound
iret
das
or
xchg
jge
inc
pop
bound
movsb
stos
fstpl
or
and
dec
pop
jb
scas
mov
lcall
lret
dec
lods
or
inc
jg
lods
pop
out
xor
pop
dec
bound
cmp
mov
jne
daa
and
std
sbb
out
rcr
cmp
inc
dec
jne
in
shll
mov
cmp
ds
cltd
dec
aas
sbb
push
cmp
xchg
jle
lret
dec
fucom
ljmp
xchg
cmp
fwait
subb
mov
shll
fwait
pusha
movsb
out
cmp
fwait
cmpsl
mov
lods
sbb
dec
adcl
mov
mov
dec
repnz
mov
enter
sub
flds
inc
push
pop
sbb
shr
add
psllq
jae
mov
imul
mov
sbb
mov
ss
nop
pushf
icebp
cli
fnstenv
xor
insl
int3
adc
ret
leave
fucomip
rorl
adc
inc
jg
insb
stc
aam
test
mov
lahf
pop
lret
and
cld
xchg
add
add
mov
les
loope
cmp
or
outsb
jge
sbb
dec
bound
repz
ret
dec
int
sbb
jno
push
pop
mov
hlt
dec
jnp
jmp
ss
mov
mov
pop
adc
mov
cmp
dec
mov
mov
inc
hlt
push
test
pop
aad
lods
imul
jo
loop
jg
dec
lea
popa
push
push
pop
test
inc
dec
das
pop
mov
ret
xchg
lods
ret
pop
pop
jge
mov
dec
data16
adc
pushl
pop
aad
repz
push
cmp
adc
dec
fwait
xchg
test
pusha
fldz
inc
adc
imul
mov
mov
push
nop
popf
push
insl
mov
leave
outsb
mov
jae
ljmp
scas
inc
mov
mov
bound
cmpsl
outsb
test
lods
out
lahf
pusha
mov
daa
lods
xor
repz
push
jp
jmp
scas
push
push
push
jp
in
xchg
cmp
popa
jmp
lret
cwtl
add
ljmp
dec
and
add
push
xchg
xlat
xchg
mov
mov
lret
mov
dec
das
lret
mov
ja
xor
adc
lahf
and
nop
pop
sbb
jns
mulb
and
std
xchg
xor
mov
loop
rclb
mov
adc
popa
and
inc
js
repnz
mov
or
in
jp
cli
les
mov
mov
movsb
adc
sub
int3
cld
clc
jle
dec
push
cli
adc
xchg
dec
loopne
jne
in
icebp
lcall
gs
jmp
movsl
ret
pop
adc
out
push
mov
daa
std
je
sub
add
jle
leave
inc
stos
sub
or
in
pop
cwtl
and
pop
mov
jne
mov
fwait
add
xchg
loop
dec
in
repnz
or
and
testl
jae
mov
xchg
je
stc
cwtl
aas
repnz
dec
xchg
jl
fiadds
jne
clc
sbb
cmp
dec
or
pushf
rcr
popf
sti
sub
dec
cmp
cmp
fdivl
xchg
jbe
pop
mov
rolb
pop
mov
lret
jne
jb
add
lods
pushf
xor
dec
push
test
mov
in
pop
mov
jnp
mov
stc
in
inc
cmc
xchg
cmp
mov
cmp
inc
test
fs
aad
bound
inc
roll
sbb
sbb
mov
sub
stos
mov
fnstsw
lods
jge
push
rclb
jae
dec
mov
cltd
loopne
clc
stos
pop
push
scas
dec
lcall
add
mov
add
pop
in
mov
or
testb
xchg
sub
insb
cmp
mov
pop
ss
data16
fcomps
mov
cmp
imul
jecxz
pop
mov
push
scas
scas
dec
cmp
mov
fdivr
cld
out
xchg
mov
sahf
mov
lea
or
cwtl
or
pop
xchg
shrb
mov
je
jns
adc
mov
xchg
movb
aas
mov
cmp
xchg
ljmp
mov
sti
ret
lret
inc
insl
insb
fstl
pop
fisttpll
pop
pop
push
cld
scas
in
lods
mov
les
or
sbb
adc
cmp
std
fcoms
xor
mov
lock
sti
xor
movsl
cwtl
pop
pop
scas
cmc
jb
test
xor
and
outsb
push
ror
jae
jbe
mov
or
adc
sub
addl
sub
or
call
lods
fwait
mov
cmp
sar
movsb
ss
aas
in
popa
cwtl
adc
sbb
and
jnp
ds
adc
sbb
ds
sub
sub
outsl
sbb
jb
mov
adc
xchg
stc
data16
adc
aad
xchg
fcoms
negb
push
roll
mov
dec
sbb
mov
inc
push
jg
ficoms
xor
xor
das
sub
jge
push
cmpsb
add
lods
dec
xor
arpl
adc
in
incb
dec
jmp
bswap
enter
ror
xchg
scas
cld
cmp
insl
bsf
fs
xchg
vpsubb
mov
add
pop
div
adc
lock
jbe
nop
sub
jge
or
ret
jecxz
add
push
adc
mov
inc
pop
enter
or
jge
out
and
enter
pop
js
es
inc
cmpsl
test
ja
jmp
xchg
ljmp
inc
dec
sub
fldt
js
in
dec
in
nop
in
popl
out
or
nop
nop
push
inc
test
sahf
pop
mov
out
cmpsb
cwtl
mov
pop
mov
sbb
jp
popf
fdivs
sbbb
ja
out
adc
cltd
push
repz
mov
and
fidivrs
dec
int
xor
push
push
jnp
mov
test
mov
js
fistpl
aam
xchg
inc
sub
or
pop
xchg
inc
cmpsb
ret
repnz
aad
mulb
push
adc
mov
mov
shrl
add
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
jne
adc
std
push
adc
aas
adc
sbb
adc
sbb
add
push
adc
out
jg
add
dec
adc
mov
jns
add
inc
adc
sbb
inc
add
cmp
inc
add
cmp
inc
add
cmp
inc
add
add
add
add
add
add
add
inc
cmp
add
scas
inc
adc
inc
cmp
add
adc
push
adc
cmp
add
sbb
add
adc
idivb
inc
add
cmp
cmp
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
adc
subb
cli
adc
sbb
adc
pop
inc
adc
sbb
adc
in
pop
adc
pop
sub
add
add
inc
add
add
inc
add
add
cmp
add
aaa
adc
cmpl
adc
push
dec
adc
mov
adc
lock
add
adc
outsb
or
add
add
add
push
push
inc
push
xor
mov
mov
add
add
add
inc
cmp
jae
popa
insb
insb
and
je
pop
push
outsb
fs
dec
push
pop
dec
popa
imul
outsl
insb
fs
dec
outsb
arpl
gs
dec
outsb
outsw
inc
jo
add
add
add
add
add
cmp
add
add
add
add
add
mov
cmp
add
mov
cmp
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
