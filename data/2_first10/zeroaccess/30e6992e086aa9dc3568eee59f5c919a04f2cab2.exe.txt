push
mov
sub
xor
jmp
into
rcr
aad
mov
cli
mov
js
js
jle
js
xlat
cmp
fld
pop
push
or
bswap
and
sbb
inc
bound
mov
or
mov
and
lods
fadds
pusha
out
outsl
adc
sahf
add
dec
lods
pop
sub
mov
lds
adc
xchg
icebp
dec
loopne
dec
call
mov
sub
sbb
xchg
sub
repz
out
cli
in
xchg
cmp
jbe
xlat
sub
add
sbb
xor
adc
fisttpll
cmp
arpl
rclb
fistpl
and
inc
push
aaa
adc
fstpt
dec
repnz
sti
cmp
jecxz
add
mov
pop
sub
sub
enter
push
jl
jo
aas
and
outsb
stos
inc
mov
jge
repnz
mov
mov
lock
add
adc
ficoms
daa
pop
xchg
mov
pop
fmull
jae
mov
mov
loop
mov
sbb
test
dec
movsb
lds
cmc
or
out
inc
or
push
sbb
pop
les
sahf
add
ljmp
lods
sbb
add
cld
in
or
ss
cmp
add
stos
stos
sub
sbb
sub
xor
sbb
popf
data16
mov
pushf
das
push
push
icebp
out
test
xchg
addr16
fnsave
mov
fucomi
or
jo
xorb
aaa
xchg
mov
int3
or
std
jne
dec
dec
jns
or
rcrl
clc
and
jne
leave
sbbb
popa
xor
and
adc
stc
dec
shll
ss
dec
adc
jmp
outsl
nop
jnp
mov
mov
daa
ret
lea
mov
and
jo
rcrb
in
lcall
sub
adc
movsb
mov
pop
hlt
pop
lcall
test
int
mov
mov
aaa
out
adc
xor
shl
mov
arpl
adc
xchg
test
in
adc
jge
sub
nop
inc
inc
mov
lahf
xchg
or
lcall
jp
test
sbb
sbb
mov
sub
cmp
cmpsb
sbb
in
fists
cmp
push
push
cmc
pop
jno
mov
xor
mov
mov
or
mov
movl
mov
mov
push
or
push
add
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adcl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
sub
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
jmp
leave
rol
leave
int
fimull
leave
rclb
test
jb
jle
js
jle
js
xor
clc
cmp
push
cmc
test
call
mov
inc
lcall
inc
and
ja
shl
and
cltd
adc
mov
jle
leave
jmp
xor
xor
popa
xchg
cmpsb
mov
xchg
cmpsl
sbb
adc
aas
cmpsb
ljmp
movsb
rcrl
push
xchg
push
adcb
nop
ljmp
mov
repz
mov
pop
inc
int3
dec
into
or
xor
jno
out
push
push
test
sbb
ja
mov
jmp
ljmp
xchg
pop
fisttpll
mov
cmp
inc
in
push
fimuls
fs
sbb
inc
pop
adc
sub
test
mov
mov
roll
inc
xchg
inc
push
mov
daa
jmp
mov
ja
jmp
outsl
test
xchg
lea
ds
sub
into
cli
adc
push
outsb
cmp
mov
cmpsb
adc
push
fucomp
ret
in
int
add
insb
fdivl
scas
xor
mov
stos
sti
xor
jnp
and
cmpsb
insl
cs
aaa
ss
cs
push
push
jns
xchg
js
mov
push
iret
movl
add
add
in
or
lock
out
pop
push
jle
stos
lea
jp
or
es
out
pop
imul
xchg
sub
arpl
sarl
das
mov
sub
jns
xchg
mull
xchg
in
out
pop
js
decl
push
repz
pop
je
hlt
adc
out
std
xor
push
add
and
inc
bound
out
cmp
sbb
out
imulb
inc
mov
arpl
jle
daa
arpl
mov
jg
jecxz
mov
out
js
adc
pop
mov
jg
ret
jg
call
movsb
jp
xchg
shlb
icebp
ds
ret
mov
sbbb
push
push
mov
ja
pop
nop
dec
or
les
dec
cltd
sbb
xor
loopne
cmp
mov
push
cmp
mov
movsl
addr16
push
sbb
notb
or
inc
into
adcl
lcall
mov
ds
xchg
fwait
push
pop
jb
mov
jmp
popa
out
fcoms
loope
sbbb
pop
cltd
stos
call
inc
pop
mov
dec
test
add
push
add
mov
adc
lea
orl
mov
xor
mov
neg
mov
xor
jmp
ret
ret
leave
lret
ret
out
repz
cmpsb
mov
add
jle
js
dec
loope
insb
jge
mov
sub
addr16
or
pop
mov
or
mov
stos
out
mov
cmpsl
or
cmp
mov
out
cmp
jno
ret
sbb
xor
xchg
xchg
jp
mov
push
loop
lds
jno
cmp
lcall
lods
mov
and
test
cmc
ljmp
sub
inc
lods
mov
add
orl
mov
mov
sbb
daa
mov
movsb
std
call
pop
mov
outsl
inc
add
mov
test
loop
cmp
movsb
mov
loopne
in
mov
jb
mov
inc
mov
xchg
fdiv
pop
mov
or
mov
cmp
add
push
jns
mov
scas
cmp
cwtl
mov
sbb
push
pop
or
mov
pop
pop
pop
sub
ret
push
mov
jmp
mov
out
and
pop
call
xchg
cmpsb
mov
daa
andl
rcrl
inc
sar
addr16
lods
nop
lods
jo
int
xlat
mull
cmpsl
pusha
test
test
mov
xchg
sahf
jge
rclb
mov
loope
or
pop
mov
lock
arpl
lret
fistps
mov
mov
xchg
daa
out
lea
jnp
pop
enter
or
cmp
jne
adc
lahf
add
add
dec
add
lcall
ja
mov
adc
push
xchg
cwtl
loope
test
scas
dec
test
cwtl
stos
and
movsb
cmp
push
pop
out
mov
outsb
rorb
faddp
jns
stc
mov
jnp
arpl
imul
cltd
mov
pop
lds
stos
sar
insl
mov
int
fistpll
cmp
inc
movsb
dec
loope
xor
adc
inc
outsl
add
push
repz
repnz
lods
loopne
roll
fwait
es
aas
cld
sbb
enter
sti
adc
push
dec
fcomi
adc
neg
inc
pop
mov
lea
adc
mov
sbb
push
pop
mov
es
mov
sbb
movl
lea
jmp
xlat
ret
ds
fcmovnu
loope
xchg
mov
add
jle
js
inc
or
jno
sbb
push
das
dec
adc
lahf
cmp
jecxz
adc
scas
leave
scas
and
push
xor
cmc
cltd
jp
sub
pop
push
lods
mov
push
mov
mov
fisubrs
rcll
xor
jbe
cmp
lahf
xchg
xchg
xchg
movsl
out
imul
movsl
cmpsb
mov
movsb
sti
arpl
and
sahf
gs
pop
mov
call
jg
divb
sub
arpl
je
sub
int
test
and
lahf
sbb
lret
and
loopne
insl
je
push
inc
cltd
mov
data16
xor
adc
inc
shlb
add
jl
xchg
xchg
frstor
in
out
dec
mov
xchg
xchg
insl
jp
dec
cli
xor
int
mov
mov
outsl
movsb
cmp
add
pop
jg
mov
xorl
ret
sarb
aas
add
xchg
jbe
andl
icebp
sbb
mov
push
dec
jns
sbb
jb
call
sbb
ljmp
mov
repz
bswap
sbb
mov
xchg
xor
adc
push
xlat
or
mov
fstl
test
add
mov
jecxz
inc
std
mov
mov
pop
mov
lds
adc
push
insb
sbb
xlat
mov
xor
ds
jp
xor
je
cmp
cmp
push
int
sub
cltd
clc
ds
je
add
dec
faddp
push
daa
adc
adc
sbb
push
dec
cmp
rcl
and
xor
dec
inc
inc
fucomip
stos
repnz
sbb
andl
and
inc
pop
std
pop
xor
jl
pop
neg
jo
pop
outsl
or
push
ret
pop
jne
loopne
outsb
aam
int
sbb
arpl
sub
movsb
or
popa
fstl
mov
test
in
mov
sub
pop
pop
sbb
or
inc
mov
fstl
cld
xchg
mov
jmp
push
and
jecxz
dec
sahf
test
loope
pop
scas
or
das
scas
inc
dec
out
fwait
push
pop
in
lods
add
xor
and
hlt
call
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
sbbl
mov
decl
xor
add
mov
movzwl
and
mov
mov
mov
adcl
mov
xorl
mov
mov
movzwl
jmp
lret
iret
cmp
aam
leave
fldcw
lret
fcomps
js
jle
js
cmp
fcmovu
fistl
push
sub
mov
insb
insl
xor
xchg
dec
loop
leave
stc
inc
or
das
xchg
mov
int3
push
idivb
cwtl
jge
sbb
push
arpl
scas
push
jno
mov
mov
mov
push
stos
lds
xchg
call
xor
jnp
nop
mov
mov
inc
lahf
lock
jle
xlat
xchg
jmp
mov
call
dec
sub
pop
fisttps
nop
inc
rclb
cwtl
fsubrs
mov
xchg
inc
mov
or
mov
inc
sti
imul
xor
sub
and
mov
sbb
xchg
ret
jns
fistl
pop
sub
xor
mov
aad
sbb
pop
mov
push
ficoml
add
aaa
jno
or
cmp
mulb
pop
jno
jge
inc
jb
ret
jmp
ds
les
cmpsb
lds
nop
pushf
in
mov
and
mov
sbb
outsl
ja
pusha
hlt
push
outsl
inc
xchg
stc
idivl
jns
or
xor
fwait
pop
sub
xchg
ret
or
lret
sbb
stos
jge
icebp
and
add
imul
pusha
adc
into
mov
pop
jmp
jle
adc
pop
sbb
out
xorb
xchg
sub
ret
lea
dec
adc
push
out
mov
and
sbb
loop
sbb
add
clc
jl
ret
inc
push
push
or
jae
call
xchg
cmp
imulb
inc
push
xor
sbb
mov
cmp
push
lret
daa
cli
das
ja
xor
adcb
mov
jno
cli
push
jecxz
xor
test
scas
xor
aas
aas
mov
xchg
out
out
andps
orb
bound
pop
jb
jmp
out
lock
call
jmp
pop
xchg
mov
rorl
and
shlb
int
repz
out
enter
push
push
dec
loop
fucomp
test
aam
cmp
enter
scas
cmp
dec
pop
xchg
jae
scas
ret
dec
push
mov
popa
cli
js
in
subb
jecxz
sub
out
dec
cmp
jae
loope
notb
sarl
dec
add
inc
add
xor
add
and
mov
mov
addl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
mov
jmp
rcl
ret
fld
aam
push
shl
cmp
inc
push
xchg
js
jle
js
adc
mov
and
add
test
fwait
hlt
imul
xchg
mov
inc
fsts
cmp
adc
rcrb
pop
cmp
cmp
add
cwtl
xchg
xchg
clc
ds
addr16
sarl
mov
jmp
cmp
fstpl
mov
xchg
and
nop
stos
ficoms
mov
lods
mov
fisubs
xor
cmp
lcall
call
shll
icebp
push
push
cmp
pop
scas
daa
fadd
push
dec
jp
adc
lea
pop
mov
fisubrs
js
dec
sti
data16
js
sbb
sbb
add
push
das
dec
xlat
ja
jg
ret
pop
push
xlat
js
xor
lret
aas
dec
lods
scas
dec
dec
sti
mov
push
cmpb
fwait
enter
leave
inc
jae
pop
mov
sti
jnp
jmp
and
mov
inc
in
cmc
xor
stos
cwtl
das
jp
mov
jg
test
push
data16
or
xchg
inc
xchg
outsl
ud1
sar
pop
cmpsl
add
scas
arpl
cs
divl
or
popa
mov
mov
dec
int3
pop
mov
lock
nop
and
inc
jecxz
cmpl
cltd
mov
pop
rorb
xchg
add
out
jecxz
mov
imul
cmpl
and
mov
bound
mov
and
lods
pop
aaa
hlt
mov
add
cmc
jo
call
shlb
adc
out
xchg
cmpsb
fdiv
scas
addr16
sub
into
roll
sbb
and
jnp
movsb
lods
js
xchg
std
je
nop
movsb
psubq
out
stc
cmp
sbbl
add
sub
in
or
repnz
std
push
ljmp
push
mov
inc
xchg
lods
adc
mov
enter
clc
sahf
in
lds
mov
movsb
jno
xor
or
add
cmp
jo
mov
imul
cmc
test
decl
push
sbb
jb
imul
pop
mov
stc
aaa
scas
xor
outsl
push
jo
out
add
dec
push
popa
xchg
sarl
mov
testl
mov
xor
andl
add
cmp
jne
mov
mov
sbbl
xor
add
jmp
xlat
cmp
fxch
mov
scas
shrl
add
js
jle
js
xor
jecxz
adc
imul
imulb
int3
idivl
and
mov
outsb
or
sti
or
jg
arpl
lret
push
cs
addr16
aas
sbb
inc
js
ret
testl
mov
js
ds
sahf
scas
lock
cld
repnz
mov
add
aam
leave
es
cltd
pop
js
test
fnstenv
inc
cld
cmp
or
bound
cwtl
jb
out
mov
jbe
xchg
les
lds
push
ja
xchg
ret
pusha
mov
adc
mov
xchg
ljmp
std
xchg
pop
cmpsl
jge
cmp
inc
loop
inc
or
jns
mov
sarb
xor
lret
adc
cmpsl
add
ret
ret
inc
mov
mov
out
add
test
gs
inc
fldenv
adc
push
ficomps
jmp
mov
xchg
mov
pop
call
sbb
adc
dec
rolb
adc
sub
mov
das
loop
movsb
inc
dec
mov
push
int3
push
test
fmull
hlt
fisubs
sub
into
loope
jp
cmp
sahf
push
inc
mov
mov
pop
das
adc
jo
movsl
jb
xchg
jle
cwtl
pop
mov
mov
xor
arpl
lret
sbb
inc
lahf
scas
popf
repz
leave
in
sbb
imul
stos
loopne
xchg
rcl
or
add
adc
or
push
insl
insb
sub
movsl
inc
xorb
xchg
movsb
ljmp
div
jl
pop
xor
mov
pop
jno
push
in
sbb
mov
mov
mov
stos
mov
out
push
dec
push
les
testb
mov
sti
mov
insb
sbb
pop
jecxz
mov
scas
push
dec
pop
rorl
mov
pop
mov
and
xlat
scas
inc
in
mov
and
dec
pop
push
pop
hlt
idivb
adc
lahf
mov
jg
ljmp
stc
testl
loope
push
rcrb
jnp
in
test
sub
push
popa
loope
rclb
data16
testb
cmp
mov
mov
adc
xor
test
mov
fiadds
cmp
jne
mov
mov
xor
add
mov
jmp
aas
lret
ret
aad
flds
inc
test
cmc
add
jle
js
loop
cmp
mov
jne
in
and
mov
stos
push
cmp
jbe
rolb
cld
stos
sub
fcmovbe
shrb
pop
decl
imul
fldenv
jle
mov
aam
je
mov
popa
out
cmp
aad
ficompl
ljmpw
roll
ret
sub
xchg
xchg
xor
dec
mov
push
pop
pop
roll
inc
sub
mov
rcrb
fs
fwait
pop
mov
nop
inc
jmp
lahf
xor
lods
mov
add
arpl
dec
aam
popf
scas
pop
cmp
and
jle
pusha
aas
mov
mov
aas
es
cld
lret
add
fidivs
rorb
mov
repnz
dec
dec
push
pop
mov
xlat
inc
mov
sbb
dec
setp
stos
sbb
lods
in
movsl
jle
mov
mov
fs
rorl
cmp
mov
dec
adc
jo
jle
push
or
pop
jne
dec
mov
int
jae
dec
fdivrs
xchg
cwtl
pushf
in
popf
sbbb
mov
cmc
cmp
adc
mov
int3
cli
test
fxtract
xchg
fisttpll
mov
js
push
test
xchg
jb
adc
mov
inc
cmp
addb
pop
sub
rol
mov
insb
gs
xor
fidivrl
inc
mov
xchg
xor
xor
jne
nop
js
out
nop
xor
out
sub
pop
popf
rcr
push
sbb
loop
enter
sarb
rcll
loop
add
pop
xchg
xor
aaa
shrb
dec
cltd
or
or
lock
and
dec
sub
jp
repz
xchg
dec
add
sbb
in
sub
nop
outsb
pushf
jecxz
jp
sub
dec
xor
mov
test
push
xor
mov
cld
lret
sub
stos
fiadds
sbb
and
push
outsb
xor
mov
fiaddl
outsl
daa
pop
xorb
in
xlat
mov
fildl
insb
mov
add
rorb
pop
mov
les
mov
xchg
jno
loop
mov
in
ds
insl
mov
enter
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
jmp
ret
ror
into
fcmovnbe
out
dec
stos
ljmp
js
jle
js
mov
nop
lcall
iret
pusha
hlt
addr16
ja
pop
pop
call
idivb
pop
pop
fistl
inc
mov
int
push
mov
push
test
je
mov
dec
or
out
sbb
xlat
mov
cmp
jns
jns
xor
cmp
adc
push
shrb
jb
pop
or
pushf
in
stos
fcmove
fsts
outsb
sahf
rorl
ret
popf
mov
push
jne
adc
dec
adc
outsb
adc
cld
js
fs
cli
jne
jl
adc
leave
push
dec
sarb
bound
in
shlb
sti
push
xchg
iret
in
inc
div
ror
out
subb
pop
mov
ror
pop
mov
and
sub
xchg
push
cmpsl
mov
or
xchg
imul
fcmovne
mov
adcl
jnp
daa
ja
stc
shll
mov
mov
adc
cwtl
xor
inc
int3
inc
or
inc
mov
mov
jbe
mov
cmp
lods
sub
fimuls
cltd
dec
cwtl
cmp
sbb
inc
push
mov
inc
cs
xor
jp
inc
mov
mov
add
jns
test
mov
and
fidivs
or
addl
pop
ret
push
cmp
iret
sbb
rcrl
out
pop
mov
adc
imull
or
pop
or
fidivrs
cli
mov
shlb
and
pop
call
add
jge
and
add
pop
push
out
mov
pusha
mov
jg
icebp
mov
push
sub
jle
pushf
into
addl
outsl
push
enter
jne
ret
lret
mov
cmp
fistpll
mov
jae
pop
sub
mov
cmp
sub
and
cs
leave
inc
divb
jp
or
nop
adc
xor
stos
dec
sub
sbb
cmp
mov
neg
dec
mov
cltd
popf
mov
lock
fistpll
pop
addr16
xchg
icebp
dec
add
rcrb
jmp
sub
lods
adc
std
outsb
or
jae
mov
pop
sub
cwtl
std
das
sub
loope
jp
and
cli
repnz
ljmp
loopne
mov
imull
fwait
push
add
sub
jmp
ror
int
rcr
aad
bound
mov
adc
jle
js
add
jnp
sbb
mov
fistps
jle
jnp
popf
pop
out
xchg
shlb
fidivl
je
loop
in
push
add
loop
cmpsl
test
push
sbb
daa
jne
imul
test
lods
sbb
repz
push
cmp
notb
jb
jns
cwtl
mov
add
clc
push
jbe
je
and
js
ret
sahf
movsl
jne
mov
aaa
rorl
adc
popf
ror
cmpl
iret
mov
popf
ja
addr16
ret
mov
fldcw
xor
xor
pop
adc
push
push
scas
shrb
inc
fnsave
push
sbb
lret
fadd
push
mov
sahf
movsl
jle
cmpsb
arpl
aaa
loop
xor
fldlg2
imul
ret
fildll
movsl
or
xchg
dec
sbb
std
ret
mov
leave
pop
mov
push
adc
jge
inc
ds
mov
add
dec
inc
lahf
scas
lds
subb
insb
lcall
loopne
push
mov
cmp
adc
les
cmpsl
icebp
jnp
xchg
xchg
leave
pop
leave
xor
aam
xor
outsb
inc
in
lret
sahf
xor
jecxz
push
pop
sbb
mov
mov
xchg
xor
xchg
ss
or
pop
pop
sub
repnz
mov
dec
xor
dec
movsl
popf
lods
jns
bound
jbe
mov
pop
pusha
push
fninit
pop
lds
shl
fadds
iret
mov
leave
push
cwtl
adc
mov
adc
xor
fwait
and
sub
stos
data16
decb
icebp
pop
cmpsb
push
lods
inc
arpl
pop
pop
add
sti
or
and
imul
fsts
jle
push
shll
mov
xor
push
mov
pop
cmp
fildll
ds
ja
push
mov
js
ss
sbb
push
xchg
jno
out
ja
inc
push
xchg
jae
lcall
fidivrl
mov
in
jno
mov
mov
push
fs
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
jmp
leave
vpsubusw
leave
repnz
cld
dec
test
mov
pop
js
jle
js
shrl
mov
xorb
pop
enter
aas
jmp
imul
movsl
and
jbe
jno
int
andl
xchg
jecxz
rcll
jne
outsb
mov
add
mov
scas
int
inc
dec
pop
xchg
int
es
dec
insl
fdiv
pop
jle
sub
adc
lret
scas
xchg
imul
push
nop
scas
test
ss
in
cs
mov
incb
aas
ds
dec
lock
scas
insl
dec
xor
sbb
in
inc
adc
incl
and
movsl
mov
xchg
pushl
test
sbb
shrb
ja
mov
ret
mov
jge
cmp
jbe
stos
in
out
imul
xchg
push
and
leave
stc
fcmove
bound
fs
push
frstor
inc
and
pop
cmpsl
or
add
mov
std
out
mov
cld
push
push
ds
sbbl
push
imulb
and
shll
sbb
lret
fidivrl
sub
add
adc
imulb
pop
inc
stos
shrl
jmp
stos
ja
sbb
sub
cmp
mov
mov
or
fdiv
aad
lods
pop
add
mov
xchg
lret
cld
stc
cmp
cwtl
dec
test
mov
jecxz
into
testb
cli
in
rorb
cmpsb
and
dec
sub
mov
test
movsb
hlt
fcmovbe
mov
mov
out
inc
arpl
fwait
ret
cld
jns
mov
sbb
fdivr
lahf
dec
rol
pop
les
lret
xor
jo
sub
iret
adc
into
movsb
es
insb
leave
mov
add
or
mov
mov
lcall
mov
out
push
xchg
sub
mov
mov
dec
lret
jge
push
in
loopw
call
dec
notl
cmc
and
arpl
out
add
out
pop
cs
mov
fiaddl
push
xchg
dec
inc
mov
and
jecxz
or
ret
enter
xor
sbb
repz
in
or
push
push
push
lret
sbbl
in
mov
jecxz
inc
or
add
add
int3
ror
ror
test
xchg
push
je
adc
js
jle
js
insb
xchg
jl
sbb
fnstenv
push
je
fcomi
out
add
daa
cmp
dec
mov
loop
insl
pop
mov
push
aad
adc
mov
jle
add
es
out
int3
ret
pop
adc
dec
pop
adc
jae
jge
inc
into
and
ret
cli
cs
ljmp
int
xchg
jb
or
shr
ret
daa
inc
jo
xchg
fbld
fdivs
mov
jle
cmp
orl
push
jo
jle
xor
movsl
fiadds
and
mov
xor
mov
mov
pop
mov
pusha
in
adc
adcl
sbb
push
pusha
mull
loop
loope,pn
jae
leave
pop
mov
sub
jbe
cld
xor
or
es
dec
pcmpgtw
fisubs
inc
sti
lods
subb
push
xchg
xchg
pushf
mov
mov
lahf
sarl
sbb
pop
jmp
add
iret
sbb
lock
aad
cli
push
jo
xchg
movsl
mov
sub
lds
pushf
int
lock
sbbb
sar
sub
es
in
stos
mov
xor
icebp
dec
fidivs
das
xchg
sbb
rcrw
movsl
cmp
arpl
outsb
add
cld
cld
hlt
pop
inc
nop
iret
or
add
push
mov
cmp
adcl
or
fisubrl
insl
bound
inc
lds
xchg
cmp
jmp
rolb
mov
popa
push
fdivs
in
mov
or
in
fistps
pop
insl
adc
addr16
lcall
cmpsl
jns
sub
xchg
adc
std
movsb
add
and
sbb
cmpb
xor
xchg
iret
pop
pushf
insl
pop
push
add
pop
mov
popf
fs
adcl
mov
push
dec
xchg
jge
insb
jp
mov
insl
xor
lret
mov
xor
pop
pop
enter
aad
inc
dec
and
mov
rcr
mov
loope
jp
bound
jno
mov
push
pop
out
mov
test
insl
test
sahf
push
cmp
mov
xlat
mov
xor
lret
jb
aam
sbb
mov
inc
sub
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
cmp
cmp
rcr
fidivl
jp
lahf
adc
js
jle
js
xor
cmp
test
ss
mov
mov
les
push
mov
stos
in
clc
push
scas
js
leave
mov
push
jmp
xchg
mov
fmulp
xchg
into
jl
xchg
xor
jbe
out
jl
fidivrl
insl
cmp
lahf
adc
push
adc
and
and
aam
xorb
cmpsb
rcr
cmpsb
test
test
lcall
lods
pop
sub
imul
cmp
inc
cmp
cmp
test
jns
jg
das
jnp
adc
pop
jmp
adc
fst
lds
cltd
inc
or
divl
mov
add
dec
push
mov
mov
test
xchg
mov
sub
les
jg
stos
or
xchg
js
test
jb
xchg
ficoml
pop
ja
jne
loopne
pop
shl
scas
outsb
push
stos
pop
mov
lea
pop
inc
dec
push
or
push
xchg
ss
stos
ja
dec
jp
ret
pop
int
xor
mov
mov
pusha
test
leave
movsb
add
sbb
flds
stc
gs
jb
pop
and
scas
xor
xor
aam
negl
test
fdivrs
cmp
push
jno
push
xchg
sbb
xchg
repz
cmp
mov
stos
je
inc
stc
xor
imul
pop
movsb
cmp
or
cmc
repz
or
or
or
lret
xchg
mov
xchg
shrb
sbb
dec
sub
call
addr16
sbb
or
fcomps
push
mov
outsb
addl
pop
pop
insl
pop
push
fildll
test
push
push
xor
xchg
add
rorl
popa
push
push
fistpl
int
mov
fdivs
out
mov
xor
adc
dec
sti
sbb
outsl
je
fistpl
mov
adc
xchg
sub
test
fidivs
mov
xchg
loopne
and
imul
inc
xor
aad
and
sbbl
notb
add
movsb
lret
fidivrl
sub
dec
sti
shl
mov
mov
push
cmpsl
das
out
or
lcall
push
cmpsl
lock
jnp
push
fstpt
lea
push
fdivs
lds
movb
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
jmp
xlat
aas
mov
fwait
clc
movb
sbb
jle
js
inc
ljmp
int3
xchg
test
in
loopne
and
icebp
cld
insb
sub
lret
sub
lods
jo
test
shrb
xchg
lea
into
dec
out
ret
stos
and
into
movsl
pmaxub
add
arpl
into
mov
ret
adc
out
mov
cmpsl
cmp
jbe
in
aas
jne
lcall
sarb
pusha
mov
ret
incb
bound
loope
cli
jbe
pop
movl
test
push
fcoml
stos
mov
cmp
cmp
cs
add
cltd
mov
arpl
incl
mov
push
mov
cs
lahf
pop
mov
repnz
cmp
jge
mov
and
jmp
xchg
divl
jmp
lea
ret
lahf
out
cmp
jbe
hlt
jnp
fiaddl
fistpll
mov
and
adc
iret
outsl
sub
mov
fcoms
jno
rcrl
pop
insb
add
in
pop
scas
pop
push
pmulhw
jge
mov
mov
sbb
mov
and
out
xchg
sub
pop
add
mov
mov
jle
sbb
adc
into
push
lock
and
insb
sbb
and
sub
in
in
ja
mov
sbb
clc
cmp
jne
mov
and
add
sbb
and
leave
cltd
xorl
repz
outsb
xor
fldl
int3
xchg
insb
lods
jle
lcall
mov
mov
fldcw
jle
pop
scas
xor
inc
outsb
inc
dec
mov
loope
sahf
sub
adc
push
push
pushf
inc
sbb
fwait
cmp
push
mov
pop
insl
ss
cmp
sub
cmp
scas
jae
add
out
push
xchg
imul
pop
lock
push
jno
outsb
or
or
decb
cmp
popa
inc
pop
jmp
andb
div
fmull
wbinvd
lret
inc
dec
pushf
or
push
lret
popa
aaa
mov
cmp
minps
fcoml
push
aas
mov
inc
mov
cmp
mov
jmp
into
rol
ror
mov
lods
cmpsb
call
js
sbb
mov
cmp
xor
popf
add
stos
sub
jbe
js
ret
sti
xchg
lret
ret
mov
inc
jbe
jp
sub
adc
std
or
fxch
cmp
sub
out
mov
imul
fdivr
xor
cmp
push
lds
sti
pop
and
pop
out
inc
test
adc
pop
jne
ror
pop
xchg
push
jnp
aas
je
and
hlt
adc
add
jns
jge
icebp
icebp
push
sbb
xor
fldl
pop
clc
pop
inc
or
sbb
iret
jae
sbb
mov
cmp
lods
jle
adc
fadds
faddl
movsl
into
jmp
sti
bound
sbb
push
ja
arpl
stos
or
popa
add
add
mulb
shrl
movsb
rcrb
jno
mov
adc
adc
daa
into
in
adcb
repz
pop
stos
adc
loope
das
bound
dec
ficomps
adc
inc
js
mov
mov
sub
popa
inc
pop
sub
les
xor
xchg
xchg
adc
dec
mov
repnz
int
imul
orl
hlt
inc
enter
push
pop
daa
pusha
es
jg
mov
daa
mov
push
xchg
lods
in
dec
mov
pop
in
sub
daa
vsqrtss
fdivl
and
sbb
mov
jno
sbb
add
mov
mov
out
pop
aaa
mov
xchg
nop
or
outsb
xor
dec
es
jbe
jno
mov
push
ja
and
cld
into
faddp
jnp
or
or
jbe
sub
out
push
aaa
adc
test
sahf
hlt
jp
add
call
mov
rcrl
jb
pop
sub
xorl
movsb
mov
cmpsl
lods
jns
imul
and
pop
lret
push
mov
stos
rcrb
push
inc
push
dec
addr16
lret
xchg
iret
std
enter
insl
pop
out
aad
out
out
mov
push
ja
fwait
aaa
and
push
and
daa
ljmp
adc
pop
rolb
stos
out
lea
lret
push
pusha
mov
xor
cmp
je
jmp
leave
rol
rcr
rcr
ss
fwait
aad
frstor
jle
js
add
cmpsb
mov
cmp
jg
rcrl
loopne,pn
mov
push
jns
insb
cmp
lahf
sub
imul
popf
fistl
push
je
add
push
insb
daa
jns
test
mov
sbb
cmc
pushf
cmp
test
mov
repnz
orl
adc
mov
test
add
call
jmp
xorb
loopne
mov
cmc
shrb
mov
jo
inc
sub
in
jle
inc
sti
je
in
mov
or
xchg
stos
loopne
stos
filds
lahf
fmuls
or
mov
lock
xor
mov
sub
mov
cmp
pop
in
or
ds
sub
fnstsw
xchg
dec
hlt
out
dec
xchg
cld
movsl
cmp
inc
orb
js
inc
aaa
pusha
or
sbb
popa
mov
nop
and
xlat
mov
push
test
sarb
and
out
sub
pop
mov
mov
inc
sbb
int3
or
dec
out
and
pop
into
and
sub
shlb
inc
fwait
and
in
xchg
popf
in
je
mov
aam
pop
dec
int
das
fnstenv
pop
jns
ficomps
jb
pop
inc
adc
sahf
jl
dec
jne
insb
add
add
inc
jecxz
add
stc
pop
sub
leave
mov
cmpsb
loopne
popf
fcomp
popa
icebp
je
outsb
mov
add
int
shrb
jecxz
inc
jo
jecxz
shll
fdivrs
add
and
sub
cvtdq2ps
xchg
or
sub
loopne
sbb
adcb
fs
xor
sbb
lret
insb
popa
sahf
adc
loope
push
lcall
nop
clc
xchg
enter
out
mov
xor
iret
ja
add
pop
popf
adc
scas
subps
inc
test
aas
pop
adc
ja
adc
pushf
cltd
sti
pop
sub
cmp
cmp
daa
push
or
mov
cmp
xor
xor
cmp
adc
xor
mov
ja
xchg
pop
push
cmc
pop
push
fcompl
sbb
fcmovne
rorl
cmp
push
test
mov
cmp
push
push
mov
sbbl
sub
mov
mov
xor
add
mov
jmp
jmp
ds
lret
fldenv
xchg
and
sbb
js
jle
js
xor
or
pop
and
in
pop
enter
push
mull
data16
mov
int
out
lret
cs
sbb
sbb
insb
movsb
pop
inc
add
loop
data16
pusha
insl
iret
or
inc
test
pop
int3
hlt
pushf
cmp
xor
mov
ret
hlt
xchg
and
jle
lahf
push
push
fcomps
mov
in
inc
shll
push
mov
fst
mov
js
push
fildll
imul
inc
dec
push
add
lret
cmp
pop
insb
gs
adc
xchg
push
push
popa
mov
adc
cmp
cmpl
push
sbb
sub
xorl
mov
outsl
pop
push
xchg
iret
push
repnz
sbb
inc
fstpl
iret
push
pop
andb
inc
clc
fsubrs
out
rolb
cmp
lods
shlb
cltd
adc
hlt
adc
imul
pop
mov
add
xor
pop
add
pop
inc
or
jg
test
nop
xorb
sub
aam
and
sbbb
mov
aam
mov
inc
in
les
rep
call
or
out
mov
mov
loope
mov
jmp
arpl
cmpsl
dec
adc
inc
xor
imul
jp
repnz
fstpl
into
sub
cli
jno
sub
mov
das
dec
mov
pop
jge
and
mov
sub
pop
add
std
dec
inc
lcall
add
xchg
jbe
in
jl
test
push
inc
adc
push
adc
jo
in
dec
fwait
dec
int
out
xchg
mov
push
mov
adc
mov
cmp
inc
or
aam
es
aaa
popa
or
pushl
mov
inc
or
test
mulb
push
lods
mov
int
adc
lea
sbb
mov
sub
xchg
jo
cmp
inc
popa
add
int3
pop
cmpsl
sub
out
aad
mov
push
inc
je
aas
sbb
fwait
xor
push
mov
scas
add
pop
std
lds
push
lahf
jnp
out
pop
mov
test
addr16
jbe
and
fdivrs
sub
xchg
insb
xorl
jmp
mov
mov
mov
jmp
aas
leave
enter
fxch
mov
xchg
jne
sahf
es
jle
js
push
cmpsb
or
sbb
pop
cmp
cltd
mov
test
sub
scas
out
xor
rcrl
mov
push
outsl
sub
jp
xor
movsl
adc
mov
cmp
cmpsb
mov
int3
mov
adc
daa
xor
sub
xor
xchg
lea
out
clc
call
push
pop
add
mov
cltd
jmp
lcall
int
jno
cmp
mov
sbb
cld
add
ljmp
mov
or
movsb
repnz
fnstenv
in
in
decl
je
andl
loope
dec
test
sub
inc
mov
in
fmuls
add
push
out
fnstcw
mov
loop
jge
jbe
mov
inc
xchg
pop
fnstsw
cltd
ret
sti
aas
fiaddl
fcomps
orb
mov
lock
mov
sbb
repnz
enter
mov
nop
scas
push
out
mov
jl
inc
mov
xchg
addl
insb
xchg
sbb
out
or
aas
sub
sub
xchg
add
pop
xchg
testl
test
mov
pop
fstl
flds
aad
jns
push
push
mov
or
pop
adc
xor
push
mov
std
cmp
and
ljmp
cmp
orb
sub
jne
pushf
xchg
and
add
mov
fistl
adc
inc
pop
outsb
add
scas
and
outsl
mov
cmpsb
or
in
leave
aas
cmp
xchg
sti
cmp
out
jmp
loope
jns
es
dec
inc
loop
xchg
jl
mov
daa
idivb
mov
cmp
cmp
inc
stos
sub
xchg
fdivr
sub
pop
call
adc
nop
les
dec
xor
aas
pop
stc
fidivs
pop
cmp
push
int
outsb
or
sti
and
stos
lret
mov
push
leave
mov
lret
pop
lods
xor
inc
je
stos
mov
aad
xor
pop
movsb
mov
xchg
push
mov
cli
inc
inc
shufps
stos
sbb
and
pop
data16
push
mov
jmp
cltd
adc
in
push
scas
dec
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
mov
add
push
xor
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
decl
movl
mov
not
jmp
rol
lret
leave
lret
leave
lds
dec
inc
insb
xor
dec
sbb
js
dec
jle
js
insb
mov
cld
mov
cmp
idiv
or
stos
cmp
rcl
xchg
test
add
push
adc
dec
and
in
add
xchg
lea
pop
jb
lret
in
popf
sub
dec
pushf
push
test
js
xor
stos
mov
iret
mov
in
xchg
fld1
mov
xor
cwtl
stc
xor
cmpsb
jge
xchg
fcmovu
out
mov
mov
push
jno
jecxz
sub
aaa
cmp
gs
stos
pop
adc
imul
cltd
lods
jns
and
sarb
stc
loope
lock
adc
push
mov
fdivrs
stos
imul
or
sub
inc
and
pop
jp
jp
fstpl
mov
dec
js
inc
sub
cmpb
movsb
cmp
adc
imul
imul
xchg
lret
fsubl
xchg
adc
xchg
pop
xchg
icebp
mov
lds
pusha
insb
adc
mov
or
gs
xor
adc
push
sub
cmpsl
cltd
add
int3
icebp
ds
lods
lock
lock
repnz
sbb
lahf
adc
out
dec
int
in
jle
icebp
shll
xchg
pop
outsl
ja
push
xlat
ljmp
inc
mov
popa
into
dec
push
push
mov
movsb
mov
cs
pop
fadd
gs
shll
jge
pop
mov
cltd
fdivs
call
jno
jl
subb
mov
lods
mov
pop
mov
jns
inc
adc
daa
sub
pop
mov
jmp
scas
xchg
dec
push
subb
or
nop
test
aas
mov
fucomip
jnp
icebp
mov
movsl
sbb
xor
outsl
orl
lods
xchg
shlb
pop
jne
cmp
fbstp
sub
sbb
xor
and
movq
inc
adc
arpl
mov
pop
sub
outsb
dec
in
jb
jnp
repz
push
push
dec
pusha
cmp
push
je
mov
jbe
or
movsb
mov
or
sbb
xor
pop
jecxz
loope
lods
mov
inc
push
mov
add
cmpsl
mov
in
clc
enter
pop
fldenv
xchg
sub
mov
xchg
repz
add
iret
incl
ljmp
rorb
and
cmp
insl
sti
mov
jo
jg
out
dec
insb
inc
xchg
sub
add
dec
xchg
jecxz
fmuls
in
jnp
adc
sbb
mov
out
or
test
cmpsb
fadds
popa
pop
stos
fcmovbe
pop
imul
add
add
add
or
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
push
push
push
call
jmp
xor
jmp
rol
int3
pop
test
add
jno
js
dec
jle
js
and
dec
sub
mov
push
jno
adc
adc
dec
xchg
adc
cmp
xor
bound
cmp
popa
int3
insl
mov
adcl
hlt
push
pop
fstl
pop
or
dec
xchg
jno
dec
int3
dec
inc
js
ret
adc
fimull
mov
xor
stos
adc
dec
into
or
push
pusha
es
out
pop
and
out
mov
cmpsl
lods
jmp
shlb
test
mov
sarb
fnstcw
mov
popa
lods
xor
pop
stos
add
lret
test
stos
repz
ret
mov
push
and
cmp
sbb
xchg
jns
dec
out
in
jmp
push
or
pop
dec
dec
aad
pop
incl
nop
push
loop
xorl
cmc
push
push
rorl
call
fdivrl
sbbl
dec
stc
dec
dec
sbb
xchg
push
and
addr16
lret
jns
dec
jmp
sub
inc
mov
les
icebp
add
sub
jmp
insl
jnp
and
mov
aad
xor
aas
lds
jecxz
pusha
xor
scas
daa
and
xor
dec
sub
clc
stos
sub
jge
js
jns
fwait
stc
lahf
idivb
sub
cmp
mov
cmp
inc
push
int
frstor
pop
scas
pop
xchg
int3
lds
inc
sub
cmpsl
int3
sub
cmpsl
jno
test
xor
insb
scas
jo
dec
leave
pop
in
fstp
jg
dec
sub
jg
lods
push
mov
and
dec
mov
rcr
mov
cltd
push
call
fistpl
fnstcw
ss
mov
adcl
mov
cmp
jmp
int
jb
outsl
pop
arpl
add
leave
sar
aam
repz
fistl
hlt
shrl
outsl
push
test
jns
data16
inc
stos
add
pop
pushf
and
out
cld
jae
dec
add
clc
movsl
pop
pop
movsb
enter
xchg
bnd
insl
push
aas
ret
cmp
cs
std
xchg
xor
lret
test
push
es
xchg
mov
xor
gs
xor
bound
rclb
pop
sahf
sti
sbb
addr16
stos
lret
fs
mov
mov
insb
sub
mov
imul
outsl
je
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
jmp
enter
aam
mov
int3
push
dec
and
addl
js
ret
xor
imul
sub
add
ret
sbb
and
cmpl
or
mov
mov
inc
inc
sahf
outsb
popa
add
push
dec
fcoms
das
daa
aas
mov
inc
pop
das
cmpb
dec
mov
mov
das
pusha
outsb
in
dec
cmp
dec
scas
lods
add
out
shl
hlt
cli
shr
mov
mov
into
jne
or
mov
pop
imul
jg
push
mov
lods
mov
cmp
in
lret
dec
push
or
jl
insl
adc
inc
cmp
sub
repnz
ret
cmp
mov
hlt
mov
in
aaa
clc
scas
mov
sub
inc
push
ja
in
lea
enter
or
fimuls
ds
sbbb
adc
xchg
mov
iret
inc
rcrl
or
mov
orl
sub
and
push
sbb
ror
jmp
repz
rclb
cmp
sahf
mov
xchg
jbe
xor
jp
and
jae
inc
pop
aam
pop
stc
xchg
xlat
jmp
rorl
jecxz
pop
pop
fdivs
jb
mov
mov
push
es
imul
jns
mov
clc
mov
lcall
mov
test
add
jno
ret
mov
out
sub
or
popf
jno
ljmp
push
mov
dec
and
pop
mov
mov
jmp
adc
xchg
add
xchg
push
out
sbb
in
into
push
lret
mov
push
cmc
in
push
mov
movsl
jbe
push
pushf
push
mov
push
adc
ret
repnz
sub
bound
movsl
or
mov
push
test
mov
std
clc
sub
pop
stc
adc
xchg
push
inc
mov
mov
loope
pop
leave
ljmp
jb
scas
lahf
add
pop
jns
or
pop
ja
push
xchg
jg
add
cld
cmp
xchg
push
mov
inc
mov
xchg
sub
loop
inc
push
mov
pop
mov
xor
cs
jecxz
aam
lcall
mov
cltd
repnz
gs
mov
jp
jbe
adc
adc
dec
jb
and
fs
out
fistps
xchg
test
cmpb
inc
xchg
push
jne
ret
movsl
sub
test
mov
leave
xchg
inc
and
add
lds
repz
sub
inc
or
jge
add
cmp
je
mov
mov
xor
jmp
rcl
leave
aad
xor
imul
js
dec
jle
js
push
jge
pop
negb
js
dec
mov
add
cli
xor
enter
xor
rcr
fsubp
add
int
das
inc
adc
out
fisubs
dec
repnz
inc
aam
or
inc
bound
clc
xor
hlt
pop
stos
push
addb
iret
inc
cmp
and
popf
mov
dec
popl
dec
mov
jmp
mov
push
cmp
xchg
sbb
dec
ret
sbb
and
push
or
add
icebp
jnp
push
testl
xor
sbbl
aam
mov
push
imul
mov
jl
loope
jb
and
popa
mov
ljmp
repz
pop
pop
gs
in
aam
ss
dec
and
pop
cmp
leave
movsl
pop
sub
outsb
push
in
xlat
and
enter
or
xchg
inc
fcmovb
das
hlt
enter
pop
les
aas
jl
imul
sub
mov
pop
and
jns
andb
cld
cs
test
imul
out
fcomps
out
pusha
aam
cmp
push
sbb
mov
popf
bound
lcall
cmpsl
push
jmp
movsl
or
nop
mov
roll
fucomi
xlat
loopne
dec
inc
inc
int
jg
jle
push
fstpl
cmp
into
aam
addr16
lods
into
addr16
bound
fnsave
dec
inc
sub
add
iret
pop
call
add
dec
add
aam
dec
or
pop
and
xchg
pushf
cmp
push
es
mov
pop
xchg
in
clc
jno
mov
cmp
fcmovb
cmp
mov
mov
and
and
out
inc
push
loop
and
inc
adc
xor
dec
jge
mov
or
jns
and
jbe
repz
push
dec
in
xor
pop
loope
xchg
loope
xchg
outsb
lods
or
scas
xchg
xlat
rolb
and
push
mov
leave
jmp
cmp
aaa
xorb
and
cld
push
repnz
cs
clc
xchg
insl
and
fists
cs
ret
sbb
inc
repz
inc
and
js
shl
jmp
pop
out
movsb
jle
sbb
pop
jmp
sarl
loop
mov
notl
incl
je
jmp
pusha
xor
jge
mov
pop
insb
jge
mov
sahf
and
aam
pop
add
sbbb
jae
adc
loope
push
clc
add
xor
add
cmp
ja
push
jmp
mov
jmp
aas
rol
int3
aad
dec
sub
scas
call
jle
js
jno
jno
jl
out
pop
mov
mov
inc
mov
call
repz
cmp
adc
in
mov
repz
outsl
jg
into
and
inc
test
sbb
jmp
ja
xor
clc
lret
mov
lock
mov
lahf
fstl
mov
test
adcb
movsb
icebp
icebp
adc
popf
jns
movsb
lret
sbb
cltd
out
andb
inc
icebp
mov
cmp
mov
hlt
add
clc
gs
mov
in
xchg
adc
push
mov
sub
stos
inc
mov
inc
outsb
mov
push
jo
and
aaa
scas
push
je
sub
lods
ds
adc
scas
sbbl
outsl
dec
leave
and
cmp
in
sub
lcall
add
xor
stc
or
sub
sarl
and
mov
lret
dec
inc
shrl
int
repz
mov
dec
nop
es
inc
and
lods
mov
jecxz
cwtl
dec
and
test
das
cmc
sbb
xor
dec
scas
mov
add
stos
fcoml
xlat
int3
pop
push
add
notb
mov
imul
or
ret
pop
enter
out
and
jmp
out
jb
stos
cmpps
xchg
push
sub
push
cs
andb
dec
push
lock
pop
fdivs
xor
cmp
cwtl
cmp
sbb
loop
dec
mov
rcl
jne
jns
jecxz
add
mov
faddl
test
imul
and
popa
push
xchg
xchg
cmp
bound
loop
inc
jecxz
pop
loop
push
icebp
mov
jg
fwait
lods
mov
sbb
or
int
fnstsw
daa
mov
or
and
mov
out
and
in
sti
push
mov
fisubrl
push
lods
xor
pop
imul
rcrl
jp
dec
adc
inc
pop
cmpl
movb
fwait
jp
stos
xchg
mov
in
lret
sbb
rcr
fcomps
ja
adc
dec
push
scas
stc
jg
mov
loopne
add
dec
jge
push
mov
cmp
adc
dec
call
lret
xor
call
fadd
ret
mov
push
arpl
inc
sbb
cmc
fcompl
push
adc
xchg
ffreep
enter
ds
orb
mov
cs
sbb
pop
mov
imul
aas
pop
pushf
push
mov
jmp
int
rol
ror
aad
inc
jecxz
fcompl
xor
js
mov
dec
out
push
mov
js
rcr
push
int3
int3
aas
jmp
outsb
outsb
test
push
sbb
add
ret
cwtl
jne
xchg
leave
pusha
arpl
int
icebp
pop
cmp
enter
in
stos
insb
inc
popa
aam
dec
jno
jne
mov
lret
xor
sbb
jae
inc
out
xor
cmp
icebp
inc
test
mov
push
call
add
xchg
cltd
in
and
rcll
and
mov
in
mov
pop
push
int3
bound
lret
mov
jecxz
std
jge
dec
jle
jg
and
hlt
xor
addr16
call
push
cmp
xlat
fcmovnu
ret
scas
scas
lods
cmp
lods
aad
jno
lret
xor
jnp
dec
xchg
enter
push
jecxz
pop
or
jle
mov
sub
cmp
aad
xor
test
jb
cmpsl
or
sbb
adc
sub
iret
xchg
sub
mov
shrl
orb
add
pushf
and
cmp
inc
mov
or
push
cmp
lcall
das
xchg
ss
dec
dec
cmp
iret
rcrb
std
dec
test
roll
lock
fs
sub
jp
test
jp
xchg
dec
and
aas
jp
fiadds
into
aad
push
negl
and
jo
push
jmp
bound
jg
push
mov
sbb
xor
nopl
sbbb
in
pop
mov
cld
mov
lret
jl
jmp
xchg
sbb
out
push
jb
ret
push
cltd
xchg
push
aam
mov
mov
data16
inc
add
mov
stc
add
pop
mov
mov
mov
and
jmp
stos
dec
xor
pop
and
dec
movsl
std
in
lods
punpcklwd
mov
insb
insb
sbbl
push
dec
dec
test
mov
lock
adc
inc
jg
into
fdivrl
aaa
sahf
add
lcall
and
add
movsb
jl
jb
out
std
ds
imul
mov
xor
sti
xor
outsb
int3
shlb
lods
mov
add
ret
testb
inc
cmp
pop
and
sbb
mov
dec
out
in
cwtl
push
aam
sarb
dec
pop
xor
enter
bound
ret
dec
xchg
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
jmp
rol
lret
ret
shrl
insb
push
lods
nop
xlat
adc
js
dec
jle
js
daa
mov
dec
xchg
leave
data16
inc
movsl
shll
cmp
in
and
cli
sbb
sbb
add
sti
xor
fidivrs
lret
aam
subl
sub
loopne
fmuls
orb
xchg
adc
ficoms
mov
cltd
xchg
pop
lret
lahf
jg
fdivp
cmp
call
mov
adc
test
xor
pop
sbb
xchg
mov
jecxz
out
into
addr16
fisttpl
std
repz
test
sub
dec
aas
pop
add
xchg
repz
js
pop
je
out
ja
enter
mov
mov
cmp
push
jae
pop
jae
insl
ficompl
outsb
test
mov
rolb
jecxz,pt
xchg
fidivrs
orb
fs
add
ja
repnz
or
sarl
cmp
fs
test
mov
mov
mov
pusha
sbb
sub
mov
xchg
adc
jo
sti
mov
pop
hlt
in
cmpsb
mov
mov
inc
xchg
pusha
inc
es
sarb
add
lods
pop
xor
sub
xchg
fs
insb
mov
mov
test
adc
jne
sub
mov
fistps
mov
scas
in
ljmp
imul
cmp
adc
xchg
ret
mov
clc
insb
pop
scas
imul
mov
aaa
mov
jbe
mov
jae
pop
add
mulb
xchg
jl
lods
add
mov
aad
push
inc
cmp
adc
das
dec
shlb
je
push
lret
sbb
jp
rcll
out
aas
mov
sbb
jg
roll
jle
push
adc
inc
pop
xor
aaa
scas
sub
sub
sub
dec
lods
clc
xchg
xor
daa
jne
adc
imul
mov
shrb
scas
sbb
jge
push
data16
in
xchg
clc
stos
cmp
cmp
fbld
test
cmp
jl
mov
jo
subl
pop
leave
test
lcall
aaa
ret
cmc
stc
lds
nop
jno
and
aas
inc
xchg
movl
dec
in
movsb
aam
shl
push
xlat
sbb
gs
mov
sub
add
mov
test
jo
push
cmpsl
jg
jbe
cmp
fucomi
and
add
add
addr16
cmp
or
mov
jb
sub
jnp
push
mov
add
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
jmp
cmp
fnstcw
jecxz
xor
cmp
dec
jle
js
and
repz
adc
test
dec
clc
stos
clc
dec
xchg
push
push
in
xor
mov
addr16
mov
iret
call
adc
mov
mov
pop
pop
ds
fwait
cltd
pop
jle
jmp
call
call
jle
push
loop
pop
insb
or
mov
aaa
ficomps
loope
jb
pop
mov
dec
in
xor
pusha
movsb
adc
lods
jle
lds
insl
daa
shrl
rorb
cmc
dec
push
ja
jae
mov
adcl
add
hlt
add
lea
or
imul
bound
loopne
inc
repz
fwait
int
repz
dec
add
scas
mov
jecxz
daa
sub
lock
inc
mov
dec
inc
adc
mov
push
mov
lods
int3
cmp
es
xor
cmp
xor
test
push
mov
js
clc
in
sub
imul
jb
in
mull
sbb
ret
pop
dec
adc
aad
cld
jae
lds
xchg
das
icebp
adc
xchg
dec
mov
push
sub
xchg
xor
fldl
ljmp
hlt
add
sbb
mov
jle
xor
mov
shll
dec
adcb
xchg
sub
sub
mov
roll
out
out
insl
mov
fmul
ret
mov
loopne
je
add
push
and
flds
mov
push
pop
cmp
mov
out
cmc
mov
jb
rcrb
mov
dec
neg
push
fstpl
stc
adc
jnp
fistpll
and
aam
popa
mov
jge
pop
jecxz
in
dec
push
mov
testb
pop
das
hlt
sbb
inc
pop
or
jle
out
pop
addr16
cmp
dec
shl
loop
adc
test
loopne
adc
insb
sub
jg
out
dec
test
movzbl
mov
xor
or
mov
scas
out
insb
fldcw
ja
es
imul
dec
lret
inc
dec
jns
stos
mov
mov
ljmp
mov
pop
xchg
xor
inc
clc
dec
cmp
and
mov
xchg
adc
test
mov
rolb
xor
aam
out
aaa
jge
mov
cmpsb
shlb
shlb
cmp
xor
xlat
fisubrl
mov
pop
subl
je
pop
jmp
and
push
imul
mov
xchg
pop
rcll
mov
xor
jmp
rol
ror
leave
rcr
aaa
mov
dec
jp
cmp
js
mov
dec
andb
mov
or
sahf
cmpsl
xchg
rorb
xchg
xlat
jl
mov
push
cmp
sub
push
mov
mov
icebp
sbb
out
push
dec
aad
daa
push
push
sbb
das
pop
gs
push
sbb
dec
sbb
mov
push
cmpsb
ja
inc
iret
test
xor
aad
push
mov
in
jp
test
jle
out
pop
or
sbb
shlb
pop
jne
jbe
jle
mov
lret
push
push
jmp
cmp
jb
and
add
shrl
lock
sub
pushl
loope
aaa
sbb
sub
mov
push
and
mov
push
lret
adc
or
mov
pusha
out
rcll
jmp
xor
stos
push
inc
fmull
cmpsl
push
nop
stos
in
pop
jnp
std
jae
adc
cs
cmp
jmp
xor
cmc
jnp
jb
or
sub
jb
mov
das
push
mov
enter
mov
sbb
divb
imull
pop
sti
ja
insl
nop
jp
int
jp
mov
ret
push
leave
push
fwait
scas
push
nop
aam
lret
sub
dec
mov
and
stos
xchg
xor
pusha
fidivrl
pop
cmp
arpl
mov
sbb
test
jmp
push
pushl
xchg
clc
xchg
mov
aam
popf
adc
addr16
into
pushf
push
add
inc
add
push
les
test
daa
pmaxub
jo
fisubl
inc
sti
ljmp
and
and
cmp
daa
stos
mov
shll
scas
into
loop
mov
bnd
mov
cltd
pop
inc
mov
pop
mov
sti
add
js
mov
lods
inc
and
loopne
xchg
push
insl
lock
or
insl
sub
imul
cld
jle
mov
inc
inc
dec
int
cmp
ss
adc
sbb
inc
dec
pop
fisubrl
push
jno
fdivrl
jns
shll
orl
mov
cmpsl
push
jne
addb
mov
push
xchg
cmp
mov
fcom
andl
mov
scas
jo
cwtl
and
pusha
push
cmp
cmpsb
mov
fildll
jbe
and
inc
std
and
jl
xor
cltd
xor
sub
sbb
xchg
lahf
rclb
dec
pushf
xor
insl
push
cmp
les
mov
jmp
iret
rcl
lret
ror
xlat
lods
and
test
jecxz
mov
js
dec
jle
js
xchg
and
jnp
das
cld
rorb
jo
inc
inc
add
test
nop
pop
out
movsb
sti
xchg
push
lcall
in
pop
xor
out
ficompl
xchg
sbb
jge
cmc
aaa
sbb
orl
jbe
gs
test
add
repnz
jne
sbb
push
clc
sub
push
js
push
inc
and
mov
sub
mov
rcl
dec
mov
push
add
mov
pop
imul
lret
mov
mov
pop
lea
mov
and
add
add
and
pop
sti
lcall
lods
xor
jmp
fstps
cmpsl
add
nop
push
and
stos
movsl
push
xchg
out
adc
cmpsb
addr16
cmp
iret
push
lods
sbb
pop
mov
mov
jmp
negb
cld
mov
sarb
sub
pushf
imul
sub
jl
icebp
pop
add
iret
int3
lock
sub
adc
ja
mov
shrb
loopne
insl
cmp
push
loope
arpl
xor
fxch
cltd
mov
ss
inc
push
adc
add
dec
pop
inc
ljmp
push
add
add
mov
pop
pop
mov
xchg
fstpl
js
push
ficoml
cmp
mov
push
or
fmuls
scas
mov
fnstcw
and
out
ror
lds
xchg
aaa
cmp
lahf
mov
or
in
insl
xchg
fdivrs
jmp
push
or
and
aad
aam
cmp
xchg
pop
and
pop
xor
add
push
push
call
jl
es
xor
push
xchg
mov
pop
shrb
and
jle
add
or
fs
sti
insl
popf
pop
ljmp
dec
in
sub
and
xor
xor
rorb
inc
jnp
sti
call
ret
movsb
fwait
xor
sub
jecxz
adc
sahf
rcr
outsl
pop
xor
pop
mov
lret
mov
adc
test
fbstp
lret
leave
pushf
and
xor
mov
test
imul
lret
mov
popa
jmp
mov
out
pop
and
inc
movsb
lret
mov
jns
push
or
push
pop
pop
in
push
addr16
mov
or
push
mov
inc
mov
mov
dec
addl
fdivl
dec
adc
jmp
add
aas
ret
rol
sbbl
repz
js
dec
jle
js
out
repz
std
loopne
fwait
ljmp
mov
dec
loope
cmpsb
dec
mov
push
cmpsl
add
divb
mov
sti
insb
jmp
inc
mov
cmpsb
aad
add
loopne
orb
jae
gs
xor
pop
push
inc
mov
cld
sub
push
faddl
gs
xor
sbb
mov
jecxz
movsb
cmp
xchg
dec
ret
mov
xchg
jecxz
dec
jae
leave
lcall
lods
jle
sti
ret
inc
test
mov
inc
ficoml
repz
add
push
adc
testb
ss
sbb
cmc
jmp
mov
xchg
mov
fsqrt
adc
test
cmp
fisubs
xor
mov
das
xchg
push
std
imul
stc
jb
into
scas
push
je
es
cs
jne
stc
das
cmc
insl
xchg
xor
push
mov
mov
imul
sahf
jecxz
xor
fdivrl
rorl
les
cmpsl
cs
dec
jbe
sbb
pop
jg
xchg
lock
push
or
dec
je
std
mov
dec
test
sbbb
sbb
xchg
sub
xor
not
jl
subl
addb
xor
mov
dec
mov
add
jle
in
fcompl
xchg
lea
adc
pop
mov
loope
inc
jne
xor
jbe
fwait
add
xchg
cmp
nop
pushf
dec
inc
pop
xchg
jne
mov
call
jno
push
or
push
and
xchg
pushf
out
add
add
xor
sub
in
cmc
rclb
fdivl
mov
xchg
mov
hlt
pop
mov
and
xchg
stos
rcll
mov
mov
mov
inc
mov
and
mov
insl
pop
and
and
dec
das
cmp
cltd
add
out
push
lock
jo
push
sbb
jne
aad
mov
jb
pop
insl
ret
jo
push
dec
aaa
cmp
popf
sub
sub
bound
pusha
cmp
add
outsl
out
and
arpl
cwtl
out
add
ja
rorl
data16
pushf
pop
insb
xchg
imul
test
fwait
in
data16
pushf
ss
gs
xchg
add
mov
or
fistpl
stc
ja
mov
cltd
push
mov
mov
fdivl
sub
mov
lahf
push
xchg
fadds
mov
and
or
mov
jmp
ds
cmp
mov
pop
out
sub
js
jle
js
fisttps
stos
popf
in
cmc
mov
sbb
cwtl
dec
sbb
out
js
insb
aam
or
mov
push
pop
in
cwtl
jb
or
enter
add
cld
sbb
or
xor
test
decb
mov
daa
enter
push
nop
mov
push
ljmp
decl
or
arpl
inc
pop
mov
adc
adc
test
sbb
rcrb
push
fs
dec
into
xchg
leave
lods
std
cmpsb
jg
jns
hlt
dec
insl
adc
fwait
ret
ret
xchg
dec
and
cmp
sahf
dec
add
jns
loope
dec
sub
jnp
hlt
cltd
fadds
mov
sbb
push
or
rcrl
int
cld
pushf
jle
enter
jo
sub
aaa
cmp
dec
xor
pop
lock
rcll
push
or
cmpl
and
loope
aaa
in
push
leave
push
and
dec
out
dec
popf
push
mov
and
out
xchg
push
cli
frstor
adc
push
ljmp
push
pop
jns
in
imul
addb
jo
dec
and
jecxz
addl
push
fists
or
xor
leave
js
cs
dec
lret
xchg
inc
jnp
loopne
aad
add
imul
xorl
push
or
adc
sbb
lahf
pop
das
and
arpl
sbb
dec
enter
dec
int
mov
jb
sub
mov
adc
or
inc
insl
sbb
inc
out
xchg
and
dec
lahf
pop
inc
imul
xor
xor
pop
dec
dec
cmpsl
roll
dec
mov
add
or
push
js
jb
mov
pop
xor
push
mov
clc
fcmovu
mov
inc
sub
dec
pop
jg
mov
addr16
mov
pop
push
test
mov
mov
fdiv
clc
push
mov
fldenv
add
fisubl
dec
push
pushf
sahf
xchg
jae
out
lret
mov
js
mov
sub
add
fidivrl
gs
in
and
int
sub
outsb
pop
lds
in
inc
adc
push
out
fistpl
aad
add
pusha
pop
sub
fmuls
cld
sub
and
add
repz
jecxz
sub
jbe
dec
insb
hlt
clc
aam
or
sub
push
push
xlat
stos
sub
nop
cmp
sub
iret
jecxz
les
mov
pop
jl
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
and
mov
jmp
int3
vpmovmskb
fcmovnu
leave
in
loop
out
mov
js
fs
js
push
xchg
dec
sub
xor
lods
xor
out
push
cmpsl
jne
icebp
dec
sbb
pop
loop
pop
lahf
and
sub
out
sub
lods
dec
imul
addb
andl
test
fsubp
inc
pop
mov
fwait
sbb
loopne
mov
sub
or
pop
repnz
xchg
scas
ljmp
and
imul
sub
enter
out
push
movsl
into
mov
cltd
notb
out
mov
test
mull
sbb
outsb
enter
and
inc
fs
in
mov
stc
outsl
inc
les
inc
incb
mov
jl
add
ret
cmp
inc
dec
jne
gs
addb
aam
cmpsl
mov
mov
or
add
pushl
insl
xchg
movsl
dec
dec
or
sub
sub
sbb
pop
dec
stos
movsl
outsb
add
lahf
xchg
mov
cmp
mov
in
dec
jmp
cmp
aas
popf
and
push
fadd
insl
inc
push
jp
jae
lea
in
pop
sub
dec
mov
inc
loopne
sbb
push
inc
xchg
xor
or
inc
xchg
dec
mov
push
stc
rcrl
mov
pushf
cwtl
or
cld
jmp
mov
dec
add
in
add
jae
xor
rclb
or
bnd
lock
lds
jmp
insb
into
push
mov
fcmovnbe
or
pop
mov
sarl
xchg
dec
or
push
enter
and
add
test
inc
sub
ffree
lods
push
push
jle
mov
sbb
lcall
enter
cmpsb
push
xchg
fdivp
loopne
insb
inc
push
in
inc
jne
gs
inc
jnp
xchg
fbld
lods
movsl
cli
jae
ficomps
mov
adc
out
jo
fnsave
add
hlt
cmp
cmp
test
sub
mov
pop
cmp
sbb
push
test
inc
stc
shlb
subb
push
ljmp
push
adc
faddl
jge
pop
ljmp
ja
lcall
ror
aaa
adc
pop
call
xor
test
pop
cmc
push
orl
jae
xchg
sub
jne
sub
sbb
ljmp
jmp
fcmovb
sbb
xchg
pop
cmpsl
cltd
das
add
dec
add
aas
insl
pop
aaa
push
cli
add
inc
jbe
in
test
push
ja
mov
int
testl
jle
sbb
daa
push
and
mov
std
shlb
mov
push
pop
mov
push
inc
push
es
or
fs
adcl
xor
subl
mov
xorl
jmp
rol
cmp
aam
rol
mov
and
sub
xchg
js
jle
js
rcrl
pushf
scas
outsl
movsb
scas
dec
adc
cli
les
mov
lret
sbb
jle
xor
popa
es
inc
imul
lret
mov
call
fnsave
call
sub
and
ljmp
mov
add
andl
inc
dec
out
test
dec
in
bnd
push
ds
dec
sub
sub
ret
add
leave
call
jg
and
or
pop
sbb
mov
sbb
ja
pushf
jecxz
push
test
stos
mov
adc
popa
cmp
push
pop
sbb
pop
stos
hlt
sub
ret
aas
xchg
in
or
mov
out
lods
jmp
push
sahf
push
into
shll
pop
into
rol
xchg
shr
cmp
mov
sbb
stos
xchg
scas
jp
into
icebp
adc
out
int3
jb
jge
dec
inc
nop
dec
xor
imul
adc
jno
arpl
sub
adc
xorl
jg
adc
xor
pop
pop
adc
pcmpgtb
sub
mov
add
jmp
and
outsl
lock
shll
sahf
jo
pusha
push
addr16
lods
js
in
sub
lods
call
push
ss
inc
and
push
aam
mov
push
pop
test
push
jnp
xchg
test
or
cli
adc
xchg
jo
mov
cmp
inc
push
sub
jae
lret
sbb
mov
cs
addr16
pushf
push
aas
hlt
jne
je
xchg
mov
push
orl
aaa
addr16
xor
sarb
outsb
mov
pop
movsl
mov
mov
lahf
ljmp
sbb
lods
mov
lods
pop
test
mov
stc
lcall
stos
lret
iret
cmc
dec
lret
cmp
xchg
shrl
jo
jno
pop
clc
movsb
out
in
mov
movsl
sbb
repnz
pop
not
inc
pop
or
js
stos
insb
cmp
jp
je
dec
jle
dec
ja
cwtl
xchg
outsl
shll
pop
test
into
subb
push
mov
ss
mov
xchg
sbb
or
mov
es
inc
jns
xchg
popa
stos
xchg
mov
sub
das
xchg
es
pop
daa
xor
push
clc
mov
aaa
add
xchg
pop
inc
adc
sub
jecxz
xchg
in
les
push
ljmp
test
roll
dec
cld
pop
pop
dec
sti
xchg
test
loope
sub
ret
pop
aad
iret
addb
icebp
sbb
cmpsb
mov
xchg
xor
mov
inc
sbb
leave
shll
add
sbb
movzwl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
adc
mov
xor
add
sub
jmp
cmp
rcl
rol
ficoml
out
push
cs
pop
int3
js
fs
js
enter
dec
pop
imul
decl
lret
fwait
scas
ljmp
mov
xchg
adc
shrb
mov
pushf
sahf
jecxz
insl
jbe
fyl2xp1
aad
gs
repz
sbb
lret
xor
fst
sbb
xchg
push
fsts
inc
stos
pusha
mov
xchg
sbb
stos
test
lock
xchg
test
lods
xor
jno
push
out
lahf
leave
push
shll
mov
add
mov
sub
icebp
pop
and
push
pop
xor
dec
sbb
addr16
add
add
ss
or
cmp
test
jno
call
mov
sahf
jle
fcoml
shr
test
xchg
sbb
sbb
jo
out
insb
mov
xchg
mov
xor
add
enter
cmp
subl
aaa
int
lods
adc
jge
pop
mov
push
xor
imull
inc
add
pop
jae
dec
push
xchg
add
in
repnz
dec
xchg
sub
adc
xor
movsl
mov
adc
test
sub
lods
stos
dec
mov
adc
es
mov
fnstcw
dec
sub
ja
add
popf
inc
adc
imul
pop
imul
loopne
cli
add
pusha
aam
shrl
loop
cwtl
add
in
rcrl
fnstcw
das
sub
stos
loop
adc
repnz
push
jae
pusha
pop
cmp
xchg
mov
add
aad
ljmp
loopne
jge
aas
sahf
imul
xor
push
sub
scas
or
fnop
or
cmp
aad
shlb
xchg
sub
call
ds
test
pop
int
enter
stos
aas
jae
jp
mov
sub
lcall
lahf
out
add
movsl
mov
ret
shl
test
les
push
negb
push
mov
stc
push
scas
nop
adc
mov
lock
leave
cmp
adc
sbb
sti
sahf
jle
stos
jo
ss
std
push
fcmovnbe
add
cmpsl
repnz
lret
add
mov
jae
scas
jno
push
in
cwtl
fwait
pcmpeqb
pop
sub
ljmp
push
jo
bound
sub
sub
xor
lret
movb
icebp
push
add
dec
mov
mov
push
movsb
cli
jle
je
cmp
int
cmp
add
and
lock
in
add
out
stos
scas
fidivs
mov
mov
jmp
inc
aad
xchg
insl
jne
jge
pop
ja
jo
jg
sub
mov
push
cmpsb
movb
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
jmp
iret
lret
aad
in
mov
inc
sarl
fs
js
stos
aad
pop
shr
xor
call
dec
stos
pop
dec
xorb
repnz
xchg
sbb
sub
push
gs
xchg
int
imul
add
fcomp
mov
push
mov
callw
jp
xchg
pop
std
lds
repz
or
inc
mov
sub
mov
scas
int3
clc
dec
fldt
adc
sbb
cmpsl
pop
or
ljmp
std
in
arpl
imul
mov
into
bound
push
iretw
cld
push
insl
jg
repz
mov
dec
cmp
test
xor
and
add
mov
iret
pop
jecxz
stos
add
xchg
xchg
ffree
lock
mov
or
nop
sub
addr16
or
mov
scas
xchg
movsl
or
push
ret
scas
pop
cmp
mov
xchg
adc
cmp
lods
bound
lea
in
inc
mov
call
jo
jg,pt
push
push
repz
jmp
push
or
into
or
enter
mov
filds
or
and
sbb
mov
xchg
and
test
pushf
xor
sahf
sub
or
jmp
hlt
sub
popf
mov
leave
aas
push
push
xor
mov
and
push
mov
loop
insl
outsb
cmp
dec
in
jmp
inc
test
fimull
cmpsl
mov
xor
add
test
les
mov
inc
and
repnz
push
fimuls
mov
mov
xor
leave
xchg
js
add
mov
aam
rolb
test
popf
mov
loope
icebp
loope
test
mov
or
mov
unpckhps
aas
fstpt
or
push
lods
pop
xor
inc
xlat
sbb
rcrl
sahf
inc
lock
sub
pop
aam
mov
xchg
ret
leave
test
stos
scas
cmp
lds
sub
enter
or
xchg
jecxz
jne
cli
shll
pop
inc
test
incl
cmp
dec
mov
sub
dec
fstpl
and
mov
xor
ds
adc
in
ljmp
daa
ret
loope
jl
stos
pmullw
add
jmp
dec
sbb
and
aam
or
aad
or
stos
shlb
idivl
out
lret
pop
xor
jmp
dec
mov
pop
pushf
out
mov
mov
decb
incl
add
insb
add
mov
xor
sub
sbbl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
mov
push
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
jmp
cmp
cmp
ret
shll
jp
iret
mov
js
fs
js
jno
xchg
movsl
sbb
jmp
cmp
test
mov
in
leave
jg
sub
fs
mov
aaa
ds
push
pop
jp
adc
add
in
call
daa
sti
jne
lret
sbb
mov
cmc
insb
sub
or
sbbb
outsb
out
scas
xor
sbb
incb
and
push
mov
push
frstor
mov
roll
push
sub
jae
cvtdq2ps
setb
decb
repnz
cmpsl
mov
stos
mov
sub
in
pop
or
jp
dec
adc
mov
sub
fnstenv
add
xchg
mov
icebp
jmp
inc
call
jecxz
xchg
and
jmp
test
iret
call
pop
ds
dec
fisubrs
push
repz
lcall
push
push
inc
inc
loope
xor
ja
cmp
add
rorb
mov
repz
inc
mov
cli
and
sbbl
and
fwait
je
cmp
adc
xor
cmp
mov
sub
frstor
mov
xor
jb
cltd
sti
sbb
xchg
subl
ret
cmpb
icebp
cmp
dec
or
pop
scas
outsl
outsl
xchg
test
jae
movsl
add
pop
rcll
push
push
push
sbb
dec
test
loopne
cmp
or
push
and
cmpsb
ret
mov
js
xor
inc
rcrb
dec
mov
jo
mov
push
adc
cmpsb
mov
lock
stos
flds
cmp
and
js
sub
lahf
movsl
dec
test
mov
stos
dec
clc
outsb
sub
mov
cmpb
sbb
out
clc
sarb
sub
addr16
lcall
sub
xchg
mov
pop
jmp
call
test
out
enter
push
add
cld
popf
cwtl
inc
repnz
push
arpl
mov
jb
mov
dec
pop
stc
push
mov
cltd
and
fstps
jbe
inc
pusha
adc
and
stos
mov
enter
adc
jl
test
popf
lock
test
xor
dec
dec
movsl
stos
mov
mov
mov
jae
insb
sbbb
mov
add
scas
cmc
outsb
lcall
sbb
sbb
ljmp
and
mov
and
mov
in
jge
movsl
call
mov
xor
and
mov
sbb
lcall
mov
add
sub
fs
aad
insb
pop
add
pop
pop
test
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
jmp
ror
lret
fcmove
rcl
adc
xchg
inc
xchg
pushf
fstpt
fs
js
inc
cltd
decb
sbb
in
addr16
push
bnd
test
sub
ficoml
mov
mov
repnz
and
xor
loope
xchg
and
js
test
fcmovu
mov
mov
mov
cmp
lcall
dec
in
push
push
int3
fwait
iret
cmp
push
repnz
lea
addl
ret
in
mov
aam
jns
cmp
imul
sbb
fdivl
add
sarl
ljmp
jo
push
adc
orb
test
push
inc
lahf
cmpsl
jmp
repnz
in
mov
arpl
out
js
push
loopne
icebp
xchg
or
mov
fidivs
mov
nop
add
lret
pop
adc
lret
insb
cld
xchg
mov
ss
push
add
lods
cs
jecxz
aam
je
and
push
xchg
push
adc
sbb
daa
rcl
jmp
and
pop
mov
out
fmuls
xchg
lock
xchg
mov
call
scas
adc
outsl
rol
add
andb
xlat
jns
mov
mov
in
in
sbb
push
jmp
daa
adc
mov
sbb
cmpsl
xchg
fisubs
mov
mov
movsb
sub
cmp
flds
and
out
mov
scas
push
movsl
lea
enter
push
adc
xchg
mov
pop
jl
inc
jl
dec
xchg
xor
add
mov
pushf
iret
xor
jle
mov
add
sti
push
jge
adc
inc
loop
cmpsl
xor
and
dec
ret
scas
dec
stc
das
rorb
add
clc
fistpll
das
mov
dec
leave
cli
dec
dec
jmp
and
sbb
test
sub
sbbb
sub
lods
cwtl
dec
fidivs
add
test
inc
and
stc
cmpsl
lcall
jmp
in
icebp
xlat
mov
lock
gs
sbb
fstps
mov
lods
mov
dec
cwtl
inc
je
das
sub
fmull
mov
mov
rcrb
sti
decl
orl
popa
inc
lahf
fdivr
pop
xchg
movsl
arpl
out
mov
ds
in
fldcw
andb
in
mov
jns
mov
lea
cmp
cmpsb
jb
fwait
mov
xorl
mov
or
xor
cmp
fs
ljmp
arpl
jbe
mov
out
iret
test
push
leave
mov
and
cmp
mov
loopne
mov
jmp
cmp
jne
pop
pop
mov
mov
jmp
lret
ret
fld
add
fadds
js
fs
js
sub
cltd
jo
mov
popa
pop
je
fisttpl
xchg
insl
jle
js
fimull
sub
loop
fstpt
loope
xchg
jg
sti
adc
jae
mov
sbb
stos
cmp
sbb
imul
jae
stos
pop
inc
add
test
mov
ljmp
jmp
sub
out
js
or
sub
ja
scas
push
xor
mov
and
mov
ljmp
push
jb
cmp
jmp
dec
add
es
jp
lcall
pop
lods
pop
push
push
int
lret
lock
dec
sub
add
cmpsl
dec
cwtl
in
jbe
and
sahf
add
jle
ljmp
popl
dec
push
mov
add
xor
test
out
rolb
cs
sub
pop
xchg
pop
sub
bound
inc
stos
in
ljmp
ds
add
push
lahf
packsswb
dec
pop
shll
xchg
dec
sbb
fdivrs
shll
lahf
fwait
xor
xchg
test
loop
xor
xor
test
movl
addr16
std
pop
dec
xor
mov
nop
rcll
mov
lea
jns
dec
gs
push
cmpb
fbld
jbe
jne
ret
jns
cli
ljmp
bound
cmc
jecxz,pn
dec
dec
inc
into
xchg
inc
cmp
pop
fwait
ds
aaa
sub
and
popf
mov
adc
fsubs
jbe
lret
xchg
mov
lret
sar
pushf
insl
sub
xor
xchg
fisubrs
popf
gs
outsb
test
inc
jp
dec
dec
xchg
mov
adc
cld
hlt
adc
push
inc
into
ret
dec
and
lds
outsl
jb
loopne
js
cmp
sub
pop
jbe
cld
inc
iret
push
shlb
in
dec
ret
into
lods
std
imul
stc
popa
je
ss
fsubrl
pop
pop
sub
or
int
sub
lods
xor
push
fprem1
loop
xlat
adc
jg
sbb
inc
imul
inc
lcall
enter
into
jge
pop
popa
xchg
adc
andb
fbstp
sub
aam
cs
test
scas
mov
lret
xor
mov
cmpsl
int3
popa
ss
ds
sti
or
aas
mov
jae
test
int3
xor
scas
inc
xor
xor
loop
dec
pop
fcoml
and
xchg
sbb
data16
ret
adc
xchg
sbb
xabort
mov
mov
loop
lods
add
pop
xchg
lret
sub
sub
iret
mov
roll
mov
mov
xor
add
mov
mov
jmp
ret
ror
rcr
rcl
push
add
pop
hlt
fnstsw
fs
js
sub
jge
test
test
in
sbb
stos
mov
push
add
inc
sub
inc
std
mov
and
dec
cwtl
gs
mov
mov
mov
mov
cmp
shr
fildl
push
xor
imul
dec
inc
int3
mov
fcmovb
dec
add
mov
adc
gs
and
movsb
hlt
inc
xor
or
push
ljmp
jg
sub
mov
lcall
int3
stc
sub
push
pushl
jbe
mov
pop
ss
imul
sub
jbe
pusha
and
out
xchg
movsb
ljmp
ret
cs
xchg
out
loop
shlb
push
inc
imul
enter
mov
xchg
dec
and
shrb
jmp
push
inc
mov
xchg
adc
pop
jmp
je
js
test
js
xchg
enter
aad
xchg
jne
addl
mov
stc
jnp
mov
xor
add
mov
popf
dec
scas
push
sbb
out
shll
lret
cmp
insl
lods
push
lahf
movsl
subb
outsl
call
fdivl
cltd
ss
fistl
mov
cs
sub
xchg
pop
sub
fidivl
jmp
out
jnp
movsl
daa
jbe
xor
rdmsr
pop
pop
pop
sbb
xor
sub
data16
in
push
jne
and
sar
pop
in
stos
popa
les
rorl
sub
loope
push
out
inc
popf
stos
out
jbe
fistl
mov
mov
popf
push
scas
adc
daa
int
sub
xor
lock
mov
sahf
and
adc
iret
leave
xchg
dec
sub
push
pop
pop
insb
sub
jnp
ficompl
sti
stos
pop
or
push
or
bound
jmp
scas
aaa
mov
xor
mov
jb
sbb
rcrl
mov
mov
jno,pt
out
enter
fsts
cmc
mov
jae
dec
push
aaa
or
out
xor
shlb
cmp
inc
sbb
xor
test
cmp
int
lods
ficoml
mov
in
ljmp
repnz
imul
push
popf
fisubrl
fmull
sub
roll
aaa
loope
data16
mov
or
std
sbb
scas
inc
xor
dec
inc
cmp
es
cld
jp
in
aaa
pusha
jb
or
ljmp
sub
aam
xor
ljmp
xor
inc
add
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
jmp
cmp
rcl
fcmovu
into
leave
xchg
loopne
js
fs
js
addr16
push
add
and
mov
push
push
std
cltd
aaa
loope
fmull
sbb
orl
fsub
lret
jle
push
add
icebp
das
or
jno
and
lcall
cmp
and
add
add
scas
push
mov
mov
inc
pop
cmc
jo
or
adc
scas
jge
pop
sbb
orl
sub
mov
push
arpl
ret
push
mov
jmp
pop
in
jle
jno
jae
pusha
cs
aad
add
sarl
pop
arpl
int3
loop
gs
lock
jbe
je
dec
adc
test
pop
int
adc
mov
jmp
es
push
sub
adc
jb
jo
ficompl
mov
jnp
mov
push
scas
fwait
in
jl
fwait
xchg
mov
sub
out
inc
stc
test
or
mov
push
aas
add
or
mov
push
pop
cltd
movl
subl
inc
cs
xor
loop
ja
stc
and
jp
aad
loope
adc
add
data16
push
jno
dec
lcall
xchg
push
test
add
aad
std
sti
ret
xchg
sbb
and
inc
add
xchg
leave
jno
or
and
mov
xchg
test
push
add
imul
cltd
rcr
pop
int
fistpl
push
and
mov
jno
addb
mov
dec
bnd
out
mov
pop
or
fs
push
scas
incl
mov
rolb
dec
dec
mov
lret
ds
xor
icebp
sti
test
jge,pt
je
fdivrl
jo
movsl
clc
das
mov
pop
mov
xor
jmp
test
pop
nop
popa
insl
sub
je
mov
clc
sub
jmp
cmp
mov
aad
adc
pop
dec
pop
or
jbe
xchg
aam
or
in
push
jo
cmpsl
aad
out
or
mov
adc
test
bound
or
push
icebp
add
scas
lret
imul
xchg
xor
std
les
cmpsl
xchg
ret
mov
push
dec
dec
mov
sahf
popf
jecxz
or
cld
fnstsw
sbb
xor
jo
lret
test
xor
push
in
out
push
imul
xor
pop
mov
sbb
add
jb
mov
sub
jbe
xchg
popa
mov
cmp
mov
push
fwait
jns
jo
ds
testl
jns
shr
ret
pop
andl
inc
in
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
jmp
aas
fld
add
sahf
mov
out
js
jle
js
sub
mov
pop
enter
cmp
lds
fs
ja
roll
mov
add
jg
xor
or
jo
mov
push
fidivrs
popf
xor
push
pop
jle
roll
movd
xor
fists
shll
out
or
mov
jp
pop
mov
push
sbb
adc
stos
mov
lahf
mov
mov
xchg
ljmp
negl
mov
sub
fwait
mov
xlat
jmp
cltd
movsl
push
stc
xchg
clc
cmp
sbb
dec
repz
add
inc
push
imul
fdivrl
fcompl
cmpsb
notb
shlb
adc
adc
pop
lret
arpl
leave
jo
in
daa
mov
dec
bound
divb
mov
test
movsb
cli
inc
add
rclb
cli
mov
in
inc
insl
enterw
std
and
sbb
ret
clc
addl
sub
andb
testl
out
ss
es
xlat
mov
xor
xor
xchg
mov
iret
adc
not
mov
cmp
xor
fistpl
shlb
shrl
mov
sar
jno
mov
add
jo
mov
inc
mov
or
inc
mov
sbb
inc
cmpsb
sub
ds
out
xchg
or
sub
out
mov
mov
int
xchg
xchg
mov
sub
mov
sub
mov
mov
jge
push
adc
dec
mov
fmull
pop
mov
jb
cwtl
xor
or
jg
sub
mov
xchg
pop
xchg
shrb
gs
jb
hlt
repnz
inc
mov
mov
pop
repz
out
sub
int
lds
ds
stc
repnz
leave
std
sub
mov
aam
movsb
test
arpl
cmp
dec
out
xchg
cmp
mov
cltd
jne
dec
enter
fs
jecxz
out
stc
cmc
mov
jge
hlt
sar
add
das
mov
fadds
mov
inc
dec
mov
movsl
push
mov
sbb
lods
mov
pop
mov
movsb
insb
jecxz
data16
jno
and
jne
add
scas
and
sbb
testl
jge
push
gs
movsb
js
mov
add
fs
mov
or
ja
sub
fsubrl
pop
nop
call
push
cmpsb
fdivrl
pushf
out
lahf
xlat
ja
mov
cmp
je
inc
dec
subl
push
mov
push
xor
push
jmp
cmp
aad
mov
leave
or
cmp
js
cmpsl
jle
js
call
cmp
cmpsl
int
xchg
jmp
pushf
mov
mul
and
in
movsb
outsl
push
inc
inc
mov
xchg
add
xor
xchg
movd
mov
mov
cmpsb
cltd
lret
jecxz
cld
arpl
or
dec
fucomip
sti
add
xor
ja
xor
sbb
hlt
sti
add
int3
push
fiaddl
dec
js
mov
and
lret
das
nop
mov
inc
stos
mov
push
test
dec
pop
xchg
leave
lods
adc
ret
xchg
pop
cld
sub
add
jecxz
mov
jle
test
clc
or
ret
outsb
leave
sarl
mov
add
sbb
push
mov
cmp
daa
xor
pop
orb
add
xor
aam
cmp
js
jnp,pn
push
in
cwtl
push
repz
xchg
clc
out
and
in
pushf
loop
xchg
dec
ret
leave
rcll
or
push
mov
xor
push
sbb
xor
xor
stos
testb
scas
add
daa
mov
cltd
cwtl
or
pusha
je
insb
scas
pusha
or
cmp
push
shlb
mov
loop
xor
lods
lret
sub
cltd
outsb
xchg
or
es
jle
cmp
pop
cltd
out
iret
movsl
pop
pop
enter
cmp
pop
repnz
sbb
sar
repz
push
mov
jmp
lea
ja
pop
insl
ljmp
lds
aaa
add
xchg
add
aam
ss
int3
insl
fidivrl
sbb
dec
arpl
in
ret
fnstcw
push
aam
loopne
imul
inc
sbb
jge
xor
adc
data16
ljmp
jmp
jmp
frstor
pushf
mov
adc
jge
outsb
mov
rcl
ja
leave
cs
pop
cmpsb
ja
or
mov
push
jge
push
test
ljmp
add
jp
aam
es
pusha
inc
insb
shlb
inc
adc
xchg
ret
fsts
or
pop
out
pop
outsb
xor
push
loopne
inc
cmp
mov
xchg
adc
inc
scas
lea
pop
mov
add
jne
mov
shr
xorb
adc
sbb
outsb
sub
pop
push
fadds
add
sbb
push
sbb
inc
test
insb
repnz
sub
popf
sub
xchg
std
sti
mov
jg
add
inc
rcrl
sub
fs
inc
clc
cmp
cld
cmp
cld
add
push
mov
mov
add
mov
mov
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
mov
orl
add
add
xorl
imul
mov
jmp
cmp
lret
stos
adcl
push
sbb
addr16
push
inc
xchg
pop
xchg
adc
ja
cs
xor
iret
jp
ficoms
test
inc
or
dec
les
imulb
out
inc
stos
push
dec
rorb
aas
dec
pop
icebp
subb
cwtl
daa
add
sub
xor
mov
inc
addb
adc
push
jge
dec
popf
rol
outsb
dec
or
test
mov
xor
adc
lcall
int3
push
jno
into
call
mov
dec
fdivs
stc
mov
jl
push
mov
mov
adc
rorb
jnp
rcrb
mov
xor
pop
int3
ret
int3
stc
mov
sarb
mov
idiv
pop
and
insl
ljmp
adc
sub
jne
out
dec
rcrl
insb
popf
push
mov
std
sub
add
sub
mov
mov
imul
jmp
mov
cmp
mulb
mov
add
add
adcb
std
cmpsl
xchg
mov
mov
outsl
in
mov
mov
mov
jnp
cwtl
out
xor
lahf
mov
cli
dec
xchg
sub
ret
mov
add
push
out
sbb
mov
adcl
int3
dec
xchg
xor
dec
add
mov
add
push
dec
add
dec
xor
cmpsl
inc
mov
adc
sub
sbb
adc
push
outsl
lahf
jle
pop
orl
iret
loop
mov
test
push
mov
xchg
repnz
sub
lods
aaa
or
test
inc
out
sub
das
sub
fstpl
shlb
inc
imul
adc
fwait
clc
pop
mov
pop
arpl
outsl
mov
dec
cmpb
cmp
xlat
mov
dec
roll
fbld
lods
and
mov
mov
aam
mov
in
cmp
cmc
std
inc
dec
sbb
sbbl
push
js
test
pop
fs
mov
sbb
inc
mov
xlat
and
subb
movsb
pop
imul
sti
inc
ficoms
fimull
cmpb
nop
scas
bound
lods
lahf
sub
fs
xchg
mov
movsl
cmpsb
xor
bound
pop
dec
push
pushf
adc
adc
mov
sbb
inc
stos
xchg
arpl
cmp
movl
jne
jmp
lret
cmp
mov
popa
inc
sbb
jle
js
lea
sahf
fdivrl
dec
bound
and
mov
pop
mov
xor
and
cmp
xor
movsb
xor
ds
cmpsb
inc
and
add
mov
pop
push
adc
jne
cmpsl
push
push
imul
mov
mov
cltd
daa
push
mov
hlt
mov
dec
push
mov
in
in
xor
cltd
pop
lret
sahf
mov
add
test
aad
jo
aam
jno
lret
xor
mov
mov
jl
ret
icebp
xorl
or
insb
js
repnz
pusha
ret
xor
je
loopne
and
push
lds
inc
cmp
movl
insl
jecxz
movsb
inc
xchg
mov
push
gs
iret
clc
ljmp
or
xchg
fcmovu
enter
sub
dec
lods
mulb
sub
pusha
push
push
lods
ja
clc
stc
cmp
jno
xor
repz
fwait
aas
xchg
pushf
mov
arpl
stc
lret
or
jno
push
mov
push
sahf
nop
sub
cmp
ds
mov
pop
or
es
dec
int
jg
ja
addr16
leave
cmpsb
outsb
inc
cmp
rcrb
dec
pop
cmpl
pop
mov
popf
cs
mov
inc
lcall
pop
jo
cmp
sbb
push
cmc
push
lret
jmp
and
jnp
lods
adc
mov
sbb
in
int3
jecxz
sahf
pop
xor
pop
movsl
mov
dec
sbbl
stc
addr16
hlt
and
std
jb
orl
pop
xchg
sub
sub
ja
in
fs
dec
mov
shll
ja
cld
sub
mov
jno
push
xor
hlt
mov
outsl
stos
xchg
pop
xchg
push
pop
pop
fcmovnbe
xchg
fldt
jnp
arpl
roll
and
leave
mov
repz
in
pop
in
dec
push
mov
ret
scas
add
cmp
inc
dec
ret
or
push
jb
arpl
ja
inc
and
ss
test
lods
and
pop
or
mov
and
mov
or
cmp
mov
movsb
sub
mov
cmpl
xor
aaa
mov
inc
push
ja
xchg
and
out
mov
popa
shll
mov
addl
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
jmp
xlat
leave
lret
aad
leave
adc
test
jle
js
mov
add
aaa
mov
dec
lods
pop
clc
shrb
mov
push
hlt
xor
pop
add
hlt
subl
jmp
mov
pop
or
xchg
mov
push
push
ja
inc
sbb
add
ret
xchg
mov
sbb
sub
xor
push
push
rorl
push
jno
push
push
sub
adc
sti
mov
enter
add
jmp
jnp
add
mov
out
pop
loope
push
nop
lods
insb
jb
hlt
mov
xchg
push
pop
leave
insl
stc
and
dec
mov
cli
inc
jp
hlt
jno
and
pop
xchg
mov
sub
pushf
jmp
les
xor
mov
cltd
ds
jcxz
xor
outsb
je
cmpsb
xchg
mov
inc
fcmovnu
ja
ret
mov
int3
insl
mov
xorl
and
and
call
dec
adc
out
mov
fcoms
add
sub
bound
out
mov
xor
call
gs
mov
mov
or
xchg
lea
add
test
outsb
cmp
mov
test
push
or
mov
testl
daa
sbb
adc
or
inc
adc
imul
add
das
in
cmpsl
int
mov
ds
mov
out
addl
mov
cmpsl
mov
cmp
sub
insb
rol
fs
dec
push
push
xorl
andl
fcoml
lahf
cs
adc
inc
inc
inc
xchg
vpcmpeqw
adc
jae
inc
mov
sub
das
cld
imul
inc
in
xor
lea
fxtract
ljmp
addl
dec
jecxz
leave
pop
xchg
scas
fucomi
js
mov
out
sub
xor
sarl
xor
pop
xor
inc
pop
mov
dec
test
sub
lahf
push
mov
in
push
orb
and
sahf
test
mov
xchg
in
das
mov
push
xchg
add
movups
nop
mov
sti
push
cwtl
sub
lock
ret
xchg
mov
bound
add
test
ret
stos
and
fidivrl
push
dec
jno
xchg
jle
and
xchg
repnz
ja
push
dec
call
mov
dec
pop
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
jmp
leave
enter
xlat
enter
ljmp
push
jle
js
mov
addr16
inc
inc
adc
adc
or
scas
fistpl
jne
inc
in
xor
fstpl
jbe
inc
pushf
xchg
xlat
add
push
call
push
rcrb
dec
cmpb
and
shl
and
dec
inc
inc
movsl
cmp
in
add
mov
inc
push
sub
les
pop
xor
cmpsb
data16
mov
xor
add
arpl
imul
sub
pop
rcrb
jp
outsb
add
and
dec
mov
push
gs
sub
jle
outsb
fistps
fimuls
mov
sub
addr16
add
fimuls
dec
rol
xlat
test
imul
subb
cmpsl
pop
jne
cmp
cs
push
jne
add
pop
mov
cmp
mov
orb
sbb
into
test
lea
nop
lret
cmpl
sbb
call
sub
orl
ss
sbb
rolb
cld
pop
pop
cwtl
mov
test
outsb
sbb
xchg
cltd
inc
repz
aad
adc
hlt
inc
fnsave
andb
imul
add
negl
jge
sti
xor
cmp
mov
xor
das
aad
outsl
xchg
dec
xchg
mov
dec
stc
jge
add
incl
push
dec
lods
std
rclb
jl
pushf
push
stos
mov
mov
rorb
adc
das
js
scas
je
inc
cmc
mov
and
test
out
mov
jg
fnstenv
jge
mov
mov
std
bound
cmp
sti
push
sarb
adc
ljmp
ret
sbb
and
addb
mov
and
mov
cmp
sbb
lret
into
jo
fdivrl
push
lahf
aaa
ljmp
jb
cmpl
cli
fidivs
out
cmp
adc
mulb
push
and
ret
xchg
pushl
int3
mov
les
fsub
jne
faddl
mov
or
sub
mov
subb
mov
mov
sbb
xor
xchg
cs
push
shlb
mov
dec
jb
or
inc
movsl
std
jb
das
cli
add
in
sub
rcrb
je
ljmp
int
cmp
in
pop
jns
mov
pop
xchg
mov
into
push
mov
push
mov
movl
mov
mov
mov
movl
movl
cmp
jne
xor
jmp
lret
rcl
xlat
fxch
fsts
cmp
jp
idivl
push
jle
js
lods
lcall
xchg
rcrl
scas
push
ss
xchg
sahf
cmp
insl
clc
jno
test
inc
ret
pop
imul
test
jns
icebp
mov
in
push
fildl
sbb
mov
rcll
xchg
pop
mov
jmp
mov
into
aas
lock
shr
add
or
cmp
or
inc
xor
in
pop
imull
pop
or
jae
fnsave
insl
adcl
xor
frstor
gs
cmc
jmp
pop
mov
nop
cmp
cmp
xchg
and
fistpl
fwait
push
or
cmpsb
mov
cmp
cld
ds
mov
jle
push
je
imul
jne
jnp
xchg
outsb
mov
stos
enter
inc
push
sbb
push
mov
xor
mov
cmp
mov
mov
cmp
mov
pop
imul
add
mov
fsts
xor
rcll
iret
cmp
mov
testb
clc
dec
fwait
sbb
pop
cmpsl
test
pop
lock
jge
cmp
mov
dec
sbb
sbb
lahf
jecxz
nop
add
mov
movsl
insb
test
xchg
mov
pop
call
pop
adc
popa
out
repnz
dec
enter
sub
push
rolb
repnz
inc
pop
in
lds
cmpl
and
sbb
dec
ret
adc
xchg
into
mov
cmp
xchg
fidivl
pop
sbb
push
jnp
xchg
fsubp
push
adc
mov
pop
xor
dec
mov
sub
fisubrl
sub
or
jge
pop
clc
dec
mov
idiv
cmp
cli
test
push
mov
jl
cld
inc
js
scas
mov
mov
imul
daa
scas
xor
adc
fwait
cltd
xchg
or
pop
xor
ret
adc
mov
and
fsubp
pop
test
xor
imul
sbb
in
add
and
pop
inc
cmpsl
inc
sbb
movsl
aaa
pushf
popf
pushf
lods
sbb
xor
adc
in
sbb
cmp
aad
cmp
ror
add
push
popf
and
mov
out
in
pop
ja
les
lods
mov
push
pop
das
mov
and
xor
xchg
out
adc
dec
lds
lods
push
std
jno
aaa
pop
mov
cli
mov
lock
dec
lea
stc
xlat
push
movsb
sarl
pushf
mov
sbbl
mov
xor
and
mov
add
neg
mov
orl
movzwl
sbbl
not
xorl
and
jmp
ret
int3
leave
rcr
sahf
inc
imul
hlt
js
push
jle
js
movsl
sarl
dec
test
and
mov
daa
loop
dec
mov
cmc
rcr
xchg
int3
pop
jmp
sub
mov
cli
push
ljmp
inc
or
pop
inc
cmp
mov
subb
mov
mov
fimull
pop
pop
sub
mov
stos
cmp
xor
jg
jo
jne
inc
ret
call
inc
inc
xchg
mov
adc
fwait
and
icebp
cmpl
push
fnstsw
hlt
cs
das
jp
mov
jb
shlb
js
fwait
outsb
out
test
mov
das
test
arpl
and
sub
mov
mov
std
xchg
mov
dec
xchg
pop
inc
cmp
test
loope
addb
mov
add
and
data16
popa
mov
mov
in
jmp
inc
popa
pop
outsl
ret
shrb
xor
movsl
cmp
ror
or
lock
cmp
or
ret
xchg
js
mov
stos
pop
imul
jecxz
jae
outsl
jae
lret
rol
add
pop
push
fmul
cmpsb
xchg
int3
repnz
inc
cmc
jae
and
icebp
jl
fadds
xchg
pop
gs
xor
sub
and
push
shr
cmpsl
push
mov
dec
sub
adc
out
mov
test
sub
push
imul
in
dec
sub
and
inc
pop
clc
cmp
xchg
mov
pop
lds
push
adc
stos
mov
cmpsb
add
push
inc
aam
inc
xor
or
push
loop
mov
xchg
dec
movsl
jl
out
scas
push
push
std
in
mov
ds
or
push
add
xchg
test
cmpl
lods
dec
in
xor
mov
mov
mov
xchg
mov
sahf
cmpsl
mov
stc
xchg
adc
ljmp
stc
cmp
inc
and
cmc
dec
outsb
fldcw
loope
adc
mov
mov
push
mov
mov
push
dec
movsl
out
jbe
jb
dec
mov
pop
pop
pusha
test
pop
in
dec
fadd
test
std
pop
add
jecxz
or
mov
repz
roll
sub
sbb
movsl
mov
cmp
fcoms
ret
outsb
xor
das
mov
push
xor
jae
or
mov
inc
int
sbb
pop
or
je
xor
pop
aaa
lods
aaa
dec
mov
adc
or
sbb
jnp
and
aad
mov
movsl
cli
xchg
add
sub
mov
dec
or
add
xorl
mov
pushl
call
test
je
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
mov
sub
xor
movl
mov
xor
or
sub
imul
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
add
jmp
cmp
ret
ror
into
jge
enter
cltd
xchg
loop
js
je
js
xor
xchg
pop
int3
xchg
pop
aas
or
push
pop
lea
cmp
mov
mov
sub
jmp
lods
outsb
cmp
jae
mov
nop
sbb
xchg
cwtl
push
jno
xchg
inc
ljmp
xchg
in
mov
sbb
sbb
out
insl
adc
jnp
lret
out
push
push
mov
loop
pop
in
or
int
lret
pop
push
xor
mov
mov
enter
or
lock
data16
addr16
jecxz
loope
jmp
pop
pop
mov
sbb
dec
sti
das
xlat
stos
into
insb
inc
mov
sub
lock
in
imul
xor
aaa
push
mov
popa
into
push
xor
cmc
dec
hlt
sub
mov
pop
sbb
pop
push
icebp
push
mov
push
or
add
lahf
sub
fldenv
daa
push
adc
cmc
ret
dec
imul
push
inc
ljmp
mov
scas
ret
mov
sub
outsl
sub
cmp
jb,pt
shll
clc
lods
xor
fisubs
and
test
mov
adc
pop
or
cmp
lea
rcrl
lods
xor
loope
sub
mov
lock
sbbl
xor
mov
jle
outsl
mov
jge
wrmsr
add
cmc
inc
ss
cmp
xor
mov
xor
ficomps
cmc
sub
pop
sarl
adc
iret
scas
adc
mov
and
shlb
xchg
mull
push
mov
ret
shr
jae
les
xchg
jecxz
pop
cld
xchg
popa
jl
insl
jo
pop
iret
rorl
lods
push
pop
in
pop
xchg
cmp
jmp
call
cmp
adc
ret
js
test
inc
pop
add
mov
push
pop
fucom
aad
mulb
fmull
sbb
add
or
stc
cmp
dec
sti
cmp
or
dec
pop
pop
dec
loope
bound
ljmp
jb
push
mov
and
inc
icebp
cs
jo
mov
fdivl
xlat
fsubr
mov
lahf
cmp
cmc
xchg
pushl
push
mov
xchg
xchg
into
jo
test
subl
adc
cld
cmp
sub
mov
sti
jmp
mov
je
inc
ret
out
cmc
xchg
fstpl
sub
cli
xor
add
hlt
jl
and
push
aas
clc
xchg
mov
sub
loope
add
jmp
push
add
jno
lea
andl
mov
subl
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
lea
mov
mov
sub
and
mov
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
push
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
mov
jmp
ror
int
dec
xor
add
fdivrp
js
je
js
or
cmp
fbstp
test
out
adc
ret
outsl
cs
test
xchg
inc
lret
nop
cld
mov
adcb
lret
push
hlt
dec
or
aas
inc
add
add
inc
mov
lret
subl
mov
fnstsw
adcb
dec
jp
adc
rcl
sar
out
inc
out
pushl
cs
ret
cmp
mov
in
jne
push
and
addr16
mov
scas
fs
mov
std
adc
cmp
enter
fisttpll
addr16
test
int
inc
fadd
cmp
rorl
sbb
and
nop
shrl
ds
xchg
cmp
pop
dec
pop
mov
xchg
stc
popf
xor
mov
repnz
cli
sub
movsl
jmp
arpl
jns
dec
lds
add
sbb
sbb
lahf
sub
fmul
cmp
xchg
scas
xchg
sbb
add
jle
jmp
xor
push
jecxz
cmp
pop
int
aas
xchg
cmp
push
cmp
cmpsb
jnp
mov
clc
pop
fcompl
mov
es
repz
and
adc
xchg
outsl
dec
jb
cmp
sbb
lea
xor
xor
and
ja
xor
cmp
repnz
xchg
sbb
push
cs
mov
cli
out
mov
push
shll
and
xchg
jns
adc
fsubr
out
cltd
mov
leave
je
lahf
lcall
jmp
xor
mov
addl
push
das
sub
js
jp
cwtl
push
push
outsl
jnp
mov
inc
dec
aas
xchg
fsubs
mov
mov
pop
inc
adc
pop
xor
outsl
scas
cld
adc
test
pop
pop
ror
mov
mov
rcl
pop
outsb
adc
push
add
push
data16
gs
jnp
stos
xor
or
lods
sub
cmp
imul
push
jae
lcall
xor
es
add
xchg
das
cmp
ficomps
sbb
dec
loopne
sub
and
lds
cmc
jmp
xor
fmuls
xor
sbb
fwait
notrack
leave
in
pop
or
mov
sub
sbb
movb
repz
imul
in
mov
pushf
mov
add
mov
arpl
cmp
sub
iret
das
cwtl
mov
add
imul
xchg
and
cli
jnp
repnz
sbb
subb
lret
fs
and
inc
in
mov
mov
xor
mov
jmp
xlat
rcl
aad
vmovapd
scas
dec
fiaddl
js
xor
push
cltd
push
mov
test
sahf
stos
test
dec
sub
pusha
ret
aam
rorb
gs
sub
jl
pop
lahf
out
mov
out
movsb
mov
dec
sti
pop
out
jge
jmp
xor
aam
push
ds
xchg
sub
mov
inc
ss
push
outsl
addb
cmpb
ret
lea
or
rolb
cmp
ficoml
and
outsl
push
lret
in
add
mov
xor
dec
fsubs
cmovae
aas
ficompl
shll
xor
popa
js
lcall
adc
sub
popf
jns
out
xor
xchg
adc
cwtl
xchg
sbb
jge
or
scas
popa
sbb
out
pop
movzbl
imul
sahf
outsl
call
les
pop
cmp
jmp
imul
push
mov
pop
mov
jl
repz
or
loope
insb
daa
pop
adc
lret
adc
push
negb
adc
sahf
stc
lock
cmp
mov
jb
push
lds
gs
imul
jno
es
jmp
cmp
jge
xchg
icebp
lds
mov
dec
icebp
dec
or
test
inc
lods
xchg
cmpsl
rcll
jno
ja
enterw
xchg
push
fucom
popa
movsl
dec
push
int3
mov
negl
pop
jae
fstps
repz
xchg
jmp
push
pop
js
jb
int
cmp
repz
sbb
loop
into
cmp
lahf
mov
mov
sahf
sbb
inc
inc
jp
xchg
cmpsb
push
sbb
adc
and
add
pushf
into
jle
xor
mov
pop
icebp
sar
cmc
sahf
loopne
xor
into
fisubl
addr16
inc
inc
pop
xchg
mov
into
push
pop
fldt
ret
popa
arpl
cmp
stos
jno
sbb
push
into
shr
pop
das
inc
lods
xor
ret
mov
jo
ljmp
jnp
add
cmp
loop
clc
addr16
sbb
stos
dec
push
or
mov
outsb
mov
or
mov
cwtl
lahf
lods
adcl
adc
stos
or
dec
add
frstor
or
fwait
inc
pop
js
xchg
ja
and
mov
mov
mov
jg
sbb
or
ret
adc
mov
sahf
out
add
frstpm(287
and
into
mov
movsb
mov
cmp
push
sub
jns
xchg
lahf
push
jl
test
pop
sub
or
stc
xchg
cmpsb
fsubl
les
outsl
cmpsl
cmpsl
outsb
movsl
repz
mov
push
sbb
insb
sbb
pushf
dec
lods
lcall
mov
xlat
fs
cmp
ds
imul
hlt
xor
xor
add
add
div
mov
movl
cmp
je
movl
lea
mov
mov
jmp
aas
aas
iret
iret
xlat
xlat
fists
push
emms
mov
js
jle
js
push
cmp
pop
adc
jge
addl
cltd
mov
repnz
popa
mov
fldcw
call
rorb
mov
and
jl
faddp
or
push
mov
cmp
das
cmpsb
mov
mov
outsb
cli
push
mov
je
lods
repnz
cmp
dec
fstps
cmp
testb
push
or
insb
lea
push
jb
cmc
scas
inc
js
cmp
je
in
lret
push
mov
mov
and
push
int3
jb
sbb
xchg
pusha
push
adcb
out
movsl
outsb
scas
icebp
cs
xor
sti
add
mov
inc
sti
xor
mov
push
xor
aam
mov
add
mov
shrl
inc
jmp
cmp
add
cli
cltd
dec
jl
mov
cmp
mov
and
xchg
out
xchg
mov
fwait
subl
aas
mov
cmp
xchg
and
cmp
scas
xchg
or
loope
xchg
pop
sahf
adc
jmp
dec
enter
push
je
push
repnz
stos
movsb
mov
fidivrs
mov
adc
jne
aad
add
in
push
iret
cmp
test
pop
daa
les
push
cld
out
aas
repnz
bnd
push
cmp
sub
stos
icebp
mov
dec
sub
xchg
int
mov
insb
lods
xor
cltd
nop
outsb
lahf
cmp
push
les
xchg
dec
enter
stc
cmc
push
addr16
fcompl
inc
or
dec
ss
dec
cmpsl
mov
dec
xchg
call
or
pop
cwtl
ds
ds
popf
call
push
mov
movsb
bound
mov
mov
xor
jg
popa
out
mov
sub
dec
mov
arpl
stc
inc
and
xor
jp
dec
enter
cmp
je
dec
mov
or
xor
xchg
test
push
cltd
pusha
inc
xlat
popa
in
movsb
lret
push
pushf
incb
push
inc
loope
cmpsb
lds
jo
dec
lret
cmp
clc
ret
leave
sbb
xor
sbb
mov
push
mov
or
inc
mov
out
out
insb
sbb
pop
cli
xchg
pop
adc
je
pop
pop
add
outsb
and
lock
mov
stc
lahf
or
xor
fadd
sub
mov
jp
lock
push
lret
xlat
inc
xor
pop
cli
lds
mov
inc
stos
dec
cmpxchg8b
dec
fsqrt
push
pop
cmp
jg
rorb
insl
in
mov
test
jle
in
fs
aaa
aad
cmp
fimull
arpl
cmp
sub
xor
pushf
mov
ficompl
pop
xchg
dec
jae
pop
insb
mov
lcall
imul
mov
mov
jmp
sarl
fcmovne
mov
fsubr
sbb
js
je
js
push
sbbb
repz
mov
imul
add
adc
andb
adcl
out
cmp
cmp
cli
subb
adc
sub
lahf
mov
xor
out
xor
mov
and
jl
fwait
jno
adc
les
rolb
insb
fimuls
jg
mov
neg
stos
sahf
dec
out
addb
or
outsl
pusha
push
call
xchg
fidivrs
rcll
jae
icebp
jnp
xchg
aad
je
or
sub
outsl
dec
call
in
inc
sub
adc
mov
xchg
xchg
in
mov
xor
sbb
dec
pushf
cmp
push
push
add
xor
jno
aas
sub
or
jbe
sub
subl
mov
xchg
lods
aaa
inc
in
or
mov
stos
add
push
pop
mov
pushf
loope
divb
cmp
notl
xlat
mov
jge
cltd
fbld
sub
roll
in
mov
movl
jb
inc
addr16
arpl
cs
lahf
inc
push
mov
jmp
lahf
faddp
mov
popf
sbb
dec
fldl
ljmp
mov
lock
outsl
sbb
add
leave
mov
and
cli
les
jle
in
add
ja
push
xchg
or
mov
inc
and
fmuls
arpl
inc
cmp
cmpsb
aad
push
je
mov
clc
inc
cmp
addl
stos
dec
jg
test
pusha
inc
dec
sarl
lahf
jg
cs
xor
jp
sub
sbb
xor
mov
cmp
mov
ds
inc
ljmpw
fnsave
push
imul
pop
sbb
inc
stc
out
roll
adc
ds
mov
push
test
inc
sbb
dec
hlt
push
or
adc
dec
adc
js
or
negl
mov
cmpl
stos
dec
addr16
outsb
jae
dec
mov
popa
ret
insb
mov
scas
aas
jae
mov
cltd
sbb
call
mov
xchg
or
sub
shll
sbb
ret
xor
outsb
lret
jl
loop
fwait
add
loopne
dec
stos
pop
jg
pop
jne
mov
out
sahf
addps
mov
lods
dec
push
cmp
inc
lods
and
fs
mov
jmp
ljmp
lds
arpl
lcall
add
dec
fidivrs
icebp
ret
bound
xchg
test
ljmp
testl
xor
xchg
sub
or
iret
and
test
andb
jmp
add
jbe
xchg
sub
add
add
rol
fcmove
rcl
pop
mov
lret
leave
into
mov
je
js
mov
cmp
jns
and
mov
pop
pop
std
repz
imull
ss
mov
sbb
inc
lret
enter
loope
mov
mov
or
cmp
cmp
cmp
stos
jg
adc
inc
jle
loope
and
jno
into
cmp
pop
cmp
mov
test
cmp
movsb
cmpsl
mov
loope
outsb
cs
dec
shl
push
leave
adc
int
jns
clc
mov
push
jmp
mov
xor
mov
and
jmp
jmp
cmpsl
outsb
js
pop
push
addl
push
cli
dec
lds
pusha
and
lcall
mov
xchg
pop
dec
addr16
push
dec
adc
push
sti
ror
movsb
cmp
popf
mov
dec
xor
pushf
jle
push
xchg
adcb
lds
leave
xchg
fsts
js
cmp
ror
push
sub
mov
mov
in
xchg
mov
or
int
push
ret
in
pop
mov
push
lods
or
mov
xchg
jae
and
lahf
xor
pop
dec
cld
adc
adc
add
jno
add
sarb
stos
mov
mov
pushf
je
test
adc
cld
inc
push
sti
dec
mov
lock
push
inc
push
pop
and
pushl
sbb
insb
andl
mov
add
xor
mov
push
neg
sbb
add
sub
aas
je
test
popa
jmp
xor
les
es
cmpsb
sub
mov
loopne
cmp
negb
imul
and
imul
mov
push
jg
add
xor
scas
loope
mov
xorb
mov
mov
mov
push
sbb
add
mov
jb
mov
aam
jne
fdiv
popf
lods
ret
rcr
cmpsl
shr
test
or
fsubrp
pop
mov
pop
xlat
out
imul
or
sub
dec
pop
or
leave
pop
repnz
xchg
cld
aam
add
out
lods
mov
stos
mov
cs
mov
popa
pop
mov
push
out
orl
pop
dec
jne
adc
aas
aam
mov
and
or
push
and
cmp
call
or
js
pop
xor
jl
scas
mov
cmpsl
dec
sbb
mov
jg
lock
popf
sbb
dec
xchg
cmc
nop
icebp
out
pushf
inc
aad
jns
ret
pop
ret
or
pushl
xchg
inc
imul
test
add
add
popf
sbb
pusha
mov
xor
add
pop
pop
pop
leave
ret
mov
add
jmp
leave
xlat
ret
rcl
leave
fldcw
sbb
mov
je
js
mov
inc
je
inc
loop
jp
mov
inc
add
push
xlat
push
ja
icebp
test
negb
xchg
clc
std
mov
loope
fcoml
jb
push
dec
stos
mov
repz
lahf
xchg
das
fidivl
icebp
jmp
mov
loope
dec
inc
jb
hlt
adc
push
sbb
mov
insl
sbb
mov
call
adc
mov
adc
jmp
loope
out
xchg
stos
insb
test
or
mov
mov
out
mov
dec
cwtl
jecxz
pushw
decb
jb
sbb
jle
loope
test
mov
mov
divl
addb
dec
ret
aaa
xor
xor
sbb
mov
jge
cltd
lods
pop
ret
imul
je
push
sub
fwait
rcr
ljmp
inc
fisttpl
push
pusha
adc
les
cmp
xchg
push
add
push
mov
pop
je
push
jnp
push
lret
into
clc
or
cmpsl
push
push
push
mov
mov
imul
push
movsb
jb
bound
add
hlt
pop
negl
in
test
popf
push
fcoms
cmp
mov
movsb
add
out
dec
pop
clc
push
jge
pop
aas
not
adc
mov
xor
popf
mov
adc
sbb
cmpl
adc
xchg
test
shll
mov
jae
cltd
push
repz
adc
out
out
lcall
scas
cmpsb
mov
mov
lcall
jmp
fdiv
das
pop
sub
mov
out
pop
sub
addl
pushf
loopne
ss
sbb
xor
push
sub
cmp
lods
popf
fwait
ja
jp
inc
test
push
cmp
mov
imul
dec
cmp
testb
imul
out
xchg
jg,pt
dec
sub
pusha
sti
pop
mov
inc
pop
and
leave
insl
enter
jo
jnp
lret
mov
mov
adc
outsb
scas
sahf
mov
mov
pop
in
push
ja
mov
ja
fadds
xor
decl
dec
imul
test
bound
ja
add
add
mov
stc
gs
outsl
mov
hlt
in
sub
cld
fstpt
and
inc
mov
test
ljmp
pop
lods
mov
js
lret
pmaddwd
xor
jb
lret
jle
cwtl
lock
pop
push
mov
add
ds
mov
cs
jecxz
xor
push
sub
mov
movsb
and
mov
rolb
cmpsl
push
fwait
push
cmp
movsb
sbb
inc
cmp
je
mov
andl
jmp
jmp
into
aas
ds
rcl
add
stos
rcl
mov
js
je
js
imul
clc
sub
xor
jo
push
popa
andl
cmpsl
movsl
pop
push
ret
sub
inc
and
and
and
xchg
ss
divb
or
cmp
mov
jg
jmp
in
xor
jno
mov
test
xchg
add
pusha
clc
cmp
insl
jge
or
push
push
nop
jns
mov
test
iret
ja
lea
movsb
pop
clc
sub
stos
adc
test
repz
mov
sahf
lods
jbe
push
xchg
inc
js
xchg
fists
dec
icebp
mov
mov
adc
jge
and
jae
and
or
cltd
lock
stos
push
ficoms
and
push
in
or
nop
push
vmovdqu
adc
loope
add
ss
popa
push
sahf
enter
in
sub
mov
xchg
data16
ficoml
ds
jo
fnstsw
loope
ret
mov
stc
cltd
jnp
fst
xchg
faddl
mov
jns
sbb
sub
into
inc
test
xchg
jecxz
dec
mov
adc
cli
stc
lods
sti
or
call
ret
pop
aaa
ret
cmpsl
in
cld
ss
pop
iret
or
jns
and
test
xchg
or
mov
iret
mov
sbb
dec
pop
ret
enter
movsb
call
pop
mov
fsubr
mov
mov
jecxz
push
push
jbe
cwtl
xor
sbb
scas
int3
push
lret
mov
sbb
aad
xchg
out
xor
inc
jmp
xchg
into
add
sbb
adc
ss
push
scas
cmp
xor
adc
negl
inc
fnstcw
sbb
mov
cs
ds
push
sub
test
lea
inc
sub
cs
pop
sbb
jp
xchg
xchg
jo
ret
xchg
push
lea
sbb
ljmp
faddl
cli
mov
jb
dec
aaa
sti
or
cmpsl
dec
stc
inc
ret
cmp
lods
cmpsl
push
test
rorb
insl
push
jecxz
repnz
mov
rolb
cld
stos
mov
ret
mov
pop
ja
inc
lods
dec
xor
xor
mov
sbb
icebp
lock
arpl
and
test
iret
or
aas
jecxz
stos
call
int3
sarl
fstpl
stos
mov
mov
fimull
xchg
cmpsb
movsb
test
xchg
push
or
cmp
mov
or
in
sti
pop
lods
ja
test
xchg
scas
sub
mov
insb
push
and
cmp
fstl
xchg
inc
adc
pop
cmp
mov
push
call
jle
cli
je
mov
xorl
jmp
mov
jmp
ds
ror
rcl
fisubrl
xchg
jge
or
push
xchg
js
je
js
fwait
int3
add
jb
mov
insl
and
aaa
lds
jge
and
mov
cmp
fsubl
rcll
inc
imul
clc
jae
and
or
fisttpll
dec
mov
cmpsl
fidivrl
dec
mov
out
insl
fcmovb
sahf
sbb
je
mov
inc
adc
es
push
addb
push
add
aad
cld
negb
mov
add
mov
testb
push
pop
pushf
insl
sub
bound
ficomps
insb
jb
popf
lock
iret
cmp
pop
mov
xor
mov
pop
mov
or
aaa
cmp
mov
lods
and
or
push
jnp
popa
dec
xchg
jnp
xchg
adc
movsb
xchg
mov
jae
adc
addr16
rolb
sub
jno
repnz
fsts
add
cmp
xchg
xchg
cmp
pop
inc
cmp
inc
scas
popf
dec
nop
and
jl
scas
xchg
adc
dec
mov
repz
jbe
cmpb
adcb
aad
jae
jmp
mov
cli
out
popf
jne
cmp
icebp
loop
push
pop
cmp
ret
push
sysexit
push
pop
ret
pop
dec
dec
shll
or
rcrb
inc
lret
out
data16
shr
cmp
jne
ret
mov
mov
addr16
lock
gs
mov
mov
sarb
xchg
stc
in
jle
mov
es
xchg
ret
sub
pusha
jne
scas
lods
xor
ret
pop
imul
in
or
and
push
sub
ljmp
push
out
scas
jp
add
cmp
lcall
das
out
pop
pop
xor
arpl
ljmp
adc
and
or
fisubrl
inc
jns
push
sbb
lods
ljmp
cmp
aam
dec
xchg
adc
jo
ret
fs
pop
push
mov
mov
loope
inc
out
add
xchg
jecxz
stos
shlb
js
mov
in
pop
dec
out
gs
or
in
jbe
sbb
sbb
sub
es
fsubs
adc
test
mov
lcall
rorl
adc
sbb
or
and
or
mov
push
rcrl
pop
jbe
cmpsl
xchg
in
push
inc
push
lock
into
sbb
jo
lcall
pop
loope
cld
xchg
movsl
out
xchg
mov
dec
rcrl
js
mov
dec
and
cli
cmp
push
jge
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
jmp
int3
into
lret
ror
ficoml
cmc
in
push
sarb
xchg
js
je
js
stc
jl
popf
inc
and
pop
add
bound
sbb
cmp
cmp
stc
fldcw
push
iret
ds
das
push
mov
call
mov
in
test
adc
mov
sub
pushf
xor
mov
test
gs
stos
enter
sti
xor
adc
test
bound
pop
mov
mov
push
mov
mov
or
bound
xor
and
mov
add
xor
mov
sbb
lock
cmpsb
sub
mov
or
add
les
ds
filds
rclb
sub
inc
sub
adc
pusha
cmp
adc
ss
out
sub
push
loope
mov
sub
jmp
lret
enter
push
addr16
dec
mov
push
pop
cmp
imul
fisttpl
jae
aam
fbld
mov
mov
sub
rolb
mov
push
fdiv
inc
repz
shlb
sti
inc
dec
fidivrl
fnsave
leave
mov
xchg
int
xchg
int
push
jb
and
add
js
into
mov
sbb
xor
test
and
adc
js
add
sti
xchg
xchg
xchg
hlt
movsb
pop
cli
pusha
fdivs
fistps
mov
inc
shr
push
test
in
xchg
mov
xlat
cmpsb
addr16
sub
push
cmp
rcll
pop
ljmp
adc
dec
aaa
inc
mov
outsb
xor
sub
rcrb
cmp
nop
out
iret
enter
fiadds
fwait
inc
add
inc
adc
out
xchg
push
lds
push
jno
adc
xor
int
fwait
mov
pop
jp
loopne
jo
bound
pop
jge
and
fidivl
lcall
int
xor
aam
test
dec
push
outsl
mov
ss
fmulp
adc
inc
pop
icebp
lea
lock
dec
jp
mov
xchg
mov
ds
push
cwtl
mov
mov
jge
out
in
test
sahf
out
mov
jge
or
jo
aam
repz
ret
jnp
enter
or
fwait
add
jne
shlb
cmp
add
jnp
out
loop
fcmovne
gs
push
mov
aad
dec
dec
div
aaa
inc
inc
addr16
addr16
mov
ret
jp
mov
or
fucomip
mov
xchg
sbb
mov
jae
aad
jecxz
popa
push
scas
add
jne
lea
push
mov
loop
out
stos
loop
pop
mov
mov
mov
jmp
xlat
cmp
ds
js
adc
rolb
js
jle
js
jns
lret
sub
enter
and
or
shrb
jmp
adc
sti
jmp
arpl
push
jns
cmp
ss
or
add
cmpsb
push
fmull
arpl
xchg
mov
cmp
cltd
fldt
push
into
push
rcr
imul
ds
mov
fistpl
inc
fstps
pop
add
cs
xor
jle
fnstenv
dec
popf
clc
inc
mov
outsl
sub
mull
pop
xchg
mov
mov
enter
out
xchg
adc
ds
stos
aaa
sub
cmp
or
pop
out
mov
mov
jp
and
lock
mov
orl
popl
xor
jne
aas
inc
pop
jbe
fstpt
leave
sub
mov
add
push
xor
sbb
sbbl
stos
jmp
pop
jnp
ja
iret
mov
push
jg
in
push
adc
or
xor
adc
inc
pop
decb
daa
cmp
jo
adcb
cmp
test
sbb
scas
in
movsb
fldl
dec
cmpsb
add
cmc
push
scas
mov
cld
test
insb
in
xchg
jne
cmp
pop
jle
push
icebp
pushf
push
sbb
out
mov
or
mov
rclb
repnz
and
lcall
outsl
lret
cmp
call
outsl
jmp
gs
push
sarb
jbe
les
xchg
cmp
shlb
fnstcw
sti
adc
cmc
aad
jns
movsl
dec
mov
dec
cmc
btr
jnp
push
mov
lods
pop
mov
lcall
mov
mov
cmp
mov
push
dec
adc
add
fcoms
or
in
mov
sub
insl
aam
jp
mov
enter
notl
into
fwait
cwtl
pop
addr16
andl
or
pop
icebp
fs
push
fs
sub
inc
scas
in
push
lea
push
xor
rolb
sbb
xchg
inc
stos
pop
push
stos
into
mov
add
in
hlt
cli
sub
dec
dec
test
insl
mov
lods
leave
push
test
mov
daa
fstpt
pusha
pop
adc
sub
ja
pusha
sbb
add
add
xor
push
push
mov
add
pop
int3
int3
mov
lea
lds
aaa
push
arpl
cld
aas
xchg
inc
push
push
popf
push
sar
aaa
fidivs
or
xor
or
pop
jge
mov
int
sub
mov
insb
lods
jbe
in
mov
mov
mov
cmc
or
int3
xchg
xor
sbb
cs
stc
addr16
xor
add
movzwl
mov
xor
lea
add
jmp
cmp
fcmove
inc
lods
in
cwtl
js
je
js
shll
popa
adc
rcrb
icebp
into
subl
sub
shrl
mov
nop
cmp
push
pop
inc
test
mov
pushf
jp
call
insl
jecxz
adc
fsubs
mov
fdivrs
out
push
ret
cmpsl
ror
in
imul
fwait
inc
and
jo
mov
daa
cmpsb
fcompl
je
inc
mov
inc
add
add
negb
jae
fistps
js
les
or
mov
shrl
cmp
jle
lock
and
sub
xor
push
sub
dec
cmp
aaa
btc
aaa
popa
pop
push
sub
fwait
out
push
sub
sbb
push
push
mov
pushf
jo
into
pushf
xchg
mov
fildll
in
stc
push
mov
mov
jne
das
push
xchg
std
cli
sbb
lahf
cmpsl
aad
mov
mov
cmpsb
push
sbb
rcll
hlt
cld
repnz
lock
loope
cmp
mov
push
add
out
mov
or
inc
out
pop
fmull
insl
mov
jno
and
or
sbb
fnstsw
stos
fs
rcrb
xchg
sub
xor
add
sbb
lods
scas
insb
out
xchg
push
sub
add
add
aaa
repnz
jecxz
stos
push
lods
sbb
repnz
jne
fnstcw
and
stos
dec
push
sbb
or
mov
sbb
fisttpl
mov
mov
pop
sbb
add
clc
inc
jo
pop
push
movnti
imul
ljmp
sbb
xor
pop
in
call
push
cmp
out
in
xchg
js
or
or
jnp
dec
arpl
xchg
push
jge
nop
adc
pop
in
fdivrl
pop
fwait
imul
vfrczpd
loope
push
add
mov
mov
sbb
cmp
xchg
mov
jg
pop
jmp
jne
xor
sub
xor
je
xchg
mov
and
addr16
push
sub
xchg
pusha
call
dec
mov
sub
push
in
cld
push
push
pusha
sti
adc
out
clc
inc
js
inc
push
pop
cwtl
ror
lahf
mov
xor
rolb
pop
pop
in
hlt
adc
mov
addr16
sbb
testb
scas
adcb
insb
xchg
adc
int
into
cmpsl
mov
push
add
sub
pop
lods
mov
mov
pop
mov
sub
jne
loopne
lds
pop
outsb
out
popf
jmp
adc
xor
rcl
inc
push
adc
imul
repz
clc
andb
shrl
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
jmp
rol
leave
rcr
mov
cmp
js
jle
js
fdivs
lea
sub
js
orb
dec
sti
std
sbb
aad
ja
pop
into
push
jnp
jmp
dec
xor
and
sub
mov
loope
fs
cmp
pop
lahf
push
jb
and
xor
movsb
stos
popa
nop
xchg
aad
mov
mov
xor
xchg
test
mov
into
jo
pop
adc
es
iret
mov
andl
cmp
ja
dec
lret
xchg
inc
jb
push
mov
dec
inc
fcmovbe
mov
cli
and
aam
aaa
push
std
or
mov
fst
ret
mov
add
inc
popa
add
jg
stc
mov
lret
or
test
daa
ficompl
inc
lret
inc
dec
cs
stos
dec
movsl
push
sbb
pop
xchg
lret
cwtl
repnz
in
adc
push
iret
loope
loop
adc
mov
dec
jne
push
pop
mov
aad
nop
fstl
sbb
arpl
mov
cmp
sub
mov
jge
add
scas
ds
push
outsb
lahf
scas
xor
lcall
pop
jb
loop
xor
sub
bound
ja
popf
push
ljmp
adc
repz
aas
out
jecxz
jnp
push
jb
push
adc
or
testb
add
imul
mov
fisubrl
pushf
jl
xchg
pop
xchg
and
jo
out
in
cmp
inc
mov
stos
sbbl
test
es
sub
sub
loop
jl
jecxz
pop
enter
and
mov
jg
stc
das
push
jae
xlat
jnp
or
add
pushf
pop
mov
adc
ror
popf
dec
jecxz
cmp
xchg
out
loopne
inc
cmp
cmp
xorl
hlt
adc
pop
inc
stos
cmp
push
js
mov
inc
xor
in
dec
iret
mov
xorl
dec
inc
mov
jl
push
lods
insb
mov
cltd
movsl
test
push
cmc
mov
fsubrs
movsb
mov
jg
ret
mov
inc
bound
lods
and
fwait
inc
pop
fwait
vpaddw
push
xchg
les
add
test
cmp
in
repz
push
pop
xchg
push
inc
mov
mov
inc
jp
ljmp
add
xlat
jmp
mov
out
push
test
and
shll
popf
dec
das
push
fimull
jecxz,pn
xchg
jo
ss
mov
or
popf
inc
mov
shrl
imull
dec
mov
xor
jbe
mov
into
sub
lock
dec
push
mov
popa
mov
cmp
jmp
rol
ror
aad
xchg
mov
aad
repnz
mov
js
or
ds
or
enter
cmp
push
add
push
fimuls
ret
pmaxub
mov
inc
sub
ja
enter
lea
mov
mov
icebp
rcrb
xor
push
addr16
xchg
or
inc
std
cmc
ss
test
js
rep
mov
loop
jp
into
mov
insb
push
cmp
addb
push
mov
out
push
jg
aas
add
adc
sbb
push
mov
jno
jge
in
aas
idivl
cmp
sub
mov
in
imul
lods
call
arpl
inc
cli
add
mov
lock
push
sahf
cli
dec
das
testb
daa
fwait
xlat
pop
add
frstor
imul
xchg
cmp
xchg
lahf
outsb
pop
sahf
lods
mov
addr16
nop
scas
jns
mov
mov
push
lods
insb
jl
shlb
daa
mov
sbbl
imul
xchg
push
push
into
cmpsb
push
push
xchg
jl
cmpsb
es
inc
adc
pop
mov
sub
into
add
test
mov
mov
bound
dec
sub
jecxz
mov
andb
adc
loopne
adc
out
test
les
sbb
pop
fadd
ss
in
add
add
adc
xor
push
das
fisubrl
fcomps
mov
mov
scas
sub
lret
shlb
enter
xor
call
jbe
mov
in
xlat
mov
jne
ja
inc
push
push
in
xchg
dec
adc
jnp
xchg
mov
rcll
dec
cmp
inc
and
mov
inc
in
arpl
enter
sbb
test
stc
mov
jge
ficoml
inc
sub
dec
je
sbb
iret
and
aad
xchg
add
popf
icebp
xor
sbb
jno
dec
fistpl
fisttpll
xchg
addr16
lock
cwtl
push
mov
cmp
in
mov
int
lds
rep
xchg
dec
adc
or
xchg
add
repnz
jns
pushf
cmp
jnp
push
sub
repnz
dec
cmp
add
add
fcompl
in
rcl
fucomi
inc
fsubrs
cs
inc
push
popf
iret
not
cmp
mov
pop
fistpll
in
addr16
push
jge
fnstcw
sub
xchg
jp
mov
mov
add
sbb
jg
fucom
outsb
adc
inc
xchg
xchg
push
adc
das
fisttps
je
pop
test
pop
loope
test
addr16
mov
jmp
push
mov
sub
sbbl
mov
xorl
jmp
ror
mov
fcmovbe
push
aad
pop
in
lret
sub
js
rolb
lods
cs
inc
cld
pop
mov
pop
inc
test
mov
inc
scas
filds
lcall
sub
xchg
jl
lret
in
push
xor
mov
pop
test
mov
scas
loope
popf
daa
cmpsl
repz
xchg
int3
in
pop
push
imul
bound
and
lahf
adc
or
and
mov
mov
mov
cmp
pop
push
xor
loope
adc
cmp
mov
shlb
iret
ret
ja
pop
jge
push
sbb
lods
dec
mov
push
loopne
pop
std
shlb
ret
ss
jo
fcomip
rcrl
aad
add
mov
mov
adc
mov
aad
hlt
out
mov
push
sub
xchg
jecxz
cmp
cmc
add
test
fcomps
aas
inc
mov
scas
nop
stos
adc
xor
outsl
orl
mov
cmp
pusha
fpatan
shr
sub
push
xor
daa
or
or
sbb
mov
lcall
leave
mov
divl
jg
push
lea
push
sbb
mov
loopne
push
jmp
xchg
jp
arpl
pop
pop
inc
testb
inc
or
cs
loope
fldenv
or
pop
data16
es
xorl
pop
and
and
lea
xchg
aas
sub
sub
hlt
add
sarb
or
or
clc
cmp
inc
sti
inc
and
push
sub
sub
dec
test
and
pusha
rcr
mov
call
fsubr
adc
jae
jmp
mov
and
sbbb
out
gs
dec
lret
inc
repnz
dec
dec
jmp
push
mov
outsb
cmpsl
adc
enter
and
push
inc
push
imul
mov
mov
gs
push
jno
xchg
mov
sti
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
movzwl
xor
mov
xor
or
mov
adcl
add
subl
push
mov
adcl
mov
negl
xor
jmp
int
iret
lret
and
push
pusha
lock
js
jle
js
lahf
aaa
aas
cmp
cmp
mull
out
out
out
lea
popf
stc
pop
in
loopnew
icebp
hlt
pop
push
fnstenv
lods
call
adc
add
cmp
push
mov
dec
mov
add
std
inc
lds
jle
popl
or
inc
fidivrl
test
fcmovu
mov
adc
call
sub
xchg
xchg
movsl
or
sbb
or
in
test
icebp
aaa
lds
jne
and
inc
ja
cld
mov
loopne
fs
nop
shr
call
jmp
pusha
or
xchg
call
jns
dec
in
cmc
inc
sbb
and
xchg
lahf
pop
pusha
ret
add
adc
clc
inc
fisttps
into
sub
stos
loopne
mov
std
mov
xor
xchg
jns
outsb
or
mov
aad
pop
sub
pop
enter
fucomip
loope
cltd
orb
mov
inc
or
jle
mov
sub
and
out
adc
pop
xchg
pop
fcompl
cld
int
xchg
lods
jbe
les
inc
ret
pop
imul
push
cmc
bswap
or
mov
and
sbb
aad
ss
xor
jle
test
adc
enter
int3
push
pop
scas
repz
decl
int
movsl
lret
aam
mov
into
into
repnz
in
mov
loopne
stos
sub
rorb
xchg
mov
cli
mov
or
into
xor
mov
je
pusha
ss
roll
gs
sub
fistps
add
jp
jl
call
add
rol
push
fisttpl
xor
inc
movsb
push
lcall
mov
pop
scas
insl
ljmp
lea
jl
rol
and
push
rorb
jb
jl
dec
outsb
lcall
dec
cmp
rclb
idiv
je
mov
xchg
sub
sub
ja
cli
mov
pushf
enter
dec
add
jle
mov
inc
hlt
clc
test
xchg
inc
add
sti
jmp
cmp
jne
mov
mov
mov
mov
mov
movl
mov
mov
movl
jmp
movl
jmp
leave
ret
enter
fld
int
fdiv
push
mov
pushf
stos
js
xor
cmp
lea
or
jo
pusha
pop
inc
pop
pop
add
divb
xchg
cmp
dec
lea
shll
inc
arpl
loope
dec
jne
cmpsb
inc
inc
ss
in
sbb
push
jae
jp
int
mov
mov
int
out
or
outsl
fisttpl
xor
jl
cmp
or
ret
into
sbb
sbb
dec
cmpsl
scas
sbb
imul
dec
aam
repnz
ss
cmp
xchg
es
and
outsb
imul
sub
hlt
movb
jle
mov
lahf
loopne
and
lret
pop
and
or
and
mov
repz
iret
xchg
fs
aam
das
pop
add
lahf
insl
adc
xchg
jp
push
xchg
inc
lret
repz
hlt
jae
xlat
fidivs
stos
pop
xor
in
mov
mov
cltd
icebp
jae
arpl
fisttps
pushf
cld
push
inc
add
lret
cmp
dec
dec
add
adc
lcall
xchg
jb
shrb
out
ret
stos
adc
sbb
push
or
cmp
mov
mov
movq
and
cmpsl
sbb
or
sbb
int3
int3
jae
int
in
popa
jnp
aas
sti
std
arpl
cmp
cmp
scas
or
and
or
mov
ds
mov
xchg
fstps
push
lahf
push
or
ret
cmp
adc
fimull
push
jbe
aaa
sbb
aam
dec
js
xchg
out
mov
ljmp
sub
adc
add
push
lods
aaa
mov
push
cs
rorb
push
call
out
clc
cmp
lods
xor
outsl
lret
mov
int
xor
out
cmpl
daa
scas
adc
sub
out
hlt
js
loopne
jle
int3
outsb
push
cmp
lea
lods
leave
xchg
jbe
pop
sti
and
mov
jecxz
dec
adc
lock
out
mov
loop
cmp
movl
jne
and
jmp
int
into
aad
lea
fisttpll
test
js
push
push
push
iret
or
add
inc
into
push
inc
lcall
sub
out
push
sbb
orb
je
xor
pop
ljmp
push
repnz
sbb
jbe
push
aam
pop
and
lds
arpl
cmp
mov
mov
aad
jb
sub
aas
icebp
int3
out
je
loop
add
and
ds
xchg
stc
roll
mov
inc
mov
leave
nop
ds
sbb
mov
dec
xchg
sbbb
jns
push
arpl
cmp
push
fldcw
lea
add
mov
add
mov
mov
jp
adc
adc
loopne
or
mov
add
and
mov
call
cmpsl
pusha
lret
addr16
xchg
sub
push
nop
jge
negb
dec
gs
xor
test
into
outsl
shlb
xchg
gs
jne
pop
repnz
int
mov
mov
sbb
sub
sbb
int
mov
jnp
fisubs
xchg
jp
push
ljmp
cwtl
mov
fcmovb
xchg
sahf
mov
pop
and
je
jmp
int
out
adc
sub
ss
negl
mulb
ret
pop
sbb
adc
dec
movsb
ss
subb
jg
in
int3
sbb
mov
add
add
jmp
addb
movsb
jl
or
cmpsb
nop
xchg
jl
add
pop
out
popl
jbe
pop
int3
fcmovbe
jne
pop
dec
mov
mov
pop
loope
jle
out
mov
call
and
xchg
push
add
jl
or
int3
xor
lods
sbb
xor
jne
aaa
xor
sbb
push
movsb
pop
pop
imul
pop
jne
xchg
in
ds
pushf
jge
test
mov
xor
pop
lea
add
outsb
outsl
insl
xor
xchg
loope
andl
mov
sbb
mov
mov
xorl
sub
orl
push
adcl
mov
jmp
enter
ret
push
in
pop
dec
arpl
fistl
scas
js
xor
movsl
in
lock
xor
out
daa
incl
pop
xor
cltd
fs
jp
dec
mov
fisttpll
xchg
outsb
mov
fdivrl
mov
jg
adc
lahf
imul
mov
push
lock
shlb
jle
adc
adc
cmp
dec
ss
fs
fidivl
dec
pop
jns
shr
cmc
gs
jo
sub
mov
jno
fildll
imull
or
mov
lret
sarl
add
inc
pushf
mov
rcl
clc
daa
mov
inc
mov
push
mov
and
pop
or
sub
stc
xor
pop
neg
and
fwait
stos
sub
insb
pop
ret
aaa
aaa
or
dec
xor
push
mov
xor
in
in
adc
mov
sbb
pusha
scas
call
sub
ljmp
scas
out
push
fisttpl
jne
xchg
mov
in
cmp
cli
ret
add
mov
mov
mov
mov
les
sarb
xor
xchg
fimuls
or
jg
sarb
mov
or
lcall
inc
mov
fs
arpl
repz
test
fidivl
movsl
pop
pmulhw
rcrb
sub
dec
sbb
push
leave
sub
adc
mov
dec
fmull
sub
jg
testb
mov
jl
int3
arpl
scas
fmull
scas
stc
cmpsb
xor
clc
cmp
call
lds
and
dec
lahf
fisubl
push
ret
loopne
mov
xor
mov
idivl
stc
cmp
fidivs
pop
xchg
mov
mov
mov
mov
je
iret
cmp
mov
out
mov
xchg
mov
sar
leave
jl
inc
inc
pop
scas
inc
jmp
into
inc
mov
mov
mov
mov
push
sti
mov
jno
xor
out
test
jo
add
xlat
popl
inc
or
add
add
push
adcl
call
movl
incl
cmpl
movl
jb
movl
jmp
cmp
jne
sbb
movl
mov
mov
mov
mov
movzwl
and
mov
adcl
xor
jmp
rol
leave
leave
leave
leave
rcrb
inc
push
push
add
lods
js
xor
mov
and
cmp
pusha
ror
xor
sbb
and
ret
outsl
aad
aaa
js
sub
xchg
xchg
pop
inc
sbb
and
std
pop
adc
add
inc
inc
push
cli
dec
in
mov
rorb
loopne
test
add
iret
into
lret
lods
inc
lods
cmp
sbbl
popa
jp
push
rcr
xor
sbb
pop
or
jp
mov
cmp
pop
outsl
fmull
stc
push
jmp
or
outsb
cmp
or
sub
divl
jecxz
xor
divb
decb
mov
xchg
dec
xchg
lret
roll
or
xor
lahf
popf
and
outsl
xchg
outsl
aaa
and
mov
push
xchg
mov
jne
pop
adc
imulb
mov
xlat
push
push
pop
jecxz
mov
gs
mov
arpl
ljmp
sbb
adc
inc
lock
and
cltd
sbb
div
insb
xchg
lea
pop
sub
push
cltd
pop
mov
sbb
inc
imul
std
mov
push
pop
add
add
mov
sbb
dec
lcall
add
mov
js
loope
imul
rcll
std
cmp
inc
fildl
mov
test
jle
fwait
or
jmp
inc
or
nop
stos
hlt
js
pop
add
cli
mov
jmp
cmp
cmp
jmp
push
addr16
or
pop
or
sbbb
xchg
inc
inc
mov
addr16
int3
mov
pop
mov
lret
ret
jmp
enter
idivb
cmp
lea
jecxz
sbb
jp
lock
cwtl
mov
mov
les
call
or
negb
addl
in
js
adc
enter
rolb
fadds
dec
fbld
xor
add
pop
pop
jle
std
push
and
cmc
push
test
mov
add
add
mov
notl
lea
mov
mov
xor
add
mov
lea
push
mov
jmp
ds
roll
iret
mov
mov
js
xchg
dec
add
add
xor
in
jno
push
les
cld
subl
testl
les
cmc
fdivr
shrl
jp
push
push
jnp
stos
ficompl
inc
jne
fiaddl
in
fildll
stc
xor
fs
test
ljmp
push
dec
xor
pavgb
or
out
mov
add
add
sbb
dec
push
sbb
sbb
stos
xlat
inc
mov
jp
inc
je
or
xchg
add
xor
xor
subl
pushf
bound
mov
addr16
push
jno
dec
mov
pop
loope
pcmpgtd
loope
push
or
sbb
movsl
dec
arpl
movsb
aad
jge
mov
mov
sbb
mov
loop
add
bound
add
xor
or
adc
fisubrs
pushf
sub
icebp
adc
or
push
mov
dec
jns
ret
mov
jnp
test
cltd
data16
jl
lods
aad
jmp
nop
icebp
bound
inc
lods
mov
push
xorb
mov
adc
jns
and
imulb
sbb
adcl
jno
push
jb
pusha
push
cs
ljmp
js
xchg
push
sarl
lock
daa
xlat
pop
fsubrl
mov
xchg
das
imul
roll
cmp
mov
das
or
jae
dec
fisubrs
pusha
testl
inc
mov
adc
lahf
test
lods
fbstp
mulb
cmp
ljmp
enter
shll
push
das
inc
xchg
js
push
fs
or
push
jmp
stc
out
dec
ret
push
cmp
jecxz
pop
insl
push
jo
pop
mov
sub
pop
idivl
jecxz
test
cltd
insl
push
mov
xlat
mov
mov
push
loopne
adc
pop
sahf
out
mov
mov
out
sub
dec
lahf
pop
dec
cmpsb
inc
shr
jnp
jno
or
sbb
jb
movb
push
jmp
xlat
lret
fcmovu
aas
cmp
push
jb
or
inc
mov
js
jle
js
add
nop
sahf
xchg
dec
fidivrl
pop
pop
in
outsl
pop
jb
mov
ja
lret
das
ds
lods
xchg
or
int3
data16
adc
loopne
mov
scas
mov
ljmp
out
fisubs
jmp
jg
mov
lods
dec
xor
lcall
xor
push
jg
inc
push
icebp
pop
fimuls
aaa
in
fcmove
xchg
jle
dec
loope
sub
push
lods
dec
sbbb
push
movsb
sub
inc
sub
xor
pop
or
sti
lock
or
xchg
and
scas
ret
inc
xchg
dec
mov
dec
lods
xorb
mov
fs
mov
pop
xor
aas
mov
sbb
inc
adc
cmpsb
movsb
flds
fsubs
pop
dec
sahf
xor
jl
lea
jo
loope
jo
into
mov
js
push
clc
cmp
lcall
or
pop
push
ret
adc
jne
insl
fdivs
lods
xor
inc
fstl
ss
dec
leave
mov
add
dec
pushf
stos
cltd
imul
dec
clc
adc
mov
push
int3
hlt
sub
int3
repz
es
fiaddl
or
lock
jb
and
out
jp
dec
test
pop
in
sub
test
jg
inc
lea
orb
xor
sbb
lea
into
mov
mov
and
mov
movsl
cltd
pop
ret
das
sbb
jge
dec
stos
jb
incl
push
or
in
xchg
and
bound
test
sub
outsl
dec
jae
push
lcall
xorl
mov
mov
call
int
movsb
add
test
sub
adc
sahf
jnp
sub
ds
pop
jmp
lcall
pop
aas
sub
testb
movsb
add
or
mov
pop
xchg
jnp
or
loop
mov
push
pushl
call
jmp
cmp
jne
mov
jmp
sarl
ror
leave
dec
cmc
adc
mov
js
jle
js
aad
dec
sub
pop
out
pushl
or
lods
pop
xchg
add
fisubrs
stos
lret
fs
adc
lds
sti
push
test
movsl
stos
dec
pop
les
mov
or
xchg
rcrl
insb
mov
shrl
nop
jno
mov
movsb
dec
and
insb
stc
pop
inc
mov
imull
rorb
movsb
lret
aaa
inc
je
push
leave
pop
mov
pop
shlb
push
adc
or
sub
out
fadd
sub
out
aas
maxps
xor
iret
out
cmp
fdivrs
cwtl
mov
int3
scas
je
inc
ret
mov
jnp
mov
ret
jp
xchg
arpl
out
mov
push
pop
and
cmp
push
cmp
lds
jne
mov
push
adc
or
pop
and
sub
fildll
icebp
sub
xor
sub
hlt
push
rcrl
lret
notb
mov
testl
sub
fld
sub
fcomip
jg
pop
jbe
sub
scas
and
femms
inc
cmpsl
xor
idivb
add
aaa
loopne
cmp
imul
loope
cmp
lea
or
sti
inc
push
out
inc
sub
or
int
inc
mov
and
out
push
sbb
push
sub
inc
imull
adc
jb
jp
rcll
and
cmp
lds
lock
pop
aaa
hlt
setae
mov
dec
mov
pop
sub
xchg
mov
shr
inc
sbb
scas
lret
jno
gs
icebp
pop
sbb
loop
aaa
stos
gs
cmp
inc
mov
ss
sub
xor
outsl
lret
sahf
pushf
cmp
cmpsb
jo
mov
out
adcl
mov
jne
loopne
cmpsb
aam
inc
bound
xchg
add
clc
aaa
mov
adc
sbb
pusha
into
scas
ds
ja
shlw
aaa
jae
adc
lods
add
push
xchg
mov
jne
sub
or
fidivs
pop
mov
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
jmp
leave
fcmovbe
sar
rcrl
repz
xchg
sbb
mov
js
movsb
pop
fnsave
pop
sub
mov
clc
push
into
xchg
mov
mov
jg
pop
or
scas
js
aas
scas
adc
inc
cmp
adc
adc
add
shl
test
pushl
mov
pushf
test
mov
sub
fistpll
fisubrl
or
sti
ficoml
or
scas
fistpl
pushf
mov
sbb
mov
or
cmp
sub
lods
lods
lds
hlt
subb
and
mov
iret
arpl
orl
sbb
aaa
jbe
enter
subb
jne
lods
cs
pop
dec
clc
xchg
ficoml
fs
jns
aaa
mov
push
mov
sub
xchg
js
bound
leave
imul
cmp
xorl
outsb
shr
xchg
push
dec
lods
xchg
add
xlat
push
int3
jp
xor
popf
push
mov
push
fsts
aad
sbb
add
jnp
scas
xchg
mov
sbb
pop
rcr
jne
in
xchg
aas
test
dec
inc
scas
leave
push
cmc
push
xor
lock
call
or
mov
aaa
sub
push
pop
jl
pop
sbb
inc
aaa
mov
lret
repnz
aad
and
and
lcall
mov
sub
inc
mov
fcom
std
xchg
fistps
outsl
cmp
jae
mov
and
push
imul
rorb
cwtl
mov
imul
leave
lods
loope
aad
pop
das
test
or
sub
inc
mov
mov
rol
mov
in
jg
sbb
aaa
sub
adc
jb
inc
mov
cmp
sub
or
dec
enter
jnp
pop
xchg
or
sub
or
push
hlt
cmp
jl
out
pop
int
push
rcrb
mov
sarl
scas
mov
pop
adcl
jmp
aam
dec
nop
and
fsubrl
scas
xor
fwait
lret
lret
stc
lods
mov
xor
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
sub
push
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
movl
jmp
cmp
aad
xlat
jecxz
ja
pop
jnp
pop
hlt
mov
js
cmpsl
aas
cmc
mov
dec
std
adc
aad
movsb
sbb
xor
mov
in
std
mov
jecxz
ss
xchg
cmp
cwtl
int3
xchg
out
shr
loope
je
insb
test
push
lods
jno
jo
sbb
jo
sbb
mov
jp
adc
sti
xchg
fildl
jg
cmp
subl
jge
jecxz
jecxz
int3
mov
jge
xchg
push
xorl
add
xor
dec
mov
lods
jb
adc
cmp
std
sbb
xchg
dec
adc
push
std
jbe
push
outsb
lret
loopne
mov
sbb
inc
add
ss
xlat
int
lret
mov
mov
fs
arpl
mov
lods
fwait
inc
mov
stos
push
aaa
adc
loop
add
cli
pop
lods
adcb
mov
in
or
shrl
xchg
ds
in
add
mov
fs
adc
xchg
das
pusha
ss
xchg
call
cmpsl
nop
adc
add
pop
outsl
mov
lahf
dec
in
mov
mov
insb
add
xchg
jnp
in
adc
sbb
jne
popa
add
mov
inc
adc
inc
and
push
jle
pop
sarb
test
ret
and
cld
loop
xchg
fldcw
loope
test
mov
push
int3
pop
in
lcall
jb
xor
jne
int
int3
xchg
in
fdivl
sbb
orb
sbb
push
and
dec
repnz
cmp
cmpsl
xchg
adc
xor
aad
cmc
int3
push
push
sbb
xchg
dec
pop
push
addr16
add
mov
rcl
sbb
xor
mov
test
sub
mov
xchg
push
jge
pop
add
and
jge
and
jo
ror
ja
jg
into
in
add
daa
inc
xor
dec
gs
pop
mov
dec
jl
outsb
cmpsl
mov
es
add
loop
jge
push
dec
jge
rcr
xlat
lahf
adc
jae
test
ss
int3
insb
or
pushf
mov
jmp
inc
dec
cli
adc
dec
cld
test
dec
jmp
cmc
jne
push
adc
or
or
mov
mov
xor
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
add
mov
xor
jmp
lret
ror
leave
lret
push
xchg
mov
mov
js
pop
rolb
mov
fistps
mov
icebp
orb
xchg
sub
test
orl
jmp
cmpsl
scas
jnp
mov
and
cld
pop
mov
xor
addr16
cmp
shlb
dec
sub
and
mov
mov
pop
and
shlb
mov
in
adc
out
lods
mov
jo
lock
lods
stos
push
out
fisubrl
mov
xchg
fwait
lret
test
fisubs
pop
pop
adc
jne
in
test
mov
ljmp
pushf
inc
hlt
iret
cmp
adc
fstpl
mov
ficoml
dec
and
xlat
or
popa
fsubrl
test
fwait
dec
push
xchg
sub
das
pop
dec
cmpsb
insl
pop
fidivrl
add
arpl
dec
or
xchg
and
fs
sub
ds
movsb
dec
pop
insl
mov
or
fwait
mov
dec
xor
mov
mov
cmp
sarl
sti
mov
stos
pop
call
jle
cmpsb
div
or
push
clc
rcrl
mov
in
int3
clc
xchg
add
mov
jecxz
jne
icebp
mov
jae
scas
sbb
lret
jecxz
dec
out
mov
mov
push
push
xchg
outsl
aas
scas
cmp
sub
add
jle
xor
out
test
out
sub
pop
addl
fldl
or
icebp
pusha
loope
dec
je
xchg
dec
movsl
mov
xor
shrl
jb
cmp
orb
std
jle
jns
dec
cmp
icebp
push
pop
cld
lret
xchg
repnz
jge
adc
out
push
jecxz
popf
pop
sbb
outsl
out
mov
pop
cmp
in
cmp
xchg
inc
popf
scas
stos
lahf
cwtl
mov
fsubp
or
cmp
in
xchg
loope
movsb
sub
xchg
arpl
out
jno
dec
negl
aad
mov
scas
clc
push
or
in
fwait
pop
mov
test
mov
notl
test
inc
iret
push
adc
add
push
pop
cmp
cs
and
mov
jge
rorb
ret
pushf
mov
mov
cwtl
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
andl
xor
jmp
enter
fcmovnb
aad
push
and
cmp
xchg
dec
mov
in
js
mov
arpl
repnz
lret
adc
addr16
xlat
mov
repz
stos
push
aam
xchg
fadds
sbbl
jmp
fldz
push
add
cs
xor
pop
outsb
inc
repz
cmc
rorl
ficoms
hlt
xchg
mov
push
loopne
clc
fucomip
push
cmp
repnz
addr16
cmp
jp
cmpsb
mov
mov
sub
in
jbe
imul
xchg
mov
in
das
adc
pusha
pop
mov
cmp
lahf
mov
pop
jp
add
sbb
inc
test
or
pop
lret
mov
jbe
push
incl
sar
adc
jp
push
pop
jmp
inc
xor
rorb
stos
out
leave
push
add
xchg
jns
jg
stos
xor
sbbb
fcomps
adc
fwait
xor
jp
xor
jp
repnz
popf
jmp
sub
add
psllw
mov
imul
adc
insl
dec
sbb
mov
jo
and
mov
xchg
andb
clc
loop
sarl
pop
ret
pop
cld
in
stc
adc
leave
adc
adc
stos
imull
fs
mov
nop
loope
mov
in
add
out
fisttps
clc
push
mov
sub
dec
psubq
js
rcrb
jecxz
les
data16
leave
push
mov
lret
add
cltd
je
imul
fldl
outsl
inc
leave
sbb
dec
pusha
addl
or
cmpsb
test
xlat
and
xorl
xchg
pop
or
xchg
cmp
ljmp
xchg
inc
jle
mov
inc
fiadds
pop
mov
push
dec
rcrb
xorb
enter
sub
and
pushf
add
pop
xlat
mov
adc
int
cld
or
or
insb
fs
dec
dec
pop
cmpsl
jbe
xor
shlb
adc
mov
mov
scas
cmp
dec
idiv
fidivrl
jne
ljmp
cmp
mov
jne
out
dec
pop
scas
ret
adc
rol
add
sbb
cmp
add
test
add
cmpl
jne
pushl
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
mov
xor
movl
or
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
and
movl
sub
movl
and
movl
orl
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
pushl
call
jmp
movl
mov
xor
movl
cmpl
je
cmpl
jne
push
push
push
push
call
xor
or
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
jmp
decl
mov
movl
jmp
ret
sarl
rcrl
js
in
js
mov
int
scas
idivb
andl
cmpsb
mov
mov
dec
out
pop
nop
xchg
lcall
iret
sbb
orb
in
xor
cmpsb
aad
jmp
pop
cwtl
pop
xchg
loope
xor
dec
push
lret
mov
out
xchg
sbb
push
sub
cwtl
fidivl
cmc
jge
mov
jle
ja
imul
in
mov
adc
sub
ret
cmp
dec
fcompl
xor
cli
shlb
shrl
mov
mov
out
clc
jmp
dec
xchg
pop
push
jp
push
mov
push
insl
adc
add
push
pushf
cld
out
jecxz
shlb
pusha
xor
ret
push
out
xchg
jnp
push
rorl
sbbb
push
add
jmp
pop
ret
lcall
iret
and
pop
mov
es
popa
or
mov
stc
nop
lods
add
mov
mov
pop
sbb
test
in
xor
xor
or
pop
out
xchg
lock
int3
iret
movsb
and
sbb
dec
jle
sahf
addr16
dec
and
cmpb
or
cmpsl
sbb
into
data16
cmpsb
inc
mov
jnp
cs
arpl
add
addr16
repnz
sub
jmp
xchg
inc
mov
jns
cmc
mov
mov
cmp
xor
je
or
push
ror
inc
xchg
scas
mov
adc
adc
mov
xor
stos
xorl
je
daa
aam
and
mov
in
aaa
sbb
mov
push
pop
push
cmc
inc
mov
test
sub
dec
mov
sub
aad
nop
call
mov
inc
mov
jo
cmc
mov
add
or
and
enter
jecxz
sahf
mov
inc
daa
push
and
inc
sub
adc
inc
mov
jno
pushf
lea
dec
fiadds
push
pusha
add
inc
sbb
sub
or
or
mov
add
adc
add
jbe
les
cld
mov
movl
jmp
ret
ret
lret
test
mov
inc
js
in
js
jecxz
mov
loop
movsb
mov
fsubl
dec
ljmp
das
xchg
scas
ficomps
push
in
cmp
dec
rcrb
outsw
and
fidivl
lcall
pusha
lret
xchg
jmp
test
push
fnstcw
int
insl
xchg
addr16
cli
cmp
aaa
shll
test
push
into
mov
rcrl
arpl
adc
sbb
jbe
loope
inc
xor
into
fs
push
scas
pushf
jno
mov
dec
adc
jnp
cmp
mov
fldt
push
movsb
adc
push
mov
push
mov
repz
mov
and
pop
into
pop
in
pop
lea
xchg
cwtl
shll
adc
add
aas
popl
jp
mov
mov
cmp
mov
loop
jecxz
out
shlb
lods
arpl
dec
cwtl
xchg
insb
cmpsl
mov
imul
incb
pop
mov
int
or
es
popa
in
dec
fsubs
pop
or
sahf
cmpsl
xorb
mov
loop
faddl
test
insb
aad
dec
inc
xor
jnp
or
jae
and
mov
cmp
lahf
mov
into
mov
push
mov
mov
movsl
sti
fiadds
push
and
imull
loop
insb
js
cmpl
adc
lods
int
repz
cli
fucomip
insl
xorb
addr16
fwait
jp
in
mov
or
imul
mov
leave
mov
push
push
popa
mov
loope
dec
scas
leave
sub
xchg
cmp
xchg
add
and
sbb
dec
and
push
movsl
push
sub
je
mov
sub
testb
int
cmp
in
sbb
push
loopne
jle
and
sbb
lea
or
ss
mov
movsl
imul
fnstsw
frstor
sbb
and
mov
pusha
xor
or
enter
push
pop
inc
les
test
sbb
mov
test
movl
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
jmp
cmp
fcmovnb
cmc
into
inc
jge
lods
rclb
inc
js
in
js
das
int3
loop
fidivs
xchg
jle
inc
mov
cmp
imul
xlat
cmc
sbb
mov
shrl
cmp
inc
push
out
push
mov
lods
cmp
jns
push
xchg
out
dec
lahf
jmp
negl
push
popf
or
inc
lods
imul
out
and
adc
mov
add
adc
adc
mov
cmpl
mov
push
ds
fcompl
xor
lahf
out
sbb
sbb
mov
cld
mov
lea
sub
pop
leave
sub
and
cli
addr16
iret
xchg
repz
pop
jo
aad
out
nop
xchg
aam
out
fisubl
popa
push
push
fs
les
arpl
ljmp
cmp
fwait
dec
push
inc
push
stos
mov
loop
adc
jno
cs
movsb
rcrb
dec
mov
sbb
add
mov
and
cwtl
fcoml
xchg
add
jle
mov
mov
mov
pushf
bound
push
jbe
jae
pop
insb
jmp
mov
push
pop
lret
inc
insl
or
jno
pushf
adc
daa
mov
pushf
mov
cmp
sbb
push
in
jmp
or
jns
inc
test
push
js
mov
mov
mov
popf
dec
adc
in
loope
shlb
pop
xor
sbb
push
pop
test
ss
xor
test
fisttps
pop
ret
in
sbb
sub
out
es
test
xchg
dec
adc
std
cmc
leave
cmp
jmp
cmpsb
fs
int
loop
mov
dec
sub
push
addr16
mov
dec
sbb
fcompp
cmpsl
sbb
jmp
cltd
dec
inc
inc
push
out
adc
pop
mov
in
lret
rcll
sbb
pop
pop
pusha
inc
dec
pop
inc
lods
dec
and
cmc
test
std
or
test
inc
ret
pop
test
mov
jg
pop
jmp
mov
dec
cs
jnp
or
xchg
inc
cltd
ror
jg
inc
data16
adc
jge
inc
sbb
push
add
mov
lahf
addb
sub
mov
xor
add
cmp
jb
mov
mov
xor
xor
add
add
imul
mov
jmp
mov
leave
dec
mov
std
testl
js
in
js
adc
mov
push
repz
shlb
jne
cs
mov
negb
jge
jp
idivb
daa
pushf
jb
cmpsb
push
adc
push
dec
scas
push
xchg
outsl
pop
and
negl
fwait
sbb
das
out
fidivs
imul
mov
bound
add
sub
sub
js
std
cmpsl
sbb
jg
mov
xor
or
push
pop
push
aas
adc
sub
leave
adc
lods
or
ficompl
out
out
push
jb
pushf
out
rol
repz
cmp
xor
faddl
pop
xor
mov
push
pop
and
and
push
lcall
xchg
cmpsb
mov
fdivrs
pop
cli
test
bound
mov
pop
dec
mov
dec
adc
adc
dec
pop
sbb
repnz
std
fidivrs
and
movsl
out
loop
into
gs
pop
outsl
add
lods
push
mov
decl
fxtract
in
add
lock
mov
adc
or
jbe
cmp
sub
cmc
ss
xchg
cmp
jno
testl
scas
int
aad
or
in
adc
cmpl
dec
cs
or
push
ret
insl
insb
repz
leave
gs
mov
cmp
jns
lods
fimull
inc
and
pop
sbb
mov
sbb
jge
inc
clc
mov
test
rclb
jl
dec
pushf
loop
addr16
or
loope
mov
mov
cwtl
int
jmp
adc
imul
fstps
scas
mov
insb
add
loope
aaa
test
sub
fucomip
and
and
cmp
sub
inc
pop
mov
out
mov
insl
pop
push
ss
flds
test
mov
cmp
insl
cmp
mov
fsubrl
push
hlt
dec
or
cmp
inc
add
sub
ret
out
dec
mov
aad
inc
loope
mov
es
aad
push
adcl
dec
jle
test
data16
pop
lock
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
jmp
sarl
int
ret
xchg
daa
aaa
ret
out
js
in
js
test
pop
sub
pop
xor
fcoml
shll
inc
adc
jl
mov
mov
js
leave
aad
fdiv
xor
sub
jmp
in
in
das
mov
rsm
jnp
sar
dec
sub
mov
aaa
inc
ret
std
add
icebp
mov
sbb
test
cmp
enter
mov
aas
xor
mov
fnstsw
pushf
pop
add
stos
pop
add
sub
ds
hlt
sbb
sbbb
rcl
mov
repnz
inc
ret
and
leave
sub
movsb
movsb
lock
lcall
push
das
cli
cmpsl
in
sti
daa
cmp
mov
inc
xchg
push
data16
data16
imul
jno
mov
inc
mov
mov
xchg
fcomp
sub
int
lret
sub
shr
not
add
divps
lcall
rol
pop
pop
loope
test
call
cmp
inc
xchg
dec
or
or
aaa
test
adc
inc
test
xorl
subl
cmc
int
out
test
or
sbb
into
addr16
sub
stc
fdivs
int
lret
inc
push
stos
pop
xlat
call
dec
insb
dec
cmpsb
lret
loopne
in
mov
dec
and
les
idivl
mov
imul
or
xor
cmp
shrb
call
mov
test
or
sub
popa
push
into
or
dec
mov
orb
push
enter
push
sub
mov
jl
in
add
popa
addr16
lea
stc
in
pop
mov
push
push
movsl
or
jp
adc
fcom
cli
test
sbb
pop
cmc
dec
mov
fidivrs
addb
clc
int
inc
test
ljmp
call
insl
cltd
jo
lds
xchg
mov
jp
sub
push
es
fldt
lods
shlb
xor
movsb
push
and
cmovo
cld
aaa
rclb
or
or
dec
xlat
add
jae
mov
push
push
popa
test
outsl
mov
inc
out
or
add
jmp
ret
int
into
xchg
jle
dec
daa
out
and
in
js
subb
ret
in
out
lahf
jb
out
cmp
push
repz
sbb
xchg
dec
imul
bound
and
jbe
mov
ds
test
insl
daa
add
loopne
pop
loopne
push
inc
aas
mov
fucomip
xchg
adc
aam
inc
add
dec
mov
cli
cltd
subl
add
stc
test
xor
and
test
inc
stos
ret
into
add
dec
xchg
and
leave
jmp
pop
xchg
sub
or
out
pop
push
inc
pop
cli
push
loopne
mov
mov
sbb
xchg
lret
xor
sub
xor
pop
mov
pop
lock
scas
iret
sub
add
ljmp
imul
lretw
jp
imul
cmp
mov
pop
rolb
dec
or
aas
adc
or
test
jge
mov
leave
loopne
cli
adc
pop
lea
push
mov
xchg
lcall
cmpsl
sub
lret
push
or
pop
lock
ljmp
in
fsubrl
mov
subb
push
into
cmp
ret
pop
jle
ss
mov
mov
mov
mov
arpl
xor
scas
mov
xor
cmp
xchg
lcall
addr16
mov
imul
sbb
and
or
shrl
pusha
aas
pop
mov
mov
mov
xor
inc
movsb
jmp
jb
add
fmuls
shll
pop
pop
loopne
and
daa
sub
test
sti
inc
inc
jne
int
popa
repz
push
rclb
adc
pop
imul
fdivr
cmpsl
mov
sub
cltd
dec
pop
mov
add
cmpsb
cld
lahf
push
inc
push
shrb
imul
sahf
adc
push
ja
arpl
xor
or
mov
jge
cmp
and
call
mov
repz
cmp
add
or
addr16
lret
daa
cmpsl
fldl
xchg
xor
es
jns
dec
fwait
cmpb
xlat
mov
mov
jmp
cmp
ret
fcmovnb
aad
pop
adc
mov
ja
cmp
js
jle
js
cmp
pop
jmp
or
ret
in
test
adc
push
repz
mov
shl
cwtl
rorl
xor
cmp
clts
out
int
ret
in
xor
sbb
push
out
sbb
pop
sub
push
pop
insb
xchg
mov
xor
idivl
mov
rclb
lods
aaa
sar
pop
jecxz
scas
adc
in
pop
ret
iret
rcl
int
push
jbe
outsl
mov
sbb
mov
inc
pop
mov
inc
int
dec
enter
jne
js
lret
dec
test
pop
mov
mov
adc
test
cmp
mov
sbb
test
cmp
pop
dec
daa
icebp
jnp
mov
in
lock
inc
fistpll
adc
int
inc
sub
inc
sbb
cmp
xchg
cmp
les
stc
mov
dec
ja
cmpsl
lahf
das
lods
in
lcall
arpl
adc
inc
insb
movsb
test
xchg
jecxz
stos
xor
add
adcb
add
fstpl
xchg
pop
imulb
in
cmp
pop
pushf
sbb
mov
jno
ljmp
jg
nop
push
inc
or
test
xor
and
dec
pop
mov
fstps
add
repz
nop
outsb
out
inc
aas
jecxz
adc
dec
or
aam
cli
sub
es
pop
repnz
stos
cs
mov
daa
mov
repnz
loope
push
pop
sub
ss
dec
xchg
in
movsb
ss
mov
mov
sbb
inc
sub
mov
pop
pop
shrb
and
push
scas
add
jle
sub
les
stos
pmaddwd
xchg
dec
test
push
dec
jae
xchg
adc
push
in
mull
test
push
pop
add
lods
cs
std
je
sub
imul
das
jno
pop
std
push
fiaddl
movsb
movsb
cmp
sbb
cmc
pop
pop
mov
adc
and
pop
nop
cltd
pop
pop
daa
cmp
mov
outsb
in
jno
push
push
or
stos
loopne
sub
cmp
jmp
into
ror
fcmovnbe
fld
ud0
pop
gs
jle
push
js
in
js
outsb
adc
bound
or
pushf
aad
pop
cmp
leave
sti
notb
sbb
inc
sahf
popa
shrl
lahf
insb
dec
lock
icebp
mov
jno
or
and
dec
sti
mov
loop
fistps
push
add
ffree
add
or
shll
in
cmpsb
mov
jae
xor
push
mov
into
or
xor
add
push
fistps
out
xchg
push
pop
push
arpl
into
fs
ret
dec
nop
out
insb
and
leave
mov
int3
aam
pop
inc
insl
cs
xchg
and
rcll
idivb
sub
rol
iret
ficompl
sbb
add
jmp
push
push
jns
xor
es
xchg
sbb
pop
jne
sub
mov
mov
pop
cmp
and
dec
test
inc
cmpsl
push
cmp
xlat
leave
sbb
push
xchg
sahf
mov
xor
sbb
lock
or
sbb
xor
push
or
int3
mov
and
dec
int3
mov
inc
hlt
add
push
cwtl
cmpl
pop
xor
fdivl
fstps
adc
lahf
push
jle
push
mov
jecxz
js
or
bnd
jae
or
pop
adc
shl
or
jmp
cmc
fidivrl
stos
push
pop
dec
movsl
ret
les
dec
push
insl
aaa
or
cwtl
push
mov
dec
cs
jmp
and
add
cmp
loope
je
mov
sar
fstpl
sub
mov
fucom
shlb
test
mov
clc
mov
xlat
mov
lret
popf
lret
insl
dec
and
pushf
jb
add
test
pop
addr16
ret
movsl
shlb
lods
loope
inc
sbb
dec
xor
test
inc
pusha
lods
dec
sbb
call
divl
jae
or
adc
fdivrl
pushf
pop
scas
cwtl
lahf
cmpsb
push
add
sbb
lea
mov
pop
cwtl
in
clc
or
cmpsl
das
mov
and
dec
xchg
push
sbb
adc
clc
out
cld
or
jge
mov
adc
pop
sti
clc
fiadds
ja
mov
jmp
mov
mov
xor
xor
jmp
aas
lret
iret
aad
jo
lods
testl
js
in
js
or
sbb
sbb
aad
inc
jp
inc
les
pop
fcompl
lea
push
cmp
pushf
jp
divl
fdivr
add
inc
jmp
jns
or
cmp
clc
cmovg
rolb
lret
int3
int3
and
les
es
int3
vmovq
jns
push
adc
adc
cs
cmp
in
in
out
cmp
xchg
cmp
cmp
sbb
scas
push
shll
dec
mov
push
pop
xchg
pop
mov
loope
test
dec
int3
xor
mov
ljmp
push
aam
scas
xchg
out
add
sbb
mov
add
sbb
jecxz
cmp
sub
pop
push
xchg
push
mov
inc
sub
rolb
and
pop
adc
rcrl
push
test
fsts
and
lret
jne
mov
jne
mov
mov
cmp
jmp
scas
out
pop
sbb
pop
in
cmpl
fstp
dec
cmp
mov
popf
add
test
xor
or
xor
mov
imul
mov
popa
ret
das
inc
and
insb
sahf
fs
cmp
shl
inc
push
sahf
loopne
dec
dec
outsl
mov
inc
mov
aam
stos
mov
pop
adc
aaa
lods
sub
xor
mov
stc
xor
lahf
addl
mov
mov
mov
fsubrs
call
inc
xor
lods
mov
inc
jo
hlt
add
inc
mov
dec
push
or
outsb
fstl
push
cmpsl
inc
ja
cmp
sbb
mov
shrd
sbb
mov
jno
imul
cmpsl
int3
fwait
enter
and
mov
les
jge
xchg
or
inc
out
int
and
add
in
mov
pop
fists
mov
push
icebp
ljmp
test
popa
sub
and
cmp
inc
pop
subb
mov
cli
fstpl
and
lret
sbb
xorl
mov
lods
and
outsb
sti
push
xchg
sbb
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
jmp
lds
ds
fxch
adc
add
xor
push
js
in
js
push
pop
pop
dec
pop
cmpsl
xchg
daa
fwait
jo
xor
aad
lcall
adc
movsl
ljmp
xchg
xchg
cmp
jmp
ss
out
dec
inc
cmpsb
and
pop
mov
push
dec
mov
sub
fdivl
int
inc
xlat
add
jnp
cwtl
fistps
cmp
ret
push
fidivrs
dec
dec
cmp
sub
rclb
imul
ja
inc
mov
pop
stos
fcmovnu
push
pushf
mov
fcmovne
sub
lods
mov
jo
aas
xchg
add
pop
pop
leave
mov
movsl
lahf
mov
fisttpl
xchg
mov
jp
xchg
jbe
push
xor
dec
xor
cwtl
pop
push
inc
js
std
add
dec
pop
sub
xchg
insb
fdivs
fstp
aad
aaa
mov
xchg
jecxz
inc
outsb
in
sub
adc
inc
sarb
movsb
cmp
pop
mov
mov
insl
add
sub
jge
pop
jb
fwait
daa
in
and
add
sbb
mov
mov
inc
pop
enter
xor
andb
into
movsb
lret
sub
jp
mov
dec
jmp
imul
ret
mov
popl
cltd
and
not
stos
das
aas
jbe
inc
data16
cmp
pop
inc
fbstp
pop
mov
cmc
jnp
or
cld
ret
stos
sbb
add
xchg
xor
cmp
decl
fisttpl
lds
in
mov
inc
ljmp
aam
and
lahf
mov
dec
fldt
ljmp
lds
inc
lds
popf
ret
lods
nop
or
aas
xorb
push
jnp
inc
jg
stc
jecxz
in
push
lcall
mov
movsb
jmp
cs
jnp
mov
outsb
push
repnz
pop
mov
pop
or
addr16
out
addl
sub
jg
jmp
mov
inc
sahf
rcr
jno
and
or
stos
rorb
sbb
sbb
fisttpll
mov
xor
mul
popl
and
mov
adcb
cld
loopne
inc
xor
add
jmp
int3
into
ror
rcl
into
jbe
inc
data16
cli
xor
js
jle
js
imul
call
jmp
pop
push
mov
ret
pop
xchg
fstpt
jnp
test
bound
mov
push
lods
leave
nop
mov
rclb
xchg
loopne
add
mov
sub
cmp
aad
sbb
ljmp
jnp
outsb
pop
xor
ja
scas
fsts
adc
push
int3
and
in
js
and
pop
push
push
push
arpl
stc
call
out
cmp
lods
test
jne
fwait
adc
mov
fwait
pop
rorb
push
aam
mov
xchg
cltd
lods
xchg
dec
push
mov
cmp
out
lods
in
mov
ljmp
lock
push
mov
stos
or
mov
or
aaa
cmc
mov
je
lods
sub
dec
andb
dec
aad
mov
mov
add
ret
sbb
mov
xchg
cmp
adc
scas
cmp
xchg
shr
inc
jp
xor
add
xor
popf
loope
outsb
fcmovu
adcb
sti
fstenv
xchg
push
lcall
pop
mov
push
arpl
sahf
push
aad
mov
popf
test
xchg
insb
pop
mov
pop
mov
jle
xor
dec
lods
lret
test
enter
pushf
arpl
mov
jmp
clc
mov
push
pushf
pushf
iret
add
insb
or
ss
push
repz
lret
or
mov
xchg
dec
lcall
cwtl
testb
adc
adc
imul
adc
insl
rolb
stc
aam
bound
sbb
je
loope
inc
xchg
insb
in
dec
pop
add
dec
shrl
movsb
mov
stos
jmp
test
out
or
xchg
cltd
loop
fnstsw
fstpt
mov
cwtl
lds
mov
out
int
sar
clc
into
lock
and
mov
jle
out
leave
out
aad
into
push
outsl
adc
mov
cmpsl
test
xor
daa
aad
push
repnz
fwait
jecxz
dec
into
cmc
mov
cltd
xor
cmp
stos
in
ficoml
jo
add
imul
jmp
aas
xlat
xlat
lret
xlat
lret
rcr
and
or
shlb
js
in
js
push
mov
arpl
cmp
xor
imul
mov
stos
inc
out
fucomp
in
je
lods
mov
cld
fisttpl
cmpsb
jmp
loopne
mov
pop
aam
int
in
in
das
cmpsl
add
imul
pop
nop
jle
lds
xchg
out
push
push
out
sub
adc
testb
stc
add
dec
mov
mov
xlat
arpl
roll
jmp
jne
sub
mov
push
jmp
test
repz
mov
js
in
adc
sar
mov
leave
call
pop
loop
lods
cmp
arpl
dec
push
push
push
das
cmc
lahf
aam
xchg
out
or
mov
iret
mov
or
lcall
mov
sahf
sti
pop
jb
jmp
mov
mov
lret
dec
in
cmp
in
cld
inc
xchg
scas
clc
lret
add
mov
xchg
xorl
push
or
repz
sbb
mov
aaa
lahf
push
dec
imul
cmpsl
and
xchg
xchg
ja
outsl
and
aas
popa
cwtl
add
std
rcrl
or
add
push
in
outsl
mov
push
scas
fwait
popf
pushf
loope
or
lods
and
adc
inc
xor
test
pushf
out
scas
aas
or
aaa
jb
lahf
xchg
imul
mov
pushf
xchg
dec
data16
pop
insl
xor
clc
add
gs
mov
xlat
mov
pusha
sub
icebp
cld
filds
enter
and
call
cmp
or
call
ja
shrb
push
add
jl
pop
aaa
pushf
xchg
inc
mov
inc
or
into
insb
sub
mov
lods
mov
lcall
sbb
bound
inc
pop
enter
loopne
xchg
adc
xor
jns
and
lret
jle
stos
sarl
jnp
arpl
les
adc
sbb
lahf
jae
jbe
daa
ljmp
xchg
add
inc
mov
loope
nop
add
push
sub
pop
push
out
lods
in
xchg
popa
push
adc
fwait
cmp
push
cmp
mov
mov
sub
cmp
ja
jmp
rol
xor
mov
ja
pop
js
in
js
icebp
and
scas
push
sub
mov
test
mov
movsb
gs
ror
mov
cwtl
push
push
pop
int
mov
and
ds
outsl
dec
std
lods
movsl
out
popa
ret
push
dec
cmp
xor
out
je
repnz
mov
and
aas
adc
sbb
push
xor
stos
rolb
push
in
mov
or
leave
pusha
stos
popa
pushf
scas
mov
xchg
in
add
stos
test
popa
daa
cmc
aam
pop
ja
icebp
arpl
ret
insb
cmp
movsl
jg
lcall
sub
pushf
mov
ret
sub
lret
in
test
inc
ss
jnp
inc
aas
call
jns
iret
daa
outsb
in
lds
and
pop
rorb
mov
dec
inc
mov
pop
pop
jno
in
int3
and
mov
dec
inc
cli
aaa
lret
dec
adc
in
dec
paddsb
jecxz
mov
enter
push
movsl
sub
nop
cmpsl
pop
push
fistps
adc
call
jns
mov
test
adc
push
pop
cmp
push
scas
lret
mov
pop
and
push
fwait
pushw
mov
ret
push
gs
jno
xor
pusha
xchg
movswl
mulb
ja
lahf
add
mov
loop
sahf
push
rclb
push
hlt
mov
pop
test
mov
xlat
dec
jecxz
outsb
lret
mov
xchg
jl
cmp
mov
cmpb
clc
arpl
dec
pop
mov
xchg
pop
jl
and
movl
scas
push
imul
pop
sub
repnz
aas
aaa
gs
fstpl
ficompl
fdiv
lea
mov
add
add
fcompl
daa
test
xlat
sbb
adc
mov
mov
pop
sub
xor
xchg
ss
cwtl
test
ljmp
arpl
notb
mov
or
cmpb
add
add
cld
xor
inc
dec
scas
cmpb
pushf
dec
dec
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
iret
leave
into
xlat
fcmovu
aad
cli
je
sti
rcr
jg
and
js
in
js
add
sbb
rclb
mov
je
mov
inc
dec
push
addb
inc
xchg
sti
add
outsl
push
idiv
xchg
addr16
daa
testl
xor
fcmovne
jl
mov
push
xor
sub
add
ret
jno
frstors
xchg
add
or
dec
lret
and
dec
sarl
test
pop
std
cmc
in
insl
test
aad
arpl
clc
inc
scas
dec
push
data16
push
mov
jo
stc
stc
adc
fdivr
adc
imulb
mov
push
sbb
push
nop
cmp
add
imul
jg
ret
lahf
in
dec
xor
or
aaa
out
call
cmp
clc
pop
add
sti
cmpsb
add
add
int
mov
xchg
mov
xlat
and
jle
sbbb
arpl
cmpsl
add
lret
jmp
sbb
js
push
jmp
or
es
jmp
mov
mov
pop
or
or
subb
jns
loope
xor
xchg
xor
loope
shlb
and
sahf
loop
roll
xchg
jmp
lret
sub
movsb
or
sub
fnsave
aam
and
frstor
sahf
sbb
or
xor
jmp
xor
adc
mov
ja
fiadds
or
ljmp
pop
mov
iret
push
and
add
fiadds
shll
xchg
sbb
fld
adc
das
call
insl
clc
cli
test
lahf
les
test
inc
jb
adc
xchg
or
out
mov
mov
iret
mov
jg
test
sarl
cmpsb
jl
inc
movsl
add
cmp
inc
loopne
aam
mov
jmp
div
jno
inc
fstpl
out
and
add
mov
lret
fs
or
outsb
out
push
mov
mov
ss
dec
das
sub
lods
stos
std
push
es
inc
and
clc
mov
div
imul
dec
cmp
stc
lret
fnsave
and
ss
sub
pusha
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
jmp
into
cmp
fxch
sub
imul
js
pusha
andl
jg
sbb
sbb
xchg
pushf
mov
or
je
xor
shl
idivb
pop
pop
pop
in
dec
xchg
or
aas
mov
cmp
xchg
stc
rsm
mov
ret
insb
shrb
sbb
stc
and
sar
jp
add
or
push
adc
loope
adc
movsb
inc
xchg
negl
or
arpl
push
mov
mov
lods
mov
mov
inc
call
movsl
faddl
jmp
pop
subb
fisubl
imul
push
cmpsl
push
les
mov
sbb
loopne
in
cld
fmull
hlt
repz
orl
or
add
push
add
lcall
in
and
out
iret
dec
daa
fimull
pop
inc
dec
mov
arpl
lock
jg
jmp
inc
or
adc
sbb
jbe
sbb
xor
push
ret
cltd
dec
sub
in
push
jecxz
and
push
inc
sbb
jg
leave
jae
jo
outsl
repz
andl
adcl
sti
or
push
movsb
stos
rcl
mov
das
in
sbb
push
jnp
das
daa
roll
cld
in
addl
cmp
sbb
add
sub
sub
insl
fisttpl
mov
pop
sbb
dec
xor
rorb
and
sbb
cmp
pop
dec
or
mov
cmc
add
mov
mov
xor
popf
pushf
jle
or
mov
movsb
repnz
push
ret
mov
mov
pushf
fnstcw
shrl
pop
cltd
sub
jmp
sub
jge
stc
cs
in
aam
int3
adc
push
ret
shll
cwtl
push
xchg
xor
sbb
jo
jecxz
and
gs
aad
shlb
add
lods
ljmp
into
mov
adc
add
or
jbe
repz
or
imul
add
sahf
fmull
stos
addr16
push
std
mov
mov
sub
cmp
mov
jbe
jmp
rol
ds
into
rcl
adc
enter
gs
in
js
xchg
daa
pop
rorb
movsb
cmp
pop
lahf
add
imul
pop
jbe
cld
das
fsts
mov
pushf
mov
mov
in
sti
xchg
jl
mov
sbb
sarb
jecxz
repz
push
cmpsl
aaa
es
sbb
mov
jg
pop
add
lea
xchg
xchg
icebp
pop
es
xchg
insb
adc
and
mov
push
adc
xchg
popf
insb
cltd
push
stos
test
loopne
in
loop
push
flds
mov
fldcw
decl
xchg
ja
sbb
pop
decl
mov
or
jmp
push
mov
push
jl
les
imul
sub
cli
lcall
ja
xor
filds
fcomp
cmpsl
xchg
jge
out
mov
xchg
inc
jle
call
inc
das
dec
test
rcll
testl
jmp
notb
rcrb
or
test
in
imul
pop
mov
cwtl
daa
mov
test
cmp
icebp
daa
es
or
sub
test
popf
mov
push
mov
test
pop
outsl
fs
adc
pop
xorl
shll
xor
pop
call
pop
aam
and
mulb
dec
loop
jp
lret
adc
rclb
pop
push
xlat
add
sti
or
mov
xor
jle
mov
dec
xor
insl
adc
lahf
pop
cmp
inc
jge
flds
rcll
fstpl
push
stos
stos
xor
push
leave
or
fmul
lods
rcl
repz
shll
das
hlt
sbb
push
mov
push
sub
add
jge
lcall
mov
push
cltd
inc
in
jmp
rorl
sbb
mov
int
push
or
add
inc
fldl
and
push
sbb
dec
add
sti
insl
ds
ss
in
mov
sbb
shr
dec
loop
mov
jmp
insl
xchg
pop
jmp
call
mov
mov
ds
mov
cwtl
sbb
in
dec
fdivrs
popa
cli
sbb
shlb
insb
jno
fwait
cmp
mov
xor
xor
jmp
rol
enter
fcmovnu
xchg
add
inc
xor
in
js
popa
loop
xchg
or
add
inc
mov
bound
add
repz
loope
icebp
sbb
test
lods
xchg
push
stc
push
adc
push
arpl
push
and
jno
mov
addb
repz
dec
mov
fsts
inc
data16
repnz
test
fistps
xlat
popf
cltd
adc
pop
pop
mov
mov
fdivrs
mov
mov
mov
ret
das
leave
xchg
jp
lea
daa
fstpt
movsl
test
mov
orb
aas
and
rolb
out
pop
jmp
sub
out
mov
mov
sbb
inc
fxtract
jb
cmpsl
es
mov
add
fs
pop
pop
xchg
test
addr16
dec
in
adcb
sub
inc
int
push
outsb
xchg
imul
sbbb
mov
pop
xlat
sti
push
stc
cmc
sub
into
xor
jo
loope
adc
rorl
sahf
xchg
ja
pop
lock
sbb
sub
inc
inc
cwtl
repnz
fsts
sub
imul
lcall
push
push
fbld
scas
pop
jl
pushf
out
add
stc
pop
ja
push
cltd
and
std
ja
out
mov
out
sbb
jae
fcomip
int3
and
fsubr
js
push
mov
mov
out
aad
sahf
pop
stos
das
popa
or
mov
inc
mov
jae
int
inc
dec
rorl
mov
cmp
xor
call
jo,pt
cli
pop
shld
pop
test
sbb
lods
leave
jecxz
aaa
or
cwtl
pop
orb
push
pop
ret
sbb
cs
cs
push
mov
stos
arpl
mov
shll
xchg
loop
clc
lock
loope
aam
lea
test
loopne
std
pop
xlat
jne
pop
test
dec
xchg
popl
je
out
test
and
mov
add
stos
mov
inc
mov
mov
lock
out
stos
push
call
pop
sbb
inc
add
sahf
push
in
out
loope
daa
sbb
mov
popa
les
pop
mov
addr16
cmc
das
mov
cs
or
sar
cmp
rcrl
out
inc
test
lahf
add
add
imul
mov
mov
mov
mov
add
movl
jmp
fcmovnu
shr
movsl
xchg
mov
imul
xlat
scas
sti
push
movsl
xor
out
mov
lds
in
nop
sahf
and
rclb
jecxz
and
lds
sub
dec
xlat
push
jo
xchg
adc
fs
ss
fdivs
sbb
mov
ja
push
sahf
sub
or
jb
cwtl
bound
mov
pop
push
xchg
mov
or
mov
lods
enter
jns
inc
cltd
jge
jnp
pop
mov
scas
adc
jbe
aam
out
adc
ds
mov
xchg
aaa
add
bnd
mov
lds
insl
inc
and
mov
popa
cld
add
mov
adc
mov
lods
stos
xchg
clc
sbb
mov
push
les
add
cld
scas
push
push
icebp
jno
lret
sub
test
loopne
jg
idiv
mov
mov
mov
fistl
jb
adc
xor
push
pop
stc
push
add
pusha
add
inc
enter
rcr
lcall
aad
lea
stos
cmp
jle
pop
inc
xchg
into
rorb
cli
test
scas
cli
out
insb
pop
scas
adc
loop
xlat
push
xor
sub
inc
and
lahf
mov
insb
adc
outsl
pop
sbb
mov
aam
sarb
push
sbb
and
call
fsub
sbb
cli
inc
mov
xchg
popl
pop
mov
add
jbe
in
jl
mov
fbld
jle
lcall
cli
pop
adc
outsl
shlb
xchg
adc
cwtl
inc
lea
cmpsl
std
retw
std
adc
sti
out
cmp
movsl
in
imul
xor
pop
scas
inc
cld
sub
test
nop
xchg
sub
into
xor
ljmp
imul
icebp
lret
xchg
ret
je
xchg
jns
and
push
test
test
ficomps
mov
pop
cmp
jns
jmp
sti
sbb
jg
jnp
pusha
insb
gs
mov
or
inc
incl
das
push
cmpsl
inc
or
cmpsl
pop
ret
dec
sub
push
test
sbb
sub
jge
fisttps
dec
lods
push
shrl
mov
jmp
iret
ret
rol
fcmovnu
mov
jge
push
in
js
mov
lret
xchg
hlt
xor
jnp
fdivrl
mov
cld
shl
out
cmp
gs
jmp
and
pop
jb
jb
sbb
push
mov
orl
cmp
dec
clc
dec
jecxz
dec
lret
into
inc
pusha
popl
sar
jge
aaa
add
inc
mov
xor
outsb
sub
jecxz
ds
dec
lcall
push
inc
insb
lods
cltd
pop
mov
ss
rcrb
nop
sahf
push
dec
std
repz
aaa
push
out
pop
sub
sbb
test
fcoml
xchg
addb
js
repz
sbb
imul
in
push
sub
or
mov
jno
mov
enter
xchg
or
lock
mov
rcll
mov
mov
lcall
cmpsb
addb
mov
xchg
lcall
or
lods
scas
ret
lds
push
lods
das
inc
push
push
cld
in
sarl
mov
call
in
popf
dec
dec
jge
out
movsl
addb
and
fsubrs
xchg
pop
dec
pop
inc
mov
push
mov
push
aas
ds
inc
lock
push
pop
mov
mov
dec
or
test
cli
add
push
xlat
fisttpll
or
clc
pop
loopne
cmp
dec
jmp
push
mull
mov
mov
pop
out
dec
subl
fnstenv
daa
mov
iret
mov
mov
dec
jge
stc
fs
lock
aad
mov
or
lret
fs
cmpl
mov
repnz
popa
cltd
jl
xchg
pop
shlb
jo
sti
les
inc
int3
cmp
jbe
fnstsw
js
jmp
test
dec
out
aaa
or
shlb
shll
pop
fsubrp
lea
icebp
cmp
les
sahf
fwait
mov
mov
ds
jge
stc
mov
or
pop
jae
adc
out
push
jmp
scas
fistps
sbb
pop
fsubp
cmp
out
stc
lea
cmp
dec
jle
inc
mov
out
movl
movl
jmp
int
ror
fcmove
leave
sub
adc
inc
and
in
js
mulb
movb
jle
shlb
lods
or
mov
fistl
iret
ret
xchg
enter
sbb
into
mov
ljmp
lret
repz
loopne
adc
divb
xchg
cmp
jp
pop
and
iret
mov
mov
jl
jle
outsl
or
popa
js
jge
cmpb
lods
pop
adc
test
push
push
dec
jecxz
or
stos
xor
test
mov
adc
lahf
clc
hlt
mov
xchg
lahf
push
into
xchg
std
cltd
and
imull
xchg
mov
add
lea
movsl
pop
shl
cmp
pop
es
aam
sub
in
bound
fs
mov
pop
or
hlt
and
mov
push
insl
dec
jle
loopne
cmp
cmp
pop
gs
enter
add
lcall
pop
outsb
lret
xchg
push
mov
pusha
aaa
push
dec
cld
and
insl
sbb
movsl
fs
add
mov
dec
push
dec
mov
xchg
mov
arpl
mov
in
sti
pop
inc
int3
imul
aad
out
cltd
lret
clc
push
mov
mov
jmp
mov
repz
add
jno
mov
bound
arpl
jp
lcall
push
mov
into
insb
repnz
cmpsl
popf
adc
inc
nop
inc
out
sub
xlat
sbb
inc
testb
jb
mov
in
adc
mov
lret
dec
popf
mov
pop
decl
aam
rorb
lock
mov
mov
xchg
rcll
bound
ficomps
pop
pop
fstl
js
dec
out
sbb
sub
jecxz
push
mov
mov
add
fsubp
and
jno
iret
test
imul
push
pop
cld
sbb
aam
out
push
pop
xchg
in
test
icebp
mov
xorl
jl
hlt
push
and
xchg
adc
mov
mov
incl
rolb
push
xor
dec
lods
mov
loopne
push
xor
jmp
pop
cmpb
in
lret
mov
sbb
adc
outsb
cmp
push
xor
cmpsb
inc
xor
adc
rclb
rolb
shr
cwtl
sldt
mov
xor
add
jmp
ret
xlat
data16
bound
js
jle
js
fsubrl
icebp
lods
rcrl
leave
xor
mov
pushf
rolb
lods
xor
xchg
sbbl
aad
pop
sbb
das
inc
cmpsb
jge
mov
mov
jns
sbb
popa
test
lcall
scas
dec
jl
mov
mov
dec
and
xor
pop
test
dec
mov
fldcw
push
add
sti
mov
add
loop
enter
push
sub
inc
and
and
pop
mov
fimull
jbe
leave
bound
xor
out
xchg
mov
push
jmp
shlb
mov
lcall
or
inc
jno
jnp
jl
fsubs
jg
add
icebp
in
int3
test
mov
mov
mov
mov
sub
xchg
push
cmp
cmp
jae
repz
in
add
test
push
ds
mov
ret
xor
popf
lcall
mov
gs
cli
clc
pop
xor
pop
mov
daa
or
and
push
xor
mov
shrb
cmp
pop
pop
or
repz
push
xchg
jns
shlb
adcl
leave
notl
insl
imul
pop
mov
adc
sti
inc
and
int3
std
lret
mov
aam
aam
pop
cmp
add
cmc
sub
push
lods
cltd
sub
inc
cltd
lods
je
add
push
pop
ja
aas
hlt
insb
mov
pop
icebp
cmp
xor
sahf
dec
aam
add
pop
jo
nop
xlat
ret
dec
loopne
std
push
mov
mov
into
mov
pushf
adc
mov
out
in
adc
out
pop
xacquire
inc
aas
sahf
jecxz
sub
and
ljmp
imul
pop
out
test
inc
pop
adc
fxch
jns
pop
lods
xor
or
mov
push
ljmp
testl
sbbl
mov
ljmp
outsl
inc
push
out
jbe
mov
lahf
pop
fdivrl
cli
xchg
and
cld
and
sti
fildl
fstps
sahf
xchg
push
mov
mov
jmp
int
xlat
enter
shll
std
xchg
lods
clc
push
cld
ja
js
jle
js
repz
xchg
aas
pop
xchg
push
addr16
stos
lret
cmp
mov
push
hlt
or
and
inc
ljmp
mov
pop
mov
and
int
adcb
dec
and
imul
scas
shl
cmp
movsl
je
ficoml
mov
pop
insl
fstps
mov
push
daa
or
mov
lahf
sbb
adc
pop
lahf
jne
imul
orb
jg
pop
lods
out
out
hlt
dec
sar
xor
ljmp
out
lea
iret
sar
insb
mov
cmp
out
fisubl
xor
out
cmp
mov
test
jge
int
mov
ret
iret
jnp
dec
out
stos
pusha
popa
fsubs
lods
andl
push
jne
jecxz
xlat
xor
push
inc
in
lret
iret
lods
dec
dec
popf
dec
push
iret
into
testl
daa
adc
mov
fucomi
aaa
repnz
orb
call
xor
xor
pop
xchg
cli
mov
xchg
notl
inc
repz
push
mov
xor
iret
roll
int3
mov
push
pop
lret
adc
sbb
fwait
aas
cmp
sti
xor
xchg
mov
pop
push
sbb
sahf
ret
pop
mov
jo
cld
or
adc
scas
repnz
mov
pop
xchg
dec
loop
dec
and
or
out
dec
cs
icebp
cwtl
jne
into
jae
mov
std
leave
lcall
jge
jb
stos
cmp
inc
repnz
add
movsl
cmpsl
add
clc
std
mov
and
es
xor
lret
lods
icebp
test
lret
loopne
stos
cmp
mov
les
gs
ffreep
sub
sahf
stc
xor
jle
rcll
scas
aaa
mov
cld
mov
int
jno
mov
sbb
push
mov
adc
je
mov
iret
pop
sub
enter
mov
inc
xlat
sbb
aam
shll
xor
in
fcomi
rcrb
fisubrl
and
shlb
shlb
and
mov
lahf
inc
arpl
push
bound
sbb
mov
mov
xor
add
mov
mov
mov
mov
jmp
aas
cmp
cmp
sbb
cmp
adc
js
in
js
test
and
insb
cmp
sbb
pop
jge
pop
pop
cli
push
ds
outsb
mov
into
and
dec
inc
int3
inc
push
mov
leave
jae
roll
xchg
ja
inc
es
and
pshufw
jo
insb
ljmp
jecxz
jmp
pusha
jbe
sub
inc
fnstcw
push
cmp
lods
push
scas
idiv
in
mov
in
rcrl
xor
adc
lods
adc
ss
mov
push
pop
int3
std
loop
shlb
mov
xchg
sarl
mov
pushf
dec
pop
test
mov
jecxz
and
pop
shl
sahf
inc
and
jle
dec
xor
call
and
fwait
ja
notb
mov
fs
rcrb
push
mov
add
pop
test
pop
subl
jge
push
jnp
adc
inc
call
xchg
push
push
push
jmp
push
xchg
pop
cmovs
das
mov
aaa
scas
dec
or
leave
mov
enterw
stc
push
push
or
into
inc
addr16
hlt
push
insl
sbb
pop
inc
add
mov
mov
pop
and
and
sbb
dec
outsl
gs
adc
fsubrl
push
mov
pop
pop
or
pushf
jno
mov
cld
mov
cltd
int
cld
xchg
aam
out
aam
loopne
lds
adc
lret
roll
pop
mov
push
jg
test
imul
push
loopne
mov
ljmp
fstl
xchg
pushf
sub
lret
fdivl
shl
push
xor
push
loopne
lret
jbe
clc
push
push
data16
std
push
jne
xchg
rorb
adc
mov
adc
jmp
cmp
ret
pop
cwtl
mov
jecxz
jmp
aad
inc
in
and
add
xchg
int
push
pop
test
sub
mov
sbb
rcll
xor
mov
push
aad
enter
and
iret
daa
mov
sub
jge
jp
mov
arpl
outsb
rcrb
enter
aaa
mov
mov
xor
add
mov
mov
mov
mov
xor
jmp
cmp
pop
in
inc
and
dec
jp
js
jle
js
std
outsb
out
rol
push
adc
add
cmp
into
jne
sbb
pop
adc
ror
sub
outsb
xor
stos
popa
adc
daa
rolb
mov
outsb
push
in
xor
cmp
lahf
fadds
xchg
iret
adc
ja
dec
mov
ret
inc
inc
pop
xor
std
cmp
adc
ss
loopne
lea
mov
inc
mov
mov
xchg
and
out
jge
cmpsb
nop
mov
out
sbb
and
adc
mov
mov
nop
out
or
xor
inc
mov
and
and
loopne
enter
jl
out
icebp
mov
sub
mov
shll
pop
xchg
aas
sbb
mov
cwtl
pop
scas
cs
jl
mov
and
pushf
les
jns
adc
xorl
cmpsl
rcrl
lods
sbb
mov
imul
sarb
call
jb
mov
inc
lock
mov
je
inc
jae
rcll
pushf
movsb
in
inc
inc
decb
inc
das
sub
in
xor
aaa
pushf
bound
adc
mov
int
dec
or
aaa
mov
add
mov
gs
ja
dec
cs
inc
or
lock
cmp
xlat
loope
rclb
in
enter
lods
fwait
inc
iret
sbb
fimuls
andl
js
pusha
mov
shll
in
iret
sbb
mov
popf
pop
jl
xchg
pushf
pop
adc
mov
shlb
xchg
nop
lods
ss
repz
sub
ret
call
clc
icebp
and
loopne
scas
mov
inc
mov
cltd
cmovno
fbstp
insb
out
inc
imul
cltd
mov
flds
push
dec
pop
inc
adc
mov
xor
fwait
and
and
stos
cmp
cmc
decb
movsb
dec
xchg
jge
std
arpl
fnstsw
shlb
xor
xor
cmp
jle
or
adc
mov
mov
push
pop
mov
pop
mov
mov
or
int
mov
ja
insb
push
lods
addb
in
mov
mov
jmp
enter
cld
imul
pusha
inc
js
js
jle
js
arpl
mov
mov
out
inc
cwtl
loope
mov
outsl
out
ja
or
mov
into
xor
mov
movsb
popa
jl
out
fmul
out
rcrl
jg
iret
pop
dec
lcall
jl
shll
jecxz
add
dec
push
and
je,pt
xchg
xchg
inc
add
add
fsubrs
das
stos
imul
pop
push
adc
lods
jns
outsb
pop
mov
mov
lahf
sub
mov
fcoms
enter
push
mov
hlt
push
cmc
jne
loopne
mov
movsb
mov
je
outsl
aas
jmp
cld
xchg
cmpsb
ret
jg
mov
data16
divl
and
das
clc
xor
cmc
add
jp
cmc
pushf
mov
arpl
pusha
shrl
daa
loope
lret
jns
nop
add
mov
lahf
or
push
xchg
cwtl
inc
mov
cltd
ja
adc
imul
mov
std
pop
outsl
fiadds
dec
popa
fcomps
adc
daa
mov
and
jmp
cmpsl
mov
into
call
repz
cs
xchg
add
loopne
pop
testb
fs
mov
int3
cmpsb
mov
leave
sbb
xchg
out
insb
xor
push
mov
cmp
ffreep
stc
inc
and
mov
cmp
or
sub
add
fsub
cmp
cmp
loopne
mov
sbb
jbe
xchg
cmp
shlb
je
imul
mov
scas
ret
test
mov
push
jecxz
dec
sub
xchg
mov
dec
push
and
mov
add
out
lahf
cltd
mov
scas
mov
movsb
push
cmp
add
inc
test
xchg
and
xchg
lock
mov
mov
jno
or
popf
jmp
aas
ss
in
ja
stc
or
jg
repnz
xor
push
hlt
cld
cmp
ds
dec
add
dec
push
das
xorl
jb
mov
mov
popa
cmp
shl
sbb
repz
in
out
mov
cmpsb
fcmovb
fcmove
idivb
data16
ror
jl
cmp
es
hlt
mov
push
mov
shlb
clc
add
add
jmp
ror
ror
leave
leave
mov
mov
jge
js
jle
js
mov
mov
or
mov
fistl
push
xchg
pop
inc
pusha
dec
adc
dec
je
test
mull
xchg
and
popf
mov
repnz
jmp
add
jge
dec
sbb
repnz
add
popf
push
jb
lahf
dec
push
push
mov
jbe
inc
xor
scas
mov
adc
filds
xchg
or
mov
pop
sbb
test
mov
mov
jns
out
rcl
mov
fdivl
cmpsb
shrb
insb
fs
test
sbb
and
or
add
ret
fwait
lods
mov
dec
jnp
scas
arpl
aad
pop
and
push
dec
icebp
mov
adcb
lahf
mov
orl
inc
jl
mov
mov
mov
imul
mov
sub
fs
adc
jno
fildl
pop
fdivr
aad
cmpsl
mov
mov
jecxz
and
cmp
inc
lret
arpl
pop
sbb
ljmp
xchg
std
mov
fstpl
movsb
inc
sbb
out
push
out
and
shlb
out
notl
js
pop
mov
fdivrl
cmp
ja
lea
aas
adc
call
test
inc
lock
int3
fdivrs
lods
xchg
loope
dec
xchg
push
js
fldt
call
cmp
pop
pop
adc
into
test
pop
and
mov
xchg
inc
loopne
sub
fidivrs
jno
jae
inc
roll
js
out
sub
pop
xchg
ljmp
pushf
xor
cmp
and
clc
outsl
movsb
sub
shl
imul
sbb
sbb
xchg
mov
mov
push
stos
pop
sub
add
xchg
mov
cmc
sbb
sub
or
flds
insb
dec
clc
xor
in
cwtl
push
add
int3
rcrb
insl
pop
outsb
jmp
pop
repz
imul
cmp
jo
cs
inc
mov
and
enter
mov
aaa
or
roll
mov
jb
cld
xchg
ja
jo
icebp
push
sub
add
mov
cld
add
stc
push
xor
movb
add
mov
mov
mov
xor
add
imul
mov
xor
jmp
enter
lret
fxch
flds
xchg
loope
or
js
jle
js
jns
je
leave
pushf
mov
ret
mov
jg
adc
mov
mov
mov
push
and
and
push
fdivs
mov
or
inc
mov
test
fnstenv
sub
mov
jle
lret
out
sub
dec
test
fcoms
push
mov
cmp
inc
jnp
push
aad
mov
sub
in
stos
icebp
cmp
icebp
push
repnz
nop
mov
je
sub
cmc
cmp
sbb
mov
rcrl
les
mov
or
inc
loope
in
cltd
or
dec
test
mov
mov
popa
dec
xor
jge
xchg
and
jmp
add
dec
sti
xor
push
dec
jecxz
xchg
cmpsb
dec
or
daa
push
xchg
fwait
and
push
inc
imul
in
icebp
or
push
test
fs
ds
push
push
inc
push
dec
cmpb
rcll
inc
add
and
inc
iret
inc
sti
insl
dec
inc
mov
ljmp
sbb
pop
inc
loope
das
cmpsb
lea
aas
and
add
insb
fidivs
addr16
lcall
adc
outsb
jecxz
cmp
push
in
js
pop
and
clc
pop
push
dec
mov
xchg
ja
xor
lea
or
mov
pop
sbb
pusha
pop
cld
out
out
js
and
dec
repnz
std
and
pushl
sar
cmpl
mov
or
mov
mov
xchg
dec
lcall
lret
in
out
repnz
aam
in
xchg
xchg
push
lcall
mov
pushf
xchg
jle
mov
push
jecxz
into
pop
outsl
ss
push
lret
fwait
lds
push
lret
fldt
jo
and
cmpsl
sbb
inc
xchg
mov
cmp
mulb
jb
push
ljmp
xchg
cmpsb
bound
inc
shr
lea
dec
cmp
out
lcall
inc
das
popf
jp
ret
out
jbe
xor
pushf
sub
mov
mov
xor
add
jmp
ror
iret
aam
insl
js
test
mov
js
jle
js
stc
les
in
jns
fnstenv
jp
adcl
lcall
outsb
pcmpeqb
in
mov
leave
push
or
pop
orl
leave
xlat
cwtl
loopne
movsb
mov
aam
inc
inc
popf
xchg
lret
repz
cmp
js
inc
lret
mov
inc
shll
xchg
push
dec
je
jge
insl
xlat
dec
sbb
pop
jae
mov
pop
or
stos
mov
inc
pop
lods
xor
inc
test
sbb
repz
jae
mov
pop
jecxz
cmpsb
hlt
sbb
jecxz
add
push
jg
sbb
dec
in
inc
cmp
dec
faddl
rorb
sbb
push
cmpsb
les
sub
inc
adc
push
xor
stc
inc
xchg
shrb
push
push
int3
lods
in
adc
add
xchg
shrl
sahf
xchg
stos
mov
mov
mov
lods
adc
mov
pop
sahf
mov
adc
jecxz
dec
mov
push
imul
cwtl
cmp
cli
movsb
bound
mov
addr16
adc
mov
inc
mov
jbe
xor
lea
or
test
fsubs
popf
addr16
jle
fsts
push
inc
aad
out
or
pop
xchg
inc
push
shl
push
in
sahf
mov
ss
add
sbb
stos
push
push
rorl
cmp
or
jb
and
cmp
inc
pop
cmpsb
hlt
xchg
out
jbe
add
jns
pop
addr16
imul
adc
imul
jnp
lahf
inc
dec
imul
cmc
lret
ljmp
xor
sub
sahf
testl
push
jecxz
lock
sahf
shlb
fidivrl
adc
lea
mov
pop
mov
lcall
aaa
push
cli
dec
sbb
cmp
xchg
xor
push
inc
insb
shll
popf
adc
push
xchg
stos
xchg
inc
fdivl
aaa
sub
into
stc
or
push
push
mov
mov
sbb
rcl
add
bound
shr
rorb
imul
mov
jmp
rol
leave
rcr
rcr
enter
sahf
or
ja
push
jg
in
js
mov
sbb
push
push
mov
jbe
ljmp
les
es
adc
outsl
mov
jno
ds
adc
push
and
sub
mov
out
cmp
adc
push
add
lds
inc
cmpsb
out
lds
mov
mov
pop
icebp
lods
lock
loopne
xor
cmp
stos
adc
out
aas
sub
inc
addl
inc
adc
aam
cltd
sbb
cmc
lcall
xor
aam
dec
sub
cmp
cltd
push
out
je
js
mov
data16
push
push
int3
andb
aad
adc
fists
aad
jle
and
adc
pop
cmp
mov
rol
and
dec
sub
shr
adcb
dec
sbb
push
repz
inc
xor
mov
divb
in
push
or
mov
add
sub
pop
nop
pop
test
or
and
pop
dec
stc
iret
and
jmp
movsl
push
xor
xchg
in
push
cmove
sarb
sbb
jmp
fwait
lea
jne
das
xchg
rorb
jne
inc
cltd
jb
xchg
jae
mov
mov
push
call
out
push
mov
mov
mov
jo
dec
inc
ljmp
sahf
pop
incb
cmpb
test
jne
push
jle
fbstp
push
lret
and
jge
out
repnz
sub
movsb
mov
mov
scas
and
hlt
loop
icebp
data16
fwait
push
je
xchg
push
fsts
sbb
insb
popa
insb
pop
xchg
fimull
in
neg
pushf
cli
pop
inc
jle
pusha
and
adc
mov
addr16
pop
aam
out
das
push
pop
loop
cmc
inc
popf
fwait
add
pop
mov
gs
xchg
adc
xor
jp
int
cmpsl
mov
jp
cltd
ret
mov
xbegin
repz
mov
inc
inc
push
lret
adc
xchg
out
aas
mov
test
sbb
rcr
pop
jmp
mov
out
push
mov
pop
dec
jle
mov
out
push
push
test
dec
cmp
rolb
fwait
sub
icebp
mov
pop
ss
fs
jmp
inc
pop
xor
jmp
les
int
aam
mov
cmp
push
add
js
jle
js
andl
inc
sbb
cltd
xor
in
pop
or
cmp
call
in
cmp
ret
insl
into
scas
mov
mov
idivb
rcl
imul
imul
sar
xor
or
dec
sbbl
in
pop
mov
ret
jl
push
cld
stos
insb
mov
xor
jl
gs
cmpsl
sbb
test
inc
cmp
add
jne
cmc
outsl
sub
push
jb
lock
adc
mov
sbb
and
pushf
sub
and
jecxz
out
xor
inc
popf
shll
mov
push
in
mov
stos
pop
outsl
insb
mov
mov
ret
and
or
inc
rolb
repnz
out
test
mov
xor
cmpsl
and
stc
outsb
fs
pop
call
or
fs
inc
cmpsl
aad
iret
inc
mov
and
incl
pop
push
push
or
cmp
fndisi(8087
jae
dec
add
sbb
sbb
pop
pop
mov
or
mov
push
xor
xor
loope,pn
stos
lahf
addl
jo
cltd
lods
xor
dec
sbb
dec
scas
mov
cmpb
adc
popa
fsubp
je
ds
shrl
pop
movsb
jbe
inc
xor
mov
fcomps
pop
rclb
pop
sbb
mov
sbb
xchg
jns
xrelease
lret
mov
add
xchg
ret
mov
inc
dec
aad
inc
insb
lret
cmp
xor
jp
lock
pop
in
mov
mov
and
jae
test
outsl
call
xor
hlt
mov
orb
lock
aad
sti
mov
xchg
pop
mov
pushf
lods
dec
adc
shr
sbb
pop
out
pop
clc
andl
mov
or
ret
xor
sbb
push
imul
jae
je
inc
mov
adc
jp
arpl
inc
xchg
insb
cld
or
xor
mov
sarl
jae
aad
ss
mov
adc
loopne
mov
push
xchg
insl
push
adc
cmpsb
mov
mov
aas
test
sub
lea
cmp
jbe
mov
mov
xor
add
jmp
vpmovmskb
fcmovnu
addl
push
rorl
js
jle
js
subb
test
xor
jp
or
js
xor
out
xor
xor
enter
and
loopne
xchg
mov
int3
pop
jl
mov
sub
out
pop
pop
out
xor
subl
aam
dec
mov
popf
enter
or
mov
adc
inc
adc
add
xlat
jle
test
xchg
arpl
sub
outsb
or
push
add
mov
jmp
jl
gs
jns
add
inc
fdivrl
cmp
adc
mov
aaa
sbb
jb
sbb
push
test
xchg
gs
xlat
stos
icebp
es
ftst
dec
sbb
and
pop
inc
nop
add
stos
divl
hlt
shrb
cli
mov
mov
movsb
out
stos
xor
ret
rclb
and
add
sahf
and
nop
aas
ljmp
jb
xor
stos
pop
mov
outsl
int3
mov
mov
jb
ror
xchg
ficomps
adc
push
and
and
jle
mov
int3
mov
xor
push
in
pop
pop
negb
pop
xlat
test
jmp
xchg
cs
cmc
push
stos
mov
jmp
dec
cmp
or
cli
mov
das
adc
xor
inc
addr16
and
push
iret
sbb
ret
fbld
repnz
xor
sti
sar
jnp
push
ret
ret
call
mov
std
adc
mov
xor
imul
lock
or
pusha
push
fsts
test
js
call
push
adc
inc
pop
loope
xchg
scas
scas
xchg
lea
add
mov
mov
lods
movsb
jo
sbb
dec
push
repz
out
mov
mov
pop
sahf
cmp
ret
icebp
mov
outsb
push
sub
fwait
test
mov
pop
lret
jns
jno
sub
sub
mov
out
fdivr
insb
std
out
push
xor
inc
ds
push
rcrb
cli
ja
sub
mov
push
popw
cmp
sbb
stc
adc
movsl
fdivrl
push
lea
rolb
mov
dec
mov
mov
push
jmp
mov
jmp
lret
ret
vpand
ret
sbbb
imulb
jle
js
xor
iret
cmp
push
inc
inc
and
cltd
outsl
loopne
stos
dec
mov
insl
push
jg
pop
mov
inc
ljmp
fwait
hlt
jge
gs
sub
popf
test
push
shll
scas
sbb
mov
test
ror
sahf
fdivrp
xchg
std
testl
fstps
lods
pop
cmc
lret
mov
xor
sub
ds
cmp
test
insl
pop
and
scas
outsl
dec
and
adc
and
sbb
lcall
fsubs
rsm
sub
mov
add
mov
cli
jno
cmpsl
and
push
mov
stc
adc
or
lods
stos
mov
roll
fdivl
xchg
lret
aaa
lds
sub
dec
arpl
clc
gs
repz
pop
adc
sub
or
negl
or
mov
push
adc
adc
in
dec
xlat
dec
mov
and
xorl
mov
andl
jg
mov
out
mov
mov
sarb
mov
faddl
les
mov
out
nop
add
faddl
mov
movsb
int3
inc
ret
sub
xor
mov
add
fwait
insl
cld
in
js
lahf
inc
mov
or
sub
xor
fisttps
cld
cld
mov
lods
lea
push
cmc
mov
xchg
sbb
sbb
out
and
adcb
adc
xlat
xor
xor
adc
mov
jp
ljmp
add
aad
cmp
movsl
shlb
push
cmpsb
add
popa
inc
mov
loop
lock
outsb
and
sbb
or
sub
xor
inc
ret
insl
hlt
cld
mov
push
jne
mov
cmc
out
cmova
fistps
enter
mov
repz
pushf
mov
loope
or
in
negl
fwait
xor
lahf
aad
repnz
ds
inc
ret
bound
dec
lret
sbb
ret
stos
out
imul
mov
aas
pop
or
cwtl
mov
and
inc
data16
sahf
xor
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
jmp
rcl
aad
leave
xchg
sbbb
jg
in
js
xchg
add
bound
sub
xchg
fistps
call
std
inc
lds
inc
sbb
orl
ret
jge
push
jcxz
int3
lods
mov
fs
mov
add
repnz
cltd
xor
xchg
lds
pop
je
popa
add
jns
mov
dec
jnp
mov
cmpl
xlat
cmpsb
and
aas
sub
jle
iret
lahf
sbb
xchg
mov
dec
arpl
push
sbb
jns
inc
and
push
mov
mov
bswap
imul
inc
inc
or
test
iret
ss
jns
sub
icebp
mov
std
pop
fistpll
imul
push
add
and
mov
inc
sbb
icebp
leave
aas
xchg
dec
popa
clc
xor
fistps
xchg
lock
in
int
fldenv
dec
jl
ret
hlt
jmp
add
xchg
xor
ja
lds
stc
lods
cmp
jnp
sbb
cmp
mov
cltd
mov
cmp
test
pusha
in
or
cmc
repnz
sbb
shlb
fldcw
ret
jp
mov
sub
jbe
outsl
enter
repz
out
sub
ljmp
mov
imul
stos
mov
std
aam
xchg
pop
cltd
mov
mov
sub
push
mov
dec
dec
gs
add
sarb
lahf
push
xchg
and
int
push
fsubrs
stc
jecxz
jl
dec
cmc
push
rolb
shrb
aad
call
gs
adc
rcrl
fmull
dec
add
cmp
imul
test
adc
xor
std
rcrl
lods
loope
mov
mov
push
inc
jle
dec
outsb
test
pop
out
ljmp
xchg
fs
dec
or
dec
ljmp
lea
xchg
scas
out
loopne
mov
bound
in
in
out
repz
inc
cs
mov
cli
pop
popf
push
xchg
mov
sbb
in
xlat
in
push
inc
lret
stc
push
dec
or
jne
mov
pop
mov
rcl
in
rolb
rorl
scas
sarl
xlat
jmp
int
cmp
int3
leave
aad
xchg
mov
dec
add
and
jle
js
imul
stos
sbb
xchg
dec
jo
into
imul
push
outsl
jmp
lds
and
test
ss
push
rcll
cs
imul
and
pushfw
daa
push
ljmp
cli
into
sbb
rclb
push
pushf
sub
ljmp
ja
xchg
cmpsb
es
jl
aas
pop
mov
push
xlat
push
lret
sahf
into
in
lahf
jnp
gs
in
nop
xchg
cmp
icebp
sub
mov
sti
ds
inc
lods
imul
jge
mov
mov
repnz
fildl
mov
fistpll
xchg
jmp
inc
hlt
sub
jp
mov
sbb
push
mov
pusha
jbe
pop
mov
add
in
lret
js
push
std
loop
lods
sub
inc
lea
and
movsb
dec
imul
hlt
mov
add
jl
jae
xchg
movsb
mov
in
jno
adc
out
icebp
push
mov
insl
lahf
testl
sub
in
dec
ret
sub
movsl
jne
cmpsb
xor
je
adc
mov
or
stos
lock
jbe
cli
popa
jge
push
divb
adc
pop
shl
mov
cmpsb
pop
mov
or
mov
rorl
in
push
dec
or
and
cmp
fldcw
shl
add
data16
jmp
cs
pop
push
addr16
jbe
ja
inc
add
push
inc
les
mov
popf
lahf
push
and
add
xchg
adc
adc
sti
es
xor
fs
popf
mov
test
stos
jns
mov
xor
dec
or
pop
scas
iret
movsb
lods
mov
pop
jb
xlat
cmp
stc
pop
je
jne
xchg
jo
add
into
fnsave
loop
cmp
push
mov
cmpsl
repz
mov
mov
clc
mov
int
mov
xchg
scas
mov
ja
inc
mov
fs
cmp
xchg
or
add
iret
cmp
inc
lret
jnp
jle
cmpl
inc
rorb
icebp
or
mov
movsl
cmpsb
insl
add
imull
bound
lret
add
jo
mov
xchg
lcall
leave
ret
push
mov
sub
movzwl
xor
push
andl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
call
jmp
push
xor
add
push
push
xor
pop
or
xor
sub
mov
div
push
sbbl
call
movl
inc
movl
cmp
jb
movl
incl
movl
lea
inc
mov
andl
lea
xorl
mov
or
mov
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
andl
mov
xor
xor
xor
mov
sub
add
mov
mov
mov
movzbl
cmp
mov
mov
mov
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
or
mov
xor
xorl
add
addl
imul
movl
mov
movl
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
movzbl
xor
mov
xor
add
and
mov
negl
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
not
add
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
add
mov
mov
xor
xorl
add
movl
cmp
movl
jne
movl
push
subl
pushl
pushl
subl
call
mov
mov
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
jmp
or
mov
mov
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
adc
mov
movl
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
and
mov
mov
andl
mov
addl
xor
xorl
xor
add
mov
xor
orl
xor
add
lea
movl
mov
movl
cmp
ja
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
call
cmpl
jb
sbb
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
into
int
rol
shl
out
stc
jmp
or
js
jle
js
or
mov
jmp
popl
jno
jbe
jo
inc
aam
inc
sub
mov
pop
stos
or
mov
or
test
push
iret
incl
xchg
push
push
lahf
js
mov
pop
fsubp
shl
sti
and
inc
je
cmp
jmp
pop
mov
loopne
bound
sbb
movsb
inc
popa
mov
ss
rcll
mov
je
loopne
sub
jg
rcr
inc
mov
leave
adc
clc
xor
ja
fs
test
dec
sbb
pop
ror
xchg
ret
xchg
mov
hlt
mov
aad
clc
cmp
mov
fwait
xchg
jle
xchg
mov
mov
inc
aas
aam
xchg
in
dec
andl
stos
sahf
pop
and
cli
cli
lret
inc
cld
xchg
sub
cmp
xchg
shll
push
fmul
mov
js
sbb
xor
aam
adc
jnp
push
xchg
push
cli
bound
mov
xchg
mov
imul
adc
mov
push
mov
mov
xchg
pop
andb
rcll
leave
sub
mov
aas
mov
mov
push
insl
or
nop
cmp
sub
sbb
pop
out
cwtl
inc
lds
or
cmpsw
adc
mov
adcl
es
test
cld
inc
jnp
and
xchg
xor
std
es
stos
jp
lcall
jo
movsb
insl
and
sub
cmp
lea
push
jnp
loop
enter
test
aad
call
jns
pop
test
xchg
repnz
mov
ss
in
xor
in
dec
add
int
xchg
push
xchg
test
or
or
cmp
xchg
add
in
cs
adc
dec
in
ror
inc
pop
out
or
lock
jo
mov
lea
inc
adc
inc
inc
insl
cmc
paddw
push
das
inc
sbb
adc
fdiv
cmpsl
mov
xchg
out
add
in
clc
sub
fldenv
or
or
out
and
idivl
sub
mov
jl
xor
add
xchg
mov
push
pusha
jno
in
jns
inc
das
push
rcr
cmp
jg
mov
rolb
hlt
xor
fiaddl
jmp
push
push
movl
mov
movl
movl
mov
push
jmp
lret
xlat
fcmovnbe
lret
test
pop
stos
mov
sbb
adc
js
pop
dec
std
dec
lea
dec
movsb
ljmp
push
dec
aad
mov
xchg
outsb
call
and
int3
sub
mov
out
arpl
fisubrl
test
jle
loope
enter
or
and
fiadds
loopne
leave
inc
xor
xchg
push
mov
jp
lahf
insb
push
push
push
mov
bt
sbb
jg
pop
xchg
dec
xchg
fcompl
dec
insb
pushf
dec
loopne
mov
mov
mov
mov
and
xor
push
aam
mov
fwait
cmp
adc
xchg
lcall
shrl
filds
and
inc
xchg
gs
scas
cld
adc
pop
xor
mov
mov
or
js
shl
mov
cmp
addr16
int3
movsl
push
fldl
jnp
sub
cmc
sub
leave
in
mov
fcomi
xor
jns
loope
mov
adc
pop
pop
cmp
mov
and
mov
add
in
out
ret
pop
imul
sbb
mov
ja,pn
add
aad
rorl
mov
push
xchg
mov
and
loope
dec
jae
sbb
lock
mov
xchg
scas
sub
jns
sbbb
hlt
and
aam
sub
es
sub
adc
ljmp
in
push
inc
outsb
shr
nop
xor
dec
push
sbb
jns
sub
fstl
scas
or
or
idivl
sub
lcall
or
push
test
rcrl
sbb
sbb
mov
jg
mov
or
aas
jno
pop
test
loope
mov
shl
xchg
sub
push
cmpsl
jne
sbb
out
xchg
aad
adc
jnp
icebp
and
adc
mov
or
cmc
out
xchg
or
mov
adc
enter
insl
aaa
xchg
inc
icebp
mov
or
ficoml
sub
pop
daa
push
cmp
ja
in
cmpsb
push
and
or
jae
popf
sahf
fwait
outsl
lret
dec
subl
cmpsb
rcl
mov
xchg
push
into
add
xchg
pop
pop
cwtl
and
dec
repz
adc
sahf
and
sti
jl
int3
jge
mov
scas
xchg
and
vunpcklps
mov
movl
mov
mov
push
mov
mov
mov
cmp
movl
je
mov
mov
xor
subl
add
cmp
je
jmp
into
xlat
ror
aad
rcr
stos
imul
push
jecxz
pop
daa
sbb
xchg
jle
js
insb
lock
mov
test
xchg
scas
popa
insb
subl
ret
adc
pop
sbb
and
loop
pushf
dec
xor
adc
fildll
pop
add
ja
or
xlat
enter
fstl
mov
and
mov
cmp
xor
push
rcrl
fnstsw
mov
and
mov
jno
test
int3
ret
adc
lock
insb
scas
in
push
dec
and
pop
lahf
xchg
push
popl
mov
inc
mov
xchg
xlat
sti
or
and
mov
lret
in
xor
mov
add
movsl
fcoml
addr16
pusha
leave
inc
test
pop
cli
je
int
push
in
lret
dec
out
mov
dec
and
sub
fcoml
xorb
cli
pop
das
aam
jecxz
shrl
ret
jns
rorb
sub
pusha
ret
sub
add
push
xchg
hlt
loopne
daa
mov
sahf
test
fisttpl
push
das
lahf
mov
pop
adc
mov
shl
das
or
test
xchg
es
mov
cli
xchg
inc
dec
jl
ret
add
sbb
pop
or
cltd
adc
movsl
faddl
push
push
adc
add
das
std
inc
cwtl
ljmp
or
sbb
bound
xor
cld
mov
es
daa
shl
ret
cs
fnsave
cmp
fcomps
mov
std
pop
mov
mov
js
out
dec
sub
adc
pop
arpl
xor
mov
inc
sti
mov
shl
adc
jbe
subps
mov
shrl
pop
sbb
cmp
sub
out
cmp
jp
jo
cmp
xor
call
nop
cmp
jge
jmp
jge
and
shl
imul
cmp
xchg
lcall
or
mov
aam
mov
cld
mov
or
xchg
out
lret
cmp
xor
jl
out
xor
or
xchg
fwait
roll
xor
icebp
lods
mov
lds
outsl
jmp
lcall
sahf
mov
movsl
stos
daa
cmc
fmuls
or
mov
dec
and
mov
inc
cld
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
push
pushl
pushl
mov
addl
jmp
ret
leave
leave
leave
lret
add
or
xchg
jle
js
cmpsb
ds
loop
push
hlt
cmp
test
jne
insl
adc
xor
ljmp
sbbl
pushl
lods
cmpsl
lock
pop
mov
mov
sub
test
mov
cmp
mov
cmc
repnz
movsl
lock
call
aam
jbe
aam
data16
loope
xchg
gs
sarb
stos
sbb
lret
xchg
cmp
sbb
gs
clc
adc
je
nop
pop
fcmovne
inc
out
imul
pop
test
pop
inc
data16
sub
jns
sti
cmpsl
mov
loopne
insb
leave
pop
push
out
loope
scas
orb
dec
jne
movsl
into
cld
sarl
into
shrl
and
repz
imul
xchg
cmc
and
cmp
adc
xlat
out
cmp
xlat
test
adc
xor
xchg
mov
lret
hlt
sbb
mov
xchg
push
pop
aaa
fwait
xor
out
mov
cmpsl
pop
push
ja
call
scas
push
xor
xor
fistpll
aaa
dec
or
jg
inc
fstpl
cmpsl
dec
push
sbb
mov
rol
push
jmp
lods
sbb
add
dec
repnz
push
push
mov
pop
in
lods
sbbl
in
xchg
imul
adc
mov
mov
clc
push
ljmp
mov
mov
pop
jg
mov
add
pop
mov
add
and
push
out
sub
mov
xor
lds
jg
loope
inc
mov
outsl
add
sarb
mov
and
adc
pop
jns
cltd
cmc
sub
pop
mov
add
inc
inc
push
dec
pop
xchg
es
mov
rclb
xor
mov
pushf
mov
insl
adc
inc
pop
adc
jmp
push
das
add
das
ror
dec
pusha
inc
add
dec
adc
mov
bound
mov
pop
sbb
cmp
xchg
and
enter
ret
xchg
outsl
xor
cmpsb
lods
adc
popa
mov
test
mov
into
int3
pop
stos
loop
ss
jne
test
fldenv
in
sub
hlt
inc
loopne
and
rorl
push
cltd
mov
cld
mov
rorl
insb
sbb
mov
inc
daa
lret
fld1
xor
add
mov
mov
jmp
ret
int3
int3
aad
leave
roll
mov
and
sbb
js
shll
cwtl
push
jmp
subl
ja
iret
inc
pusha
sub
gs
sbb
mov
mov
jbe
dec
cmp
rcr
adc
inc
push
mov
sbb
daa
dec
jb
cmpsb
push
mov
cmp
int3
sub
out
jecxz
xor
cmp
inc
lcall
push
neg
mov
movsl
mov
sub
add
fadds
xchg
add
rcll
icebp
out
loope
sub
mov
inc
inc
xor
jmp
adc
lods
xchg
lock
mov
loop
pop
mov
jno
lds
rorl
sahf
mov
in
out
dec
aas
pop
lcall
iret
add
or
jae
mov
sbb
cmc
aaa
jl
pusha
imul
cmp
test
or
imul
in
jg
add
xchg
insb
inc
pop
jmp
or
push
addr16
cld
push
xchg
addr16
mov
arpl
xchg
push
call
sarb
fcomip
dec
in
popa
cmp
sub
cmp
mov
sub
push
xor
lds
cmp
lea
jmp
repnz
lea
shll
sub
push
jge
jge
add
mov
lods
ds
mov
and
enter
jo
sub
mov
push
jnp
int
sbb
add
test
imul
sbb
jl
add
aad
loopne
mov
cmpsl
jno
mov
test
jns
cltd
sbb
ficompl
jge
fwait
sti
lret
sub
cli
je
mov
cmp
pop
ret
jg
cs
pop
inc
rcr
test
stos
jns
into
test
push
cmpb
sahf
out
sti
xor
pop
ror
jg
sbb
lret
xor
sar
adc
and
loope
sub
jecxz
les
jp
sub
aas
adc
jecxz
pop
addr16
add
pop
inc
or
cwtl
xor
xor
fldcw
xchg
test
adcl
test
xchg
negb
aad
push
dec
cmp
sbb
xchg
jp
sbb
inc
cltd
enter
jne
je
shl
mov
inc
rclb
mov
test
test
int3
aad
dec
sarb
xor
aam
mov
mov
jmp
jmp
ds
int3
lret
xchg
aam
test
jbe
jg
xchg
jle
js
xor
inc
or
push
scas
js
jg
push
aaa
cmp
sbb
leave
int
pop
mov
andb
sub
adc
jle
clc
inc
frstor
sbb
sub
jmp
pop
fimull
add
int3
adc
adcb
add
xchg
xchg
pop
dec
jmp
or
jbe
xchg
sbb
mov
enter
je
mov
pop
inc
mov
imulb
push
jl
scas
gs
icebp
ret
sub
into
insl
inc
cwtl
xor
lret
orl
sbb
mov
mov
pusha
aam
or
adc
mov
jmp
xor
mul
sbb
popf
aad
rolb
push
test
pop
fisubs
shlb
insl
ljmp
inc
lds
insb
lds
xchg
inc
dec
ret
jae
sub
adc
mov
sub
out
dec
loope
aaa
add
cmp
into
inc
das
repz
pushf
mov
addr16
adc
test
ret
cld
mov
ss
inc
ret
push
sbbb
pop
dec
lds
xchg
mov
jmp
mov
insl
add
into
int
lods
into
or
pop
mov
inc
sub
iret
out
mov
jmp
test
pop
dec
nop
inc
scas
cld
addr16
mov
stos
pop
jp
ljmp
inc
shrb
popf
ja
inc
inc
sub
orb
xchg
stos
imul
cmp
daa
in
cmp
stos
xor
js
sbb
xchg
cld
push
in
rcrb
stos
mov
mov
dec
rorb
add
or
mov
jnp
mov
sbb
mov
lods
sub
aas
shrl
rcll
adc
push
scas
bound
xchg
or
test
hlt
inc
sbb
cmp
lea
mov
cmp
and
xlat
push
add
cmp
imul
push
mov
or
leave
pop
inc
bound
pop
dec
ficoml
xchg
std
inc
fcompl
pusha
je
xor
mov
or
out
push
call
incb
imul
sbb
aas
cmpsl
sbb
loop
mov
inc
aaa
lretw
outsb
mov
lcall
mov
sub
mov
inc
cld
jmp
rol
iret
fcmovbe
fcmovne
mov
notl
js
jle
js
aad
push
jp
hlt
scas
sub
mov
xor
or
xchg
pushf
xchg
adcb
ret
add
frstor
addr16
jae
mov
xlat
mov
jne
arpl
xor
mov
in
xor
iret
pushf
mov
addr16
adc
movsb
and
xchg
mov
gs
out
pusha
out
sbb
addr16
push
sbb
pop
xchg
lea
stos
sbb
or
xor
fimull
repnz
fisttpl
push
fcoml
test
sarb
pushf
lock
xchg
jne
pusha
fidivrs
sbb
pop
or
push
loopne
out
je
inc
loop
jmp
mov
out
dec
test
ret
shrb
std
imul
mov
es
out
jb
inc
mov
or
mov
cld
movsb
dec
mov
int
nop
push
out
adcl
or
xchg
xchg
mov
mov
sbb
jecxz
jbe
xchg
cmpsb
push
mov
aad
xor
lcall
aad
cs
mov
cmpsb
outsl
leave
sbb
xchg
mov
pop
and
stos
mov
rcrl
mov
mov
sbb
outsl
aas
fadd
out
or
dec
pop
mov
dec
lahf
ret
sbb
leave
or
lret
lret
les
adc
inc
and
enter
sub
mov
and
and
icebp
stc
lods
fwait
sub
mov
cmp
out
sbb
mov
aam
std
scas
xor
idivb
idivb
test
clc
sub
adc
out
filds
int3
push
xchg
add
fldcw
mov
xchg
xchg
les
mov
lahf
jl
adc
rcrl
subl
stos
push
xchg
outsb
mov
push
mov
sbb
pop
mov
imul
xor
xlat
sub
movl
stos
divb
scas
mov
mov
cmp
inc
fcmovb
pop
mov
and
ret
pop
jns
inc
enter
jp
jl
dec
imul
hlt
enter
cmpb
int3
mov
push
rorl
sbb
dec
xor
into
and
adc
push
cmp
addr16
sub
sti
push
push
out
cmc
test
movsb
adc
xchg
iret
mov
mov
dec
adc
movl
test
inc
cld
xor
add
mov
mov
xor
jmp
xlat
cmp
fcmovne
push
lcall
sub
js
sti
outsb
lret
cmp
push
inc
repz
inc
mov
xor
or
pop
or
jne
int3
or
out
mov
aaa
imul
add
hlt
dec
fs
stos
leave
rorl
ja
pop
iret
out
sub
fld
insl
pop
ljmp
orb
pop
or
imul
enter
lahf
pop
nop
add
loop
in
push
pop
jle
sub
pop
icebp
in
sub
arpl
or
insl
test
xor
enter
mov
lret
cmp
pop
pop
or
sbb
pop
pop
mov
rorl
push
xor
dec
insb
cltd
push
insb
add
sub
mov
inc
test
push
addl
xchg
inc
aam
xlat
xor
adc
out
mov
cmp
jmp
jge
lcall
adc
jo
and
imulb
cmp
fs
in
push
jl
loopne
xchg
ret
mov
stc
sub
shll
jp
shlb
pop
stos
mov
jecxz
mov
inc
pop
push
fdivr
inc
sub
jbe
or
xor
mov
add
and
insl
movsl
mov
jne
in
in
push
iret
lds
mov
or
xchg
add
out
orps
mov
mov
ja
mov
inc
adc
jl
push
and
inc
cmpsb
mov
push
mov
jmp
leave
andl
inc
or
and
add
xchg
dec
xchg
and
mov
cmp
addr16
test
ret
mov
imul
and
dec
mov
cmp
cmp
jecxz
mov
mov
cmp
enter
fcoml
mov
mov
out
cmp
movsb
insl
jmp
out
lret
add
sbb
in
es
push
xor
outsb
cmp
inc
sub
pop
test
idivl
lahf
inc
lea
int3
and
inc
sub
fs
cltd
and
pop
xchg
add
lods
adc
push
jbe
jl
push
aas
popf
clc
lret
xchg
xor
out
sub
bound
fwait
enter
enter
or
in
lds
mov
rclb
enter
jmp
push
jnp
test
ds
dec
sub
jbe
fcoml
push
arpl
jo
frstor
inc
div
int3
add
mov
lahf
add
mov
jmp
ret
xlat
leave
rcr
rcr
xlat
cmp
or
sub
xchg
jle
js
shrl
xor
push
in
push
ret
inc
jle
push
shll
adcl
dec
lock
jp
test
cmpsl
xlat
movb
iret
sub
fdivr
testl
mov
and
or
addb
jno
cwtl
stos
shlb
push
addr16
leave
rcrl
pusha
shll
jae
test
sbb
push
sbb
cwtl
inc
iret
repz
inc
daa
dec
inc
inc
mov
repz
in
imul
add
sbb
or
iret
loop
subb
ljmp
daa
jnp
and
scas
in
ljmp
add
testb
aam
sbb
xchg
mov
shlb
cmp
mov
xchg
add
mov
cltd
es
jg
inc
xchg
jbe
sub
imul
jb
out
sub
pop
loop
dec
call
pop
xchg
imul
push
mov
add
mov
lods
jo
es
jle
aas
out
add
ret
out
cwtl
cld
incb
iret
mov
sbb
dec
jae
adc
dec
or
mov
in
push
ficoms
push
mov
mov
test
lret
cs
shll
and
xor
dec
jns
push
fimull
lods
test
jle
cmp
das
syscall
inc
fcmovne
xor
mov
nop
stc
pop
shr
in
cmp
sub
insl
jmp
in
rcr
mov
stc
pop
sub
mov
loope
repnz
out
push
vmptrld
cmp
addb
jle
lea
mov
and
or
daa
xor
stos
es
mov
out
push
lcall
dec
int3
mov
pusha
cs
stos
cmc
adc
sbb
inc
xchg
clc
addps
or
jb
or
sbb
cmp
int
inc
xchg
test
in
push
push
je
loope
push
in
and
cmp
in
add
add
fmuls
push
cld
ja
jg
fildll
stc
cmp
and
nopl
rcrl
mov
in
lahf
insl
popf
cli
cmp
loopne
cmp
ret
in
cmp
or
push
xor
push
fiaddl
push
xchg
push
ja
mov
pop
pop
iret
and
cltd
pushl
pushl
call
mov
xor
pop
jmp
rcl
rcl
rcl
and
rclb
jnp
out
sub
xchg
jle
js
fmull
jmp
lods
out
or
rolb
mov
sbb
iret
ret
push
out
in
jo
sbb
jb
data16
adc
ret
and
and
mov
mov
pop
rcrb
or
ds
test
and
add
shlb
jne
adc
add
insl
sub
sub
adc
fwait
outsl
subl
ret
dec
leave
pushf
or
divl
movsl
fisttpll
loope
jl
addr16
aaa
hlt
pop
mov
xor
mov
in
rol
mov
mov
pop
ljmp
adc
mov
cmp
pushf
mov
test
imul
dec
cmpsb
aas
adc
adc
lcall
bound
lcall
adc
push
pop
out
sub
mov
sbb
sub
lret
or
sub
inc
mov
dec
loope
jae
mov
inc
or
repz
jne
hlt
dec
imul
enter
jo
je
jg
divl
iret
shrb
mov
loopne
dec
pop
xchg
shr
xlat
xchg
jnp
jmp
lret
icebp
fwait
loope
pop
cmpsl
push
jmp
add
je
ja
add
xchg
pop
dec
xchg
stc
in
dec
gs
sub
sbbb
sub
lods
lds
pop
mov
add
sbb
jle
push
jg
inc
mov
adcb
mov
or
loop
dec
inc
push
pop
adcl
jae
out
insl
arpl
insl
mov
add
mov
xchg
fistl
in
jmp
out
fcoms
fyl2xp1
cmp
jl
inc
inc
sbb
shlb
lcall
xor
sti
pushf
loop
mov
mov
xchg
shrb
mov
xchg
pop
sbb
cmp
loopne
sarb
stmxcsr
lods
out
cmp
mov
lcall
mov
fs
push
jbe
add
lds
dec
cmp
stos
es
push
fists
icebp
test
das
dec
mov
jno
lods
xor
push
jmp
in
add
cmp
push
out
xchg
lods
mov
scas
adc
dec
xchg
call
movsb
add
sub
cltd
and
mov
outsl
out
xchg
sbb
mov
xlat
mov
push
call
jle
movsl
mov
add
pop
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
dec
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
mov
mov
add
xor
cmp
jne
mov
mov
jmp
ror
xlat
cmp
jns
sub
ret
mov
sub
js
dec
or
mov
xor
inc
not
aas
lds
shl
iret
clc
cmp
mov
test
mov
adc
dec
xor
je
push
pop
mov
inc
jle
nop
outsl
popf
fstpl
pop
test
pop
sbb
inc
fmulp
mov
add
cmpsb
mov
xchg
or
push
dec
frstor
cmp
leave
and
popa
lods
shrl
mov
lods
dec
ja
aam
xchg
loop
cmpsl
lcall
mov
incb
inc
sbb
xor
cli
ljmp
jns
cmpb
scas
out
xor
and
mov
sub
sub
cld
push
enter
lods
cmp
pusha
enter
xor
pop
nop
iret
jp
or
cmp
pop
sbb
sub
outsl
inc
test
mov
in
or
sbb
or
subl
or
lock
popa
orl
imul
fs
stos
and
cmpsb
repz
xchg
mov
ss
fisttps
inc
les
mov
pop
dec
push
arpl
mov
inc
inc
jno
das
add
pushf
push
ret
cmp
scas
sbb
data16
stos
movsb
adc
inc
iret
clc
push
and
dec
enter
add
popf
out
mov
outsl
lods
mov
enter
mov
lcall
cwtl
dec
pop
mov
pop
xchg
or
into
fsubr
cmpsl
xorl
cwtl
lods
and
mov
xchg
in
and
xor
fidivrs
stos
dec
jmp
out
mov
dec
rorl
imul
or
push
popf
pop
stc
out
mov
and
scas
lcall
mov
out
stos
jl
inc
and
pop
pusha
int
int3
loop
repz
mov
jp
mov
sub
test
lods
stos
lock
mov
bound
add
jmp
cmp
aad
aad
popa
adc
repnz
mov
add
mov
pop
cld
jno
insl
in
in
jp
popa
enter
mov
dec
stc
mov
iret
mov
sub
lods
cmc
jp
add
pusha
outsl
mov
mov
rorl
jno
das
mov
cmp
mov
sbb
jo
dec
repz
xchg
scas
fimull
lea
pop
das
fucomip
add
jno
fidivl
cmp
and
and
push
pop
bound
orps
push
clc
or
cmp
fwait
jmp
dec
mov
sub
mov
jne
xor
divb
iret
fst
leave
push
mov
mov
lret
push
mov
dec
adc
int3
and
mulb
or
and
test
test
popf
sti
clc
lds
add
jecxz
mov
mov
ljmp
sub
sti
sbb
or
pusha
dec
cmp
jp
or
mov
lahf
popa
mov
mov
sbb
xor
and
add
lock
mov
jnp
push
sti
sarl
cmpl
inc
jae
xchg
mov
sarb
add
xchg
cmpl
in
dec
cmp
sbb
ljmp
and
sarl
xor
xchg
dec
lcall
test
sbb
xchg
and
lret
lods
inc
lahf
loope
outsb
ljmp
ss
sbb
shlb
or
sub
cmc
into
pop
add
stos
add
mov
mov
repz
lcall
aad
or
iret
ljmp
jmp
pop
lret
test
xchg
shlb
ss
mov
cwtl
out
sbb
jnp
sbb
fsubrl
pop
ret
inc
movsl
cld
jmp
sbb
push
idivl
xchg
adc
jno
icebp
cmp
push
or
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
jmp
cmp
int3
leave
fnstenv
or
and
add
sti
test
loop
dec
mov
inc
in
test
cmp
int3
adc
mov
icebp
push
frstor
out
lret
pop
push
add
or
ja
arpl
scas
pop
pop
aas
jge
jo
adc
ljmp
out
and
orl
or
sbb
cmpb
xchg
rcl
mov
pusha
sbb
gs
icebp
out
int
add
in
mov
sub
repz
mov
movaps
inc
jge
aaa
mov
cmp
push
add
leave
dec
aad
stos
mov
jle
addr16
or
pop
in
enter
orl
lock
push
in
insl
aam
mov
xadd
leave
mov
mov
jne
test
popa
cltd
jg
repz
mov
push
push
ret
movsb
js
adc
arpl
dec
mov
inc
aad
or
stos
cltd
push
jae
insl
outsl
add
pop
cwtl
cmp
dec
out
dec
sbb
popa
jp
inc
dec
push
js
adc
mov
mov
cmpsl
xlat
mov
add
push
adc
pop
mov
aaa
xor
lea
xchg
pop
inc
pusha
cld
daa
cmpsb
mov
cmp
daa
jmp
fisttpl
and
es
cmpsb
inc
mov
call
lret
push
sar
mov
mov
ret
jnp
mov
lock
push
xor
mov
push
imul
ret
jmp
push
add
dec
jge
mov
pusha
jae
mov
mov
dec
inc
loop
shlb
pop
dec
xor
test
and
aad
adc
xchg
dec
lea
cmp
jb
out
dec
mov
es
mul
mov
mov
mov
scas
test
ljmp
out
lea
cwtl
lahf
and
outsl
adc
in
pop
jmp
jae
xor
add
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
adc
mov
inc
mov
andl
xor
orl
add
movl
mov
not
movl
mov
movl
mov
mov
push
movl
mov
mov
cmp
movl
je
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
jmp
ret
ret
leave
lret
push
and
js
jle
js
cmp
lea
or
fsubr
mov
push
ret
outsl
xchg
sbb
insb
pusha
outsl
scas
andps
sbb
call
xor
loope
sbb
adc
xor
ror
dec
lret
rcl
jp
lods
xchg
loop
nop
jb
push
lcall
rcll
or
xor
push
fsubrl
icebp
dec
inc
popf
ja
out
jl
pop
fisubl
pop
ja
cmp
loop
adc
sub
popa
fnstsw
jp
fstps
mov
hlt
xchg
in
imul
fcmove
cmc
cmp
sub
and
lods
loope
jmp
and
pop
daa
cmp
jecxz
dec
adc
je
int3
and
cwtl
mov
insb
cs
sbb
or
gs
mov
icebp
cmp
aam
aaa
mov
cli
enter
push
adc
sub
dec
mov
test
xlat
pop
bound
adc
jnp
ficoml
mov
mov
push
mov
sub
sub
sub
js
inc
push
std
xchg
loopne
insb
popa
mov
adc
les
pop
push
push
stos
or
cs
pop
cmpsb
je
lcall
mov
adc
test
loop
lret
in
bound
pushf
cltd
cltd
icebp
fmulp
fimull
adc
push
dec
ljmp
mov
mov
aas
mov
cmp
inc
mov
int3
sub
inc
cmc
pop
outsl
push
mov
pop
mov
imulb
cmp
inc
loop
cli
fisubs
xchg
push
data16
xchg
push
nopl
pop
mov
fs
pop
adc
jle
icebp
adc
inc
bound
add
jle
cs
jmp
mov
inc
aam
rclb
mov
ljmp
in
lret
xor
pushf
rcr
dec
mov
je
scas
cwtl
das
mov
shlb
adc
sub
out
inc
je
jo
leave
add
test
es
rcrb
lods
aas
or
pop
pop
jg
sarl
dec
lahf
cld
insl
scas
rorl
mov
mov
outsl
add
rorl
hlt
mov
sahf
mov
jp
inc
pop
mov
rorl
ret
xor
out
insb
mov
push
lret
pop
cmp
mul
sub
adc
lods
pushf
xchg
lcall
push
mov
int
sub
ds
cmpsb
jle
sub
aam
xor
dec
push
loope
in
lret
js
sub
add
jmp
div
shlb
add
push
xchg
sub
push
mov
mov
jl
xchg
frstor
xchg
and
dec
clc
inc
sub
mov
xor
xor
lea
xor
jmp
sarb
xlat
xlat
loope
pop
jns
xor
xor
js
jle
js
pop
mov
mov
lret
jb
daa
scas
adc
pop
inc
imul
dec
push
or
aas
push
ret
and
pop
push
aam
ficoms
lods
fistl
pushf
dec
daa
lds
or
sub
mov
push
inc
sbb
lret
or
cwtl
adc
mov
xchg
jb
mov
sub
and
lret
sbb
aam
cmp
icebp
mov
mov
or
addl
and
rolb
mov
call
add
mov
adc
int
and
fildll
rcr
ret
push
sbb
in
xor
jg
mov
ja
je
stos
or
inc
mov
lock
andb
ljmp
pop
scas
mov
shlb
jo
mov
mov
inc
jns
inc
fld
pop
fidivrl
je
xchg
lock
jecxz
xchg
lahf
mov
xchg
gs
pop
iret
mov
or
popa
lock
lock
nop
inc
jp
cmp
cmp
in
add
jmp
dec
sbb
mov
jp
scas
scas
test
lods
popf
in
add
and
push
dec
loopne
std
push
inc
iret
inc
jecxz
gs
in
xor
stos
adc
mov
out
pop
pusha
loopne
xor
pop
fnstcw
or
addb
mov
nop
imul
fs
js
stos
and
inc
mov
xchg
ret
xchg
push
inc
daa
aad
shrl
jp
ficomps
in
roll
pop
repz
sbb
into
ljmp
mov
dec
daa
bound
jae
inc
insb
das
fsubl
jp
sbb
aas
int
adc
push
dec
or
nop
mov
sub
inc
sahf
jecxz
cltd
jno
add
add
and
add
dec
int3
out
call
aam
jo
cmpb
rorl
fucomi
or
arpl
mov
test
mov
pushf
pop
mov
jg
xchg
test
jg
xor
dec
scas
xor
repz
jecxz
pop
ljmp
inc
sbb
adc
inc
cltd
aas
cmp
jno
adc
and
scas
sbb
or
out
mov
bound
dec
mov
je
fisubrs
inc
dec
push
cmc
push
in
mov
sbb
es
inc
mov
dec
arpl
call
mov
aad
sub
out
enter
push
insl
fistps
cltd
pslld
xchg
push
loopne
mov
test
cmp
test
push
xchg
jle
adc
cmp
or
stos
cmp
jne
jmp
jmp
int3
les
aam
ror
mov
aam
test
jnp
js
mov
std
pop
push
push
sbb
pusha
mov
sbb
lret
sbb
jle
iret
push
cmpsl
pop
or
add
push
imul
inc
push
cltd
inc
xor
clc
xchg
push
mov
test
and
push
jg
push
sbb
pop
inc
lds
mov
jb
mov
jecxz
mov
cmc
ja
jg
pop
fyl2x
cs
shll
add
mov
or
push
cmpsb
adcb
mov
data16
cmp
cmc
or
fwait
inc
bound
jle
xlat
int3
or
or
push
xchg
jge
dec
lock
iret
insb
loopne
lahf
push
cs
sub
lret
inc
dec
sbb
scas
aam
sub
add
push
das
popa
pop
sub
xor
lea
sbb
xor
sbb
fs
pop
push
das
cmpsl
cmpsl
mov
sub
lds
push
pop
stc
sbb
mov
adc
mov
enter
cwtl
xchg
scas
cmp
sub
fwait
cmp
jge
or
jl
mov
mov
sub
push
jnp
dec
out
jo
push
mov
xchg
fldcw
or
ja
dec
push
nop
arpl
rcrl
ljmp
mov
dec
and
cltd
sub
fwait
cmpsl
mov
pop
lahf
sbb
lea
mov
into
mov
subl
jae
mov
fwait
out
lods
xor
lahf
xor
jmp
cmpsb
lds
sub
add
fildll
lcall
ljmp
mov
and
cwtl
cmpsl
cmpsb
add
push
andb
lock
inc
or
sub
lret
fisttps
in
in
pop
int3
xorb
std
xorl
in
mov
mov
pop
mov
test
push
ss
mov
mov
jns
mov
or
stos
cld
pushf
mov
call
out
jle
roll
push
lahf
rclb
jo
pop
insl
fildll
mov
inc
mov
pop
push
xchg
mov
push
outsb
pop
push
popa
std
mov
or
add
cmpsb
lret
iret
shlb
je
inc
out
push
jmp
mov
or
sbb
xlat
test
pop
mov
mov
aas
ffreep
cmc
outsl
les
stos
icebp
test
xchg
mov
jge
lret
fldln2
insb
dec
mov
add
imul
pop
xlat
jb
popa
enter
pop
jg
pop
push
stos
lgs
out
xchg
arpl
jg
xor
loope
repz
pop
test
scas
outsb
mov
pop
icebp
xchg
jb
jbe
cmp
hlt
adc
decl
jne
mov
mov
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
jmp
cmp
rcl
fcmove
test
add
pop
jg,pt
jnp
js
add
mov
dec
mov
outsb
data16
aaa
sub
outsb
and
xor
cmpsb
adc
ss
loopne
fstp
mov
shlb
ds
cmp
leave
mov
loopne
inc
mov
iret
mov
mov
loop
icebp
xchg
adc
sub
lock
mov
mov
int3
add
mov
pop
jmp
cmpsl
sbb
jmp
shlb
sub
jne
dec
subb
leave
andb
xchg
jns
sti
mov
pop
mov
test
sbb
jbe
les
movsl
repnz
pop
cltd
addb
push
pop
pop
nop
ret
xchg
imul
mov
int3
dec
pop
fisttpll
ss
orb
jp
pop
jle
daa
sub
pop
mov
adc
jbe
jp
cs
inc
or
icebp
orb
push
loope
movsb
sub
push
xorl
and
orl
sub
mov
mov
mov
xor
repz
cmp
xchg
push
dec
std
add
sub
push
sbb
adc
or
mov
fsts
fs
or
mov
add
adc
xchg
mov
popa
inc
mov
dec
dec
enter
cmp
jno
jmp
test
xor
test
cmp
sahf
xor
or
fisubrl
xchg
adc
inc
and
mov
movsl
and
out
movsl
daa
cmp
pop
push
or
ja
mov
dec
dec
pop
out
insl
sub
es
sbb
inc
fs
sbb
jno
out
sbb
nop
ficoml
pop
hlt
cmp
jo
aad
ret
mov
popf
cld
add
int3
mov
push
mov
sbb
daa
push
shlb
ja
pop
xchg
mov
pushf
lcall
xor
orl
jne
add
loop
or
outsl
popl
repnz
cmp
jle
push
cmp
and
in
adc
add
or
add
lds
cmp
jnp
mov
mov
mov
mov
mov
scas
cltd
and
push
push
cmp
rorb
jns
push
jne
push
lcall
sbb
jecxz
in
int3
fldcw
popf
sbb
mov
repnz
lock
jecxz
push
stos
lahf
inc
mov
xchg
cmp
int
push
sub
xor
stc
dec
dec
lods
jbe
insl
xchg
xorl
xchg
bound
scas
push
movl
psubusw
mov
out
popl
pop
add
dec
mov
ds
jnp
jp
pop
push
jmp
pushl
mov
jmp
lret
into
ret
ret
lret
xor
stos
push
pop
enter
ret
jg
jnp
js
cmpl
mov
lret
ret
shr
add
jecxz
jg
out
pusha
cmp
gs
or
test
pop
bound
lahf
adc
pop
mov
mov
add
sub
sahf
mov
lcall
add
repz
aaa
push
rcrl
xchg
cmpsl
sub
sbb
sub
inc
shrl
xchg
pop
icebp
loopne
inc
xor
and
daa
adc
std
nop
ficomps
mov
push
test
pop
jecxz
cmp
rcr
sarl
inc
les
cmp
xchg
out
js
mov
cmp
pushw
xchg
inc
lret
mov
addr16
int
dec
push
xor
push
xor
test
xor
jae
and
fwait
mov
or
shr
ja
jae,pt
out
aaa
pop
cmp
adc
scas
sub
inc
add
push
mov
fistl
fs
out
fisubrs
and
pop
sbb
out
cltd
lock
add
js
push
mov
sub
push
cwtl
icebp
jmp
pop
les
xchg
out
xchg
into
lret
ss
arpl
adc
jb
ret
inc
adc
add
xor
add
mov
fbld
insb
add
inc
xlat
push
push
cmp
rcr
cmp
dec
aaa
rcll
lods
mov
cmp
pusha
stos
push
inc
repnz
imul
clc
inc
jmp
xchg
jg
sbb
mov
inc
icebp
into
sbb
jecxz
mov
js
or
sti
movl
add
jnp
push
shlb
bound
and
xor
sbb
call
xor
or
jae
push
popf
pop
iret
fwait
dec
mov
xor
scas
xchg
push
inc
gs
mov
sbbl
add
or
push
fildl
lds
adc
dec
sbb
mov
aas
rcll
ja
add
imul
adc
jmp
mov
pcmpgtb
cltd
mov
jnp
mov
or
fsubl
loop
sub
les
stc
int3
out
adc
xchg
mov
dec
mov
adc
jge
fcmovne
jg
mov
stc
dec
leave
jb
int3
inc
lods
sbb
sbb
in
sub
or
jp
sub
ljmp
cld
sbb
add
add
nop
push
lret
repnz
pop
xchg
sbb
jge
les
js
adc
movsb
sbb
leave
push
inc
lcall
cmpsb
push
xlat
fs
mov
in
mov
pop
in
xchg
lods
movsl
mov
sub
cltd
mov
scas
testb
mov
inc
je
in
lcall
lret
mov
and
xchg
fisttps
mov
call
jo
adc
push
clc
sar
mov
jmp
lret
rol
leave
shll
add
sarb
jle
js
mov
dec
dec
fwait
ret
daa
push
dec
push
sbb
xchg
adc
pop
lds
aam
mov
xchg
test
insb
pushf
lea
je
dec
sub
nop
xlat
cmpsl
pop
or
and
andb
mov
and
xor
push
sar
and
sub
or
dec
mov
lock
in
fsubrl
in
imul
les
adc
mov
pop
hlt
jo
pop
fsubs
push
movsb
popa
or
leave
cmpsl
jg
adc
xchg
fisubrs
xchg
mov
imul
adc
enter
jb
jp
xchg
orb
jb
aad
dec
mov
aas
jns
nop
mov
sub
and
les
movsl
jae
inc
rcll
cmpl
cltd
aam
arpl
mov
adc
mov
push
std
and
or
lcall
xchg
dec
push
idiv
dec
repz
lods
add
and
push
mov
ds
cmp
jns
or
mov
jp
and
data16
cld
xchg
imul
sahf
mov
pop
xor
mov
xlat
cs
aad
inc
leave
mov
push
dec
mov
dec
enter
pushf
shll
or
shlb
cmp
mov
ljmp
push
and
add
cld
mov
adc
ficompl
cwtl
test
sbb
bound
cmp
aad
shrb
das
shld
cwtl
aam
push
rcrl
loopne
das
js
sarl
cmp
inc
cmp
mov
adc
or
adcl
fmull
movb
cmp
xor
add
mov
jno
aad
add
cmp
add
ror
adc
xor
lret
xor
rolb
or
mov
loop
jmp
jg
aad
cmp
xlat
hlt
imul
lret
dec
or
or
sub
orb
push
sbb
sbb
mov
pushf
lcall
and
movb
dec
mov
or
imul
loop
jle
add
push
insl
ss
lock
jl
les
repz
sub
ljmp
cmp
shl
jge
pop
nopl
pushl
pop
insb
sbb
lahf
lahf
fldenv
sbb
jbe
jae
call
mov
sub
jp
loopne
push
out
mov
lret
test
pop
loopne
lahf
into
jge
mov
popa
call
jmp
mov
leave
ret
push
mov
sub
jmp
rcl
ret
into
rcl
daa
jle
mov
inc
insl
cmpsb
or
jg
adc
js
test
imul
pop
movsl
popf
repnz
pop
sarb
xchg
into
subb
scas
mov
ret
sarl
jle
test
in
repz
inc
in
mov
fwait
mov
xor
ret
dec
shrb
cmp
and
sub
cmp
adc
int
imul
fdivrl
inc
sbb
sbb
fcomp
lods
xrelease
mov
jae
xchg
sub
inc
sbb
dec
and
mov
xor
jmp
lahf
push
cmpsb
lret
add
fcmovu
cmp
shl
xchg
sbb
push
sbbb
into
mov
cwtl
ljmp
daa
sahf
leave
adc
adc
and
xchg
daa
pop
sub
dec
loope
shl
ljmp
scas
mov
jp
cld
popf
adc
sbb
inc
lds
push
dec
push
mov
stc
loope
add
or
inc
dec
mov
xor
stc
orb
or
lahf
arpl
mov
jo
sbb
jecxz
stos
push
push
mov
int
insb
fcmovnb
pop
jle
ja
inc
jp
rcrl
sarb
pop
fldcw
cmpsb
pop
inc
cmp
inc
rcrl
and
mov
cmp
outsl
mov
pop
mov
in
out
mov
push
repz
sarl
push
sti
ret
mov
repz
ror
cld
push
sbb
aam
xchg
loopne
dec
scas
xlat
and
lock
jle
and
push
rclb
cli
xor
mov
mov
or
xchg
sub
dec
mov
aam
adc
iret
cmp
cmp
pusha
stos
cld
mov
repz
cli
jae
pop
jae
push
push
mov
or
aad
pop
call
stos
push
mov
out
xor
or
fcoml
adc
je
jnp
adcb
movl
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
adcl
movl
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
and
push
add
mov
and
xor
movzbl
adc
mov
adcl
add
incl
mov
mov
push
movl
push
test
movl
je
jmp
lret
fld
scas
inc
adc
into
inc
test
lret
jg
adc
js
add
mov
popl
mov
and
into
fcoml
pusha
dec
cmp
mov
push
pop
bound
inc
xor
out
pop
mov
push
addr16
imul
adcl
xor
fistpl
incl
pop
xor
aam
and
enter
adc
jg
mov
dec
in
adc
sti
and
jle
mov
data16
sbb
cmc
movsl
lods
hlt
pop
out
sbb
push
inc
push
sbb
add
xchg
mov
mov
mov
sbb
jmp
or
sub
into
or
mov
mov
fwait
xor
xchg
sahf
mov
popa
push
dec
imul
enter
loopne
dec
pop
jg
and
loop
dec
rcrl
mov
pop
xchg
mov
sbb
das
mov
adcb
push
and
xchg
jle
sub
sbb
push
ret
jmp
cmp
cmp
ja
adc
lret
and
inc
add
sbb
imul
mov
jmp
cmp
mov
test
cmp
inc
sbb
and
shr
call
xor
mov
sarl
xlat
je
loop
mov
jge
jle
loope
mov
and
fmuls
pushf
bound
inc
hlt
or
sub
popf
mov
push
jne
stos
cmpsb
mov
jl
jecxz
mov
cmp
rcll
and
push
lods
inc
rorl
aam
test
push
mov
test
repnz
inc
add
imul
adc
mov
jns
inc
dec
imul
imul
pop
cmova
push
ljmp
mov
clc
dec
insl
call
push
das
test
out
flds
orl
nop
stos
mov
push
sbb
xchg
je
cwtl
pop
les
mov
add
mov
mov
imul
xor
mov
add
sub
mov
mov
notl
xchg
addl
jmp
iret
iret
xlat
xlat
iret
xlat
cmpsb
call
xor
leave
jg
adc
js
daa
pop
add
sbb
pop
mov
dec
or
pop
mov
fwait
popa
lock
jnp
icebp
movsb
mov
xchg
les
mov
pop
inc
out
mov
fsts
mov
xchg
lcall
movsl
xor
adc
cmpsb
out
push
mov
xlat
push
push
insl
cld
mov
ja
popf
cmpsb
push
repnz
and
xor
adc
inc
push
adc
push
mov
inc
int3
inc
xchg
sbb
loopne
pop
mov
outsb
mov
enter
dec
add
jae
push
mov
pop
js
push
xlat
jo
rcrb
mov
cmpb
loop
daa
push
or
test
xor
dec
shr
mov
scas
out
mov
mov
mov
mov
clc
arpl
fidivl
imul
lahf
movsl
mov
ds
mov
orl
insb
test
mov
ret
sub
lret
gs
jl
lods
fdiv
dec
lret
cmpsb
mov
adc
or
lret
loop
fisttps
xchg
int
dec
inc
movsl
xchg
stc
cmpsl
ljmp
xchg
sahf
push
cmp
or
stos
mov
imul
push
cwtl
lahf
mov
jae
outsb
stc
sbb
test
mov
scas
pop
sbb
push
pusha
das
aaa
add
cwtl
movsb
pop
cmp
mov
mov
les
data16
xor
jo
mov
clc
mov
push
movsb
loope
sbb
jo
jo
in
xchg
push
rolb
mov
dec
push
jmp
test
loope
push
or
jne
mov
out
sahf
cmc
cmp
pop
adc
push
pusha
call
sarl
stos
and
insl
ljmp
shl
pop
add
xor
xorl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
adc
mov
and
mov
add
mov
mov
adcl
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adc
add
mov
mov
jmp
cmp
fcmovbe
aad
xorl
or
mov
adc
js
xchg
sub
arpl
cmpsb
movups
in
jl
mov
sub
mov
mov
movsl
jmp
decb
pop
sbb
je
xor
or
arpl
mov
imul
dec
pop
fwait
pop
adc
clc
push
jge
cmp
shll
mov
hlt
in
int3
or
ds
xchg
xchg
xchg
aas
add
lods
insl
jbe
xchg
push
shll
dec
dec
xchg
sbb
sar
mov
mov
movsb
push
jo
xor
cli
ret
lock
pop
push
out
mov
lock
mov
jmp
gs
push
jns
mov
xlat
xchg
cmp
jae
sub
adc
scas
push
testb
dec
dec
out
push
xchg
hlt
gs
jp
sbb
and
sub
out
insl
ja
fldl
mov
push
cli
xchg
add
orb
adc
pushf
das
adc
dec
icebp
outsl
sarb
inc
add
adc
leave
stc
pop
in
push
out
mov
mov
aas
std
cld
or
xchg
or
sub
cmp
in
pushf
mov
xchg
mov
lods
xlat
push
xor
insb
mov
ljmp
cmpsl
adc
les
sbb
jge
fstpt
xchg
mulb
mov
push
lea
inc
cmpsl
push
jno
std
cmpsl
jnp
pusha
vorps
loopne
dec
rcrl
sub
addl
movsl
imul
xchg
in
in
jb
jae
inc
fwait
mov
inc
inc
aas
rolb
xchg
scas
jae
dec
rclb
js
scas
lret
jg
adc
xlat
int
mov
rorb
mov
fisubl
dec
mov
fdiv
das
sar
cs
xchg
sbb
cld
fisttpll
ja
fwait
repz
inc
repnz
mov
mov
cmp
out
jns
stos
mov
je
inc
mov
xor
sbbl
add
movl
cmp
movl
jmp
into
ror
leave
push
or
sub
push
mov
int
js
jle
js
adc
pushf
and
mov
or
out
jg
les
lock
jecxz
sbb
or
scas
sarb
push
in
icebp
popa
inc
mov
adc
mov
cmp
xchg
mov
addr16
repnz
repz
inc
cmp
xor
dec
pop
add
sbb
sarl
jae
mov
jl
cmpsl
shrl
pop
movsl
and
or
aaa
das
lock
or
cld
jo
dec
mov
mov
inc
and
inc
xor
mov
pop
ljmp
sbb
pop
aam
stos
fwait
mov
test
add
into
xlat
shll
mov
addl
mov
pop
jne
ret
sub
dec
js
sti
imull
fs
add
lret
sub
push
xor
rcrb
jbe
mov
lcall
pop
lahf
cwtl
sub
scas
dec
in
push
fs
sahf
or
out
mov
mov
mov
sub
add
ret
hlt
pop
xchg
sub
inc
imul
pop
push
push
sub
ja
cmc
inc
xorl
pushf
sbb
iret
jns
popa
movsl
clc
dec
push
stos
inc
ret
scas
jp
push
mov
movsl
xchg
jl
or
sub
sbb
jb
xchg
and
dec
jo
push
mov
mov
pop
cmp
inc
lret
test
sub
adc
movsb
data16
jne
mov
inc
pop
js
sub
enter
shr
xchg
mov
hlt
cld
inc
mov
dec
xchg
insl
mov
or
cmpb
mov
mov
in
xchg
mov
add
push
hlt
das
inc
mov
lcall
pop
dec
push
pusha
mov
sahf
or
adc
test
adc
rorb
test
add
popa
cmpsl
inc
add
jne
orl
call
and
mov
jmp
aas
into
leave
int
into
fwait
orb
add
icebp
adc
js
jle
js
adc
adc
sub
pop
loopne
clc
nop
and
jmp
bound
mov
test
sbb
pushf
push
int
fmuls
bnd
movhlps
pop
jo
jnp
mov
jecxz
adc
jg
mov
in
lret
outsb
xchg
push
fsubrl
jae
pop
mov
lods
push
jae
ret
int3
pop
jo
inc
jnp
jge
rcrb
out
mov
sbb
lret
shrb
cli
aas
adc
xchg
cltd
jmp
xor
cmpsl
es
xor
ljmp
dec
lret
add
inc
out
daa
shll
imul
mov
in
cmp
sahf
mov
in
scas
fisttps
push
loopne
pop
icebp
mov
adc
push
pop
orl
cmp
clc
jns
shrl
cld
mov
mov
out
jle
fs
dec
adc
push
xorl
icebp
mov
pop
popf
jns
loop
stos
sub
jb
fsubr
push
xchg
mov
sahf
cmp
sub
xorl
insb
pop
mov
das
cmpsl
adc
adc
test
add
das
push
and
daa
outsl
cmpl
jmp
and
movsl
xor
dec
lcall
adc
movl
mov
ret
in
add
lods
mov
and
andl
cmpsl
or
adc
cld
jp
sahf
and
jg
jnp
cmp
pop
jno
clc
xchg
pop
in
jnp
aam
aad
pop
xchg
jmp
incl
push
sub
xchg
xchg
enter
mov
cmp
ret
bound
pop
add
ds
push
fdivl
loop
aad
jo
jmp
ss
sar
leave
lds
out
jns
sti
add
lahf
sahf
nop
sbb
fwait
jp
jae
lret
in
arpl
icebp
cmp
push
sub
dec
loopne
add
sbb
add
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
mov
movl
xor
add
cmp
movl
je
pushl
subl
pushl
call
jmp
les
iret
rcr
leave
push
push
in
je
lahf
imul
cwtl
sarl
adc
js
fnsave
jno
pop
xorl
dec
outsb
test
fstps
or
dec
mov
jmp
mov
stos
mov
mov
sub
mov
adc
lock
shlb
lcall
xor
addr16
loopne
imul
xlat
push
jb
outsl
aaa
popa
dec
dec
pop
imul
dec
lock
xor
faddl
and
loop
push
aam
add
pop
out
mov
cmpl
xchg
push
sbb
out
int
and
xorb
or
push
test
outsb
stos
inc
inc
subb
sub
jne
adc
arpl
dec
xbegin
or
xchg
mov
ja
xchg
iret
ljmp
lahf
pop
mulb
sub
xorb
jg
push
aam
sub
iret
icebp
and
mov
xchg
dec
nop
int
test
insb
cmpsb
mov
or
outsl
cmpsb
das
pop
jno
mov
lods
inc
xchg
lods
popf
adc
ret
xor
js
mov
out
notl
sbb
xchg
iret
insl
mov
inc
mov
push
les
arpl
ret
lret
xlat
cmpsl
xchg
popl
ds
jb
jg
fs
and
cs
add
fadds
icebp
xchg
in
icebp
stos
in
pop
mov
jnp
pop
cmp
mov
popf
pusha
xchg
clc
ljmp
out
add
jl
cmp
sub
pusha
xor
stos
mov
fwait
gs
std
aam
repnz
cmpsb
jmp
sub
sbb
movsb
dec
out
out
adc
mov
lock
push
mov
inc
or
leave
mov
enter
insl
lret
cmp
jge
fldl
scas
call
sbb
shrb
dec
pushf
or
push
fiaddl
mov
inc
in
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
jmp
lret
cmp
rcr
leave
mov
and
gs
mov
adc
js
adcl
popf
mov
hlt
mov
outsb
jge
adc
cld
or
fbstp
push
adc
inc
std
xor
xchg
or
add
mov
imul
push
in
data16
xchg
push
and
cmpsb
test
adc
repz
imul
dec
jbe
jecxz
enter
jge
insb
lahf
jecxz
or
inc
adc
mov
shlb
lahf
lds
in
addb
daa
dec
fsubrl
aad
cmpsb
jns
jns
xor
or
jbe
and
xchg
pop
fstl
cmp
dec
cmp
cmc
inc
push
or
xchg
rcrl
push
and
int
iret
sub
aaa
ja
pop
dec
inc
sub
imul
adc
scas
jns
push
push
sub
out
pop
inc
data16
mov
test
adc
cmp
mov
jb
adc
jl
test
fcomps
hlt
rcll
stc
cmpsl
std
loop
rolb
mov
subl
in
imul
cwtl
lods
jg
jno
pop
shlb
xor
mov
scas
in
ss
loopne
lock
pop
cld
cwtl
sbb
leave
negl
loop
faddp
lahf
jmp
loope
int
push
push
xor
cltd
or
push
inc
xor
mov
sbb
push
push
adc
jnp
subl
clc
je
mov
push
ret
inc
imul
push
push
fidivrs
xchg
mov
or
stos
rorb
ja
cmpsb
insl
mov
cmp
pop
scas
testb
test
mov
loopne
fimuls
div
cwtl
out
xchg
push
adc
mov
notl
or
adc
mov
mov
sahf
xorb
test
pop
scas
push
leave
sbb
mov
push
cltd
cltd
and
mov
mov
and
data16
cmp
xchg
xchg
mov
xor
ret
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
rcl
xlat
int3
aad
fcmovnu
ss
inc
sbbl
mov
dec
aad
js
jle
js
adc
mov
fucomip
mov
ljmp
mov
sub
nop
movsw
bound
outsl
stc
cmpsb
pxor
icebp
jb
add
cmpsl
popa
jae
aaa
dec
jp,pn
inc
lret
push
dec
dec
dec
inc
loope
push
mov
pop
fwait
xor
ljmp
mov
bswap
fadds
int
jae
daa
fidivrl
mov
pop
xchg
xor
inc
dec
mov
push
adc
movsb
jbe
mov
and
mov
aaa
sbb
sarb
mov
sub
sub
inc
jae
cmpsb
inc
pop
xchg
mov
mov
add
mov
mov
push
dec
cmp
sub
ja
inc
test
fisubs
cli
xchg
mov
in
mov
outsb
scas
sbb
dec
cld
lret
insl
inc
adc
mov
pop
and
das
push
xor
xorl
dec
adc
pop
mov
scas
es
push
xor
sub
pop
xor
insl
pmovmskb
cld
jnp
pop
fs
inc
call
or
mov
push
cmp
scas
push
lret
fs
or
scas
xchg
jmp
mov
lock
mov
mov
data16
fs
lea
sbb
ret
jge
and
sbb
jns
sbb
sahf
hlt
xor
adc
lods
add
shlb
fcoms
xchg
push
es
pushf
push
mov
xor
jmp
aaa
sub
mov
stc
sbb
fiaddl
inc
sarl
bound
xchg
stos
aad
adc
pusha
fs
ficoml
pop
or
nop
mov
loope
into
out
pop
adc
xchg
mov
in
adcl
jae
int
leave
cld
lea
das
dec
xor
jo
sub
stos
lock
sub
and
mov
jno
fisubl
aad
outsb
and
or
push
dec
pop
jmp
rcl
aas
leave
cmp
pushf
mov
pusha
pusha
fstpt
adc
js
jne
sub
jnp
mov
adc
sti
fsubs
sub
out
adc
lds
dec
insb
mov
int3
nop
mov
jecxz
stc
js
jge
jne
fsubrp
fs
mov
lret
xchg
mov
dec
test
sub
mov
add
test
bound
cmpsb
mov
adc
icebp
cmp
out
loop
cmp
shll
xchg
add
lock
roll
pop
mov
inc
sub
pop
aaa
inc
adc
mov
shll
add
mov
push
insb
cmpl
lret
or
sbb
inc
pusha
aas
and
lret
negl
or
inc
enter
test
cmc
pop
idiv
arpl
add
add
dec
jne
adc
data16
js
sbb
sahf
and
sti
aad
jae
xchg
mov
repnz
inc
enter
inc
sub
inc
movsl
sub
adc
cmp
ss
iret
sbbl
cmp
jle
lret
or
or
cmp
xchg
xor
xor
push
push
mov
test
and
fisubl
cli
fwait
mov
sbb
and
mov
jecxz
enter
sbb
push
xor
gs
adc
push
iret
pop
and
fisttps
lcall
mov
arpl
sub
push
inc
mov
pop
cmp
sbb
sbbb
push
in
int
dec
mov
mov
jno
pop
imul
jae
loope
jge
repz
mov
xor
and
dec
aas
loop
cwtl
inc
dec
sahf
adc
jnp
fisttpll
fildll
ds
sbb
int3
or
and
mov
xchg
sub
jmp
ret
aas
fxch
rcr
mov
sub
js
jle
js
mov
add
imul
mov
push
mov
sarb
fstpl
adc
xor
out
lock
fstpt
sub
shl
add
jns
cld
pmaddwd
push
pop
add
outsb
push
mov
js
or
loop
cltd
mov
sub
stc
int
sbb
mov
sub
cmc
fldt
popa
ret
adc
mov
sbb
scas
ret
arpl
sub
jle
push
shlb
cmpsl
mov
jg
mov
lcall
ljmp
loope
mov
idivl
adc
rcll
js
pusha
pop
jne
fidivs
add
mov
movsl
jge
and
loop
add
pushf
movsl
lds
lret
scas
add
hlt
mov
arpl
test
shlb
rclb
insl
pop
adc
insb
pop
ret
mov
jmp
mov
test
in
loope
lock
sub
push
sbb
push
jae
int3
stos
pop
pop
daa
xlat
dec
pop
xchg
or
mov
test
push
int
or
xchg
scas
jle
adc
inc
pop
leave
jbe
ret
stc
adc
popa
aas
jmp
insl
add
flds
mov
inc
adc
mov
xor
daa
fs
jo
adc
dec
iret
lcall
jnp
cmp
andb
mull
lods
fs
jecxz
jg
xchg
push
ja
les
sbb
mov
ret
out
push
mov
loop
gs
mov
faddl
cld
mov
sub
dec
add
fidivl
xchg
pop
jge
es
or
inc
insl
xchg
add
push
add
push
in
sub
lds
adc
sub
xchg
and
dec
lret
scas
js
rcrl
out
xor
fiadds
pop
repz
add
int
int
fnstcw
mov
jg
adc
js
push
mov
add
xchg
ja
jbe
jl
adc
es
nop
cmpsl
icebp
aad
pop
gs
push
es
mov
jo
inc
mov
imul
inc
leave
aas
imul
insb
int3
rolb
dec
test
fwait
ret
fildll
ja
add
dec
sbb
sub
popf
or
sbb
std
jbe
push
add
mov
add
stc
addr16
lds
mov
push
mov
adc
inc
mov
xchg
mov
sarb
xchg
btr
cs
shrl
cmp
out
mov
push
out
cmc
sbb
pop
fwait
xchg
ljmp
xchg
out
xor
into
in
lods
push
dec
add
pop
pop
mov
inc
test
inc
push
xor
lock
daa
add
xchg
mov
cmpsb
xor
and
jo
xchg
dec
fnstenv
stos
mov
fcomps
aad
cld
pop
es
cmp
jns
mov
fs
jns
mov
push
leave
cmpl
mov
xor
sbb
jle
sahf
mov
insl
jns
jae
mov
test
hlt
dec
mov
jns
pop
or
lcall
push
roll
imul
mov
adc
insb
cmpsb
sbb
lret
and
or
cvttps2pi
push
inc
or
lahf
mov
into
lods
data16
gs
ja
adc
add
cmpsl
cmpsl
dec
rol
jbe
int
mov
add
cmp
push
dec
das
repz
int3
mov
adc
fidivrl
sub
lods
stos
sti
dec
mov
mov
ljmp
sbb
loopne
mov
push
insb
imul
pop
outsb
jo
lret
xor
xchg
sub
push
push
jle
xor
fidivrl
jmp
iret
enter
fcmovnu
xlat
push
sarb
sub
jg
adc
js
lods
jp
repz
sub
frstor
loope
inc
in
push
xor
adc
pop
sbb
mov
mov
push
jl
add
movsl
mov
roll
je
push
pop
bound
inc
scas
sbb
jecxz
cmp
out
mov
jb
fdivs
or
out
push
popf
pop
es
stos
pushf
push
xor
aam
xor
add
lds
lods
mov
insl
aam
mov
ret
in
lock
add
inc
cld
fdivrl
insb
add
jge
insl
stos
or
mov
push
fadds
ret
icebp
mov
loope
gs
insb
push
stc
push
mov
dec
xor
push
scas
cmp
out
xchg
mov
sbb
xchg
and
test
cli
iret
push
aad
scas
lods
int
push
testl
pusha
push
ljmp
in
inc
xchg
imul
lods
rcl
jmp
push
cmp
in
inc
mov
ret
mov
data16
cmpsl
mov
jge
repnz
cmp
inc
imul
insl
outsb
fdivr
dec
test
jne
test
mov
mov
jl
lods
out
lock
push
das
shrb
leave
xchg
cmovo
rcll
in
out
out
mov
loop
mov
pop
cmpsl
and
mov
cmpsl
or
xorl
or
ljmp
addr16
test
into
sbb
pop
sub
in
mov
fiaddl
shrb
xlat
cmp
in
xor
lods
daa
popf
fmuls
mov
sbb
fisubrl
and
and
push
enter
rol
lret
sti
cmpl
jmp
sub
and
cmp
dec
addr16
xlat
aaa
adc
cmp
pushf
cli
jmp
idivl
loopne
addr16
fmul
pop
sbb
push
inc
dec
shlb
scas
shrl
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
jmp
int3
lret
fxch
leave
mov
push
hlt
nop
arpl
js
jle
js
rolb
mov
sub
jle
mov
arpl
es
shlb
dec
cmpsl
out
add
and
movsb
mov
popf
xor
fdivrl
mov
cli
insl
push
push
je
fcmovne
mov
mov
cld
mov
sub
ja
sbb
push
enter
mov
scas
faddl
mov
sub
adc
lds
cmp
imul
xlat
and
jno
cmpl
lcall
cmpsl
xlat
roll
xor
push
test
xor
data16
sbb
out
pop
out
and
mov
cmp
nop
sti
xor
adc
dec
mov
jb
or
cli
push
pop
xor
in
push
inc
cmp
out
ja
cmpsb
sbb
sbb
cli
mov
insb
adc
lahf
mov
mov
bound
sbb
jo
cmpsb
push
insb
pop
sub
xor
pop
dec
aas
aad
xor
sub
aad
fcoml
mov
add
mov
enter
add
push
dec
rcrl
cmc
dec
dec
rcrl
loope
mov
mov
dec
sub
mov
add
pop
pop
sub
outsl
or
jmp
pop
fistps
decl
jp
and
and
dec
daa
scas
adc
cs
lods
ret
push
lahf
fmuls
js
mov
loop
push
lods
pushf
cmp
cmc
push
fs
loope
cmp
push
push
or
fdivrp
sbb
adc
aaa
loop
mov
jle
faddl
or
jmp
or
mov
cmpsb
adc
xlat
mov
fnsave
inc
jnp
lret
aam
xchg
out
popf
dec
cmp
fisttpll
fdiv
ja
scas
int3
jno
arpl
lock
ret
fnsave
roll
jmp
int
int
rcl
int
cmp
xor
jle
js
lret
push
or
pop
push
outsb
in
and
das
mov
ret
and
inc
fdivr
and
inc
ret
repnz
sti
xchg
jl
cmp
decl
and
sub
in
ds
call
mov
or
in
xor
push
fmuls
push
sahf
adc
xchg
inc
add
sbb
jns
sbb
or
loop
sub
mull
in
aaa
ret
or
jmp
push
cmp
cltd
fsubp
pushf
gs
or
stos
in
mov
insl
mov
xchg
lret
flds
daa
loop
jae
add
ds
push
and
or
movsl
loopne
mull
xchg
aaa
push
bound
das
pop
xor
scas
or
fistl
insl
and
stos
stc
jp
aam
ret
rorb
pop
pop
and
jl
mov
hlt
call
cmpsl
dec
pop
jmp
lret
cld
xchg
cmp
push
jl
daa
mov
roll
push
cmpsb
lods
add
xlat
xchg
mov
daa
mov
cmp
decl
mov
xchg
pop
fidivrl
mov
or
mov
mov
fs
jmp
cwtl
dec
insl
fnsave
data16
fstp
cmc
int
sub
pop
sbb
xchg
jg
into
jg
call
ret
push
mov
or
jl
cmc
push
mov
jmp
inc
dec
lds
rcrb
int
out
leave
cs
rcr
divl
jecxz
pusha
dec
gs
mov
cmp
and
test
pop
ds
push
gs
lret
arpl
mov
or
mov
adc
movsl
sbb
xor
xchg
pop
popa
cs
xor
sub
pop
sub
lret
jns
xchg
out
push
cs
push
lret
and
jb
pop
imul
mov
jmp
lret
xlat
vpsubusw
lret
xor
shl
lock
js
jle
js
je
lock
jno
scas
xchg
dec
inc
mov
xlat
test
lret
inc
mov
pop
int3
insb
adcb
mov
inc
xchg
mov
clc
pusha
mov
pusha
fadds
xlat
rcrl
xchg
test
and
xor
pop
cmp
mov
lock
xchg
fsubl
xchg
sti
not
add
adc
incb
mov
mov
sbb
pop
xlat
mov
loop
dec
xchg
inc
push
cmpsb
movsb
push
fmul
repnz
sub
xor
ret
jne
jecxz
xor
pop
bound
push
push
pop
test
sub
pop
cs
movq
outsb
in
stos
pop
add
jns
cmp
orb
dec
xchg
inc
push
add
mov
inc
loopne
aam
inc
xor
push
pushf
ret
mov
mov
push
xor
pop
ret
add
cmp
ja
pusha
mov
or
sub
sub
rolb
push
pop
into
jp
lds
sbb
popa
push
lcall
mov
popa
loop
jp
es
xlat
arpl
adc
jb
xchg
sub
push
xor
jbe
mov
ds
loopne
aam
call
cmpsl
nop
cld
sbb
inc
pop
dec
stos
bound
push
sub
pop
enter
or
sub
and
add
je
and
and
cld
xor
xchg
punpckldq
test
imul
jno
test
xor
sub
in
xlat
xchg
adc
jl
pop
imul
push
loope
gs
add
push
in
mov
aas
ljmp
adc
mov
movsb
daa
mov
std
or
mov
xchg
and
xchg
mov
sub
mov
adc
stos
sbb
mov
popf
xor
jmp
enter
iret
rcl
mov
rolb
adc
js
jno
xor
mov
popa
add
add
psllq
enter
pop
push
cld
fs
mov
jp
out
cld
scas
inc
push
inc
sbb
pop
jae
pop
pop
xor
inc
andb
fisubrl
aad
jbe
lods
inc
leave
dec
mov
loope
adc
sub
dec
scas
ror
mov
rep
push
loopne
jl
xor
mov
lahf
movsl
out
jmp
gs
orb
or
push
push
arpl
mov
push
mov
cmp
aam
addr16
and
aaa
pop
inc
cmc
cmpsl
or
sub
stos
hlt
xor
mov
inc
dec
ret
fdivr
cmc
inc
mov
ljmp
cld
popa
and
aaa
ljmp
sti
xchg
mov
call
imul
dec
stc
pop
nop
add
mov
mov
xor
aas
push
js
fisubrl
lcall
rorl
add
lods
pop
fidivl
int
add
mov
ja
push
push
pop
in
aas
mov
sbb
dec
clc
fisubs
adc
aas
movsb
ss
adc
icebp
out
inc
dec
das
dec
testb
fnstcw
outsb
andl
dec
sbb
enter
sbb
adc
dec
out
push
pop
fld1
cmc
mov
pop
mov
mov
call
call
add
cwtl
arpl
in
push
in
out
xchg
push
jb
fnstenv
cmp
xor
popf
jl
adc
or
or
xor
decl
std
es
sub
and
push
mov
sub
jecxz
in
add
lahf
stos
shr
xchg
ds
xchg
mov
lret
repnz
sub
pop
mov
mov
xchg
cwtl
in
push
add
xchg
dec
mov
jp
add
sbb
loopne
cmp
arpl
mov
push
inc
sbb
xchg
fs
xor
repz
mov
and
fildl
add
add
leave
leave
rcr
fldcw
stc
push
loop
frstor
jle
js
mov
fsubrs
lods
jg
cmp
leave
inc
call
adc
rcrl
addr16
cmp
push
push
sbb
xchg
pop
sbb
jl
jle
arpl
pop
sub
sbb
cmc
movsl
inc
xor
jno
add
pusha
push
leave
cmp
cli
outsb
ret
ror
dec
jo
cmp
adc
mull
mov
mov
cmp
add
cmpsl
mov
scas
out
jns
or
stos
adc
pushf
push
or
cmp
push
inc
aam
sub
stos
dec
dec
aam
fcmovb
jbe
jl
test
adc
jo
mov
std
fdivrl
fcoms
sub
inc
ja
enter
mov
sbb
dec
outsl
jne
fbld
or
or
xor
fldt
shrl
jle
dec
and
jmp
bswap
or
jecxz
mov
sub
mov
in
jbe
out
sub
addr16
jae
ljmp
rclb
adc
aam
loop
cmpsb
loope
out
dec
movb
cmp
jg
adc
test
popf
mov
add
test
leave
push
mov
pop
das
scas
iret
gs
jecxz
icebp
pop
mov
push
add
mov
adc
lcall
pop
sub
js
popfw
ja
jg
xor
fidivrl
mov
mov
sbb
sbb
sub
rcll
pop
lock
sti
sbb
push
into
lock
sti
sub
ljmp
lods
cld
or
aas
popa
xor
sub
dec
cmpl
cmpsl
mov
xorb
mov
pop
les
pop
mov
test
xlat
push
push
lods
in
pop
lock
shrb
dec
add
sub
ljmp
sub
inc
jbe
subb
fistpll
testl
pop
sub
ret
pop
pop
pop
or
sub
testb
loope
push
outsl
mov
fstpl
int3
fwait
push
xchg
pop
mov
or
enter
hlt
decl
add
mov
mov
jmp
mov
xlat
movsb
inc
mov
call
js
mov
mov
pop
or
stos
add
inc
mov
and
mov
dec
xchg
dec
xchg
cmp
pop
mov
insl
iret
adc
sub
mov
push
rorb
testb
imul
std
enter
jns
dec
or
jb
lock
das
xacquire
mov
mov
aas
mov
add
push
push
mov
xor
insl
push
lods
xchg
rorl
pop
lret
stos
inc
scas
sarb
and
pop
ljmp
xor
mov
icebp
xor
sbb
jecxz
bound
or
lret
ret
mov
bound
sub
cmp
pop
jnp
jg
jp
addr16
xchg
call
jg
adc
mov
pushf
pop
pop
mov
scas
aaa
pop
int3
aam
cmpsl
xor
subb
fisubl
push
xorl
adc
and
and
sti
or
cmc
or
jg
out
imul
scas
cmp
push
lds
and
lret
or
stos
jmp
std
xor
rcrl
jne
ret
push
bound
cli
mov
push
int
les
xlat
nop
add
mov
test
out
fildl
cwtl
push
adc
pop
add
aam
push
cmp
adc
lcall
rorb
dec
adc
push
std
stc
test
fildll
xor
imul
push
pop
add
out
js
movsl
je
push
popa
sub
movsl
sbb
idivl
sbb
push
gs
mov
movsb
or
aas
add
in
decb
xor
push
popw
add
testl
mov
daa
jbe
repnz
int3
push
jae
sbb
inc
in
aam
jmp
xchg
xchg
cmpsl
fsubrl
mov
loop
hlt
sub
adc
dec
mov
into
sbb
mov
push
pop
add
jmp
cmp
rol
jb
dec
pop
fcomps
rcll
js
jle
js
xor
pusha
sub
andb
sbb
dec
xlat
ficompl
insl
mov
das
aam
push
aam
or
mov
mov
in
dec
push
jp
out
stos
ret
pop
push
adc
nop
inc
mov
mov
pop
clc
inc
dec
xor
jmp
and
adcb
sub
popa
out
fs
add
pushf
popf
iret
mov
inc
fcomp
xor
call
fiaddl
push
pop
push
scas
adc
xchg
movsl
cmpsl
cld
and
dec
in
sub
inc
or
fimull
xchg
pop
test
cmp
lods
pop
mov
or
mov
jo
iret
jne
ret
dec
test
std
cli
add
xchg
fistps
nop
pop
lahf
jbe
and
mov
dec
mov
pop
in
xlat
mov
loope
shlb
jmp
jns
das
adc
ret
adc
push
bound
std
stos
mov
into
sbb
xor
adc
test
and
push
cmp
and
push
or
mov
jo
xor
jmp
mov
jnp
mov
cmc
inc
mov
jb
push
mov
enter
lock
push
aad
adc
ret
cmp
ret
insb
ljmp
adc
into
stos
fs
mov
add
rolb
inc
sub
push
push
xchg
adc
xor
out
cmp
or
pop
je
jae
xchg
js
add
aaa
les
nop
push
outsb
addr16
fidivs
jbe
popf
lahf
dec
mov
add
mov
inc
pop
test
jge
inc
xor
ja
adc
xor
aas
and
and
jp
ds
aam
pop
cmp
loopne
jge
sahf
jecxz
push
leave
and
xor
rorl
xchg
adc
mov
sar
mov
clc
dec
imul
mov
jmp
rol
enter
lret
pop
jp
test
js
jle
js
int3
jo
cmpsb
add
clc
add
lret
in
xchg
cmc
int
stos
pop
jnp
fistpl
pop
aam
mov
cmp
sub
mov
lcall
ljmp
repz
lret
mov
mov
scas
in
outsl
xchg
and
cs
push
xchg
aaa
pop
pop
or
push
lret
shrb
insb
out
jmp
int
push
pop
mov
sub
push
ret
xchg
inc
lcall
mov
or
lcall
inc
pop
clc
mov
arpl
movsl
adc
arpl
mov
cli
xor
out
dec
mov
aaa
dec
arpl
sub
mov
xchg
jo
push
lahf
add
or
popa
inc
ss
add
mov
aad
jno
sti
sarb
dec
push
arpl
and
pusha
or
dec
jb
adc
jne
int3
testb
pop
mov
divl
mov
and
sar
mov
xchg
std
jno
cmc
push
in
dec
jl
dec
dec
add
and
jo
adc
dec
pop
mov
js
push
mov
lcall
iret
and
das
leave
ret
and
stc
je
sahf
xor
mov
add
dec
repz
adc
sahf
orl
mov
pop
lea
sbb
cli
stos
mov
cli
aaa
and
ret
incl
xchg
xor
out
rcrb
clc
addl
mov
mov
sbb
stos
pop
stos
sbbl
jecxz
mov
sub
pop
mov
sub
gs
dec
sahf
cld
add
cmp
fadds
pop
outsb
nop
pusha
out
test
into
js
jne
ss
stos
repnz
sub
clc
inc
mov
pop
inc
js
xchg
mov
pushf
lret
or
jae
jge
inc
mov
fdivs
fisttpl
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
mov
iret
leave
rcr
aad
mov
cmp
js
jle
js
bound
lods
shll
sbb
push
mov
test
xor
ss
into
in
pop
mov
jge
stos
cmpsl
mov
pop
cmp
push
mov
mov
pop
sbb
jle
mov
or
xor
pop
sbb
lret
sub
and
add
xlat
jl
sbb
subl
xor
pop
ret
pop
push
jl
push
pop
aam
jg
jge
xor
test
daa
nop
push
mov
sub
aaa
xlat
sbb
adc
fcompl
mov
scas
dec
push
loop
cmc
add
xchg
adc
std
out
lds
push
in
mov
push
add
inc
dec
push
fucomi
pop
imul
loope
iret
pop
lret
aad
dec
or
xor
lock
jmp
dec
add
push
fstl
jae
shll
jecxz
lret
sbb
xor
xor
push
lret
mov
aam
jne
cmp
pop
in
xor
fwait
and
mov
and
imul
mov
js
movsl
jno
popa
cld
pop
push
gs
fs
dec
ss
pop
seta
loopne
incb
and
dec
std
mov
arpl
lods
sub
mov
repz
and
pop
sbb
bound
pushl
in
data16
cmp
xchg
cmp
cmpsb
sbb
jo
in
out
or
pop
sub
into
cmp
dec
push
ficompl
jns
mov
out
jge
dec
adc
enter
lds
sub
fcom
xor
pop
sbb
sbbl
das
ds
fstps
lahf
jne
xor
jo
mov
sbb
jb
push
pop
push
outsb
aad
pop
out
jns
pop
mov
fs
aam
leave
dec
scas
rorl
dec
inc
add
dec
xor
add
pop
mov
pop
jmp
rcl
ret
ror
aad
andb
pop
pop
and
adc
js
sub
das
push
stos
add
and
mov
rcll
cmp
cli
cmp
push
loop
xchg
ret
gs
xchg
or
mov
dec
push
push
pushf
cmp
aam
add
out
into
push
jb
cmp
ljmp
out
lods
ja
xor
fcomps
pop
fidivrl
or
out
push
dec
mov
mov
repnz
popl
pushf
data16
jno
pop
repz
and
out
xchg
adc
shlb
cmpsb
push
and
adc
cmp
inc
xor
or
loope
xor
movsl
sbb
adc
scas
jns
push
movsl
lods
and
int
int3
jg
sub
push
xlat
cmp
mov
mov
mov
fsubrl
cmpsl
xchg
sbbb
cld
jb
into
repnz
icebp
inc
jb
fistl
mov
adc
add
ret
push
inc
les
jge
addr16
sub
arpl
add
arpl
cmp
or
daa
cmp
xor
or
adc
std
daa
mov
test
jns
pop
imul
and
add
mov
enter
mov
push
cmp
repz
add
and
ret
push
pop
adc
fs
inc
push
icebp
adcl
push
test
pop
cmp
xchg
inc
fstps
icebp
sbb
ds
or
cs
outsl
sub
aad
int
std
das
ss
xchg
clc
inc
push
fmuls
push
cmp
test
xchg
stos
sub
rol
aaa
incl
pusha
outsl
push
cmp
lahf
xor
lret
out
cli
add
push
sub
inc
test
pop
add
pop
mov
mov
and
lds
fs
mov
and
inc
cmpsl
push
ret
push
push
jmp
add
fcom
les
dec
enter
mov
pop
mov
pop
jmp
into
iret
into
ror
aad
aad
mov
pop
aad
cmc
jg
adc
js
repz
sub
push
cmpl
push
sub
adc
imul
scas
adc
xor
adc
jmp
ficoms
jno
pop
sub
jge
divb
lea
push
mov
dec
loop
jo
push
mul
sbb
cmp
cmp
dec
sbb
add
cld
mov
in
xchg
lock
mov
add
push
push
pusha
mov
mov
mov
pop
das
or
lret
ficomps
or
ret
shll
xor
mov
pop
sub
xchg
sti
add
sbb
inc
into
jne
out
iret
out
test
lahf
lods
pusha
int3
stos
or
lock
mov
adc
or
test
pop
ss
and
aaa
pusha
mov
fstpl
dec
cwtl
in
mov
inc
test
imul
sbb
xchg
decb
xchg
cwtl
add
sbb
arpl
mov
add
xchg
xchg
push
mov
scas
lock
xchg
add
xor
mov
es
ljmp
rcr
js
jle
adc
push
testl
int3
aaa
push
dec
xchg
sub
jae
sub
fs
jns
loopne
lds
mov
add
test
push
loope
sbb
fistpl
fiadds
lds
inc
xor
aam
push
xor
iret
push
and
adc
inc
jo
fsubrl
sti
sub
jle
shrb
fmuls
iret
icebp
leave
sbb
jno
xor
and
arpl
lods
into
push
das
sbb
outsl
sahf
dec
mov
in
out
imul
dec
fimull
outsl
mov
pop
xor
repz
aas
dec
std
or
shrb
dec
repz
pop
and
xchg
jge
inc
out
scas
add
loop
cld
mov
adc
loop
pop
leave
ret
sbb
add
flds
add
flds
add
flds
add
add
dec
flds
add
add
flds
add
add
add
sbb
add
flds
add
flds
add
add
rcr
add
loopne
add
ljmp
add
add
push
fiaddl
add
fiaddl
add
add
fiaddl
add
fiaddl
add
add
dec
fiaddl
add
add
fiaddl
add
add
js
add
xchg
add
mov
add
lcall
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
add
fildl
add
fildl
add
add
push
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
faddl
add
add
sub
add
cmp
add
dec
faddl
add
add
data16
add
add
mov
add
pushf
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
fldl
add
fldl
add
add
dec
fldl
add
add
pusha
fldl
add
add
test
add
mov
add
sahf
fldl
add
add
fcmovu
add
out
fldl
add
fldl
add
fiadds
add
fiadds
add
fiadds
add
add
pop
fiadds
add
add
fiadds
add
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
filds
add
filds
add
filds
add
filds
add
add
filds
add
add
mov
add
cwtl
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
loopne
add
add
sub
add
loopne,pt
add
add
data16
add
add
xchg
add
xchg
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
loope
add
add
push
loope
add
add
jb
add
test
add
mov
loope
add
loope
add
loope
add
add
add
loope
add
add
adc
add
and
add
xor
add
loop,pt
add
add
pusha
loop
add
add
xchg
add
cwtl
loop
add
add
int3
loop
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
add
xor
add
inc
jecxz
add
add
fs
add
add
mov
add
mov
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
in
add
add
dec
in
add
add
push
add
jl
add
mov
add
cwtl
in
add
in
add
in
add
in
add
in
add
in
add
add
ds
add
add
pop
in
add
add
jle
add
nop
in
add
add
mov
in
add
in
add
in
add
in
add
out
add
out
add
out
add
add
add
push
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
pop
out
add
add
jbe
add
xchg
add
cwtl
out
add
out
add
out
add
out
add
out
add
call
add
and
add
xor
add
dec
call
add
callw
jp
add
xchg
add
xchg
call
add
mov
add
call
add
in
add
lock
add
or
add
sbb
add
add
add
or
add
add
add
das
and
add
add
pop
add
add
add
add
and
pop
aam
add
add
add
add
add
add
add
add
push
aam
add
add
xchg
inc
add
imul
add
add
xor
jp
jp
outsb
je
je
jo
aas
dec
imul
gs
jb
imul
inc
inc
dec
push
inc
dec
push
inc
inc
cmp
add
add
aad
add
fildl
add
rolb
add
aad
add
rolb
add
add
add
add
add
loope
add
xlat
add
ss
add
adc
add
inc
jmp
add
sbb
add
flds
add
flds
add
flds
add
add
dec
flds
add
add
flds
add
add
add
sbb
add
flds
add
flds
add
add
rcr
add
loopne
add
ljmp
add
add
push
fiaddl
add
fiaddl
add
add
fiaddl
add
fiaddl
add
add
dec
fiaddl
add
add
fiaddl
add
add
js
add
xchg
add
mov
add
lcall
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
add
fildl
add
fildl
add
add
push
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
faddl
add
add
sub
add
cmp
add
dec
faddl
add
add
data16
add
add
mov
add
pushf
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
fldl
add
fldl
add
add
dec
fldl
add
add
pusha
fldl
add
add
test
add
mov
add
sahf
fldl
add
add
fcmovu
add
out
fldl
add
fldl
add
fiadds
add
fiadds
add
fiadds
add
add
pop
fiadds
add
add
fiadds
add
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
filds
add
filds
add
filds
add
filds
add
add
filds
add
add
mov
add
cwtl
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
loopne
add
add
sub
add
loopne,pt
add
add
data16
add
add
xchg
add
xchg
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
loope
add
add
push
loope
add
add
jb
add
test
add
mov
loope
add
loope
add
loope
add
add
add
loope
add
add
adc
add
and
add
xor
add
loop,pt
add
add
pusha
loop
add
add
xchg
add
cwtl
loop
add
add
int3
loop
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
add
xor
add
inc
jecxz
add
add
fs
add
add
mov
add
mov
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
in
add
add
dec
in
add
add
push
add
jl
add
mov
add
cwtl
in
add
in
add
in
add
in
add
in
add
in
add
add
ds
add
add
pop
in
add
add
jle
add
nop
in
add
add
mov
in
add
in
add
in
add
in
add
out
add
out
add
out
add
add
add
push
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
pop
out
add
add
jbe
add
xchg
add
cwtl
out
add
out
add
out
add
out
add
out
add
call
add
and
add
xor
add
dec
call
add
callw
jp
add
xchg
add
xchg
call
add
mov
add
call
add
in
add
lock
add
or
add
sbb
add
add
add
or
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
add
jns
je
insl
add
fwait
add
jo
imul
je
insb
add
ljmp
jo
add
je
ja
jae
add
add
jb
outsl
insb
insb
add
add
imul
add
outsl
ja
outsl
ja
jb
add
add
imul
data16
add
gs
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
xchg
add
popa
insb
outsb
jne
add
add
jb
outsl
imul
sbb
ja
jae
popa
je
add
outsl
ja
add
fwait
add
jo
pop
arpl
insl
outsl
fs
loope
jae
arpl
data16
fildl
pop
popa
insl
jae
pop
gs
je
add
imul
add
je
push
add
popa
insb
je
insl
add
data16
add
or
gs
add
sub
arpl
arpl
add
add
outsb
add
sahf
add
jae
bound
gs
add
add
ja
arpl
data16
js
imul
ja
jae
arpl
add
jo
gs
push
add
arpl
inc
imul
pop
gs
je
sbb
jae
jo
imul
pop
arpl
imul
gs
jb
push
je
arpl
add
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
jb
pop
pop
addr16
popa
imul
pop
add
gs
jb
jb
add
and
arpl
jo
add
std
add
jb
outsl
jne
add
add
jb
outsl
jb
add
push
inc
push
push
cs
insb
add
inc
add
gs
outsb
push
gs
js
gs
imul
gs
ljmp
insb
gs
je
jb
bound
gs
js
add
pop
add
outsb
fs
imul
outsb
addr16
outsl
je
imul
outsl
outsb
push
add
mov
insb
dec
popa
insl
gs
imul
add
push
popa
insb
imul
add
inc
imul
inc
push
dec
outsl
je
imul
outsl
outsb
add
cmp
gs
push
inc
js
arpl
imul
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
add
outsb
fs
gs
inc
imul
popa
imul
je
jo
gs
bound
arpl
js
add
add
gs
popa
insl
gs
imul
insb
gs
je
je
add
add
je
popa
jae
inc
jb
outsl
jb
add
bound
inc
jb
add
or
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
js
push
gs
fs
imul
gs
push
dec
outsb
outsw
add
dec
popa
imul
outsw
add
add
je
outsl
arpl
gs
outsb
outsw
inc
add
push
add
fs
imul
js
add
outsl
add
je
imul
popa
je
add
incl
inc
gs
outsl
arpl
gs
outsb
outsw
push
add
rolb
je
arpl
push
add
repnz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
cmp
dec
jo
outsb
inc
imul
outsb
addr16
add
stc
add
inc
popa
fs
je
imul
add
add
gs
je
inc
jbe
outsb
je
add
insl
add
outsb
insb
outsl
arpl
imul
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
pop
add
insb
jae
gs
popa
insb
jne
add
jo
jb
popa
je
add
dec
add
insb
gs
jnp
inc
outsl
insb
fs
je
imul
push
gs
gs
outsl
outsb
imul
imul
add
imul
in
add
gs
je
push
push
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
mov
inc
outsl
insl
jo
jb
push
je
imul
add
imul
gs
arpl
add
out
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
inc
add
faddl
push
gs
jb
push
push
add
gs
dec
outsl
add
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
inc
add
je
je
jb
jne
dec
outsb
outsw
push
add
add
push
popa
insb
imul
addr16
jb
jne
add
in
push
gs
outsl
insl
insl
push
imul
add
push
jns
je
insl
push
imul
insb
gs
imul
dec
outsl
jbe
inc
imul
add
jae
jb
insl
jo
inc
add
inc
gs
je
imul
inc
js
add
fldl
inc
jb
popa
je
dec
jne
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
jno
inc
gs
dec
push
xor
mov
inc
push
je
dec
push
add
fldl
push
gs
dec
inc
imul
jne
inc
outsl
outsb
je
popa
insl
imul
add
gs
je
dec
inc
push
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
push
arpl
outsb
add
inc
gs
popa
jo
outsl
fs
lahf
add
gs
je
dec
popa
insb
data16
outsb
gs
popa
insb
gs
gs
add
je
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
inc
imul
bound
imul
inc
js
push
gs
dec
jne
push
add
push
gs
dec
jne
push
add
dec
add
je
outsl
outsb
je
popa
je
add
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
insb
imul
inc
gs
gs
inc
popa
arpl
add
jnp
inc
gs
gs
inc
insb
imul
inc
jb
popa
je
inc
jb
jae
dec
outsb
imul
add
je
imul
add
gs
popa
jns
jne
add
popa
je
push
outsl
insb
imul
add
add
jne
inc
outsl
outsb
je
popa
insl
imul
add
popa
je
inc
imul
imul
xchg
inc
jb
popa
je
inc
imul
add
gs
je
push
outsb
add
popa
je
inc
dec
inc
push
arpl
outsb
add
addl
imul
add
inc
gs
gs
jb
jae
push
popa
insb
gs
gs
outsb
fs
add
jo
add
push
gs
dec
gs
imul
push
gs
insb
imul
je
add
lar
jb
popa
insb
imul
arpl
add
je
gs
inc
outsl
insb
outsl
jb
add
inc
outsl
arpl
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
add
je
dec
inc
imul
imul
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
bound
je
jb
arpl
add
add
jae
jp
push
popa
insb
gs
add
push
imul
add
add
arpl
gs
insb
imul
xchg
add
gs
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
insl
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
popa
je
inc
inc
push
add
popa
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
mov
inc
gs
imul
dec
jb
inc
js
add
dec
xor
cs
insb
add
jb
jns
popa
jb
je
add
ja
outsl
arpl
push
arpl
add
fs
insl
popa
addr16
add
mov
je
gs
popa
add
gs
jb
jns
outsb
jne
stos
add
ja
outsb
imul
arpl
mov
inc
gs
insb
addr16
jb
arpl
add
inc
arpl
popa
je
dec
gs
outsl
popa
jb
dec
popa
jns
jne
add
data16
je
imul
add
je
imul
js
inc
add
and
fs
outsb
jo
je
mov
imul
outsl
ja
jo
popa
je
add
mov
push
popa
imul
jne
dec
fs
add
dec
add
je
outsb
jne
sub
inc
gs
outsb
jne
adc
push
imul
outsb
outsl
ja
gs
popa
addr16
add
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
jae
popa
addr16
outsl
js
js
add
imul
je
jo
popa
je
push
outsb
add
mov
dec
outsl
popa
fs
outsb
jne
add
add
jo
outsb
fs
outsb
jne
add
inc
jb
popa
je
dec
arpl
dec
outsb
imul
insb
add
je
imul
outsb
addr16
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
cmp
arpl
popa
imul
outsb
add
addb
outsb
data16
popa
je
push
arpl
add
arpl
outsl
jo
jo
outsb
jne
add
gs
jae
inc
inc
add
add
outsb
fs
gs
popa
addr16
add
fildl
dec
outsl
jbe
push
imul
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
stos
add
fs
jne
jae
jb
add
push
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
xor
push
gs
insb
popa
jae
dec
outsl
outsb
addr16
add
inc
jb
popa
je
push
imul
push
add
outsl
outsb
imul
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
add
data16
je
arpl
scas
add
fs
jne
jae
jb
add
add
push
jae
push
imul
arpl
add
js
inc
gs
imul
js
push
add
push
add
je
insb
addr16
je
insb
dec
inc
add
mov
outsl
ja
jb
insl
push
outsl
imul
outsb
jae
jb
dec
outsb
jne
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
add
je
outsb
jne
je
insl
inc
outsl
jne
je
add
gs
arpl
push
add
add
push
imul
popa
jae
inc
js
add
ret
add
fs
imul
add
outsl
jae
inc
gs
je
jo
add
imul
jae
popa
addr16
add
out
dec
jo
outsb
inc
gs
je
jo
add
and
push
arpl
insb
insb
push
imul
add
mov
imul
xor
jb
outsl
dec
gs
push
add
xor
push
gs
popa
jb
je
outsl
jae
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
imul
jae
addr16
add
push
push
imul
add
gs
je
inc
imul
jb
insl
push
add
je
push
gs
imul
js
push
add
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
cmc
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
inc
gs
imul
outsb
addr16
add
fldl
inc
jno
popa
insb
push
arpl
add
je
arpl
insb
insb
push
outsl
jae
add
imul
imul
add
insb
insb
push
imul
dec
outsb
push
outsb
fs
gs
popa
addr16
js
pop
add
gs
je
dec
arpl
inc
jb
insl
push
gs
jne
arpl
add
inc
outsl
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
push
imul
outsl
arpl
add
bound
jbe
outsb
je
faddl
inc
outsb
jne
push
imul
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
cwtl
add
je
outsl
jns
imul
add
popa
jb
jb
jbe
add
add
outsb
fs
gs
popa
addr16
add
mov
inc
gs
jb
insl
gs
jb
arpl
or
push
imul
je
gs
add
add
je
jne
jae
jb
push
inc
gs
imul
add
inc
insb
addr16
je
insl
dec
outsb
je
sbb
arpl
gs
imul
add
add
je
outsb
jne
je
insl
dec
inc
add
outsl
addr16
outsl
js
popa
jb
insl
inc
add
arpl
outsl
push
push
outsb
outsl
ja
add
inc
push
outsb
jne
popa
imul
add
add
jo
imul
arpl
add
dec
outsb
push
arpl
cltd
add
inc
insb
addr16
jne
je
outsb
inc
push
add
mov
jb
outsb
je
inc
add
inc
gs
jns
je
insl
dec
outsb
jne
add
push
imul
popa
jae
inc
js
add
pusha
add
gs
je
dec
outsb
jne
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
dec
outsb
jne
je
insl
dec
outsb
outsw
push
add
mov
fs
outsb
jne
add
inc
gs
outsl
jo
imul
dec
add
je
jb
jo
add
cmp
push
gs
jne
jae
jb
outsl
jae
add
add
jo
imul
gs
js
add
jp
push
push
jb
je
add
imul
popa
jae
push
add
scas
add
fs
arpl
inc
add
add
je
popa
jb
je
outsl
jae
jnp
push
push
jb
outsl
jb
add
inc
gs
jne
dec
outsb
jne
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
push
push
inc
push
xor
cs
insb
add
push
dec
inc
dec
dec
xor
cs
insb
add
push
dec
push
jne
jns
push
push
inc
insb
inc
inc
push
in
inc
add
in
inc
add
or
dec
addr16
xor
dec
cmp
jp
cmp
dec
es
jae
and
dec
push
push
pop
push
cmp
dec
addr16
xor
dec
cmp
jp
cmp
dec
es
insl
dec
and
dec
push
bound
arpl
dec
bound
dec
jae
cmp
dec
xor
dec
push
jb
jae
orl
nop
jge
aas
dec
dec
xor
dec
ds
inc
dec
cmp
dec
xor
dec
push
sbbb
setae
jl
jge
aas
dec
dec
xor
dec
ds
inc
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
mov
or
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
mov
mov
ret
or
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
ret
psrlq
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
popa
dec
xor
dec
xor
dec
ds
xor
dec
push
loop
jecxz
repz
jl
jge
jl
jge
ds
jg
xor
dec
xor
dec
ds
inc
dec
cmp
dec
cmp
add
add
adc
jl
jge
aas
dec
add
outsb
jmp
inc
add
inc
add
in
inc
add
in
inc
add
inc
add
inc
add
in
inc
add
test
pushf
clc
data16
add
inc
add
inc
add
inc
add
inc
add
jmp
inc
add
in
inc
add
test
jb
inc
add
or
inc
add
fstl
inc
add
inc
inc
mov
jne
mov
incb
mov
jmp
add
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
and
pushf
clc
sub
add
jmp
inc
add
imul
pushf
clc
popf
jmp
add
pop
jmp
add
add
inc
add
inc
add
add
add
inc
add
add
dec
add
dec
add
add
add
add
inc
add
add
dec
add
inc
add
add
dec
add
add
add
add
jmp
add
dec
pop
dec
inc
dec
inc
dec
pop
dec
inc
dec
add
dec
xor
add
pop
dec
pop
dec
add
dec
xor
dec
inc
dec
pop
dec
inc
dec
add
dec
xor
add
pop
dec
inc
dec
dec
dec
push
dec
inc
dec
pop
dec
xor
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jge
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
xlat
lds
ret
fidivs
into
mulb
push
sbb
jno
add
add
mov
das
shlb
rolb
inc
push
outsl
push
push
jmp
add
in
adc
jae
inc
jae
popa
push
pop
pop
outsb
jbe
jns
push
imul
je
jns
popa
push
push
push
dec
imul
popa
jp
arpl
push
imul
jp
jb
outsl
push
inc
inc
push
imul
push
jb
add
push
insb
pop
ja
je
bound
add
push
dec
je
push
jne
popa
jns
dec
push
dec
dec
pop
pop
dec
push
add
adc
push
jge
add
mulb
cs
adc
xchg
sbb
push
mov
add
push
js
pop
int3
int
add
push
sahf
outsl
dec
pop
movsb
popf
mov
jge
jne
xor
jne
add
lret
loope
dec
sahf
cmp
push
sbb
negb
lods
dec
add
push
mov
sbb
cmpsb
scas
pop
jle
bound
mov
xchg
dec
mov
les
mov
or
xor
fdiv
mov
fldenv
fiadds
inc
in
loop
inc
jge
pop
mov
loopne
sbb
push
xor
out
push
push
ja
cmp
out
mov
pop
mov
xor
pusha
cmp
dec
cltd
test
test
mov
jnp
aad
push
inc
jo
je
xor
mov
pop
pop
pop
movsb
sbb
sub
mov
rorl
push
lret
xchg
xor
xlat
inc
std
lea
lock
mov
sbb
adc
lods
jne
adc
xor
cmp
sarb
mov
fnsave
ret
push
mov
pop
ret
aas
xchg
loope
data16
inc
mov
cmp
in
stos
sub
add
shrl
jge
aaa
flds
mov
mov
js
stos
jecxz
push
mov
out
dec
sti
nop
fwait
cmc
xchg
in
push
popa
fiadds
sarb
ljmp
mov
cmpb
dec
jne
mov
pop
movsb
add
push
shll
mov
mov
jmp
mov
pop
popa
in
inc
push
dec
add
jmp
sarb
fcomp
jno
out
mov
jb
push
adc
pop
pop
clc
inc
adc
test
bound
push
lcall
mov
bound
mov
pop
or
lods
xchg
push
scas
stos
sbb
xchg
lret
cs
sbb
jns
sub
mov
sar
push
push
jne
out
mov
pop
shll
and
add
cmpsl
je
xchg
fwait
adc
inc
sub
dec
cmpsl
lcall
hlt
or
sub
mov
addr16
mov
and
dec
iret
test
pushf
scas
outsl
and
xchg
aam
jne
adc
call
cmp
sarb
push
pop
mov
push
inc
leave
pusha
sub
popf
movsl
adc
fnstsw
int
lahf
aas
mov
mov
sbb
leave
xchg
scas
mov
cmpsb
mov
in
or
push
imul
hlt
test
xchg
jo
ror
iret
lcall
aas
idivl
pop
dec
jb
outsl
fisttps
cmpb
pop
std
push
addr16
out
imul
test
sbb
add
lds
sbb
pop
data16
mov
push
push
fcoms
jge
mov
shlb
iret
leave
push
insb
jnp
add
dec
inc
add
mov
mov
outsl
jle
jae
adc
sub
sub
fisubl
mov
ds
mov
xchg
xchg
imul
mov
aad
ficomps
push
sbb
pop
jmp
or
cmp
ret
cmpsl
dec
pop
adcl
loop
addr16
fstp
sbb
mov
or
rcrb
sarb
jne
movsl
cld
enter
pop
xor
add
sub
mov
mov
add
pop
sub
lret
add
rcll
xor
les
push
aad
movsb
adc
cmp
inc
pop
or
pop
popa
inc
add
lea
dec
int3
jb
or
inc
seta
push
mov
or
mov
leave
jnp
popa
dec
lods
mov
mov
mov
sub
lahf
pop
je
jae
dec
pop
push
insl
cmp
fldenv
mov
lea
mov
sub
mov
int
push
cmp
nop
aaa
mov
ja
lcall
pusha
and
or
insl
scas
add
js
jae
insb
mov
sub
mov
pop
mov
add
push
xchg
fldcw
and
addr16
clc
idiv
adc
jbe
cmc
cmp
jle
imul
je
loope
add
push
cmpsb
outsl
aad
inc
iret
and
loop
sbb
jne
sti
adc
pop
or
loop
mov
cmpsb
movl
add
xor
or
mov
push
pop
adc
pop
and
xor
sbb
pop
lea
inc
inc
fisttpll
mov
sbb
in
mov
rclb
loope
push
adc
xchg
sub
cmp
insl
lods
repz
xor
dec
and
adc
push
hlt
mov
mov
lret
dec
mov
mov
mov
mov
and
movsb
fisubl
pop
nop
jns
fdivr
gs
pop
push
hlt
nop
push
nop
out
push
dec
loop
popa
jo
push
out
leave
mov
ret
mov
and
outsb
xor
pop
int3
stos
dec
jg
pushf
dec
gs
cmpl
mov
xor
pop
adc
pop
push
or
xlat
cmp
xchg
sbb
cwtl
xchg
lock
push
inc
imul
fwait
cmc
xor
mov
xchg
push
or
sti
sub
in
jecxz
scas
or
jne
and
cld
es
ss
test
cld
stos
mov
and
mov
enter
rorl
inc
les
sbb
sub
jne
push
mov
stos
daa
pushf
cld
push
push
cwtl
cmp
ja
jb
sbbb
adc
leave
shlb
je
rclb
xchg
xchg
hlt
rorb
bound
push
mov
pop
stc
mov
lock
test
and
leave
mov
add
push
dec
dec
inc
pop
inc
pop
pop
shrb
cmp
inc
addl
xchg
add
enter
jge
stos
mov
jge
out
outsb
stc
mov
ljmp
xor
dec
mov
ficompl
popf
jp
inc
jae
in
pusha
roll
jp
inc
push
adc
dec
movsb
and
mov
xor
test
xchg
mov
orb
cld
inc
jmp
dec
inc
test
push
adc
dec
lds
lock
xchg
idivl
shlb
sbb
insl
ds
fmull
ljmp
pop
test
or
jae
arpl
xchg
mov
push
jnp
push
movsb
mov
push
fiadds
repnz
repnz
sbb
adc
mov
out
xchg
or
inc
mov
cli
xchg
xor
mov
jnp
inc
jg
push
aad
enter
aas
xor
aam
pop
iret
scas
std
sub
lods
push
cmp
mov
and
mov
imulb
push
lds
sub
stos
inc
data16
sbb
loopne
jno
pop
or
push
add
mov
adc
or
icebp
je
shrb
in
lock
cltd
xchg
cli
push
xchg
les
or
xchg
sbb
lcall
lahf
into
push
mov
mov
cmpsl
mov
leave
add
jp
xor
arpl
lods
lods
pop
icebp
xchg
inc
icebp
xchg
clc
mov
mov
and
dec
pop
or
mov
cltd
sbb
jl
movsb
mov
out
lcall
aam
ret
xchg
xchg
into
pop
jnp
dec
orl
in
inc
int
sti
xor
repz
std
repz
xchg
call
sbb
push
dec
sbb
ss
push
nop
mov
lods
leave
add
push
pop
lahf
add
stos
or
popa
movsl
pop
popf
es
adc
add
xor
and
jmp
mulb
nop
lret
out
lret
dec
jae
mov
popa
repz
std
push
push
icebp
ss
adc
repnz
pop
mov
insl
aas
or
sbb
popf
repnz
mov
out
das
stos
jmp
xchg
cs
aam
xchg
jae
jmp
bound
movsl
aad
cmpb
pop
loope
stc
in
mov
loope
inc
rorl
pop
pop
mov
sbb
inc
adc
loopne
in
and
std
daa
scas
xlat
push
ret
xchg
mov
loopne
pop
and
out
sbb
pop
testl
lahf
in
stos
xchg
jg
adc
push
and
rolb
arpl
adc
inc
jge,pn
test
lea
stos
lods
dec
outsl
loopne
push
push
icebp
or
cli
pop
cltd
sub
push
jbe
pop
lock
lret
js
cmp
ror
inc
xchg
insl
lea
popf
in
mov
je
ss
xchg
addr16
cmp
sarl
ret
repnz
and
add
sbb
popa
and
inc
mov
sbb
sbbl
int
cmp
jmp
push
mov
ret
nop
lahf
scas
mov
jl
dec
movsl
xchg
ljmp
cld
push
fwait
dec
jbe
fucom
outsb
add
dec
cs
mov
mov
push
andb
in
jp
loopne
daa
dec
mov
movl
gs
hlt
or
cmp
cltd
out
dec
in
sub
inc
aas
xor
jb
cmp
rclb
pop
je
pop
insb
inc
inc
loop
lea
inc
pop
push
adc
jmp
out
pop
fisubs
pop
mov
stos
lea
jmp
arpl
xchg
push
sbbl
push
shr
dec
pop
inc
addr16
xchg
xor
xor
aaa
dec
ljmp
add
lods
cmpsl
mov
pop
cli
fcmovu
lret
jbe
and
jge
cmp
xor
sbb
shr
pop
stos
popf
int3
loope
mov
sar
test
adc
ret
or
fwait
mov
sbb
mov
push
xor
adc
fs
mov
cmp
movl
sbbl
sbb
arpl
test
and
inc
lock
scas
mov
mov
dec
xchg
lds
filds
dec
push
xor
fldt
sbb
sub
jne
sbb
divb
jo
dec
add
adc
aam
dec
cmp
aaa
push
mov
inc
inc
jae
js
loope
sarb
scas
fstl
mov
add
xchg
lock
cmp
shlb
sahf
push
xchg
out
mov
fistl
subl
inc
lock
andps
cmp
js
add
out
shr
sbb
mov
push
lock
xchg
mov
mov
mov
aas
pop
push
int
adc
adc
cmp
lea
pop
in
dec
dec
fs
sbb
mov
sbbb
repnz
push
test
in
mov
aaa
test
test
in
mov
mov
call
int3
outsb
jb
repz
sub
cs
add
jmp
fsts
pop
mov
cmp
lcall
in
push
lea
mov
data16
mov
cmpsb
adc
jmp
xor
and
in
dec
inc
add
push
std
xor
inc
mov
into
arpl
xchg
sub
out
xchg
and
cmp
jl
nop
lcall
sarl
in
sbbb
mov
push
jmp
jns
xchg
test
pop
jne
cmp
fstl
mov
mov
sub
rolb
push
ret
fwait
xchg
jo
mov
aas
jmp
jnp
mov
mov
dec
dec
inc
jno
inc
fistpl
out
andb
arpl
in
and
pushf
inc
leave
in
insl
adc
int
push
incl
ret
int
jge
enter
int
js
bound
jle
leave
pop
sub
in
mov
push
outsl
lret
mov
adc
and
add
dec
push
pop
push
pop
dec
mov
dec
push
mov
sbbb
xchg
add
mov
test
add
mov
movsl
orb
cs
movsl
xchg
gs
loop
push
xchg
mov
add
fxch
sbb
xchg
and
or
data16
or
or
iret
push
imul
sahf
mov
and
mov
rol
adc
jcxz
xchg
dec
in
pushf
xchg
cmpsb
add
mov
adcl
jno
lock
fwait
mov
popf
and
push
sbb
fidivs
outsb
and
and
add
push
mov
mov
mov
mov
adc
and
enter
sub
push
mov
xchg
cmp
test
in
mov
and
inc
xor
pop
rclb
es
pop
cmpb
xchg
add
jle
inc
cmp
sti
jle
arpl
leave
clc
xchg
dec
sub
push
pop
xchg
es
xchg
mov
aad
jbe
incl
aam
push
push
inc
js
mov
in
pop
xor
sbb
popa
add
dec
iret
inc
xchg
cmp
outsb
xor
mov
pop
and
rcll
pop
addr16
movl
fcmovnb
repz
mov
ja
sbb
mov
mov
add
dec
and
adc
daa
fdivr
pop
jo
in
sbb
rcr
pop
ss
xor
xchg
lret
lods
xorb
pop
test
sub
mov
pop
shll
inc
loope
out
call
dec
iret
das
into
ret
add
into
pop
call
in
scas
flds
enter
mov
push
jecxz
xchg
shll
ja
jo
es
mov
dec
push
xor
cmc
push
stc
dec
repz
xor
cwtl
xor
cli
in
sbb
out
jle
pusha
or
cmpsl
iret
imul
lret
xor
xor
push
out
mov
xor
or
pop
xchg
adc
out
jg
call
std
repnz
stos
push
cmp
push
push
sub
stos
xor
and
imul
inc
insb
add
xchg
ret
pop
mov
ljmp
mov
pop
push
imull
pop
lret
pop
dec
xchg
xchg
inc
pop
mov
xor
jnp
mov
inc
mov
add
sub
or
xor
dec
pop
fs
pushf
mov
jb
pop
fst
mov
iret
mov
jp
mov
lcall
cmp
cwtl
jbe
loope
or
cmpsl
jmp
sub
adc
mov
lea
popf
xor
pushf
arpl
shr
test
sub
shll
imul
add
aas
out
push
mov
orl
ret
jge
sub
cwtl
ljmp
jmp
push
jecxz
cmpsl
push
lea
dec
test
sar
aad
dec
fists
call
das
mov
cmp
pop
mov
js
and
call
js
jl
mov
jle
xlat
rcll
push
das
je
mov
sub
push
push
cmp
sbb
stos
mov
out
dec
pop
xchg
loop
filds
pop
xchg
das
adc
push
xor
les
sahf
lods
dec
xor
mov
cltd
push
push
jle
cld
lret
mov
outsl
pushf
pop
or
pop
aam
mov
xor
dec
lret
and
xchg
xchg
iret
cmp
mov
push
mov
mov
hlt
xchg
in
sbb
js
dec
ret
inc
aam
ja
scas
push
inc
lret
pop
imul
aad
cmp
pslld
fmul
pop
cmp
push
lret
sub
inc
dec
movsl
pop
or
dec
out
jg
mov
and
dec
push
ret
xchg
cmp
mov
clc
rorl
pusha
movsl
lods
fwait
aaa
out
mov
and
xchg
data16
cmp
es
imul
outsb
stc
pushf
lahf
sahf
inc
je
fcompl
dec
mov
sbb
cltd
call
cli
fldt
mov
test
cmp
add
push
je
jbe
lods
adc
sub
rcll
pushf
pushf
inc
fidivl
pop
std
or
jmp
and
adc
insb
mov
pop
cmpsl
mov
pop
sub
mov
adc
jge
add
push
arpl
nop
leave
xchg
bound
sub
cmc
xchg
push
popf
jl
lret
dec
and
dec
scas
bound
lret
sub
xchg
scas
xchg
sar
push
rcrl
into
mov
and
orl
lret
and
dec
xchg
fstpl
sahf
push
dec
sbb
xor
cs
mov
sbb
sub
or
insb
scas
pop
xchg
sub
and
and
clc
ret
ljmp
xor
ss
push
mov
sub
pop
cwtl
idivb
scas
lret
dec
pop
inc
push
stc
dec
adc
hlt
jae
mov
ret
or
mov
addb
mov
jl
xchg
pushf
cld
call
nop
outsb
xchg
sub
push
mov
scas
inc
int3
inc
ja
mov
cmp
pop
cs
mov
je
xchg
jne
sbb
xchg
mov
loope
or
sub
subb
add
icebp
data16
test
sbb
pop
repnz
sub
fidivs
lea
jno
pop
lcall
push
ss
or
outsb
push
sbb
push
mov
push
or
faddl
je
mov
imul
fnstsw
dec
lock
enter
xchg
mov
jns
xchg
mov
fistl
inc
int
dec
lds
sbb
ss
out
xor
js
jge
jnp
jnp
clc
xor
cmp
mov
ljmp
inc
dec
dec
pop
pop
push
sub
xchg
stc
mov
add
bound
fistpll
push
mov
jne
add
scas
sub
inc
insl
insb
imul
xor
pop
push
add
std
out
lret
cltd
flds
jbe
push
sub
cld
cmp
push
bnd
add
dec
push
adc
xchg
xor
imul
pushf
repz
popf
dec
and
lret
shll
in
jmp
fsts
mov
sbb
sbb
insb
enter
mov
mov
movsb
pop
loopne
mov
add
or
cwtl
shlb
cmp
push
push
sub
adc
jo
popa
mov
add
in
rorb
sub
cld
scas
stos
xor
sbb
int
sub
lds
popa
leave
pop
mov
filds
inc
sbb
jne
repnz
jo
cli
in
in
inc
sbb
jnp
push
inc
add
inc
push
or
idivb
std
movsb
pop
xchg
pop
pop
outsl
pushf
pop
inc
push
imul
lods
fldenv
jno
jmp
xlat
mov
mov
pop
aad
ficomps
ret
push
fidivrl
rcrl
insl
dec
push
hlt
mov
mov
push
fisubrs
aam
dec
and
sub
rol
jg
out
adc
sub
sbb
mov
push
hlt
lar
fstps
and
xlat
cmp
jbe
push
addl
sti
jns
xor
adc
fxch
jle
inc
jmp
sub
inc
add
cmp
ss
jmp
les
scas
mov
pop
cmpsb
jns
inc
jmp
mov
mov
mov
gs
or
clc
push
push
loope
out
pop
xchg
add
ljmp
cmpsb
lds
adc
add
sahf
adc
sub
orl
movsl
sub
insl
hlt
cmp
addr16
xor
adc
aam
int
add
cmp
aaa
scas
push
jp
addl
jns
aad
inc
lods
or
aad
mov
or
enter
push
push
xchg
pushf
scas
in
or
fdivr
test
and
rcl
xchg
aad
or
xlat
mov
decl
mov
enter
push
and
je
dec
outsb
js
cmp
pop
out
and
mov
pop
mov
push
aas
cs
aaa
jmp
mov
lcall
fcmove
xlat
pop
adc
xchg
and
aad
fisubrs
or
aad
ljmp
cmp
mov
mov
xchg
add
inc
icebp
movsl
jne
enter
cmp
dec
aam
inc
adc
and
inc
sub
jmp
hlt
call
outsb
xor
insl
push
cmp
ljmp
xlat
sub
repz
aas
cmp
cmpsl
xchg
imul
outsb
mov
push
mov
jo
test
jb
movl
movsl
popa
cmc
push
in
js
repnz
mov
xor
dec
int
inc
dec
mov
test
test
xchg
imul
das
ja
pop
int
imul
insb
xchg
push
test
dec
dec
int3
add
adc
sbb
mov
sbb
bound
ljmpw
sub
js
mov
xchg
fistpl
adc
out
xchg
loope
loope
sahf
fwait
and
mov
imul
sub
push
nop
jne
sbb
and
pop
fsubr
xchg
popf
pop
cld
lahf
stc
sbb
adcl
js
pop
adc
cmp
ljmp
sub
jne
mulb
mov
call
add
dec
mov
mov
xor
outsb
or
or
rorb
xchg
fnstsw
cli
arpl
insl
mov
jb
lds
or
out
mov
jns
and
fisttps
repnz
daa
fsubl
pop
dec
push
lods
stos
inc
pop
subb
xchg
mov
pop
repz
int
lret
push
pop
sahf
enter
mov
jb
add
push
inc
orb
pusha
out
jl
or
sahf
aaa
rcrb
xchg
or
stc
lahf
xor
iret
ljmp
dec
call
sahf
repnz
in
push
pop
rcrl
inc
fcmove
cmpsb
jno
cmpsb
adc
pop
push
les
xlat
shrl
rcll
addl
shrl
jo
inc
cmpsb
ficoms
adc
testl
pushf
jle
sti
sbb
add
mov
inc
sub
mulb
inc
mov
mov
adc
cmp
and
aam
xor
push
fs
push
cs
dec
xlat
test
jo
push
add
arpl
push
mov
mov
push
sbb
xlat
ret
xor
jge
sbb
cmp
xchg
mov
loop
mov
shll
xchg
mov
mov
add
push
je
jge
outsb
bound
or
adc
dec
add
out
lahf
outsb
push
loopne
ret
sbb
adc
scas
push
or
jecxz
lahf
or
inc
inc
cmp
loop
xlat
ds
pusha
adc
inc
pop
les
mov
repz
xlat
in
lds
jl
loop
add
mov
fwait
test
dec
jp
push
addr16
sub
push
xchg
mov
mov
mov
mov
scas
or
iret
sbb
jmp
add
cmp
loop,pn
pop
arpl
xchg
jge
mov
or
adc
or
pushf
std
popaw
cwtl
mov
sub
xlat
adc
aam
jno
lahf
pop
lds
test
pop
inc
icebp
jne
or
push
push
fcmove
data16
scas
jns
ds
mov
cli
jecxz
cld
outsb
in
das
adc
lea
or
pop
cmpsl
dec
jbe
out
scas
add
inc
dec
dec
dec
dec
dec
inc
dec
sub
testb
xchg
add
xchg
add
jno
or
inc
jecxz
lahf
add
pop
adc
cmc
adc
mov
inc
mov
push
xor
mov
icebp
lock
pushf
loopne
dec
xchg
or
and
or
cli
jge,pt
pop
adc
push
sbb
aam
dec
icebp
int3
mov
xor
mov
pop
ja
and
andb
cs
sbbl
leave
dec
jb
mov
and
loopne
cmpsl
stc
popf
ficoml
call
ret
adc
adc
push
jnp
movb
and
cmpl
bound
sub
leave
pop
jb
jno
nop
adc
mov
push
test
add
pop
cmc
and
jb
pop
xchg
shrl
ret
or
aas
aaa
push
aas
push
cmp
clc
out
outsl
push
je
imul
cld
bound
pop
mov
adc
es
imul
outsb
mov
sbb
es
lock
scas
es
jb
xchg
test
cmp
cs
jb
mov
icebp
scas
mov
js
outsb
outsl
imul
stc
ret
cwtl
cwtl
lcall
mov
outsl
lock
popf
subl
push
inc
push
jle
pushf
cs
sub
add
xor
mov
into
or
cmpsl
add
jnp
mov
sub
jecxz
ret
sbb
movsb
rcrl
mov
lahf
daa
mov
mov
ljmp
add
stos
xchg
pop
dec
into
cmpsl
ljmp
sub
mov
fs
cmp
ss
fimull
fcoml
dec
rorb
outsl
inc
sbb
pop
push
inc
lds
inc
das
mov
adc
imul
cli
pop
jnp
fcompl
jecxz
rorl
adc
loopne
pop
cmpsb
add
push
or
pop
mov
mov
mov
cmpsb
mov
jbe
in
cmpsb
xor
in
adc
and
cli
sti
sti
mov
mov
outsl
push
xchg
add
push
cs
iret
bound
inc
hlt
mov
cld
js
pusha
insl
mov
mov
leave
lea
cltd
sbb
dec
lahf
lock
ja
out
clc
push
jle
mov
sti
test
mov
and
jno
stos
pop
dec
mov
sahf
push
dec
and
aad
out
mov
push
push
push
dec
mov
mov
pop
pop
sub
push
repz
inc
mov
dec
mov
xchg
xchg
mov
das
es
pop
mov
in
push
int3
popf
scas
rorb
mov
lret
mov
pop
clc
pop
mov
cmp
sub
hlt
xor
push
stos
xchg
jmp
cs
ss
loop
jg
icebp
and
and
icebp
scas
into
push
dec
cmp
adc
mov
aam
call
or
sti
psubsw
fcmovb
mov
inc
mov
fiadds
test
ja
int3
repz
dec
out
flds
fidivs
jmp
ret
pop
inc
ficompl
jmp
cmp
fwait
cmp
in
add
clc
les
ret
push
mov
insb
aad
je
cmp
cmpl
imul
fs
inc
cmc
xor
movsb
lahf
fwait
push
test
inc
loopne
push
fbld
faddl
outsb
push
xchg
jb
xor
pop
call
test
fmull
mov
movb
xor
pop
lcall
adc
pop
sti
in
loop
pushf
inc
in
jb
jb
inc
inc
add
mulb
xchg
test
lcall
sub
stos
les
sbb
sbb
mov
cmpsb
clc
and
lods
mov
ljmp
xchg
lret
mov
xchg
inc
scas
pushf
xchg
roll
out
jno
lea
xchg
and
jns
sti
in
lods
loope
inc
call
add
and
inc
push
xor
mov
arpl
sarl
push
sub
dec
lahf
dec
fnstcw
imull
cmp
push
jae
add
fcoml
lret
push
pop
sub
pop
in
sub
cmc
imul
in
xor
push
jno
dec
cmpsl
scas
movsb
stos
inc
jns
out
out
mov
loope
push
mov
lock
xchg
fwait
lock
idivl
push
jge
fidivs
orl
and
mov
inc
test
mov
mov
cs
jge
adc
push
mov
hlt
mov
out
rcrb
or
adc
dec
jg
movsb
std
ret
jge
mov
adc
sbb
and
and
jecxz
into
pop
sbb
pop
push
scas
xor
insl
ret
and
pop
ja
popf
outsl
dec
jns
sub
xchg
inc
cmc
pop
mov
fidivrs
jo
in
mov
jbe
cltd
xor
out
jmp
xchg
jp
fwait
out
pop
mov
jb
or
xchg
clc
je
test
sbb
jnp
add
sub
xchg
xlat
push
rep
scas
loop
push
shll
push
fprem
jns
js
sub
sub
or
sub
lea
sbb
jmp
outsl
aad
imul
jp
adc
mov
lods
loope
xchg
loope
cld
rorl
inc
pusha
shll
push
cli
fwait
jne
or
mov
jnp
or
aas
xchg
dec
xchg
outsb
int
cmpsb
mov
sbb
inc
xchg
ret
dec
out
xor
mov
filds
imull
mov
sub
and
push
push
dec
sbb
fsubrs
cmp
test
sbb
arpl
push
dec
fimull
rclb
pop
vmovntdq
and
sub
xchg
pop
and
sbb
popf
cmp
push
mov
add
add
fsubp
jecxz,pn
adc
xor
loop
lahf
lcall
push
jnp
mov
xchg
int3
cli
mov
xchg
mov
add
push
dec
inc
push
pop
pop
push
dec
cmp
or
popf
add
xchg
add
daa
jae
push
stos
cmp
lock
xor
dec
aad
test
int3
loope
scas
shll
cli
xor
pop
mov
in
rcr
xchg
fistpll
shlb
push
xchg
cmp
call
mov
and
dec
in
mov
in
daa
dec
in
cld
sahf
pop
mov
adc
aas
inc
inc
mov
repnz
adcb
call
cmp
out
movsl
es
xlat
jp
dec
inc
ret
out
ljmp
call
inc
mov
jmp
mov
ror
outsl
push
hlt
pop
insl
in
shlb
push
call
imul
ds
xlat
lods
jo
ss
lret
lods
cmp
dec
sub
cmp
sub
fwait
pop
fst
cwtl
adc
cli
sub
aad
sbb
xor
or
sub
dec
jbe
add
in
popf
cmp
push
mov
je
lret
pop
lahf
popf
mov
pop
mov
imulb
in
sub
mov
ret
mov
aam
imul
inc
hlt
fildl
mov
stos
or
pop
sbb
mov
mov
subl
pop
stc
xchg
pop
xchg
enter
mov
or
je
sub
jmp
addl
lcall
ljmp
mull
jns
outsb
push
mov
fcmovnu
mov
jmp
sub
bound
mov
cmp
jg
adc
in
pop
mov
pop
mov
jno
mov
xchg
push
push
pop
in
out
mov
js
jb
dec
addr16
fdivrs
movsl
cmpsb
adc
stos
hlt
mov
fdivrp
jne
rcll
lcall
movlps
testl
lods
or
pop
push
dec
mov
cmpsl
pop
aam
in
sahf
imull
inc
cmc
fsubrl
mov
push
and
pushf
add
sub
popf
cmpsl
mov
dec
pop
icebp
pop
xchg
add
cmp
mov
dec
fmul
fwait
sbb
add
test
jns
fsub
mov
int
rcl
cltd
push
xchg
sub
pop
inc
loopne
int3
cmp
jle
and
ret
lds
pushf
nop
sub
jb
lods
arpl
inc
jo
xor
cmp
sub
inc
and
into
sub
xchg
mov
sbbb
push
in
in
aas
add
in
loop
mov
andb
push
bound
stos
push
popf
pop
loope
mov
jbe
bound
sub
enter
and
addr16
add
xchg
and
pop
test
push
sub
jp
inc
or
sbb
xlat
pop
jl
aad
sub
lods
ficoml
cmp
movsb
add
or
and
xchg
inc
fs
cmp
sbb
fisubl
lahf
inc
adc
jl
dec
xchg
adc
and
nop
jno
mov
mov
push
and
ljmp
mov
loop
adc
push
gs
test
pop
mov
add
xlat
ljmp
or
jns
inc
or
mov
movsl
adc
fwait
sti
dec
cmp
imul
lahf
xchg
inc
fwait
sahf
pop
cmp
clc
jb
out
mov
lods
imul
xor
xchg
dec
sub
enter
inc
imul
mov
sub
mov
or
inc
sbb
out
test
dec
pop
mov
lods
xchg
xchg
inc
std
stos
lret
adc
loopne
mov
loope
stc
loopne
jbe
leave
sub
add
mov
dec
cwtl
mov
jle
fwait
push
dec
andl
cmp
loope
mov
repnz
cmpsl
lret
inc
sbb
iret
out
in
mov
loope
or
sbbl
or
dec
pop
xchg
push
fwait
inc
outsl
add
cmp
xor
pop
out
push
stos
sbb
aad
mov
lods
dec
pop
mov
cltd
adc
ljmp
adc
fdivrp
dec
hlt
sub
sub
inc
out
dec
xor
xor
push
xchg
fisttpl
scas
stos
decl
push
pop
pop
pop
adc
jns
test
cmpb
jle
nop
fcmovbe
test
pop
fdivp
icebp
mov
mov
inc
or
repz
push
jbe
and
sbb
mov
cmp
sbb
decl
cmp
loope
pop
and
aam
pop
imul
push
add
jb
sbb
repz
cli
icebp
fistps
jge
out
imul
jne
cmp
xor
inc
bound
cmp
test
gs
xchg
pop
out
js
dec
push
rorl
xchg
fisubs
adc
mov
dec
stc
cwtl
mov
inc
aam
popl
in
out
cld
add
and
into
add
xor
dec
inc
add
mov
in
dec
push
out
scas
xchg
les
mov
mov
cmc
jns
jno
xor
clc
jle
xor
mov
ds
jae
mov
movsl
mov
bound
xor
and
test
sbb
mov
loopne
xlat
ja
gs
push
mov
xchg
lahf
push
aam
mov
and
sbb
fists
pop
push
hlt
push
lret
fcmovnu
mov
js
hlt
dec
je
xchg
sub
aad
test
lret
sbb
insl
jge
push
int3
pop
dec
in
dec
aam
or
testb
call
mov
popa
ss
cmc
out
and
adc
in
cld
fisubrs
test
dec
add
scas
sti
fisubrs
push
out
faddl
and
sub
negb
outsb
mov
add
dec
inc
dec
push
pop
pop
push
inc
cmp
sti
je
add
xchg
add
clc
mov
int
xor
mov
and
mov
fidivl
and
sahf
mov
mov
fcmovbe
mov
iret
out
adc
sbb
je
sub
dec
leave
shl
xor
xorl
in
cli
icebp
mov
fadd
xchg
out
mov
bound
mov
pop
repz
mov
mov
ret
xchg
cmp
push
insl
cmp
mov
dec
jp
jp
rcll
add
shrl
jo
or
insl
cld
leave
loop
push
fildll
enter
aam
mov
lret
pushf
cs
and
iret
and
sub
rolb
mov
pushf
dec
push
cli
test
out
dec
inc
addr16
iret
cmp
push
mov
jg
lret
sub
insb
pusha
cmp
xchg
and
mov
mov
cmp
pop
mov
lret
aaa
push
loopne
push
nop
movb
jne
xchg
jne
adc
xchg
adc
inc
push
rcll
lods
sarl
xchg
add
imul
xchg
imul
cwtl
sbb
sahf
lea
pushf
shrl
test
push
jbe
push
push
jae
lods
fidivl
cmp
mov
jno
iret
adcb
sahf
sahf
or
js
out
xchg
sbb
add
shr
movl
add
les
cmp
fidivl
mov
cmpsb
outsl
or
out
push
push
cmp
fsubs
mov
jns
jne,pn
mov
ret
out
stos
push
jecxz
push
in
adc
or
mov
dec
lods
insb
or
push
mov
mov
scas
mov
rcrb
mov
pop
or
adc
or
int
push
add
xor
je
mov
in
dec
dec
std
sti
cmp
mov
mov
lret
cmpsl
shll
faddp
nop
push
xor
sbb
orb
jbe
cmp
rolb
arpl
adc
out
mov
pop
fdivs
mov
sub
add
push
loopne
aaa
scas
push
inc
out
pop
fstl
cmpsl
sub
jle
rcrb
dec
lods
fwait
iret
pop
call
movsl
ret
xchg
adc
xchg
and
popa
xchg
and
cmp
add
push
insl
cli
mov
pop
push
mov
push
dec
inc
sbb
mov
gs
test
xchg
or
inc
xchg
xchg
scas
inc
in
push
fcmove
adc
jg
sub
push
lcall
in
cli
ds
mov
data16
fdivr
rcrl
jle
stos
scas
xor
xchg
xchg
rol
mov
xchg
xchg
lea
or
adc
test
add
xchg
or
and
pop
cld
lret
mov
push
loop
cli
adc
sub
xor
adc
or
push
push
sbb
jne
cmpb
adc
insl
adc
scas
cli
not
decl
mov
jge
divl
pop
and
add
inc
repz
xor
xchg
mov
or
dec
pop
test
test
mov
jmp
clc
cmp
lahf
mov
sbb
push
dec
cmp
shrb
fldt
ja
stos
fisttps
ja
push
ljmp
ret
xchg
push
push
pop
jmp
mov
in
repz
sbb
mov
sti
repnz
cltd
jnp
in
adc
sbb
push
adc
lea
out
lods
cmp
movsb
mov
cwtl
sbb
jno
mov
leave
lods
and
xchg
jg
pop
dec
sub
xor
add
cs
pop
xor
and
stos
push
inc
cmc
push
jmp
cmp
lahf
daa
int3
sbbb
subb
mov
pushl
dec
cmpsb
fists
repz
jl
fs
mov
pop
int3
dec
push
mov
sbb
test
cli
cmp
stos
inc
pop
mov
xchg
mov
repz
fsubl
mov
fldl
xchg
stc
ss
lahf
ss
and
add
mov
jbe
adc
test
aas
add
cmp
sbb
jg
push
imul
and
jmp
add
out
popa
shrl
out
outsl
push
repz
push
das
push
xor
mov
jbe
sbb
dec
mov
jp
ret
inc
mov
test
mov
add
sub
outsb
add
or
lret
aaa
test
ljmp
mov
jno
inc
xor
jo
push
cmpb
scas
lea
mov
cld
pop
adc
mov
enter
sarb
push
inc
cmp
idiv
inc
and
sub
das
cmpsl
add
dec
call
cmpsb
das
add
jg
addr16
lods
pop
mov
cli
sbb
addr16
push
push
stos
add
cmpsb
rcrb
inc
cmpsl
sub
cmpb
jecxz
sbb
cmp
je
gs
jae
cs
xor
addl
mov
xchg
das
adc
or
jns
adc
xor
lret
in
pop
inc
mov
out
mov
mov
inc
mov
popa
hlt
aam
stos
rcl
inc
mov
cmp
and
out
or
test
lds
sbb
and
scas
add
dec
adc
outsl
int3
push
cmp
mov
jno
adc
aas
enter
xor
add
cmpsl
icebp
cld
dec
adc
jns
push
js
mov
test
mov
jae
mov
test
sbb
xlat
sbbb
fstpt
hlt
mov
push
pop
jno
jns
movsb
mov
gs
dec
daa
mov
popf
mov
inc
jg
adc
or
cmp
pop
sub
lods
pop
inc
push
dec
lahf
or
fcompl
add
push
enter
or
cmp
pop
pop
pop
pop
push
dec
mov
mov
push
add
subb
gs
inc
jg
addb
and
mov
imul
mov
adc
push
adc
cs
orl
test
cmp
daa
rclb
add
and
iret
pusha
mov
movl
cld
pop
jge
subl
out
loopne
push
into
in
push
push
iret
sti
xlat
fisubs
adc
rorl
xchg
rcrl
mov
aas
pop
sub
stos
aas
xor
xor
and
sbb
in
in
dec
popf
xchg
rcll
popf
push
adc
mov
sbb
and
push
fidivrs
add
sbb
and
imul
scas
push
sbb
test
push
cwtl
adc
pop
into
push
jmp
call
popa
mov
jg
cmp
iret
rclb
int
cmp
in
sbb
or
or
stc
or
lcall
mov
push
mov
lods
lods
mov
adc
imul
gs
cltd
and
jbe
push
push
push
in
icebp
dec
push
push
jno
mov
iret
add
sub
cwtl
ret
fcoms
mov
and
cwtl
sbb
cmp
mov
call
mov
xchg
push
sbb
gs
or
xor
ljmp
fldenv
stos
xor
push
mov
cltd
jb
nop
lods
pcmpgtd
xchg
mov
dec
cmp
pop
sbb
adc
fildl
add
pop
xchg
pop
or
sbb
sub
cmp
cmp
adcb
mov
mov
adc
inc
jle
jno
push
mov
incb
jp
jnp
icebp
call
cmp
icebp
icebp
mov
cmp
addr16
jae
sbb
push
cmp
test
idivl
rol
pop
testl
xor
sub
imul
cmpsl
sub
add
enter
mov
mov
push
xor
inc
pop
inc
or
cli
mov
or
and
mov
sub
cmp
mov
xor
ret
xor
repnz
lds
scas
add
lods
cli
frstor
call
sbb
or
mov
js
cmp
mov
jge
mov
push
dec
and
jg
push
stc
addl
or
iret
or
and
gs
in
les
imul
sbb
lahf
stc
mov
iret
lds
mov
loopne
mov
imul
aaa
jno
jbe
sti
sbb
pop
inc
cmpsl
push
and
mov
outsl
fidivl
insb
inc
xchg
lret
jo
jns
jge
cld
call
test
testl
xchg
in
les
xorl
outsb
sarb
add
testl
repnz
ret
mov
sub
ret
in
cmp
pop
lcall
mov
loopne
mov
inc
pop
roll
add
mov
jge
pop
roll
lods
dec
les
aad
push
push
xor
or
xchg
dec
std
cmp
xchg
push
aam
test
cld
xchg
pushf
fcmovbe
xor
cmpsl
mov
fldcw
jle
push
and
aas
jne
outsb
sbb
xor
rolb
add
loopne
mov
inc
push
add
lea
insb
mov
adcb
loope
inc
lcall
push
or
mov
mov
lret
mov
push
aad
int3
cmp
pop
jno
mov
loopne
popf
vshufps
inc
movsb
in
rorb
and
ret
enter
mov
jo
ss
cmpb
fmuls
sbb
mov
sbb
dec
mov
and
cli
orb
xchg
loop
push
popa
pop
inc
push
stos
shrl
push
pop
sahf
mov
sbb
cmpsb
faddl
nop
push
lock
and
aam
addb
fwait
push
je
clc
jns
fstps
jp
pop
and
mov
jmp
pop
sub
fidivrl
fdivrl
aam
inc
xor
xchg
push
xchg
call
add
rcr
add
sarb
popf
xchg
or
movsl
loop
ror
inc
stc
adc
xchg
lods
xchg
mov
mov
pcmpgtd
xor
mov
push
imul
and
adc
insb
mov
dec
mov
xchg
or
sbb
xchg
daa
test
add
push
int
xchg
jbe
fldenv
add
lds
jne
mov
push
idiv
call
sub
dec
mov
lcall
fidivrs
push
mov
sub
or
push
mov
loope
int
ljmp
cwtl
xchg
adc
or
mov
or
dec
sbb
add
in
mov
jg
fcmove
test
lcall
lea
jae
mull
std
js
sub
repz
xchg
xorl
xlat
pop
mov
sbb
mov
enter
in
scas
xor
adc
aam
dec
add
push
inc
aaa
loope
rolw
xchg
loop
mov
sti
aaa
out
push
loope
lock
rcrb
push
lret
pusha
jae
mov
mov
gs
jnp
mov
jl
test
mov
inc
adc
jl
jge
pop
shl
add
push
stos
xorb
divl
out
fmul
andl
cltd
stos
nop
pop
mov
pop
lods
xchg
jge
dec
cwtl
shl
and
xor
mov
xchg
mov
dec
xor
in
cmp
pop
js
cli
pop
xlat
dec
test
std
es
aas
mov
imul
sub
xor
fwait
movsl
and
int3
test
mov
add
inc
push
inc
push
push
push
outsl
pop
mov
xor
xchg
add
and
push
lret
mov
in
or
adc
das
dec
mov
mov
sbb
lock
test
gs
pop
mov
cwtl
ret
mov
xor
insl
mov
mov
aam
js
icebp
mov
push
push
popa
movsb
stos
lds
lcall
lret
mov
insl
add
add
mov
int3
mov
mov
lods
or
popa
je
lods
sub
inc
xor
cmp
imul
jg
ss
orl
frstor
ret
lock
cltd
jae
loope
out
fdivrl
aaa
xchg
push
stos
test
pop
imulb
mov
jmp
mov
aas
push
push
xor
jne
ljmp
mov
mov
or
pop
out
xchg
enter
add
fistpll
jnp
or
notb
cmp
out
cmp
cmp
pop
imul
mov
pop
fwait
int3
insb
dec
xor
cs
inc
outsl
divb
jns
xor
std
inc
push
or
insl
mov
mov
jp
jg
jle
cs
xchg
inc
in
pop
cmp
mov
sbb
jo
insl
push
dec
mov
xor
outsb
xchg
dec
dec
adc
negb
ljmp
iret
clc
das
test
les
mov
fists
and
add
cli
out
imulb
push
cmc
pop
scas
std
fsubrp
je
fidivl
out
pop
aas
cmp
add
loop
lahf
lods
mov
mov
repnz
js
incl
jo
mov
jae
adc
or
pushf
push
ficoml
mov
lret
push
mov
andl
outsl
out
bound
push
dec
xchg
gs
add
js
mov
mov
mov
jae
lods
lcall
lret
ja
enterw
inc
mov
jae
rorl
jmp
cmc
filds
or
mov
push
jns
imul
test
pop
inc
int
lds
cli
popf
and
pop
cwtl
lods
lds
outsb
test
out
outsb
daa
dec
jne
fisubl
push
sbb
lcall
jb
push
je
fisttps
mov
dec
iret
xchg
mov
mov
cmpsb
push
mov
fwait
push
and
seto
mov
je
pop
test
mov
or
enter
lea
pushf
imul
jns
mov
and
orl
pop
mov
inc
or
and
push
pop
std
mov
mov
movsb
sub
fucomi
mov
xchg
push
or
push
enter
push
xchg
adc
test
inc
sub
mov
rcr
adc
ss
jnp
xchg
cmp
push
test
aad
xor
data16
ret
loopne
cmp
test
js
sti
inc
mov
sbb
or
jecxz
push
dec
in
mov
iret
push
push
xchg
popf
sbb
jnp
and
inc
lods
movsl
add
sbb
mov
aad
idiv
dec
jmp
pop
fidivl
sub
cmp
sub
jmp
dec
mov
xchg
sbb
stc
aas
cltd
dec
adc
sub
rclb
subl
ss
lret
pop
jne
add
cmc
sub
sbb
mov
fisubs
dec
and
in
jl
ficomps
add
adc
sbb
cmp
sarl
rol
sub
dec
inc
hlt
jmp
jmp
bound
rclb
push
insl
adcl
cmp
scas
movsb
mov
clc
lods
stos
out
mov
in
push
xchg
mov
addl
into
push
fwait
out
xlat
outsl
xor
pop
jmp
push
sbb
cs
nop
or
xchg
or
repnz
jnp
lock
mov
sbb
cmpsb
xor
sub
fnstsw
shl
xor
cmp
sbb
lcall
cmp
cmpl
cmc
xor
push
dec
xor
aam
cmc
repnz
dec
dec
push
cmc
inc
fistps
xor
inc
and
jle
xchg
sub
push
fsubrs
lcall
push
mov
push
mov
and
add
in
xchg
inc
jmp
popf
jne
pop
out
ss
cmpl
jmp
lea
loopne
push
sbb
cmc
aad
shlb
int
pop
lret
xor
sbb
sub
adc
movl
jl
gs
ljmp
dec
sub
rcr
mov
cmpsb
gs
mov
repnz
push
leave
vrcpss
aas
inc
sub
out
outsb
xor
pop
push
repnz
cmp
mov
push
cli
je
insl
ss
cmp
push
cmp
lods
stos
sbb
pop
je
hlt
dec
or
sub
mov
inc
and
scas
mov
xchg
add
sahf
adc
mov
cmp
aad
mov
inc
adc
popf
lcall
je
push
fwait
cli
push
fisubrs
or
jae
and
mov
ss
popa
add
mov
add
pop
dec
in
mov
aas
aam
inc
jae
xchg
pop
sbb
scas
mov
cwtl
loop
cld
cmp
inc
xchg
lea
xlat
sub
mov
jp,pn
xchg
rcl
sbb
sahf
lea
iret
cmp
mov
cmp
shlb
call
mov
push
repnz
pop
gs
xlat
and
je
add
dec
push
push
dec
pop
dec
pop
push
stos
mov
stc
pop
popa
fnstsw
mov
add
xlat
push
pushf
sahf
lock
int3
mov
ljmp
xor
adc
or
pusha
movsb
dec
jp
lret
cld
sub
sub
adc
loopne
jae
xchg
das
divb
stc
push
bound
cmpsl
or
jmp
dec
cmpb
mov
add
cmp
mov
mov
jmp
outsl
loop
cmp
movsb
mov
sbb
pusha
sbb
repnz
scas
icebp
ljmp
adc
inc
sbb
out
les
rcrl
push
and
mov
call
aam
fimull
mov
mov
sar
ja
dec
mov
or
pushf
cmp
pop
push
sub
xor
pushf
push
mov
adc
call
jb
lock
loop
orb
or
xor
xchg
imul
in
add
cmc
jno
inc
xor
pop
mov
add
movsb
test
cmp
add
push
stos
adcb
lods
push
idivb
push
subb
je
fwait
or
and
cmp
inc
loope
add
mov
inc
stc
xchg
shll
int3
dec
test
insb
mov
jecxz
xchg
outsb
xlat
test
sti
inc
jmp
negb
and
mov
and
aas
cs
test
and
push
rcr
mul
mov
mov
mov
jo
jno
jnp
movsb
lret
stos
push
es
es
or
xchg
xchg
hlt
and
inc
mov
aaa
sbb
lret
cld
repz
rcrl
mov
aad
and
ja
int
adc
fdivs
xchg
stc
scas
inc
icebp
outsl
adc
lock
jae
je
inc
cmpsl
es
inc
jecxz
mov
pop
xchg
sub
into
xchg
fdivs
pop
dec
in
jp
cmp
lcall
mov
dec
nop
jnp
xchg
push
mov
inc
pushf
repz
jns
into
lret
mov
cmp
dec
inc
add
test
leave
call
sub
stos
xor
inc
arpl
cmp
stos
testl
shrb
pop
or
neg
inc
sbb
mov
pushf
ja
pop
lods
popa
les
mov
fcmovnbe
or
in
jmp
movzwl
pop
dec
mov
inc
pushf
and
xchg
pop
sahf
and
and
cli
aam
push
dec
bound
mov
faddp
and
lds
jb
adc
fildl
adc
out
ljmp
std
push
enter
pop
std
xor
insb
stos
pop
outsb
pop
repz
mov
repnz
movsl
ljmp
mov
mov
and
stos
dec
shl
sub
or
ficoms
repz
outsl
cmp
pop
popl
add
jp
iret
xorb
xchg
shrb
sahf
jns
mov
xor
lods
jne
sbb
es
mov
loopne
mov
mov
jmp
and
icebp
jbe
test
sbb
sub
mov
xor
stos
test
jo
add
fwait
jl
js
cmpsl
xchg
ficompl
popa
fistpl
pop
insl
cwtl
mov
push
push
ret
push
cmpsl
daa
push
pop
sub
jo
mov
idivl
and
inc
jle
mov
addl
mov
mov
inc
push
or
test
push
pop
dec
or
dec
sbb
sbb
dec
adc
rorb
addr16
bound
xchg
jno
adc
test
add
cmp
out
mov
jecxz
adc
aad
insl
mov
cli
pop
aas
cmp
ja
iret
pop
xor
ret
push
and
imul
jg
mov
mov
lret
in
subb
call
shlb
loopne
bound
jecxz
int3
repnz
xchg
and
stos
arpl
ja
adc
push
xor
insl
outsb
movb
and
sub
pop
or
add
ja
lds
or
imul
sti
pushf
push
adc
adc
and
into
or
fistpll
or
fimuls
or
mov
and
push
mov
add
lea
push
lahf
xor
pop
or
in
and
rcll
mov
adc
sub
addr16
pop
mov
cmpb
jnp
lret
fiaddl
leave
cmpsl
ds
push
fst
adcb
lock
hlt
in
add
jns
pop
lods
inc
xchg
loop
or
test
decl
mov
lret
mov
sub
into
arpl
sub
mov
sahf
adc
jle
xchg
in
mov
fsubrs
pop
inc
call
stos
outsl
adc
xchg
hlt
lds
xor
fldt
lods
add
or
popa
mov
mov
push
or
xchg
movaps
adc
cwtl
cwtl
pusha
aas
out
idiv
cmp
mov
inc
mov
add
sbb
inc
ja
xchg
cmpsb
int3
repz
roll
xor
jle
xchg
sti
cmp
and
scas
in
imul
pop
movsl
test
sub
insl
add
xchg
addr16
mov
sar
pushf
pop
daa
pop
rorl
mov
pusha
sbb
mov
cltd
out
inc
and
lock
sahf
pop
mov
enter
clc
iret
xor
mov
aaa
lea
arpl
and
inc
sbb
push
sub
and
sbb
daa
ja
aam
mov
add
lahf
lret
add
add
fnstsw
xchg
or
jns
inc
dec
push
add
adc
adc
shll
dec
push
sahf
push
mov
pop
and
and
and
sti
subb
scas
pop
jecxz,pt
add
aaa
dec
and
jge
inc
add
push
dec
dec
push
pop
push
pop
dec
idivb
jns
pop
mov
xchg
add
test
int3
pop
insl
xchg
call
jg
scas
cmp
bound
jb
pushf
mov
jp
es
addr16
and
cmpb
int
push
jg
enter
outsl
cmpsl
pop
orb
aas
cmp
jb
scas
push
inc
fcmovb
lahf
jnp
repnz
xor
notb
movsb
insb
and
and
into
inc
lcall
shrb
inc
xor
and
icebp
and
mov
jb
dec
out
push
dec
outsb
mov
jge
popa
cmpsb
in
andb
adc
or
fwait
outsb
dec
mov
lahf
jg
push
adc
fistpll
addr16
loopne
cmp
mov
push
xor
push
inc
jae
leave
mov
mov
inc
addr16
add
cld
mov
pop
mov
popa
adc
add
inc
stos
mov
push
leave
repnz
cmp
push
sub
out
les
dec
int
movsl
cmp
inc
push
int
cs
icebp
sub
jne
arpl
popf
out
loop
hlt
addb
sahf
test
mov
and
xchg
mov
xor
push
jo
scas
pop
add
add
xor
scas
mov
pusha
arpl
adc
dec
sub
add
xchg
jp
divb
cmc
inc
pop
add
cmpsb
loopne
mov
mov
mov
pop
fldz
aad
jne
adc
incb
mov
xor
jmp
xlat
and
cmp
mov
ret
adc
inc
inc
into
adc
leave
inc
cmpsl
dec
in
test
movsb
push
scas
jge
jmp
cmpb
mov
xchg
add
push
push
enter
rolb
loopne
sar
push
sub
out
sbb
cmp
dec
mov
ret
sub
into
mov
iret
pop
mov
add
imul
pop
cmp
adc
xchg
pop
test
pop
sub
add
xor
movsl
fisubrs
flds
push
loop
cli
fwait
mov
or
mov
arpl
add
test
push
xchg
cltd
xchg
pop
test
test
inc
pop
jp
dec
ret
xor
movsl
icebp
notb
test
popa
in
int
push
orb
sub
mov
mov
das
movsb
push
xchg
shll
push
cli
push
jmp
and
pushf
pusha
aam
mov
push
insl
and
add
jl
dec
pusha
push
mov
cwtl
cs
adc
mov
lea
jb
aas
movsb
arpl
xor
jnp
insl
sub
jne
add
in
imul
mov
xchg
pop
mov
lds
xchg
and
dec
mov
mov
and
push
jecxz
adc
and
dec
and
mov
into
mov
lret
mov
and
jmp
lret
xor
jmp
faddl
mov
ja
jmp
mov
sbb
push
adc
add
jne
add
inc
js
cs
loope
dec
fadds
in
cwtl
push
xor
cmp
and
pop
arpl
xor
pop
testb
cld
leave
pusha
out
clc
xlat
pusha
test
mov
fbld
out
push
mov
shll
aaa
mov
dec
test
inc
pushf
outsb
adc
mov
faddp
push
js
jmp
lods
mov
mov
dec
adc
mov
aam
add
jle
and
push
cwtl
js,pn
shr
adc
pop
fcmovbe
mov
sbb
mov
jae
jbe
pushf
aam
ret
les
jecxz
cmpl
into
lret
pusha
lret
movsl
cmp
jo
arpl
popf
in
adc
or
cmpsb
xchg
sbb
mov
mov
or
ljmp
push
lcall
mov
xchg
jno
lods
inc
sub
mov
rcr
dec
mov
inc
add
mov
fs
fsub
xchg
xchg
mov
cwtl
loope
aaa
dec
sbb
sbb
notb
cs
xchg
jae
xor
jp
xor
movsb
ljmp
int3
sbb
mov
sahf
xchg
sbb
negl
push
outsl
pop
jp
or
insb
jle
lods
xor
shrb
sahf
das
inc
mov
out
lahf
call
mov
mov
les
popa
jb
ret
lahf
xor
sbbl
shrl
pop
jmp
loope
pop
mov
int
push
scas
or
or
outsb
test
repnz
arpl
xor
ljmp
push
pop
push
js
sub
xchg
mov
mov
inc
sarl
aad
fcoms
mov
clc
pop
sbb
repnz
mov
shl
mov
es
cmp
and
sub
fcmove
mov
cmp
pop
mov
lods
cltd
das
sbb
adc
stos
sub
mov
xor
cmp
xchg
jecxz
js
adc
sahf
mov
inc
je
xchg
push
mov
jnp
movsb
addb
dec
mov
jnp
loope
push
mov
stos
leave
cld
fwait
imul
movsl
mov
mov
fcmovnu
popa
ljmp
xor
fs
dec
shll
pop
fisubl
std
int
mov
and
das
enter
jno
shrb
in
fsubrl
add
dec
sahf
push
and
enter
xlat
fldenv
dec
xchg
mov
cmp
rclb
bnd
mov
mov
mov
std
mov
cmpsl
xchg
in
push
jbe,pt
cltd
scas
shlb
lds
sarb
lahf
mov
and
outsl
inc
aas
push
out
ret
ret
adc
add
mov
add
mov
loope
sub
iret
jbe
add
pop
pop
dec
push
dec
push
pop
pop
mov
insb
pop
adc
add
xchg
add
fsts
jns
in
and
mov
lret
dec
ja
xchg
xchg
imul
adc
in
pop
testb
mov
xorb
cltd
mov
mov
test
push
out
mov
mov
adc
inc
out
fstl
outsl
shr
adc
fisubrs
pop
dec
pcmpeqb
notb
sarl
lock
ljmp
outsl
mov
aad
mov
or
stos
xchg
sbb
lret
pop
data16
mov
mov
pop
subl
dec
and
push
mov
xor
dec
insl
dec
sti
dec
sub
arpl
cmpsb
ret
sub
rcrb
dec
out
dec
and
adc
das
xchg
les
sahf
jmp
std
icebp
cltd
mov
jae
inc
repz
mov
dec
cli
push
movsl
pushf
sbb
cmp
ljmp
cmpl
pop
mov
and
jecxz
pusha
pop
imul
subl
or
mov
out
push
dec
xor
add
mov
cmpl
sti
outsl
mov
pop
adc
mov
jns
sahf
in
ss
pusha
xchg
mov
push
xor
pop
push
das
in
fwait
mov
xor
insl
push
mov
dec
fdivl
xor
jmp
rol
sub
mov
test
push
xchg
les
and
mov
hlt
ss
syscall
xor
add
xchg
xor
adc
out
cwtl
in
movsb
sbb
insl
pop
ss
fsub
push
std
filds
dec
adc
pop
aas
movsb
push
in
mov
flds
adc
add
ret
sti
lahf
xlat
or
add
pushf
or
jp
xor
sarl
outsl
or
or
in
lods
mov
push
mov
inc
fucom
mov
lds
hlt
sub
xchg
cmp
jecxz
repz
sbb
decb
not
and
scas
xor
push
inc
and
xchg
das
mov
cmp
test
jae
int
leave
in
rclb
fisubrs
cmp
idivb
push
les
jecxz,pn
xchg
dec
add
xchg
mov
push
push
fs
jbe
xchg
out
icebp
imul
inc
data16
jbe
push
mov
ss
push
adc
mov
mov
outsb
insl
vmptrst
cwtl
jbe,pt
stc
or
lahf
dec
mov
nop
imul
jle
fldt
ds
test
cmpb
mov
jbe
das
sub
loop
cltd
aaa
fsubr
rcll
icebp
into
sbb
xlat
movsl
mov
popf
mov
testb
idivb
xchg
jbe
push
mov
push
or
es
dec
sbb
add
jo
mov
sub
fsubs
xchg
xchg
mov
ds
cmp
cli
jp
xchg
in
lods
push
fimull
xchg
sbb
inc
push
leave
add
call
pop
pop
inc
lret
push
dec
mov
mov
fildl
xchg
mov
sub
notl
or
and
dec
cs
sub
jne
xor
xor
out
push
cld
lods
mov
cmp
jp
rol
add
push
sub
push
mulb
mov
das
cld
lret
ffreep
ljmp
xchg
enter
dec
sbb
mov
xacquire
cld
and
ja
call
mov
negl
xor
test
in
int3
mov
push
or
jns
aaa
inc
mov
outsb
adc
push
es
in
shrl
inc
les
xchg
mov
out
rol
sub
xor
adc
jge
enter
push
jnp
xor
adc
pop
xor
in
rclb
cmc
stos
xchg
push
mov
rclb
decl
dec
adc
into
mov
jnp
rcrb
push
outsl
rcl
dec
sub
rorl
jle
sbb
outsl
fstpl
loopne
sbb
pushf
fs
add
hlt
fstl
sbb
cmp
sarl
sbb
sub
inc
loop
loopne
aaa
sub
imul
jno
mov
loopne
mov
ljmp
call
mov
mov
push
or
rcr
xor
and
cmp
into
pop
mov
jae
push
popf
dec
mov
lods
inc
sub
pop
ret
imul
add
fbld
fsts
shll
ret
pop
cli
xchg
mov
cltd
movsb
dec
add
test
testl
fbstp
cld
dec
inc
mov
cmp
ret
cmpl
mov
lock
lods
aad
push
mov
andb
xor
ja
hlt
mov
mov
scas
nop
lock
rcrb
and
mov
aam
mov
jge
adc
daa
xchg
xlat
and
or
in
xor
sub
jae
aas
cmp
dec
push
push
and
sub
push
mov
rorl
mov
out
sbb
cmp
icebp
mov
cmp
enter
mov
pop
insl
mov
test
cmpsl
add
add
aaa
into
sar
cmp
outsb
in
mov
jo
mov
push
pop
lcall
stc
cli
xor
ret
jbe
loop
scas
xchg
inc
xor
movsl
inc
imulb
inc
pop
inc
in
sub
push
addr16
fists
adc
sbb
fsubrs
arpl
lods
outsb
cltd
into
arpl
jle
mov
xlat
outsl
call
mov
push
cli
es
mov
sub
fsubrl
movsl
insl
add
xchg
nop
add
xchg
cmc
mov
xlat
loop
sub
mov
popa
push
add
inc
push
push
push
push
push
inc
push
test
push
xchg
cwtl
lret
add
xchg
add
incb
and
fbstp
orl
mov
pop
adc
jne
stos
inc
cmp
or
xor
inc
fistps
add
pop
push
hlt
ds
fildl
outsl
out
jg
fs
sarb
xor
faddl
imull
xchg
nop
rcrl
push
addr16
mov
fcomp
pop
jo
inc
cmpsl
bound
fwait
js
pop
cld
lret
stc
sahf
lahf
cmp
push
addb
fists
push
loopne
popa
inc
pop
push
pusha
insb
out
adc
cmp
mov
cld
lods
out
insb
mov
mov
jp
cmp
popf
repz
ljmp
sbb
mov
cmp
stc
and
push
vmovsd
dec
ret
mov
inc
leave
loop
sbb
in
mov
test
adc
inc
js
cmp
push
lret
sbb
pop
scas
adc
pop
cltd
or
xchg
fbstp
mov
rcrb
mov
push
and
lret
mov
je
scas
cwtl
sub
clc
inc
sub
mov
add
push
add
xchg
cmp
push
lahf
movsl
xor
xor
sub
mov
jecxz
mov
hlt
jge
bound
cld
pop
pop
insb
mov
lcall
inc
stos
lods
add
mov
mov
or
cs
jbe
addb
movb
aas
ds
lret
ret
jmp
push
sahf
into
xchg
push
pop
cmp
mov
roll
fisttps
jb
dec
sub
cmp
aas
addr16
push
in
cmp
xor
fdivrs
inc
pop
push
and
adc
stos
int3
or
sbb
scas
adc
icebp
push
push
jns
cmc
dec
pop
jno
inc
fbld
sahf
xchg
fst
add
cmove
mov
fs
push
jo
and
ss
cmpsb
idivl
adc
mov
cwtl
test
xchg
test
dec
pop
sbb
shll
int
stc
pop
dec
inc
mov
xor
cmp
mov
pop
aas
std
fdivrl
dec
aaa
jns
cmp
xor
jg
xchg
icebp
xlat
xor
mov
and
or
dec
ret
pushf
icebp
pop
mov
mov
nop
icebp
add
jmp
xor
pop
jns
call
ljmp
in
movsb
xor
push
xor
mov
dec
add
nop
shrl
insl
imul
int3
push
int3
lret
aaa
mov
icebp
call
jne
add
bnd
jl
mov
jg
mov
lret
imul
sbbl
ficomps
sbb
stos
imul
js
stos
pop
das
mov
mov
clc
mov
xlat
rcr
cli
lods
in
mov
jecxz
pop
ret
or
add
mov
jl
int
cmpsl
outsb
popa
cld
loopne
in
push
sbb
loop
int
rorl
mov
sbb
arpl
ljmp
xchg
cmp
push
mov
push
aas
sti
mov
rolb
cmp
outsb
mov
xor
and
repz
cld
mov
mov
shll
je
cmp
push
pop
aam
sub
adc
jb
cmc
jle
push
orb
cmp
jne
jbe
insl
jmp
mov
add
into
in
mov
fs
sbb
mov
clc
or
rcll
mov
inc
fadd
shrl
les
ss
out
cwtl
lcall
sub
push
movsb
fs
bound
repnz
dec
cmc
xor
push
jno
or
fsub
adcl
inc
lock
rorb
aad
fs
jo
push
cmpsb
cmpsb
add
mov
arpl
les
sahf
cmp
mov
rcr
js
xor
loop
lret
outsl
sti
nop
jnp
push
and
cwtl
stos
xchg
xchg
ss
imul
cmp
and
cmp
sarl
inc
das
shll
in
jmp
add
ret
test
pop
cmp
fnstcw
push
sbb
lds
lods
or
into
sahf
into
mov
fistl
mov
dec
sbb
in
adc
adc
imul
sub
and
cmpsl
je
and
movsb
dec
enter
rcr
mov
xchg
call
shrb
outsb
push
cltd
sub
std
jmp
out
pushl
loopne
shr
push
leave
insb
aaa
inc
jnp
ja
loopne
outsb
test
out
shlb
mulb
hlt
pop
out
xor
pop
add
push
jae
push
push
sbb
xchg
loope
cwtl
shr
stos
cli
mov
bound
mov
or
fsubl
arpl
mov
xor
xor
or
mov
sub
out
xchg
mov
loope
dec
nop
sub
inc
mov
pop
sbb
fstp
stos
mov
and
out
jmp
xchg
pop
rcrb
sbbl
pop
sti
push
dec
ja
repz
imul
push
popf
pop
addl
jo
outsl
or
cli
dec
jmp
stc
ret
stc
dec
decl
jno
add
jmp
popl
fwait
add
movaps
cld
js
pop
call
fldl
pushf
test
mov
mov
add
arpl
lods
jmp
icebp
fisubs
insl
push
xor
and
xlat
leave
aam
push
mov
sub
fdivrl
testl
mov
inc
out
sbb
fistl
mov
cmp
pushf
cmpsb
mov
shll
int
scas
mov
sbb
inc
adc
lret
sbb
or
ja
push
mov
sbb
enter
lods
addr16
in
cmp
std
cwtl
adc
push
lods
jl
dec
xlat
xchg
es
ret
and
xor
jp
enter
push
xorl
imul
int3
pop
xchg
filds
aad
and
jns
add
pop
inc
dec
inc
pop
dec
pop
pop
inc
cwtl
inc
loop
xchg
lods
movsb
push
rolb
add
mov
lods
sbb
shlb
xorb
mov
push
inc
push
pop
hlt
mov
lea
leave
add
hlt
aad
stos
lret
in
pop
jae
lcall
call
mov
sbb
aas
lock
mov
jo
call
push
pop
mov
xor
sbb
ja
mov
lcall
or
out
stc
bound
sbb
mov
sub
or
mov
movl
ret
lock
mov
xchg
cltd
addr16
jmp
notb
call
in
lea
push
or
xchg
in
mov
dec
xchg
in
in
pop
rolb
push
add
jg
push
dec
pushf
cmc
push
flds
mov
inc
in
mov
shlb
sbb
cwtl
cmp
das
pop
mov
outsb
fistpl
daa
stc
mov
pop
xchg
push
std
aaa
cld
lods
cmc
mov
inc
push
in
and
mov
jno
jns
clc
loop
and
fisubs
ret
hlt
or
xorb
rcl
mov
jne
ss
mulb
out
mov
stos
push
add
shlb
pop
inc
cld
pop
cmp
cmp
inc
dec
mov
andb
push
ret
stos
cwtl
cmpsb
orl
lea
pushf
sub
push
sub
pop
pusha
mov
fsubs
rcrl
jnp
iret
insl
cmp
pushf
jecxz
lcall
notl
pop
test
test
pusha
arpl
or
addr16
icebp
imul
emms
mov
mov
push
pop
fwait
lods
mov
pop
cmp
jl
lods
movsb
cmpsl
es
xchg
pop
shll
fs
in
iret
cmp
out
loope
sbb
mov
loopne
insb
cmp
fisubs
jno
ret
sar
sub
lret
mov
cld
cmp
es
inc
clc
push
pop
pop
pop
mov
out
mov
jns
lret
cld
test
mov
or
fildl
xor
push
cwtl
fs
mov
dec
jmp
push
leave
gs
imul
cmpsl
aas
inc
cli
int
imul
mov
fisubrs
add
int3
and
loop
jo
mov
inc
icebp
rcll
dec
dec
jle
stos
gs
and
jb
cmp
das
add
cltd
jp
adcl
int3
sub
mov
xchg
sub
cli
or
repnz
jge
add
stc
je
inc
cmp
rolb
lret
or
test
adc
pusha
push
dec
insl
inc
xor
xchg
call
xchg
and
adc
or
jge
sbb
scas
push
movsb
or
sub
sbb
xchg
push
scas
fcoms
xor
ljmp
dec
lahf
xchg
jns
fiaddl
or
std
lret
add
test
cmpsb
imulb
xor
sub
mov
pop
fnsave
dec
sbb
scas
dec
icebp
add
ret
test
outsb
adc
addr16
in
pop
pushf
and
test
insb
mov
sbb
xor
adcb
in
sti
mov
jg
adc
cld
das
roll
repnz
cmp
sub
outsl
adcb
push
call
push
aas
jp
pop
repnz
push
repnz
pusha
lods
pop
test
mov
dec
pop
push
xchg
es
lret
or
mov
das
mov
adc
adc
js
cltd
fdivl
inc
test
adc
idiv
and
jg
in
jo
add
insb
lahf
cmp
adc
jecxz
lret
subl
lds
lcall
xor
mov
outsb
ss
repz
ja
mov
inc
test
ret
xchg
inc
and
inc
xor
ljmp
mov
loop
or
mov
and
mov
imul
cld
stos
mov
and
xlat
mov
enter
scas
rcll
stc
pop
std
mov
sbb
inc
clc
inc
scas
xor
pushf
outsl
jecxz
cmpsl
sti
out
pushfw
and
dec
pushf
mov
sub
mov
insb
fisubrs
leave
dec
push
pop
cmpsl
test
push
lods
popa
fs
dec
dec
out
inc
xchg
pop
fstpt
mov
inc
shrl
xchg
dec
rorl
cmp
inc
idivb
into
pop
sarb
inc
mov
loopne
or
inc
mov
pop
bound
pop
bound
mov
jmp
mov
fisttpl
cltd
arpl
jno
xor
lcall
push
adc
xchg
cmp
es
xchg
jl
adc
ficoml
cld
dec
or
lods
fidivrs
pop
scas
sub
xchg
sbb
add
cltd
orl
pop
scas
fs
loope
ja
das
inc
sti
iret
adc
ljmp
push
jno
lret
mov
test
aas
dec
xchg
and
loop
xchg
xor
movsl
mov
sub
xor
leave
push
adc
in
inc
pop
fisubrl
shr
jecxz
mov
loope
test
jno,pt
xchg
mov
push
mov
sub
ja
js
rol
or
lods
cmp
cmp
fidivs
cmp
xor
jae
cmp
pop
push
test
rorb
jb
and
push
aad
mov
mov
sbb
mov
inc
fs
xor
fwait
pop
jge
in
dec
inc
rorl
push
lret
insl
jbe
adc
jge
sub
xchg
mov
push
into
and
jg
daa
mov
orl
or
movsb
arpl
mov
mov
jns
int3
adc
push
or
cld
outsl
cmp
sub
arpl
scas
jmp
frstor
fisttpll
int3
inc
push
xor
cmp
push
inc
subb
and
fwait
fs
push
inc
push
push
push
push
push
inc
rorl
popf
xlat
mov
jnp
fadds
add
mov
jno
mov
jge
in
stos
std
shrb
inc
ljmp
mov
jno
pop
mov
addb
jnp
lods
inc
push
inc
leave
iret
ds
cmp
jnp
dec
fs
xchg
xor
push
mov
mov
pop
xchg
mov
sub
dec
adc
cmp
mov
ss
mov
rclb
outsb
sub
and
std
leave
and
mov
sub
mov
sub
mov
mov
stos
enter
daa
mov
rep
adc
pop
bound
mov
dec
mov
popf
dec
push
lret
jae
fwait
mov
adc
sbb
movsb
sbb
aam
dec
loop
test
push
lcall
lods
mov
adc
fdivrs
add
xchg
sub
and
push
and
js
les
mov
pop
jge
jnp
push
xor
xchg
xor
cmpsb
das
xor
sbb
cmc
cmc
jne
adcl
dec
xchg
xchg
sbb
aas
cmp
inc
faddl
and
ret
add
loopne
aam
dec
addr16
pop
sbb
adc
jecxz
clc
pop
ss
jb
loope
in
ret
xchg
mov
outsl
cmpsb
dec
loope
mov
xchg
in
cmc
pop
push
js
insb
movsb
pop
les
movsb
jp
out
fimuls
mov
push
shlb
jo
das
lds
xchg
lea
cmp
andb
mov
or
pushf
lcall
sub
mov
or
mov
lcall
and
fisttps
es
add
insl
add
shl
lret
and
sbb
iret
test
fldt
imul
ljmp
mov
out
lock
mov
out
iret
loop
sti
repz
fbld
push
push
pop
sbb
std
or
scas
je
pusha
and
pop
test
adc
mov
mov
inc
ja
ja
cmp
clc
cmc
sub
insl
add
pushf
ret
test
or
dec
js
or
inc
adc
cmpsb
or
loope
fisubs
out
aas
lahf
orl
mov
sub
mull
and
or
push
sti
and
out
mov
sbb
inc
pop
cmc
fadd
jnp
xor
shrl
repz
sbb
mov
outsl
push
pop
movl
imul
pop
xlat
cli
mov
xchg
stc
jle
dec
lods
pop
xor
movsl
int
aam
inc
jno
xchg
pop
lods
popf
add
sti
pop
cltd
aam
sbb
imul
mov
xchg
out
jecxz
dec
daa
insl
je
mov
sbb
fstpt
dec
orl
clc
dec
mov
xchg
push
adcb
add
in
out
arpl
inc
add
cs
out
jbe
in
pop
mov
xchg
sub
sti
push
clc
ja
enter
call
sbb
fistl
punpckhdq
scas
test
push
inc
in
dec
sub
pop
or
and
lret
cmpsl
adcl
inc
push
enter
jb
in
pop
sarb
cltd
push
adc
push
pop
loop
sbb
pop
sbb
sub
mov
sbb
insb
xchg
adc
mov
sti
pushf
xchg
sub
push
jle
test
jecxz
push
adc
push
pop
stos
mov
jle
fdivl
mov
jl
test
push
pop
pop
sti
fsubrl
push
sbb
pop
es
mov
movsl
pop
or
loopne
or
cmp
mov
pusha
inc
adc
out
inc
cld
push
in
mov
lods
dec
push
imul
pop
js
push
pop
popf
jecxz
ret
mov
jnp
sbb
dec
or
xchg
iret
into
gs
sbb
rolb
jle
test
sti
imul
pusha
lret
mov
ds
loop
aaa
out
fnstsw
inc
xor
pop
jb
out
sahf
pop
push
dec
adc
movsw
sub
jbe
aam
jp
addr16
jle
xor
cmc
mov
clc
and
daa
dec
dec
js
add
push
cmc
xor
push
movsb
push
push
cwtl
jb
adc
daa
enter
fisttpl
test
inc
mov
pushf
movsb
or
inc
sbb
sbb
dec
outsb
sub
mov
stos
pop
push
ja
push
mov
into
jae
dec
loope
in
cmp
adc
sbb
mov
fstps
and
hlt
pushf
sub
sahf
mov
scas
jbe
push
inc
pop
mov
pop
jge
bound
inc
or
shr
arpl
insl
push
inc
out
in
leave
jbe
ret
add
daa
pop
push
sub
mov
sbb
cmpsb
mov
outsb
dec
test
addr16
mov
inc
mov
push
mov
or
or
in
dec
mov
cmp
xchg
xchg
adc
std
test
xchg
sub
xchg
jno
push
call
shl
xor
add
mov
push
std
fdivs
jnp
jl
dec
pop
sbb
xor
add
cmpsl
mov
push
test
addl
push
cmp
lds
out
cmpsl
add
mov
inc
mov
jle
insl
popf
test
aad
pop
adc
jmp
pop
dec
sub
xchg
sahf
push
sub
jns
adc
test
inc
xchg
aad
repnz
addl
jg
xchg
and
shrb
lds
push
adc
or
frstor
cmp
sbb
dec
push
ljmp
adc
pushf
adc
subb
leave
pop
cmp
jl
add
push
push
pop
push
pop
pop
xchg
stos
mov
sub
add
xchg
add
inc
pop
cmp
hlt
rdtsc
test
pop
jno
jo
sub
mov
pop
lret
cmpxchg
jns
pusha
pop
push
xchg
iret
pcmpgtw
adc
mull
leave
sub
ret
fmull
pop
sbb
inc
push
push
negl
enter
inc
imul
test
fistps
cmc
push
in
xor
mulb
imul
stos
push
data16
lret
xor
xchg
inc
roll
lea
sar
and
push
imul
in
in
imul
fsubl
xchg
ficoml
cmp
shll
mov
add
scas
data16
or
test
adc
add
iret
sbb
dec
xor
pop
fnstsw
cmpl
mov
sub
sahf
pop
dec
subl
add
add
adc
js
and
sbb
adc
call
add
adc
jg
inc
repnz
lahf
popf
sbb
push
pop
imul
dec
jo
jg
mov
imul
test
push
scas
test
loope
in
insb
jmp
push
dec
pop
js
gs
xchg
dec
cmpsl
stos
pop
fwait
sti
jo
cwtl
cmp
mov
out
jns
pusha
sbb
pop
jno
push
lods
gs
sbb
cmp
inc
xor
in
inc
cmp
repz
mov
stos
je
movq
cmc
out
jae,pn
cmp
xor
ss
pop
scas
mov
sbb
xchg
hlt
push
lcall
jge
add
dec
test
lods
pop
sbb
fsubl
sbb
sbb
mov
sbb
sbb
mov
sbb
push
in
stos
test
cmc
dec
fwait
dec
cmp
jle
ja
nop
or
test
loop
mov
fdivl
xchg
push
loopne
lahf
dec
sub
add
imul
push
sbb
inc
jae
jae
or
sahf
adc
clc
push
lods
add
ljmp
out
dec
sub
fildl
or
adc
mov
arpl
cmp
adc
loopne
xor
icebp
not
popa
cmp
cwtl
int3
not
ljmp
xchg
or
movsb
mov
jmp
lds
jp
and
divl
xlat
sahf
imul
jo
or
repz
pop
adc
fwait
jge
add
mov
movsb
cmp
pop
xchg
fdivrs
or
test
mov
addb
sbb
pop
dec
sbb
into
mov
ljmp
add
cld
add
adc
fs
sti
mov
add
adc
aas
pop
mov
bound
mov
sub
xchg
cmp
je
rcrb
pop
adcb
and
jnp
arpl
xchg
inc
jecxz
aam
inc
es
movsb
adc
loope
add
sar
pop
lods
and
clc
in
pop
ljmp
outsb
pop
int
inc
imul
sub
xor
lret
adc
add
dec
jmp
cmp
cmpsl
inc
arpl
std
or
xchg
and
jp
ret
arpl
shlb
stc
cli
mov
int3
xchg
imul
stos
shrb
push
popf
xor
xor
daa
ss
push
cmp
push
pop
sub
sub
pushf
mov
inc
aas
xchg
inc
leave
xor
mov
jp
adc
imul
aaa
arpl
test
mov
xchg
and
int3
bnd
addl
cmp
cs
incb
mov
cmp
cmp
lret
dec
stos
mov
cltd
inc
rolb
in
sub
shl
sbb
mov
enter
lcall
rcrl
add
test
and
clc
sbb
mov
movsl
mov
call
sbb
into
push
sbb
out
in
js
ja
test
enter
mov
mov
loopne
sub
xor
xor
add
jne
das
in
cwtl
mov
insl
imul
mov
adc
cs
rcr
or
pop
push
mov
adc
mov
xor
dec
mov
xchg
sub
or
cwtl
lods
call
sahf
xor
push
aas
je
popf
cmp
int3
and
inc
inc
test
lock
nop
lcall
pop
mov
pop
hlt
sub
jg
pop
sbb
lods
fcompl
pop
imul
sahf
dec
dec
mov
fucomp
mov
es
jmp
cmp
mov
push
pop
fwait
pop
jns
sub
add
inc
jno
jo
lock
inc
mov
ja
cmpsl
push
mov
mov
push
xorl
adc
mov
iret
scas
sub
into
lea
push
add
arpl
mov
pusha
mov
imul
lds
andl
cmp
jmp
inc
pop
ljmp
add
ss
mov
sbb
adc
cmpl
mov
aad
jge
sub
js
lret
or
es
jl
pcmpeqw
mov
xor
jo
arpl
pop
xor
fbld
ljmp
lcall
mov
mov
xor
and
mov
pop
fdivs
mov
in
mov
jae
icebp
bound
jo
add
shrl
inc
push
jge
clc
or
adc
aam
pop
push
bound
mov
adc
movsb
push
push
jmp
in
in
push
inc
and
sub
jns
bound
xor
loop
jo
arpl
fnstsw
imul
lds
popa
mov
add
dec
inc
push
push
pop
push
dec
pop
idiv
repz
add
pop
test
add
cmp
cmc
int3
sub
ds
or
cmp
push
xlat
scas
mov
fcmovnu
mov
int3
sbb
fnclex
fsts
xor
shlb
fucom
xor
ja
jne
xor
out
inc
sub
push
into
loop
push
jmp
xor
outsb
imul
xchg
cmpb
push
push
add
xchg
or
jno
mov
and
out
out
out
imul
xchg
pop
scas
jle
or
add
mov
rolb
jle
sub
dec
popa
scas
sub
sub
xchg
in
push
pop
popf
ret
sub
leave
cmpsl
cmc
arpl
xchg
cs
loop
call
xor
pop
pushf
scas
int
sub
orb
add
out
jp
sarl
pop
mov
pop
jae
fsts
sbb
pop
cs
stos
sbb
repz
divb
push
xchg
cmp
xchg
pop
push
jmp
fsubs
lret
push
cwtl
outsb
mov
fdivrl
sbb
pop
cld
jo
lea
jo
cmp
mov
cmpb
xchg
push
push
push
es
test
inc
mov
sbb
inc
xchg
or
outsw
inc
aaa
xchg
addl
sbb
cmp
xor
xor
int
lods
and
adc
in
shrl
mov
add
cmp
mov
andl
mov
shr
or
mov
dec
mov
dec
lods
adc
mov
test
sbb
test
pop
xor
mov
popf
lock
push
jb
psadbw
dec
cmp
insl
aaa
sbb
mov
cli
sub
push
adc
popf
outsl
cld
mov
mov
inc
fwait
movsb
adc
ret
xor
test
lods
pop
stos
jmp
xor
lret
push
das
mov
pop
sbbl
push
jae
xchg
in
aad
inc
or
movsl
sahf
sbb
xchg
cltd
nop
push
in
inc
movsb
push
jo
adc
mov
or
sub
sbb
sbb
fnsave
mov
xor
or
xchg
pop
mov
pop
jmp
xchg
cmp
push
sbb
push
cmp
jg
orl
cmp
das
mov
ret
sub
jno
pop
gs
xlat
clc
xchg
sbb
fwait
mov
popf
lret
imul
cltd
call
sub
outsb
jg
movsl
sbb
and
and
mov
out
enter
mov
sbb
push
jnp
sbb
jae
cli
push
dec
inc
pop
mov
popf
out
xor
or
dec
push
int
xor
xor
adc
test
jle
xchg
arpl
push
mov
jle
or
push
xchg
out
stc
sub
or
out
xchg
dec
pop
cmp
xlat
inc
test
aas
add
xor
test
aaa
inc
repz
fstps
jo
in
xchg
enter
ret
rcrb
push
gs
jb
call
jb
sti
movsb
push
leave
rcl
inc
xlat
pusha
xchg
push
pop
in
sub
mov
call
cld
stos
jno
jg
dec
push
stos
pop
dec
int
shrb
xchg
in
xor
addl
or
stos
or
popa
push
cmp
push
pop
and
iret
adc
lods
cmp
cmp
cmpsb
inc
ret
pop
adc
out
dec
fcoml
lock
cli
into
movsb
inc
or
add
mov
lds
mov
mov
xor
into
xorl
pop
int
ljmp
and
out
cmp
or
push
jl
adc
mov
ror
decb
sti
arpl
push
dec
shll
inc
pop
insl
in
ret
xchg
fistpl
dec
cltd
fisttpl
mov
pushf
pop
lods
adc
pop
lret
push
xorb
out
ror
hlt
lock
negb
xor
in
bound
dec
loope
sub
daa
jns
xchg
jo
in
jmp
loop
adc
mov
imull
insb
inc
adc
jne
insb
mov
mov
sbb
subb
push
int
push
enter
popf
jmp
std
inc
loope
loopne
cltd
out
std
stos
inc
or
aas
bound
repz
pop
or
inc
std
lods
cmpsb
adc
lret
sub
das
or
push
xchg
mov
add
fldt
jo
das
add
lcall
mov
mov
shlb
lret
fdivr
dec
int
push
cltd
test
push
adc
sub
call
lahf
je
jle
jmp
faddl
and
adc
les
cmp
ret
jl
mov
mov
push
mov
mov
out
in
jmp
leave
xchg
mov
scas
test
cmc
or
rcrl
repz
jl
mov
test
push
and
adc
sub
fcmove
fwait
push
push
fcompl
ja
sub
sbb
dec
dec
cmp
mov
xchg
loope
sub
xchg
cmp
iret
add
out
dec
jg
js
push
in
jmp
das
mov
imulb
adc
adc
push
dec
pop
cwtl
cmc
inc
sbb
fisubrs
pusha
stos
cmp
loop
sbb
nop
test
mov
or
xchg
fstl
mov
add
gs
and
stc
jae
mov
std
dec
lcall
sub
fucomi
aad
cmp
dec
cmp
mov
push
push
or
sub
and
fsts
test
ljmp
das
js
mov
iret
and
addb
xchg
dec
ds
add
adc
call
xchg
fldl
add
inc
pop
inc
pop
pop
pop
mov
push
mov
cli
movsl
ljmp
add
sarl
jbe
mov
jb
sbb
stos
stos
or
sub
stos
adc
add
push
xchg
and
pop
pop
lods
add
fucomi
loop
mov
push
and
pop
xlat
xchg
mov
fs
inc
ds
scas
pusha
mov
data16
inc
lret
adc
xorb
push
mov
out
push
mov
mov
lods
adc
ds
push
pop
repnz
dec
push
in
scas
sarl
popl
mov
mov
clc
jg
movsl
xlat
repz
push
pushf
cmp
dec
push
mov
repz
addr16
xchg
mov
add
insl
scas
mov
fimull
pusha
out
jg
xor
mov
add
xor
sbb
int3
push
fisttpll
pop
arpl
inc
scas
into
sub
pop
xchg
cwtl
rorb
push
pop
pop
imul
add
mov
or
mov
test
test
inc
jae
jno
add
imull
sub
daa
scas
outsl
or
js
mov
scas
push
inc
popa
xor
outsb
xchg
ss
addr16
idiv
es
shrb
push
inc
es
in
or
jmp
lret
mov
xchg
out
push
or
sbb
cmp
loopne
jge
mov
adc
lret
scas
push
enter
popf
vpcmpeqd
bnd
mov
in
inc
jne
push
xchg
daa
rcl
iret
scas
adc
adc
ljmp
xchg
xor
xchg
cmpsb
aaa
jns
in
xchg
mov
pop
aad
out
mov
jnp
and
hlt
aad
mov
adc
add
icebp
les
leave
sarl
cmp
mov
mov
test
mov
sub
mov
mov
outsb
es
dec
push
test
dec
out
shl
jle
out
jae
mov
push
xor
into
mov
andl
mov
lret
and
and
pop
lret
mov
test
in
sub
sbb
cmp
push
dec
jp
jmp
xor
xor
mov
xchg
inc
sbb
stos
push
dec
in
lods
and
stos
inc
int3
hlt
aaa
ffreep
ret
xor
insb
jmp
pop
inc
leave
mov
shl
mov
jbe
ret
mov
lock
cmp
hlt
xor
pop
sar
adc
daa
lods
and
cltd
xchg
movsb
scas
cmp
mov
jg
and
inc
je
push
aad
xlat
sti
rcl
fidivs
sbb
in
mov
add
dec
in
sti
add
xchg
dec
hlt
int
stos
cmc
stos
mov
clc
push
rol
in
mov
add
outsb
ljmp
mov
mov
enter
in
ja
clc
adcl
mov
add
lcall
mov
ds
aaa
adc
pop
cmp
inc
testb
mov
mov
mov
outsb
lcall
in
lods
stc
cmpsb
adc
outsl
adc
fdivrl
aam
xor
fdivrl
bound
sub
fisttps
imul
mov
or
lea
loopne
mov
push
xor
sub
shll
inc
pop
jle
ds
pusha
jmp
adc
aad
cmp
lock
shrl
xchg
cs
shll
mov
jecxz
jecxz
and
into
ljmp
sar
sub
bound
add
xor
cld
rcll
mov
out
cmpsl
push
xchg
ljmp
xchg
sahf
dec
out
fidivl
add
dec
sar
sti
mov
cld
jne
adc
mov
inc
add
mov
cmpsb
rclb
call
sahf
sbb
mov
mov
aas
gs
jo
scas
js
add
pushf
pop
mov
inc
xor
lods
js
shlb
out
jns
nop
inc
dec
popa
clc
cmpsb
dec
lea
xchg
add
data16
in
mov
aaa
fwait
sub
mov
mov
xchg
fisubl
mov
sub
das
stos
dec
pop
popa
and
popl
mov
clc
fcompl
std
addl
insl
dec
outsl
inc
es
jg
gs
enter
push
jo
push
xchg
and
leave
lret
mov
mov
js
xchg
add
sub
pop
fisubs
outsb
cmp
or
mov
xlat
sbb
dec
decl
adc
mov
addr16
sub
mov
add
inc
mov
jo
pop
xor
inc
pop
jmp
cmpsb
add
lret
jecxz
jg
mov
sbb
dec
dec
jbe
and
outsb
pop
sti
clc
pop
jg
adc
dec
cwtl
insl
jae
mov
aad
xlat
mov
mov
jl
mov
cs
popa
dec
int3
and
xor
push
jecxz
xchg
push
js
mov
add
mov
scas
push
sbb
cmc
cmp
jle
insb
mov
dec
xor
lods
insl
cltd
pop
adc
jo
outsl
imul
xlat
pop
pop
inc
in
iret
pop
es
ljmp
sbb
dec
sbb
fildll
mov
mov
pop
imul
imull
xchg
subl
xchg
lret
out
pop
pusha
cmp
pop
xchg
rolb
cmp
mov
lds
mov
fs
aam
push
les
xlat
inc
and
jle
stos
bound
mov
cltd
and
inc
js
out
add
shl
jb
out
xor
ja
xorl
sar
cmpsl
and
xor
mov
daa
movsb
jmp
pop
dec
lods
cmp
pop
xchg
pop
test
test
cs
cwtl
sahf
test
data16
sbbb
test
push
stc
mov
loope
loop
imul
jbe
das
pop
push
dec
stos
fs
lock
dec
push
inc
push
pop
push
pop
pop
ss
imulb
cmc
jmp
mov
repnz
xchg
add
out
vaddsubpd
pcmpeqb
fldcw
into
cmc
jg
adc
mov
or
imul
icebp
notl
mov
mov
fisubrs
and
jo,pn
sbb
sub
xchg
jle
outsl
xor
cmp
mov
and
add
outsl
pop
sbb
jmp
inc
mov
lods
ja
mov
lds
and
into
jb
mov
out
xor
inc
pop
ss
lret
aas
inc
sub
loope
mov
sub
mov
inc
sub
popf
xchg
stos
sbb
cmp
clc
xchg
rcrb
int
inc
test
enter
jbe
fildll
and
add
loopne
jbe
mov
or
xchg
rol
mov
xchg
pop
pop
lods
mov
xchg
movsl
inc
fucomip
leave
push
fimuls
mov
in
cmc
inc
push
rcrl
cli
mov
sbb
je
jl
in
push
sub
dec
inc
mov
pop
icebp
xchg
sbb
in
mov
jg
pop
mov
xchg
loopne
lahf
adc
aaa
add
push
ja
jecxz
sti
pop
jp
adc
scas
adc
pop
insl
add
push
jle
xchg
ljmp
icebp
or
xchg
mov
fidivl
les
or
in
insl
push
inc
das
mov
mov
rorl
arpl
cmovns
dec
outsl
mov
inc
rclb
fisubs
add
sub
inc
cmc
mov
adc
mov
push
mov
mov
cmp
pop
icebp
fsubrl
sub
jno
xchg
fnsave
jnp
lods
loop
lcall
mov
jp
adc
leave
mov
test
ss
and
popf
inc
out
jmp
mov
in
cmpsb
push
test
scas
xchg
mov
push
lret
test
mov
loop
push
ret
inc
addr16
and
ret
or
jmp
xchg
in
pop
leave
movsb
aad
xor
mov
adc
sbb
aaa
sar
push
gs
scas
or
cmc
mov
cmpsb
sbb
in
mov
mov
push
jl
add
psubsw
dec
push
mov
xchg
push
or
gs
lahf
into
add
mov
cld
sbb
inc
in
lock
ljmp
mov
mov
inc
sub
inc
adc
ds
mov
mov
mov
push
std
cwtl
inc
ficompl
xchg
arpl
jb
sbb
push
dec
and
cmpsl
adc
sbb
aad
aad
and
lock
lret
mov
or
pop
pop
add
push
dec
roll
negl
jnp
js
ds
aam
bound
ja
std
fimuls
outsl
mov
mov
jo
arpl
pop
std
test
dec
daa
xor
cmp
jle
dec
mov
lods
fdivrp
mov
add
and
das
xchg
mov
nop
add
push
mov
xchg
icebp
push
xchg
sub
test
pop
popf
or
inc
in
stos
pushf
cmp
adc
add
scas
add
leave
test
mov
mov
mov
xchg
dec
adc
cs
dec
ljmp
mulb
or
sahf
dec
fists
out
shlb
dec
pop
dec
inc
popa
push
add
int3
ds
iret
sub
mov
push
in
jmp
cmc
inc
dec
scas
stos
inc
xchg
ret
js
movsb
push
jmp
adc
pop
arpl
out
cmp
dec
pop
mov
sbb
add
cld
js
jg
ret
cmp
out
mov
test
sub
inc
inc
cltd
pop
loopne
xor
jb
pop
pop
lods
shl
dec
loope
jno
aaa
sub
jecxz
and
jl
int
mov
cmp
subl
pop
xchg
outsl
repz
mov
mov
inc
fdivrs
jecxz
loop
adc
add
pop
xor
hlt
shrb
pop
jns
add
ja
mov
mov
and
test
sub
adc
shlb
push
push
in
fsubrl
scas
cmp
cwtl
cmpsl
ja
jp
sahf
push
xchg
addl
aas
gs
jae
jle
fs
dec
jg
outsb
mov
mov
fsubrp
fisubrs
jns
sti
int
lds
test
mov
imul
xchg
mov
dec
or
jne
jl
movb
shl
rcll
fst
mov
fs
xchg
jmp
shll
inc
hlt
loop
and
inc
jle
xchg
jp
sahf
enter
jb
mov
into
popa
sahf
je
loop
push
dec
adc
mov
mov
mov
cmpsb
xchg
outsl
out
inc
int3
and
lret
mov
inc
fisubrs
fs
loop
push
mov
paddb
aad
add
shrl
cmpb
mov
fs
push
jno
pop
add
int3
xchg
int
jns
cld
int
pop
int
dec
xchg
daa
push
jle
jmp
pop
mov
sub
adc
negb
mov
fldt
fcmovu
mov
pop
dec
adc
sbb
mov
in
mov
mov
int3
cld
lea
adc
repz
sub
out
pop
jno
inc
pop
shlb
lock
inc
xor
mov
lahf
ficomps
js
andl
mov
push
int
and
or
in
lret
std
push
popa
out
jmp
in
fiadds
and
inc
or
stos
push
repz
jnp
and
shl
add
imul
jns
or
push
xor
inc
jb
out
fisubl
pop
pop
mov
pusha
enter
dec
add
ret
push
mov
adcb
dec
popf
movsl
in
adc
mov
pop
sub
mov
movsb
scas
loope
js
insb
roll
add
inc
push
dec
inc
pop
pop
dec
push
dec
push
enter
leave
rolb
add
jle
add
or
xchg
xor
cmc
xor
out
mov
push
push
loop
mov
sbb
loope
call
sbb
mov
sub
sub
stos
or
mov
fistl
xchg
and
shlb
cmp
cmp
jb
xchg
fsubrs
jp
mov
xchg
repnz
lea
gs
add
decb
out
add
mov
and
xor
es
add
cld
mov
leave
out
out
cs
push
pop
jle
jae
imul
mov
out
dec
jg
lret
pop
xchg
mov
out
test
stc
icebp
call
data16
insl
sub
mov
lock
inc
lods
pop
xor
test
push
rorl
pop
imull
or
cwtl
mov
lcall
adc
and
pop
jae
sbb
add
in
enter
pop
mov
scas
dec
add
mov
and
rcll
dec
xchg
inc
mov
mov
cli
fnstcw
xor
daa
sbb
mov
lock
adc
sub
rolb
mov
and
xchg
stc
inc
dec
cld
es
xchg
sub
lcall
sahf
add
dec
cmp
imul
jbe
out
stc
call
mov
cmp
pop
inc
pop
xor
jmp
iret
aam
cld
cwtl
cs
mov
test
lcall
mov
add
sub
xor
cmpsl
cmp
popl
xchg
aas
notb
xchg
cwtl
cmpsl
jno
cmp
out
rcll
dec
pop
push
adc
cmp
repnz
int
sbb
cli
leave
roll
mov
push
jb
xchg
pop
inc
or
cmpsb
sbb
adc
into
addr16
jnp
mov
sub
mov
rclb
fs
or
sbb
movsb
leave
shrb
daa
add
scas
xor
jae
xor
xor
rcrl
mov
add
out
test
bound
popa
incl
in
pop
and
hlt
xchg
dec
push
jmp
scas
sarl
lahf
dec
aad
jg
ret
lcall
pop
pop
inc
xchg
cmpsb
fisubrs
sbb
popa
repz
out
cmpsl
mov
lods
mov
addl
jns
aaa
loope
sub
and
dec
mov
cmpsb
cmc
and
adc
lahf
daa
fbld
cmp
sbb
movl
inc
dec
in
movsb
dec
add
ds
cltd
fs
shl
xchg
test
imul
mov
jae
jne
jae
jp
add
pop
fildll
ret
icebp
lahf
lret
pop
mov
test
dec
sbb
jp
lock
rcr
adc
arpl
mov
pop
fadds
loop
adc
xor
pop
hlt
scas
push
loope
mov
fsubrs
push
sbb
out
lahf
xchg
mov
outsb
sub
ret
int3
jg
lock
iret
or
pushf
lcall
imul
or
enter
leave
xlat
insb
imull
mov
mov
dec
scas
mov
mov
cmp
adc
or
xlat
out
push
xchg
push
xchg
push
dec
scas
in
daa
popa
outsb
pop
mov
lock
test
sub
jbe
jno
ror
cmp
rcl
inc
mov
mov
or
ss
fists
cs
sbb
leave
lea
mov
add
dec
pusha
loopne
adc
cmp
xchg
lahf
divb
jmp
std
cmc
pop
dec
mov
sbb
xor
adc
adc
sbb
in
add
push
movsl
sbb
lods
mov
push
pop
jbe
jl
outsl
addr16
lods
out
mov
sbb
les
stc
aaa
sub
xchg
fsts
push
mov
test
cmp
lods
cmpl
and
xor
fnstsw
xchg
outsb
cmpsl
dec
mov
movsl
mov
stc
nop
sub
stos
fs
sarb
pop
push
mov
orb
mov
and
cmp
push
sbb
ret
lahf
inc
iret
sbb
and
dec
pop
push
clc
std
adc
push
fwait
stc
fidivrs
mov
adc
pushf
adc
rorl
adc
repz
pop
dec
push
lds
mov
push
call
xor
popa
dec
fsubl
jl
jecxz
mov
pop
jge
mov
cld
inc
cltd
roll
in
dec
cwtl
dec
int
addl
xor
enter
sbb
mov
inc
mov
scas
jp
add
add
pop
cmp
aad
sahf
aaa
outsb
outsb
adc
ss
jmp
outsl
ret
adc
jge
and
cwtl
iret
mov
adc
hlt
jl
icebp
or
xchg
mov
adc
scas
leave
or
loope
and
in
lret
in
cmp
push
pusha
jle
repnz
cmpsl
adc
xchg
mov
imulb
adc
or
das
xchg
jle
mov
dec
mov
dec
into
mov
and
fcompl
lds
inc
sub
pop
jmp
push
sar
fprem
call
sbb
cmp
out
ljmp
sub
test
jno
imul
mov
pop
lahf
mov
mov
cmp
xor
lcall
xchg
xchg
adc
add
fcompl
sub
cmp
xor
rcll
mov
lret
ret
lahf
je
nop
mov
adc
out
aad
mov
pop
testl
test
and
pop
fsubs
sbb
in
sub
into
int
dec
jp
aas
mov
adc
div
sbbl
gs
or
and
popf
cltd
cmp
inc
ja
sub
popa
push
outsb
add
dec
push
mov
mov
or
dec
add
add
add
movl
cmp
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
cwtl
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
call
add
incl
out
aas
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
lea
pusha
push
incl
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
in
xor
add
movl
test
ljmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
js
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
cwtl
mov
or
rorl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
push
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
aaa
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
and
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
cmp
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
cwtl
clc
xor
inc
cmp
pushf
mov
test
clc
dec
inc
mov
pushf
rol
movsb
incb
inc
mov
test
clc
pushf
inc
decl
push
cld
jge
cmp
add
jmp
les
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
fmuls
test
test
cmp
pushf
xor
add
inc
dec
cmp
sarl
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
cwtl
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
cwtl
lret
xor
mov
lea
xor
add
inc
dec
mov
push
mov
or
dec
inc
xor
push
mov
add
inc
decl
add
inc
mov
cwtl
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
rolb
mov
xor
orb
dec
leave
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
cmp
shrb
clc
add
cmp
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
sar
shl
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
sbb
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
les
inc
push
aas
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
cmp
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
cmp
pushf
xor
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
cwtl
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
cwtl
cmp
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
xchg
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
std
mov
clc
test
je
mov
cld
add
add
faddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
in
add
push
and
incl
fmull
inc
nop
ljmp
lea
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
js
inc
inc
int
inc
sub
add
int3
mov
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
icebp
or
out
mov
pop
push
cmp
sar
incl
inc
ljmp
push
mov
and
inc
push
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
cmp
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
cmp
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
js
data16
idiv
inc
fadd
mov
andl
flds
pop
push
in
incl
loopne
inc
jmp
addl
mov
inc
call
outsb
inc
js
divb
mov
orl
jb
decl
mov
test
inc
rorb
adc
mov
mov
cmp
test
pushl
mov
add
jmp
pushf
decl
add
data16
add
add
test
dec
mov
mov
inc
cmpb
mov
add
push
mov
call
mov
data16
test
out
lea
test
inc
ljmp
decl
test
incl
test
rclb
test
inc
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
in
xchg
aam
call
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
cbtw
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
jmp
lea
faddl
xor
lea
test
decl
mov
dec
clc
call
lea
lea
test
popf
push
add
xor
cwtl
mov
incl
push
push
inc
shlb
lea
call
test
incl
clc
call
jmp
inc
jnp
add
mov
mov
data16
inc
lea
test
inc
dec
test
cmp
mov
pushl
lcall
incl
pop
mov
mov
decl
mov
mov
test
incb
incl
cmp
pushf
inc
mov
hlt
test
cmp
pushf
or
pop
lock
test
clc
mov
lahf
lret
mov
add
add
rorb
mov
incl
cld
mov
add
jge
test
sbb
xchg
call
push
inc
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
cmpl
pushf
xor
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
cld
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
cwtl
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
out
adc
jne
mov
fcomps
add
incl
mov
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
add
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
cmpl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
cmp
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
cwtl
pushf
xor
jne
mov
icebp
icebp
shl
mov
cmp
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
cmp
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
clc
add
dec
hlt
xor
mov
in
jge
mov
dec
cmp
xchg
mov
add
cmp
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
cmp
fdivl
test
push
add
cmp
sets
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
cld
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
or
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
ljmp
xchg
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
rol
out
add
add
and
fs
incl
js
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
cmp
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
idivb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
data16
pushf
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ss
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
cwtl
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
data16
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
orps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
cld
js
popa
data16
into
push
data16
pop
xor
add
cld
cld
add
ss
add
into
ret
pop
add
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
pop
mov
je
xor
mov
xor
pop
cmp
jne
mov
cld
push
pop
inc
stc
aaa
test
clc
test
xor
fs
or
cld
mov
push
push
lret
aaa
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
data16
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
cld
push
add
add
add
lret
lock
lret
cmp
pushf
jge
aaa
cld
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
xor
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
xor
add
data16
dec
fisttps
add
ret
lea
add
cmp
pushf
add
add
inc
test
xor
push
cwtl
push
xor
inc
cmp
jbe
mov
or
inc
test
cmp
in
hlt
push
push
push
push
mov
cwtl
cwtl
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
cmp
pushf
jb
add
inc
daa
inc
inc
xor
dec
cwtl
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
cmp
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
cmp
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
cmp
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
aas
add
push
add
mov
cld
inc
add
rcrl
mov
mov
or
xor
enterw
jmp
ret
inc
mov
add
rorl
icebp
or
inc
inc
mov
or
jne
mov
rolb
add
cld
ret
dec
mov
mov
jmp
mov
mov
sub
mov
in
test
add
add
cmovge
add
cld
mov
adc
mov
xor
cmp
jne
mov
adc
push
test
clc
xor
xor
dec
adc
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
cmp
pushf
push
movl
dec
inc
andb
pushf
push
xchg
fsubr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
cmp
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
cmp
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
add
xor
add
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
and
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
movsb
sar
enter
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fcomps
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
fdivr
testb
dec
clc
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
sarl
pushf
add
mov
xor
test
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
cwtl
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
fiadds
xor
jb
add
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
cwtl
mov
jge
decl
jl
adc
pop
cmp
add
adc
test
adc
jbe,pn
add
adc
clc
pusha
adc
jp
adc
mov
pop
adc
inc
adc
pop
cmpsl
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cmp
add
xor
add
pop
adc
adc
in
adc
bound
adc
shlb
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
adc
ds
adc
add
add
pop
adc
cltd
outsb
adc
ja
adc
jne
adc
arpl
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
test
add
test
add
adc
add
adc
and
adc
ret
pop
adc
loopne
adc
add
aas
adc
xor
inc
add
test
add
test
add
inc
add
inc
add
inc
add
sbb
adc
inc
bound
add
adc
jecxz
adc
pushf
xor
add
or
add
inc
adc
jno
inc
add
inc
add
inc
add
inc
add
test
add
test
add
xor
push
xor
add
push
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
inc
ss
push
inc
dec
inc
add
inc
xor
dec
pop
cmp
cmp
push
pop
push
pop
dec
push
dec
dec
inc
pop
dec
xor
push
inc
pop
xor
add
push
pop
inc
push
dec
xor
pop
dec
xor
inc
inc
dec
pop
push
dec
xor
dec
ss
aaa
aaa
dec
dec
add
ss
inc
inc
xor
dec
ss
pop
dec
dec
inc
inc
dec
xor
xor
xor
xor
inc
dec
xor
add
xor
xor
pop
add
cmp
inc
dec
inc
xor
pop
inc
inc
add
dec
pop
dec
xor
dec
xor
dec
pop
push
dec
dec
cmp
xor
pop
inc
pop
push
pop
cmp
pop
dec
dec
pop
add
pop
pop
push
xor
xor
xor
push
push
add
dec
add
add
dec
add
inc
add
add
xor
pop
add
add
add
add
add
push
add
xor
pop
add
inc
add
add
push
add
add
xor
xor
xor
xor
pop
add
add
add
inc
add
add
dec
add
add
add
add
add
add
cmp
dec
add
add
pop
add
dec
add
add
dec
add
dec
add
add
inc
add
add
dec
add
pop
add
pop
add
add
dec
add
add
aaa
add
xor
inc
add
pop
add
add
inc
add
push
add
pop
add
xor
push
add
add
dec
add
add
inc
add
inc
add
add
add
cmp
push
add
pop
add
add
inc
add
add
push
add
add
add
add
add
xor
cmp
dec
add
dec
add
cmp
inc
add
add
inc
add
dec
add
pop
add
add
xor
add
inc
add
add
pop
add
cmp
push
add
pop
add
add
add
add
add
push
push
inc
push
or
push
sbb
sbb
mov
pop
in
jle
sbb
add
push
cmp
js
jbe
arpl
popa
push
pop
outsl
insl
dec
inc
push
jbe
pop
push
js
insb
insb
dec
addr16
push
jb
push
insl
push
bound
push
arpl
pop
jo
dec
inc
push
insb
inc
dec
jne
jbe
jo,pn
bound
