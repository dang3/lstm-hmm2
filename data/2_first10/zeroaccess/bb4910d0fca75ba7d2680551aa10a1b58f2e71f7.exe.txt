push
mov
sub
mov
movl
mov
mov
movl
movl
movl
cmp
movl
jne
mov
push
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
movl
xor
addl
mov
xor
push
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
xor
add
addl
movzwl
add
not
or
and
movzwl
xor
mov
sub
mov
adc
mov
sbb
mov
sbbl
push
or
mov
dec
movzwl
mov
sub
mov
mov
xor
or
add
movl
movl
mov
orl
mov
movzbl
or
lea
mov
mov
mov
addl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
movl
mov
mov
andl
xor
xor
andl
xor
andl
add
movl
add
div
movl
mov
movl
cmp
movl
je
movl
lea
sbb
mov
mov
jmp
popa
xchg
mov
mov
mov
loope
xchg
jo
in
jo
rcl
aad
ror
rol
pop
push
add
add
xor
ret
adc
mov
add
mov
sbb
lods
sarb
or
sahf
jp
inc
lods
push
sub
mov
stos
js
roll
jmp
mov
dec
fcomps
pop
test
sub
mov
pusha
nop
mov
and
jmp
out
repnz
xchg
xor
jbe
xlat
and
add
adc
xor
or
fldl
xor
pop
push
or
pop
fstps
jno
mov
ja
sbb
xor
into
cmpsb
movsb
fs
lods
movsb
or
jecxz
mov
loope
or
pop
cmp
in
fsub
pop
jne
push
fcmovne
xor
push
rcrl
mov
nop
and
lahf
and
inc
sub
cld
mov
and
mov
fldenv
mov
daa
sarl
das
mov
in
pop
les
adc
mov
insl
mov
xor
cmp
fcom
rclb
adc
fidivrs
dec
cmp
pop
js
sub
pop
adc
out
inc
decl
out
mov
inc
dec
stos
fbld
inc
out
push
pop
dec
adcb
sbb
mov
jno
in
ljmp
sbb
orl
sahf
clc
mov
mov
cmp
jmp
push
fcmovnb
mov
xlat
les
test
mov
jo
in
jo
js
daa
in
push
ja
mov
mov
dec
mov
push
repnz
mov
sbb
dec
jbe
add
aad
lock
pusha
lret
inc
mov
das
ja
inc
mov
jle
shlb
adc
jne
sbb
lods
pop
dec
dec
mov
out
shr
aam
adc
testb
mov
jmp
dec
jmp
cmp
push
and
jl
or
xchg
or
jg
and
lret
sbb
push
iret
out
in
imul
or
sub
add
jnp
push
sbb
pop
jge
cmp
adc
cmc
out
mov
or
ds
fiadds
ffreep
fwait
cmp
mov
lret
sbb
pop
mov
clc
bound
test
xor
sub
jg
xchg
arpl
cmpb
sbb
cmp
into
das
and
fmull
divb
inc
xor
stc
outsb
add
cmp
push
and
or
jmp
test
in
cmpsb
xchg
imul
adc
dec
cmc
arpl
pop
add
xor
out
push
das
mov
in
aas
cltd
stos
imul
stos
pop
and
sub
cmp
jmp
pop
push
push
mov
add
mov
orl
jmp
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
mov
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
mov
add
jmp
clc
repnz
icebp
pusha
xchg
rcll
fstps
decb
jo
in
jo
inc
lcall
push
adc
rolb
push
sbb
std
add
scas
outsb
mov
push
loopne
sbb
int3
jmp
mov
clc
stos
stos
ss
imull
xchg
mov
dec
hlt
inc
shll
jb
mov
jmp
mov
jg
mov
test
dec
mov
cmp
jmp
ds
cld
fnsetpm(287
cmp
lahf
fimuls
loop
test
imull
fs
cmpsb
dec
leave
mov
adc
sbb
ss
adcl
nop
pop
test
push
ja
filds
mov
mov
std
pop
mov
cmp
orl
pop
jg
pop
incl
leave
add
push
fistps
scas
jb
push
jp
mulsd
mov
xor
divps
sub
jge
das
cmp
int
adcl
scas
repnz
cmpsl
sub
add
rcll
push
divb
jecxz
inc
stos
cmp
sarl
inc
add
xchg
pop
inc
test
push
sbb
and
pusha
pop
xor
pop
xchg
mov
dec
stc
or
mov
sbb
mov
je
sbb
pusha
or
pop
mov
or
mov
outsb
out
pop
mov
jecxz
mov
xor
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
jmp
pop
arpl
out
xchg
imul
jae
stos
dec
jmp
jo
jg
jo
cmc
add
xor
sub
push
cltd
jae
mov
inc
adc
pop
ljmp
push
hlt
push
inc
inc
push
fistl
pusha
mov
test
sti
rcl
and
xchg
daa
mov
xchg
rcll
loop
adc
pop
dec
mov
fdivs
push
jecxz
or
rorl
xchg
lds
movsb
adc
mov
xchg
imul
xchg
and
push
pop
push
push
push
add
int3
fmull
imul
sub
clc
push
aaa
pop
cs
enter
repnz
ds
xchg
std
mov
ret
cmpb
test
mov
sbb
mov
inc
test
negb
sbb
pop
mov
cmpsl
mov
pop
call
dec
nop
mov
in
or
mov
inc
rcll
dec
push
sar
add
sbb
pop
cmp
leave
loope
testb
mov
sti
popa
enter
das
dec
pop
ja
lea
lds
inc
jmp
jb
push
notb
cs
mov
out
xor
mov
and
aaa
mov
xchg
test
lcall
jns
mov
dec
subb
clc
repnz
lods
sbb
sbb
jnp
adc
repz
stc
test
jecxz
lods
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
addr16
movsl
insl
jne
out
cmp
enter
movsb
jnp
jo
jge
jo
and
mov
fs
pop
inc
jo
mov
sub
or
inc
inc
mov
jmp
jnp
gs
stos
enter
repz
push
mov
pushf
cld
or
sub
add
mov
inc
xchg
pop
insl
push
jae
decb
cli
inc
jle
outsl
aaa
jns
or
mov
jnp
mov
mov
jge
into
jne
mov
mov
jge
mov
call
ds
dec
jne
xchg
imul
loope
cld
popf
fs
fwait
femms
or
dec
movsb
pop
test
sbb
jns
scas
push
loopne
lods
test
pminsw
sbb
decb
jbe
dec
gs
cmp
jmp
push
inc
jle
mov
pushl
xor
icebp
and
pop
cmp
sub
sub
leave
aaa
jg
enter
icebp
into
test
jge
and
and
in
jno
pop
jb
lods
push
lods
lock
enter
inc
scas
test
jns
gs
xchg
cmp
and
and
cld
js
inc
aad
sahf
sub
and
jns
mov
inc
dec
mov
cmp
mov
gs
add
push
data16
stc
insl
rcrl
mov
dec
xor
int3
sub
test
stos
call
push
push
mov
js
jecxz
aaa
pop
jno
push
scas
int
repnz
daa
bnd
push
adc
sub
push
cmp
and
call
enter
xor
bound
andl
test
arpl
fistl
in
or
ret
cmpsb
nop
xchg
iret
push
ficoml
push
adc
mov
sbb
mov
sahf
pop
sub
aam
int
xchg
repnz
mov
push
mov
jp
hlt
sub
jo
daa
sbb
ja
jg
addl
push
int
pop
fcoml
dec
sbb
add
ret
pop
negl
je
pop
jns
fiaddl
aas
xor
mov
sti
ds
push
movsb
hlt
sub
xorl
test
mov
bound
ret
nop
and
dec
jno
push
loope
pop
dec
sbb
mov
leave
mov
movb
mov
mov
cmp
les
in
jle
jne
push
nop
mov
subl
cmp
outsl
inc
inc
ljmp
pushf
inc
inc
or
pop
xor
mov
pusha
mov
leave
gs
push
punpcklbw
sahf
pop
mov
in
mov
and
mov
pop
in
call
and
ljmp
cmp
into
xlat
fisubrl
repnz
lret
clc
movsw
test
jge
add
mov
test
cmp
mov
dec
xor
fdivrs
and
pop
addr16
sbb
call
imul
xor
lea
xlat
leave
sbb
mov
or
insl
cmpsl
jbe
sub
outsl
shlb
or
fisttpll
leave
inc
cmc
push
fdivl
mov
cli
cwtl
cmp
pop
sarb
cmpl
pop
push
sbb
mov
and
fwait
push
push
xor
mov
sub
mov
sbbl
jmp
add
arpl
mov
pop
jo
xchg
jge
jo
mov
mov
sub
popf
shll
xchg
mov
jb
mov
push
mov
dec
push
pushf
out
cmc
iret
inc
or
xchg
insl
lock
fldenv
cmp
sbb
stc
jns
nop
iret
or
xor
lcall
and
ret
or
nop
sbb
pop
cmp
rorl
outsl
jp
push
fadd
popa
mov
out
jmp
and
es
movsl
xor
push
js
pop
mov
shrl
mov
popf
cld
out
or
lods
imul
xlat
sbb
outsl
ds
pop
mov
int3
in
fldenv
movsl
inc
cmpsb
test
inc
outsb
dec
adc
cld
pusha
or
mov
cli
inc
popf
xchg
mov
jge
push
mov
imul
lret
jns
icebp
lea
push
out
xlat
push
pop
daa
adc
aas
xchg
cli
fimull
or
adc
and
lods
repz
cwtl
xor
into
lahf
mov
jecxz
pop
cmpl
fbld
sub
sarl
mov
pop
sub
sti
mov
jl
or
jge
divb
rcrl
and
lret
jo
mov
sti
inc
call
adc
repnz
lock
lret
mov
dec
jmp
repnz
xchg
shlb
cmp
mov
jns
push
addr16
push
push
imul
cmp
cmpsb
xchg
sahf
sbb
rorb
push
lods
jl
mov
ret
bound
fs
and
shrl
out
jns
push
scas
popf
cltd
jp
ja
aas
push
jl
pop
nop
fs
mov
push
cmpsl
lods
jg
fsubrs
push
shll
mov
es
lds
repz
push
cwtl
fyl2x
mov
mov
mov
inc
clc
loop
mov
inc
adcl
xor
sub
sbb
sbb
adc
addr16
pop
shrl
mov
jmp
dec
lcall
hlt
sahf
mov
mov
fisubrl
mov
gs
add
sbb
xchg
push
dec
mov
pusha
xchg
xor
pop
push
mov
insl
push
inc
mov
xchg
push
add
test
scas
out
sbb
je
inc
adc
data16
inc
lret
mov
jns
cltd
lock
lea
add
lock
cmp
xor
ret
xchg
cli
xor
push
dec
cli
filds
cmc
push
dec
mulb
jg
cwtl
in
fwait
ljmp
imul
jmp
lret
imul
gs
hlt
out
mov
push
rclb
adc
mov
cli
mov
aaa
jno
test
stc
cld
in
fisttps
xor
fdivr
sbbb
in
and
cmpsb
mov
insb
adc
aad
push
bound
movsl
dec
mov
xchg
inc
ret
sub
data16
mov
push
sbb
jge
pop
pop
sti
fildl
xchg
lahf
dec
jge
lret
dec
out
mov
in
cmp
push
insb
xchg
inc
cmp
stos
push
or
or
fucom
rclb
std
outsb
add
out
and
jle
cs
lods
stos
andl
shlb
or
sub
lret
movl
mov
mov
sbb
jmp
in
lock
mov
push
scas
int3
cmpsl
icebp
bound
jo
jge
jo
pop
push
into
xchg
test
push
dec
movl
out
mov
out
cli
call
sub
cmp
fcomps
adc
jae
outsb
and
repz
fimuls
fnstcw
mov
cli
gs
jne
repnz
ljmp
and
pop
shrb
fs
dec
pushf
pop
clc
inc
mov
out
xchg
scas
mov
xor
testb
sub
scas
sub
mov
mov
lods
nop
aaa
cmc
mov
ret
stos
cmc
fisubrs
cwtl
push
cli
dec
pop
and
jbe
add
or
pop
cmpsb
icebp
fsubr
cli
imul
sbb
dec
in
outsl
dec
add
roll
xor
mov
dec
mov
mov
pop
popf
imul
mov
jmp
into
lahf
push
pusha
mov
xchg
adc
out
fsubrs
or
out
or
inc
ljmp
push
add
fnsave
dec
pop
sub
popl
pop
enter
mov
int3
mov
mov
data16
xchg
repnz
orb
std
pushf
in
mov
and
dec
xchg
enter
fidivl
lock
shlb
or
cltd
inc
lods
incl
aad
pop
pop
ret
lret
shl
add
push
stc
test
mov
stos
int
jecxz
daa
rorb
cmc
mov
xchg
lahf
xor
sub
aam
mov
mov
xchg
push
sub
test
cmp
pop
xchg
mov
in
mov
frstor
mov
dec
fcoms
xchg
jmp
daa
adc
cmp
pushf
sub
in
xor
push
scas
adcl
sub
mov
out
sbb
mov
inc
movsb
fsubr
fistpl
mov
mov
sbb
sbb
or
sbb
incl
mov
lret
rcll
push
and
daa
adc
aam
ds
and
jo
push
inc
cld
fisttpll
sti
pushf
and
shll
out
xchg
testb
xchg
outsl
daa
scas
orl
xchg
push
jg
sub
and
fs
jns
adc
jne
sub
loope
or
test
frstor
icebp
movsb
lock
clc
gs
push
stc
test
push
enter
xchg
shlb
mov
xchg
sahf
test
adc
and
pop
test
sahf
ja
stos
or
ret
inc
in
jno
jl
cli
xchg
add
sbb
dec
bound
andl
andb
push
shr
pop
scas
dec
jle
dec
lcall
in
jae
jbe
mov
inc
aad
jge
int
xchg
cmp
mov
push
cmpsl
adc
jnp
pop
outsl
hlt
into
mov
scas
frstor
std
fsubs
sbb
enter
dec
es
cld
pop
out
ficomps
ret
add
lahf
or
sub
movsb
idiv
mov
sbb
jnp
or
mov
popl
fisubrs
les
xor
mov
inc
rolb
out
dec
ret
fidivrs
xor
sub
xchg
repz
clc
sub
push
add
mov
xor
and
mov
push
mov
addl
add
jmp
mov
cltd
or
or
mov
ds
add
xchg
jge
jo
stos
in
nop
fs
push
pop
jle
add
or
repz
cmp
fnstsw
add
cmpsl
xchg
add
movsl
add
sub
xchg
out
loopne
loop
mov
stc
in
or
call
push
or
orl
bound
sub
aam
aaa
daa
push
xchg
mov
int3
xchg
mov
imul
jp
inc
adc
int
jle
or
xor
pop
and
lahf
push
pop
jl
sbb
inc
lcall
out
ljmp
in
push
jnp
pop
cmpb
sbb
mov
loop
daa
or
mov
inc
and
ss
mov
insb
jnp
cmpl
int
in
fsubrl
push
push
repz
filds
jg
cmp
inc
xor
jbe
addr16
sbb
add
mov
cmp
mov
dec
push
jecxz
iret
xchg
pop
popa
fwait
cmpsl
push
out
xlat
cli
je
push
es
nop
pop
fstpl
adc
lahf
test
xchg
or
mov
ds
xor
sub
stos
inc
mov
mov
xor
and
xor
fsubrp
iret
pop
xor
cmpsl
outsl
lds
adc
dec
add
lea
ja
in
mov
leave
pop
sbb
cmp
mov
sar
sub
cmpsb
bnd
and
sub
stos
jb
rclb
imul
jge
push
push
pop
fcompl
cmp
rcr
sahf
aad
pop
jno
xor
inc
inc
mov
and
dec
loope
sahf
add
sbb
mov
sar
dec
loopne
inc
jae
das
insb
and
cmpsl
cmp
imul
mov
or
fdivl
loopne
outsl
jp
gs
mov
popa
mov
mov
test
dec
ja
xchg
add
lds
fcoms
test
jge
addr16
cltd
roll
rorl
jmp
xchg
in
in
add
fistpl
fcompl
test
test
xchg
sbb
pop
repz
aaa
pop
div
mov
xchg
dec
out
mov
dec
adc
out
dec
inc
flds
xchg
sbb
aad
in
and
cwtl
addw
inc
jp
rorb
mov
mov
mov
sub
pop
loopne
add
xchg
jne
pop
movsb
cmpsl
push
aas
pop
hlt
jecxz
sbb
mov
idivb
mov
inc
in
mov
shll
pop
pop
add
dec
fcoms
xor
pop
loopne
fisubrl
jo
adc
das
mov
mov
les
mov
ficoml
outsb
stos
test
jae
jae
orl
fisubrs
imul
jge
sub
mov
cltd
mov
jecxz
stc
cmpsb
xor
addl
mov
xchg
xchg
in
arpl
mov
adc
cmp
dec
into
pop
cltd
xchg
xlat
jmp
dec
leave
cmpsl
xchg
pop
int3
ds
xor
call
mov
xor
insl
pop
cld
cmc
add
fwait
rcrb
icebp
pop
jg
push
lret
xchg
adc
and
call
movsl
bound
or
add
xchg
in
sbb
xchg
adc
adc
gs
mov
add
pop
push
add
je
and
mov
sbbl
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
push
call
jmp
mov
sub
add
xor
adcl
add
movl
cmp
ja
push
jmp
mov
mov
jmp
mov
in
inc
sub
iret
arpl
or
jo
jge
jo
mov
outsb
mov
jns
iret
mov
pop
fdivl
sub
dec
sub
push
mov
add
mov
xor
lret
imul
mov
jb
and
cmp
loopne
pop
mov
xor
and
push
push
dec
jbe
dec
fisttpll
lret
lahf
push
inc
pusha
test
xchg
sbb
into
and
pop
aas
iret
in
and
mov
movsb
cwtl
adc
sbb
mov
pop
addl
mov
das
shrb
shll
dec
imul
cmpsb
cmp
in
dec
push
xor
mov
mov
xchg
mov
mov
or
int3
mov
pop
mov
xchg
jge
movsb
inc
aad
test
adc
rolb
cmp
xlat
aam
push
or
jae
push
popf
pop
les
and
cmc
mov
mov
add
sub
mov
mov
mov
and
pop
sahf
xor
or
fmul
push
fisubrl
pop
xchg
xlat
out
mov
mov
add
inc
dec
mov
adc
push
in
out
in
cmpsb
iret
dec
dec
pop
lea
inc
xchg
sahf
das
cltd
call
mov
fstps
cmpsl
test
dec
mov
pop
or
pushf
xchg
push
ja
pop
add
std
popa
into
mov
das
push
cmp
jmp
movsb
insl
push
xor
mov
jecxz
sub
adc
adc
daa
cmp
cmc
mov
add
in
dec
into
push
jnp
xchg
jle
adc
aas
dec
xchg
push
fcomps
sbb
out
lcall
jmp
xchg
sti
add
stos
or
movsb
stos
insl
jo
pop
out
mov
test
ss
out
inc
sub
mov
rcrb
sbb
enter
arpl
imul
jge
mov
mov
std
sti
loop
loop
mov
xchg
inc
cmpsb
imul
inc
cmpb
xchg
shll
add
inc
jno
mov
int3
fidivs
mov
jmp
aad
aad
mov
gs
fsubrs
xor
inc
xchg
jne
or
dec
lock
in
pusha
mov
push
dec
ret
and
and
clc
jg
pop
shrl
sbb
lds
mov
mov
inc
push
xchg
mov
out
add
cli
and
sbb
out
xchg
jb
xorb
gs
jb
or
jecxz
jo
ja
or
jmp
aas
pop
sahf
mov
mov
outsl
negb
js
add
xchg
mov
xchg
repz
das
inc
xchg
mov
pop
or
mov
aaa
xor
movsl
sub
pop
dec
mov
fcoms
push
adc
inc
cli
mov
lods
jnp
nop
sub
rcrb
sub
jecxz
mov
mov
push
cvttps2pi
fistpll
sti
push
bnd
adc
xor
loope
mov
pop
sub
or
sub
in
dec
jp
inc
lock
daa
idivb
dec
dec
inc
xchg
sbb
push
pop
adc
jno
xchg
pop
adc
shll
jle
dec
sbb
cmp
dec
leave
jnp
inc
das
frstor
in
mov
movsb
push
xchg
mov
sbb
mov
inc
enter
cld
jmp
cs
loopne
in
jnp
jmp
mov
fsts
xchg
jge
jo
mov
dec
mov
and
lods
xor
jl
xor
cltd
pop
addb
cmp
fwait
push
push
and
stc
in
out
mov
leave
pop
rol
pop
mov
enter
lods
inc
dec
daa
lds
mov
cli
enter
shl
add
xchg
inc
repnz
lock
push
push
in
sub
xchg
inc
adc
push
cmp
sub
inc
push
lea
adc
shl
jp
jns
lcall
or
mov
fcoml
dec
fs
sub
test
jno
stos
or
ret
mov
lret
lahf
pop
xchg
adc
mov
ljmp
mov
and
ljmp
les
lods
fisubl
paddb
sub
xorl
das
fistpl
push
outsb
ds
or
gs
sub
push
push
fsubr
call
sub
in
jecxz
jae
es
sbb
or
aam
sti
sbb
stos
jge
adc
jnp
pop
push
es
xlat
mov
mov
test
loopne
pop
jecxz
mov
lret
or
pop
add
sub
scas
adc
pop
mov
add
jnp
add
pop
mov
push
mov
int
mov
hlt
int
int3
cmp
mov
and
jl
insl
int
jl
cmpsb
pushf
sub
jg
sub
rcl
or
push
jnp
lods
cmpb
add
imul
cli
mov
jne
lea
fists
add
xchg
ret
cmp
pop
es
push
mov
lods
pop
inc
sub
aaa
pop
cmp
addl
xchg
adc
jo
cs
xchg
add
ficompl
push
inc
sub
scas
add
aam
pop
lds
ret
fidivrs
in
decl
add
sub
movsl
inc
jg
call
push
fimuls
adc
lret
aam
pop
pushf
daa
in
xchg
shll
and
popf
sub
xchg
xor
sub
lods
mov
jecxz
xchg
fidivrl
in
loop
idiv
push
mov
les
adc
sbbb
sub
repz
or
sti
mov
std
fstpl
ss
negb
imul
fisttpll
mov
mov
outsl
test
ret
roll
fistl
add
hlt
jo
aaa
je
test
loope
daa
pop
mov
ss
shrb
lods
fildl
fistps
inc
dec
sbb
popa
pop
inc
js
xor
and
mov
fs
hlt
sub
lods
in
dec
cmpl
rorl
jmp
sub
addr16
enter
test
push
out
and
ret
sbb
imul
ficoms
popf
dec
pushf
sbb
pop
aas
pop
jns
nop
add
xor
aas
fisubl
lods
mov
mov
negl
dec
call
pop
fdivrs
sbb
fldenv
and
mov
xor
mov
add
jge,pn
call
xor
es
pop
lret
dec
mov
mov
mov
je
add
mov
cmc
or
lret
scas
out
repnz
jp
adc
mov
xchg
sbb
jb
shrb
subl
lods
hlt
xor
jmp
data16
in
int3
jne
popa
jno
imul
or
xchg
jge
jo
pop
mull
test
test
push
add
into
pop
aas
subl
mov
pop
out
inc
adc
ljmp
push
dec
xchg
sbb
sub
dec
sbbb
cld
insb
mov
fidivs
repz
pop
adc
mov
jge
mov
push
mov
aad
or
mov
dec
fs
mov
fs
dec
sahf
and
or
fildl
nop
repnz
loop
inc
mov
js
mov
icebp
nop
lahf
jl
stos
inc
add
insl
mov
jp
enter
call
hlt
rcrl
sahf
push
dec
sub
pop
outsb
rcrb
dec
add
jns
push
lahf
daa
aas
jnp
into
mov
dec
shlb
notl
xchg
inc
and
fsts
iret
cmp
roll
ret
jbe
pop
pop
popf
or
jns
pop
xor
jle
mov
sbb
movsl
mov
sbb
sahf
das
fwait
outsl
pop
inc
int
cwtl
inc
lea
jnp
jae
popa
and
pop
jmp
pop
and
pop
mov
sarb
mov
dec
jb
inc
in
stos
adc
addl
mov
in
xor
or
or
cs
mov
mov
xchg
sub
sbb
cmc
mov
das
cmpsl
dec
push
lcall
xchg
mov
cmp
fs
fisubrs
push
jmp
inc
je
mov
je
dec
jp
jmp
xorb
nop
loopne
push
xchg
clc
int3
in
out
mov
aas
mov
push
cwtl
arpl
xor
test
das
sbb
mov
mov
int
pop
xor
shlb
dec
div
adc
adc
inc
in
adc
outsl
jmp
sarb
aam
xchg
addr16
add
adc
popf
mov
imul
adc
or
pushf
jg
xorl
jecxz
test
pop
add
cmp
scas
mov
icebp
daa
mov
or
sub
repz
mov
imul
inc
xorl
xor
aas
into
testb
fstpl
stos
pop
mov
xlat
cmp
inc
int3
outsb
push
pop
push
mov
and
bound
lea
loopne
pop
fldenv
fimull
out
inc
jbe
fldcw
fnsave
jne
inc
test
adc
loop
sbb
idivb
out
inc
pop
loopne
xor
sbb
test
sub
sbb
gs
push
push
or
or
fnsave
idivl
arpl
push
popf
push
loope
add
mov
pop
fs
mov
jnp
ss
add
hlt
insb
jge
or
adcb
and
jmp
cmp
cmpb
fs
lcall
or
jecxz
push
add
mov
push
jns
clc
in
pop
push
dec
lret
fs
cmpsl
or
and
dec
addb
xchg
mov
scas
cli
push
int
lock
push
xor
jle
or
cmc
popa
test
repz
sbbb
mov
imul
mov
jmp
jle
mov
xchg
icebp
repz
push
dec
push
adc
xchg
jge
jo
xchg
out
xchg
aad
aad
rcll
and
mov
sbb
xor
rorb
es
lret
adc
pop
aam
add
xlat
cmpsl
rcrb
pop
mov
rclb
push
sbb
xchg
sub
add
add
jecxz
mov
push
jmp
sti
clc
push
pop
nop
push
or
pop
and
in
iret
jge
sub
xor
out
mov
cmc
addr16
pcmpgtw
aad
cmp
das
adc
fdivrs
aam
xchg
sub
jbe
push
test
fisubl
rcll
test
xor
xchg
rolb
inc
repz
xchg
pop
mov
repnz
xchg
dec
idivl
cmpb
sbb
in
je
cmp
xchg
ret
pop
arpl
jns
xchg
dec
gs
sub
cmp
cmp
and
and
cmpsl
cs
inc
sub
jle
jg
mov
test
lahf
inc
fcoms
fadds
leave
loopne
xchg
inc
jo
cmp
add
scas
ret
cmc
xor
je
xchg
pop
shl
push
inc
xchg
decb
movsl
mov
jbe
lcall
and
flds
fsubp
pusha
dec
mov
adc
pop
add
cmpsb
cmp
popa
dec
sbb
mov
aaa
lods
stos
outsl
movsb
cwtl
jae
inc
mov
add
ret
cmp
mov
cmp
out
lock
testb
xchg
mov
pop
push
sub
jne
dec
xchg
call
and
imul
jne
mov
pushf
mov
ret
xchg
sti
sbb
test
repnz
leave
pop
pop
xor
pop
xor
stos
fsubs
lcall
ror
arpl
in
popf
hlt
cwtl
mov
jo
cld
inc
mov
cmp
jb
fcmovu
sbb
push
pop
das
inc
cmpsb
mov
nop
stos
mov
fdivrs
cli
add
dec
mov
in
sub
cs
mov
sub
xor
andl
mov
xchg
dec
adc
mov
mov
mov
cmpsl
xor
and
sahf
add
push
js
push
incl
mov
int
push
lock
xchg
pop
xchg
lcall
jns,pn
lret
and
sti
ret
cmp
adc
mov
int
push
push
or
xor
jnp
out
into
mov
xor
xor
andb
adc
add
cmp
inc
frstor
pop
push
add
popa
push
inc
jmp
mov
mov
inc
enter
cmp
xchg
fwait
xor
mov
mov
out
aad
int3
dec
in
mov
pop
sub
fisubs
sub
or
popa
testl
xchg
fimuls
dec
icebp
cmc
fyl2x
ljmp
stos
cmpsb
mov
mov
push
fisubl
out
lret
popf
xorl
push
mov
cltd
int3
sbb
xor
jb
lcall
sbb
sti
push
sti
scas
outsl
je
inc
sbb
repnz
sub
sti
xchg
xchg
mov
insb
fdivrs
cli
fdivl
mov
pop
xlat
xchg
inc
push
pop
jp
data16
iret
mov
cmp
daa
dec
cmp
insl
dec
int3
xor
sahf
int3
lcall
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
mov
add
mov
xor
mov
adcl
add
movzbl
sub
movzwl
adc
mov
and
movb
xor
or
xor
mov
lea
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
call
mov
dec
mov
jmp
mov
mov
adc
mov
xor
sub
andl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
and
movl
movl
add
mov
or
mov
jmp
and
pop
icebp
jae
lods
imul
into
xchg
and
sbb
jo
jo
or
cld
push
jp
jno
xor
es
dec
or
imul
push
xor
mov
aaa
out
call
ss
rolb
in
cmp
xchg
mov
sbb
inc
xchg
mov
mov
daa
push
push
outsb
test
pop
xor
flds
mov
sub
call
std
sub
sti
int
sub
ja
cmp
push
sub
push
or
inc
inc
sbb
xchg
mov
cmpsl
rcrb
lods
mov
aaa
negl
mov
fisttps
aaa
mov
pop
fisubrs
xchg
xor
and
add
dec
or
lods
xor
je
insb
dec
push
rorb
push
and
insl
ja
arpl
mov
and
jmp
jmp
aas
dec
or
and
inc
mov
pop
adc
push
test
addr16
xchg
xchg
mov
pop
and
andb
out
fs
adc
out
mov
xor
inc
xor
mov
sbbl
add
movl
jmp
movl
mov
mov
inc
cmp
jmp
sbb
movsb
scas
xchg
sub
cmp
ret
jl
sbb
jo
adc
scas
test
sti
mov
and
orl
sbb
pmullw
sub
xchg
loop
push
xchg
icebp
das
out
or
xchg
pop
mov
xor
clc
jns
imul
mov
fstps
hlt
fiadds
dec
cmpsb
inc
mov
sbb
add
sub
add
cs
or
jg
inc
decl
mov
xchg
pop
fwait
jp
jo
push
adc
xor
rep
cli
sbb
xchg
lds
xchg
xchg
lods
sar
dec
xor
add
mov
out
and
addr16
out
xchg
lahf
xor
inc
lock
imul
mov
leave
jl
xchg
lods
dec
mov
inc
sub
mov
or
or
push
dec
les
mov
mov
sub
fstpl
jecxz
in
lcall
scas
out
vpsllq
loopne
shlb
pusha
sarl
stos
jg
xchg
repz
cli
cltd
jb
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
add
cmp
jmp
inc
sub
xorb
jmp
inc
mov
lahf
test
mov
jg
jo
or
adc
das
inc
sub
add
sub
push
adcb
rcrl
orb
out
jmp
xor
push
into
or
sbb
mov
jle
ret
and
fs
cltd
int
repz
xchg
jle
js
mov
sub
mov
push
mov
imul
add
xchg
and
test
dec
pop
push
xchg
lret
cwtl
loop
ret
popa
test
inc
test
cmp
popf
test
push
mov
insl
sahf
out
mov
lock
jmp
insb
in
outsl
xlat
popa
xchg
xlat
push
out
rcrl
jl
jbe
sbb
out
xchg
mov
push
mov
in
js
sbb
mov
movsb
rcll
inc
jmp
popw
push
xchg
push
adc
data16
js
dec
lock
daa
push
inc
addr16
aaa
scas
cli
in
fnsave
xor
inc
or
add
sbb
mov
hlt
jns
push
nop
push
arpl
lds
lret
inc
xor
cmp
test
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
jmp
cmpsb
fisubrl
jmp
xchg
aam
popa
sbb
sbb
jo
lea
sbb
adc
add
jg
xchg
lods
inc
xor
dec
aas
jb
xor
imul
stc
pop
sahf
iret
mov
adc
mov
movsb
mov
insb
leave
fwait
lods
jae
pop
dec
inc
dec
lea
push
arpl
jecxz
inc
or
mov
in
clc
sbb
add
into
cmpsb
mov
mov
and
shrl
xchg
shll
cmp
ja
daa
adc
sahf
sti
mov
xor
mov
test
fimull
insb
mov
fisttpll
mov
cmp
test
sbb
dec
xor
cmp
push
repnz
jmp
data16
out
pop
les
clc
lock
mov
lods
push
repz
in
mov
loop
icebp
out
pop
int
out
mov
push
out
loop
pop
adc
es
jmp
and
mov
in
js
notl
add
fs
cwtl
mov
push
test
jae
sub
mov
clc
mov
jmp
aaa
insl
pop
int3
push
jb
jno
pop
imul
sbb
sbb
jo
push
ds
idivb
fstpt
dec
out
jns
inc
je
adc
movsl
fs
sti
mov
bswap
jge
gs
adc
sub
mov
cs
pop
mov
aas
mov
xchg
stos
fdivs
shl
push
icebp
pop
sub
cwtl
lcall
sbb
push
cmp
and
jl
cmpsb
xor
add
and
mov
cmp
imul
inc
mov
cltd
lea
or
scas
and
in
push
stos
jp
into
or
insl
xor
test
xor
rorb
inc
push
push
xchg
cmpsl
shlb
nop
int3
fucomip
aad
dec
imul
or
scas
call
out
mov
jae
rorl
call
daa
mov
xchg
dec
xorb
push
adc
cmp
daa
dec
jnp
add
jge
cmpsl
imul
repz
outsl
lret
cmp
stc
xor
aas
mov
mov
std
and
inc
sbb
roll
mov
mov
xor
add
jmp
ffree
adcb
mov
cmpsb
xor
jo
sbb
jo
dec
xor
outsl
lds
orb
rol
inc
imull
lret
divl
or
xor
cltd
dec
popf
fisttps
or
into
scas
cld
xor
out
mov
jnp
and
ret
sbbb
inc
adc
or
frstor
or
inc
cmp
imul
xchg
rcrb
mov
scas
mov
xlat
in
imul
scas
test
jb
fcmovne
pop
incl
xor
pushf
lock
lods
jge
adc
sbb
sub
xor
adc
add
addr16
ret
fildll
or
xchg
jb
jae
mov
sub
out
sbb
push
hlt
mov
cltd
fldcw
bswap
fcoml
sbb
shrl
gs
add
cmp
dec
jge
sahf
xor
dec
push
mov
xor
push
hlt
add
cwtl
sub
add
push
aaa
cmc
shl
xlat
lret
clc
repz
fnsave
inc
and
dec
inc
jl,pn
mov
mov
mov
mov
cmp
je
mov
mov
jmp
scas
or
repz
test
roll
mov
fsubl
jo
sbb
jo
stos
or
sahf
push
movsb
jmp
filds
dec
jne
scas
add
sub
loope
jecxz
loope
std
in
push
rcrl
into
jl
sub
or
movsl
mov
push
jg
movsb
and
ret
xor
mov
in
int
test
push
into
iret
daa
or
xor
aas
daa
mov
loopne
mov
xchg
test
mov
sbb
add
fsubrl
lcall
lcall
dec
xlat
sbb
push
daa
lahf
add
out
in
jb
movsb
mov
in
and
mov
adc
fcomps
mov
pop
outsl
adc
out
and
adc
cld
mov
adc
sub
jb
inc
scas
and
cwtl
xchg
pop
mov
fwait
push
int3
xor
cld
pushf
xchg
xchg
cmp
sbb
add
xchg
fcmovb
in
mov
push
sahf
insl
or
xlat
notl
hlt
leave
mov
sbb
xchg
dec
cmp
pop
sbbb
sbb
frstor
and
aam
push
aas
mov
xchg
mov
cmp
jne
mov
jmp
dec
push
test
xor
popa
jns
and
cld
test
jo
sbb
jo
push
icebp
repz
cmp
sub
pusha
aaa
sbb
out
sahf
js
inc
push
lods
inc
xchg
xor
push
test
cld
add
les
les
les
mov
insl
xchg
addr16
mov
pop
ss
mov
add
pop
lock
pop
cmp
cs
pop
jb
mov
ljmp
lods
int3
dec
sbb
aas
jle
cmp
bound
aas
xor
push
lcall
int
ljmp
xchg
push
clc
insl
nop
jl
in
jo
insb
int
push
xor
in
xor
lret
jecxz
orb
xchg
lock
push
outsb
in
adc
in
push
repz
out
imull
push
jns
push
int
and
mov
push
data16
or
aas
sti
out
lds
mov
je
mov
js
test
jb
pop
mov
xor
add
in
ds
rorb
std
push
idivl
aas
sub
negl
push
test
rorb
adc
roll
cmp
jmp
mov
gs
nop
sbb
popa
dec
lods
and
jo
cmp
mov
jns
insl
arpl
sub
sbb
test
out
cmp
dec
push
mov
jge
sub
outsb
jne
mov
mov
mov
movsb
and
dec
push
mov
pusha
rol
and
mov
repnz
orb
or
js
daa
cli
aaa
add
jmp
jl
xlat
pop
enter
mov
pushf
xchg
xor
or
ret
pop
or
repnz
fmulp
push
sbb
pop
mov
lcall
jne
jno
loop
out
jno
fwait
ja
inc
jge
push
imul
inc
std
mov
pop
push
add
cld
test
movsl
fdivs
rcrl
xchg
repz
pop
imul
gs
push
add
ja
and
push
out
movhps
rolb
jb
fdiv
cmpsb
sub
fwait
daa
cli
out
sti
mov
xchg
cmp
mov
jo
in
sbb
push
pop
or
adc
test
xchg
mov
mov
test
add
add
inc
call
jmp
aaa
dec
rcrl
jno
repz
enter
lea
into
push
and
jo
jg
jo
fmul
and
repz
or
push
push
mov
xchg
add
outsb
mov
jnp
cmp
arpl
push
shll
loop
shr
popf
jle
add
call
cmc
fxch
pop
mov
fstpt
movsb
cmc
add
sbb
cmp
outsl
xchg
xlat
lock
sub
cmp
je
and
hlt
psrlq
sti
xchg
sbb
in
mov
mov
rcll
cmpsb
jg
xchg
adc
popa
dec
pop
repz
push
mov
mov
inc
repz
mov
sbb
in
ffreep
and
out
mov
fsubrl
jnp
jae
or
jns
mov
jge
push
add
cmp
cmp
mov
mov
pop
dec
inc
xchg
dec
push
into
fsubl
pop
fcompl
mov
xchg
push
fisubrl
fwait
sarl
xlat
cmc
xlat
pop
addr16
setns
adc
inc
hlt
dec
iret
movsb
mov
dec
jmp
sbb
xor
ficoms
ss
cmp
inc
fnstenv
int3
xchg
and
in
mov
addl
mov
mov
xor
lea
mov
jmp
mov
addl
jecxz
or
jl
jo
sbb
jo
inc
orb
mov
jl
mov
jg
sti
fimull
popl
sub
repz
and
filds
shl
enter
mov
sub
lods
sbb
lcall
ret
xor
jl
mov
sub
jecxz
in
push
fcmovnu
pop
sbbb
lods
fsts
xor
cmp
dec
inc
pop
push
mov
stos
test
add
scas
bound
je
test
mov
or
lcall
outsl
inc
dec
es
je
mov
mov
pushf
add
mov
outsl
filds
mov
rol
and
cmc
aaa
sbb
jae
adc
int3
pop
stos
lods
push
inc
data16
xchg
or
into
scas
sbb
popf
jbe
push
mov
lret
fisttpll
or
rolb
ss
in
and
je
stc
aam
inc
imul
rcrb
sbb
mov
test
xchg
scas
xor
into
xchg
or
sar
lcall
xchg
incl
jmp
jmp
cmp
xor
sarl
cld
cmp
jo
sbb
jo
mov
cmpb
xchg
insl
add
xor
nop
jns
xchg
xchg
repz
shll
cmp
test
dec
dec
lahf
xchg
or
aad
movsl
int3
and
and
call
xchg
mov
outsl
inc
jp
adc
pop
stc
adc
or
insb
dec
clc
test
xor
mov
mov
xor
test
mov
data16
pop
xor
push
or
or
addb
sub
mov
cmp
jb
imul
xchg
sub
mov
in
int3
xchg
aas
push
adc
inc
cmpsb
lock
cmpsl
dec
jo
loop
test
out
cmp
stc
mov
or
jecxz
sbb
in
mov
das
dec
sub
xor
rorb
rcll
sbb
xchg
cmp
jmp
cmpsl
loopne
popf
jne
fwait
sbb
mov
std
xchg
not
in
dec
add
in
inc
cwtl
adc
pop
test
stc
dec
test
mov
xor
mov
add
jmp
pop
adc
mov
es
xor
int3
and
sbb
jo
and
outsb
test
cld
add
ror
or
mov
and
mov
jmp
stos
adcl
repz
mov
bound
or
pop
cltd
and
and
and
mov
insb
cltd
lock
out
xchg
aad
ljmp
cli
loope
jno
push
adc
unpckhps
xchg
inc
inc
cwtl
pop
and
cmpsb
mov
xor
dec
aad
std
inc
fs
ficompl
daa
hlt
dec
push
jge
out
mov
icebp
arpl
das
mov
jnp
shll
xchg
pop
add
jecxz
das
pop
push
adc
fstpt
sub
aam
cmp
or
dec
mov
loope
or
jle
sub
xchg
mov
sub
stos
jmp
jle
bound
inc
popf
mov
or
push
xor
adc
movsl
mov
fcmovnbe
sbb
je
lods
div
clc
pusha
stos
inc
insl
es
mov
xchg
xor
xchg
or
lea
in
je
push
mov
lds
or
push
mov
push
push
subl
movl
movl
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
push
push
pushl
pushl
push
push
push
pushl
call
cmpl
jb
neg
mov
push
xor
mov
mov
xor
xor
mov
adcl
jmp
popa
sahf
cmpsl
mov
jno
mov
in
sbb
das
jo
fnstcw
jo
pushf
jae
cltd
xchg
xchg
sub
jbe
pop
je
mov
iret
add
or
jnp
inc
jb
or
ret
dec
mov
push
mov
repz
mov
dec
movsl
mov
hlt
sbb
jb
xor
push
lock
mov
jae
outsb
subb
inc
pop
mov
inc
dec
add
xor
shll
inc
inc
call
lock
mov
cwtl
shlb
mov
std
lock
shlb
adc
fbstp
popf
test
dec
jne
sub
mov
test
sti
into
add
ja
pop
cmp
mov
xor
fldl
and
call
into
mov
iret
test
lret
jge
inc
hlt
cli
ds
mov
pop
push
out
add
inc
xor
pop
lock
insl
and
and
aas
ror
adc
pop
shll
sar
mov
outsl
xor
push
cmpsb
int
std
jno
mov
xor
lds
mov
dec
push
and
mov
jecxz
stos
adc
lea
sub
je
fildl
pop
mov
jmp
les
and
inc
aam
cmpsl
test
pop
adc
mov
das
sbb
lret
sbb
fsubrs
mov
mov
ds
mov
mov
inc
and
pop
rorb
mov
push
popf
movl
imul
cs
or
jb
cmp
cmp
xor
es
pusha
pop
arpl
jbe
orb
jo
loop
popa
mov
inc
repnz
pushf
fnstsw
xor
icebp
pop
dec
mov
sub
cmpsb
outsl
mov
add
in
inc
enter
and
push
mov
inc
pop
flds
stos
or
and
inc
sub
jae
ss
cmp
test
mov
inc
cmpsb
loope
lds
lahf
sub
xlat
sti
pusha
leave
push
adc
mov
lods
adc
js
sahf
cltd
cmp
inc
imul
mov
xorl
add
imul
movl
mov
movl
cmp
movl
jne
mov
mov
xor
jmp
test
cmp
push
popa
andl
adc
test
jb
sub
jo
idiv
push
push
scas
fmuls
imul
mov
push
xchg
jmp
std
sub
idivb
and
push
sti
and
cld
push
iret
mov
cmp
hlt
sub
cwtl
cmp
into
cmc
stos
call
data16
stos
out
sbb
pushf
inc
les
cli
pop
push
dec
dec
arpl
mov
jbe
xor
and
mov
psubsw
lods
dec
out
aad
cmp
add
pop
cmp
push
imul
mov
ret
and
xchg
ljmp
or
or
pop
mov
mov
jno
lahf
sub
jns
and
cmp
test
jb
lret
inc
sub
mov
rcrb
iret
jo
push
cmp
aaa
sti
inc
cld
pop
jge
adc
cmp
mov
jecxz
jle
scas
popa
bt
cmp
fwait
or
mov
mov
std
push
adc
jo
add
decw
pop
adc
inc
lret
cmp
or
cmp
inc
and
dec
aam
mov
inc
in
xchg
cmp
jo
int
lds
sub
out
shrb
pop
lahf
les
push
push
aad
or
sbb
mov
xchg
icebp
das
dec
enter
pop
jnp
aam
xchg
cmp
mov
mov
pop
cmp
in
mov
cmpsb
clc
jns
sub
lahf
std
add
adc
jae
sarl
fst
ret
xor
xlat
sub
push
mov
fistpl
fiaddl
adc
sub
pop
dec
sahf
adc
pop
test
das
and
pop
jmp
insl
jo
push
sub
push
into
lret
loop
cmpsb
aas
fisubs
sub
cmp
repnz
cmovnp
popa
jns
xchg
lods
cs
push
test
add
xlat
pusha
push
fldenv
mov
repz
xor
cmp
mov
pop
scas
push
xlat
dec
push
push
jne
imul
add
clc
add
pushf
adc
cmp
fidivl
xchg
pop
in
cmc
add
adc
pop
mov
lret
in
push
push
jmp
cmp
sbb
push
jbe
aas
push
xchg
jnp
dec
outsl
clc
popa
adc
fdivr
out
sub
enter
loopne
dec
push
jns
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
jmp
shll
add
ret
loope
and
adc
sub
fnstcw
jo
inc
push
cltd
js
cmp
lods
pushf
add
std
jo
mov
mov
or
and
mov
popf
adc
loopne
data16
jns
repz
lahf
ret
sarb
insb
rorl
es
sub
mov
and
jnp
mov
mov
aaa
adc
xor
mov
mov
imul
lahf
lcall
cmc
jns
cmp
mov
stc
pop
subl
dec
jae
mov
mov
popf
cmp
mov
and
addr16
mov
xchg
push
fs
pop
outsb
rorb
xor
lods
pushf
and
das
rolb
cmp
push
sbb
push
ja
push
jns
jg
loopne
outsl
dec
jp
dec
cltd
mov
arpl
push
in
cmp
fcoml
sbb
imull
call
push
sti
rcll
add
iret
or
adc
hlt
jo
mov
inc
shrd
mov
popa
rcll
into
into
mov
fidivs
shr
in
xchg
mov
outsl
adc
fisttps
mov
lcall
in
mov
loop
or
push
cmp
ss
lret
pcmpeqb
dec
jecxz
mull
call
mov
xor
inc
pop
or
not
mov
add
push
inc
adc
cltd
pop
xchg
stos
insl
mov
jne
pop
mov
cmp
xor
out
mov
adc
test
in
push
lret
cmpsl
sub
cs
dec
push
dec
or
fdiv
in
stc
pop
xorb
xchg
mov
aam
mov
sub
daa
push
add
add
xchg
movsb
add
idivb
lret
icebp
cmp
sbb
adc
or
mov
mov
loopne
xchg
negl
mov
cltd
in
fcompl
aad
loopne
push
adc
adc
pushf
push
xlat
imul
mov
push
adc
mov
fcmovu
mov
mov
jne
inc
popa
xchg
inc
shrl
cmp
dec
push
push
das
imul
cmp
addr16
insb
push
nop
dec
out
mov
outsl
or
icebp
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
movl
mov
mov
mov
adcl
xor
add
andl
mov
mov
mov
sub
xor
mov
dec
xor
dec
jmp
loope
xchg
fdivs
jno
addl
subb
jo
loopne
pop
and
stos
test
test
xchg
cwtl
pop
and
ret
out
xlat
inc
insb
mov
jle
test
cmp
ficoms
xor
cwtl
shll
jmp
lahf
mov
xlat
pop
mov
mov
popf
jg
inc
or
lds
adc
ror
cltd
push
mov
gs
movsl
test
movsb
mov
es
push
aaa
cmp
jmp
pop
stos
or
popf
clc
fwait
pop
fstpl
mov
inc
not
jecxz
mul
push
clc
dec
cmc
push
xchg
and
int
mov
ficomps
fidivl
insb
fisubrl
and
rcrb
or
mov
add
or
and
jno
cmp
mov
mulb
loope
xchg
xor
lret
cld
mov
dec
adc
sbb
fisttpll
data16
popf
lret
je
mov
mov
push
mov
out
pop
lret
rolb
fldenv
xchg
andb
sub
add
les
or
rol
fs
pusha
adc
dec
pusha
fucomp
push
pop
and
ficoml
adc
movsl
call
ret
aaa
shlb
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
mov
adcl
add
mov
movzbl
and
mov
mov
movl
mov
xorl
mov
mov
mov
mov
mov
mov
mov
mov
jmp
hlt
and
arpl
jno
scas
mov
sub
jo
jg
jo
xchg
dec
bound
and
popl
lret
fadd
sti
sub
mov
or
cwtl
aad
mov
inc
gs
pop
push
cwtl
xchg
in
add
cmp
ss
rcll
xlat
mov
cltd
mov
out
pop
and
push
cli
repnz
outsb
sub
cld
das
dec
xor
pop
sbb
xchg
test
mov
test
vcvttps2dq
and
mov
push
inc
cld
subl
add
or
jge
push
jns
and
xor
and
ljmp
pop
and
mov
push
xchg
mov
pop
mov
in
es
roll
enter
sbb
adc
cmp
fidivs
dec
cli
push
sub
dec
std
jbe
lods
push
add
in
aas
lret
push
inc
in
scas
or
xchg
sub
in
repnz
inc
aam
adc
dec
xor
outsl
lcall
add
or
fdivrp
aad
push
mov
or
sbb
movsl
cmpsl
and
add
jae
je
mov
and
fmull
inc
shll
jo
enter
jbe
sbbb
lods
dec
adc
out
loopne
aas
sbb
cmp
xor
add
pop
leave
ret
push
mov
mov
xor
jmp
cmpsl
sub
mov
mov
xor
xor
jo
fidivs
xor
xchg
or
and
out
push
and
xchg
frstor
adc
or
sub
sub
popf
inc
push
cwtl
stos
dec
push
sbbl
or
mov
dec
test
mul
jns
and
dec
ret
movsl
pop
inc
and
cmc
mov
bswap
fisubrs
pop
pop
daa
cs
rcr
fmull
repnz
bound
inc
mov
adc
push
mov
push
xchg
inc
xchg
int3
mov
sub
lret
mov
lret
adc
add
sbb
mov
adc
fucomip
lods
xchg
jmp
aaa
aad
jecxz
xor
jl
mov
sub
mov
cmp
xor
dec
jmp
sti
cmp
inc
push
cmpsb
xchg
push
in
aas
cltd
sub
mov
lahf
data16
cwtl
stos
inc
dec
jmp
ljmpw
mov
sub
xor
push
dec
push
leave
fcoml
lods
pop
leave
mov
aam
loope
roll
pop
iret
adc
push
jle
aad
add
scas
enter
push
sbb
inc
in
sub
ljmp
cmpsb
lea
push
and
mov
div
mov
and
or
mov
pop
ret
push
mov
push
movl
add
mov
mov
mov
mov
add
mov
xor
subl
add
xorl
mov
incl
mov
subl
mov
mov
mov
mov
adcl
mov
mov
mov
subl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
add
mov
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adcl
mov
mov
mov
adc
movl
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
push
push
pushl
push
push
push
push
push
call
jmp
sbbl
mov
push
sbbl
push
push
mov
andl
jmp
mov
jmp
sub
aaa
stos
iret
rorb
jo
test
jbe
rcrb
mov
push
fstpt
cmp
lds
sub
xor
jge
pop
mov
sarl
adc
xchg
adc
lock
and
mov
cltd
cmp
subl
or
cmp
stos
bound
mov
lret
xor
imul
mov
or
adcb
pusha
mov
or
adc
cmp
dec
jg
mov
in
xor
ret
stc
xor
pop
imul
lods
cmp
and
ljmp
lret
or
xor
jnp
mov
mov
mov
ss
dec
loope
sbb
imul
pop
repz
pop
mov
mov
push
scas
xor
jecxz
adc
pop
xor
movsl
cmp
jo
es
add
loop
leave
xchg
mov
xchg
or
jl
cmp
stos
test
add
mov
or
xor
and
ret
and
ret
and
push
dec
xchg
add
movsb
icebp
dec
dec
xlat
xchg
int
jnp
mov
jne
push
insl
mov
into
sbb
shll
mov
jae
mov
inc
fmul
jecxz
ss
fldenv
std
clc
sbb
push
sub
cmpsl
push
vandps
push
jne
dec
jno
or
addr16
mov
lcall
ss
or
lret
push
cli
add
ljmp
dec
aam
jmp
cmp
dec
add
jle
dec
adc
xchg
rcrb
gs
mov
push
js
idivb
jle
sbb
fwait
les
cltd
jle
push
ficomps
inc
flds
test
cmpsl
int3
push
in
cmp
gs
clc
push
inc
lds
pop
pop
divl
lcall
in
cmpsb
mov
inc
jle
sub
adc
xchg
aas
js
test
in
jo
and
sub
cs
xchg
mov
dec
cmp
jl
mov
icebp
mov
cmc
sbb
adc
ret
adcb
test
sub
xchg
push
dec
pop
pushf
rorl
jge
fsubr
xchg
ljmp
rcll
dec
xchg
out
shll
adc
push
imul
dec
mov
insl
sub
ja
or
es
xchg
adc
pop
test
pop
sbb
xchg
sub
push
dec
xchg
icebp
cmp
push
notl
and
rorl
cmpsl
insl
or
imul
jae
mov
sbb
mov
add
push
jne
insb
testl
ffree
jl
hlt
cmpsb
fwait
cwtl
xor
add
mov
andl
add
jmp
xchg
test
xchg
jno
xchg
js
dec
sbb
jo
and
jo
jns
fsubr
add
out
scas
add
sub
jg
sbb
fsubrp
xchg
add
cmp
xor
mov
xchg
add
xchg
xchg
aam
dec
popf
dec
adc
push
dec
fcmove
push
push
jmp
pushf
mov
and
mov
fwait
add
jno
mov
mov
xchg
push
test
cmp
sbb
cmp
add
inc
inc
pusha
jmp
sar
inc
inc
and
push
mov
jle
mov
push
inc
in
jbe
cmpsl
test
push
int3
jle
pop
jmp
jp
test
dec
jp
imul
xor
mov
adc
add
pop
jge
lret
jne
rcrl
adc
mov
shrb
xor
stos
jp
cmc
cmp
repnz
orl
popa
cmp
and
lock
sarl
rorl
lcall
mov
pop
out
sti
xchg
mov
popa
fsubrp
cwtl
lock
mov
jecxz
pop
sub
push
push
jecxz
test
push
mov
jg
push
shl
stos
add
mov
push
ret
push
shlb
push
out
and
aas
loop
and
testb
je
out
fcmovb
outsl
leave
cmp
mov
xlat
xchg
mov
subl
test
ret
jmp
xorb
sbb
cmp
adc
push
adcl
stos
jmp
les
adc
xchg
pusha
xchg
shrl
jbe
mov
stos
clc
in
push
cli
ret
cmp
pushf
jnp
fistl
mov
pop
daa
mov
xchg
fldenv
daa
push
out
loop
movsl
mov
ficompl
cmp
imul
push
xor
js
or
mov
arpl
clc
push
rcrb
mov
lcall
xchg
mov
mov
int
addr16
clc
cld
pop
stc
loopne
mov
pop
iret
xchg
mov
mov
sarb
jbe
add
sti
xlat
add
inc
push
xorl
in
clc
lea
jge
pop
mov
sub
jae
pop
sub
xchg
stos
push
ret
mov
jp
sub
incl
aas
push
mov
inc
adc
or
iret
dec
or
mov
pop
cmpsb
or
sub
jbe
scas
mov
push
mov
jmp
cmp
jbe
mov
pop
sti
andb
gs
pop
pushf
test
sarb
sbb
xor
pop
leave
lods
loop
stc
push
sub
je
mov
jl
dec
mov
mov
cmp
ret
inc
push
stc
xchg
sub
popa
mov
rcl
dec
addr16
out
popl
jns
mov
inc
out
mov
cmp
xchg
pop
xchg
popf
xchg
fmulp
out
and
add
subb
sti
mov
push
bound
jecxz
xchg
jg
push
inc
loopne
xor
hlt
es
add
inc
fdivs
mov
clc
movl
movl
xor
movl
xor
mov
subl
xor
addl
add
adcl
mov
movl
sbb
movb
or
mov
xor
add
mov
neg
mov
sbbl
xor
add
subl
push
sbb
mov
subl
xor
adcl
add
push
add
mov
addl
xor
add
addl
push
lea
push
pushl
adcl
pushl
call
subl
jmp
test
xor
mov
test
push
fcmovb
fisttps
pop
add
jo,pt
and
jo
cmpsl
sub
loop
xor
add
add
loope
enter
xlat
pop
inc
test
push
mov
push
in
jnp
jnp
adc
inc
scas
add
add
mov
mov
mov
lcall
xchg
mov
call
lods
test
aaa
mov
xor
loope
out
mov
rcr
cmp
shlb
aam
ss
shlb
mov
lahf
mov
mov
sub
xchg
fs
mov
mov
gs
stc
idivl
xor
rorb
rcll
gs
mov
adc
sbb
das
jb
dec
cwtl
stc
cmp
test
test
repz
out
in
cltd
xchg
into
jb
cmpsb
int
push
xor
mov
inc
add
iret
and
jo
imul
rorb
add
fsts
std
mov
jp
mov
xor
cmc
cmc
sub
mov
push
int3
arpl
inc
stos
in
les
lcall
and
pop
call
xchg
sub
cmp
pop
call
push
rcrl
scas
and
xchg
rclb
pop
mov
lret
push
not
ja
dec
cmpsl
nop
or
insl
pop
sub
mov
loop
jl
jbe
insb
cli
in
mov
icebp
pop
mov
inc
sbb
or
or
jnp
xchg
adc
pop
pmaddwd
mov
cmpsb
and
outsb
mov
lret
lods
ficompl
cmp
lods
aaa
dec
cwtl
popa
stc
jge
aad
jno
clc
jne
cwtl
jle
mov
lods
sti
mov
call
addr16
inc
sub
sti
add
cmp
cs
sar
jmp
fidivs
stos
out
pop
and
and
push
xor
insl
inc
scas
mov
aas
ret
jne
or
lods
xchg
std
push
in
das
inc
int
cs
push
pop
scas
push
mov
push
and
pop
sbb
lret
mov
movsb
fs
cwtl
adc
fmull
lods
or
imul
inc
dec
imul
xchg
pop
cli
sub
test
ja
and
sub
xor
data16
add
fdivrl
imull
mov
jo
inc
adc
pop
imul
jp
adc
dec
mov
xor
ljmp
in
ds
cmp
and
jae
sbb
out
push
push
loop
in
mov
aad
push
loope
stos
and
pusha
mov
ss
test
fwait
test
das
scas
lods
xchg
sbb
xchg
sahf
dec
test
icebp
fmuls
xchg
pop
popa
sti
pushf
cltd
and
add
or
jge
adc
insl
inc
sbb
mov
lcall
lret
xchg
int
ss
popa
das
sbb
add
push
call
fbld
pop
stos
lods
loopne
clc
lahf
call
push
mov
add
add
jno
add
je
lea
sbbl
push
sbbl
mov
andl
xor
add
push
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
jmp
mov
add
mov
aaa
js
push
sbb
jo
and
jo
pusha
inc
js
addr16
cmp
in
out
sub
imull
jp
jnp
mov
pop
xchg
stos
mov
sahf
dec
xchg
es
int
loopne
sub
out
iret
fldl
add
xchg
aaa
movb
jbe,pn
mov
test
fstl
inc
int
or
icebp
mov
aas
jbe
into
iret
loope
aas
pop
stos
mov
fdiv
xchg
out
sub
mov
pop
out
stos
mov
lret
mov
popf
pop
mov
push
test
pop
mov
data16
push
cli
pop
and
jge
add
aam
sub
dec
xor
insl
pop
mov
imul
or
fwait
xor
push
add
adc
inc
mov
sbb
mov
jae
loopne
inc
mov
mov
int
imul
insb
jno
addr16
cmc
mov
adc
lods
add
xor
lods
push
leave
test
aad
sub
rcrl
mov
push
push
add
mov
xor
sbb
sbb
xor
rcrl
stos
add
mov
orl
pop
sbb
in
sbb
mov
mov
jecxz
jno
dec
lret
jne
sbb
pop
les
dec
cs
ds
pushf
aad
pop
mov
and
out
mov
in
in
fcomip
add
inc
fadd
dec
das
test
js
inc
jmp
xchg
shl
pusha
and
sbb
sbbb
cli
push
jg
cmp
imul
loope
movsl
arpl
cmc
mov
aaa
cmp
aad
add
int
xchg
scas
in
xchg
add
inc
mov
jno
pop
inc
or
jl
outsl
aam
int3
cmp
mov
pop
icebp
jmp
dec
mov
cmc
adc
fdivrs
rol
push
or
push
adc
fldt
sbb
cmp
sub
and
stos
push
adcl
mov
lea
leave
dec
adc
pop
stos
ljmp
ficompl
xor
or
sub
sub
ljmp
cmc
add
adc
loope
jg
test
adc
testl
data16
test
jns
sub
cmc
js
jns
fbld
mov
int3
pop
sub
xor
inc
mov
fcmovb
aam
cli
shr
dec
sub
xchg
push
xchg
sahf
cmc
mov
jae
fs
insb
pop
xchg
pushw
mov
jmp
jo
xchg
xchg
test
addr16
mov
jg
cmp
mov
arpl
or
cmpl
ffreep
xchg
lods
jne
dec
jbe
leave
fsubrl
test
pop
jl
repnz
pop
pop
mov
inc
fadds
scas
push
clc
in
pop
dec
pop
jg
mov
push
ljmp
cmp
mov
popa
popa
sbb
jne
call
test
je
lea
jmp
enter
outsb
bound
adc
pop
lret
jo
and
jo
mov
ficoml
xor
idivl
dec
adc
cmp
mov
out
mov
dec
jne
inc
stos
inc
lods
mov
cmp
sbbl
jbe
jle
push
cmp
loope
push
scas
int3
int
or
call
test
or
popa
jb
fdivl
icebp
xchg
dec
call
pop
icebp
bound
xchg
popf
iret
frndint
lahf
cmp
add
mov
mov
and
insb
sbb
pop
add
pop
mov
or
jecxz
and
lret
into
mov
dec
nop
mov
imul
xchg
and
mov
xor
repz
xchg
iret
es
adc
pop
add
jno
adc
xchg
scas
mulb
and
xchg
repz
jnp
stc
xor
loop
mov
mov
and
mov
inc
and
hlt
lret
and
pop
mov
xorl
sub
aam
in
out
push
gs
jecxz
or
rcrl
or
push
or
push
pop
bound
push
addr16
vrcp14sd
ret
dec
push
hlt
add
loopne
test
shl
mov
repnz
mov
fsubl
mov
shrl
jl
loop
cld
insl
nop
repz
insl
int
push
sti
mov
cmpsl
and
add
les
jl
push
stos
mov
frstor
jl
cld
lea
mov
fwait
ss
mov
ja
mov
in
push
aaa
mov
mov
pop
add
repnz
into
sub
push
xor
pop
outsb
and
add
fwait
jae
icebp
aad
sub
mov
xchg
dec
adc
inc
fwait
stc
jae
stc
push
xchg
out
mov
es
mov
subl
pop
or
lret
and
cltd
dec
jns
out
ret
dec
sub
lret
xor
test
push
movsb
mov
je
jae
mov
ljmp
movsl
jle
fimuls
std
insl
xor
fimull
sbb
inc
jno
sub
or
jbe
mov
flds
out
lahf
jmp
jmp
sahf
mov
adc
lods
je
inc
insb
pop
jp
xchg
xor
addr16
cmp
mov
mov
daa
sub
cltd
push
mov
inc
add
mov
sbb
cwtl
and
adc
cmp
das
mov
mov
dec
sub
and
xchg
inc
sbb
dec
scas
jbe
out
adc
fcompl
push
fwait
negl
sbb
sbb
inc
push
pop
inc
sbb
xchg
imul
sub
addl
outsb
mov
es
testb
and
and
mov
dec
jge
mov
pushl
dec
ucomiss
aas
adc
jbe
aad
in
out
lret
jbe
sbb
mov
push
mov
xor
add
push
mov
add
push
mov
jmp
inc
jmp
cwtl
loope
inc
pop
mov
mov
sti
les
and
jo
shl
testb
mov
rorl
ljmp
and
lock
out
adc
jge
bound
mov
int3
pop
testl
jp
inc
loop
mov
bound
push
insb
test
jb
mov
imul
fsubl
dec
ret
stos
push
or
cmc
xor
ret
out
push
or
jnp
imulb
int3
imulb
push
sub
icebp
movsl
pop
pop
ja
fs
mov
ficoms
mov
jnp
cmp
and
fidivs
aas
dec
or
fisubl
out
mov
sti
aas
pop
int3
fildll
outsb
repz
hlt
push
mov
rolb
aam
loop
inc
sahf
cs
cmp
ds
cmp
mov
xchg
loope
shr
jae
cmc
mov
adc
flds
jecxz
fmuls
jl
mov
and
iret
pop
and
and
icebp
scas
add
int
sbb
and
inc
mov
fstl
popa
addr16
shll
cs
cmp
jbe
cmp
dec
sahf
gs
or
mov
adc
or
jnp
data16
sahf
cmpsl
test
xchg
test
insl
dec
sbb
pop
test
cmp
cltd
enter
mov
dec
test
ss
push
out
stc
and
out
push
rcrl
inc
xor
inc
roll
sub
stc
sub
push
fwait
and
add
jecxz
xor
pushf
push
jl
movsb
std
xchg
and
mov
push
stos
push
push
shrb
xor
mov
fldt
cmp
xor
push
add
sahf
mov
mov
mov
imul
addb
aaa
inc
std
jne
in
xor
mov
xchg
pusha
jg
rcrl
mov
int3
sti
dec
add
dec
mov
jns
pop
push
jns
fiaddl
push
dec
dec
faddl
inc
adc
in
cmp
jb
aaa
decl
push
lods
jecxz
mov
jb
sahf
pop
inc
in
dec
cmp
pop
xor
lcall
inc
cs
mov
sti
inc
fmull
cltd
enter
xor
icebp
sbb
pop
sbb
push
std
dec
pop
lcall
movsl
icebp
pop
or
jg
es
cmp
cmp
insb
jp
jp
frstor
jp
mov
sbb
fs
cmp
test
sub
mov
jmp
data16
sub
push
jns
out
push
mov
adc
es
shll
cmp
cmp
lret
mov
lds
mov
in
xchg
xorl
dec
jae
rolb
movsl
iret
lods
xchg
pushf
mov
scas
ret
sbb
sub
cs
stos
hlt
lea
repnz
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
jmp
sub
cs
cs
mov
sbb
into
pop
popa
add
stos
shll
jge
jo
scas
add
js
sbb
add
fs
les
or
ljmp
cmp
jnp
pop
sbbb
lret
fsub
not
loop
lret
int3
mov
push
mov
roll
sub
inc
xor
movsb
insl
popf
xor
lods
aad
mov
inc
outsb
jmp
cmpb
adc
mov
loope
mov
xchg
adc
imulb
cmpsb
mov
into
xor
enter
movsl
pop
fiadds
xlat
scas
addr16
loope
lods
cltd
neg
push
ret
sub
cmc
lret
rcl
test
mov
in
cmpsb
notb
xor
and
or
inc
cmpsb
lods
sub
cld
add
cwtl
hlt
pusha
rcll
pop
pop
out
aas
hlt
jle
xchg
add
jge
dec
test
pop
mov
hlt
gs
push
xor
js
sbb
or
mov
or
fdivp
dec
popf
xlat
nop
mov
shll
iret
mov
es
dec
or
test
fcomps
or
cltd
daa
add
xlat
fiaddl
push
jae
lahf
cmp
jecxz
sahf
or
call
mov
in
or
stos
dec
rorb
fcoml
mov
movsb
shll
cmp
cmp
aas
mov
js
xchg
add
loop
fadds
lahf
mov
mov
clc
push
pusha
and
jns
lcall
xor
popf
out
ficoml
jnp
out
ret
xchg
pop
cmpsl
or
out
xchg
push
cmp
or
push
lods
or
int3
and
mov
lods
jl
aam
xchg
rcrw
mov
fcoms
dec
xchg
inc
jmp
jo
ja
dec
jp
xchg
popl
sub
loope
test
insl
pushf
aas
cmpsl
shlb
andb
arpl
push
out
sbb
jns
inc
shl
leave
lock
loopne
dec
les
clc
fldt
fsubrs
sub
imul
aam
shll
inc
lock
movsb
js
or
test
subb
xchg
and
call
fists
push
enter
adc
xor
mov
call
enter
ljmp
mov
cmpsl
sbb
jmp
pop
out
das
stc
xabort
jge
xor
dec
das
adc
cmp
xchg
push
inc
sbb
or
aas
outsb
lahf
mov
mov
jns
push
jecxz
rorb
dec
jl
sbb
xchg
mov
cmp
cmp
cmp
ss
stos
aas
xchg
into
in
into
and
push
jle
js
mov
cs
loopne
inc
hlt
hlt
xchg
and
loopne
mov
mov
sbb
gs
scas
sbb
loopne
push
lds
mov
scas
xchg
jle
xor
xchg
xchg
or
fcomps
fisubl
ds
push
sbb
std
xor
or
jne
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
mov
add
pop
pop
pop
leave
ret
push
mov
sub
push
sbb
mov
mov
mov
sub
xor
mov
adc
mov
movl
sub
movl
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
or
xor
mov
adc
add
mov
or
mov
adc
mov
sbbl
xor
add
mov
or
mov
mov
inc
movl
movl
cmpl
je
cmpl
jne
call
xor
add
dec
mov
jmp
mov
mov
sub
add
jmp
fldcw
cs
mov
jae
shll
dec
mov
jo
imul
sub
dec
add
and
jbe
dec
mov
in
subl
and
or
dec
cli
loope
out
xor
xor
int3
jno
mov
ds
call
sbb
cli
jb
mov
add
das
rol
mov
mov
stos
and
sbb
out
dec
aaa
lea
mov
gs
pop
sbbl
outsl
loope
test
add
aaa
and
pop
adc
inc
cmpsb
xchg
lcall
sub
mov
out
xlat
adc
or
in
adc
push
pop
dec
cvtps2pd
sub
scas
jge
push
pop
mov
daa
ss
stos
add
mov
movsb
cmpsl
mov
mov
insl
lret
nop
mov
popf
ljmp
mov
repz
rorb
mov
lea
mov
xchg
dec
xorb
mov
ljmp
sub
sbb
mov
sahf
pushf
jge
sbb
enter
pop
rep
into
sub
stos
mov
mov
sti
cmp
cld
sbb
test
sub
push
movsl
les
cmp
lods
ret
cmp
rorb
fcomps
lahf
or
dec
mov
xchg
stos
mov
mov
add
daa
mov
movsl
pop
inc
enter
push
lret
lds
push
pop
mov
data16
jp
lods
dec
fucomip
fwait
lret
sub
add
insl
jle
std
add
ret
xor
dec
mov
mov
ss
nop
pop
int3
test
jno
lahf
xor
sahf
jo
ret
push
in
pusha
and
sbb
inc
icebp
iret
adc
mov
movl
add
movl
mov
sub
movl
movl
and
movl
jmp
lods
mov
jno
fidivl
sub
push
int3
jo
imul
in
xchg
icebp
dec
bound
dec
ss
repz
iret
or
dec
mov
push
push
popa
sbb
mov
movsb
adc
mov
ror
js
jne
mov
pusha
or
or
and
fisubrs
dec
push
add
xchg
mov
dec
ficompl
mov
jb
stos
push
cli
add
dec
inc
sti
cltd
cli
es
movsb
imull
and
hlt
stos
imul
out
cmpsl
inc
mov
sub
imul
popa
mov
cmp
xchg
xor
call
or
mov
enter
fisubs
adc
mov
ret
inc
iret
loope
push
push
xchg
dec
fmuls
jge
or
loop
push
fwait
out
xchg
test
xorl
mov
jg
jb
loop
xor
in
arpl
ja
push
jmp
or
pop
dec
call
nop
mov
mov
xchg
fdivs
dec
push
popa
xchg
adc
ds
in
adc
mov
xor
das
out
shr
movsl
xchg
aas
add
test
dec
jle
or
lea
andl
xchg
dec
fisubs
repz
lods
adc
pushf
es
add
dec
fists
cmp
in
mov
xchg
lock
sarb
call
add
aas
sub
sub
addb
adc
xchg
inc
cld
cmp
js
mov
xchg
lahf
mov
ficompl
iret
jno
mov
add
pop
fcompl
ret
hlt
add
ror
push
and
dec
lds
inc
cmpsb
add
pop
xchg
sbbb
fcoml
push
and
enter
int
insb
push
mov
push
or
test
inc
add
add
add
add
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
xor
sbb
mov
add
cmp
jmp
mov
jae
xchg
xor
xchg
push
push
enter
jo
jg
jo
push
outsl
and
and
test
and
pop
lcall
cwtl
sub
je
and
inc
fs
fwait
mov
push
aad
adc
orb
jne
pop
ss
scas
shll
inc
sti
fwait
or
test
push
or
adc
rcll
and
xchg
or
ss
and
scas
jp
in
fsubl
fnstsw
fcoms
dec
jo
cmp
jecxz
dec
or
lock
pop
fisubs
sti
pushf
xchg
jae
imul
out
pop
xchg
popf
adc
and
ficompl
inc
xor
xchg
aad
push
sbb
mov
popa
xchg
test
cmp
add
js
addr16
jnp
adc
pop
xchg
cmp
mov
mov
dec
pusha
jno
push
ret
daa
sbb
or
out
push
out
rorb
add
lahf
push
call
xor
jno
jge
into
int
cmp
cmp
fsubs
xchg
lock
psubusw
mov
lods
sbb
test
push
and
push
jl
cld
add
stos
imul
clc
aad
pop
xlat
mov
mov
cltd
outsl
sbb
or
mov
jb
or
xor
mov
imull
jg
icebp
cli
dec
and
push
mov
repnz
cmpsl
xlat
push
imul
mov
scas
dec
and
ja
stos
mov
or
and
in
ss
aam
push
jle
add
lods
loopne
jp
in
pop
and
loopne
cmp
test
lcall
repnz
stos
cwtl
push
mov
inc
out
out
inc
rcl
std
enter
jl
xlat
cs
filds
mov
pop
ss
mov
add
data16
adc
push
push
adc
dec
pop
jns
sbb
sub
xchg
mov
je
push
movl
jmp
movl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
jmp
jmp
adc
inc
jno
pushf
jo
test
popf
outsb
inc
enter
jg
jo
insl
sbb
jecxz
xchg
movsb
ret
mov
and
jbe
mov
pushf
pushf
mov
outsl
inc
or
xchg
bound
mov
xor
adcb
push
aad
sub
in
jp
jle
push
adc
cs
mov
testb
mov
inc
cmp
pop
inc
rcrb
arpl
mov
loopne
or
xchg
lock
cmc
cmp
inc
adc
imul
adc
push
fwait
aam
add
and
lods
out
popf
mov
les
pop
les
lods
jne
jmp
insb
jmp
mulb
mov
or
add
dec
adc
mov
cs
dec
aam
mov
pop
mov
xor
push
xlat
cli
pusha
cmp
fs
xchg
add
pop
rcll
imul
frstor
dec
gs
in
jecxz
aam
out
cli
add
or
push
pop
lcall
ret
mov
add
pop
sbb
aas
xor
xchg
leave
nop
clc
adc
pop
je
adc
and
push
int3
mov
idivl
mov
movsl
push
mov
pop
sti
and
clc
cmpsl
and
mov
xor
jecxz
xchg
aaa
cld
loope
xchg
push
adc
xchg
fstpt
adc
push
xor
scas
popa
sbbb
jae
enter
call
and
or
cmc
or
ja
inc
out
inc
orl
push
cmpsl
push
ljmp
or
push
mov
outsl
dec
mov
jae
lret
jo
jbe
pop
jbe
fcompp
insl
pop
dec
lock
arpl
stos
fs
shrb
and
xchg
cwtl
sub
mov
xor
sbbl
add
movl
cmp
movl
jmp
sbb
pop
mov
loope
push
inc
test
and
jo
imul
or
adc
lods
xchg
jl
adc
or
mov
sbb
xchg
cmp
addr16
outsb
es
adc
jbe
cmp
adc
push
inc
jle
loopne
mov
push
ret
shrb
sbb
out
aas
jp
dec
andl
jae
int3
gs
loopne
or
xor
fcmovnu
pop
pop
xchg
inc
cs
xadd
sub
outsl
dec
aad
insb
int3
test
cmp
sub
xchg
test
dec
add
cmc
inc
and
aas
into
inc
or
and
fbstp
dec
je
push
adc
stc
lods
int3
mul
dec
enter
in
push
jecxz
sbb
comiss
or
out
mov
fucomp
arpl
pushf
fldt
add
lods
cmp
cmp
adc
adc
mov
cmp
je
nop
jne
sahf
jb
and
or
jle
lea
jb
mov
fnsave
ret
cmc
push
jae
sti
jmp
mov
sub
aas
lret
sub
sub
sbb
fs
mov
cs
js
cmpsl
pop
sbb
mov
push
cmc
rol
pop
setns
and
and
xchg
rcl
jno
loope
cs
jo
lea
jecxz
cld
fsubp
inc
jle
pop
push
lds
lea
in
cmp
dec
cli
lock
sbbb
mov
jns
cld
in
test
add
repz
test
ficoms
push
sub
mov
or
int
dec
aad
push
pop
adc
lods
orl
faddl
mov
add
popa
and
sub
jmp
out
mov
fst
or
push
lods
or
sbb
add
lds
add
sub
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
add
mov
add
add
add
imul
mov
mov
or
mov
sub
cmp
movl
ja
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adcl
jmp
rcrl
popf
push
stos
arpl
mov
adc
test
jo
imul
jns
cmp
fwait
fcmovbe
sahf
dec
sub
or
inc
and
sbb
lret
push
jo
push
pop
sub
sub
or
jne
std
mov
fwait
push
pop
pmulhw
add
adc
inc
sub
add
addr16
mov
sbb
inc
and
pusha
dec
bound
shlb
mov
sbbb
cmc
sarb
jmp
div
ss
imul
dec
sbbb
dec
sub
iret
hlt
inc
cmc
sub
xor
mov
mov
mov
jle
pop
cmpsl
rclb
ret
dec
std
in
subb
adcb
adc
fbld
mov
push
inc
mov
lret
adc
sbb
xchg
mov
shrl
notl
add
dec
push
pop
subl
mov
mov
mov
enter
mov
jno
lds
out
std
xor
movsb
int
fnsave
scas
push
mov
out
idivb
lret
into
in
xor
lock
jle,pn
cld
jge
stos
pop
subl
rol
ja
int3
add
dec
lea
pop
int
push
test
pop
std
xchg
lcall
pop
outsl
mov
mov
jmp
insb
je
scas
sub
mov
movsb
test
inc
cld
out
mov
adcl
popf
rclb
sub
out
push
adc
test
mov
lcall
jge
fisubrs
cli
mov
pop
mov
icebp
mov
jg
dec
push
sahf
stos
inc
add
sbb
push
xchg
stos
xchg
mov
stos
jl
mov
sub
pop
ss
test
hlt
cmpsl
xchg
out
mov
inc
pop
xchg
ficompl
movsl
sub
stos
mov
xor
add
movl
jmp
and
mov
or
mov
xor
not
xor
subl
add
or
add
or
imul
adc
mov
sub
mov
andl
sub
cmp
movl
ja
mov
movl
jmp
mov
mov
xor
xor
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
jmp
imul
jb
adc
icebp
mov
jg
jo
jl
xor
insb
mov
es
adc
in
xchg
pop
in
js
cmpsb
and
rolb
mov
jnp
call
mov
mov
lret
pop
xchg
lods
sbb
ljmp
leave
arpl
xrelease
decl
inc
pop
jl
add
push
mov
cs
jp
ja,pn
push
lods
mov
or
aam
cmp
scas
lods
mov
bound
sub
subl
xchg
adc
sar
jnp
scas
movl
mov
stos
rcrb
lret
ret
cld
les
sub
rcr
xchg
mov
pop
mov
sub
jns
cmp
jbe
test
push
sahf
and
jb
mov
mov
sbb
push
cwtl
lahf
loope
cwtl
jb
push
pusha
jne
push
jnp
mov
addr16
mov
sub
push
or
insl
in
add
ljmp
das
test
push
mov
and
dec
add
mov
rep
ja
fwait
dec
mov
into
shl
rcll
push
mov
mov
and
mov
mov
out
jno
jecxz
in
cmp
scas
decb
cli
xchg
adc
push
jmp
iret
aam
inc
cmp
jns
adc
outsb
es
ja
cmp
jl
out
push
push
repz
xchg
in
insb
in
push
loopne
in
lahf
mov
jae
mov
xchg
lahf
stos
fisubl
jnp
mov
pop
add
mov
mov
jo
pop
ss
fadds
flds
jmp
mov
xor
test
mov
cmpsl
cmc
imul
aas
and
sbb
rol
lods
pop
testb
add
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
jmp
arpl
push
out
jnp
int
xchg
dec
lcall
jo
add
mov
in
fisttpl
mov
mov
int
mov
add
mov
in
pop
xchg
xor
jle
test
fnstsw
add
xor
add
inc
or
test
push
sahf
es
bound
sahf
sbb
fiaddl
fisttpll
push
iret
lcall
push
out
cmp
lods
jo
pop
xchg
stc
outsb
mov
mov
ja
jg
push
sub
iret
add
mov
mov
pop
loopne
call
xchg
in
mov
pop
push
roll
push
jecxz
es
daa
or
adc
fdivrs
call
lock
test
cmp
adc
stos
call
xchg
ret
xor
test
jo
mov
push
std
mov
std
mov
fwait
xor
aaa
lret
decl
mov
xor
lcall
fcmovb
mov
leave
pop
pushf
cmp
movsl
push
adc
xchg
dec
sub
jg
jge
clc
jbe
orb
leave
mov
arpl
jne
inc
cwtl
and
mov
ja
and
repz
sub
and
mov
mov
jb
int3
dec
into
fcmovbe
adc
repnz
andb
jecxz
mov
push
fdivp
xor
sar
in
sbb
add
cmp
pop
sbb
and
aad
push
js
stos
pop
dec
pop
insl
loope
mov
cmpb
imul
call
cld
dec
imul
or
sbb
mov
push
fmull
jne
in
and
pop
cwtl
test
popl
jle
faddl
sahf
cmp
nop
sbb
cmp
pop
lock
pop
fcomi
cmpsl
or
fstpl
jg
pusha
xor
mov
hlt
xor
add
mov
mov
mov
jmp
bound
popf
cmc
mov
cltd
insb
dec
or
ret
xchg
fidivs
imul
mov
negl
mov
and
inc
inc
aam
hlt
xchg
shlb
data16
push
add
mov
icebp
loopne
inc
sbb
xor
lea
scas
iret
mov
mov
jo
sti
arpl
push
out
insb
adc
jmp
repnz
aam
push
das
mov
lods
or
inc
test
ret
or
mov
lods
and
lock
push
xchg
sbb
xor
lea
shrl
add
xor
cmc
and
mov
rclb
sahf
inc
inc
lret
push
or
and
xchg
add
paddusb
in
push
push
addr16
inc
sub
and
loope
mul
mov
jle
push
mov
sbb
cld
sahf
adc
mov
into
push
aaa
packssdw
xor
out
testb
and
pop
jae
push
lret
sbb
aad
add
stos
and
push
scas
mov
inc
mov
arpl
fs
jbe
inc
cmc
mov
or
mov
adc
mov
mov
mov
sub
fs
movsl
pusha
lahf
or
enter
jmp
push
movsl
xchg
xor
insl
pop
push
out
mov
and
and
mov
mov
and
inc
jb
adc
adcb
jge,pt
inc
pop
or
fdivrs
and
cli
pop
sub
fnstcw
imul
ret
or
pushl
dec
pusha
jo
mov
movsl
mov
mov
scas
test
into
fnstcw
negb
add
sub
push
xor
dec
sub
aas
mov
jns
mov
pop
dec
pushf
add
inc
popa
xchg
and
ss
inc
shll
xor
movsl
push
adc
cmp
push
jnp
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
or
das
mov
push
test
into
lcall
jo
jg
jo
and
bound
pcmpeqw
adc
aam
movsb
stos
aad
jns
mov
in
jmp
mov
stc
shl
outsl
test
jmp
popa
mov
fidivrl
mov
add
out
sbb
mov
pop
pushf
or
jb
push
inc
icebp
pop
push
es
loop
mov
mov
mov
repz
adc
push
ljmp
loope
sbb
lods
movsb
mov
es
int3
jne
fnsave
inc
fcompl
mov
push
dec
jmp
std
dec
sbb
cmpsb
mov
popf
dec
push
into
lcall
jle
inc
out
imul
mov
or
jne
int3
ja
add
sbbl
gs
cmc
bound
out
push
rolb
jo
mov
cmp
aad
je
scas
adc
rclb
jl
call
inc
fimuls
sbb
xor
mov
lods
test
mov
je
jmp
xchg
sbb
pop
sub
jmp
push
loope
mov
outsb
jne
repz
or
adc
dec
mov
fwait
cli
adc
cmc
xor
add
jecxz
dec
or
lods
and
aad
push
mov
cs
cmp
inc
add
test
mov
popa
push
adc
mov
aad
push
ljmp
push
and
ljmp
push
sub
add
movsl
or
or
jo
cmpsl
or
add
inc
sbb
fdivrl
cli
and
int
arpl
icebp
jg
icebp
cltd
cmc
cli
jg
jge
jecxz
popa
popf
sub
mov
jp
sbb
adc
sbb
cvtdq2ps
pop
jbe
enter
pop
push
repz
nop
sub
cmpl
lar
add
xchg
mov
js
mov
andb
jo
jg
jo
ss
je
js
and
mov
xchg
lret
mov
in
mov
sub
lret
divb
stos
push
mov
push
sti
lds
repnz
xor
in
cltd
xchg
lock
jns
cmp
inc
test
xor
mov
mov
ret
lret
add
sub
nop
inc
ret
sub
outsb
dec
push
aad
out
jmp
inc
pop
subl
jo
xorb
lods
cmpsb
xchg
js
stos
and
adc
jecxz
mov
xchg
jb
jge
push
aas
outsl
and
das
ret
and
add
into
and
out
scas
stc
mov
hlt
ret
add
xor
mov
daa
int3
xchg
ss
cmpsb
add
pop
mov
out
xor
aam
jmp
xchg
mov
pusha
mov
jno
dec
popa
mov
and
js
repz
fiadds
jl
add
nop
dec
mov
sti
lret
ds
out
into
insl
xor
sub
push
and
mov
invlpg
lcall
mov
aaa
mov
aaa
cmp
cmpsb
popa
jae
or
imul
testl
into
pop
popf
int3
mov
gs
lea
jge
jbe
repz
js
test
inc
shrl
mov
dec
jmp
cs
mov
jo
cli
iret
push
or
ret
xchg
push
xlat
gs
jae
out
or
push
rorl
or
ljmp
shll
push
xlat
dec
popf
xor
cmp
mov
out
pop
adc
pop
and
mov
movsl
sbb
xchg
mov
add
mov
pop
sbb
and
dec
faddl
jmp
sbb
loope
dec
xchg
xor
mov
inc
cmp
mov
cmp
scas
xlat
jmp
clc
icebp
mov
icebp
ficompl
jno
fdivs
imul
test
sbb
mov
lret
imul
adc
jecxz
xor
add
ds
gs
dec
aad
repz
dec
cld
bound
dec
jne
jno
add
jno
cltd
cmp
or
xchg
add
fs
mov
pop
aam
add
jo
js
mov
sbb
imul
sti
dec
testl
sti
mov
lods
pop
dec
fs
outsb
enter
xchg
xchg
mull
xorb
add
nop
mov
xchg
xchg
cmpsl
repnz
insl
pop
outsl
xchg
in
xor
daa
or
ss
jbe
sbb
inc
insl
cmp
and
ds
hlt
jae
or
push
jp
pop
aam
sbb
dec
cld
out
cmc
mov
xchg
dec
enter
fildl
jne
and
stos
inc
cmp
jge
dec
cmpsb
data16
testl
je
lcall
ja
daa
outsl
dec
les
sub
aaa
mov
lea
or
dec
mov
and
push
pop
ret
xchg
and
test
push
insl
sub
leave
cmp
in
add
frstor
mov
xchg
mov
xor
dec
dec
gs
dec
pop
test
cld
jp
stc
fisubrs
adc
sbb
push
repz
jl
mov
or
cmp
fldenv
jbe
or
pop
lea
insl
lea
mov
int
pop
leave
scas
mov
inc
inc
sub
shl
aad
and
sub
inc
or
mov
loopne
jbe
mov
test
inc
je
pop
dec
mov
hlt
js
jno
add
test
inc
jno
inc
inc
imul
push
in
mov
mov
mov
xor
jmp
dec
iret
lods
dec
lods
imul
cld
fnstsw
jo
jg
jo
les
adc
mov
out
xchg
fwait
imulb
fisubrl
dec
adc
push
dec
cld
dec
inc
mov
das
xor
jl
mov
xor
outsl
sbbl
mov
pop
insl
push
inc
xchg
pop
xor
andl
jle
and
ja
test
fwait
mov
jns
lock
push
ret
mov
mov
adc
pop
push
dec
lds
pop
push
scas
mov
or
sub
ret
mov
loop
xor
fildll
dec
mov
xlat
jp
lret
push
sarl
push
pop
loopne
dec
aam
lret
stc
jmp
push
mov
pop
adc
xorl
xor
add
ret
push
xor
int3
loopne
sbbl
pushf
repz
js
insb
ss
js
cmp
outsl
mov
std
ljmp
outsl
and
inc
fstpt
ror
cmpsl
adc
fists
in
sub
lods
ljmp
sub
ja
stos
xchg
push
mov
cmp
arpl
in
stos
imulb
ret
lods
push
adc
inc
rcrb
sub
mov
out
xchg
outsb
stos
push
xchg
aad
subb
push
fwait
cmc
repz
fildll
jo
enter
inc
mov
sbb
adc
sub
xlat
mov
scas
mov
adc
xchg
sbb
mov
mov
fldt
mov
pop
xchg
xchg
es
inc
lods
loop
pop
adc
insl
mov
pop
xchg
mov
adc
jl
sbbb
and
jg
je
in
adc
sub
stos
push
lahf
xor
mov
shlb
ret
das
pop
ds
sbb
or
sbb
add
xlat
add
xchg
insl
mov
cmpsb
or
xor
mov
and
scas
xlat
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
jmp
int3
sub
push
mov
test
lcall
jo
out
sbb
xor
sub
or
pop
das
leave
cmp
xchg
xchg
lret
test
test
dec
pop
jb
cmp
div
inc
addr16
stos
sub
cld
jmp
jmp
xchg
jmp
fstps
dec
mov
aad
pop
cs
scas
xor
or
mov
dec
jge
dec
push
mov
fsubs
dec
out
mov
imul
int3
aam
xchg
mov
arpl
fwait
mov
xlat
fcompl
out
orl
inc
jge
mov
fmuls
push
push
js
cmp
mov
sub
xor
out
ret
mov
aas
shll
dec
outsb
lahf
sub
inc
mov
out
daa
inc
das
add
stos
mov
out
jo
sub
mov
stc
mov
stos
aaa
test
lret
or
cmpsl
movsb
addr16
adc
in
dec
inc
pusha
sub
add
lcall
mov
xlat
int
mov
sub
and
pop
icebp
jg
imul
mov
xor
inc
cmc
and
js
daa
jnp
frstor
aad
lahf
aas
cli
cmpsb
aaa
shl
clc
loopne
push
and
jno
rorl
cmc
lcall
test
stc
mov
leave
or
cmp
mov
fs
add
movsb
std
js
icebp
mov
or
imull
jo
mov
daa
cmpsb
dec
dec
or
loope
lock
repz
xchg
out
push
mov
push
push
insl
outsl
imulb
ret
push
enter
test
lds
inc
push
adc
jecxz
repnz
jbe
dec
jge
mov
aaa
sub
xor
imul
dec
out
cld
imul
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
jmp
popa
ja
add
xorl
adc
mov
cmpb
jo
imul
xchg
popf
rol
inc
xlat
pop
pop
dec
pop
xchg
cmp
sub
add
in
xchg
aas
push
xchg
test
aas
cltd
inc
jne
mov
testl
sbb
jbe
jg
mov
dec
jmp
adc
jnp
into
cmp
pop
in
sub
inc
jmp
jae
push
adc
cmp
lret
ret
and
xor
mov
jnp
pop
incb
rorb
out
les
mov
nop
mov
dec
ja
int3
enter
xchg
lock
jno
iret
sahf
stos
lds
loope
stos
pop
gs
pop
ljmp
xchg
gs
jg
fistpl
lret
repz
int3
inc
adc
in
enter
mov
or
inc
jl
jle
sub
aaa
rcrl
push
xor
cmpsb
nop
sarl
mov
inc
loopne
iret
or
rcr
aad
cs
iret
cli
push
sti
dec
shl
sbb
cmpb
jb
and
inc
cwtl
movsl
jge
mov
mov
nop
int3
or
dec
popa
mov
test
fcmovnb
imul
adc
sahf
mov
scas
fld
jne
push
xor
or
divb
push
out
pop
mov
sahf
lcall
xor
jle
insl
jns
cmpsb
jmp
les
and
add
add
shlb
nop
pop
jg
jo
mov
sub
mov
ret
add
shl
xor
jo
addr16
xchg
adc
xchg
popf
pop
mov
hlt
mov
pop
xor
rcr
stos
or
or
std
idiv
pop
lcall
cmp
jne
pop
aas
in
push
inc
stos
insb
cmp
pop
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
xorl
push
call
test
jne
addl
xor
jmp
call
cltd
movl
cmp
jne
cmp
je
push
subl
call
addl
test
movl
jne
subl
push
xor
mov
or
mov
xorl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
lea
subl
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
xor
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
pushl
call
jmp
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
call
mov
dec
mov
jmp
mov
xor
mov
mov
addl
push
mov
sbbl
xor
sbbl
push
xor
mov
adcl
add
mov
mov
movl
cmp
mov
je
mov
xor
subl
add
addl
imul
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
mov
sbb
mov
sbb
xor
not
add
mov
mov
mov
subl
xor
add
movl
cmp
jne
xorl
pushl
subl
pushl
call
mov
mov
xor
mov
sbb
mov
inc
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
mov
movl
mov
and
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
xor
or
sub
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
sub
mov
xor
add
and
mov
mov
mov
subl
push
adc
push
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
jmp
cmp
inc
mov
negl
adc
shl
jo
xchg
jg
jo
in
xchg
in
ficomps
jns
add
movsl
pop
dec
int
xchg
dec
xchg
lret
pop
jb
lcall
add
pop
sbb
mov
add
cmc
mov
clc
in
sahf
insl
jno
mov
icebp
and
sbb
scas
cmp
sbb
sbb
cmp
out
xchg
ss
andl
sub
outsl
push
loop
cmp
loopne
add
mov
push
jg
sub
push
pop
jg
js
testb
out
xchg
les
xchg
pop
push
in
ss
loopne
mov
lret
fwait
lahf
mov
cs
les
scas
xchg
shlb
xchg
push
xchg
dec
inc
repnz
inc
inc
cltd
stc
fiaddl
int
popl
fcoml
add
ret
inc
xor
fwait
scas
jns
dec
fsts
pop
inc
push
sub
lcall
ljmp
ret
xlat
orb
insb
mull
out
outsl
lea
pop
lcall
pop
sbb
cld
das
push
arpl
outsb
adc
inc
in
add
mov
negl
xchg
push
movsb
ss
movsl
xchg
xor
fucom
and
adc
aaa
jmp
in
add
or
stc
je
jg
cmp
or
insb
imul
mov
add
mov
jae
jno
mov
hlt
or
mov
jo
xchg
jg
jo
das
sub
add
mov
std
dec
xchg
fnsave
cs
jmp
jnp
data16
jns
imul
sbb
data16
mov
pushf
sub
out
icebp
fxch
cmp
es
jae
cmp
pop
out
enter
mov
jb
ss
or
add
lcall
sbb
or
xchg
inc
xchg
call
mov
outsb
minps
cmp
mov
stc
fnstsw
push
ds
adc
pop
idivl
psubusb
test
mov
aaa
sub
cld
cmpsb
inc
fwait
lock
aaa
cmp
fdivp
popf
mov
xchg
scas
lods
into
lcall
test
stos
fdivl
dec
popf
pop
data16
in
dec
dec
ss
in
add
popa
jge
dec
jmp
mov
fs
mov
pushf
cmp
and
xlat
push
loopne
push
rcrb
in
out
pop
adc
jno
out
push
adc
xchg
nop
into
or
lret
mov
lahf
pop
test
fcompl
or
and
mov
sub
pop
jp
int
mov
sub
sti
movb
jno
xchg
lock
sbb
das
cmpsl
data16
add
out
cmp
mov
lods
or
mov
gs
es
mov
xorl
mov
xchg
adc
jmp
jne
pop
cmpsb
fistps
mov
adc
add
sbb
mov
notl
lea
xor
mov
mov
add
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
movl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
and
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
addl
mov
sub
xor
add
add
neg
mov
mov
movzwl
sbb
mov
movl
mov
mov
orl
mov
addl
movzwl
add
movl
mov
jmp
jbe
dec
sahf
jb
jbe
xor
inc
fcoms
xchg
jg
jo
decb
or
push
mov
scas
add
sbb
in
idivb
fstl
jno
jns
jne
ss
pop
jno
subl
stc
or
push
jp
mov
mov
adc
push
fsubrs
ss
pop
adc
and
push
xlat
scas
enter
movsl
rcrl
cmp
xor
out
lds
xchg
lret
ljmp
scas
and
int
daa
je
and
out
xchg
cmp
pop
jmp
mov
loop
jle
rorl
adc
pop
cmp
test
sbb
into
push
movsl
sbbl
push
and
lret
cmp
mov
pop
cmp
push
sbb
push
pop
fmuls
int
push
sub
xchg
int
jl
outsb
xor
pop
and
ficomps
jmp
and
lods
add
jne
jle
lcall
pop
int3
insl
pop
sub
out
jecxz
addr16
fsub
adc
orb
and
push
dec
stc
and
cld
cmp
dec
fdivl
les
adc
pop
lods
sbb
jl
xchg
xor
loope
push
xor
mov
in
test
ja
imull
daa
inc
movsb
and
mov
inc
ret
jnp
mov
pop
and
int3
pop
std
push
mov
inc
insb
mov
das
gs
movsl
jnp
and
or
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
jmp
and
repnz
inc
std
fildll
and
jo
xchg
jg
jo
jecxz
cwtl
jp
adc
cmp
icebp
out
adc
mov
sti
xor
mov
cmp
popa
inc
add
jge
xlat
aam
std
jle
imul
out
pop
es
mov
in
jmp
ret
iret
pop
cmpsl
in
stos
loopne
fnsave
push
notl
or
inc
mov
xor
jno
xor
and
fdivl
nop
mov
dec
sbbb
push
out
lock
sub
xor
call
push
in
mov
inc
and
xchg
hlt
pop
lds
and
and
ss
or
lcall
aaa
dec
sti
adc
mov
xchg
fwait
iret
jns
fwait
test
cmp
add
push
sub
cmp
xor
out
push
sarl
fcoml
lret
add
shlb
aad
push
push
jecxz
sbb
xor
inc
mov
in
out
test
push
sbb
mov
repnz
sbb
fs
orl
cmpsb
idivl
mov
out
xor
lcall
xchg
mov
jno
adc
inc
inc
add
push
stc
inc
mov
xchg
and
xor
sbb
pop
sub
lock
rcll
xchg
mov
xchg
jg
sub
fisttpl
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
jmp
icebp
in
popf
adc
xchg
cld
insl
aam
sub
jo
jg
jo
or
mov
ret
out
or
pop
jne
add
mov
inc
ret
add
cmp
cmp
mov
int3
cltd
call
mov
pop
mov
or
rolb
xorb
lods
in
insl
jns
mov
xor
jmp
sbb
xlat
jnp
xchg
mov
bound
repz
and
enter
shl
mov
aam
mov
movsb
lock
dec
andl
mov
scas
add
add
mov
addb
jnp
cmp
adc
leave
jnp
out
cmp
lahf
lahf
test
das
push
adcl
ret
pop
scas
sub
addl
out
ret
pop
bound
push
call
in
sbb
stos
dec
out
lcall
mov
pop
cmp
xor
adc
push
pop
push
push
push
out
sti
arpl
mov
outsb
into
inc
mov
mov
and
je
push
stc
adc
mov
mov
xchg
mov
lret
add
mov
jb
push
mov
jecxz
adc
sbbb
xlat
jnp
mov
imul
stos
sub
push
fsubs
sbb
push
repz
xchg
std
xor
fildll
stos
insl
shll
and
stos
shll
cmp
ffree
lret
out
mov
mov
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
jmp
iret
dec
mov
mov
icebp
dec
dec
int
dec
jge
ret
call
jo
mov
lods
jg
xor
push
ljmp
out
adc
mov
jbe
stos
xchg
lahf
sbb
pop
and
ja
test
repnz
adc
test
int3
js
mov
push
loopne
arpl
sbb
mov
jecxz
sbb
mov
mov
testb
insl
aad
pop
cmpb
xor
jmp
sbb
cltd
and
cld
shlb
mov
mov
in
sbb
les
cmp
cmp
adc
call
dec
jae
pop
pushf
cltd
push
xchg
test
movsb
cmpsl
inc
ret
xchg
dec
xchg
loope
stc
xor
mov
in
add
sub
cmpsl
add
or
out
push
jmp
insb
mov
add
sub
call
loope
inc
pop
es
sbb
xchg
ret
hlt
cmc
and
xchg
iret
lahf
stc
dec
cmp
aam
jge
fwait
sbb
inc
xchg
and
xchg
sub
xor
lret
push
bound
aaa
jns
cmp
xor
jo
loope
ljmp
and
mov
pushf
imul
jae
cmc
mov
and
xlat
loopne
mov
jne
or
frstor
std
cli
addb
in
pop
and
in
repnz
mov
jns
cld
rolb
fidivrl
push
leave
shlb
inc
cmpsb
or
in
inc
jmp
pop
scas
inc
mov
jmp
mov
icebp
in
icebp
mov
push
push
xchg
jo
jo
xchg
jg
jo
add
lds
cmp
insb
cmpsl
daa
xor
subb
outsb
test
or
insb
xchg
mov
xchg
pop
and
jecxz
stos
sbbb
sub
inc
popl
imul
int
pop
mov
das
cmp
dec
test
push
movsl
stos
push
sbb
test
mov
ret
clc
pop
test
mov
adc
dec
aaa
mov
rol
and
leave
scas
inc
outsb
push
jo
mov
jmp
push
pop
rorb
enter
and
test
movl
add
aad
stc
pop
or
movsl
scas
fbstp
into
push
movsb
sti
std
addl
bswap
sbb
and
out
and
push
cmpl
push
cs
repnz
push
fdivrs
bound
frstor
adc
roll
inc
adcb
push
add
and
push
cli
adc
fcoms
std
xor
jns
push
cmp
xor
aam
or
or
ja
push
pop
pop
inc
sub
jge
sahf
pop
mov
in
xlat
fldcw
push
rclb
lcall
mov
push
mov
cmpsb
daa
sbb
rclb
mov
cmp
es
rolb
call
or
mov
push
jmp
cwtl
ds
lods
cmpsb
add
lea
lret
mov
popf
inc
sti
divb
imull
jl
add
inc
orb
xor
add
cmp
je
mov
mov
add
mov
mov
mov
jmp
dec
push
sub
imul
pop
mov
xchg
cmc
jo
xchg
jg
jo
xchg
cmp
scas
out
movsb
jnp
inc
sahf
jno
dec
jno
fistpl
sbb
lds
scas
jge
mov
pop
mov
repnz
sbb
cmpsb
push
insb
loopne
stos
jae
out
xlat
in
daa
sti
add
add
or
popa
pop
mov
int3
pop
or
stos
scas
mov
stc
stos
rclb
cmp
jmp
xchg
fcomip
xchg
shl
dec
icebp
das
loopne
xchg
lret
in
push
mov
fwait
sub
cltd
in
jle
lahf
jnp
in
arpl
push
das
aad
js
sub
or
pop
mov
div
into
push
mov
sahf
lret
pop
mov
pop
shrl
mov
out
pop
or
push
nop
push
dec
or
sbb
fwait
dec
and
pop
xchg
xlat
test
adc
call
movsb
inc
out
sbb
push
call
cwtl
cmpsb
punpcklbw
sub
mov
cmc
dec
dec
sub
imulb
test
sahf
xchg
pop
into
lcall
int
push
and
adcb
out
lret
adc
fists
aad
xor
sub
mov
js
scas
mov
adc
and
mov
xchg
mov
xchg
sahf
fstps
push
scas
mov
pusha
inc
xchg
jle
stos
and
stos
inc
jl
dec
mov
adc
test
cmp
jp
cwtl
xchg
xchg
jmp
fcomps
mov
sub
loope
sbb
inc
or
or
mov
add
frndint
std
imul
mov
xor
ja
jb
repz
xchg
jg
jo
push
rolb
imul
fwait
pop
cmp
mov
sbb
sbb
pop
xchg
test
xor
push
out
lahf
test
sub
je
pop
testl
jge
cmc
data16
or
jecxz
xchg
sbb
call
hlt
dec
push
and
mov
cmp
pop
mov
adc
adc
enter
pop
shll
jecxz
jle
pushf
test
jo
stos
inc
mov
test
into
or
pop
and
and
dec
inc
lds
and
jnp
shrl
mov
pop
mov
shlb
or
push
shlb
or
and
cmp
push
jp
je
imul
cmpsl
xchg
pop
std
mov
add
dec
mov
fnstenv
and
fnstcw
jl
fisttps
cs
xchg
ret
mov
dec
call
or
cmc
popl
mov
bound
xchg
out
inc
jle
push
lock
out
je
test
fdivl
and
xchg
cmp
in
mov
daa
ffree
repz
inc
pusha
es
jno
cmp
cltd
aaa
mul
jb
andb
dec
jg
xchg
jp
jbe
out
stos
mov
lods
jae
lods
pop
mov
jns
pop
xorl
push
dec
mov
and
cmp
lret
and
pop
scas
inc
push
xor
fucom
or
or
jmp
hlt
sbb
rep
cmp
aaa
notb
jo
xchg
jg
jo
jle
lods
inc
cld
in
stc
push
nop
lds
adc
fwait
sarl
pop
lret
cmp
popa
push
jno
jne
popf
push
dec
in
cli
imul
ret
pop
jecxz
pop
jmp
xchg
and
aam
sahf
lds
mov
mov
in
shll
dec
sbb
ret
mov
mov
push
mov
and
daa
popa
test
pop
daa
out
push
jmp
cltd
scas
and
and
sahf
mov
scas
jbe
dec
dec
push
out
jae
xchg
jns
xor
addr16
cmp
adc
mov
stos
mov
bound
fbld
jb
cmp
into
data16
dec
mov
js
dec
xchg
push
ljmp
cmp
or
das
cmc
imul
outsb
add
xchg
inc
cmp
dec
out
push
cmp
pop
sbb
enter
push
flds
int3
fstpl
test
inc
dec
sub
mov
push
push
gs
xor
add
bswap
cmp
dec
stos
jne
pop
jle
cmc
mov
bound
jb
popa
push
mov
push
push
mov
jbe
dec
out
popf
pusha
xor
imul
les
fwait
popa
dec
ss
jbe
pop
mov
or
sbb
xlat
sub
out
jmp
leave
inc
sahf
inc
jmp
int
push
popf
aam
scas
ficoml
iret
and
jp
pusha
leave
je
or
push
and
lods
loop
fdivp
movsb
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
jmp
lret
icebp
dec
cmp
jge
in
jo
xchg
jg
jo
fwait
aaa
push
mov
in
pop
cli
pop
cmp
fs
divl
inc
fs
scas
test
mov
sub
inc
aaa
push
cmc
jmp
es
cld
test
jo
mov
fs
test
xlat
pop
out
aam
lods
pop
inc
add
cltd
out
fistpl
push
fdivp
inc
adc
or
inc
inc
jp
xor
mov
sbb
out
je
les
push
scas
leave
out
cmc
inc
fwait
ja
insb
stc
stos
cmp
pop
sti
out
inc
push
pop
into
call
loopne
in
loope
pop
pushf
sahf
bound
adc
pushw
cmp
mov
les
push
push
push
inc
js
sbb
outsb
lds
enter
leave
mov
and
mov
jbe
mov
ret
push
xor
mov
cmpb
pusha
mov
mov
std
cld
sbb
or
mov
add
jg
addl
addr16
xor
mov
mov
sub
jne
xlat
mov
mov
aam
jl
xchg
inc
mov
adc
lock
movsl
out
push
fstpt
jo
or
jle
cmpl
mov
sarl
inc
push
sub
cmc
addr16
stos
out
arpl
inc
iret
out
mov
xchg
outsl
fxch
stos
add
jge
pop
mov
popa
xor
rclb
mov
fidivrl
in
adc
xchg
out
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
push
sbb
movl
sbb
mov
orl
jmp
push
mov
xor
je
stos
aas
lods
and
jns
jo
jb
jo
punpckhbw
daa
push
mov
jp
push
mov
stos
fsub
loope
pop
push
cld
mov
pop
pop
xchg
inc
xor
mov
pop
aam
imul
outsl
mov
sub
cli
pop
dec
xchg
jne
dec
pop
cmp
mov
nop
inc
cmpsl
in
fcomps
pop
sahf
jbe
sbb
mov
mov
int3
mov
popa
add
add
jmp
fs
mov
pop
pushf
gs
je
idiv
mov
mov
xchg
xor
dec
jge
push
dec
jmp
hlt
fistpll
xor
lds
into
lods
out
ljmp
adc
decb
stos
push
enter
jl
xor
addl
imul
inc
aas
scas
xor
push
lods
mov
and
jg
sbb
mov
adc
add
mov
int
adc
sahf
call
bound
cmpl
inc
rolb
jecxz
or
mov
dec
nop
pop
mov
ja
shlb
icebp
xor
ret
mov
mov
iret
adc
or
cmp
mov
xor
xor
dec
mov
fldl
arpl
dec
xchg
lea
mov
std
pop
adc
rcr
sub
jl
enter
stc
xchg
out
test
testl
insl
rcrl
xor
out
or
pop
dec
dec
and
mov
pop
dec
mov
jge
pop
sbbl
push
inc
mov
inc
repz
aam
lods
lds
leave
roll
inc
add
ret
and
jae
mov
cli
cld
jg
push
es
aaa
pushf
push
sub
call
rcr
lret
push
mov
or
pop
xor
in
addb
flds
pop
adc
mov
mov
add
andl
xor
cmp
movl
jne
mov
mov
movzbl
xor
mov
add
xor
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
call
cmpl
jb
xor
push
jmp
je
test
pop
pop
or
push
les
jnp
jo
jb
jo
xor
repz
adc
loope
fbld
movsb
add
jge
enter
sbbb
addr16
test
mov
inc
sub
sbb
imul
jp
mov
sarb
and
cmp
mov
lock
mov
and
xchg
pop
inc
lahf
repz
push
test
sbb
ds
sub
cmp
push
mov
xor
je
std
dec
aaa
lods
sti
in
cmpsl
aam
divb
std
test
stc
and
inc
insb
test
addr16
nop
ret
popa
outsl
mov
popf
dec
movsl
loope
test
inc
pop
lret
mov
roll
hlt
out
and
cmp
push
stc
shr
popf
lcall
lahf
mov
movsb
lods
out
shrl
xchg
jnp
jp
loope
inc
dec
jnp
or
jmp
sti
xor
pop
mov
dec
pop
push
test
jp
into
aas
or
out
lea
jge
inc
mov
mov
xor
xchg
mov
dec
xchg
sbb
xor
sahf
jmp
fnstsw
outsl
cltd
pop
aas
sbbb
jp
mov
xor
mov
shll
imul
mov
pop
xor
out
push
sub
scas
mov
adc
xor
inc
push
dec
sub
rcl
cli
xchg
lds
push
inc
sub
call
cmp
rcrb
repz
xchg
push
adc
in
pop
popa
jo
scas
lret
icebp
and
mov
shlb
test
xchg
mov
cli
adc
les
sub
daa
add
sub
jecxz
ret
pop
jge
xchg
les
das
scas
insl
dec
push
loopne
add
outsl
sahf
insb
sbb
adc
push
in
add
and
outsb
fs
mov
in
call
pushf
jb
add
shr
add
add
cmpsl
push
in
gs
arpl
jb
jge
jo
jb
jo
cmpsb
fnstcw
inc
nop
xchg
sub
jne
cmp
lods
xchg
and
push
in
mov
sub
rcrb
rcll
arpl
insl
adc
adc
test
fiaddl
and
push
push
loopne
inc
sub
in
pop
fimuls
cmp
dec
adcl
repnz
fmull
dec
popf
test
cli
roll
sbb
cmp
test
xchg
insb
notl
xchg
pop
outsl
je
fucomip
shl
mov
xor
pop
icebp
das
movl
jg
jmp
lds
cltd
xchg
loop
mov
sub
and
mov
cmpsl
push
mov
fstps
mov
push
rclb
aas
jp
cltd
cmp
pop
push
add
dec
fists
jbe
jae
mov
sub
cmp
loope
movsb
xchg
pop
sbbb
insl
xor
adc
mov
add
and
and
and
leave
insb
loop
cmp
popf
and
shlb
sbb
fmull
or
lock
into
jno
insb
test
cld
inc
jecxz
sbb
sarl
push
sbb
scas
imul
adc
addb
lock
fisttpl
imul
cmp
mov
iret
pop
mov
insl
mov
cmp
mov
popa
sub
add
push
xchg
xor
aam
ret
shll
xchg
adc
mov
or
stos
sbb
add
sti
gs
shrb
lods
jne
fnstsw
outsb
cmp
cltd
out
stos
std
out
test
jne
popa
sub
add
ja
jns
fiadds
lds
pop
sbb
out
mov
lret
pop
add
push
or
stos
jne
dec
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
jmp
or
scas
shll
jb
loop
mov
jo
jg
jo
jo
adc
sbb
je
in
cmp
movsb
mov
jg
pop
cmpsb
les
inc
insb
int3
push
mov
cwtl
cli
or
jne
xchg
cltd
push
xor
mov
stos
fistpl
nop
add
stc
iret
xchg
cmpsb
pop
inc
scas
push
stos
push
jns
sbb
xor
in
out
ljmp
fmuls
push
sbb
mov
popf
les
mov
dec
jae
fldt
les
ja
loope
jl
jnp
mov
enter
adc
push
lea
pop
mov
fwait
push
aaa
dec
dec
inc
int
ret
cmp
jle
sub
jno
bound
adc
lea
jp
push
xchg
mov
jge
xchg
sbb
dec
xchg
mov
stos
dec
xlat
or
inc
test
dec
sbb
dec
sub
enter
flds
stos
sti
aad
divl
push
int3
dec
push
clc
lcall
insl
fwait
inc
fnstcw
stc
dec
jmp
cmp
xor
fisubrs
xchg
outsl
inc
push
pop
xor
mov
fildll
stc
inc
mov
xchg
icebp
and
push
jg
lcall
or
imulb
push
imul
clc
popa
popa
mov
push
int
pop
cmpsl
jmp
les
jns
pop
movsb
cmpsl
scas
stc
jno
xor
pop
xchg
add
jno
and
pop
aaa
cmp
lds
xor
add
nop
mov
aam
mov
mov
insb
stos
cmpsl
stos
pushf
notb
mov
mov
xchg
aad
and
xorb
fisttpl
inc
ficoms
adc
xor
adc
popf
loope
aas
scas
or
jmp
jbe
arpl
push
jb
mov
sub
inc
ret
fildll
aad
adc
push
or
jmp
jnp
xchg
les
sub
and
xchg
jb
jo
lock
or
lods
int3
or
mov
push
js
into
test
aas
or
ss
dec
popa
dec
or
xchg
jecxz
bound
in
push
jp
xchg
mov
leave
sbb
js
in
mov
add
jecxz
xor
outsl
pop
gs
sbb
into
ret
imul
andb
sub
ds
cmp
add
jp
add
mov
sub
je
or
cmp
popa
iret
mov
imul
sbb
pop
jae
imul
jp
or
or
jo
into
iret
xchg
mov
leave
in
int
aad
mov
push
outsb
pop
sbb
lret
enter
jno
sbb
rcr
cmc
fs
fwait
and
adc
mov
inc
repnz
cmpsb
pop
pop
les
movsb
cmpsl
and
jg
arpl
fsubl
rcrl
sub
pop
sbb
out
push
mov
hlt
fldl
dec
jge,pt
adc
lret
lret
mov
pop
enter
cltd
mov
aam
adc
sahf
jns
ss
fiaddl
repz
mov
adcb
dec
into
adc
sbb
dec
je
movsl
xor
in
sub
lret
adc
roll
push
sti
dec
mov
rclb
sahf
inc
mov
cmp
cmp
adc
push
cwtl
mov
psrlq
rol
fnsave
hlt
xlat
adc
mov
cmp
loopne
mov
sbb
fstps
jle
dec
dec
sub
xor
out
xchg
push
addr16
cli
hlt
sbb
rcrl
rclb
xchg
in
push
negl
loope
pushf
lret
pop
mov
mov
pop
out
mov
dec
mov
adc
add
ret
push
mov
mov
mov
and
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
push
mov
xor
cmp
je
mov
mov
sub
xor
jmp
xchg
roll
icebp
lods
add
rcrl
mov
leave
jle
jo
imul
jp
push
adc
pop
sub
iret
push
xor
mov
add
cmp
pop
aaa
in
gs
repz
js
fisttpll
push
rorb
pop
stos
das
xchg
fs
mov
movsl
subl
adc
outsb
loope
sarl
outsl
add
sbb
jg
dec
mov
mov
ljmp
js
mov
andb
xchg
cli
sbb
xchg
xchg
push
xchg
test
fidivrs
fimuls
movsl
mov
jmp
inc
sub
loopne
push
filds
lds
das
shl
jmp
stos
lods
stos
mov
and
out
or
aad
bound
sub
xchg
stc
jp
xlat
popf
in
mov
mov
push
push
mov
inc
fstl
fwait
sarl
mov
mov
cmp
icebp
rcrl
movsb
and
mov
cmc
xor
bound
cmp
mov
pushf
inc
cs
mov
aad
ljmp
pop
lods
sbb
hlt
jp
mov
mov
repz
xlat
rorl
lods
add
or
scas
gs
ja
sub
mov
rcrl
aad
lret
ljmp
xor
or
jae
sub
popa
pop
mov
xchg
stc
lods
xor
push
mov
in
jb
mov
or
cs
inc
push
pop
enter
mov
inc
push
sbbb
rcrl
mov
sub
sub
fnstcw
loopne
push
dec
stc
dec
pushf
iret
cmp
xchg
pop
hlt
out
xchg
insl
or
rcrl
mov
inc
jbe
fldt
pop
jns
pop
dec
jbe
cmp
test
inc
cmp
jmp
loop
dec
and
push
rol
repz
lahf
add
aas
xchg
lea
dec
mov
inc
jbe
andb
jne
in
addr16
xchg
and
enter
fwait
mov
xor
push
or
addr16
shrb
les
or
and
out
adc
lahf
mov
xor
cmp
jne
mov
add
jmp
mov
xor
jmp
pop
scas
sbb
push
pop
mov
rorl
mov
leave
jle
jo
and
xlat
sbb
enter
push
aaa
adc
das
ds
xchg
imul
and
or
xor
push
jb
lods
or
imul
test
jp
lods
sub
push
adc
dec
bound
push
xchg
pop
jnp
mov
iret
xchg
inc
inc
inc
fcmovbe
inc
aam
cltd
mov
out
jne
jp
std
push
mov
add
push
mov
sahf
ljmp
dec
popa
lods
push
sbb
jl
pop
sbb
lret
jle
xor
mov
push
loopne
and
dec
int3
out
stos
sahf
std
ja
je
cmp
dec
sub
mov
jle
incb
inc
call
jno
xchg
jb
xor
bound
gs
pop
lea
xchg
ljmp
jge
sub
cwtl
jecxz
jecxz
xor
ljmp
xchg
lcall
cmp
loope
xchg
pusha
dec
fs
jl
or
insl
fs
or
xchg
fdivrs
jg
mov
pop
vpcmpgtb
add
stos
mov
mov
mov
jo
test
loop
cmp
pusha
ss
jle
aaa
dec
out
cld
adc
aam
cmp
push
adc
in
cli
daa
andps
xor
es
in
movsl
adc
ss
fmulp
rcrl
andb
mov
push
dec
and
subl
and
mov
lret
xchg
lock
xchg
mov
mov
jle
mov
xchg
lea
imul
stos
fmul
sub
shll
xchg
pop
sarb
pop
or
add
js
pop
ljmp
test
in
pop
mov
mov
sub
dec
dec
test
out
sub
mov
cltd
lret
imull
mov
pop
pop
cmpsb
dec
insb
das
popf
in
pop
aaa
into
lret
jne
sbb
and
mov
ja
test
ljmp
ljmp
hlt
mov
xchg
dec
rcll
and
sahf
sbb
add
jmp
ja
and
dec
xchg
sbb
xorb
jle
jo
std
mov
lret
insb
aam
sub
enter
xor
imul
mov
rcrl
fbstp
and
fcompl
push
jb
iret
jns
aas
push
aas
mov
dec
xor
xorb
in
out
or
sti
and
hlt
fldt
pop
negl
sub
rcll
std
dec
ja
add
or
adc
rcrb
fsts
sbb
fiadds
adc
adc
orl
inc
fcomip
les
mov
cld
pop
sub
inc
xor
mov
cld
mov
xorb
mov
nop
inc
stos
daa
mov
movsl
lret
in
mov
cmp
inc
stos
add
stos
pop
adc
bound
cltd
enter
mov
sbb
jecxz
adc
xchg
xchg
push
pop
and
push
outsb
or
test
stos
bnd
mov
sahf
fwait
fisubrs
iret
js
in
add
sahf
sub
adc
mov
in
insl
aas
mov
stos
mov
push
pop
jbe
push
xchg
adc
push
loop
sbb
in
stc
jg
lock
xor
or
jl
movsb
dec
pop
push
or
in
mov
xor
mov
cltd
inc
out
push
hlt
mov
insl
dec
test
jo
fsubrs
inc
shl
dec
mov
jge
sti
or
cwtl
and
iret
lea
addr16
outsl
push
addr16
inc
hlt
and
jle
popa
xchg
nop
daa
mov
nop
data16
jecxz
xchg
insl
xchg
sub
push
stos
pop
into
aam
mov
lret
dec
sub
mov
mov
xchg
push
and
inc
dec
rclb
sub
mov
ret
or
and
sub
jnp
jecxz
iret
stos
jecxz
mov
sub
sub
in
pushl
push
or
mov
mov
xchg
mov
or
pop
mov
and
shlb
and
mov
dec
mov
pop
pop
xchg
mov
xor
add
pop
sbb
outsw
pop
sar
pop
shrb
inc
mov
sub
push
repnz
jno
adc
dec
out
cwtl
mov
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
movl
mov
mov
sub
and
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
xor
xor
xor
add
sub
imul
mov
addl
push
mov
sbb
xor
sbb
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
sub
mov
mov
sbbl
push
adcl
push
adcl
test
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
pushl
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
notl
mov
neg
mov
movzwl
add
mov
imul
jmp
xchg
imul
imul
jge
jo
cmp
mov
stos
pushl
mov
sahf
js
cs
inc
enter
cmova
insl
dec
xor
das
divl
ficoms
test
lahf
ja
shl
cmp
pop
adc
and
xor
sbbb
dec
out
lret
mov
les
mov
cli
lret
dec
fsts
out
imul
add
push
push
cwtl
lcall
adc
or
xor
sahf
jp,pn
jns
inc
lss
sbb
mov
scas
mov
mov
jo
jb
leave
mov
fsubl
mov
testb
mov
lock
test
std
pop
push
stc
cmp
push
jns
mov
popf
push
scas
push
mov
inc
popa
or
imul
dec
sti
cmp
pushf
cltd
je
lcall
or
pop
push
loopne
shr
jecxz
adc
dec
adc
push
arpl
flds
xchg
popl
loop
inc
lret
fsubs
xorps
sub
lret
cmp
jno
repz
xchg
jb
jp
std
jmp
mov
ret
ret
loopne
inc
sbb
test
inc
fiaddl
mov
stos
jbe
pop
push
push
filds
ljmp
cmp
dec
mov
and
jnp
mov
icebp
sahf
mov
push
or
ret
cmp
mov
jne
mov
dec
jecxz
mov
dec
and
hlt
lods
sub
adc
es
fisubs
je
das
loope
shll
enter
pop
imul
shrb
ljmp
sbbb
inc
mov
pop
and
aad
jle
shr
dec
dec
je
add
pushf
scas
adc
jb
xchg
dec
jne
rcr
fsubrs
shlb
andl
push
call
js
je
jecxz
pop
out
scas
pop
mov
cli
lcall
inc
mov
cmpsb
xor
rorb
popf
test
or
out
sub
dec
pop
pop
sbb
movsb
mov
sahf
xor
fcomp
pop
lret
sub
xchg
pop
arpl
imul
mov
shll
mov
add
dec
pushf
aam
mov
lcall
push
inc
leave
testb
insl
rolb
mov
lcall
sub
sub
sbb
adc
mov
es
cmp
das
imul
push
add
jp
aas
movsb
pop
in
mov
rcll
fdivl
ljmp
dec
stos
mov
push
cs
adc
pop
popl
aas
inc
ljmp
ret
mov
testb
les
loope
sub
in
cmp
adc
and
stos
mov
addl
decb
fwait
imul
push
movsb
mov
lods
mov
inc
dec
arpl
testl
xorl
in
fstps
lock
testl
movsb
scas
shl
xchg
lods
jl
fists
movsl
sbb
push
pop
iret
imul
mov
push
in
sub
stos
sub
jmp
jnp
pop
clc
mov
cmp
nop
out
shll
or
pop
push
pop
rolb
xchg
dec
in
cli
xchg
sbb
sbb
aas
pusha
or
jne
and
lret
or
cmc
cltd
mov
add
not
mov
or
mov
subl
xchg
sub
xorl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
orl
mov
adcl
jmp
addr16
ss
ja
or
in
je
cmp
dec
jge
jo
push
jo
hlt
jns
stos
jo
js
cmp
mov
pop
popf
jb
mov
lea
xchg
mov
es
fistl
mov
out
enter
int
stos
movsl
imul
xor
lret
les
sub
xor
fnstsw
lahf
pop
adc
scas
xor
dec
lret
mov
cmp
or
sub
cmp
pop
filds
sub
push
pop
xlat
and
outsb
xchg
push
cltd
lret
inc
cmp
mov
and
add
icebp
pusha
insl
push
cwtl
pop
pop
ja
in
push
xor
adc
jne
sub
dec
vmovapd
clc
xchg
cmp
arpl
adc
dec
movsl
mov
sti
jb
ficomps
rol
into
inc
adc
test
mov
rcrl
clc
xlat
mov
xor
dec
mov
sbb
jmp
add
pop
rol
stos
dec
add
idivl
mov
sub
sbb
mov
push
add
shll
cld
pusha
mov
ror
pop
enter
mov
in
jl
sbb
in
test
imul
dec
nop
lcall
pop
icebp
push
add
inc
mov
insb
fstpl
xchg
pop
mov
outsl
jle
mov
int3
mov
int
pop
pop
inc
lock
mov
push
jge
in
aaa
packssdw
adc
sub
dec
or
iret
mov
cmp
ds
jp
pusha
sbb
dec
xor
es
jle
jnp
or
add
scas
sub
and
dec
movsb
repnz
or
loop
ret
lahf
mov
dec
cwtl
iret
pop
lahf
fisubl
loopne
enter
push
in
aaa
aaa
cmp
sbb
in
push
or
push
fsub
in
es
out
add
pop
or
pusha
inc
cmpsb
fyl2x
sahf
mov
insl
fs
or
adc
fsubl
mov
mov
xchg
daa
subl
adc
fwait
jg
test
iret
in
mov
inc
fnstsw
pop
adc
and
mov
orl
pop
test
mov
enter
pop
mov
inc
or
sahf
mov
push
fs
mov
sbb
jno
dec
sbb
push
nop
pop
mov
jb
fwait
cmp
ja
lret
js
inc
adc
das
arpl
std
jecxz
xor
or
pusha
gs
xchg
adc
dec
xchg
es
sub
stos
cli
jns
repz
lods
sbb
lea
aad
aas
sbb
pop
clc
dec
in
xorl
cmp
xor
mov
sub
or
cmpsb
loop
jmp
adc
fidivs
shr
sbb
adc
dec
xor
scas
sub
push
clc
push
mov
adc
icebp
fwait
and
or
xor
mov
xor
lret
lods
add
lret
lds
sub
subl
stc
ss
jge
icebp
pop
stc
outsl
xchg
push
xlat
add
sahf
cli
and
test
mov
pop
insb
sbb
mov
pusha
rcl
rclb
jmp
xlat
bound
xchg
jno
sbb
pop
xor
mov
negb
pop
push
cltd
bts
cwtl
dec
adc
rep
jmp
popa
scas
icebp
and
or
adc
mov
popf
sub
cmpb
jmp
push
rcl
iret
push
lock
jns
sbb
fisttpll
lcall
sub
call
inc
add
inc
inc
add
enter
add
mov
iret
mov
out
fs
scas
mov
xchg
jo
dec
jge
jo
inc
or
push
mov
pushf
inc
mov
movsb
scas
xlat
popl
aad
dec
enter
mov
xchg
fiaddl
das
dec
mov
inc
adc
mov
dec
movb
dec
iret
ret
dec
jo
scas
and
aad
mov
lock
mov
fcmovu
lods
mov
imul
cmp
push
out
scas
mov
insb
xor
mov
nop
push
aaa
or
in
xchg
ljmp
fwait
fstps
stos
out
enter
stos
mov
js
sbb
jns
test
repnz
outsb
leave
movsb
xor
mov
xchg
adc
or
rcr
movsl
lods
and
push
aam
dec
es
fcompl
xlat
hlt
jge
or
int
adc
push
sbb
and
cmp
outsb
xor
dec
clc
mov
lea
jno
sbb
out
mov
aas
movsl
xor
pop
pop
mov
imul
sbb
fs
adc
pop
lcall
sbb
or
push
adc
sub
out
inc
and
test
repz
or
xchg
lods
mov
mov
in
dec
sar
inc
test
jl
cwtl
dec
and
jl
dec
cmp
in
xchg
int3
xchg
adc
fldl
and
dec
mov
or
cmpsb
jae
rcrl
rorl
mov
arpl
out
sub
ja
xor
add
adc
arpl
enter
movsb
das
adc
scas
repnz
shll
ja
clc
jge
out
sub
les
mov
sbb
sub
push
scas
mov
pop
ficomps
insb
pop
cmp
xchg
std
or
inc
dec
mov
ret
pushf
fimull
mov
push
sbb
test
add
nop
lret
ljmp
in
sub
sub
je
jns
mov
adc
sahf
xchg
movsl
mov
xor
xor
push
das
popl
out
mov
inc
in
call
add
push
mov
jb
sbb
mov
out
and
sbb
sbb
inc
sti
dec
popf
cld
daa
arpl
sub
mov
or
push
jmp
xor
in
xor
pop
pop
insl
adc
jae
inc
mov
addl
sbb
mov
js
lahf
lahf
add
push
pop
inc
mov
pop
loopne
mov
xor
aam
enter
stc
out
xchg
clc
jle
jae
cmpsb
pop
xor
aaa
sub
movsb
sbb
xchg
sbb
dec
cld
scas
lods
cmp
push
test
mov
add
scas
inc
sbb
pop
mov
shlb
jg
cwtl
out
jle
mov
xchg
cli
push
imul
les
add
movsb
add
or
sbb
cmpsb
dec
ret
and
loope
jbe
adc
sbb
mov
push
xor
shlb
fnstcw
pop
inc
sub
jns
sub
pop
mov
sub
pop
sub
cli
xor
rcll
mov
fcomi
loop
fldcw
data16
xlat
mov
xchg
nop
jl
call
inc
pop
clc
sub
dec
mov
ret
push
pop
aas
dec
ret
jae
push
scas
push
subl
ljmp
inc
fadds
sbb
outsb
popf
and
xor
add
mov
mov
mov
jmp
xlat
frstor
pop
testl
sbb
dec
jge
jo
pusha
mov
ja
int3
jns
sub
xor
mov
or
cmc
stos
inc
mov
stos
mov
jp
add
push
in
adc
push
pop
fcmovnb
xchg
jle
xor
lret
fcompl
insb
icebp
popa
stc
movsl
push
insb
les
aad
jbe
les
imul
loop
pop
out
xor
push
das
jae
es
adc
pop
scas
pop
hlt
fimuls
add
aas
adc
push
sub
les
and
adcl
inc
and
mov
dec
and
jbe
test
cwtl
lods
loope
mov
xchg
data16
rorb
andl
fdivp
lahf
pushf
movsl
add
and
rolb
rorb
jl
jne
ret
scas
cmpsb
and
mov
push
mov
fcompl
outsb
push
es
int3
and
test
jg
sbb
ficomps
mov
mov
jmp
pop
decb
test
lods
add
stos
or
in
adc
xchg
mov
mov
sahf
and
sbb
das
std
dec
lods
das
ja
fnstcw
mov
xchg
dec
shll
pop
in
xchg
adc
sbb
adc
pop
fs
ds
adc
cwtl
into
imul
lods
pushl
lods
jle
sub
inc
pop
test
mov
int3
push
mov
xchg
stos
pop
out
adc
adc
in
mov
jbe
push
cmp
mov
xlat
mov
sub
sbb
dec
cltd
scas
daa
ficoms
pop
mov
cmp
inc
addr16
scas
pop
js
dec
loopne
sbb
pop
in
sahf
repz
nop
clc
in
push
fidivl
out
and
xor
mov
ret
cltd
dec
ret
jmp
and
cmp
out
and
insl
dec
or
adc
movsl
pop
bound
jae
or
lret
mov
xor
pop
or
mov
jb
sub
sub
pop
cmp
sbb
dec
movsb
mov
adc
mov
pop
xchg
lods
lods
mov
pushf
aad
push
lahf
xchg
loopne
cmovno
out
out
iret
dec
rclb
test
repnz
add
int3
dec
fst
mov
pop
imul
push
ss
xor
mov
je
mov
mov
xchg
mov
repz
xor
out
mov
cli
xchg
int3
mov
ret
bound
lods
notl
xchg
pop
mov
hlt
lcall
xchg
mov
ljmp
mov
pop
imul
pop
fwait
sbbl
mov
adc
cmp
arpl
mov
xor
sub
aad
pop
mov
out
lret
sbb
lods
mov
movsb
movsl
js
or
cmp
push
test
rclb
inc
sub
push
lock
int
dec
loopne
in
xor
and
dec
jnp
enter
sarl
popa
mov
xchg
leave
lods
cltd
ss
cwtl
ficomps
sbb
xchg
mov
cmc
xchg
outsb
xor
fstpl
shl
mov
jnp
subl
movsb
mov
pop
and
mov
dec
jl
popf
nop
or
push
or
fnstcw
loopne
inc
mov
cmpxchg
cwtl
pushf
jl
das
push
jo
xor
repz
inc
cmpl
test
insb
mov
or
je
movzbl
add
mov
orl
xor
add
movl
cmp
jne
pushl
adcl
call
mov
add
mov
jmp
fs
movsl
sbb
popa
push
negb
mov
inc
sahf
jo
dec
jge
jo
xchg
enter
popa
jnp
pushf
ret
aaa
mov
pop
sbb
cmp
dec
insb
sub
clc
loope
fcompl
loopne
mov
outsl
pop
dec
pusha
cltd
leave
clc
jmp
decb
mov
adc
out
aas
data16
fistps
iret
inc
pop
cmp
xor
lods
call
push
push
in
call
xchg
ret
sub
sub
cmpsl
or
adc
cmpsb
cmpsb
jle
ds
mov
arpl
sahf
das
cmpsl
inc
stos
and
not
and
lcall
mov
arpl
fwait
mov
push
pop
or
imul
hlt
adc
and
lods
xchg
leave
rcl
mov
fsts
or
dec
pop
fsubrp
or
sbbb
push
sbb
loop
test
das
inc
lret
mov
stos
jge
sub
or
out
popf
mov
in
xlat
roll
mov
xchg
fdivr
add
push
loopne
insb
lcall
adc
dec
dec
aad
inc
ror
add
xchg
add
xchg
shl
clc
xor
push
cmp
ret
aas
and
shlb
lret
leave
lods
mov
lods
inc
fisubrl
inc
cmc
inc
jle
push
rcll
pop
and
in
push
mov
jbe
in
mov
dec
mov
es
mov
notl
test
cmp
ret
adc
outsl
push
add
insb
and
push
and
loop
mov
movsl
leave
jp
imul
mov
int
movsb
pop
aaa
shlb
sub
xchg
xor
sub
sbb
movsb
orb
roll
cmp
jl
xchg
add
cltd
in
push
fidivrs
cmc
mov
and
xchg
aas
xchg
cmpsl
xor
lds
fcoml
ret
cmp
sahf
fs
cli
std
push
push
das
sub
lret
push
movaps
pop
stc
pop
mov
bound
jne
push
cmpsl
ret
cwtl
or
loopne
insb
mov
cld
rcll
mov
in
addr16
fs
movsb
push
popa
xchg
inc
push
orl
cmp
xchg
cmp
cmp
mov
adc
sub
cmp
out
sub
and
push
daa
ds
inc
xchg
sbb
mov
ja
jl
jns
jl
dec
inc
mov
mov
fisttpll
sbb
call
push
xchg
imul
jns
push
inc
pop
jae
mov
mov
stos
push
add
aaa
mov
xor
adc
mov
insb
mov
add
iret
or
jg
xchg
sub
mov
sub
mov
and
inc
insl
inc
pusha
subl
in
jmp
fmull
cmp
mov
ret
push
jge
in
ret
cld
pop
repz
add
push
int3
mov
ja
cmpxchg
arpl
bound
lods
inc
js
out
and
mov
loop
std
popa
push
xor
aaa
sahf
inc
pop
lds
jecxz
pop
and
mov
js
fidivrs
or
push
jp
ss
out
mov
dec
addr16
stos
mov
xlat
cs
insl
xor
mulb
je
stc
push
mov
test
mov
daa
int
sbb
es
pop
xchg
inc
sub
mov
in
ds
out
lods
mov
add
ret
pop
mov
mov
mov
mov
xor
mov
xorl
xor
add
movl
cmp
movl
je
pushl
adcl
pushl
call
jmp
ret
rcrb
popa
cltd
ret
xorw
fimull
lcall
popf
mov
jg
cli
dec
mov
xor
ss
sub
xor
dec
negl
jb
in
cli
and
fwait
jns
pop
sbb
pop
xchg
xor
shlb
and
jb
fnstenv
test
pop
dec
cmp
sbbl
dec
and
pop
cmpsb
popa
push
add
jmp
test
sub
out
adc
int3
mov
adc
fmull
cwtl
loopne
xchg
mov
ret
std
repnz
shrl
mov
fnstcw
and
loopne
lea
iret
pop
jmp
call
sub
pop
dec
into
in
lods
imull
cli
int3
lods
push
dec
in
enter
sbb
scas
inc
push
xchg
adc
pop
clc
sbb
jns
popf
jno
xor
shr
add
data16
jo
test
pop
cli
mov
jge
xor
xchg
adc
popf
sub
pop
dec
inc
std
sbb
mov
push
mov
xor
adc
xchg
outsb
add
jmp
jge
push
mov
outsb
hlt
pop
roll
inc
je
mov
repz
ret
and
push
jns
sub
cli
lret
push
lock
hlt
push
jge
jmp
sub
dec
cltd
cmp
call
leave
insl
test
clc
jle
mov
lods
xor
xor
je
pop
scas
das
imul
pop
test
out
pop
lods
jg
adc
add
into
push
vandps
js
sbb
in
or
test
add
cmp
dec
cmc
mov
outsl
or
add
cs
arpl
or
xchg
rolb
or
xchg
frstor
lahf
sti
pop
in
insl
shlb
outsl
divl
rorb
push
add
jg
pop
push
xchg
cmp
push
arpl
imul
leave
adc
or
cmp
inc
dec
add
mov
push
and
xlat
ret
add
loope
mov
outsb
cmc
lahf
xchg
lea
push
sbb
mov
xchg
or
dec
aam
push
add
pop
pop
mov
inc
jno
stos
into
cmp
cmp
jbe,pt
ss
mov
sbb
shl
out
push
fwait
cmp
jo
sti
pop
mov
clc
out
adc
cltd
test
jno
or
les
adc
sub
push
repnz
aaa
jp
out
ja
mov
scas
or
add
sub
orl
xor
movsl
sar
jns
xor
mov
dec
mov
push
pop
nop
push
jb
push
mov
shlb
fxch
movsl
jne
cmpsl
idiv
dec
sub
lock
jecxz
outsb
out
test
xor
mov
xor
xor
fwait
repz
je
movsl
cmc
call
sbb
fwait
adcl
test
in
jb
jbe
movsl
insb
xor
aas
andb
mov
inc
and
xchg
mov
andl
lret
sub
adc
ds
mov
stos
stc
mov
rcll
sbb
loop
sarl
cmc
pop
rorb
call
ds
aaa
sbb
pop
call
xchg
and
lea
dec
out
sbb
insl
lds
cli
or
in
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
jmp
loopne
or
xor
in
rorb
cmp
bound
jo
dec
jge
jo
enter
push
in
imul
loope
pop
xor
mov
inc
xchg
sub
push
test
pop
xor
cli
sahf
xor
int
dec
mov
xchg
sub
jl
cmc
jb
mull
push
push
sbb
sbb
out
call
das
fistps
dec
mov
pop
xchg
add
push
dec
out
jne
xchg
fcmove
jno
ffreep
xchg
dec
fwait
sbb
test
outsl
mov
outsl
or
add
enter
jo
push
lds
movsl
sbb
pop
sahf
orl
and
lods
dec
test
adc
pop
cmc
jg
xchg
add
pop
sbb
scas
cmpsl
pop
clc
adc
sbb
sbb
fldcw
in
lods
daa
pop
mov
pop
mov
pop
add
inc
cwtl
js
cmp
rcrb
mov
aam
fstl
push
jg
adc
aam
lods
cmp
shll
mov
loopne
adc
xor
hlt
rorb
push
frstor
cwtl
push
out
cmp
mov
push
mov
jbe
xor
or
mov
scas
movsb
ret
pop
and
test
and
les
gs
xlat
lds
clc
test
sbb
cmpb
hlt
xor
les
push
pop
mov
sbb
xlat
xchg
and
xchg
jp
jge
push
ja
fwait
loop
leave
lock
js
sub
ret
pop
hlt
push
rcrl
outsb
sbb
sub
adc
mov
or
lods
jp
out
scas
cmp
fs
cld
fcomps
in
dec
push
add
cmp
icebp
mov
xchg
mov
push
xchg
in
add
inc
lock
pop
sbb
fstpl
add
xor
add
or
xor
push
inc
xchg
fimull
cmc
sahf
idivb
lods
ret
in
fucom
popa
mov
or
add
mov
pushf
fs
push
scas
xor
jecxz
mov
cmpsb
nop
notb
mov
js
fdivrl
fmull
insl
je
and
fdivl
mov
pop
cmp
lahf
jmp
in
mov
es
in
jge
dec
sbb
adc
lea
xor
fildl
and
cltd
ljmp
leave
and
xor
pop
movsb
mov
test
fistpll
xchg
leave
mov
out
dec
repz
and
push
xor
repnz
xor
frstor
dec
fcmovnbe
mov
adc
xchg
adc
lahf
popf
loopne
fisubs
add
or
mov
push
loop
mov
fnstcw
imul
stc
mov
dec
or
ret
xor
movsb
fimull
and
adc
cmpsl
fs
sti
inc
or
les
sbb
cmp
push
xchg
mov
lcall
cwtl
xor
lret
addb
mov
mov
lret
push
pop
xchg
adc
hlt
jns
cs
imul
aas
cs
jge
jg
ja
pmullw
sub
dec
loopne
addr16
int3
loopne
adc
jb
sbb
inc
lods
jg
jb
jle
in
adcb
push
sbb
loop
int
mov
inc
jg
mov
dec
cmp
pop
cmp
int
loope
repnz
in
mov
dec
sbb
aas
out
add
push
fwait
or
iret
je
cmc
iret
fwait
mov
cmpsl
mulb
addb
dec
aam
inc
in
mov
add
jmp
inc
jae
pop
sub
jae
and
mov
xchg
dec
jge
jo
mov
mov
push
out
or
mov
nop
lods
xor
pop
mov
call
mov
fisubs
sbb
lea
in
sub
and
push
xchg
sub
and
mov
mov
sarl
mov
adc
and
lret
js
sbb
jno
push
and
lahf
insb
xchg
sub
jle
inc
test
push
std
pop
and
sbb
push
sbb
push
adc
push
xchg
lds
jge
sub
es
inc
adc
movsb
mov
rcll
aam
sub
int3
mov
out
or
ss
and
mov
push
callw
ss
sbb
jns
lret
push
pop
dec
sti
and
pop
adc
mov
in
cmp
lds
ja
pop
xchg
push
pop
xchg
fcomps
scas
aaa
lcall
daa
repnz
shll
clc
xchg
dec
and
aaa
inc
andb
pushf
rorl
cmpl
xchg
xchg
lret
fs
mov
outsb
xor
movsl
fwait
mov
out
inc
mov
das
into
sahf
inc
dec
cmpsb
push
mov
aad
sahf
push
xchg
or
repnz
arpl
push
mov
and
mov
or
mov
shl
leave
mov
add
pop
ret
es
movsb
cli
sarb
roll
loope
les
dec
shll
sub
mov
popa
js
das
pop
push
jns
es
push
dec
push
fwait
push
jmp
or
jae
xor
push
dec
sbbb
orl
ss
shl
xchg
jge
push
and
cmp
mov
roll
mov
gs
sbb
adc
mov
popa
test
or
enter
loopne
xchg
in
cmp
lea
mov
fsubrl
push
adc
pop
adc
inc
shrb
lods
rorb
and
call
test
cmpsb
lea
mov
aam
inc
mov
fdivrs
mov
fistl
ret
enter
and
xchg
xchg
mov
cmp
mov
pop
push
mov
ret
bound
push
mov
daa
addr16
in
stos
fsts
bound
xchg
jmp
mov
fsub
pop
xorb
aaa
mov
scas
test
sbb
shlb
nop
and
push
pop
or
cmp
icebp
dec
jno
lret
ficompl
add
addb
push
push
pop
xchg
pushf
xor
out
call
push
divb
jg
imul
ret
in
jo
mov
testb
sbb
aam
xor
andb
mov
xchg
clc
sbbl
add
xor
mov
pop
shrd
push
inc
push
imul
lds
andl
push
push
cltd
in
push
nop
mov
loop
les
rcrl
mov
nop
icebp
cmc
sbb
bound
das
jo
push
sub
rcrl
cmp
pop
mov
icebp
pusha
sub
ljmp
cmp
das
xchg
ljmp
mov
sbb
and
repnz
test
inc
jne
jg
push
or
xchg
and
iret
cmp
mov
dec
mov
lods
xchg
scas
int
mov
or
popa
inc
in
test
sbb
xchg
dec
mov
mov
jmp
sbb
sarl
lahf
popa
sti
arpl
scas
jo
dec
jge
jo
and
xor
into
rcrl
mov
enter
mov
mov
inc
insb
into
push
lds
shrb
sub
xchg
cld
jo
jb
mov
sub
outsl
lock
and
lods
pop
sbb
fidivs
adc
mov
rcrb
outsb
pop
sub
push
fildl
cmp
cli
jmp
cwtl
rol
out
cmpsl
cmp
xor
sbb
mov
addb
repnz
loopne
add
lcall
xor
dec
outsb
data16
jb
pop
xor
iret
in
and
jle
das
out
jge
add
mov
push
rcl
sub
adc
jecxz
fldt
test
jae
inc
aas
xor
aam
pop
mov
push
into
scas
push
std
jb
stos
push
sbb
bound
ljmp
in
in
imul
insb
shrb
shlb
or
mov
das
mov
mov
mov
aam
aaa
scas
mov
imul
dec
and
cltd
popf
outsl
add
mov
sub
pop
pop
adc
outsb
jp
jle
mov
and
fcoms
call
jae
adc
pop
sarl
jnp
jnp
jns
stos
push
sbb
push
push
push
xchg
not
lds
add
lods
in
push
stos
xor
enter
das
loopne
mov
dec
xchg
call
loopne
lock
push
stos
fmuls
clc
add
push
mov
mov
inc
movsb
cmp
xchg
scas
repz
in
sbb
out
ret
iret
data16
loop
jge
aas
jae
dec
add
pop
pop
outsl
ficoml
adc
insl
shlb
sti
inc
pusha
mov
sbb
pop
cmpsb
adc
icebp
out
int
lahf
fstpl
jb
mov
je
mov
incb
inc
lock
mov
sti
push
and
bound
rolb
dec
adc
lock
inc
xor
and
and
repnz
out
daa
popf
cmc
inc
and
stos
inc
es
mov
and
fstl
xchg
add
sub
mov
jne
mov
shrl
in
sub
les
aad
cmpsl
inc
addr16
outsb
inc
push
movsb
xchg
jle
dec
sbb
jns
in
mov
xor
sbbl
scas
sub
mov
cmp
lcall
in
sub
xor
xchg
xor
mov
aam
cwtl
je
cmp
je
xor
cwtl
sub
mov
fcoml
out
xchg
sub
jns
gs
pop
ljmp
jg
ret
pushl
adc
orl
scas
push
inc
pop
jmp
aaa
clc
jb
fs
arpl
in
cmp
dec
mov
out
jo
incb
dec
mov
movsl
xor
push
jae
das
lds
mov
fmulp
pop
jp
cs
or
in
loopne
jns
jo
pop
mov
cmp
aaa
icebp
int3
cmp
xor
xor
jne
pop
push
idivb
fs
mov
jo
aas
push
mov
adc
bound
xchg
push
std
push
dec
je
xor
jbe
or
or
or
lea
mov
push
pushl
pushl
call
mov
mov
jmp
or
rcl
cmp
pop
jns
popa
out
stos
in
stos
jo
dec
jge
jo
xor
pushf
add
mov
in
sub
imul
mov
mov
sbb
enter
ja
add
xchg
lock
mov
cwtl
mov
xchg
mov
sbb
jle
or
dec
push
sub
ljmp
cmp
sbb
and
aas
bound
dec
cmpsb
xchg
int3
movsl
test
jl
adc
js
push
out
hlt
fstps
sub
lret
repnz
add
mov
sub
out
pop
xchg
fisttps
jl
sub
stos
or
jmp
cli
jbe
mov
push
loope
sub
movsl
sbb
inc
out
cmpl
enter
mov
movsl
jl
decb
fstpl
incb
stos
dec
icebp
cmc
cld
cmpsb
push
pop
push
xor
iret
push
stos
and
loopne
sub
dec
arpl
jae
and
sbb
out
stos
mov
bound
sti
scas
cltd
aas
pusha
push
lods
loopne
faddl
loop
rorl
xor
cld
sarl
push
cwtl
out
cmp
jnp
mov
cwtl
fstl
add
lods
divl
sbb
cmp
lods
jno
pop
xchg
fldcw
and
and
xor
jecxz
das
pop
insl
xchg
push
cld
cwtl
fldenv
stos
jge
jmp
pop
pop
sub
jae
das
stc
jbe
pop
iret
adc
and
mov
fadds
xor
rcrb
scas
mov
xchg
add
xor
mov
daa
mov
lcall
pusha
aam
lods
cs
mov
addr16
mov
or
sbb
shl
xchg
lock
pop
or
divl
xor
stos
inc
jne
not
pusha
jg
popa
out
inc
lea
dec
mov
jbe
pop
xchg
adc
lret
jb
cmp
jmp
add
add
rcrl
adcl
daa
ss
mov
mov
js
lock
mov
xchg
adc
fs
mov
xor
rcl
mov
jl
lret
push
lcall
lret
insb
mov
adc
and
push
out
adc
les
jne
fbstp
or
cmpsl
xchg
out
bound
mov
cmp
ret
fstpl
sti
adc
in
sarl
cmp
dec
jae
dec
pop
dec
push
imul
std
fadd
orl
out
fmuls
aad
inc
pusha
out
in
mov
sub
shlb
or
sbb
mov
jb
in
jmp
dec
in
add
jp
sub
inc
dec
call
inc
repz
dec
dec
xor
sbb
pop
movsbl
repz
lods
in
lea
pop
dec
pop
adc
xlat
mov
gs
out
shll
jne
lret
mov
cli
lcall
dec
push
ret
pushf
fs
push
or
sub
pop
xchg
sbb
mov
fnstcw
clc
or
pop
int3
in
fidivrl
mov
lock
cmpsb
in
sbb
inc
ds
sbb
incl
sbb
lret
test
cmp
mov
jle
insl
xor
out
les
in
icebp
lds
inc
mov
inc
int3
mov
ss
int
pushf
adcb
adc
sub
and
sbb
rcr
loop
push
stc
or
gs
ja,pn
mov
stos
rorb
mov
insb
add
daa
cli
hlt
sti
lds
dec
push
outsl
ljmp
dec
pop
push
pushl
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
jmp
xlat
and
insb
push
aaa
pop
push
push
sahf
fmuls
jo
dec
jge
jo
fbstp
movsl
sub
lahf
and
wbinvd
ljmp
sbb
jne
pop
jnp
xchg
lods
enter
cmc
mov
rolb
out
imul
into
cmp
fsubs
nop
dec
jg
pop
pop
mov
iret
insb
xchg
xor
push
adc
pushf
pop
sub
and
addr16
mov
bound
mov
mov
testl
mov
and
sub
pop
dec
mov
movsb
repnz
cmp
mov
mov
xchg
or
inc
lds
jecxz
ret
or
je
and
and
or
push
fsts
mov
movsb
js
lock
jb
mov
loopne
or
and
xchg
xor
lods
mov
shll
jge
xor
mov
in
or
int3
subl
lahf
data16
mov
or
jmp
jns
cmpsl
dec
insb
or
inc
pop
push
hlt
and
mov
enter
leave
jl
and
pop
mov
out
adc
cltd
xchg
outsl
lahf
sub
rcll
or
xchg
pop
hlt
addr16
fdivs
aad
insb
mov
mov
xor
pop
jp
js
sbb
inc
lods
add
das
cld
mov
adc
int3
cmp
sub
shrb
imul
sbb
je
and
ss
push
sbb
push
xchg
pop
xchg
test
clc
bound
push
jnp
sub
and
xchg
inc
in
loop
stos
rorl
sbb
imul
xchg
test
push
cld
and
inc
dec
mov
push
cmpsl
idivb
mov
popa
push
cmpsb
bound
cmpsl
push
pop
clc
repz
cmp
mov
out
jns
mov
add
mov
lret
imul
pop
std
sub
cwtl
push
sub
xor
adc
mov
mov
dec
xchg
imul
fidivl
pop
in
mov
cmp
and
out
and
es
movsl
and
mov
clc
push
sbb
ffree
lcall
mov
shl
mov
into
sub
sbb
popf
orb
push
lods
addr16
mov
rcll
xor
cs
add
loopne
mov
out
mov
mov
mov
cli
sahf
dec
cmp
push
pop
dec
jbe
cmpsl
lock
xchg
pop
cld
repz
pop
jmp
push
lods
cmp
mov
iret
sbb
adc
cmc
xchg
jg
pop
shlb
xorl
push
cmp
gs
in
sbb
mov
jb
loope
pop
and
and
and
je
xor
mov
add
push
fstl
add
insb
jno
inc
xchg
xchg
cli
clc
loopne
addl
subb
fldl
jo
test
push
cmp
jge
cld
xchg
sbb
push
js
sub
lock
jecxz
idiv
jb
mov
xchg
fsubrl
or
mov
daa
fsubs
lret
lahf
sub
xlat
scas
lock
cwtl
cmp
mov
fdiv
pop
movl
out
popf
dec
in
daa
push
les
leave
push
test
mov
fdivrs
mov
inc
jne
or
or
adc
flds
jge
inc
cmp
lock
add
inc
jmp
std
add
mov
push
pop
loope
mov
mov
sub
pusha
or
cmp
jne
mov
xor
jmp
mov
add
mov
mov
jmp
sahf
das
or
mov
mov
pop
mov
cmp
push
inc
xor
jo
out
into
out
lahf
mov
rcrl
movsb
stc
mov
imul
incb
sub
ret
je
js
xchg
and
mov
push
push
dec
scas
sbb
lret
imul
dec
es
push
pop
jno
cmp
movsb
push
inc
inc
adc
rcll
mov
mov
in
mov
je
and
rol
mov
pop
arpl
lret
cmp
push
pop
adc
xor
movsl
mov
and
das
popf
jb
imul
iret
les
leave
aas
or
add
mulw
aas
mov
mov
sbb
sahf
fstps
and
stos
cmp
adc
mov
mov
push
lods
test
sbb
out
pop
inc
cmc
or
pop
inc
aas
pop
mov
jg
push
add
add
mov
dec
push
scas
scas
jo
lcall
hlt
pop
add
and
jecxz
xor
cmpsb
mov
fildl
mov
mov
and
cmpsl
pop
sbb
inc
popa
jbe
xchg
mov
dec
shrl
push
adc
mov
push
push
dec
xchg
cltd
pop
sar
mov
cmp
mov
repz
lds
gs
xor
add
pop
shll
rcrl
sbb
lods
std
sbb
fildl
rorb
adcl
inc
fwait
pop
mov
insl
xchg
sub
adc
xchg
sbb
sbb
sarb
jnp
in
cs
mov
and
mov
add
sbb
test
sub
mov
xchg
sub
arpl
out
data16
fwait
ret
mov
jno
jno
ljmp
dec
xchg
jo
les
adc
lret
jecxz
orb
in
xor
fistpll
pop
leave
test
xchg
gs
mov
les
pop
mov
jge
adc
iret
inc
mov
mov
pop
sbb
xchg
mov
jg
inc
jnp
mov
ja,pt
jo
aas
notl
insb
mov
add
pop
dec
in
aad
dec
mov
sbb
inc
divl
popa
xchg
stos
xchg
mov
loopne
addr16
sar
pop
inc
xchg
or
rorb
aaa
enter
push
stos
adc
call
lret
shll
jge
xchg
movsl
pop
jnp
inc
ret
je
loop
movsl
jb
cs
or
push
xor
dec
mov
cmp
movsl
movsb
popf
popa
stos
stc
jge
mulb
out
lret
ficompl
popf
das
scas
xor
adc
sbb
aas
fstl
jae
cmpsb
subb
jecxz
cmc
sub
mov
sahf
bound
std
ljmp
inc
mov
sbb
lock
xchg
les
mov
shrb
inc
std
jo
xchg
jnp
dec
add
push
push
leave
jmp
pop
and
js
sub
mov
lret
cli
sbb
leave
ret
mov
xchg
in
xchg
xchg
mov
jge
sub
xlat
popa
insb
adc
push
cltd
std
jnp
loopne
addb
loope
push
pop
push
sub
call
je
fs
lods
mov
aad
sbb
insb
sarl
imul
adc
loope
frstor
sbb
dec
popa
pop
minps
jae
adc
push
mov
fcmovnu
jno
sub
mov
sub
mov
mov
scas
mov
ja
popa
jmp
cld
inc
fnstcw
je
mov
jmp
in
outsl
pop
outsl
jne
data16
test
pushf
push
inc
xchg
fmull
mov
jo
sahf
sub
lcall
cmp
jns,pn
mov
pop
push
movsb
jl
or
and
and
out
or
aaa
repz
daa
inc
aaa
mov
sti
inc
sbb
mov
test
call
cli
jae
pop
xor
mov
js
addr16
ret
dec
mov
ret
mull
or
mov
cmp
clc
pusha
loopne
push
mov
outsb
int3
sub
xor
jle
push
daa
pop
aad
imul
and
ficompl
pop
dec
add
or
or
testb
adc
sbb
sbb
cmp
mov
sbb
and
cwtl
call
ljmp
std
jp
ljmp
lds
pop
dec
adc
xchg
ds
sbb
xor
push
dec
loop
stos
gs
cwtl
std
call
jmp
and
sbb
aas
fstps
sti
enter
dec
sbb
nop
js
xchg
or
adc
lahf
punpckhbw
cmpsb
dec
outsl
adc
sbb
je
pushf
loopne
fwait
test
pop
dec
into
and
rclb
das
pop
rcrl
cmpsb
xor
cmpsb
push
xchg
and
add
add
cmp
sti
pop
les
add
test
sbb
cltd
out
iret
ss
mov
out
imul
js
jmp
sbb
mov
or
ja
mov
mov
adc
cmp
stos
mov
push
sub
nop
in
xor
jl
xor
push
or
add
mov
push
pop
mov
jns
push
jnp
test
fdivrp
jl
shrb
imul
or
into
dec
test
outsb
les
fprem1
sbb
push
lcall
enter
orb
cmp
cwtl
movsl
mov
cmpsb
aas
ret
jge
mov
push
push
loope
cli
pop
hlt
jecxz
cmp
cwtl
pop
add
jne
pop
sahf
inc
add
mov
xchg
add
add
cmp
andl
test
xor
hlt
inc
test
imul
cwtl
enter
les
xor
es
ljmp
mov
lds
aaa
cmp
fcmovbe
cmp
fucompp
daa
inc
icebp
out
or
das
adc
or
cs
jnp
xor
loop
and
adc
jecxz
xchg
pop
sub
mov
pop
lds
mov
mov
jno
inc
cmp
imul
js
adc
orb
rclb
pop
fnstenv
pushf
sarl
les
imul
mov
mov
mov
lods
test
cmp
sti
and
and
aam
jge
inc
inc
movsb
movsl
jmp
dec
insb
push
mov
test
cmp
mov
cmc
das
push
push
inc
pusha
jnp
in
lods
es
into
lcall
dec
clc
cmp
ds
cmp
fdiv
inc
out
mov
out
rol
test
cltd
inc
sbb
iret
mov
mov
mov
sub
into
xchg
inc
hlt
out
lds
aaa
inc
sub
pop
stos
jmp
mov
mov
lds
push
sub
xor
sub
add
dec
enter
xorl
pop
xor
sub
call
mov
aas
outsl
test
adc
sbb
inc
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
jmp
ja
mov
mov
lret
xor
jo
jge
jo
mov
xchg
lahf
xor
test
loop
popa
inc
adc
and
mov
add
xchg
insb
jge
stos
outsl
adc
xchg
std
test
test
daa
mov
pop
ret
push
push
fwait
movsb
push
xor
add
lds
cmp
sahf
fs
sti
xchg
pop
jbe
rolb
push
push
aad
jp
test
cwtl
add
sbb
addr16
lock
lds
js
mov
push
cltd
xor
or
push
out
jnp
xchg
fcmovbe
lret
sub
scas
xor
jb
jae
fcoml
cs
mov
and
jno
mov
icebp
sub
sub
cwtl
xchg
dec
dec
popa
movl
dec
xor
shrb
xchg
jbe
sub
cli
popa
aaa
push
popf
cmpsb
dec
cmpl
jo
lock
jle
pop
fwait
jo
inc
pop
push
push
iret
stos
into
mov
imul
mov
jbe
pop
popf
es
aam
xchg
mov
add
mov
das
lea
aas
sub
pop
pop
lods
fmuls
ds
clc
ret
notb
les
mov
out
sahf
sbb
sahf
xor
stos
adc
enter
cmpsl
and
sbb
repz
push
dec
dec
pop
sbb
push
mov
or
sub
jne
push
jmp
and
aaa
lock
push
repz
shrl
sub
inc
sbb
inc
mov
ja
cmp
and
xchg
pop
sbb
fprem1
fildl
in
pop
ds
add
jns
sub
cmc
repz
add
lods
jl
loope
add
sbb
ljmp
and
adc
roll
repnz
xorl
pusha
adc
adc
out
mov
mov
xor
inc
pop
aas
dec
andl
es
xor
jmp
pop
fnstcw
nop
int3
xchg
fcomi
sub
inc
lea
je
xor
sub
iret
lods
mov
pop
or
lods
xor
negl
mov
iret
mov
push
rclb
mov
stos
into
orl
movsb
jl
or
mov
in
popa
std
jecxz
mov
stc
das
aaa
inc
addl
cmpsl
pop
mov
int3
xor
das
lahf
push
repz
lock
adc
xchg
add
outsb
add
xor
orl
dec
mov
xchg
adc
xchg
rcll
shll
inc
lds
mov
mov
push
dec
adc
inc
cltd
sbb
pop
mov
mov
jae
ja
mov
btc
shrl
dec
xchg
mov
out
push
loop
ret
xchg
xchg
pusha
es
inc
xchg
rorl
iret
xchg
loope
negl
add
xchg
lret
add
xor
mov
cltd
adc
xor
ss
pushw
lods
out
ret
test
push
add
jns
ret
pushw
sub
inc
jle
js
inc
or
insb
sahf
cmc
dec
cmp
sub
ds
cwtl
cld
cmpsl
repz
loope
add
sub
ja
push
jno
and
in
mov
mov
push
idivb
xor
int
xchg
in
mov
mov
sarl
loop
add
jnp
pop
pop
pop
cmpsl
add
xor
test
fistpl
je
popa
adc
push
clc
add
mov
js
mov
mov
out
and
sub
adc
lds
cmpb
mov
jmp
inc
cli
fisttpl
jp
xchg
mov
mov
jge
jo
push
rcl
mov
shl
cwtl
fwait
pop
mov
fmull
lret
jge
dec
jmp
aaa
out
aam
fadds
fwait
sbb
notb
inc
mov
jno
daa
sbb
xchg
mov
cs
inc
push
sbb
aam
add
lods
rolb
sub
sti
inc
pop
add
dec
mov
ret
shl
jmp
jo
orb
in
lret
aam
movb
rcl
fwait
lss
cli
test
mov
shl
cmc
jg
or
xor
add
nop
lods
test
mov
cmc
mov
cmpl
push
ret
adc
or
push
hlt
out
es
pop
push
mov
aaa
sbb
sub
mov
fildl
ret
sub
sbb
push
inc
mov
arpl
lock
sbb
fsts
into
std
mov
add
pop
cmp
mov
arpl
ljmp
add
fdivl
add
sbb
cltd
test
cmpb
lret
cmp
jns
adc
insl
xchg
dec
test
stc
cmp
ucomiss
lret
fwait
jg
int
pop
xchg
aaa
in
pop
and
cltd
pop
dec
imul
popa
xchg
test
lods
mul
out
cltd
stos
mov
fdivs
lahf
fs
daa
arpl
fs
cli
sti
outsb
sub
mov
mov
mov
sbb
inc
scas
repz
mov
movsl
sti
lret
dec
or
mov
mov
rcll
and
xor
pop
xchg
mov
imul
sub
dec
mov
test
lods
xchg
loop
dec
movsb
es
adc
jnp
dec
lds
jae
inc
sbb
dec
mov
repnz
inc
or
dec
sbb
jbe
bound
xchg
or
mov
cli
pop
mov
test
push
mov
jge
xchg
pop
lret
mov
lods
test
call
sti
jmp
and
jecxz
mov
fadds
cmp
or
xor
loop
pop
jge
mov
ss
mov
scas
push
daa
pop
mov
xor
cmpb
ljmp
cmpsl
xchg
adc
cmp
xchg
mov
leave
jge
mov
fwait
inc
call
dec
popw
push
frndint
pop
sbb
push
xor
push
cmp
jb
ret
push
in
fldt
jnp
loope
fwait
mov
jbe
xchg
movsl
mov
mov
daa
nop
xchg
push
mov
xor
fsts
push
cmp
or
cmp
test
loop
push
or
mov
pushf
orl
rcl
cmp
xlat
mov
mov
pop
xor
imul
push
rclb
pop
arpl
adc
xchg
jne
push
es
pusha
loope
fidivrs
cmpsl
inc
in
mov
and
sbb
enter
scas
out
outsb
pop
out
xor
js
mov
in
push
or
cmp
cmp
cmpsl
mov
enter
std
mov
inc
xchg
cmp
cmpsl
enter
stc
push
enter
test
hlt
pop
xchg
jno
outsb
xor
mov
rol
lcall
push
fs
mov
push
cli
mov
jns
mov
movsl
jl
adc
xorl
xor
cmpsb
push
mov
jae
xchg
test
adc
mov
mov
adc
or
add
add
jae
roll
mov
jo
jge
jo
jecxz
jae
popa
mov
dec
and
scas
jns
icebp
xchg
pushf
add
out
mov
pop
push
fcmovnbe
outsl
pop
push
sub
divb
and
fists
fbstp
fldcw
add
sbb
mov
rcl
push
mov
fisttps
jno
fnstsw
xor
dec
inc
out
fwait
push
ljmp
or
xchg
xchg
mov
mov
out
mov
xchg
pushf
rcll
mov
add
in
ficompl
push
and
dec
cmpsb
mov
pop
loopne
cmp
and
sbb
jge
ret
popl
fisubl
add
das
mov
inc
fs
pop
sbb
rcl
daa
out
jp
mov
aaa
into
push
out
pusha
push
insl
jb
aaa
adc
sbb
jns
insb
or
pop
fildll
xor
ret
mul
pop
lcall
push
xor
mov
test
mov
ljmp
add
out
or
xchg
pusha
xchg
sti
movsb
fadds
rolb
sub
dec
push
xor
test
and
in
std
and
push
enter
imul
jecxz
add
insl
into
dec
movsl
jp
push
imul
ss
addr16
das
popa
xchg
imul
push
in
adc
lcall
push
popa
aam
dec
push
jg
push
add
pop
dec
into
mov
push
in
fsubrl
in
jmp
or
out
cmpsl
cmp
jmp
std
mov
add
sub
or
dec
mov
pop
push
jmp
dec
push
add
push
shll
aad
jge
leave
jle
movsl
pop
push
xor
mov
test
inc
loope
ret
outsl
cmp
push
push
mov
jb
add
mov
scas
push
outsl
cli
push
cwtl
aad
ficoms
mov
xor
xchg
sbb
or
js
ja
dec
inc
mov
loopne
sbb
pop
xor
mov
lcall
xchg
mov
add
xor
cmp
sub
sar
mov
test
mov
pop
sub
pop
ljmp
js
xlat
fs
int3
and
push
push
rorb
lods
push
xlat
push
sbb
shrb
andl
sti
shll
loop
xchg
loope
cmpsl
xchg
mov
dec
xor
sarl
cmp
lret
daa
add
jecxz
adc
jns
or
sbb
stos
add
mov
or
adcb
ds
lods
or
rolb
dec
jbe
nop
js
xchg
test
xchg
scas
inc
int3
imul
cmp
inc
movsb
mov
addl
push
icebp
rcr
orl
pushf
pop
push
iret
sub
stos
outsl
adc
inc
jbe
in
add
adc
stos
mov
push
ret
push
mov
sub
inc
cs
sub
ds
xchg
or
lods
xor
xchg
cmpsl
test
out
out
fstpt
dec
inc
cs
and
sti
add
push
ret
cmp
xlat
xchg
es
outsb
rorl
jle
jl
cmp
rcl
adc
std
ret
outsl
out
sbb
ds
mov
cld
push
mov
add
inc
mov
stos
jp
and
pop
sbb
jbe
ss
pop
add
pop
sub
lcall
mov
xor
add
imul
mov
xor
mov
lea
cmp
jmp
mov
push
mov
bound
inc
jo
dec
jge
jo
mov
fdivs
jp
cmpsl
sti
jmp
inc
outsl
mov
add
js
popa
inc
adc
sub
mov
mov
ja
adcl
aad
dec
nop
std
out
sbb
repz
leave
ja
xor
cmp
xlat
mov
out
lret
push
ljmp
in
fdivl
pop
std
jl
mov
lock
mov
mov
push
mov
sbb
out
push
push
js
out
faddl
push
lods
adc
mov
ret
pop
fs
les
ret
xchg
xor
adc
dec
xor
cwtl
mov
push
imulb
insl
lock
cmp
cmp
mov
fsubp
call
jns
subl
xchg
fsubl
push
fwait
test
jo
fists
addr16
outsl
inc
push
leave
push
jge
jbe
clc
mov
mov
rcr
sub
dec
movsl
mov
shlb
xchg
jmp
jns
mov
leave
pop
mov
xorb
movsl
mov
dec
int
xchg
lcall
pop
pop
popa
nop
add
sahf
mov
sbb
inc
or
popa
xchg
xchg
or
jge
push
mov
mov
out
mov
mov
shrb
mov
or
incl
test
jmp
aad
sbb
dec
mov
insb
aam
push
cli
jl
jl
ljmp
xchg
adc
loope
inc
shrb
inc
pop
or
popf
jns
sub
add
outsl
xor
sub
sbb
js
xlat
mov
mov
insl
xor
outsl
clc
jnp
jmp
shr
ret
call
out
repz
loop
mov
pop
lret
movsl
jno
cmp
xchg
mov
pusha
adc
movsl
jmp
cltd
xor
sarw
adc
iret
pop
push
in
inc
int3
popa
inc
mov
mov
shlb
mov
xchg
nop
xor
mov
jl
into
mov
stc
ja
add
nop
push
pop
dec
outsl
lret
xchg
cli
jmp
fistl
roll
or
jmp
jmp
call
sbb
ljmp
mov
inc
inc
ret
pop
or
mov
or
xor
xchg
lret
mov
dec
push
adc
sbb
cmpsb
mov
enter
cmp
dec
faddl
mov
xchg
jnp
fcmovbe
out
jmp
xlat
test
push
mulb
xchg
adc
popf
ret
mov
arpl
sbb
addr16
and
je
pop
in
jg
mov
ret
into
scas
add
pusha
sub
xlat
pop
sbb
mov
rcr
mov
mov
jp
and
xchg
pop
pushf
jb
hlt
and
mov
cmp
in
and
or
pop
cmp
iret
lea
fidivrs
inc
dec
sub
cmc
out
std
cli
testb
push
inc
fwait
pop
sub
mov
pusha
jge
inc
notb
or
fisubs
xor
jmp
add
push
bound
je
push
cmc
xor
mov
mov
mov
in
cmpsl
push
xchg
in
xchg
daa
jne
pop
jmp
aam
mov
jne
jecxz
cmp
fimull
int3
fnstsw
and
inc
fcompl
add
xchg
push
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
jmp
inc
orl
push
ds
and
dec
jo
dec
jge
jo
adc
test
and
xchg
pop
adcb
repz
insl
test
inc
cmp
mov
xchg
roll
mov
orl
and
add
pusha
mov
div
test
add
mov
repz
pop
mov
cmp
pusha
adc
sbb
or
outsl
fsts
cmp
insl
cwtl
jmp
jno
ret
push
and
adc
je
ss
sbb
inc
xchg
pop
sbb
sahf
repz
jecxz
cmp
and
fstps
in
dec
xor
fdivrl
inc
xor
inc
jo
lea
push
loopne
mov
push
cs
jae
add
xchg
shlb
pop
xchg
movsl
in
sbb
insb
rolb
addr16
pop
mov
push
aas
int
pushf
pop
fidivs
mov
out
xchg
cmpsb
in
leave
mov
fdivr
cmp
xchg
cmp
dec
or
cltd
popa
jo
lret
ret
mov
divb
out
fwait
aad
xor
clc
pop
adc
mov
popfw
mov
jecxz
mov
xchg
shl
sub
jne
sti
mov
xchg
lds
loope
mov
rorl
ret
xchg
inc
xchg
lods
orl
test
push
cltd
in
sahf
and
jmp
cwtl
mov
xor
and
ljmp
dec
xchg
pusha
push
xor
cmp
inc
rcrb
aas
shrb
jg,pn
inc
pusha
cmc
push
cli
inc
shlb
push
sub
sar
jbe
pop
cmp
inc
xor
inc
test
or
out
rep
adc
repnz
xor
insl
ss
inc
movsb
out
imul
fwait
xchg
sbb
lds
mov
pop
rcrb
pop
aam
pop
add
and
arpl
ja
dec
xor
push
push
add
push
or
xchg
or
psadbw
cmpsb
cmp
xchg
into
je
or
xchg
push
les
hlt
test
inc
lock
xor
add
jb
fs
cs
arpl
fldenv
in
cltd
mov
andb
stos
rorb
jecxz
mov
addr16
cmpsl
push
ds
xor
scas
push
fst
mov
jg
iret
dec
into
scas
and
shlb
and
test
in
fisubl
je
xchg
xchg
fsubs
enter
xchg
push
fs
stos
ljmp
bound
and
mov
decl
stos
punpckldq
rorl
sbb
int
cld
jg
in
movsb
lds
jo
mov
mov
gs
addb
push
xchg
pop
popf
mov
or
ss
sti
or
movsl
test
in
and
mov
add
cld
and
cmpsl
test
xor
push
pop
into
fsubrl
inc
outsb
jecxz
std
es
push
rorl
mov
jle
and
addr16
mov
hlt
repz
lock
adc
mov
lods
sub
jg
and
sbb
mov
lahf
mov
or
cmp
arpl
pop
lds
inc
bnd
inc
sbb
stos
xor
outsl
js
xor
push
adc
lcall
fsubrl
lcall
inc
push
mov
repnz
mov
cs
sbb
and
adc
mov
or
mov
call
std
repnz
push
push
loope
push
sahf
fdivrl
mov
sti
pop
push
ret
clc
jmp
inc
call
pop
std
test
cmp
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
jmp
jp
jb
jb
adc
sub
cmc
pop
sbb
jo
jge
jo
mov
sti
lods
xchg
mov
in
call
das
or
sbb
es
mov
xor
clc
movl
mov
imul
jmp
shrb
jl
cltd
enter
add
push
inc
mov
sub
dec
adc
int3
and
clc
or
add
nop
dec
stos
sahf
xlat
mov
sub
stc
adc
push
fmuls
mov
pop
xchg
mov
mov
loopnew
jbe
sub
sbb
inc
mov
fmuls
lea
or
mov
jg
daa
sub
loop
xchg
or
into
mov
pop
xor
pusha
inc
jb
outsb
std
jp
inc
loopne
insl
add
cmpsl
push
repnz
add
cmp
int3
fisubl
dec
xchg
sbb
mov
popf
xor
in
fidivl
js
adc
lods
sbb
pop
movsl
xlat
imul
test
mov
jae
cmp
mov
cmp
jle
and
sti
sub
sahf
mov
adc
mov
mov
cli
cmp
cld
push
rorb
lret
rclb
mov
mov
and
pusha
push
pop
xchg
pop
ret
aas
sbb
aaa
popf
cmpsb
sub
sarb
enter
adc
sbb
in
push
xchg
add
dec
cmovp
dec
jns
dec
jg
cmpsb
jecxz
fcom
pop
pusha
rclb
jmp
iret
insb
lret
outsl
push
out
push
mov
sbb
stos
mov
inc
gs
xchg
add
shlb
xchg
mov
scas
mov
adc
xor
lods
mov
test
push
ljmp
filds
dec
mov
frstor
adcb
inc
jae
test
push
in
push
adc
cltd
inc
xor
jne
test
add
std
sbb
or
mov
inc
fs
and
iret
fstps
push
lods
push
orb
dec
jb
sarl
insl
add
cmpsl
lods
cltd
push
shlb
test
out
adc
mov
inc
stos
or
shll
xor
xchg
dec
adc
int
xchg
loop,pt
sub
dec
dec
cli
xor
lock
out
inc
pop
mov
mov
pop
xor
lcall
jae
vcvtqq2ps
out
clc
xchg
add
pop
lcall
and
pop
fisttpl
stc
inc
aam
es
xchg
fcompl
mov
cltd
cwtl
fsubl
inc
mov
add
jns
and
sarl
ret
cmp
push
inc
out
sarb
bound
xor
mov
jbe
repz
in
loope
mov
jns
mov
lock
push
daa
je
mov
ret
and
std
push
push
mov
daa
mov
outsb
mov
add
shll
or
mov
pushf
stc
std
imul
push
imul
push
pop
das
sbb
add
fcomp
mov
cmpl
dec
iret
fcom
jle
adc
push
xchg
mov
mov
push
jo
add
or
lock
cmp
jae
add
add
repnz
jo
inc
mov
sbb
push
in
add
lds
inc
lods
pop
daa
lock
push
dec
cmp
mov
push
mov
and
sub
rolb
pop
hlt
pop
mov
pop
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
jmp
fisttps
jecxz
out
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
in
in
cld
jge
mov
fsub
add
mov
add
add
mov
inc
push
fisttps
test
fadds
jmp
fildl
inc
jo
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
ret
cld
incl
out
xor
mov
cld
jo
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
pushf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
cmp
pushf
or
enter
xor
pushf
inc
ds
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
pushf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
pushf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
bswap
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
les
mov
mov
cmp
mov
add
xor
pushf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
fs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
xor
pop
lods
incl
mov
pushf
jo
cmpl
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
pushf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
pushf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
fdivr
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
faddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jo
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
int3
jne
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
and
jo
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
pushf
inc
xor
pop
inc
shl
inc
sub
inc
add
add
loopne
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
leave
inc
add
rdpmc
sbb
mov
cmovne
jmp
inc
mov
sbb
mov
add
out
add
sub
add
jo
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
into
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
ljmp
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
pushl
lcall
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
wrmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
pushf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
or
inc
xor
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
call
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
pushf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pop
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
pop
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setl
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
add
add
enter
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
add
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
incl
jo
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
jno
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ds
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
pushf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
icebp
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
add
into
fs
mov
ret
add
add
add
ds
add
into
ret
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
cmp
fs
or
add
add
push
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
xor
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
add
add
lret
lock
clc
inc
lret
cmp
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
pushf
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
pushf
pushf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
pushf
add
clc
cmp
or
add
xor
or
lea
or
enter
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
mov
adc
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
add
pushfw
add
add
mov
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
aaa
inc
pop
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
pushf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
mov
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
in
into
inc
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
xor
fmuls
test
cld
or
dec
ret
push
inc
dec
mov
mov
push
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
pushl
in
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
push
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
cld
mov
xor
add
dec
jnp
mov
xor
add
mov
mov
xor
rorl
jb
add
ja
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
pushf
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
mov
mov
cmpb
add
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
xor
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
pushf
mov
jge
decl
