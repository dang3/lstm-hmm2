push
mov
sub
push
add
push
adc
push
adc
xor
sbb
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
push
mov
pop
push
call
push
andl
push
push
push
push
xorl
push
sbbl
call
push
addl
push
push
push
sbbl
push
push
push
incl
call
addl
dec
movl
jne
push
sbbl
push
push
andl
call
test
je
mov
adc
imul
mov
mov
movl
mov
movl
cmp
jne
addl
movl
pushl
subl
pushl
andl
pushl
xorl
call
mov
mov
or
mov
xor
mov
mov
sub
movl
lea
xor
mov
lea
mov
addl
mov
mov
adc
mov
mov
add
mov
mov
xor
mov
xor
mov
adcl
add
movl
mov
mov
movl
cmp
movl
jne
mov
mov
mov
xor
add
mov
xor
mov
movzbl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
xor
dec
mov
jmp
mov
or
mov
xor
add
or
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
mov
xor
or
adc
mov
xor
xor
mov
sbb
mov
xor
mov
mov
mov
sub
mov
orl
mov
movl
add
mov
xor
add
mov
add
mov
andl
mov
adcl
xor
xor
sbbl
add
movzbl
and
mov
xor
lea
cmp
ja
or
mov
mov
xor
mov
sbbl
xor
andl
lea
subl
push
sbb
mov
xorl
xor
lea
orl
push
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
mov
andl
pushl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jb
xor
lea
mov
mov
decl
xor
xor
sbbl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
movzbl
sub
mov
mov
xorl
xor
lea
mov
cmp
movl
jbe
add
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
adc
mov
mov
xor
mov
sub
andl
xor
mov
not
mov
movl
cmp
movl
jne
addl
lea
andl
mov
lea
addl
mov
mov
xorl
test
movl
je
adc
mov
mov
mov
sub
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
sub
cltd
mov
mov
mov
or
add
mov
adc
andl
subl
xor
xor
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
push
call
mov
dec
mov
jmp
not
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
negl
add
mov
mov
movl
adcl
xor
addl
mov
mov
xor
movl
mov
cmp
movl
jne
mov
mov
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
negl
mov
movl
mov
andl
xor
add
movl
adc
andl
xor
addl
xor
movl
cmp
movl
jne
cmp
jne
mov
addl
mov
andl
xor
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
addl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
xorl
add
movl
jmp
movl
mov
movl
cmp
je
mov
mov
orl
xor
add
cmp
je
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
movl
mov
mov
mov
adcl
pushl
addl
mov
pushl
addl
add
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
add
mov
mov
orl
pushl
call
mov
mov
movl
mov
movl
jmp
adc
mov
sub
mov
andl
xor
subl
add
cmp
jne
add
mov
movzwl
sbb
mov
adcl
mov
xor
sbbl
add
cmp
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
andl
push
xor
movl
add
xorl
push
xorl
push
andl
pushl
adcl
pushl
sbbl
call
add
mov
mov
sub
mov
or
mov
sub
mov
adc
mov
xor
mov
sub
add
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
incl
mov
mov
mov
mov
mov
mov
mov
sbb
movl
mov
xor
decl
add
mov
sbb
mov
mov
or
mov
mov
and
mov
mov
push
sbb
pop
orl
sub
add
xorl
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
mov
lea
lea
xor
cmp
jne
mov
xor
mov
mov
mov
mov
xor
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
mov
movl
movl
movl
movl
mov
mov
mov
andl
mov
movl
mov
mov
xor
mov
orl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
xor
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
movl
movl
pop
jmp
xor
inc
ret
push
mov
push
movl
movl
mov
addl
mov
add
xor
cmp
movl
jne
add
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
xorl
push
adcl
push
addl
push
push
andl
lea
push
push
adcl
call
push
call
sub
movl
xorl
movl
mov
mov
xor
mov
xorl
add
mov
sbb
mov
test
je
mov
mov
orl
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
sbb
imul
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
add
movzbl
and
xchg
sbb
mov
movl
sub
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adc
add
mov
sub
mov
sub
xor
add
mov
sub
mov
mov
xor
xor
add
add
mov
movzbl
sbb
mov
mov
adc
xor
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
or
mov
orl
sub
addl
lea
xor
andl
xor
movl
cmp
movl
je
sub
mov
xorl
xor
adcl
add
cmp
jne
orl
pushl
call
movl
cmpl
je
cmpl
jne
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
inc
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
add
cmp
movl
je
adcl
pushl
addl
pushl
negl
call
mov
xor
mov
add
mov
subl
xor
subl
add
cmp
je
or
mov
mov
adc
mov
mov
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
jmp
or
xchg
xchg
pushf
cmp
jl
jl
pop
jl
adc
and
imul
xor
fsubp
push
dec
imul
bound
iret
pop
dec
and
dec
jg
jb
jg
movsb
cmp
ljmp
cld
push
jg
in
cmp
mov
mov
mulps
fldl
lock
sub
dec
push
sub
mov
test
jmp
lret
sbb
jp
arpl
lcall
xor
cmpb
jae
fsubrl
push
jecxz
mov
mov
out
push
dec
push
and
cmp
lods
dec
int3
cmpsl
xor
push
pop
std
push
pop
movsl
stc
push
cli
inc
sbb
repz
sbb
dec
movsl
mov
ss
aas
and
outsl
sbb
das
sub
dec
arpl
les
dec
cmpsl
js
mov
aas
gs
mov
loope
add
mov
ret
arpl
pop
jno
pop
cmp
cli
sbb
or
ja
mov
adc
aam
lea
jno
sbb
push
mov
adc
cli
mov
imul
lds
gs
push
xchg
adc
xor
inc
mov
decl
pop
mov
add
in
dec
inc
pop
lods
cmp
mov
negl
ja
sti
pop
xchg
push
cwtl
xchg
dec
fstpl
or
add
je
jl
loope,pt
sbb
inc
sbb
hlt
push
in
frstor
ja
xchg
adc
and
pop
pop
repnz
movsb
xchg
sbbl
pop
dec
sub
push
pusha
xchg
jle
lock
lcall
sti
mov
daa
cmp
cmp
test
adc
xor
jnp
cmp
sbb
cmc
dec
into
shl
push
push
mov
jne
sub
movsb
xorb
js
int3
int3
aas
cmpsl
inc
sbb
inc
mov
loopne
or
cmp
pop
lea
add
daa
cmc
ret
sbb
jge
cwtl
es
mov
and
cmp
lods
lds
add
stc
aam
cmp
or
xor
test
push
fdivrp
in
push
ficoms
mov
imul
add
cmp
sarl
jmp
mov
sbb
and
cmp
adc
xchg
jno
and
adc
jns
call
imul
ljmp
adc
call
ficompl
fwait
decl
adc
and
shrl
ffree
loopne
xor
mov
das
es
or
pop
dec
sub
in
jle
pop
sbb
inc
lahf
lock
iret
lock
fisubl
cmp
and
adc
xchg
ja
xor
inc
lock
jecxz
loope
daa
std
stc
mov
mov
outsl
in
idiv
adc
stos
ds
or
mov
push
push
pop
out
jmp
inc
leave
out
pushf
jo
sub
jb
loop
out
out
dec
iret
jge
sub
lahf
pushl
mov
mov
lock
mov
xlat
gs
and
iret
mov
push
xor
add
mov
sbbl
cwtl
repnz
cmp
pusha
addr16
les
pop
push
xchg
out
add
jg
and
inc
mov
call
adc
dec
cmp
sarb
ret
test
fsubrp
mov
push
jno
into
ret
xchg
lcall
mov
fs
push
mov
and
push
icebp
mov
jle
fbstp
pop
stc
mov
pop
jne
add
or
shll
rorl
loop
push
mov
aam
jle
add
in
add
inc
xlat
int3
outsb
jns
pushf
xor
mov
mov
xchg
stc
mov
or
test
jmp
lea
and
pop
rolb
fcmovnu
add
shlb
pop
and
and
sub
lahf
mov
jg
popf
aam
sub
pop
repz
call
add
fwait
sub
sarb
or
pop
push
insl
cmpsl
push
mov
pop
movsb
push
cmp
jno
aas
imul
das
cmp
es
std
popf
jmp
in
movd
shlb
mov
and
cmpsb
das
pusha
mov
sub
filds
mov
lock
outsl
data16
into
dec
aad
rorl
insl
lods
push
ljmp
xor
mov
dec
lock
xor
out
and
lret
inc
mov
inc
fcoml
xorl
and
ja
push
cmc
lret
dec
jl
inc
mov
jae
out
mov
inc
cwtl
sbb
adc
xchg
inc
lods
jns
pop
jl
jp
cmc
addr16
and
mov
cmp
xor
xchg
enter
xchg
repnz
call
inc
shll
mov
or
push
pop
ja
pop
push
or
pop
and
adc
jb
pusha
cli
add
xor
out
sub
mov
dec
lods
mov
jbe
add
mulps
sub
repnz
inc
aam
pop
xchg
fmul
outsl
dec
mull
adc
jg
les
sbb
dec
mov
mov
and
or
ret
aam
cmpsb
jp
dec
int
push
cs
push
xor
and
mov
push
es
push
popa
mov
adc
and
popf
push
mov
add
add
loope
pop
adc
and
cmp
push
test
dec
adc
pop
pop
dec
pop
add
jecxz
fcomp
add
ja
in
arpl
xchg
jb
add
push
loop
jge
add
adc
ds
clc
jb
jmp
rcl
leave
repz
in
pop
movsl
dec
call
loop
leave
fldl
fcomps
outsl
mov
fwait
mov
sbb
cmpsl
xchg
in
mov
xchg
xchg
roll
enter
shrb
mov
outsb
in
loopne
bound
dec
pop
dec
pop
in
fnsave
mov
sbb
das
orl
dec
icebp
sbb
push
mulb
cmp
fimuls
dec
jmp
mov
mov
inc
adc
popf
mov
xor
ud0
adc
push
jp
xchg
mov
jno
push
jns
or
and
xor
cmp
clc
lret
aas
iret
xchg
mov
cltd
fstpl
pushf
in
or
ljmp
push
fnsave
das
mov
jle
push
inc
xorl
fsubs
adc
xchg
jns
das
jmp
adcb
mov
sti
sbb
or
mov
pusha
mov
mov
push
and
out
cmpsb
mov
out
mov
in
idivl
aaa
lret
stc
or
inc
idivb
adc
std
cmpl
add
pusha
aaa
jo
mov
cmp
sub
mov
cltd
inc
xchg
cmp
dec
fwait
insb
pusha
pusha
mull
pushf
ret
cmpsb
ret
xchg
adc
jl
loopne
push
jne
mov
and
stos
fisubs
stc
cltd
test
mov
pop
xchg
ja
jmp
in
jg
std
andl
cmpsb
out
shll
pop
roll
pop
lcall
inc
adc
dec
jp
xor
mov
loope
or
out
ds
xor
mov
mov
mov
push
incl
mov
jecxz
cli
inc
and
xor
rcll
ret
xorb
cmp
movsl
xchg
dec
popf
and
push
or
mov
pop
add
in
push
enter
lds
push
imul
mov
fldenv
fwait
cltd
clc
pop
cld
xor
mov
fldt
cwtl
loop
iret
or
mov
mov
imul
mov
pop
in
jle
loop
sahf
loop
mov
sub
repz
pop
out
lea
test
push
xchg
mov
mov
adc
lock
out
xchg
imul
repnz
inc
dec
push
es
rorb
push
sub
dec
call
xor
clc
imul
adc
mov
pushf
jecxz
add
xchg
push
xor
inc
dec
dec
xor
xchg
int3
cmc
ja
xchg
dec
fcomps
sbb
jp
inc
push
mov
in
jnp
fwait
hlt
jmp
mov
xchg
cli
cli
movsb
test
mov
xorb
dec
insl
mov
out
dec
adc
sbb
inc
int3
leave
mov
push
jl
or
rclb
sub
mov
je
add
pop
and
jl
push
xor
push
or
loope
xor
mov
push
cmp
add
pop
sbb
lock
cmp
mov
jnp
xchg
sbb
aam
loope
sbb
dec
cmp
cmp
ret
icebp
stos
in
push
pop
das
inc
and
pop
sub
sub
decl
xchg
inc
lods
int
inc
gs
push
sarb
sbb
jmp
das
loope
mov
inc
pusha
push
aas
insl
mov
push
inc
lret
hlt
iret
and
daa
adc
xchg
add
inc
mov
mov
sub
in
push
jle
arpl
std
fwait
sti
in
xor
fdivrs
adc
dec
out
inc
and
push
iret
push
enter
gs
mov
mov
xchg
insl
mov
jmp
adc
inc
mov
je
movsb
aaa
cmp
pop
jne
fs
ljmp
jg
ljmp
dec
leave
mov
lcall
xchg
movsl
std
in
pop
cmp
addl
mov
xor
jp
pushf
clc
aaa
repnz
gs
arpl
jns
fildl
mov
in
jmp
or
in
cld
cwtl
pop
push
xor
sub
in
xchg
and
test
insb
lret
or
loop
mov
mov
test
popa
push
pop
ret
jge
loop
clc
sub
pop
cmp
aad
movsl
movl
pop
ss
pop
pop
loop
mov
movsb
rcr
dec
push
fdivl
inc
mov
int3
mov
or
lret
fstps
mov
rorb
jge
pop
and
xchg
xor
pop
fs
dec
push
andl
cmpsb
mov
faddl
push
xchg
sub
jmp
mov
loop
jo
and
cli
clc
aam
out
rorl
data16
xchg
aas
setle
add
frstor
fcomp
inc
jg
pop
outsl
insb
pop
cltd
sub
mov
lods
push
int
adc
jnp
jo
loop
stos
push
lret
insl
popl
adc
cs
mov
dec
dec
xor
xorb
xchg
xor
xchg
sub
aad
ret
idiv
mov
out
push
subb
mov
mov
dec
xor
add
lcall
cmp
inc
pop
je
jae
adc
popaw
addr16
movsl
lods
incl
jl
mov
leave
cwtl
jo
fcmovnb
xchg
xor
stos
push
pusha
das
cmp
or
dec
outsl
mov
jns
xchg
xchg
dec
sub
aam
mov
sub
pop
stos
cwtl
jecxz
mov
mov
ret
xor
inc
insb
dec
xor
lret
repnz
dec
and
mov
sub
or
mov
daa
adc
dec
dec
cs
jmp
scas
sahf
fnstenv
xor
cmpsb
fwait
lds
ljmp
aad
xchg
push
cs
cmp
push
push
or
fs
sbb
push
inc
pop
dec
in
addr16
pushf
stos
jle
cs
sbb
out
mov
mov
inc
addr16
insl
sti
mov
xchg
push
or
cltd
xchg
mov
fcompl
dec
or
jbe
addr16
in
or
adc
outsl
subl
hlt
jae
gs
or
xor
fimuls
std
out
sbb
pop
jl
mov
ja
in
fistpl
push
add
dec
arpl
andl
insb
enter
cmp
jnp
cmpb
orl
cmp
jnp
ds
mov
pop
mov
adc
push
sbb
cmpsb
enter
push
xor
int3
xlat
adc
mov
dec
imul
addl
adc
fwait
in
shlb
adc
loope
mov
inc
neg
push
sub
stos
inc
les
ficomps
arpl
je
out
insl
clc
das
das
lods
ljmp
cmp
push
cltd
inc
dec
vcvtss2sd
push
iret
mov
xchg
cmp
add
jb
insl
ja
mov
orl
sti
nop
pusha
jecxz
sub
sbbb
aad
xchg
fmull
jmp
sbb
cmp
test
adc
loope
or
cmp
mov
mov
js
xor
dec
xchg
adc
fistpl
popf
add
enter
test
pop
pusha
add
inc
fwait
int3
jb
dec
sbb
pop
push
pop
pop
test
sbb
popf
lret
mov
je
notl
xorl
pop
pop
in
pusha
fwait
or
hlt
popa
xchg
test
sub
arpl
std
les
fcoml
xchg
jmp
cltd
mov
push
sbb
inc
fildl
loop
xor
xor
adc
jg
pushf
add
adc
or
and
roll
xchg
push
sarl
mov
cmpsl
xchg
cltd
jne
and
and
inc
jmp
or
jmp
dec
je
ret
inc
xchg
mov
aad
call
adc
test
rcrl
test
cs
movsl
xchg
pop
clc
sar
pop
ljmp
jae
pop
mov
jae
adc
add
dec
inc
add
test
in
ret
push
xor
ss
test
add
adc
iret
sub
jns
clc
pushf
stos
std
idivl
xchg
pop
ret
popa
ret
xor
rcll
imul
inc
dec
mov
push
repz
test
stc
mov
push
loopne
jb
push
lods
fistl
es
adc
repz
mov
inc
pop
imulb
outsl
int
jno
xor
cs
imul
dec
add
and
cld
jmp
mov
and
or
mov
inc
mov
out
cmpsl
xchg
mov
xchg
push
mov
movsb
mov
fiadds
test
adc
pop
std
adc
mov
jb
inc
mov
mov
lds
lods
popa
push
cmp
xchg
inc
xchg
jns
push
sbbl
or
sub
push
push
mov
jno
incl
and
pusha
inc
lock
jecxz
mov
sbb
inc
incl
cmpsb
sub
lcall
mov
adc
lods
out
shlb
mov
lret
data16
pop
insb
dec
pushf
fucomip
sub
out
lea
in
and
faddl
fldl
mov
xor
jo
call
mov
push
and
dec
jo
iret
pop
xchg
push
and
cmc
shlb
loope
daa
adc
pusha
ljmp
int3
clc
call
loope
outsb
es
in
rcrb
jo
mov
add
ljmp
jns
jmp
jae
inc
pusha
scas
out
filds
mov
or
loopne
xor
dec
mull
jb
pop
lret
sub
sub
push
inc
lods
adc
mov
pop
and
sub
add
data16
push
dec
mov
rorl
dec
mov
dec
in
in
jo
into
cmp
and
jle
sub
xor
rorl
push
inc
in
decl
mov
mov
pop
pop
clc
hlt
fistpll
and
adc
fisubl
sbb
mov
and
mov
jno
adc
mov
xchg
xchg
xchg
adc
movsb
scas
cmp
sahf
test
xor
out
icebp
push
jno
cli
insb
ds
dec
sub
fwait
dec
mov
mov
add
int3
cmp
out
mov
fnstenv
xchg
add
xor
adc
outsl
add
jb
jmp
fs
jmp
lret
lds
mov
xchg
movsl
or
rep
stc
xor
cmp
push
fsubrs
add
lods
sub
and
dec
call
adc
orb
sbb
testl
dec
add
inc
test
xor
xchg
adc
ljmp
jl
repz
pop
mov
xchg
mov
js
ljmp
daa
div
movsb
das
dec
ljmp
sbb
or
pushf
pop
dec
inc
movsb
fsubs
ret
mov
mov
test
icebp
mov
sub
sub
dec
push
pusha
mov
scas
mov
dec
daa
push
in
aas
je
xchg
in
cmpsb
popf
or
fcoms
jg
mov
ret
ret
scas
dec
sbb
leave
and
jl
push
push
js
push
dec
pop
repnz
sub
and
popf
and
adc
and
and
sbb
cwtl
sub
mov
sbb
lahf
jb
jecxz
movb
or
out
in
add
out
pushf
in
mov
and
jmp
adc
add
insb
and
mov
xchg
loope
inc
sub
jmp
add
cmc
insl
repz
mov
roll
movsl
iret
leave
push
mov
push
data16
mov
testb
inc
mov
jmp
stos
dec
mov
or
and
loop
dec
aad
mov
jg
dec
mov
cmpsl
pop
mov
add
dec
rcrb
iret
jmp
in
jl
mov
loopne
popf
out
pop
dec
aam
movsb
lcall
mov
jae
bound
xchg
push
xchg
inc
jg
mov
push
outsl
pop
fidivl
sub
or
sahf
das
les
sbb
xlat
mov
adc
cld
inc
into
fcompl
mov
mov
sbb
sbb
popa
fwait
jb
sbb
xor
mov
add
insb
add
add
push
dec
std
in
out
push
mov
dec
test
movb
cmpsb
mov
testl
pop
imul
repz
ds
xor
cli
out
repz
cmp
sbb
add
scas
lret
cwtl
shlb
int
mov
data16
mov
es
push
daa
adcl
loop
cmc
mov
dec
mov
dec
ja
test
sbb
pushf
pop
xchg
cmp
fsts
loopne
loopne
push
push
mov
push
xor
in
dec
insb
insb
sbb
ja
test
lcall
push
out
fmulp
inc
and
pop
lea
dec
ficomps
out
jb
xor
fcmove
mov
dec
mov
ja
xchg
gs
fstps
imul
je
push
popa
in
mov
add
into
fiaddl
mov
imull
add
cmp
mull
ljmp
aaa
int
mov
iret
and
pop
jmp
push
xchg
rcrl
rorl
sti
and
pop
lock
cmpsl
add
insb
jl
mov
adc
mov
xchg
iret
xchg
cmpsl
dec
pop
pop
push
leave
cmp
popf
loope
in
mov
push
pop
lcall
bound
adc
das
dec
lea
xlat
mov
xlat
or
cmp
lock
push
cmp
fsts
mulb
out
mov
pop
insl
popf
mov
hlt
imul
in
mov
xorl
lcall
addr16
inc
mov
cmc
lcall
xor
xchg
ficoml
mov
adc
adc
mov
scas
out
mov
mov
scas
mov
xchg
ljmp
jp
stos
push
add
and
jne
jecxz
mov
cmp
outsb
hlt
sub
push
and
cli
into
or
jge
scas
or
cmp
insb
mov
test
mov
data16
jnp
sub
push
loope
push
pop
loop
rolb
jl
adc
sbb
enter
insl
cmp
adc
insl
sub
add
loope
je
inc
cmpsl
push
jle
bound
push
and
mov
mov
or
cwtl
fstpl
test
and
sbb
cmp
add
adc
out
mov
ret
jg
cmp
push
dec
mov
mov
addl
in
subb
xchg
or
daa
cmp
pop
cmp
add
dec
jb
dec
test
jge
adc
xor
inc
xchg
mov
out
jle
push
xchg
ficompl
nop
andb
cs
sbb
out
int3
mov
adc
adc
pop
dec
push
sbb
mov
negb
xchg
fstps
push
int3
mov
data16
cmc
and
ja
lret
loope
push
jnp
jmp
jnp
push
repnz
dec
subl
xor
xor
mov
jne
loope
xchg
dec
sub
loopne
pop
lds
add
mov
mov
add
lods
push
sti
ss
jle
push
fadd
fnstsw
dec
pop
cmc
call
out
xchg
int3
push
and
xchg
xchg
idivl
cwtl
inc
push
mov
or
nop
sbb
push
outsb
fisubs
hlt
adc
sub
sarl
bound
xchg
jb
mov
mov
decl
nop
push
int3
add
cmp
das
xchg
lcall
push
call
mov
pop
mov
and
outsb
out
dec
out
fisubrs
mov
in
int
scas
cmpsl
lret
pusha
mov
xor
fwait
push
and
sub
js
popf
data16
sbb
jo
mov
fwait
push
jge
ds
loope
add
fstpt
cmp
cltd
daa
dec
nop
das
dec
shrb
push
sbbb
xchg
outsb
loope
daa
push
push
outsl
icebp
or
adc
push
adc
adc
ja
mov
popf
and
jp
pop
pop
mov
out
pop
mov
in
jmp
jno
rcl
movsl
fstps
bound
lods
and
xchg
add
adc
pop
xor
out
shll
sub
push
pop
test
xchg
push
pop
call
add
push
push
mov
popf
push
fcom
pusha
ret
stos
lret
ljmp
sbb
out
repnz
js
cli
cmp
ret
inc
mov
imul
in
test
stos
inc
inc
push
push
loop
imul
rclb
pinsrw
jmp
pop
pop
jno
push
ds
xor
pop
fbstp
nop
and
pop
outsb
call
aam
mov
and
out
mov
pushf
xchg
xor
out
xchg
push
ret
adc
fcoms
jg
loopne
xor
imul
push
es
push
adc
pop
das
ljmp
repz
pop
cmp
lea
shll
popa
loopne
mov
push
or
negl
fistps
and
jmp
mov
arpl
cmp
xchg
out
sbb
lcall
push
cmp
mov
xchg
adc
inc
rolb
movsb
cmpsl
push
cmovs
inc
mov
ret
mov
in
jne
and
xchg
mov
sbb
or
stos
and
add
dec
jmp
mov
insl
call
mov
repz
push
insl
rorl
cs
mov
or
mov
inc
ljmp
push
loop
lahf
out
movsl
mov
shll
fsubp
mov
mov
jb
imul
xchg
ds
jecxz
push
and
int
movsl
adc
mov
and
loope
pop
frstor
inc
je
mov
call
jecxz
jmp
enter
fcompl
pushf
call
clc
pop
cmpsl
aas
and
mov
stc
mov
inc
or
mov
push
mov
xchg
push
xchg
iret
mov
idivb
cltd
sbbb
sbb
sub
mov
dec
cli
pop
cmpsl
xchg
cmp
lcall
das
aaa
je
jno
xchg
dec
mov
add
js
popa
sub
in
pusha
test
enter
fiaddl
clc
dec
add
and
lods
jb
shll
fstl
mov
mov
mov
xchg
je
xchg
mov
cmp
mov
mov
sbb
pop
mov
inc
bound
loopne
pusha
ss
test
mov
int
mov
lock
jnp
or
cmp
and
movsb
push
pusha
popa
scas
lcall
mov
cmpb
sub
xorl
out
xchg
fistps
mov
mov
adc
mov
mov
add
imul
xor
gs
and
daa
push
cmp
or
push
sarl
add
sub
fistpl
push
xor
mov
push
test
push
dec
jae
mov
or
mov
lock
mov
out
iret
jecxz
mov
in
mov
mov
ja
jb
fildll
test
adc
cmc
in
ljmp
popa
fidivs
clc
or
mov
cmp
jg
fsubs
cmpl
movsl
fstpt
int
push
cs
jl
mov
push
scas
out
test
dec
cmp
stos
imul
dec
jmp
add
inc
push
lret
and
sub
xchg
fsts
xor
and
adc
outsl
sbb
fdivrs
add
cmp
xor
add
push
and
lods
mov
cmp
insb
js
cmpsl
push
imul
pushf
out
lret
adc
call
adc
pop
jnp
jecxz
bound
movsb
loope
and
jg
mov
rcrb
push
in
dec
fs
or
not
xor
jle
xchg
ret
fldt
cmp
mov
cmp
rolb
fdiv
inc
fists
jno
enter
or
leave
push
mov
inc
pop
pop
test
cmp
cmova
and
xor
pop
push
jmp
jmp
pop
data16
push
inc
add
les
in
dec
ret
sarl
xchg
add
sbb
stos
push
ret
scas
or
imul
pusha
or
imul
or
dec
dec
jmp
in
dec
out
add
popa
into
outsl
sub
adc
addb
jbe
jge
ja
jle
push
pop
xchg
xor
repnz
stc
push
push
leave
pop
nop
mov
cmp
lea
push
mov
lret
cmp
cmp
jle
xor
xchg
add
pop
loope
mov
pop
mov
xchg
aaa
enter
adc
enter
push
mov
jae
adc
lods
jno
jne
in
dec
adc
sarl
mov
out
nopl
jp
pop
insb
movsl
sub
outsl
sub
mov
pop
shlb
stc
xor
jns
jl
in
ljmp
fists
mov
rcrb
lahf
mov
repz
aas
adc
sti
out
cmpsl
lock
outsl
pusha
sbb
xchg
xchg
cltd
mov
lea
push
lret
repnz
sub
gs
lret
iret
mov
lods
roll
ljmp
cmp
loopne
addr16
iret
je
xlat
aad
ljmp
pop
xor
mov
pusha
les
dec
jbe
inc
ljmp
aaa
push
push
inc
sub
or
sub
sahf
mov
xchg
mov
in
cmp
jge
push
sbb
aad
mov
dec
popf
test
or
inc
inc
adc
inc
aam
or
insb
repz
xchg
call
mov
lret
adc
sub
dec
sbb
cmp
dec
mov
stos
xor
repz
mov
test
pop
push
sub
pop
mov
or
pop
inc
push
push
shlb
inc
std
repz
adc
cmpl
pop
mov
fbld
xchg
les
xchg
out
mov
repz
mov
loope
or
xchg
stos
adc
sahf
mov
cmpsl
jb
in
jle
lds
adc
xor
mov
xor
enter
push
sbb
lret
push
jbe
add
mov
jne
sbb
enterw
sub
push
je
fidivrs
test
aad
sub
push
or
ficompl
jb
imul
inc
cmc
xchg
and
cmp
lret
push
das
push
arpl
pop
lahf
push
insl
jge
xorl
test
std
mov
shl
cli
shrl
sbb
daa
stos
push
push
aaa
sbb
add
int
aam
outsl
adc
inc
mov
int3
in
inc
xor
popa
jns
outsb
xor
push
or
adc
add
sbb
push
scas
icebp
cmp
les
cmp
mov
mov
loop
lcall
add
stos
xchg
pop
mov
loope
js
add
iret
in
jmp
and
mov
cs
cld
icebp
adc
enter
jecxz
or
push
and
rclb
sub
jl
and
cmp
cmpsb
hlt
je
sbb
cmpsb
jmp
lds
loope
fnsave
call
movsl
pop
out
jmp
push
cli
out
movsb
add
and
in
popa
add
or
lea
scas
push
cmp
sbb
lock
imul
jg
adc
sahf
and
in
pop
dec
lods
daa
add
dec
lret
outsb
fbld
lret
leave
pop
push
int3
dec
and
cltd
mov
mov
mov
mov
out
addr16
mov
jns
imul
xchg
outsb
test
stos
fidivs
pusha
mov
pop
push
mov
test
cmpsb
test
adc
das
fists
mov
psrld
dec
cmp
mov
sti
mov
pop
push
aam
pop
sub
add
outsl
cmpsb
cld
aaa
ljmp
adcb
shl
pop
dec
add
sti
push
in
stos
movsl
outsb
jmp
je
in
movsl
mov
shl
test
mov
ja
out
sbb
mov
cli
push
lods
fistpll
sbb
shl
pop
xchg
mov
or
out
or
adc
xchg
outsb
lahf
mov
sbb
ret
mov
decl
inc
mov
dec
pop
push
or
out
in
and
mov
cmp
std
xor
mov
sub
inc
lods
mov
push
in
add
push
cmpsb
push
scas
jns
repz
jle
inc
jno
push
fbstp
xchg
dec
shlb
xchg
cli
popa
fdivs
cmpsb
pop
popa
cld
cmp
jae
lahf
loop
ja
lahf
inc
loope
lock
adc
mov
mov
mov
push
adc
mov
setb
and
fisubrl
test
and
xlat
je
xor
shrl
ss
sarl
sbb
mov
sahf
xchg
call
inc
cmp
jb
ret
push
dec
jnp
adc
pop
pop
sarb
cmpsb
les
push
fmuls
adc
mov
sub
ljmp
and
test
stos
adc
insl
mov
adc
mov
xor
mov
sub
insl
fldt
lods
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
movl
xor
or
mov
and
lea
mov
push
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
lea
mov
or
mov
and
mov
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
mov
addl
mov
add
sbbl
push
xor
mov
mov
movzbl
sub
mov
mov
adc
xor
mov
addl
add
movl
cmp
je
mov
movl
jmp
mov
movl
cmp
movl
jne
push
jmp
mov
movzwl
mov
cmp
jne
mov
incl
xor
add
mov
adcl
mov
mov
xor
sbbl
add
imul
and
mov
andl
xor
add
cmp
movzbl
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
jmp
imul
stos
sbb
xor
pop
jl
dec
pop
jl
jnp
dec
jb
dec
outsl
shlb
ret
mov
dec
jbe
clc
popf
push
jno
jp
std
or
test
cmp
aas
cmp
fldlg2
out
dec
inc
outsl
push
mov
nop
mov
pop
lret
mov
hlt
cs
xor
loope
fadds
sbb
pusha
push
push
cmc
and
mov
aam
pop
sbb
add
xlat
outsb
push
adc
mov
jne
imul
ror
mov
mov
cmp
cmpsl
jle
ret
push
stos
dec
or
inc
aam
sub
push
sahf
hlt
das
inc
notl
decb
mov
push
loopne
jb
sbb
arpl
scas
jne
push
gs
into
fdivs
mov
pop
rcrl
mov
inc
ret
sub
xchg
shl
ffree
pusha
adc
lret
inc
inc
adc
out
cmp
inc
xchg
aaa
push
push
mov
mov
sbb
out
mov
sub
into
and
pop
xchg
inc
inc
lods
xor
dec
sub
out
mov
lods
jmp
pop
pop
lods
test
pushl
negb
mov
jmp
sahf
popa
xchg
clc
mov
xor
sbb
xchg
sub
push
orl
scas
cli
pusha
mov
cmc
jmp
mov
xchg
int3
sbb
int
cmpsl
imul
repz
and
xor
lock
xorb
movb
xor
push
push
push
lcall
cwtl
stos
popf
ja
mov
rclb
mov
test
es
mov
test
inc
jne
les
stos
push
pop
popf
or
sbb
sahf
push
stos
insb
add
mov
inc
mov
clc
mov
pop
mov
aam
es
pusha
mov
pop
xor
sub
mov
xchg
insl
in
sbb
mov
pop
cwtl
adc
cmp
sub
cmp
clc
fnstsw
pop
imul
test
fstps
ljmp
cmpsb
push
dec
gs
addr16
mov
out
push
cmp
int
daa
imulb
mov
into
iret
lods
cmp
adcl
or
lds
lahf
out
in
lcall
pop
int3
sbb
cmpsl
inc
pop
push
lret
int
mov
fdivl
imull
sub
lea
cmc
in
jns
ja
lea
mov
ljmp
pushl
test
into
adc
mov
fidivrs
sbb
adc
and
jmp
mov
nop
js
inc
push
push
inc
add
push
mov
les
or
mov
mov
jg
push
push
notb
enter
cmpsb
push
mov
jae
mov
test
pusha
push
cmp
stc
enter
mov
sub
aad
cli
xchg
sti
xor
shrl
or
insb
imul
sbb
push
xchg
jmp
inc
loopne
push
aaa
test
sbbl
ret
add
fadds
xchg
dec
pop
inc
sahf
add
jecxz
lods
fldl
icebp
pop
out
pushf
data16
sub
mov
int3
shl
pop
cmp
mov
xor
mov
cltd
add
aam
sti
ss
inc
pop
and
jnp
test
fxch
test
cmp
lahf
lret
pop
pop
sub
adc
inc
nop
lcall
cmpsb
or
sbb
pop
popa
incl
nop
mov
subb
jne
inc
movsb
mov
adc
pop
out
cs
cmp
daa
xchg
clc
cmp
push
ficoms
lahf
cmp
bound
rolb
inc
movl
push
push
cmp
cld
or
das
sbb
or
sub
ja
ret
je
gs
cmp
icebp
mov
dec
mov
add
icebp
sbb
xchg
mov
or
sbb
pop
testl
call
add
sahf
icebp
dec
imul
pop
add
into
xchg
add
lods
xchg
push
rcll
cli
ljmp
xchg
out
scas
mov
test
add
cmp
inc
xor
dec
and
cmp
push
push
sub
mov
pushf
xorl
jp
pop
adc
or
add
aad
in
mov
int
out
and
pop
pop
xlat
xor
and
add
stos
inc
sbbb
push
mov
inc
imul
sbb
add
cmpsl
adc
bswap
push
icebp
mov
aaa
cmp
and
int
fldcw
mov
adc
push
mov
dec
pop
fs
adc
mov
or
aam
hlt
xchg
mov
or
push
sub
in
hlt
test
jbe
or
mov
scas
cltd
dec
xchg
notl
xor
or
fwait
jmp
stos
xlat
cwtl
dec
addr16
lfs
jp
xor
mov
test
test
das
mov
jnp
int
mov
cmpsb
pusha
jmp
xor
jp
into
addr16
in
ds
mull
sbb
lret
xchg
shrl
pushf
pop
adcl
inc
inc
add
mov
lods
cmp
inc
inc
pop
mov
sub
and
push
shll
sbb
test
pop
add
mov
mov
mov
add
cmp
pop
clc
mov
sbb
scas
mov
gs
mov
mov
xor
or
and
jl
and
adc
xchg
popf
jg
icebp
incl
jp
mov
sti
or
jae
stos
xor
mov
cwtl
push
xlat
jbe
push
js
push
gs
dec
scas
push
pop
inc
imul
lds
xlat
rcrb
clc
xchg
divb
dec
and
cli
and
add
push
std
lret
mov
mov
clc
cmp
mov
popa
add
jmp
ja
testb
dec
loop
xchg
add
xlat
mov
sarb
xor
fldl
mov
jo
dec
push
pop
jg
stc
test
jnp
lahf
int
lahf
or
pop
lods
pop
or
mov
fistpll
mov
ficomps
mov
xor
ret
xor
adc
xor
ds
movsb
ret
stos
outsl
pop
aaa
jmp
shlb
pop
mov
xchg
inc
test
or
mov
dec
inc
iret
into
out
sub
pop
call
mov
js
mov
ja
cli
sahf
fnstcw
jns
aad
in
mov
fs
jle
repz
in
ds
fs
gs
cmpsb
adc
mov
inc
xchg
inc
stos
push
xchg
sub
es
mov
jmp
cmpl
lcall
pop
cwtl
adc
jmp
int
cltd
jle
sbb
jae
movsb
xchg
cmp
leave
mov
pop
fidivl
cmp
shlb
dec
loope
imul
add
fxch
xchg
addr16
test
mov
add
mov
jns
pop
sub
fistps
xchg
inc
pop
and
sub
dec
lea
inc
jp
fs
jne
push
int
dec
stc
mov
jmp
sbb
pop
adc
xchg
mov
pusha
movsl
adc
fwait
insb
jb
mov
test
cmp
jg
push
jmp
mov
sub
pop
test
push
mov
mov
inc
mov
jno
mov
ret
out
or
or
add
pop
add
and
fcoml
call
mov
daa
inc
or
adc
jmp
test
adc
sub
cmp
add
jo
mov
mov
test
jle
enter
jae
dec
sbb
jecxz
mov
dec
aad
sbb
repnz
out
pop
fistpl
xor
icebp
fcmovbe
pop
mov
inc
add
in
and
push
xchg
loopne
out
test
inc
daa
decl
push
push
outsl
stos
xchg
mov
aam
inc
or
cltd
jmp
arpl
or
shll
movsb
adc
cli
xor
inc
loope
lock
jmp
popa
xchg
mov
xor
xchg
rolb
pop
cmp
mov
adc
sti
movsb
std
jns
mov
fistpl
ja
pop
inc
stos
mov
dec
cmpsl
daa
adc
push
imul
pop
loop
stos
cld
jmp
mov
adc
mov
mov
jl
push
dec
sub
mov
sbb
sti
jno
mov
popa
cmpsb
mov
stos
out
negl
cmc
dec
and
testl
xchg
cwtl
or
mov
test
xor
xchg
add
outsl
fistps
inc
imul
xor
roll
fadd
mov
ss
jbe
mov
lahf
xor
or
imul
adc
stc
mov
insl
pop
dec
push
adc
and
inc
xchg
dec
andl
pop
mov
pop
ds
imul
xor
mov
cmpsl
dec
mov
xor
dec
inc
inc
mov
xchg
outsb
push
pop
shl
add
jnp
leave
dec
mov
testl
mov
addl
in
repz
mov
loopne
mov
adcl
jecxz
jnp,pn
call
lcall
dec
mov
popa
pop
xor
divl
mov
pop
xchg
sub
pop
mov
lret
lahf
and
leave
test
movsl
insl
sbb
inc
push
mov
pslld
shrl
mov
daa
adc
jo
jge
lods
popf
add
rcrl
movsb
xchg
aam
xor
ja
dec
icebp
repnz
fistps
adc
rorl
mov
lock
out
iret
mov
enter
cwtl
adc
popf
sub
lods
and
mov
fdivrp
pop
and
jb
sahf
inc
repz
mov
jl
cmpsb
ret
divps
das
and
aas
scas
fdivrl
popa
repz
sbb
outsb
pop
popa
std
sbbb
cmp
xchg
leave
jae
jbe
imul
lahf
fcoml
aaa
jecxz
pop
leave
in
test
cmp
dec
lret
cli
jl
adc
fs
push
daa
loope
xor
into
mov
add
test
adc
jo
cltd
fimuls
push
idivl
jns
das
inc
in
pop
jbe
sub
lahf
nop
and
rol
lret
outsb
cmc
inc
divl
pop
mov
outsl
stos
mov
out
mov
or
dec
push
add
push
and
pop
ljmp
push
dec
xchg
cmp
and
push
roll
mov
insl
push
jns
jmp
leave
jne
nop
push
inc
shrl
inc
std
or
jb
dec
fwait
sbb
xchg
mov
push
and
lcall
mov
repnz
dec
int3
cmp
cmp
idivb
call
ret
jp
cld
call
mov
lret
shl
cmp
push
and
adc
mov
lret
subb
cli
pop
push
mov
gs
pop
insl
stos
pop
and
fs
mov
dec
xor
ret
sbb
or
mov
adc
outsb
leave
in
sbb
adc
mov
stc
in
out
pop
popa
push
ret
cmp
es
mov
loop
pinsrw
in
je
sbb
jae
fsub
mov
mov
pop
enter
push
and
cmpsl
shlb
rcll
loopne
jnp
cwtl
js
adc
and
cmp
pusha
icebp
loope
jp
cmp
push
pop
mov
jns
xchg
test
pop
jb
jae,pt
mov
imul
lret
ss
mov
adc
test
aam
pop
sahf
test
mov
lods
inc
insb
test
inc
gs
or
ficoms
mov
jo
mov
out
leave
push
inc
mov
mov
cmc
flds
stos
mov
lods
bound
imul
ljmp
inc
sar
cld
movsb
mov
in
add
fisubs
xchg
pop
enter
sti
int
mov
sbb
sbb
xor
lea
mov
cmp
lret
inc
sbb
sbb
pop
cmpsl
js
lock
icebp
jne
sbb
add
js
add
data16
mov
int3
add
inc
lods
push
test
test
mov
add
cmpsb
addr16
jmp
xchg
sub
shll
adc
test
add
je
mov
pushf
outsb
pop
and
mov
pop
sub
adc
mov
jae
sbb
push
outsb
ret
dec
mov
shrb
dec
fldenv
push
idivl
cmp
jge
mov
aaa
push
inc
cltd
push
imul
mov
inc
imul
loopne
push
insl
sub
bound
in
inc
clc
lods
sbbb
push
outsb
or
jle
mov
inc
insb
adc
cmp
pop
addr16
inc
xchg
xchg
pop
loopw
call
add
out
fwait
cmc
dec
sbb
loopne
aam
fbld
pop
add
or
inc
rclb
daa
mov
dec
movsl
lds
lds
mov
mov
pop
sub
push
ss
rorb
fcompl
jecxz
dec
or
adc
cmp
and
or
ljmp
int3
aad
sahf
divl
iret
mov
stc
hlt
jnp
lea
cmp
jne
mov
sti
pop
scas
imul
lock
cmp
mov
xor
push
add
push
mov
lretw
push
sbb
dec
inc
pop
cmpl
daa
pusha
in
stos
add
xor
inc
mov
subl
pop
cmp
fs
test
dec
rorb
gs
sub
gs
insl
mov
dec
pushf
pop
mov
mov
bound
in
pop
sarb
mov
fstpl
popa
xor
js
iret
dec
and
das
add
daa
push
mov
out
jp
sbb
push
repnz
test
push
repnz
or
fimuls
sahf
clc
cmp
cmpl
frstor
mov
cltd
xchg
sub
mov
pop
or
push
xor
std
mov
repz
std
add
pop
outsb
cmc
stos
cs
daa
mov
cmp
sbb
stos
nop
loope
sub
outsl
in
vmovdqa
sub
or
fsubp
jl
inc
or
enter
test
and
mov
adc
std
or
hlt
sbb
push
or
rolb
fsubrs
and
push
xchg
sbb
mov
lret
sbb
mov
icebp
push
sub
push
xchg
jbe
push
arpl
rclb
sub
aad
dec
mov
loope
mov
mov
pop
mov
stos
sbb
inc
mov
bound
jo
cs
dec
stc
pusha
addr16
fnstsw
mov
icebp
icebp
adc
xchg
hlt
mov
xchg
inc
stos
push
imul
jbe
or
add
and
mov
pop
and
adc
jb
pop
pop
fidivl
lock
sbb
lods
xchg
sbb
pop
push
inc
xchg
mov
cmp
test
mov
xorb
sbb
outsl
inc
scas
cwtl
cli
fdivrl
popa
insb
cmp
cmp
mov
loop
inc
adc
cmp
and
orl
les
or
ds
js
push
pop
int
and
lahf
stos
and
fs
mov
push
popf
pop
sub
jo
pusha
and
add
sbb
mov
jb
out
and
push
in
sbb
inc
mov
aaa
dec
inc
mov
push
lcall
pop
in
in
sub
and
sub
mov
bound
and
ljmp
out
fbstp
adc
mov
fidivrl
in
aam
in
mov
xor
fdivrs
sub
pop
outsb
cmpsl
cmp
arpl
mulb
mov
xor
adc
jge
mov
data16
das
shl
sbb
aad
fisttpl
push
scas
andb
lods
ljmp
jns
fadds
cmp
push
sub
add
xorb
mov
mov
xor
sbb
loope
or
dec
adc
jae
jns
stos
fwait
pop
data16
mov
mov
or
push
movsl
rep
mov
es
cld
pop
mov
insb
pop
xchg
or
xor
pop
fdivrp
xchg
out
xchg
fstpt
or
lret
dec
lret
cmp
aas
xor
xchg
stos
add
in
ucomiss
aaa
and
repnz
and
in
mov
push
fmuls
addb
sub
scas
in
pop
add
jecxz
shrl
imul
inc
mov
mov
xor
xchg
sub
mov
adc
xchg
fisubs
arpl
inc
sbb
xor
leave
cmp
pop
and
push
xor
jnp
mov
rclb
and
lahf
cmp
mov
xchg
lods
jnp
push
arpl
add
int3
in
add
stos
and
clc
lahf
xor
daa
scas
pop
shll
jnp
add
ds
ror
add
mov
mov
xchg
add
cmp
mov
push
test
addb
ds
cmp
mov
pop
jle
es
test
sub
mov
inc
iret
icebp
movsb
movsb
jg
je
pushf
ss
test
cmpsb
in
jp
xor
nop
lods
jmp
sbb
cmp
push
clc
jns
vfrczpd
outsl
add
rcrl
lods
adc
adc
dec
fwait
test
sti
push
or
jno
mov
outsb
dec
jecxz
sub
and
pop
cwtl
out
dec
test
mov
lods
test
sbb
out
decb
dec
inc
cmc
mov
adc
mov
out
xor
push
in
sbb
rcll
push
ret
rcl
out
leave
ret
ds
pop
in
dec
lods
xchg
fisttps
mov
jecxz
test
jno
shrb
push
test
outsb
pop
xor
sub
jno
addl
subb
xor
mov
fsts
xchg
adc
xchg
push
inc
xor
mov
dec
fisubl
repz
adc
add
add
in
icebp
inc
cltd
dec
or
or
enter
pop
into
push
dec
xor
cwtl
ret
sub
mov
imul
pushf
repnz
jmp
sbb
lock
cmp
dec
dec
call
dec
cmc
and
push
or
neg
add
jb
mov
sub
add
dec
pop
je
mov
int3
enter
xor
mov
aad
inc
push
push
sbb
push
repz
push
add
xchg
xchg
ljmp
aam
fstl
popf
xchg
xchg
lcall
idivl
and
lods
sti
andl
jmp
jne
dec
jle
aam
shl
pop
mov
fildl
int
xchg
pop
std
lock
dec
cmp
mov
push
push
fdivr
leave
stc
xchg
dec
scas
fstps
pop
aaa
sbb
sub
mov
sbbl
cmp
imul
cmp
sub
or
out
xchg
repz
add
insl
pop
mov
call
push
mov
xor
cs
sub
lcall
sub
jl
out
xchg
cltd
lcall
adc
pusha
cmova
clc
jmp
scas
outsb
xchg
dec
push
ror
aad
or
mov
jmp
sbb
aad
or
or
xchg
bound
movsb
mov
lahf
shlb
ret
fistpll
xchg
out
rcrl
push
xor
scas
mov
sub
leave
lcall
or
out
cmp
in
repnz
dec
push
inc
lret
ficoms
sbb
insb
push
push
rolb
test
aam
xchg
lcall
xchg
mov
insl
sub
cmp
stos
es
fcoms
add
outsb
mov
pusha
jne
imul
add
or
pop
xrelease
sbb
pushf
mov
or
fs
hlt
scas
xor
cmp
mov
mov
and
mov
xchg
sbb
insb
imul
stc
cmp
cmp
and
push
clc
int
sbb
cltd
lea
movzwl
in
mov
xor
jmp
cs
mov
out
xrelease
insl
add
jnp
and
xor
sbb
ss
lcall
in
outsb
lock
out
mov
mov
mov
sbb
sub
cmp
imul
scas
xchg
jb
test
push
icebp
inc
test
fistl
adc
mov
lods
shl
push
mov
sub
leave
sub
int3
pop
adc
add
cld
dec
outsb
add
mov
das
xchg
dec
push
push
into
inc
mov
adc
into
loop
adc
outsl
inc
icebp
pop
enter
xchg
dec
imul
pop
inc
imul
movsb
sub
jp
mov
mov
pop
movsl
movsl
cltd
push
test
fwait
popa
xchg
pop
lret
jg
inc
aaa
movl
jo
jb
cmpsb
lods
shll
pop
push
xchg
in
stc
push
bound
int
jg
cwtl
nop
inc
xchg
add
or
jae
jmp
loopne
xor
lds
push
and
cli
loope
xchg
movsb
add
cmp
cmp
std
pop
sub
pop
xor
rcrl
icebp
mov
scas
insl
jnp
repnz
in
mov
adc
sub
lcall
fistpl
pop
movsb
aas
stc
fs
xchg
test
shl
and
dec
popf
fidivl
lea
sub
call
adc
pop
mov
sbb
mov
jg
mov
sahf
mov
pop
mov
lahf
inc
mov
push
xor
mov
popa
outsb
movsb
clc
sbb
pusha
cmpb
aad
cmpb
ljmp
aas
imul
mov
insb
lock
push
xor
sub
inc
push
fdivl
loopne
mov
inc
push
fcoms
repz
mov
jae
stos
push
sub
dec
or
mov
dec
push
xchg
cmp
fnsave
cmpsb
push
pop
pop
cmp
lds
lods
dec
fwait
sub
mov
jo
insl
xchg
sub
push
jmp
dec
call
inc
ret
in
in
add
in
cmp
jle
mov
mov
dec
out
dec
xchg
push
mov
in
les
fcmovnbe
fstps
xchg
mov
cwtl
cmpsb
pop
js
mov
lret
gs
lods
mov
sub
cmp
cli
xchg
jp
outsl
push
imul
popf
dec
aam
xor
sub
inc
sbb
cmpl
dec
inc
mov
pop
inc
or
pop
rol
adc
ja
clc
xor
pop
clc
push
std
and
and
and
rorb
inc
scas
aad
out
and
dec
clc
and
or
mov
out
add
mov
shll
mov
push
mov
add
pop
sub
divb
dec
inc
imul
stc
shrb
xor
push
fimull
sbb
add
or
das
lock
mov
scas
xchg
pop
lahf
jno
lret
outsb
sub
call
jge,pt
inc
das
dec
lods
cmpsl
dec
inc
into
js
jg
into
outsl
test
and
das
dec
mov
jmp
mov
jecxz
addl
in
mov
push
mov
ljmp
dec
jne
inc
or
clc
xchg
push
jns
cmp
movsb
or
lret
inc
jl
push
xor
xor
cld
sub
mov
dec
push
xchg
std
je
mov
push
stos
mulb
fildl
add
insl
sahf
or
cmp
std
in
sar
jnp
mov
inc
enter
xchg
or
cltd
imul
pop
test
sub
jnp
popf
lret
gs
icebp
xorb
ja
mov
xchg
or
mov
dec
dec
push
or
stos
jmp
pop
out
ljmp
pop
sbb
stc
outsl
das
es
mov
out
jno
fwait
pop
popl
fcmovnb
xchg
mov
push
add
lods
xor
ret
jns,pn
and
lret
mov
pushf
and
addr16
xchg
lret
cwtl
mov
cmp
out
cwtl
xchg
mov
pop
or
jb
inc
shl
mov
lods
lods
mov
push
mov
sahf
sub
daa
jecxz
push
aaa
sub
imul
mov
cmp
cmc
sub
jg
mov
loop
cmp
test
adc
dec
inc
dec
cmpsb
mov
sbb
dec
pusha
adc
mov
mov
dec
pop
push
stos
sub
mov
sbb
pop
and
pushf
and
and
fwait
dec
inc
dec
pop
and
inc
xchg
xlat
mov
push
enter
test
push
cld
cmp
out
int3
frstor
sbb
aas
push
sbb
mov
mov
or
pop
jb
daa
out
push
xchg
mov
inc
cmc
push
mov
sbb
hlt
dec
and
repnz
sub
xor
push
add
or
data16
mov
js
outsl
mov
xor
jne
nop
push
ja
cli
pop
enter
scas
xchg
test
mov
cmc
gs
jmp
push
mov
xor
mov
pop
dec
jge
dec
mov
xchg
fldcw
fdivrl
aas
push
dec
stos
adc
addr16
ljmp
xor
push
aad
adc
xchg
mov
test
lahf
sahf
shl
test
or
fiaddl
mov
xchg
xchg
into
jne
inc
jnp
adc
mov
inc
xchg
cmp
jo
sub
out
loopne
dec
outsl
pushf
sbb
leave
pop
xchg
shlb
xchg
or
xchg
inc
dec
jg
ljmp
or
arpl
and
push
dec
jb
pushf
and
mov
adc
mov
xchg
insb
xor
js
cmp
adc
mov
mov
psubusb
or
scas
xchg
mov
push
pop
inc
inc
sahf
and
inc
inc
adc
into
mov
rcrl
cltd
and
repz
cmpsl
fsts
adc
pusha
stos
cmp
not
scas
cli
jmp
into
jmp
jge
std
add
inc
jns
jmp
fisubrl
sti
pushf
xchg
fdiv
mov
dec
sahf
push
push
sbb
hlt
mov
in
xchg
adc
inc
inc
jg
jno
in
cwtl
push
lea
movsb
pop
push
xor
cltd
popf
cld
shlb
sahf
xchg
and
inc
outsb
cltd
das
xchg
pop
cli
xor
push
mov
xor
jmp
dec
hlt
pusha
dec
inc
inc
imul
mov
shrb
orb
adc
sarb
xchg
sarl
movsl
xchg
ds
dec
dec
out
dec
lods
int
mov
daa
out
inc
arpl
xor
and
mov
andb
mov
scas
mov
xor
dec
sbb
xchg
mov
bound
notb
insl
xlat
dec
movsl
jg
outsb
push
sbb
out
stos
pop
add
push
adc
pop
inc
decl
cwtl
test
shl
sub
int3
inc
mov
movsl
fbstp
adc
pop
testl
xchg
aad
popf
dec
sub
mov
scas
sti
cmp
je
xchg
test
push
mov
pushf
fnstenv
call
xor
xchg
sbb
and
popa
notl
insl
pop
pop
movsb
sub
jne
add
out
insl
add
testl
dec
popf
mov
xchg
xchg
push
xchg
mov
lret
aam
in
jns
in
fdivrl
xchg
pop
dec
or
lahf
stos
sti
sti
sahf
mov
aad
push
pushf
and
imul
cmc
push
inc
stos
popf
inc
gs
adc
and
mov
sub
sub
loop
xchg
sbb
xchg
mov
fnstsw
popa
aas
insl
or
dec
mov
inc
push
xchg
aaa
dec
mov
sahf
adc
pop
add
outsl
lods
xor
cwtl
int3
js
ds
dec
cmp
dec
mov
fsub
mov
pop
lock
inc
mov
adc
sbb
jl
xchg
or
push
and
cmp
add
jecxz
outsl
mov
push
xchg
call
cltd
cmp
pushf
fwait
xor
push
xchg
dec
mov
jg
fnstenv
call
push
mov
pusha
movsb
enter
sub
pop
es
cld
sub
sarl
loop
popf
testb
and
outsl
push
roll
cmp
xchg
imul
scas
sub
dec
punpcklbw
xlat
or
rolb
in
cld
sub
mov
push
cmp
pop
push
out
incb
jo
xor
mov
or
das
jl
or
sub
dec
loop
leave
jmp
je
cwtl
jecxz
movsb
xor
loop
push
mov
popa
sub
movsl
mov
xchg
dec
std
adc
js
fcoml
scas
gs
adcl
mov
or
lea
mov
cmp
insl
add
mov
dec
cmp
fimull
cmpsl
cmp
nop
sub
insb
lock
in
push
or
in
fiadds
enter
xchg
fwait
mov
bound
jle
out
dec
and
gs
lds
ret
out
mov
lock
or
sbb
aad
push
mov
lret
mov
pop
lret
cmp
in
mov
enter
ret
add
jmp
popa
jne
xchg
xor
xchg
pop
int3
pop
pop
dec
insl
push
xchg
xchg
les
push
cwtl
mov
sub
into
pushf
inc
loopne
cmc
xor
mov
mov
jecxz
sub
fildll
insl
add
pop
inc
or
cli
mov
adc
in
push
shrb
sbb
in
out
cmpsl
cmp
inc
sbb
pop
pushf
int
mov
cmp
cmp
sarb
fdivs
xor
jecxz
jecxz
movsb
out
mov
subl
xchg
aam
out
mov
inc
stos
lahf
loop
adc
nop
cmpsb
xchg
imull
scas
add
lods
in
pusha
stc
cwtl
std
xchg
out
mov
xchg
inc
out
push
or
pop
mov
jp
enter
js
mov
cmp
rorl
push
add
jmp
les
call
ds
jmp
je
xor
popf
imul
xchg
sahf
idivl
push
aad
xchg
shl
push
xchg
ds
gs
pop
out
jno
push
xor
sub
or
push
subb
dec
test
fwait
mov
rorl
repnz
inc
mov
test
ds
rol
cmp
push
leave
sub
fimuls
mov
ret
push
insl
mov
push
xchg
adc
pusha
cwtl
push
sbb
adc
test
jae
sub
add
clc
std
mov
mov
dec
aad
out
inc
inc
mov
jnp
clc
mov
mov
mov
or
ds
sub
dec
fbstp
mov
cli
push
lods
test
ss
aad
dec
sbbb
dec
pop
jne
outsl
cwtl
add
xchg
cltd
mov
sbb
mov
in
jae
jg
sarl
and
cmp
testl
add
xlat
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
andl
mov
mov
mov
xor
add
mov
movzwl
and
mov
mov
sbbl
xor
adc
push
sub
mov
movzwl
sbb
mov
negl
add
xorl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
push
andl
xor
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
push
call
jmp
and
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
push
mov
mov
xor
xor
mov
add
add
imul
mov
jmp
mov
in
xor
mov
inc
ds
and
pop
jl
jg
in
push
lahf
dec
push
cmp
sbb
leave
or
mov
imul
fwait
pop
rol
or
sbb
dec
subb
or
jae
and
ss
data16
sbb
orl
add
and
jp
lods
das
cmc
xchg
jbe
cmp
and
xlat
adc
lea
push
adc
call
pop
movsb
stos
call
jbe
cmp
push
push
mov
jb
imul
push
or
jb
testb
or
cmc
cmp
cltd
push
pop
dec
stc
out
dec
adc
pop
addr16
and
add
mov
and
jmp
sub
jo
adc
ljmp
std
aas
cld
ror
lret
mov
xor
not
nop
or
jecxz
or
lds
rclb
inc
loopne
lret
pop
lcall
adc
daa
cmp
jno
clc
pop
jge
fildl
cli
iret
insb
or
inc
mov
hlt
jbe
aad
lcall
dec
outsb
sub
jle
pusha
scas
addl
push
pop
movsb
ret
in
mov
jnp
mov
xchg
and
dec
popa
or
outsb
bound
mov
push
push
dec
add
mov
jns
iret
jg
js
jp
dec
xchg
orb
mov
add
in
add
sbb
in
or
ds
stos
out
mov
sub
idiv
jbe
imul
sub
ds
inc
sbb
pop
and
mov
and
cmp
popa
pop
pop
inc
add
cltd
into
dec
sbb
mov
or
pop
in
sarb
fld
fcmovb
add
aaa
enter
push
in
pop
jbe
jnp
inc
push
pop
xor
adc
cmp
inc
in
shlb
jg
jb
and
sbb
out
repz
sahf
dec
outsb
rclb
pop
add
call
and
arpl
add
mov
std
xchg
and
mov
fs
sbb
cmp
test
mov
mov
jns
dec
ja
sbb
mov
dec
scas
sbb
ja
loope
mov
xchg
sub
push
lods
cmp
cltd
loope
frstor
pop
inc
repnz
or
jg
add
lods
daa
ss
pusha
mov
pop
add
arpl
int3
sahf
mov
push
sub
insl
ljmp
xor
or
add
jb
push
stc
add
scas
cmp
into
pop
mov
cli
insb
add
add
jo
dec
and
dec
add
pusha
mov
notl
hlt
out
sarl
sbb
cmpsb
aam
cmc
push
mov
adc
dec
imul
push
inc
jp
push
into
pop
fildl
cwtl
mov
sub
jmp
push
ja
mov
jle
fidivl
inc
jl
xlat
mov
icebp
daa
cmp
xor
icebp
sub
out
aas
les
outsb
cmpsb
pop
sti
mov
jp
sub
test
outsl
bound
mov
ljmp
pop
ss
mov
mov
push
adc
cmp
xchg
xchg
mov
cmp
mov
mov
stos
xor
push
movsb
je
out
xor
shlb
jle
pop
mov
out
jg
jbe
adc
lds
xchg
dec
xor
sbb
std
subb
sbb
adc
xchg
mov
and
push
cmp
lahf
dec
xchg
adcl
push
ss
loopne
jl
cmpsl
movl
mov
repnz
sub
xchg
push
jbe
ss
mov
outsl
mov
push
and
xchg
out
cs
out
stos
ja
ja
push
insb
mov
xchg
add
inc
pop
mov
loope
or
nop
int3
xorb
mov
out
lret
push
out
repz
cmp
rcrl
cmc
ret
insb
xchg
mov
leave
and
adc
sbb
inc
ljmp
and
arpl
arpl
jg
cmp
or
mov
mov
xchg
fdivrl
mov
js
scas
inc
push
pop
fnsave
push
je
xchg
cmp
gs
jl
stos
ja
negl
mov
mull
mov
jno
mov
fstps
ljmp
xor
adc
and
sub
mov
shl
mov
fs
and
cmp
mov
sbb
je
loope
mov
fst
dec
cmp
dec
in
dec
je
xor
lds
clc
dec
jecxz
fdiv
and
sub
pop
bound
repz
mov
sub
cmpsl
mov
ja
xor
sub
icebp
icebp
in
jge
sti
mov
in
sub
add
mov
fwait
xor
sarb
pop
jb
mov
xchg
push
lahf
fcmovu
add
int3
leave
xchg
mov
dec
je
cltd
mov
and
icebp
sub
push
add
xlat
sahf
dec
add
mov
pop
sub
aam
ret
adc
hlt
sub
pushf
es
mov
mov
sbb
fs
sbb
fwait
mov
sti
jmp
nop
xchg
pop
add
int3
std
sub
loopne
pushf
cmp
sub
sub
mov
add
lret
mov
adc
idivl
cs
orl
es
in
loope
xor
dec
rorl
xchg
xchg
outsb
jmp
jmp
jbe
scas
jns
pop
nop
pop
movsb
push
sbb
addb
mov
add
mov
je
in
bound
aad
push
push
sub
or
xor
sar
roll
orl
insl
jno
sti
addr16
cmpsb
mov
mov
movsl
and
cmp
inc
and
sub
and
or
sbb
xchg
push
cmpsb
mov
lret
pop
cmpsl
dec
imul
push
pop
lods
test
pop
cmp
test
sbb
outsl
lock
lds
sbbb
ja
inc
inc
jnp
mov
xor
add
sub
icebp
lahf
mov
rcrb
out
sarl
xor
lret
pop
es
lea
mov
jp
test
loope
into
aas
lods
dec
cld
insl
jmp
test
or
daa
out
out
and
and
mov
adc
notb
lea
dec
adc
gs
sbb
jo
mov
mov
mov
xor
imul
and
fdivrs
std
fwait
mov
cmp
sarl
xchg
fmul
sahf
or
out
xchg
leave
in
lea
dec
lock
mov
mov
mov
insl
rcll
mov
jg
leave
xor
push
cmc
stos
lret
pop
or
out
data16
xchg
xor
jne
rcr
push
pop
push
adc
jg
fcomip
loope
ret
test
mov
movsl
shr
xlat
fisubrs
sbb
and
dec
lods
mov
or
pusha
xchg
xchg
mov
iret
inc
xlat
ja
dec
cmp
rep
jns
xchg
adc
inc
call
adcl
dec
test
aaa
mov
sbb
into
adc
add
test
movaps
hlt
ret
sub
xchg
add
ljmp
add
daa
mov
pop
loop
fisubrs
dec
xor
mov
lret
jb
stos
dec
mov
stos
mov
inc
roll
mov
iret
jae
sarl
pop
jns
and
in
xor
xchg
and
sbb
xor
aam
mov
fidivrl
pop
pop
out
inc
in
push
in
outsb
negb
xor
pop
push
mov
movsb
push
xchg
push
add
sub
push
loope
lahf
push
adc
adc
sahf
mov
add
rol
push
lahf
roll
mov
push
adc
shll
roll
or
cmpsl
stos
inc
addr16
and
sub
jnp
push
or
or
mov
sbbl
movsb
inc
incb
in
jp
adc
pop
fmul
shlb
arpl
stos
rep
test
and
test
scas
mov
mov
push
mov
pop
inc
gs
mov
push
pop
cmc
cmp
cmp
mov
xchg
inc
push
mov
mov
push
mov
push
sbb
int
sbbb
push
popf
test
xchg
jecxz
mov
andb
fiaddl
jns
jo
xlat
xchg
mov
inc
ljmp
push
test
pop
mov
lahf
sub
rclb
pop
jbe
int3
cmp
xor
data16
int
arpl
aas
out
mov
add
push
stos
and
or
cwtl
ret
inc
loopne
movl
dec
mov
push
inc
jmp
lds
push
sbb
lahf
push
fwait
cs
ljmp
aam
mov
ds
add
adc
cmpsl
inc
clc
mov
stc
popf
lahf
imul
sub
dec
xchg
std
popa
jnp
icebp
mov
sbb
nop
or
push
test
bound
cld
jp
sbb
cmp
pop
inc
mov
mov
and
cmpsl
arpl
lods
lods
jne
into
sub
mov
xchg
outsb
bound
fstps
in
int
xorb
leave
jecxz
sub
sbb
scas
mov
xor
adc
daa
sub
sbb
loopne
into
icebp
mov
imul
push
cmp
mov
outsl
mov
adc
call
notl
push
push
lahf
mov
out
push
dec
xchg
jnp
and
outsb
les
mov
sarb
mov
stos
cld
cmpsl
cld
lret
inc
jne
outsl
das
xor
orl
lock
sbb
dec
cli
lods
daa
arpl
sbb
lods
loope
and
lret
inc
in
ret
clc
stos
xlat
sub
repnz
imul
mov
cs
shll
movb
imul
push
popa
scas
xor
cmp
inc
fdivs
xchg
cli
cmp
jmp
out
push
popa
mov
mov
mov
mov
inc
popa
mov
ret
cli
ret
jne
js
cltd
sub
xor
ljmp
jne
sbb
add
jge
xchg
mov
xor
pop
mov
jns
xor
rolb
sub
dec
inc
int3
mov
test
repnz
push
imul
xchg
mov
ds
ss
pop
dec
cmp
movsl
dec
jae
mov
sbb
sbb
dec
lret
xchg
mov
es
jl
jge
adc
or
rclb
shlb
lods
mov
push
icebp
mov
add
and
fs
push
lock
xor
outsb
mov
inc
mov
mov
cmc
outsb
jecxz
bound
not
xor
mov
and
mov
push
adc
push
jae
pop
xchg
lcall
and
in
in
mov
dec
push
ret
cli
pop
inc
sub
in
adc
pop
cld
or
mov
xchg
xor
sbb
inc
inc
lds
xchg
lcall
mov
aam
xor
cmp
lods
pop
jns
int3
sarb
mov
cwtl
push
pop
mov
scas
es
shrb
push
mov
testb
lock
loopne
pop
push
aas
inc
negl
push
in
ret
inc
inc
push
fdivs
and
and
mov
adc
jae
cmp
sub
mov
and
sub
dec
sti
xor
mov
mov
movsb
pop
sub
aad
mov
jmp
push
cmc
dec
movsb
push
add
cmp
sbb
stos
lret
ja
fstpt
cmp
push
adc
imul
stos
sub
mov
inc
lahf
lret
xor
xchg
call
dec
pushf
xchg
adc
jge
xchg
sub
dec
scas
scas
arpl
sbb
lahf
das
add
mov
jle
scas
mov
ret
push
mov
imul
xor
and
fists
mov
add
fstpt
lea
jns
stos
aaa
sub
cld
xchg
or
dec
jbe
push
xchg
inc
and
push
lcall
jl
scas
pop
ljmp
dec
iretw
pop
call
jb
mov
adc
jns
loope
int
push
inc
mov
or
push
jmp
xor
cmp
cmpsl
pop
dec
adc
mov
cmpsb
fwait
cwtl
mov
and
nop
popa
mov
loopne
aad
montmul
cmpsb
lock
movsl
push
lret
sbb
mov
mov
lahf
in
int
push
xor
mov
sbbl
sbb
sub
hlt
inc
sub
test
sbb
repz
pop
iret
fdivrs
xchg
movsl
sub
lods
pop
sub
das
cmp
cltd
xor
push
sub
inc
dec
jge
dec
scas
cmp
addr16
dec
nop
cmc
push
icebp
xchg
ret
push
sbb
mov
arpl
pop
jmp
mov
cwtl
mov
loop
xorl
loop
repnz
adc
xor
mov
sti
rclb
cs
and
loop
icebp
add
xor
je
notb
in
fs
cmp
fistps
xor
repnz
in
stc
insl
jle
ret
test
cmp
pushf
loop
movsl
cltd
cmp
inc
push
mov
pop
mov
push
add
data16
mov
adc
subl
add
imul
fcmovu
je
das
sbb
ss
sahf
xchg
sbb
mov
jbe,pn
sti
push
mov
enter
pop
and
xchg
inc
arpl
ret
repnz
les
sub
aam
xchg
pop
and
and
cmc
daa
fisubs
and
push
mov
nop
rcr
mov
test
inc
mov
mov
lea
inc
or
xchg
push
adc
cltd
mov
mov
add
je
pop
xchg
cmp
adc
xchg
ret
or
jp
mov
push
pop
xor
out
xor
sub
repz
dec
xor
sub
mov
test
lahf
or
jnp
mov
dec
and
add
and
sub
or
xchg
in
jg
stos
ljmp
inc
sbb
jae,pt
lods
jb
mov
shlb
pushf
movsl
sub
pop
je
adc
jge
adc
sbb
adc
mov
enter
mov
icebp
jns
call
pop
dec
xchg
stos
adc
fidivl
xchg
stos
fstpt
push
pop
and
push
mov
mov
adc
sbb
and
enter
fidivs
sub
mov
pop
xor
test
inc
cs
and
add
cmpl
notl
mov
xchg
adc
aam
pop
arpl
cmp
adc
or
popf
lret
ret
scas
dec
sbb
aas
or
push
aad
adc
sub
push
sahf
les
leave
cli
jns
es
and
out
cmp
xor
add
les
sub
jnp
pop
mov
jno
cmp
pop
cmpb
push
sub
xchg
pusha
lahf
movsl
lret
mov
jae
fcomps
imul
jecxz
cmp
sbb
sub
push
mov
inc
mov
xchg
xchg
imul
pop
into
cmpsl
pusha
mov
push
movsl
pop
repz
enter
rcll
and
pop
adc
repnz
mov
pusha
stc
cmp
stos
nop
out
rorl
cmp
jo
cmpsl
jl
mov
add
int
xor
cmc
push
mov
adc
in
mov
repnz
pop
cmc
mov
int
inc
and
les
inc
insb
dec
xchg
and
or
mov
dec
sub
rcrb
fcomps
mov
xchg
and
and
lock
stc
in
lea
inc
pcmpgtw
xchg
xor
lret
xchg
push
mov
pop
xor
sub
mov
loopne
lock
mov
dec
dec
lfs
dec
push
xlat
loop
cmp
mov
mov
mov
or
aas
sbb
lcall
fwait
pop
ds
pop
lret
sti
and
jno
jae
jmp
fs
ds
cmp
mov
pushf
stc
or
xchg
std
mov
mov
xchg
popf
cld
dec
insb
dec
xchg
dec
and
adc
fsubrp
cmpsb
test
sub
cmc
or
or
sbb
mov
jmp
imul
and
jnp
jno
jae
cld
push
jg
fisubrs
mov
jp
inc
jmp
repz
mov
lods
mov
jnp
rorb
in
mov
cli
sahf
lea
push
dec
add
and
inc
push
jmp
int
cmp
daa
testb
xchg
push
jno
int
sub
mov
adc
shrb
xor
hlt
mov
dec
cld
js
std
fistps
stc
dec
repnz
daa
les
mov
dec
das
rolb
xchg
mov
sbbl
dec
cld
xchg
inc
insl
mov
cmp
mov
test
inc
jmp
or
cmp
cli
pusha
push
jae
pop
fstl
add
inc
mov
sub
sub
gs
aad
push
sub
scas
dec
daa
sbb
adcl
cmp
mov
mov
xchg
sti
test
pop
sub
adc
test
cmc
xchg
repz
push
call
dec
dec
imul
loopne
aam
cs
push
test
adc
subl
int3
or
popl
sub
sub
call
nop
lods
mov
jns
mov
sti
mov
mov
js
cmpsb
xchg
mov
test
rorl
addr16
xchg
cmc
inc
add
pop
mov
hlt
sub
pop
ljmp
stc
into
sarb
out
data16
pushf
pop
dec
sbb
nop
cmc
repz
inc
sarl
aaa
idivb
adc
xor
mov
in
cmp
sti
gs
ja
in
inc
test
adc
mov
scas
addr16
ss
push
mov
cmc
adc
mov
popa
imul
lea
pusha
dec
imul
xchg
repnz
iret
repnz
call
sub
ret
outsl
addr16
push
movsb
pushf
push
push
adc
adcb
jg
fiaddl
ficoml
sti
sahf
xchg
loopne
push
movsb
cmc
test
and
or
cmpsb
jle
jbe
sbb
lds
push
sub
sub
xor
repnz
fs
out
aam
mov
sub
cmp
aam
movsb
push
cld
mov
ja
dec
mov
aas
dec
in
bswap
mov
push
ficoml
test
stos
pusha
shrb
test
mov
in
arpl
adc
movsb
push
lods
inc
mov
out
inc
dec
daa
and
pop
loopne
push
aam
popf
data16
push
xor
movl
test
pusha
push
mov
cltd
out
mov
push
aad
fists
inc
xor
push
in
les
adc
test
mov
mov
dec
inc
inc
cwtl
lods
cmc
add
jp
fwait
pop
adc
mov
pop
pop
fwait
loop
and
aaa
lock
shr
shl
int
lret
dec
js
stc
fwait
test
enter
stos
icebp
dec
repz
in
out
scas
xor
icebp
jle
mov
enter
inc
mul
jne
out
enter
les
movb
or
xlat
push
movsb
aas
cmp
or
jp
push
pop
mov
call
movsl
nop
sub
mov
rorl
jg
dec
jbe
or
cmp
xlat
add
mov
xor
jns
repnz
jecxz
sbb
scas
sti
sub
adc
out
and
mov
repz
lcall
std
add
and
cmp
jo
xchg
ret
sub
jo
pop
in
addr16
dec
aam
pop
adc
push
daa
dec
cmc
sbb
fnsave
mov
into
ds
cmp
and
sub
cwtl
into
xchg
jle
loope
and
push
je
jns
mov
enter
mov
subl
in
jb
sahf
orl
pop
sub
sbb
add
xor
adc
or
mov
sub
shll
sub
cmpsl
call
addr16
fiaddl
aad
and
jl
arpl
and
pop
sbb
sbb
loopne
lcall
mov
inc
pop
sbb
jo
jo
out
stc
mov
mov
lcall
aad
xor
xchg
orb
shll
stos
xor
out
add
imul
int
scas
aas
inc
leave
ja
mov
mov
mov
ljmp
in
xchg
pop
jnp
push
add
add
repz
outsl
fstl
mov
dec
inc
jle
and
fidivrs
jnp
and
inc
xor
ja
rcll
xchg
mov
sbb
push
lahf
mov
iret
lret
in
cmp
jns
jge
int3
out
into
pop
dec
daa
xlat
push
cmp
inc
pop
mov
ret
mov
mov
imulb
mov
and
clc
and
ret
movsb
out
mov
dec
ja
aad
mov
outsl
out
in
dec
jae
lods
dec
fisubs
lea
jg
incl
push
orl
lods
and
fwait
stos
push
iret
pop
xor
mov
dec
mov
sarb
fcomip
cmpb
movsb
aam
or
in
pop
sbb
push
jb
dec
jl
jns
dec
inc
stos
test
jno
sub
rclb
jnp
lahf
add
and
call
pop
dec
rcrb
sub
adc
pop
mov
lea
push
das
icebp
pop
testl
jg
or
lds
ss
mov
inc
mov
jge
sbb
loop
out
in
test
lods
cmp
stos
je
pop
daa
cmc
jnp
jns
les
mov
adc
out
adc
xor
negb
shrl
dec
leave
and
or
xchg
jo
jo
inc
aad
push
inc
jle
int3
imul
roll
pop
je
leave
es
cmp
ja
push
pop
out
test
mov
mov
loope
cmp
sbb
in
hlt
xchg
push
scas
int
jae
repz
sar
cmpb
sbb
lods
cltd
in
lahf
test
addr16
push
inc
sbb
icebp
mov
cmp
jecxz
dec
cltd
arpl
adc
push
fdivrs
jecxz
cmp
dec
in
jecxz
and
dec
dec
in
sahf
shrb
loopne
mov
add
sub
insb
push
inc
cmc
mov
mov
inc
cmpsb
dec
jne
lcall
pop
les
inc
aaa
icebp
popf
jnp
mov
adc
pop
test
cwtl
out
out
cmpsb
out
loop
and
mov
mov
and
mov
sub
jnp
push
cltd
dec
out
in
jmp
add
adcl
icebp
mov
cmpsl
arpl
push
loopne
dec
scas
and
lret
scas
scas
pop
or
adc
out
leave
pop
and
or
xchg
xor
dec
jmp
inc
or
in
mov
lcall
cmpxchg
jbe
sbb
pop
jg
push
or
cltd
imull
jno
mov
movb
push
sub
fistpll
add
push
loopne
xchg
int3
inc
mov
push
imul
push
inc
jmp
jo
xor
out
movsl
and
test
jmp
or
sub
cmp
bound
es
int
xlat
xor
xchg
jo
jge
fbld
fildl
imul
and
movsl
inc
dec
fwait
js
aad
shl
clc
ljmp
js
push
popf
andl
arpl
pop
jo
fdivrs
sub
xor
shll
nop
jb
test
pop
addr16
jle
fucomp
or
xchg
lock
push
shr
pop
lods
test
dec
fldl
aas
gs
xchg
and
stos
mov
or
add
jo
stos
sti
loopne
loope
add
pop
sbb
int3
int
mov
adc
sub
xchg
mov
movsb
lock
cmp
jmp
jl
sub
in
jns
jne
pop
dec
lea
push
push
clc
lock
mov
test
fwait
rcl
and
sbb
popa
push
adc
jle
testb
addr16
ret
or
cwtl
lret
sbb
push
jl
or
arpl
or
mov
cmp
sbb
shl
fisubl
insl
add
jbe
inc
lods
pusha
scas
push
movsb
jl
icebp
jg
out
dec
mov
scas
sbb
js
sub
mov
mov
popa
fwait
push
push
ss
lea
in
inc
mov
shll
adc
lea
add
push
stos
push
js
leave
adc
dec
sub
imul
jb
shl
and
mov
outsl
ds
out
jbe
jl
mov
ljmp
add
add
pop
je
push
orl
movsb
ja
sarb
std
jg
ret
inc
xchg
lods
xor
lcall
cmpsb
mull
lods
cmp
fsts
sbb
and
andl
jbe
aas
iret
loope
dec
add
fwait
adc
xor
test
addr16
lret
inc
idiv
xchg
and
push
inc
loop
subb
out
out
xchg
pop
xchg
iret
lret
mov
cs
mov
mov
dec
and
cld
shlb
mov
jno
sti
ss
mov
cmp
out
and
cmp
add
sub
sbb
nop
push
in
insl
push
les
mov
rcrb
dec
mov
mov
push
mov
in
lods
pop
dec
push
xchg
inc
sbb
andb
movsb
nop
cmp
mov
sub
sub
outsb
or
adc
jge
inc
xchg
shrl
or
cltd
hlt
lahf
xchg
rcr
mov
add
sbb
call
data16
xchg
add
shrl
popa
inc
adc
addr16
fmull
sub
jge
in
adc
or
add
fisttpl
stc
xor
shlb
push
into
push
icebp
inc
or
mov
clc
cld
sub
ja
mov
iret
jecxz
out
push
imul
mov
or
jecxz
xor
ret
xchg
sbb
dec
jb
xchg
jp
int3
cwtl
jle
lea
add
add
fildll
adc
xor
or
mov
popf
sbb
mov
mov
inc
mull
leave
scas
jl
mov
jp
add
lret
ds
or
adc
shll
arpl
jge
out
testl
pop
in
cmp
push
stc
aad
inc
and
dec
popa
pop
mov
ror
cmp
aam
dec
jecxz
jb
hlt
inc
and
repnz
jbe
out
sub
push
inc
sub
cmp
sub
or
cwtl
jns
xchg
sub
test
test
xor
add
inc
insl
ret
jo
xchg
fldl2t
cmp
push
sbb
imul
and
cmp
sbb
xchg
pop
xchg
jno
out
mov
std
cmp
or
negb
mov
inc
xchg
jecxz
inc
outsb
pop
dec
stos
mov
add
pop
mov
and
test
lods
jg
lret
mov
and
test
lahf
cmp
rcll
cmpsb
jg
jmp
lock
sbb
sub
sbb
arpl
inc
sub
in
mov
shll
imulb
pop
out
adc
ret
jle
lcall
and
lock
pop
ficoms
sub
cmpsb
aaa
jns
inc
jp
xchg
arpl
popa
fimull
pop
xchg
js
xchg
dec
adc
scas
jp
xchg
lds
addl
sub
mov
popa
cmp
mov
rcrb
btc
pop
iret
stc
stos
std
sbb
pop
mov
adc
roll
jnp
ljmp
je
scas
ss
pushl
in
cmpsl
bound
aaa
insl
enter
ret
mov
lods
sub
adc
outsl
jo
push
dec
aaa
adc
adc
enter
jb
mov
jbe
daa
push
lret
and
mov
and
int
push
fcmovu
sub
nop
pop
inc
pop
clc
mov
aam
outsl
push
and
pop
addr16
stc
insl
inc
inc
int
les
es
xlat
aas
bound
xor
sbb
add
jnp
test
sub
mov
xor
pusha
add
ja
movsl
add
flds
in
fidivs
dec
adcl
in
xchg
aam
adc
xor
pop
adc
rcr
add
fbstp
fwait
scas
sbb
sub
dec
fsubrl
das
mov
rorl
push
mov
jp
xchg
sub
bound
jno
aaa
or
sbb
add
divb
xor
mov
fsubrl
cmp
out
test
cmpsb
pop
scas
mov
pop
xor
loopne
sbb
and
mov
int3
clc
mov
ret
xlat
stc
jmp
mov
mov
cmpxchg
push
sub
xor
cmpsb
adc
cmc
push
xlat
xor
mov
out
dec
pusha
adc
enter
add
nop
ljmp
jne
pop
xlat
push
adc
push
lock
jmp
std
push
pop
je
and
nop
fdivs
dec
adc
push
loopne
pop
and
inc
mov
orl
lcall
or
jmp
leave
arpl
xchg
mov
dec
stos
pop
or
push
ds
and
stos
mov
push
push
jp
jge
ljmp
adc
adc
mov
out
and
mov
dec
bound
mov
hlt
pop
fnstsw
mov
clc
iret
neg
enter
jbe
add
xor
jno
xchg
cmp
add
mov
pop
out
in
mov
jne
sub
xor
inc
scas
rcr
mov
xlat
jp
into
xor
popf
mov
push
lock
jo
insl
daa
push
mov
mov
push
lret
aam
in
bound
xchg
adc
in
lods
push
dec
andl
dec
mov
add
add
pop
aaa
sbb
xor
pop
lret
add
rolb
dec
sub
push
xchg
popa
push
pop
inc
out
sarl
sub
sub
mov
push
in
jnp
fstl
sub
fs
popf
setb
fs
dec
mov
mov
nop
fdivl
cs
fsubrs
aaa
addr16
es
jno
xlat
fistl
cld
roll
and
cmp
dec
into
mov
jmp
rcll
adc
lea
mov
mov
xor
sub
xlat
arpl
dec
cmc
jmp
test
mov
cmp
xchg
movsb
sbb
adc
dec
nop
dec
mov
xchg
cwtl
cmp
popw
xor
aad
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
sbb
mov
xor
xor
sub
mov
add
movl
or
mov
push
mov
add
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
add
mov
negl
push
mov
adcl
add
cmp
movl
je
mov
mov
xor
xor
adcl
add
add
adc
negl
xor
mov
push
movzbl
adc
xor
xor
mov
and
mov
add
movl
adc
addl
xor
movl
xor
movl
cmp
movl
jne
movl
cmp
je
jmp
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
sbbl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
notl
mov
adcl
add
movzwl
mov
mov
sbb
movb
add
lea
xor
mov
addl
mov
mov
orl
xor
andl
sub
andl
mov
movl
or
push
jmp
and
add
addr16
or
jl
pop
jl
out
ds
outsl
dec
mov
mov
mov
inc
cmpb
insl
push
shll
imul
jmp
push
and
shlb
in
fwait
loopne
adc
gs
mov
sbb
loope
mov
test
repnz
xor
faddl
stc
jmp
sbb
nop
in
pop
sub
es
or
push
roll
mov
and
dec
fwait
test
xor
jecxz
insl
pusha
mov
inc
cmp
add
add
mov
jp
fdivrl
testb
push
add
rol
or
push
leave
roll
out
out
js
stc
and
cwtl
scas
popa
mov
cwtl
jge
faddl
daa
addr16
mov
lods
sbb
cmp
mov
sahf
js
dec
fldt
lret
lock
movsb
jecxz
sub
js
inc
cmp
in
inc
push
inc
mov
sbb
push
das
pushf
je
repz
xorb
or
lcall
adcl
icebp
jno
outsl
mov
or
loopne
xor
mov
das
bndldx
push
jmp
push
or
cmc
insl
xlat
push
add
je
pusha
mov
outsb
addr16
imul
and
pop
push
pop
mov
outsl
xchg
dec
rol
mov
call
shrb
pop
cmc
gs
xchg
scas
das
mov
out
jecxz
scas
cmpsl
fstpl
ljmpw
jmp
stc
jmp
dec
dec
add
mov
fwait
inc
jp
std
dec
lahf
scas
test
mov
mov
divl
repz
or
or
xor
mov
cs
mov
in
out
jle
cwtl
movsl
push
inc
sbb
int3
or
or
xchg
aas
push
push
xor
les
cmp
inc
not
movsb
pop
pop
in
popa
pusha
aaa
bound
hlt
xor
dec
xor
daa
fsubrl
jb
xor
or
mov
fadds
ljmp
test
and
int
push
rcll
scas
xchg
cltd
mov
cmpsl
cmp
push
int3
mov
loop
pushf
jl
and
lcall
lret
xchg
jo
jno
and
cmp
mov
mov
pop
ljmp
adc
scas
mov
xchg
jp
mov
test
push
fldpi
ljmp
stos
lret
or
fsubrs
pushf
dec
xlat
mov
incl
cmp
std
cli
addb
test
adc
jmp
aaa
rolb
and
cmc
loopnew
arpl
adc
fiadds
cli
pop
sbb
add
mov
leave
das
in
fcomps
pop
fisubl
ds
fstl
jne
int3
loope
in
mov
mov
testb
push
or
xor
int
insb
pop
int3
out
mov
xor
gs
push
dec
sbb
aad
pop
jecxz
mov
cmpl
and
mov
cmp
shl
sbb
mov
outsb
inc
pusha
and
mov
add
pop
dec
jno
nop
cmpsl
dec
xchg
je
mov
jne
inc
mov
in
cmpb
inc
sub
or
lea
sbb
cltd
xor
insb
add
pop
aad
dec
arpl
sbb
sub
sahf
daa
fstpt
mov
dec
and
push
dec
je
or
std
popf
sub
push
cwtl
jle
cmp
lock
loopne
xor
pop
mov
xchg
pop
and
inc
ret
cld
dec
adc
insb
and
adc
ja
cmp
pop
pop
ffree
jno
pusha
sub
sub
sbb
jmp
cli
jnp
pop
or
or
mov
int
fcomps
shlb
dec
loop
jbe
push
sahf
shrb
push
sub
and
push
popa
cs
push
adc
lcall
sbb
das
push
sub
pop
mov
adc
xor
orl
cmpsb
pop
adc
jp
pop
and
mov
notb
pop
add
or
in
cmp
jne
mov
mov
fst
sarl
sarb
sub
push
add
mov
inc
mov
inc
adc
cmpsl
pop
mov
mov
dec
add
mov
xor
or
push
scas
aad
stc
cmp
dec
inc
out
dec
fcomip
jp
or
ret
jecxz
mov
jle
push
stos
mov
inc
jo
das
mov
jl
inc
pushf
push
lret
and
es
xor
shlb
sub
sbb
sub
jmp
arpl
dec
decl
cmp
jp
mov
mov
aaa
fsts
xor
dec
push
xor
mov
fnsave
iret
shlb
out
push
cld
adc
cmp
dec
adc
sbb
insb
shll
and
lret
mov
push
sti
sbb
inc
outsb
fwait
leave
aam
nop
test
xchg
dec
shlb
mov
xchg
mov
cmp
fcmovu
pop
push
mov
lods
push
test
mov
iret
cmp
shrl
cli
mov
dec
cmp
jb
adc
add
aas
pop
cmp
add
out
pop
dec
mov
mov
mov
mov
enter
pop
or
hlt
pop
mov
cmp
dec
rep
push
cmp
fcmovne
movsb
iret
or
aad
pop
jae
add
into
add
call
das
jp
dec
int
xchg
repz
lods
es
lret
cmp
adc
adc
cmpsl
jb
addr16
sub
mov
mov
jo
xor
int
insl
mov
sub
cld
or
lcall
in
cli
rcrb
jmp
adc
data16
aas
insb
mov
js
in
ficompl
mov
cli
push
fidivl
cmp
outsb
pushf
and
icebp
sbb
xchg
xor
call
sub
addl
and
movb
hlt
push
nop
gs
jb
sub
aad
push
rorb
jmp
sub
popf
jle
subb
jns
push
sub
jg
adc
pop
mov
sbb
adc
jo
decl
sub
sub
pop
iret
sbb
cwtl
push
mov
jp
add
lret
mov
sub
inc
adc
popa
sub
sbb
lods
pop
fucomp
pushf
std
adc
add
jl
pop
mov
mov
jns
adc
inc
stos
add
arpl
jo
lods
and
test
clc
sub
xchg
jmp
rolb
dec
imul
or
call
pop
mov
popa
or
insl
push
dec
and
enterw
pop
out
out
or
adc
mov
shll
push
mov
scas
jle
mov
mov
icebp
sbb
jb
loop
sbb
fsub
into
sbb
adc
test
xchg
movsb
dec
in
add
pop
pop
imul
dec
cld
loopne
inc
psubb
insb
jne
mov
lahf
cs
adc
aam
loope
xchg
stos
movsl
gs
rcr
mov
mov
xor
lods
icebp
mov
aaa
popf
adc
add
pop
inc
add
addb
or
dec
inc
outsl
ficoml
shl
daa
inc
aam
inc
les
adc
push
mov
inc
push
dec
xor
flds
aad
dec
add
aaa
lea
xor
sub
cwtl
jg
xchg
sbb
pop
fisubs
lret
shll
or
pop
sti
cmp
mov
imul
sahf
out
jne
jae
jae
sbb
jno
or
sub
fnstcw
movsb
lcall
jp
in
lods
mov
dec
lods
inc
jae
xorl
rcrl
xor
inc
pop
int3
jne
test
mov
cmpl
xor
or
jne
or
popa
mov
push
push
or
mov
lock
add
divb
stc
mov
lods
and
faddl
sub
sbb
sub
ds
pop
les
aas
xor
mov
pop
pop
xor
sbb
dec
enter
fcmovbe
into
fdivl
xor
sbbb
xor
loopne
rorl
jno
inc
add
andb
xor
inc
test
xor
add
inc
dec
fisubrl
call
mov
pop
test
repnz
outsb
insb
fimull
stc
test
mov
add
roll
sub
out
cmp
add
or
lods
lahf
aas
add
add
mov
mov
int
jl
je
xchg
in
or
pop
add
xor
loopne
inc
sbb
cmpsl
insl
cltd
in
call
lcall
inc
mov
jle
mov
aaa
mov
pop
xchg
nop
nop
lret
xor
cli
cmp
xor
sub
pop
shrb
shrl
and
inc
in
pop
shrb
loop
jmp
inc
mov
sub
mov
cmp
movsl
clc
mov
fidivs
hlt
push
clc
mov
push
rorl
cmp
and
sub
inc
and
int3
data16
and
push
enter
and
rol
mov
pop
cmp
push
sti
jb
lahf
sbb
pusha
mov
roll
push
inc
mov
fucomp
fimull
sahf
lret
pop
xrelease
and
jns
xor
push
inc
gs
mov
jp
loop
cmp
inc
mov
inc
lock
popa
fmuls
mov
ss
jb
stos
insl
addr16
xchg
inc
add
dec
shrb
adc
mov
adc
sahf
imull
cmp
rorb
repz
or
dec
mov
lret
mov
aas
bound
ss
mov
addb
push
fcoml
aaa
pop
gs
fistpll
pop
pop
push
xor
xchg
sbb
lods
divb
add
mov
inc
sub
out
and
mov
xchg
push
jb
pop
mov
stos
jae
fcomp
xchg
dec
sbb
nop
add
in
fidivl
inc
idivl
push
jns
push
out
jecxz
aas
leave
mov
cmpsl
addr16
fwait
in
xlat
mov
and
inc
sar
or
mov
and
xchg
add
js
out
push
xor
sbb
pop
adc
jno
insl
and
pop
and
filds
pop
dec
add
mov
pop
roll
mov
cmp
xor
insl
push
je
lock
or
adc
arpl
and
andb
sbb
pop
shlb
lods
clc
icebp
ss
arpl
add
cmp
inc
out
mov
jo
insl
in
ret
lds
and
in
add
mov
mov
pushf
out
ss
and
nop
sbb
sbb
jecxz
out
sbb
mov
imul
shlb
aam
jmp
jnp
aaa
pop
enter
mov
cltd
mov
std
in
push
inc
jle
inc
dec
jnp
inc
cmp
pushf
and
push
and
push
in
rcll
xor
fstpt
and
mov
test
out
lret
jg
pushf
mov
cmp
xlat
dec
sub
aam
pop
dec
xchg
cmp
lea
push
mov
push
mov
lds
mov
add
into
out
lods
or
ret
repz
xchg
inc
pop
repz
aad
cmp
pushl
and
add
loope
push
xor
lods
jp
push
adc
fildll
lahf
aas
lret
bound
jno
arpl
lcall
jo
adc
in
roll
mov
aas
fnstsw
int
std
and
cmp
add
js
insb
jge
mov
int3
stos
xor
jmp
mov
mov
mov
jg
dec
push
mov
and
and
pop
loope
pushf
add
out
or
mov
mov
inc
xchg
test
notb
pusha
stc
test
sbb
int3
ficoms
rcl
stos
sub
and
jns
rcr
inc
sbb
cmp
push
sub
mov
jmp
sbb
sub
addr16
enter
test
adc
insl
pop
fstl
mov
jb
jne
imul
and
and
mov
cmp
mov
pusha
mov
jbe
aaa
push
mov
sbb
int
movsl
jp
pop
pop
xchg
rclb
std
pop
int
mov
add
mov
sub
loopne
std
adc
jnp
scas
add
cltd
cmc
or
call
fldl
fst
pop
jmp
das
mov
cmp
xchg
xchg
lret
and
push
sahf
js
mov
dec
mov
mov
mov
mov
or
cli
in
data16
aaa
insb
push
repz
imul
les
cpuid
out
and
lret
test
dec
mov
or
cmp
jg
mov
ja
mov
push
push
test
dec
mov
cmc
or
pop
mov
iret
pop
adc
incb
sub
std
sahf
mov
sub
fdivl
shll
clc
inc
pop
cmp
sbb
scas
pop
inc
push
mov
nop
lds
mov
lea
inc
add
mov
test
stc
sbb
rcrb
jge
icebp
jmp
shl
cmp
adc
or
xlat
xchg
stos
cmp
int3
xchg
pop
mov
enter
filds
inc
mov
xchg
shl
ret
adc
scas
test
sbb
or
lea
sub
rcr
pop
ss
sub
jne
testl
mov
or
hlt
push
pop
pop
xchg
mov
or
mov
sub
sarl
sbb
call
jge
xchg
add
dec
inc
add
sbb
jmp
popf
adc
cmp
or
mov
rorb
test
iret
ds
mov
sti
cmp
outsl
fs
mov
inc
test
xchg
daa
mov
push
imul
xlat
adc
lock
out
sub
mov
mulb
and
dec
fwait
fs
sbb
dec
call
sarl
loop
movsl
xchg
es
out
jle
fmull
orl
xor
push
jmp
xlat
and
xor
enter
add
outsb
stc
mov
test
push
xchg
mov
push
hlt
dec
xor
cltd
jmp
in
hlt
loope
mov
sbb
imul
cmpsl
rcr
movsl
fsubrs
les
mov
clc
push
jnp
rcrl
ret
mov
add
dec
adc
popa
pop
gs
push
gs
outsb
add
jge
add
cmp
cmp
out
push
jecxz
push
ret
sub
adc
adc
jne
cmpsb
test
push
xchg
dec
aaa
xor
test
or
movsb
xchg
adc
jmp
add
aam
cmp
test
daa
popa
add
jne
jecxz
jp
mov
adc
sbb
leave
sub
int3
outsb
enter
pop
and
cmp
fildll
pop
push
mov
outsl
dec
ret
inc
or
imul
xor
jg
into
mov
movsb
push
cltd
xor
and
lds
or
pop
iret
dec
lahf
mov
mov
leave
dec
pop
aam
les
dec
inc
arpl
cmp
cwtl
inc
inc
aad
xchg
ljmp
inc
rcll
xchg
mov
loopne
push
loop
loopne
mov
lds
movsb
movsb
addb
push
jne,pt
mov
faddl
xlat
pop
sub
lock
mov
mov
cld
push
mov
sub
ret
lret
or
mov
and
dec
idiv
pop
in
jg
sbb
das
sub
es
jnp
xchg
fiaddl
outsl
je
or
ljmp
inc
fsubrs
enter
out
xchg
inc
mov
jno
lods
push
sub
int
into
lods
daa
xor
mov
adc
and
out
push
jg
and
int
push
test
popf
adc
sar
fsubs
xchg
sbb
jbe
jecxz
pop
sub
mov
popf
sbbb
or
pop
push
cs
xchg
xor
mov
mov
mov
mov
testl
push
incb
fidivrs
adc
jo
and
pop
test
mov
in
in
lahf
cmpsb
xchg
jbe
insl
xor
loopne
sub
cli
pop
mov
mov
jnp
fisubs
inc
adcb
es
inc
stc
xor
shr
fstpt
adc
stos
mov
gs
and
cmp
pop
lcall
jns
out
gs
into
mov
add
mov
insl
and
scas
out
repnz
xchg
cmp
pop
sub
jo
fdivrs
aas
add
pop
std
push
jmp
lea
jno
popl
lret
mov
inc
mov
cmpsb
sub
mov
stos
xlat
stos
jns
push
xlat
sbb
jecxz
loop
outsl
push
xchg
xor
loopne
or
adc
jl
ljmp
js
mov
jno
mov
and
and
in
jbe
lret
sbb
xchg
dec
call
jg
popa
push
pop
ljmp
cmp
dec
inc
imul
shlb
aam
mov
adc
or
inc
fldt
cmp
enter
and
push
data16
fdivp
loope
pcmpeqd
push
push
insb
xor
jg
add
xchg
loopne
pop
push
add
mov
add
mov
or
inc
insb
lods
lock
xchg
loope
or
sbb
xor
pop
adc
ficompl
cld
enter
pop
cmp
cmp
push
add
dec
lods
js
lret
pop
xor
mov
int
popa
push
pop
divl
dec
adc
testl
mov
pop
cmc
sub
push
int3
test
push
or
and
mov
popa
cmp
mov
imul
pop
jnp
mov
movsl
rcll
inc
jae
int
pop
sahf
repz
and
stc
lods
sub
cmp
aad
pop
add
into
subb
jo
sarb
push
test
jle
les
sbb
js
cmp
lods
add
mov
dec
inc
ljmp
out
push
add
enter
fcomip
out
aam
addr16
lret
mov
push
lcall
xor
mov
pop
loop
cmpsl
jae
push
pop
test
clc
test
cmp
imul
cmpsb
dec
cld
dec
movsb
xchg
aad
mov
jecxz
mov
dec
push
in
push
repz
std
mov
jo,pn
pop
int3
roll
push
inc
lret
iret
jb
stc
or
scas
jns
xor
ret
imul
out
push
or
test
jg
ret
aad
fsubrl
mov
js
icebp
daa
enter
dec
lcall
dec
cmp
or
push
push
push
mov
das
out
rorl
mov
call
mov
in
xchg
or
sahf
sbb
or
push
jbe
push
pop
dec
xor
inc
shrl
add
fnstcw
push
test
fbld
mov
loope
jo
sarl
add
sub
dec
mov
movsb
mov
cltd
jb
outsl
sahf
ja
rol
ret
xchg
mov
xlat
mov
int
les
mov
scas
xor
scas
inc
inc
cmp
push
in
jle
jae
add
sub
jo
sbb
imul
leave
clc
mov
das
mov
leave
rorl
fucom
andl
inc
xchg
push
mov
push
test
mov
and
xchg
mov
test
and
clc
mov
push
imul
cltd
jb
cmp
mov
or
jbe
dec
mov
mov
sti
leave
cmp
push
mov
inc
inc
jle
in
jae
dec
jmp
add
int
arpl
shrl
addr16
pop
sbb
xor
test
pop
fstl
fnstenv
push
add
lcall
jge
mull
mov
mov
jge
lods
and
movsl
cs
or
stc
test
sbb
aam
mov
xchg
push
mov
test
cmp
out
js
or
aam
stos
sbb
insb
dec
mulb
mov
negb
ficoms
cmp
fcomp
popa
fistpl
fdivrl
insl
or
cmp
push
test
fwait
xchg
add
sbb
mov
ror
scas
insl
sbb
xor
sub
xlat
pop
out
dec
xlat
and
jge
jg
xchg
stc
andl
sbb
lret
xchg
mov
arpl
fdivrs
mov
dec
pusha
loop
lret
jne
dec
or
pop
stc
push
add
mov
pop
push
inc
mov
mov
scas
idivl
repz
or
insb
sub
or
and
add
pop
push
xchg
sbb
dec
dec
dec
sub
mov
jl
push
lods
sbb
test
les
test
cmp
mov
add
inc
xor
push
mov
fisttpll
add
and
jno
stc
sti
daa
jns
xor
mov
pop
jno
ret
and
mov
pop
mov
in
loopne
stos
sbb
jns
lcall
inc
and
clc
ja
inc
ljmp
mov
adc
xchg
jl
stc
mov
push
push
jp
or
pusha
mov
sahf
hlt
inc
push
mov
jp
pop
out
mov
aam
lock
les
jmp
cld
jno
and
adc
loope
in
mov
or
mov
jb
cmpb
dec
push
xchg
in
xchg
in
and
jg
pop
loopne
es
pop
mov
or
jge
pop
xchg
dec
insl
jno
push
das
mov
mov
sub
pusha
stc
fs
std
sub
leave
push
js
add
lret
dec
les
jmp
aam
es
lods
orb
addr16
fdiv
xchg
std
je
lock
mov
cmp
and
push
xchg
mov
in
add
jmp
int
xor
sti
and
mov
arpl
dec
xor
adc
out
jnp
fimull
jecxz
je
inc
pop
and
lcall
icebp
rorb
hlt
movsl
adc
ret
add
pop
mov
xchg
in
cmp
out
insl
xorb
fidivs
mov
sbb
sub
cmp
and
add
dec
into
inc
cltd
xlat
dec
sarl
pop
out
xchg
ljmp
push
dec
xor
mov
pop
pop
lock
aam
mov
xchg
in
andl
xlat
psubusb
sbb
inc
nop
mov
mov
popa
jmp
mov
cmp
and
push
in
cmp
mov
cmc
out
inc
scas
adc
and
jg
push
or
mov
lcall
push
jo
shll
iret
std
xchg
lahf
sar
test
xchg
jle
xor
dec
ret
notl
lahf
cwtl
sbb
xchg
jecxz
mov
es
ret
int3
pop
imul
test
pop
scas
cmp
mov
fwait
sub
mov
cmpsl
mulb
imul
mov
or
and
mov
sbb
sbb
pop
jno
in
mov
jp
aaa
cwtl
stos
cmp
cmc
inc
sbbb
dec
dec
adc
arpl
sbb
sahf
cmc
mov
sbb
ja
rorl
clc
dec
pop
mov
mov
add
push
cmp
or
addr16
pop
jp
outsb
sub
mov
jne
inc
mov
pop
jecxz
push
xor
leave
jmp
push
mov
or
shl
lods
jp
es
fisubrl
addr16
dec
mov
enter
jp
mov
jnp
mov
cmpsb
into
mov
push
cmc
lcall
push
js
sub
add
adc
xchg
lods
jnp
mov
mov
pop
sub
dec
xchg
xor
mov
lcall
mov
jge
cmpsb
and
cmp
dec
sub
push
hlt
outsl
xchg
test
adc
adc
lock
loope
mov
pop
andb
push
insb
sub
jbe
jecxz
sahf
adc
pop
sub
daa
shl
mov
push
fdivs
or
shlb
jns
mov
pop
out
sub
pop
cmpsl
inc
jp
repz
imul
sbb
ret
xchg
jge
cmp
push
or
sti
or
insb
stos
and
lods
jb
push
iret
fyl2x
mov
and
jnp
addr16
repnz
push
out
adc
jp
stc
or
pop
ret
movsl
stos
jo
sub
cmp
inc
fdivl
inc
repz
mov
mov
xor
jg
sti
sbb
ds
push
adc
xchg
daa
out
inc
sbb
das
inc
mov
jecxz
fst
fldenv
adc
xchg
jecxz
dec
mov
into
test
mov
hlt
adcb
clc
mov
pushl
shl
movsl
popaw
aas
mov
mov
imul
lea
imul
cmpsb
jbe
inc
flds
lcall
ljmp
xor
scas
push
aam
xor
cmp
push
aam
scas
mov
pop
pop
and
aad
popa
push
std
lcall
stos
mov
insb
mov
xchg
dec
pop
jge
pop
stc
lds
sbb
lock
push
stos
inc
pushf
mov
xchg
xor
xchg
cltd
scas
inc
or
pop
ror
cld
xchg
scas
sub
pop
push
mov
aaa
mov
daa
pop
adc
roll
arpl
push
addr16
in
push
dec
jg
adc
xchg
ds
mov
xchg
and
jae
or
les
and
test
jp
addr16
test
mov
jecxz
adc
xchg
inc
cltd
movsb
pop
cltd
repnz
mov
in
hlt
fdivrp
dec
xchg
sbb
addps
stos
subb
in
pop
addb
pusha
add
test
push
jl
std
enter
mov
mov
inc
inc
jnp
cmp
inc
mov
pop
mov
loopne
sub
imul
and
xor
fcoms
add
sahf
stos
nop
lock
xor
movsl
xor
push
dec
dec
or
sub
jl
pop
mov
loop
mov
or
mov
fmuls
add
nop
adc
scas
insb
cmp
dec
leave
leave
or
mov
imulb
fnstsw
push
pop
lock
test
inc
mov
loope
cmc
sub
fs
out
fucomip
negb
add
fstpl
push
loope
sar
loope
jne
out
insl
mov
aad
dec
cld
mov
decb
pusha
mov
repnz
cs
jno
cmp
cwtl
insb
or
std
or
inc
div
daa
add
inc
clc
and
mov
push
ja
push
push
dec
mov
push
or
test
dec
pop
cltd
jno
xchg
or
jne
and
popa
test
sbb
loopne
std
out
push
cmp
inc
clc
inc
or
jno
xchg
jge
and
mov
fs
cli
xchg
outsl
pop
adc
loopne
loop
or
cmp
push
cwtl
jb
mov
lock
jo
inc
sub
and
mov
fwait
popf
xor
push
mov
icebp
subb
mov
jnp
js
adc
fistpl
lds
add
adc
sahf
push
pop
loopw
xorb
jo
sbb
orb
inc
cmp
inc
ss
mov
mov
adc
cmp
lods
loope
fwait
orl
cwtl
inc
xchg
mov
jb
jl
out
add
bound
push
popa
test
lea
hlt
inc
fsubrl
jle
iret
mov
sbb
loop
jae
and
xchg
sub
leave
mov
cmp
xchg
mov
in
ds
pop
push
lret
pop
push
sub
cmp
dec
mov
int3
sti
mov
es
or
stc
mov
cltd
dec
or
push
out
jmp
jo
push
loopne
idivb
mov
mov
into
fisttps
sbb
pop
xor
mov
pop
jns
dec
data16
enter
jnp
cmovne
mov
and
sbb
pop
mov
out
inc
add
dec
xchg
clc
sub
pop
insl
inc
xchg
push
out
xchg
jne
cmpsl
jnp
fldenv
jg
loope
mov
push
inc
cmp
push
mov
jb
jp
adc
jle
and
mov
cmp
fnsave
pushl
dec
daa
movl
mov
sbb
imul
sbb
vphaddubd
lock
lds
mov
sub
xor
test
jbe
mov
icebp
cmp
inc
fisttpl
or
sub
fmuls
inc
leave
xor
or
stc
sub
je
or
not
leave
xchg
jge
and
ds
cwtl
imul
mov
adc
xchg
mov
push
xor
popa
mov
xor
mov
mov
jns
push
dec
scas
sbb
gs
jl
sti
addr16
call
leave
movsl
cmp
aas
pop
aad
xchg
push
xor
and
push
add
push
xor
pop
jmp
mov
cwtl
lea
xchg
push
addr16
mov
pop
add
inc
push
sub
adc
adc
and
lcall
xor
fadds
jle
imul
sub
dec
dec
lods
clc
int3
gs
ds
fsubl
ret
dec
loopne
ds
add
stos
xor
movsb
subps
sub
sahf
add
adc
pop
rcll
out
hlt
lret
test
sbbb
pop
sbb
xor
icebp
faddl
add
es
sahf
sub
call
lds
sub
movb
xlat
jne
or
ret
cmpb
mov
in
cmp
ds
or
lahf
add
js
sti
js
push
sbb
loop
cmp
xchg
loope
push
adc
icebp
testl
add
mov
insl
das
jp
pop
stos
stos
jne
sbb
lock
sbb
cmc
aam
mov
add
out
insl
popf
clc
inc
arpl
or
fists
mov
add
mov
lret
pop
mov
inc
xor
push
fsub
xchg
stc
mov
fs
clc
mov
pushf
clc
xorl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
push
push
pushl
call
mov
dec
mov
jmp
push
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
inc
xor
sub
mov
movl
push
xorl
add
jmp
mov
notl
mov
notl
inc
cmp
movl
jb
adc
mov
xor
add
jmp
andl
mov
and
mov
adcl
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xorl
mov
add
sbbl
movzwl
xorl
mov
negl
mov
orl
movzwl
xorl
xor
add
mov
mov
inc
mov
cmp
movl
jne
mov
movl
mov
decl
xor
add
andl
mov
dec
mov
xor
andl
add
movl
mov
not
movl
movl
movl
mov
mov
movl
mov
jmp
mov
add
mov
andl
xor
xor
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
movl
mov
lea
mov
mov
mov
lea
movzwl
sbb
mov
mov
andl
mov
add
mov
negl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
orl
mov
mov
add
mov
lea
add
mov
mov
orl
mov
lea
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
sbbl
lea
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jb
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
jmp
sarb
jae
dec
bound
cmp
pop
jl
push
das
andb
sub
xor
adc
divb
xchg
inc
mov
jae
jno
test
xchg
xor
sub
popf
push
lods
and
cltd
iret
fdivrs
xor
pop
dec
mov
out
stc
sbb
add
xchg
and
cmp
inc
pop
push
in
in
dec
xchg
mov
add
ds
pop
cs
gs
ret
loope
insb
jae
xchg
sub
push
or
test
dec
in
jl
lock
bound
pushf
cmp
jbe
sub
xor
adcb
ljmp
int3
xchg
int
mov
test
dec
add
out
lret
push
aam
scas
roll
idiv
test
ret
jg
sbb
inc
hlt
sub
lcall
lret
sbb
dec
iret
ds
adc
cmpsl
rcl
stos
jb
gs
push
sahf
pop
inc
pop
test
mov
test
imulb
adc
xor
movsl
sbb
ret
jns
addr16
dec
sub
mov
lock
sub
push
xchg
cs
sub
jbe
mov
subl
cmc
or
lret
dec
push
push
icebp
subb
mov
repnz
test
pop
jbe
in
mov
inc
nop
das
pop
addl
fiadds
adc
push
or
add
cmp
mov
incl
pop
inc
jecxz
ja
and
dec
stc
dec
insb
adc
mov
sub
dec
add
mov
iret
xor
sbb
xchg
push
cmpl
sarl
lock
fnstenv
dec
and
sub
adc
rorl
mov
fwait
jle
and
aad
mov
dec
scas
cmp
fistl
inc
call
lahf
sub
inc
push
xor
fs
push
or
shll
cmpsb
std
push
js
xor
pop
inc
arpl
push
jb
fbld
mov
add
cmp
popa
mov
lcall
inc
test
stos
in
or
js
mov
popf
push
pop
or
or
or
or
jp
xchg
mov
lock
std
mov
bnd
sbb
mov
push
popf
pop
or
adc
push
or
pusha
leave
push
data16
lret
xchg
hlt
mov
aam
inc
mov
inc
movsb
hlt
push
sub
and
fstp
out
inc
dec
lcall
mov
stos
lock
dec
scas
jp
push
add
xchg
xorl
mov
mov
inc
fcomps
jge
and
mov
popf
pop
test
jg
and
xchg
loopne
and
rolb
and
inc
jg
sub
sbb
push
addr16
mov
lcall
mov
inc
je
sbb
sbb
dec
jns
ficoml
mov
adc
sbb
ja
cwtl
ficompl
mov
es
cmp
js
fadds
pop
outsb
inc
push
add
add
push
in
sub
jp
inc
cmp
rclb
mov
popa
xor
pop
fcmovnb
inc
aam
movl
xchg
lcall
imul
adc
test
fldcw
sub
mov
outsl
and
jle
lods
mov
ss
out
cmpsl
pop
movsl
inc
repnz
dec
hlt
imul
jnp
add
cli
xchg
sub
push
bound
dec
divb
sub
mov
jmp
push
cmp
ficoms
loopne
lret
scas
je
or
mov
sub
add
inc
add
and
lea
sahf
negb
add
jns
inc
add
sub
lcall
mov
add
sub
sub
ret
inc
insb
cmp
call
int3
adc
push
xchg
fwait
lods
mov
mov
pop
loope
pop
add
or
mov
cmp
cli
nop
sub
sub
fdivl
mov
nop
repnz
dec
sub
aaa
xchg
push
hlt
rolb
ret
shrl
cmpsl
mov
jmp
mov
out
popl
sbb
cmp
pop
and
pop
test
sbb
mov
loope
pop
push
inc
call
scas
mov
icebp
icebp
and
je
das
push
pop
hlt
pop
cmc
cmp
xor
xchg
push
xchg
inc
mov
mov
inc
sar
jno
jbe
movsb
inc
pop
imul
adc
rolb
dec
xchg
push
push
and
sbb
shrd
ret
call
scas
adcb
push
cmp
iret
xchg
fdiv
push
sbb
outsb
and
vpaddq
out
mov
gs
and
push
sbb
dec
push
inc
dec
mov
add
mov
or
out
inc
out
add
mov
scas
sahf
push
mov
jo
xchg
push
xor
dec
xor
jp
mov
mov
test
xchg
fsubrl
mov
imul
pop
popa
pushf
or
roll
sub
mov
push
lahf
in
jge
adc
mov
and
outsb
lock
in
in
inc
dec
sub
imul
fistl
pushf
test
xor
mov
adc
gs
sahf
mov
or
push
pop
jmp
insb
and
pop
test
jns
cli
pop
pop
int3
adc
jp
push
cwtl
lret
ret
sub
inc
outsb
call
jge
mov
das
bound
mov
and
add
dec
mov
addr16
lock
flds
sbb
imulb
clc
pushf
imul
jg
sbb
xor
rolb
fbld
adc
data16
lret
lahf
les
mov
push
sub
mov
mov
dec
sub
jl
push
push
adc
es
out
sub
pop
jmp
arpl
int3
insb
mov
xchg
sub
in
mov
pop
mov
xchg
repz
enter
cli
mov
iret
sub
inc
push
pop
std
inc
mov
pop
jmp
jg
mov
clc
sahf
mov
out
cmc
push
test
sahf
sarb
cmpsb
lods
cld
cli
or
clc
dec
in
lock
in
stos
rcrb
mov
andb
rol
jg
push
in
add
je
popf
mov
cmpsl
orb
jns
call
adc
icebp
sub
xor
mov
imul
xchg
and
int3
sbb
lds
das
notb
jae
jmp
push
push
add
mov
or
mov
jbe
incl
cltd
sub
xchg
pop
adc
arpl
test
cmp
lcall
push
roll
xor
xchg
into
test
cld
in
dec
adc
ja
add
pop
add
aaa
inc
mov
lcall
sub
sahf
hlt
subps
pushw
pop
ja
test
dec
mov
and
mov
jbe
mov
mov
push
pop
mov
ds
imul
jl
cmp
cmp
jnp
lea
jb
cwtl
hlt
xchg
or
sbb
repz
xchg
lds
out
and
insb
js
jbe
shufps
mov
fldl
jno
lods
jbe
inc
dec
add
inc
ret
ficoms
mov
cmpb
cld
adc
repnz
shlb
and
fwait
mov
cmp
xchg
xor
xor
iret
push
in
cmpsl
sub
and
xor
mov
add
int
push
dec
or
enter
nop
sub
jge
jmp
clc
or
jmp
jp
cmc
lret
or
push
adc
sub
dec
insb
sub
xchg
data16
xor
pop
mov
dec
pushf
aam
adc
dec
test
cmc
leave
repz
popf
xchg
cmc
sub
cwtl
lock
push
int
xchg
arpl
mov
sbbb
xchg
mov
lock
or
fnstcw
clc
lods
cmp
xor
and
cmp
mov
xchg
ja
xchg
xchg
lret
xchg
pop
loope
pusha
cwtl
cmpsl
push
xchg
int
inc
sbb
push
aad
and
adc
enter
sub
add
sbbl
mov
xor
inc
pop
sub
cmp
mov
repnz
mov
ror
imul
addr16
ja
xor
call
sub
jl
push
inc
add
inc
mov
add
out
outsb
mov
fldl
dec
fistl
ret
push
cli
mov
aam
fistpll
sar
or
cmp
jecxz
arpl
enter
sahf
popf
pop
fstpt
lea
aaa
push
push
popa
test
adc
pop
daa
fstpl
mov
fisttpl
pusha
pusha
pushf
lcall
pop
and
inc
aas
jb
hlt
mov
out
jo
sbb
cmp
inc
imulb
inc
int3
jno,pt
mov
test
sub
xchg
xchg
adc
fcmovb
xor
into
fldenv
sub
rcrl
push
mov
aas
pop
lods
popf
xchg
test
xchg
ret
loope
in
xchg
sahf
mov
and
push
ret
stos
xor
icebp
insb
sub
push
sbb
and
stos
out
adc
pop
fisubrl
aam
cmp
xchg
dec
mov
xchg
repz
push
jle
push
adc
cmp
cs
enter
push
xor
inc
mul
and
xchg
pop
sbb
mov
test
cwtl
xor
or
or
frstor
mov
dec
adc
cmpsb
in
xchg
xchg
jle
lods
jge
out
or
inc
leave
in
inc
mov
cmp
pop
rorl
insl
mov
cmp
rol
jns
mov
outsb
push
jmp
loopne
popl
ja
jle
mov
inc
clc
hlt
cmpsb
xor
xor
in
fimull
jp
xchg
dec
dec
lret
sub
outsl
lock
pushl
loopne
mov
cmp
enter
stos
inc
ret
mov
repz
sbb
rclb
cmp
aas
push
fwait
not
sub
dec
mov
inc
sti
cs
mov
imul
std
sub
jae
adcb
mov
push
lea
andb
and
sbb
call
loope
push
lahf
dec
cmp
je
outsl
mov
lods
mov
cmpb
imulb
xchg
shlb
pop
icebp
sbb
jle
adc
stos
mov
movsl
mov
or
aam
pop
sbb
push
or
and
test
adc
out
jae
inc
fwait
call
scas
cmp
fdivrl
in
lret
cmpsb
mov
sbb
xchg
and
sub
ljmp
push
das
cmp
sbbb
push
add
arpl
notl
pop
mov
sti
popa
imull
ja
popa
push
jl
pop
sub
andb
js
mov
in
inc
lods
jo
jno
or
in
inc
sbb
push
les
pusha
pop
stos
jp
jb
ja
lds
mov
mov
jle
push
sub
pop
adc
scas
push
sti
jae
movsl
in
cld
xchg
sahf
push
lods
or
decl
mov
cmc
inc
mov
mov
lods
icebp
mov
shlb
xchg
xchg
fsubl
sub
jp
fwait
and
int
es
xor
mov
pop
xlat
call
mov
test
dec
xorps
dec
jbe
dec
cmpb
xor
cmp
xor
movsl
jno
xchg
movsb
lret
push
inc
jl
movsl
imul
push
shll
or
push
mov
cmp
push
add
pop
adc
jge
nop
lods
adc
aam
jg
clc
xchg
pop
xchg
cli
mov
ja,pt
or
imulb
movl
int3
ljmp
std
push
or
stos
nop
notl
ret
push
stc
jg
xchg
icebp
push
dec
mov
and
pop
fdivrs
sbb
mov
xchg
ficoml
lea
ja
mov
pop
adc
cltd
loop
aaa
ret
add
xchg
insb
or
adc
cld
ret
lock
out
jge
push
mov
xchg
mov
fs
sub
daa
sbb
rclb
int
xlat
pop
subl
xchg
add
lea
xor
movsl
mov
shrb
xchg
dec
jno
leave
cmp
dec
pop
and
test
fidivrl
and
sbb
subl
push
or
outsb
das
iret
jbe
rorb
push
out
pop
push
es
add
loopne
xchg
cmp
jecxz
pop
ret
push
inc
or
lea
mov
xchg
frstor
sbb
sbb
scas
aad
sbb
in
scas
es
test
fistpl
adc
cli
jge
aaa
mov
cmp
cmp
mov
ljmp
xchg
lods
add
mov
ret
jb
stos
xchg
and
mov
out
popf
pop
lods
pop
dec
mov
mov
stos
pop
sub
and
shl
mov
mov
jbe
in
dec
pop
inc
enter
xor
push
pop
xor
adc
js
loope
and
inc
inc
movsl
mov
fldl
cli
mov
xchg
hlt
test
mov
outsb
repz
lds
jg
xchg
fistpl
pushf
shll
xor
decl
cmp
push
dec
out
jmp
clc
data16
or
add
jle
out
and
mov
pop
xor
mov
cmp
fcompl
lret
jne
lods
outsb
jmp
cmp
testb
repz
les
push
jle
xchg
dec
inc
cli
into
mov
stos
ja
dec
ss
mov
pop
inc
int3
out
cld
push
cmp
adc
dec
jle
cmpsb
outsl
xor
mov
mov
lcall
or
sbb
push
xor
push
sbb
popf
daa
das
inc
mov
outsl
les
add
ljmp
fsubrs
push
gs
in
or
or
mov
cmp
neg
cwtl
jbe
cli
sub
call
fisubs
js
ret
add
xlat
fisttpl
jbe
insl
sub
add
sahf
and
mov
inc
push
sbb
sub
push
push
xor
repz
push
sub
add
ds
xor
movsl
aas
or
xor
subl
pop
lods
dec
mov
and
xchg
out
mov
sbb
add
dec
push
mov
aad
sbb
inc
dec
inc
mov
add
mov
cld
aas
xor
push
cmp
push
aam
xor
or
bsf
dec
add
cmp
inc
mov
cld
inc
out
mov
out
sub
or
fsts
mov
nop
mov
cmp
cmp
outsb
je
push
cmp
cmpsb
adc
cmp
sbb
cmp
je
rcll
loop
ret
ret
lods
add
adc
sbb
test
or
mov
into
xor
arpl
push
clc
or
movsb
mov
inc
cmc
hlt
mov
push
inc
xchg
push
mull
pop
mov
daa
fisttps
sub
add
lret
jl
mov
or
mov
and
shll
scas
outsl
ret
cs
movsb
fiadds
in
loopne
dec
dec
scas
dec
ljmp
outsl
into
insl
int
jg
jecxz
jge
aam
xchg
add
in
lods
sub
or
hlt
xchg
xlat
sub
jns
xchg
cmp
adc
inc
push
dec
in
cmp
call
mov
aaa
fwait
mov
jno
dec
mov
xor
repz
push
lahf
insl
roll
mov
add
std
jge
cld
je
mov
mov
sahf
mov
adc
sub
aam
daa
xchg
stos
hlt
data16
push
popa
push
ljmp
sarb
sub
mov
in
out
cmp
notl
lds
addr16
les
inc
mov
add
pop
hlt
xor
add
fidivl
stos
lods
iret
lds
shll
jo
sbb
out
test
mov
sbb
dec
push
jne
loop
dec
push
adcb
inc
pop
pop
lret
push
pop
stc
mov
mov
xor
jl
fcmove
test
push
cmp
pop
dec
jae
mov
sub
out
loope
jecxz
jns
cmpsl
popf
jecxz
jbe
sbb
dec
jb
jnp
xchg
push
add
cmp
cli
stc
outsb
mov
ret
add
mov
cs
call
mov
outsb
pop
sbb
cmp
andb
cmpb
push
scas
movsl
xchg
add
mov
les
mov
or
cltd
imul
lcall
in
inc
mov
inc
mov
mov
stc
mov
xchg
xchg
mov
add
fwait
or
xchg
pop
into
nop
leave
std
pop
mov
lcall
rcll
jno
in
ret
pushf
test
pop
pop
shr
jge
adc
cli
flds
inc
movsl
xchg
jno
sbb
xor
scas
nop
shl
sub
test
inc
dec
jae
inc
ja
mov
cmp
xchg
incb
mov
mov
into
push
mov
movsb
subl
js
addb
imul
scas
or
aas
cld
sub
je
mov
or
jno
sbb
out
sbb
and
fwait
sbb
mov
xlat
add
cmp
mov
int3
nop
rclb
adc
add
ja
daa
pop
rol
je
push
fsubs
ret
pop
popf
mov
sub
xor
xor
mov
mov
movsb
push
dec
aaa
add
push
dec
jecxz
ss
inc
test
aad
std
push
xor
mov
loop
sbb
cli
ljmp
dec
mov
outsb
cmp
repnz
mov
popa
ds
add
cld
sbb
mov
inc
dec
scas
xlat
movsl
and
add
mov
mov
mov
adc
cli
sbb
mov
lret
push
or
mov
scas
jl
arpl
leave
lea
movsb
mov
repnz
outsl
hlt
mov
mov
scas
int3
xchg
add
shrl
lret
jl
loop
outsl
jg
push
dec
push
stos
insb
dec
movsl
fprem
test
jne
mov
pop
cmc
xchg
cmp
mov
iret
ds
sbb
sbb
sub
cmpsb
cwtl
and
gs
faddl
lret
cltd
test
push
push
dec
insb
call
xchg
jle
or
dec
sub
pusha
repz
dec
mov
fs
test
dec
sbb
je
mov
and
inc
vrcpss
adc
cmp
shlb
inc
ljmp
mov
sahf
aad
leave
repnz
push
mov
mov
mov
jo
pop
fnstsw
inc
repz
inc
outsb
movsb
adc
sbbl
dec
lea
shll
bound
scas
mov
pop
clc
shll
jge
shrb
aam
or
cs
nop
xchg
cs
xor
mov
in
cmp
mov
lret
add
lods
inc
pusha
mov
or
jl
mov
les
add
mov
dec
cmp
jbe
in
js
mov
mov
sub
jbe
jbe
inc
rclb
ja
mov
sub
xchg
push
into
mov
in
enter
push
and
jne
xchg
imull
xor
jecxz
xlat
repz
inc
push
inc
dec
and
ss
push
xchg
cmpsb
in
loopew
std
add
sub
int
and
imul
insl
bound
test
in
fs
imul
jle
dec
test
add
push
imul
rolb
je
xor
xchg
ret
ffreep
jno
das
stos
push
mov
push
call
popf
shlb
cmp
scas
test
and
data16
or
fdivl
sub
jbe,pt
cmovp
js
jp
aam
xchg
pop
cmp
out
std
dec
dec
adc
pop
mov
fwait
xor
xchg
add
repnz
xor
adc
in
or
repz
jne
jge
fwait
mov
mov
inc
inc
ljmp
js
xor
adc
and
cmpsl
dec
lea
jge
fisubs
mov
jg
jge
rolb
fs
notb
pushf
mov
mov
lret
sbb
dec
in
test
xchg
and
xor
and
xor
mov
lock
sub
pop
and
cmpsb
pushf
jecxz
mov
push
insl
mov
std
imul
or
fsub
pop
ljmp
imul
add
mov
mov
mov
xor
xchg
in
fmulp
adc
out
xchg
js
jns
mov
inc
aad
jge
pcmpeqd
pop
popf
push
in
daa
daa
pop
cmpsb
clc
push
loop
xchg
jbe
xlat
xor
fwait
or
pop
in
fildl
mov
cmpsl
jae
stos
jno
aam
push
lea
mov
std
into
sbb
out
in
out
hlt
jle
mov
in
inc
outsb
mov
fdivl
mov
sti
mov
fisubs
cmp
mov
jle
out
mov
fdivp
jmp
aad
mov
mov
mov
pop
push
movsl
sub
add
mov
movsl
jecxz
scas
push
push
aaa
mov
cmp
cld
rcll
in
sub
clc
xchg
pop
int3
test
cmp
and
and
test
jl
cmp
daa
addb
or
jo
pop
mov
mov
mov
fld
or
sub
push
fnstcw
push
dec
cmp
test
xchg
ljmp
andb
test
sub
mov
sbb
pop
xor
mov
clc
scas
jp
out
or
mov
test
mov
jle
in
sti
por
mov
in
mov
lea
mov
std
mov
dec
push
pop
xor
jecxz
xchg
jnp
xchg
jo
push
repnz
jge
jmp
fcoml
adc
ret
sbb
mov
add
lahf
js
aaa
stos
or
dec
adc
imul
sbb
xor
fadds
lcall
loop
and
jge
pop
aam
out
push
adc
xchg
and
jl
in
and
or
and
jmp
mov
xlat
mov
sarl
lret
daa
shld
mov
add
in
mov
sbb
fisubl
out
sbb
pop
sets
jl
adc
cmp
sub
in
inc
mov
sbb
or
ja
out
and
movsb
in
sahf
push
movups
and
mov
fsts
cs
mov
test
cltd
mov
ret
inc
inc
sbb
iret
cltd
mov
push
cmpsl
add
scas
in
push
in
imul
outsl
fwait
int3
lea
sti
xchg
fsts
out
push
pop
mov
pop
mov
mov
sub
shlb
out
jle
sarl
lret
aam
jg
lds
loopne
sbb
subb
push
add
out
das
add
pop
mov
jb
fwait
aad
out
sahf
mov
cs
pop
jbe
fisttpll
pop
and
ljmp
xchg
mov
loop
jbe
mov
cld
cmp
lea
inc
insb
jo
cmp
movsl
xor
jg
add
mov
test
inc
jge
and
mov
mov
lcall
pop
nop
sub
or
pop
mov
jle
cmpb
xchg
ret
inc
add
mov
pop
cmp
sbbb
fidivrl
dec
add
or
cmpsl
or
xchg
mov
lds
das
fldenv
addr16
pop
and
cmp
lea
test
lea
mov
insb
fsubs
mov
xchg
xchg
je
cmpsl
leave
filds
or
mov
jle
daa
je
test
mov
sbb
sub
adc
push
rcrl
push
mov
into
or
nop
add
maskmovq
mull
push
inc
std
inc
ret
clc
fsubrs
xchg
cld
dec
insl
or
adc
xor
pop
cwtl
sub
into
adc
imul
xchg
je
pop
mov
jns
out
push
push
xchg
adc
insl
jbe
jle
fmull
inc
leave
mov
or
dec
js
sti
push
std
aad
ja
test
jp
popa
cmpl
push
sbb
push
ds
xchg
sbb
dec
add
movsl
pop
push
dec
sub
mov
xchg
fistpll
mov
or
popf
popf
jge
mov
xor
xor
cwtl
xchg
jae
sbb
push
jp
das
mov
xor
push
std
ss
fsubl
enter
xchg
xchg
inc
jmp
cmp
int
repnz
and
cmp
jb
in
dec
cmpsb
in
mov
ficomps
dec
pop
xchg
loopne
jmp
push
les
jae
popf
adc
adc
aaa
xor
or
xchg
inc
arpl
daa
pop
dec
jge
xchg
dec
aam
mov
fisubs
cmp
jmp
mov
lock
mov
mov
andb
idivb
and
add
subb
imul
sbb
popa
jl
outsl
pusha
mov
inc
lret
inc
stc
dec
mov
ret
cld
mov
enter
insb
in
pop
gs
pushf
mov
adc
xchg
subps
or
cmp
stos
adc
rolb
scas
movl
xor
mov
pop
loop
mov
in
xor
lahf
cmp
cltd
sahf
mov
jno
imul
push
outsb
sbb
mov
pusha
hlt
cmp
ss
sti
pop
xor
repz
mov
aaa
inc
cmpsl
push
loopne
pop
dec
sub
or
fdivrs
mov
xchg
or
cmp
xchg
aaa
mov
or
mov
fldenv
jne
add
and
mov
dec
cwtl
xchg
ja
mov
mov
pop
dec
sbbl
mov
ret
adc
sbb
testb
in
inc
dec
adc
sub
fists
jns
cmp
add
cmp
xchg
or
scas
outsb
cli
pusha
movsb
pushf
xlat
pushf
cmp
insl
mov
rolb
in
and
cmp
mov
insl
iret
adc
cli
jb
add
push
cmp
push
leave
into
mov
into
das
mov
jns
mov
lret
cmp
mov
lods
arpl
mov
dec
jb
dec
add
mov
jbe
bound
inc
jp
mov
sar
mov
lret
xchg
cld
arpl
addr16
cmp
fistps
in
pushf
inc
mov
or
dec
mov
mov
int3
out
mov
jno
mov
out
dec
xor
sti
sbb
repnz
mov
sub
mov
push
fldt
dec
adc
mov
ds
xchg
mov
js
xlat
ljmp
in
pop
shrl
xchg
int
lods
mov
cmp
pop
je
or
inc
jns
mov
pop
cld
fwait
in
dec
add
jle
sti
sahf
inc
iret
push
int
mov
rolb
adc
mov
bound
in
test
es
jnp
mov
sub
xchg
outsb
sbb
xor
jno
fsubs
loopne
sti
jno
cmp
decl
xchg
cmpsb
les
mov
or
mull
sub
xor
mov
pushf
jp
aad
mov
fstpt
cmp
fs
and
pmaxub
mov
lods
cmp
sub
popa
cmp
ret
cmp
mov
pop
test
nop
lods
shll
cmp
subb
xchg
and
mov
xchg
push
out
lret
dec
jno
cmp
inc
leave
and
jge
add
cmc
or
adc
dec
jbe
scas
mov
cmpsl
dec
xchg
sbb
lods
pop
stos
mov
push
adc
cmp
mov
rcrb
sbb
call
dec
je
pop
xchg
test
cltd
mov
xchg
sub
loop
movb
cmpsl
or
inc
call
push
jno
xchg
mov
imull
lods
mov
lcall
scas
xchg
gs
mov
repz
mov
dec
shr
push
cmpsl
loopne
ret
hlt
mov
push
adc
ficomps
rcrl
jp
js
adc
movsl
push
adc
mov
add
xor
rcrl
scas
adc
mov
lock
jbe
cmpsl
adc
lret
stos
pop
fisubrs
cmp
pop
mov
adc
adc
pusha
mov
out
xor
inc
or
push
orl
out
or
fisubs
push
mov
cmp
jle
add
imul
dec
clc
cmp
pop
jmp
mov
mov
xchg
dec
stos
out
fwait
je
cld
sub
in
in
and
pop
into
sub
movsl
xchg
jne
cmc
push
repnz
scas
jbe
test
test
xchg
jmp
xchg
ja
mov
dec
test
pop
imul
in
sbb
mov
mov
sbb
notb
push
ficomps
shlb
mov
or
dec
das
dec
push
mov
enter
stos
add
mov
dec
ficomps
test
and
lock
xchg
ja
imul
jbe
push
jge
lea
loop
movsl
jge
outsb
push
xchg
nop
ds
aaa
push
cwtl
dec
add
leave
loopne
dec
push
xor
iret
pop
cltd
adc
hlt
or
sbb
loope
mov
scas
cltd
inc
jg
loope
pop
xchg
ss
pusha
cli
add
arpl
test
add
or
shll
adc
jl
mov
mov
pusha
push
imul
mov
test
jns
jns
cmpsl
inc
mov
mov
and
inc
iret
sbb
cmpsb
add
fnstenv
inc
dec
test
pop
pop
les
cmp
leave
or
and
xchg
sub
push
mov
imul
bnd
mov
into
mov
jmp
mov
in
push
mov
xlat
add
orl
aaa
cmc
mov
lea
gs
into
push
fidivrl
aas
xchg
adc
xchg
dec
jge
rcll
push
scas
ja
xchg
cmp
jno
push
mov
mov
fidivl
aam
mov
xchg
rolb
enter
or
xor
xor
sbb
scas
jmp
enter
and
icebp
sbb
scas
mov
xor
aas
insb
in
mov
sub
adcb
jo
dec
mov
jl
sbb
and
cli
in
aaa
movsb
dec
cwtl
push
je
sbb
sub
out
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
jmp
mov
cmp
mov
pop
int
jl
pop
jl
es
fmul
xchg
pop
mov
loope
and
add
inc
sub
sbb
filds
popa
outsb
call
adc
enter
sbb
ja
fisubrs
loopne
push
pop
cltd
in
pop
enter
push
and
in
daa
fs
ret
dec
mov
dec
adc
test
inc
sbb
arpl
xlat
call
int
and
adc
inc
xor
into
inc
popf
push
or
ss
fistl
xorl
outsl
sbb
cmpsb
out
movsb
das
dec
lods
pusha
xchg
mov
int
int3
mov
add
inc
push
mov
sbb
add
rolb
pop
push
mov
jmp
or
mov
pop
and
notl
pop
insb
or
sahf
rolb
pop
pop
ljmp
adc
test
or
sbb
iret
outsl
je,pt
and
ljmp
xchg
inc
movsb
xor
addb
xor
addr16
test
fisttpl
insl
push
mov
cs
popf
push
movsl
adc
mov
mov
jb
jle
mov
sbb
scas
cld
test
push
fwait
pop
in
test
dec
jnp
jg
mov
or
in
inc
loopne
jbe
aad
push
jnp
out
pop
xchg
adc
mov
fidivrs
fadd
mov
jns
mov
mov
mov
test
sub
sbb
xor
dec
pop
test
out
xchg
lcall
pop
cmp
shl
outsl
mov
pop
lret
shlb
das
xor
gs
inc
adc
test
push
fsubl
push
push
adc
mov
cli
push
or
push
aaa
mov
xor
mov
sbb
sbb
mov
xlat
add
insl
insl
lcall
mov
ljmp
or
jp
pop
cmpsb
mov
mov
js
adc
es
std
pop
dec
xchg
imul
and
dec
jns
fstps
sbb
xor
add
mov
cmp
addr16
push
adc
xchg
outsl
fs
sbb
stos
mov
pusha
adc
ds
shlb
das
in
cmp
movl
insb
outsl
imul
notb
cwtl
cltd
fldt
dec
stc
pop
sub
inc
imul
je
rolb
xor
cmp
pop
rcl
push
sub
int3
pop
xchg
pop
push
rorl
lcall
int
sbb
dec
fsubl
data16
aam
push
mov
push
insb
fwait
addl
mov
outsb
loope
add
loopne
push
je
mov
inc
not
sub
jmp
js
sub
or
mov
mov
and
test
xchg
pushf
pusha
lods
mov
inc
dec
sub
mov
adc
cltd
mov
xchg
imul
fistpll
loopne
pop
dec
out
mov
pop
cltd
lods
xor
mov
jns
mov
mov
ja
sahf
stos
mov
xchg
xlat
out
sahf
fimull
lahf
shld
vcvtdq2ps
stc
int3
jnp
mov
and
mul
jnp
or
mov
and
mov
xchg
inc
jns
cs
shrb
push
jbe
mov
xor
movsl
rcr
popf
fs
adcl
xchg
lock
lahf
test
js
mov
fcmovb
jle
mov
sub
adc
or
xor
lods
subl
lods
fwait
mov
push
repnz
fcom
sub
inc
jno
xor
mov
or
aad
dec
pop
or
out
push
push
jbe
fsubs
dec
pushf
jnp
push
xor
mov
sbb
or
into
icebp
push
push
das
popf
push
es
push
and
fistl
jne
cmp
insl
lock
aas
xlat
js
cwtl
test
out
xor
or
sarb
inc
movsl
lds
pop
sbbb
mov
xor
fwait
sub
outsb
pop
or
cmp
lret
bound
inc
fiadds
aad
sbb
adc
pop
sbb
shrb
jmp
inc
jo
lahf
imul
mov
ret
cld
pop
dec
push
shll
lock
pop
push
rcrl
inc
lret
xor
sub
xchg
xchg
jmp
arpl
ja
mov
repz
clc
dec
xlat
push
in
mov
fs
or
or
mov
mov
call
pushf
lea
loop
negb
jbe
lods
daa
rcl
pop
and
and
sti
imul
mov
repz
mov
xor
xor
and
les
sar
enter
add
mov
cmp
xor
popa
clc
fwait
inc
es
cmpsl
inc
lods
out
and
lahf
movsb
mov
dec
pop
mov
ret
std
insb
sbb
add
clc
cmpsl
inc
repnz
pop
or
fldcw
shrb
je
scas
jp
inc
push
test
gs
add
mov
ss
push
das
movsb
icebp
sbb
push
or
insb
xor
inc
push
or
sbb
ret
cmc
sahf
neg
out
mov
add
lret
icebp
leave
cli
sbb
mov
mull
xor
xor
jmp
stos
mov
in
ja
and
jge
stos
push
and
ret
loop
push
testb
adc
jecxz
arpl
into
shrl
mov
jb
dec
mov
dec
idivl
add
xchg
cmp
xchg
or
sbb
dec
stos
in
mov
sub
push
fstp
out
loop
bound
mov
sti
scas
pop
ja
add
ret
fdiv
push
in
mov
jmp
lods
lret
out
repnz
shll
push
rol
dec
negl
xchg
inc
shl
or
fistpll
add
push
cmp
pop
gs
jno
sbb
aam
push
adc
xchg
jno
bound
mov
or
in
outsb
add
mov
jle
in
mov
inc
jl
lcall
and
mov
je
clc
xchg
dec
adc
add
scas
jno
lods
vpmacssww
xor
xchg
sub
mov
cmp
pop
add
pop
movsl
xlat
and
dec
jae
in
and
sahf
lds
sbbb
movsb
std
inc
stos
jae
xchg
or
sarl
sti
test
xchg
mov
lock
out
mov
jno
inc
jbe
and
hlt
pop
subb
cmp
adc
lahf
mov
xor
mov
stos
or
pop
fstl
xchg
cltd
mov
test
mov
and
cld
push
aaa
in
stos
lock
mov
fists
sbb
iret
in
jb
test
test
in
mov
pop
mov
adc
or
push
xor
insb
cmp
inc
mov
mov
into
pop
pop
mov
test
xlat
sbbl
push
ds
adc
or
push
xor
xchg
fs
push
add
loopne
inc
popa
xor
mov
push
mov
mov
loope
cld
dec
lods
imul
adc
inc
cmc
enter
shll
inc
or
loop
lods
sub
lret
stos
dec
test
sbb
inc
pop
mov
imul
mov
inc
jecxz
sbb
mov
adc
and
mov
jns
adc
add
xchg
dec
outsb
aaa
lds
mov
stos
mov
sbb
push
xchg
outsb
ret
or
xor
add
cmp
xlat
mov
sub
int
fdivs
pop
test
iret
cld
imul
mov
mov
jo
fsubrl
inc
mov
inc
xchg
lds
xor
and
inc
dec
mov
dec
mov
and
mov
cmp
in
cmp
sahf
dec
mov
push
or
insl
xchg
fwait
cmc
or
jnp
adc
adc
mov
cmp
ljmp
insl
xorl
mov
cmp
jne
outsl
jge
popf
cmc
scas
mov
mov
mov
inc
inc
cwtl
cmpsb
adc
hlt
push
pop
loop
mov
clc
push
lea
xchg
call
mov
mov
aam
in
jge
sub
fistps
push
or
rclb
inc
xchg
das
cmp
adc
xorl
imul
xor
and
and
jge
addr16
je
in
jnp
arpl
jg
or
sbb
mov
fldcw
sub
insl
jae
xlat
std
addr16
adc
inc
mov
xor
or
aaa
push
jle
pop
dec
jmp
dec
out
gs
or
icebp
js
mov
or
jp
push
sahf
sub
sbb
and
in
add
mov
sbb
add
in
mov
das
sub
mov
in
out
outsl
sub
aas
cld
cmpsl
mov
inc
sbb
hlt
lret
or
sti
je
mov
mov
mov
xor
pop
movl
loop
iret
dec
jnp
inc
cmp
and
loope
les
arpl
push
inc
imul
mov
adc
xor
ret
push
mov
jl
icebp
pop
or
mov
add
out
mov
dec
in
lea
jae
pop
mov
push
xchg
out
in
jne
leave
or
sbb
out
scas
ret
mov
mov
cmp
dec
lret
std
mov
pop
sub
loopne
test
cmpsl
cmpsl
scas
arpl
fistl
sbb
xchg
dec
and
cli
repz
out
sbb
sbb
xchg
mov
push
outsb
jo
rclb
dec
scas
lahf
pop
mov
movsl
sbb
test
xchg
or
inc
mov
stos
shr
mulb
cmp
pop
jmp
mov
cmc
sub
jnp
or
adc
cmp
mov
ret
fistpl
push
test
bound
cmp
pop
sub
xor
push
adc
add
in
push
mov
decl
xchg
jb
addb
or
in
aaa
rcll
or
in
mov
roll
lea
push
cmp
int
push
mov
fwait
test
and
sub
mov
mov
cmpb
ljmp
add
jb
aam
xorl
enter
push
pop
mov
imul
dec
fsubrp
pop
or
repz
xchg
adc
jl
pop
leave
mov
rcrl
pop
dec
test
pop
pop
push
ja
popf
loope
rolb
cmc
dec
imul
jns
xchg
mov
aaa
jne
mov
cmp
pop
stc
and
xlat
imull
mov
xchg
mov
add
adc
push
stc
cmp
jbe
or
cmp
mov
push
aas
out
mov
push
cli
add
insb
adc
and
sub
mov
outsb
std
cmp
adc
xor
xchg
into
stos
popf
mov
mov
push
and
adc
out
movsl
add
sbb
aas
movsb
xorl
iret
cmp
dec
lcall
data16
mov
mov
or
mov
scas
sbb
outsl
mov
mov
lods
and
stos
mov
mov
xchg
fwait
gs
stc
and
ss
or
movsl
mov
mov
notl
clc
xchg
mov
cltd
adc
jl
ja
stos
adc
data16
mov
xorl
or
and
cli
ss
aas
jg
into
hlt
pushf
jl
mov
jno
xor
shlb
inc
mov
mov
enter
sbb
test
test
js
daa
xchg
xchg
add
mov
scas
add
int
mov
pop
mov
aam
sti
hlt
lock
push
cmc
iret
idivl
repz
and
dec
mov
lock
in
mov
cltd
out
jmp
imul
push
mov
aas
dec
jo
sub
push
out
xchg
test
movsl
sbb
and
or
pop
xchg
rolb
nop
aas
sub
adc
inc
inc
std
add
js
incl
imul
sub
enter
mov
add
scas
je
jl
rcl
jg
sti
xor
mov
loop
and
jns
std
xchg
xchg
jns
push
add
daa
inc
xor
add
ficoms
addr16
mov
lahf
out
dec
xor
lea
call
xchg
xor
aam
push
add
test
hlt
in
into
sbbl
xor
dec
push
call
and
test
sbb
inc
xchg
loopne
sbb
xor
jp
addr16
sub
decb
stc
lahf
cmpsb
inc
clc
cwtl
cld
movsb
mov
pop
xlat
sub
fidivl
cmpsl
jno
loop
push
loop
mov
insb
mov
mov
xor
mov
loope
pop
fldcw
inc
inc
pop
cld
mov
mov
inc
pop
clc
jge
pop
mov
mov
dec
pusha
mov
outsl
inc
shrb
popa
nop
insl
test
je
push
arpl
sub
daa
loop
xlat
fiadds
adc
dec
sti
pop
mov
lock
xor
push
test
lret
cmpsl
sti
loopne
mov
mov
loope
inc
or
repnz
pop
shl
ret
pop
mov
jl
ret
sub
xchg
fsts
and
adc
mov
jae
mov
shl
popf
cli
fwait
add
imul
icebp
lcall
pushf
mov
xchg
xchg
sbbb
sbbl
outsb
dec
cmpl
inc
mov
mov
loop
movsl
lcall
enter
sahf
pop
and
cmpsb
stos
fdiv
es
pop
fbld
pusha
mov
xchg
cmp
rorl
add
test
inc
nop
loope
and
insl
in
dec
mov
mov
bnd
inc
in
out
add
jnp
out
jno
xchg
sahf
mov
xchg
xchg
dec
push
cmc
cmpb
mov
push
jge
pushf
dec
dec
add
rcrb
cmp
outsl
es
js
jbe
in
add
pop
mov
pusha
dec
jp
sub
aam
push
fdivl
xchg
push
mov
in
lock
pop
push
mov
or
pop
add
add
in
insb
adcl
loop
lods
mov
addr16
ret
insl
inc
mov
mov
jp
mov
adc
adc
enter
mov
ja
mov
push
loope
in
loopne
dec
cld
dec
cmp
inc
mov
gs
push
sti
adcl
stos
adc
lahf
jle
loopne
fbld
rol
shll
jg
cmpl
dec
cmp
sub
imul
ficompl
sbb
jle
stc
loop
int3
and
leave
fucomp
test
adcb
test
mov
xor
int3
sub
or
sti
aad
sbb
cld
adc
shlb
lods
test
xor
pop
lock
dec
adc
daa
aad
dec
pop
outsl
in
add
daa
pop
dec
daa
subb
cltd
scas
mov
imul
fnsave
adc
jg
sahf
pushf
sbbl
or
mov
add
out
hlt
inc
loopne
gs
push
fcompp
and
loope
push
pop
sbb
mov
rcrl
pop
imul
into
dec
inc
cmp
pop
mov
and
dec
les
jbe
icebp
test
xor
mov
stos
add
shr
mov
xor
or
adc
lsl
mov
movsl
popa
sub
scas
sbb
fs
pop
mov
pop
nop
repnz
fisubrs
add
mov
gs
dec
stos
imul
xor
std
fldt
fisubrl
lcall
fcoms
xchg
mov
js
xor
mov
fldcw
jge
repnz
dec
push
fadds
aad
add
loope
jmp
and
imulb
arpl
sub
jns
adc
aas
jle
xchg
and
mov
fstps
sbb
stos
adc
xchg
sbb
or
xchg
cmp
sub
add
fimull
inc
fdivl
push
shl
pushf
sbb
sub
push
jb
xchg
adc
sbb
shll
xor
xor
in
fxch
fs
xchg
pop
int3
mov
pop
sahf
loope
jp
dec
bound
inc
inc
mov
jl
dec
test
iret
or
mov
mov
leave
xchg
out
ja
jno
push
xor
sbb
fildl
fmuls
adc
fcom
and
fsubs
cli
cmc
add
jmp
lcall
ss
adc
lret
inc
cltd
nop
into
lock
cmp
aas
xchg
pop
pusha
divl
and
call
insb
push
mov
jp
push
test
pop
cmpsb
jge
xchg
jge
ds
push
mov
repz
data16
push
jmp
cmp
or
mov
push
test
cmpsb
sub
or
inc
jo
xchg
mov
movsl
mov
mov
dec
and
push
test
in
push
dec
cmp
adc
cmc
adc
and
ret
mov
sahf
or
lret
pusha
daa
out
mov
cld
pop
sbb
mov
stos
adc
mov
mov
aam
daa
das
xor
std
fdivrl
imul
pop
xchg
adc
jo
jne
shrb
cld
add
pop
lcall
jb
in
rolb
repz
xlat
mov
cmp
ja
das
std
jmp
dec
mov
mov
insl
addr16
in
mov
and
cltd
sub
int3
divl
in
out
xchg
les
push
fidivs
push
shrb
sub
sbbl
cmpsl
cld
arpl
xor
andl
lock
xchg
sbb
repnz
push
ss
faddl
roll
orl
in
and
sub
aam
push
sub
cmp
xchg
push
jne
lret
jle
mov
lret
scas
push
fmul
in
stos
imul
push
cmpsb
xchg
adc
lock
insl
pop
pop
sub
jg
sbbb
cmp
jne
add
jg
inc
fstpl
dec
push
pushl
pop
cltd
fiaddl
scas
jns
stos
repnz
push
or
test
fdivl
test
test
jbe
ja
inc
fstpt
pusha
jo
stos
shlb
pop
stos
xor
sbb
xlat
and
xchg
inc
dec
cmc
andl
enter
std
sbb
test
jae
cs
in
es
mov
add
mov
ret
xchg
fwait
or
cmp
sarl
mull
repnz
ret
mov
xchg
xchg
pop
and
stc
mov
dec
push
sub
in
aad
xchg
mov
xchg
ss
push
cld
cmp
push
jge
xor
inc
fildl
test
stos
in
mov
loope
lret
lcall
shr
sub
jecxz
mov
scas
jno
stos
mov
push
fcmovnu
xchg
ds
pop
adcl
into
mov
xchg
cltd
fwait
adc
lahf
cld
pop
stc
pop
pop
hlt
mov
cmc
pop
and
test
mov
mov
pmaxub
and
ja
push
mov
pushf
out
imul
aam
mov
les
lock
xchg
repz
sub
xor
loope
pop
adc
push
inc
test
push
out
std
jp
push
lock
jno
dec
pop
inc
cwtl
scas
mov
push
ds
daa
arpl
aad
in
mov
je
jne
jmp
ja
out
scas
xchg
mov
xchg
inc
pop
cmpsl
hlt
stc
mov
and
cmp
cmp
add
je
cmp
jnp
xchg
dec
push
xchg
mov
incb
dec
shll
adc
fsubp
mov
je
cmp
lret
loopne
scas
mov
ficoms
adc
push
cmp
test
xor
adc
in
fdiv
cmp
popa
adc
je
inc
movsl
hlt
das
and
and
fiadds
int3
aaa
sub
out
push
adc
pop
shlb
mov
test
ja
cmp
stos
std
imul
dec
imul
movq
jg
adc
xchg
mov
mov
nop
push
cmp
cltd
testl
xor
insb
pop
inc
mov
in
cmc
mov
out
enter
aas
ficomps
or
push
inc
sbbl
rcr
rclb
jmp
mov
jb
xchg
scas
jns
push
mov
imull
xchg
mov
dec
into
mov
cmpsl
xor
mov
out
cmpsb
cmc
sahf
fs
add
and
cmc
inc
sahf
jmp
outsb
repz
cwtl
out
push
pop
and
push
inc
mov
js
mov
pop
sub
mov
push
push
or
hlt
movsb
dec
pop
bound
cld
pop
dec
adc
xor
xchg
sbb
loope
jnp
inc
dec
decl
pop
loop
out
jno
dec
and
mov
fs
fwait
cwtl
mov
mov
mov
test
mov
xor
inc
ja
in
test
js
mov
sub
ja
cli
ret
jmp
xor
mov
fcomi
rol
hlt
lcall
jo
jb
and
xor
std
leave
outsl
push
lret
repnz
push
sub
aad
shrl
lock
push
outsb
jmp
rcrl
xchg
mov
or
ljmp
xor
push
mov
jg
mov
push
dec
shrb
inc
push
dec
loopne
inc
cmp
nop
loop
jp
mov
xorps
subl
popf
jmp
les
jnp
scas
mov
adc
clc
mov
or
popf
xchg
sub
push
add
adc
push
mov
cmp
mov
aam
pop
popw
loop
add
fldenv
dec
xor
ret
jb
cmpl
mov
repnz
or
leave
jnp
iret
dec
dec
mov
bound
adc
shl
cmp
sbb
negb
addl
cmp
lea
aaa
push
jno
cmp
leave
aam
ds
out
int3
sub
inc
mov
call
mov
icebp
ret
lcall
mov
sahf
jle
push
ficompl
xor
jo
inc
pushf
mov
mov
sbbl
jmp
xor
inc
insl
mov
incl
psubd
in
sub
push
cld
and
std
or
add
cmovbe
lock
jle
insl
push
aam
orb
dec
fwait
or
pushf
jnp
popf
jmp
fsts
jl
dec
push
jnp
mov
divl
pop
mov
test
test
push
adc
jb
inc
xchg
cld
scas
int
movsb
ds
les
push
pop
es
push
mov
cmp
push
test
in
push
lds
iret
lret
sub
lods
xor
dec
adc
cmc
lods
inc
test
std
dec
push
lock
out
fistpl
pop
jecxz
hlt
adc
fistps
and
sbb
mov
aam
or
jnp
aam
rcr
cmp
fwait
cmp
ljmp
mov
cmp
shlb
scas
imul
out
setbe
fwait
add
sbb
or
pop
dec
mov
rorl
std
je
in
mov
sbb
sbb
and
pop
sahf
pop
or
cmpsb
test
xor
xchg
xchg
mov
scas
sahf
xchg
add
loop
scas
mov
mov
pusha
cltd
call
pop
cwtl
fstl
xchg
and
xorb
add
loopne
ss
js
or
dec
inc
pop
sub
icebp
push
adc
dec
cmp
or
outsl
fisttpl
sub
nop
and
es
push
loopne
push
cmp
out
not
cli
dec
aad
loope
push
insb
mov
dec
push
mov
cltd
daa
push
and
mov
int3
addr16
add
rol
xlat
xchg
push
xor
loopne
imul
popf
es
inc
sub
add
into
lahf
pop
mov
inc
dec
fisttpl
mov
mov
adc
mov
xchg
sbb
push
test
push
leave
cmp
jbe
mov
lea
dec
cmc
mov
or
jl
ficoms
in
mov
cmp
negl
push
adc
mov
andb
add
fstpl
push
and
scas
sti
movsb
push
scas
or
or
cmp
xchg
inc
popa
xchg
into
in
insl
out
insl
xchg
inc
inc
stc
in
mov
add
fadds
jne
cmc
pushf
pop
ror
das
adc
fisubrl
or
fsubr
addr16
cwtl
int3
sahf
sahf
nop
cld
mov
mov
inc
lret
insl
xor
and
mov
fmull
and
iret
push
pushl
stos
pop
xlat
pushf
bound
fistps
es
clc
or
or
mov
jbe
aam
inc
ret
out
loopne
mov
push
cwtl
cmpsl
xor
sahf
adc
stos
jae
aam
dec
cli
xor
sahf
or
std
loop
cmp
mov
and
pop
out
sti
push
loop
jge
addr16
mov
fnsave
movsl
das
pop
cmc
adc
stc
sbb
xor
out
or
rcr
loopne,pt
out
sarl
add
pop
sbb
mov
sub
clc
les
xor
push
mov
sub
jbe
xchg
mov
fs
lcall
add
popa
xor
mov
cmp
inc
push
mov
pop
lret
pop
fstpt
lea
shl
or
outsl
inc
or
adc
in
and
xchg
pop
sbb
inc
ret
xchg
shll
or
sbb
in
sbb
rcrl
and
jl
xor
jmp
ret
daa
aas
aad
sbb
xchg
ret
sub
mov
clc
jnp
sub
ret
rcrb
enter
in
and
push
popf
pop
popf
fstpt
add
sub
rorl
push
stc
je
jp
shlb
fimull
adcb
mov
jne
jge
jnp
mov
sti
jp
push
or
cld
or
and
add
push
outsl
sbbl
dec
push
jb,pt
lret
aad
or
mov
xor
aaa
addr16
dec
dec
jnp
mov
int
mov
int3
xor
imul
dec
sarb
notl
movsb
inc
jae
adc
adc
sub
jns
and
and
xchg
addr16
addps
dec
mov
mov
test
jnp
sbb
bound
sahf
mov
sub
or
mov
jle
or
stos
sub
mov
push
leave
aas
int
inc
mov
add
pop
outsl
jmp
outsl
adc
pop
sbb
ss
mov
out
scas
into
pop
mov
rcrl
add
sbb
jl
mov
or
sti
clc
cli
popa
and
out
idiv
iret
mov
out
adc
test
rclb
xchg
mov
jmp
push
pop
cmp
and
out
loop
imul
xor
inc
nop
inc
and
xlat
in
or
mov
push
fisubrs
or
mov
and
repz
or
mov
shlb
test
cmpsb
inc
and
pop
or
divb
sub
and
ret
in
rcr
stos
stos
mov
mov
mov
mov
shr
fxch
and
test
fs
gs
mov
jl
mov
lds
mov
dec
xchg
xor
mov
not
or
jae
mov
sbb
dec
flds
aam
xlat
or
push
orb
jo
cmc
rcl
fidivrs
mov
and
stos
mov
pop
test
fs
lods
in
or
inc
faddl
adc
loope
mov
cmp
rorb
insl
jp
leave
push
jnp
sub
pop
xchg
cltd
xor
rcll
xor
imul
cmc
in
pop
push
test
add
xchg
jmp
mov
jg
pop
cmp
push
mov
mov
andb
cmpsb
xchg
jp
std
xchg
or
cmp
cmp
cmp
cmc
rol
sbb
push
call
cmpsl
jns
jae
sub
jnp
cmpsb
inc
pop
push
test
xor
lahf
pop
fidivs
mov
ljmp
dec
into
aad
and
cmpsb
pop
cmp
enter
mov
scas
cmp
pusha
popf
xchg
outsl
mov
jle
xor
insl
push
pop
mov
bound
push
les
push
fnsave
cmp
sbb
mov
pushf
xor
ret
out
fldcw
daa
mov
ja
hlt
dec
in
or
subl
imul
sbb
lea
nop
out
pop
xlat
test
lds
xor
aas
ret
lods
outsb
push
iret
shlb
ret
lcall
or
jb
sub
pushf
mov
jmp
outsb
and
jae
sahf
shr
xchg
adc
and
test
mov
pop
mov
aam
cmp
call
adc
xchg
or
fwait
out
fcompl
out
dec
mov
jmp
cmp
fwait
sahf
sbb
scas
cli
pop
js
and
jns
mov
adc
lret
cmp
dec
mov
mov
inc
sub
movl
dec
addb
cmp
mov
pusha
js
les
leave
notb
lret
ret
pop
xor
add
ja
in
mov
push
pushf
lret
xchg
into
ret
add
rorb
xchg
insl
and
inc
add
cmp
lahf
and
jp
ja
test
sbb
gs
inc
dec
cmc
cltd
in
out
fwait
pop
and
in
imul
enter
popf
or
xor
fcmovu
or
int
xchg
pusha
cmpsb
inc
jbe
inc
cld
mov
popa
push
adcl
and
dec
inc
cmc
test
or
pop
subl
les
in
mov
adc
aam
xchg
rcl
xor
ljmp
and
mov
movsb
cmp
mov
mov
insl
push
jnp
mov
add
aaa
cld
adc
stos
popa
in
adcb
test
xchg
lds
xor
sbb
push
xor
outsl
int
mov
jne
jmp
and
mov
jle
pop
ds
stos
mov
fsubl
dec
psubd
fcmovne
mov
and
test
sub
bound
xchg
lret
dec
rolb
mov
mov
cmpsl
pop
jno
ret
insb
test
dec
jo
test
push
or
je
sbb
shrb
in
jl
xchg
je
scas
nop
in
dec
stos
fwait
pop
adc
or
je
xor
nop
rcrb
cmp
mov
shrb
rcrb
aam
mov
mov
jmp
sub
std
push
je
lods
jnp
dec
sbb
enter
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
jmp
insb
jns
sbb
mov
push
pop
fcoms
call
pop
jl
and
test
jle
or
or
in
mov
jb
fnstcw
sbbb
mov
test
movsl
mov
aas
xchg
shrb
mov
cmc
inc
popl
pushf
int
lahf
adc
dec
sbb
movsb
lcall
mov
and
add
mov
les
mov
sub
sub
es
jecxz
jl
mov
scas
and
in
aas
sbb
shrl
pop
dec
push
jno
mov
dec
shrb
jmp
cmp
loope
test
out
icebp
outsl
ret
jl
leave
pop
aad
into
les
popf
icebp
jno
rclb
in
fs
inc
and
and
aas
mov
insb
cmp
mov
mov
mov
dec
sbb
pop
and
inc
and
mov
mov
pop
push
sub
inc
ja
adc
mov
inc
fldt
repz
cmp
and
out
or
xchg
cwtl
sub
sti
lahf
mov
inc
jo
push
sbb
pop
cli
outsl
cmp
push
addr16
test
hlt
adc
push
rcll
testl
aam
fucomip
cmc
fnstcw
icebp
sbb
je
push
pop
ss
imul
stos
mov
dec
test
push
mov
xor
pop
mov
add
or
xchg
fidivl
inc
mov
dec
adc
xchg
mov
cmp
pop
push
pop
xlat
sahf
sub
imul
aam
jb
shll
lret
dec
inc
cltd
jo
test
dec
data16
ret
lods
cmp
xchg
xchg
sti
push
jecxz
insl
mull
bound
sub
sbb
subb
rcrb
jnp
imul
jle
mov
push
mov
xor
in
arpl
out
push
cs
or
pop
dec
cmpsl
inc
popf
enter
test
ja
je
stos
mov
jmp
inc
pop
mov
lods
clc
mov
stos
pop
xlat
pusha
clc
push
and
repnz
xchg
push
arpl
into
leave
subl
je
jge
and
shl
int
lea
mov
cmp
sar
cmp
mov
in
pushf
sub
test
loopne
jae
lret
popa
enter
jae
jo
fwait
inc
in
jnp
hlt
dec
xchg
xchg
cwtl
fldcw
fwait
call
xor
or
mov
jl
les
jl
sbb
add
and
xchg
add
test
mov
dec
add
int
jp
decb
push
sti
xchg
outsl
outsl
pushf
push
aas
call
rorl
inc
cs
scas
ljmp
add
fmul
and
lods
insl
fcmovbe
sbb
cmp
pop
xchg
sub
leave
lods
pop
js
ja
push
cmp
rclb
push
fiaddl
incl
mov
sub
fs
repz
or
pop
pop
mov
pop
dec
adcb
mov
cmp
jae
adc
test
data16
mov
mov
cmc
and
mov
scas
fidivrs
ret
out
sarb
fcomps
std
jne
mov
imul
or
cmp
push
enter
sub
sbb
dec
sub
iret
lret
and
popa
sarb
push
sub
jecxz
pusha
outsb
enter
imul
les
sahf
punpckhdq
push
loopne
hlt
fwait
test
insl
mov
movsl
sbb
fists
repz
push
push
stos
push
and
or
inc
jne
lock
mov
xchg
or
das
pop
and
es
fmull
gs
arpl
ds
stos
adc
or
sub
inc
mov
test
sub
add
in
pop
icebp
ds
mov
movq
cmpsl
out
mov
and
or
lret
je
xlat
xor
mov
pop
jnp
lods
xor
xchg
pop
mov
mov
clc
lcall
movsl
cmc
dec
xor
ret
mov
adc
jo
repz
add
cmpsl
push
arpl
adc
and
sub
lock
pusha
push
add
icebp
add
jge
sbb
mov
jmp
mov
sbb
cld
mov
loopne
pushf
inc
insl
out
loopne
mov
or
ret
popf
fucomip
je
hlt
lcall
xchg
pop
out
rcrl
xchg
aas
add
jno
or
pop
mov
stos
jns
jecxz
xchg
aaa
jbe
push
jge
inc
std
push
add
lock
cmc
sti
mov
pop
jno
pushl
xchg
int
stc
jecxz
movsb
mov
notb
mov
pop
inc
xor
lahf
adc
aas
js
mov
inc
cli
xchg
cmp
push
xchg
adc
ljmp
daa
pop
sub
test
repnz
mov
sub
out
stc
xchg
cltd
jle
dec
movsl
xchg
in
add
jae
ljmp
adc
jne
sbb
insb
lods
fistps
xlat
mov
push
orl
mov
xchg
adc
aas
repnz
into
and
scas
push
int3
ret
pop
imul
push
dec
pop
jmp
cmp
inc
inc
sbb
jno
xchg
pop
call
or
mov
mov
push
lods
mov
mull
in
lods
adc
mov
add
xchg
bound
or
xchg
or
test
push
jbe
inc
divl
aam
adc
loope
jne
mov
sbb
ss
mov
ret
mov
mov
scas
out
cmp
add
call
sbb
nop
jg
aam
xor
push
mov
imulb
int3
inc
loopne
loopne
dec
sbbl
incb
dec
xchg
mov
xor
sbb
rcl
mov
mov
xchg
mov
insb
mov
mov
lods
cli
cmp
std
sti
inc
arpl
fyl2xp1
cmp
ljmp
cld
mov
rcrl
cmp
push
cltd
sti
mull
xchg
jp
jae
icebp
in
xor
jno
popa
push
into
sub
into
loope
pop
cmpsl
scas
fadds
shll
out
inc
std
or
lea
lret
loope
jno
sub
and
lock
lea
sub
dec
fimull
xacquire
adc
test
fwait
pop
fwait
out
icebp
or
or
or
and
insb
lea
jae
mov
push
sbb
pop
lock
dec
inc
std
sarb
inc
aaa
and
push
xorl
in
sbb
push
lock
lods
test
xlat
mov
xchg
lea
sbb
xchg
push
add
xchg
pop
daa
popa
arpl
inc
cli
out
pop
mov
ret
push
subb
mov
scas
ror
add
mull
sbb
and
jns
mov
popf
je
nop
push
or
lods
jbe
shl
xchg
push
aam
or
fildll
nop
nop
js
add
fdivp
fistpl
inc
push
adc
dec
pop
sub
dec
out
sub
mov
add
out
inc
int
jg
aad
ja
sbb
push
mov
adc
add
sbb
jno
or
jge
hlt
in
cmp
loop
fnstenv
or
add
out
js
lret
daa
cli
nop
scas
pusha
ja
insb
imul
arpl
push
mov
in
scas
movaps
push
imul
shl
insl
add
dec
aad
fmul
int3
push
les
mov
pop
aam
fiadds
stos
xchg
std
jb
dec
sub
adc
int3
push
mov
mov
imul
dec
ja
test
add
sti
fdivl
je
or
sahf
add
jge
and
outsb
pusha
enter
clc
jmp
rorl
sbb
je
inc
shr
jge
sub
pop
mov
idivb
outsl
arpl
jmp
dec
inc
or
jae
push
sbbb
aad
jnp
dec
fiaddl
and
mov
gs
subb
cmp
adc
scas
ds
jae
rcrl
sbb
icebp
popa
test
jmp
into
sbb
add
sub
sti
pop
int
cmpsl
push
jns
mov
mov
lock
dec
push
sub
call
mov
xchg
in
mov
enter
insl
and
repz
addr16
roll
pushf
mov
inc
pop
mov
insl
fiadds
xchg
sub
sub
and
adc
mov
inc
adc
clc
pop
adc
dec
cwtl
jp
in
sahf
call
movsl
js
pusha
ss
xchg
xchg
fimuls
dec
pop
int
aad
sub
mov
das
dec
adc
aad
sub
add
xchg
inc
pop
pop
sahf
loop
mov
les
out
xor
lahf
mov
sub
xchg
jge
ljmp
outsb
into
fcomps
out
lret
push
inc
lods
cmp
fbstp
pop
out
adc
mov
xchg
push
inc
lods
cwtl
jne
enter
adc
push
jge
sbb
aad
mov
mov
aam
or
into
pop
cwtl
out
cmp
sbb
lea
dec
rclb
inc
sbb
inc
cmp
jge
pop
fstpt
nop
repz
ja
insb
cltd
leave
lahf
jmp
loop
add
lock
add
mov
jnp
ret
imul
push
icebp
pop
lea
cs
xor
jecxz
lcall
push
mov
shrb
test
adc
sub
sub
in
insl
fsubp
in
stc
mov
cmp
jae
xor
push
or
jb
push
sbb
xchg
sbbb
hlt
inc
cmp
fwait
movsl
bound
cmp
ljmp
or
push
mov
jmp
ret
int3
shrl
lcall
filds
cld
ja
cld
mov
out
push
in
pop
pop
je
inc
mov
fsub
mov
movsl
roll
aas
inc
mov
lahf
xchg
bound
iret
inc
push
dec
push
movsb
orl
mov
outsl
inc
mov
ror
xor
xchg
fisttpll
testb
sbb
addr16
lret
shll
popf
mov
xchg
jp
inc
pop
sub
pop
mov
lock
out
aaa
imul
in
add
lahf
xor
dec
clc
in
insl
fistpll
imul
sar
and
mov
mov
push
rclb
fisubrl
mov
xor
mov
add
xchg
sbb
push
leave
mov
in
xor
cmp
outsb
adc
cmp
or
out
inc
and
lahf
je
scas
ret
xchg
mov
adc
pop
push
jle
inc
loop
les
iret
and
jmp
scas
or
jp
lea
popf
test
mov
sbb
or
push
push
ret
pop
push
mov
add
mov
sbb
push
fdivl
cmp
add
mov
mov
xchg
mov
dec
daa
pop
ret
lods
inc
add
xor
mov
pop
xchg
rorl
xor
ficompl
paddsw
int
fiaddl
adc
add
sub
jns
dec
leave
sbb
xchg
leave
inc
ret
mov
mov
sbb
popa
mov
lods
adc
sub
xlat
add
test
push
sbb
cli
mov
lods
add
jne
pop
std
adc
fildl
or
js
xor
ja
ja
hlt
loop
add
notb
insb
jae
xchg
mov
cmp
xchg
sub
daa
insl
sbb
jae
jle
mov
loope
xchg
fsubrs
in
daa
push
dec
cmp
sahf
clc
push
lret
mov
cmp
push
das
dec
in
loop
mov
inc
cli
jb
clc
dec
mov
adc
insb
push
sbb
xor
mov
push
outsb
lea
push
adc
push
xor
out
je
sbb
mov
es
inc
int
dec
clc
test
sti
jp
das
and
jnp
popa
mov
xlat
xchg
push
outsb
xor
frstor
mov
and
test
shrl
shrl
mov
fstpt
mov
push
pop
loop
test
xor
loope
testl
mov
daa
stc
dec
cwtl
jp
vsqrtps
adc
insb
sbb
mov
push
into
add
aad
push
lret
cmp
mov
sbb
add
add
push
cmp
pop
popa
ljmp
cld
mov
adc
out
hlt
add
add
insl
pop
movl
sub
hlt
cmc
mov
daa
xor
lret
jle
push
dec
sub
sbb
lods
loopne
mov
in
push
mov
cmp
mov
ret
stc
jg
orb
js
pop
aaa
cmc
sub
xchg
dec
pop
cmp
and
loop
xor
mov
push
cmp
ret
lcall
and
lret
sub
stc
nop
push
mov
es
out
pop
dec
fiaddl
xor
dec
or
stc
sub
pushl
sbb
sub
and
jp
dec
sub
mov
cmovo
sub
ljmp
xchg
lods
dec
push
or
test
jbe
leave
shrl
insb
add
loope
lock
cmp
dec
sub
lret
icebp
aas
push
out
mov
cmp
jmp
stc
enter
adc
dec
test
inc
or
lods
mov
outsb
pop
push
rcl
push
push
shrl
dec
out
bound
and
push
add
mov
jno
in
jmp
into
push
imul
mov
hlt
xor
gs
cmp
inc
push
jnp,pt
int3
sub
sub
pop
arpl
xchg
mov
and
test
jbe
push
sub
fimull
enter
or
pushf
stos
adc
xchg
mov
cwtl
ret
push
fildll
ds
cli
mov
and
mov
enter
sbb
xor
enter
cmp
les
mov
test
mov
push
or
insb
xorb
cmp
into
mov
adc
inc
adc
iret
out
xchg
jle
in
cmpb
mov
ss
inc
lcall
iret
adc
inc
shr
flds
mov
in
loop
lds
jmp
inc
and
and
mov
cmp
sti
movsl
adc
xchg
mov
xchg
add
sub
loopne
gs
repnz
je,pt
mov
fwait
mov
push
lahf
mov
mov
out
xor
mov
stc
dec
js
jo
push
call
adc
pop
aam
negl
mov
and
inc
push
cs
xchg
push
outsl
dec
ss
or
jmp
mov
aaa
pop
addb
dec
out
cmp
lret
out
mov
outsl
insb
js
xor
pop
cmpsb
sbb
scas
sub
add
cli
xchg
pop
imul
bound
xchg
test
jmp
cltd
inc
stc
jecxz
hlt
cmpsb
cmc
out
sbb
push
pusha
icebp
sub
sub
push
outsb
lods
je
rorb
aas
push
ret
sub
sarl
jae
xchg
push
pushf
pop
addr16
insb
dec
xchg
iret
xlat
out
add
enter
call
test
or
stc
and
jecxz
es
ds
out
inc
out
cs
jns
or
pop
mov
mov
xchg
adc
xchg
call
cmpsl
jg
cmp
mov
xor
and
sti
push
shld
mov
mov
xchg
xor
les
push
das
and
jl
imul
shl
jnp
add
add
push
xor
jno
inc
jnp
fdiv
mov
test
sub
imul
adc
imul
jmp
subl
pusha
jb
adc
and
sbb
push
cmc
mov
jae
push
lds
sub
jnp
xchg
pop
scas
cwtl
sti
lds
pop
fwait
insl
into
lcall
push
adc
into
lret
add
sbb
aam
aaa
pop
xchg
xchg
push
insl
pop
stos
and
aam
and
mov
fldl
mov
inc
jp
and
cmp
aaa
lret
rorb
mov
scas
or
cmp
push
mov
mov
ret
das
je
or
out
add
imul
adc
loop
xchg
xor
or
adc
mov
cmp
jne
or
push
pop
cmp
dec
mov
or
out
add
push
andl
lods
in
push
adcl
ret
hlt
xchg
mov
stos
xchg
movsl
adc
mov
add
dec
shll
adc
mov
sub
pop
sbb
rolb
and
sub
push
out
popf
std
repz
push
adc
xor
addr16
push
js
pushf
adc
inc
mov
pop
pop
pop
int
fwait
and
mov
ljmp
jge
add
imul
push
sub
icebp
aad
jb
shll
lods
jl
sbb
adc
xchg
and
pop
push
pop
mov
or
fcoms
push
rorl
cmp
enter
int3
rcrb
xor
scas
cmpsl
xlat
push
fcoml
adc
ffreep
fsubrp
add
pop
negl
lret
pop
pop
in
mov
out
inc
pusha
mulb
sbb
adc
jbe
sub
jl
add
daa
cmp
and
lret
pop
out
mov
xorb
jle,pt
aad
loop
mov
cld
fstps
in
pushf
push
pop
and
add
mov
in
and
and
out
and
mov
pop
sub
push
shrl
jl
xchg
ja
mov
call
xor
unpcklps
sub
fxch
dec
fsubs
sbb
mov
push
dec
sahf
jmp
jae
sbb
pusha
repz
inc
lods
pop
mov
mov
imul
inc
pop
cmpsl
push
adc
mov
hlt
shlb
mov
pop
xchg
nop
ret
data16
cmpsl
flds
mov
outsl
cmp
lahf
jle
jne
mov
xor
data16
cmp
adc
lahf
and
or
mov
leave
cmp
sub
push
lea
push
pop
jmp
popl
shll
mov
push
pop
lea
leave
and
xlat
pusha
mov
pop
pop
cmp
inc
add
imulb
push
pushf
sti
fsubs
push
jge
push
mov
pop
sub
xchg
lods
push
rolb
cmpsb
pop
jb
cmpsb
jl
xor
push
arpl
push
inc
enter
or
xchg
jae
mov
xor
cltd
inc
mov
and
rep
rol
mov
sub
and
cmp
jmp
fwait
pop
mov
loop
scas
test
dec
xor
mov
jno
test
mov
cmpsb
sub
xor
sub
addl
fwait
repnz
cmp
in
adcl
fidivrl
push
and
shlb
fdivrl
push
sbb
dec
xchg
xor
das
mov
fnsave
cs
cld
lds
ret
das
and
dec
lsl
gs
sbb
add
dec
xchg
std
jl
mov
cmovo
jl
adc
nop
pop
push
mov
cmp
mov
insb
pop
fisubl
ret
loope
add
in
jne
testb
inc
lret
je
mov
imul
lock
in
mov
enter
dec
push
mov
icebp
add
testl
addr16
jecxz
and
jo
push
jmp
mov
pop
in
jae
inc
mov
and
imul
lds
aam
loope
iret
scas
dec
rcrb
and
fbstp
cld
mov
data16
xchg
mov
aad
sub
pop
sbbl
inc
gs
out
std
iret
lret
je
and
int
mov
inc
not
jno
adc
fistpl
pusha
pop
jmp
adc
xor
or
push
int3
cwtl
and
dec
loopne
pop
inc
xchg
loop
pop
mov
pop
jns
aas
int3
pop
xor
jnp
add
gs
pop
fwait
movsl
fistps
mov
ret
pop
jge
adc
jnp
adc
inc
dec
cmp
outsl
insb
or
inc
sbb
ja
ljmp
add
iret
insb
pop
loop
adc
xchg
pop
rcll
jnp
push
cmpsb
call
add
call
inc
in
sub
mov
jp
dec
dec
cwtl
sbb
in
fcmovne
cmpsb
push
adc
incl
fists
add
js
pop
dec
bound
test
add
aam
sub
sbb
test
pop
cli
jns
sub
push
ffreep
incb
ds
dec
out
pop
popa
nop
loop
cwtl
int3
dec
dec
stos
mov
and
hlt
arpl
aas
dec
nop
int3
xchg
push
xor
sbb
in
push
dec
mov
pop
dec
movb
movsl
jl
imul
sbbb
pushf
out
jbe
imul
mov
mov
mov
xor
jb
mov
imul
xor
je
sarb
sti
inc
jle
inc
xor
adc
loope
roll
sub
xchg
xchg
test
dec
sub
pop
cmpsl
pop
cld
incb
decb
pop
or
icebp
push
add
mov
loope
mov
sbb
das
ret
call
add
mov
in
dec
push
pop
push
in
jge
dec
popf
inc
push
and
jnp
jo
xchg
data16
sub
outsb
jnp
out
mov
sub
mov
pop
sbbb
testb
xchg
add
inc
sub
and
push
or
lret
jle
scas
jne
nop
mov
lcall
pop
mov
loop
jo
dec
pushf
jne
sub
ja
pop
mov
popf
cld
loopne
aaa
dec
movsl
lods
pop
jmp
pop
inc
mov
adc
fstpl
sbb
mov
sbb
mov
lahf
bound
xchg
sub
jo
and
dec
fstl
in
xchg
mov
loope
shll
pop
mov
jle
inc
dec
or
and
inc
jg
sti
sbb
cmp
adc
or
fnstcw
fwait
mov
cmp
dec
push
lea
add
sub
test
jg
xchg
and
out
jne
ss
xor
mov
stos
xchg
pop
or
leave
shrb
xor
mov
jl
pop
adc
xchg
mov
loope
pop
pop
fimull
mov
sbb
imul
jb
add
and
div
push
pop
outsb
sub
push
jno
adc
push
icebp
pop
mov
xor
lret
pushf
or
addr16
cmp
dec
add
ret
jb
or
mov
jp
imul
loope
push
dec
gs
mov
out
or
jns
xor
dec
jnp
in
rcll
icebp
mov
call
pop
sub
in
ret
hlt
leave
stc
xchg
popa
stos
test
pop
out
rorb
out
out
lds
xor
mov
jns
jmp
fisttpl
xchg
je
or
divb
loopne
rorl
jnp
xchg
dec
ret
lods
or
daa
adc
inc
es
push
push
cmc
push
fsubs
shlb
or
dec
pop
mov
fnstsw
rclb
popf
inc
out
add
fnsave
or
iret
jp
mov
movsb
fidivrs
cmp
mov
push
call
mov
addl
push
int
cmp
mov
subb
and
jns
xor
push
and
movsb
lods
mov
test
sar
adc
pop
add
cmp
das
jnp
fwait
or
bswap
lahf
jecxz
push
adcb
mov
jb
daa
aam
lahf
push
pop
add
dec
sub
call
dec
dec
push
push
rcr
outsb
rorl
jl
pop
stos
sbb
mov
nop
pop
mov
sbb
inc
cwtl
cmpb
mov
and
test
dec
inc
icebp
xor
cld
inc
gs
mov
das
xorl
or
fdivrs
cmp
in
lret
and
mov
mov
mov
stc
repnz
inc
sbb
mov
xchg
ljmp
push
mov
adc
daa
or
xchg
in
cmp
lcall
cwtl
xor
call
lahf
push
sub
lock
lcall
out
push
das
daa
push
dec
gs
sbb
js
iret
mov
mov
mov
in
push
test
lcall
inc
or
cli
aaa
or
push
mov
xor
stos
push
mov
fstpt
xorb
cmp
lahf
stos
adc
inc
je
scas
test
insb
fcmove
mov
jno
test
lock
arpl
pop
mov
dec
imul
or
in
pop
stos
shll
cld
dec
out
dec
movsl
xchg
adc
jle
in
nop
jmp
xchg
lret
xchg
pop
mov
jecxz
test
adc
je
inc
sbb
xchg
add
pop
xor
push
subl
test
mov
stos
cmc
pop
mov
sbb
stos
mov
sbb
add
jnp
popf
sahf
mov
hlt
jno
fcoml
iret
lcall
sub
mul
sahf
adc
popa
lret
mov
xor
out
push
mov
pop
lret
jp
and
push
xor
mov
mov
add
inc
fbstp
or
push
icebp
repz
xchg
mov
insb
je
rorb
hlt
mov
pop
sub
dec
fwait
or
int3
mov
jle
xchg
mov
fcompl
lods
sbb
sar
fsub
push
pusha
leave
ja
mov
lahf
scas
int3
push
xchg
inc
jnp
andl
push
or
daa
rcll
push
fcomi
jbe
sub
xor
ret
frstor
mov
lods
add
adc
adc
mov
push
and
insl
add
and
hlt
sti
jns,pn
or
mov
loop
and
cld
or
int3
mov
nop
inc
repnz
cmp
pop
inc
notl
jno
lea
mov
mov
push
sbb
or
sub
and
scas
xchg
or
xchg
rorl
hlt
nop
je
dec
push
mov
nop
cmp
mov
fs
jb
imul
sbb
popa
pop
in
adc
xchg
ljmp
jns
mov
inc
pop
rcrl
out
cwtl
nop
iret
push
std
sahf
out
xor
lods
sub
dec
sub
xchg
jle
sti
xor
sbb
xchg
dec
mov
test
insb
cmp
fcompl
dec
mov
jns
mov
into
xchg
jmp
addr16
bound
fadd
call
push
push
fwait
jne
insl
outsb
xchg
xor
test
mov
insb
out
out
mov
or
inc
inc
ret
mov
insb
inc
xchg
sub
and
nop
mov
rolb
mov
adc
push
mov
arpl
lods
addb
inc
xchg
mov
movsb
sahf
fidivrl
or
das
sbb
dec
adc
orl
es
gs
mov
xor
mov
insb
repnz
pop
movsl
es
xor
add
pop
test
lahf
add
sub
push
sbb
pop
js
sahf
mov
repz
repz
cmp
orl
mov
fidivl
cwtl
lcall
test
jno
cmp
xor
jmp
inc
sub
fcmovbe
fld
inc
mov
push
int3
inc
add
cmp
adcl
push
shlb
jle
pop
mov
in
in
pop
lods
pop
mov
inc
jecxz
or
or
xchg
in
out
cwtl
adc
mov
pop
mov
mov
add
shll
movsl
pop
dec
fwait
xchg
ret
lock
rcl
test
out
add
cmpsb
xchg
int
sahf
fs
xor
es
adcl
jb
jb
ret
mov
jb
xor
push
cmp
gs
mov
jns
iret
xchg
lret
xchg
jb
mov
mov
push
pop
xchg
and
push
mov
movsb
mov
pop
add
cli
jl
fnstsw
pop
out
xchg
out
and
je
clc
testb
jmp
push
xchg
sub
mov
dec
push
adc
fnsave
sbb
lea
shrb
fidivrl
fsubrs
dec
adc
int3
cmpsb
cli
push
xchg
fistps
jnp
or
repz
cmpsb
int
shr
xchg
nop
mov
ds
push
add
mov
bound
add
sbb
imul
dec
add
mov
mov
sub
sub
sbb
adc
pop
pop
icebp
dec
adc
add
sbb
imul
cwtl
ficoml
icebp
leave
jo
aad
arpl
jecxz
ret
push
mov
mov
push
inc
call
cmp
clc
jl
push
dec
push
cmc
cmp
out
cld
mov
insl
lea
pop
and
cmc
dec
jecxz
add
pop
enter
in
pop
das
sub
push
push
mov
adc
mov
or
cmc
test
and
push
push
cmpb
pop
sarb
pop
pusha
adc
pop
sarb
lret
loope
mov
dec
js
cs
jecxz
inc
add
cmp
popf
jo
and
xchg
push
mov
xlat
pop
int
sbb
leave
ja
add
jae
outsb
push
xor
pop
icebp
push
dec
push
repnz
dec
sub
adc
and
loope
sub
lea
rorl
fstpl
imul
pop
mov
test
addr16
sub
or
mov
or
sub
jg
jge
sub
inc
fst
addps
into
cld
push
scas
sub
cmp
addr16
hlt
aam
ficomps
lds
mov
addr16
sub
les
call
outsb
xchg
fcmovb
xor
mov
ja
lods
push
cmp
lods
dec
popf
add
xor
xchg
inc
cmpsl
ret
ret
sub
pop
sbbl
repz
push
push
outsl
lret
aaa
mov
int
test
js
push
xlat
popf
stos
lods
push
mov
mov
shlb
in
fxam
stos
xchg
pop
mov
xchg
repz
dec
lret
dec
lods
mov
movsb
dec
sbb
jno
outsb
push
loopne
mov
or
and
out
cmp
cmp
ja
xchg
add
call
mov
enter
add
mov
pop
pop
pop
leave
ret
jne
adc
std
push
adc
aas
adc
sbb
adc
sbb
add
push
adc
out
jg
add
dec
adc
mov
jns
add
inc
adc
sbb
inc
add
cmp
inc
add
cmp
inc
add
cmp
inc
add
add
add
add
add
add
add
inc
cmp
add
scas
inc
adc
inc
cmp
add
adc
push
adc
cmp
add
sbb
add
adc
idivb
inc
add
cmp
cmp
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
adc
subb
cli
adc
sbb
adc
pop
inc
adc
sbb
adc
in
pop
adc
pop
sub
add
add
inc
add
add
inc
add
add
cmp
add
aaa
adc
cmpl
adc
push
dec
adc
mov
adc
lock
add
adc
outsb
or
add
add
add
push
push
inc
push
rol
push
xchg
mov
popf
add
add
inc
cmp
jae
popa
insb
insb
and
je
pop
push
outsb
fs
dec
push
pop
dec
popa
imul
outsl
insb
fs
dec
outsb
arpl
gs
dec
outsb
outsw
inc
jo
add
add
add
add
add
cmp
add
add
add
add
add
mov
cmp
add
mov
cmp
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
