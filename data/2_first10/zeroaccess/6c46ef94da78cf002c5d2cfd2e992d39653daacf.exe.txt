push
mov
sub
and
mov
xor
mov
mov
sub
inc
push
mov
movl
mov
sbb
sbbl
mov
and
orl
orl
mov
or
mov
neg
mov
cmpl
mov
movl
mov
movl
jmp
mov
mov
jle
pushl
call
add
mov
or
or
or
sbb
add
cmpl
movzbl
mov
movzwl
jmp
movl
movl
jne
push
push
push
push
call
adcl
sbb
inc
adc
and
mov
addl
sub
mov
mov
sbb
mov
orl
orl
lea
xorl
mov
add
mov
and
mov
cmpl
not
movl
jmp
movl
movl
jle
push
call
andl
addl
add
sub
or
xor
xor
mov
sub
or
mov
add
mov
sbb
mov
mov
mov
shrd
cmpl
mov
mov
mov
mov
jmp
movl
movl
jge
pushl
push
pushl
push
call
addl
subl
movl
sub
dec
shr
mov
mov
xor
xor
subl
or
movzwl
or
mov
mov
movl
cmpl
movl
movl
movl
jmp
movl
mov
jbe
pushl
pushl
push
push
push
call
addl
adcl
movl
movl
cmpl
mov
movl
jmp
mov
jl
pushl
push
push
call
sbbl
xorl
notl
xorl
decl
cmpl
movl
movl
jmp
movzwl
jb
push
pushl
pushl
push
call
add
subl
andl
decl
andl
cmpl
movl
movl
jmp
movl
movl
jl
pushl
pushl
pushl
push
push
pushl
call
and
movl
subl
addl
orl
cmpl
movl
movl
movl
jmp
mov
jne
pushl
push
push
push
call
sbbl
xorl
adcl
addl
andl
sbbl
sbbl
sbb
jmp
push
lods
and
cmp
sub
pushf
jmp
jl
sbb
sbb
adc
sbb
addr16
mov
cmp
cs
adc
jno
sbb
mov
and
inc
mov
cld
clc
sub
dec
pop
push
and
fcompl
dec
inc
jp
clc
xchg
xorb
jle
sti
xchg
mov
arpl
jmp
adc
hlt
adc
mov
insb
xchg
cmp
add
inc
add
fistpll
pusha
shll
daa
in
scas
ret
xchg
in
je
shrl
xchg
aaa
adc
push
jecxz
mov
int3
stos
ficoms
jp
jnp
sub
test
loopne
inc
hlt
sub
and
and
cmp
adc
das
loop
arpl
pushf
ljmp
jo
pop
sbb
test
sbb
stos
jmp
lods
cmp
xchg
lea
xor
mov
xor
scas
fmull
loope
mov
in
scas
and
jne
div
inc
sbb
mov
and
sub
xchg
xor
sub
and
cmp
push
rcl
jle
cmp
psubusw
fidivrl
fists
mov
lea
mov
sbb
xchg
jnp
mov
push
cmp
movsl
insb
or
jnp
imul
arpl
popf
sub
sub
mov
fsts
or
sahf
add
or
add
mov
stc
xor
mov
cld
inc
ljmp
cld
adcl
jno
jg
lock
aaa
in
inc
cmp
push
sbb
adc
mov
mov
sbb
mull
lock
dec
pop
hlt
pushf
push
out
rolb
dec
pop
push
out
fpatan
mov
add
ffreep
pop
or
gs
insl
push
inc
xchg
cmp
jg
sahf
mov
cwtl
mov
sbb
orb
scas
leave
jns
int3
aad
jbe
sub
ret
enter
lahf
or
mov
or
fnsave
cmpl
push
pop
and
lea
push
adc
cmpb
sbb
mov
push
lret
mov
jp
subl
inc
mov
mov
out
sahf
xchg
loope
adc
mov
into
xor
pop
lds
adc
sub
lret
out
lahf
fistpl
adc
xchg
cmp
mov
adc
pop
out
insl
cs
jg
mov
outsb
cwtl
mov
call
inc
xchg
mov
fistps
pop
xchg
sub
test
call
lret
sbb
push
cmp
push
repz
inc
adc
xchg
out
or
addr16
adc
push
or
shrl
dec
sub
inc
add
neg
movl
movl
movl
mov
add
movl
mov
add
movl
cmpl
movl
notl
jmp
movl
mov
jle
push
push
call
adcl
addl
subl
orl
mov
xor
movl
xor
movl
movzwl
adc
movl
adc
movl
cmpl
movl
mov
movl
jmp
mov
mov
je
push
pushl
pushl
pushl
call
sbbl
adcl
subl
andl
addl
movl
sub
movl
movl
addl
movl
movl
cmpl
mov
mov
mov
movl
jmp
mov
mov
ja
push
push
push
call
addl
subl
xorl
decl
and
or
mov
and
movl
movzwl
sbb
movl
or
movl
adcl
movl
movl
sub
movl
not
mov
shl
andl
mov
xorl
push
push
push
push
orl
call
cmpl
movzbl
movl
mov
movl
jmp
movl
jge
pushl
call
adc
orl
or
mov
mov
or
and
mov
mov
dec
xor
or
mov
mov
sub
cmpl
movzbl
mov
mov
jmp
movl
je
pushl
push
push
push
push
push
call
addl
sbb
or
or
not
mov
mov
sub
xor
sub
mov
lea
or
mov
mov
xorl
or
orl
and
mov
or
sbbl
xor
movl
cmp
jne
sub
mov
mov
orl
shrd
add
shr
mov
cmpl
mov
mov
jmp
notl
movl
jl
pushl
push
call
movzbl
sub
mov
mov
add
xor
add
mov
or
xor
or
adc
mov
dec
mov
adc
mov
addl
shl
xor
andl
xor
notl
or
mov
mov
cmp
movl
jne
mov
mov
xor
mov
xor
or
xor
xor
sub
or
mov
sbbl
mov
shrd
mov
xor
mov
andl
xor
shr
mov
xorl
xor
orl
or
shl
movl
sub
andl
mov
mov
mov
and
add
or
mov
sbb
mov
or
mov
shrd
shr
movzbl
sbb
mov
mov
mov
jmp
stc
dec
popa
test
mov
sbb
and
sbb
adc
sbb
mov
mov
repnz
rcrb
cmp
popa
je
pop
and
pop
or
pop
cltd
psrlw
xor
or
mov
les
pop
jae
xchg
push
add
cmp
imul
jbe
icebp
cmpsb
fidivrl
mov
dec
add
cmc
lds
mov
adc
lock
lret
out
mov
dec
js
outsl
and
and
pusha
push
mov
mov
lret
mov
jbe
dec
sub
fwait
cltd
pop
fiadds
cmc
nop
sbb
inc
xchg
call
lods
inc
mov
mov
out
test
and
enter
lret
push
mov
dec
mov
xchg
stos
movsl
cli
sahf
mov
adc
pop
adc
fsubrl
imul
aad
jnp
sarb
cmp
out
std
and
or
test
jbe
aaa
and
add
jecxz
and
hlt
jae
sbb
xchg
xchg
cwtl
test
lds
sbb
push
adc
js
add
mov
mov
pop
dec
xlat
sub
cwtl
out
mov
test
mov
mov
aaa
add
xor
lcall
mov
roll
subl
push
mov
push
ja
add
ret
inc
xchg
pop
test
adc
jo
fidivl
jl
xor
sti
fsubs
pop
mov
stos
das
mov
stos
repz
into
lock
xchg
mov
mov
jl
xor
sub
and
imul
imul
jge
and
jge
imul
imul
data16
ds
jns
cmp
add
call
int
pop
mov
inc
nop
lods
neg
cmp
fldcw
push
and
pop
enter
cmp
aaa
xor
jo
adc
mov
dec
sub
mov
xchg
mov
mov
fnsave
add
jbe
add
push
jmp
outsb
mov
xchg
inc
ret
and
ss
add
xor
mov
pop
cwtl
repnz
repz
jnp
xor
mov
aaa
sub
lods
mov
out
mov
cmp
dec
mov
inc
subb
mov
stos
pop
cli
ret
ds
push
and
incl
mov
rorl
jle
faddp
adc
adc
sub
mov
mov
push
inc
or
in
sarl
xor
mov
js
xchg
lea
xor
cmp
shll
add
xchg
add
cmp
sbb
jbe
mov
xorb
add
mov
inc
cmp
xor
out
rclb
jno
xor
sub
shl
xor
mov
adc
or
add
mov
sub
mov
sbbl
shrd
xorl
shr
mov
sub
mov
addl
mov
xor
adcl
xor
or
shl
jmp
pop
sahf
pop
add
cmp
inc
inc
mov
sub
sbb
and
sbb
jbe
push
mov
sub
push
pop
shrb
push
jae
xchg
jmp
call
mov
and
mov
pop
pop
pop
mov
fmul
adc
mov
push
xchg
and
les
and
pop
arpl
push
in
jae
into
into
stos
aas
mov
add
lret
es
iret
scas
push
jle,pt
lock
push
add
rorb
lods
mov
xor
addb
insb
out
jnp
jb
inc
gs
jmp
xchg
test
test
in
shrl
sti
cwtl
mov
mulb
and
insl
gs
pop
mov
test
mov
pop
insb
pop
xchg
cmp
add
stos
pop
or
jp
loop
out
pop
daa
mov
lcall
jb
adc
popf
lea
mov
test
xlat
pushf
or
mov
mov
mul
jge
pop
sbb
mov
pop
adc
roll
inc
inc
dec
jnp
aad
lcall
sub
aaa
dec
loopne
inc
mov
mov
aaa
fidivs
sahf
push
adc
add
aas
out
mov
xchg
loopne
pop
cwtl
fbstp
int3
stos
jge
sbb
mov
pop
fnsetpm(287
adc
jle
fsubrl
cli
cmp
out
sub
jbe
ss
push
mov
lahf
call
repnz
mov
and
sahf
lcall
fistl
xor
jecxz
sbb
movb
lods
out
mov
sub
inc
mov
popl
jbe
lock
out
add
mov
jecxz
sbb
add
dec
ret
loope
pop
xor
xchg
jae
add
mov
mov
stos
push
daa
enter
adc
popf
jnp
cmp
jecxz
ficompl
outsl
into
and
pop
movsl
dec
enter
mov
inc
mov
sbb
add
outsl
je
adc
arpl
add
js
mov
mov
xlat
sbb
subb
mov
mov
add
mov
ret
je
mov
inc
hlt
mov
test
inc
cltd
jecxz
fpatan
imul
test
jae
mov
pop
cmp
sub
aad
xor
out
ljmp
movsb
dec
fisubl
loope
cwtl
add
fisttpll
outsl
push
mov
inc
repz
add
std
rorb
fnsave
in
jo
push
shr
mov
repnz
or
push
sub
repnz
jbe
push
into
sub
or
pushf
xchg
int
dec
jp
out
mov
add
ja
lea
mov
mov
subl
shrd
subl
shr
cmpl
mov
movzwl
jmp
movl
jae
push
call
xor
not
movzbl
adc
xor
or
or
addl
adcl
mov
mov
mov
sbb
xor
sbbl
mov
xor
or
sbbl
shl
andl
imul
mov
orl
mov
shrd
mov
orl
mov
xor
shr
movzwl
sub
mov
mov
mov
adcl
xor
addl
or
shl
addl
sub
jmp
inc
ds
cmp
jno
mov
and
sbb
mov
hlt
sbb
ds
pop
xor
out
xchg
cmp
xchg
mov
mov
adc
rolb
cmc
jp
push
dec
push
outsl
cmp
popa
dec
sub
adc
or
mov
jae
cmpsb
push
jae
pop
arpl
in
sub
sbb
mov
sbb
jmp
ja
testl
add
movsl
or
and
mov
sub
cmp
outsl
pop
dec
lret
cmpl
sub
aad
leave
pop
test
cmp
push
ret
mov
fsubs
add
jmp
lods
mov
mov
ret
mov
das
jmp
js
test
mov
aam
insl
cmp
call
out
cwtl
aas
fwait
bound
or
daa
jecxz
cmp
jle
in
xor
and
push
mov
data16
and
inc
ds
cmpsl
ljmp
rolb
inc
in
cmpsb
sub
mov
mov
addb
fs
lcall
and
or
and
repnz
in
adc
mov
daa
mov
mov
jge
jecxz
repnz
lock
ds
xor
roll
xchg
iret
or
outsl
push
cwtl
fucomip
fadds
repnz
sbb
adc
pushf
call
enter
aad
pop
rol
scas
dec
mov
add
fmuls
je
mov
xor
lea
push
xchg
xchg
jp
roll
movsl
sbb
cmpsl
aaa
lea
lods
xchg
pop
xlat
sub
negl
mov
adc
jp
nop
xor
adc
stc
std
neg
rolb
mov
into
jl
aas
and
jbe
into
or
popf
mov
jbe
fwait
mov
xor
push
push
pop
cmpsb
sti
and
cltd
mov
adc
jno
jg
fcoms
icebp
mov
dec
add
sub
xchg
xor
out
mov
add
ja
jae
and
ret
fbstp
orb
out
and
mov
adc
scas
lahf
mov
push
data16
outsl
jp
cld
push
cmp
xchg
fistpll
adc
pop
or
and
or
push
mov
add
lods
mov
ss
or
test
out
cmc
rcl
mov
adc
cmpsb
stc
jecxz
pop
in
mov
or
push
mov
sub
sbb
inc
mov
iret
pop
xchg
mov
mov
dec
inc
pop
add
loope
dec
cmpsl
or
js
and
jno
mov
and
call
add
inc
icebp
xor
adc
in
repnz
mov
stos
addl
cmp
movzbl
mov
jg
cmpl
mov
movl
mov
jmp
mov
movl
jae
push
push
pushl
push
push
pushl
call
and
and
sbb
negl
or
xor
xor
add
mov
inc
mov
subl
shrd
andl
mov
mov
xor
addl
shl
decl
xor
andl
or
shr
cmpl
notl
movl
jmp
movl
mov
jge
push
push
push
call
mov
mov
add
xor
xor
xor
not
and
adcl
mov
addl
mov
subl
mov
and
mov
shrd
jmp
dec
lods
adc
pop
movsl
cmp
stos
outsl
call
sbb
and
sbb
sbb
inc
sub
int3
ljmp
xor
cmp
mov
or
repnz
aaa
jbe
shlb
mov
fwait
in
bound
stos
lods
popa
sbb
jns
lods
imul
dec
mov
les
divb
adc
push
mov
mov
jl
mov
jnp
fwait
cmpb
popf
pop
flds
addr16
in
in
loope
sub
dec
mov
loope
int3
add
xchg
adc
jo
stos
push
inc
xor
ret
das
lret
ret
cmp
push
xor
jecxz
xor
int
sub
mov
orb
and
js
jl
test
cmp
sbb
xchg
clc
xlat
mov
mov
bound
test
sbb
cli
push
arpl
sub
es
pop
mov
lock
divl
xlat
mov
jmp
pop
mov
sbb
arpl
jle
sbb
or
call
sbb
pop
inc
ret
mov
test
mov
inc
les
dec
ja
xchg
push
inc
lret
push
or
adc
add
into
sub
and
pop
cld
push
xor
mov
mov
xor
mov
add
ss
addb
add
and
and
pop
xor
lahf
xor
inc
in
inc
lret
jno
mull
hlt
popl
aad
popa
dec
leave
fsubrs
xchg
incb
sub
adc
clc
inc
jo
fldenv
dec
mov
inc
cwtl
xor
ror
xchg
push
xchg
jbe
iret
je
mov
pusha
and
popf
ret
lods
mov
mull
in
std
xlat
outsb
jne
push
loop
out
test
fldcw
cmpsb
sti
in
out
jmp
adc
xor
sbb
mov
mov
loop
pop
iret
mov
xchg
push
cmp
jecxz
sub
adc
jnp
adc
push
mov
mov
movsl
rcrl
addr16
sbb
popf
dec
out
jge
inc
mov
or
hlt
fisubl
jg
fcompl
movsb
into
daa
cmp
xor
pop
fs
pop
insb
bnd
aam
clc
adcl
mov
xlat
xorb
roll
and
popf
adc
push
test
xor
jb
mov
fisttps
pop
addr16
mov
int3
cltd
xlat
lea
xor
jne
pop
pop
shr
in
fadds
xor
stos
sbbl
and
fdivp
or
or
push
pusha
mov
pop
sysexit
stos
mov
loop
out
sti
inc
dec
ret
in
sub
mov
xor
loopne
add
aas
pushf
xor
addl
add
shr
mov
adc
jmp
add
ret
xor
sub
out
fnstsw
call
sbb
and
sbb
and
stc
test
jb
aad
dec
mov
sub
lret
xor
pop
fdivrs
or
mov
cmp
insl
in
xchg
ljmp
or
jl
and
jg
xchg
mov
insl
mov
pop
mov
push
and
add
dec
xor
add
call
push
ja
gs
xor
adc
test
pop
sub
lea
je
mov
testl
pop
daa
push
ret
cmpsl
pop
lods
xchg
rorl
outsl
lahf
cmp
mul
das
jno
cmp
jbe
stc
sub
sbb
mov
imul
out
cld
jp
mov
rcll
dec
cmp
out
andb
jb
push
push
cmc
test
add
jae
adc
jnp
mov
mov
orb
aam
leave
sbb
lods
pop
push
dec
add
or
xor
jno
push
cmc
sbb
decb
or
or
inc
pop
inc
push
xorl
mov
bound
inc
jbe
pop
mov
out
pushf
pop
imul
cmc
aaa
push
or
xchg
nop
in
jb
jle
ljmp
fwait
push
or
repnz
jae
mov
push
sbb
outsb
sbb
mov
cli
inc
les
icebp
sub
push
adc
repz
push
cmp
imul
fwait
out
inc
sbb
sti
pop
jge
push
dec
sub
xchg
push
xor
pop
rorl
in
mov
xor
sbb
dec
pushf
adc
jmp
sbb
mov
xor
add
lahf
int3
push
sbb
mov
sbb
mov
cs
pop
scas
cmpsl
mov
or
cmp
sahf
repnz
sbb
and
fstp
xchg
jns
push
cmp
imul
out
push
add
sub
ss
enter
mov
mov
insb
and
cs
cld
out
test
stc
cmp
lea
push
mov
add
jmp
call
scas
xchg
adc
pop
lods
cwtl
xchg
adc
mov
pusha
enter
iret
dec
into
stos
addr16
cltd
mov
movsl
mov
sub
adc
jns
shl
jl
pushf
sbb
test
ljmp
and
dec
cmpsb
and
aad
dec
call
push
jmp
cmp
dec
aam
aaa
push
cli
jg
push
pop
loop
aam
cmpsl
sarb
jne
nop
dec
cwtl
fisttpll
lret
or
jnp
fldln2
and
mov
into
xchg
cmp
mov
pop
imul
or
add
push
add
jge
sbbl
xor
adcl
or
shl
adcl
imul
sub
jmp
cmpl
movl
mov
mov
jmp
movl
jge
push
pushl
call
movzwl
and
adc
or
sub
xor
mov
mov
sbb
mov
cmpl
movl
movl
jmp
mov
jge
push
call
add
inc
xor
add
mov
adc
xor
cmpl
movl
mov
mov
jmp
movl
jle
push
pushl
push
push
call
mov
xor
andl
sbb
subl
mov
mov
and
mov
shrd
mov
mov
subl
xor
subl
shl
subl
xor
or
adcl
shr
mov
cmpl
movl
mov
mov
jmp
movl
jle
push
pushl
pushl
pushl
push
pushl
call
or
adc
or
inc
subl
mov
and
sbb
sub
mov
cmpl
movl
mov
mov
jmp
mov
jbe
pushl
pushl
pushl
push
pushl
call
adc
or
mov
xor
or
sub
xor
xor
or
mov
subl
mov
sbbl
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jb
push
pushl
call
xor
addl
inc
xor
neg
notl
cmpl
mov
mov
jmp
mov
jge
pushl
push
call
mov
add
mov
not
subl
mov
mov
xor
adcl
mov
sub
mov
addl
mov
cmpl
mov
movl
mov
jmp
movl
movl
jl
push
push
call
orl
sub
sub
movl
or
jmp
subl
cmp
leave
jl
dec
in
dec
negb
sbb
adc
sbb
aas
sub
fidivrl
pop
jnp
sub
pushf
mov
pop
inc
inc
aaa
pop
test
jno
and
iret
mov
int3
out
xchg
test
push
ja
push
lret
mov
lea
popf
xchg
xchg
dec
je
and
or
lods
fsubrl
mov
movsl
xchg
aam
loopne
push
daa
shlb
or
push
ret
adc
lds
aas
jno
or
or
pushf
xchg
xchg
sar
scas
and
stos
jecxz
inc
jne
cltd
es
sbb
nop
orw
cld
call
xchg
and
xor
pop
cmp
test
add
push
cmp
add
cli
and
xor
dec
cltd
mov
mov
testb
sbb
inc
out
insl
inc
les
xor
scas
push
xchg
sub
paddusw
adc
callw
rorl
negl
std
or
mov
fstps
divb
add
mov
push
push
dec
lods
sti
sub
add
scas
arpl
jbe
xchg
call
pop
xor
add
xor
addr16
ljmp
scas
and
iret
gs
push
call
in
mov
fdivl
add
insl
cmp
int3
push
aaa
es
fucom
pop
xchg
xchg
loopne
jg
add
sub
testl
push
test
mov
xor
mov
inc
or
out
ret
inc
push
mov
call
stos
cmp
pop
test
in
mov
aaa
pop
dec
data16
pop
jo
xchg
sub
add
xorb
inc
ljmp
cmpsl
xchg
inc
enter
xchg
or
lahf
inc
rolb
addr16
sbb
adc
fnstsw
push
hlt
sbb
dec
stos
or
push
das
mov
adc
fidivrl
cmp
jnp
push
and
cld
insb
inc
adc
push
test
ljmp
iret
mov
push
shrb
cmp
scas
mov
push
add
aas
adc
xchg
jns
ret
push
xor
fimuls
or
push
in
sbb
int
sub
inc
enter
pop
nop
das
loope
pop
scas
scas
or
out
ljmp
insb
adc
fcmovu
xchg
pop
xor
sub
call
and
fcoms
pop
or
call
daa
jnp
sti
add
inc
movb
stos
mov
pushf
mov
mov
mov
add
jp
push
dec
mov
fsub
xor
scas
in
jb
subb
mov
mov
test
cmp
mov
cmp
xchg
cld
mov
mov
xor
movsl
enter
pushf
mov
xor
add
xor
mov
mov
xor
adcl
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
jmp
inc
mov
mov
and
sub
sbb
adc
sbb
sbbb
jl
push
jno
inc
lcall
mov
jae
mov
inc
cmpsl
out
clc
mov
push
inc
add
adc
repnz
or
test
js
jge
inc
and
stos
scas
iret
les
shrb
call
test
sbb
xchg
bound
ret
mov
lcall
add
inc
insl
jmp
cmpsl
les
sub
out
or
xor
xor
andl
shl
bound
mov
aas
je
push
sbb
imul
xor
nop
movsl
lret
test
push
pop
stos
pop
and
or
cs
fmull
cs
in
out
add
mov
mov
out
cmp
push
in
lret
shll
jae
sub
cs
sbb
pushf
adc
mov
jo
xchg
pop
push
pop
inc
and
xchg
mov
adc
inc
inc
stos
hlt
ss
movsl
fdivrl
push
icebp
mov
mov
ret
sbb
fistpll
rcr
cmp
mov
divl
xlat
adcb
std
mov
pop
nop
push
jnp
aad
les
pop
mov
mov
xor
ret
add
adc
arpl
jnp
data16
fldenv
sub
fidivrs
mov
js
add
adc
add
xor
jp
mov
mov
pusha
sbb
push
cli
loopne
push
mov
sbb
aad
inc
jge
sub
sub
bound
dec
add
jmp
push
add
add
and
pop
mov
sti
outsl
out
and
rorb
xchg
loop
cmp
aad
adc
in
mov
test
in
xor
add
xchg
jecxz
sti
jecxz
pop
push
mov
xchg
xchg
rcrb
js
test
mov
pusha
inc
lcall
cmp
mov
cmc
ja
push
arpl
rcrb
or
or
inc
lcall
lcall
sbb
lahf
outsl
movsl
fstpt
xor
jp
mov
xor
fwait
movsl
jmp
test
xor
shrb
cmpsl
or
push
mov
mov
jge
and
in
addr16
lret
mov
xor
mov
pusha
or
fs
sahf
imul
ss
cmc
mov
in
cs
mov
mov
in
xchg
cmp
sub
in
mov
xor
xor
sub
imul
jmp
das
jo
je
push
xor
in
lahf
inc
xor
lret
mov
ret
arpl
int3
inc
push
int3
pop
and
in
cmpsb
icebp
movsb
repz
cmp
mov
shrd
jmp
out
push
push
push
mov
dec
sub
sbb
adc
sbb
into
push
sub
push
dec
mov
dec
js
jmp
pop
adc
dec
shrb
xchg
push
mov
enter
push
push
jecxz
mov
insb
and
pop
mov
adc
lret
push
sub
xor
push
out
pusha
jae
mov
jae
and
mov
xor
xchg
add
movsb
mov
cmp
xor
lock
mov
push
bnd
stos
inc
pop
adc
fildll
inc
ficompl
mov
mov
out
adc
popa
shl
inc
int3
cmp
popa
sbb
mov
jge
out
es
inc
outsl
out
sbb
ja
cltd
mov
dec
cmpb
xchg
sbb
pop
je
stos
out
pushf
roll
out
xor
nop
push
cwtl
faddp
and
add
jne
sar
inc
cli
push
inc
jmp
adc
gs
or
or
sti
lahf
inc
fsubs
cltd
and
cmp
pusha
std
daa
xor
push
and
add
sbb
sub
movsl
push
andb
jb
or
adc
mov
mov
popf
xchg
ret
cmp
xchg
sarl
sbb
out
in
push
xchg
cmp
and
pushf
in
subl
lahf
add
pop
xchg
in
adc
and
arpl
xchg
mov
xchg
ja
add
dec
mov
mov
cltd
jno
xor
and
add
mov
jle
daa
pusha
mov
dec
fisttpl
lahf
aas
ret
rclb
lahf
daa
xlat
cmc
dec
jno
adc
orl
dec
xchg
or
jo
pop
pop
add
enter
jo
movsl
jns
sbb
pop
inc
xor
mov
les
sub
jnp
jbe
loope
dec
test
mov
mov
xchg
and
mov
mov
and
jl
dec
fsubs
jp
ds
push
add
push
and
addl
leave
mov
mov
sahf
mov
pop
mov
mov
gs
shl
dec
adc
mov
in
leave
lret
and
out
outsb
jle
jno
js
mov
lahf
scas
sbb
add
movsb
mull
cmp
mov
fstpt
push
ljmp
adc
inc
dec
daa
scas
std
enter
or
adc
dec
sub
rcll
lret
cmp
lock
shl
xlat
loop
int
jecxz
and
imul
imul
sub
xchg
pop
and
sub
loopne
add
fldenv
lea
push
fisttps
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
jmp
loopne
cwtl
xchg
mov
pop
add
outsl
mov
lret
xor
and
sbb
mulb
aam
adc
mov
or
cwtl
xchg
xor
test
xor
mov
push
push
add
xchg
lds
in
out
movsl
roll
adc
repnz
adc
ds
push
cltd
mov
addr16
add
fsubrl
in
add
sub
clc
mov
stc
int
cli
jl
sub
popa
mov
push
bound
sbb
fdivr
pop
mov
mov
add
jecxz
roll
lds
mov
mov
or
xchg
inc
jnp
dec
loopne
addb
addl
lds
add
loope
push
pop
aaa
xchg
rcrl
movsb
out
inc
push
push
mov
jb
xchg
add
push
or
mov
xchg
push
ret
cltd
lret
jno
fistpll
iret
in
cwtl
out
mov
sbbb
mov
xor
jl
xchg
mulb
xchg
adc
icebp
push
inc
iret
leave
mov
mov
and
adc
sub
lret
adc
movsl
jle
push
xchg
sbb
mov
inc
scas
fstpt
xacquire
int3
ss
push
dec
sub
lahf
mov
loop
inc
out
pop
gs
lahf
push
mov
das
cmp
aaa
int3
mov
mov
mov
cld
cmp
jae
leave
negb
ss
and
test
sbb
loop
stos
and
jmp
jle
in
out
mov
int
jbe
cwtl
insb
mov
or
sub
outsl
push
cmp
out
xchg
pop
dec
in
int3
outsl
mov
jle
into
push
fbstp
jae
lcall
ror
outsl
mov
popa
add
mov
pop
sbb
dec
incb
je
cld
scas
pop
js,pt
fnstsw
movsl
and
pop
lcall
add
adc
xor
inc
call
shr
movsb
shlb
mov
dec
mov
adc
cmpsb
add
push
cmpsb
sarl
cmpsb
test
shr
sbb
je
dec
lock
jp
jnp
push
leave
pushf
sbb
mov
or
xor
test
and
inc
lods
cwtl
sahf
push
push
jne
xchg
rcrb
mov
push
add
sahf
fsubrl
mov
das
lods
cltd
jbe
lds
push
fcomip
gs
xchg
mov
in
daa
mov
out
inc
in
mov
push
imul
stos
movsl
lea
push
shrl
ror
push
xchg
mov
jle
sbb
imul
orb
into
stos
mull
mov
jp
mov
lcall
test
mov
ret
or
add
add
les
or
push
arpl
push
fistps
sbb
adc
sbb
cmc
push
cld
call
cmp
mov
shll
xorl
or
stos
jno
shlb
or
test
sub
jae
adc
inc
cmp
push
push
inc
jge
in
movd
call
inc
hlt
pop
lcall
mov
and
cld
push
out
xchg
push
cld
test
mov
nop
mov
mov
pushf
test
loop
jo
jnp
cmp
mov
int3
test
and
xchg
clc
adc
and
xchg
dec
and
nop
and
cmc
push
stos
popa
cmpsl
outsl
iret
stos
xor
xchg
imul
jne
xchg
mov
mov
popa
cs
shll
test
mov
flds
jmp
xor
pop
push
push
sub
fmull
mov
xlat
xchg
jmp
mov
mov
orb
into
inc
add
int
push
and
push
adc
sbb
rorb
mov
mov
xchg
inc
cwtl
loopne
inc
clc
mov
sub
mov
in
rorl
scas
roll
jle
test
sub
mov
mov
loopne
dec
cmpsb
sbb
sbb
out
push
xor
xor
xlat
add
pop
scas
push
and
leave
mov
jnp
fstps
out
iret
repnz
mov
jmp
mov
insl
pop
dec
and
int
xlat
mov
out
outsl
aad
sar
and
sub
jp
adc
fidivs
dec
pop
jo
leave
add
addl
out
notb
adc
mov
push
xor
fisttpll
jbe
xchg
jne
stos
scas
int3
and
movb
int
xlat
scas
aaa
xchg
dec
mov
and
sub
add
lock
loope
mov
push
aad
dec
sbb
push
stos
jmp
push
xchg
sarl
jo
ficompl
inc
pusha
ret
mov
dec
cmp
test
rcrl
mov
test
sbb
cmp
push
dec
pop
cmp
es
test
add
mov
push
add
lods
ds
fstpt
fsubp
loopne
dec
fcomps
shrb
mov
loop
adc
mov
cmp
mov
mov
outsl
push
insl
adc
iret
aad
xchg
outsb
rol
push
call
lret
cld
mov
sbb
imul
ja
stos
dec
and
xchg
out
xchg
pop
mov
fstps
in
popa
sub
das
das
add
inc
out
cltd
std
add
xor
pusha
and
jl
cmpsl
out
mov
push
stc
ret
scas
add
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
and
xor
ficomps
mov
jo
sbb
and
sbb
addr16
sub
inc
arpl
xor
jge
inc
es
in
mov
inc
pusha
leave
inc
add
dec
aad
fsubs
inc
ret
cmp
xor
cmp
jb
orb
cmp
push
inc
test
in
or
pop
incb
scas
xchg
dec
adc
and
scas
ds
mov
mov
push
mov
out
sbb
jb
dec
jnp
cmc
mov
imull
lock
lret
xchg
sbb
mov
fdivl
dec
push
dec
mov
repz
data16
loope
xchg
cmpsl
sbb
iret
cmp
inc
xlat
pop
outsb
and
test
insl
pop
xchg
sbb
dec
shll
aad
or
add
mov
or
mov
cmp
mov
aad
out
push
mov
sub
rorl
or
ss
js
jno
xchg
xor
rolb
push
mov
test
aam
pop
mov
or
jp
mov
iret
sahf
jge
or
test
cmp
imul
or
push
insl
aam
cwtl
addr16
sbbb
mov
mov
xchg
out
jnp
in
mov
jae
add
mov
fildll
dec
sbb
stc
push
cmp
xchg
add
into
ljmp
mov
pop
sarb
inc
aam
insb
push
sbb
add
fs
into
or
inc
js
in
sub
in
adc
fisubs
jge
mov
and
stc
push
mov
stos
addl
inc
push
pop
lock
in
out
movnti
inc
jb
cmp
arpl
lods
push
dec
sbb
in
and
fnstenv
or
cmpsb
rcrl
mov
fiadds
daa
dec
test
push
push
dec
xor
mov
adc
jl
adc
addr16
xchg
mov
sti
aaa
outsl
xchg
daa
and
cmp
jl
xchg
aad
incb
lret
mov
pop
mov
inc
popf
dec
sub
push
movb
or
icebp
mov
adc
fwait
insl
cltd
mov
sub
jecxz
inc
std
dec
aaa
imul
fwait
pop
test
js
loop
or
inc
mov
jo
out
fnsave
jge
xchg
testb
loope
fsubp
movsl
xchg
imul
nop
adc
adc
imul
sbb
loop
jno
in
mov
clc
inc
in
cwtl
aaa
das
or
sbb
adc
fsubs
popa
jg
scas
and
nop
sub
rorb
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
jmp
fdiv
sub
mov
and
rcrl
sbb
adc
sbb
dec
pop
add
movsb
xchg
push
push
sbb
jo
mov
lock
in
and
clc
or
adc
data16
adc
and
mov
mov
jo
dec
jecxz
jmp
test
ret
inc
not
inc
dec
aad
mov
fwait
sbbl
das
lret
and
mov
cmp
popf
and
add
jmp
mov
xor
cmp
add
xchg
sbb
enter
decb
jmp
rclb
out
xchg
sub
add
adc
or
sti
shr
or
addb
sbb
xchg
push
cltd
mov
xchg
push
in
push
jb
fnstenv
adc
or
popf
loopne
xor
adc
loope
mov
xorb
xchg
loopne,pn
rolb
or
mov
loop
jo
mov
aad
sti
mov
and
push
rcll
es
mov
and
stos
or
movsb
inc
call
add
pop
push
fisttps
mov
jg
mov
jmp
dec
pop
mov
xchg
inc
ret
sahf
into
push
xchg
xchg
pop
add
dec
or
call
ds
jmp
xchg
xor
ljmp
sub
jns
jo
sbb
push
mov
pop
dec
fwait
in
push
clc
add
xor
sbb
popa
pop
pusha
jp
xor
or
cmp
repnz
nop
pop
je,pt
add
push
dec
xchg
sub
lea
icebp
mov
enter
jecxz
insl
not
hlt
fwait
mov
xor
insb
aam
push
jp
add
shlb
loop
mov
add
cwtl
xchg
ja
push
aas
or
add
out
cmpsb
sbb
jbe
dec
int3
or
xor
into
lret
ficoml
mov
lcall
dec
xchg
into
popf
sti
in
inc
orl
int
test
ret
fs
daa
jo
ds
popa
dec
mov
popf
and
mov
nop
mov
mov
popa
jb
pop
cmp
push
mov
fcoms
mov
sarb
push
sub
push
push
lods
xor
cld
imul
xlat
inc
dec
jg
enter
push
pop
sbb
mov
repz
imul
sbb
mov
dec
mov
inc
loopne
clc
repz
popf
pushf
and
jmp
cbtw
mov
push
aad
xchg
aas
in
sbb
inc
mov
lahf
lods
in
pusha
mov
and
pop
fsubr
xor
lods
lods
or
jbe
aaa
push
inc
xor
and
mov
mov
mov
xor
mov
xor
shl
mov
or
jmp
out
mov
stos
mov
test
loope
or
sbb
adc
sbb
pop
sub
mov
les
loopne
mov
cltd
pop
test
pop
push
ljmp
jmp
cltd
pop
xor
bound
stos
dec
ljmp
mov
insl
aas
dec
sub
mov
gs
insl
popf
rorb
out
dec
outsl
orl
xchg
xchg
sbb
jne
sti
mov
adc
push
dec
sbb
loop
adc
or
bsf
mov
hlt
cmp
hlt
outsb
scas
in
mov
xchg
mov
shrb
aaa
outsb
inc
pinsrw
sub
addr16
push
cli
sbb
bound
lahf
cld
stc
mov
jge
gs
shrb
sub
icebp
scas
test
aad
push
jle
arpl
out
sbb
and
add
lods
int3
add
inc
fwait
ud2
insl
popf
xchg
inc
daa
insb
jmp
push
imul
mov
addr16
jae
test
in
xchg
cli
movsb
mov
pushf
mov
jae
paddusb
sub
call
adc
dec
ret
mov
enter
cmp
in
pop
xor
pop
stos
test
pop
popa
xorl
mov
push
sub
das
frstor
dec
decb
mov
test
mov
xchg
mov
je
add
dec
pop
xor
cmpsl
ss
xchg
and
add
clc
mov
lret
in
shrb
cmp
add
lret
sbb
ds
add
fists
xchg
jbe
sbb
adc
fwait
cs
frstor
mov
dec
cmp
jmp
jle
cmp
sub
mov
xor
add
ficompl
sbb
flds
aad
movsl
mov
das
or
jecxz
mov
dec
subb
enter
imul
or
xlat
add
jno
insl
sbb
sub
imulb
ret
jne
insb
pop
jg
push
push
xchg
pop
and
rcll
jp
mov
mov
push
jo
push
lds
mov
pop
mov
ficompl
mov
adc
push
test
aam
test
mov
call
dec
jae
fiadds
mov
enter
idivb
lahf
mov
neg
sbb
pop
ficompl
cmc
iret
int
imul
adc
sub
push
pusha
jg
sub
mov
in
mov
xor
ja
rcl
add
push
pop
mov
pop
out
mov
adc
ret
mov
cmp
je
mov
sub
mov
mov
jmp
dec
lret
repz
cmp
fildl
add
and
sbb
lods
clc
sub
jns
mov
je
push
dec
gs
je
or
imul
aas
roll
hlt
and
sub
in
loop
lret
pop
inc
js
cwtl
sti
mov
jno
xchg
cmp
inc
cmpsl
jb
popf
adc
xchg
aam
scas
adc
test
jl
push
pop
sbb
aas
les
mov
mov
fcmovnb
and
mov
jg
adc
notb
loopne
movsb
stos
popa
push
pop
mov
mov
lahf
icebp
arpl
flds
in
int
lahf
and
adc
inc
xchg
ret
enter
sar
inc
dec
xchg
dec
stos
xor
mov
add
xor
xor
dec
ficoml
mov
fmulp
ficoms
jle
cld
in
insb
cmp
sub
int
cmp
repnz
outsl
in
repz
inc
lds
in
and
pushw
mov
fidivrs
jmp
xchg
cmp
xchg
loope
insb
pushf
popf
push
jg
jecxz
sub
lds
lods
dec
arpl
fistpl
popf
add
push
int3
xchg
bound
adc
adc
mov
cli
mov
inc
add
dec
test
cwtl
test
outsl
inc
in
in
ljmp
pop
aam
iret
dec
pop
pop
or
idivl
sub
out
sub
mov
jnp
outsb
jns
mov
cld
aad
mov
stc
mov
or
cs
inc
out
jl
pop
cs
repz
pop
lret
mov
sub
int3
mov
mov
addr16
ds
sub
sub
adc
std
jmp
add
add
pop
dec
pop
push
lock
jp
cmp
orl
icebp
iret
imul
jne
cmp
mov
and
adc
shlb
or
and
push
pop
xor
jl
sahf
sti
sub
mov
cld
lcall
inc
test
pushf
or
push
outsb
enter
lods
aaa
mov
icebp
xor
jo
mov
sbb
dec
sbb
imul
xlat
out
ds
les
insb
inc
imul
cmp
push
sarb
aas
cmp
inc
sahf
dec
inc
add
fistpll
icebp
adc
sar
mov
push
jle
add
in
insb
into
fimuls
sub
xchg
roll
in
repnz
dec
dec
sbb
das
pop
mov
rcr
repz
lcall
sbb
sbb
xor
mov
and
xor
notb
leave
in
pop
ja
rorb
ja
decb
aam
sbb
mov
pop
fadds
stos
dec
pop
das
xor
sarl
movsl
pop
pop
push
dec
cmc
sub
scas
cld
fistpl
pushf
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
xor
or
mov
mov
mov
shll
xorl
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
jmp
iret
xchg
ret
or
cmp
jo
fistps
jle
rcrl
and
sbb
and
inc
jbe
lret
jnp
xor
push
js
cltd
push
cld
cmovbe
repz
jl
mov
sbb
xlat
clc
fadds
inc
mov
lds
pusha
call
jno
insl
orl
test
mov
fsts
xor
mov
cli
loop
push
cli
add
movsl
xor
call
jb
pop
mov
dec
pcmpeqw
jns
xor
pop
or
xchg
clc
sub
lods
xor
sbb
sub
aaa
add
loope
dec
push
inc
cmp
mov
js
jo
pop
cmp
lods
fisubrs
dec
add
pop
sahf
jne
rcrl
adc
bound
pop
xor
mov
in
sub
jb
dec
jp
or
jl
mov
test
rcrl
cmp
fs
lcall
dec
fimuls
mov
mull
dec
nop
push
dec
aam
dec
into
loopne
test
cs
push
mov
cmp
js
outsb
lods
orb
test
outsb
addr16
dec
fbld
push
push
mov
loop
dec
mov
jg
cmp
fsqrt
push
testl
and
dec
adc
mov
or
push
push
cmp
test
lcall
sub
jno
rclb
pop
push
or
out
mov
pop
negl
outsl
in
bound
xor
and
insl
jno
loop
loop
lods
es
int
int3
add
psrld
shlb
ja
and
xor
cmp
pop
mov
mov
js
or
mov
cwtl
or
jge
out
cltd
mov
cld
scas
and
aad
inc
cmpsb
outsl
dec
xor
sub
mov
data16
loope
pop
mov
jecxz
mov
and
lea
mov
xlat
scas
loop
int
stc
dec
idivb
push
inc
sbb
pusha
jl
cld
pop
push
outsb
jl
sbb
dec
imul
pop
mov
add
or
ds
pop
jmp
add
pushf
lahf
sbb
xchg
pop
add
out
je
add
daa
test
xchg
ljmp
pop
adc
bound
rcr
mov
lods
fildll
push
jle
inc
jle
adc
ss
dec
cmp
insl
loop
mov
mov
cwtl
movsl
dec
js
xchg
cmp
mov
inc
mov
rcll
nop
mov
sbb
in
xchg
stos
call
pushf
je
int3
shlb
ss
aaa
aad
sbb
add
adc
pop
cwtl
cmp
sbb
xor
test
shlb
in
mov
inc
and
mov
jns
mov
inc
out
sbb
aaa
shl
xor
or
mov
mov
xor
jmp
fstps
cmp
and
pop
xchg
rcrb
mov
and
sbb
pusha
imulb
sub
xchg
xchg
pop
cltd
aaa
fisubrs
in
push
sbb
aam
iret
rorb
mov
add
sbb
pop
add
inc
iret
dec
jl
pop
pop
fstpt
xchg
aam
subb
outsl
rolb
std
adc
pop
dec
jmp
test
and
aad
pop
inc
jns
lahf
and
add
ret
cmp
jmp
inc
lret
xor
and
loop
cld
cld
dec
in
subb
in
adc
xchg
jne
fmull
dec
mov
dec
ljmp
jecxz
sbb
outsl
xor
cs
sbb
and
push
mov
mov
lret
add
inc
mov
xor
movsl
mov
pop
in
inc
clc
xchg
sub
push
mov
into
scas
addr16
lods
push
xor
ds
sub
dec
sbb
ret
hlt
out
das
add
push
pop
scas
pop
sbb
out
outsl
adc
shrb
test
pop
mov
lcall
imul
push
add
mov
aad
negl
or
sub
es
xorl
jmp
cmp
xlat
pop
dec
pushf
mov
test
sbb
sbb
outsl
mov
mov
cmp
mov
add
sub
dec
jmp
rcll
testb
inc
mov
stos
push
subl
xchg
std
xor
js
inc
adc
xchg
stos
cs
outsb
subb
mov
fiaddl
sbb
sahf
int
lcall
lods
sbb
in
dec
std
repz
mov
cltd
or
pop
fidivl
adc
xchg
xor
gs
jle
push
addr16
int3
mov
ljmp
sub
repz
mov
std
sti
dec
or
inc
sbb
mov
cmc
out
fcomps
or
xchg
jae
mov
or
push
mov
xchg
or
sarb
mov
outsl
pop
int3
fldt
mov
int
sub
jmp
cmp
popf
insb
ret
or
sbb
fdivl
and
push
adc
loope
lea
cmp
pushf
lcall
gs
jne
jne
dec
js
add
adc
and
dec
xor
aad
rcrl
sbb
ror
pop
add
add
push
mov
pop
dec
cltd
test
inc
lods
imul
dec
xlat
fmull
callw
enter
pop
mov
and
andl
lahf
cs
and
sub
dec
inc
jbe
outsl
stos
iret
pop
sub
in
mov
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xorl
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
jmp
daa
into
dec
cli
sbb
sub
mov
sbb
and
sbb
and
xorl
xchg
and
mov
pop
in
out
lods
mov
jle
adc
daa
stc
push
add
lock
pop
jl
or
je
movsl
adc
test
add
mov
add
sbb
adc
mov
imul
and
mov
cmp
lock
loopne
inc
jg
cs
cmp
xchg
fwait
jb
inc
ret
mov
mov
and
jns
pop
jnp
adc
leave
out
icebp
push
out
add
jno
out
pop
das
in
sub
push
into
push
mov
cmc
inc
and
cmp
out
dec
xor
xor
mov
dec
adc
jb
push
in
cmp
jl
popa
mov
inc
cli
mov
push
and
dec
push
sbb
in
sub
int3
mov
mov
outsb
push
or
and
or
adc
es
inc
jae
daa
or
jle
lret
push
cwtl
push
mov
cmp
or
je
jnp
push
sub
jb
mov
loope
fsts
imul
rcrb
cmp
lcall
fildl
jb
aad
cld
mov
jecxz
dec
imul
outsl
adc
fisubl
stc
cmpsl
lds
fildll
and
nop
push
shlb
stc
inc
js
jbe
sbb
mov
mov
fs
lods
mov
clc
xchg
in
rcrb
leave
outsb
sbb
cmc
mov
pop
fnstenv
inc
enter
xlat
idivb
dec
pop
or
loope,pn
inc
pop
in
pushf
sub
rcll
dec
dec
fwait
into
or
mov
ds
jns
in
movsl
scas
adc
mov
inc
push
inc
fwait
mov
sarb
js
mov
jbe
pushl
cli
xor
out
lods
ficompl
mov
sbb
cwtl
jmp
inc
test
scas
test
hlt
cmp
lret
aaa
pop
cmp
add
inc
into
cltd
call
hlt
dec
xchg
sub
cli
sbb
iret
sub
nop
psrlq
mov
divb
mov
xor
or
stos
adcb
inc
mov
push
push
and
xchg
psubb
fwait
std
xchg
lea
cmp
adc
pop
lds
ret
sti
mov
dec
mov
popa
dec
mov
gs
or
push
inc
inc
sbb
pop
add
fsub
push
sbb
movsl
and
xchg
aad
xchg
movsb
in
test
jmp
jnp
inc
fldl
hlt
cmpl
in
es
sub
ds
mov
push
ret
cltd
push
jo
mov
inc
mov
cmp
ljmp
inc
inc
lret
dec
lret
inc
dec
and
mov
test
sbb
and
sbb
shll
xor
mov
add
cmp
dec
inc
sbb
adc
xchg
mov
sub
cwtl
mov
xchg
aas
cmpsl
cmp
xchg
bound
inc
jbe
mov
sbb
cmp
mov
fidivl
daa
insl
pop
mov
mov
in
xchg
ret
cmp
cmpsl
and
xor
in
call
xchg
std
sbb
and
fisubs
bound
cmpsb
mov
inc
add
adc
dec
inc
add
daa
xchg
iret
outsb
std
adc
mov
pop
xor
cltd
sub
test
xor
fimuls
sub
adc
dec
dec
dec
pop
jle
mov
sti
ss
adc
jb
mov
xchg
icebp
mov
out
inc
std
mov
mov
xchg
xor
or
xchg
iret
sub
mov
mov
or
aad
inc
in
in
int3
mov
call
dec
add
in
std
sbb
stos
or
aas
jbe
pop
daa
mov
jns
pop
cmp
lods
or
bound
cltd
mov
out
sbb
pop
xchg
cli
test
xchg
mov
pop
mov
cmp
xchg
jns
popf
xchg
imul
imul
adc
popa
push
rcll
clc
rcll
fisubrl
adc
mov
andb
repnz
push
xchg
mov
xor
jmp
push
in
mov
xchg
mov
xchg
cmp
in
mov
or
push
cld
aad
mov
dec
das
pop
xchg
mov
cwtl
jge
ret
dec
xchg
mov
sub
movsb
push
loope
pop
jno
adc
out
sbb
inc
dec
jg
loopne
lret
aas
mov
int
and
lahf
cwtl
mov
dec
adc
jl
jno
imul
adc
dec
fxch
jle
dec
mov
mov
push
push
js
or
mov
sarl
inc
enter
aad
ds
lahf
xor
cli
xchg
adc
sbb
movl
or
xchg
push
cmpsl
loope
test
add
dec
jp
cltd
and
xor
push
ficompl
in
in
sbb
sbb
out
cmpsb
cmp
xor
bound
adc
adc
xchg
xor
jle
mov
pop
pop
pop
insb
pop
jbe
sbb
scas
mov
and
int3
xchg
sar
aaa
lods
mov
pop
sarl
movsb
aad
pop
push
stc
dec
int
push
sub
push
sarl
push
and
sub
mov
enter
push
fdivl
cld
and
sti
mov
nop
pushf
mov
into
les
and
inc
stos
lea
or
jbe
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
jmp
mov
int3
xchg
sbb
dec
fstpt
into
mov
sbb
adc
sbb
or
jl
pop
pusha
adc
add
or
dec
mov
pop
ret
addr16
push
fcmovnu
and
lods
clc
or
rcll
and
fnstenv
jg
adc
pop
mov
rcr
icebp
cwtl
roll
repnz
adc
mov
inc
and
imul
cld
je
push
js
mov
jmp
insb
jl
push
mov
leave
jmp
in
xlat
jbe
repz
aas
scas
jbe
jecxz
pop
stc
xchg
leave
cmp
lea
stos
enter
mov
xor
jge
xchg
jne
push
mov
enter
lds
jo
stos
pop
jno
sbb
out
icebp
inc
xchg
and
icebp
mov
scas
aam
fldenv
pop
cli
adc
fdivr
les
adc
jbe
sub
lret
pop
adc
imul
mov
gs
sub
push
xor
cli
insl
shl
jle
cmp
xor
add
int
test
cmpsb
lds
jecxz
and
test
repz
shl
scas
mov
mov
pop
shlb
pop
mov
rcrb
and
cmp
mov
out
inc
or
lret
in
xchg
mov
fwait
and
inc
ds
stos
mov
rolb
mov
enter
push
mov
mov
add
sub
pop
lea
fsts
outsl
cmpsl
rcll
sub
cmp
cmp
push
adc
movsb
mul
dec
pop
movsl
sbbb
pop
lcall
mov
add
fs
pusha
test
push
fst
pop
ss
je
in
cld
add
xchg
fwait
test
push
sbb
loop
fidivrs
inc
scas
push
out
das
sub
out
add
mov
xchg
and
inc
xor
add
and
mov
inc
add
nop
fs
push
in
jecxz
xlat
push
cmpsl
cmp
mov
ds
inc
ja
pop
xor
popa
adc
lea
decl
or
mov
pop
in
cs
add
add
jmp
aam
mov
and
rolb
outsb
xchg
repz
xchg
fadd
xor
movsb
xchg
dec
je
mov
cmp
sub
ret
push
push
push
xchg
xchg
pop
jnp
shll
push
mov
sbb
xchg
loop
cmp
push
ficoms
ljmp
repz
mov
xor
lock
fisubrs
or
and
movsb
mov
add
loop
push
mov
fwait
jle
sti
cwtl
cmp
xchg
int
cmp
daa
sbb
xor
out
lret
xchg
push
and
insb
sti
test
inc
or
test
push
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
jmp
subl
pop
rclb
pop
jle
mov
sbb
xchg
adc
dec
mov
bound
mov
sub
xor
addl
addr16
nop
punpcklbw
std
fwait
jmp
clc
aad
push
fwait
jge
push
dec
inc
std
shl
push
pushf
rorb
add
data16
inc
xchg
dec
inc
pop
aad
and
out
xchg
std
daa
sub
mov
pop
mov
movsb
xchg
cli
jl
loopne
cmc
mov
or
mov
out
js
push
mov
or
pop
outsl
pop
mov
daa
or
mov
idivl
adc
loopw
sub
xchg
cmp
jecxz
xchg
leave
loop
add
iret
cmc
popf
mov
imul
cli
lret
pop
inc
adcb
je
xor
inc
sub
jne
loopne
es
movsl
jno
mov
testb
stc
jge
cmp
insl
rclb
jecxz
shlb
jo
push
aad
adc
adc
int3
fstl
nop
in
cmp
std
xchg
jae
add
out
adc
outsl
sbb
or
push
xchg
mov
rcrb
out
jle
xor
aam
sahf
push
in
repnz
aas
push
and
mov
fildl
insl
sahf
loopne
jo
call
dec
data16
and
les
in
xor
mov
sub
shll
fbld
enter
and
div
ret
push
dec
inc
xchg
push
mov
xchg
imul
lret
ja
mov
fcomp
xlat
xor
insl
pop
inc
add
movsb
cwtl
mov
rolb
mov
rol
inc
fcomps
xchg
ds
loope
les
sbb
sahf
out
cli
add
lods
and
fisttpll
mov
xchg
add
ja
out
cmp
mov
push
int
hlt
aad
mov
push
es
or
sahf
enter
or
into
je
jmp
jne
xor
cmp
or
mov
iret
jle
cmp
pusha
pop
sbb
or
add
aad
ret
in
lock
fdivrl
cmp
sbbl
adc
out
icebp
lcall
dec
cmp
pop
push
mov
cmp
jecxz
and
outsl
push
sahf
jnp
pop
lods
jge
jmp
mov
xchg
xchg
mov
aas
xchg
or
mov
sbb
mov
popa
sbb
test
adc
insb
pop
cmp
pop
jne
pop
arpl
jmp
fwait
xchg
incl
popl
in
out
push
arpl
lret
mov
pop
push
cmc
subl
push
jae
or
inc
adc
lret
in
repnz
jnp
in
shrl
in
push
dec
ret
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jmp
lock
or
dec
loopne
pop
ret
mov
push
popf
sbb
and
sbb
insl
aam
jb
pop
out
fst
cltd
xor
repnz
mov
cmpsl
pop
mov
std
ds
mov
lods
es
test
shrl
xor
fisubs
adcb
arpl
int
sbb
scas
cld
jl
xor
push
outsl
cmpb
cltd
dec
ss
mov
push
push
stc
cli
adc
loope
pop
push
xchg
dec
cmc
cmp
popf
jg
icebp
dec
ljmp
push
mov
sti
cli
dec
movsl
pusha
outsb
or
les
pop
or
inc
mov
inc
xchg
fs
mov
je
pop
jae
sbb
jg
xchg
cmp
test
cmpl
iret
pop
mov
jle
cmp
cmp
cltd
test
xor
loope
mov
mov
xchg
fcoml
stc
pusha
inc
mov
sbb
shl
imul
pop
push
add
cmp
sub
pop
aad
ja
int
ds
jl
aaa
out
cmp
adc
enter
adc
aaa
sbb
or
sarl
outsb
bound
pop
in
cltd
pop
jl
inc
dec
cmp
xchg
inc
xor
jae
and
xchg
jne
gs
inc
cmp
xchg
test
rcrl
and
lods
add
xchg
aam
add
cmp
test
adc
jno
aad
cmp
enter
adc
lcall
pop
nop
jp
insl
and
add
sarl
adc
adc
call
xor
gs
int3
dec
push
push
xor
mov
repz
loopne
movsl
mov
in
cmpsl
or
mov
or
add
es
or
pop
sbb
fldcw
fdivl
mov
cli
and
push
loopne
jnp
sar
je
dec
sub
adc
neg
scas
popf
int3
lret
insb
mov
mov
in
repz
jmp
pop
mov
movsl
inc
cmp
push
add
jmp
rclb
aad
aaa
scas
sbb
mov
sbb
icebp
lds
enter
es
ljmp
push
xchg
inc
jecxz
jge
pop
cmp
dec
dec
mov
inc
mov
mov
outsb
xchg
test
cmp
inc
stos
adc
pop
push
ret
push
test
pop
pop
fstpl
xchg
lahf
and
lahf
movsb
dec
hlt
popl
cmp
dec
or
ret
sbb
aad
out
mov
mov
mov
xor
pushf
scas
xchg
mov
shl
cmp
into
test
js
in
aas
xor
xorl
sbb
adc
pop
mov
sbb
and
mov
cs
bound
mov
jle
fldenv
or
push
dec
push
push
xchg
in
and
out
enter
adc
push
xchg
cmpb
or
cmp
or
imul
sbb
push
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
jmp
fdivr
fists
ss
shlb
jl
xchg
sbb
and
sbb
ret
mov
popf
lret
stos
subl
push
inc
aam
sti
adc
cs
dec
into
mov
xor
inc
or
mov
add
sub
push
out
dec
ss
lds
test
scas
lret
std
mov
pop
push
fistl
stos
daa
or
addb
test
jle
pop
test
lea
and
hlt
cli
cwtl
std
movsb
cmp
int
pop
jg
adc
in
mov
adc
movsl
shlb
lock
repnz
sub
or
jp
out
xor
mov
mov
rcl
jg
shll
pop
cwtl
push
and
jbe
add
mov
mov
sub
out
adc
pushl
pop
cwtl
mull
inc
adc
js
jns
pop
inc
dec
cmpsl
sub
sub
mov
inc
inc
mov
aas
ds
arpl
das
ss
test
imul
push
std
rcl
xchg
test
push
pop
js
in
mov
arpl
jne
cmp
repz
loope
lcall
jmp
jecxz
push
cmc
sub
cmp
movsb
jb
in
or
fcoms
add
and
in
push
les
inc
fmull
out
or
bound
call
inc
adc
stos
cmp
js
push
repnz
xchg
or
xchg
dec
rcll
and
filds
arpl
sbb
dec
mov
repnz
dec
adc
adc
xor
fisttpll
int
mov
mov
and
jecxz
in
mov
das
nop
es
popa
inc
push
scas
pop
idivb
or
sub
mov
shrl
mov
notl
xchg
push
insl
mov
jl
push
pop
cmp
mov
xor
iret
fwait
hlt
les
int3
call
dec
pop
movsb
popa
nop
push
dec
cwtl
loop
push
jg
ja
xor
hlt
data16
sti
bound
or
or
push
sub
jmp
mov
aas
inc
mov
mov
out
jns
jmp
push
cmp
lods
repnz
mov
add
add
or
insb
sub
add
mov
and
mov
mov
stos
into
stos
ja
sti
out
ljmp
sbbl
testb
in
mov
out
dec
ficomps
out
jns
fisubrl
dec
cmp
movl
in
aaa
jge
adc
inc
sti
outsb
pop
sbb
int
sub
mov
mov
lock
jle
pop
out
fs
inc
insl
sub
dec
pop
xor
or
cmpb
cmp
xor
mov
xor
shl
jmp
cmp
sbb
push
push
out
push
test
sbb
and
sbb
pop
das
mov
and
dec
je
cmc
mov
int3
orb
pop
or
sahf
cmp
mov
out
out
xor
jae
mov
dec
adcl
sbb
outsb
dec
sbb
sahf
xchg
inc
inc
jl
push
mov
cwtl
inc
and
insl
nop
inc
pop
lret
test
sarl
xor
jbe
sbb
push
dec
mov
pop
push
cmp
and
leave
pop
test
cwtl
iret
xchg
std
shll
mov
and
neg
push
rorb
push
mov
test
sbb
ss
jns
lods
dec
bound
test
cmp
jmp
lret
jbe
nop
iret
repz
mov
cmp
xlat
jnp
dec
subl
ret
cld
xor
xchg
adc
lods
outsl
mov
xchg
jmp
stos
mov
inc
push
outsl
xchg
test
mov
mov
dec
es
mov
xchg
cmc
cmp
cltd
or
or
mov
and
nop
add
into
fildll
xchg
fwait
mov
mov
pop
cmp
cwtl
cmp
mov
data16
popf
dec
andl
push
mov
push
icebp
dec
sbbl
fisubl
dec
add
dec
repz
lds
jb
adcb
shll
fidivs
push
test
arpl
and
add
push
push
jne
lods
scas
fs
mov
jnp
dec
pushf
scas
pop
andb
fcom
lock
push
je
fsubp
jecxz
xor
aam
cmp
lock
inc
ret
repnz
jns
aaa
lock
xchg
push
cmp
les
sbb
cli
jno
cli
les
and
mov
data16
outsb
inc
loopne
jnp
adc
jmp
xchg
jmp
ds
aaa
call
call
pop
push
add
xor
jle
icebp
shrb
fldl
lret
mov
notb
mov
cltd
aas
mov
mov
sahf
bound
xchg
dec
jne
jecxz
jnp
pop
das
rorb
xor
cmp
push
mov
add
xchg
lea
adc
jne
shlb
or
or
ret
cmp
inc
mov
adcl
jmp
adc
jo
sarb
xor
pushf
pop
or
or
mov
mov
inc
and
in
add
mov
rorb
cltd
dec
inc
dec
loop
iret
xchg
out
sub
fdivr
inc
sbb
movsl
and
inc
outsb
mov
cs
adc
xor
ret
add
inc
add
or
enter
add
or
mov
or
mov
mov
xor
mov
jmp
push
sub
fldt
mov
mov
fmuls
sbb
inc
lds
lds
and
fs
dec
cmc
cmc
in
shlb
sub
cmp
and
add
aas
mov
push
dec
mov
add
add
int
jecxz
imul
lods
loopne
xchg
inc
daa
sub
insl
cmp
push
mov
aaa
std
movsl
mov
inc
push
and
das
and
inc
push
xor
movsl
push
fisubs
lret
enter
rcrb
je
dec
xor
adc
out
and
adc
nop
call
test
xchg
cmpsl
xor
stos
bound
rcrl
sub
add
and
cmp
push
loope
mov
sbb
dec
push
jnp
mov
xchg
push
outsb
aas
outsb
cmp
sbb
rcl
adc
fsubs
mov
push
dec
or
push
mov
incb
jmp
mov
mov
add
inc
add
jo
in
xchg
pop
pop
int
inc
mov
int
popa
movl
int3
sbb
fimuls
insl
pop
adc
jle
cmp
outsb
ss
pusha
mov
xor
test
push
cmpsb
lahf
pushl
sbb
lods
insb
xchg
pop
push
inc
dec
or
push
xchg
push
aam
int3
or
xor
xchg
in
mov
test
adc
inc
cmpb
repz
sub
notl
stos
push
imul
inc
xchg
cmpb
push
mov
loopne
scas
pop
icebp
dec
daa
lods
lock
and
adc
hlt
dec
ds
sub
aas
pop
inc
mov
xchg
in
fldenv
cmpsl
gs
cmpsl
dec
mov
and
aad
cs
jmp
or
mov
xor
adc
loop
insb
scas
jb
ss
negb
bound
dec
cmp
lea
fidivrs
add
dec
in
jmp
mov
sub
pusha
in
jbe
or
in
scas
jl
mov
sub
mov
pusha
cwtl
xchg
adc
leave
std
mov
add
push
jbe
and
dec
andl
sahf
mov
and
sub
nop
testb
xor
cmc
js
mov
or
imul
notb
mov
stos
jle
sbb
dec
ret
pop
repnz
scas
test
jmp
dec
sbb
jbe
popf
jg
dec
fdivrs
mov
test
cs
movsl
pop
xor
adc
inc
push
jl
mov
xchg
sahf
loop
mov
cmp
mov
push
aam
cmpsb
lcall
repnz
roll
dec
or
scas
cmp
test
mov
dec
movsb
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
imul
fs
leave
leave
jl
adc
sbb
adc
sbb
clc
cs
xchg
and
pop
push
outsb
hlt
add
jb
dec
fcmovu
outsb
sbb
cmpl
lea
jo
cmp
jno
bound
sbb
shrl
lcall
mov
jns
les
adc
mov
xchg
icebp
stc
fldl
ret
inc
cwtl
sti
xchg
ja
outsb
dec
xchg
mov
pop
outsl
dec
inc
cmpsb
pop
mov
or
es
test
xchg
sub
cmp
js
pusha
lcall
adc
xchg
dec
dec
sub
out
sar
adc
xchg
iret
sbb
xchg
add
aam
cld
cld
push
scas
xor
js
and
aaa
add
or
jns
hlt
inc
push
jg
test
insb
insl
ret
mov
adc
add
jo
hlt
insl
addr16
cmpsb
sbb
inc
stc
aas
xchg
inc
dec
lock
fisttpll
xchg
test
push
pop
jp
int3
andb
sbb
hlt
pop
into
sbb
adc
mov
inc
and
cmp
ds
push
mov
mov
dec
pop
orb
jns
and
dec
lock
or
push
xchg
mov
jmp
pop
pop
push
movsb
cltd
lahf
test
pop
out
cmpsb
enter
push
cmp
jmp
arpl
icebp
test
push
xlat
inc
and
das
mov
icebp
pop
pop
jae
int3
pop
sahf
int
xor
int
mov
mov
std
adcb
push
test
out
cmpsl
imul
add
lcall
lret
sbb
insb
and
scas
push
push
pop
jbe
mov
mul
jo
cld
inc
lods
imul
repnz
scas
jns
cli
cs
nop
iret
in
icebp
lret
stos
add
mov
or
push
aaa
push
sub
mov
jns
cmp
lds
mov
jb
xchg
jmp
dec
pop
jns
lods
xchg
sbb
add
xor
inc
sub
or
iret
imul
adc
xlat
and
daa
push
xchg
jne
xchg
and
imul
inc
mov
pusha
sbb
xchg
pusha
xchg
nop
sbb
xor
or
xchg
addr16
aaa
inc
jbe
xor
and
ss
pop
arpl
pop
sahf
dec
mull
push
xor
dec
inc
js
and
cwtl
push
ficoml
andb
loopne
inc
rcrb
subl
insl
daa
leave
nop
xor
fcompl
cld
sub
mov
pop
xlat
push
das
dec
push
push
arpl
push
sahf
int
push
xchg
test
xchg
mov
pop
push
enter
pop
fldenv
mov
sti
and
leave
inc
mov
cltd
pop
imul
mov
fscale
int3
pop
sub
rcrb
scas
aam
or
mov
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
jmp
dec
sbb
jmp
dec
mov
mov
jg
sbb
adc
sbb
and
cmp
jge
mov
jno
pop
movsb
or
jbe
scas
daa
mov
inc
pushf
mov
pushf
xlat
xor
sbb
addl
jno
insl
or
dec
aam
and
cmp
jge
cmp
dec
cmp
sti
stos
xlat
and
mulb
cli
ds
push
sub
or
fwait
inc
loopne
add
xchg
mov
mov
and
in
lea
gs
xorb
inc
out
pop
or
sub
pop
mov
sahf
jnp
int3
ss
adc
add
imul
xchg
push
js
xlat
push
push
and
clc
movsl
lds
mov
xor
add
inc
call
pop
ror
movsb
insb
call
fs
jmp
pop
arpl
push
or
mov
push
xchg
movsb
in
cmp
dec
mov
inc
clc
test
push
xchg
sbb
stc
mov
out
mov
imul
fiadds
dec
repnz
lock
xchg
das
idivl
arpl
rclb
adc
mov
xchg
gs
dec
push
sub
dec
cmpl
and
rol
mov
and
and
push
fwait
mov
scas
sub
jle
mov
push
inc
push
inc
pop
add
cmp
aam
mov
loop
cmp
cld
subb
sarb
push
pop
loopne
xchg
dec
adc
lds
mov
cltd
and
push
jl
imul
mov
mov
cmpl
inc
fcomps
add
adc
fists
fadds
pop
push
cld
loope
push
jbe
loope
dec
jo
push
and
jo
bound
pop
sbb
jg
cli
cmp
or
add
pop
mov
lret
adc
mov
loop
mov
adc
pushf
lods
daa
fisttpl
pushf
adc
mov
push
sbb
in
push
mov
cli
sbb
je
add
xor
cmpsb
inc
iret
or
movsb
cld
hlt
test
mov
push
or
mov
mov
xor
xor
pop
pop
cmp
push
pop
cmp
in
je
pop
lods
je
xchg
scas
lret
inc
or
mov
xor
mov
pop
inc
aas
shrl
xlat
and
aaa
jo
and
scas
inc
inc
add
fxtract
push
out
pop
push
movsb
sbb
pop
inc
or
inc
jge
sti
ficoml
dec
in
mov
fs
push
orb
sub
call
jl
or
dec
mov
movsl
ds
pop
test
adc
scas
ss
adc
scas
xchg
imul
shlb
adc
add
cmp
ja
jns
xor
shrd
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shr
shl
jmp
mov
mov
sub
jle
jae
jle
jns
sbb
adc
sbb
repz
inc
pop
or
fimuls
mov
pop
cmp
cs
xor
inc
xchg
mov
jecxz
movsl
andb
negb
in
push
pop
inc
sbb
shl
aaa
and
cmp
inc
xchg
jle
jb
cmp
push
inc
pop
pop
jecxz
mov
mov
xor
out
sbb
lods
cmp
lock
xchg
dec
leave
inc
cli
push
aad
lcall
dec
repz
mov
adc
mov
push
push
adcl
test
lock
push
pop
aad
pop
push
push
and
jg
xor
dec
mov
pop
sbb
shrb
pop
cmp
or
dec
ds
xchg
imul
jno
into
and
dec
in
movsl
pop
sub
sahf
mov
sbb
xchg
addl
inc
inc
dec
push
inc
pop
shlb
mov
icebp
push
mov
rorb
je
or
iret
or
or
sbb
test
clc
and
test
mov
in
cmp
inc
jb
lds
test
inc
js
or
push
jns
cmp
sbb
jbe
xor
dec
mov
mov
sbb
mov
jbe
sbb
mov
xchg
into
subb
push
and
loope
pop
sbb
lahf
sub
push
push
cmp
std
mov
jbe
faddl
scas
mov
aaa
jp
cwtl
sbbb
xor
add
xlat
mov
jge
js
sahf
inc
xlat
mov
push
xchg
pop
sbb
pop
jb
loopne
shr
in
dec
sbbl
add
test
aam
leave
out
imul
pop
pusha
pop
mov
andb
loop
cmp
fnsave
jbe
mov
pop
pop
outsl
loope
pop
rcrl
test
jle
xor
je
in
inc
add
mov
pop
scas
xor
popf
into
movsl
popa
insl
jmp
loop
dec
icebp
cli
mov
push
mov
xor
sub
pop
ret
inc
cmpsl
gs
push
sbb
shrl
sub
dec
xlat
aam
cwtl
popa
xchg
and
sahf
mov
mov
xor
dec
ffreep
inc
cmp
cld
or
mov
add
xor
loope
jo
inc
mov
push
push
jnp
xchg
movsb
jl
aam
dec
sub
cwtl
scas
mov
in
push
inc
rclb
lock
jmp
loope
jns
push
lods
test
cmpl
in
out
or
pop
pusha
int3
xchg
std
or
and
lods
mov
adc
mov
mov
mov
xor
or
mov
shll
xor
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
jmp
loope
fidivs
insb
pop
pop
dec
xlat
mov
stc
jae
sbb
adc
sbb
sbb
add
pop
cld
xchg
dec
js
lea
jae
and
xor
jg
or
mov
lods
mov
sbb
dec
mov
popf
pop
jecxz
stc
push
xchg
icebp
clc
push
mov
jmp
lret
or
test
movsl
dec
les
push
and
ret
dec
push
nop
ret
mov
xchg
mov
mov
aaa
popf
mov
adc
and
lcall
stos
jae
add
inc
gs
mov
or
sub
stos
mov
dec
mov
daa
sub
roll
fldenv
loopne
cli
mov
inc
push
pop
add
lds
es
jmp
xchg
mov
pop
cmp
mov
jle
push
jae
mov
push
push
mov
add
pop
ret
pusha
subb
insl
xor
jl
mov
rolb
mov
inc
mov
jnp
out
jg
loope
or
std
cltd
das
inc
roll
addl
scas
cmp
or
cltd
scas
insl
dec
mov
repz
pop
xor
fstpl
add
jl
pop
in
mov
or
loopne
and
arpl
inc
pusha
mov
dec
ror
mov
mov
fwait
out
adc
push
inc
in
clc
daa
out
sbb
mov
inc
sbb
scas
cmpsb
test
roll
cmp
push
and
or
mov
xchg
pop
stc
imul
pop
mov
cmp
mov
lret
outsb
pop
out
mov
test
sub
mov
and
test
pop
mov
pushf
adc
mov
aam
adc
cmpsl
pop
xchg
ds
js
popa
adc
out
icebp
fists
iret
lock
scas
dec
sub
iret
imul
push
cmp
push
icebp
out
std
mov
cmpsb
sbb
pop
out
stc
sub
lds
outsl
jl
ljmp
xchg
xlat
pop
lods
mov
jp
clc
test
lds
aaa
mov
bound
mov
andb
fstpl
hlt
mov
adc
inc
dec
cmpsb
enter
jne
test
or
rorb
jbe
jns
lods
push
push
sub
test
or
ret
lock
ljmp
dec
stc
jg
pop
add
popf
nop
pop
push
jl
pop
les
sub
dec
push
test
push
xchg
cmp
aas
xchg
rcll
xchg
pop
xor
js
test
adc
notl
rcr
cld
inc
lret
sbb
sub
sbb
adc
daa
icebp
lret
sbb
add
push
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
jmp
mov
pop
lcall
daa
pop
stos
add
sbb
adc
sbb
sub
daa
cmp
jp
loope
adc
fs
push
dec
xchg
outsb
jmp
fdiv
dec
xchg
scas
std
ja
jne
mov
fcompl
aad
mov
jg
ss
mov
stc
jnp
fiaddl
mov
adc
push
add
and
mov
sub
push
cmpsl
lods
mov
daa
sti
mov
gs
jl
sbb
shl
pushf
jp
xchg
sbb
adc
xchg
or
xchg
inc
clc
sub
sub
push
cmp
lock
mov
cmpsl
cmp
pusha
fadd
sub
das
scas
ja
test
cwtl
call
mov
sub
and
cmp
fdivrs
dec
hlt
aas
notb
sub
pop
xchg
inc
mov
testl
mov
pop
lahf
add
in
jle
inc
mov
mov
js
iret
mov
push
outsl
cmc
mov
sbb
test
pop
psubw
pushf
push
shr
xchg
mov
or
arpl
push
out
cmp
and
leave
clc
push
lods
jns
lahf
idivb
dec
add
fnsetpm(287
es
xchg
push
sahf
sbb
jne
jne
aas
add
adc
ret
dec
ss
into
pop
lea
jle
inc
mov
bound
mov
and
or
mov
pop
push
pop
cmpsl
decb
mov
xor
or
mov
aaa
fistl
mov
movsl
dec
pop
dec
in
jb
stos
jbe
push
mov
xchg
loope
outsb
cmc
sub
inc
call
cmp
call
mov
outsl
jecxz
les
adc
mov
cltd
ret
in
fs
xchg
jl
jg
popf
pop
repnz
and
xchg
sbb
xchg
push
sti
lcall
xchg
lahf
cwtl
gs
mov
enter
add
xor
scas
mov
into
lea
jbe
daa
sbb
push
jns
inc
xlat
out
lock
add
sbb
sub
mov
ret
adc
adc
lods
mov
dec
cwtl
fs
sbb
cmp
inc
mov
es
mov
cmpsb
in
mov
xchg
test
xchg
jne
mov
inc
outsb
imull
in
cmp
mov
int3
repz
rol
insl
bound
nop
arpl
frstor
shl
stos
push
mov
fisubs
loopne
out
ljmp
scas
pop
or
movsl
xchg
cmp
cmp
sti
inc
mov
cmp
pop
test
jl
dec
mov
das
sahf
hlt
mov
aad
shll
lcall
call
mov
out
sbb
cwtl
adcl
mov
aas
adc
lods
mov
inc
fucomi
jecxz
shrd
shr
shr
jmp
and
push
sbb
push
pusha
popf
jo
sbb
and
sbb
inc
push
xor
popa
push
addr16
mov
push
xchg
notl
hlt
mov
jne
divb
in
or
or
pusha
xchg
ja
lods
shrl
sbb
adc
push
lea
fwait
and
push
inc
push
bound
aas
iret
or
mov
leave
push
sbb
adc
and
ret
data16
jecxz
and
fsts
mov
cmp
and
sbb
arpl
add
insl
xchg
pop
push
add
inc
sbbb
loope
pop
paddb
xchg
fidivrs
cmc
jge
in
pop
push
cmp
jp
lret
sarl
or
dec
mov
mov
mov
or
and
sti
int
sbb
mov
rcrb
fadds
int3
insb
push
insl
in
outsl
stc
out
adc
imul
pop
inc
test
std
sbb
push
push
in
shrl
int
xor
fcompl
scas
push
mov
insb
call
hlt
fsub
or
sahf
adc
adc
jo
jg
roll
xchg
xchg
pop
rorb
fdivl
into
xchg
or
pop
dec
lock
xchg
ret
setne
mov
ds
xchg
jecxz
fstps
ljmp
push
xchg
in
fadd
cmp
lods
pop
call
pop
fcomps
fistps
mov
dec
popa
movsb
popf
fsubrs
shll
inc
add
add
mov
cmpb
filds
inc
fwait
popf
clc
fdivrl
dec
sbb
test
mov
mov
push
or
int3
notl
xor
filds
sub
and
je
out
sub
sub
and
scas
add
push
aad
nopl
push
jle
shrb
or
enter
mov
lahf
add
adc
or
sub
mov
cmpb
arpl
movsl
push
sub
daa
test
mov
shll
dec
pop
jns
cwtl
ret
xchg
cwtl
lret
sub
xor
mov
jnp
aam
aam
int
ret
test
pushf
repnz
lcall
mulb
repz
les
pop
add
sub
add
mov
and
jnp
dec
loope
push
popa
push
sub
mov
das
cld
xlat
aas
jb
inc
inc
pop
and
cmp
rorb
ss
pop
sbb
rclb
sarb
hlt
jg
cmpsl
ja
push
enter
loop
out
xor
mov
mov
mov
push
push
push
call
shld
shl
jmp
popf
xchg
dec
mulb
sbb
fdivs
loope
adc
sbb
adc
sbb
sbb
dec
xchg
sub
daa
pop
lea
adc
out
inc
pusha
push
mov
push
clc
das
xchg
ds
cmpsb
jb
add
repz
out
mov
push
pop
pusha
pop
in
shr
push
xchg
mov
dec
ret
std
cwtl
and
mov
inc
das
inc
insb
sub
mov
adc
dec
scas
mov
test
addr16
test
adc
dec
test
mov
loopne
repz
adc
outsl
inc
lret
sti
jo
dec
data16
call
inc
nop
cwtl
jl
repnz
sarl
mov
cmp
mov
pop
imul
or
mov
movsl
push
dec
mov
lods
dec
adc
je
mov
adcl
add
mov
inc
cmpsb
je
mov
ljmp
or
push
lret
ret
int3
dec
mov
cmp
and
outsb
inc
in
gs
mov
repz
inc
xchg
mov
std
xchg
pushf
insl
xor
sti
scas
mov
jnp
das
fwait
notb
xchg
cmp
push
shrl
fsubp
or
sbbl
mov
xlat
mov
or
imulb
mov
jne
xchg
dec
cmp
mov
fwait
add
and
stos
xorb
cmpsl
cmp
shlb
xor
pop
xchg
sbb
int
je
fs
pop
ljmp
jns
roll
mov
test
jnp
cmpsb
fadds
pop
pop
aaa
pop
and
mov
in
and
in
fnstenv
mov
pop
out
insl
sbb
xlat
dec
or
jp
rol
pop
add
aad
dec
mov
fstpt
mov
shrl
adc
shll
scas
fs
insb
or
std
cwtl
push
arpl
jecxz
mov
cwtl
out
xor
dec
fnstsw
add
lcall
sbb
adc
inc
sub
insl
into
cmp
adcl
in
jmp
xchg
stc
mov
push
push
jnp
rcrb
in
push
adc
pop
pop
repz
in
jl
lahf
stos
jl
into
sti
out
sar
ret
aaa
xchg
mov
scas
sbb
push
ja
cld
arpl
cwtl
loope
sbb
pop
jmp
cmc
popa
inc
xor
and
lods
mov
prefetch
or
add
pop
inc
ja
jp
mov
loopne
mov
shrl
inc
fwait
repz
xorb
in
jg
mov
push
cld
cmpsl
stos
pop
jnp
cmp
popa
test
movsl
lock
pushf
mulb
or
mov
jge
mov
mov
cld
add
int3
xchg
mov
sbb
dec
mov
dec
add
lcall
or
enter
xor
or
xor
xor
mov
mov
jmp
xlat
cmp
jge
jle
mov
sbb
and
sbb
xchg
es
imul
inc
add
insb
xlat
in
scas
cmpsb
add
adc
fwait
mov
insl
aad
movsl
les
loope
sbb
mov
cltd
imul
bound
push
stos
sub
sub
sub
icebp
and
ja
ret
repnz
fldt
into
lahf
test
jg
and
xchg
cmpsl
cmp
add
insl
aaa
mov
sbb
sbb
add
adc
xchg
xchg
jl
push
lahf
add
rcll
outsl
popf
popa
in
jg
push
xor
mov
push
adcl
dec
and
flds
loop
iret
pop
movsl
inc
lret
mov
cmp
test
daa
test
ljmp
lret
mov
dec
into
mov
and
jp
ja
add
repz
jae
cmp
pop
cwtl
mov
jmp
stos
cmp
subl
mov
cmp
xor
popf
rorb
nop
xor
jp
int
sub
inc
dec
mov
icebp
repnz
lea
add
mov
xor
add
loop
or
in
cmp
mov
push
sbb
neg
cld
stc
jne
insl
mov
and
addr16
xchg
and
mov
ret
lock
sbb
cmpsb
sub
push
mov
add
sbb
mov
push
pop
loop
movsb
push
mov
aam
int
jp
inc
jg
or
mov
xor
dec
jg
mov
ja
mov
lea
sub
pusha
ret
sbb
insb
enter
test
loope
mov
add
arpl
adc
rclb
xlat
sahf
loop
gs
pop
int
inc
scas
dec
imul
and
jbe
sbb
out
mulb
test
shll
paddd
cli
inc
outsl
pop
dec
lret
movsl
sub
stc
arpl
fs
sbb
aam
cli
popf
mov
arpl
sub
add
aam
sub
mov
repz
fchs
addr16
dec
aas
testl
ret
adc
lcall
adc
fnstcw
mov
addr16
repz
ret
inc
rol
clc
stos
aaa
lock
punpckhdq
push
mov
test
jp
xchg
negb
sub
pop
popf
out
fwait
lock
scas
test
test
adc
rdtsc
idivb
movsb
les
pusha
inc
or
jl
shr
lcall
push
or
mov
push
push
xchg
jno
fisttpll
call
js
dec
fs
push
xchg
scas
lods
mov
test
push
stos
sbb
and
jecxz
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
shl
mov
mov
mov
shrd
xor
or
mov
mov
mov
mov
shl
xor
or
shr
xor
or
cmp
jne
cmp
je
pushl
pushl
jmp
fwait
ror
dec
mov
scas
in
mov
and
sbb
adc
sbb
orl
sti
pop
das
mov
cmp
es
push
stos
dec
lcall
adc
addr16
lcall
jbe
sti
insl
sub
loop
xor
mov
lret
mov
xchg
lods
loopne
xor
sbb
xorl
cwtl
fistps
xor
aas
js
cmp
mov
test
xlat
push
pop
inc
lret
jp
outsl
dec
mov
inc
fdivs
jmp
pop
mov
push
movsb
into
cmp
dec
insb
jmp
pop
rcrb
pop
repz
insl
xchg
sbb
push
inc
jae
inc
lcall
cmp
repz
fwait
clc
cmp
mov
jl
cmpsb
inc
mov
mov
pminub
sub
nop
sahf
jo
pusha
out
xchg
cmpsb
fiaddl
ljmp
xchg
inc
leave
loope
in
shr
or
or
and
std
out
mov
pusha
sbb
insb
clc
push
add
xor
push
stos
aas
fistpll
mov
ljmp
scas
xor
xor
pop
jecxz
test
popa
mov
daa
fiadds
scas
add
jmp
xor
iret
loopne
jnp
loopne
xchg
cltd
jmp
mov
inc
pop
xor
inc
or
xchg
in
lods
mov
push
insb
lock
fisttps
leave
mov
fimuls
les
movsb
xchg
mov
inc
mov
daa
scas
sahf
and
inc
mov
cmpsb
mov
jns
lods
sbb
mov
das
ret
scas
lret
xorb
cmc
xlat
push
jmp
repz
dec
lods
jle
das
and
cmovno
setl
or
clc
out
je
xchg
inc
imul
dec
scas
lock
mov
les
jns
movsb
pop
test
push
mov
js
inc
sub
hlt
movl
idivl
lret
xchg
stc
or
add
outsl
cmp
in
aam
or
andl
mov
adcb
mov
pop
mov
xchg
add
mov
push
inc
mov
mov
adc
call
xchg
mov
das
imul
inc
xor
mov
into
and
loope
add
mov
incl
xchg
lock
int3
inc
jg
xor
xchg
jmp
stos
inc
inc
fiaddl
dec
xchg
ficoms
sahf
add
mov
xor
inc
insb
arpl
jne
and
sub
jp
mov
pushf
mov
mov
sub
js
roll
loope
scas
and
jne
push
push
call
jmp
mov
dec
jb
insl
fnstcw
dec
sbb
and
sbb
dec
mov
sub
xor
and
outsl
movsb
push
in
dec
xlat
jo
or
or
inc
ror
xchg
jne
test
lds
or
push
in
inc
add
shrb
xchg
add
in
data16
std
test
mov
test
adc
loop
bound
and
jge
jo
scas
lret
fists
fs
adc
inc
mov
repz
imul
fwait
mov
je
test
xchg
lods
mov
sarb
clc
in
mov
negl
test
inc
mov
outsl
cmp
jae
jbe
cmc
mov
fbstp
inc
xor
sub
xchg
xor
push
xchg
stos
sbb
and
cmp
pusha
out
cld
mov
inc
jno
pusha
push
jl
loope
mov
lock
lret
imul
cmp
xlat
outsl
jae
mov
movsl
mov
mov
in
fwait
and
push
jns
xor
aad
fwait
mov
mov
fdivrl
pusha
rcrl
fcomip
jp
rcll
call
in
shlb
scas
dec
pop
jbe
and
inc
jp
fsubrs
inc
cmp
add
push
sub
popf
aas
in
jae
xchg
mov
jecxz
stos
cmpsb
adc
jnp
xor
or
cmc
xchg
jns
pop
adc
mov
mov
fistl
loope
cmp
sarl
cmp
andl
andb
or
and
ficoms
sbb
cmp
mov
lock
mov
fldcw
sub
or
lock
dec
jmp
pusha
iret
aad
fwait
adc
xchg
mov
push
pop
cmc
xchg
xor
mov
lods
pusha
push
sti
in
pop
sbbb
loope
jl
jle
stc
jmp
add
hlt
xchg
lods
cmp
dec
shrl
dec
xor
jno
mov
jge
ljmp
push
xor
jne
sbb
les
daa
test
and
lret
mov
out
adc
push
scas
cwtl
jmp
bound
dec
in
test
out
inc
sbb
arpl
jp
js
add
cmpsl
mov
std
popa
pushw
or
sbbb
fldenv
xchg
test
sti
adc
mov
outsb
rcrl
pop
push
out
lock
stc
sbb
cmp
nop
pushf
xor
mov
adc
pushf
mov
mov
nop
idivl
insb
cmp
mov
push
mov
shlb
mov
xchg
pusha
jae
rcrb
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
sbbl
shrd
movl
shr
ret
mov
xorl
xor
and
shr
ret
xor
xor
ret
push
mov
sub
sub
movl
mov
cmpl
movzbl
mov
movzbl
mov
jmp
mov
mov
jne
pushl
pushl
pushl
push
call
mov
and
xorl
add
not
sbb
adc
mov
movl
mov
movl
cmpl
mov
notl
mov
jmp
mov
mov
jbe
pushl
pushl
push
push
push
pushl
push
call
and
movzwl
add
not
mov
adc
andl
add
mov
sbb
movl
movl
push
movzwl
and
movl
cmpl
movl
mov
movzbl
jmp
movl
movl
jge
push
push
pushl
push
push
call
sbb
incl
xorl
add
movzwl
add
add
movl
xor
add
and
push
or
movl
cmpl
not
mov
jmp
movl
mov
jle
pushl
call
mov
mov
adc
not
sub
sbb
or
incl
mov
cmpl
not
mov
mov
not
jmp
movl
movl
jae
push
push
push
call
add
sub
mov
xor
sbb
neg
mov
push
push
sbbl
push
orl
call
jmp
inc
dec
cmpsb
movsb
lcall
mov
inc
shll
dec
sbb
add
sbb
idivb
fstl
ret
dec
adc
mov
fstps
adc
add
mov
add
out
stc
verw
sub
push
mov
or
push
adc
adc
mov
pusha
stos
cltd
cmp
in
mov
xor
in
dec
push
mov
mov
xor
cmpsb
inc
popa
cmc
in
dec
mov
lock
shll
inc
test
enter
adc
dec
clc
mov
xor
imul
fmull
mov
xchg
enter
cmp
add
xrelease
and
pop
push
inc
and
pslld
cmc
adc
out
and
ljmp
test
xchg
outsl
push
mov
mov
cmc
in
pop
or
int3
sbb
dec
mov
test
xor
mov
jae
testl
test
mov
fnsave
call
lds
ret
xlat
dec
mov
mov
inc
ss
scas
sbb
scas
dec
push
repz
subb
sbb
or
sbb
xor
inc
mov
iret
sub
into
pop
pushf
jns
add
mov
aam
push
loope
and
mov
or
pop
sbb
push
imul
jb
push
mov
add
pop
addl
jg
and
sub
enter
push
mov
lcall
push
pop
push
pop
jecxz
pop
cltd
dec
ret
lods
fidivs
ljmp
out
xor
imul
in
push
cmp
mov
xor
sub
xor
mov
pop
and
push
push
leave
xor
push
inc
dec
pop
jae
push
test
push
in
rolb
paddusb
popa
sbb
roll
lcall
jle
or
stc
sbbl
nop
repz
fmull
mov
gs
push
cmp
sbb
push
pop
lcall
lea
push
mov
mov
in
rcrb
push
sbb
dec
or
popa
shll
and
sbb
fnsave
cmpsl
bound
fildl
sbb
adc
test
testl
push
pop
mov
inc
xor
push
cmp
cmpsl
jb
clc
je
je
shll
repnz
clc
int
lret
sub
imul
xor
inc
push
mov
push
adc
cmp
rol
jge
lods
mov
xchg
cld
xchg
shr
jecxz
fcom
jnp
dec
std
adc
int3
pop
fists
xchg
orl
add
orl
or
push
addl
or
sbbl
xor
xor
push
push
negl
call
mov
cmpl
not
movzwl
notl
jmp
movl
jb
push
pushl
pushl
call
adc
movzwl
or
xor
add
sbb
xor
mov
or
xor
neg
sbbl
mov
adcl
push
adcl
push
movl
push
push
decl
call
cmpl
mov
mov
jmp
movl
jae
pushl
call
sub
subl
xor
sbbl
sub
or
xorl
jmp
mov
sbb
sbb
sub
aad
xchg
mov
add
sbb
shll
repz
insb
add
lahf
fs
mov
repnz
lahf
xor
mov
xor
jle
test
mov
push
lcall
rolb
sahf
or
pop
push
addb
jmp
cli
mov
dec
add
inc
xchg
add
push
das
xchg
jnp
xchg
adc
xor
sar
dec
jno
ss
or
lods
out
pusha
mov
mov
add
imul
xchg
inc
scas
add
pop
adc
fcomps
loopne
sbb
fcomip
in
in
cld
xorl
jge
iret
xor
aad
shr
dec
aaa
dec
pop
cmp
scas
rclb
test
mov
push
repnz
push
or
add
pop
jae
xor
js
int
popa
int
xor
push
test
cmp
mov
in
outsb
pop
jg
sbb
stc
add
mov
movsl
adc
push
adc
fs
xchg
sbb
pusha
pop
and
lret
mov
in
adc
movsb
push
sahf
movsl
dec
stos
dec
mov
xor
lret
lods
adc
fcomi
int3
mov
mov
xor
push
inc
inc
mov
movl
jecxz
lds
sub
lods
mov
inc
out
pushf
cmp
jne
fdivs
lcall
out
cld
std
ret
jnp
pop
outsl
and
push
lds
jbe
xor
std
and
jns
push
aam
or
mov
mov
push
popf
ret
jb
mov
sbb
push
sbb
dec
jg
clc
insl
test
fwait
mov
mov
ljmp
fisubrl
xchg
shll
int
int
cli
jle
dec
icebp
inc
dec
or
mov
mov
pop
mulb
jmp
getsec
sahf
jmp
pop
fldl
xor
loope,pn
pop
ljmp
pop
data16
pop
nop
aam
fwait
pop
xchg
add
repz
xchg
or
pop
sbb
mov
cli
lret
mov
test
in
push
mov
mov
cmp
in
lcall
ja
out
hlt
jge
adc
and
jno
mov
sbb
ret
cs
inc
in
scas
mov
mov
movsl
int3
xchg
mov
ud0
sub
into
sub
xchg
mov
jmp
xchg
add
sub
jmp
add
cmc
ljmp
shll
xor
shl
bnd
mov
std
mov
sbb
mov
rcr
cmp
sbb
mov
xor
dec
fnstsw
cmp
add
int
testl
repnz
add
nop
test
std
adc
add
inc
push
add
pop
sbb
movsl
mov
mov
dec
mov
sub
dec
dec
sub
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
jmp
add
pop
mov
sub
fnstsw
cmp
sbb
jg
and
dec
sub
out
dec
dec
lods
cmp
fwait
cs
mov
jns
sbb
sub
loope
sub
fdivrs
stos
lea
imul
jns
fiaddl
inc
ds
sbb
sar
sub
jg
or
imul
idivb
push
adc
xor
fsubr
mov
lods
adcb
push
insb
push
mov
lock
dec
xor
xor
lock
sbb
arpl
pusha
push
out
jno
push
and
jp
sub
out
mov
sub
xor
pop
xchg
and
in
xchg
repnz
es
dec
pop
pop
lret
jo
xchg
or
addr16
xor
push
mov
jg
jg
and
push
and
pop
movsl
int3
push
cmp
dec
xchg
ja
aam
inc
mov
dec
cmp
add
dec
cld
aad
or
lea
insl
pop
inc
or
rcll
cltd
jnp
fwait
pop
xlat
cmpb
push
xrelease
test
in
jmp
push
cmpsb
orl
jns
cmp
mov
sbb
out
jl
and
xlat
popa
sbb
fwait
cmp
and
dec
mov
lcall
lock
mov
mov
mov
dec
and
push
xlat
adc
sbb
out
enter
sub
mull
and
pop
push
xchg
jb
pop
jmp
in
iret
stc
aam
fidivrl
push
imul
xlat
in
adcb
pop
ret
adc
imul
aaa
jmp
lret
xchg
pop
jae
pop
lock
mov
jo
sub
push
xor
add
xlat
xor
jg
xchg
decl
and
les
test
sahf
push
lods
adc
in
jne
push
push
outsl
mov
and
test
xchg
inc
mov
xor
xor
idiv
mov
jecxz
push
leave
nop
sub
sar
subl
add
jg,pt
lock
repnz
mov
mov
xor
dec
dec
xchg
mov
adc
mov
mov
push
add
bound
andb
inc
sbb
mov
icebp
or
addl
movsl
out
test
ds
addr16
mov
push
shlb
nop
pop
jb
fidivs
mov
lods
insl
dec
mov
sub
jle
daa
mov
push
fsubrl
xchg
push
stos
xor
sti
loopne
jnp
xchg
sbb
lahf
enter
xor
push
std
sbb
add
lds
jnp
add
int
mov
mov
jle
inc
ds
mov
or
fcompl
rorb
test
add
add
icebp
je
movl
movl
mov
mov
xor
xor
and
jmp
xor
jne
insb
sbb
push
out
int3
or
xchg
jle
aaa
sbb
add
sbb
cmpsl
movsb
idiv
lret
xor
sub
push
rol
mov
andl
int3
mov
push
cld
imul
or
insb
sbb
xchg
or
mov
xchg
outsb
dec
call
pusha
mov
add
int
stos
jne
shll
add
cmp
or
in
loop
gs
shl
cmpsl
stos
imul
je
xchg
lret
dec
inc
fisttpl
push
jg
scas
sahf
movsb
std
sub
jp
pop
ds
mov
xor
inc
out
nop
out
sub
pop
add
sbb
nop
push
je
not
pushf
rcrb
stos
add
pop
xchg
mov
ret
sub
sub
push
stos
mov
mov
inc
sbbl
xchg
adc
mov
or
cltd
testl
push
shl
scas
pop
popa
lds
in
in
jge
bound
into
das
in
xchg
int3
mov
andl
jb
out
cmp
jl
je
mov
and
sti
mov
pop
mov
cld
inc
sarb
cmp
push
cwtl
dec
aas
js
cmp
shlb
jl
mov
pop
or
xlat
ss
sbb
int3
push
out
inc
or
jbe
scas
jle
fiaddl
sub
jge
push
fwait
pop
lods
or
lcall
dec
mov
jp
inc
movsl
outsl
xlat
in
cmc
dec
dec
mov
loope
aad
call
out
sbb
stos
das
mov
cld
sbb
and
sbb
cmp
mov
es
mov
test
mov
jl
enter
in
push
inc
and
addr16
int3
and
movsb
das
lock
jae
in
stos
adc
repnz
push
push
test
out
mov
js
mov
or
add
and
and
mov
and
jbe
jl
sub
in
pushf
loope
push
mov
outsl
mov
fisttpll
aaa
mov
test
les
dec
sbb
sbb
pusha
mov
rcr
push
push
dec
enter
xor
out
jmp
fsubrs
fwait
aas
jmp
inc
movsb
xor
loop
xchg
rcl
dec
sbb
inc
lret
imul
mov
jge
dec
push
cli
add
jecxz
pop
lods
data16
daa
fcomp
ficomps
adc
movsb
push
xchg
ret
data16
or
pop
mov
xchg
jne
ret
jp
test
mov
cs
xchg
call
jns
in
rcll
jno
sbb
push
add
cmp
xor
push
mov
hlt
and
pop
leave
push
hlt
jb
inc
bound
add
hlt
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
jmp
in
mov
sub
push
movsl
mov
add
sbb
test
loope,pt
in
inc
les
adc
inc
cmpsb
out
sbb
andl
imul
xor
push
rclb
mov
adc
mov
pop
pop
fucomip
pusha
fs
sub
test
sti
sti
hlt
fdivl
cmp
inc
insb
je
hlt
addr16
xchg
dec
popa
sahf
add
fs
shr
adc
or
out
movsl
int
adc
or
mov
add
in
sbb
xor
xorb
sub
inc
fldcw
xor
xor
jns
std
gs
std
mov
and
sbb
xor
mov
fsubs
push
movsb
dec
pushf
jbe
imul
xchg
inc
iret
imul
mov
icebp
fstps
and
pusha
push
push
adc
inc
int3
fidivrl
xchg
pop
adc
push
out
cmp
mov
sbb
in
aad
ja
sub
sbb
mov
bound
lret
mov
and
cmp
adc
loope
orb
and
cmp
sub
and
adc
and
xlat
and
cmpsl
adc
movsb
inc
scas
pop
adc
inc
xor
mov
pop
je
jne
popl
aas
cmp
jo
scas
xor
inc
mov
les
popf
cmp
jmp
cwtl
or
or
adc
popf
push
lods
push
jns
jecxz
pop
punpckldq
lea
jge
lret
inc
pushf
or
push
sarb
int
aad
or
repz
roll
lods
push
divb
ret
sti
paddsb
mov
push
out
add
sbb
adc
mov
add
pop
insb
call
aas
push
leave
pop
test
pusha
push
mov
xor
and
mov
pop
shlb
and
ljmp
stos
sbb
push
jp
addr16
jns
sbbl
mov
stos
push
jl
push
lcall
test
sub
cmpsl
ret
pushf
es
pop
mov
cmpsl
shlb
test
xor
or
stc
push
addr16
push
jb
imul
pop
pop
pop
ds
aam
loop
neg
outsb
shll
sbbb
xchg
data16
popa
mov
cli
or
movsb
add
test
cmp
cld
inc
arpl
xchg
int
rolb
cmp
out
repz
mov
ds
adc
sbb
rclb
mov
or
lods
in
sub
bound
or
dec
pop
scas
leave
sub
mov
in
adcl
cmc
in
xchg
dec
inc
aas
jge
outsb
inc
push
mul
scas
cltd
lret
adc
lahf
adcl
add
add
push
sbb
ja
subb
mov
adc
sbb
mov
xchg
setne
sbb
pusha
inc
mov
aad
xchg
sbb
jle
mov
loopne
xor
push
push
and
decb
roll
test
je
push
aas
jne
jb
jl
lea
cs
test
jmp
cmp
mov
pop
rolb
pop
mov
push
cltd
lcall
les
scas
test
sbb
sbb
adc
dec
in
xchg
add
adc
inc
push
inc
shrl
inc
mov
ds
lret
cmc
sahf
pop
rcll
xchg
sub
or
mov
xchg
add
dec
dec
incb
fyl2x
jbe
jl
dec
sbb
ret
pushf
adc
popa
incl
daa
fmulp
push
pushf
pusha
mov
xchg
inc
xchg
inc
xchg
andl
mov
lods
pop
fidivrl
cmp
add
nop
fstp
or
xor
xchg
xor
xchg
sub
sbb
test
mov
push
xchg
mov
test
clc
mov
push
aam
lods
fidivs
jbe
inc
lds
mov
in
cli
jne
orl
in
stos
adc
lcall
inc
mov
inc
inc
push
movb
push
jl
sub
cmp
push
cmp
ja
loop
and
movsl
push
and
pushf
mull
push
adc
cld
mov
mov
mov
ljmp
jecxz
enter
mov
int
bound
decb
xlat
xchg
ror
jns
and
aam
test
loope
add
and
repz
push
ds
adc
inc
lahf
jle
lahf
mov
popl
rorl
ja
add
cmovp
xchg
add
xor
orl
dec
mov
jg
mov
sbb
xorb
jns
into
call
stc
fldl
inc
insb
jp
xor
rcrl
xchg
xchg
stos
cmp
adc
out
or
stc
test
xchg
mov
push
mov
std
cmp
and
lods
jbe
push
mov
push
adc
dec
dec
stos
mov
xchg
jns
es
xor
stc
mov
int
inc
pop
or
daa
ret
data16
sbb
sar
dec
aam
inc
inc
pop
and
insb
dec
sub
adc
and
inc
mov
adc
inc
out
mov
mov
sbb
fs
xchg
sahf
adc
push
insl
add
xlat
or
xchg
pop
test
int3
xor
xor
push
inc
jnp
lret
fsts
scas
or
aas
push
frstor
stc
cmpsl
push
pop
lock
cmp
aas
rcrb
stos
push
fsts
imul
cmpsl
hlt
mov
push
call
mov
mov
push
push
and
and
push
jmp
addr16
bound
mov
xchg
sbb
adc
sbb
movsb
dec
loope
fcmovb
dec
fcomp
jne
dec
jae
jae
out
cli
ljmp
fistps
call
lret
testl
pop
adc
mov
sbb
adc
push
or
jno
dec
push
and
popf
and
mov
add
xor
movsb
cmovo
push
mov
push
push
ds
ds
xor
sbb
sub
cmc
push
ja
rcrl
dec
decl
aaa
inc
aad
ldmxcsr
xchg
pop
insb
pop
cmp
mov
add
adc
adc
sbb
sub
push
inc
mov
in
push
adc
push
cmpsb
std
mov
sahf
and
loopne
insb
nop
cmp
aad
push
cli
cmp
mov
mov
adc
int
ss
negb
test
jg
mov
movsl
add
movsl
dec
cmp
mov
das
adc
test
cmpl
roll
mov
adc
adc
popa
out
shlb
aad
xor
out
stos
mov
jbe
divb
mov
or
jl
cmpsl
and
mov
ljmp
push
gs
ret
fcomi
aaa
test
pop
incl
xor
ds
test
push
xor
shll
and
fistpll
mov
cmp
mov
sub
icebp
out
pop
fidivl
cmc
dec
jno
push
incb
dec
fdiv
addr16
loopne
js
movb
enter
enter
imul
jb
inc
sub
add
imul
idiv
loop
es
sbb
push
sub
push
gs
dec
or
xor
fistps
xor
subb
cltd
add
xchg
fnsave
xchg
cwtl
jecxz
jp
mov
fwait
inc
mov
inc
mov
fwait
add
repnz
jbe
out
in
adc
push
and
mov
inc
mov
in
icebp
pusha
cmp
push
xlat
push
push
js
cmp
adc
cmpsb
and
das
out
push
int
push
adc
or
aaa
aas
jmp
jl
dec
mov
rorb
xor
cmp
adc
lods
cltd
mov
fcmovnbe
movsb
cmpsl
ret
cli
and
pop
sub
dec
jmp
aas
out
jl
sbb
xorb
sbb
jge
xor
mov
sbb
fwait
mov
scas
xchg
sub
enter
mov
dec
pop
push
add
ss
sahf
pop
sub
lret
dec
jg
lea
add
aad
insl
jl
add
movsl
insl
xlat
cmp
loopne
xor
es
push
add
push
mov
sbb
daa
out
outsl
cmp
std
lcall
test
jnp
hlt
movsl
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
jmp
rcr
sub
sbb
loope
scas
mov
sub
jo
pop
sbb
add
sbb
cs
out
mov
shl
mov
sub
gs
ret
jbe
popa
mov
push
stc
lods
lods
rolb
inc
cmpsb
xor
and
test
mov
xor
call
out
or
mov
mov
gs
icebp
lock
pop
test
cmc
dec
mov
scas
cwtl
lds
jecxz
lret
cmc
mov
mov
aas
xchg
mov
or
xchg
xlat
mov
inc
movsb
lret
add
mov
or
sub
out
mov
cld
dec
cmp
mov
notl
cmp
shl
lods
adc
cmpsb
sub
in
mov
push
cmp
add
jae
into
push
mov
rcrb
adc
inc
addr16
jo
push
dec
lcall
repz
outsl
repz
mov
in
mov
xor
mov
loopne
imul
adc
add
enter
and
xchg
mov
push
mov
xor
outsb
add
in
nop
shlb
mov
fnstsw
pushf
or
mov
jmp
das
adc
pop
jnp
push
pop
push
xchg
out
xchg
stc
sub
pop
fistl
xor
sub
sub
sahf
pop
pusha
adc
jns
lods
inc
rorb
jmp
sahf
pop
jno
adc
push
xchg
mov
mov
into
and
push
push
sbb
push
cmp
rcll
inc
dec
decb
cmp
fildl
xchg
push
test
int3
ljmp
pop
ljmp
xor
test
nopl
mov
in
or
pop
xchg
cmp
push
adc
pop
cmp
ret
dec
mov
xorl
pop
rcll
mov
repnz
in
push
fcmovbe
inc
mov
out
xorl
testl
insl
add
lahf
inc
stc
or
in
out
adc
sbb
addl
js
push
jne
loope
sbb
push
xchg
ret
lret
push
cld
or
mov
loope
test
pop
fcomip
mov
mov
shll
dec
enter
push
push
mov
call
lret
sub
cmp
sub
sti
jle
cwtl
mov
fistpll
js
sti
insb
cmpsl
mov
clc
dec
aad
idivb
ljmp
hlt
push
mov
ret
adc
dec
fwait
cmp
inc
mov
in
and
lahf
roll
adc
cmp
icebp
xchg
pusha
mov
mov
lea
pop
lods
or
divl
jg
mov
xor
gs
call
inc
cmpsb
ss
xchg
or
push
stos
xor
mov
shlb
dec
dec
inc
mov
enter
dec
scas
push
into
push
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
jmp
adc
nop
dec
mov
mov
add
sbb
shll
call
in
adc
cli
cmc
and
pop
fld
inc
cltd
and
fucomip
loopne
pop
mov
insb
push
mov
sub
xchg
jne
inc
popa
sbb
mov
inc
out
push
ret
lret
sbb
int3
ss
add
xor
mov
mov
adc
js
cmp
adc
jnp
lea
jecxz
dec
inc
adc
and
int3
add
mov
repnz
loopne
push
or
fistpl
movsl
sub
inc
inc
dec
out
in
in
and
xorb
fwait
sahf
sbb
pop
dec
jecxz
mov
mov
popa
inc
dec
cwtl
pushf
mov
inc
mov
xor
stos
in
shl
mov
iret
add
call
cmc
sbb
xchg
push
shll
out
jg
mov
cmp
fwait
dec
test
pushf
dec
mov
ffree
stc
movsl
add
repz
inc
sub
xor
das
test
mov
push
xchg
cltd
nop
jp
xchg
mov
rclb
push
jb
test
aad
repz
xchg
xchg
sahf
jecxz
aad
sub
cltd
dec
dec
adc
jle
ret
cmp
stc
push
push
mov
inc
arpl
push
xchg
and
and
mov
or
cwtl
jmp
mov
pop
lcall
xchg
jmp
stos
push
dec
outsl
es
adc
insl
out
push
push
je
mov
in
popa
lahf
scas
add
xchg
hlt
sbb
sub
dec
std
nop
les
bound
test
cmpsl
rcrb
xchg
or
sbb
cmp
pop
and
cmp
xchg
xchg
nop
loop
test
out
xor
and
rcrl
mov
xchg
xchg
dec
push
repz
sbb
bound
cmpsb
jecxz
stos
mov
push
int
lods
or
xchg
mov
pop
lret
or
mov
push
jb
xor
mov
sub
mov
nop
stos
pop
dec
and
adc
outsl
idivl
xor
in
rol
mov
cmp
sbb
mov
and
loope
or
in
sub
sub
testl
in
shl
sti
test
push
pop
sub
jp
call
and
jle
aam
shlb
adc
fsubl
lds
xchg
mov
xor
xorl
fldl
sbb
out
add
inc
push
push
cwtl
in
cltd
test
xor
cmp
adc
lahf
jp
test
sbb
sbbb
pop
ret
pushf
lret
aaa
fs
clc
adc
mov
pop
lds
mov
loop
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
jmp
push
test
and
pusha
lret
pop
adc
sbb
adc
sbb
adc
jo
sub
cmc
xor
push
dec
aaa
test
or
in
cmpsl
fisubs
sub
int3
fwait
pop
test
add
rcrl
popa
popf
and
xchg
inc
cmp
out
je
add
pop
pop
jg
cmp
pop
cmp
mov
out
mov
jge
push
mov
sub
and
addl
sub
mov
aas
inc
hlt
mov
jbe
repz
or
add
cmpsb
dec
pop
sbb
mov
push
rcll
inc
add
xchg
sti
fmul
sub
repz
mov
cmp
or
inc
adc
dec
out
pop
clc
pushf
std
sub
inc
xor
jge
call
add
xor
popf
fwait
incl
fidivs
or
add
inc
jecxz
jg
and
std
xor
addr16
enter
mov
test
inc
cwtl
jo
xchg
mov
xor
mov
es
xchg
mov
inc
sarb
push
imul
cmp
or
icebp
sub
fwait
stos
ja
call
xor
inc
ja
popa
inc
adc
add
icebp
or
mov
jb
cmp
pusha
outsl
mov
int3
cmp
inc
mov
dec
in
fstpl
aas
or
xorl
fwait
jo
or
sub
in
adc
jns
data16
fnstcw
cltd
lcall
cmpl
insb
ds
pop
jns
push
jle
mov
fucomi
movsb
jmp
or
sub
iret
xchg
repz
out
lods
mov
mov
aas
sbb
mov
push
aaa
sbb
int
xor
aas
fbld
push
xor
in
stos
rolb
bound
push
pop
xchg
pushf
in
xchg
xlat
xchg
je
mov
inc
in
mov
out
add
stos
int3
outsb
mov
inc
insl
cmp
sahf
lock
sub
cmp
lock
fs
jo
cmp
ret
shr
sbb
iret
cmp
lods
mov
jg
xchg
jnp
mov
mov
movsb
fildl
mov
enter
add
sub
pop
lea
mov
je
pop
les
mov
sub
dec
mov
cmp
lds
mov
insl
cmpsl
dec
fistl
fsubrs
and
push
adc
sub
loop
cmc
add
inc
lret
mov
stos
fisttpl
rcll
fcmovne
jns
mov
fwait
jbe
and
or
or
xchg
xor
pop
cmc
arpl
pop
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
push
lods
pop
inc
lret
jo
adc
inc
or
sbb
push
stc
add
mov
enter
xor
mov
daa
bound
outsb
cmp
sub
loope
iret
add
mov
test
in
loopne
xchg
fcomip
add
cmp
loop
push
aam
andl
dec
mov
mov
in
mov
push
popa
faddl
cmp
cltd
les
dec
repnz
adc
pop
sbb
out
pop
movsl
sub
push
sbb
imul
int
and
cld
inc
lret
adc
push
lret
inc
and
out
dec
int
pop
nop
pushf
in
out
mov
pop
dec
bound
inc
add
or
push
pandn
jbe
mov
jbe
popf
mov
push
std
les
dec
jno
jno
adc
jl
mov
mov
add
inc
cmp
out
movsl
fiadds
imulb
sbb
xor
mov
jg
and
rol
lock
or
insl
out
mov
cld
pushf
jo
insb
call
inc
imul
scas
mov
ret
add
mov
negl
pusha
mov
and
jns
aad
jl
cs
lock
cli
and
adc
dec
jle
mov
push
dec
xor
push
fmull
jge
add
neg
and
aad
jns
push
push
scas
mov
popa
push
aam
std
out
rcrl
sbb
push
jge
and
mov
incl
leave
stos
add
movsb
fildl
push
sbb
mov
adc
lret
push
mov
dec
iret
jl
insl
stc
enter
pop
xor
out
or
cmp
pop
sbb
clc
cmpsb
test
lret
adc
aaa
hlt
bound
nop
mov
inc
push
rorl
jg
orl
lods
rclb
outsb
xor
push
scas
and
inc
add
add
mov
adc
xchg
bound
jbe
frstor
and
lock
pop
out
lods
scas
clc
lcall
xchg
pop
test
push
into
sub
sub
icebp
sbb
push
mov
movsb
pop
outsl
mov
gs
dec
mov
cltd
aad
cmpsl
cmc
call
fdivp
das
fxch
mov
mov
mov
push
sbb
lods
stos
push
mov
and
adc
into
lods
cmp
mov
add
fsubrl
add
dec
inc
movnti
dec
xchg
fimull
xor
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
jmp
xchg
jne
je
es
je
mov
mov
sbb
test
sbb
pusha
xlat
dec
daa
or
test
dec
fdivs
lret
cmpsl
gs
fs
sbb
lods
cli
into
xor
xor
or
enter
mov
mov
les
lock
out
sahf
outsl
sbb
ficompl
pop
pop
dec
sub
mov
ja
scas
in
rclb
arpl
lahf
stos
std
push
in
jle
mov
outsl
sub
daa
imul
shrb
loopne
xchg
test
and
je
loope
outsb
repz
lods
mov
inc
or
test
subl
dec
mov
insb
cmc
lods
daa
mov
lret
xchg
sub
cli
xor
push
fstps
pop
jne
nop
imul
lea
movsl
cld
roll
jge
mov
ficoml
or
lods
fldcw
cmpsl
push
scas
and
and
popa
mov
mov
sbb
shlb
sub
add
mov
cld
repz
out
xchg
push
vmovdqa
inc
cmp
add
sub
leave
stos
dec
cld
loope
fcom
or
xchg
lods
dec
and
cmp
push
mov
scas
lds
dec
ja
lds
loop
sbb
jge
pop
sbb
addl
xchg
lea
cmp
dec
movsb
dec
in
scas
inc
mov
movsb
inc
or
add
orb
sarb
sbb
jo
cmp
aas
repz
jmp
sahf
mov
mov
outsl
pop
push
js
std
dec
push
mov
sbbl
xchg
in
pop
push
fstps
xchg
das
call
pushf
xor
dec
pop
negb
insl
pop
jo
adc
in
jb
cwtl
pop
jnp
and
movl
mov
fnstsw
mov
sti
lods
fs
add
adc
pop
pushf
cld
cmp
sbb
push
aaa
ja
mov
dec
incl
jmp
aam
outsb
adc
or
movsl
fdivr
and
lret
loope
push
dec
nop
mov
lods
xor
push
sub
or
stc
push
lea
loope
loop
inc
mov
enter
and
xor
add
insl
test
stc
cltd
cmp
iret
es
mov
jno
scas
fsts
mov
inc
test
cmpsl
stos
push
js
push
mov
push
adc
and
popa
adc
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
jmp
pop
dec
ficoms
daa
ss
push
jo
mov
add
sbb
jle
xor
lock
push
mov
cmp
lahf
jae
iret
mov
or
jo
notl
sub
xchg
mov
mov
push
inc
cwtl
hlt
push
dec
leave
sti
mov
mov
inc
outsl
int
nop
bound
or
pop
daa
cmp
dec
push
das
cmp
inc
popa
xor
pop
jns
inc
pop
xchg
imul
jae
out
arpl
movsl
addr16
mov
jbe
sbb
dec
push
mov
jae
sbb
jnp
jbe
inc
fstpl
xor
xchg
dec
dec
push
push
push
xchg
mov
pop
xchg
andl
xchg
push
inc
inc
lds
push
push
mov
in
ljmp
mov
dec
mov
cmp
jle
divl
cltd
jb
dec
pop
xchg
ljmp
mov
hlt
jb
sti
push
pop
repnz
push
pop
xor
mov
fwait
sbb
inc
jmp
add
les
mov
inc
add
fsubs
or
fs
mov
je
std
pop
dec
ljmp
pop
fmul
jbe
cmp
xchg
push
fcoms
inc
rol
adc
pop
insl
stos
loop
mov
sub
push
in
jbe
shrl
pop
cmp
jg
dec
out
fcom
add
lret
cmp
scas
add
add
out
fs
ja
movsb
sbb
xchg
rcl
test
pop
push
jp
pop
out
xor
push
mov
jo
fs
xorl
adc
mov
mov
adc
push
out
aaa
ss
out
lret
ds
mov
and
jecxz
shr
loope
lcall
insb
shll
xchg
cmpb
push
leave
imul
cmp
push
mov
mov
popa
dec
push
aas
pop
xchg
add
movsl
lahf
push
jb
adc
lock
fisttpl
mov
push
mov
cmp
not
mov
mov
mov
out
testl
mov
int
adc
in
fisttpl
pop
ret
or
bnd
xchg
lods
push
mov
setae
mov
inc
leave
stos
dec
fisttps
push
sahf
das
shrl
mov
inc
pop
loop
xchg
pushl
repz
sbb
repz
push
rcr
mov
pop
test
sbb
mov
outsl
dec
mov
scas
dec
adc
shrl
scas
dec
mov
clc
arpl
mov
dec
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
jmp
sbb
dec
push
dec
and
and
xchg
mov
test
sbb
leave
mov
jae
fisubl
clc
loope
mov
adc
sbb
or
or
sbb
mov
push
pop
ja
inc
jno
xchg
mov
aad
popl
js
xchg
inc
ljmp
push
xlat
scas
jbe
scas
xchg
or
mov
ret
dec
cli
xor
fwait
cmpsw
call
test
ss
fwait
jmp
inc
es
pop
mov
fnsave
rolb
mov
aad
fistl
out
mov
loopne
sub
test
popa
sbb
xor
adc
addr16
icebp
dec
or
pop
mov
cmp
mov
mov
movsb
lods
fsubp
dec
sbb
and
adc
xor
adc
arpl
sub
das
sbb
xchg
mov
outsl
fs
hlt
xchg
sub
test
cltd
sub
bound
adc
icebp
in
rcll
cmc
sub
push
adc
nop
cmp
les
xor
hlt
pop
sub
dec
ficompl
pop
inc
mov
dec
mov
xor
dec
loope
push
inc
xchg
fnsave
jno
adc
cmpsb
pop
and
int3
test
xor
movsb
add
dec
movsb
lea
inc
imul
xchg
rcr
iret
repnz
imul
fwait
sub
lahf
jmp
iret
or
mov
aaa
pop
sub
sbb
data16
test
pop
mov
aas
jno
xor
imul
imul
mov
and
arpl
pop
mov
add
adc
adc
or
dec
ss
lods
jns
sti
int3
mov
pop
outsl
xchg
mov
push
push
xchg
js
pusha
movsl
js
ds
mov
add
nop
dec
pop
fsubs
jmp
aam
lods
ja
push
roll
or
or
inc
adc
add
jo
and
gs
es
loop
or
xor
jecxz
pop
add
mov
xor
mov
movsl
jge
cmp
mov
or
inc
pop
lcall
arpl
stos
and
lods
mov
cmovbe
repnz
pushfw
out
lods
or
ljmp
loopne
adcb
lret
fldl
xchg
rclb
mov
ja
fs
dec
les
pop
ja
les
sbb
jg,pn
sub
xor
mov
lret
lds
cwtl
cltd
ljmp
dec
xlat
mov
sub
loopne
cmp
add
inc
fdivrl
cmp
add
inc
in
int
add
jmp
push
mov
fistpl
jo
jne
xor
sbb
xchg
xor
adc
xor
cwtl
in
cmp
subb
mov
pop
or
pushf
mov
mov
arpl
cmp
mov
sbb
add
insb
mov
add
pop
jecxz
sahf
je
cs
pop
sbb
cmp
sub
in
cmp
pusha
pop
cmpsb
aaa
push
push
lret
mov
int
xchg
lahf
in
xor
mov
inc
arpl
or
cmp
das
inc
xor
xchg
mov
loope
or
push
xor
xchg
cli
pop
or
movsl
in
mov
lods
in
orl
loope
stos
rcrb
xor
out
ljmp
push
shl
and
push
sbb
xchg
cmpsl
inc
fcmovnb
fwait
adc
xchg
cltd
scas
lds
mov
push
xchg
div
movsl
and
mov
mov
lea
imul
imul
mov
dec
bound
add
lahf
aad
andb
addb
test
pop
cmp
ds
movsb
ja
and
cld
gs
outsb
and
sbb
insb
es
jmp
in
mov
loopne
pop
adcb
ljmp
xchg
lods
mov
xorb
mov
andl
popa
mov
dec
fnstsw
xchg
cli
fwait
leave
jnp
cmp
and
xchg
mov
xchg
int
fistl
aas
dec
pop
sbb
cmp
out
inc
aas
and
cmp
cmp
dec
xchg
mov
and
cmp
sti
out
jle
shll
fistpll
add
rcr
mov
jecxz
push
sub
es
movsb
pop
mov
xchg
jg
pop
loop
mov
testl
leave
test
inc
fistps
fs
hlt
loope
cmp
loope
push
push
xor
jl
or
xchg
jns
cld
imul
pop
xchg
out
adc
xor
push
xchg
dec
mov
jae
and
mov
dec
and
dec
jle
std
sbb
jmp
data16
push
or
pusha
cli
ficompl
out
jns
test
insl
testl
fisubrs
es
sbbl
lcall
jno
rol
and
xor
out
dec
std
add
out
loop
cmpsl
and
push
lods
mov
orl
scas
pop
sahf
adc
movl
movl
jmp
aas
mov
mov
dec
mov
and
test
sbb
nop
bound
dec
call
pop
xchg
stos
sbb
mov
fistl
add
jne
jmp
ret
subl
jo
dec
leave
and
mov
scas
cmp
pop
pop
andl
jecxz
adc
cmp
adc
int
xchg
repz
sbb
jecxz
mov
xor
in
bound
mov
push
dec
movb
dec
mov
bound
pop
test
test
adc
jge
xchg
orl
xchg
mov
arpl
movsl
pop
iret
cmpsb
adc
imul
jecxz
mov
and
inc
push
pop
jnp
movsb
adc
jle
push
shlb
cmpsb
pop
popf
popa
in
push
and
out
pop
shl
movsb
adc
adc
mov
jp
mov
fucomp
sbb
fcomip
fwait
sub
inc
ret
mov
jl
sub
int3
mov
inc
inc
mov
push
aaa
add
shll
xor
int3
xor
cli
xor
sub
jae
inc
aad
push
mov
sbb
inc
cmp
mov
scas
in
cmc
sub
push
xor
call
dec
sub
imul
xor
fwait
inc
push
mov
xor
jecxz
rclb
or
jne
jle
sub
adc
xchg
negl
sub
cmpsb
repnz
pop
std
push
je
dec
mov
sbb
xchg
xor
mov
jp
imul
repnz
in
dec
fsubrp
sbb
pop
mov
inc
shll
stos
mov
lret
pop
mulb
aad
stos
int3
mov
stos
xor
stos
jne
inc
sbb
xor
mov
pop
push
test
loope
incb
lds
push
cli
cmpsl
sar
sarb
repz
mov
sbb
dec
sub
pop
call
pop
out
fs
sarl
cwtl
mov
or
aaa
aaa
mov
add
int
adc
jp
ja
aam
push
movsb
dec
int
lock
inc
pusha
xchg
push
pop
fcoml
add
rcl
dec
or
jb
cmpsl
mov
arpl
dec
sahf
shll
lods
mov
dec
jle
hlt
sti
insl
mull
jg
les
pushf
aaa
sub
icebp
cli
mov
push
pop
xchg
sub
stos
or
fcmovbe
adc
and
dec
call
fcmovnb
test
fsubrs
pop
div
mov
jmp
lahf
ds
xor
lcall
ljmp
test
sbb
xchg
xchg
mov
int
xchg
call
movsb
cmpsb
fwait
into
and
dec
orb
adc
inc
in
add
pop
xchg
sbb
xor
lods
popf
and
or
mov
sub
or
sub
iret
cmp
mov
or
sbb
fcoms
adc
stos
jns
lock
mov
mov
adc
xchg
mov
pop
push
test
ljmp
push
mov
outsb
cwtl
rorl
loop
dec
mov
scas
outsb
mov
mov
pop
inc
je
sub
cmp
das
scas
sbb
jmp
movups
sbb
stos
in
aas
cmp
sbb
inc
je
push
mov
jns
pop
mov
lcall
scas
jbe
arpl
push
in
adc
xadd
inc
pusha
mov
arpl
stos
loopne
cmc
movsb
lock
lcall
aad
sbb
dec
or
movsb
pop
ljmp
cmpb
ret
mov
mov
push
aas
clc
data16
mov
xchg
jo
hlt
xchg
shr
mov
mov
arpl
dec
jns
cld
insb
pop
push
sar
push
cs
push
fsubs
out
fildll
pop
fsubrl
mov
xchg
lods
enter
cmp
shll
inc
jne
push
mov
test
and
fcoms
stos
xchg
call
xchg
shll
xor
cmp
add
and
in
mov
xor
lock
mov
adc
sub
jmp
add
divl
sbb
stos
inc
jbe
jp
xlat
mov
sbb
shlb
cmp
cmpsb
lods
sbb
adc
push
xor
push
dec
or
jnp
faddp
inc
addr16
in
call
xor
adc
jnp
sbbl
adc
mov
cwtl
sub
jns
push
fcompl
insl
jae
cmp
adc
and
movsl
idivl
jmp
sub
dec
loope
jecxz
mov
in
inc
mov
jle
sub
mov
in
aas
fcoms
into
jbe
das
shl
pop
test
xchg
xchg
mov
data16
xchg
pushf
xchg
lods
fs
pushf
das
sbbb
dec
sub
aas
scas
popf
loope
imul
lods
out
and
jp
inc
cmpsl
mov
or
adc
mov
xchg
lods
xlat
jp
icebp
or
xor
int
pusha
jl
adc
js
jne
mov
push
sbb
sub
add
sbb
sub
jecxz
mov
aam
inc
add
add
ret
fmull
rorl
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
jmp
push
push
push
scas
sbb
inc
pop
jns
jo
ljmp
test
sbb
xlat
xchg
cmp
push
inc
rclb
sbb
cmp
xor
cli
xor
xlat
sub
cltd
cmpsl
ja
push
xor
xorb
adc
repnz
int3
mov
add
inc
sbb
jmp
enter
dec
add
sbb
rorb
pop
sahf
sti
sbb
into
mov
inc
test
leave
mov
js
sahf
add
pop
test
push
mov
mov
mov
loop
popa
push
and
in
bound
ja
or
pop
pushf
lea
pop
leave
dec
rorl
clc
aam
mov
jne
push
pop
mov
shl
mov
pop
xchg
aad
fwait
push
mov
negb
add
out
adc
mov
lea
lcall
rol
inc
cmc
sub
bound
push
nop
and
adcl
leave
mov
mov
insb
fldt
xchg
stc
push
fisttps
shll
je
imul
in
and
or
pop
jo
mov
push
mov
insl
dec
ljmp
stos
push
int3
test
cmc
fmulp
pop
pop
vfmsub213ps
push
jae
xor
into
pop
sbb
dec
jge
sar
mov
sub
xchg
pop
aam
or
jbe
jne
push
call
cmpsb
push
or
xor
into
fisttps
sbb
push
mov
popa
cmp
jl
pop
add
test
pop
xor
packssdw
stos
pop
xchg
mov
mov
mov
jno
outsl
pop
xchg
movsb
je
mov
jb
test
mov
xchg
je
or
pop
mov
push
shll
adc
pushf
scas
xor
sbb
push
mov
push
movsl
jp
adc
imul
xor
fadd
mul
popa
sahf
repnz
pusha
cmp
adc
pop
adc
push
into
sbb
daa
dec
xlat
mov
mov
push
xchg
jecxz
pop
sub
iret
sti
dec
sahf
sub
cs
sub
pop
in
loop
dec
dec
fwait
outsl
mov
jecxz
push
ss
scas
lods
adcl
push
mov
pop
les
incl
xor
ret
decb
fmulp
push
jb
stos
mov
fld
xlat
movsl
pop
jae
pop
leave
mov
loopne
outsl
cmc
lea
cltd
sub
and
fcoml
sub
nop
and
jg
sti
add
inc
filds
pop
test
nop
mov
pop
cmp
mov
ss
and
ss
mov
xchg
sbb
aam
ret
add
ret
div
mov
mov
sub
mov
mov
mov
jmp
jmp
push
and
cmp
jo
loopne
sbb
imul
mov
sbb
fimull
and
sbbl
add
xor
xchg
movl
jmp
dec
rcrb
js
xchg
or
scas
aaa
mov
mov
leave
dec
in
xor
mov
jnp
cmp
in
je
insl
fwait
add
mov
lahf
dec
mov
or
jg
adc
mov
incl
cwtl
dec
fmuls
ja
mov
cmp
outsl
cltd
mov
cmp
xor
out
dec
mov
or
aaa
push
out
push
mov
iret
xchg
inc
lret
pop
pop
pop
adc
roll
ja
popa
jne
stos
movsb
and
xchg
push
aad
popa
push
push
test
inc
xchg
iret
mov
dec
xchg
lods
jns
dec
pushl
out
inc
inc
call
push
add
or
neg
add
fistl
jle
call
sub
inc
mov
bound
repz
adc
xchg
imul
jo
mov
xchg
lock
add
jecxz
fwait
xor
cmp
adc
hlt
pop
or
jle
negl
sbb
jmp
jl
sub
add
andl
jno,pt
adc
pop
pop
shr
dec
xor
movsl
js
and
lods
and
push
or
test
adc
insl
stos
sbb
jle
inc
inc
mov
mov
mov
pop
imul
popf
loope
loopne
mov
or
pavgw
and
pop
addr16
inc
add
movsl
jle
out
cmp
or
movsl
sub
xor
sbb
sbb
ret
push
mov
bswap
or
xor
insb
cmc
movb
cmpb
fdivr
or
pop
ret
or
test
ja
dec
imul
fwait
dec
fsubr
in
dec
fwait
lds
add
xor
or
sti
jl
pop
cmp
test
cmp
or
dec
add
xchg
dec
ljmp
inc
sbb
xlat
lock
in
jge
imul
mov
mov
add
loop
inc
push
push
pop
adc
scas
inc
mov
enter
mov
int
mov
adc
mov
loopne
inc
sub
sub
fs
fcoms
lock
leave
movsl
jl
mov
inc
and
jns
ljmp
mov
mov
sub
inc
in
push
call
push
in
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
jmp
hlt
aam
adc
pop
and
cmp
sub
sbb
adc
sbb
sar
jecxz
xchg
xor
xor
test
mov
orb
cs
and
repnz
repnz
cmp
subl
xor
cltd
fwait
test
inc
adc
sbb
pop
lds
nop
loopne
and
out
push
addr16
pop
ljmp
push
mov
rclb
ret
shlb
jg
arpl
mov
sti
enter
xchg
pop
bound
shll
aas
aam
push
cmpsl
daa
aad
and
adc
sbb
fwait
pop
stc
xchg
int
fucomp
dec
and
push
repz
push
aaa
in
nop
mov
jno
add
stos
ljmp
ret
shrl
enter
or
das
push
inc
xchg
fs
out
call
mov
mov
dec
addb
inc
or
jl
cltd
mov
scas
jp
mov
xchg
in
pop
addr16
pop
mov
out
ret
cmc
cmpsl
push
aaa
bound
ret
sub
sarb
lret
cmpsl
pop
push
fisubrl
scas
push
push
iret
or
fstps
sbb
mov
push
fmuls
and
and
push
outsb
mov
fcomi
cltd
mov
mov
xor
lock
dec
in
aaa
andl
cmc
push
push
icebp
leave
push
xchg
xchg
outsb
xchg
or
leave
xor
xor
adc
add
pushf
jb
in
xor
lods
fidivrs
stos
push
sbb
adc
scas
roll
ret
das
push
pop
sarl
cltd
cmpsl
or
add
iret
pop
add
and
and
nop
lods
scas
mov
fsts
dec
xor
pop
cmpsl
push
or
jns
hlt
fisttpl
mov
xchg
mov
movsb
jns
mov
dec
les
push
dec
pop
xor
in
mov
push
jle
test
call
divb
dec
repz
subb
fs
mov
dec
test
mov
mov
push
add
shlb
sub
or
call
in
out
scas
add
mov
mov
lods
iret
cmp
out
cmpsb
xchg
aam
mov
pop
mov
pop
int
gs
mov
mov
mov
test
mov
lods
scas
fnstcw
lods
cwtl
sbb
pop
sub
push
mov
mov
xchg
mov
cltd
orl
cmpsb
scas
adc
shrb
sahf
prefetcht1
outsl
adc
outsb
sbb
and
xchg
pop
aad
stc
cmpsl
pop
jp
mov
sub
je
lods
pmaxsw
jl
push
out
xor
mov
add
cmpsl
mov
pusha
clc
fnstenv
and
or
or
cmp
cmpsb
inc
push
mov
loopne
add
push
or
imul
insl
push
lods
adc
dec
aam
add
or
sub
sbb
ret
stc
xchg
xor
dec
cmpsl
xor
mov
out
xlat
pop
fsts
mov
lock
insb
into
sti
push
dec
mov
mov
mov
and
dec
sub
add
cmpsl
mov
pushf
movl
mov
mov
add
or
mov
lea
jmp
lcall
ficomps
inc
dec
pop
jle
xor
sbb
adc
sbb
or
cmpsl
sub
bound
ret
xchg
aad
jg
into
pop
movl
mov
clc
dec
cld
xor
xchg
scas
cmc
jmp
xchg
das
stos
es
add
jecxz
add
xlat
cmpsb
hlt
pop
fdiv
xor
push
clc
shll
fdivrs
jge
xchg
lahf
hlt
add
test
dec
sarb
mov
xorb
popa
es
adc
cmp
push
dec
cmpsl
pop
pusha
mov
lahf
fwait
or
or
xor
mov
fsubrl
in
lea
mov
mov
xor
test
movsl
out
cmp
insl
jp
faddp
add
inc
pusha
pop
jge
pop
and
pop
movaps
inc
add
mov
pop
test
lret
pop
cmp
test
ja
mov
insb
xchg
push
and
scas
xchg
repnz
pop
fmuls
push
xlat
int
fadd
aam
rcl
add
jns
push
mov
sbbb
ret
test
push
lock
movsb
and
js
popf
ret
pop
fisubrs
icebp
adc
mov
dec
xor
andl
fcmovnb
shrb
push
push
sub
xchg
fs
outsb
lret
dec
ss
fistl
scas
loop
mov
hlt
dec
ss
or
mov
ss
jmp
cwtl
or
jecxz
mov
jl
mov
xor
sub
mov
loope
sbbl
cmp
insb
shlb
rol
push
mov
xchg
cmp
popa
mov
or
popf
data16
lret
or
or
mov
mov
gs
jmp
pop
lock
cmp
push
mov
mov
mov
cmpsl
fisttpll
paddsw
or
mov
jb
lahf
gs
mov
les
cmp
xor
mov
stos
lret
jecxz
pop
in
jmp
adc
push
cmp
xor
pushf
and
jb
sbb
sbb
loope
dec
lret
add
fildll
int
lds
pop
cmp
roll
xlat
ja
pop
sti
dec
mov
js
mov
cmp
xchg
in
sub
icebp
mov
je
pop
idivb
pop
insb
mov
icebp
rcrb
inc
push
dec
out
xchg
sahf
clc
in
loopne
test
pop
lods
and
push
cmp
xchg
fcmovb
add
vpmacsww
push
pop
push
loope
je
sahf
jnp
aad
push
pushf
ffreep
lods
inc
insl
jbe
loop
or
ror
jle
popf
pop
mov
cld
mov
or
stos
pop
and
adc
pop
shlb
repz
inc
test
dec
inc
sbb
fs
stos
rep
js
mov
mov
mov
adc
jnp
test
pop
mov
jae
add
in
adc
filds
test
or
add
mov
test
mov
lds
stos
jae
jns
lods
push
lret
out
test
mov
sub
bound
fs
push
cmp
daa
adc
test
movsl
test
ja
mov
movl
movl
mov
mov
and
xor
jmp
out
icebp
aaa
insb
aaa
sub
mov
or
sbb
fmul
mov
or
sub
push
sub
push
jle
mov
stos
and
decl
mov
dec
out
xchg
cmp
arpl
sahf
adc
xchg
add
pop
out
mov
insl
call
pushf
decl
inc
std
sqrtps
jp
test
lock
jne
jge
add
dec
inc
in
or
cltd
into
pop
cmp
jp
fmull
push
mov
or
mov
fwait
shlb
mov
inc
jo
fst
es
adc
fsts
stos
movsb
test
pop
pop
mov
pop
adc
inc
sbb
mov
adc
lret
cs
out
test
stos
incb
mov
js
pop
and
pop
mov
cs
mov
addr16
xchg
dec
scas
fisttpl
aaa
aaa
lahf
sub
xor
stc
mov
rcr
hlt
repnz
popf
pop
mov
int3
adc
xchg
xchg
push
outsb
inc
adc
sub
push
popf
inc
mov
addb
pop
sub
sahf
icebp
dec
es
daa
in
fmul
xor
cli
xchg
and
out
sbb
rcrb
shrb
push
dec
cld
js
flds
jge
dec
iret
sub
fisttps
jp
sbb
fdivrl
out
add
pop
sub
adc
int3
das
adc
mov
mov
test
movsb
test
sbb
xchg
pushf
aad
dec
std
cld
push
jmp
imul
sub
out
mov
out
sub
pop
xor
popa
call
xchg
pop
inc
sbb
ret
imul
int3
inc
ja
push
or
sbbb
jno
subl
aam
push
pop
jno
daa
repnz
test
sub
cmp
or
jbe
lahf
mov
dec
xchg
adc
add
push
push
addb
sbb
dec
lahf
push
aad
inc
rclb
or
jmp
icebp
addl
in
scas
ret
lret
std
repz
subb
jmp
xchg
and
jmp
and
es
shld
add
dec
ror
inc
loope
mov
pop
adc
cmp
dec
jle
xchg
loop
jl
inc
mov
sub
nop
icebp
rcrb
mov
je
xchg
mov
movsb
dec
pop
loopne
jle
mov
push
pushf
icebp
dec
jne
add
xchg
push
inc
xor
inc
sub
mov
xchg
cmp
sbb
add
arpl
mov
xor
lea
int3
fmuls
sub
inc
inc
cmp
cmp
dec
dec
fisubrl
jns
cmp
lcall
mov
lcall
sbb
xchg
adc
adc
je
push
aam
int
push
xlat
inc
or
in
je
adc
shll
pop
cltd
outsl
xor
jp
fucomi
repnz
mov
lea
xchg
testl
adc
pop
push
push
dec
subb
cmp
jno
jne
sbb
lret
int
lea
shrb
pop
pop
xchg
mov
in
int3
fdivrs
dec
xchg
std
xor
and
mov
adc
int3
divb
inc
add
sbb
lea
mov
movl
movl
mov
xor
push
pop
div
jmp
jb
pop
in
sbb
push
lret
rcrb
and
push
sbb
xor
sbb
pop
sub
mov
pop
jle
xor
stc
mov
jbe
sub
mov
in
jecxz
push
adc
jp
or
xor
dec
mov
jle
jbe
xchg
dec
push
lret
xchg
mov
out
mov
imul
or
mov
add
rol
sub
testl
mov
xchg
lock
mov
sti
scas
movq
mov
jecxz
in
pop
xchg
add
mov
sahf
push
jl
out
jnp
mov
mov
outsb
mov
inc
push
xor
inc
lahf
mov
jbe
or
xlat
adc
sub
in
jmp
push
mov
xor
adc
fstpl
in
cs
mov
jmp
cmpsb
mov
cltd
add
fstps
fs
stos
jle
mov
test
jge
loop
push
ja
adc
mov
mov
mov
mov
mov
ljmp
popf
sub
mov
pop
inc
outsb
int
out
inc
jp
adcl
ljmp
imul
push
insl
fstpt
out
push
xor
ret
and
inc
inc
das
inc
cmp
lds
xor
xchg
mov
pop
daa
pushf
push
inc
fcomp
shrl
cmpsl
xor
cmc
mov
lock
and
adc
cld
cmp
mov
fimull
fmull
aaa
loopne
cmp
outsb
fcmovb
sbb
push
cmp
popf
jmp
xchg
lods
push
push
out
in
add
mov
cmpsl
test
sbb
mov
cmp
lret
aas
movsb
daa
push
loopne
adc
loop
fneni(8087
push
addr16
sbb
int
jp
mov
int
push
mov
testb
sub
mov
cmpsb
inc
inc
mov
push
pop
jae
push
test
bound
insl
mov
xor
mov
mov
pusha
inc
dec
adc
and
movsl
push
cmp
data16
aad
outsb
int
pop
push
lret
mov
push
stos
jmp
pusha
or
jl
in
mov
push
mov
out
in
leave
sbb
cmpsl
jno
fadds
cld
data16
ds
stos
pop
std
sub
jle
push
mov
enter
add
mov
fs
je
and
insl
add
insl
mov
lcall
fwait
testl
out
xchg
or
sbb
pop
arpl
xchg
out
jg
fadd
add
stos
jae
push
mov
mov
sbb
and
mov
sbb
xchg
outsb
or
pop
stos
clc
pop
inc
pop
xor
and
add
jp
out
jo
std
add
and
jnp
ret
hlt
lods
mov
rcl
les
push
cli
push
pop
arpl
jl
loope
jmp
ficoml
repnz
add
cmp
popa
fistpll
in
inc
jnp
fdivrl
mov
shl
jno
jecxz
adc
xchg
pop
scas
adc
mov
adc
and
testl
xchg
gs
fs
inc
add
inc
adc
leave
push
push
pop
mov
or
add
mov
lahf
mov
jg
outsl
xor
addb
dec
cld
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
jmp
fmull
fiaddl
clc
push
cmpsb
pop
stos
mov
sbb
xor
sbb
mov
rol
xor
into
cld
lds
add
cs
cltd
cmovge
or
adc
pop
sbb
mov
in
mov
outsb
xlat
les
jnp
shl
pop
loope
sbb
add
out
lods
and
mov
fisttpl
adc
ja
repnz
stos
fs
cmpsb
xlat
sub
pop
insl
popa
test
push
pop
mov
push
adc
in
inc
xchg
nop
push
inc
hlt
cmp
mov
sbb
sbb
xchg
rorl
mov
sub
cmc
js
stc
ja
pop
and
test
insl
xor
in
nop
dec
dec
aaa
jmp
and
inc
inc
cltd
fs
mov
inc
jb
xchg
and
pop
mov
inc
mov
loopne
sti
inc
mov
mov
inc
leave
push
mov
popa
scas
xchg
test
movb
fwait
pop
adc
cmpsb
jae
cmp
cmp
fisttpll
sahf
das
jge
mov
mov
mov
push
std
fs
jo
xorl
xor
jle
lahf
mov
mov
imul
and
mov
insl
xchg
loope
mov
add
sub
cmp
lret
hlt
add
xor
or
lea
jl
xchg
push
sub
sbbl
cmpsb
in
cmp
xlat
mov
ret
dec
adc
mov
dec
and
sbb
cmp
pop
mov
and
mov
pop
scas
sar
dec
xlat
adc
dec
notb
dec
inc
das
cmpl
jbe
cmpsl
ficomps
lock
movsb
test
push
ror
sti
divl
xor
loop
dec
jnp
mov
push
jno
add
les
outsb
jle
jbe
xchg
cltd
out
mov
cli
rorb
in
mov
mov
and
mov
insb
cmp
cmp
and
imul
dec
outsl
cld
arpl
dec
lahf
pop
mov
mov
in
dec
mov
and
ffreep
fimuls
fwait
push
dec
cmp
cmp
dec
push
pushf
test
nop
outsb
xlat
jbe
mov
outsl
push
push
rcr
xor
add
movsb
in
add
inc
or
cmp
push
mov
mov
test
sbb
insl
gs
push
and
rolb
dec
xchg
fnsave
sub
outsb
mov
xor
xor
in
out
mov
inc
lahf
mov
ss
in
enter
adc
popf
inc
adc
inc
enter
js
mov
adc
push
jo
jnp
xor
mov
mov
sti
dec
sub
xor
out
imul
xor
cmc
cmpsl
push
clc
imull
cmp
add
push
xchg
js
xlat
mov
test
dec
filds
in
stc
popa
imul
jg
int
jmp
jecxz
arpl
int
add
or
push
jae
push
out
xor
cmc
add
or
push
les
push
dec
jmp
add
inc
push
faddl
call
cltd
testl
cmp
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
jmp
xchg
fistl
sbb
sbbb
sbb
push
mov
sbb
xchg
pop
xchg
es
shrl
and
adc
aas
js
mov
dec
jb
call
cli
or
scas
xor
je
int3
in
xchg
sar
inc
rcrb
sbb
mov
daa
int3
cmp
pop
ja
cwtl
jecxz
jl
bound
xlat
inc
adc
fstpl
stos
mov
fcos
bound
fldenv
stc
js
cmp
mov
popl
or
ffreep
inc
or
adc
mov
sbb
jp
jmp
mov
add
sbb
lret
mov
loopne
jae
std
adc
sti
add
mov
jl
leave
pushf
outsl
pop
ja
jbe
in
cmpsb
mov
je
add
adc
cmpsl
push
jecxz
push
stc
xchg
xchg
movsb
rcr
sub
stc
sahf
filds
pop
ret
mov
mov
and
sub
adc
cmpsl
mov
ss
cmpsl
jne
movsb
ret
inc
test
xor
lock
insl
outsl
cmp
daa
pop
out
repnz
cmp
enter
imul
or
shlb
into
xor
test
mov
dec
dec
cli
mov
hlt
adc
fidivl
inc
push
push
out
jp
subb
or
aad
sbb
movsl
enter
mov
dec
pop
sub
jp
rcl
push
hlt
ficoml
or
cmc
fs
and
mov
js
imul
rclb
jno
add
pop
call
fcompl
lret
and
into
inc
rorb
leave
sbb
mov
daa
and
idivb
sub
cmp
push
lcall
lods
dec
xor
xchg
cwtl
js
iret
sub
cmp
jno
mov
pcmpeqd
imul
lea
mov
xlat
pop
sub
data16
push
mov
pop
xchg
ficomps
cmp
mov
test
call
lea
sbb
xchg
cld
fisttpl
dec
imul
fwait
lods
add
xor
idivl
in
cmc
in
insb
push
xor
add
xlat
jmp
sti
ret
ds
lret
xchg
cmp
sar
insb
mov
jge
jne
pop
ss
stos
jle
in
mov
sbb
sbb
inc
xor
cli
mov
xor
mov
xor
mov
xchg
hlt
push
sti
fsubl
add
popf
xor
fcmovb
mov
mov
shl
std
xchg
xchg
gs
loopne
xor
or
cmp
jmp
fnstsw
xchg
rorl
xchg
pop
push
ds
jbe
xchg
mov
jb
lret
sbb
adc
aas
imul
xchg
push
aad
mov
addr16
sub
cmpsl
mov
cmc
in
xor
inc
es
jno
push
shrb
push
xchg
jns
jge
xlat
cmpsl
cmc
lea
jl
push
mov
dec
rcl
jmp
int
jne
or
mov
cld
jecxz
test
pop
add
jne
icebp
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
jmp
mov
push
sbb
sbb
cmc
cmp
je
stos
loope
sbb
xor
sbb
add
sub
stos
lods
adc
add
adc
push
jns
insl
or
jp
pop
shll
inc
mov
popf
mov
imul
insl
sti
loop
loopne
xlat
cmp
sbb
pop
mov
lahf
mov
out
pusha
cs
sub
pusha
mov
cmpsb
mov
pusha
sub
push
adc
dec
cs
jno
in
mov
es
push
in
xchg
call
data16
stos
popa
fistpll
std
ret
sbb
jns
mov
mov
pop
mov
pop
sub
jb
add
movsb
enter
sbb
or
lods
movsb
daa
js
or
in
xchg
pusha
lods
or
fcomps
popa
xchg
test
sbb
add
popl
and
pop
inc
jne
in
xchg
mov
xchg
rcrb
and
xor
fsubl
dec
fldcw
lods
jns
movsb
ljmp
subl
add
stos
ljmp
into
jo
xchg
pop
test
arpl
push
daa
and
flds
or
sbb
mov
push
add
sbb
ja
sbbb
jge,pn
push
push
pop
leave
jne
orb
int3
popf
pop
mov
inc
push
into
xchg
jno
xchg
in
stos
dec
jo
jg
mov
je
xchg
addr16
dec
hlt
fs
call
divb
stos
roll
clc
jle
fcmove
dec
push
mov
pop
adc
mov
scas
jmp
repz
in
es
pushf
popa
in
aad
jl
repnz
out
cmp
loope
push
inc
in
cmp
inc
cli
push
stc
xchg
ljmp
cmp
sbb
loopne
cltd
xchg
jp
push
pusha
popf
xchg
stc
adc
sub
jae
test
fs
or
movsl
inc
xor
clc
sub
pop
ds
xchg
ret
cld
inc
rcl
aas
mov
sbb
je
jne
in
xor
hlt
daa
test
cmc
cs
mov
lahf
jge
pop
push
or
and
pop
call
outsb
addl
and
dec
sti
jmp
jo
into
jnp
xchg
mov
loope
push
xchg
push
jecxz
xor
xor
out
add
icebp
imul
sub
std
loope
call
sahf
dec
inc
push
mov
and
scas
aas
iret
sbb
mov
movsb
rcrb
fs
dec
add
or
xor
enter
push
pushf
mov
fucom
sub
ja
mul
div
aam
psubd
pop
or
mov
add
pop
rcr
dec
jns
out
and
add
fcoms
and
pop
pop
adc
test
sub
xor
inc
jge
mov
mov
xchg
imul
mov
add
leave
mov
mov
daa
pop
out
outsb
out
add
mov
sub
mov
rcrl
mov
fs
sbb
xchg
addr16
mov
daa
dec
xchg
pop
sub
repnz
xor
inc
adc
outsl
fisubs
mov
push
jns
daa
movsb
adc
and
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
jmp
cmp
mov
xor
data16
sbb
test
aaa
push
loope
enter
mov
fwait
mov
rcrb
pop
mov
outsb
cmp
aaa
loopne
and
cmova
jle
imul
iret
mov
sbb
jns
jmp
xor
sbb
pop
jecxz
xchg
imul
ja
mov
push
test
pushf
aad
push
inc
es
out
test
add
jecxz
mov
adc
jl
mov
out
cmpsb
data16
jmp
shll
rcll
rcll
push
pop
cmp
lods
xchg
sub
cmp
bound
andl
scas
mov
inc
lcall
mov
adc
test
pop
fsubs
les
mov
mov
pop
fmull
push
scas
or
jle
cmp
inc
mov
mov
push
sti
cld
lar
repz
cmovae
dec
gs
xor
jle
es
jge
xlat
xchg
inc
int
fldenv
xchg
mov
aam
add
addr16
or
ljmp
fs
imul
sbb
daa
push
or
mov
adc
mov
cmp
adc
dec
shlb
sub
ficoml
inc
sub
inc
pop
pop
dec
lock
xchg
jno
adcl
and
clc
mov
shl
push
je
add
cltd
enter
dec
mov
shlb
inc
inc
and
daa
enter
sahf
push
mov
addr16
aad
cmp
add
adc
add
fmulp
aaa
roll
mov
shrb
dec
aaa
cmp
jp
xor
inc
push
push
or
inc
dec
sti
add
jb
sbb
jno
loop
mov
jne
stos
inc
std
scas
cmp
loope
xor
mov
xor
push
fildl
mov
pushf
or
mov
arpl
fwait
fwait
sbb
std
sub
push
push
movl
movl
movl
movl
movl
movl
jmp
mov
xor
movsl
mov
mov
sbb
out
mov
enter
adc
aas
sub
stos
xlat
loope
and
push
insl
test
or
loope
jns
in
enter
xchg
ret
pop
aaa
fisubrl
stc
mov
test
jge
cmp
mov
xchg
xor
xlat
lods
loopne
mov
jge
rcll
adc
fbld
pop
xrelease
scas
pusha
sbb
enter
lock
leave
insl
mov
xor
addl
test
mov
mov
or
mov
repnz
nop
lods
movsb
xchg
xor
or
rcrl
mov
add
cmp
gs
shll
sahf
arpl
adc
mov
inc
mov
in
jo
in
push
mov
pop
sbb
jns
mov
cli
xchg
in
sbb
mov
popf
insb
jge
dec
mov
sub
cs
dec
cmp
sub
dec
cs
mov
fiaddl
daa
push
sahf
jb
sbb
push
mov
and
push
dec
lret
or
adc
filds
xlat
xchg
fiadds
imul
cmp
lock
shl
leave
fcompl
stc
jne
insl
sub
std
fidivrs
jb
imul
fildl
and
or
inc
xlat
push
inc
xorb
or
mov
sbb
pop
jns
push
mov
fnstenv
cmc
nop
in
xor
lret
pusha
pushf
shl
daa
jmp
pop
mov
hlt
addl
xchg
pop
jle
jecxz
xor
out
xchg
rcll
movsl
xchg
movsl
mov
popa
push
out
mov
sbb
push
sbb
ret
xchg
push
adc
jb
mov
mov
xchg
cmp
dec
xchg
popf
pop
stos
mov
sub
mov
add
out
mov
push
sub
out
js
push
arpl
hlt
pop
dec
inc
mov
jae
cltd
pop
enter
dec
push
dec
sbb
inc
inc
leave
mov
cltd
lahf
cmc
outsl
mov
add
jne
in
mov
cmp
xor
push
popa
mov
sahf
push
mov
mov
mov
mov
push
jmp
sub
and
jb
push
stos
xchg
bound
sbb
xor
xor
mov
sbb
lds
mov
insl
inc
or
outsb
xchg
mov
add
imull
daa
shr
filds
insb
jnp
push
out
lret
dec
ja
popa
ds
cmpsb
lcall
or
fs
iret
aam
rcrl
test
sbb
in
ret
nop
fidivrs
pop
out
fxch
cmp
jmp
test
cmp
addr16
insl
jne
mov
jg
rorb
in
inc
mov
sbb
ret
ja
adc
nop
pop
lea
nop
jle
adc
shlb
movsb
mov
jno
sahf
sbb
adc
sub
shrb
lods
jge
in
cli
mov
dec
inc
mov
mov
pop
outsl
mov
movsl
test
mov
mov
pop
dec
push
mov
fdivrl
jle
dec
inc
mov
sahf
lret
fsubs
notl
mov
xchg
andb
cld
aas
andl
push
testb
mov
sbb
scas
repz
jae
adc
aam
pop
invd
push
clc
filds
dec
popf
mov
sbb
push
xor
mov
and
add
les
fs
pop
jmp
inc
push
push
sub
int3
scas
fs
dec
or
imul
jo
test
cmpsb
jp
xor
sub
jns
dec
adc
cltd
addl
sub
leave
sbb
fiaddl
sbb
icebp
gs
pop
mov
pop
mov
xor
inc
je
pop
and
inc
in
bound
ljmp
or
jno
adc
mov
ret
stc
test
jno
jne
ds
mov
and
out
xor
ds
dec
mov
sub
and
xchg
xchg
xchg
int
cwtl
pop
ljmp
push
mov
mov
xchg
mov
or
cmp
hlt
xor
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
jmp
leave
xchg
dec
sub
sub
mov
add
test
adc
sbb
mov
cmp
xchg
sahf
mov
sub
out
cmp
xchg
daa
clc
xchg
jle
rcr
cmp
jmp
and
mov
lss
daa
jns
sbb
aad
rorb
xchg
fs
pop
andl
popf
leave
fwait
movsb
jbe
cmpsb
or
icebp
xlat
cmp
fldcw
fwait
cmpsl
cli
addr16
sub
jmp
sarb
adc
adc
orl
mov
pop
jno
push
ficoml
pop
sbb
loop
cmp
xchg
sub
xchg
inc
inc
xor
mov
jecxz
mov
xchg
call
sub
sahf
xor
scas
add
mov
ja
cmp
icebp
std
and
mov
sub
fisubrs
inc
pop
mov
test
insl
loop
in
insb
scas
xchg
icebp
cmp
and
aaa
out
inc
scas
or
push
xchg
pushf
jns
sub
inc
mov
xchg
mov
mov
lock
mov
mov
mov
jae
shrl
dec
fcomps
xlat
cmpsl
pop
sub
and
ja
lret
and
dec
test
lock
xor
push
jo
fcmovnb
mov
or
add
jnp
imul
imul
and
pop
in
cmp
cltd
add
cli
sbb
sub
into
inc
and
data16
push
ss
dec
adcb
mov
negl
inc
xor
subb
gs
inc
cmp
dec
inc
cmp
je
test
mov
insb
psllw
lahf
scas
rcll
jb
jnp
cmp
enter
out
jns
scas
andl
cmp
cmp
int
add
int3
sbb
inc
insl
and
test
aaa
pop
add
sub
cmpsl
call
push
adc
shlb
mov
inc
les
into
mov
mov
xor
add
or
add
jge
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
jmp
insl
jmp
cwtl
xchg
popf
pusha
outsl
mov
jecxz
mov
cwtl
sbb
test
xor
xor
repnz
test
stos
add
sbb
scas
imul
stos
bnd
add
negb
cld
add
push
mov
stc
jnp
xor
push
gs
iret
stc
rclb
jns
fmull
pop
arpl
les
icebp
sarb
mov
pop
fnstsw
cmpsl
stos
xchg
outsl
cmc
jle
xchg
mov
incl
lret
addl
insb
xchg
fwait
jb
cmp
pop
push
fstpl
inc
test
or
pop
pop
pop
outsb
std
fisubl
fdivrp
clc
loop
dec
pop
and
popa
add
test
inc
push
jb
adc
cmpsb
dec
dec
dec
rorb
jbe
lcall
dec
pop
in
sub
arpl
sub
xchg
cli
insl
stos
out
mov
fiadds
xchg
cmp
dec
mov
loop
es
pusha
inc
int3
test
and
cmc
in
mov
pop
pushl
xor
adc
hlt
pop
inc
pop
lods
jmp
es
push
iret
bound
lcall
adc
jno
add
imul
fstps
scas
imul
pushf
rorl
gs
mov
jecxz
dec
movsl
loopne
jno
mov
lahf
xor
xor
add
jg
push
out
dec
jg
fidivrl
mov
cmpl
orl
imul
outsb
out
xchg
and
jg
inc
scas
mov
pop
pop
adc
cmp
test
push
mov
dec
and
sub
or
mov
out
add
pop
xchg
testl
jb
aad
pushf
fldl
lret
add
shll
in
inc
test
scas
pop
cli
sub
inc
xor
xor
dec
rolb
dec
je
test
xchg
dec
mov
out
mov
sbb
inc
push
ret
or
out
popa
xchg
dec
repz
mov
mov
inc
xchg
pop
shrb
pop
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
jmp
push
xchg
mov
and
int
mov
enter
test
xchg
dec
sub
jno
arpl
dec
loopne
mov
pushf
inc
mov
int3
call
sbb
fistps
mov
mov
ljmp
loopne
dec
jp
das
or
pop
pop
sub
shrb
and
in
test
mov
xor
ret
test
fisttps
xchg
sbb
adc
sub
sub
pop
lcall
rolb
pop
xchg
nop
pop
push
jg
test
loope
cs
jae
or
popf
ret
xchg
adc
aad
es
jbe
push
test
mov
je
jb
data16
xchg
or
mov
push
out
aam
rcrb
cmp
mov
sbb
in
mov
ret
mov
enter
adc
mov
out
fs
aas
sbb
dec
dec
int3
test
fmull
mov
xchg
iret
sub
outsb
inc
xlat
into
loop
jmp
and
or
push
lea
movsb
and
jge
aaa
jmp
adc
mov
and
dec
adc
loopne
jmp
pop
add
jle
pushf
sub
fwait
rolb
mov
into
add
push
stc
or
or
aas
xor
fwait
iret
or
nop
dec
iret
xlat
icebp
xchg
mov
xor
sub
or
out
cwtl
das
popa
xchg
stc
pop
mov
out
pop
mov
sarl
or
xor
fdivrl
push
mov
arpl
repnz
iret
cmp
push
lcall
sub
push
scas
aad
sarb
push
daa
mov
sbb
in
das
leave
movsl
aaa
fildl
cmp
mov
nop
ret
insb
popa
idivb
stc
fadds
push
inc
test
adc
jp
jb
pand
nop
pusha
icebp
jle
psubd
dec
cwtl
movsl
pop
shll
frstor
out
mov
sbb
jno
in
fadds
in
cmp
mov
mov
cmpsl
dec
push
data16
and
icebp
mov
xor
or
jmp
push
and
mov
mov
test
hlt
add
stc
gs
jg
mov
xchg
adc
stc
push
ret
pop
jb
loop
popa
cld
and
and
add
scas
lret
cld
les
aas
jbe
dec
das
add
gs
ljmp
and
xchg
ret
fstpt
fdivr
sbb
and
aas
and
push
loop
call
repz
push
mov
arpl
mov
sarb
pop
shrb
unpcklps
push
in
call
jns
xchg
das
add
pop
lds
cmp
cltd
aaa
and
push
mov
inc
outsl
sub
pushf
rcrb
push
jp
loop
stc
shlb
rol
fwait
cmp
outsb
ss
fbstp
xor
lock
inc
lods
int3
cmp
ret
cmp
mov
inc
pop
inc
pop
mov
fnstcw
cmp
ja
push
rclb
int3
mov
aaa
and
pop
mov
dec
or
jle
mov
sbb
lret
popf
jb
insl
or
js
xlat
mov
test
outsb
mov
test
jle
ds
stos
sub
push
popf
adc
cmp
push
outsw
mov
int3
mov
icebp
jmp
das
sbb
lahf
test
jle
sub
xor
lret
mov
sbb
mov
sbb
adc
cmpsb
cmp
inc
nop
jge
xchg
inc
or
sbb
add
shl
push
push
mov
jne
push
in
pop
mov
dec
lret
das
fs
imulb
cmp
das
jb
shlb
loop
pop
lock
pop
adc
pop
outsb
aam
add
dec
out
dec
loope
push
test
sbb
inc
lds
xchg
and
xchg
aas
arpl
push
dec
xchg
dec
inc
pop
cmp
in
cmp
mov
adc
mov
mov
scas
pop
dec
lcall
lcall
mov
lret
dec
and
xorl
add
lret
and
lcall
jle
push
xor
icebp
imul
or
inc
inc
hlt
jg
add
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
bound
and
lds
popa
jo
mov
sbb
cmp
or
push
popa
popa
add
or
call
xor
inc
or
jo
repz
notl
cmp
jnp
jno
fldl
xchg
xchg
add
in
mov
pusha
inc
or
fimull
hlt
xor
jbe
lret
dec
test
jbe
mov
insb
pop
pop
shll
add
jns
mov
stos
jp
shrb
inc
lock
mov
jmp
out
or
add
out
rorl
fcomi
dec
in
jg
push
hlt
and
outsb
xchg
jo
fcmovnbe
movsb
insl
in
aaa
cmpsl
sbb
out
mov
and
pop
lcall
inc
or
jne
je
mov
lods
inc
hlt
jo
jne
fbstp
cmpsl
lods
cmp
jp
push
outsl
sub
mov
inc
es
cmc
das
test
xor
fs
or
test
test
je
subl
lahf
iret
inc
pop
movsl
movsl
cmpsl
stos
repnz
adc
and
mov
mov
or
add
clc
pop
jbe
push
fs
xor
mov
cmp
add
ds
lds
jmp
loope
push
jbe
cmpsb
jns
mov
xlat
lods
sub
and
or
pop
fucom
repnz
push
add
int
jns
dec
and
cli
mov
sub
scas
jnp
scas
pop
in
xor
xor
adc
add
xchg
hlt
xor
aaa
stos
popa
xor
test
loop
push
cltd
jg
mul
mov
inc
mov
adc
in
xchg
pop
inc
sbb
scas
das
sbb
push
mov
in
and
cmp
pop
pop
add
hlt
xchg
cmp
push
push
adc
push
mov
mov
popa
inc
stos
pop
popf
adc
mov
xchg
cmp
aad
inc
push
aad
jns
ret
inc
into
aam
add
cmp
aam
std
hlt
and
jno
and
nop
out
lea
iret
xchg
hlt
sub
mov
add
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
dec
mov
aam
movsb
sub
bound
stos
jns
sbb
jns
sbb
pop
and
sub
repnz
call
xor
fdiv
out
xchg
jnp
jns
hlt
xlat
loope
dec
pop
mov
push
mov
xchg
xchg
jne
lahf
scas
xlat
cmp
aam
movsb
in
or
xorl
or
shrl
push
lret
jo
cltd
pop
mov
and
loopne
clc
inc
shrb
addr16
iret
test
mov
lret
int
loopne
std
das
xor
push
pop
sbb
sub
enter
jns
mov
mov
test
aas
movsb
cmp
add
xor
pop
rcr
pop
cmp
sbb
bound
std
loopne
data16
outsl
mov
xor
aas
mov
fdivs
or
adc
sahf
adc
xchg
sbb
xchg
inc
divb
inc
test
jo
xchg
ror
mov
scas
lret
in
in
pop
or
and
std
addl
rcr
insb
xor
xor
jl
sti
jbe,pn
xor
sbb
sbb
mov
imul
aas
push
and
jns
fisttpl
sarb
mov
movsl
mov
cmp
sbb
loop
jle
pop
mov
adc
aas
lcall
cltd
int
jo
jmp
fxtract
pop
sub
adc
jl
xchg
xchg
out
out
mov
movsb
mov
call
cmp
iret
aaa
xor
xchg
jo
lock
ljmp
inc
mov
sub
rcrl
repnz
xchg
adc
sbb
adc
sub
inc
jae
rcrl
jnp
pushf
aam
aaa
fucomip
inc
hlt
fiaddl
ret
xor
cmc
movsl
dec
ficoml
lock
sarl
shll
out
sbb
lods
shrl
lds
jae
in
dec
cmp
fisttps
das
cli
sbb
aad
stos
cmp
or
ja
enter
lahf
jl
test
mov
loopne
scas
loopne
in
xor
sub
mov
loope
lods
scas
mov
adc
mov
mov
shll
adc
lret
lods
nop
inc
dec
cmpsb
push
mov
push
loopne
insl
jle
push
ret
into
xchg
into
cmp
nop
mov
mov
mov
test
fsubrs
test
push
pop
shlb
mov
mov
mov
orl
push
insl
mov
push
jno
cli
sub
xor
xchg
jbe
test
jo
xchg
in
xchg
cmp
pop
cmc
and
fiaddl
das
pop
mov
xor
sub
cli
popf
xlat
adc
xchg
addr16
xlat
xor
xchg
mov
into
out
xlat
rol
addl
xor
mov
sarb
daa
mov
dec
mov
sbb
adc
mov
sub
in
loopne
fistpll
adc
jno
dec
sub
pusha
pusha
outsl
or
fisttps
sbb
repz
sti
push
stc
cmpsb
push
xchg
icebp
xor
xor
movl
jmp
into
jne
inc
sbb
pop
clc
push
repnz
sbbb
jns
sbb
xchg
test
int
push
test
adc
lret
mov
imul
adc
xlat
xor
aam
pop
lahf
mov
insb
mov
pop
dec
ret
movsb
xor
mov
cwtl
xor
jnp
int3
mov
insb
push
lcall
mov
sbb
xchg
sbb
xchg
xchg
and
mov
xor
mov
add
push
mov
movsl
cmpsb
mov
mov
into
out
jb
cmp
adc
cli
xor
aas
mov
js
adc
xchg
in
mov
or
punpcklwd
adc
jb
imul
testb
fmul
pop
lock
stc
jge
pop
dec
incb
pop
adc
mov
fisttpll
call
jnp
sub
cs
in
push
jnp
jbe
das
mov
mul
jle
jb
fmul
jno
jg
lcall
adc
cltd
dec
mov
repz
dec
sbb
clc
lock
les
cmpsl
mov
pop
mov
cld
sarb
fsubrl
mov
add
scas
push
lock
add
xor
cmpb
sub
sub
adc
lock
push
mov
pop
call
sahf
push
ret
les
jo
or
pop
insb
adc
sub
xor
xchg
cmp
pop
inc
sub
mov
shrl
addb
in
lret
in
decl
je
std
loope
adc
ficomps
call
mov
test
mov
sahf
inc
scas
aam
mov
pop
in
pop
jnp
outsl
mov
push
xchg
out
scas
pop
mov
sub
and
movl
mov
enter
add
nop
lds
test
scas
jb
out
inc
loopne
pop
divl
pop
xchg
dec
sub
lock
sub
push
mov
adc
xchg
pop
xor
push
leave
shl
cmp
dec
sub
add
pop
in
mov
mov
addl
cltd
lahf
into
out
repnz
mov
and
adc
inc
mov
out
cmp
sub
int3
lods
aad
insb
fistpll
rol
fildl
mov
pop
mov
push
xor
aas
mov
and
mov
fmulp
mov
orl
mov
push
xor
and
leave
xchg
fdivl
mov
cli
sahf
cmpsl
mov
jecxz
jle
rorb
push
push
inc
push
data16
cmp
xor
adc
inc
pushf
jb
or
add
cltd
inc
mov
sub
lret
shr
bound
jne
cmc
sub
cltd
cwtl
scas
inc
xor
sahf
neg
int
inc
loop
cmp
in
inc
or
dec
outsb
fdivs
repnz
dec
int
imul
push
subb
pushf
pop
mov
pushf
das
popf
push
mov
jne
lods
sub
mov
ljmp
adc
fwait
mov
bound
xchg
jo
std
pop
scas
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
jmp
das
ret
pop
sub
ret
xchg
mov
cmp
sbb
sbb
sub
dec
xchg
pop
and
stos
push
outsl
arpl
es
or
shl
mov
lods
xor
in
ljmp
jecxz
push
jmp
out
fdivrp
sub
mov
xchg
aas
jecxz
iret
xchg
xchg
lcall
sbb
out
fsub
aaa
mov
push
test
dec
andl
pop
mov
jae
insl
out
into
cli
push
dec
daa
stos
fcompl
jmp
mov
mov
lea
add
aaa
dec
ret
mov
repz
loop
mov
sahf
inc
sbb
into
mov
outsb
add
popf
jle
pushf
es
das
adc
cmp
jle
out
push
stc
aad
movsl
lea
lret
test
addr16
inc
leave
mov
aam
dec
xchg
or
pop
sbb
sub
dec
outsl
insl
pop
mov
imul
cld
inc
jb
sbb
dec
or
repz
dec
popl
ja
jl
imull
in
mov
das
adc
test
sbb
add
cmp
lcall
ss
enterw
and
push
jb
sarb
xadd
adc
out
adc
or
mov
pushf
into
add
fiaddl
inc
shlb
dec
mov
xchg
repz
aam
negl
add
mov
test
inc
aad
lock
or
loopne
clc
sub
cmp
repz
cmp
mov
in
dec
in
xchg
mov
mov
jne
inc
imul
xchg
shlb
add
jle
fwait
imul
aas
push
cwtl
cmpl
cmp
mov
ret
cmp
inc
ss
lahf
iret
sti
mov
mov
shlb
push
and
mov
in
divl
lock
cmp
in
jne
adc
and
mov
out
pop
sub
jno
pop
mov
push
xor
add
lock
adc
repz
sbb
mov
loopne
sbb
das
lret
ja
lret
cwtl
lds
int
mov
inc
inc
mov
or
jb
test
fwait
repz
fsubr
push
bound
outsl
jmp
aaa
push
xor
sbb
cmp
or
imul
inc
data16
lods
sbb
loopne
stos
or
int3
and
in
push
nop
insl
test
pop
lods
out
cmc
fsubrp
push
add
cmp
mov
fwait
push
cli
mov
xor
cwtl
xor
das
mov
adc
pop
push
fdivrl
jo
xor
sbb
movsb
jnp
mov
cwtl
and
xchg
pop
scas
inc
stos
ja
repz
fistps
jmp
loopne
test
jae
push
arpl
fldenv
jl
in
dec
push
cld
fcoms
lods
push
scas
mov
jns
fisttpl
lock
jmp
in
push
push
jl
xor
fcmovb
inc
mov
sub
daa
mov
lret
push
adc
push
mov
xor
imul
dec
cmc
test
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
jmp
fs
cmp
cmpsb
dec
adc
cltd
jb
sbb
sbb
xchg
jmp
xchg
out
fs
daa
arpl
and
jo
xchg
pushf
rol
je
adc
fs
jecxz
jg
lret
sub
fsubrl
faddp
loop
push
push
and
clc
out
xor
cmp
ret
test
int3
inc
lock
jecxz
ja
cmp
xor
cmp
and
mov
test
mov
mov
out
popf
mov
xchg
cmpsl
pop
mov
inc
ret
and
dec
adc
or
pop
leave
ljmp
xor
push
dec
mov
inc
inc
xchg
push
cwtl
or
fldcw
mov
aam
jmp
adc
lcall
dec
mov
fistl
add
xchg
or
cmpl
mov
data16
popl
out
popa
add
inc
xor
aad
jno
setne
push
add
imul
push
fisubrs
add
les
out
sbb
pop
out
mov
sarl
inc
popf
xorb
mov
push
adc
xor
jnp
std
pushf
add
cld
movl
lcall
inc
jp
mov
or
pop
push
mov
xor
mov
push
mov
cs
test
push
cmp
lods
mov
lahf
sbb
aam
dec
hlt
mov
fs
data16
sub
mov
addr16
sub
pop
int3
clc
test
lea
mov
lods
jbe
adc
pop
fidivs
enter
adc
push
arpl
rclb
shlb
mov
mov
and
pusha
in
push
das
imul
sub
and
ja
mov
push
jg
out
mov
xor
sbb
out
ss
lret
inc
std
mov
adc
cli
icebp
jnp
loopne
adc
dec
and
sbb
dec
fcomi
dec
das
outsl
lock
dec
adc
mov
scas
sahf
inc
loope
negb
push
dec
jecxz
fnsave
or
adc
sti
out
pop
xor
into
jno
pushf
int
adc
jb
mov
insb
cmp
or
aad
sub
or
sub
sub
movsb
push
and
ret
mov
lcall
xchg
insb
test
cli
push
insb
dec
loop
test
out
adc
sbb
pop
add
adc
push
inc
outsb
sub
xchg
xor
adc
dec
and
icebp
xor
mov
outsb
pop
mov
jp
gs
lret
pop
push
jg
pop
inc
arpl
repz
and
daa
mov
pop
mov
nop
leave
cmpsb
sbb
scas
ret
in
lock
fwait
xor
ja
and
push
adc
dec
pop
push
add
pop
std
sbb
neg
inc
lea
dec
xchg
mov
pop
add
cli
lock
adcb
shlb
xorb
lcall
insb
inc
or
xchg
lahf
not
jae
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
jmp
sbb
sbb
jo
ret
cld
mov
jns
sbb
mov
mov
repz
and
cmp
sbb
lea
xchg
addr16
rcrl
push
popf
adc
add
pop
dec
push
imul
inc
loop
mov
pusha
push
jg
mov
stos
or
push
jb
sti
jle
xchg
scas
movsl
add
push
mov
inc
loop
xor
aad
pop
lock
sbb
push
loope
or
jbe
inc
out
dec
sahf
xchg
mov
mov
ljmp
xchg
cmpsl
mov
inc
into
je
mov
jnp
push
xchg
adc
and
xor
lods
arpl
push
fcmovnu
sbb
inc
pop
and
int3
ss
fs
sbbb
in
repz
mov
loope
mov
sahf
insl
rcl
call
dec
xchg
mov
dec
dec
leave
js
dec
xchg
js
int
sub
pmulhw
daa
mov
loope
loopne
add
scas
mov
push
cld
sub
mov
dec
rcrb
push
inc
pop
mov
hlt
pop
xchg
add
jecxz
cs
dec
xor
xchg
inc
xchg
push
fcmovb
and
pop
mov
sub
sti
in
orl
push
jno
dec
rolb
hlt
push
outsb
sarl
mulb
es
fwait
rolb
pop
sarb
andl
jns
notl
stos
push
repnz
int3
mov
xor
call
push
jge
or
push
cmp
pop
push
cmp
mov
inc
jbe
test
je
mov
test
icebp
sbb
loopne
repz
or
js
sub
jg
jno
lret
jns
and
out
into
repnz
icebp
addb
xchg
into
dec
popw
adc
stc
inc
lret
mov
jg
sbb
lods
stos
in
pop
clc
mov
popf
mov
inc
fdivr
jg
mov
test
sbb
push
stos
mov
adc
in
xchg
cld
pusha
push
dec
sub
sbb
xor
gs
mov
pop
pop
addr16
mov
sbb
mov
movsl
idivb
bound
aad
fcmovne
inc
jg
push
pop
mov
xchg
mov
jp
and
xor
cmp
pushf
mov
add
mov
add
inc
xor
xor
and
xor
lods
fidivs
outsb
pop
es
inc
or
push
xor
scas
cmp
xchg
pusha
sbb
sbb
loopne
sbb
xchg
jge
jae
clc
outsl
or
ret
lahf
inc
jno
movsl
pop
in
adc
dec
dec
inc
ja
mov
ljmp
mov
push
push
xchg
jae
imul
xchg
sub
fwait
xchg
stos
fs
adc
jge
add
cmp
decl
add
das
mov
mov
mov
mov
mov
pop
add
loope
sub
es
or
mov
insl
xchg
cli
inc
pushf
and
cli
fsubl
and
movsb
and
adc
iret
in
lds
fmuls
jmp
testb
dec
mov
data16
push
pop
scas
mov
subl
sub
cli
jb
test
add
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
jmp
adc
xor
inc
mov
sbb
sbb
or
ret
out
inc
iret
lods
jnp
jbe
jle
cmp
push
pop
cli
bound
pop
mov
cltd
and
cmp
sti
xchg
inc
dec
adc
repz
decl
loope
adcb
mov
ljmp
mov
or
push
rolb
shrb
jp
lret
sub
sbb
mov
out
sarb
movsl
push
pop
sbb
clc
inc
sahf
sar
or
enter
cmp
cwtl
sub
shlb
insb
scas
pop
imul
pop
xchg
inc
insb
out
ljmp
test
loop
mov
stc
xchg
mov
push
xchg
jg
push
inc
xchg
inc
adcl
mov
pusha
inc
mov
inc
add
adc
sbb
rorb
xchg
insb
xchg
rol
jg
dec
xor
js
xchg
aaa
adc
test
dec
lcall
push
faddl
call
lahf
es
dec
push
cltd
arpl
stos
push
or
cmp
cmc
xchg
fs
mov
int
test
push
jg
mov
js
ret
cmc
mov
mov
andb
fsub
cmpsb
popf
sbb
hlt
aas
daa
cmpsl
inc
or
mov
add
pop
pop
pop
dec
fstl
ja
cltd
jge
add
mov
insl
sub
pop
andl
iret
and
outsl
mov
cld
inc
mov
dec
pop
xchg
push
lods
jl
inc
in
or
xchg
dec
pop
testb
imul
fstps
clc
es
shrb
jl
das
dec
pop
pop
add
xor
adc
imul
sub
and
ja
fists
es
insb
rcrb
lea
jg
fildl
mov
inc
test
fidivrl
dec
shr
movb
mov
icebp
ret
out
xchg
pusha
jle
mov
push
dec
in
dec
aas
jecxz
movsl
jno
sub
popa
repnz
mov
int
fistpll
repz
je
leave
cmp
push
pop
icebp
test
and
cmp
push
lret
sub
stos
sbb
loopne
add
xorl
pop
add
adc
xchg
in
dec
in
mov
mov
cmp
xorl
pushf
jg
add
outsb
cmp
imul
xchg
scas
xor
xor
bound
xor
adc
and
adc
mov
clc
adc
test
mov
scas
or
mov
mov
dec
mov
jmp
cmp
push
addr16
add
loope
in
movsb
repnz
push
xchg
sbb
das
int3
mov
int3
fimuls
mov
inc
mov
mov
pop
jno
sbb
push
iret
dec
and
cld
jns
push
push
les
jbe
jno
and
xor
adc
rclb
mov
dec
aas
push
mov
push
hlt
jae
xlat
pop
and
xlat
popa
clc
cmp
orb
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
jmp
or
hlt
add
fistpl
mov
stos
fwait
mov
jl
pop
sbb
jns
sbb
ja
int3
loopne
lahf
int3
scas
jp
dec
or
cmp
mov
mov
mov
xor
mov
je
cli
addr16
sub
filds
data16
es
shr
adc
inc
fcompl
aas
sub
and
sbb
movsl
dec
adc
fwait
addps
push
aaa
arpl
or
movb
mov
push
mov
inc
or
loopne
daa
cltd
dec
imul
pop
dec
divl
inc
pop
sbb
lret
cmp
cltd
mov
movsb
jecxz
adc
inc
ds
testb
xor
orl
mov
mov
cmp
sub
sub
sbbb
xor
mov
stos
push
loop
test
enter
pop
fwait
or
enter
mov
ss
and
adc
out
sub
jge
xchg
test
cs
sbb
rcrb
cmp
movsl
imul
add
popa
add
outsl
int
push
jo
mov
mov
nop
inc
xorl
add
inc
xchg
into
or
addr16
test
out
dec
aas
and
cld
nop
inc
xchg
inc
mov
movsl
jl
mov
xchg
pop
lds
scas
icebp
mov
orb
ljmp
inc
mov
scas
cltd
lds
push
lock
inc
push
cmp
cmc
mov
std
mov
testb
ja
push
push
lahf
adc
js
fldcw
ds
jge
stc
mov
push
dec
push
cli
outsb
loope
and
bound
insl
pop
mov
bound
jns
add
shrl
and
dec
mov
insb
push
adc
mov
fs
and
dec
xchg
adc
mov
xor
in
clc
cmp
mov
jo
sbb
jp
iret
jg
leave
fimull
cmp
cmp
shlb
adc
es
shlb
aad
xorl
lea
icebp
xchg
push
sub
ljmp
jno
mov
pop
lret
andl
jmp
lods
cmp
ja
inc
inc
xchg
mov
jae
dec
movsl
into
mov
aas
outsl
cmp
inc
das
stos
in
xor
jo
mov
dec
fidivl
or
scas
pop
fimull
sub
xchg
push
add
les
lahf
ljmp
rolb
scas
jp
loopne
jae
sub
jae
fnstcw
and
lret
sbb
xlat
xor
fildll
je
pop
add
push
jp
in
stos
inc
cli
mov
inc
mov
test
mov
xor
adc
pop
clc
push
push
adc
mov
gs
jb
fisttpl
inc
sub
in
sub
fnsave
fsubrs
jae
and
and
outsl
cwtl
mov
pop
xchg
add
mov
bound
mov
jle
pop
mov
leave
add
test
call
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
jmp
aas
cmpl
mov
std
mov
sbb
sbb
rorb
inc
mov
push
cmp
fucom
pop
or
outsb
hlt
push
sub
test
fisttps
push
jnp
dec
sbb
jae
test
out
mov
mov
xchg
xor
jecxz
inc
xchg
or
repnz
jbe
ja
sbb
jmp
push
jno
or
test
jecxz
push
xchg
int3
scas
jnp
in
je
or
shll
adcb
lea
cld
movsl
push
cmp
jnp
push
and
pop
mov
fs
jne
daa
in
sahf
dec
in
jo
mov
inc
icebp
fcomip
out
mov
scas
sub
xor
test
xor
jmp
push
fcmovnbe
cmp
out
inc
mov
test
out
aad
lret
daa
je
sub
xchg
push
in
push
sub
jle
push
jmp
aas
out
inc
mov
xor
add
insb
pop
cmp
sub
pop
std
lcall
cli
fdivs
and
cmpl
cmp
mov
cmp
adc
sbb
jno
je
add
or
mov
data16
cld
rcrb
mov
sub
dec
ss
insb
ds
pop
push
jmp
xchg
mov
ljmp
pop
adc
pop
fcmovbe
lods
sub
popf
adc
add
mov
sub
movsb
test
icebp
jle
stos
out
push
or
mov
add
in
cmp
jmp
pop
xchg
mov
in
in
mov
push
lods
fcoms
stc
clc
clc
mov
mov
inc
aas
add
lret
hlt
stos
add
or
testl
mov
loope
sarb
movsb
xor
and
xchg
push
jnp
jge
mov
mov
sub
cmpsb
jo
and
inc
aas
daa
ds
xchg
lcall
sub
shrb
arpl
movswl
out
rcrb
dec
jge
jp
jge
mov
scas
push
xchg
jno
ja
jecxz
inc
pop
mov
int
ficompl
mov
push
rorb
push
arpl
xorl
and
or
push
jb
xchg
test
dec
enter
mov
std
push
movsb
push
pop
jecxz
jmp
divl
pop
mov
int
stos
nop
pop
add
shll
cmp
cmpsl
jno
hlt
lods
fcompl
xlat
sbb
mov
dec
cmpsl
or
push
mov
leave
push
stos
pop
repz
pop
fs
insl
insb
sub
call
repz
jnp
mov
mov
mov
adc
aas
cmc
rol
out
sbb
xchg
xchg
xlat
jnp
dec
mov
mov
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shl
xor
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
jmp
imul
pop
jbe
mov
adc
push
sbb
and
sbb
dec
jmp
jb
icebp
inc
das
cmp
popa
sbb
fists
in
bound
mov
cli
or
push
and
in
imul
and
dec
inc
imul
lea
pop
addr16
es
inc
popf
mov
mov
hlt
sbb
dec
cmp
adc
cmp
daa
lcall
in
call
xchg
stos
sbb
and
push
push
stos
jno
insb
cmp
pop
xor
lret
pop
jge
and
mov
jmp
jle
dec
ss
iret
lods
xor
jl
test
cmpsb
xlat
lcall
stc
xchg
shlb
fdivrl
sub
dec
push
dec
popf
add
mov
xchg
insl
inc
es
cmp
adc
repnz
enter
jb
mov
aam
adc
lds
outsb
sahf
cmpsb
pop
push
gs
mov
or
pop
add
adc
push
hlt
clc
sub
rolb
popa
jb
fs
sbb
and
decl
scas
and
loope
out
xlat
mov
and
insl
pop
xor
adc
mov
or
mov
mov
mov
loopne
mov
sbb
shl
dec
into
adc
addb
cmp
in
out
push
cmc
insl
out
push
out
lods
fcoms
mov
sbb
repnz
or
into
stos
subl
loop
cmpl
ret
mov
loope
mov
mov
xor
lret
inc
sahf
clc
into
clc
in
out
daa
scas
pop
das
mov
pop
lock
ret
mov
out
jmp
cmpsb
pushf
loope
push
ljmp
cmp
dec
sbb
dec
adc
bswap
cmp
rclb
xlat
out
out
inc
aam
lahf
popa
mov
cli
scas
sahf
xor
loope
mov
push
inc
lcall
fstpt
mov
jl
fiaddl
add
jecxz
dec
popf
ljmp
dec
js
repz
cli
cmp
push
adc
movsb
adcb
dec
sbb
sbb
rcl
stos
rolb
dec
loope
jp
xchg
inc
xor
jnp
lret
pxor
test
ja
ja
lock
jns
adc
cltd
jne
cmp
inc
in
and
add
inc
call
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
jmp
pushf
cmp
jl
mov
mov
scas
adc
sbb
jnp
clc
xor
imul
adc
imul
xor
fldenv
mov
pop
adc
lock
sar
inc
call
scas
xchg
mov
imul
mov
ret
pop
nop
xchg
in
xchg
arpl
adc
loop
jo
cmp
dec
cmp
inc
stos
out
mov
mov
sub
popf
pop
mov
ja
sub
mov
js
lahf
insl
les
ja
test
cwtl
adc
int3
outsb
fisttpl
aad
stc
mov
cwtl
pop
and
xor
aaa
mov
jne
mov
push
or
jbe
shrl
mov
cmpsb
jb
call
aaa
gs
jmp
packssdw
data16
add
push
sbb
jno
pop
push
fcoml
xor
or
int
sbb
push
mov
sarb
in
rclb
orl
mov
std
sub
adc
push
dec
cmpsl
popf
aas
addr16
popa
das
repnz
call
sbb
push
jne
push
push
add
fists
or
add
lods
cmp
das
mov
jp
repz
push
push
dec
insb
out
int3
iret
insl
cmp
shlb
jge
push
orb
mov
loop
dec
jl
outsl
jl
loope
or
aaa
adcl
jmp
xchg
mov
jnp
aam
and
xchg
or
mov
mov
mov
ret
xchg
cmp
pushf
or
andb
mov
cmpsb
xchg
popf
movsb
bound
in
add
sbb
mov
rorl
jnp
inc
push
dec
mov
lea
dec
inc
aad
inc
cwtl
push
dec
aas
cmp
xor
aaa
xor
add
xor
pop
test
xlat
sbb
js
xor
mov
cld
jnp
aas
fwait
mov
or
adc
je
ret
rclb
or
inc
cmc
cld
jp
insb
mov
movsl
mov
in
sbb
mov
aaa
mov
adc
mov
test
mov
dec
pushf
push
cmp
repz
or
jae
push
push
mov
stc
cmp
add
nop
dec
scas
adc
xor
data16
xchg
repz
js
pop
pop
cli
mov
loop
icebp
fisubs
adc
cmpsb
push
or
adc
xor
mov
xor
pop
jecxz
cld
add
cltd
leave
jmp
sub
xchg
pop
add
cmp
fwait
add
inc
pop
addr16
xor
out
arpl
bound
add
es
ljmp
ffree
mov
shl
sahf
cltd
sar
pop
enter
mov
daa
push
sbb
xorl
push
js
lcall
xor
xchg
push
xlat
lcall
cs
xor
and
cmp
pop
pusha
into
lds
mov
mov
mov
addb
insl
xor
pusha
push
jecxz
test
lcall
adc
lds
mov
or
ds
into
dec
push
pop
cld
adc
jno
stos
gs
adc
push
daa
adc
mov
je
sub
jne
and
stos
pop
outsl
xlat
mov
sub
shll
lea
mov
loop
movsb
inc
jbe
pushf
loope
popf
cmpsb
aad
std
cmpsl
cmp
or
inc
mov
mov
inc
and
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
jmp
roll
andb
sbb
loop
jl
lea
sbb
adc
aad
arpl
xchg
jne
repz
mov
sub
ljmp
jno
fidivrl
pushf
mov
inc
jb
mov
subb
inc
pop
mov
adc
pop
dec
xor
mov
inc
pop
int3
fisubs
mov
leave
sbb
xchg
xchg
out
inc
mov
movsl
xor
mov
xchg
cmpsl
movsb
aas
fildll
xor
pop
sbb
adc
out
test
xchg
test
sbb
cmc
std
dec
fadds
jge
aad
adc
mov
sbb
lcall
inc
push
jp
lret
movsl
outsl
inc
js
mov
add
flds
push
inc
inc
pop
or
and
push
sbb
push
and
or
push
adc
jmp
push
into
dec
in
dec
js
jle
into
xor
in
sbb
out
xor
scas
pop
rcrb
dec
loop
sub
xorl
jecxz
ja
lock
push
orl
icebp
stc
push
bound
mov
movsb
testb
cltd
test
push
mov
shll
mov
lcall
test
or
enter
out
or
push
push
not
cld
jns
cmp
and
add
dec
sub
lods
stos
stc
sbb
push
cmp
pop
pop
cltd
xor
dec
fcmovne
sub
sub
pop
dec
mov
dec
mov
adc
aaa
xor
pop
loopne
enter
pop
or
nop
jg
inc
pop
push
mov
gs
cs
icebp
jmp
push
pop
popf
or
or
mov
out
push
push
add
gs
cmpb
iret
jno
ret
sbb
jbe
push
loope
inc
jmp
adc
inc
gs
adcl
popa
insb
rclb
daa
adc
adc
repz
jle
xchg
sbbl
jo
ljmp
outsb
push
pop
cmp
shlb
jle
jle
fdivr
mov
sahf
pop
jb
dec
out
lea
pusha
sub
sub
jbe,pt
dec
in
xchg
mov
adc
adc
push
pushf
sbb
sbb
mov
xchg
dec
hlt
data16
xor
jb
lods
outsl
cltd
mov
xchg
in
movsb
mov
scas
jp
cmp
lea
sbb
mov
inc
dec
outsb
xor
out
test
jo
adc
loop
mov
mov
repnz
xchg
lds
sahf
lahf
scas
adc
mov
cs
mov
mov
in
movsb
jo
cs
mov
dec
std
mov
and
inc
sub
fisttps
xchg
movsl
pop
into
xorb
movsbl
push
lcall
clc
lea
call
inc
xor
sub
stos
sbb
and
jg
xor
hlt
cmp
dec
cmp
fwait
shll
xchg
mov
dec
jl
mov
cmp
aaa
out
mov
or
jo
int
hlt
mov
push
jbe
lods
ljmp
cmpb
cmpsb
fwait
insb
mov
test
mov
or
jg
xchg
cltd
cltd
sbb
or
movsl
imul
movsl
mov
lahf
stos
jg
nop
adc
pop
xchg
outsb
pop
cmc
ret
xchg
sub
sbb
sti
pop
push
das
lds
clc
cmp
xchg
movsb
into
xor
arpl
jo
push
dec
stos
ret
and
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
sub
push
push
push
adc
mov
cmpl
mov
mov
mov
mov
jmp
mov
jne
push
pushl
call
mov
mov
sub
and
and
xor
sbb
add
or
mov
or
shrd
shr
mov
and
mov
xor
mov
add
mov
sbbl
xor
xor
or
mov
add
or
mov
mov
adcl
shl
mov
and
shrd
add
xor
xorl
shr
adcl
mov
mov
xor
or
orl
mov
mov
xorl
mov
sbbl
mov
mov
cmpl
movl
notl
mov
movl
jmp
movl
jl
push
call
sbb
and
xor
xor
sbb
or
sbbl
xor
and
mov
sub
mov
mov
and
mov
dec
mov
cmpl
movl
movl
movl
jmp
movl
movl
jl
push
pushl
pushl
call
and
neg
and
adc
not
sbbl
shl
xor
shld
add
shl
mov
mov
mov
mov
addl
xor
xor
movl
movl
movl
mov
cmp
movl
jne
cmp
movl
je
sbb
mov
movzwl
xor
mov
mov
xor
xorl
shld
addl
shl
xorl
xor
mov
mov
adc
mov
xor
mov
mov
cmp
jne
cmp
jmp
push
inc
shlb
cmp
jo
mov
sbb
notb
sbb
xor
adc
inc
icebp
ficoms
push
mov
sar
rclb
sbb
pop
fsubs
nop
cmp
dec
pop
mov
ss
inc
out
shrl
out
push
xchg
pop
xchg
sbb
out
xor
mov
adc
outsl
mov
cmp
ss
bound
cmp
cwtl
mov
dec
jle
sbb
popa
pop
cmp
xchg
dec
fwait
sbb
and
shrb
imulb
bound
loop
xor
orb
adc
cmc
scas
outsb
jnp
mov
sbb
aas
movb
sbb
add
into
repnz
xchg
mov
imul
jmp
scas
push
call
cli
das
mov
add
mov
xor
fstl
push
lahf
lret
sbb
pop
sbbb
rorb
notl
clc
and
dec
inc
addr16
push
jge
dec
scas
push
les
int3
adc
shrb
jb
add
dec
test
adc
aad
les
xchg
jmp
in
fdivr
outsl
lahf
xor
repz
sbb
in
cmp
pop
mov
ja
push
xchg
test
adc
or
push
xor
xchg
pop
adc
add
int3
adc
pop
iret
insb
mov
inc
decb
jmp
std
mov
mov
adc
dec
pushf
imulb
cmp
cmp
jecxz
adc
mov
xor
mov
inc
xchg
sub
scas
inc
bound
pop
cltd
lods
out
dec
jp
sub
xor
sbb
inc
sub
in
repnz
test
jae
imul
xchg
add
xor
lcall
mov
outsl
cmp
lcall
stc
fxch
cmp
aam
nop
pop
jns
daa
mov
test
xchg
stos
andb
and
xor
test
or
out
addb
inc
add
mov
cmpl
movl
mov
mov
movzwl
jmp
movl
jle
push
call
mov
mov
sub
add
xor
xor
xor
sub
mov
sbbl
adcl
orl
or
mov
push
cmpl
mov
mov
jmp
mov
mov
jge
push
call
mov
sbb
inc
and
and
orl
and
pop
xor
mov
add
shl
neg
mov
xor
notl
shr
or
mov
or
mov
cmpl
notl
mov
jmp
movl
jge
push
push
call
movzbl
add
mov
andl
andl
mov
sub
sub
inc
mov
adcl
mov
mov
cmpl
mov
movzwl
movl
movl
jmp
mov
movl
jle
pushl
call
or
addl
sub
xor
mov
adc
or
mov
push
cmpl
movl
movl
movl
jmp
movzbl
jle
push
call
orl
and
adc
orl
adc
subl
add
sub
pop
sub
adcl
mov
andl
add
subl
mov
sbbl
lea
addl
mov
xor
add
mov
adc
mov
mov
xor
mov
xor
xorl
xor
shr
orl
shl
incl
or
addl
mov
movzwl
adc
movl
mov
dec
mov
xor
subl
xor
xorl
shr
shl
or
adcl
push
lea
xorl
push
lea
adcl
push
andl
call
mov
mov
mov
xor
mov
xor
cmpl
mov
mov
not
jmp
mov
jne
pushl
push
push
pushl
call
sbb
mov
or
mov
or
inc
xorl
inc
xor
cmpl
mov
mov
movl
jmp
movl
movl
jbe
push
call
adc
add
sub
sbb
orl
sub
shr
movzwl
add
mov
shl
or
subl
push
andl
lea
push
mov
mov
shrd
shr
mov
mov
xor
jmp
rorl
lret
jb
jns
stc
jecxz
xchg
sbb
notb
sbb
dec
sub
xor
xlat
mov
push
cmpsb
jge
pop
test
push
pop
dec
push
push
dec
push
xor
mov
mov
jp
dec
repnz
movsb
ficoml
mov
sbb
push
jge
xchg
test
inc
cmp
inc
mov
int3
mov
xchg
test
outsb
adc
lahf
xchg
sub
pusha
pop
nop
push
and
imul
add
in
push
fistps
int3
lds
mov
jno
test
xsavec
cmp
add
add
aaa
push
and
int
int3
loope
sub
loope
scas
xchg
movsb
mov
sub
push
sub
sub
cmp
imul
out
pop
xor
xchg
loop
shr
xchg
add
fwait
es
mov
or
lods
jbe
mov
aaa
dec
les
lods
or
push
and
push
mov
xor
ret
push
add
sbb
xchg
add
and
and
xchg
add
or
dec
sub
jnp
cmp
dec
ret
jo
imul
lahf
fidivs
popa
imul
gs
xor
je
pusha
sahf
adc
mov
xchg
sbb
dec
sub
lcall
ds
xchg
pusha
xor
lds
push
ret
push
shlb
enter
dec
sbb
inc
stc
mov
div
push
mov
adc
lcall
sti
xchg
aas
jle
push
loope
sbb
inc
filds
lds
xchg
jmp
gs
cmp
or
cmp
xor
jge
jge
jge
and
xlat
mov
push
in
lea
testl
lock
outsl
mov
mov
jns
adc
push
adc
cli
sbb
pop
popf
bound
push
leave
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
jmp
dec
shlb
sbb
ds
jns
jg
jmp
gs
notb
sbb
imul
arpl
jg
pop
in
iret
fstpl
std
out
xor
mov
inc
mov
sbb
adc
outsb
push
cmp
call
jo
ja
dec
jne
aas
mov
lods
jnp
dec
inc
stc
sbb
jp
in
pop
insl
inc
mov
call
sbb
lea
mull
stos
test
add
pop
js
dec
ret
shrb
fisubl
loopne
and
fcompl
test
jnp
out
je
outsl
dec
in
rclb
adc
loop
lods
inc
jo
pop
jp
add
loope
cmp
outsl
repnz
mov
jecxz
xor
push
ljmp
sub
jbe
sti
iret
imul
inc
out
imul
aad
psrlw
jg
rcll
dec
inc
lahf
mov
loop
mov
jo
pop
push
popf
popa
xor
int3
cwtl
inc
xchg
push
mov
push
fsubrs
push
inc
mov
daa
arpl
push
rcll
sbb
and
leave
cmp
jmp
push
clc
and
add
into
pop
call
js
out
xchg
loope
aam
sbb
jo
or
insb
adc
sub
push
mov
mov
mov
divl
push
fs
xor
xor
fsubl
cmp
mov
dec
stos
dec
or
loopne
imul
add
pop
mov
and
out
sbb
jno
jae
data16
sbb
mov
xor
sub
inc
ds
fwait
stc
clc
je
xchg
outsb
fwait
popa
jecxz
add
cmpsb
dec
mov
popa
mov
and
sub
inc
orl
icebp
sbb
push
mov
mov
lcall
or
out
jo
inc
popf
aas
sbb
aaa
stos
in
adc
adc
pop
mov
push
in
xchg
lock
xor
or
shl
mov
jmp
in
je
push
fimull
movsl
mov
inc
xor
sbb
adc
sbb
stos
jae
or
xchg
jecxz
mov
repnz
sbbl
cmpsb
stc
xchg
cltd
ja
inc
mov
outsb
es
add
ljmp
bound
cmp
sub
adc
cmp
icebp
imulb
or
push
or
popf
add
addr16
push
or
pop
push
push
shlb
or
sbb
iret
push
push
dec
test
jg,pn
repz
clc
inc
aad
push
aaa
push
rorb
daa
mov
sbb
add
movsb
inc
or
cmp
imul
in
std
add
into
xchg
push
mov
stos
ss
jo
repz
ret
and
addr16
jg
out
jp
sub
pop
inc
sbb
pop
scas
ds
mov
repz
jbe
and
imul
mov
mov
das
add
stc
stos
and
push
mov
inc
sbb
cmp
cwtl
mov
sub
push
iret
add
aam
dec
inc
dec
jb
push
jmp
mov
repz
pop
jecxz
sbb
aaa
ret
adc
jp
inc
add
test
mov
mov
xchg
jno
xchg
xchg
sub
stos
lds
pop
mov
es
or
lods
xor
cmc
imul
iret
ljmp
dec
int3
test
cmp
xchg
lock
ret
jae
rclb
jno
fiaddl
fidivrl
jne
fildl
imul
add
mov
cmp
sub
inc
fimuls
cmc
push
xchg
cmpsl
push
pusha
addr16
enter
arpl
les
inc
inc
mov
push
in
fimuls
add
sub
pop
dec
test
clc
inc
xlat
sbb
pop
mov
jge
mov
stos
cwtl
or
and
nop
sbb
dec
cmp
aas
js
mov
sub
roll
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
jmp
fdivrl
sbb
mov
mov
and
sbb
notb
sbb
jno
push
push
clc
jne
xor
pop
lods
leave
add
adc
add
loop
mov
shl
adc
mov
repz
jge
aaa
shrl
stos
inc
sub
push
iret
mov
sbbb
add
cwtl
lods
loop
mov
int3
mov
stc
cmp
addr16
sar
lds
jl
test
insb
xor
lahf
loopne
int3
xor
sub
xchg
mov
shr
pop
mov
loop
jb
hlt
or
mov
fdivs
jmp
pusha
add
xchg
dec
push
fiaddl
fsubrl
dec
or
sub
jae
ds
ds
pusha
fs
xor
add
mov
stos
and
push
inc
mov
add
add
xchg
mov
repnz
mov
sbb
pop
sbb
mov
in
sub
rol
jmp
cmp
cs
mov
xor
aad
repz
scas
imull
jecxz
xchg
sbb
fnstenv
loopne
inc
sbb
es
dec
bound
clc
imulb
mov
inc
in
mov
add
add
cmc
nop
mov
push
nop
push
daa
jecxz
xor
push
bound
push
sbb
jp
xchg
insb
rol
xor
xor
mov
lods
jo
push
int3
dec
jecxz
inc
cli
pop
fstl
lahf
dec
shl
xor
loopne
xchg
int
fldt
xchg
imul
add
cmpsb
inc
fdivrp
push
ja
inc
les
pop
xchg
push
lcall
out
orl
and
rcll
lea
mov
test
sub
sbb
ss
lret
mov
lods
mov
or
mov
into
cmc
fsts
or
and
xor
addl
dec
daa
clc
xor
data16
cwtl
and
int3
icebp
ret
lea
push
mov
mov
jmp
aaa
and
dec
mov
push
out
inc
enter
sub
sbb
adc
sbb
fwait
icebp
xor
xchg
add
cmc
dec
inc
gs
popa
sub
pop
sbb
nop
fdivr
leave
mov
adc
loopne
dec
mov
cmpsl
xchg
ret
mov
mov
jl
ja
cmc
lcall
xchg
inc
cltd
pop
out
ljmp
jae
pusha
jmp
test
pusha
sti
int
in
sub
push
mov
push
dec
aaa
bound
shll
aas
es
shl
cli
inc
xor
cs
mov
ret
pop
out
outsl
jle
or
xor
mov
test
pop
dec
lret
lods
xchg
stc
dec
dec
xlat
fcmove
pop
inc
add
les
xchg
sbb
imul
or
int3
mov
cmp
fstps
and
mov
mov
jge
in
cli
fdivr
adc
ljmp
fcmovbe
add
mov
mov
jge
dec
jmp
into
movsb
inc
jg
sbb
clc
inc
push
icebp
into
popf
std
push
or
adc
adc
scas
jnp
sbb
cmpxchg
and
out
mov
or
xor
rcrb
cmp
adc
into
cmp
and
gs
inc
push
push
jbe
sbbb
sub
xchg
or
ret
addr16
bound
inc
out
mov
sub
cwtl
xor
bound
loopne
inc
add
mov
aas
daa
cmpl
movsl
cmp
or
cwtl
push
mov
daa
fidivrs
fnsave
add
inc
and
jle
sbb
jns
insb
jmp
adc
jno
pop
lock
cs
loopne
in
lea
jnp
push
wrmsr
push
pop
cltd
ds
or
inc
loopne
cmp
xlat
cld
ljmp
and
fisubrs
fnstenv
pop
push
lds
sbb
daa
sbb
lea
cld
in
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
jmp
add
bound
cmp
push
fsub
xchg
mov
fsubl
sbb
notb
sbb
jmp
cmpsl
clc
jecxz
mov
add
dec
cli
out
mov
add
lahf
dec
movsl
xor
mov
dec
scas
mov
fs
fs
push
mov
shl
stc
loope
jmp
xchg
push
cwtl
sti
jo
sti
sub
xchg
cld
xchg
shlb
xchg
or
inc
hlt
xchg
filds
pop
pusha
rorb
cltd
dec
pop
jo
js
and
inc
or
mov
popa
and
es
daa
imul
mov
and
call
aas
imul
mov
inc
lea
jnp
xchg
jl
pop
imul
repnz
dec
jmp
xchg
inc
mov
mov
stos
or
inc
scas
enter
icebp
mov
jg
push
pop
imul
ds
cs
leave
insb
out
push
mov
push
scas
jmp
adc
outsl
add
mov
mov
nop
fsubs
dec
test
fwait
lret
test
xchg
xchg
push
pusha
fdivl
fcompl
mov
daa
adc
aaa
and
pop
xlat
mov
inc
adc
xor
cmp
and
xchg
cmc
dec
inc
aad
mov
ss
lods
dec
je
repz
sbbb
push
pop
pop
mov
cmpb
je
sbb
adc
mov
xor
fildll
test
inc
pop
fisubs
jle
xlat
test
jmp
cmp
lahf
insb
and
addr16
mov
dec
aaa
in
dec
or
jnp
pop
loopne
adc
push
aam
mov
out
or
sub
add
aaa
gs
es
test
lret
adc
notl
jnp
fnstsw
xchg
sbb
mov
mov
inc
ret
mov
mov
fdivl
mov
jl
mov
adc
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
xorl
or
mov
jne
mov
andl
mul
ret
push
orl
mul
cmpl
movl
movl
mov
jmp
mov
jbe
call
mov
sub
mov
sub
movzwl
or
add
adc
movzbl
or
add
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
jmp
ss
mov
in
movsl
mov
mov
adc
sbb
xchg
sub
scas
sbb
pop
mov
push
cmp
push
adc
push
sbbl
shl
jns
fadds
repz
jmp
and
inc
ljmp
cltd
ror
mov
lds
shr
shrl
insl
loop
loope
test
gs
nop
sub
push
sti
sbb
sbb
jbe
insb
in
dec
dec
in
test
mov
cmpsl
aam
outsl
cmp
in
shlb
push
les
mov
scas
inc
push
lods
popa
shlb
push
in
add
icebp
push
imul
fwait
mov
mov
bound
mov
scas
rcrb
fs
test
in
lcall
negb
ds
add
mov
std
mov
enter
and
add
jae
fnsave
jle
and
mov
jo
jge
pop
sti
pop
inc
shl
pop
shl
movsb
test
in
jp
push
inc
and
sarb
push
cmp
aad
xchg
jb
imul
into
adc
dec
sub
sarb
lahf
dec
into
xchg
shlb
outsl
mov
jmp
adc
xor
clc
cmp
subb
out
movsb
xchg
xor
sbb
xor
dec
movb
mov
lahf
out
sub
cmp
mov
xor
sub
int3
mov
adc
mov
fsubrl
test
jne
mov
test
mov
inc
and
cmovno
xchg
enter
jle
inc
adc
or
push
xchg
xor
std
and
inc
pop
adc
popf
mov
pop
dec
fistpll
mov
pop
pop
lods
push
shlb
xor
jg
aaa
mov
mov
es
xor
ljmp
jns
xor
dec
mov
inc
dec
std
pop
fstps
or
xchg
sbbb
sub
enter
aam
xchg
aaa
loopne
cmp
push
lock
xor
sbb
push
das
out
stos
cmp
sahf
aaa
xchg
xchg
sub
cmp
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
jmp
cli
push
test
adc
pop
jnp
add
sbb
sbb
jns
test
sbb
add
inc
call
loopne
jg
inc
and
in
loope
lods
jl
leave
jb
daa
xchg
mov
adc
fprem1
lds
data16
int3
les
xchg
adc
pop
lahf
push
xchg
daa
std
push
mov
pop
lahf
in
xchg
xchg
je
mov
and
daa
testl
ret
repz
mov
or
ljmp
arpl
mov
or
sbb
ret
adc
mov
and
mov
popf
inc
out
mov
or
bound
lret
ret
inc
xlat
sbb
cmpsl
add
and
leave
test
inc
add
subb
testl
mov
mov
fs
cmp
adc
jl
and
jg
test
jne
aad
imul
cli
pop
pop
xchg
or
jmp
xor
rol
sbb
insb
sbbl
pusha
or
mov
sbb
aaa
movsl
repnz
popa
mov
ficomps
add
jae
jns
inc
fistps
stc
cmc
xchg
push
mov
mov
cld
nop
add
ret
jecxz
cld
and
push
je
pop
aas
shll
xor
dec
jne
jecxz
das
andl
test
mov
adc
jmp
and
dec
orb
das
imul
push
cwtl
stc
stc
dec
mov
into
add
into
add
popf
pusha
mov
subl
mov
mov
mov
repz
cld
in
xchg
cmp
mov
out
inc
dec
hlt
xor
aam
jnp
xor
push
ret
inc
inc
jae
inc
out
ja
cmpsl
xchg
mov
arpl
ficoml
mov
test
enter
call
pop
shll
push
loop
jle
neg
mov
and
push
pop
in
cmp
push
jnp
mov
cwtl
repnz
subl
xchg
push
cmp
das
adc
adc
mov
pop
xchg
inc
adc
push
push
push
out
fisubrs
mov
cmp
pop
rcll
add
outsb
pop
sub
hlt
adc
cli
in
sbb
ljmp
mull
add
rorb
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
push
push
push
pushl
call
mov
movzwl
push
call
test
jne
movl
xor
movl
jmp
subl
mov
cmpl
not
mov
jmp
not
mov
je
push
push
push
push
push
call
mov
add
movzwl
xor
adc
or
or
xor
cmpl
mov
mov
mov
mov
jmp
mov
movl
ja
push
push
call
add
or
or
mov
mov
sub
add
add
movl
movl
xor
or
sbb
mov
xor
or
adc
mov
orl
xor
xorl
imul
adcl
and
subl
sub
cmpl
movl
movl
movl
jmp
movl
jge
pushl
pushl
push
push
call
andl
add
mov
sbb
sub
and
xor
add
xor
movzbl
adc
xor
mov
add
movl
xor
add
mov
sub
and
movl
movl
sbb
movl
mov
movzwl
sbb
mov
sub
movzbl
or
mov
xorl
and
sbb
jmp
dec
test
and
ljmp
mov
sbb
sbb
mov
sbb
fiadds
aad
in
xor
mov
aam
sti
or
test
lods
sub
in
sarl
pushf
add
cwtl
xchg
xchg
inc
add
inc
adc
cmp
jecxz
imul
aas
jbe
cmpsl
xchg
dec
jns
insl
mov
xor
jbe
mov
icebp
mov
mov
loope
and
je
ret
mov
gs
pop
push
sbb
jle
mov
push
aam
pushw
add
xlat
les
fdivrp
add
jg
mov
test
jmp
subb
xchg
lock
cmp
and
insl
push
xchg
push
out
inc
pop
adc
pop
inc
mov
aas
aas
xchg
cli
xor
mov
inc
mov
xchg
xorb
adc
push
test
or
or
je
push
dec
pop
mov
fdivr
jns
test
pop
mov
pop
dec
gs
test
int
xchg
adc
cmp
test
lcall
or
jge
rclb
xlat
loop
shll
stc
inc
sbbl
aam
xchg
or
jo
sets
mov
repz
enter
mov
fcos
pop
pop
repnz
jp
in
or
orl
cmpsb
mov
pop
das
or
push
mov
xchg
push
je
fidivrs
outsb
sub
jo
pop
gs
and
and
jg
sbb
or
adc
rcrl
sbb
fimuls
icebp
jge
pushf
jo
adc
pop
or
push
xchg
cs
add
sub
push
cmp
ret
push
fwait
sub
push
fdivrl
xchg
nop
jle
or
test
push
mov
and
pop
jne
int3
dec
pop
ja
jb
outsb
loop
andb
jne
pop
addr16
movsb
mov
mov
mov
jecxz
sub
push
sti
aaa
adc
sbb
and
int
clc
push
pop
lods
inc
push
jp
andb
mov
fisubl
scas
sbb
repnz
adc
jb
mov
mov
push
xor
sub
dec
cmp
mov
loope
xor
mov
repz
push
loopne
imul
outsb
pop
aaa
mov
sub
shl
mov
ret
nop
lret
cld
mov
or
pop
jne
stos
inc
mov
cld
jmp
dec
es
add
dec
icebp
sbb
jbe
jp
xor
sbb
out
sar
lods
clc
rcrb
mov
ficoml
lret
push
dec
enter
dec
cli
xchg
enter
pop
sub
xor
jp
out
leave
pop
mov
sbb
xchg
lds
jge
dec
xchg
dec
sub
or
shrb
lret
pop
mov
add
and
xor
or
adc
cmc
in
loopne
push
gs
push
cmc
fcoms
lcall
shlb
jl
mov
add
inc
mov
push
addl
sbb
jbe
xlat
hlt
shrb
jle
cmp
aad
jae
test
mov
jno
js
cmp
and
adcl
xor
sub
imul
movl
mov
movl
cmp
jne
movl
xor
xor
sbb
movl
movl
movl
pushl
mov
or
movl
cmpl
mov
notl
movl
movzwl
jmp
movl
jne
pushl
call
xor
add
mov
sub
orl
mov
mov
adc
movl
movl
movl
sbb
movl
mov
xor
xor
sub
sub
movl
sbb
movl
or
mov
cmpl
movl
mov
jmp
movl
jb
push
call
sbb
add
sbbl
addl
sub
xor
subl
add
mov
notl
imul
movl
or
xor
xor
adcl
pushl
cmpl
movl
mov
mov
jmp
mov
movl
jl
push
push
pushl
call
add
mov
xor
andl
sbb
and
xor
mov
add
push
pop
xor
subl
div
andl
mov
xorl
xor
or
xor
mov
or
sbb
mov
adcl
div
xor
xor
xor
adcl
pushl
sbb
mov
xorl
mov
orl
pushl
movl
add
pushl
imul
pushl
add
mov
adcl
mov
addl
xor
mov
div
and
subl
or
movl
pushl
orl
call
andl
dec
movl
jne
movl
mov
mov
and
mov
mov
andl
movl
adcl
mov
call
mov
mov
sub
xor
lea
subl
mov
add
lea
mov
or
mov
mov
cmpl
mov
mov
jmp
movl
jbe
pushl
push
push
call
sub
or
add
xor
dec
incl
cmpl
movl
movl
movl
jmp
movl
mov
ja
push
pushl
push
pushl
push
push
pushl
push
call
mov
xor
mov
adc
sub
add
adc
mov
sbb
mov
and
mov
cmpl
movl
movl
movl
movl
jmp
mov
mov
ja
push
push
push
push
call
sbb
sub
mov
mov
sub
add
xor
or
add
xor
and
mov
xor
cmpl
not
mov
movl
movl
jmp
mov
movl
je
pushl
pushl
pushl
push
call
neg
add
sbb
xor
movl
and
xor
add
shl
shr
or
mov
cmpl
movzwl
mov
movl
jmp
movl
movl
jae
pushl
push
push
call
movzwl
sub
mov
adc
mov
adc
mov
mov
sub
imul
inc
xorl
and
andl
mov
mov
mov
and
mov
movl
mov
mov
xor
mov
shrd
neg
shr
addl
mov
mov
jmp
push
lcall
in
popf
jo
adc
sbb
adc
sbb
jb
mov
xchg
xor
scas
repnz
gs
sub
mov
cmp
sar
jno
push
pop
out
xor
mov
push
ljmp
insl
xchg
dec
icebp
fwait
sbb
pushf
adc
mov
sti
orl
ss
daa
sub
xchg
inc
or
int3
jmp
push
loope
outsb
xlat
loope
mov
ret
adc
negb
add
add
jae
cmp
outsb
pop
mov
je
ljmp
je
push
pop
xchg
mov
jnp
xchg
push
cmc
push
lea
es
test
pop
js
pop
cs
mov
dec
std
sar
addb
fldenv
push
sbb
cltd
pop
jmp
and
je
xor
jge
pushf
add
jmp
inc
dec
jle
adc
outsb
dec
out
out
mov
mov
fidivrl
pop
shlb
jns
lret
pop
pop
push
out
xor
mov
fcoms
js
xchg
inc
xor
cli
ljmp
push
pop
imul
ds
repz
sub
repz
lds
xchg
fs
push
or
leave
iret
lret
ss
enter
push
setl
test
or
leave
mov
and
out
add
fisttpll
stc
arpl
ret
dec
add
sbbb
gs
out
xor
mov
mov
test
add
test
call
adc
imul
add
in
xchg
sub
xor
arpl
shl
test
stos
fs
push
cmp
adc
push
mov
cmp
jb
cmp
or
jp
push
sar
into
fwait
cmp
jp
out
inc
dec
mov
mov
mov
adc
das
mov
dec
adc
das
in
cmp
pop
mov
cmp
or
fldenv
push
xor
xlat
jns
loope
roll
cwtl
mov
shll
sbb
in
mov
dec
push
push
lret
call
mov
insl
xor
xchg
out
rorb
mov
jmp
jge
add
xlat
loop
lret
out
int
stos
cmp
orl
mov
orl
cmp
out
push
addl
mov
xor
jbe
lock
mov
or
mov
sub
stos
in
lock
mov
jle
fcom
or
jmp
rcrl
popf
fiaddl
dec
push
stos
push
pop
lods
arpl
cmp
test
lock
ret
fwait
adc
xchg
data16
push
pop
mov
loop
fdivs
ds
sti
xor
and
int3
pop
pop
cmp
cmp
popf
xor
cmc
test
mov
hlt
popf
jnp
mov
adc
mov
sub
pusha
out
sarb
xchg
fstl
je
iret
aam
bound
shl
push
loop
or
pushf
push
in
add
pop
sbb
scas
and
mov
push
adc
inc
sar
je
lds
add
jns
ss
xor
dec
push
mov
xor
incl
xor
or
mov
push
pushl
lea
negl
push
andl
shl
call
subl
lea
orl
push
subl
mov
mov
subl
lea
push
mov
orl
lea
mov
xorl
mov
adcl
jmp
imul
inc
push
scas
cltd
mov
sbb
sbb
js
or
adc
lea
jne
loop
fs
enter
cmp
sub
repz
lds
je
xchg
xor
enter
pop
add
sarl
cmpsb
aaa
fdivrs
sbb
xchg
push
fxch
sti
jbe
cmp
std
jbe
test
out
stos
shl
xor
out
sbb
out
dec
sbb
and
push
add
clc
mov
push
push
and
sub
imul
arpl
imul
fs
stos
mov
mov
in
out
popf
jmp
pop
jl
addr16
cmp
adc
ret
orl
push
rcrl
dec
jb
mov
mov
loopne
stos
data16
cmp
xor
dec
mov
sysenter
cmp
add
xchg
lods
popf
rol
mov
push
xchg
or
aad
jae
and
je
out
aad
testl
xor
inc
fwait
push
jae
divb
scas
test
jnp
popf
in
ss
and
dec
sbb
inc
in
aad
aas
orl
lret
push
test
imul
popf
mov
shlb
js
pop
popf
test
xchg
aam
dec
out
push
ja
out
add
xchg
in
aas
cld
stos
adc
cs
roll
sub
add
xchg
lea
lds
xorb
pop
rorb
sub
and
insl
jl
push
outsl
dec
das
out
idivb
push
mov
push
add
push
out
mov
aas
fwait
xchg
mov
fdivrs
test
popa
fstpt
mov
f2xm1
or
cltd
mov
sarb
loope
jmp
inc
sti
inc
in
mov
cli
out
dec
mov
mov
lcall
les
dec
jl
sbb
and
adc
stos
pop
and
push
and
aaa
es
lret
cli
nop
xchg
mov
or
in
dec
arpl
test
test
dec
popa
pop
std
js
clc
fs
imul
inc
enter
nop
push
movsl
gs
test
push
dec
mov
adc
popf
push
cli
mul
cmp
cmpl
or
lds
lcall
mov
pusha
jnp
lret
sbb
sub
push
mov
mov
enter
outsb
divb
imul
mov
inc
jmp
jg
lods
test
xor
and
mov
dec
push
mov
cmp
cmpsl
xchg
cmc
sbb
sub
outsb
xor
jb
jp
add
inc
mov
pop
scas
xchg
idivb
cmp
stos
mov
ret
push
xor
xchg
add
mov
push
pop
inc
lods
jb
jne
subl
pop
or
and
jbe
sub
sbb
dec
mov
push
xor
out
fidivs
fdivrl
jo
xlat
mov
subl
mov
mov
xor
int3
lods
adc
iret
push
in
pop
sbb
rclb
mov
xor
aad
mov
inc
adc
inc
test
jp
or
sbb
out
add
xchg
or
push
dec
xchg
sbb
mov
subl
jmp
mov
push
in
xor
mov
push
sbb
adc
sbb
es
adc
xchg
dec
rcrl
lock
inc
sbb
aas
pop
in
test
sub
addr16
rcl
aas
adc
in
test
mov
sub
inc
call
adc
arpl
insl
mov
xchg
jnp
xchg
cmp
sub
sti
jmp
js
pop
popa
jne
dec
pop
cmpsb
xchg
push
cmp
lods
cs
lret
xor
fwait
cld
test
jnp
jo
push
inc
leave
push
adc
mov
sub
mull
insb
pushf
mov
pushf
pop
inc
mov
nop
jae
xchg
popf
cli
lea
lods
addb
pushf
xor
out
ss
andl
imulb
ss
mov
addr16
cmp
ficompl
or
cmp
jnp
mov
fistps
adc
jmp
cmp
push
and
leave
push
xchg
test
bound
pop
jp
aas
inc
add
and
cs
adc
lock
gs
fucom
fwait
decl
std
leave
mov
lods
adc
cwtl
ja
mov
ret
pop
stos
xlat
mov
adc
push
mov
jns
ds
dec
mov
mov
int3
and
dec
push
add
ficoms
or
je
cmpsb
and
adc
lds
cltd
adc
roll
xchg
pop
mov
xor
fidivrs
xchg
inc
push
fld
inc
xchg
cmp
dec
je
insl
sarb
aam
aad
stos
mov
xor
aaa
shrw
add
mov
icebp
pop
rorl
lea
lds
addr16
das
leave
int
xchg
lahf
fnstsw
push
mov
cmp
loope
dec
inc
fabs
mov
in
fsts
jg
pop
pop
int3
adc
insl
cltd
mov
stos
lds
iret
dec
mov
add
mov
lea
jge
call
adc
jns
mov
push
add
xchg
rorl
pavgb
inc
and
jmp
ljmp
loopne
pushf
faddl
daa
adc
lods
pushl
notb
gs
push
pop
stc
mov
cmp
sbb
std
cld
fucom
movsl
dec
call
fcmovbe
lahf
pop
sbb
addr16
cmpsb
xor
mov
cmp
pop
push
repz
fnstsw
mov
subl
sbb
sbbb
fidivs
add
or
mov
jb
adc
mov
movsl
test
shll
in
mov
push
inc
mov
mov
cmp
cmp
cwtl
inc
push
fisttpll
jbe
and
inc
imul
xor
push
lcall
cmp
cmp
push
imul
and
push
inc
jne
add
adc
sbb
pop
test
stc
cld
ljmp
cmp
adc
in
pop
stos
inc
fwait
pop
sahf
stc
leave
sbb
push
nop
adc
shrl
bswap
and
inc
mov
mov
imul
push
call
xorl
push
xorl
push
adcl
pushl
call
mov
mov
and
mov
neg
mov
shr
shl
or
mov
xor
add
sub
or
mov
xor
mov
sbb
lea
mov
xor
lea
sub
mov
mov
sub
mov
sub
mov
mov
xor
lea
movzbl
and
xor
cmpl
movl
not
jmp
mov
movl
jbe
push
call
sbb
add
sbbl
subl
movzbl
sub
mov
movl
sub
movl
movl
subl
movl
cmpl
mov
mov
movl
jmp
mov
jbe
pushl
call
sub
mov
sbb
adc
and
adcl
sbb
xor
mov
mov
xor
mov
movzbl
and
mov
xor
mov
add
movl
adc
subl
xor
cmpl
mov
mov
mov
jmp
movl
je
push
push
push
push
call
inc
and
orl
orl
xor
and
mov
mov
xor
mov
adc
and
mov
adc
movl
adc
movl
cmpl
mov
mov
movl
jmp
mov
jne
pushl
push
call
xor
sbb
sbb
movzwl
or
movl
movl
add
movl
movl
movl
notl
mov
movl
mov
cmpl
notl
movl
jmp
not
jg
pushl
push
pushl
push
push
pushl
call
xor
mov
or
sub
adcl
subl
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
jmp
je
or
pop
pop
mov
cmp
inc
cld
push
sbb
adc
sbb
adc
sub
sub
and
ds
mov
pop
cli
sub
rorl
test
mov
dec
cli
push
xchg
insl
jl
xor
std
sub
testl
fs
inc
dec
sub
arpl
fisubs
orl
lds
mov
cmp
ds
mov
add
dec
xchg
add
jnp
hlt
pop
std
out
rorl
in
rcr
jae
xchg
add
ds
out
pop
repz
adc
cwtl
cltd
cmp
sbb
adc
mov
jmp
and
cmp
mov
or
jno
sub
sub
mov
cmpsl
roll
lea
fiadds
jno
insl
stos
fnstcw
sbb
dec
adc
jecxz
loop
in
mov
mov
or
or
lds
nop
sub
cmp
in
bound
inc
mov
call
add
sub
js
push
and
adc
int3
pop
dec
xadd
and
adc
cld
fisubrs
divl
jno
fdivrs
iret
lea
ja
nop
cmp
dec
fdecstp
lods
movsb
jnp
pop
bound
cmpsb
mov
mov
fcoml
dec
in
dec
mov
mov
shrb
jbe
pop
scas
jle
xchg
dec
push
sub
mov
sti
loopne
ja
add
mov
inc
push
outsb
shl
xchg
lods
icebp
ss
cld
xchg
xchg
dec
es
les
mov
adc
lcall
sti
addr16
add
mov
in
cmp
enter
pop
cli
fcoms
push
xor
cli
sbb
out
leave
inc
xor
pop
in
mov
jnp
pop
int
pusha
dec
pop
or
idivb
mov
shll
xor
cmp
jmp
adc
fidivs
mov
das
test
jne
or
test
mov
sbb
push
fisttps
and
xchg
divb
cld
mov
jnp
inc
pop
mov
mov
idivb
loopne
frstor
sub
mov
outsl
push
bnd
inc
mov
repnz
ja
sub
pop
push
icebp
sbb
sarl
mov
lods
and
inc
sbb
out
js
cmpsb
sub
xchg
inc
pop
aaa
cli
inc
jae
int3
rcrl
movsb
ja
ret
jo
sub
mov
push
inc
imulb
std
dec
in
xchg
out
data16
stos
int3
dec
fidivrl
addr16
je
mov
pop
leave
sub
lods
sbb
mov
or
push
sbb
stos
dec
inc
xchg
cmpsb
mov
cli
xchg
pusha
push
pop
jno
ficompl
mov
roll
clc
outsb
or
pop
ret
cwtl
test
inc
adc
cmp
in
push
data16
clc
add
aas
pop
or
adc
ficoms
fidivrs
sub
fiadds
sbb
inc
mov
arpl
ret
pop
pop
jb
popf
test
test
add
nop
out
cmp
in
out
mov
xchg
stos
adc
pop
and
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
jmp
and
and
insb
les
stos
inc
notb
sbb
adc
sbb
scas
adc
mov
repz
bound
push
neg
loope
adc
cli
orl
cmp
stc
fs
and
mov
cli
and
sbb
jae
or
movsb
out
rcrb
sarb
aad
ja
sbb
pop
jo
cmp
pop
mov
adc
sarb
sahf
mov
fs
outsl
fnstcw
or
xchg
fwait
pop
jp
mov
mov
inc
test
test
add
sub
call
xlat
sub
xor
roll
jg
mov
dec
notb
mov
adc
lods
pop
js
cmp
call
dec
fdivrp
mov
sbb
mov
sti
mov
arpl
add
lahf
cmpsl
call
and
add
sbb
nop
lods
lods
mov
inc
cmpsb
aas
je
enter
scas
js
lcall
and
ds
push
lock
call
ds
xchg
mov
loope
mov
xchg
jmp
or
xchg
addb
addr16
roll
ret
push
lea
fisubrs
push
cmpsb
sub
lcall
sbb
xor
cmp
lret
clc
loop
inc
dec
push
sahf
sub
push
shl
popa
popf
adc
sub
mov
inc
daa
jg
je
enter
dec
mov
mov
mov
pop
jb
inc
mov
pop
addr16
inc
xchg
mov
sub
mov
mov
mov
xchg
cwtl
mov
loop
add
mov
int3
jae
int3
xor
lods
or
incb
add
repz
testl
or
jae
push
cld
sbb
pushf
ja
xchg
add
and
and
or
aas
ds
jae
mov
pop
xlat
outsb
add
js
sbb
pop
pop
mov
cmp
testb
dec
cld
or
push
int3
and
mov
gs
sbb
dec
and
pmaddwd
and
andb
xor
xor
sti
jno
cmp
idivl
push
xor
push
outsl
cmp
inc
cltd
dec
mov
ljmp
sarl
add
testl
test
and
out
sbb
xorl
jg
inc
out
mov
stos
iret
jl
add
movsb
sbb
xchg
fdivrl
repnz
loope
or
cmpsl
jge
pop
std
ret
ja
rcll
add
es
movsl
and
jp
or
sub
push
xchg
shr
cld
xor
outsl
dec
dec
push
in
aad
mov
lcall
test
mov
enter
xorl
lock
data16
ds
mov
fistpll
dec
popf
sti
adc
cltd
cmp
gs
adc
and
adc
mov
addr16
aam
int3
outsb
scas
or
push
xor
pop
mov
add
jo
push
xor
inc
cmp
dec
outsb
xchg
les
mov
xor
sbb
scas
out
insl
in
movsl
ljmp
inc
and
sbb
add
inc
and
mov
add
movl
movl
movl
movl
movl
movl
mov
jmp
push
pop
xlat
jns
cmp
mov
std
adc
inc
out
push
sbb
adc
sbb
jb
cmp
push
fstpt
xlat
fnstenv
pop
jge
adc
pop
inc
mov
jp
sbb
jg
xor
push
mov
mov
and
sbb
jo
dec
and
int
lds
mov
pop
jb
inc
jge
loop
push
stos
push
mov
insb
and
stos
scas
pop
iret
cmpsl
sahf
jmp
fisubs
not
dec
out
jns
mov
dec
mov
mov
in
iret
xchg
cmp
hlt
js
jo
or
clc
data16
xchg
std
inc
xchg
add
repnz
ljmp
pop
lret
and
adc
or
jo
nop
pop
scas
mov
cwtl
jbe
jmp
shll
ja
sbb
pop
subb
ret
imul
mov
insl
pop
rclb
xchg
addb
adc
fldl
inc
jp
sub
insl
lcall
in
add
jae
rorb
mov
mov
mov
mov
cmp
jg
lcall
mov
xchg
mov
mov
lret
or
inc
testl
xorl
ja
vpmovqd
jnp
retw
fildl
xor
inc
lods
pop
enter
cmp
shr
sbb
push
jns
dec
mov
scas
dec
inc
ljmp
sub
mov
pushf
jmp
mov
hlt
stos
jge
mov
xchg
cwtl
sub
fldt
mov
mov
int3
popf
pop
mov
hlt
push
push
cs
fwait
testb
ret
jecxz
out
ja
push
pop
int
addb
pop
icebp
pop
jl
daa
lds
jne
daa
fwait
pop
sub
cld
repz
movsl
add
scas
mov
add
mov
imul
inc
cmpsl
aaa
mov
movsb
icebp
ret
and
arpl
loopne
mov
sub
int3
dec
enter
aas
pushf
fidivs
das
test
push
sub
push
xchg
in
das
or
push
addb
jl
enter
mov
aaa
mov
jb
dec
jge
mov
movsl
enter
dec
stc
pop
jne
and
outsl
add
dec
xor
cmp
outsb
pop
mov
dec
lds
inc
mov
dec
arpl
sbb
and
sbb
sub
cld
in
lods
lods
xor
or
xchg
pop
pop
loop
clc
sbb
xchg
cwtl
iret
inc
sbb
xlat
jle
lock
inc
inc
jl
pop
mov
adcl
iret
dec
mov
jmp
jmp
loopne
xchg
xchg
pop
out
loop
jmp
lret
mov
imul
mov
movsb
pusha
xlat
data16
sub
pcmpeqw
fstpt
mov
push
mov
movsb
inc
sbb
imull
nop
xchg
adc
mov
sar
mov
sbb
aaa
outsl
leave
cmp
cmpb
add
sub
stc
lcall
leave
mov
and
mull
mov
nopl
cmp
pop
pop
xchg
scas
enter
dec
out
mov
jg
ret
pop
std
call
mov
mov
mov
pop
jnp
xor
push
divl
add
repnz
inc
push
adc
add
xchg
xor
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
jmp
sub
lds
and
ds
jno
stos
rol
in
mov
sbb
sbb
mov
jg
test
leave
xchg
stos
push
or
cmp
sbb
xchg
inc
jmp
daa
insl
lea
imull
jg
data16
test
push
iret
jmp
popf
mov
mov
mov
in
mov
cld
pop
ja
outsl
testb
out
outsb
mov
push
aaa
add
aad
aas
push
dec
push
aad
push
inc
push
pushf
push
and
popf
stos
fxch
test
push
cmp
push
jp
divl
imul
xor
xchg
pop
imul
sub
iret
mov
or
sbb
cmc
cmpsb
das
or
jmp
xchg
sbb
cmp
sub
jmp
clc
push
test
mov
xchg
in
mov
cld
push
dec
adcl
shr
mov
loope
mov
fildll
jmp
fwait
lds
inc
scas
scas
cli
aad
movsl
mov
insb
leave
mov
popf
sbb
pop
scas
xor
xor
fsubrs
and
jne
add
fwait
cmp
adcl
les
add
mov
out
cmc
or
pop
out
int
loope
push
adc
test
mov
dec
mov
or
sub
or
mov
iret
add
mov
outsb
insl
dec
cmpsb
gs
dec
ret
push
push
enter
test
ljmp
adcl
cltd
cltd
lods
jle
jae
pop
or
and
mov
aam
ss
scas
add
or
ljmp
shl
cmp
fwait
cmp
push
leave
inc
inc
repnz
sahf
dec
lret
push
sub
adc
and
std
dec
pop
mov
mov
sub
jns
out
in
sti
aas
pusha
or
cmc
outsb
jno
push
jo
nop
and
push
cli
test
fiadds
aaa
pushf
cmpsb
xchg
js
std
in
sub
dec
add
mov
jns
popa
pop
push
sub
sbb
lahf
cmpsl
mov
mov
jne
inc
aad
or
inc
xchg
sbb
repz
testb
xor
movsl
sub
rcl
insb
and
pause
sub
orb
xchg
jnp
test
cmpsl
out
fnstcw
lods
sub
das
cmp
and
dec
cwtl
push
mov
lcall
cmp
adc
cltd
je
or
and
fldenv
in
and
dec
add
push
les
jae
fistps
cmp
ljmp
cld
fistl
dec
les
lods
movb
jno
jbe
into
pop
pop
or
movsl
and
testb
add
or
aad
add
push
out
leave
cwtl
movsl
repnz
push
in
or
sbbb
jb
stos
mov
mov
cmpsb
mov
sub
or
das
cmc
es
pop
cli
inc
cltd
outsb
lock
pop
push
mov
xor
pop
cld
aad
aad
mov
push
sbbl
jnp
and
or
stc
cmpsb
iret
pop
push
fdivs
add
nop
inc
lock
lcall
pop
xchg
fisttpll
pusha
test
jae
sub
outsl
pop
sub
gs
sub
fsubs
add
add
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
jmp
cs
and
push
mov
push
jle
loope
sbb
adc
sbb
popf
clc
stc
inc
and
add
cwtl
icebp
aam
sbb
stos
fmull
xchg
stos
adc
sbb
sub
pop
mov
cmpsl
jmp
pop
xchg
sbb
cmp
int3
jbe
sub
das
mov
mov
push
adc
out
test
push
mov
lea
dec
jmp
pop
xchg
and
loop
or
bound
xchg
jnp
dec
push
mov
fwait
sub
mov
cmp
lds
jle
jle
xor
das
dec
nop
mov
in
inc
dec
loopne
stos
add
jne
subb
mov
and
cli
sub
out
mov
pop
outsl
mov
dec
shll
shll
cld
nop
rcrb
pusha
push
cmp
int
fstpl
rclb
lcall
dec
shr
lret
cmp
dec
mov
mov
xchg
jbe
std
sub
xchg
loopne
mov
jg
je
adc
leave
lods
in
bound
gs
nop
popa
hlt
mov
test
and
or
pop
out
mov
loop
data16
orb
xor
sahf
daa
push
test
inc
lds
fbld
and
mov
lock
dec
cs
cmpsl
cli
jb
fcmovbe
jg
sbb
adcb
xchg
mov
subl
jecxz
mov
add
mov
movsl
dec
loop
jbe
aas
cmp
xchg
scas
xchg
cmpsb
pop
rorb
inc
sti
xor
loopne
push
add
std
push
sub
add
add
add
lahf
fwait
int
xor
add
mov
mov
inc
xchg
or
insb
mov
xchg
and
push
fnstsw
and
jns
xchg
pop
jb
ds
xchg
nop
imul
shlb
stos
stos
jnp
lock
add
mov
push
cwtl
lahf
sahf
mov
imul
inc
pop
xchg
push
fs
add
nop
mov
jg
adcl
fldcw
dec
sbb
sub
jle
inc
cmp
cmp
dec
imul
movsl
jle
push
adc
inc
adc
sub
call
imul
push
or
jge
in
sti
iret
add
mov
iret
pop
mov
pop
in
pop
pushf
jl
xchg
scas
aas
call
jno
mov
mov
xchg
fstps
ja
ja
push
push
sbb
mov
loope
jb
mov
pop
popa
arpl
lahf
xor
loope
and
cmp
stc
xchg
push
loopne
inc
xorb
lret
scas
xchg
icebp
jne
fmuls
lcall
rolb
mov
cmp
add
mov
inc
pop
jge
mov
mov
outsb
jecxz
ret
fidivs
out
inc
int3
pop
or
int
push
cmp
dec
mov
cltd
fisubl
sub
pop
testb
inc
into
loopne
cmp
jns
push
pusha
dec
xchg
adc
lret
sub
fbld
fists
int
shlb
jmp
sub
mov
mov
mov
push
pop
xchg
sarb
inc
call
add
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
jmp
cmp
cmp
and
mov
fistl
sbb
adc
sbb
in
add
or
jno
gs
cmp
pop
pop
cmp
mov
sbb
jecxz
sbb
push
cs
push
jno
stos
adc
je
dec
sbb
pop
idivl
push
into
adcb
ds
sub
fwait
outsb
pop
mov
dec
and
ss
sub
mov
pop
xchg
fstpl
repnz
inc
xchg
inc
sub
fisubl
xor
aas
push
in
jo
icebp
sbb
pop
aaa
fstpt
pushf
imul
push
mov
add
sub
fnstsw
std
aam
lock
push
xor
loope
mov
inc
scas
jp
mov
aad
fsubrs
lret
test
mov
sbb
iret
push
imul
scas
xlat
int
push
inc
push
xor
or
jbe
les
and
es
cmp
rol
xchg
xor
lock
push
in
loope
mov
jne
fsts
pop
jmp
sbb
add
sbb
dec
and
inc
mov
jmp
daa
and
push
inc
cmp
pop
cmp
inc
dec
lock
es
push
and
cmp
ret
cmp
push
xor
lds
xor
and
enter
jl
xorl
movsb
mov
xlat
pop
and
xor
push
lea
mov
sbb
lcall
dec
dec
dec
icebp
sub
sbb
test
int
test
mov
cmp
pop
xorb
movsl
jnp
mov
push
adc
popf
test
sbb
add
adc
cmp
inc
daa
fidivrl
cld
test
mov
lods
outsl
lods
inc
mov
or
ret
jg
xchg
out
std
adc
pop
lds
push
mov
daa
cmp
lret
xchg
mov
jb
aad
int3
lock
mov
les
mov
cmp
dec
stos
pop
fstpl
xlat
mov
lods
lea
push
add
popf
cs
xor
xor
adc
pop
sbb
xor
xor
jge
movsb
mov
sbb
aad
inc
mov
fnclex
insl
xchg
xchg
and
adc
pop
mov
lods
outsl
mov
sub
pop
andb
lods
sbb
dec
push
sbb
push
push
cmp
adc
mov
ljmp
dec
mov
out
cmp
inc
dec
fadds
ret
cmp
mov
jo
jmp
dec
sar
out
push
sub
push
lea
add
pop
push
imul
imul
xlat
and
int3
std
dec
scas
movsb
lea
adc
and
inc
clc
scas
aas
lret
dec
out
lock
call
dec
daa
pop
out
or
mov
inc
mov
sub
inc
push
je
push
aaa
mov
cmpsb
and
lcall
stc
push
rcll
loopne
dec
sub
stos
add
cmp
pop
adc
cmp
xor
adc
in
mov
dec
dec
test
outsl
mov
stos
lods
pop
loope
out
xchg
je
bound
push
add
fidivrl
sarb
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
jmp
inc
inc
in
loop
cmp
pop
pop
or
mov
aas
mov
sbb
sbb
push
enter
inc
inc
stc
inc
shr
cmpsb
jg
ds
pop
je
pop
aas
xchg
or
stc
fldenv
stos
cmp
dec
lcall
aam
xchg
xchg
dec
mov
jge
cmc
sar
xor
loop
jp
outsl
std
in
mov
out
xchg
scas
insl
or
rcll
into
arpl
leave
pop
push
lea
xor
mov
cmc
js
in
cmp
ret
jnp
sbb
pushf
cli
movsb
mov
inc
call
push
fs
inc
int3
into
inc
arpl
adc
cmpsl
adc
push
lds
pop
shrd
rolb
jp
test
lret
inc
lods
divb
fmuls
and
inc
push
dec
or
xor
jno
and
sbbl
imul
push
insl
sti
cmp
outsb
mov
movsl
int3
xchg
sbb
pop
jbe
stos
lret
mov
add
fs
int
xor
repz
mov
dec
mov
mov
test
mov
stos
stc
sbb
pop
fptan
adc
jb
enter
xchg
mov
add
jno
sbb
popf
hlt
inc
fwait
sub
out
xchg
xor
jge
negb
outsl
in
jecxz
stc
shrb
sub
adc
xchg
std
or
jle
mov
shl
insl
or
sbb
fiadds
mov
jne
mov
scas
shll
xchg
aas
aad
in
rolb
sbb
push
xchg
aas
icebp
inc
fistl
in
push
into
lahf
int3
lock
and
popa
cmp
cmp
xor
dec
jne
and
addr16
or
add
fcmovnb
dec
pop
rcrl
pop
divl
push
lds
xchg
test
dec
movsb
jns
push
pop
sahf
pop
pop
mov
inc
mov
mov
lcall
dec
inc
test
out
in
mov
loopne
cli
neg
mov
pop
sbb
or
xchg
jecxz
pop
sbb
mov
addl
mov
mov
mov
push
dec
lahf
test
inc
cmp
test
and
or
data16
xlat
xor
stos
adc
xor
mov
fisubrl
jle
gs
mov
adc
inc
test
jno
sub
outsb
push
sti
adc
mov
xor
push
mov
jp
jns
or
mov
gs
daa
or
sbb
in
inc
in
mov
scas
das
ret
sbb
orl
jo
imul
mov
and
or
mov
pop
shrl
fnsave
pop
adc
pop
aas
adc
add
fsubp
mov
cmp
repz
jg
hlt
sbb
push
rclb
push
mov
xchg
push
leave
nop
pop
cwtl
lds
xchg
push
or
sarb
addb
lods
insb
in
xor
mov
cli
jo
movl
mov
les
inc
xchg
xorb
movsl
mov
mov
aaa
jns
ljmp
jb
mov
in
lds
aas
fildll
dec
icebp
in
dec
mov
jmp
inc
mov
jb
jb
cmpsb
xchg
sbb
push
mov
push
sbb
adc
sbb
aad
xor
insb
inc
fcoml
pushf
arpl
das
fists
out
push
test
mov
push
fwait
or
mov
inc
fstpt
add
aas
ja
pop
jecxz
adcb
add
pop
inc
ds
jl
dec
dec
lock
adc
popa
sub
xchg
xor
aam
lock
out
in
mov
xor
add
mov
sarl
push
mov
xor
loopne
aas
stos
adc
push
cmc
xchg
or
sarb
push
js
in
test
jo
jp
mov
outsb
jecxz
cmp
cmp
jg
loopne
loop
loope
stc
repz
push
push
ljmp
add
adc
push
mov
add
stos
pop
test
lods
cmp
inc
cli
std
xchg
stc
cmp
aaa
mov
xchg
mov
xor
lcall
and
testl
or
call
jmp
loope
divl
lcall
xor
jecxz
int
and
stos
cmp
sbb
cmp
icebp
fwait
and
dec
and
cli
rorl
scas
sbb
stc
xor
dec
jmp
shll
das
fcompl
lods
insl
lea
inc
dec
in
loope
lret
or
jl
hlt
aad
or
scas
aaa
daa
or
jmp
push
stos
sbb
add
in
sub
lods
ljmp
les
call
stos
fdivl
fcoml
push
mov
and
xlat
loopne
jae
insb
jecxz
or
jmp
pop
incb
mov
mov
and
push
jae
push
leave
cmp
lret
xchg
inc
adc
out
sub
jle
ficomps
das
mov
rcl
dec
out
push
mov
outsb
jne
push
mov
jle
push
fnstenv
sub
mov
popf
lcall
jno
mov
cmp
inc
je
sbb
xchg
fdivs
enter
mov
jb
ss
sbb
into
jecxz
xchg
rcrb
outsb
ss
and
addr16
mov
pop
pop
aas
rcrl
jno
jmp
movl
sub
xchg
nop
or
or
adc
pushf
adc
xchg
adc
shr
sbb
ret
or
xor
jp
adc
jae
cld
xor
fimuls
sub
sbb
ss
aam
mov
push
mov
loopne
cmp
insl
or
ffreep
cld
fstl
pop
aam
jle
jae
pop
xchg
outsb
scas
cs
xor
sub
pop
pop
pop
mov
popf
lahf
inc
or
lret
in
pop
in
aas
mov
stos
pop
aaa
adc
inc
cmp
imul
push
jmp
fdivrl
mov
sbb
insb
adc
out
ds
mov
into
bound
cmc
jae
jb
lock
dec
or
mov
fisubrl
out
dec
sbb
enter
and
add
inc
cmpsb
lock
pop
mov
mov
jns
dec
nop
push
test
mov
cmp
pop
push
pop
fwait
cmpsb
insl
mov
push
bound
jo
and
dec
mov
pop
leave
lock
sbb
xor
rorb
rcll
shl
push
lea
push
lea
push
call
pushl
pushl
jmp
xor
fistpll
popf
jo
popf
lock
sbb
sbb
add
clc
shll
push
xor
jmp
xchg
xchg
jne
rcrl
vsubsd
loope
xor
iret
pop
dec
jle
pusha
sbb
pop
push
jge
xchg
sti
scas
roll
or
jo
fmull
call
sbb
shrb
jp
cmc
fwait
fwait
mov
jge
jae
inc
xchg
xchg
clc
cld
adcl
lret
aas
or
mov
mov
js
mov
mov
int3
in
mov
push
imul
psubw
repnz
dec
test
mov
cwtl
std
or
rorb
xor
mov
int
daa
icebp
jb
imul
dec
dec
inc
cmp
xor
into
add
adc
in
jae
neg
xchg
fstl
in
inc
adc
outsl
adc
outsb
fwait
push
std
pop
pop
cmp
cmpsb
stos
mov
push
lods
sub
push
loop
shlb
out
xchg
insl
pop
stos
mov
out
out
adc
lret
dec
dec
fxtract
xchg
loop
iret
pusha
cli
mov
and
leave
imul
shll
ds
imul
aaa
das
sbbb
sbb
dec
inc
sub
icebp
arpl
or
pop
mov
or
or
dec
dec
out
xchg
into
xchg
cmp
scas
and
pop
in
loop
add
rolb
or
scas
aam
xlat
jmp
sahf
loopne
int
repz
mov
and
mov
loope
and
movsl
sbb
mov
out
cmpsl
sub
fsubs
pop
push
adc
sub
sbb
int
jns
js
inc
mov
into
addr16
xchg
adc
in
out
cmp
adc
xchg
sahf
sbb
inc
ss
jp
cmp
push
jecxz
jae
ss
pushf
adc
scas
pop
popa
lret
add
mov
sahf
shr
out
mov
scas
mov
movsb
loop
pop
in
push
mov
out
or
xor
adc
les
gs
mov
jo
pop
sbb
std
lcall
fidivrl
into
mov
subb
stc
into
out
pop
jbe
or
jne
sahf
nop
inc
pusha
jae
sahf
outsl
jmp
mov
enter
sbb
int
mov
bound
dec
aad
xor
lret
jge
stc
mov
inc
cmpb
push
stos
lahf
aam
jne
push
adcl
pop
mov
sbb
cltd
aam
cmp
push
jmp
jnp
xchg
inc
loope
mov
scas
gs
xchg
dec
fucomi
shll
sub
out
push
mov
mov
push
repz
fwait
cmc
xchg
and
cltd
push
inc
add
jl
xor
lods
sub
scas
or
pop
loop
push
xchg
sub
cmp
out
pop
movsl
mov
xlat
and
ljmp
mov
mov
add
jg
popf
xchg
push
cmpsl
pop
leave
cmp
or
mov
xor
inc
push
aaa
aad
imul
jns
in
popf
cmp
sbb
fsts
mov
rorb
push
ret
popa
push
je
and
je
and
out
pushf
decl
inc
and
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
jmp
jns
imul
pop
notl
mov
mov
sbb
enter
push
rorb
xchg
loope
cli
pop
push
cmp
or
lods
pop
push
inc
push
add
fnstcw
ret
sbb
fbstp
cmpsb
insb
sbb
mov
ret
sub
fstps
js
cmp
cmc
in
dec
sar
pop
fldl
ja
je
pop
mov
add
icebp
aaa
lahf
dec
test
mov
jns
lods
mov
jo
into
pop
ret
iret
sbb
cs
cmpsl
xor
insb
jecxz
dec
into
add
outsl
out
push
adc
test
push
mov
lret
stos
pop
lods
sarl
dec
mov
and
inc
insl
lret
jp
cmpsb
lahf
mov
pop
scas
out
jle
fidivrs
insb
adc
jge
negb
ljmp
xor
lock
scas
mov
popf
push
pop
pushf
inc
xlat
and
sbb
jbe
cltd
mov
push
dec
xor
clc
push
aas
inc
inc
sub
or
outsb
push
cmp
test
in
and
cli
loop
mov
inc
cltd
or
mov
inc
pmulhuw
xchg
lcall
cmpsb
rolb
mov
jecxz
stc
lds
xchg
add
mov
and
mov
movsl
mov
repnz
rclb
adc
sub
jne
mov
das
mov
jno
push
xchg
cmpsb
ja
dec
cmp
cmc
ret
mov
push
test
dec
outsb
sub
and
jl
mov
movsb
jecxz
dec
ret
mov
or
mov
cmp
out
pop
pop
fsubs
pop
clc
popa
dec
stc
add
mov
xor
gs
popa
lea
lds
sub
js
cmpb
sub
bound
push
jge
cmp
nop
mov
add
into
mov
inc
test
std
lret
cmp
mov
sbb
push
sub
jbe
mov
out
jns
jle
insl
test
cmp
rcrl
mov
cmpsl
adc
jmp
jne
rclb
jge
aam
push
mov
ficoml
cmp
pop
fwait
jmp
imul
addb
sbb
frstor
adc
mov
lret
pop
pop
stos
fisttpl
movsl
in
xor
test
ljmp
sub
mov
add
pop
inc
and
scas
dec
lods
and
imul
lret
jmp
jge
sub
sbb
fstpl
test
imul
aam
push
cld
lahf
cld
lea
psrlq
call
jnp
inc
push
xchg
fnstcw
lcall
mov
rcrb
sub
mov
pop
pop
or
cmp
pshufw
iret
outsb
cmp
xor
fldl
lret
cmp
dec
jle
pop
lcall
sub
xchg
adc
pop
inc
pop
dec
mov
enter
das
mov
push
cwtl
sub
sub
mov
sub
mov
insl
pop
jl
andb
inc
stc
sub
sub
testb
xor
mov
inc
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
jmp
ss
cs
push
sub
loop
adc
inc
mov
sbb
adc
sbb
jo
bnd
in
jne
jmp
lahf
xchg
jb
or
mov
dec
add
and
fucom
popa
dec
call
pop
repz
sub
fbld
dec
jae
lock
mov
stos
and
push
push
inc
lods
pop
mov
sarl
mov
out
add
inc
push
xor
call
out
xchg
mov
stos
xor
aam
and
and
pop
xchg
pop
mov
inc
rcl
or
xor
sbb
outsb
cmp
adc
cltd
jno
add
loope
or
lahf
fiadds
inc
xor
inc
inc
popa
iret
cmp
push
mov
sub
fsubrl
sub
push
pop
loopne
xor
mov
cwtl
dec
dec
and
xor
mov
ljmp
push
add
xor
push
inc
and
icebp
loope
int3
mov
in
out
xor
jbe
mov
ss
add
mov
fldcw
xor
icebp
repnz
sub
cmovge
out
dec
push
jle
cltd
pop
xchg
mov
xchg
pop
and
xchg
mov
inc
pop
shl
fucomip
stos
in
sub
nop
bound
xchg
repnz
dec
dec
sub
cli
inc
sub
nop
imull
fdivrp
cs
ss
das
pop
push
or
lahf
mov
pop
outsb
add
dec
test
inc
sarl
and
loop
mov
jp
movsb
dec
insl
inc
hlt
cmp
mov
mov
sbb
mov
or
les
punpckhbw
in
mov
ds
push
clc
enter
mov
xchg
ja
push
ret
push
fdivrp
sbb
ja
test
sbb
mov
push
jge
es
add
dec
add
jle,pt
or
jno
fwait
je
js
out
lock
mov
cli
hlt
adc
push
push
ficomps
xchg
sbb
inc
icebp
loope
inc
adc
push
lock
test
adc
mov
fbstp
loopne
dec
leave
pop
scas
sub
loopne
enter
imul
mov
mov
jmp
add
icebp
loop
jge
jae
sbb
jae
cmp
icebp
inc
adc
shlb
nop
mov
fs
jo
dec
pop
lods
scas
cli
aas
adc
push
mov
adc
mov
pop
mov
jle
mov
xlat
in
testl
pushf
xchg
sub
out
cli
in
fcomps
hlt
pop
xor
ds
jae
outsb
fbld
ficompl
divb
mov
ret
scas
sbb
pop
scas
and
adcl
jmp
add
push
dec
mov
and
fldl
pushf
jge
pop
xor
sbb
addr16
arpl
add
push
fidivs
rcr
iret
aad
sahf
jp
cltd
es
mov
shrl
and
or
mov
jp
inc
out
insl
pop
sarb
std
iret
dec
jmp
fdivrl
icebp
xor
pop
add
ret
cmp
xor
and
adc
adc
sbb
pop
xchg
out
adc
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
jmp
fistpll
jne
sbb
sarl
mov
sbb
adc
sbb
mov
push
dec
ret
sti
icebp
sbb
test
pop
mov
sahf
adc
mov
std
jb
xor
push
fs
sbb
idivb
cmp
sbb
gs
add
push
aad
mov
cmpsb
fisttps
or
add
adc
sti
pop
lods
pushf
cmp
fcompl
or
inc
mov
push
gs
fcmovne
pop
out
mov
xchg
jmp
cmpsl
push
add
mov
loopne
pop
xchg
push
dec
push
xor
out
decb
les
push
adc
inc
dec
inc
mov
in
and
lock
aas
cmp
jp
inc
mov
sub
dec
scas
mov
or
fsts
lahf
push
mov
negl
pop
mov
loope
xchg
aam
sub
fwait
dec
addr16
les
mov
inc
or
dec
adc
sub
mov
mov
ja
jmp
rclb
pop
imul
xchg
mov
jmp
lods
dec
ds
and
xor
push
test
adc
jecxz
mov
xchg
adc
dec
imul
scas
jmp
pushfw
jns
pop
dec
sbb
je
jnp
movsb
xor
sbb
xchg
xor
js
imul
dec
inc
stos
scas
cmpb
jb
out
pop
jmp
popa
mov
les
add
add
sub
in
aad
xor
popa
jl
sub
or
push
add
rclb
sub
jnp
lret
dec
jbe
lret
jne
adc
sub
cmp
psrlw
repnz
cmp
stos
push
inc
push
mov
add
or
out
jno
stos
std
add
mov
cmp
mov
lcall
xchg
pop
sbb
fisubrs
inc
cmp
bound
fsubl
insl
and
insb
scas
pop
jg
xchg
enter
sub
dec
adc
stos
dec
aaa
push
dec
xor
imull
jle
inc
testl
xchg
mov
or
inc
stos
lahf
or
ljmp
add
pop
inc
cs
ret
leave
scas
into
stos
and
inc
mov
divb
daa
mov
add
lea
xchg
stos
mov
ss
adc
fwait
test
and
in
and
dec
xlat
aad
outsb
rcll
add
pusha
mov
ficomps
cwtl
js
popf
jmp
push
xor
cmc
into
jle
pop
jo
subb
xor
setge
ret
pop
and
mov
ja
jbe
push
jne
mov
test
frstor
add
dec
loope
cld
scas
arpl
shll
pop
in
dec
pop
jb
popa
das
push
ret
lods
mov
jnp
and
jecxz
imull
ljmp
cmp
test
xor
cmpb
fisttpl
mov
or
stos
cmp
and
cwtl
mov
test
roll
pop
movsl
lret
repnz
dec
lods
scas
in
mov
push
jmp
js
loope
test
pop
mov
add
lods
lahf
push
push
das
mov
iret
push
out
push
dec
aad
loope
add
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
and
jmp
sub
push
test
sbb
ja
xchg
mov
and
sbb
dec
arpl
fists
add
jns
lds
mov
ret
addl
cwtl
or
icebp
lea
out
xorl
imul
in
loop
decb
dec
repnz
xor
xchg
adc
mov
mov
add
bnd
sbb
pop
cmp
cmpsl
jle
or
rolb
dec
fs
insb
arpl
push
faddl
arpl
int3
xor
xor
sub
das
mov
stos
cmp
sbb
out
xchg
jno
xor
fs
add
loope
pop
movsb
testb
xor
adc
enter
enter
xor
jl
fiaddl
push
jecxz
mov
pushf
or
pop
enter
mov
dec
inc
xchg
pop
aas
and
leave
xchg
cwtl
cmp
inc
push
data16
test
leave
sbb
nop
dec
jae
inc
sub
lret
and
mov
dec
int
movsb
rclb
xchg
jmp
mov
cmp
and
pop
insl
mov
and
adc
stc
adc
push
in
jg
stos
mov
cmp
fdivrl
shrb
stos
or
xor
into
enter
jbe
xor
mov
or
mov
adc
adcl
lods
and
add
dec
aad
jae
outsl
stc
fdivs
sbb
xor
xor
in
mov
cmp
ret
mov
pushf
sahf
pop
pop
jge
shll
insl
cmp
loope
scas
adc
adc
xchg
stc
cmp
aad
cmpsl
sbb
xor
mov
cmc
xchg
sub
adc
out
call
fmuls
jb
stos
mov
in
ret
push
push
pop
jbe
mulb
dec
mov
hlt
xchg
lcall
ss
ret
adc
jmp
jae
sbb
sbb
pop
lea
js
shrd
rclb
jb
in
jns
imul
popa
add
sahf
xor
and
sbb
in
sub
stc
jnp
cmp
cmp
cmp
loope
and
sbb
jle
xor
xor
fists
push
pop
lret
sbb
rcrb
fwait
inc
sbb
mov
stos
pushf
jp
insl
jge
mov
xchg
sbb
add
aam
mov
lret
jmp
call
inc
subb
icebp
out
aas
or
enter
ret
sbb
sub
jmp
push
shll
dec
xor
add
das
adc
les
or
mov
adc
inc
jecxz
not
outsl
testb
xchg
mov
pop
sub
mov
cmp
shrl
xor
cltd
push
addr16
mov
add
jle
sub
out
lock
lcall
hlt
call
mov
xchg
sub
inc
cmpsl
lock
inc
sbb
and
sub
cmp
es
xor
lahf
mov
fstpt
and
dec
nop
pop
add
pop
jl
stos
in
pop
and
lock
cwtl
sub
neg
push
xor
add
mov
sub
or
movl
or
movl
sbbl
movl
add
mov
mov
movl
xor
div
imul
cmpl
mov
mov
movl
jmp
movl
je
pushl
push
push
push
push
pushl
pushl
call
negl
and
andl
not
sbb
adcl
mov
xor
movzbl
add
and
mov
subl
xor
sbbl
div
cmpl
mov
notl
mov
jmp
movl
jle
pushl
push
pushl
push
push
call
add
movl
xor
add
and
subl
add
sub
cmpl
mov
mov
mov
jmp
movl
je
pushl
push
call
adc
xor
sub
add
mov
mov
and
sub
mov
add
movl
movl
neg
movl
cmpl
not
mov
movl
mov
jmp
movl
jge
push
push
call
negl
mov
mov
sub
and
add
sbb
movzwl
adc
mov
and
add
xor
inc
xor
and
imul
mov
xor
add
adc
and
add
sub
incl
mov
movl
movl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jb
push
pushl
push
pushl
pushl
call
sub
orl
mov
mov
add
mov
mov
sub
or
mov
mov
adc
mov
mov
sub
sub
or
mov
imul
mov
cmpl
notl
mov
notl
mov
jmp
movl
ja
push
push
push
pushl
push
pushl
pushl
call
add
add
negl
mov
sbb
mov
sbb
xor
mov
sub
mov
movzbl
sub
imul
cmpl
not
notl
jmp
movl
not
jne
pushl
call
mov
mov
or
orl
subl
sbb
add
mov
and
mov
xor
imul
cmpl
movl
movl
jmp
movl
movl
jge
call
or
negl
mov
mov
sbb
orl
add
or
mov
and
or
movl
mov
addl
xor
andl
jmp
pop
push
testl
xor
pop
jle
mov
sbb
dec
aas
xor
or
push
xor
leave
mov
xchg
or
mov
pop
fstpl
mov
test
jo
aaa
pushf
lret
nop
adc
push
dec
pop
gs
add
vpackssdw
cmp
xchg
cmp
cmp
jb
int
xor
lds
cmp
arpl
inc
scas
bound
inc
lcall
sub
aas
vpcmpeqb
xor
mov
mov
ret
or
cmp
and
lahf
lock
push
sbbl
or
xor
rcll
idivl
push
adc
outsb
mov
mov
xor
dec
aad
xchg
pextrw
shrl
dec
ss
pop
out
push
add
and
mov
xchg
popl
jecxz
sub
and
push
mov
cmpsl
xchg
inc
pop
inc
add
inc
loope
push
mov
icebp
adc
cwtl
arpl
icebp
or
mov
adc
sub
sbb
dec
adc
jns
sub
xor
ja
push
cmp
xor
sub
lock
out
and
pop
pop
in
jno
into
adc
pop
sub
lock
push
mov
inc
les
pop
mov
ss
xchg
jb
mov
cltd
dec
scas
fbstp
testb
cmpsb
mov
mov
test
lcall
cmpsl
jge
dec
pop
lret
cmp
lahf
int3
jle
mov
test
mov
mov
mov
xchg
jns
cmp
sahf
shrl
test
xchg
dec
lods
dec
js,pt
jle
jb
stc
es
imul
jne
jl
sub
movsl
jle
movsb
std
xchg
int3
daa
data16
les
mov
jecxz
mov
mov
adc
pop
pop
sub
dec
outsl
arpl
mov
fcoms
scas
aam
mov
jl
add
dec
outsb
loopne
lods
int
stos
or
mov
push
jmp
pop
or
test
lea
sbb
cs
xor
out
ss
lcall
int3
shld
mov
pop
mov
sub
inc
lds
stc
mov
and
xchg
jl
fisubl
xchg
rclb
mov
push
xchg
and
and
ffreep
mov
test
cmc
pusha
out
outsb
push
test
sbb
pop
cmp
adc
inc
and
xchg
gs
sbbl
jecxz
aaa
push
jle
xor
es
mov
jmp
xchg
xor
int
call
mov
outsb
push
cmp
mov
loope
cmpsb
outsl
pop
jp
aam
sub
loop
adcb
and
cmp
fsub
jo
push
addr16
cld
adc
iret
push
mov
hlt
mov
inc
xor
out
jecxz
lods
shll
ss
stos
xchg
inc
pop
stc
js
xor
mov
ss
jne
shld
cmc
cld
das
push
sub
push
sbb
sbb
repz
mov
mov
andl
lea
mov
add
mov
mov
and
movl
subl
movl
movl
andl
mov
cmpl
mov
mov
jmp
movl
je
push
pushl
push
pushl
call
not
dec
sub
inc
adc
and
movzwl
sub
mov
xor
mov
or
xor
add
subl
mov
or
add
xor
xor
or
adc
mov
mov
mov
sub
sub
movl
movl
adc
movl
mov
cmpl
movl
mov
mov
movl
jmp
mov
jae
pushl
pushl
push
push
push
call
mov
add
add
adcl
decl
addl
sbb
orl
mov
or
add
cmpl
movl
movl
jmp
movl
jl
pushl
call
adcl
xor
xor
add
mov
adcl
sbb
movzwl
or
adc
xor
cmpl
movl
mov
jmp
movl
jae
push
pushl
call
xor
or
adc
mov
sub
movzwl
sub
mov
sbbl
addl
adc
mov
sub
xor
mov
lea
cmpl
mov
mov
jmp
movl
jg
pushl
push
pushl
call
xor
mov
or
mov
add
xor
add
add
and
or
dec
sub
not
mov
movl
movl
cmpl
mov
mov
jmp
mov
jl
pushl
pushl
push
call
add
or
or
and
mov
sbb
and
add
mov
and
add
sub
imul
mov
sbb
mov
imul
xor
mov
xor
mov
mov
div
andl
sub
movzbl
sub
mov
xor
movl
cmpl
movl
movl
mov
mov
jmp
movl
jne
pushl
push
push
push
push
call
xor
dec
add
xorl
add
subl
sub
movl
movl
cmpl
mov
mov
movl
movl
jmp
mov
movl
jle
pushl
push
push
call
add
xorl
or
movl
or
mov
cmpl
mov
mov
jmp
movl
movl
jbe
push
call
dec
add
movl
sbb
and
subl
mov
xor
sbbl
div
orl
imul
sub
add
or
mov
addl
xor
xor
mov
div
xor
movzbl
and
mov
cmpl
mov
mov
mov
jmp
movl
jne
push
call
orl
or
adc
andl
subl
subl
add
mov
mov
sub
and
movl
sbbl
movl
neg
movl
subl
mov
mov
sub
add
shr
sbb
sub
cmpl
movl
movl
movl
jmp
mov
jl
push
push
push
call
orl
xor
sub
addl
adcl
sbbl
mov
subl
imul
or
mov
and
adc
mov
subl
sub
movl
mov
cmpl
mov
movl
movzwl
jmp
movl
jle
pushl
push
push
call
and
or
mov
add
and
adc
movl
cmpl
movl
mov
jmp
mov
mov
jbe
pushl
pushl
push
call
mov
adc
sub
mov
and
mov
and
sub
movzbl
adc
movl
mov
sbb
or
mov
or
sub
sub
mov
movzwl
sbb
movl
movl
mov
mov
sub
or
movl
movl
inc
movl
movl
adc
movl
mov
and
mov
and
add
cmpl
movl
movl
mov
mov
jmp
movl
jbe
push
push
pushl
call
andl
mov
or
xorl
subl
add
dec
mov
add
movzwl
xor
mov
subl
sub
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
pushl
call
movzbl
or
sbb
or
xor
sbb
or
xorl
movzwl
xor
mov
mov
imul
imul
and
mov
or
cmpl
mov
mov
not
jmp
movl
jl
push
push
pushl
push
call
or
mov
xor
mov
andl
or
mov
mov
and
mov
or
mov
add
xor
add
add
mov
mov
movl
lea
orl
push
xorl
call
adc
mov
adc
mov
sub
jmp
scas
dec
jb
pop
and
push
movsb
test
sbb
adc
sbb
dec
ds
and
and
jbe
jle
sahf
aam
in
ss
xchg
push
ss
pop
mov
push
jl
and
pushl
into
mov
out
mov
ds
fst
push
cmp
shrl
pop
or
in
xchg
mov
mov
ljmp
jge
dec
add
add
mov
adc
cmpsl
or
stos
dec
xchg
jne
repz
leave
stos
or
jne
repz
or
or
pop
jae
mov
push
jge
jp
ret
sub
cmpsb
mov
es
and
negl
test
mov
xor
enter
mov
rcl
sti
sbb
mov
rorl
ficompl
or
or
lock
shrb
cmpsb
sub
or
push
arpl
movsb
inc
push
out
loopne
and
adc
or
mov
cmp
ret
gs
jecxz
aas
dec
xchg
cmpb
test
add
int
das
in
xchg
push
add
mov
pop
addr16
jg
pushf
adc
ret
sbbb
mov
push
js
sbb
std
or
loope
sbb
adc
xor
imul
lock
das
cmp
pusha
adc
mov
adc
sub
and
mov
popa
ret
jno
jne
add
mov
repnz
xchg
add
mov
xor
jle
fxtract
xchg
xchg
add
lea
adc
push
insb
pop
dec
test
or
into
push
mov
dec
xchg
jp
pop
xchg
dec
fsubs
aaa
icebp
jb
loopne
out
and
xor
mov
nop
test
lods
mov
outsb
iret
cmp
push
mov
shlb
loop
xor
mov
mov
scas
sbb
and
cmpsl
cmpsb
ret
sub
sbb
call
cmpsb
or
cli
xchg
xchg
xor
pop
add
jmp
pop
insl
pusha
pop
sbb
out
stos
mov
in
pusha
rorb
or
push
in
out
pop
xorb
and
mov
sbb
cmpsl
ljmp
jle
jl
pop
push
movsl
test
nopl
in
push
inc
push
mov
andl
push
enter
fucom
jno
push
xor
stos
pop
sbb
add
out
in
inc
xor
pop
jle
jl
pop
pop
ret
push
cmp
clc
pop
pop
dec
repz
pop
daa
add
int3
cmpb
mov
jg
mov
mov
shrb
or
jns
popa
mov
mov
dec
sahf
inc
jl
push
xlat
mov
sub
dec
mov
movsb
xor
xlat
std
mov
xchg
incl
outsb
cmp
sub
add
inc
test
out
mov
jle
subb
int
mov
ret
je
jp
jecxz
testl
jns
loope
xorl
mov
jecxz
pop
int
mov
in
push
fsubs
rolb
jns
mov
ret
je
aaa
mov
fcomps
mov
add
mov
add
cmpl
movl
not
movl
jmp
movl
movl
jg
push
push
call
sub
add
xor
mov
and
or
add
sub
add
sbb
and
sub
xor
mov
andl
div
not
xor
add
mov
movl
dec
movl
movl
and
movl
cmpl
not
mov
jmp
movl
jae
push
call
not
orl
dec
sub
xor
movl
movl
mov
mov
sub
xor
movl
sbbl
movl
sub
movl
xorl
movl
movl
movl
mov
mov
cmpl
mov
not
not
jmp
movl
movl
jge
push
call
or
sub
xor
xor
add
add
add
and
mov
or
cmpl
mov
mov
jmp
movl
ja
pushl
push
pushl
pushl
pushl
push
push
call
mov
adc
mov
movzbl
xor
and
xor
or
xor
add
sub
xor
mov
mov
adc
mov
and
sbb
sub
sub
cmpl
movzwl
mov
jmp
mov
jg
push
call
mov
mov
sbb
adc
dec
sbbl
imul
mov
cmpl
movl
mov
mov
jmp
movl
jle
pushl
call
adc
mov
add
sub
addl
xor
add
sbb
mov
adc
lea
addl
mov
and
mov
adc
mov
mov
mov
xor
mov
xor
add
andl
mov
xor
lea
add
and
cmpl
movl
mov
movl
mov
jmp
movl
jge
push
push
call
and
or
xorl
add
mov
orl
sub
add
mov
movl
jmp
fidivrs
cli
sbb
dec
push
mov
fs
push
sbb
adc
sbb
movsl
xchg
loopne
sbb
dec
test
or
notb
fldcw
lret
inc
xor
sbb
jne
maskmovq
mull
orl
loope
pcmpgtb
scas
xchg
or
test
mov
out
mov
insl
push
inc
add
rcrb
xchg
inc
in
xor
mov
jbe
jg
pusha
lret
fwait
sub
sti
in
pop
push
mov
mov
pop
mov
push
push
mov
jp
ljmp
aam
out
pop
aaa
sub
xlat
daa
mov
mov
test
ret
jp
xlat
push
mov
pop
add
or
lds
ret
dec
sbb
lock
popa
mov
jno
mov
cld
xor
arpl
xor
out
pop
sub
jg
sarl
lock
xor
movsb
or
jne
std
pop
cmp
cwtl
dec
xchg
inc
or
jl
rcll
int
mov
cli
mov
pop
cmc
lock
jae
imul
lods
xchg
fwait
inc
out
ds
sub
ds
xor
pop
out
cmpsl
popa
add
adcb
adc
in
iret
jns
sbb
scas
xchg
adcb
test
arpl
pop
repz
jbe
imul
clc
into
inc
add
movsl
mov
cld
cmp
into
notb
test
imul
pop
dec
out
xchg
fadd
fistpll
cmc
lret
inc
in
rorl
push
fdivr
lods
mov
imul
push
imul
lret
orl
jb
lahf
leave
addl
lods
fisubrl
pusha
sbb
xchg
mov
jmp
xor
into
xor
mov
aas
cmp
popf
call
lds
dec
xor
inc
jae
and
or
addl
test
stc
aas
pushf
es
loop
pop
gs
pop
mov
and
cld
cmc
pop
pop
inc
mov
xchg
dec
xchg
loopne
or
test
and
sahf
and
cmc
daa
xchg
dec
mov
push
jmp
push
negb
dec
dec
push
adcl
icebp
sbb
fcom
cli
test
add
rcrl
mov
or
roll
jns
inc
adc
loop
mov
loopne
mov
pop
in
dec
scas
inc
mov
repnz
ror
mov
push
rcll
sarl
push
mov
xchg
sbb
xchg
stc
cmpsl
cmp
popf
push
fwait
xchg
xor
mov
scas
stos
push
fdivrl
repnz
inc
popa
sub
mov
cmp
fistps
push
adc
mov
stos
xor
adc
adc
imul
jnp
xor
add
cmp
cmp
xchg
and
push
dec
iret
and
fidivrl
enter
dec
jae
sti
jns
xchg
dec
sub
shrb
mov
shrb
pop
or
iret
sbb
sbb
sub
push
aam
lods
out
arpl
mov
adc
xchg
sub
shrb
ja
jge
pop
mov
mov
xlat
rol
push
cmp
push
bound
fbstp
cld
cmp
loop
imul
scas
or
or
push
movl
movl
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
movsb
add
sub
movsb
jp
int3
push
stos
daa
fsubrp
stos
outsl
lea
sbb
adc
sbb
add
mov
adcb
mov
pop
lret
jecxz
jecxz
repz
add
mov
dec
pop
push
pusha
inc
test
inc
int3
bnd
push
mov
mov
nop
mov
lahf
rcrl
pop
ret
pop
mov
mov
sub
push
outsl
jmp
incl
orb
dec
sub
pop
sbb
rcll
mov
push
xor
ss
sbb
enter
jnp
jbe
and
add
and
xchg
add
nop
stos
inc
mov
sbb
movsb
mov
dec
fsubs
fisttps
mov
sbb
or
sub
push
shlb
into
mov
cmpsl
mov
pop
movsb
add
jge
mov
jge
gs
mov
sub
dec
jb
lret
and
push
or
gs
movsl
and
into
fsubl
push
imul
adc
dec
mov
push
inc
pop
iret
loop
jecxz
shrb
pop
loop
int3
push
add
pop
inc
add
push
sbbl
imul
adc
mulps
stos
leave
les
fld
mov
lods
mov
mov
cmp
lea
gs
add
jl
in
loope
inc
cmp
fmuls
cmp
adc
cltd
andl
loope
inc
cltd
lds
jno
mov
inc
ja
mov
mov
jl
aas
pop
fdiv
dec
pushf
or
out
push
jbe
adc
imul
jl
lods
scas
ficomps
xor
xor
je
ret
out
jmp
sub
inc
cltd
in
mov
out
repnz
in
out
sub
mov
loopne
ljmp
push
inc
fnstenv
jne
enter
stos
iret
loopne
and
sub
xlat
pop
fimuls
loop
mov
sub
stos
inc
xchg
jmp
adc
dec
xchg
cwtl
arpl
cmpsb
sbb
sarb
pop
out
cmp
iret
je
int3
xor
push
push
lock
in
push
addr16
les
icebp
add
aas
dec
aad
lret
pop
xchg
lods
scas
push
add
sub
sbb
adc
sbb
clc
imul
xor
enter
call
in
fwait
imul
addr16
imul
test
test
mov
sbbb
xor
es
lods
add
lcall
mov
lcall
fnstcw
and
push
into
cld
xor
out
push
loop
popf
push
in
lock
rdtsc
das
cli
pop
outsl
popf
lret
dec
loop
or
fists
xchg
or
mov
xchg
jbe
jne
or
loop
popf
push
dec
loope
add
je
jp
adc
mov
jns
je
add
adcl
popf
cltd
lahf
dec
iret
mov
mov
ret
push
enter
add
sub
imul
ds
push
sahf
mov
jge
inc
cwtl
and
dec
push
add
adc
in
int3
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
jmp
loopne
add
sbb
fcomps
or
xchg
sbb
adc
sbb
std
adc
out
fs
into
stos
inc
xor
lods
inc
clc
int3
pop
push
shrb
mov
cmp
adc
lds
or
mov
jnp
mov
or
mov
loop
sbb
mov
into
fmuls
jge
lds
orb
iret
jge
dec
or
inc
push
xchg
aad
addr16
sbb
xchg
inc
jbe
inc
sbb
insb
adc
sbb
dec
nop
rorl
mov
jo
rorl
cltd
je
enter
rcrb
cmc
mov
les
sbb
jg
lea
shll
mov
sub
sbb
or
shll
fidivrs
pop
inc
sahf
sbb
jecxz
movsl
enter
test
in
loope
sbb
ja
mov
aam
jecxz
pop
pusha
xor
add
dec
dec
out
fdivrl
aad
mov
jp
jnp
andl
ret
mov
out
fsub
xchg
pop
or
mov
sub
sbb
in
add
jnp
or
rorb
jmp
loop
inc
mov
fbld
mov
xchg
push
scas
pop
jo
je
out
loope
iret
dec
repz
sti
outsb
leave
sub
dec
push
das
mov
sub
adc
rcr
repz
out
insl
push
divb
aaa
sarl
fisubs
push
imul
mov
jae
fwait
insl
shlb
add
rcr
ror
fs
loopne
jae
leave
sub
lret
cmpsb
dec
push
loop
xchg
subl
xchg
jecxz
pop
inc
bound
cmpsl
cmp
nop
arpl
pop
or
adc
and
jge
je
mov
pushf
inc
cmpsl
loope
cltd
cltd
xchg
out
jg
mov
jle
push
pop
add
into
insb
sti
dec
xchg
xchg
push
or
and
in
sbb
aaa
lahf
aad
mov
cli
pop
xor
cmp
insl
or
mov
icebp
ss
scas
inc
imul
xor
pop
fdivp
dec
jnp
je
in
sub
xchg
add
jl
mov
ret
jge,pt
jecxz
mov
ficomps
bound
lea
inc
mov
jge
jp
sub
imul
xchg
pop
in
mov
pop
subb
xchg
dec
loope
sbb
ds
es
cmp
sti
mov
xor
loopne
lock
fmul
pop
lock
and
les
lret
mov
std
daa
sbb
hlt
push
mov
int3
pop
cmp
roll
sub
dec
in
inc
or
xor
lcall
pop
in
sbb
inc
imull
pop
clc
cmc
inc
rcr
push
insl
popf
sub
ret
xchg
add
ffree
cmp
outsb
sub
jnp
jg
lods
pop
shll
mov
test
cs
scas
pop
ret
fwait
jle
mov
mov
jg
xor
les
jecxz
aaa
sbb
cmp
shrb
sub
lea
fs
loopne
out
cmp
int3
popa
add
xor
inc
cmpsl
xchg
mov
or
xchg
shlb
daa
aad
mov
xor
ss
roll
xor
pop
jge
decl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
jmp
adc
pop
out
loop
loope
add
mov
cmpl
and
sbb
aaa
fcoml
or
lock
test
ror
dec
in
rep
in
xchg
cmpsl
xorb
cmp
clc
cli
jnp
imul
and
adc
pop
insl
inc
sub
cmp
fwait
cli
pop
or
mov
xor
cmp
scas
popa
ja
in
outsl
in
cld
outsl
cmp
addr16
mov
jg
lea
add
insl
out
jg
aas
nop
lret
xlat
mov
outsl
mov
lods
adc
mov
dec
dec
push
into
xchg
mov
adc
xchg
icebp
gs
loopne
mov
into
xchg
sbb
cltd
fwait
mov
sub
nop
cmpsb
enter
das
lret
loopne
data16
iret
pop
push
or
out
test
iret
ljmp
push
and
std
push
mov
mov
mov
jp
dec
pusha
xor
and
cltd
jl
popa
jle
push
lret
ret
push
jmp
cld
push
iret
test
retw
aad
xor
fsubrl
pop
inc
inc
insb
addr16
cwtl
cmp
xchg
movsb
xor
lret
and
jb
imulb
inc
js
lcall
mov
data16
int3
mov
sti
dec
lea
lahf
imul
cmp
fwait
xor
sti
sarl
push
jne
in
mov
cs
adc
sbb
leave
jns
jmp
mov
ljmp
call
lods
out
inc
inc
rorl
shl
bound
jg
int3
inc
sub
jae
xlat
sbb
iret
dec
popl
sbb
sbbb
test
fnsave
movsl
xchg
and
outsl
sbbl
adc
in
xchg
jb
sarb
push
rorb
sbb
mov
jl
xchg
sub
lret
sahf
inc
hlt
sbb
std
popf
js
jge
xor
pushf
aaa
lret
daa
in
rorb
pop
adc
out
jb
push
outsl
adc
mov
lret
stc
lcall
pusha
xor
int3
and
dec
cmp
popf
mov
out
call
lods
insb
imul
jmp
and
lods
push
xorb
out
shrl
popa
jmp
jmp
js
inc
jne
sbb
mov
cmp
sbb
push
sub
sti
cmp
movsb
cmp
popa
test
loopne
arpl
es
and
push
jno
pop
aam
cmp
sub
pop
daa
push
mov
mov
mov
push
gs
cmp
stos
out
sub
sbb
lret
daa
mov
mov
dec
loopne
ljmp
jmp
xor
out
mov
cltd
mov
stos
cmpsl
in
sbb
sub
xchg
enter
dec
loopne
cwtl
jnp
insl
dec
sub
leave
shlb
cmp
mulb
or
and
sbb
pop
fistps
insl
and
cmpsb
rcrl
lock
push
pop
push
aaa
mov
mov
jnp
jne
imul
xchg
lret
outsl
cmp
mov
add
push
cmp
mov
mov
mov
xor
out
push
jge
jbe
mov
psraw
push
movsl
jno,pt
scas
loopne
hlt
enter
fistpll
cmpsb
xchg
jl
mov
pop
cmp
mov
or
add
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
jmp
mov
xor
sub
jmp
mov
jns
sbb
adc
sbb
gs
xor
adc
add
cli
mov
or
lret
pop
int3
lret
enter
out
and
out
sbbb
inc
cmp
aaa
in
jne
and
test
lea
fsubp
push
jmp
mov
cs
dec
xchg
cmp
dec
xchg
aas
inc
aad
sbb
int3
xlat
lret
in
je
rol
sub
imul
push
adc
cmp
jbe
dec
push
jnp
and
add
inc
lea
ljmp
xor
sti
sti
sbbl
jne
lea
or
jp,pt
bound
repnz
jge
call
sbb
pop
mov
out
outsl
adc
push
push
icebp
inc
mov
cmp
xchg
popf
dec
mov
xchg
sbb
mov
xlat
jl
add
push
cmp
or
and
xchg
adc
fs
adc
insb
sub
xchg
jb
aam
loop
push
aas
pop
iret
sub
jge
test
orb
dec
or
adc
sbb
into
rolb
ftst
mov
mov
and
dec
in
imul
mov
sbb
cmpsb
lcall
xchg
mov
adc
jg
lahf
out
fadds
jmp
mov
xchg
ja
lods
mov
xor
xchg
rcrl
std
sbb
adc
add
mov
shrb
dec
push
ficomps
sub
repz
xor
pop
jmp
or
inc
sahf
xor
fnstenv
sbb
aaa
mov
mov
cmp
frstor
popf
mov
inc
inc
jmp
xor
loopne
je
icebp
sbb
sub
push
data16
xchg
test
mov
jne
loopne
ss
movsb
iret
cld
inc
iret
sarl
faddp
xchg
add
and
fisubl
inc
ja
or
test
push
sub
mov
popf
add
inc
hlt
addr16
subl
je
pop
xor
push
fucomp
add
or
int3
sub
hlt
and
cmp
push
sbb
and
movsb
mov
imul
xor
cmp
repnz
ljmp
adc
nop
inc
and
add
adc
test
roll
daa
pop
pop
loope
mov
lock
cmc
and
outsl
pop
imul
pop
fucomi
cmp
jmp
fwait
jmp
sub
es
arpl
mov
rorb
data16
mov
std
xchg
inc
add
push
push
sub
mov
sbb
push
inc
jb
or
jecxz
sub
imul
js,pn
cwtl
fwait
xchg
push
lock
sti
xchg
push
xorl
test
ret
cmp
fdivr
mov
dec
jno
push
mov
dec
dec
sti
push
insl
pop
out
xchg
inc
dec
pop
movsb
loop
scas
sbb
push
cmpl
in
les
dec
adc
xor
gs
push
sahf
sub
pop
inc
or
cld
inc
mov
in
sub
mov
ljmp
loop
inc
mov
add
loopne
loop
imul
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
jb
adc
or
xor
shll
mov
push
sbb
adc
sbb
lcall
xchg
cmc
jmp
mov
pop
push
xchg
test
cli
movsl
xchg
pop
test
xchg
out
or
pmaxub
sub
out
addr16
repz
fdivl
das
xchg
imul
jl
std
mov
push
mov
adc
nop
xor
std
xchg
test
push
jb
push
mov
add
push
in
sahf
cltd
out
xchg
hlt
and
int3
iret
stc
shrl
mov
mov
test
pusha
xor
mov
sbbb
cmp
outsb
mov
jb
and
xor
scas
lock
pop
inc
xchg
and
out
es
ret
cltd
pop
cs
aas
or
jmp
int
lcall
mull
pop
cmp
into
push
pop
je
lea
loope
das
or
mov
jg
mov
hlt
loopne
pop
adc
push
xchg
xlat
xorb
loop
mov
add
push
jle
mov
or
push
dec
test
push
jns
shrl
int3
or
lret
clc
loope
popf
or
cmpsl
outsl
or
xchg
inc
mov
fadds
gs
xchg
rcrb
xor
mov
pop
test
mov
xor
andl
das
sbb
mov
aad
mov
popl
aaa
mov
lock
insl
pop
in
bound
sub
in
fists
movsl
ret
cmc
mov
and
sahf
and
push
pop
js
dec
cmp
sbb
test
xchg
loope
addl
ljmp
imul
xor
pop
xor
outsl
outsl
mov
outsl
push
push
push
xchg
jl
mov
push
lea
out
mov
pushl
push
cmpb
push
outsb
daa
mov
lds
loop
pop
aas
mov
aaa
pop
bound
dec
ds
or
bound
outsl
xchg
and
fstl
sub
sub
shrl
push
mov
popa
mov
jp
insl
icebp
mov
pop
addb
mov
lock
jno
xchg
js
cld
icebp
pop
or
lret
and
adc
mov
lock
popf
lret
imul
sbb
push
sbb
loope
dec
mov
dec
pop
add
js
sbb
gs
add
bound
pushf
xlat
sub
lret
mov
mov
into
dec
xchg
sar
lret
outsl
xlat
push
cmp
adc
ss
call
subl
xchg
push
sbb
mov
adc
mov
mov
xor
aaa
inc
push
sub
jp
pushf
outsl
mov
pop
cwtl
jbe
rcll
inc
ja
lds
js
push
inc
shl
jp
mov
out
comiss
cmpl
leave
adc
movsb
imull
jmp
jecxz
je
xchg
rol
jecxz
dec
jmp
dec
jo
hlt
xor
stos
inc
mov
push
ja
fcmovnu
fisubrs
mov
ljmp
jne
and
mov
jbe
xchg
fs
xor
daa
mov
mov
mov
lcall
xlat
push
lahf
and
inc
and
mov
or
and
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
jmp
add
jp
add
sbb
adc
sbb
cmc
sub
xlat
pushf
idivl
lds
sub
xchg
mov
add
shl
xlat
sub
test
cld
in
scas
bound
mov
mov
and
and
clc
pop
inc
sbb
dec
push
lret
lret
aam
sub
clc
mov
fcmovne
push
les
sti
lcall
inc
dec
jge
fwait
shll
jl
push
lcall
int3
cmp
xchg
push
xchg
inc
add
les
sysexit
nop
jg
mov
sarb
scas
mov
rorl
ret
push
pop
in
adc
andb
dec
stos
out
mov
in
icebp
inc
dec
in
xchg
add
add
or
sbb
and
dec
arpl
jp
sti
shlb
gs
repnz
sbb
add
lock
jl
loope
mov
adc
scas
push
inc
outsb
es
sbb
mov
adc
jmp
sahf
cmp
arpl
cmpl
stc
int
js
dec
and
test
xchg
dec
sar
aaa
bound
push
and
out
icebp
jns
xchg
sub
xor
adcb
enter
fsubrl
jmp
cmc
lods
pop
inc
clc
push
stc
cmp
cs
dec
ret
add
dec
pop
iret
cli
les
clc
mov
test
hlt
dec
push
add
jne
push
mov
fidivrl
push
mov
sbb
mov
jae
push
add
cmp
cwtl
mov
mov
mov
dec
lret
repnz
ss
pop
inc
insl
notb
jmp
sub
push
sub
mov
xchg
sub
inc
add
and
push
sub
and
ljmp
dec
mov
xchg
pop
fidivs
jnp
in
test
dec
mov
mov
mov
cmp
or
xor
push
icebp
fs
jae
xchg
or
cmp
popf
aas
mov
add
xchg
int
jno
sbb
stc
and
inc
mov
sti
dec
cs
mov
inc
jmp
out
out
lret
jg
test
lahf
inc
cmp
scas
es
dec
pop
pop
pop
scas
push
stc
popf
arpl
inc
xor
addl
repnz
pop
loop
cmp
pop
in
fistl
insl
adc
mov
push
imul
xchg
mov
outsb
mov
dec
cmpl
mov
inc
lds
xchg
repz
or
xor
pop
push
xor
pop
cs
fstl
test
mov
and
movsb
lds
xchg
scas
popa
sti
scas
xchg
mov
xchg
inc
adc
pop
scas
sbb
aam
ss
adc
sub
popa
push
leave
xchg
push
std
pop
dec
test
dec
mov
and
sbb
fisttpll
jno
inc
and
insb
sbb
dec
fisubrl
mov
fstpl
nop
addb
lahf
sub
pushf
fadds
clc
inc
in
fiadds
and
jno
dec
sbb
sub
daa
les
xchg
or
adc
movsl
cld
cmc
pop
mov
pop
xor
ja
cmpsb
loope
cmp
lea
sbb
test
mov
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
jmp
loopne
xchg
es
fdiv
leave
jl
arpl
sbb
adc
sbb
outsb
out
popf
pop
cmp
jo
lahf
mov
xchg
mov
ljmp
or
push
in
call
pop
sarb
insl
popf
inc
push
sbb
ljmp
pop
push
shll
inc
mov
pop
mov
test
pop
xchg
adc
scas
in
xchg
das
push
cmp
xlat
mov
mov
cmpsl
dec
aaa
out
push
dec
sbb
pop
out
out
inc
cs
mov
stos
xchg
imul
push
jmp
mov
inc
ja
adc
notb
sahf
jo
mov
jo
scas
int3
xor
and
addb
sub
inc
jne
fistps
add
psubsb
dec
inc
mov
fdiv
jle
inc
mov
repz
lret
shl
push
out
dec
sub
les
lcall
jne
hlt
addr16
pop
stos
sti
pop
mov
stos
xchg
cld
mov
pop
insb
fdivs
les
mov
ja
add
scas
and
and
cld
inc
and
mov
mov
imul
mov
cmp
xor
repz
mov
or
in
pop
push
mov
push
or
cmp
and
pusha
xor
cmp
and
jl
stos
adc
jecxz
out
ljmp
outsb
mov
pop
add
xorb
or
addr16
leave
and
lahf
enter
stos
sbb
pop
jmp
adc
rorl
cmp
notl
jbe
mov
test
jae
ljmp
push
lret
sub
push
adc
mov
pop
inc
xor
pusha
dec
dec
cltd
and
sbb
fdivr
jns
in
jg
xor
push
xchg
out
js
dec
jbe
xchg
dec
sbb
rcll
movsl
or
lock
jmp
repz
cmp
movsl
adc
mov
aaa
or
pop
mov
and
xchg
aas
push
pop
mov
mov
inc
out
and
xor
cmp
cld
int3
pop
mov
es
mov
inc
xor
or
cmp
and
pusha
cwtl
fisubrl
cmp
jmp
int
mov
lods
sub
push
mov
pop
mov
rcll
sub
rorl
xchg
fchs
leave
and
int3
pusha
scas
mov
jmp
xchg
jae
and
fs
and
xchg
in
addr16
xchg
xchg
or
test
add
mov
enter
xor
sbb
sub
push
push
out
sarb
mov
pop
pop
test
cmc
pushl
xchg
pushf
je
lret
pushf
sbb
sub
mov
call
iret
pop
lods
cmp
mov
lret
bound
test
mov
xchg
sarb
in
mov
push
vpminub
pop
or
inc
sbb
mov
mov
push
sub
ljmp
out
jnp
lret
iret
adc
push
xor
push
daa
xchg
pop
aaa
jno,pn
sbb
cmp
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
jmp
pop
scas
push
sub
push
ja
fstpt
push
loope
mov
push
sbb
adc
sbb
call
push
pop
mov
xchg
outsl
sub
leave
lret
in
stc
std
jns
sbb
or
out
hlt
add
mov
mov
stos
adc
mov
cmpb
push
push
out
cmp
or
pop
icebp
ret
stos
dec
ja
and
test
jb
and
das
and
jns
ret
mov
add
in
push
mov
dec
mov
das
adc
ret
push
mov
test
gs
loope
mov
fwait
add
cmp
mov
outsl
test
rcrl
out
mov
stos
push
jl
jae
ss
jo
dec
and
mov
int3
test
mov
jp
pop
pop
xchg
xchg
test
out
lea
cmp
lds
xchg
orb
mov
jnp
inc
sbbl
fs
xor
jle
div
cmp
insl
jbe
stos
ljmp
dec
in
mov
aas
dec
mov
bound
les
push
daa
mov
mov
cltd
and
jns
enter
outsb
xor
popa
repz
fstpt
xchg
xchg
nop
push
aad
mov
add
pop
ret
imul
test
and
sbb
aaa
cmp
push
lock
mov
push
push
xor
jns
or
scas
mov
mov
lds
mov
orb
loop
movsb
icebp
mov
push
jg
imul
push
inc
cmp
jp
xchg
pusha
xor
sbb
outsl
inc
and
mov
xchg
mov
loope
sbb
lock
cmpsb
lea
sub
test
sti
xor
pop
filds
push
hlt
insb
out
mov
jne
repnz
cmpsb
sub
enter
add
aas
es
imul
int3
adc
dec
daa
xorb
shl
ljmp
jecxz
ja
dec
add
dec
jmp
cmp
mov
jbe
adc
and
insl
sub
xchg
push
push
and
cmp
push
int3
xchg
push
test
mov
xchg
pop
insl
dec
sbb
ljmp
int
and
xchg
xchg
adc
xchg
jg
sti
lahf
repz
xchg
out
ds
and
xchg
fnstcw
pop
mov
sbb
out
dec
int
pop
in
lods
insb
outsl
icebp
jb
add
test
pop
lahf
mul
popf
adc
or
hlt
jbe
and
loop
mov
cli
dec
jns
test
shlb
dec
add
lock
fdivrs
outsb
jg
sub
rcr
mov
cmpsb
dec
xor
in
mov
rclb
imul
jae
mov
lret
and
add
test
stos
jmp
dec
add
and
enter
fwait
mov
sub
pop
pop
fldenv
loopne
mov
sub
mov
sti
and
mov
test
jp
std
jo
sbb
pop
xor
adc
repz
mov
adc
and
push
imul
mov
leave
je
mov
je
cld
and
shlb
rolb
pushf
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
jmp
shrl
into
and
fwait
outsb
mov
mov
push
sbb
adc
sbb
xlat
push
sub
dec
out
fidivrs
or
or
sarl
and
fdiv
pop
jg
jo
mov
lahf
jmp
addr16
int3
andb
mov
out
add
jo
dec
pushf
sub
mov
push
adc
add
pop
jb
sarl
adc
movsb
shlb
fdivrl
out
pop
ds
enter
insl
add
sub
xchg
insl
int3
aaa
inc
stos
and
xchg
cltd
popa
sar
lods
fmuls
mov
sbb
insb
call
lock
scas
push
scas
lods
fmull
xor
inc
test
mov
enter
pop
test
lods
add
add
mov
insb
jne
mov
pop
out
mul
lret
jle
fdivrs
movsl
ljmp
loope
js
cmpsl
out
jg
call
mov
cwtl
sbb
mov
inc
shlb
cmp
xchg
gs
add
mov
pop
mov
cmpsb
pop
jo
jge
shlb
inc
mov
shlb
loope
stc
pushf
inc
leave
push
mov
enter
cmp
cwtl
or
jecxz
sbb
pop
sbb
fldl
fdivrp
faddl
pop
out
cmp
xchg
push
cmc
sub
mov
adc
push
mov
das
lcall
shll
mov
mov
mov
adc
pop
lods
lcall
cli
nop
or
test
repnz
xor
rcr
xor
aaa
and
add
mov
test
pop
mov
mov
addr16
ds
sub
mov
fcomps
testb
loopne
ret
xchg
mov
fdivrl
sbb
add
movsl
mov
pop
jns
out
outsb
mov
jnp
fisubrl
cwtl
sub
fwait
inc
mov
scas
and
dec
sub
add
pop
inc
nop
hlt
and
inc
xor
aam
movl
jnp
dec
movsl
stc
int3
or
std
icebp
xlat
out
inc
or
jne
cli
mov
mov
insl
xchg
xchg
add
pop
int3
mov
cmp
sbb
and
push
dec
inc
sbb
testb
daa
daa
mov
adc
push
cmpsb
loop
dec
lods
mov
nop
movsl
mov
or
jb
add
push
adc
stc
mov
test
out
enter
fsubp
xchg
gs
add
sbbb
xchg
insl
in
cltd
add
push
outsl
sub
lret
ds
or
xchg
sti
adc
inc
popf
aaa
bndldx
mov
pusha
clc
in
cwtl
fs
fidivs
stos
dec
jbe
mov
inc
xor
cmp
dec
sub
xchg
xchg
add
adc
imul
shll
or
arpl
ds
xchg
sbbl
repnz
mov
rcrb
rclb
repnz
or
aam
ljmp
ds
daa
xor
icebp
xor
pop
dec
int3
lock
xchg
sbb
shl
icebp
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
jmp
arpl
bound
aam
push
jle
adc
sbb
adc
sbb
negl
iret
cwtl
call
inc
add
or
shlb
xchg
sub
les
mov
movsl
jmp
push
imul
inc
mov
and
jae
inc
xor
or
pop
call
out
test
test
jmp
cli
dec
lock
scas
aam
mov
repnz
cmp
sbb
or
add
dec
in
jp
push
jbe
mov
or
mov
daa
and
pop
or
dec
mov
loope
sbb
mov
imul
mov
sbb
sub
xor
push
mov
xchg
sbb
inc
enter
aas
pop
popa
sub
mov
lods
pop
data16
subl
dec
out
aam
mov
or
fwait
or
aam
shll
sbb
xchg
lea
mov
loopne
in
xor
mov
jle
add
push
outsl
sub
push
xor
and
push
sub
mov
or
je
insl
mov
xchg
pop
and
xor
mov
addb
stc
mov
aas
ljmp
aam
clc
pop
nop
or
icebp
sbb
stos
pop
add
add
adc
mov
cmp
mov
imul
mov
jge
loop
jge
xchg
sti
loope
fsub
int3
mov
mov
adc
add
stc
pop
enter
adc
pop
in
xchg
jecxz
sub
jge
in
sbb
cmc
rorb
outsl
in
imul
sub
ja
mov
pop
jp
lods
cmp
fimuls
fs
lods
push
add
xorb
int3
dec
loop
and
fdivrs
sub
lret
mov
mov
pop
mov
cmp
pop
jmp
mov
inc
ret
enter
jg
fildl
fildll
stos
pushf
movsb
adc
stos
filds
iret
stos
inc
addr16
xchg
push
push
push
insl
sti
notrack
bound
mov
inc
mov
xchg
mov
sub
sub
jno
adc
and
inc
adc
xor
push
sahf
jb
jecxz
aaa
rcrl
cmc
cmp
mov
sub
dec
repnz
xlat
adc
movhps
add
lcall
inc
in
aaa
sub
mov
xor
int3
movsl
pop
sbb
or
orb
shl
mov
lcall
stos
test
xor
sbb
movsb
sbb
jle
sub
mov
mov
pop
scas
mov
xchg
push
push
cmpsl
jo
jnp
or
xchg
jo
cmp
movsb
fmul
mov
and
out
loope
mov
xchg
sub
pop
sti
vandps
pop
xchg
mov
mov
xor
and
test
data16
pusha
jge
stos
sbb
push
scas
xchg
into
lods
scas
js
out
ja
sub
sbb
iret
fs
pushf
pop
out
cmp
imul
dec
xor
sbb
xchg
rcrb
test
inc
or
popa
mov
mov
mov
cmpsl
inc
mov
mov
push
mov
movl
jmp
int3
insb
fwait
jo
push
cmp
ret
lahf
jo
jmp
push
sbb
adc
sbb
mov
iret
scas
pop
std
jns
pop
xor
inc
dec
add
jo
and
out
leave
mov
cmc
fsubs
inc
mov
jmp
movsb
mov
iret
push
daa
mov
in
cmp
in
pop
mov
out
pusha
mov
out
sbb
cmp
and
je
cmp
push
inc
push
or
cmovno
xor
push
jnp
lods
out
ljmp
push
sub
fmul
dec
out
add
xchg
sahf
loope
mov
roll
push
in
out
add
sar
enter
mov
cmp
aas
or
xchg
popf
sub
pushf
or
inc
dec
dec
jl
icebp
lods
les
fs
or
adc
mov
mov
test
out
push
xchg
out
jo
sahf
lds
pop
insl
js
xchg
sti
jmp
inc
fnsave
and
mov
mov
outsb
stos
dec
hlt
cmp
xorb
mov
mov
insl
sub
push
or
xor
stos
sbb
mov
cmp
testl
and
push
ds
mov
inc
pop
fistpll
dec
push
pop
leave
cwtl
sbb
fildl
sbb
in
push
add
jecxz
mov
jl
ret
dec
mov
lods
out
mov
or
aas
imul
call
repnz
nop
int
mov
fs
test
sahf
sbb
mov
aad
mov
pop
mov
push
sbb
mov
adc
dec
enter
push
cmp
sahf
cmp
movsb
fldenv
int3
lods
pushl
sub
cmp
test
fsubl
loopne
loopne
or
sbb
and
pop
std
dec
cmp
stos
add
outsb
loopne
cmp
cmp
pop
pop
adc
dec
movsb
and
sub
cld
mov
incb
lds
pop
rcrb
or
mov
std
dec
push
insb
in
dec
lahf
pop
movsl
dec
repnz
mov
jno
sbb
xchg
roll
icebp
dec
xchg
inc
xchg
out
pop
inc
fsub
push
jne
jb
insl
in
mov
enter
xor
sti
jl
inc
mov
mov
push
adc
pop
enter
fcmovb
jle
mov
sub
inc
insb
sbb
mov
and
pop
insb
pusha
and
inc
or
push
mov
cmp
or
shlb
sub
adc
xchg
xchg
add
int
or
sti
pop
fsubrp
roll
cld
mov
les
push
cmp
xor
jbe
push
insl
xchg
or
inc
addr16
cmp
jp
inc
push
int
lret
in
and
and
sbb
sub
push
cs
lea
fsts
push
jo
sub
outsl
sbb
test
sub
xchg
sub
pop
shlb
lods
mov
adc
xchg
push
mov
mov
add
push
push
icebp
jl
ds
sbb
dec
pop
or
ret
lods
lods
sub
nop
xchg
push
repz
cli
movl
movl
movl
movl
jmp
jecxz
xchg
sbb
sbb
ret
movsl
mov
faddl
sbb
adc
sbb
pushf
xor
subl
jno
imull
loopne
lret
pop
enter
movsl
mov
pop
fadds
gs
stos
insl
sti
aaa
pop
fstl
push
jmp
ret
fnstsw
stos
cmp
adc
int
jp
pushf
pop
inc
jecxz
cld
rcl
shrl
fdivp
mov
add
popf
cmp
cmp
and
push
leave
push
inc
clc
xchg
sub
outsl
xchg
or
sti
dec
cmpb
mov
xchg
jl
mov
sbbl
in
sbb
mov
sbb
out
loop
incb
insb
sub
jne
call
adc
negl
sub
mov
or
dec
ret
aas
mov
stos
cmp
scas
jnp
pop
jg
rcl
gs
sub
mov
jg
and
repnz
pusha
ret
leave
and
inc
inc
lret
sub
icebp
ja
add
jo
and
aas
jmp
lahf
pop
loope
call
xchg
daa
mov
sbb
pop
add
and
fcoml
cmp
adc
enter
sub
lcall
xchg
ja
ss
aas
cmpsb
pusha
decl
fdivrl
add
cmpsl
cwtl
mov
sub
out
pop
push
and
adc
sahf
or
or
inc
cmp
dec
arpl
dec
insb
iret
add
mov
call
sbb
or
jnp
ss
jbe
xor
repnz
inc
loopne
stos
pop
or
cmpsb
insl
xchg
jmp
outsl
sbb
js
cmp
and
sbb
push
mov
fadds
aaa
jne
dec
dec
jg
pop
mov
stos
test
add
aaa
in
pusha
add
aad
mov
sub
ret
and
cmpsl
fimull
aas
bound
push
xor
mov
in
fcompl
ret
push
mov
popa
dec
stos
das
stos
xor
dec
test
loop
std
imul
mov
ljmp
sub
ret
dec
xor
pop
or
pop
test
sti
mov
jbe
in
testl
insl
andb
inc
mov
cwtl
loop
out
add
inc
fs
int3
adc
lods
xchg
cmp
jg
repz
xchg
mov
push
cwtl
xorb
cltd
xorb
movzbl
loopne
mov
stos
lahf
mov
daa
clc
gs
push
mov
fstps
lahf
roll
rorb
or
mov
je
jo
push
jb
test
mov
out
dec
repnz
int
mov
xor
mov
inc
ss
loope
push
lret
push
mov
pop
popa
add
sub
in
adc
xchg
mov
add
je
xor
cmp
cli
sub
repnz
sbb
push
xchg
or
fcmovnbe
xchg
imul
hlt
jns
sub
pushf
lods
jae
mov
add
insl
inc
leave
add
push
or
arpl
shlb
dec
ss
outsl
xchg
jmp
clc
sub
adc
mov
mov
out
cmp
cld
sbb
dec
mov
clc
mov
lock
sbbl
fcomip
add
mov
decl
and
add
push
pop
div
mov
or
mov
xor
div
jmp
and
popa
into
pop
dec
and
mov
mov
and
sbb
sbbl
cltd
xchg
push
pop
bound
test
jmp
movsb
in
popa
xor
mov
gs
rorb
out
outsb
add
mov
fimuls
xchg
mov
push
xor
clc
les
pop
pop
inc
cmp
push
sub
ret
sbb
jne
xchg
bound
dec
das
xor
mov
imull
mov
popl
loop
mov
adc
adc
jle
imul
or
adcl
lods
bound
mov
push
mov
test
test
push
bound
jle
test
inc
push
les
inc
inc
fcoml
arpl
addb
andb
das
loopne
dec
inc
xchg
stos
push
clc
mov
xchg
pop
int3
ret
leave
jg
loope
es
mov
jge
xor
roll
pusha
push
scas
ret
andl
sub
movsl
addl
int
or
xchg
orb
xor
push
ret
lahf
out
scas
scas
adc
or
stos
mov
ficoml
mov
pop
aam
iret
sbb
sbb
pop
rolb
mov
push
das
cmp
mov
adc
pop
imul
mov
popl
fwait
cmp
mov
mov
lahf
pushf
sub
pop
jl
sbb
ljmp
dec
cld
popf
jecxz
aaa
pop
sub
inc
xlat
jbe
push
loopne
into
pop
or
fsubp
fidivl
jmp
notl
mov
repz
movsl
inc
pop
mov
jbe
and
jmp
scas
inc
lcall
push
jmp
sbb
mov
jbe
adc
mov
rcl
add
cmp
jno
das
adc
cmpsl
ror
cmpsl
pushf
jno
or
sub
mov
or
push
jo
add
scas
mov
push
loop
ds
cmp
test
or
lods
push
dec
mov
sbb
aas
mov
sbb
cmp
into
frstor
out
cmpsl
subl
pop
and
leave
inc
imul
mov
jmp
int
sub
pop
sub
out
in
mov
ds
rolb
iret
lock
jg
mov
xchg
dec
mul
jae
call
adc
or
xchg
cmp
aas
fldl
ljmp
lods
dec
rcr
aas
ljmp
in
push
push
dec
jp
sti
mov
jno
or
enter
mov
mov
xor
xor
std
xchg
outsb
sub
adc
cmp
adc
sti
dec
aam
and
mov
pop
cmp
sbb
sbb
mov
test
push
mov
mov
add
mov
or
adc
push
dec
or
insb
mov
imul
xchg
xor
ljmp
jbe
scas
insl
mov
hlt
xchg
push
mov
jnp
cmpsl
xchg
push
or
inc
nop
ja
sub
test
adc
sub
pop
fsubl
pop
loope
in
mov
push
and
test
xor
push
jge
add
add
mov
loopne
lea
incl
add
add
add
add
incl
add
jmp
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
jmp
add
mov
mov
sahf
jmp
sbb
adc
sbb
push
sub
mov
mov
in
sub
xchg
cmp
add
adc
xchg
push
or
xor
cwtl
ds
lds
push
add
and
cli
xchg
pushf
pop
mov
popf
adc
ret
xlat
cli
mov
mov
fldcw
and
xchg
in
sub
mov
leave
orb
gs
out
add
xchg
call
lahf
sub
scas
inc
push
les
into
sti
hlt
or
roll
add
iret
mov
adc
aad
lods
dec
int
pop
mov
mov
loop
fs
jae
add
sti
xchg
mov
decb
dec
mov
sub
add
jp
or
jo
jns
cmp
sub
mov
ret
pop
xchg
mov
pusha
mov
repnz
mov
es
adc
aas
leave
inc
pop
pop
scas
fs
mov
add
in
imul
dec
loop
cmp
pop
dec
and
fidivs
aas
sub
push
pop
push
fucomp
sbb
jae
aad
outsl
bound
xchg
mov
stc
loop
jb
icebp
mov
sub
cmpsb
ror
subb
adc
iret
push
mov
sahf
pop
lods
out
add
xor
test
ret
fcom
jne
fcoms
ljmp
pop
push
cmc
xor
mov
mov
sbb
cmp
push
es
leave
es
lret
mov
xor
cmp
sbb
in
adcb
lods
inc
ret
pop
jb
adc
cwtl
rorl
cmpsl
mov
notb
dec
jg
mov
sbb
pushf
sub
outsb
adcl
ja
into
xchg
adc
insb
lds
sbb
call
jg
pop
sbb
push
fs
xor
stos
loopne
incb
mov
call
xor
mov
pushf
rcr
nop
pop
repnz
mov
sbb
lcall
jle
xor
imul
cld
scas
in
loopne
fimuls
in
xchg
sarl
popa
int
lock
movsb
je
push
lods
ret
adc
rcr
mov
xchg
out
xor
out
push
dec
or
cmpsb
ds
xor
adc
dec
loope
add
int3
push
data16
dec
xor
or
inc
cmp
jmp
lods
push
loope
jo
and
jp
push
dec
or
ret
or
adc
je
jecxz
xor
xor
inc
out
inc
cmc
xchg
addr16
mov
xor
jne
pop
adc
subl
je
lahf
jge,pn
jg
icebp
test
in
daa
idivl
pushl
stos
push
adc
jb
adc
stos
loop
xchg
imulb
movsl
inc
sbb
clc
adc
mov
xchg
ret
je
pushf
mov
xchg
in
movsb
dec
xor
inc
inc
sbb
daa
dec
jnp
arpl
jbe
mov
sub
xchg
push
faddl
out
lods
int
movsb
stc
clc
stos
jecxz
jo
dec
ja
hlt
dec
add
sub
movsl
repnz
in
repz
xor
test
mov
lea
sbb
arpl
jno
addl
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
jmp
imull
mov
mov
test
push
sbb
adc
sbb
test
lahf
cli
pop
inc
mov
ror
or
cmp
xor
push
shl
cwtl
ljmp
mov
jge
xchg
jne
adc
cmp
subb
cmp
pop
scas
loop
cmp
mov
add
xor
dec
shrl
out
lods
test
imul
fisubrs
xor
jge
popa
and
in
jno
fisubrl
in
xrelease
gs
xchg
jae
inc
enter
xchg
dec
pop
out
sbb
cmp
pop
mov
sub
adc
in
ja
call
test
sbb
mov
push
ja
inc
sub
rorb
jb
in
sub
adc
into
pop
sti
inc
popf
in
movsb
sub
push
or
cmp
testb
mov
jle
adc
mul
xchg
das
call
fnstsw
mov
and
shlb
or
sub
pop
cmp
sbb
test
in
mov
pop
pusha
sbb
stos
ds
dec
mov
xchg
ja
mov
mov
clc
arpl
stos
cltd
lds
jmp
cmovl
mov
mov
lahf
lds
adc
push
or
mov
movsb
clc
and
push
mov
fnsave
mov
pop
std
add
pop
jb
ret
lea
repz
cmpl
adc
mov
rolb
cmp
mov
dec
or
xor
aad
sar
notl
jne
cwtl
rcrl
dec
xor
ljmp
mov
lcall
pop
sti
jbe
daa
fdivr
into
xchg
mov
jp
xor
or
adc
sbbl
and
pop
divb
mov
stos
std
sub
bound
sahf
cltd
aam
jge
ds
sarb
xlat
iret
push
bound
ljmp
mov
iret
jmp
leave
add
mov
jg
int
out
cmp
mov
ljmp
push
fldln2
mov
ja
xlat
mov
cmp
cli
daa
xchg
push
mov
inc
aaa
inc
outsb
repz
pop
cmp
mov
and
sbb
mov
out
scas
lret
outsb
adcb
int3
push
and
xlat
inc
xchg
in
mov
add
std
lods
jbe
mov
gs
or
add
fmuls
mov
test
pop
sahf
dec
loope
adcb
jne
mov
es
push
movsl
and
scas
xor
das
inc
xor
xchg
fdivrs
call
daa
mov
xlat
push
and
add
std
push
xor
or
push
jge
add
mov
sbb
fnsave
push
mov
cmp
jge
push
divl
cmp
rolb
in
test
add
dec
leave
gs
ljmp
cmp
xchg
call
cmp
sub
jmp
pop
push
aam
gs
hlt
push
mov
and
rep
xor
mul
mov
inc
jp
arpl
pop
jle
inc
push
pop
pop
xchg
push
mov
clc
movsl
cmpsb
cmp
pushf
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
jecxz
enter
sbb
cltd
mov
shll
adc
sbb
cmp
add
arpl
lea
ljmp
mov
xor
scas
lea
jbe
and
jecxz
jnp
mov
xor
xchg
outsl
es
movb
jg
in
xchg
loopne
jb
jo
jae
clc
inc
jg
or
pop
pop
adc
sub
stos
xchg
dec
adc
push
pop
or
pop
lods
cmp
jae
aas
push
jg
sub
mov
icebp
imul
cmpsl
movsb
dec
pop
sbb
cltd
aas
ret
jmp
cld
sub
jnp
out
and
dec
push
push
test
push
int
mov
push
jg
mov
mov
adc
xchg
insl
clc
ja
jp
mov
xchg
sahf
xchg
js
add
adc
xchg
add
test
repz
mov
push
outsb
scas
dec
out
mov
mov
inc
inc
shll
std
pop
push
push
jae
push
add
or
cltd
repnz
or
and
push
das
loope
pop
jne
andb
add
fidivrs
sub
xchg
cmpsb
cli
ss
repnz
sbb
aad
mov
and
lea
jae
jo
xor
add
lds
and
adc
cmpb
mov
mov
ljmp
add
mov
mov
xor
aaa
loop
cmp
adc
xchg
insb
push
js
sbb
mov
cmp
sbb
loopne
or
mov
fsubr
outsl
pop
push
mov
call
pusha
mov
pop
add
mov
push
dec
cmpsb
repz
test
sbb
arpl
adc
add
xor
ficoml
jg
jb
jecxz
mov
push
push
inc
push
xchg
ret
sub
stos
pop
loope
push
inc
movsl
adc
xor
or
fadds
fmull
cld
loope
loope
xchg
fnstenv
rcrl
mov
imul
add
jb
addr16
jge
out
sbb
hlt
rolb
push
decl
inc
jg
fnstcw
fs
xchg
in
in
sub
ror
pop
xchg
sti
fsubrp
cmp
dec
cmpsl
push
sub
movsb
mov
lcall
jae
jge
jg
push
mov
leave
mov
lock
dec
mov
adc
imul
jae
inc
out
js
fldcw
test
scas
inc
inc
xchg
hlt
mov
jp
xor
lock
adc
adc
test
out
sub
sahf
mov
or
sbb
lret
xchg
mov
call
xor
mov
sub
add
push
jnp
xor
je
scas
cmp
lcall
sub
mov
jl
push
mov
mov
push
lret
xchg
push
xor
insl
add
iret
subb
xchg
out
adc
out
and
adc
lret
jbe
ss
aad
mov
sub
aas
cmpsl
int
mov
loope
test
jg
jecxz
mov
sbb
push
sbb
xchg
test
or
cmp
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
jmp
push
mov
and
add
cld
mov
and
sbb
sbb
or
ret
jo
add
and
jb
cmc
mov
in
sbb
notl
data16
leave
inc
sbb
and
and
sub
push
lret
movsl
cli
push
pop
incb
outsb
dec
ss
dec
inc
and
into
sub
cmp
xchg
jae
ljmp
cmp
loope
inc
mov
mov
das
inc
push
and
jp
adc
xchg
outsl
push
stos
in
push
mov
add
sbb
jmp
sub
data16
xchg
bound
cmp
out
popa
imul
jmp
test
es
aam
jl
scas
xchg
adc
mov
test
and
adc
js
push
addr16
cmp
iret
pushf
pop
cmc
and
insl
jge
popf
bound
imulb
aas
inc
or
push
add
push
sub
pop
cs
jbe
pop
scas
cmp
inc
call
insb
in
fsts
shr
and
mov
outsl
rorl
cs
dec
pop
test
mov
ljmp
pushf
incl
inc
push
sbb
pop
pop
inc
and
mov
jae
jle
pop
push
pusha
ret
xchg
adc
dec
lea
std
push
sbb
ret
xchg
ficoms
adc
fadds
fdivl
ret
dec
sbb
or
sti
xchg
mov
addb
aaa
cmp
adc
insb
xchg
or
adc
fcoms
gs
std
mov
mov
xchg
into
fsubs
testl
add
cmp
dec
stos
or
inc
dec
lcall
pop
add
cmc
mov
and
out
push
aas
ret
dec
faddl
ficomps
xlat
cmpsl
ss
mov
xchg
adc
dec
mov
das
cs
pop
icebp
sarb
fstpl
push
xchg
daa
imul
rcrb
xchg
shlb
dec
fcmove
pushf
cmpsl
in
mov
cmp
aaa
adc
aad
das
movb
movsl
repnz
test
mov
pop
lahf
in
dec
mov
cli
dec
daa
in
cli
cmpsl
push
out
and
nop
push
aaa
jge
and
cmc
xchg
inc
mov
dec
mov
fs
xor
inc
inc
or
divb
sbb
std
outsb
call
adcl
stos
xlat
and
into
fwait
and
idivb
popa
push
ds
mov
mov
mov
outsl
sti
or
mov
jns
mov
pusha
inc
and
aas
or
movsb
rcl
outsl
das
loope
mov
shrb
cmp
mov
lods
mov
ficoml
xor
inc
xchg
and
sub
je
mov
push
aaa
inc
and
push
push
sbb
shll
adc
xor
ljmp
outsl
clc
scas
leave
jne
mov
dec
sbb
dec
push
xchg
aad
pop
shrb
xor
aam
imul
pushf
jae
jne
cltd
ret
sub
xlat
outsb
cmpsb
lret
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
jmp
cmp
sub
pop
rcrl
jl
pop
push
sbb
adc
sbb
cmpsl
test
and
out
jne
sub
addr16
pop
call
jge,pt
cmpsb
push
aaa
nop
mov
je
xor
aaa
pushf
mov
push
pop
adc
out
test
pop
je
or
mov
ret
or
and
xchg
sbb
mov
ljmp
add
jle
ret
pop
lods
scas
mov
cs
outsl
mov
shl
xor
fnsave
adc
ljmp
jmp
inc
lcall
sub
rcrb
outsb
loopne
and
mov
insb
and
ja
mov
push
adc
hlt
jnp
push
lock
out
jp
push
adc
aam
sbb
jmp
inc
mov
jge
push
in
xor
xor
fwait
jno
test
pusha
icebp
mov
jge
adcb
dec
cmp
shl
adc
sbb
bound
jmp
dec
pop
leave
mov
imul
aam
or
cmpsl
jo
mov
mov
aaa
sbb
scas
adc
out
call
jge
das
inc
inc
xchg
int
jecxz
mov
dec
pop
jge
fisubrl
ror
add
rorb
inc
stos
lret
cs
dec
fisubrs
loope
dec
pop
mov
adcl
cmp
addr16
fadds
mov
jns
adc
push
ja
jne
pop
mov
cmpsb
mov
mov
cmp
aad
scas
int
das
ficompl
ja
sub
imul
push
and
sub
lock
idivl
mov
xchg
mov
aad
jo
insl
xchg
je
add
jns
dec
sbb
dec
sbb
push
test
stos
shl
lret
inc
push
ret
cs
mov
into
sbb
int3
ret
in
and
adc
xchg
cmp
iret
lcall
mov
in
inc
mov
cltd
mov
sub
inc
sub
add
lods
das
push
xchg
movl
inc
push
cltd
add
div
stos
insb
sub
shlb
xor
imul
mov
scas
test
xchg
mov
xchg
jnp
cmp
enter
mov
cld
lds
outsb
in
mov
or
and
shrb
fs
mov
out
inc
cmpsl
into
or
mov
notb
jbe
jge
push
mov
cmp
or
pop
dec
stc
sub
add
add
movsb
scas
mov
sahf
loopne
imul
pop
test
dec
mov
mov
test
cmp
xchg
movsb
pop
aas
mov
mov
sti
faddl
scas
or
and
jecxz
mov
and
or
fbstp
sti
je
sub
sbb
imul
fcoml
pop
wrmsr
dec
int3
cltd
or
out
loopne
aad
in
adc
aad
fsubr
push
jmp
icebp
shr
and
sub
sahf
in
stos
in
out
or
mov
jb
sub
fimuls
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
jmp
jp
inc
mov
mov
pop
push
popf
jo
dec
mov
sbb
sbb
jbe
sub
push
mov
add
xchg
in
mov
pop
fnstcw
movsl
sub
push
sub
scas
jo
or
andb
push
xor
push
pop
mov
adc
leave
mov
popa
add
mov
pushf
lods
or
bound
cmp
imul
push
divl
or
arpl
xchg
xchg
sbb
xor
cld
push
jecxz
outsb
jmp
ret
cmp
jp
and
outsl
lret
cmpsb
dec
fwait
cmp
mov
lods
jnp
push
lods
test
sbb
inc
gs
push
pusha
mov
sub
pop
jb
and
iret
jge
mov
jle
dec
decb
into
sbb
das
popf
movsl
mov
aam
sub
jb
inc
orb
orl
mov
xchg
cmp
inc
xor
xorl
xor
push
fs
mov
jle
mov
je
popl
scas
clc
lahf
pop
fldcw
popf
popa
and
cli
or
jecxz
push
lret
popa
rcll
notl
push
mov
and
cmpsb
cs
sub
sti
aaa
cmp
jmp
out
data16
inc
xchg
sub
call
lods
push
fs
xchg
not
loop
test
mov
or
pushf
stos
ljmp
pop
sbb
jbe
inc
js
sbb
idiv
out
mov
je
mov
or
cmp
inc
pop
insb
push
adc
imul
sarl
lret
movsl
xchg
clc
xchg
push
dec
pop
mov
pop
loope
mov
dec
aad
jo
shlb
dec
add
jo
ss
xor
xor
hlt
inc
ret
into
dec
cmpsb
test
popf
xchg
mov
into
dec
xchg
inc
aas
ret
cmpsb
lcall
fs
adc
adc
repnz
popa
mov
add
imul
cmp
pushl
icebp
and
lahf
clc
adcb
sub
sar
add
cmp
dec
stos
mov
negb
scas
iret
sti
in
cmpl
xchg
and
data16
add
sbb
jae
aad
out
scas
mov
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
dec
push
mov
sub
push
mov
or
jne
sub
mov
mov
mov
mov
sbb
xor
cmpl
mov
mov
jmp
movl
jl
push
pushl
push
push
call
addl
xor
mov
add
sub
mov
adc
mov
mov
mov
sbb
div
dec
mov
not
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
sbbl
subl
movl
cmpl
movl
je
mov
mov
adc
add
mov
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
subl
shld
movl
shl
ret
addl
mov
xorl
xor
and
shl
ret
xor
xor
ret
mov
add
add
add
add
nop
add
hlt
addl
movsb
xchg
add
add
addl
adc
add
int3
test
add
add
call
add
add
add
add
xchg
add
in
test
add
add
dec
xchg
add
add
add
insb
outsl
outsl
add
add
addr16
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
aam
inc
add
add
jbe
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
in
daa
inc
add
daa
inc
add
push
mov
movsb
popf
movsb
jno
xchg
movsb
or
movsb
sbb
movsb
roll
adc
movsb
popf
movsb
jno
xchg
movsb
or
movsb
xor
movsb
mov
in
xchg
movsb
adc
movsb
popf
movsb
sbb
movsb
fwait
movsb
xchg
sub
cs
push
adc
movsb
fwait
movsb
add
movsb
sbb
movsb
shll
shrl
or
push
pop
outsb
adc
movsb
fwait
movsb
add
movsb
xor
movsb
andl
imull
dec
adc
movsb
fwait
movsb
jae
popf
movsb
sbb
movsb
fwait
movsb
andl
testl
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
pop
movsb
xchg
movsb
push
movsb
mov
inc
rorl
imulb
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
xchg
mov
mov
out
adc
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
andl
imul
push
into
adc
xchg
movsb
cmp
movsb
popf
movsb
jnp
xchg
movsb
fwait
movsb
xchg
movsb
shl
shr
lock
test
cs
push
push
adc
xchg
movsb
adc
movsb
cmp
movsb
fwait
movsb
lea
or
push
push
outsb
adc
xchg
movsb
add
pop
and
add
inc
add
inc
add
daa
inc
add
add
add
jg
add
add
daa
inc
add
inc
add
add
daa
inc
add
lret
push
movsb
scas
or
movsb
insb
es
add
inc
add
daa
inc
add
inc
add
add
inc
add
es
add
inc
add
inc
out
aam
inc
add
es
add
inc
add
loopne
jbe
pop
cmpsb
add
inc
add
rcl
pop
and
add
add
jno
cvtdq2ps
jbe
cmpsl
mov
xchg
test
es
add
fiadds
movsb
cmpsb
fiaddl
movsb
mov
fiaddl
movsb
mov
fiaddl
movsb
mov
push
movsb
mov
push
movsb
mov
push
movsb
out
fiaddl
movsb
decl
adc
push
and
add
sub
add
add
scas
lcall
das
dec
add
dec
and
add
inc
sbb
hlt
clc
sarb
sub
jle
add
add
add
add
lods
inc
add
push
movsb
jg
inc
movsb
push
movsb
inc
movsb
std
movsb
jmp
movsb
push
movsb
dec
movsb
std
movsb
jmp
movsb
push
movsb
jg
std
movsb
jmp
movsb
dec
movsb
inc
movsb
jne
pop
movsb
jnp
dec
movsb
fwait
movsb
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shlb
rcll
into
xchg
dec
xor
sbb
push
je,pn
mov
imul
leave
daa
dec
out
pushf
mov
dec
xchg
lock
inc
or
js
popa
pop
jecxz
movb
cs
aas
inc
leave
testb
jl
xchg
inc
add
add
add
inc
add
fbld
add
add
je
gs
jo
jo
outsl
insb
je
jae
outsl
popa
add
add
add
add
inc
insl
jns
outsl
js
jns
jb
popa
je
jne
gs
jae
gs
add
add
add
add
inc
jne
jp
outsb
add
add
imul
insb
outsl
add
push
popa
arpl
imul
add
outsb
imul
add
add
add
add
insb
insb
gs
add
add
add
gs
data16
jae
outsb
fs
popa
insb
imul
js
imul
add
add
addr16
insl
ja
jns
popa
jns
outsb
popa
bound
insl
outsl
jb
add
add
je
dec
add
add
add
add
addl
add
loopne
add
mov
add
xchg
in
jno
iret
jbe
or
cwtl
int
std
pop
fsubrs
dec
xor
stc
inc
adc
dec
sbb
mov
jns
dec
sbb
xchg
cmp
in
jno
iret
jbe
or
int
std
pop
jns
pop
xor
stc
inc
icebp
das
int
mov
mov
jns
xchg
lret
rolb
jno
jbe
or
int
std
pop
fdivs
int
stc
inc
icebp
test
mov
int
mov
addl
rolb
jno
jbe
or
cwtl
int
std
pop
ret
cmp
xchg
stc
inc
adc
test
ret
xchg
aad
lds
iret
jbe
or
int
std
pop
pop
insb
cmp
stc
inc
icebp
push
int
mov
mov
jns
test
lcall
jbe
xorl
sbb
and
int
adc
mov
add
add
lods
clc
icebp
jo
jge
aad
clc
icebp
jo
adc
incl
jo
jo
jo
xor
cwtl
add
add
xchg
or
addb
jecxz
hlt
scas
rolb
sub
iret
pop
iret
push
out
int
adc
out
sub
or
rolb
subb
sub
cmc
sub
in
aad
add
mov
fcmovnbe
out
pushf
xchg
test
fs
mov
iret
int3
call
jno
imul
int
std
xor
movsl
das
pop
push
or
sub
xchg
iret
les
addb
add
addl
adc
inc
jns
fldlg2
es
or
add
mov
add
addl
jns
insl
and
push
add
test
push
add
push
mov
test
lret
addb
in
outsl
rcl
jge
outsl
xchg
addb
sahf
mov
jno
popa
mov
addb
push
jge
push
xchg
addb
jge
push
xchg
addb
rorb
jo
std
xor
movsl
inc
xor
or
addl
addl
int
popf
aam
shlb
or
xchg
aam
int
icebp
int
xchg
or
or
or
pushf
stos
sahf
popa
mov
mov
mov
roll
int
or
adc
int
mov
lods
xchg
lret
rorb
in
push
int
or
daa
addl
or
mov
gs
addl
xchg
or
addb
xor
int
mov
int
xor
xor
lea
das
add
addb
int
mov
cli
test
int
jge
xacquire
insl
insb
shrb
outsl
lods
xchg
inc
addl
lea
cli
test
mov
and
xchg
mov
dec
ja
pop
rcll
int
fidivl
jecxz
xchg
or
in
inc
add
test
jecxz
jecxz
movsl
pop
cmpsb
lods
addb
lods
mov
mov
addb
shll
test
add
leave
int
or
cmpb
movsl
jecxz
mov
in
in
addb
movsl
int
mov
rcll
leave
xor
pop
jbe
jnp
int
xor
movsl
int
cmp
inc
inc
add
jle
clc
or
std
das
pop
adc
cmp
or
add
mov
xor
les
int
sub
stc
xor
sbb
inc
int
inc
int
std
xor
xor
pusha
lret
arpl
test
xor
in
popf
adc
addb
shl
mov
and
mov
jbe
shrl
lods
or
stc
test
int
jne
pop
insl
shl
test
in
xchg
pop
insl
xchg
int
jge
les
xor
les
adc
addb
mov
shll
xor
ja
lret
je
pop
shl
mov
xchg
xor
int
das
mov
push
das
rcll
pop
mov
ja
int
pop
orb
jmp
mov
insl
iret
les
test
mov
xor
mov
insl
add
or
cwtl
int
mov
int
int
jns
mov
sub
add
cwtl
int
jns
test
add
mov
jns
xchg
cmp
add
add
inc
addl
leave
jbe
inc
and
or
int
stc
int
stc
pop
cwtl
lcall
ljmp
cmp
sarl
jbe
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
leave
jbe
dec
and
mov
and
sarb
jbe
or
sarb
ror
jbe
jo
addb
addb
stc
cmp
cmp
sarl
push
rorb
jbe
int
stc
int
stc
cmp
cmp
sarl
push
rorb
jbe
leave
jbe
arpl
lods
pop
addb
addb
add
iret
push
xchg
incl
add
add
lea
xchg
fcmove
jbe
dec
insb
addb
stc
cmp
sarl
cmp
shl
sub
or
int
stc
int
stc
add
cmc
cmpb
sarl
repnz
or
mov
sbb
addb
push
or
int
dec
or
int
mov
cmc
or
rolb
mov
in
or
push
addl
lea
or
pop
addl
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
mov
add
mov
jbe
int
xor
addb
int
adc
adc
add
int
mov
mov
int
xchg
rolb
bound
jno
cmp
push
push
add
add
cmpsl
aad
leave
push
pop
add
add
adc
add
mov
push
insb
add
add
iret
outsb
add
add
insl
leave
push
sub
add
push
cmpsl
aad
leave
push
xor
add
push
xor
cmp
add
mov
push
inc
add
add
iret
addr16
add
add
jbe
int
adc
mov
int
mov
add
addb
mov
leave
jbe
mov
cmp
leave
jbe
xlat
sbb
push
les
add
push
cmpsl
aad
leave
push
nop
add
add
xlat
inc
leave
push
aam
add
cmp
jge
push
faddl
add
mov
shll
add
xlat
sbb
push
pushf
add
add
cmpsl
aad
leave
push
movsb
add
add
xlat
inc
leave
push
lods
add
add
dec
push
jge
push
mov
add
mov
shll
add
ret
sbb
jo
jbe
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
lea
testb
int
mov
lds
psrlq
sub
mov
lea
insl
inc
shrl
or
addl
int
mov
rclb
addl
add
addb
jo
cwtl
xor
lea
addb
int
adc
mov
insl
iret
pop
pushf
add
add
jo
jbe
int
inc
addl
adc
pop
adc
mov
insl
iret
pop
les
add
mov
jo
jbe
int
inc
addl
mov
pop
adc
mov
insl
iret
pop
push
add
add
jo
jbe
int
inc
addl
pop
orb
xor
push
cmp
sahf
clc
add
shrb
pop
shlb
xchg
xor
int
pop
add
mov
adc
int
mov
pop
adc
mov
insl
iret
xchg
add
jo
jbe
int
cmp
push
add
in
test
or
add
pop
sub
sub
lea
ljmp
sarl
push
ror
pop
cmc
incl
add
jo
jbe
int
stc
int
mov
lds
lock
push
ror
pop
xchg
incl
add
jo
xchg
or
xchg
stc
cmp
jmp
shr
sub
inc
jge
mov
jbe
addl
cmp
sarl
repnz
xchg
or
int
cmp
int
mov
lea
sarl
push
roll
xchg
int
mov
lea
shl
sub
mov
lea
insl
inc
shrl
pop
push
incl
add
ljmp
lea
jge
xor
mov
jbe
jo
stc
jl
orb
jne
sbb
jbe
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
push
mov
jbe
int
stc
cmp
cmp
shl
sub
mov
lea
shrl
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
std
inc
shrl
add
int
stc
int
stc
cmp
cmp
sarl
push
shr
adc
lea
or
cltd
shr
xchg
shr
sub
xchg
int
std
inc
roll
or
int
jne
jbe
ret
dec
and
leave
jbe
inc
and
int
inc
cmp
cmp
sarl
push
rorl
jbe
int
inc
int
inc
cmp
cmp
sarl
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
lds
psrlq
sub
mov
lea
push
xchg
addb
cmp
jns
or
lods
sub
jmp
push
jge
jbe
xor
cmp
clc
add
jbe
int
sbb
lds
psrlq
sub
mov
lea
int
sbb
lds
psrlq
push
rorl
jbe
int
cmp
lds
psrlq
push
ror
lea
jbe
int
inc
int
inc
cmp
cmp
shl
sub
mov
lea
pusha
xchg
addb
or
jbe
or
xchg
or
pop
inc
and
leave
jbe
cmp
xchg
and
int
xchg
int
xchg
cmp
cmp
sarl
push
rorl
jbe
int
jmp
addl
add
and
push
xchg
add
add
and
insl
int
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
cmp
shl
sub
mov
lea
rcl
int
adc
or
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
jo
add
int
jo
add
cmp
cmp
ljmp
pop
lea
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
sarl
repnz
int
jge
rcl
int
pop
int
pop
cmp
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
xchg
add
add
pop
xchg
add
add
lds
cltd
sarl
push
rolb
test
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
xor
sub
mov
lea
xchg
pop
cmp
cltd
shr
xchg
shr
sub
das
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
pop
cmp
shl
sub
xchg
push
ror
lea
lea
xchg
push
ror
lea
sub
or
int
popf
int
popf
cmp
shl
sub
xchg
push
ror
lea
or
jmp
cmp
adc
xchg
in
sbb
jbe
int
popf
cmp
cmp
sarl
push
roll
push
int
popf
int
popf
cmp
sarl
repnz
int
lods
xor
jbe
int
popf
cmp
cmp
mov
xchg
push
das
rcl
inc
shrl
pop
adc
add
int
stc
int
stc
int
std
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
stc
int
stc
add
xor
shr
xchg
shr
sub
jno
jo
int
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
or
inc
jge
add
int
stc
in
int
or
push
cmpsb
lods
int
lods
shr
xchg
cmp
lods
sub
int
jne
dec
orl
mov
lea
or
cltd
shr
sub
jmp
push
adc
xchg
mov
jge
jbe
cmp
add
std
add
std
shr
sub
leave
int
std
int
std
shr
xchg
shr
sub
cmp
inc
rcl
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
int
or
int
xor
jbe
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
std
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
jne
jbe
int
mov
lea
shl
sub
mov
stc
or
leave
jbe
imul
imul
gs
into
and
addb
sarl
lds
jbe
rol
lods
xchg
or
int
cmp
lods
sub
lods
lret
int3
das
imul
lret
inc
rcl
jle
jbe
int
mov
jbe
int
mov
jns
or
lods
sub
jmp
push
jge
jbe
cmp
lods
sub
lods
cmp
xchg
jbe
add
std
add
std
shr
sub
lock
and
jbe
in
and
jbe
int
stc
cmp
cmp
sarl
push
ror
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
or
out
leave
jbe
mov
xchg
and
dec
mov
lods
imul
and
xor
jbe
int
lods
int
lods
cmp
jmp
cmp
adc
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jo
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lea
cmp
shr
xchg
shr
sub
jno
jo
int
mov
jbe
int
mov
or
jns
jmp
shrl
jbe
inc
jge
add
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
inc
lea
addb
and
add
mov
lea
add
lea
jmp
add
scas
or
aaa
sbb
add
addb
add
add
add
jno
cmp
add
add
lods
jno
lea
lea
shll
jno
mov
or
int
mov
lea
add
addl
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
add
int
rcl
insl
xchg
cmp
inc
leave
int
mov
lea
addb
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jne
jo
int
lods
or
int
cmp
cmp
or
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lods
add
int
std
or
int
jne
out
or
leave
jbe
inc
and
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
int
push
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
jns
or
jmp
shrl
lea
push
xchg
addb
xchg
int
inc
cmp
cmp
sarl
push
jge
jbe
xor
cmp
clc
add
jbe
int
lods
int
lods
cmp
or
jmp
shrl
lea
int
lods
int
lods
cmp
or
lods
sub
jmp
push
rorl
jbe
int
xchg
int
xchg
cmp
or
lods
sub
jmp
push
ror
lea
jbe
int
push
int
push
cmp
or
jmp
shrl
lea
pusha
xchg
addb
or
jbe
or
cmp
inc
and
leave
jbe
cmp
xchg
and
int
cmp
jns
or
lods
sub
jmp
push
rorl
jbe
int
jmp
addl
add
and
push
jl
add
mull
xchg
int
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
jns
jmp
shrl
lea
rcl
int
gs
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
mov
add
int
mov
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
lods
sub
or
jmp
push
ror
lea
rcl
int
insl
int
insl
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
jl
add
int
jl
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
and
or
jns
jmp
shrl
lea
xchg
insl
cmp
cmp
shl
sub
repz
push
adc
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
insl
cmp
jmp
cmp
lods
sub
int
or
lea
sub
int
cmp
xchg
push
rorl
jbe
int
popf
int
popf
cmp
jmp
cmp
lods
sub
int
popf
int
popf
cmp
shl
sub
aad
repz
push
adc
xchg
in
sbb
jbe
int
popf
cmp
or
lods
sub
jmp
push
roll
inc
int
popf
int
popf
cmp
lods
sub
or
jmp
push
ror
lea
popf
int
popf
cmp
aad
repz
shrl
xchg
inc
das
rcl
inc
shrl
pop
adc
add
int
mov
dec
iret
jbe
add
mov
jbe
int
xchg
addl
icebp
addl
jne
test
addb
stc
int
stc
cmp
cmp
shl
sub
mov
lea
rcl
push
int
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
stos
test
lret
rorb
add
and
int
int
sub
pop
subb
dec
addl
addb
das
add
int
or
das
add
add
int3
addb
addb
add
int
and
mov
or
xor
shrb
mov
mov
mov
das
add
iret
jl
pop
or
add
or
add
cmc
subb
xchg
das
mov
mov
mov
in
push
push
aam
int
add
stc
subb
xchg
mov
sahf
dec
xchg
aam
iret
ficoms
out
int
std
int
push
add
xchg
cmpsb
mov
and
das
mov
sahf
dec
add
add
std
mov
sbb
mov
mov
add
add
mov
pop
out
subb
jo
das
mov
adc
mov
pop
xchg
adc
or
arpl
insl
insb
in
xchg
cmp
lret
lds
sub
jbe
add
xor
fstpl
add
inc
pop
pushf
test
insl
insb
in
fmul
insb
faddl
and
jo
int
adc
fcompl
lea
std
inc
clc
jnp
or
std
or
fsub
inc
pushf
adc
xchg
mov
int
iret
push
ror
push
add
ds
mov
out
inc
stc
fdivs
int
dec
int
in
popf
inc
cld
ja
int
in
mov
out
or
adc
not
dec
int
stc
dec
or
sbbb
cmp
test
lret
rorb
add
push
pop
cwtl
pop
dec
and
leave
jbe
inc
and
int
std
lcall
psrlq
xchg
stos
cmp
shl
sub
or
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
leave
jbe
fadd
loope
int
std
int
std
cmp
cmp
shl
sub
jmp
push
or
cmpsb
dec
int
sub
push
das
add
int
std
int
std
cmp
cmp
shr
xchg
shl
sub
inc
adc
add
int
add
std
int
std
cmp
xchg
shl
sub
inc
adc
add
xchg
int
cmp
shl
xchg
shl
sub
or
inc
icebp
aam
int
std
int
std
cmp
cmp
ljmp
int
adc
adc
test
xor
jbe
int
std
cmp
cmp
ljmp
int
adc
adc
je
xor
add
int
std
int
std
int
std
int
std
cmp
cmp
in
xchg
push
popf
int
adc
adc
ror
jl
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
int
std
or
lea
cltd
cmp
shl
sub
repz
push
jecxz
lea
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
jbe
popa
and
or
in
int
dec
int
adc
xor
jbe
add
in
int
adc
dec
leave
jbe
popl
dec
pop
xchg
xchg
std
cmp
cmp
shr
xchg
shr
sub
or
inc
jge
pop
int
stc
int
stc
cmp
lock
sub
mov
lea
fnstcw
psrlq
sub
int
adc
xchg
push
jecxz
rcl
bound
jo
int
std
int
std
cmp
lock
push
roll
mov
and
jbe
int
popf
cmp
cmp
mov
push
jge
fldt
pop
xchg
add
add
jbe
int
std
cmp
lock
push
roll
mov
and
jbe
int
stc
cmp
lock
push
roll
addl
leave
jbe
fdivr
sbb
int
std
int
std
cmp
xchg
shrl
sbb
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
cmp
shrl
push
jge
jbe
inc
jge
xchg
test
jbe
int
sbb
jbe
int
std
cmp
lock
sub
mov
in
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
in
shr
sub
aam
int
in
int
dec
int
adc
lret
jno
mov
jo
in
push
int
cmc
xchg
int
dec
int
adc
xchg
jo
mov
jno
or
int
std
int
std
cmp
lock
sub
mov
cmc
inc
ror
jbe
int
stc
xor
jns
lock
push
roll
cmp
cmp
repnz
mov
cmc
das
rcl
int
lods
or
stc
cmp
lock
push
roll
int
std
cmp
cmp
repnz
mov
lea
push
or
add
int
adc
lea
insb
sarl
test
int
icebp
push
dec
and
add
int
std
int
std
cmp
lock
push
rcrl
mov
stc
int
stc
in
xchg
jbe
int
std
cmp
cmp
shl
sub
mov
arpl
rorb
add
xor
jbe
dec
and
inc
and
or
cwtl
int
int
std
int
std
sar
shll
xchg
cltd
shr
sub
mov
xchg
mov
das
add
int
mov
xchg
mov
xchg
cmc
leave
jbe
popa
and
int
stc
cmp
rcl
mov
xchg
std
int
std
cmp
cmp
shr
sub
repz
push
fxch
out
pop
xchg
leave
fsubrl
add
int
cmc
int
mov
or
mov
out
xor
pop
int
std
cmp
cmp
in
push
cld
or
add
int
std
int
std
cmp
cmp
shl
xchg
shr
sub
or
mov
xchg
out
cmp
cmp
shl
xchg
shr
sub
jmp
addb
std
add
cmp
sarl
push
cltd
iret
ja
jecxz
inc
cltd
das
add
addb
jo
or
mov
mov
das
addb
in
xchg
int
in
xchg
repz
mov
mov
adc
dec
and
or
int
in
cmp
add
call
repz
sarl
xchg
mov
xchg
in
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
in
int
movsl
addl
mov
push
xchg
add
add
stc
int
stc
cmp
add
call
mov
push
cltd
int
adc
out
inc
aam
in
sub
xchg
std
int
std
cmp
add
call
repz
sarl
cltd
int
test
das
push
test
add
arpl
jbe
cmp
int
lods
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
adc
xchg
addb
and
inc
and
int
std
cwtl
lcall
xor
xchg
mov
sub
or
int
std
int
std
cmp
mov
repnz
or
int
and
jbe
int
in
cmp
or
adc
dec
mov
cmc
int
cmc
cmp
or
adc
dec
lahf
xchg
lea
cmp
or
adc
imul
mov
lea
mov
jbe
dec
and
hlt
mov
insl
das
add
int
dec
push
insl
das
add
int
sbb
insl
das
add
int
and
jbe
int
mov
mov
addb
addl
cmp
mov
repnz
or
int
std
int
std
int
mov
lea
outsb
jo
lea
insl
das
add
leave
jbe
dec
and
int
xchg
pop
int
xchg
cmp
loop
mov
push
popf
or
int
std
int
sub
xor
bound
int
std
int
std
int
and
sbb
xchg
dec
inc
fst
push
cmc
int
adc
lods
int
cmc
cmp
add
call
jmp
shr
sub
int
dec
bound
xchg
jo
add
int
dec
int
xchg
int
jo
jge
xchg
jo
dec
xchg
int
xor
sbb
xchg
xchg
add
mov
or
pop
fs
das
mov
xor
jbe
int
std
int
std
cmp
add
shl
sub
mov
mov
and
jge
add
int
std
int
std
cmp
add
shl
sub
mov
jbe
int
stc
int
stc
add
cmp
repnz
mov
mov
pop
lea
addb
mov
lea
xchg
lea
or
jl
icebp
aam
clc
icebp
sub
xchg
in
xchg
int
jo
outsb
test
test
int
mov
lea
xchg
std
cmp
add
call
jmp
shr
sub
pop
lea
mov
popf
int
test
lds
add
sbb
stc
int
stc
cmp
shr
xchg
add
incl
push
adc
and
jbe
int
stc
int
stc
add
cmp
repnz
mov
lea
mov
pop
lea
add
int
and
sbb
cmp
lea
int
adc
lods
int
adc
sti
call
jmp
shr
sub
int
dec
bound
xchg
xchg
pop
add
push
insl
das
add
int
and
or
or
cmp
add
call
jmp
shrl
add
int
std
int
std
cmp
add
sarl
push
rorl
jbe
pop
push
jl
or
leave
jbe
sbb
shr
lahf
xchg
jbe
dec
and
xchg
iret
inc
shl
xchg
adc
scas
cmp
lea
add
cli
xchg
xchg
add
or
mov
jbe
or
iret
outsb
std
iret
jno
or
or
leave
push
jo
add
sub
pushf
add
add
pop
movsb
add
add
push
lods
add
add
xchg
add
sbb
les
add
popa
lahf
xchg
add
sbb
aam
add
call
iret
faddl
add
leave
push
in
add
mov
add
jbe
and
or
jbe
inc
lahf
xchg
jbe
pusha
lahf
xchg
and
int3
push
jo
add
shr
xchg
add
scas
or
test
add
sbb
addl
add
int
adc
inc
add
add
add
or
iret
jbe
jo
or
push
int
jge
icebp
int
std
int
std
cmp
add
sarl
push
rorl
jbe
int
std
int
std
cmp
add
call
lods
sub
jmp
push
jge
jbe
inc
rcl
xchg
or
in
das
int
int
jne
jbe
int
mov
int
sbb
mov
addl
addl
int
sub
xchg
dec
int
cmp
xor
jo
int
stc
int
stc
cmp
add
sarl
push
rorl
jbe
int
and
pop
mov
push
insl
das
add
add
and
lock
mov
push
insl
das
add
int
and
lock
mov
push
insl
das
add
lcall
push
insl
das
add
int
and
sbb
sbb
or
addl
int
dec
add
and
or
or
cmp
add
call
jmp
shrl
dec
and
int
mov
jbe
shr
xchg
adc
scas
cmp
sbb
insb
cmp
lea
lds
outsb
adc
jbe
leave
addb
sub
pushf
test
jbe
int
sub
outsb
mov
jbe
int
sub
outsb
dec
in
adc
jbe
int
cmp
lea
lds
outsb
adc
jbe
add
or
icebp
addl
cmp
int
arpl
xchg
cmp
test
shlb
xchg
int
jno
das
mov
mov
mov
leave
jbe
dec
and
push
lret
aam
popa
shll
xchg
out
xchg
pop
out
orb
mov
pop
out
cmpb
std
int
std
cmp
add
call
jmp
in
xchg
push
cld
add
std
add
test
sub
adc
dec
and
int
std
int
std
cmp
add
call
jmp
shr
sub
inc
stc
xorb
rorb
add
push
leave
jbe
mov
jbe
xchg
addb
addb
test
lods
addb
addb
addb
addb
addb
addb
addb
mov
stc
cmp
clc
add
repnz
and
movb
addb
or
cmc
icebp
lea
jnp
addb
addb
std
ss
pushf
addb
int
push
jp
addb
int
std
xchg
int
std
xchg
xor
jbe
int
in
sbb
cmpb
int
mov
fadds
jbe
xchg
popa
fists
xor
xchg
int
xor
out
adc
mov
subb
int
xchg
adc
mov
addb
clc
int
icebp
push
out
addb
icebp
adc
pop
push
addb
add
add
adcb
pop
cwtl
lcall
or
adc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
movsl
dec
bound
addb
dec
pop
and
pop
xchg
mov
stc
xor
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
fisubrl
ret
add
clc
test
push
addb
int
mov
leave
das
sarl
fisttpl
xchg
mov
popa
addb
push
addb
addb
addb
addb
pop
lcall
xchg
lods
int
mov
int
popf
xor
int
xchg
cmpsb
push
addb
mov
ret
jbe
int
icebp
int
or
int
xchg
xor
inc
test
inc
or
rol
addb
cmp
clc
hlt
int
gs
ss
push
addb
add
xchg
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
hlt
int
dec
xor
int
mov
leave
das
rol
int
xor
das
pop
pop
add
add
mov
in
jo
jbe
xchg
aaa
ficoms
pop
mov
jbe
leave
jbe
mov
jbe
leave
jbe
fidivs
ficoms
or
pop
leave
jbe
scas
aaa
ficoms
or
cwtl
lcall
adc
jbe
cmp
cmp
pop
dec
and
out
ficoms
jp
jbe
int
or
iret
xchg
addl
push
ror
je
ror
xor
pushf
test
inc
loop
shr
xchg
int
int
test
insl
adc
cmpsb
mov
or
xchg
in
inc
jbe
das
or
jbe
add
mov
int
stc
push
insl
aam
cmp
out
int
mov
fs
xchg
mov
lret
xchg
add
xchg
stc
xchg
lret
int
lods
or
lret
int
stc
xchg
int
mov
adc
int
cmc
insb
add
std
sarl
push
sarb
rorl
jbe
push
cmc
int
cmc
add
call
repz
shrl
xchg
stc
inc
rolb
int
adc
xchg
stc
int
mov
test
int
stc
iret
adc
int
dec
shl
sub
cmp
or
push
adc
xchg
adc
call
repz
shrl
xchg
stc
xchg
xor
or
inc
lds
pop
outsl
add
add
jbe
int
mov
ljmp
mov
ror
popf
int
cmp
in
or
or
add
in
xchg
or
test
lret
rorb
add
adc
jbe
leave
jbe
dec
and
inc
and
cwtl
or
leave
jbe
into
and
in
inc
sbb
int
std
sar
shll
xchg
repnz
adc
out
xchg
push
add
lea
int
adc
jge
jmp
shr
sub
das
roll
jmp
addb
xchg
stc
cmp
shr
sub
jge
jmp
push
adc
xchg
std
int
std
cmp
cmp
shl
xchg
shl
sub
push
adc
xchg
stc
int
stc
aam
cmp
shl
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
int
in
int
in
cmp
loope
jmp
shl
sub
cmp
in
sub
lock
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
or
int
std
cmp
jmp
shr
sub
xchg
int
cmc
int
cmc
cmp
cmp
ljmp
int
std
int
std
cmp
cmp
shl
sub
repz
push
aad
adc
das
pop
pop
add
add
jbe
int
mov
jbe
arpl
rolb
insl
pop
jbe
aam
pop
jbe
fdivs
lret
or
das
adc
in
addb
lea
lret
or
insb
inc
jbe
subb
stc
std
add
cmpsb
rorb
adc
cmp
addb
xchg
jbe
inc
and
dec
sub
jno
cli
arpl
jbe
int
adc
subl
repnz
or
leave
jbe
into
and
inc
sbb
mov
int
std
int
std
cmp
shl
sub
jns
mov
lea
int
adc
jmp
shr
sub
das
rcl
in
outsb
int
cmc
int
cmc
sarl
push
sarl
lds
jbe
iret
jbe
jo
mov
jbe
int
stc
int
cmc
or
add
jbe
int
std
cmp
lock
push
roll
cmc
int
in
int
in
cmp
shl
sub
jns
mov
std
int
std
cmp
cmp
shr
xchg
shr
sub
xor
int
cmc
inc
jge
mov
jbe
int
mov
jns
lock
push
rorl
jbe
leave
jbe
bound
xchg
addb
jbe
cmp
shrl
jmp
push
jge
jbe
aad
or
int
mov
orb
in
lret
int
stc
das
pop
insl
cmp
or
int
in
int
in
cmp
mov
repnz
int
cmc
sub
int
push
popf
cld
add
int
popf
cmp
or
int
std
int
std
cmp
lock
push
roll
std
int
std
cmp
lock
push
sarl
jbe
int
adc
lea
cmp
cmp
repnz
mov
lea
imul
add
jbe
int
mov
jns
lock
sub
mov
int
stc
test
shll
rolb
in
xor
lret
pop
lcall
addb
roll
cwtl
sub
lahf
xor
std
or
stc
mov
lret
cmp
leave
jbe
adc
addb
mov
jecxz
mov
stc
iret
dec
into
mov
pop
das
mov
mov
das
mov
mov
fs
adc
das
mov
mov
mov
jge
pop
cmc
aam
leave
jbe
sbb
stc
int
mov
jecxz
mov
inc
in
dec
add
leave
jbe
push
addb
int
mov
lret
pop
dec
sub
push
add
add
cmc
sbb
push
jb
add
cmp
arpl
rolb
jecxz
mov
mov
adc
int
add
mov
inc
add
mov
adc
iret
js
or
iret
js
or
iret
js
or
iret
pop
or
cmp
addb
or
jbe
iret
pop
out
addb
pop
xor
pop
iret
pop
inc
addl
pop
xchg
addl
addb
xchg
icebp
or
or
mov
adc
or
and
lea
out
cmp
adc
jnp
ficoms
das
inc
cli
xchg
rcll
xchg
or
mov
out
int
or
cmp
shl
sub
int
mov
addb
cld
push
lock
stc
das
add
adc
mov
or
and
jbe
mov
movsl
int
jge
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
add
add
add
lea
or
lea
icebp
mov
dec
stc
pop
sbb
mov
xor
std
xor
icebp
mov
xchg
adc
add
mov
jmp
and
lea
cmpsb
or
shr
sub
notl
shr
xchg
push
lock
aaa
ficoms
or
or
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
push
comiss
xor
add
int
stc
push
imull
add
int
fs
push
faddl
int
and
jp
int
sbb
cltd
or
xchg
xchg
in
or
or
xchg
cmpsb
cmc
cmp
or
fcom
in
xchg
jbe
int
or
inc
lcall
ja
int
mov
xchg
mov
and
or
xchg
sbb
mov
jbe
or
push
addb
pusha
adc
jo
jbe
int
xor
int
stc
int
in
push
insl
aam
int
std
or
std
test
lea
movsl
push
or
or
int
test
lret
rolb
int
mov
pop
adc
mov
int
cmp
lret
pop
mov
shll
fwait
sbb
cwtl
int
pop
lahf
xor
cmp
jecxz
mov
xchg
add
xchg
das
mov
repz
mov
sbb
lds
sbb
jmp
dec
add
addl
mov
lret
cli
sbb
adc
or
sbb
leave
stos
lds
mov
addb
and
cmc
xchg
aaa
ficoms
or
aaa
ficoms
or
jbe
dec
and
inc
and
out
ficoms
or
fidivs
ficoms
or
int
adc
inc
icebp
xchg
shl
xchg
int
in
int
adc
ljmp
cmp
cmp
push
jns
jbe
iret
jbe
or
int
or
xor
ficoms
or
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
or
nop
add
add
lea
icebp
cmp
shr
sub
jmp
push
adc
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
popf
cmp
in
push
aad
int3
pop
aam
add
int
xor
xchg
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
cltd
shl
xchg
shl
sub
int
std
cmp
mov
shl
sub
xchg
int
adc
int3
pop
aam
add
int
adc
add
shl
sub
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
repz
shl
sub
xchg
int
std
int
std
cmp
in
shl
xchg
push
aad
adc
add
add
push
nop
add
add
jbe
int
std
sar
cmp
or
mov
push
shll
jbe
iret
or
addb
addb
int
push
or
lea
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
xor
repnz
inc
mov
int
lods
int
mov
inc
jge
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
push
shl
sub
cmp
inc
sti
add
int
std
int
std
cmp
repnz
jns
mov
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
or
nop
add
add
jbe
int
int
mov
aad
jmp
shr
sub
or
add
jbe
int
int
std
int
std
cmp
shr
xchg
int
jo
aad
ljmp
aam
add
int
sbb
lea
or
repnz
jns
mov
std
int
std
cmp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
hlt
call
in
push
aad
adc
add
add
jbe
int
std
add
call
repnz
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
int
std
add
cmp
shr
sub
jmp
push
adc
pop
nop
add
add
xchg
std
int
std
xchg
cmp
int3
push
aam
add
int
sub
hlt
call
repz
shl
sub
iret
or
addb
addb
xchg
and
insl
aam
int
in
int
adc
inc
jge
shr
xchg
int
int
int
in
int
adc
fidivrl
lock
push
adc
xor
jo
xchg
push
in
push
int
int
push
lret
or
int
cmc
int
stc
das
inc
jge
shr
xchg
int
cmc
int
stc
cmp
cmp
shl
sub
lea
push
lds
int
inc
jo
lea
or
xchg
xchg
push
int
dec
int
int
xchg
sbb
dec
xchg
sub
lea
int
int
push
xor
int
int
xchg
jbe
or
das
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
or
int
xor
les
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
lea
leave
cmp
add
stc
push
inc
shrl
add
addb
movsb
dec
mov
jge
cmpsb
xor
lea
xchg
das
inc
rcll
jbe
int
xchg
shrl
cmp
cmp
push
or
cmpsb
stc
das
inc
popf
xchg
or
int
cmc
push
out
add
dec
shr
xchg
int
stc
cmp
mov
int
cmc
int
stc
das
inc
or
shrl
shr
xchg
int
stc
cmp
shrl
cmp
push
fcmovne
lea
mov
ror
icebp
or
int
xchg
das
inc
rcll
jbe
int
xchg
shrl
das
mov
cmp
dec
or
rorl
mov
or
and
shrl
ficoms
cmp
fidivs
ficoms
ss
or
cs
int
xor
add
mov
int
xor
xchg
int
orl
push
and
add
in
test
int
adc
jbe
leave
jbe
scas
aaa
ficoms
or
int
jne
inc
jge
shr
xchg
int
insl
int
jne
repnz
lea
cmp
cmp
push
shl
int
inc
inc
mov
int
xor
xor
insb
test
jbe
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
fnstsw
leave
push
sub
adc
push
mov
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
xchg
shl
sub
xchg
or
nop
add
add
lea
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
cltd
cmp
in
push
aad
int3
pop
aam
add
int
sbb
xchg
sbb
icebp
shr
sub
psrlq
xchg
push
adc
xchg
std
int
std
cmp
cltd
shl
sub
repz
push
aad
cmpsb
std
cmp
hlt
call
mov
push
lds
aam
add
int
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
iret
xchg
movsl
or
add
iret
nop
add
add
std
int
std
cmp
int
sub
icebp
shr
xchg
shr
sub
jno
pop
out
addb
addl
add
dec
int
mov
mov
dec
int
cmc
int
stc
das
inc
jecxz
shl
xchg
int
cmc
int
stc
cmp
shr
sub
xchg
cmc
cmp
push
bswap
stc
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
cmp
int
stc
cmp
push
flds
dec
sarl
add
int
or
rclb
xchg
int
add
inc
pop
cwtl
lcall
popf
aaa
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
leave
jbe
dec
mov
cmc
dec
lahf
xchg
and
cmp
xchg
and
jbe
int
sbb
shlb
jbe
int
sbb
add
xor
pop
xchg
fs
popf
int
and
out
int
movsl
das
inc
add
out
int
movsl
adc
cmpsb
mov
shr
sub
pop
push
aad
nop
int
or
int
xor
xchg
dec
iret
xchg
lods
bound
stc
jno
cwtl
add
sbb
jbe
add
mov
cmc
add
adc
in
jo
jbe
jo
stos
clc
add
or
int
sbb
lea
outsb
adc
jbe
leave
addb
lods
int
and
outsb
test
jbe
int
and
outsb
mov
jbe
int
and
outsb
dec
int
and
insb
and
addb
sbb
lea
or
and
xorb
or
int
std
stos
test
lret
rcrb
xchg
int
int
dec
adc
cmp
cwtl
lcall
push
mov
jbe
inc
and
dec
addb
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
int
mov
jbe
int
cmc
int
mov
or
or
pop
jle
addb
mov
insl
mov
sarl
xor
mov
nop
xchg
iret
sahf
int
mov
aad
or
mov
jno
int
mov
leave
xchg
mov
ficomps
or
pop
mov
or
lret
mov
or
insb
add
add
push
add
add
outsb
add
add
add
inc
mov
add
iret
outsb
xor
add
add
xor
add
mov
add
int
mov
add
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
cmpsb
mov
cmp
shl
sub
in
outsb
iret
aam
mov
int
das
mov
cmp
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
outsb
iret
aam
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
incl
add
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
je
push
jbe
add
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
mov
add
or
int
stc
pop
inc
pop
inc
xchg
or
daa
or
int
mov
add
int
mov
mov
xor
pusha
addl
addb
mov
add
int
mov
add
pop
es
push
std
incl
add
xor
push
incl
add
xor
push
addb
add
or
xchg
add
add
jbe
pop
dec
xor
iret
test
add
add
bound
add
pop
push
xor
iret
mov
add
add
pushf
mov
add
int
mov
add
pop
add
addb
add
cmp
adc
cmpb
add
mov
addb
add
pop
lcall
adc
add
int
xor
call
repnz
or
adc
jbe
int
dec
cmp
mov
shl
sub
leave
add
add
add
incl
add
jbe
int
xor
jns
mov
shl
sub
jo
push
stc
incl
add
jbe
int
cmp
push
sbb
add
inc
lret
fwait
xor
adc
icebp
or
int
stc
push
insl
aam
adc
or
fmull
int
dec
int
dec
sar
setl
icebp
shr
sub
jmp
push
adc
xchg
cmc
int
and
dec
das
push
popa
test
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
in
addb
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
add
pop
xor
mov
add
int
mov
add
pop
es
iret
sub
add
pop
daa
xor
iret
xor
add
add
test
add
add
xor
iret
cmp
add
add
mov
or
cmp
add
pop
fwait
xor
iret
inc
add
add
or
or
inc
add
add
xor
iret
dec
add
add
pop
addb
add
pop
cmp
addb
add
jns
movsl
cmpsl
pop
pop
adc
iret
push
add
add
pop
mov
add
jns
fisttps
jbe
inc
jns
loope
pop
fcom
addb
add
jns
lods
push
pop
jnp
addb
add
jns
repnz
ljmp
mov
add
jns
in
int
xor
xchg
xor
icebp
shr
xchg
shr
sub
in
xchg
int
xor
out
cmp
stc
shr
sub
xor
das
pop
mov
int
xor
out
cmp
stc
shr
sub
int
stc
add
adcl
fwait
addb
movsw
int
xor
lea
cmp
sub
repz
push
jecxz
stc
xchg
int
xor
out
cmp
xchg
shr
sub
add
mov
stc
inc
adc
int
xor
icebp
shr
xchg
shr
sub
or
adc
lea
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
movsl
or
add
xor
mov
rcl
int
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
cmp
cli
mov
add
cld
mov
add
cli
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
popa
mov
or
or
int
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
dec
int
dec
cmp
mov
jmp
mov
or
int
dec
int
dec
cmp
cmp
shr
xchg
shr
sub
int
dec
iret
mov
out
shl
xchg
cmp
shr
sub
das
mov
or
int
dec
int
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
int
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
xor
out
cmp
xchg
shr
sub
xchg
or
adc
lea
dec
int
mov
icebp
cmp
shr
xchg
shr
sub
iret
push
nop
incl
add
add
add
jbe
mov
int
xor
xchg
xor
cmp
stos
cmp
shr
xchg
shr
sub
or
add
jbe
int
dec
cmp
mov
repnz
aam
iret
push
adc
int
xor
lea
cmp
mov
repnz
jo
push
and
add
jo
jbe
rolb
int
dec
cmp
lock
mov
mov
push
ror
iret
movsb
incl
add
int3
push
sbb
jbe
mov
int
xor
xchg
xor
psrlq
xchg
add
call
ljmp
sbb
sub
xor
push
jo
add
iret
mov
mov
add
pop
adc
push
bound
add
int
mov
add
int
mov
add
add
sub
jge
or
mov
mov
mov
add
add
pusha
mov
add
iret
mov
or
les
add
int
mov
add
iret
loopne
pop
add
iret
enter
iret
mov
mov
add
mov
add
add
stc
mov
add
int
pop
leave
xor
iret
addb
add
jge
or
aam
add
int
mov
add
cmp
or
add
add
addr16
add
leave
push
lods
add
add
xor
fadds
add
jae
jno
mov
int
xor
xchg
xor
call
repnz
jns
mov
lea
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
addb
das
add
addb
xchg
xor
psrlq
xchg
add
call
ljmp
aad
cmp
add
lea
int
xor
psrlq
xchg
add
call
jmp
jge
int
lea
add
mov
repnz
mov
jecxz
lea
int
xor
psrlq
xchg
add
call
jmp
jge
or
add
lea
int
xor
sti
call
jmp
shr
sub
int
xor
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
pop
pop
add
add
cmpsb
mov
jne
jbe
int
mov
or
insb
test
jbe
int
jge
inc
jge
shr
xchg
int
jne
xchg
jge
leave
cmp
push
icebp
int
cmc
bound
jo
push
cmc
incl
add
repnz
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
iret
cmc
incl
add
mov
leave
cmp
push
rolb
das
push
push
addb
jbe
ficoms
pop
mov
jbe
or
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
xor
repnz
pop
xor
push
repnz
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
pop
xor
repnz
pop
sub
xchg
repnz
int
xor
mov
jle
xchg
lea
inc
rcll
jbe
int
icebp
cmp
shrl
ror
lea
push
jge
dec
int
popf
addl
jbe
int
xor
cmp
cmc
add
sub
and
sbb
adc
test
add
or
adc
add
int
cmp
fcoml
aam
int
cmp
fsubl
aam
int
adc
add
int
cmp
outsb
sbb
push
add
cmp
cmc
mov
stos
test
lret
shlb
xchg
int
jno
cwtl
leave
jbe
dec
and
inc
and
int
std
sar
shll
xchg
sti
sarl
push
jns
mov
int
std
aam
int
std
cmp
cmp
sarl
push
jns
dec
inc
adc
pop
int
xor
jbe
cmp
push
add
push
pop
lret
or
das
push
fcmovbe
dec
add
adcl
fwait
addb
dec
adc
in
addb
lea
lret
or
js
clc
orb
int
stc
cmp
int
stc
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
int
add
leave
jbe
dec
and
xchg
jbe
or
int
adc
add
lea
addl
lea
std
cwtl
lcall
jns
mov
shl
sub
or
int
std
int
std
cmp
mov
repnz
or
int
mov
insb
jo
mov
int
mov
insb
pop
int
mov
push
outsb
xchg
int
mov
sbb
insb
pop
int
mov
jle
jl
icebp
sub
jbe
int
pop
xchg
in
xchg
insb
xchg
or
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
sub
mov
jbe
int
std
int
std
cmp
cmp
repnz
mov
lea
or
jbe
cmp
xchg
and
imul
xchg
int
std
cmp
lock
push
rorl
jbe
int
mov
jbe
add
popf
add
dec
int
mov
neg
add
or
int
adc
insl
aam
int
popf
or
int
movsl
int
dec
xor
or
int
adc
lea
dec
int
movsl
inc
jge
sbb
jbe
int
dec
int
adc
outsb
mov
lea
test
xchg
jbe
inc
and
cmp
xchg
and
or
iret
jbe
or
iret
jbe
or
iret
jbe
or
int
std
int
std
cmp
lock
push
rorl
jbe
jmp
xchg
and
xchg
popf
iret
jbe
jo
xlat
filds
add
jbe
int
stc
cmp
lock
sub
mov
jbe
or
int
xchg
sarl
in
push
popf
or
int
stc
cmp
shl
sub
jns
mov
stc
int
stc
cmp
cmp
shr
xchg
shr
sub
xchg
int
movsl
or
sub
jbe
int
stc
cmp
lock
push
shll
dec
iret
jbe
jo
sti
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
std
int
std
cmp
lock
push
shll
dec
iret
jbe
jo
mov
jbe
int
cmc
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
lock
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
in
int
in
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
cmc
int
int
cmc
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
push
mov
jbe
int
adc
mov
cmpb
shl
sub
jns
mov
je
ror
lea
int
int
adc
and
psrlq
xchg
cmp
shr
sub
lret
rolb
int
in
int
int
in
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
cmc
addb
in
int
int
cmp
shl
sub
jns
mov
je
ror
lea
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
add
in
int
in
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
in
int
int
in
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
xor
jbe
jo
outsl
lods
add
int
pop
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
jbe
int
stc
int
stc
int
stc
int
stc
cmp
xchg
shrl
cmpsb
gs
xchg
cmp
add
std
add
std
shr
sub
hlt
dec
and
int
std
cmp
cmp
repnz
mov
lea
push
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shr
jle
addb
popf
iret
jbe
jo
jge
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shll
iret
jbe
jo
das
cli
add
int
std
int
std
cmp
lock
push
shll
iret
jbe
jo
sti
stc
add
int
popf
xchg
or
add
cmp
jbe
xchg
jo
push
fildl
add
jbe
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
mov
repnz
jo
cmp
jbe
jo
add
jbe
int
std
cmp
mov
repnz
jo
cmp
jbe
jo
jb
add
int
inc
int
inc
cmp
cmp
shr
xchg
shrl
lea
addl
jo
cmp
lea
add
jbe
int
cmp
cmp
jbe
int
stc
int
stc
cmp
shl
sub
jns
mov
lea
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
or
cli
add
int
mov
xor
in
adc
cwtl
lcall
add
xchg
mov
or
dec
int
mov
cmpsb
dec
or
pop
jnp
ficoms
cmp
pop
mov
adc
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
sbb
aad
sbb
das
adc
je
push
ja
xchg
shr
addl
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
popf
int
xor
cli
int
adc
inc
loope
shrl
cli
push
addb
push
popf
int
mov
bswap
dec
int
xor
cmpsb
adc
lods
std
add
std
shr
sub
ficoml
aaa
ficoms
adc
mov
clc
aam
ficoms
adc
mov
leave
sbb
push
jge
cltd
pop
mov
add
aaa
ficoms
cmp
adc
out
ficoms
sbb
das
adc
das
stos
push
in
xchg
imul
and
addb
dec
int
mov
out
cmp
pop
jnp
ficoms
cmp
das
inc
sti
xchg
shr
xchg
cmp
shl
sub
cmc
push
fxch
out
imul
cmpsb
and
and
cmpsb
adc
xchg
fiaddl
aam
add
xor
and
sub
std
add
sub
add
or
or
mov
out
cmp
cmp
das
inc
add
out
int
mov
cmpsb
dec
shr
sub
dec
cmc
cmp
push
clc
int
xor
cli
push
aad
cmpsb
adc
popf
int
int
xor
or
cmpsb
adc
inc
jge
shr
sub
fst
jmp
adc
addb
lock
icebp
sbb
and
mov
cmpsl
cmp
sbb
jbe
int
dec
int
mov
dec
adc
mov
jnp
ficoms
das
inc
jge
int
cmp
cmp
sarl
jmp
adc
addb
divps
test
aam
adc
gs
jo
mov
ss
das
sbb
mov
test
lret
shrb
xchg
int
add
dec
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cwtl
shl
sub
lea
cmpsb
mov
cmp
push
rorb
or
xor
mov
jbe
int
xor
addb
int
adc
adc
test
nop
jo
add
or
lea
jge
shr
xchg
int
mov
xchg
dec
add
and
jns
ficoml
or
iret
jbe
jo
add
sbb
repnz
adc
xor
dec
add
mov
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cmp
fcmovbe
repnz
das
push
rolb
aam
int
xor
lea
inc
jge
shr
xchg
int
xor
xchg
adc
jns
fcmovbe
repnz
lea
shrb
shll
or
adcb
lcall
xchg
inc
int
and
mov
jnp
ficoms
inc
icebp
das
or
addb
test
jnp
inc
hlt
mov
das
add
adc
jno
ficoms
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
cmpsb
aaa
ficoms
test
aam
adc
scas
aaa
ficoms
mov
das
add
adc
mov
ficoms
das
push
into
addl
sub
addl
adc
xor
dec
add
mov
jmp
addl
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
aaa
ficoms
test
aam
adc
fidivs
ficoms
mov
das
add
adc
out
ficoms
in
iret
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
mov
int
dec
xchg
sbb
or
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
fst
out
xchg
adc
addb
clc
ds
xor
adc
xchg
cmp
inc
int
xor
adc
xchg
xor
adc
out
int
adc
adc
jecxz
inc
sti
xchg
shr
sub
fstl
clc
addb
push
clc
int
cmp
aad
cmpsb
inc
cmp
cmp
lea
loope
cmp
shrl
subb
lea
shr
xchg
push
popf
xchg
int
adc
hlt
add
std
shr
sub
insl
adc
aam
ficoms
adc
mov
out
int
inc
add
std
adc
aam
ficoms
adc
mov
lock
and
aad
rclb
or
and
not
aaa
ficoms
cwtl
add
xor
sub
add
sbb
adc
xor
dec
add
mov
or
arpl
sarb
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
aad
clc
int
xor
cmpsb
adc
fsts
or
int
cmp
inc
int
xor
adc
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
cli
cmp
lea
inc
loope
cmp
push
cli
shrl
subb
push
popf
int
cmp
lea
int
cmp
hlt
int
inc
adc
mov
jnp
ficoms
das
inc
jge
shr
sub
jmp
cmp
adc
addb
lds
lea
out
int
adc
repnz
add
std
adc
aam
ficoms
adc
aam
ficoms
shr
sub
insl
adc
mov
hlt
mov
lock
jmp
incl
add
sbb
pop
aaa
ficoms
or
and
jbe
xchg
aaa
ficoms
or
int
adc
cmc
lcall
xchg
int
adc
out
jo
sti
cmpsb
mov
jno
xchg
std
int
dec
or
iret
jbe
add
mov
mov
dec
add
in
add
mov
adc
stos
or
int
std
test
rorb
add
stc
add
inc
cwtl
leave
je
xor
addb
addb
xor
xor
sub
and
sbb
adc
xor
dec
add
mov
int
mov
je
test
je
xor
insl
das
add
int
xor
push
insl
das
add
add
xor
add
xor
add
xor
int
xor
add
int
xor
int
xor
int
xor
iret
jbe
or
int
xor
xchg
or
int
xor
int
xor
int
xor
int
and
xor
aam
mov
add
sbb
or
xor
push
int
fs
xchg
sbb
push
int
xchg
pop
sbb
add
addl
dec
int
xor
xchg
or
or
xor
push
insl
das
push
cwtl
addl
addl
je
test
add
orb
xor
int
xor
int
or
int
or
int
xor
int
int3
addl
dec
int
xor
int
xor
int
popf
addl
or
imul
jns
add
sarl
push
jge
mov
leave
je
mov
je
xor
insl
aam
int
xor
add
adc
jl
cmp
and
add
xor
add
xor
add
xor
add
xor
int
xor
add
in
cmp
aam
and
aam
and
aam
and
je
push
add
in
and
aam
adc
je
cmp
icebp
in
xchg
je
xor
icebp
or
int
xor
push
insl
aam
int
xor
leave
add
and
mov
mov
int
movsl
addl
and
mov
mov
cmp
add
shl
sub
mov
mov
inc
rcl
and
je
test
mov
int
movsl
addl
addb
cmp
push
iret
jbe
or
int
xor
int
xor
int
in
addb
je
test
add
addl
or
or
adc
mov
int
in
addb
mov
sub
lds
gs
popa
ja
jne
outsl
insl
jne
add
jno
jb
bound
dec
popa
addr16
addr16
js
bound
insb
outsl
add
je
jo
outsl
outsl
push
gs
outsl
jae
jne
imul
jae
dec
jne
imul
gs
outsl
jbe
jae
insb
push
gs
push
outsl
data16
popa
jns
gs
jo
outsl
insb
insb
jo
imul
gs
jne
jae
addr16
jo
gs
outsl
ja
add
outsb
je
gs
popa
je
outsl
jo
insb
fs
arpl
dec
outsl
imul
push
imul
add
je
gs
insb
jne
add
imul
insl
jo
outsb
outsl
add
jae
outsb
add
push
add
add
arpl
push
add
add
push
add
js
jns
push
add
jb
arpl
add
outsl
add
dec
add
outsb
add
je
outsl
add
outsl
add
popa
add
add
dec
add
outsb
add
add
outsb
add
popa
add
add
inc
add
jne
jae
je
add
push
add
jb
jns
add
push
add
popa
add
push
add
insb
add
je
imul
add
add
jo
add
jns
je
push
add
outsl
add
push
add
jo
jns
add
bound
outsl
add
inc
add
popa
add
add
jae
add
add
or
add
xor
add
push
adc
xchg
adc
mov
and
adc
add
adc
add
adc
lcall
add
or
add
add
adc
or
pop
adc
out
adc
into
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addl
or
inc
add
addl
cmpsb
addl
scas
addl
mov
inc
add
addl
movb
add
addl
addl
fiadds
inc
add
cmp
add
adc
jbe
adc
or
add
sbb
add
sub
add
adc
movsb
inc
adc
jecxz
adc
shlb
push
push
adc
pop
inc
adc
xchg
rcrl
add
je
add
adc
fldcw
add
pop
adc
nop
push
adc
scas
push
adc
hlt
jbe
add
pop
adc
mov
data16
pop
dec
adc
mov
adc
sub
adc
xchg
cmp
add
addl
out
addl
testb
add
addl
push
addb
addb
addb
addb
addb
addb
addb
addb
and
add
adc
and
inc
adc
ss
adc
leave
jno
add
cmp
add
inc
adc
mov
pop
adc
dec
sub
add
xor
add
adc
jl
adc
xchg
jle
add
data16
data16
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
imul
mov
adc
addr16
add
add
cmp
add
adc
jecxz
adc
push
or
add
adc
push
dec
adc
mov
adc
sarl
add
add
adc
test
addb
addb
addb
addb
addb
addb
addb
addl
addl
addl
addl
addl
addl
addl
addl
addl
add
je
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
test
add
add
jbe
add
mov
add
mov
add
mov
test
add
test
add
test
add
test
add
add
and
add
xor
add
dec
xchg
add
add
push
xchg
add
add
add
add
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
add
outsb
xchg
add
add
mov
add
movsb
xchg
add
xchg
add
xchg
add
xchg
add
mov
add
mov
add
mov
add
mov
add
add
dec
mov
add
add
add
nop
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
mov
add
add
add
add
add
mov
add
scas
mov
add
add
fmull
add
add
add
sbb
add
mov
add
add
push
mov
add
add
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
insb
imul
je
add
inc
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
jb
popa
insb
imul
arpl
add
je
jb
arpl
imul
xchg
add
gs
je
inc
dec
inc
push
arpl
outsb
add
popl
inc
jb
popa
je
inc
inc
push
add
add
je
imul
je
js
add
add
je
arpl
outsb
add
fadds
push
gs
imul
add
inc
gs
bound
arpl
add
popa
je
inc
outsl
outsb
je
outsb
imul
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
mov
popa
je
dec
inc
push
add
add
popa
jb
inc
outsl
arpl
add
push
gs
imul
addr16
js
add
outsl
dec
push
add
std
add
je
gs
inc
outsl
insb
outsl
jb
add
add
je
push
fs
xor
push
add
add
jne
inc
outsl
outsb
je
popa
insl
imul
add
je
dec
inc
imul
xor
fs
insb
add
inc
inc
push
push
xor
cs
insb
add
xchg
inc
gs
insb
addr16
jb
arpl
add
je
outsb
jne
je
insl
push
arpl
add
imul
je
gs
add
add
arpl
insb
addr16
jne
je
outsb
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
add
imul
popa
jae
push
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
fs
imul
add
je
popa
jb
je
outsl
jae
scas
add
ja
fs
pop
add
gs
je
inc
imul
jb
insl
inc
add
out
inc
jb
insl
gs
arpl
add
je
jo
popa
je
push
arpl
add
je
inc
add
push
imul
outsl
arpl
add
add
imul
push
add
je
outsl
jb
outsb
jo
je
fs
add
hlt
add
jae
push
push
dec
gs
popa
addr16
add
xchg
add
outsb
jae
popa
je
dec
gs
popa
add
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
add
outsb
fs
imul
push
add
ja
gs
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
imul
add
cmp
inc
gs
outsb
jne
je
imul
add
outsb
fs
gs
popa
addr16
imul
add
push
jo
popa
dec
jne
gs
arpl
or
inc
imul
jae
push
outsb
imul
outsb
fs
gs
popa
addr16
add
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
push
gs
outsl
arpl
add
stos
add
fs
imul
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
popa
insb
imul
add
inc
jb
popa
je
inc
imul
jb
insl
push
add
or
inc
gs
inc
inc
js
repz
je
popa
jb
je
outsl
jae
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
ret
jbe
jo
imul
lds
dec
jae
push
jo
popa
push
add
sti
add
je
insb
popa
jae
dec
popa
insl
gs
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
add
push
gs
ja
imul
cmp
arpl
popa
imul
outsb
add
xor
jb
outsl
dec
gs
push
add
jnp
push
push
jb
outsl
jb
add
add
je
arpl
gs
imul
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jae
outsb
arpl
jns
je
je
add
xchg
add
je
outsl
jns
arpl
add
inc
push
xor
cs
insb
add
add
addr16
gs
gs
push
popa
insb
jne
inc
add
push
gs
popa
insb
jne
inc
js
add
pop
add
jns
je
gs
jb
jns
gs
popl
push
gs
gs
popa
insb
jne
inc
js
add
das
add
je
data16
outsl
outsl
je
outsl
outsb
imul
je
jae
add
push
gs
insb
outsl
jae
dec
gs
inc
fs
jo
xor
cs
insb
add
arpl
cs
add
bound
push
gs
insb
insb
outsl
arpl
sbb
inc
jb
outsl
jb
outsl
fs
mov
inc
outsl
insl
jo
jb
push
je
imul
add
jae
jb
jo
inc
add
adc
inc
jne
insb
imul
outsb
fs
add
push
gs
push
inc
data16
dec
popa
jae
add
add
fs
imul
add
sub
dec
outsl
arpl
push
imul
push
jns
je
insl
push
imul
insb
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
popa
outsb
fs
gs
outsl
jne
je
add
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
testl
imul
and
insl
push
gs
jne
arpl
jns
gs
add
lcall
insb
inc
gs
je
insl
dec
popa
insl
gs
add
loop
inc
jb
popa
je
dec
popa
insl
gs
imul
add
je
outsl
arpl
gs
outsb
outsw
inc
add
lar
je
outsl
fs
gs
imul
add
pop
add
popa
insb
push
imul
insb
gs
jb
outsl
insl
insl
inc
jb
popa
imul
pusha
add
outsb
fs
imul
gs
add
push
add
je
jne
bound
inc
outsl
jb
popa
je
add
dec
inc
push
dec
inc
dec
xor
cs
insb
