push
mov
sub
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
subl
push
mov
mov
sub
add
push
mov
xor
xor
mov
sbbl
add
andl
mov
mov
sbb
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
sbb
mov
mov
mov
sub
add
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
mov
movl
sbb
mov
and
xor
add
adcl
mov
mov
mov
mov
mov
and
mov
adcl
mov
and
mov
xor
push
neg
pop
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
movl
mov
and
movl
mov
xorl
mov
mov
orl
mov
and
mov
xor
movl
add
mov
adcl
lea
sbbl
mov
mov
or
mov
adcl
xor
add
mov
lea
andl
push
mov
movl
xor
add
andl
push
subl
mov
xorl
push
subl
pushl
xorl
call
andl
mov
inc
mov
cmpl
jb
jmp
push
pushl
pushl
call
cmpl
jb
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
movl
mov
incl
mov
lea
incl
mov
movzbl
or
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
push
call
jmp
mov
sbb
xor
sub
mov
sub
mov
mov
movzwl
movl
mov
mov
cmp
movl
je
add
mov
mov
sbbl
xor
xor
lea
mov
orl
xor
div
mov
xor
mov
xor
orl
xor
orl
sub
cmp
jne
mov
mov
add
mov
mov
subl
xor
addl
xor
add
add
movl
mov
movl
cmp
movl
jae
and
lea
not
mov
mov
xor
xorl
add
lea
mov
mov
mov
cmp
jbe
addl
addl
movl
jmp
addl
addl
sub
mov
xorl
xor
decl
inc
sbbl
incl
addl
add
cmp
movl
jb
notl
mov
xor
mov
movl
xor
xorl
mov
sub
add
mov
adcl
xor
sub
andl
ror
movzwl
sbb
xor
mov
mov
mov
adc
mov
orl
jmp
pop
mov
pop
mov
add
sub
addl
sub
and
cmp
jae
jb
fcmovu
imul
jb
int3
bound
lea
xchg
xchg
inc
mov
sub
push
rol
repnz
sub
nop
ss
mov
aad
jb
adc
and
aaa
jo
lods
sub
mov
notb
test
pusha
push
and
cmpl
fwait
dec
or
jecxz
imul
xchg
ss
leave
int
outsb
cmc
pop
imul
or
mov
shll
imul
jno
add
dec
outsb
cmp
out
sbb
or
lret
push
jg
jp
iret
sub
ja
iret
shll
mov
sbb
call
leave
outsl
and
or
mov
inc
sub
insb
and
push
movsl
sbb
fcompl
lods
stc
mov
push
mov
out
xchg
xchg
cmpsl
out
addl
mov
repz
jbe
fmull
lods
loopne
repz
js
cmc
xorl
in
xchg
push
or
lahf
test
shl
mov
loope
adc
mov
in
mov
xor
lret
sbb
js
sub
notl
push
dec
mov
int3
int3
cmp
pop
xor
loope
shlb
sbb
gs
sub
sbb
push
mov
std
insb
push
fdivrs
inc
test
inc
cmp
imul
iret
jp
cmp
mov
cld
lcall
sbb
push
sub
rcll
loopne
inc
leave
jge
inc
cs
pop
ljmp
inc
xlat
jno
ss
decb
cld
lahf
aas
cs
jmp
notl
icebp
arpl
test
sbb
test
push
inc
fucomi
jnp
ljmp
sti
dec
test
dec
mov
pop
push
add
pusha
cmp
mov
mov
ret
out
pop
pop
fildll
sub
leave
ds
out
es
xorl
out
push
test
out
adc
and
and
in
sahf
outsl
or
xor
mov
push
xor
in
dec
cs
cmp
or
pop
iret
xchg
adc
lret
xchg
mov
into
xlat
add
gs
sbb
adc
fisttpll
sub
push
jo
lock
inc
or
jp
outsl
scas
in
ret
rcrl
xorl
das
xor
in
pop
cltd
loop
out
push
cli
xchg
dec
dec
sbb
fnstsw
shll
pusha
lret
ljmp
and
push
xor
mov
add
dec
insl
jmp
pop
dec
cld
xchg
push
cmc
es
mov
mov
addr16
inc
in
mov
sahf
sub
les
add
add
or
cltd
mov
mov
div
dec
cmp
pop
jecxz
xchg
int
inc
pop
movsl
fs
pushf
les
cld
xor
cld
mov
mov
xor
sarb
lods
stos
mov
bound
repz
test
ss
sbb
push
imul
dec
push
pushw
and
cmc
notb
sbb
inc
addb
testl
call
and
insl
sub
pushf
decb
mov
pushf
mov
dec
mov
inc
insb
dec
mov
popf
clc
xchg
data16
xlat
hlt
adcb
shrb
jo
jg
push
or
sbb
mov
xor
sub
xor
cmp
push
imul
sub
pusha
mov
mov
inc
jns
fisubl
in
inc
fnstcw
dec
inc
shll
std
xchg
mov
mov
ret
mov
lds
pop
dec
jecxz
sbb
test
sub
mov
insb
pop
mov
std
jo
repnz
testl
adc
bound
das
inc
xor
mov
popa
cmp
das
into
es
ret
call
bound
inc
add
loopne
inc
cmp
mov
lret
adc
movsl
bound
fists
inc
bound
sbbl
ljmp
adc
lods
mov
mov
popf
aad
filds
cmpsl
push
jmp
jmp
adc
test
aas
pop
add
aas
adcb
bound
xchg
js
adc
inc
mov
xor
mov
xchg
jg
shrl
pop
sub
outsl
jmp
xor
inc
cmp
add
in
jbe
add
psllq
sub
cltd
inc
dec
imul
loope
cmp
sub
pop
push
or
pusha
aaa
inc
sub
xor
jmp
movsl
sarb
inc
xchg
daa
push
insb
out
lea
jbe
or
pop
sbb
loope
mov
jmp
xchg
jns
dec
dec
cli
dec
mov
lcall
push
mov
cmpsl
xor
adc
dec
leave
rorl
pop
loopne
cmp
jg
cmc
xchg
inc
push
cmpsb
mov
lds
clc
cmp
das
xchg
xor
inc
xlat
mov
or
lock
out
fs
cwtl
xchg
ficompl
popf
push
inc
push
clc
inc
pop
and
inc
int3
rorl
movsb
dec
outsb
adc
in
xor
cli
or
adc
ret
pop
xchg
xor
cmpsb
imul
add
shl
int
out
test
out
lds
pop
sbb
roll
xchg
cwtl
push
jl
pop
push
cmp
cmpsb
es
leave
inc
pusha
and
arpl
testl
mov
jo
pop
sti
and
lods
push
pushf
int3
mov
xor
lods
cmpsb
adc
jmp
mov
xchg
imul
cmpsl
mov
mov
mov
in
adc
sub
push
jnp
movsb
xlat
inc
pop
dec
pop
mov
and
push
pop
insb
stc
clc
js
mov
cmp
loopne
push
mov
mov
sbbl
and
xchg
add
jg
test
shll
call
push
iret
int
dec
nop
cmp
sbb
pop
mov
jmp
cmp
mov
mov
sbb
pushf
sbb
rorb
lods
add
mov
aam
mov
dec
add
imul
jge
movsl
ret
popf
mov
push
pop
fmull
dec
push
jb
int3
dec
cmp
jl
ficomps
jb
cmp
xchg
cld
sub
lods
mov
push
xchg
jb
jle
xchg
ljmp
and
lret
lahf
iret
dec
pop
xlat
mov
and
outsl
sbb
add
ss
lods
inc
jno
cmpsb
addl
aaa
xchg
inc
loope
pop
lahf
xchg
roll
stos
push
popf
movsb
mov
push
inc
jge
mov
les
sub
cwtl
je
mov
mov
test
les
cmp
mov
fwait
sti
mov
sub
inc
sahf
bound
xchg
pop
pop
lcall
adc
lret
fs
mov
dec
jo
and
jbe
outsb
in
into
sti
pop
out
mov
imul
or
int
int3
js
stos
adc
stos
sub
adc
mov
punpckldq
cmpsb
xchg
mov
stc
rcrb
movsl
sub
inc
dec
filds
cmp
push
xorl
ja
pusha
test
mov
mov
or
adc
push
cwtl
jb
add
cmpsb
xchg
jl
sahf
ja
stos
dec
cmpsb
shrb
sub
sarb
sbb
loopne
sbbl
jle
jmp
out
xlat
nop
xchg
push
insb
push
jmp
scas
jle
in
mov
aaa
in
out
mov
fsubrl
pop
mov
pop
cmp
adc
sbb
jecxz
pop
into
push
xchg
inc
cmc
sbb
ficompl
es
int
mov
orl
ficoml
add
cmpsb
lock
lahf
pop
xchg
outsb
out
xor
mov
out
push
or
test
ja
xchg
xchg
hlt
scas
pop
push
lock
iret
or
inc
sbb
test
cmp
rcll
sub
cmp
and
outsb
icebp
popf
push
in
mov
xor
bnd
mov
test
sbb
adc
fcoml
insb
jcxz
cmc
shlb
pop
or
and
dec
cvtps2pi
push
int
adc
data16
popf
leave
rorb
dec
scas
pop
jne
xchg
push
jo
jg
daa
adc
movsb
adc
xchg
mov
fisttps
rol
inc
aad
shrl
ljmp
fisttpl
adc
mov
push
mov
mov
push
add
loope
testl
xchg
mov
out
push
jmp
cld
inc
pop
mov
ljmp
push
je
inc
mov
pop
rdtsc
mov
mov
into
or
ret
lock
sahf
outsl
cwtl
inc
roll
insb
push
sbb
push
xor
dec
lcall
test
rcl
int
inc
cmp
jmp
mov
sbb
pop
ljmp
movsl
cmp
movsb
aad
pusha
rclb
int3
lods
fildl
ss
pop
adc
sarl
sub
adc
jo
adc
loop
std
ss
mov
sub
add
hlt
jb
icebp
mov
adc
cmpsl
push
adc
xorb
repz
nopl
cs
inc
mov
bnd
lret
sub
or
data16
sbb
pushf
mov
adc
mov
dec
les
shrl
mov
push
lods
mov
jl
sbb
inc
fs
stos
add
mov
mov
add
mov
xchg
xchg
sbb
jb
sti
fisubrs
add
es
push
or
neg
sub
pop
or
in
lcall
and
sbbb
add
rorl
fists
cli
fxch
push
adc
cmpsb
out
jl
in
incb
leave
roll
xchg
push
dec
pop
push
pop
cs
bound
test
lods
dec
imul
xor
ds
inc
xchg
popa
and
lock
sub
inc
jle
fnstenv
pop
les
ret
popa
pop
aaa
cmc
add
or
jno
xchg
js
xchg
ret
out
inc
sub
mov
mov
xorb
inc
mulb
add
xchg
andb
mov
data16
clc
into
mov
xor
hlt
add
mov
xor
mov
repz
sbb
fbstp
daa
addb
sub
aam
sahf
xchg
nop
mov
jmp
xchg
daa
ss
lds
xchg
ljmp
or
cmpsl
dec
imul
sahf
mov
out
negb
jb
cld
rclb
mov
out
jo
out
xor
rolb
inc
out
inc
sbb
mov
lock
or
pop
in
ret
mov
push
pusha
movsl
fnstcw
sub
pop
cmp
xchg
lds
push
dec
sbb
and
leave
or
loopne
inc
inc
xor
inc
sub
inc
loope
cmp
fldt
arpl
or
and
xchg
dec
lret
stos
rorl
sub
pmuludq
loope
pop
cmpsl
pop
lret
inc
pop
gs
lahf
mov
aad
cmp
inc
aaa
cmp
push
or
stos
or
jnp
mov
push
push
jle
cmpsl
ljmp
push
mov
xorl
jge
or
push
divl
or
int
rcrb
xor
hlt
fmuls
xchg
mov
movsb
cmp
cmp
sub
dec
out
ja
fcmovbe
mov
sub
jo,pt
mov
cmpsl
shrl
adc
or
loop
scas
stc
mov
push
loopne
pop
and
out
mov
js
jp
mov
mov
andb
cld
mov
mov
mov
lods
sbb
xchg
mov
imul
ror
movsl
sahf
lea
mov
adc
add
lods
mov
std
inc
pop
cltd
cmpb
cmpsb
mov
inc
mov
and
add
xchg
dec
aad
or
mov
pusha
loopne
mov
mov
imul
outsl
sbb
add
stc
mov
addr16
aas
mov
cltd
push
daa
fdivs
sbb
outsb
loopne
je
scas
rcrl
mov
mov
das
rcrl
xchg
icebp
int3
adc
fcomp
jns
mov
sahf
xor
inc
push
pusha
mov
xchg
xchg
mov
xor
fsts
or
jl
lcall
xor
lods
jns
mov
decl
cmp
cs
jecxz
mov
push
sbb
push
xchg
add
xchg
ss
adc
aaa
xchg
ret
jg
and
nop
push
inc
or
ret
adc
rcr
lret
jmp
ja
xor
ficomps
adc
pop
push
jp
jle
stc
std
xor
xor
jbe
outsl
xchg
sbb
jbe
pop
hlt
push
popf
push
xchg
dec
movsl
loope
xchg
test
add
ja
pop
mov
pop
and
add
in
leave
mov
sub
in
sbb
sbb
pop
lods
repnz
push
adc
dec
push
jmp
test
adc
out
ret
loope
shrl
das
fidivrl
cmp
cmp
imul
xor
ret
jg
and
das
cmpsl
xchg
push
sbb
cmp
icebp
enter
xchg
xor
mov
mov
add
lret
pop
js
aas
push
mov
shll
lea
loopne
xor
fstpl
pop
je
lret
push
jg
lds
mov
mov
dec
aam
jmp
jae
cmc
in
push
mov
xor
add
inc
sub
pop
mov
cmpb
add
cmpsb
enter
roll
enter
mov
or
mov
call
inc
popf
into
jge
std
stos
repz
mov
inc
fbstp
xor
inc
and
dec
push
or
into
push
pusha
xchg
gs
xchg
addb
push
jecxz
nop
insb
data16
push
shl
jne
mov
icebp
ret
fidivl
into
dec
pop
xor
add
pop
int
mov
and
lock
daa
push
inc
std
mov
scas
mov
sub
push
ja
out
fnstsw
xchg
xchg
or
aad
lea
cli
imul
shld
enter
pusha
leave
and
cltd
fstps
pop
pushf
mov
mov
outsl
loop
pop
xchg
add
cli
push
adc
dec
aaa
rcrb
ds
icebp
cmp
or
sub
imul
push
pushf
mov
test
xor
ret
sbb
adc
xorb
stos
jmp
cmp
cltd
insl
jne
imul
ret
lods
push
call
aas
and
sbb
or
shll
inc
jecxz
jmp
subl
cltd
lahf
dec
in
je
jne
inc
sub
dec
rcrb
sbbl
sub
dec
and
movq
in
or
pop
xorb
adc
icebp
sbb
sub
push
js
aas
dec
sbb
ljmp
bswap
stos
sub
jmp
cmp
out
in
out
divl
mov
sbb
sbb
sbb
push
call
imul
out
pop
push
adc
or
imul
ror
mov
pop
and
cmp
and
cmp
jns
call
dec
ret
daa
xchg
sti
fwait
sahf
or
jne
xor
xchg
sbb
or
jmp
in
sub
adc
fucomip
ds
jg
cwtl
push
call
adc
sbb
loopne
into
adc
xor
out
rorb
xchg
cld
add
or
testl
outsl
pop
stos
testb
dec
add
test
push
rcrb
int3
cmpsl
nop
adc
jg
or
xor
sbb
xor
pop
mov
cmp
ljmp
jbe
jnp
mov
enter
fsubrl
mov
data16
mov
mov
ror
addr16
cltd
xchg
or
enter
cmp
and
inc
jne
pop
aad
lds
xor
or
movsb
lds
pop
in
ud0
cmc
cmp
lods
pop
cld
mov
or
adc
or
out
mov
fsubrl
push
psubd
and
inc
xor
sbb
or
inc
lods
inc
out
sub
jnp
daa
mov
jbe
or
int
cmp
scas
jecxz
mov
xor
inc
push
cwtl
cmp
mov
push
and
cmpsl
scas
dec
mov
jb
dec
fcoml
dec
inc
mov
aad
fisttps
clc
mov
or
imul
cmpsb
mov
pushl
and
ficomps
mov
lret
sbb
dec
jp
cmpsb
jo
sub
aam
dec
imul
test
sbb
imul
push
mov
fcoml
adc
or
icebp
ficoml
sti
sub
hlt
imul
add
lret
imul
mov
xorb
iret
imul
out
pop
xchg
shlb
pop
pop
repnz
addl
rcr
fucom
and
push
lret
inc
jb
cmp
sbb
push
movsb
mov
push
xor
cli
push
fadds
xchg
xor
pushf
jle
lods
xor
pushf
cmp
dec
adc
sbbl
mov
mov
mov
lods
dec
xchg
mov
dec
mov
icebp
test
or
mov
idiv
ret
rcll
out
mov
in
xor
adc
xor
xlat
mov
ja
lret
lock
push
sub
pop
jecxz
lret
push
adc
and
push
pushf
xchg
push
leave
loop
or
orb
inc
je
or
ljmp
dec
aaa
dec
xchg
loop
and
cmpsb
imul
mov
loop
shrb
lods
xorb
and
pushf
or
add
pop
or
aam
add
sbb
out
xchg
sbb
lods
repnz
cld
and
out
pop
lcall
push
or
dec
xchg
cmp
rolb
pop
sub
add
cmpsb
pop
add
or
rorl
push
mov
loope
jbe
subb
push
sbb
inc
inc
dec
scas
sub
pop
fimuls
pop
push
std
add
dec
add
iret
loop
mov
test
pop
add
stc
int3
adc
shl
push
jo
test
mov
mov
cmpsb
push
mov
or
inc
sbb
adc
hlt
jbe
sub
cmp
push
xor
add
xchg
out
sub
fdivl
or
insb
xchg
add
inc
jmp
ret
xchg
decl
jo
stos
fsubs
cmp
mov
lcall
add
stos
bound
aad
pop
lret
out
jbe
in
lret
pop
movsb
sti
and
std
das
insl
jl
test
or
test
mov
xor
mov
xchg
mov
mov
or
push
add
jmp
jns
fwait
lods
popf
cmp
sbb
or
ret
or
adc
xchg
xlat
cmp
icebp
xor
xchg
jne
cmp
mov
dec
jmp
shrl
outsb
and
enter
and
and
mov
pop
popa
inc
or
xchg
lock
call
jmp
shll
xchg
sbb
xor
fdivs
shrb
and
hlt
arpl
dec
push
outsl
adc
dec
pusha
and
add
fsubr
mov
stc
ret
enter
or
imul
jge
mov
mov
test
insl
pushf
cwtl
and
or
nop
out
rorb
repnz
sar
ret
insl
enter
test
mov
mov
cld
mov
or
fiadds
and
push
test
lock
add
mov
lret
scas
hlt
cmpl
xchg
js
push
lret
jae
jns
sub
imul
out
sbb
subb
jecxz
jg
mov
pop
jo
push
mov
loope
gs
cmp
sahf
gs
xchg
push
bnd
test
push
je
mov
or
xor
out
shll
pusha
call
jb
push
add
outsb
and
mov
int3
sbb
sti
push
aam
xchg
icebp
inc
mov
push
ljmp
mov
dec
sbb
mov
or
mov
mov
cmpsb
fs
inc
dec
adc
add
cs
jae
in
dec
and
lds
xchg
sub
mov
shl
mov
pop
icebp
notb
rolb
popa
sbb
adc
popf
jb
xor
andl
xor
jns
or
adc
pop
sbb
call
ljmp
lock
pusha
stc
jbe
mov
dec
push
jae
mov
popf
jne
dec
dec
mov
mov
in
mov
pusha
sbb
lahf
add
jb
dec
dec
cli
pop
sub
testl
call
test
push
and
adc
lods
out
push
xchg
sti
aas
cmp
nop
testb
in
loopne
cmp
aaa
fwait
movsl
mov
das
pextrw
jnp
std
adc
push
cld
pop
daa
out
cmp
stos
fildl
adc
stos
push
sub
mov
pop
add
add
add
mov
add
aas
xchg
or
dec
aaa
test
lahf
and
mov
out
mov
xor
push
ds
jp
cmp
jg
xchg
js
pop
inc
ret
jp
repz
hlt
add
out
cmc
push
add
sbb
xor
dec
ds
arpl
stos
sbb
add
cli
fnstcw
xlat
jno
mov
ret
push
adc
mov
aaa
pop
inc
mov
mov
xor
outsl
sti
inc
jno
jmp
popa
sub
cmp
xchg
xchg
mov
jbe
test
aad
in
fmull
mov
mov
subl
sub
inc
sub
cltd
push
jmp
jl
in
push
lods
add
lods
dec
lret
or
mov
mov
and
into
sub
and
and
jno
cmp
mov
xchg
mov
push
sbb
jo
dec
lcall
push
mul
ret
int3
fmul
push
insb
icebp
xchg
xor
lods
xor
or
fcomi
jne
jge
cmp
pop
aad
jae
test
cmp
and
mov
xor
adc
push
xchg
push
mov
andb
test
mov
and
mov
sbb
pop
cmp
cmp
mov
and
test
mov
push
inc
aad
pushf
mov
nop
xlat
cmp
sti
arpl
in
inc
cmp
sbb
push
mov
in
js
adc
addl
je
repz
or
lret
cmpsl
adc
mov
popfw
or
mov
pop
pop
pop
sbb
push
cmp
enter
mov
jmp
js
fnclex
fcmovbe
aad
mov
pop
dec
cmc
outsb
mov
aas
jne
jle
movsl
aad
jae
loop
test
inc
lahf
addl
lret
sub
dec
divl
mov
popf
jae
call
cmp
add
jecxz
mov
fidivs
in
sub
mov
arpl
arpl
or
decl
lcall
xlat
ret
lods
cmpsl
loope
inc
test
and
adc
loope
cmpsb
call
xchg
mov
pop
mov
addl
aad
dec
into
mov
cli
xchg
adc
mov
in
and
jns
lods
mov
lcall
dec
xchg
iret
pop
sbb
loopne
add
pop
cmp
pushf
and
pop
in
andl
mov
add
dec
jge
mov
push
and
adcl
or
xor
mov
sarl
rcll
jl
push
fcompl
sub
inc
sbb
inc
fld
dec
sub
xchg
mov
sbb
pop
data16
and
adc
test
lcall
xor
push
int
out
cmp
pop
loopne
add
aas
and
cmpsl
sahf
xchg
xchg
push
test
mov
cld
pop
test
push
or
add
push
mov
adc
xor
jb
mov
aaa
dec
pop
scas
sbb
pop
in
xchg
in
xchg
test
gs
popa
into
in
lods
in
push
or
das
in
arpl
cmp
cmp
and
mov
clc
dec
test
cli
out
andl
fisubl
rolb
test
cli
mov
cmpsl
les
es
pop
cmp
push
arpl
jge
popa
inc
mov
mov
mov
daa
test
imull
sub
sub
inc
out
frstor
xchg
dec
insl
and
push
xchg
push
shll
pop
cmp
out
addr16
push
sbb
repnz
loope
sub
xor
pop
in
jmp
loop
mov
hlt
adc
and
cwtl
popa
sbb
jmp
addb
mov
cs
push
imul
cld
js
push
call
in
icebp
adc
jle
adc
mov
loope
jle
mov
sub
or
mov
repz
scas
sbbl
scas
or
repnz
jecxz
ret
jns
inc
insb
inc
or
ret
xor
jb
mov
insl
or
test
js
fidivrs
shl
imul
fisubrl
mov
pop
nop
sub
dec
inc
and
jle
loop
mov
jnp
xchg
movsl
inc
imul
mov
adc
fsts
adc
and
xorl
in
adc
loop
jecxz
pop
push
clc
cmc
sbb
leave
mov
into
add
add
jno
int3
pop
out
lods
sbb
jge
push
pop
ds
cmp
pop
mov
scas
sahf
out
inc
repz
fisubrs
pop
jmp
lret
clc
jmp
ja
lock
mov
cli
mov
fdivr
dec
adc
mov
jno
sbb
movsb
fcmovnbe
sbb
xchg
jp
movsb
aad
mov
mov
std
into
adc
or
push
add
sarb
call
lcall
dec
shlb
pop
ljmp
inc
sub
hlt
mov
mov
push
outsb
mov
sub
pop
outsb
cmc
pop
fstpl
sarl
adcl
lods
ss
mov
into
rorl
xchg
arpl
xor
lds
cmp
or
or
jle
and
fisubrl
popl
insb
push
adc
push
jle
lods
fmuls
mov
cltd
jmp
and
mov
cwtl
adc
out
packuswb
jmp
call
in
dec
sbb
dec
pop
in
cltd
adc
sbb
mov
mov
jg
repnz
mov
sahf
add
cwtl
fisttps
filds
shrb
aad
sub
popa
xorb
jno
mov
loope
adc
jns
jp
inc
xorb
jbe
cmpsl
or
nop
clc
fidivrs
repnz
sub
fimuls
jns
jmp
cmc
mov
enter
dec
lcall
jne
mov
xchg
lcall
xchg
loop
push
sub
scas
aas
nop
jmp
and
movsb
dec
dec
adc
repz
xorb
and
xchg
inc
lcall
cmp
loope
pop
sbb
aam
xchg
pop
and
xor
loopne
dec
mov
xchg
mov
std
test
push
push
adc
xchg
clc
mov
bswap
jnp
pop
pop
mov
and
mul
scas
mov
jno
cld
mov
xor
pop
xor
dec
rorb
mov
loopne
push
aas
lods
pop
aaa
clc
mov
pop
sub
cmp
adc
sbb
lock
push
adc
sbb
repz
mov
roll
test
jmp
xor
cmp
lock
fistps
xchg
stos
add
shl
sbbl
in
add
stos
mov
push
or
bound
cmp
mov
nop
repnz
mov
pop
adc
push
out
psrlq
or
rorb
add
data16
inc
imull
movsb
lahf
mov
mov
fcoms
stos
imul
jnp
mov
add
pushf
jne
iret
addl
mov
dec
jo
push
in
sbb
jns
ss
dec
xchg
ss
mov
mov
hlt
xor
push
inc
lcall
cmp
mov
push
sbb
shl
mov
jg
aad
jg
xchg
je
or
das
xor
lcall
test
jp
daa
and
aam
lret
dec
repnz
add
stc
stc
or
sub
test
ja
std
in
out
or
pop
jl
inc
push
test
xchg
xor
pop
mov
add
mov
or
inc
mov
dec
or
jmp
out
adc
fidivrl
ds
push
int3
and
fbld
lods
imul
dec
cli
cmpsb
lret
bound
jl
add
repnz
stc
outsb
xchg
xchg
dec
loopne
jo
add
mov
push
mov
imul
adc
jg
in
pop
pop
push
xor
add
cmp
mov
sbb
push
fistpl
mov
leave
aas
xor
adc
lds
pop
fs
mov
stos
dec
imul
fcmovb
push
fdivs
popf
add
push
and
shl
lret
mov
adc
xor
jbe
shrl
xor
inc
adc
jl
mov
outsl
test
adc
xchg
iret
les
cmp
pop
rclb
push
inc
cld
mov
inc
adc
xor
fwait
xchg
idivl
inc
std
shl
jl
and
das
clc
jp
mov
ret
sub
je
outsb
in
orl
pop
add
push
push
mov
fcompl
or
mulb
dec
xchg
ret
jle
mov
fyl2xp1
loop
sub
push
repz
sti
leave
movsl
sti
sub
xchg
dec
xor
inc
pop
loope
idiv
cld
pop
pop
lea
dec
push
mov
inc
aad
push
mov
cmc
jl
and
mull
enter
outsb
sbb
add
sbb
jnp
arpl
push
andnps
pop
add
mov
adc
loop
int
insl
mov
je
lock
push
push
fldcw
test
pop
cli
sbb
xor
inc
into
adc
out
jbe
xchg
aad
mov
xor
je
mov
leave
push
dec
aas
test
jmp
inc
lock
or
mov
mov
insb
test
lock
insl
ljmp
lds
jle
fadds
sub
xor
cmp
jne
or
mov
andl
mov
adcl
xor
xorl
xor
sub
sub
mov
mov
xor
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
jmp
mov
and
out
mov
fldl
mov
addl
sbb
testb
test
lods
cli
loopne
outsl
ficompl
push
pop
jmp
xor
dec
inc
sbb
mov
and
ficoml
fwait
int
jecxz
lret
pop
bound
sbb
push
je
int3
inc
shlb
mov
sbb
jg
gs
negl
xor
aad
sub
insl
popa
in
sbb
sub
sub
sbb
cli
mov
sub
xor
add
pop
sbb
in
insl
or
mov
enter
sub
out
jmp
jne
inc
popa
adc
lret
in
push
cmp
lret
iret
inc
sub
or
mov
sbb
aad
sub
nop
mov
mov
jmp
sub
int
rcrb
add
scas
mov
mov
loopne
dec
cmc
mov
mov
mov
stos
pop
sbb
insl
jecxz
add
mov
adc
adc
mov
ss
jmp
pushf
mov
sub
shlb
imul
roll
std
pop
aas
movsl
lret
cwtl
daa
mov
addr16
inc
mov
cmpsb
imul
cmp
mov
dec
mov
inc
xchg
mov
mov
sbb
mov
adc
pop
pop
and
xchg
pop
xor
xor
pushf
int
outsb
or
outsb
inc
loope
pop
fs
faddp
and
outsb
rclb
rorl
and
sbb
mov
fiadds
sahf
nop
fucom
mov
call
xlat
push
xlat
or
sti
push
jne
jbe
in
cmp
cmp
and
mov
test
mov
lahf
cmp
addl
test
cmp
sti
jp
xchg
pushf
pushf
dec
mov
mov
shrb
mov
mov
ret
add
mov
push
mov
inc
icebp
fdivrs
outsl
dec
popa
jl
mov
jb
adc
dec
pop
and
int3
pop
jle
lods
pushf
mov
sbb
jno
and
mov
ds
adc
aas
push
out
fistps
pop
std
adc
stc
sub
mov
cmp
sbb
imul
cltd
inc
repnz
gs
repz
shl
sbb
subb
cmc
push
mov
cmc
stos
push
push
ror
xor
cmp
inc
das
fwait
or
cmp
xchg
add
outsl
dec
decb
push
sahf
shr
popa
fimuls
ss
test
sti
jae
mov
jne
sub
lods
push
xor
xchg
jmp
rorb
fbld
mov
jb
or
xchg
aad
jns
mov
sub
lret
movl
jbe
pop
movsb
js
scas
arpl
jge
mov
data16
add
dec
jg
jb
fisubrl
cli
ret
scas
testb
sbb
adcb
bound
or
or
xor
xor
pop
dec
inc
ret
dec
xor
dec
les
test
add
subl
sbb
js
xchg
fldl
cmp
cld
roll
scas
insb
popa
cmp
push
sub
loope
sub
jp
dec
popa
pop
flds
jge
ljmp
aas
jg
std
fistpl
dec
es
rcrb
pop
je
and
cltd
lock
arpl
mov
push
lods
pop
popa
bound
loopne
int3
out
jge
sar
sub
mov
out
leave
leave
cld
scas
add
mov
fldcw
adc
jle
jb
cmp
dec
push
mov
mov
nop
adc
inc
or
dec
mov
cmp
and
aas
dec
inc
popa
adc
sbb
dec
in
xchg
cmp
rcrb
cltd
pusha
test
or
scas
push
ffree
frstor
mov
lea
pop
daa
jle
jp
jl
cmp
int3
jmp
add
clc
call
outsb
into
push
dec
cmp
in
xchg
sub
fs
addl
mov
cmp
adc
jmp
and
jmp
inc
or
push
cwtl
std
call
push
jnp
push
cld
inc
pushf
and
cmp
mov
sub
xchg
je
inc
jmp
mov
pop
es
xchg
lahf
xchg
mov
cmpsl
xor
push
out
sarl
mov
push
add
cltd
mov
lods
cwtl
test
inc
arpl
pop
xchg
dec
shlb
lret
bound
dec
xorb
int
cmp
mov
mov
adc
jno
xor
sti
xlat
xchg
lods
fdivr
cmpsl
pop
lret
cmp
add
pop
dec
adc
pop
jns
pop
xor
movsb
jmp
insb
pop
xor
or
mov
dec
pushf
sbb
enter
jp
cmp
or
adcb
jne
fsubrl
jmp
cltd
ret
aas
and
fisttpl
int
pushl
aam
mov
daa
mov
rcrl
adc
les
mov
mov
cmp
lcall
add
cmp
jo
pop
jecxz
mov
mov
enter
aaa
rorb
sbb
sahf
fiaddl
fsts
lea
pop
shl
xchg
cmpsl
enter
outsb
and
cmpsl
adc
shrb
mov
aas
xor
or
push
fidivrl
xchg
mov
xchg
mov
imul
ja
or
test
xor
jg
scas
or
loopne
sub
add
cwtl
jae
adc
jne
mov
les
mov
mov
mov
outsl
add
fstps
int3
notl
mov
push
sub
sti
shr
push
and
lcall
or
icebp
mov
mov
add
push
mov
xchg
mov
cmc
mov
mov
mov
sbb
repz
cli
mov
sbb
repnz
xchg
pop
dec
imull
adc
fisttpl
xchg
cmp
push
or
lock
pop
imul
movsl
xchg
sbb
jmp
gs
cmp
in
xchg
in
cmp
mov
subl
popa
jge
outsl
xor
stos
dec
sbb
xor
sti
add
jo
mov
inc
inc
mov
popf
cmp
std
das
adc
sub
or
sbb
xchg
lea
and
stos
ja
and
mov
sbb
inc
stos
adc
movsl
ret
fcmovnbe
out
or
js
xchg
popf
or
inc
sbbl
xchg
inc
repz
lock
loopne
iret
sub
inc
or
mov
mov
aad
adcl
inc
ret
jo
mov
fdivrs
push
fistpll
xlat
sbb
outsl
jne
popa
jecxz
cmc
xchg
test
mov
insb
popa
push
mov
sbb
adc
push
sahf
dec
int
repnz
push
jecxz
add
cmc
sub
mov
std
out
mov
xor
shl
mov
rorb
xchg
shr
dec
in
sub
pusha
xor
aad
stos
call
sub
or
adc
mov
les
sti
jle
cmp
aad
repz
nop
push
inc
aaa
shll
out
adcb
or
sub
sbb
push
add
sbb
pop
mov
fnstsw
sub
push
or
mov
movsb
nop
cmp
js
fsubl
rolb
rorb
push
push
adc
sbb
cwtl
inc
pop
imul
gs
bound
ljmp
insl
mov
xchg
cmp
adc
cwtl
call
dec
xlat
cmp
fisubrl
cld
fcos
out
or
andb
aam
paddw
push
inc
adc
mov
or
mov
lret
add
push
xor
fisubs
les
lods
ret
das
and
mov
outsl
push
rorb
push
test
adc
xchg
mov
add
xchg
push
or
scas
call
cmpsb
insb
inc
and
shlb
jl
push
jge
clc
mov
lcall
push
cmpl
jl
xor
insb
stos
mov
das
jns
lcall
pop
adc
add
ds
addr16
lds
hlt
ja
aas
sbb
add
or
mov
dec
std
push
pop
repz
jbe
iret
mov
ret
out
negb
mov
cld
vmovaps
fimuls
mov
jno
int
into
pop
mull
sub
aad
push
cmp
inc
fsubl
adc
lds
dec
dec
cmp
mov
fstpt
dec
mov
push
mov
movl
aam
in
mov
les
shr
addb
xor
push
lea
inc
xchg
mov
xor
std
call
sti
into
jl
dec
test
out
aaa
sub
adc
popa
mov
pop
pop
es
xor
test
pusha
sarl
push
loope
dec
cmp
or
das
mov
sti
xchg
test
repnz
dec
stc
inc
dec
cmpsl
and
xchg
mov
sbb
testl
into
sub
in
pop
push
xlat
fwait
andb
and
loope
push
cmc
inc
mov
fwait
push
mov
aad
and
stos
out
jecxz
out
pop
push
pop
orb
mov
fiadds
jle
mov
in
jmp
and
adc
cmp
lahf
call
mov
icebp
lock
enter
dec
or
push
mov
pop
or
clc
mov
and
jg
mov
xor
iret
in
push
mov
rorl
imul
xchg
push
aad
loope
fisttpl
out
js
repz
push
imul
inc
dec
adc
or
lret
jmp
pop
nopl
test
cli
loop
pop
adc
pop
rolb
pop
lahf
push
adc
imul
jge
cmpsb
popa
or
mov
fdiv
icebp
scas
cmp
pop
inc
jbe
fimull
mov
mov
jns
push
cmpsl
cmp
shll
cmc
mov
lds
repnz
lds
in
ret
or
fmuls
sbb
adc
lods
fucomp
xor
mov
sub
pop
adc
lret
dec
mov
lret
sub
xor
jo
jne
xchg
xor
or
pop
or
fisubrs
add
push
gs
pop
and
and
outsl
add
adc
jl
call
in
xchg
ror
dec
push
inc
or
sbb
rcrl
bound
sub
add
daa
ljmp
icebp
lea
stc
push
cld
add
cmp
sbb
and
sbb
rdmsr
mov
fldt
arpl
fisttps
testl
in
ss
mov
sub
xchg
or
pop
lea
sbb
scas
sub
jns
call
or
sub
adc
rorl
ret
mov
sub
lods
cmp
xchg
lock
mov
push
pop
loope
jb
nop
cmpsl
or
cli
dec
loope
sbb
std
fidivs
ret
aam
xlat
mov
dec
mov
and
mov
cld
mov
xor
xor
cmp
xchg
stos
and
loopne
andb
daa
imul
aaa
je
jae
xchg
jmp
xor
es
aad
fildl
iret
xchg
loop
test
enter
shll
mov
mov
add
pop
dec
loop
jnp
add
add
enter
push
hlt
scas
jge
sub
fscale
out
inc
add
cmp
lods
divl
add
cmpl
rorb
jle
outsl
rclb
xor
das
pop
or
and
dec
sbb
xchg
imulb
dec
adc
testl
imul
fcompl
aam
cs
lret
xor
stos
fidivl
push
mov
dec
jg
andl
daa
test
out
out
shll
ja
int3
addb
jns
add
std
test
das
outsl
add
daa
inc
shlb
xor
sbb
sbb
out
mov
adc
dec
pushf
daa
ret
popa
fists
sbb
inc
mov
jb
das
inc
lods
push
push
push
fists
pop
fcomp
lock
cvtps2pd
cmp
fadds
mov
jno
insl
jge
sub
adc
xor
test
cltd
cld
sub
jne
out
mov
or
sub
or
jmp
imul
jbe
dec
jmp
imul
add
ljmp
dec
mov
push
sub
pop
pop
insl
xchg
shlb
jle
or
sarb
lret
repnz
aad
cmc
lods
je
sub
mov
sbb
push
jl
xchg
addb
shll
mov
cli
dec
sub
xchg
test
scas
outsl
xchg
and
mov
movsl
xor
lret
fsubs
stos
sub
bound
sbb
dec
mull
xor
lods
mov
ret
insb
ljmp
loopne
push
push
mov
les
and
jl
sub
dec
roll
andl
andb
jns
outsb
iret
and
arpl
int
push
sub
mov
adc
in
test
and
fnstenv
fcoms
inc
movsb
sub
mov
les
lock
shrl
mov
icebp
dec
add
mov
mov
jmp
out
ret
mov
or
test
clc
or
test
mov
and
push
add
in
pop
jb
add
std
mov
push
cwtl
addr16
add
and
mov
cli
and
daa
push
add
nop
adcl
sbb
pusha
in
cs
xchg
jge
shlb
dec
or
mov
lea
pop
dec
cli
pop
add
adcb
push
xchg
bound
dec
xor
fcmovne
leave
mov
je
sub
repz
scas
mov
in
popf
shl
call
test
pop
ss
in
xor
cmpb
pushf
fstl
int3
push
sbb
movsl
iret
dec
lahf
pop
mov
int3
xchg
imull
jb
jno
sub
in
pushf
iret
push
jp
inc
jp
in
mov
add
inc
div
outsl
and
and
adc
mov
sub
or
test
or
jmp
inc
sbb
xchg
call
inc
xor
scas
sbb
push
mov
adcb
adc
rorl
and
push
iret
mov
imul
test
jl
pop
test
je
mov
pushf
inc
test
sub
ds
shlb
xor
mov
push
imul
in
sbb
ficoms
add
dec
sub
inc
pop
or
adc
sub
or
cmp
rorl
mov
ljmp
add
pop
mov
xor
pushf
addr16
insl
dec
scas
pop
lods
jnp
cmp
mov
adc
mov
dec
std
nop
std
jl
pop
inc
clc
mov
inc
xlat
fldcw
test
or
xchg
sahf
aam
pushl
inc
lds
push
adc
push
scas
popf
ret
push
mov
xchg
mov
push
inc
add
pop
bound
popf
std
mov
and
jl
sti
xchg
push
in
out
push
out
popf
sbb
jle
ja
push
push
jbe
mov
lock
fs
test
ljmp
or
sti
push
cmpsb
push
xor
mov
test
xchg
aam
push
out
add
cld
push
inc
and
mov
ds
call
push
mov
or
stos
subl
lahf
imull
mov
popf
insb
in
inc
sbb
movsb
pop
push
inc
jae
xchg
lds
sbb
jbe
hlt
pushf
into
jge
rcll
adc
sarl
jecxz
sarl
das
pop
add
adc
lret
enter
sub
adc
popl
ret
imul
aad
jecxz
inc
xor
cmpl
xor
pusha
mov
bound
xchg
sti
jne
orl
lods
xchg
pop
lea
icebp
jge
pusha
aas
push
jg
fstl
sbb
dec
aad
lcall
fidivrs
jo
ror
inc
cmp
push
and
loop
mov
cli
dec
nop
xchg
out
push
xchg
adcl
dec
jb
dec
lock
mov
faddl
cld
adc
mov
push
sti
push
mov
and
add
ret
adc
mov
mov
mov
insl
jnp
int
jg
pop
and
repz
mov
lds
mov
mov
fidivrl
mov
outsl
and
lds
das
test
iret
mov
xor
ret
ret
movsb
inc
es
nop
fmuls
pop
leave
repz
inc
pop
icebp
test
sub
ss
push
out
pop
or
mov
push
adc
sub
mov
out
sbb
rcl
test
xchg
pushl
cmp
cmpsb
inc
lock
test
sahf
xor
paddw
cltd
into
arpl
pushf
cmp
adc
cmp
movsb
jl
aad
cmpl
or
cwtl
mov
push
pop
stc
or
and
stos
pop
sbb
add
ret
xchg
popl
jle
cmc
mov
xor
inc
sbb
mov
mov
cld
lds
cld
in
hlt
cmpsl
into
rorb
loope
lods
aas
lods
clc
les
push
add
fwait
test
jo
mov
imulb
pop
pushf
dec
in
mov
hlt
push
call
sbb
addr16
loopne
das
mov
sbb
sub
mov
xchg
cmp
rorl
lods
stos
push
test
je
fcomip
cmp
push
add
push
sahf
jo
ljmp
sub
jecxz
jmp
mov
les
loopne
aaa
stc
hlt
add
ret
cltd
pop
rcrb
cld
bsr
push
lret
cmp
mov
jg
cli
ljmp
movsb
repnz
andl
jmp
es
pop
fcmovnb
pop
push
sarl
and
lcall
arpl
jns
in
pop
xchg
aam
or
data16
xlat
out
and
cwtl
mov
movsb
xchg
movsl
xchg
lret
lock
dec
popa
xchg
jecxz
scas
sti
popa
cmp
std
adc
add
aaa
out
in
adc
flds
or
and
in
sbb
clc
cmpsl
dec
dec
add
jns
push
jne
das
cld
std
push
cmp
mov
push
inc
jb
mov
test
into
shll
jnp
clc
frstor
push
stc
pop
jecxz
ljmp
pop
push
mov
nop
pushf
loopne
add
aas
xlat
xchg
dec
int3
test
push
add
cmp
ja
movsb
lods
sti
pop
jne
sti
scas
and
dec
xor
test
movsl
testb
dec
lock
sbb
inc
sti
fidivl
jl
popf
cmpsb
mov
jne
icebp
jne
sahf
and
push
and
mov
movsb
rolb
cmp
cmc
sub
lock
cwtl
cmp
or
movsl
jg
push
es
jp
rclb
add
dec
push
jecxz
push
movsb
pop
mov
sbb
sbb
and
xchg
movsb
jmp
je
adc
pop
sub
or
and
fmul
jns
and
test
and
xchg
push
or
mov
push
add
pop
mov
mov
ljmp
jp
jae
mov
cmp
out
outsl
dec
push
scas
xor
sub
out
aad
push
cmpsl
pop
scas
sahf
jle
in
add
movsl
dec
ljmp
pop
cli
roll
or
add
popf
icebp
and
ds
cmp
sub
int3
outsl
lock
push
adc
imul
add
mov
pop
push
out
shlb
iret
jno
inc
adc
ss
lahf
push
mov
mov
int
add
out
sbb
sbb
inc
mov
cld
jmp
or
mov
and
jnp
and
pop
shrl
pop
cmp
gs
or
hlt
sub
sbb
dec
ret
and
mov
loope
scas
pushf
iret
dec
maxps
push
add
iret
pop
lds
mov
dec
or
outsl
push
repz
ret
adc
pushf
cmp
add
mov
int3
xchg
jae
adc
sub
or
xchg
xchg
lahf
scas
andl
icebp
loope
inc
mulb
enter
push
push
push
stos
clc
pop
jns
xor
and
cmp
mov
test
out
inc
pop
xchg
lcall
enter
inc
mov
jo
repnz
addl
jo
push
mov
pop
push
mov
dec
pusha
push
dec
dec
mov
xchg
dec
int3
test
xor
inc
lea
jnp
xchg
xor
lcall
or
adc
inc
and
pminsw
pushf
mov
rolb
mov
clc
test
adc
push
shll
int
xor
add
push
scas
lock
cmp
sbb
mov
cmp
repz
jns
xchg
aam
loope
pop
cmp
movsb
sub
push
mov
push
xor
cltd
clc
pop
addr16
stos
jp
hlt
xor
inc
add
loopne
xchg
sbb
sub
or
mov
adc
sti
push
sbb
popa
xchg
and
push
mov
push
and
sub
lret
int3
ret
rcll
test
push
addl
leave
jne
gs
xor
cli
adc
mov
adc
add
dec
and
data16
lret
pop
imul
and
adc
fs
jecxz
rorb
cli
push
mov
incb
xchg
xchg
cmp
add
add
std
in
mov
adc
out
es
dec
out
cwtl
inc
gs
loopne
push
lcall
xchg
iret
push
add
mov
pop
or
push
loope
mov
dec
mov
lcall
mov
inc
pop
xchg
std
cmp
les
mov
dec
push
cwtl
cmp
pop
xlat
std
and
sbb
shlb
test
int
push
aas
mov
inc
stos
pusha
mov
mov
inc
subl
arpl
test
xor
add
jge
jae
cs
push
mov
push
sub
icebp
cmp
mov
jmp
fcmovnu
jp
imul
jmp
xchg
add
int3
aas
ss
dec
jae
shrb
mov
imul
shrl
sbb
popf
pop
sbb
or
push
inc
lret
ret
push
mov
insl
sub
shll
into
fbld
xor
data16
inc
int
cmc
xlat
adc
jp
fldcw
daa
dec
and
aas
xor
mov
and
mov
cmpsb
cmc
imul
or
pop
daa
in
test
jg
idivl
pusha
cs
and
dec
lock
popf
bound
scas
jae
mov
outsl
jmp
das
push
inc
test
or
incl
push
js
mov
inc
aam
lds
fnsave
fwait
pop
enter
and
sub
adc
repnz
cmp
roll
loop
testl
aam
inc
cmpsl
push
lcall
push
jb
pop
insl
lods
pop
mov
xchg
sarl
and
adc
mov
xor
and
shll
pop
in
das
adc
xchg
gs
mov
sub
bound
jl
movsb
mov
bound
mov
xlat
fldt
or
push
ds
loop
jns
or
pop
mov
jl
leave
lcall
insl
call
sbb
push
jle
imul
stos
jg
xor
jbe
push
shlb
rorb
push
icebp
cli
add
dec
das
adc
cmc
int3
dec
push
lret
inc
and
mov
aam
inc
mov
sar
adc
add
dec
outsl
fwait
mov
jg
ljmp
sti
cmc
testl
xor
je
pop
and
addb
imul
mov
in
mov
adc
nopl
scas
sbb
mov
test
mov
dec
clc
mov
sub
cwtl
cmc
scas
imul
mov
cli
shr
lret
cmpsb
loop
jbe
aaa
dec
popa
lcall
movsb
sarb
pop
add
lahf
sub
shlb
push
mov
jg
push
pop
lcall
in
inc
jl
or
mov
sarb
xchg
sub
pop
sub
jmp
ss
adc
in
decl
xor
ds
xchg
inc
stc
push
mov
mov
mov
cmp
sub
daa
xchg
popa
xchg
iret
fimull
iret
test
test
sub
repz
orl
jbe
rcpps
out
jp
dec
dec
cmp
call
mov
int3
lret
mov
and
int
cs
out
fs
jp
sbb
xchg
std
lods
pop
cmp
and
test
test
popa
lret
xor
cld
je
push
adc
sub
jge
cmp
lahf
sarb
mov
loop
dec
repnz
mov
sbb
dec
enter
adc
jp
mov
out
lods
push
and
lock
sub
into
jae
mov
dec
mov
shll
stos
push
sub
mov
jle
mov
bound
add
das
ja
push
gs
cli
lahf
sbb
pop
in
dec
mov
hlt
imul
fstps
mov
dec
shl
xchg
imull
mov
jbe
or
into
or
sub
repz
cltd
fcoml
movsb
mov
sub
arpl
test
das
dec
aam
lods
imul
xchg
in
mov
cmc
inc
mov
fstps
inc
into
fisubl
inc
sahf
fmull
xor
lea
andb
mov
cmp
insl
pusha
mov
scas
dec
dec
cmp
or
cmp
imul
mov
add
loope
dec
sub
int3
test
test
push
lret
jp
mov
mov
mov
or
arpl
inc
fxch
fdiv
push
xchg
out
xchg
mov
cltd
sub
pop
mov
lret
les
jo
sarl
xor
repz
adc
cmp
push
xchg
in
loop
mov
mov
das
cltd
fcoms
gs
and
dec
out
jecxz
stc
pop
dec
clc
mov
adc
aam
pusha
bound
popf
ljmp
xchg
mov
push
xchg
add
xorl
push
cmovns
fstp
sbb
orl
pop
aas
mov
aam
popf
mov
sub
cld
dec
xchg
shrb
hlt
loop
fisttpl
andb
arpl
mov
lods
jl
pop
or
pushf
mov
shlb
int3
adc
ret
xchg
inc
dec
dec
jp
cmp
jge
push
movsb
mov
leave
sbb
sub
aas
jnp
mov
mov
in
imul
out
das
jp
pop
cmpsb
ret
stos
cmpsl
ficomps
adc
stos
cmpsb
stos
mov
xor
dec
std
in
mov
xchg
adcb
insl
adc
lret
dec
mov
int
jge
arpl
arpl
adc
inc
dec
jle
xor
and
sti
pop
pop
cmp
xchg
add
mov
mov
jp
test
fistpl
iret
int3
test
jecxz
addr16
cmp
inc
in
dec
jno
rorb
out
jle
xchg
lods
mov
cmp
divl
jnp
dec
fistpl
repnz
inc
xor
and
sub
ret
mov
fucomp
ficompl
mov
leave
or
jae
adc
test
ljmp
jae
cltd
int3
nop
adc
mov
pusha
aas
mov
jo
xor
add
ljmp
lret
ret
mov
mov
add
in
push
xor
cmp
call
cli
out
ja
lcall
xor
repnz
adc
dec
sbb
dec
mov
inc
sbb
out
icebp
and
cmp
mov
jecxz
sbb
fnstenv
es
arpl
divl
ret
out
mov
or
mov
leave
rorl
lea
movsl
xor
hlt
or
popa
jno
sbb
in
ret
repz
stos
cmc
fmuls
push
notl
stos
or
mov
jo
or
dec
daa
jne
mov
jo
fnsave
insb
jmp
mov
popfw
xchg
mov
push
fbld
mov
pop
popf
mov
lcall
cmp
in
xchg
inc
jl
aad
dec
ret
mov
xor
aam
inc
or
stos
xor
mov
mov
fildl
lret
mov
cmpsl
mov
stc
adc
lods
sbb
jae
and
sbb
insb
pop
out
inc
xor
add
fwait
jae
sarb
es
inc
inc
arpl
outsb
xor
ljmp
dec
jns
mov
pop
fcmovu
pop
xor
push
sarl
ss
lret
add
imul
or
mov
call
lcall
test
fists
or
jne
ljmp
repz
jg
orl
add
ds
adc
xor
ret
mov
shlb
and
out
movsl
mov
imul
pushf
dec
mov
movsb
sbb
nop
inc
sbb
ljmp
imul
les
adcb
inc
stos
mov
sbb
popf
pop
repz
lods
in
xor
ds
xor
ja
rcrb
out
jp
add
or
push
xchg
push
inc
push
xchg
push
cmp
testb
into
fwait
adc
push
cs
pop
mov
pop
sti
xor
arpl
popf
loope
sar
and
add
gs
or
sbb
sub
mov
movsl
push
xchg
sbb
inc
dec
gs
jecxz
cmp
mov
lods
mov
leave
jbe
pop
inc
lret
mov
mov
loopne
cmp
mov
add
test
loopne
mov
push
cmp
inc
cmp
icebp
ja
sti
pop
imulb
inc
mov
jmp
mov
icebp
jmp
cmp
insl
dec
push
sti
rcrb
mov
adc
jb
fwait
sbb
push
jg
lods
bound
jg
jmp
and
in
adc
cld
scas
ja
and
mov
cmp
pop
inc
sbb
lret
or
lea
add
fmull
pop
flds
cmp
sub
xchg
pop
mov
subl
dec
jecxz
and
cmp
out
sub
dec
ja
mov
fcompl
pop
fcmovnu
push
outsb
ret
jl
call
cwtl
shrl
adc
push
xchg
add
adc
aad
inc
or
in
test
fistpll
pop
jnp
and
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
jmp
movsl
mov
sbb
scas
mov
nop
stc
adc
addl
mov
sti
add
nop
enter
mov
sarb
push
loope
pop
cmc
and
mov
pop
in
sub
and
lods
aam
mov
adc
cmc
jp
mov
loopne
stc
push
daa
mov
les
daa
out
push
mov
cmpb
loop
dec
mov
rcr
enter
repnz
movsl
fisubrs
test
imul
fldt
inc
adc
adc
mov
imul
out
scas
in
inc
jae
sub
cmpsb
je
jns
fsubrl
pop
cmp
neg
adc
jbe
lret
into
data16
and
dec
mov
inc
pushf
pop
mov
inc
subb
add
fadds
popf
imul
ljmp
dec
pop
shll
mov
xor
adc
mov
ret
fsubr
xchg
lret
into
in
jle
ret
insl
jno
dec
insb
jae
dec
movsb
imul
fmulp
test
and
out
xor
mov
test
fidivrs
jl
hlt
sbb
mov
fcompl
divb
xchg
pushf
lahf
sub
fidivs
mov
adc
in
and
cld
add
pop
jnp
or
cwtl
sbb
push
mov
mov
xacquire
mov
mov
or
mov
jo
rcr
inc
loop
cld
enter
inc
test
lret
shll
xor
sub
loope
lahf
adc
push
adc
repz
mov
dec
test
js
es
icebp
pop
lret
xor
mov
fbld
dec
sahf
mov
stc
push
sbb
sti
jl
lea
test
sub
and
insl
movsb
scas
test
jo
jbe
pop
pop
adc
cwtl
cmp
mov
jge
ds
sbb
push
inc
mov
clc
push
inc
jno
pop
xchg
mov
push
int
std
std
mov
jmp
aaa
jne
pushf
or
mov
inc
gs
push
xchg
hlt
sti
xlat
dec
xor
clc
or
popa
cmp
sub
stos
shll
xlat
out
dec
in
movsl
stos
pushf
xlat
jl
xchg
jns
sbb
ljmp
cs
mov
xor
iret
push
or
sbb
sub
pushf
sub
stc
and
xor
jg
jns
jne
mov
cmp
stc
lahf
loopne
cs
sbbl
add
icebp
mov
jnp
and
out
inc
ja
add
inc
dec
mov
rcrb
lea
mov
inc
sub
hlt
sbb
mov
fs
imul
jo
pop
call
add
repz
andb
sub
push
arpl
imul
xor
cmpsl
push
int
adc
add
rcrl
shlb
ljmp
shrb
jmp
and
bound
popf
rcrb
sbb
lods
inc
adc
push
inc
cmp
leave
mov
inc
mov
pusha
pop
push
out
inc
jp
shlb
sbb
xor
xor
sbb
es
add
test
sub
xchg
hlt
int3
out
popa
lcall
popa
push
xchg
dec
in
add
cmp
mov
xor
xchg
fdivl
outsl
loopne
call
imul
and
pop
fiaddl
in
xor
test
xchg
rclb
pop
pop
xor
bound
push
jae
xor
push
xor
movsb
nop
movb
push
mov
cmp
iret
clc
shrb
movsb
aaa
dec
ret
ss
sarb
xor
jge
push
push
outsl
in
mov
ret
data16
pop
mov
jg
pop
enter
fwait
cmp
xchg
sbb
out
mov
stc
mov
movsl
notl
jae
sbb
and
test
cmc
add
pop
test
in
mov
pushl
lahf
dec
clc
in
mov
xor
sbb
imul
xchg
mov
pop
cmp
xchg
jmp
fisttps
xchg
dec
es
mov
cmpsb
mov
push
in
cmp
mov
xchg
mov
rorb
stos
dec
int
add
loopne
sbb
inc
or
js,pn
push
cmp
sbb
cltd
addr16
lds
cmp
push
test
lret
pusha
mov
sub
fstpt
popa
in
subb
mov
xor
ss
adc
scas
mov
in
in
fcom
gs
mov
mov
cmp
push
inc
adc
or
nop
imul
mov
cmp
sar
insb
xchg
jnp
sbb
fs
inc
sub
or
jg
pop
aaa
xchg
or
cltd
stos
jmp
imul
add
dec
dec
stc
push
adc
daa
dec
popf
mov
jb
dec
call
xchg
xchg
sbbl
loopne
cmc
mov
push
mov
cmpsl
daa
gs
and
rorl
push
imul
sahf
lods
addr16
jae
ret
out
inc
jo
fcompl
popa
test
rolb
data16
dec
sub
ja
fldt
xor
add
push
inc
sbb
sbb
mov
inc
mov
push
add
xor
dec
daa
mov
divl
push
test
insl
jle
add
cmp
add
xor
sub
mov
push
xor
jmp
pop
mov
cmp
ds
testl
outsl
out
jl
mov
pop
xor
mov
xlat
movsb
push
and
mov
xchg
test
dec
in
aad
xlat
ret
scas
ds
mov
cmp
es
xrelease
nop
cltd
shl
inc
push
sub
outsl
ds
lods
aad
inc
popf
xor
popf
inc
mov
icebp
xchg
jno
and
popf
pop
xor
icebp
mov
mov
sub
xor
sub
jp
lods
mov
inc
dec
scas
xor
mov
jle
sub
and
add
aas
pop
cltd
ljmp
mov
xor
aad
push
jne
inc
hlt
push
push
or
data16
rcl
sub
imul
mov
je
adcb
fsubrp
sub
sti
inc
cltd
insb
sahf
adc
imul
xchg
test
inc
adc
jb
mov
jp
sahf
mov
inc
or
lods
and
pop
lahf
jmp
pusha
pop
jbe
mov
jne
add
ret
xchg
hlt
pop
pushf
loopne
mov
push
ds
and
loopne
jmp
pop
sbb
sbb
xor
sahf
adc
in
xor
fs
hlt
test
js
loope
cmp
call
xchg
pop
push
cvtpi2ps
lods
pop
js
adc
mov
out
fisttpll
adc
aad
dec
test
outsb
stc
cmpsl
addl
xchg
inc
inc
fldz
into
lods
cwtl
or
lods
ja
xchg
idivl
fcmove
roll
sub
jae
or
push
or
aas
sub
sub
pop
bound
xor
into
call
adc
pusha
roll
and
insb
rolb
pop
data16
xchg
xlat
push
cmp
dec
pop
xchg
and
fwait
jecxz
push
in
or
mov
pop
xchg
das
movd
hlt
call
cmp
push
dec
ss
cmp
pushf
cmpsl
sbb
lret
dec
inc
push
loope
insl
cmp
push
fwait
mov
aam
insl
shll
xchg
mov
pushf
outsb
fcmovu
rorb
lret
sub
inc
mov
lret
push
mov
or
jne
iret
jecxz
sub
push
cmp
fdivrp
xor
faddp
mov
std
fdivl
test
imulb
inc
mull
jbe
into
das
mov
mov
imul
ret
stos
pop
mov
mulb
cmc
popa
cmp
rcl
dec
jl
insl
mov
int
mov
push
mov
jp
jle
jo
pop
cmp
cmp
std
mov
jno
stc
outsl
or
pusha
nop
aas
in
mov
fnstenv
testb
arpl
inc
and
decb
bound
push
jl
aaa
mov
jge
sub
mov
sbb
xor
xor
sub
gs
je
inc
daa
loope
cmp
fimull
push
test
out
lahf
dec
push
push
mov
jle
add
in
xor
dec
fbld
popa
add
jmp
lcall
or
dec
sub
out
add
add
adc
mull
lahf
cmp
loop
pop
adc
xchg
daa
dec
mov
push
lea
shrb
add
test
sbb
xchg
orb
cs
cmpsl
adc
ret
out
cwtl
repnz
jge
fildll
fs
shlb
jno
sub
rcl
sbb
push
rcrb
nop
push
add
push
pop
cli
aam
and
and
pop
call
xor
std
loop
adc
sub
in
mov
mov
cmp
jge
insl
jae
sti
ja
ret
xchg
inc
add
cmp
out
daa
push
adc
mov
ds
lods
mov
pop
pop
push
arpl
and
mov
pop
sub
mov
sub
icebp
jo
push
and
jg
ficomps
xchg
dec
xchg
jns
ret
icebp
push
lods
sub
cld
sti
cmp
sahf
mov
stos
cmp
lds
das
dec
xor
out
fldt
mov
adc
fwait
les
xor
popa
xor
out
cltd
add
notb
cld
mov
jbe
fimuls
add
fwait
addr16
leave
inc
ja
sarl
cmp
or
sub
adc
fsubrl
xchg
pop
iret
jmp
fsts
pop
out
adc
push
orl
mov
hlt
dec
aad
sub
or
mov
pop
push
mov
ljmp
mov
mov
test
jns
adc
sub
rcrl
lcall
shll
lods
ds
mov
nop
mov
mov
gs
mov
test
ds
adcl
iret
jp
mov
xchg
ret
xchg
test
and
mov
dec
push
dec
mov
xchg
test
sbb
add
push
dec
or
jno
jmp
rorb
ucomiss
jl
cmpsb
out
push
xorb
lret
or
fisttpll
cmpsl
ljmp
mov
ds
push
iret
sahf
mov
push
imul
sbb
or
mov
int3
add
dec
scas
cmpsb
pushf
mov
add
mov
mov
push
push
mov
cmp
arpl
repz
mov
fidivrs
or
les
dec
cmpsb
lods
push
or
in
xchg
pushf
cmc
xchg
mov
push
xchg
push
inc
jl
sahf
sbb
add
mov
sbb
aam
push
popa
div
or
sub
xchg
pusha
inc
adc
mov
pop
sub
sbbl
xchg
rcl
add
fwait
push
jle
fisubrs
and
pop
mov
xor
lods
jae
cmpsl
ja
lcall
mov
fdivrp
or
pop
pop
stc
jnp
sub
pop
push
outsb
daa
insb
jb
clc
insb
ficomps
jg
roll
adc
add
and
mov
nop
mov
inc
mov
scas
lods
rcr
pop
sub
dec
lret
mov
cmpsb
mov
pushf
sbb
mov
lret
xchg
jo
cmpsl
jl
pop
xchg
sbb
es
ja
jae
sub
adc
pop
xor
aas
ds
jg
lods
push
xor
sub
icebp
sub
inc
movsl
adc
xchg
ficomps
popa
pop
cld
std
adc
inc
mov
aaa
mov
les
std
icebp
repz
xchg
stos
cmp
loopne
mov
lahf
aad
fwait
jl
bound
mov
lods
xchg
cmp
xor
mov
js
and
or
int
inc
xor
and
cwtl
je
and
dec
imul
ja
sbb
xchg
push
sub
mov
ja
jge
loopne
out
push
xor
cmpl
sbb
ret
mov
inc
xchg
dec
iret
sub
test
ud0
inc
or
scas
lds
mov
and
xchg
jbe
adc
jne
inc
xchg
ret
popf
emms
sahf
inc
fdiv
stos
cwtl
adc
bound
xor
cmp
in
inc
out
ficoml
dec
ss
lods
mov
sti
or
jp
jecxz
cmp
and
sub
rcrl
outsl
push
daa
js
mov
in
stos
test
adc
mov
stc
jnp
dec
pusha
pusha
xchg
movsl
lods
pop
repnz
add
mov
dec
cmp
fdiv
pop
inc
cmp
and
ja
sti
jmp
cmp
jp
sti
add
movsb
fwait
xlat
shlb
aam
jecxz
addr16
mov
push
or
jae
filds
pop
mov
or
dec
stos
fimuls
enter
cmpsb
in
inc
mov
dec
hlt
lret
and
mov
mov
shrd
jne
in
test
xchg
lret
pop
dec
xchg
shl
sub
fwait
push
push
mov
adc
pusha
movsb
sub
and
mov
sbb
mov
insl
xchg
or
out
dec
sub
or
pop
repnz
out
ds
mov
jecxz
push
mov
in
in
call
jnp
xor
out
roll
xchg
out
je
les
int3
jno
pop
push
hlt
mov
adc
cmc
adcl
mov
fcoms
mulb
or
movl
test
push
xor
or
lcall
hlt
das
iret
ljmp
fildll
imul
push
js
in
loopne
test
xor
addr16
ja
mov
aas
add
lret
cmp
shrb
push
popf
dec
lret
jmp
daa
adc
sbb
mov
fwait
ss
outsl
test
imul
fwait
lea
xor
inc
fwait
jae
inc
xchg
je
cmpsl
movsb
add
sti
cmpl
and
jo
pop
scas
add
outsb
cmpl
cmp
inc
call
shrl
adc
scas
into
out
cmp
out
push
push
add
fnsave
push
add
pushf
loope
std
aad
jbe
aam
adc
xchg
aas
mov
xchg
add
test
or
lea
add
inc
pushf
jl
inc
sbb
mov
cmpsb
rol
sbb
aam
push
xchg
sbb
inc
fldenv
xor
mov
stos
shrb
sahf
adc
cltd
and
out
hlt
cmp
movl
test
in
roll
cs
xchg
push
fbstp
movsl
test
std
subl
and
adc
cmpb
mov
mov
sbb
cltd
int
je
inc
jecxz
mov
ljmp
and
mov
jl
aad
stos
jmp
pop
les
ret
jbe
sub
lcall
or
lds
xor
fmul
or
xor
shrb
call
roll
ljmpw
clc
icebp
scas
push
sarb
pop
and
mov
or
enter
lods
jge
call
pop
pushf
or
orl
les
or
pop
sbb
inc
jb
shll
dec
mov
jg
jmp
cmp
in
data16
mov
lds
pop
pop
mov
and
jne
mov
or
or
dec
mov
aas
xor
adc
push
fs
push
jg
dec
jmp
dec
jmp
mov
aam
data16
pop
imul
xchg
and
arpl
insb
out
mov
sub
loope
pop
pop
xor
jecxz
es
js
cmpsb
mov
inc
sub
lahf
call
mov
aam
fs
sbb
cli
test
mov
xor
and
cmpsb
xor
jns
inc
lods
into
outsl
or
xor
test
sbb
das
jbe
xchg
add
add
stc
sahf
push
cld
mov
adc
add
sub
add
out
dec
clc
iret
cld
xchg
pop
pop
sarb
enter
popf
sub
scas
fstp
test
xchg
cmp
hlt
lods
hlt
mov
and
icebp
lcall
xor
push
ror
aas
sbb
mov
fsubrl
test
aaa
mov
shlb
imul
xor
lods
or
jmp
xchg
inc
pop
mov
mov
pop
or
div
xor
mov
mov
lea
mov
daa
lock
popf
in
lahf
daa
pop
jns
cmpsb
dec
mov
inc
jmp
sbb
xchg
push
add
sub
dec
shl
mov
push
icebp
lea
sarl
andl
mov
loope
pop
aas
orl
jmp
insl
out
pop
out
or
lock
mov
jne
xchg
int3
test
icebp
je
cmp
cmc
xor
jge
hlt
push
xchg
movsb
inc
push
xchg
and
cwtl
movsb
das
scas
xor
pushf
pop
popa
lahf
sbb
pop
sbb
int3
stc
dec
pop
into
leave
xchg
js
adc
mov
jae
cltd
and
les
int3
pop
out
xor
push
push
and
addr16
pop
or
bound
hlt
repz
jbe
das
repz
icebp
dec
mov
cmp
fsubp
clc
lock
fadd
or
pop
jecxz
mov
adc
pop
roll
pop
inc
push
or
adc
mov
xchg
pop
pop
je
rclb
fsubr
or
scas
sub
sub
jmp
mov
stos
pop
out
cltd
scas
pushf
nop
mov
pop
cs
and
cmp
cmpsl
rcr
stos
or
aad
mov
sbb
and
ja
call
mov
data16
repz
fsub
cmp
ret
js
ss
xlat
sbb
dec
arpl
mov
in
ds
xchg
add
xchg
call
test
fsubrs
add
call
rorb
addr16
data16
add
aas
xchg
dec
hlt
cmc
adc
push
out
in
bound
mov
push
mov
jne
jmp
dec
jle
inc
xchg
pop
pop
push
ss
loop
jae
movsb
repnz
dec
shl
jnp
jo
xor
sub
ret
mov
dec
in
out
sbb
outsl
dec
out
in
mov
scas
lea
incb
dec
and
mov
iret
icebp
lock
dec
fwait
and
fcomip
dec
int
fidivl
sub
or
jo
adc
ss
sbb
adc
andb
xor
push
adc
enter
xorb
push
adc
push
movsl
mov
pop
fisubl
out
push
push
negl
idivl
shll
in
das
mov
gs
push
aam
das
clc
add
push
daa
mov
js
not
stc
inc
jle
jns
mov
movsb
sbb
rcrl
jmp
dec
leave
xor
decl
in
jbe
mov
xchg
xor
test
xchg
xor
fdivp
xchg
xor
loope
pop
adc
cmp
outsb
mov
sub
jo
push
fsubrs
out
mov
leave
sub
jno
inc
sbb
lret
notb
inc
jne
jno
hlt
mov
bound
call
outsl
daa
pusha
mov
mov
cs
es
shrb
roll
mov
rorb
lcall
pop
ja
mov
xchg
push
pop
in
sbb
fcmovb
mov
sub
lret
push
mov
add
or
add
leave
jbe
xchg
mov
sub
test
jns
movsb
xor
dec
inc
rcl
jge
ja
repnz
xor
pusha
mov
dec
movsl
jne
and
cmp
push
push
sar
add
icebp
add
push
fildl
cli
les
or
xchg
pop
insl
sbb
rclb
aas
adc
nop
jnp
cmpsb
jns
cmpsb
lcall
dec
cmp
outsl
repnz
imul
fwait
popa
pop
cmpsb
mov
push
scas
sub
pop
std
sbb
jmp
pushf
mov
inc
in
jns
mov
push
mov
add
out
or
aam
movsb
dec
jb
mov
in
push
imulb
mov
mov
add
aaa
push
push
or
xchg
clc
cltd
push
mov
jge
out
xchg
mov
mov
pop
push
mov
sbb
mov
rol
push
out
jb
repz
sbbb
aam
fcmovb
sub
push
loopne
lcall
daa
xchg
adc
push
adc
js
in
loop,pn
or
int
enter
dec
sbb
cmpsb
or
sbbl
xor
cwtl
es
ds
std
nop
mov
push
hlt
sub
out
repz
popf
ja
xchg
inc
out
or
mov
outsb
pop
dec
push
sbb
lret
stos
nop
call
fwait
orb
xor
nop
jg
lcall
add
xchg
xchg
xor
and
sub
cmc
dec
clc
aad
popf
inc
xchg
add
adc
lret
lods
adc
stc
inc
hlt
inc
pop
loope
mov
pop
adc
mov
imul
xchg
add
shr
or
xchg
pusha
jnp
xor
imul
shll
add
sbb
gs
imul
mov
stos
cmpl
lret
movsl
and
cld
aad
inc
add
sbb
lds
mov
shlb
and
mov
fldl
dec
cld
cltd
push
or
inc
xchg
lds
dec
jecxz
movsb
xchg
sbb
push
in
push
insl
cmpsl
inc
stos
inc
ret
lea
or
insb
cmc
pop
jecxz
pusha
movb
fwait
mov
mov
popf
adc
xchg
jb
sub
push
nop
mov
mov
sbb
bound
mov
mov
imul
adc
jg
fs
xchg
xchg
dec
ret
dec
push
xchg
jnp
add
das
cs
cmp
cmpsw
jno
jbe
push
mov
fimuls
insb
loope
mov
mov
xor
push
insl
adc
jg
jmp
mov
bound
lret
cmp
jmp
mov
xor
popf
or
addr16
mov
shll
adc
push
lret
pop
mov
ljmp
lret
rep
add
xchg
cmp
ljmp
cmp
stos
pop
or
aas
nop
jo
lods
aaa
dec
push
je
mov
setge
test
ljmp
incb
jg
andl
cltd
inc
gs
jmp
mov
xchg
dec
xor
scas
sarb
sub
dec
in
jbe
lret
push
aam
imul
mov
ljmp
mov
mov
xchg
pop
fstps
nop
clc
das
push
loopne
jl
pop
popa
cmp
popa
in
adc
into
push
xor
fidivs
cmp
add
rcrl
jae
xchg
mov
gs
sarl
mov
or
les
xchg
pop
enter
mov
mov
scas
cmp
repnz
icebp
test
or
pop
fdiv
inc
push
outsl
dec
dec
xor
dec
push
icebp
inc
jne
decl
add
scas
nop
xchg
ljmp
adc
and
jo
adc
mov
adc
stos
xor
xor
stos
ret
adc
shlb
clc
mov
jecxz
dec
fmuls
into
xchg
mov
js
xchg
ja
sub
mov
bound
das
inc
loope
jb
mov
stos
mov
mov
mov
or
cmp
ja
jecxz
and
ds
pop
cmpsl
in
nop
sahf
rcrb
icebp
movsl
pop
repz
lock
inc
jmp
add
lock
aam
popa
mov
lret
into
andb
and
aam
sti
scas
hlt
lret
push
mov
jp
xchg
imul
int
movsb
leave
jl
int3
or
iret
das
out
mov
in
sub
mov
lret
ret
xor
imul
out
xchg
decb
movsl
push
xor
push
dec
test
fistpl
add
pop
mov
sub
mov
inc
and
jb
inc
lock
jle
out
in
inc
sub
add
les
sahf
mov
inc
into
out
data16
fwait
arpl
mov
dec
push
lods
mov
add
xlat
xor
sub
ret
rolb
hlt
outsl
sbb
repnz
adcl
gs
test
repz
leave
out
daa
aad
push
mov
cmp
push
popf
cli
jmp
fidivs
loopne
mov
in
cs
and
imul
mov
jle
mov
in
pop
pop
movsl
inc
or
fldl
pop
stos
jg
ljmp
imull
test
mov
addr16
xchg
mov
xchg
iret
rclb
mov
int
fdivs
add
xor
in
sub
fildll
les
test
cli
xor
or
es
adc
xor
ja
clc
cmc
mov
ret
sub
cmp
std
loop
decb
sub
xchg
or
and
fnstenv
inc
inc
rcrl
inc
push
mov
gs
and
dec
jp
inc
adc
xor
idivb
add
pop
ss
xchg
xor
frstor
popf
adc
in
cld
inc
jmp
xor
cmp
loope
outsb
push
and
out
push
xor
xor
xor
in
and
push
insl
mov
ja
xor
or
lds
sub
rorb
mov
push
imul
push
add
scas
cli
ljmp
aas
jae
cmp
sbb
sahf
mov
adc
in
lcall
xor
inc
push
dec
mov
cmp
orl
rclb
mov
ljmp
imulb
maskmovq
testl
fsubp
imul
loopne
negb
pop
or
in
inc
adc
xchg
xor
call
addl
jg
push
push
add
mov
ret
test
icebp
sbb
add
add
mov
notb
jg
rorb
mov
in
ret
iret
clc
je
call
int3
movsb
push
fsub
mov
pop
sbb
xor
test
pop
scas
mov
gs
lahf
js
cmpsb
mov
aam
stc
push
mov
cmp
mov
lea
mov
adc
ret
test
fsubp
cmp
pop
xor
mov
pop
sbb
dec
int
aaa
fisubs
add
or
mov
mov
lret
dec
scas
xorl
fs
rcrl
test
push
lea
js
pop
adc
pop
mov
int3
gs
push
xor
test
cmpsb
dec
test
inc
push
fcomps
xchg
iret
add
xchg
push
mov
jns
in
lds
inc
adc
cli
pop
jecxz
mov
mov
mov
inc
movsb
adc
and
mov
data16
jbe
mov
mov
inc
adc
mov
sbb
mov
lret
fdiv
mov
cmpsl
sbb
jns
ret
inc
int3
clc
push
adc
stos
pop
out
inc
cli
and
push
iret
mov
lods
and
mov
and
movsl
cmp
pop
mov
jne
sub
shrl
mov
mov
lock
jmp
dec
push
pop
add
jbe
sub
notl
call
jae
mov
or
push
je
sub
pop
sub
in
mov
jl
aad
xor
sti
push
sbb
xchg
inc
push
mov
dec
outsl
jg
mov
aam
ljmp
psubb
jge
fwait
mov
loope
mov
fisubl
xor
push
dec
ja
inc
push
or
out
loopne
rcrb
rcrl
cmp
jecxz
inc
pop
fcomps
mov
sub
ja
xlat
jno
mov
shrb
push
clc
sbb
inc
or
cmp
mov
jl
pop
int
and
sub
lods
cmp
mov
mov
jp
lahf
mov
test
xor
jle
es
xchg
pop
repz
stos
sub
lret
in
frstor
sbb
push
icebp
pop
pusha
and
mov
xor
mov
xchg
mov
loopne
data16
mov
in
inc
dec
loopne
rolb
roll
repz
jae
xor
pop
jle
cmp
sahf
push
out
cmp
das
cltd
ret
les
jecxz
fimull
repnz
aad
fadds
or
lods
xchg
adc
push
push
cmp
fstp
int
imull
pop
stc
push
dec
aam
mov
pop
das
cmp
mov
mov
daa
fldln2
sbb
fs
into
jbe
xor
in
mov
imul
insl
xor
imul
enter
stc
bound
outsl
cmp
and
cmc
dec
getsec
out
stos
sub
cltd
push
add
pop
pop
add
push
xchg
shl
stos
rcrb
push
jbe
jnp
inc
mov
jno
out
aam
idivb
and
push
xor
lcall
int
loopne
push
repz
cmpsl
ret
jge
mov
and
and
sti
in
or
and
adc
sbb
inc
lods
inc
mov
mov
lahf
ljmp
xor
insb
dec
mov
into
and
push
ljmp
loopne
loopne
imul
iret
ljmp
aad
sbb
rcl
mov
jmp
lds
mov
arpl
jmp
or
adc
rcrb
pop
xchg
fisubrl
icebp
test
lret
mov
and
sub
sbb
lret
movb
stos
ret
imul
lahf
and
sub
idiv
add
shl
out
sahf
fmul
aas
pop
jb
pop
outsl
xchg
pop
rorl
in
pop
mov
or
push
xchg
mov
enter
xchg
cli
mov
push
ficoml
sub
shll
add
sbb
cmp
imul
insl
cwtl
push
jle
push
sub
lret
rorb
jmp
mov
dec
mov
push
fwait
mov
cmp
sub
shlb
xchg
pop
mov
jmp
dec
mov
das
mull
rcrb
dec
push
sbb
loop
pusha
sbb
xchg
cmp
cmp
xor
cmp
jp
notb
pop
sbb
add
mov
add
jg
add
or
jge
or
pop
dec
mov
and
cli
adc
mov
mov
push
outsl
mov
inc
dec
adc
inc
xchg
sbbb
add
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jle
jmp
call
cmpl
jb
movl
push
adc
movl
subl
mov
push
mov
adcl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
orl
add
andl
mov
mov
addl
test
movl
je
movl
cmpl
je
cmpl
jle
jmp
push
call
mov
dec
mov
jmp
mov
sbb
mov
addl
mov
mov
xor
xor
add
and
mov
mov
and
xor
mov
and
mov
add
sbb
mov
mov
xor
mov
or
mov
add
or
mov
orl
mov
xor
mov
xor
mov
add
mov
sub
sbbl
lea
xor
xorl
xor
movl
cmp
movl
je
xorl
mov
subl
xor
adcl
add
cmp
movl
jne
pushl
call
mov
not
mov
adcl
mov
addl
xor
add
movl
cmp
movl
je
pushl
sbbl
pushl
call
mov
xor
mov
xor
mov
xor
add
movl
cmp
movl
je
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
jmp
mov
add
sbbl
mov
mov
mov
sbbl
add
orl
mov
jmp
push
mov
andb
test
pushf
push
adc
addl
stc
inc
jno
shrl
ffreep
aam
cmp
scas
add
lods
jle
negl
movsb
pop
mov
fimull
or
xor
cmp
inc
sbb
inc
pop
in
jns
push
push
fs
or
adc
mov
ret
lds
or
sbb
push
mov
jb
lods
les
pop
mov
sub
push
fsubrs
xchg
xchg
mov
mov
or
adc
jo
out
andb
pop
adc
sti
icebp
mov
out
call
and
cmc
cmp
mov
mov
js
sub
gs
call
add
orl
dec
lcall
lods
sub
lock
xchg
mov
loope
cmp
lods
aam
push
and
andb
or
mov
jne
test
fnstenv
inc
jecxz
addb
ret
pop
roll
adc
pop
js
sbb
outsb
mov
repz
push
pop
push
cwtl
xlat
sub
mov
mov
mov
add
cs
std
fidivrs
xchg
mov
and
jg
loopne
aas
mov
pop
es
add
push
lods
sti
aam
lret
jmp
cmp
test
gs
or
mov
mov
cwtl
jo
repnz
imul
pop
mov
and
hlt
and
scas
cmc
idivl
xchg
lea
pushf
orl
imul
adc
loopne
sti
movsl
inc
push
movsb
add
ja
adc
pop
test
movsl
and
or
mov
imul
xchg
stos
cmpsl
mov
mov
dec
mov
mov
xchg
add
in
fsubrs
xchg
das
mov
ljmp
mov
js
jmp
dec
not
movsl
xchg
or
add
js
push
sar
add
sahf
pop
ja
repnz
adc
aas
jbe
adc
shr
sbb
js
loop
mov
mov
xchg
aas
inc
adc
mov
rclb
xchg
les
lret
mov
fcomip
ffreep
push
sbb
inc
xchg
pop
decl
hlt
push
nop
adc
ret
jnp
pop
js
or
xchg
fldenv
mov
nop
xchg
cli
push
test
sbb
cs
cmpl
or
cbtw
mov
adc
insl
data16
cmp
lcall
pop
xchg
bound
scas
jle
pop
jl
add
adc
xchg
add
sarl
cmc
rorb
test
pop
popf
cmp
scas
jo
mov
jecxz
insl
jno
sub
insb
std
xlat
mov
sbbl
dec
scas
push
leave
pop
inc
cmc
or
push
shl
xchg
and
rolb
movsb
xchg
icebp
adc
dec
ret
hlt
repz
lret
movsl
add
dec
pop
inc
fdivs
jmp
mov
xchg
fs
xchg
dec
jbe
fldcw
or
scas
cmp
imul
mov
push
cmp
sti
fbld
xor
mov
push
jnp
leave
inc
and
fldcw
stos
sub
lods
add
mov
in
push
push
xor
mov
pop
js
mov
data16
jl
sbb
stos
xor
in
test
inc
xor
fldt
fucomip
fsubr
fistpl
sub
shlb
jnp
inc
arpl
lock
loop
mov
dec
enter
ss
cmp
add
pop
les
mov
sbb
inc
ljmp
aam
xor
ret
pop
jg
repz
jmp
adc
hlt
cmp
cmp
push
add
inc
xor
scas
or
mov
jae
sub
mov
jg
push
xor
jecxz
sbb
fidivl
into
sbb
bound
test
rcl
fimuls
incl
fwait
sbb
mov
fadd
js
subl
dec
enter
aad
jae
outsl
fimull
xchg
mov
sbb
inc
adc
jb
push
cwtl
in
jecxz
test
movsl
or
xor
push
jo
imul
push
outsb
test
addr16
inc
xor
icebp
sbb
and
cltd
outsb
mov
sti
push
testb
mov
iret
lods
adc
stos
add
push
mov
in
cli
jo
iret
dec
sbb
sbb
mov
add
jbe
or
mov
insb
cmp
scas
scas
push
fadds
xchg
ficomps
int
mov
out
push
mov
lahf
mov
sub
repz
pop
jo
add
mov
add
sbbl
fstps
pop
pushf
lods
popf
mov
push
mov
enter
cmp
fwait
push
ljmp
jb
std
pop
mov
std
imul
push
rol
mov
xchg
xchg
stos
lret
mov
stc
mov
sub
mov
jbe
xchg
iret
dec
fimull
lret
cmp
pop
or
sti
or
das
and
push
sub
add
js
sbb
repz
mov
and
xor
stos
sbb
enter
pusha
mov
push
add
push
push
bound
mov
mov
xor
cmp
cmp
arpl
push
loope
outsl
jb
adc
outsl
pop
inc
iret
sbb
lods
aaa
clc
jb
mov
and
test
in
les
ds
pushf
jnp
fistpl
lret
jb
hlt
xor
mov
hlt
and
cmpsb
dec
dec
addr16
imul
xor
jge
pop
insb
ret
and
clc
loop
loope
sahf
call
sti
addr16
in
pushf
pop
pushf
int
lret
mov
pusha
test
xor
mov
dec
das
mov
cmp
jle
pushf
pop
aas
js
enter
mov
movsb
clc
and
daa
arpl
pop
into
cmpsb
mov
icebp
and
dec
pop
mov
jecxz
test
push
aas
xchg
xor
jmp
divb
mov
mov
scas
out
lods
idivb
imul
jne
and
xchg
pop
mov
jp
sub
mov
xchg
mov
cmp
aad
inc
imul
mov
in
pop
mov
test
sub
add
inc
mov
inc
rclb
scas
lret
testb
sbb
mov
dec
mov
in
pop
outsl
xchg
inc
out
mov
je
mov
pop
fimuls
arpl
cmp
adcl
loopne
pop
push
cli
sbb
mov
iret
adc
adc
fbstp
cs
inc
xchg
ret
stos
pop
push
loop
nop
ljmp
ret
fisubrs
cmp
cmc
xchg
cmp
xlat
add
out
mov
imul
pusha
in
clc
fstpt
add
cmp
leave
aad
pop
in
fiaddl
mov
frstor
push
and
jae
fidivrl
into
in
into
sub
setge
or
jecxz
sbb
in
and
divl
mov
hlt
inc
and
adc
into
xchg
mov
xor
cltd
xchg
mov
aam
popf
inc
add
dec
sbb
jmp
rcrb
scas
lret
jno
sbb
push
fwait
pop
sbb
push
mov
xlat
fld
cpuid
mov
pop
xor
cld
cmpsl
movhps
lret
out
hlt
xor
movsl
and
cmp
mov
pop
or
and
ljmp
xchg
push
insb
idivb
xor
sahf
leave
lods
shlb
lods
pop
cltd
lret
jae
pop
in
jmp
nop
mov
inc
adc
lahf
in
aad
pop
scas
adc
cmp
mov
and
lea
stos
push
cmc
jns
and
and
loopne
cltd
adc
loopne
cmp
xchg
or
xor
loopne
add
outsb
aam
push
lcall
dec
inc
leave
movsl
stc
test
push
mov
popf
scas
cmp
aaa
xor
sub
in
cmpsl
cmpsb
fndisi(8087
js
inc
push
lcall
outsl
pop
call
mov
dec
aad
stc
or
popa
mov
daa
mov
fiaddl
js
lcall
sar
aas
adc
clc
xchg
inc
add
notb
lret
cmp
filds
mov
aaa
push
es
cmpsl
sbb
hlt
rcll
clc
repnz
and
jg
mov
out
push
mov
shrl
dec
or
add
mov
mov
outsl
mov
rcll
cmpsb
adc
imul
pop
push
pop
js
cmc
imul
or
mov
mov
pop
sbb
cmp
lods
popf
jg
fsts
lock
adc
sbb
pop
cltd
fsts
add
pop
lds
movsb
add
dec
dec
movb
jbe
dec
in
enter
scas
lret
lret
test
test
inc
jo
or
ss
inc
xchg
dec
adc
imull
loopne
neg
cwtl
mov
adc
mov
jg
jp
js
addb
repz
mov
and
xchg
fwait
adc
or
sub
pop
je
jg
shrl
cmp
inc
inc
jnp
add
cmpsl
add
xor
in
fstl
ja
cwtl
test
jge
cmp
inc
loop
inc
lcall
adc
mov
mov
sub
cmp
out
into
lods
sarl
jmp
pop
or
fistl
mov
mov
inc
jne
pop
stc
sub
jb
lret
stc
cmpsl
fsub
or
out
int
xchg
popf
in
cmpsb
aaa
nop
cmp
sbb
cltd
movsb
popf
les
insl
xor
xchg
lds
mov
mov
adc
addb
shrl
hlt
out
adc
lods
dec
adc
xchg
cmp
sbb
test
outsb
jl
dec
lods
in
xor
pop
pop
cmp
jmp
jp
ret
call
xor
add
mov
sbb
or
dec
dec
test
sub
jo
jno
inc
and
cmp
mov
rol
xchg
aas
aad
loopne
jle
cmp
mov
loope
lock
push
cmp
lret
adc
fwait
push
fsubp
andb
adc
inc
movsl
sbb
int3
xlat
push
imul
xchg
popf
add
fimull
xchg
fldenv
mov
out
add
mov
popa
mov
jo
ret
test
jnp
push
push
inc
xor
into
push
mov
or
mov
arpl
andl
jno
mov
pop
leave
shlb
inc
icebp
mov
mov
xchg
adcl
pop
popl
sbb
cmc
out
das
les
xchg
push
adc
std
loope
push
dec
dec
rorb
pop
int
and
iret
int3
and
push
dec
dec
out
inc
imul
outsl
mov
push
mov
adc
jnp
inc
out
xor
push
ret
iret
mov
inc
ds
cltd
jle
repnz
or
addr16
pop
in
andl
scas
and
xchg
cmp
insl
imul
lret
cltd
imul
mov
xchg
sbb
sbb
mov
jmp
dec
out
sbb
iret
out
bnd
and
sub
les
lret
ret
test
xchg
imul
adc
mov
addl
mov
ljmp
mov
fs
lret
inc
push
mov
cmp
shl
xor
inc
fadd
stos
add
pop
addb
push
xchg
sahf
int
mov
cwtl
mov
fcmovb
mov
mov
xor
jne
xor
push
pop
out
inc
dec
push
mov
lds
mov
push
sbb
inc
roll
mov
stos
sub
push
or
ds
mov
mov
inc
sahf
inc
movsb
lods
mov
and
add
mov
sub
xor
mov
dec
cld
cmp
jne
js
es
adc
cmpsl
not
sarl
mov
mov
pop
lock
mov
and
lret
inc
out
adc
pop
ret
jo
mov
and
jo
xlat
sti
or
pop
test
push
test
testb
mov
rorb
popf
pop
iret
lret
fmull
test
sahf
push
sbb
shlb
insl
loop
shll
or
cmp
pop
jnp
pop
or
insl
jle
push
cmc
lods
mov
rcrl
jb
pop
inc
xchg
xchg
push
lahf
lods
add
cmc
dec
sub
mov
in
addr16
lret
cmpsb
mov
fbld
push
fisttpll
sub
push
inc
jne,pn
xor
movsl
loope
in
inc
sub
jb
subl
sti
push
mov
jge
ret
or
out
cmp
push
inc
hlt
repnz
or
je
pusha
push
dec
test
comiss
loopne
bound
addl
and
xor
fisttps
inc
insl
xchg
icebp
inc
and
ja
sub
adc
mov
mov
out
dec
sub
cmp
jns
hlt
mov
mov
sbb
sbb
add
roll
cmp
popf
nop
movsl
sbb
pop
movsb
fcmovnbe
stc
pop
shrl
cli
cmp
loope
push
enter
sub
mov
rcl
pop
mov
jne
nop
mov
or
and
shl
mov
mov
adc
cmp
insb
pop
notl
pop
int
gs
sbb
push
xlat
test
sbb
pop
cltd
imul
cmpsl
mov
fisttpll
and
cmpsl
inc
sbb
pop
inc
stc
lea
inc
lods
popf
mov
out
sub
fists
mov
xchg
lret
push
sbb
push
iret
mov
popa
xchg
xchg
insl
jb
add
fstpt
adc
or
mov
mov
add
mov
inc
sbb
jecxz
cli
sti
bound
subb
add
loop
cmp
scas
ret
loopne
popa
adc
lret
incb
addb
push
adc
inc
adcb
insl
mov
and
xor
xor
dec
jmp
gs
mov
xchg
mov
mov
jo
inc
dec
fsubr
mov
fsts
mov
lock
push
adc
lahf
adc
ficomps
adc
ss
adc
imul
cmp
sbb
pushf
jns
pushf
push
movsb
orb
mov
adc
sbbb
xchg
xchg
dec
pop
jecxz
in
mov
push
arpl
jae
push
imul
or
xlat
xor
sub
out
push
cwtl
and
stos
movsb
repnz
pop
cltd
insl
arpl
outsb
xchg
ljmp
dec
pop
jp
cmp
int
pusha
push
ja
pop
lret
sbb
push
sub
sbb
and
jle
es
fnstcw
mov
mov
xor
lds
xor
inc
mov
dec
jg
stc
dec
pop
mov
jnp
push
lret
dec
test
fnstsw
scas
mov
arpl
imull
les
cmpsl
xor
or
movsb
into
add
jmp
ret
mov
test
arpl
xor
mov
iret
xor
rcrb
inc
pop
xchg
or
cmp
ja
jmp
adc
ljmp
push
fdivr
movsb
jg
in
and
dec
sub
movl
das
pop
mov
sbb
ljmp
imul
and
push
fwait
xchg
fsubs
jo
or
and
pop
std
adc
mov
add
icebp
pop
jg
fisubrl
cmpsb
xchg
adc
pop
in
fidivrl
jns
mov
lret
lods
in
aad
mov
mov
jo
and
fisubs
insb
adc
pusha
pop
cltd
sti
push
ror
mov
imul
jno
loop
push
adc
mov
sub
aas
dec
sarb
and
movsl
mov
jp
jns
jmp
xor
fiaddl
add
lea
aam
jmp
test
and
dec
out
inc
or
adc
inc
push
imul
cwtl
sbbl
jo
jl
cmp
push
sti
cld
movsl
out
mov
shlb
aad
outsb
cmp
inc
enter
dec
insb
pop
icebp
push
scas
roll
xlat
data16
arpl
or
dec
lcall
icebp
out
loop
ficoms
ljmp
bound
in
mov
lret
pop
out
stos
mov
inc
or
leave
pop
inc
fwait
ja
mov
insl
addl
mov
fs
mov
cmc
aaa
push
popf
sbb
and
inc
pop
adc
fwait
or
pop
in
js
subl
movsb
jg
loope
inc
sbb
dec
sti
stc
je
lahf
in
inc
dec
adc
int3
inc
jae
movl
lret
not
or
pop
sbb
movsl
mov
push
ret
pop
jne
jns
sub
daa
sti
setl
xor
cmp
sub
incl
xchg
mov
push
xor
in
adc
in
andl
inc
loope
sub
idiv
adc
mov
sbb
in
mov
xchg
pop
push
cmc
xchg
inc
pop
fs
lret
push
push
pop
mov
fists
cs
or
push
lods
fwait
pop
cmc
dec
or
in
daa
stos
sub
outsb
stc
out
or
mov
subl
movsl
and
cmp
mov
sbb
mov
jno
cmp
or
in
flds
sub
xlat
aam
mov
xchg
xor
jae
dec
push
xor
adc
sbbb
pop
jl
movsb
out
imulb
cli
ret
mov
enter
sbb
daa
pop
iret
inc
mov
ss
fistps
sub
cli
clc
jb
and
mov
imul
mov
lret
or
pop
lods
add
sbb
add
movsl
test
test
mov
pusha
adc
ds
mov
mov
sbb
andb
push
cmpsl
int
out
add
popf
in
shl
mov
loopne
in
cmp
sti
jnp
fcomi
sti
les
out
fstpl
pop
pop
out
add
fiadds
ret
adc
lock
pop
adc
icebp
mov
mov
cmp
xor
pop
mov
push
loop
mov
sub
sub
add
mov
jle
inc
adc
dec
lcall
jo
repnz
mov
incl
cmpsl
mov
mov
dec
negl
lods
lea
in
and
mov
out
addl
sbb
fdivs
jnp
jmp
cmp
cmp
cmc
aam
shlb
inc
jmp
adc
out
xchg
sub
or
add
lahf
pusha
dec
inc
jns
xchg
jl
pop
adc
xchg
cwtl
int
xchg
mov
dec
push
ret
lcall
dec
pop
xchg
mov
mov
call
sahf
and
stc
jge
jae
out
notl
nop
nop
sub
aad
aaa
inc
mov
cld
sub
rcl
mov
sbb
mov
cltd
ljmp
dec
xchg
push
out
sarb
aas
ficompl
mov
push
insl
fmull
sub
xor
cmpsl
decb
adc
andb
xchg
ffreep
adc
cwtl
jp
xchg
in
fcoms
or
jae
loope
xor
jl
popf
mov
push
inc
jne
pop
adc
in
iret
in
aad
adc
fwait
jge
mov
xchg
fstpl
into
ds
sub
popl
sub
aam
dec
insl
pop
enter
sbb
and
fwait
inc
shufps
bound
cmp
sbb
cmp
ds
adc
ljmp
lods
xchg
les
adc
cmc
lcall
jg
xchg
cwtl
push
setnp
sti
mov
adc
lret
cwtl
push
and
scas
push
js
lea
in
les
inc
or
adc
outsl
sarl
or
pop
xor
jmp
call
in
mov
loop
pushf
test
les
jae
test
lahf
add
push
inc
add
mov
fs
aas
xchg
mov
fnstsw
rorb
xor
pop
mov
cmpsb
data16
and
mov
fisubrs
sbb
lods
sub
dec
push
sbb
lea
jae
ljmp
push
jb
movsb
xlat
inc
rdpmc
mov
lcall
ret
mov
sahf
cmp
add
cmp
mov
out
scas
pop
mov
loopne
iret
cmpsl
dec
nop
std
push
rcll
popa
mov
add
adc
ret
cmp
int
mov
sarb
mov
pop
inc
push
pop
mov
addr16
or
mov
xchg
ljmp
mov
add
sub
push
mov
movsl
sahf
cmp
mov
xor
cmpsl
mov
movsb
mov
popf
or
pusha
push
loope
lock
fcompl
test
mov
adc
pushf
roll
jg
dec
nop
sub
outsl
jle
test
mov
fstl
out
pop
aaa
ret
mov
mov
cmp
gs
jns
mov
jecxz
out
add
enter
and
insl
stos
sarl
enter
shll
cmpsb
shlb
jp
inc
add
push
lds
mov
outsl
imul
cli
jo
pop
out
out
and
call
loop
ret
cmp
mov
sbb
xorb
dec
cmp
push
fs
jae
fbstp
and
sbb
mulb
xor
sub
mov
addr16
jl
add
push
les
bound
push
lods
xor
je
pop
sahf
popf
fcmovbe
call
jp
add
xorl
jno
mov
frstor
in
into
xchg
loopne
insl
insb
jg
lret
push
js
push
mov
sbb
adcl
stos
push
push
loope
sbb
bound
insl
lahf
les
insb
xchg
mov
add
cmpsl
cld
out
mov
or
scas
into
cmp
scas
or
ja
xchg
int
loope
imul
inc
mov
xchg
mov
jle
mov
mov
adc
inc
daa
pop
stos
adc
jmp
mov
inc
sbb
cs
pushf
cmpsl
and
leave
and
subb
mov
das
aas
and
xlat
test
inc
mov
ficoml
sti
in
sbb
notl
sub
stc
insl
test
mov
stos
sbb
movsl
push
sub
mov
pop
in
dec
push
in
mov
jge
push
push
icebp
xor
dec
adc
loopne
xchg
push
mov
cmp
fsts
sti
ficompl
aad
xchg
pop
cmp
movsl
lret
movsb
xor
pushf
or
pop
enter
ds
mov
mov
jecxz
adc
iret
outsl
stos
scas
dec
js
inc
sub
inc
lcall
fwait
pop
out
dec
cmp
idiv
add
jmp
mov
shrl
int3
leave
cmpb
lea
into
mov
mov
pop
mov
dec
jmp
push
repnz
sub
jle
xchg
icebp
pop
xchg
jecxz
shlb
sub
mov
xor
push
int
adc
out
mov
sub
jg
mov
roll
shr
lods
cmp
or
fldt
push
push
popf
pop
fisubrs
int
inc
push
out
stc
xor
inc
dec
push
daa
jno
add
and
subl
jle
mov
mov
mov
push
in
mov
pusha
cwtl
test
enter
inc
fs
inc
hlt
push
dec
ror
subb
shrl
mov
inc
lds
mov
mov
adc
shll
sbb
jecxz
mov
sbb
jle
cmp
jge
in
fildll
jl
shll
mov
and
fsub
nop
lahf
jl
inc
in
arpl
aas
sub
jl
xchg
cmp
je
lret
push
sub
and
xchg
xchg
jae
xor
xchg
mov
enter
mov
cmp
popf
movsl
jmp
imul
mov
cmpsl
push
sbb
into
mov
iret
jp
mov
icebp
or
adc
xchg
cmp
or
push
enter
fwait
sbb
stos
fs
loop
movsl
les
push
dec
inc
rolb
adcl
int
xchg
jbe
jbe
int3
xorl
ljmp
push
push
and
mov
jnp
mov
xchg
xchg
mov
mov
jnp
sub
fsubrs
add
xor
out
mov
mov
fadd
in
lahf
stos
mov
mov
inc
pop
out
aad
xchg
lret
rcrl
xor
mov
pusha
bound
jle,pt
dec
cmp
jge
int
jno
popf
mov
adc
lods
outsl
and
jg
loop
push
jo
inc
je
pop
es
push
pop
fistpll
div
dec
sub
dec
mov
mov
jl
push
and
cltd
xchg
jae
test
inc
add
xchg
addr16
mov
dec
test
mov
cwtl
xor
fsubrl
clc
pop
and
sbb
das
push
shlb
sbb
mov
dec
shlb
or
int3
jecxz
xor
sub
subl
repz
popf
shrl
or
cmc
cmpsl
fdivrs
jnp
or
pop
dec
mov
sar
in
inc
cs
cltd
rdtsc
mov
add
adc
iret
shl
pushf
dec
je
xor
dec
fbld
mov
mov
pushf
xorl
test
movsl
sti
add
daa
or
jmp
stos
sbb
loope
cld
repz
push
rcrw
rcrl
push
out
enter
push
push
mov
in
add
xor
fs
loop
mov
adc
jg
ret
insb
and
mov
ret
rolb
mov
add
ret
push
call
pop
dec
jbe
in
pop
pop
pop
sahf
stc
sub
pop
in
mov
xor
push
loope
and
in
xchg
lock
mov
or
je
xor
xor
popa
xrelease
cwtl
push
xchg
cmp
rolb
out
mov
lcall
push
popf
in
mov
mov
push
inc
fdivrs
xor
mov
mov
push
mov
fstl
pop
pop
fadd
dec
lock
xchg
jne
push
and
dec
inc
sar
je
cmp
inc
rol
addr16
mov
stos
popf
mov
push
aaa
mov
mov
push
inc
fldt
ss
sub
and
xchg
add
fstps
mov
push
dec
into
and
call
in
adc
cli
fwait
add
iret
xorb
fnsave
pop
shrb
add
xchg
lret
fs
dec
fadds
das
xor
inc
adc
outsb
dec
fdivrl
jne
shll
jp
cli
cli
mov
adc
std
or
pop
out
mov
adc
push
mov
mov
add
dec
mov
mov
push
fmull
das
jne
mov
mov
hlt
add
dec
cmc
jbe
into
push
repnz
aas
sarb
lahf
inc
add
iret
popf
or
popa
nop
push
loopne
and
imulb
push
ficomps
add
cltd
cmp
lods
cmp
inc
test
in
cmpsb
jle
push
pop
addr16
mov
sub
daa
inc
cwtl
jge
pop
popa
pop
sub
hlt
mov
andb
cltd
out
aam
dec
insb
int
out
mov
cmpsl
dec
and
jne
xchg
mov
in
clc
je
test
xchg
iret
jae
bound
out
jae
fldenv
add
add
pop
ffree
cli
push
sbb
testb
jb
pop
cmp
xchg
push
sub
test
inc
push
sahf
shr
mov
push
mov
jbe
and
mov
lock
ja
mull
mov
ljmp
ret
cmp
movlps
cmpsl
outsb
pop
xor
xor
mov
fwait
mov
popf
popa
push
xchg
push
psubq
mov
xor
xchg
jl
xchg
jbe
sub
shlb
jo
pop
add
call
cld
orb
in
iret
sbb
inc
xorl
push
mov
stos
push
fists
testl
ffreep
add
add
dec
mov
es
and
in
and
std
inc
mov
dec
sbb
cmp
sti
mov
std
lods
adc
mov
inc
or
xor
pusha
addr16
shrl
xchg
push
ljmp
mov
scas
mov
in
fmulp
inc
out
inc
or
incb
jb
adc
xchg
popa
cmc
mov
xor
movsl
dec
xor
divb
ja
ljmp
aad
int
popf
in
pop
dec
out
je
xchg
cmp
icebp
hlt
jns
sbb
or
leave
cmp
xlat
xchg
xor
aas
adc
movsb
inc
cmp
lods
pop
dec
stos
xchg
and
aas
out
xchg
lods
inc
mov
xor
push
add
ficompl
subl
xchg
pusha
xchg
push
scas
sar
pop
jge
fs
push
cmpb
jmp
popf
mov
lcall
fisttps
push
inc
xor
nop
hlt
jge
loop
push
shlb
divl
pop
loop
sbb
test
shll
sub
stc
push
outsb
nop
imull
lret
lds
test
dec
outsb
xor
jle
scas
mov
dec
sub
jp
outsb
inc
shr
push
push
aaa
xlat
mov
xchg
outsb
mov
gs
in
sbb
daa
sub
push
sub
pop
push
rcl
in
inc
pop
aas
lcall
xor
popf
cmpl
push
arpl
test
add
lea
test
adc
outsl
mov
mov
mov
ja
cli
shrl
push
negl
push
mov
push
pushf
das
cmp
jecxz
imul
mov
call
mov
in
xchg
mov
aad
sub
push
mov
sub
ret
movsl
xor
sbb
mov
mov
pop
lods
lods
aas
push
cwtl
aas
sub
sbb
sbb
lahf
cmp
mov
lods
dec
sbb
pop
lahf
mov
ss
lds
mov
daa
mov
add
add
fists
fisubl
or
mov
fistl
push
mov
icebp
movsb
hlt
rcrb
fldt
leave
mov
out
mov
negl
sbbl
pop
mov
ret
xlat
xchg
cli
in
jmp
lock
push
mov
fidivrs
push
call
sub
js
pop
fnstsw
enter
mov
mov
or
mov
test
push
inc
inc
ja
cmpsb
xchg
cwtl
pop
jae
sub
sub
cmpsb
and
cli
inc
mov
push
ja
aas
mov
cmc
lea
int3
loop
roll
enter
clc
mov
fs
loopne
and
xchg
mov
or
in
dec
push
test
shl
js
jmp
cli
jbe
push
and
je
clc
popa
test
les
inc
xchg
div
cmc
mov
mov
mov
into
data16
jecxz
xchg
mov
sti
pop
mov
jno
js
test
add
xor
cmp
imul
mov
push
and
lahf
iret
int
mov
pusha
mov
movzwl
or
mov
add
mov
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
xor
mov
xor
jmp
add
cld
sbb
nop
andb
push
sub
addl
jo
push
push
lret
addr16
push
nop
push
mov
mov
js
pop
cmpsl
cmp
inc
out
cwtl
and
cmp
jle
insb
xor
sbb
and
mov
xchg
fs
lret
push
enter
cmp
scas
push
sbb
cltd
dec
pop
or
and
icebp
inc
lret
inc
out
rcrb
mov
cmp
leave
xchg
push
es
out
mov
int3
hlt
cltd
sbb
xchg
popf
mov
ds
pop
pusha
jne
lret
adc
jcxz
lock
adc
out
sub
out
mov
rorb
clc
lock
in
in
jmp
xor
xorb
push
mov
sub
push
mov
mov
out
int3
mov
cmp
mov
lea
dec
sub
arpl
jge
sti
sbb
inc
pusha
jb
pushf
add
adc
xor
and
dec
cmpsb
sbb
pop
shrb
test
inc
mov
ja
sub
fildl
xor
mov
subl
fldl
in
mov
scas
mov
xlat
aad
repnz
mov
jo
xlat
outsb
das
jle
add
or
pop
out
test
pushf
stos
xchg
sub
and
mov
mov
and
sub
fstps
mov
adc
and
js
ret
push
dec
addr16
movsl
leave
frstor
pop
xlat
sarb
inc
push
test
movsl
imul
jp
and
mov
cmp
or
cltd
ret
mov
xchg
out
cmpsb
mov
aam
ss
xchg
mov
inc
cld
cmpsb
orb
outsl
cmp
xor
lods
pop
xor
cld
mulb
push
dec
das
ds
mov
xor
jns
xor
xchg
push
pop
sub
cmp
aaa
stc
jg
imul
pop
imul
popl
xor
or
int
scas
dec
sbb
or
popa
je
lds
movsl
or
dec
clc
fs
push
stos
imul
ret
in
push
dec
cmp
xlat
xor
pop
mov
inc
pop
repz
test
bound
iret
imul
and
jb
jb
xlat
cmpsb
dec
mov
or
pusha
pop
add
loope
inc
jne
loope
sub
aaa
pop
mov
in
sub
js
out
insl
xchg
push
filds
xor
push
scas
dec
cld
and
adc
jle
loop
xchg
mov
pop
ret
cmp
imul
and
cli
xchg
aam
js
pushf
ja
inc
imul
stos
sti
not
scas
aam
loope
fs
add
enter
hlt
lock
enter
cmp
xchg
rol
inc
aam
and
loop
fsubs
cmpsb
adc
or
mov
sub
jmp
inc
daa
das
inc
pop
xor
dec
leave
and
add
xorb
icebp
mov
pop
jb
stc
shr
fstpl
pop
jl
daa
fdivrp
sbb
out
add
leave
or
push
shll
xchg
jns
addr16
js
mov
push
mov
scas
stos
cmp
movsl
or
mov
lods
mov
jne
popf
inc
cmc
je
scas
push
out
pusha
call
push
mov
fcomps
and
xchg
add
sbb
lock
xchg
cmp
sub
out
scas
push
mov
add
sbbl
les
jle
mov
mov
cmpl
push
ds
lods
dec
jnp
sbb
pop
pop
rcrl
add
scas
out
sub
shll
test
outsl
mov
lret
xor
dec
outsb
jbe
xor
sub
or
push
outsb
sti
push
shll
bound
push
leave
int
daa
arpl
clc
orl
mov
push
stc
imul
xchg
dec
mov
sub
call
add
xchg
int
jl
sbb
jns
cmp
push
pop
xchg
push
fisttpll
enter
sub
mov
cmpsl
sub
inc
lds
daa
popf
mov
negl
jb
shrb
stc
inc
adc
cmp
adcb
gs
or
aas
or
jecxz
pop
imul
les
cmc
ljmp
xor
inc
jl
cs
rcrb
nop
icebp
and
hlt
mov
fucom
inc
push
fwait
fwait
push
pop
adc
clc
clc
mov
lods
xor
cmp
stos
hlt
mov
cs
and
mov
xchg
rcl
or
pop
fsubp
sub
pop
sbb
jge
xchg
iret
dec
pop
cmp
nop
mov
movsl
pusha
ret
adc
fnsave
imulb
aam
insl
xor
and
aaa
sbb
inc
pop
in
fistpl
nop
fstp
or
add
decb
fidivrs
out
mov
mov
or
push
out
jbe
stc
adc
arpl
dec
or
mov
sbb
push
xchg
pop
aad
mov
and
addr16
push
or
inc
mov
push
hlt
dec
repnz
jge
xchg
das
stos
mov
mov
cmp
stos
shl
jo
jle
fadds
xchg
rclb
out
dec
mov
adc
ffree
add
insb
imul
outsl
cs
lcall
aam
cmp
xor
mov
jb
ss
movsb
xchg
aaa
loop
jp
sbb
adc
es
rcr
loopne
and
sahf
inc
cs
movl
insl
dec
dec
jbe
rcll
dec
adc
dec
push
dec
mov
test
mov
es
lahf
lahf
mov
cs
roll
shrl
ja
mov
mov
mov
cmp
mov
jp
fisubrs
or
xchg
div
xor
pop
jns
adc
sub
into
xlat
fisubrs
negb
adc
push
into
jp
dec
jns
mov
mov
mov
pop
push
mov
pop
daa
cmp
mov
bound
pop
adc
pop
and
clc
push
in
cltd
add
pop
aam
or
repz
mov
mov
and
in
out
dec
xchg
cmpsl
sbb
stc
dec
addl
mov
gs
les
or
mov
jmp
xor
or
je
xchg
xor
lods
sbb
in
inc
mov
pop
jecxz
cmpsb
ret
notl
push
mov
ljmp
xor
lret
jp
stos
repz
lock
cmp
les
sbb
cld
fidivrs
push
aam
ret
in
mov
cmpsl
xchg
pop
push
dec
je
xor
stc
or
mov
gs
dec
mov
pop
push
inc
insb
scas
add
stc
push
arpl
fildl
je
adc
hlt
dec
sub
xchg
and
mov
sbb
sbb
jnp
nop
insl
sbb
jge
dec
cmc
in
pop
mov
rdtsc
dec
inc
lods
push
dec
sti
orl
sbbl
rorl
mov
mov
push
pop
or
out
mov
shl
jo
and
inc
aas
inc
sub
pop
sbb
xchg
stos
jo
push
aad
test
fiaddl
sbb
inc
leave
lcall
test
pop
push
or
bound
push
sarl
jg
call
add
sbb
lock
xchg
das
lahf
pop
int3
ror
aad
lcall
dec
ss
adc
inc
pushf
es
mov
setp
or
sub
inc
icebp
nop
xchg
fidivs
lret
hlt
arpl
subb
xor
in
xlat
leave
cltd
les
jmp
daa
jno
mov
incb
sub
pop
out
sti
jg
dec
push
xchg
ret
xchg
or
cld
jo
into
jp
out
or
fcoml
and
cmpsl
cld
int3
lret
push
aas
and
xchg
xor
fdivs
cwtl
or
xchg
adc
xchg
imul
jge
scas
add
ficompl
dec
data16
mov
mov
jns
push
cmpsl
mov
out
repnz
cmp
xchg
sbb
outsl
sti
scas
push
mov
fwait
and
sahf
rorl
loopne
repnz
pop
and
mov
lahf
push
push
out
ret
mov
and
lock
mov
pop
xor
out
xchg
imul
shll
cmpsb
add
xor
cmp
cmpsb
iret
pop
ret
and
push
adc
fs
leave
hlt
stos
adc
inc
scas
jge
es
mov
iret
fisubrl
popfw
and
sbb
push
cmp
mov
push
fisubrl
js
movsl
jecxz
por
sbb
and
cmpsl
inc
xchg
and
arpl
ljmp
xchg
adc
decb
and
insb
nop
inc
movsb
add
pop
pushf
push
cmp
add
les
sbb
mov
pop
ret
lret
jno
gs
imul
pop
mov
or
repnz
xor
inc
data16
sbb
sub
mov
gs
push
cmp
aad
mov
call
cmp
pushw
jno
nop
in
stc
push
xor
sub
push
fs
xor
adc
or
push
lret
pusha
sub
loope
movsb
nop
mov
inc
scas
inc
pop
pop
lret
clc
mov
cwtl
in
out
aaa
cmp
add
imul
xor
in
or
lods
int3
pop
xor
push
fndisi(8087
cmpsb
mov
and
test
and
ljmp
movsl
adc
push
cmpl
dec
inc
imul
xchg
repnz
cmp
dec
cmc
push
stc
or
in
outsb
xchg
fucom
mov
adc
loop
adcb
test
ds
ret
xor
dec
add
test
out
dec
and
subl
shlb
imul
add
jge
insl
leave
outsb
pop
leave
enter
inc
ss
mov
mov
lds
lcall
jmp
clc
xchg
jnp
out
rclb
clc
leave
adc
lods
leave
sar
pop
jl
out
mov
cmp
inc
ret
enter
xchg
sarb
enter
xor
adc
or
mov
mov
or
add
cs
les
icebp
push
xchg
dec
inc
imul
push
mov
push
das
loope
je
dec
mov
loop
dec
insl
out
lods
push
xchg
cmc
sub
out
xor
cmpsl
jp
imul
jecxz
jg
xchg
dec
jge
rcll
xchg
cmp
sub
xor
mov
mov
test
sbb
inc
push
negl
mov
dec
insb
jmp
add
sub
icebp
mov
leave
or
xlat
aad
out
mov
xchg
out
js
fwait
push
leave
inc
popa
call
aaa
jo
imul
jecxz
loope
jnp
mov
lods
mov
daa
xor
dec
jbe
pusha
sahf
xorb
cmc
daa
inc
jno
jmp
mov
jge
nop
lods
lcall
leave
mov
mov
pusha
daa
stos
lcall
cwtl
out
mov
inc
adc
clc
sbb
xor
cmpsb
roll
push
hlt
shll
rclb
push
cmp
xchg
int3
adc
inc
ja
repnz
push
xor
adc
dec
cmp
lahf
mov
mov
push
shrb
jecxz
cmp
into
xchg
push
insb
xchg
andl
xchg
fidivrl
pop
pop
shll
aaa
fs
mov
pop
push
dec
mov
pop
in
add
xchg
inc
cmp
aad
daa
lret
repnz
mov
outsb
adc
adc
shlb
insb
lods
pop
inc
add
adc
or
in
test
dec
jb
dec
xor
popa
fwait
js
jae
mov
popa
sbb
fdivl
adc
frstor
or
and
xor
icebp
les
add
gs
icebp
gs
inc
push
push
jo
rcrb
jle
mov
loop
push
popf
fiadds
nop
adc
in
inc
xchg
out
cmp
xor
dec
sbb
loope
cli
scas
ret
outsl
notb
dec
mov
dec
push
mov
xor
imul
and
or
ds
and
dec
and
push
sub
add
fnsave
cltd
in
call
int
xchg
add
jl
int
fdivrs
cmp
ficoml
mov
add
lods
cmp
mov
insl
or
icebp
xor
jbe
jl
popf
insl
inc
movl
cmc
int
xor
and
loop
fnstenv
cs
push
rclb
insb
stos
fwait
arpl
cld
and
or
push
mov
push
mov
test
mov
mov
xorl
movsb
pushf
adc
movsl
sub
jnp
arpl
insb
repnz
or
test
xchg
cmp
mov
in
nop
fistps
xor
xor
xor
mov
adc
fs
or
cld
and
shlb
je
test
mov
push
iret
insb
or
faddl
repz
sub
push
mov
add
add
cltd
push
or
lds
leave
shl
cmp
jno
mov
mov
jecxz
testl
inc
xchg
xlat
idivb
inc
sbb
jle
dec
aas
bound
pop
inc
mov
pop
dec
xchg
out
lret
test
lret
cmp
mov
in
pop
and
mov
cwtl
ds
scas
mov
inc
sub
mov
hlt
inc
sub
mov
lret
cmpsb
mov
mov
cmpb
inc
cmpb
mov
imul
ss
or
lea
int
add
fstpl
xchg
dec
push
adc
popf
cs
or
xor
mov
xrelease
sub
jo
dec
sbb
or
pop
gs
ljmp
add
adc
clc
xor
sbb
or
pop
xchg
stc
jmp
lock
daa
cmpsl
outsb
test
jg
js
xor
rcr
push
mov
xor
push
pop
out
jae
xor
mov
xlat
addb
fists
in
mov
in
fwait
imull
dec
out
hlt
dec
xor
cmp
fstpl
jns
ss
adc
xchg
mov
sbbb
add
stos
aaa
sahf
inc
cmpsb
jg
jl
ss
cmp
mov
mov
rcr
imul
std
lret
mov
clc
and
adc
cmp
adc
jae
sub
cld
jg
sti
loop
sub
and
clc
pop
mov
icebp
xchg
sti
cld
test
js
popa
dec
dec
lcall
jle
and
xchg
jg
lcall
dec
push
repz
pop
xorl
jnp
out
lret
sub
mov
sub
mov
or
iret
dec
mov
inc
pop
mov
scas
leave
loope
shll
sub
sbb
andl
lods
pop
sahf
adc
arpl
cwtl
inc
inc
pop
testb
jns
push
pop
push
mov
mov
shrb
xlat
divl
add
cmp
sbb
shrl
jmp
adc
rsqrtps
imul
iret
std
fs
dec
push
sbbb
sub
mov
pop
inc
clc
mov
sub
imul
mov
push
inc
loopne
pop
jge
mov
sbb
pop
jle
js
push
adc
add
sbb
push
push
imul
or
test
mov
syscall
cmp
aam
fs
roll
std
jbe
sti
insb
loopne
add
mov
or
jno
divb
out
shr
dec
in
adc
test
push
pop
mov
fcmovnbe
cltd
cmp
mov
xchg
jp
cs
xlat
hlt
push
sbb
mov
push
fcmovnbe
aad
inc
out
adcb
xchg
enter
pop
fdivl
enter
fildll
pop
stos
dec
xchg
fnstsw
in
pop
and
call
sarl
cld
mov
icebp
mov
push
jnp
popa
mov
bound
xor
je
or
mov
scas
pushl
ss
aad
pop
xor
inc
mov
mov
adc
mov
rol
ficoms
xor
xlat
sarl
popf
or
xchg
pop
jl
add
xchg
call
leave
cmpsb
movsl
shll
sti
push
dec
pop
movsb
mov
out
clc
cmpsb
mov
xchg
mov
jo
add
push
sbb
int3
push
in
sbb
andl
ret
addb
mov
int
leave
rclb
fadds
cmpb
pushf
adc
es
mov
cmpsb
aad
mov
cmp
stos
mov
divl
into
jg
popa
adc
sub
mov
dec
pushl
xchg
dec
mov
scas
data16
pop
outsl
pop
inc
xchg
leave
push
dec
adc
fwait
cmp
jl
sti
inc
fimull
aaa
scas
inc
lahf
mov
sarl
mov
fisttpll
mov
imul
inc
aam
das
inc
dec
shll
fcomip
sub
les
jecxz
adc
add
imul
out
insb
xchg
pop
int3
mov
test
mov
push
shlb
mulb
jae
imul
ja
sub
push
sub
fisttpll
push
cmpsl
fmull
sub
cmp
cmpb
outsb
push
adc
ja
clc
push
fwait
outsb
test
pusha
adc
movsb
or
xor
sbb
enter
jne
and
mov
or
stos
js
mov
and
in
gs
cwtl
outsl
jl
or
mov
insb
add
int
es
popa
jns
or
add
or
add
in
mov
pop
jae
shll
xchg
mov
cltd
inc
orb
inc
ret
repnz
dec
xchg
cwtl
sbb
into
pop
and
sahf
jg
mov
mov
push
xor
cmp
push
cmpsl
ffree
cmpsb
adc
movsl
out
xor
std
leave
push
mov
push
neg
leave
aad
icebp
test
mov
xorl
cli
push
add
shl
adc
aad
sti
lock
adc
popf
lcall
repnz
pop
mov
and
das
std
ljmp
lds
push
pop
jns
int3
fiadds
test
mov
dec
lods
mov
or
sbbl
inc
aaa
pop
jae
sub
fisubrl
xor
rclb
jnp
fcom
lcall
jmp
dec
pop
div
int
mov
jns
xchg
lods
cmpsl
fwait
lods
int
and
add
add
jb
arpl
push
push
pop
inc
add
push
stos
pop
lock
adc
push
mov
mov
outsl
sbb
jnp
jb
cmp
in
pushl
repnz
out
pop
push
add
clc
insb
pop
jge
in
ljmp
pop
jmp
sbb
out
mulb
in
add
sbb
or
inc
push
loopne
mov
sbb
pop
push
aad
cmc
inc
cli
mov
or
push
fnsave
enter
dec
outsb
cmp
test
xchg
pop
bound
leave
ret
or
sbb
lods
jae
es
cmp
xchg
lcall
mov
push
out
fcompl
or
fildl
and
inc
jbe
pusha
dec
jo
cmp
jle
pop
jno
test
inc
arpl
push
stos
push
lret
nop
ja
cmp
pop
test
incb
pop
dec
xlat
jo
and
hlt
pop
out
lret
and
arpl
pop
cmpsl
or
jb
push
cli
mov
arpl
pop
mov
lea
mov
in
jmp
and
sar
ja
mov
in
aam
pop
xchg
sahf
daa
icebp
jecxz
sub
xchg
int
adc
mov
int3
repnz
ja
add
mov
loop
dec
outsl
mov
jb
nop
mov
cmpsb
icebp
out
jnp
js
iret
push
stc
fwait
add
repz
gs
cmp
jb
pushf
out
jb
xor
imul
mov
pushl
and
adc
addl
out
fsubrl
jbe
cwtl
out
mov
je
fwait
xchg
cltd
mov
ss
nop
pop
or
daa
adc
adc
shlb
out
jmp
xchg
push
mov
int3
and
cwtl
cmp
test
jae
and
filds
add
push
mov
mov
out
nop
test
popa
arpl
push
sub
int
pop
xor
pop
inc
inc
push
cmp
add
xor
xor
mov
mov
xor
daa
scas
push
les
in
pop
lea
cmc
pop
int3
popa
loop,pt
shlb
cmp
mov
jnp
fcomps
ljmp
sub
xchg
das
add
f2xm1
push
shrl
mov
push
insb
xor
xor
popf
sbb
cmc
rcll
cmpsb
pop
shll
scas
lahf
mov
inc
add
cmp
push
mov
ds
or
xor
sub
mov
mov
out
jmp
lods
in
movsl
and
dec
xchg
pop
fildll
jo
out
andb
jl
jnp
cmp
mov
lds
mov
mov
cmp
xor
cmpsb
adc
sub
and
cwtl
adc
cmpsb
pop
rolb
sbb
ret
and
mov
loopne
in
mov
push
lods
pop
xor
cmp
nop
enter
dec
mov
sub
and
loope
mov
jg
mov
lea
push
scas
test
fidivs
mov
adc
out
popf
dec
sbb
ret
loopne
and
push
xor
repz
lret
int
xchg
mov
xor
sub
clc
mov
sub
sbb
sarb
add
test
fpatan
hlt
stos
fxch
insb
rclb
mov
scas
movsb
adc
mov
cld
gs
outsl
test
push
sarl
sub
sbb
dec
inc
lds
lds
rol
fs
sbb
push
es
push
jmp
bound
out
xor
imul
cmp
movsb
jb
fwait
das
ret
mov
mov
arpl
test
lret
push
test
mov
shrl
lods
dec
out
or
push
xor
xchg
fnsave
mov
sti
pop
mov
xor
lcall
add
xchg
imul
mov
lret
sub
or
lahf
jmp
sbbb
fimuls
popa
scas
lods
cmp
inc
push
neg
xchg
in
inc
jle
and
sub
fistpll
hlt
adc
lds
add
outsb
lds
push
fiadds
mov
inc
loope
inc
mov
cmp
or
push
pop
cmc
mov
iret
cmp
test
dec
hlt
std
scas
xchg
bound
insl
mov
mov
jo
addr16
xchg
incl
test
aad
pop
insb
push
and
or
mov
lods
jg
xchg
mov
xchg
jecxz
pop
ret
push
notb
xchg
shr
jmp
cmc
inc
lret
insl
pop
push
pop
jg
repz
or
fmuls
xor
cmc
lcall
stos
mov
mov
lcall
xor
out
sub
sbb
icebp
enter
call
xor
add
cmc
imul
aas
or
movsb
bound
and
in
xor
xor
cmc
pop
fistl
inc
cmp
pop
cmp
repz
xchg
jo
xchg
enter
or
mov
jl
xor
jecxz
int3
ds
and
and
cmp
mov
pop
mov
mov
sbb
inc
cmp
inc
pop
sbb
pop
shl
xor
add
dec
cmp
rorb
pop
sti
mov
add
mov
aam
hlt
lods
inc
or
xor
inc
rclb
xchg
roll
shlb
rcll
or
repnz
mov
adc
iret
lds
add
and
jcxz
add
mov
ljmp
and
loop
sbb
imul
les
xchg
les
inc
sbb
add
mov
ss
pop
cs
and
sti
sub
test
test
ret
push
fwait
jl
mov
inc
jge
outsb
les
or
ja
cmp
fwait
and
or
xchg
fstpl
call
ret
cmpsl
pop
popf
push
sbb
idivb
mov
jne
test
lret
push
mov
insl
iret
ret
lods
mov
scas
dec
std
inc
xchg
pop
rcrb
mov
les
movsbl
jno
and
insb
pop
jecxz
add
or
or
add
mov
daa
add
pop
icebp
jnp
xchg
pop
dec
es
in
and
xor
mul
inc
mov
mov
repnz
loopne
xor
xor
repnz
clc
orl
ljmp
mov
out
mov
test
jmp
ffreep
or
movsl
lods
iret
int3
sahf
jge
xchg
push
push
cmp
or
loopne
inc
in
xor
enter
mov
fmuls
add
inc
xlat
mov
cwtl
arpl
outsb
jmp
or
push
xchg
out
pop
or
aad
xor
or
push
iret
mov
sbb
cltd
mov
cmp
cmc
xor
das
adc
pop
inc
and
cmp
idivb
test
sub
cmp
pop
loop
adc
je
les
sub
mov
sub
je
sub
inc
pop
jl
mov
mov
jne
cmp
xor
movsl
or
mov
sbbb
aas
lock
push
incl
cli
test
lret
sbb
rcrb
and
dec
or
pop
dec
test
dec
ljmp
xor
shll
sub
adcb
ja
ljmp
leave
push
js
sahf
cmp
mov
or
je
xchg
sbb
xchg
in
adc
xchg
adc
ds
lahf
xor
cmpsb
sti
cli
lods
inc
dec
adc
adc
sub
xchg
dec
test
mov
xchg
mov
andb
rcrl
out
inc
pop
xchg
xchg
leave
adc
jge
test
sbb
shrb
dec
fiadds
repz
ss
dec
xchg
sarl
jmp
addb
jns
daa
mov
inc
popf
leave
imul
sbb
je
ds
mov
sbb
adc
push
imul
lds
out
fwait
pushf
scas
mov
push
mov
test
popf
inc
jae
mov
sub
inc
shrl
pop
mov
jns
mov
mov
dec
push
cld
pop
movsb
push
xor
test
in
repz
es
fmull
jb
gs
push
add
sub
lds
mov
mov
les
sahf
out
or
jp
divb
call
mov
xor
ss
xchg
inc
pop
xchg
js
incl
xchg
dec
addr16
in
sbb
sbb
or
sbb
sub
sahf
lea
mov
outsl
in
fstp
jge
cmpsb
rclb
fisubrl
inc
xchg
ret
fwait
outsl
add
jbe
out
cmp
ror
fistps
fidivrs
aam
push
mov
and
mov
xor
inc
stc
icebp
cmp
test
call
mov
lods
or
or
sbb
xchg
insl
adc
push
psrlw
call
mov
pop
jp
movsb
int
dec
add
add
dec
in
imul
pop
mov
adc
mov
mov
in
inc
imul
dec
push
pop
lea
sbb
mov
test
leave
cli
push
mov
incb
add
and
icebp
lret
cmp
gs
cli
or
adc
out
in
mov
ss
dec
push
inc
icebp
mov
push
pop
pop
cmc
movsb
push
data16
cmp
imul
push
push
sbb
pop
out
push
sarl
jb
lret
loopne
adc
push
cld
shl
fcmovbe
mov
mov
popf
daa
mov
or
jnp
push
push
fstl
sub
imul
jp
int
aam
sub
aam
sbb
addr16
test
mov
fnsave
js
mov
sarb
shrb
mov
cmpl
push
add
cmpsl
dec
mov
ret
mov
les
out
stos
stos
pop
push
pop
jae
lods
xor
cmp
lods
jae
xor
cli
mov
or
xchg
sti
test
adc
dec
cmpsl
fidivs
ret
add
dec
add
pop
sbb
out
dec
inc
inc
scas
gs
jnp
in
and
xor
divb
xor
push
cmp
movsl
loop
sbb
xorps
sahf
iret
cmpsl
int
xor
mov
gs
jecxz
aaa
jo
in
mov
adc
or
pop
mov
lods
or
ljmp
xor
inc
inc
pop
aam
lahf
add
xchg
cld
cltd
add
sub
shrl
notb
subl
push
in
inc
mov
popa
jo
fnsave
dec
sub
ja
dec
push
ja
dec
call
into
xchg
sub
or
sbb
js
inc
shll
sub
sbb
mov
and
out
jne
mov
adc
pop
mov
clc
loopne
into
sub
sbb
insb
loopne
or
and
negl
jae
xor
dec
sub
xchg
stos
pop
inc
mov
call
imulb
jg
popf
das
jmp
outsb
ret
lock
or
adc
loopne
test
sbb
sbb
mov
sbb
insb
clc
push
jl
xchg
mov
mov
mov
ljmp
fidivrs
test
fisttps
iret
lcall
repnz
add
addr16
repz
test
leave
mov
stos
scas
pop
nop
dec
cmpsb
test
lcall
mov
insb
sbb
or
mov
mov
inc
push
dec
je
sub
push
mov
aas
sbbb
loop
and
sbb
mov
mov
in
pop
movsb
sub
xor
lret
aaa
popf
push
or
jno
mov
shrl
jb
cld
dec
je
mov
jno
sarl
push
jne
or
mov
push
jp
pushf
pop
movsb
sub
les
not
into
push
dec
out
push
pop
mov
mov
xor
insb
xchg
in
arpl
pop
roll
sub
xor
pushf
cmc
pop
rcr
mov
mov
leave
push
aam
cmpsb
aam
mov
pushf
sub
push
mov
push
rorl
add
ret
xchg
xchg
and
inc
mov
push
xchg
mov
cmp
hlt
pop
scas
repnz
mov
int
in
mov
pop
sbb
sahf
ret
fdiv
mov
lock
pop
call
push
pop
cmp
mov
lock
or
cmp
mov
repz
cwtl
bound
sub
mov
fstpt
mov
loope
sbb
cmp
and
add
stos
leave
ljmp
inc
comiss
and
mov
jnp
mov
call
push
xchg
cmp
and
ret
outsl
push
mov
fstl
shrb
dec
or
jle
sbbb
rcl
push
cmp
cmpsl
fprem
insb
icebp
push
mov
ja
push
stos
lods
js
mov
bound
and
insl
sub
adc
cltd
int
testb
popa
std
push
sbb
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
jmp
add
mov
hlt
aas
push
loopne
not
xchg
rolb
orl
pop
ja
xchg
mov
dec
fnstcw
jbe
cs
stos
cmpsl
fcompl
cmc
test
rorl
loop
int
lea
iret
loop
adc
cmpsb
mov
test
jnp
jp
dec
sub
mov
push
jle
xor
sub
sub
push
or
sahf
and
fcmovnbe
jmp
xchg
lret
push
in
jne
pop
adcb
stos
cmp
fidivl
sbb
out
lcall
jmp
loope
dec
sub
lods
jle
or
pop
out
ret
xchg
pop
dec
sub
cmp
pop
cmp
cmp
fdivl
popf
sub
stc
or
adc
call
dec
mov
mov
fnstsw
cmp
sbbb
or
cltd
inc
decb
jp
out
push
bound
loopne
aam
xchg
lods
insl
sbb
rol
push
ficomps
xchg
jbe
add
sbb
in
xchg
dec
add
in
pushf
cltd
and
add
out
dec
add
adc
push
nop
cmp
xor
cmp
jecxz
xchg
icebp
sahf
inc
orb
sub
ret
cmp
out
pop
sub
dec
cmpsb
ds
out
mov
or
inc
movsl
repz
mov
xchg
stos
sub
pop
pop
mov
cmc
pop
out
scas
andnps
lods
imul
divb
inc
enter
push
in
lods
mov
ret
xchg
xchg
push
leave
out
cmpsb
jg
lock
mov
cwtl
xlat
test
pop
fiaddl
jne
outsl
dec
or
imul
jbe
inc
jno
adc
cmp
inc
inc
fidivrl
or
test
aas
adc
leave
or
sbb
push
lods
or
ds
mov
jp
fwait
xchg
push
sub
mov
push
mov
jbe
sub
jge
lds
or
push
mov
ret
insl
push
cmp
clc
adc
jbe
mov
add
outsl
adc
imul
fmulp
dec
mov
jp
add
push
std
loop
cmc
test
in
push
sbb
or
lods
leave
add
jg
cli
shlb
push
pop
sbb
mov
pop
jo
push
jbe
mov
iret
outsl
and
rclb
inc
bnd
cmc
dec
add
hlt
cmc
xchg
push
popa
xor
jge
movsb
mov
xorl
call
subb
dec
mov
pop
scas
push
inc
xor
popf
leave
movsb
clc
mov
mov
into
loopne
inc
int3
mov
cmpsl
mov
add
ret
push
add
mov
orb
or
jg
imul
je
repnz
mov
shll
les
jg
test
sub
imul
and
fisttps
imul
insl
scas
adc
shrl
sti
aaa
loop
jae
or
in
sti
xchg
sbb
jmp
js
out
gs
aam
cmpsl
pop
in
fcmovb
notl
aam
mov
xor
pop
lahf
rol
mov
inc
mov
or
mov
adc
popa
imul
mov
cmp
mov
pop
jbe
lahf
test
inc
shll
push
std
add
mov
in
lock
cmp
push
orb
inc
push
arpl
arpl
xor
ljmp
push
outsb
cmp
subb
test
cmp
aas
hlt
movsb
cld
pop
shll
add
sub
jecxz
outsl
xorb
dec
jle
loope
in
jl
outsl
and
lcall
mov
out
jns
data16
and
push
jp
jo
dec
jns
leave
lods
pop
leave
adc
jmp
stc
js
aad
cmp
inc
outsl
aam
dec
inc
mov
xor
ljmp
push
movsb
int3
xchg
dec
jo
add
lock
ret
scas
push
adc
and
jge
daa
ja
out
push
pop
sbb
or
jbe
inc
fmul
repz
xor
insb
adc
fisubs
xor
lods
push
sub
icebp
jg
inc
xchg
cld
add
push
lds
add
gs
lret
in
lcall
cs
das
lret
sbb
pop
lea
std
test
insl
xor
in
pop
repnz
mov
mov
movsl
pusha
stc
add
push
rcrl
aam
jl
and
push
push
jb
sub
popa
mov
mov
addr16
push
sbb
out
mov
cmc
cltd
out
inc
insl
addr16
cmpsl
fildll
fldt
cmp
aaa
mov
popa
test
mov
mov
push
or
loope
insl
lock
jg
push
loopne
sbb
jl
dec
inc
pop
scas
sti
jge
mov
clc
test
jbe
mov
loope
and
iret
dec
push
pop
out
js
add
enter
inc
pop
add
rorb
mov
std
add
fsubrl
shll
or
mov
push
out
xchg
sub
mov
addl
xchg
test
in
and
pop
dec
adc
mov
and
gs
cmp
into
jmp
jne
jmp
out
inc
enter
sub
ja
xor
xor
repnz
fcmovne
repz
shr
inc
je
icebp
pop
jge
stc
mov
inc
shrl
cmp
fdivrl
sub
mov
adc
ror
xchg
clc
js
pop
call
test
and
xchg
mov
jge
push
xchg
or
cmc
ds
xchg
ret
pop
xor
dec
clc
inc
popa
lret
scas
fimuls
and
mov
fsubrl
mov
test
xorb
mov
jmp
cltd
imul
jge
loopne
inc
sbbl
fstl
lods
outsb
aad
push
push
cmp
in
das
fdivrl
sub
hlt
jb
or
cmp
push
sbb
add
dec
adc
outsl
cmp
mov
pop
jp
adc
xor
in
jae
mov
xor
pop
mov
fiaddl
ss
jle
mov
push
push
inc
movsl
xchg
icebp
into
push
xor
sub
repz
or
mov
jbe
and
adc
jb
xchg
pop
iret
ss
and
jnp
pop
and
or
hlt
jb
lcall
mov
test
mov
insl
push
add
ret
or
jecxz
xchg
outsb
cmp
stos
fwait
mov
and
jnp
hlt
mov
gs
mov
daa
cwtl
xchg
mov
loop
inc
test
dec
es
stc
pop
mov
xor
loope
mov
mov
jnp
xchg
jl
in
pop
xor
jecxz
das
pop
push
xor
sbb
imul
dec
mov
push
mov
mov
icebp
aam
jbe
test
stos
aad
jle
jmp
adc
jo
sub
sub
ret
pop
dec
xor
std
dec
incb
rcrb
mov
pop
pushf
fs
or
lret
or
sahf
out
out
push
mov
loopne
xor
cwtl
pop
pop
add
imul
lea
out
pop
and
dec
iret
push
pop
pop
dec
scas
rorl
mov
xor
sbb
or
push
or
int3
lahf
pop
or
leave
cmp
jne
mov
flds
xor
dec
sbb
xor
sbb
push
mov
loop
fcoms
xor
dec
mov
push
fstp
mov
cltd
inc
scas
add
sub
aam
out
aaa
xchg
and
adc
addr16
add
adc
lcall
stos
inc
jl
fmuls
bound
jnp
bound
out
js
dec
mov
add
fwait
aaa
data16
insb
mov
fsubrs
inc
sbb
andl
jns
sbb
leave
repnz
and
push
fidivl
push
shll
in
repnz
shll
into
inc
loop
push
or
mov
shrb
stos
push
pop
lods
adc
inc
shl
in
imul
add
test
add
cmp
jmp
repnz
mov
jae
fiaddl
cmp
inc
xor
add
fistpll
gs
sbb
jo
add
xchg
jl
sub
repz
insb
lret
sbb
inc
sub
xlat
imul
and
subb
mov
push
leave
mov
cmp
cli
sahf
je
mov
mov
pop
cmc
xlat
push
inc
mul
pop
outsl
inc
mov
push
lock
mov
cld
sbb
ret
sub
sahf
sub
pop
push
mov
or
mov
pop
out
sahf
cld
inc
mov
cs
cmpb
jge
mov
repz
cmpsb
aaa
inc
push
outsb
sub
mov
testl
cwtl
outsb
out
mov
scas
std
stc
lds
shl
cmp
iret
xor
sbb
push
test
xchg
and
pusha
sti
push
sbbl
xor
das
pusha
mov
mov
adc
mov
adc
ljmp
dec
lcall
pushf
inc
xor
sbb
jbe
jg
xlat
xchg
outsl
dec
adc
xchg
aad
daa
add
icebp
mov
inc
xlat
mov
sbb
sti
inc
mov
push
fidivl
sti
add
mov
push
adc
push
cmp
out
outsl
outsl
xchg
cmc
mov
insl
xchg
xchg
dec
insl
stos
orl
sub
cmc
insb
dec
xor
jmp
outsl
sbb
jb
mov
xorl
jmp
fcomi
pop
mov
or
push
pop
jl
fldl
mov
jne
adcl
jp
cmpsl
pop
fidivrs
push
dec
inc
bound
pop
decb
jno
add
xchg
je
data16
adc
gs
mov
lods
adc
and
push
jge
mov
stos
fs
js
push
add
leave
or
lods
stos
push
decl
sbb
lods
mov
xor
push
mov
addr16
scas
mov
jmp
cmp
pushf
or
icebp
mov
sbb
mov
daa
mov
xchg
aam
sbb
mov
pop
stos
sahf
orb
jne
dec
xor
xor
ljmp
cli
sbb
xchg
fmuls
sbb
adcb
and
ds
mov
fs
jmp
stos
mov
push
xlat
mov
pop
into
cwtl
pop
cwtl
cmp
mov
pop
sbb
mov
dec
in
xchg
dec
pop
and
imull
cli
push
or
adc
ljmp
pop
inc
call
mov
xchg
mov
dec
out
in
mov
dec
sti
mov
cltd
and
call
push
mov
xchg
shrd
mov
sahf
gs
jle
je
sub
add
add
sahf
adc
stos
pop
pop
sub
sbb
sub
mov
jns
repz
sbb
push
test
sub
jecxz
repz
insl
sbbb
or
jle
sub
cmp
call
leave
les
nop
fwait
ss
pushf
aas
or
cmp
and
fsub
iret
pop
icebp
xchg
in
scas
cld
jle
roll
cli
sarl
or
mov
lods
ret
push
jl
push
adc
pusha
adc
cmpb
cltd
pop
repnz
sub
xchg
and
aas
xchg
ljmp
test
jo
shlb
daa
xor
pop
mov
sub
push
test
les
mov
lea
pop
pop
push
dec
stos
aaa
rol
and
cmpsl
dec
test
ret
pop
and
cmp
movsl
pop
test
adc
and
add
lret
or
scas
mov
lcall
cmpsl
mov
out
mov
das
outsb
lret
mov
mov
sbb
or
jg
cld
mov
push
fstpl
es
dec
sbb
ret
or
cmc
add
pop
lret
sbb
fists
sbb
fsubrl
std
jl
stos
xchg
xor
ss
jl,pn
daa
loop
loope
cmp
js
pop
sbb
test
data16
inc
insl
pop
repnz
shlb
push
dec
mov
pop
vmwrite
dec
push
pop
pusha
bnd
sbb
pop
xchg
loop
popa
int3
ljmp
dec
inc
and
inc
mov
add
and
ja
and
inc
test
popa
in
push
insl
repnz
adc
or
in
lds
add
push
rolb
div
dec
jns
ljmp
xor
mul
mov
js
xchg
dec
mov
inc
adc
add
jns
xchg
into
dec
mov
or
movsl
mov
int3
hlt
sub
test
fidivs
dec
lcall
inc
pop
and
pop
lods
sbb
lret
ja
mov
test
es
out
xchg
rcrl
jmp
mov
inc
mov
xchg
jne
cs
and
repz
mov
pop
insl
fcoms
mov
and
cs
add
mov
mov
aas
add
repnz
je
in
les
stos
xchg
cmpsl
out
inc
adcb
or
repz
push
mov
nop
push
loopne
or
lods
cmp
jl
loopne
mov
cmp
mov
stos
int
push
fstps
xchg
sub
popl
or
flds
stos
lock
mov
inc
cmpb
cwtl
fldt
adc
pop
push
cmc
lock
dec
daa
test
mov
popa
mov
and
movsb
out
ret
jg
lcall
call
scas
mov
and
icebp
stc
out
lahf
pop
loope
bswap
nop
insl
push
js
hlt
and
sarl
daa
mov
adc
leave
xchg
xor
ret
aaa
fisttpl
lea
inc
bound
cmp
sbbb
add
adc
mov
imul
mov
ds
lret
pop
mov
or
scas
or
jmp
ljmp
add
dec
in
fadds
outsl
jmp
rcrl
test
mov
pushf
mov
pop
pop
and
add
sti
int3
ljmp
popf
je
dec
mov
jns
xchg
sahf
dec
push
ret
mov
pop
xor
push
movb
jl
cmp
xchg
or
xchg
shr
lock
push
fiaddl
or
mov
jb
imul
mov
scas
das
aam
js
dec
imul
jo
lret
sub
add
xor
push
pop
push
test
jae
sbb
rcll
mov
in
sbb
sbb
movb
inc
push
jno
mov
outsl
mov
mov
sbb
outsl
rclb
lods
cld
out
and
mov
xchg
sub
jmp
xlat
cmpsl
adc
or
mov
push
fwait
jmp
mov
mov
pop
xchg
mov
jmp
jecxz
mov
inc
call
prefetch
cmpsl
adcl
or
xchg
aaa
xor
dec
int3
pop
mov
add
dec
loopne
xchg
mov
addr16
push
and
xchg
lock
fs
cli
fmuls
or
push
unpckhps
push
push
sub
fsubrp
jg
mov
mov
xor
xor
inc
mov
sbb
inc
xchg
mov
sbb
ljmp
scas
stos
nop
mov
repnz
jmp
lods
daa
iret
mov
push
mov
fbld
out
cmp
scas
and
sub
aas
mov
pop
push
inc
je
movsl
outsb
loope
mov
xchg
repnz
xlat
cmc
pop
jmp
mov
or
stc
enter
dec
mov
scas
sub
mov
xor
mov
sbb
jl
cmpsl
mov
sbb
mov
imul
leave
mov
dec
insl
out
cmp
imul
or
adc
out
ja
jae
js
and
std
aaa
sub
inc
inc
and
push
lret
sti
mov
mov
adc
int
mov
fildl
mov
popf
pop
jp
imul
test
add
add
sbbb
jns
mov
scas
insl
mov
les
jns
pop
sub
iret
adc
sti
sub
insl
enter
js
decb
cmpsl
mov
jmp
xchg
nop
dec
loope
pop
pop
mov
adc
sti
xchg
loope
mov
rep
push
dec
out
sub
enter
mov
test
sub
push
sub
dec
scas
pop
mov
sbb
pop
arpl
mov
cmp
push
or
mov
lods
loop
fdivp
test
outsl
adc
outsb
xchg
sbb
inc
jne
or
sbb
lret
cmp
mov
inc
pop
outsl
sbbl
and
pop
add
mov
shrl
and
mov
pop
jno
je
jnp
leave
cli
cwtl
add
int3
jge
inc
cmpsb
jge
into
mov
sbb
clc
or
push
dec
add
in
movsl
mov
mov
fisubl
int3
mov
inc
clc
dec
in
decb
adc
or
pop
in
xor
repnz
cmc
or
sub
fwait
xchg
mov
and
icebp
lds
les
test
jb
insb
aaa
movsl
cmp
sub
mov
and
popf
push
sbb
push
inc
incb
xor
clc
xchg
in
or
sbb
push
or
sub
add
jp
mov
lock
fs
cmp
xchg
jl
ret
arpl
dec
or
ja
mov
or
jb
xchg
inc
add
pop
addl
addr16
jno
outsl
push
lret
push
test
popa
popf
cmpsl
cmpb
pushl
mov
mov
push
xchg
movsl
xor
in
add
std
or
enter
inc
mov
pop
aad
enter
lods
xor
mov
in
pop
lret
daa
xor
jmp
fnstenv
lcall
test
adc
imul
push
push
incb
leave
sti
push
leavew
sub
gs
mov
push
inc
rorb
int3
fbstp
cmp
dec
xor
insl
clc
push
mov
das
push
sar
dec
imul
pushf
ds
cmp
adc
dec
fldenv
xlat
or
jecxz
stc
jb
jns
dec
das
push
mov
es
movsl
and
sub
rorb
pushf
xchg
sbb
pop
xor
pop
or
roll
test
jecxz
jle
fucomp
shlb
lret
lret
pxor
cmp
sub
adc
aam
push
pusha
or
stc
mov
pushf
bnd
repnz
mov
lods
sbb
pop
pop
sub
add
xchg
sub
dec
or
rolb
pop
and
mov
mov
mov
or
int
int
push
orl
lods
xchg
jecxz
inc
loop
pop
inc
sbb
inc
loop
jno
mov
fwait
xchg
adc
mov
cmp
mov
hlt
sahf
in
lods
movsb
inc
iret
in
pop
mov
mov
xchg
mov
cltd
jle
add
jle
in
test
dec
mov
pop
test
cmpsb
sar
pop
push
inc
es
inc
mov
jge
mov
andb
stc
loop
lods
mov
fcomi
loope
sbb
cmp
inc
mov
mov
pop
mov
loopne
jbe
ja
jbe
jmp
in
xor
outsb
add
inc
rorb
mov
ja
jp
les
mov
aad
xor
cmp
rcrb
lcall
mov
push
pushf
mov
add
sub
jge
or
dec
not
pushf
inc
jae
addl
aas
call
leave
xor
mov
push
ret
xor
repnz
paddw
mov
pop
bound
ss
xchg
mov
and
fstl
push
xchg
es
jo
sbb
loopne
jmp
test
hlt
xchg
outsb
pcmpgtd
subb
sbb
push
dec
pushf
sti
xchg
inc
adc
push
fs
inc
xor
aam
fbstp
lret
mov
jg
xor
scas
adc
adc
jo
pop
test
xor
jp
xchg
int
adcl
pop
fnstenv
movsl
add
mov
or
push
dec
push
dec
add
cld
dec
push
mov
dec
push
lods
jmp
inc
mov
jmp
cmpsb
push
mov
or
mov
sub
popf
movsb
insl
mov
cmp
lods
push
aam
fnstsw
fidivrs
xlat
ljmp
in
sti
push
out
sbb
mov
cwtl
fucomi
nop
test
add
cmp
sub
ret
pop
stos
int3
jno
push
xlat
iret
add
xor
jge
cmc
jg
mov
sub
mul
mov
adc
or
sub
aas
xchg
popa
aad
add
repz
insb
stos
sub
outsl
les
cmpsb
and
arpl
iret
popf
cld
xchg
xchg
vmovntdq
mov
jbe
jae
repnz
cmpsb
aam
mov
inc
lods
ja
imul
mov
xchg
push
jle
addl
xorl
lret
mov
pushf
pop
outsl
and
cmp
inc
inc
popf
cmp
cli
mov
push
sbb
mov
xlat
stos
pop
jl
outsl
bnd
lret
adc
dec
cld
xchg
dec
inc
xchg
and
outsb
clc
push
int3
sub
out
push
jp
clc
nop
std
out
adc
loopne
mov
lret
lea
push
or
cmp
rcr
movsb
push
loop
cmp
sub
loopne
or
pop
adc
pop
js
or
call
jnp
push
jno
pop
int
inc
enter
adc
mov
xor
push
cmpsb
lahf
leave
mov
cld
and
enter
fnclex
and
xor
sahf
test
dec
loop
mull
mov
sti
fimuls
cmp
outsb
js
clc
inc
sbb
pusha
dec
and
xor
mov
idiv
insb
cwtl
cwtl
sub
dec
jb
lods
jg
push
lods
mov
pop
movsl
outsl
hlt
pop
adc
dec
cltd
cmp
push
push
loopne
movsb
adc
lea
rolb
repnz
in
out
insb
in
inc
cmpsl
mov
adc
rcll
popf
or
mov
cmpsl
rcrl
int3
mov
sbb
rolb
jecxz
and
imul
jl
xor
or
or
and
xchg
mov
xor
fs
cmp
pusha
xchg
cli
mov
clc
inc
popa
inc
mov
push
test
xchg
and
sar
movsb
roll
xchg
xchg
mov
test
shl
xchg
push
jecxz
xchg
mov
dec
icebp
ja
sub
test
cmp
xor
xchg
cmp
fidivl
loop
add
push
or
mov
sahf
cmp
dec
sub
rol
fstpl
add
lods
jb
icebp
sub
data16
add
test
int
push
adc
pop
add
xor
push
add
push
cs
lret
and
jp
out
dec
dec
lret
jo
ljmp
sub
pop
jns
lock
xchg
roll
in
inc
aaa
mov
repnz
sub
cltd
pop
inc
pushf
stos
mov
outsb
mov
cmpsb
xchg
test
add
ds
stos
shrl
mov
jmp
cli
ss
jo
insb
xchg
jne
add
jns
push
ljmp
cmp
stos
lods
xor
data16
in
enter
or
mov
js
in
sbb
popa
in
negl
sub
sahf
cltd
cmp
jle
push
jno
fwait
adc
pop
loopne
in
push
push
sub
inc
std
adc
jbe
xchg
push
cmp
call
sub
jmp
addr16
pusha
jnp
mov
aas
xchg
adc
fndisi(8087
jecxz
aad
sarb
frstpm(287
push
cs
mov
outsl
pop
sub
inc
imulb
iret
dec
ss
fidivrs
xchg
pop
push
jl
imul
call
outsl
mov
aas
push
stos
and
mov
mov
in
mov
shlb
daa
aas
out
xchg
push
into
ret
sub
mov
leave
xchg
aaa
fwait
inc
rol
idivl
dec
stos
jle
imull
jge
incb
pop
movsb
stos
scas
jb
mov
sub
inc
cli
mov
xchg
pop
std
and
mov
fldenv
ss
ss
in
jg
xchg
int
daa
fs
or
aad
lea
ja
or
das
xchg
das
mov
cmp
dec
scas
neg
out
pop
je
clc
pop
jmp
mov
xor
imul
lea
out
adc
jno
fcmove
hlt
out
adc
pop
fwait
and
sarl
mov
xor
cmp
add
lcall
fs
cmp
shl
notl
lds
fcoml
mov
push
mov
fiadds
mov
in
add
and
shrb
mov
test
mov
outsb
lea
xor
loope
add
sub
mov
flds
jb
add
fs
adcb
mov
and
mov
xor
mov
in
call
popa
jmp
or
adc
aam
dec
dec
jg
int
rcll
push
lds
jp
test
ret
dec
in
out
xchg
mov
push
dec
nop
or
ds
shlb
movzwl
fldenv
or
or
cmpl
cmp
test
dec
shll
ljmp
aaa
dec
sub
dec
sbb
shrb
push
movsb
pop
repz
jl
sbb
mov
fildl
in
shlb
aam
pop
aaa
arpl
pop
ss
push
repz
scas
bound
pop
dec
loope
insb
in
fists
enter
clc
aas
push
and
das
in
outsl
pop
movnti
xchg
repnz
arpl
inc
pop
scas
gs
cs
insl
inc
mov
adc
sbb
cmpsl
mov
in
mov
ret
js
push
ljmp
xchg
or
fbld
mov
pop
bound
ss
or
mov
push
mov
mov
xor
mov
aaa
jp
pextrw
mov
xor
mov
cltd
xchg
movsb
add
mov
fstpt
or
sbb
pop
pushl
sahf
and
xchg
stos
ret
cmp
or
lcall
addr16
adc
out
rorl
leave
or
xchg
mov
adc
or
pop
and
push
ret
movsb
sub
in
aad
ficoms
xchg
out
lcall
loop
sub
into
ss
mov
add
fldln2
sub
pop
lret
es
es
shl
pop
fildll
pop
iret
fdivl
loopne
movb
cli
mov
stos
stos
lods
mov
mov
push
jmp
dec
out
andb
std
bound
addl
adc
ds
in
xchg
addr16
cli
js
out
mov
xor
jns
fcomip
std
repz
lods
push
push
push
xor
jl
push
dec
sbb
xchg
or
mov
mov
push
xor
pushf
push
andl
inc
movsb
push
mov
xchg
pop
aam
sub
enter
push
int
mov
sub
inc
scas
pop
inc
mov
jge
das
lahf
mov
xor
lock
mov
add
sbb
xchg
inc
mov
dec
and
sbb
cmp
das
outsl
inc
mov
inc
bound
fsubrs
pop
or
test
in
jecxz
mov
in
movsl
popf
hlt
mov
adc
das
or
push
mov
imul
adc
rcrb
in
mov
push
enter
fadds
xchg
hlt
jbe
ss
xor
imull
dec
adc
inc
arpl
push
test
lods
mov
mov
mov
push
lods
cmp
xchg
jmp
mov
sahf
add
mov
lahf
mov
test
and
aas
out
mov
rcll
insl
imul
sahf
inc
scas
in
and
xor
loopne
xor
sub
icebp
cmp
lea
imul
adc
call
dec
stos
popf
repnz
xor
dec
and
sbb
push
mov
push
imul
add
mov
push
sub
cmpsb
clc
xor
icebp
sbb
stc
push
jns
adc
push
loopne
xor
pop
pop
dec
subb
sbb
sub
add
mov
ja
mov
jl
jbe
jne
rorb
pop
dec
xor
pop
cmp
and
clc
jmp
popa
sbb
or
cmp
cmp
xchg
mov
stos
add
fstpt
sub
sbb
insb
fidivl
xchg
and
xchg
cs
jno
popa
ds
mov
lods
outsl
mov
sbb
pop
sbb
inc
push
test
mov
repnz
fsts
test
cmpsl
pop
jle
stos
jb
insl
loop
cmp
or
je
ret
adc
aad
mov
icebp
loopne
in
loope
jo
mov
xchg
jbe
js
push
loop
xchg
stc
enter
add
mov
inc
mov
test
mov
or
mov
mov
les
outsb
rcll
call
js
inc
xor
jmp
stc
or
or
hlt
enter
dec
pusha
mov
pop
nop
movsl
pop
arpl
arpl
adc
repnz
push
fcmovnb
push
gs
aas
push
cli
push
mov
pop
inc
ss
sub
test
lret
out
sbb
xor
jbe
pop
js
popa
or
jmp
push
cmpsl
shr
pop
mov
pop
jno
mov
mov
jg
mov
cmp
and
sahf
dec
in
dec
rcrb
es
test
inc
xchg
aas
jbe
cmp
daa
shrl
icebp
push
and
sbb
or
insb
xchg
scas
in
fwait
sub
cli
pop
xchg
andl
jp
adcb
out
xor
clc
inc
orl
push
stos
andb
insb
neg
pushl
and
cmp
sub
dec
ret
mov
add
int
loopne
pop
xor
xlat
iret
mov
lcall
cmp
mov
stos
and
imul
jg
sub
cmp
cli
or
out
shlb
les
in
int3
push
sub
pop
fldcw
cmp
ja
pop
push
cli
mov
in
out
inc
add
icebp
int
insl
inc
insb
or
adc
into
mov
jp
sbb
or
dec
inc
sahf
es
lds
aad
sub
xor
clc
dec
lret
cwtl
or
adc
mov
out
lds
repnz
jg
mov
adc
push
and
and
xor
addr16
sahf
and
sub
or
movsb
inc
insb
push
and
or
or
mov
mov
shl
jnp
cmpsb
int
loopne
cwtl
push
roll
bound
xchg
mov
mov
fcoml
es
popf
jl
cmpsl
shrl
xchg
popf
js
lods
lea
rcll
adc
xchg
enter
xor
in
lds
cwtl
test
cmpsl
mov
and
add
or
in
rorb
dec
and
add
inc
loopne
add
add
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
jmp
outsb
lods
or
mov
cmpsb
or
push
add
call
or
repz
std
lcall
out
ljmp
cmc
xchg
or
mov
loope
fmuls
add
adc
mov
xor
mov
mov
or
js
fmul
loope
out
pop
jg
pop
mov
adc
and
rorl
adc
xor
fstp
rclb
adc
test
xchg
lods
outsl
stos
jge
push
rcrl
iret
inc
loop
data16
xlat
xchg
jg
mov
fwait
ror
ljmp
mov
insl
ret
cmpb
lret
mov
out
inc
inc
or
or
jbe
cld
inc
cwtl
loopne
or
ficompl
rcll
icebp
lods
mov
mov
fldenv
dec
sbb
inc
xchg
or
cmpsl
inc
fistpl
jae
dec
push
fwait
sbb
inc
pop
add
sbb
imul
in
push
rcrl
pushf
push
sti
in
movsb
mov
adc
jnp
rolb
aas
adc
push
mov
sub
cmp
mov
iret
dec
std
inc
push
adc
insb
pop
or
mov
mov
leave
dec
jmp
adc
pop
xchg
sub
aaa
stc
fmul
insb
stos
out
dec
ficoms
fwait
adc
add
test
les
fdivl
popl
jae
mov
lea
frstor
in
pop
dec
push
incb
xchg
out
sub
leave
add
clc
sbb
lock
xchg
mov
xor
fcoml
inc
inc
sub
cli
sbb
stos
sub
fxch
xor
jno
xor
loop
icebp
mov
adc
cli
mov
pop
cld
fdivl
sub
dec
mov
pop
mov
dec
xor
push
aam
fwait
sbb
mov
xor
int
add
pop
xchg
push
pop
hlt
jb
ja
mov
mov
ja
outsl
imul
cmpsb
scas
movsl
push
js
inc
xor
enter
shlb
jmp
cmp
int
fdivr
in
std
fadds
mov
mov
dec
pop
xor
das
fnstsw
push
xchg
stos
push
mov
test
sti
addl
pusha
xor
cmp
and
adc
addr16
pop
fstpt
sub
fiadds
push
stc
inc
mov
jo
sahf
push
ljmp
xchg
dec
jmp
sti
mov
add
scas
sbbb
sbb
nop
jno
lahf
cmp
nop
jnp
shlb
sbb
mov
fdivr
sub
addb
loopne
out
and
repz
fidivl
mov
int3
enter
sbbl
xor
gs
movsb
in
int3
xor
out
inc
jbe
inc
sub
sti
int3
push
in
psrlw
mov
outsb
cltd
dec
movsl
hlt
jecxz
adc
jne
fldcw
jns
mov
jecxz
stos
call
inc
js
nop
imul
or
dec
les
sbb
push
sbb
lods
dec
push
cmp
cmp
xchg
pop
or
rclb
xchg
ret
sub
xor
icebp
xor
mov
sbb
add
cmpsl
xor
repz
fucom
xchg
xor
push
push
inc
divl
fsubs
xor
out
lret
mov
push
push
test
cmpsb
dec
pop
mov
and
mov
sbb
mov
adc
push
pop
aad
test
or
fwait
in
jg
adc
popa
jle
in
stos
xchg
lea
ljmp
fs
jp
pop
inc
icebp
push
cmp
mov
rclb
adc
xchg
bound
mov
loope
or
jp
cwtl
in
pushf
pop
push
lcall
cltd
mov
cld
add
call
push
sarl
bnd
inc
xchg
dec
push
scas
add
push
pop
insb
mov
mov
inc
stc
mov
push
cld
xchg
out
jns
aaa
jecxz
adc
inc
push
push
and
push
xor
shlb
test
mov
xchg
mov
cmp
nop
out
mov
in
out
hlt
dec
inc
popa
icebp
test
sbb
sbb
out
std
popf
and
fs
and
push
addb
inc
xor
mov
les
xor
les
test
stos
dec
dec
pushf
stos
inc
push
fmul
and
arpl
mov
xchg
leave
pop
subb
aam
xor
mov
mov
int
sub
cltd
sub
int
scas
int3
add
xchg
std
das
xchg
repnz
mov
inc
fcomp
subb
adc
pop
dec
fidivrl
push
pop
std
cli
lret
test
mov
lods
sub
scas
jns
sub
mov
adc
sub
fadd
push
xlat
mov
hlt
push
test
and
lods
mov
fldcw
jle
leave
fdivs
adcb
shll
mov
inc
adc
popf
sti
bound
pop
add
xor
call
jmp
int
test
or
hlt
lock
mov
jl
xchg
xor
sub
mov
pop
push
pop
sbb
mov
jno
repnz
fimuls
cmp
lea
inc
cmp
jae
movsl
and
push
mov
adcb
fcompl
js
flds
mov
mov
jnp
or
sub
mov
xchg
cltd
lock
push
adc
add
xchg
mov
andl
mov
pop
mov
andb
or
sub
ret
inc
imul
fdivrl
cmpsl
out
imul
cld
test
sbb
mov
cmpl
stos
mov
sub
pusha
gs
or
push
test
lds
dec
ja
faddl
test
fimuls
mov
pop
pop
dec
mov
fiaddl
test
lods
push
aas
cmp
subl
daa
jge
cwtl
mov
fst
adc
jmp
inc
push
test
or
call
dec
xchg
mov
jg
push
add
push
sbb
cmc
mov
mov
test
mov
jle
xchg
or
push
xor
xlat
fsubrp
mov
xchg
xlat
push
ret
pop
dec
imul
ja
cmp
adc
mov
jno
ss
js
xor
or
xor
mov
adc
out
insl
pop
cwtl
pusha
sti
push
dec
mov
adc
push
stos
scas
and
jmp
das
insl
pop
sub
adc
lcall
push
cmp
dec
scas
jge
or
mov
dec
jo
pop
loope
fmuls
loopne
in
call
negl
shrb
xor
jnp
nop
iret
pop
pop
push
pop
hlt
and
cmp
push
imul
repnz
lods
dec
popf
repnz
std
in
add
xchg
lahf
pop
loopne
fs
test
sbbb
mov
lret
mov
clc
sbb
fcomps
cld
inc
inc
fs
dec
and
fldt
pop
push
or
inc
mov
nop
movsl
pushl
and
lret
getsec
inc
xchg
pushf
mov
xor
ss
xor
jne
sub
les
in
hlt
jge
sub
mov
enter
cmpsb
sbb
cmp
mov
aam
aam
sbb
mulb
pop
test
fsubs
mov
in
cwtl
jmp
pusha
inc
insl
ss
cli
mov
aam
loop
mov
sub
xor
xchg
mov
jg
insl
push
aaa
or
repnz
call
out
dec
push
outsb
movsl
add
dec
pop
pop
mov
xchg
bound
iret
outsl
sub
das
jmp
sub
add
jne
cli
out
cmpsb
xchg
and
daa
mov
push
adc
adc
pusha
add
repz
adc
push
add
mov
pop
mov
movsb
pop
sbb
je
es
lret
push
stos
dec
jmp
outsl
fistl
xorb
sub
popf
xchg
pop
cmp
xchg
xor
lods
xchg
dec
dec
daa
andl
shll
sub
inc
and
mov
mov
mov
ds
out
out
leave
test
lcall
mov
dec
xor
pop
or
in
test
pop
adcb
stos
das
jge
ss
sbb
or
xor
jl
aaa
loopne
xchg
adc
or
cmp
movsb
xchg
in
insl
popa
imulb
xchg
cmpsl
adc
pop
lds
test
dec
pop
in
or
xor
pop
pop
inc
xchg
add
inc
fstp
xchg
mov
adc
xchg
and
mov
and
fldenv
popa
sub
sub
add
divb
xchg
push
and
add
xchg
dec
mov
add
pop
inc
or
fbstp
mov
jno
xchg
pop
xchg
cmp
and
cmp
add
mov
xchg
xor
mov
je
xor
push
addl
push
es
stos
or
sub
nop
adc
jbe
push
xchg
push
pop
xchg
sbb
push
enter
cwtl
lret
int3
negb
cli
test
pop
test
cs
mov
out
pusha
lea
shrb
std
fisttps
aaa
fildl
enter
dec
in
test
adc
shlb
aad
jns
cmp
pop
lds
sbb
out
sti
in
mov
repz
psrlw
loopne
sub
test
xor
or
push
sbb
cli
test
repnz
lods
mul
jnp
pop
aam
aam
adcb
jno
call
mov
cmp
push
daa
into
push
aam
pop
xor
rol
or
jmp
mov
test
dec
push
scas
pop
sub
ss
data16
mov
inc
test
dec
loopne
out
loope
in
test
enter
flds
inc
fists
daa
cmp
test
mov
aam
pop
dec
inc
and
cmpsl
je
subl
outsb
mov
mov
fadd
xor
divl
fs
negl
scas
frstor
push
pop
sbb
lods
mov
lock
subl
ret
int
mov
cmpl
test
flds
ret
xor
into
mov
ljmp
cmpb
or
inc
jo
aam
dec
outsb
jb
xchg
mov
inc
xor
lahf
sahf
sbb
inc
add
shlb
cld
or
inc
jb
out
add
lahf
or
jns
push
rcrl
flds
fldcw
lcall
mov
inc
jmp
loop
jge
lods
icebp
sub
and
mov
cmpsl
loope
clc
and
mov
sbb
xchg
loop
xor
into
fcoms
test
popf
mov
test
stc
xor
inc
dec
inc
mov
subl
jb
xor
adc
test
stos
movsb
shrl
mov
ret
adc
daa
dec
or
fstps
lods
pop
daa
roll
cmpsl
jnp
test
sbb
mov
sub
push
mov
inc
outsb
cmp
scas
add
pop
std
push
sti
fwait
xor
or
pop
or
cmp
outsl
iret
lea
sub
mov
rcl
dec
push
mov
xchg
fbstp
ds
pop
pushf
or
cmpb
adc
movsb
dec
outsl
mov
cmpsl
pop
dec
aad
test
inc
hlt
push
or
int
pusha
push
cmc
mov
fstl
cmpsb
mov
mov
sarb
notb
mov
fs
pop
mov
mov
or
cmp
inc
aas
je
jno
cmp
decl
cld
dec
mov
lahf
addr16
mov
jmp
xchg
shll
aaa
movsb
imul
add
inc
mov
mov
ret
adc
push
cmp
mov
aas
lods
cs
xor
stc
mov
jne
movsb
sbb
push
ds
jg
movsb
and
lahf
je
push
add
cmp
out
fs
mov
push
jno
or
call
in
lahf
inc
pop
xor
mov
pop
sub
cmp
push
sub
push
int3
mov
jnp
pop
jnp
adc
fwait
pushf
out
jno
xlat
mov
aam
xor
dec
cld
iret
sub
sub
es
stos
pushf
jns
mov
lret
data16
popa
xchg
pop
lds
or
add
add
fbld
sub
lock
aas
nop
mov
out
mov
xor
je
pop
bound
fsubs
outsl
sbb
jl
es
cmp
ja
xor
mov
pop
jo
adc
jne
scas
mul
mov
fsubr
mov
inc
xor
cmp
cmp
mov
xor
cli
scas
add
test
xchg
cltd
pop
adc
xchg
nop
mov
mov
fildll
mov
int3
fwait
je
jecxz
pushf
fs
dec
inc
mov
push
sbb
into
repz
adc
adc
stc
call
adc
lahf
mov
pop
mov
mov
add
mov
in
das
pop
adc
ret
cmovge
faddp
add
pop
in
cmpsl
js
jl
mov
jg
outsl
sub
cmc
repz
cmp
std
pop
pop
adc
xchg
repnz
shlb
inc
inc
faddp
loopne
push
xor
rclb
jmp
loope
pop
in
pop
lea
aam
std
dec
int3
mov
test
xchg
xor
mov
push
inc
pusha
adc
pop
mov
sbb
xlat
out
xchg
pop
pop
mov
sahf
inc
pop
aas
jmp
mov
nop
test
loope
mov
or
out
scas
add
sbb
fsubrs
xchg
mov
jle
lahf
xchg
es
ds
daa
jb
imull
in
inc
push
and
xchg
cmpl
cmp
mov
cli
push
mov
int
push
adc
iret
jo
roll
ret
mov
or
sub
clc
sub
hlt
popa
jg
idiv
xchg
xchg
add
xorl
cmpsb
lods
loopne
insl
mov
mov
dec
inc
push
xor
sti
cmp
fucomp
cmp
pop
sbb
or
or
lret
add
jp
enter
outsb
xchg
fsubl
sbb
cmp
jge
push
push
jp
fcmovnb
sub
imul
dec
cltd
xor
add
stos
adc
add
cmpsb
jmp
out
cmp
mov
sbb
cs
pop
inc
xor
movsb
push
cmp
daa
mov
lcall
mov
add
and
lds
outsb
dec
cmpsb
xlat
dec
imul
cmp
jno
and
fistpl
fisubs
ja
jb
push
xor
sbb
stos
out
loop
cmp
inc
jae,pn
lahf
clc
into
addb
sub
and
lret
jae
push
or
stc
testl
pop
and
xchg
out
sbb
popa
mov
pop
aam
sbb
jbe
pop
pusha
or
sbbl
sub
ret
jae
mov
jo
pop
addb
je
aad
scas
xor
sub
lcall
dec
jo
cmpsl
aad
pop
icebp
inc
pop
cmp
push
int3
and
or
sub
cmp
xor
aas
cld
and
cmp
in
outsl
cld
in
out
enter
pop
mov
fbstp
loope
lret
mov
out
sbb
mov
or
loope
popf
or
ja
pusha
in
inc
inc
inc
ret
xchg
testl
in
sub
jmp
adc
nop
nop
pop
add
ficomps
jp
mov
leave
jae
jbe
sub
bound
pop
pop
lods
or
les
mov
push
dec
inc
jle
fiadds
or
enter
sbb
mov
or
cmp
jns
adc
cmc
sbb
mov
and
fcomip
push
push
xchg
xor
cmp
out
mov
xchg
ja
push
add
adc
les
push
mov
lea
dec
cmp
rcll
push
aad
arpl
push
aas
sbb
cli
jb
xlat
sbb
leave
scas
cli
jnp
outsb
mov
mov
rorb
jmp
popa
pop
dec
das
mov
jle
xchg
ret
push
mov
cltd
xchg
push
jg,pt
hlt
jmp
push
leave
mov
ds
ret
mov
adc
lods
fisubs
lahf
rorl
std
clc
pop
fwait
pusha
push
movsb
xchg
add
add
and
jg
xchg
cmc
fwait
push
fdivs
push
add
mov
jge
loope
cmp
ret
mov
clc
fs
mov
lods
sbb
push
jne
imul
stos
in
insb
rorb
push
hlt
cmp
mov
jge
xchg
dec
pop
jle
sbb
lret
stos
push
lods
jge
sub
stos
push
movsb
xor
xorl
push
gs
iret
out
jns
xor
xlat
inc
sahf
loope
out
or
scas
xchg
xlat
dec
out
aaa
imul
and
dec
dec
mov
jae
mov
repnz
jnp
les
mov
in
ret
mov
mov
sub
fdivrl
js
arpl
mov
pop
push
je
sub
jo
div
or
sti
xor
sub
pop
jno
jge
das
adc
and
cmpsb
sub
jl
fcoms
mov
cmp
mov
andb
mov
out
push
jns
roll
dec
dec
imul
sub
sbb
test
xor
mov
mov
dec
mov
arpl
fwait
loopne
xchg
out
test
rclb
stc
ror
cltd
fmull
add
pop
dec
aas
push
push
dec
sub
push
jno
test
lea
mov
mov
push
pop
in
daa
push
dec
sarl
test
arpl
or
push
lock
push
shrb
rolb
xchg
mov
pop
ret
lret
or
out
pop
arpl
cltd
std
das
jg
pushf
xchg
cmp
cmpsl
out
sub
push
mov
mov
push
push
push
ret
fsub
sbb
cwtl
popf
aaa
sub
in
lret
cmp
add
sbb
mov
in
imul
adc
push
push
movsl
mov
or
das
addb
fimuls
push
push
xchg
stos
testl
scas
leave
sahf
stc
or
sti
pop
push
clc
push
cwtl
sub
cmp
cmp
sarl
inc
aam
add
into
mov
push
xor
xor
dec
inc
mov
inc
xchg
arpl
dec
aas
jp
mov
pop
pop
pop
clc
mov
cs
pop
out
xchg
lock
jno
mov
mov
push
and
cmp
pop
test
jno
shll
ror
outsb
mov
test
jl
jmp
gs
lcall
mov
movsl
jmp
push
sub
stc
imul
stos
xor
leave
or
loope
es
or
sbbb
daa
psrld
xchg
mov
xor
ret
ret
pop
cmp
insb
inc
xchg
add
das
and
mov
xor
and
push
mov
fidivrl
out
sub
enter
out
or
mov
andl
xchg
dec
xlat
or
jbe
aaa
and
dec
cld
jecxz
imul
inc
insb
sub
fldcw
xchg
push
or
push
xchg
js
jmp
xchg
daa
incl
inc
pop
lret
cmpb
in
jp
mov
icebp
mov
push
jge
scas
lcall
pop
and
adc
and
mov
icebp
push
lret
std
mov
rcrb
pminub
out
and
jae
aam
pop
add
scas
and
cmp
scas
adc
mov
imul
mov
int3
ja
or
iret
rorb
or
pushl
xlat
in
jp
inc
cmp
mov
sbb
push
insl
mov
mov
ss
enter
mov
dec
jns
cltd
pop
adc
bound
faddl
push
mov
sub
dec
fnstcw
sti
stc
pop
aas
and
pop
data16
mov
inc
mov
inc
sub
push
daa
lock
outsb
xor
arpl
pop
in
shrb
bnd
enter
cmpsl
mov
cmp
data16
sub
adc
xor
sbb
shlb
cmp
fisubrl
rcrb
test
add
daa
stos
xor
jb
scas
leave
and
inc
data16
push
test
shrl
into
mov
cmpb
int3
repnz
push
fdivrs
ret
mov
jae
stc
mov
add
sub
orl
or
jno
aam
mov
test
sub
dec
sti
fsubrl
xchg
popa
pushf
shlb
icebp
repz
push
and
xchg
je
lcall
sbb
sahf
rol
jne
and
enter
pop
pop
jbe
aas
cwtl
xchg
js
in
add
push
mov
aad
popf
inc
sti
sub
cmp
pop
pop
mov
int
dec
mov
jo
mov
es
popa
cmp
imul
aas
mov
pop
xlat
sub
pop
loopne
dec
fistpll
mov
lahf
dec
sarl
jge
cmpsb
aas
cmpsl
jmp
mov
xor
mov
loop
pop
andl
jns
insl
cmpsb
out
pop
or
int3
je
add
negl
and
dec
mov
pop
mov
aas
mov
sub
jmp
dec
nop
inc
pushf
std
std
out
std
jge
stos
aaa
cs
sbb
mull
mov
xor
mov
ljmp
jae
jne
xchg
mov
jne
xor
pop
movsl
test
in
push
and
mov
cmpl
int3
or
cli
loope
jmp
loopne
sbb
call
mov
cs
mov
mov
dec
ja
negb
aad
out
sbb
addb
gs
xchg
xlat
add
xchg
lea
lahf
testb
imul
lds
out
mov
pop
mov
imull
and
mov
or
es
call
loop
lret
call
sub
jne
dec
das
int
hlt
push
pop
scas
insb
jbe
xor
mov
fbstp
ret
icebp
ljmp
clc
sub
mov
pop
xor
aam
lcall
out
test
mov
popf
jle
mov
mov
xor
incb
loop
inc
les
aaa
push
mov
scas
enter
push
test
xor
shlb
loopne
repz
fbstp
fbstp
int3
add
adc
pop
enter
pop
sub
fstp
sbb
mov
fwait
pop
iret
repnz
stos
mov
push
jne
mov
jae
movsb
sbb
jnp
pop
or
in
inc
mov
js
sbb
or
out
roll
pop
pop
test
sub
inc
adc
out
xchg
push
fildll
imull
mov
adc
pop
call
shr
cmc
aad
xchg
and
pop
cmpsb
mov
lods
das
or
xchg
push
out
cmp
or
lcall
mov
lahf
push
pop
pop
jb
movups
and
test
push
cmpsb
lcall
fwait
movl
je
into
cmpsl
ss
mov
je
outsb
movb
mov
pop
pop
dec
xlat
cmp
scas
imul
rolb
jno
cld
shl
out
enter
into
jp
lds
or
and
cwtl
mov
sub
and
mov
enter
fdivs
push
leave
pushf
jnp
mov
rclb
or
adc
sti
push
sub
or
and
push
int3
xlat
push
xchg
dec
fcoml
repz
sbb
fistpll
ret
xchg
or
mov
cmpsl
js
into
push
cmp
lea
dec
fidivrl
adc
cmp
rcrb
pop
push
out
cltd
mov
inc
sbb
stos
arpl
iret
xor
lock
cmp
sbb
mov
mov
cmp
insb
push
xor
jae
into
loopne
orl
xchg
and
in
out
add
bound
inc
cltd
test
inc
in
or
jg
into
jbe
sbb
loope
dec
adc
or
les
push
lea
mov
insb
movsb
insb
fisubrl
push
popa
jl
test
pop
mov
jns
sub
sub
jns
or
out
inc
xchg
xor
pushf
leave
imul
dec
test
and
add
push
xchg
sti
or
sbb
gs
pushf
mov
rcrb
xchg
in
insb
mov
adc
decl
add
cld
pop
rep
outsl
jmp
cmp
int
jmp
pop
cmc
inc
inc
sbb
dec
and
dec
insl
jecxz
mov
test
dec
xor
fistl
sbb
sbb
jbe
xor
and
add
or
jle
add
add
push
adc
mov
jnp
sub
dec
and
outsl
jmp
in
jp
dec
push
hlt
inc
rorl
fsubrl
mov
icebp
jp
call
aaa
js
or
out
stc
rcrl
daa
xor
loope
add
mov
stos
xchg
cmp
mov
je
cmpsl
movd
push
cmc
mov
pop
pop
adc
jl
add
push
sub
inc
out
outsl
das
sbb
addr16
mov
add
pusha
cmp
aaa
push
xacquire
into
cli
mov
sub
cmpsb
add
add
sahf
xchg
rorl
jp
cmp
into
jg
ret
enter
mov
sbb
dec
add
inc
mov
or
ja
scas
and
xor
add
out
shll
mov
call
arpl
xchg
leave
dec
or
or
adc
and
push
cmpl
lea
jbe
mov
mov
and
rcll
loopne
cmpsb
cltd
fiadds
push
mov
pop
movsl
jl
ljmp
aad
jae
add
fdivs
push
xor
push
cmp
subb
imulb
xchg
test
dec
psubsb
add
pop
outsl
dec
mov
vpunpckldq
stos
fstpl
inc
or
ds
pop
cmc
jp
push
pop
mov
pop
push
sub
fcoms
push
orl
sub
jbe
cli
inc
hlt
popl
or
outsb
stc
mov
jl
add
cli
jmp
mov
jl
jne
jecxz
cltd
aaa
push
jae
imul
dec
in
loopne
fldcw
jp
adc
aas
aaa
ficoms
xor
jge
cmp
dec
adc
sar
inc
insl
int
xchg
pop
fimuls
cmc
int
ficoms
xchg
pop
dec
je
xchg
add
inc
pop
inc
or
cmp
jno
xchg
pop
sbb
mov
aam
jbe
stos
mov
ficomps
int
inc
lea
add
lcall
out
mov
stos
lods
ret
ret
sbb
shrb
mov
add
sub
inc
jle
or
inc
call
nop
adc
jb
jbe
adc
cmp
add
push
adc
ss
mov
aaa
addr16
int3
mov
push
into
imul
mov
xchg
cmp
hlt
cltd
push
push
xor
sbb
scas
push
jg
mov
jnp
pushl
xor
scas
mov
push
das
jnp
jl
cltd
mov
cmp
cmc
xchg
daa
sti
das
push
sbb
outsb
jmp
daa
add
and
push
jb
add
aas
stos
sti
pop
mov
cmp
notb
pop
or
shll
nop
and
cmp
jp
fnsave
jecxz
mov
cwtl
mov
adc
loop
stc
xchg
imul
adc
mov
jl
inc
push
pop
push
bound
aaa
xorl
mov
xchg
cli
sbb
in
or
and
stc
push
pop
xor
dec
or
fcomip
or
mov
mov
or
aas
imul
cmp
subb
pop
cmpsb
std
jns
pushf
pushf
dec
push
fsts
aam
mov
mov
call
mov
daa
dec
loop
movsb
imul
leave
mov
es
lret
push
loopne
and
retw
mov
test
rcl
inc
push
sbb
addr16
mov
lock
in
and
push
in
jg
xchg
mov
inc
test
popf
mul
xchg
mov
je
shrb
enter
clc
inc
mov
into
mov
test
push
loop
or
fidivrl
shl
push
lods
shll
loopne
and
sbb
pushf
dec
inc
add
sub
mov
sub
adc
in
jl
add
add
in
insb
jbe
lret
xchg
adcl
push
xor
lcall
stc
jl
aam
sub
xchg
ret
jnp
stos
xchg
push
cmpsl
sbb
stos
rcr
lods
arpl
xor
pop
outsb
popf
ds
inc
push
sbb
stc
add
sbb
lock
mov
mov
pop
cmp
inc
je
fwait
es
cmpsb
inc
addr16
cmc
call
fadds
lods
pop
into
or
push
jp
lret
cld
enter
dec
xor
cmp
mov
lea
sub
lods
push
out
frstor
add
das
pop
adc
push
popa
addr16
pop
push
push
in
xchg
out
int3
jp
ljmp
fincstp
pop
pop
inc
mov
or
lret
fistpl
or
adc
les
dec
dec
mov
push
jl
xchg
jge
orb
add
pop
and
xor
leave
adc
xchg
aas
pop
pop
xor
fsubrl
xchg
sbb
sbb
cmp
lods
loop
xor
inc
mov
xchg
ss
pop
stc
and
jg
js
jle
inc
push
daa
fnsave
ja
fisttpll
ret
fwait
cmp
out
scas
sbb
inc
xor
cli
sbb
cmp
sbb
subl
ffreep
pushf
cmp
push
pop
fidivs
add
mov
ds
int3
push
clc
pop
cmp
or
mov
push
xchg
es
jp
clc
jns
hlt
sbb
icebp
mov
aas
add
pop
pop
out
shrb
aam
jp
dec
xchg
sbb
aaa
jns,pt
loopne
mov
or
mov
mov
xchg
sub
arpl
xchg
ljmp
addr16
mov
lcall
in
mov
test
sbbb
mov
xchg
bound
mov
mov
pop
lret
fdivl
and
add
in
fs
dec
stos
int3
mov
xchg
repz
popf
lcall
out
add
fistl
xchg
xchg
fstpl
add
mov
sub
ja
lods
fisubrl
cmc
lret
jg
stc
fstpl
mov
push
pop
xchg
jg
or
xchg
sub
xchg
mov
inc
dec
mov
dec
sbb
hlt
cld
and
ficomps
loope
insl
xchg
push
push
xor
mov
lock
mov
insl
xchg
cmp
pop
test
inc
mov
or
arpl
pop
rcr
pop
or
test
jmp
or
xor
icebp
inc
test
push
repz
pusha
decl
nop
xor
pop
inc
leave
fdivl
into
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
mov
xorl
mov
mov
sbbl
xor
xorl
add
mov
and
mov
and
xor
xorl
push
xor
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
movzbl
or
mov
mov
subl
xor
mov
add
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
mov
movb
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
pushl
call
jmp
lea
incl
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
xor
movl
add
andl
mov
sbbl
movl
push
movl
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
mov
dec
mov
jmp
mov
or
push
mov
xor
xor
or
xor
mov
sbb
mov
mov
push
add
jmp
incl
mov
mov
inc
movl
cmp
jb
not
mov
xor
movl
add
jmp
movzwl
or
mov
adc
mov
adcl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
add
addl
movzwl
sbbl
mov
movzwl
and
mov
sbbl
movzwl
xor
add
mov
movl
mov
mov
inc
not
mov
movl
cmp
jne
and
mov
sub
mov
xorl
xor
and
add
mov
mov
sbbl
xor
add
adc
mov
addl
movl
movl
movl
movl
mov
movl
cmpl
je
cmpl
jb
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
xor
add
movzwl
mov
mov
je
mov
subl
mov
xor
xor
notl
sub
notl
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
mov
movl
add
andl
imul
mov
xor
mov
mov
add
mov
add
incl
or
mov
mov
mov
sbbl
add
xor
mov
dec
mov
add
mov
add
and
and
mov
xor
mov
subl
mov
lea
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
or
mov
sub
movzwl
and
add
mov
andl
mov
xor
adcl
add
movl
jne
movl
jmp
xorl
mov
subl
sub
xor
movl
cmpl
je
cmpl
jbe
jmp
push
call
xor
or
dec
mov
jmp
mov
subl
mov
mov
xor
decl
xor
adcl
sub
sub
xor
mov
mov
mov
jmp
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
addl
imul
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
addl
add
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
mov
mov
andl
add
movl
xor
mov
subl
mov
mov
xorl
add
xorl
and
or
mov
mov
sbb
mov
xorl
mov
lea
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
jmp
rcr
sbb
mov
nop
cs
or
mov
xorl
mov
insl
add
loope
and
push
aam
adc
popa
sub
imul
ret
addb
test
xchg
jle
jbe
cmpsl
sarb
cmc
xchg
cmp
loope
mov
lds
jmp
push
pop
mov
hlt
addb
xchg
mov
cmp
sub
stc
jno
mov
ja
inc
jnp
fcompl
nop
or
scas
add
nop
jno
mov
inc
sbb
mov
sti
add
lods
cwtl
ret
dec
lahf
sbb
pop
jne
mov
pop
enter
xchg
or
xchg
shlb
push
jo
inc
pop
xchg
xchg
iret
push
mov
cmp
push
pushf
rcr
and
fists
outsb
incb
arpl
aaa
sarl
scas
in
add
popf
in
or
push
cmc
leave
push
and
data16
shlb
jns
mov
xor
std
shlb
aaa
pop
and
mov
fs
add
movsl
cmp
stc
fistpll
mov
mov
mov
test
ret
sbb
gs
add
pop
xor
fldpi
cmpsl
cmp
cmp
sbb
mov
sbb
mov
lods
rorl
scas
adc
xor
lret
push
in
pop
popf
pop
iret
inc
inc
inc
loopne
push
enter
lahf
pop
dec
subl
and
xchg
inc
add
xor
cmp
xchg
test
push
mov
insb
into
inc
in
xchg
dec
lods
mov
int3
cs
cmp
and
mov
sbb
subl
cs
lea
jnp
lcall
divps
pop
xchg
clc
cmp
lahf
lods
xchg
adc
mov
dec
call
push
stos
rcll
push
jmp
xor
fnstcw
jecxz
xchg
negb
jb
cltd
scas
sti
push
idiv
or
es
test
test
ljmp
dec
mov
rolb
xchg
je
jne
push
mov
or
insb
aas
cmp
add
adc
fwait
xchg
sahf
mov
push
data16
inc
pop
jp
xchg
push
das
divb
sarb
mov
cltd
ja
mov
jnp,pn
imul
jbe
jb
aam
repz
mov
int3
inc
stos
test
xchg
out
iret
ret
scas
sahf
into
mov
add
aam
rcr
sti
mov
push
xor
mov
insb
pop
rcll
rcll
scas
fwait
cmp
cwtl
das
jbe
mov
ja
jecxz
in
dec
pushl
add
pop
gs
cmpl
sbb
dec
mov
int
mov
stos
xchg
push
imul
sti
mov
mov
popf
fisttpll
inc
pop
dec
mov
push
std
jl
out
dec
neg
jle
cmp
lock
add
sub
and
xchg
fsubrs
decb
inc
data16
dec
ret
push
outsl
dec
mov
ret
lock
push
int3
loope
pop
pushf
es
out
inc
add
lret
fisttpll
or
bound
inc
xchg
inc
out
scas
ret
je
es
mov
iret
sub
cmp
test
loope
xchg
in
push
std
push
orb
add
xchg
mov
out
fmuls
mov
sub
jb
enter
xchg
and
sbb
inc
les
js,pn
pushw
mov
mov
arpl
adc
shll
mov
xchg
fidivl
pop
subl
or
jge
test
inc
xchg
call
stc
test
mov
lret
adc
mov
and
je
stc
pop
adc
fisttpl
and
mov
bound
loope
cmc
add
xchg
stos
ljmp
cltd
xchg
cld
clc
push
and
call
mov
test
cmp
aaa
xor
jno
popa
mov
sub
in
inc
dec
in
scas
aaa
dec
jne
lcall
rolb
inc
sbb
aaa
cmp
test
rorb
add
lods
loopne
lea
adc
or
test
repnz
add
mov
or
fnstsw
jge
fmull
cmp
scas
sub
xor
aam
lock
xor
movsb
mov
popf
test
sub
mov
mov
jns
nop
adc
mov
jmp
mov
fsubrs
mov
sbb
sbb
aam
jmp
push
inc
dec
pop
add
ret
rclb
fsubp
xor
pop
xchg
adc
adc
mov
test
stos
jmp
es
xor
lcall
dec
ss
mov
arpl
mov
dec
xlat
and
out
cwtl
xlat
int
xor
jmp
lods
arpl
cwtl
shlb
fisttpl
xchg
mov
xchg
jnp
in
xchg
repz
jl
jp
lock
jae
aas
adc
sahf
jecxz
cmp
adc
or
aam
cltd
lods
and
add
jecxz
add
push
pop
clc
mov
out
les
call
ret
fdivrp
ljmp
icebp
in
mov
xlat
insl
push
cmp
pop
imul
jmp
sbb
clc
iret
xor
add
jnp
adc
mov
mov
aaa
jecxz
push
jae
jg
fwait
scas
xorb
pop
cld
sub
jp
pop
jecxz
add
fidivrs
or
dec
test
sbb
fmull
fidivs
movsl
ret
dec
cmp
sbb
adc
mov
ja
mov
pusha
lods
sub
adcb
mov
lret
int
ret
pop
pop
jns
rclb
jmp
outsb
lods
inc
sbb
adc
cmp
outsl
sub
pop
cmp
push
add
stos
not
pop
loopne
push
cmc
fcmovb
test
bt
add
stos
dec
jae
xor
pop
ret
cwtl
inc
mov
jmp
and
call
add
pop
mov
dec
lock
aad
xchg
in
pop
rclb
adc
les
xchg
and
insb
adc
popf
ret
sbb
in
push
out
sub
in
shlb
xchg
cld
ljmp
cmp
leave
mov
adc
ret
aaa
fdivr
inc
loopne
popf
jl
cmp
push
pop
push
sarl
and
or
push
mov
xlat
test
sub
add
loope
popa
outsb
std
xchg
enter
add
in
jecxz
mov
mov
lahf
mov
sbb
sub
sbb
add
hlt
out
sti
fcoms
int
in
test
stos
dec
imul
cld
out
daa
push
jle
cltd
ret
fisubl
fcomps
push
cmp
jp
test
das
bound
std
sbb
ret
repnz
xchg
pop
lock
xchg
pop
int
mov
mov
mov
addr16
pusha
or
adc
dec
mov
adc
push
pop
lock
sarb
xchg
cmp
or
pop
or
sbb
mov
clc
pop
pop
push
stos
pop
dec
push
xchg
jmp
or
out
jne
test
dec
cli
aaa
push
and
popw
loopne
lahf
pand
cmpsb
popa
xor
mov
xchg
inc
leave
sbb
adc
mov
xchg
aad
dec
lods
and
pop
sub
ljmp
pop
jae
inc
fdivrl
mov
sbb
and
pop
test
popa
add
or
and
loop
leave
add
outsl
and
iret
outsl
mov
dec
jae
jae
xor
xchg
xchg
mov
sbb
sbb
jmp
cmp
int3
inc
mov
test
mov
cmp
cmp
in
and
enter
add
rcl
dec
sub
jo
call
inc
add
jp
test
cmp
flds
ds
mov
pop
leave
xchg
and
xor
sbb
jge
push
ljmp
lret
pop
lock
stc
and
mov
pop
mov
stos
shrl
xchg
daa
cmp
int
cmp
mov
sbb
xor
adc
mov
mov
mov
outsb
xor
cmp
pop
cmp
sbb
push
push
and
repnz
shrb
xchg
lret
iret
andl
fwait
lcall
ljmp
int
rorb
pop
dec
fld
ss
xchg
or
xchg
add
cmp
lret
call
movsl
notl
test
xor
int
ja
adcl
rorl
out
pop
aam
or
cmp
dec
inc
cmp
test
or
cmpsl
adc
jae
push
sbb
and
and
cmp
or
xchg
xchg
roll
inc
mov
test
inc
xchg
mov
testb
mov
and
rcrb
mov
cltd
jl
cwtl
mov
mov
sub
andl
mov
dec
dec
mov
mov
jl
leave
ljmp
addr16
sahf
jecxz
push
xor
int3
xchg
imul
xlat
repz
imul
into
mov
push
std
arpl
inc
dec
push
repnz
dec
and
loop
sbb
xchg
or
adc
test
mov
dec
xor
in
push
xchg
scas
iret
dec
mov
dec
mov
mov
and
and
adc
or
push
mov
sub
jnp
cmp
add
cmp
adc
aam
mov
push
ds
xlat
mov
scas
fwait
sbb
cmc
cmp
inc
inc
jno
pop
mov
nop
add
jae
js
mov
arpl
xor
and
mov
iret
adc
test
pop
lret
loope
sub
ret
mull
xchg
sbb
lock
push
push
shll
push
push
in
push
sbbl
fstpt
mov
jle
push
iret
mov
int3
dec
dec
scas
out
xchg
mov
mov
stos
shl
add
les
ret
fwait
pop
out
andl
ret
and
jae
out
cli
or
bound
cmp
adc
stos
inc
add
mov
rorl
movsb
jns
xor
mov
ret
test
inc
xchg
repnz
testl
and
cmpsb
dec
iret
ret
xchg
fsts
fs
aad
push
push
repz
push
add
cmp
xor
inc
xchg
repnz
mull
aad
call
cmc
push
mov
xchg
mov
dec
cli
xchg
stc
mov
mov
call
mov
repz
pop
ds
std
repnz
cmp
xchg
xchg
fistl
hlt
out
pop
stc
pop
push
mov
push
rcrl
fidivl
adc
in
jge
ret
sub
jno
sbb
cmp
iret
or
das
fcomp
rolb
inc
cmp
jp
pop
scas
sub
lret
hlt
sbb
adc
cmp
add
push
push
mov
adcb
rcr
rclb
std
mov
or
mov
addr16
mov
ficompl
xacquire
aas
or
ljmp
inc
rcrl
shll
bnd
shlb
enter
push
mov
pop
movsl
cmp
jns
stc
pusha
sub
loope
jmp
dec
mov
hlt
popf
inc
adc
mov
mov
inc
cmp
lcall
clc
les
outsb
jae
call
xor
out
aaa
xor
fisttps
mov
lret
test
sub
dec
mov
xchg
dec
ds
mov
cld
inc
add
mov
jl
cmp
adc
mov
and
adc
or
mov
and
out
in
sbb
xchg
or
sbb
or
mov
mov
loop
cmp
push
or
xchg
sti
sarl
dec
mov
pop
ret
js
adc
pop
inc
cmpsb
xchg
mov
mov
stos
dec
and
test
mov
pop
mov
lods
xchg
mov
xchg
xorb
inc
cmp
out
xchg
cltd
mov
les
sub
ret
mov
fcmovne
bound
add
stos
push
decb
rcrb
mov
movsb
dec
add
in
inc
push
das
inc
cli
orb
sub
imul
mov
nop
in
fwait
mov
mov
sub
fsts
cwtl
mov
pop
xor
cmp
stos
ss
xchg
and
jnp
xchg
es
lock
and
and
push
or
xor
pop
js
inc
aaa
addr16
lahf
je
mov
and
and
ret
push
dec
sub
ss
or
cmp
repz
push
lds
dec
pop
outsl
pushf
and
fbld
adc
out
pushf
outsb
shrd
jbe
inc
xor
lods
dec
add
fyl2x
iret
cmpsl
xor
repnz
inc
mov
lahf
mov
adcl
sbb
rolb
out
lret
mov
movsb
mov
pop
push
ss
in
mov
sub
fisubl
hlt
xchg
mov
xor
aad
sbb
arpl
nop
out
insb
push
hlt
or
ret
scas
filds
lds
jne
push
sub
nop
jmp
jne
dec
inc
sbb
mov
das
xorb
xchg
mov
sar
push
ljmp
mov
push
mov
and
dec
jmp
pop
daa
mov
std
sbb
shlb
add
dec
out
daa
icebp
add
imul
or
dec
jl
fwait
xchg
push
sub
inc
fucomip
enter
xlat
imul
repz
push
push
sbb
and
movsb
stos
in
pop
sar
mov
iret
push
lock
jge
mov
xor
xor
pop
enter
popf
and
jns
insl
aas
outsl
lods
stos
cmpsb
pop
jb
mov
mov
jg
pop
dec
ret
jbe
pop
pop
fistpll
sbb
outsl
repnz
leave
rcll
push
fdivrl
mov
lahf
jo
jnp
or
mov
clc
and
adc
out
pop
inc
push
sub
jns
loop
call
jb
inc
cwtl
push
xor
aam
ret
mov
test
je
jnp
pop
xchg
or
imul
xchg
sbb
push
xchg
fidivrl
add
xchg
popa
xchg
pop
mov
loop
fwait
cmp
es
or
fildl
sub
push
inc
or
cmp
inc
fnstcw
mov
xorl
add
sub
shl
ljmp
lret
sbb
xlat
out
push
cmp
lods
sbb
imul
stc
mov
iret
xor
out
mov
xchg
xor
roll
shrb
pop
out
add
sti
std
cltd
inc
jmp
mull
gs
js
ret
jno
pop
mov
xchg
xchg
dec
ret
xor
push
cltd
pop
push
leave
or
outsb
xchg
mov
dec
jg
xor
ja
in
mov
xlat
push
mov
or
loope
cmpsb
xchg
inc
bnd
fstl
dec
xor
pusha
cmp
mov
pusha
ds
pusha
or
fldl
mov
js
jl
jp
fiaddl
cmp
inc
fiaddl
xchg
mov
pop
xor
or
jl
inc
or
scas
push
pop
xor
rorl
bound
cmp
sub
loope
jg
or
pop
cs
xor
into
push
xlat
out
sahf
mov
mov
in
inc
fiaddl
mov
xchg
test
dec
push
mov
push
xor
jne
push
imul
aam
in
cli
xchg
lcall
sub
adc
push
xor
pop
in
movsb
mov
dec
mov
xor
in
mov
rcrl
incb
inc
sbb
mov
cmpsl
fs
adc
ss
cmpsb
xchg
shlb
das
rorl
pop
into
aad
sub
aas
test
xchg
mov
pushl
int
xor
xorb
or
jl
jae
mov
inc
test
jbe
jp
pusha
jge
cwtl
dec
inc
sbb
sbb
mov
shlb
fstps
cltd
dec
repnz
lea
movsl
fstpl
jmp
lahf
jb
sarl
arpl
fldt
or
popf
stc
mov
and
push
xor
orb
pop
ja
ret
loopne
jle
dec
sub
clc
push
or
add
cwtl
cwtl
fcomps
hlt
outsl
sbbl
xrstors
ficoml
jp
jo
imul
nop
cli
testl
pop
out
push
mov
outsb
mov
or
rcrb
inc
xlat
or
mov
int
push
mov
call
mov
stc
nop
and
faddl
lcall
fisttpl
xchg
icebp
push
lds
inc
mov
inc
sti
hlt
mov
imul
sahf
arpl
mov
mov
dec
jle
xchg
xchg
daa
jne
dec
sub
mov
rorb
mov
shr
pusha
xor
out
int
out
or
xchg
mov
mov
inc
sbb
js
sub
cmc
pusha
mov
xchg
aas
rcll
sub
sub
stc
xor
and
lods
out
mov
pop
xor
dec
sahf
mov
paddusb
call
scas
dec
jge
mov
mov
fdivrp
arpl
mov
out
scas
xor
mov
xor
loope
iret
adc
xchg
sub
jne
es
outsl
ds
ljmp
das
or
adc
enter
xchg
push
xchg
mov
pop
and
jle
push
jnp
ja
push
mov
add
push
pop
adcl
sub
popf
leave
ror
jmp
push
lahf
in
repz
cmp
jo
fwait
sbb
stos
push
test
jp
sbb
sub
ss
cmp
pop
fistpl
fmuls
pop
into
ficoms
dec
add
aad
insl
or
stos
and
lahf
sbb
push
pop
lods
popa
pop
lds
dec
inc
cmp
push
enter
pop
inc
nop
mov
dec
repz
lahf
cmp
xor
or
inc
sub
xchg
sbb
rorl
and
adc
ss
icebp
cmp
lea
test
popl
in
dec
pop
mov
insl
mov
lock
ljmp
aaa
iret
ret
mov
aad
out
test
lahf
ret
ret
mov
mov
mov
mov
movsl
enter
repz
or
sbb
cmp
cmpl
add
adc
in
xor
pop
out
jmp
lea
sub
inc
or
xchg
test
fsubrl
movups
inc
add
add
push
xor
in
repnz
stc
cld
sbb
mov
mov
and
cli
fstpl
cmp
mov
dec
jbe
lcall
aad
xchg
in
stos
aas
jae
leave
xchg
mov
sbb
sub
pop
push
and
pop
popf
pop
pop
ret
inc
mov
jne
jl
sub
inc
test
mov
enter
test
test
jb
fcomps
jnp
popa
jb
and
jae
or
xor
mov
push
cmp
cmp
jmp
push
js
push
mov
out
jbe
mul
rcll
pop
jo
push
cmc
jg
loop
cmp
adc
mov
imul
xchg
inc
icebp
stc
mov
aas
addl
hlt
push
repz
pop
cmpsl
out
int3
inc
sub
ss
imul
ret
sbb
fs
push
pop
xor
dec
or
cmp
sbb
xor
pop
aas
aas
xlat
or
add
mov
jmp
mov
fmuls
lods
lds
nop
push
inc
xchg
lds
inc
dec
sbb
xor
daa
xchg
jge
hlt
sub
inc
dec
call
in
aad
cmpsl
sbb
or
push
pop
pop
aad
mov
xchg
outsl
mov
lea
push
cwtl
jae
jg
jnp
insb
repz
andl
aaa
and
mov
jmp
ljmp
mov
mov
mov
test
or
cli
sbb
lods
push
enter
push
aam
xlat
sbb
sahf
leave
ljmp
sbb
mov
add
imul
add
xor
cld
xorl
xchg
es
fisttpl
aam
adc
mov
sahf
xor
data16
or
jecxz
lods
mov
sahf
mov
adc
mov
add
mov
sub
or
sbb
cmpsl
jmp
outsl
dec
or
sbb
stos
jle
sahf
xchg
inc
stos
xlat
fs
jbe
cmp
xchg
push
loope
ret
outsb
dec
and
dec
rolb
cli
jl
imulb
pop
outsl
lods
inc
sbb
adc
add
push
repnz
xchg
adc
mov
popa
popa
ror
cmp
ret
pop
nop
or
xchg
push
imul
hlt
inc
xor
daa
ret
test
and
inc
test
fldl
leave
imul
sub
dec
push
push
lret
adc
mov
cmp
cmp
outsb
mov
in
sti
xor
test
ret
mov
mov
pop
push
mov
test
add
pop
sub
jmp
sub
test
add
movsl
mov
adcl
fistps
outsb
sbb
adc
sbb
and
dec
sbb
push
sti
mov
stc
repz
xchg
xchg
push
mov
mov
jnp
pushf
jge
push
pop
xchg
or
in
fcmovne
push
popa
ja
cmpsl
ficompl
dec
data16
in
js
ja
or
addb
lock
mov
fwait
out
mov
mov
dec
lahf
out
cli
mov
mov
push
fdivrl
ret
inc
pop
lods
inc
ljmp
lods
loope
loopne
pop
mov
add
das
mov
mov
stos
jle
and
dec
cmp
in
lret
cli
in
clc
or
mov
incl
inc
jmp
jg
dec
std
mov
sbb
mov
ds
sub
loop
sub
mov
mov
lret
subl
lcall
push
rcr
or
jns
cwtl
mov
movsl
fadds
or
pop
mov
clc
pop
add
push
into
cs
addr16
imul
loop
ds
in
pusha
imul
loopne
rolb
sbb
int
mov
leave
das
pop
push
xor
mov
xor
ret
push
pop
adc
ror
xchg
dec
mov
xlat
and
pop
push
mov
outsl
mov
adc
mov
mov
fcomi
insb
mov
xor
mov
mov
add
scas
test
mov
insb
sahf
xchg
neg
push
roll
jbe
fistl
out
rcrb
in
push
dec
cmp
bound
movsb
pop
dec
adc
add
push
sub
fwait
cli
jb
imul
lods
or
or
xchg
cmpps
clc
sbb
xchg
xchg
fwait
cmp
jne
mov
push
inc
test
pop
iret
popf
test
or
rep
push
push
inc
scas
arpl
mov
dec
negb
fs
int
pop
hlt
xor
loopne
adc
push
push
addr16
ds
rclb
daa
loop
test
cmc
addb
ror
popa
pop
push
fimuls
dec
sti
mov
add
in
std
outsl
xor
out
sbb
sbb
jb
jo
repnz
add
inc
in
inc
fld
aaa
xchg
xor
jmp
gs
dec
mov
mov
int3
or
jne
lret
and
mov
jg
jp
in
call
mov
aas
in
orl
dec
fildl
push
push
xchg
mov
testl
scas
cmpsb
out
jge
in
xor
loope
pusha
iret
lahf
hlt
stos
mov
push
mov
mov
lahf
push
xchg
fdivl
nop
imul
loopne
int3
movsb
push
aam
pop
out
dec
ss
or
mov
les
and
xor
clc
fdivrs
sbb
divb
sub
dec
push
test
xor
ds
pushf
sbb
jnp
cmp
popa
xchg
fistpll
insl
int3
mov
lea
das
sti
into
mov
ja
sbb
push
sub
mov
out
nop
mov
lret
cmp
js
inc
sub
or
dec
data16
out
mov
insb
add
pop
iret
ret
nop
mov
push
and
sti
add
xchg
sbbb
idivl
sub
mov
shrb
pop
add
mov
outsl
lahf
aad
aam
jne
or
jns
push
mov
jae
dec
and
adc
lds
mov
adc
inc
cmp
jmp
xor
fs
mov
add
fwait
repz
add
call
jae
decb
dec
jp
jg
cmpsl
sarl
and
or
std
sub
lods
mov
lret
and
jnp
mov
repz
inc
aad
cmpl
out
adc
js
xor
pop
fwait
pop
cmpsl
push
outsl
push
fsub
jle
inc
cmpsl
cltd
jne
je
sbb
out
dec
cmp
shlb
rcrb
imul
mov
mov
xchg
in
rcl
roll
cld
jl
iret
adc
xchg
adc
into
xchg
push
adc
movsl
or
addb
or
mov
and
xchg
in
ss
sbb
mov
call
outsb
lret
push
int
xchg
in
fsts
fcompl
in
pop
mov
out
jmp
adc
inc
clc
out
in
stc
sbb
mov
lahf
mov
mov
sub
adc
or
or
push
repnz
push
mov
test
in
sbb
mov
scas
std
sub
adc
jno
sub
aam
pushf
pop
std
xchg
es
insb
mov
push
jmp
adc
mov
int
popa
mov
pop
mov
mov
cmp
out
push
and
mov
fstps
pushf
dec
mov
jl
loope
jp
fs
out
sub
mov
or
scas
fdivrl
mov
pop
push
and
lahf
aam
xchg
repnz
cmc
mov
mov
push
fimull
loopne
clc
ja
mov
pop
aam
jp
fdivrs
sub
fwait
hlt
cmc
push
pop
pop
jo
shlb
adc
test
testl
xchg
jbe
pop
xchg
cmp
pop
aaa
call
inc
add
mov
cs
adc
cltd
dec
jo
adc
adc
and
lds
push
cltd
stc
movsl
rcll
imul
sbb
adc
ja
and
or
sbb
ljmp
shrb
std
test
or
jbe
fnsave
jnp
inc
cmpsl
jae
int
lea
repnz
inc
add
in
add
testb
popa
test
jp
lret
xchg
inc
lcall
xchg
aam
xlat
cmpl
push
and
cmp
mov
dec
cmp
lahf
fwait
lds
or
clc
insb
push
jge
sub
dec
into
mov
fidivs
sub
jo
sub
mov
mov
jg
add
movsb
push
xchg
push
cmp
mov
mov
or
mov
movsl
lods
add
pop
push
add
icebp
dec
lock
out
pop
inc
mov
scas
cmpb
nop
jo
push
add
xchg
mov
xchg
jmp
int3
mov
xor
popf
mov
xorl
mov
fadds
jbe
lds
shl
in
lds
insl
pop
mov
ja
lret
cs
sub
add
cmp
lods
cmc
mov
jecxz
mov
sub
rcrb
fbstp
inc
sbb
adc
xchg
push
in
gs
jg
inc
clc
jmp
push
aaa
xchg
cmc
insb
jle
test
and
pop
inc
lret
fisubrs
leave
adc
dec
jle
test
pop
out
int
dec
dec
fcmovu
aad
cli
jp
jge
adc
pop
inc
repz
mov
cltd
call
cmpsl
flds
fcompl
dec
in
loop
or
sbb
movsb
pushf
mov
rolb
shl
pop
jmp
dec
push
inc
fsts
loop
push
adc
or
repnz
inc
xchg
and
or
scas
rorl
repz
dec
hlt
aas
ret
sub
call
or
je
pop
in
or
in
cmp
and
and
mov
aas
jnp
jl
in
insl
lret
adc
mov
xor
xchg
sti
mov
jne
orb
inc
scas
sub
mov
insl
mov
jl
in
jb
sbb
sbb
adcb
push
mov
pop
mov
pop
mov
jbe
sub
jg
mov
mov
xlat
cs
je
cmp
mov
fildl
mov
imul
sub
push
xchg
subl
clc
fadds
pop
loop
or
or
and
jp
lods
sbb
xlat
and
add
pop
xlat
pop
out
cmc
testb
sbb
fs
inc
addl
jne
lret
or
jecxz
js
cmp
sub
imul
inc
mov
loopne
cltd
mov
add
repz
inc
outsl
test
cmpsb
stos
jne
lret
mov
push
xchg
stos
jmp
jnp
xor
mov
xor
lret
xor
cmp
sbb
and
mov
daa
jb
mov
pop
cmovo
inc
mov
nop
mov
in
inc
inc
lret
lea
hlt
sub
cmpsb
dec
cmp
pop
push
dec
ss
xor
add
mov
sahf
pop
aas
add
lock
lret
rclb
and
push
adc
nop
jg
nop
rcl
test
cmpsb
mov
adc
rcrl
xorb
hlt
lods
in
jge
das
pop
orb
sbb
push
sbb
mov
jb
sub
enter
cld
clc
aad
les
add
or
clc
mov
mov
mov
jl
pop
xor
pop
jmp
and
stc
push
data16
sbb
push
std
test
push
cli
lds
loop
sahf
cltd
mov
sarl
icebp
add
gs
sbb
in
mov
lods
mov
mov
jge
jae
push
fisttps
mov
pop
pushf
mov
aad
movsb
daa
pop
mov
push
lods
fwait
enter
pop
xchg
or
inc
lock
nop
aaa
fmul
daa
mov
mov
adc
mov
dec
jg
icebp
aam
aad
in
rol
push
imul
loopne
std
in
mov
xchg
cmc
xchg
and
rorb
add
add
clc
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
jmp
repnz
repz
fwait
pop
lods
jmp
adcl
addl
shll
ljmp
and
jl
outsl
fmull
sub
add
sub
xchg
test
rcll
and
aas
pop
xchg
mov
cmp
lds
icebp
int3
mov
lret
ja
cs
lahf
lock
bts
push
dec
fistpll
test
adc
ds
fiaddl
enter
stc
push
popf
sub
cmpsl
jg
addb
inc
lods
out
lret
outsl
and
fs
sub
and
mov
dec
aas
lods
cwtl
pop
bound
cmp
mov
xchg
lahf
sub
inc
push
imul
push
xor
adc
dec
xor
imulb
enter
out
or
push
xchg
mov
jae
push
mov
jge
js
adc
mov
pop
pop
int
int3
cli
sub
cli
lcall
xchg
loop
cwtl
loope
sbb
sahf
fildll
mov
cmp
cld
pop
jmp
pop
sub
ss
les
push
fs
xlat
fnsave
fisubl
icebp
add
and
jmp
add
insb
movsl
stos
mov
mov
mov
ljmp
fwait
xor
xor
add
repnz
lret
iret
cld
sub
stos
jne
mov
xor
pop
mov
mov
jl
lret
leave
xchg
cld
stos
push
inc
sub
inc
push
jg
or
idivl
jge
inc
adc
cmp
xlat
dec
sub
fiaddl
jge
mov
xchg
gs
xchg
push
pop
stos
cwtl
orb
mov
sbb
xchg
inc
pop
fidivrl
mov
sub
mov
sbb
pusha
sub
mov
sahf
sbbl
inc
and
adc
fmulp
sub
dec
or
or
testl
xor
push
test
ds
pop
cmp
loop
inc
mov
call
push
pop
jecxz
cmp
or
gs
pop
int
xchg
out
pop
bnd
cmp
xchg
into
inc
enter
ret
stos
inc
cmp
fucompp
jnp
orb
loope
ljmp
loope,pn
cmp
pop
xchg
add
and
test
sub
cmp
cmc
shll
call
or
ret
pop
loop
cmp
movsb
and
imul
shll
addb
and
mov
jno
shll
jbe
push
test
add
inc
dec
push
test
arpl
and
iret
aaa
gs
jae
mov
mov
test
arpl
jbe
add
sub
out
cmpl
pop
fbstp
mov
xchg
mov
xchg
mov
sub
inc
pop
dec
call
pushf
jp
inc
aam
jmp
jg
aam
xor
inc
pop
jecxz
xchg
aam
inc
loopne
idivl
sub
mov
lods
push
mov
pop
shrb
xchg
pop
or
mov
pushf
cmp
lock
jle
inc
test
dec
and
or
inc
pop
jae
xor
mov
push
jmp
pop
xchg
outsl
jmp
cmpl
js
decl
inc
stc
scas
mov
inc
xchg
rcll
jae
push
pop
jns
arpl
mov
scas
lret
xchg
cmpsl
jae
jp
int
ss
mov
test
mov
insl
mov
out
stos
adc
stos
cmpsb
sbb
out
push
mov
push
lods
cmp
pusha
mov
rolb
and
cmp
in
insl
in
enter
test
xchg
aaa
jb
rcrb
outsb
testb
and
sarl
cmp
movb
push
cmpsb
imul
push
xchg
movsb
inc
scas
popf
cltd
cmp
push
xor
push
mov
fs
sbbb
shlb
add
es
es
out
pop
lods
aaa
cmpsb
iret
out
mov
repz
lahf
sbb
mov
pop
cmp
rcll
repz
mov
dec
cmp
xor
jne
mov
sbb
pop
or
pop
fs
ja
inc
mov
pop
cmp
divl
dec
cmp
cltd
sar
and
push
aaa
jbe
dec
dec
cmpsb
ffreep
or
lods
push
jecxz
or
fwait
inc
and
outsb
jae
in
mov
cwtl
push
push
shlb
mov
and
xor
pop
push
das
inc
cmp
fistps
jmp
cli
in
adc
cmpb
push
in
rcll
shll
cmpsl
loope
rcl
mov
addr16
cli
test
rcrl
xchg
and
dec
xor
add
loop
sbb
jle
cltd
fcomps
out
jns
outsl
addr16
inc
out
sub
hlt
mov
cmp
jns
sub
mov
pop
dec
xorb
adc
fnstenv
test
hlt
dec
ret
pop
clc
xor
cmp
call
push
and
shlb
push
mov
jp
adc
adc
adc
cwtl
mov
cmp
sub
enter
inc
scas
or
out
sarl
pop
shll
inc
insb
movsl
test
mov
adc
and
lret
cs
mov
push
movsb
cmp
dec
out
fsubrp
in
out
cmp
shl
pop
adcb
shlb
insb
sbb
jmp
addb
ss
shll
sub
adc
js
out
pop
sub
mov
or
mov
call
stc
popa
sbbb
sub
add
pop
rolb
gs
out
js
aaa
loop
cmp
mov
add
fisttpl
mov
or
rol
and
mov
pusha
inc
fldcw
sbbl
cmp
adc
xor
lea
jns
sti
jmp
int3
and
mov
jecxz
clc
cmp
cmpb
sub
adc
cmc
sahf
mov
out
stos
jbe
int3
jmp
test
add
pop
mov
jg
aaa
es
int
dec
dec
cmovg
clc
mov
add
loopne
cmp
lods
lret
cwtl
aaa
inc
out
sbb
outsl
shrb
xchg
mov
xor
adc
bndldx
outsb
or
or
mov
fmuls
sub
jle
or
pop
imull
arpl
mov
xor
push
mov
dec
or
xchg
adc
push
sub
rcll
dec
scas
xchg
hlt
inc
and
leave
mov
ror
jecxz
mov
xor
scas
push
pop
iret
int
fnstenv
lods
outsl
xor
fisttpl
push
xor
pop
stos
leave
jbe
test
leave
fcomp
loopne
lock
movsl
mov
ret
jbe
xor
cwtl
lcall
inc
mov
xchg
test
push
in
out
punpckldq
adc
insb
jg
xor
int3
lea
add
shl
xchg
jge
imul
movsb
jmp
pop
cmc
jge
lahf
mov
out
cld
jnp
pop
pusha
outsb
arpl
clc
cld
add
or
sub
aam
sti
jno
push
stos
jmp
inc
out
scas
sub
jg
loop
int3
pop
sbb
stos
jns
in
adc
mov
or
shl
cmp
push
ret
add
jns
sbb
mov
imul
mov
into
iret
jns
shrb
int3
pop
push
push
test
push
xchg
jne
testl
rorb
pop
das
add
aaa
loope
dec
jo
stos
inc
scas
xchg
dec
push
adcb
jb
movsb
jg
pop
pop
roll
mov
xchg
fs
je
xchg
adc
lret
xchg
or
and
int3
pop
nop
imul
xor
sub
jg
stc
fwait
push
push
clc
loopne
xchg
pop
mov
pushf
orb
lock
int
sbb
stc
fwait
jns
push
movsb
mov
addb
ss
pop
pusha
ret
xchg
in
inc
daa
cs
fxch
pop
shr
mov
cmp
pop
repnz
mov
cmp
jg
jo
mov
test
neg
mov
fwait
leave
loop
ret
popf
mov
mov
stc
aam
ss
loope
mov
popf
ljmp
pop
xchg
dec
jne
cmp
mov
xor
aam
dec
mov
lret
int3
jno
leave
mov
movsl
fcmovne
popa
jne
mov
ja
stos
stos
add
icebp
xor
rcl
mov
push
scas
xchg
fst
lret
xchg
enter
js
mov
sbb
popf
popf
dec
push
leave
sti
pop
xchg
aas
push
inc
imul
out
fdiv
or
mov
sub
scas
mov
hlt
mov
hlt
dec
jp
movlps
ljmp
pop
test
add
imul
and
mov
in
daa
fnstcw
mov
mov
lock
loopne
les
mov
hlt
mov
sub
sub
xchg
gs
sti
lret
cltd
dec
mov
in
sbb
fsubs
mov
scas
outsl
iret
fadds
add
jne
inc
idivl
jnp
add
jmp
ja
das
mov
gs
pop
sbb
cltd
jbe
sub
cmp
vphaddbd
aam
movsl
add
daa
and
sbb
jo
pushf
mov
or
out
jae
nop
das
andb
jecxz
popa
jno
xor
sahf
inc
xchg
mov
sbb
nop
dec
pop
pop
add
movsb
xor
roll
cltd
in
dec
mov
push
lahf
lds
fisttpl
lods
jns
fwait
push
data16
xchg
clc
mov
int
dec
pop
mov
inc
lods
xchg
xchg
pop
and
cmp
mov
and
pop
mov
data16
xchg
mov
call
add
scas
pop
mov
loopne
sbb
subl
out
push
or
push
cmp
sbb
xchg
outsl
push
fs
mov
add
popa
sub
push
jp
mov
pop
insb
in
addb
dec
in
mov
lds
push
repz
push
or
sti
fwait
or
xlat
int3
hlt
jecxz
sti
push
ret
test
dec
int3
in
mov
ljmp
out
out
jle
mov
arpl
test
or
sub
fidivl
nop
hlt
lret
jge
xorb
add
aas
into
fildll
imul
sub
jle
mov
imul
pushf
loopne
and
mov
pop
es
xorl
mov
cwtl
push
leave
sbb
mov
cmp
in
dec
aad
mov
adc
push
icebp
push
repz
cmc
inc
jge
repz
dec
outsl
clc
out
daa
rcll
stc
mov
dec
iret
fcmovnb
inc
jo
arpl
in
push
out
adc
int3
mov
sarb
mov
pop
or
lret
ret
xchg
pop
cmp
ficompl
insl
dec
ljmp
push
loop
insl
or
pop
sub
add
ds
test
popf
lock
data16
scas
adc
xor
jne
fcoml
test
dec
fnstenv
cli
pop
inc
mov
or
out
push
cmp
xor
sub
and
inc
pmovmskb
into
mov
mov
out
incl
das
ss
das
fidivl
loop
enter
jg
aam
ljmp
out
pop
mov
and
and
add
push
in
push
xchg
xor
push
xor
loopne
outsb
sbb
jp
jo
in
jmp
cltd
stos
jg
test
xchg
dec
or
add
inc
xor
lock
sub
jl
jmp
jo
jns
into
test
mov
pop
lret
dec
pusha
fstpt
or
sbb
cld
dec
pushf
push
jae
sti
andl
vminss
sbb
mov
pop
test
jbe
fs
test
pusha
push
mov
iret
push
idivl
sub
aas
sub
jb
xchg
imul
dec
outsl
mov
or
out
adc
push
test
jmp
sti
sbb
or
fwait
and
mov
test
mov
sub
imul
mov
mov
dec
ljmp
jbe
jp
sub
aad
test
cmc
es
adc
jge
xor
jg
jg
sbb
and
sub
push
iret
mov
pop
hlt
inc
push
arpl
xor
inc
push
faddl
mov
pop
in
rcll
cmp
cmp
in
mov
push
push
daa
pop
xchg
imul
xor
or
adc
pop
das
mov
mov
fwait
mov
inc
ret
jecxz
xorb
lods
pop
pusha
add
sahf
pop
je
testb
cwtl
push
cmpb
pop
daa
add
roll
sub
inc
adc
xor
test
popf
fdivrl
ds
popa
cmpsb
jae
repnz
out
sbb
xor
rcll
stos
jge
and
clc
les
ljmp
in
inc
fcompl
mov
shl
sbb
or
push
icebp
aas
jmp
je
int3
les
adc
daa
mov
mov
cli
xchg
shll
int
xchg
lds
sub
imul
and
xchg
stos
push
inc
sahf
push
fisttpl
sbb
shrl
out
sbb
pop
mov
stos
mov
rolb
cltd
fildl
or
sar
movsl
push
inc
rcll
xor
jns
or
fwait
mov
push
push
imulb
cmpsl
pop
jmp
lea
pop
addr16
jle
lock
sub
lret
xchg
test
shll
jge,pt
jnp
mov
mov
enter
and
add
inc
out
test
mov
mov
adc
pop
fstp
sub
aad
jne
cmp
push
sahf
pop
or
lods
test
pop
mov
addr16
in
mov
mov
jmp
stos
and
fs
push
mov
cmp
cmc
sub
sub
xchg
adc
loope
dec
add
iret
cmp
inc
fs
jne
mov
gs
es
fmul
rolb
or
out
mov
std
xchg
hlt
mov
repz
aas
and
mov
std
cmc
xchg
push
or
fidivrl
fsubr
in
mov
inc
inc
adc
sub
leave
xchg
sub
jb
jle
insb
test
xchg
es
xor
jb
sub
adc
test
jg
lds
das
mov
cmp
mov
pop
pop
leave
add
lods
dec
call
add
testl
repz
test
pop
and
xchg
fwait
pop
fdivrl
notl
arpl
xchg
mov
ljmp
push
ret
jo
mov
cmp
popf
lds
mov
dec
jmp
cmp
out
jo
pop
fwait
mov
sub
pop
sahf
jnp
add
pop
not
sub
and
sub
lret
mov
in
roll
add
cmp
mov
rcr
stos
push
and
jle
jno
rcrl
pop
je
in
push
call
jns
repnz
movsb
fcmovb
dec
roll
popf
pop
adc
addr16
mov
jne
std
and
iret
push
popf
cmp
fidivrs
popa
pop
pop
add
es
stos
mov
daa
pop
aaa
add
es
fildll
je
mov
clc
lret
cs
mov
mov
push
jl
rorl
imul
mov
inc
mov
pop
mov
sbb
cmp
ficoml
sub
or
aas
xchg
cmp
jo
lret
mov
mov
es
or
test
pushf
mov
pop
xor
lret
and
inc
dec
out
sbb
adcb
and
test
mov
mov
mov
cmpsl
aaa
mov
inc
idivb
sub
dec
lods
sbb
test
clc
dec
fistpll
js
jb
ucomiss
rorb
bound
cmpsb
addr16
adc
int
add
xor
es
pop
ja
sbb
pop
jbe
cmpsb
or
mov
daa
inc
lea
add
outsl
mov
fs
mov
les
xchg
dec
shlb
mov
repz
mov
adc
mov
adc
divb
je
jl
int
out
sbb
fnstsw
and
repz
and
sarb
rcrl
lahf
sbb
pusha
dec
inc
ds
mov
sbb
jge
add
incb
call
ficompl
pop
cmp
aas
subb
sub
xchg
rcll
mov
aad
xchg
addb
xor
clc
pop
shl
mov
xorb
mov
idiv
jmp
movsb
out
jo
xchg
inc
sub
inc
dec
and
and
sbb
out
in
and
dec
enter
mov
jno
or
sub
xchg
jbe
xchg
or
adc
popf
std
sbb
fidivs
mov
sub
cmp
and
jp
sub
in
pop
test
jo
pop
or
and
lahf
jbe
inc
js
ret
shr
dec
fstl
inc
and
jne
js
and
pop
pop
into
xor
jo
xchg
mov
addr16
cmp
sub
cmp
test
sbb
lock
nop
dec
rorb
into
test
pop
ja
cmp
popa
cld
dec
leave
mov
adc
ror
je
rorl
nop
loopne
and
jmp
fimull
xlat
sti
iret
cli
jmp
ljmp
ljmp
sub
inc
filds
jmp
js
iret
sbb
pop
push
ja
sub
inc
icebp
enter
push
cmp
loop
dec
adc
jmp
int3
sahf
mov
xchg
mov
scas
lret
popa
sbb
fsubs
shrb
stc
and
jae
mov
inc
sub
out
push
mov
cli
xorb
dec
int
inc
xchg
push
pushf
jecxz
lret
xor
jmp
call
inc
push
sub
pop
fstpl
sub
add
mov
pop
jl
cmp
mov
shl
lock
fistpl
mov
inc
dec
pop
mov
and
das
test
aam
int
jnp
inc
repz
sbb
xchg
inc
inc
in
fists
stc
movsl
mov
data16
adcl
jnp
fadds
cmp
sbb
mov
mov
jnp
and
xlat
cmpxchg
jge
ja
rol
cmc
pushf
int
mov
mov
fcomi
and
push
jecxz
lods
jmp
lret
ret
lahf
pop
dec
stc
xor
sbb
lock
lods
and
sbb
cmp
cmc
inc
fidivl
loop
cli
ja
outsl
cmp
sbb
ficoms
mull
xchg
leave
jbe
fwait
xchg
lods
jno
arpl
sub
inc
inc
cmpsl
mov
out
push
pop
or
pop
in
xchg
xchg
stc
hlt
and
and
cmp
or
je
fidivrl
pop
fmul
sti
not
mov
call
or
aas
pusha
in
sub
iret
cmp
or
mov
scas
fistl
xlat
subl
push
ja
lods
sbb
mov
lock
ja
xchg
mov
or
test
loopne
mov
inc
daa
rolb
loope
mov
outsl
aad
sbb
push
sub
insb
in
in
popf
cmp
repnz
imul
dec
test
aam
jmp
in
ljmp
sub
mov
lcall
scas
sbb
ret
push
test
cltd
dec
jnp
and
fiaddl
fmull
lds
jle
je
mov
xchg
iret
ja
data16
mov
sub
iret
jecxz
cmp
into
mov
and
add
dec
fwait
sub
xchg
mov
and
inc
int3
cmp
js
bound
jle
push
pop
jle
pop
mov
xchg
sbb
xor
ss
or
xchg
mov
ljmp
dec
cmpsl
mov
enter
je
push
in
lret
inc
lret
mov
mov
mov
push
inc
mov
mov
jp
mov
jp
aam
repnz
cmp
ret
and
ret
arpl
imul
and
ret
imul
std
cld
mov
adc
shr
adc
push
inc
pop
pop
mov
xchg
jbe
jns
pop
imul
sbb
push
outsl
pop
sbb
insl
dec
xor
fistl
and
sub
lea
pop
lret
pop
push
sub
or
xchg
pop
xchg
and
jmp
arpl
or
mov
sbb
maskmovq
negl
cli
jo
sti
roll
lea
aam
fistps
fs
push
pop
sbb
add
cmovae
iret
push
sub
scas
sahf
lret
sbbl
sarl
pop
adc
or
or
xor
clc
add
lret
mov
scas
jno
imul
pop
pop
fcmovne
in
int
jecxz
lods
mov
loope
push
jle
shr
das
cmp
mov
mov
mov
mov
cmpsb
in
test
std
out
fbld
fistpl
jae
negb
mov
fmulp
cwtl
imul
fnstcw
xchg
dec
imul
repz
xchg
lds
xchg
cli
mov
insb
loop
mov
inc
out
pop
cmp
out
push
dec
add
por
rcll
loop
push
orb
lret
or
cmp
xor
leave
cmp
push
jl
mov
dec
scas
outsb
fldcw
pop
push
mov
es
aas
mov
vmovaps
lock
adc
mov
jecxz
and
test
mov
out
shll
dec
mov
inc
addl
icebp
pop
das
xchg
mov
jno
out
das
dec
add
xchg
sarb
in
mov
pushf
adc
add
out
xor
dec
adc
ror
cmp
cli
jnp
test
mov
add
lret
negb
call
jb
insb
hlt
lcall
fisubrl
popa
sub
push
addb
js
pop
lock
ljmp
pop
ss
fsubs
push
adc
push
push
dec
mov
and
dec
add
cmp
xorl
cmpsl
mov
sbb
repnz
sub
pop
xchg
push
ja
and
test
xor
jo
jp
imul
sahf
lea
sub
out
xorb
mov
sub
sbb
int
push
push
pop
cmp
das
int3
out
icebp
mov
cld
push
adc
mov
in
push
xor
mov
mov
and
inc
xchg
mov
xor
push
push
mov
mov
adcl
mov
mov
lock
roll
pusha
fbstp
js
nop
loop
adc
lret
movsb
popa
inc
sub
aas
xor
dec
les
adc
rcrb
nop
fbld
into
shlb
mov
fwait
sub
adc
pop
gs
mov
xorb
popa
jbe
lock
xor
lcall
pop
pop
pushf
add
outsb
jns
sub
xchg
mov
push
jl
outsb
aad
in
mov
or
mov
inc
popf
pop
shrb
jp
pushf
xchg
mov
mov
neg
mov
hlt
ja
pop
insb
jecxz
xchg
rol
addb
mov
je
shrb
adc
popa
fbld
sub
pop
sar
sar
stos
sbb
xchg
rep
aam
add
pop
jns,pt
in
xor
mov
jecxz
jl
jb
inc
lods
addr16
or
sbb
dec
scas
push
jo
dec
or
push
pusha
mov
mov
sub
rolb
les
sbb
mov
clc
mov
roll
out
push
sbb
fcomip
pop
add
cmp
imul
xor
adc
and
sbb
bound
call
adc
adc
stos
dec
outsb
dec
and
imul
divb
push
add
pop
sub
mov
aaa
scas
push
lret
icebp
inc
loope
cmp
ljmp
rcrl
mov
fcom
test
push
adc
cmpsb
jmp
insl
and
cli
push
sti
fildll
int
loop
sbb
in
popf
bound
loope
cmp
xor
loope
movsl
or
sbb
in
dec
in
mov
cltd
sub
pop
lret
sbb
sarl
or
popf
or
fst
ds
fsubrs
pop
xor
in
sub
loopne
into
out
sub
sub
jb
jmp
sub
ja
insl
rorl
push
scas
lock
push
xor
and
das
je
mov
and
mov
add
les
ss
test
aam
fdivrs
insb
ror
push
sbb
mov
js
mov
mov
dec
mov
cld
nop
rolb
movsb
jb
mov
aaa
sub
mov
push
add
imul
xor
and
push
sub
sub
out
pushf
aas
mov
pop
outsl
sbb
movsl
cmp
dec
ficoml
push
jl
loopne
pop
fucom
stos
pop
dec
push
push
outsl
mov
pusha
ret
ret
cmp
mov
fisttpl
jecxz
test
inc
stc
and
inc
out
insb
gs
jl
ds
and
fbstp
add
addr16
push
and
scas
in
mov
add
test
jne
cmp
jecxz
push
fucomp
or
push
inc
and
das
cwtl
push
sbb
das
into
mov
rcll
mov
mov
add
imul
jge
into
jp
outsl
idivl
outsb
ret
sahf
or
ret
dec
in
adc
fisubrs
cld
daa
call
xchg
jp
adc
iret
dec
push
ret
imul
add
dec
push
mov
pop
sahf
jmp
test
dec
push
pusha
mov
mov
fwait
mov
xchg
jge
daa
out
aam
enter
or
testl
test
ds
add
inc
or
enter
lods
or
call
jo
sbb
fwait
lcall
inc
sub
mov
and
cmp
sub
pushf
jae
outsb
push
mov
cmpb
xchg
sub
mov
xchg
int3
push
mov
lcall
lret
add
xlat
pop
test
vshufps
push
fisubl
test
scas
add
push
mov
lea
xchg
in
xor
inc
adcb
push
fmull
dec
jno
pusha
addr16
inc
mov
or
dec
sub
ljmp
jns
mov
ret
pop
adc
push
cmpsl
mov
push
cmp
jne
ret
adc
push
cs
jl
jmp
insb
lods
icebp
xor
dec
test
push
stos
sub
cmc
xor
pushf
mov
icebp
push
jo
add
mov
xchg
cltd
lcall
pop
push
inc
mov
jle
and
add
xchg
mov
pop
push
int3
in
jns
dec
and
push
jns
mov
lds
pop
mov
mov
mov
cltd
stos
movsl
sub
inc
push
push
outsl
loopne
mov
pushf
lret
xchg
jp
and
mov
pop
xchg
pop
add
es
lods
loope
mov
aas
mov
dec
enter
cmp
bound
stos
lods
les
and
xor
dec
in
divl
out
and
testl
std
jne
sti
push
jns
push
imul
mov
mov
test
xchg
leave
fs
mov
js
bound
xor
jnp
mov
pushf
and
fwait
mov
jg
or
pop
test
imul
stos
sub
or
lds
push
les
dec
dec
out
sbb
pop
cmp
call
in
scas
ret
mov
js
cmp
mul
jmp
jae
cmp
adc
mov
adc
push
and
jmp
call
mov
cmpsl
jbe
inc
repz
inc
ds
out
fdiv
loope
aam
dec
cltd
xchg
loop
push
fwait
fwait
jmp
pop
popa
mull
and
mov
or
push
jmp
push
lods
nop
mov
push
mull
fcompl
stos
shr
call
jmp
push
push
inc
out
mov
in
aaa
repnz
aam
sub
dec
cs
lret
xor
aaa
push
dec
nop
push
mov
mov
negb
dec
loope
pop
mov
push
lret
icebp
adc
shlb
es
nop
jbe
popa
aam
in
loop
or
or
scas
fstl
js
sub
dec
sbb
dec
ret
lods
scas
test
sub
stos
mov
lret
mov
jmp
mov
es
ret
hlt
xchg
fs
lods
pop
jle
movq
dec
cli
andb
mov
mov
push
push
out
mov
or
rcrb
les
pop
dec
ret
inc
push
xchg
or
dec
test
xor
enter
iret
jg
push
xor
dec
arpl
or
das
xor
cmpsb
ficompl
pop
add
imul
push
mov
mov
pop
cmpsl
jmp
cmp
sbb
lds
insl
dec
pop
push
dec
mov
and
mov
dec
inc
rclb
dec
leave
dec
xor
sub
sub
outsb
clc
add
mov
mov
bound
je
decl
call
cmp
xor
mov
jnp
mov
add
jnp
xchg
cmpsl
adc
add
mov
nop
and
and
sub
xchg
int
cmc
fistpll
xchg
mov
int
sbb
pop
jae
inc
xchg
sbb
fcmovbe
enter
les
xor
loop
dec
movsb
cli
mov
jecxz
enter
cld
ret
outsb
jecxz
mov
cmc
dec
int3
in
sbb
flds
scas
adc
lods
inc
stc
cwtl
je
aaa
sub
jbe
pop
lahf
sbb
sbb
cmp
in
fs
push
ficomps
loop
cmp
pushfw
addr16
cmp
mov
cli
mov
fs
or
jbe
and
inc
jnp
arpl
in
mov
dec
stos
stc
push
dec
and
lods
bound
imul
inc
ds
adc
icebp
or
adc
pxor
push
out
mov
outsl
xor
sub
sub
jmp
adc
test
or
push
jle
inc
addb
mov
dec
add
lds
mov
jmp
mov
sbb
jmp
scas
or
leave
out
sub
mov
sbb
sbb
adc
mov
cltd
gs
out
cmpsl
xchg
xor
push
and
int3
push
adc
and
subl
test
mov
jmp
in
lea
mov
bound
cmpsb
out
ret
mov
sbb
jbe
add
push
sbb
push
pop
sarl
fidivrs
mov
out
xlat
jo
call
bound
shr
push
mov
xchg
and
cs
pop
xchg
mov
sbb
sub
xor
jno
add
inc
mov
loopne
xchg
bound
push
inc
or
jb
mov
mulb
mov
push
mov
ret
fimull
out
and
sbb
cmp
in
adc
out
mov
xchg
sub
cltd
mov
lock
sahf
mov
pop
andl
pop
sbb
iret
lods
and
iret
rcrb
cmpsl
shll
or
fildl
sub
insl
lret
ljmp
lods
xor
lods
loop
lret
push
jbe
xchg
mov
enter
je
mov
xchg
dec
mov
test
mov
cmp
push
jmp
decb
cmc
mov
sar
ja
and
dec
add
mov
outsb
test
adc
push
push
test
jns
ja
jno
scas
lods
sbb
ret
cmp
lcall
mov
xor
pop
sub
adc
stos
lock
pop
xchg
popf
and
mov
mov
leave
inc
dec
push
stos
push
icebp
imul
sbb
or
sub
lahf
push
cmp
inc
daa
leave
ljmp
fwait
jle
repnz
jle
cwtl
call
push
jp
sarb
in
mov
int
mov
and
push
repnz
scas
leave
popf
add
xlat
dec
fimull
adc
jl
enter
loope
and
in
aad
mov
inc
out
adc
addr16
shlb
lods
and
or
pop
addl
gs
adc
push
xchg
sbb
sub
push
std
adc
mov
les
xor
lcall
insb
xchg
ret
test
cli
insl
arpl
pop
lret
cmp
fdivrs
test
pop
in
mov
dec
iret
sbb
cmc
loope
imulb
outsb
subb
adc
and
push
nop
pop
sbb
cmp
sub
xchg
sub
js
push
bound
mov
imul
pop
mov
es
push
lock
sub
fsubrl
push
xchg
jmp
push
loope
test
jbe
mov
push
and
ret
jo
popa
adc
cltd
dec
fsubr
sbb
popa
or
aas
lahf
ret
jecxz
fwait
outsl
ja
int3
xchg
xchg
adc
and
mov
push
push
sub
ret
loope
jno
cli
jl
inc
into
bound
inc
push
fcmovb
loope
dec
cmp
pop
pop
cwtl
cmpl
mov
lds
clc
sti
mov
push
loope
cli
cld
movsb
xchg
mov
imul
dec
push
inc
mov
cmp
xor
jb
push
mov
xor
xchg
scas
xor
ljmp
fildl
inc
jmp
mov
shld
in
stos
icebp
leave
dec
cli
test
push
call
dec
cmpsl
sbb
inc
insb
jns
fildl
and
inc
add
adc
lods
fwait
lahf
push
xchg
loop
std
sarl
sub
je
or
lock
sub
pop
inc
push
jb
mov
out
sbb
js
push
rorb
push
jnp
cld
push
add
imul
push
lock
xor
mov
xorb
test
xor
pop
add
gs
inc
adc
push
fnsave
movsb
pop
dec
xchg
in
in
hlt
cs
and
call
cmpsb
add
sbb
sbb
in
sti
mov
aad
cltd
pop
adc
movsb
mov
push
out
pop
mov
pushf
mov
xchg
divb
aaa
movsl
faddl
and
push
punpckhdq
ja
add
sti
movsl
and
sub
push
insl
xchg
jecxz
stos
add
aad
stos
pushf
fistl
mov
les
andb
jbe
pop
mov
and
xchg
out
sbbl
dec
jle
pop
add
xchg
jle
jle
rorl
jno
ja
inc
mov
sub
xchg
fcoms
mov
sti
dec
fistpl
adc
mulb
pop
in
or
push
in
push
mov
cmp
pop
mov
and
dec
xor
into
jmp
inc
mov
push
fidivrl
mov
and
jge
sub
aam
sbb
jae
add
enter
imul
pop
mov
out
xor
push
sub
jg
mov
mov
adc
cli
test
jne
adcl
mov
push
in
int3
push
pusha
es
insl
xor
push
shlb
cmp
fcmovnbe
popf
imul
stc
cmp
ficoml
xchg
and
ds
rcl
adc
loopne
inc
jbe
addr16
mov
mov
lahf
push
cmpsl
sub
loopne
dec
jmp
sbb
lds
push
mov
mov
sbb
into
sub
adcl
rcl
scas
jp
push
das
push
les
xchg
movsl
je
fdivrp
pop
jae
ret
sarl
scas
fisubl
daa
pop
test
data16
push
push
pop
cltd
fisubrs
mov
sbb
lods
in
jbe
adc
xchg
mov
repz
mov
or
sub
pop
adc
push
inc
cld
xor
js
adc
push
mov
cmp
mov
lea
inc
mov
addb
jo
cmp
or
out
cmp
jo
pop
nop
test
and
pop
psllw
mov
mov
dec
ss
adc
cmp
les
add
jo
gs
mov
push
leave
ss
jbe
xchg
stos
addr16
lret
mov
jno
push
scas
test
mov
xlat
push
push
xchg
in
ffreep
cmp
roll
shlb
ljmp
push
outsb
test
inc
iret
iret
adc
adc
fxch
loop
scas
pop
shrl
cmp
cli
popf
icebp
add
mov
dec
sti
lcall
movsb
or
repnz
scas
lea
imul
cmp
loopne
or
out
push
pop
paddsb
popa
and
daa
sbb
mov
cmpb
hlt
testb
mov
imul
push
jge,pn
lahf
jbe
bound
ror
call
mov
pushf
aaa
mov
andl
int3
and
mov
push
ljmp
jle
add
test
mov
mov
fmull
call
jle
ret
inc
add
lods
int3
call
push
jae
jbe
jbe
cld
and
and
mov
or
in
mov
into
push
rolb
and
sub
ficoms
mov
aam
daa
add
and
mov
pop
es
sub
pop
mov
add
mov
gs
ret
xchg
push
cltd
mov
xorl
arpl
jbe
loopne
push
cmpsl
or
sbb
sbb
xor
daa
jmp
cli
mov
loope
adc
test
xor
sub
inc
fsubr
xchg
mov
sub
movsb
push
xor
mov
push
icebp
dec
mov
jg
insl
scas
daa
mov
adc
jb
jne
lret
dec
pop
insb
xor
push
icebp
nop
pop
lret
sbb
xor
jo
outsl
mov
mov
in
scas
aaa
lahf
adc
mov
mov
pop
push
lcall
jno
repnz
in
mov
out
roll
into
in
out
lret
push
sti
shrl
mov
outsb
mov
ss
add
xchg
or
and
push
dec
mov
leave
adc
xor
lea
in
sbb
sub
js
cwtl
jno
and
mov
add
and
and
das
cli
or
jmp
fsubl
out
ficompl
das
sbb
mov
xchg
xchg
cs
imul
cmp
mov
inc
jp
adc
dec
fistpl
arpl
repnz
mov
mov
movsl
jo
in
ljmp
inc
aas
fisttps
pop
sahf
bound
cmpb
aad
aas
inc
mov
addr16
les
clc
dec
dec
fnstcw
dec
dec
scas
push
lods
cmpsb
mov
push
inc
push
jmp
fiadds
xor
aad
jno
and
inc
cmpsl
fcomps
cli
mov
pop
pusha
fstps
pop
cs
pop
and
and
inc
jnp
mov
inc
fbstp
mov
call
push
or
int
pushf
or
cli
cmpsl
mov
insb
loop
loope
fcoml
inc
test
loope
ljmp
in
or
xor
xchg
mov
xor
xor
jne
inc
stos
stos
pop
mov
inc
mov
je
repz
fs
and
lods
arpl
jb
dec
ret
push
dec
push
xor
loope
xor
je
xor
jno
lea
xorb
add
dec
cmp
pop
jmp
shr
dec
inc
jmp
jge
jp
sbb
fsubl
sahf
add
adc
jge
addr16
sbb
mov
scas
sbb
nop
imull
mov
lods
arpl
dec
fmul
cwtl
cs
add
jecxz
xor
movsb
lahf
stc
add
outsl
aaa
cmc
in
sub
rclb
in
inc
adc
addb
or
push
xchg
mov
add
inc
sbb
imul
int3
sbb
mov
cmp
jmp
jo
xor
aaa
sub
mov
mov
in
inc
push
hlt
or
idivl
arpl
call
dec
xchg
adc
mov
adc
pop
ljmp
arpl
dec
leave
loop
out
add
xchg
and
clc
cs
mov
inc
fwait
push
out
enter
clc
mov
out
inc
mov
push
dec
fidivrs
mov
mov
ja
cmp
loopne
rcrl
jno
jecxz
lods
shl
stc
push
xor
lcall
mov
adc
or
in
mov
add
lock
push
or
into
mov
xor
jnp
loop
xor
jb
mov
les
test
les
mov
lcall
mov
and
sahf
jle
pop
in
sbb
call
mov
jne
xor
mov
cmc
fimuls
arpl
mov
stos
jnp
mov
in
sub
ret
stos
addr16
add
dec
mov
jp
jmp
and
sar
ss
leave
mov
ljmp
sarl
pop
rorb
adc
cli
inc
push
cs
mov
cmp
pop
rclb
mov
push
aaa
loopne
lret
sbb
sub
xchg
or
jecxz
iret
mov
mov
outsl
sbb
xor
ret
mov
mov
mov
jb
mov
inc
adc
cmp
call
cmp
lock
addl
push
cmp
dec
pop
sub
dec
mov
xchg
push
lods
movsb
out
mov
mov
test
fs
imul
push
imulb
mov
mov
fwait
out
test
mov
sbb
cs
jg
loope
mov
mov
ret
adc
out
in
insl
shll
test
adc
cmpsl
pop
std
test
test
xchg
or
push
add
out
fxch
lock
mov
lods
jo
sub
mov
arpl
fwait
adc
jp
push
jl
rclb
mov
adc
xchg
insl
mov
mov
pop
test
popl
lods
or
pop
mov
adc
stc
pop
push
loope
inc
xchg
jo
push
sti
cld
mov
xor
in
pop
lods
shlb
cmpb
xchg
lret
xlat
rclb
aad
jg
jle
push
pushf
sub
cmpsb
cmp
add
enter
pop
dec
movsl
cmpsb
test
inc
sub
das
das
mov
jmp
xor
sub
pop
xor
mov
cli
cmc
inc
mov
movsb
addb
adc
cmp
test
cmp
adc
pop
mov
sub
xchg
outsb
or
cmc
shlb
inc
cmp
mov
ljmp
leave
inc
xchg
lock
lods
xor
cmpsb
sahf
pusha
dec
lahf
jge
push
fldt
int3
popf
loop
push
es
add
push
enter
xchg
mov
data16
push
push
push
and
sub
stos
push
movsl
jmp
int
insl
popa
std
lret
loope
add
mov
lahf
in
mov
and
pop
jno
dec
push
xchg
addr16
mov
cli
out
push
cmpb
sub
xchg
nop
lea
lahf
pop
xchg
mov
push
mov
es
mov
xchg
pop
xchg
sahf
sbb
dec
dec
cwtl
mov
aam
pop
sub
jae
sahf
dec
cmpb
mov
ret
cmp
jp
pop
lcall
xchg
aas
pushf
adc
subl
shlb
test
mov
mov
cwtl
fnstenv
pop
sbb
jl
loop
in
xchg
jmp
push
mov
add
mov
scas
mov
sahf
mov
mov
inc
jecxz
adc
ss
xchg
mov
in
xchg
mov
jae
scas
mov
gs
adc
stc
pop
jo
pop
call
cmpsl
stos
inc
mov
popf
int
mov
push
rorb
dec
fdiv
pop
xchg
sbb
pop
pushf
daa
cmp
test
add
mov
sbb
push
or
sub
add
jmp
push
push
aam
movsb
es
pop
push
add
push
add
xor
cmp
inc
push
test
xchg
or
lods
fcmove
hlt
clc
sub
dec
sarl
sub
push
mov
add
and
jp
inc
mov
xchg
or
mov
fs
std
mov
push
shl
in
loop
pop
inc
fstl
xchg
inc
mov
xor
leave
pop
inc
mov
adc
cmc
or
loop
sub
mov
mov
add
lahf
sbb
xor
mov
mov
ret
stos
pop
xor
out
inc
jp
cmp
sub
lods
aad
cltd
loop
stos
aad
scas
aaa
xchg
popa
lods
testl
daa
jnp
sub
inc
cmp
lret
insl
clc
outsl
in
cmpsb
sub
cld
scas
jno
jno
adc
sbb
mov
mov
lds
loope
std
adcb
mov
pop
push
and
movntps
xchg
xor
stos
daa
andl
mov
sbb
outsl
movsb
test
lcall
pop
and
ljmp
xor
imul
ficoml
movsb
lods
daa
cwtl
pop
jge
mov
mov
inc
inc
jb
nop
hlt
pop
sub
andb
fisubrs
inc
xor
jo
js
cmpsb
and
sub
add
mov
mov
dec
mov
inc
xchg
lods
movsb
call
insb
push
arpl
insb
push
lods
push
push
and
mov
mov
scas
imul
cmpsl
lcall
imul
cli
sbb
in
fists
lods
stos
sti
jmp
lea
mov
repnz
or
call
dec
jb
ja
lcall
inc
jg
xor
stos
push
inc
outsl
push
mov
mov
mov
push
pop
cmpsl
pushf
mov
and
in
into
push
rol
rclb
pop
movsl
jae
add
pop
js
push
pushl
stc
pop
stos
jns
mov
leave
mov
dec
xchg
xchg
pop
sub
fwait
inc
lcall
xor
sbb
fcoms
adc
sbb
xchg
jo
mov
loope
sbb
loopne
arpl
sub
sub
insl
data16
out
mov
jmp
and
mov
xchg
aad
inc
andl
inc
sub
push
leave
xchg
xchg
mov
in
xchg
pusha
mov
cmp
fcoml
mov
movsb
push
xchg
inc
testb
sbb
mov
insl
dec
test
cmp
mov
push
addr16
imul
das
test
test
adc
addr16
add
pusha
scas
or
mov
cmp
in
mov
out
loopne
xor
dec
xor
xlat
cmp
js
std
das
sub
lds
dec
push
and
mov
sbb
sub
bound
je
cmp
add
imul
jecxz
sti
inc
shrl
shrl
jmp
loop
repnz
sub
insl
jle
push
cmpsb
jbe
movsl
mov
cmp
inc
dec
push
dec
cmpsl
es
and
jecxz
in
call
push
dec
pushf
sbb
stos
xchg
adc
imul
loope
inc
xor
cmp
scas
data16
clc
pop
pop
xchg
mov
fwait
pop
jle
out
jo
xchg
xor
push
cs
jmp
or
sub
mov
jns
stos
fs
divl
inc
lcall
dec
test
cmp
out
mov
adc
mov
fwait
and
sahf
cwtl
xor
push
aad
add
pop
rolb
push
fildl
sub
cli
mov
imul
lods
arpl
popf
movsl
xchg
xchg
cli
dec
push
pop
repnz
out
mov
lds
dec
push
mov
cmpsl
mov
int3
lock
ret
popf
push
xor
sbb
test
test
push
jno
xor
loope
dec
in
push
push
enter
push
pop
cmp
fcomps
in
clc
fdivl
xchg
xchg
fistl
lea
hlt
dec
xor
xor
push
les
fistl
xor
cwtl
pop
mov
xlat
outsb
int3
dec
sub
ljmp
jbe
in
push
sbb
cltd
cmc
js
loope
into
mov
mov
bound
xor
inc
mov
movsb
lods
xor
ret
adc
fidivrl
cltd
enter
jmp
add
stc
add
push
push
in
adc
add
and
in
scas
or
inc
pop
mov
mov
rcll
in
aam
jo
in
jno
test
jns
hlt
push
mov
inc
cld
pop
cltd
mov
mov
andb
sub
dec
or
scas
ds
sbb
lret
adc
sbb
cld
into
mov
lea
sub
mov
xchg
sti
rclb
add
mov
cwtl
or
inc
and
mov
add
iret
and
fnstenv
push
adc
scas
orl
stc
bnd
sbb
mov
and
sbb
push
mov
xor
inc
add
fisubrl
clc
cli
int
sbb
mov
in
stc
pop
or
rol
repz
sahf
sub
and
into
int3
jno
add
xchg
ja
jne
sub
dec
lcall
dec
add
and
mov
movsl
cmp
out
lods
movsb
push
orl
cld
jmp
sbb
and
push
test
xor
stc
inc
add
xor
or
clc
xchg
adc
xchg
xchg
sub
push
dec
lahf
and
pop
mov
popf
pop
std
mov
xchg
je
inc
shll
shrl
xchg
fs
in
mov
loope
cltd
jge
out
xchg
nop
mov
imul
inc
pusha
bound
filds
in
aad
scas
xchg
in
add
cmc
push
inc
xor
xchg
dec
mov
mov
add
or
sub
mov
pop
jl
movsl
sub
inc
xchg
push
push
es
adc
mov
or
sti
movsl
in
and
scas
fbld
dec
push
sbb
out
cmp
cmp
sub
loopne
movsl
movsb
adc
jo
test
pop
cmp
lods
push
ss
aad
sti
xor
cmp
pop
fsubr
scas
nop
lods
test
sub
loope
xchg
lret
sbb
pop
mov
lock
mov
dec
xchg
cmp
lahf
cltd
lahf
xorb
rorb
jae
mov
les
push
mov
and
dec
imul
pop
dec
lds
mov
out
pop
mul
scas
add
sar
and
and
mov
xchg
pop
sti
sbb
in
jp
push
outsb
mov
andb
aas
dec
into
xor
cmp
push
xor
filds
icebp
mov
xchg
cmpb
inc
mov
les
stos
dec
mov
ljmp
jne
imul
rorb
dec
adc
jno
jnp
pop
nop
sbb
inc
or
stc
jno
dec
int3
push
dec
jecxz
jno
sub
xlat
inc
cmpsb
and
repnz
jp
jne
jno
cmp
sub
jb
gs
push
les
push
clc
cld
mov
jb
jp
jo
or
add
pop
mov
sbbl
adc
and
fnsave
push
sbbb
out
jbe
and
pop
pop
pop
jo
xor
push
test
jecxz
jae
pusha
mov
pop
outsl
inc
andl
mov
xor
push
cmpl
cmp
mov
imul
xor
aas
sbb
ljmp
pop
stos
mov
dec
push
mov
jno
jns
fimull
or
mov
jge
insl
sbbl
repz
mov
or
pop
cmpsl
dec
xor
pushl
in
mov
push
push
fldl
jecxz
nop
movsl
lcall
or
inc
inc
dec
xlat
xor
sbb
gs
lcall
xorb
inc
stos
shll
std
divl
mov
in
xor
adc
or
lahf
stos
dec
sar
lods
ja
das
shrd
mov
and
popf
in
push
shll
xchg
add
dec
push
stos
out
or
les
ljmp
dec
push
inc
xrelease
aad
leave
into
pop
adcl
inc
xor
ss
dec
test
in
inc
ret
inc
loop
ficompl
cmp
cmc
sub
or
jb
add
adc
loopne
hlt
jb
sub
mov
mov
cmp
xchg
jp
dec
push
out
shll
push
sub
in
xor
and
outsl
cltd
in
inc
xor
push
es
loop
cmp
mov
and
iret
ljmp
push
shlb
je
add
mov
cli
mov
fsubr
js
aaa
jo
mov
adc
xlat
lods
inc
jecxz
xchg
jbe
mov
gs
int3
push
xchg
mov
xchg
jbe
pop
or
jle
inc
add
dec
add
cmp
loopne
mov
dec
push
push
outsl
inc
pop
add
push
inc
cli
mov
sbb
fmull
sahf
or
gs
jo
jo
test
mov
mov
lea
mov
or
andl
dec
loopne
push
sub
test
cmp
mov
jnp
pop
push
stos
into
jl
pushf
aaa
jb
push
lret
sub
cmp
sub
call
arpl
xlat
jl
test
or
pop
iret
int
pushf
or
mov
out
adc
ss
cmp
lds
mov
aaa
ret
fcomp
xchg
out
sub
es
add
sbb
xlat
push
out
jecxz
jl
push
and
mov
dec
fldenv
and
jo
or
stc
xchg
lock
cmp
jb
lcall
test
aas
fwait
mov
add
and
sub
sbb
mov
mov
jae
in
mov
nop
fiaddl
frstor
xchg
fucom
std
aad
add
add
stc
jae
mov
mov
in
pop
loopne
icebp
jg
fwait
mov
lret
fmuls
lahf
sbb
lock
inc
aaa
or
data16
dec
cmp
or
jmp
xor
push
mov
inc
jb
push
jmp
das
jo
mov
and
inc
mov
dec
pop
cwtl
fsubrs
aas
ja
fwait
data16
loop
mov
mulb
and
mov
sti
sbb
or
inc
sbb
sub
push
adc
cmpl
push
outsl
in
stos
push
pushf
push
aaa
pop
mov
in
and
pop
cmp
fstl
mov
push
loop
push
pop
and
fldcw
pop
ljmp
daa
out
push
mov
inc
pop
mov
mov
xchg
pop
in
xchg
in
imul
cli
mov
jecxz
fldpi
sbb
push
lahf
stos
jmp
xchg
sub
jbe
or
mov
rorb
dec
ret
imul
stos
mov
push
data16
mov
in
je
les
cmp
jmp
sub
add
jns
ret
adc
fucomp
adc
hlt
pop
mov
cmc
adc
jmp
inc
and
iret
loopne
pop
sub
leave
sbb
lods
inc
cli
je
cmp
aad
subb
dec
adc
stos
push
push
call
sub
in
jg
test
cmp
xchg
ljmp
pop
and
adc
pop
push
add
push
mov
enter
icebp
xchg
add
cmp
pop
push
cmp
out
dec
xor
push
sbb
push
mov
outsl
sbb
jo
cmpsb
jmp
push
adc
add
mov
sbb
push
jae
pop
out
mov
scas
sub
cmp
fstl
loope
adc
repz
fcoml
pop
dec
aaa
in
int3
sbb
push
outsb
fmuls
jge
shrl
pop
jge
dec
mov
mov
cmp
mov
imul
fdivp
inc
cli
sahf
jns
and
mov
push
jne
mov
mov
jno
in
ja
dec
pop
inc
sub
mov
add
cltd
jge
add
or
mov
mov
xor
push
and
sbb
fwait
push
mov
cmp
xor
pop
pop
loope
jp
imul
dec
push
das
or
ja
out
stos
test
or
mov
fnstsw
ds
fnsave
add
clc
jl
dec
and
adc
pop
stos
into
sbb
sub
push
gs
dec
pop
cmp
cmp
addr16
pusha
mov
fbld
int
dec
aam
lea
mov
mov
out
std
in
pusha
or
pop
lods
and
popf
pop
add
add
cmp
lahf
inc
jo
out
subl
mov
jb,pt
jns
ret
push
rolb
and
cmp
jne
js
bound
inc
jmp
in
inc
xor
sub
pop
sub
fimull
adc
pusha
incb
data16
adc
lahf
cmp
daa
inc
fcmovnb
jp
xchg
mov
inc
inc
sub
inc
mov
cmpsl
mov
add
jne
popf
mov
lods
jl
subl
and
repz
ss
test
lcall
sbb
mov
push
sub
rcl
mov
jbe
inc
aad
and
lcall
je
cltd
nop
pop
imul
mov
imul
mov
lret
push
mov
mov
push
xchg
sub
andb
cli
aaa
pop
nop
mov
cmp
in
or
std
scas
aas
sbb
sahf
xchg
dec
jge
sub
and
pop
lds
or
arpl
sti
push
mov
jb
dec
xchg
aam
std
cmp
rorl
sbb
ret
lcall
lahf
iret
add
mov
push
pop
jo
stos
fnsave
fdivr
mov
cmp
mov
adc
sti
sub
inc
sarl
aaa
sub
rclb
ja
pop
xor
aad
nop
mov
scas
mov
andb
cmp
ret
mov
aaa
shll
ret
jmp
jecxz
dec
testl
and
pusha
jns
mov
mov
es
pop
dec
cmp
into
push
inc
test
gs
sbb
xchg
dec
inc
or
mov
test
push
outsb
inc
imul
in
sub
cmp
aad
cmp
mov
movsb
in
pop
or
mov
rol
fcomps
mov
test
mov
test
in
ret
aas
shrl
pop
pop
repz
out
hlt
push
arpl
adc
or
cmc
xor
out
push
mov
jo
fdivrs
lds
mov
int3
sbb
adc
out
gs
xor
out
pop
mov
and
fldl
or
addb
scas
hlt
mov
inc
hlt
sbb
dec
test
xor
fnstcw
pop
movsl
mov
cli
movsl
int3
and
mov
nop
xchg
cmp
pop
cmp
cld
xchg
mov
mov
in
les
xlat
shl
test
mov
hlt
push
test
lock
xchg
das
adc
rcr
dec
mov
push
cmc
fidivl
iret
sbbl
push
popl
movsl
cmp
dec
mov
ljmp
xor
mov
loopne
int3
pop
mov
mov
push
int
mov
mov
jne
or
inc
lea
xor
pop
sbb
inc
stc
adc
and
in
mov
mov
fcoml
sub
icebp
ja
inc
mov
ja
test
mov
orb
loop
pop
push
xchg
test
jo
loop
add
scas
mov
movsb
push
jmp
push
shll
addl
int3
or
xchg
aaa
pop
sub
in
push
jl
xchg
test
std
fcompl
shll
and
insl
pop
push
or
cld
mov
jae
sahf
xor
daa
adc
sbb
pop
pop
or
jns
setge
add
mov
call
push
mov
inc
adc
xlat
pop
stc
cmpsb
or
scas
mov
adc
enter
or
gs
jo
push
sbb
mov
sub
cmp
inc
cli
std
out
lret
gs
ss
ljmp
aad
inc
call
adc
rolb
outsb
ljmp
lods
das
xchg
lret
out
mov
mov
sbb
cmp
xchg
dec
clc
fs
xor
and
mov
pop
mov
xchg
or
lock
movsl
sbb
sbb
pusha
or
mov
rcl
roll
cmp
dec
dec
subl
adc
mov
adc
dec
addl
in
insb
cmpsb
int
js
subl
inc
sbbb
push
mov
mov
add
cmp
mov
add
mov
cmp
fimuls
sub
or
xor
lds
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
jmp
aad
mov
mov
rorb
pop
sahf
dec
daa
sbb
adcl
addl
adc
fbld
xchg
lock
addr16
xchg
sub
xchg
xor
loopne
test
xor
arpl
mov
or
mov
adc
xchg
mov
cld
std
xor
scas
dec
fcomp
jno
dec
sub
mov
mov
jno
inc
xlat
xchg
jb
mov
jb
cltd
adc
ljmp
pop
jge
mov
push
into
iret
or
adc
aas
dec
add
lret
mov
je
adc
cltd
xor
adc
in
adc
sti
push
jmp
xor
stos
pop
ret
jno
cli
je
sub
test
pop
pop
pop
or
lds
leave
sbb
punpcklwd
mov
popa
push
and
shll
adc
xchg
aad
sub
orl
daa
xor
gs
out
xchg
cmp
cmc
test
fcomi
push
hlt
adc
pushf
push
sub
adc
int3
cs
js
inc
fprem
fwait
push
dec
xchg
pop
pop
notb
cmp
stc
adc
sub
mov
xor
cmc
mov
jne
lds
sbb
push
pop
notb
lahf
fld
pop
dec
ljmp
add
pop
pop
sbb
in
loope
pushf
xor
add
cmp
add
icebp
roll
pop
pop
cwtl
sub
mov
dec
jns
mov
sub
jg
leave
lret
into
jno
inc
dec
movsb
lea
sub
leave
xchg
jno
mov
xchg
movsb
lea
pop
xor
out
add
add
push
lea
fistpl
pop
rcll
adc
lcall
out
jg
xor
push
jg
in
mov
mov
cmpsb
ljmp
and
jl
arpl
push
xor
lods
cmp
and
cli
mov
push
lock
ljmp
je
ss
mov
add
or
or
ljmp
ds
xor
dec
inc
icebp
repnz
xchg
mov
add
loopne
scas
mov
adc
scas
hlt
loope
or
movsb
xor
push
stos
jle
std
push
push
mov
sbbl
les
cmc
sbb
fcompl
sbb
iret
cs
fs
bound
dec
mov
add
test
sbb
mov
orb
sub
fsts
mov
xor
mov
push
sti
dec
cmp
scas
fdivs
sub
test
adc
addr16
std
stos
arpl
pop
add
std
mov
lock
dec
and
xchg
sarl
sub
mov
pop
sub
mov
pop
adc
out
ss
test
jb
add
mov
dec
aaa
mov
ret
xchg
ret
scas
adc
add
imul
jae
mov
push
fucom
test
mov
movsb
shl
cmp
jecxz
lahf
fistl
movsl
sub
mov
cmp
mov
gs
jp
mov
lahf
cltd
xlat
mov
aam
test
jno
cmp
push
scas
movsl
pusha
dec
nop
test
das
or
add
pop
xchg
mov
stos
sub
mov
pop
and
jg
mov
sbb
cld
mov
pop
xor
in
jne
jecxz
sub
sbb
push
dec
shll
push
push
ljmp
mov
inc
popf
out
lea
add
mov
and
das
jp
cmpsb
sub
or
ret
add
jbe
inc
fstps
aaa
int
fcmovb
test
lods
dec
sbbl
adcb
and
and
repz
cmp
sbb
cmp
movl
adc
insb
inc
sbbb
mov
notb
orl
scas
sbb
xor
xchg
add
in
std
or
sub
cs
pop
outsl
mov
jp
fisubrl
xchg
jo
int3
cmpsb
fs
xorl
leave
xlat
cmpsl
icebp
or
out
dec
fsubl
jecxz
sbb
xor
sub
and
es
add
mov
mov
sbb
xchg
mov
scas
mov
out
cmp
jno
xchg
mov
lock
mov
repnz
dec
cmp
or
mov
sub
out
ljmp
mov
and
and
jg
movsl
hlt
sahf
sub
mov
mov
inc
pop
mov
test
xor
enter
popf
not
popf
jecxz
dec
push
xchg
in
xchg
imul
dec
imulb
xchg
lds
incl
imul
push
jnp
pop
jne
lcall
test
inc
out
mov
xchg
dec
and
and
addr16
push
fstpl
fiadds
add
mov
aad
stos
loop
push
jno
add
cli
mov
xor
mov
lods
mov
mov
mov
loopne
jns
pop
movsb
sbb
cmp
jne
push
and
xor
push
push
outsl
daa
adc
dec
dec
jmp
addr16
out
xchg
xchg
cmc
pop
out
mov
xchg
add
popa
sbb
repz
lods
push
adcl
andb
mov
repz
stos
addr16
add
cmp
push
cmp
add
adc
and
adc
leave
lcall
icebp
call
pop
sub
pop
cli
imul
gs
aas
push
fnstcw
testl
fstps
test
sub
idivb
repnz
pop
cmpb
push
fistl
ljmp
mov
je
jecxz
imul
fs
inc
arpl
add
fstpt
add
xchg
and
cmp
fadds
inc
sub
in
lcall
mov
or
and
or
jne
negl
mov
fpatan
jp
and
add
adc
jae
in
out
in
int3
xchg
out
shll
jp
and
inc
add
loope
rorb
jle
lret
rcll
pop
setle
xchg
cmp
popa
bound
push
fnstcw
pushf
cmp
clc
sub
pop
pusha
mov
stc
aaa
imul
pusha
cld
sti
xor
push
pushf
popf
xchg
scas
lea
fstpt
xchg
push
pushf
and
push
icebp
in
ret
mov
mov
call
pop
and
sbb
repnz
push
int3
mov
mov
pusha
pop
outsl
daa
jae
mov
mov
push
out
inc
sbb
mov
push
popa
or
add
cli
or
addl
xchg
cmpsl
stos
add
lahf
loopne
mov
mov
pop
pushf
movsb
mov
push
popf
jae
stos
inc
mov
or
in
dec
loop
std
jnp
cltd
pop
cmpsl
mov
cwtl
adc
mov
ja
lcall
sub
lcall
fisttpll
inc
xorb
and
mov
mov
push
fimuls
inc
adc
xorl
lods
mov
loop
inc
stos
notb
sub
es
repz
loope
into
xlat
movsl
pop
jmp
daa
push
mov
out
mov
fcmovbe
icebp
mov
and
int
enter
mov
ja
in
mov
aad
daa
lcall
cmp
fbstp
movsb
jmp
xchg
mov
add
push
lcall
in
data16
jg
push
pop
scas
pop
xchg
cwtl
inc
mov
sti
int
add
jns
cmp
jecxz
dec
rclb
popf
icebp
cld
cmp
sbb
push
xor
out
push
mov
in
mov
lods
ja
jg
int
rclb
jle
das
inc
jne
mov
xlat
and
jne
iret
pop
cmp
ja
ja
rolb
push
dec
cmpsb
mov
sbb
or
leave
dec
xor
stc
ja
test
sbb
xabort
in
in
mov
fdivl
rcrl
ja
sbb
aas
adc
and
mov
pusha
cmp
popa
mov
repz
cmc
push
int
jg
jno
fiaddl
jl
clc
es
lock
push
mov
mov
aam
jecxz
cmc
stos
mov
rcl
in
and
scas
outsb
xchg
fdivr
shrl
cmp
lock
fildl
roll
fidivs
add
mov
jecxz
filds
in
xchg
push
sbb
in
mov
push
dec
push
push
pop
or
ja
pop
sub
out
sbb
xchg
mov
and
insl
adc
add
icebp
outsl
xchg
sarl
pop
mov
in
aam
sub
addb
das
bound
enter
popa
mov
cmc
aas
mov
inc
repnz
xlat
xchg
loop
les
out
xor
sahf
pop
mov
ret
add
test
fsub
cmp
mov
push
add
insb
jge
jb
mov
adc
sahf
cmp
jns
dec
mov
mov
andb
sbb
mov
stos
sti
push
sub
enter
mov
lret
mov
mov
pop
cmc
adc
int
push
inc
adc
jae
jae
xlat
aad
mov
dec
fsubl
lahf
pop
cmp
jns
cmp
rcll
fs
push
les
test
push
sub
xor
mov
add
push
mov
xchg
dec
idiv
mov
cmp
loop
lcall
xchg
cld
mov
jae
stc
aaa
mov
aad
mov
lret
mov
mov
ss
mov
mov
jae
outsl
popa
fdivrl
inc
sub
mov
loop
ret
subl
stc
mov
shrb
jecxz
insl
cmp
mov
out
pop
add
push
add
adc
stc
xchg
subb
pop
and
mov
jmp
in
and
out
call
pop
out
add
aad
pop
andl
pop
mov
add
xor
add
jl
in
inc
hlt
incb
fimull
or
jp
push
push
insl
jnp
stos
push
jmp
inc
ljmp
pop
sbb
test
out
cwtl
int
pop
jns
sbb
es
loope
inc
stos
jmp
js
gs
xor
or
jl
out
adc
stc
mov
fistps
div
mov
int3
dec
pop
mov
aam
sarl
xorb
loop
hlt
mov
int
es
pop
adc
sub
int
addr16
mov
xlat
mov
sbb
or
mov
mov
shr
test
scas
add
dec
inc
sbb
ljmp
popf
xlat
fucom
sbb
adc
xlat
push
fdivl
xchg
clc
aaa
outsl
push
stos
adc
jne
fldenv
faddl
sbb
add
mov
out
jmp
mov
dec
push
mov
hlt
jmp
sbb
add
popl
cmp
sbb
aad
pop
loop
pop
lds
pop
stc
cs
insl
add
jb
call
in
inc
adc
adc
or
cltd
xchg
stc
push
test
cmp
sbb
loope
mov
sub
mov
cmp
jle
add
pop
sarb
mov
xor
add
mov
sbb
cmp
popf
push
les
push
das
pushf
cmp
mov
loopne
popa
pop
pop
dec
test
sbb
out
dec
ret
jecxz
push
or
gs
cmp
iret
insl
cmp
imul
sub
or
cmp
or
addr16
mov
or
notl
inc
xchg
lea
sti
addr16
jle
inc
pop
iret
lahf
sbb
push
pop
dec
sbb
ret
test
data16
push
mov
adc
ljmp
in
inc
cmpsl
loop
inc
xchg
dec
mov
leave
dec
inc
ffree
aad
fldenv
jns
push
lods
pop
mov
lock
mov
mov
scas
mov
imul
add
outsb
jl
xchg
cmp
cmp
add
jo
add
lret
pop
or
ffreep
push
stos
shll
sbb
mov
or
jo
cmp
inc
xorl
cmp
sub
sbb
data16
pushf
std
clc
enter
sbb
test
push
test
lods
xlat
iret
pop
addr16
adc
jnp
push
mov
push
dec
push
lods
jg
les
jnp
pusha
adc
es
mov
and
mov
push
adc
sbb
xchg
push
pop
push
cmpsb
repz
xchg
ja
mov
sti
int3
inc
sti
arpl
add
xor
je
pusha
adc
dec
out
scas
mov
add
push
into
stos
mov
lret
loopne
xchg
push
sahf
out
leave
jns
xchg
scas
xchg
orl
call
sub
pushf
add
pop
pop
or
jmp
pop
leave
jb
ret
xchg
in
xor
xchg
jmp
inc
in
mov
orb
sbb
sub
and
outsb
pop
jns
adc
push
pushf
mov
in
mov
pop
mov
mov
mov
and
xchg
mov
dec
mov
loop
jge
add
stos
cmp
fs
pop
or
pop
test
jo
testl
push
pop
push
push
int3
sbb
jmp
adcl
dec
or
fstpt
cli
fistpl
in
rcrl
add
rorl
clc
inc
ss
ss
mov
jo
mov
std
in
and
inc
or
mov
mov
test
movsb
rclb
mov
incl
mov
ret
and
and
mov
pop
sub
aad
add
cs
aaa
scas
pop
cwtl
push
push
aad
jmp
lods
sarb
sbb
cld
loope
int
sbb
pop
mov
mov
popa
fists
stos
in
sbb
push
aaa
gs
mov
inc
icebp
add
mov
pushf
sub
sbb
xchg
push
push
cmpb
ss
xchg
notb
cmpsb
jl
imul
jmp
adc
mov
inc
pop
enter
xor
and
sti
or
lock
test
std
add
dec
xchg
ret
push
mov
ret
fwait
enter
imul
repz
lcall
xchg
add
imull
push
ds
loopne
jecxz
dec
push
sub
cld
pop
sahf
lahf
out
mov
cli
xor
repz
push
clc
add
dec
nop
outsb
insb
xor
adc
jne
mov
mov
out
dec
cwtl
add
in
dec
mov
add
cmp
stc
pop
or
out
mov
daa
push
inc
imul
ret
fistps
dec
out
sbb
adc
and
std
cmp
bound
mov
cld
rclb
mov
cmp
int3
enter
testl
in
adc
or
jl
sub
orb
jge
lcall
push
bound
fildll
sub
std
push
push
push
adc
cmpsb
das
mov
scas
out
cmpsb
mov
addr16
imul
ret
push
push
leave
lahf
and
cmp
push
adc
loope
xor
cmp
jecxz
aaa
mov
sub
jnp
dec
cmp
out
nop
divb
addr16
mov
stos
div
and
lods
push
sti
push
ret
test
clc
sbb
mov
xchg
or
sub
adc
ja
fdivl
add
mov
loope
xor
sub
mov
dec
xchg
fs
mov
jns
and
es
inc
cs
rcll
xor
jno
pop
int3
jbe
fistpl
pushf
addr16
pop
jmp
lcall
pop
and
xor
js
push
outsl
mov
adc
cmp
jecxz
dec
mov
loop
enter
insb
adc
xor
mov
mov
nop
ret
xorl
into
stos
adc
fs
fdiv
mov
mov
outsl
into
ret
fucomi
lock
xchg
into
and
push
pop
test
sbb
sub
push
add
dec
hlt
cmp
js
jle
aam
int3
fbstp
dec
das
cmp
cwtl
in
dec
jae
and
or
sbb
or
and
mov
out
xchg
les
fildl
pop
js
das
and
rclb
add
dec
dec
xchg
and
pop
pop
xor
jae
ret
fcoml
push
xchg
dec
nop
dec
mov
test
jge
lret
fimull
mov
nop
jg
add
jne
push
jecxz
xchg
mull
outsl
lcall
pop
shr
mov
shrl
xor
push
push
mov
and
filds
movsl
and
popa
sub
addr16
and
in
shrb
fwait
mov
pushf
inc
aam
mov
leave
mov
fcomps
xor
cltd
sarl
inc
pop
push
in
clc
dec
xor
mov
rclb
and
xlat
cli
mov
jb
sub
jae
mov
je
xchg
adc
xor
jl
mov
add
push
out
mov
lock
out
stc
jno
stos
aas
jne
fldenv
cmp
andb
and
and
ja
shl
stos
xor
mov
sub
cmpsl
mov
pop
push
push
mov
pop
scas
subl
rolb
rdtsc
fdivrs
ret
jl
lahf
pop
dec
lods
les
lods
ret
jl
or
sub
clc
inc
iret
into
sbb
dec
call
fldenv
arpl
int
insb
out
or
xchg
sti
insl
sub
mov
mov
stc
push
loop
dec
cld
jecxz
aam
sti
xchg
das
cmp
and
rorl
call
mov
les
pop
xor
decl
clc
jg
jecxz
cmp
inc
push
loopne
repnz
sub
int3
test
jle
loope
sub
xor
xlat
sub
sub
pop
sub
fs
jo
imul
out
fsubl
mov
pop
jp
int3
shl
arpl
mov
mov
std
adc
push
idiv
dec
adcb
imul
and
cltd
dec
aad
data16
lock
and
add
or
jecxz
sub
repnz
sub
sti
mov
dec
mov
and
jns
addr16
fmulp
jnp
push
iret
mov
movsl
or
inc
sti
hlt
fistpll
ljmp
popa
sbb
int3
nop
and
in
cld
cmpb
out
popa
inc
loop
negb
sbb
cmc
mov
mov
cld
cwtl
nop
outsl
mov
dec
popf
jo
pop
out
into
xlat
xchg
mov
adc
and
pop
jno
lret
iret
mov
lock
mov
jb
cli
push
lods
inc
inc
xor
roll
inc
test
popf
sbb
xor
sbb
decl
aas
lret
iret
inc
mov
pusha
dec
mov
or
test
mov
arpl
pop
jg
pop
icebp
sti
inc
mov
int
mov
mov
test
scas
lret
fucomp
jb
ja
xchg
sub
cmp
jmp
pop
ljmp
push
leave
popf
ret
aaa
movsl
enter
stc
mov
inc
and
pop
in
mov
pop
ja
fists
out
fcomps
sub
push
je
pusha
and
gs
shll
fisttps
out
cmp
and
xchg
ret
popf
je
bound
das
leave
insb
sbb
mov
xchg
mov
rol
push
push
mov
pop
mov
repz
adc
dec
imul
inc
adc
daa
hlt
andl
sahf
fsub
mov
les
test
jne
aam
lods
dec
ds
repz
or
dec
dec
adc
pusha
and
xor
out
mulb
mov
mov
mov
outsl
jle
mov
jnp
lock
fdivs
sbb
xchg
fwait
pop
jno
pop
sahf
unpcklps
scas
iret
outsb
sbb
into
lret
xchg
and
sbb
pop
enter
cmp
xor
mov
and
jb
sub
lcall
jle
aaa
cmp
repnz
adc
ret
inc
movsl
and
mov
jnp
add
movsl
ret
xchg
mov
pop
or
xchg
fstl
es
push
xor
ds
fidivrl
mov
arpl
mov
pop
adc
cmpsl
cmpsl
fidivs
push
movsb
stos
fldl
ja
or
into
sub
sti
sbb
mov
pushf
sub
ret
arpl
outsl
xchg
sar
sub
jp
out
add
sbb
pushf
xchg
aaa
mov
push
int3
test
xchg
scas
jno
andb
sbb
sub
dec
mov
sbbl
jge
mov
leave
cmp
pushw
mov
inc
mov
shll
sbb
jecxz
jp
popa
add
hlt
mov
mul
xor
xchg
pop
out
cmp
or
dec
inc
jge
mov
call
mov
lods
cmp
into
sbb
push
cmp
adc
or
shl
insb
cmp
in
js
cmp
repz
sbb
test
jo
jnp
sbb
lret
pop
dec
push
push
xor
push
gs
dec
push
ret
sti
push
mov
sub
mov
xorb
daa
push
jno
dec
fcoml
imul
and
pop
pop
jl
je
es
xor
mov
inc
dec
call
fistl
leave
hlt
adc
imul
pop
dec
mov
sbb
ds
or
lret
sub
repnz
and
push
push
cmpsl
cmp
dec
sub
mov
pop
ja
insb
pop
jl
icebp
xchg
jmp
test
inc
xor
xchg
cmp
cli
addr16
pop
cmpsb
pushf
jge
pop
mov
xchg
mov
enter
cli
dec
mov
arpl
imul
xchg
incl
jno
call
clc
daa
push
xor
inc
mov
stos
jg
repz
push
mov
pusha
mov
popa
adc
outsb
lods
mov
lds
stos
es
mov
pop
int3
xchg
mov
daa
outsb
xor
sub
adc
and
jl
mov
xchg
leave
pop
jge
sbb
or
adc
pop
or
dec
sbb
xchg
mov
shll
mov
addr16
shll
xchg
adc
mov
shlb
lods
ret
push
fisubrl
xchg
jo
out
pop
inc
and
movsb
adc
mov
adc
pop
inc
imul
adc
sti
mov
xchg
rcr
lea
xlat
lret
cltd
mov
adc
add
and
xor
ja
add
push
ja
imul
clc
fsub
movsl
dec
dec
mov
ret
pusha
ss
mov
pop
outsb
fsubrl
dec
sbb
pop
stc
jmp
push
xchg
pop
push
daa
into
in
hlt
and
or
and
mov
sbb
data16
int
inc
pshufw
ret
dec
adc
adc
jo
sbb
das
popf
cmp
pop
mov
ja
lds
popa
popf
mov
push
mov
mov
lcall
dec
or
mov
adc
jge
popa
inc
mov
jge
push
add
call
movsl
fnstsw
stc
xor
cmpsb
dec
test
cmp
and
ror
in
xor
jnp
out
ss
sub
fsub
rolb
pop
xor
loope
addl
std
sbb
fisttpl
jae
mov
ret
mov
xchg
aaa
mov
xor
push
stc
or
movsl
dec
push
add
stc
into
push
jge
int3
mov
jo
fsubs
push
jne
add
xchg
cmp
in
jg
ljmp
add
push
push
push
mov
scas
movsb
push
lods
xchg
imul
pop
push
sub
add
xchg
cli
lock
adc
or
xor
adc
mov
pop
or
pop
test
enter
adc
int3
ja
jns
or
ss
xchg
pop
xchg
push
and
adc
sub
mov
jbe
mov
dec
mov
mov
sbb
fwait
mov
mov
sbb
mov
insb
jnp
imul
adc
cs
lahf
je
xchg
sti
pop
insl
add
repnz
loope
mov
scas
repz
pushf
pop
cmp
stc
push
stc
xchg
outsb
fbld
mov
jmp
mov
fsub
dec
iret
bound
mov
iret
inc
mov
push
sbb
mov
and
lods
addr16
out
dec
cmp
push
popf
test
dec
loope
inc
or
imul
xchg
pop
pop
ficompl
shll
dec
fdivs
insl
lods
adc
sahf
stos
pusha
cmp
scas
sbb
shll
lret
push
jo
push
xchg
jno
lock
mov
add
sbb
sub
int3
jne
pop
cmp
push
scas
stos
xchg
cmp
fildll
mov
or
fwait
pop
and
mov
mov
cli
rcr
mov
orb
cmc
mov
mov
loop
pop
add
shrl
sub
call
xor
push
dec
loope
jnp
int3
loope
jae
and
dec
adc
xchg
stos
setp
xchg
jb
xchg
inc
imul
adc
mov
adc
daa
xchg
ljmp
test
ja
fistpl
mov
in
jnp
jns
jo
fwait
jo
ret
push
loop
pop
out
lret
pop
jl
sub
xor
mov
jo
sbb
ret
std
dec
clc
or
in
fxch
fmull
jle
outsl
pop
mov
jecxz
les
cmpl
lock
jmp
add
push
fnstenv
rclb
mov
jae
dec
cld
dec
je
nop
clc
stos
push
lahf
xchg
sarb
xchg
cwtl
lds
scas
popf
push
loope
fwait
jl
pushf
cmp
sarb
xor
cltd
push
lea
mov
jne
enter
fsubs
push
mov
mov
and
jp
jns
sub
stc
mov
ret
adc
call
out
xor
sbb
aad
int3
inc
data16
adc
and
fdivrl
bound
ja
mov
inc
fs
add
inc
je
out
mov
rcrb
mov
jecxz
inc
push
arpl
xchg
aad
mov
cmp
insb
pop
in
inc
push
and
lock
fwait
jg
jle
inc
popa
ret
test
mul
std
popl
mov
pop
mov
jmp
mov
mov
sbb
enter
mov
fwait
daa
add
in
loop
stos
cmpsl
mov
xchg
loop
js
aam
or
pusha
xchg
adc
jns
xchg
push
incb
pusha
mov
icebp
rcrb
add
push
xor
push
int3
test
mov
dec
jae
movsl
test
cwtl
ljmp
popf
push
sbb
mov
ret
ljmp
mov
subl
xlat
in
pop
mov
cmp
hlt
inc
or
jo
mov
dec
xchg
aaa
dec
sub
xor
fildll
js
mov
fisubl
mov
xchg
and
sub
push
dec
movl
in
push
sub
mov
xchg
pop
jnp
sarb
cmp
push
xor
sub
int
pop
fildl
push
mov
mov
sahf
aam
rorl
pop
call
cmp
adc
pop
fsub
mov
inc
es
loopne
shl
mov
sub
mov
nop
subb
in
outsl
xor
jnp
rorb
mov
out
cmp
and
add
inc
idivl
mov
xor
jo
mov
sbb
loopne
popf
pop
jg
divb
cmp
mov
popf
mov
lock
cmpsb
icebp
into
inc
push
xchg
std
adc
sahf
fcompl
lret
je
adc
jg
add
ss
jb
psubd
inc
fsts
test
jno
ret
aaa
mov
adc
xchg
pop
les
adc
aaa
sti
fstps
and
cmp
test
sbb
in
stc
loope
stos
sbb
xchg
mov
je
inc
in
je
and
adc
out
loopne
jecxz
rcrl
jne
push
gs
jnp
ret
sti
mov
out
js
rcrb
fwait
cmp
add
dec
fwait
xor
and
aas
mov
jmp
cmp
sbb
xor
cmp
sub
cltd
out
hlt
mov
pop
push
daa
mov
inc
push
test
daa
pop
and
push
sub
push
pop
inc
pop
push
icebp
jae
ljmp
lret
pop
loope
outsb
test
sub
xchg
into
inc
loopne
sbb
mov
sub
xchg
inc
aam
push
ja
ret
fsubrl
out
insb
and
cmc
or
and
xor
hlt
jne,pt
enter
dec
mov
push
inc
pop
cld
dec
inc
arpl
inc
push
fimuls
sbb
or
cltd
push
in
scas
jno
xchg
pop
enterw
iret
call
add
es
mov
or
jne
push
aam
inc
xor
je
insl
imulb
add
mov
js
dec
xchg
cwtl
push
fiadds
push
ds
cmpsb
daa
and
mov
pop
lcall
cmp
pop
testl
aam
insb
popa
and
mov
rolb
pop
test
cs
mov
mov
mov
bound
pop
mov
push
arpl
leave
repnz
sub
and
inc
xor
adc
dec
push
andl
adc
mov
jno
pop
popf
stos
enter
xorb
ds
push
clc
jae
andb
sbb
das
or
xor
rclb
pop
adc
pop
inc
inc
xor
jge
or
adc
fstpt
jp
out
ljmp
in
loope
xlat
fs
pop
leave
cmpsb
popf
inc
ds
jge
and
cli
dec
repnz
jge
adcl
push
fwait
incb
stos
push
jb
mov
xor
add
arpl
push
jnp
stc
dec
loop
rcrl
adc
push
sti
push
and
iret
push
stos
xchg
stos
rclb
out
shl
daa
mov
mov
lea
adcb
push
enter
imul
mov
repnz
jnp
sub
inc
ljmp
inc
je
inc
xchg
xor
in
cmp
mov
roll
dec
mov
dec
xchg
xchg
out
lret
js
popa
inc
ljmp
mov
ret
dec
jl
or
dec
pop
das
jo
mov
cmp
pusha
lcall
and
pop
je
lods
mov
xor
and
pushf
jns
sub
xorl
out
sbb
ret
xchg
inc
push
enter
cwtl
cmp
and
movsl
mov
or
mov
or
add
sbb
out
inc
and
mov
gs
mov
mov
adc
xchg
sbb
add
cwtl
sub
mov
adc
xchg
mov
lods
fimull
and
sub
into
out
sti
dec
repz
sbb
inc
dec
je
mov
andl
cmp
jnp
hlt
push
push
mov
ror
inc
add
lret
mov
dec
or
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
notl
push
sub
push
sub
mov
mov
mov
inc
mov
or
movl
movzbl
adc
movl
adc
mov
add
mov
adcl
sub
adc
mov
xorl
xorl
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
pushl
pushl
call
cmpl
jb
mov
sub
mov
orl
mov
andl
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jb
mov
xorl
orl
mov
andl
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
movl
cmpl
je
cmpl
jbe
jmp
call
mov
dec
mov
jmp
mov
orl
add
mov
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
mov
mov
neg
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
adcl
movl
subl
lea
movzbl
sbb
mov
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
call
jmp
lea
add
mov
xor
mov
mov
mov
sub
xor
mov
adc
mov
adcl
xor
orl
add
xorl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
mov
mov
add
movl
cmpl
je
cmpl
ja
jmp
push
call
xor
or
dec
mov
jmp
push
sub
mov
mov
mov
mov
mov
adc
mov
xor
and
mov
add
movl
cmp
movl
je
notl
mov
jmp
mov
xorl
xor
push
add
xor
xor
sub
mov
add
movl
push
adc
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
push
push
pushl
call
jmp
mov
xor
subl
xor
movl
cmp
movl
jne
movl
cmp
jne
push
movl
jmp
mov
xor
adcl
add
subl
xor
add
movl
adc
subl
xor
orl
xor
movl
cmp
movl
jne
cmp
movl
jne
addl
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
xor
xor
dec
mov
jmp
xor
add
mov
subl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
jmp
mov
movl
xor
add
adcl
imul
mov
orl
xor
add
movl
cmp
mov
je
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
mov
orl
add
and
mov
mov
xor
add
imul
sbbl
mov
mov
mov
mov
xor
mov
sub
mov
jmp
mov
xor
mov
mov
mov
xor
mov
sub
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
jg
mov
mov
xor
mov
sub
mov
jmp
mov
xor
add
add
mov
mov
mov
xor
add
not
and
mov
movsbl
cltd
add
adc
jmp
pop
push
xchg
dec
add
shrl
stc
addb
aaa
jae
mov
sub
mov
in
push
cmp
xchg
rol
sbb
cmp
mov
pushf
mov
add
sahf
mov
movsl
xchg
insb
js
or
jmp
xor
nop
lret
test
in
adc
pushf
jno
sti
jne
js
mov
frstor
cmp
and
incb
loopne
sbbb
fmuls
cmp
push
xchg
imul
das
adc
cld
xor
and
cmove
imul
xchg
insl
jbe
rcl
jae
and
mov
add
sbb
lret
popf
leave
lahf
pop
addr16
subb
test
jl
mov
std
pusha
pop
mov
jmp
test
and
shll
shrl
call
arpl
cmp
push
outsb
or
mov
sbb
adc
sbb
mov
lea
sarl
mov
push
loop
mov
jbe
loope
pop
xor
sub
out
dec
sbbb
cwtl
ja
cmp
fsub
inc
loope
jl
or
add
enter
adc
jl
lock
es
and
orl
inc
inc
cmp
jne
sahf
xchg
fwait
insb
sahf
leave
inc
fucom
inc
push
mov
jge
sbb
jo
lods
push
mov
aaa
ljmp
das
lock
data16
ffree
sarb
push
pop
dec
in
mov
xchg
ret
inc
dec
rorl
cmp
jae
imul
add
jo
test
lea
mov
in
movsl
inc
inc
or
jle
jnp
mov
fs
in
mov
imul
and
sub
cmp
nop
dec
movsb
pop
dec
or
lea
and
scas
push
xor
insb
sti
sti
add
sub
sub
shrb
shlb
sarb
cli
sub
ds
cltd
mov
test
xchg
mov
repz
pop
dec
dec
mov
push
lods
lods
jge
mov
ret
or
mov
sbbb
shrb
loop
add
ljmp
outsb
rep
out
imul
mov
ljmp
push
xor
or
adc
dec
ja
aam
movq
ss
mov
out
or
mov
decl
jmp
and
mov
scas
sub
pop
sarb
jb
js
mov
lea
pop
xchg
sbb
xchg
icebp
lret
dec
mov
mov
std
jl
outsl
mov
iret
test
inc
push
sbb
or
jb
inc
lret
xchg
dec
das
push
jbe
mov
shll
or
test
jge
ds
in
outsb
adcb
outsl
jnp
mov
in
lock
pop
fwait
dec
mov
sbb
movsb
es
in
call
push
push
xor
outsl
push
daa
outsb
xor
and
sub
jl
push
int
imul
fscale
cmp
sbb
popf
loop
or
add
imul
pop
mov
dec
dec
aas
add
insb
lock
push
icebp
sbb
push
daa
sub
push
inc
xchg
inc
lock
add
dec
adc
adc
pop
and
jecxz
fwait
inc
cmp
xchg
out
test
adc
inc
lret
push
or
mov
js
adc
mov
cmp
mov
addr16
scas
pop
cmp
mov
std
movsl
push
cmp
rolb
or
ret
lcall
xchg
rcr
lds
push
cmp
jecxz
inc
cltd
stos
jmp
mov
sbb
push
add
xor
sbb
lcall
addr16
sub
repnz
xor
push
shrl
pop
inc
pop
aam
nop
movsb
xor
testb
or
ds
mov
sbb
fwait
popf
aas
sub
test
xchg
pop
push
das
rcrb
call
dec
jmp
mov
hlt
nop
orb
sbb
lods
jae
fwait
lret
daa
mov
andb
add
xchg
lock
mov
jl
mov
xor
adc
dec
test
mov
ss
inc
bound
xlat
bound
insl
movsl
jo
dec
in
mov
jo
cltd
or
mov
fnstsw
jmp
push
dec
mov
or
push
into
ficoml
ds
adc
add
fiaddl
cwtl
clc
mov
fwait
pop
mov
push
mov
push
lods
pop
mov
lea
dec
sbb
mov
mov
popa
xchg
call
cvtdq2ps
into
add
test
daa
mov
cmp
mov
fstps
pop
add
imul
cmc
fwait
fwait
xchg
cli
xor
test
jno
sub
xor
push
notb
mov
int3
add
lods
popf
pusha
pop
cmp
bound
outsl
xor
cmp
mov
daa
fstps
int
insl
add
sbb
cld
mov
mov
push
cli
enter
mov
leave
imul
mov
mov
lret
push
hlt
aad
cmp
jmp
out
xchg
dec
imul
rcll
jl
and
lds
jmp
pop
ja
dec
add
mov
lods
pushf
push
js
notb
dec
lods
aas
xchg
je
sub
mov
pop
loop
jno
and
out
xchg
mov
sbb
mov
jge
enter
into
movsb
mov
pop
icebp
inc
lcall
xchg
mov
out
in
cmpsb
je
lods
stos
inc
cs
xchg
sbb
sbb
lds
cmpsl
or
jnp
cmp
test
jge
lcall
mov
sub
sub
daa
xchg
push
cmp
cli
aaa
sub
filds
inc
lea
add
jae
jnp
lahf
add
mov
mov
popf
cld
adc
jecxz
insl
insb
lea
cwtl
fcomps
xlat
in
es
xchg
or
cmp
rcr
popf
push
or
dec
aaa
es
call
fmull
dec
jl
repz
inc
mov
and
sbb
jl
loopne
dec
repnz
xor
cmp
xchg
sti
sbb
cmp
sbb
mov
icebp
inc
sub
int3
sti
jg
jno
add
sbb
mov
xor
stos
movsb
lret
or
repz
out
and
dec
rorl
ret
testb
xchg
push
pop
adc
in
jb
notb
ds
mov
fmuls
mov
push
jb
mov
lods
cmp
enter
fsubl
and
outsb
jle
clc
in
icebp
iret
or
add
mov
fwait
not
rolb
add
mov
mov
xor
and
aad
ja
xorb
sbb
mov
mov
push
inc
cmp
adc
and
in
cmp
xor
xor
test
mov
lds
int3
push
jb
out
loope
sarb
andl
cmp
aad
sti
inc
xor
std
mov
mov
mov
sti
sub
mov
pop
mov
mov
pop
push
int
xchg
fwait
add
lret
dec
cmc
and
sbb
int3
loope
jns
mov
cmpl
jns
add
dec
and
ret
cmpsl
ret
arpl
arpl
pushf
dec
lea
movsb
mov
xor
es
mov
push
dec
xor
mov
lds
fdivs
fistps
das
push
addr16
sub
stos
sub
loop
cmp
sbb
push
mov
jg
sahf
jne
and
and
int
pop
ja
mov
lea
push
cmp
xchg
loop
movsl
sbb
pop
push
imul
push
push
mov
push
idivb
enter
mov
and
xchg
xchg
or
jb
mov
lods
stos
aas
aam
loopne
or
add
int
sub
loopne
insl
lods
stc
sub
xchg
fdivl
mov
out
hlt
das
shlb
xchg
mov
shrl
add
out
rol
pushf
lret
cmp
lods
cltd
popf
cmp
mov
lret
test
cwtl
pushf
jno
xor
scas
cmp
andps
jb
jns
cmp
adc
mov
jo
push
das
dec
enter
pop
or
xchg
mov
cli
test
xor
scas
mov
sub
out
int
jno
xchg
out
lcall
aaa
test
inc
jmp
fwait
insb
push
into
xor
adc
mov
lock
pushf
gs
cld
add
pop
sub
pop
out
adc
fucomip
mov
push
stc
lea
ficoml
push
jl
push
cvttps2pi
push
mov
mov
push
rolb
pop
stos
repz
out
adc
std
jge
mov
stos
mov
test
shrb
jbe
mov
ja
hlt
jp
or
mov
cwtl
cmpsl
popa
adc
sbb
and
stos
sub
stos
add
aad
dec
lods
dec
jmp
mov
xchg
or
mov
fbld
inc
lret
sub
jbe
or
mov
jmp
cltd
xchg
mov
sbb
or
jle
add
rcrl
cmp
andl
push
subb
repz
sub
lods
sahf
adc
fstps
mov
push
fwait
adc
xor
jl
div
or
lea
inc
jo
mov
and
daa
mov
ja
xor
pop
mov
pop
out
test
dec
outsl
ja
ja
flds
cmpsb
and
xchg
sbb
adc
lret
lock
push
icebp
pusha
loop
fists
std
sbb
sbbl
mov
xchg
mov
jmp
mov
insb
push
and
jbe
shlb
pop
lahf
insl
push
mov
nop
outsl
add
scas
outsb
ret
andl
jecxz
xchg
and
pop
das
mov
jg,pn
ret
push
sti
dec
aaa
cmp
fistl
mov
add
mov
push
fwait
ret
and
jae
adc
iret
lods
mov
mov
sbb
repnz
aas
out
es
ds
lahf
lods
xor
jno
test
into
lds
sahf
push
sub
dec
mov
rcrl
jl
mov
jbe
mov
stos
push
std
xchg
loope
adc
pop
popf
xchg
les
fs
repz
mov
lahf
xlat
cmovg
ret
lea
sbb
and
jg
dec
cwtl
in
cld
les
jne
mov
popf
ja
lcall
mov
lahf
push
pop
sbb
nop
mov
pop
cli
inc
jo
fsts
xor
adc
and
xchg
mov
mov
stos
pop
bound
addr16
jl
call
stos
mov
rcll
jg
enter
sarl
ljmp
ds
fwait
adc
subl
data16
data16
ficoml
imul
mov
jo
rcr
jns
xor
sbb
out
shrb
inc
xor
xchg
hlt
jo
jge
test
aad
add
movsl
scas
dec
jno
sbb
enter
incb
add
fisubrs
shlb
xchg
mov
mov
das
cmc
jge
inc
shlb
out
jg
sahf
aam
inc
push
loopne
pop
mov
sbb
cmp
movb
out
push
xor
and
lea
pop
out
xchg
mov
sbb
sbb
xchg
cmpsl
cmp
shlb
push
jns
fmuls
popa
xchg
xchg
adc
jecxz
mov
jge
sbb
out
cmpsb
pop
xlat
cmpb
xor
cmp
lock
int
dec
imul
sahf
js
or
xchg
sub
mov
jg
test
mov
out
xchg
iret
xchg
sub
cli
std
ss
push
inc
lock
xchg
test
add
or
sub
mov
pop
js
fistl
mov
rcrl
js
imul
or
mov
fadds
sbb
rorb
cmp
sub
subl
push
stos
das
sub
ljmp
outsb
pop
scas
cltd
cmp
cltd
shll
mov
jnp
les
xchg
decb
repz
inc
shr
adcl
cmp
cmpl
inc
mov
mov
xchg
or
jp
pop
arpl
or
mov
sub
movsl
cwtl
scas
sub
jns
jl
mov
dec
adc
outsb
adc
test
cmp
mov
sub
jl
or
test
dec
out
pop
fisubs
mov
aad
xchg
insb
out
lock
pop
jnp
xor
or
sbb
xchg
adc
mov
dec
stc
jne
data16
stos
adc
lods
pop
xadd
pop
jg
mov
push
mov
cltd
out
dec
mov
jmp
mov
lret
in
cmp
mov
xchg
or
insl
jno
insb
wbinvd
in
pop
jge
ljmp
mov
lock
pop
inc
aad
imul
shll
mov
mov
ror
push
pop
mov
imul
lret
out
push
inc
jbe
push
push
inc
xor
pop
dec
das
pop
inc
ret
dec
aas
add
test
mov
pop
pop
pop
add
rcrb
in
mov
dec
lds
nop
in
pop
in
or
movsl
jecxz
clc
inc
mov
scas
out
xchg
inc
les
pop
inc
push
cmc
push
mov
popa
mov
das
ljmp
enter
lahf
jno
push
sahf
lahf
jne
out
mov
and
inc
jecxz
mov
std
cmpsl
arpl
pop
or
pop
lock
cmpsb
loope
in
outsb
or
or
scas
mov
adc
xor
out
test
and
std
subb
loope
mov
push
js
je
pop
jmp
mov
mov
sub
push
add
jmp
dec
lahf
and
imul
das
push
inc
call
mov
xchg
ljmp
sbbl
inc
sub
push
push
cmpsb
xchg
xchg
and
in
subb
fists
stc
cmp
js
or
mov
sub
jl
adc
xor
jo
jb
sub
mov
iret
daa
fs
ds
shlb
insl
into
inc
cmpb
lock
xchg
push
pop
jge
pop
les
mov
hlt
jb
sbb
cli
jo
call
ret
sbb
and
mov
out
cmc
pop
nop
xor
xchg
fwait
cmc
pusha
or
rcrl
mov
sti
push
arpl
int3
add
out
xchg
dec
cmpsb
inc
jmp
mov
addr16
fs
lret
add
movsl
das
loop
lcall
inc
mov
imul
xor
es
mov
test
push
aad
xor
fisubrs
fnstcw
addl
mov
inc
mov
nop
add
test
jl
loope
add
push
sub
adc
fst
jb
add
jl
icebp
sub
std
mov
out
mov
outsl
and
mov
fwait
dec
cmp
push
fistpl
or
adc
add
xchg
or
in
push
jne
popf
shll
std
xlat
jg
das
cmpl
inc
jbe
pop
adc
mov
bnd
pop
shll
cwtl
mov
adc
je
push
inc
mov
fistpll
or
mov
and
movsl
fldl
inc
dec
adc
jl
gs
notl
je
and
in
push
pop
xchg
adc
shlb
sbb
xchg
divb
cmp
subl
lods
mov
pop
jle
xor
fsub
inc
mov
cwtl
pop
and
jbe
cmpsl
outsb
push
fiaddl
dec
or
xor
rolb
movl
sub
repz
mov
lods
scas
ss
movb
jp
gs
mov
mov
cwtl
popa
xchg
orb
cmp
repnz
sub
xor
js
sti
xor
add
je
and
pop
js
pop
mov
pop
cmp
lock
fnstsw
xor
jl
scas
xchg
adc
ss
inc
cmpsl
cmpsb
xchg
dec
cmpsb
push
je
int
test
ds
lods
shlb
dec
es
adc
test
dec
fwait
xor
mov
xor
xchg
mov
jns
aaa
push
mov
rorb
inc
xchg
repnz
cmp
cmp
fwait
push
popa
jg
mov
push
inc
aam
jecxz
mov
addr16
inc
adc
jae
add
cli
jge
xchg
and
addl
sbb
adc
repz
pop
mov
lcall
out
push
cmpsl
xchg
adc
inc
imul
mov
pop
outsb
mov
sub
add
je
pop
push
mov
push
cmp
addr16
xchg
ret
pop
and
hlt
mov
test
mov
lahf
insl
enter
mov
out
xchg
sbb
js
test
es
jno
xor
push
add
in
adc
jecxz
xchg
pop
loop
add
xor
add
sbb
bound
xchg
sbb
aaa
sub
imul
dec
mov
mov
cli
std
inc
sub
jb
es
mov
sub
xchg
test
repnz
int3
push
sti
or
out
aam
out
pop
dec
ret
xorb
int
cmp
mov
outsl
push
lock
ds
hlt
ret
push
mov
mov
outsb
movsb
xchg
adcl
sbb
sub
sbb
mov
adc
xor
imul
fucomip
mov
jnp
sub
mov
shl
lahf
out
dec
pop
jb
das
mov
sub
mov
and
adc
std
out
out
test
shlb
es
in
cmp
in
xor
push
repz
mov
xchg
cld
mov
iret
jo
sbb
inc
into
repnz
cmp
mov
aad
es
mov
adc
inc
cmp
jle
lods
inc
lock
cmp
or
sub
pop
dec
lret
out
cmc
sub
sbb
push
fcomps
test
xchg
push
shr
dec
adc
ret
dec
mov
adcb
lods
nop
bound
add
sti
inc
cmp
inc
xchg
lret
fwait
xlat
decl
mov
scas
jecxz
push
aad
cmp
jns
xchg
cltd
or
ret
mov
dec
ja
lds
adc
or
outsl
adc
mov
out
test
lds
pop
jae
aad
sahf
sub
sub
push
nop
and
pop
mov
or
movsl
mov
imul
stc
fists
or
dec
xchg
jns
push
aam
jae
sub
frstor
insb
mov
add
and
test
cmpsb
pop
pop
push
es
pop
das
mov
push
es
and
sbb
xchg
ret
add
inc
lea
push
js
lods
mov
hlt
and
mov
hlt
mov
mov
jle
cmp
in
cwtl
add
dec
xchg
lret
xchg
xchg
push
imul
int
enter
mov
jne
and
clc
adc
jns
cmc
push
aad
mov
push
imul
incl
mov
sbb
movsl
out
fcompl
cmp
adcb
inc
shl
sti
jnp
xor
dec
into
fsts
fst
dec
dec
pop
jb
jl
clc
inc
sbb
imul
and
jne
jbe
pop
mov
test
fadds
xor
mov
add
loop
inc
or
push
xor
and
and
cmp
lret
movsb
das
add
pop
inc
pop
out
sbbl
insb
xor
repnz
push
mov
addr16
or
sbb
in
fnstsw
xor
test
arpl
in
push
je
jns
aam
mov
pop
lret
mov
inc
mov
xor
aam
insl
push
pop
jae
inc
dec
jmp
fsubr
add
or
sbb
push
mov
inc
scas
in
and
xlat
imul
ss
cltd
sbb
dec
add
ljmp
subl
dec
loop
into
shlb
test
inc
mov
lea
xchg
outsl
adc
cmp
test
int
addr16
cmc
push
push
out
cltd
jle
mov
mov
xchg
shlb
xor
ds
push
sahf
cmpsl
dec
mov
cmp
mov
pop
mov
xlat
test
inc
out
adc
jl
push
sbb
aas
sbb
cmpsb
or
inc
pop
adc
mov
jno
jo
insb
scas
mov
or
jne
cwtl
push
fimull
mov
xchg
adc
bound
ret
fs
aam
das
movsl
xchg
subb
shll
or
push
iret
lods
loopne
movsb
pushf
daa
test
notl
cli
push
stos
outsl
loopne
push
sub
mov
xchg
in
mov
in
lds
push
call
mov
adc
dec
stos
or
xor
dec
cmp
cmc
sbb
push
jns
dec
dec
and
adc
sbbl
push
xor
test
xchg
out
leave
xchg
pop
or
inc
mov
push
gs
callw
or
adc
mov
mov
lds
add
jno
cwtl
lret
adc
arpl
xchg
test
ljmp
push
push
loope
mov
test
inc
js
imul
test
or
sti
cld
jno
fwait
stos
js
jnp
out
lret
or
xor
nop
or
repnz
aam
decl
lods
ret
mov
mov
rcll
fnstcw
rolb
outsb
nop
aad
adc
mov
xchg
fimuls
or
push
jnp
cltd
pop
fcompl
jne
cmp
ret
cld
cmc
lret
fldcw
push
sti
scas
mov
rcll
mov
xor
adc
imul
adc
das
sti
xchg
cs
pop
pop
fldt
decl
test
dec
pop
das
je
rorl
in
mov
xchg
mov
lods
sbb
pop
js
inc
jl
bound
xchg
mov
mov
push
jg
jle
cmc
push
inc
push
sub
jbe
cmpsb
inc
ret
outsl
adc
pop
xchg
mov
rcrl
shlb
pop
lds
push
add
int3
stos
pushf
dec
int
pop
add
push
scas
int
stos
testl
mov
cmp
sub
jmp
addl
mov
imul
xor
repnz
cmpsb
dec
adc
sub
fisubs
insl
push
aaa
adc
xchg
addr16
fisttpl
nop
pop
in
pusha
adc
inc
nop
aaa
jnp
jmp
fadds
ljmp
jge
pusha
fwait
shll
cs
mov
call
xor
or
cmpsb
scas
mov
xchg
cli
stos
push
sbb
push
ds
sbbl
jmp
fwait
repz
mov
in
cmp
mov
xchg
jno
xor
xchg
pop
xor
mov
out
push
xor
neg
jge
test
push
pop
mov
mov
pop
cmpsb
in
test
xchg
cmp
sbb
xchg
cmpsb
idivl
arpl
in
mov
inc
xchg
ficoms
xchg
cs
xchg
lods
les
jnp
mov
or
xor
add
icebp
inc
jl
jl
jo
data16
stos
mov
jns
sub
adc
mov
mov
rorl
xchg
ret
and
testb
shl
ja
leave
inc
repz
pushf
ja
js
mov
fisttpl
js
arpl
add
adc
cmp
pop
dec
loopne
adc
xor
in
xor
cltd
xor
js
mov
lea
adc
je
adc
aaa
inc
out
adc
mov
adc
jo
sub
and
les
or
fldl
or
fdivrs
ss
je
jg
aam
pushf
add
das
in
out
xchg
hlt
xor
nop
stos
into
sub
fcmovnu
mov
fsubrl
outsl
and
shrb
fcompl
fstps
dec
ret
in
sbb
push
mov
pop
ret
cmp
cmp
rorb
mov
andl
add
shlb
jo
push
addl
pop
stos
push
lret
add
cmc
mov
cmp
fs
jno
popf
jp
push
movsl
inc
jnp
and
div
xor
aam
push
jbe
pop
rcr
stos
xchg
scas
ja
mov
mov
jae
loopne
pop
sbb
or
pop
push
aam
stos
movsb
jae
or
fsubl
repz
jge
mov
imul
js
fnsave
and
sti
mov
lods
loope
insb
popf
adc
je
stc
int3
movsl
and
jno
cmp
leave
hlt
push
jbe
xchg
inc
call
test
ljmp
repnz
inc
mov
lret
leave
mov
sbb
mov
imul
loop
repz
cmp
or
xor
insb
out
js
or
cmp
mov
stos
jg
cmpsb
push
outsb
inc
les
cmp
scas
xor
cmpsl
mov
jp
dec
jnp
and
out
sub
push
int3
sti
sti
add
mov
stos
lea
dec
and
das
jo
ret
je
mov
jae
or
jbe
sbb
rcr
xchg
aad
dec
sub
dec
lods
das
pop
fcompl
dec
test
and
sub
push
sbb
xchg
pop
fnstsw
repnz
sub
mov
movsb
or
mov
xchg
mov
adc
adc
sub
lods
ja
xor
jmp
pop
cmp
pop
ds
or
cmpl
adc
xchg
out
lret
orl
and
lret
mov
pop
pusha
dec
add
cmp
dec
loope
mov
cli
into
in
roll
ds
addr16
push
shl
push
popf
loop
jle
clc
outsl
ret
sub
pop
je
call
bound
aad
pop
fistps
sub
fcomi
ret
aaa
icebp
cmp
dec
insb
inc
add
pop
div
ss
ret
cmp
cmpsb
mov
sub
jecxz
and
jbe
or
mov
sti
sub
rclb
movsl
xchg
stc
sub
sti
fists
es
leave
andl
arpl
xchg
stos
mov
xlat
int
in
ret
aam
fnsave
mov
mov
push
cs
pusha
mov
pop
xorl
pop
mov
cmp
sub
mov
out
lds
jmp
leave
adc
je
in
rcrb
or
mov
xor
ljmp
scas
cmp
clc
test
xchg
out
mov
fstpl
idiv
stc
addr16
icebp
jmp
inc
out
gs
das
or
movsb
popf
out
or
addl
xchg
pop
add
push
jne
cmp
movsb
fcmovne
cmp
mov
stc
mov
daa
adc
sbb
jmp
cmp
pushf
scas
mov
int
mov
imul
int3
jno
adc
call
stos
stos
add
out
mov
jne
insl
jbe
clc
je
add
lret
rcll
nop
arpl
mov
cmp
je
xorl
mov
adc
jle
xchg
sub
cmp
jge,pn
jge
inc
inc
fucomip
push
xchg
test
cltd
lods
nop
push
hlt
xchg
lock
xchg
lcall
mov
cltd
push
push
fldenv
scas
fnclex
sbb
aaa
or
xchg
fs
sub
or
imul
call
lea
add
jl
out
dec
xchg
in
dec
sar
scas
lods
pop
ret
movsb
or
xchg
sbb
loope
and
enter
xchg
xor
push
stos
inc
test
sahf
sub
pop
lock
push
mov
imul
and
subb
sub
mov
cmpb
or
call
and
push
mov
cli
popa
dec
dec
dec
mov
push
loop
cmpsl
sub
aaa
xchg
cmp
sbb
mov
mov
pop
push
out
jns
mov
lret
imulb
ljmp
jbe
and
std
dec
add
sbb
sbb
and
movsb
pop
ss
imul
push
rol
into
scas
mov
cmp
in
in
push
es
pop
loop
and
ret
lock
and
dec
repz
sub
add
xorl
mov
pop
mov
push
mov
sbb
sub
adc
push
inc
les
jecxz
cmp
cmp
in
xchg
push
sbb
mov
test
mov
xlat
enter
jecxz
sub
movsl
push
cmp
jl
push
push
adc
xlat
in
dec
nop
lods
and
push
or
sbb
lret
shrb
mov
pop
sbb
pop
xchg
ficoml
and
ds
push
and
aad
into
iret
jo
xchg
inc
jns
loope
push
mov
pushf
outsb
mov
push
or
stos
xor
cmp
lret
or
sbb
jbe
mov
or
cmpl
push
fdivrl
sub
adc
and
shrb
push
repz
pop
dec
fwait
lods
fsubs
sbb
sti
faddp
test
pusha
xor
cmpsl
xchg
push
add
xorl
cmp
pop
mov
pop
nop
ljmp
lahf
push
add
arpl
dec
xor
ja
xchg
dec
jg
xlat
push
dec
mov
mov
adc
xchg
mov
das
jle
cli
mov
mov
xor
mov
stc
pop
movl
push
adc
sub
xor
pop
cmp
fidivrl
insb
mov
adc
cld
aad
cmp
or
nop
inc
int3
adc
cli
xor
mov
insb
icebp
iret
aas
mov
lods
stos
sahf
mov
pushf
xor
pop
aas
add
mov
dec
repnz
pop
lods
or
out
insb
int
shr
adcb
mov
push
jbe
sbb
loop
push
mov
iret
xor
or
test
mov
pop
push
add
mov
sti
popa
nop
xchg
sub
adc
enter
fmull
imul
sub
cltd
dec
cmp
xor
pushl
jb
or
fwait
in
cli
lcall
test
leave
ret
in
xchg
jb
ficoms
ljmp
xchg
mov
iret
out
inc
mov
cmp
or
adc
xor
push
sbb
into
mov
aas
inc
jmp
cmp
shll
mov
dec
lds
aam
mov
inc
fs
inc
sbb
xor
xor
cmp
jne
cmp
jne
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
je
mov
xor
mov
sub
add
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
mov
jmp
test
lock
orb
enter
js
adc
addb
movsb
add
xor
out
movsb
xchg
mov
repz
or
repz
xchg
pop
cmpsl
outsb
and
ljmp
jg
jmp
test
sub
dec
mov
mov
aad
daa
dec
rorl
out
sub
and
loopne
addl
je
shlb
or
bound
inc
cmpb
sbb
add
enter
mov
shr
xchg
mov
nop
jb
pop
push
and
mov
xchg
loopne
add
and
pushf
push
shrl
push
pop
xchg
mov
repnz
or
xchg
notl
stos
jge
sub
out
xor
jnp
mov
iret
shlb
pushf
loop
imull
sub
cmc
and
sets
popa
jo
bound
movsb
xchg
inc
gs
or
xor
jp
pop
mov
sti
leave
pop
outsl
das
js
das
fwait
and
pushf
or
jns
add
clc
pushf
repnz
sti
lcall
pop
aad
fildl
add
or
adc
push
scas
rorb
test
push
push
fs
jnp
inc
lods
push
test
cmc
adc
jge
or
or
int3
mov
jg
sub
sub
inc
frstor
pop
dec
or
jae
clc
pop
xchg
mov
enter
scas
test
mov
lret
ficoml
pop
cmc
lahf
stos
jb
or
incl
in
fistps
push
lods
lods
jbe
aam
pop
adc
lods
push
test
subb
lret
icebp
cmp
cmp
add
pop
dec
popa
lea
imul
or
pop
jne
or
dec
inc
mov
or
inc
ljmp
call
out
lret
out
dec
aad
sbb
out
or
lods
insl
loop
xchg
pmulhuw
jmp
loope
inc
ss
and
jl
mov
dec
jno
jno
gs
in
popa
mov
into
into
lds
andl
ss
sub
inc
pop
outsl
xchg
adc
mov
aad
aad
mov
outsl
mov
cmpsl
sahf
pop
aaa
xor
sbb
je
push
and
sub
loopne
xor
hlt
and
adc
rcrb
push
mov
lods
jns
scas
jle
lret
ds
out
jge
loope
popf
mov
or
dec
mov
dec
aas
ss
movsl
jns
cmpsl
jne
cmpsb
fsts
and
sbb
mov
or
sahf
in
sub
xor
rcl
popa
repz
inc
mov
xchg
mov
shrb
out
mov
fnstcw
mov
push
mov
pusha
cmp
mov
cmc
cmp
sbb
stc
addl
addr16
push
sti
add
push
pop
loopne
pop
cs
inc
ja
cmp
les
lret
das
iret
push
add
pop
push
arpl
jo
pop
out
lret
push
xchg
pop
movsb
add
adc
cmp
push
pusha
push
inc
aaa
adc
loope
hlt
mov
data16
mov
aaa
das
out
test
leave
nop
add
mov
mov
mov
fwait
loopne
lret
out
and
jl
and
js
push
or
pop
es
fbstp
add
mov
ja
mov
inc
popf
push
jge
pusha
test
and
push
cmp
movsl
push
call
add
cltd
cmp
aam
aas
bound
push
mov
mov
cmpsl
push
outsl
stos
andb
xchg
shr
push
adc
push
repz
dec
cli
jo
orl
lds
fistps
shll
adc
push
subb
xchg
aad
jg
arpl
adc
in
arpl
shl
jne
jo
fidivs
pop
in
iret
sbb
xor
mov
sbb
pop
fdivrl
loope
xchg
das
outsb
fxch
shl
xchg
mov
into
loop
in
out
icebp
push
sub
dec
sti
jae
pop
mov
dec
adcb
imul
std
mov
mov
cmpsl
mov
or
arpl
mov
test
rcr
push
les
out
push
ja
xor
jns
push
repnz
lcall
decb
fdivr
xor
mov
pop
loope
mov
jle
fbstp
test
je
cmp
gs
js
lods
popf
call
xor
mov
lock
push
ja
sub
push
xor
loope
xor
mov
push
rcl
mov
push
outsl
insb
call
push
adc
xor
icebp
popf
dec
test
bswap
data16
pop
repz
or
cmp
fwait
lahf
pop
std
adc
clc
mov
xlat
std
stos
imull
dec
pusha
or
dec
out
shll
out
xor
or
out
hlt
mov
jecxz
dec
outsb
sahf
into
and
scas
faddl
xor
test
test
sbb
adcl
jnp
nop
adc
pop
add
roll
js
dec
mov
push
cld
incb
pop
in
in
gs
xor
pushl
sub
fcoms
ja
sbb
push
jmp
stc
xchg
push
push
xchg
or
shll
daa
pop
pop
xor
mov
mov
lock
xor
fwait
sub
inc
jmp
xchg
jo
inc
stc
mov
pop
imul
fistps
ret
jo
sbb
adc
loop
mov
aaa
sbb
int
jb
test
adc
popa
or
mov
sbb
flds
add
fucomp
mov
adc
or
cmp
sub
push
shl
push
mov
lret
mov
dec
jno
sbb
imul
xchg
xor
cmpsl
mov
test
rep
dec
lret
bound
test
loope
movsl
dec
mov
push
pusha
dec
loop
sahf
dec
adc
ja
dec
mov
flds
adc
and
leave
inc
xchg
pop
or
sub
daa
mov
adc
das
and
sarl
mov
mov
imul
push
pop
loop
fmuls
or
insb
stos
sbb
ss
sbb
loope
cltd
or
xchg
inc
adc
adc
jmp
mov
jmp
push
xchg
jns
ffreep
sub
or
les
xchg
inc
sub
push
push
mov
fldcw
les
pop
test
mov
int
scas
ret
fucom
sarb
cmp
cmpsb
pop
out
mov
aam
andb
xchg
out
js
into
ss
adcl
mov
std
je
lock
data16
ljmp
adc
mov
adc
add
xchg
cmp
in
push
cmpsb
xchg
js
dec
popf
rcrl
pop
adc
jae
scas
cmp
push
cmpsb
or
ljmp
dec
je
in
sahf
add
ja
add
cld
adc
adc
js
adc
je
mov
pushf
inc
ja
pop
adc
movb
int
xchg
ror
stos
xor
cmpsb
cmc
fisttps
scas
cmp
cmp
adc
gs
loopne
or
adc
sub
gs
push
sub
cmc
xchg
or
dec
scas
mov
jne
jbe
xor
sub
cld
int3
adc
jmp
fidivrl
imul
sub
sub
or
mov
ss
inc
cmpsl
jae
clc
imulb
and
popa
mov
enter
nop
pop
mov
adc
cmpsl
push
adcl
mov
pop
inc
push
daa
or
adc
lahf
and
div
or
test
xchg
mov
fmul
xor
rcr
sub
cmp
in
pusha
add
xor
add
jmp
xchg
push
adc
ljmp
test
pushf
pop
int
xchg
ret
xor
xlat
nop
mov
fdivl
mov
xor
test
sub
mov
add
mov
fwait
dec
xchg
fistpll
xchg
lds
jecxz
mov
aas
test
push
and
adc
mov
push
pop
sub
pop
adc
in
adc
arpl
pop
mov
cmpsl
cmp
jmp
adc
add
int3
pop
mov
xchg
out
cmp
lods
outsl
cmp
push
into
push
ror
bswap
testl
mov
xchg
stos
sbb
xor
push
int3
or
mov
imul
mov
inc
mov
das
xor
in
mov
in
lcall
scas
adc
dec
fcmovu
or
daa
aad
push
push
cltd
arpl
in
insb
push
adc
xor
fnstsw
xchg
mov
ss
dec
pop
inc
jae
repnz
cli
ficomps
pop
lea
mov
shrb
and
pop
push
adc
xor
addr16
mov
or
jl
mov
mov
xchg
mov
xchg
cld
mulb
lahf
mov
fiaddl
mov
ret
fimull
and
shlb
jno
pop
ret
stc
insb
inc
mov
lcall
adc
fdivr
call
cmp
lcall
mov
pop
sbb
add
sub
in
ret
ja
cmpsb
roll
jbe
mull
movsl
pusha
jns
push
stos
mov
xor
push
or
insl
sti
inc
mov
mov
jecxz
adc
lret
enter
clc
xchg
sbb
jnp
xor
dec
dec
add
mov
stc
mov
or
icebp
ljmp
jecxz
ds
push
insb
cmp
lods
xchg
pop
std
push
pop
sbb
adc
fildll
aas
jmp
call
outsb
bnd
sub
scas
mov
jle
mov
xchg
les
mov
xor
hlt
bound
bound
mov
xchg
bound
in
inc
adc
insb
pop
in
nop
addl
das
loope
jnp
or
mov
loopne
jmp
push
push
adc
push
lret
movq
scas
jl
aad
inc
dec
xchg
sub
incb
les
sub
cwtl
or
fdivrs
cmc
jb
mov
mov
sub
mov
notb
rorb
aas
sub
orb
sti
push
and
shrl
jp
pop
add
test
scas
mov
pusha
rcl
rorb
dec
pop
jnp
daa
xor
popl
pop
mov
outsl
imul
jecxz
dec
cli
push
push
imul
xchg
aaa
pop
cmp
inc
imul
jle
lods
pop
stos
sbb
mov
cld
push
fstl
jle
push
xchg
ja
cmp
xor
shll
adc
xlat
stos
adc
push
in
pop
in
cmp
or
push
sbb
inc
aad
jns
xlat
ja
sub
and
ds
xor
and
pop
sbb
lds
shlb
push
dec
jb
and
aaa
and
cld
inc
mov
jl
inc
sub
pcmpgtd
lret
xchg
adc
test
scas
fistpll
std
mov
sub
jge
jecxz,pn
adc
sbb
fmuls
mov
lds
pop
out
cli
in
mov
xlat
lret
sbb
aas
addr16
push
aaa
mov
xor
cmp
jnp
mov
xor
xchg
xchg
out
xlat
scas
pushf
inc
ja
and
mov
cmpsb
xor
daa
cmp
lahf
lcall
cmpsb
mov
adc
iret
or
daa
add
mov
in
subb
xchg
repnz
pop
xchg
xlat
jle
push
ret
push
or
push
les
pusha
ror
cmp
jo
fdivrl
sub
movsb
adc
hlt
notb
cmpsb
pusha
add
negb
rolb
ret
push
sub
jns
push
lahf
dec
cs
test
push
aaa
xchg
leave
lods
xchg
inc
js
dec
out
mov
sbb
insl
sbb
jae
aad
cmp
add
xchg
cmp
sbb
dec
xchg
xor
ss
jb
repnz
push
sahf
xor
mov
sbb
dec
data16
and
xchg
decl
pop
mov
fiadds
or
stos
mov
and
xchg
push
scas
cmpsl
or
cli
add
movsb
test
and
ds
mov
loope
sbb
cmpsl
out
xchg
icebp
in
push
mov
lea
loope
mov
call
fdivs
add
add
mov
in
adc
div
idivl
int
adc
xorl
out
sarb
xchg
mov
push
cwtl
das
inc
inc
cld
push
mov
notb
jmp
stos
mov
sub
inc
cltd
inc
adc
jl
clc
pop
sub
mov
rclb
clc
cmp
loope
repz
rcrl
loope
sbb
bound
in
push
mov
push
fdivs
orb
adc
sub
movsb
push
jns
xor
icebp
dec
sbb
pop
mov
ficoml
push
or
fstps
dec
xor
add
push
push
lret
dec
mov
inc
not
insb
call
or
inc
adc
cmp
rcl
xchg
mov
sbb
sahf
lds
test
mov
cmpsb
int
adc
or
fdivrs
loope
dec
sub
scas
dec
jecxz
mov
jmp
push
push
cmpsl
test
sbb
pop
pushf
cmp
pop
inc
std
push
add
inc
xor
lahf
adc
inc
inc
or
inc
push
das
jne
data16
int3
add
push
jae
mov
lods
in
aad
in
mov
xor
sub
jp
ret
cmp
iret
add
xor
push
test
rorb
rclb
roll
lret
lret
mov
xor
repz
mov
push
sbb
push
and
push
lock
jns
imulb
insb
arpl
popa
or
cmp
int3
popa
popf
imul
movsb
call
inc
push
jno
inc
cmpsb
fisubrl
call
test
pop
ficoms
out
or
lahf
cmpsl
call
lods
inc
mov
mov
das
jb
shlb
xchg
idivb
daa
jns
dec
pop
fsubr
in
push
inc
adc
sbbl
push
sbb
cmp
xchg
popf
hlt
or
or
loop
mov
or
jne
fistpll
scas
sub
xchg
iret
jge
lods
lahf
rcl
imulb
inc
js
daa
inc
std
mov
sbb
ja
imul
enter
addr16
adc
jo
test
cwtl
xor
fs
adc
mov
fwait
pushl
pop
es
xchg
repnz
jecxz
jae
cmp
push
imul
sub
test
ss
cwtl
shrb
iret
sahf
pop
mov
aam
mov
nop
in
sub
daa
addb
xor
mov
mov
jne
cltd
push
mov
lahf
jle
cmc
bound
jno
es
gs
lcall
push
sbb
mov
lock
sarl
adc
decl
or
xorl
sarl
bnd
xchg
inc
faddp
push
imul
rcrb
insl
mov
shlb
stos
push
ficomps
pushf
scas
inc
mov
ds
loope
cmp
imul
sbb
adc
inc
sbb
sub
stos
cld
xchg
movsb
mov
test
jg
jmp
jmp
inc
movsb
mov
pop
push
fs
xor
xor
outsl
std
push
mov
mov
shrl
mov
jle
mov
movsb
push
in
mov
ss
xor
jmp
xchg
in
or
leave
popf
sub
dec
arpl
jle
lock
sti
jne
add
jg
outsl
pop
sbb
add
mov
call
repz
sub
movl
cmp
das
inc
nop
cmpsl
jp
aas
adc
and
les
push
dec
pop
int
aas
movsb
jno
nop
or
inc
xlat
pop
imulb
add
xchg
sbb
addr16
test
push
idivl
push
mov
xchg
mov
dec
cmp
adcl
lahf
sbb
enter
fcoms
mov
popa
loope
fidivrs
sub
fxtract
jnp
mov
add
mov
clc
xor
mov
xlat
aaa
xorl
imul
into
and
cld
nop
xchg
ljmp
mov
ja
fdivs
push
sbb
in
inc
imul
test
inc
in
lock
lret
cmp
adc
jbe
loop
shrl
or
loope
pushf
pop
fidivrs
dec
outsl
xor
into
jge
das
subl
call
enter
sbb
outsl
pop
mov
roll
xchg
int
lods
pop
imul
adc
sub
stos
lods
lret
dec
jns
jmp
mov
scas
or
add
into
add
cmp
and
mov
inc
sbb
add
ss
pop
dec
inc
adc
lahf
mulb
sub
outsl
mov
insl
mov
stos
jne
gs
sbb
adc
icebp
inc
xor
jmp
xlat
ljmp
sub
les
out
adc
pop
xor
push
mov
int3
movsb
pop
lods
push
aam
inc
xchg
imulb
and
loop
out
or
pop
fxch
subb
out
sub
or
daa
mov
repnz
gs
xchg
xlat
push
fdivl
mov
in
push
push
pusha
fnstcw
push
out
adc
dec
dec
out
pop
xor
sbb
repz
or
inc
xor
add
inc
popf
out
xchg
imul
pop
jl
sarb
pop
sbb
cld
adc
std
cmp
cmpsb
add
scas
jo
inc
pop
adc
ds
cs
xchg
adc
std
sbb
lcall
pop
pop
andb
jl
xchg
push
ljmp
dec
cmp
mov
add
or
xor
fdivrl
cmp
loop
sbb
cltd
pop
jmp
adc
add
xor
jecxz
mov
inc
adc
lock
jno
xchg
test
xchg
aad
les
dec
and
mov
hlt
inc
sbb
outsb
push
mov
aas
push
or
cmp
sbb
imul
dec
stos
push
push
and
sbb
mov
xorb
out
mov
add
adcl
xor
ds
cmpsl
outsl
mov
inc
outsb
ljmp
mov
aaa
push
and
shlb
loope
add
lret
out
pop
sub
jl
adc
mov
sti
repz
and
pop
inc
pop
shlb
jb
test
mov
mov
sbb
push
inc
loop
jg
icebp
subl
and
xchg
fisubrl
and
cltd
movsb
and
inc
jo
shlb
xchg
ljmp
add
int3
jb
jnp
jb
outsb
lods
dec
stos
aam
adc
and
shlb
or
jge
fcmovne
pop
roll
dec
xor
shrl
and
subb
lock
mov
push
es
pop
sbb
dec
lods
aad
in
rcrb
dec
iret
popf
jnp
cmp
jb
mov
sbb
push
sbb
addr16
test
scas
sbb
jge
mov
ja
adc
or
clc
pop
adc
aas
lods
iret
dec
adc
jmp
pop
loop
adc
pop
sbb
pop
outsb
cmc
xor
push
idivl
fs
test
into
xchg
add
push
jnp
cmpsl
fildl
lock
add
push
aas
pop
or
aaa
and
push
ljmp
pop
sbb
int3
test
call
out
je
mov
jnp
out
mov
cmp
and
jle
pop
lods
xor
cwtl
pop
inc
aaa
inc
in
ss
shll
mov
dec
cmp
dec
cmp
mov
rep
jno
cmp
xchg
outsb
test
lds
fildll
mov
inc
sahf
add
push
dec
std
out
aaa
test
movsb
and
push
sub
dec
nop
cltd
mov
sub
jle
cld
imul
push
aaa
mov
loop
outsl
cmp
int
jge
fimull
call
cmp
jo
xchg
mov
out
ljmp
xor
fsubrl
inc
cmp
test
les
je
inc
cmpb
mov
dec
stc
adc
jmp
push
sbb
mov
inc
mov
fs
iret
and
lock
push
data16
add
push
jecxz
das
addr16
mov
fcomps
cltd
sbb
inc
pop
adc
in
mov
xor
hlt
mov
out
pop
daa
testl
push
les
insl
cmp
mov
insb
dec
adc
xor
cmp
push
clc
cmp
push
mov
imul
popf
xor
jp
aaa
dec
jmp
lods
scas
xchg
adc
pop
call
pop
cltd
daa
add
int3
ja
inc
mov
out
stc
cmp
mov
repnz
mov
add
rdmsr
inc
jbe
mov
xchg
pushf
push
shrl
lods
imull
cmpsl
push
notl
ljmp
in
scas
xor
xor
fisttpl
cmp
clc
jl
push
mov
ret
ljmp
mov
ret
adc
pop
push
fistpll
lock
js
sbb
popf
jnp
xchg
cltd
movsl
arpl
ljmp
ror
cmp
dec
fisubrs
sbb
mov
jmp
incb
xor
mov
lods
sbb
insb
sahf
adc
nop
decb
in
or
inc
push
call
hlt
test
icebp
outsb
push
add
mov
popa
fwait
shrl
mov
mov
or
inc
jb
das
stos
xchg
mov
js
mov
sbb
pop
jl
jnp
mov
imul
inc
nop
clc
jmp
mov
adcl
mov
ret
into
das
pop
fists
inc
lds
jl
dec
push
scas
aas
popf
jno
mov
negl
xor
mov
or
lock
mov
loopne
ja
hlt
lret
pop
nop
mov
dec
mov
addr16
jne
add
ja
enter
pop
std
icebp
imul
out
in
out
or
cmpsb
ficompl
leave
stc
and
call
test
push
jo
shlb
xchg
lock
std
or
stc
xchg
cld
push
stos
arpl
test
out
inc
sbb
arpl
lods
lods
ljmp
mov
fwait
out
push
movsl
pop
out
add
dec
movsb
xor
sub
mov
mov
imul
pusha
int
bound
dec
cmp
out
sub
loop
hlt
movsl
mov
ss
mov
aas
in
mov
sbb
jne
pop
push
cwtl
scas
xchg
jge
ds
jle
mov
pusha
mov
sbb
adc
sbb
or
cwtl
and
rolb
outsb
sub
clc
int3
test
sti
repnz
pop
inc
sbb
cmp
cmp
xchg
cmp
loop
cmp
ljmp
xchg
stc
fistps
pop
test
jmp
adc
rcll
push
aas
inc
sbb
shrl
rolb
cwtl
in
repz
cmp
xchg
ljmp
jge
jns
cmp
aad
mov
clc
push
mov
ret
pop
insl
insl
mov
mov
ss
fistpll
xchg
ret
adc
out
mov
mov
inc
inc
rcr
clc
ror
imul
hlt
mov
push
dec
lock
icebp
mov
sahf
ret
push
or
xchg
mov
adc
mov
ljmp
xchg
xchg
jg
add
jnp
stc
and
mov
std
insb
sahf
jne
cli
jle
lret
inc
dec
push
fucomp
pushf
mov
aad
or
shrb
xor
and
leave
lods
pcmpgtw
xor
cmp
sub
dec
pushf
fidivrs
push
pop
mov
xor
xorb
test
jae
and
sub
or
clc
enter
sbb
es
pop
cmp
mov
scas
push
adc
outsl
push
stos
cli
not
decb
jo
out
xchg
fdivrp
push
imul
mov
mov
scas
mov
push
sbb
stos
mov
and
movsl
and
jl
call
movl
pop
and
rcrl
cmp
pop
dec
jge
push
xchg
mov
push
ret
add
shr
mov
mov
add
push
out
cmp
movsb
push
inc
int3
mov
aaa
aas
lods
push
dec
inc
aaa
pop
aas
gs
popl
das
mov
jmp
jbe
push
sbb
adc
pop
pop
dec
cwtl
aas
push
mov
sbb
out
mov
mov
pushf
movsl
lahf
jge
testl
cwtl
mov
cs
cwtl
lea
inc
adc
aam
mov
in
outsb
je
pop
jno
inc
int3
xor
out
or
sub
fistps
fldcw
jne
stc
out
das
les
sahf
mov
in
and
jl
call
stos
cmpsl
jp
cli
inc
shll
mov
arpl
lret
arpl
mov
xchg
addb
pop
scas
int3
int
mov
adc
cmp
mov
and
sbb
mov
and
xchg
fldt
xor
jecxz
outsl
mov
cli
nop
popf
mov
push
push
xor
sbb
cli
and
dec
add
test
mov
inc
into
cmp
dec
bound
lods
lock
push
fldcw
cmp
dec
rclb
inc
movsl
in
adc
insb
sub
int3
or
lcall
insl
xchg
lret
jmp
xchg
add
add
inc
mov
stc
in
mov
jle
xor
mov
adc
cli
cmp
roll
call
in
shlb
pop
ss
out
and
xchg
in
roll
fwait
adc
pop
in
lock
xchg
mov
out
ret
pop
cmp
popa
and
cmp
fwait
in
mov
es
aam
add
xchg
push
dec
lahf
or
in
adc
int
cmp
mov
jne
out
xchg
xor
push
pop
test
inc
pop
add
arpl
in
daa
popf
cli
mov
xor
pushf
push
cld
dec
jmp
popf
sub
mov
inc
inc
out
mov
nop
out
jge
imul
in
dec
dec
int
cmp
or
cmp
insl
pop
pop
popf
xchg
fidivrs
sarb
xchg
or
cmp
inc
add
cmp
ds
sub
push
inc
bound
int
mov
xchg
aam
arpl
hlt
pop
jae
xchg
xchg
or
lret
cmp
fcoms
addb
and
std
out
pop
xchg
outsl
dec
push
int3
add
popf
xchg
cmp
iret
xchg
dec
xor
ret
pop
movsb
fisubl
rcl
sahf
xchg
lret
sar
stos
jne
stos
jb
imul
mov
lahf
mov
xchg
and
inc
add
in
mov
xor
add
push
mov
push
mov
xor
test
xchg
mov
sbb
repnz
mov
ret
and
add
push
pop
pop
movsb
std
out
fisubrl
pushf
std
arpl
xchg
xor
cmp
js
icebp
mov
pop
and
insl
push
jmp
mov
loop
mov
pop
inc
cltd
mov
cmpsl
xchg
daa
inc
aaa
mov
inc
stos
and
pop
mov
and
enter
enter
lods
fldt
ret
mov
aas
icebp
adc
mov
mov
out
int3
xchg
sub
mov
mov
sub
movsb
into
cmp
push
cmpsl
and
daa
iret
clc
xchg
push
add
fwait
outsb
inc
dec
jb
push
jb
adc
aaa
ds
pop
xchg
mov
data16
jg
and
subb
bound
xor
add
add
hlt
stos
mov
sbb
mov
inc
or
jg
adc
xor
test
cmp
dec
jge
mov
add
leave
in
jns
jl
scas
cs
push
or
in
adc
ds
outsl
test
loopne
sahf
adc
xchg
jl
outsl
mov
adc
mov
jbe
xor
lods
mov
in
inc
data16
insl
adcb
ljmp
mov
lcall
nop
jge
loope
mov
inc
pop
out
xor
outsb
loopne
es
pusha
es
cwtl
stos
aam
outsb
stc
jecxz
fildl
jg
sti
cmp
mov
cld
imul
fs
cmp
lea
insb
cmpb
push
gs
push
outsl
rolb
dec
xor
pop
cmpsb
loop,pt
test
mov
in
in
test
jl
pop
negb
dec
int3
fimuls
mov
inc
mov
mov
xor
lods
pop
fs
cmp
adc
ljmp
jl
mov
dec
and
les
movsb
in
mov
cli
add
cmp
stc
push
xchg
scas
insl
or
iret
repnz
pop
xor
push
dec
push
or
arpl
inc
push
mov
jecxz
loope
cmp
jbe
cmp
pop
adc
push
adc
ret
popf
lock
mov
pop
lods
hlt
int3
iret
mov
dec
daa
imul
xchg
lcall
cmp
cmc
ret
arpl
pushl
fdivl
aad
cmp
ret
js
in
cltd
pop
aam
es
insl
inc
xlat
lret
xor
jge
adc
mov
sbb
sub
leave
sub
cmp
jae
or
pop
jge
xchg
aaa
jg
xchg
mov
not
jl
sub
lret
jle
cmp
push
cwtl
xchg
inc
sbb
jno
jbe
bound
std
ss
mov
sub
xor
lds
nop
jge
aam
sub
loop
stos
pop
je
lods
jmp
clc
add
inc
stos
dec
stos
xchg
rcr
adc
mov
sub
dec
push
repz
nop
mov
add
fisubs
faddl
packsswb
pop
push
jb
adc
fsub
mov
pop
jae
jns
sub
jl
pop
fld1
movsl
fbstp
es
lods
or
dec
jge
push
sbb
and
jb
sub
xchg
add
jnp
or
mov
adc
in
icebp
rorb
loopne
mov
mov
push
ss
jg
mov
xor
cmpsl
arpl
ja
jmp
xor
push
gs
mov
sti
or
xorl
ja
insl
mov
ljmp
jne
dec
inc
xchg
adc
jmp
aas
mov
and
add
cld
xchg
mov
out
bound
cmp
lods
ljmp
rclb
mov
cmp
mov
pop
movsb
insb
cmpsb
add
aaa
xchg
mov
mov
mov
dec
inc
xchg
outsl
mov
ret
daa
fs
sbb
fnclex
fnstenv
je
in
add
or
arpl
dec
cld
call
fcompl
adc
sbb
add
cmp
test
fnstcw
lods
sbb
test
xor
jnp
out
in
nop
mov
cltd
hlt
xlat
xchg
movsb
jnp
jge
roll
sbb
pop
bound
enter
push
hlt
dec
jne
pushf
mov
jmp
dec
jnp
fstpt
imul
movsl
pusha
fcompl
mov
xchg
pop
popa
mov
scas
cltd
mov
fs
sub
mov
and
fsts
xchg
int3
sub
inc
push
add
mov
mov
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
orl
sub
sbbl
push
push
push
andl
push
orl
push
orl
call
subl
mov
lea
push
subl
push
movl
call
cmp
je
xorl
xor
jmp
mov
xorl
push
lea
push
push
push
subl
push
adcl
call
imul
cmp
movl
jne
orl
lea
andl
push
addl
push
andl
call
cmp
jne
addl
movl
or
mov
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
addl
movl
mov
or
lea
mov
xor
lea
sbb
mov
or
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
xor
add
dec
mov
jmp
mov
mov
mov
mov
mov
sbb
xor
adcl
mov
addl
add
notl
mov
movl
mov
cmp
movl
jne
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
adcl
xor
subl
add
addl
mov
mov
xor
notl
add
sbbl
mov
mov
sbbl
xor
subl
add
mov
andl
xor
xor
inc
mov
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
mov
addl
mov
mov
mov
mov
addl
mov
orl
mov
mov
decl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
sbb
mov
xor
xorl
add
jmp
lea
subl
push
addl
push
addl
call
movl
cmp
jne
push
lea
addl
push
adcl
push
push
orl
push
call
imul
movl
cmp
movl
jne
sbbl
lea
push
push
sbbl
call
movl
cmp
jne
mov
xor
mov
sbbl
xor
sbbl
lea
incl
push
add
mov
xor
lea
xorl
push
movl
mov
xorl
pushl
adcl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
adc
xor
and
lea
mov
neg
mov
orl
xor
orl
xor
xorl
add
mov
addl
xor
movl
lea
movl
mov
cmp
jbe
xor
or
or
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
push
call
cmpl
jb
mov
mov
mov
movl
cmpl
je
cmpl
ja
jmp
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
movzbl
adc
mov
subl
sub
andl
xor
mov
lea
mov
xorl
lea
subl
mov
lea
subl
push
addl
push
call
movl
cmp
movl
jne
push
lea
xorl
push
push
adcl
push
push
call
imul
cmp
jne
lea
push
push
subl
call
movl
cmp
movl
jne
lea
addl
push
negl
push
addl
call
movl
cmp
movl
jne
xorl
push
orl
lea
andl
push
subl
push
adcl
push
xorl
push
orl
call
imul
movl
cmp
jne
orl
lea
push
subl
push
notl
call
movl
cmp
movl
jne
lea
push
subl
push
subl
call
movl
cmp
jne
addl
push
lea
push
sbbl
push
push
push
call
subl
imul
movl
cmp
jne
addl
lea
orl
push
push
andl
call
movl
cmp
movl
jne
andl
lea
adcl
push
orl
push
sbbl
call
movl
cmp
movl
jne
xorl
push
lea
orl
push
push
push
subl
push
call
imul
movl
cmp
movl
jne
addl
lea
orl
push
andl
push
andl
call
cmp
jne
orl
lea
subl
push
xorl
push
addl
call
movl
cmp
movl
jne
adcl
push
xorl
lea
xorl
push
adcl
push
push
sbbl
push
adcl
call
imul
cmp
jne
movl
lea
addl
push
notl
push
call
movl
cmp
jne
lea
xorl
push
push
addl
call
movl
cmp
movl
jne
push
lea
adcl
push
xorl
push
adcl
push
xorl
push
call
adcl
imul
movl
cmp
jne
lea
xorl
push
push
orl
call
movl
cmp
jne
addl
lea
movl
push
push
adcl
call
movl
cmp
jne
andl
push
lea
push
push
subl
push
sbbl
push
call
xorl
imul
movl
cmp
movl
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
sub
mov
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
or
mov
push
movl
cmpl
je
cmpl
ja
jmp
push
pushl
call
mov
dec
mov
jmp
mov
xor
mov
push
mov
add
cmp
movl
je
movzwl
adc
mov
mov
incl
xor
andl
xor
add
addl
add
movl
adc
orl
xor
adcl
mov
movl
cmpl
je
cmpl
jge
jmp
push
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
jmp
sbb
cmp
xchg
xchg
dec
push
test
mov
addl
addl
and
test
int3
lret
dec
pop
loope
outsb
outsb
sbb
cmpsb
xchg
and
jmp
push
orb
int3
push
lret
call
ret
and
sbbb
jbe
adc
jb
xchg
repnz
clc
lods
xchg
daa
call
push
test
jg
inc
mov
enter
loop
add
and
push
mov
js
adcl
jge
arpl
out
inc
sub
outsl
mov
jge
cmp
xchg
pop
lds
out
sub
mov
fiadds
out
jmp
loope
shrl
push
dec
xor
dec
insb
adc
int
cmp
pop
stc
pop
insb
pop
cmp
ljmp
lcall
mov
ret
jmp
into
loop
adc
fstps
dec
test
leave
test
mov
xor
outsb
fdivr
das
ds
pop
adc
cmp
dec
int3
or
push
inc
mov
push
in
test
add
int
or
jmp
repnz
cmpsb
jno
int3
sti
aas
jae
aam
adc
sbb
pop
cmc
jne
add
jmp
popa
inc
sub
xchg
jnp
adc
dec
jb
xchg
testl
jl
stos
imul
dec
and
pop
mov
mov
adc
sub
clc
es
push
pop
fcompl
pop
sti
xchg
inc
mov
call
rcrl
fimuls
adc
pop
jne
mov
jmp
jae
mov
loop
xchg
lea
or
ss
mov
test
mov
pop
or
cmpsb
sbb
mov
shrb
cmc
pop
jb
mov
cmp
lods
test
xor
mov
adc
cld
dec
shll
mov
cmp
sbb
out
dec
or
jae
outsb
into
mov
lcall
push
or
adc
dec
sub
clc
mov
pop
mov
lock
in
add
mov
or
mov
clc
je
pop
or
hlt
je
ror
mov
js
call
outsl
xchg
cmp
inc
inc
cmpsb
out
push
jbe
jp
xchg
test
mov
mov
cmp
lahf
mov
dec
push
out
cmp
cmp
sub
mov
mov
mov
in
mov
aas
or
idivl
xchg
pop
lea
icebp
insb
push
xor
xchg
xchg
in
sahf
and
pop
scas
push
std
repnz
jecxz
xlat
push
out
mov
fwait
lea
xchg
lcall
lret
enter
jecxz
mov
jmp
pop
dec
lock
outsl
andb
cmp
jns
or
lret
out
and
pop
and
sub
xor
or
cmp
pushf
stos
cmpsb
cltd
cmpsl
fdivl
lods
sbb
int3
push
cmc
call
adc
pop
ds
out
std
add
inc
and
sub
inc
aaa
fdivr
out
xchg
adc
push
add
fcoml
fisubl
repnz
xorl
xchg
and
fnsave
sbb
jge
test
mov
xchg
cmpsl
stc
and
scas
pop
inc
repz
lods
jbe
mov
cmp
js
cmp
jbe
sbb
pop
in
mov
out
and
mov
std
pop
dec
mov
and
xchg
popf
sbb
push
insl
push
std
btr
or
cmc
jno
jne
pop
xorl
mov
stc
sub
test
inc
add
mov
imul
fwait
cwtl
jp
sbb
adcb
cmp
cs
mov
loopne
or
sub
ljmp
xchg
mov
cmpsl
ss
and
lock
push
jl
sbb
push
or
cld
mov
mov
mov
jle
clc
stmxcsr
add
dec
inc
xor
sbb
mov
sub
imul
jne
mov
fdivrl
mov
inc
cmovo
loop
sbb
push
mov
shlb
test
dec
dec
test
cmpsb
sbb
adc
or
stos
loopne
cmp
or
xchg
add
call
push
lea
mov
xchg
stc
out
xchg
movsl
sbb
push
dec
mov
and
enter
daa
scas
pop
mov
negb
add
ljmp
xor
fdivrl
pop
pop
mov
xor
rorl
aaa
cwtl
xchg
xor
into
sbb
fst
jle
ficoms
jge
mov
jge
movsl
dec
rolb
pop
aam
xor
xchg
xchg
sub
je
ss
jmp
addr16
mov
jmp
out
lock
xor
ljmp
xor
inc
ficomps
push
cmp
xchg
mov
fadd
aam
lods
pop
gs
pop
dec
sbb
test
inc
xor
imul
sti
rcl
xor
xchg
shll
data16
imul
and
negb
adcl
mov
setge
mov
inc
mov
aaa
fistpl
cli
iret
fcomip
dec
xor
add
call
and
into
scas
sub
lock
pusha
std
dec
dec
test
xor
aas
xor
out
dec
mov
mov
pop
sti
mov
decb
jb
dec
push
jp
adc
mov
mov
stos
mov
inc
or
cmp
aas
cmp
cs
ss
notb
fldcw
mov
outsl
mov
outsl
pop
dec
fbstp
imul
lea
cmp
push
push
push
ret
jg
or
inc
pop
pop
sub
mov
adc
xor
arpl
mov
int
rcll
loop
jge
ret
inc
out
lds
push
cmpsl
movsl
lcall
xor
inc
mov
loopne
mov
addr16
shll
lea
xchg
and
stos
data16
jg
arpl
push
sub
pop
mov
test
dec
imul
mov
call
popf
pop
mov
jg
or
or
mov
leave
mov
cwtl
jns
int
leave
lret
ffreep
push
pop
les
cs
leave
int3
lods
fsubs
into
negb
pushf
xchg
adc
or
sub
bound
ret
adc
dec
push
pop
ret
enter
dec
out
dec
fsubl
das
frstor
jecxz
out
sbb
popf
xor
test
into
and
daa
movsl
push
mov
sarl
mov
push
add
stos
push
lahf
rcr
repnz
xor
push
inc
andl
push
mov
bound
sahf
xor
pop
loop
adc
mov
pop
repz
or
je
or
mov
test
or
bound
das
lea
inc
sahf
mov
and
out
sbb
mov
jbe
cwtl
call
enter
int3
push
enter
jp
adc
mov
push
inc
ret
push
sti
cld
out
sahf
ficoml
inc
out
xchg
pop
xchg
leave
out
xlat
dec
sub
cwtl
addr16
loopne
mov
lahf
or
pop
stc
mov
xorb
mov
xchg
pop
fsubl
jecxz
push
pop
sahf
daa
mov
pop
mov
mov
movsb
and
notb
negb
sarl
push
mov
idivb
repz
aaa
addb
in
out
adc
outsl
loop
dec
xchg
shl
mov
in
in
pop
xlat
xor
jge
sbb
sbb
aas
insl
adc
cmpsb
jns
imul
xchg
bound
sbb
sbb
mov
cmp
mov
and
in
push
and
jecxz
notb
add
jnp
cwtl
iret
inc
aam
adc
aas
mov
rcr
pop
pop
mov
xor
pushl
pop
ffreep
popf
push
ret
loopne
adc
es
xchg
jns
xchg
dec
sbb
xor
xor
mov
cltd
loopne
add
test
mov
sbb
add
jnp
push
mov
sbb
vcomiss
pop
push
repz
xor
jns
cld
or
sbb
ret
jle
and
push
push
in
mov
jle
mov
loop
inc
rorl
nop
jp
out
fbstp
lret
int
and
dec
cmpsb
sti
test
lahf
or
xchg
arpl
int3
pop
rcrl
pop
or
mov
andl
inc
lret
ficoml
mov
gs
pushf
in
insb
adc
push
xchg
pushf
adc
fdivp
sets
aad
add
fcmovnbe
outsl
pop
lea
mov
jmp
sub
addl
sbb
mov
dec
fnstenv
sub
pop
insl
pop
xchg
jns
pop
xchg
push
adc
popa
cld
stos
xchg
insl
pop
push
push
aas
push
inc
lods
hlt
stc
fstpt
addl
lret
imul
pop
data16
jp
push
push
cmpsb
dec
mov
sarb
xchg
xchg
lahf
cs
les
loopne
sbb
xor
out
sbb
add
and
mov
mov
scas
sbb
sub
adc
push
xor
sub
shlb
sbb
popa
xor
sahf
js
sub
lret
outsb
mov
fcmovu
paddw
in
fadds
lock
xlat
jmp
push
dec
bound
push
jns
fs
test
inc
jle
mov
dec
cmpsl
mov
pop
std
cmp
sub
jo
push
or
scas
push
mov
add
lods
ljmp
push
les
aam
lock
pop
mov
dec
lret
cmp
jns
aad
daa
pop
fsub
or
xchg
aaa
mov
xchg
push
push
jbe
xchg
jecxz
rclb
lds
add
mov
inc
das
hlt
out
xor
jb
or
inc
cli
sahf
repnz
stos
push
fdivl
inc
sbb
add
inc
cwtl
sub
sarl
xor
jb
jne
push
pop
jns
fstpt
leave
dec
das
xor
in
int
add
jae
fdivs
scas
add
stc
test
data16
out
mov
enter
dec
mov
test
cwtl
cmp
out
mov
ret
pop
xchg
dec
js
mov
lods
sub
pop
out
das
test
mov
mov
mov
pop
push
out
aam
insl
repnz
push
je
repz
push
push
inc
movsb
sbb
bound
sub
sub
int
enter
clc
mov
jmp
sub
cmp
push
dec
jno
push
xor
data16
repz
jmp
jb
aad
jbe
imul
lret
mov
daa
mov
jne
xor
pop
adc
movsl
aad
pop
jnp
fisubl
incb
inc
int3
das
ret
pop
outsl
mov
hlt
xor
adc
enter
leave
test
xchg
imul
dec
das
pop
scas
dec
and
je
xchg
jbe
roll
push
imul
out
cmp
sub
scas
mov
in
leave
pop
dec
dec
pop
mov
adc
xor
xchg
addr16
mov
and
repz
jae
cld
xchg
dec
push
adc
inc
pop
ds
fsubrl
sahf
stos
push
insl
sbb
cltd
jp
repnz
ja
addl
cmc
stos
dec
mov
mov
outsl
popf
mov
or
je
pop
sub
and
jmp
ja
js,pn
mov
jmp
test
push
stc
je
and
add
fnstcw
je
pop
mov
add
lret
mov
int
xchg
js
cmpsb
and
dec
cmp
xchg
dec
mov
mov
test
in
mov
scas
mov
xchg
movsb
dec
adc
mov
and
add
out
shl
shlb
ljmp
adc
cs
insl
popl
fwait
or
icebp
addl
push
push
cmpsl
lods
les
into
jb
or
sbb
movsb
xchg
ja
add
aas
push
jg
in
icebp
aaa
jmp
mov
pop
jno
lds
aas
xchg
jae
jo
lods
cwtl
cmpsl
loope
cmpsl
jae
or
sbb
gs
dec
out
pop
les
in
call
cmp
ljmp
jno
aas
pop
mov
adc
mov
inc
insl
test
push
add
push
pop
cmp
stos
cmp
fdivrp
cwtl
les
jle
aad
lea
addr16
shll
out
mov
sahf
loop
addr16
jle
xor
movsl
repz
into
pop
cwtl
mov
sub
ret
rolb
push
lcall
push
cli
lods
push
scas
pop
test
lods
mov
movsb
sub
mov
cmpsl
fwait
sub
push
popa
pop
ss
aas
outsb
and
aad
call
aaa
dec
fmull
dec
mov
lods
scas
push
xchg
dec
fsubrs
jecxz
mov
push
lret
out
mov
pusha
scas
popa
lods
dec
enter
pop
push
ret
scas
pushf
push
dec
js
pop
xchg
test
dec
push
call
test
xchg
repnz
mov
mov
fcom
dec
xor
sub
mov
idivl
pop
mov
jge
pop
or
addr16
sbb
out
cltd
add
push
push
mov
roll
sbb
inc
into
jmp
cmp
stos
inc
insl
and
or
cmp
js
push
mov
jmp
dec
jecxz
popa
dec
cld
adc
and
adc
bound
mov
inc
in
push
insl
pusha
jg
stc
xor
ljmp
mov
xor
lret
js
mov
pop
sbb
cmc
test
je
or
ret
dec
andb
loope
and
add
movsl
into
loop
sbb
dec
or
ficoms
xor
dec
aaa
inc
push
add
pop
lods
call
cmp
int3
bndstx
imul
xchg
aas
arpl
sbb
sub
in
pop
outsl
add
or
sti
push
repz
fldl
cwtl
xchg
lods
push
jle
aas
mov
cmp
adc
inc
push
jge
fdivrl
cmpsb
cld
pop
mov
inc
loope
pop
mov
iret
xchg
adc
dec
pusha
loopne
pop
loope
movb
mov
mov
dec
das
fidivs
push
or
adc
or
and
test
xchg
pop
into
or
leave
scas
test
js
fs
push
testl
adc
test
push
mov
cmp
cwtl
mov
mov
xchg
call
sahf
mov
out
cmp
outsb
mov
push
adc
mov
lock
faddl
test
leave
fsts
lret
cli
or
push
mov
mov
jne
psubb
push
scas
lahf
adc
nop
sbb
add
addr16
gs
and
out
stos
push
dec
filds
xor
push
pop
inc
cmpsb
idivb
iret
mov
mov
mov
test
sti
add
imul
clc
dec
rclb
cwtl
mov
push
or
cmp
lahf
and
push
bound
addb
leave
mov
out
sub
jle
sbb
in
loop
push
push
and
lcall
notl
scas
aas
jmp
mov
and
mov
lea
fistl
loop
inc
mov
fistps
outsl
stos
sbb
jae
loopne
call
std
sbb
cli
cmp
mov
ljmp
push
mov
rcll
push
les
rol
test
fiaddl
dec
ret
jbe
and
imul
les
insb
sahf
cmc
cltd
dec
das
or
ljmp
lret
movsb
cwtl
mov
sub
arpl
std
jno
lahf
push
inc
add
fbstp
sub
adc
jae
adc
adc
call
out
daa
inc
out
cmp
mov
cmpsl
movsl
mov
mov
push
loop
fimull
pop
adc
andb
mov
ds
insb
push
fstps
aaa
sbb
sahf
fsubrp
mov
xor
sbb
adc
or
dec
fnstsw
sbb
fs
xchg
cmp
daa
icebp
bound
sbb
mov
mov
out
pop
jbe
fsubrl
dec
adc
js
mov
mov
jl
fadds
das
fnsave
mov
arpl
cs
fsubrl
inc
mov
xchg
xchg
das
imul
push
jbe
mov
push
loope
daa
mov
xor
jge
cmp
add
add
testl
fdivr
mov
cltd
jg
mov
push
test
jecxz
cmpsl
sbb
daa
std
es
leave
mov
mov
andb
push
divl
xchg
inc
and
xchg
fsubrs
and
push
es
js
or
add
mov
lods
fs
mov
hlt
aaa
cmpsl
add
shlb
in
mov
cmp
push
jnp
test
shr
or
xchg
xchg
cld
and
outsb
sub
mov
pop
int3
mov
ret
ss
in
adc
jb
jns
aaa
inc
cmp
or
xchg
inc
xchg
mov
pmaddwd
jge
mov
iret
popa
sbb
push
in
lret
pop
mov
cmp
loopne
stc
hlt
push
fisubrs
add
ret
aam
inc
popl
mov
lock
movb
test
xchg
popl
and
push
dec
popf
cmc
mov
xchg
adc
xlat
addr16
and
jno
leave
sahf
and
push
loop
xchg
repz
outsl
out
add
xchg
mov
dec
call
nop
mov
mov
scas
or
enter
xor
aad
xchg
sub
andb
ljmp
push
std
xlat
test
xlat
inc
cmp
test
imulb
ret
loop
or
mov
in
andl
inc
dec
or
aam
jg
mov
cmp
push
hlt
sbb
gs
or
xchg
and
xchg
mov
pop
mov
jae
add
add
in
clc
ljmp
leave
sbbb
mov
xchg
sub
jne
imul
push
insb
in
mov
imul
imul
lahf
mov
push
xchg
addr16
cmp
adc
icebp
mov
lahf
andb
lcall
insb
enter
jmp
rcrb
jp
xor
stos
push
jbe
stc
dec
fcmovb
lock
xchg
jg
push
xlat
jp
test
and
xor
addb
push
in
in
add
fldt
aad
call
dec
inc
cmp
jb
sub
jnp
adcl
inc
int
add
fstps
repz
fs
hlt
movsl
aas
sbb
orl
pop
mov
sarb
popf
xor
push
add
push
jecxz
mov
cmc
data16
and
xchg
dec
xchg
jmp
vhaddps
call
push
sbb
dec
push
inc
fidivs
loop
lret
xor
pop
cmp
lcall
cmp
es
mov
lahf
mov
fwait
mov
fsubl
rcrb
cmp
mulb
cmp
ja
mov
jae
jb
sub
inc
test
add
or
loop
movsl
test
insb
sub
add
mov
mov
mov
or
mov
bound
sub
scas
or
xchg
push
push
in
adc
sbb
mov
or
and
mov
aaa
ret
cmp
xchg
jmp
sahf
aas
hlt
sub
mov
bound
cmp
rep
mov
add
mov
lret
push
lahf
cwtl
dec
sub
xor
sub
push
bnd
notl
or
movsb
push
jl
push
sub
and
adc
mov
sti
movsl
sbb
jecxz
jecxz
notb
xchg
mov
sub
lret
jnp
add
xor
sub
xchg
mov
aas
stos
xchg
cwtl
sbb
cld
pop
inc
mov
es
gs
popa
pop
test
push
jle
nop
cmp
shl
mov
push
mov
insb
mov
adc
xchg
or
xchg
loope
stc
dec
inc
jp
fcoms
add
rcrb
and
cmpsl
jmp
sub
dec
sbb
push
jb
jnp
mov
mov
xchg
subl
cmp
adc
cltd
pop
jne
push
sbb
add
jmp
push
pop
mov
dec
pop
pusha
dec
pushf
mov
adc
jbe
arpl
xchg
loopne
je
push
jle
mov
sbb
fnstenv
lods
mov
cld
movsb
mov
pop
ljmp
and
sub
clc
add
rcr
ficoml
cltd
fidivrl
cmp
sti
ljmp
stos
mov
push
lea
mov
mov
push
mov
data16
ss
inc
fwait
clc
rorb
pushf
stos
or
stc
fldcw
xlat
jmp
rcrl
xchg
stos
push
dec
out
or
add
outsl
cmp
and
hlt
mov
stc
test
notb
popf
mov
cmc
clc
push
xchg
scas
rcll
insl
std
aaa
adc
fildll
jo
mov
sub
fcompl
cmp
fisubrl
jnp
jno
into
mov
lods
data16
leave
mov
aas
adc
xchg
mov
inc
out
sbb
jne
jmp
xchg
push
rol
enter
mulb
and
sbb
add
subb
idivb
and
push
hlt
xchg
mov
adc
pushf
mov
in
packssdw
call
pop
sub
nop
adc
sbb
adc
cmp
push
das
call
fsubl
imul
push
push
xchg
pop
bound
subl
mov
xor
jle
pop
js
into
push
call
aas
cmp
push
dec
ret
ss
cmp
sbb
imul
clc
fnstsw
cli
shrb
inc
add
cmp
mov
xor
lcall
pop
mov
fwait
push
or
frstor
inc
xor
pop
gs
dec
push
push
enter
push
mov
cmpsb
in
push
fistpl
out
lgdtl
fwait
sub
bound
lahf
push
aad
or
sub
repnz
sbbl
jg
imul
imul
xor
lods
rorl
rcrl
pop
into
cmp
lret
xor
cmp
pop
jnp
pop
test
pop
sarb
cmp
test
push
push
out
sub
sub
outsl
fs
je
cwtl
out
and
xlat
mov
adc
push
loop
push
fimull
push
cmp
xor
push
cld
test
ljmp
fdivrl
adc
movsl
scas
xchg
and
ja
out
mov
mov
sbb
stos
xchg
cmp
cmpb
aas
and
mov
xchg
in
loop
in
stos
jl
inc
fldt
test
daa
into
push
mov
fstpl
pop
xchg
enter
mov
leave
cld
pop
add
and
inc
mov
mov
sbbl
push
push
imul
icebp
add
mov
mov
jnp
or
stc
into
pop
or
pop
loope
loop
dec
scas
push
push
repz
mov
ss
int3
push
insb
pushf
sub
shlb
rorl
jp
test
lea
xchg
and
jb
adc
hlt
or
aaa
add
inc
or
fcomps
in
dec
dec
jmp
icebp
mov
pop
add
pop
mov
cmc
in
xlat
adc
mov
aad
movsl
enter
mov
mov
pop
inc
cmpsl
jle
lock
push
and
mov
enter
repnz
pop
mov
popf
add
call
jl
sub
pushf
xchg
push
into
cltd
rcrb
adc
ret
leave
mov
xorl
or
jg
dec
pop
pop
insb
pop
mov
jmp
jns
dec
mov
inc
inc
jmp
js
loope
pop
clc
sti
mov
lret
dec
lods
sbb
pop
pop
push
shll
testl
in
sub
pop
dec
cmp
push
js
push
insl
mov
or
dec
jg
mov
mov
cmpb
pusha
mov
sub
adc
cmpsb
inc
stc
leave
push
cs
push
clc
jne
mov
fisubrl
dec
add
out
cli
add
adc
loop
jo
push
popa
fs
push
pop
xor
xlat
scas
pop
xor
arpl
ja
mov
sub
cli
pop
fcomps
int3
call
lds
sbbb
push
mov
imull
pop
jne
jb
dec
xchg
test
dec
sbb
ds
push
orl
pop
cmpsb
and
or
xlat
mov
popf
mov
ljmp
mov
sbb
pop
lahf
je
lds
bound
dec
dec
push
push
mov
enter
xchg
js
cmp
mov
rorb
dec
inc
in
add
push
dec
mov
fdivrs
adc
aam
stos
fmul
lcall
les
pop
sub
sahf
push
das
les
aad
add
or
mov
push
lea
and
cmp
mov
imul
mov
daa
or
push
fcomps
mov
ds
pop
sbb
icebp
mov
mull
lahf
push
inc
andnps
push
fisttps
adc
inc
adc
aam
arpl
xor
jae
out
cmp
pop
mov
test
cmp
mov
out
inc
in
cmp
push
cwtl
dec
mov
jne
sti
or
jb
xlat
and
jns
sub
rcl
jnp
push
xchg
adc
and
dec
mov
shrb
push
dec
outsl
push
mov
mov
mov
xchg
cmp
daa
pop
pusha
jnp
push
dec
loope
or
scas
pop
push
push
push
les
and
imul
fsts
ja
dec
xchg
inc
outsl
push
sbb
mov
pop
test
jno
sahf
push
je
jecxz
mov
cld
arpl
enter
or
shlb
popf
mov
ss
sub
ljmp
es
or
incb
shr
jmp
sti
jnp
sbb
data16
xor
sbb
xor
xor
sbb
mov
adc
lret
enter
mov
sub
sbb
mov
data16
and
mov
inc
call
loopne
aam
or
jle
jecxz
xchg
loop
xchg
pop
subl
inc
stos
in
and
mov
je
mov
pop
sub
sbb
lret
rcrb
in
pop
add
dec
mov
cs
jmp
pop
mov
xor
vorpd
aam
push
jb
cltd
in
nop
pop
lahf
push
and
shlb
test
mov
gs
fisttpl
jle
xchg
jne
adc
mov
jmp
repz
fstpl
and
es
test
xchg
mov
int
addl
xlat
xor
cmp
xlat
cld
add
xchg
enter
test
xor
adc
pusha
lds
data16
adc
lahf
sbb
int3
pop
pop
out
sub
lods
lods
icebp
push
dec
pop
cli
ret
add
push
inc
jle
repz
lock
cld
pushf
ds
dec
mov
outsb
popf
pusha
or
test
loop
std
aas
out
mov
xor
data16
aaa
jns
fsqrt
adc
cli
adc
test
xor
lcall
dec
jno
stos
fidivrs
xlat
mov
movsl
test
push
xor
rcrb
push
dec
cwtl
daa
es
mov
repz
test
popa
add
pop
hlt
and
sbb
xchg
ljmp
mov
dec
mov
and
pop
test
inc
pop
movsl
dec
cmp
outsl
sub
fs
push
pushf
mov
insb
pop
inc
jmp
aam
or
and
ljmp
ret
jne,pn
mov
adc
inc
mov
xchg
sub
lret
cld
jecxz
mov
sahf
imul
push
mov
aam
or
push
into
popa
in
iret
out
nop
lcall
adc
jge
ljmp
mov
mov
jne
fidivs
adc
loope
insb
inc
jmp
outsb
add
idiv
mov
pop
xor
daa
repnz
pop
popf
int
shlb
push
aaa
push
es
mov
or
push
mov
push
ja
sub
hlt
push
push
iret
or
lret
or
push
daa
inc
loope
mov
pop
rsm
mov
dec
or
aam
mov
pop
pusha
or
repnz
fildl
das
scas
fnsave
and
xchg
sbb
lock
aam
stos
sub
and
insl
sti
leave
xchg
orl
stos
rcll
xor
int3
aad
mov
xorb
or
sahf
or
rol
daa
mov
movsl
shrl
fwait
mov
inc
push
cmp
jno
push
test
or
popa
xor
xorb
dec
mov
hlt
sbb
psadbw
leave
add
adc
repz
inc
mov
push
push
in
dec
sub
pop
adc
test
pop
scas
test
xor
fsubr
lahf
mov
popf
notl
sahf
fcmovbe
sbb
loop
cld
nop
call
push
mov
add
outsl
call
insl
stos
bound
mov
mov
xor
dec
sub
cmp
imul
inc
mov
or
jnp
faddl
lahf
fldl
xchg
jb
sub
lock
push
fstpt
lea
inc
test
mov
sub
mov
insb
fwait
sbb
xor
mov
xchg
data16
push
mov
and
or
ret
aas
mov
push
into
js
inc
dec
outsb
adc
int3
cmp
lret
inc
mov
fcoml
jns
push
xor
cmp
fnstenv
xor
xchg
jl
mov
dec
jnp
push
insl
loop
pusha
insl
fdivs
mov
jno
repnz
and
jmp
mov
mov
push
push
jne
pop
jp
and
cmpsb
mov
ljmp
aaa
xchg
rcl
addr16
mov
mov
daa
scas
or
dec
pop
inc
das
mov
push
pop
sti
mov
xor
lret
mov
jmp
mov
jl
insb
sti
cmp
les
xchg
into
fadds
stc
add
outsb
fsubl
inc
dec
jmp
xor
jo
lcall
lock
leave
fsts
dec
negb
inc
and
and
push
int
es
in
inc
mov
out
inc
imul
fs
int
popa
les
hlt
dec
shr
cmp
inc
dec
hlt
mov
push
out
push
sbb
mov
mov
lahf
imul
stos
mov
sub
repz
or
xor
aaa
ret
roll
push
sbb
jmp
jmp
pop
sub
cmp
mov
out
jmp
mov
cmp
clc
pop
pop
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jb
jmp
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
movsbl
or
mov
addl
sub
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jb
push
mov
mov
mov
sub
sub
mov
andl
movl
sub
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
call
jmp
mov
andl
mov
addl
mov
adc
mov
mov
and
xor
addl
xor
mov
mov
adc
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
push
test
add
add
add
add
add
add
add
push
cmp
add
add
add
inc
push
dec
adc
aad
scas
xor
push
pop
loope
add
add
inc
cmp
outsb
outsl
ja
and
pop
inc
imul
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
add
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
inc
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
jl
lods
outsl
scas
hlt
add
testl
jbe
xchg
mov
cmpsl
loopne
pop
push
pop
notl
pushf
or
pushf
or
mov
lcall
xchg
pushf
sub
popa
mov
stos
mov
mov
jbe
xchg
mov
pop
pop
cmpsl
jae
pop
clc
push
stc
mov
xchg
cmpsl
test
lret
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
add
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
