push
mov
sub
push
add
push
adc
push
adc
xor
sbb
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
push
mov
pop
push
call
push
andl
push
push
push
push
xorl
push
sbbl
call
push
addl
push
push
push
sbbl
push
push
push
incl
call
addl
dec
movl
jne
push
sbbl
push
push
andl
call
test
je
mov
adc
imul
mov
mov
movl
mov
movl
cmp
jne
addl
movl
pushl
subl
pushl
andl
pushl
xorl
call
mov
mov
or
mov
xor
mov
mov
sub
movl
lea
xor
mov
lea
mov
addl
mov
mov
adc
mov
mov
add
mov
mov
xor
mov
xor
mov
adcl
add
movl
mov
mov
movl
cmp
movl
jne
mov
mov
mov
xor
add
mov
xor
mov
movzbl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
xor
dec
mov
jmp
mov
or
mov
xor
add
or
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
mov
xor
or
adc
mov
xor
xor
mov
sbb
mov
xor
mov
mov
mov
sub
mov
orl
mov
movl
add
mov
xor
add
mov
add
mov
andl
mov
adcl
xor
xor
sbbl
add
movzbl
and
mov
xor
lea
cmp
ja
or
mov
mov
xor
mov
sbbl
xor
andl
lea
subl
push
sbb
mov
xorl
xor
lea
orl
push
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
mov
andl
pushl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jb
xor
lea
mov
mov
decl
xor
xor
sbbl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
movzbl
sub
mov
mov
xorl
xor
lea
mov
cmp
movl
jbe
add
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
adc
mov
mov
xor
mov
sub
andl
xor
mov
not
mov
movl
cmp
movl
jne
addl
lea
andl
mov
lea
addl
mov
mov
xorl
test
movl
je
adc
mov
mov
mov
sub
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
sub
cltd
mov
mov
mov
or
add
mov
adc
andl
subl
xor
xor
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
push
call
mov
dec
mov
jmp
not
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
negl
add
mov
mov
movl
adcl
xor
addl
mov
mov
xor
movl
mov
cmp
movl
jne
mov
mov
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
negl
mov
movl
mov
andl
xor
add
movl
adc
andl
xor
addl
xor
movl
cmp
movl
jne
cmp
jne
mov
addl
mov
andl
xor
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
addl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
xorl
add
movl
jmp
movl
mov
movl
cmp
je
mov
mov
orl
xor
add
cmp
je
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
movl
mov
mov
mov
adcl
pushl
addl
mov
pushl
addl
add
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
add
mov
mov
orl
pushl
call
mov
mov
movl
mov
movl
jmp
adc
mov
sub
mov
andl
xor
subl
add
cmp
jne
add
mov
movzwl
sbb
mov
adcl
mov
xor
sbbl
add
cmp
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
andl
push
xor
movl
add
xorl
push
xorl
push
andl
pushl
adcl
pushl
sbbl
call
add
mov
mov
sub
mov
or
mov
sub
mov
adc
mov
xor
mov
sub
add
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
incl
mov
mov
mov
mov
mov
mov
mov
sbb
movl
mov
xor
decl
add
mov
sbb
mov
mov
or
mov
mov
and
mov
mov
push
sbb
pop
orl
sub
add
xorl
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
mov
lea
lea
xor
cmp
jne
mov
xor
mov
mov
mov
mov
xor
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
mov
movl
movl
movl
movl
mov
mov
mov
andl
mov
movl
mov
mov
xor
mov
orl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
xor
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
movl
movl
pop
jmp
xor
inc
ret
push
mov
push
movl
movl
mov
addl
mov
add
xor
cmp
movl
jne
add
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
xorl
push
adcl
push
addl
push
push
andl
lea
push
push
adcl
call
push
call
sub
movl
xorl
movl
mov
mov
xor
mov
xorl
add
mov
sbb
mov
test
je
mov
mov
orl
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
sbb
imul
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
add
movzbl
and
xchg
sbb
mov
movl
sub
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adc
add
mov
sub
mov
sub
xor
add
mov
sub
mov
mov
xor
xor
add
add
mov
movzbl
sbb
mov
mov
adc
xor
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
or
mov
orl
sub
addl
lea
xor
andl
xor
movl
cmp
movl
je
sub
mov
xorl
xor
adcl
add
cmp
jne
orl
pushl
call
movl
cmpl
je
cmpl
jne
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
inc
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
add
cmp
movl
je
adcl
pushl
addl
pushl
negl
call
mov
xor
mov
add
mov
subl
xor
subl
add
cmp
je
or
mov
mov
adc
mov
mov
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
jmp
or
xchg
xchg
pushf
cmp
in
and
jl
pop
jl
adc
and
imul
xor
fsubp
push
dec
imul
bound
iret
pop
dec
and
dec
jg
jb
jg
movsb
cmp
ljmp
cld
push
jg
in
cmp
mov
mov
mulps
fldl
lock
sub
dec
push
sub
mov
test
jmp
lret
sbb
jp
arpl
lcall
xor
cmpb
jae
fsubrl
push
jecxz
mov
mov
out
push
dec
push
and
cmp
lods
dec
int3
cmpsl
xor
push
pop
std
push
pop
movsl
stc
push
cli
inc
push
mov
or
dec
pop
and
or
leave
cltd
lcall
insb
dec
sbb
call
into
icebp
dec
add
cmp
test
out
inc
cmpsb
mov
xlat
add
sub
jecxz
mov
pop
mov
push
ret
mov
inc
jp
adc
cmpsl
adc
out
sub
push
push
cld
cmp
hlt
jnp
lock
shr
pop
mov
jbe
xchg
movsl
sub
or
jp
imull
outsb
push
mov
inc
mov
sahf
imul
ffreep
adc
push
adc
out
stc
std
xchg
mov
aas
les
xchg
or
mov
fsubs
jne
cli
data16
movsb
xchg
and
hlt
mov
mov
clc
aaa
ja
aaa
cmpl
in
insl
icebp
aam
aam
lock
loope
daa
cmpsl
pop
xchg
jmp
neg
in
lret
adc
dec
outsl
loope
add
and
lret
call
popa
adcb
insb
cmp
cmp
mov
leavew
movsl
mov
fs
js
adc
stc
pop
mov
fsqrt
popa
adc
stos
xchg
popf
or
jae
testb
pop
outsl
push
mov
cs
sahf
xor
push
dec
sbb
stos
fdivl
ds
mov
popa
fldt
mov
or
in
in
jae
or
mov
jp
adc
and
test
or
mov
pushf
addb
dec
and
sbb
and
mov
inc
mov
jecxz
push
xchg
push
shll
pop
and
or
and
imul
jne
cmp
inc
into
pop
sub
mov
lods
mov
lret
cmp
stc
pop
add
push
lret
pushl
in
mov
lea
add
mov
mov
in
add
and
jne
add
mov
mov
or
repz
outsl
jl
xor
movsb
xchg
inc
or
data16
xlat
push
inc
push
shrl
inc
sbb
cmp
popa
call
sbb
je
add
pop
std
movsb
aam
inc
sub
xchg
out
int3
bound
jnp
sbb
outsl
push
call
je
es
fs
test
out
das
out
mov
xor
mov
leave
jne
test
add
mov
repz
sti
in
push
jle
jg
push
or
sbb
pop
jmp
dec
mov
sbb
sub
pop
xchg
cmp
mov
fsubrl
push
pop
mov
filds
movsb
imul
cmc
loop
push
push
or
imul
loop
fiaddl
std
outsl
or
testl
pop
stos
js
sub
fisubl
and
insl
ret
ljmp
jno
and
loopne
push
cmpsl
mov
inc
test
mov
cli
and
testl
push
fldl
push
push
int3
nop
sub
shr
cmpsl
or
arpl
cltd
lds
roll
dec
mov
js
stos
idivl
mov
mov
cmpsb
loope
int3
aas
dec
ret
mov
mov
add
lret
jo
pop
cltd
out
sub
mov
jnp
cmpl
out
out
mov
fucomip
pop
imul
cmp
pop
cmp
pop
mov
ret
xchg
filds
jge
mov
xor
and
repz
push
add
pop
add
sub
xchg
or
fdivs
sbb
mov
fwait
xchg
jae
xchg
pop
and
or
jo
lods
adc
cmp
mov
into
js
dec
rcl
ja
inc
fldl
pop
or
popf
push
mov
loope
sub
cmp
inc
dec
push
pop
mov
and
lea
mov
js
loop
cwtl
lea
fxch
push
pop
jmp
and
and
inc
mov
mov
and
jno
sub
sub
lcall
or
es
in
mov
xlat
jbe
mov
push
enter
mov
inc
ret
fisttpl
and
mov
mov
int3
loopne
cmp
int3
movsb
inc
aad
xchg
mov
mov
mov
adc
inc
dec
dec
imul
add
add
xor
in
mov
xor
xor
jbe
pop
and
or
cld
sti
movsb
scas
mov
jbe
enter
int3
stos
pop
scas
pop
and
repnz
sub
test
adc
in
mov
push
in
fldl
std
insl
and
ficompl
sub
nop
xchg
mov
push
out
jbe
lods
push
xor
or
inc
xchg
mov
arpl
jae
adc
and
pop
mov
pop
adcl
outsl
adc
fcom
push
fs
jg,pt
mov
and
mov
ss
clc
subl
rcrl
movsb
scas
xchg
dec
ljmp
shr
xchg
sbb
dec
ucomiss
xchg
cmp
sarl
mov
shl
lods
ss
push
mov
jecxz
xor
fisttpll
mov
sub
lods
inc
rol
in
mov
cmpsl
sbb
or
rcl
out
sub
fmul
lahf
jge
jnp
jns
mov
aas
bound
sbb
pop
mov
sub
xor
xor
or
add
or
test
movsw
push
cltd
sbb
push
mov
ja
cltd
xor
jecxz
shrb
insb
push
sub
stc
mov
jns
pop
repz
jne
fdivs
std
xor
cmp
xor
cmp
adc
mov
fwait
pop
mov
push
aam
sub
icebp
loope
cmpsb
pop
cmp
fs
xchg
rol
xor
repnz
jmp
push
lock
scas
dec
lock
in
btr
xchg
mov
xchg
loopne
or
adc
hlt
xchg
fwait
add
inc
lret
sbb
enter
and
daa
dec
imul
sub
mov
cmp
and
out
dec
aaa
pop
mov
in
fstpt
push
and
sbb
pushf
and
add
fld
add
and
sbb
loop
clc
mov
xor
xor
jb
es
pmuludq
mov
out
dec
inc
mov
pop
scas
rol
ljmp
ss
or
popa
adc
jecxz
lcall
ret
fisubrs
in
ret
xchg
dec
loopne
outsb
fcomps
cmp
shlb
leave
negb
in
cmc
mov
adc
out
add
jns
sbb
xchg
jnp
shlb
fbld
ljmp
xor
xchg
imull
int
rol
insl
stos
test
decb
jnp
je
cmp
shll
jp
pop
push
lock
outsl
testl
fildll
push
sbb
andb
int3
loope
in
sbb
xchg
and
sahf
inc
adc
pop
cmc
xchg
mov
xchg
cmpsl
add
jl
mov
or
sti
lds
jmp
insb
cli
scas
xor
lcall
je
jbe
repz
xor
mov
pop
add
lods
data16
push
push
lock
lock
daa
inc
inc
xor
inc
adcb
nop
cmpsl
inc
bound
jbe
mov
les
mov
lret
xchg
inc
mov
cmp
sahf
mov
sarb
add
xlat
pop
sti
sub
push
dec
dec
or
push
cld
sub
pusha
pop
fbstp
cltd
xchg
or
cmp
lock
loopne
cmp
push
scas
ret
not
rcr
push
xor
std
ss
push
and
jno
xlat
je
arpl
lcall
jge
xchg
or
mov
cmp
cmp
pop
fs
jne
outsl
sbb
xor
scas
jbe
or
inc
dec
xchg
mov
leave
sahf
ret
shr
jae
mov
aaa
lahf
xchg
pop
stos
jne
and
lock
loopne
movsl
add
dec
sbb
hlt
sub
push
pop
iret
filds
mov
push
fmulp
inc
xchg
jmp
repz
loop
imull
call
mov
js
clc
push
or
mov
jo
or
clc
fadd
fildl
daa
jg
xor
sub
daa
pop
jl
clc
add
and
jecxz
test
xchg
in
mov
mov
stc
sti
clc
test
ret
pop
push
ror
jne
xor
sbb
cmc
bnd
push
inc
shrl
sarl
rcrl
negl
adc
fstl
mov
aad
adc
lea
or
sub
je
out
cli
ret
xchg
mov
push
into
lcall
mov
add
jnp
jecxz
cmp
ret
sub
sarb
js
adc
jle
push
roll
rcrl
fwait
je
pop
jo
ljmp
inc
or
loope
shll
das
aad
call
or
daa
dec
sbb
jp
inc
jne
dec
mov
punpckldq
push
negl
or
aas
xchg
in
rcll
shlb
inc
and
sarb
je
out
sbb
lods
mov
pop
add
adc
popl
ror
or
sbb
add
clc
mov
sti
xchg
dec
cmpsb
mov
xlat
inc
hlt
or
pop
inc
cmp
cwtl
jmp
outsl
mov
dec
xchg
pusha
mov
std
pushf
jecxz
push
mov
mov
and
or
dec
xchg
adc
repz
insl
bound
lahf
jge
and
sub
jp
iret
or
inc
inc
push
rcrl
inc
push
mov
push
sub
or
pop
push
or
insl
divb
adc
popf
xor
lods
or
pusha
adc
add
inc
inc
sbb
out
mov
mov
pop
mov
test
fcompl
mov
adc
enter
jo
xchg
stc
lds
ljmp
fwait
pop
pushl
mov
mov
shrb
jnp
pop
lret
mov
or
dec
mov
cwtl
or
lea
xor
mov
pop
or
leave
gs
mulb
mov
mov
aas
in
mov
jecxz
mov
push
dec
out
sbb
mov
or
outsl
jbe
jno
mov
xchg
xchg
sbb
mov
les
dec
or
jge
jbe
xchg
aad
jecxz
jo
mov
mov
xchg
xor
push
mov
sbb
lock
pop
cmc
addr16
push
mov
pushf
and
arpl
fcmovnb
inc
sub
sub
pop
cmp
sbb
mov
sub
mov
adc
pop
test
sbbb
add
sbb
inc
cmp
jecxz
mov
rcrb
jnp
push
iret
int
daa
push
test
cwtl
cmp
sbb
xor
xchg
orl
scas
push
das
movsl
stc
push
inc
arpl
mov
jbe
dec
jo
jnp
arpl
push
lea
xor
inc
mov
sbb
inc
inc
pop
sbb
arpl
xchg
stos
mov
pushf
aam
movsl
int3
test
sbb
xchg
mov
fistpll
and
movsb
inc
and
sbb
gs
enter
mov
inc
jo
mov
push
fwait
sub
lret
out
loope
in
cli
push
dec
adc
cmp
mov
inc
add
sbb
mov
lds
cmc
push
incb
hlt
dec
jno
imul
sbb
out
repz
enter
or
popa
daa
mov
xorb
imul
enter
sbb
out
mov
sbb
cmpsl
cltd
lahf
add
jp
inc
sbb
aaa
cld
xchg
mov
bound
ret
push
add
lret
cmp
ret
ficoml
dec
into
insl
xchg
push
cmpsl
xlat
cld
xchg
lods
adc
sub
das
mov
jae
call
jmp
andb
jns
fbld
scas
out
lock
cltd
pop
mov
test
iret
dec
or
push
adc
insb
das
xor
cwtl
and
outsb
mov
mov
test
sbb
dec
popf
in
cmpsl
add
aaa
push
fmul
dec
stc
pop
push
inc
cmp
push
fdivl
sbb
sbb
sub
cmpb
xchg
ret
inc
dec
std
mov
ds
pushf
insl
mov
lahf
mov
adc
jmp
add
fidivl
mov
xchg
mov
mov
nop
or
add
inc
xor
loopne
xchg
push
push
lods
test
mov
loope
and
cmp
jp
cwtl
dec
mov
insl
lea
sbb
icebp
push
dec
and
mov
lds
mov
lahf
mov
stc
or
sub
movl
jle
cltd
xchg
repz
jae
and
aad
pop
repz
cs
popa
push
inc
divl
aam
add
imul
out
mov
sbb
jbe
mov
ds
mov
adc
mov
test
pop
and
out
cmp
jmp
push
shrb
imul
rcrl
mov
out
or
int
push
pop
adc
sti
sub
mov
inc
imul
fsqrt
and
imul
dec
into
cld
fst
lock
arpl
scas
add
fs
mov
push
push
add
mov
xchg
sub
push
adc
insl
inc
pop
and
mov
stos
xchg
mov
sbb
jbe
out
bound
or
mov
fbld
cmp
jmp
adc
mov
adc
jecxz
cmpsl
add
jmp
shrb
pop
xchg
sahf
iret
mov
xchg
jae
fcompl
dec
xchg
sbb
sub
cmp
insb
jle
addr16
rcll
pusha
movsb
sti
popf
and
and
aaa
add
out
pop
out
cmc
push
test
or
out
mov
sub
loop
clc
cmpl
in
xor
push
aas
dec
idivb
loopne
iret
xchg
push
dec
iret
sbb
insb
add
dec
add
in
insb
mov
inc
xor
outsl
sbb
jae
int
mov
cmp
fiaddl
lds
mov
sahf
mov
cmp
cmp
dec
xchg
scas
sub
cmp
fsts
sub
repz
pop
sbb
pop
cwtl
dec
pop
in
xchg
lock
std
cmp
ss
dec
hlt
cmpsb
jae
adc
test
xchg
dec
xor
or
cmp
xor
mov
fsub
cli
insb
out
push
pop
addb
ret
aas
mov
jne
add
jb
test
push
nop
and
inc
mov
pop
ret
jle
subb
jbe
in
ja
ja
sbb
imul
outsb
in
mov
xor
pop
pushf
aaa
mov
das
mov
push
xor
push
shl
lods
sub
jg
inc
mov
cmpsl
dec
out
std
mov
rorl
push
inc
shll
xlat
push
inc
popf
dec
loopne
loop
xchg
mov
adc
gs
mov
out
data16
mov
popf
jl
sub
mov
sub
mov
cmp
sbb
mov
jo
notl
xchg
addr16
adc
test
std
xlat
jo
sbb
mov
sbb
cmpsb
mov
mov
mov
outsb
adc
bound
out
mov
roll
xor
test
movsb
mov
stos
xchg
jns
cmp
incl
and
jne
xchg
movsl
js
or
jno
push
jns
jle
cmc
adc
js
cmpsl
push
add
clc
ja
test
mull
sub
xchg
imul
fcom
dec
lock
popf
xchg
rorb
jbe
int
test
sete
sbb
jmp
int3
sub
sbb
dec
inc
jbe
rcll
test
sbb
mov
cmp
into
lahf
lds
les
jns
push
addr16
std
sbb
jmp
cld
ss
push
popa
lock
leave
mov
xchg
mov
pop
sbb
xchg
ljmp
xor
or
push
jno
jns
dec
test
cmc
pop
sub
ja
aam
aad
jle
outsb
sub
imul
fs
and
xor
xchg
data16
adc
clc
sub
stos
decl
mov
cmp
test
int3
andl
push
rcr
loopne
lock
xor
lahf
js
les
ja
sahf
pop
insb
jp
stos
mov
mov
pop
cmp
test
out
xchg
jae
fildll
hlt
gs
push
push
sub
lret
testl
add
mov
sub
push
mov
cmp
outsb
js
jbe
jle
add
jge
pop
pop
sub
pushf
imul
shll
add
imul
pop
cld
loop
cwtl
cmp
mov
xor
and
xor
hlt
xchg
mov
mov
mov
or
mov
inc
mov
adc
pop
adc
ja
je
fadd
popf
daa
data16
addr16
sub
data16
adc
int3
pop
sub
inc
inc
fstl
or
push
mov
mov
adc
dec
roll
lahf
inc
xor
dec
rcll
push
sub
mov
mov
xchg
sub
jne
shll
insb
das
add
in
xor
imul
aaa
mov
and
arpl
lods
push
push
or
mov
dec
lahf
and
sub
xchg
rorl
xor
xorl
std
cwtl
dec
repnz
push
fldl
scas
sar
or
jge
inc
xchg
sub
sbb
xchg
inc
nop
cwtl
cmpsl
mov
ljmp
aas
fidivs
mov
jb
cmp
cmp
jo
mov
add
iret
jl
pop
xchg
ficoml
sub
loop
test
or
inc
adc
mov
sahf
nop
clc
out
inc
push
aam
mov
sbb
xchg
in
icebp
aas
sbb
cs
sub
mov
mov
pop
lret
xor
xchg
subl
dec
inc
xchg
jae
clc
es
mov
mov
cmpsb
jmp
push
bound
imul
scas
js
movsb
faddp
mov
xor
js
xor
aam
jmp
mov
gs
ja
adc
scas
in
cli
sub
sbb
icebp
jmp
or
or
icebp
lds
enter
cmp
xor
test
mov
dec
decl
mov
mov
into
insb
inc
pop
add
fldcw
mov
jnp
in
cmp
std
cmp
nop
int3
mov
xchg
add
out
push
rolb
mov
cli
mov
mov
sbb
xor
mov
and
pop
test
push
mov
pop
push
inc
mov
jns
jne
mov
jne
jecxz
lds
mov
in
test
or
mov
jp
stc
lock
mov
xor
cmp
negb
adc
shrb
repz
hlt
lods
pop
fnstenv
xchg
jg
clc
cmpsl
outsb
mov
subl
jle
icebp
shl
cmp
jp
bound
stos
mov
cmp
jmp
mov
pop
inc
cmp
addr16
push
mov
mov
add
jb
lgs
mov
lods
mov
jae
pushf
xchg
dec
push
xlat
add
or
dec
test
sti
movl
push
aaa
and
outsb
mov
adc
pop
adc
lahf
xor
outsl
aas
mov
fcompl
out
pop
movsl
xchg
cmpsl
ds
rorb
in
sahf
addr16
cmp
add
xor
jae
sbb
loope
xor
notb
imul
iret
popf
mov
sub
movsb
and
test
ss
ficomps
inc
inc
addr16
jno
rcrb
or
pop
add
enter
leave
mov
sbb
pop
mov
sbb
add
shlb
dec
test
cmp
mov
aad
into
cli
push
pop
mov
lock
ret
loopne
push
push
subl
xor
int3
mov
jns
jl
test
lret
dec
andb
movl
jns
inc
xor
shrl
cs
adc
and
inc
insb
and
fisubs
sbb
out
and
lods
lcall
in
sub
cld
mov
dec
scas
dec
nop
and
imul
shlb
gs
lock
ret
mov
lcall
cmpsb
neg
mov
xor
push
sbb
popf
jmp
add
fwait
sti
xor
ja
aas
loope,pn
lahf
inc
jae
add
inc
in
adc
sbbb
mov
pop
repz
mov
in
mov
jmp
push
data16
mov
repz
cmp
jne
or
das
subl
push
sbb
mov
ret
xchg
or
mov
mov
push
pop
lock
sahf
repnz
mov
adc
xchg
mov
and
dec
aas
pusha
xchg
daa
popa
cmp
pusha
cmp
dec
pushf
xor
cmpsb
push
stc
movsl
jne
add
ja
dec
cmp
xlat
adc
movsl
ret
lods
pop
in
mov
fwait
lahf
fwait
mov
ljmp
or
jp
sbb
popa
rorl
ja
inc
sub
pop
add
fsubr
int3
mov
lret
dec
addb
jne
inc
lret
jl
imull
cmp
and
xor
out
cmpl
jmp
xor
imul
notb
pop
les
pushf
pop
mov
test
incl
mov
add
mov
mov
out
fsubs
or
xor
cmpsl
fs
in
inc
xchg
movsb
pop
jnp
lea
mov
xchg
das
cltd
mov
push
fldl
mov
adc
outsl
stos
cmp
cmpb
sar
mov
ja
jne
nop
adc
add
icebp
out
lea
mov
jbe
adc
leave
daa
loopne
cmpsl
pushf
stos
jno
ret
pushf
js
test
xchg
adc
push
xor
insb
jg
or
push
mov
add
jecxz
add
push
fisubl
cli
orl
aad
jle
mov
test
mov
ja
or
pop
mov
jg
aad
mov
push
mov
mov
push
inc
inc
loop
imul
sub
sbb
mov
dec
into
loopne
loope
fcompl
sub
sub
mov
lret
aad
adc
mov
jg
and
das
fwait
mov
push
icebp
aaa
in
mov
and
imul
dec
int3
jle
aam
cmp
ficompl
rclb
inc
xchg
pop
xor
je
pop
les
adc
inc
or
jmp
test
test
mov
or
sahf
idivl
xchg
mov
aas
fwait
push
mov
mov
ret
fldenv
jmp
arpl
or
cmpsl
outsb
lret
std
xor
nop
xchg
jge
jmp
mov
mov
add
and
not
jbe
outsb
addr16
cmp
pop
rorb
pop
xor
nop
sbb
cmc
mov
sub
daa
mov
ds
ret
ret
jne
pop
ficoms
push
mov
sub
mov
mov
jb
dec
fidivl
add
and
cmc
out
jp
btc
sti
mov
sarl
dec
lds
mov
mov
jbe
cs
loop
inc
hlt
xchg
push
push
xor
cmp
cwtl
cmp
mov
stos
inc
rorl
sbb
dec
mov
lcall
in
nop
test
lret
sbb
in
les
outsb
jb
fwait
and
pop
shll
dec
cli
cmp
xchg
dec
dec
lret
jns
lret
test
les
int
sub
cmc
out
je
jl
loop
or
add
mov
adc
mov
and
shll
sbb
fs
iret
jp
out
pop
add
aaa
int3
movsl
test
call
jg
mov
clc
fs
add
sub
out
mov
popa
lds
mov
push
inc
and
mov
daa
jle
call
jb
dec
push
daa
jnp
mov
hlt
enter
mov
ret
add
jg
jg
dec
jg
dec
int
pop
fnstsw
push
cmp
mov
idiv
fsts
sub
cmp
mov
insb
insl
xlat
push
mov
mov
xchg
or
push
sbb
outsb
push
sti
test
cmp
xor
mov
pushf
sub
jb
jmp
int
cmp
shrl
jae
in
icebp
arpl
push
cld
mov
inc
cmpsl
mov
inc
pop
mov
lcall
push
out
add
rcrb
mov
scas
mov
cmp
mov
out
frstor
cmpsl
fiadds
shl
pop
neg
xor
push
fisttps
inc
in
mov
mov
mov
pop
dec
push
inc
dec
and
cmp
stos
dec
cmp
ret
adc
or
sbb
test
pop
pop
data16
mov
inc
subb
pop
orl
divl
push
enter
pop
dec
mov
or
loop
scas
sbb
xlat
mov
mov
in
sub
cltd
jo
aad
mov
insl
sbb
fwait
inc
jns
insb
pop
adc
sub
outsl
mov
int3
bound
xor
and
lret
js
gs
xor
xchg
pusha
sub
sub
sub
xor
xchg
push
pop
out
popf
out
fists
jmp
lret
in
or
ds
mov
jge
aaa
inc
lods
aam
xor
dec
movsl
and
mov
sbb
in
je
aas
iret
add
insb
dec
jle
fcoml
or
pop
dec
sbb
cmp
cs
repz
push
loope
mov
repz
loop
inc
mov
jb
cmpl
ss
adc
mov
fwait
and
stos
add
xor
or
mov
les
mov
pusha
popf
push
fsubs
insb
cmp
xorl
jmp
mov
xchg
out
adc
ret
mov
std
jno
sbb
scas
inc
cmp
add
push
ss
fimuls
and
jae
sbb
insb
jno
jmp
test
push
mov
test
dec
sub
aaa
les
call
adc
sub
jg
ret
icebp
add
aam
sub
xchg
fstpl
inc
outsb
dec
jp
xchg
mov
scas
xchg
sahf
rcll
ret
sahf
in
jge
xorb
push
push
test
lods
dec
nop
fstps
stc
aaa
push
testl
and
mov
stc
or
pop
pop
adc
out
mov
adc
jno
aaa
lods
jne
mov
push
xor
and
pop
lret
cmp
push
jno
jmp
cld
push
lcall
int
push
add
cmp
pop
js
pushf
push
xchg
jmp
xchg
cmp
out
out
sub
jmp
pop
jg
jp
ja
xorl
and
mov
adcb
sahf
xorl
outsl
xor
push
ret
movsb
pop
pop
jae
cmp
mov
push
and
outsb
cld
jne
outsb
imul
cmp
cwtl
lcall
adc
and
add
cmc
aad
or
push
sbb
leave
dec
lret
xlat
dec
rcr
lcall
mov
xchg
push
jae
orl
lcall
loopne
and
int
xor
and
mov
push
xchg
mov
pop
jb
jl
addb
lds
test
pushf
lds
pushf
pop
in
and
into
mov
insl
xchg
data16
adc
pusha
movlhps
lods
enter
leave
outsl
sbb
pop
mov
icebp
dec
stos
push
adc
mov
dec
dec
xchg
sub
sbb
cmp
lock
ret
cltd
ljmp
mov
jo
mul
int
xchg
pop
out
scas
jg
jecxz
pop
xchg
mov
scas
js
mov
inc
pop
fadd
gs
enter
push
push
mull
ret
and
int3
aas
in
jnp
mov
mov
fcmovb
xorl
jno
gs
mov
shlb
repz
inc
jae
aas
fstl
incl
shl
pusha
pop
mov
adc
ret
je
and
xchg
sbb
rcrl
jo
cwtl
out
xchg
mov
xor
mov
fildll
or
loopne
xor
push
mov
push
adc
iret
jbe
add
lock
nop
xor
lahf
fbld
movsl
pop
test
mov
mov
sub
popa
in
cwtl
rclb
cwtl
shrb
pushf
push
mov
or
pop
jne
das
add
int3
sbbl
arpl
sub
adc
push
adc
push
iret
icebp
outsl
outsb
rolb
push
shr
shrl
mov
fbld
rol
push
push
and
gs
loope
jle
test
push
ret
xchg
lods
cwtl
inc
xchg
js,pn
cmp
jns
dec
leave
push
inc
scas
jae
cmc
mov
adc
fists
fidivrs
jnp
dec
lods
iret
push
lock
xorb
inc
mov
adc
cli
lcall
cmp
ss
scas
jae
mov
push
fisubrs
std
mov
lahf
outsl
mov
mov
leave
and
mov
adc
insb
mov
adc
xor
testl
inc
out
xchg
sbb
lods
clc
add
bound
imul
dec
ss
fabs
fistpl
mov
sbb
lock
rolb
push
jno
in
sub
cltd
or
iret
jo
enter
clc
jno
sbb
sbbb
imul
sti
and
sub
xlat
enter
neg
stos
cltd
mov
jle
push
push
sbb
dec
add
jle
xor
push
xor
enter
add
pushl
pop
int3
push
sbb
sub
mov
repz
stc
sbbl
mov
gs
jp
das
das
ds
shl
cmpsl
dec
sahf
cmpsl
xorl
ret
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
movl
xor
or
mov
and
lea
mov
push
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
lea
mov
or
mov
and
mov
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
mov
addl
mov
add
sbbl
push
xor
mov
mov
movzbl
sub
mov
mov
adc
xor
mov
addl
add
movl
cmp
je
mov
movl
jmp
mov
movl
cmp
movl
jne
push
jmp
mov
movzwl
mov
cmp
jne
mov
incl
xor
add
mov
adcl
mov
mov
xor
sbbl
add
imul
and
mov
andl
xor
add
cmp
movzbl
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
jmp
imul
stos
sbb
shrl
jl
dec
pop
jl
sbb
cmp
in
out
icebp
outsb
push
and
and
xchg
cmpsl
mov
and
mov
lret
sti
flds
movsl
mov
dec
cmp
fwait
ror
pop
stos
popa
xchg
xchg
outsb
sahf
in
mov
test
out
in
cmp
cmpw
out
push
js
xchg
mov
or
nop
cld
std
sahf
or
fwait
sbb
call
push
andb
dec
loope
sub
xor
cmp
sub
in
xor
sub
test
pop
fnstcw
pusha
or
pop
and
jge
mov
mov
int3
xchg
pop
repnz
ja
sub
mov
cmc
jmp
das
ret
sbb
icebp
leave
mov
jecxz
mov
push
jl
mov
jecxz
jmp
aaa
sub
js
test
ja
or
imul
aad
adc
hlt
ss
adc
dec
enter
cmp
sub
repz
push
sahf
aam
jno
adcb
cmp
sub
ficoml
and
mov
push
jp
xorl
add
cmp
sbb
push
loop
imul
insl
cli
and
outsl
mov
or
shlb
ss
icebp
shl
add
jle
mov
daa
push
sub
fsubs
xor
adc
cli
addr16
jns
cli
test
test
cmp
cmpl
inc
xchg
adc
les
scas
ror
fxch
mov
sbb
xchg
pop
cmpsl
outsb
out
cmc
adc
mov
and
movsl
pop
mov
in
cvtps2pi
sbb
cs
sub
jne
jo
ja
adcb
popf
cmp
shlb
jbe
pop
lret
mov
ja
sar
cmp
mov
mov
pop
insb
xor
subl
pop
sbb
push
sub
cltd
jbe
lahf
fimuls
or
lock
cltd
dec
xor
sub
test
aaa
add
adc
lret
push
or
and
bound
xor
cli
bound
cmp
out
mov
mov
jnp
jmp
loopne
lods
push
iret
push
or
adc
daa
cltd
sub
enter
fisttpl
mov
mov
push
bswap
xor
xchg
sub
push
cmp
dec
mov
jl
and
mov
in
cli
loop
not
mov
popa
sbbb
test
sbb
mov
pop
sbb
arpl
stos
rcr
mov
iret
daa
mov
inc
iret
sbbl
fisttpll
mov
movsb
call
scas
jp
fsubp
out
adc
ret
das
mulb
mov
ud2
mov
and
xchg
jo
adc
aam
or
xchg
mov
outsl
pop
sub
pusha
xchg
push
sub
call
subb
lods
xchg
pop
lret
test
mov
mov
js
lahf
ffreep
sbb
inc
cmp
pop
sbb
or
lods
call
pop
push
push
adc
inc
xor
mov
pop
stos
cmp
adc
adc
scas
outsl
cld
cld
fdivl
aas
shl
mov
adc
inc
cmpsl
cmc
sbb
cmp
mov
ja
repnz
mov
ja
sbb
or
xchg
shrl
fidivrs
or
insl
ret
stos
mov
cwtl
stc
repnz
xor
or
mov
push
add
scas
add
pop
mov
mov
jb
cli
outsb
or
fildl
mov
sbb
lcall
lock
xor
jecxz
repz
int
mov
push
pop
mov
jle
lahf
sub
bound
xchg
test
loope
out
sbb
sub
es
fwait
das
cmp
sahf
pop
push
push
jbe
push
lods
iret
mov
aad
dec
loop
and
and
sahf
mov
or
adc
mov
mov
sbb
mov
adc
pop
mov
inc
mov
lret
insb
cmp
subb
mov
out
or
pop
stos
push
out
idivl
int
jbe
push
divb
test
adc
add
test
cmp
icebp
mov
outsl
inc
iret
cwtl
roll
in
dec
cmp
add
lods
ja
mov
ss
or
lret
jmp
xor
jle
lcall
jns
aam
jmp
aas
dec
inc
add
loop
and
and
mov
jb
mov
arpl
jno
mov
sbb
jge
ljmp
aaa
pop
mov
aad
mov
addr16
adc
add
notl
add
xchg
inc
or
cmp
enter
jne
cmpsb
loop
data16
inc
mov
cmp
pop
ret
pop
sbb
daa
call
sar
xor
or
jns
adc
xchg
out
cmp
xor
lahf
mov
mov
push
ret
test
pop
xchg
mov
jae
xorb
stc
cs
or
cld
or
orb
lods
leave
mov
inc
mov
cli
mov
shll
loope
test
dec
cmp
sub
and
jo
pop
ret
xor
insb
push
or
cmc
call
push
movsb
roll
mov
mov
shll
enter
clc
adc
mov
cmp
mov
les
mov
adc
les
pop
mov
scas
scas
add
xchg
das
push
sbb
mov
test
push
jmp
pop
add
pop
stos
xor
dec
mov
mov
andl
adc
xor
test
sbb
and
pop
hlt
aaa
and
xchg
push
inc
pop
shrb
fcompl
sub
pop
and
ja
and
pop
push
inc
push
adc
ds
pop
mov
out
dec
mov
sti
loope
cmp
pop
dec
jl
jle
call
push
shlb
adc
adc
shl
inc
sbb
addr16
std
test
int
enter
bound
jge
cmp
lret
int3
in
mov
mov
adc
mov
or
sbb
adc
xchg
iret
mov
push
ds
data16
sub
stos
push
add
pop
xchg
xchg
and
clc
sbb
jbe
fisttpl
push
pop
nop
sbb
inc
mov
mov
cltd
add
mov
je
and
xor
lret
fisttpll
lock
inc
add
mov
into
mov
mov
cwtl
sbb
mov
stc
add
push
mov
inc
and
js
jle
rcrb
js
fldl
hlt
fildll
data16
or
add
test
shr
pop
je
mov
and
inc
arpl
xlat
test
push
insb
fnstsw
icebp
idivb
mov
jg
mov
sbb
push
int3
xor
mov
repnz
mov
xor
mov
cmp
xor
out
pop
mov
jns
pop
lock
and
stos
call
inc
pop
xlat
movsl
cld
sbb
fbld
adcb
bound
add
inc
pusha
cwtl
xchg
sbbb
inc
dec
mov
pop
iret
pop
adc
xchg
sub
fwait
subl
mov
and
popf
or
lahf
cmp
daa
rorl
stc
mov
adc
je
jno
add
dec
xchg
cld
jp
stos
clc
sub
jne
cmp
jl
in
test
loop
fs
jne
push
lcall
sbb
js
into
adcb
fildll
addl
sbb
stc
cli
ss
aaa
adc
filds
dec
in
mov
push
es
in
xor
dec
mov
ds
std
test
pop
adc
jns
xor
lcall
inc
xchg
mov
sbb
nop
mov
mov
jo
cmp
int
push
clc
in
pop
icebp
and
ret
aas
fisubl
adc
pop
mov
ret
push
push
sbb
mov
xchg
test
movsb
jmp
out
mov
pushf
ljmp
cmp
popf
dec
mov
adc
adc
xchg
stos
mulb
lods
aad
pushf
mov
and
addl
pop
orl
push
out
outsb
andb
bnd
cmp
popa
fmull
add
mov
out
push
pusha
loop
jns
repz
scas
sbb
sub
and
pop
jae
push
xchg
hlt
xlat
inc
sub
push
xorb
adc
movsl
inc
jl
ss
jnp
push
out
lret
and
push
mov
xorb
nop
mov
mov
rol
jno
cmp
xor
push
dec
dec
in
dec
repnz
ss
iret
aam
or
outsl
rcrl
scas
dec
movsl
pop
test
xorl
mov
push
dec
movsb
and
data16
pop
cmp
es
scas
mov
lea
popa
xor
adc
leave
stc
push
inc
iret
adc
dec
mov
ss
inc
movsl
sbb
mov
fcmovne
mov
xchg
dec
adc
fdivrs
mov
adc
sub
movsb
cltd
xor
push
in
jbe
test
cmp
jmp
mov
outsl
or
cmp
repz
insl
push
hlt
pushf
cs
stos
in
lods
cltd
sti
jmp
data16
pop
addr16
mov
mov
ljmp
mov
add
inc
sbb
enter
das
xchg
pop
cmp
outsb
stos
mov
rolb
out
ja
test
cwtl
lea
outsb
loope
dec
mov
cmp
or
insl
das
shrl
mov
xchg
cmp
lods
dec
jno
jl
mov
add
es
push
or
or
sub
jecxz
sbb
and
test
stos
xchg
pop
stos
jbe
xor
ret
daa
xchg
push
test
adc
inc
jl
clc
orl
add
hlt
ljmp
xor
rcrb
ds
xchg
sahf
clc
mov
adc
jmp
inc
cmp
push
rolb
inc
jbe
pop
or
dec
adc
xchg
mov
mov
and
outsb
inc
push
cmp
ret
mov
fstl
enter
popf
sti
push
and
test
mov
sbb
fst
das
fwait
sub
adc
add
sbb
sarl
jb
sub
add
xchg
sub
repz
scas
icebp
imul
ja
mov
add
rcrl
sti
test
mov
dec
jb
add
push
ljmp
add
inc
js
add
add
fisubrl
push
dec
push
jecxz
aas
mov
mov
jg
inc
or
mov
int3
leave
loope
in
jle
push
and
cmpsb
bound
dec
cli
mov
adc
rcr
dec
outsb
xchg
fistpl
push
cs
addr16
pop
jp
cmc
lea
loope
pop
loop
inc
jnp
xchg
xchg
inc
lods
mov
cmp
lahf
popa
jge,pn
inc
aad
or
in
jo
pop
sti
jge
dec
cltd
test
sub
xchg
mov
sbb
pop
mov
sti
enter
daa
mov
inc
mov
ja
lds
ret
in
add
add
mov
mov
lret
dec
mov
ror
sti
or
stos
mov
adc
mov
arpl
orl
mov
fcoms
push
outsb
xor
pop
or
pushf
ljmp
or
adc
mov
xor
xchg
fidivrs
sub
test
les
mov
cmp
push
cwtl
or
lods
add
rol
loopne
enter
pusha
fcmovne
mov
lock
xor
or
fcmove
sbb
mov
push
jle
cmp
jecxz
mov
xor
sbb
xchg
jnp
stc
ret
push
xchg
push
out
inc
xor
add
shll
adc
bound
mov
sti
pop
repnz
jecxz
sub
or
enter
loop
and
pop
movsl
ss
shr
dec
mov
cmp
call
jmp
pop
xchg
xor
mov
push
push
std
jbe
ja
xchg
jbe
hlt
sbb
cmp
icebp
and
push
xor
jnp
push
fcom
icebp
fnstenv
fistpll
and
jns
pop
shlb
add
cmp
stos
cmp
lret
push
cmp
adcl
in
addl
pop
sahf
jge
pop
jl
repnz
inc
jnp
dec
stos
fisubrl
mov
repnz
jns
test
add
pop
nop
js
aam
leave
es
in
add
cmpsb
out
adcb
and
mov
ret
in
cmp
lds
sbb
lds
or
f2xm1
mov
and
loope
jmp
fistps
adc
push
push
add
mov
iret
dec
ficoms
test
jns
pop
ret
aad
mov
testb
and
adc
mov
or
addr16
jle
sbb
or
test
mov
jo
inc
pop
inc
mov
sub
orl
ljmp
xor
cmc
cli
adc
stos
cmp
test
push
sbb
xchg
cmp
test
les
andl
mov
out
subb
mov
popw
loope
pusha
sub
adc
lea
sbb
insl
arpl
roll
jmp
inc
mov
lods
cs
xlat
xchg
inc
test
inc
xor
into
cmp
cmpl
pop
mov
adc
jnp
mov
jns
jno
into
cs
in
sbb
lods
test
mov
push
mov
popa
fdivrs
scas
lret
mov
out
imul
imul
sub
pop
push
rcll
jae
scas
cmp
negb
std
pop
sub
fcoml
mov
mov
inc
push
xor
fldln2
jle
inc
cltd
sub
lret
sbb
nop
push
push
jmp
pop
fnstcw
xchg
loopne
jle
fnstcw
scas
je
jecxz
gs
dec
ror
lock
push
je
call
adc
call
ror
push
sub
lock
add
negl
aas
mov
in
mov
test
inc
pop
or
pop
loopne
data16
sbb
mov
push
test
pop
or
imul
std
mov
js
add
imul
jecxz
dec
jecxz
sbb
lods
movsb
cmpsl
add
push
dec
adc
push
daa
in
and
out
sbb
stc
popa
int
cli
jecxz
negl
cmpsl
jl
out
fiaddl
dec
pusha
js
shrb
jo
pop
sbb
and
sbb
lret
mov
js
lcall
out
ljmp
inc
adcl
call
sbb
dec
mov
popl
inc
mov
cmp
cwtl
mov
test
repnz
add
out
add
dec
mov
sti
mov
pushf
jmp
cmp
cltd
lods
jg
dec
sbb
fldt
cwtl
lret
dec
aas
in
je
stos
cmp
jo
xchg
in
push
stc
push
lret
sub
mov
sbb
add
jge
inc
std
jns
movsb
pop
bound
mov
xchg
jno
dec
xchg
cmp
int3
or
push
sbb
push
jecxz
push
lods
inc
ret
sub
and
lahf
into
push
jnp
mov
adc
sub
mov
adc
mov
subb
ret
pop
xor
test
stc
push
jbe
jle
pop
adc
divb
xorb
in
les
lods
jns
or
lahf
popf
add
lods
cwtd
lahf
rclb
mov
test
idivl
lea
test
cmp
jg
xor
lahf
enter
pop
mov
movsl
adc
push
cli
in
cs
or
aam
repz
sub
dec
int3
notb
loopne
jb
popa
xchg
or
mov
out
inc
cltd
and
add
stos
adc
xchg
jecxz
lcall
gs
out
sub
rcll
push
mov
mov
and
mov
push
andb
out
test
outsl
push
pop
imul
jle
fdivrs
mov
xchg
mov
pushf
adc
xchg
insb
jecxz
out
rcll
sub
stos
lds
rcl
push
out
test
aas
xor
sahf
cltd
add
mov
fcoms
xchg
sahf
in
ss
mov
bound
cmpsl
add
sub
imul
fcmovnu
les
sbb
xor
pop
or
aam
popf
stos
mull
pop
dec
mov
mov
std
push
jge
push
or
in
shlb
imul
and
push
sahf
pop
cmp
pop
cltd
into
and
popa
push
or
int
lods
xor
pushf
pop
aaa
or
mov
mov
dec
icebp
xor
push
fdivrl
outsb
pop
stos
adc
mov
and
insb
sbb
cmp
cmp
aam
in
in
sub
nop
jnp
dec
xor
mov
jg
mulb
sarb
xchg
dec
cmp
push
add
jge
inc
ret
jl
ljmp
jmp
push
push
popa
xchg
mov
cmp
test
xor
stc
out
cmp
into
sub
inc
in
mov
dec
add
clc
mov
push
nop
mov
nop
cmp
pop
jl
mov
ss
cmp
out
xlat
or
xchg
cli
adc
jp
adc
repz
mov
xchg
jo
mov
or
sub
lods
jo
add
sub
push
xor
mov
dec
or
fidivs
aaa
push
xor
inc
dec
out
sub
pop
pop
xor
mov
pop
roll
arpl
push
ret
arpl
popa
sahf
pop
pop
insb
lock
movsl
movsl
fldt
xchg
hlt
jmp
xchg
cltd
inc
js
xor
mov
mov
mov
sub
jl
leave
enter
xor
packsswb
gs
pop
jno
xchg
add
and
bound
push
pop
mov
out
les
fbstp
xor
sub
add
or
or
cmpb
stos
movsl
lods
xchg
jb
pop
jmp
popa
push
pusha
out
js
les
ret
sub
dec
sahf
jnp
sbbb
mov
je
pop
shll
insb
xor
jg
jae
test
adc
and
lods
sub
xor
xor
or
mov
loopne
and
stos
repz
ss
adc
add
push
loope
jge
mov
call
rcrl
testl
test
das
lds
add
push
jno
fistpl
repnz
dec
xchg
loop
cli
cwtl
clc
sbb
xor
push
fsubl
movsb
sub
sub
cltd
test
hlt
and
mov
sbb
mov
cs
mov
inc
hlt
inc
or
mov
pusha
insl
arpl
xchg
push
xor
aam
incl
sub
cli
aad
lea
int3
pop
into
cmp
lcall
cmp
lea
xor
mov
cmpsl
pop
mov
nop
xchg
loop
sti
pusha
cmp
inc
nop
and
mov
dec
cmp
pop
sbb
add
fsub
mov
push
sub
dec
xchg
repz
fs
jno
mov
fs
cmp
mov
aas
hlt
inc
cli
jne
mov
daa
je
mov
inc
xor
jmp
nop
pop
cmp
aad
decl
ja
fildll
cli
or
dec
mov
xchg
dec
push
push
dec
mov
pop
test
sub
insb
xor
jge
jl
sbb
ss
dec
ret
das
mov
orb
adc
imul
mov
fildll
ss
mov
loopne
xor
mov
sub
sub
arpl
in
dec
add
push
mov
pop
cmp
iret
pusha
aas
lcall
insb
xor
add
push
shlb
mov
ficomps
ljmp
pop
lcall
pop
pusha
xchg
xor
out
xchg
sbb
icebp
pop
in
push
loope
std
mov
cltd
cmc
shrb
mov
inc
cmp
xchg
lds
notb
ret
adc
xchg
xchg
adc
mov
iret
or
and
xor
lods
std
jns
dec
lds
adc
push
sub
add
repz
or
mov
lahf
mov
stc
xchg
call
gs
jl
mov
fisubrs
xchg
push
inc
push
fs
inc
jl
sbbl
fdivl
mov
and
andl
add
xorb
and
inc
mov
sbb
adc
je
int3
or
and
sarl
clc
stc
mov
int3
icebp
pop
cmp
in
adcl
outsl
push
test
lret
ret
outsl
sub
mov
inc
cld
out
cmp
inc
jne
xchg
rcr
or
lret
xchg
sbb
xor
mov
leave
test
and
pop
adc
add
mov
into
rcl
stc
sbb
pusha
sub
mov
pop
int
pop
mov
loop
mov
shrl
sbb
xchg
add
cli
or
xchg
push
bound
lret
ret
xchg
hlt
scas
and
lds
out
mov
addr16
lahf
outsl
xlat
jg
notb
int3
loope
movsl
outsl
lock
xchg
cmp
idiv
pop
mov
xchg
imul
bound
pop
or
popa
test
jp
lcall
mov
pop
fsub
add
fstps
pop
fmul
inc
and
jecxz
shll
mov
jle
or
std
inc
push
leave
lret
xchg
ds
ret
cmp
sub
jge
xor
fwait
and
sub
ljmp
adc
and
add
daa
sbb
dec
xor
dec
xchg
mov
ja
push
iret
fidivrs
lods
bnd
dec
dec
cmp
and
nop
xchg
js
adc
cmc
dec
sub
out
push
out
xchg
nop
sub
mov
je
int3
movsb
jge
inc
or
test
jp
loope
xor
inc
lfs
cltd
lods
sbb
repz
movsb
lcall
push
mov
xor
mov
mov
ja
push
gs
jns
fdivp
push
and
shrb
adc
or
shll
rol
ret
jae
dec
add
and
inc
jno
dec
sub
in
sti
cmpsb
cmp
out
cmp
arpl
inc
push
xchg
inc
in
cmpsl
ds
popf
sbb
adc
imul
cs
sahf
aaa
leave
loopne
enter
mov
pop
movsb
insl
iret
in
lahf
mov
add
clc
mov
jmp
bound
jecxz
lea
mov
ret
jle
arpl
xchg
shrb
mov
push
movsb
push
sub
cmp
push
pop
into
hlt
and
mov
cmp
jb
test
pop
ficompl
jns
fistpll
mov
mov
ljmp
in
or
jg
mov
mov
and
or
sub
push
inc
xor
call
mov
push
out
or
mov
or
pop
jbe
push
jbe
jecxz
imul
in
int3
cmp
add
adc
pop
clc
cmp
or
add
or
xor
pop
mov
push
test
cmp
xchg
mov
imul
mov
pop
mov
pop
inc
push
xor
push
clc
inc
lret
mov
adc
sbb
scas
mov
lret
push
rcrl
inc
xor
mov
adc
dec
aad
out
jl
cli
xchg
pop
mov
ret
push
jecxz
push
push
dec
cmp
sub
xor
and
pop
sbb
and
es
mov
mov
jle
mov
scas
sub
ss
push
jg
fs
adc
lock
mov
clc
ljmp
dec
shll
popf
push
cltd
adc
lods
cmc
repz
xchg
lret
rep
mov
test
outsl
xor
adc
rcrb
out
xchg
lods
jmp
jg
sub
das
pop
jno
cld
or
or
mov
rolb
xchg
repz
sub
or
lods
sbb
mov
scas
ja
daa
sub
or
and
jns
out
shrl
lcall
fcoml
dec
mov
push
or
gs
xor
push
inc
sahf
push
cmp
unpcklps
cltd
sub
popl
rcrb
ja
add
push
nop
loop
sub
das
jge
sti
or
dec
lret
add
in
cmp
mov
loopne
xor
pop
jl
sub
cmp
sbb
js
arpl
popf
cmp
imul
sbb
shll
push
and
call
push
sahf
les
sbb
scas
or
dec
adc
lret
sub
ljmp
ror
int3
cmp
aaa
out
add
mov
push
xlat
lahf
rcr
ss
jno
mov
sbb
fistpll
rcr
mov
addps
je
ficomps
cltd
test
jmp
pop
or
mov
pop
adc
inc
test
pop
dec
leave
adc
cs
add
out
stc
enter
inc
das
lret
stos
cld
xchg
xor
cmp
add
cli
push
insl
in
lcall
popw
jmp
dec
scas
inc
mov
enter
inc
inc
lret
push
repz
push
ret
movsb
lahf
stos
outsb
mov
mov
add
adc
out
pop
push
inc
sbb
push
gs
test
add
enter
pushf
subl
cltd
rcl
mov
xchg
cli
sbb
decl
fwait
mov
out
mov
add
push
or
dec
sbb
sub
jo
or
xlat
jmp
popf
cmp
mov
sbb
pop
push
sbb
and
test
lods
ret
or
cmc
jnp
repz
lahf
push
lds
shlb
fstp
jmp
hlt
in
mov
pushf
mov
push
mov
cmc
cmp
int
push
and
es
jmp
fs
rorl
sbb
pop
inc
das
clc
in
or
jecxz
popl
lea
jg
lret
orl
ret
push
xchg
clc
movsl
shr
add
jle
dec
jb
sbb
andl
cwtl
popa
out
cs
sbb
mov
add
pop
aaa
rorl
and
adc
popa
cltd
mov
pop
fwait
jno
xchg
mov
jecxz
data16
sub
xchg
daa
sahf
xlat
dec
fld
test
loopne
cmpsb
int3
mov
loopne
lock
je
sub
xlat
daa
add
lock
push
cmp
mov
cmpsl
cltd
add
inc
fiaddl
cwtl
push
je
mov
bound
pop
scas
shl
or
pop
jae
shr
xlat
popa
addb
jae
or
xlat
or
add
pop
insb
mov
and
es
les
test
mov
test
mov
std
mov
push
jecxz
outsb
pop
or
xchg
enter
sbb
insb
push
adc
or
nop
xchg
adc
aad
mov
xchg
bnd
xchg
pop
push
jne
xor
push
scas
pop
or
faddl
cmp
sub
dec
in
jp
cli
pop
mov
fs
aam
out
xchg
jno
sahf
or
mov
jl
or
push
adc
test
imul
ljmp
mov
sbb
std
imul
xor
and
out
jbe
pop
out
scas
push
sub
add
mov
hlt
push
hlt
stos
adc
in
andl
mov
inc
cli
popa
pop
outsb
dec
lret
leave
push
das
and
or
or
cmp
insl
repnz
out
outsb
mov
pop
mov
js
push
xor
push
push
test
xor
mov
imul
loopne
cmp
shrl
and
adc
xlat
cmpsl
pop
nop
stos
cmpsl
cld
aaa
sbb
pop
cmpsb
bound
jecxz
push
aad
push
sbb
js
or
xor
push
pushl
or
cld
mov
add
outsb
and
mov
das
or
mov
push
mov
xchg
push
pop
das
sahf
ret
ret
in
jmp
sbbb
push
cmp
psllw
es
push
inc
cld
in
inc
fildl
or
cmp
jmp
enter
lret
pop
jp
scas
or
or
mov
imul
sub
jo
and
cld
cld
inc
dec
dec
inc
aas
test
dec
iret
mov
daa
stc
mov
scas
inc
xor
fadd
add
sub
cmp
inc
adc
clc
adc
out
inc
jmp
fisubrs
jp
sbb
popf
negl
dec
adc
push
add
mov
fwait
jle
test
outsl
jnp
stc
push
lea
fsubl
scas
hlt
dec
sarl
fdivrp
sbb
inc
faddp
ficoml
mov
inc
xchg
jno
mov
aam
pop
loope
adc
jp
iret
les
test
add
movsb
imulb
icebp
pushf
xchg
lret
push
lcall
cltd
je
icebp
int
mov
push
into
adc
inc
loop
mov
push
enter
pop
cmp
adc
xchg
mull
sub
xlat
push
add
jno
or
test
xchg
inc
mov
adc
sahf
jp
adc
repz
lret
je
push
adc
pop
out
out
mov
mov
cld
add
mov
jecxz
cmpsl
icebp
push
xlat
dec
push
add
loopne
adc
cli
jbe
push
lcall
repz
sub
push
mov
push
ret
jle
insl
test
lods
mov
fwait
sbb
inc
lods
xor
cltd
loope
mov
sbb
loopne
mov
inc
pop
pop
jb
mov
push
loope
sarb
fs
rorl
lods
add
stos
mov
outsl
fadds
add
inc
xor
push
push
pushf
leave
sub
jb
sahf
cwtl
sub
jb
lret
fmull
jo
sub
add
shll
inc
in
fstpt
push
or
gs
mov
inc
mov
inc
add
fwait
jl
cmpsl
in
stos
ds
in
pop
shll
stos
cld
into
sbb
hlt
dec
cmpb
movsb
and
outsb
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
andl
mov
mov
mov
xor
add
mov
movzwl
and
mov
mov
sbbl
xor
adc
push
sub
mov
movzwl
sbb
mov
negl
add
xorl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
push
andl
xor
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
push
call
jmp
and
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
push
mov
mov
xor
xor
mov
add
add
imul
mov
jmp
mov
in
xor
mov
xchg
push
iret
and
pop
jl
outsb
jg
sbb
popf
nop
lods
sbb
push
add
mov
adc
outsb
pusha
into
inc
xchg
out
loopne
repz
lock
dec
adc
sbb
dec
leave
jle
notl
fnsave
roll
fmuls
iret
pop
cmp
mov
jmp
xchg
cs
adc
fisttps
out
pop
leave
lret
pop
test
mov
cwtl
and
xlat
xor
mov
or
adc
mov
andl
add
cmp
inc
mov
xchg
jae
mov
sbb
or
aaa
loope
add
dec
insl
mov
bound
and
rclb
into
inc
stos
mov
faddl
cmpsb
ret
cmp
xor
ret
inc
clc
xchg
imul
or
aad
cld
call
loopne
mov
xor
adc
add
sarl
sbb
pop
jne
xor
xchg
pop
inc
sbb
push
xchg
mov
lods
mov
iret
pop
scas
mov
dec
icebp
inc
add
and
pop
fildl
cmp
rcl
push
dec
outsb
or
aaa
pop
imul
int
lea
enter
xor
insb
les
gs
cwtl
or
mov
jge
cltd
or
fsubl
push
mov
cmpsb
or
mov
xor
mov
push
mov
pop
or
fnstsw
inc
popl
mov
mov
lock
push
into
lcall
inc
repnz
pop
ret
call
or
lods
jge
adc
sub
add
push
pushw
lock
arpl
out
subl
in
sbb
orb
mov
test
test
jl
dec
or
scas
movsl
xlat
lods
ret
jbe
dec
xchg
push
ret
or
mov
or
dec
rclb
sbb
insb
add
repnz
and
jbe
popa
mov
jno
mov
mov
das
mov
iret
les
or
add
mov
sub
jbe
int3
cmp
mov
pop
push
pushf
xchg
sbb
mov
pop
inc
lods
in
inc
aam
in
std
dec
and
sbb
inc
adc
mov
lock
jb
cs
inc
add
mov
and
pop
sbb
push
stos
cmp
sub
pop
testb
sub
int3
mov
mov
sahf
out
mov
js
sbb
pop
xor
popa
std
cs
lahf
xchg
fldt
or
shlb
in
push
pusha
iret
sahf
outsb
or
in
pop
fisubrl
js
mov
dec
shl
cs
mov
inc
jmp
adc
fmuls
mov
or
xor
sbb
lcall
and
mov
jne
and
adc
pop
push
inc
pop
gs
or
jno
cmpsb
jns
outsb
mov
addl
shll
adc
stos
dec
mov
mov
xchg
xor
das
pop
mov
or
sarl
mov
ljmp
clc
pop
jae
fnstsw
lock
test
dec
pop
call
fistps
test
repnz
xchg
pop
mov
sub
pop
das
ljmp
sar
imul
aad
lods
pusha
jl
test
inc
mov
scas
or
arpl
into
pushf
nop
lret
call
cmp
jae
pusha
xchg
and
add
mov
xchg
xchg
ret
xlat
adc
lock
jge
and
fcmovb
lcall
out
push
inc
jb
negl
icebp
mov
and
cmp
movsl
adc
sbb
sti
aad
pop
arpl
fs
insl
addl
adc
mov
push
or
cmc
push
shll
orl
std
fstps
movsl
call
and
ss
lods
outsb
aas
sbb
jnp
mov
inc
mov
ficoml
adc
int
in
push
xchg
shrd
sbb
mov
mov
icebp
mov
into
imul
and
add
sbb
mov
push
mov
loope
sbb
std
add
aaa
inc
pop
cmpsl
scas
xor
aad
arpl
pop
mov
out
dec
cmpsl
mov
push
push
adc
in
mov
repz
test
loop
mov
in
inc
push
xor
ja
cli
xchg
mov
outsb
inc
sub
add
sahf
push
rcrl
inc
imul
cs
decb
and
stos
adc
jecxz
mov
pop
sti
cmc
stos
dec
lret
jns
or
test
lret
pop
push
lcall
lret
cli
and
dec
shrl
sub
rorl
fs
mov
stos
jmp
sub
dec
add
leave
add
or
mov
xor
cmpsb
push
inc
cld
dec
pop
ret
mov
lods
cmp
fldcw
outsl
lret
iret
fstpt
and
lods
outsb
in
mov
sbb
rorb
arpl
mov
mov
pushf
inc
xor
stos
add
ret
pop
mov
ljmp
scas
imul
popa
sbb
push
adc
cld
mov
push
jle
dec
mov
sarb
dec
xor
fisttpl
add
xchg
std
mov
scas
sbb
add
ja
out
arpl
xor
lfs
mov
les
jnp
cwtl
jge
xor
mov
sub
movsb
call
or
jmp
fistpll
orl
bound
icebp
int3
mov
push
aam
lods
xor
or
out
adc
test
insl
jp
addr16
testl
lret
pop
mov
repnz
popf
fisubs
vcvtsd2ss
stos
dec
or
jns
in
nop
adc
lds
xchg
dec
daa
and
cmp
xchg
jg
je
leave
inc
je
scas
or
fmuls
fdivs
repnz
outsb
jp
test
daa
pushf
lcall
sbb
sahf
xchg
push
divb
and
sahf
cmp
repz
mov
insb
ret
adc
mov
or
mov
pusha
dec
inc
inc
orl
loop
push
and
das
fnsave
frstor
rorl
je
push
rclb
sbbb
out
jnp
push
jp
mov
clc
sbb
aad
add
in
loopne
lods
pop
pop
add
jo
lods
call
lea
or
test
xchg
iret
and
pop
mov
lods
mov
into
mov
clc
sub
mov
fstps
push
xchg
pop
xchg
out
in
adc
nop
add
fsubrl
out
push
jle
inc
push
jae
idiv
cmc
enter
fsubp
jge
cmp
or
mov
ja
lret
popa
sbb
fadds
xchg
mov
bound
xor
pushf
rcrl
inc
fidivrs
cmp
cltd
jge
loopne
into
stc
into
push
cli
inc
pushf
jle
jae
das
pusha
arpl
mov
cltd
jno
icebp
jo
ret
mov
mov
push
mov
cmp
push
popa
mov
insl
rolb
mov
and
inc
rolb
add
out
jb
pop
cmp
insl
or
pop
mov
push
add
add
add
in
inc
mov
push
icebp
ss
mov
jp
jbe
mov
mov
xchg
mov
mov
and
aam
dec
imul
int3
sub
in
sub
and
mov
and
hlt
sub
pushf
mov
lods
scas
je
xchg
mov
xor
cmp
movsl
push
sbb
adc
mov
scas
cld
xchg
insl
cmp
dec
call
push
int
mov
fnstenv
mov
sub
mov
int3
jo
or
cmc
outsl
and
lods
xor
sbb
dec
push
les
push
movsl
xchg
inc
es
rorb
mov
adc
ljmp
fs
lahf
movsl
lock
xor
jns
add
push
and
fs
inc
loop
jmp
and
jno
loop
icebp
xchg
jne
add
es
lods
fincstp
jmp
jle
add
lret
ja
aas
ret
xchg
adc
imul
aaa
or
lcall
sbb
push
or
mov
add
std
adc
push
and
adc
test
mov
lods
lods
cmp
pop
into
or
mov
jmp
insb
loop
popa
cld
jbe
jbe
cmc
sbb
adc
xchg
and
mov
mov
in
int
out
xor
inc
loop
scas
or
das
push
inc
mov
popa
bound
bound
jb
xchg
dec
aaa
inc
dec
ret
insb
cmp
sub
hlt
stos
mov
cmp
addb
cmpsb
xchg
ficoms
mov
daa
xor
fldt
mov
les
cmp
jp
repnz
add
std
jbe
addr16
imul
in
xchg
mov
fmuls
push
arpl
add
sub
and
dec
xchg
and
lods
cmpsl
cltd
test
rolb
add
std
out
push
ljmp
fistpll
mov
stos
sub
ss
cmp
inc
pop
xor
mull
xor
or
outsl
rclb
inc
ffree
imul
sar
inc
gs
nop
ficompl
push
hlt
mov
mov
in
pusha
sub
sub
std
fs
xor
fmull
mov
dec
xchg
faddl
sub
pusha
daa
add
cmp
call
sub
ret
add
rcll
cli
xor
fistpl
dec
ret
stos
stos
orb
cmp
loopne
cwtl
mov
test
dec
push
daa
mov
mov
repnz
xor
jl
dec
mov
movsb
mov
lcallw
sub
dec
es
scas
shrl
out
outsl
scas
or
mov
leave
das
out
sbb
jno
clc
jp
pop
xchg
out
and
ret
pop
xchg
ljmp
or
add
cmp
and
iret
test
ljmp
pop
inc
scas
inc
cmp
mov
sbbl
mov
sub
ds
dec
xor
pop
scas
fildl
adc
pop
mov
out
cmc
lcall
and
loope
or
cmp
mov
cli
fidivrl
vunpckhps
adc
fstpl
adc
loopne
int
fidivrl
xchg
test
dec
push
mov
sbb
sub
xchg
xchg
cmp
cmp
xchg
daa
xchg
cli
mov
mov
jae
clc
cmc
scas
sbb
inc
xlat
rolb
dec
leave
inc
clc
pushf
es
scas
xchg
xor
push
clc
dec
pop
adc
mov
lea
rclb
mov
nop
cmp
sub
jae
data16
iret
or
out
pop
cmc
xchg
sarl
jb
cmp
inc
leave
scas
daa
sub
push
pushf
arpl
cwtl
out
inc
push
inc
shll
mov
lret
mov
aaa
inc
sub
les
shl
push
mov
hlt
lock
inc
loope
ret
mov
sub
es
xchg
fisttpll
jecxz
sbb
push
les
jo
jae
add
je
push
xchg
xchg
repnz
shlb
cmp
pop
ret
into
mov
testl
cmpsb
push
xchg
lahf
daa
lods
jae
cs
stos
dec
sbbl
sub
aad
aad
out
aad
jns
add
sbb
add
mov
imull
jmp
push
dec
hlt
mov
xor
stc
pop
xor
jo
dec
add
testl
jmp
sbb
xorl
stos
dec
mov
cmp
stos
pop
inc
sahf
jo
xchg
add
add
push
aam
daa
xor
sbb
cmpsb
jo
jecxz
xor
jbe
jns
sbb
cmp
mov
add
jns
cltd
arpl
add
popa
cmp
mov
bound
imul
jns
call
add
push
es
or
lds
xchg
icebp
pop
lock
inc
xchg
sahf
mov
nop
mov
lods
daa
das
adc
sahf
and
stos
and
loop
rcll
movsb
pop
adcl
loop
pop
aam
ret
cli
incb
stc
mov
xchg
int
and
fistl
scas
adc
pavgb
dec
fstpt
stos
pop
inc
add
js
decl
mov
push
jl
das
cwtl
pop
mov
pop
sub
push
fwait
dec
mov
loope
push
sub
pop
xchg
sbb
sub
xchg
push
fcom
xor
push
add
fidivl
mov
inc
filds
adc
fstp
xor
out
add
sbb
stos
mov
adc
scas
hlt
add
mov
dec
iret
xchg
popl
mov
push
out
or
add
mov
mov
outsb
push
cmp
shrb
sub
xlat
rorl
aaa
es
fwait
inc
sbb
jbe
lret
and
push
in
jg
idivb
ss
leave
sbb
pop
and
bound
cmpsl
cmpsb
push
pop
sbb
mov
adc
insb
lea
add
xorb
loop
in
xchg
std
push
shlb
and
pop
outsb
push
and
jl
sub
jecxz
add
add
repz
inc
add
sti
outsb
fs
push
cli
jbe
sbb
hlt
and
jae
addr16
mov
add
sub
add
in
aad
pushf
push
cmpsl
fistps
xchg
lcall
lahf
std
sbb
call
movsb
lcall
add
or
pop
imul
rorl
mov
cmp
int
mov
leave
popa
adc
sub
mov
push
cmc
and
mov
fimuls
imull
mov
shrl
sub
call
lret
inc
sti
out
or
push
and
xchg
pop
lds
xor
push
jp
jg
xchg
sti
mov
pop
dec
jb
adc
add
sub
mov
cmp
daa
add
dec
mov
ret
outsb
call
or
push
cmp
ret
gs
push
dec
stos
mov
bound
mov
dec
mov
mov
jmp
jg
js
xchg
dec
ja
ja
push
sarl
mov
jne
test
pushf
iret
setns
jbe
push
dec
cmp
xor
sbb
jb
leave
mov
sahf
or
inc
aaa
push
xor
sti
gs
push
loope
sbb
stos
cmp
xchg
dec
mov
sub
pop
movsb
out
push
loopne
lret
test
addr16
aam
outsb
pop
notb
enter
out
xchg
jl
insb
hlt
xchg
mov
int3
addr16
mov
mov
cmpsl
and
add
mov
int
test
xchg
xchg
daa
popf
sbb
pop
push
xchg
and
pop
inc
xchg
mov
mov
cmp
sbbl
fwait
adc
xchg
loopne
pop
push
sti
jne
pop
sbb
pusha
lods
xor
pop
add
pop
xor
pop
push
pop
lods
call
mov
lea
js
fstpl
lahf
xor
shll
cmp
jne
mov
dec
cli
test
jp
add
mov
mov
addb
cmpsl
ss
inc
push
out
mov
outsl
ret
jmp
add
sarl
add
mov
pusha
in
or
rcrb
movsb
fmuls
cld
cld
and
cmp
mov
aas
test
xor
in
push
stos
repz
cwtl
mov
inc
shrd
mov
pop
push
mov
clc
inc
cmp
mov
adc
push
cld
psrad
adc
mov
in
das
and
jge
push
sub
cmpsl
xchg
lahf
push
push
fdivrl
loopne
add
dec
sahf
mov
cmp
cmp
jo
dec
xchg
mov
mov
push
jp
fisttpll
push
mov
nop
movsb
lods
movsl
or
sub
jl
sti
mov
loop
and
data16
mov
clc
jge
push
sub
sbb
or
lock
xlat
imul
and
insl
mov
mov
aaa
icebp
clc
repz
sbb
mov
or
sub
mov
add
shrl
sub
xor
cvtdq2ps
mov
or
sbb
fidivrl
lahf
or
pop
hlt
ljmp
les
test
adc
jmp
sub
sub
mov
xchg
enter
and
mov
xchg
sbb
xor
or
pop
mov
test
xchg
and
xor
mov
enter
gs
bound
jbe
mov
scas
or
lret
mov
hlt
ljmp
mov
stos
xchg
daa
or
ret
jne
test
sti
mov
sub
loope
inc
xchg
push
cld
rorb
mov
mov
rorb
cmp
lea
popa
mov
fwait
sbb
sub
outsb
out
push
and
mov
add
and
insb
xorl
rcrb
jae
cvttps2pi
jne
lods
gs
call
rorl
pop
outsb
cmp
sbb
inc
rorb
mov
jno
arpl
std
movsb
push
inc
mov
pop
cmp
gs
ja
cmp
int3
sbb
xchg
sbb
pop
dec
lods
sar
mov
lret
mov
or
cmp
push
push
popa
int3
adc
test
out
incl
and
mov
pop
jae
stc
jmp
in
sbb
push
sbb
repnz
fisttps
jnp
int3
js
add
xor
lahf
rdmsr
out
xor
arpl
lret
mov
test
es
es
mov
imul
mov
arpl
fwait
mov
mov
mov
mov
or
cmp
jb
pop
xchg
fnstsw
add
insb
or
ss
icebp
mov
enter
in
lods
push
push
pop
add
cs
shrl
cwtl
cmpsl
inc
mov
pop
or
xchg
and
out
xor
scas
push
push
xor
test
fcom
lds
push
and
mov
sub
iret
dec
jne
pop
pop
sbb
cwtl
pop
push
loop
cmp
cmp
stos
in
mov
add
jg
lea
ret
jg
or
les
ds
mov
jnp
ffreep
sbb
test
jp
push
cwtl
sar
xchg
pop
aad
adc
repz
or
xlat
cmc
inc
xchg
loope
fxch
mov
pop
dec
imul
mov
sbb
jl
cwtl
dec
jle
stc
mov
rolb
add
and
mov
pop
sar
xchg
stos
mov
dec
out
outsl
into
stos
or
dec
rorb
jb
push
xchg
inc
mov
mov
sti
loop
pop
fistpll
sbb
dec
dec
loope
test
pop
mov
dec
push
test
out
fs
fadd
cmp
push
push
xchg
test
ret
test
adc
aaa
ffreep
lahf
enter
mov
push
jb
cli
aam
dec
les
roll
adc
and
lret
cmc
jbe
aas
hlt
pop
in
nop
mov
sbb
arpl
es
dec
js
inc
call
or
ret
add
dec
mov
mov
enter
sbb
aas
mov
loop
lds
in
pop
cmp
and
or
dec
push
pop
xor
dec
repnz
inc
sbb
pop
sti
xchg
jo
pop
and
cmp
outsb
movsl
cmp
cmp
sub
jg
insb
add
pop
pusha
xchg
sub
xchg
push
out
in
inc
xor
mov
std
dec
fsubrs
xor
or
rcll
push
ljmp
mov
sbb
insb
rolb
lods
jecxz
aad
lcall
dec
neg
outsb
xchg
cmpsb
les
adc
push
or
mov
add
push
push
push
pop
pop
lcall
xor
sub
xchg
jne
rcl
shrb
aam
shl
jns
mov
testl
repz
ret
mov
cmp
or
outsb
rclb
inc
call
inc
dec
and
cmp
mov
xchg
enter
mov
pop
mov
dec
shl
stos
leave
jbe
xchg
jle
ficomps
ret
inc
arpl
xlat
mov
daa
sbb
inc
sub
loope
jbe
mov
mov
pop
mov
mov
punpckhdq
inc
jno
mov
jg
add
int3
std
xchg
addr16
das
out
je
lds
vmread
dec
xor
pop
jmp
dec
rcrl
rcll
mov
pop
and
cmp
loopne
push
cmp
lods
popa
shr
adc
repz
and
and
call
cmpl
ret
push
int3
adc
or
add
cld
nop
in
pop
lds
sbb
loope
aas
jo
mov
xor
dec
dec
ret
sbb
sbb
aad
inc
push
inc
sub
in
movsb
push
fcmove
xlat
cmp
mov
dec
cltd
jnp
stos
xchg
jp
xor
adc
xchg
lock
cli
push
pop
xor
pusha
adc
or
lods
cmpl
pop
hlt
dec
les
decl
lock
sub
rcrb
popf
js
add
push
or
or
in
and
mov
push
push
jge
hlt
pop
mov
out
movsl
rcrl
gs
cmpsb
and
adc
sti
sub
adc
aam
mov
scas
inc
mov
xchg
xor
outsb
push
add
xchg
movmskps
out
pop
fnstcw
add
cld
les
pop
repz
or
loop
xlat
and
mov
jne
pusha
jmp
fwait
pop
fwait
jge
pop
pop
popa
out
cld
pop
movsb
cs
pop
mov
xchg
mov
push
or
scas
cwtl
push
sub
in
fcmovne
pop
fdivrl
dec
imul
sbb
cmpsl
outsb
pop
push
insl
adc
fisubl
xchg
imul
mov
xor
fisubrl
push
or
cmpsb
jbe
push
xchg
outsl
jge
push
adc
sub
nop
and
clc
add
inc
xchg
dec
js
sbb
loopne
lcall
push
xchg
push
dec
push
mov
movsb
loop
lds
les
pop
inc
lods
sbb
mov
jmp
sub
fidivs
add
mov
jo
lock
mov
pop
inc
iret
call
xchg
out
push
jge
xchg
or
dec
andb
rcrb
sub
sub
jne
xor
movl
jae
push
out
push
xchg
cmpsl
mov
pop
xor
mov
sbb
pop
push
rcll
xchg
fldl
pop
push
mov
cmovb
out
xor
xor
mov
jns
stos
ss
mov
fs
lock
xchg
int3
and
int
push
test
lea
push
pop
jne
dec
xor
xchg
push
jmp
rcrb
lret
push
ljmp
call
out
sub
shlb
xchg
inc
push
jp
add
cmpsb
and
jo
inc
lock
inc
adc
sahf
push
jecxz
sbb
mov
outsb
add
mov
mov
or
lret
jg
push
cmpsb
dec
stos
pop
xchg
mov
push
jo
imul
mov
lea
dec
sub
push
addr16
stos
js
lahf
mov
mov
lahf
sar
gs
cmp
enter
xchg
mov
in
out
pop
pop
ret
lock
sub
sbb
leave
mov
add
push
insb
orb
xchg
cmpsl
add
movsl
xor
adc
insb
xor
cmp
xchg
sub
dec
jne
jle
pop
mov
xchg
pop
cmpsl
cmpsb
leave
push
xchg
lret
mov
call
pushf
dec
into
mov
xchg
push
push
sbbb
into
fs
mov
in
cli
cmc
fwait
cmp
or
push
lahf
fldenv
mov
hlt
lret
pop
push
and
xchg
and
fcmove
fcmovnb
xlat
call
es
jns
jecxz
lock
call
pop
sahf
cmp
movsl
shll
mov
pop
shll
popa
inc
mov
push
mov
mov
cmp
push
in
dec
ljmp
mov
in
xor
fdivp
in
insb
jge
dec
lea
test
ljmp
or
in
jbe
adc
pop
adc
dec
dec
movsb
xchg
and
ret
dec
xchg
inc
sbb
xchg
ficoml
ret
jp
stos
aas
pop
mov
fiadds
je
rcll
adc
lret
sarl
clc
inc
mov
push
loopne
int3
rol
repnz
xor
outsb
fidivl
adc
xchg
std
cltd
mov
lcall
fdivl
jno
sar
add
jns
jge
shr
push
jae
dec
jecxz
mov
adc
in
push
adcl
mov
gs
idivl
das
jnp
insl
lods
lret
and
mov
sub
shll
data16
sub
inc
incl
inc
enter
out
les
lahf
dec
push
cmp
in
mov
jb
jne
out
lret
aaa
or
es
insb
sub
ret
into
xor
dec
pop
jno
test
adc
andl
mov
movsb
lcall
sbb
add
cmc
mov
push
xor
sbb
dec
xlat
fstpl
inc
pop
out
push
aam
push
dec
sbb
mov
xchg
ret
sbb
and
or
in
pop
xchg
dec
fistl
and
add
daa
xor
sarl
movsb
mov
in
das
jae
mov
mov
stc
push
sub
fdivr
cmp
mov
movq
movsb
fwait
outsb
push
andl
jnp
pop
mov
push
loopne
xchg
std
shl
mov
imul
ss
xor
inc
dec
stc
aas
fstl
mov
mov
test
fists
sub
pop
cmp
filds
mov
cltd
and
or
jge
push
es
add
pop
mov
jg
pop
cmp
adc
mov
cmpsb
das
dec
cmp
ds
push
cmp
xlat
js
jb,pt
add
xor
cwtl
and
lock
inc
push
sub
hlt
testb
inc
aad
je
mov
imul
mov
inc
mov
enter
adc
dec
xor
stc
fcoms
adc
mov
cmp
cmp
cld
pop
jns
and
push
xchg
jecxz
add
repnz
fidivl
jle
rorl
movb
jo
jbe
mov
jo
bound
mov
jp
mov
shrb
frstor
or
jno
inc
aaa
js
mov
mov
xor
adc
xor
nop
jge
push
dec
push
mov
cmp
dec
js
xorb
add
sbb
fstps
mov
or
push
inc
dec
sbb
mov
sbb
mov
xor
push
pop
subl
adc
test
xorl
ficompl
cmp
mov
mov
aas
std
and
fldt
sbb
es
or
pop
iret
add
in
insl
adc
pop
and
adc
push
aam
dec
in
outsl
les
ja
xchg
lahf
repnz
push
jge
movb
pop
rcll
jo
in
ss
test
inc
shlb
jg
ret
ror
rcrl
test
je
lea
rcll
sbb
sti
push
shrb
and
push
jno
cmpsl
into
out
inc
enter
dec
mov
push
mov
rolb
mov
or
gs
hlt
negb
adc
sub
add
sub
mov
sbb
scas
loopne
and
or
pop
xchg
loop
jle
fiadds
mov
mov
ljmp
pop
pusha
mov
fisttpl
xor
cmp
mov
jecxz
jbe
daa
push
dec
pop
cwtl
inc
mov
mov
lcall
call
mov
push
outsb
or
mov
ss
std
push
bound
rclb
cmp
test
sbb
ret
adc
test
lds
pop
rcl
bound
fidivrl
and
xchg
xor
in
push
push
pop
pushf
fldcw
std
in
movsb
les
ror
orl
out
sbb
pop
aas
xchg
fstl
bnd
jb
lret
test
mov
sub
div
int
pop
cmp
ds
sub
xchg
add
or
ret
sar
in
xor
popf
sub
int
ds
xchg
push
lods
xchg
enter
jnp
and
lcall
push
clc
dec
aas
les
pop
std
ret
test
fldcw
push
xchg
push
mov
adc
icebp
insb
jmp
lods
lret
inc
adc
sbb
in
mov
mov
test
popa
adc
pop
loope
mov
pop
inc
fidivs
sub
gs
jb
sarl
push
sbb
mov
pop
lea
cmpsl
aam
test
fadd
xchg
jg
lcall
bnd
and
push
mov
sub
shr
xchg
mov
pop
jo
cs
mov
xlat
lods
inc
xor
or
inc
add
mov
lret
ret
iret
mov
xchg
icebp
test
in
lcall
sar
cmpsb
jno
fildl
cmp
fdivrl
jecxz
sahf
cmpsb
dec
mov
mov
pushf
aad
repz
repz
xchg
jne
sub
stos
cmp
push
and
inc
jp
lds
mov
adc
mov
pop
faddl
sub
popa
mov
pop
pop
icebp
stos
cmp
nop
push
sbb
pop
roll
xchg
pop
movsb
fstp
insb
mov
inc
push
outsb
test
adc
add
nop
dec
xchg
int3
sub
mov
push
test
pusha
or
dec
or
int3
icebp
xor
popa
jno
cmovs
data16
in
jp
mov
mov
xchg
mov
rcll
mov
insl
mov
inc
loope
movsl
sub
inc
adc
pop
lret
mov
add
lods
jge
outsb
adc
movsl
sbb
mov
xor
pop
fwait
scas
cmpsb
aaa
jns
popf
sbb
pop
fucomp
enter
jbe
mov
pushf
pop
dec
sub
js
sarl
mov
mov
rcll
rcl
dec
jg
lea
xchg
sub
mov
mov
xor
inc
jmp
std
insb
xor
int
out
mov
test
mov
test
lret
push
addb
ljmp
cltd
inc
pop
jb
and
sub
insl
scas
out
inc
shrb
lea
sub
xor
or
shlb
ffree
adc
shll
adc
dec
pop
mov
mov
mov
shrl
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
sbb
mov
xor
xor
sub
mov
add
movl
or
mov
push
mov
add
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
add
mov
negl
push
mov
adcl
add
cmp
movl
je
mov
mov
xor
xor
adcl
add
add
adc
negl
xor
mov
push
movzbl
adc
xor
xor
mov
and
mov
add
movl
adc
addl
xor
movl
xor
movl
cmp
movl
jne
movl
cmp
je
jmp
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
sbbl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
notl
mov
adcl
add
movzwl
mov
mov
sbb
movb
add
lea
xor
mov
addl
mov
mov
orl
xor
andl
sub
andl
mov
movl
or
push
jmp
and
add
movsl
jp
jp
push
jl
pop
pop
jl
jecxz
push
loope
push
cwtl
ljmp
push
pop
movsb
sbb
testb
pop
stos
mov
jns
sahf
ljmp
lea
call
sbb
out
adc
push
fisttpl
out
cmp
mov
gs
movsl
push
insb
test
out
cmp
lds
sar
sbb
mov
test
xor
dec
loopne
mov
ret
out
or
movsl
xchg
cli
scas
inc
jp
out
sti
inc
ffreep
loop
mov
fidivs
mov
xor
into
in
ljmp
push
out
push
xchg
fcoms
push
aad
shrl
hlt
or
ljmp
cmpsl
adc
mov
xchg
leave
mov
xchg
lahf
outsb
aaa
dec
xlat
test
mov
movsb
adc
mov
mov
bound
loopne
ficomps
inc
mov
mov
std
leave
add
mov
je
bound
ss
ret
jg
test
inc
jp
pop
add
loop
loop
fisubrl
shr
shrb
test
xor
inc
dec
je
dec
inc
fdivp
lods
cs
lcall
xchg
shlb
or
aas
sub
aam
rol
ret
or
xchg
adc
cmp
mov
rcl
test
aas
sbb
imul
ja
hlt
cmp
sbb
in
loope
pop
repnz
lret
adcl
arpl
cmp
mov
iret
pop
mov
lods
fldt
loopne
xchg
xor
and
outsb
pop
sti
cld
lods
scas
fs
jmp
xchg
cmpsb
jb
in
lds
add
lret
ja
je
out
adc
pop
jno
lods
pop
aad
sahf
dec
adc
stos
insb
std
fisttpll
movsl
mov
cmp
negl
adc
std
jl
push
dec
adc
loop
aad
dec
mov
out
inc
jo
or
bound
lods
mov
jle
and
dec
aas
pop
sbb
loop
jno
out
or
xchg
xor
fsubrp
dec
iret
push
dec
adc
out
add
jo
daa
or
mov
inc
add
popa
into
adc
mov
add
pop
sar
sub
push
daa
orb
mov
shll
mov
ret
sub
stc
mov
stc
dec
add
sub
daa
cs
inc
sub
mov
repz
pop
arpl
rcr
fcoms
xchg
push
in
mov
mov
pop
cmp
ret
jecxz
imul
pop
lea
cld
or
fisttpl
sbb
stos
nop
sub
mov
push
mov
jl
lods
xchg
rcll
sub
inc
mov
dec
test
xchg
stc
int3
xchg
bound
enter
lcall
mov
push
iret
cmp
jne
push
lret
mov
and
hlt
mov
cltd
pop
ljmp
xchg
cs
pop
imul
adc
call
fcom
mov
ss
adc
sub
sbb
icebp
xor
pusha
xchg
mov
jae
dec
lret
mov
jg
push
jecxz
in
loop
scas
mov
aaa
lret
fwait
jae
push
dec
pop
and
fldenv
mov
adcb
rorb
ret
aaa
jb
mov
mov
movsl
cmp
mov
outsb
adc
mov
dec
das
movsb
or
inc
push
push
push
dec
sbb
shrl
mov
push
ret
mov
push
jmp
lods
cwtl
shrl
lea
sbb
mov
and
in
int
dec
sub
mov
add
xor
lods
xchg
xchg
inc
push
cmpb
cld
stos
or
and
inc
mov
loope
or
xor
cmp
push
or
arpl
xchg
xchg
ror
dec
dec
jg
xor
and
pop
das
mov
mov
mov
fldenv
fcomps
loope
sahf
stos
test
cmpsb
in
sti
notl
repnz
sub
movsl
mov
adc
xor
int3
add
push
pop
push
xorl
movsl
or
lret
or
xchg
mov
mov
or
fisubs
ret
icebp
adc
in
cltd
lds
ja
push
jg
xchg
aad
xor
xor
loope
jbe
sbb
out
or
insl
ret
subb
mov
repz
aad
cmc
push
movsb
dec
gs
pop
pop
push
or
and
and
add
stos
cli
fdivr
sub
incl
push
leave
divl
nop
loop
mov
xor
test
jb
ljmp
push
or
mov
xor
mov
pusha
gs
inc
push
pop
xchg
xchg
cs
ljmp
sti
add
test
push
mull
jne
pop
sub
insl
add
mov
insb
js
dec
stos
leave
ret
and
xor
push
mov
push
pop
aas
test
adc
dec
mov
pop
cmpsl
mov
push
push
stos
ret
jae
movlhps
aaa
jno
push
ds
jnp
jo
push
shr
pop
mov
fiadds
inc
push
pop
lret
inc
dec
and
push
lock
cmpsl
adc
mov
lret
neg
out
icebp
xlat
sbb
fstps
pop
lahf
jb
in
testl
lods
mov
mov
je
shl
arpl
stos
mov
mov
inc
mov
repnz
aas
xchg
dec
xor
arpl
cmp
pushf
icebp
jl
jnp
negb
jl
test
add
fisttpll
lea
add
rcrb
aaa
icebp
stc
pop
in
lret
adc
and
or
jo
rolb
jp
jge
out
sub
in
push
mov
dec
or
adc
push
or
ja
pop
push
adc
dec
lock
dec
ljmp
ret
mov
dec
mov
es
xchg
jg
inc
pusha
adc
and
add
and
jne
aas
push
jl
push
push
in
pusha
lret
fdivs
out
bound
imul
mov
cmp
rcrl
out
inc
mov
jp
push
xor
in
jl
adc
mov
add
testb
mov
add
or
inc
and
sbb
xchg
sti
mov
fsubs
iret
loope
push
repz
rclb
fsubs
fs
jb
xchg
ja
inc
ret
mov
push
xchg
push
aas
out
ds
mov
arpl
pop
xor
dec
add
sbb
adc
pop
iret
ror
push
loop
ret
sti
popa
sbb
or
inc
loopne
xor
cli
add
out
test
test
jle
jb
test
mov
jmp
fwait
xchg
xlat
or
pop
cs
es
ret
gs
dec
stos
cmp
xchg
pop
push
xchg
mov
cmp
sbb
mov
ljmp
xchg
aaa
push
loope
mov
cmpsl
or
and
and
mov
movsb
inc
or
inc
cmc
loope
pop
rcll
std
imul
mov
mov
fs
or
xor
pop
mov
inc
jle
int
inc
sub
mov
xchg
test
fbld
sbb
rcrb
in
pop
into
and
bound
xor
sub
pop
iret
push
lea
gs
mov
andl
add
mov
iret
fdivrl
ret
and
insl
stos
or
icebp
stos
lcall
repz
cmc
sbb
and
cmp
jnp
pop
push
jae
mov
push
inc
rcrl
enter
loop
lods
xor
adcb
rol
pushf
sub
ja
in
mov
and
subb
ret
bound
andps
push
aam
and
sub
test
scas
into
into
shrb
and
bound
ds
arpl
call
mov
mov
xor
or
mov
adc
pop
rep
repz
int3
in
inc
mov
cmpl
sbbb
repz
pop
roll
mov
lock
pop
in
mov
out
sbb
shl
lret
inc
stos
xchg
pusha
out
fsub
xlat
fxam
insb
push
popl
test
fldl
ds
cli
into
cmpsl
xchg
rol
shlb
iret
xor
xor
dec
sub
fldenv
jle
push
stos
xchg
mov
out
push
mov
cltd
xor
xchg
xor
mov
lea
cmp
or
add
or
sub
xlat
arpl
nop
sbb
out
fisubrs
outsb
jp
cld
addl
add
sub
shll
and
sti
mov
pop
mov
mov
outsl
lret
faddl
push
leave
inc
jns
mov
outsb
inc
jns
xor
add
test
pop
ret
sbb
and
inc
add
data16
pinsrw
aas
or
jb
jbe
cmpsb
sub
or
pop
pop
or
and
cmp
add
in
and
xchg
mov
stos
and
dec
shrl
gs
add
xchg
call
movsb
mov
jae
lret
inc
adc
sahf
mov
jg
sub
xchg
stos
inc
add
cmc
push
mov
pop
or
or
add
push
mov
add
mov
push
dec
adc
xchg
xor
out
repz
lcall
add
in
clc
push
stos
adc
imul
stos
jg
ss
outsl
jmp
int
mov
adc
fnstenv
out
shll
clc
cmp
pop
inc
mov
call
lea
xor
adc
scas
sbbl
loop
or
mov
cltd
add
mov
movl
add
popa
cmp
dec
aaa
jbe
pushf
fcomi
add
xchg
fldcw
inc
addb
test
int
and
test
and
lret
pop
ds
daa
or
dec
sbb
adcb
add
and
push
int3
xorl
aad
int3
gs
push
or
call
mov
xor
add
mov
pop
arpl
jns
adc
and
inc
sbb
mov
aad
jl
lahf
jnp
enter
or
mov
orl
mov
jmp
sbb
inc
pushw
ljmp
dec
dec
mov
je
cmpsl
and
and
jnp
mov
test
or
shr
lods
test
lock
movsl
pop
xor
repz
jle
dec
es
hlt
push
push
mov
sbb
cs
insb
push
mov
jp
pop
outsl
shrl
pop
sbb
nop
fwait
je
jns
dec
shlb
loop
add
outsl
fwait
sbb
jmp
rorl
fdivl
aad
xchg
sbb
clc
lock
pop
jnp
mov
push
loop
in
jecxz
inc
mov
loop
xchg
imul
xor
movsl
mov
inc
inc
mov
and
pop
cmp
mov
sub
aam
jle
sbb
cli
cmp
icebp
and
insb
mov
addr16
inc
mov
sarb
jns
rolb
pop
jle
int3
pop
sbb
daa
push
inc
jl
mov
xor
aam
stos
mov
es
sahf
lret
js
into
das
jecxz
sub
out
shlb
mov
test
pop
sub
imul
jecxz
xchg
mov
push
les
cmp
decb
loop
jne
jmp
jb
dec
push
jge
jl
mov
in
sbb
mov
push
mov
cmp
xor
insb
jle
cld
repz
loope
adc
pop
pop
int
popf
sbb
jnp
mov
insb
cli
loopne
add
ss
iret
repz
stos
and
leave
bsf
ficoms
jecxz
rorb
test
ret
icebp
jbe
inc
cwtl
fiaddl
pusha
mov
sub
and
jmp
movsl
aas
scas
cwtl
dec
stc
cmp
sbb
out
jae
lea
push
addr16
jle
cmp
cmp
xor
pop
dec
js
adc
inc
pop
jbe
mov
mov
inc
add
insl
ja
pusha
aas
in
pop
cmovg
jge
push
mov
push
cmp
jbe
mov
mov
xchg
rcrb
mov
push
test
and
adc
inc
popf
push
data16
xchg
mov
sub
fs
jnp
sub
dec
int
add
std
push
push
xchg
pop
jo
arpl
lock
mov
xor
jmp
gs
add
push
inc
jmp
jecxz
sub
cmc
cmpl
dec
sub
test
sub
sub
inc
inc
adc
xor
int
out
clts
ljmp
fcmovb
cld
jb
int
lcall
sbb
mov
xor
fcoml
daa
or
pop
clc
add
add
pop
cwtl
repnz
xor
add
mov
or
ret
test
adc
gs
add
push
push
leave
add
fs
push
das
test
and
nop
lods
pop
ss
cmp
ret
xor
xchg
push
mov
dec
or
ret
gs
sbb
sbbb
dec
subl
push
push
dec
push
xorb
jmp
popa
dec
mov
ljmp
add
icebp
incb
sbb
mov
push
aaa
mov
inc
pop
inc
imul
aaa
mov
js
sbb
dec
dec
aaa
leave
lea
lret
arpl
cmp
ljmp
shrb
jp
testl
in
lret
orl
ret
xchg
std
xchg
jae
mov
cmp
dec
mov
or
out
icebp
xlat
pop
test
xlat
xlat
xor
lret
cmpsb
sub
repnz
loop
hlt
std
dec
push
fadds
leave
mov
mov
sarl
push
fnstcw
lret
ds
es
push
mov
sbbl
stc
inc
mov
repz
mov
mov
jne
repnz
repnz
push
negl
xor
addr16
inc
inc
mov
enter
fcoms
das
shrb
aas
and
test
outsb
iret
jmp
mov
and
cmpsl
notb
sti
mov
in
mov
add
mov
add
adc
push
inc
popw
mov
push
cwtl
mov
int
js
mov
inc
cmp
cld
pop
outsb
xchg
nop
inc
mov
nop
and
mov
sbb
stos
dec
mov
cmp
repz
jno
ljmp
and
ret
mov
fs
push
mov
add
fs
adc
inc
pusha
cmp
lcall
ss
mov
insb
adcl
sub
add
mov
xchg
arpl
pop
sti
mov
dec
mov
ds
mov
cmpsb
daa
jae
das
jmp
int
movsl
sbb
cli
xor
iret
fld
jbe
xchg
int
insb
pushf
into
mov
out
adc
movsb
je,pn
pop
dec
sub
pusha
sarb
pop
aad
lcall
jp
loopne,pt
mov
cmp
ds
incb
mov
jl
stos
inc
push
scas
add
push
pop
loop
and
imul
repz
jle
mov
cmp
lock
xor
cmp
mov
xor
icebp
dec
adc
cmp
lahf
daa
xor
dec
push
je
sahf
or
jno
into
arpl
lods
dec
pushf
scas
sub
lods
loop
mov
sub
shlb
and
xchg
and
lods
repz
pop
sub
cs
jns
adc
mov
test
ret
push
jb
push
jbe
mov
jmp
adc
inc
inc
test
loope
stos
cmpsl
mov
push
ficompl
popl
js
int3
push
cmc
mov
dec
jae
jne
sahf
les
into
inc
flds
jmp
mov
inc
mov
addr16
dec
or
testb
push
xchg
push
outsb
xor
xchg
popl
sbb
add
mov
sbbl
pop
mov
icebp
fidivrs
ljmp
jle
ds
mov
mov
cwtl
pop
aaa
inc
popa
outsl
mull
dec
xor
repnz
iret
pusha
cmp
test
inc
xchg
test
jg
or
std
jge
push
jg
sbb
dec
rcll
xor
test
or
repnz
jle
inc
out
shr
dec
aaa
dec
xchg
js
cmp
cltd
daa
outsl
mov
cmp
sbb
out
call
shll
mov
or
inc
add
inc
adc
icebp
rorb
sti
xchg
sub
pop
ficoml
icebp
orl
inc
xor
sbb
push
mov
mov
inc
xchg
or
stos
pop
imul
pop
xor
je
inc
insb
stos
dec
pop
mov
xlat
loop
mov
andb
popf
push
lock
cltd
jmp
push
ljmp
sbb
adc
hlt
lds
and
lock
insl
and
inc
mov
push
xchg
and
sub
ret
stos
sub
enter
aas
int
jl
sahf
clc
aas
pop
fs
push
pop
cmpsl
repnz
or
sar
cltd
or
inc
inc
and
or
cmc
test
iret
mov
aad
roll
out
pop
popa
fcmovnbe
push
sti
adcl
sub
or
push
rcrb
jne
jl
test
inc
pop
and
sbb
out
and
or
jae
xor
or
stos
mov
sbb
inc
push
xchg
sbb
xchg
xor
cmp
sbb
sbb
mov
push
stc
dec
cmp
shrl
pop
out
pushf
sub
ss
shrb
sbb
aam
jmp
dec
mov
inc
xor
sarb
jecxz
movsl
mov
cmpsb
push
roll
int
divl
push
mov
adc
shlb
jae
mov
outsb
cmpl
out
add
fmull
jp
into
sbb
insl
pushl
inc
push
sti
sbb
pop
movsl
into
cmp
addr16
scas
sub
insb
push
mov
or
jle
adc
loop
push
jmp
or
add
xchg
mov
pushf
popf
or
out
aas
sub
jnp,pn
xor
sbb
sqrtps
imul
xor
aas
pop
or
mov
cwtl
ds
scas
dec
in
jmp
xchg
adc
sahf
adc
dec
rcl
aas
enter
fs
in
sub
xor
add
in
jmp
sahf
fdivs
ficompl
jmp
mov
sub
and
daa
mov
and
and
arpl
mov
js
fnstsw
inc
push
jge
rcl
inc
mov
cltd
push
loop
test
xchg
or
cli
pop
sbb
or
inc
popa
pop
repz
stc
pop
imul
cmp
aas
mov
jle
mov
cmp
xor
sarl
lods
mov
out
mov
pop
dec
or
xchg
xor
rep
lahf
hlt
add
jle
inc
popf
jg
push
fdivl
ret
rcll
inc
int
mov
dec
mov
sahf
sub
cli
push
aad
add
jae
ds
mov
icebp
mov
les
adc
lret
adc
sub
inc
out
loop
push
fsubrs
lret
fucom
add
xor
and
mov
hlt
jnp
rcr
lock
jb
mov
in
xorb
mov
pop
les
xor
sbb
nop
mov
out
dec
push
rcrb
setbe
xchg
dec
fists
push
add
fisubrl
mov
lret
in
xchg
pushl
and
outsl
test
add
xchg
adc
fsts
lods
cmp
sarl
mov
lret
mov
mov
movsl
cmp
out
in
loope
es
fwait
stos
test
xor
pusha
scas
or
aaa
scas
sub
andl
repnz
adcb
mov
das
dec
or
lods
mov
shl
xchg
sbb
enter
mov
and
mov
sbb
daa
adc
inc
sbb
sbb
ja
cli
rolb
push
addr16
sbb
ret
xchg
pop
orl
je
bts
sbb
cwtl
sub
pop
jno
fwait
push
mov
mov
fimuls
loop
push
inc
shll
mov
scas
test
jp
je
sbb
sbb
iret
sub
cmpsl
mov
push
xlat
or
jns
lods
push
pop
jb
in
data16
lock
fcoml
lods
imul
jecxz
das
les
lods
cwtl
outsb
dec
jmp
in
ret
call
sbb
test
push
daa
push
in
aad
mov
mov
cmp
movsl
jmp
push
std
jne
sub
pushw
hlt
mov
jl
mov
pop
lds
push
push
mov
pop
add
xor
jnp
in
jecxz
aam
lock
add
rcr
mov
pushf
add
dec
fwait
iret
inc
lcall
xorb
movsb
ret
cltd
sub
pop
inc
imul
loope
mov
loop
sarb
or
jnp
cmpsl
mov
xor
dec
mov
pop
mov
jp
in
in
jle
ljmp
orl
lock
add
mov
cmp
mov
nop
fwait
ja
fistl
lahf
ficomps
mov
test
add
shll
cmpsb
and
mov
popa
cmp
shr
das
fs
imulb
cmp
cmp
lds
loop
cmpsb
cmc
stos
test
es
addr16
popa
loop
mov
pusha
cli
sbb
in
jb
mov
cmp
xchg
add
nop
lret
pop
push
in
add
and
add
sub
pop
push
cs
add
loope
sbb
xchg
aad
push
jl
icebp
std
call
inc
stos
xchg
jbe
call
rorb
push
lods
repz
bound
in
out
mov
lock
fmuls
mov
scas
inc
inc
mov
and
sub
inc
mov
lds
mov
loopne
cmpps
ja
in
lahf
outsl
pop
sarb
pop
push
sub
and
push
cli
faddp
test
ja
in
ds
in
nop
popa
inc
outsl
pushf
mov
negl
mov
mov
xor
push
out
cld
inc
mov
or
fmulp
mov
fcoms
mov
addr16
push
and
jmp
jo
jg
cmp
sbb
xchg
pop
cmp
sub
sub
leave
sub
cwtl
adc
jb
dec
sbb
clc
and
xor
adc
mov
and
sbb
test
je
xchg
xchg
pop
popf
mov
mov
mov
push
incb
mov
addr16
ja
inc
jno
mov
xor
add
push
push
or
lock
cld
sti
test
cld
jb
and
xor
inc
mov
xchg
test
aaa
inc
int3
jae
adc
push
jp
xor
pusha
movsl
dec
call
mov
out
ror
mov
mov
jbe
hlt
outsl
dec
or
jg
hlt
add
add
jno
data16
xor
push
jge
mov
stos
repz
jge
xchg
xorb
adc
push
loope
ret
outsl
push
pop
jmp
dec
dec
adc
push
loope
jl
dec
push
push
and
xor
pop
cmp
inc
shrb
sub
nop
lods
mov
adc
sahf
or
das
sub
dec
jl
xlat
rcll
sbb
fidivrs
stc
inc
dec
cmp
imul
sub
sub
das
les
sub
mov
jp
in
push
sahf
roll
shlb
iret
test
inc
or
cmp
jae
cmp
or
mov
ror
in
aaa
xor
lret
aam
shlb
shl
push
mov
movntq
jne
sbb
cmp
movsl
cwtl
arpl
mov
aaa
ss
jne
cmp
dec
or
test
test
cs
add
bswap
pop
movsb
adc
call
sbb
shrl
push
mov
cmpsb
lods
int3
xchg
dec
imul
leave
clc
sub
dec
lret
mulps
cmp
fists
jns
xchg
mov
pop
xor
dec
fstps
nop
ret
xchg
cli
scas
stos
adc
mov
enter
mov
call
dec
lds
aaa
jns
das
dec
fstpt
push
test
jo
pop
aam
fs
jb
or
call
imul
push
ja
mov
jo
mov
imul
and
add
push
pop
sbb
shlb
adc
jne
xchg
adc
jg
xor
or
xchg
jp
pop
push
add
dec
dec
add
xchg
and
and
xor
fmul
sub
sbb
add
fcoms
sbb
adc
or
test
sbb
mov
adc
or
xor
adc
in
addl
xchg
out
jbe
pop
js
sub
pop
mov
sub
and
xor
mov
xchg
push
aas
xorl
stos
and
pop
jb
ret
dec
out
push
add
clc
adc
lea
add
mov
fcmovnu
arpl
mov
scas
scas
nop
mov
mov
sbb
pop
push
in
jb
lcall
pop
sarl
inc
aas
imul
inc
cmp
cmp
popa
add
sub
sbb
push
cmp
jns
aaa
pop
and
inc
dec
sbb
pop
cmp
pop
and
sbb
arpl
mov
clc
bound
aad
dec
dec
dec
inc
outsl
rolb
call
sub
int
sbb
or
iret
test
inc
std
sahf
cmp
sub
pop
inc
test
lea
cld
call
pop
push
xchg
mov
xor
in
je
ds
mov
shrb
adc
mov
pop
pusha
repz
fildll
and
pop
adc
outsb
pop
push
jo
stc
adcb
inc
lret
mov
mov
cli
out
scas
fwait
adc
testb
jle
in
inc
fcom
movb
jns
mov
mov
xor
clc
clc
pusha
pop
or
shll
mov
rcl
lcall
inc
popf
pop
lock
sbb
push
jo
movsb
and
jg
stos
lods
test
mov
outsb
mov
push
repnz
ja
push
or
test
lahf
xor
dec
xorps
jge
jp
push
stc
rorb
lea
jecxz
fisubs
xchg
movsb
imul
xchg
decl
dec
gs
scas
pop
test
stos
inc
outsb
fildll
mov
sub
adc
or
inc
mov
cli
fmul
jno
inc
cmp
add
adc
mov
sub
gs
ret
mov
ret
insl
push
test
ja
clc
push
mov
fsubp
mov
mov
pop
mov
sbb
pop
flds
push
adc
inc
push
cwtl
test
gs
cmc
test
iret
sbb
test
test
lahf
loope,pt
pop
sub
sub
ficompl
xchg
push
or
sub
sub
loope
mov
shrb
dec
push
mov
js
popa
repz
out
mulb
add
pop
jb
pop
sub
lds
or
push
fsts
xorl
add
xchg
je,pn
dec
mov
pusha
or
sub
imul
mov
cmp
in
inc
addr16
ljmp
fdivl
mov
ret
jo
roll
mov
xor
dec
loope
popa
ljmp
sub
push
in
xchg
dec
mov
ljmp
arpl
dec
pop
mov
xchg
add
sbb
jnp
and
stos
cli
data16
jno
aad
jecxz
aaa
cmp
incl
popf
cmp
leave
pop
push
pop
out
mov
mov
fistpl
inc
loopne
mov
lods
xchg
adc
adc
sbb
cmp
cltd
xchg
aaa
mov
pop
outsb
inc
inc
pop
xor
and
inc
dec
cmp
xlat
pop
sbb
xchg
testb
sub
jle
test
daa
sbb
adc
fidivrl
out
pop
js
incl
mov
jbe
xchg
adc
movsb
outsb
loop
test
out
add
push
inc
jb
cmpsb
or
movsb
icebp
mov
dec
dec
iret
mov
cmc
es
cld
test
fdiv
mov
dec
inc
outsl
clc
or
bswap
mov
pop
fadd
lahf
leave
mov
repnz
dec
jne
or
add
pusha
dec
hlt
fld
jecxz
add
sbb
pop
mov
adc
add
lcall
out
xor
incl
repnz
push
sbb
sub
aas
sarb
lods
in
daa
sbb
pop
sbb
in
adc
push
scas
adc
mov
andb
pop
test
jo
dec
je
add
or
cmp
lock
insb
rolb
dec
lret
test
fucomp
push
xchg
clc
jae
and
js
repnz
shr
jl
test
add
pop
or
push
fisubrl
dec
pop
or
arpl
in
or
mov
jl
out
jbe
outsl
cs
xchg
jl
mov
mov
jge
push
push
popf
cld
push
inc
xchg
lahf
testl
jle
sbb
mov
pop
or
sbb
xor
mov
jp
xor
cmp
fcoml
insl
push
sbb
mov
cmp
dec
push
aad
shrl
mov
sbb
cmpsl
cmp
je
ljmp
pop
jle
pop
mov
aam
xor
outsb
loope
sub
std
lods
int3
pcmpeqw
repnz
xor
push
clc
push
push
aas
jo
push
lea
xor
mov
adcl
jg
lds
pop
bound
pop
in
outsl
sub
jl
inc
in
push
lods
aad
hlt
jb
cli
pop
ret
fstpl
mov
or
int3
add
cmp
lcall
and
sbb
mov
sahf
mov
movsl
xor
push
rorl
push
adc
rclb
fcmovnb
dec
mov
jecxz
jo
movsl
inc
push
data16
insb
lea
ficoml
xchg
in
xchg
push
sub
imul
pop
bound
pop
push
mov
ret
arpl
pop
xor
decl
sub
fisubs
inc
addl
comiss
mov
mov
and
mov
out
mov
mov
push
daa
fs
rolb
push
stos
addr16
lahf
stos
or
sbb
lret
mov
sub
cmp
pop
call
pop
cli
push
fimull
clc
mov
pushf
clc
xorl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
push
push
pushl
call
mov
dec
mov
jmp
push
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
inc
xor
sub
mov
movl
push
xorl
add
jmp
mov
notl
mov
notl
inc
cmp
movl
jb
adc
mov
xor
add
jmp
andl
mov
and
mov
adcl
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xorl
mov
add
sbbl
movzwl
xorl
mov
negl
mov
orl
movzwl
xorl
xor
add
mov
mov
inc
mov
cmp
movl
jne
mov
movl
mov
decl
xor
add
andl
mov
dec
mov
xor
andl
add
movl
mov
not
movl
movl
movl
mov
mov
movl
mov
jmp
mov
add
mov
andl
xor
xor
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
movl
mov
lea
mov
mov
mov
lea
movzwl
sbb
mov
mov
andl
mov
add
mov
negl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
orl
mov
mov
add
mov
lea
add
mov
mov
orl
mov
lea
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
sbbl
lea
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jb
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
jmp
sarb
jae
dec
bound
sub
pop
jl
cmp
movsl
jmp
push
mov
xor
imul
cmc
adc
shlb
aam
lds
sub
adc
jns
int3
sbb
adcl
and
data16
fsubrl
xchg
loop
sub
mov
fdiv
testl
xor
js
test
mov
addr16
out
or
add
in
push
into
cmpsl
pop
roll
mov
mov
loopne
mov
clc
mov
jg
mov
stos
push
fnsave
adc
jne
add
adc
push
mov
sub
xchg
sub
lret
push
lods
orb
xchg
mov
pop
xor
dec
jl
and
stc
aas
jnp
mov
inc
lahf
fnsave
or
out
jg
sbb
inc
mov
std
mov
outsb
imul
mov
push
xlat
enter
clc
dec
fwait
or
pop
test
cmpsl
mov
repz
jmp
in
cmpsl
gs
fdivrl
dec
ss
fistl
mov
and
jp
ljmp
pop
push
out
popf
mov
mov
js
jl
or
jle
int3
add
fsubr
inc
pop
out
ret
jns
push
mov
test
fstpt
in
dec
xchg
lods
ds
jge
mov
sbb
inc
lods
les
mov
faddl
cmpsl
mov
ja
and
inc
call
sbb
insb
and
pusha
pop
mov
cmp
fistpl
clc
add
in
xchg
sbb
mov
idiv
int
inc
fistl
and
les
repnz
xchg
jno,pt
pop
popa
jno
popa
fnstenv
dec
dec
add
sbb
inc
sbb
sbb
daa
icebp
lods
cli
xchg
pushl
jo
pop
dec
jg
iret
ret
add
popf
and
xor
sbb
adc
sbb
nop
mov
jg
rorl
imul
xchg
sub
ret
dec
mov
adc
and
adc
mov
dec
pusha
cmp
mov
pop
jnp
jo
push
ljmp
push
cmp
leave
insl
jo
mov
xchg
scas
loope
xor
and
cld
insl
jmp
je
ror
insl
jp
mov
cs
call
in
pop
mov
shlb
inc
stc
lods
jl
dec
cmpsb
push
ret
sbb
ss
test
sbb
pop
or
ds
mov
jne
mov
adc
rol
pop
repz
adc
push
sub
sahf
decb
lds
lods
sbb
mov
inc
mov
pop
xor
sub
movsb
jne
movsb
or
cltd
xor
add
loopne
pop
lret
pushf
ss
or
sub
jl
fdivl
sarb
dec
cmp
sbb
adc
push
repnz
or
les
jge
dec
push
dec
push
mov
leave
fldenv
mov
sbb
mov
sbb
cmp
cmp
mov
or
dec
mov
fnstcw
int3
xor
adc
ret
int
mov
or
shrb
jmp
cmp
mov
bnd
popa
repz
insb
cmc
jno
psubsw
push
rcr
dec
cmp
add
cmp
decl
push
int
mov
ss
jle
fmuls
inc
ret
mov
mov
cwtl
in
pop
add
aas
fcomip
sub
lcall
mov
shlb
fiadds
mov
jns
mov
jb
rolb
jge
in
imul
cltd
filds
sbb
mov
and
mov
imul
ja
push
push
pop
out
sti
jnp
ja
clc
hlt
sbb
inc
mov
dec
movsl
inc
rclb
and
mov
pop
push
ja
pop
int
js
clc
imul
inc
stc
mov
xchg
xor
sbb
jo
out
pop
push
loopne
insl
bound
mov
lds
mov
push
push
xchg
je
loop
mov
fldln2
cmp
cmc
mov
push
push
jl
insl
mov
jae
adc
dec
rcll
movsb
aad
and
flds
iret
sbb
mov
movsl
cmpsl
xchg
hlt
cmp
push
out
stos
mov
scas
jns
iret
sbb
ficompl
enter
je
jae
out
push
int3
push
xchg
rcll
jg
adc
dec
pop
std
das
or
mov
xchg
jg
ja
jb
jg
push
cmp
mov
scas
xor
sub
pop
jg
cmp
cmp
out
int3
push
jne
sbb
inc
mov
js
add
shlb
mov
loope
or
ljmp
aaa
dec
insb
mov
loop
inc
scas
jecxz
pop
mov
out
cmp
out
or
fisubl
and
fldt
je
in
dec
sarb
xchg
jbe
ja
flds
lcall
mov
or
cmpsb
pop
pushf
js
ja
jne
fldt
out
mov
and
mov
or
stos
subb
in
ss
and
mov
sub
cli
xchg
jle
clc
aaa
test
fs
mov
aas
sbb
sub
push
adc
jne
xor
pop
xchg
mov
rcr
test
inc
or
ret
jle
mov
pop
cmp
and
pop
jo
pop
mov
sbb
sbb
mov
movsl
cmc
mov
jns
cmc
into
mov
jb
stos
or
cltd
push
push
mov
push
push
clc
xchg
mov
pop
sub
in
sbb
into
jbe
sbb
sbb
int
xor
mov
repnz
fidivrs
or
ljmp
je
dec
rclb
xor
jp
adc
sub
int
pop
or
call
adc
adc
cmp
pop
inc
mov
or
mov
add
sbb
or
js
push
test
pop
std
icebp
jl
bound
push
sbbb
dec
addr16
cmpsl
mov
ret
mov
mov
sub
das
aad
jp
outsb
mov
dec
pop
jmp
sub
pop
subb
dec
dec
fwait
add
push
push
incl
sarl
mov
mov
push
int3
outsl
jo
inc
and
bound
mov
dec
movsb
rcr
arpl
fstp
add
pusha
push
into
imul
movsl
jo
out
mov
dec
fadds
les
cmp
cmp
leave
mov
shll
lds
push
ds
adc
xor
sarb
movsb
pcmpeqd
adc
xchg
pop
dec
fs
test
mov
enter
mov
rolb
faddl
dec
xlat
push
pop
inc
push
cmp
inc
cmc
in
pop
adc
push
pop
sub
shl
mov
adc
repz
jge
sbb
sbb
cmp
stc
push
in
jl
xor
scas
mov
arpl
and
lods
out
pop
scas
xchg
adc
xlat
inc
and
cmp
int
push
cmp
enter
std
mov
hlt
sub
imul
dec
cmp
adc
xchg
or
xchg
lret
popa
das
inc
add
cmp
les
dec
pop
mov
and
outsl
or
xchg
insb
dec
pop
mov
jge
arpl
sbb
pop
repnz
lea
add
pushf
mov
cld
jne
pop
xchg
cmpsb
clc
dec
flds
test
lret
jecxz
rorb
mov
xor
std
inc
or
lret
and
ja
cmp
mov
adc
lahf
mov
push
stc
testb
js
add
xchg
pop
leave
outsb
jmp
sbbl
movsb
cmp
adc
xchg
xlat
sub
icebp
popf
pop
pop
ljmp
cmp
test
fsubs
call
sub
and
test
inc
mov
push
js
gs
test
pusha
and
mov
sbb
or
loope
fidivrl
mov
mov
ja
aaa
xchg
loop
inc
jmp
js
xor
push
cmp
mov
cmp
lods
adc
das
les
into
cmpsl
jnp
pop
cmc
mov
and
dec
ret
leave
test
jnp
jmp
icebp
inc
add
addr16
ss
nop
mov
dec
add
lea
int
adc
jbe
xor
mov
add
ret
in
dec
lret
mov
cltd
sbb
into
mov
inc
repz
addr16
xor
dec
aas
add
sbb
pop
push
jmp
ds
xchg
and
push
aaa
pop
or
and
mov
adc
push
push
ja
test
xchg
or
out
and
popa
mov
xor
mov
test
cld
pop
push
xchg
push
inc
dec
es
xchg
scas
adc
lods
ja
inc
out
xchg
mov
sub
adc
xor
xchg
add
push
cmp
pop
fwait
loope
dec
adc
jno
out
dec
xchg
rcl
cmp
add
xchg
movsb
popa
pop
and
xchg
out
fwait
and
outsb
insb
shr
das
pop
icebp
nop
int
fwait
ja
cwtl
data16
movswl
xor
scas
lods
addb
mov
pushf
mov
ret
cld
sbb
jae
gs
push
inc
lahf
mov
aam
cmp
dec
clc
or
sub
and
or
bswap
inc
movsb
pop
mov
out
fcomps
xchg
jle
xchg
jecxz
mov
push
add
test
movsb
dec
or
lods
inc
adc
test
inc
lock
inc
mov
imul
jne
sub
lods
sub
xchg
add
repnz
aam
outsb
xchg
push
frndint
rep
push
clc
mov
sub
icebp
popa
push
inc
pop
mov
scas
mov
mov
cmp
sub
pop
ffree
mov
push
xor
jmp
enter
adc
addl
aaa
insl
cwtl
xor
push
pop
push
dec
mov
push
cltd
outsl
xor
fstps
sahf
jnp
mov
cmp
rclb
aad
push
pop
push
outsb
mov
int3
or
jbe
inc
pop
rcll
ss
xchg
rolb
fsub
fs
xor
jno
dec
mov
mov
les
outsl
insl
les
in
test
and
jp
sbb
pop
sub
stos
icebp
xchg
addb
into
dec
in
popa
bound
decb
and
js
aaa
cmp
push
jo
xchg
mov
and
and
scas
arpl
xchg
imul
in
data16
shrl
and
push
mov
scas
add
mov
fs
in
mov
sub
cltd
xor
lret
es
mov
leave
daa
pop
test
ret
xor
sbb
mov
cmp
fwait
popa
jbe
mov
xor
insl
xor
rorb
mov
icebp
test
cmp
jecxz
lods
inc
mov
sbb
out
movsl
inc
fisttps
add
int
push
popl
icebp
sar
in
ss
mov
xchg
adc
dec
aam
mov
pop
mov
ljmp
adc
sbb
jb
dec
jae
inc
fldl
scas
daa
or
out
imul
addr16
loopne
sub
jl
and
pop
sbb
mov
sbb
lods
cmp
sbb
adc
inc
aas
arpl
push
mov
pusha
mov
dec
pop
mov
ljmp
aaa
out
sub
fisttpll
rorb
pop
dec
sbbb
jb
sbb
ds
hlt
test
mov
push
xchg
dec
mov
loop
sbb
test
cmpsb
xchg
enter
sarl
ss
inc
adc
imul
mov
rcr
mov
dec
hlt
push
xchg
xor
les
fdivrl
mov
fsubrs
ljmp
fnsave
shlb
push
lret
cld
sbb
rcr
getsec
nop
clc
outsb
adc
scas
outsb
push
sub
mov
out
ficomps
ficomps
mov
mov
aas
sub
jne
imul
nop
jnp
and
hlt
add
dec
jns
test
mov
mov
arpl
or
test
and
mov
hlt
and
add
cmp
and
xor
shlb
xchg
in
mov
xchg
cld
sub
icebp
mov
imul
pop
adc
les
insb
ljmp
in
xchg
addl
inc
and
loopne
rorl
adc
sbbb
iret
inc
cmpsb
xor
iret
jecxz
pop
clc
stos
roll
addr16
testl
and
cli
push
cmp
cmpb
out
xchg
into
push
jns
cmp
xchg
push
mov
sub
push
repnz
pop
mov
jmp
loop
pop
jne
rol
sub
dec
pushf
mov
sti
add
sub
mov
pop
adc
mov
sbb
jp
xor
mov
mov
insl
jne
movsb
in
pop
xor
rcrl
dec
jmp
daa
movsl
scas
dec
in
and
call
mov
mov
adcl
jp
ja
sub
add
mov
xchg
lret
mov
sbb
jmp
push
push
sub
xchg
gs
pop
or
push
enter
pop
and
push
mov
push
and
mov
addr16
test
loope
js
fwait
or
arpl
out
jbe
test
pop
sbb
adc
shll
int3
outsl
mov
imul
enter
repnz
or
cmp
push
cmp
mov
js
int3
mov
or
fnsave
and
and
adc
and
mov
dec
cltd
add
clc
daa
pop
mov
jb
adc
int
cltd
dec
aas
jae
and
push
mov
jne
push
in
add
cmp
pop
cld
fbstp
addb
push
fst
sar
pop
test
fisubs
push
jae
or
popf
shl
xor
scas
ror
pop
sub
lret
inc
scas
sub
inc
data16
lock
jae
sar
lcall
ja
xor
stc
dec
test
je
mov
push
adc
push
add
out
inc
push
or
loope
lea
stos
fimuls
xchg
and
xchg
ficoms
mov
cmp
jle
pop
aaa
lret
xlat
ds
xchg
jb
add
mov
cs
lahf
jnp
cmp
fldcw
sub
mov
shll
jns
cmp
mov
mov
xchg
push
pop
jnp
ret
nop
mov
add
int3
pop
in
imul
mov
test
lock
sbb
int
in
dec
outsb
divl
xor
shrb
jo
rorb
outsb
sub
jmp
mov
sarl
xorl
mov
ss
repnz
lahf
push
stos
ret
cmpsb
ret
xchg
fisubs
popf
in
jb
dec
stos
xor
fcoml
shlb
decl
push
dec
ret
ret
call
out
xor
testl
movsl
xchg
addr16
jle
sbb
push
sbb
push
cmpsb
popa
aaa
test
push
xchg
lret
cld
pop
lods
imul
or
popaw
mov
jbe
addr16
jmp
js
push
insl
xchg
add
test
pop
pop
lahf
sbb
jle
xchg
nop
divps
lock
in
outsb
out
sbb
lods
or
leave
dec
pop
and
mull
cs
or
test
mov
xor
sub
dec
xchg
pop
add
es
scas
mov
fsub
mov
mov
dec
mov
or
fs
mov
out
sbb
push
mov
sbb
into
lods
cmp
pusha
inc
mov
mov
or
rorb
test
push
loope
add
jbe
js
mov
ja
inc
dec
mov
mov
sub
mov
xchg
push
insl
popa
pop
sbb
push
in
jbe
repnz
aas
or
cmp
dec
cmpsb
imul
dec
jl
push
dec
xchg
dec
ret
aaa
test
add
inc
int3
ljmp
jmp
add
js
xorl
dec
je
jecxz
mov
adc
pop
mov
and
scas
stc
jns
shll
sub
cmp
clc
mov
mov
cmc
cmpsb
mov
les
pop
out
cmp
and
test
jne
dec
fs
or
int3
popa
mov
lds
sbb
fwait
les
mov
insb
fsts
pcmpgtw
mov
in
mov
mov
sbb
sub
stos
push
xchg
adc
ficoms
enter
or
sbb
dec
mov
mov
pushf
and
lods
cmpsb
cmc
sbb
adcb
sbb
test
sahf
frstor
mov
loop
out
je
mov
push
sub
cmp
push
repnz
dec
pop
mov
inc
clc
out
or
daa
movsl
inc
pop
mov
cld
clc
addb
adc
mov
stos
and
shr
subl
mov
xchg
outsb
jnp
or
or
dec
and
cmpb
cmp
push
xchg
cmp
inc
ss
mov
cmp
add
iret
cmp
inc
ret
sbb
xchg
outsb
ret
fs
divl
insb
add
stc
inc
jbe
clc
mov
sbb
dec
mov
cmp
and
and
insb
sub
sbb
insl
mov
cmpsb
aam
pop
or
ret
inc
cwtl
mov
pop
stos
sub
sub
sbb
scas
inc
nop
rcrl
mov
jno
out
in
mov
xor
mov
je
mov
pop
imul
dec
loopne
movsb
inc
cmp
fcomps
dec
pop
lds
ja
jle
pop
cmp
mov
push
adc
cmp
fsubrl
cmp
subb
addr16
push
jae
mov
xchg
adc
dec
mov
out
mov
clc
movsb
pushf
loope
cmp
add
inc
push
roll
push
sbb
jg
cmp
lret
mov
dec
sbb
add
mov
gs
adc
xor
push
push
dec
je
shrl
jns
les
es
arpl
js
inc
test
clc
sti
pop
sti
xchg
test
push
repnz
popa
pushf
add
inc
xchg
aam
lahf
mov
scas
mov
pop
push
pusha
data16
jmp
mov
or
pop
cvtpi2ps
jmp
mov
jle
dec
mov
inc
push
cld
jl
stc
outsb
push
ret
jne
or
lock
jl
icebp
gs
scas
cs
addr16
or
fdivrl
das
mov
mov
aaa
pop
add
ss
sub
cwtl
stc
mov
jb
out
mov
and
imulb
lods
imul
mov
divb
mov
fs
cmp
add
sub
and
insl
in
xor
leave
and
mov
enter
imul
xchg
out
aad
jae
jae
pop
mov
negb
lds
hlt
pop
cmc
add
push
outsb
xchg
cmpsb
loopne
ds
dec
dec
aam
lret
cmp
mov
mov
leave
iret
frstor
popf
mov
sub
sub
shr
xor
sub
cmpsb
pop
shlb
std
jecxz
aas
cltd
es
popf
jle
xchg
rcrl
std
jge
in
xchg
aad
xor
neg
dec
add
out
add
mov
ja
dec
or
rcll
test
sti
inc
pusha
das
fisubrl
adcb
or
clc
test
mov
shl
scas
pop
cwtl
push
sbb
jns
and
repnz
dec
out
jbe
rcr
cmp
cmp
pop
xchg
out
dec
pop
outsb
mov
cmp
lods
es
xchg
loopne
lret
sbb
jmp
xchg
outsl
gs
decb
push
call
ja
repnz
fucomip
popf
in
shrl
push
cmc
cmpsl
ficomps
mov
xor
cmp
jmp
out
mov
fsub
movl
into
loop
rorl
pop
inc
imul
pop
jl
mov
xlat
js
sub
lods
xchg
and
mull
pop
int3
jns
jmp
pop
pop
xchg
aas
sub
into
push
lret
fwait
jbe
add
es
testl
leave
es
xor
xchg
pop
aaa
sahf
mov
or
pop
les
lock
lds
mov
inc
jmp
std
inc
jo
shll
ds
adc
and
or
shlb
les
mov
jae
sti
jb
scas
lret
inc
movsl
add
mov
pop
dec
xchg
dec
bound
mov
shlb
sub
data16
test
aad
fs
pop
test
lods
cmp
outsl
in
or
arpl
push
adc
test
fidivrs
leave
pop
inc
cmp
je
push
lea
ja
cmc
imul
add
ror
andb
jns
push
out
dec
push
jb
jne
pop
sub
mov
mov
scas
ficompl
stc
stos
andb
div
push
rclb
in
xchg
mov
call
ljmp
rorb
out
push
popaw
inc
push
jae
shrb
or
sahf
xchg
or
addb
sbb
xchg
cli
jge
idiv
push
shrl
enter
ljmp
mov
imul
mov
fmulp
imul
repz
in
daa
addb
es
xor
inc
inc
daa
out
cmp
mov
pop
fwait
je
fsubl
test
leave
add
je
push
or
fldt
cmp
cmp
cmp
pop
shlb
in
xchg
push
mov
ret
mov
xchg
das
mov
in
inc
jl
cmp
popa
imul
lock
int
sbb
push
mov
jle
inc
add
sbb
inc
enter
xor
adc
andb
test
fistpll
lock
mov
je
mov
mov
out
sub
xchg
call
push
loop
cmp
ficomps
xor
into
xor
cmp
addb
fildll
push
xlat
cld
nop
cmp
mov
add
dec
out
fcompl
je
mov
push
add
cwtl
xor
stos
fldenv
cmpsb
fcomps
jne
aam
push
test
and
cld
lock
ss
push
cs
pop
mov
sbb
pop
adc
movsl
add
ffree
cli
cmp
mov
jmp
xchg
jecxz
lds
test
jl
scas
adc
cmp
lret
mov
lcall
sbb
fs
in
cmp
daa
enter
sbb
sub
pop
fwait
mov
dec
loopne
dec
rorb
jne
stos
or
sbb
ds
ljmp
add
mov
mov
mov
adc
rcrb
outsb
inc
mov
data16
mov
xchg
mov
sub
addr16
jne
push
xor
push
and
into
aaa
out
jmp
and
pop
or
cld
inc
xchg
cli
addr16
cltd
cmp
push
pop
pop
pop
ret
or
xchg
and
jg
les
cmpsb
inc
push
mov
dec
dec
mov
in
shl
dec
add
adc
xchg
js
std
cmp
sub
sub
in
pop
xlat
insb
mov
sarl
fdivr
xor
sbb
pop
scas
add
popa
imull
push
mov
loopne
sti
imul
add
sbb
sub
inc
pop
add
les
sbb
sbb
daa
mov
push
lods
jb
mov
mov
ljmp
lods
ds
mov
dec
lods
pop
lahf
ret
sub
inc
inc
xor
lret
push
sbb
cmpsb
and
int3
aad
or
imul
mov
cmp
adc
cmp
rclb
lods
mov
push
and
push
movsl
cmp
incb
bound
mov
out
jg
mov
push
mov
sbb
push
aad
cmp
push
pop
dec
cld
cwtl
xor
and
dec
sub
sahf
aad
outsl
jecxz
call
ja
dec
push
xchg
dec
pop
popf
aam
aas
xchg
and
mov
push
int3
cwtl
aas
cmp
lods
enter
push
xor
jne
push
sahf
cli
dec
mov
loopne
sub
int3
insb
out
enter
add
out
insl
fisttpll
jl
cmpsl
xor
xor
nop
dec
out
sub
mov
fs
add
fcomi
popf
sub
shrl
repnz
add
out
scas
imul
mov
cld
dec
shlb
mov
imul
call
out
je
cmp
aam
push
js
pop
mov
lret
or
xlat
sbb
adc
subb
add
popa
call
test
ret
cmpsb
mov
sbb
pop
jnp
fisttps
xor
mov
scas
cwtl
xlat
inc
in
rorb
popf
pop
into
lret
cltd
dec
rclb
xchg
jge
xor
fisttps
dec
push
pop
test
inc
stc
iret
cli
cmc
push
fcomip
cwtl
pusha
mov
out
adc
fs
and
ror
nop
mov
test
add
dec
jae
inc
or
lock
mov
mov
roll
inc
mov
cwtl
hlt
adc
decb
push
outsl
test
ljmp
stos
pmulhuw
push
mov
mov
and
push
push
out
imul
enter
add
mov
xlat
fcoms
push
jecxz
xlat
out
mov
in
in
mov
cmp
or
cmp
loope
loope
jp
xor
pop
push
cmp
inc
fdivl
icebp
jne
aas
test
jno
in
fldt
in
cmp
adc
jl
adc
lock
mov
and
pop
lods
and
cmpsb
ret
sbb
rcr
pop
xor
dec
call
aaa
adc
ja
add
xchg
xchg
sti
dec
sbb
loopne
add
push
cwtl
rcll
sbb
out
mov
cwtl
sti
fsts
dec
scas
int3
mov
cltd
sarb
les
outsb
cmp
jb
xor
mov
pop
pop
nop
or
into
stos
fstl
lcall
inc
xor
fsubp
outsb
cmpsb
leave
loopne
mov
mov
int3
out
outsb
dec
sub
je
jns
inc
xchg
cmpsl
adcl
cmp
icebp
fsubrl
xchg
and
dec
ss
mov
out
push
std
negl
jnp
mov
xor
icebp
repnz
repz
mov
ljmp
dec
sbb
jl
xor
jp
inc
xchg
loop
xchg
addr16
dec
inc
scas
stos
jns,pt
in
xchg
xchg
fisubs
and
jecxz
pop
in
sbb
pusha
mov
mov
les
mov
lret
cmpsl
xor
test
fdivl
and
mov
shll
fimuls
push
mov
xor
pushf
dec
pop
in
mov
lahf
dec
jb
cli
testb
jae
mov
andl
mov
jae
sbb
jp
mov
jns
pusha
pushf
repnz
jno
mov
push
repz
push
fs
pop
sub
mov
fildll
dec
clc
mov
cli
in
pop
ljmpw
ret
jmp
fs
icebp
add
xlat
push
mov
outsl
mov
daa
xor
mov
daa
push
sub
xor
mov
ror
insl
loop
shrb
mov
lods
movsl
in
lds
sbb
movsl
push
pop
mov
add
mov
push
sbb
or
divb
std
xchg
stos
xor
sub
mov
pop
int
adc
sar
and
sbb
imul
push
adc
mov
ss
repnz
stos
and
data16
clc
mov
out
inc
sbbb
cmp
cmp
int3
add
fstps
push
mov
roll
cmp
aad
mov
pusha
add
ljmp
dec
clc
push
xchg
add
packsswb
mov
jle
dec
scas
mov
xchg
sub
outsl
dec
test
inc
sbb
popf
mov
les
movsb
roll
mov
or
fisttpll
push
dec
mov
jns
in
or
adcb
andb
mov
xchg
push
aas
inc
int
data16
sarl
in
movsl
and
add
or
pop
inc
je
cmp
rcrb
or
bound
icebp
lcall
mov
pop
pushf
popf
or
adcb
orl
ror
or
adc
push
pop
popf
mov
ja
pop
mov
add
ss
push
out
fwait
insb
cmpsb
xchg
mov
pop
sti
movsl
lret
imul
vsqrtpd
cmpsb
icebp
jnp
orb
adc
imul
pop
ljmp
in
push
xor
aam
idivb
mov
dec
into
sub
addr16
inc
xchg
push
outsl
shlb
jecxz
pop
sub
add
jnp
ljmp
lret
loope
jmp
lock
fmull
xor
xor
xchg
jp
pop
aas
and
dec
mov
and
jb
sbb
or
aaa
cmp
inc
and
aaa
push
jo
ja
stos
iret
insb
sbb
je
xchg
jb
pop
inc
sbb
push
sbb
dec
inc
cmpl
fsubrl
mov
jl
pop
xchg
dec
jnp
daa
push
xor
es
inc
inc
push
std
out
insl
pusha
cs
aaa
sbb
mov
sbb
add
bound
cs
rcll
sub
fwait
xlat
and
mov
mov
push
or
stos
or
push
mov
mov
rcr
jbe
jbe
sbb
xchg
xchg
and
or
add
lods
pop
sti
cltd
xor
inc
lock
insb
rolb
cmp
add
fdivs
or
ljmp
scas
fdivl
or
push
and
ret
dec
mov
mov
lret
jge
sub
arpl
loop
scas
dec
fdivr
lods
cmpsb
push
andl
test
mov
jno
or
ja
sbb
xor
stos
rcrl
push
mov
cwtl
add
nop
or
out
push
push
xor
jbe
adc
pop
fcmovnu
imul
jmp
add
pusha
cwtl
or
sbb
xchg
or
cwtl
mov
or
adc
xchg
insl
cmp
xor
aas
dec
adc
ficoms
cmpsl
sub
cmc
xor
cmpsb
sub
sbb
imul
jg
int3
sub
mov
mov
inc
or
ss
imul
sub
pop
dec
mov
xchg
and
add
or
lock
out
pop
cmp
jb,pt
imul
mov
push
xorb
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
jmp
mov
cmp
mov
pop
int
jl
pop
jl
out
or
push
orl
dec
dec
add
fucomip
adc
mov
inc
xchg
test
cmp
subl
ret
jbe
sbbb
xor
mov
sub
lahf
mov
fstpl
or
dec
hlt
xchg
call
or
cmp
push
jecxz
xor
push
add
push
adc
test
dec
shlb
leave
mov
fstpl
mov
ret
xor
pop
adcb
ja
movsb
push
clc
mov
mov
pop
lahf
push
rolb
inc
icebp
mov
orl
inc
xchg
xchg
mov
shrb
bound
pop
lods
push
push
gs
ljmp
pusha
sub
sbb
mov
in
sahf
in
ds
test
cli
pop
out
push
or
shrb
add
les
cmp
test
and
mov
lahf
sub
cwtl
xor
xor
les
inc
fsubl
mov
sar
jmp
lret
loopne
mov
push
out
mov
pop
pushf
mov
hlt
sbb
cmp
clc
test
sbb
push
sbb
pop
fmull
stos
jmp
clc
inc
call
out
sub
inc
cltd
jmp
mov
push
push
in
mov
js,pt
inc
cmp
jb
and
outsl
out
or
fistl
inc
in
sahf
pusha
adc
add
in
mov
lods
dec
and
call
leave
loopne
in
out
aaa
js
aad
filds
loop
xor
ss
les
xchg
dec
addb
xchg
jl
pushf
push
sti
les
fwait
gs
mov
jo
or
sub
ljmp
push
add
push
cmp
fnstenv
idiv
and
add
mov
ja
fs
cli
cltd
jb
mov
mov
arpl
xchg
xchg
sti
add
out
xchg
inc
das
movsb
sbbb
and
out
clc
test
xchg
push
cmc
and
push
leave
je
push
nop
or
jl
ret
push
mov
mov
loopne
adc
xchg
lahf
fsub
movsb
sub
jmp
roll
xchg
cmp
xchg
loopne
push
daa
push
cmpl
in
adc
sub
inc
data16
sub
scas
iret
test
inc
addb
mov
out
jb
aas
scas
js
mov
movsb
cmp
call
int3
mov
addb
rorb
lret
arpl
lods
daa
sub
mov
ja
push
clc
pop
lcall
fcoml
out
loope
insl
je
jmp
in
lret
mov
add
mov
adcl
xor
mov
je
pop
rorl
ss
xchg
in
push
repz
or
cmp
mov
testb
xchg
int3
sub
jb
jo
cmp
adc
sbb
jl
jge
lcall
movsl
in
sbb
jbe
adc
out
mov
ficoml
std
sbb
cld
es
iret
jecxz
jo
aam
pop
inc
jo
les
jl
into
mov
imul
xor
js
gs
stos
jb
in
xor
lods
cli
sbb
mov
xor
sub
sbb
ret
cmp
loopne
add
fistpll
jl
out
mov
stc
psadbw
je
adc
sub
pop
orl
jl
push
jecxz
arpl
insb
xchg
fstpl
das
inc
cltd
ljmp
loope
mov
or
in
cs
pop
stos
mov
js
xor
arpl
sti
mov
jmp
cmova
aad
mov
mov
into
outsb
xor
mov
push
jns
shrl
hlt
xchg
mov
xlat
sbb
stc
add
mov
mov
rorl
das
jge
into
lahf
ljmpw
mov
call
add
sbb
jae
mov
idivl
push
add
pop
fimull
ljmp
subb
xchg
enter
rcrb
or
xor
add
out
loope
xchg
dec
cmpsb
add
loop
mov
dec
cmp
ss
enter
idivb
das
jnp
shl
mov
out
andb
aad
cmpsl
cs
rolb
sarl
mov
cld
fists
pop
dec
loop
add
mov
push
pusha
aaa
iret
mov
push
sub
nop
fisubrs
mov
pop
rcll
xchg
loop
mov
out
sbbb
adc
mul
enter
jl
fimull
cli
fnsave
xor
or
xchg
add
xchg
mov
adc
mov
lods
hlt
or
jg
js
pushf
pop
jo
pop
out
rcll
inc
xchg
movl
int3
jno
cmc
in
and
mov
jp
pop
and
mov
ja
jl
inc
cmc
jmp
mov
sahf
cmp
adcb
cmp
movsb
mov
popf
stos
xchg
sbb
inc
dec
mov
call
pop
push
jnp
scas
lea
cmp
movsb
ss
subb
out
stos
mov
fdivl
outsb
xchg
pop
sub
jle
cmp
iret
idivb
imul
arpl
dec
lahf
pop
push
lcall
add
inc
inc
adc
push
pusha
inc
daa
push
fstpl
sub
xor
sbb
int3
sub
fisubrl
hlt
sbb
push
mov
pop
cld
cmp
push
xchg
and
mov
push
mov
xor
jns
sub
je
daa
and
movsl
xchg
fdivr
cwtl
lea
ja
push
out
mov
mov
pushf
and
cmp
dec
adc
xchg
fimuls
outsb
ds
pop
xchg
xor
dec
cmpb
push
jb
daa
adc
mov
fistpll
loop
stos
dec
add
mov
push
rol
dec
in
add
sub
push
inc
je
jle
push
xchg
test
ss
mov
jmp
gs
jmp
out
adc
sub
fcoml
mov
inc
jnp
xchg
xchg
cmp
sbb
dec
fld
xchg
lahf
xchg
out
out
pusha
lods
xor
rclb
pop
and
daa
lods
mov
gs
ficompl
test
fidivl
cmp
push
sahf
xor
and
sahf
pop
dec
mov
cli
mov
aad
mov
in
shlb
adc
repz
adc
mov
mov
testl
sub
adc
dec
dec
xor
aam
negb
dec
scas
xor
in
nop
hlt
add
stos
mov
andb
sahf
mov
mov
cmc
mov
movsb
ja
xchg
mov
mov
aas
cltd
out
xlat
mov
jecxz
cmp
sahf
aad
push
das
jg
push
pop
std
loop
rcrl
aad
lcall
std
pop
into
mov
fcom
loopne
mov
mov
cmp
mov
xor
je
adc
shll
add
push
or
push
mov
arpl
pusha
ret
inc
pop
sub
nop
jbe
jbe
loop
out
or
fidivrl
dec
fdivrl
xlat
call
outsb
or
jg
jbe
fistpl
outsl
or
jl
lret
sbb
test
out
jp
mov
fisubrl
testl
sub
adc
sbb
lret
sbb
insl
mov
or
imul
push
mov
clc
lods
pop
in
jge
jp
je
jecxz
fcoml
fnstsw
mov
push
sub
mov
nop
push
testl
mov
ret
jecxz
lret
lcall
push
lret
mov
jae
shrl
addl
movsb
sub
mov
mov
and
daa
jecxz
leave
mov
inc
jns
mov
mov
adc
xor
insb
or
repnz
xchg
push
adc
jns
inc
add
sbb
xchg
xchg
in
cmc
jb
sbb
push
inc
lea
jecxz
pop
mov
je
nop
mov
popf
roll
mov
fs
or
xlat
mov
scas
sbb
jmp
add
xchg
sbb
jae
jl
dec
in
negb
xchg
ror
xor
add
ror
les
and
mov
icebp
es
dec
jg
outsb
in
sbb
lods
jo
enter
or
cmp
mov
sbb
dec
xor
aas
fcoms
arpl
fst
sbb
and
sbb
in
dec
dec
leave
and
inc
adc
push
pop
fucomi
fdivrs
stos
xchg
divb
out
sbb
pop
hlt
mov
cmp
add
es
mov
fdivrl
movsb
pop
testl
mov
shrl
scas
out
imull
insl
stos
mov
pop
adc
out
shl
lret
movsl
fs
rcrl
lret
loop
scas
dec
xor
xor
sbb
push
mov
dec
cli
xchg
xchg
mov
xor
out
jbe
aas
add
dec
outsl
in
divl
push
or
rorl
jl
arpl
pop
jle
mov
add
scas
fimuls
xor
jbe
scas
inc
ret
add
mov
rcll
lds
fs
pushf
sub
leave
cmp
xlat
loop
add
pushw
inc
add
aad
pop
mov
cmp
iret
shlb
dec
pop
sbb
pop
and
or
xor
sbb
mov
lds
mov
dec
xchg
jl
sarb
sub
imul
divb
pop
setns
sub
inc
mov
inc
bt
mov
xchg
push
jg
sarl
ficompl
and
mov
rorl
fcomps
icebp
jp
or
or
cmp
subl
inc
pop
ljmp
cmc
ret
cmp
lcall
lcall
mov
insb
daa
mov
jne
sub
arpl
pop
dec
mov
jge
and
pop
dec
mull
mov
cmp
xchg
popl
ljmp
popf
inc
xor
or
sarl
xchg
or
lock
in
mov
stos
stc
addb
out
rcrl
rol
push
xor
pushf
and
repnz
sbb
icebp
movsb
pusha
dec
mov
ret
jne
dec
test
sysret
xor
or
jle
mov
pop
mov
and
nop
int
les
test
push
pushf
lds
push
shrb
xchg
xlat
lds
fidivrs
adc
lret
jge
mov
jo
pop
outsb
xor
fcompl
dec
inc
lea
inc
cmp
push
pop
mov
adc
loop
or
into
and
cmp
mov
cwtl
cwtl
inc
in
shlb
cli
lods
adc
xor
jb
pop
add
sahf
inc
push
sub
imul
sbb
or
test
mov
mov
nop
mov
fwait
push
pop
idivb
or
jo
outsb
loopne
jne
adc
add
fildll
xchg
or
xchg
and
xor
pop
cmc
inc
outsl
mov
pop
cmc
sub
sbb
aad
les
mov
je
shlb
pusha
stos
pop
fists
dec
push
or
loopne
stos
push
mov
notl
out
mov
fidivs
adc
cmp
mov
lods
int
ror
cs
fcomip
cmp
aam
divl
ret
jp
mov
enter
fucomip
xorl
popf
xor
icebp
hlt
cli
and
sbb
ja
ds
cmp
dec
shll
dec
and
out
and
add
mov
sub
adc
mov
ljmp
or
int3
ss
fs
mov
mov
fadds
ja
cltd
or
jl
enter
xchg
or
jp
ja
bound
xor
and
xor
lock
add
jp
mov
push
or
jne
push
lret
jno
loop
or
rcrb
mov
fcomps
rcll
shll
add
stos
pop
das
shrb
ret
adc
mov
dec
mov
and
insl
xchg
jo
movsl
test
xchg
shl
jp
mov
mov
movsl
fisubl
cmpsb
lds
jmp
test
mov
jne
lods
pop
pop
pop
bound
xchg
bound
xchg
mov
movsb
cmp
test
jae
cmpsl
jmp
andl
push
adc
mov
pop
popf
outsb
sarl
loop
xor
jbe
mov
add
ret
mov
mov
scas
enter
cmp
mov
adc
mov
idiv
ret
fucomp
sub
xor
outsl
jne
jge
mov
and
push
cltd
add
adc
js
cli
gs
inc
and
into
push
loope
add
ds
push
rclb
sahf
jns
in
inc
pop
mov
add
enter
adc
sbbb
xlat
sub
lods
xchg
clc
dec
dec
rcr
roll
lahf
xchg
mov
dec
or
rcll
in
jg
cltd
sbb
daa
mov
pop
mov
pop
xchg
insl
push
les
outsl
cmpsl
pop
rcrl
je
out
je
call
push
mov
pop
sbb
mov
out
sub
les
xchg
cmc
push
xchg
mov
les
lret
push
and
sbb
dec
in
mov
inc
sbbl
insb
cli
fcmovbe
jnp
push
sahf
stos
andb
adc
and
lret
xchg
add
xchg
cmc
aam
adc
mov
inc
sbb
pop
stos
push
pop
fisttpl
and
movsb
push
dec
adc
jno
and
test
imul
pop
aas
add
adcl
xor
negl
mov
nopl
outsl
lods
mov
jnp
ret
xchg
hlt
push
push
nop
push
test
jae
mov
lret
out
xor
inc
sub
xchg
out
movl
jnp
sbb
andl
into
pushf
sub
mov
popf
sub
incl
xor
mov
sub
stos
pop
sbb
add
test
scas
inc
jle
outsb
sbb
fidivl
call
sbb
xchg
les
repz
jo
sti
xchg
inc
mov
mov
cs
ret
mov
imul
adc
repnz
inc
mov
sub
mov
jle
aas
in
or
mulb
pop
and
outsl
sahf
inc
push
cmpsb
scas
adc
cwtl
loope
mov
ss
fldl
and
filds
xchg
stos
inc
nop
add
mov
test
cs
cmp
sbb
aas
xchg
cmp
imul
rcll
dec
out
lods
shrb
xor
addb
mov
sbb
aaa
rorl
push
lock
cmp
xchg
adc
sub
sahf
xor
nop
nop
fdivp
push
xlat
repnz
call
fidivrs
and
fldt
pop
and
fistpl
pop
or
rolb
aad
in
inc
mov
xor
adc
cmp
lahf
movsb
sub
mov
push
pop
mov
test
adc
sarl
xor
mov
add
jne
pop
xchg
fcomp
call
in
icebp
mov
sbb
add
and
push
mov
dec
and
subl
xor
dec
push
rcrb
or
scas
dec
ds
mov
sub
stc
fcomip
inc
jb
pop
out
sbb
and
cmp
in
insl
aad
fldl
clc
insl
icebp
pop
sub
sub
shlb
aas
lock
mov
outsb
lods
dec
mov
cmp
jb
mov
mov
push
inc
outsb
or
loopne
cwtl
sub
push
xchg
out
test
push
sahf
push
rorb
mov
mov
fisttpll
cmp
jns
mov
lods
mov
push
mov
cltd
iret
or
add
pop
or
loopne
xlat
imul
jl
mov
push
cmpsl
std
out
mov
or
repz
out
xchg
dec
into
sub
adc
iret
pop
stos
pop
in
jns
xor
aam
mov
mov
xor
rolb
flds
cmp
sbb
stos
shl
out
and
push
inc
or
mov
inc
fildll
mov
xchg
cld
push
scas
mov
jo
pop
fs
jb
out
popa
pop
mov
adc
mov
xorb
inc
xlat
dec
inc
movsl
divl
sbb
cs
mov
jle
or
sbb
sbb
cmpsb
sub
pusha
hlt
pop
push
andb
pop
clc
dec
inc
push
sbb
rcll
out
xchg
and
loope
repz
jecxz
outsl
es
pop
lcall
int
sahf
popf
scas
cmp
movsl
mov
out
and
xor
pop
cld
cwtl
repnz
or
addr16
push
gs
std
in
xabort
xchg
and
jmp
and
int3
sbb
inc
mov
in
cli
xor
dec
jo
mov
stos
in
scas
cmpb
adc
add
bound
fucomp
ficoml
lea
out
or
push
jnp
nop
jb
subl
jmp
or
fisttps
push
addr16
fldcw
pushf
mov
mov
mulb
inc
imul
sti
ss
push
ja
fwait
xchg
addr16
pop
sbb
int3
ja
add
push
call
dec
xchg
test
adc
pop
xor
aad
dec
out
sbb
adc
icebp
out
inc
mov
data16
and
sub
adc
into
int
pushf
mov
leave
add
pop
sub
out
sbb
and
fisubl
frstor
scas
test
pop
pop
loope
jge
les
ret
add
add
lods
test
mov
pop
push
xor
cmp
and
iret
shl
push
rclb
in
fildl
pop
pop
xlat
scas
std
fs
and
rcrb
pop
sbb
loope
cwtl
xor
sub
or
punpckhdq
add
sbb
dec
inc
gs
inc
adc
imul
sbb
add
add
xchg
cld
stos
insl
or
mull
into
in
pop
dec
cmp
jnp
push
xchg
jne
iret
into
outsl
add
test
xabort
sub
fcomip
testb
xchg
mov
jmp
cmp
scas
nop
mov
jp
lds
dec
pushf
ret
adc
das
adc
dec
ret
adc
xor
idivl
push
aaa
js
idivl
imul
fcmovnb
nop
fs
mov
addr16
xchg
negb
lds
insl
mov
fstl
ret
dec
dec
jle
fisttps
sbb
pop
loop
xor
pop
or
and
lahf
mov
ficompl
filds
imul
cmp
or
js
in
shlb
pop
inc
cmc
dec
dec
adc
pusha
mov
repnz
push
shll
mull
popf
lds
and
pop
cli
ds
addr16
aaa
jne
cli
and
push
rcrb
jne
mov
test
push
and
es
or
enter
cs
mov
popa
pop
out
cmpsb
sub
popf
popa
stc
sbb
push
test
cmp
ja
inc
scas
xor
push
aad
mov
int
jo
stos
push
and
aaa
sub
dec
push
jbe
repz
sahf
fldt
mov
fildll
dec
cli
lret
sbb
rclb
xchg
mov
movsl
inc
push
and
inc
mov
ljmp
outsl
fimuls
das
lock
or
clc
test
fs
fists
aam
movsl
aas
mov
cwtl
jp
rcrl
push
or
xchg
lods
push
sahf
push
dec
cli
mov
dec
mul
or
lret
push
pop
out
sbb
jae
mov
dec
cs
pop
sarl
sbb
std
ffreep
sbb
jae
sub
jg
xchg
fwait
dec
cs
pop
push
push
bound
cmp
jg
push
pop
mov
push
outsb
cltd
fstl
iret
sbb
mov
jl
fisubs
ret
xchg
sbb
adc
fsubrl
adc
cmp
dec
sbb
popf
dec
mov
outsb
ds
dec
cs
jne
fdivs
test
scas
fcom
shl
int3
roll
shl
mov
hlt
push
dec
mov
call
sti
ds
faddl
in
rcr
dec
xchg
mov
mov
fstl
xchg
adc
fldenv
mov
out
mov
lea
push
cli
xor
orl
ret
mov
add
sbb
movsb
mov
mov
dec
mov
sub
mov
jmp
cmp
jnp
and
sub
rcll
and
popf
add
xor
es
bound
outsb
jl
and
or
pop
scas
lock
adc
xchg
or
sub
ss
cli
adc
mov
pop
test
pop
push
cmpsl
mov
hlt
cli
xchg
pop
loopne
cmpsb
dec
mov
inc
add
push
in
imul
mov
nop
stc
jle
inc
in
adc
stos
iret
shr
movsl
mov
data16
xor
imul
popf
pop
add
lds
mov
mov
sbb
lock
test
insl
inc
nop
test
jge
inc
jge
sub
adc
mov
popf
mov
adc
adc
fchs
outsl
jle
out
arpl
pop
inc
andl
cli
sub
lcall
xor
ret
imul
dec
inc
and
int3
sahf
jecxz
or
cmp
mov
int
cmp
lock
movsl
inc
in
scas
int3
enter
aas
pop
inc
roll
pop
mov
cld
dec
fxch
pop
inc
hlt
adc
les
push
dec
lods
push
decb
popa
mov
xchg
scas
push
outsb
push
lods
or
test
lock
in
insb
cmpsb
xor
jp
or
inc
pop
out
adc
sbb
cmpsl
lock
js
ret
loopne
shll
or
xchg
mov
sbbb
xlat
daa
daa
mov
js
xchg
cmp
mov
jg
fcom
and
mov
aaa
hlt
stc
es
sbb
and
inc
cmp
dec
xchg
lcall
repz
or
sahf
jnp
pop
adcl
add
push
cmp
out
pop
in
jecxz
shrl
and
adc
fildl
loopne
iret
pop
rcll
inc
stc
shll
ss
incl
jnp
lret
sbb
adc
push
sub
adc
mov
mov
int3
int
sub
lock
inc
call
push
loopne
mov
or
xor
inc
lret
ljmp
repz
sti
adc
mov
mov
int
mov
jae
cld
stos
ljmp
popf
xchg
sbb
fs
cmp
or
add
cmp
outsl
mov
fists
sbb
les
jle
pop
ret
pop
cs
mul
or
je
xorl
adc
and
call
imul
cmp
lea
dec
fistpll
or
dec
leave
cltd
pop
outsl
enter
push
je
hlt
cmp
mov
mov
insl
fs
inc
push
pop
ja
mov
insl
mov
push
xlat
ret
cld
mov
cmp
sbb
dec
push
into
adc
lds
jne
sbb
mov
lret
mov
mov
sbbb
dec
push
jle
jbe
repnz
mov
fdiv
dec
sbb
or
adc
movsb
and
outsb
fisttpll
test
and
push
mov
pusha
mov
push
jnp
pop
leave
jl
in
outsl
daa
cmp
or
xchg
ja
cmpsl
fidivs
stos
iret
xor
std
sub
movsl
mov
loopne
push
in
int3
jecxz
in
popa
in
or
fisttpl
mov
and
out
pop
inc
test
mov
shl
lret
xorb
lret
out
mov
gs
inc
push
shll
in
push
aam
push
adc
fidivrs
aam
cmp
mov
hlt
out
fs
aas
test
mov
sbb
loopne
psubsb
sub
mov
dec
jbe
push
inc
mov
dec
js
test
lods
popa
dec
or
mov
mov
add
mov
test
mov
push
not
repnz
ss
test
imul
loop
sbb
mov
cmpsb
clc
mov
pop
jle
insb
movsl
stos
jnp
push
rol
xlat
xor
out
cs
or
cmp
pop
push
inc
arpl
aaa
inc
mov
xor
jne
test
scas
mov
add
pop
ds
movl
cmpsb
mov
das
sub
call
sub
test
and
xchg
pop
fbstp
adc
ljmp
fsubs
mov
iret
jnp
dec
and
arpl
mov
movl
sbb
push
scas
push
clc
jecxz
mov
mov
or
mov
subl
jne
fistl
sub
pop
cmp
into
push
inc
pop
sbb
jl
fsts
in
lock
out
gs
aas
cltd
loope
pop
scas
pop
out
and
sarl
xor
lea
dec
pop
loopne
scas
and
test
mov
jnp
xor
adc
in
fnstcw
push
cmp
mov
add
push
icebp
inc
push
lea
or
pop
pop
fs
test
add
adc
and
call
sbbl
data16
in
xor
rol
mov
mov
sub
and
sbb
xchg
std
mov
mov
pop
cs
aas
imul
frstor
test
inc
icebp
or
add
int3
mov
mov
push
decb
lods
or
in
aad
sbb
pop
pop
test
fnstcw
xor
push
push
ficompl
sub
lock
lret
cmc
xchg
repnz
pop
mov
jmp
lods
scas
inc
sub
inc
and
out
faddl
inc
lods
cmp
adc
out
movsb
std
out
xor
fmull
stos
inc
fimull
cmp
ret
lret
sete
jmp
or
pop
sbb
jecxz
mov
or
add
popa
ljmp
xor
kunpckbw
dec
xchg
movsl
adc
dec
call
inc
pop
cli
rcrb
xchg
push
add
popa
out
shlb
test
jg
movsb
push
sub
inc
int3
mov
cwtl
das
sub
add
out
in
jnp
jo
mov
xchg
dec
loope
pop
ja
mov
orb
mov
shrb
out
les
iret
add
push
push
mov
mov
add
mov
mov
dec
mov
pop
fsubrl
test
fisubl
push
into
pop
in
icebp
mov
cmp
outsb
dec
pusha
xor
jns
mov
insb
jae
mov
ficompl
cli
pop
xor
stc
mov
test
push
cld
jb
movsb
adc
mov
dec
sbb
ret
sbb
insb
or
push
movb
mov
incl
loope
mov
cmpsl
inc
aas
pop
push
in
cmp
filds
cmp
mov
xchg
popa
mov
jmp
jge
add
ret
sub
push
cld
xchg
xor
out
movsb
and
sahf
pop
std
fstp
cmp
mov
mov
fdivr
leave
out
push
addr16
mov
fcmove
cs
xor
les
fsubr
or
in
inc
sub
or
nop
or
std
aad
cmpsl
mov
pop
arpl
in
mov
push
cmp
dec
sti
pop
jp
ficoml
sbb
call
xorl
les
aas
adc
arpl
jnp
lea
cmp
shll
xor
imull
dec
sub
pop
xchg
inc
popa
jle
push
xchg
mov
in
push
or
sti
jge
jno
lret
push
or
imul
pcmpgtw
adc
inc
pop
icebp
sub
popf
cmc
push
repz
xchg
stos
lcall
inc
stos
push
adcb
and
inc
js
cmp
rorl
dec
dec
ret
jg
inc
test
int
xor
jne
in
das
in
sbb
xchg
adc
stc
inc
and
test
fwait
jge
in
insl
mov
mov
pushf
cs
movsb
ljmp
adc
or
cltd
pop
push
cmc
mov
or
inc
dec
or
lea
jnp
mov
sub
decl
ja
dec
and
push
icebp
adc
fs
jg
jecxz,pt
mov
sbb
xchg
add
arpl
push
push
int3
jno
inc
mov
icebp
fsubl
push
sub
into
or
pop
mov
pop
cltd
pop
es
dec
dec
cmp
mov
setae
push
xchg
sub
stos
in
ret
in
mov
or
outsb
aaa
mov
call
cmp
ds
ss
cmp
mov
andb
cmp
ret
cmp
leave
add
cmp
ljmp
inc
push
mov
dec
or
push
adc
mov
cmc
cld
pop
in
mov
mov
add
test
mov
mov
negl
xchg
mov
scas
shrb
cmc
lcall
cmp
pop
cmp
xchg
gs
dec
inc
lret
int3
inc
push
sub
cld
mov
aas
add
into
cmpsb
rclb
pushf
lea
lret
add
and
jmp
push
mov
or
inc
xchg
mov
rcrb
inc
and
xchg
fidivrl
or
stos
dec
mov
js
lret
and
or
dec
in
gs
jnp
jg
cmp
xchg
pop
aad
enter
arpl
and
push
dec
clc
pop
cmc
or
xchg
je
subb
daa
or
sbbl
adc
pop
xchg
loope
aam
fisubs
outsb
in
leave
out
js
int3
stos
pop
mov
pop
js
pop
les
mov
cwtl
scas
in
or
das
push
jae
es
adc
mov
xor
hlt
jo
lret
adc
and
pop
movsl
jmp
and
mov
pop
cmpsl
cmpsl
push
mov
add
aam
test
out
xchg
or
push
ljmp
cmc
push
dec
je
pushw
imul
mov
outsb
sti
jb
call
adc
mov
cs
mov
repnz
cmp
fwait
inc
jbe
mov
mov
add
imul
ror
xlat
out
xor
mov
dec
cmp
sarl
lret
mov
mov
into
adc
xor
dec
add
lods
das
aas
jnp
xor
shlb
or
push
bound
mov
shll
mov
into
lods
cmp
sub
xchg
call
push
adc
pop
sahf
dec
fidivrl
fs
test
and
int3
sub
jno
mov
call
lcall
lock
rolb
push
popf
popf
scas
cmc
pusha
xor
xchg
add
add
sbb
mov
out
fidivrl
inc
adc
pop
pop
push
jbe
jnp
and
data16
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
jmp
insb
jns
sbb
mov
push
lcall
jl
pop
jl
inc
cmp
pop
out
and
inc
aam
test
sub
out
inc
pushf
inc
mov
repnz
in
shlb
out
pop
xor
cmp
xchg
rcll
xchg
dec
test
jmp
shrd
pop
std
adc
repz
lret
out
jno
or
xor
mov
mov
out
and
dec
lods
call
inc
jo
outsb
xor
jo
mov
add
add
call
fldl
pop
or
lea
jnp
lods
add
test
lock
ficomps
adc
sahf
lods
les
jne
lea
cmp
pusha
mov
popf
pop
inc
int
dec
push
cmc
jmp
dec
es
jns
push
lock
mov
jl
push
jg
sub
lcall
sub
mov
dec
roll
std
ja
xchg
pop
jb
pop
xchg
pop
lea
test
inc
filds
push
sti
aaa
aam
inc
test
aam
js
mov
xor
jb
sub
mov
jecxz
inc
stos
cld
mov
stos
lods
push
xor
xchg
or
outsb
mov
jmp
jne
imulb
lcall
push
sahf
mov
mov
pop
mov
sub
or
ss
and
scas
pop
xor
popf
pop
rolb
and
jle
xchg
adc
jl
xorb
mov
pop
cwtl
jno
push
mov
mov
jle
adc
add
cmp
test
sbb
dec
add
sbb
fimuls
mov
mov
sub
push
ds
cmp
inc
andl
xchg
adc
pop
adc
mov
cmpb
popf
dec
mov
ljmp
inc
out
std
push
sub
or
push
xchg
xlat
popf
int
pop
xchg
movl
lods
in
inc
fidivrl
loopne
js
jge
mov
cwtl
or
fldl
xchg
adc
mov
push
std
aam
dec
ds
cmpsl
and
les
addr16
jmp
outsb
mov
and
add
push
jmp
pop
mov
sbb
mov
mov
clc
mov
call
call
shll
lret
cli
push
jae
das
mov
mov
push
dec
mov
push
sbb
push
fldl
dec
filds
xchg
fmull
andl
cmp
jne
inc
jb
mov
mov
nop
pop
je
or
jo
xchg
jno
add
push
outsl
push
jb
adc
aas
test
mov
cmpsl
push
mov
cmp
loope
jg
jns
pusha
xchg
scas
roll
leave
adc
movsb
repnz
and
mov
test
daa
xor
loop
add
add
cmpsl
xchg
adc
jo
push
fnstenv
ljmp
mov
adc
inc
sbb
in
scas
or
inc
xor
mov
repnz
in
ds
xlat
gs
movsl
std
push
push
mov
xchg
pop
jl
and
pop
cs
push
shl
pop
jns
xor
pushf
jecxz
jmp
inc
push
test
mov
mov
mov
insl
sbbb
aam
lds
xchg
mov
rolb
mov
fiaddl
fstpl
jmp
leave
mov
ret
lcall
enter
mov
pop
pop
rcr
xchg
pop
out
out
push
or
xchg
pop
push
pusha
sub
les
xchg
ds
subl
push
test
add
jmp
sbb
js
inc
and
test
pop
add
push
dec
fists
sbb
jl
and
dec
dec
add
shll
and
jle
sahf
sbb
mov
mov
rcl
fwait
ja
inc
mov
popa
push
loop
jne
dec
push
mov
aas
cmpl
jns
mov
pop
sahf
loop
cld
fsubl
aaa
daa
lods
inc
mov
jmp
cmp
leave
push
dec
dec
sbb
dec
test
xchg
cli
adc
add
movb
lret
dec
inc
pop
fisubrl
subb
js
jne
or
push
movsb
sar
leave
xor
int
mov
lods
lret
mov
insb
in
shlb
test
add
out
ret
cwtl
dec
push
or
jae
inc
dec
inc
pop
sbb
mov
je
dec
lcall
xor
jno
scas
repz
iret
aam
outsb
mov
cld
das
push
jne
inc
mov
shrl
ret
pop
fldcw
mov
sub
inc
incl
xchg
dec
iret
inc
fidivl
mov
loop
loop
add
mov
push
sti
sbb
shlb
mov
pop
or
mov
jo
xchg
jp
rorl
jecxz,pt
push
add
pop
sbb
jl
int3
pusha
xchg
stos
inc
shrb
ja
sbb
adc
pushf
lret
sbb
sahf
mull
mov
mov
xor
mov
cmp
and
scas
cs
jno
imul
flds
movsb
push
sbb
jbe
pop
mov
pushf
stos
sbb
pop
jno
lss
mov
iret
add
clc
in
jbe
dec
mov
push
iret
mov
test
call
dec
int3
push
mov
mov
out
cmp
std
cs
jp
inc
cltd
hlt
xchg
push
lcall
adc
push
pop
lods
fcmovbe
xor
loopne
mov
sahf
jle
int
ret
lahf
sub
adc
js
sbb
imul
lods
test
jno
adc
adc
shr
mov
insb
sahf
scas
xor
xor
aaa
iret
aas
faddp
je
xlat
std
sti
xchg
insb
add
andl
mov
or
push
sbb
dec
sub
jl
sarl
cwtl
pop
jecxz
pop
data16
lock
mov
xchg
dec
dec
test
jb
ror
aas
outsl
call
orl
sbb
out
xor
mov
mov
fidivrl
jmp
movsl
mov
jb
scas
add
popa
mov
ret
lods
arpl
or
in
xchg
in
aas
pop
mov
fcoms
sub
lcall
pop
xchg
pop
or
je
cmp
inc
imul
mov
or
dec
pop
pop
xchg
xchg
stos
mov
lahf
pop
cmp
outsl
push
adc
and
xor
sti
je
stos
scas
xchg
lret
add
pusha
cltd
mov
mov
in
mov
nop
sti
and
xlat
pop
pop
xchg
in
inc
pop
loop
push
sbb
xor
push
push
xchg
sarb
lret
cmp
pop
pushf
mov
sub
pop
jle
jno
jns
mov
or
cmp
out
sarb
jl
push
sub
sbb
int
jmp
pop
test
les
call
push
jb
xor
popf
xchg
sbb
stc
dec
test
jge
stos
mov
das
ljmp
mov
pop
iret
xlat
out
leave
inc
xchg
lods
aaa
fwait
dec
xchg
push
xchg
sbb
incl
dec
mov
jbe
or
mov
mov
fwait
mov
data16
fdivrs
repnz
xchg
mov
outsl
dec
xchg
mov
pop
dec
sub
imul
sub
jo
shrl
les
xor
push
popa
dec
mov
les
add
fisubl
mov
test
mov
loop
out
inc
pop
or
xor
jge
or
mov
mov
loope
fidivl
outsl
pop
sahf
ror
jp
dec
fucomp
jg
mov
inc
jmp
lods
cmp
mov
dec
inc
cld
xor
and
sbb
sbb
mov
fisttpl
cld
mov
aad
mov
jle
roll
adc
cmp
daa
dec
pop
jno
aad
jge
push
pop
or
xor
push
pop
lahf
sbb
push
stos
sub
push
push
cli
or
daa
mov
pushf
int
and
pop
test
mov
add
push
popf
cmc
imul
addb
mov
divl
mov
mov
xchg
aam
ss
push
insl
leave
dec
je
scas
mov
fbstp
lock
sub
aam
ljmp
lds
mov
lock
es
or
dec
out
xor
dec
adc
aas
jp
xchg
cwtl
push
xlat
shrl
fs
imul
lahf
pushf
sbb
jp,pn
pop
cld
pop
insb
xchg
in
add
xchg
jno
push
ljmp
insl
sbbb
fcmove
inc
jge
vfmadd213ss
repnz
aas
test
lcall
lods
jle
aad
into
jge
and
into
les
sub
pop
push
fists
jmp
loop
popf
pop
pop
sub
sbb
js
jno
jecxz
sbb
or
repz
or
je
fldcw
mov
jns
jns
sub
stos
add
jnp
or
mov
imul
insb
out
test
and
imul
daa
lahf
std
sti
negb
int3
pop
cs
movsb
repnz
int
je
sub
jp
push
bound
inc
and
sub
pop
sbb
fnsave
lock
pop
mov
fcomi
mov
inc
icebp
xor
scas
sub
testb
adc
test
insl
push
adc
jg
cmp
add
jg
sub
out
arpl
jp
outsl
sub
jmp
out
pop
icebp
or
xchg
sub
jge
mov
mov
mov
daa
sbb
cli
xor
pusha
inc
lods
inc
jae
xchg
jae
test
stos
out
ret
cmpb
xor
clc
sub
jb
sub
icebp
push
add
pop
mov
ss
xchg
pop
es
daa
xchg
popf
jecxz
jo
stc
mov
cmp
shl
sar
in
cmp
pushaw
push
les
das
ss
xor
adc
pop
mov
loope
jle
jle
mov
jge
xlat
mov
mov
xor
jno
bound
mov
comiss
xor
pop
jae
stos
sbb
mov
push
jae
sub
lock
lret
out
xor
pop
jl,pt
sbb
icebp
jmp
subb
or
dec
repz
ja
and
jmp
decb
jmp
xor
sbb
daa
jb
mov
mov
or
mov
out
pop
push
xor
mov
push
mov
pop
daa
test
cmp
xchg
insb
insl
test
loope
ljmp
sbb
xchg
jbe
dec
outsl
in
mov
cli
dec
call
add
mov
jmp
xchg
scas
inc
in
movsl
sub
aas
dec
imul
sub
out
insb
push
jne
rorb
lret
movsb
jo
mov
sbb
addr16
add
xor
fadds
xchg
mov
lcall
pop
mov
adc
cmpsb
dec
lret
push
cmpsl
lock
gs
test
cmpb
rcr
push
stc
mov
fiadds
outsb
lods
lods
repnz
out
push
mov
sub
cmpsl
xchg
or
adc
fxch
cmp
mov
mov
xor
loop
daa
mov
into
jecxz
ds
lret
lret
mov
sub
inc
cld
dec
jb
add
xchg
imul
sub
int3
adc
xor
mov
test
mov
ficoms
gs
enter
aam
inc
ret
jnp
in
or
mov
lods
sahf
and
mov
jb
adc
stos
mov
xor
fs
push
push
ds
shrl
cmpsl
cvttps2pi
addb
out
bound
insl
and
push
xchg
pushf
mov
adc
mov
fstpt
mov
fstps
mov
add
cmp
scas
add
xor
andb
xor
pop
imul
fsubl
push
lea
ljmp
sbb
mov
andb
or
sbb
xchg
add
leave
xor
lock
into
rcll
jg
insl
pop
xor
cmp
cmc
add
mov
adc
pop
inc
push
cmp
xor
out
iret
clc
fisubs
movsb
inc
mov
pop
arpl
xor
adc
xor
dec
negb
sub
xchg
push
cmp
mov
cld
cltd
aaa
fmulp
enter
shrl
and
push
pop
jp
cmc
out
jge
stc
and
mov
cmp
adcl
sub
hlt
and
fistl
mov
mov
mov
jo
and
cmp
add
push
sub
call
pop
xchg
js
cmpl
mov
mov
mov
ds
xchg
mov
adc
pusha
sub
cmp
mov
stc
iret
adc
mov
bound
jmp
je
shrl
push
pop
scas
mov
cmp
lds
hlt
inc
mov
fnsave
and
loope
add
or
dec
or
aam
jne
sbb
test
lcall
mov
fsts
call
push
add
or
sbb
movsb
inc
andl
mov
jbe
in
cld
adc
cmpb
mov
sbb
test
pop
inc
nop
lods
in
filds
jne
xor
push
cmpsb
loop
data16
push
mov
ret
xchg
cmp
nop
dec
xchg
adc
mov
or
jae
scas
fwait
jmp
lahf
or
aaa
adc
add
cmp
ret
in
clc
popa
push
mov
push
push
bound
ss
or
or
jmp
push
jbe
cmpb
insl
xchg
mov
or
es
je
sti
cwtl
imul
lock
mov
dec
jnp
daa
insl
push
push
jnp
or
neg
gs
lret
out
mov
sbb
mov
inc
xor
stc
out
mov
sbb
clc
adc
dec
and
mov
pop
mov
push
gs
stos
jnp
test
inc
iret
dec
out
jg
push
mov
xor
cmpb
adc
adc
sbb
mov
test
push
cli
lret
lret
push
jecxz
lret
stc
fimull
push
xor
enter
in
cmpsb
stos
repz
loopne
adc
dec
pop
testb
lret
xchg
inc
pop
popa
jmp
lret
adc
popa
push
lahf
lea
mov
xchg
inc
lcall
push
mov
xor
in
aaa
and
dec
xor
adc
sub
cmp
sbb
adc
push
mov
in
out
mov
sub
push
jns
hlt
in
out
pop
mov
jns
and
or
pusha
and
dec
xchg
popa
push
ja
pushf
pushf
fmull
icebp
rcrb
ljmp
xchg
jp
mov
mov
je
mov
mov
and
test
xorb
into
inc
or
jge
pop
not
xchg
mov
mov
adc
xor
xor
mov
in
je
adc
and
push
mov
add
jmp
sbb
xor
push
or
sbb
enter
adc
pushf
lock
js
test
push
and
shrl
mov
adc
xor
andl
sbb
or
add
aas
ds
aam
xchg
ja
cmp
adc
dec
xchg
sub
mov
mov
dec
push
adc
fdivrs
dec
sahf
sub
call
and
jb
cmp
daa
iret
mov
test
imul
mov
fldl
cwtl
scas
test
jbe
in
xor
in
jmp
jl
cmp
xchg
popf
fs
mov
pop
inc
and
shl
loop
sub
popf
clc
aas
dec
push
int3
clc
jno,pn
test
es
push
pop
movsb
test
dec
and
scas
push
je
imul
mov
movsl
lahf
aam
and
rcrb
stos
lret
std
sbb
and
mov
mov
loope
mov
adc
imull
jb
and
push
idiv
outsl
aam
cli
pop
jae
lods
and
ror
les
sub
inc
mov
loopne
pop
es
cmp
dec
jbe
jae
roll
xchg
jp
movsb
sub
in
sbb
test
cld
mov
dec
icebp
mov
fisttpll
xchg
lds
jmp
push
into
loop
popa
stos
mov
out
xor
ds
sbbl
mov
mov
insb
push
fmull
test
cmp
xor
jo
out
ljmp
orb
test
inc
jge
dec
mov
hlt
or
pusha
pop
lock
pop
loop
pop
mov
sub
cmp
inc
cmpsl
sbb
jmp
adc
test
or
clc
test
inc
subl
int3
or
inc
cmp
movsl
lahf
and
setnp
loopne
je
roll
inc
nop
dec
push
ret
sbb
sbb
mov
mov
mov
mov
test
insb
out
cli
dec
mov
jnp
sbb
out
scas
dec
js
jle
dec
cmp
arpl
jmp
pop
mov
ficomps
scas
xchg
or
pop
es
sbb
in
lret
sub
pop
shrl
jbe
gs
mov
adc
adc
add
lahf
repz
out
popa
daa
popf
lret
mov
rolb
xor
xor
xor
aad
pop
loopne
scas
dec
push
pushf
aas
pop
dec
lahf
aad
add
cmp
cvttpd2pi
outsl
nop
rcrl
jecxz
or
repnz
xchg
mov
add
rcrl
xor
aaa
jmp
int
pushf
jnp
movsb
jg
int3
or
xor
dec
loop
sub
test
pop
clc
flds
cmp
and
test
xchg
push
test
push
lcall
negb
inc
pop
jb
mov
inc
pop
lcall
fstps
lea
lret
mov
lretw
push
lcall
pusha
aad
in
mov
movsl
pop
subl
jmp
scas
stc
out
test
add
in
pop
xchg
push
push
sub
ds
frstor
dec
push
dec
jne
mov
and
je
fmul
mov
in
pop
fnstsw
cmp
cmpsl
lahf
ljmp
imul
loop
jb
rolb
lahf
adc
out
cmpsb
aad
outsb
cmp
aaa
lahf
fwait
add
or
cmp
ljmp
nop
sub
push
pop
jns
inc
xchg
out
arpl
mov
loopne
in
cmp
pop
and
dec
mov
cwtl
xor
xchg
cmp
fisubrl
mov
adc
into
pop
enter
pop
ljmp
push
pop
inc
and
loope
sbb
dec
inc
pop
addr16
outsb
stos
push
mov
loope
cld
dec
and
cmp
fisubs
enter
dec
pop
fwait
push
dec
clc
xchg
push
test
popf
sbb
and
mov
pop
cld
mov
fwait
pop
stc
int3
and
adc
jns
insl
adc
sahf
or
dec
in
adc
negb
mov
push
or
sbb
cmp
add
in
or
int3
sbb
mov
and
out
pushf
adc
mov
aad
mov
outsb
and
mov
rcrl
sbb
lods
popa
push
rclb
inc
mov
aaa
fsubr
outsb
mov
nop
mov
iret
fdivrs
jl
xorl
jecxz
pop
dec
sbb
clc
jb
push
out
mov
mov
popf
push
ficoml
in
push
add
sub
imul
shrl
outsb
pop
mov
xchg
lea
mov
pop
cmp
inc
fimuls
push
movsb
mov
cmpsl
orb
add
sbb
mov
imulb
jno
mov
inc
aaa
in
sbb
loop
and
test
inc
sbb
ret
lock
sbb
fs
shrb
mov
adc
pusha
sub
bound
js
adc
bound
roll
in
mov
das
cmp
fidivrs
jmp
adc
xchg
and
cmc
fists
cmp
xchg
jb
mov
xchg
pop
stos
fs
jbe
in
mov
ror
cs
lods
push
mov
cmpsl
pop
xlat
xchg
enter
pusha
add
lods
loopne
xor
out
add
mov
mov
push
test
mov
popf
adc
push
add
push
mov
add
jne
cld
in
jne
lods
push
sub
rcll
jmp
sti
lods
ljmp
das
out
mov
test
xchg
xchg
movsb
xor
rclb
push
pushf
adc
adc
xchg
xchg
lret
lahf
in
pusha
adc
and
dec
test
adc
in
or
mov
fsubrl
add
or
into
mov
aam
and
xchg
mul
arpl
loopne
out
mov
bound
mov
xchg
push
das
orl
adc
xchg
mov
icebp
iret
mov
sub
pop
adc
xchg
shll
lds
or
loope
jo
push
add
mov
push
in
push
pop
sub
and
pop
mov
cmc
dec
das
mov
andb
ss
sbb
sub
adc
mov
mov
lods
push
push
dec
in
nop
rol
mov
lock
cld
mov
push
xchg
movsl
push
scas
jo
xor
aam
enter
aad
pop
nop
push
ja
adc
jb
aaa
mov
sub
pop
rcll
jnp
pop
je
or
mov
shrb
jne
sub
call
aaa
loopne
lea
jb
filds
or
pop
imul
gs
std
aam
rcrl
hlt
jns
lds
gs
dec
out
mov
or
dec
xchg
jp
and
int3
mov
jo
ret
lret
rcl
das
sub
mov
mov
xchg
shr
iret
mov
ja
inc
sbb
push
fisubrl
and
or
xor
push
mov
sub
in
jns
jno
add
out
in
and
or
push
clc
pop
out
jne
inc
add
shlb
ficoms
push
adc
fstpt
push
jo,pn
testl
cmp
and
sub
dec
stc
fnstcw
adc
dec
xor
frstor
and
adc
pop
jb
or
and
jo
test
jbe
jmp
das
notl
ds
xor
lcall
xor
adc
cld
lea
daa
lahf
sarl
jg
sub
pusha
out
mov
stc
add
pop
test
dec
push
mov
or
inc
dec
sbb
out
mov
or
sbb
pop
popf
mov
push
insb
push
ja
cld
push
sbb
pop
fdivl
mov
sbb
fs
int
divb
xor
nop
in
test
or
in
test
jnp
xlat
loop
cmpsl
push
addr16
add
hlt
add
in
mov
rcl
fsubp
mov
daa
fs
sbb
jecxz
push
cmpb
in
fisttpl
into
sub
adc
jno
jge
sbb
std
xorb
imul
ret
jns
xlat
loopne,pt
push
cmp
icebp
mov
pop
inc
xchg
cmp
add
incl
lcall
sbb
mov
ret
cmc
push
fwait
push
lret
cmp
ret
jb
xor
bt
mov
xchg
les
sti
push
ds
loope
test
cmp
push
mov
cmpsb
jl
lock
adc
and
fidivrl
inc
mov
xchg
mov
pusha
xchg
inc
dec
cmpl
mov
add
mov
ficomps
mov
data16
leave
and
out
sbb
mov
incb
push
out
mov
fstpt
ret
adc
mov
adc
subb
andl
aas
fs
enter
xchg
sub
dec
insb
sbb
call
jmp
fadds
jne
pop
push
lea
sbbb
rcrb
mov
xchg
or
mov
mov
ljmp
inc
sti
rclb
inc
inc
and
shll
dec
jl
icebp
xor
gs
or
jno
loopne
mov
mov
push
mov
cmp
and
dec
dec
sbb
out
and
js
mov
sbb
mov
or
inc
xchg
inc
jg
mov
test
es
xor
cmp
inc
aad
and
xlat
sub
sahf
lods
daa
std
scas
pop
gs
xor
aaa
mov
cmp
rep
sub
fimuls
test
loop
jmp
scas
pop
shrl
mov
nop
imul
or
rorl
push
push
lods
pushf
cli
jge
push
test
xor
inc
cmp
add
mov
or
pop
lods
insb
out
lret
loopne
mov
stos
movsl
push
cmpb
pop
scas
stos
inc
out
xor
nop
push
pop
out
mov
loop
sbb
and
std
call
mov
mov
mov
shlb
cmpsl
lods
sti
data16
aam
lea
mov
test
xor
dec
xchg
adc
jle
inc
inc
mov
testl
and
and
hlt
pop
xchg
push
mov
dec
cmc
in
scas
inc
shlb
aas
pop
mov
cmp
fcmove
imul
add
push
lods
mov
leave
sbbb
jno
pop
jb
lcall
hlt
icebp
icebp
sub
jge
sub
popf
fwait
loop
je
mov
pop
cmp
out
mov
mov
ret
sti
cmp
in
mov
and
clc
dec
sbb
sbb
cwtl
xlat
ja
movsb
xchg
sbb
xor
std
repnz
lahf
clc
lods
inc
ss
mov
xor
mov
push
out
mov
mov
mov
mov
jecxz
dec
stos
in
ret
mov
stos
xor
out
mov
push
lahf
mov
test
pop
js
mov
mov
xor
adc
cmp
or
out
mov
jo
pop
jb
xor
int
mov
push
mov
cli
or
out
cmpl
xchg
jne
lea
jmp
iret
lahf
inc
push
push
jns
pusha
cwtl
mov
jg
cmpsl
in
jno
les
fldt
sbb
aas
pop
out
sbb
push
loope
test
add
pop
adc
fisubrs
sub
aaa
pushf
in
push
or
loopne
mov
xor
jmp
ljmp
xchg
push
shlb
inc
pushf
test
mov
dec
sti
sub
and
call
add
sbb
inc
int3
sub
clc
inc
dec
add
stos
and
rcll
jb
notb
xchg
mov
sarb
dec
mov
add
imul
jmp
cld
xor
add
pusha
jne
mov
lods
push
sub
fnstenv
fiadds
mov
jne
sbb
add
loope
pop
and
sub
pop
sub
cmc
sub
aas
sub
ret
mov
mov
pop
adc
outsl
scas
xor
inc
inc
jge
push
jb
rolb
test
mov
sub
lret
sub
or
fsubp
mov
mov
jo
pop
push
pop
push
ror
repz
sub
mov
outsl
and
dec
nop
push
leave
jne
lods
std
stos
push
aas
inc
imul
jo
sub
jnp
add
aad
loope
pop
imul
jmp
mov
neg
push
and
and
xor
push
mov
pop
popf
sub
icebp
mov
pop
faddl
xor
aas
jmp
push
ficomps
test
test
mov
and
jle
jg
xchg
mov
jne
adc
mov
push
push
pop
add
inc
cmpsb
inc
mov
mulb
xor
sbb
lods
repnz
and
pop
pop
inc
mov
lods
jecxz
sbb
ret
lods
filds
pop
pop
or
clc
push
mov
inc
dec
les
inc
xor
loopne
sti
xchg
jne
pop
stos
mov
push
lret
in
push
jae
mov
arpl
orb
cmpsl
jmp
fisubs
mov
push
push
sbb
fnstsw
xchg
push
scas
sub
mov
arpl
test
data16
sbb
dec
loopw
pusha
jae
sub
inc
cmp
xchg
add
outsb
mov
call
cld
mov
cmp
mov
xor
and
jno
push
fucom
sbb
aaa
imulb
loop
in
pop
andb
lea
and
fst
inc
mov
ss
loop
jg
pop
adc
pop
aam
add
xor
int3
ja
loopne
mov
addr16
aas
mov
std
pop
push
out
jbe
push
dec
les
cli
and
das
rclb
ret
jle
mov
adc
jmp
dec
add
mov
mov
jge
icebp
pop
cli
xchg
push
mov
push
mov
sbb
rcll
xor
jbe
jmp
cwtl
fwait
and
pushf
xchg
cmp
stos
sbb
adc
lods
ret
out
outsb
inc
cmp
cli
fs
ja
dec
fistpll
pop
jno
jae
das
test
mov
jae
aad
sbb
xor
mov
dec
dec
mov
out
test
mov
and
sbb
xchg
shlb
aad
rcrl
scas
test
pop
jmp
mov
push
cmp
es
scas
out
ja
insl
imul
fisubs
stos
ljmp
roll
pop
mov
xlat
mov
sbb
std
pusha
jbe
in
or
sbb
jecxz
mov
and
stos
xchg
cwtl
iret
push
int3
jle
sti
jb
dec
push
mov
repnz
mov
mov
and
dec
fs
fwait
aaa
and
dec
xchg
out
ss
jp
arpl
cmc
push
cmp
es
xchg
in
out
push
and
fsubrl
js
test
out
or
cmp
or
jno
out
push
stos
xchg
xor
push
pop
clc
push
pop
repz
call
pushf
imul
sbb
or
out
leave
out
mov
push
or
jl
dec
mov
ljmp
add
jo
cltd
mov
pop
repz
aaa
push
es
les
aam
mov
jmp
rol
inc
shll
sub
lret
int3
pop
fwait
mov
call
dec
or
jl
aad
imul
dec
clc
xor
mov
add
mov
pop
pop
pop
leave
ret
jne
adc
std
push
adc
aas
adc
sbb
adc
sbb
add
push
adc
out
jg
add
dec
adc
mov
jns
add
inc
adc
sbb
inc
add
cmp
inc
add
cmp
inc
add
cmp
inc
add
add
add
add
add
add
add
inc
cmp
add
scas
inc
adc
inc
cmp
add
adc
push
adc
cmp
add
sbb
add
adc
idivb
inc
add
cmp
cmp
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
adc
subb
cli
adc
sbb
adc
pop
inc
adc
sbb
adc
in
pop
adc
pop
sub
add
add
inc
add
add
inc
add
add
cmp
add
aaa
adc
cmpl
adc
push
dec
adc
mov
adc
lock
add
adc
outsb
or
add
add
add
push
push
inc
push
fnstsw
and
pushf
adc
js
add
add
pop
dec
outsb
jae
popa
insb
insb
and
je
pop
push
outsb
fs
dec
push
pop
dec
popa
imul
outsl
insb
fs
dec
outsb
arpl
gs
dec
outsb
outsw
inc
jo
add
add
add
add
add
cmp
add
add
add
add
add
mov
cmp
add
mov
cmp
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
