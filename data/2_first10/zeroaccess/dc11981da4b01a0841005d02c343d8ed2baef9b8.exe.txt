push
mov
sub
mov
mov
inc
mov
sbbl
sub
push
mov
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jge
push
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
mov
movl
jmp
movl
jle
push
call
xor
sub
and
movl
movl
mov
add
add
add
mov
add
mov
adcl
sub
mov
sbb
xorl
mov
orl
andl
orl
jmp
loop
jns
cmp
lcall
cltd
push
push
adc
adc
adc
adc
lea
push
repz
lods
add
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
xlat
mov
notl
sub
xchg
xchg
sub
dec
xor
inc
bswap
sbb
mov
sbb
pop
inc
adc
fistpll
xchg
sbbl
mov
add
mov
xchg
data16
jmp
mov
pop
insb
loopne
or
loope
imul
dec
push
dec
pusha
sbb
stc
add
bound
lods
pushf
sbb
call
push
imulb
mov
xchg
mov
pusha
repnz
push
fcom
sbb
xchg
fisubrl
adc
mov
fs
sbb
outsl
mov
cs
aas
stos
adc
incb
lret
mov
add
or
scas
fisubl
pop
shl
loop
lods
add
scas
mov
jae
mov
aaa
sbbl
mov
push
sub
sub
int3
aaa
dec
negb
sarl
pop
jecxz
gs
mov
adc
add
mov
push
mov
into
loop
aaa
test
rorl
cmp
int3
or
mov
push
fists
sbb
mov
or
in
mov
aaa
ret
pop
out
daa
pop
imull
jae
inc
push
ficoml
jne
repnz
outsl
push
lds
and
scas
mul
mov
add
stc
popa
mov
xchg
aas
jp
and
stc
mov
mov
test
mov
xchg
test
cmp
jle
cmp
loope
pop
call
mov
scas
push
and
hlt
xor
push
push
popf
je
cmc
cmc
mov
dec
jae
lret
arpl
cs
jo
ret
aad
loope
mov
aas
and
and
gs
loopne
insl
jl
add
nop
insb
inc
jl
or
mov
mov
leave
pop
dec
or
cwtl
add
ret
mov
and
fdivrl
into
and
mov
mov
lock
mov
jb
mov
pop
lret
or
mov
sub
mov
shrb
jbe
push
cmp
test
mov
push
mov
adc
stos
sbb
sbb
mov
xchg
pushf
ret
lea
pop
les
mov
lods
pop
enter
int3
sbb
pop
iret
outsb
aaa
jb
rorb
jo
into
push
push
xchg
sub
outsb
fadd
in
decb
xchg
pop
enter
and
jecxz,pn
sarb
in
movsl
adc
push
pusha
and
in
ret
std
ret
xchg
xor
xlat
fcmovnbe
pop
push
sbb
xchg
mov
mov
cmp
rclb
addb
and
inc
mov
pop
sbb
jnp
inc
and
jns
inc
add
mov
mov
movl
mov
jmp
mov
mov
jne
pushl
push
push
call
and
adcl
andl
xor
or
mov
movzwl
and
mov
and
mov
add
movzbl
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jb
pushl
call
movzbl
adc
and
sbb
movzbl
xor
mov
or
sbbl
mov
cmpl
movl
movl
jmp
mov
mov
jg
push
push
pushl
pushl
call
sbb
dec
xor
sub
or
mov
sub
mov
add
shrd
shr
and
mov
mov
sub
mov
subl
xor
orl
xor
movl
or
xor
jmp
ljmp
cltd
daa
mov
push
fadds
adc
adc
adc
dec
push
loopne
pop
movsb
inc
daa
xchg
or
mov
cmp
sub
mov
cmovbe
sbb
jbe
mov
insb
mov
pop
and
jbe
addr16
out
xchg
push
lret
add
cmpsl
mov
addb
test
jo
loop
int3
xor
sbb
mov
lock
decb
leave
lock
xor
lret
fucom
test
imul
mov
sbb
insb
test
call
lods
cmpsl
cld
or
mov
fistl
daa
aam
mov
das
shll
lds
sbb
subb
mov
push
jne
jg
pop
imul
sub
addl
hlt
pop
and
mov
mov
push
adc
add
es
mov
sahf
movb
filds
enter
mov
mov
xchg
xor
push
push
pop
mov
xchg
jne
out
pop
jl
lods
cmp
inc
stc
push
inc
mov
push
xchg
push
out
xor
sahf
repz
dec
dec
fsubl
cld
movsb
mov
sub
fcomps
roll
push
cmc
push
lods
adc
vphsubdq
aam
lahf
repz
lods
sbb
or
nop
sbb
bound
push
scas
outsl
mov
sbb
lahf
fistpll
xchg
sti
shr
add
jl
lods
pop
data16
and
repnz
int
cpuid
fwait
push
add
sarb
mov
pop
dec
stos
adc
mov
jl
mov
scas
dec
sti
xchg
xchg
xchg
inc
xchg
fiadds
arpl
push
shll
dec
dec
loop
jl
fwait
call
lcall
jne
or
mov
test
mov
insb
loop
pushf
insl
adc
cmp
xchg
loop
mov
dec
fwait
out
jne
mov
ret
adc
in
shl
xor
fadds
cmp
scas
mov
pop
add
jne
ja
aas
ret
jmp
fs
add
stc
lahf
and
inc
pushf
jle
mov
mov
mov
mov
daa
mov
aaa
fs
roll
das
lret
add
fbstp
mov
lahf
dec
xchg
nop
push
call
mov
push
dec
movl
arpl
jg
add
incb
das
add
xor
or
jnp
ret
mov
or
ret
testb
mov
or
cmp
cmpsb
or
and
inc
cmpsb
mov
int
xor
pop
fildll
inc
pop
adc
mov
sbb
std
dec
sbb
mov
sbb
fwait
sbb
imul
mov
fcoml
es
push
xchg
adc
cmp
ds
fwait
nop
cmpsl
mov
out
loope
mov
pop
and
cltd
mov
test
scas
adc
mov
popf
out
jge
lock
inc
adc
sub
mov
bound
push
mov
cmp
mov
inc
pop
mov
or
cwtl
fprem
jle
mov
mov
stos
aam
mov
rol
sbb
or
jnp
wbinvd
adc
push
xor
or
outsl
scas
shl
sub
fdivrl
push
les
add
notl
movl
movl
movl
jmp
mov
jle
pushl
push
pushl
pushl
push
call
sbb
addl
add
xorl
add
movl
sbbl
movl
sub
movl
xor
xor
and
movl
sub
movl
sub
movl
sbb
movl
sub
movl
cmpl
movl
movl
jmp
movl
mov
jb
pushl
pushl
push
pushl
push
call
andl
notl
andl
orl
addl
sbbl
movl
sbbl
movl
xorl
movl
xor
movl
movl
cmpl
movl
movl
movl
jmp
mov
jbe
push
push
push
push
call
subl
adcl
movl
adcl
sbbl
adcl
movl
sub
movl
movl
adcl
movl
negl
movl
cmpl
movl
movl
jmp
movl
jbe
push
pushl
pushl
call
adc
addl
orl
sbbl
notl
adcl
xor
movl
movzbl
xor
movl
cmpl
movl
mov
mov
jmp
mov
je
push
push
push
push
call
xorl
negl
xorl
subl
andl
adc
sbb
movl
inc
movl
mov
xor
mov
xorl
shl
mov
or
mov
mov
subl
push
xorl
push
adcl
push
subl
push
adcl
call
and
mov
sbb
mov
adc
xor
xor
or
add
mov
mov
xor
sub
mov
adcl
jmp
into
mov
and
dec
cmc
dec
mov
int
adc
mull
call
xchg
lock
jmp
push
jno
imul
cmp
push
je
inc
es
cltd
aas
jge
or
or
int3
mov
sbb
rsqrtps
xchg
je
and
jno
push
test
mov
lea
adc
mov
test
mov
jmp
and
inc
xchg
sub
lret
fisubl
or
pop
ja
cmp
mov
bound
mov
and
cmp
or
ficoml
mov
push
andl
adc
inc
inc
int3
xor
inc
icebp
fstp
add
inc
jp
movsb
icebp
jl
push
cmp
mov
pop
and
jb
int
adc
mov
out
add
nop
stos
xor
out
push
xchg
shlb
push
sbb
mov
sar
jg
iret
mov
shrl
mov
addl
cmp
add
mov
loopne
out
cmp
mov
rcrl
sarl
fstl
mov
jmp
dec
xor
dec
xor
adc
decb
data16
pop
addr16
shlb
cmpl
jg
scas
rep
jecxz
cli
cmp
adc
pop
out
hlt
imul
mov
inc
int
int3
mov
xlat
cmpsb
or
mov
lds
icebp
int
or
or
pop
sub
fimull
pusha
aaa
rorb
inc
cmp
fisttpll
icebp
sbb
ljmp
adc
fwait
mov
sbb
cmpsl
hlt
cmc
rorb
mov
jp
out
dec
fstps
fstpt
push
jmp
push
sbb
cmpsl
push
inc
add
mov
jge
lock
or
inc
test
fxch
push
movsb
mov
je
jmp
pop
jecxz
adc
fidivrl
cs
out
fwait
fwait
leave
repnz
cld
imul
push
jne
pop
lret
scas
add
sbb
sbb
out
inc
inc
mov
add
repnz
es
adc
stc
ret
mov
dec
ljmp
and
outsl
stc
daa
pop
nop
lcall
std
sahf
iret
or
addl
sahf
aad
mov
push
sub
and
in
fsubp
pushf
cmp
mov
adcb
mov
fwait
cmp
push
pop
dec
push
pop
pop
fistps
jae
movsb
xchg
jmp
movsb
stos
aas
outsl
xchg
push
mov
fwait
call
sahf
shrb
jge
imul
and
mov
sarl
hlt
in
mov
lods
outsb
in
lods
add
incl
lret
fsub
aaa
out
sub
pop
and
cmp
scas
jmp
sbb
mov
cmp
xor
mov
shlb
jecxz
cmp
negl
xchg
out
fstl
out
roll
mov
push
int3
test
ja
jge
gs
stos
lods
cli
in
pop
lret
outsl
jno,pn
mov
mov
cltd
push
arpl
xchg
push
xchg
stos
xor
pop
cmp
ret
insb
xlat
loopne
xchg
add
dec
ret
mov
mov
mov
pop
lea
mov
orl
mov
or
and
xor
mov
or
andl
xor
movl
cmp
jmp
xlat
test
push
xlat
popa
dec
lcall
cmp
adc
int
adc
mov
and
adc
xchg
fsubrp
xchg
inc
sub
jne
pop
movsb
cmpsl
lock
in
scas
aad
lods
cwtl
pop
mov
insl
shll
xchg
loopne
and
push
pop
ljmp
sub
or
in
pop
hlt
shll
inc
cltd
icebp
cmp
mov
mov
data16
mov
out
out
scas
popa
jae
sub
and
arpl
push
jp
sarl
in
sti
mov
loope
clc
mov
mov
add
jmp
loopne
xor
xchg
jecxz
push
div
decl
ja
push
adc
cld
pop
sub
repnz
lea
out
jno
mov
gs
popf
and
mov
xor
cmpsl
jns
lret
mov
mov
add
jg
negl
xchg
sub
test
sarl
shll
add
stos
inc
cmpsl
pusha
push
mov
mov
pop
movsb
aas
cmp
pop
push
stos
sahf
pop
sbb
jne
imul
outsb
dec
cmpb
setp
mov
rorb
xor
fimull
addr16
movsb
pop
in
loop
stos
sbb
sbb
pop
gs
cli
add
js
dec
ret
and
popf
fdivl
cmp
dec
push
ret
mov
or
jecxz
nop
adc
movsb
pop
mov
push
pop
dec
xor
loop
xchg
aas
ret
mov
add
fld
ficoms
out
imul
faddl
add
lcall
xor
sbb
frndint
arpl
insb
pop
mov
pushf
dec
lret
pushf
nop
lcall
sahf
pop
push
mov
xor
inc
adc
mov
mov
push
jo
dec
xor
filds
jmp
jg
ror
es
mov
in
push
sbb
insb
flds
mov
lods
and
daa
cs
mov
jnp
add
jno
xor
test
jl
in
or
jno
ja
repnz
fisubrl
sub
stos
test
stos
mov
sub
lods
test
mov
sahf
enter
cmpsb
push
mov
adc
pop
dec
sbb
aam
scas
mov
mov
out
ds
and
lret
pop
ficompl
dec
xchg
and
jbe
inc
aaa
out
or
repnz
sub
add
sti
stos
bound
ret
or
test
das
fwait
mov
leave
and
adc
addr16
xlat
jecxz
into
sub
adc
pusha
stos
dec
movb
fisttps
filds
shrb
dec
roll
jecxz
pop
scas
ret
in
jo
and
mov
mov
inc
add
test
decl
push
fistl
roll
sbb
mov
movsl
mul
and
popf
xor
dec
cmp
sti
sub
push
fstp
add
imul
rorb
je
pop
jne
dec
xchg
sub
out
add
xchg
xor
cltd
dec
sub
xchg
leave
sub
jmp
sub
arpl
jle
pop
jae
out
ja
test
ret
xchg
or
lret
pushf
push
orl
scas
xchg
movsl
push
pop
cmp
jne
add
mov
mov
cmpl
mov
movl
movzbl
jmp
movl
jae
push
push
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
shrd
shr
add
mov
mov
andl
shl
xor
addl
xor
or
mov
mov
movl
cmp
jne
mov
cmpl
not
mov
movl
jmp
movl
movl
je
push
pushl
push
push
call
adc
xor
or
mov
adc
not
decl
xorl
sub
and
mov
sub
cmpl
mov
movzwl
mov
jmp
movl
movl
jle
pushl
pushl
call
sbb
adc
add
sbb
sbb
movl
mov
xor
mov
mov
sub
mov
shrd
xorl
jmp
lcall
add
js
xchg
sbb
int
adc
mov
add
hlt
sub
in
daa
sarl
jmp
or
jbe
sbb
movsb
popa
xchg
add
pop
or
inc
pop
pop
pushf
test
fisttpll
inc
mov
and
shll
movsb
mov
or
mov
sbbb
add
arpl
mov
ljmp
push
adc
stos
dec
lock
jl
scas
les
add
dec
rol
inc
es
cmp
loopne
push
out
and
mov
movsb
pop
ljmp
xor
hlt
pop
out
fcmovne
popf
xchg
xor
mov
pop
fstps
stc
imul
popf
add
mov
test
mov
mov
jne,pt
ja
aad
icebp
xchg
inc
mov
fiadds
mov
loop
sbb
sub
jecxz
mov
js
mov
cmpsb
inc
jge
movsl
push
data16
jg
clc
add
das
jo
push
push
loop
cwtl
cmp
or
sbb
lods
and
mov
insl
mov
jecxz
cmp
inc
jg
cmp
xchg
cs
or
sbb
sbb
dec
dec
dec
sbb
mov
jg
cmp
cmp
clc
jle
xor
movb
pop
push
ja
or
mov
jne
mov
xchg
inc
push
loopne
xlat
mov
lock
mov
jns
aaa
push
fisttpll
jge
cmpsb
mov
leave
dec
loop
imul
fmull
out
push
add
xor
mov
add
or
mov
push
insb
lret
xchg
inc
xor
dec
insl
push
lret
aad
cli
push
stos
dec
jp
test
mov
or
adc
scas
or
insl
cmp
add
inc
sti
pop
repz
in
jno
add
imul
notb
lods
sbb
adc
popf
add
mov
mov
mov
lock
repnz
pop
mov
pop
gs
popf
inc
sub
push
jno
jmp
sbb
dec
rolb
mov
into
mov
fnstsw
hlt
dec
push
in
mov
cmpsl
stos
cmp
adc
int3
jbe
and
enter
dec
mov
push
pop
loope
mov
push
mov
adc
std
in
lock
test
pop
dec
popa
loope
and
lcall
andb
xchg
xor
xor
or
mov
mull
xchg
iret
push
ds
add
mov
loopne
test
lcall
push
or
lods
mov
pop
sub
inc
cs
mov
and
mov
xor
cwtl
sbb
cmp
mov
shrl
push
cmp
mov
test
out
in
out
mov
xchg
sbb
jmp
pandn
xchg
je
je
mov
pusha
ds
inc
popa
or
cmp
outsl
jnp
aam
mov
inc
les
sub
hlt
pop
sbb
xor
xchg
jmp
jp
ss
mov
cmp
adc
imul
mov
pop
sbb
divb
push
cmc
test
pop
push
fsts
stos
roll
mov
inc
not
stos
xchg
stos
mov
cmpl
mov
mov
jmp
movl
jle
pushl
pushl
call
sub
add
notl
sbb
xor
dec
sub
mov
xor
orl
shr
sbbl
mov
adcl
xor
andl
or
shl
cmpl
mov
mov
movl
jmp
movl
movl
je
pushl
pushl
call
notl
and
sub
and
not
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
jle
push
pushl
pushl
call
sbbl
adcl
movzbl
sbb
mov
movzbl
and
mov
movzbl
sbb
mov
add
add
mov
mov
mov
shrd
or
shr
cmpl
movl
mov
movl
mov
jmp
mov
je
pushl
call
and
and
sub
or
mov
mov
or
sub
and
mov
mov
xor
shl
adcl
xor
or
xor
mov
mov
shrd
shr
mov
sbb
mov
cmpl
movl
movl
mov
jmp
movl
not
ja
pushl
push
call
mov
xor
or
sub
add
mov
sbb
inc
mov
mov
sub
add
or
mov
sbb
mov
xor
xor
or
andl
shl
lea
subl
mov
mov
andl
shrd
subl
shr
cmpl
mov
movzwl
mov
movl
jmp
mov
movl
jb
pushl
push
push
pushl
call
xorl
neg
or
movzbl
sbb
movzbl
xor
mov
xor
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
je
pushl
call
movzwl
add
mov
add
movzbl
and
or
subl
neg
mov
cmpl
mov
movl
movl
jmp
mov
jge
pushl
call
sbb
xor
inc
mov
sub
mov
adc
adc
cmpl
movzbl
mov
jmp
mov
mov
jl
push
call
movzwl
and
movl
add
sbb
movzbl
sub
sub
xor
mov
xor
subl
or
orl
shl
xor
imul
mov
and
mov
mov
andl
shrd
andl
mov
mov
xorl
xor
shr
subl
mov
mov
sub
mov
xor
adcl
or
sbbl
shl
sub
mov
cmp
mov
mov
movl
jg
or
mov
sub
mov
movl
shrd
mov
xor
mov
sbbl
xor
movl
shl
xor
adcl
or
shr
or
mov
mov
adc
mov
mov
mov
addl
mov
sbbl
shrd
shr
adcl
mov
mov
movzbl
sbb
mov
addl
xor
xor
or
shl
addl
imul
andl
sub
movl
jmp
mov
adcl
mov
notl
shrd
mov
add
mov
addl
xor
movl
shl
xor
or
xorl
shr
xorl
mov
mov
mov
cmpl
mov
mov
not
jmp
movl
mov
jg
push
pushl
push
push
call
xor
xor
xor
sbb
addl
orl
neg
xorl
and
cmpl
movl
movl
jmp
movl
jle
pushl
call
xor
xor
mov
sbb
dec
not
mov
adc
cmpl
mov
mov
mov
jmp
movl
movl
jg
pushl
push
push
push
call
xor
add
or
mov
movzbl
and
notl
adc
or
adcl
sub
mov
shrd
shr
mov
mov
jmp
xchg
icebp
mov
icebp
out
loopne
xor
adc
int
adc
push
int3
xor
push
pop
jge
in
push
scas
and
js
or
insb
and
mov
mov
inc
push
es
movsl
mov
ret
ret
addr16
cltd
xor
mov
out
jne
xchg
pop
rorl
stos
int3
or
inc
xor
cmp
icebp
pop
lcall
sbb
push
jl
cmp
pop
pop
lds
dec
and
mov
and
dec
mov
cld
jmp
pop
ljmp
lods
xchg
or
pop
repz
and
cmc
inc
mov
inc
xchg
lock
ret
outsl
sbb
push
mov
cmp
mov
jns
fstps
enter
cmpsb
mov
scas
shrb
out
xor
add
mov
call
xchg
stc
xor
andb
pop
imull
jge
push
sub
movsl
sahf
adc
xchg
push
jle
cwtl
shll
pop
adc
dec
imul
jecxz
in
push
movsl
or
pop
out
pop
add
jg
das
lock
pop
xor
fsubl
xor
test
mov
jecxz
popf
cs
mov
add
fwait
loopne
xchg
mov
push
aas
mov
pop
push
cmp
dec
and
cltd
cmp
sbb
sub
iret
popf
loope
jno
jmp
fcmovnu
loopne
sub
mov
sub
orb
inc
enter
xchg
push
and
nop
or
dec
dec
jae
test
movsl
btr
ss
insb
leave
lea
fbld
cwtl
pop
call
gs
jno
dec
lret
aad
popa
push
mov
mov
add
or
push
sub
cwtl
sbb
jb
mov
pop
out
cld
adc
push
inc
sub
inc
adc
daa
xchg
sti
xchg
add
mov
pusha
xor
js
lea
push
bound
out
xor
sub
fldt
int3
in
push
push
in
inc
imul
jmp
outsl
mov
aad
jmp
mov
sbb
orb
jmp
mov
adc
xchg
and
pop
mov
iret
js
ds
clc
mov
sbb
insl
aas
inc
std
pushf
push
call
les
mov
mov
mov
sbb
dec
mov
push
ret
adcb
mov
push
sub
xchg
inc
cmp
lds
sub
and
jmp
jb
aad
adc
fs
mov
ja
out
aad
add
popa
mov
shlb
mov
aaa
shl
sbb
je
and
gs
out
daa
mov
adc
imul
jns
add
add
cmpsb
outsb
dec
push
lret
jecxz
mov
push
and
xchg
push
dec
pop
adc
pop
mov
fsubr
pop
jmp
sub
outsl
daa
sbb
repnz
mov
nop
test
shrl
movl
out
cs
popa
adc
mov
pop
ret
pop
imul
mov
mov
mov
xchg
mov
push
cmp
sub
outsl
pop
and
clc
xchg
fidivs
roll
loope
xchg
insb
sti
test
fimull
shll
push
imul
jle
ljmp
sbb
jge
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
jmp
lret
lea
push
push
and
xor
dec
data16
in
adc
int
adc
stc
out
fbld
sbb
lods
xorb
fs
aam
ret
movsl
int3
sbb
sarl
xor
mov
adc
cmp
out
loope
inc
pop
insb
or
pop
xchg
clc
mull
in
out
lock
out
mov
sbb
and
dec
test
std
das
jne
outsl
dec
push
fisttpll
test
sahf
pop
adc
or
or
add
push
sti
mov
idivb
inc
cmpsl
xchg
repz
inc
inc
stc
mov
mov
inc
sub
daa
xchg
adc
lea
push
pop
jns
push
andb
adc
adcl
shrb
dec
cmp
pop
mov
push
jno
add
inc
sarl
subl
mov
xchg
push
jne
imul
aam
pop
out
and
es
adc
into
mov
sub
lds
dec
push
or
ficoms
lret
cmc
jg
xor
int
aam
mov
leave
test
aaa
cmc
jmp
fsubrp
mov
rclb
mov
pop
inc
cwtl
dec
pop
mov
stos
pop
daa
in
pop
mov
scas
js
jo
test
mov
out
out
sarl
loopne
imul
pushf
loop
sbb
icebp
pop
add
add
or
fcmovnb
out
popf
adc
xchg
pop
push
push
push
pop
adc
mov
roll
pop
mov
xorb
in
cmp
rolb
pop
pushf
jmp
lcall
roll
mov
rcrb
fimuls
sbb
outsb
inc
jge
popf
lret
cmp
xchg
aaa
imul
cmp
out
mov
xchg
sbb
loop
mov
lahf
imul
add
sub
cld
das
cmpsb
jp
sub
or
es
cmc
scas
push
stos
push
pusha
jae
mov
inc
adc
in
pop
and
mov
inc
mov
lock
shlb
xchg
xchg
scas
or
andl
pop
mov
pop
call
xorb
and
mov
xchg
subl
mov
call
movsl
popa
push
stos
aam
enter
out
rcrb
xor
ja
ret
repnz
insl
fdivl
mov
shlb
jg
imul
rorb
fidivrs
add
xor
dec
fisttpl
cmp
xchg
in
fsts
out
call
xlat
ret
movsl
test
ljmp
insb
testl
sub
lret
mov
add
jnp
mov
subl
hlt
mov
js
xchg
jae
arpl
fisttpll
std
dec
or
stos
rcl
mov
cmp
pop
cmp
lcall
faddp
stos
arpl
push
dec
out
cmp
outsl
dec
shr
aaa
movb
mov
push
je
jnp
mov
les
xchg
fs
mov
or
aad
jnp
push
mov
rcl
xchg
jle
and
iret
sahf
adcl
cs
sub
lock
imul
inc
mov
mov
mov
mov
shrd
shr
jmp
fsubrs
fldenv
adc
rep
adc
adc
int
adc
lock
stos
sbb
leave
outsb
sub
xlat
imul
and
cmp
mov
cli
xor
negl
or
jo
sbb
test
lret
fdivrp
jo
ljmp
cmc
popf
cmp
jae
dec
push
push
in
into
push
mov
fisubl
mull
imul
setge
push
mov
fmulp
cmp
xchg
fidivs
mov
mov
lahf
adc
mov
mov
in
cmpsb
decl
lods
out
push
sub
cmp
jne
lret
or
push
xor
in
inc
call
sub
hlt
ljmp
add
inc
ss
mov
push
add
movsl
xchg
fsubrs
mov
sbb
daa
inc
sbb
sbb
out
sbb
les
inc
push
mov
mov
or
xorl
cltd
mov
add
push
mov
or
mov
mov
fdivs
push
scas
jo
mov
addr16
inc
hlt
or
fsubrs
inc
inc
pushf
sbbl
inc
adc
or
pop
adcb
lods
enter
push
adcb
mov
add
pop
stos
out
daa
test
cmpsl
mov
dec
loope
data16
cmp
outsb
daa
loopne
cli
jns
or
outsl
xorl
repnz
movsl
mov
inc
lods
sbbb
push
loop
inc
push
call
xchg
les
and
lea
mov
mov
xchg
xchg
pop
push
aam
add
or
pop
in
data16
fwait
mov
icebp
iret
sbbb
sbb
dec
int3
or
push
xor
fcompl
and
data16
mov
xor
jbe
xchg
pop
sub
ljmp
or
jb
shrb
pop
les
pop
xchg
adc
xchg
push
inc
fcmove
repnz
sub
in
push
cmc
and
rclb
aas
lea
mov
push
fdivrl
xchg
dec
popf
gs
adc
pop
push
jge
mov
popa
lock
fldenv
sub
cmovns
push
xor
repz
cmp
sbb
std
pop
xchg
add
je
or
add
outsb
push
pop
dec
xor
test
or
pushf
inc
push
loope
jle
lcall
cmpsb
pop
popf
jmp
jmp
popf
mov
dec
or
std
inc
mov
loop
pop
xor
test
jo
je
cmp
pcmpgtw
aam
mov
dec
in
xor
in
lock
adc
mov
adc
and
nop
les
outsb
jmp
jg
mov
jns
lock
lret
xor
mov
xor
mov
dec
jp
movsl
jne
xor
jae
mov
adc
andb
outsb
int3
xchg
stos
sbb
or
pop
dec
dec
test
insl
insb
sahf
cwtl
xchg
lret
mov
jb
mov
ret
pop
mov
gs
mov
xchg
inc
lds
or
sbb
jbe
pop
jae
push
iret
fsubrs
cmp
sbb
inc
scas
pop
std
cltd
jb
ss
lods
sbb
mov
mov
out
data16
cmc
rolb
sahf
jg
rorb
push
xchg
push
or
fisttpll
aam
mov
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
jmp
orb
mov
fidivrs
ficoms
adc
adc
adc
inc
mov
xor
lds
add
gs
sub
hlt
adc
sub
iret
jge
add
push
test
xor
popa
or
xrelease
mov
sbb
xor
mov
pop
inc
jb
scas
push
cmp
mov
add
cli
mov
xor
icebp
cmp
xor
hlt
das
lods
push
jnp
mov
cmp
push
das
jle
xchg
sti
aas
mov
pop
daa
adc
push
push
or
mov
jge
pop
push
insb
cmp
popa
ja
xchg
clc
std
jge
jmp
je
enter
sarl
jns
dec
orl
fmuls
cmp
sahf
add
test
push
push
cmpsl
inc
xchg
enter
mov
pop
mov
or
mov
xchg
int3
xor
jno
leave
push
mov
mov
into
mov
cmp
adc
inc
iret
mov
add
fs
rorl
mov
fldcw
pusha
xor
in
or
out
orl
xorb
jge
xchg
outsb
xor
mov
xchg
mov
push
test
cmp
movb
lea
pop
scas
dec
mov
test
sbb
pop
test
mov
lods
scas
cmp
dec
data16
fcmovb
lods
push
outsb
in
xlat
push
repnz
aad
jne
repz
test
xchg
or
outsl
leave
fiaddl
imul
nop
out
push
pop
sti
shrb
fwait
jae
adc
sbb
xor
outsl
ficoml
je
mov
xor
jae
cwtl
push
cmp
or
sbb
pop
test
scas
ficoml
lods
imul
mov
and
pop
inc
out
jne
shll
inc
adc
xor
jecxz
movsl
sbb
aam
outsl
cmp
adc
inc
scas
mov
pop
mov
ss
cmc
or
xchg
dec
dec
cld
out
push
out
mov
stos
data16
and
sbb
or
fdivp
jo
xor
es
inc
xchg
adcl
lea
jbe
call
or
sub
stos
pop
test
cmp
xor
aaa
movsl
inc
xchg
mov
or
mov
lea
je
icebp
out
xor
sbb
adc
les
xchg
loopne
je
lods
add
add
jns
xchg
adc
inc
movsl
shrb
les
push
xor
jno
cmc
jns
xor
jge
mov
data16
and
das
sub
popf
add
sbb
cs
in
and
mov
xlat
mov
inc
cltd
pop
fidivrs
dec
jl
pop
inc
fs
sub
pop
call
insb
out
adc
mov
sub
leave
pop
dec
mov
repnz
into
repz
popf
stc
add
push
rclb
scas
int3
pop
add
sbb
pop
cmp
out
adc
lret
push
inc
fwait
rep
stc
adc
mov
inc
enter
out
pop
out
push
xchg
cmp
jno
sub
movsl
call
lcall
imul
int3
dec
cs
shr
mov
mov
shl
jmp
fmuls
sbb
cld
add
push
aam
adc
adc
adc
hlt
push
daa
adc
fisubrl
add
pushf
std
inc
loop
mov
lods
ret
jecxz
push
add
and
aad
mov
aaa
sarb
push
lods
jns
push
or
orl
push
mov
xchg
and
or
movl
stos
ret
mov
dec
lcall
mov
pop
pop
pop
out
push
cmpb
jg
push
cltd
mov
mov
fwait
imul
lds
dec
mov
or
mov
dec
push
adc
sub
es
ja
fisubrs
insl
adc
cmp
adc
sub
rcll
test
mov
scas
pop
daa
pusha
mov
or
imul
pop
rorb
sub
mov
cs
mov
sarb
mov
adc
jne
push
xor
mov
leave
adc
mov
pop
sbb
leave
or
movsl
ficompl
mov
rorb
sub
add
lahf
in
ja
test
test
mov
cld
por
or
in
dec
jnp
add
add
xor
pop
mov
mov
test
imulb
cmp
pop
fwait
sub
xlat
pop
xor
addb
repz
add
in
lds
hlt
pop
xchg
in
dec
mov
and
subb
adc
das
cmp
rorb
xor
inc
dec
repz
outsb
xor
push
dec
lcall
mov
mov
add
adc
outsl
and
push
repz
ret
adc
psrlq
mov
test
jp
mov
mov
xor
xlat
and
mov
sbb
jmp
jbe
mov
sub
popf
out
jae
inc
inc
xlat
mov
inc
int3
mov
sbb
movl
repz
or
mov
jno
inc
cmpb
jns
or
or
xor
pop
das
das
jge,pt
scas
movb
jp
push
arpl
pop
inc
sbb
pop
dec
push
repz
dec
inc
and
ds
hlt
aad
push
xorl
daa
daa
push
push
mov
mov
mov
shl
lret
sbb
les
push
dec
fwait
or
mov
out
push
jnp
stos
das
jmp
popf
sub
push
inc
sub
pusha
cltd
adc
rclb
std
adcb
xchg
dec
gs
and
les
mov
mov
aas
sub
and
mov
fisubrl
inc
enter
mov
mov
ds
inc
xlat
xchg
ds
and
mov
sub
rcll
outsl
insb
add
fs
inc
jae
or
and
sbb
insl
aam
dec
sbb
cwtl
or
jb
pop
jnp
xchg
clc
imul
fnstenv
inc
fstp
jp
dec
lahf
pushf
cli
adc
mov
enter
sbb
sti
add
adc
pop
shll
inc
lods
push
inc
and
add
sahf
test
mov
xor
je
incb
fldt
jge
insl
hlt
mov
test
xor
xor
xchg
sub
xchg
push
inc
shlb
pop
xlat
test
dec
in
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
dec
or
push
sub
loopne
fcmovb
mov
adc
adc
inc
xor
das
loopne
jl
decl
repnz
mov
add
cld
xchg
add
das
negb
sub
jl
add
pop
loope
cmp
jg
or
inc
inc
inc
jnp
lea
xchg
and
mov
xor
mov
xor
sahf
xor
mov
mov
sub
inc
adc
cmc
repnz
arpl
inc
mov
adc
dec
and
mov
jl
xchg
insl
nop
sub
inc
ja
and
aad
ror
in
mov
dec
cmc
sub
insl
sbb
mov
and
sub
popa
jg
pop
mov
lods
mov
jns
std
ret
cmpsb
sub
and
jae
or
push
push
mov
xor
fnstenv
inc
pop
sbb
adc
xor
in
mov
pop
shll
sbb
pushw
xchg
adc
inc
in
xchg
test
repnz
mov
jg
add
leave
and
jbe
add
rcr
or
idivb
aad
aad
pop
ljmp
loope
repz
jno
pop
pop
stos
fisubl
lahf
out
inc
sbb
jp
rcll
pop
fimuls
cmp
pop
sarb
stos
inc
negl
or
sti
sbb
fiadds
int3
pop
cli
adc
fdivl
sub
mov
jnp
rcll
icebp
adc
lea
pop
mov
int3
inc
nop
mov
in
test
or
mov
dec
repz
or
loope
mov
cmc
adc
addb
loop
lahf
hlt
mov
push
xchg
inc
dec
imul
xchg
xor
mov
push
or
out
sub
loop
add
mov
sbbl
leave
mov
or
push
stos
lret
dec
inc
dec
fstpl
xor
mov
test
mov
sbb
and
out
sub
sahf
dec
pop
pusha
push
idivb
test
pop
dec
out
loope
mov
xlat
flds
xchg
add
daa
cmp
jo
std
negb
shlb
xchg
idivb
cmp
and
cmp
xor
outsb
sahf
cmp
movsl
add
lcall
and
mov
int3
int
cmp
dec
pop
sti
lahf
and
push
scas
mov
repz
ss
test
mov
jge
mov
popa
mov
jle
add
xchg
mov
sbb
aam
call
and
sub
mov
push
mov
sbb
les
mov
push
jl
xlat
jl
mov
pop
jbe
jecxz
roll
sub
jl
aaa
cmp
int
sbb
jb
xor
lds
std
add
mov
pop
push
outsb
mov
cmp
stos
or
test
mov
es
and
aaa
cmc
fidivrl
mov
mov
test
xchg
inc
and
jecxz
or
cmc
jae
sbb
mov
cs
xor
push
rcll
and
add
jo
jp
insb
imul
sahf
ds
les
fistps
xor
xchg
add
sbb
outsl
jno
in
xchg
jae,pt
cld
or
cmp
sub
sbb
mov
mov
stos
ret
jl
fists
push
shr
mov
mov
xor
mov
xor
or
mov
dec
not
jmp
adc
push
inc
daa
sbb
lods
insb
xchg
adc
lods
ljmp
adc
fstl
inc
cld
push
dec
shll
notl
mov
mov
sub
adc
iret
sub
cwtl
adc
and
sbb
dec
pop
xchg
lods
cmpsl
push
ficompl
pop
popa
cld
popa
outsb
pop
das
test
scas
or
mov
cltd
lret
or
mov
mov
imul
stc
and
sahf
push
jbe
mov
xchg
inc
lret
scas
mov
cmc
xchg
lea
pop
jl
popf
fcmovnbe
xchg
loopne
repnz
int3
cmpsl
jg
cs
popf
popf
scas
addr16
ret
push
in
shl
rcl
pushf
subl
in
push
out
inc
stos
fnstsw
push
jle
sbb
xor
mov
pop
fiadds
push
arpl
xor
xor
aas
pop
int3
mov
in
xchg
test
enter
or
rcll
cli
mov
sti
pop
jno
xlat
push
pushf
addr16
aad
or
cmp
sub
inc
ss
cwtl
push
add
mov
pop
outsb
jmp
and
mov
add
lods
jae
cmpb
push
add
imul
inc
lods
pop
mov
fsts
add
pop
sbbb
inc
and
sub
dec
insb
jno
adc
sub
std
add
or
nop
aas
scas
je
jae
fcompl
idivl
jp
je
and
cmp
std
mov
lock
fldt
xchg
cmpsb
inc
scas
ror
lret
jp
or
ror
je
add
mov
loope
aaa
mov
inc
and
mov
mov
fwait
mov
outsb
cmpsb
add
dec
jnp
lret
adc
xor
aas
dec
mov
adc
sbb
push
sbb
push
jb
inc
mov
mov
pop
or
fbstp
bound
cmpsl
or
movsb
bound
imul
fidivs
mov
outsl
push
sbb
push
add
adc
mov
fucomi
sbb
lods
ret
push
ja
mov
imul
mov
idivb
mov
xor
lds
call
jp
inc
xchg
mov
sbb
sbb
ret
adcl
sahf
add
mov
movsl
push
mov
xlat
pop
test
push
in
dec
aad
loope
hlt
subb
pop
lea
pop
xchg
mov
dec
xor
dec
cmp
std
or
jo
cmp
mov
inc
xchg
bound
rclb
jns
js
mov
xchg
fldt
sub
jg
clc
adc
sbb
cbtw
jg
into
dec
mov
std
fnstenv
cmc
ret
jae
popf
push
push
push
mov
lahf
mov
call
sub
lret
mov
jecxz
popa
repz
xorl
pop
call
or
sbb
std
out
loop
mov
ror
aas
add
sahf
sbb
loop
pushf
dec
sbb
dec
cmp
sti
ficompl
mov
jle
xor
push
clc
mull
addr16
insl
fidivrl
adc
pusha
outsb
cld
rclb
pushf
fstl
add
xchg
inc
pop
cmp
pop
repnz
leave
test
js
push
outsb
cld
push
jge
pushf
mov
in
cli
push
cmp
inc
rcr
dec
repz
xchg
jne
scas
imul
ret
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
jmp
jp
lds
sub
jge
nop
js
ret
int
adc
shll
jle
nop
ret
pop
mov
into
pushf
bound
cmp
push
sbb
jbe
add
popf
scas
clc
rcrb
xlat
xchg
jnp
mov
outsb
iret
insl
fidivrl
lahf
sub
xor
das
cmpsb
outsl
jge
in
xchg
adc
mov
divl
adcb
dec
mov
lock
cmpsl
sahf
in
cmp
das
pop
sub
fiaddl
inc
outsb
das
xor
adc
mov
jmp
mov
pop
add
adc
icebp
andb
jns
in
or
cmp
shrl
cmovo
adc
sub
push
das
fdivr
enter
cli
cmc
sti
shrb
iret
and
int3
bound
out
gs
push
sub
adc
shrb
jmp
movsb
in
stos
fdivs
pop
pop
inc
sub
push
add
scas
mov
ds
icebp
cmpsl
jb
inc
jae
mov
xchg
jg
or
adc
jmp
in
cmp
jmp
add
xlat
lock
lods
imul
shll
inc
dec
inc
push
je
in
or
out
or
cmp
or
mov
push
xor
sub
shrl
rorl
xchg
adc
mov
or
cltd
add
mov
dec
add
lock
ja
in
lds
rorl
and
jmp
popf
inc
push
inc
aam
movsl
or
outsl
cld
int3
lcall
xor
outsl
rcrl
cmpsl
lea
stos
negb
cs
or
or
shl
add
fldl
add
arpl
or
scas
and
ret
jne
mov
mov
ret
fsubrp
es
jge
mov
fstpt
fs
pop
loopne
xchg
dec
fs
and
test
dec
ljmp
push
mov
sub
pop
ret
push
xlat
dec
sub
push
out
xchg
jg
add
cltd
mov
mov
mov
in
pop
dec
leave
mov
inc
dec
dec
xor
gs
inc
data16
inc
pop
cmp
ljmp
mov
sbb
mov
and
mov
fwait
sbb
aam
mov
pusha
js
cltd
pop
je
and
push
and
cmp
inc
inc
fstps
out
mov
out
sahf
jne
add
into
out
and
repz
jl
aas
imul
in
mov
lds
xor
lods
stc
dec
adc
orb
cmp
repnz
ljmp
loopne
sbb
push
inc
ret
rorl
lock
out
mov
mov
sbb
pop
cmp
mov
xorb
andb
add
mov
popf
xor
dec
ret
shll
icebp
inc
sub
movsb
adc
pop
dec
repz
and
add
jle
add
push
adc
jge
jnp
popf
subb
or
add
cmp
mov
push
in
jbe
roll
fstpt
adc
adc
pop
fstp
out
adc
mov
cmp
shrl
push
add
inc
mov
inc
sub
inc
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
jmp
imul
sbb
cmp
adc
adc
adc
pop
int
loopne
movsl
xor
divb
inc
push
sti
add
lcall
dec
jae
xchg
out
jae
fstpl
pushf
mov
shr
stc
fmuls
imull
jmp
mov
mov
loope
fcompl
cltd
sub
and
mov
add
sbb
xor
mov
mov
push
fldl
mov
and
adc
les
cmp
xchg
out
add
mov
jb
xorl
xlat
sub
cmp
sahf
pop
test
ror
xor
movl
pop
data16
fstpt
sub
loopne
out
ficoms
addb
pop
add
imul
pop
repnz
cmc
movsb
mov
xchg
push
hlt
pop
setno
jnp
push
aam
push
mov
jb
pop
or
pop
xor
and
pop
jo
fsubrs
dec
mov
and
adc
cmpsb
nop
in
inc
daa
and
xchg
mov
sub
sbb
loop
repz
out
pop
pop
fsts
dec
lret
lret
mov
arpl
or
aad
in
int3
fmull
rclb
mov
or
mov
inc
xor
mov
or
idivl
stos
and
das
inc
mov
jbe
cmc
adcl
fisttpll
cmp
adc
iret
mov
in
int3
sbb
push
mov
into
mov
jne
jno
scas
stc
jae
sub
arpl
inc
out
cmp
adc
push
pop
aaa
pushf
push
add
out
insb
popa
and
push
inc
inc
cmp
cmp
jo
or
fstps
sbb
imul
int3
insl
mov
pop
xchg
sub
cmc
xor
sub
es
or
pop
popf
in
adc
push
sbb
sub
add
push
dec
adc
cmp
lods
sbb
jnp
iret
call
imul
hlt
fisttpll
xchg
xchg
inc
addr16
out
cmp
int3
stos
jbe
in
out
clc
imul
in
in
nop
cmpsl
movsb
pop
xorl
push
cmp
adc
sarl
test
arpl
add
movsb
mov
mov
bound
mov
pop
movb
enter
push
inc
shl
xor
loop
sbb
jo
or
les
mov
in
sbb
pop
aam
dec
inc
pop
push
enter
in
xchg
adc
xchg
pop
loopne
sbb
jmp
sbb
mov
out
cltd
js
icebp
add
je
fmuls
repz
push
jmp
xchg
xchg
mov
jns
in
shl
out
cmp
xchg
xchg
bound
mov
sub
jecxz
aam
push
fwait
popf
ja
aaa
inc
aad
sti
movl
inc
in
idivl
sbb
mov
ja
rcrl
or
xchg
jnp
in
fdivr
test
dec
pusha
imul
cmpsl
push
and
jge
call
pop
lods
mov
cld
sbb
sbb
outsb
cmpb
push
mov
xor
xchg
add
push
adc
dec
stc
shld
sbb
enter
decl
imul
fsubr
or
sbb
mov
inc
inc
test
cmp
mov
xor
mov
lods
test
xchg
or
arpl
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
jmp
repz
mov
pop
pop
lods
clc
or
adc
adc
adc
int
ljmp
and
cmp
sub
fsts
inc
jnp
pop
addr16
bnd
jle
mov
or
jne
dec
jg
nop
adc
test
stos
jmp
sbb
sbb
cmp
int
je
data16
jp
pop
cli
jo
push
stos
cltd
test
adc
add
xor
loope
or
mov
in
cmpsl
enter
cmp
lcall
xor
xchg
ficomps
inc
stos
lahf
xor
and
aam
rcrl
data16
mov
mov
aad
push
pusha
and
lods
sub
pop
jle
pop
out
xchg
inc
dec
sub
dec
mov
pop
leave
sti
mov
adc
movsl
fucom
addb
or
ja
pop
enter
inc
and
addr16
cmp
ljmp
cmp
out
sub
sub
imul
jge
fdivl
xorb
push
inc
jle
fwait
mov
ja
push
test
subl
pop
mov
xor
cltd
pop
xor
mov
mov
xor
sub
stc
jo
cmp
and
jl
fsubrl
and
leave
dec
inc
jp
mov
cld
xchg
sbbl
mov
call
decb
mov
jmp
and
leave
push
mov
aaa
adc
lods
mov
adc
mov
andb
nop
mov
mov
stos
movsb
pop
adc
addr16
inc
imul
push
push
sbbl
and
push
mov
pcmpgtd
xor
mov
push
cltd
xchg
out
out
out
test
add
adcl
scas
sub
cli
xorl
stc
push
aam
stos
jmp
mov
sbb
and
xor
mov
fcomps
scas
in
in
shll
jo
jp
or
aad
sbb
fwait
sarl
mov
inc
inc
xchg
mov
cli
push
adc
outsb
mov
mov
push
ret
xorb
and
xor
insb
or
int3
fs
les
flds
pop
jnp
xor
cltd
sti
xlat
xchg
mov
in
xchg
decb
ret
or
std
bound
mov
mov
jne
cmpl
pop
test
roll
dec
pop
cwtl
lods
push
mov
int
clc
imul
and
popa
mov
sub
xchg
xchg
loope
xchg
aad
inc
int
subl
add
cmp
scas
cld
adc
cmp
cmp
cmp
data16
mov
sahf
dec
push
or
inc
sbb
dec
sub
mov
and
sub
push
outsb
sub
cmp
xchg
or
sub
jne
imul
ss
push
jmp
pop
sbb
lea
push
mov
push
or
fld
jne
mov
cmp
cmp
notl
pop
mov
shl
jno
cmp
pusha
mov
push
inc
ds
call
pusha
sbbb
lcall
jo
bound
fsubrp
cmp
mov
lret
mov
push
sbb
sti
pushl
and
std
in
cmpsb
jecxz
xchg
pop
fs
fcomps
sub
sbb
ficoml
sub
lcall
faddl
ffreep
fstpl
push
inc
cwtl
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
jmp
mov
push
jle,pt
mov
push
test
adc
adc
adc
and
or
add
inc
mov
popa
repnz
lret
push
and
loopne
sbb
faddl
rcrb
mov
js
jb
xchg
int3
pop
sbb
imul
mov
mov
pop
rcrb
js
jp
test
les
ljmp
jecxz
jl
filds
sub
mov
popf
inc
fnstsw
ds
bound
in
mov
push
sti
aas
je
aad
and
jnp
sub
jb
and
bnd
push
inc
cmpsl
dec
push
or
imul
dec
pusha
mov
mov
mov
int3
push
addr16
fcomps
push
sub
jmp
lock
inc
inc
jo
sahf
push
sbb
inc
sbb
or
lretw
shrb
push
sbb
mov
je
sbb
andl
lods
add
stc
jnp
mov
lods
cmp
add
jne
lret
or
add
pushf
int3
subl
fldt
je
xor
hlt
call
hlt
mov
cltd
push
sbb
daa
sub
or
fs
xchg
in
js
popa
inc
sar
sti
adc
or
inc
push
inc
sbb
jne
les
push
and
xchg
sbb
pop
lcall
or
fs
jp
push
negl
and
stos
cs
jne
pushl
aas
ficoms
fidivrl
xor
scas
xor
aas
or
nop
mov
cmpsb
inc
push
test
add
cmp
sbb
nop
jge
rcrl
and
mov
ja
xor
cmp
add
cld
add
xor
xchg
repnz
sbb
push
jb
test
xchg
pop
or
das
mov
mov
cmp
les
imul
jmp
jecxz
push
into
movsb
and
jns
stos
fsqrt
mov
pop
aam
sbb
cmp
div
loop
mov
sbb
push
mov
rclb
dec
inc
adc
mov
xlat
push
fwait
pop
cmp
or
or
inc
cwtl
xchg
mov
push
mov
mov
adc
mov
mov
popa
rcrb
cmp
sub
pop
pushf
or
fstps
imul
mov
repz
test
push
mov
push
jp
sub
lds
xchg
std
inc
push
fldt
vrcpss
and
or
outsl
stc
repz
pop
cmpsl
mov
in
xor
mov
clc
ss
cmc
xchg
push
lahf
jl
mov
scas
inc
je
xchg
add
call
mov
lds
rolb
or
adc
addl
loopne
lock
pop
lods
jmp
jb
cmp
leave
mov
je
repz
clc
leave
mov
in
mov
cwtl
inc
adc
jb
lret
in
or
jb
and
jge
inc
cwtl
icebp
frstor
fadd
test
mov
xchg
rclb
movsb
or
jl
sub
movsl
sub
jno
jbe
mov
adc
jbe
pop
pop
loop
and
int
add
pop
lods
mov
in
scas
mov
fs
xchg
sti
pop
mov
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
sbb
sbb
out
stos
popa
push
into
lods
je
adc
int
adc
das
ficoms
in
fisubrl
out
in
ficompl
sbb
and
scas
xor
xor
inc
hlt
adc
cmpsb
jns
mov
add
imull
cmp
cmp
cmp
nop
addb
ds
push
inc
xor
pusha
sub
mov
std
jnp
test
rorl
sti
push
leave
stc
cld
push
mov
xchg
ret
lret
sbb
mov
xchg
sbb
mov
call
dec
sub
cmpsl
in
movsl
and
sub
jne
fs
sub
imul
push
inc
pusha
movsl
mov
mov
jne
inc
jns
cmp
push
bound
mov
movl
into
push
or
aam
push
xor
hlt
jae
pop
int3
jbe
fwait
call
scas
sub
cmpl
sbb
mov
cmpsl
out
push
inc
arpl
mov
mov
xor
pop
mov
add
inc
or
scas
xchg
mov
aas
mov
mov
push
es
ds
out
pop
aaa
pop
fildll
xchg
mov
and
test
fldcw
and
jno
lcall
jecxz
pop
cld
lea
scas
repnz
in
jmp
es
xchg
fstps
lock
push
xor
sub
aaa
cltd
adc
push
xchg
lcall
jne
mov
mov
adc
addr16
ljmp
lahf
push
add
jecxz
lret
lds
mov
daa
popf
push
adcb
cmp
pop
mov
icebp
movsl
and
insl
cmp
int3
ret
movsb
mov
testl
push
sbb
aas
scas
adc
orl
dec
movl
adc
out
idivl
rclb
jge
mov
xlat
push
add
push
xchg
mov
insb
ljmp
push
xchg
std
dec
inc
imul
clc
push
xor
fnstcw
test
sbb
mov
into
mov
sbbl
cs
mov
fistpll
out
lret
jge
es
jg
pause
mov
xchg
push
ret
loop
and
or
loopne
lahf
mov
push
sahf
sbb
repz
sub
jno
inc
cmp
push
shr
xchg
mov
popf
sub
mov
add
out
inc
pop
ret
repz
sub
negl
mov
sub
in
xor
das
or
jmp
push
add
cltd
cs
pop
movsl
sbb
cmp
jae
mov
ret
mov
push
pop
inc
pop
arpl
mov
fiadds
faddl
push
fmul
fstpl
xrelease
pop
gs
pop
or
mov
push
jl
enter
cmp
cmp
inc
push
lea
insl
pop
stos
ja
lock
lds
pop
into
mov
xchg
test
nop
push
add
gs
out
call
sbb
imul
data16
inc
inc
pop
dec
mov
sbb
orl
pinsrw
gs
ret
sbb
popa
dec
jne
dec
unpcklps
addr16
les
int
mov
jbe
mov
mov
movsl
lcall
movsl
imul
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
jmp
adc
jmp
repnz
ret
push
imul
int
adc
out
jns
xor
jge
pop
lea
in
sti
cmp
dec
test
mov
ss
nop
hlt
roll
lret
nop
pop
push
xor
cli
jne
push
aam
or
lret
inc
or
ja
das
out
push
sub
popa
bound
in
pushf
dec
sub
nop
cld
push
adc
ret
push
dec
xchg
xchg
scas
xchg
je
loope
das
orb
or
orl
adc
mov
shll
mov
adc
xchg
repnz
inc
mov
movsl
inc
movsb
dec
in
lea
sahf
push
stos
mov
xchg
in
mov
cli
xchg
sbb
repnz
mov
mov
mov
je
std
dec
pop
mov
xor
cmp
shrl
cltd
int
stos
test
test
dec
flds
hlt
inc
fdiv
add
mov
ret
inc
pop
mov
lahf
pop
and
lahf
addb
scas
sbb
xlat
mov
push
in
and
mov
nop
xor
imul
and
enter
loop
mov
ljmp
arpl
mov
mov
insb
dec
in
dec
adc
lahf
fiaddl
testb
mov
jno
outsl
lds
mov
pop
lock
jae
mov
mov
enter
cmove
mov
popa
and
push
fcomps
jmp
mov
add
xor
scas
jne
push
psubb
push
or
test
adc
lock
cmc
add
test
adc
mov
xchg
outsl
sub
mov
adcl
je
test
add
lock
fcomp
dec
xchg
mov
add
xor
push
mov
sbb
lar
cli
rol
fiadds
in
ja
jo
cmp
jno
movsl
test
ret
repnz
pop
les
push
xor
push
je
pop
rorb
dec
inc
aaa
rclb
push
bound
test
mov
repz
outsl
and
lds
inc
or
add
xchg
std
inc
cmpsl
xchg
cmpsb
dec
fwait
xor
mov
lea
mov
imul
out
cmp
filds
sbb
jne
add
sbb
shr
in
ljmp
add
pop
popf
gs
call
out
xchg
testb
xchg
cmp
jae
push
push
sbb
xor
frstor
rorl
pushl
xor
ficoml
push
mov
and
out
cmp
pusha
insl
add
addl
cs
jo
and
jne
pop
lock
clc
test
push
xor
das
xchg
adc
xchg
loopne
in
out
ret
dec
ficompl
xor
mov
dec
push
int3
je
and
es
xor
xchg
jns
jecxz
jg
shr
test
test
fwait
lcall
inc
imul
ljmp
jns
mov
push
imul
or
mov
inc
cmpsl
test
jno
loop
arpl
test
sbb
push
jnp
rol
repnz
xor
mov
repz
or
add
in
mov
je
fildl
cmp
rolb
lret
fmuls
mov
jmp
mov
jmp
or
jge
pop
push
dec
cltd
cmc
leave
lcall
xchg
adc
int
adc
test
push
ljmp
xchg
inc
or
and
movl
je
loopne
les
shll
test
cmc
fimull
enter
loopne
fdivs
mov
sbb
inc
mov
mov
push
sub
mov
into
mov
jle
mov
cmp
and
mov
sub
ficompl
push
jnp
jnp
and
pop
mov
mov
ret
mov
and
pop
inc
or
sub
pop
jmp
jo
mov
cmpsl
shll
les
int
outsb
mov
mov
popf
pop
dec
mov
int
xchg
xchg
or
and
xchg
mov
movsb
jg
insl
inc
js
inc
sbb
sbb
notl
pop
out
xchg
sub
ficoms
cmp
ds
xchg
and
sti
pop
jae
loopne
je
or
pop
push
clc
jnp
scas
jl
loope
in
repnz
or
or
add
popa
dec
out
inc
js
or
movsl
ja
mov
sar
inc
sub
adc
mov
xor
repz
ficoml
mov
push
loope
ret
adc
in
imul
or
add
in
xor
push
mov
jmp
dec
mov
les
insl
mov
sbb
cmp
pop
or
mov
jecxz
dec
sbb
out
sub
insb
loopne
push
push
mov
stos
ss
cld
mov
notb
mov
andl
inc
cli
mov
mov
xchg
movsl
mov
rclb
add
jmp
loope
int3
adc
sub
add
mov
arpl
adc
cmpsl
sbb
pop
pusha
inc
push
and
imul
and
mov
insl
cmp
ljmp
pminub
mov
jno
add
or
sub
sbb
negl
xor
adc
push
mov
test
xorb
in
mov
dec
loope
mov
xchg
jb,pt
cs
insb
mov
cmp
inc
jle
leave
add
jmp
push
ret
inc
pop
adc
mov
push
fsts
insl
inc
add
scas
or
fidivrl
or
sbb
mov
jns
xor
and
xchg
push
adc
or
pop
lahf
pushf
push
mov
mov
jo
jo
stos
shl
inc
cmp
orl
pop
addl
mov
leave
dec
in
fimuls
loope
mov
loop
mov
nop
push
lods
lods
mov
shr
and
loopne
and
sub
rolb
mov
arpl
movsb
push
cli
jmp
xor
imul
shlb
das
in
pop
mov
or
push
out
ljmp
push
lret
push
in
fsubs
lret
insl
int
test
mov
pushl
mov
jne
pmulhw
mov
adc
stc
jp
or
add
jae
xlat
jb
xlat
lock
mov
inc
ror
inc
iret
rcrl
rcl
and
mov
mov
insb
idivl
repz
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
jmp
stc
sub
xor
test
lcall
adc
dec
mov
cmc
lret
jl
ss
int
cvtpi2pd
and
xchg
mov
inc
fnstenv
inc
xchg
xor
mov
push
sub
jo
or
xor
jle
in
addb
int3
mov
add
cmp
xchg
cmc
mov
inc
push
adc
orb
mov
sub
pop
mov
std
push
test
ret
fcoms
sbb
into
stos
mov
imul
mov
sub
lock
fdivrl
pop
xchg
push
push
add
pop
shlb
in
ss
lock
jp
mov
leave
orl
fdivrp
lods
fidivs
lea
sbb
fdivrl
dec
and
push
cld
scas
jmp
pop
pop
mov
sahf
clc
xchg
lods
rorb
out
mov
inc
jne
lcall
adc
and
dec
or
push
jl
or
push
push
jl
test
push
pop
rcr
xchg
clc
dec
fcoml
es
ljmp
jmp
xor
cld
js
cmpsb
inc
fucomi
mov
pop
loop
or
cli
mov
rol
jno
rcrb
sub
call
mov
pop
xor
and
jge
pop
sbb
aas
jle
fcoms
push
or
orl
mov
daa
rcrl
inc
dec
mov
mov
cmp
repz
sub
jo
addl
push
cwtl
or
pop
push
popa
test
aad
mov
les
stos
push
mov
sub
fwait
mov
or
mov
mov
dec
dec
sbb
dec
fiaddl
sahf
mov
mov
lcall
xchg
ds
fnstenv
icebp
mov
sub
sbb
lret
enter
arpl
pop
push
xor
dec
stos
stos
in
clc
sbb
mov
sbb
aaa
ss
inc
or
jp
mov
loope
sub
iret
push
fisttpl
mov
les
fcomps
iret
popa
mov
mov
pop
jb
ret
movsl
or
sub
icebp
negb
mov
pop
sub
mov
adc
sbb
sub
pushf
and
fiadds
mov
inc
push
xlat
cltd
mov
sub
or
les
add
mov
dec
cmpsb
or
cli
dec
shrl
cmp
leave
and
push
pop
cmp
push
add
mov
rcl
inc
jns
inc
nop
fbstp
or
dec
mov
lcall
sbb
sti
mov
outsl
scas
inc
mulb
xlat
sbb
dec
push
scas
add
dec
ds
inc
jge
bnd
std
pushf
fxch
in
mov
std
sub
xor
inc
mov
mov
andb
out
and
rclb
sub
es
mov
xchg
dec
xchg
lods
or
mov
movsb
cmp
sub
push
sub
inc
cmpsl
aad
out
leave
xchg
imul
cmc
pop
mov
mov
xor
movsl
mov
call
ror
and
mov
mov
cmc
loope
inc
mov
cmp
mov
pop
movsb
popf
lods
int
xorl
push
sbb
test
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
jmp
dec
popf
shll
pop
das
popf
ffreep
mov
cmp
test
adc
adc
adc
jle
loope
and
enter
rcrl
mulb
cmp
inc
test
pop
repnz
fisttpl
push
push
mov
fildl
mov
or
inc
and
jnp
sti
mov
aam
loop
and
out
add
sub
cmovo
mov
sub
push
bound
fcmovne
shr
cmp
adc
inc
and
outsl
push
jecxz
inc
sub
loope
clc
xchg
adc
ret
jne
shlb
add
test
mov
mov
mov
loope
adc
ljmp
lcall
nop
lock
in
sahf
adc
stos
bound
das
pop
sahf
enter
daa
inc
mov
sarb
in
icebp
cmc
add
or
jg
pop
xorl
inc
xchg
imulb
add
out
fdivl
pop
xchg
mov
and
xchg
xlat
inc
push
adc
stc
pusha
xchg
dec
xchg
loope,pt
jo
push
es
mov
sbb
es
lcall
loop
xchg
and
test
adc
push
sbb
inc
xorl
pushf
or
xchg
filds
fcmovnu
xchg
hlt
jno
add
xchg
cmp
mov
pop
iret
adc
aas
push
andb
sub
ret
cs
and
pop
and
push
mov
repz
rcll
sahf
jb
pop
ret
pop
pop
loope
pusha
mov
mov
lret
inc
jno
sub
into
addr16
ret
in
pop
daa
js
repz
addr16
or
xchg
shl
mov
cmp
ja
rcr
rcrl
push
fdivl
ds
xchg
in
rclb
in
cmp
jb
push
or
or
cwtl
clc
add
xor
sbb
adc
in
mov
bound
lds
xchg
adc
loope
mov
xchg
or
fimull
nop
es
cwtl
dec
or
iret
jbe
in
add
xchg
cmp
ret
mov
xchg
jbe
addr16
mov
mov
sub
pop
or
mov
pushf
and
cltd
push
adcb
jns
inc
call
xchg
mov
and
fnstsw
das
cmp
movsl
pop
add
jno
in
test
das
fisubs
or
lods
lods
repz
fisttpl
cltd
xlat
sub
int
in
enter
in
lcall
seto
out
push
fisttpl
xlat
rcll
movsl
into
xor
cmp
add
into
jmp
in
fwait
ljmp
jl
filds
sub
mov
pusha
push
and
ds
insb
mov
outsl
mov
test
add
loope
repnz
in
push
cmpsl
repz
out
inc
ljmp
inc
sbb
inc
jne
adc
mov
lods
mov
cmp
adc
aaa
dec
nop
cwtl
bound
pop
xchg
jbe
mov
dec
lods
cltd
out
outsb
jp
roll
sub
jb
mov
in
inc
push
cmp
pop
cmp
repz
lret
or
test
cwtl
lods
or
adc
or
movsb
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
imul
imul
stc
scas
lret
jl
adc
adc
adc
push
stc
mov
push
cmp
push
adc
shll
fldl
cmp
push
lea
adc
cltd
ret
in
loope
pop
and
xchg
mov
sbb
shl
movsb
push
cli
iret
aaa
push
pop
out
xchg
adc
fldt
call
ds
arpl
je
addr16
test
rcrl
sub
loopne
jnp
jle
cs
adc
xlat
jge
xor
add
or
mov
ficoml
and
hlt
and
inc
in
and
xchg
lock
cmpb
inc
push
push
outsl
inc
jl
or
movb
xchg
pop
sub
xor
or
adc
clc
call
mov
or
data16
cmp
mov
xchg
scas
adc
fwait
movsl
je
adc
mov
mov
pusha
repnz
lcall
mov
dec
xchg
fmull
jge
adc
stc
lret
test
das
test
push
inc
or
shlb
pop
mov
sub
call
push
lods
in
lods
aam
adc
ds
adcb
pop
adc
subb
add
mov
jnp
jmp
out
xchg
push
fbld
lcall
or
mov
xchg
mov
jb,pn
lds
mov
out
pop
inc
ja
aas
jmp
fcmovnbe
call
jnp
daa
cmp
jmp
gs
loopne
jle
add
or
mov
movsl
jae
repz
pop
xor
je
pop
mov
sti
mov
jge
lods
lret
push
push
mov
addb
std
out
mov
lret
sbb
add
jne
mov
stc
cmp
add
pop
push
and
push
xchg
insl
out
out
mov
dec
mov
mov
adc
bound
mov
dec
push
imul
pop
inc
push
add
pop
cmp
push
aaa
xorl
jecxz
xor
pusha
mov
push
inc
mov
sti
lods
xor
int
jp
int
xlat
push
jbe
sub
decl
mov
scas
or
cmpsl
mov
ja
pop
hlt
push
jl
xor
lods
cld
lahf
cmpsb
popw
mov
push
pop
push
popa
push
sahf
fidivrs
pushf
out
aas
sahf
inc
bound
in
pushf
inc
jp
mov
mov
outsb
dec
repnz
scas
and
ret
int
imul
or
scas
push
rorl
out
stos
test
es
sub
pop
sub
fs
adc
sbb
mov
sub
jns
out
xor
push
setge
dec
jo
xor
push
dec
cmpl
enter
repz
mov
and
push
cmp
out
fwait
lret
and
in
pop
jge
je
add
mov
inc
notb
or
xor
fstpt
xlat
and
or
cs
push
test
shll
sbb
arpl
js
jmp
mov
push
in
push
out
frstor
stc
std
jge
bound
daa
pop
out
push
hlt
scas
sbb
push
and
and
fidivrl
addr16
adc
call
mov
jmp
xor
sbb
stos
push
fdivrs
mov
adc
adc
dec
das
dec
leave
mov
sub
icebp
mov
dec
cwtl
hlt
jno
loopne
insl
or
jecxz
cmp
aam
jmp
jno
cmpsb
pop
mov
daa
adc
dec
aam
js
and
pop
mov
push
and
xchg
push
mov
mov
jecxz
pop
out
out
mov
xchg
push
scas
inc
sarl
sub
std
pusha
push
jg
gs
insb
in
mov
or
mov
cli
jmp
std
mov
bound
lret
cmp
ja
mov
les
fstl
insb
pop
and
int
popf
es
imul
into
inc
adc
ljmp
cmc
jecxz
push
xchg
divb
subl
mov
dec
pop
pop
mov
lock
jb
in
insb
jg
adc
aas
and
xor
shr
ret
pop
popa
pop
gs
inc
mov
js
popa
nop
outsl
xchg
test
jmp
ja
xchg
sbb
mov
addr16
mov
dec
aam
xacquire
pop
arpl
test
jno
out
out
int
jecxz
xchg
inc
cmp
popf
pop
mov
jae
rol
pop
fadds
adc
dec
xlat
mov
arpl
les
mov
sbb
or
add
rcl
arpl
in
aas
push
add
pop
sti
jo
inc
outsl
xor
mov
mov
bnd
pop
lcall
aaa
mov
rorl
outsb
mov
aad
xor
mov
jo
adc
add
sub
jb
movsl
lock
lcall
or
mov
xor
mov
jnp
pusha
xor
xchg
and
mov
fiaddl
add
xor
cmp
cmp
test
inc
push
test
nop
ret
repz
jmp
sbb
dec
pop
jge
cmp
jg
ret
sti
xor
aam
in
pop
adc
inc
add
pop
xor
lret
sub
daa
loope
mov
cltd
jmp
int3
sbb
pop
jg
lea
mov
xchg
or
imul
mov
sub
mov
sbb
inc
out
push
popa
hlt
mov
cmp
add
loope
ja
orb
push
sbb
mov
lock
jp
test
push
test
testb
lcall
jae
loopne
inc
add
ja
sbb
inc
xor
xchg
cmpsl
lahf
ja
push
loopne
push
stos
lret
push
imul
loopne
fwait
sbb
jecxz
call
iret
xor
fldcw
in
aaa
leave
xor
arpl
ja
dec
daa
jbe
jno
pop
pop
test
add
and
in
testb
cwtl
mov
xor
mov
xor
popa
push
add
jmp
xor
inc
sub
int3
in
cmp
cmp
into
dec
cmpsl
xchg
repz
sbb
pop
push
sub
in
pusha
sbb
out
add
repnz
aam
mov
into
es
stc
mov
sub
pop
inc
mov
mov
add
push
mov
xchg
roll
sbb
mov
jne
scas
test
inc
sub
pop
dec
and
pop
dec
loopne
dec
add
gs
shrd
jmp
ja
jle
sub
xchg
mov
jmp
ret
jb
adc
adc
adc
or
and
pop
push
sbb
test
faddl
mov
into
mulb
js
xchg
dec
cmpsb
fs
aad
adc
aaa
mov
decb
jne
aaa
ja
mov
loop
cwtl
je
fists
and
cmp
jmp
pop
dec
or
xchg
cmp
aas
xor
push
xor
xchg
pop
test
push
pop
cmpsb
cmpsb
andb
and
jle
adc
insl
mov
lods
cs
lds
std
notb
pop
pop
out
pop
stc
lcall
ss
mov
jbe
in
add
jb
scas
pop
add
and
jnp
cmpsb
mov
mov
lock
repnz
lods
lcall
sub
sbb
add
add
dec
out
cli
pop
pop
pop
sbb
mov
mov
cmp
inc
mov
cmpsb
pop
cmp
outsl
mov
adc
sbb
xor
jbe
sub
jne
iret
dec
xchg
aam
lods
xchg
jnp
ja
mov
sti
out
cwtl
rorb
jg
mov
dec
arpl
lods
xchg
push
gs
jo
and
fidivrl
xor
mov
popf
add
fisttpl
in
sub
push
xlat
into
pop
leave
test
pop
sub
ret
ljmp
out
cmpsl
cmc
test
adc
aaa
xchg
scas
add
aam
mov
jbe
lret
jle
mov
adc
cmp
clc
lods
push
inc
fs
pop
jp,pt
out
pop
mov
sub
pop
cltd
out
push
xor
out
adcl
and
push
cwtl
in
dec
add
mov
add
mov
incb
lods
or
out
push
push
add
loopne
cmpsl
enter
mov
inc
xchg
std
add
mov
aas
pop
push
stos
es
outsb
inc
fs
addl
pop
pop
aaa
inc
idivl
js
mov
test
into
sbb
mov
inc
dec
sbb
movsl
adc
add
xchg
jmp
outsb
cmc
bound
out
mov
test
ret
bound
pop
aad
jb
add
jno
aad
mov
mov
jb
push
in
push
mov
inc
out
dec
mov
or
xor
adc
cltd
cmp
push
repnz
dec
jg
jno
in
mov
push
adc
ffreep
dec
call
jns
enter
add
test
adc
add
ljmp
jmp
sbb
sahf
addr16
repnz
cmp
and
dec
or
ja
shll
shrb
out
mov
in
nopl
in
pusha
jmp
outsl
inc
bnd
test
in
xor
xchg
fnstcw
sbb
rcrl
xor
scas
ret
mov
inc
out
mov
outsl
pop
cli
scas
loope
data16
adc
jno
gs
pop
mov
sub
cmp
push
pop
sub
mov
sbb
jecxz
add
test
lods
insb
iret
notl
scas
xor
and
or
jmp
xchg
adc
jle
add
xorl
arpl
bound
mov
mov
out
cmp
addb
aaa
scas
mov
and
xchg
test
mov
pushf
mov
mov
sbb
shr
shr
xor
push
xor
mov
mov
mov
push
jmp
bnd
test
jmp
push
adc
adc
adc
mov
loopne
lods
cmp
jns
mov
dec
dec
adc
sti
jns
mov
je
mov
inc
ret
scas
cmp
adc
aam
jg
fildll
mov
and
or
iret
jl
dec
xchg
mov
or
dec
scas
sub
xchg
into
mov
ss
cmc
into
xchg
out
cltd
cmp
in
or
push
cmp
mov
cmp
pop
cli
push
inc
and
pop
add
imul
sub
pushf
xor
mov
dec
sarb
mov
in
fmull
sub
fildll
sub
enter
movups
xor
push
xchg
cli
and
mov
push
fcoms
pop
xchg
mov
sar
outsb
arpl
jp
scas
sub
pop
out
push
sub
inc
xchg
inc
jecxz
fwait
test
mov
mov
sbb
xor
sub
les
imul
cmpsl
sarb
xor
add
adc
xchg
call
xchg
cwtl
push
adc
push
js
cmp
push
loopne
cmp
aam
and
inc
mov
fucomi
es
pop
imul
pusha
fs
mov
adc
mov
dec
xor
push
mov
cmp
fldl
ss
cmp
ret
inc
cmpl
mov
sub
inc
mov
cmp
xor
inc
jbe
lods
pop
adc
push
aam
ja
inc
gs
or
daa
mov
cmpsb
pop
and
iret
iret
loope
nop
into
and
ljmp
inc
xchg
pop
xor
sbb
roll
fistpl
add
inc
imul
xchg
mov
in
mov
push
mov
out
shl
mov
adc
dec
fistpll
jne
rorb
xchg
lds
int
lahf
mov
movsb
cld
cmc
mov
push
sbb
mov
add
mov
rol
xchg
mov
mov
shrl
mov
jbe
lcall
inc
jmp
lock
cmp
sub
mov
inc
js
xchg
jmp
in
push
inc
nop
pop
pop
jl
cmp
test
dec
repz
stos
test
ret
nop
jne
mov
test
jae
test
pop
push
cmp
ret
sarl
clc
jb
mov
push
sahf
lock
imul
aad
cli
imul
scas
mov
jecxz
push
xor
or
dec
hlt
inc
or
xor
rcll
je
or
adc
pop
xchg
and
push
mov
mov
lret
cmp
inc
xor
cmp
in
loope
lods
js
or
xchg
xchg
inc
insb
fwait
mov
stc
adc
mov
jb
outsl
sbb
popa
push
shlb
xor
cmp
lea
and
mov
push
je
ds
dec
lcall
insl
scas
mov
lock
xor
xor
jno
adc
es
sub
push
mov
inc
and
fnstsw
pop
enter
add
jg
inc
out
in
cwtl
flds
adc
dec
pop
push
mov
fcomps
sbb
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
sbbl
jmp
test
sub
sub
jl
lret
bound
adc
adc
mov
inc
xor
and
dec
jae
scas
push
mov
cmp
ss
mov
andb
jnp
push
mov
repnz
mov
shlb
js
ret
adc
in
mov
inc
mov
and
jmp
arpl
ja
loopne
shll
es
mov
jae
neg
je
mov
out
scas
pop
jp
or
cmpsb
jmp
push
mov
or
adc
xchg
sbbb
mov
jmp
scas
cmp
inc
push
mov
aam
fdivs
popf
push
sbb
and
jns
insl
mov
push
dec
mov
out
mov
stos
lods
rorb
imul
or
adc
xchg
cmpsb
jl
cli
lods
movsl
clc
jecxz
popf
repnz
std
test
sub
leave
repnz
mov
inc
sahf
fidivrs
dec
in
jne
cs
arpl
iret
pop
sbb
push
push
jnp
fistps
sahf
fsts
shrb
clc
loope
or
int
fisubl
loopne
pushf
xor
arpl
loop
push
mov
pop
pop
pop
out
push
icebp
mov
subl
loop
les
adc
aam
or
roll
aam
loopne
inc
mov
out
push
push
out
add
cmc
dec
mov
jp
mov
arpl
cmp
out
pop
push
insl
int3
cmp
sbb
lea
fcmovbe
mov
test
push
scas
push
fnstenv
imul
push
stos
icebp
xchg
dec
insb
adc
adc
imul
mov
or
and
cltd
lcall
and
inc
lcall
pop
xchg
pop
in
dec
hlt
fmull
xchg
lds
jp
rorl
std
add
mov
lcall
das
push
sarb
jg
adc
fwait
scas
pop
or
stos
popa
repnz
frstpm(287
stc
mov
test
jne
rorb
stc
in
adc
mov
ret
fdivs
jle
pop
adc
les
xchg
fs
pop
mov
jae
pop
add
jmp
shlb
movsb
test
leave
iret
xchg
sarb
dec
mov
leave
cmc
inc
pop
sbb
popf
push
aad
fldcw
out
mov
outsl
pop
cmp
mov
adc
jae
xchg
push
pop
pop
into
dec
arpl
mov
or
lea
cli
mov
mov
out
adc
fidivs
cmp
jmp
fldt
sub
xchg
dec
in
or
aam
xor
sahf
in
shll
push
iret
jb
push
insb
bound
inc
push
lcall
std
scas
xlat
rcrl
push
pop
inc
lahf
xor
sbb
outsl
sti
rolb
xor
or
add
adc
scas
aaa
sbb
or
roll
ss
jmp
test
fwait
mov
loope
mov
popa
adc
std
lret
pop
push
xchg
mov
aam
daa
push
push
std
lock
das
mov
out
xor
mov
addl
add
inc
aas
jbe
inc
add
sbb
es
mov
fucomip
cmp
popf
enter
insb
inc
jge
fcmovbe
xchg
dec
in
sahf
xor
popa
adc
lret
ret
in
gs
iret
loopne
faddl
sub
rolb
pop
add
and
push
es
sahf
popa
pop
inc
pop
int
add
add
jle
scas
cwtl
jg
clc
int
pop
adc
aad
add
lods
rol
add
int
add
shr
ret
movzwl
sub
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
add
movl
or
mov
mov
cmpl
mov
mov
mov
movl
jmp
movl
movl
ja
pushl
push
push
pushl
push
pushl
pushl
call
xor
adc
andl
adc
sub
add
addl
movl
cmpl
mov
mov
movl
jmp
movl
mov
jne
call
or
movzbl
sub
mov
and
or
mov
or
xor
mov
or
movl
adc
movl
sub
movl
push
movl
xorl
movl
and
push
sub
movl
sbb
mov
andl
mov
push
push
addl
push
call
xor
mov
mov
movl
push
movl
or
adcl
push
or
xor
xor
push
andl
push
call
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
not
je
push
pushl
push
pushl
push
pushl
pushl
pushl
push
pushl
push
push
pushl
call
orl
notl
adc
mov
sbb
add
and
inc
mov
addl
push
orl
push
addl
push
push
decl
call
cmpl
movl
mov
mov
jmp
movl
jne
pushl
push
call
add
add
adc
mov
xor
add
sub
or
mov
and
mov
mov
or
cmpl
movzwl
movl
movl
jmp
movl
movl
jae
pushl
call
adc
xor
xor
adc
orl
add
mov
add
mov
subl
movl
mov
xor
movl
mov
xor
add
sub
and
movl
adcl
movl
jmp
fcmovne
mov
test
push
push
sti
jle
pop
adc
xor
adc
loop
jmp
lds
inc
addl
fldl
sub
jl
jp
sahf
push
add
lds
and
xchg
inc
cmp
and
out
int3
cmp
mov
sub
sub
ds
shrb
stos
and
hlt
lcall
push
aad
ds
je
adc
loope
imul
out
jb
sbb
flds
add
jmp
clc
sbb
jp
cmpsl
inc
jbe
aam
sbb
inc
stc
leave
gs
out
daa
xor
mov
and
mov
jmp
jns
cmc
xchg
arpl
sahf
pusha
out
mov
out
out
shr
aas
sti
loop
push
push
pop
aam
mov
movsb
sub
dec
out
or
sub
or
rol
fists
xchg
lahf
sbb
xchg
iret
jge
inc
popf
xchg
fldt
or
out
scas
cld
mov
xchg
jge
fldcw
outsb
cmp
divl
pushf
jg
pop
push
mov
dec
test
ret
push
mov
enter
cmp
or
inc
lock
movsl
xchg
jge
sub
loope
mov
xchg
pushf
jmp
lret
stos
std
lcall
or
xor
not
ss
pop
lret
sarl
lret
xchg
fsubrl
frstor
sub
jp
sub
mov
inc
ja
push
or
cld
test
fidivl
adcl
scas
aam
inc
mov
mov
ss
js
in
sub
xorl
popf
in
or
xor
stos
in
cwtl
cmp
jmp
fidivrl
mov
test
imul
mov
test
push
out
aam
in
adc
push
test
fsts
loop
lahf
repz
or
mov
mov
fimull
enter
jnp
enter
push
outsl
or
shlb
and
imul
push
repz
lret
int
fisubl
dec
loope
loope
jmp
gs
shlb
out
cs
nop
xlat
les
sahf
aam
lea
and
aas
adc
outsb
push
mov
fwait
outsl
xor
mov
mov
cmp
incl
lods
mov
push
addb
scas
lea
je
pop
mov
cmp
dec
add
iret
push
mov
add
inc
js
aad
nop
push
lret
ss
imulb
dec
clc
jp
inc
adc
xor
push
mov
mov
test
and
xor
fs
enter
pop
xchg
push
jbe
into
leave
lret
out
push
scas
fwait
les
xor
adc
adc
bound
mov
arpl
mov
arpl
fldt
jge
push
repz
cmp
sbb
stos
out
adc
xor
mov
adc
sub
pop
repnz
dec
cmpsl
adcb
mov
inc
fwait
mov
jge
push
jae
mov
out
stos
inc
xchg
aaa
cmp
inc
push
jo
xlat
mov
leave
cmpsb
adc
daa
push
ret
int
inc
lahf
xor
sahf
insb
mov
push
push
call
sub
lcall
sbb
addr16
into
mov
jl
sbb
leave
loop
cmc
or
push
and
adc
lea
mov
and
cmpsl
or
push
jb
inc
lock
shl
jno
xchg
jb
movsb
and
mov
ret
lret
aaa
fistpl
decb
loope
movl
cmpl
not
mov
mov
movl
jmp
movl
mov
jg
pushl
pushl
call
add
orl
sub
adc
movzwl
add
mov
mov
sbb
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
jmp
in
mov
sbb
sub
jle
jle
js
push
adc
xor
adc
dec
vpandn
mov
push
add
dec
test
leave
cli
cmpsb
cmp
add
jmp
pop
popa
or
and
aaa
rorl
push
imul
jg
pushf
xchg
fsubs
imul
sbb
sub
push
lea
lea
xor
pop
pop
lcall
out
stc
dec
jnp
jno
dec
addl
jnp
sub
dec
aam
push
cmp
aad
mov
mov
repnz
pop
sbb
popl
mov
shrl
popa
addr16
dec
aam
or
dec
jns
pop
sub
pop
in
push
adc
lods
int
out
cmc
shlb
mov
ret
popf
rol
xorb
cli
outsb
mov
aad
ds
cmpsl
fisubrs
inc
or
push
out
and
ljmp
sub
lret
push
mov
in
mov
xchg
mov
sbb
push
repz
jge
mov
or
cmpsl
mov
repnz
inc
nop
add
jns
mov
jp
imul
test
repz
add
les
movsb
fistl
nop
in
dec
push
lcall
dec
xchg
out
xchg
xlat
fldenv
imul
test
jge
push
test
add
mov
cmpb
movsb
or
out
cmp
adc
loope
add
add
xlat
in
sbb
addr16
and
or
aad
cmp
fsubrl
inc
pop
movsb
push
adc
inc
or
nop
stos
loopne
jecxz
rcll
mov
push
inc
out
gs
push
adc
mov
mov
pop
xor
stos
push
lcall
push
fdivs
cs
pop
add
push
dec
sar
jle
push
jbe
pop
fwait
in
adc
clc
stos
std
mov
sub
cmpsb
dec
mov
mov
imul
lods
sbbl
add
jmp
sub
and
jbe
cmpb
xchg
leave
nop
sbb
popf
mov
cmc
mov
mov
sub
test
mov
and
and
shrb
stc
mov
jmp
push
aad
inc
or
loopne
mov
mov
leave
lods
xchg
pop
push
jmp
or
popl
push
insl
subb
lods
cltd
xchg
stos
jnp
xchg
sub
lea
daa
call
adc
fdivl
add
je
mov
lods
sbb
out
mov
lret
lods
testl
and
dec
daa
in
icebp
in
loop
add
or
mov
adc
xchg
adcl
mov
cmpsb
mov
ret
or
push
ret
fists
mov
pop
mov
imul
sub
or
fldcw
mov
pop
pop
clc
add
inc
imul
dec
pop
sub
add
add
orl
inc
mov
cmpsb
movsb
or
sahf
jb
xlat
xor
xchg
ret
int3
in
mov
ss
fs
test
add
rcl
inc
sbbl
lret
pop
push
cmc
mov
jle
cmovs
mov
cmpsl
ljmp
sbb
and
clc
adc
and
mov
scas
push
ds
add
cmp
and
rep
xor
outsl
std
pop
cmp
cwtl
aaa
inc
mov
add
adc
xorb
cmp
push
mov
mov
lods
aas
in
push
jecxz
add
cli
pop
pop
faddl
fwait
push
mov
outsl
or
cmp
lret
frstor
push
and
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
jmp
enter
pop
xor
push
push
add
adc
adc
adc
sbb
int3
xor
hlt
mov
shufps
shr
rcl
incl
clc
orl
test
cwtl
push
cmp
pop
mov
fsubs
insl
add
push
fsubs
push
cmp
leave
jecxz
test
leave
mov
lock
ret
add
add
adc
sbb
adc
or
adc
inc
adc
bound
repnz
mov
cmp
mov
lcall
stc
pop
in
ljmp
bound
or
jae
jcxz
sub
das
mov
adc
pop
jp
xchg
and
in
xchg
imul
js
dec
enter
mov
or
xor
sarb
push
pop
andl
out
add
and
inc
dec
and
dec
sahf
mov
movsl
lret
lds
icebp
fwait
test
dec
push
adc
pop
cmpsl
aaa
push
popa
mov
adc
push
adc
pop
notl
fcmovnb
scas
arpl
jmp
pop
sbb
shll
mov
cmp
jo
ss
hlt
lea
out
sub
mov
xor
adc
int
add
mov
out
daa
cltd
push
imul
sub
repnz
mov
aaa
in
xor
aad
or
dec
xchg
or
aad
sub
mov
flds
push
push
adc
sub
pop
xchg
outsb
add
inc
insl
push
fistl
mov
or
mov
cltd
push
lea
shlb
test
outsb
jne
jb
fistpl
push
out
fwait
cld
mov
jle
cmc
pushf
fcmovnbe
mov
sbb
outsb
sub
sub
mov
mov
jp
pop
and
inc
sbb
movsl
aam
add
cmpsb
lcall
mov
inc
mov
sbb
sub
jl
mov
push
mov
add
pop
or
jb
lret
mov
clc
push
std
out
adc
in
cmp
mov
mov
iret
xchg
jne
rep
mov
es
push
jo
sub
jle
sbb
cld
mov
jns
push
xor
cmpsl
and
jno
adc
inc
test
test
inc
in
pop
jbe
inc
or
sub
movsl
movsl
xchg
jp
jns
inc
inc
push
les
push
jnp
add
xchg
pop
cmp
mov
mov
sahf
xchg
sahf
lret
adc
mov
pusha
adc
adc
jns
pop
and
mov
push
mov
pop
cli
cltd
les
das
mov
ja
pusha
je
hlt
fcoms
sub
sub
out
out
mov
pop
ret
push
push
fistpl
jbe
sti
notl
in
xor
mov
sbb
mov
in
jmp
gs
mov
in
jbe
xor
incl
cmp
mov
xchg
adc
andb
arpl
mov
or
lret
pop
sbb
inc
or
sarl
sub
mov
andl
push
or
inc
xor
stc
imul
dec
dec
adc
xor
mov
lods
subl
rcll
cmpsb
lock
movsl
pop
cmp
add
adc
push
aam
mov
sub
std
cmovp
pop
pop
push
pop
adc
push
icebp
and
aaa
mov
push
add
scas
or
fabs
add
fsubr
xchg
jp
lcall
sub
sahf
sub
pop
cs
or
cli
repz
and
push
in
movsl
inc
pusha
or
sub
add
cmp
call
lods
enter
push
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
jmp
pushl
and
push
mov
gs
adc
xor
adc
cmovle
lods
lock
fs
andb
push
int3
push
xchg
mov
fs
xchg
rol
add
xor
hlt
fsts
jecxz
arpl
je
fcoms
cmp
and
popa
int3
jae
movsb
popa
mov
dec
cli
xchg
jmp
xchg
jecxz
cmpsb
fistpl
js
fidivrs
xlat
add
jmp
out
jge
fmull
xor
ja
xchg
xor
out
test
inc
cltd
mov
cwtl
pop
lahf
in
fnsave
adc
jmp
or
sub
data16
jle
pop
mov
jg
insl
les
test
fbstp
cwtl
or
mov
xlat
aam
inc
fcmovnu
push
sub
lea
mov
cmp
sub
ja
sbb
nop
inc
les
in
dec
cltd
cli
rclb
ror
rcl
fldenv
lods
adc
xor
shlb
aam
mov
push
mov
hlt
ret
sub
sahf
cmp
test
leave
adc
jbe
or
leave
lcall
or
cmp
adc
leave
push
jo
inc
idivl
dec
dec
jns
dec
add
xchg
mov
pop
pushf
inc
pop
je
ljmp
sub
int3
lock
mov
mov
xchg
mov
pop
fidivrl
sub
and
pushf
ss
xchg
lret
pop
addb
sub
jmp
aad
mov
gs
sbb
gs
adc
orl
pop
daa
sbb
mov
fdivr
inc
imul
jp
xchg
leave
xchg
shlb
pop
inc
imul
or
in
sbb
push
cmpsb
jge
mov
push
in
cli
int3
dec
leave
out
adc
dec
aas
push
push
sbb
out
test
xchg
rclb
xor
mov
mov
les
cli
jg
jno
mov
ror
push
bnd
in
bnd
adc
add
enter
fsts
clc
ret
stos
fcmovne
loope
xchg
fldenv
mov
inc
in
jns
outsb
xor
jb
cmp
icebp
adc
arpl
push
xchg
insl
lods
cmp
add
lods
sub
repnz
out
mov
popa
jb
lds
out
adc
sahf
test
sub
xor
inc
xor
in
dec
stos
enter
xchg
cmp
inc
movsl
rorl
xor
ds
xchg
movsb
mov
add
stos
push
adc
jg
mov
neg
and
out
addr16
orl
nop
call
outsl
and
cmpsb
sbb
lcall
sub
in
pop
sbb
pop
std
push
aam
ljmp
mov
jg
aad
jo
jb
push
gs
add
xchg
int3
inc
dec
in
pop
push
out
les
ret
mov
cld
mov
popf
sub
dec
lret
inc
pop
jae
mov
dec
add
or
cmp
mov
insb
jnp
shl
test
mov
lds
popa
les
sub
mov
mov
lcall
jne
lea
pop
pop
mov
add
sbb
mov
sbb
push
pop
pop
add
das
mov
adc
sbb
lods
mov
mov
loop
stos
lock
sar
push
int
add
xchg
fldt
add
pop
cmp
jle
movsl
dec
and
sub
inc
mov
ljmp
in
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
jmp
adcl
dec
in
enter
jle,pn
cmp
adc
adc
adc
leave
aam
pop
ja
ja
leave
stc
clc
movsl
push
mov
enter
les
sbb
lea
add
or
outsl
cmp
addr16
pop
lahf
inc
sbb
pop
xor
test
push
adc
inc
mov
daa
bound
xchg
cltd
test
add
scas
sbb
lods
sbb
insb
imulb
in
or
and
or
xor
pop
cmp
adc
int3
and
xchg
or
stos
push
scas
imul
cmp
pushf
test
imul
aam
test
imul
and
mov
in
cmp
ja
in
push
xor
jb
jecxz
scas
inc
jl
cwtl
nop
adc
or
sub
mov
mov
mov
das
xchg
push
aad
add
xchg
add
loop
test
daa
cmpsb
mov
jne
cs
arpl
dec
cmpsl
push
jne
sbb
sub
xchg
xchg
repz
stos
enter
iret
jle
add
aad
inc
lret
push
ja
ret
mov
push
idivb
jne
xchg
in
mov
pop
push
ret
sub
dec
gs
ljmp
dec
inc
jge
out
jmp
push
ss
sbb
mov
mov
test
in
mov
pop
push
add
pushf
add
scas
out
dec
inc
and
ja
imul
movsb
push
mov
inc
mov
rorl
push
sahf
mov
push
mov
adc
movsl
enter
push
mov
dec
incb
shll
xchg
mov
push
cmp
dec
pop
pop
and
int
orl
aaa
mulb
outsb
jmp
mov
dec
sbb
arpl
sti
rorl
in
pop
sti
fxch
ds
add
mov
ja
test
mov
or
insb
or
jo
adc
sub
pop
cld
xor
xor
lret
sbb
dec
andl
xor
iret
or
or
bound
stos
test
pop
or
xor
out
push
jns
std
into
cmp
xlat
mov
xor
pop
andb
cmpl
sar
mov
test
pusha
clc
fdivl
push
cmpsb
add
into
ret
xor
and
call
imul
in
dec
sahf
pop
int3
push
rorl
cmc
addb
dec
inc
outsb
repz
mov
pop
test
xchg
cld
inc
push
clc
les
lea
hlt
jae
test
mov
push
sbb
xchg
popf
jb
mov
stc
ficoms
xor
out
notb
and
pop
sbbl
test
sbb
in
lds
gs
loop
loope
pop
add
mov
js
inc
cmpsl
mov
jbe
shl
xor
test
gs
lods
test
jne
fistl
shr
hlt
mov
cmpsl
in
out
in
cmp
int3
xchg
jmp
push
ss
popa
cmp
clc
negl
xor
pop
inc
in
dec
out
jecxz
icebp
dec
in
pop
loopne
rclb
pop
or
adc
loop
jb
mov
dec
jl
in
test
mov
inc
jmp
mov
stos
cld
and
mov
ss
idivl
cs
xor
and
mov
arpl
jmp
sub
iret
sub
in
aaa
mov
fiaddl
dec
sub
dec
pop
popa
out
andb
fistpll
lcall
pusha
js
xor
incl
ret
std
or
mov
add
cmp
jae
mov
jmp
js
jb
sub
cmp
mov
mov
xor
adc
adc
adc
pop
xchg
lret
cmp
inc
jnp
xor
mov
sbb
jnp
lcall
or
aaa
xlat
jmp
test
inc
xchg
mov
push
inc
rcrl
adc
ljmp
adc
es
jbe
cmc
sub
sub
jne
call
xor
mov
push
add
std
pop
dec
mov
gs
cld
push
dec
mov
push
arpl
stos
imul
push
daa
inc
sub
inc
stos
insb
fcmovne
lret
int3
stos
mov
outsb
cltd
cmp
push
sahf
into
aam
mov
dec
inc
adc
sbb
clc
fimuls
sub
dec
bswap
or
call
and
cs
xchg
jnp
test
mov
push
je
and
xor
int
fnstenv
pop
add
xor
shll
neg
mov
test
cltd
push
insb
cmp
cmc
scas
punpcklwd
int3
icebp
imul
outsb
xchg
mov
xchg
lea
mov
bound
cmp
sbb
aad
ret
out
pop
out
mov
loope
ret
mov
xchg
in
cmp
push
aam
aas
int
adc
call
movsb
je
push
push
lods
jg
nop
jae
popa
mov
imul
xor
adcb
popa
pop
movsb
addl
movsl
ja
in
in
lea
or
mov
adc
inc
loope
das
cmp
das
popa
lea
cli
das
sbb
in
insl
test
jnp
std
jns
cs
jnp
inc
sub
lcall
sarl
es
sub
call
hlt
mov
stc
xor
or
jge
sub
push
mov
xor
and
bnd
sti
stos
imul
jg
shll
pushf
jnp
mov
sub
insl
jg
lahf
jbe
mov
insl
mov
fnstenv
pop
xchg
lahf
ret
jp
and
jge
sbbb
pop
pop
add
ret
std
call
push
mov
lcall
fwait
imul
int
into
sbb
aaa
xchg
push
lret
cmp
or
dec
jg
das
std
in
mov
faddl
pop
fadd
mov
lods
adc
xor
sub
sub
mov
jae
dec
pop
jnp
mov
inc
sub
mov
mov
add
out
jbe
add
repz
sahf
cmp
aaa
xchg
sub
test
test
adc
inc
xchg
cmp
cmpsb
dec
mov
mov
push
pushf
inc
addr16
out
push
cmc
sbb
cmc
inc
mov
or
mov
cs
lcall
test
or
xor
test
add
mov
xor
jo
mov
xchg
cwtl
sbb
cltd
sbb
jmp
and
fmuls
mov
jg
pusha
pop
inc
adc
mov
adc
cmp
and
sbb
pop
add
dec
imul
adc
inc
test
mov
stos
jle
cmpsb
inc
repnz
arpl
icebp
daa
and
adc
insl
cmp
jae
xchg
dec
pop
mov
inc
sbb
mov
fmuls
cmpsl
mov
in
dec
pushf
imulb
mov
add
cli
mov
add
sti
xor
ds
or
sarl
mov
shrd
xor
jmp
mov
popa
lcall
popa
cwtl
lods
scas
sub
adc
adc
adc
das
std
xor
sarl
cltd
jae
push
repz
leave
mov
jmp
ficompl
imul
gs
sbb
and
mov
scas
outsb
filds
jge
sbb
cmp
loope
ror
and
fimuls
jl
gs
cmp
lret
push
ds
mull
and
repnz
test
out
mov
inc
notl
int
gs
mov
in
stos
push
std
lret
nop
push
loop
sub
jno
ljmp
cli
pop
add
push
lret
sub
push
cmp
je
out
mov
dec
addr16
sbb
fwait
adc
mov
insl
push
and
pusha
lahf
loop
sub
cld
ja
fldln2
and
je
shrb
add
dec
in
add
pop
dec
add
mov
add
add
les
mov
int
lcall
jg
adc
and
push
or
mov
inc
iret
inc
out
std
sahf
jno
add
outsb
push
or
ret
cld
dec
adc
shll
adc
jbe,pt
pop
pop
mov
push
dec
fwait
inc
cs
iret
scas
sbb
dec
and
xchg
pop
and
push
ss
popf
push
bound
xchg
lret
dec
jae
dec
dec
push
push
das
scas
aaa
shll
xor
sub
jge
mov
jno
pusha
and
jp
lods
add
cmpsb
jno
mov
mov
pop
ja
push
pop
push
sahf
xchg
inc
out
sub
xchg
sub
push
fs
mov
cmp
fcmovu
jg
scas
call
mov
andl
sub
add
push
cwtl
and
dec
sbb
loopne
std
daa
add
mov
xor
pop
add
fstps
andb
mov
data16
popf
xor
ret
and
cmpsb
adc
or
in
mov
test
or
into
nop
mov
lret
flds
xchg
fldl
push
in
clc
and
adc
dec
std
push
enter
dec
fstps
rol
fucom
cmp
cltd
jge
and
in
xchg
dec
jge
mov
test
into
xchg
lods
ljmp
clc
stc
jno,pn
pop
adc
mov
mov
pop
in
and
add
cmp
mov
lcall
cmp
mov
faddp
jae
mov
cli
subb
movsl
or
xchg
sbb
mov
sub
js
insb
mov
dec
decb
aad
sti
jne
cmp
outsb
js
int3
cmp
lcall
mov
sub
inc
sbb
movsb
nop
sti
xchg
mov
aad
lock
dec
fnstenv
je
mov
mov
jns
dec
and
jb
addl
iret
pop
xchg
cld
mov
je
xor
jle
fidivrs
pop
repnz
sbb
into
arpl
mul
sbb
daa
adc
scas
mov
push
or
jmp
push
xchg
xor
push
sub
aaa
mov
test
icebp
int
das
inc
mov
insb
lcall
sbb
loopne
mov
or
jns
iret
icebp
insl
mov
and
adc
aam
aad
xor
xchg
mov
cmc
rcrl
jmp
icebp
fwait
pop
fcoml
scas
scas
lahf
ds
test
push
xchg
xor
fucomp
adc
cmp
and
add
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
test
sbbl
pop
sbb
jle
push
push
mov
fmull
adc
call
push
dec
es
imul
into
xlat
fdivr
push
xor
sub
inc
es
test
arpl
xor
jp
call
adc
add
inc
stos
and
cwtl
add
in
lret
sub
jns
stc
rorb
shrb
outsb
push
mov
xor
mov
cmp
sbb
daa
test
ds
inc
adc
popa
aas
and
sub
pop
xor
scas
lock
mov
push
mov
dec
popf
lret
push
cwtl
mov
cmc
mov
add
push
adc
mov
xor
call
shr
cs
mov
mov
pop
mov
insb
loope
insb
ret
leave
ds
les
dec
pusha
sbb
es
stos
mov
push
inc
inc
clc
push
fistps
js
inc
sti
aad
jmp
lea
sbb
je
mov
push
rolb
inc
jbe
jle
inc
aaa
movsb
pusha
push
sbb
pop
dec
xor
sub
mov
pop
lods
ror
or
add
pop
cmp
popa
adc
and
jl
mov
std
addl
mov
lcall
add
fsubrl
out
inc
cmp
push
mov
bound
push
xchg
jmp
sarb
jp
movsl
rolb
push
in
je
bound
je
dec
or
mov
fsubrl
out
xchg
roll
data16
mov
arpl
pop
lret
pop
mov
icebp
sarl
gs
daa
jb
fisttps
jg
inc
daa
and
fucom
clc
xlat
mov
dec
fstps
lahf
lcall
adc
mov
repnz
xor
arpl
lods
sar
in
push
adc
push
pop
jle
sub
sub
nop
pop
test
imul
and
loope
fists
xor
pop
rcrl
cmpb
pop
mov
mov
push
or
ret
add
cld
es
add
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
jmp
xchg
add
cmp
scas
insb
jecxz
fdivrl
fmull
adc
pop
inc
or
pop
testl
pop
push
pop
aaa
inc
fistps
das
xchg
xchg
fs
aad
lret
fcoml
mov
clc
data16
pop
idivl
or
xor
pop
xor
mov
jo
outsb
cmpsb
push
ret
adc
add
or
adc
das
and
inc
cld
and
sti
lds
pop
push
xor
out
mov
repnz
repnz
xchg
inc
xchg
sub
dec
mov
mov
mov
aam
sub
bound
shlb
into
hlt
mov
mov
cmpsb
inc
sbb
push
mov
rclb
and
xchg
push
mov
adc
jg
cmc
xor
and
mov
adc
hlt
js
add
mov
pop
cld
or
xor
scas
adc
add
test
xchg
js
or
or
ds
in
jl
in
in
cmp
inc
test
mov
fcompl
cmp
push
movsl
lret
aad
xchg
test
or
les
sar
insb
test
cmp
imul
mov
and
scas
fs
test
xchg
sbb
push
or
dec
cwtl
cmp
mov
push
and
sbb
jns
jg
lods
icebp
xlat
mov
in
sub
inc
sti
test
clc
dec
test
jb
cmp
mov
ficoms
pop
push
loope
mov
popf
sbb
aaa
sahf
enter
pop
xchg
es
fdivs
push
sbb
ljmp
test
pmulhuw
inc
dec
mov
inc
push
hlt
aam
pop
loope
pop
xchg
fmul
or
and
push
insb
popa
dec
xor
sahf
leave
cmpsl
mov
jns
add
aas
adc
fildll
mov
push
mov
dec
dec
idivl
cwtl
call
cli
scas
mov
mov
mov
jle
js
jmp
adc
add
inc
hlt
popa
cmp
lock
inc
cld
stos
and
add
add
add
stc
or
popa
imul
nop
js
jns
lods
pop
sbb
adc
movlps
sub
dec
xor
out
mov
pop
clc
repnz
cli
ss
nop
lret
test
mov
fnsave
pop
stc
mov
and
xor
sti
sti
mov
loopne
jmp
pop
cmp
mov
inc
fwait
arpl
and
xchg
mov
sub
xchg
mov
xor
inc
pushf
into
daa
xchg
test
fnsave
cmp
adc
shll
mov
sub
inc
push
and
shl
loop
cmc
pop
lcall
add
scas
xchg
mov
push
test
add
jp
sub
seto
test
fisttpll
aas
sbb
cmp
cltd
mov
loopne
mov
add
jns
or
bound
pop
loop
sub
pop
mov
in
lret
mov
imul
gs
jle
sub
jnp
stc
add
or
and
pushf
mov
mov
mov
jl
out
inc
fldcw
sub
jb
mov
das
ss
jae
sub
xchg
cmp
pop
pop
jns
adc
mov
cmp
subb
sub
clc
sbb
inc
inc
cmp
fisttps
dec
cmp
mov
sarl
sbb
mov
pop
dec
lea
inc
or
fwait
mov
pop
cs
pop
in
imul
mov
ds
push
stos
rcll
cli
ja
popa
aas
aam
filds
xor
out
in
stos
pop
jecxz
ret
rcrl
pop
call
pop
call
mov
jo
jno
xor
movsb
jge
adc
test
filds
lea
sbbl
and
mov
inc
sub
cmp
mov
dec
cmp
movsb
pusha
sbb
jp
xchg
ja
push
inc
xchg
lret
cmp
adc
popa
mov
adc
add
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
jmp
and
cmp
aaa
sbb
bound
sarb
test
insb
and
movlps
mov
xor
mov
les
jo
or
cmp
aam
scas
push
stos
cmp
sub
ljmp
int3
ss
jno
cmp
sub
pushf
mov
push
cmp
loope
sbb
mov
lock
add
popa
out
fs
inc
and
add
mov
jae
shlb
mov
rol
mov
pushf
push
xchg
adc
out
and
hlt
push
pop
scas
fisttpl
movsl
mov
xlat
cmpsl
lds
jge
push
sub
fs
xlat
pushf
pop
pop
hlt
adc
lret
xor
int3
xchg
mov
adc
fxch
jp
fwait
aad
pop
int
sbb
push
dec
push
sbb
fs
dec
push
xchg
lods
int3
adc
push
sbb
mov
sub
out
add
or
add
add
push
xchg
or
rol
insb
int
push
cmpl
push
data16
sbb
les
and
cs
add
int3
jg
repnz
dec
cmp
mov
push
push
mov
lds
push
or
adc
cmp
ja
pop
push
hlt
jmp
cs
jge
sbb
outsl
xchg
mov
pop
xchg
add
popf
aaa
sbb
popa
add
dec
insl
xor
mov
pop
mov
xchg
rorl
add
sub
rcll
ljmp
inc
mul
aaa
pushf
andl
icebp
xor
js
add
pop
es
inc
push
loopne
dec
jp
dec
js
push
daa
int
cmp
imul
rol
push
mov
push
inc
pop
fs
sub
in
aas
sbb
or
fidivl
sahf
add
xchg
test
cmp
pop
mov
cmpsl
pop
bound
imul
mov
or
ret
sbb
sbb
scas
je
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
jmp
mov
xor
jns
fldln2
jle
scas
add
fmull
adc
scas
outsb
imul
mov
sti
pop
add
add
mov
pop
aaa
lock
aas
cmp
jecxz
push
ficompl
xchg
cli
inc
xchg
inc
pop
pop
sti
in
in
pop
mov
xchg
jge
sbb
mov
and
and
ljmp
daa
in
and
mov
sbb
xchg
mov
push
data16
into
mov
pop
out
inc
mov
psrlw
hlt
cltd
dec
jae
insl
dec
mov
loop
and
or
fidivrl
insb
xchg
xchg
xor
clc
adc
paddb
jge
mov
push
mov
sahf
mov
mov
mov
popl
pop
lret
jl
outsb
or
in
cltd
sbb
pop
jecxz
ja
in
push
out
repz
ss
fsub
fs
icebp
mov
pop
push
inc
jo
xchg
cmp
sti
cmp
add
mov
cmpsb
je
lock
or
or
andps
scas
imul
ret
jg
pop
and
imul
push
aad
mov
xchg
sahf
push
orb
lods
jb
stc
pusha
jecxz
pop
cld
xchg
int
adc
mov
pop
push
lahf
pop
xor
lock
pushf
inc
adcl
iret
mov
popa
or
and
mov
mov
mov
stos
lret
jno
lcall
fdivr
mov
xor
inc
pop
mov
fnstenv
sub
imul
sahf
add
dec
lret
les
lcall
aaa
jmp
inc
mov
cltd
xor
inc
inc
shll
mov
xchg
pop
inc
ds
push
jecxz
inc
jge
incb
ljmp
cmp
adc
add
test
dec
rcr
orb
pop
cmp
mov
dec
xor
xorb
sub
jnp
lret
mov
nop
mov
xchg
pop
jle
push
enter
aaa
sub
mov
cmpsl
push
dec
mov
jmp
roll
mov
cs
dec
jae
mov
mov
adc
fmull
adc
and
iret
scas
push
sbb
add
dec
test
cmp
and
fildll
das
and
fmull
push
in
mov
andb
stos
jno
scas
jle
sub
add
dec
pop
test
mov
rcrb
in
pop
arpl
xchg
mov
mov
adc
ljmp
cmpsb
jg
ret
and
movsl
lcall
sbb
popf
out
fisubs
outsl
test
dec
mov
rol
pop
das
popa
hlt
repz
test
in
imul
test
sbb
jp
mov
inc
in
repz
cwtl
adc
jecxz
adc
jmp
int3
subl
or
pop
outsb
mov
int3
cltd
add
in
mov
nop
jno
push
aas
cmp
cmp
inc
sub
xchg
xor
xor
jno
aam
stc
mov
add
ret
sub
lret
lret
adc
pop
cmp
movsb
ja
xchg
cmp
cli
mov
fwait
fs
mov
mov
ret
outsb
in
add
stos
mov
mov
add
sbb
mov
adc
jnp
xlat
out
mov
mov
lods
into
xchg
jns
mov
imul
xor
mov
stc
in
push
icebp
xor
std
dec
xor
jnp
jg
movsb
pop
shl
sub
push
std
pop
push
inc
push
loope
or
pop
dec
inc
jbe
fldcw
imulb
lods
fs
add
call
rorb
dec
in
imul
jae
dec
std
aam
pop
mov
and
fisubrs
xchg
and
iret
sbb
lods
adc
pop
fildl
imul
aam
and
fcmovnbe
push
test
jne
fmuls
stos
push
test
outsb
in
call
scas
pop
into
mov
mov
in
mov
sbb
mov
aam
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jmp
mov
aaa
cmpsl
sbb
test
aam
push
or
adc
movlps
xor
xlat
sbb
add
ss
push
lods
iret
in
push
pop
jb
insl
pushf
mov
push
dec
inc
inc
sahf
pop
ds
mov
cmp
cmc
xchg
pop
sarl
pop
shrl
and
inc
cmp
shrl
cmp
mov
stos
ret
fdivrl
dec
ja
scas
hlt
popa
cmp
bnd
std
sbbb
ror
jno
fdivrl
mov
in
xchg
je
cmp
add
lock
xchg
jecxz
dec
xorl
add
cmp
sub
push
or
sbb
mov
icebp
inc
xchg
es
mov
movb
or
loope
popf
push
pop
xchg
mov
loopne
int
cwtl
mov
mov
jp
in
aas
push
cmpsb
int
dec
outsl
inc
or
lods
sub
cmc
ljmp
lret
imull
mov
mov
mov
movsl
cmpsl
mov
in
daa
dec
fs
xchg
outsl
xchg
aaa
or
out
ret
lds
sbb
test
jae
div
fsubr
shlb
mov
sub
inc
movsb
aas
xchg
insb
mov
and
das
test
push
mov
xlat
mov
inc
jns,pn
lahf
adc
movsl
jg
sub
out
out
mov
pusha
mov
sbb
out
adc
lret
jge
xlat
add
adc
mov
cmpsb
aad
not
je
push
lds
and
ret
pop
sti
adcl
or
insl
cmc
das
insl
lods
dec
push
imul
mov
popf
jp
ss
mov
fsubrs
add
hlt
cmp
das
dec
push
mov
rep
repnz
test
mov
xchg
enter
jmp
mov
scas
pop
lock
jno
clc
fcom
in
sbb
adc
cmp
cmpsl
mov
ds
xchg
inc
dec
cltd
jno
push
pop
jne
xchg
add
clc
in
nop
inc
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
jmp
popa
pop
fimull
dec
sbb
dec
neg
mov
inc
push
adc
fmull
adc
and
mov
mov
mov
mov
repnz
xor
mov
sub
aam
imul
dec
sti
cltd
add
jnp
decl
ret
sub
xor
add
sbb
imul
lcall
xchg
aad
icebp
dec
repnz
pop
add
orl
inc
dec
iret
xor
cmp
adc
mov
cltd
mov
pop
dec
sarl
or
cmp
sub
push
cmp
gs
in
into
fwait
lods
mov
fs
inc
outsb
pop
loop
fists
dec
mov
push
push
xchg
xor
xchg
out
dec
xchg
xor
mov
adc
ret
or
jle
push
add
mov
fstpt
daa
or
mov
shlb
add
jmp
inc
jg
push
sbb
sti
out
or
aaa
scas
adc
and
in
jae
repnz
fidivrs
push
movsl
and
xor
pop
stc
movsl
pop
sub
cmp
adc
inc
pop
adc
fisubrs
movsb
stos
mov
ljmp
mov
jl
mov
sbb
pop
test
inc
ret
nop
movsb
icebp
daa
jp
lret
scas
in
xchg
or
or
adc
ss
and
test
lods
scas
xchg
mov
lret
imul
pop
loope
int
addb
xor
xor
je
and
negb
imul
cwtl
adc
jg
or
bound
hlt
push
fstps
xor
jae
es
shl
pop
pop
outsb
xchg
lds
sub
adc
jnp
jns
jle
add
xchg
and
hlt
fisttpl
ret
addr16
movsl
lret
aam
jbe
leave
push
nop
lock
add
mov
test
mov
xchg
cmp
rorb
adc
sub
jge
and
data16
cmp
mov
dec
mov
div
add
cmp
jb
jmp
add
cmpsb
pop
sahf
aaa
xor
mov
mov
push
add
adc
movlps
and
sub
pop
pop
mov
jnp
bound
dec
subl
dec
bound
cwtl
cmp
call
iret
inc
pop
pop
ds
add
add
add
addl
icebp
sbb
xor
adc
mov
frstor
xor
js
and
imul
sub
cld
sar
xlat
mov
mov
sbb
lcall
sahf
jmp
push
jne
pop
ret
sahf
cmc
pop
out
dec
das
pop
scas
jno
pop
add
sti
cltd
aaa
incb
stc
aas
es
push
mov
sbbl
iret
adc
inc
imul
push
imul
mov
jle
or
ss
js
jmp
sbb
mov
dec
je
pop
jae
add
pop
loope
xor
jns
push
push
dec
mov
sbb
sub
shrl
subl
pop
sub
ret
movsb
lcallw
je
dec
cmp
lock
inc
leave
or
cmp
popa
cmp
pop
popf
sbb
dec
inc
push
dec
bound
mov
lahf
hlt
aad
jae
lds
loope
rcrb
push
lahf
and
insl
push
add
push
push
enter
mov
dec
dec
stos
inc
jb
aam
popa
xchg
les
xlat
mov
dec
cmp
ds
cmp
xchg
mov
inc
fldcw
arpl
aad
xchg
scas
rorb
mov
push
xchg
inc
dec
xor
gs
sbb
or
mov
adc
inc
andb
inc
sbb
adcb
sub
sbb
sub
shlb
lahf
jl
cmp
js
push
mov
dec
pop
dec
jae
lea
nop
push
movsb
stos
fisttpll
xchg
or
mov
shlb
imul
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
jmp
ja
fistps
pop
ja
outsl
popa
ss
push
mov
insb
aad
adc
fmull
adc
loop
shlb
testb
mov
lcall
adc
or
sbb
cwtl
inc
xor
xorl
fwait
ret
ljmp
pop
dec
jo
dec
or
jb
clc
scas
sbb
test
add
imul
neg
adc
adc
push
daa
enter
sbb
in
mov
push
fisubrl
lods
ss
jns
fs
sbb
pop
sub
insb
sub
jg
in
ja
add
subl
leave
mov
call
mov
jle
jo
loop
test
pop
jl
stos
and
shlb
mov
mov
cmc
fnstenv
call
inc
es
ljmp
mov
aas
lea
lahf
dec
shlb
sub
jmp
sub
push
ret
mov
sub
pop
mov
sbb
cmp
xor
sarl
adc
cwtl
aas
out
sub
fistpl
mov
lret
fwait
lds
out
addr16
mov
lret
stc
mov
pushf
or
into
aam
mov
test
pop
les
pop
pop
inc
adc
movsb
setge
movsb
movsb
aam
adc
lods
xlat
pop
pop
aaa
ret
loopne
ljmp
mov
aaa
lods
in
cmp
cmpsb
out
jnp
push
out
inc
pop
adc
add
xchg
jle
out
jl
pop
loopne
aam
mov
dec
xlat
outsb
jne
insl
dec
or
mull
loopne
pop
mov
mov
xchg
ljmp
or
inc
pushf
adc
es
outsl
int
add
pop
out
xor
mov
jmp
inc
pop
pusha
popf
ljmp
xchg
mov
dec
aas
push
enter
addr16
xlat
fidivs
mov
pop
inc
inc
fdivrl
or
popf
dec
mov
inc
cmp
fwait
xchg
ret
and
push
jbe
dec
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
jmp
lock
clc
test
inc
imul
in
shlb
stos
popf
cli
adc
fmull
adc
ja
mov
bnd
loop
and
shll
rcl
movsl
rcrl
jge
lret
push
leave
test
xchg
and
adc
lods
lods
stc
sbb
dec
xor
out
and
sbb
xor
sbb
inc
xchg
shlb
jb
aas
xor
mov
rcll
inc
cmp
ja
shll
mov
jl
xchg
xlat
mov
jecxz
mov
jecxz
pop
push
adc
fnsave
mov
jne
cltd
in
and
inc
jl
sbb
in
addb
xor
bswap
xchg
lcall
sbb
dec
pop
enter
mov
rolb
ret
pop
sbb
pop
daa
xlat
pop
ficoml
jg
jnp
mov
xchg
pop
push
subl
ljmp
mov
push
and
jno
rclb
adc
xor
mov
xchg
aam
xorl
mov
push
cmpsb
xchg
xor
aas
cmpsb
xchg
jl
mov
cmpsl
outsb
lea
xor
pop
call
dec
in
adc
subl
dec
ffreep
scas
imulb
das
mov
aad
or
icebp
leave
testl
out
popf
fs
adcl
jp
fistpll
rolb
out
jg
addr16
aas
mov
dec
mov
addr16
or
enter
xchg
inc
fiaddl
ds
fmul
gs
sti
decb
add
cs
mov
push
leave
xor
out
sahf
sbb
stos
loopne
mov
pcmpeqw
push
popa
add
pop
dec
dec
xor
add
icebp
add
jle
add
xor
shlb
mov
outsl
frstor
lahf
jp
cmc
sahf
add
imul
mov
repnz
gs
mov
repnz
jecxz
pop
or
add
ljmp
popl
stos
aaa
add
inc
mov
in
sub
xchg
or
loopne
ret
add
ret
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
jmp
mov
pop
mov
insb
retw
notb
adc
movlps
pop
mov
xor
cmp
cmpsb
push
shl
gs
mov
jns
lret
jle
mov
out
divl
sbb
enter
xor
jge
cmc
dec
dec
repnz
pushf
fisttpl
jae
sub
stc
xor
and
fldenv
sub
xlat
jmp
arpl
insb
test
push
cmpsb
add
xchg
mov
dec
add
add
mov
lcall
mov
das
pop
out
push
dec
das
dec
jae
sbb
in
sub
and
mov
push
stos
jo
pop
popa
xchg
cli
adc
add
shrl
sub
int
push
push
scas
outsl
adc
mov
xchg
shll
mov
fld
pop
or
ja
sti
sbb
cmp
lret
lock
jp
lret
ja
cmp
sti
cltd
mov
std
xor
decb
out
leave
mov
lret
test
pusha
lods
out
cli
adc
xor
sbb
xchg
out
jecxz
dec
cli
out
and
ficompl
loopne
loope
sbb
aaa
and
rol
loope
push
cs
sub
dec
jl
jecxz
enter
loopne
adc
cmp
pop
push
stc
pushf
loope
hlt
nop
cmova
sarl
mov
add
jecxz
stos
out
outsb
push
js
ds
pop
sbb
mov
addl
icebp
cmpsl
jb
sub
test
frstor
dec
mov
lods
and
sahf
lahf
push
in
insb
xchg
and
cmp
push
fsubr
movsl
xchg
scas
cmp
adc
adc
inc
jecxz
sahf
cmp
call
cmp
or
jns
pop
sarb
sub
mov
mov
mov
incb
stos
aaa
test
gs
xchg
stos
cmp
pop
cwtl
pop
out
mov
jg
int3
popa
xchg
cmp
push
xor
repz
sub
pop
outsl
aam
jbe
push
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
jmp
push
jb
adc
mov
xor
cmpsb
dec
mov
sub
adc
adc
shr
test
nop
cld
jae
jae
jns
idivl
lds
sbb
mov
xchg
aas
sub
adc
shll
cld
inc
xchg
pusha
repnz
js
adc
xor
and
mov
es
pop
xchg
nop
push
adc
dec
cmp
lret
scas
lcall
gs
movsb
ja
and
sti
mov
cli
dec
out
aas
inc
pusha
stos
jg
addr16
int3
bound
mov
rorb
and
jge
cs
sbb
filds
xor
and
or
sti
stos
mov
mov
mov
arpl
test
imul
mov
xor
out
call
inc
ljmp
xor
cwtl
and
lret
mov
lock
cmpsb
cmc
daa
jl
jecxz
sti
mov
pop
push
cmp
arpl
sbb
jb
inc
cltd
stos
dec
shlb
out
push
frstor
mov
orb
jbe
dec
iret
mov
sub
lds
test
pop
cmp
push
mov
scas
push
repnz
dec
push
jne
dec
push
ds
test
es
test
mov
call
adc
pop
repnz
insl
repnz
pop
mov
pop
or
repnz
xor
aaa
xlat
lock
cmp
cli
cmpsl
and
jg
into
bound
dec
rorl
mov
shr
lods
push
cltd
cs
xchg
fists
ret
addl
xchg
add
cmpsb
addl
icebp
fdivs
stos
push
mov
ficoml
jnp
loop
inc
lret
or
pop
icebp
mov
mov
sarl
negb
sbb
push
dec
mov
adc
xor
cmp
lds
mov
movsl
sub
ss
into
or
pop
insl
inc
xchg
int
scas
mov
int
loopne
mov
jl
xchg
mov
int3
aad
push
sub
inc
sub
out
cmp
cmpsb
rcr
sti
inc
lret
lahf
pop
add
inc
jmp
mov
fincstp
test
out
push
dec
insb
test
inc
sub
aad
pop
cmp
mov
sbb
mov
push
xchg
enter
cmp
push
sar
jb
mov
mov
inc
aam
loope
add
test
mov
mov
das
rclb
movsb
in
repnz
ret
movsb
or
jp
sti
pop
sub
add
mov
in
adc
imul
sub
mov
xlat
cmpxchg
scas
push
repnz
testl
add
adc
xchg
mov
push
xor
jge
push
gs
gs
sbb
jbe
lods
dec
call
cmp
mov
push
and
adc
stc
int3
leave
mov
int3
add
adc
jmp
xor
addr16
and
aad
fwait
xor
hlt
mov
cmc
loope
adc
movsl
push
mov
push
add
in
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
jmp
imul
in
push
pop
loop
xchg
js
loop,pt
mov
adc
jo
adc
inc
shl
dec
sub
jecxz
pop
or
pop
or
xor
pushf
add
cwtl
mov
test
loope
push
scas
mov
add
fildll
pop
mov
and
sub
daa
movsb
jb
mov
mov
cmpsl
fdivrs
mov
cmp
adc
divl
mov
mov
push
jns
mov
lahf
insb
lcall
mov
push
sub
data16
dec
pop
and
jae
pusha
popa
loopne
call
and
add
lahf
cwtl
sub
enter
rcll
test
mov
gs
mov
inc
daa
mov
push
mov
add
jo
jge
sbb
fstl
ret
insb
inc
popa
dec
cmp
dec
mov
and
leave
add
rcll
jno
dec
pop
add
xchg
pop
daa
jmp
cld
mov
pop
mov
sbb
lret
ss
rcr
insl
mov
ljmp
dec
aaa
test
test
cmc
stos
pop
mov
adc
stc
sbb
adc
inc
cwtl
and
sbb
pop
leave
push
scas
pusha
inc
mov
mov
int
les
push
cmp
subb
into
xchg
inc
push
cmp
iret
jbe
in
push
cs
or
sub
and
sub
push
add
cmpsb
outsb
or
pushf
arpl
push
js
inc
jmp
mov
jbe
push
aas
lret
pop
add
inc
hlt
push
or
or
jg
aam
push
adc
mov
xchg
sbbb
dec
pop
loop
dec
imul
jno
scas
mov
insl
insb
pop
add
sub
mov
scas
adc
jg
pop
test
lods
sub
sbb
clc
mov
xor
mov
pop
sub
xlat
inc
cmpsl
mov
inc
adc
icebp
mov
jne
xchg
ror
sub
in
dec
js
inc
in
push
pop
and
int3
mov
mov
adc
call
xor
cmp
xchg
out
in
sbb
mov
test
adc
inc
xor
outsb
mov
and
mov
inc
rolb
in
sub
or
xchg
leave
or
out
std
xor
mov
loopne
popa
mov
pop
lock
fnstenv
test
xchg
das
pusha
or
mov
movsb
test
sbbb
insl
imul
push
sbb
mov
outsb
fistl
xchg
inc
xchg
inc
add
rorl
loop
add
xchg
inc
adc
xchg
cmp
xchg
popa
faddl
sub
aas
test
loope
sar
loopne
dec
or
sahf
pop
push
pop
jle
je
aaa
outsb
cs
in
data16
xchg
lea
leave
mov
dec
or
inc
out
test
inc
xchg
enter
out
mov
adc
pushf
pop
rclb
cmc
daa
mov
movsl
cmp
movsb
xchg
sbb
mov
pop
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
jmp
mov
jo
pusha
popf
sbb
mov
lods
xchg
js
fists
adc
adc
mov
adc
fldenv
dec
adc
sub
or
mov
jmp
dec
dec
aad
fwait
or
xchg
mov
das
pusha
push
mov
scas
pop
cltd
leave
pushf
mov
fstps
test
jg
pop
mov
loope
fdiv
jp
xchg
jns
popa
popa
mov
sub
fidivrl
fmuls
jo
cwtl
jg
sti
loope
cmc
push
push
inc
je
imul
test
and
add
dec
jmp
pop
int
dec
and
popa
xchg
cmp
lds
out
adc
in
popa
incb
xor
scas
push
and
cwtl
pop
arpl
mov
and
loope
cli
jge
sub
cs
cli
fisubl
popf
fucomi
mov
and
sbb
push
icebp
clc
pop
add
enter
cwtl
sbbb
adc
pop
push
movsb
ss
bound
adc
dec
sub
push
add
movsb
mov
adc
and
je
adc
lock
and
push
out
and
pushf
and
cmpsl
in
or
fsts
lea
daa
daa
dec
push
and
iret
push
and
sub
mov
aad
repz
mov
loopne
sbb
sbb
call
rcll
inc
addr16
pop
insb
xchg
sub
in
mov
in
into
rolb
ja
push
jmp
das
xchg
fdiv
xchg
or
ret
ficomps
outsl
lret
mov
bswap
and
mov
push
jl
je
push
pushf
arpl
or
cmp
movsb
dec
push
lock
xchg
mov
daa
pusha
sub
push
inc
and
mov
push
mov
and
fwait
push
inc
add
incb
fcmovnu
rclb
xchg
lds
jl
loope
push
insb
mov
loop
aad
or
sub
inc
dec
ds
jmp
dec
in
lcall
sbb
xor
dec
lods
popf
fisubs
es
pop
xlat
jecxz
xchg
cli
mov
psrad
aas
dec
fs
xchg
test
mov
mov
sbb
ret
addr16
rolb
xchg
cmp
jbe
lcall
loopne
cmp
push
dec
sub
mov
fildl
adc
mov
in
xor
int
dec
sbb
add
inc
in
mov
adc
jle
mov
aad
imull
jbe
mov
cs
push
inc
out
pop
orl
aas
popa
mov
adc
dec
outsb
test
lods
dec
cmpsl
imul
jmp
mov
add
sahf
xor
fsts
push
pop
loopne
inc
and
and
xor
ss
xchg
mov
adc
push
imul
adc
mov
pushf
and
dec
stos
inc
ret
xchg
dec
xchg
mov
repz
push
mov
sub
add
push
popa
push
rorl
scas
movsb
or
mov
sbb
xchg
pushl
jns
mov
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
sbb
or
jmp
bnd
xor
stos
inc
fstl
adc
adc
das
pop
cmpsb
sbb
xchg
arpl
cmc
js
xor
jns
adc
or
shrb
inc
icebp
mov
jg
movsl
jl
lds
pop
pop
nop
shll
xchg
adc
xchg
xor
xchg
cmpsb
fdiv
repnz
pop
push
movb
sub
rolb
je
popa
fdivrs
insl
push
sub
and
adc
pop
mov
ret
out
jne
ud1
movsl
lea
fdivr
andb
xchg
popa
cli
sub
xchg
es
clc
imul
fcomps
xor
mov
into
mov
int3
mov
leave
lret
mov
pop
pop
or
or
ss
pop
sbbb
sarl
jecxz
pop
sbb
sub
ljmp
xchg
pop
inc
mov
xor
js
cs
cmpsl
ds
or
fidivl
mov
pop
mov
mov
pop
loop
add
scas
out
leave
xchg
rorl
pop
shr
mov
adc
pop
pusha
jne
in
daa
push
add
out
aad
jmp
dec
cmp
mov
repnz
push
sbb
call
in
rcrb
xchg
sti
scas
xchg
dec
inc
adc
xor
or
inc
dec
jbe
inc
stos
repnz
outsl
gs
inc
add
int
mov
fstpt
push
imul
repz
movsl
pop
mov
icebp
pop
inc
push
mov
cmp
and
inc
pop
scas
adc
jbe
add
in
je
mov
dec
sbb
sub
add
sti
cmovnp
rolb
inc
cmp
dec
mov
and
sub
sub
jns
ss
lahf
loope
and
shl
lock
in
lods
xchg
push
xor
call
or
add
notl
mov
jnp
mov
out
pop
sahf
adc
inc
adc
sbb
add
dec
fistpl
icebp
xchg
mov
add
imul
jg
xor
fimuls
fisttpl
mov
pop
in
jnp
jns
sub
cmp
and
fs
dec
lock
cmp
cmpb
mov
cmpsb
or
xchg
rclb
imul
in
adc
mov
mov
mov
movsl
jne
int3
scas
jnp
push
ret
imul
mull
daa
jnp
sub
sahf
jb
lods
pop
mov
mov
lods
nop
lea
mov
shr
inc
aam
cmp
sahf
xchg
imul
mov
cmp
es
rolb
nop
faddl
mov
call
sbb
in
and
imul
inc
add
or
cli
out
xchg
cmpsl
xor
cmpsl
pop
and
fdivrs
push
push
leave
adc
jb
pop
adc
repnz
call
mov
jecxz
arpl
add
or
sbb
xchg
in
sarb
imul
jmp
jg
inc
sub
movl
mov
mov
jmp
jg
inc
dec
and
cwtl
lods
hlt
push
rep
sahf
aad
adc
adc
push
dec
lods
sbb
xor
addr16
push
ret
sbb
gs
mov
xchg
movsb
loope
xchg
pop
pop
mov
imulb
leave
and
push
pop
cli
popf
sub
xor
loopne
cmpl
jge
adc
pop
pop
and
in
xchg
mov
je
xor
data16
lret
sbb
subl
lods
inc
mov
lock
stos
dec
int3
popf
stos
jnp
push
pop
sbb
push
or
insb
push
push
dec
cmp
test
cld
stc
gs
jbe
dec
ds
push
dec
jb
sbb
sbb
inc
jmp
dec
mov
dec
jnp
rorb
sub
jo
pop
mov
enter
add
daa
cs
xor
pop
sub
cld
shrl
xchg
loope
int
or
daa
ljmp
addl
aaa
xor
test
push
cmp
repnz
scas
in
cmp
inc
imul
mov
icebp
mov
dec
add
jns
flds
cli
inc
arpl
jg
mov
mov
sbb
sub
scas
pmaxub
outsb
es
pop
jge
in
xchg
jge
mov
jno
sub
jmp
into
inc
enter
ret
stos
mull
pusha
loopne
scas
or
mov
bound
das
push
movsb
hlt
loop
or
insl
test
mov
adc
sub
dec
repz
xor
fsts
adc
lods
pop
repnz
mov
mov
jmp
xor
xor
jbe
mov
lret
frstor
fiaddl
push
cmp
xchg
add
xorl
add
sbb
fsubs
mov
sahf
and
cs
or
imul
stc
mov
ljmp
movsb
push
sbb
adc
ffree
mov
dec
dec
and
stos
js
jne
sub
sub
inc
xchg
xor
call
xchg
cld
push
xchg
jne
push
xor
out
or
mov
xchg
add
fcomps
daa
scas
les
lahf
inc
pop
jp
sub
pushf
add
or
movsl
lods
push
dec
cmp
jae
test
inc
pop
cmp
and
in
jecxz
shrb
dec
ficomps
fnstcw
insb
cmp
and
pusha
cwtl
pop
imul
shl
sub
mov
shrl
gs
mov
mov
and
inc
scas
sbb
and
je
jbe
nop
cli
js
sub
stos
add
std
jmp
shr
ret
push
pop
pop
dec
jmp
cmp
dec
repnz
shrb
push
ror
outsb
jo
cmpsl
xlat
cmc
je
imul
je
inc
sbb
xor
mov
push
outsl
push
jg
cmp
fs
call
push
mov
sbb
mov
push
add
aaa
test
mov
scas
gs
pop
outsb
enter
xchg
clc
dec
jmp
dec
xor
add
popa
out
cmp
adc
sbb
and
mov
cmp
pushf
push
add
insl
scas
in
testb
jne
mov
add
adc
or
mov
or
jmp
xchg
decl
cmp
adc
stos
mul
jmp
cli
lret
adc
jo
adc
popa
xor
jmp
imul
xor
push
xchg
jge
xor
cmp
push
lcall
mov
pusha
adc
add
je
push
iret
imul
push
sbb
inc
mov
std
sbb
outsb
popa
out
push
lahf
inc
and
ja
lods
inc
sub
xchg
scas
addr16
mov
pop
pushf
add
and
addr16
imul
mov
enter
jecxz
pop
pop
or
sbb
stos
fisttpll
imul
sub
xchg
sub
jae
add
sbb
stos
cmpsb
ret
lcall
int3
in
jecxz
sti
pop
jne
ret
cmp
adc
mov
xor
xchg
push
mov
cmp
dec
xchg
jmp
js
mov
fidivl
cmp
pop
adcb
ja
pushf
adc
imul
mov
mov
std
mov
push
add
arpl
hlt
fs
mov
sbb
jecxz
dec
inc
sbb
repz
xor
pop
cmpsl
inc
push
inc
fistpl
mov
inc
subl
xchg
adc
adc
call
pop
fcmovne
idivl
aam
mov
out
inc
nop
sub
pop
jle
invd
inc
lds
lea
jge
add
shrl
xchg
pop
xchg
in
stos
dec
fnstcw
inc
lret
out
jae
idivl
xchg
jns
mov
popa
sub
clc
add
jbe
or
dec
add
jbe
rcl
mov
and
xor
or
mov
push
ficompl
ret
aas
adc
cld
xchg
loop
xchg
lods
inc
pop
mov
loopne
pop
mov
ficoms
or
repz
sub
rorl
shlb
int3
ficompl
dec
pop
add
fs
ret
pusha
imul
and
push
add
jno
lods
lods
es
adc
aad
jnp
pop
sbb
push
in
stos
mov
jb
push
push
mov
or
ss
push
jnp
mov
lahf
loopne
xor
dec
sub
mov
pop
xor
mov
xor
jns
into
mov
jle
xchg
cmp
mov
into
mov
inc
sub
sbb
push
and
inc
inc
push
sub
jmp
imul
and
mov
test
inc
andl
ja
cmp
jmp
pop
adcb
dec
jno
inc
in
jns
iret
mov
jns
outsb
adc
aad
lret
push
sbb
es
mov
int
scas
cmp
xor
data16
out
fwait
idivl
cmc
and
pop
and
push
inc
push
rcrl
loop
js
loop
cmc
cltd
loope
mov
in
xor
test
jp
lods
xor
sub
mov
sub
imul
dec
or
jl
cmp
addl
jmp
push
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
jmp
sub
cmp
mov
push
leave
adc
jo
adc
dec
or
das
mov
js
test
pop
push
fisttpl
sub
aaa
jns
daa
pop
repnz
mov
xchg
lea
mov
or
shll
fmuls
inc
pop
push
cmpsl
jp
jno
adc
sbb
sbb
test
cmp
jbe
ss
inc
push
xor
bound
lcall
stc
cli
int3
or
test
jg
or
jae
pop
pop
sub
in
mov
ja
jno
pop
popf
test
shrb
repz
lret
leave
or
mov
mov
xchg
mov
inc
aam
push
loopne
in
out
xchg
fstps
dec
test
roll
jb
add
stc
nop
test
mov
sbb
mov
or
loop
leave
cs
int3
push
mov
subb
fisubl
lock
push
sub
cmp
call
out
xor
push
cmpsb
fidivl
fidivrs
dec
data16
push
or
int
in
loop
jno
pop
dec
pop
xchg
jl
push
lock
pop
lret
js
fdivl
mov
out
xchg
out
rolb
mov
sbb
dec
sbb
icebp
and
repnz
xchg
int3
subb
sti
and
xchg
std
subps
and
dec
and
xor
mov
adc
pop
call
jnp
dec
jle
and
mov
ret
inc
lret
hlt
xchg
dec
add
mov
adc
fldcw
daa
mov
imul
insl
mov
xchg
mov
inc
cltd
ss
inc
movsl
dec
fldt
xchg
pop
mov
jnp
sar
push
sub
xlat
xchg
sbb
mov
sub
mov
test
and
pop
inc
rep
scas
lret
insl
mov
lods
mov
mov
cmp
das
fidivrl
rol
sub
cmp
xchg
dec
and
push
rol
fnsave
pop
mov
and
leave
add
sub
movsb
jmp
adc
dec
jns
push
cmp
xor
lods
mov
mov
xor
stos
or
or
adc
inc
pop
leave
push
lods
xchg
fsts
mov
inc
lret
std
jb
jnp
cltd
mov
inc
adc
loop
xchg
jnp
lods
mov
mov
xchg
imul
xor
pop
int3
in
addr16
xor
pop
push
outsl
mov
jo
push
or
std
mov
rcr
jcxz,pn
in
mov
pop
sti
mov
ret
or
xor
mov
xchg
loopne
xchg
lods
test
mov
scas
out
subl
lcall
inc
out
push
push
cmp
rol
das
addr16
out
stos
or
push
divb
pusha
hlt
jg
dec
cmp
int
scas
jne
mov
xor
in
and
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
jmp
xchg
xorb
daa
cltd
sbb
pop
mov
adc
adc
push
xor
or
test
loope
gs
ret
lods
mov
addb
mov
jo
cmp
movsb
sub
adc
cwtl
xorl
std
sub
mov
mov
xor
pop
cli
sub
jle
mov
xorl
int
push
sahf
nop
pop
and
xchg
in
adc
arpl
xchg
push
test
jno
outsb
lods
icebp
shlb
xchg
mov
roll
and
in
insb
lds
aas
les
repnz
pop
adc
or
insl
pop
imul
jg
lods
xchg
cs
and
add
pop
lock
in
and
lret
into
imul
in
mov
int3
insl
enter
xor
out
lahf
or
dec
dec
sub
rcll
mov
sti
adc
cmp
arpl
mov
dec
add
push
lret
fs
ja
call
or
loope
lods
adc
cmp
push
icebp
pop
lret
pop
popa
loop
xchg
cld
mov
ds
or
sbb
out
lds
lds
add
ret
fsubrl
pushf
cltd
in
in
sbb
pop
push
in
loope
insb
inc
dec
fisttps
jns
mov
outsl
xor
movsb
ljmp
and
adc
pop
mov
mov
fisubrl
dec
fbld
jb
out
lahf
mov
sbb
mov
push
fnstcw
add
into
xchg
jecxz
jbe
into
test
test
in
and
hlt
loope
mov
sbb
xchg
push
mov
xchg
adc
rcl
imul
hlt
fisubl
mov
cmp
and
add
dec
lock
mov
sbb
fdivrp
imul
pop
sub
fildl
outsl
addr16
inc
fisubrs
mov
and
lock
inc
scas
sub
movsb
jns
testb
data16
xchg
aad
movsb
mov
mov
enter
movl
inc
les
dec
xchg
push
adc
bound
popf
cmp
mov
mov
cmpsl
inc
jne
xchg
cli
sbbl
mov
xor
mov
out
mov
mov
ljmp
add
sub
xchg
jo
sbb
pop
push
push
mov
inc
sbb
ljmp
outsl
jo
jo
pop
sbb
test
iret
sub
fdiv
adc
sub
and
movsl
and
and
pop
lcall
add
mov
inc
fists
cmc
dec
jns
dec
inc
and
repz
jp
cli
add
test
dec
sbb
ret
or
fisttpll
js
cmpb
loope
loope
jae
insl
pop
jl
leave
mov
fdivrp
cmp
subl
ljmp
dec
rolb
sbb
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
jmp
jmp
dec
test
lods
cli
hlt
sub
mov
adc
adc
rcrl
out
loop
pushf
push
ss
cmp
orb
push
arpl
sti
ja
dec
lods
bound
sub
jne
bound
outsb
push
scas
jge
add
mov
loope
pop
fistpl
std
leave
sub
xor
fsts
cmp
xlat
ds
test
and
xor
xor
sub
ficomps
add
jle
or
sbb
cltd
and
mov
sti
push
push
aaa
xchg
cmp
mov
mov
cmc
inc
cli
ret
adc
int
jo
insl
sub
pushf
mov
cmp
mov
sub
les
mov
inc
test
pop
jbe
arpl
xor
jo
ret
adc
popf
push
lahf
jle
rcrl
push
cmp
mov
cs
fisttpl
lcall
ja
xchg
or
cmp
outsb
vmread
mov
adc
clc
jns
shl
pop
fistpl
cmp
fisubl
xor
sub
mov
cmp
pop
pop
adc
inc
lods
les
loop
bound
mov
stos
dec
movsb
push
xchg
in
ret
inc
adc
mov
cmpsl
dec
add
jmp
in
adc
sub
lock
sub
popf
dec
rcrb
push
insl
pop
mov
or
lret
jp
addb
popf
repnz
sub
mov
push
push
xor
adc
sub
ror
pop
in
xor
push
mov
pop
iret
cmp
mov
fadd
nop
xor
and
mov
xor
push
mov
std
dec
push
sahf
loop
ret
out
stos
add
mov
imul
add
test
pushf
xor
add
icebp
and
sbb
push
add
int
insb
movsl
je
xchg
dec
iret
xchg
fdivrl
lret
out
in
jo
mov
aas
or
ret
pop
es
jno
stc
add
jae
pop
or
sahf
push
jo
and
dec
test
ficoms
push
lcall
fiadds
lret
dec
xlat
mov
xor
fndisi(8087
fcomi
mov
int3
xor
out
cmp
mov
imul
in
and
es
and
call
push
mov
mov
stc
xor
aas
pop
loop
cmp
pushf
and
lret
shlb
into
daa
push
sub
jae
xor
mov
xor
rorl
int3
daa
jecxz
adcl
jb
xchg
jg
outsb
roll
lea
or
or
stc
mov
ds
pop
push
aad
pop
stc
adc
dec
xchg
sub
out
dec
push
loopne
rep
push
cs
test
sahf
mov
imul
into
test
inc
negb
lods
sarb
mov
push
fsubs
or
das
sub
cwtl
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
jmp
dec
pop
divb
inc
and
mov
imul
cmp
or
lahf
cld
and
pop
push
mov
movsl
repz
jns
jecxz
push
imul
int3
or
dec
out
cmp
rcrb
inc
sub
fs
icebp
pop
or
incb
inc
sub
test
hlt
roll
xor
out
jbe
jge
stc
repz
adc
mov
mov
jp
push
fucomp
adc
or
inc
sub
mov
pop
sub
cmp
and
inc
push
lock
pop
add
sbb
mov
mov
aas
js
add
mov
dec
mov
pop
and
xor
fldcw
cld
xchg
repnz
in
aaa
scas
fldl
add
mov
mov
mov
cld
push
lea
in
cmp
jbe
outsl
aas
icebp
pop
pop
and
jecxz
push
repz
dec
movsl
nop
sarb
ljmp
insb
mov
xor
ret
sar
jnp
lahf
cmp
mov
push
imul
mov
sub
fs
xchg
lret
cmpsl
movsb
sub
inc
push
into
or
mov
xchg
xchg
aad
fcomip
pop
sbb
cmp
xchg
sub
dec
fndisi(8087
aam
leave
sub
pop
mov
rcll
in
cwtl
imul
leave
lods
stos
inc
inc
cltd
push
push
ljmp
xor
mov
mov
sbb
xor
jno
les
pusha
cmp
xor
stos
cli
push
sbb
or
mov
mov
pop
push
adc
movsl
mov
orl
push
adc
in
jne
mov
inc
mov
pushf
nop
popf
or
test
sbb
rcrb
xor
mov
test
cmp
push
nop
or
xor
loop
jle
out
lods
je
dec
and
subb
rcrl
sti
sub
push
cmp
add
or
and
and
and
push
push
call
mov
mov
or
or
push
add
push
jmp
push
pop
push
js
mov
push
stos
adc
stos
movlps
cmp
sbb
mov
into
jecxz
mov
hlt
outsb
bound
cltd
add
andl
test
mov
jae
insl
sub
inc
pop
mov
int3
jae
ret
or
out
out
and
sbb
divl
arpl
jno
inc
test
cmpb
mov
sub
mov
arpl
bound
mov
jmp
sbb
ret
cmovle
sub
insb
in
imul
test
push
jb
cs
push
add
cmp
push
mov
cmp
arpl
sysexit
sub
adc
push
add
test
xor
cs
adc
addr16
bound
sub
daa
mov
mov
les
int
mov
popf
leave
andl
inc
in
inc
mov
mov
dec
fs
or
cmpsl
mov
pop
jae
movsb
jo
jecxz
lret
and
jp
or
cmp
xor
dec
mov
jmp
out
push
mov
mov
pop
pushf
inc
inc
subl
pop
lcall
stos
push
mov
mov
mov
jo
ljmp
icebp
in
div
cmp
and
or
xchg
pop
pop
push
sti
mov
outsb
scas
mov
les
sub
or
adc
xchg
sbb
mov
jo
push
stc
fisttpl
ret
mov
insb
iret
adc
xor
sbb
mov
loope
insb
std
jp
mov
lea
rolb
cmp
test
fstpl
fdivrs
idiv
pusha
mov
shll
push
xor
rcl
xor
add
jo
mov
lahf
inc
insl
lcall
and
or
aam
mov
adc
out
mov
shr
hlt
mov
push
sub
sbb
in
xor
xchg
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
jmp
cltd
sbb
sbb
cltd
sbb
xchg
bound
cmpsl
test
stos
movlps
and
inc
xor
xchg
and
icebp
fs
or
in
push
dec
add
roll
pop
daa
inc
ss
call
push
jo
adc
addr16
shlb
imul
fcoml
xchg
test
add
dec
push
pop
imul
and
mov
push
mov
fwait
inc
lock
cmp
out
mov
dec
mov
adc
hlt
mov
or
pop
movsl
jg
dec
sub
mov
add
mov
in
and
push
sahf
pop
out
adc
in
add
popf
jne
sub
jb
jge
xlat
pop
push
rep
popf
xchg
aaa
ret
es
dec
jmp
cmp
xchg
jno
fiadds
add
aas
in
pop
out
and
fimuls
sarl
fs
shll
dec
loop
scas
in
negl
imul
sarl
push
enter
xlat
loopne
push
adc
push
xchg
cmpsl
cmp
sbb
fildll
sarb
push
imul
repz
enter
popf
or
or
mov
xor
mov
insl
out
dec
scas
shrb
sub
xchg
aam
test
test
movsl
sbbb
mov
lret
cmp
in
and
mov
sarw
jbe
push
jge
adc
xchg
test
pop
lods
stc
pop
fiadds
sbb
mov
mov
inc
imul
bound
fnsave
dec
sahf
mov
mov
out
xor
lds
ljmp
pop
mov
dec
push
repnz
sarl
lock
push
xchg
outsb
jae
jp
mov
sub
cmpsb
stos
popf
iret
jne
sub
test
cmp
pop
stos
xchg
pop
ss
xchg
call
enter
loope
mov
pop
int3
je
xlat
sarb
cmp
mov
cli
je
sar
into
cmpsl
shll
pop
xchg
shl
loope
mov
nop
dec
jmp
sub
inc
in
adc
inc
or
and
or
inc
in
mov
and
lea
mov
mov
mov
movl
jmp
pop
mov
pop
mov
ret
mov
stos
movlps
mov
jne
out
jge
dec
mov
mov
out
xor
fcompl
nop
adc
sahf
adc
test
enter
sbb
jl
jl
dec
ds
loopne
out
push
stos
cmp
mov
rol
sbb
pop
ret
idivl
cltd
jle
fwait
psrld
pushf
xchg
stos
ss
outsl
in
pop
popf
dec
sahf
into
gs
addl
lods
cmpb
mov
push
adc
push
icebp
mov
test
loope
pop
arpl
mov
and
sub
pop
mov
xor
je
sbb
jns
cmp
js
mov
dec
add
lds
shlb
push
loope
dec
repnz
pop
jo
test
jo
scas
stc
cmpsb
fstps
call
in
ret
pop
mov
pushf
mov
xchg
xor
outsb
push
dec
jp
repz
inc
mov
arpl
jl
mov
ss
ljmp
sbbl
or
jno
mov
les
dec
sbb
dec
lret
in
movsb
lea
or
lret
and
movsb
inc
stos
test
mov
cmp
in
cvtps2pi
sahf
scas
movsb
sbb
jmp
cmpsl
pop
mov
xchg
inc
imul
shl
cmp
daa
cmc
je
jns
mov
sar
stc
data16
pop
push
xchg
leave
mov
mov
js
out
mov
scas
adc
add
add
jb
push
es
pop
cmpsl
sti
add
xor
mov
mov
push
clc
push
cmp
sub
and
push
jmp
pop
fistl
pusha
popa
in
inc
or
and
mov
cmp
jge
lret
xchg
cs
ja
inc
pop
push
xchg
into
mov
adc
cmp
into
fisubrs
add
cwtl
xor
test
pop
daa
or
dec
les
pop
loope,pn
or
test
loop
test
jmp
arpl
add
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
xchg
sub
subl
mov
lahf
adc
stos
movlps
xor
call
pop
inc
int3
xchg
xchg
ljmp
orl
mov
in
pushf
mov
fldt
mov
sub
movl
popa
lret
fdivrl
push
into
fimull
pop
rclb
and
pop
push
loopne
sahf
sahf
dec
mov
in
movsl
aaa
lret
movsl
decb
aaa
add
xor
xchg
test
sub
push
mov
scas
and
out
cmp
popa
jnp
int
mov
jecxz
xchg
loop
insb
jmp
mov
call
jbe
loopne
mov
shl
or
sub
es
jg
rorl
pop
aam
xor
cmp
jb
int
test
gs
and
call
jg
push
cmp
int3
ja
dec
sbb
stos
sbb
std
in
push
and
fstl
insl
pop
jns
hlt
lea
leave
sub
enter
sbb
cmc
test
rol
dec
lods
cmp
shl
or
mov
adc
jae
adc
mov
inc
outsb
fsubr
lahf
xchg
popa
xchg
es
int3
jl
shrb
mov
idivb
lods
pop
in
sahf
mov
das
outsb
in
mov
cwtl
mov
into
pop
shll
or
data16
dec
outsl
jo
xchg
lret
jne
mov
mov
pop
fsts
mov
cmp
mov
inc
push
xchg
daa
sub
inc
add
ret
push
mov
jmp
sub
ja
lds
popf
jb
dec
or
dec
jecxz
and
xor
in
mov
roll
imul
jo
jmp
leave
inc
test
scas
lret
mov
fwait
fs
into
inc
inc
sbb
clc
adc
stc
lods
dec
cmpsl
cmp
jle
jb
dec
jp
icebp
int3
sub
cmpsb
mov
and
sbb
mov
sub
stos
cli
xchg
or
dec
or
shrl
sub
or
mov
imul
mov
jmp
loope
mov
and
les
aas
fwait
adc
stos
movlps
push
notl
xor
leave
fdiv
fisubrs
jmp
or
ja
aas
or
xchg
fisubl
in
mov
cmp
into
add
iret
mov
mov
mov
int
in
pop
xchg
stos
and
test
cmpsl
imul
pop
add
out
mov
jge
sarl
ret
gs
and
sbb
rclb
icebp
into
pop
jns
imul
cmp
aas
cmp
mov
push
jp
cs
mov
cmpsl
jl
sbb
lcall
xor
push
dec
mov
push
push
inc
cmpsl
lock
in
mov
out
int3
movsb
xchg
xchg
jo
jae
movsl
jle
dec
hlt
pop
add
call
and
mov
mov
adc
or
mov
xorb
test
ds
jg
and
xlat
jle
imul
cmp
in
arpl
test
out
gs
mov
sbb
xchg
insb
fwait
cmp
ror
fmuls
jmp
or
xor
mov
addl
outsb
sti
xchg
add
ljmp
test
jp
push
dec
cmp
inc
jp
and
push
iret
popf
jg
es
aam
mov
inc
sub
mov
xchg
sub
pop
cmp
mov
fnstsw
sarl
and
and
mov
and
insl
sbb
out
mov
mov
outsb
jecxz
jo
test
pop
mov
mov
fisttpl
or
call
cmc
out
cmp
jae
push
ss
fdivl
sbb
loopne
cmp
ss
pop
pusha
aam
push
mov
inc
daa
xchg
movb
xchg
xchg
addps
sub
push
and
lock
xor
cmp
push
jo
insl
pop
or
sti
insl
ss
negb
lds
mov
mov
sar
pop
rolb
in
jne
les
bound
mov
lock
mov
icebp
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
jmp
inc
or
pushf
ds
fdivrs
cltd
adc
pop
adc
adc
push
inc
call
jle
popa
adc
mov
lahf
fildl
sbb
adc
mov
xchg
mov
pop
lret
rclb
xchg
cwtl
fistl
sub
mov
pop
mov
fwait
mov
scas
insl
xor
jne
iret
cwtl
test
jl
aas
cmpsb
mov
cmp
mov
xor
push
sti
add
out
mov
jae
movsl
xchg
loop
mov
enter
aas
nop
fsubl
mov
pop
ja
mov
and
outsb
es
rcrl
cmpsl
call
fists
and
fimull
pop
orb
dec
imul
push
idivb
jbe
fcoms
cmp
into
jg
aaa
mov
out
sarb
icebp
add
mov
stos
push
mov
test
xchg
adc
mov
mov
mov
push
fisubrs
jmp
loope
and
xchg
cltd
and
jmp
fisubs
or
lret
sahf
add
push
test
jnp
fidivs
pop
ljmp
pop
push
iret
lods
xchg
sbb
pop
cmp
in
push
add
push
xor
xor
std
xchg
add
cmp
repz
shlb
sbb
in
add
lods
fmull
adc
mov
scas
call
sub
and
vmwrite
insb
or
rcrl
inc
into
sbb
inc
xchg
pop
push
cmpsb
scas
movsl
mov
lea
aas
pop
popf
jbe
dec
push
icebp
inc
imul
and
popf
gs
dec
xchg
push
imul
ds
fs
test
outsb
mov
push
leave
pop
cmp
mov
add
das
lods
push
push
xor
mov
jmp
movsb
loopne
mov
in
mov
mov
les
movsl
cwtl
testb
jnp
pusha
test
cld
pop
adc
sbbl
addr16
adc
arpl
mov
les
inc
rcll
lcall
shlb
cmp
loopne
pop
outsl
push
in
push
mov
push
notl
xchg
dec
jecxz
call
leave
fbld
scas
jg
jp
jnp
xor
rcll
cmp
cmpsl
out
mov
cmp
test
and
mov
fidivrs
cmp
and
in
aas
push
add
or
adc
subb
sbb
adc
or
aam
loope
jg
sbb
fcompl
cmp
popf
sahf
loopne
in
xlat
sub
psubusw
mov
mov
insl
inc
cmp
sbb
mov
pop
clc
push
push
ss
lods
dec
mov
jle
cmp
pop
popf
fists
sub
fisttps
pusha
fildl
loopne
adc
sbb
lock
sahf
or
cwtl
sbb
or
pop
jle
mov
cli
pushl
pop
cmp
mov
xor
cmp
xchg
push
inc
pop
inc
cmpsl
lods
mov
mov
adc
loopne
int
jbe
or
adc
mov
test
add
cld
mov
fyl2x
hlt
add
cmp
test
fs
mov
inc
mov
pusha
mull
jne
aaa
into
cmp
sub
inc
jo
jl
add
dec
adc
incl
xor
mov
sbb
mov
xor
jae
ret
sub
jns
stos
or
xor
repnz
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
jmp
pop
pop
scas
outsb
scas
pop
sbb
cmp
push
push
xchg
scas
insb
loop
adc
pop
adc
adc
xor
iret
cmp
popf
cmp
xchg
pop
push
cmpsb
daa
lea
hlt
cltd
daa
mov
arpl
sar
pop
inc
mov
and
pushf
adc
add
jae
push
push
mov
push
fcompl
and
enter
or
push
sti
or
sub
pop
xchg
mov
xor
cmpsl
or
jbe
xchg
in
fwait
pop
cmp
leave
mov
and
cmp
enter
enter
pop
lcall
fwait
movb
pop
xchg
jns
mov
push
sub
cltd
fldt
fisubl
lods
enter
arpl
dec
aas
push
or
pusha
pop
rcrl
aad
mov
cmpl
lea
jns
cmp
mov
sbbb
sbb
pop
push
inc
push
imul
das
dec
push
in
or
pop
jne
xchg
pop
push
clc
sbb
lcall
or
inc
and
pop
xorb
lret
mov
loopne
xchg
shlb
dec
je
sub
pushf
arpl
push
adc
outsb
dec
jg
mov
jns
jmp
leave
test
mov
mov
jmp
xchg
add
xlat
push
xchg
cmpsb
mov
adc
cmpsl
jnp
cmp
iret
fnstsw
bound
mov
mov
mov
aaa
mov
into
repz
cmp
sub
sub
jmp
fimuls
test
pop
push
dec
or
xor
cmp
stc
jb
outsl
movsl
popa
sar
add
cmp
clc
fwait
add
lcall
mov
xlat
sahf
cmc
out
fcomp
xor
xchg
or
cmp
mov
cmpsl
jns
push
adc
mov
mov
sbb
lods
call
shll
rorb
stos
mov
es
xchg
push
es
out
fmul
or
pop
fwait
adc
jge
leave
ret
adc
and
int
fnstcw
lods
mov
cmp
data16
rolb
lea
sub
outsb
sub
cmpsb
sub
ss
mov
xor
mov
mov
nop
cmp
sbb
mov
cltd
fdivl
or
subb
sti
leave
mov
mov
inc
sub
push
fbstp
push
test
push
shrl
and
sub
push
outsb
iret
std
and
out
mov
xor
mov
call
mov
aas
or
sub
add
mov
popf
mov
or
lret
mov
cmp
pop
aad
lcall
xor
push
test
lret
lods
movsl
xor
mov
push
push
push
xchg
sub
call
mov
push
xor
and
int
cmp
xchg
loopne
stos
fiadds
incl
mov
testb
sub
xchg
sbb
cmp
jb
fildl
pop
mov
mov
fisubrl
push
jb
add
xchg
pop
test
out
pusha
pushf
rorl
cmp
mov
cmpsl
inc
subl
xor
push
sbb
dec
int
andb
out
loop
cmp
lret
mov
fdivr
lret
out
or
int
imul
mov
jle
dec
inc
xchg
inc
jnp
cmp
or
repz
pop
ret
cli
ret
hlt
js
jnp
or
mov
jns
cmp
jle
jae
sahf
jno
pop
popa
int3
divl
icebp
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
ret
loopne
icebp
xchg
stos
mov
stos
and
mov
adc
movlps
and
fistpll
stc
sahf
fs
stos
ja
in
pop
jne
aaa
cwtl
or
es
pcmpgtb
pop
mov
in
xor
jnp
mov
out
mov
mul
std
pop
dec
sub
call
int3
inc
cmc
mov
daa
dec
smsw
aam
mov
jb
jo
imul
mov
rcrb
cli
xchg
inc
inc
sahf
loop
aaa
cmc
call
mov
shrl
ljmp
imul
cli
test
lds
imul
std
sbb
cmp
out
inc
stos
repz
ss
xchg
mov
movsl
orb
dec
xchg
add
inc
data16
leave
shll
dec
jbe
test
push
xchg
adc
repnz
or
fdivs
mov
outsb
rcr
test
mov
sub
fldenv
dec
mov
fisubrl
dec
je
sbb
scas
pop
cs
sub
ljmp
mov
lret
in
jmp
sub
xor
jmp
out
cwtl
cmp
mov
xlat
js
xor
sbb
call
out
add
cmp
dec
rcl
jno
fistps
sbb
jns
repz
aad
scas
js
popa
xchg
negb
inc
inc
rcrl
cltd
stos
adc
mov
mov
dec
push
mov
xchg
loopne
fidivs
mov
fcmovnu
pop
loope
popf
push
jg
imul
sbb
inc
push
int
pop
call
popa
dec
addr16
out
mov
pop
push
and
sbb
push
mov
lea
xchg
mov
inc
fcmovu
ss
xor
fstps
loop
fwait
test
and
addr16
sub
sbb
dec
or
cmpsb
ret
xor
inc
movsl
lds
mov
repz
lock
mov
push
lods
add
mov
mov
rorb
decb
or
jg
arpl
lret
cmp
negl
inc
aas
cmp
in
cmp
hlt
jmp
imulb
jmp
or
or
mov
adc
into
scas
push
imul
ljmp
push
inc
mov
sbb
pop
mov
inc
push
cmp
ret
das
dec
inc
insl
ss
out
pop
out
dec
lcall
int
mov
xor
dec
aad
xor
mov
xchg
lret
cmp
test
pop
mov
push
jns
mov
add
inc
mov
dec
out
xchg
fs
loop
js
int
scas
repnz
lods
mov
mov
push
aaa
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
jmp
cmp
iret
sbb
pop
push
lret
test
repz
adc
movlps
xlat
mov
xor
xor
popa
sbb
hlt
or
in
xchg
sahf
mov
mov
testl
imul
add
out
pop
add
xor
das
mov
out
mov
push
mov
lret
dec
mov
in
fisttps
dec
dec
insb
mov
jbe
xchg
gs
sub
call
jae
scas
es
pop
push
xlat
cmp
mov
adc
mov
sub
xchg
pop
or
ds
call
xor
fwait
int3
popf
mov
cmp
lret
and
xchg
xor
fwait
jecxz
mov
stos
mov
xchg
xor
pop
add
lcall
stos
popf
mov
jl
lcall
popf
rcl
gs
fisttpl
ret
mov
daa
jg
cwtl
jecxz
in
jns
add
mov
jecxz
shlb
push
and
push
sub
xchg
cmp
adc
lretw
xor
je
out
into
cmpsb
pop
aaa
ja
mov
and
daa
aas
dec
or
lahf
jo
les
or
ret
out
in
pop
ret
jno
xor
or
mov
push
dec
mov
push
jno
and
out
inc
cmp
ret
fidivrs
sbb
dec
pop
leave
jb
ret
push
repnz
mov
decb
jecxz
inc
cli
inc
fucom
subb
adc
test
adc
movsb
data16
testl
pop
cmp
fsubs
jbe
jo
stos
cmovne
cli
mov
in
push
test
andb
jne
pop
fsubrs
sub
xchg
push
add
jge
fwait
and
pushf
sub
sbb
cmpb
test
pushf
push
nop
jge
pop
iret
cmp
mov
sbb
insl
pop
rclb
push
ret
mov
fcomps
stc
mul
mov
outsl
mov
push
fisttpl
or
mov
push
test
outsl
stos
dec
int
mov
adc
lcall
outsl
adc
je
push
inc
loope
fstps
jbe
daa
mov
push
jg
inc
push
into
mov
lahf
cmpsb
and
test
and
mov
ret
shll
dec
and
je
mov
mov
jp
insl
and
push
cwtl
addb
addb
mov
dec
fisubs
push
std
or
mov
mov
loopne
loopne
mov
jns
and
scas
jg
aaa
mov
mov
cld
dec
mov
stos
imul
nop
fldcw
inc
out
mov
pop
nop
loop
pop
mov
imul
out
add
scas
adc
pop
sbb
jmp
enter
mov
fildll
arpl
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
jmp
inc
in
sbb
sbb
fisttpl
xor
and
adc
inc
sbb
sbb
int
pop
mov
test
dec
sti
aam
sub
gs
cltd
jle
ja
nop
adc
es
loope
je
push
fdivrs
push
pop
push
gs
scas
xor
arpl
inc
leave
aas
pushf
aad
inc
add
dec
outsb
lods
xchg
popf
iret
dec
and
int
mov
sub
popa
cmp
push
pop
jbe
inc
cwtl
mov
jne
fs
shrb
test
dec
jmp
sahf
jge
rcll
or
sbb
clc
stos
xchg
aad
shlb
dec
loopne
jns
and
adc
push
insb
lcall
jns
call
shrl
lds
push
mov
push
fs
inc
jno
loop
imul
xor
dec
push
or
subl
movsb
movl
sbb
insb
stos
int3
pop
add
sbb
fnstenv
test
xchg
mov
or
mov
adc
mov
fs
sti
mov
cmc
xor
mov
rcrl
mov
and
popa
int3
adc
xor
sbb
rcrl
fistpll
or
mov
adc
pop
pop
fisttps
sub
out
jecxz
je
cltd
icebp
lods
cwtl
out
xchg
andb
dec
jbe
and
outsl
adc
jmp
testl
lods
and
scas
stos
fst
fidivl
and
movsb
std
mov
je
push
lods
fnstsw
rolb
gs
xorl
jbe
cmc
imul
mov
std
pop
rorl
popf
call
xor
shrb
or
push
call
xchg
pushf
cld
iret
jbe
sub
mov
cli
sub
push
stc
cmp
popa
fdivrs
pushf
sti
cmp
pushf
into
mov
mov
dec
mov
call
cmp
ret
sahf
sub
test
cmp
adcl
xchg
push
adc
mov
int3
loop
into
lds
idivl
add
pop
inc
mov
ljmp
jbe
push
loope
or
dec
inc
lods
or
mov
js
sbb
add
outsb
cltd
xchg
push
push
mov
adc
cmp
adc
xor
mov
in
fucompp
sahf
push
lock
mov
ja
mov
shrl
push
in
sahf
or
out
js
pop
lcall
push
or
subb
add
sbb
into
into
xchg
imul
ja
inc
cmp
in
fdivrp
ret
mov
mov
xchg
pop
je
xor
ds
ja
hlt
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
jmp
and
sbb
loope
stos
pushf
add
adc
or
lahf
out
int3
mov
jno
mov
fiaddl
add
iret
pop
mov
sub
movsl
mov
ret
mov
mov
cmpsl
cmp
in
mov
jae
xchg
fwait
jne
lret
and
fldl
fdivs
out
lds
push
fldenv
rcrb
jge
mov
loope
push
adc
fsubl
sub
stos
xor
adc
dec
jge
mov
sub
pop
sub
jmp
jge
popf
or
add
cwtl
rcll
xor
pop
xlat
push
jecxz
xor
roll
sbb
cmpl
pusha
outsb
push
arpl
add
rclb
pop
testl
lods
outsl
or
add
add
push
sbb
mov
test
ja
cs
jnp
lea
mov
cmp
lcall
roll
pop
pop
pop
cmc
jnp
sub
mov
jb
jbe
inc
mov
inc
jle
pop
jmp
lds
and
cli
scas
push
cmp
mov
sub
sbb
ret
lods
fimuls
mov
mov
subl
push
jns
not
repnz
loope
std
xchg
mov
std
mov
loope
imulb
lock
cmp
outsb
jae
out
mov
ret
jbe
push
mov
shlb
negb
add
push
popa
hlt
mov
sbb
rorb
xor
mov
pushf
push
or
pushf
mov
mov
jmp
sbbl
ret
xor
mov
enter
fdivp
lret
into
clc
inc
outsl
lahf
jbe
mov
and
pop
bound
xor
inc
hlt
inc
out
add
imulb
xchg
mov
mov
cld
lods
jg
sbb
cmp
mov
adc
movsb
push
pop
jbe
popf
cmovbe
mov
inc
pop
lock
lock
or
je
movsl
aad
cli
daa
lock
rcll
cmp
test
dec
popf
stc
imul
jge
stos
rclb
leave
popf
lea
leave
lret
int3
lret
nop
orb
mov
dec
in
inc
test
push
scas
pop
mov
add
mov
std
sbb
mov
inc
fsts
lcall
inc
or
jnp
pushf
dec
addr16
cltd
or
pop
je
loope
cmc
popa
cmp
scas
inc
mov
ret
arpl
fwait
in
das
fsubs
pop
mov
dec
seta
xchg
pushf
adc
sbbl
lea
scas
scas
jmp
mov
cmp
push
in
cmp
mov
and
faddl
and
push
lahf
pop
ss
shr
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
jmp
push
daa
sahf
xchg
sbb
add
lahf
mov
mov
add
adc
test
loope
sbb
jp
pop
inc
pop
daa
enter
push
lea
data16
aaa
add
scas
jp
or
les
xlat
or
mov
loope
and
and
neg
sbb
mov
outsb
sti
lcall
out
out
mov
add
and
mov
fists
sub
movsl
popa
out
lcall
adcb
mov
loop
cmp
das
leave
sub
scas
cmpsb
ja
and
adc
xchg
xchg
inc
sub
in
lret
cmpl
xchg
xchg
xchg
ljmp
push
in
inc
cmc
fisttpl
mov
jns
lahf
sub
shld
jae
xchg
and
shll
inc
adc
mov
fidivrs
mov
dec
push
mov
icebp
mov
push
pxor
mov
aad
repz
lcall
repnz
mov
sub
icebp
mov
add
test
pop
mov
or
in
pop
mov
xor
pop
notb
and
je
inc
sti
xchg
mov
jbe
push
jnp
pop
cmp
inc
mov
adc
inc
push
icebp
cwtl
sbb
lds
lds
lret
jge
int3
jge
imul
icebp
jle
das
push
fistpll
shll
mov
inc
arpl
testb
jne
or
shll
mov
outsb
into
test
adc
jo
inc
clc
aam
jecxz
add
adc
mov
cmpsb
int3
sbb
mov
ret
loope
cwtl
inc
aaa
pop
fidivl
leave
aas
out
pop
dec
mov
scas
fistpl
push
mov
inc
adc
mov
jne
fistpl
jns
mov
je
jnp
aad
out
hlt
cmp
add
out
pop
mov
adc
cmpsl
cmpsl
xor
rcrl
lahf
sarl
add
icebp
jge
dec
xchg
push
adc
mov
pop
mov
ficoml
xabort
mov
loope
insl
std
adc
out
sbb
mov
movsb
mov
stos
inc
js
mov
cmp
mov
sti
jne
lcall
xchg
cwtl
test
xchg
loop
cli
shl
push
mov
aad
dec
aaa
sbb
pop
frstor
sarb
dec
and
fcomip
nop
mov
cmpb
scas
in
test
mov
repz
push
pop
adc
jge
jns
rcr
jbe
xchg
test
xchg
and
fmul
or
test
push
jno
lds
shlb
addb
sub
push
jae
cmp
outsb
sbb
add
aam
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
jmp
pop
mov
sbb
sbb
mov
hlt
jl
ficoms
add
adc
dec
jne
jo
jno
mov
stos
pop
jl
inc
xor
push
dec
and
lahf
cli
adc
lea
push
loopne
sbb
jbe
loopne
fs
sbb
xchg
push
or
dec
push
call
lcall
ret
mov
sbb
add
iret
cmp
inc
or
mov
cmp
das
mov
lds
xor
std
jmp
outsl
add
lods
out
pop
cmp
pop
loope
mov
xchg
je
scas
dec
sbb
test
sbb
iret
push
aam
in
inc
addr16
or
lss
mov
xor
xor
mov
inc
dec
pop
iret
mul
adc
arpl
cwtl
insb
inc
cmp
lahf
adc
jl
addr16
stos
hlt
sbb
ds
mov
inc
jb
cmp
pop
test
push
imul
xor
cmp
add
mov
and
loope
test
lods
mov
adc
int3
jne
xchg
adc
lds
repz
add
js
sbb
lods
lret
aad
sub
in
lock
dec
imul
pop
jns
add
nop
mov
pop
clc
push
push
mov
or
add
mov
jle
push
cwtl
pushf
in
jb
in
push
sti
hlt
fnstcw
ds
adc
xchg
inc
add
aaa
mov
aad
dec
jmp
imul
aam
sub
addr16
push
pop
shrl
xchg
pop
push
clc
push
idiv
aam
mov
push
icebp
mov
lods
mov
sub
data16
push
sti
insl
shll
orb
clc
inc
sub
mov
fcompl
pushf
push
rclb
ret
out
lods
es
pushf
gs
and
movsl
int3
arpl
sub
mov
push
jnp
arpl
inc
push
pop
push
xchg
popa
movsb
aaa
pop
iret
rorb
mull
scas
out
adc
js
adc
in
gs
jno
push
fldcw
pop
insl
push
aad
lret
jl
leave
adc
push
mov
out
push
ja
xchg
push
ret
or
xchg
imul
push
in
testl
mov
fwait
aas
in
loopne
adc
mov
insl
sub
mov
inc
mov
mov
int
cmp
dec
inc
mov
xor
pusha
stc
xchg
pop
push
shrb
outsb
mov
movsb
lods
dec
push
mov
inc
arpl
add
pushf
push
pop
mov
push
jae
fwait
mov
dec
int3
mov
sub
pop
lock
adc
adc
push
loopne
hlt
add
aam
out
orl
inc
inc
xor
aam
test
add
add
add
add
push
add
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
jmp
xchg
mov
ret
sub
lcall
adc
jb
adc
add
out
fisttps
sahf
xchg
xor
mov
mov
fsubl
jmp
mov
mov
dec
push
rolb
repz
pop
adc
cld
mov
dec
mov
xor
and
outsl
mov
mov
inc
mov
adc
shrb
mov
xor
aad
test
jge
insb
inc
inc
scas
adc
outsl
test
mov
ljmp
lds
adc
test
mov
and
push
imull
inc
mov
dec
cmpsb
es
dec
push
inc
xor
adcb
push
popa
cli
push
ret
pop
xchg
inc
mov
fcomps
mov
dec
cmp
jl
pop
sub
scas
shr
loope
fsubr
and
jl
popf
lods
or
in
popa
dec
das
xlat
jl
push
es
test
dec
xchg
dec
dec
mov
dec
loopne
xchg
pusha
fbstp
xchg
push
jmp
adc
lcall
jecxz
popa
push
and
aam
ds
rcrb
mov
and
push
test
cmpsl
pop
push
xor
imul
and
test
mov
fwait
aas
pop
mov
lret
inc
rcll
cmp
mov
and
push
xor
mov
cli
loopne
jge
push
arpl
stc
bound
push
mov
fbstp
mov
outsb
stc
dec
stos
jbe
cmp
test
push
int
popf
or
out
cmp
movsl
xchg
pop
or
jbe
mov
sahf
and
or
mov
mov
mov
mov
lock
cmp
xchg
cmove
xor
mov
add
push
bound
xchg
rolb
int3
in
cltd
fisttpll
mov
jns
pop
sar
loopne
scas
dec
xor
shlb
popf
movsl
cld
popf
pop
notb
loop
push
mov
or
adc
push
mov
push
xchg
lock
sti
sub
cmp
or
test
les
push
cmpsb
stos
popa
jle
jno
adc
pop
xchg
push
lods
mov
in
push
sbb
cmp
and
int
push
xor
mov
mov
and
std
lods
cmp
jl
test
fsub
cli
or
sub
add
lret
test
loopne
and
ss
cmpsb
popf
fisttpll
xchg
test
rorl
inc
popa
out
jle
aas
inc
lahf
popa
repnz
mov
pop
or
negl
out
mov
movsl
pop
jmp
dec
cli
fsubl
out
xchg
mov
mov
imul
mov
mov
mov
repnz
dec
nop
stc
mov
imul
daa
repz
mov
insb
int3
cmc
push
popa
jns
adc
lea
fcmove
add
jo
sub
insb
lds
lcall
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
jmp
movsb
pop
rclb
push
cmpb
mov
pop
adc
jp
adc
mov
pop
sbb
in
mov
inc
pop
adc
cmp
cmpsb
aaa
dec
mov
lock
dec
mov
dec
pop
push
push
and
sub
test
cli
arpl
lahf
push
loope
and
and
in
jmp
mov
in
ja
cmp
xchg
fildl
pop
sbb
iret
les
mov
pop
or
hlt
push
out
xchg
dec
cmpsb
lcall
rol
mov
cld
mov
je
cmpsl
out
cmp
pop
filds
in
mov
add
in
ficoms
cmc
dec
adc
imul
pop
mov
mov
mulb
jmp
xor
add
xchg
int
mov
and
test
xor
lds
pop
xor
xchg
aas
repz
mov
out
shll
into
sub
repz
mov
test
into
xchg
test
mov
cwtl
scas
and
jns
xlat
das
mov
mov
mov
lds
enter
repz
jb
mov
cmc
js
dec
call
incb
adc
cmp
add
and
test
push
push
push
jb
xchg
lcall
sbb
dec
or
mov
dec
stos
fisubl
lret
pop
dec
lcall
out
mov
inc
enter
outsl
mov
lea
imul
xlat
adc
sbb
sub
fisttps
pop
or
pop
gs
mov
arpl
mov
inc
ret
push
out
in
xchg
dec
hlt
xchg
in
imul
pop
dec
dec
inc
jae
inc
mov
addl
inc
mov
cli
inc
add
jge
popf
test
cmp
fcomip
fwait
pop
sti
fimull
jl
xchg
jp
stc
fmulp
add
push
or
xor
je
jge
cld
pushf
test
in
adc
mov
leave
rclb
int3
mov
out
orb
aad
mov
enter
dec
lock
outsb
cmp
scas
sahf
jge
adc
test
pop
jns
test
scas
aad
mov
add
or
stos
pop
add
xor
outsl
cmp
ja
lahf
xchg
pop
jae
lock
pop
movsb
test
inc
jnp
test
lods
js
out
leave
sbb
mov
inc
leave
push
out
test
or
push
idiv
scas
aam
das
pminsw
and
fdivl
mov
or
repnz
adc
jnp
loop
mov
pop
cmc
lret
mov
mov
cmp
insb
sbb
or
inc
cmp
mov
repnz
pop
nop
fdivr
aas
mov
cmp
pop
mov
call
ss
in
shrl
lock
loopne
aas
cli
addr16
ret
ja
add
mov
movsb
sarb
jb
mov
and
in
jmp
lcall
out
xchg
sbb
adc
mov
in
mov
xchg
push
orl
mov
pop
push
lods
into
adc
sarl
mov
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
jecxz
in
bound
pop
jne
inc
stos
mov
pop
adc
jp
adc
xor
mov
pop
and
ljmp
and
ljmp
mov
sbb
mov
jbe
push
push
and
jnp
hlt
adc
movsl
roll
scas
lods
or
fs
cmp
cmpsb
push
stos
ret
mov
push
pop
je
rolb
fstpl
adc
xorl
jge
mov
sbb
frstor
push
rolb
enter
dec
sub
fisubrs
xchg
mov
test
mov
leave
xor
out
into
xchg
popf
add
pop
test
lods
fwait
outsb
iret
mov
sbb
stos
out
push
out
push
sub
insl
xchg
clc
test
sbb
adc
test
push
pcmpeqb
pop
jle
push
push
adc
pop
xor
popf
stc
and
xor
pop
add
das
cmpsl
mov
test
jecxz
lea
les
mov
xchg
in
push
or
out
sub
sti
mov
cmp
cmpb
adc
push
arpl
cmpsl
mov
and
mov
sbb
or
push
cmp
shll
xchg
repz
xlat
dec
inc
sub
mov
je
hlt
out
out
add
mull
shl
gs
and
cli
dec
inc
in
push
sub
mov
fstps
lahf
into
add
daa
into
gs
dec
loope
out
push
in
gs
cs
mov
sub
fistps
add
mov
push
push
popf
lret
dec
shlb
enter
pop
inc
dec
scas
inc
and
ret
push
mov
fldenv
repnz
aad
cmpsl
subl
or
pop
sub
or
jne
in
jle
sbb
sbb
in
jmp
or
and
or
cmpsb
aas
xor
cmp
mov
loopne
fistpll
mov
fs
or
in
pop
add
lret
mov
and
mov
sub
fadds
xchg
insb
jae
sub
add
stos
je
lock
icebp
adc
stos
sbb
mov
lock
xor
mov
push
inc
cwtl
js
pand
pop
outsl
inc
jae
rcll
pop
mov
and
add
sub
mov
push
ret
add
cmp
xor
dec
or
xchg
xor
call
pop
push
sub
xchg
xchg
inc
push
xchg
es
mov
push
mov
inc
loope
shl
mov
dec
add
mov
mov
push
push
shld
jle
mov
stos
adc
pop
daa
mov
jo
pop
ljmp
mov
mov
mov
out
fmull
mov
subb
or
dec
and
arpl
jnp
arpl
outsb
add
or
xchg
repz
in
xor
cmp
sub
xor
es
mov
jae
inc
repz
mov
and
lea
mov
shr
or
mov
jmp
pop
pop
mov
push
fisttpll
pop
lods
pop
push
adc
jp
adc
enter
cmp
imul
jge
sub
icebp
jno
lcall
enter
fists
les
cmp
pop
lock
in
xchg
add
sti
cs
dec
bound
mov
aad
mul
push
cmc
adc
sbbl
inc
mov
mov
lahf
xchg
mov
cmp
inc
jo
dec
test
sub
lea
mov
leave
je
repnz
enter
mov
pop
push
inc
insb
cmp
dec
inc
mov
addr16
xchg
xchg
mov
push
inc
jb
imul
imul
mov
cmp
orl
or
jl
jp
dec
adc
xor
lods
mov
xor
push
xor
aas
bound
push
pop
add
das
outsl
sub
repz
adcb
pusha
rcrb
adc
cmc
adcl
pop
fs
ds
lods
mov
push
xchg
and
cmp
pusha
mov
call
das
jmp
xor
lods
xchg
nop
jmp
lods
sub
push
pushf
cmp
sub
adc
out
je
add
or
mov
sbbb
in
sub
push
das
lods
jo
js
cmp
sub
or
jl
mov
lds
mov
mov
jo
inc
movl
mov
xchg
xor
in
mov
stos
outsl
mov
jns
pop
mov
push
arpl
xchg
ret
imul
push
mov
lahf
rorb
lcall
mov
sub
imul
and
or
mov
jnp
push
push
mov
inc
enter
push
int3
or
sub
lret
cwtl
cli
rcrl
rcl
pop
mov
lods
rclb
lea
sbb
cmp
sub
shrb
mov
aaa
xchg
add
sbb
add
out
enter
sub
fmul
pop
dec
adc
xchg
add
cmc
imul
sub
sub
rcrb
pop
jmp
adc
add
mov
insl
and
loop
fldenv
mov
popa
inc
stc
xchg
sarl
fcomp
popf
xor
adc
inc
ficoms
gs
mov
fbld
addl
gs
push
sub
decb
mov
insb
rorb
mov
test
rcll
inc
movsb
xchg
xchg
xchg
in
ja
sbb
test
mov
mov
aaa
mov
pop
in
and
and
fldl
andb
dec
ja
mov
jnp
loope
call
xchg
test
sub
jb
jno
fisttpll
mov
fs
and
cmp
in
xchg
loopne
enter
popa
jp
jnp
out
test
pop
adc
mov
and
mov
repnz
jle
out
mov
jo
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
mov
add
push
push
add
push
or
mov
sbb
mov
shrd
cmpl
movzbl
movl
mov
jmp
mov
mov
jne
push
push
push
pushl
push
pushl
call
orl
and
mov
mov
sbb
sub
negl
shr
cmpl
movl
mov
jmp
movzwl
jg
push
push
pushl
call
add
movzbl
adc
mov
adc
movzbl
sbb
xor
xor
xor
mov
sub
sub
mov
adc
mov
movzwl
or
mov
mov
movzbl
xor
xor
xor
mov
xor
mov
or
neg
mov
mov
sbb
shl
mov
sbb
shrd
sub
xor
adc
shr
xor
or
add
mov
jmp
jnp
add
mov
ficoms
push
pop
jp
outsb
inc
adc
lea
adc
mov
test
mov
pop
inc
mov
push
sub
sahf
ret
not
bound
out
scas
rcl
scas
or
xchg
loope
clc
cmp
lock
push
jge
mov
ljmp
inc
sti
and
xchg
jno
out
jle
outsl
mov
js
mov
lahf
movsl
mov
pop
je
mov
cs
imul
dec
mov
dec
insl
fldenv
xchg
dec
movsb
push
js
sub
jge
xchg
pusha
lahf
fidivs
dec
or
mov
out
xchg
repnz
mov
cld
arpl
and
mov
sub
cmpsb
mov
adc
push
cmp
mov
leave
add
xor
xor
jo
mov
mov
test
cmp
imul
cli
js
mov
mov
xor
xchg
fmull
sbb
test
popa
mov
cmp
push
xor
push
push
movsb
fnsave
repz
popf
xor
test
mov
cmp
dec
push
sbb
jl
sub
lds
jg
sub
xor
fadds
pop
add
rorl
push
int
in
xor
push
mov
add
cld
aam
cld
and
add
dec
and
pusha
shll
pop
add
fnstsw
in
inc
movl
add
out
or
mov
mov
divb
or
pop
int
pusha
xor
pop
inc
xchg
fwait
imul
sti
test
cmp
jl
dec
sti
dec
cmp
pop
mov
or
aaa
in
int3
or
xor
ljmp
hlt
dec
aaa
imul
jbe
jmp
add
push
jge
lods
je
jp
lods
add
and
xchg
sbb
mov
ja
call
sub
fdecstp
std
jae
add
xchg
push
pop
cmp
ret
pusha
lret
shll
push
xchg
in
push
jg
cmp
and
sub
mov
nop
dec
ljmp
test
cs
frstor
lcall
mov
lds
mov
push
in
xor
shll
sbb
pushf
rorl
push
ja
lds
inc
mov
cmpsl
pop
aad
test
mov
cmp
adc
ror
add
push
outsb
sbb
add
or
pop
addb
add
cmp
scas
ljmp
mull
xor
mov
test
or
add
loope
add
xchg
mov
sub
les
loopne
adc
lea
adc
xlat
ficomps
xor
and
push
pop
inc
or
and
inc
mov
sub
repz
adc
call
enter
jne
inc
out
sbb
inc
cmp
and
push
add
inc
jo
nop
bound
xchg
repz
push
out
test
dec
xchg
mov
nop
dec
cmp
mov
cmp
ror
jns
xor
fmull
xchg
test
and
and
push
lcall
sub
loop
test
insl
pusha
test
push
add
addl
lods
cmpsb
aam
cmp
mov
mov
in
pop
pop
btr
jb
cmpb
jg
js
mov
mov
mov
and
adc
inc
test
cmp
outsl
push
daa
sarl
lcall
repz
jle
cld
dec
push
lea
sbb
out
adc
cmp
add
mov
aas
mov
scas
jl
out
jecxz
xchg
bound
push
repz
jge
test
ret
pop
cli
ds
xchg
adc
sti
movsl
add
add
cmp
adc
mov
mov
mov
popf
outsl
clc
imul
and
jl
xor
push
inc
sbb
out
addr16
mov
outsl
lods
xchg
pop
mov
icebp
pop
dec
sahf
jno
ret
dec
inc
sahf
je
sub
in
pusha
fcmovnu
cmp
add
jle
mov
push
or
imul
push
jne
shll
test
cmp
xor
int
clc
mov
mov
aam
and
mov
test
add
pop
test
pop
cmp
call
sub
daa
inc
scas
jns
cmp
jb
push
stc
mov
call
pop
xchg
daa
mov
jl
loope
cmp
jecxz
mov
pop
cli
jecxz
mov
push
les
and
rcrl
stos
pop
push
inc
jns
orb
sub
fxch
push
gs
fisubrl
call
jl
cld
insb
lcall
pop
sbb
pop
adc
jge
pop
flds
xchg
mov
add
jp
rcrl
les
adc
in
add
ret
std
cmp
test
inc
jecxz
mov
rclb
nop
stc
cmpsl
call
jecxz
sahf
add
jmp
into
popf
sub
jne
inc
add
movl
not
mov
jmp
mov
jg
push
push
push
call
sbbl
adc
andl
mov
mov
xor
xor
or
mov
adc
adcl
neg
xor
or
mov
mov
sub
or
mov
mov
xor
or
mov
sub
sub
mov
xorl
mov
or
mov
xor
mov
movzwl
sub
mov
cmpl
mov
mov
mov
jmp
mov
jle
push
call
sub
and
subl
or
or
adc
mov
mov
cmpl
movzbl
mov
jmp
mov
jb
push
push
call
mov
xor
xor
sub
or
xorl
adc
sub
sbb
mov
shl
mov
sub
xor
or
xor
sbb
mov
xor
adcl
shld
shl
mov
mov
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
xor
xor
add
sbb
xor
xor
mov
cmpl
mov
mov
mov
mov
jmp
movl
movl
jg
push
call
movl
and
sub
subl
movl
mov
shld
movl
shl
cmp
movl
jne
movl
cmp
je
and
mov
xor
or
and
mov
push
movl
pop
or
xor
shl
mov
addl
xor
adcl
shr
addl
or
mov
or
mov
mov
mov
mov
cmpl
movzbl
mov
jmp
mov
mov
jl
pushl
push
pushl
push
call
mov
add
inc
mov
and
sub
mov
jmp
add
int3
sub
inc
les
pop
inc
adc
lea
adc
cmpsl
outsb
lods
loopne
je
jl
hlt
add
pop
inc
inc
xor
sub
inc
and
inc
js
sbbb
sbb
js
inc
imul
mov
lahf
dec
jl
sbb
or
push
aam
push
mov
inc
pop
dec
test
stc
loopne
cli
mov
inc
sbb
sahf
push
fld
xorb
insb
push
or
gs
pop
pop
pop
mov
insb
fwait
push
ss
fcmovne
or
sbb
stc
push
ljmp
addl
daa
loopne
cmp
jae
and
xchg
das
sbb
es
mov
shlb
push
addb
cli
pop
scas
add
jecxz
je
mov
jb
dec
add
or
out
call
and
jae
jns
pop
addb
roll
adc
lret
pop
insl
leave
ljmp
dec
fmuls
pop
pop
sbb
pop
ljmp
sbb
sahf
or
stos
pop
jmp
mov
lea
stc
sub
or
dec
cmp
fs
in
adc
mov
mov
jnp
mov
das
cmp
mov
sub
adc
popf
out
daa
fistps
scas
jge
add
daa
sub
mov
lcall
sub
mov
adc
ret
out
subl
cwtl
icebp
mov
or
mov
push
lods
jecxz
add
mov
stc
clc
cmp
inc
out
mov
push
mov
xchg
cmp
sbb
fimuls
add
jbe
sahf
fldl
hlt
push
push
sbb
int
mov
es
inc
stc
cwtl
nop
push
xchg
aam
mov
aaa
mov
nop
jge
cmc
ret
mov
cwtl
inc
divl
mov
hlt
inc
mov
adc
and
iret
iret
test
pop
outsl
repnz
and
inc
test
push
mov
inc
dec
mov
add
inc
addr16
lock
push
cmp
rolb
jb
xor
jecxz
stos
jmp
jle
mov
xlat
sub
or
scas
mov
icebp
fcompl
add
xrelease
insb
outsl
pop
push
sbb
xchg
loope
out
mov
bound
push
outsb
sbb
pop
xchg
cmpb
in
in
pushf
mov
sbb
nop
push
lret
jmp
mov
cs
push
push
sub
das
push
out
adc
sub
mov
subl
add
mov
cmpl
movzwl
movzbl
mov
mov
jmp
movl
movl
ja
pushl
call
or
and
or
xor
mov
adc
adc
mov
xor
mov
lea
andl
mov
addl
mov
xor
mov
xor
xorl
xor
addl
shr
subl
shl
or
mov
movl
add
mov
mov
xor
xor
andl
shr
addl
shl
sbbl
or
subl
push
lea
push
subl
lea
push
call
cmpl
mov
mov
jmp
mov
movzwl
ja
pushl
push
push
call
adc
movzbl
sub
and
mov
xor
adc
or
sub
xor
xor
mov
and
mov
cmpl
movl
mov
mov
jmp
movl
movl
jae
push
pushl
pushl
pushl
call
sbb
sub
adcl
or
sbb
xor
add
mov
sub
and
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
mov
pop
cmp
shlb
mov
aaa
adc
lea
adc
xor
aas
ljmp
inc
lods
iret
mov
addr16
mov
pop
jl
subl
test
add
pop
stos
fwait
pop
jo
jae
into
in
cmp
dec
fs
bound
sub
mov
jno
pop
fstp
ljmp
cld
sahf
lock
cmp
in
or
push
in
inc
lcall
fimuls
or
in
int3
or
stos
xor
fstpl
inc
jne
enter
and
or
adc
test
mov
into
sbb
cmpl
and
or
mov
inc
shl
mov
int
ret
push
out
leave
mov
stc
in
jg
push
push
lcall
xor
inc
sbb
mov
xlat
adc
imul
loopne
adc
pop
in
mov
into
fldt
dec
xor
mov
in
js
rcll
pushf
mov
ja
mov
movsl
jnp
sbb
insl
gs
sbb
pop
jl
mov
inc
gs
outsl
jmp
ss
sub
rcr
sub
std
fidivrs
insl
pop
cmp
cld
sti
testl
push
pop
dec
test
pop
xor
xchg
leave
cs
out
fsubrl
inc
fcmovne
arpl
aaa
fbld
mov
sbb
jmp
iret
sahf
add
ljmp
jmp
lods
jmp
xchg
into
lock
xchg
sbb
push
xchg
mov
shrb
out
mov
sbbl
inc
push
hlt
sbb
cli
movsb
les
sbb
roll
ret
test
xor
int3
fdivp
rcl
enter
leave
mov
fiadds
fwait
repnz
leave
test
fbld
aam
push
pop
inc
mov
mov
add
hlt
pop
jb
sbb
addb
or
gs
push
sbb
mov
xor
pop
mov
fistpl
dec
adc
adc
xor
ret
andl
mov
xchg
iret
lds
pushf
inc
mov
fs
add
pop
nop
sbb
mov
inc
incb
lret
adc
and
arpl
sbb
repz
test
mov
pop
dec
and
shlb
ljmp
adc
sbb
popa
cmpsb
repz
test
ss
push
pop
push
push
inc
rol
add
clc
aas
in
push
dec
adc
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
jmp
xchg
sbb
sbb
sbb
inc
xor
adc
fcoms
call
jae
fstpl
addr16
movsb
pop
mov
mov
inc
push
mov
cs
jno
mov
jmp
adc
cmp
scas
pop
dec
sbb
push
outsb
or
adc
xchg
ja
arpl
xchg
cwtl
cmc
xchg
sti
jo
fs
jl
pop
cwtl
push
imul
mov
pop
aam
jb
ret
jmp
mov
mov
lock
fwait
inc
in
mov
cmpsb
lahf
sbbl
mov
and
mov
xchg
gs
out
popa
pop
inc
cmp
lods
pop
jp
sbb
mov
popf
movsl
pop
adc
pop
mov
movsb
mov
lock
test
idivl
jb
ds
cmp
testb
sbb
jmp
in
push
mov
push
mov
ja
jne
addb
repnz
cli
or
sub
aad
and
cmpsb
movl
xchg
mov
cmpsb
xor
in
push
push
fistl
pop
dec
push
or
aam
push
mov
push
cli
jmp
cvttps2pi
mov
into
cmpsl
leave
inc
movsb
pop
into
insb
mov
push
jecxz
lods
aaa
in
sub
in
fistl
cld
pop
movsl
sti
hlt
push
pusha
pop
jl
jbe
push
xor
in
and
mov
rorl
sub
add
inc
dec
aam
push
mov
sarl
sahf
cwtl
fwait
rorl
nop
fcomi
sub
lret
mov
lret
or
cmc
fcmovnb
repz
pusha
sub
cmpsl
repz
mov
mov
mov
pop
xchg
sub
or
aad
inc
sub
mov
je
push
int
xor
test
mov
and
repz
outsb
sbbl
ret
adcb
add
sub
inc
pop
xchg
ja
sbbb
push
mov
xor
testl
or
movsb
insb
inc
cmp
popf
hlt
scas
out
xchg
or
push
fwait
cmp
pop
test
sbb
sub
jle
mov
sbb
mov
hlt
insb
mov
into
sbb
into
es
xor
mov
hlt
movsl
inc
fstps
dec
cmc
movsl
out
in
in
cmp
ds
adc
push
movsb
mov
sahf
cltd
fcmovnb
bound
hlt
mov
in
ja
nop
jg
inc
jle
dec
fidivrl
out
insl
push
xchg
mov
pop
mov
cltd
sub
pop
imulb
inc
lds
and
cs
mov
push
inc
pop
inc
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
jmp
mov
add
sub
jle
sub
leave
out
stos
mov
movlps
cmp
fwait
sbb
mov
cmc
arpl
out
fisttpl
dec
jp
nop
arpl
lock
loopne
xchg
movsb
or
xchg
pop
rcrb
fdivrl
mov
jle
lock
sahf
mov
lahf
clc
ss
push
outsb
jae
movsl
push
push
add
cmp
jge
movsl
int
jg
mov
jnp
adc
push
mov
in
std
xchg
testb
xchg
imul
fisttps
sahf
sbb
xor
repz
iret
or
arpl
push
jne
jo
adc
mov
outsb
jle
sbb
clc
add
push
xchg
shll
inc
icebp
sub
push
mov
push
push
subb
sbb
std
pop
push
mov
xchg
mov
xchg
movsl
cmp
add
inc
mov
sub
push
push
hlt
jae
dec
mov
popf
arpl
push
ret
xor
nop
mov
push
out
lcall
xchg
ret
inc
inc
leave
or
call
repnz
fucomi
ficompl
sub
and
inc
jne
add
mov
or
sbb
rdtsc
push
cmpsl
mov
lea
cmpsb
aas
jge
add
fwait
xchg
jo
pusha
add
push
sub
ljmp
push
and
arpl
shl
shrl
shl
ficomps
ljmp
out
jno
std
es
jecxz
sbb
pop
fadds
es
lods
movsl
imul
inc
insl
mov
push
in
jmp
adc
lock
push
punpckldq
movsb
cmp
mov
jne
or
hlt
push
sbb
cld
adcl
sbb
xlat
inc
push
fstpl
cmp
fwait
insl
cmp
push
jp
xor
mov
lock
mov
fsubs
cmp
aad
cld
pop
add
mov
and
test
lock
xlat
out
outsl
cmp
pop
test
ret
jecxz
add
mov
add
aas
std
or
push
popf
ja
out
aam
jp
pop
jmp
jg
scas
lret
shll
lret
repnz
push
imul
add
scas
xor
int3
mov
adc
mov
push
mov
sub
xchg
or
inc
dec
dec
dec
mov
popf
iret
lahf
shlb
lret
js
or
outsb
sbb
aas
in
aam
jnp
stc
or
xor
out
cmp
cli
jno
mov
mov
mov
mov
xor
xor
or
push
add
jmp
and
lods
and
js
lret
fdivrl
lea
adc
call
inc
inc
mov
pop
pop
and
inc
dec
stos
sti
loopne
aaa
rol
nop
movb
fwait
loopne
mov
or
bt
push
je
out
aam
push
xor
pop
mov
jecxz
fcomi
dec
stos
xor
sbb
cmc
int
add
cmp
sub
or
mov
mov
cmpsl
mov
and
push
lret
pop
in
movnti
roll
mov
lcall
mov
mov
mov
add
int
cmp
sub
and
xor
sahf
pop
push
or
dec
stos
fs
mov
dec
sbb
insl
sbb
mov
inc
mov
jl
nop
adc
jbe
push
testb
cwtl
dec
ss
push
test
sub
jne
adc
sub
push
outsb
std
xchg
call
xchg
inc
mov
out
movsl
dec
fbstp
adc
xchg
pop
subb
dec
add
xor
push
push
daa
mov
pop
dec
mov
mov
sub
lret
imull
call
les
xchg
insb
daa
inc
mov
cmp
jne
sub
mov
and
jnp
jae
pop
pop
data16
push
xchg
sbb
sbb
mov
adc
imul
xchg
xor
fbstp
ljmp
outsb
push
mov
xor
pop
stos
inc
and
push
sub
shr
out
inc
dec
popf
add
push
xor
mov
out
xchg
ret
mov
imul
orb
sbb
jnp
xchg
int
ficompl
inc
testl
cmp
nop
daa
or
adc
std
inc
push
xor
and
jne
sub
sbb
dec
stos
fisubrs
xor
xchg
sbb
jecxz
jecxz
in
jbe
mov
pop
adc
pop
sbb
xor
scas
in
cmp
dec
push
ret
aaa
mov
out
shl
xchg
mov
lods
jmp
xchg
inc
mov
inc
mov
mov
push
cmp
pop
movsl
scas
inc
push
mov
adc
outsb
aaa
add
mov
lock
mov
frstor
fisubl
push
mov
mov
mov
xchg
outsl
push
mov
arpl
out
in
sahf
ja
push
xor
mov
jge
imul
jne
cmpsl
jle
test
pop
popf
xor
dec
jmp
jae
mov
jns
mov
inc
push
lea
push
shl
call
jmp
outsl
xchg
pop
test
add
mov
movlps
jp
ljmp
and
xchg
movsb
and
xchg
jmp
add
scas
mov
lret
jo
hlt
xorb
mov
repz
mov
mov
arpl
mov
sub
add
stos
add
inc
pop
fmul
insl
pop
sub
sbb
and
mov
iret
popf
fildll
mov
lcall
aaa
pop
jb
sarl
mov
inc
jne
xchg
insb
pop
push
adc
pop
cmp
mov
sub
mov
xchg
push
add
push
in
sub
add
adc
int
push
das
repnz
pop
sbb
mov
cmpsl
loope
iret
jno
pop
fisttpl
push
inc
inc
dec
pop
roll
push
div
ja
add
jo
cmp
aaa
fs
sbb
xor
push
lret
in
mov
lcall
or
cmp
scas
sbb
call
cltd
dec
xor
xorl
fdivrs
lret
das
mov
in
or
in
sub
ja
std
mov
cmp
sub
scas
pop
cmp
shll
out
pop
mov
popf
je
xchg
cmpsb
push
push
aaa
pushf
pop
xchg
dec
jo
mov
movsb
mov
push
aas
cmp
or
cmp
aam
popl
cmp
nop
and
mov
jno
rol
outsb
movsl
sbb
or
push
ret
fcoml
ret
xor
xchg
adc
or
add
fwait
repz
pop
jmp
push
adc
outsl
lcall
flds
gs
dec
aaa
std
cmp
push
mov
test
lods
fisttpl
jp
daa
pop
psubw
lcall
mov
fistl
jae
mov
cmpsb
inc
addr16
test
ds
hlt
fldt
xchg
cmp
lret
inc
scas
adc
sub
xchg
imul
fwait
clc
or
popf
xor
add
insb
push
xchg
std
jae
ljmp
popa
scas
pop
jecxz
sub
adc
xor
sub
mov
jb
aad
adc
ss
arpl
in
xchg
jbe
cmp
repnz
jo
fs
adc
out
fbld
add
xor
jbe
sahf
scas
inc
fs
inc
adc
enter
add
adc
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
jmp
jge
jbe
jne
jge
das
adc
push
push
sbb
adc
subb
shll
adc
fdivrl
sbb
jb
neg
ficoms
pop
loop
flds
pop
stc
mov
cmp
cmpsl
lahf
enter
les
push
loope
std
ret
movsl
andl
and
cmp
push
pop
out
mov
dec
sarb
dec
repnz
or
and
inc
mov
or
iret
stc
ljmp
cmpsb
jae
push
or
aam
inc
lods
mov
imul
jo
inc
xchg
jae
scas
xor
call
fists
fisubrl
sbb
push
stc
test
push
adc
mov
in
dec
or
dec
jno
xchg
mov
mov
xchg
ret
imul
aam
stc
hlt
jne
dec
inc
movsl
push
fistps
test
repz
out
push
lods
xor
ret
inc
test
sbb
data16
mov
sti
dec
mov
gs
leave
lret
adc
fwait
sub
cmpl
xchg
aad
jno
movb
push
in
sti
out
mov
jo
xchg
xchg
inc
repnz
aaa
icebp
gs
test
mov
push
sahf
add
push
cmpsb
mov
mov
cmc
push
xchg
enter
and
cmpsb
xor
sub
and
loop
mov
movsb
xorl
dec
push
push
lods
xchg
mov
fwait
jb,pt
nop
jae
sbb
daa
mov
sub
loopne
das
lds
mov
mov
mov
ja
xchg
cmpsb
fnstsw
data16
push
cmp
jae
cmp
movsb
adc
jns
scas
fistpl
clc
push
push
jp
dec
dec
mov
lea
push
out
icebp
mov
ds
iret
xor
and
sub
fmull
mov
sti
fstpt
xchg
cmp
mov
es
rolb
pop
flds
repz
mov
mov
lret
inc
jnp
test
inc
movsl
add
pop
sub
das
test
lret
js
pop
sub
push
adc
dec
push
ss
cmpsb
lret
sahf
jg
in
xchg
insl
inc
clc
inc
ljmp
call
addr16
dec
pop
pushf
and
dec
daa
sbb
das
int
dec
in
or
jnp
mov
push
cmovge
lods
and
add
enter
ss
mov
scas
lea
loope
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
adcl
or
mov
mov
jne
cmpl
movl
movl
movl
jmp
mov
mov
jne
push
pushl
pushl
push
call
adcl
sbbl
add
orl
xorl
subl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
fs
push
stos
sbb
dec
loop
cmp
adc
mov
jb
xor
int
ja
pop
cmp
iret
mov
je
jns
cltd
test
jb
mov
rorl
pusha
jge,pt
arpl
push
movsb
lret
addr16
scas
jmp
outsb
mov
addb
adc
scas
adc
cmp
jecxz
decb
adc
add
es
rdpmc
cli
popf
xchg
cmpb
sbb
les
in
mov
aas
insb
out
adc
aad
les
jecxz
and
fbld
fildll
dec
push
sbb
jae
cmp
sub
enter
mov
sub
sbb
adcl
xchg
js
inc
out
adc
in
enter
shll
pop
jge
push
push
icebp
add
mov
xor
pop
dec
push
mov
inc
hlt
pushf
arpl
les
sub
pop
inc
xchg
push
std
push
fwait
mov
inc
loopne
sub
sti
fildll
lods
mov
jecxz
fwait
or
and
jbe
sub
and
lock
xor
push
inc
sbb
pop
inc
push
dec
cwtl
pop
cmp
mov
in
fnstenv
or
int
addr16
scas
xchg
xchg
fsts
jno
xchg
pop
jle
mov
in
add
jecxz
push
inc
inc
mov
jns
mov
sbb
and
outsb
xchg
lock
aad
iret
adc
sbb
or
ds
mov
push
ret
shll
sub
aad
aaa
pop
rorl
pop
add
enter
das
jecxz
cmp
test
jmp
xor
scas
push
sub
aaa
cmp
sarl
dec
pop
iret
fildl
scas
jae
push
loope
ljmp
or
xchg
inc
push
ficompl
mov
pop
adc
adc
stos
dec
aam
mov
dec
xlat
mov
push
jl
mov
push
imul
inc
mov
fistps
dec
lret
jns
fs
xchg
ds
add
test
gs
adc
test
push
jmp
mov
adc
inc
stos
sahf
ljmp
add
cld
push
mov
test
mov
inc
dec
jo
adc
std
inc
lahf
lret
mov
loope
push
and
ds
imul
pushf
xchg
mov
cmp
xchg
cmp
shlb
and
ja
iret
sub
shll
pop
pop
ss
mov
sub
inc
xchg
push
pop
dec
addl
test
adc
pop
out
ret
int3
mov
adc
fwait
mov
mov
xchg
and
out
sbb
scas
shl
int3
sbb
mov
xchg
push
inc
jnp
xchg
loope
inc
js
insb
int
mov
call
lret
int
test
jne
sbb
andl
mov
in
inc
test
or
dec
and
jmp
lea
mov
mov
mov
fidivrl
std
xchg
push
jae
sarb
adc
rcrl
jmp
stos
mov
inc
adc
leave
lock
dec
stos
mov
bound
call
mov
ret
daa
icebp
repnz
ja
add
dec
in
pop
faddl
enter
arpl
mov
hlt
fsubr
push
cmpsl
aad
pop
lret
data16
xor
adc
insl
push
fsubrl
std
ljmp
enter
in
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
jmp
imul
scas
std
dec
and
mov
adc
adc
rcrb
xor
test
cmp
xchg
ljmp
daa
rcll
cltd
aam
stos
out
mov
in
in
ret
mov
mov
mov
sbb
hlt
push
fistpl
fst
repnz
and
sub
sbb
out
jae
neg
xor
lds
lret
and
shrl
dec
mov
hlt
out
loope
mov
dec
dec
mov
mov
mov
or
cmp
sbb
in
pop
fs
call
xor
testl
test
add
sarb
dec
push
push
out
addr16
sub
cmc
cmc
push
repnz
mov
out
jl
jbe
leave
cmp
mov
aas
adc
inc
movsb
sbb
repz
arpl
popa
imul
push
ds
loopne
adc
fbld
mov
push
push
lret
add
pop
aaa
xor
jp
cmp
mov
popf
xchg
sbb
adc
pop
rolb
cmp
loop
mov
sub
pop
push
xchg
enter
push
jb
insl
imulb
push
insl
mov
or
and
pop
and
mov
xchg
iret
fwait
dec
cs
stos
and
xchg
iret
outsl
or
jg
lahf
std
sti
jne
ret
movb
mov
xor
push
jge
sub
lahf
jecxz
aam
mov
cmc
nop
fsts
push
dec
mov
leave
add
add
push
pushf
aaa
inc
jno
cmp
scas
mov
iret
fists
xor
add
fimuls
jg
aam
dec
sub
jne
cmp
xchg
dec
dec
jns
mov
popa
and
mov
jl
pop
pushf
push
nop
cmp
in
jbe
lret
sub
loop
jne
sahf
mov
mov
mov
mov
pop
scas
adcb
decl
and
or
xchg
pop
adc
fbld
sti
scas
jo
sub
xchg
and
aaa
mov
mov
shrl
pop
addb
aam
xor
outsl
and
mov
push
out
scas
daa
add
add
mov
pop
adc
or
sahf
or
loopne
call
int3
and
cmp
cmp
cltd
ret
fucomp
mov
outsl
lsl
mov
sub
lds
sub
adc
sub
xchg
jbe
adc
mov
pop
dec
add
dec
dec
xchg
jbe
or
dec
repz
imul
lods
pop
ret
mov
inc
push
xchg
inc
dec
or
lods
loope
sub
adc
mov
xor
or
sub
xchg
mov
dec
inc
push
test
dec
push
sbb
pushl
xor
mov
dec
cmp
ljmp
jb
sar
and
leave
fldt
adc
mov
js
adc
jns
outsb
addl
mov
insl
mov
mov
push
mov
xor
push
int3
mov
inc
cmp
nop
cmp
mov
mov
adc
lods
aad
inc
in
imul
mov
das
jg
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
jmp
lret
lahf
push
pop
sbb
leave
pop
jmp
call
js
pop
adc
adc
xor
mov
and
mov
jo
xchg
jns
push
pop
push
mov
jbe
std
push
ret
dec
mov
inc
bound
push
test
in
not
cmp
mov
dec
adc
cmp
xor
push
xchg
fmulp
and
push
lds
sahf
adc
sub
jne
aas
ljmp
gs
aad
popa
dec
pop
and
jmp
push
popa
xchg
fsubrl
adc
inc
mov
ljmp
scas
aad
mov
inc
push
cmpsb
adc
scas
mov
stc
xchg
mov
adc
mov
push
cwtl
repnz
lods
gs
fcoml
push
cmp
inc
lods
cwtl
dec
and
mov
in
jge
and
push
ljmp
fstpt
push
cmc
pop
int3
push
pop
pop
jg
cld
stc
mov
stos
xorb
rorl
in
fucom
or
mov
icebp
push
ret
fs
mov
mov
mov
lahf
shrb
sbb
ljmp
pop
mov
rclb
movsl
jno
cwtl
dec
mov
popa
outsl
mov
xor
or
cmp
and
inc
stc
sbb
or
push
lret
adc
ret
xor
dec
rcrb
loope
sbb
mov
xchg
mov
stc
xchg
mov
xchg
pop
movsl
pop
dec
addb
dec
xchg
cmp
pop
in
fcompl
jmp
dec
inc
aaa
lods
fnstenv
repz
js
inc
stos
xlat
fisubrs
mov
push
leave
aas
jae
in
dec
and
dec
xchg
in
cli
les
pop
xchg
es
adc
xchg
xor
add
ds
out
mov
xchg
mov
stos
faddl
std
repnz
addr16
enter
in
adc
pop
mov
dec
bound
stos
sub
mov
mov
cli
int
jmp
xchg
jg
sbb
push
testb
sbb
dec
movl
movsl
insb
xchg
sub
ss
mov
dec
out
bound
test
fbld
jle
shll
mov
adc
mov
dec
scas
repz
dec
repz
adcb
jmp
xchg
xor
jmp
and
mov
mov
ffree
xor
pop
pop
xchg
repnz
in
inc
in
inc
jmp
mov
lds
mov
push
add
mov
mov
ljmp
jmp
dec
loopne
push
ja
pop
pop
adc
mov
push
pop
dec
call
push
int
mov
nop
pop
cmp
aas
fdivs
push
mov
jo
mov
out
xchg
std
xor
loope
mov
mov
xchg
out
cld
lahf
bnd
dec
xor
mov
xor
push
ss
imul
std
inc
stc
adcl
mov
test
cmc
dec
loopne
repnz
pusha
dec
sti
negl
inc
xchg
popa
mov
movsl
insl
insb
dec
rcrb
mov
stos
jmp
mov
xor
push
sub
std
jne
xor
icebp
lret
cmp
pop
out
ret
pop
xchg
cltd
add
in
aad
sahf
mov
xorl
imul
ja
sar
jbe
sub
push
or
mov
dec
pop
sahf
add
dec
cs
into
mov
add
subb
mov
adc
xchg
stos
ja
out
pop
nop
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
call
mov
movzbl
push
call
test
jne
xor
jmp
adc
mov
cmpl
movl
movl
movl
jmp
movzbl
jbe
pushl
call
orl
addl
adc
sbbl
andl
mov
xor
mov
jmp
xor
push
or
cli
sbb
push
push
pop
lods
mov
adc
adc
or
clc
xor
lret
fnsave
insb
movzbl
lock
loopne
in
mov
test
cmpsb
test
push
fmull
fistl
fmull
add
movsb
push
addl
fchs
aad
rorb
add
mov
mov
pop
and
mov
je
insl
xchg
mov
jo
fucomp
adc
in
mov
jno
xchg
sbb
push
and
xchg
sbb
mov
pop
call
and
xchg
jge
and
sub
ficompl
inc
int
cmpsb
ljmp
shrl
ja
xchg
aam
push
push
mov
int3
loope
mov
int
je
imul
or
fs
mov
xor
mov
pop
xchg
popa
pop
loop
jnp
xor
xor
outsl
sahf
pop
shl
jmp
fstps
add
mov
mov
out
add
and
add
add
mov
jmp
in
fildll
sub
xor
enter
in
and
or
mov
push
movsb
push
sbb
inc
add
scas
repnz
add
pop
fisttpll
dec
aaa
sub
outsb
ljmp
test
les
add
dec
cmpsb
mov
and
lcall
and
movsl
xor
mov
stos
out
sub
addb
lret
icebp
fsubrl
iret
shlb
lcall
ds
test
sbb
dec
lret
pop
lock
push
divb
pushf
push
ss
and
add
cmp
adc
pop
loop
js
adc
data16
cli
mov
insb
mov
repnz
rol
push
fucomip
xchg
loopne
pop
add
into
sahf
mov
insb
and
jge
aam
cltd
mov
dec
adc
daa
pop
lret
inc
cmpsb
insl
fmuls
mov
ror
jbe
push
ror
jbe
ret
xorl
push
xor
cmp
push
stos
aam
jns
sti
int3
mov
mov
jbe
jl
mov
data16
mov
cmp
icebp
bound
jp
sub
ds
mov
cld
pop
out
ja
repnz
jb
mov
stos
xor
loopne
ss
dec
bound
mov
pop
out
imul
fs
aam
es
bound
sub
mulb
dec
negb
stos
imul
lret
daa
icebp
add
out
ds
mov
cmpl
movl
movl
jmp
movl
mov
je
push
call
addl
subl
and
andl
movl
orl
movl
adcl
push
mov
add
pop
mov
cmpl
movl
movl
movl
movl
jmp
not
movl
jl
pushl
push
push
push
push
push
push
push
call
subl
subl
addl
adcl
andl
neg
mov
xorl
mov
movl
mov
movl
mov
andl
movzwl
or
cltd
movzwl
xorl
idiv
cmpl
mov
movl
mov
mov
jmp
movl
movl
jne
pushl
push
push
call
xor
xor
mov
and
or
mov
mov
sbb
movzwl
sub
sbbl
movzbl
sub
mov
sub
mov
movzwl
addl
or
mov
or
mov
cmpl
movl
mov
mov
mov
jmp
movl
movl
jae
push
pushl
push
pushl
call
sub
sub
adcl
mov
or
addl
mov
mov
mov
movl
mov
mov
adc
mov
sbbl
sub
sbbl
mov
andl
xor
sbb
jmp
mov
sbb
push
or
std
adc
adc
test
adc
cmc
loopne
xor
mov
jbe
push
bndstx
repz
and
pop
push
test
bound
ljmp
test
mov
and
push
inc
xor
fmuls
sbb
loopne
jne
ljmp
add
stos
not
imul
fstp
ret
movsl
xor
dec
mov
jbe
aam
shrl
push
or
push
clc
jnp
adc
stc
repnz
clc
ret
test
stc
mov
mov
push
loop
jno
mov
sub
addr16
mov
es
mov
int
pop
mov
fstps
xchg
inc
cmc
mov
in
add
rcrl
adc
out
aas
stos
in
jno
pop
test
in
adc
sbb
xchg
mov
mov
sub
mov
jns
out
daa
aad
xchg
jecxz
notb
gs
mov
aad
outsb
fucomp
push
into
dec
lds
cwtl
jg
jo
adc
and
xor
sti
das
repnz
test
icebp
add
adc
cmpsb
cmp
sub
or
pop
rclb
nop
call
rcrl
mov
bound
add
sub
dec
ret
leave
cld
pop
testb
pop
faddl
nop
gs
testl
lods
sub
cmp
dec
mov
sbb
add
mov
iret
xor
or
test
cli
sti
in
testb
add
pop
idivl
lcall
adc
popa
enter
fdivs
mov
cmc
test
mov
pop
cmp
pop
repz
mov
stc
icebp
pop
cmp
data16
pushf
mov
popf
xchg
jbe
push
mov
adc
sbb
and
loope
jb
shll
imulb
mov
dec
push
rcl
mov
out
ja
divb
popf
mov
push
add
or
test
mov
dec
or
aad
psraw
std
or
sub
mov
mov
adc
pop
mov
ss
mov
sahf
iret
int3
cmpsl
mov
and
pop
sbb
jo
mov
dec
fwait
add
and
jge
push
push
aaa
fs
orl
xchg
sbbb
jno
iret
pop
enter
cmpsb
ljmp
xchg
mov
jg
jo
push
mov
mov
in
cmp
cmp
cmp
adc
pop
int
jns
or
insb
xor
sti
cmp
mov
sub
movl
mov
movl
cmp
movl
jb
sbb
movl
movl
movl
cmpl
movzbl
mov
jmp
movl
mov
jbe
pushl
call
sbb
mov
sub
mov
and
inc
movl
and
mov
cmpl
mov
movl
movl
mov
jmp
mov
jb
pushl
pushl
push
push
call
andl
sbbl
mov
sbb
movzbl
or
xor
xor
xor
xor
orl
add
mov
orl
xor
sbbl
div
mov
add
sbbl
and
pushl
pushl
call
movl
movl
mov
adc
movl
cmpl
movl
mov
mov
jmp
movl
movl
je
push
push
call
adc
xor
xor
mov
sbb
xorl
or
mov
xorl
mov
adcl
and
addl
or
mov
subl
and
xor
adcl
pushl
pushl
addl
call
not
pushl
dec
movl
movl
xor
movl
subl
movl
or
movl
cmpl
mov
mov
not
mov
jmp
movl
mov
jl
pushl
push
push
push
push
call
xor
and
sbb
adcl
movzwl
or
movl
movl
xor
movl
mov
dec
mov
andl
sub
sbb
mov
or
orl
and
xor
jmp
or
ja
mov
jle
adcb
stc
adc
adc
lods
xor
jmp
cmpsb
dec
push
fisttpll
fisttpll
pop
inc
aaa
xor
cmp
stos
and
push
sbb
sbb
iret
sbb
fcoms
decb
or
inc
insb
sbb
pop
sbb
jo
ljmp
xchg
loope
mov
jno
fistpll
inc
popf
jl
sub
jo
sub
sub
lods
xor
jno
inc
mov
ret
or
outsl
shll
push
int3
loope
pop
out
xor
xor
mov
sbb
mov
pushf
cwtl
lock
push
xchg
mov
int3
inc
and
ficomps
inc
stc
aad
xchg
test
jb
mov
insb
or
inc
pop
cld
pop
inc
fidivl
stos
jge
adc
xor
sub
shrb
sbb
dec
dec
dec
rcrl
dec
push
out
adc
mov
xchg
es
mov
mov
cmp
cld
xor
add
imul
pusha
js
mov
lahf
insb
in
mov
out
mov
sub
pop
popf
inc
pop
clc
inc
mov
pusha
popa
xchg
xor
insb
add
pop
pushf
scas
mov
out
xor
xchg
imul
ds
or
in
test
xor
jne
xor
dec
xlat
ret
push
pop
and
cltd
std
push
push
dec
data16
fstps
push
sub
dec
adc
shlb
dec
scas
orl
icebp
push
xor
stc
data16
push
cmp
adc
xchg
mov
push
xor
xor
pop
pop
mov
mov
mov
jne
sub
or
mov
xchg
pop
call
bnd
sub
jb
imul
push
xchg
cmpl
cmc
sarl
push
xchg
bound
add
or
mov
iret
leave
lods
loope
sub
push
aad
int
cld
arpl
rorl
mov
mov
out
pop
std
popa
xchg
jmp
jmp
mov
mov
shll
ljmp
aad
xchg
shlb
sbb
pop
xor
xor
cld
lret
test
push
jnp
xor
mov
jl
mov
inc
and
cmp
fdivl
shrl
insl
inc
mov
add
add
test
mov
dec
inc
outsl
push
cmp
nop
sahf
dec
mov
mov
jge
inc
add
rol
xchg
in
add
daa
add
pushl
xor
mov
mov
andl
add
xorl
and
cmpl
mov
movl
jmp
movl
je
call
or
or
not
or
mov
sub
mov
xor
and
pushl
sub
mov
mov
andl
imul
xor
or
mov
movl
sub
pushl
sbbl
call
adcl
dec
movl
jne
movl
cmpl
mov
movl
mov
mov
jmp
movl
movl
je
pushl
push
call
or
xor
mov
and
mov
sbb
mov
add
movl
mov
mov
movl
mov
xorl
call
lea
mov
cmpl
movzwl
mov
mov
movzbl
jmp
movl
not
jb
call
and
xor
or
sbb
neg
orl
mov
mov
sub
and
neg
lea
mov
mov
mov
sub
mov
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
call
add
xor
neg
xor
add
mov
adc
xor
xor
xor
add
sub
sub
xor
xor
mov
sub
xor
sub
cmpl
mov
mov
jmp
movzwl
movl
jbe
push
push
call
sbb
sub
mov
mov
add
adc
addl
xorl
xor
sbb
xor
add
shl
shr
or
and
mov
dec
mov
orl
mov
mov
sub
mov
xor
mov
mov
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
adc
sbb
sub
adc
movl
mov
adc
mov
mov
xor
orl
xor
or
and
mov
addl
push
xorl
pushl
addl
lea
adcl
push
subl
shl
call
addl
lea
andl
push
mov
subl
mov
lea
push
andl
mov
movl
lea
sbbl
mov
xorl
mov
mov
adcl
push
call
orl
push
sbbl
push
pushl
sbbl
call
and
mov
xor
mov
inc
mov
mov
add
shr
cmpl
not
movl
movl
movl
jmp
movl
jg
push
call
inc
sbb
adc
add
sbb
cmpl
mov
mov
jmp
mov
ja
push
call
and
adc
sbb
sbb
mov
xor
add
sub
or
shl
cmpl
mov
mov
mov
mov
jmp
movl
jne
push
call
add
mov
sbb
adc
sbbl
sbbl
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
jle
pushl
push
pushl
pushl
pushl
call
adc
xor
xor
add
xor
or
sub
xor
mov
sub
xor
add
adc
and
or
xor
mov
sub
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
jmp
incb
dec
dec
cmp
or
sbb
push
out
adc
adc
push
push
xor
lea
mov
add
cwtl
aad
adc
loope
push
loopne
shrb
cmpsl
lret
call
sarb
inc
pop
or
or
push
pop
test
test
mov
adc
ds
aad
test
add
insl
insl
stc
sub
gs
and
shlb
rorb
and
jmp
ret
in
xchg
push
hlt
out
imul
or
cmpsl
sti
daa
jge
xchg
mov
lods
in
sub
pop
pop
mov
mov
push
xchg
cmpl
dec
test
es
xor
jge
jno
pop
mov
mov
mov
pop
rorl
inc
int
xor
sub
push
arpl
mov
xchg
mov
in
adc
mov
pusha
ds
add
add
pop
push
cli
lods
cmpsb
mov
test
jb
pop
jmp
in
repz
dec
jmp
sarl
xchg
mov
or
sahf
test
lret
add
lcall
fld
fstps
xchg
imul
rcrl
in
xchg
shlb
ret
mov
cmp
out
sti
jb
dec
fidivrl
and
push
jnp
mov
mulb
js
sub
pop
push
cmc
and
pop
mov
negb
hlt
mov
or
sub
push
jo
mov
adc
fcoms
cld
into
test
in
loopne
adc
fcomps
jmp
cltd
cmp
pop
jo
jmp
pusha
lods
and
add
jecxz
test
or
or
mov
sahf
cli
push
sbb
cmp
out
out
xlat
adc
push
sbb
in
div
scas
fwait
sbb
push
xchg
pushf
xchg
xchg
mov
inc
mov
cmp
shlb
sub
pop
inc
addr16
popa
test
add
mov
cmc
lea
popf
jno
mov
dec
lea
pop
fmull
popf
movsl
les
sbb
push
imul
lds
sub
jb
idivl
das
pushf
enter
and
adc
or
sbb
xchg
mov
mov
adc
mov
rol
mov
les
mov
ret
es
mov
inc
fs
sub
mov
inc
pop
lret
lret
aaa
cmp
divl
xchg
js
sub
inc
push
in
push
and
mov
stos
inc
mov
stc
mov
or
or
dec
pop
lret
push
dec
lret
sti
cmpsb
call
and
pushf
jnp
add
inc
and
and
add
dec
and
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
ss
adc
sub
xchg
mov
ljmp
adc
pop
push
xor
and
push
jp
push
test
movsl
or
xor
popf
mov
and
push
adc
pop
or
jmp
pop
adc
add
sahf
mov
cli
movsl
in
outsl
into
imul
gs
lock
cmc
fstps
push
repz
sarb
cmp
jmp
shll
dec
jno
xchg
dec
mov
or
into
pop
ja
loop
xchg
add
adc
jle
or
inc
dec
orl
cmp
cmp
mov
rcrb
push
out
sbbl
int3
stc
mov
xor
sub
pop
or
iret
test
mov
ljmp
mov
test
inc
xchg
mov
push
pop
push
dec
xchg
popa
xchg
pop
xor
or
in
lods
repnz
mov
movsl
mov
test
xchg
rorb
test
addr16
jb
sub
mov
or
fisubs
rcr
das
sbb
xchg
xchg
jne
ret
mov
data16
sub
outsl
dec
adc
xchg
pop
shl
aad
mov
in
mov
xchg
bound
test
fimull
ds
sub
sbb
dec
and
inc
cmpl
cli
dec
push
jno
dec
outsl
ljmp
movsb
aam
inc
cltd
sbb
je
fists
imul
rcl
xlat
std
ret
ss
mov
jmp
inc
pop
dec
ljmp
in
movsl
adc
jb
mov
in
xchg
or
or
mov
inc
sub
mov
mov
fisubl
add
jnp
js
pop
aam
push
cmpsl
add
les
cmp
push
inc
or
fdivrl
mov
lret
outsb
cmp
loope
xor
adc
icebp
outsl
push
loopne
scas
jo
jg
push
cmpsl
sub
or
dec
xor
pop
dec
mov
into
xor
push
dec
shlb
pusha
mov
cmp
pop
xor
movsl
jp
ljmp
pusha
loop
or
xchg
stos
add
out
cmpl
lcall
arpl
ja
addl
sbbb
jecxz
mov
fwait
pop
clc
loope
pop
xlat
out
cmp
arpl
lcall
das
sbb
pop
push
xchg
enter
dec
insl
jo
sar
xchg
cmp
pushf
pop
sahf
ds
adc
xchg
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
jmp
cmpsb
xchg
mov
jns,pt
sahf
lods
incl
adc
adc
cmpsb
or
jle
cmpsb
cmpsl
xor
mov
or
jl
les
mov
ret
outsl
jns
in
or
je
mov
sahf
imul
sub
cmp
add
jbe
lret
movsl
ljmp
inc
into
xor
cmp
inc
test
inc
adc
test
outsl
jl
stc
cmp
mov
dec
mov
add
pushf
shlb
cmpsl
mov
xor
push
popa
aad
jb
adc
push
push
ficomps
mov
fdivrs
daa
pushf
jg
popf
aad
xchg
pop
jno
jnp
fs
fadd
sub
testb
add
nop
jnp
xchg
aas
imul
mov
add
loope
cmpsb
shll
add
addr16
jne
push
cmp
mov
dec
out
cmp
and
cmp
jge
nop
out
pop
cmc
add
mov
stos
test
fldcw
mov
lcall
inc
dec
testl
dec
push
jbe
and
sahf
mov
jo
xchg
push
add
loopne
xlat
lock
fldt
fs
lea
sub
je
jle
mov
pushf
nop
into
lock
cwtl
adc
loopne,pt
mov
pop
xor
out
lods
mov
sub
fs
rcrb
ret
inc
jl
fdivp
push
or
push
stos
loop
loopne
push
xor
cmp
js
int
clc
mov
push
mov
mov
mov
lret
popf
aaa
call
repz
fists
jecxz
out
and
or
jo
mov
out
and
dec
xchg
pop
ret
mov
pop
lods
addl
inc
and
sbb
mov
push
jns
enter
sbb
push
push
movsl
sub
pop
dec
xor
clc
outsb
sub
cmp
shll
call
lret
jo
cmpsb
lret
adc
add
or
cmc
je
loope
lea
mov
imul
mov
cmp
daa
cld
movsl
in
call
loop
sub
mov
sub
scas
ficoms
xor
dec
push
mov
pop
adc
imul
inc
cs
cmp
lret
pop
test
ja
inc
stc
stc
popw
sub
adc
dec
sbb
in
mov
aas
xchg
out
inc
subl
mov
sti
dec
fwait
push
fdivs
sub
jle
icebp
lea
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
jmp
cltd
add
cltd
fstp
jmp
lods
test
xor
xchg
movlps
mov
cwtl
sbb
cmp
cld
mov
pop
dec
sbb
push
dec
dec
inc
punpckhdq
imul
fldt
lods
and
mov
push
jmp
jo
push
xlat
jge
test
sub
std
hlt
in
test
sbb
sar
mov
jmp
fwait
mov
roll
scas
sbb
jb
cltd
es
stos
mov
jle
push
and
popa
mov
nopl
in
sahf
mov
xor
mov
or
push
pusha
push
notb
xchg
push
mov
mull
out
stos
xchg
jmp
push
or
push
sahf
mov
mov
sarb
cmp
pop
xchg
cltd
xlat
pop
cmp
ja
nop
sub
push
mov
imul
xchg
cmpsb
or
mov
xor
or
push
mov
stc
push
and
add
push
fsub
xor
clc
push
repz
adc
adc
pusha
or
call
pop
or
ret
jns
hlt
mov
arpl
or
pop
pop
movsb
xchg
mov
hlt
jle
xor
loopne
shlb
jg
pop
mov
or
lret
xchg
out
shll
lods
imul
mov
repz
addr16
dec
ss
sub
orb
jecxz
cmp
nop
lret
push
cs
push
pop
cmpsb
fwait
lods
mov
in
xchg
sbb
mulb
testb
jns
insl
in
push
mov
inc
lret
pop
daa
arpl
mov
test
mov
lret
stos
clc
mov
and
adc
imul
mov
scas
int3
adc
adc
adc
shl
out
decb
pop
and
xor
jl
dec
adc
add
and
outsb
inc
pop
lcall
or
insb
cmp
and
sarl
jg
push
fsts
sbb
shlb
xchg
xor
mov
js
push
xchg
test
lret
push
in
pop
icebp
test
je
push
mov
mov
cmc
jl
push
fistl
push
pop
lods
or
stos
fcmovb
pop
stc
or
sbbb
xchg
push
mov
xchg
frstpm(287
cwtl
iret
sub
or
in
loop
mov
mov
test
sbb
push
sbb
pop
dec
fnstcw
movl
rorl
or
add
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
jmp
cmp
cltd
fistps
sbb
js
ficoms
adc
fbld
fisttpll
jbe
add
mov
push
mov
push
out
or
cmp
mov
dec
ja
filds
out
lret
mov
adc
aaa
cmp
imul
in
xchg
in
lods
push
mov
imul
jno
push
jmp
pop
mov
into
insl
jbe
or
and
aad
mov
sub
mov
divb
mov
cli
push
ljmp
xchg
fdivrs
fsubs
negl
lahf
outsl
and
sub
outsl
in
cmpl
insb
stc
psubw
sbb
mov
xor
jge
out
shll
add
cmp
pop
roll
lods
mov
pop
pop
pop
xor
enter
shll
jbe
test
jp
loope
mov
jne
mov
je
in
mov
lret
adc
jecxz
inc
insb
rcrl
inc
fstpl
test
bound
pop
cld
cld
and
sbb
pusha
cmpsl
shlb
add
sub
dec
mov
sbb
push
insl
and
jle
daa
dec
dec
mov
push
sar
mov
movsl
and
and
or
pop
xor
push
and
out
mov
pop
mov
dec
out
mov
mov
jl
fisttpll
ss
scas
in
jg
xor
jns
notl
lods
xor
enter
mov
in
inc
fadds
inc
push
jo
test
pop
out
push
mov
xor
movsb
and
or
loopne
adc
pop
dec
outsb
sar
mov
jae
stos
mov
adc
leave
cmp
and
mov
pop
jno
adc
mov
xlat
lahf
mov
sub
leave
out
iret
stc
scas
mov
jle
je
nop
lea
pop
repz
push
imul
inc
test
sub
lods
out
out
pop
push
inc
sub
inc
loop
orb
movsb
pop
popf
mov
fmul
mov
lea
jne
lods
push
call
stos
mov
mov
mov
or
clc
fwait
mov
push
dec
cli
cmp
cmpsl
gs
add
push
imul
cmpsb
jns
sub
loop
dec
sahf
mov
das
repnz
test
in
leave
mov
sub
fcomps
adc
or
mov
xor
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
pop
xor
jge
cmp
loopne
ljmp
xchg
movlps
loop
sub
inc
outsl
cli
hlt
push
shlb
xlat
dec
pop
add
in
adc
inc
inc
ja
push
dec
jae
adc
cli
mov
or
jae
adc
gs
shll
fsincos
xchg
enter
popa
adc
fldcw
aam
mov
movsl
sbbb
aad
sbbl
inc
mov
fistpll
sbb
mov
push
iret
mov
dec
sahf
jbe
inc
dec
lcall
and
pop
cli
pop
inc
jge
mov
or
sbb
and
shlb
sahf
jge
xchg
popa
dec
loope
popf
mov
aad
daa
ss
sbb
fistpl
mov
popf
aaa
rcrb
addr16
or
aaa
adc
hlt
sub
mov
mov
cmp
ffree
jmp
test
fdiv
jno
mov
icebp
loopne
xchg
dec
xor
mov
bound
cld
iret
mov
movsl
mov
pop
jbe
jno
mov
xchg
push
js
push
adc
inc
jmp
ss
lahf
mul
xor
add
mov
mov
sub
xchg
add
sbb
push
lcall
sub
add
mov
call
movsl
and
je
movsl
add
jne
dec
ret
data16
jns
inc
ret
xor
out
xor
cli
fnstcw
jno
sub
jnp
push
dec
cwtl
popa
adc
pop
daa
aad
outsb
sti
pusha
inc
sahf
pushw
cmc
mov
sub
mov
int3
cld
insl
les
into
jne
fisttpll
add
sarb
jnp
clc
pushf
mov
jl
lahf
push
push
inc
enter
xor
mov
in
dec
mov
js
cmpsl
mov
loopne
or
lock
adc
outsl
or
ljmp
gs
in
pop
stc
les
inc
nop
push
sbb
test
shll
cmpsb
push
mov
addb
pop
in
mov
dec
add
std
dec
fwait
scas
imul
ss
push
bound
mov
push
mov
shll
lock
loop
and
dec
jp
mov
sub
xchg
xor
dec
dec
je
cmp
dec
push
cmp
out
lds
sub
and
repz
mov
add
sub
sahf
int3
mov
mov
mov
cwtl
fdivrs
out
fsts
jb
add
adc
rcrb
or
std
xchg
dec
ret
andl
test
mov
cmp
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
movl
push
mov
mov
and
push
sbb
push
movl
movl
sub
movl
or
mov
movl
mov
xor
andl
div
imul
sbbl
mov
xorl
xor
and
mov
mov
sbb
mov
xor
orl
div
add
sub
mov
movl
cmpl
movl
not
mov
mov
jmp
mov
mov
jbe
push
call
adc
movzbl
sbb
mov
mov
or
and
mov
mov
sub
or
inc
sub
movl
cmpl
mov
mov
mov
jmp
movzwl
ja
call
adc
sub
sbb
inc
xor
movl
mov
orl
add
xor
cmpl
mov
movl
movzwl
jmp
movl
notl
jae
pushl
pushl
pushl
push
push
push
call
or
and
or
incl
mov
mov
and
and
xor
sbb
imul
addl
mov
and
sub
mov
mov
mov
and
movl
orl
movl
adcl
movl
movl
mov
sub
imul
mov
andl
imul
cmpl
mov
movl
mov
jmp
movl
movl
je
push
push
call
orl
xorl
xor
or
mov
or
mov
xor
xor
sbb
mov
jmp
pop
sahf
and
out
scas
sarb
rclb
adc
dec
mov
mov
xchg
daa
jno
add
mov
jb
mov
mov
outsb
fs
xchg
nop
int3
inc
jg
insl
mov
inc
xchg
or
aas
jp
in
xchg
push
lret
insl
fwait
push
jae
cmp
popf
sarl
push
mov
cmp
fisttpl
int3
sbb
ja
mov
sub
add
insb
std
fldenv
call
mov
enter
pop
addb
xchg
jl
incl
jmp
and
scas
jle
les
das
test
mov
popf
and
je
out
lods
pop
setl
and
lret
mov
cmp
shlb
xor
adc
imul
in
mov
cwtl
sub
addl
mov
mov
sarl
iret
mov
addr16
push
and
pop
ds
xchg
fldpi
jnp
enter
mov
and
adc
mov
aas
adc
enter
cli
popf
jbe
pop
imul
push
sbb
je
sbb
mov
pusha
jecxz
leave
rcrb
cltd
and
sahf
stos
pop
in
and
cmc
inc
push
popf
jbe
fldenv
iret
insl
xorl
imul
dec
sbb
push
inc
mov
add
rcll
sbb
inc
pushf
fiaddl
ja
sub
mov
nop
lahf
dec
int3
outsb
test
or
mov
rolb
outsb
cmp
fwait
adc
pop
mov
sub
mov
js
pop
pushf
adc
stc
lds
jo
inc
cmp
movsb
incl
cmp
mov
add
mov
xor
lret
inc
cmpsl
stc
outsb
pushl
movsl
xor
fwait
sub
xchg
xorl
and
mov
push
insb
nop
imul
mov
subl
and
dec
or
xor
mov
subl
xor
cmpl
movzwl
mov
mov
jmp
mov
mov
jg
push
pushl
call
add
adcl
adcl
add
and
mov
add
orl
mov
mov
sbbl
lea
mov
or
movl
movl
sbb
movl
mov
or
xor
cmpl
notl
movl
not
jmp
movl
movl
jbe
pushl
call
or
xor
andl
movl
add
adc
mov
orl
or
and
add
cmpl
movl
mov
mov
jmp
movl
mov
jbe
push
call
and
add
xor
subl
and
add
xor
cmpl
mov
mov
mov
jmp
movl
jb
push
call
add
xor
add
sub
sub
xor
add
mov
add
subl
or
xor
mov
or
add
cmpl
movl
mov
movl
mov
jmp
mov
mov
jge
pushl
pushl
call
andl
sbbl
andl
movzbl
sub
add
adcl
xor
mov
movl
orl
movl
adc
movl
mov
and
add
cmpl
movl
mov
mov
mov
jmp
movl
movl
jle
push
call
xorl
xor
and
orl
orl
inc
mov
sub
mov
subl
lea
movzbl
sbb
mov
or
sub
xor
or
or
mov
mov
movl
movl
mov
or
add
xorl
imul
mov
imul
xor
movl
mov
div
sub
movzbl
or
mov
xorl
movl
sbbl
movl
movl
mov
mov
addl
xor
movl
div
sub
imul
adc
add
mov
orl
xor
xor
sbb
mov
div
xor
mov
movl
cmpl
movzwl
movl
jmp
mov
jge
pushl
call
not
or
adcl
adc
dec
add
movl
and
movl
cmpl
movzwl
mov
jmp
mov
movzwl
ja
push
push
push
push
call
adcl
adc
and
and
addl
mov
mov
sub
movzbl
xor
shr
and
sub
and
mov
imul
mov
subl
and
mov
adcl
jmp
cltd
adc
xor
sbb
js
in
jle
into
adc
adc
jne
movsb
pop
push
cltd
fnstcw
cld
mov
arpl
mov
inc
and
and
mov
dec
fadds
mov
repz
incb
sub
mov
sbb
lds
sbb
shr
sub
or
shll
push
sahf
jnp
xchg
fsubrl
adc
lcall
sbb
sahf
mov
movsb
mov
add
aas
push
sbbl
pop
mov
sub
push
rorl
dec
inc
ljmp
xor
and
push
push
jno
ret
and
sub
or
cmp
sub
push
xor
in
mov
dec
pop
mov
mov
pusha
push
jge
push
mov
push
sbbl
popa
and
lahf
and
ljmp
mov
movsb
dec
xchg
dec
mov
jnp
sbb
push
out
xchg
ror
sti
dec
cmpsb
gs
pop
ret
sub
mov
data16
sub
imul
push
in
pop
sarl
jecxz
mov
cmc
fs
dec
sbb
popf
mov
out
lods
clc
add
xor
movsb
adc
insb
adc
jg
add
rcrl
ret
std
fcmovbe
out
xor
shrl
push
call
inc
js
repz
cmp
xchg
xor
insl
fnstcw
lcall
out
jae
stos
popf
jne
int3
stos
lock
push
cld
pop
push
enter
mov
push
sbb
clc
dec
into
pop
daa
or
sbb
iret
cld
faddl
sub
cli
push
add
test
xchg
retw
cmp
fiaddl
pushf
add
lret
mov
and
call
push
xor
xchg
loopne
lahf
dec
lods
test
sahf
out
xlat
pop
sub
insl
jecxz
xchg
pop
xchg
fbld
sub
and
mov
or
movl
cmpl
mov
mov
mov
mov
jmp
mov
jne
pushl
call
notl
addl
orl
andl
and
movl
mov
sbb
or
mov
or
sub
adcl
mov
cmpl
mov
movl
movzwl
jmp
movl
mov
jg
pushl
pushl
push
push
call
add
sub
adc
movzbl
sbb
adcl
and
or
movl
mov
sbb
movl
addl
movl
cmpl
movl
movl
jmp
notl
jne
push
push
call
sub
xor
xor
mov
adc
or
orl
adc
andl
adc
mov
adc
movl
adc
movl
xor
xor
add
movl
movl
mov
add
or
mov
movl
sub
xor
mov
addl
imul
add
imul
or
mov
or
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
push
push
pushl
push
call
or
or
xorl
sbb
xor
xor
subl
mov
lea
addl
push
call
and
mov
mov
jmp
test
mov
jbe
jp
mov
adc
movlps
rcll
loope
daa
stos
add
rcl
adc
jbe
xchg
sub
sbb
dec
inc
dec
leave
ret
add
dec
aam
sub
test
dec
jno
ss
insl
add
or
and
aas
pop
fsubr
test
inc
sti
lea
mov
sub
les
inc
pop
mov
rclb
repnz
das
pop
mov
jo
lods
aas
or
cld
imul
lret
jne
xor
out
outsl
push
mov
jmp
push
pop
cs
stc
mov
pop
jl
sti
push
sbb
jmp
jmp
mov
adc
in
dec
sbb
cmp
lock
push
cltd
cwtl
test
rcr
dec
aam
jo
xchg
sub
lcall
jmp
sbb
outsl
int3
push
pop
in
and
add
outsb
out
jge
sbbl
adc
lret
jge
xor
insl
push
mov
xchg
leave
or
dec
fcomip
mov
jl
sbb
inc
xor
ljmp
and
loopne
xor
add
inc
cmpsl
repnz
ss
jp
push
push
sub
shlb
inc
push
bound
and
mov
adc
fadds
or
lret
les
mov
lock
jnp
push
or
mov
out
xchg
ret
cs
leave
mov
mov
jle
cltd
pusha
pop
shrl
sbb
cmp
data16
or
test
not
int
jne
scas
repnz
sub
cmpsb
andl
fwait
ds
pushf
lret
sbb
xlat
clc
lahf
loopne
movsl
popa
sbb
es
shll
inc
shll
jg
adc
imul
pop
xchg
add
cmp
adc
nop
xchg
stos
outsb
pushf
test
clc
call
pop
std
lods
cmpsb
xchg
sbb
pusha
jmp
or
repnz
or
out
inc
or
xchg
daa
adc
shlb
sbb
incl
add
mov
mov
jmp
movl
movl
ja
push
call
add
add
dec
orl
addl
adc
and
cmpl
notl
mov
movl
jmp
movl
je
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
sub
xor
xor
mov
xorl
div
cmpl
movzwl
movl
jmp
mov
jbe
push
push
push
pushl
call
adc
movl
orl
sbb
adcl
xor
mov
mov
sbb
add
xorl
jmp
pop
and
and
cmpsb
js
xchg
sub
adc
adc
hlt
mov
push
push
or
mov
lods
sub
pop
adc
mov
cmp
mov
pop
xchg
fptan
push
test
imul
mov
jmp
lahf
fisubrl
pop
dec
or
add
inc
mov
cmp
xchg
cmpsb
cs
leave
cli
mov
ret
sbb
xchg
outsb
xchg
mov
cmp
add
imul
or
xor
arpl
xchg
ret
pop
fisttps
jecxz
cmp
aaa
incl
mov
lcall
and
repz
bound
sub
js
popa
je
sbb
cmp
enter
lods
push
into
cmp
mov
icebp
mov
fmul
xchg
divl
adc
mov
sahf
dec
js
sub
add
sarb
pop
sub
add
les
popf
dec
inc
xor
push
lods
shrb
movntq
testl
les
xor
add
mov
fdivr
test
insb
sbb
aad
inc
push
add
cli
in
inc
pop
hlt
pop
gs
sub
mov
shl
and
mov
lret
mov
cli
adc
out
jo
les
out
nop
rorl
inc
loope
outsb
inc
cmc
andl
aaa
repz
loop
repnz
fnstenv
mov
cs
lret
pusha
popl
push
jno
frstor
jbe
sbbl
pop
daa
xchg
stc
mov
jecxz
cmp
pop
cltd
xlat
inc
test
aaa
jl
sbb
sti
leave
add
pushw
in
inc
inc
push
and
mov
sbb
or
rep
into
lcall
push
push
and
cltd
mov
inc
test
push
aad
cmp
jo
push
fadd
test
pushl
jp
add
inc
mov
movl
movl
adc
movl
or
movl
xor
movl
movl
xor
add
sbb
mov
movl
cmpl
movl
not
jmp
not
jbe
push
push
call
xorl
or
subl
add
adc
sub
addl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
call
mov
or
xor
sbbl
neg
mov
or
movl
movl
add
mov
cmpl
movl
mov
jmp
movl
mov
jae
push
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
add
mov
movzbl
or
and
movzbl
sub
mov
sub
sub
jmp
xor
es
and
jmp
js
fisubrs
jle
ret
enter
cmp
out
dec
push
loope
bound
loopne
push
int3
mov
push
in
dec
jae
add
loope
scas
loopne
push
push
lcall
push
shrd
mov
sub
push
orb
stos
mov
jmp
jecxz
mov
cmp
movsb
xchg
sbb
addl
mov
nop
push
outsl
xor
lret
cltd
jge
sub
inc
scas
into
fmuls
jae
mov
push
test
mov
mov
lahf
and
jge
sti
inc
jecxz
xor
jno
push
insb
rcr
int3
sbb
ret
xor
ljmp
fsubrp
int3
mov
fisttpll
sarl
lahf
imul
cmpsb
shlb
xlat
xchg
rcl
out
out
fdivs
or
jnp
cltd
or
pop
inc
push
adc
fsubrl
iret
lahf
outsl
cltd
xchg
jne
mov
mov
mov
arpl
mov
mov
pop
jnp
sub
int3
cmp
in
aaa
or
mov
jl,pt
mov
lcall
fs
jle
iret
mov
popa
divl
loop
shrb
pop
test
loope
aam
push
stc
dec
dec
jo
xlat
sahf
ret
cmp
mov
mov
pop
clc
and
dec
fidivl
mov
lods
jl
lret
push
mov
mov
jle
lcall
inc
xchg
adc
xchg
push
mov
xchg
push
ss
xchg
pop
xchg
and
pop
call
fdivs
push
and
mov
sahf
adc
movsl
aas
cmp
push
sub
mov
popf
push
or
repnz
pop
dec
jns
mov
lcall
dec
stos
std
sbb
push
mov
jae
dec
out
push
shlb
into
les
iret
mov
idivl
ret
ja
div
xchg
pop
dec
int
push
push
cmp
aas
pop
hlt
enter
push
loope
sahf
sub
or
shrl
jecxz
xchg
cmp
pop
xlat
mov
lods
sub
add
add
mov
mov
movl
jmp
movl
jle
push
call
and
subl
adcl
movzwl
adc
xor
sub
cmpl
movl
mov
mov
movl
jmp
movl
jb
pushl
push
push
call
sub
and
adc
adc
imul
xor
jmp
nop
push
push
sub
sbb
jle
cld
jp
jge
adc
adc
loopne
push
or
push
out
je
xchg
cmp
sub
icebp
sbb
test
dec
mov
arpl
ljmp
cmp
pushf
mov
xor
out
stos
push
test
mov
jle
inc
jne
popf
inc
mov
push
mov
mov
ljmp
sub
lods
ret
add
sbb
std
nop
mov
shl
test
iret
push
rol
jge
mov
xchg
fs
lcall
xchg
mov
push
out
adc
std
notl
jbe
sbb
push
push
lea
mulb
call
push
sti
add
sbb
mov
in
mov
xchg
fisttpll
mov
add
test
xorl
cmp
mov
or
mov
ret
faddl
dec
jmp
cmp
stc
repz
cmpb
xor
cmc
fdivr
fwait
imul
f2xm1
ficompl
stos
aas
adc
and
dec
loope
sub
int
mov
pop
push
and
mov
mov
mov
or
insb
mov
dec
popf
adc
add
das
push
shll
mov
jle
push
cmc
jae
sti
xchg
jmp
lock
add
data16
mov
enter
mov
inc
or
pop
aad
aaa
cmp
jecxz
cmpsb
sbbb
pop
ficompl
push
in
or
xlat
aas
int
sub
je
sahf
push
lds
leave
movsl
xchg
shrl
daa
mov
xchg
add
fwait
enter
test
xchg
pusha
hlt
and
addr16
pop
jg
stos
cld
cli
mov
or
fiadds
adc
jp
stos
xor
repz
ja
sar
popf
dec
test
push
fisubs
mov
sub
test
incl
testb
adc
test
sub
inc
add
xor
inc
add
notl
not
jmp
movl
je
push
call
movzbl
adc
mov
sbb
sbb
xor
subl
mov
mov
sub
or
or
mov
jmp
loop
out
cmpsl
inc
sbb
inc
mov
fdivrl
enter
add
or
nop
mov
sub
inc
dec
fidivrl
mov
adc
dec
sub
push
jno
inc
jge
scas
jo
nop
and
stc
popa
mov
mov
add
add
daa
scas
gs
xor
scas
cmpb
jns
push
and
cmpsb
repz
lret
roll
sti
mov
popf
mov
lods
jbe
jle
mov
movsl
xchg
push
in
jg
stos
test
enter
adc
sbb
bswap
test
sbb
insl
xor
popf
stc
and
pusha
popf
sahf
and
mov
pop
pop
xor
sub
ja
dec
or
pop
and
mov
sbb
xor
dec
dec
mov
pop
or
sub
mov
and
sbb
sarl
movl
xchg
jo
cli
rcrl
push
or
je
popf
push
outsl
mov
movsb
pop
mov
es
xlat
cmp
push
dec
repz
push
fwait
cs
push
and
push
movsb
cmp
sbb
lcall
sub
andl
cmp
jns
jmp
xchg
mov
xlat
fcompl
cmp
rorb
cmp
and
and
mull
pusha
fstps
call
push
lcall
aas
gs
test
jg
stos
fs
or
jo
aas
int
add
mov
xchg
jns
push
xchg
push
lock
push
and
ret
ret
xor
inc
xchg
adc
ljmp
mov
xchg
repz
xchg
pushf
mov
sbb
mov
jns
fcoml
roll
daa
jp
pop
jge
mov
movl
lods
pusha
inc
fldcw
je
jb
cmp
mov
shrb
adcb
aaa
es
mov
or
lods
or
sbb
fisubs
aaa
movsb
mov
xor
xor
or
add
xor
or
mov
sub
sub
mov
adc
lea
andl
and
movzbl
add
mov
mov
sub
add
mov
movl
adc
movl
cmpl
mov
notl
jmp
mov
jg
push
push
call
sbb
or
or
add
inc
sub
subl
movl
andl
movl
mov
cmpl
movl
movzwl
mov
jmp
mov
jge
pushl
pushl
call
add
xor
xor
and
and
movl
sbb
mov
mov
adcl
xor
andl
xor
xorl
mov
call
mov
mov
decl
mov
addl
mov
addl
xor
xor
adcl
mov
subl
call
decl
or
dec
or
add
mov
sbb
mov
xorl
xor
xor
mov
call
cmpl
mov
movl
mov
mov
jmp
mov
ja
pushl
push
push
push
push
call
subl
mov
or
or
and
mov
xor
or
mov
mov
decl
mov
add
mov
xor
andl
xor
subl
mov
cmpl
movl
movl
mov
jmp
mov
movzwl
jne
push
push
pushl
push
pushl
push
call
andl
subl
addl
subl
sbbl
subl
movl
mov
sbb
mov
notl
mov
mov
addl
call
adc
mov
adcl
or
sbb
mov
addl
or
incl
push
sbbl
push
sbbl
push
andl
push
call
mov
cmp
jne
sub
mov
mov
subl
xor
andl
xor
andl
mov
movl
call
sbb
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
inc
adc
cmp
pop
pusha
js
aaa
inc
stos
out
adc
adc
jbe
or
insl
andl
inc
mov
pop
negb
adc
push
add
adcb
imul
xor
stos
xor
and
call
leave
test
movsl
jns,pt
sbb
sbb
and
xor
loope
movl
add
addb
jl
imul
xorb
cs
mov
adc
pop
test
xchg
push
iret
sub
or
mov
dec
xchg
jae,pn
push
stc
push
sub
sbb
rcr
sbb
stc
and
inc
lahf
aad
pop
popf
stos
sbb
movsb
inc
push
aas
outsb
and
push
aas
jmp
or
sub
or
jns
push
inc
push
sub
push
test
mov
jle
pop
out
mov
sahf
and
adc
push
outsl
es
push
mov
and
mov
mov
cmp
mov
imul
or
aad
add
pop
sbb
pop
jns
add
xor
pop
push
cld
cmpsl
push
mov
cli
xor
ret
mov
stos
leave
loope
dec
mov
stos
int
mov
adc
ss
and
call
mov
pushw
jbe
sub
repnz
jmp
inc
fs
mov
jns
inc
cmp
jmp
dec
lds
mov
fsubrs
and
icebp
cmp
jge
roll
jae
push
cmp
mov
push
unpcklps
xor
add
pop
dec
or
cli
clc
xorl
sbb
cltd
sbb
fdivl
out
hlt
lcall
notl
jns
inc
pop
push
mov
inc
shl
inc
mov
cld
pop
pop
push
or
pop
mov
jne
sbb
inc
mov
ret
mov
out
ret
pop
sub
scas
stc
gs
jp
inc
add
inc
jmp
mov
sbbl
mov
jbe
sub
sbb
pushf
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
jmp
leave
out
loope
pop
sub
ja
cmp
lods
adc
adc
push
jl
dec
or
cld
out
lcall
lock
jmp
pop
mov
adc
inc
in
mov
ljmp
fcmovnu
jbe
sti
clc
rol
xchg
pop
jp
pop
mov
clc
and
xor
movsb
sahf
add
fstpt
sbb
cltd
adc
hlt
pusha
pop
sub
xorl
xchg
jno
fdivs
mov
inc
je
sarb
sbb
in
pop
lret
setge
fbld
dec
rol
lret
dec
jmp
add
cmp
aam
in
or
and
add
sbb
cmp
cmp
rcl
xchg
cmp
sbb
jge
std
icebp
ss
pop
pop
aas
arpl
fdivr
pop
cmp
movsb
lahf
jo
cwtl
adc
dec
es
add
or
gs
dec
les
inc
inc
inc
fbstp
ret
pop
push
ss
mov
xchg
xchg
push
sbb
push
dec
jmp
aas
decl
out
xor
fistpll
or
mov
shlb
mov
gs
aad
or
mov
fwait
pop
iret
jmp
dec
movsl
xchg
jae
orb
inc
lds
pop
insl
sbb
pop
mov
scas
xchg
add
push
and
pop
xchg
jb
das
push
nop
jne
outsb
mov
or
sub
dec
fstl
xor
xchg
mov
mov
and
pop
xor
sbb
into
out
pusha
lret
cmpl
popf
mov
pushf
pop
cmc
enter
mov
fwait
ret
nop
sahf
aas
cmpsl
aas
mov
fisttpll
add
adc
cmc
xchg
pop
xchg
and
in
mulb
pop
push
pop
dec
es
cmp
mov
scas
pop
xor
clc
addr16
mov
icebp
fs
inc
std
test
icebp
or
mov
pop
je
test
pop
subb
lock
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
jmp
mov
popa
sahf
sbb
lods
insb
enter
dec
test
adc
movlps
pop
cmpxchg
inc
ds
hlt
into
ret
mov
cmpl
in
aad
cltd
sbbb
das
and
adc
add
mov
sub
and
inc
pop
imul
pop
mov
cltd
arpl
movsl
sub
push
add
shll
lds
repz
mov
mov
mov
je
mov
xchg
loopne
mov
mov
pop
or
dec
ljmp
arpl
and
ds
lods
testl
inc
scas
outsl
inc
insl
dec
xchg
xchg
mov
loopne
lods
iret
popf
add
cld
lock
lods
dec
stc
mov
inc
shlb
cmp
and
je
cmp
and
fildl
mov
pop
fidivl
lock
lods
adc
mov
aas
add
add
insl
inc
movsl
inc
pop
sbb
sub
les
cmp
in
mov
je
orb
mov
cmpsb
and
push
push
mov
mov
ret
repnz
scas
fsubs
iret
pop
mov
pop
xchg
dec
xor
mov
xor
clc
fsubrl
sub
mov
xlat
in
cli
adc
ret
lods
loopne
dec
mov
mov
dec
mov
mov
insl
fldt
pop
and
stos
add
insb
add
sub
pop
stos
pop
jnp
imul
js
pop
xchg
and
add
std
xlat
xor
in
inc
push
aas
mov
and
aaa
fsub
xchg
stos
rorl
mov
jl
push
test
pop
or
popf
inc
outsl
sub
loopne
mov
xor
dec
xor
lea
aas
shlb
imul
pop
ljmp
mov
ffreep
out
data16
lea
xchg
jecxz
faddl
decl
decl
decl
incl
lret
fmuls
aam
decl
sar
pushl
add
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
jmp
add
xor
and
aas
loope
xor
js
imul
movsb
adc
adc
jge
loopne
pop
dec
dec
lea
popf
aaa
and
jns
ss
mov
movsb
dec
insl
pop
cmp
cmp
pop
loopne
add
aam
inc
fcom
xchg
jnp
pop
andb
call
in
jp
lods
push
in
shr
mulb
pusha
not
insb
in
enter
fidivl
or
test
or
in
mov
mov
scas
mov
cld
xchg
int
push
push
xchg
push
xchg
cwtl
cmpsb
sbb
jp
cmp
push
dec
sahf
jge
into
push
imul
scas
aad
inc
add
jmp
addr16
mov
daa
dec
mov
add
mov
mov
icebp
pop
mov
sub
mov
bound
repz
or
clc
cmc
cs
mov
js
cmc
push
push
sti
sbb
mov
push
and
mov
ljmp
add
and
fsubrs
fldl2e
js
andb
cmp
push
fwait
subb
push
es
aas
mov
std
or
push
mov
cmp
movsb
cmp
clc
mov
icebp
fs
or
inc
jge
jle
dec
cmpsb
jo
out
out
add
leave
and
or
vmovsldup
and
adc
push
inc
mov
mov
outsl
mov
or
inc
fmuls
cmp
loope
pop
cltd
out
push
sub
test
loopne
subl
aas
mov
xchg
push
jmp
lret
mov
push
fcoms
jns
lahf
fists
popa
jae
lods
inc
cmpsl
or
fistl
inc
mov
cmpsb
sbb
push
jmp
scas
adc
popa
dec
bound
cli
loop
dec
cmp
es
aad
or
outsb
cmp
pusha
cmp
mov
and
and
adc
xadd
movsl
cmc
sbb
mov
add
adc
rol
push
fs
in
mov
jno
jle
pop
pop
aad
sub
in
sub
loopne
pop
repnz
xor
push
sbb
xchg
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
jmp
insl
xor
jb
push
sub
ljmp
enter
mov
jb
xor
mov
out
outsl
jl
sub
pop
xor
imul
popf
sbb
adc
jecxz
cmp
push
mov
jnp
in
cmpsb
icebp
les
cmp
push
cmp
lods
sahf
push
repnz
imul
pusha
jge
lods
pop
jae
iret
mov
pop
jnp
inc
scas
xor
dec
lds
xchg
shll
movsb
sub
ret
pop
mov
jp
xchg
cltd
test
lahf
je
xor
xor
lock
mov
cs
xchg
push
mov
sarb
arpl
sbb
in
adc
gs
cltd
in
jb
int3
add
or
or
lcall
xchg
out
repnz
jb
jae
das
inc
sbb
mov
sub
sub
xlat
loopne
mov
in
flds
mov
insl
imul
mov
dec
call
fiadds
stos
cmpsl
push
pop
add
push
enter
sarb
enter
stos
dec
sub
push
fldcw
mov
fsubs
roll
in
fdivrs
add
fcomps
pop
sub
pop
shr
je
fiaddl
loopne
movsb
repnz
jp
loopne
arpl
jmp
loopne
arpl
sbb
loop
js
lock
pop
xchg
repnz
cmpsb
xor
cltd
dec
das
sbb
adc
inc
daa
pop
mov
xchg
jb
mov
pop
sbb
aas
cwtl
or
dec
outsl
nop
arpl
lods
mov
jb
movsl
ljmp
xor
imul
xchg
xor
popa
push
aad
mov
xor
jecxz
movsl
pop
lds
fucomp
pop
add
and
insl
loope
add
sti
pop
test
jb
xor
outsb
or
je
cmp
test
repnz
call
jnp
mov
incl
sub
xor
int
ror
mov
fidivrl
scas
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
jmp
pop
cli
xchg
ret
xchg
push
pushf
adc
adc
aad
sbb
adc
adc
sahf
cmp
xor
and
lods
xchg
nop
inc
dec
mov
inc
sti
jns
mov
jne
or
js
mov
jg
lea
hlt
mov
sub
jae
push
notb
add
cmc
lret
xor
gs
stos
sub
mov
and
scas
hlt
test
out
jmp
mov
and
jbe
aas
loop
stos
fsubl
sub
mov
dec
mov
das
popa
int3
loope
fisttpll
adc
ljmp
bound
inc
roll
fldpi
xor
cmp
lretw
mov
aas
xchg
pop
or
movsl
push
aas
and
xor
iret
repnz
jnp
lcall
dec
fistl
fstpl
adc
popf
stos
add
call
adc
andl
fidivrs
rorl
mov
pusha
les
mull
iret
push
jg
inc
aas
fwait
mov
scas
mov
xor
push
push
adc
push
xor
aaa
mov
addr16
sub
adc
loop
sbb
imul
shrb
dec
in
shlb
mov
in
pop
xor
jge
cld
adc
jmp
lret
lcall
dec
sbb
shll
xor
adc
cwtl
jne
mov
inc
adc
mov
fmuls
std
mov
jmp
call
lock
push
xchg
cwtl
icebp
ficompl
sub
adc
mov
jae
xor
lret
lret
xor
or
adc
adc
xchg
lret
xchg
fcompl
xlat
test
xor
int3
cmpsl
jecxz
mov
pop
jae
mov
in
pusha
loopne
push
stos
aad
jnp
inc
push
inc
push
jp
xchg
in
ret
dec
mov
push
cmp
cs
ficoms
les
and
dec
arpl
leave
add
cmp
or
cltd
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
jmp
stos
cmpl
and
sahf
sarb
fcmovb
mov
enter
rorb
loop
insl
inc
or
lret
xor
sub
pop
mov
jno
mov
adcl
aaa
fisttpll
call
adc
cmp
cmp
pop
and
jle
iret
call
push
cmpsb
add
aaa
push
movsb
sbb
out
das
ds
cmp
push
pop
aad
pop
dec
loop
dec
daa
cmp
push
mov
mov
jmp
add
inc
mov
mov
push
pop
leave
push
and
pop
aas
pop
shll
mov
pop
int
mull
xor
cltd
or
ljmp
push
imul
lds
fldenv
hlt
push
add
xchg
and
jae
add
aas
inc
adc
in
das
fidivrl
cmp
adc
sbb
dec
dec
dec
ds
subl
add
or
jp
mov
call
push
fldenv
repnz
psubsb
add
push
sub
mov
push
fldcw
stc
adc
xor
inc
or
xchg
movd
xor
fs
cli
cvtdq2ps
lds
inc
inc
clc
repnz
mov
lods
or
addr16
outsl
sbb
inc
ret
push
test
sbb
mov
push
faddl
insl
mov
cmp
in
xor
adc
lahf
fstp
cltd
inc
rorl
gs
sahf
and
hlt
cmpsb
push
mov
jge
cli
cmpsb
jmp
lods
lds
into
sbb
nop
aaa
and
fsubl
sbb
cli
in
mov
cmp
xchg
or
mov
jns
adc
fstpt
jnp
fistpl
dec
nop
mov
and
sbb
mov
jmp
pop
or
cmpl
xchg
jmp
fcoms
stos
repnz
daa
push
and
pusha
mov
rcll
mov
ljmp
incl
loope
inc
loope
sub
repnz
inc
aaa
mov
out
mov
pushf
sub
cmp
mov
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
jmp
and
lret
sbbl
js
dec
xchg
js
xchg
adc
adc
lods
sub
lea
cmp
pushf
adcl
xor
jne
repz
mov
mov
jecxz
jae
pop
loopne
lcall
scas
xchg
rcrb
xor
stos
fdivrs
icebp
pop
dec
aam
popf
hlt
pop
std
xor
test
lahf
repnz
imul
das
xor
or
lret
dec
jg
popf
pop
nop
enter
mov
jecxz
int3
sub
xchg
popf
fs
rorl
aad
popf
and
popf
mov
push
loope
out
mov
sar
cli
test
flds
xchg
jnp
cmpsl
pop
or
dec
mov
mov
movb
pop
bound
adc
xor
ret
dec
inc
pop
push
movsl
shll
sahf
cmc
lret
add
test
cli
push
jecxz
mov
inc
adc
fyl2x
and
pushf
mov
sbb
unpckhps
sbb
iret
push
push
pop
outsb
pop
dec
in
adc
cltd
enter
std
pushf
fcoml
jo
scas
push
ljmp
pop
shll
in
mov
fstl
clc
insl
popa
or
cmpsl
push
mov
aam
add
out
std
call
mov
cs
cmc
inc
dec
mov
outsb
adc
push
mov
andb
popa
mov
test
arpl
xor
adc
hlt
insb
push
js
xchg
fmulp
add
sub
outsb
add
and
mov
sub
adc
bound
dec
test
dec
or
jae
cmp
je
pop
ja
pop
sub
jmp
aas
xchg
outsl
or
movsb
and
mov
cmp
insb
pop
and
fidivrs
adc
sbb
int3
stos
fiaddl
adc
sarb
std
les
xor
clc
aam
in
test
arpl
cmpl
pop
xchg
mov
push
pop
sub
xorl
andl
test
pushl
lret
adc
fmuls
and
pushl
imul
fmuls
sbb
decl
decl
decl
mov
and
inc
add
add
pop
lods
mov
and
pop
mov
dec
or
enter
and
addr16
pop
inc
mov
adc
paddsb
sub
pop
pop
ja
movsl
stc
cmp
xor
lea
mov
xor
testl
mov
cli
mov
jl
pop
scas
iret
push
test
adc
mov
bound
mov
popf
rorl
mov
cmp
fiaddl
mov
aam
stos
es
or
mov
les
outsl
pop
subb
and
and
lea
sbb
gs
mov
jne
and
push
pop
adc
adc
movsl
inc
xchg
xlat
pop
cmpsb
dec
jae
sbb
lret
add
lock
sub
stc
scas
inc
sbb
push
sub
push
cs
bound
xchg
jne
xlat
idivb
les
jle
xor
sub
in
mov
xchg
jecxz
xchg
pop
adc
push
cmpsb
jb
bound
out
hlt
jne
mov
xor
iret
jp
sbb
cmpsb
push
jl
out
in
and
clc
addr16
popa
and
ss
sub
mov
pop
mov
cwtl
and
lret
mov
dec
roll
xchg
addr16
or
cmp
ds
cmpsl
jl
jne
ja
js
sbb
and
aam
mov
test
pop
bound
call
ss
jo
or
div
xchg
stos
xor
shrb
in
dec
fwait
mov
inc
pop
add
xchg
aad
iret
mov
pop
lods
bound
push
pop
cmp
jecxz
add
les
dec
inc
leave
xchg
out
pop
mov
cmp
push
cmp
data16
push
cmp
aam
into
aaa
cmp
call
ljmp
pop
int3
jge
sbb
dec
shll
cld
xlat
mov
movb
mov
xchg
outsl
mov
push
adc
or
xor
fwait
mov
rcl
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
jmp
dec
sbb
sbb
sbb
sbb
scas
sbb
test
push
mov
adc
xor
dec
inc
dec
daa
or
loope
mov
lcall
cltd
jmp
jb
dec
sahf
xchg
mov
mov
jns
js
xor
pop
mov
int3
xor
adc
lcall
add
push
mov
xchg
iret
push
sub
sahf
out
enter
aam
mov
fidivrl
loopne
nop
sarb
insb
jle
fldcw
iret
add
aam
sbb
stos
sarl
and
and
lods
sub
mov
push
pop
jo
js
xor
sub
call
addb
insb
push
pop
ret
jns
stos
mov
push
cmp
adc
pop
lock
insb
push
pop
std
sbb
mov
inc
xor
lock
xchg
fisubrs
dec
cmpsb
xchg
and
int
lret
movsl
pop
inc
aaa
add
push
cmpsl
push
lret
ja
stos
inc
jmp
js
jg
mov
aad
add
jnp
mov
cmpsb
fiaddl
pop
repz
test
not
lods
enter
and
inc
and
jmp
inc
cltd
mov
lea
add
shl
in
aam
test
std
add
sub
sub
cmp
inc
aas
add
mov
xchg
es
fstpt
xor
sbb
test
enter
shl
push
jno
std
rcrb
insl
cmp
hlt
test
mov
push
xchg
shrl
or
jmp
xchg
test
jae
bound
jne
or
roll
sub
sbb
mov
dec
cs
xor
jmp
pop
fs
cmp
pop
js
mov
xchg
mov
leave
ja
push
movsb
mov
push
lret
mov
mov
sub
xor
pop
js
rcrb
enter
movsb
or
mov
sti
cmpsb
std
ret
mov
js
les
subl
movsl
imul
or
decl
test
decl
pushl
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
jmp
push
pop
inc
ficomps
clc
les
out
mov
adc
mov
stos
jl
bnd
pusha
lods
clc
into
in
mov
cwtl
adc
les
push
repz
jo
cmp
pop
scas
jecxz,pt
pusha
ljmp
fmul
pop
inc
sub
out
jb
fwait
in
mov
or
in
xchg
push
inc
adc
ret
jns
int3
int3
decl
inc
lret
jge
js
je
adc
jae
and
push
mov
and
imul
repz
xchg
test
jns
sub
test
sbb
inc
je
aam
es
sub
pop
pop
flds
pusha
mov
xchg
cld
xchg
xchg
stc
mov
js
movsl
pop
out
or
stos
loop
lock
lret
sahf
adc
mov
or
jle
inc
clc
lret
cmpsl
inc
pop
inc
and
mov
pop
inc
inc
sub
jp
addr16
dec
inc
cmpsb
cmpsl
push
fimuls
sbb
pop
sub
jnp
test
lcall
iret
mov
out
into
cmp
test
mov
mov
mov
xor
repnz
cmp
divb
mov
or
xchg
sub
add
aas
icebp
cmpsb
sub
pop
jg
call
subb
ja
sbb
mov
add
jecxz
pop
sbb
jl
mov
in
fwait
inc
push
inc
loop
dec
rcl
dec
out
xchg
inc
subl
mov
inc
push
sahf
mov
fsubs
push
wbinvd
jb
add
dec
movsl
pop
jg
mov
rcrb
out
shr
hlt
cmp
xor
mov
jmp
inc
mov
mull
cmp
insl
lret
xor
inc
fisubs
or
cmpsl
out
inc
cltd
je
dec
mov
mov
cmp
lods
xor
jo
xchg
cld
and
xchg
jg
pop
divl
jb
andb
mov
jle
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
out
add
popa
cmpsl
aad
stos
roll
adc
movlps
mov
icebp
loope
lea
lods
mov
mov
roll
sbbb
fsubrl
jle
nop
mov
std
fisubrl
fldcw
sbb
xchg
mov
push
out
sub
ficompl
lock
call
pop
lods
mov
pop
ret
popa
dec
je
pop
ret
cmp
shll
inc
jg
jns
dec
sbb
decl
cmp
arpl
mov
mov
xchg
inc
das
sbb
repz
ret
lods
ficoms
adc
in
pop
popa
jns
sub
mov
add
mov
push
sbb
jno
cld
ss
js
sub
lds
or
jecxz
sarl
cmpsl
jmp
adc
and
sbb
xchg
adc
xchg
or
push
xchg
jo
or
out
arpl
inc
jbe
mov
imul
mov
lds
jns,pn
jb
pop
fcomp
push
inc
shll
stos
ret
xor
fstps
mov
push
and
mov
icebp
aas
imul
mov
and
jp
dec
xchg
fsubrp
test
jb
and
push
jmp
in
lret
mov
loopne
fnstsw
insb
pop
ljmp
maskmovq
testl
xor
clc
push
data16
mov
cltd
out
sbb
ds
push
cmpsl
and
pop
add
jg
aam
fninit
xor
js
lahf
fwait
stc
or
mov
outsl
jg
es
inc
roll
pop
adc
cs
inc
dec
or
adc
bound
inc
scas
mov
arpl
jmp
je
inc
mov
fnstsw
push
mov
es
out
cs
push
inc
xor
shlb
out
xchg
lea
mov
sub
mov
and
in
rcrb
shll
lock
and
rcrl
ret
scas
loope
arpl
and
jbe
fnsave
adc
adc
adc
cli
mov
cli
mov
mov
xor
xor
mov
call
or
jmp
mov
or
mov
push
push
pop
pusha
js
adcb
rcll
fisttps
and
sar
xor
mov
xchg
or
mov
mov
pop
stos
jge
cwtl
mov
fadd
jmp
push
hlt
decb
sbb
xor
cs
es
es
das
and
jne
push
fnstcw
xchg
lock
sahf
add
jp
push
data16
and
std
das
sub
std
mov
mov
cli
pop
or
adc
cmp
and
out
xchg
subl
insl
xor
int
nop
push
mov
jns
fdivrl
sbb
sar
sub
dec
es
dec
shrb
call
arpl
adc
inc
lea
inc
xchg
xchg
cld
mov
xor
je
test
int3
push
frstor
add
dec
cwtl
js
movsb
sub
mov
pop
addb
xchg
inc
aam
repnz
xor
pusha
xor
adc
subl
cltd
sub
jmp
pop
imul
lock
in
les
add
cld
jmp
or
in
inc
jge
jae
mov
mov
lock
shll
fs
sbb
pop
inc
sti
pop
inc
repnz
loop
shll
cmp
adc
mov
insl
cmp
add
test
jns
inc
sti
out
and
fsubrl
aaa
lods
inc
nop
mov
cwtl
xchg
cmpsb
push
sbb
sub
das
and
test
xor
iret
outsb
mov
insb
test
inc
adc
add
lret
push
mul
push
out
push
sqrtps
dec
jnp
mov
push
repnz
sub
cmc
lcall
mov
out
shrb
push
gs
add
cmc
jo
xstore-rng
cmpsl
inc
add
or
cvtpi2ps
leave
cmpsb
mov
mov
jg
test
adc
and
mov
dec
xorb
aaa
dec
pusha
pop
shll
imul
mov
jge
test
sub
mov
jb
in
repz
decl
decl
cmp
jmp
stos
js
pop
and
mov
out
adc
js
adc
movlps
and
sub
add
std
in
hlt
sar
je
and
jbe
xchg
adc
lret
bound
scas
and
fs
inc
rolb
jl
out
and
sub
xor
fldcw
lret
push
std
sub
test
in
fisubs
out
lcall
adc
int
sbb
adc
mov
data16
mov
insb
push
cmpl
addr16
mov
dec
fistps
ljmp
ds
lahf
fucomp
out
push
mov
repnz
xor
mov
pushl
mov
in
loope
and
cmpsl
xchg
cmp
or
enter
pop
xlat
int3
cmp
pop
adc
dec
daa
cmp
fisubs
icebp
xor
dec
test
xor
fcoml
dec
and
clc
sub
aas
sbb
sbb
mov
mov
lahf
jo
sub
jecxz
add
and
adc
cmp
inc
pop
test
and
sbb
push
pushf
cmp
or
ds
out
jp
adc
cmp
fnsave
ja
cld
xor
xor
push
or
pop
push
pop
addl
mov
stc
stos
sbb
popf
inc
mov
mov
dec
mov
ret
adc
mov
jmp
mov
push
sbb
inc
dec
and
jno
dec
inc
ret
add
xor
pop
js
rcrb
je
mov
dec
fmuls
dec
pop
cmpsl
push
dec
or
push
mov
pusha
mov
xchg
jle
adc
xchg
aad
add
inc
out
int
push
add
adc
adc
add
mov
in
in
inc
enter
in
push
pop
mov
sbb
repz
fisttps
arpl
adcl
adc
and
leave
cmp
lds
xchg
or
inc
aaa
addr16
cmp
out
lods
mov
icebp
dec
dec
cltd
insb
into
mov
test
add
add
decl
decl
mov
addl
add
mov
sar
jmp
ds
in
mov
xchg
js
cwtl
lods
mov
movlps
pusha
in
std
xor
push
add
mov
ljmp
adc
shl
jo
jne
push
push
fs
ds
bnd
push
pop
clc
mov
dec
and
jmp
mov
pop
lods
jmp
jl
sbb
pusha
adc
xlat
mov
test
fcompl
or
cmp
pop
loop
insl
iret
xchg
ja
cmc
mov
push
lahf
sbb
sub
cli
adc
jl
mov
insb
rolb
dec
inc
lcall
inc
inc
inc
fstl
rclb
sub
cmp
out
jecxz
sbb
mov
mov
push
inc
and
push
lret
negb
and
insl
jge
imul
lcall
sub
arpl
jbe
pop
pop
jmp
sarb
jl
jae
int3
stos
fldenv
push
add
je
pusha
ret
mov
std
popf
mov
test
roll
and
inc
jnp
fldl
movsb
pop
popa
lods
inc
xor
jle
std
insl
aam
mov
data16
lea
test
rcrl
in
notl
aaa
es
sbb
sbb
xlat
push
cmp
das
enter
cmp
add
lock
loop
xchg
and
in
ljmp
jl
push
or
jg
ss
je
idiv
mov
dec
mov
rclb
es
icebp
adc
add
lods
pop
inc
testl
dec
mov
or
cmpb
or
pop
and
in
scas
add
push
and
adc
icebp
and
dec
mov
push
outsl
out
add
xchg
xchg
aas
dec
in
push
icebp
push
or
leave
out
sbb
sub
adc
cs
pop
loop
push
and
lea
call
cmc
and
es
sub
pop
add
aaa
scas
cmc
cmc
dec
xor
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
jmp
jns,pn
xchg
pop
subl
js
leave
dec
mov
enter
adc
xchg
dec
popa
dec
xchg
das
xchg
mov
in
in
clc
clc
popa
shlb
enter
mov
jl
sahf
jg
ja
and
jb
fstl
mov
int3
inc
cmc
xchg
stos
cmpsb
xchg
pop
jmp
das
push
and
pop
fisttps
cmpsl
aam
cmp
repnz
mov
pop
add
repz
mov
out
outsl
dec
sar
pop
iret
mov
dec
mov
xor
inc
xchg
loop
js
popf
add
lock
mov
test
sbb
xchg
pop
std
daa
stc
push
push
mov
in
pop
lea
mov
out
jmp
subw
int
cmp
dec
mov
fistpl
leave
lcall
mov
xchg
push
bound
xlat
cmp
pop
cli
mov
add
test
jns
fmuls
lcall
sub
or
push
lods
lret
jp
or
rcll
shll
test
aad
scas
jl
jb
pop
or
push
adc
je
or
repz
mov
sub
fisubs
mov
call
mov
xchg
push
shlb
cmpsb
dec
aaa
stos
divl
outsb
xor
adc
add
push
ja
es
scas
pop
in
lods
add
cmp
or
mov
jo
ret
jno
pop
les
iret
movsb
sbb
cmp
fwait
xchg
iret
mov
cmpsl
and
push
cmpsl
mov
hlt
cmpsb
stc
outsl
or
paddsw
in
sub
xorl
and
jb
inc
jle
loop
mov
xor
mov
subl
xchg
inc
movsb
mov
or
mov
pushf
mov
xchg
and
push
or
and
xchg
dec
out
mov
sub
into
jne
stos
scas
dec
cld
xchg
cld
add
hlt
pop
mov
dec
into
out
loopne
sbb
test
out
aad
push
imul
and
decl
pushl
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
jmp
arpl
or
push
lahf
aaa
int3
lods
es
adc
adc
int3
dec
xor
pop
push
int
std
push
mov
lods
stos
jnp
dec
xchg
mov
daa
push
mov
inc
scas
aaa
cltd
aaa
dec
xchg
sti
ljmp
jp
xchg
mov
dec
ds
dec
stos
in
insl
lret
ret
dec
fistpll
mov
fwait
add
inc
push
cltd
insb
repz
stos
fwait
aam
mov
pop
jno
pusha
das
lret
or
imul
lods
in
pop
xor
adc
cmp
fisttpll
jl
xchg
pop
push
jle
push
ret
pop
pop
aas
mov
cmp
bnd
adc
adc
sub
mov
sbbb
imul
pop
lods
jle
xchg
mov
xchg
int
pop
das
lods
in
lds
dec
add
mov
dec
mov
andb
outsl
jmp
inc
inc
mov
into
sub
movsb
cmpsb
push
cwtl
subl
test
outsb
fnstsw
or
hlt
jmp
repnz
movsb
mov
inc
rol
sub
das
jg
loop
jg
mov
or
and
insb
iret
sub
push
arpl
adc
fidivs
test
int3
fwait
add
mov
roll
cmc
or
cmp
cmpsl
dec
xchg
sub
les
xchg
and
divl
dec
sbb
popa
js
loopne
loop
xor
xchg
imul
pop
pusha
jge
es
jle
fs
subl
jbe
dec
pop
cmpsb
dec
xchg
test
lods
in
xchg
das
ud1
enter
sti
cmc
les
loope
rclb
fiaddl
repz
gs
int3
and
add
imul
in
shlb
les
ror
push
cwtl
out
mov
sti
add
fidivrs
scas
lret
mov
inc
add
adc
jl
fidivs
cmp
popf
out
mov
imul
lods
sbb
lea
test
decl
pushl
xor
mov
call
or
or
movsbl
cmp
je
jmp
xorl
jns
sbb
pop
lods
pop
jno
lods
fldcw
adc
movlps
aas
jne
xor
lret
or
xchg
sub
cmp
jb
in
roll
pop
inc
ja
fsub
pop
xor
je
jle
mov
pop
in
jnp
in
dec
dec
mov
and
mov
divl
es
adc
lds
pop
lods
mov
popa
iret
fbld
dec
test
dec
stos
loop
subb
ret
aad
xor
ljmp
movsl
mov
shl
sub
enter
sbb
xor
jmp
mov
dec
stc
mov
pop
push
pop
adc
mov
or
fdivs
cmp
aas
adc
xchg
cli
test
pop
test
xlat
sti
aam
jne
fwait
xchg
shlb
add
inc
jno
xchg
mov
imul
cltd
xorl
adc
ret
cwtl
cmp
adc
push
mov
or
jmp
hlt
js
test
jg
pop
aaa
rolb
sbb
lcall
jbe
imul
sahf
loope
mov
es
mov
and
jae
js
or
cmpsb
jle
push
insl
clc
lcall
pop
cmpsl
sbb
jmp
gs
into
mov
ja
cmpsl
pop
sahf
adc
pop
out
fs
xchg
cmp
ds
jno
subl
aaa
or
xchg
arpl
jb
dec
xchg
in
sbb
pop
loop
fwait
inc
mov
ret
out
and
loopne
shr
and
or
mov
fistpl
jle
es
shl
icebp
stos
mov
std
push
inc
inc
mov
xor
sbb
jae
repnz
aad
cmp
pop
push
dec
push
xor
dec
mov
pop
mov
inc
pusha
lea
cld
leave
adc
and
pop
mov
dec
loope
lret
cmpsb
jmp
pushf
push
scas
stos
sahf
jle
inc
jbe
test
decl
mov
decl
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
jmp
adc
fldl
out
cli
pop
push
xchg
js
fs
adc
xor
adc
out
mov
pushf
cmpb
fabs
cmp
jmp
mov
mov
mov
fiadds
ljmp
aad
out
and
mov
push
mov
dec
int
aam
mov
std
in
jl
push
dec
stos
aam
or
jecxz
inc
lcall
shll
outsb
add
inc
pop
mov
mov
jne
adc
aad
mov
ret
addr16
ss
movsb
shlb
test
mov
jno
mov
cmp
mov
sub
adc
rcrb
loopne
xor
sub
shll
dec
jg
mov
addb
fxch
and
inc
fsubrl
sbb
cmp
mov
lret
int
les
add
je
cltd
fwait
sub
dec
pop
popf
ss
add
stc
inc
jb
pop
and
mov
imul
lret
xchg
aaa
and
insl
test
in
cltd
pusha
leave
icebp
jmp
int3
lods
mov
arpl
adc
and
and
sbb
xchg
adc
mov
fnop
push
add
cmc
mov
and
out
out
cld
cmovo
int3
shl
aas
lods
push
push
test
and
cmp
or
mov
and
jp
popa
adcl
xchg
xchg
lahf
xchg
mov
int3
push
lret
ss
ficoml
push
repz
pop
test
inc
mov
subb
push
mov
fistpll
loopne
push
mov
das
xchg
lods
xchg
push
mov
stos
lahf
sbb
sbbl
lret
push
in
cmpsb
sbb
cld
movsl
into
add
xor
outsl
lods
fcoms
adc
hlt
orl
out
fldcw
jl
je
pop
mov
cmc
aam
std
mov
mov
iret
dec
lods
outsl
test
push
and
mov
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
jmp
out
in
in
mov
mov
inc
pusha
adc
adc
xor
psubsb
dec
or
sbb
mov
push
dec
sub
repnz
add
jb
xor
jns
test
jge
ret
popf
frstor
add
xor
imulb
aas
iret
jle
outsl
add
ss
shlb
push
sbb
jo
out
push
jo
in
aad
push
rolb
xor
daa
cmp
inc
and
imulb
les
inc
sbb
cld
and
cmp
loopne
xor
fcomps
repz
inc
push
mov
sbb
leave
inc
inc
cmp
orl
imul
ljmp
add
jo
sbb
dec
push
insb
pop
jnp
add
sbb
xor
out
pop
add
mov
popa
xchg
add
insb
iret
dec
adc
pop
jp
mov
and
inc
movsb
mov
out
into
sub
mov
leave
movsb
lret
or
and
lret
lret
in
adc
mov
sbb
scas
popf
pop
cmp
sbb
mov
movsl
mov
adc
mov
sbb
sti
adcb
rcrb
adc
cmp
ret
mov
cmpsl
sti
repz
int
in
stos
lds
cld
subb
adc
mov
stc
sub
mov
cwtl
lcall
xor
add
mov
lock
push
mov
mov
cmp
es
xlat
xor
sti
arpl
in
movsl
gs
dec
test
test
jo
fwait
and
push
sub
arpl
scas
xchg
hlt
cmpsl
movsl
nop
cmp
sbb
lods
orb
mov
stos
inc
call
push
ja
push
xchg
mov
xor
push
int3
jmp
scas
clc
rolb
pop
ja
add
insb
stos
addl
jl
pushf
jge
xchg
sbb
stc
xor
inc
ljmp
jg
decl
mov
stos
movl
sub
mov
movl
jmp
adc
add
jnp
bound
ss
jns
scas
insb
cmc
pop
adc
adc
jne
xor
pusha
dec
mov
mov
in
insl
repz
jae
movsl
sub
adc
cmp
inc
xchg
cmp
adc
jno
int
dec
js
xchg
push
pop
movb
fwait
je
and
fcoms
cmpsl
aam
push
popaw
test
insb
and
movsl
jns
jp
fcompl
sub
mov
and
call
xor
cmpsl
mov
ss
test
lods
xor
cmp
dec
inc
adc
hlt
js
std
jecxz
imul
jno
hlt
cld
mov
push
push
xchg
adc
inc
inc
inc
imul
push
and
sbb
adc
pop
cli
sbb
pop
dec
ljmp
inc
dec
fstpt
imul
dec
enter
fstpt
cmp
aas
dec
scas
je
les
sbb
mov
jg
out
push
cmp
cli
xor
jnp
nop
cmp
test
mov
xchg
sbb
xor
sahf
fbstp
test
aaa
mov
sub
ja
mov
cmc
xor
ror
aas
jg
fs
sbb
add
pop
xchg
lods
mov
or
shl
mov
adc
dec
inc
add
loopne
mov
push
dec
lahf
test
xchg
ret
pop
insb
jl
movl
adc
in
dec
sub
repz
test
movsl
popa
ds
or
push
js
cmpl
repnz
pop
aaa
sbb
mov
mov
mov
add
ret
mov
and
lret
adc
ret
pushf
and
xchg
movsl
mov
add
xchg
jnp
stos
cmp
and
rcll
pop
push
pop
mov
jbe
mov
mov
out
mov
fldl
cmpsb
hlt
pop
cltd
jle
rorl
out
inc
or
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
jmp
or
addl
leave
pop
pop
cwtl
cmp
sarl
stos
pop
adc
adc
add
repnz
or
add
movsb
test
pop
sub
bswap
daa
mov
stc
popf
mov
push
sub
sbbb
mov
int3
sub
inc
xor
sbb
pop
mov
jnp
xchg
mov
addb
mov
and
jne
sti
fiadds
or
push
jne
fldl
inc
jmp
out
ret
mov
mov
lret
out
mov
inc
add
and
cmp
out
mov
mov
iret
imul
mov
jns
lret
jp
bound
jmp
icebp
out
addb
cwtl
or
or
xchg
loope
adc
jp
mov
mov
aam
std
int3
loop
popf
decl
scas
repnz
add
insb
adc
push
mov
loope
repnz
jle
aam
jne
push
push
call
movb
xchg
cmpsl
cmc
bound
lds
mov
and
ret
pop
sarb
rcrb
mov
leave
test
add
sahf
xchg
xchg
cs
mov
pop
sbb
sahf
sub
push
pop
aam
xchg
xchg
fwait
movsb
dec
dec
mov
mov
imul
je
aaa
or
sub
int3
cs
fwait
xchg
aad
mov
repnz
sub
or
out
lock
jg
xchg
and
lds
out
lret
inc
outsl
popa
and
xor
xchg
adc
test
mov
in
pop
inc
jns
inc
ret
outsb
mov
lods
sub
in
xor
and
mov
lea
lret
fxtract
cmp
iret
mov
inc
xor
mov
ds
sub
jmp
lods
fs
rcll
test
popf
mov
or
inc
in
inc
sbb
and
push
adc
popf
rol
dec
inc
inc
xchg
jns
jmp
lods
test
fmuls
dec
lea
fdivrl
jg
mov
mov
jmp
sbb
ljmp
pop
dec
arpl
je
shll
in
stos
add
mov
push
xchg
test
hlt
insl
addb
imulb
jb
enter
test
add
test
rorb
fldcw
push
mov
and
pop
sti
mov
mov
push
cmpsw
xchg
imul
mov
ret
cwtl
xor
add
stc
mov
ja
push
xor
push
mov
lods
mov
push
outsb
add
add
test
ret
adc
adc
test
pop
push
sbb
test
outsl
inc
add
mov
les
sub
mov
adc
into
jecxz
jge
ss
sub
cmp
and
pop
sti
lret
cmp
imul
pop
scas
out
pusha
pop
xor
cmpsb
cmp
inc
pop
jnp
inc
mov
cmc
dec
xchg
xchg
popa
and
test
lock
pop
stos
push
mov
or
movl
jne
mov
xor
mov
sbb
xor
movzbl
adc
div
xor
xor
sub
mov
mov
movzwl
sub
mov
xorl
div
mov
mov
movl
jmp
sbb
mov
xor
mov
mov
add
mov
adcl
shr
movl
rcr
shr
movl
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
movl
cmpl
je
add
jmp
fwait
mov
xchg
sbb
push
jle
push
adc
adc
mov
push
pop
pop
and
popf
lds
jg
stc
xchg
mov
aad
stos
push
test
sub
jae
sti
jae
cmp
sub
push
add
adc
lea
xor
cltd
cmp
mov
and
or
jmp
lahf
stos
ljmp
jae
mov
push
pop
sbb
mov
jo
mov
mov
mov
ljmp
sbb
push
ds
cmp
rcrl
rolb
dec
stos
add
aad
sbbb
dec
xchg
loop
clc
mov
in
and
divb
add
adcb
or
mov
pop
les
std
nop
aas
mov
dec
push
nop
in
jne
insl
mov
inc
mov
pop
insb
subb
stos
jne
dec
sbb
pop
test
lods
mov
mov
loop
test
pop
adc
test
pop
aad
push
mov
notb
fstpt
jae
push
inc
xchg
dec
ja
sub
stos
pusha
cmp
jb
mov
pop
or
subl
into
and
lret
fsubrs
jmp
dec
xor
iret
in
jb
cld
push
inc
call
push
aam
push
cs
sbb
and
jl
mov
out
out
sarl
shrl
adc
lods
dec
cltd
jnp
in
mov
outsb
incb
cld
mov
xchg
and
and
mov
lock
mov
mov
add
pushf
pop
xchg
pop
mov
into
add
loop
adc
lret
jb
lret
push
sub
mov
shll
lret
cwtl
xor
data16
xor
mov
daa
mov
lods
pushf
xchg
or
sahf
loop
push
mov
mov
xchg
dec
fwait
pop
or
fwait
sub
movsb
insb
push
out
ds
mov
cwtl
push
push
mov
jne
adc
sub
loopne
add
xlat
ret
cld
cli
push
movsb
lods
mov
pop
pop
std
enter
js
icebp
sti
in
inc
or
cmp
clc
cmpsb
shrb
or
adc
cmc
in
enter
mov
mov
and
dec
jge
jp
cli
dec
in
in
sub
pop
iret
xor
jae
push
sub
bound
popa
enter
movlps
xlat
sbb
cli
arpl
cmpsb
mov
std
xchg
nop
jmp
jae
jle
jmp
jno
shlb
jl
or
cmp
lret
push
js
cmp
push
pop
or
lods
lahf
xor
pop
xchg
orl
mov
cld
mov
pusha
fld
lret
fdivs
sbb
adcl
adc
cmpsl
roll
xchg
mov
sub
cmp
add
test
je
pop
adc
add
cltd
mov
jbe
push
dec
mov
imul
test
sub
scas
mov
int
cmp
je
stos
or
push
add
mov
sbb
push
rorb
lcall
add
cmp
add
leave
ret
movl
cmp
jae
movl
cmp
jae
sbbl
shld
shl
ret
mov
orl
xor
adcl
and
shl
ret
xor
xor
ret
