push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
or
mov
mov
mov
sbb
mov
mov
orl
push
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
push
jmp
enter
fldenv
add
ret
mov
addb
jl
aam
ret
rol
in
lret
fmul
cli
icebp
fmul
aam
cmp
not
rolb
mov
jmp
leave
xor
icebp
xor
neg
aad
int
fnclex
out
repz
ljmp
out
ret
clc
fxch
in
leave
icebp
hlt
dec
cmp
rolb
repnz
in
fildl
shl
sub
shl
xlat
stc
aas
adc
out
out
test
mov
iret
cld
fdivp
jecxz
hlt
jecxz
aaa
ret
fcmovu
neg
in
iret
out
lock
in
lock
in
aad
jmp
sti
call
aam
int
int3
out
ds
fmulp
sti
out
fmuls
hlt
icebp
rol
repnz
aad
xor
lret
sarl
cld
hlt
cmp
ret
loopne
out
sti
xchg
jmp
sti
xlat
in
shr
aam
cmp
cmp
fidivrs
fmul
xlat
out
in
into
iret
cld
nop
test
in
cmp
cmc
cli
into
test
aas
out
out
decl
enter
loop
loop
in
ljmp
clc
fmulp
repz
fcmovbe
sbb
sti
out
in
fldl
into
sub
out
clc
xor
cli
lret
not
cli
aas
xlat
rcr
fcmovbe
bnd
nop
test
xchg
in
aad
leave
hlt
enter
hlt
cld
cli
xor
clc
cmp
ret
xchg
fcmovnu
fcmovu
ret
enter
repnz
lret
shll
call
repz
iret
in
ret
std
sti
out
iret
sbb
in
ljmp
ss
cmc
call
rcl
shr
fadds
les
hlt
out
in
std
fabs
std
rcr
xlat
int3
hlt
icebp
aam
mov
cli
loope
icebp
nop
call
aaa
aad
lret
fbstp
out
rcl
jecxz
jmp
icebp
xchg
int3
int3
repz
xor
neg
int3
sti
cmp
int3
in
loop
sar
test
test
jecxz
mov
ds
call
call
repz
icebp
repz
leave
hlt
fadd
leave
jecxz
out
cli
lock
div
clc
icebp
shl
aad
lret
ret
fcmovnu
xchg
aam
imul
std
call
iret
das
lret
into
lock
lock
loopne
xor
fldl
ljmp
xlat
repnz
lret
std
dec
fcmovnb
hlt
aam
ret
fsub
in
cli
filds
iret
sub
lds
xor
lock
clc
aam
cmp
xlat
ret
shr
inc
out
in
decl
sub
iret
ss
sarb
fprem1
loope
ret
lock
adc
out
stc
into
in
lret
aam
out
cmp
lret
fxch
int
ret
vcmpss
cmc
ljmp
enter
leave
enter
std
test
test
test
fdivp
int3
xchg
xchg
lock
sub
int3
in
aaa
idivb
ds
cmp
ljmp
xchg
leave
in
cmp
sti
enter
cmp
cmp
roll
aam
stc
in
clc
icebp
ffreep
icebp
aad
ret
enter
cmc
cmp
cmp
cmp
test
std
jecxz
mov
and
call
rcl
fcomip
cmp
sub
ret
xbegin
aam
in
icebp
loop
lock
xor
out
in
ss
aad
shl
out
xchg
ret
clc
loopne
clc
loopne
fisttps
xor
shr
iret
in
loope
cmc
shl
ds
loope
xchg
xchg
jmp
loopne
lret
shl
out
jecxz
cmp
rcr
cli
ret
lock
lock
cmp
in
xchg
ljmp
out
loop
call
in
jecxz
rcr
in
in
xlat
in
iret
out
in
out
out
fnstenv
in
sar
repz
ret
add
incb
loop
mov
aam
test
sar
cmp
leave
stc
cli
rcl
out
xchg
fcmovbe
call
sub
in
ror
and
jecxz
leave
cmc
cli
idivl
cmp
int
ret
ret
test
fsub
loope
test
jecxz
xchg
loopne
cs
lret
ss
pop
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
enter
lret
xor
inc
push
adc
addb
jl
add
out
shr
xlat
cmp
aas
jecxz
fdivr
loope
cli
ljmp
rcl
int
fdivr
aad
shr
xchg
xlat
sub
orl
jecxz
out
lock
ljmp
xor
decb
movl
call
std
out
loop
test
aad
jmp
lret
in
fucomp
fcomip
in
mov
xlat
lret
jmp
rcr
cmp
lock
loope
out
incb
adc
repnz
ljmp
roll
add
mov
fdivr
xchg
lea
div
iret
xor
in
in
test
cmp
out
inc
jmp
fsubp
in
sub
fcom
ss
in
shl
repz
shl
inc
aas
mov
int
adc
shr
cmp
out
neg
lret
icebp
cmp
xlat
fcom
hlt
jecxz
sub
test
enter
sub
jecxz
in
fsubr
ljmp
leave
fcmovnb
ret
orl
enter
into
aad
jmp
cmp
mov
ljmp
sbb
loope
out
sub
ljmp
fcomp
mov
inc
in
movl
xor
cmp
sti
out
std
ss
ret
sarb
cld
ret
fisttpll
loopne
xchg
sar
enter
out
jmp
cli
rcr
xlat
clc
std
out
enter
call
in
in
jmp
mul
xor
adc
loopne
add
stc
leave
xchg
xor
xor
in
xlat
idiv
leave
iret
cmp
fcmovbe
fcmovb
out
aam
mov
xor
xor
cmp
fsub
cmp
cli
ljmp
sti
mov
orb
shr
repz
call
cmp
lret
out
adc
jmp
int
test
lock
out
xor
fdivr
aaa
sti
lret
ljmp
cli
xlat
enter
and
shr
call
jmp
rolb
repnz
clc
out
out
fsubr
repz
xor
icebp
icebp
imul
fmul
out
in
incb
addl
in
and
aam
int3
lret
int3
stc
repnz
int3
cmp
lock
cli
hlt
rcr
lret
xchg
aad
les
hlt
cs
lret
cmp
cmp
idiv
into
clc
mov
aad
mov
in
repz
lock
fmul
iret
aad
lret
ljmp
stc
fdivr
cld
aas
fildl
std
repnz
into
lret
xor
aam
ljmp
out
aam
mov
xlat
mov
call
mov
lret
rcr
sarb
fdiv
std
int3
ret
shl
rorl
fiaddl
fsubp
xor
in
cmp
in
out
jmp
rcl
out
and
fcmove
lock
leave
iret
leave
fmul
sti
aam
repnz
cmp
rol
test
aam
hlt
neg
call
enter
fcmovb
cmp
cmp
iret
out
xchg
filds
xchg
cli
iret
icebp
call
cmp
lret
cmp
shl
into
in
testb
clc
mov
call
jecxz
iret
lret
int
dec
idiv
jecxz
xlat
ret
cmc
rorb
xchg
repnz
lock
fchs
ret
adc
out
test
mov
cld
mov
xchg
fsubrp
out
xor
mul
aam
int
fdivrs
jecxz
aad
fucomp
fdivr
into
shr
ret
in
iret
xor
iret
cmp
test
fcomp
aad
stc
fmull
incl
test
fildl
roll
enter
push
lock
lret
loope
cmp
fdiv
fcmovne
out
call
jecxz
loope
in
ret
aad
loope
xchg
loop
sbb
leave
call
fdivl
mov
mov
inc
add
add
add
add
je
cmpl
jne
pushl
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
adc
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
mov
lea
mov
mov
sub
and
mov
jmp
lret
aad
fcmovu
adc
mov
pop
jl
addb
jl
out
xchg
test
ljmp
rcl
int
aam
iret
xor
rol
mov
mov
lret
test
xchg
icebp
test
xor
cmc
aam
xor
in
ds
jmp
xlat
in
lret
loope
mov
cmc
hlt
ss
loopne
cmp
cmp
cmp
cli
aas
rolb
loopne
lret
or
mov
in
jmp
repz
repnz
out
rcl
fbstp
cli
ffreep
enter
fsubr
call
into
shrb
out
fdiv
xlat
cmp
iret
fdivrp
hlt
rol
ljmp
mov
sub
shl
call
int
cmp
sar
rolb
test
rorl
leave
into
lret
shlb
sti
fxtract
cmp
in
fadd
rolb
out
rorl
ror
stc
jmp
incl
inc
mov
aad
lret
fscale
ljmp
xlat
shl
fucomi
lock
lock
repnz
repnz
mov
xchg
xor
ret
into
xor
repz
cmp
cld
out
aas
test
flds
mov
out
call
xor
lret
aam
sbb
loop
jmp
test
cld
xchg
in
ss
repnz
aad
test
ret
jmp
cld
fildl
jmp
xor
out
jmp
not
in
fdivrl
rcl
movl
iret
aas
xor
ss
xor
iret
cmpb
fiadds
loope
sub
repnz
xor
leave
into
lock
in
cmp
xchg
out
mov
ljmp
int3
in
cmp
repz
ret
aam
in
cli
clc
in
out
xchg
movl
imul
ror
repnz
ss
ret
ret
lret
repz
and
ror
lds
out
out
int
aas
cmp
rcr
and
rcr
testl
xor
xor
iret
cli
aad
aad
loope
rol
jmp
in
jmp
leave
out
lret
aad
clc
aad
cmp
stc
cmp
shl
jecxz
lea
repz
out
into
int
shr
out
hlt
icebp
cmp
rol
fcmove
repz
out
icebp
out
cmc
call
test
lret
sar
out
in
lret
out
rcl
iret
cli
cli
sub
loop
leave
in
mov
imul
xlat
fcmovu
fnstcw
cmp
loope
in
loopne
cmp
fcmovb
ret
hlt
clc
sti
xchg
add
fxtract
lret
int
iret
in
repz
test
hlt
ret
cli
repnz
sub
mov
out
mov
aam
out
out
in
int
xlat
cmp
add
loop
in
ret
sti
xchg
enter
orl
in
lock
cmp
loopne
std
div
fdivrp
fdiv
jmp
in
mov
xchg
enter
test
std
ljmp
shr
cmp
fcomp
cli
aad
lret
jmp
jmp
out
clc
cs
ljmp
sar
test
cmp
lret
jmp
xchg
in
in
out
aaa
in
xor
call
std
clc
sti
cli
lds
xchg
inc
cmp
mov
sarb
rol
cmp
cli
int
fldln2
fcomip
fdivp
out
repz
test
jmp
iret
repnz
sub
aas
std
iret
div
fistpll
roll
xchg
mov
adc
shrl
aad
into
cmp
into
cmp
hlt
fmulp
lock
cmc
addb
out
ficoml
xor
xor
lock
cli
aad
cmp
out
in
out
call
sub
jmp
test
das
repnz
cmp
xor
idiv
cmp
fdivr
lock
fstpt
inc
in
in
fmull
sub
xor
loop
stc
lret
aad
in
sarl
rcl
imul
lock
leave
fmuls
jmp
leave
xor
in
cmp
cmp
rorl
push
fs
add
add
push
fs
add
sahf
add
add
ret
ror
daa
jae
lea
or
add
stc
xchg
cli
lret
jmp
xchg
xor
out
rcl
xor
lret
jecxz
xlat
cld
neg
ljmp
mov
int
aad
call
test
in
test
test
test
loope
out
shl
loope
repz
std
icebp
repz
in
xlat
out
aad
xchg
aad
loop
stc
icebp
repnz
stc
rol
int
cmp
out
leave
hlt
int3
les
icebp
xor
int3
xor
aam
enter
int3
rcr
f2xm1
adc
loop
fxch
mov
xor
loope
out
cmp
fucomip
cli
not
cmp
ds
aam
in
out
test
out
loope
ss
lret
fdivrp
xlat
ljmp
xlat
test
hlt
jmp
loopne
shr
xchg
out
ret
jecxz
fdivrs
idiv
loope
cmp
cmp
loop
cmc
aad
incb
loop
incl
icebp
repz
jmp
imul
int
jecxz
cmc
loop
movb
ljmp
sub
mul
mov
ss
fdiv
in
not
aad
in
addl
in
out
in
ret
repnz
xlat
cmp
enter
in
clc
fiaddl
int3
sbb
mov
orl
sub
out
repz
cli
ror
out
rol
stc
loopne
lret
mov
sti
sub
fisttps
xor
xor
cmp
cmp
cli
fprem
inc
addl
call
loop
fst
lock
sar
std
cmp
loopne
jmp
fstp
mov
fucom
int
ffreep
out
shlb
rcl
cmp
loopne
fdiv
in
iret
test
stc
fdivr
int
rorl
xor
leave
test
loopne
and
cmc
mov
in
rcl
test
rcl
lret
std
fcomip
ret
lret
cmc
loope
repz
lret
mov
fstl
enter
int
cmp
int3
idiv
jecxz
cld
repz
fiaddl
nop
rcll
int
in
out
ss
lock
in
leave
fucomip
fcmovu
sbb
in
xchg
ds
loop
into
les
out
rcr
loope
lock
fucom
mov
repnz
jmp
int
cmp
jmp
shl
in
aad
xlat
rcr
jecxz
std
sti
sar
hlt
repnz
clc
jmp
jecxz
shl
loopne
int
xor
jmp
faddp
loopne
orb
in
iret
ljmp
lret
cli
call
hlt
test
incb
sbb
loopne
out
in
jecxz
sub
aaa
aaa
cld
lret
int3
into
mul
cmp
mov
clc
mov
iret
xchg
test
xchg
das
xor
aaa
xlat
ljmp
add
enter
lret
leave
in
in
sub
hlt
ret
ljmp
fcom
addl
faddl
in
shl
iret
repz
jmp
loope
icebp
ds
repz
test
fstp
repz
mov
xor
not
leave
cmc
lret
lret
int3
loopne,pt
cli
adc
aas
hlt
fcmovnu
lea
sti
in
out
in
out
cld
loope
lret
in
addl
std
fcmove
std
loop
int3
jmp
int
ror
std
int
into
cmp
fidivrl
aas
and
movb
ret
repnz
jmp
stc
lret
loopne
cmp
lds
in
int3
fcoml
call
in
repnz
aas
aad
icebp
add
bnd
jmp
mul
fisttpl
out
hlt
shr
sub
bnd
cld
cmp
repnz
in
fdivr
xlat
mov
pop
jmp
and
xor
ss
neg
jmp
adc
addl
icebp
fdivr
roll
in
out
cli
fcmovu
repnz
loopne
cmp
sub
xchg
out
xchg
loop
jmp
xor
out
shl
into
cmp
xor
cld
ror
faddp
out
aam
ljmp
repnz
add
arpl
add
mov
movl
lea
jmp
ror
rcl
fcmovnu
ror
and
scas
adc
jl
addb
jl
mov
loopne
cmp
xlat
ss
repz
cmp
in
cld
out
fists
iret
in
sub
out
push
leave
cmp
clc
rcl
cld
cld
mul
mov
test
call
loopne
fucomi
out
stc
ds
enter
into
incl
stc
int3
clc
iret
call
mov
repz
aaa
repnz
out
std
xor
std
lock
test
clc
test
out
in
into
out
cmp
out
cmp
mov
ljmp
aas
leave
out
enter
lock
jmp
sar
int3
test
stc
call
or
shl
icebp
rcl
lock
fsubr
leave
aam
int3
cmp
icebp
sbb
xbegin
cli
cli
mov
fcmovb
lret
cmp
ret
in
icebp
clc
rcr
cld
in
in
out
fcomp
lret
jmp
shl
aam
icebp
fidivrl
cmp
add
std
testl
out
enter
loopne
int3
cmc
stc
aam
cmp
cmp
test
fildl
xchg
jecxz
repz
call
in
cmp
stc
cmp
std
stc
aad
ret
mov
leave
test
call
ss
out
imul
aaa
ror
ds
lock
fdivr
ret
out
mov
loop
leave
xchg
mov
icebp
in
xor
hlt
test
aas
fsubr
rol
fdivrp
aam
rolb
sub
iret
xchg
shrb
loopne
xor
std
clc
int
sti
sarl
fcomp
jecxz
xor
shl
ret
sbb
iret
div
aam
ret
cmc
not
fdiv
lock
ret
lock
sbb
mov
in
fldl
ret
lret
cli
int3
aam
cmp
adc
not
aas
fildl
int3
fmul
mov
loop
cmc
lock
cmp
repnz
stc
cmp
out
fst
fcmovnu
cld
out
mov
lret
jecxz
call
ret
aaa
icebp
ss
fucomip
out
rcl
xchg
xchg
loope
into
orb
int
in
vpmuludq
cmp
fdivr
fadd
rcl
fsub
cli
aam
lret
mov
loopne
ret
int3
cld
xor
call
in
jmp
repnz
into
fcmovnb
ret
out
stc
nop
mov
aaa
xor
into
hlt
imul
fnstenv
ret
sar
in
repz
lock
loop
in
icebp
in
hlt
sub
ss
lret
out
clc
fidivrl
clc
fprem
shl
rolb
jecxz
jmp
in
xor
cmp
stc
sarb
stc
cmp
shl
stc
fcmove
xlat
std
addb
out
sub
ss
idiv
loop
fcmovb
test
rcl
testb
loopne
iret
repnz
hlt
out
aaa
out
fiadds
out
addb
loopne
jmp
jmp
cmp
shl
in
int3
faddp
fstp
fsubr
ds
jmp
testb
cld
jecxz
neg
loop
lret
out
fdivp
aad
test
test
cld
test
leave
ret
mov
loopne
int3
xchg
icebp
xor
stc
aas
repz
fmul
idiv
fisttps
ret
lock
sub
xor
in
fidivs
stc
cmp
shl
xchg
lds
fisttpll
enter
repz
out
out
cmp
enter
cmc
cmpl
ds
clc
sbb
adc
decl
repz
aad
loop
cli
aad
ret
loop
orb
iret
call
in
leave
iret
stc
xlat
ljmp
push
in
fiaddl
loopne
xchg
das
shr
rcr
fsub
fistpll
in
xchg
shr
std
ljmp
mov
loope
out
int
out
cmc
jmp
shl
out
cmp
stc
in
xlat
fdivrp
jecxz
int3
or
das
lret
imul
rcl
ljmp
out
faddl
xchg
rolb
xor
icebp
hlt
sti
in
xlat
int
shl
xor
ror
hlt
decl
enter
inc
loopne
inc
in
mov
jmp
aam
into
lret
rcr
fstp
les
inc
push
lcall
jl
lock
loop
cmc
ror
ss
stc
xlat
addb
mov
stc
stc
out
lds
rcl
out
aad
jmp
cmp
into
aas
jecxz
ret
cli
aad
imul
mov
fxch
orl
out
clc
ljmp
fadds
loop
in
out
ljmp
fcmove
out
cmp
fiadds
out
sar
xlat
repz
faddl
repnz
ljmp
stc
repz
fsubp
clc
loope
ds
lret
loop
loop
shlb
out
aaa
call
icebp
aas
cmc
in
clc
fcmovnb
out
xchg
sub
xchg
in
lock
out
cmp
cmp
lret
repnz
fdivrl
cli
mov
mov
int
in
hlt
int
std
imul
pushl
incb
repz
sti
fld
in
fstp
out
loope
repz
xor
cmc
in
loopne
in
xlat
cli
icebp
rcl
hlt
fsubr
movl
loopne
lds
in
sti
cmp
repz
hlt
aam
leave
sti
fcmovnu
fiadds
repnz
in
sti
ss
fcomi
in
jmp
cli
fsub
out
mov
sti
loopne
fmul
fmull
in
in
shlb
iret
les
not
aam
cmp
cmp
lret
out
mov
in
repz
rol
call
xor
cmp
cmp
out
jecxz
repnz
cmp
clc
incl
and
ret
xor
xor
lret
in
shl
bnd
mov
int3
loope
in
shlb
rcr
jecxz
aad
std
in
std
cmp
adc
in
hlt
aad
ljmp
fisttpll
repnz
xor
iret
shr
aam
out
cmp
movl
repnz
in
fucomip
xor
test
fsub
leave
shl
leave
mov
mov
rcl
test
jmp
sub
cmp
aam
jmp
int
les
clc
clc
in
stc
addb
mov
xor
into
enter
idivb
and
icebp
sar
test
jmp
mov
addl
test
loop
lock
out
sar
sarb
lock
fcomp
ret
ret
lock
xchg
xchg
fsubr
xchg
mov
in
aad
in
lret
enter
ss
xlat
in
cmp
sar
sub
lret
fucomi
out
std
stc
xor
repz
fildl
filds
loope
xor
clc
shll
fcomip
dec
faddp
incl
int
sti
mov
xor
fists
mov
cmp
cmp
loope
ret
into
test
xlat
icebp
shl
sar
out
test
fiadds
sub
ret
hlt
loopne,pt
rcr
ret
out
test
fldl
mov
mov
loopne
xchg
xor
lret
rcr
cli
enter
fdivp
loope
aad
fnstsw
loop
out
loop
or
in
xchg
aas
xor
aad
jmp
aam
clc
enter
ds
test
repnz
popl
xchg
mov
aaa
rcl
aaa
out
sti
cmp
shr
ret
movl
out
rolb
enter
sar
cmp
shl
ret
in
sarl
fdiv
in
lret
call
loope
or
lret
xor
sti
xor
idiv
cmp
jmp
and
cmp
in
not
shlb
into
ror
xor
fnstsw
jecxz
test
fcom
mov
fsub
out
cld
leave
in
xchg
bnd
aad
int3
rcr
sar
loopne
out
rcr
enter
loop
or
out
loop
icebp
int3
xor
ljmp
into
in
in
std
xlat
enter
out
xchg
shll
cmp
imul
lock
fdivrp
xchg
repz
loope
out
hlt
in
in
jmp
xlat
out
enter
stc
cmp
xlat
repz
dec
lea
fucomi
fmul
iret
iret
into
and
or
loop
enter
xlat
cmc
in
in
movb
mov
mov
mov
mov
mov
jmp
ret
rcl
rcl
aad
shrl
outsl
xchg
stc
and
jl
addb
jl
xlat
xor
call
repnz
shr
decb
mov
sti
decb
xor
in
loop
in
out
fnstcw
test
jmp
mov
in
out
iret
nop
ljmp
repz
sarl
fdivr
loope
xlat
out
in
fucomip
mov
inc
shr
std
out
mov
shr
sti
sti
out
ror
cmp
xlat
ror
fcom
les
mov
mov
mov
jmp
loop
out
into
xlat
iret
cmp
in
iret
std
not
fildl
jmp
enter
sub
repnz
xor
out
iret
ljmp
test
mov
shr
xchg
ret
aaa
int3
in
ss
lock
out
rol
mov
std
fadds
fucom
int
test
aad
shr
fstp
xlat
repz
xor
cld
rol
xchg
leave
fcmovnu
mov
int
int
out
incb
in
cli
fdiv
rorb
lret
mov
into
lret
cmp
loope
test
jmp
jecxz
cmp
in
loop
xor
in
das
lds
jmp
in
testb
cld
test
fimull
nop
int3
addl
xlat
cmp
fprem1
fdivr
int3
aas
out
rol
out
xor
or
enter
divb
cmc
iret
repz
fldpi
sti
rcr
hlt
out
aad
out
mov
orb
int3
stc
lret
fucomip
xor
shl
int3
fsubr
jmp
in
cli
in
jecxz
loop
fisttps
cmc
xor
repnz
in
cmc
shl
ds
in
loop
flds
aaa
jecxz
leave
xor
lock
fld
hlt
fldl
shl
jecxz
ret
xor
rol
out
xlat
iret
cmp
cmp
into
out
ds
ljmp
and
dec
ror
into
lret
ljmp
cmp
repz
xchg
fmuls
mov
mov
call
fcmovb
out
lock
fcmovbe
repz
clc
fimull
xor
cs
repnz
ss
mov
aam
iret
and
xchg
shr
in
xlat
call
fildl
stc
mov
rol
fdivr
frstpm(287
lock
lock
int3
aad
cmp
ss
and
loope
xchg
std
xchg
and
ljmp
rol
xor
xlat
fdivr
cs
fdivrl
jecxz
stc
rol
mov
aam
jecxz
mov
lock
hlt
hlt
aaa
shr
lret
xlat
aam
incl
xlat
aad
int
in
xchg
rcl
xor
jmp
loope
rolb
repz
in
xchg
in
mov
xlat
loope
in
ret
icebp
in
addl
in
orl
shr
lret
shl
iret
fmul
shr
ds
sti
enter
jmp
loopne
xchg
out
sti
in
rcr
xlat
in
out
test
sbb
mov
addl
ret
icebp
into
clc
lret
pushl
cmp
fcomp
repnz
flds
or
in
xchg
shlb
icebp
call
ss
out
sbb
ds
mov
cli
std
enter
ss
hlt
in
les
shr
std
fdivp
loopne
aad
shl
stc
mov
xchg
loopne
cld
in
repz
cli
lock
ljmp
cmp
rorb
out
repnz
lret
rcl
repz
cli
cmp
cmp
cld
icebp
in
leave
jmp
int
std
jecxz
in
jmp
std
test
out
test
call
int3
fucomip
cld
out
xchg
lret
call
ljmp
xor
test
xor
test
aam
xor
cmp
sub
aas
fsubrp
fucomp
lret
jmp
or
loop
xor
hlt
xor
rol
rol
mov
jmp
sarb
enter
fidivl
mov
push
push
cmpsb
sbb
jl
fld
repz
cld
loopne
mov
into
in
sti
jecxz
xor
xor
in
jmp
idivl
loopne
sar
std
ljmp
aam
sub
shl
int3
cmp
sarl
int3
add
in
jmp
mov
cld
mov
cld
xor
aad
cmp
cmp
icebp
rcl
fcom
flds
out
int
dec
std
rclb
int3
xor
cld
clc
int
cmp
lock
loope
xlat
cmp
aam
enter
cmc
loop
shr
xor
sub
cmp
out
sbb
jecxz
leave
faddp
out
out
call
fidivrs
ss
out
int
cmc
cld
fistpll
out
rol
fsubr
mov
sub
ljmp
shl
stc
in
repz
fchs
out
aad
cmc
aas
fldl
std
les
xchg
loop
ss
fsub
fcmovbe
shr
iret
push
fdivs
hlt
fcmovnbe
fucomip
dec
ljmp
mov
ss
out
aaa
jmp
shl
loop
xchg
ret
lds
mov
nop
cld
ds
rcl
ljmp
rcl
cli
into
cmp
xchg
stc
stc
fstl
loopne
out
lret
cmc
stc
cmp
incl
rcr
call
cld
xchg
xchg
lock
in
aam
out
int
ror
int3
sarb
repnz
mul
mov
xchg
in
repnz
ss
iret
test
sub
orl
loopne
loope
jecxz
enter
neg
in
fst
ljmp
rorl
fmuls
in
xor
mul
out
cld
rcl
aad
cmp
cmc
lock
repnz
ret
int3
ret
xor
rol
enter
lock
in
aas
fdivr
ffree
adc
shr
cmc
cli
fadds
out
push
fcomip
rol
ss
cmp
repz
fdiv
hlt
out
ss
fninit
mov
lret
fucomp
into
loope
test
xlat
fcomp
pushl
loope
aad
iret
icebp
rcl
fcomp
xchg
fstp
loope
out
cmc
cmc
add
repz
iret
xor
ljmp
int
fadds
and
mov
mov
in
loope
cmp
out
xor
fcmovnu
jecxz
std
out
into
ret
cmp
xchg
and
clc
movl
cmp
shl
in
dec
std
ret
fnstenv
shl
rcl
cmp
addb
out
xchg
enter
ror
out
iret
out
int3
cmp
ds
in
repnz
aad
aam
jmp
xchg
lret
in
in
das
xor
out
test
cld
clc
loope
fcmovu
xlat
ss
fisttpll
cli
mov
fcomip
fmul
lock
xor
test
cli
cmc
lock
fistpll
rcr
fnstsw
fucomi
fcmovu
lea
loopne
int3
mov
cmc
idiv
fcmovnbe
fdiv
rcr
test
xchg
mov
fucom
fimuls
repz
jmp
ljmp
ret
lock
out
sti
orl
loop
out
int
cmp
fdivrp
testl
fsubp
out
lret
out
jmp
xor
shr
loopne
cmp
into
in
fucom
incl
in
test
fimuls
cmp
in
cmp
repz
loope
fidivrl
ret
leave
repnz
in
mov
lret
sti
cli
test
repz
cld
aam
cmp
fsub
xchg
cli
ret
in
lret
out
addl
not
stc
cli
aaa
cmp
rcl
and
xchg
test
leave
xchg
ljmp
aas
ret
shll
clc
aaa
jmp
in
cmp
fdivrs
shl
aad
shr
in
fadd
icebp
fiaddl
loopne
leave
out
clc
in
ljmp
lock
sbb
fcmovbe
in
xchg
xchg
lock
fcmovbe
ss
cli
xlat
ds
icebp
xor
sarb
mov
shl
lret
out
aam
fdivs
test
jmp
cli
cli
into
lock
loope
loopne
idiv
mov
enter
loop
jecxz
xor
hlt
out
loope
out
in
movzwl
add
mov
mov
mov
xor
add
cmp
jmp
iret
leave
rcl
fstp
leave
repz
push
dec
test
add
mul
fsub
xchg
fdivr
xchg
test
int3
ljmp
sub
rcr
iret
cli
loopne
stc
repnz
rol
fisttpl
int
aam
aam
out
stc
jmp
lret
icebp
fcmovnbe
fcomp
test
idivl
mov
leave
shr
loop
in
mov
std
xorl
ror
call
mov
test
int3
lock
fcom
shll
lret
sbb
hlt
jmp
in
xchg
cs
leave
loope
rcr
cmp
rol
vpminub
in
test
in
rcl
hlt
lret
hlt
out
not
enter
ror
stc
repnz
rcr
mov
call
fsubrl
in
shll
ret
out
fmul
cld
cmc
cmp
aam
stc
sti
sar
leave
fsub
or
fldl
lret
into
iret
jmp
ds
icebp
fadd
dec
jmp
filds
xor
std
ss
ds
loope
aad
loope
cld
cli
fldl
sub
lret
sti
xor
mov
idiv
mov
iret
xchg
rorb
in
out
xor
rcr
cmc
rol
rcl
mov
test
iret
icebp
shlb
ret
jmp
lret
cmp
out
out
jecxz
fcmovnbe
test
test
out
cli
mov
in
xor
stc
idivl
iret
sarb
lret
div
rcr
rcl
call
mov
dec
mov
ret
cmp
int
loopne
aaa
sar
roll
loop
cld
iret
icebp
fmul
fpatan
cmc
jmp
out
rcl
xlat
aas
std
hlt
jmp
fnclex
fcomip
aad
ret
in
loopne
lock
repnz
ffree
cs
cmp
add
std
sarl
into
cld
repz
iret
xlat
call
into
cmc
leave
icebp
fyl2x
cmp
std
roll
aas
sbb
mov
loope
jmp
ljmp
sar
aas
test
cld
rol
hlt
in
in
adcb
lret
int
cmp
out
hlt
fcmovnbe
stc
ret
cld
rolb
fstp
into
adcl
xor
rcr
cmp
repz
ds
out
cmc
shl
test
clc
ror
nop
icebp
jecxz
xchg
call
aam
hlt
fcmovbe
fst
mul
xchg
shl
xlat
mov
jmp
call
shll
cmp
in
aam
cli
fstp
in
iret
lock
lret
das
leave
sarl
out
cmp
div
aad
clc
cld
out
enter
int3
lret
out
add
ret
divl
xor
loopne
xorl
std
std
ffree
testl
xchg
xchg
sarl
shlb
hlt
ljmp
aam
in
or
test
loopne
fsincos
cmp
lret
rcl
icebp
xor
xor
cmp
leave
mov
leave
cli
mov
ds
xor
hlt
out
out
cmp
iret
loope
test
xchg
inc
enter
sub
call
jecxz
das
fnstcw
in
fcmovnu
ss
ljmp
into
fldl
faddl
out
ret
xor
xor
sti
cmc
cli
cli
cmp
not
in
xchg
leave
test
sti
clc
frstpm(287
enter
test
lret
loope
vaddsubps
fstp
fadd
repz
flds
clc
test
jmp
xorb
enter
cmp
clc
out
dec
hlt
clc
clc
loopne
cld
xchg
in
addl
fcmovne
xor
iret
jmp
loop
sar
in
std
les
mov
orl
rcr
cld
fcmove
aad
jecxz
out
test
flds
jmp
shl
jecxz
cmp
leave
cli
sti
cmp
loop
mul
stc
testb
into
xchg
in
in
shr
sub
ljmp
cli
ret
test
clc
loope
stc
mov
and
jmp
mov
lock
fcmovne
fcmovne
cmc
lret
fidivrs
int3
std
lds
in
add
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
jmp
int
lret
xlat
int
es
inc
cmp
loope
and
jl
add
mov
in
aad
sub
clc
lock
iret
repnz
into
add
jmp
test
in
hlt
jmp
cs
aaa
aas
out
cmp
ds
test
mov
rol
int
in
fcom
cmp
aad
ret
cmp
repnz
test
xlat
cli
stc
std
loop
int3
mov
xor
shlb
iret
std
jmp
aaa
fdivl
fstp
fildl
in
mov
loopne
sti
jmp
rcl
out
cmp
enter
cmp
cmc
or
jecxz
repnz
in
lret
loopne
fisttps
aam
shl
int3
xlat
cmp
fadds
cmc
aam
sub
fmul
ror
ficoms
xor
aas
cli
int
icebp
hlt
aam
loope
test
out
fxch
mov
loopne
loopne
ror
jecxz
loopne
xor
lret
rcr
cld
clc
repz
leave
jmp
stc
mov
cld
loopne
out
faddp
cs
shr
cmp
ss
clc
stc
cmc
mov
in
std
iret
loopne
cld
loopne
ror
out
cli
sub
cs
rcr
int3
ljmp
jmp
int
lret
mov
imull
aad
xor
in
xor
into
std
fcomip
rcl
test
fsubrp
sbb
clc
sti
xchg
xchg
mov
ss
xlat
into
repz
cmc
xor
cmc
xor
pushl
iret
fadds
cmc
sti
cmp
into
shl
loopne
iret
out
stc
iret
into
cmp
stc
into
fucom
cmc
lret
cli
fiaddl
orl
shl
cmc
in
ss
cmp
icebp
xlat
inc
shl
sar
lret
leave
sti
in
cli
fdiv
xchg
repz
repz
shl
div
jmp
cmp
test
out
xchg
fsubp
rcl
xor
into
icebp
ret
rcl
clc
clc
cmp
xchg
sbb
xchg
xchg
lret
sub
cmc
lret
fdivrl
fucomip
aam
ret
cmp
shl
orb
out
in
hlt
in
rcl
in
std
jmp
cmp
fcomip
repz
fld
in
mov
ljmp
jmp
lock
ret
int3
lret
icebp
repnz
adc
jecxz
les
jmp
cli
sti
int
cld
cmc
clc
fnstenv
in
cli
cs
out
repnz
ds
test
test
test
faddl
shl
xlat
rcl
hlt
loop
xor
sar
idivb
test
sarl
aas
std
fmulp
mov
lret
ljmp
xor
out
repz
idiv
ror
ret
cld
decl
mov
in
lret
clc
xlat
sub
std
cmp
loope
loope
cmp
cld
clc
mov
out
cli
repz
in
xlat
enter
leave
repnz
lock
hlt
fxam
sti
jmp
shl
out
jecxz
std
sbb
lock
in
cmc
xor
int
xor
iret
call
xlat
dec
ret
les
call
in
mul
neg
cld
fstpt
loope
cmp
cmc
out
jecxz
lock
aam
test
cli
lea
das
in
out
sti
fmul
fucomip
cmp
loop
in
fiadds
test
mov
aaa
stc
call
int3
cmp
lret
lock
jecxz
std
sar
sub
repnz
fcmovu
fucomi
sar
cmp
stc
movb
decl
sub
shr
int3
rol
xor
in
jecxz
and
loopne
clc
in
int3
cld
call
in
loop
cmp
not
sar
not
aam
ret
mov
loope
int3
sub
nop
in
jecxz
lret
out
lock
ret
loope
leave
fldl
mov
roll
cs
xor
int
aas
rol
cmp
fdivr
out
out
stc
in
out
int
xor
xchg
shl
sub
aaa
cmp
repz
shr
sar
test
div
std
xlat
in
xchg
fcmove
into
repnz
aas
hlt
cmc
jecxz
enter
loope
shl
out
idiv
in
ret
out
fxch
and
repnz
in
ret
aam
fcomi
std
xor
cmp
addl
test
mov
jmp
into
les
rcr
fxch
enter
fcmovnb
int
cmp
jl
addb
jl
fsub
xor
aad
aaa
fidivl
cmp
divl
repz
stc
fiadds
ljmp
aad
jmp
ret
sar
aas
ds
hlt
and
iret
jmp
lock
loop
enter
aas
cmp
test
aam
ret
loop
loop
std
in
in
fucomip
iret
xchg
div
jmp
ds
xlat
idiv
stc
fadd
div
cmpb
loopne
mov
out
xchg
shr
iret
xor
xlat
cmp
enter
aas
and
rol
addl
int3
xor
jecxz
rcr
in
ds
out
rcl
cli
stc
xlat
ret
shl
mov
test
call
loopne
in
int
ss
icebp
cmp
cmp
int
out
in
aad
repz
loopne
cmp
out
xchg
mov
into
ss
ss
clc
ss
aam
in
repz
loop
in
loop
mov
in
call
call
imul
idiv
std
cld
test
xchg
cli
repnz
mov
testb
shl
xor
repnz
xlat
aad
repnz
mov
out
mov
out
orl
not
leave
idivb
aam
ds
ret
xor
std
imul
mov
aas
ret
loop
out
lret
cmp
aad
into
sar
incb
mov
rorb
out
cmp
iret
incb
cli
test
fnstsw
sub
lret
jmp
out
xor
int
ret
clc
iret
icebp
addl
ret
loopne
jecxz
out
into
idivb
repnz
and
cmc
out
loope
sti
jmp
stc
mov
lret
dec
mov
sub
shl
fnstenv
fadd
clc
leave
stc
loopne
out
loop
cmc
loopne
fcmovne
out
and
aam
xlat
out
aaa
cli
iret
cmp
clc
std
frstpm(287
into
mul
ret
clc
adc
iret
mov
orb
loopne
cli
lret
fcomp
cli
int3
cli
in
neg
fisttps
mov
cld
out
ljmp
xor
imul
ss
shl
mov
xlat
enter
loop
xchg
nop
jmp
add
loope
xor
imul
and
clc
test
fldl
lea
in
lds
aam
fsubr
in
xor
iret
div
shl
jmp
cld
mov
in
in
shr
aam
aad
idivb
lret
test
out
ffreep
cld
sar
call
lock
rcl
out
lock
cmp
aas
fst
cmp
call
sbb
mov
ds
lret
idivb
icebp
fiadds
cli
clc
loopne
icebp
mov
out
roll
in
shl
fcmovnu
jmp
cmpl
lock
rol
out
stc
fimull
hlt
call
div
in
ljmp
sti
rcr
shr
cli
addl
ljmp
cmp
out
sarl
call
stc
ret
xlat
repnz
or
adc
mov
xor
in
jecxz
ljmp
sub
ret
ret
aam
cmp
xchg
ret
icebp
and
aad
xor
cmc
in
neg
out
jmp
iret
cmp
in
xchg
into
jmp
pop
ljmp
fistpll
fxch
sti
fsub
cli
into
vpsrad
lret
mov
int
xor
jmp
iret
sub
cmp
fndisi(8087
flds
clc
jmp
incl
repnz
xor
cmc
ror
hlt
enter
jecxz
sar
jecxz
test
lret
iret
sti
out
faddl
shlb
leave
jmp
loope
cmp
test
shr
out
std
mov
fmul
fsub
mov
hlt
jecxz
xor
shl
in
cmp
ret
loopne
and
lret
jmp
lock
call
out
fcmovnu
fnstenv
cld
cmp
rol
clc
fucomp
loope
cmc
testl
ror
fld
out
aaa
fdivr
cmp
loope
lock
filds
aas
hlt
sti
into
in
mov
jmp
iret
xlat
mov
mov
xor
jmp
enter
vpsubusb
sub
xor
sub
add
shlb
shlb
repnz
fsub
lds
call
mov
fadd
shl
in
cli
lret
cld
cmc
fdivrs
out
sub
mov
mov
enter
in
int3
int3
jmp
neg
repnz
icebp
sbb
sti
xor
iret
iret
test
into
repnz
jmp
jmp
not
and
sub
cli
out
sti
test
mov
loope
mov
fldl2t
repnz
aas
neg
fcomp
fcmovu
xchg
cmp
addl
in
loope
ret
jecxz
fnstcw
iret
lock
loope
clc
loope
lds
fimuls
loopne
out
int3
enter
jmp
aas
cmp
sbb
repz
out
xchg
lds
int3
repnz
cs
hlt
sti
repz
fcom
lock
out
mov
filds
addl
cmp
aas
add
cli
in
leave
in
leave
xchg
cli
cmc
in
out
aam
fcomi
out
aaa
iret
lret
cmp
leave
jecxz
leave
cmp
test
int
out
sar
xor
cmp
hlt
dec
sti
loop
mov
cld
out
cld
fdivr
fsub
in
call
sub
jmp
std
fnstcw
cld
filds
loopne
fucomi
in
fdivr
test
out
sub
in
fcom
pushl
cmp
aam
jecxz
cmc
test
imul
cmp
iret
icebp
repz
xchg
div
ret
shr
lret
jmp
addl
sbb
leave
cli
test
cmp
xor
rcr
lock
loopne
repnz
in
shl
ljmp
xor
cli
in
fcmovnu
neg
iret
rcl
idiv
test
rcl
xlat
xor
aad
in
int
clc
jmp
rcr
repz
flds
call
test
xor
iret
xor
lret
cmp
jmp
mul
cmc
shl
lret
out
out
clc
xchg
fimull
not
lret
int
imul
int3
aas
repnz
cmpb
fdiv
std
in
jmp
out
fsubr
lock
ffreep
mul
aaa
sub
ljmp
repz
fcom
clc
enter
icebp
out
in
hlt
shl
rol
cmc
repnz
out
jmp
cli
xor
icebp
std
test
cmp
lret
mov
sbb
into
fsubr
aad
into
in
repz
aam
cli
out
sti
stc
not
add
icebp
out
out
in
icebp
jmp
fucomip
hlt
int
in
cmp
sarl
fucom
cld
hlt
rcl
cli
out
sti
in
fsubp
jmp
jmp
into
lret
lret
cmp
sbb
sarl
mov
test
loope
lock
lret
mov
jecxz
cmp
cld
ljmp
mov
loop
lock
repz
ss
out
clc
testb
out
and
sub
int
hlt
call
divl
std
fdivrp
xrelease
in
out
out
test
cmp
cmp
cli
fcomp
sub
loop
ror
mov
clc
loop
test
and
fcoml
xor
cli
hlt
cmp
fsub
shl
fst
shl
aam
loope
dec
fucomi
repz
enter
hlt
cmp
cli
jmp
repz
cld
cmp
rcl
not
cli
clc
iret
nop
int
mov
xor
aad
cmp
fcmovne
fucomi
ror
cmc
incb
orb
shl
jmp
hlt
in
in
leave
aaa
cmp
jecxz
roll
enter
in
int
int
lret
rcr
ljmp
cmp
repnz
stc
fsub
rcl
mov
jecxz
jmp
in
nop
xchg
ror
shl
sti
in
call
in
mul
fdivrp
cmp
loop
stc
out
jecxz
out
jmp
stc
aad
xor
hlt
lock
lret
icebp
test
out
decl
jmp
iret
shr
shl
stc
out
shlb
ss
icebp
int
rcr
ret
loop
cld
out
ret
in
out
xchg
out
out
enter
jmp
push
int
sub
add
mov
mov
mov
movzwl
add
mov
jmp
iret
int3
ror
fcmovu
frstor
movsl
je
into
xor
jl
addb
jl
cmp
cmp
not
ds
mov
vshufps
int3
mov
test
repnz
xor
iret
cmc
sar
lock
rcr
stc
out
fstp
ljmp
out
cli
std
test
ds
aad
cli
out
jmp
icebp
ffree
aas
cmp
add
aas
fiadds
enter
rcl
int
xor
loope
int3
cmp
and
loop
mov
mov
out
loop
iret
imul
xor
cmp
ljmp
cmp
jmp
in
sbb
enter
dec
out
xor
repnz
shr
aas
std
cmp
jmp
jmp
ljmp
ret
shlb
leave
ss
aam
int3
icebp
ljmp
ret
aad
ret
std
incl
fstl
fcomi
xlat
aaa
cmp
enter
icebp
aam
in
faddl
in
orb
out
fcmovnb
neg
aaa
clc
neg
rcr
rcl
aad
filds
decb
sub
fnstsw
out
int3
loope
in
rcr
fcmovnu
in
bnd
xlat
sub
lock
in
sub
idivl
in
cmp
hlt
fcmovnbe
clc
cmc
std
ret
std
mov
stc
fucomi
loope
loopne
xchg
jecxz
xor
cmp
sti
fucom
iret
fcomi
jecxz
fcmovnu
fadd
and
idiv
or
int3
test
in
out
leave
in
fidivrl
icebp
sarb
test
out
sar
cmc
call
iret
xchg
lret
jmp
ret
in
into
clc
fsubr
rcl
lret
out
aad
out
mov
jmp
lret
icebp
mov
int
iret
lret
loope
xor
fstpt
cmp
sti
test
ret
loop
fdivp
aam
mov
enter
jmp
xlat
out
enter
aaa
sar
cmp
in
orb
mov
test
lock
in
cmp
dec
ljmp
lock
aam
aam
mov
pop
lock
rcll
in
shl
xlat
lock
ss
fucomip
ret
adc
lock
incl
ret
xchg
int3
out
jmp
fcmovnu
xor
cmp
in
fcmovnbe
aad
xchg
or
div
fucomp
mov
enter
repnz
ret
in
xor
lret
fdiv
std
xchg
loop
fmull
xchg
mov
stc
aaa
jmp
shll
int
cmp
adc
loope
loop
in
loop
shl
mov
ror
ror
in
iret
repnz
aas
not
hlt
repnz
and
inc
mov
shl
in
repnz
cmp
fdiv
shr
lock
aad
stc
aam
enter
out
xchg
lock
into
lret
out
xlat
call
loop
testl
into
and
cmc
in
cmp
fsub
in
std
not
enter
out
int
loopne
mov
in
loope
stc
leave
les
enter
lock
xchg
mov
ret
call
xor
out
aaa
bnd
mul
add
repnz
jmp
xchg
into
repz
shl
cmp
out
lret
repnz
int
rcr
clc
std
test
xchg
leave
lret
jecxz
jecxz
ss
shr
in
div
stc
in
fdivr
lock
cld
jecxz
aam
mov
std
iret
or
in
icebp
aad
aam
out
xor
fcmovu
sarl
in
ljmp
cmc
int3
iret
das
lds
fldln2
jmp
aaa
xor
into
cmp
in
out
aam
rcl
ds
repz
addl
in
lock
add
shr
xchg
shl
cld
in
loopne
repz
shrb
xor
xlat
iret
out
xor
std
in
rcr
out
shr
cmp
inc
lret
add
in
loope
call
ret
lret
ljmp
clc
fdiv
rorb
mov
xchg
aam
hlt
les
leave
ss
call
testb
mov
addb
shl
iret
out
sti
in
std
jecxz
loope
in
out
fcmovnb
test
mov
neg
in
cli
mov
lret
in
ljmp
inc
or
dec
or
sahf
add
add
iret
leave
ret
int
xor
je
test
dec
ss
addb
jl
test
shl
loopne
in
loop
mov
repnz
cmp
rcr
jmp
fsubr
rol
adc
hlt
loop
in
leave
sti
sti
out
lock
loop,pn
fldln2
aad
xor
in
in
fninit
rolb
cmp
in
jmp
in
in
ret
xor
cli
aaa
ror
repnz
cli
in
int
ret
in
in
sti
mov
lret
mov
xchg
in
repz
int
shl
out
out
fmul
cmp
sti
rcr
rolb
sub
in
xchg
icebp
iret
lret
xchg
xchg
aam
lret
rcl
aaa
aam
ljmp
mul
lret
in
sti
addl
xor
xor
fnstcw
fucomip
cmp
mov
loop
fisttpl
jmp
cli
in
idiv
repz
leave
sti
xor
into
lret
aad
sbb
addb
filds
ret
int3
lret
rcl
fdivrs
xor
add
in
clc
test
enter
sti
loop
std
loope
lock
leave
xor
cli
sar
jmp
xor
cmp
cmc
rol
fucom
mov
mov
in
xor
fidivrl
cmp
fdivr
fst
cmp
shr
lock
ljmp
hlt
cmp
icebp
rcr
std
mov
loopne
mov
icebp
ret
divl
vpsubb
int3
aaa
ljmp
idiv
stc
in
out
loop
nop
in
mov
ss
cmc
sar
ljmp
loop
rorb
out
fucomp
mov
hlt
xor
jmp
repz
cld
lock
fdivr
ret
ds
fsub
sar
cli
fdiv
loope
loope
mov
shrl
call
out
in
int
xlat
icebp
hlt
loop
test
loopne
lret
test
iret
xchg
int
enter
leave
xor
shl
xlat
and
test
out
test
lret
xchg
loop
les
shl
repz
aam
stc
in
loope,pt
out
stc
stc
aas
sub
xchg
testb
shl
int3
call
cli
in
xlat
out
shl
ds
cld
xchg
mov
mov
xchg
aad
out
out
iret
ror
iret
std
in
jmp
ljmp
jmp
mov
in
jecxz
test
call
imul
ret
rcl
xor
hlt
in
repnz
out
int
mov
into
sar
out
aaa
call
cmp
fnstcw
shl
test
sar
loop
hlt
out
xchg
in
out
icebp
shl
aad
ror
xor
shl
ds
cmp
cmp
into
in
cld
sar
fucomi
clc
fsubr
out
loopne
ljmp
leave
fdivs
out
leave
repnz
ret
cld
cli
fistpll
icebp
std
test
lock
mov
icebp
repz
idiv
icebp
out
repz
xor
clc
loop
test
leave
int
xchg
into
ret
hlt
xor
fucomp
rcr
les
repnz
mov
fdivr
jecxz
out
icebp
out
ror
loop
cmc
aaa
enter
fnstsw
lret
aas
clc
icebp
fcomi
std
fdivrp
aad
sbb
incl
xor
ret
in
out
lret
clc
call
hlt
aas
sar
mov
xchg
in
test
iret
in
cmc
fdivrp
shlb
lret
in
int3
shr
loopne
loop
cli
jmp
sti
iret
ljmp
icebp
sub
rcl
imul
into
fnstsw
enter
cmp
hlt
test
les
cmc
iret
rcl
out
cli
into
divb
sub
jmp
cld
mov
mov
repz
int3
sub
ret
xor
loope
sbb
fcmovnbe
sbb
fsincos
int3
loopne
test
fsubrp
jmp
call
int3
call
aam
cmp
loopne
in
test
popl
repnz
hlt
xlat
sub
fnstenv
stc
out
rcl
ror
repz
jmp
call
ror
icebp
shlb
ljmp
in
out
and
xlat
out
cli
xchg
cli
rorl
xor
rcr
fcmovne
cmp
loopne
imul
xlat
leave
stc
int
fimuls
loope
loop
sub
out
fmul
repz
into
fcom
out
ds
cli
xor
lea
jmp
rcl
int3
iret
rol
shll
or
aam
cmp
jl
xchg
fadd
sti
clc
loop
mov
fdivrs
fxch
fdecstp
ljmp
cli
leave
jmp
leave
clc
ljmp
nop
subb
loop
shl
fldz
jmp
out
shr
sti
ss
les
aam
test
call
into
fisubrs
cmp
ret
cli
lret
fcmovu
in
fdiv
aam
rolb
in
in
xor
rcl
jmp
out
enter
repz
xchg
nop
mov
mov
xor
divb
idivl
aad
fcomip
aas
icebp
stc
std
call
jmp
xchg
shll
repnz
test
xor
xor
imul
stc
out
in
out
fdivrp
ljmp
int3
cmp
repz
in
clc
idiv
enter
test
and
xor
xor
iret
out
aaa
sti
cmp
in
cld
sti
mov
out
jmp
repnz
xchg
ds
xor
fstpt
std
hlt
cmp
sti
aad
fabs
out
out
stc
cmc
aad
adc
xchg
lret
out
repnz
aad
xor
xor
aas
call
idiv
addl
out
in
lret
mov
repnz
jecxz
xlat
call
fucomp
sar
rol
clc
repz
out
mov
out
int
mov
leave
fldln2
sar
cld
fdiv
sti
shr
not
aas
sar
mov
cmp
int
fsubrp
out
mov
ret
shl
aam
leave
cmp
idivl
xlat
adc
aad
out
leave
in
jmp
fsub
in
fadd
fprem
fdiv
lock
repnz
jmp
icebp
ret
aad
in
fcmovne
ljmp
cli
mov
fidivl
iret
cmc
enter
fucomi
xchg
cli
incl
xlat
fstp
shl
int
fcomip
cmp
shl
ret
cld
jmp
loope
ret
icebp
call
ret
shl
lock
iret
fucomi
aad
fcomip
jmp
ror
ror
hlt
cld
lret
aad
clc
in
ljmp
fndisi(8087
cmp
idiv
jecxz
xchg
movl
jmp
lock
out
stc
leave
flds
hlt
rcr
test
lret
xchg
xchg
div
shl
repz
cmc
in
ss
cmp
clc
aaa
cmp
ljmp
iret
repnz
ljmp
fmulp
sar
clc
cmc
jecxz
fisttpl
ljmp
ffreep
xor
xor
into
cmp
clc
in
hlt
fadd
loop
mov
mov
clc
jecxz
aaa
lret
out
incb
repz
out
fadds
iret
mov
xor
cs
repnz
rcl
rcl
clc
icebp
std
rcr
ror
jecxz
mov
into
loopne
iret
std
mov
xor
loope
in
cli
shll
aad
jmp
call
cli
out
xchg
out
sbb
fimuls
shll
lret
in
or
loope
aad
jmp
test
cld
leave
imul
in
shr
cld
lret
sar
ds
xor
ret
incl
nop
xchg
das
loopne
rcl
xlat
not
cmc
sar
cli
cli
icebp
lock
aam
jmp
cli
mov
lret
into
xchg
repz
xor
in
fyl2x
aam
cmp
test
call
sti
decb
jmp
sarl
clc
ljmp
cli
rol
cmp
orb
in
cs
out
hlt
lret
idivl
sbb
rcl
loope
loopne
repz
flds
shr
mov
repz
lret
shl
sarl
hlt
int3
std
in
ret
jecxz
mov
mov
xchg
call
icebp
ds
mov
ljmp
shl
cmp
std
in
xchg
fistl
shr
aad
lret
fcomp
in
repnz
rcr
out
test
jmp
test
lock
xchg
xchg
in
icebp
ss
xor
inc
incb
int
out
loope
rcl
jmp
int3
out
cmc
xor
fst
addl
xor
sub
mov
movzwl
cmp
jmp
lret
rcr
int
orb
inc
pop
and
jl
addb
jl
int
loope
shl
rol
call
xor
loop
loopne
cli
cli
cmp
iret
lea
rcl
xor
xor
xor
cli
cld
test
loope
cmc
shl
loopne
fcoml
std
out
xor
cmc
sti
std
lret
aaa
fxch
into
cmp
cmp
clc
int3
shr
icebp
in
lock
icebp
int3
hlt
lret
xor
hlt
loope
out
cli
shl
mov
dec
lds
xor
cmp
imul
aam
cld
out
cmp
test
fld
iret
or
out
loopne
ljmp
lret
icebp
roll
in
fiadds
repnz
fldpi
fdivr
call
cmc
xor
fstpt
fadd
mul
test
xchg
mov
lret
fucomi
aas
loope
neg
hlt
cmp
sar
cmp
jecxz
aam
addb
call
xor
cmp
vpmaddwd
cli
enter
stc
cmp
jmp
lock
xchg
xchg
xchg
sub
lret
int
std
repnz
cmp
out
rcr
out
lock
shl
std
out
orb
out
fld
not
jmp
rcl
adc
in
ds
test
push
repz
in
call
fcmovne
rcr
out
loope
out
lret
in
jecxz
lret
out
iret
fmulp
int
loope
aaa
shl
int3
jmp
icebp
out
into
fnstsw
fcmovbe
rcr
mov
xchg
cli
repnz
cmc
out
cmc
xor
enter
shr
cmp
sar
std
ret
addl
iret
xor
int3
fdivrl
cmp
cmp
xor
loope
loopne
cld
leave
int
rcr
xor
imul
ret
in
cld
xor
shr
fsubp
aam
mov
mov
fcmove
stc
xchg
leave
addl
out
repnz
test
sbb
std
test
cli
jmp
loopne
mov
mov
imul
shr
cmc
iret
sti
cld
fsubr
icebp
fcom
mul
stc
enter
inc
int
mov
repz
enter
out
cmc
fdivrs
icebp
fcmovbe
iret
loope
testl
xchg
jmp
int3
xlat
sar
sar
sar
stc
xor
jecxz
jmp
fcomp
mov
mov
jecxz
xchg
ret
loopne
out
int
div
cmp
aas
aad
aam
ret
mov
ljmp
out
lret
rol
lret
rcl
aam
sarl
rcl
stc
cli
sbb
loop
icebp
cmc
out
ret
jmp
jmp
std
out
loopne
lock
mul
push
mov
sub
mov
iret
mov
cmc
lret
repnz
cmp
call
ret
test
jecxz
lret
lret
lret
std
loop
mov
stc
divl
clc
xor
ror
xlat
lock
movb
fdivr
xchg
in
mov
loopne
mul
xlat
aaa
das
cs
loope
enter
idiv
test
les
mov
orb
aam
imul
in
fcomi
cmpl
fld
xchg
test
int
test
xor
in
out
out
int
enter
sbb
leave
xlat
sti
imul
fildl
loopne
xor
lock
xor
loopne
std
and
sti
std
xlat
fstp
idiv
mov
in
in
shll
jmp
rcr
cli
icebp
aad
fst
leave
addb
aam
lret
test
cmp
jmp
ret
lock
mov
lret
mov
std
std
iret
icebp
xchg
mov
lret
iret
in
int3
cmpl
repz
lds
enter
lret
xchg
out
test
shl
fcomp
out
clc
in
clc
call
stc
imul
sti
jecxz
mov
xchg
xchg
ror
aam
sar
xor
in
ror
enter
out
ret
jecxz
and
mov
mov
fmulp
leave
out
in
xor
in
aam
aad
jecxz
fucomp
fcmovu
shl
stc
jmp
call
or
in
ljmp
call
sti
mov
sub
fiaddl
mov
dec
cld
jg
xor
sub
jmp
rcl
rcr
fcmovbe
xlat
ja
inc
mov
fadd
jl
addb
jl
out
hlt
cmp
test
icebp
loope
in
repz
mov
ljmp
loop
aaa
int3
ret
repnz
fdivrl
xor
test
fmuls
test
in
roll
xor
cmp
ss
icebp
int
ret
fxch
mov
xlat
or
orl
div
cmc
fucomip
rol
cmc
out
repz
stc
cld
ffree
in
fcomp
adcl
std
shr
sar
out
sbb
repnz
cmpb
xchg
rolb
out
jmp
cmp
out
stc
div
in
xchg
lret
loop
cmc
cld
sub
xor
in
xor
aad
fst
adc
lea
out
and
shl
xchg
and
aaa
aad
sub
jmp
xlat
into
sar
filds
in
mov
dec
sub
fiadds
in
ror
in
cmp
fcmovb
ss
jecxz
mov
lea
lret
mov
jmp
cs
in
xlat
xlat
cmp
ret
clc
clc
out
fucom
inc
out
int
out
jmp
cmc
repnz
xor
std
xor
iret
icebp
out
repnz
jecxz
test
orb
rcl
aaa
lret
fsubrp
shl
div
loopne
loope
loop
pop
jecxz
in
in
lea
shl
icebp
into
cmc
icebp
repnz
stc
shl
in
rcr
into
in
rcr
in
aaa
cmp
hlt
fdiv
aas
cmpl
idiv
repz
jmp
int
out
int3
xchg
jecxz
lret
in
xor
rol
fincstp
aas
sarb
jmp
xchg
xchg
xchg
mov
xor
xor
fisubrl
lret
cli
fnstenv
jmp
in
in
cmc
out
sti
fdivrs
in
mov
icebp
aaa
cmc
ret
cmp
into
aas
xor
lock
repnz
in
or
in
lea
imul
xor
in
xor
xlat
cmp
xor
mov
and
test
in
out
mov
iret
sub
aad
cmp
clc
cmp
ret
ds
testl
cmp
xor
rcr
int3
lret
cmc
into
shl
jmp
out
loope
xchg
in
shl
in
das
loopne
cmp
hlt
in
cmp
out
lret
aad
fcom
repz
mov
testb
orl
out
fcom
aam
cmp
ss
test
out
ror
mov
into
shl
xor
shll
jmp
enter
call
addb
mov
cld
lock
fucomp
jmp
fcmovne
call
rcl
adc
loop
mov
lea
rcl
fidivs
cli
std
add
loope
cli
sti
test
std
mov
icebp
mov
call
cli
repnz
aad
cld
and
push
lret
lret
loop
icebp
sub
ret
shl
ret
cmp
add
cmp
ljmp
roll
hlt
cmc
in
xor
fcomp
aaa
call
iret
cmp
cli
loop
shl
loope
xlat
mov
nop
in
iret
test
xlat
in
adc
roll
clc
orb
ret
out
cmc
leave
std
not
rcl
cmp
fyl2x
cmp
cmc
cld
in
clc
in
out
cld
int3
cli
fucomip
hlt
repnz
shr
lock
sti
fstpt
cmp
loopne
mov
shr
in
lret
xlat
call
ljmp
ds
aad
call
xchg
xchg
in
in
ret
cld
aam
into
jecxz
sbb
in
in
ljmp
iret
in
iret
sub
out
fldpi
lret
xor
iret
rcr
hlt
out
loopne
loopne
lret
xchg
loop
int
sar
clc
rcl
in
cmc
cli
cmp
rol
fucomip
jmp
fiadds
ljmp
ror
icebp
enter
int
ret
lock
mov
out
cli
sbb
ljmp
shrl
iret
mov
jmp
jmp
rcl
rol
fstp
pusha
add
enter
add
frndint
out
dec
std
cmp
roll
sbb
xchg
and
out
jmp
out
jecxz
xor
out
into
aad
iret
iret
cli
sarl
shr
or
fmulp
test
ljmp
lret
icebp
rolb
in
call
in
aam
xor
fcom
aad
cli
fcomip
aas
rolb
aam
test
jmp
xor
ret
iret
iret
std
cmc
fmulp
cmpl
xchg
div
jecxz
fcmovnb
ljmp
xor
lret
ror
shl
cmp
xlat
xor
loope
aaa
roll
fneni(8087
sub
xchg
loope
shll
sub
leave
out
fmul
lock
cmp
aam
testl
call
lret
mul
in
sub
dec
cmp
test
repnz
ds
test
xchg
shl
hlt
fsubrp
repnz
clc
xor
aam
cmp
fstp
idiv
loope
imul
std
in
fcmovnbe
std
lret
cs
div
sti
iret
sarl
ret
ds
ljmp
cld
nop
in
rol
loopne
aam
enter
fdivr
fdivl
fabs
mov
repnz
ljmp
cmc
in
in
in
hlt
in
cmp
enter
fsubrp
into
iret
mul
aad
hlt
ljmp
fdivp
jmp
out
rcl
clc
xor
idivb
cmc
hlt
clc
repnz
test
ret
aam
xchg
fdivp
mov
xlat
cmp
std
int
aad
mul
repz
mov
leave
in
xchg
lret
fisubrs
sub
icebp
int
fstp
xor
out
aas
fadd
mov
ds
mov
call
lret
in
repnz
icebp
xlat
clc
loop
jecxz
loopne,pt
repz
lock
out
sub
out
xor
aas
rcl
loope
aam
fucom
cld
rolb
xchg
nop
ljmp
xlat
int3
xor
lret
sar
ret
call
fadds
sti
enter
jmp
out
shr
cmp
xor
icebp
sarl
cmp
hlt
repnz
fucom
and
in
fmuls
nop
add
ljmp
cmp
cmc
aas
cmc
cmp
lock
hlt
jecxz
testl
rcl
xlat
in
fsubr
xor
in
cmp
test
loope
jecxz
rolb
mov
jmp
test
ror
cmc
out
clc
fadd
fsubr
jmp
lock
fnstsw
fcomp
adc
out
jecxz
nop
mov
cs
xor
jmp
or
stc
hlt
ret
jmp
fxam
mov
xchg
ss
shr
jmp
test
repz
mov
jmp
incl
loop
icebp
lret
leave
les
aad
fcomip
out
ret
and
in
fucomip
fldl
int
bnd
ret
into
fmul
loope
call
sub
cli
aad
shl
hlt
icebp
xlat
ds
hlt
ds
fsub
repnz
and
mov
sub
out
lds
std
ljmp
out
faddl
leave
cmp
test
out
ror
call
lock
xor
in
cmp
cld
fidivrl
sar
jmp
mov
nop
leave
in
push
dec
aad
in
lret
aaa
repz
roll
jecxz
stc
cmc
out
out
in
in
xchg
xor
cli
ror
in
fcomp
int
cmp
loope
in
lret
in
cli
cld
in
jmp
sub
in
aaa
xlat
out
leave
ss
rcr
addb
mov
out
ljmp
sti
leave
fnstenv
sar
sarl
cmc
test
rcl
cmpb
sti
mul
call
cmp
in
xor
repz
out
aaa
rcr
loop
fidivrl
out
fdivp
cmc
xchg
mov
loop
ljmp
sti
repz
out
repnz
sti
icebp
div
sti
stc
out
std
fcmovu
in
out
ljmp
lret
xor
rcr
cli
sbb
in
loop
call
lret
xchg
les
out
cmp
in
aas
jecxz
lea
mov
jmp
mov
lret
fnstenv
bound
jl
add
sar
fsub
xchg
neg
loopne
fstp
out
icebp
sub
xor
hlt
in
jmp
icebp
flds
leave
fadd
stc
in
enter
xchg
xor
mov
jmp
icebp
fcmovnb
sar
ret
xlat
xchg
xchg
out
jmp
into
clc
ss
cmp
cmp
addb
mov
xchg
in
ljmp
cmp
cmp
fsubr
loop
xchg
mov
mov
dec
nop
loope
sub
lock
f2xm1
leave
cmp
fsub
rcl
out
fcomip
aad
test
shl
std
sar
into
xchg
xor
aam
idiv
call
out
test
hlt
cmc
sbb
jmp
mov
out
loopne
repz
out
xor
ljmp
repnz
cli
into
jecxz
neg
out
call
shl
out
out
out
das
ss
clc
rol
hlt
clc
std
idiv
out
cli
aam
lret
fisttps
cmp
lock
enter
ljmp
cmp
fsubr
cld
sub
int
cmp
out
ss
fxch
repnz
ret
sar
fldl
jecxz
cmc
out
ljmp
loope
in
fcomp
leave
out
lret
into
enter
repz
icebp
clc
lret
into
stc
cmp
shlb
cmp
test
hlt
aas
hlt
cmp
jecxz
jecxz
rorl
aad
shl
fadd
cmp
icebp
rcl
fimull
fisttpl
out
into
xor
in
loopne
sarl
cmp
ss
test
fld
cli
lret
fdivrl
in
out
into
int
lret
not
aam
ss
shl
aad
xrelease
mov
das
jmp
cmc
fidivs
jmp
hlt
xor
rolb
xchg
test
mov
idivl
idiv
in
int
and
sti
test
fsubp
mov
aad
test
out
out
rcl
hlt
cmp
and
repnz
lret
mov
enter
fiadds
repz
fidivl
aaa
cld
dec
leave
sti
cmp
int3
ret
call
mov
fiadds
xlat
out
in
aam
out
cmc
ds
fsubrp
fiaddl
sbb
in
jmp
nop
sbb
les
fcomi
jmp
sti
xlat
out
ljmp
cld
test
fucomip
in
out
int3
lret
cld
cmc
out
xor
rcl
cmp
in
sti
lock
aad
xchg
ds
xchg
orb
shl
lret
lret
out
cld
rcl
fucomi
ljmp
clc
rcr
enter
loop
decl
cmp
loope
push
cmp
shl
sar
cmp
mov
fxch
jmp
shll
aam
into
jmp
lock
out
ret
stc
flds
out
in
mov
test
ljmp
cmp
neg
aas
loope
in
rcl
cld
ds
xchg
mov
cld
xchg
cmc
int3
xor
xor
fcmovu
enter
lock
jecxz
lock
out
loopne
fdivrp
std
or
loopne
repnz
lock
aaa
test
cld
fadd
aam
call
mov
sti
test
fcoml
ret
out
int3
cmp
hlt
int
clc
ret
filds
lret
leave
int
out
iret
into
cld
repnz
lock
leave
out
in
int3
repnz
in
cld
lret
cld
out
xchg
addl
fidivs
aad
repz
cmp
shr
cmp
loope
aas
inc
mov
testl
test
das
lret
out
lock
sti
lret
xor
loope
cmp
clc
shl
mov
cld
call
xchg
loop
lret
cmp
aam
cs
leave
into
jmp
aas
repnz
ret
in
clc
xchg
int3
loope
enter
into
in
repz
ss
fistpll
xor
jmp
not
mov
sar
aaa
sub
shll
cmp
leave
fadds
rcr
in
ror
mov
lret
call
loop
sub
leave
out
out
icebp
hlt
int
loope
iret
iret
out
mov
cmp
je
mov
jmp
ror
lret
int
loopne
and
outsb
sarl
add
fcmovbe
loopne
mov
xchg
in
jecxz
in
idiv
lret
aam
in
enter
clc
ss
clc
xlat
add
testl
jecxz
clc
aaa
jmp
sti
int
into
in
and
cli
repz
mov
mov
in
sti
in
ljmp
add
xchg
fucomp
out
sti
ror
lret
mov
lret
call
loopne
out
rolb
xor
loope
enter
std
shr
int3
int
aam
frstpm(287
imul
idiv
shr
f2xm1
cmp
dec
test
std
nop
ret
lock
sub
out
neg
fstpt
test
fsubp
aad
std
jmp
loope
in
mov
subl
lock
repnz
aad
jmp
loop
aam
sarl
fcmove
fcmovnb
loope
in
frstpm(287
jmp
xor
div
loop
xor
cld
cmpb
loop
enter
into
in
out
out
in
xchg
aam
xor
mov
ror
cmp
fcomip
jmp
ret
lret
jmp
imul
lret
lret
cmp
xlat
cmp
repz
loope
cmp
loopne
xchg
lock
loop
xlat
sti
idiv
xor
fmul
cmp
rcr
sbb
sti
loop
lret
out
leave
cmc
vaddsubpd
stc
cld
fmul
repnz
stc
shl
aad
shl
mov
mov
in
xorl
in
rcl
int
in
fmul
int
stc
fnstcw
incb
test
mov
das
into
out
sarb
xor
std
dec
out
rcl
iret
fildl
loope
cld
sti
dec
test
out
cmp
cmp
in
cmc
in
int
repz
icebp
repz
stc
xlat
out
mov
in
cli
iret
test
sub
xor
cmp
fdivr
test
fdivrl
repnz
cli
add
fdivr
mov
mov
out
ret
out
xor
fstp
cmc
repz
cmc
aas
shl
loop
in
xlat
std
hlt
cld
out
std
shl
cmc
aad
lds
sti
cmp
clc
fcmovnb
jecxz
enter
mov
out
icebp
xchg
in
out
mov
lret
in
cmp
ss
int
out
xor
and
cld
xchg
mov
decb
hlt
stc
int
cmp
repnz
stc
stc
clc
repnz
sbb
jmp
out
in
fdiv
mov
fdivr
aad
clc
aad
jmp
testb
xlat
imul
rcl
cmp
cmp
ss
sarl
aas
dec
nop
fisttps
xor
loop
lock
int
int3
cmp
call
jmp
frstpm(287
mov
lret
sar
sti
in
ljmp
icebp
das
sar
lret
call
addb
xlat
lret
in
out
lret
mov
xor
cli
xlat
test
repnz
mul
shl
aad
int
call
mov
repz
fsub
xor
repz
hlt
test
jecxz
in
fadd
sub
sub
in
sub
into
aaa
ss
clc
aam
mul
in
repz
icebp
jmp
lds
mul
lds
cmp
std
cmc
cmp
cli
fimuls
icebp
fstp
lret
lret
fidivrl
jmp
fst
cli
int3
int3
ret
into
call
clc
clc
int
lock
mov
test
clc
ror
cmp
xor
cmp
in
repnz
jecxz
faddp
cld
out
jmp
xor
fucomp
sbb
out
aam
cld
cli
test
test
fxch
mov
and
jmp
stc
int3
xor
lock
in
rcl
addb
sar
sarl
enter
enter
std
into
out
fcomp
rol
loop
out
mov
repz
nop
xchg
jecxz
lret
fcmovu
fmul
fistpll
jecxz
xor
fcmovnb
orl
jecxz
jmp
xor
cmc
xor
aam
sar
rol
loopne
fcompp
clc
les
addl
loope
enter
jmp
cmp
sti
hlt
rolb
jecxz
jecxz
add
xor
add
jmp
ret
lret
enter
dec
xchg
je
jl
addb
jl
enter
mov
mov
sub
loop
fdivr
cli
cmp
leave
int
fidivrl
cmc
out
fsub
repnz
mov
xchg
in
in
call
mov
fdivrs
repnz
sar
cli
shl
fdivrl
xchg
testb
lret
das
mul
leave
not
enter
cmc
rcl
int
rcl
shl
sar
ljmp
lret
and
enter
lret
testl
call
addb
shl
cmp
cmp
fcomi
cmp
rol
clc
call
out
mov
ret
call
cs
std
sarl
ret
int
roll
loopne
call
sub
xlat
in
out
out
out
ljmp
loope
repnz
addb
mov
std
cmc
out
rcl
jmp
fnsave
in
in
iret
iret
cmc
ret
repz
mov
call
loop
icebp
ljmp
rcl
cmp
in
sti
stc
vcvttpd2dqy
jmp
out
loope
iret
sub
ret
in
iret
enter
shl
rorb
jmp
icebp
call
in
jmp
cmp
int3
out
sar
aas
repz
icebp
leave
clc
aad
test
testb
into
shl
xor
clc
int3
cmp
dec
fdivr
faddp
cli
faddl
std
clc
cld
lret
in
fsub
repnz
shr
aam
cli
xor
lret
shr
aaa
fildl
xchg
out
int
shl
xor
sti
clc
int
in
icebp
sti
out
lock
mov
std
cli
std
in
aad
call
enter
stc
call
mov
clc
mov
lock
fimuls
jmp
aas
into
shl
in
xlat
jecxz
test
and
fimuls
out
xor
loope
sub
out
test
cmp
loope
xlat
cmc
int
fcmovnbe
loope
ror
shl
cs
call
cmp
aad
hlt
loope
ret
rolb
out
xchg
iret
in
in
xor
lock
aas
divl
rcl
int
fcom
and
sbb
repnz
iret
sti
sarb
aad
cmp
rcr
cmc
in
mov
call
xchg
loope
imull
stc
loop
enter
jmp
fcmovnu
sti
and
sbb
ljmp
in
cmc
in
out
loopne
cmp
int
fdivr
mov
in
in
jecxz
ret
int3
shl
icebp
in
shr
rol
call
lret
rolb
stc
cld
jmp
les
fsubr
out
xlat
xlat
iret
iret
idivb
cmc
cmc
cmp
test
jmp
loopne
xchg
xchg
int3
rol
lret
out
repz
hlt
in
fcomp
jecxz
test
lret
fdivr
mov
jmp
das
cld
in
test
iret
lock
fdiv
cmp
lret
ret
nop
jmp
cmc
loopne
jecxz
in
xor
movb
neg
jecxz
mov
in
sbb
loopne
jmp
icebp
test
fcmovne
cli
jmp
aam
sbb
out
fndisi(8087
sar
fcos
cld
fxch
call
in
xor
aaa
in
cmp
fnstsw
call
cld
movl
jmp
loope
xlat
enter
enter
call
call
ret
aas
jmp
int
loopne
call
into
loopne
xor
lret
in
lret
fdivr
rcl
rcl
cld
jmp
loope
in
xchg
sub
das
repnz
aam
call
in
cmp
out
sub
stc
fimuls
out
ret
fcmovnbe
sti
jmp
sar
lret
int
ret
out
xor
std
mov
cs
in
hlt
xor
xlat
cli
jecxz
xlat
fcmovb
and
jecxz
jmp
test
out
leave
shl
xlat
cmc
std
int3
rcr
jmp
int3
fcom
mul
addb
call
in
lock
hlt
xor
cld
cmp
repnz
aad
cmp
repz
fcmovne
stc
mov
jmp
jmp
ret
aad
lret
enter
aad
xlat
jp
jl
addb
jl
repnz
aam
sub
aaa
repnz
xlat
icebp
cmp
out
hlt
loop,pt
test
xchg
in
xchg
jmp
jmp
rcl
rcl
inc
lock
call
loope
fsubrl
lret
repz
out
not
fsincos
out
in
fstp
fucomip
rorl
das
cmp
cmp
int3
icebp
int
hlt
fsub
clc
repz
stc
cld
in
clc
ljmp
xor
test
enter
shr
in
rorb
into
fucomip
loope
xor
cmp
ror
aad
shr
cmp
shr
jmp
fmuls
fdivr
ljmp
out
cld
sub
cld
cli
jecxz
in
stc
stc
fisttpll
loop
in
out
ror
fdiv
repz
xor
cld
and
enter
into
nop
cld
into
icebp
ljmp
shr
out
in
aaa
hlt
sar
call
vpavgb
leave
cli
ret
out
into
out
repz
icebp
lock
loop
ss
clc
ds
repnz
cli
cmp
jmp
divl
rcl
xor
pushl
cmc
loopne
les
rcr
faddl
jmp
iret
int3
jecxz
in
cli
repz
cmp
out
lock
sti
test
ret
jmp
cld
test
fdivp
mov
in
mov
in
call
cli
clc
xor
ds
loop,pt
lock
cmc
addb
mov
cli
out
loopne
out
sti
jecxz
stc
aam
sarb
cmp
in
loopne
xor
cld
in
lret
mov
jecxz
in
sar
xor
xor
jecxz
das
ss
ss
ret
out
loop
fld1
inc
out
int
decl
jmp
cmp
out
stc
int
fxam
shl
mov
sti
xchg
fsubrp
xchg
xor
clc
cs
in
cli
cmp
out
ret
lock
shl
fdivr
leave
out
int3
out
mov
loopne
das
clc
xor
sub
in
in
lret
and
cmpl
adc
mov
icebp
fiadds
xlat
loopne
shl
aam
cmp
sar
repz
cld
cmp
xlat
ret
loop
cli
out
cs
rcr
cli
repnz
cmc
addb
lret
xchg
out
mov
in
shr
hlt
not
enter
out
rol
rorl
test
not
out
out
xor
xor
cmp
int3
clc
addl
fiaddl
add
in
out
std
std
out
std
lret
int3
aad
shl
repnz
rol
in
mov
int
leave
out
hlt
in
shl
ss
aas
ret
cmp
fcomp
xchg
mov
or
lock
fdivp
xor
imull
sti
fnstenv
lret
out
ss
icebp
lock
vpor
int
loop
cld
out
out
out
leave
jmp
iret
iret
jecxz
int3
sar
lock
fiaddl
out
call
out
fidivl
out
aaa
cld
cmp
jecxz
not
loopne
shr
rolb
clc
mov
fiaddl
iret
leave
xor
shl
xor
loopne
iret
fiaddl
ljmp
fimuls
shl
cmp
repnz
in
leave
xlat
fdivrp
fdivp
shl
movl
int
iret
rcl
cmp
sti
fcmove
fcmovnbe
loope
std
out
jecxz
stc
jmp
out
addl
out
jmp
stc
cmp
out
fldpi
mov
fcmovnu
nop
int
loopne
iret
ror
in
xor
call
lock
test
fcmovbe
fstp
jmp
test
out
repnz
hlt
into
xor
cs
idivb
xor
leave
lret
int3
loope
out
rcr
jmp
and
out
lock
xchg
aad
jmp
jmp
aad
aam
shl
fld
cmp
mov
xchg
out
out
out
in
int
cmp
cs
cmp
lock
loop
sar
aad
fadd
cmp
imul
icebp
cld
adcb
divb
ret
cmp
into
fstp
into
iret
lds
push
xchg
xchg
incl
aad
hlt
testl
add
add
rol
rcr
jbe
inc
fsubs
addb
jl
fnstenv
stc
cmp
cmp
repz
shl
enter
int
lret
test
call
cli
int3
rcr
ds
out
lock
iret
aas
xlat
repnz
out
addb
enter
out
stc
shr
fxch
in
sti
jmp
fadd
test
fdivr
fstl
out
iret
xor
ss
cmp
cmp
rcl
in
ffreep
in
out
cld
out
jmp
mov
in
cmc
xor
fbstp
int3
out
xlat
les
mov
iret
fdiv
int
fucomip
test
hlt
fcomp
repnz
std
out
sbb
test
stc
ret
mov
iret
in
fsubr
xchg
jmp
call
rcr
aam
lret
rol
cmp
cmp
lock
std
mov
std
test
sub
enter
lock
cmc
loopne
aas
fildl
testb
call
aam
call
in
aaa
fcmove
icebp
lret
cmp
out
ret
lret
sub
lock
cs
rcr
cmp
fldl
out
repz
mov
iret
mov
repnz
xor
std
cmp
xor
xlat
sti
idivb
icebp
in
mov
enter
shll
cmp
xor
cld
aas
fdivp
std
cmp
in
les
add
out
decb
ret
cli
into
iret
iret
fsub
sti
in
rcl
sar
xchg
ret
jecxz
sub
xchg
mov
imul
xor
aad
hlt
aaa
flds
in
in
addl
jecxz
call
aaa
fxtract
fnstenv
flds
icebp
loop
ret
mov
ret
test
int
xchg
loope
rcl
fdiv
out
jmp
lret
iret
call
jecxz
rol
sti
in
xchg
fidivrs
lds
into
xor
xor
fcmovnbe
loop
xlat
adc
loope
sti
mov
xlat
xor
jmp
cmc
aam
stc
loop
out
xlat
int
std
repnz
rol
std
std
test
ljmp
repz
test
jmp
vshufpd
jecxz
rcr
ret
xchg
ret
test
jecxz
icebp
jmp
ss
lock
imul
fsubr
sarb
clc
aad
jmp
stc
xchg
into
std
mov
fisttps
fdiv
sti
shr
out
fmulp
icebp
in
fsub
loop
aad
loop
mov
lret
fstl
cli
fidivrl
aaa
fucom
iret
ret
aad
fcmovnb
ffree
les
mov
fiadds
in
ror
ror
aaa
in
cmp
out
cmp
xchg
mov
ret
call
loopne
sbb
fcmovne
out
hlt
jmp
shl
roll
jecxz
sar
xchg
int3
jecxz
xor
clc
enter
cmp
jmp
cmp
lock
hlt
fiaddl
mov
addb
lret
lock
aad
in
xor
xlat
flds
ljmp
ret
xchg
iret
repnz
cmc
aam
cmp
rcl
enter
test
lock
cmp
into
dec
lret
xor
fninit
xchg
call
loopne
decb
hlt
shll
in
out
aam
fdivrs
addb
cli
mov
mov
shl
cmc
aam
out
cmp
icebp
ret
jecxz
rol
cli
addb
mov
int3
xor
cmp
cli
xlat
xor
cld
and
stc
lret
loope
sar
in
and
int3
into
lret
lock
fdivr
lock
clc
cmp
mov
test
xlat
loopne
ljmp
cmp
roll
std
loopne
mov
loope
cmp
xor
jmp
cmp
ret
jmp
cli
iret
sti
into
fmul
int
out
lock
shl
iret
cmp
cmp
out
cmp
cld
jmp
or
iret
fcmove
cmp
ljmp
add
mov
out
fdiv
nop
xchg
xor
xor
cmp
je
mov
mov
mov
mov
lea
add
jmp
mov
fcmovnu
jnp
clc
mov
jne
mov
addb
jl
jecxz
neg
cmp
loopne
leave
fildl
in
repz
ss
fcmovnb
xor
fidivrs
shl
out
not
jmp
out
jmp
aaa
into
call
in
ljmp
rolb
addb
mov
mov
aam
icebp
lret
lock
out
mov
loopne
into
nop
jmp
shr
sti
cmp
roll
ror
out
or
sub
test
mov
sub
xor
in
cmp
xor
cli
ror
sar
std
call
enter
mov
xchg
xchg
shl
jmp
jmp
out
fcmovnb
clc
in
stc
mov
fmull
call
addl
int
fucomp
shl
out
jecxz
clc
ljmp
iret
push
stc
out
in
xlat
hlt
clc
repnz
aad
xchg
addl
xchg
in
in
in
idiv
fst
sarb
loop
aam
lret
jmp
fimull
out
xlat
in
cli
ss
xor
hlt
aad
cmp
incl
ret
repz
rcr
out
jmp
xor
xor
xor
cmp
in
iret
clc
test
sub
hlt
jmp
jecxz
jmp
xor
hlt
ret
cmp
ljmp
ror
shl
fsub
fmulp
mov
enter
jmp
xor
cmp
leave
int3
ret
ret
aad
add
jmp
mov
shlb
iret
xor
sub
in
hlt
fdivr
icebp
repz
rorb
int
iret
jmp
repz
mov
rcl
hlt
fildl
lret
mov
xchg
in
lret
sub
icebp
cmp
cmp
fcomi
cli
loopne
mov
les
mov
enter
int3
ds
ss
jmp
fsubr
cmp
rol
and
jmp
ljmp
cmp
cmp
call
int
enter
in
xchg
mov
ss
xor
cmp
hlt
fsubr
shlb
aad
addl
mov
lret
in
loopne
test
imul
idivb
xor
fistpll
cmp
xor
out
incb
fsubr
incb
into
cs
lret
in
into
shl
out
fucomp
cmp
hlt
faddl
fsub
in
out
xchg
rcr
out
bnd
cmp
call
add
mov
fstl
das
aaa
les
cli
rcr
call
test
jmp
mov
enter
orl
leave
fstpt
clc
cmc
out
iret
lock
test
nop
fiadds
xor
int3
lock
lret
cmp
out
out
xor
jmp
fcmovu
lret
hlt
test
enter
std
stc
out
lock
cld
cmp
loope
loope
hlt
aad
in
test
rcr
xchg
out
rcr
aad
aad
into
ljmp
rcr
aad
out
movl
in
repz
rol
xor
int
in
mul
fdivrp
shl
xchg
fmuls
xchg
icebp
iret
in
leave
out
out
test
cld
rcr
ffree
jecxz
rorl
xchg
aaa
sar
xor
out
cmpl
enter
loope
iret
xchg
fdivp
iret
ds
repnz
ret
fsubr
cmp
fnstcw
adc
out
jmp
cmp
mov
out
in
xor
in
cmc
clc
aaa
shr
out
fst
fcom
in
fcmovnu
mov
mov
lret
neg
xchg
jmp
repnz
call
enter
cli
rcl
loop
test
ljmp
cmp
xor
in
lret
cmp
call
cmp
ret
repz
test
fcmovb
loopne
xchg
shl
xchg
xchg
aad
call
ljmp
ror
test
rol
repnz
cld
loopne
int
cmp
ret
std
in
not
not
sar
mov
jmp
int
xlat
int3
int
cmc
or
testb
clc
mov
jl
addb
jl
stc
xchg
repz
call
lret
sti
jmp
das
out
in
imul
ss
fidivrl
fcmovu
repnz
jecxz
fcomip
mov
cli
std
lock
in
out
cld
enter
xorl
aas
fucom
fldl2e
int
in
xchg
lock
in
xor
cmp
fdivp
add
clc
mov
mov
in
in
in
icebp
xor
in
into
xor
jmp
sarl
out
xchg
sub
fdiv
loop
jecxz
xor
stc
in
sti
fsubr
in
fadds
out
fisttps
mov
fndisi(8087
fcmovnu
orb
xor
ror
lock
clc
mov
in
lret
shl
xor
aam
xor
aad
call
fiadds
xchg
cld
or
fmul
test
in
in
jecxz
loop
lret
iret
fdiv
rcl
into
or
hlt
cmc
lret
dec
clc
loopne
out
cmc
xor
jmp
ror
shr
in
shl
aad
out
leave
test
xchg
test
lret
lds
idiv
into
fucomi
aaa
fcos
into
fnstcw
cld
idivl
faddl
clc
les
in
mov
loope
loop
sti
sti
repnz
cmp
clc
fcmovnbe
neg
xlat
loop
in
sub
xchg
in
in
leave
cmp
jmp
cmc
call
fnstcw
jmp
ljmp
mov
cmp
iret
sar
xor
cmc
aas
rcl
stc
stc
loope
mov
addb
in
loop
xor
shl
xor
ljmp
std
fcmovb
jecxz
enter
addb
shl
xor
xlat
loop
cs
shr
lret
roll
fsubr
jmp
sar
mov
rcl
jecxz
repz
aad
out
fnstcw
sub
loope
loop
stc
fdiv
in
rcll
repnz
fucomp
aas
repz
cmp
jecxz
loopne
xlat
fadd
int
lea
test
loop
in
aam
in
in
aas
fdivrp
fmuls
sub
cld
xor
xor
out
fcmovnu
in
cli
aaa
loope
stc
cmp
int3
xor
sbb
xlat
ljmp
xchg
xor
sti
fcmovnu
ljmp
cmp
aas
clc
addl
out
call
stc
out
loop
into
in
icebp
in
int3
fsubr
fcomp
xchg
cmp
int
pop
incl
call
hlt
shr
fcmove
out
in
out
aas
and
out
leave
fldl
xor
xor
ds
sbb
fdivr
cli
aam
or
sub
repz
enter
cmp
out
cli
repz
jmp
sar
shl
cmc
loop
sti
xchg
jmp
std
xchg
call
lret
in
std
xor
icebp
aam
aas
sarb
and
fld
stc
cld
jecxz
loopne
int3
xor
ss
sar
cmp
ss
call
out
icebp
repz
orl
int3
jecxz
sar
repnz
jecxz
fucom
in
sti
add
xchg
xchg
lock
repz
cmp
call
cmp
fucomp
lock
cmc
in
call
xchg
ror
jecxz
in
in
in
in
aaa
aaa
lock
repnz
cmc
test
fstp
repnz
ljmp
repz
in
mov
test
repz
into
clc
cmp
aas
lret
ror
cld
fsub
aad
lret
in
out
fldl
jecxz
int
xor
ret
in
xlat
repnz
in
lret
out
shr
stc
into
shrl
cld
in
fcmovu
sti
sar
rol
mov
mov
xchg
subb
xlat
rcr
rol
out
out
sarb
test
fadd
repnz
mov
cmp
int3
fnstcw
loope
adc
fnop
rolb
addl
hlt
ds
out
leave
xor
cmc
jmp
into
test
jecxz
test
filds
call
aam
cmp
xor
lds
cmp
loope
ds
ffree
lea
mov
mov
xor
add
mov
mov
mov
xor
jmp
leave
aam
fld
fpatan
cwtl
jp
aad
test
adc
jl
addb
jl
std
fcmove
nop
call
loopne
leave
repnz
shll
cli
cld
clc
cmc
out
movb
fists
test
xor
xor
cld
int3
ljmp
rol
ret
orb
aad
out
repz
icebp
out
int3
cli
sti
aad
test
jmp
cmc
int
incb
cld
loopne
out
in
sti
lock
stc
xlat
into
repz
stc
loope
jmp
faddl
rcr
out
incl
clc
std
std
cmp
jmp
loop
loopne
xchg
lret
jmp
vpminub
aas
fdivp
rcl
adc
sti
ret
fucompp
jmp
adcl
in
cmc
xlat
out
jmp
repz
fcmovnb
ds
shl
in
sti
out
cmp
in
jmp
out
rcl
fdiv
cmp
sbb
fadd
aam
cmp
mov
loope
jecxz
shll
call
cmp
ret
in
cmp
adc
out
in
std
clc
std
out
lret
ret
lret
int3
hlt
stc
in
rcr
repz
xor
sti
loope
out
iret
hlt
out
enter
cmc
neg
cli
int3
sarb
out
test
fdivr
jmp
jecxz
xor
decl
hlt
ljmp
adc
out
jecxz
decl
cld
mov
lock
loop
fnstenv
xor
cmp
fstpt
hlt
faddl
fiaddl
fsub
mov
lock
stc
ret
in
iret
std
jmp
xlat
enter
icebp
mov
cld
les
lret
repz
fdivrs
into
xor
ds
leave
test
cld
fcoml
ret
lret
cmp
fdiv
xor
std
xor
cli
loopne
xchg
call
cli
out
aas
flds
loopne
hlt
loop
out
xchg
loope
cld
cmc
sub
fxam
cmp
test
ret
sti
test
sti
in
lea
hlt
out
enter
cmp
cli
dec
ds
idivl
out
in
mov
mov
aam
out
xor
fdivp
repz
inc
std
in
jmp
aad
jecxz
out
cmp
cli
into
shr
cli
in
cmp
std
sbb
into
in
vpaddsw
loope
jmp
sar
ss
xor
aad
cmc
repnz
fcmovnu
cli
in
out
mov
nop
xchg
das
cmc
loop
sar
shlb
jmp
sarb
xlat
shl
test
mov
std
call
cmp
xor
loope
lock
stc
in
fstpt
cmc
xchg
cld
call
out
ljmp
out
divl
cmp
ljmp
cmp
xchg
jmp
loope
in
fld
std
aad
divl
repnz
cmc
lock
in
lds
jmp
xchg
loope
leave
aad
in
lret
sti
jmp
aas
ljmp
hlt
shl
fucom
lret
nop
rcl
lds
les
jmp
into
ss
cmpl
hlt
std
sbb
stc
fsub
fsub
cld
test
ljmp
lock
sti
ds
addb
xchg
nop
fsubrp
repnz
call
ror
sti
cmp
in
ds
sar
ljmp
xchg
test
xlat
xor
enter
sti
sti
enter
into
aad
test
cli
cld
clc
mov
testl
stc
xor
idiv
cld
loopne
repnz
out
ret
std
xlat
hlt
hlt
jmp
mov
jmp
loop
in
sarb
enter
jecxz
ds
cli
loope
loopne
call
lret
xchg
xchg
xor
in
xor
enter
fdiv
repnz
sti
test
test
jmp
fcmovb
fisttpll
xchg
icebp
in
loop
xor
in
aam
rcr
rol
lock
loop
fchs
test
mov
cmc
xor
out
in
hlt
cmp
out
xlat
fidivrs
repz
clc
lea
out
jmp
ror
int
fcmove
mov
push
int3
inc
iret
cs
repz
addb
jl
out
mov
repz
rcr
jmp
ljmp
xchg
loope
sti
icebp
loop
call
lock
cmp
aaa
leave
out
icebp
call
out
cli
roll
sub
out
xchg
loopne
lret
loope
ret
sub
lret
xlat
sti
ror
test
fdivr
rcl
in
loope
std
icebp
into
fadd
fadd
out
stc
lds
repnz
sarl
in
cmp
call
fmuls
sub
clc
call
fdiv
in
lret
aam
cmp
shl
inc
filds
in
mov
lock
rcl
xor
sarl
cmp
iret
in
hlt
mov
and
loope
int3
xor
ret
fsubr
cmp
fcomp
aam
jecxz
repnz
hlt
int3
mov
repz
jecxz
iret
out
fcmovbe
test
out
cmp
aas
cld
test
ljmp
fldl
into
int
repnz
xlat
icebp
xor
aaa
fdivp
shr
shl
out
loopne
in
or
in
shl
jmp
aaa
rol
out
test
ljmp
xlat
ret
cmp
xchg
movb
sarl
sub
loop
lret
lret
xlat
into
cli
ret
xchg
repnz
add
mov
lock
jmp
in
loop
hlt
repnz
stc
sti
fxch
aam
out
fiaddl
in
cld
out
sub
aam
cmc
lock
int
loope
cmp
idiv
lret
fcompp
out
int3
out
jecxz
in
shl
ret
leave
stc
jmp
out
lret
lock
loop
clc
aam
in
jmp
loopne
jmp
xor
imul
aaa
xor
fildl
xlat
test
cmpl
adc
lret
in
shr
in
std
int3
cmp
loope
aam
iret
test
jmp
adcb
rcl
shl
into
aaa
cmp
xor
sti
out
jecxz
fadds
or
xchg
int3
cli
xchg
ror
iret
iret
iret
shl
lret
fldln2
loopne,pt
xor
rol
repz
int
mul
jmp
leave
ds
div
into
cmc
aaa
sar
repnz
int
out
rcr
in
cmp
mov
mov
ds
jecxz
iret
out
int3
fcomp
clc
stc
rcl
xchg
lock
loope
loop
call
fsub
xor
aaa
leave
rcr
lret
loopne
roll
jmp
fisttps
xchg
fcomip
loopne
rcr
enter
cmp
int
lret
addl
out
flds
into
sub
out
in
enter
loope
and
fcom
roll
hlt
xlat
stc
mov
sub
fpatan
in
xor
rcr
faddl
fisttpl
repz
repz
cmp
not
ljmp
in
xchg
test
jmp
ljmp
ret
cli
xor
loope
std
ror
cli
aas
jmp
orb
iret
in
ret
iret
iret
cli
hlt
lret
fdivrp
test
aam
into
test
mov
std
fiadds
loop
das
ret
xor
fcmovu
aas
repnz
cmp
in
ss
cmc
out
stc
and
xchg
cli
in
test
rcr
xor
aam
fcomip
ds
iret
out
cli
jecxz
cmp
cld
mov
in
loope
out
lret
leave
rol
repnz
fdivr
out
hlt
lds
and
test
in
sti
xor
cmp
leave
out
repnz
fsubp
stc
test
in
fsubr
ljmp
xor
repnz
cmp
cld
aas
repz
add
fcoml
decb
cli
aam
icebp
out
fidivrl
xlat
fneni(8087
sar
mov
loope
sub
jmp
fcomip
xor
loop
fdivp
xchg
sti
loopne
test
in
lret
shl
ljmp
in
cmp
out
idiv
fadds
fcomi
incb
mov
mov
call
ljmp
rcl
fmul
clc
inc
incl
enter
and
ljmp
and
clc
jmp
xlat
ror
ror
xlat
fisttpl
lock
xor
aad
idivb
add
xor
cmp
aas
repz
std
call
icebp
mov
sti
call
mov
loope
fsubr
imul
leave
icebp
out
sarl
fldl
stc
out
rol
out
test
call
in
out
loop
in
cmc
iret
hlt
enter
cmp
out
out
test
out
and
fdivrp
fdivr
divl
fdivr
repz
fld
cmp
loope
std
mov
call
ret
cmp
std
and
fiadds
repnz
fcmovu
mov
in
mov
int3
xor
cmp
enter
loope
loop
out
sub
xor
stc
xlat
xor
shl
icebp
cmc
sar
cld
in
int
xor
fucomip
repnz
jmp
cli
cmp
flds
into
ret
out
out
std
clc
jecxz
out
out
fists
lret
xor
aad
int
cmp
out
leave
repz
ds
sti
stc
into
ffree
cld
fsub
call
aaa
out
enter
cli
test
addl
out
out
nop
loop,pn
xlat
fsubr
rcr
jmp
addb
jmp
fadds
cld
jmp
aam
aad
aam
int3
lret
cld
stc
in
aam
fsubp
hlt
cld
ds
xchg
lock
icebp
leave
fcomi
shl
ror
or
ret
shl
ror
loop
aam
mov
out
and
leave
cmc
cmc
in
cmc
out
cmp
out
std
enter
ret
fdiv
incb
les
out
shl
xor
out
loop
cmp
icebp
jmp
out
cmp
and
lret
xchg
loopne
rol
jecxz
clc
cmp
fucomip
repz
xlat
cmp
sarb
shr
sub
ret
fiaddl
aam
out
ljmp
aas
sub
cmp
ret
loop
mov
fisttpl
jmp
int3
out
xor
aas
dec
sti
fnstcw
div
addl
repz
loop
call
lret
testl
into
sar
into
xchg
in
rcl
xor
aad
cmp
loope,pt
clc
repnz
loopne
mov
jmp
fisttps
out
int3
xor
sti
enter
aas
fcomp
fninit
fmul
lea
mov
xlat
ror
not
aaa
cmp
aaa
ljmp
jmp
stc
lret
in
sub
test
sarb
loopne
cld
and
fmulp
sbb
fst
xchg
rorb
xor
out
in
rcr
cld
cmp
adc
cli
lret
test
shl
shr
fcmovnbe
mul
fnstsw
cmp
or
fidivrl
roll
in
enter
enter
cmc
shl
neg
xor
fnsave
test
xlat
repnz
in
neg
jmp
inc
int
rorb
aad
shl
aad
cmp
aam
fdivr
in
incl
xlat
loopne
adc
out
xor
out
repz
enter
ret
out
jmp
jmp
decl
in
iret
jecxz
rol
xor
std
addl
jmp
ret
xchg
mov
in
ffreep
out
fsubr
lret
jecxz
int
loop
rolb
out
cld
int3
fsubrp
loop
test
ljmp
div
cmp
xchg
lret
xchg
mov
loope
sarb
lret
out
fcom
cmp
rcr
fcomi
out
sti
faddp
in
xchg
lret
cld
leave
xlat
jmp
fcomp
shl
push
xlat
out
fcmovnu
fisttpl
xchg
mov
icebp
aaa
int
xor
cmc
clc
out
lock
in
int3
fimull
loopne
lret
into
loope
into
xor
jmp
in
cmp
aam
aas
clc
mov
fmulp
cmc
loope
ss
sar
aad
out
ljmp
fprem1
lret
in
or
xchg
lret
rcl
call
sarl
mov
add
mov
jmp
leave
iret
xlat
rcr
flds
cwtl
pop
dec
nop
call
jl
addb
jl
faddl
cld
loope
neg
out
loop
sti
in
xchg
loopne
les
hlt
fidivrl
out
out
roll
testl
sbb
out
repz
into
lock
cmp
enter
int
rcl
xchg
out
jmp
add
test
rcl
idivl
stc
ljmp
fmulp
cld
fmul
fnstsw
orb
repz
repz
repz
lock
clc
mov
cld
shl
out
out
xor
cmp
out
cmp
idivb
cmpl
testb
sar
loope
xchg
mov
ret
call
aam
xor
clc
aad
xlat
std
xlat
clc
adc
call
in
enter
cmc
cmp
fcmovu
fdivp
loop
fmul
stc
add
enter
call
shr
leave
rcr
fsubrp
ret
lret
idiv
test
int3
loop
movb
xlat
aad
repz
ljmp
test
jmp
test
icebp
enter
sarb
repz
out
loop
xchg
fcmovu
loop
cmc
repz
ror
ret
ljmp
shl
in
addb
mov
hlt
cmp
sub
xor
cmp
cmp
sarl
fildl
int
clc
loop
mov
lock
neg
into
call
into
xor
clc
inc
std
call
test
enter
hlt
cmc
in
ror
std
clc
repnz
shr
icebp
std
aam
ret
cli
bnd
int3
loopne
in
xor
fcmovb
aam
lock
aam
out
cmc
xchg
sbb
mov
ss
shl
repz
cld
xchg
xchg
ss
ljmp
clc
cmp
out
std
sub
cli
fsubp
in
mov
xlat
in
sub
out
lock
cmp
ljmp
loop
cmp
call
shr
xchg
loopne
fyl2xp1
idiv
shll
cli
rcr
lret
ret
sarb
les
mov
jecxz
ret
in
idiv
fld
cmc
fistpll
rol
stc
mov
in
xchg
jmp
out
repz
xor
out
shlb
out
int3
loopne
loope
neg
into
sar
aam
stc
mov
test
jmp
leave
rcl
idiv
stc
lret
out
cmp
fmuls
fistl
mov
xlat
in
fldpi
fcmovne
repnz
xlat
fiadds
clc
jmp
lret
mov
jmp
call
sti
in
jmp
rolb
inc
shl
mov
decb
into
icebp
fucomp
into
jmp
call
cld
fdivrl
sarl
ror
stc
fsub
cli
loop
int3
rol
iret
ret
cmp
ljmp
loope
jmp
adcl
cs
std
xor
clc
repz
ret
ds
faddl
in
xchg
mov
int3
ret
jmp
cmc
rcr
jmp
rol
out
cmp
ret
out
lret
fildl
xor
stc
lock
cmp
cld
xor
cmp
cmp
cmc
call
nop
call
aam
shl
out
xlat
aas
icebp
fdivp
fcmovnbe
iret
rolb
cld
jecxz
sub
iret
into
xor
call
out
cmp
cli
hlt
loopne
std
cld
std
hlt
cmc
jmp
les
mov
mov
in
clc
ret
sub
in
iret
test
sbb
fdivrp
sar
shl
decb
lock
mov
loopne,pt
cmc
repnz
cmp
ljmp
cmp
out
sti
cld
mov
lret
hlt
into
sub
into
lret
ljmp
ljmp
loope
jecxz
stc
enter
in
les
mov
rcr
call
clc
fucom
cld
sbb
loopne
mov
xchg
cld
jmp
les
ss
fcmove
ret
loopne
sahf
add
add
leave
int
int
int
mov
aam
lock
cmpl
xchg
xchg
mov
cli
fcmovne
out
or
aam
into
cmp
xor
cli
mul
test
shr
idiv
cld
fucomp
jecxz
nop
std
mov
xchg
les
repnz
sub
sarb
hlt
rcr
stc
fmul
fiaddl
lea
jecxz
das
lds
jmp
sti
fdivr
rcr
out
rolb
xor
loope
out
test
fucom
int
repnz
clc
fmul
div
hlt
in
cmp
aas
rcl
shl
aam
shl
fists
ror
rcl
in
iret
cs
in
icebp
and
jecxz
test
enter
ljmp
ret
lret
iret
cmp
fucom
incl
mov
int
xchg
idivl
aaa
xor
out
div
xor
fdivr
out
adc
jmp
mov
ret
cld
icebp
cld
nop
loope
repnz
stc
shr
int
rcl
cld
icebp
stc
xor
rol
test
faddp
mov
lock
aaa
clc
not
fdivrl
cld
cmc
ffree
test
xchg
ljmp
nop
cld
iret
sub
cs
sti
stc
xor
in
rcr
int3
loopne
in
out
xor
out
fld
xchg
stc
out
sar
rolb
idiv
fdiv
stc
repnz
fucom
into
fdiv
repz
mov
xchg
xchg
adc
lret
xor
in
rcl
leave
ss
loope
aam
in
filds
leave
mov
call
les
cmc
fst
cmc
sti
loope
out
rolb
les
repnz
sub
iret
std
cmp
fcmovnb
cmp
icebp
rcr
neg
jmp
xchg
cli
fstp
in
lret
ljmp
cmp
aas
in
cmc
sbb
loopne
fdiv
fisttpll
shr
std
call
xlat
aam
ss
lock
rolb
mov
and
lret
in
xchg
roll
stc
repz
in
call
incl
faddp
test
loop
jmp
nop
xchg
clc
out
in
jmp
int3
into
repnz
jmp
lret
mov
std
repz
stc
xor
aad
enter
rcr
imul
clc
fndisi(8087
aad
fmul
fdivr
enter
jmp
out
clc
jmp
fsubr
ror
loop
into
aas
out
flds
fimull
xchg
into
xlat
ret
out
int
sti
int3
lock
fadds
cld
fmulp
or
repz
shll
ret
aaa
ret
in
sbb
stc
loopne
ret
sbb
lds
mov
loop
rcl
int3
cli
loop
cmp
cli
cli
in
sti
int
stc
out
out
iret
ljmp
stc
fdivs
int
ret
out
out
jecxz
in
jmp
loope
faddl
in
iret
aaa
fcmovnbe
cmp
cmc
std
hlt
cmc
fdivrs
cmpl
and
loope
int
int
test
shlb
jecxz
ljmp
rcl
out
xor
cmc
aad
fisttpl
out
mov
fcmovbe
sti
cmp
repnz
out
fdiv
adc
mov
xchg
ror
iret
cmp
fcmovbe
cmp
not
xor
sarl
in
fidivrl
ds
stc
fsubr
jmp
cmc
out
enter
repnz
aam
imul
loopne
repz
faddp
in
cli
in
into
and
icebp
int
call
jmp
fxch
cmp
fdivrs
cmp
ret
clc
repnz
test
incb
lea
iret
fidivrl
aaa
repnz
cmc
ss
cmc
repnz
sbb
fucomp
ljmp
clc
sti
sar
stc
ljmp
xlat
and
les
orb
shll
out
xlat
xor
hlt
cmp
cld
xlat
addl
mov
ljmp
enter
call
into
roll
frstpm(287
mul
mov
fsubr
xchg
xlat
shl
out
lock
jmp
leave
aaa
cli
cmp
shl
cmp
call
out
popl
mov
loop
enter
in
in
sub
fsubp
in
loop
dec
clc
jmp
aad
leave
lret
fstp
aad
mov
sti
mov
jl
addb
jl
mov
stc
xchg
cli
xor
ljmp
xor
cmp
fdivrl
aas
in
cmp
fucom
xchg
enter
int
leave
mov
cli
addl
ss
cmp
sar
out
aam
jmp
fcmovb
fistl
jmp
cli
xor
into
incb
lds
fxch
nop
icebp
xchg
xchg
xor
rcl
lock
roll
sar
loope
loop
neg
cmp
lock
ljmp
rcr
out
cmp
filds
fst
std
test
std
mov
lret
xlat
cmp
cmp
call
aam
mov
shl
int
rcr
nop
nop
fiadds
bnd
shr
idivb
lock
jecxz
lret
loop
loop
out
call
in
cmc
icebp
in
hlt
xor
ss
cmp
out
ffree
xchg
fiadds
out
mov
call
cmp
sarl
in
and
fcom
test
out
loopne
aam
das
clc
ljmp
hlt
in
cmp
ss
fadd
aam
clc
ds
cli
leave
shl
ljmp
cmp
out
cmp
shl
bnd
fdiv
and
jecxz
cli
popl
in
hlt
cmp
cld
xor
mov
ds
fprem
sti
cli
ljmp
in
fchs
xor
sti
xlat
rcr
jecxz
loopne
neg
aam
cld
sti
in
xchg
lock
shll
test
fdivr
lret
out
cmp
shl
and
ljmp
xchg
ret
out
leave
shr
repz
add
xchg
icebp
xor
loop
mov
nop
lret
enter
rcr
into
enter
ret
cmp
out
stc
loope
out
out
loop
in
lret
nop
in
in
xor
out
jmp
shl
fnstcw
fldz
cmc
shl
out
in
sbb
filds
xor
icebp
cli
cli
in
xor
repz
lock
incb
mul
out
cld
out
out
fxch
repnz
out
out
cmp
shr
addb
loopne
cld
out
mov
rcr
xor
out
xlat
clc
cmc
hlt
lret
test
sar
loope
in
in
xchg
ret
aad
das
ret
shrb
enter
aas
out
cmp
in
aad
sar
test
iret
in
ljmp
xor
rcr
rcr
addb
ret
in
mov
into
call
call
aad
cmc
cmp
fidivl
aam
sar
mov
out
test
fucomi
jmp
shl
shll
int
repz
clc
fdivrp
sbb
stc
cmp
jecxz
sti
int3
loop
out
sarb
fnstenv
call
out
fsub
incl
repnz
inc
and
orb
xor
cmc
ljmp
aad
shl
mov
ror
fdivp
xlat
cmc
jmp
sar
fcmovnbe
incb
ret
repnz
sar
fxch
nop
into
jecxz
in
aaa
ljmp
out
enter
repz
mov
fmul
faddl
in
int
iret
lock
icebp
not
iret
fdivr
fcmovnbe
test
test
repz
call
adc
xchg
sub
into
in
cmp
stc
aas
fmulp
faddp
cld
aam
cli
jmp
call
mov
out
jmp
icebp
cld
div
bnd
out
in
jecxz
out
in
mov
iret
ret
cmp
fcmovbe
sarl
into
rcr
cmp
into
in
add
ljmp
jmp
sub
cmp
repnz
cmp
rcr
and
loope
lea
int3
leave
in
lret
shr
out
adc
aas
xchg
test
out
loop
int
out
rcl
stc
lret
idiv
in
cmp
stc
in
clc
jecxz
mov
jmp
mov
ret
fcomi
aas
stc
lret
lret
rorl
fxch
icebp
mov
mov
mov
add
xor
cmp
je
mov
mov
jmp
rol
lds
aad
aad
lcall
mov
addb
jl
loope
mov
ret
iret
icebp
cmp
lock
loope
sub
shl
incl
mov
out
int3
jmp
mul
hlt
stc
clc
aas
lock
ss
xlat
testb
mov
xchg
sbb
ret
int3
cli
xor
cmc
test
leave
shl
mov
filds
repnz
jmp
lock
aam
fcmovnbe
xor
xor
test
ret
in
fadd
fisttpl
in
ret
hlt
lock
out
cmp
jmp
cmp
div
std
fildl
int
ror
aad
repnz
jmp
xor
lret
aas
lret
hlt
cmp
jmp
fucomi
cli
in
in
lock
das
int
xor
stc
cld
in
in
jmp
cmp
cmp
testb
ret
clc
test
int
ljmp
jmp
cmp
aad
xlat
ds
clc
aam
out
fiaddl
int3
mov
hlt
rcl
xor
lock
sti
idivl
fcmovnb
stc
fcomi
std
jmp
xor
in
out
test
xor
call
clc
aad
repnz
fsubp
call
in
xchg
xor
lret
out
cmp
lret
cmp
cmp
jmp
sbb
and
out
out
iret
adc
cmp
int
cli
cmpb
xchg
ds
leave
sti
xchg
mov
into
hlt
fmul
leave
not
int
stc
std
loop
neg
jecxz
movb
xchg
in
into
aad
out
xor
repz
std
ljmp
xchg
not
loop
stc
xchg
xchg
iret
mul
out
xor
not
cmp
cmp
in
orl
fiadds
xor
jecxz
lock
xlat
cmp
stc
rolb
test
std
lret
into
fdiv
divl
loopne
repnz
int3
fnstenv
rol
cmp
rcl
loop
jecxz
ljmp
std
loop
jmp
cmc
xor
out
cmp
aad
in
std
clc
fcmovne
out
enter
mov
ror
xchg
out
leave
lret
cli
cmc
cmp
in
fdiv
stc
lock
out
test
fiadds
jmp
shl
fcmovnbe
xor
aam
cmp
xlat
test
dec
ret
leave
fdivr
sti
ffreep
cld
int
xor
das
ror
repnz
cmp
cmp
aas
faddp
adc
mov
neg
icebp
in
mov
mov
repz
out
in
int
not
lret
ror
shl
xor
jecxz
in
in
adc
xor
sub
enter
into
in
stc
testl
xchg
int3
lret
repz
ljmp
aam
test
loop
mov
neg
fsubp
loopne
divl
out
rcr
repz
sarb
int3
out
shr
jecxz
mov
repz
xlat
ret
out
out
loop
jmp
cmp
fcmovnu
not
hlt
sbb
aam
into
ljmp
xor
mov
jmp
ljmp
ds
and
jecxz
jmp
xchg
fdivp
mov
int3
out
iret
aad
fcom
idivl
sti
aad
lock
les
out
les
mov
das
shlb
xor
xor
fstp
aam
fcmovbe
fcmovnu
test
sti
fstl
out
int
ss
rcr
out
cmp
repz
in
call
fadds
repnz
shr
ror
shl
or
fdivrs
cmp
in
xchg
in
lret
enter
xor
lret
ror
aam
repz
loope
hlt
hlt
rolb
mov
in
rcl
xor
fcmovnbe
xlat
int
repnz
cmp
add
icebp
jmp
fstl
out
xchg
shr
enter
cmc
cmp
fucom
fsubp
test
mov
movb
jecxz
xor
shr
call
sar
fdivr
test
and
stc
in
out
int3
loop
mov
out
lret
cmp
fmul
in
into
cmpl
stc
xchg
out
mov
out
addl
movb
jmp
xlat
aad
rcr
fstp
pop
mov
mov
add
in
xor
jmp
aam
hlt
icebp
loop
shl
ds
cli
xchg
lret
lock
into
das
int
out
ret
out
stc
shl
pushl
rcr
fildl
call
xchg
shl
aam
fldlg2
icebp
fidivrl
aas
fadd
shl
adc
cli
cmpl
fdivrp
jecxz
in
into
jmp
out
cmp
cmp
fmul
cmp
stc
cmc
fcomp
sti
loopne
clc
icebp
test
repz
lret
leave
enter
fdivr
icebp
xchg
mov
sti
in
in
icebp
repz
jmp
hlt
std
sarb
in
testl
lock
repnz
xor
sti
ljmp
int
testl
sbb
xchg
icebp
hlt
jmp
out
out
enter
fadd
hlt
cmp
shr
test
xchg
sub
out
aaa
ret
leave
jmp
sti
cmp
lock
icebp
aad
xchg
jmp
int3
stc
rolb
leave
clc
in
in
stc
icebp
cmc
fmul
fcom
stc
aam
f2xm1
leave
jecxz
xlat
fcmovnu
int3
in
orb
out
xor
cli
int
fadds
fsubr
out
jecxz
fsubr
mov
xchg
mov
in
loope
jmp
shl
loopne
in
cli
adc
in
loopne
test
cs
in
fld
out
out
test
lds
fisttpl
orl
fcmovnbe
clc
test
repnz
loop
lds
jecxz
loopne
loope
cmc
lock
leave
mul
fsubr
enter
fidivrl
hlt
neg
in
test
repz
aas
stc
das
lock
out
int
cmp
sar
xorb
sti
sar
loopne
lea
mov
repnz
fcomi
lret
sarb
rcl
shr
jecxz
jmp
mov
fcoml
ljmp
jmp
fdiv
lds
ret
out
xchg
ljmp
fld
aam
aam
cmp
cmp
out
ret
sti
ds
fcmovu
out
out
ror
std
loop
aad
int
xor
sarb
fsubr
sar
lock
jecxz
ret
hlt
fdiv
call
loop
aad
fld
xlat
cmp
repnz
cmp
not
addb
faddl
loopne
loopne
fcmovnbe
ljmp
sti
cmp
rol
fucom
or
call
xor
cmc
cmp
icebp
shl
sarb
test
cmp
repnz
test
test
jmp
ljmp
divb
out
iret
fiadds
out
fdivrp
lret
popl
aam
fdivr
in
in
neg
cmp
loope
xchg
test
testb
loopne
ret
sarl
leave
jmp
xor
cmp
sti
std
mul
stc
xchg
xchg
out
int3
rcl
out
lock
call
sarl
flds
les
rcr
fsubp
aad
repnz
ret
cs
ds
neg
in
xlat
ljmp
lea
cmp
xlat
divl
int3
aad
sar
loopne
iret
loop
in
fnsetpm(287
lret
jecxz
repz
jecxz
test
jmp
ss
into
rcr
aam
aad
in
loop
aam
add
test
loop
fildl
idiv
rol
ror
neg
int
fdivr
in
fcom
repz
cld
loope
cli
enter
xchg
xlat
mov
cmp
fcmove
iret
loopne
xlat
faddl
in
in
loope
fcomi
ljmp
xlat
leave
aaa
iret
enter
repnz
ret
call
mov
leave
out
into
in
shr
clc
in
ds
jecxz
fptan
fcmovnb
ret
idiv
ffree
test
out
xchg
ret
das
in
out
int
test
in
ds
aam
call
in
aam
in
loope
ret
cs
sti
loop
testb
add
in
dec
divb
iret
xor
or
add
sahf
add
add
ror
leave
fstp
ret
lds
ret
jl
add
xlat
aad
imul
repnz
and
testb
lock
int
xor
fptan
ss
in
lret
in
rol
repz
cld
in
leave
out
test
test
lret
fdiv
clc
divb
cli
aam
cli
cli
in
icebp
std
out
loope
mov
call
fdivrp
xchg
out
cs
clc
fucomi
jmp
call
jecxz
in
test
faddp
loope
fcomp
repz
aam
xor
fbstp
cli
iret
loopne
rcr
fcomip
fsubr
std
addl
imul
ret
aaa
hlt
in
fcmove
icebp
jecxz
test
adc
in
int
icebp
repz
loope
shl
int3
in
out
out
aas
cmp
in
icebp
cmc
fcmovnb
xor
mov
call
shll
into
in
in
shlb
lock
hlt
iret
jecxz
add
fscale
leave
sti
mov
orl
xor
in
stc
fsub
hlt
shr
xor
fcmovnb
fstp
movl
xchg
xlat
shlb
rcr
loop
shl
in
in
ret
loopne
xchg
enter
lds
jecxz
rol
out
xlat
int3
fidivrl
ret
rorl
cld
adc
cli
rcl
shrl
repz
das
call
fcmovnu
repz
jecxz
in
fmul
in
jmp
or
xchg
sub
loop
icebp
not
les
fst
add
ret
enter
fcmovu
not
das
xor
jmp
iret
out
sarb
cmp
xchg
fdivr
enter
shl
int3
xchg
enter
repz
lock
dec
out
sti
xchg
lret
fstp
int3
cld
decl
fcom
iret
aaa
call
aam
push
cmc
xchg
lret
lea
xchg
mov
cs
test
sarb
cmp
repz
loopne
sti
leave
out
int
fucomp
int3
test
test
out
std
xor
aam
lock
in
call
cmc
stc
aas
in
fistl
xchg
cmp
clc
ss
fldpi
xlat
aaa
cmp
cli
in
mov
iret
cmc
int
stc
int3
ret
xor
cs
jmp
aas
faddp
fdiv
cmp
popl
xchg
loopne
aam
aad
in
fsubr
cmp
repnz
jmp
loop
leave
rcl
jmp
mov
xchg
call
cmp
testb
or
lds
call
lret
int
imul
fxch
aas
sti
repz
clc
lock
cli
iret
iret
shl
in
into
icebp
shl
fstpt
out
fdivl
jmp
shlb
fsubp
loop
addb
cld
cli
roll
cmp
ror
xor
aam
ljmp
movl
out
rol
sub
les
xor
clc
repnz
ds
cmp
lock
in
out
mov
out
addl
aad
int
fsubr
fcmove
ffree
ret
icebp
std
fsin
sub
out
fmulp
mov
lds
iret
fdiv
out
rcl
lock
fsqrt
stc
loopne
out
ftst
fldl
sti
fadds
repnz
out
mul
cmp
imul
xlat
lock
aas
icebp
fdiv
repz
fdivr
ret
lret
in
fimull
stc
idivb
xor
idiv
fucom
cmp
cmp
cli
xchg
idiv
in
in
hlt
in
clc
rcl
hlt
aad
fistpll
in
std
ljmp
xchg
jmp
out
lock
int3
int
lret
into
enter
out
call
inc
sar
loopne
lea
in
cli
icebp
xchg
icebp
xor
xor
repz
out
int3
repnz
icebp
shl
leave
loopne
leave
call
out
in
xchg
jecxz
loope
cmc
icebp
not
xor
hlt
ror
out
rcr
or
leave
jmp
enter
mov
adc
in
jecxz
int3
xor
int3
aad
hlt
int3
aaa
neg
stc
clc
cmp
xchg
lret
and
lret
ds
rcl
neg
lret
fidivrs
fldlg2
rol
fcmovnbe
cmc
stc
stc
std
fneni(8087
fcomp
int
call
loop
xor
jmp
sti
aad
aaa
loopne
xorl
jmp
jmp
ror
int3
fcmovne
inc
clc
adc
xor
leave
dec
xchg
jl
addb
jl
cmp
sti
mov
cmc
jecxz
fsub
xchg
icebp
ror
repz
out
div
ljmp
aas
int3
xchg
addb
fdivrp
enter
loop
jecxz
repnz
out
lret
rcr
xlat
aad
rol
aad
in
sub
xchg
lock
mul
clc
in
sar
cmp
lock
cmp
iret
aas
fcmovnbe
lock
jecxz
mov
adc
fucomi
in
cmp
rcr
incb
dec
mov
loope
int3
jecxz
xor
in
iret
cmp
in
int3
fucomip
aas
fdivrs
loop
sbb
div
in
shl
fmul
repz
hlt
cmc
aam
cmp
shr
shl
fsincos
add
in
shr
std
aam
out
mov
jmp
stc
aaa
xor
xlat
das
cmp
enter
hlt
xlat
orb
fsubrp
ljmp
cmc
jmp
cmp
std
out
loopne
loop
jecxz
test
ljmp
mov
jmp
xlat
jmp
cmc
in
stc
adc
xlat
loop
ljmp
mov
hlt
call
fcomi
rcr
fdiv
cmp
repz
mov
les
adc
xlat
out
cmp
cmp
xlat
in
rcr
cld
sar
out
test
call
test
fdivr
in
jecxz
jmp
xor
enter
stc
ds
out
add
loop
out
mov
das
aad
aaa
ret
cmp
mul
rolb
out
in
in
int3
addl
ror
xor
enter
ss
hlt
rol
ss
loope
aad
mov
xchg
xchg
call
ss
rol
aad
ljmp
fdivrp
fucom
fmul
out
test
lock
in
aaa
xor
cld
aas
idivl
fistpll
clc
icebp
xchg
ret
in
cmp
out
jmp
fucom
in
call
loopne
aas
cld
sar
ljmp
test
fimull
xchg
vpaddsw
fld
in
in
hlt
loope
cmp
loope
aad
ljmp
iret
ds
xor
int3
jmp
not
int
cmp
loopne
out
fyl2xp1
out
in
mov
enter
enter
xlat
fsubrp
sti
cld
repz
cmc
call
call
repz
loop
leave
enter
into
rol
in
stc
rol
call
aam
ljmp
lret
lret
xor
enter
enter
aad
into
shl
fdiv
out
mov
out
mov
out
leave
aaa
loop,pn
cmp
cmc
aam
xlat
ror
fcomi
fsubp
leave
repnz
call
aaa
out
cmp
out
repnz
cld
cmc
call
loop
std
mov
leave
or
iret
mov
shl
xlat
shlb
fstpt
sar
jecxz
in
xchg
lret
cmc
mov
fsub
adcl
fsubrs
into
lret
repz
fdivrp
shr
inc
xchg
std
sub
call
fdivr
xlat
int3
fdiv
out
leave
clc
sti
cmp
mov
fcmovnbe
orl
enter
icebp
jmp
hlt
loope
rol
clc
cmp
cld
ffreep
iret
filds
shl
out
stc
jecxz
stc
lock
ljmp
repnz
stc
push
aad
cld
out
out
xor
mov
cmp
cld
lock
out
test
repz
leave
cmp
out
mov
mov
out
in
in
icebp
repz
cmp
lock
fcmovnu
test
shr
out
and
ljmp
repz
std
repnz
std
int3
icebp
out
ret
loopne
repz
fldl
mov
jmp
lock
out
shr
cmp
cld
mov
in
fmuls
out
iret
loop
jmp
cmp
sar
aas
shl
loop
jmp
movl
in
jmp
call
out
hlt
ror
cld
rolb
in
mov
out
cli
aaa
cld
jmp
in
aam
lock
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
jmp
lret
leave
aas
lret
int
pop
push
icebp
movsl
fcmovbe
test
lcall
cld
hlt
repz
decb
enter
xor
jmp
enter
clc
aam
into
jmp
mov
int3
in
int
xchg
aad
fnstenv
out
lret
aas
xor
stc
sbb
into
jecxz
call
sub
lret
out
in
aam
rcr
icebp
aam
cmp
repz
stc
aam
call
test
out
ror
lret
cmp
into
in
rcr
cmp
fistpll
int3
mov
leave
clc
cmp
leave
cmp
clc
jmp
idiv
stc
cmp
ret
jmp
xchg
rcl
xlat
out
lret
xlat
int
int3
fdiv
out
fcomi
jecxz
cmp
imul
mov
ror
mov
shr
nop
loope
rcl
fprem1
leave
repnz
out
fmulp
ret
stc
mul
std
loop
fldpi
xchg
mov
fsubrp
stc
cmc
cmp
aam
in
ss
adc
cmp
lock
shl
cmp
mov
cld
lock
xor
int3
cld
aas
cmc
rcr
call
fsubp
icebp
out
ror
repnz
mov
aad
shr
repnz
fdiv
cmpl
rcr
imul
fimuls
test
mov
xlat
xor
xor
shl
ffreep
fmul
into
into
jmp
std
in
jmp
int
repz
mov
aad
xor
aas
icebp
fnstsw
cli
lock
rcr
in
out
sti
xchg
test
sub
aam
out
cmc
jmp
shl
hlt
out
cmp
call
loopne
xchg
sub
loopne
icebp
aad
out
int
xlat
lret
sar
repz
leave
xchg
addb
in
xchg
fsubr
shr
sar
sti
shl
xor
cmp
rcr
fimuls
mov
ljmp
cmc
lret
fcom
shr
shl
lock
xchg
xchg
xchg
jmp
in
cmc
enter
rol
sarl
cmc
into
aas
fcmovb
cmp
fcmovb
xchg
mov
iret
sar
shlb
call
cmp
std
ss
ret
roll
lret
jecxz
ffreep
icebp
subl
aad
in
cmp
ror
std
xlat
xor
sar
repz
jecxz
addl
idivb
fst
stc
int3
sti
call
neg
rcl
aad
sti
jmp
leave
out
iret
leave
mov
xchg
cmc
cld
dec
shr
cmc
int
aaa
clc
sti
into
repnz
neg
jmp
fucompp
enter
loope
xchg
and
lock
cmp
divl
xor
aam
loop
cli
out
and
fsub
lret
out
lret
in
mov
adcl
fucom
lret
cmp
out
lock
neg
hlt
stc
les
xchg
cmc
iret
div
xlat
lret
sar
iret
int3
aam
ffree
cld
fdivrl
test
cld
xchg
adc
into
ret
out
fidivl
div
ds
aas
xchg
loope
out
mov
fcom
cli
xchg
aas
loopne
xor
cmp
fcom
repnz
ret
repnz
and
rol
clc
cli
std
leave
out
fisttpl
shl
jecxz
xlat
ss
out
cmp
cld
jecxz
sar
fcmovne
enter
lret
int
cmp
iret
cmp
stc
fcompp
fiaddl
jmp
ffreep
jmp
mov
loope
aam
fld
cmc
xor
in
icebp
clc
cmp
test
ret
fcmovnbe
xlat
stc
xchg
cmc
test
das
sub
rol
sarb
fdivrp
cmp
clc
in
test
fiadds
test
lret
or
lock
out
repnz
out
enter
stc
testl
ljmp
jmp
cmp
lret
sbb
fst
out
cmp
leave
out
cmc
jmp
repnz
cmp
test
or
test
incl
jecxz
xor
loop
cmp
aam
int3
ds
sar
cli
stc
fsub
xlat
jmp
int3
in
out
mov
fxch
cmc
test
aaa
aas
call
aaa
cli
dec
cld
ret
mov
sti
lret
stc
fmul
cld
aad
das
iret
lret
in
lret
lret
icebp
cmp
cmp
ret
testb
lds
test
jl
decl
jmp
iret
iret
ror
ror
xlat
fnop
and
xor
leave
roll
sahf
jl
addb
jl
mov
shr
filds
shr
hlt
cmp
repnz
int
cmc
lock
in
xchg
xlat
aam
jmp
out
shll
out
ror
enter
std
hlt
loopne
sar
test
xchg
clc
call
in
jecxz
jecxz
out
jmp
xlat
cmc
cmp
iret
ss
hlt
out
xlat
fcmovnu
out
int3
mov
mov
sar
call
cmp
into
loop
in
in
sbb
fmul
xchg
ds
ret
repnz
repnz
out
lret
cmp
cmp
test
sub
jecxz
shr
leave
in
adc
ss
decl
sar
fdivrp
lret
loop
shr
aaa
ret
cmp
stc
jmp
sar
ret
out
incb
in
int
out
ss
out
xlat
jmp
stc
cmc
aad
addl
fldz
mov
imulb
fdiv
cmp
in
int
sub
loope
call
lret
sub
ljmp
call
cli
fsubrp
xlat
aad
ret
lock
mov
cmp
loope
out
leave
jmp
iret
incb
adc
fsubr
jmp
mov
dec
xchg
and
xor
cmc
loop
out
in
cmp
aad
mul
in
fnclex
ljmp
ror
shl
ret
jmp
aas
icebp
stc
shll
cmp
repz
movl
iret
lock
sti
xor
out
ljmp
sar
loop
aad
enter
mov
lret
pushl
cs
lret
repnz
in
ds
ds
clc
xchg
call
and
test
shr
shl
cmp
aam
in
icebp
testl
sbb
out
stc
icebp
sbb
loop
and
std
cmp
cmp
ss
in
cmp
sti
leave
fimull
xchg
and
rol
aaa
shl
aad
ror
shlb
out
shl
testl
mov
xlat
xor
rol
in
leave
xor
int3
ret
into
rcr
aam
xlat
cmp
iret
loope
call
das
out
in
into
ss
xlat
lock
loop
cli
repz
out
flds
stc
jecxz
in
xor
lret
cmp
cmp
cli
out
out
out
rol
std
aas
hlt
leave
fmull
aam
shl
lret
cmp
shlb
div
fcmovne
aad
add
hlt
out
sti
ror
jecxz
div
repz
enter
loopne
fadd
rcr
cld
inc
cld
in
into
in
xchg
stc
shll
call
cmc
test
icebp
sar
jecxz
out
xchg
repnz
mul
das
stc
in
cmp
repz
jmp
fcom
xlat
roll
aas
mov
in
ret
hlt
int3
leave
int3
out
lock
stc
out
cmp
stc
fstp
add
out
fnclex
fimuls
xor
leave
cmp
fstpt
jmp
fcmovnb
int3
loop
ret
test
xlat
loope
cmp
in
xchg
fsub
in
out
enter
aaa
xor
cmp
icebp
shl
xor
clc
test
fstp
in
int3
iret
sar
das
xor
ljmp
ljmp
mul
repz
fucomp
sti
decl
leave
into
in
xlat
shr
jmp
aam
neg
fninit
std
loop
mul
hlt
addb
xchg
xchg
mov
repnz
icebp
in
rolb
shr
jecxz
mov
sti
cmc
lret
out
stc
xor
icebp
xor
int
shl
fiadds
in
fmuls
iret
mov
cs
fnstenv
shrl
int3
iret
aad
cmp
int
rcr
shr
cmp
test
in
and
test
das
xor
int
aad
leave
cmp
call
lock
ret
movb
jmp
out
cmc
divl
fstpt
divb
stc
in
bnd
xchg
rcr
xor
decb
in
in
jmp
lret
out
sarl
not
lock
testl
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
mov
jmp
xlat
enter
fcmovbe
cmp
rolb
fisubl
jl
test
lret
iret
imul
shr
jmp
out
icebp
cmp
flds
jmp
cld
lock
xor
xor
fucomi
aad
sti
clc
cmp
int3
ss
aad
out
in
iret
loopne
ljmp
imul
out
xlat
xor
call
repnz
test
clc
sar
clc
lret
fmulp
adc
fcmovbe
sarl
ret
out
sarl
repnz
rcl
shl
cli
cli
orl
loope
clc
out
call
loopne
test
cli
fnstsw
ret
in
xchg
out
call
leave
icebp
leave
sarl
cli
jmp
inc
adc
repnz
std
fadd
lret
fchs
fistl
enter
xor
cmc
xor
cmp
fcomip
add
test
shl
xchg
xchg
ljmp
out
sar
cmp
ljmp
sti
sti
ljmp
jecxz
sbb
sub
ret
cmp
sti
out
std
aad
std
cmp
hlt
test
ret
cmp
jecxz
lret
xlat
cmp
int3
into
cmp
cmp
or
cmp
sub
int
test
hlt
loopne
rcl
out
fsubr
ds
fmulp
loopne
fdivrl
aam
fimull
fisttpll
cs
repz
out
std
aas
or
frndint
clc
add
test
out
loop
xor
xor
int3
int3
ss
lret
sar
cmp
mov
test
loop
out
in
jecxz
xchg
nop
jmp
lret
enter
aad
out
aas
ds
testl
xchg
rcll
test
cmp
std
ljmp
sbb
xchg
shl
xor
jmp
std
std
cmp
cmp
int
out
std
out
loop
shl
test
mov
xchg
test
fcmovne
div
sar
stc
ret
in
cmpl
cld
clc
out
out
mov
shr
int3
shll
repnz
sar
in
lret
xlat
roll
int3
mov
lock
repnz
in
rcl
idivb
sti
fadds
fdivr
test
fsub
int3
test
fprem1
int3
fiaddl
ret
les
xchg
int3
shll
sti
fdiv
repnz
in
aas
cmp
not
out
testl
into
sub
ljmp
ss
jecxz
adc
mov
loop
and
enter
sarl
cli
shl
loopne
cmp
stc
ret
cmc
jecxz
hlt
into
int
jecxz
fsubrp
xor
out
fmul
cmp
cmp
hlt
cmp
adc
mov
out
into
icebp
imul
int
lret
fsincos
in
cmp
add
out
fcmovbe
hlt
ret
ljmp
int3
aad
not
aaa
cmc
cli
shl
repnz
cmc
roll
fiadds
leave
mov
shr
loop
out
aam
call
fnstsw
cmc
aad
test
leave
std
iret
cmp
icebp
mov
in
xor
cmp
cli
cmc
cmp
jmp
sarl
ds
hlt
xchg
loope
test
dec
cld
int3
mov
mov
enter
xor
xlat
fdivrl
xlat
cld
stc
out
fisttpll
in
ss
mov
lock
fdiv
cmp
out
fcmovbe
mov
mov
test
idivl
ss
in
incl
cmp
lret
icebp
jecxz
lret
lret
mul
sub
jecxz
iret
not
iret
or
shl
sbb
loop
out
std
in
jmp
iret
mov
xor
repnz
repz
fcomi
std
sti
aad
aas
addl
lea
in
xor
int3
shr
lret
enter
clc
shl
hlt
addl
mov
mov
hlt
lock
leave
out
cmp
cmp
aad
lock
rcr
mov
hlt
sub
xchg
jb
add
add
or
mov
sub
mov
sbbl
push
inc
jmp
aas
lret
lret
xchg
adc
mov
jl
flds
jl
into
in
shl
xchg
rcl
xor
xor
jmp
shll
std
lds
lret
fld
in
icebp
enter
aam
loopne
out
fidivl
ss
cmc
sar
aaa
idiv
xor
div
cli
in
in
in
mov
aad
aam
in
enter
sar
test
mov
ljmp
hlt
fbstp
cs
fcomp
lret
icebp
cmc
in
loope
fmuls
sti
xchg
jmp
shl
sub
hlt
sti
idivb
xor
in
in
mov
leave
orb
shl
cli
int
std
adc
fmull
mov
mov
rcr
std
xchg
or
sti
jmp
cli
int3
out
aas
call
xor
enter
in
xor
xor
xor
fst
cmp
push
ret
cli
cmc
fmul
out
mov
test
loopne
cmp
into
xor
ljmp
icebp
fucomip
test
in
in
lock
fbstp
sar
clc
ljmp
aam
test
enter
jmp
out
in
mov
aad
xor
out
hlt
cmp
sarb
into
cld
cmp
out
mov
stc
jmp
sub
fcom
and
call
cmp
fcmovnbe
cmp
call
iret
jmp
addl
fnstenv
ret
aam
into
cmc
ds
sti
rolb
mov
std
les
call
xor
stc
ret
int3
cmp
cmp
stc
shr
jmp
mov
in
in
filds
fnstenv
ret
rcr
into
fucom
fld
lock
mov
fcomi
fisttps
xchg
mov
cmp
jmp
sti
ljmp
repz
aas
ds
mov
adcb
out
hlt
aad
out
into
sar
rcl
ds
lock
loop
out
inc
mov
into
int
shrb
xlat
jmp
adc
aas
roll
into
decb
loope
in
sub
fucomip
cmp
repnz
stc
neg
test
loopne
add
fsts
nop
sub
repnz
hlt
into
ss
stc
iret
idivl
divl
std
in
sar
ret
std
fsubr
int
in
shr
shl
ret
sti
out
icebp
call
fst
lock
in
out
incl
shr
das
in
call
cmp
ror
jmp
addb
test
add
mov
int3
fmulp
out
repz
in
in
fidivrl
std
aam
push
add
loopne
out
in
lea
cmp
out
repz
std
xor
aad
ds
fistl
leave
sub
ss
fmul
enter
cmp
xchg
fdivr
mov
lret
rorl
sarb
xor
cmp
std
in
lret
out
lret
jmp
clc
fcmovbe
jecxz
repnz
fisttps
out
into
std
xchg
fcmovne
repz
in
rcr
loopne
clc
not
cld
xchg
clc
test
mov
cmp
aad
out
jecxz
icebp
aad
icebp
jmp
cli
out
repz
div
mov
addb
loopne
xor
cld
xor
sti
shr
lock
hlt
out
sar
in
stc
stc
mov
leave
repnz
mov
cs
jecxz
lock
cmp
cmp
std
leave
xchg
int3
mov
jmp
fimuls
fld1
xor
int3
in
filds
jmp
leave
xlat
mov
out
fdiv
ljmp
lock
fsubr
lret
loopne
fst
aam
hlt
repz
div
jmp
shr
sub
rcr
aam
xor
xlat
shl
div
loopne
cmc
fsubp
sub
xchg
xchg
cmc
in
neg
shl
lret
ds
out
std
aas
loop
and
idiv
in
leave
out
loopne
cld
shl
ret
in
aaa
xor
bnd
jmp
fdivp
cld
in
fmull
sbb
into
push
add
xor
jmp
ret
lret
ror
lret
sub
sahf
in
cmpsl
or
flds
jl
ret
in
in
in
xchg
orl
fcmovu
icebp
std
lret
lock
faddl
fcmovnbe
in
int3
shll
out
cmc
in
xor
jmp
filds
fisttpll
mov
iret
icebp
aaa
leave
fucomi
out
cmp
out
aas
aas
cli
cmp
sti
loope
xlat
loope
sti
fcmovu
and
ffreep
into
loope
xor
out
xor
fucomip
rcl
cmc
cmp
hlt
incb
lret
leave
xchg
in
int3
out
loop
xor
xlat
fucom
test
ret
addb
mov
int3
int
aam
ss
fdivs
xor
xor
cli
out
cli
fcmovnu
hlt
inc
xchg
int
icebp
mov
xlat
ror
lret
iret
ror
cld
int
stc
jmp
int3
jecxz
fsqrt
leave
sti
and
jecxz
int
sti
int3
fsub
das
shl
cmp
xor
aas
mul
test
icebp
clc
jmp
fmull
loop
xor
in
lock
std
call
fstp
aas
repz
mov
shl
fdiv
jmp
jmp
rcl
fdivrs
cmc
sarb
mov
iret
or
rclb
ret
loopne
lret
aad
jmp
clc
fcmovnbe
test
fcmovb
cmpl
jecxz
mov
mov
into
xor
aad
jmp
loope
ds
std
std
fcomp
ljmp
jmp
ljmp
cmp
cmc
aas
icebp
repnz
mov
lret
out
loope
fsub
xchg
int
enter
aam
hlt
aas
ror
int3
iret
adc
fcmovnbe
fcomip
leave
in
xor
mov
repnz
stc
xor
leave
xor
add
ret
stc
aas
aam
loop
rol
call
into
loopne
mov
in
in
cmp
jmp
cmp
int3
lock
les
roll
cmp
int
std
fstpt
idiv
ret
jmp
mov
or
xlat
call
ljmp
testb
test
lret
icebp
sub
lret
lret
std
das
jmp
lret
jmp
fmulp
cmp
mov
rcl
xchg
in
loop
loop
in
call
enter
stc
loope
out
cmp
fcom
xlat
icebp
mov
into
lock
lret
out
sub
neg
repz
clc
repnz
xorb
icebp
call
enter
mov
sub
in
fpatan
jmp
fmul
cmc
loop
fdivp
call
lock
in
call
lret
call
cmp
fdivp
cld
rcr
aad
xchg
incb
jmp
aas
loop
std
loop
clc
ljmp
fcmovnb
std
in
loope
lock
not
jmp
shr
aad
ljmp
jmp
clc
fdivr
fucom
lret
mov
hlt
iret
cmp
out
lret
lock
hlt
out
cld
mov
lret
or
cmc
jecxz
in
sarl
fcmovnb
jmp
cmp
fcomp
fcmovbe
jmp
lret
enter
out
call
shlb
out
fldz
xor
jmp
into
repnz
out
loope
idiv
int
in
ljmp
shl
rcr
fnstsw
cmc
sti
cld
ds
testl
ret
enter
repz
cli
fdiv
add
ret
cmp
in
in
into
in
jmp
in
repz
fdivr
cli
rcr
into
sti
in
cmp
repz
loop
and
cli
std
orl
in
repz
rcr
int
in
test
mov
repnz
filds
xchg
call
div
idivl
jmp
loopne
in
loope
test
fst
aam
in
or
rol
fsqrt
ljmp
lret
fstpt
in
hlt
repnz
lret
rorl
cli
clc
out
iret
repz
iret
shr
cmp
je
jmp
iret
aad
aad
aad
aad
mov
mov
mov
jl
add
fcmovne
out
ret
mov
fucomi
leave
jmp
adcb
into
aad
jmp
sbb
in
cli
stc
in
clc
jmp
fildl
jmp
fdivp
imulb
aam
xor
in
shlb
mov
cld
aad
or
ljmp
rcl
ret
out
fstpt
shlb
ljmp
enter
mov
jmp
xchg
icebp
rorl
xor
fdivr
into
lret
and
iret
stc
aam
flds
test
sti
xchg
ljmp
fcmovbe
int3
fdiv
cmp
sar
enter
mov
out
loop
test
out
fdivp
fnstenv
aam
cmp
cld
into
fdiv
rcl
jmp
mov
out
enter
xor
cmp
cmp
loope
adc
aam
fadds
out
cli
jecxz
xor
cli
shl
aam
in
out
int3
in
ds
out
ljmp
shlb
out
mov
out
cmp
loopne
repnz
cmpb
mov
xchg
fucomi
fmull
repz
cmp
flds
repz
loopne
jmp
fsubrp
enter
shl
into
cld
cmp
cmp
iret
xchg
call
fmulp
fstp
in
int3
out
cmp
lock
ror
out
idiv
testl
fsub
stc
cli
nop
cld
repz
enter
sarb
cmp
repz
loop
clc
cmc
in
clc
inc
ljmp
out
fcmovnb
faddp
ds
cmp
cld
xlat
std
not
repz
iret
out
fadds
das
xor
repz
into
sar
enter
int
icebp
aas
stc
aam
fisttps
lea
aaa
xor
lret
repnz
aas
out
fcomip
aas
ret
xlat
test
or
cli
lea
rcl
rcr
out
out
icebp
in
in
jmp
loope
fsub
and
mov
xchg
repnz
in
jmp
idiv
in
cld
lret
cmp
loop
lret
test
in
ficoms
sub
adc
aam
shl
and
cli
mov
in
out
lock
aam
shlb
loope
rcl
int
repz
cmc
loopne
in
out
leave
out
lret
jecxz
loope
repnz
xor
out
sti
loopne
cmc
fcmovb
xchg
repz
idiv
call
call
sti
repz
cld
call
adc
cmp
cmp
inc
stc
cld
loopne
sti
addb
ljmp
shr
aam
ss
ret
jmp
sar
in
in
repz
loope
aaa
rcr
xor
lock
loopne
ret
mul
jecxz
rcr
loope
mov
lock
aam
fnsave
aas
fucomip
lock
xchg
aam
rol
in
xchg
lock
sub
aaa
ret
aaa
xor
fmul
jecxz
fldl
clc
test
xchg
loop
xchg
incl
ror
cmp
fcmove
cmp
lock
ljmp
loope
fmulp
xlat
lea
xor
cli
cmp
cli
cmp
cld
cmp
rol
cli
in
or
mov
into
fsubr
mov
stc
in
xor
into
neg
sarl
hlt
aad
rcr
rolb
mov
out
out
in
shl
fdiv
ret
cmp
fst
int3
test
loop
stc
jmp
ljmp
ret
rcl
out
clc
sar
loope
loopne
sti
mov
mov
icebp
loopne
fsubp
hlt
repz
fdivr
fdivrs
repnz
fstp
loope
push
loopne
mov
ljmp
fldl
jmp
aam
jmp
fmul
in
cli
test
jmp
in
dec
loopne
test
shll
jecxz
fxch
idiv
into
cmp
clc
iret
repz
aam
xchg
stc
stc
test
into
fldl
xor
int
cli
xor
sub
mov
sub
subl
xor
movl
cmp
movl
jne
xor
jmp
ds
ret
ds
jmp
cmp
jl
flds
jl
shl
aas
fistpll
faddl
ljmp
ljmp
out
xor
cmp
ds
fidivrs
sarb
loope
loope
enter
nop
sub
in
out
repnz
stc
sti
shl
fldl2e
incb
cmp
les
fdiv
in
aam
repnz
lock
cmp
xor
cmp
fxtract
aas
sub
mov
addb
in
fld
sti
cld
clc
repz
filds
loop
clc
cli
clc
test
inc
in
ror
icebp
enter
aaa
ss
sub
test
jmp
mov
aaa
repnz
jmp
repnz
in
cmp
lret
mov
xchg
in
loope
xor
ss
loop
into
xor
in
testb
cli
lea
fcoml
sub
xor
fcmovnbe
cs
stc
shr
out
fmul
fsub
cmc
out
test
out
in
xchg
hlt
xor
in
int3
out
rcr
sub
cli
cmc
cmp
aam
fisttps
lret
aad
shl
not
into
aad
int3
rcl
aam
std
neg
fcmovne
cmc
ljmp
jmp
xor
cmp
repnz
cli
xor
out
in
stc
in
ret
sbb
fldl
xchg
out
rcl
jmp
fprem1
xor
div
repnz
clc
inc
out
xlat
int3
sbb
lret
xchg
xchg
sti
jmp
ds
in
fldl
mov
lret
call
repz
call
cmp
out
cmp
addl
in
loope
fmul
das
lret
cmp
fcompp
ss
xchg
mov
dec
addb
sub
out
cs
out
cmp
sbb
ffreep
fsub
fucomip
jmp
aad
shr
cmp
jmp
out
aad
sti
lock
xlat
std
test
clc
sub
fucomp
in
in
mov
ss
aad
out
iret
call
stc
incl
lret
jmp
jmp
call
out
xlat
int3
cmp
hlt
out
in
repz
leave
cli
fsubp
mov
xchg
aad
shr
cmp
lds
shlb
fnstcw
out
jecxz
rolb
mov
mov
xor
imul
aaa
in
jmp
aad
std
iret
repnz
loope
fsubp
out
into
nop
jmp
int
in
icebp
sti
ss
fabs
jmp
cmp
repz
xchg
iret
mov
loopne
in
xlat
out
clc
rcl
lock
fcmovu
xchg
loopne
ljmp
shll
ljmp
rcr
roll
out
fdecstp
fdivrp
ljmp
aad
loope
in
xor
jmp
rol
lock
test
lret
mov
mov
repnz
jmp
xor
ljmp
imul
cli
fcmovbe
mul
cmp
in
cld
ljmp
repz
imul
repz
out
clc
cmp
xlat
xchg
in
dec
out
mov
xlat
in
out
lock
xor
into
xlat
cmp
fstp
rorl
fld
f2xm1
lret
lock
iret
enter
call
out
ds
cmp
loop
neg
jecxz
aam
clc
into
sti
loopne
icebp
loopne
out
rcl
xor
repz
cmc
in
bnd
aam
aad
ftst
mov
sub
shr
in
out
in
loope
fsqrt
aaa
shl
std
xor
sarl
out
hlt
out
shl
rcr
loopne
out
fdivp
rorb
out
in
out
cmp
in
xlat
roll
test
xchg
loop
in
nop
int
lock
in
sarl
cli
aam
into
in
loope
aad
cmp
loope
rcr
aam
loop
out
test
jmp
hlt
ret
xor
jmp
cmp
addl
xchg
mov
out
repnz
lret
sub
add
jmp
mov
andl
xor
jmp
ds
rcr
fcmovbe
rcl
aad
sbb
gs
and
jl
int3
iret
rcr
fdiv
jmp
shl
out
hlt
leave
jecxz
in
jmp
nop
xchg
out
shl
enter
aas
jecxz
icebp
fdivr
ret
cld
cmp
dec
xchg
fiadds
iret
xor
xor
leave
call
iret
cmc
cli
fld
sar
xchg
loop
cld
out
out
lock
shl
sti
lret
fcomi
icebp
rol
icebp
lock
flds
in
sti
in
orl
hlt
cmp
int3
cmp
testb
xlat
leave
out
into
ljmp
das
cmc
ret
std
cli
lret
loopne
rcr
ret
leave
ret
and
in
orl
cli
cmc
ljmp
test
fcomp
loop
in
enter
incb
xor
iret
xor
fstpt
call
loop
cmp
repz
stc
aaa
out
fstp
cmp
cli
repz
aam
out
mov
incl
lds
mov
repnz
out
in
jmp
in
rcr
faddl
out
icebp
jmp
xor
cmp
fldl2t
cmc
loopne
in
repnz
out
jecxz
jmp
add
lret
ror
loopne
cmc
out
sti
int
aam
shl
cmp
loopne
repz
loope
loop
cli
sub
out
test
fmulp
lret
sti
cmc
icebp
call
mov
mov
cmp
lock
call
cli
enter
ss
lock
xlat
lds
lock
fcomi
test
leave
fsub
xchg
loope
ss
out
shl
ljmp
fsub
mov
loopne
mov
shll
ret
jmp
ror
cmp
rcl
ret
out
call
in
addl
out
sti
fistpll
sti
in
fst
loope
repnz
inc
loope
cld
fucomip
loopne
mul
sti
xor
repz
xlat
stc
cmp
into
shl
mov
sti
loope
mov
xchg
divb
shll
cmp
aas
ds
jecxz
lret
rcr
ret
leave
int
in
test
cld
cmc
loopne
int
cmc
call
jmp
cmc
std
aas
div
xchg
mov
leave
mov
mov
leave
xchg
out
rcr
repz
shll
sti
in
lret
ss
aam
sub
test
in
lds
out
ljmp
bnd
cli
icebp
cmp
loopne
rol
and
cld
flds
into
fcoml
xlat
shr
hlt
xlat
shr
lock
hlt
jecxz
hlt
in
out
clc
mov
loopne
call
cmp
hlt
test
loope
hlt
int
leave
icebp
lret
shl
iret
out
in
lock
xor
in
neg
fiadds
mov
mov
fcmovnb
xchg
xor
into
rcl
in
iret
div
repz
ds
adc
ret
fdivr
enter
movl
lret
enter
neg
call
jecxz
std
out
cmp
fsub
std
jecxz
fst
jecxz
fsubr
loop
into
not
out
aaa
fcomi
idiv
in
shr
addl
mov
aam
fnstenv
xor
ror
filds
cmpl
testl
mov
in
icebp
aaa
lret
jmp
out
cmp
cmp
in
roll
imul
lret
mov
out
mov
xlat
not
div
ror
hlt
ret
shl
stc
rcl
ret
mov
and
add
clc
imul
std
int
cli
cmp
rol
xchg
test
flds
fcoml
bnd
int3
clc
xor
lret
out
cmp
int3
std
fstp
stc
sar
mov
loope
lock
in
aad
into
stc
rol
cmp
lret
faddp
rcr
hlt
in
fmull
xchg
shl
xor
fcmovne
out
shl
cli
xlat
adc
in
mov
ret
mov
add
repnz
mov
mov
xorl
jmp
ds
aam
aam
aad
inc
dec
push
pop
mov
mov
jl
cs
hlt
ss
rcl
shl
repz
fnstcw
not
xchg
loop
fsubr
mov
rorb
xor
ljmp
hlt
into
jmp
aam
xchg
mov
fimuls
ljmp
repnz
fdiv
cmp
rcr
hlt
fxtract
xchg
aam
fldl
out
mov
aam
in
shl
not
xlat
sarb
into
in
test
in
stc
rorb
into
fimuls
leave
shl
cld
xor
in
fucomi
rcl
test
loop
cli
ljmp
ror
repz
test
aam
int3
call
cld
fiadds
movl
aad
sar
call
rcr
lock
stc
cld
cli
cli
std
out
in
loope
nop
jmp
aad
jmp
ljmp
lock
xlat
ret
loopne
mul
loope
xchg
sti
xchg
in
icebp
lret
xlat
iret
aam
call
sti
or
cmp
test
std
rol
in
stc
iret
fiaddl
int
out
in
xor
int
cli
int3
ss
adc
clc
mov
out
in
mov
stc
out
call
ljmp
fiadds
mov
loopne
flds
repz
ss
lret
aaa
out
ljmp
repz
hlt
out
stc
in
in
lret
int3
iret
iret
in
xor
in
cmp
int3
cli
fxch
fcmovbe
hlt
into
fld
fsubr
sub
repz
into
ljmp
cmp
fidivs
icebp
sti
mov
cmp
cmp
lock
das
call
cmp
sub
fcomp
shl
cmp
in
clc
xchg
ror
shr
ret
int
int
jmp
rcl
xor
sar
repnz
out
leave
lret
sti
fmull
rcr
aaa
loop
jecxz
stc
fdivrs
rcr
hlt
cmp
cmp
out
jmp
in
fmulp
out
repz
in
shl
cmc
call
sti
cmp
fcomi
xchg
ror
aam
in
xor
hlt
out
lret
repnz
sar
out
int3
hlt
out
xchg
mov
icebp
in
xor
fcmovbe
out
aas
cld
clc
loope
ds
fildl
cli
out
loop
ret
cmc
cmp
hlt
fcmovnu
cmpl
in
lret
lret
xor
cmp
loop
in
xor
stc
lret
test
fdivrp
fimull
jecxz
or
repnz
hlt
stc
in
dec
aaa
cmp
in
stc
jecxz
xlat
cli
ret
in
fsub
mov
int3
aaa
xor
out
cmp
shr
cmp
lock
sarl
loop
lds
fimuls
aam
iret
sti
hlt
sti
shr
in
repnz
std
out
in
fstp
loope
loopne
mov
cmc
cld
aaa
in
icebp
int
aam
jmp
aam
xlat
add
test
into
test
call
enter
leave
cld
fdivrp
jecxz
jecxz
addl
lret
cmc
in
lock
lret
sarb
enter
ds
sar
aas
adc
fisttpl
mov
mov
aas
loope
out
fsqrt
cld
test
cmp
xchg
repz
lds
out
ror
xor
fcom
sarb
jmp
lret
out
mov
fadds
div
jecxz
enter
int3
fucomp
cmp
loop
ret
in
in
mov
loope
out
out
loope
out
cmp
sar
imul
inc
shl
xlat
fimull
test
xchg
ret
out
call
cmp
sarl
fsub
clc
loope
out
mov
xchg
and
in
call
enter
fcmovnu
xlat
fstpt
xlat
incl
int
mul
iret
cs
clc
leave
aam
ss
cmp
cmp
aam
cmp
lret
roll
notl
mov
movl
jmp
mov
xor
or
sub
add
jmp
ret
aad
fstp
int
ja
imul
pop
inc
jl
flds
jl
addl
ss
lock
repnz
hlt
out
in
out
fucomip
ffreep
ror
jmp
loopne
in
in
cli
xor
xlat
jecxz
fstpt
jmp
out
add
jmp
nop
out
repz
xor
jmp
out
pushl
int3
ds
cmc
xlat
shl
loopne
mov
into
jecxz
rcl
shl
cli
xor
enter
fptan
repnz
std
div
faddl
addl
rcl
xor
call
lock
hlt
jmp
enter
out
or
into
ljmp
ss
aaa
fdivrp
stc
fdiv
lock
aam
lret
call
in
rcl
idiv
loopne
xor
out
sti
stc
shl
xchg
mov
cld
call
iret
std
in
loope
loopne
out
xor
in
in
cli
clc
rcl
clc
ljmp
cld
test
jmp
fsubp
cli
test
iret
int3
enter
sarl
cli
fdiv
aam
sar
xlat
fld1
leave
out
in
out
rol
das
jecxz
aam
stc
xor
in
sti
lret
fstp
cmp
test
mov
shl
sub
aaa
idiv
cli
out
in
fcomip
xor
shl
sar
test
cld
int3
loope
xchg
jmp
out
fdiv
clc
int3
jmp
sarl
lock
lds
or
loop
rolb
ss
in
into
std
aam
int3
shll
in
rcr
enter
leave
fucomi
in
iret
enter
xlat
repz
into
neg
repz
ds
mov
cmp
ljmp
ror
cmc
xlat
iret
loop
rcr
repnz
cmp
sti
in
loope
ret
idivl
mul
test
sbb
xorb
iret
idiv
aad
ffreep
idiv
not
ds
sar
faddl
int
call
repnz
lret
roll
jmp
int
test
in
mov
shrb
in
rcr
int
cmp
aam
filds
std
shl
shl
out
lock
jecxz
sti
out
div
out
enter
addb
in
std
fmulp
in
int
xor
out
repnz
enter
fcmovnbe
out
shl
fldpi
test
out
sar
out
lock
jmp
out
int
cmp
fcmovnbe
stc
jecxz
std
aas
mov
lret
test
clc
jecxz
call
lock
xor
cmp
cmp
rcr
hlt
cmc
fidivrl
fcmovnbe
fucomip
enter
xchg
fisttpl
jmp
in
out
sarl
in
xlat
repz
stc
xor
clc
in
sub
movl
shr
lock
cmp
fldpi
clc
fnstsw
sub
mov
stc
das
call
into
out
sbb
roll
in
mov
jecxz
xor
sub
shr
stc
int3
jecxz
cmp
loop
hlt
in
xchg
out
ror
in
jmp
xor
int3
cmp
cmc
shl
hlt
ret
std
test
ret
lret
stc
out
mov
int3
cli
xor
mul
leave
shlb
sti
repnz
cli
cmp
mov
clc
sbb
hlt
out
aaa
fsubr
cmp
rcl
lret
loope
testl
dec
call
out
sti
clc
jecxz
test
aad
repnz
loope
addl
shlb
cli
aaa
lret
filds
test
in
stc
int3
jecxz
enter
int3
clc
std
stc
enter
out
roll
cld
lret
in
xchg
jmp
xor
aam
cld
int
cmp
int3
flds
fst
fmulp
fadd
xchg
xor
stc
fcom
cmp
repz
rorb
faddp
out
lock
loop
rcl
loopne
cmp
lret
cmc
push
out
int3
loope
iret
aam
fcomi
cld
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
pushl
call
jmp
mov
mov
jmp
iret
ror
fstp
xlat
ret
dec
or
mov
leave
xor
jl
add
or
mov
popl
xor
fnop
jmp
cmp
rcr
xlat
mov
cmc
jmp
cld
out
mov
int
clc
cs
in
sarl
fdiv
aas
fcmovbe
fcomip
rcr
sti
in
out
loop
mov
cmp
idivb
cs
sarb
into
aad
xor
incb
sti
iret
std
repz
cmc
xor
clc
fcom
cli
jmp
xlat
cmp
sub
sbb
fdivrp
int3
loopne
call
out
out
in
mul
repnz
cmp
aas
in
in
jecxz
repz
cld
push
icebp
into
int3
xlat
into
fdivr
lret
repnz
fidivrs
fcmovne
clc
std
xor
test
xchg
fisttps
loop
rcr
lret
aas
call
aad
aas
mul
mov
loopne
rcr
nop
aaa
not
fcomi
fucomi
cmp
fsubrp
out
sti
aas
mov
fyl2xp1
fsubr
loop
xchg
nop
ror
int
clc
int
hlt
call
std
call
test
mov
sub
out
cld
repnz
fst
repz
fucomi
jmp
fsubrp
fcmove
shl
repz
out
cmp
aaa
clc
cmp
roll
in
fimuls
cs
int3
xor
icebp
into
xlat
in
hlt
jecxz
ret
jmp
loopne
test
clc
cld
ljmp
xlat
enter
std
out
xor
test
fcmovbe
ret
repnz
int3
xchg
enter
xchg
ljmp
fstpt
cld
leave
repnz
cmp
cmp
mov
in
mov
mov
fcomip
xor
sar
jmp
push
clc
dec
fldl
enter
mov
jmp
xor
ss
in
sti
icebp
lock
int
into
shl
in
mov
xchg
shrl
ss
divl
idiv
jmp
aas
cmc
fcmovnu
stc
test
fsub
ret
out
mov
faddl
loop
xor
jmp
ror
in
cmc
out
cmp
sar
mov
out
fcmovb
in
ljmp
lret
xor
xor
out
test
out
jmp
popl
xchg
jecxz
test
div
repz
iret
shl
aad
out
mov
cli
cld
fmul
call
out
shl
clc
repnz
ds
inc
out
clc
in
out
jecxz
cld
in
in
xchg
xchg
repnz
stc
lock
into
sarl
aas
cmp
cmp
rcr
rolb
loopne
incb
jmp
icebp
shl
jmp
xor
leave
rcr
cmp
sbb
loope
clc
cli
in
loopne
addb
jecxz
aaa
out
lret
xlat
lock
lds
xchg
ret
jmp
xchg
aad
cs
ffree
into
ss
idiv
cmp
hlt
in
fucom
mul
stc
in
in
mov
test
iret
test
sub
cmp
stc
cli
rcl
into
in
cmp
in
loopne
sti
ficoms
out
out
sti
in
cld
cmp
ljmp
xchg
fcmovbe
in
orl
hlt
out
out
int
sub
sti
rcl
jmp
lret
sti
lds
hlt
repnz
int3
ljmp
in
cmp
ds
mov
loope
decl
nop
out
ror
ljmp
aam
or
out
cmp
aas
fsubrp
out
in
loope
out
lret
shlb
repz
aad
fcomp
sti
sti
sbb
fstp
cmp
xchg
in
repnz
jmp
vpsubusb
ss
in
leave
out
lock
out
cmp
out
addb
mov
and
int
out
int
out
xor
stc
int
aam
ror
repnz
std
repnz
cmc
sar
or
ret
into
test
int3
into
repnz
xor
jmp
icebp
cmp
std
xlat
hlt
cmp
cli
xlat
out
out
in
xchg
mov
jecxz
cmc
leave
fdiv
into
sbb
std
std
rorl
add
aam
aam
fstp
fisubrl
push
int3
pop
dec
shll
flds
jl
in
cli
std
loopne
in
int
mov
repz
shl
lock
ret
icebp
aas
out
xchg
in
filds
lret
hlt
ss
shl
lret
iret
cli
in
sub
dec
fsub
imul
mov
orb
jmp
into
sti
cmc
rcr
sarb
test
repz
in
ljmp
loopne
in
idivb
xlat
call
xor
aam
ds
jmp
lock
cmp
jmp
fucom
aaa
sarb
lock
jecxz
stc
ret
lret
xchg
mov
mov
out
int
lret
xbegin
rcr
xor
fucom
out
sbb
out
ficoms
cmc
lock
icebp
jmp
cmp
rcl
cmp
in
fcmovnu
idiv
lock
call
cmp
fcmove
sub
rcl
test
iret
cmc
aas
in
jecxz
neg
xlat
sub
jmp
clc
mov
fucomip
leave
xlat
out
shll
aam
jmp
incl
xchg
aad
jmp
jmp
xor
loope
xor
cmc
out
lret
in
cmp
cld
rolb
loopne
leave
mov
cmc
xor
in
rcl
xor
xchg
mov
jmp
lret
enter
ret
xor
cmp
fdivrs
icebp
out
lret
test
jmp
sti
out
test
test
loopne
xchg
mov
call
lock
int
int3
iret
sub
hlt
lock
mov
jmp
xchg
leave
call
out
idivb
mul
push
into
fstpt
icebp
iret
out
aad
xchg
in
lret
cld
in
ljmp
shr
xor
int3
clc
cli
leave
into
cmp
repnz
aad
xor
clc
sbb
in
call
fucomp
fdivl
rcr
cld
ret
in
in
sti
or
shr
rcl
loop
xor
cmp
cmp
fadd
jecxz
ljmp
rcll
xor
xor
cmc
xlat
int3
out
rol
filds
lea
xchg
leave
hlt
cmp
out
jmp
sar
shl
fadd
fadd
in
stc
lret
aad
lock
out
cld
lret
cmp
fneni(8087
jmp
xchg
jmp
mov
xor
cmc
stc
fnstsw
cmp
ds
not
xchg
loop
jmp
rcr
mov
rol
cs
aad
imul
jmp
aas
iret
aas
cli
fadd
lret
ljmp
mov
xor
neg
aad
jmp
in
jmp
in
ret
fcomp
testl
xchg
mov
sub
fucomi
fldl2e
cmp
rolb
loop
rol
cmp
repz
and
in
jmp
repnz
into
cld
rol
in
sti
ret
int
clc
iret
fxch
jmp
mov
jmp
aam
ror
repz
xor
hlt
fadds
shr
xchg
sub
enter
leave
out
cmp
aad
cmp
in
lds
iret
xchg
xor
fsub
jmp
cmp
int
cmp
xlat
test
lock
cld
xlat
lret
stc
out
jmp
xchg
jecxz
lock
cmc
jecxz
loop
cmp
lock
fcom
test
sbb
xchg
fnstenv
div
icebp
out
out
cmp
out
ljmp
addb
loope
fcmovu
in
sar
aad
int
rcr
sti
icebp
fcmovnb
sbb
sar
cmc
loopne
shl
call
leave
push
cld
hlt
rcr
shl
in
add
mov
call
addb
cmp
fsubrs
leave
cmp
out
and
sti
xchg
xchg
cli
incb
call
imul
out
xorl
idiv
repnz
mov
clc
orb
ljmp
int
loopne
or
add
pop
pop
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
jmp
iret
into
ret
ror
aad
addb
bound
push
push
add
loopne
faddp
fadd
jecxz
ret
in
nop
in
in
hlt
cmc
jecxz
aaa
ss
lock
fidivrs
out
aas
aam
fcmovbe
std
mov
xchg
icebp
out
jecxz
call
cmp
aaa
ds
loope
clc
fildl
fdivr
jmp
loope
test
xlat
fidivrl
hlt
lock
out
not
stc
aam
testl
shl
shrl
aad
cld
fcmovne
sub
idiv
xchg
xchg
enter
repnz
repnz
in
idivl
hlt
cli
in
in
ljmp
fucomp
out
int
enter
out
out
out
out
enter
cmp
xlat
into
aad
aam
std
std
aad
mov
rol
cli
mov
rcl
repnz
ror
leave
shr
cmc
cli
cmp
rol
loop
mov
stc
jmp
mov
add
loop
lret
cmc
shr
cmp
cmp
enter
test
cmc
shl
shr
aam
cmc
fucomi
jmp
ds
sbb
loopne
mov
fisttps
lock
ret
not
icebp
xor
hlt
into
lock
fsubrp
and
leave
fdiv
mov
out
out
into
mov
int3
lock
int3
std
xor
fsubrp
ror
aam
filds
in
neg
cld
jmp
ss
stc
ds
div
out
shl
mov
in
jecxz
out
int3
xchg
out
in
loopne
cmc
enter
rcl
jmp
hlt
into
xor
test
fstp
xlat
loope
fisttps
xchg
repz
shl
xor
sti
stc
fdivr
aad
adc
std
ret
mov
std
into
call
sub
hlt
in
into
sar
shl
call
cmc
out
cmp
cld
cmc
test
ret
test
xchg
clc
out
int
call
div
rcl
sar
neg
in
ret
sar
hlt
xchg
fadd
shr
xchg
mul
jmp
fsubr
std
stc
into
into
in
cli
icebp
inc
cmp
mov
fsub
std
loopne
nop
call
lock
cmp
jecxz
loop
hlt
rcl
out
mov
in
into
ret
fcmovnu
mov
leave
aam
shr
idivb
movl
leave
sbb
in
jmp
das
xor
enter
out
leave
fst
or
cli
mul
aad
mov
fsub
xchg
std
xchg
loop
int3
loop
lds
xor
cld
in
lret
shr
out
stc
loopne
lock
sbb
xchg
test
hlt
lret
cmp
xor
out
cmp
xor
adc
div
aas
jecxz
mov
ljmp
jmp
aad
sub
ret
loope
out
out
ljmp
xchg
xchg
xor
jmp
repnz
call
loop
rol
cli
xchg
ljmp
and
shr
leave
rcr
out
loope
cli
cmp
shl
in
fcom
in
loopne
lret
mov
out
std
hlt
jmp
loop
cmp
aad
shl
fstp
addb
idiv
cld
fmull
ss
out
ss
in
leave
int3
cmp
fsubr
shl
enter
pop
out
fcom
xchg
xchg
icebp
das
rcl
cmp
int3
hlt
out
cmp
ror
sti
cmp
lock
xlat
loop
ffree
fmull
test
cld
repz
sub
out
out
lret
cmp
rcl
fiadds
in
mov
ljmp
cmp
stc
cmc
lock
addb
ljmp
rol
hlt
imul
fdivrp
std
into
out
faddl
out
out
mov
jecxz
iret
aaa
lret
sti
call
add
hlt
fsub
xlat
fldl
mov
xchg
in
xor
in
fsubr
ss
out
ljmp
mov
shl
mov
loopne
test
xor
aam
cmp
xor
cmp
incb
hlt
xabort
in
pop
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
pushl
pushl
push
pushl
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
mov
add
mov
orl
xor
sub
mov
xorl
add
movzwl
movl
mov
movl
movb
sbbl
lea
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
orl
mov
mov
xor
incl
sub
xorl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
jmp
ret
rcl
rol
aad
nop
push
pop
inc
loopne
lds
push
jl
lret
jl
cld
lea
icebp
xlat
in
lret
out
ljmp
loop
div
mov
std
loop
loop
in
lock
cld
shrl
xor
out
fcmovnu
dec
lock
test
lea
into
jmp
xor
xlat
repnz
fmul
cli
ljmp
aam
mov
xchg
push
out
int3
loope
xor
cmp
stc
cmc
int3
cmp
idiv
aam
xlat
test
ret
rcr
cmc
test
sar
adc
iret
in
repnz
enter
fcomp
loope
test
decl
xchg
jmp
mov
xchg
jmp
out
out
lock
aas
hlt
jmp
rolb
fiaddl
jmp
popl
call
aam
in
out
jecxz
loop
hlt
jmp
mov
nop
nop
rcl
out
into
xor
repnz
sti
in
xor
sarl
loopne
cli
mov
std
roll
xorl
sti
stc
call
rol
cmp
leave
in
cld
out
mov
shr
stc
lret
out
repnz
icebp
in
in
jmp
or
ret
hlt
call
ret
mov
xchg
in
call
std
cmc
leave
fdivp
loopne
sarl
fcmovb
lret
mov
sti
xchg
test
int
in
out
jmp
jmp
shlb
test
aas
fdiv
loopne
ljmp
jecxz
mov
cmp
clc
cld
idivb
lret
fucomip
loopne
repnz
cmp
loop
out
icebp
iret
into
ffreep
das
fmul
aam
repnz
lock
repz
stc
aas
cmp
loope
repnz
movl
loop
out
std
xor
out
out
test
vpor
lret
repz
out
out
int
fcomp
xor
in
loope
aam
fnstsw
xchg
ret
fxch
cli
xchg
in
out
divl
repnz
repz
lock
test
cmc
rorb
in
mov
adc
ffreep
xor
ret
lock
stc
xor
xor
fmull
out
xchg
loop
mov
rcl
call
in
clc
jmp
cmp
sar
clc
stc
shl
jmp
in
shlb
out
cmp
ljmp
jmp
fchs
mov
clc
addb
repnz
xlat
xor
fcmovnbe
rcl
hlt
std
xor
cmp
out
lret
aas
loope
int3
out
lock
mov
out
hlt
ror
mul
xor
out
aam
hlt
iret
fdiv
fcmovnu
fimull
in
fimull
in
cli
int
out
stc
rcr
cmc
in
rolb
vpaddd
cli
int3
sbb
repz
xor
aam
lds
cmp
fnstcw
out
fldl
jecxz
xchg
int
out
xchg
shlb
in
loop
rcl
rcl
iret
lock
iret
iret
rol
cmp
leave
in
loop
out
addb
xor
lret
out
repz
aam
cld
jecxz
lret
and
xor
ss
rcr
cmp
fsubr
sar
sar
cli
ret
jecxz
stc
popl
call
cmp
cmp
leave
cmc
cmp
fildl
jecxz
fisttps
xchg
jecxz
jmp
out
out
idivl
cmp
loop
aam
mov
fdivrp
test
test
les
sub
aaa
xlat
int
xor
push
sbb
rorl
fimuls
call
out
ljmp
cmc
std
ret
cld
cmc
rorb
in
and
int3
ljmp
sti
icebp
ss
sar
hlt
lret
aas
jmp
jmp
les
in
out
into
repnz
int3
cmp
out
cmp
loop
call
test
jmp
rol
in
out
clc
sub
cmp
lret
lret
cld
int3
in
aad
cld
faddp
mov
mov
xchg
mov
lret
out
ljmp
test
dec
or
push
xor
mov
add
jmp
jmp
aad
shlb
push
shrb
pop
jl
lret
jl
fcmovnbe
in
sbb
xchg
cmp
aam
out
mov
repnz
add
jmp
xor
cmp
std
into
aaa
loope
fcmovnbe
cmp
cli
addb
rolb
aaa
cs
xor
cmc
enter
xlat
ds
out
rol
xchg
out
int
in
shr
stc
mul
jmp
hlt
and
loope
rorl
and
in
sti
fcmovbe
icebp
enter
fdivrp
lret
shr
jmp
sti
fadds
hlt
call
shl
int3
call
cli
ret
cmc
cld
ret
cld
out
xor
fnstenv
enter
sti
xor
clc
clc
aad
hlt
fxch
fldl2t
jmp
ljmp
aaa
les
fcmove
lock
hlt
sub
into
cmc
fcom
jmp
sub
mov
in
jecxz
test
enter
out
cmp
loop
cmp
jecxz
jmp
hlt
dec
cli
addl
imul
loopne
sti
sti
std
in
fcomp
icebp
iret
repz
addb
loope
xchg
cmc
or
lret
fprem1
fcmovnu
int
cld
stc
shl
call
iret
mov
ds
call
cli
xor
aas
std
fadds
in
test
call
aad
in
xor
xor
loop
int3
jmp
test
out
loop
in
int
orl
into
xor
leave
out
sti
aas
cld
clc
ror
div
repnz
xchg
stc
clc
out
cmp
icebp
iret
sub
xor
xor
icebp
out
fcomi
shl
ret
test
enter
fucom
xchg
jmp
sti
lret
repnz
lock
adc
ret
into
sti
xchg
out
jecxz
lret
xor
fstpt
cmc
cmp
clc
cmp
rcl
add
stc
out
rcl
lret
fsincos
cmp
idiv
lret
repz
std
test
bnd
fsubrp
lock
int
xor
cmp
enter
aam
hlt
cld
in
neg
test
mov
in
loope
jecxz
mov
iret
adc
rol
lret
not
rcr
shr
faddp
adc
jmp
addb
xor
ljmp
call
ds
stc
xlat
xlat
fdiv
mov
stc
lret
std
jmp
shll
rcr
in
repnz
div
filds
clc
cli
addb
mov
xlat
div
aam
int3
ret
faddp
orl
lret
aaa
in
jmp
in
cmp
shl
stc
out
std
iret
aas
cli
faddp
test
into
ljmp
mul
cmp
aas
iret
aam
addb
test
std
out
repz
cmc
mov
rcl
fnstcw
into
int
rcr
fcmovbe
sbb
in
test
in
fcmovbe
call
test
aaa
ljmp
fadd
fmulp
cmp
ds
call
sub
shl
in
shl
xor
shr
cld
iret
fucom
addl
xchg
out
mov
fucomip
int
xor
fcmovnu
fldln2
hlt
cmp
cmc
xchg
loope
out
mov
leave
ret
xchg
cmc
das
in
aaa
iret
lds
clc
into
sti
sarl
sbb
fdivrp
aad
repz
cli
out
xchg
sub
jmp
fldlg2
icebp
jmp
int
repz
sti
mov
in
shr
loop
xor
out
in
enter
out
lret
lret
cmpb
faddl
mov
out
out
fdivrp
cld
xor
shrl
out
iret
xor
rol
test
loop
mov
in
xor
loop,pt
loop
lds
xlat
cmc
aas
loope
in
sar
cmp
int
jmp
repnz
ss
mov
cli
fldl
clc
rcr
rorb
test
data16
add
rcl
aad
fcmovne
scas
push
mov
mov
pop
jl
lret
jl
std
fdivr
into
incl
iret
das
rcl
into
std
aam
in
cmp
stc
sar
addb
out
std
int
repnz
ss
int3
int3
in
jecxz
cmp
cmp
out
mov
fdiv
int3
ljmp
xor
ret
fndisi(8087
out
test
cmp
rorl
int3
fdiv
xchg
in
in
enter
out
cmp
aam
adc
sub
aad
std
hlt
clc
jmp
loopne
loop
lret
fsubr
loop
lock
fstpt
neg
fistpll
cmpl
ffree
test
test
or
repz
xor
repz
out
hlt
iret
cmp
fnstcw
fildl
lret
mov
ljmp
loope
out
sub
cmp
jmp
lock
shl
repnz
loopne
loop
std
loope
int
shlb
xor
clc
in
xor
fdivrp
fildl
jmp
xlat
testb
shll
leave
ljmp
aaa
cld
clc
sar
sbb
rcr
xchg
enter
fcomp
nop
jmp
jmp
icebp
out
fnstsw
fucomi
ret
int
iret
ffreep
mov
fmul
out
mov
nop
enter
loopne
cs
in
iret
aad
out
aam
fsub
out
hlt
fcos
ds
cld
loope
jmp
fists
cmc
shl
fsubr
cmp
aas
ljmp
enter
loope
stc
jmp
in
loope
mov
shl
in
hlt
fucomp
repnz
sti
xlat
fcmove
cmp
in
xchg
xchg
call
lock
cli
sti
xor
loopne
stc
cmc
flds
fucomp
in
into
or
mov
jmp
enter
call
cmp
repnz
jecxz
mov
jecxz
in
clc
jmp
icebp
out
xor
shll
stc
stc
jmp
std
call
cmp
cmp
movb
clc
test
jecxz
ljmp
cmp
aad
loopne
adc
call
incb
test
rcl
aam
aas
in
clc
cmc
idiv
clc
jmp
ret
call
decl
xor
icebp
divb
lret
shl
clc
add
sub
into
enter
ror
lret
lret
xor
fabs
xor
repz
rorb
into
mov
cs
icebp
lock
fistpll
aam
fsubr
out
xor
fcmovu
out
cli
xchg
xchg
jmp
lret
shr
repnz
lret
loope
sarb
loopne
in
fsub
or
jmp
rcr
loopne,pt
xor
repnz
std
fdivp
out
ljmp
loope
mov
loopne
fmulp
ljmp
enter
clc
enter
lock
repz
fstp
out
xlat
pop
jmp
loop
bnd
iret
icebp
out
lock
push
jmp
xlat
cmp
repz
int
jecxz
loop,pn
fstpt
aas
call
addl
push
icebp
ret
int3
not
cmp
rcl
repz
fnstcw
vpaddusw
jmp
xchg
int
loopne
mov
inc
int3
aad
xor
icebp
icebp
cmc
in
mov
ljmp
out
int
call
lock
enter
stc
sti
cmc
ljmp
std
out
xchg
or
int3
leave
jmp
cmp
iret
ds
in
test
in
aam
lock
in
shr
cs
fdivrs
lock
mov
loopne
addl
dec
aas
stc
cmp
push
inc
test
lret
out
out
fdivr
xchg
ret
ret
repnz
shl
aas
into
cld
loop
vcmpsd
mov
in
cld
xor
ret
cmp
cli
lret
ss
and
into
test
test
jmp
ret
and
loope
mov
lret
call
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
jmp
aad
xor
pushf
cmpsb
or
lret
jl
rcl
cli
icebp
out
iret
clc
cmp
xlat
cld
clc
incl
and
int
fxch
enter
jmp
iret
into
xor
test
jecxz
mov
fmul
mov
shr
rol
xor
repz
jmp
fsubr
aas
rcr
sti
repz
adc
leave
test
call
aam
xlat
out
fcmovnb
out
cmc
std
sti
or
cli
ret
in
call
iret
loope
and
int
jmp
sar
rol
sbb
hlt
cld
aad
jecxz
xchg
test
mov
hlt
cmp
shrb
call
aad
xchg
imul
out
leave
iret
incl
repz
int
in
aam
call
cld
rorl
ret
in
mov
mov
lret
out
enter
loope
test
cld
fdiv
in
mov
test
iret
mov
repnz
enter
dec
int
sarb
jmp
lea
mov
adc
imulb
jecxz
cmc
xor
aam
loopne
cmp
cmp
ds
mov
sbb
out
call
xor
stc
jmp
xor
loope
repz
shl
testl
out
xchg
xor
xor
int3
repnz
cmc
idiv
cmp
addl
sti
aam
int3
vprotb
leave
aam
repz
out
in
clc
repz
incb
fsin
enter
cld
and
into
cmc
ds
into
cmp
xor
icebp
lock
in
cmp
jmp
aad
loopne
fcoms
rcl
out
int
fptan
out
cmp
hlt
loope
stc
inc
ljmp
test
cli
iret
cs
in
repz
int
loopne
cmc
rolb
fucomip
in
xchg
fcomp
enter
xor
xor
iret
idivb
hlt
fsubp
xor
ror
jecxz
rcr
loop
leave
mov
cld
iret
out
in
xor
les
in
div
xor
int3
out
cmp
cmp
cmc
sarl
aam
fisttps
fcmovbe
cli
rolb
xor
int
rcr
iret
fadd
cmpl
repz
xlat
incb
xchg
jmp
in
ret
cmc
jmp
enter
aam
cli
aam
jecxz
leave
xchg
out
faddp
jmp
jecxz
xchg
xor
repz
enter
fdiv
and
mov
test
mov
decb
aaa
shl
shr
fdivs
icebp
lock
icebp
shr
lock
lret
lret
cli
xchg
ftst
fmul
enter
cli
fstp
flds
cmc
fmuls
and
out
ret
xor
fidivrs
repnz
cmp
sti
xlat
call
fisttpl
lret
shl
aam
in
int3
cmp
idiv
xor
fldz
xchg
int
jecxz
test
iret
out
das
in
cmc
fldl2e
sti
jmp
int
std
xchg
fsubp
lret
incl
fdivp
xor
ror
in
sti
cmp
leave
into
not
fdiv
cmp
in
mov
cmp
leave
lea
icebp
into
in
into
xor
leave
cld
ljmp
sti
clc
mov
sti
ds
in
xchg
xor
repnz
in
out
das
out
cmp
aad
cmc
vshufps
lret
jmp
cld
ljmp
enter
xlat
int3
cmp
xlat
icebp
fsincos
hlt
push
cld
fiadds
fiaddl
enter
hlt
ss
in
ljmp
stc
cli
aam
mov
lock
fmull
icebp
in
lret
icebp
cld
int
sar
addb
aas
test
and
fidivs
aam
ljmp
aas
adc
mov
fcmovne
lret
jmp
out
hlt
in
lds
call
neg
fcmovnu
int
in
clc
loop
faddl
call
iret
das
int
in
xor
lds
ljmp
xor
mov
add
jmp
ret
int
lret
sub
scas
out
fs
lret
jl
lds
int
sub
cs
out
leave
iret
icebp
ljmp
loopne
fcmovu
leave
mov
faddp
xchg
jmp
ds
ret
lret
cmp
push
out
aas
loope
aad
ljmp
xchg
enter
out
clc
iret
call
clc
cmp
lds
call
loop
fsub
test
mov
sub
xor
out
sar
iret
cli
loope
out
neg
hlt
jmp
fimuls
leave
lock
shr
in
xlat
fcmovne
fucomp
xor
fmul
shr
mov
mov
lret
cmc
out
xor
stc
xor
stc
ror
clc
les
xchg
call
fsubrl
loope
ret
aad
fldz
cmc
rcr
xchg
and
mov
test
std
mov
icebp
rcl
stc
hlt
into
clc
lock
int3
sti
in
test
icebp
in
fcmove
shr
fucomi
jmp
repnz
cmp
fdivr
out
shl
ret
jecxz
shr
sbb
roll
cs
das
cli
neg
repz
div
les
fmull
jmp
mov
lock
loope
rcl
in
repnz
sbb
cli
xlat
ljmp
mov
and
repz
in
enter
shl
sti
idivb
xlat
sub
sti
in
stc
lea
in
cs
shl
lock
rcr
out
fildl
mov
loope
xlat
sti
sub
in
les
aad
cmp
std
fidivrl
call
out
idiv
std
fdivr
and
mov
in
faddl
int
shl
ret
xor
int
stc
lret
adc
sti
cld
test
fisttpl
and
loope
fyl2x
aaa
aam
fprem1
call
sub
fstp
stc
cli
leave
fucomi
in
pop
divl
xor
xor
int
cmp
hlt
xor
into
into
shl
loope
cld
imul
in
out
shl
rcl
out
aam
ljmp
jmp
cmpl
in
sti
leave
shr
cld
aam
int3
int
lret
xor
roll
shl
div
loope
mov
repz
ror
shll
not
xor
out
cmp
repz
and
lret
mov
jmp
mov
jmp
enter
cld
xor
cmp
xlat
leave
stc
in
aad
in
decl
xor
into
enter
cmp
sti
aas
in
cld
jecxz
fcom
cld
loop
ljmp
out
mov
out
ss
lret
aad
aam
repz
roll
ret
hlt
fiaddl
shr
ds
ss
int
cld
xlat
int
cld
fdivrp
int3
cld
out
icebp
std
ret
cmc
loopne
cld
int
shr
in
fucom
xlat
mov
lret
cmp
cmp
loopne
testl
cli
mov
in
icebp
jecxz
xor
std
out
cmp
repnz
sar
iret
sbb
orl
nop
out
repz
call
hlt
out
not
loope
clc
out
loopne
loope
out
test
leave
out
int
repnz
out
xlat
repz
cld
sti
loope
lds
std
ljmp
shr
loop
call
xlat
in
repz
in
add
cmp
xchg
fcmove
xchg
div
repnz
fcomi
sar
cmp
adc
ds
cmc
out
leave
out
call
or
icebp
repz
lret
cli
sar
out
aad
repnz
in
ds
out
nop
jmp
into
loope
lret
shr
xor
sub
rcl
call
xchg
int3
mov
shl
cmc
call
xor
cmp
aam
lock
rcl
xlat
ret
std
test
clc
in
test
xor
cli
neg
xlat
enter
cmp
cmp
aam
cmp
jecxz
icebp
in
repnz
movzwl
mov
mov
jmp
ds
int
int
int
mov
xor
gs
mov
jl
add
fmulp
sti
lret
xor
enter
cmc
fcmove
cmp
in
xor
in
call
repz
loope
xor
call
lret
fcomip
out
int3
cmp
cmp
ret
xchg
int3
and
into
int3
int3
les
neg
aam
loope
in
repz
xchg
out
sub
in
in
call
rcl
fdiv
leave
lret
cmp
loope
loopne
std
in
loope
lock
aad
ljmp
cmp
cmp
std
loopne
jecxz
fstl
fldcw
into
idiv
bnd
test
out
fxch
out
in
mov
jmp
sub
not
fsubr
stc
repz
jecxz
fimull
out
test
not
in
call
loope
cmp
in
fdiv
movl
xchg
nop
test
sub
repz
lret
aaa
repnz
aam
sar
jmp
call
call
shl
aaa
xor
lock
cli
add
shl
xchg
cld
sbb
out
call
repz
sar
fidivl
clc
cmp
into
cmc
cmc
jmp
or
jmp
sub
xor
repnz
stc
repnz
cmp
call
xlat
jecxz
in
leave
mov
test
mov
aam
out
mul
ror
cmp
fcomi
stc
aad
ret
aam
fcmove
enter
rolb
lock
cmc
aas
rol
lret
int
fidivrl
sar
call
sbb
iret
cld
in
out
shl
hlt
ds
hlt
xlat
fnsave
fdiv
jecxz
and
repz
std
mov
loope
lock
xchg
or
imulb
xor
in
icebp
into
roll
sti
loop
orl
fcom
ss
cli
repz
in
in
lret
mov
and
fucomp
in
int
jecxz
fdivrs
hlt
in
repz
testl
mov
in
int3
cmp
out
fimuls
in
xor
xor
int3
frndint
ffree
clc
jecxz
idivb
mov
in
repz
shr
fxch
fucomi
shll
cli
call
lock
in
add
mov
mov
fcmovne
out
int
out
not
cli
out
out
repz
in
cli
test
fucomi
lea
fcmovu
cld
not
ds
idiv
in
fdivs
int
ds
std
shl
loope
in
out
mov
fcmove
out
into
xchg
jmp
enter
out
cmp
fdiv
fdivrp
fldz
rolb
xchg
cli
loop
iret
lret
lret
xor
xor
cmp
aam
fidivrl
aas
test
rorb
fucom
lret
repz
ret
call
jecxz
lock
icebp
cli
or
test
lret
enter
ljmp
lret
aaa
cmp
fdiv
int3
aas
rcr
mov
out
jecxz
cld
std
adc
lea
iret
out
call
mul
rcr
loope
in
iret
sar
xchg
ror
repz
fldln2
call
fstpt
int
out
out
cld
test
mov
jmp
mov
jmp
xchg
repz
jecxz
xor
shl
xor
aas
fnstcw
adc
imul
ror
ljmp
rol
rcr
fincstp
into
fcmovnbe
cmp
ds
ret
sar
xlat
orl
nop
lock
out
rol
cmp
enter
addb
rcl
xchg
movb
rcr
icebp
call
ret
fldlg2
std
int3
into
cmpl
cmc
rol
xlat
in
int3
mov
in
xor
xor
cmp
ss
repz
clc
sti
into
xor
xor
in
stc
mov
xchg
jmp
int3
in
fnstenv
out
xor
fst
aam
rol
test
loope
int
int
xchg
into
aam
cmp
cmp
call
enter
movzwl
xor
add
mov
jmp
rcl
ret
fst
xlat
inc
dec
push
lods
xchg
mov
jl
lret
jl
mov
jecxz
out
jmp
nop
out
pushl
repnz
cmp
repnz
xlat
cli
ds
int
icebp
shl
std
adc
out
dec
lret
in
loope
leave
clc
repnz
xor
iret
enter
cmp
cld
iret
addl
mov
jecxz
xchg
lock
test
idiv
aam
in
aas
xchg
out
shl
mov
stc
mov
out
fisttps
aaa
jmp
fnstenv
repz
clc
fdiv
aam
cmpb
fcmovb
in
out
hlt
sar
xor
jecxz
cmp
shl
sbb
cli
testl
fildll
jmp
shl
xlat
stc
ds
incb
int3
enter
into
shl
aam
into
in
cmp
sar
neg
shl
aas
out
call
ficoms
in
cmc
leave
repnz
fst
adc
fld
sarb
test
test
rcl
sub
ss
test
cmp
fstpt
shl
loope
call
xchg
mov
fucomi
xchg
out
xlat
cmc
jecxz
aam
jmp
sti
cld
lock
in
in
sti
cli
nop
adcb
repz
idiv
fld
xor
loope
in
fcmovb
div
shl
ljmp
mov
cmp
aad
lret
aas
in
sar
repnz
fldl
sti
iret
into
and
iret
out
jmp
rcl
call
cld
cld
loopne
cli
enter
out
cli
in
mov
mov
cs
rcl
aaa
repnz
lret
int
out
loope
jecxz
hlt
cmp
neg
lret
leave
sti
mov
int
and
ds
xlat
icebp
enter
cmp
ds
lret
sti
mov
lock
in
xor
call
repz
cmp
int3
sbb
loop
cmp
clc
fcmovu
into
mov
loopne
enter
sub
iret
cmc
hlt
out
cmp
repz
test
fucomip
mov
in
lock
int
add
xor
cli
fnstsw
cmp
fsubp
aaa
clc
ret
test
lret
orb
in
lock
cmp
addl
jmp
jmp
xchg
xchg
cmc
icebp
sti
xor
icebp
fsubr
lret
out
fistpll
out
rcr
add
in
in
in
imul
ljmp
xor
repnz
clc
ljmp
fucom
sti
out
in
rcr
int3
into
jecxz
xor
loop
int
cmp
fdivr
cmp
inc
std
fucom
testl
leave
lds
div
xlat
in
cmp
fdivrl
stc
dec
and
cld
clc
ds
hlt
in
in
sti
ljmp
jmp
jecxz
repnz
lret
cld
loopne
fcmovnu
ror
hlt
ret
ljmp
icebp
rorl
jmp
repz
cld
xlat
icebp
sarl
fnstcw
loop
ffree
out
enter
dec
leave
jmp
xor
std
iret
icebp
xor
xlat
xlat
xlat
fdivrp
std
fsub
fabs
mov
hlt
repnz
clc
clc
ljmp
int
ljmp
mul
loopne
test
loopne
adc
xor
in
ss
ret
std
hlt
cmpb
add
loope
loope
jecxz
lock
xor
xor
in
iret
call
div
aas
fcomi
clc
cld
leave
mov
cld
out
lret
jecxz
out
out
in
ror
aas
cmp
std
aas
ret
rol
out
lock
jmp
sbb
xchg
mul
ss
repnz
out
stc
adc
not
in
loope
iret
xchg
cmc
imulb
ljmp
loopne
fdiv
hlt
test
out
out
shr
lret
fildl
lock
clc
jmp
sti
cmp
cmp
call
aam
rolb
loope
fdiv
call
xor
out
sar
cmc
ljmp
ds
mul
shr
and
test
mov
mov
jmp
aad
enter
fsts
push
lret
mov
lret
jl
les
loopne
in
xor
in
int3
out
fdivrl
faddl
fisttpll
mov
call
ljmp
leave
cmc
jecxz
imul
rcl
div
decb
fdivp
iret
ljmp
fcom
leave
hlt
std
cmp
loop
test
adc
test
loop
mov
fdivp
loope
out
loop
fmul
xor
adc
cld
stc
shl
std
out
flds
mov
repnz
clc
lds
call
lock
test
clc
fnsetpm(287
cld
jmp
faddl
in
shr
in
in
les
shl
clc
in
dec
testb
out
lock
in
leave
aaa
aad
jmp
lock
in
sar
aad
xchg
shl
repnz
xor
ror
cmp
fcmovnu
cli
in
out
test
in
in
loop
or
repz
xor
call
xor
ret
loope
les
in
jmp
xchg
loopne
jecxz
lret
out
sarl
int3
out
sti
div
xchg
leave
cld
rorb
jmp
out
in
ljmp
clc
fcmovnb
hlt
ret
fdivr
test
fiaddl
iret
out
in
fsub
aad
jmp
loopne
aam
cld
cli
ds
cmc
dec
fcmovbe
lea
out
int
cmp
xor
cmp
fninit
fsub
test
ds
in
adc
xchg
lret
mov
rol
cmp
fxch
in
repz
loop
push
fndisi(8087
sar
fdivrp
lret
jecxz
out
xor
ret
icebp
int3
xor
out
ror
cmp
roll
out
fildl
mov
ret
hlt
aaa
aam
cmp
shl
std
aam
rcr
ret
orb
std
lret
icebp
iret
xchg
repnz
int3
shlb
sti
sar
jmp
shl
out
sti
fimuls
xchg
xor
shr
shr
fdivrl
loop,pt
stc
into
test
in
loope
fucomi
jecxz
fucomip
in
hlt
lret
aad
in
cmp
aam
out
idiv
fdivp
mov
jmp
cmp
aaa
leave
xor
cli
aam
clc
xlat
aam
repz
test
int3
loop
cmc
int
repz
sub
shl
call
cmp
and
leave
loopne
std
enter
rorl
in
xor
fsubr
leave
dec
cli
sar
fdivr
mov
sti
mov
mov
loop
xchg
iret
loope
xor
hlt
hlt
les
cmp
into
lret
repnz
jmp
in
cld
mov
cli
loope
fsubr
shl
aaa
jmp
repz
std
loope
cmp
rcl
iret
rol
repz
loop
faddl
jmp
ljmp
fmul
in
into
jecxz
cmp
int3
fistpll
and
neg
std
sti
std
faddp
icebp
mov
lock
stc
not
shr
fldlg2
aaa
ds
fdiv
jecxz
jecxz
shr
aad
add
mov
jmp
aad
xor
not
aas
shl
rolb
sti
mov
fcmovne
into
xchg
xchg
hlt
xor
iret
into
repz
xor
ds
sar
cmp
addb
into
rolb
icebp
jecxz
aad
leave
fdivp
fdivp
loope
loop
incl
jecxz
mov
cmc
xor
hlt
out
in
xor
iret
jmp
int
ret
xchg
fsubp
test
loopne
call
rol
stc
in
cmp
lret
out
fcmovbe
sti
call
rolb
hlt
filds
loop
loop,pt
repnz
cmp
sar
cmp
out
ret
in
ret
test
sub
out
in
out
lret
out
div
xor
rcl
fmul
loopne
iret
shl
loop
jmp
mov
xchg
cmc
jecxz
xor
f2xm1
shl
and
fdiv
sar
jmp
xchg
in
xor
out
aas
ds
leave
stc
loop
cmc
cmp
jmp
lret
xlat
aas
fst
fcmovne
mov
imul
lret
jl
cmp
stc
hlt
ret
leave
loop
in
sti
enter
mov
lret
xor
aad
lock
std
std
fcomi
fdivr
out
shl
clc
fadd
fcompp
fcomi
into
std
aam
ror
cmc
cmc
aaa
fcmovb
cmc
cmp
xor
aas
loopne
cld
lret
loope
out
xchg
fisttps
xor
rcl
stc
testl
ljmp
cli
into
repnz
sub
sub
repz
clc
fucom
repz
sarb
mov
fisttpl
ljmp
neg
in
sti
out
fidivrl
std
in
std
aad
clc
mov
into
mov
loop
iret
repz
aam
rcl
xor
xor
in
neg
fstp
fdivrp
mov
lret
sar
xor
sti
fsubr
sarb
addb
fiadds
out
std
fiadds
aam
int3
iret
cmp
cld
shl
out
jecxz
repz
hlt
fimull
icebp
not
stc
hlt
rol
xor
aam
xor
int
in
shr
clc
clc
enter
jmp
jmp
faddp
int
fsqrt
call
loope
out
in
test
std
lret
cld
sub
ror
fsubrp
out
ret
hlt
repz
cmp
icebp
repnz
cmc
idiv
cmc
mov
not
out
test
call
rcr
sar
cmp
xlat
loopne
div
int3
xchg
in
mov
mov
adc
in
loop
faddl
xor
out
in
clc
cld
xlat
ror
aaa
hlt
cli
fcmovu
mov
loop
in
ficoml
sub
jecxz
repnz
icebp
lock
cmp
roll
enter
std
shr
xchg
shrb
not
cmp
cmp
idiv
out
out
xlat
xlat
loope
out
out
std
fcmovnu
in
call
int
shr
stc
xor
cli
ss
int
xlat
lock
loope
hlt
loopne
sub
ljmp
out
loop
hlt
repnz
cmp
clc
add
cmp
cmc
std
out
cli
cli
shr
jmp
fsubr
aaa
cli
jmp
test
vcmpss
aad
xchg
in
mov
test
xor
div
in
into
int
aas
sarl
cmp
call
out
out
sti
lock
repnz
ds
rolb
fldpi
test
hlt
mov
sub
out
hlt
std
out
int3
in
test
les
cli
xchg
xchg
rcll
repnz
iret
cld
sarb
idiv
xor
in
out
fst
leave
fucom
enter
icebp
cld
int3
mov
out
rol
aam
repz
out
iret
lret
loop
ret
cmpl
rcr
cli
ret
lret
xlat
orl
repnz
out
jmp
out
cld
cmp
aas
fdivr
fcmovne
out
incl
out
into
fsub
orb
rcr
idivl
ljmp
sti
std
cmc
ret
out
ljmp
loope
lret
jmp
cld
clc
cld
hlt
shl
cli
lret
out
sti
cli
ljmp
in
out
clc
iret
cs
enter
fld
ret
jmp
std
xchg
loopne
jmp
iret
cmp
out
fdiv
ds
sbb
iret
test
xchg
orl
repnz
out
xor
ror
ret
shr
repz
fdiv
in
aam
test
loop
aam
lret
nop
in
xchg
xchg
lock
xor
jecxz
test
ds
sti
shl
mov
xchg
iret
loop
cmc
aam
jmp
lock
fnsetpm(287
aas
out
ret
adc
and
out
ljmp
call
aad
int
cli
lock
fcmovb
ret
mul
out
out
fsubrp
in
ljmp
ljmp
fiaddl
clc
flds
or
xor
loop
cli
xor
iret
cmpl
aas
test
shl
cmp
jne
pop
pop
jmp
int
into
fcmove
fst
aam
lods
push
dec
mov
jl
lret
jl
in
ljmp
jmp
fcmovnu
aaa
fcmovu
shl
rcr
xlat
out
cli
cmp
ljmp
ret
ret
fnsetpm(287
xor
xor
fld
xor
cld
bnd
ljmp
rclb
iret
jmp
icebp
fldlg2
cli
hlt
in
ret
fdiv
fadd
ret
loopne
test
fdivr
test
test
in
cmp
leave
lret
ljmp
ds
cmp
mov
fsubr
into
ret
iret
jmp
cli
aad
enter
lret
repz
cld
fcmovu
jecxz
mov
mov
sti
into
into
aam
shl
leave
icebp
cmp
xlat
lret
jmp
fdivr
hlt
out
cli
aad
mov
cli
repz
mov
in
aad
repz
in
xlat
cmp
std
out
filds
lret
enter
in
mov
ror
ror
icebp
out
test
sar
fdivr
fcmovnu
fmul
aam
xchg
std
dec
in
test
xor
not
int
cld
fucomp
cmc
cmp
mov
fsubr
lds
enter
xor
mul
xor
out
in
std
into
fcmovnbe
fdivrp
rcl
clc
fmull
in
jecxz
call
repz
div
rcl
repz
int3
aas
clc
rol
lret
mov
xor
shl
stc
shl
call
shr
mov
roll
sub
lret
rcl
repnz
shl
out
jecxz
shl
in
aam
decl
mov
shl
imul
lret
xor
int3
call
out
cmp
mov
std
loopne
in
int3
out
fucom
sub
shll
enter
push
cmp
cmp
sar
xlat
call
ret
int3
out
mul
hlt
repz
jmp
jmp
fsub
xlat
rol
loopne
in
orb
into
test
loope
fnstenv
call
repnz
in
shr
cmc
fildl
or
lret
out
enter
in
cmp
cmp
aas
loopne
aad
xlat
mul
out
ljmp
xchg
in
repz
in
loop
cmc
sarl
aas
std
cli
cmp
xlat
loope
cli
rol
sti
in
in
test
call
loop
aad
fcmovnbe
call
ror
shl
clc
roll
jmp
in
mov
enter
jmp
aam
aam
fcomp
ffree
loopne
repnz
loope
in
test
fucomip
out
ljmp
lret
in
shlb
sarl
sti
test
sub
rorl
fbstp
clc
loope
aad
ret
fdiv
idivb
test
stc
mov
into
out
sbb
lock
in
icebp
stc
xlat
xor
jmp
std
rol
repnz
cld
xrelease
test
ror
sub
ret
fsincos
jmp
jecxz
rcr
shl
mov
cmp
popl
fucom
sub
cmp
ljmp
fiadds
xabort
loope
fcmove
out
mov
icebp
out
loope
sar
xor
cs
sti
lret
faddp
clc
rol
cmp
cld
in
xlat
mov
icebp
sar
mov
lret
repz
cli
repz
in
fiaddl
sti
movl
rcl
in
cs
cld
leave
xor
ret
hlt
jmp
mov
loope
jmp
jmp
fcomi
cmp
std
aam
into
iret
xchg
mov
mov
in
out
ror
mov
int
xor
lret
out
bnd
addb
xlat
sub
xchg
rorl
rol
sti
in
cmp
rcl
flds
test
xlat
mov
clc
loopne
out
repz
fxch
int3
cmp
aam
std
xlat
cmp
stc
and
fcmovb
xchg
lds
in
mov
cmc
fld
cmc
leave
cmp
call
loopne
cmc
loop
lock
mov
jmp
mov
fptan
les
loop
inc
clc
mov
xor
add
mov
mov
xor
add
mov
mov
jmp
sarl
rcr
ret
fucomp
pop
xchg
scas
pop
jle
jl
add
xor
idiv
rcl
xchg
out
leave
push
call
aam
ss
xor
enter
hlt
aad
cld
aad
mov
fdivr
aad
cld
icebp
jmp
or
ret
in
in
cs
call
incl
mov
les
lea
iret
fcmovnb
shll
and
fdivrl
stc
repz
test
jmp
lock
aad
loop
xlat
ljmp
ss
rolb
in
repz
xchg
out
stc
xlat
aam
in
lock
in
loop
aam
cld
xor
loopne
rcr
leave
xchg
in
mov
cmc
sti
out
out
cmp
sti
aas
sti
fsubp
lock
call
sub
fnstenv
fsubrp
sti
div
std
shl
xor
neg
cli
jmp
lret
lret
int
cs
jmp
leave
sar
fsubr
icebp
in
les
jmp
ljmp
in
out
xor
clc
cmp
jmp
cmc
aam
flds
cmp
iret
std
out
faddl
in
cmp
out
fdivrs
cmp
xlat
hlt
ds
enter
and
popl
iret
cmp
in
jmp
call
stc
rcl
in
cmc
ret
fdivr
nop
mov
xor
aad
aaa
mov
into
sti
ds
aas
fcmovnbe
rcl
sti
jecxz
icebp
int
rorb
out
in
out
cli
fdivrs
into
in
cmp
iret
mov
idiv
ljmp
jecxz
icebp
call
std
cli
enter
fstp
sti
into
loope,pt
aad
lret
xlat
mov
out
in
iret
xchg
xor
lock
loope
cmp
fdivrs
neg
xchg
icebp
loop
into
xor
fucomi
iret
repz
stc
xorb
shl
out
out
mov
loopne
xlat
cmc
in
lock
cmc
loope
les
fcos
hlt
sti
lret
enter
cmc
iret
out
aad
lds
cmc
xor
fcmovnbe
xor
repnz
xlat
clc
jmp
ret
std
in
enter
leave
cli
cmp
repz
aam
cld
xlat
leave
icebp
out
icebp
int
loop
lock
shr
fnstsw
shl
fdivrp
aad
xlat
mov
ret
push
lret
rclb
jmp
cli
call
or
loop
aas
sbb
lea
repz
icebp
xor
cmc
in
int3
int3
xor
cmp
clc
icebp
out
loop
in
mul
mov
jecxz
faddl
in
stc
lock
in
cmp
in
lock
into
loope
repnz
jmp
loop
out
jecxz
jmp
aam
cmp
xlat
shr
idiv
iret
cmp
cli
fadd
sar
leave
lret
in
into
lds
ss
xor
idiv
rcl
fidivrs
hlt
clc
ffree
enter
faddp
fsubp
xor
fpatan
jmp
clc
cmp
aam
rol
icebp
repnz
out
in
stc
ljmp
and
vaddsubps
into
cmp
cli
aam
loope
int3
out
lock
fld
out
lret
nop
loop
hlt
mov
repz
aad
repz
cmp
out
jmp
test
lret
loope
nop
or
push
rcl
fldl2e
xor
enter
in
hlt
rolb
ret
xchg
dec
jecxz
ljmp
rol
call
in
cmc
ljmp
repz
lret
les
xor
int3
repnz
into
cld
cmp
loop
ss
leave
ffreep
mov
ljmp
jmp
fsubp
shl
xor
rcl
cmp
loope
int
ret
ret
imul
ljmp
test
xor
xor
cmp
cmp
push
in
test
jecxz
loopne
lret
jmp
cmc
fprem1
out
fcmovnbe
icebp
hlt
loopne
ret
cli
cmpl
inc
add
add
ror
ds
ret
or
aad
mov
lret
jl
out
fiaddl
cld
out
xor
xor
hlt
in
fnstsw
cmc
repnz
xlat
movl
orb
jecxz
hlt
fstp
aad
jmp
cmp
cld
fstp
mov
not
out
jmp
jmp
ljmp
out
cmp
aaa
repnz
add
ds
in
fisttpll
jmp
aaa
aaa
jmp
in
roll
fcomi
cmc
mov
sti
mov
iret
aas
hlt
out
repnz
xor
fmulp
stc
shl
test
cmc
mov
sbb
out
lds
xor
shl
int
sti
hlt
int
ss
fsub
ret
out
sti
mov
into
loope
loopne
rol
lret
aaa
aad
cmp
into
lock
mov
mov
lret
leave
iret
aam
rcl
lock
into
rcl
inc
cmc
xlat
fcmovne
iret
clc
call
xor
idivb
xor
xor
fmulp
sar
loope
hlt
sti
out
mov
mov
out
lock
aaa
xor
xlat
divb
aas
in
rcr
cmc
repnz
loop
xchg
loope
rclb
int
fcomi
aaa
cmc
out
out
out
shr
aas
ret
in
in
decb
in
inc
vshufps
out
aaa
into
jecxz
ds
fisttps
sub
lock
out
cmp
cmp
shr
cmc
aam
mov
rcr
hlt
sbb
stc
call
sarl
aam
fadd
lock
xchg
std
jecxz
xor
ljmp
or
les
out
xchg
in
cmp
loope
idiv
call
cmp
jecxz
std
testb
test
test
into
mov
test
cli
ljmp
rcr
aas
repz
std
mov
jecxz
xchg
aam
xor
mul
fcmovnbe
aaa
fdivr
fistpll
into
cmc
sbb
std
loop
mov
xchg
and
aad
sar
loop
ret
cmp
ss
cmp
fsub
adc
int3
fxch
out
fstp
mov
in
int
call
cmc
shl
ds
cmp
test
in
in
pause
mul
loop
in
leave
shll
ss
test
mov
orb
ror
shl
enter
lock
and
std
enter
cli
fisttpll
xchg
in
fpatan
out
fdiv
in
fcmovnu
repz
aas
jecxz
lock
vpsrld
fmull
fstp
repz
out
ss
cmp
fucom
cmp
aad
loope
or
jmp
int3
out
xlat
int
clc
in
repnz
aam
jmp
in
test
aam
jmp
in
lret
div
incb
jmp
in
testl
fincstp
repz
shr
lret
fucomi
fxch
rol
cmp
call
jecxz
int3
in
loopne
in
ljmp
fidivrl
xor
ds
hlt
test
int3
ljmp
loop
fcmove
fidivl
repz
sar
shl
shl
xlat
fmul
out
jmp
stc
xchg
loop
out
out
call
cld
call
loop
jecxz
call
int
orl
aam
ljmp
cmp
fidivrs
idiv
div
mov
mov
leave
out
loopne
icebp
into
aaa
fcomp
call
cmp
sar
sti
int3
cli
call
shl
jmp
xchg
iret
leave
loop
loop
sub
out
hlt
jmp
lock
into
xlat
xorl
cli
faddl
rcll
jmp
cld
xor
lret
idiv
not
leave
in
repnz
out
out
push
cmp
je
mov
mov
mov
jmp
lret
aam
fcomp
aad
andb
dec
sti
pop
pop
push
jg
lret
jl
stc
in
xor
fdivs
iret
idiv
xlat
cmp
shl
loop
idiv
test
cli
lret
shll
jmp
jmp
aam
rcl
sti
jmp
sub
das
cmp
xor
test
int3
fcomp
out
or
les
sti
lret
enter
nop
int
call
cmp
repnz
shl
fsubp
xchg
jmp
xor
jecxz
repnz
cmp
cmp
cmp
ret
out
loop
cld
mov
out
shl
in
sub
rcr
in
fsub
in
loope
test
repnz
lret
iret
iret
ror
aam
enter
fdivr
cmp
and
stc
not
rorl
int
in
lea
out
out
xor
icebp
cmp
cmp
cli
repnz
test
filds
out
loope
fsubp
lret
enter
out
cld
fdivr
fadd
into
std
lock
in
xchg
call
sub
xlat
lock
hlt
cmp
int3
lret
ds
loope
fcmovnb
cld
cli
addl
sub
int3
cmc
int
enter
iret
loopne
dec
lock
decl
out
out
jmp
enter
ds
clc
jmp
cmp
xchg
iret
hlt
in
shlb
ror
aad
sti
cli
cld
out
or
iret
cmp
aad
cli
out
sar
enter
subl
clc
repnz
cmc
xlat
fiadds
addb
xchg
sub
iret
aaa
cmp
idivl
sar
sarb
in
test
pop
clc
in
sti
std
call
cmp
fcmovbe
stc
fmulp
repnz
test
hlt
fcomi
sti
loopne
out
into
repnz
fcom
out
clc
xor
cmp
mul
out
fidivrl
in
mov
in
mov
das
div
lock
ror
ljmp
cmc
repnz
ret
cld
div
dec
jmp
int
lock
aam
leave
xor
fcomi
fcom
aad
fdivp
into
xchg
movl
repnz
mov
repz
cli
movb
fdivp
clc
test
cli
out
repnz
int3
out
in
ss
fsubr
icebp
cld
xor
fldl
sar
decl
loop
jecxz
aam
in
cmp
out
aad
icebp
hlt
loopne
aam
repnz
orb
fisttpl
jmp
jecxz
int
jmp
sar
loopne
sbb
ret
sti
int
in
test
test
in
call
cmp
cmp
cmc
rcr
test
sti
loope
out
xchg
inc
shll
jmp
sarl
shl
stc
lock
loop
mov
out
adc
aam
int
in
fdivp
shr
idiv
std
std
hlt
repnz
add
xchg
ljmp
lock
jmp
clc
cmp
roll
loope,pt
loop
call
enter
xchg
shl
into
into
xor
aam
sti
fstp
loop
aam
rolb
ljmp
nop
icebp
out
shl
iret
in
repz
loopne
int3
fistpll
rol
cmp
std
fcmove
icebp
out
adc
repz
cmp
std
xor
rcr
icebp
xlat
loopne
movb
int3
icebp
fmul
jmp
aad
xor
shl
cmp
lret
ret
sub
lret
lret
loop
shll
out
out
xlat
repz
enter
int3
stc
test
mov
test
mov
out
in
int3
rolb
cmp
jmp
jmp
sar
lock
ret
xchg
mov
xchg
cs
out
xor
into
std
in
sti
rcl
aam
lock
in
int3
cld
icebp
std
leave
sub
icebp
fsubp
ljmp
sar
in
clc
in
cmp
cmp
jmp
mov
fcmovnb
in
mov
inc
fldcw
jl
jmp
sti
xchg
fcmovnb
loop
in
xor
jmp
fidivrl
enter
xor
sar
fiaddl
in
fimull
icebp
sub
iret
mov
fdivs
repz
clc
sti
sti
ret
cmc
mov
mov
xchg
test
cld
repnz
cmp
ret
out
cmp
cmp
stc
shl
in
sarl
loopne
xchg
loopne,pt
icebp
shl
in
out
lret
in
into
xor
jmp
repnz
stc
repz
orb
leave
lock
fld
jmp
cld
out
not
out
aad
les
test
iret
cli
lret
or
shl
lock
xor
ss
aam
fcom
jecxz
lds
xchg
in
popl
aad
idiv
lret
lock
ror
fmulp
mul
jecxz,pt
leave
jecxz
jmp
out
xor
cmc
xor
lock
cmp
ss
neg
in
rcl
cmc
cmp
xchg
addl
xor
cmp
in
cmp
out
xor
in
mov
call
clc
shl
xor
std
lret
stc
lock
loope
ret
rolb
xchg
in
xchg
xor
aas
leave
cmp
ljmp
cld
orl
addl
lock
repnz
sti
cmp
sar
sbb
lret
cmp
loope
xchg
fmuls
enter
in
call
cli
repz
cld
in
lret
out
jecxz
sub
mov
ljmp
shl
cmp
shl
ffreep
cmpb
leave
jmp
enter
cs
xor
jmp
aad
xchg
mov
hlt
fmul
test
and
in
jecxz
fstpt
sti
stc
idiv
stc
rolb
jecxz
leave
fmul
mov
in
test
sub
iret
xor
aaa
in
shl
cmc
aad
xlat
fdivr
fsubp
jmp
fiadds
int3
jmp
cmp
lock
stc
icebp
clc
call
cmp
in
fidivs
lret
xlat
hlt
cmp
lock
sbb
xlat
hlt
loope
ret
out
and
out
fmul
loopne
or
das
out
div
in
cli
fmulp
shl
test
addb
xchg
std
in
fcom
mov
iret
hlt
icebp
imul
ds
int3
cld
cmc
call
ljmp
mov
lret
shl
in
cmp
loop
xlat
rol
mov
and
repz
nop
sub
fdivs
cmc
xlat
cld
cld
into
cmc
ret
fiaddl
sti
test
out
add
aaa
loopne
aad
jmp
cmc
loopne
or
adc
fcmovnb
add
rclb
aaa
cmp
xor
int3
idivb
aad
ds
fisttpl
fcmovnu
int
fldl
jmp
fcomp
lock
cli
repz
fimuls
movl
shl
cmp
out
ss
cmp
fldl2e
cmp
idiv
rcl
loopne
in
clc
mov
lock
in
cmp
out
in
cli
lret
xor
fadd
fldpi
cld
aam
add
xchg
in
out
sub
repz
rcr
int3
div
cmp
iret
ret
xchg
fld
in
xchg
fcmovne
lret
into
out
sub
sub
lds
std
ss
ljmp
call
add
fsts
ljmp
in
aas
xlat
fprem1
std
fcmovnb
mov
fmulp
call
in
test
out
int3
int
call
int3
std
add
in
xchg
loopne
and
std
into
cs
in
fabs
testb
ds
out
ljmp
call
fcmovne
in
aad
repz
cmp
rcr
jmp
cmc
ret
fnstcw
test
fstp
mov
jne
mov
mov
movsbl
xor
jmp
rcl
rcr
int
add
out
adc
lret
jl
out
loop
sar
enter
in
aad
int
rol
repz
fcmovnb
shl
test
test
std
divb
shl
out
rcl
aad
ret
in
iret
in
leave
mov
cld
shr
xor
in
shr
aad
aam
fcmovnb
aad
sar
loop
lret
mov
out
leave
cmc
out
icebp
iret
enter
out
loope
aas
fst
ds
loope
ret
jecxz
leave
xchg
sub
xor
ret
fcmovnb
std
enter
rcr
sub
int3
ret
faddl
mov
fucomp
lret
repz
out
xor
int
xor
int
ss
loopne
out
hlt
repnz
fiadds
ret
mov
jmp
in
cmc
into
shl
int3
xor
out
sti
cmp
in
xchg
into
in
loope
xor
cmc
in
out
iret
ror
in
sti
faddp
fcmove
rol
out
hlt
fstp
hlt
mov
out
icebp
repnz
aad
xor
sar
leave
icebp
lock
out
out
enter
shr
into
repz
jmp
fsubr
shr
lock
fmul
clc
lock
test
cmc
repz
lock
repz
mov
xchg
cli
in
repnz
int3
icebp
cmc
xor
out
fnstcw
fidivrl
sti
cli
ds
xlat
xchg
out
cmp
xchg
mov
cmc
jecxz
ret
cmp
test
fcomi
mov
out
in
out
cli
sar
repnz
mov
aam
sti
fcmovnbe
xor
icebp
repz
aam
loopne
in
or
nop
mov
loope
out
stc
fldt
iret
hlt
aaa
aaa
clc
ffree
rol
rcr
in
leave
loope
test
leave
out
mov
xor
out
out
lock
cmc
fmul
icebp
cmpb
cmc
mov
jecxz
in
xchg
mov
int3
lret
aam
aaa
call
cmp
cmp
cli
filds
cmc
jecxz
cli
jmp
int3
mov
out
into
fmulp
shr
int
out
lret
cmp
cmp
cli
sarl
rorl
clc
orb
fsubr
xor
stc
jmp
cmp
loope
lret
in
clc
stc
sub
out
in
ret
test
sub
flds
int3
repnz
hlt
cmc
hlt
int
out
lret
in
loop
loop
in
xor
cld
repz
shlb
rcl
test
fsub
stc
jmp
into
repnz
shl
cmp
stc
xlat
div
into
jmp
aam
fdivrp
mov
xchg
in
nop
out
ror
xor
in
fbstp
ljmp
sar
hlt
addb
shl
aad
out
rol
fidivl
repnz
xor
cli
fcmovnbe
rcr
aad
fld
call
jmp
loopne
into
cs
cmp
int
in
stc
aam
ret
fcmovnbe
xlat
hlt
ret
ljmp
call
shll
in
xor
int
lret
fcmovnbe
int3
clc
rolb
ljmp
mov
rol
in
cmp
out
neg
in
cmc
ret
ret
jmp
out
fmul
lret
xlat
xor
call
cmp
neg
test
aas
addb
out
addl
lret
xor
aam
aad
cmp
adc
jecxz
loopne
out
xchg
xchg
xor
jecxz
in
call
cmp
in
loope
call
jmp
mov
sti
jmp
xor
into
clc
aam
out
fnstcw
sarl
out
ret
fdivr
fdivr
lret
xlat
int
and
aam
lret
lret
rcl
sti
int3
repnz
out
ret
mov
xchg
loop
in
jecxz
fcoml
repz
in
xor
fsubr
aad
int
repnz
ret
fadds
rcr
xchg
loope
repz
cmp
cmp
jmp
cmp
sti
mov
lret
std
loop
in
mov
xlat
repz
xor
cmp
je
movl
jmp
rcl
rcl
roll
mov
pop
dec
adc
jl
fcomp
rol
fptan
mul
in
mov
enter
rol
stc
call
out
fcmove
sarb
cmp
shr
cmc
sbb
enter
jecxz
fsubp
div
ljmp
loope
into
cli
call
idivb
test
hlt
mov
fsubrp
icebp
fdiv
loope
in
in
int3
jmp
adc
loope
std
fldl
fcmovne
cld
cld
lea
out
ror
cmp
jmp
or
loopne
fincstp
sti
xchg
sti
jmp
ficoms
in
xor
fnstsw
repnz
aam
fdiv
int
fadd
cmp
mov
mov
mov
loopne
out
call
div
incb
test
ret
decl
loopne
std
xchg
lret
in
lock
call
rcr
xor
out
jecxz
aad
cld
aas
mov
jmp
std
idiv
enter
icebp
repz
imul
ds
int3
sti
add
in
lea
xor
aam
ss
jmp
lock
enter
cld
cmc
loope
aad
loope
mov
addb
xor
iret
fcmovnbe
test
neg
rcl
repnz
and
mov
std
leave
in
fmull
das
jmp
xor
in
cmp
fistpll
out
neg
clc
std
enter
jecxz
out
out
ljmp
test
cmp
ret
sar
jmp
in
into
ljmp
into
shll
shl
in
fcmovnu
out
mul
sarb
sti
ret
fucom
int3
fadd
call
nop
out
ret
cmp
call
sti
ds
fmul
cmp
out
enter
call
loopne
into
repz
xlat
fcmove
aas
fucomip
aad
clc
sti
jmp
sti
fcmovne
fucomip
in
fsub
int3
jmp
mov
aaa
lock
enter
lock
in
stc
les
jmp
in
test
ljmp
enter
cmp
out
in
fdivr
xlat
ret
loop
iret
mov
nop
rol
jecxz
icebp
xor
ss
lock
into
incb
clc
out
fcmove
loop
lea
rol
out
leave
in
cmc
aad
fsubp
xlat
ror
shl
test
ljmp
in
jecxz
int3
call
rcr
fld
sbb
aad
shr
aad
sub
loop
nop
mov
fldcw
ror
lret
std
aad
jmp
loope
int3
cli
nop
or
mov
in
loop
leave
loop
jmp
idivb
rol
idiv
not
repnz
jmp
clc
jmp
lret
repz
loopne
fsub
iret
ljmp
in
shl
xlat
shl
test
clc
repz
in
hlt
shll
ret
jecxz
out
cmp
ljmp
xchg
stc
lret
out
cmc
out
out
icebp
div
in
out
neg
cmp
or
stc
idiv
and
out
iret
loop
out
xor
out
aad
xor
shl
fmulp
clc
aam
call
mov
jmp
stc
aam
cmp
cld
rcl
fucom
repz
xchg
cmp
jmp
clc
mov
repnz
lret
cs
cli
div
loope
addl
rcr
fdivrp
in
iret
mov
lock
call
aam
xor
cmp
fsubp
idivb
xor
imul
leave
mov
sbb
xchg
in
xor
aaa
jecxz
hlt
out
int
cld
fstp
sti
cmp
xlat
mov
jmp
shr
ljmp
lock
icebp
repz
rcr
testb
cld
in
out
shr
jmp
xor
iret
leave
xor
shl
clc
mov
std
fsubrp
in
rcll
int
into
xor
icebp
ret
aad
cmc
aad
mov
incl
int
clc
loop,pn
xor
xlat
enter
aaa
fcomip
out
shl
mov
inc
call
add
lret
ret
int
jle
rclb
adcl
add
xchg
in
lret
das
ror
stc
cmp
rcr
fucom
test
in
ret
jecxz
fcmovb
movb
iret
stc
enter
in
rcr
sar
repnz
test
in
mul
in
decl
jmp
idiv
iret
neg
in
cmp
iret
stc
jecxz
in
ret
jmp
mov
fucomp
mov
lret
repz
hlt
xor
lock
icebp
clc
std
cmp
lock
clc
shr
xlat
mov
enter
mov
fldz
int3
test
in
aam
lock
shr
in
repnz
loopne
iret
nop
jmp
enter
cmp
aam
cmp
fmuls
out
out
rcl
jmp
in
lock
loop
hlt
xor
in
cmp
repz
leave
sub
mov
xor
hlt
enter
out
fsqrt
stc
ds
aas
loopne
ljmp
ret
out
aaa
int
aam
ss
cmp
aad
clc
jmp
fld
nop
cmc
stc
loopne
call
rcl
enter
loop
fdivp
ret
enter
out
jmp
stc
loop
out
stc
lock
repnz
loope
shl
cmp
jmp
in
jmp
icebp
out
cmp
cmp
rcl
xlat
stc
in
shl
loope
xlat
call
in
ret
xchg
or
repz
loope
lret
loope
cmc
in
ds
ret
or
fisttpll
mov
loope
xor
out
cmp
cmp
out
fdivp
test
fildl
lret
xchg
out
shl
into
sti
jmp
fcmovnb
sub
std
stc
repz
test
mov
fninit
ljmp
sub
std
enter
cmp
fbstp
aas
fstpt
fst
cld
in
clc
jmp
enter
ljmp
cmp
fdivrs
rcr
xchg
hlt
in
rol
clc
out
in
xchg
xchg
aam
sub
lock
out
cld
loope
loopne
iret
test
jecxz
mov
loop
xchg
loop
xchg
shl
cmp
fucomp
out
int3
ret
lds
hlt
ret
movl
xor
xlat
std
aam
out
addl
test
enter
mov
fmulp
ror
clc
hlt
xlat
into
icebp
xlat
imul
cmp
stc
fnstsw
sbb
xchg
incb
ret
in
call
ss
sar
out
roll
out
iret
lret
out
out
jecxz
fcmovb
sar
lret
fdivp
hlt
inc
repz
lret
out
fcomip
std
out
ljmp
ss
cli
enter
adc
cld
rol
test
fsub
lret
fmul
in
into
out
in
or
rol
shl
out
fucomi
ss
out
in
int
cmc
sti
fcomp
mov
testb
mov
in
lret
int
fnstcw
iret
out
xlat
repz
mov
cld
ror
shl
aaa
in
loopne
aaa
stc
cs
fdivp
cmp
aam
ds
mov
xchg
jecxz
out
xchg
xchg
shl
xor
jmp
cmp
icebp
loopne
mov
aad
faddl
addl
icebp
cmc
aas
std
fcmove
cli
ret
sti
mov
jecxz
jmp
icebp
sub
enter
call
aas
cmp
fyl2x
repz
shl
stc
fadd
cmp
mov
loop
iret
jmp
fdiv
cli
and
fcmovnb
ret
idiv
and
stc
addl
rcl
leave
jmp
aas
fnstcw
lock
lock
div
fucomip
loop
lret
xchg
xchg
icebp
mul
cs
cmp
cmp
fnstsw
xor
cld
and
leave
cld
loop
mov
in
xlat
cmp
xor
xor
shl
out
stc
cli
clc
shr
in
ljmp
loope
xchg
out
int
iret
rorl
in
addl
mov
jmp
rol
into
ret
rcl
aad
pop
repz
add
pop
add
lret
jl
into
cli
rolb
fcmovu
ljmp
test
aam
in
int3
xlat
cli
lret
leave
cmp
fmul
cmp
mov
idiv
fucomip
leave
out
mov
mov
lret
repz
shr
xlat
lock
cmp
std
sti
fucom
leave
xchg
fninit
icebp
test
in
jmp
mul
bnd
stc
enter
clc
aas
fmulp
fcomi
mov
in
xchg
out
rcl
in
out
xor
ljmp
repnz
xlat
xchg
test
loopne
iret
jmp
ror
out
call
cmp
push
xor
incl
cmp
rorl
mov
int3
repnz
int
in
cmp
out
loope
aam
cli
in
clc
iret
nop
shl
out
aaa
xor
sti
lock
sarb
stc
icebp
aad
in
in
test
imul
aad
and
enter
enter
rcr
lret
cmp
xor
rcr
out
fdivr
cmp
sub
jmp
xor
cmp
enter
ss
in
out
out
call
loope
mov
in
out
xlat
fdivrs
fstp
fadds
rcr
mov
hlt
sub
in
iret
repz
hlt
out
xor
xlat
enter
cmp
cmp
test
rcl
shl
xor
in
cld
in
lret
sub
xor
std
iret
rolb
sti
fdivr
jecxz
int
vpsrad
shl
fcom
fcomi
fdivr
clc
ds
in
mov
icebp
out
fcmovne
in
xchg
das
imul
ret
xor
out
jmp
into
clc
rolb
std
loop
mov
in
cli
mov
fdivr
int3
imul
in
enter
clc
rcr
xor
loope
enter
sub
mov
roll
xor
lret
cmp
clc
shl
sar
jmp
fisttpl
xor
loopne
ret
out
xor
fsubr
cmp
loopne
out
jmp
into
in
lock
shl
call
pushl
lret
lret
aas
fcomi
aad
aam
int
stc
in
out
xchg
cmpl
fnstcw
lock
repz
ret
cmp
cld
mov
out
in
std
fsubrp
loop
mov
sub
jecxz
aaa
in
jmp
iret
iret
xor
neg
fildl
fucomi
mov
out
rol
jmp
xor
into
sti
fdivrp
sar
repnz
testb
rcll
imul
stc
fdiv
hlt
shr
cmp
shl
jecxz
stc
imul
loopne
in
rolb
cmp
lret
aam
call
fstp
in
mov
in
out
fmull
das
lock
out
stc
out
repz
cmp
repnz
xlat
adc
out
in
test
out
rol
cmp
fcmove
in
f2xm1
jmp
int
adc
xor
in
out
fiaddl
repnz
xor
ret
cld
out
in
std
test
shl
cmp
aam
leave
lret
rorb
clc
out
hlt
in
in
in
shl
cmc
rcr
les
xchg
in
addb
repz
out
cmc
cld
rcl
in
sti
icebp
mov
fstp
fildl
leave
addl
sar
aaa
ds
lret
fcmovnb
xchg
lret
decb
in
mov
xlat
xor
lret
sti
out
repnz
in
aas
out
icebp
lock
loope
rcr
jecxz
repz
out
cmp
out
cmp
jmp
cmp
add
in
xor
xchg
iret
das
lret
fcmovnbe
out
out
cmp
xor
loope
incl
call
loope
ret
out
jecxz
das
cmp
ffree
aam
fyl2xp1
mov
out
cld
lret
int
xchg
in
xlat
int
xor
aaa
sarl
cmp
out
out
push
or
rorl
add
add
add
int3
ret
ds
jge
jae
pop
xchg
pop
sbb
lret
jl
fcmovnu
int
test
lret
sub
xor
shlb
ljmp
in
test
xchg
shl
sti
or
out
test
xchg
ljmp
xor
clc
jmp
icebp
cmp
cmp
aas
mov
les
loop
xor
out
xor
out
into
xor
loope
std
cmp
std
mul
enter
int
mov
loop
lock
test
lret
ret
fsubr
loopne
push
orl
fcmovnb
stc
leave
rcl
fcmovu
cmp
iret
hlt
fpatan
cmp
loopne
int3
fnclex
call
iret
ljmp
fucomip
fcomp
rcr
ret
jmp
out
leave
nop
fldl
xor
cmp
sarb
loope
rcr
fsub
addb
mov
lret
icebp
xor
cmp
xor
test
repz
in
lret
lret
xchg
sti
cli
mov
xchg
shl
fld1
lret
lret
out
jmp
int3
xlat
aam
not
fucomp
mul
test
out
iret
xchg
xchg
enter
jecxz
mov
ror
clc
shr
fiadds
loope
xchg
lret
lret
hlt
aaa
cli
out
lret
fst
in
repnz
xchg
addl
fcmovne
lea
into
div
leave
ljmp
xlat
addb
out
out
out
mov
xchg
cs
mul
clc
ljmp
repnz
out
test
neg
in
loop
mov
inc
out
into
sar
out
ljmp
out
incb
fcmovnu
test
ljmp
xor
hlt
cli
cmp
test
repnz
jmp
out
out
fucomip
jmp
loop
ljmp
out
xor
push
aaa
loop
loop
adc
test
xchg
fstl
enter
cli
jmp
not
sar
lock
fsubp
enter
loopne
fldl
out
in
icebp
rol
jmp
hlt
fdecstp
rcl
aaa
repz
repz
in
and
xchg
jmp
repnz
stc
jmp
hlt
aam
sti
leave
clc
fcomp
in
sti
mov
fdiv
mov
ljmp
jmp
stc
shl
xchg
stc
xlat
mov
jmp
repnz
sub
aam
out
int
cmp
cmp
aas
cmpl
ds
mov
mov
xchg
mov
nop
out
sub
enter
xor
jmp
rol
std
loopne
ffreep
mov
icebp
leave
dec
mov
ljmp
call
ret
not
in
mov
nop
xchg
rorb
jecxz
out
jmp
fcmovbe
sti
xlat
aam
in
rcr
fdivr
mov
out
loope
lret
fxch
out
fstpt
shl
cmp
cmp
cli
mov
dec
int
fsubrp
mov
cld
shr
out
in
in
ljmp
rcr
test
loope
std
ret
mov
icebp
xor
cmc
ror
call
xor
xor
ljmp
repnz
sub
jmp
stc
call
repnz
cli
loopne
fdiv
mov
enter
lock
xor
rcr
ss
test
cmp
cmp
add
les
loop
test
jmp
cld
int3
ljmp
sarl
repnz
lds
adcl
cmc
hlt
ss
fcmovnbe
filds
fsub
jmp
stc
stc
icebp
in
loopne
mov
test
out
cmp
iret
incb
leave
loope
mov
mov
lret
icebp
ljmp
fidivrl
int
std
stc
stc
xlat
incl
rorb
in
roll
ret
xor
cmp
xor
aam
sarl
repnz
in
int3
ljmp
ljmp
aam
decl
add
add
rol
ds
fcmove
fisubrl
dec
xchg
add
jg
lret
jl
fxch
stc
ljmp
in
sar
jmp
out
lret
repz
in
jecxz
xor
ss
cld
cli
cmp
cmc
mov
mul
xchg
lret
lock
mov
fdivp
call
cmp
aad
cmp
cmc
ret
test
decb
rclb
xor
jmp
iret
aas
jmp
cmp
faddp
fldl
mov
rcr
jecxz
repz
int3
ljmp
call
rolb
mov
fdivr
repz
jecxz
lret
xlat
icebp
xor
jmp
repnz
sarl
xchg
rol
sti
in
xlat
test
jmp
jmp
into
xchg
ljmp
fistpll
loope,pt
test
ret
ds
into
ret
out
cmc
mov
int3
xor
loop
lret
xor
cli
cld
aas
rcl
cmc
ret
in
cli
ljmp
fucomi
mov
subl
aad
in
int
out
cmp
cld
cli
repz
call
xchg
xchg
xor
loop
lret
cli
fbstp
aam
aam
test
out
xlat
aam
leave
and
xchg
ror
ljmp
test
xchg
leave
repnz
fcmovnu
nop
fnstsw
lock
call
lret
iret
rcl
aam
loopne
fucom
cmp
in
in
call
test
in
sub
aam
div
mov
adc
shl
rcl
leave
std
in
icebp
clc
sub
div
icebp
jmp
fidivl
clc
lock
fdivrs
cmp
loop
enter
icebp
xor
sar
ss
cmp
shl
sub
out
out
fucomi
mov
repnz
lret
fcmovu
shlb
loop
fidivl
fcmovbe
ret
mov
int3
jmp
in
enter
hlt
lret
in
clc
into
cmp
aas
shr
testl
mov
das
das
ret
into
ret
into
leave
xor
int3
ds
ret
repz
stc
fadd
ljmp
int
jmp
int3
shr
out
jmp
int3
cmp
aam
clc
cmp
aam
jecxz
int3
cli
test
jecxz
jmp
neg
cmp
aas
cld
clc
adc
jecxz
orb
xchg
jecxz
icebp
cmp
cmp
idiv
in
aas
cli
imul
out
aam
out
shl
sti
sti
mov
out
repnz
shl
cmc
xlat
fcom
icebp
loopne
ret
test
mov
xchg
out
das
repnz
lret
fdivs
ss
test
loop
sub
loop
orb
int3
jmp
into
jmp
xor
sar
test
cld
test
cld
loop
leave
lock
xchg
loopne
mov
fldl2t
cmp
cmp
sar
icebp
xlat
aas
in
sti
cmc
ljmp
mov
iret
loopne
shl
cmc
ror
idivl
clc
aas
mov
cmc
iret
decb
mov
enter
cli
cmp
ljmp
loope
test
out
fcmovne
fdivr
out
into
out
rcr
enter
in
int
in
aad
fdivr
fcmovnbe
cld
orb
jmp
out
jmp
fcom
xor
cmp
rcr
sbb
lock
call
lea
std
mov
ret
lret
icebp
cmp
aad
cli
hlt
in
ret
shl
ljmp
iret
mov
enter
repz
aas
loopne
aas
fld
cld
leave
enter
std
lret
call
cmc
fcmovnbe
mov
hlt
shl
adc
cmc
stc
sbb
in
mov
int
lea
jmp
cli
sti
not
cmc
icebp
adc
out
aad
hlt
mov
pop
xor
call
call
stc
aad
clc
xchg
jecxz
test
loop
shl
loope
lret
hlt
xor
jmp
aam
sar
cmp
fadds
add
add
ds
rcr
fsubr
push
std
rolb
into
sub
lret
jl
hlt
mov
mov
into
xor
cs
hlt
leave
cmp
fcomi
rolb
cld
clc
mov
xchg
int3
aas
fdivrp
hlt
stc
rcr
cmp
xorb
hlt
xchg
enter
out
stc
iret
in
ljmp
out
xor
in
hlt
lock
call
int3
out
cld
mov
in
in
cmp
ss
leave
out
rcl
ds
repnz
in
fcmove
jmp
ljmp
aam
rcl
neg
cmp
addl
mov
loope
vpsllq
iret
fdivr
call
iret
into
adc
cld
add
fucom
out
cld
shr
icebp
in
sti
xor
out
sarb
std
ret
adc
addl
stc
loope
repnz
xor
test
fiaddl
cmp
mov
in
jmp
in
stc
cmp
das
clc
cmp
aad
and
mov
lret
cmp
mov
fiadds
ret
fcomi
int
cmp
in
fcomip
aaa
stc
loopne
mov
loopne
out
sbb
mov
rol
hlt
ret
cmp
rcr
fdivr
cmc
sarb
repnz
rol
lret
ljmp
rcr
jmp
into
cmp
cli
fsub
cmp
std
cli
adc
jecxz
xchg
int
lret
aas
xor
mul
idiv
fmul
jmp
xor
sti
loop
fucomp
div
mov
dec
lock
leave
enter
lret
lock
jecxz
ds
cmp
jecxz
call
out
test
repz
ss
xor
cmp
ret
hlt
out
icebp
xchg
rcl
ror
ret
lret
jmp
aaa
sti
fidivs
xchg
jmp
loop
mov
mov
lock
call
fxch
std
fxch
enter
not
stc
stc
ds
fisttpl
jmp
ljmp
leave
clc
cmc
xor
aad
fldl
or
xchg
nop
jmp
xor
in
ljmp
icebp
rcl
loope
mov
lret
sub
lret
aad
out
repnz
in
div
aas
xor
fxam
div
xchg
loop
ror
jmp
ror
clc
std
xor
in
sar
icebp
clc
aas
les
xor
in
mov
in
jmp
fstpt
in
repz
lock
out
in
in
in
lret
xchg
mov
int
lret
ss
xor
sarl
cmp
in
and
hlt
cld
mov
in
loope
ret
xlat
ss
fsubr
lret
lock
aam
rcr
fmull
fildl
xlat
in
shl
sar
fmulp
fcomi
ret
in
loopne
cmp
mov
icebp
nop
ljmp
lret
shl
jmp
in
icebp
fcmovnu
ffreep
in
xor
loope
cli
int3
jecxz
in
loope
xor
cmp
out
clc
aas
ret
icebp
cli
fstpt
jmp
faddp
loope
icebp
lret
jmp
cmc
fcom
hlt
lret
sar
fstpt
out
xchg
xchg
call
fiadds
ret
xlat
in
rol
fcmove
cmc
aad
ret
roll
loop
fsubrp
mov
aaa
shl
aam
xor
cmp
dec
adc
jmp
loop
jmp
out
iret
fucomip
cmc
out
lret
in
in
iret
in
fld
out
stc
add
addl
in
in
int3
int3
aas
leave
int
rol
jmp
int3
in
in
test
shr
aam
out
clc
mov
loop
mov
mov
ret
das
lds
ljmp
incl
clc
call
stc
icebp
nop
xchg
out
shl
aad
iret
fsub
out
out
xor
repnz
fidivrl
addl
cmc
aad
jmp
leave
in
fsubrp
loop
mov
jmp
fcmovnbe
int
loope
insl
lahf
add
and
jl
add
xlat
jmp
cmc
lock
hlt
lock
sti
aam
call
mov
jmp
ljmp
cmp
test
leave
ret
in
int3
mov
faddl
jecxz
leave
xor
sti
std
jmp
aad
orl
xchg
enter
jecxz
xchg
fisubrs
fcomp
xor
into
incl
rol
inc
aam
les
cmc
icebp
hlt
fidivs
shr
xor
out
aad
adc
aam
leave
fcmovu
cld
sbb
call
repz
cmc
jecxz
cmc
div
lock
cmp
xlat
int3
jmp
incb
adc
lret
out
cmp
fildl
test
cld
into
fimuls
loop
in
xor
das
in
call
fld
faddp
test
fdivr
aam
mov
mov
in
xor
imul
iret
sub
lret
aas
lret
aas
ds
xlat
in
fcompp
mov
sti
in
call
adc
icebp
call
aas
cmp
addl
cld
fsubr
loopne
mov
sub
xor
leave
fdivrs
rcl
ljmp
ret
cmp
mov
enter
in
aad
aaa
leave
stc
hlt
movb
ds
xchg
incl
cs
aam
leave
lret
xor
fcom
cmc
ror
jecxz
aas
cli
testb
jmp
aad
icebp
jmp
out
xlat
lret
rolb
xchg
jecxz
fiadds
int3
fcmovne
icebp
aaa
sub
cmc
out
jmp
div
cmp
fsub
fsub
loopne
cld
lret
mov
addl
cmp
out
cs
enter
ret
fldl
loope
loope
mov
into
xchg
xor
aas
jecxz
xor
xor
jecxz
ror
cmp
call
xchg
in
in
shr
cmp
repnz
loopne
fcomip
repnz
ds
cmp
mov
in
adcl
iret
aad
int3
jmp
lock
jmp
faddl
test
xchg
in
sub
hlt
shr
std
icebp
fmul
cmp
aad
xchg
jecxz
in
orl
test
lock
hlt
lret
ret
cld
aaa
enter
out
in
xchg
xchg
mov
std
loop
iret
aam
repz
std
lock
shl
lock
hlt
loope
mov
ret
leave
out
repz
loop
xor
xor
call
xlat
cmc
lret
stc
cmp
and
fiaddl
clc
ret
mov
out
in
hlt
lds
fcomip
fcmovne
add
fcmove
jmp
decb
mov
leave
not
enter
loope
lret
mov
aam
out
nop
jmp
fucomp
rcl
rol
stc
sar
int
iret
fistpll
lock
lock
sar
in
test
in
loop
iret
xor
fyl2xp1
xlat
cli
leave
out
aam
xor
testb
jmp
xchg
rolb
loop
aam
xbegin
fcmovnbe
cld
ret
jmp
sti
out
stc
repz
mov
ds
cmp
lret
ss
loope
fadd
neg
test
enter
adc
dec
jmp
out
loop
out
test
jmp
dec
jecxz
testl
repnz
in
fdivl
sar
hlt
hlt
cmp
fiaddl
sti
nop
cmp
fucomp
repz
aad
std
cmc
lret
cmp
std
in
loop
repnz
mov
xchg
lret
xchg
repnz
hlt
xor
clc
cmp
cmp
aas
clc
repnz
faddl
lock
adc
in
lret
out
cld
loope
call
lret
iret
loop
in
fadd
in
call
into
test
clc
in
xor
cmp
add
jmp
iret
iret
sarb
aad
aad
pop
sbb
pop
push
jl
add
cmp
icebp
test
jmp
mov
fmul
icebp
cld
out
loope
into
xor
icebp
icebp
cmc
sti
ds
add
lock
mov
into
int
lock
aad
call
cmp
jmp
and
faddp
hlt
ret
mov
test
rolb
in
repz
hlt
ss
aam
loop
stc
rol
into
cli
fcmovu
ljmp
aad
in
out
loop
ljmp
cmp
test
mov
enter
ror
jmp
repnz
cmc
ror
xor
xlat
sar
aam
roll
call
xchg
loop
enter
cld
stc
cmp
cmp
fimuls
or
enter
lret
xlat
sub
cmp
shl
enter
cld
ds
in
test
jecxz
repnz
in
int3
les
aad
sar
repnz
iret
shr
ds
adc
rol
leave
out
std
out
fucomip
int3
loopne
std
int3
rcr
loope
fcom
stc
stc
test
out
neg
std
fdivrp
lret
sub
ds
ret
not
int
push
cmp
shl
out
loope
out
mov
fcmovnb
mov
in
call
lret
ret
out
jmp
sbb
addl
faddl
sub
icebp
sub
cmp
in
cmp
rolb
cli
testl
test
aad
aaa
jecxz
ljmp
adc
sarb
loop
enter
mov
cmc
loopne
jmp
cmp
int
int
in
cmp
into
testb
loop
fsubr
lret
lock
bnd
in
cmc
call
in
ret
in
sbb
out
int
lret
leave
popl
out
aam
cli
cmp
aas
loop
adc
cmc
cmp
jecxz
jmp
aaa
jecxz
xor
in
fnstcw
jmp
fsub
repnz
into
jmp
rorl
rol
out
rcr
cld
fcomip
xlat
fdivr
repnz
ret
jmp
out
into
in
mov
enter
lock
shr
lock
out
hlt
shr
aad
filds
test
loopne
enter
repnz
cmp
cmp
adc
iret
clc
fucomip
repnz
cld
mov
ret
out
out
xchg
ljmp
call
lret
xor
int3
hlt
fdiv
rorb
stc
shr
loope
xchg
aad
xor
fsub
cmp
int
ljmp
sbb
ffree
sti
call
test
fsubr
repz
ss
loopne
ljmp
shl
lea
cli
xchg
out
loop
repnz
icebp
out
ror
jmp
cmp
fcomi
iret
jecxz,pt
test
test
jmp
mul
das
cmp
lock
fcmove
enter
loop,pt
out
call
ficoms
out
xor
rol
stc
hlt
xor
lret
clc
int
out
aad
testl
call
lock
cmp
std
adc
fsin
roll
mov
in
fisttps
shl
fnstsw
call
cmp
loop
loop
ret
cmc
in
sbb
in
rcll
aad
in
cmp
aaa
movb
addb
in
jmp
enter
repz
cs
cs
enter
cmp
xor
fadd
cli
shl
fsub
int3
iret
mov
icebp
out
xlat
lret
cld
in
repz
rcr
int3
fdiv
movl
out
hlt
shl
out
in
cld
stc
out
xor
aad
jmp
out
fildl
ljmp
cld
iret
cmc
shl
icebp
aam
cmpl
decb
fdivr
rcll
mov
xlat
fdivrs
fdivrp
into
repz
cmp
lret
les
pop
leave
ret
push
mov
jmp
rol
rol
fstp
dec
lahf
push
dec
jl
cmp
add
into
shl
into
xor
leave
fcomp
in
cmp
cmp
cli
hlt
shl
cmc
cld
shl
ret
mul
mov
jmp
int
shl
in
xor
roll
loop
ret
in
stc
loopne
sub
int3
sar
ljmp
out
in
out
xchg
mov
test
enter
fdivp
ret
xor
das
int3
hlt
sar
fstp
cmp
cmp
jmp
jmp
xor
call
leave
ror
ds
idiv
xchg
jmp
ljmp
icebp
cmp
int3
repnz
test
test
clc
cli
in
testb
test
in
loop
neg
clc
out
fnstenv
cmp
dec
cmp
cmp
bnd
out
ret
add
iret
mov
ss
sti
sarl
out
xlat
call
rcr
fcmovnu
test
test
ljmp
aam
test
cmp
lds
ret
cld
xchg
test
or
clc
vpsrlw
les
icebp
in
push
fdivp
sarb
fadds
in
out
loop
loopne,pn
vcmpss
fdivr
call
jecxz
into
idivb
cmp
cld
call
fdiv
shl
fidivl
aas
fxch
int3
shl
fcomip
rol
mov
call
xor
shl
xlat
das
xor
hlt
out
jmp
cmp
fmuls
stc
xchg
icebp
xchg
out
out
aam
enter
or
add
jmp
loope
ljmp
int3
icebp
repnz
rcr
cmp
fcmove
cmpl
cld
ret
mov
fdivrp
fadds
icebp
leave
in
repz
into
int3
out
int
cmp
sbb
fadd
shl
hlt
fdiv
fadds
rol
out
ljmp
cli
shl
aas
loop
ffree
test
ljmp
shll
ret
aad
cmp
loope
ret
ret
loope
repz
fadds
fsub
icebp
enter
call
lock
repnz
std
rolb
clc
out
fisttpl
ds
clc
hlt
fadd
aas
cmp
in
shl
fmulp
jmp
fadds
xchg
out
int
clc
fcmovbe
aad
loope
filds
test
jmp
fsubr
fdivr
xchg
in
in
int
repz
fsubrp
lret
fnstsw
rolb
std
sbb
cli
enter
sub
in
enter
cmc
loopne
loope
mul
loopne
jmp
clc
fmuls
repz
int3
fxch
call
xlat
aad
ds
out
out
fcmovu
out
hlt
in
fcos
cld
ljmp
ret
cs
jecxz
int
aam
loopne
cmp
flds
test
cmp
lea
cmc
sub
repnz
repnz
cmp
cmp
test
call
mov
nop
aaa
in
loope
in
iret
incb
aam
test
clc
xlat
std
std
test
test
sub
out
lret
shr
aad
lret
in
ret
rolb
in
and
sar
loop
loopne
xor
lock
rol
shl
in
stc
ret
jmp
jecxz
iret
call
jecxz
int3
iret
icebp
cmp
aad
cmp
fcomp
jecxz
lds
loop
jecxz
iret
lret
cmp
leave
icebp
sarl
fcomip
cmp
loopne
cmp
out
xlat
std
mov
iret
fcomi
int
repnz
cmp
out
out
xor
fistpll
jmp
fiadds
in
fdivrp
mov
xchg
jecxz
shlb
lret
das
std
fstp
call
idiv
cld
ror
fcmovnu
in
in
out
mov
cmp
lret
sti
mul
fcomp
call
xlat
fdivrl
sti
jecxz
loope
test
fsubrp
std
shl
ficoms
fdivs
aad
cmp
rcr
aad
ftst
xlat
mov
test
and
or
call
fprem1
stc
stc
xlat
ljmp
xlat
out
jmp
fcmovu
iret
std
xchg
incl
shl
das
ljmp
repnz
cmp
int3
mov
xor
icebp
lock
out
out
fdivr
sti
out
aad
std
cli
mov
lret
xchg
xchg
aad
out
in
leave
in
lret
fcmovu
clc
jmp
shl
flds
aad
xor
jecxz
call
aaa
loop
xor
push
movl
jmp
into
rol
aad
rcl
jmp
pop
sub
cmp
jl
xor
aad
fmul
cmp
ret
cmc
shl
aam
ret
ljmp
enter
in
shrl
cli
xor
les
clc
sar
lock
in
clc
out
decl
loop
roll
shlb
call
loopne
aas
test
cmp
ds
mov
aas
in
sbb
iret
xchg
iret
in
out
cmc
lret
sti
fmul
out
sar
shr
fsubp
jecxz
cli
enter
loop
out
mov
fucomip
xor
call
cmp
into
roll
int
test
lret
xor
shr
ror
repnz
fscale
into
std
sarb
ret
fdivp
in
enter
nop
or
fdecstp
repnz
iret
xor
lret
lock
rolb
int
cli
lret
xor
stc
jecxz
into
aaa
int3
jmp
shl
rol
loope
repnz
jecxz
ficoms
call
cld
iret
cli
ret
aas
clc
iret
out
cmp
cmp
addb
xor
loop
repnz
das
xor
or
cmc
cli
hlt
clc
in
sti
xchg
mov
out
in
call
aad
aam
fstp
divb
rcr
sti
cmp
clc
aad
repnz
loopne
ljmp
call
aad
cmp
iret
int3
fcomp
adc
rcr
out
loopne
fndisi(8087
fldz
mov
xchg
test
mov
cli
out
icebp
lret
in
ret
test
repnz
std
out
xchg
mov
iret
cmc
cmp
cmp
leave
shl
ret
neg
iret
roll
out
addb
jmp
fcmovnbe
hlt
stc
jmp
div
cmp
mov
sbb
faddl
cli
repnz
das
ror
xor
aad
ret
repnz
fstp
icebp
div
xchg
in
decl
lds
out
fucomp
enter
in
jmp
iret
out
ds
xlat
sti
cli
enter
in
mov
xor
out
cmp
cmp
in
faddp
adc
cmc
fmuls
xchg
mov
out
ret
rcl
int
int
in
out
sbb
dec
lock
fdivrp
fisttpl
xor
rcl
in
int
shl
cs
repnz
in
sti
rcl
mov
xlat
int3
fchs
rolb
lock
lret
jmp
out
into
into
sar
loopne
cmp
or
clc
out
into
roll
aad
in
xor
cmp
ljmp
loop
sbb
in
loope
lret
test
out
aad
iret
int3
fcmovnbe
rolb
mov
call
addb
repnz
sarl
cmc
shl
ret
jecxz
rorb
loop
nop
addl
leave
leave
ljmp
fdivr
faddp
incb
enter
out
into
fsubrp
loop
aaa
std
in
stc
enter
sar
aad
cmp
sbb
int
ljmp
int
in
xor
icebp
lock
shr
fcmovnbe
sar
aam
ffreep
lret
mov
std
rcl
xor
ret
icebp
out
cld
leave
in
xlat
fildl
push
xchg
call
int3
out
lret
xor
std
ss
aas
idivl
cmp
clc
aam
fmul
out
iret
int3
loope
ror
ljmp
jmp
xlat
fdivrp
sar
in
ljmp
lock
mov
loop
cs
lret
xor
cmp
ds
mov
sbb
in
std
lret
sbb
int3
rcr
leave
in
cli
cld
fmul
neg
fnstcw
cmp
rolb
jecxz
cli
fcmovu
fisttps
int3
cli
in
into
out
into
idivb
ret
hlt
test
fdivp
sar
sar
repz
mov
in
int3
xor
repz
call
fucomp
enter
cmp
testl
out
lret
ljmp
jmp
int
lock
rcr
out
aas
loope
fdivr
lock
aad
lret
in
clc
cld
lret
fmul
lret
addb
xchg
in
cld
xlat
call
xor
ljmp
out
enter
xchg
repnz
mov
mov
out
ficoms
test
aas
fucomip
ds
in
fsub
clc
aam
neg
addl
jmp
in
cli
aad
fucomp
adc
in
fcmovnbe
leave
mov
rcr
test
shr
cmp
ss
movl
mov
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
push
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
sbb
jmp
rol
enter
aad
add
xchg
push
xchg
xchg
sub
sarb
add
shr
clc
rolb
ljmp
lea
int
cmc
fdivr
shl
fcmovbe
cld
ljmp
testb
in
repz
int
sti
int3
xlat
stc
repnz
loope
mov
sti
fcmove
jecxz
in
mov
test
shr
stc
das
xor
cmp
in
ror
rcr
test
std
repnz
fsubr
jmp
in
out
repz
int
cmp
ljmp
ljmp
jecxz
test
int
shr
xchg
in
repnz
cs
xor
lds
into
cli
incb
sub
repnz
xchg
in
lret
in
in
shrl
ret
cli
ror
in
into
iret
int3
int
test
jecxz
mov
lret
and
icebp
xor
cmc
std
cmc
lret
aas
fsub
aad
cmp
shl
fucomip
in
mov
shrb
sti
enter
aaa
jmp
test
fstpt
repnz
lret
call
addb
in
test
fucomp
lret
lds
jecxz
loop
into
out
repz
rcl
lret
out
iret
sti
aaa
lret
jecxz
and
repz
ffree
cli
test
rorl
hlt
hlt
xor
cld
std
xlat
fmul
out
divl
int3
fadd
clc
repnz
fprem
fmul
jecxz
icebp
aad
xor
jmp
rcl
jmp
lret
loopne
call
out
incb
out
xor
xor
aad
cmp
stc
roll
in
aam
mov
fiadds
out
rcr
jmp
fucomip
aam
into
repz
mov
clc
jmp
leave
mov
in
shl
sub
ljmp
aad
filds
int3
std
rcr
lret
repz
rcl
iret
xor
fmulp
lret
jmp
jmp
shl
into
mov
shr
repz
xor
fcmovnbe
clc
clc
in
into
sti
loope
cmp
sti
stc
mov
out
iret
xchg
loop
out
xlat
out
fidivrs
iret
sub
div
mov
xchg
iret
mov
in
out
xchg
in
int
shl
out
mul
rcr
loopne
xlat
aaa
aad
rcr
jmp
mov
lea
in
xor
call
xor
fdivr
out
ret
cli
out
ljmp
mov
das
ret
out
out
cld
cmp
fdiv
into
lock
cmp
decb
addl
ret
cmp
in
div
sarb
cmc
ror
addl
in
in
mov
and
xor
fld
in
xor
cmp
jecxz
shl
ret
std
les
ljmp
hlt
out
lret
aad
fmul
aam
loop
test
test
fcmovnu
les
mov
enter
xor
xabort
leave
cld
adc
rol
testl
loopne
repz
call
enter
fcmovu
jecxz
test
stc
les
faddl
loopne
shl
cmc
int3
shl
out
xor
sar
cli
lret
in
xchg
loop
mov
call
loope
xor
in
out
out
out
jecxz
rolb
mov
xlat
loop
out
xchg
mov
sub
cmc
fsubr
repz
cmp
jmp
in
mov
in
xchg
shl
jmp
icebp
shr
cli
icebp
leave
rcr
fmul
fcomi
cmpl
repnz
sub
xchg
rcl
repz
cmp
aam
int3
call
shl
shl
fninit
cli
xchg
jecxz
loopne
ret
rol
out
sti
enter
cld
lret
rcr
sar
jmp
into
in
sub
out
lret
int3
ljmp
aam
fdivp
ss
cld
jmp
loope
jecxz
iret
shl
shl
xor
sub
rol
out
cmp
into
test
loope
cld
roll
jmp
shl
loope
ss
test
cmp
lock
hlt
in
jecxz
in
aam
in
into
in
or
loopne
lret
hlt
cmp
stc
out
aam
into
icebp
fcmovnb
loop
lret
xlat
fadds
xchg
ljmp
cmp
fxtract
cmp
cmp
cmc
rol
cmc
std
aam
in
sti
or
repz
cmp
cmp
cmc
cld
int
xlat
loop
ds
aad
std
movl
fmul
out
jmp
sti
std
cmp
std
cmp
out
fnstcw
hlt
out
jne
movzbl
and
mov
mov
adc
xor
or
jmp
int3
ror
fnop
xchg
sti
add
outsb
jg
les
add
shl
ret
aas
lret
test
stc
lock
shr
hlt
sub
jecxz
xor
sti
repz
sarl
les
in
xchg
or
fsubrp
ret
ror
iret
sti
cmp
sti
lret
fdiv
into
ds
cmc
mov
aad
ret
out
fisttpll
jmp
sar
ffree
rcr
cmp
rcr
stc
std
xchg
int
test
icebp
jmp
shr
cmc
xor
into
jmp
xor
adc
sti
jecxz
out
clc
sti
std
lret
adcb
xor
int
aaa
cmp
iret
in
in
shl
fcompp
mov
out
add
in
lret
ljmp
not
out
out
cmp
or
and
sti
xchg
mov
jmp
int
fxch
cmc
ret
les
les
decl
nop
mov
ret
clc
das
std
xor
repnz
rcl
sar
mov
hlt
test
lret
in
rol
icebp
sti
ljmp
stc
loop
fnstcw
cld
cmc
fstp
fucomip
into
decl
rcl
out
out
test
repnz
loop
into
aas
fcomi
out
lret
in
fucomp
xchg
rcr
cli
repnz
aas
repz
aad
std
xlat
fistpll
out
in
test
les
test
leave
xlat
lock
shl
stc
rcl
shl
out
decl
lock
jecxz
loop
sub
leave
sub
imul
neg
test
fdivr
ret
xlat
clc
lret
out
lea
jmp
xor
shl
aas
ljmp
out
sar
xchg
cli
in
cld
int3
repnz
loopne
fsubp
ret
iret
fucomp
test
cmp
loopne
loop
out
adc
in
loop
sub
icebp
hlt
ss
lock
leave
std
out
clc
addl
lret
fldl
xchg
les
hlt
fdiv
aam
cld
repnz
fdivl
clc
jecxz
mov
addl
xlat
jecxz
ror
out
shrl
stc
fmul
iret
lock
cmp
fucom
sbb
jecxz
loopne
in
xchg
int3
xor
fdiv
out
cmp
not
fucom
ror
out
cmp
fsub
xchg
clc
int
loopne
xlat
ret
fcmovb
fstp
repnz
cld
cmp
out
in
rcr
loope
fucom
cld
xlat
lea
out
ds
in
in
ret
iret
int
repz
cmc
in
faddp
rolb
mov
test
aaa
fcomi
ror
fiaddl
loopne
jmp
test
nop
out
fisubrs
jmp
cmp
ror
fdivp
into
icebp
out
fadd
out
mov
cli
jecxz
sub
enter
out
aaa
fincstp
aad
fdivr
aam
lock
in
out
mov
and
icebp
mov
int
sti
stc
lock
cli
fdivl
fcmovne
cmpl
call
rcl
test
xlat
int3
mov
jmp
incl
lret
enter
ljmp
bnd
out
in
nop
mov
jecxz
cmc
ret
out
ljmp
loop
out
idivb
aad
xchg
sbb
mov
cmc
in
xor
clc
sti
lock
shl
fcmovnb
sti
hlt
cmc
mov
in
sbb
call
loopne
fcomi
shr
jmp
ljmp
add
stc
mov
out
out
enter
cmp
bnd
in
in
cld
leave
loope
adc
enter
int
repz
aam
out
lret
aad
stc
icebp
aam
sar
out
test
sti
ret
clc
int3
out
in
into
rol
aad
cmp
in
loope
cmc
int3
iret
ret
cmc
sar
clc
leave
fucom
loopne
test
std
repnz
out
rcl
in
lock
cmp
aam
mov
std
fucom
or
lock
stc
enter
jmp
cmp
fcomp
cmp
aam
ljmp
in
cld
xchg
out
in
fcom
rcl
iret
sti
cmc
sti
jecxz
rcr
xor
loope
fsubr
lret
mov
ret
xchg
shll
out
cmp
lock
ret
sbb
ds
ret
loopne
leave
jmp
shr
iret
out
lret
iret
hlt
call
lret
shl
shl
std
testl
shl
xchg
into
sar
icebp
xlat
sarb
sarl
cmp
ds
xor
in
fxch
out
cld
nop
ss
sti
cmp
idivl
rol
test
shl
clc
xor
jmp
xlat
ror
fcmovu
fcmovne
sbb
mov
push
lret
jg
add
leave
int3
test
loop
int3
das
aaa
aam
icebp
fidivrl
repnz
xlat
cli
cmpl
out
ljmp
shl
shr
repnz
sarb
lock
sarb
icebp
fcmovnbe
test
xor
ljmp
lock
shl
sub
ret
fbstp
repz
addl
sti
loop
and
aaa
shl
aam
cmp
out
cmc
cmp
int3
aas
ds
sbb
lea
orb
jmp
aad
ss
rcl
in
jecxz,pt
cli
addl
xchg
mov
das
xor
call
icebp
ds
ffreep
fstpt
fcmovu
sbb
jmp
mov
in
xor
sub
shl
int
ss
clc
cmc
les
sti
rorb
jecxz
loope
mov
cmp
int
iret
cmp
dec
ffreep
jecxz
test
lock
ret
cli
lret
xchg
rcl
int3
cmc
leave
out
int
ret
hlt
cmp
lock
test
call
addl
out
xlat
jmp
repnz
loop
repnz
sbb
jmp
mov
out
cs
into
xor
out
iret
cmp
aas
fsub
loopne
fmuls
jecxz
dec
cs
ret
repz
cld
int
mul
into
into
cld
call
std
iret
call
in
ror
les
iret
cmc
int
jmp
aad
fneni(8087
fdivp
in
int3
mov
jmp
xor
xlat
xor
cld
ljmp
xchg
sbb
in
in
xchg
mov
xchg
fsub
rcl
les
leave
fcmovnbe
out
int3
in
loopne
rcr
rolb
popl
xchg
xor
jecxz
jmp
ss
shl
std
fcmovnbe
enter
lret
std
lret
int
shrb
ljmp
div
ret
call
aam
call
xlat
or
loope
rcl
div
lret
lret
cli
aaa
ss
int
in
repz
icebp
repz
cli
out
cmc
mov
ds
aam
xlat
cld
std
sarb
fistpll
in
test
cld
ret
enter
or
int3
mov
sar
jecxz
iret
call
neg
cmp
fiaddl
rcr
aam
ljmp
out
sar
out
call
cmp
idiv
test
enter
cmp
into
xchg
xchg
out
in
repz
xor
cmpb
test
xchg
ljmp
xor
not
cmp
fadds
ror
out
mov
jmp
in
jmp
out
lock
shl
xor
stc
loope
xchg
out
std
xchg
shl
in
xor
cmp
cld
std
ljmp
into
loope
clc
loopne
sti
ljmp
ror
int3
out
cmp
rcr
repnz
shl
cmc
jmp
test
jecxz
out
call
mov
lock
cs
cld
cmp
repnz
shr
sar
ss
jmp
rcr
int3
in
in
out
lret
imul
ds
aas
in
iret
cmp
mov
fldl
iret
out
repz
cmp
idiv
fdivp
neg
cmp
ret
in
lock
in
flds
iret
mov
lock
xor
xor
into
icebp
fcomip
int
cmp
fcmovu
xchg
inc
jmp
loop
and
in
cmc
ljmp
jecxz
out
repz
loopne
leave
push
fmul
int
repnz
repnz
ss
fmul
lock
fldl
jecxz
cli
mov
xchg
orl
out
cmp
fdivp
shr
hlt
xlat
out
loope
stc
test
cld
ror
cli
call
repz
cmp
aam
fiadds
in
test
popl
repz
aad
cmp
fadd
cld
test
testb
jmp
ljmp
aam
inc
loopne
icebp
addl
lret
mov
repz
jmp
jmp
fcmovbe
rol
loope
cmp
clc
call
cmc
repz
aam
int3
into
dec
iret
rol
incb
fcmovb
int
push
out
lea
call
icebp
repnz
loope
shl
in
fcmovu
clc
in
jmp
xchg
jmp
leave
ds
fstp
fnstsw
aaa
dec
jmp
mov
add
xor
in
divb
xor
hlt
shll
loopne
fcmovnbe
repz
shr
stc
addl
xchg
lock
in
shr
std
not
enter
int
in
jecxz
fimull
call
in
enter
ss
repz
aaa
call
iret
loop
hlt
cld
jmp
std
call
ljmp
sub
in
xor
aam
loope
in
ds
cli
mov
loopne
out
into
fucomi
lret
enter
std
lret
in
fcmovne
into
cmc
xorl
repz
std
xchg
icebp
aaa
into
into
enter
fmul
xor
fmulp
fstp
fdivr
fmul
ljmp
xchg
loope
xor
icebp
cmp
fcos
cmp
test
cmp
mov
in
mov
out
shl
ret
repnz
repnz
into
shr
stc
fcmovnu
test
hlt
neg
loopne
sti
repnz
mov
in
fimull
in
xor
out
idiv
xor
cmc
loope
cmc
shr
aas
or
jmp
fldln2
in
jecxz
repz
jecxz
fdiv
in
cmp
test
jecxz
idiv
mov
ljmp
sub
lock
cmp
xorl
cli
mov
std
mov
mov
shll
out
lds
cld
cli
stc
int3
repz
clc
stc
jmp
lret
cld
out
out
xchg
out
shl
sarb
fcomi
rcl
sti
jecxz
rcl
cmpb
cld
mov
cld
cld
out
mov
int
xlat
loopne
divl
sti
hlt
aam
xlat
cmc
lret
loop
cmpb
cld
ret
mov
lret
jecxz
mov
enter
jmp
aam
sti
in
in
int
lock
addl
nop
repnz
rcl
leave
not
stc
out
aas
fdiv
stc
sti
frndint
fmul
fimuls
in
jmp
into
jmp
cld
jmp
lret
in
sub
idiv
idiv
jecxz,pt
lock
out
push
fdivrp
test
mov
clc
cmp
call
cmp
in
rol
aam
fdivr
dec
cld
int3
clc
leave
test
sub
fcmove
repz
sti
icebp
fmul
xor
ffree
int
mov
call
shr
jmp
std
in
out
cmp
repz
fcmovbe
idiv
xchg
movl
aas
xor
shl
out
cmp
cmp
fstpt
aad
cmp
lret
rcr
leave
lret
fiadds
out
leave
aad
into
stc
sti
shr
rcl
clc
flds
ret
xchg
repz
sub
in
shll
jmp
in
sti
ret
sti
fmull
in
call
ror
ss
int
sti
out
xlat
fcmove
fcomip
hlt
out
hlt
cmp
mov
cmpb
mov
dec
orl
fadd
jmp
aas
int
lock
loope
jmp
decb
loope
jmp
repz
aaa
lret
out
out
stc
fcmove
and
fsub
ffree
fildl
loopne
aam
in
ljmp
loope
cmp
loope
loop
rol
fld
test
jmp
mov
xor
lret
int
cmp
into
mul
ret
in
lret
mov
xchg
xchg
fdivp
test
lret
lret
cmp
stc
cmpl
cmp
lock
movb
loop
lret
idivl
frstpm(287
cmc
xor
out
lock
and
aam
in
ffreep
call
rol
cmp
jmp
icebp
ljmp
shl
incl
leave
into
fucomi
jecxz
int
cmp
cmp
jmp
lret
fsubp
rcl
rcl
fadds
xchg
loopne
ljmp
out
shr
leave
cmp
fcmove
cmp
rolb
into
loop
fucomip
xchg
shl
lret
call
int3
sti
clc
in
ret
rcr
cld
test
int3
repz
lock
iret
ljmp
mul
stc
aad
orb
enter
lock
aam
in
aad
call
jmp
not
ret
cmp
fmuls
out
out
out
and
out
stc
sti
xor
call
iret
cmp
jmp
sbb
jmp
ljmp
std
aad
cli
rcl
aaa
aas
sar
test
test
out
leave
fistl
in
les
imul
lret
aad
clc
int3
sti
std
cmp
jecxz,pt
cli
leave
mov
addb
xor
xor
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
jmp
iret
ret
fstp
insb
sub
repz
adc
shll
add
cmp
cmp
int3
loope
fdivr
iret
ds
jecxz
mov
call
shl
enter
lret
call
test
into
fimuls
fisttpl
ljmp
out
cmp
div
cmp
shl
into
aaa
fdiv
out
in
leave
idiv
int3
xchg
hlt
in
sarl
xor
stc
out
jecxz
rcl
and
xchg
fsubr
lret
sub
xor
not
ffree
ljmp
aam
in
mov
sti
sti
xchg
flds
stc
ss
aad
fsubr
cmp
int3
repnz
cmp
test
jecxz
jmp
addb
lret
cmp
ror
test
cmc
out
xlat
loopne
test
out
icebp
loope
into
xor
fucompp
rcr
sti
in
cld
mov
std
hlt
ljmp
int
jmp
cmc
loop
int3
std
sti
aad
clc
adc
clc
aad
lret
out
int
repnz
xor
out
cli
out
out
mov
xlat
xchg
ljmp
mov
aaa
xlat
out
fcmovnu
fdivr
repnz
xchg
out
in
jecxz
in
mov
hlt
sti
out
stc
sti
aaa
stc
cmp
lret
fdecstp
int
ret
sti
aad
fcomip
leave
cmp
call
das
aad
sub
int
xlat
repnz
ljmp
test
incb
fcmove
shll
xor
call
iret
cli
loope
in
fstp
xchg
cli
mov
ljmp
aam
rol
fcmovu
xchg
cld
or
in
int3
addl
sar
cmp
lock
cmp
xlat
stc
add
fdivrp
fdiv
mov
fcmovu
xchg
mov
loop
lret
jecxz
clc
aas
repz
repnz
mov
jecxz
enter
aaa
test
repnz
jmp
xor
cmp
and
aam
fdiv
in
call
leave
div
int
lret
iret
fdivp
cld
loope
sti
hlt
rcr
mov
jecxz
mov
sbb
sub
stc
aam
sti
int3
loopne
in
into
ret
in
testb
in
in
xchg
aad
aad
call
sbb
aad
rcl
in
fdiv
ficoms
out
xor
sti
cmc
cmp
out
cmp
int3
clc
test
icebp
sbb
movl
out
ret
out
shl
clc
cmp
ss
lock
int3
decb
rol
sti
rcl
cld
neg
int3
xor
cmp
aam
decl
out
mov
in
jmp
aam
xor
rolb
sti
jmp
in
orb
out
neg
sub
out
fdivp
cmp
xor
ret
xlat
mov
jecxz
cmp
push
out
aaa
fcmovnbe
hlt
rcl
sarl
in
out
repz
cmp
out
ret
test
loope
shr
cmp
lock
out
sti
repnz
fdivrp
cmc
repz
aad
jecxz
hlt
xchg
shl
mov
aam
out
xlat
repnz
repz
out
aas
imul
cmp
aam
fadds
mov
loopne
cmp
in
fxch
out
repz
clc
loop
out
xlat
jecxz
out
into
xchg
mov
loope
lret
ljmp
iret
fidivrl
aad
loope
testb
fcmovu
sar
int3
hlt
in
cmc
clc
out
hlt
fucomi
xor
repnz
sub
std
ret
in
incb
mul
aad
jmp
repnz
std
shl
lock
fsubp
fsubr
lds
shlb
sar
shl
int
ret
idiv
ret
in
leave
leave
mov
out
lret
fcomip
int
lock
in
xor
jmp
aas
aam
cld
xchg
lock
ret
stc
fyl2x
lret
cmpl
mov
fnclex
or
xor
sti
cmp
fdiv
jecxz
and
test
xchg
cld
ljmp
fidivl
ds
neg
jecxz
cli
lret
stc
fildl
out
ror
not
repnz
jmp
stc
ds
cli
std
lds
repnz
cld
std
into
in
das
in
int3
out
cmp
rcr
int
mov
mov
mov
mov
mov
xor
xor
add
add
jmp
rol
int3
fcmovnu
fcmovb
and
ja
jns
jns
mov
jg
add
ret
fcomp
mul
shl
test
loop
fucomip
fisttps
lret
hlt
call
clc
int
rol
ret
cmp
test
int3
les
nop
fsubrp
lock
xor
jmp
jecxz
xlat
out
fst
sar
ret
fadds
in
fcomip
out
out
lret
jmp
iret
aam
fcom
icebp
icebp
shl
sti
into
xor
filds
stc
into
test
int
sub
int3
fmul
icebp
shlb
jmp
cld
iret
lock
jmp
xlat
lea
lock
not
xor
cmp
aam
aam
rcl
fcmovnb
in
cli
fcmovnb
clc
xchg
sti
repnz
repz
xor
icebp
in
sar
ret
fucomp
addl
fdivp
rcl
out
leave
fldl2t
fcmovnu
out
shr
loope
mov
addb
ror
lock
icebp
lock
shl
idiv
neg
into
fcom
ret
cmc
std
aam
std
hlt
rcr
ljmp
loope
ss
xor
iret
repz
jmp
fnsetpm(287
cld
imul
rol
mov
test
mov
roll
cmc
xor
sarl
cmp
ds
aad
mov
out
xchg
xchg
sub
test
ret
int3
in
in
aad
int3
cmc
jecxz
jecxz
stc
test
xlat
lret
stc
leave
ljmp
div
cmp
xor
stc
fsin
ror
cmp
fpatan
std
aas
jmp
leave
sti
out
ret
in
out
idiv
in
idiv
ds
repz
mov
clc
sarb
flds
aam
int
call
ror
sbb
clc
lock
fmulp
std
in
out
repnz
xlat
shr
jmp
iret
cmp
ds
imul
loop
fcmovnbe
adc
xchg
icebp
loop
repz
jmp
repz
ss
xor
fcom
jecxz
test
jecxz
loop
mov
loop
jmp
in
test
in
lret
cmp
cmp
clc
ffreep
fadd
rolb
loopne
nop
xchg
iret
enter
in
iret
out
cmp
aad
int3
icebp
clc
fucomip
jecxz
mov
std
in
out
xor
xor
out
div
out
lret
div
and
adc
loope
enter
loope
out
ror
aaa
in
fcomi
std
test
aas
cmp
adc
out
jecxz
ffree
addb
leave
xchg
jmp
call
aad
leave
lret
aam
iret
cli
cld
rol
adc
testb
lret
cmc
sub
in
cmp
lret
repnz
leave
ss
loop
rorb
cli
fmul
mov
xor
repz
stc
div
enter
cld
cli
loop
out
stc
int
test
fsubr
lock
in
call
in
std
clc
repz
test
into
fisttpl
sti
loope
mov
xchg
ljmp
cmp
ss
idivb
cld
cmp
ljmp
iret
fsubp
ljmp
aam
xlat
xor
ffree
out
filds
ror
into
mov
xor
fld
std
cmc
hlt
int3
faddl
faddp
enter
rcr
loopne
xchg
iret
cs
repz
cmp
cli
rolb
out
leave
lret
sti
mov
iret
ret
xchg
mov
into
sarl
in
cmp
xor
xor
neg
out
leave
fmull
lret
mov
iret
loopne
jmp
jecxz
lret
bnd
int3
loope
aad
cmp
loop
hlt
lret
enter
ljmp
xlat
out
out
fidivrl
enter
cmp
aas
cld
sti
flds
in
mov
loope
in
jmp
repnz
lret
std
fcmovu
aas
rol
enter
fiaddl
sub
imul
call
icebp
aad
icebp
ds
loopne
lock
fimull
fdiv
in
repnz
rcl
xor
xor
cmp
sar
cli
test
loop
into
out
in
repnz
in
ret
repz
aam
cmp
fiaddl
imul
std
mov
xchg
ds
lret
iret
in
xor
shl
not
rcl
lret
repnz
out
mov
lret
ljmp
xor
out
hlt
fsubrp
cmp
stc
rol
jecxz
out
in
fadds
xchg
aad
stc
cli
fcmovne
fnstcw
call
ret
in
fsub
sti
mov
fildl
movl
aas
loope
cld
int3
rol
jmp
jne
cmp
jmp
iret
aad
ret
fst
dec
cwtl
mov
jl
fistpll
add
mov
mov
cmc
push
xor
in
shr
cmp
stc
into
int
test
xchg
adc
aam
into
decb
in
in
lock
cli
les
icebp
clc
out
aas
loope
loop
not
fsubr
ret
xchg
inc
jmp
in
icebp
repz
enter
jmp
fld
sbb
test
fucomi
iret
in
rcll
repz
sti
iret
cmp
dec
in
cmp
test
jecxz
out
repz
loopne
xor
ret
int
ss
xlat
xor
test
jmp
in
mov
aad
lret
xor
out
fcmove
fdivrl
in
out
fcomp
lock
int3
leave
iret
and
aad
xor
sti
ffree
clc
loop
roll
xchg
ds
cmp
lock
cmp
lret
fcmovnu
jmp
mov
jmp
loopne
lock
cmp
shl
cmp
fiaddl
stc
mov
fmulp
mov
ds
in
iret
leave
aam
push
into
int
aam
and
sti
div
loopne
jmp
xor
repz
cli
xlat
aad
in
loopne
stc
shl
sbb
fcmovu
leave
mov
hlt
hlt
div
shl
repnz
call
lret
into
cmp
hlt
rol
aad
enter
popl
int3
xor
xor
rol
fldpi
fcomi
rcr
in
fldl2e
stc
mov
out
cmc
aaa
cs
jecxz
aad
out
lock
aad
xor
out
xchg
cmp
xchg
loop
lret
xchg
shrl
out
int
enter
enter
loopne
sarb
out
repnz
in
test
cli
lret
jmp
call
xlat
repnz
stc
out
hlt
loope
lret
out
sbb
lret
fcomip
test
aam
call
cli
idivl
sarb
icebp
aad
loopne
loopne
loop
stc
lret
xchg
loop
out
jecxz
out
std
cld
cmp
lret
cmpl
xchg
clc
fcmovu
loopne
xor
loopne
xchg
xchg
jmp
lret
xor
cmc
xor
loope
out
clc
xchg
mov
fmull
in
aad
cmp
xor
xor
aad
fiadds
test
loope
fisttpl
xor
cmc
iret
lret
lret
std
cmp
rcr
into
sti
xchg
std
lds
xchg
xchg
xchg
mov
ljmp
hlt
repz
lock
mov
clc
stc
flds
mov
xor
divl
out
ss
cmp
cmc
add
cli
fcmovu
leave
idiv
jecxz
test
out
fsubrp
fbstp
call
in
out
cmp
aad
int3
fincstp
cli
cmp
flds
mov
loope
cld
ljmp
shr
cmp
lret
repz
shl
std
test
aam
loopne
cld
out
fsubr
fmulp
shl
lret
ror
out
aam
shr
call
loopne
cmp
incl
sti
enter
fucomip
out
into
ss
fprem1
cmp
fadds
dec
mov
int
std
mov
mov
aam
shr
aam
cld
cmp
rcl
cli
fimuls
lret
int3
mov
in
loopne
mov
int3
imul
jmp
cmpl
clc
filds
fsubr
xchg
mov
out
lret
ror
xor
cmp
cmp
std
cmp
sar
hlt
test
hlt
aam
cld
loope
mov
int
fimuls
jmp
cs
loope
rol
ffree
jmp
std
icebp
xchg
iret
xor
jmp
shlb
jmp
enter
ljmp
out
int
iret
loopne
sub
in
das
aaa
stc
xor
iret
aas
jmp
cli
ds
out
addl
test
repz
cmc
xor
cmp
sti
in
iret
xor
int
testl
mov
loopne
repnz
out
idivl
ds
out
aam
fnstsw
fadds
fsub
fcmovnu
shl
stc
sti
fiaddl
loope
out
xor
shlb
fsqrt
in
hlt
test
test
mov
les
xchg
mov
shrl
aaa
call
cli
in
clc
rol
cmc
loopne
mov
jmp
loop
rcr
shrl
ret
idiv
leave
fcmovne
sar
iret
xlat
jecxz
addb
jmp
lret
out
out
jmp
xor
in
cmp
xor
ret
cmp
xchg
test
fldl2e
jmp
incl
add
int
ret
fstp
sbb
cmp
add
in
repnz
jmp
out
xor
cmp
not
rcr
rolb
std
aam
fisttpl
rcl
enter
lock
repnz
cmp
icebp
loopne
test
clc
div
addl
out
repnz
xor
lret
cmp
ror
fimuls
mov
lret
repz
adc
rcl
xor
aad
call
clc
incb
fld
int3
into
cld
jmp
stc
sarb
std
in
fdiv
aam
lock
cmp
fadd
enter
shl
in
shl
loope
jmp
out
shl
iret
shll
xor
cmp
cld
repz
in
int3
enter
cmc
int
shl
cs
cmc
aaa
enter
enter
fsub
lock
fsubp
ret
cli
enter
loop
xor
loopne
shr
jmp
ss
icebp
lock
sar
cmp
fstp
jecxz
fsub
sti
cld
fucomi
loop
in
out
sub
icebp
xor
out
jmp
cmpl
repz
test
movb
ljmp
cmp
idivl
xchg
inc
imul
in
xor
lock
aam
cld
aas
ror
cmp
cld
jmp
stc
loopne
iret
in
lret
ljmp
jmp
clc
xlat
lret
stc
sti
cmp
cld
lock
fdivr
repnz
dec
icebp
test
out
out
lock
iret
call
ret
hlt
orb
sti
or
call
int3
loop
call
shll
aam
cld
out
ret
out
xlat
stc
fstp
test
cld
jecxz
rcl
lret
ljmp
fadds
out
loopne
loopne
int3
fiaddl
das
rol
cmp
out
rcr
roll
cmp
stc
std
lret
out
iret
and
in
not
xor
idivl
cmp
cmp
out
test
loopne
std
xchg
sub
repnz
fcom
cmp
fdivr
int3
cmp
aas
repnz
sti
ret
in
fsubr
xchg
lret
shl
aad
shr
fld1
ret
int3
out
aas
std
stc
in
out
testb
out
mov
in
int
lock
in
in
out
cmc
aas
loope
lock
shl
cmp
rorb
out
icebp
ss
in
out
in
sbb
rcl
mov
out
incb
fucomip
out
sarl
cmp
cmp
jmp
iret
repnz
addb
lock
test
in
sub
aad
jmp
fst
lock
inc
loope
xlat
or
xchg
cmc
xor
out
cmp
fdivs
aad
rcr
std
ffree
cli
xchg
jecxz
lret
lds
or
rol
out
stc
neg
loop
aas
cmpl
leave
int
call
mov
repnz
xor
xlat
call
cmp
cld
and
loope
aam
mov
loope
and
or
aaa
aad
ljmp
int3
out
ds
clc
out
dec
adcl
icebp
into
iret
fcmove
jmp
lock
movb
loope
in
enter
sub
cs
out
lret
std
cmc
rcl
stc
fucom
in
xchg
in
xchg
test
mov
int3
out
out
xlat
int
out
cmp
cli
fisttpll
leave
orl
loopne
stc
out
jecxz
cmc
into
rcr
cld
std
ds
ffree
jmp
in
lret
mov
out
cld
out
xor
sti
sar
icebp
loopne
iret
or
aam
test
stc
enter
loop
rcl
lret
fcomi
rcr
sti
iret
in
iret
jecxz
fcom
filds
int3
in
std
addb
int
into
ret
cmp
cmp
aad
cmp
fcmovbe
idiv
xchg
xlat
ljmp
lock
loopne
xor
mul
ljmp
out
cli
rol
xchg
repnz
rolb
cmp
stc
test
shl
cmp
aad
rcr
icebp
idivb
mov
leave
mov
fmul
out
int
in
ss
aaa
cmp
leave
cmp
ret
loopne
ret
test
roll
icebp
loopne
loopne
iret
call
out
fsubr
test
in
lock
mov
leave
shl
or
hlt
cmp
fdiv
jmp
sti
clc
rcr
aad
aas
out
mov
stc
ret
xchg
cld
out
out
xchg
mov
jecxz
test
ret
jmp
rol
sarl
rcl
mov
fidivrs
sarl
jmp
jl
call
fistpll
cli
loope
aas
int3
clc
out
mov
rolb
cli
xchg
xchg
int3
out
int
aam
cmp
jmp
test
vpsrld
leave
testl
fmul
xor
loope
ret
in
fyl2x
lret
in
vcmppd
repnz
mov
loopne
loop
jmp
ss
in
ljmp
cmp
loope
out
test
mov
loopne
xchg
sub
ss
cmp
not
repz
stc
shl
sar
xchg
clc
test
fdiv
in
xchg
ret
out
lds
aaa
cmp
fcom
clc
cmp
cld
in
cld
jmp
int3
iret
shl
aad
loop
int
rcl
fcmovu
fmul
ret
repnz
cli
lret
loop
jmp
mov
out
incb
in
in
call
ds
cmp
shl
xchg
hlt
aad
xchg
flds
loop
not
icebp
ror
shr
int3
out
int
iret
rol
xchg
mov
jmp
call
lds
aaa
xor
fcmovne
ffree
shr
repnz
xlat
lock
xor
in
out
out
loop
aaa
out
sub
clc
in
clc
repnz
rolb
fnclex
call
int3
jmp
int3
aam
rcl
cmp
jmp
shr
cmc
aad
out
into
imul
addl
jmp
fdivp
cmp
cli
in
icebp
cli
ret
fsub
testl
clc
fisttpll
stc
ret
in
cmp
out
stc
cli
cmp
aas
out
fucomp
rcr
int3
addb
aad
sub
clc
fidivl
ljmp
div
or
vpaddusw
call
icebp
xlat
repz
aam
not
int
ds
repz
fxam
in
fisttpl
shr
in
iret
ss
xlat
fadds
clc
xchg
int3
orl
leave
rol
xor
fcomp
lock
in
rcl
clc
xchg
out
call
in
stc
rcr
test
call
call
fcmove
cld
ds
mov
enter
xchg
roll
mov
aam
jmp
cmp
loopne
fcomi
rol
cld
jmp
or
hlt
adc
aaa
loopne
ss
fnstcw
shr
icebp
hlt
ret
hlt
repnz
mov
call
xlat
xor
call
aas
fsubr
iret
repz
into
out
in
sub
fucomi
in
repz
jmp
shl
clc
iret
aas
sti
hlt
sbb
loope
fildl
shr
out
sarb
out
repz
icebp
into
cmp
repz
fmul
out
loopne
out
nop
xor
xor
in
hlt
fldln2
not
idiv
in
neg
ret
rcl
out
out
cld
in
out
test
in
sarl
cmp
shr
enter
cmp
orb
int
in
orb
neg
int
cmp
stc
loop
icebp
aad
cld
sarb
cmp
in
loop
in
jmp
ret
fxch
cmp
loop
add
out
lret
test
fdivr
mov
int3
lret
out
shll
xlat
out
sti
div
push
sar
fcmovbe
jecxz
xchg
test
mov
mov
rcl
jmp
int
enter
int3
ffreep
clc
cmp
xchg
fadds
loop
jecxz
jecxz
ljmp
xor
fsubrp
cmc
ret
fsubrp
xchg
iret
jmp
into
idivl
fsincos
repz
cmp
test
repz
ret
loop
or
fsub
sar
jmp
repz
out
cmp
cmp
shr
shl
fidivrl
inc
stc
sti
lds
cli
sar
sub
lock
in
enter
shl
ret
shl
out
out
mov
sti
adc
rorb
hlt
enter
leave
cmp
sti
shl
test
clc
fst
stc
loop
fcmove
inc
test
in
test
iret
std
fsubr
xlat
stc
fnstcw
faddp
std
in
fiaddl
lds
cld
shl
leave
xor
cld
cmpl
iret
mov
out
sbb
add
xchg
out
iret
xor
fcmovbe
xor
aam
lock
in
cmp
inc
hlt
out
mov
call
sub
clc
int
lret
aas
in
loopne
sti
out
test
std
call
fnclex
cli
iret
xchg
out
cs
shl
cld
mov
jmp
iret
aad
aad
push
pop
cli
jb
in
jg
add
loope
in
faddl
leave
jmp
out
into
nop
in
xchg
int3
repnz
ror
aaa
sarl
xor
fdivrs
roll
rolb
mov
lret
stc
xor
lock
rcl
ds
rcl
cmc
and
in
cld
loope
int
repz
xor
xor
leave
iret
ror
dec
sub
faddp
xchg
leave
test
rorl
in
jecxz
xor
xor
aam
cld
cmp
test
rcr
testl
shll
icebp
loop
ror
jmp
cmp
repnz
ljmp
mov
xlat
loopne
sarb
enter
fcomip
shl
neg
fadd
repnz
fimuls
ljmp
out
out
cmp
lock
add
and
leave
in
leave
fmulp
iret
xchg
cld
sub
out
aam
ss
out
hlt
sti
enter
les
rolb
lock
repz
int3
iret
ret
ss
aas
iret
repz
cld
rcr
test
leave
aam
sub
fldl
repnz
dec
icebp
hlt
in
shl
clc
out
cli
aad
cld
loopne
xor
repnz
aad
rcr
in
call
fdivr
rcl
cmp
repnz
ret
decl
adcl
ss
cmpb
stc
clc
addl
stc
mov
xor
xor
fcomp
fsubr
ror
ljmp
hlt
sar
stc
fmuls
out
out
repnz
out
in
lret
fdivl
ds
cmp
cmp
aas
out
loope
jecxz
ljmp
jmp
shlb
xor
cli
enter
lret
aaa
fdivrp
out
int
std
flds
idivb
in
icebp
int3
xor
int3
hlt
ss
icebp
hlt
ss
aas
dec
aam
test
out
lret
leave
mov
hlt
hlt
jmp
cmp
sar
leave
cmp
idivb
xor
sti
shr
lret
sti
mov
lock
loopne
rcll
iret
shr
jmp
in
fucomp
out
ror
cld
fxch
fdivrp
in
xchg
jmp
fstl
enter
icebp
dec
cmp
call
cmpb
std
fcmovnb
loop
jecxz
xchg
jmp
in
loope
hlt
xor
out
aad
in
clc
cmc
cmc
rolb
testb
mov
stc
repnz
std
repnz
fdivr
int3
sti
fldl
mov
fcmovb
jmp
clc
std
test
bnd
sarb
ror
cmp
clc
jecxz
in
stc
in
enter
test
mov
ds
ljmp
aad
rcl
clc
cmp
std
loopne
cli
nop
enter
in
rcl
into
xor
fstpt
lock
in
rolb
std
rorl
test
mov
out
shr
cmc
out
idivl
aad
sti
in
out
cmp
mov
xor
fsubr
sti
jmp
fdivrs
flds
in
ret
mov
in
nop
enter
ret
cmp
in
into
aam
lock
test
test
fadds
sti
enter
cli
jmp
icebp
aad
jmp
lock
ror
repz
std
shl
hlt
ffree
fsubr
into
into
roll
repnz
sarl
jmp
ret
xlat
fucom
sti
xlat
loopne
xlat
out
mov
fsubr
out
xchg
xor
icebp
ss
cmp
jmp
in
cmp
jmp
fmull
adc
in
out
hlt
out
rol
fidivl
lret
cmp
fiadds
hlt
lret
loop
test
icebp
repz
out
repz
shll
shll
fsub
repz
loop
mov
ret
test
in
xor
stc
cmp
xor
cmp
cmp
sar
xlat
repz
repnz
leave
cld
loopne
leave
ror
xor
cmp
cmp
cmp
cmp
xlat
icebp
clc
ror
fimull
cmp
or
xor
xor
stc
div
sbb
mov
leave
jmp
mov
lret
shl
loop
cmp
repnz
call
in
iret
lret
iret
roll
ret
shl
ljmp
rol
stc
ret
rcl
jmp
jecxz
xchg
xlat
clc
in
cmp
cmp
sbb
fcmovnbe
std
mov
mov
out
filds
aaa
rol
shl
xor
aas
ljmp
inc
or
or
leave
ret
push
mov
push
not
push
movl
mov
mov
mov
mov
mov
movl
cmp
movl
jmp
int3
aam
xlat
fst
fldl
mov
sbb
jg
std
add
fucomip
lock
fildl
out
lret
incl
lret
into
vmovq
shl
sar
aas
stc
into
cmp
stc
fiadds
call
lret
lock
aad
mul
out
fstpt
in
shlb
ret
fnsetpm(287
les
shl
lea
out
in
sti
icebp
fscale
clc
int
int3
hlt
cli
orl
test
les
loopne
cmc
lock
addb
mov
cli
int
fnstenv
iret
cli
out
int
into
cmp
jecxz
jmp
fxch
shl
loope
xchg
ss
aad
into
fxch
sti
not
ds
out
clc
sti
in
fildl
mov
fimull
ret
xor
cmp
int
fdiv
ljmp
repnz
orb
and
ljmp
rcr
std
aas
cli
ret
xor
into
lea
sub
aad
fst
aad
adc
cmp
fiadds
imul
sub
out
fdivp
shlb
repnz
xor
sti
rcl
sti
stc
in
call
jmp
ljmp
xor
jmp
repz
cmc
enter
std
jecxz
xlat
ret
fxch
icebp
loope
in
in
in
out
clc
clc
in
enter
out
cmp
out
vpslld
xlat
imul
int3
sti
cld
xchg
test
mov
ljmp
hlt
cld
int3
int3
ds
rol
loop
in
fldln2
orl
test
into
lret
call
cld
out
loopne
fadds
add
lret
in
icebp
xchg
in
addb
aam
jmp
aad
aas
out
icebp
in
repnz
jecxz
enter
xchg
aas
shl
shr
iret
clc
cmp
aam
fstp
fucom
in
out
out
cmp
in
mov
xchg
ds
aam
cmp
fadd
fnstcw
iret
test
cld
hlt
shl
loopne
in
out
out
mov
in
cli
ror
cmc
xor
int3
aad
shr
test
fsubr
loope
mov
cld
test
in
mov
sub
into
int3
cmp
roll
loop
incl
jmp
ret
jmp
leave
enter
cmc
shl
loope
hlt
jecxz
filds
leave
mov
mov
ror
stc
std
cmp
fdiv
mul
fdecstp
loop
test
ret
sti
xchg
xchg
call
repz
in
out
repz
std
lret
test
fdivr
stc
out
aad
aam
call
in
sub
out
cmp
call
out
aas
test
lret
xlat
icebp
loop
mov
loop
ret
ljmp
cmp
fldl
in
xchg
xchg
xchg
int
jmp
lret
fmul
std
testb
aas
fucomp
fmuls
out
shl
stc
in
fstpt
fmulp
xlat
cli
cmp
sti
xchg
xlat
fstp
fmull
xchg
aad
call
cmp
aaa
rol
cmp
out
clc
rolb
sub
enter
lock
dec
out
jmp
imul
in
in
out
ds
leave
ret
int3
cli
ljmp
rol
jecxz
stc
rcl
out
out
loopne
lret
into
fnclex
std
repnz
clc
orb
in
jmp
test
out
lock
neg
fst
cld
repz
call
std
repz
stc
loop
xor
cmp
cmp
out
repnz
rcl
xchg
xchg
rclb
stc
out
out
cmp
neg
neg
repnz
lret
fisttps
loopne
call
out
int3
cmp
lret
lret
ror
cld
cmp
int3
aas
shl
call
call
shll
in
xor
repz
cmp
into
repnz
loopne
cli
mov
lds
xchg
out
mov
shl
icebp
out
ret
cmp
idiv
iret
cmp
roll
idiv
int3
std
ljmp
ljmp
sub
jne
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
mov
xor
mov
add
mov
movzwl
not
jmp
rcl
ror
fstp
fldenv
jae
cmpsl
idivl
std
add
aam
ret
enter
lret
jmp
loopne
loop
jmp
sub
ss
jecxz
loopne
ret
test
in
idiv
rolb
out
in
xor
iret
cmp
jmp
int3
fst
cmp
push
loope
in
mov
xor
fprem1
out
ljmp
fcmovnu
cli
std
faddl
fcomp
xchg
loop
mov
ljmp
clc
shl
ds
out
repnz
xchg
jecxz
fsubr
repnz
int
icebp
cmc
cmp
ret
xchg
xor
mov
mov
sbb
int3
xlat
fldcw
lret
cmp
ljmp
and
fabs
mov
jecxz
popl
clc
cmc
lret
xlat
fnstcw
in
xor
test
cli
xlat
out
loop
xlat
xchg
loop
repnz
leave
jmp
jmp
cmp
in
cmp
ret
fnstcw
fmull
fsubp
adcb
fmul
sar
ljmp
sti
fsubp
rol
in
lret
xchg
fadd
pop
xor
vaddsubpd
shl
test
xlat
loopne
fcmovnb
ret
in
xchg
repz
aas
out
lret
repnz
fadd
lret
in
shl
rolb
jmp
xchg
ror
repz
aad
cmp
std
loopne
shl
loopne
fsub
enter
mov
mov
lret
aas
fcmovne
in
cmp
out
les
faddl
call
icebp
lret
clc
shl
aad
icebp
loop
sub
lret
repz
in
cli
aas
rolb
aad
idiv
hlt
aam
orl
repz
imul
xabort
cmp
repnz
mov
out
cld
mov
lock
xor
xor
clc
cmc
out
sti
in
jmp
int3
xlat
aas
fdivp
incb
mov
addb
jecxz
cmp
rol
adc
vpmulhw
in
mov
xor
vpsubusw
xlat
call
xlat
lock
ret
lock
loopne
aam
fucom
enter
mov
shlb
jmp
xor
adc
out
out
cld
loope
clc
loopne
sti
enter
xchg
loop
rcl
iret
cmp
out
enter
hlt
std
shr
rolb
test
jmp
aad
enter
jecxz
fsubr
out
cmp
in
shl
aaa
out
lock
in
in
mov
mov
ror
mov
cmp
cmp
repnz
rol
aam
jecxz
out
rcr
rcl
loope
hlt
sti
fildl
ret
cmp
repnz
ljmp
sbb
repz
in
fiaddl
in
clc
lret
cmp
cmp
shr
lock
and
lret
mov
int
lret
jmp
repz
cli
fxtract
ljmp
std
fcmovnu
in
mov
test
iret
ret
clc
stc
clc
fdivrl
shr
test
ds
mov
cld
in
lret
loop
test
xor
fucomp
cmp
cmp
jmp
cmp
fsub
jmp
mov
mov
ror
shl
lock
cmp
ror
mov
adc
mov
xchg
into
mov
rcl
fcomi
cmp
idivb
cmp
in
iret
fsub
std
cld
cmp
fxam
lret
rorl
jecxz
xor
std
repnz
cmp
xchg
sbb
xor
div
fcmovbe
call
cmc
xor
jmp
fidivrs
stc
in
stc
mov
xchg
mov
xchg
rclb
fucomi
out
xor
call
sar
xchg
rcl
mov
std
fsubr
add
loopne
int3
jmp
ret
xor
aas
sbb
int
or
nop
xchg
sub
sti
iret
cmp
xor
cmp
loope
idiv
repz
in
cmp
in
in
shl
shlb
jmp
aam
ds
add
add
jmp
jmp
enter
fstp
fstp
adc
loope,pt
or
jg
std
add
in
aad
jecxz
test
clc
and
test
xchg
idivb
leave
ret
fdivr
ss
out
stc
fcom
neg
jmp
loopne
mov
xchg
shl
stc
rcr
sti
xor
icebp
lret
aad
int
idiv
cmp
xchg
int3
clc
xchg
fld1
in
out
out
std
iret
repnz
int3
cmp
cli
ljmp
in
in
loope
repnz
iret
not
cmp
sti
cmp
sti
aas
sub
fdiv
loopne
in
in
test
in
sbb
ds
clc
in
aaa
cmp
cmp
sti
fldl
orl
out
jecxz
ljmp
std
aas
in
test
mov
hlt
idiv
xchg
ljmp
xor
ss
int3
cmp
hlt
xor
roll
in
mov
out
fucomp
jmp
leave
loopne
xor
xor
into
loope
fcmovnu
fcmovu
xor
cmp
jmp
cli
hlt
fsubp
xlat
lock
repnz
fcomi
incl
xchg
xchg
cli
jecxz
lret
mov
int
or
repnz
aaa
aam
jecxz
flds
lret
in
lret
in
orb
stc
icebp
test
cmp
lret
test
incb
out
xchg
nop
shl
loop
repz
cmp
cli
ss
cmc
cmp
loope
mov
notb
ljmp
out
cmp
clc
out
cli
cmp
cmp
cli
xchg
fmuls
ds
in
ss
hlt
stc
ljmp
in
repz
mov
lret
mov
xchg
call
loope
xor
xlat
in
call
cmp
jmp
addl
stc
out
leave
fcmovne
stc
loopne
cmp
ret
mov
xlat
incb
xchg
jmp
cmp
leave
lret
repz
out
cmp
out
xrelease
into
loopne
int3
faddl
shl
hlt
call
xlat
cmp
sar
cld
std
repnz
lret
xchg
loope
std
test
jecxz
xlat
in
cmp
addl
loopne
jecxz
leave
leave
xchg
in
fcomip
ret
in
iret
repnz
aas
ljmp
sti
std
ret
ds
rcl
shrb
fdiv
xor
cmp
call
in
orl
stc
in
ss
aaa
out
out
adc
aas
xchg
clc
repz
ret
out
xchg
fsubrp
loop
fcomi
cli
fmul
sti
in
sti
rolb
fsincos
fxch
mov
test
out
sti
ljmp
into
stc
not
cmc
cld
loop
dec
fimuls
lret
test
xor
ss
int
or
neg
ds
addb
fadd
fsubp
rcr
in
xor
cli
fsub
cmp
xchg
out
jmp
fmul
lock
lret
sub
into
xor
std
filds
fstp
in
hlt
cld
sub
loop
aas
shlb
jmp
leave
sar
cmp
ret
aad
clc
jmp
fsubp
enter
call
int3
icebp
aad
shr
cld
fidivrl
rol
loope
adc
xor
lret
fdivs
fcmovnu
repnz
out
test
leave
loope
and
sti
repz
cmp
aaa
shl
sub
sti
vpandn
lret
mov
mov
xchg
std
adc
std
in
fdivl
out
cli
out
mov
loope
lret
test
faddl
in
into
shll
iret
fdivrs
cmp
ret
lock
jecxz
fcomip
mov
mov
decl
xor
in
fcmovnb
sarl
cli
test
icebp
cmp
fiaddl
lret
mov
loope
out
cmp
xor
cmp
cli
in
in
fsubp
test
std
sti
test
fldz
out
out
out
fdecstp
ljmp
ljmp
adc
jmp
aad
rcr
fstp
sbb
stos
push
mov
jg
std
add
cmp
xlat
test
enter
repz
shlb
in
ror
into
int3
in
iret
jecxz
ds
jecxz
fiadds
jmp
jecxz
xor
fptan
jmp
and
fcmovbe
cli
out
sbb
ljmp
out
int3
xor
shl
fcmove
lret
in
fiaddl
loopne
enter
jmp
aad
aad
fnstenv
aaa
sar
sar
lret
fldl
loope
in
fldz
in
xchg
xchg
leave
hlt
cmp
cmp
cmp
cli
rcr
cmp
mov
mov
out
jmp
rol
loope
out
ret
out
lret
stc
loopne
int3
xchg
and
cld
lret
shr
push
mul
loope
enter
in
aaa
cmp
cld
stc
rcr
stc
out
loopne
inc
loop
fsubp
loop
jmp
ret
sti
cmp
out
sti
cld
sar
into
int3
rol
fadd
mov
aam
sar
out
fdivp
xchg
in
in
xor
sub
lock
int
ret
iret
out
aas
test
shr
ret
loope
ljmp
stc
stc
rcl
clc
in
shr
cmp
repnz
rol
aad
hlt
loopne
mov
leave
fsubr
adcb
sarb
xlat
int3
fstp
cli
int
rolb
xchg
fisttpl
sub
cmp
aam
xor
iret
aad
aam
jecxz
ljmp
repz
jmp
in
xor
lret
cmc
pushl
imul
int3
addb
aam
mov
lock
out
in
xchg
mov
hlt
ljmp
std
ljmp
xlat
mov
jecxz
aam
fcmovnu
fstp
leave
mov
jecxz
ret
loop
lret
les
in
xorl
adc
decl
cmp
lret
hlt
leave
in
cmp
int
xor
rol
lock
clc
lea
fsubp
rol
cmc
ret
iret
out
cmp
in
call
shr
iret
sti
in
mov
hlt
sti
xchg
int3
adc
test
clc
fsubr
out
icebp
ret
ds
cld
test
ret
notb
test
sti
sarl
lret
fcmovnu
aam
fninit
sbb
enter
out
or
into
sub
loop
xlat
cld
ljmp
rcl
jmp
in
out
loopne
in
xchg
mov
int
fsubr
aaa
aad
cmp
xor
rcr
rcr
faddl
fimuls
ret
cmp
call
fcomp
out
cmp
ds
mov
std
out
in
xchg
icebp
cld
xor
icebp
not
cmp
jmp
in
hlt
add
addl
mov
xchg
enter
aam
cmp
stc
aas
fcmovnb
xchg
mov
cld
lret
xchg
mov
xlat
divb
fcmovnb
aaa
iret
cmc
call
fcomip
cmp
enter
xchg
mov
in
in
jmp
shr
aas
int
std
faddp
fldl
lock
in
xlat
cmp
cmp
cs
ror
cmc
aad
fdiv
ret
fsubrp
mov
in
xor
iret
xor
out
in
sarb
fucom
in
fcmovu
call
lret
out
loop
shrl
xor
cmp
cmp
call
int3
cmp
repnz
testl
icebp
cs
xor
loop
idiv
leave
int
faddl
stc
sar
out
incl
nop
shr
rcl
out
repnz
repz
fsubr
repz
icebp
cld
mov
ljmp
jecxz
mov
fcomip
in
aam
lret
out
aaa
ds
test
fsub
or
int
xor
call
shl
in
out
cmc
jecxz
ds
fldl
jecxz
test
filds
sub
cmp
ret
sti
hlt
xlat
int3
xlat
clc
loop
lret
aad
aaa
call
cmc
xor
out
clc
iret
rcl
faddl
loop
out
lret
repnz
xor
int
stc
shl
cmp
cmp
inc
clc
pushl
call
test
je
leave
ret
push
mov
sub
adcl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
aad
xlat
int3
ret
sahf
ficoml
jg
cmpsb
add
add
rolb
enter
xchg
out
xor
cmp
ds
cmp
into
dec
les
out
nop
loop
int
jmp
in
sti
fdiv
out
fcmovnbe
out
fiadds
ret
test
lret
test
lea
out
rcr
int
fdivrs
rcr
in
xchg
cmc
loopne
jmp
xchg
test
orb
hlt
lret
repnz
cmp
repnz
fcomi
in
ljmp
out
loopne
lock
cmp
ljmp
in
idivb
xlat
movb
nop
in
ficoml
aam
xor
sti
hlt
aad
cmp
int
out
jmp
shr
xchg
addb
in
int3
ss
neg
ljmp
fstp
sti
or
in
mov
xchg
jmp
rcl
hlt
clc
jmp
fmulp
shl
fldl
leave
stc
lret
mov
call
div
lock
lret
jmp
int3
test
lock
rorl
lea
nop
aad
in
sub
aad
jmp
std
cld
in
loop
test
call
mov
int
loop
fmulp
test
rcl
aam
xor
repz
fucomip
imul
not
ds
loop
loope
std
mov
adcb
icebp
fmul
int
call
aad
sti
inc
fsqrt
xchg
call
ds
ret
xor
out
fsubr
jmp
cmp
rol
sbb
mov
leave
imul
les
stc
jmp
enter
repnz
jecxz
cmp
mov
popl
ljmp
xor
fucomip
cmp
mov
loope
out
mov
out
in
out
shlb
xlat
fidivrl
clc
jmp
aam
fadd
out
cmp
adc
or
in
fistpll
leave
ret
loop
repnz
sti
repnz
test
loope
ret
xlat
test
clc
ljmp
sarb
out
lock
ror
loopne
loope
cmp
loop
fstl
rol
shl
ret
lret
in
out
jecxz
out
xchg
sar
aad
mov
ffree
in
repnz
cmp
repnz
std
jecxz
repnz
cmp
shl
cmp
in
nop
shrb
xor
divb
sti
cmp
int
cld
sti
fdivr
enter
jecxz
out
mov
xchg
shrb
out
enter
repnz
ror
cld
repnz
out
call
stc
xchg
ret
jmp
das
aaa
int
leave
lret
in
aas
ljmp
roll
sti
out
call
xchg
aam
rcl
lret
out
loope
fmul
loopne
cmc
ds
fcomp
mov
sub
mov
in
call
rcr
icebp
fmul
hlt
cmp
jecxz
repz
cli
vpsubb
sar
mov
mov
xchg
xchg
imul
jmp
int
vpaddw
cmp
addb
cld
aad
jmp
out
jmp
repnz
fdivr
cmp
into
ss
shl
sti
cmc
test
mov
ljmp
repz
repnz
rol
aam
cld
cmc
test
ret
test
fcomp
test
loopne
ror
ss
enter
shl
test
loope
int
leave
les
lock
in
xor
into
cmp
fsub
mul
cmp
in
aad
aas
orl
icebp
add
out
cmp
cmp
ret
fsub
shl
in
out
in
xchg
sub
ror
xor
xor
int3
stc
inc
sarb
dec
aam
loopne
aam
xchg
sti
xchg
sbb
fdivp
das
ret
cmp
out
out
into
cmp
stc
ljmp
loope
mov
fildl
call
das
xor
fcmovnbe
jecxz
rcl
test
aam
or
ret
jecxz
vpmulhuw
aas
fnstenv
in
xor
aaa
repz
aaa
fcomp
loopne
ljmp
lret
mov
rcl
out
ret
xor
repnz
out
sti
out
out
lock
ds
fisttpll
loop
fdivr
or
mov
out
leave
imul
sti
in
shlb
hlt
cli
clc
out
call
in
daa
test
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
lea
adcl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
jmp
ror
fcmovb
rcr
fs
lods
pop
iret
sbb
jl
add
mov
in
nop
loop
in
cmp
xor
sti
stc
int
xor
cmp
sbb
out
fildl
int3
xor
fcmovu
ffreep
stc
aas
jecxz
cmp
hlt
into
fldl
flds
out
xor
aam
int3
cmp
out
fdivrp
cli
cli
incb
rcr
sti
mov
cld
cld
clc
in
jmp
int3
xor
rcl
xor
stc
cmp
cli
flds
std
fxch
cmp
cli
fucomip
out
aas
jecxz
fcmovnb
xor
cmp
cld
enter
xor
loope
aam
clc
std
out
jmp
ljmp
repz
aam
iret
out
hlt
aas
aad
jmp
iret
out
nop
push
jmp
stc
fnstcw
xlat
hlt
loop
test
in
clc
loopne
aam
jmp
push
xchg
ss
das
shl
leave
stc
xlat
rcl
int3
xchg
loope
hlt
loope
out
orl
aad
out
cmp
fucomip
cld
xlat
sbb
clc
test
out
jecxz
cld
shl
int
out
aaa
fdivrp
sarl
stc
in
jmp
aas
cli
xchg
jmp
lret
xlat
out
fst
in
aas
enter
lea
loop
lret
xor
lock
cld
std
cld
out
aad
xor
aas
xchg
faddp
or
sub
xor
xor
enter
lock
sti
fmul
cmc
xchg
mov
loope
addb
jecxz
ss
iret
sti
ss
cmp
repz
hlt
fucomp
fcomp
mov
fucom
xchg
shlb
xor
out
rcl
enter
repz
rolb
jmp
mov
iret
shll
jmp
cmp
out
mul
adc
out
leave
cli
std
int
div
lock
rcr
in
out
int3
lock
out
std
test
test
xchg
in
mov
in
into
into
out
rcl
stc
cmp
cmp
flds
orb
int3
icebp
out
repnz
imul
xor
jmp
jmp
sti
add
hlt
mov
xchg
enter
call
repnz
aaa
icebp
lret
aam
lret
into
sarb
out
orb
bnd
into
int3
into
fdiv
ss
shr
cld
aas
mov
mov
int
nop
roll
in
int
not
cmp
cmp
loopne
vpsubusb
mov
sbb
xor
in
cli
jmp
iret
int
xor
cmp
enter
clc
test
int3
in
sub
out
cli
out
stc
in
aas
fadd
stc
repz
shl
fdiv
mov
in
std
lock
hlt
leave
in
shr
fidivrs
cmp
out
aas
xchg
cmc
enter
out
xchg
out
fdivp
cmp
ss
cli
sarl
enter
aam
ljmp
std
out
mov
les
in
xor
loopne
cmc
in
fnsave
cli
ffree
in
mov
loop
loop
loop
xchg
xchg
stc
vpmulhuw
xor
aam
in
xor
not
lret
fxch
test
cli
cld
out
ret
cmc
out
cmp
jmp
idiv
fiadds
les
les
call
repz
into
cmp
in
faddp
repnz
jecxz
leave
out
in
sti
mov
in
sarb
int3
ljmp
test
sub
xchg
xchg
in
mov
leave
cmc
into
fdiv
cmp
cmp
rol
testl
add
cs
aaa
aaa
shll
out
cmpb
fsubrp
aam
not
out
clc
not
loop
mov
loope
mov
jecxz
sti
sar
sti
faddp
aam
and
jecxz
clc
enter
cmp
mov
xchg
icebp
aam
ljmp
inc
fndisi(8087
xlat
mov
test
stc
testb
int
xor
enter
out
cmp
lock
std
loopne
sbb
div
hlt
int
mov
fucom
test
lret
cmp
cld
repz
iret
aam
fisttps
jmp
mov
iret
xchg
repz
movzbl
xor
push
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
orl
jmp
rol
into
into
fnstcw
enter
mov
cmpsb
add
in
sti
xor
cmp
loope
sbb
fstp
test
in
flds
mov
xor
ljmp
out
incl
loope
flds
int
mov
call
xor
aam
aad
int
lock
fcmovbe
aam
bnd
lret
orl
clc
fxtract
in
fildl
adc
fcmovu
mov
decl
out
shl
xor
fucomp
repz
sti
fiaddl
loopne
mov
ret
in
test
call
sti
cmc
cmp
rcl
rol
fcomip
imul
lret
enter
call
int
xor
sarl
xlat
rcl
inc
rcr
test
xor
lret
lret
dec
in
addl
xor
xbegin
clc
incb
addb
sti
mov
cmc
cld
aam
in
int
aad
in
lock
lret
cmp
xchg
shr
in
mov
loopne
test
xchg
jmp
shl
vpsubusw
cmp
lock
dec
cli
ds
fiaddl
aam
cmp
div
lret
fistpll
repz
in
rol
sti
ret
in
fsub
loopne
ror
enter
idivb
aad
test
loopne
in
loope
idiv
testb
loopne
aaa
cli
in
shl
cmp
icebp
rcr
rol
jecxz
ljmp
fimuls
out
divb
aaa
ss
cmp
repnz
aad
lds
hlt
leave
sti
mov
and
ret
fmul
aas
cld
icebp
ds
mul
roll
mov
xchg
shl
fisubrs
idivb
sti
repz
ljmp
fcomi
cmc
out
stc
fmull
xchg
int
int
aad
xor
cli
in
xlat
cmp
repnz
loope
mov
cli
in
call
xlat
cmp
repz
int3
clc
test
ret
shl
ds
decl
in
in
icebp
aam
int3
fcmovu
sti
ljmp
mov
call
jecxz
cld
xchg
imull
out
repz
clc
cld
jmp
sar
sti
xchg
flds
out
mov
rcl
lock
aaa
cmp
lock
fdivrp
cld
rcr
fmulp
fcomip
iret
xchg
xchg
out
loop
div
jmp
iret
out
filds
fisttpl
out
lret
loope
into
divb
enter
rcl
hlt
hlt
aam
rolb
shr
fiaddl
lock
xor
ror
stc
cmp
cmp
shl
xlat
stc
cmp
jmp
lea
loope,pt
stc
icebp
icebp
repz
in
ds
fstp
mov
ljmp
shl
ret
ss
aaa
cmp
fdiv
fnstsw
neg
loopne
std
leave
cli
sub
int
mov
lea
ror
int3
in
into
lret
out
ss
iret
rolb
fsqrt
faddl
decb
shl
out
cmp
out
icebp
faddl
neg
cli
out
jmp
call
jmp
ljmp
sti
fcomp
stc
aad
fninit
jmp
cli
mov
xchg
xchg
int
ss
stc
int
cmp
cmp
sti
and
fidivrl
sti
sti
ffree
xchg
into
jmp
xchg
bnd
ljmp
cmpl
in
cmp
lock
xchg
ret
sbb
mov
rclb
enter
enter
ss
cmp
loop
out
aas
rcl
ffree
and
lock
repnz
xor
cs
out
std
in
fcomp
cmc
iret
fcmovbe
aam
add
jecxz
out
clc
fcomi
xchg
fildl
shll
fcom
cld
out
lret
cmp
into
cli
clc
addb
out
cld
int3
mov
xchg
jmp
lret
f2xm1
enter
rcl
jmp
out
out
fsubr
shl
loop
mov
lret
in
sub
fxch
iret
shll
ret
out
sti
lock
jecxz
ljmp
out
enter
aam
cmp
std
cmp
roll
mov
repz
enter
xor
int
lea
mov
mov
xor
push
sbbl
push
mov
xorl
jmp
ror
rol
aad
ror
fstpt
jno
push
sub
jg
cmpsb
add
loopne
into
ds
jecxz
enter
fiaddl
dec
in
in
out
rcr
aam
aas
cmc
fucom
aam
fdiv
stc
lret
mov
xchg
idiv
in
leave
shr
int
shr
repnz
int3
not
sar
fcomip
add
ds
jecxz
test
jecxz
lock
mov
out
lret
shll
in
stc
das
ss
in
loope
aad
loope
cmp
out
lret
int
jecxz
fadd
shl
xor
out
std
rcl
and
fcmovnb
fdiv
fst
cld
ljmp
decl
int3
icebp
xlat
cmp
lret
rcr
into
out
rolb
loop
std
out
xchg
jmp
fdiv
in
shr
cld
loope
fistpll
aas
rcl
fcmovnb
in
in
enter
int3
mov
iret
fidivrl
lock
lock
rcr
in
orb
xchg
fmull
loopne
clc
lock
jmp
ret
aad
fnop
rol
mov
ljmp
sub
fld
int
int
clc
repnz
stc
in
repnz
mul
leave
enter
dec
out
repz
int3
in
aaa
clc
xor
iret
repz
in
cmc
aad
std
stc
aad
fcomi
cmp
xchg
in
in
cmc
jmp
cmp
cld
enter
lret
add
xlat
mov
aad
ret
call
push
xor
cmp
in
jecxz
iret
sarb
fdiv
cmpb
enter
xor
aad
hlt
xor
fldl2t
out
cmp
fdivr
cmp
lock
in
fmuls
repz
fmul
ljmp
fxch
fnstcw
cmc
xchg
loop
nop
rcll
in
in
call
icebp
ffreep
cli
in
rolb
test
call
call
in
lret
rol
xlat
sarb
add
jecxz
sti
aam
int3
clc
fldln2
cld
mov
rcll
out
repz
leave
cmp
repnz
test
stc
ljmp
shl
loope
jmp
icebp
ret
xor
cmp
not
out
addb
jecxz
mov
out
aad
lret
cld
aad
iret
cmc
cmc
lock
cli
sbb
cld
int3
loopne
ret
vcvtsi2ss
xor
clc
stc
in
rcl
cmp
in
loopne,pt
xlat
loopne
cli
cmp
shr
xchg
rcr
xor
int3
ss
in
cmp
xor
roll
mov
test
jmp
jmp
clc
ljmp
clc
ds
loop
xchg
mul
ret
iret
cli
fsubp
out
jmp
jmp
rcr
adc
out
idiv
aas
testl
enter
jmp
enter
fst
xor
idiv
fadd
idiv
fadd
lea
divl
cmp
in
aad
rcr
cld
hlt
fcmovbe
xchg
mov
fdivr
int3
xchg
jmp
loopne
jmp
call
cmp
sar
jecxz
idiv
ret
rcr
fcomip
in
sub
fsubr
addb
sub
hlt
in
sar
repnz
test
mov
dec
lret
xchg
inc
iret
call
aam
xlat
cmp
aaa
sti
std
hlt
shr
aad
add
fimull
out
jmp
das
xlat
cmc
cmp
ds
aas
in
xchg
adc
nop
sub
xchg
xlat
lock
aad
sti
enter
std
add
shl
xchg
shr
enter
jmp
nop
mov
sub
rcl
ret
in
jmp
repz
cmc
aad
shl
rcr
lret
loopne
std
fcmove
xchg
iret
icebp
not
test
idiv
out
xor
xor
sarl
ds
vpmaddwd
stc
and
iret
std
std
xchg
fsubp
xor
iret
repnz
cmc
idiv
stc
icebp
icebp
loop
add
xchg
lret
in
cli
in
repz
shr
test
into
sarl
xchg
jmp
ljmp
rorb
xor
mul
out
cmp
testl
hlt
stc
jmp
fsubr
xor
jecxz
xor
ss
inc
fcomp
lock
ret
fimull
iret
loope
icebp
fxch
les
xor
cmp
repz
in
loop
enter
inc
in
mov
mov
xor
mov
jmp
leave
mov
lret
mov
add
pop
and
loope
xchg
jg
cmpsb
add
hlt
ret
faddl
leave
hlt
out
lret
shl
ljmp
cmpl
mov
out
cld
xchg
fsubrp
in
fdiv
call
int3
icebp
loop
shl
xlat
mov
jmp
and
test
enter
sub
cmp
rcl
fdivp
hlt
lock
ret
cmp
mov
fmull
aad
hlt
out
fcom
in
inc
ret
sbb
adcb
sub
int
ret
cmc
jmp
cmc
ds
addl
out
lock
loopne
aaa
xor
xor
sarb
shl
in
clc
aas
ret
hlt
cmc
test
in
mov
aad
cmc
icebp
repnz
aam
imul
out
movl
fdivrp
fst
shrb
in
stc
fcmovnu
cmc
aam
cmp
rcr
cmp
shl
aad
mul
call
xchg
and
out
aad
idiv
frndint
int3
cmc
testl
xchg
std
icebp
in
das
iret
rcr
divb
cld
imul
cmp
aad
call
sti
in
mov
sub
jmp
xor
in
in
ljmp
in
fadd
ret
lret
dec
xchg
test
rcr
test
ss
int
cmp
ljmp
bnd
fadd
sarb
cli
out
fcmovne
test
ljmp
sti
into
cli
aam
aad
sarl
out
out
lds
loop
fmulp
xor
cli
std
stc
sarb
add
clc
add
stc
vpsubsw
out
addl
fptan
fcmovnb
clc
cmp
loopne
xlat
ds
out
and
loopne
clc
out
in
mov
sbb
jmp
fsubr
xor
not
xchg
cmp
in
sti
loopne
jmp
lock
imul
leave
leave
fdivrl
cmp
inc
loope
rolb
iret
lock
iret
loope
fdivs
shr
ret
fldl
lea
ret
ljmp
rcr
out
aam
int
out
fcmovnu
xchg
sti
not
mov
cmp
out
mul
leave
out
ss
jmp
cmc
sti
cmp
jecxz
ljmp
cli
out
adc
repz
fsubr
repz
div
loop
repz
sbb
testl
xor
enter
in
add
jmp
loope
ds
mov
jmp
jmp
repz
shl
mul
into
shll
clc
leave
in
lret
repnz
jmp
out
mov
lds
fldl
clc
rcl
loopne
ret
decl
repnz
out
int
out
out
lret
std
cmp
test
mov
stc
incl
xchg
lock
stc
fistpll
cmp
fucom
aas
sar
shl
fsubp
bnd
int
mov
incb
out
int3
in
lret
into
out
cmp
aam
cmp
in
in
out
in
loopne
test
sub
jmp
out
leave
cmp
aas
icebp
iret
fdivp
ds
out
test
loop
aad
das
loopne
clc
enter
cmp
cmc
iret
iret
f2xm1
iret
shl
repz
cld
xchg
cmc
cmc
xchg
xlat
shl
int
aad
dec
cmp
idivb
out
in
cmp
enter
lret
ror
xchg
mov
in
ljmp
sarb
idivb
roll
hlt
xor
out
int3
mov
subb
lock
call
loop
test
out
test
shr
out
iret
in
repz
in
cli
aaa
xor
std
cmp
sar
hlt
aad
mov
ret
loope
mov
ljmp
cmp
cmp
in
shr
repz
rcr
ret
cli
int
fdivr
int
fcomi
and
xlat
xor
in
jmp
fcmovu
icebp
jmp
inc
cmp
not
cmp
call
xor
xor
repz
faddl
test
sar
jmp
jmp
fildl
repnz
das
das
enter
fistpll
into
fdiv
faddp
les
lea
xor
jmp
aad
rcl
fst
leave
pop
push
arpl
ficompl
jl
repnz
xor
stc
clc
hlt
clc
cmp
icebp
enter
xlat
icebp
cmc
rcl
clc
test
addb
out
xlat
clc
leave
aam
int3
iret
ds
ds
fildl
fcmovnu
loop
mov
iret
loopne
cmc
ljmp
call
cmp
cld
rolb
loope
fmul
loop
int3
jecxz
leave
int3
cmp
incb
fcmovb
ret
loope
leave
in
mov
int3
aad
fcomi
std
ljmp
stc
repz
cmp
and
icebp
mov
loope
loopne
int
xlat
lret
aas
std
out
ret
cmp
leave
adc
lret
xchg
leave
adc
in
shr
std
xor
ror
fdiv
adc
cli
fsin
flds
int
out
out
mov
into
cmp
cli
repz
hlt
cmp
aas
hlt
filds
mov
dec
xchg
lret
fcmovnu
fbstp
fucomi
cmp
in
aam
jmp
cmc
test
enter
call
ret
lret
xor
lret
repz
xor
and
cld
jmp
test
fneni(8087
fisttps
lock
stc
shr
lock
cmp
movl
icebp
ljmp
int
int3
xor
cmc
loopne
mul
sbb
addl
mov
cs
xlat
xor
shl
test
fcmovb
lock
testb
std
mov
repz
in
out
leave
fdiv
ss
ret
sti
mov
fcom
into
out
icebp
loope
loopne
iret
in
xor
call
fsubp
test
hlt
in
roll
fdivp
xchg
fdiv
neg
ss
icebp
fnstenv
shl
cmp
hlt
into
sar
aam
stc
in
fcoml
cmc
ljmp
out
cmp
in
out
cli
shl
push
add
imul
std
inc
ret
test
xchg
loop
out
sar
lret
int3
lock
aam
shr
rol
mov
fmull
cld
out
xchg
ret
aad
shll
lret
out
out
loope
shll
loopne
cld
fld
xor
in
sbb
int
rcl
lret
cmp
fnstenv
aad
out
shl
test
fstp
out
int3
in
in
loopne
stc
cmc
div
sti
rolb
repnz
fadds
mov
lret
sti
cli
fcmovu
fscale
ds
neg
out
iret
sti
repnz
ljmp
hlt
xchg
mul
xor
aam
xor
icebp
out
call
fsubr
cld
repnz
mov
shlb
cli
lds
aad
call
iret
sarl
test
jecxz
out
int3
xchg
in
xor
ror
xor
cmp
cmp
repnz
fyl2xp1
fxtract
std
ret
out
loopne
les
shl
icebp
aam
in
aas
fcmovbe
lret
addl
icebp
ljmp
neg
rol
aam
iret
enter
and
mov
in
out
clc
incb
ror
ljmp
sti
out
neg
cmp
out
jmp
lret
clc
or
int3
xchg
loopne
into
jmp
lock
lret
cmp
cmp
in
fdiv
xchg
fsubr
loope
in
mov
xor
loopne
into
lock
aas
cmp
out
cld
in
enter
sbb
icebp
enter
ds
repz
call
xlat
sti
jecxz
rcl
fmul
lea
rorb
out
aaa
not
cmp
int
cmpb
iret
lock
sbb
xchg
nop
cld
int3
xor
ljmp
int3
sti
fcomi
rcl
sbb
repz
xchg
in
hlt
int3
xor
xor
xor
call
cmp
test
clc
loop
mov
fdivr
out
xchg
in
xchg
call
lret
jmp
aaa
fucomi
in
shl
addl
in
in
repnz
out
cmp
fcom
out
cmp
cmp
xchg
test
cli
lret
cld
test
out
xor
into
lret
cmp
lret
out
loope
enter
mov
in
in
test
in
in
div
aaa
repz
rolb
movb
jmp
leave
sarl
rcl
int
mov
call
add
jg
cmpsb
add
lock
clc
sti
icebp
out
in
ret
icebp
xchg
icebp
enter
into
ret
rcl
cmp
fnop
cld
into
int3
xlat
mul
jmp
mov
shl
test
loop
cmp
cmpl
ror
mov
fdivr
cli
cld
fcmovb
xchg
fidivl
icebp
cmp
in
lock
in
fcomi
mov
hlt
decb
fisttpll
shlb
imul
xor
fnstcw
not
out
in
mov
stc
ffree
enter
test
stc
loop
out
ror
fistpll
dec
ds
enter
sti
lea
jecxz
xor
repz
hlt
divb
call
cmp
mov
jecxz
mov
sub
cs
aad
int
out
xlat
aad
ds
div
cmp
fcom
loopne
stc
orb
lds
xor
ljmp
cmc
into
into
rol
neg
cld
call
loope
ljmp
xor
shr
cmp
shr
fdivp
in
clc
hlt
in
or
cld
into
xor
div
repnz
out
iret
std
mov
out
loope
orl
jmp
lret
jecxz
test
aad
jmp
les
loope
jmp
in
sti
cmc
hlt
rolb
rorb
clc
cmp
fst
in
into
in
lock
stc
bnd
neg
add
testl
cmc
jmp
repnz
into
ror
cmp
in
sarb
addb
in
stc
fadds
ljmp
cli
out
cmc
repz
test
repnz
int3
fisttps
mov
out
icebp
cld
icebp
div
jecxz
in
cmp
clc
cli
call
mov
xchg
loope
fisttpll
aam
repz
icebp
cmp
faddl
add
sbb
enter
in
loop
int3
out
xor
aam
xor
sub
fdiv
loop
xchg
out
cmc
test
aaa
aaa
loope
in
shr
cmp
xor
mov
xchg
fmul
fdivr
sar
test
xor
fxch
ret
fstpt
cmp
ret
addl
std
int
ror
faddl
lret
in
neg
xor
fucomp
cmp
out
sar
cmpb
test
fildl
sti
xchg
xchg
cmc
ljmp
cld
in
cmp
in
aas
ret
icebp
rol
ret
test
loop
clc
fcmovne
cmp
int3
icebp
sbb
cmp
jecxz
fadd
cli
mov
les
cmp
int
cli
ss
shr
xchg
ret
in
enter
loop
out
shr
jmp
ror
sarl
shl
cmp
fsub
test
filds
jecxz
int3
loop
shr
in
repnz
int3
aam
int
hlt
ds
clc
repz
out
out
cmp
fsubp
mov
jmp
rcl
int
leave
cld
cs
loopne
out
faddl
leave
cld
mov
std
loop
in
out
xor
jmp
enter
xor
fldl
mov
in
ret
call
fcom
aaa
xor
ljmp
jecxz
xchg
leave
jecxz
cmc
fisttps
sub
xor
in
aaa
rcl
rcl
in
cmp
iret
fxtract
repnz
std
call
mov
mov
fsubrp
sub
xor
repnz
jmp
rol
lret
loopne
faddp
hlt
loope
fadd
lock
ss
out
stc
repz
loope
hlt
stc
std
loop
vpsubsw
int3
jecxz
call
rol
stc
ljmp
shl
sti
in
clc
fucomi
xchg
out
loope
not
jmp
stc
call
ret
loop
fcmovne
mov
jecxz
in
xchg
shl
lret
fdivp
shrl
leave
ss
cld
fucomi
fst
icebp
aam
out
fidivrl
fst
loopne
ljmp
xchg
icebp
in
in
jecxz
cld
xor
shl
rcr
call
enter
jecxz
lret
xchg
cs
xor
out
cmp
aam
ds
mov
movl
cmp
jmp
mov
leave
ret
int
leave
lret
and
scas
movsl
jg
cmpsb
add
fxam
fsubp
xchg
fmull
shl
jmp
cld
fucomip
repnz
out
jecxz
addb
loopne
in
mov
xchg
xchg
shll
cmc
iret
shrb
aaa
imul
lret
lret
aam
xchg
mul
cli
mov
iret
fucomi
icebp
int3
lret
shl
lret
fdiv
cli
shl
jmp
cli
add
fdivr
lret
jmp
in
aam
ret
out
call
ds
in
cmp
cmp
fimull
mov
icebp
cld
lret
fsincos
xor
shlb
xlat
dec
iret
ds
stc
sar
out
call
repz
into
icebp
jmp
fucomp
fidivs
out
rcr
shlb
aad
jmp
in
aam
into
lea
neg
into
xor
shr
cmp
call
loopne
in
mov
xchg
jecxz
in
fcomip
shlb
in
in
shl
idiv
icebp
aas
sarb
xor
div
loope
loopne
fst
out
lea
cmp
jmp
sti
xlat
aad
fdivp
xor
out
icebp
shl
not
int
shr
movb
loope
xor
clc
into
lret
xchg
out
fadd
out
orl
clc
rcr
std
int
icebp
cmp
lock
sti
aam
loope,pt
xchg
out
loop
int
hlt
shl
aad
cli
int
hlt
rcr
aas
mul
ret
ret
sti
repnz
lds
xchg
out
aam
xlat
sar
sti
aam
fdivp
faddl
cmp
lds
jmp
aaa
leave
in
xbegin
call
imul
sti
shl
aam
out
fsub
std
repnz
xlat
cmp
fadds
xor
sbb
mov
ljmp
fldl2t
in
leave
imul
into
cmp
hlt
fcmovbe
cli
idiv
test
test
in
hlt
lock
clc
out
fsubrp
and
in
in
aam
out
mov
sti
filds
xor
cmp
xor
repnz
imul
cmp
mov
out
leave
ljmp
leave
aaa
fdiv
fucomp
cmp
sti
rolb
call
sti
fldz
in
out
mov
enter
enter
loop
ret
repnz
ljmp
in
cs
in
enter
add
aam
xlat
fdivr
mov
aad
out
lock
cmp
fsubp
sbb
rolb
call
in
out
ljmp
aam
aam
cmp
in
fld
icebp
in
cld
call
in
icebp
mov
not
jmp
repz
out
loopne
loopne
jecxz
stc
inc
cld
leave
jecxz
std
iret
mov
leave
jecxz
repnz
fdivs
fdiv
cld
in
test
aad
push
enter
nop
mov
xchg
repz
int
ljmp
repz
out
cld
fadd
out
mov
and
test
cmc
into
aad
in
iret
out
test
cld
hlt
jecxz
fsub
fadds
mov
mov
shll
out
neg
clc
fdivrl
sarl
ret
ret
out
xchg
sti
int3
adcb
jecxz
ss
cmp
ljmp
repz
mov
std
out
out
fisttpll
ss
in
cmp
cmp
shl
shr
shr
fiaddl
fiadds
hlt
das
shr
in
into
jmp
fcomi
cmp
add
test
xchg
fmul
shr
out
xor
cmp
in
test
shl
call
fadd
jmp
cli
int
sti
ljmp
stc
jecxz
in
sar
cmc
out
aad
aas
and
mov
movb
std
dec
jecxz
shr
lret
xlat
out
fldln2
call
hlt
int
sti
rcl
ret
test
jecxz
fmul
faddl
in
shr
hlt
cmp
fmul
sar
loope
sbb
repz
mov
leave
out
shr
cs
lock
call
cmp
cmp
ret
out
fadds
test
call
enter
ljmp
fsincos
fcmovu
loopne
repz
ljmp
test
push
add
movl
jmp
sarl
rcl
rcl
rol
ret
iret
inc
push
or
cmpsb
add
mov
fsubrl
sub
lret
repnz
ror
int3
loop
mov
mov
icebp
cli
lret
mov
in
lret
jmp
enter
rcr
ljmp
fcmovu
in
cli
jecxz
fdivr
orl
jmp
idivb
aad
loopne
in
sar
in
mov
out
sub
icebp
int3
iret
rol
sti
enter
jmp
sub
jecxz
mov
in
int3
ret
ljmp
enter
leave
roll
in
jmp
test
cli
incl
shll
clc
stc
cmp
adc
fld
in
shl
out
in
jmp
test
out
cs
out
clc
fidivrl
testb
call
icebp
ret
shl
shll
xor
fucomi
out
shr
aaa
idiv
xlat
shl
filds
jecxz
std
in
fcmovne
and
ror
aaa
xor
aad
fcmovnbe
fcmovu
idiv
hlt
in
xchg
aam
test
cld
loopne
faddl
icebp
repnz
out
cmp
repnz
iret
into
in
test
rcr
sti
loope
out
mov
into
ss
sti
out
divb
std
sbb
aam
fildl
cmp
orl
rcl
leave
iret
cmp
cmp
stc
fnstcw
ret
rcr
cld
leave
mov
call
xor
cmc
in
into
repnz
call
test
orl
in
aaa
rol
xor
repnz
into
loope
cmp
jmp
sar
lock
jmp
bnd
loope
shl
fcmovnu
adc
cmp
addb
int
loop
repnz
fisubrs
jmp
cli
into
ss
cmc
flds
hlt
loope
in
call
in
enter
icebp
out
aad
rol
out
fdiv
lock
cmp
loope
shr
stc
and
sar
adc
lret
fsub
in
aam
cmp
mul
rorl
cli
cld
loope
jecxz
imul
shr
rcr
fcmovnb
fdivp
fdivrp
fdivrl
cmp
test
fadds
int
out
nop
into
aaa
xor
cmp
cmp
call
testb
fcmovne
mov
repz
mov
ds
in
xor
int
addl
aad
xchg
clc
repz
fmul
mov
int3
cmc
aam
repnz
fcmovnu
cmp
icebp
idiv
cld
roll
int3
and
mov
repnz
neg
out
sti
fdivrl
std
sti
xchg
cli
idiv
ret
leave
fdivr
std
cld
xchg
fsub
mov
clc
stc
imul
aam
out
sar
aas
cli
cmp
repnz
stc
aam
mov
nop
ljmp
mul
jmp
stc
cmp
aam
xlat
fsub
in
ftst
jecxz
ljmp
fcomi
shr
enter
mul
iret
fadd
faddp
fnclex
stc
ljmp
nop
out
out
shl
cli
in
rcr
ds
cli
rolb
fmull
jmp
loopne
jmp
hlt
std
aam
fcmovnbe
ds
out
test
fcmovnu
aam
call
popl
fdivs
xor
repz
jmp
ret
out
shl
mov
in
call
in
xor
enter
xor
fdivr
repz
aam
and
stc
std
mov
ljmp
iret
divl
xor
jmp
enter
fcomp
test
fyl2x
div
roll
stc
call
repz
fcmovnbe
std
cli
lret
cld
sbb
out
aad
hlt
sar
fsubr
fadd
xchg
repz
int
int3
cld
cmc
cmp
aas
sarl
not
fdiv
test
test
iret
addl
in
int
fdivl
sti
rcl
cmp
jecxz
xchg
fsin
jmp
xchg
loope
sbb
call
cld
rcr
leave
ror
hlt
fcomip
cld
into
mov
ret
test
fcmovnu
popl
in
xor
test
xlat
lret
stc
aad
dec
fidivrs
ss
cli
out
mov
fstp
cli
cld
xor
hlt
not
out
icebp
aam
imul
jecxz
int3
cli
cmp
xchg
loopne
jmp
loope
loop
jmp
loop
cmp
inc
lock
jmp
sarl
aad
aad
aad
sbb
or
jne
cs
cmpsb
add
std
sarl
repz
iret
icebp
rol
mov
imul
jmp
fmull
xchg
fisttpll
fprem
xlat
clc
int
aam
std
rolb
test
jmp
fucom
icebp
cli
ror
shl
xor
loop
in
imul
cmp
sti
vmaskmovdqu
in
mov
out
xchg
int
loope
xlat
cmc
out
int3
out
cmc
iret
stc
stc
loope
rcl
xchg
int3
mov
jmp
xchg
jmp
ljmp
shl
out
jecxz
icebp
fcmovu
shl
jecxz
test
in
adc
xor
fsincos
lock
imul
xlat
in
loop
neg
movb
ror
lret
jmp
rcl
loopne
in
aas
call
repz
aam
cld
test
stc
out
int
out
jmp
out
xor
in
fscale
out
ret
lock
roll
decl
call
in
leave
repz
into
std
int3
aad
cmc
into
sti
out
leave
test
loop
idiv
xchg
ret
nop
ljmp
ss
lock
cmp
cmp
shl
vpmovmskb
test
call
cli
cmp
lock
sub
into
ljmp
cmc
rolb
lret
cld
mov
nop
loope
xchg
cmc
lock
cmp
enter
sti
lret
int3
ds
aad
jmp
inc
mul
lds
cld
mov
into
cmp
cmp
sarl
lret
cli
rolb
xchg
fcmovnbe
mov
xor
into
rcr
cmp
sub
repz
test
in
cmc
vshufps
repz
in
out
out
cmp
aaa
jmp
ret
shl
stc
lret
mov
test
rorl
sti
fcmove
jmp
rcl
aam
fcom
pushl
repnz
lock
loop
repz
std
into
aaa
out
cmc
in
ss
fdiv
mov
lret
lea
aaa
jecxz
rcl
repz
iret
int3
sti
repz
fcmovnu
enter
test
enter
ficoms
xor
cmp
icebp
cmc
out
cmp
hlt
xlat
lock
cld
or
xchg
sub
clc
into
fcmovnbe
cmc
sti
out
cmp
icebp
repz
stc
out
incl
std
mov
not
cs
jmp
xor
std
cmp
loope
ljmp
mov
adc
out
stc
in
lret
fucomi
lret
jmp
frstpm(287
shl
lret
ds
iret
pause
test
clc
in
jmp
loope
idiv
loop
incb
std
jmp
shr
iret
das
shll
cmp
shl
loop
rol
test
test
test
ljmp
shrb
cmc
lret
jecxz
xor
call
ffreep
adc
in
not
repnz
stc
call
xor
int
call
adc
test
mov
xchg
icebp
nop
push
shl
in
fucomi
lret
lret
aaa
adc
sti
lds
xchg
rol
ror
xor
sti
testl
mov
loopne
cmp
xchg
xchg
xlat
jmp
divb
hlt
jmp
cmp
rcr
fsubr
in
shl
loopne
mov
sti
icebp
rcr
fsub
fisttps
cmp
in
icebp
cmc
cmp
aad
incl
cmpb
jecxz
nop
in
cmp
call
out
xor
roll
and
fsub
imul
out
mov
icebp
into
jmp
jmp
into
cmp
xchg
mul
stc
mov
in
iret
leave
xchg
loope
in
sub
sub
cmp
cmc
out
leave
hlt
cmp
ret
stc
rolb
enter
aad
hlt
cmp
xlat
xor
loope
aam
sbb
stc
test
mov
out
stc
lret
aad
sar
ljmp
aam
ds
test
fdivp
out
cs
ss
rcr
into
rcr
out
shl
aam
sbb
in
cld
enter
fmulp
xor
int
fcmovne
bnd
out
idivl
out
xchg
cmp
out
out
rol
lock
xchg
xlat
xor
loop
call
loopne
jecxz
rcl
mov
imul
jmp
ret
fcmovnu
aad
inc
pop
inc
xlat
cmp
and
cmpsb
add
fcmovnb
repz
ljmp
lret
xor
cmp
cmp
cmc
fmul
into
addb
fcmovu
clc
jecxz
out
fst
jmp
fnstenv
enter
ss
fst
out
out
xlat
aas
cli
jecxz
sti
and
aam
cs
ror
cli
in
cmp
cld
loope
clc
int3
loopne
fxtract
cld
jmp
sub
repz
in
repz
in
sar
xor
test
test
add
fadds
fiaddl
fldcw
out
repnz
xor
in
in
loop
ret
aad
loope
loopne
mov
and
xor
aaa
cmp
jmp
call
fsubp
cli
in
ret
and
icebp
call
lret
aam
aaa
in
cmp
dec
sarl
hlt
xchg
lock
out
fsub
xchg
xchg
fists
icebp
fsubr
fld
in
sar
in
ret
cmp
rorb
lret
call
jmp
leave
ror
xor
cmp
in
xor
cld
cmp
cli
xor
sti
clc
call
mov
into
hlt
out
hlt
xlat
shlb
icebp
cmp
aam
loope
aam
roll
mov
mov
mov
ds
divb
cmp
loopne
loope
in
xchg
les
icebp
iret
std
loop
sub
int
aas
fcomip
in
fcmovu
aas
in
add
xchg
fucomi
ror
addl
icebp
sub
aad
fcomip
shl
rcr
cli
ret
into
std
test
aad
ret
std
std
cmc
shl
rol
enter
cld
icebp
rcr
out
rol
rcr
ret
in
or
std
out
xchg
aad
aad
xor
aaa
ds
clc
std
aas
lock
test
xchg
call
shr
lret
int3
cmp
fidivrs
cmc
iret
ds
or
loopne
int
ffreep
ror
neg
lock
repz
out
lock
lock
cmp
out
add
mov
shl
call
in
jmp
ret
in
rol
call
test
xchg
mov
xchg
out
lret
cmp
not
stc
aas
fcom
repz
in
ds
mov
loopne
loop
in
fcmovu
int
repnz
loop
icebp
enter
lret
aam
std
int3
lret
idivl
cmc
aam
in
and
mov
jmp
hlt
fucom
fcmove
repnz
ret
shl
jecxz
hlt
hlt
in
xchg
test
ret
out
repz
fcomip
cmp
incl
bnd
jmp
and
or
jmp
call
lret
fnstenv
loop
ds
lock
enter
les
adc
loop
jecxz
out
cmp
repz
int3
shl
iret
xchg
repz
fcmovb
hlt
and
sbb
cmc
fsubr
out
aaa
fdivr
std
out
fxch
lock
sti
fidivrl
into
mov
sbb
in
ljmp
out
iret
out
jmp
int
cmp
cmpl
fadd
cli
clc
mov
mov
out
jmp
jmp
icebp
shl
rcl
lock
aad
xor
ljmp
mov
sti
sti
jecxz
lret
cmp
das
sub
repnz
sti
lret
loope
fld
ret
movl
iret
iret
jecxz
jmp
aad
xor
ss
fdivp
stc
fcmovb
cld
jmp
xchg
nop
rolb
cmp
jmp
fcom
loope
cmc
cld
fcom
lock
clc
lea
jecxz,pt
in
repnz
cmc
ss
in
repnz
loop
test
xlat
idiv
rol
lret
jmp
cmc
cmp
enter
cmp
aas
out
aam
incb
cmp
loope
shrb
imul
cmp
call
loopne
fcmovbe
sbb
mov
call
lret
int3
fdivp
xchg
into
in
xor
xor
hlt
xor
loope
loopne
aam
into
cmp
cmp
clc
in
std
enter
xor
loopne
fcmovnb
cmc
fdiv
into
inc
repz
sti
stc
aas
lret
decl
aas
fdecstp
repnz
shl
cmc
testb
ffreep
test
cli
in
out
loop
rcl
iret
leave
hlt
sti
fpatan
cmc
fcomi
hlt
aaa
repnz
mov
enter
inc
hlt
cmp
je
mov
orl
mov
xor
jmp
xlat
int
ret
ljmp
jg
cmpsb
add
out
rcll
ss
fnsave
aad
shl
loop
mov
lret
in
popl
lock
fldl2t
faddp
imul
fcmovu
fcmovnb
cli
out
mov
in
loope
xchg
jmp
clc
sti
repnz
xor
cmp
into
cmp
cmp
roll
mov
or
jmp
pushl
xor
rol
aaa
shl
in
fadds
xlat
stc
int3
sti
mov
out
fcomip
mov
jecxz
shl
iret
shr
repz
shlb
rol
repz
sbb
enter
repz
out
hlt
lock
sti
aas
adc
cmp
in
fildl
mov
call
hlt
fmulp
sti
shl
fdivr
enter
orb
xor
out
leave
cmp
sti
repz
rcr
rolb
jecxz
lock
hlt
ljmp
cs
rcr
hlt
fnsetpm(287
lds
fsubr
lret
jmp
out
mov
iret
into
ss
ret
cmp
shl
iret
cld
loope
repnz
repnz
and
lret
jmp
xor
icebp
cld
out
rcl
cmp
stc
faddl
int3
call
addl
shr
in
fcmovnbe
shl
out
repnz
ljmp
mov
test
jmp
cmp
xlat
jmp
int
add
out
in
std
jmp
xchg
ljmp
xchg
test
clc
out
ss
mul
out
xor
aam
clc
and
cld
mov
out
out
shl
shr
dec
xlat
clc
stc
fscale
addl
decb
jmp
out
cmp
addl
out
test
in
lock
int
repnz
fucom
mov
xchg
in
std
repz
repz
sti
cmp
out
int3
icebp
in
cmp
hlt
out
sar
cli
ds
cmc
aam
mov
cmp
out
int
iret
int3
leave
out
std
jmp
into
out
mul
sti
shl
incl
loope
xchg
cli
mov
repz
out
cmc
div
cmc
sarb
cmp
jecxz
in
mov
into
mov
into
aam
cmp
fstp
cmp
rcr
aas
testb
cld
into
mov
out
cmc
out
iret
jmp
lret
xlat
sar
fadd
fdivrl
repnz
cmp
lret
fnsetpm(287
sti
jmp
nop
mov
enter
ljmp
in
fld
clc
ror
xlat
fcmove
mov
icebp
out
cmc
out
xbegin
xor
loop
repz
test
ds
std
loop
ljmp
std
lret
cmp
cmp
rcr
rcl
ret
loope
cmp
movb
incl
xor
shr
shl
flds
and
xchg
int3
out
loop
lret
repnz
ror
xor
loop
cs
std
loope
ret
lock
icebp
repnz
neg
loopne
cli
out
faddl
repnz
clc
cmp
aam
not
aam
loope
ds
jecxz
rol
test
jmp
lret
fsubr
shr
lock
ret
in
out
in
sarb
icebp
test
test
aas
in
enter
out
call
out
ret
shl
ror
jmp
test
xlat
frstpm(287
loopne
ret
lea
xchg
xor
sub
cmc
fcomi
enter
jecxz
in
fcmovnbe
std
hlt
loope
testb
out
les
in
hlt
cmc
xor
aam
rolb
stc
fcmovu
sbb
into
fmuls
ljmp
repz
fdivrl
cli
loopne
lret
cli
jecxz
decb
mov
lret
loop
out
out
cmp
fdivs
ret
faddp
orb
mov
fidivs
in
out
cmc
icebp
in
hlt
hlt
in
sarb
fucomi
icebp
sbb
mov
mov
mov
jecxz
xor
fcmove
incl
inc
ret
add
loop
xchg
out
ret
shr
hlt
repnz
cmp
ss
fstpt
test
fsub
jecxz
int3
ljmp
jmp
div
add
jmp
rol
int
fst
fcmovne
xor
rolb
jg
cmpsb
add
in
leave
fsubr
rcr
in
int3
sti
hlt
fucom
fcmovb
xlat
flds
clc
out
xchg
xchg
in
cmp
in
jmp
sub
test
ljmp
loop
fucomp
repz
ss
xor
call
clc
cmp
in
out
aad
incl
loop
fucomi
repz
out
cmc
int
aad
stc
cmp
fcomip
aam
fcmovbe
fldl
cmp
test
sti
out
rorl
shl
das
fnstsw
adc
loopne
ljmp
xchg
int3
sar
out
fsubrs
rcr
leave
sub
repz
in
shl
xabort
test
xchg
ljmp
cmp
fdivr
loope
cmp
int3
imul
idiv
fidivrl
not
leave
enter
into
fdivp
in
aam
aad
in
std
repz
repnz
in
inc
mov
mov
aad
lret
lret
shr
and
rcr
mov
and
mov
into
icebp
mov
out
sti
idiv
leave
sar
jecxz
ret
loop
fdecstp
cld
ljmp
incb
xlat
sub
cmp
jecxz
cmpb
faddp
cld
test
xchg
xchg
repz
clc
stc
cmp
fucomi
rolb
lock
jmp
sti
enter
loop
test
das
loope
aad
out
cmc
call
lock
out
std
rorl
testb
hlt
int
hlt
lret
aad
cmp
enter
ret
hlt
in
ret
lea
lret
out
in
jmp
xor
out
hlt
out
out
or
stc
loope
addb
xchg
in
lock
in
jmp
rcl
in
in
int
out
ror
icebp
fsub
ffreep
repz
cli
cli
mov
test
iret
xor
fsqrt
stc
repnz
cld
sar
ror
ljmp
cld
fmull
test
xchg
fnstenv
jmp
aas
aas
ror
and
std
jmp
cmc
int
xchg
loope
repz
xor
in
cmp
int3
aad
push
aas
xchg
xchg
in
in
fstp
fdivp
in
fsubrp
ds
in
ljmp
cmc
loop
hlt
lock
call
in
fmulp
mov
jecxz
hlt
out
aad
in
xor
aam
std
fdivrs
sti
loopne
fcomi
fmul
mov
mov
xchg
out
int3
out
clc
ljmp
repnz
jmp
loopne
shl
rcr
lret
les
lret
repz
call
aam
in
cmp
cmp
ds
rcr
in
fsub
std
in
nop
call
out
cld
jecxz
hlt
lock
aam
xor
fxch
xlat
jecxz
cmc
cld
fdivp
rcr
cld
hlt
xchg
xchg
mov
das
rcl
xor
lret
repnz
aad
loop
mov
jmp
jmp
xchg
jecxz
rcll
clc
rcr
xor
fucomp
ret
shl
ss
call
fimull
lret
int3
loope
rcr
fxch
int3
lret
in
addb
cld
mov
test
cld
neg
leave
sti
iret
mov
ret
into
int3
ljmp
fdivr
hlt
loopne
in
xchg
stc
out
leave
or
ljmp
fdivr
std
shl
ret
hlt
loop
aad
ljmp
mov
vcvttpd2dqx
xor
in
enter
loopne
repz
loopne
cmp
xchg
xchg
shlb
aam
cli
fcmovb
xlat
aas
sarb
fcmovb
cmp
lret
ret
test
cmp
fisubrs
icebp
aaa
ss
cli
shl
loope
out
ret
jmp
enter
mov
roll
enter
xor
loope
cli
ror
rol
in
test
lret
or
in
aad
out
aas
fidivrl
loope
cli
sar
neg
in
clc
ret
xor
test
shl
in
stc
lret
jmp
call
addl
in
out
lds
ret
ss
cmp
xor
not
jecxz
call
mov
test
out
cmp
in
repnz
xchg
push
test
fsubp
jmp
in
repnz
ljmp
loope
jecxz
pop
jmp
lret
ret
fstpl
fidivrl
test
cmpsb
add
std
fcmovbe
cmp
test
mov
iret
int3
icebp
shll
sub
aaa
aad
rcl
fmul
cmp
loopne
rol
hlt
fisttpl
nop
incl
ret
in
xor
xor
fst
roll
or
jmp
enter
int
div
in
cmp
clc
aad
repz
cmp
aas
cld
fcmove
fcom
cld
mov
lret
enter
xor
xor
fucomp
fdivr
fnstcw
ret
out
testb
mov
shl
cld
in
xor
cmp
xor
in
out
cld
repz
decl
rcll
out
out
cmp
fdiv
cmc
and
neg
cmp
ret
leave
rcr
lret
xchg
aam
in
repnz
sub
in
in
sti
cld
int
sbb
push
fsubr
loop
in
sti
lret
into
in
ss
cmp
lock
clc
ljmp
in
out
and
in
in
test
ret
hlt
lret
leave
lock
xor
cmp
cmp
aam
fadd
mov
cld
mov
ret
jmp
fdivr
ds
neg
fld
cmp
jmp
sbb
in
jmp
loopne
ljmp
and
out
int3
incl
ret
cli
mov
test
call
out
ret
in
xor
xor
sbb
lock
ds
out
call
iret
int
jmp
xor
fpatan
loope
fneni(8087
aam
xchg
in
in
icebp
into
mov
xor
shl
aad
jmp
stc
fnstsw
ljmp
ljmp
icebp
int3
int
icebp
lret
fdivs
dec
xor
test
cld
in
leave
xchg
jmp
add
leave
lds
ror
leave
int3
addl
ds
cli
movb
in
loop
out
xor
into
enter
rcr
in
fsub
stc
shl
in
sar
out
jmp
enter
lret
stc
in
cmp
cli
shl
hlt
loope
shl
adc
loop
jecxz
roll
ror
out
int3
in
cmp
ss
add
mov
mov
fdivp
jmp
lock
aaa
ds
fdivrl
fnsave
aam
fnsetpm(287
hlt
out
mov
jecxz
loopne
shl
xchg
stc
sarb
das
xlat
in
loope
repnz
jecxz
cmp
cld
sti
mov
lret
shl
repz
cld
jmp
lret
inc
rolb
clc
loope
fsub
repz
jmp
shlb
std
call
test
idiv
add
vpsubb
jecxz
out
xchg
ret
iret
ret
rcr
jmp
sti
loope
cmp
idivb
std
mov
jmp
leave
mov
in
fcmovbe
or
hlt
xor
ret
into
lret
enter
iret
out
fcmovu
cli
mov
loop
loopne
lret
leave
icebp
xchg
iret
not
das
xor
into
cmpb
aam
shl
cmc
xchg
test
ljmp
test
out
ds
out
cli
dec
into
loopne
aaa
loope
rcr
jmp
in
call
xor
ror
xor
xor
fmul
cld
cmp
addl
sub
mov
lret
in
loop
into
in
aad
repnz
fxch
iret
jecxz
loop
fdivp
clc
fucom
call
rolb
cmc
imul
shr
div
clc
out
cmp
ror
fcomip
in
call
enter
xchg
call
ljmp
shl
cmc
cld
inc
jecxz
cmc
ljmp
out
and
icebp
iret
ror
fdivs
iret
iret
ret
sti
std
jecxz
jmp
jmp
out
fldl
jmp
xor
call
idiv
cli
in
inc
icebp
sti
leave
xabort
iret
stc
call
iret
test
ret
rcr
clc
aad
aad
ret
ret
out
ret
fsub
xchg
aad
in
in
sti
imul
rcr
xlat
in
rcl
ret
loopne
stc
clc
lret
jmp
std
into
decb
cmc
jmp
ljmp
push
test
call
loop
in
mov
cmc
in
ljmp
ror
std
rolb
cmp
test
xchg
pop
pop
leave
ret
mov
jmp
aam
fcmovnu
mulb
popa
dec
aam
jg
cmpsb
add
loope
sub
in
rcl
int3
into
xor
icebp
fst
fcmovne
fcomip
ret
loopne
fsub
mov
mov
mov
enter
in
out
cs
repz
xor
icebp
clc
iret
int
fidivrl
sar
fcmovu
jecxz
fldz
mov
shrb
lret
aam
fnstcw
xlat
addl
loopne
xchg
xor
jmp
hlt
sti
cmp
call
ret
loop
ror
fiaddl
cmp
sub
icebp
aaa
not
ljmp
mul
cmc
call
icebp
fcomi
xchg
in
fabs
icebp
mov
int3
jecxz
inc
cld
jecxz
std
in
ret
sti
jmp
imul
shl
hlt
xlat
lret
iret
xor
lret
std
addl
fcomi
orl
call
cs
stc
hlt
cmc
out
enter
ror
fcomi
ret
test
fcmovnb
jmp
jecxz
mov
int3
in
lret
lock
aad
cmp
aam
in
stc
hlt
incl
lret
stc
shr
lret
enter
int3
loopne
stc
les
fdivrp
mov
out
enter
xchg
loope
ret
int
into
sar
and
mul
lock
mov
xorb
out
xor
into
icebp
loopne
in
iret
int3
in
repnz
ret
fstp
leave
in
lret
cld
in
rol
into
cmp
test
int3
ret
rcr
fucom
fdivr
jecxz
add
int
rol
xor
loope
fucom
into
cmp
lea
enter
in
xlat
ret
lret
int3
int3
aad
in
repnz
std
mov
int3
out
lret
xchg
aad
sub
xor
repnz
fyl2xp1
aas
lret
sti
fidivrs
repz
sti
sbb
inc
enter
cmc
or
call
rcr
aaa
out
cmp
aad
sbb
aad
std
repnz
in
in
lds
lock
out
ss
repz
hlt
iret
stc
iret
xchg
fsubp
loopne
sub
ror
lock
xlat
ss
cli
ss
lock
ljmp
leave
lret
nop
xchg
in
lret
ljmp
fsubp
incb
cmp
mov
iret
fxam
cli
int3
fsub
cs
jmp
out
or
loop
xchg
aas
fdiv
hlt
loop
add
ficoml
fdivp
in
repz
fcmovnb
xor
repnz
test
lock
f2xm1
loope
idiv
fldz
leave
repz
xor
shl
jmp
aam
cmp
faddl
enter
lret
in
jmp
cld
int3
hlt
xor
clc
ss
fxch
xlat
hlt
fcmovbe
mul
cld
ret
add
leave
ret
jmp
hlt
cmpl
ljmp
in
aad
clc
shl
incb
ljmp
iret
out
out
out
shlb
stc
in
testl
cmp
repz
jmp
cmp
xlat
stc
cmp
fcmovne
cli
cmp
cmc
out
fucom
testb
into
cmc
loop
rol
icebp
ljmp
fiadds
sti
fdivr
not
loop
mov
std
shl
xchg
shr
xor
shl
ljmp
ret
aam
repnz
std
int3
xchg
xchg
jecxz
orl
fst
aaa
shll
sar
int
cmpl
sbb
lds
mov
test
xchg
out
icebp
repz
int3
shl
aas
into
addl
loop
xchg
mov
test
sub
sti
call
hlt
sti
fcmovu
fxch
shr
lret
fadds
test
xor
shl
repnz
neg
repz
repz
out
xlat
fst
mov
sti
in
neg
lret
rorb
cmp
stc
stc
cmp
loopne
fcomi
ror
aam
enter
out
sti
jmp
in
shlb
test
xor
fdivr
repz
icebp
test
xchg
mul
cmp
cmp
repz
stc
leave
fucom
in
mov
cld
int
jecxz
xor
sarl
aad
cmp
cmp
xlat
shl
aam
idiv
fldpi
lea
add
cmp
je
mov
jmp
int
aas
ror
rcr
fcmove
mov
js
ret
pop
jmp
cmpsb
add
jmp
test
ds
aad
cli
repnz
std
rorl
jmp
lret
lret
clc
or
flds
cmp
loop
iret
iret
hlt
xor
out
cmp
ds
jecxz
clc
test
faddl
out
div
rol
int
repz
xor
into
fiaddl
cmc
ljmp
out
sbb
xor
xor
in
cli
cmp
jmp
fdivr
ds
ret
vpmaxub
loope
sub
aas
call
aad
xor
aaa
mul
aad
out
shl
enter
test
out
call
out
enter
cmp
iret
shr
jecxz
aad
jmp
enter
jecxz
aaa
repnz
icebp
repnz
xor
fsubr
iret
cli
loopne
aam
xlat
xlat
in
iret
aad
rol
shll
in
call
incl
ror
jecxz
test
mov
mov
ss
pushl
lret
out
ret
mov
stc
clc
ftst
into
rcll
fdiv
icebp
rcr
cmp
fdivr
cld
test
loop
shl
rolb
adcb
fcmovnbe
ss
aad
iret
out
roll
loop
fucompp
xor
fprem1
fcom
idivl
out
ror
ret
or
cmp
fxam
out
mov
ror
mov
lret
ret
fucomi
out
fdivrp
in
rcr
aad
sti
faddp
loop
in
jecxz
cmc
test
xor
xor
stc
aam
into
dec
in
not
adc
lret
fldlg2
fadds
iret
jmp
xor
out
jmp
loop
cld
fadds
mov
test
lret
leave
sar
cmp
out
cmp
lock
aas
in
rcr
jmp
cmc
fstp
addb
imull
jmp
ret
jmp
ds
cmp
inc
in
addl
xchg
and
xor
sar
xor
int
clc
icebp
fistpll
xor
mov
aad
testb
mov
in
sub
into
les
int
roll
ret
ret
in
cld
hlt
out
call
iret
rclb
xor
in
fxtract
jmp
ffree
ds
test
fcomp
and
lds
in
call
leave
ds
cmp
loope
sar
fsubp
std
ljmp
xor
repnz
fcomip
cli
std
in
cli
into
loop
lret
jmp
lret
xchg
repz
icebp
xor
call
neg
cmpb
in
jecxz
repnz
out
loop
call
xor
sti
cmp
ret
cli
rol
cmp
orl
ljmp
int3
cmp
ror
adc
mov
test
rcl
mul
xor
jmp
cmp
fdivrl
in
loop
shl
lock
mov
ror
out
repz
cmp
cmc
cmc
xlat
cld
repnz
cmp
mov
rorb
cmp
mul
jmp
fdivrp
xlat
loop
repnz
enter
faddl
call
fstpt
out
cmc
shl
out
int3
xrelease
clc
cmc
test
ret
rcr
in
neg
jmp
xor
std
leave
not
cmp
fcmovnb
ret
lds
xor
mov
clc
repz
cmp
hlt
clc
repnz
fadd
lock
testb
mov
push
in
call
out
shr
std
fcmovnb
fiaddl
sarb
mov
std
loopne
call
ror
lret
fld1
repz
stc
jecxz
incb
test
jmp
ljmp
into
repnz
repnz
sbb
fstp
ljmp
in
loopne
cmp
shr
jecxz
rcr
clc
aas
clc
loope
jmp
int
xor
faddp
ret
in
jmp
mul
fcmovu
clc
rcl
test
sti
decl
shl
xchg
repnz
clc
out
out
fdivrl
repnz
add
lock
decl
add
add
rol
iret
aad
aad
adc
lea
sub
test
jg
cmpsb
add
fdivr
cmp
cli
aam
jmp
out
mov
test
lea
out
jmp
cmp
in
repz
addb
fstp
xor
lea
fsubr
aam
stc
xlat
jmp
fldl
mov
loop
iret
in
test
call
out
ss
fxch
rcr
or
fsubp
out
filds
rcr
fists
rcl
xor
cmp
xor
repnz
cmp
iret
jecxz
leave
mov
fdivrp
xchg
int3
jecxz
call
ss
xor
cmp
hlt
into
fiaddl
xlat
cld
icebp
ljmp
out
fld
ss
in
lock
mov
loop
mov
fucomp
nop
cld
fidivs
out
repnz
jmp
fcmovne
cmp
out
call
in
out
fcmovu
and
enter
cld
lock
lock
fadd
repz
clc
enter
in
mov
loopne
xor
xor
cli
leave
shr
repz
repnz
repnz
mov
in
out
call
ljmp
cmp
and
xchg
in
shl
loope
iret
jmp
out
cmp
aaa
icebp
out
call
idiv
iret
icebp
loope
addl
sar
cli
shr
icebp
ret
and
aad
or
loop
mov
call
jecxz
lock
hlt
aaa
out
cmp
jecxz
loopne
cmp
cli
xchg
in
ljmp
sub
fsubr
fidivrl
out
ret
in
in
orl
into
int3
cli
icebp
fucomp
aas
mul
icebp
fdivrl
rol
add
movl
call
fnclex
in
sarb
int3
fsubrp
ret
cmp
div
test
jecxz
orl
divb
xor
xor
xor
fnstcw
xlat
cmp
xlat
stc
jmp
loopne
xchg
xor
cs
sub
shl
ljmp
jecxz
clc
ret
lock
iret
iret
out
jmp
xor
cmc
int3
lret
cmp
iret
fdivr
int
ret
loop
clc
jmp
mov
roll
ss
iret
lret
sarb
aas
cld
loop
les
loop
jecxz
lock
fld
xor
int3
ljmp
lock
faddl
out
rol
xor
cmp
rcl
stc
in
loope
cmc
fadds
in
inc
fisttps
out
xlat
icebp
ljmp
cld
fdiv
in
mov
fcmovu
int
in
orl
hlt
int3
fcmovnu
in
loop
out
loopne
fcmovnu
test
call
in
loop
mov
loope
cmp
stc
cmp
ljmp
cmp
call
in
clc
out
xchg
xor
in
cmp
aam
cmp
xlat
out
ds
fstp
cmc
orb
in
rcr
rcl
out
sar
rcl
test
cmp
test
ds
fdivp
clc
int3
loope
in
mov
jmp
in
aaa
fxch
icebp
sar
cmp
shl
ffreep
out
in
aam
lret
loopne
call
icebp
aaa
int
lret
iret
hlt
ss
clc
cli
cmp
aas
cli
incl
fcomi
xchg
std
int3
xchg
icebp
out
shr
leave
out
clc
leave
idiv
std
repz
test
mov
ljmp
iret
out
loop
in
cmp
shl
divb
cmp
shr
shl
fucom
aam
cld
ljmp
out
shll
out
cmp
lret
xlat
rolb
icebp
rol
and
fdivr
cli
dec
lret
or
xor
out
aad
fcomp
out
sarb
stc
rcr
sti
loop
lret
aad
ret
xlat
in
cmp
ret
ret
shr
xchg
lret
repnz
fstp
cld
addb
out
repz
repz
xor
into
hlt
les
fadd
iret
into
int
or
repz
cmp
out
cmp
cli
sti
hlt
jmp
xlat
int3
mov
in
cmc
aam
xor
xor
fdivr
leave
lret
cmc
repnz
out
push
call
add
int
int
mov
xchg
rclb
jl
add
fdivrp
in
stc
nop
xchg
xchg
lret
loope
xor
cs
fstp
ljmp
and
fcmovb
enter
test
in
fnstcw
fsubrl
hlt
std
out
mul
out
cmp
loopne
sti
cld
incl
xchg
fcmovnbe
lret
xor
cmp
repnz
xchg
cli
fdivrp
decl
ljmp
out
cmp
ljmp
cmp
aad
fsub
ds
fiaddl
sub
jecxz
cmp
ss
xlat
cmpl
sar
shl
mov
loope
lret
icebp
rclb
iret
xor
cmp
in
sti
shr
loop
rcl
loope
jmp
into
out
fstp
out
test
sub
xor
cmp
out
fildl
lock
out
ret
iret
loope
test
xchg
aas
out
xlat
iret
xor
in
jmp
and
and
loopne
rolb
aaa
in
icebp
cld
in
call
fldl
out
clc
call
loopne
icebp
or
loopne
test
xor
aas
loopne
cld
rol
dec
mov
fstp
into
mov
xor
jmp
shl
cmp
in
out
roll
fildl
int
xor
iret
int3
sar
sub
jmp
in
idiv
sti
xchg
jmp
xchg
xchg
lock
xlat
jecxz
jecxz
cmp
shl
sar
fldlg2
vpmovmskb
loope
mov
mov
lret
fcmovb
in
ror
loop
sub
les
in
aad
fsubrp
icebp
roll
ljmp
leave
icebp
jmp
loope
leave
cli
shll
xor
add
stc
mov
lock
loopne
ss
sar
icebp
cmc
lret
rcl
inc
icebp
cmp
stc
jmp
in
iret
repnz
lock
xor
jmp
idiv
hlt
int3
xor
fsub
sar
cmp
jmp
aas
shr
in
cmc
int
lret
stc
int
iret
sti
loope
aam
lret
lret
ljmp
ror
jmp
out
out
lret
cmp
roll
in
clc
dec
lock
aad
cmp
rcr
jmp
lret
sti
sub
aad
shl
ret
faddl
jecxz
icebp
icebp
fcom
xor
enter
in
jecxz
neg
clc
call
in
leave
in
call
ds
cli
lret
xlat
lret
ret
bnd
roll
mov
xchg
loop
xchg
xchg
out
xor
repnz
lret
call
iret
cmc
fsub
roll
fcomip
leave
lock
add
aam
fst
std
in
roll
rolb
in
fmul
xchg
jecxz
shr
cs
in
ljmp
icebp
xor
fmulp
fprem
fcmovb
jmp
out
orb
out
fsqrt
xor
cld
div
out
mov
fucomi
cli
in
fnclex
adc
cs
in
cmp
adc
std
shlb
shl
jecxz
ljmp
lock
loopne
xor
sar
xor
clc
xlat
cld
cmpl
std
rcr
sti
jmp
cli
nop
fsubr
into
leave
xor
ljmp
fnstcw
out
cld
les
out
sti
jmp
loop
cld
adcb
lock
ljmp
out
addb
test
fmull
out
cli
call
call
stc
cmp
fsub
sti
xchg
loope
fmull
int
iret
fsubrp
shl
into
std
lock
leave
aam
icebp
loop
fcmovnb
std
test
ret
std
xchg
in
repz
lock
fcmovu
out
clc
sar
loope
cli
ret
cld
clc
mov
test
icebp
xchg
dec
enter
aaa
cld
stc
cld
idivb
rcl
sar
ds
mov
popl
hlt
xor
lret
cmp
cmp
cli
std
fiadds
ret
in
out
cld
into
fcomp
xchg
jecxz
xor
fcmovnu
add
std
loope
stc
test
xchg
aam
fpatan
fdiv
enter
fcomp
shl
std
test
call
mov
mov
rolb
cs
clc
je
mov
jmp
int
aad
fstp
ffree
push
jl
push
jl
jg
cmpsb
add
sub
rol
xor
cmp
cld
fsubr
fucomi
fdiv
repnz
int3
fsubr
iret
orb
xor
std
ljmp
jecxz
testl
mov
shl
cs
idiv
rcr
shl
aam
out
f2xm1
fsubr
out
jmp
xor
clc
shl
aaa
cmp
cmp
and
fucompp
mov
fdivr
leave
fmulp
lock
in
test
enter
lock
xor
hlt
sti
loope
ret
jmp
lret
fcmove
leave
test
jecxz
lock
lret
out
jmp
fdivr
fdivl
loope
in
repz
leave
loop
rol
mov
jmp
imul
ljmp
in
cmc
ljmp
ret
sti
enter
lea
xor
out
clc
iret
cmp
hlt
loopne
into
icebp
ret
cmp
loop
mov
call
lret
xor
in
stc
stc
iret
ds
rcl
not
test
out
in
fadds
leave
xlat
cmp
xor
aad
loop
loop
test
add
in
ficoml
shr
in
out
hlt
cmp
ds
aas
stc
call
repnz
sbb
mov
mov
fisttps
ret
out
lock
test
sarl
in
in
cli
in
aad
xor
ss
ljmp
stc
mov
idiv
sti
int3
leave
leave
call
in
sub
xor
ror
repnz
clc
fnstcw
cmc
fsubr
ffree
int
ljmp
fcomip
rol
rcr
clc
cli
cmp
fdiv
into
ret
fdivrs
xchg
std
loope
fld
jmp
sti
fdivr
int3
lret
ss
fdivr
icebp
clc
ljmp
idiv
ljmp
in
loopne
mov
lret
fmul
aaa
ljmp
test
xchg
out
test
loopne
out
mov
stc
in
cmp
ljmp
and
vpmuludq
jecxz
out
out
in
lret
loop
xchg
fmulp
call
in
into
cmp
stc
icebp
mov
cli
hlt
in
xchg
iret
mov
cs
xlat
aaa
jmp
cmp
shl
hlt
loop
sti
mov
test
out
out
out
int3
out
in
in
sarb
jmp
out
incl
xchg
aad
xlat
out
int3
and
std
cld
lret
shlb
iret
lret
fxch
lret
ds
repnz
out
fsubp
in
nop
lock
out
ljmp
loop
fiaddl
jecxz
into
loopne
in
aam
xor
aad
repz
test
stc
ret
cmc
rorl
xchg
into
test
stc
in
stc
in
div
aas
loopne
shl
loopne
loop
ret
loopne
int
in
jmp
enter
jecxz
rcl
bnd
rcr
out
cld
test
mov
clc
shr
mov
rol
out
ret
cmp
into
sar
sbb
ret
leave
aam
cli
mov
mov
mov
jmp
leave
int
cmp
enter
test
fmulp
icebp
mov
ljmp
mov
sub
aam
xor
clc
int
cld
lock
fucom
and
fmul
cmc
xchg
out
das
out
out
aad
icebp
out
fcmovbe
fcom
inc
fincstp
movb
or
mov
jmp
std
aam
cmc
fistpll
out
xchg
xchg
loope
loope
lea
repz
int3
ret
lock
in
cmp
add
in
xchg
in
test
test
jmp
std
call
ljmp
cmc
fmul
test
shr
aam
fchs
enter
leave
aas
iret
loope
in
aas
repnz
ds
xlat
jmp
out
cmc
jmp
stc
cli
sar
cld
cli
ror
loopne
ds
mov
loop
out
loop
iret
out
repz
in
xor
fcom
fidivrl
ret
hlt
ss
test
xchg
cld
cld
mov
aad
in
div
lock
neg
fdivr
fucom
rolb
int3
out
mov
xchg
test
cmc
xlat
in
xorl
jmp
mov
mov
mov
mov
xor
jmp
aam
ror
rcl
fld
sub
push
cmpsl
cmpsb
pop
jg
cmpsb
add
cmp
rcl
sar
filds
leave
sti
lock
xchg
into
rol
iret
imul
xor
cmc
add
roll
mov
loop
repnz
aaa
lret
repz
fstpt
addl
xor
lret
mov
out
fndisi(8087
out
std
xchg
sub
lock
repz
repnz
cmp
out
lret
mov
mov
int
aam
int3
xor
fdivs
fbstp
iret
incl
aad
sti
lret
jmp
rcr
cmp
cmp
hlt
cmc
int
fsub
hlt
clc
in
filds
addb
xlat
xbegin
sarb
lret
cmp
sbb
lret
imul
in
iret
iret
into
xchg
aam
xor
stc
xor
out
xor
ljmp
aad
stc
jmp
loopne
loopne
in
div
loopne
repnz
cmc
cmp
ror
clc
icebp
stc
fsub
test
loopne
leave
mov
fmulp
xchg
rolb
xlat
enter
div
rcl
ret
fldl
xchg
cld
div
enter
xchg
test
ret
repnz
test
fadd
cmc
loop
fxam
fdiv
and
repz
xchg
stc
out
ss
repz
fucom
aad
ret
fcmovnb
loope
test
std
incb
fcmovnu
mov
into
ror
call
cmp
idiv
ds
idiv
test
fcmove
out
mov
xor
cmp
aad
leave
cmp
sarb
repz
loope
mov
in
call
out
repnz
cmp
ss
cmp
repz
loop
shl
ds
loope
call
and
iret
aad
rcl
stc
in
ds
cli
fidivrl
fdivp
out
mov
rcl
out
test
aas
sub
xor
cli
in
cli
cmc
int3
rcr
int
xchg
in
xchg
jecxz
int
xchg
out
out
nop
xlat
lret
lret
cmp
cmp
hlt
cld
int3
shr
xchg
cli
sti
cli
call
in
test
stc
add
jecxz
test
jmp
clc
xchg
test
out
clc
out
hlt
cmp
icebp
rcl
out
cmp
in
lock
dec
adc
lret
rclb
leave
in
out
cmp
in
roll
div
out
lret
xchg
xor
into
cmc
loop
ror
cmp
lret
cmp
out
loope
in
in
orb
xchg
xchg
das
ret
in
cs
int3
cmp
into
in
aam
rol
out
sti
incb
lret
mov
loopne
in
out
jmp
fcmovbe
cld
cli
rcr
into
cli
cld
repz
clc
fmul
jmp
out
xor
aad
ss
dec
ljmp
ret
call
rorl
into
test
repnz
icebp
sti
out
ss
out
fadds
stc
cmpb
loope
mov
iret
loopne
or
jmp
ss
out
incl
in
mov
mov
jecxz
cs
shlb
fcmovne
leave
into
cli
into
in
ss
ret
icebp
repnz
hlt
jecxz
loop
mov
out
int3
clc
cmp
ror
xlat
cmp
sar
cmp
xchg
int
add
in
ljmp
aaa
out
int3
fcom
dec
cmp
aad
fdivrs
repz
cmpl
addl
mul
enter
into
ds
shl
out
rcr
movb
mov
call
out
ror
in
aaa
fdivr
in
cmp
aad
mov
fxch
jmp
out
loope
jmp
xchg
int3
aam
aad
repnz
loope
fcmovnb
xlat
jecxz
fsubp
cld
in
loop
jmp
rorl
aad
fldl2e
jmp
loope
cmp
xlat
call
jecxz
mov
jecxz
sub
mov
nop
bnd
fsubr
hlt
cmc
fstp
cmp
cld
sti
test
repnz
out
ljmp
ds
cli
sub
in
cmp
rol
cmp
ror
fldl
jecxz
mov
in
shrb
enter
call
cmc
repz
lret
loop
in
test
lret
in
cmp
cli
hlt
ret
fdivr
in
mov
add
cmp
je
mov
xor
add
mov
mov
jmp
enter
int
insb
push
push
mov
mov
shlb
jl
add
hlt
out
mov
loop
loopne
loopne
lret
out
in
clc
rolb
rol
in
out
jmp
repz
xchg
cld
shl
fnstenv
rcr
lret
repnz
rcr
shr
loopne
xchg
cli
ds
mov
roll
enter
fnsave
xlat
rol
sar
shl
cld
shr
orb
into
out
xor
clc
cmp
xor
xlat
std
hlt
ds
ret
xchg
loop
shl
div
out
ljmp
stc
lock
fsubrp
div
int3
out
iret
in
loop
hlt
sub
xor
test
xor
fildl
leave
in
out
addl
in
call
int
cmp
cld
loopne
aas
xlat
hlt
mov
loopne
out
fiadds
int3
not
ret
int
in
int
cmc
in
ds
sbb
aam
xchg
ficoml
hlt
sub
shr
cmp
lret
aam
push
out
loope
and
test
test
cld
aad
ljmp
clc
cmp
repnz
aam
mov
leave
xchg
in
icebp
cmp
xchg
shl
les
cli
aad
fdivr
imul
jmp
xlat
shl
cmc
xlat
ljmp
out
shl
xor
repnz
out
xor
xor
iret
cmp
test
clc
aas
mov
in
out
int
repz
fsub
fincstp
cmp
cmc
in
cmp
sbb
idiv
leave
ret
mov
test
fstp
in
loope
shl
int3
repz
cmp
aam
xor
ljmp
orb
out
xchg
fisttpll
lret
loopne
aam
lret
hlt
idiv
div
aam
hlt
fisttps
mov
shr
hlt
hlt
xor
cmp
out
orl
iret
icebp
shl
lds
jmp
into
sbb
mov
orb
ljmp
shl
lret
adc
inc
in
decl
jecxz
call
shl
xlat
fincstp
ds
rcr
out
iret
fucom
rol
adc
call
test
cmc
int3
idivb
lret
lock
fsin
jecxz
out
faddl
enter
enter
icebp
shl
int3
out
out
cmp
shl
in
call
out
mov
cli
jmp
orb
xor
cmp
cs
repz
cmp
test
jmp
fcmovnu
mov
orl
xor
sar
lret
ffree
and
repz
cld
icebp
faddl
xor
ret
int3
xlat
in
in
xlat
int3
clc
aaa
jecxz
addb
in
stc
out
fdivrp
out
test
call
clc
xlat
hlt
mul
cmpb
addl
addb
xor
xor
xor
fdivrp
loope
out
cmp
cmp
ret
in
testl
ror
in
ffree
out
rcr
fadd
and
cmp
rol
mov
out
lret
ljmp
clc
int
cmp
fsubr
out
incl
repnz
lret
out
les
call
jmp
in
in
aam
fcmovnbe
repnz
call
in
mov
cli
fst
loop
jecxz
ljmp
xor
int
in
rolb
in
jecxz
clc
mov
fsubrp
enter
lret
xor
int3
clc
lret
ret
aad
aas
ffree
mov
jmp
orb
lock
xor
pushl
out
in
cmp
fadd
fdivr
ret
loop
jmp
out
lock
icebp
cli
out
cmp
aas
lret
shl
or
in
xlat
adc
int3
push
mov
shlb
out
rcl
out
cmp
stc
xlat
cmp
fdivr
cmp
ds
mov
xchg
movl
shr
lock
idiv
sti
into
xchg
repz
call
ret
test
jecxz
loope
shl
lret
out
clc
loop
fcmovnbe
lret
fistpll
hlt
ret
out
fnclex
xchg
mov
int
hlt
fbstp
in
xor
cmp
lret
jecxz
cmp
loop
xchg
loopne
cmc
neg
jecxz
fstl
aam
xor
add
add
aam
rcr
fcmovb
mov
fstpl
adc
sarb
jl
add
hlt
xor
rol
call
in
cmp
test
cli
fldpi
stc
imul
out
int3
xchg
or
repz
xor
ljmp
cmp
fcmovnb
shl
cmc
aam
add
repnz
div
xor
cmp
xor
cld
sti
fcmove
ret
fdivr
rcl
aam
and
loope
in
xchg
and
into
iret
ret
jmp
fcomi
aas
loop
loope
ret
sti
out
mov
loope
loope
jmp
iret
xor
ret
cmp
out
divb
int3
hlt
jmp
in
fadd
cmp
cmc
jecxz
jmp
mov
iret
fucom
loop
jmp
clc
ror
fcom
cmc
rol
lret
in
jecxz
sar
mov
out
sti
mov
lret
enter
in
out
cli
out
rcl
fcmovu
into
in
cld
aam
loope
mul
in
sub
loopne
xor
in
sub
cmp
cmp
aam
or
out
ds
vpmaddwd
int3
leave
sti
rcl
std
mov
aaa
ror
fcmovnbe
aas
aas
jecxz
test
loop
inc
mov
cld
xchg
int
aam
int3
shlb
into
fdivr
ds
cld
xor
lret
int3
sub
ljmp
out
leave
fcomi
cmp
fnstsw
fadd
sti
jmp
jecxz
int3
leave
mov
jmp
test
hlt
stc
into
cld
aas
rcr
into
ffreep
ret
jmp
ljmp
in
xor
int
fadd
into
shr
adc
cld
sti
jmp
orb
int3
in
mul
icebp
repz
icebp
divb
xlat
fcmovne
aas
std
xlat
mov
loope
jmp
leave
call
shl
mov
jecxz
int3
xor
rcr
out
hlt
clc
std
xor
rcl
leave
mov
cld
or
rcr
xchg
adc
leave
shl
cmp
cmp
cmp
fcmovu
aam
rcr
xchg
int
nop
adcb
into
divb
sarl
fcmovnbe
lret
cli
aad
mov
sbb
int
loopne
repnz
ljmp
iret
fucom
les
ret
std
call
loopne
shll
sub
rcl
repnz
in
int
cmp
in
xlat
loopne
out
int
mov
repz
loope
jmp
jmp
in
cmp
fnop
loope
in
fcmovnb
out
out
hlt
push
into
fiadds
repnz
ljmp
aam
add
ds
adc
xlat
ffree
lret
xchg
popl
loop
in
fnstsw
cld
cmp
loop
in
mov
int3
orl
shl
cmp
out
xlat
fcmovbe
repz
adc
mov
fcmovne
int
lea
xor
cld
sti
stc
or
mov
mov
mov
xlat
sti
ljmp
fdivr
aas
repnz
ret
xchg
not
mov
loop
xor
call
loopne
test
cld
in
enter
in
lret
roll
rcl
aad
in
hlt
cmp
int
xchg
fcomip
fcomp
leave
ds
into
enter
xor
ds
cs
out
aaa
cmp
fsubp
out
cmp
fisttpll
jecxz
int
xor
rol
hlt
out
aad
clc
jecxz
rcr
loopne
cmp
testb
enter
lock
in
ror
rol
in
sbb
sti
sub
test
aam
lds
jmp
xor
xor
ljmp
fcmovnu
adc
loop
int
xchg
out
out
fcoml
lret
xor
jmp
shl
out
fdivr
fldl
out
in
faddl
fldlg2
cmp
iret
cmp
ss
out
xor
jecxz
in
fsubrp
shr
lock
icebp
cmp
std
fcom
cmp
jmp
stc
xchg
int3
jmp
xor
lret
in
xor
ret
loope
repnz
fcomp
lret
test
test
xor
aaa
in
enter
lret
fmul
cmp
xchg
mov
out
out
lret
test
lret
call
int
cld
fsub
mov
test
loope
and
adc
out
leave
ret
xor
enter
sti
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
jmp
ds
leave
fstp
ror
cmp
mov
imul
add
aaa
rcl
loopne
int
testl
or
loope
icebp
xlat
rcl
out
enter
in
clc
repz
cli
aas
ffreep
fnsetpm(287
mov
in
jecxz
xchg
into
aad
jmp
sar
in
lret
idivb
call
cmp
hlt
xchg
enter
shr
das
hlt
ss
cld
jecxz
and
rolb
mov
nop
fisubrs
lret
cmp
cmp
shl
int3
xor
ror
fsubr
mov
iret
mov
stc
hlt
fcmovbe
xor
test
fiaddl
fucomip
fdivr
in
out
shl
mov
cmc
in
out
aaa
enter
shll
aad
rol
stc
stc
clc
fsubrp
clc
fsubp
xor
ret
out
out
sar
xor
rcr
fcomip
rcl
repz
hlt
enter
out
loopne
cld
sub
lret
lret
loope
ljmp
fcmovbe
or
xchg
stc
lret
repz
test
loop
out
xor
fcmove
jmp
ljmp
aam
sbb
in
les
lock
test
fucom
jmp
hlt
iret
sub
add
mov
cli
fcmove
jmp
in
in
ror
sarb
int3
jmp
in
int
xor
cli
sar
lret
in
in
jmp
ret
shr
clc
cmp
sar
cmp
aad
icebp
fst
incl
lret
jmp
cli
iret
shl
jmp
xor
enter
std
ljmp
out
cmc
inc
and
xchg
iret
call
ror
cmp
cmp
in
aad
lock
out
test
testb
addb
hlt
rol
call
call
cmp
loopne
shr
roll
lret
ljmp
cmp
shl
ror
fdivrp
sti
stc
fcomi
jmp
int3
sub
xchg
fincstp
in
mov
cli
xlat
fdivrp
rcl
repz
hlt
adc
out
out
test
call
repz
lret
aad
lock
ret
jmp
int
lock
aam
in
iret
shlb
fucom
cmp
sar
repnz
in
fcmovnu
in
xchg
xlat
in
out
stc
aad
repz
cmp
icebp
int
out
loope
add
loop
repnz
xlat
loopne
shr
enter
cmp
out
hlt
ds
loop
cmp
leave
out
mov
lret
fst
mov
mov
jmp
clc
xor
fsubp
out
in
fcmovnb
ret
not
ljmp
fucomip
and
in
loope
aam
in
fst
jecxz
out
fistpll
in
cli
lret
icebp
out
rcll
loopne
int
out
ss
stc
xlat
out
cmpb
idiv
loopne
repnz
out
mov
repnz
icebp
repnz
lret
rcr
mov
fidivrs
addl
out
fildl
not
xor
out
dec
adc
idivb
mov
lret
inc
ljmp
sbb
ljmp
fcmovne
fsubr
test
jecxz
fldl
out
cmc
lret
leave
lock
repz
cmp
xchg
stc
hlt
ljmp
mov
aam
rol
cmp
call
aam
cmc
test
repz
out
int
out
shr
mov
clc
ss
ds
cmp
sbb
mov
call
fucomip
stc
xlat
cmp
cmp
clc
std
loopne
rcr
stc
repz
test
or
mov
out
sub
cmc
xor
cmp
shl
in
in
loope
leave
xchg
lea
out
loop
aaa
stc
rcl
hlt
shll
lret
ljmp
fadd
in
in
jmp
in
dec
mov
ljmp
sarb
shl
aam
clc
cmp
out
stc
ds
cld
sti
clc
lret
in
mov
xor
iret
repz
xor
fucom
fucomp
fisttps
test
stc
out
leave
lock
loop
loop
clc
fldt
ljmp
cli
lock
out
jmp
faddl
ror
loope
icebp
in
jmp
cmc
call
and
add
jmp
int
ret
fcmovu
add
dec
push
rcrb
jl
add
ret
jmp
test
xchg
into
int
loope
xorl
sti
aam
aam
idiv
fcomip
rcr
les
out
repnz
int
lret
lret
fyl2xp1
lock
icebp
into
fdiv
aam
incl
cld
loopne
std
int3
mov
rol
xlat
aam
fucomi
cld
into
repnz
rol
jmp
out
mov
iret
ljmp
ror
shll
aam
cmp
in
stc
rol
and
decb
xchg
fadd
cmp
iret
cld
into
sar
cmp
add
fadds
shl
rolb
into
hlt
int
out
fcomip
cmp
loop
lock
sar
clc
loop
jecxz
ret
xchg
jecxz
leave
into
in
sarb
rcl
aad
out
rcl
loop
loope
std
sti
stc
jmp
lret
repnz
xchg
out
das
cmc
leave
ss
xor
ljmp
repnz
rcl
mov
flds
mov
call
ret
testb
sub
repnz
aad
addb
mov
div
leave
xlat
aad
adc
shl
shl
in
clc
or
out
in
xor
aam
xor
icebp
in
lret
rcr
cmp
fimull
in
jecxz
int
orl
leave
cli
leave
call
cmp
rol
fstp
neg
cld
jecxz
loope
ljmp
lock
fucomp
shl
cmp
sub
cmc
in
decb
out
in
call
iret
jmp
xlat
fmul
std
iret
test
and
fucomi
int
roll
out
stc
in
repnz
lret
out
add
add
cmc
enter
xchg
cmp
xchg
int
cmc
xlat
call
fmulp
ds
aaa
int3
hlt
sbb
test
aas
fdivrp
out
fiadds
aad
stc
cmp
cmp
hlt
xor
sarb
ljmp
enter
jmp
test
xor
out
xor
in
fstpt
shl
in
shl
jmp
enter
int
xchg
xor
jmp
xor
and
out
sbb
xchg
nop
jmp
icebp
jmp
fcmovne
repz
add
fptan
aam
xchg
clc
clc
faddl
fsub
in
shl
ss
in
shll
fldl
iret
rcl
incl
cld
shr
mov
aad
cmc
ljmp
aad
repnz
in
xor
std
fsubr
sti
mov
mov
stc
aaa
sar
lret
shl
std
loopne
or
aam
enter
loopne
icebp
addl
loop
xlat
out
in
cmp
cli
testl
addb
clc
mov
jecxz
out
ret
lret
iret
icebp
xor
fld
shl
xor
loope
testl
icebp
xor
icebp
hlt
ljmp
ret
std
jecxz
repnz
fmul
fdiv
lret
jecxz,pn
aam
test
icebp
cli
out
cli
cmp
push
test
out
test
call
fistpll
loop
leave
cmp
cmp
rcr
rcl
adc
rcr
call
enter
int
jecxz
repz
jmp
clc
adc
repz
cmp
in
call
xchg
int
in
cmc
std
aad
sti
in
int3
out
xchg
out
aad
in
cmp
mov
decl
jmp
clc
icebp
shr
pushl
fsub
out
jecxz
out
flds
clc
in
test
jmp
shr
fidivrl
in
int
fsin
in
stc
ror
cmp
hlt
fisttpll
mov
fld
leave
rcr
out
lret
div
ds
aam
jecxz
loope
fimull
iret
or
in
out
int3
aaa
cli
cmp
adc
aas
cmp
out
test
imul
fsts
test
xor
repnz
fstp
fucomp
out
loope
vpandn
rcl
ljmp
in
shl
in
shrb
cmc
enter
call
sarb
neg
out
call
test
jmp
xor
leave
cmp
aam
out
lock
cmp
ret
leave
sti
cli
enter
imul
sub
mov
jmp
mov
mov
xor
cmp
jmp
aas
enter
xlat
fcmovnu
mov
pop
jecxz
je
js
jg
cmpsb
add
ljmp
out
cmp
hlt
cld
iret
cmp
cmp
sar
fsubrp
fdivr
jmp
cli
xor
loop
sub
out
test
iret
lret
fsubp
fdiv
sti
ds
fdivr
jmp
cli
in
ficoml
cld
out
fldl2e
loopne
loop
cld
repz
cmp
cmp
jmp
ret
leave
lret
repnz
sti
cmp
fucomp
ror
sar
fistpll
call
test
fimuls
iret
repz
xor
div
cmp
repz
cld
aas
loope
rol
rorb
xor
ror
jecxz
loopne
leave
sarl
lret
cli
cmp
xor
cmp
loop
stc
call
xchg
ffree
fsubp
divb
jmp
int3
fadd
ror
in
mov
ret
in
and
shlb
in
in
into
sti
call
incb
in
xlat
mov
ljmp
xlat
into
xor
out
test
test
out
aam
call
lret
cld
cmc
int3
stc
sub
cli
in
aad
aas
fsubrp
sti
hlt
cmc
fsub
aam
repnz
in
test
inc
repnz
icebp
shr
fdiv
out
jmp
ljmp
jecxz
stc
out
mov
out
test
std
in
in
out
ror
shr
out
xlat
sar
fcmovb
vcmpss
idiv
mov
jmp
ret
repnz
into
into
fdivr
in
fcmovnb
xor
xlat
leave
jmp
cli
addb
call
iret
fst
dec
jecxz
jmp
mov
flds
out
loope
lret
ljmp
xor
cli
cld
int3
mul
loopne
mul
stc
adc
in
out
in
ss
hlt
leave
int
xor
sarl
jecxz
enter
xchg
fdivr
sub
xchg
leave
aam
lret
cli
into
cmp
aad
shr
hlt
aad
lds
adc
cld
std
mov
shl
leave
in
cmp
rcr
fidivrs
addl
sti
mov
aaa
aam
neg
clc
aas
in
cmp
idivl
xchg
int3
cmc
in
icebp
shl
ret
jmp
lock
out
iret
fmulp
fadd
sti
repnz
call
ljmp
shr
idiv
cmp
rcl
xchg
cmp
ljmp
xchg
out
rorl
int3
in
sti
cmp
xlat
aam
repz
sarl
cld
lock
sar
loope
roll
ljmp
fcmove
hlt
fnop
sbb
clc
xchg
filds
int
loopne
loopne
jmp
rol
cmp
roll
ret
cmp
std
mov
hlt
shlb
jmp
shlb
aas
xlat
out
aad
ret
mov
int
fmul
addb
ret
call
out
aas
cmp
repnz
adc
sar
aam
decl
icebp
xor
leave
sar
xlat
in
jmp
cmp
fcmovbe
lock
loopne
aam
repz
ljmp
clc
cs
int
jmp
jmp
repnz
test
mov
repnz
iret
call
int
repz
loopne
cmp
addb
xchg
repz
rcl
in
in
cmp
cmp
cmp
aam
aad
rcr
rol
clc
lret
in
ljmp
bnd
int3
xor
into
into
int3
clc
iret
rcr
in
in
cmp
call
in
sti
out
idivl
cmc
int
out
out
fucomp
leave
not
cmp
leave
test
loope
loopne
out
lds
in
hlt
xor
fcmovnbe
ss
loopne
ret
in
stc
std
in
leave
out
mov
enter
hlt
xor
xor
jmp
cmp
rcr
lret
enter
lock
aaa
into
aaa
ret
cli
frstpm(287
cmp
cli
stc
cmp
xlat
std
rorb
loop
mov
lock
leave
shl
out
out
in
fdiv
xor
int3
and
stc
out
in
fcomi
xchg
int
xlat
call
push
cmp
add
fprem
fsub
neg
clc
and
lock
mov
lock
jmp
jmp
vpsrlq
rcl
aad
xchg
mov
in
jb
and
jns
jl
add
lock
neg
in
movl
xchg
loop
jmp
ret
call
repnz
rcl
hlt
rol
flds
shr
repnz
cmp
call
cmp
xor
fst
aas
fnstsw
fucompp
mov
nop
shr
fmul
xor
clc
xor
std
jmp
ret
aad
int
mov
rorb
aad
sar
ffree
cmp
lret
shl
roll
faddl
repz
xor
cs
ljmp
in
shl
ret
aam
aad
loop
call
jmp
jmp
xlat
leave
shr
ret
lret
addl
fdecstp
lock
in
repz
xor
in
into
in
cld
enter
cmpb
aas
cli
loope
ret
fidivrs
fisttpll
call
xor
repz
test
lret
shll
cmp
out
call
loop
in
shl
imulb
int
aam
ror
loop
jecxz
testl
decb
xor
xor
clc
cmp
cmc
aas
loope
sti
xlat
lock
loopne
call
leave
jecxz
enter
out
sub
into
cmp
fcmovnb
addl
bnd
enter
cmp
in
fidivl
std
ss
fstpt
jmp
jecxz
lret
rol
aam
cmc
ror
cmp
out
call
int
iret
out
in
in
in
int3
mov
das
loope
sti
lret
leave
loope
lock
idiv
addb
xlat
orb
shlb
rcl
stc
call
call
repz
shl
in
int3
iret
mov
decl
iret
int3
fcmovnu
xlat
call
icebp
ret
ret
xchg
fcmovnb
in
clc
xchg
out
into
in
lock
mov
jmp
repnz
sti
rcr
rcl
cli
ds
jmp
idiv
xlat
ljmp
hlt
fisubrs
aaa
test
icebp
aaa
aam
aam
testb
rcr
leave
loope
cld
fcoml
hlt
xlat
in
cmp
xlat
fcmove
fcmovnb
in
fdiv
sti
fcomip
loop
out
jmp
out
movb
int3
cmp
ss
cmp
clc
cmpb
cld
mov
mov
fxch
lea
ret
out
xor
in
out
out
lret
std
sar
aam
icebp
loopne
sti
sbb
mov
fcmovnb
int3
jmp
idiv
aad
enter
ss
repnz
lret
flds
loope
icebp
out
sub
loopne
int
cmp
fsubrp
sar
in
roll
loope
call
cmp
ror
lock
cmp
fcos
cmp
stc
out
fstpt
cmp
fcomip
jmp
mov
call
stc
stc
shl
out
ror
shl
out
mul
repz
jmp
mov
std
sti
in
fmul
std
fadd
in
jmp
fdivr
fdivrs
ss
in
xchg
hlt
ret
loopne
loop
out
clc
out
mov
jmp
clc
repz
shl
fcompp
cmc
jmp
fucom
leave
fadd
xchg
xor
mov
out
aaa
xlat
shl
loope
xlat
out
testl
roll
fnstenv
xor
adc
jecxz
fdiv
ljmp
call
loope
xor
sar
iret
out
xlat
rcl
sti
ret
out
loope
ljmp
jecxz
mov
int
lret
repz
enter
ffreep
xor
sti
repnz
hlt
call
loope
in
cld
in
lret
lret
fdivs
lock
into
fidivrl
out
int3
test
aas
jmp
test
sub
test
repnz
xor
jmp
aam
ret
in
neg
mov
addl
mul
ljmp
iret
sarb
rolb
lret
test
fcoml
in
out
shl
enter
xlat
sti
idivb
aas
in
jmp
loopne
call
jmp
lock
idivl
fxch
int3
rcl
test
lret
cld
xchg
loope
lock
in
sti
in
aaa
int3
lock
iret
shr
inc
in
cmp
test
mov
jmp
push
mov
sub
incl
mov
push
or
push
mov
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
rol
sarb
aas
rcl
mov
push
or
int3
jl
jl
add
aam
filds
mov
lret
xlat
rcl
cmp
rcr
int
test
repz
out
cmp
in
clc
fucom
out
ljmp
jmp
call
adc
testl
fisubrs
cld
xor
repnz
into
cmp
repnz
stc
fsub
lret
xor
in
lock
fsubr
neg
xor
in
mov
repnz
lock
jmp
cld
sarl
hlt
loopne
in
test
sti
fsub
enter
loop
loop
in
loop
shlb
div
cld
not
shl
ret
jmp
mov
test
xor
ftst
xor
cmp
in
clc
ret
loop
mul
xchg
xchg
ror
cmc
incl
not
lret
not
xlat
ror
incl
in
in
in
call
xor
cmp
xor
out
aaa
hlt
ss
idivb
fdivr
shl
in
std
hlt
mov
fst
in
aaa
xor
in
stc
std
fiadds
cmp
cmp
jmp
test
xchg
loope
out
imul
in
lret
out
std
cmp
addb
xchg
std
int
cld
filds
loop
in
fnstsw
shr
into
roll
loopne
in
leave
mov
fcomp
loop
mov
in
into
hlt
cmp
int3
icebp
ljmp
les
loope
lret
mov
out
out
lret
aaa
cmp
cmp
hlt
idivl
cmc
add
ret
aam
ljmp
mov
fsubrp
loope
ss
clc
lock
repz
cmp
cli
cmp
dec
loopne
in
enter
jmp
cmp
loop
into
cli
in
cmp
sub
fcos
roll
loopne
xchg
mov
xor
not
lret
jmp
xlat
shl
icebp
les
fadds
mov
mov
in
out
ret
jmp
enter
in
cmc
add
ret
in
fstp
iret
lock
sub
sub
lret
int
cmp
loope
xchg
out
lret
addl
xor
int3
jmp
out
out
or
std
rol
cli
clc
imul
loop
in
xchg
fimuls
loop
jmp
repz
hlt
std
fdivrs
rcl
fdivrp
cld
fmuls
out
shr
jmp
out
int
cmp
lock
test
loope
neg
mov
xchg
ljmp
in
xor
in
fstpt
and
ret
loop
fsubr
fiaddl
xchg
xchg
sub
test
cmp
fistpll
shl
clc
incb
enter
mov
lret
aam
out
iret
shr
fildl
clc
cld
cmpl
flds
ljmp
cmp
fidivrs
lock
cmc
xchg
jecxz
fsubr
xchg
cmc
xchg
int
aam
lret
in
xlat
xor
xor
cmp
in
test
xor
xchg
cld
lret
xchg
ret
out
fcmovnbe
xlat
aas
loope
rcr
icebp
sti
test
jecxz
leave
xchg
mov
jmp
xchg
lret
shr
xlat
into
ljmp
fildl
mov
enter
lock
repz
xor
int3
stc
aaa
in
loopne
aas
rolb
mov
iret
repnz
rcr
in
bnd
loope
adc
aas
inc
mov
aam
clc
out
loope
rorl
aam
cli
sar
aaa
incl
repz
repz
cli
orb
in
aam
out
out
fst
rolb
leave
test
hlt
stc
les
cmc
aam
icebp
mov
imul
rcr
clc
out
add
mov
loope
or
loopne
rorb
aaa
repz
cmp
enter
cli
in
loopne
orl
xchg
xor
xor
test
aad
out
fninit
cmp
repz
neg
std
not
mov
iret
rcl
lret
shr
test
sub
shr
xor
cmp
out
ror
cmp
aam
neg
xchg
lret
fucomp
ljmp
cli
cmp
sti
aam
iret
shl
cmp
rolb
iret
lock
xor
ror
cmc
int3
incb
fcmovb
in
mov
jmp
adcb
loope
hlt
hlt
xlat
cli
leave
jmp
int
cmp
jb
add
add
add
add
sbbl
push
neg
jmp
int
aad
ffree
fstp
stos
push
push
rcrb
add
jge
jl
iret
shr
test
enter
sbb
mov
jecxz
cs
stc
loop
fucomp
cmp
ds
in
ds
aad
aam
int
enter
xchg
into
and
ss
cmp
cmp
cmp
lds
loope
enter
sti
fstl
sti
iret
sarl
ss
aas
fcomi
aas
ret
clc
xlat
hlt
loop
enter
lret
call
in
loop
idivb
test
ss
call
in
clc
test
cmc
cmc
enter
ljmp
in
call
icebp
filds
out
xlat
jmp
int3
jmp
faddp
rcl
out
lret
cmp
repz
cmp
in
flds
out
icebp
loope
ljmp
shl
sti
fidivrs
ljmp
rcl
in
fsubp
clc
loopne
filds
icebp
xlat
int3
out
jmp
addb
aad
int3
int3
mov
rcl
stc
leave
rcl
sar
cmp
hlt
out
rcr
rcr
mov
addb
repnz
mov
int
xor
fdivs
call
and
cmp
loopne
enter
loopne
xchg
in
std
lret
cmp
lds
repnz
test
clc
mov
cli
cld
in
out
xlat
les
out
xlat
into
lock
cmp
stc
repz
test
orb
cmp
repz
fcmovnbe
shr
cmp
cld
call
clc
ljmp
repz
cmp
lret
sar
sti
loope
shl
sti
sbb
mov
sub
out
mov
into
loope
leave
jmp
cmp
repz
cmc
out
cmc
hlt
int
mov
test
jecxz
in
out
cli
in
lock
int
fadd
repz
inc
sti
hlt
int3
mov
iret
sub
stc
hlt
call
into
xor
ror
out
xabort
loop
test
icebp
int3
das
aaa
xlat
loop,pn
xor
cli
sub
out
vpsrlq
cld
out
sti
mov
lret
fisubrs
aaa
aaa
xor
cmp
fdivrl
stc
into
aas
loopne
stc
xchg
in
xchg
icebp
xor
lock
leave
aad
out
shr
fxtract
ret
ss
in
ret
xchg
cmp
enter
xchg
iret
lock
lret
divb
int
shl
in
fistpll
lds
mov
xor
xor
shl
lock
hlt
xor
cli
idivb
rorl
stc
clc
lret
jmp
test
jmp
jmp
in
fnstenv
rcr
fcom
out
cmc
mov
mov
fxch
mov
int3
out
int3
ljmp
imul
cmp
icebp
iret
cmp
cli
loopne
jmp
fprem
mov
hlt
int3
aad
xor
in
cmp
out
xor
adc
fisttpl
cli
and
mov
out
ret
call
aad
shr
out
ret
loopne
jmp
adc
in
test
sub
jecxz
in
ljmp
incl
leave
dec
fldl
in
aam
aam
jmp
int
stc
rolb
rcr
jmp
roll
sub
icebp
shl
out
jmp
ds
repnz
cld
flds
nop
fstl
into
out
fincstp
out
sarl
out
sarl
into
icebp
in
aam
jmp
xchg
jmp
lret
jmp
dec
hlt
ror
add
clc
hlt
incl
orl
lret
cmc
sub
clc
aad
test
loope
cli
out
call
div
out
idivb
into
out
repnz
cmp
ds
cmp
test
sub
jmp
xchg
lret
in
xlat
in
fucomip
cmp
shl
cmp
cld
ljmp
hlt
repnz
aad
shll
enter
cmp
loopne
xor
call
leave
out
orl
out
icebp
lret
sar
cmp
clc
xlat
ret
jecxz
cmp
lock
std
stc
loope
in
jmp
loop
call
cmp
out
incb
clc
jmp
loop
int
nop
jmp
iret
out
repz
fxch
cmp
idiv
xlat
sti
stc
clc
test
shl
in
and
in
sar
jmp
in
fsubrp
das
call
sarl
fcmovu
int3
fst
lock
out
xchg
stc
lea
jmp
repz
lret
sti
cmp
mov
inc
add
scas
arpl
push
fs
add
incb
add
inc
add
inc
hlt
out
pushf
clc
sbbl
jmp
rcl
int3
fstp
arpl
test
pop
lret
jl
add
into
shl
ret
mov
fisttpl
in
into
icebp
icebp
fst
fpatan
into
push
std
ret
in
stc
sar
orl
sub
xor
fmul
out
cmp
cld
out
xlat
repz
cmp
incb
int
stc
cld
out
out
in
loope
in
aam
sarb
int3
icebp
ljmp
mov
xlat
ret
xchg
ljmp
xor
shr
out
aas
cld
aad
cmp
aam
mov
jmp
mov
ret
fucom
in
ss
sarl
sbb
rol
shl
jmp
and
hlt
cmc
xor
fsub
repnz
sti
int
in
out
rcr
fsubp
vpsubsw
adc
loopne
aad
cmc
lret
cmp
stc
cmp
rcr
out
rcr
iret
jmp
lea
iret
iret
stc
aam
repnz
lret
sti
sarl
into
repnz
rcl
shr
orl
icebp
xlat
sti
cmp
clc
into
aaa
cld
icebp
testb
stc
mov
call
out
int3
in
in
int3
icebp
ss
roll
fst
std
and
in
mov
in
repnz
int
das
aaa
lret
loopne
repz
cmp
hlt
out
loope
xlat
out
xchg
les
jecxz
into
mov
mov
int3
lock
icebp
out
iret
fcmovnbe
aad
lock
ret
aas
faddp
fadds
ficoms
repz
shl
cli
loope
jecxz
shl
not
shl
std
out
in
xchg
fmul
mov
call
aam
xor
jmp
hlt
dec
incb
jecxz
cmc
in
out
leave
in
in
xchg
into
loopne
loop
leave
aam
cmp
int
inc
repz
aas
lock
flds
ror
in
jmp
divl
out
repz
repz
rcr
aad
call
adcb
in
fdivrs
iret
jmp
lret
fidivrl
cmc
into
cld
sti
enter
in
mov
jmp
jmp
fsqrt
in
cmp
std
xlat
fdiv
push
fdivp
orb
ror
ror
xor
ss
rcl
out
fldl2t
cmp
out
in
push
in
mov
xchg
xor
fxam
jmp
ljmp
leave
jmp
in
call
mov
int3
nop
ret
iret
iret
lret
cmp
xlat
in
jmp
ds
hlt
cmp
cmc
mul
sbb
enter
jmp
int
imul
cld
std
cmp
cmp
movb
in
xchg
xchg
int
into
lock
fmul
ss
out
cmp
in
fildl
decb
in
call
jecxz
fdivr
into
clc
imul
std
iret
fcmovb
addl
faddp
adc
jecxz
out
fcomi
cmc
cmp
shl
fsubp
xchg
movb
std
fcomip
shr
loop
into
out
cli
cld
divb
rcr
repnz
into
test
stc
faddp
fdivp
out
leave
shl
loope
push
out
int3
rcl
xor
cmp
out
into
xlat
clc
int3
rolb
out
test
lock
orl
out
lock
rcr
loopne
sti
repnz
loope
test
xchg
shr
xor
int
cmp
repnz
aaa
iret
jecxz
in
std
iret
shl
add
jmp
iret
lret
in
in
sub
ljmp
ds
cmc
loop
neg
jmp
int3
in
popl
out
icebp
jecxz
fincstp
std
fidivrs
call
loop
inc
cmp
test
rorl
rcr
lock
int3
fcmovne
fmul
out
aas
idivl
leave
in
imul
in
in
std
rorb
xor
loop
ss
out
adc
cmp
out
jmp
out
jecxz
nop
std
xchg
hlt
ret
out
lret
xlat
aam
fmul
cld
aaa
fdivr
sti
repnz
loopne
ret
test
xchg
test
shlb
div
aas
or
cli
fcomip
fdivrl
stc
jmp
jmp
ficoml
repnz
jmp
jmp
rcl
loopne
in
fdivr
shl
int3
cli
lock
fmul
rcr
aad
loopne
xor
fcmovnu
xlat
fsincos
in
fsub
xlat
jmp
enter
in
rolb
in
cmp
loope
into
icebp
stc
cmp
rcr
xchg
int3
mov
lret
hlt
repnz
fsubr
hlt
fdiv
cmp
roll
sti
ret
fcmove
xchg
test
sti
enter
out
clc
aad
int
fst
fucomp
ljmp
clc
add
movl
jmp
movl
jmp
xlat
enter
enter
xchg
rol
sbb
lret
or
jl
ds
cmc
lock
or
mov
in
div
ljmp
out
neg
jecxz
out
xchg
fucom
out
decl
fists
int
leave
iret
fcmovnu
clc
sub
fidivrl
clc
out
in
out
mov
orl
jmp
in
sar
fchs
cmc
xlat
std
aad
out
idiv
lret
lock
xlat
out
cmp
in
not
in
icebp
fcmovne
into
jecxz
ret
loopne
xchg
in
or
in
mov
lret
hlt
cmp
std
fcom
fcmovne
shl
out
in
test
testl
int
int3
lret
xlat
aam
clc
sti
clc
cmp
cli
ret
loope
fisttpll
in
cmc
mov
repz
ror
out
fstp
clc
and
rcl
cli
test
and
mov
sub
repnz
lock
rcr
hlt
loopne
out
jecxz
aad
imul
clc
in
call
in
jmp
xor
aad
xlat
fdivr
into
adc
jecxz
sti
sbb
out
xchg
lret
fsub
jmp
cmc
loop
fdiv
xor
aad
hlt
into
out
ret
cld
int
decb
jmp
stc
aam
sub
xlat
lret
cmp
cld
call
mov
and
test
out
neg
ror
stc
rcr
rcl
rol
add
std
loopne
leave
xchg
xchg
loop
out
fnclex
icebp
in
std
repnz
loopne
jecxz
rol
in
flds
mov
mov
sub
ror
leave
fst
cli
ds
idiv
shl
fucomi
loop
lret
cli
jmp
lock
aam
loop
xor
lds
in
cld
int
cmc
rol
div
loopne
clc
in
loope
xchg
loop
ret
ss
cmp
lret
std
jmp
cmp
fdivp
ds
loopne
out
int
loope
out
out
leave
leave
enter
cmc
lock
fcomip
jmp
in
repnz
fldln2
ljmp
xchg
hlt
out
enter
enter
sarl
fadd
aas
std
test
out
mov
jmp
add
fcomp
sti
fnsave
stc
aam
fdivr
repnz
in
stc
out
rorl
sub
repz
xor
cmp
inc
lock
in
sti
movl
aad
aam
fcmovnbe
stc
cld
incb
test
std
fsubrp
fld
sbb
xchg
mov
aaa
aaa
enter
xor
std
lret
cmp
roll
std
orl
shl
ret
sti
enter
aam
cmp
aad
aad
xlat
clc
ret
int3
shr
mov
lock
out
sti
iret
out
in
out
out
xor
lock
icebp
jecxz
call
out
xchg
loop
iret
fnstenv
int3
int3
shlb
fnstcw
cmp
sbb
repnz
stc
jmp
jmp
fdiv
ljmp
out
fdivs
icebp
fucomip
loope
lock
test
aas
test
sbb
lret
fsubp
shl
rol
aam
xor
xor
mov
rcr
std
cmp
jmp
fsub
fdivr
cli
in
test
in
mov
out
xor
out
filds
ror
xabort
fdivrp
fucom
lret
cld
out
rcll
iret
xor
in
fsubr
cmp
fcmovu
mul
add
aas
mov
loopne
call
addl
aaa
rcr
xor
lret
call
fcmovnu
ds
mov
mov
out
out
repz
xor
cmp
ljmp
into
fidivs
ss
aam
mov
cld
les
test
fnstcw
ret
shl
clc
icebp
cld
cmp
rcl
xchg
imul
leave
jmp
out
iret
stc
stc
in
lock
fcompp
ljmp
add
into
call
ljmp
in
in
int3
rol
loopne
aas
aam
ljmp
lock
lret
ss
xlat
stc
cmp
cmc
jmp
sti
cld
clc
aas
loope
fstp
leave
std
lea
loope
xor
repnz
fucomi
icebp
lock
cmp
lds
aam
jecxz
fucom
test
loop
repz
in
in
loop
lret
lret
int3
xor
repnz
cmp
ret
xlat
mov
out
int
fnop
clc
stc
leave
out
aad
cld
cld
cmp
in
out
roll
enter
cli
shl
out
int3
ss
int3
cmp
int3
fucomp
xor
aas
inc
ret
call
iret
into
fdivrp
fst
in
sub
out
ss
fdivrl
cmp
movl
jne
mov
movl
mov
movl
mov
mov
movl
jmp
aad
leave
fcmovne
fcmovbe
test
lcall
and
enter
jge
jl
jmp
icebp
shl
sti
testb
out
xchg
cmc
out
rcr
sub
rcl
cmp
fcmovne
rcr
test
jecxz
std
cmc
hlt
mov
stc
test
jecxz
mov
xor
lret
lret
out
lock
stc
sti
sar
out
call
int
loope
fsubp
aad
ljmp
aas
std
cmp
clc
add
hlt
xchg
stc
mov
enter
xchg
int3
in
ss
iret
out
clc
aam
jmp
ffreep
les
test
fiadds
cs
xor
repnz
std
in
lock
shl
fcmovnb
leave
int
leave
movb
xor
shl
aad
jmp
aam
fcom
in
aad
test
rol
std
mov
loope
loop
jmp
leave
iret
lret
int
fistpll
fildl
adc
fsub
cli
into
aad
ret
clc
aad
in
lock
fcmovu
ret
test
in
cli
dec
iret
out
fstp
sub
clc
in
sarl
cmp
fcomp
lock
not
aam
jmp
jecxz
in
in
lret
in
shlb
stc
xor
out
sti
into
cmp
in
ret
lret
icebp
mov
cmc
fld
cmc
icebp
leave
xor
in
clc
aas
int3
cli
sar
rcr
decl
leave
mov
out
loopne
shr
jecxz
cmc
rcl
iret
shl
ds
fnstsw
loopne
hlt
call
in
rclb
loope
jmp
out
fcmovnu
int3
sub
ret
neg
sti
enter
out
repz
sub
lret
aaa
std
cmp
lret
fcmovnb
or
and
fldl
in
sar
fmul
icebp
shl
ret
in
cmp
std
aas
rcl
in
aas
out
test
fiaddl
loop
repz
xor
in
lock
out
addl
out
rol
rol
cmp
out
call
div
mov
out
call
jmp
int
out
fcmovnb
jmp
jecxz,pt
std
sar
rol
xchg
and
in
xchg
in
enter
aad
cmp
std
aam
out
clc
out
ret
xchg
call
in
xor
rol
cmp
in
cld
incl
and
out
mov
xor
cmp
cmp
out
cmp
jmp
ret
fcompp
jmp
xchg
in
lret
fists
out
xor
xlat
sub
out
loope
rolb
clc
out
mov
mov
nop
fdivp
lret
mov
das
out
jecxz
into
int
cmp
lret
int
std
int3
xor
in
jmp
mov
into
call
iret
int
aam
int
repz
ffree
lret
iret
enter
cli
xor
not
cmp
in
xlat
fxch
call
jmp
test
xchg
sti
mov
xchg
xchg
lds
xor
lock
imul
xor
jmp
fdivr
test
fcmove
movl
jmp
jmp
clc
aam
loope
cli
mov
out
decl
call
out
ffreep
lret
fadd
in
test
test
out
int3
shrl
xor
ljmp
lret
ds
idiv
hlt
fisttps
test
out
out
call
stc
clc
xor
ljmp
aam
loop
cmp
call
xchg
std
std
int
xchg
xchg
in
out
cmp
into
jmp
shr
cmp
cmp
shl
add
fmuls
xchg
into
cmc
iret
xchg
iret
leave
iret
out
int
xor
in
loop
lds
fsub
addb
fmul
out
out
lret
divb
ljmp
repnz
int3
int3
sarl
fdivp
hlt
cli
in
ds
in
icebp
out
add
repz
aaa
cmp
in
cmp
cmp
repz
loop
hlt
leave
in
loopne
loopne
test
jmp
repz
cmp
fdiv
fcmovnbe
cld
mov
xchg
iret
sar
loope
mov
in
stc
loop
out
out
ljmp
cld
fimull
out
jecxz
jecxz
xchg
add
enter
cmp
out
jmp
roll
mov
jmp
int
call
loop
out
shl
cmp
cmp
lock
shl
cli
std
mov
loope
repnz
in
xor
sti
imul
ljmp
in
loop
fidivrs
out
loopne
out
or
mov
xchg
in
iret
mul
xor
fmul
iret
cli
mov
mov
jmp
movl
cmp
jne
or
andl
or
mov
subl
jmp
int3
ds
rcl
iret
or
aam
leave
pop
jle
jge
jl
fcmovbe
fldl
call
xchg
xchg
ljmp
xor
aad
loopne
repnz
aam
adc
xor
aas
test
stc
test
jmp
xor
xor
out
fdivr
loop
repnz
repnz
test
sti
flds
lock
jmp
vpaddsb
aad
cmp
sti
fucomi
repnz
in
addl
test
cs
lock
shr
xlat
jmp
in
cmp
loope
ret
fldz
loop
repnz
mov
hlt
xor
xor
xor
out
and
call
call
shr
xorl
jmp
fprem
mul
sarl
fadd
in
test
test
ret
xor
int3
sti
iret
fsub
test
aas
sar
clc
shl
test
lret
call
repnz
clc
in
fscale
into
sub
test
shl
out
loop
jecxz
mov
xor
aam
cmp
shl
in
shr
fdivr
fmul
fsub
addl
shl
sti
enter
out
shr
fcompp
div
rol
cmp
cld
cld
cmc
inc
and
jmp
lret
out
call
stc
cmp
icebp
fdivr
fdecstp
xor
fst
jmp
in
out
and
aad
bnd
out
idivb
in
repnz
cmp
ret
or
leave
lds
aam
cli
cmp
f2xm1
rcr
cmpl
and
test
test
std
div
fcmovne
into
int
in
sar
loopne
enter
cld
ljmp
shr
ss
fcmovbe
ljmp
in
repnz
in
fdivr
in
std
mov
clc
ss
lret
fsubrp
int
rol
vaddsubpd
jmp
les
out
leave
ljmp
call
cld
icebp
out
cmc
cmpb
jmp
xchg
ffreep
hlt
xor
shll
ffreep
xlat
ljmp
aas
out
cli
fmulp
lret
lock
rcl
iret
rol
fucomi
aad
std
roll
xchg
mov
lret
fmul
in
rcl
repz
out
cmp
cmp
fcmovnbe
adc
test
test
xchg
mov
loop
cmp
cmp
sarb
into
loop
fcomip
mov
testl
les
into
out
fstp
cli
rcl
cmp
aam
fldl
fmulp
decb
adc
loop
aad
cld
xor
shr
iret
repnz
int3
aas
ret
fcmovnb
hlt
imul
ret
out
mov
jmp
rcr
aaa
icebp
div
cmc
cmc
not
clc
test
in
in
stc
mov
test
in
int3
shl
ret
fdivs
fstpt
cmp
mov
fcmovnu
call
xchg
jmp
iret
cmp
hlt
aas
hlt
sarb
xlat
repz
fcmovnu
shl
mov
mov
cld
aam
ret
in
lret
call
loopne
loopne
call
cld
sar
hlt
mov
mov
loope
xchg
in
shll
lret
out
aam
ljmp
fsub
stc
mov
movl
test
aad
hlt
idivl
cmp
cmp
out
sub
lock
ror
loope
clc
lret
lret
sbb
xchg
and
repnz
ret
fst
out
out
hlt
icebp
xlat
repnz
in
call
icebp
in
mov
mov
loopne
in
ss
shl
out
hlt
out
vshufps
out
idiv
lret
fcmove
int3
lret
test
fidivl
jmp
ret
cmp
adc
and
test
or
xchg
xor
leave
aaa
aad
out
rol
xor
fsubr
idivb
cmp
shl
rcl
cld
int
fsub
in
in
lock
sub
cs
int3
out
lret
xor
stc
sarb
fsubp
stc
cld
aam
out
les
int3
ret
jecxz
roll
test
clc
xchg
iret
aas
in
xlat
jmp
fcomi
cmp
cmp
sbb
icebp
out
cmp
mov
ds
repz
test
xlat
fldpi
enter
int
cmp
in
jecxz
aam
mov
out
loop
jmp
repnz
out
fsubr
test
addb
lds
adc
sti
in
aad
cld
shl
xlat
test
loop
cld
fld
aam
sbb
fcomi
rcr
xchg
xor
shl
iret
cmp
or
add
fs
add
adc
mov
incl
add
orl
push
call
movl
incl
cmpl
jb
movl
jmp
cmp
movl
jmp
ror
int
lret
xchg
or
icebp
shlb
sbb
jge
jl
enter
rolb
aam
out
cli
cld
enter
xor
cs
call
out
rcr
jecxz
cmp
enter
les
loopne
in
ljmp
cmp
xor
aam
into
repnz
sar
sti
fsubp
loopne
cli
ret
cmc
enter
cmp
loope
cmp
test
clc
xchg
xchg
mov
call
in
das
call
cmp
cmp
les
int3
fisttps
rol
hlt
xor
ss
in
div
shl
shl
rol
sbb
cli
loop
fldl
ret
in
lret
fsub
dec
cmp
into
loope
shl
shl
test
out
out
jmp
xor
iret
xlat
fsin
iret
loope
incl
lret
cmp
ljmp
repz
sar
fiadds
test
rol
ret
fiaddl
out
ljmp
icebp
cmc
int3
out
ss
sub
sar
fsub
loope
imul
clc
lret
mov
xchg
int
iret
lock
jmp
ffree
aaa
aaa
test
jmp
lea
lock
loop
into
xor
xor
ljmp
cmp
fdivrl
cmc
ret
cld
lret
fldl
shl
ret
vpsubsb
idivl
stc
loop
iret
repnz
test
out
in
jmp
int3
cmc
jecxz
fmulp
ljmp
lret
fcmovnbe
jecxz
adc
mov
cmc
test
xchg
in
out
ds
jmp
fstp
dec
clc
aad
fcmovnu
faddl
adc
loope
stc
loopne
jmp
lock
out
xor
fdivrs
xor
fdivr
sti
test
call
lret
xchg
mov
rol
fnclex
sti
cmp
clc
leave
lret
neg
ds
aad
in
aad
pop
nop
cli
test
mov
call
cmc
loop,pt
cmp
loope
incl
jmp
mov
mov
iret
cmp
rolb
fsubr
fldl
in
in
loop
call
aad
sar
ret
cmc
ret
jecxz
mov
fadds
in
into
stc
div
out
das
cs
aaa
repz
loop
repz
xchg
repz
in
in
in
loop
ljmp
in
addb
leave
in
xchg
fstp
ljmp
int3
fmul
rcl
aaa
faddp
fnstcw
aam
cmp
fucomp
mov
int3
mov
call
rcl
jmp
loop
rcl
lock
ret
fisttpl
fldl
out
jmp
out
idiv
test
stc
hlt
repz
out
loop
mov
sar
incb
stc
leave
shl
ljmp
fdivrs
fdivr
xchg
ljmp
lret
ret
ljmp
stc
int
rol
cmp
ljmp
repz
lea
sub
out
std
fcmovu
fcmovnu
out
sti
testb
loopne
in
roll
repz
fdivr
flds
hlt
fst
testl
in
out
stc
idivb
aad
jmp
ds
loopne
fcomip
sar
fsubr
out
fucomi
ljmp
xor
hlt
lock
lret
cld
sarb
test
shl
xchg
fdivp
test
in
test
out
xor
shll
aad
rcr
cmp
int3
cmp
cld
neg
incb
aam
loop
fldpi
repnz
mov
sub
cs
in
rcr
shl
cmp
test
sti
jmp
jecxz
lock
aam
out
loopne
divl
lds
incl
in
out
xchg
aam
xchg
shl
out
xchg
cs
aad
std
jmp
leave
enter
jecxz
rcl
test
xchg
cld
and
int3
out
icebp
std
ss
out
ret
rcr
movl
ret
lret
repz
cs
fcmove
cmc
std
sarb
sti
fucom
and
loope
into
addb
aam
aaa
cli
lret
clc
call
jecxz
ror
icebp
jecxz
cli
lret
loopne
std
mov
fadd
sub
fcomp
sti
ss
fcomi
xor
shr
idiv
shl
loopne
sub
sti
mov
mov
call
rol
repz
aaa
sar
lret
out
iret
sti
aad
incl
fdivr
icebp
in
loopne
aaa
int
lock
repnz
jne
xor
or
adc
movl
orl
mov
sbbl
mov
xorl
jmp
rcl
lret
rcl
cmp
mov
xchg
and
jge
jl
cmp
shl
stc
cmc
les
mov
test
mov
int3
mov
in
xor
sar
shl
lret
in
in
lock
loope
sti
out
lret
mov
out
ror
leave
aam
out
clc
lret
cld
cmp
cmp
test
call
out
xchg
out
lock
jmp
lock
lock
loopne
test
xchg
loopne
fdivr
in
mov
iret
stc
ss
xor
ljmp
jecxz
in
test
mov
aaa
aad
enter
sarb
stc
cmc
cmp
shl
out
add
mov
pushl
lret
xor
lds
neg
repz
shl
cmp
mov
jmp
jmp
aad
aad
leave
iret
jmp
icebp
aas
test
stc
orl
ret
test
fnstcw
in
out
cmp
cmp
sbb
xlat
idiv
leave
cld
in
mov
shl
ss
lret
ret
rcl
cmc
lds
orb
in
aaa
aaa
lret
aam
cmp
call
xchg
fcmovnb
stc
call
test
int
neg
loopne
ret
ss
xor
jmp
ret
repnz
fsubr
in
loop
xchg
int
sti
lret
shr
loop
out
cli
cmc
fstp
or
out
icebp
repnz
std
xchg
fcmovnb
cli
jmp
mov
idivl
call
in
div
cmp
in
loop
fnstcw
les
orb
loop
in
repz
shll
enter
in
stc
cmp
faddl
jecxz
ret
out
into
cmp
cmp
shl
repz
addb
in
int
xchg
fsub
aaa
shr
loop
cli
fucomi
cld
lret
sbb
repz
out
in
fmuls
into
out
leave
out
in
out
ljmp
repnz
fcmovne
rcl
cli
xlat
lret
out
test
aad
into
ret
idivl
ss
fdivp
fstpt
test
xchg
iret
cs
lret
ret
jmp
xor
in
sti
int
fcomp
clc
jecxz
stc
aad
mov
out
call
cmc
out
out
fldz
ljmp
in
rcr
call
mov
enter
in
cmc
ds
sub
rcl
cli
enter
cmp
in
idiv
mov
fiaddl
loope
in
in
repnz
jmp
rcl
aas
ror
hlt
sti
std
out
loopne
test
ffree
enter
repz
ret
cli
cmp
ljmp
sbb
jecxz
fdivr
test
lret
ficoms
out
jmp
out
iret
in
sar
cmp
fcomip
ret
repnz
sti
in
stc
les
icebp
fsubrp
test
std
into
ljmp
fdivp
in
orl
int
out
xor
fdivr
shr
out
loopne
int
cmc
cld
xchg
fadd
aam
mov
out
repz
xchg
ret
div
ljmp
lock
rorl
out
out
ljmp
out
hlt
out
fistpll
into
loopne
int3
and
stc
in
fldl
fsubrp
test
lock
hlt
lock
cmp
int3
aam
repz
loopne
sub
in
out
cmp
cmp
aam
not
cmp
ffree
loop
xlat
in
cld
out
repz
loope
lret
fst
fcmovne
add
ret
fdivp
xchg
out
in
aam
out
in
cmp
testl
repnz
loope
xchg
ljmp
lret
into
hlt
int
cmp
fadd
cli
in
clc
stc
mov
lock
roll
fcmovnu
cmc
ss
ss
call
icebp
add
testl
mov
lret
out
out
hlt
out
not
loop
cmp
rcl
aam
push
ret
fists
xor
jmp
fcmovne
icebp
in
iret
jmp
repz
in
push
jmp
idiv
mov
nop
out
test
out
out
shl
dec
cmp
cmc
fdivp
out
out
out
lea
ret
imul
stc
xor
in
aas
call
ret
fcmovnb
call
stc
cli
mov
ljmp
xor
aaa
rol
in
rcl
shl
testl
ljmp
shl
fnstcw
cmp
mov
incl
jmp
int
iret
rcl
fsts
fs
sti
loopne
mov
jge
jl
fxch
aas
cmp
out
aaa
lock
cli
fcmovne
in
fldl
xor
out
int3
cmp
enter
div
shl
aam
xor
mov
ds
iret
mov
out
repz
ret
sarl
fnstcw
cmc
sarb
aas
in
addb
test
icebp
rcr
xchg
xchg
cmc
out
enter
int3
into
ljmp
sar
push
out
lret
int
int3
ffreep
lret
das
ret
call
fcomi
call
test
call
lret
jmp
in
mov
out
int3
fyl2x
jmp
in
fxch
std
cmp
test
clc
mov
xchg
repz
loope
cmp
ljmp
xorb
fcom
jmp
ret
jecxz
iret
out
mov
in
decl
imul
cmp
sti
cmp
xlat
cmp
iret
shl
ret
mov
mov
out
in
std
ror
xor
xor
cmp
ljmp
aas
out
clc
leave
cmc
vpsubq
in
orb
cmp
std
div
int3
hlt
cmp
ret
icebp
xchg
ret
loope
ljmp
sub
aad
xor
out
neg
cmp
iret
shl
repnz
repz
dec
xchg
mov
loope
jmp
fnstcw
out
in
out
std
hlt
shl
clc
movl
std
in
test
not
hlt
out
ror
ss
sti
aas
sub
ret
and
int
orl
xor
rcr
cmp
sar
iret
cmp
jmp
fxch
mov
shll
xlat
jmp
aam
int
clc
cmp
fscale
in
flds
in
test
out
lds
in
xlat
int3
rcr
cld
aas
cmp
cmp
ret
fldl
cli
mov
mov
cli
int
rcr
aad
lret
cmc
rol
in
fucomp
sarb
in
xchg
addl
repz
xchg
sub
imull
out
ror
cmp
shr
div
clc
xchg
mov
cli
std
int
xchg
iret
in
xor
jmp
into
cmc
cld
sbb
cmp
jmp
orl
in
out
out
aaa
aad
fxch
cmp
xor
aam
cmp
lds
mov
xchg
xchg
aad
aad
into
repnz
cld
sar
cmc
iret
test
repnz
aad
mov
mov
iret
loope
mov
out
das
iret
out
icebp
hlt
cmp
ror
shlb
fisttpl
call
xor
lds
rol
xor
out
cmp
fcompp
loopne
xlat
jmp
xchg
filds
shl
ss
cs
shl
loopne
aas
jecxz
ret
aad
fmuls
call
loope
jmp
aad
lret
repz
in
rol
faddl
xchg
lock
out
test
call
repnz
iret
hlt
lret
ljmp
sti
mov
sbb
and
lock
lret
icebp
repz
leave
fucomip
cmp
xlat
jecxz
cld
cli
mul
loop
out
jmp
in
out
out
xchg
lret
in
fucomi
aad
sti
iret
ss
int
lret
shl
std
ret
ret
clc
int
std
int
icebp
ret
lret
cmp
int
fcomip
incb
loop
test
ljmp
xor
jmp
aaa
sarb
test
cld
test
fdiv
call
out
ljmp
neg
stc
repz
ds
rcl
lret
int
fmull
loop
cmc
sarl
cli
lock
aam
in
fcom
cmp
rcl
or
cmp
xchg
xchg
xchg
cmpb
cs
lock
stc
call
in
loop
fildl
lret
jmp
xor
into
cli
cmc
sti
int3
sar
vmovq
mov
cmp
jecxz
enter
inc
in
out
cmp
out
lret
ss
rcl
rcr
cmp
aas
stc
fdivr
lret
fmul
ljmp
ror
xor
out
cmp
aad
cmc
jmp
in
loopne
xchg
test
mov
iret
ret
xor
xor
sarb
cmp
test
leave
aad
inc
cld
or
out
repz
xchg
in
xor
aad
cmp
cmc
out
std
faddp
rcr
mov
clc
jmp
int
fldl
lret
das
ljmp
cmp
addl
in
in
enter
aas
xor
sti
sub
out
enter
lock
out
loopne
enter
mov
lret
mov
int3
xor
repnz
mov
jmp
ds
aad
aad
aad
movb
lds
jle
jge
jl
cld
clc
fmulp
ss
cmp
bnd
std
mov
mov
test
int3
cmc
xor
xor
out
cmp
into
in
shl
loope
loope
ret
call
repnz
out
mov
ret
enter
lds
in
shl
fchs
ds
hlt
test
sarl
fdivr
in
fucom
xchg
loope
enter
rcl
ljmp
std
repnz
fsub
clc
jmp
jmp
mov
nop
call
divl
out
enter
cmp
sti
shl
or
rol
fisttpll
orb
idiv
shr
out
lock
sar
lock
xor
repnz
cli
std
sar
into
adc
sub
loopne
out
int
dec
cmp
into
ret
cmp
test
dec
out
xchg
iret
mov
xor
xor
out
xlat
fucomi
call
testb
ret
out
test
in
nop
mov
loope
out
lret
in
stc
cli
int3
test
out
neg
sbb
fimuls
jmp
shrb
jmp
repnz
jmp
lret
cmp
xchg
fildl
jecxz
cld
xchg
sub
into
call
fcomip
fyl2x
loopne
in
aam
ret
rorb
lock
nop
nop
xchg
out
iret
int
xor
cmp
clc
out
fcmovbe
fdivrp
iret
adc
test
or
xchg
jecxz
fcom
icebp
lret
in
fidivrl
shl
aad
in
sti
sbb
xchg
or
xor
ret
xor
cmc
cmp
jecxz
fsub
test
out
fildl
loope
das
ljmp
lock
cmp
aam
iret
sar
test
mov
xchg
sbb
repnz
rcl
mul
cmp
repz
fincstp
cld
int3
shl
add
std
mov
iret
rorl
aad
neg
ss
aaa
into
rcl
neg
int
shl
enter
hlt
and
xchg
or
div
sti
xor
fcom
fcomip
into
repnz
rcl
lock
out
sti
orl
lret
in
cs
cmp
cmp
cmp
aad
jmp
out
cli
jecxz
clc
loope
cld
aas
xor
xor
jmp
div
cmp
xlat
cmp
aad
mov
loop
loop
in
out
rcl
lret
std
lret
shr
aas
loope
std
stc
hlt
std
enter
lret
ret
out
xchg
lret
xor
idiv
xor
clc
rcl
lret
fsubr
mov
shr
stc
jmp
repz
iret
lock
aad
lds
int3
aam
xlat
cld
fsubp
cmc
cld
loop
incl
loop
test
add
lret
xor
call
aas
stc
out
hlt
std
out
ds
int
enter
lret
aam
sbb
hlt
iret
shl
out
test
xchg
fcmove
nop
jmp
div
rol
xor
cmp
sti
ds
fcmovb
cli
mov
fucomp
repz
repnz
cmc
out
xor
idivl
hlt
repnz
std
sbb
mov
mov
loop
in
out
ds
int
lock
cmc
fadd
loope
in
dec
leave
cmp
sti
in
fldl
fsubr
clc
rcl
jmp
aaa
rcl
int
sbb
cld
mov
and
test
rolb
jmp
sti
fucomi
cmp
xlat
stc
cmp
std
call
fdivr
iret
repz
xor
fdivr
rcl
ds
aas
iret
in
fcomip
movb
les
loope
ret
cli
out
test
fiadds
cmp
or
shl
int3
hlt
ljmp
lret
out
xlat
lock
clc
loope
xchg
sti
ret
fcomip
mov
iret
fucom
hlt
xchg
lds
stc
xor
cmp
call
aam
sar
cmp
hlt
mov
sti
in
std
int3
xchg
sub
xor
cmp
sti
cmc
xlat
jmp
clc
shr
aas
rcl
cmp
mul
call
xchg
mov
cmpl
aam
fnstcw
ljmp
cmp
fyl2xp1
testb
mov
in
cmp
stc
xor
xor
and
ds
loope
cld
clc
cld
test
neg
xchg
fdiv
jmp
out
icebp
clc
sti
lds
repnz
std
jmp
fiadds
call
jmp
in
leave
leave
cmp
ss
shr
int3
int3
jecxz
fyl2x
hlt
ds
fst
cld
ret
out
enter
mov
lret
shl
jmp
call
xchg
cld
aam
fmul
mov
loope
incb
in
call
pop
add
aad
aad
rolb
push
jmp
jle
jge
jl
repz
fcmovbe
sarl
lock
jmp
fcmovne
std
in
out
mov
ror
out
fcmovne
shl
icebp
shl
fadd
fcmovb
mov
loope
mov
sbb
lret
xor
aad
test
out
xor
into
out
rcl
loope
clc
fcmovnu
loop
std
in
jecxz
ror
xchg
xchg
aad
ret
clc
fnstcw
xor
int3
fst
fcomip
in
xchg
jmp
in
xchg
rcr
loopne
loope
jmp
int
ss
cmp
rol
loope
in
xchg
cli
std
icebp
out
fsubp
dec
icebp
cs
jecxz
shr
ror
in
fdiv
enter
loop
fsub
lock
cli
clc
jmp
mov
sub
in
out
cmc
cmpl
cmp
fcomp
div
xchg
fld
sti
in
ficoms
xor
hlt
jmp
cmp
xchg
shr
lret
sti
clc
fdivrp
loopne
xchg
jmp
in
sar
lret
aas
into
clc
stc
cmp
leave
mov
clc
loope
or
aam
mov
repnz
aas
cli
fcmovnb
xlat
lock
fsubp
shl
aad
enter
sti
mov
loope
in
leave
icebp
aaa
repz
fdiv
iret
cmp
and
addl
loope
int3
xlat
in
ljmp
fmul
aam
fadd
clc
movb
nop
repz
in
aad
xor
shr
cmp
push
add
leave
mov
test
xlat
cmp
cli
xchg
out
leave
shrb
in
cmp
enter
fcomp
jecxz
shl
fmull
std
decb
loopne
xor
lret
in
jmp
fcmovnu
roll
fldl
leave
xchg
mov
ret
aad
xor
clc
cmp
ror
in
ffreep
rol
hlt
lret
out
out
nop
lock
lock
rol
clc
in
int3
sarb
idiv
aad
int3
cmc
rcr
loope
test
call
enter
int
xor
jecxz
icebp
cmp
push
fadd
fdivr
int
int
repz
rol
leave
cmp
rcr
call
in
fdivrs
hlt
sti
std
lea
lret
hlt
iret
xlat
fsubrp
in
xor
fnstcw
into
leave
fmul
fadd
cmc
test
std
fmull
in
fmull
ljmp
cld
cmc
int3
into
sar
fmul
jmp
out
fnstsw
jmp
xor
in
fsubr
repz
ds
cli
repnz
cmp
ljmp
in
cmp
idiv
in
aad
rolb
call
fisttpll
cmp
lret
aas
fdivrs
test
cli
mov
mov
mov
cmp
test
lret
fistpll
ljmp
addb
leave
loop
loop
loope
jmp
leave
sti
push
aam
cmp
aas
vpmaxsw
neg
lds
clc
mov
fsincos
shr
xlat
repz
fcom
cmp
ds
cmp
mov
aam
in
loope
orl
icebp
f2xm1
call
fdiv
jecxz
test
jmp
loopne
addb
xor
shl
ljmp
aam
mov
test
leave
fadds
xchg
adc
icebp
leave
aaa
stc
shr
stc
aam
sarb
fdivr
call
iret
out
sub
fdiv
int3
int3
ret
sti
int
repnz
cmp
cmp
hlt
loope
lret
orb
in
ds
enter
xor
icebp
cli
faddl
testl
popl
div
std
hlt
cmp
fcmovnu
idiv
aam
xchg
cmc
in
iret
fiadds
out
sub
jmp
aam
test
adc
faddp
fcmove
out
nop
mov
aam
sub
aam
cld
rcl
lret
rcr
test
orl
fadds
in
loop
stc
hlt
jmp
enter
lret
sar
in
fldl
mov
sti
xchg
rclb
out
rcr
lret
out
cmp
cli
fucomip
rcl
shl
loop
call
xchg
loopne
mov
sarb
jmp
sar
loop
aad
aam
sti
loop
out
lret
in
nop
loope
cmc
xlat
hlt
xor
out
repz
fdivr
jmp
in
xchg
out
cld
stc
cmc
int3
in
jmp
rcll
jmp
call
fdivrl
inc
jecxz
jmp
xlat
fdivr
out
lret
call
ret
ret
mov
lea
mov
mov
xor
add
mov
lea
jmp
into
aad
int3
fcmovnu
aad
add
sub
ret
xor
jl
out
aam
call
aas
and
xor
ljmp
iret
out
aam
cs
ret
jmp
test
aad
lock
imul
in
xchg
in
loop
xchg
in
aaa
out
mul
cmp
hlt
aas
cmp
cmp
int3
xchg
loop
neg
leave
in
mov
jmp
cmp
bnd
cmp
cmc
lret
rcr
std
xchg
mov
lret
mov
int3
out
leave
int
xor
cmp
cld
loop
shl
shl
call
in
loopne
rorl
repz
call
xor
out
stc
fdivrp
incb
jecxz
hlt
jecxz
ret
xlat
sar
shr
xlat
cmpl
jecxz
fcomp
cld
lea
fldl
das
lret
iret
in
std
cmc
loope
shl
not
mov
mov
ret
in
xchg
out
xor
xor
into
icebp
lock
out
xlat
cmp
cmc
loope
sti
xchg
loop
mov
in
sarb
call
repz
loop
enter
fimuls
hlt
lret
repnz
ret
cmp
icebp
hlt
aam
loope
neg
ret
ffreep
out
mov
repz
imul
xor
xor
lock
out
into
int
rolb
out
fdiv
out
jmp
jmp
enter
rcl
fdivr
into
xor
aad
out
test
test
loopne
xlat
std
fscale
ljmp
stc
rcl
jmp
notrack
orl
call
xor
cli
loope
iret
fcmovne
test
icebp
loope
aam
cli
call
jmp
cld
int3
dec
aam
xor
in
xor
sti
cmp
rcl
in
sar
fldl2t
cmc
lret
xlat
out
in
xchg
cli
call
aaa
lret
ljmp
jecxz
and
shl
rcr
int3
fiadds
out
ret
in
fmul
enter
shl
xchg
faddl
test
cmp
xor
out
loop
xor
jecxz
test
stc
fistpll
dec
ds
mov
ljmp
in
int3
ss
dec
enter
addb
loop
sar
int
rclb
ret
lock
xor
in
cli
int3
cmp
cld
in
in
jecxz
orl
xor
sti
ljmp
sti
cli
fsubp
xchg
mov
loopne
loopne
jecxz
cmp
cmp
cmp
in
cmc
std
cld
call
ficoml
icebp
cmp
sar
in
call
ljmp
ret
out
xbegin
addb
out
cmp
leave
cmp
lret
cmpl
loopne
repz
cmc
std
std
ret
mov
into
ret
jmp
shr
adc
repnz
fcomi
xlat
popl
xchg
xchg
icebp
test
fidivl
fcomp
into
idivl
aam
xchg
hlt
loope
enter
leave
fstl
fcmovnu
ror
sarl
icebp
repnz
cmp
ret
ret
loop
fxch
ljmp
loopne
ret
xlat
call
ret
loop
xlat
in
rol
ret
int
loop
in
loopne
lock
sar
cmp
rolb
loopne
into
jmp
leave
cmc
call
test
rolb
in
fiaddl
clc
fmul
jmp
repz
fcmovnu
loop
fadd
fdiv
add
in
cmc
test
in
out
cmp
leave
out
cmc
std
sarb
loopne
cli
fcmovbe
fcomi
ret
mov
lret
mov
aad
hlt
shl
xor
fnstcw
repnz
cld
incb
fcmovu
out
enter
mov
rcr
cmp
cmc
out
idivb
fcomi
out
xchg
mov
fadds
out
shl
mov
shr
cmp
jmp
sarl
cmp
fistpll
rcl
loop
loop
ret
xlat
std
jecxz
fsubp
adc
icebp
int3
sar
xor
aaa
fmul
aaa
aas
in
sub
test
mov
cld
std
std
xchg
test
mov
call
jmp
aam
std
jmp
cld
clc
iret
ds
vpaddsw
out
fcmovu
or
loope
out
int
repz
stc
aad
icebp
aam
cmp
jecxz
ret
fisttpll
fsubrp
xchg
shl
cmc
icebp
rcr
cmc
out
fsubr
sub
loopne
mov
enter
ljmp
ss
push
mov
xor
jmp
ror
ror
rcr
frstor
pop
sub
ja
loope
cmp
jge
jl
out
iret
int3
cmp
jmp
ljmp
cld
aad
not
out
and
into
jmp
jmp
lret
ror
out
repz
addl
jmp
loope
out
mov
in
enter
cmp
shl
repz
aas
jmp
mov
int
lret
loope
xor
cmc
clc
sar
aaa
lock
stc
icebp
shl
fnop
and
ret
call
orl
xor
cmp
shr
test
in
movb
out
loopne
xchg
rcl
into
repz
int
cmp
int3
into
loope
sarl
fdivr
into
stc
mov
jmp
iret
out
mov
rcl
in
lret
into
cld
in
neg
fdiv
out
add
fcmovu
xchg
mov
loopne
cmp
in
idiv
ss
ss
icebp
cmp
xor
in
cmc
mov
enter
mov
xchg
xchg
shl
int3
sar
jmp
hlt
ret
loopne
mov
dec
loope
leave
rcr
in
bnd
repz
enter
cmp
cld
out
loop
cld
cld
cmp
mov
xor
out
lret
in
std
xor
repz
cld
int3
incb
out
shl
xor
imul
fstpt
iret
call
lock
in
fcmovbe
fcompp
in
orb
mov
aaa
xor
loopne
lds
xor
xor
ss
xchg
jmp
in
icebp
div
in
ss
repz
cmp
in
cmp
cmp
ffreep
loopne
les
fucom
out
fcomip
shl
int
xlat
in
cmc
clc
fidivrs
shl
in
std
or
jecxz
std
ret
loopne
lret
xor
ss
fnstcw
cmp
into
cld
test
fld
int
iret
faddl
lock
rcl
cmp
das
ljmp
repnz
ds
cmp
in
xchg
out
mov
out
in
repz
sar
idiv
jecxz
aam
aam
xchg
mov
mov
leave
call
cmp
cmp
xchg
movb
cli
xchg
jmp
vphaddubw
repz
sub
fldl2t
cmp
repz
loop
rcl
loop
hlt
loop
orb
dec
das
shl
repnz
iret
shlb
out
sti
cmp
xlat
ss
incl
int3
icebp
mov
mov
sub
int
int3
xor
xlat
xor
lret
ds
out
test
hlt
cmc
aam
enter
lock
repz
out
into
iret
cmp
fcom
in
in
ret
bnd
mov
addb
ret
std
cld
xor
cld
ljmp
filds
leave
cli
loop
int
cs
in
std
idiv
fcomip
rcl
into
fdivp
ffreep
faddl
rolb
loope
xlat
int3
out
jmp
lock
shr
fistpll
in
addl
jecxz
std
fucomip
xchg
in
loopne
shrb
shl
out
sti
not
hlt
cmp
test
repz
jmp
in
call
aaa
cs
in
leave
xor
cmp
loopne
fstp
mov
std
stc
std
lret
ljmp
xor
clc
std
ljmp
in
mov
mov
les
xchg
vpmulhw
aad
fmul
ljmp
cmp
cmp
out
sub
out
mov
nop
ljmp
shr
repnz
cmp
fcmovne
in
test
ret
lock
fadds
mov
sar
iret
fidivs
xor
shr
lock
int
ljmp
test
enter
add
lea
ss
xor
sar
hlt
repnz
ret
shl
loopne
xor
orb
xchg
xor
aam
into
lret
cmp
ror
cld
cmp
in
fcmovu
mov
mov
into
int3
xor
repnz
shr
sarb
fndisi(8087
hlt
fcomip
lret
repnz
jecxz
mov
in
xchg
out
xchg
test
iret
cmp
call
rcl
loope
cmp
mov
cmp
xchg
xchg
int
lret
out
stc
int
int3
ljmp
jecxz
fmull
into
clc
loope
cld
push
shll
loop
fstp
fnop
aaa
not
icebp
std
ffree
in
fxtract
lret
cld
fdivp
in
ljmp
shl
aam
idiv
xor
in
add
icebp
clc
not
sti
loope
aam
orb
fdiv
ljmp
sarb
into
fldz
aam
sar
idiv
leave
in
in
lea
hlt
add
push
jmp
lret
ds
lret
rol
loop
push
inc
sarl
jl
add
fcmovb
ljmp
fnsetpm(287
cld
sbb
cli
mov
loopne
shl
shl
ljmp
repnz
shl
shr
loopne
or
test
in
hlt
cs
hlt
stc
test
lock
fldl
add
repnz
cmc
out
cmp
rcr
fldl
test
out
leave
cli
loopne
into
jmp
repz
enter
cli
cmp
call
loope
fucomp
into
icebp
cmc
xchg
enter
rol
lret
clc
lock
fdivp
cmp
aad
aas
fdivr
xchg
fmul
fdivr
xor
repz
jmp
aam
loope
out
in
lock
cmc
cmp
out
ljmp
loope
out
sarb
lret
cmp
fcomp
in
shl
leave
mov
icebp
xchg
das
out
repz
aam
xor
std
std
xor
aas
ret
fsub
jmp
lret
in
loop
shl
lret
ror
bnd
jecxz
clc
loope
cld
sar
rorb
call
lock
ss
in
fucom
ljmp
test
out
and
fucom
loopne
loope
leave
repz
out
das
icebp
aas
ds
cli
cmp
testb
test
fisttps
fsubp
ljmp
cmp
ss
rol
jmp
sti
in
xchg
in
shl
lock
jecxz
xor
in
int3
xor
shr
std
fisttpll
jecxz
cld
shl
loop
aaa
shlb
shr
std
lock
in
int3
aas
cmc
clc
cmp
mov
out
xchg
test
jmp
shl
out
cmc
stc
roll
stc
repz
in
mov
mov
in
fists
xlat
cli
xor
ss
loopne
fstp
out
sti
into
loopne
leave
leave
ret
mov
in
lret
sti
ret
xor
icebp
cmp
sar
and
leave
mov
xor
in
xor
jmp
cmp
ret
test
stc
in
out
dec
xchg
test
xchg
shr
into
cmc
in
ror
ljmp
int
hlt
in
lret
movl
adc
aam
lock
out
in
ljmp
fmulp
fcmovbe
xor
orl
lock
idivb
shl
fcmovbe
out
movl
xchg
in
sub
xor
sarb
test
xchg
lret
mov
cli
fsubr
in
out
xor
in
out
xor
shl
clc
loop
rcl
and
out
mov
xchg
jmp
hlt
icebp
cmp
rolb
imul
fmul
jmp
xchg
iret
nop
lret
ret
enter
int3
imul
in
ret
fldl
out
sti
into
int3
out
jmp
loop
jmp
sti
ret
aaa
cmp
jmp
clc
loope
adcb
shl
stc
jmp
shr
roll
inc
xlat
into
lock
iret
jmp
out
cmp
xlat
lock
xor
fsub
loopne
shl
shl
ljmp
fisttpl
ss
out
repz
cld
rcl
stc
roll
jmp
fimull
int
loop
iret
rcl
loop
les
lret
fcomi
fnstcw
lds
mov
repnz
xchg
ret
loopne
cmp
into
enter
loop
cmc
cld
call
lret
loopne
orl
aad
jmp
in
aam
add
mov
repz
hlt
fucomp
addb
aaa
out
stc
xor
out
clc
lret
cmp
jecxz
ret
cli
sbb
enter
jecxz
clc
into
int
mov
shll
loop
lock
fidivl
lret
int
lock
out
hlt
sti
mov
std
xchg
jmp
fsubrp
xor
fdiv
not
cmp
out
addb
add
rorb
repnz
cld
cmp
shl
jecxz
jmp
in
mov
mov
mov
jmp
jecxz
sti
out
aam
cmp
repnz
test
xchg
leave
call
icebp
ror
call
out
idivl
out
aas
std
stc
out
lock
loop
fsubrp
loopne
orl
jmp
fcmovu
test
neg
stc
out
jecxz
rcl
in
fcomp
incb
sub
js
inc
add
sub
jmp
rcl
mov
neg
repnz
jns
repz
ret
jge
jl
xlat
fldl2t
lret
out
cli
ss
shl
sbb
repz
jecxz
les
das
lret
aad
xor
enter
fcomip
add
cmp
lock
repnz
in
iret
enter
loopne
hlt
les
lret
lret
fnsave
fdivp
rol
enter
addl
xor
shl
in
sarb
jmp
clc
hlt
int
repnz
xchg
mov
test
out
lret
out
lret
sub
fucom
out
repz
repz
jmp
lret
loope
mov
lret
stc
loopne
xor
iret
cmp
out
enter
fldl
sar
ror
in
out
in
idiv
std
aaa
stc
lock
cli
xlat
test
cmp
cli
mov
shl
orb
sarb
cmp
fcmovbe
out
sar
ret
shl
mov
aad
xchg
jmp
clc
loope
jmp
loopne
sub
hlt
in
leave
stc
fcmove
sarl
std
cmc
aad
test
out
int3
lret
jmp
std
out
out
ret
xlat
out
stc
aaa
ds
shl
into
xchg
mul
out
loopne
faddl
loope
repnz
in
iret
lret
jecxz
xchg
test
out
jmp
sti
icebp
rcl
out
sub
sub
std
out
fldl
in
rolb
lock
out
xchg
mov
lock
cmp
dec
fldl2e
cmp
ret
rol
std
enter
loop
mov
cs
lret
xor
out
not
cld
sti
not
incl
cmc
fmuls
test
out
into
cmc
out
repz
aad
shl
mov
xchg
mov
lret
in
call
ret
iret
call
not
imul
xchg
sti
xlat
ret
add
jmp
das
in
out
in
imul
imul
lret
iret
ret
stc
jecxz
shl
lret
call
repz
ljmp
fcmovbe
hlt
test
aad
cmc
movl
sub
shl
call
ds
sti
div
idivb
ret
rcr
cmc
mov
xor
ror
int3
aam
cmp
ror
repnz
cmp
out
loope
jmp
out
fcmovne
in
in
icebp
xor
xor
fdivs
in
aam
aas
xor
idivb
loope
out
or
mov
out
cmc
jecxz
xor
loop
out
fnstsw
shl
ret
aas
in
cmc
fimuls
ds
jmp
ret
adc
shl
in
sub
cmp
dec
std
xor
icebp
incb
stc
mov
xchg
ds
enter
in
rcr
call
fst
fucomp
in
ffree
lret
jmp
out
nop
mov
les
jmp
iret
std
cmp
sti
jecxz
vmovq
rcl
in
repz
xor
xor
lret
aas
loop
std
in
hlt
fdivp
loopne
fimull
xchg
jecxz
jmp
repnz
shr
fcomp
rolb
shl
mov
iret
std
aad
in
int3
stc
lret
lock
push
in
fdivrl
in
aas
rol
cld
test
enter
lret
xchg
adcb
bnd
clc
shr
les
adc
int
lret
out
loop
ss
fsubr
clc
lret
repnz
ljmp
mov
jecxz
in
nop
fdiv
jmp
into
shl
ss
ljmp
xchg
in
sti
mov
in
icebp
iret
test
int
divl
aam
cmp
in
cmp
call
loopne
in
hlt
fst
cli
loop
ret
icebp
lret
decl
shr
in
fdiv
jmp
hlt
out
shl
rolb
loop
xchg
in
mov
loopne
cmc
not
cmp
in
cld
fiaddl
dec
in
jmp
incl
enter
icebp
ljmp
in
sti
cmp
std
stc
repnz
aad
mov
mov
in
test
enter
leave
xor
aaa
aam
xor
loopne
loopne
repnz
hlt
in
mov
xorb
aam
xlat
fdivrl
sarb
out
aad
repz
loop
fisttpll
ret
loop
jecxz
int
xor
cld
std
xlat
out
cmp
loop
sbb
fcmovb
fildl
roll
cmc
leave
fcmovnu
lock
icebp
rolb
lock
out
fucomip
orb
fst
xor
fucomi
call
fsubrp
jmp
hlt
sub
into
icebp
lret
lret
mov
pushl
call
jmp
jmp
int
mov
cmp
xchg
jnp
lahf
aas
leave
jle
jge
jl
int
cmc
lock
fnstsw
lret
stc
int
repz
roll
orb
in
aam
xor
ffreep
xor
ljmp
jecxz
enter
cld
test
decl
rcl
enter
xor
cmp
shr
roll
stc
fldl
mov
out
rcl
cli
call
cmp
ret
stc
jecxz
xchg
std
xlat
hlt
leave
std
int
and
jmp
aaa
hlt
leave
out
sub
shr
repnz
repz
fcos
loope
cld
loope
mov
jmp
loop
xchg
in
hlt
in
xor
call
shll
int
int
test
cmp
hlt
out
mov
mov
test
jecxz
aaa
cs
ss
fmulp
int
shr
jecxz
jmp
xchg
mov
xchg
fpatan
lock
lret
shr
loop
rcr
mov
jmp
out
xor
cmc
in
lock
lret
leave
icebp
xor
rcl
repz
fadd
jmp
ljmp
int
call
cmp
mov
jecxz
ljmp
fldpi
cli
repz
repz
in
mov
addb
aad
cmp
cld
les
cmp
std
cli
jecxz
test
mov
cmp
sub
icebp
fdivs
int3
jecxz
aaa
cmp
addb
jmp
rcl
fcompp
xor
jecxz
into
repnz
mul
and
fisttps
mov
fiadds
imul
cs
std
aad
cmp
out
loop
jmp
xchg
sti
loope
rorl
iret
hlt
hlt
shr
int
out
lret
out
sti
repnz
iret
add
enter
mov
jecxz
test
ret
xlat
jmp
in
fcmovnu
hlt
stc
fcomip
sbb
test
fcmovb
test
addb
in
imul
icebp
cmc
xlat
std
repz
loop
shl
mov
in
fucom
xchg
call
xchg
enter
enter
aas
jmp
shl
xor
fsub
rolb
loop
mov
out
mov
shl
out
cli
leave
xor
cld
rolb
out
cli
fldl
das
aad
out
aad
jmp
lret
shl
fdivp
hlt
sar
lret
fdivr
out
ljmp
out
into
icebp
icebp
ss
shr
aaa
xor
xlat
ret
flds
repz
shr
in
in
sti
lret
xor
cld
aam
icebp
fdiv
aad
xchg
int3
call
sub
stc
shr
int
lock
enter
shr
loop
rcl
incl
fucomi
fsubr
aad
xlat
hlt
xor
clc
rcr
stc
ds
leave
xchg
in
mov
mov
lock
out
divb
cmp
call
cld
sti
cli
neg
cld
mov
call
ffreep
out
repz
lret
cld
cmp
xlat
ljmp
shl
fiaddl
loopne
test
std
in
rol
xlat
xor
int
shl
iret
into
xor
rcr
sbb
iret
mov
cli
test
int3
std
iret
repz
iret
int
loopne
cmp
lock
in
test
les
jmp
repz
ror
cmp
in
fidivl
stc
cmc
icebp
aad
stc
add
addb
mov
test
in
repz
div
shl
adc
sti
out
jmp
out
in
ljmp
cmp
fcom
loopne
sbb
ds
xor
into
std
jmp
int
enter
jmp
test
loope
out
test
in
clc
icebp
xchg
lock
out
loop
call
clc
shl
icebp
not
sub
ffreep
repz
in
int3
out
in
icebp
cmp
xor
cmp
clc
in
out
adc
cmc
aad
cmp
mov
xchg
in
lock
out
shr
jmp
jmp
sar
ror
cmp
cld
aam
repz
xchg
testl
jecxz
jmp
in
das
out
leave
ds
rcl
loope
in
hlt
ljmp
test
out
xchg
add
sar
rcr
cmp
ds
icebp
fcmovu
in
adc
xchg
dec
xor
ror
out
lock
lret
fdivr
test
ljmp
nop
mov
shr
enter
clc
icebp
stc
jmp
aad
jmp
call
fdivr
jecxz,pt
cmc
call
out
int
loopne
cmp
add
jne
mov
xor
add
mov
mov
mov
jmp
rol
leave
rcr
fstp
lds
mov
dec
cmp
jle
jge
jl
hlt
xor
lret
in
out
cmp
hlt
in
sub
out
in
loope
in
mov
out
enter
int3
xor
enter
cld
int3
lret
cmp
xor
shl
std
vcvttpd2dq
leave
mov
ror
mov
stc
leave
fdiv
xor
ljmp
test
ds
mov
std
ret
out
popl
iret
sti
xor
shl
out
ljmp
rol
out
cld
movl
xor
xor
in
out
out
fcmove
sar
ljmp
aad
lret
stc
out
loope
fildl
ljmp
jmp
stc
aam
fucomi
fadd
repnz
fsin
call
in
loop
in
repnz
sti
fdiv
in
repnz
aas
shll
iret
loop
test
std
not
cld
cmc
int
in
in
call
fcomip
mul
loop
cmc
sar
out
fmul
xchg
mov
hlt
ret
clc
enter
rol
xlat
sarb
cld
idiv
xchg
leave
cmp
repz
xlat
jmp
aas
sarb
cmp
cmp
xlat
stc
aad
loope
out
icebp
xchg
call
cmp
rcr
neg
loope
div
shr
clc
hlt
rol
loope
in
cli
out
xchg
repz
xor
xlat
div
fld1
sar
icebp
int
notrack
cmp
vcmppd
in
mov
fsub
mov
aam
in
aad
cmp
xor
idivb
repz
and
call
xchg
fdivl
xlat
ret
in
in
faddl
not
inc
mov
jecxz
clc
ljmp
in
xor
cli
out
fdiv
dec
stc
cli
aas
fiadds
lret
in
test
loopne
leave
fnsave
cmp
fdivp
fcmovu
stc
and
frstpm(287
dec
out
icebp
vaddsubpd
stc
loop
rol
icebp
stc
cmp
faddp
xlat
cld
fcmovbe
out
int
in
enter
test
sub
in
lret
fcmovu
iret
jecxz
loopne
rcr
or
orb
ljmp
into
stc
int3
cmp
int3
jmp
lret
aad
repz
lret
sti
ror
shr
in
imul
leave
fincstp
repz
cli
cmc
repz
and
mov
rcr
int
xchg
int3
leave
leave
repz
std
repnz
fxch
fcmovbe
ret
sub
in
lret
in
repnz
xor
into
int3
ss
roll
mov
mov
enter
ljmp
into
cmp
xlat
fnstenv
test
in
stc
lret
mov
fiaddl
stc
cmp
out
clc
sar
sbb
test
decl
out
in
loopne
out
cmp
xor
cli
cmp
xlat
cli
fdivr
in
rolb
or
lret
call
enter
rcr
repnz
out
addb
fucom
out
sti
shl
loope
out
aam
std
out
cmp
cmp
lret
cli
rcr
fimull
out
stc
mov
icebp
xor
call
xor
lock
int3
call
idivb
sar
xchg
mov
out
xchg
fmul
call
call
aam
stc
cmp
mov
ret
fmuls
repnz
repz
clc
out
cmp
stc
aam
cli
loop
shl
test
enter
in
icebp
out
clc
int
leave
imul
sti
xlat
std
xchg
fdivr
ret
ret
loopne
hlt
repnz
jmp
call
cmp
ret
shl
test
add
jmp
int3
cmc
mov
cmc
aam
rcl
jmp
int
fsubr
sub
loope
ret
fucomp
jmp
mov
fsubr
in
mov
out
loopne
int3
aaa
int3
cmp
xor
std
out
cmpl
sti
enter
in
test
cld
mov
jmp
fcmovb
lret
cmp
cmp
ret
fiadds
fucom
xchg
repnz
test
rcr
xor
xor
repnz
fmul
aam
xchg
int3
mov
out
nop
fdivr
repnz
int3
cs
cld
sti
call
into
cmp
out
lock
call
in
cmp
lret
ret
rcr
shl
aam
aas
sarb
shl
fcmovu
mov
call
adc
cs
aam
int3
ss
sti
ds
clc
ret
cmp
xchg
sub
call
jmp
cmp
enter
xlat
add
les
xchg
repnz
mov
mov
push
pop
sub
add
jmp
ds
rcr
fst
xlat
xchg
icebp
mov
or
cmp
add
rcl
in
out
out
fldlg2
clc
clc
addb
in
fisttps
mov
neg
div
fdivl
hlt
clc
fbstp
cli
rcl
sar
orb
cld
rcl
repz
icebp
rol
neg
out
fst
cmc
ror
fadds
hlt
mov
addl
imul
into
ret
out
out
hlt
cmp
addl
ljmp
jecxz
cld
test
repz
std
out
xor
in
sti
std
fprem
out
fxch
mul
enter
les
shl
in
hlt
fsub
iret
sarb
cmp
lret
out
in
xlat
test
loopne
test
out
loopne
in
fmull
test
iret
cmp
ss
ljmp
sub
enter
jmp
jecxz
out
sti
xlat
stc
lret
shl
jecxz
incl
idiv
leave
mov
mov
repnz
jmp
sub
cmp
leave
ror
lret
clc
ffreep
not
sbb
filds
in
rcl
mov
repz
aas
stc
jmp
fdivrs
loopne
shl
rcl
rcl
cli
or
test
jmp
cmc
cmp
ret
shl
loop
fcmovu
shl
lret
ror
ret
repz
stc
int
stc
fneni(8087
clc
jmp
cmc
fsubr
out
or
loop
xlat
xor
shlb
sub
call
aam
sti
int3
out
loop
fld
fadd
xchg
test
lret
cmc
ljmp
aas
jecxz
in
test
jecxz
call
out
in
lret
jecxz
sarb
repz
fucomip
fmul
loope
rolb
cmc
jecxz
fdivrp
out
dec
not
out
in
leave
sti
into
aaa
jmp
fdivrs
rol
lds
mov
test
in
rol
cmp
enter
out
fistpll
std
repz
std
in
fsubp
or
shl
lret
in
cmp
xor
cmp
out
rcl
cmp
ret
xlat
fdivrp
cld
ljmp
rcl
aam
xor
cli
std
imul
out
repnz
hlt
cmp
fucom
out
fdivr
in
mov
test
in
out
jecxz
xor
test
aad
fildl
xchg
lret
out
nop
fldl
xor
idiv
cmp
imul
fcomi
out
jmp
loope
addb
lret
aam
out
hlt
call
cli
repnz
test
in
out
int
in
fmulp
mul
divb
hlt
int
aad
ror
xor
fnsetpm(287
cmp
lret
cld
into
repnz
out
xchg
lret
int
jmp
shr
cld
not
mov
test
xchg
leave
mov
mov
ljmp
fdecstp
lret
ffree
rcr
rolb
jmp
in
fdiv
loopne
jecxz
in
lret
fcomp
jmp
out
rcr
sarb
ret
incb
enter
shl
xlat
iret
in
icebp
aam
int
rcl
fcmovu
ds
rcl
cld
fmul
iret
decl
loop
sub
out
loopne
sarb
into
mov
ret
cld
filds
nop
xchg
test
shrb
aad
xor
not
into
fucomi
out
aad
std
cld
icebp
stc
test
repz
out
std
fdivrs
ss
xlat
repz
lds
cld
fiaddl
out
iret
hlt
stc
xlat
iret
fcom
cmp
fcomip
in
aam
cld
and
mov
sarb
in
xor
shl
rcl
cld
std
stc
fsincos
fmulp
mov
mov
xchg
shr
in
mov
out
in
repnz
in
loopne
fadd
ret
cli
fucomp
stc
mov
call
out
lds
lock
xor
lock
loope
iret
loopne
cmp
rol
lock
clc
loopne
mov
leave
in
out
sti
neg
repz
rcl
ss
int
test
xchg
roll
icebp
shl
cmp
fadds
fdivr
ret
jecxz
stc
cli
test
loop
into
mov
xor
jmp
xor
idivb
aas
ret
shl
jmp
test
iret
in
out
xchg
out
aaa
leave
sar
shl
fucomp
std
addb
roll
leave
aaa
xor
fxtract
lock
shl
clc
out
loope
in
lea
out
shlb
aaa
aad
cmp
lock
cmp
stc
shl
ret
hlt
mov
jmp
dec
clc
mov
xor
lea
cmp
jne
jmp
int
ds
int
lock
mov
jge
jl
out
mov
shl
in
enter
shr
aam
cmp
aam
in
loopne
enter
sbb
in
ret
rcl
lret
stc
cmc
in
jmp
ljmp
fimull
fsub
cld
xchg
lock
aad
int
cli
aaa
enter
fidivrl
int3
ffreep
cmp
fiadds
in
loope
jmp
aad
in
xor
cmp
lock
lret
xchg
call
test
rcl
ror
out
cmp
aam
xlat
clc
loopne
out
lret
repnz
fimull
mov
shl
out
sar
xor
aam
xor
shr
fiaddl
imul
call
out
ljmp
in
aaa
cmp
cld
std
rol
ret
clc
xlat
xchg
clc
leave
int
xor
ret
std
int
out
repz
add
sar
and
lret
jmp
call
cli
rolb
ss
cmp
repz
fsub
sar
xor
in
loop
cld
fstl
jecxz
aam
cmp
aaa
ljmp
xor
ret
mul
lret
mov
lret
aas
fmul
aam
int3
cmc
ljmp
mov
cli
fdivp
lret
stc
or
xchg
out
cmp
aad
icebp
lock
icebp
cmp
sar
cmp
lret
fsub
out
fdiv
incl
lret
cld
aaa
out
sti
jmp
loop
repnz
loop
dec
loopne
call
lret
ljmp
into
push
cmp
neg
clc
cli
cmp
out
ret
fimull
jmp
lret
jmp
call
addb
lock
out
imul
mov
out
in
loop
jmp
fdivs
call
int
faddl
test
cli
loope
cmp
fdivrp
loopne
in
leave
hlt
aas
mul
fcomp
lock
hlt
rcr
test
enter
in
rcr
mov
enter
call
lret
stc
sti
cmp
loop
imul
cmp
add
in
cmp
icebp
fdiv
fcmovbe
aas
rcr
ds
and
loop
lret
mov
not
test
shr
ror
lock
into
roll
loop
xlat
test
aad
in
mov
leave
cmp
enter
adc
loop
cld
call
ds
test
fsubrp
std
into
lret
xor
loop
aam
lock
fpatan
sar
in
xlat
iret
div
loop,pt
cmc
fcmove
mov
out
cli
and
loope
loop
clc
shll
ss
in
fidivs
cli
or
xchg
out
loope
ret
lock
out
shr
xlat
loop
push
aad
in
sub
ffreep
ret
cmpl
in
fildl
xorl
imul
xor
sti
out
out
ds
xlat
div
shl
out
std
cmp
test
fmull
loopne
in
enter
cmp
xlat
hlt
ret
or
stc
std
xchg
mov
clc
std
mov
hlt
ds
int
out
out
hlt
cli
repnz
repz
loopne
shl
mov
in
out
iret
add
into
hlt
ss
cmp
ljmp
cli
cmc
out
repnz
int3
testb
out
shl
clc
cli
fsubr
div
aaa
sarl
ret
cmc
leave
mov
mov
in
leave
sub
fidivl
cmp
aam
sbb
aas
shl
out
test
out
xchg
aad
in
ret
repz
std
fabs
ljmp
hlt
mov
jecxz
fildl
test
ret
loop
xor
in
repnz
cmp
ffree
loope
enter
int3
out
shr
call
lret
cmp
xor
add
shr
cmp
leave
stc
lret
jmp
rcl
xor
jmp
lret
in
cmp
fcompp
xlat
repz
fcmovne
int3
call
xor
leave
ljmp
sti
into
cmp
into
out
aas
cli
out
xlat
add
out
xchg
addl
lret
ror
int
cmp
repnz
in
mov
jmp
iret
lret
int
ljmp
int
into
out
clc
orl
loope
leave
jmp
in
out
ret
xor
lret
not
test
fcmovu
rcl
cmc
cmp
in
fsubp
sbb
in
test
aaa
sub
xor
iret
repnz
fsubrp
ret
test
mov
std
out
jmp
loop
fcos
cli
enter
cmp
stc
ret
in
ffreep
fsubr
lret
in
orb
jmp
int
enter
int
lds
inc
cmp
jle
jge
jl
enter
icebp
stc
loopne
fld
stc
repz
rolb
vpmulhuw
in
leave
in
mov
ljmp
loope
jmp
loop
repnz
loop
call
icebp
xchg
rcr
out
out
loop
cmp
in
rcl
fnstcw
cmp
ss
cli
repnz
fld1
test
ret
nop
out
lret
ret
repz
stc
rcr
std
repz
in
hlt
jecxz
xlat
in
call
add
hlt
rcr
aad
faddl
fcomi
loope
cli
dec
fildl
xchg
mov
jmp
xlat
call
fdiv
rcr
cmc
rcl
movl
lock
ret
xor
shr
aam
rcr
loope
addb
jmp
xchg
int3
hlt
out
xor
out
sub
cli
cmp
loopne
in
cmp
idiv
sti
repnz
dec
in
decl
loop
xor
in
ror
jmp
out
aas
aam
shl
cmp
neg
out
lret
iret
lret
lock
cmc
cmp
iret
xor
sar
aam
in
mul
jmp
in
addb
in
xor
jmp
enter
repnz
xlat
cmp
xlat
icebp
rorl
xor
test
in
sarl
out
xlat
in
lock
xchg
leave
xlat
imul
add
sti
repz
xlat
sarl
sub
rol
ss
aad
loope
cld
orb
xchg
icebp
mov
xchg
ljmp
out
leave
inc
ljmp
ds
sti
sbb
mov
and
lds
int
cld
ror
lock
cmp
testl
cld
jmp
shll
cs
out
hlt
int3
std
cmp
loopne
shr
in
out
enter
mov
out
test
aad
ret
jmp
cmp
aaa
ljmp
out
rcl
hlt
out
incl
out
rcl
les
loopne
out
hlt
enter
rol
repz
test
xchg
fucom
int3
in
xchg
repz
cli
fucomip
lret
xlat
in
loopne
xchg
ror
out
cmp
out
out
int3
repnz
ret
cmp
cmp
lret
ds
cli
jmp
sub
in
ficoml
repnz
out
in
out
xlat
lret
lret
cli
in
sar
ret
loope
mov
sti
xchg
cmp
xchg
leave
cmp
in
repz
fistpll
int
aas
icebp
fcmovnb
div
fadds
dec
fcmovnbe
and
fcmovu
int
hlt
aam
cmp
fptan
call
mov
icebp
int
fadd
ret
cmp
cmp
fdivp
fdivrl
shl
lock
and
fcomi
fdivr
fimull
rcl
hlt
in
div
lret
cmc
rcr
shr
adc
neg
cld
ret
clc
inc
icebp
lock
xor
stc
rcl
ror
lret
cld
testb
int3
ffree
out
out
xchg
xlat
int
jmp
std
cli
cs
rcl
stc
fcmovnb
cld
loope
out
lret
sub
xchg
mov
xchg
xchg
repz
aad
out
in
repz
shl
jmp
int3
in
int
ljmp
cli
icebp
clc
cmp
int
sti
cmp
loope
faddp
cli
clc
div
fucom
out
out
test
lret
xor
shr
into
iret
shr
repnz
cmp
aam
rcr
enter
clc
xchg
ficoms
shl
in
cmp
shl
int3
out
std
shl
in
mul
mov
rcr
fldl
into
repnz
xor
cld
fucomip
hlt
int
out
in
idiv
fcomip
faddl
in
dec
lret
loop
xor
out
cmp
loopne
cld
iret
rorb
loope
addb
sub
shlb
cmp
cmp
int
aam
repnz
sar
cli
fdivrp
lret
rorl
ljmp
xor
cld
testl
clc
ret
cli
in
xchg
and
icebp
ss
cmp
call
in
aas
fld
fidivrl
xchg
sti
sti
ret
stc
in
out
test
jmp
hlt
xor
out
out
jmp
ffreep
clc
loopne
rol
xor
loopne
stc
xchg
repz
xor
jmp
cmpb
lock
xchg
sarl
rcl
cli
clc
addl
lret
into
out
xor
sub
clc
faddl
incl
in
mov
sti
jecxz
lret
mov
in
sub
ds
out
aad
aad
rcr
jecxz
cmc
ret
in
lret
lock
jmp
ds
ror
aad
fistl
loop
sub
sbb
loopne
jl
add
in
shl
clc
aaa
cmc
xor
lret
add
fadds
out
loop
xchg
ret
cmc
enter
ror
xor
lret
into
cli
sti
cmp
cli
in
aad
std
test
in
leave
lock
jmp
cmp
lret
cmp
aam
hlt
fadd
loop
hlt
hlt
lret
mov
aad
in
in
ss
fst
out
icebp
into
fdivr
fiadds
jecxz
icebp
and
div
out
aam
clc
sarl
cmp
cmp
rcr
idivb
clc
xchg
orb
ror
out
out
int
cs
leave
shl
cld
repz
ds
cmc
rcl
sti
fmul
cld
mov
repnz
cmp
lock
into
ret
test
cld
mov
xchg
fst
fldl
cmp
out
stc
aam
aam
frstpm(287
rcl
cmc
jecxz
cmp
xchg
fdiv
jecxz
mov
das
ror
icebp
repnz
enter
repz
and
sbb
inc
mov
jmp
iret
in
hlt
adc
ret
fcmovnbe
cmc
ror
xor
out
out
into
in
lock
in
loop
ljmp
loopne
out
test
int
rcr
fdivp
hlt
loope
repnz
loopne
loopne
ror
jmp
repnz
divl
iret
cli
call
ds
repz
xchg
cmp
enter
nop
in
adcl
cli
fidivs
hlt
add
cmc
div
out
jmp
std
ljmp
xor
int3
hlt
std
cmp
aam
test
xchg
fcmove
fists
out
into
cmp
int3
jmp
ret
rorb
int
fsub
mov
enter
iret
shl
xor
jmp
aam
lock
sub
cmp
cmp
stc
ret
int
rcr
icebp
lret
clc
xor
out
divb
rcl
stc
in
fsub
sti
jecxz
fmulp
and
cs
stc
int3
ljmp
cmp
loopne
loop
rolb
cld
xchg
mov
xor
shr
in
lret
std
shll
loope
fiaddl
fdiv
sti
out
xchg
ffreep
shl
jmp
aaa
lret
ljmp
xlat
repnz
rorb
mov
mov
enter
int
aad
aaa
test
loope
jmp
jmp
cli
ljmp
xchg
das
leave
ret
call
cmp
jmp
aad
enter
ds
into
icebp
mov
shl
shll
stc
cmp
hlt
jmp
aam
stc
xlat
cli
movb
fcmovu
icebp
mov
cmc
ss
into
fabs
out
cmp
div
clc
jmp
and
fdivr
rorb
shr
fidivl
cmc
into
lock
ss
std
int3
fmulp
aam
call
jmp
mov
call
cli
sar
cmc
std
loope
lock
in
test
jmp
mov
lock
not
ljmp
call
test
cli
hlt
adcb
xchg
lret
in
out
stc
rcl
rcl
sub
cld
cld
fld
and
orl
shl
jecxz
ret
cmc
fcmovne
int
cmp
cmp
cli
in
rcr
xor
loope
sbb
jmp
enter
ret
shr
lret
stc
cmp
out
fadds
in
aad
xor
lret
cmp
out
out
int3
iret
xlat
cmp
sti
test
incl
les
aaa
out
leave
xor
aad
cld
cmp
out
fildl
xchg
jmp
call
icebp
int
fstpt
lret
clc
cmpb
and
loopne
in
addl
fcom
aad
out
div
jecxz
int3
cmp
rol
aad
fldln2
test
in
int
mul
hlt
in
loop
fidivrl
leave
aaa
addl
stc
stc
loope
call
fst
enter
sub
cmc
ffreep
fucomi
add
loopne
shl
sbb
fucomip
ds
neg
repz
loope
jmp
in
loopne
xlat
fadds
xchg
loopne
out
aad
repz
lock
stc
clc
cmp
sar
fcmovnbe
ret
jecxz
loop
ljmp
nop
rcl
iret
cmp
repz
iret
cmp
cli
repnz
cld
rcl
loop
fldl
or
inc
ret
jecxz
cmp
iret
cli
xlat
int
stc
loop
ds
cld
test
and
add
pop
leave
ret
push
mov
jmp
int3
ret
ds
fst
decl
mov
out
jl
add
cmp
jmp
rol
sub
cmp
into
ret
into
aam
rcl
mov
in
icebp
iret
out
sub
rcl
enter
jmp
cld
fdivp
fdivr
ffreep
faddp
cmp
idiv
int
std
in
rcr
jecxz
cmc
int3
shr
xor
leave
cmp
cmp
aam
add
fsub
fimuls
orb
fldln2
out
jmp
test
sti
clc
cmc
and
fldl
in
sti
repz
xchg
sti
std
sti
iret
clc
ss
fcomip
cmpb
cmp
jmp
lret
leave
cld
xchg
jecxz
in
rol
loop
cmp
not
aam
in
out
cmp
mov
std
addl
loope
lret
xor
cmp
cmp
icebp
adc
hlt
loopne
mov
ret
ffreep
enter
mov
xchg
test
aad
xlat
in
aam
iret
cmc
ret
cld
sar
in
aad
cmc
jmp
fimull
lret
xlat
iret
out
leave
lock
cmp
in
loop
mov
call
xor
lret
jmp
xor
fucomp
cmp
aad
stc
sti
xor
call
xchg
loop
out
in
repz
lret
int
cld
in
fnsave
shl
hlt
push
fninit
jmp
sti
mov
lret
rolb
rcl
icebp
fcmovnbe
int3
xor
ljmp
fdiv
std
cli
call
loope
div
cmc
jmp
sar
xlat
cmc
in
cli
fldl
mov
repz
repz
int
xor
rcr
cmp
iret
rcl
roll
int3
mov
repz
out
in
out
sti
sar
in
iret
cmp
cld
out
fneni(8087
aas
idiv
loop
fmulp
enter
mov
into
jmp
ret
aad
fdivp
aad
repz
hlt
loope
fadd
jecxz
jecxz
mov
xchg
fists
out
int3
repnz
int3
cld
aas
cmc
xlat
in
or
hlt
mov
out
cmc
hlt
loop
fyl2x
xlat
xlat
cli
aaa
fmul
into
out
fstpt
shl
rcr
mov
ljmp
xor
cs
jmp
cmp
cmp
loopne
ljmp
cld
mov
icebp
cmp
cmp
aad
int
hlt
vpsrad
shl
hlt
inc
sti
rolb
enter
fxch
out
jmp
ror
xlat
ret
ret
repnz
fisttps
int3
cld
aaa
shl
sti
fsubr
jmp
loopne
aad
mov
fcmovu
loope
out
mov
aad
call
cmp
fcmovnu
shl
fcmovbe
mov
sbb
leave
xchg
xchg
mov
jmp
lock
aaa
out
repnz
shr
xlat
lock
loope
fldln2
mov
jmp
idivl
int3
xor
iret
rcl
jmp
sti
shl
cmc
fcmovb
loop
fcomip
and
sbb
shr
shr
div
shl
xor
fdivs
out
xlat
int3
ret
lock
rol
lock
out
loopne
mov
mov
sub
loope
ss
neg
xor
jmp
aam
aam
out
xlat
fcmovb
lret
mov
out
xchg
lock
rcll
xor
cmp
xor
shr
int3
repnz
cmp
clc
xchg
mov
cld
aam
out
xor
cli
cmp
enter
fld
in
clc
xchg
neg
jmp
mov
int3
mov
sub
xor
fbstp
lret
lret
int3
hlt
in
xlat
sti
in
mov
fldpi
jmp
jecxz
hlt
xor
in
std
shlb
lock
sti
ds
movb
jecxz
nop
test
test
cmp
int
neg
xlat
std
shr
jmp
repz
jmp
xlat
enter
ret
sar
lret
div
fucomp
in
lret
ret
cmc
aad
stc
cmp
lret
incb
bnd
cmc
fcmovnu
ss
fnstsw
sub
loop
loopne
cli
fisttpll
jecxz
leave
call
fbstp
fadd
sti
test
repnz
jecxz
aad
cmp
call
roll
out
out
mov
mov
leave
shl
int3
in
aas
xor
rol
ret
std
loopne
out
fcmovbe
fstp
mov
in
enter
int
fmul
call
shlb
cld
clc
out
out
cld
test
out
and
lret
in
int
xor
cmc
xlat
repz
idivl
int3
lock
rcr
repz
shl
test
sub
xor
xor
and
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
mov
mov
mov
jmp
rcl
leave
leave
fst
fimull
mov
fldcw
adc
jle
pop
add
leave
mov
xchg
mov
xor
lret
into
aas
fyl2x
hlt
cmc
in
sar
fsin
aam
in
loope
in
ret
test
test
lret
repnz
cmp
hlt
cmp
fdivr
repz
loope
sbb
test
fnclex
icebp
rcll
lock
cmp
lret
fcmovu
ret
stc
in
repnz
stc
xchg
lea
ljmp
sti
shl
int3
iret
icebp
idivb
repnz
mov
call
in
cmp
aaa
jmp
fcomip
fdivrl
out
stc
fmul
out
loope
test
ret
xlat
jmp
hlt
lret
std
shl
loop
cmp
std
repz
in
or
iret
decl
fdivrs
repnz
ljmp
incl
test
enter
test
call
lret
out
sarl
ret
in
loopne
rcr
fsub
aam
jmp
repz
out
xor
vpaddusb
aad
into
cmp
xchg
add
xchg
xchg
xchg
rcr
aad
lret
out
rolb
xor
cli
in
fimuls
rcl
xor
repnz
rcr
xor
repnz
cmc
std
fcom
cmc
rol
mov
ljmp
stc
ror
cmp
shlb
sti
fcmovnb
ret
hlt
std
call
jecxz
xor
int
out
fcomp
xlat
aaa
fcmovbe
aam
sti
neg
jmp
stc
xlat
in
fcoml
in
leave
icebp
cmp
cli
in
cmp
loope
cli
shl
loop
out
xchg
lock
out
hlt
lret
sti
int3
out
lret
int3
ljmp
ror
hlt
leave
mov
sbb
test
in
sub
out
loopne
cmp
clc
lds
ret
aam
std
clc
leave
loope
rol
shl
cmp
fstp
lret
adc
aam
fdivp
ffree
fmulp
call
loope
inc
cmc
ret
cmp
jmp
fucomi
stc
out
mul
fninit
loopne
sarl
std
out
addb
xor
lock
jmp
jmp
stc
test
faddp
fucomip
jmp
decb
xor
xlat
fdivr
icebp
clc
loopne
aas
clc
adc
fidivrs
xchg
sti
cld
loop
in
call
aam
rcl
in
in
iret
fstp
idiv
fscale
test
clc
xlat
sarl
xor
ds
fucomi
in
xchg
mov
iret
shr
into
clc
shl
call
fcomp
faddp
lock
enter
jecxz
rcl
in
ret
stc
int
out
not
xor
cli
iret
aaa
cmp
rcr
sti
test
out
orb
into
call
cmc
into
xlat
lret
fsubr
aam
leave
fiadds
sti
iret
addb
iret
out
rcr
out
sar
cmp
loop
cmp
cmp
out
in
ror
xor
repnz
int3
int3
aam
into
lret
int
test
frndint
lea
fmulp
mov
out
mul
cmc
jmp
repz
loopne
ret
in
repnz
ffree
ds
stc
in
out
nop
repz
cmc
jmp
repnz
loopne
sbb
xchg
mov
flds
ficoms
loope
in
hlt
ret
xor
cmpl
ret
and
loope
jecxz
mov
enter
out
lret
sub
ljmp
xor
stc
xor
addb
adcl
fcmovnbe
int
jmp
sti
aad
lock
clc
int
shr
and
std
shlb
ror
ftst
hlt
das
shl
cli
in
adc
fadd
fiadds
orl
xor
fxch
in
xlat
repz
int3
shl
flds
lret
in
mov
out
out
xchg
xor
icebp
and
into
cmp
ret
sbb
out
leave
sar
jecxz
xor
aaa
cmp
rcl
into
aas
sar
testb
out
shl
repz
stc
into
sar
int
fdivp
into
aam
adc
out
cmp
fisttps
mov
cs
das
cli
cmp
enter
loop
not
icebp
jmp
cld
filds
roll
rcl
cmc
iret
cmp
cmp
std
aam
sar
shl
ret
mov
lea
jmp
int3
dec
dec
not
loopne
ds
jecxz
inc
or
test
inc
add
add
jmp
lret
ffree
fst
in
notl
dec
jns
int
out
jle
pop
add
lret
les
xchg
mov
in
cmc
hlt
ljmp
std
fcmovnbe
shr
cmp
icebp
mov
test
mov
ljmp
xor
repnz
fcomp
imul
sti
cmp
or
hlt
loopne
icebp
fdivr
fnstcw
iret
fdivrs
aad
test
fldl
in
int3
shl
stc
loope
xor
shl
call
cmp
clc
fcmovnbe
out
in
loop
out
clc
in
enter
in
lret
enter
fmul
repz
fprem1
call
loopne
fsubr
lret
out
ljmp
cld
lret
in
clc
addb
imul
fildl
loopne
int
out
fadd
lock
lock
loopne
roll
test
jecxz
fldl
xchg
xchg
cs
out
lock
cmp
xlat
in
fsubr
ret
loope
fsub
cmc
fsub
jmp
lret
repz
xlat
ljmp
idivl
fildl
inc
xchg
mov
cli
ffreep
in
call
test
out
int3
xor
lret
xor
fisttpl
xchg
addl
cmp
aad
cmp
in
aas
cld
ret
into
incb
mov
jmp
shl
aaa
fmul
cli
xor
in
sti
leave
not
div
addl
cmp
xchg
cli
test
in
jecxz
lock
out
cmp
lock
cmp
fsub
out
lds
jecxz
hlt
jmp
repnz
aad
iret
ss
cmp
in
cmp
cld
sti
into
rcr
mov
jmp
and
aam
ljmp
fstpt
cmp
iret
sbb
incl
decl
xor
xor
jecxz
out
iret
sti
ljmp
test
fcos
fcos
in
mov
out
cmp
xor
sti
cld
lret
aam
loopne
xchg
ljmp
lret
call
divl
cmp
loop
aas
lock
in
fmuls
jmp
aad
jmp
aad
in
cmp
fcom
addl
sti
xchg
xchg
ret
in
out
jmp
ror
div
lock
hlt
hlt
xchg
push
jmp
ljmp
shr
shl
repz
xor
clc
jecxz,pt
aam
cmp
ret
adc
xchg
xor
lret
ljmp
aad
addb
in
fildl
fnstenv
cli
in
cs
ds
sti
ror
int3
xchg
repnz
mov
ljmp
int3
div
lds
xor
shr
iret
lret
ljmp
cmp
stc
loop
faddl
into
fidivs
xlat
les
in
aam
fdivp
xor
xlat
xchg
fisttpll
fildl
icebp
jmp
jmp
fadds
mov
jecxz
mov
shl
lret
in
test
xor
aad
sti
fistpll
aam
test
cmp
clc
sti
mov
jmp
hlt
shr
ret
jmp
cmp
shl
std
xchg
fsubrp
incl
lret
enter
fcmovnb
clc
repz
cmpb
repnz
shl
loop
enter
std
mov
lret
xor
enter
shl
in
aas
sar
neg
ds
loope
ljmp
out
aam
out
clc
fmul
into
leave
ror
cli
out
fxch
addl
loopne
test
ret
cld
fstp
stc
addl
cli
cmc
mov
cmp
cld
test
ret
shr
fstp
aad
aam
std
shl
cld
lret
test
in
loope
in
stc
ljmp
ljmp
fcmovb
call
in
jmp
xacquire
xor
cmp
lret
out
xor
sarb
test
clc
hlt
fdiv
in
cmp
loop
into
xchg
xor
in
jmp
int3
call
rcr
sarb
aas
lock
test
add
into
stc
in
icebp
cld
loopne
aaa
repz
enter
cmp
repnz
int
loopne
sbb
ds
aad
hlt
loopne
sbb
mov
clc
in
das
in
repz
loopne
add
in
fcomp
jecxz
test
nop
rolb
out
cli
repnz
in
xlat
jecxz
jecxz
xlat
movl
mov
subl
jmp
rol
ror
aad
lahf
mov
dec
pop
dec
cmc
jle
pop
add
fsub
xlat
loope
mov
out
test
enter
fdivr
out
iret
int3
lock
roll
and
sti
mov
enter
call
jmp
test
cmp
in
in
mov
in
rcl
call
ljmp
jmp
xlat
xchg
in
lret
in
ret
nop
into
xchg
in
sub
in
aam
sarb
leave
cmp
repnz
loop
lret
into
leave
add
xor
cmp
aaa
ss
rolb
rol
mov
out
in
in
repz
in
call
aaa
ljmp
iret
out
loopne
mov
mov
iret
mov
jmp
cmp
cmp
call
dec
cmp
out
stc
out
clc
test
jmp
cmc
test
ljmp
rolb
enter
xchg
iret
repnz
clc
shll
call
cmp
cmp
out
ret
xlat
xlat
fimull
shrl
cs
shl
fiaddl
lock
loope
ljmp
xchg
int
in
iret
stc
jmp
ljmp
addl
loop
jmp
popl
in
jmp
fnstenv
hlt
out
xor
cmpl
cmc
fcmovnu
mov
and
lret
ss
std
out
shl
cmp
xacquire
loopne
sub
mov
stc
repnz
jmp
cmp
hlt
ljmp
cli
xchg
lret
loope
ljmp
xor
cmp
aad
fiadds
std
enter
xchg
shr
fcmovne
rorl
aad
ss
fdiv
int
in
shl
lret
std
test
jmp
icebp
shlb
sti
call
rol
xchg
ljmp
test
out
loop
out
stc
sti
aaa
xor
lret
sarl
cld
mov
out
fildl
shr
xchg
int3
icebp
in
ss
repz
loopne
ljmp
in
out
aam
fucomi
sti
jmp
in
call
into
ljmp
and
test
loope
in
cli
into
out
mov
cmp
sar
fidivl
ds
ds
jmp
call
out
xchg
xor
icebp
ss
cli
lret
ret
aas
into
sbb
aad
stc
cli
loopne
jecxz
lret
decl
sti
in
aam
fsubr
fcmovnbe
loop
icebp
xlat
out
mov
loope
out
loopne
mov
xor
fucomp
div
fcomp
cld
shr
ds
std
mov
cli
faddp
cld
xchg
xchg
fidivs
call
std
ds
lock
fadd
ret
aas
filds
int3
xchg
xor
enter
in
iret
cmp
fdivp
cld
loope
icebp
shl
cmc
int
in
in
nop
leave
fmulp
cmp
in
testb
repz
lock
fld1
test
xchg
fcmovnu
mov
fiaddl
cmp
lret
aad
shr
cmp
aam
loop
mov
in
fcmovu
imul
jmp
repnz
out
out
iret
sarl
cmp
call
adc
ret
rcr
jecxz
xchg
int
icebp
cmc
rcr
hlt
aad
fabs
neg
rol
shl
shr
fsubp
testb
loope
xor
std
int3
in
jmp
test
imul
loope
lret
fcmovne
call
test
fdivp
jmp
xor
cmp
call
std
ret
aam
out
in
jmp
and
out
out
shll
icebp
sub
xlat
repnz
loopne
aam
rcl
repnz
rolb
out
mov
ret
xor
shr
repnz
jmp
neg
rcr
ljmp
sub
aaa
sarl
cmp
imul
aas
xor
lret
cli
ds
aad
xlat
out
mov
in
out
hlt
lret
ret
cmp
iret
shr
sti
iret
fstpt
in
aad
aam
icebp
mov
out
xor
hlt
jmp
idiv
xor
fbstp
cli
in
test
int
mov
int
iret
rcl
ljmp
loop
sti
cli
neg
jmp
iret
shr
test
cmc
lret
enter
enter
cmp
fs
add
add
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
leave
lret
aad
int
cmpsl
mov
insb
and
add
shr
in
loopne
ret
fucomi
mov
enter
repnz
lret
in
hlt
cmp
div
aam
out
aad
icebp
fsubp
loope
mov
out
xchg
shrl
ror
ljmp
std
fnclex
clc
cli
hlt
flds
into
sti
xchg
hlt
enter
in
fcomip
jmp
jecxz
in
lock
fidivrs
jecxz
add
mov
xchg
lea
in
div
lret
ljmp
repz
fcompp
rolb
incl
iret
in
aaa
out
cli
aam
fsub
into
leave
fimuls
in
xchg
iret
cld
or
aad
jmp
xor
cmp
bnd
fdivr
jecxz
cld
jmp
sti
jecxz
out
out
test
test
lret
in
lock
iret
cmp
ror
into
ds
adc
std
loopne
hlt
ret
enter
in
shl
xor
ss
xor
rcl
addb
div
int3
in
lret
xchg
shl
iret
jmp
cmp
iret
cmp
clc
sti
jecxz
in
out
repz
xchg
aaa
les
cmp
sti
int
sbb
ds
stc
mov
leave
stc
cld
stc
enter
xor
xor
cmc
repnz
out
icebp
xor
cld
testb
test
xchg
std
iret
rorb
fcomi
das
shr
sti
dec
loopne
icebp
shl
out
ljmp
loop
mov
jmp
call
in
xor
incl
loop
repnz
icebp
dec
bnd
xor
idiv
and
hlt
ret
loopne
mov
in
fimuls
out
sub
cmp
into
repnz
lock
rcr
xchg
out
test
call
into
out
lock
xor
out
repz
loope
and
clc
loopne
fsub
lock
out
in
enter
sti
fcmove
enter
or
faddl
lret
out
rcr
xor
xor
in
iret
ss
int3
cmp
loop
shl
std
add
clc
mov
repz
jecxz
sti
shr
shl
xor
repz
lds
loopne
cld
in
fcmovu
xchg
xchg
jmp
loopne
out
sti
jmp
jmp
cmp
fcmovnb
and
in
xlat
fmul
fildl
out
xor
rcl
cmp
icebp
idivl
in
hlt
adc
repz
out
xchg
decb
in
sti
std
aad
cld
jmp
icebp
aam
xchg
in
mov
out
out
cmc
loop
icebp
jmp
ljmp
jecxz
call
enter
mov
out
shl
xor
fdivr
cmp
iret
icebp
cmp
loope
hlt
aad
out
lret
jmp
lock
rorl
rcl
jmp
shll
hlt
call
call
fildl
rcl
stc
int3
aam
stc
fcom
lret
fdivr
stc
jecxz
incl
lea
test
lock
cmp
aam
ds
fstp
loop
loopne
std
fdivr
out
mov
jecxz
enter
das
xor
out
sub
out
int
out
incl
clc
fmull
xor
shlb
fdivr
idiv
shr
hlt
into
incb
loopne
nop
out
in
fnsave
xlat
aaa
loopne
iret
in
fcmovb
aam
fadds
mov
repnz
jmp
leave
repz
adc
cmc
sti
out
fdiv
ljmp
clc
xchg
rcl
mov
fld
cmc
int3
in
out
fdivrp
int3
iret
int3
fcmovu
lock
mov
testl
in
shr
in
aaa
in
aaa
aaa
aam
inc
into
fcmove
aad
jmp
out
stc
rorl
jmp
fcmovu
aaa
cli
lret
cli
sbb
icebp
xlat
out
cld
lds
filds
out
call
neg
std
clc
sar
lds
cld
lret
hlt
xor
jecxz
in
aam
cmp
aam
fmulp
fiaddl
incb
mov
lret
sub
rcl
stc
aas
icebp
roll
test
loop
mov
ret
sub
in
fcmovnu
lret
lock
rol
loopne
shl
cld
in
shr
loope
mov
int3
lret
out
shlb
call
jmp
aas
ror
aas
aad
iret
rol
adcb
pop
push
dec
mov
jle
pop
add
in
clc
sbb
clc
shl
std
out
and
std
loop
icebp
out
cs
loop
cli
std
aas
hlt
neg
in
in
ret
aam
sti
out
ljmp
loopne
mov
xchg
aad
out
fsubrs
ror
out
aas
out
aam
jmp
cld
aas
int
call
out
xchg
call
loop
repnz
sar
aad
loopne
sar
jmp
test
jmp
stc
xor
aaa
out
xor
in
cmp
bnd
ds
imul
mov
rcl
aam
xor
xor
aaa
call
cli
cli
fucom
ret
std
lock
int
mov
out
xchg
or
iret
jecxz
not
iret
enter
adc
in
in
xlat
lock
stc
stc
popl
int
shl
jmp
int
ss
aam
cmpb
fdivp
ret
std
ds
cmp
cld
out
xor
xor
cmp
imul
jecxz
neg
xchg
xchg
test
mov
out
jmp
in
repnz
shl
ss
std
icebp
hlt
ret
ret
rcr
fistpll
idivb
jmp
loop
xchg
mov
cs
int
in
icebp
sbb
lock
stc
clc
jecxz
mov
out
into
xchg
ror
cmp
out
cld
call
repz
loopne
loopne
enter
fcomi
leave
leave
lock
hlt
in
aaa
out
sub
out
rcr
ds
test
rolb
in
in
icebp
cmc
nop
repz
rol
xor
cmp
cmp
xor
fcmovne
sub
cmc
in
out
ret
int
in
out
jmp
loope
aas
test
test
in
loopne
testb
aam
sub
xor
int3
call
clc
cmp
aam
ljmp
icebp
loop
sub
test
hlt
sarl
in
add
fisttpll
mov
fcomp
in
jmp
into
loope
neg
test
ret
call
xchg
cld
xchg
xor
out
out
in
cmp
faddp
loope
cmc
out
shl
aad
mov
iret
iret
loop
aad
aaa
shl
cmc
out
clc
xlat
out
in
shl
repz
aam
std
mov
loopne
ret
lret
loope
idivl
loopne
iret
idivl
in
jmp
int
div
ds
mov
leave
icebp
fucomp
fcomip
xor
loopne
xor
int
cmp
ret
out
in
enter
loop
int
xchg
cmc
mov
xor
lret
shl
rcl
ret
ret
out
clc
in
xor
sub
in
jmp
in
int3
cmc
rcl
fidivrs
addl
lret
jmp
mov
int
lret
loope
lret
rol
in
int3
out
fdivr
out
aas
in
cmp
mov
mov
mov
in
out
cs
jmp
lret
lret
fmul
aad
call
testl
sub
leave
ret
xor
stc
loopne
cmc
cmp
rol
out
in
jmp
std
lock
xor
iret
sti
aad
cmc
lret
fcmovnbe
into
fucomp
repnz
jecxz
aam
fucompp
ret
in
clc
out
in
xor
xor
clc
repz
lret
cmp
not
xchg
repnz
out
cli
in
int3
in
xchg
orb
ss
clc
adc
out
test
ljmp
mov
iret
xor
ss
xor
xor
iret
rcl
ret
out
orb
clc
in
jmp
enter
fsubr
cmp
cmp
test
aas
fisttpll
out
mov
ljmp
xor
stc
cmp
repz
aas
not
shl
leave
fdivr
clc
call
int3
enter
jmp
repnz
cmp
imul
repnz
xor
leave
addb
fdivp
sub
xlat
out
mul
hlt
and
and
leave
out
mov
out
mov
in
out
out
das
in
xor
cmp
ret
rolb
stc
enter
lea
not
into
in
cmc
iret
rcl
lret
sub
out
test
fldl
ret
xor
divb
xlat
out
repz
cmc
sbb
xchg
aam
icebp
jmp
loope
inc
aaa
stc
lock
aam
ror
xor
ret
addl
xchg
ljmp
sub
in
xlat
aaa
cli
out
lret
mov
add
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
sbb
mov
subl
mov
add
xor
mov
mov
sbb
add
mov
xorl
jmp
enter
fstp
fstpl
sub
lods
mov
mov
cmpb
add
hlt
int3
cmp
rol
call
in
mov
out
in
stc
into
ss
in
rcl
lret
loope
lock
call
lds
jmp
shl
call
idivb
cld
add
shl
ss
repnz
std
iret
mov
mov
iret
and
mul
enter
repz
std
repnz
std
not
sbb
out
std
out
mov
fsub
jecxz
call
xlat
cli
out
cmpb
incl
or
mov
mov
xchg
mov
xlat
cmp
icebp
roll
rorl
jecxz
xchg
xchg
loopne
out
xlat
leave
icebp
idiv
repnz
aad
mov
addb
loopne
out
xlat
out
les
jmp
lock
or
int3
hlt
add
in
stc
test
loopne
into
ljmp
std
cmp
icebp
loop
rol
ret
movl
xchg
out
mul
in
into
xor
fnsave
neg
xor
rcr
jecxz
hlt
std
leave
sti
lret
in
mov
sub
out
cmp
pushl
cmp
cmc
aas
icebp
jecxz
lock
loopne
in
lret
or
xchg
out
xchg
int
sub
cmp
repz
cmc
leave
loopne
aad
jecxz
cld
cli
fsqrt
mov
clc
cli
in
ficoml
repnz
out
clc
int
jmp
hlt
lock
loopne
in
hlt
loop
leave
sti
in
sub
in
ljmp
sarb
cld
sarb
not
and
in
fsubr
icebp
mov
out
shr
xor
in
div
cmp
fdivr
in
fcmovnu
aad
loope
ret
mov
or
enter
lret
idiv
leave
div
not
call
rcl
adc
xchg
out
jmp
leave
addb
in
xor
iret
call
repz
div
test
call
les
ror
ljmp
jmp
sar
out
idiv
cmp
jmp
in
xchg
enter
clc
hlt
sarb
lret
iret
cmpl
out
fmul
shr
xor
das
sti
stc
rcl
int
cld
lock
aam
std
jecxz
jmp
test
lock
cmp
jmp
test
test
loop
fcmovne
into
xchg
orb
ljmp
out
fldl
repz
cld
mov
in
imul
aad
ss
jmp
fcmovnu
cli
rol
stc
cld
xlat
mov
mul
lret
clc
int3
test
in
xchg
leave
out
icebp
out
shl
out
idivb
ss
cld
cli
repz
cli
sti
jmp
sub
cld
fdivl
std
in
aaa
idivl
test
decb
clc
into
mov
lret
out
in
shl
cmp
loope
repz
ror
fsub
clc
icebp
loope
repz
jecxz
jecxz
out
ret
in
cmp
idiv
in
mul
stc
in
cmc
lock
fsub
fsubp
std
loope
xor
out
aam
xlat
jmp
lret
cmp
cmp
shl
rcl
shl
leave
std
xchg
int3
in
aad
test
neg
clc
lock
loope
hlt
rol
rol
rorb
icebp
cli
lds
ror
iret
call
cld
cmp
icebp
loop
adc
mov
lds
lret
stc
stc
ror
fcmove
in
fmul
lock
decl
lret
filds
aad
lret
aam
adc
loop
test
xchg
out
mul
movb
in
cmp
in
cli
loopne
ret
repz
jecxz
ret
test
out
mov
jecxz
iret
int3
hlt
int
clc
ret
leave
cmp
sti
cmp
cmc
xor
shl
lret
lds
clc
into
fsts
lret
xor
fcmovnb
aam
ror
xor
iret
hlt
xlat
fcmovb
fdiv
repnz
fldl2e
jmp
in
iret
cs
fcom
in
into
stc
cmc
out
lock
into
xchg
fcom
ffree
mov
int
ljmp
out
ljmp
loop
jmp
out
add
orb
ror
ljmp
out
fadd
lock
rcr
lret
in
xchg
lock
cmp
les
cli
int3
jmp
cmp
rolb
ftst
fiadds
mov
iret
movl
and
movl
movl
movl
or
jmp
rcl
aad
aad
fstp
sub
cld
rcrb
pop
add
fadd
hlt
clc
cmp
loop
fcomip
stc
mov
call
test
loop
in
aaa
cli
in
cli
ljmp
jecxz
aad
fld
icebp
enter
xchg
iret
shrb
stc
loop
leave
hlt
imul
fcmovnb
cmp
neg
jmp
xlat
out
cli
loope
fucomip
out
mov
leave
cmp
ljmp
sbb
in
test
jmp
in
in
icebp
aas
lret
aam
out
cmp
out
rcl
xchg
sti
cmp
shr
hlt
xlat
xlat
fcmove
cmp
cmp
fcmovnb
int3
xor
leave
aam
test
jmp
call
lret
out
xor
xor
fcomip
cld
cli
in
shl
clc
in
in
cmp
ret
int3
xchg
orl
cmp
sar
out
ret
fcomi
cmc
loope
in
test
fsubr
mov
fdiv
int
xor
out
icebp
cld
out
call
icebp
test
lret
fmul
sub
mov
xor
hlt
repz
cmc
cmc
iret
shlb
fdivp
dec
xlat
in
std
cli
in
out
xchg
incb
in
ljmp
loope
test
clc
std
rcr
ds
lret
vpsraw
jmp
out
in
jecxz
in
aaa
icebp
in
div
cli
aaa
cld
out
aam
aam
mov
jmp
orl
cmp
divb
int
cmp
cmp
clc
sti
xchg
fnstsw
out
mov
or
into
xchg
rol
icebp
into
in
into
in
cld
aam
ret
fchs
xchg
faddp
repnz
ljmp
cmp
hlt
out
iret
fcmove
fnsave
cmp
call
leave
mov
lret
cmc
out
stc
aam
cmp
clc
xor
xchg
add
into
test
loope
lock
stc
enter
call
cmp
fnstcw
sti
in
loopne
int
out
jmp
out
ss
iret
xor
cmp
aas
in
fst
call
test
test
and
lret
repnz
xor
xor
icebp
sarl
ljmp
into
stc
fdivp
test
test
loop
mov
loopne
in
out
ss
sarl
fildl
cmc
out
ret
loope
into
icebp
jmp
sub
int3
stc
idivl
cli
les
testl
rcl
mov
test
into
int
in
adcb
cmp
aad
out
lret
loope
cmp
in
repnz
lret
int
cmc
call
in
icebp
xlat
fdivs
iret
shl
cmp
add
in
mov
enter
iret
iret
lret
iret
dec
cmp
cmp
xchg
leave
loope
lret
test
sti
std
xchg
xchg
aad
xor
in
aaa
in
adc
out
in
fcmovb
sti
mov
faddp
fnclex
in
int
icebp
sub
in
stc
int3
cmc
cmp
lock
and
aad
jmp
not
jecxz
or
in
lret
not
enter
sar
cmp
cmc
loopne
sar
fst
leave
fdivr
out
loopne
repz
into
clc
cmc
hlt
int3
fsubr
ss
rcr
fcmovne
out
clc
loope
sti
inc
aam
clc
mov
std
ljmp
ljmp
icebp
add
aas
fdivp
incb
fisttpll
iret
iret
in
xlat
lret
fprem1
cld
fcom
cmc
add
cmp
cmp
jecxz
fmul
icebp
out
xchg
lea
lret
fucomi
cld
neg
lock
lock
rcr
jmp
enter
fsubrp
repz
sub
in
xor
enter
ret
cld
fnsetpm(287
fcmovnb
loope
xor
out
xchg
jmp
pop
fsubr
out
cmp
cmp
ds
out
faddp
out
aam
rol
ljmp
lea
sti
fdivr
cli
int
leave
fsubp
xor
ret
and
test
iret
cli
call
das
shr
jmp
divl
stc
fcmovnb
repnz
sar
cmp
test
sub
fisttpll
out
shl
fcmovu
rcl
aaa
fcmovu
rol
hlt
iret
lock
cmp
loopne
xchg
int
mov
out
fcom
int
aaa
int
cmp
ds
shr
not
mov
out
imul
sub
lock
xor
lock
call
test
out
mov
fmul
jmp
fmul
cli
mov
out
out
cmp
fsubrp
fstpt
loope
lock
leave
mov
mov
aaa
movl
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
mov
xor
xor
sub
xor
movl
movl
xor
jmp
into
aad
lret
rcr
mov
sub
and
jl
out
lret
std
jmp
aad
test
rcr
clc
fucomp
fcom
sub
shl
shr
in
lret
cli
fildl
std
testl
lret
cs
out
jmp
lret
shr
repnz
ds
cli
aam
test
in
inc
enter
stc
xor
in
ljmp
clc
hlt
enter
imul
out
fcmovnu
xchg
loop
leave
repz
cmc
cmp
cs
neg
fcmovu
cmp
cld
cmc
ret
jecxz
loope
ljmp
in
xchg
test
fmul
iret
leave
div
fdivr
iret
ffreep
clc
mov
movb
ds
jmp
cmp
lock
ffree
out
fdivr
orb
jecxz
jmp
out
repnz
jmp
rcl
fcmovb
jmp
out
xchg
in
in
mov
rcr
shl
in
icebp
in
shlb
cmp
fsin
jecxz
clc
lret
fcomi
in
in
lock
aad
xor
fidivl
std
repz
clc
out
cld
cmp
jmp
jecxz
out
popl
into
in
ljmp
fucomip
sarl
mov
clc
lret
mov
fucomip
xchg
jmp
fdiv
fnstenv
in
test
fildl
fcmovne
int
in
in
adc
ss
idivb
lock
cli
clc
jmp
loopne
cmp
cmp
cmp
incl
fninit
int
call
lock
xor
aad
cmp
xor
fnstsw
aam
std
and
out
out
repz
xor
stc
in
fmul
cld
iret
cmp
xlat
aam
jmp
iret
out
into
loope
xchg
loope
loop
cli
int3
cld
aam
enter
std
fcomp
fst
repnz
std
in
in
out
mov
enter
clc
lock
out
xlat
loope
test
imul
cmp
int3
mov
repz
lret
lret
fucomi
in
std
clc
ror
repz
fdecstp
rol
lock
shl
shl
in
int
int
xchg
iret
shl
test
lret
into
lock
test
rol
mov
jecxz
into
jmp
xchg
mov
xor
cmp
fmul
cmc
ss
lret
loop
loop
div
test
ljmp
in
iret
jecxz
imul
cld
ror
imul
cld
into
repnz
and
shl
ret
div
icebp
out
enter
icebp
lret
xor
cmc
into
hlt
lret
icebp
repnz
sti
aad
loopne
ret
cli
loop
ljmp
out
xor
sub
test
ret
cmc
ret
shl
xchg
enter
fisttps
xchg
int
ss
fcmove
xor
push
out
repnz
jecxz
ljmp
in
hlt
cmc
mov
cld
sbb
aad
std
fiadds
and
repnz
icebp
lret
lock
fidivrs
idivl
int3
cmc
fadds
loopne
fsubr
nop
jmp
ljmp
ret
pushl
repnz
addb
sti
jmp
loop
int
cld
shr
in
out
aam
cmc
repnz
sbb
neg
jmp
mov
out
in
repnz
in
call
std
rcl
int
fdivp
aad
aad
rcr
fsubrp
jmp
fiadds
repnz
stc
cld
lret
hlt
fdivrs
cmp
cli
shr
fsubr
mov
loop
jmp
icebp
imul
xlat
xlat
repz
div
ret
aam
sti
into
fcmove
xor
in
ret
in
cli
fnstcw
fcmovnbe
xlat
loopne
xlat
call
imul
sub
leave
cld
call
out
std
in
jmp
ret
adc
cli
aam
jmp
decb
hlt
into
aad
jmp
sbb
ds
lret
cmc
out
icebp
fildl
fld
sub
stc
icebp
cmp
jecxz
std
repnz
in
rorb
jecxz
in
dec
ret
leave
fprem1
call
fucomip
ret
fiaddl
add
xchg
lock
rcl
das
xor
cmp
sar
ss
ljmp
out
mov
mov
and
xlat
in
loop
int3
imul
ds
repnz
ret
add
test
lret
out
lret
jmp
shl
ret
ss
out
into
lret
rolb
cli
clc
out
mov
add
jmp
aad
fstl
outsl
pop
pop
jl
jle
pop
add
ret
in
in
into
shr
ljmp
ror
mov
out
leave
test
int3
out
loope
out
out
ss
in
enter
test
ret
repnz
icebp
mov
roll
xor
fyl2xp1
lret
sti
loope
fnstcw
rcr
rolb
call
hlt
fdivl
fdivp
aaa
cmp
repnz
lret
test
shl
shl
fcmovb
sti
out
in
iret
mov
xor
out
leave
out
das
repz
in
cmp
xchg
fdivr
sbb
cld
lret
int3
xchg
in
into
mov
lret
int3
out
neg
roll
testl
xor
shlb
cli
out
out
in
test
fld
stc
filds
xor
out
out
rcl
in
lret
in
jecxz
lret
faddp
roll
testb
fadd
xor
jmp
sti
stc
xlat
stc
xor
ret
fiadds
dec
xlat
stc
in
int3
fcmovu
loop
xor
jmp
lret
loopne
cld
cmp
loope
mov
lret
mov
jmp
ret
cli
xor
leave
imul
int
icebp
mul
fdiv
cmp
sti
loopne
mov
mov
mov
xchg
in
leave
divl
cs
loopne
clc
shr
test
inc
testl
jmp
xor
rol
push
repz
repnz
aad
stc
icebp
incb
cld
test
xor
in
sarb
iret
clc
ss
in
stc
iret
flds
in
clc
enter
mov
fdivs
not
cmp
sarl
repz
filds
loop
cld
test
enter
mov
hlt
shll
cli
clc
in
cmp
neg
stc
cmp
shl
idiv
mul
fcmovu
lret
shl
shll
lret
clc
shll
clc
fdivrs
cmc
enter
aad
out
cmc
fucom
out
out
mov
aam
ret
xor
std
jmp
xlat
loope
out
cli
rol
fcompp
out
jmp
inc
mov
shr
mov
jmp
ljmp
cld
loop
cld
sti
lret
test
loop
in
enter
in
repnz
fadds
xchg
fmul
lret
lret
out
hlt
clc
fldt
cmp
out
rolb
hlt
filds
in
iret
cmp
mov
cmc
sar
stc
testb
icebp
sar
cmp
loop
in
mov
loope
ror
lret
into
divl
int3
aad
enter
loopne
f2xm1
movl
mov
out
fincstp
fxch
ror
enter
add
fiadds
ret
inc
jmp
sbb
iret
shlb
aaa
ret
idivb
std
icebp
fcom
fstpt
decb
int
xchg
mov
xor
fdivrs
cmc
int
ret
ret
in
sbb
dec
xrelease
aaa
ret
fdivrp
aas
aas
rcr
out
loope
hlt
aam
stc
xchg
loop
test
orb
aam
cmp
fbstp
in
jecxz
in
xlat
lock
neg
loope
jmp
ret
nop
xorl
rcl
in
les
lret
loope
ret
cmp
ret
repnz
repz
loopne
lret
in
les
jmp
rcl
sti
sar
cli
into
sbb
mov
out
xchg
inc
stc
mov
int3
cmp
lret
jmp
in
cmc
shl
repnz
test
mov
in
mov
iret
mov
ss
in
cmp
cmp
cli
fprem
in
fstpt
rol
hlt
orb
loope
cmc
lret
xor
lock
cmp
fnstcw
sarl
cmc
call
and
xchg
loope
into
les
sti
cmp
ror
ss
lret
cmc
into
out
testl
mov
fsubr
repnz
enter
stc
out
clc
aad
hlt
rcl
addb
out
rol
repz
ret
aaa
int3
lret
faddp
sar
sarl
test
out
ret
loop
mov
shl
xor
test
xor
cmp
shr
test
in
jmp
icebp
test
out
shl
repz
lret
out
cli
cli
clc
not
clc
aas
flds
test
loopne
test
jmp
iret
call
imul
sbb
mov
lret
lret
lds
rolb
add
add
add
or
cmp
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xorl
jmp
iret
ror
aas
aad
iret
shlb
lods
jmp
fsubp
std
pop
xchg
jle
pop
add
fucomip
jecxz
xor
repz
in
cmp
out
rol
repnz
addl
test
ljmp
enter
jecxz
jecxz
xlat
xlat
xchg
ljmp
out
cld
enter
cmp
cmp
icebp
cmp
aas
ds
cmc
clc
loopne
imul
lret
test
jmp
into
aad
out
out
sti
cmp
rcr
loope
repnz
cld
inc
out
jecxz
loope
xchg
mul
jmp
xor
cmp
cmp
fmulp
inc
adc
aad
leave
fucomip
call
mov
in
leave
cmp
fcmovbe
fstpt
out
xor
shr
out
ds
fadds
call
test
loop
jmp
rcl
xor
aam
shr
clc
leave
aam
jmp
incl
xchg
out
aad
int
vcvttpd2dq
int
idivb
fistpll
xlat
lock
loope
aam
orb
repnz
jmp
lret
stc
aad
loop
incb
in
xlat
faddl
mov
repnz
int3
stc
fsubr
out
xchg
mov
out
and
out
ljmp
clc
xlat
lock
test
int
test
loopne
shl
aaa
xor
cmp
std
in
stc
iret
cmp
int3
sti
icebp
fdivrp
ret
orl
jmp
repnz
sub
aad
iret
stc
test
int3
mul
addl
ret
test
xor
shl
in
cmp
fcmovnbe
clc
enter
testb
fnstsw
fiaddl
fdiv
ror
repz
out
in
aam
std
std
in
sbb
xlat
test
repnz
repz
in
lock
cmp
fsubr
call
cmc
stc
loope
loopne
lret
in
loopne
in
test
jecxz
jecxz
xor
cld
int3
sar
cli
or
idiv
not
loopne
lret
out
loopne
jecxz
ljmp
ss
cmp
out
cmp
fdiv
loope
in
fdivr
jmp
int
xchg
xchg
into
jmp
loopne
aaa
ljmp
out
icebp
call
jmp
add
and
mov
xor
rol
fld
fdivr
in
cmp
int
aas
loope
sbb
cli
test
mov
xor
xor
int3
leave
hlt
cmp
enter
fidivrl
loope,pt
addb
clc
lret
fsubr
icebp
bnd
ret
cmp
repz
cmp
hlt
repz
rol
sar
test
rorl
jmp
fxtract
leave
cmp
fdiv
aam
fcmovnb
loop
xchg
sti
jmp
sar
jecxz
in
xlat
call
out
xlat
cmp
out
repnz
in
mov
lret
sti
cmc
call
cmp
cmp
xor
stc
rcl
not
sar
cmc
ret
neg
out
out
repnz
shl
out
icebp
lret
hlt
shl
cli
xlat
shr
int3
add
loop
fidivrs
and
filds
mov
icebp
add
cmp
rcl
icebp
fxch
iret
lock
cmc
ror
lock
fdiv
movb
leave
mov
aam
cli
aaa
fst
lock
cmp
repnz
loopne
mov
mov
in
out
loope
ror
loope
stc
repnz
out
aam
std
int3
sar
xchg
jecxz
mov
mov
lock
xor
ss
xor
fcmovb
shr
xlat
cmc
iret
repz
sti
fsubr
loope
mov
jmp
cmp
xor
cli
loopne
cmp
idiv
lret
int3
jmp
ror
jecxz
not
jmp
clc
int3
in
cmp
iret
repz
mov
hlt
jmp
fldl
cs
aad
jmp
aaa
cli
cmp
repz
cmc
mul
repnz
mov
loopne
lea
fsubr
in
loopne
out
shl
fdivl
cmp
into
xor
iret
and
repnz
cli
fsubrp
mov
into
into
das
icebp
ss
enter
loopne
int3
int3
shl
cli
fisttpll
std
ljmp
xor
in
xlat
ror
fmul
cmc
ss
bnd
sub
bnd
cs
xor
repnz
fldlg2
fprem
sarl
aaa
iret
aam
loop
rcl
int3
into
out
cld
loopne
aam
das
aaa
aad
aas
cli
repnz
into
iret
ret
icebp
xlat
fsubr
xlat
out
not
xchg
fisttps
in
enter
std
aad
test
fxtract
in
icebp
lock
or
out
jge
xorl
add
movl
cmp
je
push
movl
jmp
and
jmp
enter
fcmovnbe
int
pushw
jle
push
aam
pop
mov
jle
pop
add
jmp
iret
ror
aad
xor
fstpt
repz
addb
jmp
mov
fiaddl
mov
rol
not
dec
fmul
fpatan
in
enter
dec
fsubrp
mov
aad
aaa
fnstenv
enter
repz
into
cmp
aad
cld
enter
out
ljmp
lock
jmp
int3
out
rcr
testb
test
lret
xchg
lret
hlt
shll
hlt
cld
stc
ds
jmp
sbb
out
test
loopne
in
mov
cs
in
clc
ljmp
jecxz
loop
fcmovbe
aad
addb
mov
repnz
ss
aad
call
rolb
out
sub
hlt
aam
les
out
repz
xor
out
int3
fadds
enter
fildl
loope
int
call
fsub
lock
clc
test
cli
ret
ljmp
mov
not
shl
stc
repnz
ret
enter
clc
fldl2e
icebp
xchg
loopne
in
lock
int3
xlat
cmp
shr
int
cmp
repz
aad
ffreep
lret
in
in
out
mov
sti
idiv
cmp
leave
cmp
bnd
fdivr
aas
dec
jmp
int3
jmp
test
fxch
lock
aad
aad
fcmovbe
shl
ret
fdivr
leave
out
fisttps
and
sub
cli
enter
fmul
fyl2xp1
test
cld
xchg
in
std
flds
out
xchg
repz
xor
std
ror
lret
iret
clc
cmp
clc
cmc
icebp
add
xchg
sar
in
jecxz
aam
xor
sti
not
dec
aaa
repz
int
lock
sbb
ret
fld
fcomp
jmp
ror
in
ret
lret
mov
ljmp
fcomip
mov
cld
call
in
mov
repz
lret
int3
fadd
in
cmp
in
hlt
in
std
xor
fdivp
xlat
ljmp
xchg
out
ljmp
sub
test
call
shl
clc
test
cld
into
aas
shl
aaa
call
shlb
rcr
into
sarl
sti
fcmove
rorl
call
out
aad
fucomp
loope
shl
ret
xlat
xchg
fadd
cli
loopne
mov
lock
adc
fmul
ss
std
in
shl
cmp
sti
test
enter
shr
call
lret
cmc
in
out
aas
ss
cmp
in
adc
call
in
dec
lret
repnz
jmp
xor
das
ljmp
aad
xor
jmp
in
int3
and
fnstenv
in
clc
lret
xor
ret
cmp
icebp
aam
xlat
mov
cli
int3
loopne
out
into
rcr
repnz
test
enter
repz
cli
loop
test
cli
cmp
loop
enter
int3
iret
fst
cmp
hlt
cmp
faddl
out
jmp
sub
aaa
icebp
aaa
leave
stc
lret
cmp
shl
addl
incb
xchg
shr
in
aaa
not
xor
sarl
iret
mov
in
in
xchg
rorl
aam
enter
iret
fdivrp
cmp
cmpb
std
std
std
cli
out
loopne
into
mov
in
xor
xlat
cmp
cmc
ret
loopne
jmp
mov
jecxz
into
roll
in
aaa
fsubr
out
lock
xchg
rcl
cmp
incl
rcl
leave
shl
out
cld
frndint
out
xor
out
icebp
test
xchg
test
in
faddl
add
aad
div
aam
ss
cmpl
out
adc
sbb
int
leave
stc
out
xor
cmp
ljmp
icebp
call
aam
jmp
mov
in
icebp
out
ret
rcr
cmp
sti
icebp
stc
cmp
vpsubd
cld
hlt
mov
out
repz
in
mov
loop
aad
in
in
enter
in
hlt
lret
cmc
aad
ffreep
leave
out
mov
std
xchg
jmp
clc
jecxz
clc
xor
add
stc
in
testb
cli
std
call
das
iret
in
cld
xlat
cld
xlat
xor
fucom
enter
mov
and
mov
xorl
jmp
leave
aam
xlat
in
fsubrl
cs
mov
jl
mov
sti
in
loopne
xchg
into
hlt
out
hlt
ss
sti
imul
int3
xlat
rcl
jmp
icebp
clc
in
jmp
loopne
nop
fiaddl
xor
cmp
iret
into
in
jmp
rolb
out
std
loope
stc
test
out
out
divb
repz
in
lock
fmul
int
out
adc
ffreep
cmp
test
in
hlt
in
fsub
cli
xor
fidivrs
cmp
fidivrl
incl
in
addl
test
xor
xor
cmp
in
out
int
into
lock
icebp
in
xchg
mov
icebp
leave
and
loope
out
aam
aad
lock
hlt
aaa
test
sar
shl
cld
test
ret
int
faddl
xor
ljmp
int
int
into
jmp
cmp
cld
idiv
sti
enter
jmp
xor
cmp
xor
aad
testl
or
xchg
fiaddl
xor
in
fstpt
cmp
mov
lock
test
in
jmp
shl
xor
aaa
shl
xor
out
fcmovu
ljmp
in
xchg
loopne
icebp
lret
xor
cli
cmp
idivb
lock
fdivrs
cmpl
cmp
xor
icebp
call
out
cli
ss
shl
fiaddl
loope
mov
lret
jmp
leave
cld
icebp
repz
ret
jmp
cmp
hlt
icebp
aas
cmp
mul
clc
xor
loopne
leave
decl
jmp
in
aaa
lret
icebp
xlat
leave
ffreep
lret
in
lock
rcl
shr
shl
pushl
fst
rcl
lock
loope
repz
clc
lret
nop
into
out
jmp
cs
lret
sarb
cmp
shr
aas
xlat
ret
not
out
test
int3
out
filds
shlb
repnz
lock
in
lret
into
xlat
rcr
icebp
aas
out
fcomp
cmc
fimuls
fucomi
nop
mov
test
std
stc
ljmp
icebp
cmc
aad
fucom
ljmp
cs
in
iret
loop
into
not
in
clc
cmc
faddl
mov
out
cli
adcb
test
aaa
xor
out
lock
hlt
shr
lds
loope
out
iret
ds
cs
hlt
repz
aam
cmp
aam
div
div
hlt
xchg
out
mul
mov
lock
leave
ss
out
aad
incl
lock
repnz
sub
stc
out
nop
orl
xor
shlb
ss
cmp
cmp
sbb
cmc
jmp
sub
lock
xor
ret
icebp
cmc
xabort
cld
int3
xor
cmc
neg
hlt
aad
stc
out
movl
xor
cmp
loopne
xlat
iret
hlt
repnz
xlat
jmp
loope
cld
xchg
cmc
out
test
fnstsw
cmp
xor
lret
cld
clc
cld
stc
mov
fsubrp
test
mov
xor
repz
sti
xor
cs
test
fcmovb
ret
ffreep
dec
mov
repnz
hlt
call
fidivrs
lock
std
cmp
out
cli
repnz
fdiv
mov
shr
out
enter
in
aad
aam
fcompp
testb
call
std
rorb
aad
cli
xor
std
aas
fucomip
stc
jecxz
cmp
xchg
ret
or
icebp
cmp
lret
into
into
ss
fnstcw
lret
cmc
rol
in
inc
stc
mul
mov
fadds
cmc
loop
xor
aas
sarl
ss
leave
in
jmp
roll
repnz
fldpi
icebp
std
stc
int3
hlt
int3
fdiv
fdivr
std
mov
mov
nop
rorl
in
rcr
sub
aaa
ljmp
test
ljmp
mov
icebp
out
shr
int
cmp
cld
fcomip
rol
in
aam
and
cli
loop
vpsllw
test
out
cmp
xor
cmp
or
fnstsw
cmc
cmp
jmp
mov
in
iret
icebp
in
out
cmp
clc
push
in
rolb
aad
mov
std
test
mov
neg
fucomp
in
jmp
ss
aam
aas
xlat
lock
test
sbb
xchg
int
leave
int3
out
cmc
das
std
in
in
aaa
int3
cli
hlt
shl
icebp
cmc
rorl
sahf
fs
add
add
add
aam
rcl
aam
insb
bound
mov
jle
pop
add
sti
mov
xchg
fmull
out
ror
xor
in
cmp
fiaddl
cld
mov
nop
jmp
out
ret
sarb
lret
std
ds
loopne
div
sbb
test
decl
out
xor
cmp
cmp
shl
ret
repnz
dec
mov
leave
fisttps
xor
ss
lock
lret
ss
into
sti
rcl
xchg
jmp
int
int
mov
ljmp
hlt
xlat
ss
call
into
shl
test
loope
jmp
rorl
in
shl
in
iret
rcr
aad
ror
lock
mov
and
jmp
leave
lock
rcll
jecxz
repnz
leave
shl
in
fcomp
jecxz
loopne
loop
in
int
sti
jmp
mov
ror
cmp
int3
sti
aas
out
iret
stc
ljmp
ret
sti
leave
loope
xchg
mov
xlat
loop
xor
ss
ds
fdivr
loopne
leave
mov
iret
in
fiaddl
ret
not
call
icebp
cmc
idiv
sar
cmc
xchg
cmp
fcmovne
mov
out
xlat
aad
out
mul
out
out
lock
repz
fmuls
icebp
std
mov
out
loope
ret
repz
clc
shl
cli
int3
fucom
fadds
fucomi
lret
jecxz
mov
mov
xchg
jmp
in
cld
lock
sub
fucomip
jmp
ror
ljmp
aam
cli
rolb
mov
test
mov
loope
repz
shlb
ret
in
sti
in
into
cmp
fcomip
repz
aam
fcmovnb
loope
mov
xchg
lock
out
in
xor
cmc
int
clc
loopne
lret
movl
lea
aad
ror
loopne
jecxz
in
aas
rol
fimuls
out
in
popl
cmc
ss
out
xor
aam
fnclex
int3
aam
rolb
mov
ljmp
leave
repnz
ljmp
lock
ds
ljmp
repz
int3
jmp
repz
cld
cli
lret
sar
repz
loopne
lret
xchg
int3
loope
jmp
lock
xor
cmp
ljmp
neg
repnz
aas
stc
sub
lret
out
icebp
lret
aam
fnstsw
sti
ds
lock
sarl
fdivr
sarl
xabort
in
in
shr
jmp
cmp
repnz
repnz
iret
sar
fdivr
std
cld
fldl
mov
out
ljmp
repz
fucomi
fdivr
loope
repz
cmp
sar
hlt
loop
fsub
cmp
xchg
fcoml
fdivr
aaa
call
into
xlat
std
stc
out
sti
ffree
test
fsubr
cmp
fstl
aad
xor
les
shl
repz
ret
jecxz
decb
lret
mov
xchg
ljmp
ljmp
cmpl
orb
sub
out
ret
lock
cmp
in
cmp
in
hlt
in
sar
loope
jecxz
in
fsubrp
int3
xor
sti
test
imul
fdiv
lret
ljmp
bnd
aam
addb
or
loopne
aad
aad
repz
cmp
fdivr
jecxz
cld
test
out
cli
loopne
into
repnz
out
lock
out
in
shr
fldl2e
cmp
fdivr
rcl
fdivrs
lret
repz
mov
call
jmp
xlat
sti
test
sar
out
in
ret
loop
in
mov
out
aaa
in
loope
loop
cmp
jmp
repz
fxch
fmulp
hlt
ljmp
test
fstp
rcl
stc
clc
out
out
test
fidivrl
repnz
ret
lret
out
xor
imul
sti
cs
std
sar
in
xchg
fdivr
cmp
mov
lret
int
lret
rcr
sar
cmp
and
mov
jmp
loopne
test
fucomp
lret
mov
div
shl
lock
into
sar
fndisi(8087
std
cld
clc
fadds
call
sbb
cmp
out
out
iret
test
test
fyl2xp1
dec
jecxz
xchg
sti
repz
xchg
lret
int
out
stc
call
in
hlt
shlb
rolb
rol
add
cmc
imul
add
rol
ret
ret
ret
fwait
cmp
iret
stos
jle
pop
add
fsub
ffree
enter
xchg
jecxz
std
ror
aam
aaa
aad
icebp
sar
fdivrl
jecxz
fmuls
int3
mov
clc
mov
int3
or
das
call
aam
call
out
in
mov
in
jmp
fsubr
cld
into
test
shr
stc
into
out
leave
stc
in
cmp
icebp
repz
in
fscale
jecxz
stc
test
leave
fucomip
out
lock
aad
xor
cs
cli
cmp
repnz
loop
jmp
jmp
and
fmul
shl
jecxz
cmp
sarb
roll
loopne
mov
call
repz
int3
rcr
stc
in
fdivr
cmc
add
icebp
cmp
in
ret
ret
rorl
xchg
lret
fxch
sti
call
cmp
loopne
call
stc
call
fnsetpm(287
rcll
rol
shr
leave
out
rcl
into
in
hlt
lret
cli
cld
std
cli
test
int3
out
repnz
fistpll
loope
cmp
clc
fdivrs
sti
ljmp
loop
out
call
cmp
loope
in
test
sub
sti
add
test
xchg
mov
call
repz
aad
and
rcr
lret
aad
decb
xchg
push
cmc
aaa
ret
int
repz
sarl
or
repnz
mov
out
xchg
ljmp
repz
int
ljmp
cli
repz
dec
sti
jmp
addl
out
out
f2xm1
cld
stc
aam
fxtract
iret
xor
cmp
push
jmp
xlat
call
shr
jecxz
into
loop
aad
cmp
aad
xchg
fcmovbe
testl
enter
call
das
fcmovu
dec
sti
jmp
iret
out
xlat
fucomip
hlt
ret
xlat
inc
cld
in
test
int
aad
fldz
ror
lret
repnz
cmp
sti
ret
xlat
mov
jmp
fcmovbe
jmp
stc
xor
lock
out
ljmp
out
shr
xchg
fstl
jmp
shl
fcomp
loope
std
rcl
cmc
mov
addl
lds
cli
call
loop
int3
aad
or
in
and
xchg
test
xor
out
test
hlt
rcr
shl
rcr
fcmovnbe
in
stc
loopne
xchg
int
lock
ret
stc
divb
lret
std
repz
fucomp
ds
mov
movb
in
lock
flds
cli
div
xchg
mov
out
lret
iret
lret
loope
xchg
int3
ljmp
xor
rolb
in
shl
in
mov
in
ror
loop
cmc
rol
hlt
fdivs
shl
adc
cld
aas
test
repnz
leave
loopne
rcll
xor
test
int3
iret
ljmp
out
stc
cmp
ljmp
ljmp
call
idiv
sarl
cmp
rcr
addb
ljmp
jecxz
cmp
jmp
lret
cmp
mul
mov
xchg
loop
test
loope
loop
repnz
out
int3
fstp
fsubrp
jecxz
into
div
out
std
jecxz
leave
lret
call
loop
sub
sub
into
std
sar
enter
sti
roll
lret
loopne
cli
fcmovb
rorl
lret
enter
int3
ds
in
xchg
ret
testl
loop,pn
jmp
shl
rcr
aaa
repnz
ret
test
fdivr
out
std
int
repz
call
lret
into
in
fiaddl
in
jecxz
in
int
icebp
in
mov
test
sar
repnz
icebp
sti
cli
aam
xor
fldl
ret
loop
xor
ljmp
icebp
icebp
test
in
lret
sti
ljmp
xor
sti
cli
cmp
cmp
cmpb
fcmovnb
xlat
int
int
mov
iret
xchg
ss
xor
sub
jmp
test
filds
out
ljmp
ljmp
ret
stc
test
aad
in
std
into
test
adc
into
loop
xor
jmp
call
xor
fidivrl
cli
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
orl
jmp
into
ds
rcl
aad
arpl
addr16
sub
jl
stc
in
clc
mov
rolb
leave
rcr
out
aad
lret
std
out
rcl
hlt
clc
enter
loope
ret
xlat
ljmp
fmulp
loope
icebp
icebp
jecxz
jecxz
cmp
fdivrl
fidivrs
lock
orb
call
in
out
cmp
cmp
cmp
std
fdivl
fcmovnb
sti
ljmp
int3
loopne
repnz
rcl
repz
cld
enter
shl
cli
in
mov
xchg
std
fstp
lret
rol
out
out
ror
into
xor
cmp
cli
add
fsubrp
xchg
jecxz
lret
xchg
fdiv
in
lret
cmp
ljmp
cld
hlt
call
out
in
sti
xchg
test
xor
out
lret
out
leave
lret
into
std
addb
in
out
call
xchg
das
das
xor
cmp
ror
cld
lock
in
int3
aaa
and
fdivrs
mov
enter
jmp
out
das
int3
enter
xor
stc
addl
lret
fucomp
call
call
cmp
jmp
in
lret
aam
in
lock
adc
rcr
leave
mov
rcl
in
repz
enter
aad
out
aas
lock
rcl
sar
les
out
cli
fists
in
into
ss
repnz
fsub
cmp
loopne
mov
xor
sub
shr
std
addl
lret
ljmp
aas
shl
ret
out
cmp
fidivrl
ds
cmp
aas
aad
in
std
fsubp
cli
xchg
xchg
xor
aad
rcl
cmp
lock
aaa
test
cmc
sti
enter
into
nop
in
xchg
jmp
call
lock
ds
mov
repnz
call
loop
xchg
into
lock
lds
jmp
enter
cmc
out
rol
icebp
repz
lds
ss
leave
lock
loope
push
iret
rolb
aad
std
movl
jecxz
cld
fcmovne
xor
roll
xchg
ljmp
call
loop
out
cmp
fcomp
ds
in
in
rcl
lock
repz
fcmove
lock
fucomip
rol
into
int
xlat
cli
cmp
aaa
repnz
aad
in
fmull
orb
xor
clc
cmp
cmp
fcmovnu
pushl
jecxz
ret
test
mov
cld
int3
loope
ficoml
fchs
ret
xor
aam
into
fdivr
and
xchg
loope
orb
out
nop
fidivs
loopne
ret
idivl
ljmp
cld
cld
out
mov
in
in
fimull
rcl
int
loop
lret
cmpl
cld
aas
xchg
sbb
sub
call
out
ret
in
icebp
incb
into
adc
repz
jmp
mov
int
out
loopne
ds
out
cmp
aaa
lret
lret
ds
fiadds
clc
xlat
out
rcr
test
loop
lock
call
cmp
shr
lret
xlat
decb
cmc
lea
loope
das
xor
lret
shr
ss
test
aam
fcmovnu
test
or
jecxz
call
aam
in
xor
rcr
lret
cmp
sar
in
sarl
faddl
loopne
adc
in
test
out
cli
fstp
cli
test
in
or
mov
jecxz
xor
cld
aam
ljmp
xchg
inc
loop
clc
test
loopne
aas
lret
xor
int3
fcmovu
aad
into
hlt
cmp
fcmovnu
aad
aas
adc
mul
loop
rcr
in
in
xor
xor
xor
fidivl
shl
int
in
fst
mov
cmc
rolb
sti
ljmp
repnz
in
rcr
cld
into
shl
cmp
ret
std
repnz
cmp
leave
fistl
rcr
lret
jmp
cmp
fcmovu
iret
cmp
xlat
enter
mov
sbb
xor
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
add
imul
mov
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
push
andl
push
subl
push
xorl
xor
lea
xor
movl
or
andl
xor
add
adcl
push
orl
lea
subl
push
push
xorl
lea
movl
inc
subl
xor
negl
xor
call
movl
movl
mov
mov
jmp
adcl
xor
movl
xor
sbb
xor
addl
xor
movl
incl
mov
mov
cmp
jb
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jb
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
andl
movl
sub
lea
mov
sbb
mov
mov
and
lea
neg
mov
xor
or
sub
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
movzwl
sub
mov
mov
mov
add
mov
add
xor
mov
add
not
mov
mov
mov
cmp
mov
movl
mov
movl
je
sub
mov
xor
add
adcl
imul
mov
movl
jmp
sbbl
xor
movl
add
mov
xor
mov
mov
sub
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
jmp
sbb
add
mov
xorl
mov
xor
mov
orl
xor
movl
add
movl
cmp
movl
jne
push
pushl
andl
pushl
andl
call
mov
mov
mov
xorl
mov
mov
mov
mov
movl
movl
andl
mov
and
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
andl
mov
xorl
xor
sbbl
add
movl
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
xorl
xor
sub
lea
mov
mov
xor
orl
lea
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
and
mov
movl
mov
movl
or
mov
mov
xor
addl
add
cmp
movl
je
xor
mov
xor
addl
add
add
mov
mov
mov
sub
and
mov
xor
and
mov
orl
sub
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
xor
add
adc
add
mov
movl
cmp
ja
mov
and
mov
movzwl
sub
mov
xor
add
movl
cmpl
je
cmpl
jne
push
push
push
push
call
mov
dec
mov
jmp
orl
imul
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
xor
add
and
mov
xor
adc
add
add
mov
mov
mov
mov
mov
mov
sub
or
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
push
sub
push
xor
push
mov
call
pushl
pushl
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
je
mov
jmp
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
push
movl
push
movl
mov
movl
push
movl
mov
movl
mov
mov
push
not
mov
movzbl
mov
cmp
movl
je
mov
mov
xor
addl
add
cmp
je
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
sbb
xor
add
push
mov
adc
pushl
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
pushl
mov
call
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
push
movl
mov
mov
sbbl
add
andl
xor
movl
cmp
jne
and
mov
mov
movl
add
mov
mov
mov
movl
xor
and
push
xor
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
movzbl
adc
mov
xor
mov
addl
xor
subl
add
movl
mov
mov
movl
movl
mov
movl
push
mov
movl
mov
cmp
movl
je
orl
mov
addl
xor
adcl
xor
xorl
lea
negl
xor
movl
cmp
movl
jne
jmp
add
mov
xor
addl
add
andl
mov
movl
mov
xor
and
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
adc
movl
dec
movl
mov
push
mov
adc
xor
mov
add
mov
xor
or
mov
add
mov
push
push
adcl
test
movl
je
mov
mov
mov
sbb
mov
mov
imul
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
sbbl
mov
add
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbbl
mov
xchg
sub
xor
orl
mov
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
sub
mov
xor
sub
xor
add
mov
movl
mov
movl
je
andl
mov
xorl
xor
andl
add
cmp
jne
adcl
pushl
call
subl
mov
movzwl
add
mov
mov
mov
or
mov
sbbl
mov
xor
andl
add
cmp
je
pushl
pushl
orl
call
movl
mov
mov
add
mov
xorl
xor
add
movl
cmp
movl
je
orl
mov
mov
mov
sbb
mov
mov
notl
add
movzwl
sbb
mov
sub
mov
subl
mov
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
orl
mov
mov
subl
add
adc
xor
mov
sub
mov
xor
add
mov
sub
mov
add
xorl
lea
mov
xorl
push
pushl
subl
pushl
orl
call
mov
xor
add
sub
mov
mov
notl
xor
decl
add
movl
cmp
movl
jne
inc
mov
movl
inc
movl
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
