add
add
adc
add
add
add
cmp
add
add
add
add
in
sub
movl
mov
adc
mov
movl
xor
mov
push
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
pushl
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
xor
xorl
mov
notl
jmp
dec
dec
xor
fcoms
jp
testl
jl
jl
mov
xor
xor
ja
or
lret
sbb
mov
or
rol
or
sbb
out
outsl
add
mov
mov
je
fisttpl
jecxz
and
aam
dec
incl
mov
loope
pop
sub
jae
lret
cwtl
sub
mov
loopne
cmp
sub
or
sbb
outsl
insl
jb
cmp
jns
cmp
add
movsb
add
rol
add
jge
mov
daa
sbb
addr16
loop
xchg
in
movl
mov
adcl
mov
xorl
mov
adcl
jmp
inc
in
xor
inc
in
xchg
add
jl
jl
jge
stc
hlt
mov
mov
sbb
jae
stos
mov
fmull
or
fs
cmc
pop
outsb
mov
or
cmp
out
dec
inc
dec
lock
or
idivl
add
adc
jnp
fadds
sub
ljmp
stos
inc
mov
lods
xchg
fs
or
sahf
jne
xor
pop
or
dec
pop
stos
mov
jns
jmp
les
imul
sbb
aas
or
dec
sbb
inc
andl
push
iret
out
sbb
push
enter
ret
mov
jae
push
push
test
movl
je
and
mov
and
jmp
xchg
or
mov
dec
popa
enter
cmpsl
push
call
jl
jl
sti
and
jns
xchg
cld
sti
xchg
jle
jmp
pop
mov
repnz
and
lock
aaa
sbb
fwait
daa
xlat
arpl
push
aam
push
pop
loope
dec
out
imul
dec
ljmp
and
sbb
xchg
push
sbb
inc
movsb
jne
mov
je
push
lods
mov
cvtdq2ps
imul
xor
icebp
sub
mov
es
js
aaa
dec
push
lea
push
daa
dec
pop
jmp
and
dec
and
xchg
push
iret
stos
mov
pushf
fwait
mov
sahf
pop
scas
pop
lds
loopne
push
dec
pop
inc
add
imul
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
xor
or
dec
mov
jmp
xor
add
inc
mov
add
mov
subl
xchg
xor
sub
or
xor
mov
movzwl
xor
mov
or
mov
mov
xor
jmp
ficoms
loop
sbb
movsb
out
in
add
jl
mov
inc
cltd
dec
pop
testb
bnd
lods
sbb
jg
dec
inc
mov
cltd
xlat
pop
ljmp
mov
mov
outsl
jns
loope
mov
scas
jne
xor
clc
push
test
fimull
hlt
pop
sub
stc
pop
xchg
sti
sub
gs
loopne
cmc
push
push
push
loopne
ret
cmp
push
xor
pop
sbb
mov
push
jg
sbb
pop
and
add
mov
test
adc
inc
movsb
adc
xor
adc
fwait
cmp
jae
or
lahf
mov
js
sbb
sbb
push
push
ret
sarb
pop
add
loopew
loopne
stc
pop
mov
jmp
add
repz
lods
addr16
jge
stc
icebp
sahf
or
jl
mov
lcall
pop
cmpsb
lcall
inc
inc
cmp
into
mov
bsf
jae
mov
cli
add
movsl
jmp
mov
push
xor
shlb
sahf
lods
in
call
iret
loope
sbb
xchg
jl
mov
lds
imul
mov
lcall
or
inc
push
dec
xchg
ja
or
mov
inc
xchg
out
lock
icebp
add
in
mov
xchg
out
sbb
dec
sahf
sbb
shl
imull
pop
test
and
sbb
pop
sarl
dec
call
inc
add
inc
add
enter
pop
inc
add
add
add
add
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
mov
mov
mov
movl
je
mov
xorl
xor
jmp
in
iret
lcall
mov
js
jno
jl
jl
jl
pop
cmpsb
shlb
push
jae
cmp
add
cmc
cmpsl
iret
cmpsl
cmpsb
sub
mov
mov
in
and
xor
lock
ja
les
data16
test
jae
mov
cmp
js
add
ja
lock
mov
in
add
ficoms
call
int3
dec
lret
je
stos
lds
mov
xor
add
stos
sub
cmpsb
sub
jno
fbld
sbb
imul
and
pop
les
pop
rcll
xchg
add
daa
mov
jmp
inc
es
pop
inc
psrlw
push
adc
sub
ret
movl
cmp
movl
jne
pushl
addl
call
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
jmp
fdivr
ljmp
into
outsl
inc
movsb
jbe
out
jo
jl
jl
jl
js
dec
fldt
cli
je
mov
hlt
divl
scas
adc
xlat
scas
xchg
or
testb
pop
or
pop
mov
or
jp
movsl
loop
dec
mov
pop
xor
cmp
push
sbb
into
xchg
adc
mov
cmp
gs
rcll
push
mulb
enter
stos
loopne
mov
mov
ret
and
dec
sbb
jo
in
xor
sbb
sub
std
arpl
fs
int
das
aas
outsb
sti
inc
ljmp
neg
adc
xchg
sahf
dec
push
mov
xchg
int
push
sbb
out
hlt
mov
xor
mov
adc
mov
xor
adcl
add
movl
cmp
movl
je
subl
pushl
jmp
js
dec
mov
jnp
hlt
push
cmpsb
imul
jl
mov
inc
cli
clc
add
cs
loope
and
push
or
ljmp
clc
or
or
dec
and
bound
imul
xchg
cwtl
hlt
scas
shll
dec
and
xchg
adc
insl
xchg
add
push
cmc
lret
mov
cmp
pop
loopne
sbb
sub
je
out
repnz
mov
and
out
aad
push
add
dec
movsb
mov
add
xor
in
xor
enter
mov
js
sub
mov
and
push
or
repnz
push
or
iret
or
sbb
add
xchg
and
jne
call
jmp
cld
mov
mov
dec
mov
aad
mov
lods
jae
jl
jl
jl
jp
pop
jb
ret
rorb
pop
xchg
cmp
out
jl
sarb
call
xchg
dec
xchg
pop
xchg
je
pop
clc
enter
jg
outsl
or
jle
push
mov
adc
mov
arpl
xchg
mov
scas
push
or
push
flds
lcall
stc
scas
call
dec
mov
jl
loopne
add
stos
clc
into
dec
xchg
imul
dec
test
sub
cmp
jg
int
jno
mov
push
or
ss
inc
add
js
mov
in
gs
xchg
mov
and
mov
test
push
gs
popf
mov
mov
add
mov
xor
add
movl
cmp
movl
je
mov
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
subl
jmp
inc
adc
jns
lret
push
insb
jno
inc
lret
jb
jl
jl
jl
jns
jnp
and
fisubrl
push
inc
cmpsb
cmp
aaa
faddp
add
jno
in
pop
cmp
pop
lcall
dec
ficomps
push
outsb
sub
shll
stos
jle
and
or
mov
flds
out
mov
lock
faddp
mov
addr16
test
cld
ror
xor
lret
je
cli
in
cmpsl
arpl
fcmovnbe
imul
xor
cmp
jmp
iret
pop
je
mov
test
inc
xor
inc
scas
adc
les
add
movsl
fadds
hlt
lahf
outsb
cmpsb
gs
mov
push
push
push
push
es
aam
loopne
mov
and
mov
mov
andl
add
movzbl
and
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
notl
add
xorl
mov
jmp
cmp
mov
cmp
mov
cmovle
jne
jl
jl
jl
cld
add
cmpsb
add
int
fisttpl
decl
ss
subb
repnz
icebp
addr16
and
icebp
mov
ficompl
ja
push
inc
int
sarl
rcl
or
and
push
arpl
sahf
fisttps
xchg
inc
cmc
push
repz
es
jne
int3
scas
mov
jle
cmpl
test
xorb
sub
sub
dec
xor
int
mov
movsb
mov
pop
push
sub
stos
adc
dec
repz
repnz
loopne
pop
test
icebp
out
popa
mov
dec
or
nop
scas
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
xor
mov
jmp
xor
mov
sub
xchg
xchg
adc
jl
jl
jl
sbb
push
jnp
push
push
test
ljmp
pop
mov
cmp
xlat
mov
mov
inc
cmp
jle
sbb
pusha
sbb
hlt
stos
mov
pop
fwait
adc
mov
mov
fadds
jmp
cmp
adc
mov
adc
dec
jl
lods
jb
dec
out
mov
stos
jns
ja
sub
inc
adc
fwait
outsb
sub
jne
mov
xorb
stos
jbe
lea
mov
push
iret
dec
add
pop
arpl
xchg
daa
add
mov
pushf
adc
pop
clc
jo
sbb
push
adc
pop
adc
fmuls
mov
dec
rclb
jne
jmp
pop
jecxz
xchg
mov
jb
daa
inc
mov
jl
mov
iret
es
push
dec
lock
aaa
repz
in
push
inc
mov
shl
into
xchg
mov
add
push
js
fcmovnbe
xor
dec
mov
add
mov
sub
and
xor
fcmovnbe
arpl
push
lahf
adc
xor
cmp
pop
sbb
jmp
adcb
mov
or
aad
cmp
pop
loop
daa
rcrl
jp
dec
cmp
xor
adc
cmpsb
shlb
xor
mov
div
jb
jae
popf
and
cmp
push
xor
mov
jmp
or
mov
mov
push
int3
xchg
xchg
int
push
jl
mov
ljmp
test
cmp
push
mov
loopne
mov
dec
clc
shll
mov
out
dec
sub
mov
xor
inc
dec
in
test
cmp
mov
adc
or
mov
inc
loope
dec
shrb
mov
or
cmp
out
inc
faddl
repnz
aam
int
arpl
jl
cmp
sub
jecxz
cwtl
jle
inc
inc
lds
aam
pushf
pop
lcall
lahf
js
pop
stos
divb
rcl
in
jne
outsl
test
mov
pop
pop
sub
call
mov
mov
xor
add
cmp
jne
jmp
dec
xchg
pop
add
arpl
adc
addr16
ja
jl
jl
jl
fisubrl
ret
cmp
icebp
fisttpl
lds
mov
dec
loopne
lcall
cltd
mov
out
pop
push
adc
std
outsb
mov
in
jp
std
sub
pop
xlat
scas
xchg
sbb
jmp
ljmp
shl
fists
push
mov
add
pop
les
lcall
inc
jle
ljmp
movb
pop
mov
lods
jne
js
popf
loope
mov
cmp
and
push
sbb
push
cmp
xchg
pop
lods
imul
loop
fsubrs
out
jge
sub
mov
add
push
loopne
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
jmp
lods
adc
ljmp
adc
jbe
jl
jl
jl
loope
sbb
mov
addr16
xchg
nop
sub
jp
lea
mov
outsl
adc
rcrb
int3
jmp
mov
mov
sbb
xchg
jno
imul
sbb
imul
pop
sti
push
js
cmp
test
mov
divl
cmp
xor
adc
add
jns
out
icebp
push
mov
sub
out
pop
mov
fiadds
cwtl
xchg
dec
cmp
addr16
insb
and
scas
decl
adc
mulb
and
in
and
add
sub
cmp
and
aas
stos
push
cmp
inc
push
pop
mov
jg
pop
push
imul
inc
cld
mov
jmp
xchg
sub
cltd
cmp
mov
sub
jl
jl
jl
mov
xor
or
cwtl
sbb
xor
inc
xchg
nop
dec
jp
mov
mov
dec
jg
mov
test
loopne
xor
outsb
mov
push
lods
cmp
add
jge
cmp
add
aas
xor
and
mov
xor
in
add
jle
jl
in
xlat
enter
add
sahf
fiadds
adc
lods
std
mov
xchg
pusha
iret
test
pop
cmpsb
lret
loopne
out
mov
adc
leave
mov
mov
lds
xor
hlt
fdiv
enter
mov
mov
cmp
cmpsl
dec
add
push
or
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
jmp
cmp
cli
test
repz
jl
mov
movsb
pop
nop
das
in
imul
mov
out
mov
inc
jecxz
fcoml
mov
dec
idivl
xchg
push
push
add
sub
out
sub
lea
or
fcoms
xor
sbb
call
mov
mov
fstpl
daa
mov
and
out
jae
mov
int3
lcall
fucomp
iret
xchg
pop
mov
xlat
fistpll
out
adc
xchg
pop
mov
dec
or
in
cli
xchg
icebp
mov
data16
pop
adc
scas
loop
stos
jl
mov
inc
call
mov
inc
call
mov
jmp
and
rep
lods
sti
pop
xorl
inc
lods
dec
or
jl
jl
dec
insl
sbb
lods
mov
pop
push
mov
pop
lds
mov
sub
out
jae
lock
dec
pop
jp
sub
sahf
jbe
mov
iret
out
stos
outsb
fnstcw
mov
lcall
test
push
fisttpll
enter
loop
push
cmp
fidivl
mov
mov
xor
scas
pop
cmpsb
jne
add
mov
xor
adcl
pushw
cmpsl
mov
inc
mov
mov
cwtl
dec
gs
jle
jae
add
into
es
inc
xor
lahf
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
jmp
xlat
pop
cmp
pop
insl
jnp
sbb
mov
and
decb
jl
mov
aaa
dec
jbe
dec
mov
jno
in
lret
mov
in
jns
fwait
and
lods
pop
cmpb
lcall
push
stc
imul
lock
sbb
loope
fimull
or
mov
not
popfw
sub
jno
outsb
insb
xchg
inc
inc
ret
xchg
call
mov
mov
xor
scas
inc
and
mov
enter
or
xor
addb
pop
adc
es
cli
inc
out
fs
cmp
cmp
push
test
mov
in
mov
jmp
mov
mov
xor
jmp
fsub
mov
clc
mov
push
mov
jl
jl
jl
add
js
inc
loope
mov
add
roll
pop
shlb
inc
pop
fdivl
lcall
adc
dec
les
adc
mov
mov
cmp
shlb
scas
and
repz
movsl
push
stc
jmp
sbb
add
std
lea
xchg
mov
add
xlat
jne
divl
mov
sub
jecxz
mov
andl
movsl
push
aaa
dec
push
sti
jae
pop
pop
sub
aaa
jl
lret
sbb
mov
stos
pop
jne
insl
scas
jae
cmpsb
inc
sub
cmp
std
ret
inc
cmp
jno
je
popa
mov
repnz
add
mov
jmp
pop
fimuls
cltd
push
mov
mov
jl
jl
jl
cld
add
aas
or
cmp
cmp
jns
imul
idiv
mov
xor
xor
repz
lcall
mov
in
ret
cmp
icebp
xchg
sub
mov
out
popa
inc
clc
lahf
jno
test
in
andb
xchg
sub
mov
pop
and
pop
xchg
pushf
sbb
jl
loope
push
jnp
adc
push
and
int
test
or
jg
test
push
iret
je
rol
je
icebp
inc
shll
dec
not
adc
rcr
xchg
stc
or
cmp
cld
mov
xor
xor
lea
add
call
xor
inc
cmp
jmp
jmp
inc
insb
jns
jmp
loope
pushf
xorb
popf
nop
or
jl
or
xor
and
sub
push
push
push
mov
mov
xchg
fisubs
cmpsb
addr16
int
pop
sbb
push
test
dec
cmp
fimull
popa
in
push
inc
sahf
mov
mov
aaa
cltd
sti
and
xchg
dec
in
sbb
in
notb
xor
push
sub
pop
cmpl
xchg
js
out
cwtl
inc
fiadds
shlb
sub
add
cwtl
mov
lret
test
pop
xlat
push
mov
sbb
addb
dec
adc
or
out
int
repz
push
and
add
add
add
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
jns
inc
ds
mov
mov
or
jl
jl
jl
dec
sbb
fs
ds
pop
jmp
xor
dec
int
inc
test
insl
push
inc
lods
inc
daa
mov
mov
xchg
push
or
int
inc
insl
sub
pop
jae
jg
rcr
jg
movsl
jg
dec
lret
ja
ja
imul
jnp
push
outsb
scas
imul
dec
xlat
jge
mov
shrl
push
ret
imul
push
daa
jge
repnz
push
data16
out
jbe
or
out
xor
cmpsb
fbstp
test
push
insb
dec
fisttpl
fbstp
dec
mov
push
xor
insb
js
pop
cmp
dec
inc
add
jmp
in
test
sti
mov
cmp
fsts
mov
push
push
es
xchg
fnstsw
outsl
into
jae
int
cmpsb
adc
xchg
lret
loopne
rorl
mov
nop
inc
push
dec
or
movsb
cli
jg
or
idivb
inc
aas
dec
ret
aaa
add
sub
int
cmpsl
pop
aas
xor
insb
test
movsl
cs
xchg
cmp
mov
jne
ror
sbbb
loopne
getsec
adc
adc
jecxz
mov
jne
test
stos
cltd
lcall
mov
sbb
adc
pop
hlt
push
sub
push
mov
cmp
pop
daa
lds
aad
stos
and
lods
push
stos
jl
xchg
dec
cmp
insb
mov
inc
or
xlat
or
rolb
pop
hlt
jmp
dec
jge
cmpb
jge
push
loope
jg
sbb
mov
jl
mov
in
add
push
arpl
scas
test
fcompl
push
mov
sbb
pop
pop
call
outsb
fdivrs
imul
icebp
add
adc
xchg
adc
cwtl
lcall
ja
subb
lcall
cmpsl
nop
lcall
fildl
push
or
out
std
push
pusha
mov
frstor
push
and
clc
dec
or
mov
dec
sbb
jecxz
jp
mov
mov
mov
sarl
lret
jb
stc
dec
or
ror
aas
mov
mov
ret
xorl
hlt
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
push
push
call
mov
dec
mov
jmp
mov
movl
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
jmp
sbb
insl
std
pop
mov
adc
sbb
push
jl
into
jg
jl
adc
mov
xchg
mov
fisttps
sbb
subl
in
mov
std
lods
adc
mov
mov
or
lds
fadds
xorb
repz
jo
push
sarl
pop
stos
rcr
movsl
mov
sahf
or
out
cmp
add
out
cmp
pop
aad
xchg
xchg
push
test
imul
pop
aaa
xor
lahf
xlat
lods
xlat
mov
push
movsb
push
inc
inc
inc
pop
pop
dec
and
subl
jmp
aas
loopne
or
pop
std
hlt
or
mov
jno
adc
lods
xchg
pop
or
and
les
imulb
in
push
test
jae
cli
pop
jns
pushf
and
jmp
sbb
fcmovb
pusha
adc
add
push
test
add
mov
dec
div
xor
ret
mov
cmp
and
xchg
mov
lret
or
sub
xchg
and
jo
ds
fsub
outsl
or
lds
or
out
xchg
or
push
mov
leave
and
and
icebp
dec
inc
insl
mov
mov
or
push
mov
xchg
call
shrb
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
jmp
jp
pop
cmp
jge
mov
push
push
mov
jl
into
jg
jl
popf
mov
jnp
jecxz
rcrl
mov
pop
aad
pop
pop
mov
ja
repnz
jae
jae
shrl
push
sahf
ficoms
xchg
mov
out
cmpsb
inc
movsl
add
sub
pop
gs
pop
loop
je
and
add
negl
add
sub
or
xor
jmp
add
packssdw
jg
fdivr
insl
push
or
inc
push
mov
mov
xchg
pop
xchg
hlt
rcll
out
jo
mov
fs
sub
and
sub
out
xlat
insl
adcl
pop
nop
out
outsb
jb
pop
jl
ret
push
fcoms
jge
jae
call
xor
lods
out
xlat
inc
xor
out
pop
push
lds
cmc
adc
sbbl
inc
hlt
mov
sahf
jp
ja
adc
sbbb
inc
je
mov
mov
iret
stos
test
dec
out
in
cli
add
out
jns
sahf
insb
inc
test
dec
ret
addr16
dec
ficoms
cmp
mov
adc
and
jae
mov
jae
mov
sbb
sbb
sub
dec
lahf
cmp
jbe
pop
mov
jmp
jno
in
cli
insl
cmpl
pop
scas
push
sbb
jl
into
jg
jl
add
rcrb
setp
movsl
movsb
call
fdivrl
inc
cmpsb
ret
ljmp
ljmp
jg
mov
mov
lds
xchg
jle
cmp
jg
shll
cmp
jb
cwtl
inc
repz
addr16
arpl
scas
inc
shrb
aaa
test
pop
prefetch
or
andb
cmp
js
add
rorb
mov
cmpb
adcl
inc
hlt
xchg
cld
leave
pop
mov
ja
xchg
pop
pop
mov
pop
pop
jns
popa
inc
push
test
inc
ss
nop
add
xor
mov
std
mov
xchg
mov
or
add
sbb
adc
inc
insl
daa
push
pop
cld
jg
out
fsubrl
scas
or
out
dec
ja
mov
inc
popf
mov
mov
movsb
lcall
int3
rcrb
jns,pn
in
mull
cmp
aam
lret
out
lahf
std
xchg
jg
int3
lds
pop
sti
mov
xchg
addr16
xchg
cmp
jo
les
sbb
xlat
jne
and
jmp
lods
dec
and
cmp
pop
pop
leave
ret
push
mov
mov
add
mov
movzwl
or
sub
mov
or
mov
andl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
pushl
call
jmp
mov
addl
xor
cmp
je
mov
xorl
jmp
rolb
loopne
dec
push
mov
orl
jl
and
xchg
add
cwtl
cmpsb
sbb
rcrb
cli
xor
xor
mov
jecxz
scas
enter
call
iret
push
test
sbb
mov
mov
push
pop
ljmp
lcall
pop
inc
jmp
mov
out
scas
stos
fadd
mov
add
nop
or
add
in
inc
out
jmp
jo
xor
ret
xchg
and
pop
stos
rcrb
inc
mov
mov
sub
jmp
sahf
and
cwtl
inc
js
cmp
fucomp
ret
lock
data16
jl
jl
jne
mov
or
sarl
sub
repnz
shl
mov
fbstp
rorb
lret
xor
enter
call
out
lret
jmp
xchg
xchg
insl
leave
shl
jae
or
lds
jbe
or
scas
push
mov
mov
push
int3
mov
sub
outsb
lods
sub
mov
dec
ret
mov
cmpsl
in
dec
out
cmpsb
or
add
sub
adc
cmp
sarl
jne
mov
add
jmp
mov
xor
jmp
ficomps
mov
adc
xor
jl
jl
jl
xchg
cmp
fdivr
es
jmp
adc
adc
cmp
jge
push
fidivrs
pop
ja
push
push
xlat
push
ljmp
lret
push
add
pop
ds
mov
push
xor
jnp
cmp
lret
pop
dec
lahf
ret
inc
pusha
lret
out
push
and
outsl
fldl
jl
jbe
push
pusha
add
jne
lods
sub
in
xchg
inc
outsl
pop
faddp
xchg
sbb
lahf
inc
jnp
clc
stc
insb
in
dec
xchg
sbb
inc
add
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
push
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
xorl
mov
movl
mov
xor
movl
xor
mov
and
jmp
loopne
enter
sti
in
cmp
jg
adc
jl
xor
jl
pop
sarl
mov
add
mov
jp
iret
cmp
mov
sub
mov
lcall
cmp
cwtl
jp
mov
and
hlt
adc
pop
sbb
jmp
sti
sbb
repnz
pop
xchg
and
jno
scas
jo
add
push
mov
mov
push
xor
and
leave
cmp
mov
pusha
xor
das
mov
pop
xchg
inc
sbb
out
or
xchg
cltd
hlt
fsubl
sbb
mov
sbb
mov
inc
xor
pop
jae
aad
jg
orb
inc
aam
repz
cmp
or
or
das
dec
inc
mov
daa
das
adc
imul
push
mov
cwtl
fildl
aad
xchg
loop
pushf
fildl
cmpsb
stos
popa
mov
add
pop
inc
or
icebp
dec
adc
fwait
enter
add
push
sbb
pushf
or
lret
mov
and
aad
lret
mov
cmp
loopne
cwtl
inc
shll
ret
or
ret
mov
mov
inc
sub
aad
leave
outsl
stos
jb
pop
stc
mov
js
mov
mov
mov
xor
mov
add
adc
mov
mov
mov
sub
xor
mov
xor
not
add
add
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
adc
movl
adc
movl
movl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
or
movl
movl
movl
or
mov
movl
xor
or
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movl
mov
orl
jmp
std
xor
mov
add
test
scas
xchg
je
into
pop
jl
xor
jl
in
inc
dec
jns
inc
inc
popf
outsl
dec
push
adc
pop
xchg
cs
pop
loope
rclb
cmp
data16
jmp
cmp
push
push
mov
jne
lcall
outsb
iret
bound
ss
daa
mov
bound
movsl
and
push
xchg
mov
mov
push
cs
dec
push
xchg
sbb
mov
sbb
mov
stc
dec
int
aaa
xchg
test
in
mov
push
shlb
cmp
pop
ja
mov
adc
ss
mov
ret
je
std
pop
stos
insb
sbb
pop
inc
or
imul
loopne
cmp
pop
dec
andb
into
sarb
jp
jmp
xchg
mov
sbbl
mov
leave
pusha
pop
cwtl
inc
sbb
stos
int3
sub
call
xchg
adc
loop
mov
std
inc
jne
das
lahf
and
cmp
mov
imull
nop
test
add
cmpsb
fdivl
sbb
dec
and
jecxz
xchg
loope
aaa
mov
add
fisubs
stos
mov
icebp
or
das
fcmovnbe
test
sub
adcl
mov
xorl
xor
xorl
add
movl
cmp
movl
jb
xor
mov
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
call
jmp
xor
mov
mov
sbb
add
jmp
jno
movsl
imul
pop
clc
jo
cld
dec
xchg
jl
xor
jl
mov
scas
jb
test
cwtl
sub
pop
add
sbb
into
mov
icebp
adc
dec
or
or
mov
cmc
push
stos
inc
push
cwtl
adc
cmp
xor
imul
int3
push
lret
xorl
xor
xchg
scas
and
iret
dec
or
test
jmp
out
push
add
cmp
pusha
xchg
xchg
stos
stc
ret
xchg
das
ret
mov
inc
cli
cmpsl
jmp
mov
pop
xlat
inc
lock
mov
subb
pusha
cmp
dec
dec
mov
out
mov
std
adc
stos
sbb
loopne
sub
xchg
mov
add
or
jns
mov
mov
cmpsl
cwtd
hlt
stos
mov
xchg
cmc
sub
sbb
or
je
xchg
and
in
sub
mov
mov
add
aam
data16
idivb
aam
mov
sub
push
ror
push
in
cmp
push
aas
mov
jl
push
dec
push
fs
pop
outsl
xchg
xchg
mov
inc
rcrl
adc
xchg
xor
aaa
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
add
imul
mov
mov
sbbl
sub
cmp
ja
add
mov
xor
notl
add
movl
jmp
movzwl
or
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
jmp
dec
xchg
call
sub
adc
sbbl
jl
aam
mov
sbb
mov
add
dec
adc
aas
jno
dec
pop
ret
push
add
jmp
scas
sbbl
xchg
data16
sub
repnz
imul
mov
fs
out
jg
dec
mov
in
into
inc
mov
jo
mov
pop
mov
ret
jecxz
pop
inc
push
shlb
outsl
cmp
mov
add
cmpsb
mov
je
out
test
fdivrl
aaa
data16
cli
int3
sbb
jae
mov
mov
mov
dec
or
pop
jle
mov
mov
test
sbb
out
dec
cmpsl
mov
adc
and
into
push
cmp
cmp
xor
inc
add
cltd
out
xchg
frstor
addr16
mov
iret
add
hlt
and
fsubrp
jnp
lea
sub
insb
in
cmp
xor
xchg
imul
and
popf
dec
xor
sbb
dec
es
and
mov
mov
ror
sbb
mov
pop
sbb
ds
cmpsb
fdivrs
std
ss
sub
shlb
clc
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
jmp
sbb
cs
mov
cmovae
dec
jo
push
sbb
jg
jl
sbb
pop
imul
jnp
js
and
add
loopne
jmp
jbe
loop
lcall
cli
fdivrs
mov
movsl
roll
pop
iret
mov
push
sbb
int
cmp
outsl
push
ds
mov
sbb
rol
cli
jmp
rorl
mov
sar
clc
insl
mov
and
and
cmp
mov
gs
enter
lcall
sub
mov
das
jo
or
jge
rcrb
jmp
push
sub
fnstcw
sub
add
outsl
and
jmp
outsl
cmp
repz
pop
pop
nop
inc
das
sub
mov
or
ficompl
mov
mov
ret
dec
ret
mov
mov
in
aam
pop
jns
dec
lcall
cltd
pop
scas
push
ds
pop
into
cmp
cmp
sahf
and
dec
fcmovnbe
sarb
mulb
in
mov
xchg
jae
mov
xor
mov
jle
lock
aaa
les
cmpsb
cmp
inc
pop
jl
clc
or
cmpsb
cltd
and
push
decl
xchg
add
add
add
add
cld
xor
xor
jmp
dec
inc
fdivr
fidivrl
gs
shr
and
sbb
jg
jl
inc
jecxz
sar
fisubs
sbb
test
popa
inc
addb
or
lds
push
adc
and
pop
loopne
cmpsb
mov
sub
dec
and
mov
fldenv
cmp
adc
shlb
sti
push
or
jl
mov
outsl
mov
mov
jg
pop
insb
stos
call
stos
push
xchg
xor
ja
push
test
dec
add
push
daa
outsb
cmpsb
cld
cltd
cmc
inc
sahf
push
add
mov
inc
cmp
int3
fistps
enter
mov
jmp
xlat
add
sahf
xchg
scas
pop
ljmp
dec
ret
imul
mov
mov
inc
nop
sub
mov
and
inc
push
push
mov
push
ret
jmp
mov
pop
mov
xchg
repnz
aaa
sub
push
jge
cwtl
mov
and
add
cli
loopne
adc
mov
hlt
iret
clc
je
lds
add
mov
jbe
add
push
jo
test
mov
push
pop
roll
sub
ljmp
movsb
xchg
dec
sub
push
pusha
or
stc
add
imul
mov
jmp
fwait
bound
pushf
stc
insl
fwait
jge
les
pop
mov
jl
xor
jl
pushf
cmp
mov
loop
psraw
pop
mov
mov
sti
shl
or
sub
push
imul
fildl
push
scas
std
std
mov
jmp
add
js
orb
popf
and
jecxz
pop
call
cmp
sahf
pop
push
ja
inc
or
cltd
pop
jne
int
call
sbb
data16
insb
xor
xchg
dec
push
addr16
push
fdivrs
adcl
or
out
dec
mov
outsb
and
repnz
aam
push
movl
in
sbb
jp
mov
mov
mov
dec
and
push
mov
jmp
inc
aas
mov
xor
or
sar
jnp
push
addr16
gs
das
xor
xor
xchg
add
cwtl
sub
fwait
jge
std
or
or
loope
jp
pop
cli
ret
loop
stos
xor
mov
insl
jmp
sbbb
cmpsl
pusha
jno
xor
xchg
cli
mov
xchg
pop
pop
sub
mov
mov
jnp
out
in
cmp
jg
pop
sarl
mov
lock
psraw
out
frstor
divb
sbb
jle
jl
xor
jl
fs
sbb
shll
decb
jne
lahf
fdivrl
xchg
add
jb
mov
add
and
cmp
add
xchg
sub
push
xor
cmp
add
dec
pop
xchg
sbb
cmp
cmp
jo
cmpsl
flds
push
sti
jp
bound
fidivrl
gs
inc
lea
or
pop
pop
mov
es
mov
mov
data16
sub
push
int
lret
jge
xchg
xchg
je
mov
sahf
pop
push
push
int
xchg
imul
in
mov
ret
push
add
or
sbb
pop
fdivrs
mov
flds
mov
fildl
insb
adc
nop
repnz
popa
icebp
push
scas
js
jne
jbe
ja
push
xchg
push
xchg
dec
inc
mov
shrd
adc
repnz
cmp
push
rcl
addb
cmpsl
mov
sbbl
addr16
mov
jae
outsl
cmpsb
and
sarl
mov
mov
xchg
out
cwtl
mov
icebp
fwait
jmp
pop
stos
jbe
fistpll
fimull
xchg
add
add
add
add
cld
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
jmp
mov
dec
stos
lcall
ss
jl
xor
jl
ret
int
in
cmp
loopne
sahf
faddl
fidivs
insb
xor
fcmovnbe
or
fwait
xchg
rclb
xlat
and
stos
inc
ret
jne
sti
push
pop
ss
push
jne
mov
cmp
lock
imulb
and
cli
inc
mov
mov
sti
dec
cs
sahf
jp
xor
jg
enter
nop
sub
lcall
outsb
hlt
icebp
mov
ljmp
adcb
mov
ret
add
push
js
enter
fcomps
push
test
pop
fnstcw
adc
clc
adc
repz
ss
sbb
pop
add
test
sahf
mov
sbb
div
mov
stos
adc
pop
mov
or
pop
xor
lret
dec
lcall
mov
cmp
pminub
roll
cmpsb
push
sbb
push
sbb
fsubrs
out
sub
jne
call
push
scas
mov
pop
and
mov
lcall
mov
sub
inc
das
cld
sub
xchg
cmp
inc
xor
mov
cmc
ja
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
jmp
int
mov
mov
cli
hlt
outsl
aad
adc
jg
jl
xlat
pop
mov
out
mov
lret
cmp
gs
jmp
lods
sti
jnp
mov
mov
nop
subl
sarb
jne
insl
xor
fdivrl
push
scas
push
fwait
mov
bound
jle
stc
pop
pop
xchg
pop
mov
fstl
pop
cld
outsl
jb
jp
sbbb
pop
pushf
lcall
nop
mov
icebp
xchg
inc
dec
sub
insl
pop
mov
push
mov
mov
xchg
mov
out
push
cs
jg
inc
sbb
dec
mov
dec
std
pop
inc
clc
adc
lahf
cmp
and
sub
or
divl
sub
pop
test
mov
adc
xchg
jecxz
pop
inc
fnstsw
fisttpll
mov
mov
andl
inc
rorb
adc
ljmp
jne
adc
pmullw
mov
lret
fs
daa
scas
adc
pop
xor
mov
jge
mov
int
cmp
shll
cmp
int3
inc
or
push
rcrb
push
or
sub
pop
add
lret
mulb
rolb
push
in
mov
mov
mov
mov
mov
xor
add
mov
mov
jmp
adc
iret
sbb
and
inc
adc
jg
jl
inc
dec
sbb
jns
mov
addr16
push
xchg
rorb
dec
sbb
shr
pop
mov
mov
mov
adc
jge
ja
inc
imul
mov
ss
push
adc
imul
jns
repz
dec
inc
repz
mov
jnp
mov
sub
cmp
and
dec
push
mov
lods
dec
popa
pop
xchg
std
jbe
fisttps
add
dec
xchg
hlt
xor
add
jno
xor
lahf
push
loope
adc
out
dec
imul
negb
call
xor
leave
pop
dec
mov
cmp
sbb
or
movb
mov
std
push
test
loope
dec
adc
push
enter
xor
fidivl
sub
sti
movsl
stos
add
jmp
sub
dec
movsb
push
fcomps
xor
mov
push
fcomip
sti
pop
outsb
cli
incb
mov
in
sub
inc
imul
inc
ljmp
ljmp
push
ret
xchg
and
ljmp
sbb
outsl
lea
fisubs
test
cmpsb
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
jmp
stos
outsb
cmp
fnstsw
lods
sbb
push
adc
jg
jl
mov
xlat
rorl
pusha
fdivl
cmp
fistpl
mov
loopne
add
jg
mov
push
stos
bound
cmpsb
aas
popa
repnz
jmp
rcll
sbb
repz
inc
pop
push
out
mov
fildll
push
cmp
xchg
cli
dec
dec
add
add
fs
push
fs
lea
dec
lock
or
xchg
jnp
mov
add
jg
xor
ljmp
add
pop
push
jns
xchg
in
ret
insb
adc
push
mov
mov
or
out
inc
out
lds
pop
jb
fdivs
sbb
int3
in
out
in
mov
mov
shr
rcrb
insb
movsl
and
inc
sbb
roll
stc
push
test
ret
sbb
shrl
sbb
pop
xor
cmp
sbb
in
fisubs
xor
jnp
pusha
scas
inc
or
imul
xchg
cmp
push
jmp
test
out
add
jmp
cmp
sub
mov
adc
xor
les
js
ja
mov
xor
fsubrl
push
hlt
mov
jmp
or
push
cmp
dec
shll
xor
adc
jl
xor
cld
sahf
rcll
adc
lret
jecxz
arpl
mov
mov
loop
lret
stos
xchg
dec
aam
in
pop
push
jno
sub
sub
arpl
xchg
cmpsl
mov
add
sbb
mov
cwtl
fisttps
ja
ja
mov
int
mov
push
fidivrl
or
negl
dec
mov
cltd
shrl
fxch
mov
cmp
jb
lock
mov
sbb
mov
mov
fidivl
xlat
dec
pop
dec
mov
mov
adc
xlat
sbb
fwait
jae
dec
test
std
adc
xor
and
mov
call
data16
pop
lds
cmp
xchg
pop
ja
mov
or
xor
aas
sbb
dec
gs
jge
stos
cmpsb
ffreep
nop
sub
dec
pop
lcall
stos
ret
and
aaa
adc
adc
sub
adc
add
int3
mov
dec
sarl
outsb
fnstcw
inc
mov
lods
dec
enter
mov
push
pop
xor
xor
add
imul
mov
xor
sub
mov
mov
jmp
push
pop
inc
cmpl
jb
out
add
cmp
xor
jl
push
and
mov
mov
jg
push
outsl
push
xlat
mov
sbb
lret
cmpsb
int
lea
fs
insl
lcall
loop
mov
sbb
movsl
cmpsb
in
jb
popf
push
call
pop
cwtl
ja
fs
mov
push
xor
int3
rcr
repz
dec
loopne
xor
das
stos
iret
jns
dec
sub
adc
in
std
insl
mov
ds
sbb
jnp
adc
sbb
adc
xchg
dec
insl
jae
imul
mov
xchg
mov
dec
repz
dec
rcll
nop
jmp
andl
mov
shll
add
mov
push
cmp
cld
shl
sbb
mov
mov
pushf
pop
adc
addr16
arpl
lock
cmpl
lahf
and
add
sbb
push
mov
sahf
inc
daa
insb
jl
sub
dec
jg
or
xchg
imul
inc
jbe
xor
inc
div
dec
mov
jmp
shl
jmp
mov
cmp
je
imul
add
jae
ds
data16
out
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
jmp
jecxz
out
jge
sti
mov
pop
cmp
popw
jl
xor
jl
jns
inc
mov
mov
and
fcoml
insb
pop
sahf
and
sbb
clc
lret
repnz
xor
es
sbb
cmpsb
or
daa
test
cmp
bound
dec
fisttpll
cmp
inc
xchg
sbb
and
js
mov
clc
std
inc
shrl
aas
or
je
pop
dec
adc
sub
xor
loop
mov
shrb
pop
in
pop
jb
aaa
inc
outsl
addr16
call
inc
xlat
push
xchg
movsl
xor
inc
sub
pop
jbe
cs
cs
daa
inc
adc
fdivl
inc
cmpsb
fdivrl
or
jp
sti
xor
adc
ja
pop
fcmovnu
ffreep
jb
pop
in
outsb
adc
es
subl
jno
push
sbb
jp
mov
xor
cmp
lret
aam
mov
or
mov
jno
sti
xor
jge
pushf
ja
xor
jmp
lret
fisttpll
es
cltd
push
mull
sahf
outsb
adc
fs
xor
lret
mov
and
xchg
add
loopne
sarb
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
adc
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
pushl
call
jmp
movzbl
adc
mov
adc
jmp
shrl
sti
insl
fs
push
fsubs
dec
cmpb
jl
bound
ss
mov
or
sub
sahf
adc
lods
jns
repnz
lcall
dec
push
jl
cli
dec
adcb
sub
out
dec
mov
ljmp
clc
int
out
and
push
lds
lret
mov
fistpl
dec
dec
jne,pn
pop
sahf
dec
fsubs
data16
gs
mov
cmc
rcrb
test
cmp
push
into
pop
pop
inc
pop
fldt
adc
adc
push
sub
leave
push
imul
add
cld
dec
sub
lret
bound
fs
sbb
daa
ja
sub
push
jne
stos
xchg
lret
sarl
jo
pusha
in
addr16
bound
and
lcall
mov
dec
push
pop
fisubl
xchg
dec
xlat
ss
push
arpl
dec
mov
jmp
shl
xchg
fs
jns
adc
jne
mov
jl
bound
cli
inc
mov
aas
sub
push
lret
test
orl
add
ja
gs
jg
ljmp
jle
mov
ds
mov
push
fisubrl
xor
and
xchg
xchg
imul
fwait
pop
inc
cmp
push
sar
mov
outsl
add
add
leave
push
add
pop
enter
ret
ret
xor
or
mov
or
lods
je
sbb
or
xchg
inc
adc
fwait
cmpsl
xor
pop
xor
lods
sarb
push
push
neg
popa
push
or
mov
inc
pop
mov
xor
sarb
loopne
pusha
sub
xchg
mov
aad
sbb
mov
xchg
or
sub
or
repnz
mov
jp
push
out
call
mov
xorl
xor
add
subl
mov
mov
xor
push
addl
mov
mov
subl
add
xorl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
xor
mov
jmp
enter
inc
lea
mov
sub
or
in
push
sub
jl
bound
push
or
es
push
mov
sbbl
xchg
sbb
xchg
mov
jmp
insb
fucomp
push
jl
jo
push
jo
jg
jle
jo
sub
mov
scas
enter
pop
jae
fcos
into
loopne
fidivs
jmp
jae
pop
or
in
and
cltd
and
xchg
push
into
jp
andl
decl
jmp
push
inc
jbe
or
mov
addr16
pop
das
lret
lret
or
cmp
or
int
pop
cmp
dec
push
fstpt
fsubs
push
cmpsb
mov
inc
in
repz
icebp
adc
mov
mov
sbb
pop
adc
jno
dec
pop
test
inc
sbb
dec
adc
mov
call
in
sub
pop
int
div
mov
and
or
mov
pop
ret
push
mov
push
xor
xor
xor
or
sub
sub
movl
movzwl
adc
jmp
insl
je
xchg
jge
fs
mov
jp
sub
jg
jl
jnp
push
loopne
ja
mov
rcll
das
fcoml
shlb
rcll
pop
data16
test
add
andb
cmp
adc
mov
cltd
lea
icebp
mov
inc
roll
outsl
movsl
lcall
test
sbb
mov
lea
shlb
mov
sbb
adc
xor
addr16
loopne
out
cmp
hlt
ljmp
loopne
cwtl
int3
mov
imul
imul
rolb
jmp
xorl
sub
mov
dec
fmul
sub
push
fdivr
jle
jmp
jbe
adc
push
or
xchg
cmc
push
jno
in
push
dec
push
and
push
imul
pushf
push
cmp
jno
xchg
jnp
arpl
lods
aaa
loope
aam
push
lea
jg
data16
std
and
iret
pop
ret
inc
mov
sbb
pop
pop
mov
inc
cld
mov
or
mov
notl
jmp
xor
push
jp
fnstsw
mov
packuswb
jl
pop
out
je
mov
inc
dec
push
mov
shr
scas
popf
fs
jle
sub
pop
daa
cmpsb
pushf
loopne
les
cli
dec
mov
ds
popf
popa
dec
or
mov
dec
in
in
adcl
test
test
insb
push
jne
stc
pop
mov
push
lds
test
popf
sbb
enter
in
inc
cwtl
fistl
push
lods
cld
xor
orb
data16
mov
dec
pusha
hlt
jecxz
pop
push
pop
pushf
mov
inc
repnz
pop
push
enter
test
xchg
daa
imul
dec
imull
xor
sti
sub
roll
add
inc
cmpsl
loop
mov
fadds
into
rcrl
jmp
pop
out
mov
and
sub
adc
imul
int3
push
xchg
pop
xchg
lds
insb
rcrb
mov
mov
mov
andb
nop
dec
cs
test
shlb
lds
in
inc
imul
sahf
jb
add
add
neg
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
mov
mov
mov
mov
mov
mov
jmp
in
insl
push
jge
imul
mov
or
sub
jl
jg
jl
pop
adc
out
adc
sub
fcomi
lds
daa
call
pop
mov
jo
mov
mov
mov
push
test
or
sbb
repnz
imul
mov
xor
add
int3
in
mov
subb
xchg
imul
fcomps
icebp
push
insw
sbb
jp
mov
fcoms
sub
jecxz
xor
mov
mov
push
jne
cmp
lds
in
fs
lods
call
sbb
dec
cmp
dec
loopne
das
xor
cli
movsl
mov
mov
lcall
jmp
sbbb
mov
push
test
dec
cmc
xchg
pop
inc
stos
push
pusha
push
dec
and
adc
xchg
mov
push
jnp
pop
out
xchg
push
call
lods
js
ljmp
scas
and
insb
cmp
push
cli
int3
cli
sbb
mov
mov
mov
mov
mov
mov
test
jmp
pop
loope
sbb
lret
mov
movsl
in
xchg
das
jl
sbb
jl
jge
push
gs
pop
lea
enter
push
pop
addr16
repz
test
dec
fucomp
lahf
push
jbe
jmp
rcl
push
movsb
pop
sbb
stc
cmp
xchg
arpl
pop
adc
cmp
movsb
mov
lcall
mov
adc
dec
adc
pop
int3
xchg
movl
aam
clc
lds
mov
mov
pcmpgtw
push
cmpsl
xchg
dec
dec
mov
pusha
jp
pop
push
mov
lods
sarb
pushf
fstps
xor
mov
cmc
aam
adc
jl
fisubrl
scas
mov
and
mov
fstpl
out
lods
repz
sbb
add
or
mov
cli
jo
loope
push
inc
or
pop
jno
cli
fcomi
sbb
and
jae
inc
out
sbb
cmpxchg
jb
stc
es
lds
mov
xlat
dec
inc
orb
shlb
rol
andl
data16
mov
push
xor
rcl
or
add
sti
dec
aad
mov
jne
mov
xor
add
leave
ret
push
mov
sub
adcl
jmp
or
dec
or
dec
aad
aas
adc
lock
pop
hlt
subb
jl
jg
jl
ljmp
pushf
xlat
pop
pop
loop
mov
add
dec
in
xchg
add
lret
jo
inc
in
lock
xor
cltd
dec
scas
mov
es
sub
mov
mov
and
mov
in
movsb
jg
push
stc
mov
cmpsb
les
ds
les
sbb
cmpsl
xchg
dec
dec
ret
daa
negl
outsl
sbb
aam
pop
mov
iret
outsl
inc
push
inc
adc
mov
lret
fmull
out
mov
jnp
mov
add
inc
das
jne
inc
mov
loop
shl
jns
icebp
push
jge
inc
mov
xor
in
mov
xor
fldt
or
xchg
enter
lea
mov
imul
mov
lods
or
xor
les
lea
mov
ret
jmp
mov
mull
or
pop
in
mov
inc
lock
subl
mov
neg
movl
adc
movl
mov
xorl
push
orl
push
adc
push
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
out
sub
sub
jmp
test
mov
or
jmp
hlt
add
leave
sbb
ret
in
pop
lods
sub
pop
movsb
les
cmp
outsl
fs
mov
jo
push
stos
mov
sbbl
xchg
idiv
jmp
fists
adc
push
es
mov
sbb
cmp
fimuls
mov
lods
aaa
stos
jecxz
roll
sbb
outsw
mov
inc
cld
insb
xor
xchg
das
lcall
lods
int
pmaxsw
sar
mov
aaa
push
stos
sbb
xchg
fisubrs
add
aas
sbb
pop
push
inc
sbb
rep
mov
sub
iret
out
daa
xlat
addr16
loope
mov
hlt
push
rolb
data16
jmp
dec
or
lods
enter
pop
jmp
mov
mov
inc
into
in
frstor
popa
js
into
push
inc
and
jge
and
lods
adc
ret
imul
out
sub
xor
movzwl
xor
mov
jmp
icebp
popa
jno
loope
mov
add
push
xchg
mov
scas
and
jg
jl
dec
push
popa
in
cs
inc
cmpl
xchg
rcrb
adcb
add
aaa
sbb
cmp
shrl
in
inc
mov
insl
test
mov
aam
cwtl
fcmovb
xor
pop
shrl
xor
mov
fistl
mov
mov
mov
add
xchg
mov
xchg
shrl
sbb
jmp
rolb
fwait
inc
mov
pop
aas
lcall
mov
cmc
clc
xchg
xor
ss
mov
inc
ret
pop
adcb
xchg
fwait
repnz
ja
jmp
mov
fiadds
mov
dec
cli
mov
pop
jb
call
in
sahf
inc
pop
jmp
in
push
in
ror
js
push
outsl
pop
dec
or
adc
sub
pop
lea
aad
fstl
int
and
inc
loop
sahf
iret
sub
sbb
adc
sbb
sbb
dec
add
enter
xor
xchg
jne
jge
test
hlt
jg
cmc
addr16
add
mov
movl
cmpl
je
cmpl
jne
push
call
xor
or
dec
mov
jmp
movl
movl
movl
movl
or
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
call
jmp
xor
mov
addl
xor
sbbl
add
mov
orl
movl
movb
or
mov
xor
add
sbbl
mov
decl
mov
xor
adcl
add
xorl
push
mov
xor
sbbl
add
xorl
push
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movzbl
xor
mov
negl
xor
add
orl
jmp
sarl
sarl
sub
push
or
or
xor
lret
xchg
shl
loop
ljmp
ja
std
vminss
int3
add
imul
push
cmp
pop
adc
lahf
cmp
pop
and
hlt
std
testb
mov
stc
cmp
sub
leave
insl
add
int
push
ret
repz
sbb
fdivrl
mov
sti
fnsave
ficomps
call
and
loop
pop
adc
sub
jae
fistpl
adc
xor
adc
sbb
shlb
adc
mov
push
inc
test
cmp
jge
inc
jecxz
or
cmp
jmp
cmpsb
mov
xchg
je
arpl
push
outsb
sub
out
ss
inc
sti
pop
push
pop
mov
xorb
mov
idivl
fwait
sbb
insl
fsubrs
dec
aam
mov
pop
test
addl
push
orl
pushl
addl
jmp
push
repz
adc
mov
dec
and
jg
jl
or
mov
rolb
imul
mov
call
rorb
fildl
sahf
inc
dec
and
mov
push
jnp
push
or
cli
cmp
cmp
adc
gs
outsb
adc
cld
jns
pop
and
xlat
mov
push
mov
cltd
xchg
loopne
aad
jg
sbb
out
movsl
adc
and
pop
fs
cmpsl
icebp
jb
dec
fmull
cmp
xchg
inc
adc
shl
fisubrl
jecxz
mov
mov
aam
mov
or
ds
bound
arpl
loop
mov
inc
arpl
enter
or
jne
call
stos
int
rcrb
bound
lahf
sti
pop
jnp
lock
dec
jns
sarw
sbb
adcl
test
push
dec
push
mov
mov
idiv
push
mov
jae
xchg
inc
shll
es
xchg
pushl
jmp
xchg
pop
cmpsl
inc
adc
sub
mov
jl
or
aam
idivl
stc
test
subl
outsb
mov
scas
std
mul
push
test
aas
gs
rclb
mov
jg
mov
cs
std
les
out
jp
movsl
js
popf
pop
aam
insl
ljmp
mov
dec
sub
sub
iret
out
aam
sti
push
mov
push
push
fidivs
jl
ds
ret
test
pop
inc
mov
mov
jle
in
sbb
push
adc
clc
xlat
mov
scas
cmp
leave
xchg
xor
aaa
adc
pop
mov
or
cmp
imul
scas
lds
push
test
adc
mov
add
frstor
jmp
in
inc
xor
in
mov
push
mov
xor
int
fwait
sbb
pop
cmpsl
adc
sbb
xchg
cli
lret
push
aas
mov
into
jnp
repz
call
cmpsb
popf
dec
inc
add
call
test
je
sbbl
lea
push
mov
xor
add
push
mov
jmp
dec
add
cmpl
fnsave
xchg
mov
mov
and
jl
jg
jl
sbb
cmpsb
pop
xchg
sub
test
dec
jne,pt
test
xor
jmp
aas
fsts
rclb
orl
int3
aas
and
int
inc
sti
mov
test
jle
dec
and
pop
sahf
push
arpl
inc
lahf
test
and
jmp
jns
pop
in
adc
jo
add
add
sti
or
clc
in
imul
jg
mov
es
sub
xchg
push
mov
faddl
insl
jbe
adc
lock
out
xchg
pop
daa
inc
xor
pop
rolb
dec
xor
gs
sub
mov
mov
push
popf
loopne
jg
loop
sbb
gs
push
scas
bound
int3
mov
inc
pop
pop
ret
fnsave
stc
jg
dec
sbb
mov
xchg
sbb
inc
adc
jns
stos
stos
dec
bound
xor
je
dec
or
push
jecxz
and
roll
outsb
pusha
push
sbb
add
push
jmp
sub
jge
jge
fnstenv
mov
or
repnz
rcrl
push
and
lret
mov
rcrb
and
and
stc
out
addr16
jl
dec
jge
cld
outsb
sbb
cmp
dec
fnstsw
insl
lret
pop
fldcw
negb
sti
fwait
in
adc
stos
xchg
push
lcall
push
xor
addb
mov
and
jb
mov
mov
mov
and
and
fxtract
daa
out
gs
cwtl
jne
sbb
arpl
arpl
cmpsl
or
push
test
fidivrl
xor
xlat
out
xor
mov
scas
fnsave
repz
repnz
mov
adcl
enter
shrb
push
xchg
out
jmp
jmp
pop
in
shrb
adc
and
push
daa
or
mov
insl
dec
in
dec
leave
cs
stc
js
fimull
movb
xchg
sbb
inc
lock
jmp
shr
dec
pop
pop
jns
insl
adc
loop
xor
cmp
jg
jl
lahf
mov
pusha
mov
orl
jnp
sub
fcomp
dec
sbb
xor
mov
and
popf
loopne
insl
imul
aaa
jo
inc
mov
jmp
sbb
push
jle
xlat
push
cwtl
outsl
test
daa
std
in
push
mov
fsubrs
dec
test
pop
nop
fwait
cmpsl
cmp
fdivrs
int3
add
rorb
loop
out
xchg
dec
imul
test
pop
test
inc
mov
in
inc
repz
pop
cmc
sub
pop
int3
ds
push
ret
mov
cmp
jle
or
mov
rclb
jle
adc
pop
inc
clc
je
rorl
mov
jecxz
ja
negl
mov
sub
pop
scas
fwait
mov
sbb
ss
out
cltd
idiv
jo
xchg
lcall
cmp
sub
xor
subl
xor
mov
push
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
jmp
xor
mov
and
rorb
sbb
jl
or
divl
adc
out
stos
mov
jb
pop
daa
xchg
add
or
pop
nop
cmc
addr16
clc
mov
jbe
jmp
ficoml
aad
iret
cli
pop
enter
xchg
movsl
fsubp
test
fcmovne
in
add
add
shld
fnsave
movsl
mov
add
negb
inc
hlt
mov
mov
or
dec
mov
dec
outsl
nop
cld
popa
xor
pusha
jmp
push
push
out
xchg
jnp
mov
mov
jl
push
jp
push
xchg
xor
nop
inc
jp
insb
fsubrs
xlat
push
jmp
movsl
stos
xchg
mov
and
add
and
add
cmc
and
andl
jae
jnp
mov
iret
dec
rolb
out
mov
test
xchg
jl
inc
mov
or
push
fdivp
in
cmpsb
pop
pop
add
mov
movsl
decl
mov
sub
jmp
or
and
jnp
jnp
gs
push
and
in
push
cmp
jg
jl
lods
xchg
sbb
shl
ficompl
pusha
pop
xchg
repnz
daa
add
pop
xchg
in
js
sbb
jb
fsts
cmpl
jp
out
mov
mov
stos
push
jno
inc
jno
imul
in
xlat
mov
stos
xchg
add
pop
push
push
mov
ret
pop
jne
push
das
xchg
dec
or
cmpb
jl
or
test
push
mov
mov
xor
push
cs
jae
stos
push
mov
dec
orb
pop
pushf
ret
jge
pop
xchg
sbb
sbb
jmp
inc
push
pushf
push
aaa
adcl
mov
xchg
ljmp
cmp
in
mov
je
rcll
fisubrl
and
sub
in
mov
push
xchg
pop
lcall
cmp
out
push
xlat
xor
xlat
jnp
sub
pop
jae
mov
and
fisubrl
pop
pop
inc
pop
arpl
inc
clc
mov
add
jmp
xchg
out
std
push
gs
repz
incb
cmp
jg
jl
lahf
or
pop
xchg
cld
cmp
push
mov
movsl
cmp
and
jmp
xor
push
addr16
cmp
mov
cmp
mov
gs
sub
sbb
lahf
cmpb
test
xchg
stc
loopne
arpl
mov
sub
sub
fisubrs
xor
fiaddl
fadds
cld
mov
mov
nop
push
adc
xor
lret
mov
int3
mov
push
mov
mov
insl
mov
test
or
mov
hlt
add
add
sbb
xor
lods
xor
inc
clc
clc
mov
hlt
lret
adc
testl
mov
leave
cmp
movsl
out
sahf
lods
ret
fwait
jne
fstpt
push
call
int3
lea
idivl
mov
lock
loopne
cmp
xchg
mov
jb
inc
cld
stc
lret
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
jmp
scas
stos
fs
js
addr16
movsb
and
sbb
jl
cmp
adc
push
adc
movsb
in
ret
movsb
cltd
sbb
sbb
mov
subl
fsubs
leave
mov
stc
rcrb
stos
mov
xor
pop
mov
mov
rorb
mov
pop
das
popa
repnz
and
popa
pusha
mov
ja
imul
mov
lods
leave
cmp
inc
inc
fbstp
jmp
xchg
adc
jle
loope
dec
scas
mov
or
add
test
mov
movsl
push
popa
ljmp
push
mov
stos
scas
dec
mov
jecxz
loop
pusha
fisttpll
ja
mov
xchg
out
movsb
and
mov
nop
cmp
sub
in
sbb
adc
mov
add
or
enter
xor
xchg
insb
dec
mov
dec
jl
bound
call
ds
popf
out
cltd
push
pop
add
lcall
jmp
adc
pop
daa
inc
mov
and
inc
add
xor
add
xor
add
xor
daa
add
add
lret
mov
insl
lods
test
xchg
or
cmp
jl
jg
jl
lock
popa
pop
xchg
xchg
in
orb
xchg
cmp
xchg
shr
loop
test
push
inc
xor
cmp
mov
loope
push
enter
repz
shlb
and
ljmp
arpl
fimuls
pop
jl
or
add
fidivs
jne
cmp
nop
repz
mov
jb
outsl
testb
sub
fnstsw
dec
imul
mov
cltd
int
repz
sti
jmp
xor
enter
xchg
imul
mov
jg,pn
mov
rorl
daa
fdivs
or
jo
sub
sahf
lods
sti
pop
sbb
fsubl
inc
std
gs
mov
add
in
mov
jmp
jae
inc
jmp
xchg
lahf
dec
nop
adc
pusha
lods
dec
stos
push
movsb
xlat
dec
jle
push
xchg
pop
fucomp
jle
fadd
sub
jbe
or
pop
fwait
lds
dec
ja
lock
xor
pop
loop
jo
push
dec
adc
sub
push
pop
call
mov
mov
jmp
gs
add
jge
jecxz
stos
insb
sbb
aas
jl
or
adc
inc
pop
cmp
stc
or
fmull
or
jg
out
fnsave
sbb
sub
inc
insl
xchg
jge
and
dec
es
sbb
mov
jecxz
inc
sub
sahf
or
js
cwtl
mov
test
adc
push
outsb
pop
pop
xchg
xor
stos
and
sbb
mov
mov
ficoml
orb
sub
loopne
popf
jae
loopne
jmp
mov
pop
xchg
mov
jmp
add
cs
dec
sbb
sub
mulb
mov
pop
neg
jmp
xor
inc
push
inc
and
cmpsb
mov
xlat
ljmp
add
sub
jg
sbb
add
push
xchg
fildl
add
stos
xlat
or
xor
dec
lahf
sarl
xchg
push
hlt
xor
shlb
ffreep
or
loopne
add
jae
data16
pop
scas
sub
or
pop
leave
ret
push
mov
sub
xor
movl
movl
orl
jmp
push
repz
pop
stos
lea
nop
push
push
push
repnz
jecxz
jl
push
jg
jl
jl
xor
xor
and
cmc
je
inc
out
clc
cmp
cmp
mov
iret
push
mov
popa
fwait
mov
scas
shrb
adc
add
fists
test
das
les
and
push
scas
cwtl
mov
sub
into
add
jmp
dec
cmp
mov
xlat
daa
ror
mov
jb
add
lods
outsb
mov
movsl
cmpsl
mov
nop
jl
pop
sbb
add
je
add
in
cmp
clc
outsb
adc
sbb
nop
sarl
int3
or
mov
fidivs
in
ret
stc
xor
xor
add
je
mov
xchg
ss
frstor
sub
sub
jbe
jo
sbb
cmp
dec
cmp
jb
push
cmpsl
dec
aas
jge
jle
lcall
mov
jecxz
or
xchg
xor
icebp
rcrl
xchg
das
pop
xlat
add
cmp
jns
out
sbb
add
add
add
add
add
or
cmpl
jne
push
call
cmpl
jb
orl
mov
xorl
lea
and
jmp
divl
test
pop
jnp
js
ds
mov
lea
jl
push
jg
jl
and
jae
push
outsb
sti
add
mov
mov
jb
fptan
push
aam
xor
dec
mov
mov
int3
ja
xor
mov
push
pop
std
adcl
ficoml
or
inc
repnz
adcl
inc
and
inc
jp
js
or
pmullw
xor
pop
mov
gs
and
inc
cmp
je
enter
xchg
out
and
loopne
sbbb
pop
mov
and
imull
add
and
orl
push
je
hlt
mov
insl
adc
sub
sub
fwait
sub
xor
inc
popa
push
rcr
push
shl
cmp
xchg
mov
pop
fs
adcl
push
lods
loopne
int
addr16
int3
sar
xor
pop
push
jp
adc
xchg
sub
mov
lret
fwait
cwtl
push
stos
mov
mov
lds
aas
sub
and
movnti
mov
jmp
movsb
flds
xor
aas
push
xchg
xor
jg
jl
aaa
cmp
xchg
jo
call
fisttpl
pop
jmp
cmp
cld
cmc
and
sbb
sbb
inc
lds
mov
mov
ret
jns
sbb
in
call
or
jge
les
rorl
repz
out
jecxz
gs
mov
xchg
jb
nop
sub
push
lret
sahf
shll
out
fdivs
sub
adc
ss
pop
shrl
movsl
outsb
sbb
or
xlat
mov
mov
or
sub
jl
xchg
sub
sbb
jnp
jnp
pop
mov
xchg
int3
or
movsb
cmp
bound
gs
xchg
mov
mov
or
xchg
cli
pusha
dec
cmp
or
mov
rolb
pop
add
arpl
jg
push
ja
test
fidivl
xchg
xlat
icebp
push
xchg
mov
aas
mov
insb
test
fsubs
icebp
xchg
int
cmc
add
pop
out
pop
add
xor
mov
add
mov
sbb
push
lea
mov
mov
adc
push
push
mov
orl
mov
mov
mov
and
mov
xor
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
adcl
jmp
adc
in
data16
mov
dec
movsb
xchg
pusha
mov
jl
push
jg
jl
sbb
xchg
xchg
inc
in
testb
scas
and
mov
fldenv
push
in
adc
mov
sub
nop
jle
mov
clc
addr16
int3
je
test
stos
xor
arpl
cmp
into
xchg
cmp
add
mov
and
mov
jne
pop
stc
sub
mov
or
pushf
test
xchg
je
inc
nop
xchg
sub
sub
or
mov
in
jnp
scas
push
add
fwait
test
adc
test
jns
dec
dec
icebp
sub
mov
aaa
stos
pop
jns
popa
and
sahf
or
gs
jo
adc
jno
nop
int3
gs
popf
out
arpl
jp
push
xchg
test
clc
xchg
sub
inc
fwait
mov
sub
push
adc
push
aad
mov
sbb
outsl
jmp
inc
jge
cli
or
xchg
push
jecxz
pusha
fcomi
lcall
ret
leave
cwtl
mov
mov
mov
mov
xor
movl
xor
addl
add
andl
add
movl
jmp
ss
call
pop
fcom
xor
lret
sub
jl
jg
jl
jb
insl
sbb
inc
lcall
negl
stos
hlt
add
xchg
pop
xchg
decb
cli
adc
faddl
decl
push
push
cmp
movsl
or
adc
test
out
movsl
test
dec
adcl
jb
sbb
shrb
andb
push
das
into
mov
add
push
inc
and
out
out
movl
cmp
shll
dec
das
faddl
int
stos
add
or
push
lahf
insb
pop
add
inc
and
xor
adc
or
jo
xor
stc
loop
cwtl
push
sbb
rolb
push
pop
js
and
out
mov
sbb
stc
push
outsb
test
mov
adc
or
pop
es
arpl
into
push
outsl
mov
and
or
jbe
jbe
add
inc
dec
add
and
out
pop
and
decb
insb
xchg
jp
in
inc
and
repz
mov
movl
movl
cmp
je
mov
and
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
push
push
pushl
call
cmpl
jb
lea
mov
xor
xor
mov
sub
xor
jmp
lea
mov
std
inc
nop
jne
mov
jl
jg
jl
adc
push
sub
aas
mov
test
cmp
pop
jns
fsubl
xor
iret
fwait
sbb
pop
sub
xchg
or
mov
sub
jecxz
mov
ret
arpl
mov
gs
lds
sarl
push
sbb
ja
jae
jl
cwtl
sbb
xchg
lea
cmc
sbb
inc
aam
loop
adc
repz
testl
jp
popf
sahf
and
dec
pop
rcll
mov
lea
add
mov
mov
stos
not
dec
lahf
ljmp
xor
cmp
cld
cmc
inc
cmp
inc
mov
adc
lock
pop
dec
enter
pop
or
iret
sub
inc
jge
sub
jg
mov
stc
jnp
jns
add
in
sbb
je
outsb
jmp
bnd
imulb
lods
inc
xorl
xlat
psubd
leave
xor
icebp
mov
cltd
mov
mov
push
push
and
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
imul
mov
mov
cmp
je
mov
jmp
fsubs
jp
jp
mov
xchg
ffreep
std
mov
getsec
jl
push
jg
jl
pop
add
aas
repz
mov
add
or
sbb
add
jns
dec
mov
and
ret
popf
push
nop
cmpsb
es
cmpb
int3
push
jo
test
fistl
mov
addr16
mov
enter
cwtl
inc
jns
mov
push
cmp
cmp
aad
push
sbb
sbb
pop
dec
movsb
dec
xchg
sbb
and
dec
add
lds
sbb
repz
adc
out
mov
xchg
incb
lds
inc
pushf
xor
xchg
popa
jns
xor
movsb
pop
cmc
add
xchg
xchg
jb
js
mov
jp
mov
enter
ret
add
sahf
xchg
pop
dec
adc
adc
jb
xor
popf
push
sbbl
stc
inc
jmp
int
out
fimull
sub
scas
pop
call
cs
jl
pop
jne
outsl
pop
in
xor
pop
out
ss
rcrl
xchg
xor
mov
sahf
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
jmp
jnp
lds
cmp
adc
sub
jl
push
jg
jl
gs
in
rolb
cmpsl
aas
push
lea
xchg
mov
push
push
push
fs
inc
or
sahf
cmc
xchg
lods
jb
sets
cmc
cmp
imul
test
icebp
btl
shrb
movsl
jl
dec
push
mov
ret
pop
dec
jb
inc
xchg
je
mov
cmc
ftst
and
adc
jp
or
cmp
mov
pop
imul
add
cmpsb
aas
push
stos
or
aaa
addb
pop
dec
arpl
pop
pop
sbb
ds
scas
movsb
ds
shrb
xchg
adc
cmp
add
inc
ljmp
imull
mov
pop
jl
fimuls
out
divb
push
js
mov
sub
mov
pop
adc
sub
xor
fildl
push
add
inc
jge
enter
jp
cli
lahf
or
insl
in
and
iret
test
cld
in
popa
pushf
in
cmc
cmp
fs
insb
jns
fwait
mov
mov
stc
scas
jp
inc
hlt
mov
or
cmp
je
mov
jmp
push
add
jge
jnp
and
in
and
push
jg
jl
cmpsb
enter
fmull
xor
pushf
jmp
je
ds
or
inc
mov
pop
mov
xchg
mov
inc
popf
mov
std
ljmpw
inc
scas
cs
mulb
adc
out
clc
jne
ret
fistpll
mov
and
fcmovnu
jl
inc
cwtl
jge
hlt
jne
adc
mov
jle
mov
data16
scas
sbb
sbb
fs
mov
dec
ds
jmp
sbb
sub
shlb
movl
sub
adcb
jo
aas
sbb
stos
jbe
call
mov
mov
sbb
fisttpl
sub
sub
pop
cmp
cmc
inc
dec
and
repnz
inc
clc
cmpsl
mov
jg
lods
mov
popa
rorb
sbb
adc
clc
sub
mov
outsl
adc
lea
pop
cmc
test
xchg
inc
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
jmp
pop
fst
jge
out
jnp
inc
sub
mov
jl
push
jg
jl
adcb
fldt
cmp
in
arpl
lods
mov
insb
push
mov
add
popf
shll
inc
lea
add
sub
ljmp
les
or
leave
int
mov
mov
and
inc
mov
js
arpl
jno
adcl
and
sub
sbb
dec
insb
je
mov
les
fdivrl
fwait
mov
shlb
lret
out
xchg
inc
sbb
shrb
es
adc
daa
pop
stos
pop
cltd
repz
int3
and
subl
je
arpl
bound
mov
pop
push
insl
jo
outsb
mov
xchg
add
lcall
inc
or
add
jge
lcall
mov
sbb
ret
sub
push
cmp
xchg
jo
orb
inc
pop
cmp
mov
outsl
add
in
add
adc
les
or
pop
cmp
jbe
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
push
xor
push
movl
sub
movl
xor
or
sbb
mov
mov
decl
push
addl
mov
xor
mov
xor
adcl
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
add
jmp
xchg
and
and
out
mov
push
lret
jl
mov
xlat
inc
xor
pushf
jecxz
pop
sub
xor
xor
test
sbb
add
jnp
dec
pop
xchg
mov
pop
xor
mov
mov
xor
loopne
fcomps
faddl
adc
dec
adc
rorl
lret
inc
mov
mov
fisttps
mov
sahf
push
aaa
ss
jns
xlat
std
xchg
jnp
nop
mov
fstl
cmpsb
ds
xor
rorl
mov
movl
cmp
jne
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
jmp
mov
jns
std
ficomps
jo
adc
jl
mov
decb
sbb
test
into
lahf
lods
test
out
cmp
or
nop
out
jl
inc
mov
fisubrl
in
popf
mov
fs
xchg
xchg
pop
cld
mov
mov
and
insl
inc
add
or
insl
push
lahf
test
aas
pop
mov
dec
or
sti
lret
stos
repnz
push
movsb
stos
push
js
les
filds
or
jg
push
adc
call
pop
xlat
leave
pop
fcomps
jb
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
xorl
call
adcl
test
movl
je
orl
xor
jmp
subl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
orl
mov
movl
push
push
push
call
movl
cmp
je
orl
push
addl
push
adcl
push
adcl
push
sbbl
push
push
call
jmp
or
mov
and
mov
sub
movl
lea
adc
mov
add
lea
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
movzwl
sbb
mov
mov
xor
mov
movl
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
orl
push
movzbl
sub
mov
mov
movl
xor
subl
push
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
add
mov
movzbl
mov
cmp
movl
mov
movl
je
neg
mov
xor
add
imul
mov
jmp
xor
xor
add
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
call
cmpl
jb
mov
mov
xor
inc
add
movzbl
sub
mov
mov
mov
orl
mov
sbbl
xor
sbbl
add
movl
cmp
jne
mov
sbb
mov
xor
add
mov
sub
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
xor
mov
mov
orl
mov
mov
xor
xor
dec
add
sbb
mov
add
lea
dec
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
and
mov
adc
mov
sub
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movzwl
and
add
adcl
mov
mov
lea
or
mov
add
mov
sub
mov
xor
adc
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
subl
mov
sbb
movl
xor
mov
xor
mov
movzwl
xor
add
movl
mov
sub
mov
xor
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
add
movl
cmp
movl
jne
movzbl
adc
mov
mov
mov
orl
xor
orl
add
movl
cmp
jne
dec
mov
sbbl
mov
adc
xor
xorl
add
movzwl
sbb
mov
dec
mov
mov
sbb
xor
adc
mov
sbbl
sub
add
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
mov
cmp
je
mov
movl
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
jmp
mov
cmp
jne
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
add
mov
sub
mov
addl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
movzwl
sub
mov
movb
lea
mov
and
jmp
mov
icebp
test
stos
mov
cmp
daa
jg
jl
les
pop
lret
cmc
sbb
or
xchg
fidivrs
stos
out
test
mov
out
scas
mov
scas
mov
adc
jns
jecxz
lea
dec
xor
adc
mov
stos
mov
in
mov
inc
dec
pushf
mov
or
mov
pop
lods
jae
imul
jg
pop
ss
pop
push
adc
dec
push
add
ret
hlt
sub
jo
sbb
lods
adc
aas
inc
ss
mov
scas
call
sub
push
mov
push
push
loope
sbb
dec
lods
daa
iret
jg
nop
dec
mov
pushf
mulb
orl
cmp
mov
add
mov
imul
mov
in
lds
imul
push
sub
xor
mov
dec
lret
outsb
or
bound
aaa
xor
adc
repnz
mov
cmpsl
rcrb
or
and
xchg
xchg
push
daa
push
mov
dec
cltd
add
scas
mov
pop
inc
push
in
lods
fldln2
stc
stc
data16
dec
inc
push
jl
push
mov
xorl
mov
andl
xor
sub
movl
mov
sbbl
movl
movl
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
call
cmpl
jb
xor
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
jmp
xor
mov
add
jmp
movl
mov
movl
mov
inc
movl
cmp
jb
mov
xorl
mov
addl
jmp
cmp
bound
push
pop
jmp
adc
call
int
jl
jg
jl
mov
inc
sbb
mov
pop
jb
repnz
mov
push
inc
dec
inc
insl
lea
imul
mov
out
insl
test
push
call
dec
sub
stos
les
push
ficoml
shll
cmp
jae
fnstsw
mov
test
loop
mov
lret
inc
xor
pop
push
sub
fildl
in
inc
addr16
push
shlb
cmp
cltd
sbb
xchg
out
xchg
jp
mov
push
sti
stos
js
fcmovnb
es
xor
dec
mov
leave
jge
repz
xor
xchg
push
jmp
mov
lock
jle
xchg
hlt
inc
or
mov
jg
mov
mov
popf
mov
mov
sbb
pushf
mov
jecxz
imul
bound
adc
adc
cmp
mov
pop
pushf
adc
pop
fildll
fwait
mov
lahf
movsl
add
cmp
pop
scas
jl
sbb
dec
xor
outsb
icebp
lret
add
dec
test
mov
test
icebp
xchg
adc
mov
xor
add
movl
cmp
movl
je
addl
push
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
jmp
push
ss
std
push
jge
pop
add
or
push
jno
jl
daa
jg
jl
divl
ret
leave
mov
insb
xor
cmp
dec
pop
jmp
lahf
scas
lock
test
fsubs
lods
mov
jg
inc
jns
mov
and
mov
push
sub
repz
inc
mov
repnz
addl
pop
mov
cmp
mov
pop
pop
and
mov
push
dec
dec
push
push
neg
xor
pop
pop
int3
data16
movsl
jg
jb
cmc
jg
daa
mov
mov
push
mov
xor
sub
mov
cli
test
fdivrs
add
pop
fistpl
jae
add
fisubrl
filds
sub
mov
mov
lods
cltd
enter
add
out
sub
pop
int
mov
ljmp
ret
sarb
or
inc
fisubrl
data16
shll
pop
sahf
dec
ret
cmp
lahf
or
mov
push
loop
enter
aas
int
inc
cmpsb
ret
enter
xor
jle
jb
xor
mov
dec
mov
push
aad
call
jge
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
jmp
add
clc
pop
clc
sbb
sti
insl
sbb
fstpl
cmp
jl
daa
jg
jl
fstl
mov
jne
xchg
pop
and
sub
mov
pop
or
add
cmp
xor
and
xlat
mov
jae
lock
sbb
mov
sbb
test
cmp
mov
cmpl
push
dec
gs
cmc
pop
cmp
xchg
ja
rclb
ret
xchg
dec
es
push
enter
jae
add
mov
ljmp
out
stos
push
pusha
adc
adc
push
in
cwtl
dec
mov
sbb
pusha
jns
lret
and
popf
out
inc
lods
or
iret
out
divl
lcall
lock
inc
push
mov
add
inc
xor
inc
mov
scas
fucom
adc
cltd
mov
mov
aas
ljmp
jg
stos
lds
mov
aas
push
dec
imul
bound
shll
xor
cs
pop
cltd
aam
mul
xor
outsl
pop
jno
sub
clc
mov
scas
xchg
xchg
out
cli
jmp
ret
lea
pop
out
jmp
std
add
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
sub
mov
jmp
push
xchg
fs
fs
data16
pop
push
es
jl
lret
jl
ljmp
xchg
subb
gs
inc
ss
push
into
pop
push
cwtl
jmp
ds
mov
inc
stos
je
shr
jb
repnz
mov
loope
add
or
lahf
cmp
cmc
mov
jmp
mov
fstl
dec
fwait
xor
fs
sub
sbb
push
xchg
or
test
sahf
loopne
push
test
mov
hlt
add
pop
and
jle
std
jl
jmp
xchg
movsb
out
inc
shlb
lahf
mov
lcall
into
or
sub
push
mov
pop
add
call
fs
mov
pop
and
cwtl
imul
mov
xchg
and
jge
xlat
shrb
mov
sahf
aad
jno
sub
dec
sub
push
js,pn
or
pop
cmp
sub
lret
adc
and
mov
fwait
inc
les
mov
call
mov
cld
pop
jns
adcl
or
nop
xchg
insl
loop
fwait
hlt
cld
int
mov
iret
add
insl
cmpsl
ficompl
mov
stos
fcoms
in
add
add
cmpsb
inc
add
add
add
bound
arpl
cltd
jp
fldenv
mov
jl
lret
jl
mov
sarl
xchg
test
mov
in
sahf
inc
pop
in
ja
cld
je
jp
sub
rolb
fimull
xlat
addr16
mov
xor
jmp
add
jbe
xor
and
cmc
mov
adc
jbe
cli
push
rclb
je
rorb
lret
pop
cmp
fisubl
inc
adc
dec
adc
jg
push
shrl
sub
sbb
in
mov
mov
test
xor
je
hlt
xor
ja
fdivr
lods
movsl
xor
cltd
repz
mov
mov
cmp
out
adc
and
pop
jmp
ror
push
pop
or
cmpb
push
xchg
jp
in
je
repz
negb
mov
sub
lret
pusha
cltd
in
cmp
outsb
sahf
adc
shl
movsl
scas
lret
pop
ret
mov
cmp
stos
daa
cmpsb
insl
cltd
sarb
ds
int3
sub
aas
scas
xchg
shr
xchg
lcall
loopne
xlat
mov
fdivrl
sbb
inc
popf
sbb
pop
sahf
push
fwait
hlt
inc
push
push
mov
jp
movsb
fsts
cmp
movl
jne
or
mov
mov
adcl
add
mov
xor
or
sub
and
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
mov
xor
push
mov
mov
add
cmp
jmp
mov
mov
test
cmpps
jl
out
lods
mov
stos
or
fs
test
xchg
in
lret
jnp
or
xor
icebp
mov
pushf
testl
jg
in
dec
rcr
cltd
stos
jb
and
loop
int3
test
add
insb
push
xchg
outsb
lock
sti
push
dec
mov
in
lret
sti
in
push
inc
add
repz
clc
pop
in
call
lock
or
cwtl
pop
xchg
dec
ret
fs
pop
outsb
jbe
add
dec
pusha
push
and
orl
stos
mov
lea
test
mov
pop
add
mov
mov
inc
cmp
loop
out
iret
add
ljmp
pop
lret
stc
cwtl
jns
mov
jb
iret
xorb
pop
or
incl
outsl
xor
rcl
mov
inc
shlb
mov
mov
sbb
mov
push
imul
adc
jmp
xchg
dec
mov
int3
scas
adc
add
sti
fmuls
dec
popf
dec
jnp
mov
gs
insl
sub
adc
dec
pop
adc
les
pop
add
pop
je
mov
jmp
jmp
xchg
test
loopne
bound
add
aad
adc
lds
jg
jl
xchg
andl
sbb
stos
icebp
push
dec
mov
aad
out
sqrtps
sub
int
add
xchg
lahf
adc
in
lahf
push
sti
out
add
adc
subb
xor
sti
test
ljmp
cmp
add
fnsave
fisubrs
xchg
clc
inc
mov
iret
xor
xorl
iret
test
ja
mov
adc
fwait
lea
lret
pop
and
cmp
adc
and
cmp
ret
push
jmp
sub
stos
lret
xlat
lcall
add
cmp
mov
jp
mov
pop
jnp
xor
in
jle
ret
mov
push
movsb
mov
movsl
scas
add
hlt
addr16
daa
in
xor
aas
lods
jg
addb
nop
dec
mov
in
sbb
xor
sub
fdivl
and
mov
pop
sbb
push
cmp
jnp
sbb
jge
add
gs
cmpsl
test
in
xchg
inc
mov
in
push
lret
sbb
orb
int3
pop
inc
jle
sbb
jb
mov
add
add
push
fs
jge
faddp
movsb
in
stos
les
jg
jl
push
js
sub
mov
jg
mov
cmp
push
and
test
mov
or
xchg
adc
test
imul
sbb
adc
out
in
shrl
repnz
adc
dec
jl
pop
fcompl
inc
and
add
add
neg
scas
xor
mov
cmp
sti
xchg
stos
fidivrs
mov
aam
ret
inc
mov
jnp
outsl
sub
loop
xchg
mov
test
cmpsb
inc
mov
addr16
dec
or
xor
inc
aas
fs
inc
xchg
cmpsb
lods
repnz
mov
push
sub
sbb
pushl
pop
test
adc
mov
test
shrb
std
in
scas
xor
out
movsb
clc
cmp
lods
sub
cmpl
add
push
das
dec
jmp
jp
in
push
daa
mov
inc
pop
mov
shll
xor
and
xchg
jb
cli
je
cwtl
or
sub
lea
xchg
es
sbb
adc
clc
cltd
out
jmp
ret
jmp
mov
xor
add
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
rorl
test
inc
aas
inc
lea
pushl
mov
mov
out
cld
call
fisttps
jmp
out
incl
xlat
lea
inc
ljmp
incl
aaa
add
pop
movl
ffreep
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
lds
add
adcb
add
add
mov
cld
push
decl
push
mov
call
mov
add
test
call
jge
mov
fcom
add
mov
add
add
imul
push
fisttps
test
aam
lret
add
rcl
movl
jl
test
jmp
incl
loope
aam
test
out
mov
mov
add
call
lret
cld
incl
out
xor
mov
cld
jl
mov
add
mov
decl
add
inc
xor
inc
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
movl
inc
add
mov
test
add
incl
jmp
faddl
jge
adc
mov
sahf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
inc
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
jl
add
mov
inc
lret
inc
iret
jb
mov
enter
xor
mov
pushf
lea
add
inc
mov
xor
add
mov
fmuls
xor
mov
aad
pushf
xor
mov
clc
enter
mov
test
clc
incl
xor
test
test
ds
pushf
inc
mov
outsl
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
rdtsc
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
sahf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
sahf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
sysexit
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
sahf
shll
lret
or
add
in
push
mov
bound
int
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
sahf
lret
cmp
call
inc
inc
mov
mov
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
bound
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
test
clc
inc
inc
mov
sub
mov
dec
bound
inc
add
dec
bound
inc
add
inc
add
movsl
pushf
inc
dec
lea
push
xor
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
rdtsc
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
sahf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
sysexit
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
sahf
shll
lret
or
add
in
push
mov
bound
int
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
pop
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
sahf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
loope
inc
call
inc
mov
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
sub
test
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
rorl
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
in
push
push
incl
mov
loope
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
shlb
add
mov
lea
push
enter
testl
enter
negl
or
inc
in
in
sub
inc
in
push
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
loope
inc
stc
xlat
ss
aas
in
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
andl
lret
mov
add
lret
pushf
and
pop
rcr
test
clc
add
xor
pushf
add
add
inc
push
rcrl
inc
fsts
mov
nop
rolb
mov
add
pop
add
or
mov
add
call
add
add
push
inc
orb
leave
dec
dec
add
call
clc
inc
inc
mov
enter
mov
xor
xor
or
sbbb
int3
test
clc
inc
mov
fmuls
sub
add
leave
xor
jl
add
add
or
test
clc
or
xor
inc
sbb
mov
xchg
pop
add
mov
add
mov
mov
mov
xor
add
inc
jge
mov
xor
add
push
jne
mov
decl
add
cmp
push
inc
inc
add
add
mov
mov
mov
sbb
inc
add
push
clc
add
mov
jne
mov
add
add
lea
lea
xor
ret
mov
add
push
inc
inc
add
test
jne
mov
mov
push
pop
inc
decl
rclb
xor
addl
mov
push
jbe
mov
ret
dec
inc
jmp
mov
cld
push
mov
add
push
push
inc
jmp
add
add
inc
ret
mov
mov
sub
mov
mov
rolb
inc
add
inc
add
clc
inc
ljmp
xor
add
mov
mov
inc
fdivs
loop
add
add
ljmp
add
add
add
mov
dec
incl
test
sbb
add
mov
add
and
dec
mov
dec
call
inc
add
cmp
inc
add
jb
mov
cmp
lret
mov
test
andnps
decl
inc
add
mov
inc
hlt
mov
xchg
add
xor
add
mov
mov
mov
push
push
inc
mov
call
inc
adc
decl
aam
push
add
xor
lcall
cmp
test
clc
inc
and
mov
cmp
je
mov
add
sbb
dec
dec
mov
mov
add
add
jne
mov
cmp
jb
mov
mov
mov
inc
je
push
add
push
mov
in
shlb
test
call
inc
inc
rorb
jmp
mov
mov
loopne
sbb
inc
inc
push
lea
lea
or
js
mov
incl
call
inc
add
decl
test
mov
add
add
incl
add
data16
push
call
mov
cld
inc
test
inc
mov
sbb
inc
test
rorb
add
add
add
popw
test
cmp
jbe
lea
add
mov
sub
mov
mov
in
mov
jb
incl
mov
sbb
push
mov
movl
add
mov
mov
pushf
mov
lea
decl
movb
pusha
jmp
mov
xor
xor
add
in
mov
addl
mov
data16
addl
push
loope
inc
add
mov
out
incl
and
test
incl
jl
leave
add
test
outsl
fiadds
mov
test
in
incl
loope
inc
data16
inc
call
add
filds
inc
inc
xlat
xor
pushf
jl
leave
icebp
inc
add
mov
fdivp
mov
in
test
inc
inc
mov
cld
inc
out
rclb
inc
mov
mov
and
inc
cmp
jne
movl
lret
inc
add
lea
xor
add
inc
adc
test
add
movb
jl
add
mov
mov
sbb
add
loopne
adc
or
inc
loop
xor
or
jl
inc
add
adc
repnz
xorb
adc
dec
repnz
mov
adc
call
adc
inc
push
flds
mov
fcmovnb
xor
sbb
addl
inc
mov
sbb
xorb
add
decl
add
incl
mov
lret
enter
inc
jne
mov
mov
mov
mov
ud2
xchg
xor
dec
mov
sbb
cmp
push
pop
adc
andb
mov
push
mov
adc
in
inc
inc
fildll
mov
inc
subb
ljmp
lea
xor
mov
stos
mov
push
test
mov
push
ret
mov
sbb
rcl
inc
inc
into
mov
cwtl
movl
call
add
jmp
inc
or
rol
dec
adc
incl
add
push
push
add
test
or
out
pushl
add
push
out
xor
jmp
andl
mov
sbb
addb
mov
incl
push
pop
clc
mov
orb
mov
lea
inc
ljmp
pop
inc
mov
mov
rclb
incw
lea
stos
add
mov
adc
pushl
decl
dec
push
loopne
adc
call
mov
sbb
loop
ds
dec
mov
sub
inc
mov
xor
decl
add
push
add
mov
jbe
test
inc
push
addl
pop
add
ret
decl
mov
mov
cwtl
mov
test
rorb
lea
mov
push
decl
pushl
call
lea
mov
mov
mov
inc
dec
mov
xor
decl
call
lea
incw
cmp
decl
jmp
inc
jmp
dec
lea
jge
mov
lock
mov
mov
roll
push
str
xor
add
add
inc
rdpmc
mov
dec
inc
add
mov
data16
jne
push
adc
jne
ljmp
call
or
mov
mov
addl
mov
add
push
xor
dec
mov
mov
jl
push
mov
rcl
mov
mov
push
ret
push
pop
leavew
inc
sbb
in
xchg
push
shl
addl
mov
cwtl
or
setl
inc
add
test
xor
add
xor
mov
test
movb
adc
add
roll
mov
incl
ljmp
adc
jne
call
mov
pushl
inc
test
dec
add
dec
inc
mov
add
add
adc
and
jp
sysret
pop
add
cmp
sub
dec
mov
ret
clc
mov
addl
jnp
pop
add
xorl
adc
jge
mov
cld
test
add
add
negb
add
pop
add
add
inc
test
mov
fisttpl
mov
push
add
test
add
add
mov
add
add
mov
call
or
dec
or
inc
dec
addl
scas
dec
add
lock
mov
call
rclb
xor
adc
mov
mov
nop
rolb
mov
push
or
xor
sti
cmp
dec
test
or
ret
or
pop
add
xor
inc
mov
push
inc
mov
or
sti
dec
sub
cld
mov
mov
add
jne
cmp
jns
pop
jge
cmp
cld
inc
iret
or
jae
xor
jmp
mov
lea
mov
in
testb
jge
add
mov
cmp
hlt
adc
jl
clc
js
pushl
mov
clc
add
mov
call
inc
popa
jge
cmp
xor
rcrb
push
or
push
sub
in
add
fistl
sbb
test
inc
mov
cld
je
cmp
rorb
adc
mov
sbb
push
inc
mov
add
or
cld
mov
jge
xor
mov
hlt
iret
pop
inc
jbe
cmp
adc
push
add
dec
divl
sbb
mov
test
je
mov
or
cmp
jbe
mov
or
jg
add
dec
add
je
mov
mov
mov
adc
jmp
xor
pop
rcrb
ret
cmp
push
xor
sar
xor
xor
pushf
or
add
pop
mov
push
add
push
adc
push
xor
mov
in
dec
add
nop
iret
add
push
dec
sahf
mov
add
add
cmp
je
add
mov
pop
mov
sahf
fbstp
add
pop
pushf
mov
xor
ud0
add
add
or
dec
inc
mov
xor
mov
mov
fdivs
push
or
inc
imul
loopne
sbb
jg
inc
jne
mov
adc
fiadds
jne
mov
clc
test
xor
xor
mov
cld
jb
add
adc
rcr
add
add
pmaxub
dec
decl
xor
add
cmp
hlt
mov
faddl
xor
add
cmp
clts
jp
decl
xor
add
jne
mov
xor
lea
jb
add
add
add
add
adc
pop
mov
hlt
add
jmp
incl
xor
in
push
inc
mov
hlt
add
mov
dec
mov
fcompl
enter
add
mov
in
and
mov
mov
cld
pushf
dec
sahf
xor
add
mov
cld
add
xor
pop
mov
cld
sbb
dec
mov
jne
mov
fadds
mov
push
fdivs
decl
lcall
inc
inc
xor
add
cmp
mov
fadds
mov
test
sahf
push
xor
out
mov
or
in
sbb
add
jne
mov
mov
cld
test
sahf
fbstp
ret
call
xor
add
mov
cld
dec
mov
cltd
inc
inc
mov
cld
lea
xor
add
inc
je
mov
cwtl
movb
add
sub
lock
mov
aam
ljmp
mov
in
inc
mov
cld
jmp
rorl
mov
fadds
add
xor
add
pop
hlt
pop
push
ret
mov
mov
xor
add
rolb
mov
or
inc
mov
xor
add
clc
jne
add
xor
lea
add
jb
add
inc
jne
add
or
inc
scas
xor
in
jne
mov
or
icebp
sahf
shll
mov
lsl
cmp
cltd
mov
add
mov
call
jge
sub
xor
jge
xor
add
mov
xor
add
jne
xor
jmp
mov
cld
mov
clc
leave
xchg
or
push
mov
cld
in
icebp
jnp
add
jae
sub
inc
call
push
call
xor
add
ret
xor
inc
loopne
jne
mov
push
jge
xor
in
test
add
mov
xor
xor
add
cmp
mov
xor
add
cmp
mov
add
add
or
ja
mov
cld
pop
stc
mov
in
jge
mov
or
icebp
add
jae
add
push
jne
mov
add
icebp
jmp
cmp
xor
clc
pop
repnz
out
pop
testl
pop
add
pop
jge
xor
add
xor
xor
repnz
clc
mov
rcll
stc
or
mov
in
sahf
jne
mov
or
sahf
xor
add
mov
mov
lock
push
inc
jne
mov
in
mov
clc
repnz
decb
mov
cmpl
clc
call
hlt
add
clc
inc
jne
mov
clc
test
xor
mov
in
xchg
roll
sbb
cld
clc
pop
pop
xor
add
inc
hlt
mov
or
add
test
add
mov
sbb
rclb
add
add
mov
and
data16
pushf
or
rcll
xor
mov
add
inc
inc
mov
add
cmp
inc
push
mov
mov
lock
xor
mov
xor
pushf
aam
xabort
dec
inc
xor
inc
add
add
dec
mov
cld
mov
xor
pushf
dec
mov
xor
mov
xor
push
xchg
xor
add
incl
mov
in
inc
or
rclb
add
push
inc
call
leave
push
add
mov
or
jo
cmp
add
add
mov
or
mov
cmp
roll
mov
dec
dec
sbb
cld
mov
test
cmovne
test
add
into
xor
add
mov
faddl
mov
nop
into
add
mov
mov
invd
mov
mov
mov
push
push
cmp
fmuls
call
rcl
rcl
call
inc
jne
jmp
sbb
dec
or
mov
sbb
dec
and
push
add
cmp
je
push
and
add
or
inc
adc
inc
and
push
push
sub
push
mov
sbb
dec
mov
add
jge
add
mov
mov
cmovne
xor
xor
or
roll
dec
add
dec
jbe
mov
cld
mov
bswap
push
lret
xor
mov
and
or
daa
xchg
push
push
adcl
push
xor
add
decl
sbb
rolb
and
mov
enter
mov
push
add
add
addl
mov
rorl
mov
inc
dec
mov
inc
mov
call
or
mov
inc
push
mov
into
mov
mov
lea
mov
push
xor
mov
sub
mov
loopne
lret
push
dec
mov
lods
xor
add
mov
xlat
dec
sarb
jne
mov
fsub
add
xor
out
mov
hlt
mov
mov
in
jb
push
inc
push
jl
leave
cmove
lods
add
mov
or
xor
or
into
in
lret
xchg
gs
add
mov
fsubs
inc
lea
push
lea
fadds
mov
inc
add
mov
fmul
rorb
add
inc
inc
je
mov
sbb
add
add
jmpw
or
lret
jne
mov
in
add
enter
sbb
inc
ljmp
and
inc
test
add
rorb
data16
call
ret
test
inc
orb
sub
stc
test
mov
lea
call
pop
add
xchg
add
add
push
cmp
fdivs
add
lea
test
je
mov
decl
push
add
inc
sbb
push
or
mov
cmp
mov
inc
pop
add
add
push
decl
or
adcl
push
jno
add
push
clc
sar
xchg
add
jne
mov
mov
sub
rolb
loopne
dec
mov
mov
call
add
add
add
add
jmp
xor
pop
lcall
ret
mov
mov
add
push
and
adc
add
dec
or
sbb
cmp
pop
push
add
mov
and
xchg
add
add
cli
loope
shlb
dec
ret
sub
pushf
inc
mov
and
incl
xor
pushf
jb
add
add
mov
hlt
inc
data16
mov
jmp
mov
or
inc
add
mov
mov
mov
add
sbb
jne
sub
sahf
mov
and
add
lock
test
add
push
inc
in
mov
ret
push
test
add
inc
shlb
pop
add
loopne
inc
pop
xor
mov
fdivrp
pop
mov
hlt
addl
cmp
lock
add
add
push
or
add
data16
lock
jge
mov
test
sbb
mov
inc
jge
pushaw
xor
data16
jne
mov
inc
or
lock
mov
mov
in
or
mov
call
sbb
push
mov
lock
pop
jne
mov
retw
minpd
str
jne
xor
mov
cld
add
add
sar
mov
mov
lock
es
mov
clc
jne
jge
mov
or
add
push
xor
add
add
mov
or
mov
add
mov
mov
or
fisttps
clc
ja
mov
or
sahf
sti
add
add
fbld
pop
mov
or
mov
hlt
add
mov
or
mov
or
mov
mov
adc
stc
mov
mov
or
mov
or
add
cmp
mov
xor
mov
add
jge
mov
pop
clc
cmp
data16
mov
xor
pop
jge
mov
lock
jge
ltr
add
hsubpd
data16
jge
mov
dec
xor
minpd
data16
jmp
mov
sarw
mov
jb
add
pop
mov
clc
jne
data16
jnp
pop
inc
add
data16
mov
data16
icebp
sbb
jne
mov
call
mov
in
data16
repnz
xor
inc
mov
call
add
ret
jge
mov
mov
add
data16
mov
add
mov
data16
pop
test
pushf
add
into
fistps
push
mov
mov
mov
push
repnz
lock
jne
mov
cld
mov
xor
mov
mov
push
sub
mov
mov
add
dec
cmp
jne
mov
mov
stc
jge
data16
xor
data16
lock
ds
pop
add
rorb
inc
mov
in
sarl
pop
or
push
mov
mov
or
cmp
je
mov
mov
add
push
mov
mov
pushf
sub
add
xor
dec
str
cmp
int
mov
xor
mov
xor
lret
push
add
push
add
cmp
sti
mov
mov
cld
add
data16
roll
mov
lret
in
add
pop
lret
ret
enter
pop
movl
pushf
call
add
in
add
mov
clc
xor
add
cmp
je
push
pop
sysexit
leave
dec
bound
mov
int
mov
lret
add
jne
lea
add
ret
inc
xlat
add
add
or
ret
add
jne
lea
add
lret
mov
cmp
fs
ss
je
xor
inc
inc
add
ss
pushf
push
je
xor
mov
andl
add
in
push
mov
pushf
cld
mov
mov
or
ret
or
or
lret
add
mov
adc
iret
mov
dec
push
mov
mov
rclb
add
ret
jne
mov
xor
callw
cmp
fs
mov
pop
sub
add
xor
cmp
cmp
jne
cmp
clc
pushf
pop
mov
push
xor
mov
psubsb
icebp
lea
clc
pop
inc
mov
push
xor
mov
adcl
add
inc
sub
mov
addl
orl
cmp
mov
decl
dec
mov
mov
mov
xor
mov
push
leave
mov
push
test
sahf
in
xor
mov
clc
test
xor
pushf
dec
mov
in
mov
push
icebp
add
roll
add
roll
xor
pushf
dec
movl
clc
or
xor
pop
dec
dec
lea
add
dec
inc
sub
orl
cld
adc
scas
or
pop
xadd
jb
add
inc
sub
mov
lock
icebp
add
clc
pop
mov
data16
add
xor
add
lea
add
add
inc
adc
dec
mov
mov
mov
lea
add
inc
in
incl
leave
add
push
roll
sbbl
sarb
jbe
mov
or
push
mov
mov
jne
jmp
mov
push
push
mov
add
xor
sub
mov
inc
inc
mov
dec
sahf
xorl
orl
leave
jbe
mov
in
inc
in
mov
or
dec
inc
xor
mov
mov
cld
test
push
inc
mov
sahf
pop
xor
mov
inc
or
sar
dec
lea
in
decl
mov
cld
inc
inc
inc
mov
jmp
mov
mov
push
sahf
xor
add
inc
xor
pushf
std
xor
inc
fadds
inc
mov
inc
sahf
xorl
cmp
mov
clc
sub
inc
call
pop
inc
sahf
pushl
adc
std
dec
decl
inc
push
call
add
xor
add
add
inc
cld
add
mov
orl
test
clc
inc
inc
mov
pushf
or
inc
adc
jne
xor
xor
pop
add
ret
je
push
mov
mov
mov
in
inc
orl
push
test
xor
mov
add
add
mov
or
add
xor
inc
inc
add
xor
add
mov
sub
lret
mov
jae
lea
xor
jne
or
or
pushw
jne
cmpxchg8b
mov
jne
call
cmovge
xor
add
sub
or
add
inc
cmp
mov
subl
enterw
shlb
pop
or
mov
dec
inc
data16
push
jb
jmp
incl
mov
or
jo
test
jmp
incl
mov
pop
lock
push
dec
mov
dec
ror
rolb
dec
lock
pop
in
cmp
clc
xchg
cmp
jne
xor
jmp
mov
jne
call
mov
add
inc
jne
mov
mov
mov
add
stos
add
mov
les
xchg
iret
add
inc
jl
out
cld
add
xchg
add
push
pop
add
paddq
xchg
add
adc
test
incl
incl
rorb
decl
inc
inc
incl
data16
rclb
mov
lock
jle
mov
mov
jge
mov
adc
enter
dec
or
mov
lods
ja
mov
pop
lea
inc
clc
inc
outsb
lea
push
inc
mov
pop
mov
jae
cmp
adc
pop
inc
sbb
mov
or
cmp
mov
cld
xchg
add
add
lea
adc
or
faddl
push
add
push
inc
add
push
adc
mov
fdivr
cli
dec
add
add
add
xor
cmp
mov
lock
rcl
pop
add
pop
dec
cmp
mov
add
push
dec
in
mov
push
pop
mov
add
add
add
inc
mov
hlt
push
decl
push
add
pop
or
jns
ret
jmp
mov
in
jge
sysexit
cmp
cmp
sbb
pop
add
jae
mov
lcall
mov
mov
fdivs
xor
movl
add
push
ret
mov
jne
mov
faddl
xor
push
or
icebp
incl
rolb
inc
stc
mov
lock
add
dec
add
mov
call
sbb
mov
pop
jge
lea
decl
or
leave
fadds
dec
add
xchg
add
mov
mov
or
dec
pop
mov
in
pushf
mov
push
call
add
cmp
add
add
mov
mov
mov
sub
add
clc
mov
add
dec
push
xor
xor
in
add
inc
jmp
xor
mov
adc
xor
jne
mov
mov
hlt
pop
add
in
push
in
dec
push
xor
mov
mov
in
dec
addb
add
mov
test
dec
push
mov
mov
clc
into
dec
lret
lock
test
push
jge
push
enter
dec
cld
jmp
pushf
inc
mov
sub
int
mov
mov
adc
enter
jmp
xor
mov
or
call
cmp
fs
add
leave
rorb
push
inc
in
mov
or
lock
test
clc
rolb
xor
pushf
add
mov
cmp
sub
jmp
mov
lock
mov
push
icebp
xor
mov
enter
add
cld
scas
add
dec
mov
xor
xor
add
add
test
mov
adc
je
xor
xor
add
add
rorl
enter
icebp
or
lock
enter
lret
or
mov
cld
bswap
pop
mov
in
hlt
pop
jne
xor
xor
jbe
mov
clc
pop
mov
mov
clc
mov
adcl
inc
in
xor
inc
cld
xor
add
inc
test
clc
hlt
inc
test
inc
inc
aad
xlat
pushf
mov
mov
xor
mov
xor
add
pavgb
test
dec
inc
mov
cld
xlat
enter
lret
add
leave
jne
mov
enter
lret
scas
out
jmp
mov
cld
add
xor
jmp
xor
add
rorl
dec
mov
cld
lea
mov
mov
xor
enter
stc
add
call
pop
xor
sub
enter
inc
in
xor
clc
xor
pushf
ss
pushf
call
mov
loopne
inc
test
clc
add
push
mov
push
inc
push
mov
mov
mov
xor
dec
cld
mov
or
into
inc
iret
or
add
mov
xor
xor
mov
hlt
bswap
roll
xor
mov
xor
call
enter
mov
lock
inc
mov
inc
inc
enter
inc
mov
mov
roll
add
push
into
in
movb
dec
or
xorb
add
add
in
push
inc
mov
adc
push
xchg
popa
iret
dec
sahf
mov
clc
add
cmp
jne
addl
or
or
push
dec
jnp
dec
xlat
mov
call
lsl
cld
sti
lahf
mov
mov
clc
iret
dec
lret
xor
lea
dec
inc
mov
mov
int
sub
lock
mov
in
xor
pushf
xor
jne
mov
in
dec
mov
nop
add
pop
mov
mov
ret
mov
mov
mov
dec
add
jo
push
inc
jne
mov
push
push
ret
push
inc
xor
add
jnp
jg
ljmp
inc
mov
push
cmp
dec
xor
cmp
jne
orl
jmp
mov
push
add
add
add
cmp
mov
sbb
mov
xor
mov
xor
pushf
test
clc
adc
test
xor
lock
xor
add
mov
sbb
mov
rolb
iret
or
cmp
xor
or
xor
add
mov
inc
inc
mov
mov
mov
cmp
dec
decl
inc
mov
or
sbb
inc
inc
mov
or
dec
push
dec
inc
rclb
push
inc
decl
rolb
inc
inc
mov
sbb
inc
push
xor
lea
cmc
xor
add
mov
inc
inc
mov
ret
inc
add
adc
test
clc
inc
inc
mov
loopne
enter
inc
test
mov
sbb
dec
ret
sub
add
xor
lea
lods
jb
add
sar
xor
inc
int3
xor
xor
pushf
adc
inc
les
test
clc
inc
inc
pushl
hlt
pushf
jne
mov
or
bound
clc
lea
cmp
shl
mov
or
dec
imul
incl
inc
add
pavgb
movl
clc
iret
inc
lock
lret
fmull
mov
test
mov
loopne
inc
loopne
inc
loopne
xbegin
adc
jb
mov
inc
inc
push
mov
incl
mov
loopne
rol
test
dec
push
decl
push
mov
add
cmp
add
call
clc
test
xor
pushf
mov
or
iret
test
mov
in
pop
dec
add
add
dec
mov
in
dec
or
iret
add
testl
test
add
add
mov
or
add
cmp
add
mov
mov
lock
dec
test
dec
add
cmp
or
mov
dec
push
lea
lods
mov
clc
cli
or
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
clc
rorb
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
in
add
add
mov
in
mov
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
cli
or
cmp
je
mov
ret
or
lock
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
lock
rorl
jb
add
ja
sbb
xchg
enter
inc
decl
loopne
jb
add
dec
adc
add
inc
rcll
mov
xor
jb
add
jne
decl
add
repnz
inc
mov
mov
shll
mov
movsb
add
push
adc
inc
pushl
mov
add
mov
test
inc
mov
lret
mov
sbb
inc
mov
xor
enter
inc
add
cld
test
sahf
jne
mov
fsubrs
decl
hlt
xor
sbb
call
pop
or
dec
adc
push
add
cmp
je
mov
or
push
lea
clc
or
push
inc
or
pop
call
test
jne
mov
movsb
xlat
inc
push
push
or
push
decl
dec
adc
roll
sbb
dec
je
push
call
test
inc
iret
add
clc
jmp
mov
test
or
add
inc
mov
mov
and
push
mov
rolb
iret
orl
push
clc
jmp
add
mov
jmp
addl
pop
inc
pop
sbb
inc
add
clc
and
mov
and
mov
and
mov
and
xor
push
mov
xor
mov
mov
mov
push
add
mov
cmp
mov
dec
add
push
adc
push
cmp
and
mov
and
xor
jb
add
inc
and
lea
and
push
jmp
cli
and
clc
and
call
jmp
dec
aas
or
cmp
bswap
mov
add
and
mov
mov
or
inc
jmp
addl
push
inc
sbb
dec
test
movb
xor
pushf
inc
jmp
addl
jne
or
or
jne
call
mov
add
adc
add
add
add
incl
push
cli
add
shll
inc
jmp
xor
test
cli
incl
incl
and
mov
or
and
and
add
push
and
and
add
ss
incl
xor
mov
and
pushf
pushf
clc
decl
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
in
jp
jp
jnp
adc
pop
outsl
je
loope
add
pop
add
pop
push
xor
sub
push
cmp
ss
iret
pop
jmp
pop
mov
push
scas
xor
ret
sbb
push
push
dec
repnz
ror
xlat
xor
mov
ds
and
adc
add
pusha
sub
repz
movsl
lods
cmpsb
aam
mov
cmp
and
cli
es
xchg
adc
std
adc
push
lahf
cmpsb
and
lret
dec
icebp
imul
lret
mov
repz
mov
push
jmp
cmp
jle
les
sbb
pop
and
loop
and
inc
fists
mov
hlt
cmpsb
data16
test
push
add
cltd
pop
imul
lds
xor
call
jo
into
mov
add
mov
stos
mov
xor
fcomps
test
adc
adc
pop
test
popf
mov
push
js
pusha
clc
es
imul
in
push
cs
cmp
mov
mov
mov
mov
fiadds
mov
in
or
or
jno
mov
icebp
mov
fisubs
xchg
push
ss
mov
xchg
in
movlps
inc
test
inc
repnz
dec
cwtl
mov
clc
ficomps
and
imul
dec
mov
cmp
pop
je
in
or
scas
add
jno
sahf
shll
jno
dec
mov
shll
mov
es
scas
stos
pusha
inc
adc
ret
mov
pop
lret
repnz
call
adc
add
pop
repz
push
sbb
aad
popf
jg
lds
xchg
cmc
dec
xchg
jne
push
jo
sbb
ljmp
fnstcw
in
out
iret
data16
out
lret
popf
sub
push
testb
lea
dec
sarb
sbb
call
xorb
jp
mov
and
inc
hlt
sbb
push
mov
mov
in
cmpsl
rcll
push
inc
jno
jbe
call
in
ficompl
lret
mov
in
jb
mov
mov
and
int3
ret
hlt
cmp
add
sub
jno
clc
out
push
cmp
fs
cmc
repnz
aam
or
xor
xlat
dec
or
repnz
xchg
lahf
pushf
int3
cli
mov
adc
sub
js
xchg
data16
adc
mov
dec
test
divb
notl
mov
xchg
or
push
data16
mov
popa
cwtl
push
cmpsb
mov
mov
cmp
rcr
lret
out
jl
mov
xchg
xor
mov
scas
insb
sti
les
jae
cmpsl
mov
adc
call
test
cmc
pop
insl
or
data16
push
cmpsl
sub
inc
pushf
cmpl
fwait
mov
iret
xchg
xor
adc
add
mov
hlt
xor
jp
ljmp
popa
add
dec
jo
mov
jg
push
jne
mov
lahf
sub
sub
jmp
jno
adc
sti
jne
dec
sub
xlat
jno
fld
pop
xor
loopne
imul
sbb
sub
inc
dec
xor
rcl
push
loope
arpl
xchg
iret
insl
clc
push
ficompl
cmp
and
push
rcrb
cmp
jns
test
popf
jno
jl
addr16
xchg
lea
lcall
pop
fbstp
and
dec
xcrypt-cbc
cmpsl
xchg
and
xor
loop
nop
push
pop
mov
pop
bound
data16
sbb
dec
pop
sbb
pop
mov
insl
mov
inc
xchg
fs
imul
adc
out
and
andl
rcll
push
xchg
cltd
mov
pop
jmp
xor
xor
popa
jmp
sbb
push
cmp
mov
insl
leave
dec
mov
sub
mov
jno
aam
aad
cmp
fidivl
fmull
in
bound
add
jge
push
rcl
das
push
ror
call
in
cld
insl
outsb
repnz
mov
jns
add
sbb
loopne
or
push
pushf
push
push
in
cmpsl
nop
movb
std
insb
mov
push
xchg
xchg
cmp
xchg
add
or
inc
xor
push
and
xor
mov
cmp
pop
jne
push
insl
sbb
test
aas
xchg
push
js
aas
mov
mov
mov
mov
out
sbb
adc
mov
imulb
and
fwait
jp
aam
cmp
imul
clc
fnstenv
leave
cmp
jle
roll
out
fwait
test
cmc
mov
iret
js
stc
jo
add
aas
mov
dec
leave
pop
cmp
subl
aas
mov
inc
jp
push
daa
xchg
push
xchg
ss
test
aaa
and
push
mov
imul
fmuls
outsl
pushf
mov
jb
inc
xor
into
clc
mov
out
lahf
sarb
test
and
addr16
scas
lcall
mov
fildl
cmp
scas
iret
cld
clc
or
mov
pop
arpl
das
pop
rol
outsl
fisubrl
fdivr
imul
mov
jne
mov
mov
ret
dec
sbb
jle
cmpsl
mov
dec
push
ljmp
jne
addr16
jecxz
out
stc
cli
int3
arpl
je
lods
xchg
push
mov
pop
inc
add
scas
push
js
aas
mov
inc
xlat
fidivrs
inc
filds
cld
aad
mov
pop
sbb
fwait
mov
xchg
pop
xor
rolb
jb
sbb
inc
inc
pop
pop
fildl
inc
pop
cli
dec
xor
je
shl
jmp
scas
sub
and
push
xor
cmp
addr16
lock
cltd
fwait
pop
fwait
mov
jg
jl
pop
jb
lret
push
iret
jle
push
ret
sub
rcll
mov
loopne
adc
xlat
push
inc
addb
shlb
jecxz
adc
cmpsl
and
fsubrl
push
in
rorb
lods
mov
mov
daa
nop
ret
int
add
cmpsb
rolb
xorl
xor
jge
push
test
mov
lret
adc
clc
iret
fcos
jg
aam
mov
jae
or
pop
outsb
mov
cmpsl
push
cmp
subb
dec
mov
add
add
xchg
mov
sbb
call
add
xor
out
mov
cmp
fiaddl
sub
in
inc
out
adc
lock
push
push
sbb
add
mov
cmp
sub
mov
inc
xchg
push
cmpsl
mov
mov
out
sbb
in
jbe
inc
sahf
xor
pushf
pop
xchg
in
je
push
aas
inc
outsb
cmp
push
in
pop
or
loop
mov
addl
lret
mov
ret
frstor
int
xchg
sub
sub
fwait
sub
fnstcw
ja
test
pop
imul
xor
stos
add
dec
inc
movsb
sahf
ja
mov
or
xchg
insb
subl
inc
push
cmp
sbb
jp
pop
les
pushl
mov
inc
inc
inc
add
dec
pop
shlb
sarb
sbb
mul
mov
pop
cli
test
push
mov
mov
sbb
repnz
rcrb
inc
mov
jo
mov
jg
call
fsubrs
xchg
ss
vmovdqa
xchg
xor
scas
cwtl
test
mov
lock
xor
mov
sbbb
test
lea
arpl
add
xor
fbstp
pop
inc
daa
push
addr16
mov
adc
test
insl
xchg
push
out
push
les
push
cmp
dec
jae
cmp
cld
and
ja
jns
dec
or
movsl
pop
add
addr16
sti
enter
pop
dec
mov
jne
inc
sub
xchg
xchg
mov
xchg
loope
popl
je
insl
leave
iret
sub
mov
ja
xor
lods
leave
aad
push
lahf
js
test
ja
mov
jp
xor
cs
xor
lds
nop
pop
add
outsb
scas
pushf
mov
pop
push
adc
mov
mov
loopne
push
out
stc
adc
into
add
stos
test
ljmp
mov
repnz
cmp
cmpsb
shlb
ficoml
push
popf
pop
pushf
lods
push
test
pop
in
push
shll
pop
repnz
fldl
loope
sbbb
and
push
stos
adc
adc
outsb
ret
call
in
push
push
push
xor
push
mov
pop
and
hlt
movsl
lcall
push
int3
push
movsl
gs
and
xchg
push
repnz
xlat
jl
cmp
xchg
push
and
aad
addr16
mulb
or
ja
aam
imul
add
fstpt
js
jle
sarb
mov
mov
mov
inc
and
lock
jecxz
sbb
aam
mov
fwait
add
xor
daa
mov
pop
sbb
cmc
pop
jnp
jge
fiaddl
loopne
cmp
aas
mov
add
mov
pusha
clc
cli
xchg
jnp,pn
xchg
pop
shlb
xlat
loope
rcrb
orl
jns
mov
ret
fwait
insb
push
mov
pusha
pushf
mov
cmp
xor
adcb
xchg
dec
lea
jmp
flds
adc
sub
lods
jg
push
aas
pop
xchg
popa
imul
popa
jl
in
push
xchg
into
lods
inc
sub
xor
addr16
stos
or
sti
cmp
jae
icebp
mov
mov
stos
popf
imul
addps
into
out
hlt
mov
out
loop
scas
insl
cltd
daa
mov
repz
fadds
scas
call
jmp
dec
pop
in
in
addr16
les
loop
jns
xchg
xchg
adc
addsd
mov
int3
cmc
adc
and
out
fsubs
pusha
mov
pop
imul
cmpb
inc
xchg
sbb
sub
lret
rcrl
sbb
pusha
das
push
js
sbb
ret
and
lods
xlat
js
jo
sbb
xchg
in
pop
xor
ja
arpl
ds
mov
xor
push
pop
out
jle
jno
mov
stos
sbb
jmp
hlt
int
jb
loop
push
sub
jmp
xchg
add
dec
xchg
push
mov
fs
lret
into
dec
incb
mov
lock
aaa
sar
aas
cmp
push
mov
xchg
out
dec
jnp
adc
popa
insb
sub
enter
sbb
pop
test
divb
scas
jb
dec
pop
subl
addr16
clc
mov
lds
xchg
lods
lcall
sub
push
dec
pop
xchg
and
mov
loop
push
shl
inc
cmc
fwait
lret
sub
add
subb
hlt
inc
sbbl
mov
or
js
fmull
adc
cmp
inc
mov
mov
xchg
in
iret
stos
outsb
pop
or
adc
jns
mov
jne
cld
xchg
rorb
pop
rcll
inc
lret
mov
xchg
les
push
push
pop
mov
cmp
xor
insl
sbb
out
les
mov
dec
xchg
or
int3
push
into
divl
in
mov
les
ret
push
adc
cs
add
pop
cmp
mov
iret
pop
pop
in
cmp
stc
pop
and
xchg
mov
shr
imull
jne
cmp
fdivs
sbb
cmove
jns
and
sub
dec
dec
push
dec
js
pop
sub
jns
shll
jb
jno
je
mov
pop
dec
jp
jg
mov
jle
xchg
inc
push
or
arpl
popf
push
jb
icebp
insb
outsl
hlt
sub
and
mov
cmpsl
add
repnz
in
out
idivb
repz
xor
cmc
dec
push
lcall
lahf
loop
mov
ds
and
jne
xchg
sbb
ret
jne
imul
cmp
xor
dec
es
push
test
shll
cmp
adc
fadds
cmp
push
mov
mov
pop
mov
out
inc
iret
arpl
xor
pop
xor
shll
sub
cmp
adc
dec
mov
popf
sub
fs
ss
dec
dec
sbb
lcall
repnz
push
scas
fildll
outsb
jo
adc
mov
ss
cli
xchg
mov
cmpsl
aaa
shlb
test
pop
pop
jae
cld
pop
add
push
cli
divb
mov
jno
add
push
pop
add
stos
mov
mov
cmp
nop
dec
mov
aaa
cmp
or
data16
mov
or
imul
or
movsb
ds
imull
fwait
int
ljmp
lret
fwait
dec
push
add
mov
stos
inc
stos
adc
xchg
ja
push
sub
jmp
cmp
not
cltd
mov
sarb
hlt
sahf
jae
inc
adc
outsb
faddp
call
sbb
sbb
mov
sbb
lahf
inc
mov
mov
sbb
pop
clc
cmc
rclb
insl
stos
mull
in
or
mov
inc
aad
stc
mov
xor
imulb
push
push
fadds
xchg
and
pop
clc
mov
daa
mov
in
mulb
ja
nop
mov
adc
mov
cmpl
add
inc
adc
pop
loope
cmc
pushf
arpl
ret
add
adc
fisubl
lea
xor
ja
adc
and
loope
mov
and
aad
fadds
fadds
or
mov
dec
dec
fmul
inc
sub
imul
inc
xchg
sbb
mov
icebp
subb
jmp
les
cmp
sbb
mov
pop
pop
test
sbb
filds
xchg
lods
nop
adc
add
fwait
jl
jne
sbb
outsb
mov
inc
insb
fisttps
subb
js
scas
or
xchg
outsb
sub
mov
mov
in
pop
test
add
ljmp
sub
mov
inc
cmp
mov
mov
test
jmp
data16
mov
pop
ss
lods
sbbb
imul
invd
pop
mov
test
push
and
jle
sbb
adc
inc
pusha
into
je
stos
dec
add
pushf
xor
cli
in
sbb
rcl
sti
xchg
rorb
insb
pusha
ljmp
push
out
pop
push
data16
nop
cs
inc
jo
cmp
out
pop
jae
push
mov
rcr
adc
inc
jle
fsub
inc
cmp
aaa
or
push
lret
roll
arpl
stc
mov
das
pop
dec
scas
shll
sti
test
xor
test
sub
iret
fwait
mull
lods
arpl
inc
xchg
xor
daa
push
inc
cwtl
xor
mov
sub
lret
jne
inc
cwtl
cmp
cltd
aad
imul
mov
insb
mov
jno
ret
movsb
inc
arpl
shlb
outsl
inc
and
fwait
pop
ret
fldl
add
jle
fs
inc
dec
stos
flds
adc
addr16
push
iret
stc
test
cli
or
lret
hlt
adc
inc
and
and
jo
arpl
fs
in
add
push
dec
testl
cpuid
ss
pop
mov
add
aas
fadd
push
or
mov
cmp
cld
adc
inc
and
sbb
int
dec
dec
sahf
popf
les
cli
sub
dec
xor
push
xchg
out
pcmpgtb
imul
jl
cmp
xor
mov
fwait
push
loope
test
mov
cwtl
test
and
cmp
xchg
jp
mov
ror
dec
ret
xchg
push
movsl
lahf
mov
cmpsl
rorb
sbb
cli
or
mov
xorb
mov
mov
mov
xchg
fstpl
add
ds
jnp
outsl
mov
sub
xor
loop
ljmp
pop
xor
stos
fsub
sbb
cmp
mov
popa
cmp
mov
mov
jl
lcall
popf
cli
lret
cmc
rorl
mov
sbb
mov
mov
mov
roll
mov
sub
sbb
scas
fsubrp
rorl
mov
jne
nop
mov
ljmp
add
sbbl
mov
mov
inc
jmp
int
testl
push
jecxz
xchg
lock
dec
out
icebp
and
fistpl
sbb
nop
stos
popf
push
roll
loop
and
push
jl
pop
fwait
xchg
push
leave
jmp
xorl
out
adc
and
adc
sbb
push
sub
mov
or
or
repnz
xchg
mov
sub
jp
push
int
lahf
sbb
jnp
mov
xor
push
fists
mov
fsubs
inc
mov
fisttpl
mov
call
loope
push
std
xchg
jge
xor
jnp
inc
jg
cmp
cmp
cmp
aam
push
jle
dec
xor
jecxz
lret
sub
insb
loop
rep
jae
xor
jno
mov
pop
mov
in
mov
and
jae
jne
inc
pop
add
aas
cld
dec
mov
mov
dec
out
push
adc
ficoml
mov
enter
jo
push
pop
mov
lds
pusha
or
stos
std
bound
xor
cmpsb
lods
push
fwait
adc
mulb
pop
lahf
cmp
mov
outsb
push
mov
jae
add
jb
add
out
sahf
mov
std
shl
orl
jno
mov
int
mov
xor
pop
int3
inc
nop
aam
mov
add
stos
push
loope,pt
bound
in
lds
lock
cmp
xor
iret
xor
jnp
inc
xor
int3
out
aam
sub
adc
arpl
out
cmpsl
and
add
cmpsl
fdivr
addr16
xchg
inc
dec
pusha
mov
rclb
jge
xor
pushf
adc
icebp
xchg
jle
bswap
add
mov
loope
pop
or
pop
sbb
dec
add
mov
inc
sub
rorl
xlat
mov
jo
mov
push
mov
data16
mov
xor
dec
cmp
cmp
pop
repnz
mov
push
leave
or
cmc
neg
sahf
dec
add
repz
pop
enter
pop
jbe
mov
scas
bound
xor
outsb
mov
movsl
dec
hlt
push
orb
cmpsb
mov
jnp
push
xchg
mov
dec
insl
aam
mov
sbb
sub
cmp
in
and
jmp
lods
and
push
loope
sub
cmp
in
ss
or
pop
in
testl
ds
push
pop
add
jecxz
lea
sub
fsubs
and
xchg
divl
hlt
inc
fisttpl
mov
fistpl
and
push
mov
loop
jae
test
xchg
insl
push
mov
jecxz
cmp
pop
aas
jns
les
shrl
mov
mov
xchg
adc
mov
stc
js
push
mov
push
in
je
loopne
testb
incl
jo
xor
pop
cmpsl
lret
insb
mov
xchg
inc
xlat
or
rcr
dec
push
adc
push
push
ss
mov
jns
nop
leave
repz
cmp
insl
or
dec
mov
mov
cmp
jmp
mov
fucomip
adc
sub
notb
loopne
mov
jmp
lea
sub
mov
cmp
dec
pusha
dec
outsl
push
inc
pop
cmp
and
xchg
sub
xlat
add
sub
adc
xor
aaa
out
dec
cwtl
dec
push
es
ds
ficoml
pop
ja
repnz
or
adc
insl
emms
popa
mov
adc
ds
in
fadds
sub
dec
add
lods
mov
roll
push
test
fwait
push
test
inc
pop
sbb
mov
iret
mov
repnz
insb
adc
les
gs
xchg
gs
cld
loopne
sti
ss
stos
pop
jmp
andb
jns
scas
and
jge
xchg
sub
js
xor
lcall
mov
mov
shl
jbe
lret
sbb
mov
outsb
dec
xchg
pop
aas
or
sbb
insl
scas
jecxz
cmp
adc
cmp
push
scas
mov
or
out
outsl
mov
jno
xchg
bound
adc
or
test
xchg
cmc
mov
adc
pop
jnp
xor
ret
add
negl
dec
out
push
jl
out
mov
fsubl
popf
rcll
clc
mov
cli
cmp
sbb
add
mov
mov
dec
mov
ffree
or
fwait
hlt
aad
daa
xor
lahf
dec
cli
dec
xor
lcall
repz
fcom
add
data16
mov
bnd
pushf
sub
out
cmp
mov
add
push
sub
cmpb
mov
jb
push
aaa
scas
push
nop
pop
test
xchg
out
cmp
cltd
mov
jnp
push
adc
lcall
repnz
stc
add
xchg
mov
dec
and
adc
jnp
dec
push
jmp
cwtl
xchg
filds
pop
arpl
icebp
dec
loopne
mov
jp
pop
mov
js
popf
cmp
lods
mov
pop
pop
outsb
in
sbb
addb
ljmp
mov
pop
pop
xchg
sbb
inc
sbb
loope
rcll
repz
add
inc
loopne
lock
insb
pop
lret
mov
cmpsl
repz
sub
fidivrl
out
xchg
inc
inc
inc
cmp
mov
cmp
sub
dec
mov
ds
pop
add
addr16
arpl
sub
lret
int3
int3
adc
lock
mov
xor
movsb
xor
mov
xchg
and
mov
addr16
lret
mov
mov
jne
sahf
and
fwait
clc
rorb
sub
or
inc
fists
mov
lock
scas
lret
push
ds
mov
mov
lret
pop
es
mov
push
add
ret
pop
int3
inc
movsb
data16
dec
sbb
lahf
das
fists
stos
sub
lcall
dec
xchg
xlat
mov
subl
and
loopne
pop
add
repz
inc
push
adc
push
mov
xorl
mov
dec
jb
xor
inc
inc
and
mov
jmp
xchg
out
inc
xor
push
ror
shlb
insl
inc
pop
jnp
mov
cmp
imul
pop
mov
push
mov
inc
mov
test
je
cmpsb
adc
ja
xchg
xlat
aam
jl
inc
test
sub
lret
mov
fdivrp
xor
cs
xor
insl
fadds
pop
mov
cmpsl
outsl
ret
loopne
loopne
aad
cltd
cltd
pop
pop
mov
ja
fnstsw
push
sahf
sbb
sar
andb
fstpt
pop
xor
loopne
sub
pop
sti
push
movsl
scas
leave
adc
adc
loop
aas
sahf
rcll
lock
mov
and
inc
mov
adc
ficoml
loopne
int3
mov
cmp
cmp
pop
nop
rcl
hlt
adc
imull
mov
hlt
test
dec
sti
push
xchg
cmp
mov
cmpsl
add
sarb
ja
adc
aaa
out
mov
test
or
ja
inc
push
ret
fidivrs
mov
idivl
or
mov
mov
pop
push
rolb
adc
ds
movsb
ja
aas
sbb
leave
cmpsl
aad
sub
inc
imul
mov
loop
adc
dec
dec
in
call
iret
xlat
movsl
imul
cwtl
xchg
xor
dec
ret
ja
test
mov
jle
call
add
push
aas
ds
imul
push
test
push
dec
push
xor
sub
adc
mov
outsb
mov
add
jns
jae
xor
fldt
sub
add
flds
push
outsl
dec
push
and
cmp
sub
mov
fldt
sub
jp
add
je
fbld
insl
inc
sub
scas
ds
push
inc
shrb
sub
fisubrs
adc
mov
cmpsl
mov
out
pop
dec
mov
xchg
and
jno
mov
pop
aad
sbb
jbe
add
lds
mov
hlt
xchg
neg
mov
cld
pop
mov
int
mov
push
stc
jae
std
fucomip
das
add
adc
lods
xor
mov
mov
pop
jp
mov
mov
in
in
out
pop
enter
or
push
ljmp
sbb
sub
mov
jp
jp
xchg
pop
lcall
push
jmp
add
adc
jnp
int
ficoms
mov
add
pop
add
jo
stos
push
cmpsb
xor
adc
mov
add
cmc
inc
call
pop
rorb
fs
jno
or
leave
jns
out
jl
dec
pop
mov
cltd
jno
jp
pop
add
sbb
mov
arpl
test
je
int3
mov
push
daa
mov
push
mov
or
adc
std
cmpsb
mov
adc
jg
jg
subl
jns
adc
in
xor
shll
in
enter
lret
inc
repz
pop
test
xlat
punpcklwd
shl
mov
sub
js
cmpsb
loope
data16
enter
pop
into
arpl
addr16
out
dec
fmul
out
mov
mov
ret
test
sbb
xor
cld
sub
push
iret
scas
arpl
sub
cli
decl
sub
sbb
leave
daa
xor
xor
adc
sbb
cs
sbb
xlat
mov
sub
cmp
pushl
stos
push
pushf
sarl
cli
or
in
outsb
cmp
adcl
pop
and
rcl
hlt
add
push
out
mov
push
divl
loop
inc
pop
int
repnz
pop
and
xlat
mov
hlt
popa
test
pop
mov
addr16
daa
and
cmp
decb
fistpll
or
hlt
rcrl
js
lock
rcll
jb
inc
bound
cltd
lods
mov
inc
fsubs
xor
in
addl
jle
xchg
adc
adc
cmp
jb
loope
and
outsl
stc
stos
push
cmpsb
lock
xor
push
dec
mov
mov
mov
call
testl
leave
sub
jecxz
sub
test
hlt
pop
xor
fstpl
sbb
push
std
xor
lahf
sub
adc
or
loop
adc
cmp
push
mov
add
and
xchg
js
outsl
mov
lods
jb
cmc
xchg
pandn
pop
jno
pop
pop
push
cmp
inc
imul
mov
sarb
dec
rclb
mov
xorb
dec
push
ret
push
dec
pop
lds
or
mov
sub
xchg
and
insl
pop
pushf
pop
clc
lcall
insb
lret
push
aaa
ret
pop
into
imul
adc
inc
add
incl
adc
push
sub
inc
imul
mov
hlt
mov
cmp
test
cmc
dec
fiaddl
sub
fdiv
and
daa
js
mov
std
mov
mov
sbb
xor
outsb
outsb
cmc
je
sysenter
jmp
pop
dec
jns
cmc
dec
pusha
mov
xor
or
cmp
cmp
sbb
mov
or
xchg
inc
in
push
adc
and
dec
pop
xor
pop
fcompl
inc
inc
sub
ja
es
and
lea
pop
and
shlb
push
xchg
daa
mov
add
imul
in
mov
test
mov
jle
xor
inc
dec
cltd
mov
cmc
mov
xchg
push
sub
aam
sbb
mov
sti
mov
mov
lahf
lcall
lods
push
and
fists
lret
out
stos
adcb
sbb
xchg
stos
fstps
add
aad
rolb
ror
sti
rol
and
gs
loop
sub
mov
inc
ss
fdivrl
testl
xchg
subl
nop
add
mov
imul
cs
jns
and
xchg
mov
subl
stos
xchg
adc
pushf
lods
push
rolb
js
cltd
cmpl
dec
ss
sub
movl
add
cmp
enter
fwait
xor
je
sahf
push
aaa
cli
in
push
mov
lods
jmp
mov
ds
leave
sub
pop
pop
cmp
sbb
cmp
inc
insl
and
es
pop
mov
sti
push
adc
jne
hlt
pop
or
inc
dec
sub
mov
scas
mov
loop
push
jne
mov
add
fsubl
mov
dec
test
out
adc
xchg
inc
cltd
sbb
arpl
inc
xor
adc
cmp
add
mov
inc
bnd
movsl
or
cmp
mov
dec
cmp
dec
add
adc
sub
aad
xor
loop
sbb
mov
jl
test
lods
repz
adc
fdivrs
out
in
jno
adc
scas
mov
pop
jo
and
jbe
pop
push
shll
sbb
xor
int3
shrl
cmp
lds
aas
fsubp
adc
divb
or
or
sbb
xchg
outsl
push
ficompl
push
outsb
pop
cmp
cmc
jl
or
into
mov
cmp
jl
je
mov
ja
adc
adc
cmp
xlat
fstpl
mov
jp
enter
addr16
pop
neg
shll
sbb
adc
mov
aaa
mov
test
cmpl
nop
imul
popf
cwtl
jmp
aaa
ret
jbe
int3
pop
mov
and
filds
stos
push
mov
mov
and
push
js
dec
sub
push
inc
lds
or
cmp
pop
iret
and
addr16
or
les
jae
and
pop
sbb
popf
mov
inc
push
cmp
and
cmp
inc
sbb
cwtl
mov
pop
in
add
icebp
in
xor
in
mov
adcb
adc
sub
js
arpl
adc
lea
push
in
sbb
inc
sbb
imul
mov
push
adc
lds
popf
pop
cmpsl
rol
cld
cwtl
mov
movsb
push
cmp
mov
jne
lock
sbb
movsl
ljmp
cltd
in
aad
push
jge
mov
sub
sbb
fwait
push
lcall
xchg
cmpsl
lcall
jmp
push
aaa
sub
mov
out
call
cmp
or
aam
cmp
fwait
jmp
popf
out
jb
lret
mov
xchg
jb
nop
fsub
mov
lds
add
outsl
movsb
daa
jbe
idivl
mov
dec
lret
add
add
pop
add
orb
push
mov
aam
inc
popa
xor
out
sub
mov
xchg
test
mov
dec
jle
es
push
push
js
sarb
xlat
enter
xchg
xlat
push
sbbb
cmp
clc
loop
idiv
int
mov
pop
cmp
mov
sub
pop
fldt
add
enter
je
imul
add
adc
push
lds
adc
push
loope
lcall
pushf
xor
daa
out
call
add
or
test
leave
test
je
popl
popf
add
ja
pop
sbb
fisubl
bswap
xlat
fcmovnu
or
jmp
inc
sub
sub
mov
push
cmpb
sub
hlt
popa
push
shlb
loopne
or
adc
mov
aam
lds
out
icebp
mov
mov
test
pop
stos
xor
pop
icebp
sub
fcompl
repnz
dec
popa
lret
aad
out
push
mov
stc
iret
stos
test
jnp
lock
mov
xchg
cmc
mov
insb
jge
icebp
lods
lcall
jmp
mov
aaa
push
add
push
test
ficoml
repnz
cmpsl
ret
scas
jbe
das
adc
in
lret
xchg
test
xlat
pop
aas
xor
stos
fmuls
aas
xor
push
loopne
mov
insl
adc
mov
in
icebp
mov
sbb
and
adc
jb
jp
outsb
cmpsl
lea
sub
xchg
imul
mov
cmp
add
sub
ja
cmpsl
enter
dec
stc
jp
subl
test
and
pop
xor
mov
paddd
pop
sub
push
in
stos
cs
imul
mov
sbb
xchg
fcoms
repz
das
fwait
push
add
add
inc
inc
inc
and
shrl
ret
cwtl
call
adc
jmp
lcall
lea
jmp
stc
dec
fisubrs
and
pushw
lcall
pop
sbb
dec
inc
daa
lahf
xor
fdivs
loopne
mov
fwait
sbb
imul
repnz
cli
std
and
xlat
mov
cltd
cmp
repz
inc
sar
mov
xchg
mov
or
imul
scas
out
jb
pop
sbb
jge
xor
loope
fwait
adc
jb
dec
repz
xchg
rorl
stos
sbb
fidivs
lret
sbb
pushf
cli
jecxz
sti
popf
pushf
pop
lret
aas
scas
sarl
shl
pusha
ja
mov
push
in
stos
pop
fs
int
mov
lcall
mov
mov
pop
add
insl
add
push
adc
add
subl
add
sub
inc
hlt
mov
inc
shlb
xor
rolb
mov
inc
mov
daa
or
or
sbb
adc
aas
sbb
mov
fisubl
inc
pop
jg
cmp
push
popa
pop
cmp
cmp
mov
sbb
pop
sub
add
std
jb
test
cmp
add
dec
pusha
mov
dec
int3
sbb
les
and
ror
shrb
dec
jg
cld
dec
cltd
mov
ja
fwait
leave
fildll
add
jmp
dec
jecxz
mov
add
push
pop
testb
inc
dec
adc
mov
mov
aad
outsl
adc
xor
adc
and
mov
sbb
jae
loopne
sub
or
push
pusha
mov
jp
mov
ret
jnp
jecxz
shll
loop
or
sbb
ja
test
mov
aad
add
push
dec
jmp
mov
xchg
scas
dec
pop
das
xchg
iret
inc
jnp
jmp
es
mov
dec
or
push
add
out
pop
orb
push
or
xor
sbb
adcb
xchg
aas
lock
lahf
mov
adc
mov
ss
push
loope
jno
hlt
adc
jge
adc
shrl
mov
mov
popf
or
aas
rcr
jecxz
jle
sbb
cwtl
and
test
loope
in
lret
sbb
sub
push
fucomp
sbb
dec
pusha
inc
lahf
xchg
mov
cmp
add
mov
imul
mov
sbb
bound
dec
or
inc
push
xchg
mov
fldl
push
adc
les
aaa
mov
lret
cwtl
outsl
std
sbb
out
sub
cmp
push
push
pop
movsb
pop
in
lahf
aaa
inc
pop
cltd
dec
insb
add
mov
rorb
cmc
bound
dec
xor
mov
fcomi
sbb
xchg
shll
pop
mov
aam
bound
test
xor
mov
movsb
out
dec
jmp
movsb
les
enter
inc
cmpsl
sub
out
int3
cmpsb
sarl
and
push
add
icebp
xor
mov
mov
adc
mov
dec
dec
mov
test
nop
pusha
shlb
sarl
fld
and
add
jg
pop
push
cmpsl
or
cld
pusha
cmp
mov
jmp
or
push
je
cli
int
hlt
pop
rcrl
and
or
mov
and
fcmovnu
out
push
aam
test
cwtl
scas
mov
cmc
lock
xchg
lods
mov
pop
movsl
inc
dec
xor
popa
lods
test
scas
push
iret
stos
punpckldq
pop
push
cltd
es
das
lcall
sub
dec
sbb
push
inc
aaa
aad
js
cmp
add
shrb
fwait
push
xor
jnp
sbb
in
dec
pop
aad
or
ljmp
mov
movl
shrb
pop
or
or
imul
and
movsb
ljmp
push
jge
mov
jae
hlt
or
loopne
cmp
push
roll
insl
decl
nop
inc
mov
std
js
out
add
or
lods
inc
ja
scas
mov
or
and
add
cmp
adc
and
mov
out
mov
adc
lds
mov
rol
movsb
pop
daa
xchg
shl
shlb
daa
pop
jo
and
add
jnp
adc
lods
push
adc
punpcklwd
add
adc
shlb
add
js
add
xor
aaa
add
push
pop
inc
dec
xor
inc
ss
xor
pop
dec
inc
add
pop
xor
dec
inc
pop
xor
push
pop
xor
push
cmp
add
push
xor
dec
inc
pop
xor
dec
inc
aaa
add
push
xor
pop
inc
inc
push
pop
inc
pop
push
add
xor
xor
inc
add
xor
xor
xor
push
pop
inc
add
push
pop
inc
pop
push
xor
add
xor
inc
cmp
push
cmp
push
xor
cmp
pop
push
dec
dec
add
pop
pop
dec
cmp
cmp
add
xor
dec
inc
xor
pop
cmp
add
xor
push
push
inc
pop
push
xor
push
inc
push
pop
dec
xor
cmp
inc
inc
pop
push
pop
push
dec
pop
push
xor
pop
push
push
cmp
dec
push
push
dec
xor
dec
dec
xor
push
dec
cmp
pop
inc
dec
pop
inc
push
push
pop
inc
add
xor
dec
cmp
push
push
add
dec
xor
xor
inc
dec
xor
ss
dec
cmp
push
push
aaa
xor
xor
pop
push
push
push
dec
pop
inc
add
pop
xor
pop
xor
inc
xor
xor
xor
push
xor
dec
xor
push
add
pop
add
push
add
xor
pop
add
add
push
add
add
dec
add
xor
pop
add
push
add
add
xor
pop
add
add
add
xor
inc
add
inc
add
xor
add
inc
add
add
inc
add
pop
add
add
push
add
pop
add
dec
add
add
inc
add
xor
add
inc
add
add
add
pop
add
xor
pop
add
add
push
add
add
pop
add
dec
add
xor
add
dec
add
add
aaa
add
inc
add
add
inc
add
xor
add
inc
add
dec
add
push
add
inc
add
add
add
pop
add
add
dec
add
add
cmp
xor
pop
add
add
pop
add
pop
add
add
add
push
add
add
xor
pop
add
inc
add
push
add
dec
add
cmp
aaa
add
add
dec
add
pop
add
inc
add
xor
dec
add
push
add
add
dec
add
dec
add
xor
add
add
push
add
add
pop
add
cs
add
test
add
rolb
add
add
add
xor
add
pusha
or
adcb
cmpb
subb
adc
add
call
add
sbbb
add
dec
or
addb
add
sbb
add
cmp
add
add
add
add
add
add
add
sbb
add
add
add
add
add
dec
pop
add
bound
add
jp
add
mov
add
andl
enter
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
repnz
add
fstpl
add
adc
add
sub
add
add
add
add
add
add
add
push
or
addb
addb
add
add
add
add
add
add
add
dec
or
sbbb
subb
jo
add
mov
add
add
add
add
add
add
add
jg
add
mov
add
add
add
add
add
add
add
nop
or
cmpb
add
mov
add
xor
add
add
orb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
add
add
shrb
add
add
add
add
add
add
add
add
xor
add
mov
add
andb
add
test
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
xchg
or
sbb
add
lock
addb
add
add
add
add
add
add
add
int3
or
orb
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
ret
add
or
add
add
add
add
add
sbb
add
or
add
add
add
add
add
and
add
in
add
add
add
in
add
or
add
in
add
add
add
divb
add
push
or
add
add
add
add
add
add
push
or
add
add
add
add
add
dec
add
add
add
in
add
add
add
adc
add
push
or
add
add
add
add
add
pop
add
push
or
add
add
add
add
add
add
push
or
add
add
add
add
add
outsb
add
adc
add
in
add
add
add
inc
ja
add
or
add
add
add
add
add
add
push
or
add
add
add
add
add
add
adc
add
in
add
add
add
bound
add
in
add
add
add
jo
add
push
or
add
add
add
add
add
add
pop
add
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
mov
add
in
add
add
add
ror
add
add
add
in
add
add
add
rcl
add
push
or
add
add
add
add
add
fiaddl
add
or
add
add
add
add
add
jecxz
add
or
add
add
add
add
add
in
add
adc
add
in
add
add
add
add
add
adc
add
in
add
add
add
adc
or
add
add
add
add
add
or
add
or
add
add
add
add
add
adc
add
or
add
add
add
add
add
add
pop
add
add
inc
add
inc
add
aaa
add
xor
or
push
add
xor
pop
add
push
add
add
add
add
add
pop
add
add
add
cmp
cmp
push
add
add
or
inc
add
add
xor
add
add
add
add
xor
xor
add
add
add
cmp
inc
add
add
push
add
pop
add
xor
dec
add
cmp
or
push
add
inc
add
xor
add
add
xor
dec
add
or
inc
add
add
add
dec
add
push
add
add
add
aaa
add
add
add
cmp
cmp
inc
add
xor
dec
add
add
inc
add
add
push
add
dec
add
pop
add
add
inc
add
or
push
add
add
add
add
push
add
add
or
inc
add
dec
add
add
add
push
add
pop
add
add
or
dec
add
push
add
push
add
add
xor
push
add
cmp
dec
add
xor
inc
add
add
cmp
pop
add
dec
add
add
add
dec
add
pop
add
add
xor
dec
add
dec
add
push
add
dec
add
add
pop
add
inc
add
add
add
xor
xor
add
add
add
add
add
add
add
inc
add
add
dec
add
or
dec
add
dec
add
dec
add
xor
pop
add
add
dec
add
add
cmp
xor
pop
add
add
add
add
dec
add
push
add
xor
inc
add
push
add
add
pop
add
xor
inc
add
add
pop
add
pop
add
add
push
add
cmp
xor
add
pop
add
push
add
add
add
inc
add
add
add
inc
add
inc
add
add
add
dec
add
add
push
add
pop
add
inc
add
add
add
push
add
inc
add
dec
add
inc
add
xor
push
add
push
add
pop
add
inc
add
dec
add
pop
add
push
add
dec
add
add
push
add
add
add
add
add
add
push
add
inc
add
cmp
pop
add
pop
add
add
inc
add
pop
add
aaa
add
pop
add
push
add
push
add
add
xor
xor
pop
add
add
add
cmp
push
add
xor
xor
dec
add
cmp
pop
add
add
cmp
add
add
pop
addl
rcrb
jmp
stos
xor
add
pop
add
and
jmp
fwait
xchg
es
in
mov
jl
jecxz
xor
dec
stos
cmpl
jmp
ja
xchg
fs
fcoms
into
insb
xchg
ficomps
stos
xchg
cmovg
mov
push
popa
jno
dec
or
xchg
aad
dec
mov
dec
dec
inc
cwtl
iret
into
mov
mov
jb
xor
jle
loope
mov
lret
cmp
and
arpl
cmp
mov
popa
out
push
inc
sub
pop
pushf
jne
flds
dec
shl
bound
scas
popf
jnp
dec
lock
sbb
cld
xorb
jp
jg
test
inc
dec
in
mov
shll
loopne
jnp
xor
es
insl
jmp
jnp
clc
lret
ret
out
xor
dec
scas
inc
jle
loopne
ficoml
cltd
pop
lret
jae
or
xor
add
call
cmpsb
shrb
push
mov
and
ret
mov
and
and
icebp
adc
push
push
pop
jne
outsl
adc
and
call
dec
mov
lea
jecxz
cltd
ret
push
jecxz
sbb
add
jmp
movsl
int
xor
push
imul
mov
lods
in
pop
adc
sbb
cmp
loopne
cmpl
or
dec
test
nop
xchg
jbe
movb
in
sbb
cwtl
xor
ja
into
sarb
fs
scas
in
pop
popa
movsb
les
or
dec
loop
pop
push
mov
fcmovbe
jno
jl
cld
xchg
pusha
and
shll
mov
loop
dec
adc
cmp
mov
mulb
in
push
cmp
lret
xchg
ficoml
stc
shll
cld
out
popa
pop
nop
leave
into
fdivrs
add
cld
jno
xchg
into
pop
add
inc
or
js
adc
rorl
mov
aas
push
pop
inc
xchg
int3
inc
jo
mov
fisubl
je
and
cmp
in
jo
rorb
call
and
imulb
sub
sbbb
inc
push
lahf
mov
xlat
lahf
jb
pop
add
mov
adc
mov
addr16
aaa
pop
mov
out
into
xlat
scas
js
lock
lods
push
pop
sub
pop
les
mov
cmp
outsl
cwtl
lret
ds
sub
mov
bnd
jne
mov
mov
or
sbb
js
sub
jecxz
mov
cmpsl
push
movzbl
pushf
jo
mov
imul
or
adc
cwtl
clc
test
and
xchg
jmp
mov
pop
mov
pop
repnz
pop
stos
jnp
adc
add
sbb
push
push
jmp
lret
adc
imul
pop
imul
sti
mov
push
mov
inc
push
movsb
stos
insl
mov
dec
sbb
push
adc
scas
cmp
sbb
xchg
aam
jp
mov
adc
mov
adc
je
sbb
out
sub
dec
psraw
sub
cli
jge
lock
pop
js
push
mov
pop
mov
and
pop
inc
jnp
jle
mov
daa
and
pop
imul
data16
enter
popa
nop
lods
and
inc
push
pop
pop
test
jle
ljmp
dec
pop
mov
push
adc
mov
xor
dec
bswap
push
bound
movsb
inc
xchg
and
cs
scas
insb
jno
cmp
sbb
call
xchg
cmc
orl
adc
sub
int
arpl
sbb
push
xchg
adc
xchg
sbb
mov
out
inc
movsl
cmp
popf
mov
add
popa
mov
jno
jnp
inc
xchg
sahf
cmp
push
out
or
inc
mov
data16
clc
mov
xchg
sbb
loope
das
subb
repz
lret
sub
lods
movsb
jae
push
int
sub
hlt
or
mov
pusha
dec
repnz
stos
out
leave
add
int3
lods
inc
rolb
mov
pop
push
into
jae
push
push
test
mov
outsl
loop
sub
sub
cs
mov
xor
dec
jo
jmp
xchg
scas
adc
int3
jb
inc
xchg
and
or
lcall
ljmp
outsb
adc
pop
fcmovnb
push
lods
shlb
add
iret
xchg
mov
mov
push
icebp
adc
orb
cs
rcrl
cmp
cmp
fnstenv
push
dec
test
mov
adc
loop
adc
sub
stc
pop
arpl
mov
jns
push
add
and
ret
ret
das
mov
insb
jno
jno
and
mov
mov
mull
xlat
jae
dec
pop
fwait
jae
mov
loope
and
rorb
dec
in
mov
add
faddp
cld
dec
add
addr16
insb
mov
mov
aad
jb
pop
out
push
or
fmulp
jnp
mov
mov
jbe
fs
in
sub
push
jbe
leave
icebp
mov
cli
ret
stos
arpl
sub
daa
into
push
add
mov
aaa
cmpsb
mov
pop
hlt
mov
loopne
push
push
dec
insb
sub
test
xchg
loopne
out
stc
mov
outsb
xchg
gs
jnp
jne
cmpsb
add
xor
pop
adcb
dec
jbe
lret
xchg
add
pop
rorb
or
test
lcall
pushf
sbb
mov
or
mov
inc
scas
or
addr16
cmpl
xlat
xchg
iret
fadd
and
je
cltd
rcrb
mov
mov
pop
lods
xor
sbb
sub
pusha
xchg
fcmovnb
adc
mov
jbe
inc
mov
cld
loope
popf
inc
pop
in
repz
xchg
movsl
ja
mov
xlat
mov
push
dec
stc
and
pop
fistps
push
fcoms
or
and
xchg
fstpt
mov
lret
loop
hlt
repz
add
sub
test
pop
insl
pop
data16
in
insb
test
mov
add
dec
lods
mov
mov
lret
mov
mov
rclb
inc
push
sbb
mov
inc
mov
adcl
or
in
add
add
lahf
arpl
mov
push
cmp
inc
add
push
pop
add
int3
out
les
or
xchg
and
test
stc
mov
mov
cltd
mov
test
fcom
out
push
fnstenv
stos
incl
pusha
mov
xchg
sub
or
xor
test
shl
mov
lods
pop
mov
add
das
lret
cmp
popf
jo
mov
push
mov
scas
mov
add
nop
fs
jne
sbb
popa
mov
push
lret
lret
mov
ret
insb
mov
xor
sbb
aam
and
inc
aaa
loope
dec
sub
inc
cmp
mov
push
imul
lret
mov
std
mov
sub
mov
sbb
andb
cwtl
pop
pop
adc
sub
cmpsb
sub
fwait
ja
test
nop
push
xchg
loope
pop
arpl
je
sti
dec
int3
add
lret
mov
cmp
lret
movsl
add
out
sarb
insl
int3
daa
jbe
inc
je
or
insb
out
cmpsl
aaa
jge
dec
and
das
popf
lds
inc
lret
and
out
js
adc
inc
mov
aas
mov
pop
test
popf
sbb
lea
adc
jg
jle
dec
mov
sbb
dec
call
in
jg
xlat
adc
inc
mov
les
daa
ret
xchg
out
push
mov
mov
popa
mov
push
ficomps
loopne
stos
add
sahf
in
sub
ror
out
jp
xchg
mov
push
clc
adc
mov
jb
xchg
pop
nop
lods
fstl
movsb
sbb
inc
adc
icebp
adc
pop
int
mov
dec
test
in
cmpsb
push
test
popa
sahf
inc
ljmp
pop
or
inc
jg
pop
jns
xchg
sub
add
ja
bound
shl
add
les
rcll
adc
out
push
pop
cmp
cmp
popf
push
fldl
hlt
pop
pop
in
or
es
in
jmp
mov
repnz
xor
jnp
cmpsl
dec
mov
pop
in
mov
sbb
inc
and
sub
mov
sub
inc
inc
pop
push
rol
mov
dec
fidivrs
sbb
insl
mov
cwtl
xchg
pop
out
jecxz
mov
sbb
push
cmp
lcall
mov
divl
adc
aam
pop
pop
mov
and
loopne
push
add
sbb
sub
pop
dec
cltd
inc
shlb
jge
fisttpll
dec
out
shll
inc
mov
pop
mov
push
in
rcll
sub
in
sti
inc
popf
pushf
cmp
xchg
leave
and
dec
shll
mov
ss
loop
enter
jno
cld
in
fnstsw
fsub
pop
outsb
mov
xor
cmpsb
sbb
les
lret
sbb
sub
pop
insb
sub
notl
repnz
iret
mov
dec
in
arpl
int
sub
or
inc
ljmp
pop
mov
mov
movsl
in
lods
inc
popa
fistpll
xchg
cli
jmp
jg
xchg
gs
pop
cs
lahf
aaa
rep
pop
movsb
xor
sbb
sub
xchg
xor
jp
cmp
push
mov
mov
cmp
in
xor
adc
into
das
jp
ret
push
dec
jne
push
push
jb
xchg
lcall
call
or
adc
sub
dec
insl
fnsave
or
cmp
fucom
xchg
jle
mov
push
xlat
test
addr16
adc
fsts
imul
loopne
push
in
add
xor
pop
xor
xor
jo
push
test
cmp
pop
fdivl
popa
cmpsl
push
pop
mov
fadds
pop
leave
and
test
cmp
mov
push
dec
fdivs
cmpsb
repz
call
jbe
lock
pusha
push
sarl
inc
jae
les
daa
cmpsl
loop
das
sbb
adc
adc
insb
out
or
ffreep
or
inc
in
adc
dec
out
mov
add
inc
int3
loopne
inc
xor
aas
rolb
mov
sub
jno
ror
sub
lock
in
push
sbb
dec
hlt
jp
shl
scas
test
jo
in
es
jmp
and
stc
pop
dec
xor
mov
psubusw
int3
es
pop
sbb
push
scas
push
pop
jb
or
cmp
and
iret
mov
adc
xchg
fimuls
pop
dec
add
movsl
jl
gs
mov
out
lahf
les
mov
push
xchg
inc
shll
xchg
xchg
push
and
pop
push
repnz
jnp
jnp
sbb
leave
inc
stos
stos
inc
mov
jge
fcomps
inc
imul
gs
dec
adc
lahf
push
outsb
xchg
cmp
arpl
das
mov
outsl
or
lret
popf
push
leave
imull
std
std
insb
jne
sbb
ror
hlt
mov
xchg
inc
mov
mov
rcrb
repz
hlt
test
push
adc
dec
xchg
add
and
xchg
adc
cmp
jne
sbb
dec
and
mov
jmp
loop
mov
sbb
outsb
rcrb
scas
dec
pop
xor
movsl
testl
pop
cli
lea
cmp
jo
push
add
bound
sbb
stos
dec
inc
je
add
mov
nop
adc
adc
cmc
dec
sbb
sahf
pop
or
sbb
sarb
enter
add
shrb
in
inc
cmpsl
test
cmc
add
xlat
push
adc
push
sub
adc
test
fidivl
xor
mov
rol
shlb
xor
pop
pop
jae
out
xchg
xor
pushf
call
rcrl
cmp
jmp
pop
jle
jecxz
push
ljmp
sbb
pop
and
mov
or
jo
flds
imul
test
mov
mov
dec
repnz
cmp
aaa
dec
scas
push
jno
cmp
pop
cld
pop
call
fcoms
test
mov
adc
test
aaa
xchg
cmp
cld
ret
mov
inc
xchg
jns
dec
movsb
push
cmp
imulb
lret
std
sahf
sahf
xchg
scas
push
sub
cli
out
sbb
jmp
mov
push
jb
xor
shlb
sbb
insl
les
mov
jae
mov
movsb
mov
pop
add
sbb
xchg
mov
fldl
out
lahf
add
adc
int
pop
ja
cmp
jecxz
lock
out
ret
arpl
jnp
or
push
jg
loop
daa
dec
rolb
dec
sbb
cwtl
mov
xchg
dec
mov
ss
push
fwait
cmp
imul
sbb
movsb
cs
jns
mov
push
test
aad
xchg
mov
ret
mov
mov
sar
nop
or
testl
sbb
ret
sahf
orl
sbb
fcomps
xor
push
sti
fs
xchg
sarb
pop
inc
push
leave
pop
pop
aam
push
mov
cwtl
nop
push
fwait
xor
in
mov
imul
divl
adc
ss
xor
xchg
fdiv
in
imul
stos
mov
xchg
pop
jb
ret
inc
dec
and
pop
inc
rorb
ss
jb
adc
iret
nop
andl
test
push
jl
push
adc
std
cmp
cld
arpl
push
sub
rolb
out
jns
dec
xchg
jecxz
xor
das
loope
add
sbb
cmp
int
mov
lea
mov
repnz
adc
stc
sbb
or
dec
das
das
jmp
sub
adc
xor
pop
out
icebp
mov
test
scas
in
cmp
push
setle
push
insb
js
mov
push
pop
jno,pn
pop
inc
aam
jmp
sbb
and
outsb
cmp
push
adc
pop
subl
xor
sub
daa
in
sbb
imul
call
jo
out
inc
jmp
inc
pushf
push
xor
jns
xchg
ja
mov
or
loopne
sub
xchg
je
push
enter
push
mov
sbb
push
and
dec
rcr
pushf
rcr
imul
push
ja
dec
push
mov
inc
push
sti
rol
pusha
xorl
addr16
dec
add
push
stos
in
orb
xor
or
mov
mov
cld
xchg
loop
inc
int3
pop
dec
fdivrs
outsb
lcall
mov
flds
push
xchg
sbb
and
clc
ret
adc
or
push
sahf
add
push
or
inc
jl
cmp
mov
mov
pusha
popf
int3
scas
out
ror
into
ds
cmc
inc
mov
mov
jmp
ret
lret
xor
xlat
les
mov
mov
mov
inc
push
add
push
xor
dec
lret
and
gs
in
ret
ljmp
sub
ret
dec
into
mov
ret
clc
and
out
pop
jp
andl
in
inc
shr
repz
nop
pop
es
int
arpl
mov
pop
lahf
pop
xchg
cmp
arpl
cmp
xorl
popa
mov
pushf
pop
sbb
daa
xor
movsb
xchg
test
cmc
sub
subl
les
cmp
arpl
aad
fs
adc
pop
or
cmpsl
mov
psubsw
mov
pop
lock
push
ljmp
sahf
push
inc
and
fidivrs
stos
or
lock
mov
xchg
push
inc
pop
aas
xchg
sysexit
or
mov
xchg
movsb
loopne
fs
cmp
stc
cmp
mov
sbbl
adc
mov
push
aas
lock
mov
inc
mov
inc
imul
mov
mov
dec
insl
jb
lea
out
fwait
loop
mov
scas
fisubs
mov
int3
jbe
stos
aam
adc
loope
jg
sarl
mov
mov
test
mov
aas
mov
iret
mov
dec
mov
lock
pop
insb
sbb
clc
push
mov
mov
cmp
inc
loopne
js
cmp
cltd
gs
out
mov
mov
mov
adc
xchg
insl
pop
push
leave
pop
lds
addl
in
cmp
adc
xor
ss
mulb
jmp
push
and
aas
sti
mov
sbbl
ss
ror
lret
xchg
orl
jmp
jnp
push
jecxz
push
inc
push
sarb
pushw
xchg
inc
subl
or
ss
sbb
mov
stos
mov
lret
push
and
xlat
and
jbe
add
inc
das
push
jbe
sbb
or
pop
and
les
pusha
hlt
mov
icebp
mov
jg
cmpsl
dec
lock
adc
cmp
insb
ret
adc
adc
ja
insb
stos
in
pop
imul
in
negb
pusha
loop
mov
sbb
popa
aaa
mov
xchg
push
inc
cmp
and
loope
pop
push
adc
xchg
pop
xchg
mov
aas
pushf
cld
and
sbb
cs
mov
lcall
pop
aaa
push
mov
enter
outsb
jp
inc
ret
dec
fsts
cltd
jnp
movsl
ror
aad
jo
orl
lret
and
mov
mov
lock
xor
xchg
rcrb
jbe
lock
out
leave
stc
xor
sub
in
ds
aas
ja
bound
fistpl
cmpsb
lods
fiaddl
std
push
inc
mov
push
mov
shll
adc
sub
outsb
loope
mov
cmpsl
fsubs
mov
pusha
sbb
mov
shl
fcomp
fldenv
pop
ss
push
repz
mov
jno
xor
jb
add
and
or
call
notl
gs
repz
mov
mov
and
inc
push
and
mov
push
test
dec
inc
mov
pop
out
stos
ljmp
int
inc
push
out
lcall
mov
sarb
out
loope
outsl
popl
and
and
mov
pusha
jecxz
push
test
addr16
jnp
out
add
jle
pop
rorl
ret
push
aas
mov
push
std
sub
pop
outsl
je
jae
mov
aaa
lret
inc
or
aad
mov
fstl
push
jbe
in
xor
in
mov
test
adc
loope
lea
jne
shll
sub
cmpl
fs
pop
test
add
out
mov
push
push
xchg
cld
lahf
fsubrs
in
mov
adc
mov
push
loope
add
scas
mov
pop
mov
mov
cld
push
xor
dec
add
push
pop
add
fisttpl
repnz
ljmp
ljmp
fcoml
fcmovnb
mov
sbbb
dec
push
mov
jno
arpl
sarb
mov
out
pusha
jne
xchg
inc
sahf
adc
das
dec
shlb
mov
in
and
inc
rorl
out
out
out
pop
insl
and
cvtps2pi
pop
push
stc
hlt
mov
inc
es
repnz
mov
aaa
lret
cmp
add
jl
scas
add
xchg
push
loop
and
lret
call
repz
cmpb
loope
movl
xor
std
and
jne
cmp
cs
in
out
mov
pop
cmpsb
test
test
popa
mov
dec
ljmp
icebp
jge
pop
xchg
adc
jbe
push
push
and
movsl
xlat
cli
fmuls
les
clc
mov
call
and
and
jecxz
in
ss
fistpl
push
les
cmp
fbld
pop
sahf
sbb
int3
jo
insl
pushf
mov
orl
mov
xchg
add
sbb
rcll
std
popa
icebp
inc
cltd
xchg
pop
xlat
mov
aas
faddl
in
aad
pushl
or
fistps
push
lahf
adc
and
test
or
cs
sub
sbb
test
lods
cs
loope
mov
and
pop
xchg
fbld
movsb
jg
sar
sbbb
subl
hlt
and
out
in
icebp
test
dec
shll
xlat
fistl
jle
pusha
sahf
idivl
addr16
mov
mov
ds
jae
xor
cmp
jns
dec
ror
adc
xchg
mov
cmp
inc
inc
mov
sahf
dec
pop
nop
in
mov
pop
fisttpl
and
jmp
or
mov
or
lret
add
fdivs
dec
sub
int
cmp
mov
pop
sbb
inc
mov
cmp
mov
dec
sbb
js
xor
mov
dec
or
xchg
aaa
bound
pop
in
loope
mov
out
pop
push
mov
lret
sub
mov
in
adc
pop
dec
jbe
clc
mov
cmc
or
mov
add
mov
ret
sub
pop
fmull
adc
dec
shl
pop
mov
out
xor
ja
pop
xchg
lret
xchg
je
addr16
xchg
push
arpl
hlt
fyl2x
inc
sub
mov
cmp
gs
out
cmpsl
ret
sbb
aaa
inc
stos
rcl
loopne
lahf
dec
mov
imul
jo
test
inc
mov
push
repz
sub
pop
mov
pusha
imul
sub
push
xchg
sbbl
push
jmp
xor
dec
cmpsb
mov
jecxz
repnz
adc
imul
sbb
testb
add
sbb
xchg
fwait
adc
int
in
mov
mov
cmp
cltd
lahf
mov
fdivrl
mov
nop
gs
mov
cmp
fcmovb
shll
mov
stc
int
xor
xor
loope
push
fcmovnbe
sbb
daa
leave
mov
adc
sub
xchg
gs
add
mov
mov
insb
or
mov
push
mov
test
xchg
lahf
call
add
jnp
fdivl
pusha
imul
out
xor
nop
xchg
cwtl
jecxz
bound
loope
add
adc
and
sti
pop
loopew
mov
dec
shr
pop
rorl
ja
fnsave
and
pop
fadd
iret
inc
pop
std
out
jbe
cmc
in
aam
add
or
in
mov
nop
sysenter
dec
sti
and
pop
pop
cld
sub
daa
cmp
xchg
jbe
out
and
mov
cwtl
repz
sub
sub
xlat
xor
in
imul
out
test
arpl
fcomip
jge
mov
ljmp
cmp
mov
jb
enter
test
xchg
and
std
test
dec
cmp
jne
jne
fisttpl
inc
add
sub
mov
bound
adc
push
xchg
push
adc
push
faddl
cmp
lret
xor
dec
nop
mov
orl
mov
mov
imul
adc
mov
movl
js
xor
sti
jmp
les
jo
and
cmp
push
out
mov
loope
les
pop
sub
inc
pop
sub
fildl
sbb
cltd
dec
or
sub
mov
inc
imul
push
lods
xor
outsl
xlat
sub
mov
popf
call
jns
mov
or
sbb
imulb
and
adc
xchg
and
aad
pop
adc
andb
fsubs
loop
cwtl
stc
push
out
ja
lods
xlat
out
mov
adc
loopne
mov
cmpsb
and
imul
addr16
es
or
pop
out
inc
into
insb
test
xor
and
loope
mov
cmp
mov
sub
nop
add
inc
lret
je
sbb
mov
add
mov
xlat
ss
test
xchg
dec
adc
xchg
ja
lcall
lret
sub
inc
ret
lods
mov
fnstsw
xor
adc
add
cmc
push
ja
ss
sub
loope
add
xor
out
sub
push
lods
movb
iret
adc
bound
repz
flds
mov
xlat
xchg
cmp
mov
xchg
fs
inc
fnstsw
push
lock
add
and
in
shll
movsb
mov
push
int
xchg
inc
mov
test
push
repz
mov
repz
in
sub
repz
mov
pop
sub
push
dec
lahf
js
sub
adcl
fsubs
andl
cmp
stos
sub
push
cmp
je
nop
je
negb
xchg
or
jno
cs
roll
add
outsb
push
xor
fldl
imul
jecxz
cmpsb
adc
mov
test
push
pop
cld
popf
add
push
pop
add
ljmp
out
push
faddl
xlat
jle
push
imul
add
lret
aaa
jl
testl
shll
dec
shlb
ret
dec
mov
stos
cmp
ljmp
aad
pushf
fmull
inc
mov
xorb
mov
nop
daa
mov
insb
mov
out
scas
notb
inc
cmc
jo
xor
and
dec
into
in
jns
push
add
mov
test
arpl
mov
adc
pop
lret
ror
mov
mov
and
dec
je
inc
in
cmp
cmpsb
sub
pusha
mov
mov
sub
sbb
jp
icebp
or
cwtl
push
bound
ja
aas
push
test
in
sub
cli
xorb
loope
loop
aas
rorl
add
pusha
test
push
insl
jp
mov
or
stc
jo
insl
loop
bound
mov
push
lret
mov
bound
inc
fisttps
jecxz
inc
in
add
test
mov
adc
mov
and
addr16
fcomps
dec
inc
out
les
or
lods
jecxz
mov
loop
popa
push
data16
sbb
dec
repz
mov
jno
int
cwtl
or
and
add
data16
mov
clc
mov
pop
and
movsl
test
mov
popa
inc
je
sub
cmp
or
dec
lcall
xchg
lock
ljmp
lret
jge
xchg
dec
movl
imul
loope
push
sbb
cmp
mov
pop
mov
mov
xchg
int3
movsl
fistpll
cwtl
les
adc
fistps
mov
or
mov
dec
gs
repnz
jp
cmp
test
sti
lcall
sub
lahf
mov
outsl
daa
out
je
jecxz
in
jbe
in
pop
idivb
dec
pop
sbb
into
ret
add
mov
dec
pop
xchg
popa
mov
xor
call
mov
xor
push
gs
shrb
jle
mov
mov
and
sahf
sbb
clc
sti
loopne
dec
imul
shrl
dec
sahf
js
cmp
mov
xlat
lret
jnp
jnp
jecxz
leave
loop
ficompl
push
mov
in
push
and
outsb
andb
out
test
adc
or
sarl
stos
adc
add
or
mov
pop
adc
adc
jmp
adc
sbbb
aaa
mov
xchg
xchg
mov
xor
lea
aad
mov
xor
ja
cmpsb
pop
ret
outsl
cmp
bound
insl
xchg
xor
mov
fnstenv
out
pop
xchg
and
test
mov
test
pop
enter
repnz
push
push
pop
xchg
je
dec
jo
call
fwait
lret
mov
loopne
loopne
lret
orl
fldt
mov
rolb
cmp
jo
movzwl
dec
inc
ja
aam
inc
mov
fisubs
scas
cmp
sub
in
pop
xchg
aad
subb
movsl
pop
in
cmp
dec
cmc
mov
test
pop
mov
shl
idiv
lret
xchg
cmp
fisttps
scas
ret
mov
movsb
dec
cmp
dec
jecxz
jne
jecxz
in
dec
dec
mov
mov
mov
xor
pushf
mov
push
andb
std
sbbl
jl
popa
inc
loop
xchg
jne
enter
mov
insb
push
leave
pop
enter
sbb
xor
fnsave
mov
pop
imul
or
test
pop
mov
or
pop
testb
jl
jmp
xor
loopne
jbe
or
push
pop
mov
xchg
aam
or
and
jne
out
lret
lret
fisubrs
dec
xor
mov
and
pop
push
arpl
add
cs
les
jg
fwait
nop
push
lods
mulb
sub
fs
mov
shrb
fistpll
movsb
adc
insl
mov
mov
dec
lahf
mov
pop
push
inc
mov
ret
and
lock
mov
cmp
and
cmpsb
and
movsl
add
jecxz
ss
call
xor
pop
push
sub
shrl
adc
mov
jo
out
sbb
testb
mov
fwait
adc
fs
push
popa
push
comiss
push
aad
pop
xor
ss
cmp
sub
cmpsb
xchg
popa
and
dec
add
cmpsb
xor
pop
jge
ljmp
cld
push
js
repz
adc
out
fucom
je
ja
stos
or
or
aam
jl
scas
sbb
adc
sbb
mov
dec
stos
inc
pop
in
test
jnp
dec
dec
out
or
lea
insb
lock
lods
mov
and
mov
pop
movsb
outsb
jmp
jmp
pop
add
adc
stos
shl
push
add
xlat
out
push
stos
add
pop
scas
jo
leave
out
dec
sub
enter
mov
push
rcl
push
lock
shrb
inc
cmp
mov
andb
test
sub
adc
xchg
jns
cltd
dec
cltd
or
pop
in
ljmp
clc
sti
push
xor
push
setno
and
in
mov
push
mov
decb
lds
inc
mov
push
movsl
int3
pop
pop
and
mov
shlb
jle
jae
jmp
mov
arpl
insb
sahf
mov
pusha
test
pop
adc
clc
sub
mov
lret
inc
movsb
fbstp
dec
dec
pushf
cmp
and
push
shrl
sbb
call
and
aam
insl
rcll
fstpt
loope
in
jg
in
mov
cli
inc
or
mov
cmp
out
push
fimull
mov
subb
mov
adc
int
adc
lret
std
inc
add
imul
subl
mov
in
insl
push
out
divb
push
andl
sbb
in
jbe
cmp
out
jb
mov
gs
lods
add
mov
sbb
loopne
xor
rcrl
jle
mov
test
or
movsb
mov
cld
mov
inc
rdtsc
fwait
hlt
rclb
mov
adc
outsl
mov
mov
add
add
or
pop
cltd
roll
add
push
pop
add
in
jbe
inc
and
mov
aam
push
inc
inc
jecxz
pop
cli
jecxz
push
dec
push
inc
sbb
push
adc
jne
inc
das
mov
fwait
arpl
mov
test
lret
xor
adc
adc
push
jmp
mov
xor
push
dec
lret
jmp
push
jge
das
fsubrp
mov
dec
sub
daa
mov
sbb
out
cli
push
fcmovu
pop
jo
gs
aad
and
mov
mov
inc
inc
sbb
shll
add
aad
mov
push
inc
push
cmp
xor
adc
arpl
adc
imul
test
jmp
dec
xor
xor
imull
push
into
push
and
lahf
mov
in
jae
lahf
out
iret
cmp
adc
popa
shr
inc
push
mov
cmc
negb
in
or
mov
add
repnz
outsl
je
xchg
sti
sbb
pop
ja
sarb
test
xchg
test
mov
sub
leave
cmp
fmull
mov
jnp
out
xor
jle
rcr
scas
in
pop
mov
loope
dec
inc
xchg
clc
stos
cmp
test
jmp
lret
rorl
ljmp
dec
push
mov
and
pusha
roll
lock
inc
shrb
sub
jmp
dec
loope
dec
loopne
inc
mov
push
stos
dec
cmp
xor
pop
iret
and
adc
jb
mov
test
push
add
out
xchg
mov
pop
je
cmp
stos
sbb
xor
jnp
mov
jecxz
xor
fisubs
nop
dec
adc
mov
out
in
pop
adc
nop
push
cmp
cmp
scas
jbe
les
loope
sbb
mov
pushf
mov
sbb
cmp
cmp
outsb
mov
sbb
push
mov
cmpsl
call
pop
in
ja
fmul
cmp
push
push
push
or
fsubrs
lcall
mov
mov
hlt
mov
inc
sub
ret
mov
or
mov
sub
cmpsl
push
xor
jbe
jmp
jg
and
pop
add
sahf
movb
fdiv
mov
pop
and
xor
mov
pop
pop
jp
into
insb
or
jno
pop
inc
jmp
aam
dec
sbb
xchg
clc
mov
lahf
or
les
dec
jns
mov
popa
icebp
xchg
sti
sahf
push
lcall
test
shrb
pop
jmp
cmp
lock
xor
and
or
cmpsl
addb
loopne
lods
mov
and
xchg
mov
dec
jns
inc
pop
sub
std
push
xchg
adc
xlat
mov
out
sub
sbb
in
and
push
cs
es
mov
pop
scas
int3
push
je
jmp
shrl
hlt
xchg
sbb
hlt
pop
nop
add
push
dec
xchg
mov
sbb
scas
adc
jl
gs
nop
lods
int
lock
clc
and
jne
pop
mov
std
gs
mov
ret
dec
dec
lahf
nop
pushf
sbb
jns
stos
mov
jnp
push
inc
mov
mov
pusha
sbb
sub
out
rclb
and
cwtl
mov
lods
bound
xor
aam
dec
sbb
mov
cwtl
nop
pop
movsb
out
shll
inc
lret
and
jg
cwtl
pushf
mov
lods
repz
mov
or
push
or
push
rcll
cltd
push
pop
push
loopne
inc
sub
mov
cs
push
imul
mov
xchg
dec
stc
sbb
jo
data16
jl
cmp
push
sti
inc
fmuls
xchg
mov
rcll
into
gs
in
fucompp
aad
mov
cmc
jb
jl
jg
cltd
lods
sahf
nop
jno
push
bound
stos
ljmp
push
lock
adc
cwtl
ja
fwait
jnp
pushf
mov
aaa
and
lret
sar
iret
cwtl
xchg
adc
or
negl
aam
add
call
lock
mov
xchg
int
mov
xor
push
cmc
stc
push
sbb
aad
sbb
pop
out
aam
ss
jl
pop
fdivrs
ja
mov
std
ja
movsb
push
clc
ret
sbb
les
cmp
fcoml
loop
jle
dec
movsb
xchg
jp
lret
loopne
testl
sbb
fdivl
dec
xchg
ret
outsl
jno
jmp
outsb
loop
push
loop
xor
adc
jmp
nop
xor
repz
mov
cmpsl
outsl
popa
push
push
icebp
insb
sub
cmp
outsl
mov
outsb
leave
icebp
shl
popl
nop
imul
jle
xchg
add
jl
outsb
or
or
jl
and
inc
cltd
popf
incb
and
add
subb
aad
pop
repz
aaa
rcrl
mov
cmp
daa
mov
les
test
stc
ja
int3
mulb
jge
addb
popl
xor
dec
mov
stos
xor
leave
or
mov
cmp
and
cld
cmpsb
cmc
imul
mov
pop
fcomps
ds
cmp
shlb
jno
mov
ret
test
adc
xor
inc
stos
lock
fildll
mov
lret
mov
es
and
lods
xchg
mov
test
leave
fwait
imul
pop
call
xor
icebp
rcr
loope
gs
sub
push
fstp
insb
jb
mov
adcb
add
adc
nop
mov
inc
shlb
adc
mov
jnp
xchg
xor
jno
xchg
js
push
mov
in
dec
fwait
adc
imull
roll
orl
arpl
xchg
and
fmull
sub
lods
cli
or
push
jo
jecxz
roll
pop
adcl
cmpsl
sti
inc
mov
ljmp
adc
pop
call
mov
lahf
imul
popf
js
sub
or
popa
ja
add
inc
jae
or
add
push
enter
xchg
sbb
pop
out
je
movsl
mov
aaa
inc
jnp
stos
fs
dec
sti
add
adc
ret
jb
popf
cs
inc
sub
popl
insl
sub
stos
add
or
outsb
push
ss
subl
mov
mov
add
push
insl
cmpsb
mov
add
add
push
add
ja
xchg
popf
mov
out
jge
add
push
pop
add
sbb
mov
adc
mov
and
xchg
add
fmuls
int
das
aad
cmp
and
xchg
jg
mov
cmp
xor
daa
repnz
jp
insl
xchg
jge
rcrb
sub
inc
movsl
mov
mov
nop
cmp
fabs
jge
mov
mov
sub
push
cmp
dec
sbb
add
ss
dec
cmp
icebp
mov
hlt
and
lcall
ficoml
push
clc
clc
jg
dec
repnz
add
imul
pusha
xor
xor
inc
cmp
and
and
pushf
xor
push
xchg
fdivrp
cmp
fcomps
jb
pop
push
test
add
mov
fimull
outsl
push
inc
and
jno
sbb
call
mov
lock
out
jns
sbb
cmp
into
jb
in
sub
ja
loope
mov
cmp
add
xchg
popa
push
ret
push
jns
leave
shll
xlat
push
xorb
pop
mov
sbb
jge
pusha
cmp
int3
pop
jp
test
cmp
inc
mov
in
repnz
into
fs
call
cltd
into
icebp
or
mov
inc
lret
add
sbb
testb
dec
into
xchg
cmc
xchg
inc
test
hlt
pop
jg
push
stc
jmp
dec
ljmp
push
jge
pop
mov
inc
orb
movsb
imulb
sahf
push
and
sbb
shrb
push
sbb
inc
out
and
cmp
add
xor
stos
cld
cmp
ss
mov
insl
push
test
jl
ffreep
movsb
push
mov
add
jp
test
xor
scas
sbb
imul
cmp
clc
lock
divb
jp
lds
pop
daa
std
mov
dec
mov
sti
dec
movsl
inc
sbb
jmp
js
dec
add
mov
lahf
ss
sahf
push
hlt
cmp
ficompl
push
xor
xor
jge
inc
es
sub
repnz
scas
sbb
mov
mulb
lods
xchg
push
sub
mov
imul
inc
movsb
popf
adc
dec
fsubrp
cmpsl
mov
insb
adc
fcmovnbe
fldcw
dec
stc
cmp
div
or
les
jb
dec
inc
add
jns
inc
pop
dec
lea
sbb
ds
cmp
pushf
cmp
cmc
inc
repnz
sub
lcall
add
das
mov
add
lret
add
cwtl
mov
sub
lea
and
or
enter
ljmp
data16
push
sub
rcr
pop
mov
sti
aaa
ljmp
mov
notb
scas
pop
lea
in
dec
in
pop
pop
inc
call
push
cmp
fildl
sbb
mov
movb
dec
push
push
jae
jo
add
es
adc
addr16
mov
aaa
daa
fs
test
mov
cmp
pop
adc
or
iret
rcr
jbe
xchg
loopne
pop
cmp
outsb
dec
mov
inc
add
mov
jecxz
ficoml
outsl
adc
lock
out
jle
imul
mov
inc
push
aad
jmp
lcall
jbe
push
or
sbb
xchg
loop
sbb
test
fstl
xor
mov
aaa
in
dec
jge
or
push
lret
cmpsb
pop
adc
sahf
adc
lret
add
cmp
pushf
cmc
inc
mov
das
popa
mov
ljmp
xchg
loop
push
add
push
pop
lret
sbb
sub
out
sahf
jmp
inc
push
mov
xchg
out
xchg
dec
stos
pmulhw
insb
dec
nop
mov
ret
scas
arpl
push
cld
xchg
stc
bound
inc
mov
sub
ret
test
xor
sub
push
pop
dec
lret
mov
xor
popa
or
insb
mov
scas
xor
jb
ror
sti
or
or
inc
leave
out
lock
std
mov
lcall
xchg
sarl
or
dec
out
loope
insl
dec
or
sti
inc
lcall
sub
push
je
jmp
call
or
inc
mov
lods
pop
lret
popa
jb
psubw
xchg
ljmp
jb
xlat
fsubrs
inc
test
jno
test
sub
repz
xor
mov
clc
fistpl
lret
aam
sbb
in
cmp
mov
sbb
jl
test
and
add
push
jmp
cmp
add
xlat
aas
sahf
out
push
inc
add
dec
stos
mov
sbb
xor
std
add
adc
loope
dec
out
mov
xchg
test
mov
push
out
sub
pop
adc
cmp
sub
clc
mov
xor
loop
pop
dec
jbe
test
out
xor
add
xchg
xchg
cli
inc
push
data16
mov
xchg
mov
push
int3
mov
cltd
pusha
mov
cli
dec
jnp
xor
lahf
loopne
into
sub
test
ljmp
add
mov
outsl
jnp
mov
pop
dec
ret
pop
cmp
xor
aas
jge
inc
cltd
or
push
cmp
lcall
jbe
shr
mov
clc
inc
xchg
pop
mov
loope
push
fcoml
pop
jecxz
ret
adc
mov
push
aas
sbb
jb
sub
adc
daa
add
adc
jl
popa
jnp
shrb
lahf
adc
jno
lret
popf
pop
repz
dec
push
inc
shll
or
popa
lcall
push
push
xor
jne
stos
xor
push
inc
jns
mull
inc
pop
das
push
cltd
test
push
dec
clc
add
adc
jle
dec
rcll
sub
inc
inc
adc
inc
ret
jmp
and
jmp
sbb
stos
arpl
cmp
movsb
mov
jne
je
pop
ljmp
cmp
push
and
or
jecxz
lea
dec
jmp
jle
push
fbstp
or
jecxz
insb
in
dec
mov
les
aas
call
add
mov
inc
pop
adc
jnp
or
add
clc
sahf
out
or
add
add
pop
add
jb
lcall
ss
addr16
jb
mov
sub
stc
mov
and
xor
das
cmp
int
in
je
clc
cwtl
aaa
dec
imul
xchg
inc
sarb
pop
aas
mov
sub
mov
cld
in
mov
adc
aas
or
or
adc
outsl
sbb
adc
cmpsl
loope
jle
cmp
subb
js
push
nop
inc
outsl
mov
sbb
pop
xchg
pop
int3
dec
insl
pop
pop
sub
out
xchg
rcrb
adc
aas
xchg
leave
int
and
xchg
sub
outsl
sti
pusha
adc
dec
movsb
ja
cld
outsl
shl
inc
cmp
mov
cmpsb
push
test
and
jo
shll
pop
xorl
sub
dec
xchg
xchg
inc
ret
pop
call
pop
mov
xor
mov
rorl
cmp
push
paddsb
inc
mov
in
sbb
xchg
add
inc
cvtpi2ps
adc
ret
xchg
inc
data16
mov
test
cltd
jmp
adc
into
fstpl
popl
scas
cld
xchg
xor
dec
xor
xchg
and
dec
cmpb
pop
dec
inc
or
sbbb
es
adc
add
mov
lock
je
fisubl
mov
sub
incb
mov
nop
cs
sbb
outsl
jo
mov
xor
mov
jl
pop
fstpl
adc
push
arpl
pushf
int
daa
jg
ja
jmp
std
push
sub
jbe
jle
push
adc
xor
xchg
adc
xor
call
pop
mov
enter
aaa
ret
sarl
pop
xchg
pop
rcll
or
inc
cmp
jo
sbb
movsl
fs
or
lods
push
popa
sbb
cli
pop
inc
out
roll
aad
mov
xlat
leave
mov
bound
lea
pop
pop
inc
and
inc
fsubrs
std
pop
ljmp
fldl
loop
lds
sub
jno
pop
jp
and
divb
nop
clc
add
inc
and
or
sarl
icebp
xchg
xchg
lock
out
pop
mov
mov
arpl
movsl
inc
cwtl
shlb
stos
clc
fnstenv
sub
jg
in
clc
je
leave
lret
popf
adcb
cmpsl
cld
fidivrs
jp
test
mov
cmp
lods
addr16
inc
push
scas
lods
inc
adc
leave
fstps
mov
out
mov
int3
movsl
inc
xchg
sti
pop
pop
ret
scas
xor
and
std
adcb
jle
mov
or
push
stos
jmp
movsb
sbb
ret
sbb
xor
out
stos
inc
sbb
incl
sti
cld
bound
push
inc
sarl
cmc
scas
push
cld
test
or
and
fstl
stos
adc
arpl
mov
dec
hlt
mov
push
cmp
and
push
push
dec
mov
pop
and
xchg
xchg
aaa
inc
or
pop
loope
repnz
sbb
cmp
out
pop
repz
and
mov
cmc
cmp
pop
add
aam
jne
xor
dec
mov
test
adc
in
pop
inc
je
and
lret
xchg
scas
fwait
adc
int
jb
jo
lds
jg
dec
push
cmp
jecxz
sub
outsl
jno
add
add
inc
push
jne
and
dec
mov
add
aad
shl
pop
xor
cmp
popl
mov
cld
orb
sub
dec
out
insl
push
out
jle
sub
cmp
scas
out
cmp
leave
les
mov
rcll
inc
stc
lcall
dec
dec
inc
enter
adc
out
xor
test
mov
pop
sbb
adc
mov
jge
sub
mov
dec
mov
es
pop
mov
ss
rol
fistpll
ss
fadds
rcrb
sbb
pusha
scas
cmc
stos
add
cmpl
ret
xlat
mov
in
add
dec
stos
mov
inc
inc
jae
mov
int3
jnp
hlt
shr
sub
dec
shlb
int3
fdivl
loope
movsl
arpl
lock
mov
test
dec
lods
jae
ret
bnd
and
inc
shr
andl
ljmp
cmp
xchg
dec
push
jmp
xchg
cmpsb
cwtl
xor
scas
sub
push
bound
pop
cltd
mov
flds
jp
loope
push
push
aam
loope
and
loopne
sahf
cmp
sbb
into
sbb
out
fs
and
lea
jb
test
xchg
dec
fwait
ja
mov
stc
push
outsb
test
inc
push
xchg
and
pushf
aam
xchg
insb
ret
gs
dec
mov
aad
mov
mov
push
push
ljmp
push
outsl
nop
out
cs
cmp
popa
adc
jbe
jae
push
cmp
and
xor
mov
mov
jo
pop
sbb
rol
jbe
popf
push
aam
mov
ficoml
enter
sub
andl
or
or
js
out
loop
and
sub
pop
cmpsb
push
mov
or
and
jp
lret
cmp
jne
addr16
push
mov
in
subb
sub
cwtl
test
out
inc
push
adc
mov
push
sub
out
xadd
stos
dec
jnp
mov
adc
mov
dec
rorl
lods
shrl
xor
push
push
stos
xchg
lret
addr16
out
jbe
lock
jno
or
jp
inc
inc
fs
cmpsb
mov
in
adc
jg
outsb
xor
dec
and
lcall
in
test
and
dec
sub
push
push
repnz
nop
push
pop
stos
insl
aam
outsl
and
call
push
cmp
mov
jno
inc
mov
popa
test
pop
mov
mov
jb
pop
lea
jbe
sar
dec
mov
mov
cwtl
adc
mov
mov
scas
lods
and
int
mov
inc
fdivl
gs
inc
inc
lret
jl
addr16
pop
lea
loopne
popa
dec
int
pop
bound
mov
sbb
xchg
xchg
or
incb
add
add
jle
ret
repz
std
jle
loope
mov
aam
xchg
push
popa
add
push
pop
add
mov
and
sub
xchg
jle
repnz
jmp
mov
jnp
jnp
push
sub
push
ret
xchg
push
sarl
movsb
cld
fistpl
orb
inc
push
das
push
xchg
sub
mov
xchg
xlat
cmpsb
inc
mov
cmpsl
fnsave
in
sbb
fcomps
pop
sbb
xchg
pusha
xor
int
mov
cmpsl
sbb
or
imul
xchg
scas
push
push
xchg
pusha
inc
clc
inc
es
bound
pop
push
in
add
bound
dec
xchg
adc
fstpt
mov
adc
xchg
jl
sbb
adc
cli
js
enter
cmp
push
pop
mov
jno
ljmp
loop
dec
xor
in
hlt
push
mov
mov
push
xchg
popa
test
fcomps
add
lock
pop
and
movsl
arpl
faddl
roll
lret
aas
arpl
ljmp
sub
dec
sub
lods
ss
testl
std
ljmp
sbbl
cld
mov
mov
ret
leave
cld
xchg
mov
sti
xchg
adc
cmp
add
adc
test
cltd
inc
testb
insb
fidivs
cmpsl
xor
fadds
hlt
clc
mov
push
xlat
sub
cmp
ret
repz
adc
bound
repnz
sub
pop
cwtl
jo
es
repz
orl
imul
ret
and
aam
loope
in
sarb
lahf
adc
xor
push
push
lods
in
shrl
ss
sub
jo
mov
adc
inc
das
add
dec
nop
call
xor
adc
in
mov
push
xchg
testb
inc
icebp
in
lret
clc
cmp
adc
pop
mov
lea
cmp
and
cmpsl
jns
pop
jle
addr16
push
push
in
movsb
andb
arpl
sbb
rolb
mov
mov
and
or
imul
and
sub
test
divl
cmpsl
gs
inc
aad
jns
mov
das
data16
scas
jo
xor
ds
sarl
sub
add
in
fiadds
add
arpl
les
das
jl
das
loope,pt
out
outsl
orb
cmc
imul
aaa
popf
adc
pop
shll
mov
mov
fcmove
inc
and
mov
lea
add
inc
daa
sahf
aas
cld
fiaddl
adc
sub
lcall
sub
sahf
sbb
inc
rclb
in
jg
mov
insl
lods
ss
adc
int3
adc
xchg
inc
inc
mov
push
les
ficoms
int3
and
and
adcl
adc
inc
lcall
movsl
loopne
stos
ja
bound
jg
inc
mov
mov
sbb
pusha
xchg
in
stos
std
std
lret
cli
cmpsb
xchg
or
mov
imul
adc
cmc
inc
sbb
jp
ljmp
mov
fidivs
repnz
cmpsb
jp
std
or
das
loopne
stos
in
xor
cs
push
sbb
cmp
adc
pop
lods
push
inc
mov
jge
jae
jb
test
rcll
popf
jg
jno
out
lds
nop
mov
xchg
add
pop
jle
loope
dec
lret
outsb
inc
xchg
jge
cmp
in
xor
mov
enter
add
adc
outsb
dec
inc
daa
fsubs
addr16
jno
cltd
arpl
xchg
lcall
and
or
mov
push
add
rcrl
mov
fsubrl
movsb
sub
jne
mov
imul
inc
push
mov
nop
dec
cld
push
dec
sub
aad
std
adc
mov
pushl
jle
push
or
xchg
cwtl
add
push
mov
call
out
hlt
xor
call
ret
in
js
sti
mov
jns
repnz
mov
mov
stc
sbb
adc
jecxz
add
cmpb
jno
sub
sbb
mov
sub
sbb
fsubs
cmpsb
mov
sbb
out
mov
out
push
pop
adcl
mov
clc
mov
push
xor
push
xchg
mov
loopne
test
cwtl
push
mov
mov
xchg
push
mov
inc
int
xor
push
dec
mov
mov
dec
jg
dec
push
mov
cmpl
flds
imulb
sbb
je
mov
push
cmp
and
lods
cmp
sbb
mov
push
clc
aam
nop
fisubrl
clc
jmp
jl
dec
mov
shll
adc
pushf
push
sub
movsl
xchg
gs
xchg
and
mov
pop
fs
fcoml
mov
sub
xchg
shll
stos
into
out
add
sbb
aad
adc
adc
lods
mov
mov
scas
dec
loope
gs
mov
pop
inc
cmpb
sbb
nop
ljmp
pop
loope
and
outsb
fnstenv
lahf
xchg
ljmpw
sbb
and
add
loopne
xchg
sahf
sbb
or
adc
repnz
xchg
test
movsl
sub
cmpsb
mov
cwtl
mov
lret
cli
aad
inc
sbb
cmp
icebp
add
pop
jmp
fldt
adc
add
jb
mov
int3
push
sbb
or
fisttpll
mov
push
mov
pop
inc
add
xchg
mov
orb
mulb
pushf
pusha
pop
cmp
mov
cmp
push
leave
sti
lock
pop
mov
jle
and
cmp
movsb
push
adc
in
les
xor
and
in
outsl
cwtl
sbb
xor
adc
pop
popa
ds
cmpb
cmpb
mov
jp
mov
in
sbb
add
out
lds
into
je
dec
mov
sahf
mov
andps
test
aas
subb
dec
aam
mov
in
add
xchg
jnp
mov
lahf
pop
jnp
cmp
mov
inc
scas
sub
xchg
mov
int3
mov
cmp
test
cmp
lock
pop
xor
cmp
leave
mov
add
shlb
jg
stc
ficoms
inc
and
add
rorb
pop
add
xacquire
sti
rcrl
movsb
bound
call
cmp
dec
jbe
mov
xchg
movsb
hlt
fwait
mov
add
inc
insl
xchg
add
movsl
or
test
js
xor
add
xchg
inc
scas
mov
movsl
mov
and
mov
xchg
jne
movsb
test
cmp
popf
aaa
adc
shlb
in
lahf
ja
andl
int
je
enter
fwait
cld
dec
xor
into
sub
add
mov
add
test
xorl
pop
ret
inc
into
arpl
xor
sub
aaa
pop
bound
call
and
adc
mov
sub
or
enter
mov
mov
push
mov
daa
sub
or
mov
sahf
add
or
cmpsb
pop
inc
xor
or
mov
sub
ss
push
cmp
sub
rcll
scas
lock
cltd
out
adcl
jae
xor
fcmovu
xchg
lcall
pop
sbb
stos
in
sub
dec
loope
sahf
outsb
in
sarb
iret
or
jmp
pop
xor
xchg
fcoml
gs
lock
add
pop
rol
mov
nop
out
dec
test
out
jno
nop
push
int3
sub
cld
mov
mov
lea
pop
sub
xchg
sbb
loop
mov
jge
loop
ret
inc
xor
push
insb
push
mov
cmp
div
or
xlat
inc
sbb
push
popf
js
or
lret
or
ja
out
fs
fcomi
xorb
push
lahf
inc
sarl
sub
mov
lret
pop
imul
cmp
inc
sbb
stos
dec
cli
iret
jmp
sbb
cmp
loopne
jo
je
imul
movsl
imul
cld
int3
sysret
test
adc
push
out
pusha
fdivrp
mov
adc
mov
jno
lods
lock
pop
dec
loop
jge
mov
mov
pop
push
test
dec
jmp
decb
repz
es
cmp
mov
sbb
mov
mov
out
fcmovu
add
xchg
int
addr16
aaa
add
dec
es
add
scas
jecxz
xchg
pop
xchg
sbbl
jb
pop
xor
aad
aad
mov
inc
jle
and
int3
mov
or
pop
mov
mov
imul
leave
jmp
jns
sahf
imul
mov
mov
mov
dec
jmp
lahf
inc
add
inc
aas
cmc
cs
mov
leave
lret
push
aam
push
into
insb
aam
arpl
lret
cmp
clc
inc
daa
icebp
fldcw
ds
push
push
data16
inc
mov
js
idivl
jae
dec
or
dec
fildll
push
sub
pop
call
cld
xchg
sbb
inc
jnp
xchg
scas
ffree
xchg
mov
inc
popf
mov
xchg
mov
pop
xchg
ret
mov
out
fnstsw
hlt
mov
sbb
mov
lock
fs
jno
mov
sbbl
cmp
ljmp
and
daa
js
imul
and
dec
std
in
fsts
or
sbb
into
inc
push
mov
and
sbb
push
jle
push
nop
and
mov
fdivrp
or
sbb
cmp
jb
push
mov
pop
pop
mov
inc
out
mov
sbb
push
out
aad
cmc
stos
xchg
mov
mov
cs
ss
pop
push
addb
mov
push
stos
lcall
fcompl
loop
pop
sahf
mov
jno
in
testb
dec
dec
jg
xchg
adc
cmp
fildl
mov
mov
ficomps
insb
or
fistpl
pusha
movsl
iret
jno
push
inc
cli
test
fdivrl
jbe
mov
sahf
cmc
cs
push
mov
jae
out
jo
dec
xchg
pop
inc
cmp
leave
jle
jae
outsl
pop
cmpsl
sarl
in
ljmp
inc
fsubrp
dec
stos
dec
sub
or
das
sbb
fcmovb
pop
stos
out
insl
pop
dec
jp
stos
incl
cltd
punpckhwd
mov
sub
mov
pop
out
rorb
mov
lcall
or
inc
dec
std
fisubs
or
imul
and
mov
dec
test
push
mov
and
outsb
cmp
rorl
nop
mov
push
adc
rorb
addb
xchg
fadds
mov
rcrl
stc
inc
push
daa
lock
movsl
jg
call
and
dec
adc
jge
or
mov
cli
mov
stos
xor
push
jae
test
stc
adc
lods
sbb
hlt
xchg
repz
cs
jge
fcoml
adc
in
ljmp
sub
testl
mov
push
imull
cs
mov
test
std
rcrb
in
stos
stc
push
inc
jae
sbb
in
fsubrp
mov
jecxz
movsb
fiadds
ret
add
test
or
and
rclb
repz
jb
cmp
inc
mov
aad
mov
jns
jecxz
std
in
addr16
stos
adc
fstps
in
xchg
mov
jae
leave
xchg
in
sbb
jg
push
repz
mov
cltd
or
enter
mov
pop
xchg
jl
mov
xchg
outsl
xchg
dec
mov
adc
imul
or
lds
ljmp
sub
arpl
dec
add
pop
xor
xchg
dec
push
lret
cmpl
rorl
push
repz
scas
pop
jo
push
popf
data16
or
and
out
add
lods
pop
cmp
fcoml
insl
cmp
sub
push
test
dec
arpl
pop
pop
daa
fstl
lret
cwtl
clc
pop
jecxz
neg
test
es
mov
inc
lods
int3
ss
mov
rolb
pop
cmp
dec
repz
int3
leave
bound
outsl
xchg
xlat
mov
bound
cli
push
and
js
mov
sub
ret
and
dec
jbe
test
jns
hlt
pop
mov
mov
out
xchg
sbb
lods
lea
mov
push
sahf
outsb
ljmp
add
add
cld
jg
and
inc
push
push
pop
add
arpl
xor
and
sti
sbb
loope
push
jne
dec
lahf
mov
pusha
sbb
pusha
sbb
or
nop
jns
sti
sti
add
movsl
inc
xchg
daa
push
sahf
icebp
xchg
movsl
cmp
mov
int
daa
cmpsb
in
test
sahf
inc
dec
jbe
jno
addl
mov
aam
or
cltd
dec
scas
dec
stc
sbb
dec
push
aaa
add
push
fists
aad
cmc
mov
rorb
push
sahf
add
mov
inc
sbb
js
lea
dec
mov
push
sub
lods
rcr
jns
pop
push
xor
in
loope
cmova
cmp
dec
movl
mov
or
shl
out
ljmp
into
dec
xor
adc
pop
inc
add
jno
or
in
cltd
rcr
std
addr16
mov
cltd
dec
ss
sbb
xor
lcall
push
loop
mov
or
jge
mov
mov
or
lret
out
out
loop
aas
mov
iret
mov
mov
jge
lds
lret
fdivrs
into
sbb
popf
movsb
lock
mov
mov
and
scas
je
int
mov
fs
je
sbb
popa
leave
mov
lahf
lahf
pop
arpl
decl
pop
add
jmp
gs
push
or
xor
lods
jge
imul
jne
fstpl
pusha
stc
pop
int3
ds
and
stos
pusha
add
mov
jmp
movsb
jnp
in
mov
push
arpl
jbe
sbb
movsl
repnz
sti
fisubrl
xor
cs
addl
aaa
fsub
loopne
mov
mov
lahf
dec
add
fst
or
adc
iret
jp
xor
movsb
fcompl
frstor
insl
mov
jne
inc
xchg
mov
lcall
addb
inc
jg
adc
mov
iret
sub
jae
sahf
shl
or
imul
mov
into
das
xchg
jmp
and
aam
mov
shlb
int
lahf
adc
mov
clc
cmp
cmp
inc
fidivrl
dec
ljmp
pop
daa
aaa
bound
lcall
in
mov
imul
daa
jbe
in
data16
cmpb
lret
jns
repz
jmp
cmp
push
mov
es
test
lcall
mov
sbb
out
add
aas
sub
in
inc
dec
out
xor
in
pop
inc
dec
scas
or
notl
jnp
std
int
mov
push
popa
stc
inc
fisttps
cmp
stos
or
pop
push
sub
lcall
mov
xlat
mov
mov
fistl
mov
lret
mov
cld
js
das
push
mov
dec
mov
pop
pop
pop
and
mov
xchg
mov
int3
int
pushf
mov
mov
aad
lcall
clc
insl
ljmp
xchg
addr16
inc
xchg
push
mov
dec
jmp
mov
icebp
fstpl
inc
stos
xchg
test
pop
jns
outsl
fsubrs
pop
dec
dec
xchg
push
in
or
aaa
fidivs
rcll
lret
aaa
mov
mov
pop
les
int3
movsb
dec
orl
test
imul
js
pushf
stc
inc
sbb
je
popa
std
push
and
xchg
lret
xor
sahf
or
inc
loop
lret
in
pop
xor
sbb
outsb
lock
stos
gs
and
js
mov
adc
aam
mov
ss
add
loop
mov
sbb
adc
rol
outsl
subb
sarl
loop
decb
jb
jns
rolb
sub
les
cmp
jge
ja
push
out
mov
push
xor
cmp
adc
mov
mov
jge
inc
adc
scas
adc
repnz
stc
fnstsw
fildl
mov
mov
dec
sub
call
ret
xchg
push
cwtl
jg
jnp
inc
or
aad
addr16
lock
adcl
push
inc
cmp
test
cmp
or
hlt
sti
cwtl
mov
push
aaa
pop
and
mov
adc
ret
int
inc
cs
out
jle
fidivl
sbb
jg
popf
pop
test
push
push
sbb
xor
xchg
lahf
push
jae
add
gs
fsubl
sbb
arpl
adcl
pop
fldl
xchg
cltd
or
in
mov
ret
mov
int
addl
inc
push
pop
es
out
inc
push
fwait
enter
or
in
mov
jg
lret
inc
inc
cmp
sub
or
lret
idivb
cli
push
movsb
adc
test
sbb
or
xor
sub
call
pop
add
mov
sbb
nop
dec
mov
mov
aam
test
adc
out
and
xchg
pop
cmpsb
push
xchg
pop
int3
scas
pop
xor
out
cmpl
scas
mov
rcl
push
repz
insb
and
jno
into
sbb
dec
call
inc
aaa
inc
repnz
arpl
je
jecxz
jbe
mov
dec
jne
sbb
pop
inc
dec
or
js
leave
in
xchg
movb
inc
addr16
pop
mov
div
jae
push
mov
and
lods
dec
stc
jb
add
dec
iret
mov
lods
pusha
mov
add
xor
js
bound
iret
jb
xor
or
or
xchg
loope
test
fst
rcll
mov
dec
clc
or
sti
sbb
aam
or
xor
or
scas
outsb
mov
fwait
pop
pop
lahf
push
lahf
mov
test
gs
push
xor
push
fbld
lret
in
in
js
lahf
pop
add
rorl
enter
xor
clc
js
dec
xor
jp
int
stos
out
xchg
fwait
mov
clc
push
in
xchg
xor
lcall
adc
dec
sahf
aaa
fwait
pop
push
addr16
push
and
adc
add
adc
inc
imul
mov
arpl
xorl
jl
cmp
mov
ret
adc
sbb
daa
sbb
mov
inc
lret
js
movsb
push
jo
push
add
add
dec
xchg
cmp
arpl
lcall
stc
sub
add
pop
add
jb
pusha
dec
jg
or
stos
cmpsl
cmp
insb
push
cltd
dec
mov
lcall
mov
mov
bound
shll
addl
in
push
in
outsl
or
outsl
xchg
and
daa
hlt
ret
cmp
jnp
xor
jg
inc
sbb
mov
inc
in
and
pop
repz
negl
int
loopne
mov
xchg
imul
mov
fwait
aam
rclb
xor
cmp
stos
sbb
xchg
loopne
jge
insb
stos
shlb
imul
ret
cltd
jp
pop
mov
mov
push
jl
es
pushl
pop
dec
aad
iret
and
xor
dec
pop
ja
mov
fnstenv
decl
xchg
sbb
gs
jne
mov
mov
xchg
cmpsb
or
xchg
mov
cmc
xlat
pop
int
mov
push
aad
add
xor
mov
addl
mov
pop
mov
movsb
int
mov
pop
aad
and
subb
adc
data16
loopne
or
pop
xor
adc
mov
add
cwtl
stos
push
leave
in
adc
mov
xchg
insb
cmpsl
sub
mov
pop
xor
mov
push
dec
test
loopne
test
popa
shll
jno
mov
xchg
sarl
xchg
sbb
lret
es
enter
push
cmc
movsb
sti
shll
scas
fwait
rorb
sub
sub
sbb
stos
loope
nop
push
jnp
cwtl
add
fwait
cmp
push
cmpsb
push
jmp
xchg
or
push
addr16
sti
add
or
stc
rorb
push
xor
pop
sub
xor
mov
out
sti
jmp
lds
add
mov
add
sbb
ror
push
ret
fwait
pop
sbb
scas
adc
xlat
pop
popf
cmpl
sbb
pop
and
in
movsb
ljmp
inc
dec
nop
ja
adc
cmp
int
cmp
mov
jecxz
xchg
xchg
sub
pushf
ret
ret
mov
repz
movsb
test
gs
jl
mov
xor
sub
jecxz
je
sbb
outsl
decb
dec
out
mov
mov
xor
lods
or
pop
lock
pop
sbb
stos
pop
int3
pause
mov
fcoms
jp
inc
aas
xor
cld
cld
fcmovbe
hlt
testl
pop
rolb
jl
push
popa
mov
pop
and
les
mov
pushf
insl
outsb
fwait
addl
or
cmp
shl
addr16
sub
std
mov
ret
mov
je
into
stc
push
outsb
test
add
sbb
mov
pop
call
jbe
popf
mov
mov
ds
jecxz
outsl
shlb
sub
cs
aam
add
lret
das
jge
daa
lods
out
fwait
inc
stos
push
fsubl
cmp
aaa
test
ss
add
push
jecxz
loopne
lret
int3
pop
xchg
lods
orb
data16
nop
mov
fcmovbe
fidivrl
sbb
add
mov
scas
xchg
add
into
gs
jp
aad
cmp
sbb
mov
mov
outsl
lret
aad
pop
sti
daa
or
pushf
sub
mov
sub
xchg
and
and
lcall
jb
subps
push
je
jle
adc
xlat
je
imul
adc
mov
daa
sbb
nop
loop
sbb
popa
jmp
push
out
cltd
nop
bound
cmp
sbb
test
in
test
cmc
pop
out
inc
aaa
cmp
mov
dec
loopne
incl
push
lea
pop
push
push
jns
inc
xor
outsl
out
fwait
lods
dec
incb
addr16
pop
out
jbe
int
inc
jnp
ret
sbb
int3
sub
frstor
jecxz
add
testb
adc
cmpsb
repnz
and
pop
fcompl
xchg
nop
dec
popf
pop
mov
xlat
fdivl
add
push
dec
mov
mov
aad
pop
sub
outsb
mov
call
push
lcall
dec
sbb
daa
mov
stos
jge
stos
aaa
add
xor
cli
scas
push
sti
push
sarl
loope
popa
cmp
aas
fucomp
icebp
ret
mov
inc
stos
pop
int
testl
pop
aam
add
roll
subl
push
and
fistpl
test
repz
sbb
mov
xchg
insl
inc
jne
jnp
add
out
cwtl
lret
fidivrs
add
cmpb
mov
nop
sbb
jne
popf
dec
int
test
push
push
int3
fwait
mov
hlt
rcrb
mov
sbb
sbb
ret
add
dec
loopne
out
rolb
push
data16
loopne
xor
ja
inc
sub
hlt
filds
xor
out
cmp
xor
leave
sbb
mov
mov
push
dec
jp
stc
dec
fisubs
inc
rolb
mov
mov
std
jnp
jecxz
sahf
or
and
aas
insb
repnz
push
and
lods
clc
fistps
push
repz
pop
out
jnp
sbb
mov
jnp
aaa
xchg
pushf
lea
xchg
jle
mov
scas
test
rorb
add
cld
icebp
xor
or
or
cmp
incb
sbb
sub
loope
bound
cs
xchg
shlb
ret
mov
mov
cmp
sbb
popf
sbb
std
xor
int3
mov
mov
inc
mov
scas
xor
cmpb
dec
pop
sub
nop
mov
rorb
dec
aas
cmp
or
and
and
sbb
outsl
out
jmp
mov
out
pusha
adc
iret
jle
setns
fmulp
xlat
cmp
push
lret
lods
xchg
sbb
mov
ss
cmpsl
jb
sahf
jno
mov
xor
adc
dec
sub
cli
mov
adc
popa
out
xchg
or
filds
or
or
aaa
xchg
sub
mov
cmp
inc
icebp
sbb
cmpsb
inc
fsts
mov
mov
mov
mov
cli
mov
push
aaa
push
mov
loopne
add
test
jmp
xchg
mov
pushf
sbb
push
sahf
fidivrl
add
sti
ds
ds
scas
add
push
pop
add
ds
add
or
sub
jg
shrl
mov
out
cwtl
mov
iret
lds
leave
dec
imul
out
dec
inc
fdivl
pop
sbb
adcb
push
in
sti
or
push
iret
in
xchg
mov
lahf
aam
rcr
icebp
push
jge
jmp
pop
inc
out
fwait
lock
ret
mov
es
loope
popa
sub
shrl
mov
fsubrs
cmp
mov
pushl
inc
daa
test
mov
fsubrl
loop
iretw
fisubrs
test
lahf
cmp
xchg
lods
enter
outsb
pextrw
sub
gs
fstpl
repnz
dec
xor
out
xor
mov
add
sub
arpl
popf
bsf
xchg
cmc
sub
jecxz
pop
cmp
adcb
outsl
fwait
jge
lret
pop
out
mov
mov
pop
jnp
icebp
adc
jp
test
push
mov
push
mov
loope
aam
loop
out
scas
dec
push
or
bound
cmp
push
mov
loop
mov
call
sbb
scas
jae
or
call
das
leave
inc
popf
aas
jmp
mov
add
adcl
jg
adc
xor
loope
mov
mov
ljmp
aaa
stc
mov
ret
mov
call
push
adc
dec
pop
and
push
test
into
inc
cmp
push
ret
shrb
das
xchg
adc
call
ja
xchg
and
xorl
ret
test
iret
add
inc
nop
jbe
xorl
test
cmp
and
test
insl
imul
stos
mov
ret
rcl
cmp
mov
rol
pop
out
stc
shl
ja
inc
or
fstps
xchg
mov
cmc
or
cmp
das
and
test
data16
subb
inc
call
scas
popf
pop
notl
adc
cld
out
lahf
nop
inc
test
mov
push
xchg
lahf
pop
iret
fwait
orb
dec
fstpl
or
mov
lahf
mov
outsl
cmp
ljmp
mov
outsb
mov
add
fld1
out
sbb
mov
dec
subb
pop
int
pop
sub
lods
adc
ds
jns
add
adc
mov
mov
into
test
clc
popf
jle
int3
ss
int3
cmp
aaa
xchg
adc
jb
cmp
sbb
sub
lea
mov
xlat
movsb
inc
jnp
cld
pop
mov
in
mov
loopne
push
iret
sbb
cli
mov
icebp
cmc
hlt
mov
mov
int
add
inc
pop
out
pop
sub
mov
imul
mov
lock
leave
inc
sbb
and
xchg
jnp
dec
mov
push
or
popl
push
dec
sbb
xchg
add
into
test
add
hlt
rcrb
into
dec
repz
jbe
xchg
inc
mov
pop
mov
test
test
push
jecxz
or
jnp
pop
jge
fyl2xp1
mov
dec
outsl
xchg
leave
cwtl
mov
cmpsb
movhps
xor
pop
out
scas
xor
add
arpl
fwait
sub
sahf
xchg
imul
into
test
pop
stos
mov
dec
fs
sbb
aam
pop
int
mov
mov
xor
outsl
aas
push
pop
mov
enter
popf
lret
inc
mov
stos
mov
jg
stos
outsb
push
push
cmp
loopne
add
jns
test
inc
mov
mov
lcall
push
mov
loopne
repnz
fistpl
xlat
dec
pop
lcall
in
pushf
rcr
jmp
mov
stos
cli
and
adc
adc
popa
jno
add
rcr
enter
mov
inc
xchg
or
pop
movsl
dec
les
sub
out
jno
inc
adcl
popf
in
adc
and
subb
in
movsb
add
jmp
sar
mov
dec
mov
cs
fimull
sub
icebp
arpl
sbb
data16
or
sbb
pop
xor
add
mov
cmp
xor
add
adc
xchg
jp
cmp
or
cmp
cmovl
in
je
or
in
out
dec
cli
sub
fisubrl
inc
jge
in
stc
hlt
int
sub
and
fists
les
push
jmp
das
jb
adc
mov
ror
das
testl
mov
jae
inc
xchg
fisttpll
mov
inc
xor
cli
xchg
add
rcrb
jns
mov
ret
add
or
lods
pop
adc
dec
loope
fs
lahf
out
sbb
clc
dec
add
and
repz
movsb
sti
lock
inc
or
xchg
ds
in
inc
pop
dec
jl
sub
push
pop
mov
inc
xor
xchg
and
push
fnstcw
outsb
in
leavew
xor
ljmp
je
notl
adc
mov
frstor
pop
daa
cmc
out
fildll
insl
in
std
lcall
cs
jg
test
sub
lret
out
pushf
dec
jno
nop
inc
cmovne
xchg
jo
mov
pop
xor
sbb
test
pop
mov
dec
insb
add
leave
lret
int
inc
rcll
rol
cmp
std
mov
push
in
cmc
mov
jl
inc
push
jo
xor
mov
in
repnz
loop
hlt
inc
xchg
hlt
loop
jmp
or
das
xchg
lods
nop
fldenv
and
sbb
dec
aaa
adc
sub
push
dec
push
imul
jg
or
mov
jnp
sahf
push
push
pop
xchg
fldcw
push
xchg
stos
fbld
push
loop
mov
into
stos
or
pop
iret
clc
popl
xor
aad
inc
enter
mov
cmpsb
shr
out
aas
dec
test
iret
inc
add
fcomip
das
pop
push
sub
push
mov
or
xor
push
cmovl
xchg
jp
inc
ja
xchg
mov
fdivs
pop
int
scas
test
aam
sub
dec
inc
idivl
cltd
pop
aam
into
push
shr
inc
push
lods
jae
add
add
add
stc
out
inc
std
fidivrs
movsb
dec
xchg
inc
sbb
push
pop
add
out
adc
mov
inc
imul
adc
inc
or
adc
test
or
in
test
scas
movsb
mov
xor
and
xchg
mov
outsb
mov
push
mov
push
mov
mov
into
jne
and
cmp
xor
xchg
cld
pusha
or
sbb
sbbl
cmp
push
les
mov
xor
prefetchwt1
jl
stos
in
fs
test
push
loopne
adc
sbb
xchg
inc
push
rcrb
mov
or
sub
mov
frstor
pop
fwait
sub
idivb
lds
enter
adc
sub
inc
and
dec
dec
nop
jg
and
push
dec
dec
cli
pop
push
js
shrb
mov
xor
hlt
adc
mov
cmc
mov
subb
lock
jbe
xchg
lock
cwtl
sbb
les
cwtl
push
pop
call
inc
dec
fwait
cmp
inc
adc
adc
mov
sub
test
rol
xchg
test
nop
mov
pushf
outsb
cmc
out
ret
shll
pop
clc
mov
and
push
add
lock
popa
test
sarb
pushf
clc
sbb
or
imull
pop
pop
xchg
fildl
pop
push
popa
jge
int
arpl
ljmp
xor
xor
or
fwait
mov
shll
xchg
mov
stc
mov
fbstp
mov
ds
sbb
or
xchg
imul
xor
push
es
mov
rcl
clc
and
sub
idivb
dec
das
mov
cmpsl
mov
adc
push
mov
aaa
in
jmp
xor
sub
ret
std
jbe
icebp
sbb
outsb
mov
outsb
cltd
adc
fcoms
jb
pop
add
fists
movsb
jecxz
rorb
lds
inc
neg
mov
xchg
jbe
xchg
ffreep
and
icebp
nop
out
sbb
iret
inc
pop
int
mov
inc
mov
pop
shll
lods
inc
mov
fmuls
clc
call
jo
jb
push
and
lret
and
push
cmp
adc
std
test
adc
sbb
push
pop
lods
in
sub
cmpb
jp
iret
movsl
cmp
dec
mov
add
adc
pop
in
mov
lods
cmp
jmp
mov
test
mov
pop
aas
pop
mov
pushf
cmp
das
adc
clc
orl
ljmp
pop
loope
pop
dec
pop
inc
clc
xor
ja
mov
jle
add
mov
push
dec
pop
in
xor
enter
popf
xchg
xor
mov
neg
jge
negl
inc
int3
dec
pop
js
movsb
dec
dec
jle
lods
shr
les
ljmp
add
ja
out
push
mov
and
popa
sbb
lea
in
pop
ror
imul
cmp
mov
pop
stos
cmp
cmp
aam
add
cltd
mov
jno
mov
and
pop
ds
jns
pop
pop
cmpsb
ds
fs
bound
ret
dec
aas
push
in
addr16
adc
lock
popf
dec
xor
push
fdivs
inc
outsb
jae
fdivr
sahf
mov
sub
jb
add
jne
sub
fxtract
sub
orl
mov
and
mov
sbbl
adc
jns
dec
fisttpl
out
xchg
enter
data16
in
pop
leave
sub
cli
gs
xchg
popa
mov
mov
cmpsb
fsubs
mov
out
addb
xchg
sti
iret
mov
das
into
or
push
test
mov
iret
rorb
es
xchg
and
aad
fwait
pop
sub
stc
fnstcw
leave
in
sub
popf
pop
inc
out
lods
call
xor
xchg
or
repnz
lret
mov
jecxz
xchg
sub
mov
cmc
push
in
outsb
inc
mov
jno
sub
push
pop
push
jbe
dec
xor
xchg
test
aam
adc
iret
out
shlb
data16
jnp
lods
cwtl
mov
or
sbb
and
jbe
sbb
lods
cltd
jl
and
xor
pusha
es
xchg
cmp
cmp
adc
cmp
insb
dec
jmp
insl
cmp
mov
push
arpl
in
int3
jmp
movsb
adc
stos
hlt
rorb
push
jae
mov
roll
dec
mov
int
loope
add
pop
jb
xchg
inc
mov
inc
push
push
dec
xor
xor
in
mov
jecxz
jae
fstpl
mov
out
insb
mov
mov
in
js
dec
fs
dec
jnp
pushf
popa
lods
insl
cmpsl
sbb
mov
aam
in
fdivs
add
stc
xchg
test
dec
push
popa
fadds
mov
pop
jno
aad
sub
or
sbb
jmp
movsl
adc
in
sbb
mov
dec
inc
icebp
rcll
jb
push
add
add
pop
popf
jl
mov
mov
pop
cmc
jns
xor
pushf
add
pop
call
int
cmp
mov
mov
inc
fists
fcoms
and
xchg
add
xlat
mov
bound
or
ja
ja
repz
sbb
push
or
les
mov
cmpsb
in
pushf
xchg
pop
xor
lods
add
mov
enter
dec
xchg
jle
mov
call
fdivrl
jg
aam
in
jmp
testb
insl
test
insl
xchg
mov
mov
out
sbb
fistps
imul
inc
fcoml
add
out
push
xor
push
cltd
cld
es
lea
xchg
fucomi
rcll
jl
pop
ja
addl
adcl
push
dec
jge
addb
xchg
dec
sarl
or
xchg
mov
scas
fimuls
inc
dec
ja
inc
mov
and
push
add
insl
es
shl
int3
lods
mov
jne
inc
add
xchg
mov
cli
in
leave
pop
out
and
cltd
gs
js
xchg
sbb
push
push
mov
aad
sbb
outsb
es
rclb
fs
dec
adc
rol
mov
sbb
je
xor
fidivs
pusha
fwait
cmp
sub
data16
hlt
cmp
jle
add
add
in
and
aas
fcomip
out
or
popa
cmp
int3
add
push
pop
add
sbb
mov
push
sbb
jecxz
jmp
mov
cmp
mov
mov
popf
inc
or
jle
xor
addr16
mov
xlat
popa
ljmp
je
push
outsb
pop
popa
icebp
lds
xchg
jno
xchg
xchg
xlat
cmpl
or
gs
aaa
xchg
in
repz
int
insb
out
xor
mov
out
test
jnp
mov
xor
fs
jbe
cwtl
jo
cmp
sub
push
mov
sub
lods
pop
xchg
sbb
jle
push
loope
lcall
pushf
lret
aas
shr
shrl
add
lret
push
mov
sbb
pop
sub
xchg
inc
sub
fnstenv
iret
dec
jecxz
shr
inc
and
add
add
sbb
in
sub
push
int3
push
lds
lret
ret
rcl
pop
aam
sahf
lock
loop
jae
mov
int
mov
jbe
adc
or
xchg
repz
pop
sbb
rorl
xlat
and
add
push
mov
adc
push
out
sub
and
repnz
adc
mov
xchg
pushf
sti
out
out
cmp
jg
cmp
fldt
sub
adc
cmp
pop
ss
push
pop
push
jecxz
jbe
lods
or
ja
fisubl
xchg
jno
pop
cmpsb
gs
ja,pn
mov
fistps
inc
push
jge
loope
jecxz
jb
xor
movsl
pop
popf
mov
adc
cmp
mov
rorb
jmp
mov
dec
jns
cmpb
push
jecxz
insl
push
cmp
rolb
lcall
jge
ss
cmp
sub
add
gs
dec
cs
rolb
inc
xchg
ljmp
sbb
mov
xor
jne
push
dec
push
mov
mov
daa
pop
sub
test
or
inc
cwtl
push
adc
jbe
addb
mov
jle
in
mov
mov
inc
data16
mov
sub
mov
icebp
pop
sub
or
decb
stos
in
jle
popf
xor
push
mov
sub
xor
pop
fsubr
sub
hlt
aad
les
adc
jno
nop
jne
sbb
inc
enter
fldl
imul
jle
shl
mov
or
sub
jb
aam
cmp
xchg
pop
sbb
mov
fildl
and
mov
and
pop
and
iret
dec
push
lods
cmp
xor
sub
sahf
mov
shlb
in
jp
push
dec
addl
sub
in
jg
or
push
cmpb
jl
dec
xchg
fs
mov
sbb
sar
roll
test
mov
sub
fidivl
adc
adc
cmpsl
icebp
mov
push
jbe
inc
or
xor
cmpl
mov
nop
jp
int
xchg
test
cltd
dec
mov
inc
mov
dec
cmp
push
lea
iret
hlt
sahf
fbstp
fs
ret
jge
dec
add
mov
scas
mov
add
mov
or
cmp
repz
dec
mov
cs
adc
lret
inc
mov
cmp
adc
dec
ret
stc
movsl
or
fisubl
out
movsl
push
xchg
scas
repnz
popf
add
pop
sub
xor
das
leave
or
gs
pop
arpl
inc
jb
arpl
pop
dec
test
imul
jbe
arpl
out
push
jnp
push
aam
jo
test
sbb
mov
pop
cltd
add
push
cmpsb
popf
int3
data16
sahf
lret
test
mov
mov
mov
inc
mov
leave
inc
and
fistps
es
andl
jmp
or
cwtl
xchg
add
daa
icebp
clc
ffree
movsl
mov
lock
lds
lock
in
jnp
not
inc
mov
cmpsl
dec
notb
dec
xor
movsb
je
or
test
push
ljmp
pop
mov
xchg
cmc
int
ret
test
cmp
call
icebp
fildl
fwait
dec
ret
cmp
testl
popf
add
or
adc
mov
jns
xorl
aas
sub
stos
push
jecxz
enter
xor
hlt
sbb
aaa
inc
push
xchg
lock
xor
push
rcr
xchg
into
icebp
lods
pop
dec
push
filds
ret
out
out
ss
imul
push
adc
sbb
ret
lcall
test
insl
xor
sbb
dec
out
loope
jg
cwtl
addl
sbb
insl
lea
adc
imul
jbe
xchg
imul
movsb
outsl
movsb
pop
add
mov
notb
rorb
sbb
stos
sub
inc
movsb
into
ljmp
xlat
fucomp
orl
pop
repnz
ret
cmp
dec
lds
and
imul
inc
dec
fs
push
cltd
gs
rcrb
jecxz
js
xlat
mov
push
xor
jg
sbb
push
sbb
sub
mov
xchg
lahf
sti
jbe
and
nop
nop
and
leave
pop
ret
je
pushf
movsb
xor
xor
scas
add
push
jb
add
jecxz
pop
jno
rcll
dec
pop
sub
pushf
mov
or
sbb
inc
imulb
jne
push
jmp
loopne
arpl
je
ljmp
fldt
sub
and
jl
sbb
lods
push
lret
stc
imul
adc
or
cmp
mov
sub
push
out
push
sbb
cli
cmp
out
and
je
cmp
cmp
adc
mov
or
inc
mov
call
pop
arpl
xor
nop
call
andb
or
outsb
lret
sbb
idivb
sub
call
or
inc
and
and
loope
pusha
or
lret
inc
or
mov
xor
adc
inc
lret
mov
xor
adc
push
pushf
jp
sbbl
mov
mov
mov
imul
lock
loope
movsb
mov
popa
in
adc
stc
or
push
fsubr
sbb
mov
add
out
xchg
icebp
mov
out
aad
adc
mov
add
pop
add
sbb
pusha
xorl
imul
sti
scas
xor
pop
push
lahf
idiv
push
mov
mov
cld
cmp
pop
dec
bound
xchg
jns
es
and
lods
xor
arpl
mov
call
sub
imul
xchg
push
addr16
scas
out
int
fdiv
fsub
or
imul
cmp
mov
xchg
xor
and
fcomps
xor
sbb
push
jbe
pop
push
xchg
dec
insl
push
push
das
movsb
out
insb
push
cmc
sub
push
mov
dec
fisubl
pushf
loope
jae
dec
mov
clc
and
movsb
push
jg
jae
sbb
xchg
or
xor
lret
jge
aad
pushf
push
aas
cmp
repnz
dec
jns
cli
dec
cmpsb
push
lahf
push
les
test
xchg
or
inc
mov
cmc
fwait
push
insl
call
mov
in
mov
cmpb
stos
loop
jle
ljmp
scas
xchg
or
cltd
shll
ret
and
pop
jno
fsubr
or
repnz
mov
cmpsb
adc
inc
insl
adcb
inc
fs
fdivrp
outsb
lret
mov
jmp
sbb
popf
dec
xchg
adc
repz
es
jno
mov
div
fs
gs
jb
jbe
sub
insl
push
xchg
sbb
gs
fs
movaps
les
xor
cs
frstor
add
xchg
clc
sti
fcomi
add
pushf
jae
aaa
pop
loop
cltd
lods
in
push
mov
aam
cli
scas
xchg
push
int
adc
mov
mov
push
push
mov
jb
or
fs
or
fistpl
inc
addr16
into
push
popa
mov
xchg
mov
stc
and
mov
xlat
jnp
add
mov
mov
sub
ja
pop
roll
or
sbb
enter
lcallw
pop
in
les
jns
mov
lcall
jecxz
fidivrs
int
mov
out
mov
mov
xchg
push
out
push
ds
in
dec
int
fnstcw
bswap
insb
sbb
cli
mov
out
pushf
mov
jp
icebp
and
xchg
adc
sbb
scas
outsl
lcall
or
mov
dec
mov
sbb
jns
xchg
mov
or
imul
gs
insb
jl
aas
out
push
xor
or
push
pop
xor
adc
cli
mov
mov
mov
aam
lds
adc
rcrl
or
dec
push
add
ret
jl
dec
loope
loop
and
icebp
adc
or
xchg
lea
in
test
pushf
sbb
arpl
mov
adc
dec
inc
daa
aas
inc
xchg
jle
mov
jno
js
je
xor
imulb
sbb
xchg
js
loopne
mov
nop
aas
and
out
xor
roll
push
lahf
es
push
mov
dec
mov
fisubl
push
adc
mov
mov
xchg
lcall
mov
sub
inc
push
and
or
add
pop
lret
jecxz
mov
sti
rclb
jl
mov
inc
packssdw
xchg
and
cltd
clc
push
sub
inc
fmuls
xor
cvtps2pd
iret
lods
or
in
testb
int3
jle
mov
pop
and
mov
pop
lock
or
inc
addr16
inc
rcr
adc
add
into
fadds
cwtl
outsb
clc
cmpsb
xor
lcall
in
inc
mov
push
mov
loopne
test
popa
ror
dec
xor
jmp
into
repnz
dec
or
stc
pop
jecxz
in
mov
pop
pop
mov
nop
inc
sti
mov
stos
outsl
dec
xchg
out
lods
hlt
or
mov
or
jnp
add
out
call
xchg
jno
jno
out
add
popf
imull
js
nop
rcll
in
ljmp
adc
andl
es
pop
andb
es
adcl
call
xor
lcall
mov
add
dec
insb
cmp
sbb
insb
test
outsb
push
jmp
or
xchg
cwtl
jl
outsl
jb
lock
jo
pop
and
sti
push
ss
dec
int3
rclb
xchg
sbbl
xchg
fsubl
push
out
and
popf
pop
bound
lock
cld
jl
jge
cmp
int
jae
lea
jne
and
arpl
dec
shl
movsl
bound
sbb
bound
jp,pn
adc
or
adc
xchg
cmp
scas
in
fs
lods
xchg
inc
aas
push
mov
mov
cmpsb
aas
mov
adc
jge
add
mov
mov
daa
loop
pop
cli
test
xor
mov
mov
sub
xchg
sub
jo
add
cmp
insb
push
out
je
mov
fists
xchg
jecxz
jb
add
insl
and
std
out
loopew
arpl
mov
cld
addr16
cmpsl
inc
pop
xchg
iret
xlat
cmp
mov
cmp
mov
jo
sub
fs
pop
outsl
cwtl
mov
test
fcomps
sbb
stos
ds
jo
movsb
jnp
scas
and
iret
lahf
jmp
mov
pop
jg
shrb
dec
ret
bound
sub
pop
sbb
cmpb
add
sbb
mov
sub
sbb
cmp
sbb
sbb
adc
mov
loope
icebp
idivb
lret
and
push
add
xor
mov
data16
aam
xchg
popf
pop
gs
das
adc
or
fdivrl
in
adc
cmc
push
testl
pushf
jecxz
lock
test
cltd
sbb
push
add
jnp
cld
adc
pop
das
std
pop
jp
cmp
movsb
add
pop
sbbl
mov
icebp
cmp
pxor
inc
aas
dec
sahf
ficoms
into
mov
arpl
std
lret
test
jge
jg
and
or
ficoms
scas
dec
jmp
std
sub
in
sub
rol
fs
cmp
les
mov
jnp
aaa
pcmpeqw
jns
ss
orb
mov
push
lret
fsubrp
xchg
add
jb
out
jnp
adc
lret
jbe
dec
jbe
ja
sub
lret
dec
popl
add
add
popa
fbld
jbe
xchg
in
xlat
mov
rcrb
cmpsl
popf
testb
push
pop
add
pop
imul
jl
rcrl
ret
cmp
lods
sbb
jmp
cmc
add
arpl
pop
in
add
cmp
pop
mov
mov
fcompl
ja
sahf
fxch
inc
fxch
negl
sbb
jl
lea
les
shr
jmp
xor
pop
fdivs
aaa
clc
push
mov
test
add
dec
jae
ljmp
pop
dec
movsb
imul
iret
iret
stos
leave
mov
and
stos
push
nop
sbb
ss
xchg
adc
fdivs
push
mov
ja
leave
add
pop
cmp
sti
lock
fs
pop
pop
pop
mov
or
daa
xor
fbld
or
xchg
test
cwtl
add
mov
enter
sub
in
lret
sub
and
rolb
adc
js
inc
out
int
or
sar
pop
insb
cmp
or
xor
cld
insl
push
fucomip
jmp
sub
adc
out
pop
cwtl
mov
sbb
cmpsl
mov
ja
in
ret
jae
pop
mov
inc
addb
int3
dec
dec
sub
jecxz
or
xor
push
jl
adc
pop
into
nop
repz
cmp
fsts
shll
adc
sbb
dec
jno
out
dec
mov
loope
add
and
xchg
pop
add
dec
inc
lock
inc
push
popa
test
lods
lods
je
sbb
rorb
push
movsl
or
dec
ret
int3
mov
inc
xor
popf
xor
loope
push
mov
and
mov
hlt
push
pop
scas
ret
jnp
addr16
sub
mov
out
popl
push
pop
cmp
fs
loop
xor
std
out
xchg
dec
mov
xor
hlt
into
mov
inc
and
cmp
mov
call
into
sbb
add
in
shrb
fsubrl
push
and
sub
lcall
or
leave
xchg
inc
jg
in
jns
xchg
test
xchg
and
dec
add
xchg
daa
shll
cmp
lret
pop
xor
aam
call
xor
pop
xor
dec
stos
bound
or
sarb
fsubrl
xlat
cmp
mov
lods
mov
inc
punpckhwd
jnp
out
stos
fsubp
cmc
jmp
fwait
pop
lods
mov
fwait
sahf
sbb
shl
ljmp
adc
mov
mov
lret
push
pop
mov
scas
and
test
bound
je
in
mov
dec
push
or
xchg
xchg
rcrb
mov
xchg
out
and
std
stc
cmp
xchg
or
add
push
xor
dec
stos
mov
in
loop
xchg
imul
imul
pop
adc
cwtl
lds
cmpsb
cli
arpl
cmp
into
negl
push
sarb
inc
pop
leave
xchg
test
pushf
inc
inc
test
mov
pop
daa
imul
sti
jo
mov
jg
xchg
cmpsl
les
outsl
sbb
mov
push
cmpsl
jmp
filds
xchg
sbb
stos
add
add
adc
lods
mov
mov
out
sti
dec
int
aam
pop
sub
aam
dec
aam
add
cli
inc
cmpsb
rclb
cli
jne
test
out
pusha
outsb
jno
add
and
nop
stos
push
lds
lret
mov
rcll
ficompl
je
jo
sub
mov
sub
insl
iret
rclb
movsl
insl
or
inc
push
add
fimull
cmp
test
ja
xor
xor
push
cwtl
xchg
or
mov
cmp
sbb
shrb
shl
lcall
mov
push
call
sbb
xchg
loop
subb
arpl
pop
inc
cmc
xor
inc
inc
mov
xor
lods
pop
add
enter
iret
jae
cwtl
push
mov
xor
addl
lds
xor
fmull
outsl
das
jo
in
push
dec
mov
push
ret
hlt
push
mov
fstps
frstor
sub
cmp
dec
mov
cld
js
jne
inc
xchg
in
out
mov
sub
loop
testl
xor
push
fisubl
lahf
stos
sbb
mov
cmc
aam
xchg
mov
jg
cs
push
call
jne
dec
xor
insl
lret
adc
jmp
jne
mov
sti
scas
jecxz
lahf
aas
ret
dec
cmp
dec
mov
jo
lret
mov
jb
mov
dec
or
cmp
ja
lcall
cmc
xchg
add
dec
dec
and
stc
in
fs
sti
and
mov
mov
mov
shrb
xor
jae
repz
imul
out
sbb
pop
and
rcr
je
dec
aaa
out
inc
enter
add
repnz
lods
fs
pushf
scas
jecxz
push
mov
shlb
int
xor
xchg
xchg
inc
pop
shlb
jecxz
call
aam
sub
add
fisubrl
sub
adc
and
jno
gs
pop
cltd
jbe
daa
idiv
pop
sti
mov
aas
aaa
lods
mov
repz
jns
outsb
dec
aam
in
adc
push
sub
jb
test
hlt
addr16
inc
jo
mov
arpl
es
push
inc
ja
and
and
cwtl
mov
les
repnz
or
cmovbe
sarl
icebp
push
mov
push
pushf
sub
and
jae
loopne
sub
inc
or
jl
inc
in
scas
sub
xor
pop
inc
jp
xchg
out
daa
ss
mov
xlat
stos
push
mov
sti
movsb
and
fdiv
out
pop
xchg
add
xor
daa
jne
jo
aaa
lahf
divb
loop
mov
clc
push
mov
leave
xchg
cmc
mov
mov
cwtl
jo
ja
push
outsb
js
xor
mov
lcall
and
or
add
or
or
leave
xor
mov
adc
lea
dec
pop
aaa
jae
mov
fldcw
cmp
sbb
add
mov
sub
push
inc
scas
sbb
and
repz
movsb
adc
movsb
ret
loope
std
add
push
pop
add
das
cltd
enter
mov
xor
std
dec
test
mov
xor
jge
cmpsb
push
sbb
fcomip
mov
dec
cmp
push
and
sub
add
push
jge
mov
mov
nop
pusha
or
lock
ljmp
jge
lods
add
mov
mov
lret
push
mov
scas
aaa
out
dec
ja
xor
mov
xchg
lret
cld
cltd
adc
jge
xchg
pop
fiaddl
and
aad
in
sti
int
in
popl
or
jmp
call
fistps
int
in
xor
pop
inc
cmp
lock
ud2
cwtl
sub
cmpsb
adc
push
cwtl
or
and
dec
adc
iret
daa
jle
ds
aad
pop
mov
inc
and
sbb
add
xchg
imul
dec
test
mov
jno
mov
out
scas
lds
imul
and
pop
add
inc
les
loop
push
pop
pusha
xchg
ror
sub
stos
mov
icebp
aam
push
jge
call
std
mov
scas
xlat
repz
mov
dec
fidivrl
push
lock
sbb
xorl
and
aad
push
xchg
xchg
push
cld
inc
inc
popa
out
pusha
jl
inc
mov
enter
or
push
lods
ficoms
xchg
adcl
imul
hlt
sahf
outsl
test
mov
icebp
push
div
js
sub
call
hlt
push
int
push
repz
push
sbb
mov
or
nop
mov
mov
aaa
notl
iret
dec
scas
int
lcall
std
mov
add
push
bound
push
fisubrl
xor
scas
out
bound
pop
movsb
mov
sub
ljmp
filds
pop
jl
cmp
push
into
sbb
and
lock
int
inc
jno
adc
push
sub
popl
or
push
push
push
push
fmul
pop
enter
jg
shll
push
push
mov
xchg
out
js
mov
xchg
lock
mov
fnstsw
pop
xchg
pop
jae
xor
outsb
out
roll
int
mov
outsl
sbbb
mov
jle
adc
fndisi(8087
pop
sub
orl
ret
pop
mov
frstor
jo
push
sbb
fstpl
mov
cmp
xor
mov
cmp
nop
and
mov
cmp
push
inc
cmpsb
or
insb
aam
aad
je
pop
or
mov
adc
and
mov
xor
add
jno
outsl
sub
out
sti
mov
push
gs
or
add
das
mov
les
mov
dec
adc
fdivrl
fcomps
and
sub
int
cli
and
cmpsb
add
xor
ret
fwait
icebp
jnp
imul
fucom
cmc
stc
mov
xchg
scas
push
dec
inc
cmpsl
sub
div
xorb
popf
inc
jecxz
cmp
mov
clc
insb
push
jbe
stc
sarl
mov
inc
xchg
lea
mov
cmp
mov
divl
pop
mov
xchg
faddl
jmp
sub
jl
push
and
jb
push
mov
xchg
pop
aad
xchg
dec
adc
cmp
xorb
xchg
jmp
in
test
add
aaa
jb
mov
mov
jp
cmpsl
jns
shufps
push
fidivl
push
mov
sub
aam
arpl
add
push
jne
lret
loope
jp
aam
jg
inc
movsb
push
das
nop
out
xor
push
add
aam
push
mov
clc
fwait
lret
pop
std
lcall
in
pop
xchg
mov
es
sarl
lea
mov
fcoms
xor
lea
inc
mov
mov
mov
dec
imul
aad
cmp
xor
lds
dec
jg
ds
mov
jb
jnp
pushf
imul
test
insb
int
arpl
mov
xor
jnp
push
aas
fstpt
jge
adc
rol
rorl
sub
cld
jp
pop
insb
sbb
lcall
xor
adc
mov
add
xchg
mov
jl
xchg
adc
mov
jmp
ja
dec
sub
ljmp
mov
arpl
sbb
adc
and
inc
cmp
fsubrl
leave
pop
ja
push
push
fiaddl
es
add
das
fidivl
repz
push
sbb
pop
mov
inc
mov
popf
cli
cs
jecxz
sahf
int3
arpl
and
loope
cmpsl
xchg
ljmp
and
mov
idivl
andl
pop
std
cltd
jno
mov
sti
imul
das
add
add
or
add
xchg
ljmp
pop
dec
pop
stos
cmp
enter
movsl
test
mov
push
adc
jns
icebp
roll
and
pushf
sbb
scas
or
in
mov
xchg
in
adc
jno
xchg
into
and
je
pop
jae
lods
add
mov
push
insl
jle,pt
mov
jp
out
inc
mov
nop
mov
jge
mov
mov
jl
daa
push
dec
mov
xchg
adc
fidivl
sub
inc
xorl
and
mov
push
mov
cwtl
daa
scas
pop
add
add
aam
lods
addr16
inc
push
arpl
cltd
or
test
inc
cmpsl
push
scas
sbb
repz
jno
lret
inc
ja
dec
aad
les
pop
scas
orl
testb
outsl
scas
dec
js
stc
mov
ljmp
cs
out
xchg
sub
push
fcom
dec
mov
das
subl
or
sub
fcmovnb
sub
movd
pop
rol
popa
push
dec
jp
mov
insl
and
lock
out
mov
fiadds
shll
std
xor
xchg
dec
jp
dec
fistl
add
mov
into
das
adc
shufps
mov
shrl
fcomip
mov
std
sbb
jmp
out
stos
fiadds
xchg
gs
adc
or
add
add
loopne
mov
aas
stos
in
in
push
push
orb
add
aaa
mov
cwtl
or
fistpll
sbb
pop
push
cmp
mov
outsl
sbb
xor
and
lret
mov
cld
es
adc
mov
inc
push
out
jge
inc
inc
xchg
xchg
testb
xchg
xchg
loope
push
dec
mov
or
xor
inc
adc
call
in
dec
mov
sbb
mov
jo
sbb
pop
jo
cmp
rep
hlt
adc
rcrl
push
mov
pop
inc
sbb
mov
loopne
fdivs
in
cmp
mov
hlt
mov
push
das
scas
insl
jne
pop
xor
out
adcl
rolb
jo
fdivrl
rolb
sub
dec
mov
push
scas
and
pusha
cltd
out
xor
add
pop
jnp
mov
xchg
sub
dec
ret
jbe
aaa
aam
lahf
cmp
xlat
imul
lea
mov
out
lret
lahf
lret
out
mov
in
pop
sub
mov
shr
or
pop
cmp
cld
xchg
push
je
sbb
ja
loope
ds
data16
jb
ficoms
pop
mov
mov
jae
dec
jge
popf
fwait
aad
xchg
cwtl
adc
in
data16
jno
sub
ds
dec
dec
lds
push
pop
xor
int
lcall
and
repnz
outsb
leave
rol
add
xchg
jns
push
cmp
jne
cmpsb
lea
in
sub
mov
in
ss
mov
addr16
sub
inc
es
push
jge
mov
rol
xor
dec
inc
pusha
mov
aam
xlat
jb
sbb
adc
cwtl
and
mov
lahf
test
mov
push
pop
mov
xchg
icebp
sub
imul
xchg
jle
add
mov
dec
push
mov
add
sarb
sub
add
inc
movl
mov
out
aam
xor
lcall
mov
jmp
stc
out
sub
jae
fwait
or
testb
mov
push
cmp
push
into
pop
add
lahf
mov
and
cmpsb
dec
xor
iret
or
cwtl
xchg
fdivrs
xchg
outsl
ljmp
pop
xor
loop
fstps
rcrb
mov
cmp
orb
out
adc
jmp
movsb
je
push
lock
pop
into
ret
sahf
xchg
sub
faddl
call
repnz
dec
sbb
insl
pop
jge
fbld
dec
push
adc
data16
into
clc
rclb
test
arpl
in
imul
pop
xor
cmp
add
xor
dec
mov
fldt
ljmp
fs
aaa
push
jge
mov
mov
adc
xor
jne
lret
es
pushf
jno
dec
in
cmc
jbe
rcrb
and
sub
data16
sub
gs
imull
orb
jl
int3
fwait
mov
xchg
jle
test
push
push
imul
pusha
jg
ljmp
stos
bound
arpl
or
loop
andl
aam
js
mov
nop
jne
aas
mov
pop
aas
cs
cltd
and
mov
negl
dec
inc
mov
loopne
and
sub
inc
int
mull
stc
adc
prefetch
or
sbb
pusha
cmp
lds
notb
add
xchg
cmpsb
dec
stos
shrb
add
dec
mov
or
jns
pop
sub
push
addr16
jp
adc
cmp
jge
gs
jmp
daa
xchg
push
lock
xchg
inc
xchg
mov
in
sub
jno
repz
and
xor
mov
leave
pushf
arpl
cmp
daa
pop
fbld
int
or
stc
or
leave
hlt
ret
jg
push
es
notl
je
mov
enter
daa
lock
cli
sub
bnd
out
adc
sub
jne
xchg
fisttps
or
imul
out
sbb
dec
push
mov
into
movsb
push
lods
add
in
shll
dec
xchg
in
sub
out
add
sbb
cltd
push
add
mov
xchg
and
test
push
cmp
sub
pop
loope
xchg
jmp
test
test
add
sub
inc
mov
lret
jbe
xor
jge
push
jmp
dec
in
dec
clc
mov
xchg
mov
and
xchg
call
daa
adc
mov
push
cld
cmp
xchg
jp
in
imul
aas
and
imul
std
adc
test
sub
xlat
pop
xchg
pop
movl
ret
and
clc
mov
xor
sub
xchg
jns
push
xor
push
push
and
jecxz
leave
cmpsl
movl
pop
mov
ja
test
ret
dec
pop
inc
call
mov
mov
dec
mov
push
iret
inc
cmpsl
mov
repz
mov
fidivrs
mov
test
sti
pop
arpl
lods
aaa
xchg
stos
aaa
pop
insb
jnp
clc
dec
or
shrb
lret
aam
xor
add
out
je
sub
cwtl
jg
or
cmpsl
xchg
cld
cmp
repnz
in
mov
and
cmp
movsb
jns
insb
jp
mov
xor
loop
or
lds
jecxz
xor
jns
xchg
xchg
jbe
jl
or
sarl
mov
and
lcall
popf
push
push
mov
aam
push
jle
sbb
push
loop
jno
and
pop
loope
add
pop
xlat
mov
notl
lds
xor
add
adc
inc
sub
pop
aaa
adcl
adcl
adc
mov
fsubl
stos
loope
sbb
icebp
scas
movsl
mov
movsb
sbb
cmp
mov
ds
pushf
mov
test
shrl
push
loope
jns,pn
icebp
mov
adc
enter
sbb
mov
std
es
sub
scas
lahf
test
rolb
push
sahf
loope
pop
dec
sbb
ja
xchg
int
icebp
push
mov
dec
leave
lret
xchg
xchg
mov
hlt
cmp
adc
fucomp
pop
mov
mov
push
and
sti
sbb
xchg
adc
mov
cli
cmp
mov
jmp
add
push
pop
add
fimuls
xchg
mov
test
aam
mov
xchg
mov
sahf
push
lock
push
sbb
sahf
mov
or
outsb
in
inc
outsb
cmpsl
fwait
pop
imul
push
fldl
pop
fwait
mov
inc
add
pop
in
add
inc
push
out
cli
xor
popf
sar
inc
adc
jp
ljmp
and
loopne
push
sarb
add
mov
ret
test
xor
dec
xor
cmp
out
sbb
pop
add
xor
xor
or
inc
pop
shll
xchg
or
push
clc
mov
stos
inc
sub
lahf
mov
cmp
sbb
inc
xchg
addr16
xor
mov
fcmovbe
sti
or
mov
jg
lret
dec
enter
js
cwtl
or
xor
and
mov
in
mov
adc
pop
cltd
and
push
jb
test
push
aad
jae
fidivl
sub
or
test
pop
cmpl
push
adc
push
xchg
mov
scas
stos
cmpsl
lds
shll
clc
lret
xor
sbb
push
pop
mov
jl
jmp
test
dec
aaa
fisttpll
add
inc
repz
adc
pushf
cmp
jb
sub
int3
jmp
repnz
cwtl
add
adc
shrl
jae
lret
dec
lret
and
pop
js,pn
fwait
push
popf
or
xchg
lret
xor
mov
inc
mov
scas
jle
orb
dec
lret
shll
addb
mov
cmp
adc
js
dec
and
pop
pushf
ljmp
int3
add
leave
nop
arpl
daa
sbb
out
int
jbe
repnz
into
xor
test
fistps
popa
cmp
insb
and
lea
inc
hlt
dec
xlat
mov
das
mov
jo
testb
add
fnstenv
push
jne
int
lock
xorl
lock
testb
sub
fcom
shr
clc
imul
incl
imul
fs
pop
push
loope
sti
jae
jnp
sbb
adc
jl
sbbb
or
inc
movsb
imul
push
out
mov
xor
xchg
sbb
xor
jo
mov
mov
push
push
shrb
add
subl
dec
in
ds
fldl2e
jno
sbb
adc
xor
pop
roll
fnstcw
gs
ss
mov
and
xchg
rolb
das
push
xchg
inc
cmc
imul
cli
pop
push
xchg
sub
cli
add
sbb
daa
mov
and
xchg
in
jb
add
lahf
jmp
lret
inc
or
jb
xor
xlat
sahf
adc
adc
inc
pop
cld
or
clc
mov
sub
jge
jecxz
xchg
sarb
push
dec
pop
in
mov
test
lcall
mov
dec
popa
add
mov
sbb
fldt
hlt
jp
pop
bnd
xchg
data16
mov
ja
pop
mov
pop
call
cmpsb
dec
cs
inc
in
sbb
and
insl
sahf
adc
sub
jp
push
lcall
in
jne
jns
subb
cmp
adc
mov
sub
rclb
xchg
pop
or
ljmp
mov
adc
clc
jb
xorl
sahf
mov
jnp
mov
fucomp
mov
jle
push
sbb
adc
shll
or
xor
adc
cmp
mov
outsl
mov
push
push
push
cs
mov
cmova
movsl
and
cli
sbb
jle
aad
mov
xor
repnz
daa
xchg
lcall
push
rolb
or
bnd
jmp
loope
mov
je
pop
sub
in
imul
or
decb
cmp
jl
mov
mov
lahf
mov
ja
cmpsl
sbb
push
mov
sub
ja
fs
inc
push
loope
lret
test
imull
dec
xorl
and
or
sbb
iret
jo
lahf
lods
pop
inc
mov
pop
ljmp
cmpsl
inc
add
daa
call
in
std
mov
jns
rorb
xchg
mov
sub
jnp
mov
xchg
push
mov
sbb
mov
cmp
sbb
xor
insb
out
test
movsb
push
fldenv
mov
ss
sub
loop
andl
sbb
or
add
test
andl
inc
mov
test
loope
mov
mov
leave
mov
or
xchg
cmp
sbb
push
in
stos
push
add
inc
xor
repnz
pop
dec
jbe
stc
and
fstpt
and
jnp
xchg
sbb
imulb
mov
pop
add
sbb
push
jmp
jp
pop
inc
sahf
add
andb
inc
cld
addr16
inc
enter
gs
mov
xor
mov
mov
and
shl
popa
dec
test
pop
lahf
and
mov
ljmp
pop
mov
loopne
mov
ficoml
and
dec
repnz
call
pop
push
test
mov
inc
movsb
inc
jne
xor
out
ret
jmp
nop
and
adc
out
push
rcll
dec
sub
push
xchg
ds
jle
mov
cltd
ret
dec
ret
sub
imul
push
sbb
pop
cwtl
mov
pop
and
in
test
jnp
push
push
dec
or
mov
mov
rol
loopne
loope
fwait
stc
aas
mov
lds
jmp
push
ljmp
imulb
add
or
adc
inc
push
sbb
mov
in
mov
test
push
mov
es
xchg
pushf
mov
pop
xchg
mov
cmp
fdivs
cmp
and
mov
jno
fldt
adc
shll
mov
out
jbe
aad
and
sbb
imulb
rcl
fadds
mov
incb
cmpl
xor
filds
mov
das
or
dec
and
and
and
stos
adc
jg
pop
cli
pop
inc
sub
paddd
cmp
std
xor
adc
aas
pop
push
jb
stc
jmp
pop
inc
add
pop
add
xchg
cmp
lcall
or
bound
leave
into
popa
test
cmp
adc
and
cmp
inc
push
sub
xor
dec
inc
movsb
arpl
mov
push
out
sbb
jg
mov
mov
inc
pushf
js
lcall
ret
mov
fstpt
out
xor
xchg
sahf
daa
xchg
or
and
mov
mov
mov
ljmp
nop
xchg
mov
sahf
outsl
ret
dec
jmp
jne
lock
mov
pop
or
repnz
in
sbbb
fdiv
xchg
std
mov
rorl
enter
mov
push
rolb
popf
sub
add
add
jmp
int
notb
mov
call
stc
pop
das
pop
aaa
adcl
je
push
sbb
dec
push
hlt
mov
sub
lock
jl
dec
aas
or
sub
clc
pop
mov
cmp
clc
outsb
sub
xor
and
in
stos
mov
ret
and
call
xor
mov
mov
pop
int3
mov
pusha
xchg
int
out
and
ret
adc
sbb
aad
push
testl
dec
xchg
dec
bound
decb
jbe
or
ret
and
add
adc
rcrb
mov
cmp
pop
push
cwtl
out
dec
sub
pushf
unpckhps
sub
icebp
in
fnstsw
dec
shl
lcall
adc
ss
xor
idiv
or
jbe
mov
sub
jno
addr16
mov
fsub
enter
jnp
mov
lock
xchg
and
ja
jae
lahf
mov
xchg
add
aad
repnz
ucomiss
es
test
loopne
inc
jecxz
sub
mov
or
xchg
stc
inc
pop
pop
js
fdivrs
nop
lods
and
sbb
mov
push
scas
push
push
push
sbb
stc
hlt
jmp
cmp
dec
shlb
leave
mov
pop
daa
mov
or
pop
push
xchg
movsl
loopne
mov
or
loope
xchg
lds
mov
cltd
xchg
fidivrl
xchg
add
cmpl
adc
mov
jle
in
push
jg
cs
jecxz
xchg
xchg
jle
adc
call
sti
jno
or
or
ljmp
inc
cli
add
pushf
lock
lcall
adc
daa
sti
dec
outsb
cli
adc
adc
push
xlat
scas
pop
fcom
inc
aaa
add
inc
push
mov
lret
mov
fsubl
mov
sbb
mov
pop
mov
shrl
scas
les
or
stc
cli
std
adc
inc
mov
and
push
movsl
push
iret
sbb
scas
out
sbb
mov
fists
mov
aad
and
cmp
or
and
or
icebp
sarb
scas
mov
subl
js
imul
pushf
push
sub
sub
mov
jl
test
lea
int
dec
in
or
pop
xchg
nop
pop
mov
nop
aam
xor
cmpsl
out
aad
dec
sbb
mov
xchg
aam
int3
repnz
push
mov
mov
dec
mov
jns
sbb
xor
xor
push
push
xchg
xchg
push
outsl
push
jle
xlat
rcrl
push
inc
dec
xor
stc
outsl
adc
lret
fdiv
es
leave
pop
xchg
and
mov
repnz
popf
pop
cmpsl
lock
shrl
in
aaa
dec
xorl
push
fidivrs
inc
repz
insl
ret
cld
pop
or
cmp
stos
fimull
dec
int3
ds
cmpsb
shlb
std
xchg
and
xor
cwtl
xor
ja
dec
sub
mov
adc
rorb
sbb
ficompl
ret
jbe
mov
into
ret
jno
add
iret
and
imul
popa
outsb
aad
es
ret
xor
clc
and
sbb
mov
sub
xchg
cltd
sbb
aaa
stos
adc
mov
dec
call
fsubl
add
icebp
adc
imul
test
sbb
or
or
daa
xchg
push
mov
psrad
fwait
shl
mov
gs
dec
stc
pop
push
test
arpl
mov
dec
sahf
clc
cld
adc
push
cmpsl
cs
in
add
je
movsl
inc
inc
lock
xchg
sbb
dec
dec
and
mov
adc
fsub
jnp
mov
and
lcall
mov
or
push
xor
inc
jp
jno,pt
push
pusha
sub
pop
add
leave
inc
sub
jmp
mov
xor
mov
or
xor
aam
pop
xchg
push
xor
in
pandn
ja
push
loop
pop
adc
cltd
fstpt
in
lcall
xor
cmpsl
dec
push
cmpsb
lds
sbb
out
push
jbe
mov
stos
jecxz
dec
xor
jae
inc
adc
test
xchg
and
xchg
cmp
cli
xchg
push
xchg
cwtl
int
xchg
stos
adc
mov
pop
lcall
adc
sub
cmp
push
shlb
push
mov
push
sub
pop
jne
test
and
out
jns
test
pop
add
cwtl
dec
push
adc
pop
gs
scas
ret
out
rcr
xchg
lahf
mov
mov
add
or
pusha
fadds
sahf
mov
gs
es
lahf
testl
and
jl
adc
lock
loopne
iret
repnz
loopne
daa
pop
icebp
in
dec
cwtl
imul
ret
imul
insl
insb
pop
call
cmpl
mov
cli
lcall
xchg
jl
daa
in
mov
pop
popf
insb
mov
inc
popa
mov
shlb
orb
aas
aad
lods
jmp
les
test
pop
or
xchg
push
adc
dec
pop
pushf
and
push
cmpsl
mov
aas
pusha
mov
arpl
fadds
stos
pop
or
in
mov
pop
pop
xchg
lock
and
in
pop
fdivrl
mov
cmp
mov
mov
ja
pop
push
imul
inc
incb
push
jecxz
arpl
gs
out
add
push
pop
add
and
stos
inc
pop
testl
and
icebp
pop
imulb
ffreep
pusha
sub
jno
xchg
adc
dec
dec
movsb
mov
push
mov
test
adc
in
xchg
pop
jb
jb
jl
fcomp
jl
lds
mov
sti
fsubr
leave
pop
dec
pop
dec
xchg
adc
push
or
mov
divl
lcall
mov
pop
mov
and
fisttpl
mov
xor
jg
jae
inc
out
orb
in
mov
dec
add
dec
mov
xchg
pop
scas
roll
jp
insb
fadds
sarb
aaa
ret
push
ret
aam
js
inc
add
add
xor
inc
test
insl
out
jnp
outsl
xor
mov
mov
mov
inc
pusha
leave
pop
ljmp
cs
pop
mov
insl
stos
pop
ret
cmp
fcomps
xor
sub
clc
jbe
addr16
sbb
clc
rcll
lret
rol
jecxz
add
stos
pop
lock
mov
movsb
imul
jne
mov
push
push
mov
dec
mov
and
inc
pop
pop
mov
mov
xchg
push
rorl
or
imul
repz
dec
hlt
adc
mov
dec
and
lcall
sbb
aad
dec
lcall
les
stos
test
sbb
loope
std
shll
adc
je
mull
and
pop
cmpsl
cwtl
test
pop
sbb
mov
fbld
mov
ja
push
and
mov
inc
sahf
roll
mov
mov
xchg
or
inc
lock
pop
inc
jo
popf
xchg
test
stos
je
jg
mov
pusha
int3
push
in
mov
mov
jmp
jg
lret
adc
cmp
dec
mov
sub
xchg
fdiv
mov
test
aaa
mov
out
mov
and
stos
mov
out
sub
adc
ficompl
jg
or
jge
and
jo
hlt
fmul
pop
out
sti
adc
cwtl
orl
mov
rorl
mov
out
sub
sub
clc
xchg
push
or
inc
push
and
cmc
repz
roll
stos
testb
xchg
ljmp
cmp
jge
stc
insl
nop
stos
xor
call
adc
pop
xor
sub
mov
or
insl
mov
dec
and
jg
loop
jecxz
in
inc
mov
jae
mov
adc
mov
pop
repz
push
inc
call
lahf
cmp
je
xchg
or
sbb
mov
shlb
insl
xchg
pop
in
imul
stc
xchg
enter
cmp
into
adc
pop
aas
insl
mov
or
aam
mov
hlt
jo
push
cmp
push
test
sbb
out
lods
ret
jg
or
xchg
sbb
adc
and
lcall
lds
lea
outsl
int3
and
imull
std
push
lahf
shlb
pop
or
sar
lar
lock
roll
xor
bound
push
sbb
cmp
dec
and
adc
jmp
jecxz
inc
movsb
ret
imul
mov
das
jns
cmp
ret
or
notl
dec
orb
call
and
inc
jg
add
xor
ss
jp
cli
fsubrs
xor
mulps
int
ret
dec
sbb
dec
cmp
inc
xor
cmp
dec
mov
test
ds
aad
stc
xor
sbb
push
enter
mov
in
mov
pop
imul
sbbl
jmp
popa
enter
ret
shrl
dec
xchg
aam
xchg
movsb
push
push
inc
fsubrl
sub
inc
adc
jmp
insb
push
popa
pop
lret
dec
cltd
divl
fimull
fidivrl
movsl
ss
repz
jp
pushf
dec
ds
cwtl
shrl
fwait
cmp
cwtl
push
into
mov
paddusb
mov
test
mov
adc
jae
es
lret
mov
dec
dec
fwait
imul
add
fnstcw
ljmp
into
inc
cmp
stos
pop
mov
jmp
addr16
flds
sbb
imul
imul
mov
pop
fldenv
or
dec
jmp
aas
mov
dec
pushf
xor
aaa
sbb
gs
mov
mov
fdivrs
mov
movsb
push
mov
and
es
mov
mov
xchg
shll
pop
xchg
jae
pop
out
inc
xchg
shl
xchg
push
jmp
test
push
pop
xchg
insb
repnz
fsubp
int
fidivs
repnz
stc
mov
cmc
jl
xor
dec
mov
icebp
adc
sbb
add
mov
mov
sub
dec
call
push
stos
icebp
xor
loopne
movsl
aas
pop
push
mov
es
sar
in
idivl
inc
sub
test
int3
hlt
add
or
xor
rolb
push
sbb
ret
dec
and
sbb
jg
jo
iret
dec
jnp
dec
inc
daa
call
shlb
lds
fwait
les
inc
mov
imul
push
inc
out
cmp
loope
xchg
insl
lahf
inc
push
xchg
xchg
jb
jne
add
cmp
mov
add
pop
out
sbb
insb
push
xchg
gs
inc
les
inc
cmpsb
sbb
ficoms
add
and
out
insl
cmp
int
pop
push
sti
dec
stc
cli
push
insl
stos
mov
and
sbb
psllq
ss
cmp
pop
sub
push
mov
out
ljmp
aad
mov
loop
loope
scas
mov
jnp
in
cmp
jbe
mov
mov
shrb
mov
cmp
pop
sahf
xor
inc
dec
popf
stc
in
data16
or
stc
cwtl
icebp
adc
xchg
mov
inc
sub
jno
xor
xchg
inc
inc
out
test
sbb
cmp
arpl
jnp
push
cmpsb
mov
xchg
ret
sub
add
jo
clc
inc
ret
lds
imul
ds
cmp
pushf
daa
cmpl
push
xor
inc
cmp
repnz
push
pop
mov
pop
es
add
add
pop
add
lea
cmp
stc
mov
push
pusha
add
mov
loopne
rorb
jo
pushf
dec
ja
jg
pop
ffreep
mov
in
mov
xchg
lock
insb
jmp
fists
adc
jge
or
mov
mov
lea
shll
push
sbb
xor
sub
stos
adc
call
mov
mov
and
push
jne
push
dec
dec
test
jle
jg
push
sbb
inc
sub
mov
aam
push
int
inc
lcall
pop
or
test
jecxz
inc
lock
mov
xor
dec
mov
jle
sahf
xor
repz
xor
lds
mov
fdivrs
lods
and
dec
es
inc
test
xor
loope
sbb
pop
cmc
shrb
iret
shlb
es
std
ja
inc
push
movsl
mov
ret
inc
xchg
or
mov
movsb
jo
mov
seta
pop
imul
out
rolb
mov
sub
push
imul
inc
or
sarb
sbb
pop
add
or
enter
rcrl
xor
adc
lock
outsb
mov
std
add
shrb
stos
mov
inc
pop
sbb
sbb
sub
fldt
cwtl
jnp
rcrb
jecxz
cmpsl
mov
bound
cmp
mov
lea
std
nop
ja
out
adc
jecxz
sti
es
repnz
inc
pop
and
cmp
inc
loop
cld
ficoms
pusha
inc
sub
xor
fdivrs
cmp
subl
punpcklwd
popa
in
or
in
sbb
push
cld
jmp
arpl
cs
dec
in
aam
nop
in
cld
stc
and
lods
call
pusha
sbb
xchg
fiadds
jo
mov
adc
aad
adc
ja
imul
and
fildll
mov
cs
xchg
xor
call
loop
mov
decb
mov
outsl
js
out
lcall
push
imul
mov
shlb
or
bnd
push
hlt
jae
mov
xor
adc
mov
shrb
push
jns
mov
xchg
xor
test
add
loopne
f2xm1
mov
icebp
addr16
inc
adc
popa
mov
pop
ret
cmc
pop
mov
inc
repz
pop
fldenv
sbb
sub
test
pop
mov
aam
mov
movsb
int3
sub
inc
add
mov
lret
push
mov
iret
sbb
cld
stc
or
subb
inc
add
add
cmp
pop
mov
stos
dec
push
push
dec
mov
pop
push
adc
xchg
jne
clc
loope
gs
fmul
aas
fistps
or
xchg
mov
fidivl
mov
xor
lea
cmp
cmp
mov
mov
mov
out
jp
stc
lret
dec
movsl
fmull
loopne
xchg
jne
jecxz
imul
add
mov
int3
jecxz
pop
leave
add
dec
je
sub
fs
mov
out
imul
sub
dec
jl
mov
in
adc
push
inc
jecxz
inc
lret
add
mov
adc
out
fwait
xchg
das
fldl
dec
and
in
insl
mov
in
sbb
fwait
jbe
lods
xor
mov
ret
push
mov
or
movsb
enter
out
movsbl
ss
out
mov
xchg
shlb
mov
adc
mov
js
sub
andl
test
imul
and
lret
xchg
sarb
sub
ret
cwtl
xor
mov
and
lds
lock
lcall
sar
incl
sub
pusha
inc
shrb
test
dec
insl
inc
mov
xor
cmpsl
leave
pop
push
aaa
out
stos
push
shlb
push
icebp
adc
jmp
lcall
sahf
es
fstpl
sbb
into
sbb
rol
mov
sub
imul
or
jge
mov
inc
in
sub
and
jmp
nop
push
sahf
movsb
xor
cmpsb
jb
mov
cmpsl
mov
mov
dec
bound
mov
push
adc
leave
xchg
inc
fwait
pop
lock
fsubs
leave
in
lods
icebp
adc
jge
xlat
sbb
fsubrl
lds
dec
inc
adc
mov
cmp
lds
icebp
mov
inc
dec
mov
add
test
incl
int
test
aas
clc
dec
dec
push
out
sbb
mov
jp
push
or
sub
xor
pextrw
jbe
jmp
jne
dec
cs
inc
enter
add
lea
mov
xor
out
aas
cmp
aam
test
fdivrp
lret
mov
inc
add
jb
ja
lods
insb
push
ret
cs
aas
cmp
out
jl
loop,pt
inc
mov
xlat
stos
pop
jae
cs
sub
mov
jnp
adc
xor
cmp
jge
or
in
lock
mov
and
lock
dec
movsl
andl
sbb
out
popa
and
xor
xchg
adc
cmp
xor
data16
mov
inc
ds
mov
ds
xchg
xchg
ret
cld
mov
mov
fisubs
movsl
cs
in
aam
dec
es
sbb
shll
mov
cmp
jl
sub
sbb
or
sub
imul
inc
insb
jo
or
push
mov
decl
jne
jle
and
sahf
pop
push
lahf
bound
adc
adcb
ror
cld
fs
imul
cmp
leave
xor
je
pop
ret
xchg
jb
out
jmp
push
xor
data16
sub
test
into
leave
jns
push
push
mov
pop
mov
out
pop
xor
cmpsl
xchg
add
movsb
push
arpl
xor
into
lret
or
dec
loope
pop
popf
imul
push
xchg
iret
xor
pop
movsb
jns
mov
test
scas
ror
push
pop
mov
cmp
loope
add
pop
add
jmp
insb
mov
xor
xchg
loopne
pushf
cli
enter
leave
incl
lret
and
test
lea
adc
sti
es
or
ret
pop
mov
and
mov
fcoml
sbb
mov
cmp
icebp
fimuls
push
cmp
adc
pop
movsl
jno
dec
std
sbb
bound
or
cmp
push
cmp
inc
push
sbb
add
test
mov
test
cmp
call
stos
dec
adc
stc
loop
xchg
dec
inc
xchg
in
stc
adc
jbe
sti
imul
mov
xchg
outsl
lods
std
mov
inc
shrb
push
repnz
notb
push
stos
inc
cltd
adc
jno
adc
mov
lcall
stos
pop
push
sub
insb
inc
push
ret
fisubrs
shlb
push
not
cmp
pusha
dec
add
mov
test
aas
cmp
arpl
jge
sub
pop
aad
sbb
jno
cmp
arpl
xor
mov
aaa
xchg
ficomps
scas
jne
lret
scas
jecxz
mov
rcrb
cmp
adc
xchg
fwait
mov
sub
inc
fprem1
rolb
inc
push
push
adc
pop
scas
mov
or
xor
ret
movsb
orl
test
cmpsl
imul
cmp
and
cli
repz
pop
rcrl
fstpt
push
pop
push
cmp
int
out
and
mov
mov
or
mov
mov
enter
cs
cwtl
push
in
dec
mov
pop
push
insb
sub
cmp
scas
and
out
cmp
jne
xor
push
lret
fsubs
cs
fiaddl
or
add
lds
lret
adc
xor
adc
xchg
sbb
in
into
pop
mov
inc
dec
lcall
rcl
stos
sub
dec
push
mov
aam
loopne
fidivrs
in
or
mov
jae
mov
xchg
jl
icebp
in
sub
dec
and
mov
fnstenv
sbb
mov
ljmp
dec
xchg
jbe
xor
popa
pop
and
pushl
outsl
cwtl
ds
and
cmp
dec
push
inc
rcl
push
mov
push
push
fs
incb
dec
sbb
loopne
inc
lods
ljmp
fiadds
adc
insl
adc
jae
ljmp
xchg
lods
mov
or
cltd
cmp
sbb
mov
jl
arpl
xlat
sub
push
mov
xchg
xlat
mov
jg
les
push
rclb
scas
dec
jmp
xchg
js
adc
in
mov
fistpll
jl
stc
mov
sub
or
dec
dec
arpl
dec
fidivrl
aam
sub
arpl
mov
mov
sbb
push
and
adc
sub
ljmp
test
add
cld
ja
sbb
push
pop
movsl
test
inc
cmp
cs
dec
pop
pop
push
inc
mov
leave
mov
adc
addr16
repnz
push
add
adc
aaa
iret
add
outsl
sbb
aam
mov
loopne
or
mov
stc
add
add
pop
and
dec
dec
and
popa
cwtl
cmpsl
inc
inc
decb
sar
jecxz
cltd
xchg
dec
inc
dec
fldcw
loope
push
pop
sub
pop
in
sub
sbb
mov
sbb
daa
out
popa
clc
into
repnz
push
icebp
adc
mov
lret
adc
mov
cmp
xchg
sbb
sbb
cmpsb
xor
enter
sti
in
mov
mov
cltd
dec
sub
inc
sbb
jg
lret
push
mov
jbe
cmp
js
mov
xchg
or
push
adc
pop
jp
inc
shrl
sub
inc
fdivs
pop
jmp
mov
jg
add
jle
in
dec
shlb
mov
lcall
std
into
xor
imul
mov
mov
cwtl
mov
es
inc
adc
into
ljmp
sbb
aad
dec
sbb
sbb
sbb
pop
shll
pop
adc
leave
mov
mov
fldl
lock
adc
mov
push
adc
aaa
pop
cltd
loop
lcall
pop
sub
push
fs
leave
sub
stc
push
xor
nop
outsl
jb
mov
xchg
das
popf
lds
stos
push
dec
and
inc
cmp
lock
push
lret
pusha
and
sbb
ds
mov
call
add
pushf
jns
je
out
pop
dec
out
ja
clc
pop
add
nop
xchg
fstps
imul
lret
shlb
cmc
ret
and
mov
addl
jl
shl
movsl
sbb
je
fs
xchg
push
push
jb
into
clc
add
and
sbb
loopne
repz
cs
loope
repz
xor
or
pop
shlb
xchg
push
js
adc
mov
out
pushl
call
pop
es
repnz
stos
leave
cltd
mov
add
mov
mov
outsb
xor
jp
inc
push
movsl
push
gs
lea
sbb
and
cmp
iret
push
add
popf
fisubrs
mov
ret
xchg
push
fwait
pop
mov
andl
add
xor
popa
mov
lock
mov
gs
xorb
lcall
gs
xchg
je
pusha
push
mov
mov
orb
add
cmp
repz
jo
mov
xor
cmp
fistl
cs
ficoml
xchg
cli
pop
jb
mov
out
loopne
scas
mov
pop
mov
add
push
mov
outsb
or
lret
mov
stos
out
or
fcoml
xor
jecxz
pop
or
out
dec
or
popf
push
out
shll
and
pop
push
cmp
stc
cld
push
sbb
movsb
xorl
xor
pusha
jns
and
cmc
mov
push
mov
sbb
in
rclb
into
sub
movsb
insl
ret
adc
mov
sbbl
cltd
or
or
xchg
inc
inc
ljmp
add
add
push
ja
daa
inc
call
mov
roll
add
pop
add
add
dec
fcomps
jge
push
repnz
fisttpll
scas
mov
pusha
xchg
sub
in
lods
pop
dec
sbb
push
and
inc
stos
lods
out
mov
sbb
inc
push
mov
jp
mov
dec
scas
add
mov
push
mov
lahf
js
adc
and
push
ja
dec
enter
push
repnz
jnp
mov
push
mov
mov
cmp
xchg
sbb
add
int
in
sub
sbb
mov
push
ret
rorb
dec
xchg
rcrb
or
adc
lods
enter
int3
mov
sub
out
dec
mov
pop
pop
test
incb
std
or
mov
movsl
and
pop
jns,pn
mov
rcrb
fldenv
dec
int3
ss
in
fsubs
repnz
adc
xchg
cmpb
or
fcmovnu
stc
lods
je
xor
incb
jb
mov
mov
fwait
xchg
and
std
xor
and
and
ret
orb
sbb
xlat
imul
mov
in
and
and
sub
dec
and
mull
test
dec
lds
nop
mov
mov
xchg
bound
daa
daa
xchg
mov
push
ljmp
and
and
jle
pop
mov
lods
repz
nop
test
outsl
jns
leave
repz
pop
sarl
mov
leave
fdivl
test
aaa
mov
push
jle
loopne
pop
cmp
sbb
out
mov
cmpsb
sti
add
inc
jb
mov
outsb
call
sti
mov
mov
fsubl
scas
cmpsl
xchg
add
fcmovb
mov
imul
xchg
sub
ljmp
call
mov
jp
jmp
stc
shrb
ljmp
int3
jle
popf
cmpl
js
clc
sbb
lods
shr
test
cmp
pop
dec
test
idivb
test
sbb
mov
das
pop
popf
adc
dec
cld
lahf
dec
mov
imul
jg
add
mov
scas
fs
mov
ret
push
cmp
inc
push
push
add
cmp
mov
xor
xor
inc
mov
stos
dec
add
push
sbb
xor
xor
dec
mov
jno
mov
fcmovu
popa
jge
dec
out
lret
jl
aam
mov
add
cmpsb
inc
je
xchg
sbb
js
sub
iret
jl
aam
ret
insl
loop
push
pop
add
mov
push
pop
jbe
gs
push
ret
sbb
das
repnz
bound
loope
xor
fsts
pop
jl
repnz
dec
xorb
adc
out
sbb
std
aas
xchg
inc
and
mov
insl
add
xchg
imul
mov
push
pop
push
cmc
cmpsb
sti
addb
stos
icebp
xchg
popa
daa
adc
paddsb
inc
adc
sub
xchg
fs
xor
sub
outsb
mov
jge
xor
mov
mov
pop
cmpb
lahf
add
pop
scas
sti
xchg
nop
adc
fstpt
lock
and
sbb
dec
dec
lret
sub
mov
push
mov
inc
inc
fcompl
jo
insb
cmp
and
in
fdivrs
and
mov
jns
mov
push
outsb
push
fstl
add
adc
add
popa
xchg
out
pop
sahf
imul
mov
jmp
push
push
adc
js
sub
cmp
pop
add
clc
or
not
fistpl
ss
les
inc
dec
das
or
rcll
lods
xor
adc
cmc
sbb
js
or
cmpsl
outsb
adc
data16
int3
subb
lret
jno
xor
hlt
sbbb
mov
lea
pop
mov
xchg
cwtl
mov
jb
sbb
jne
sbbb
adc
inc
mov
outsb
push
inc
mov
ljmp
or
xchg
fs
imul
adc
pop
mov
push
lods
sub
ss
insb
insb
imul
jno
sbb
ror
loope
jns
loope
xchg
ficompl
push
push
vpshld
fstl
pop
fadd
fcmovu
push
call
add
xlat
xchg
lahf
test
pop
and
cmp
popf
add
inc
gs
mov
mov
dec
data16
movw
jle
mov
add
lahf
cmp
jb
mov
aad
cmpsl
sarb
sbbb
push
jg
sti
loopne
out
mov
int
jb
mov
jp
lods
aas
adc
jmp
mov
cmp
mov
frstor
imulb
inc
clc
sbb
ret
mov
hlt
cli
scas
fldcw
mov
jl
jl
add
pop
gs
sahf
pop
out
mov
xchg
xor
pop
fwait
adc
pop
divl
xchg
in
out
adc
fs
hlt
hlt
stos
fsubrs
cmp
mov
and
loope
cmp
jp
mov
cs
leave
js
loopne
dec
cmp
clc
mov
or
mov
aam
arpl
roll
dec
dec
stos
in
in
int
insb
aad
inc
imul
out
mov
add
aaa
jno
rorb
jbe
cltd
ljmp
sub
xor
pop
cmp
sbb
fs
es
sti
dec
jne
adc
mov
inc
ljmp
fdivrl
pop
fucomi
mov
add
dec
or
jb
mov
pop
mov
mov
inc
sub
mov
xchg
inc
sub
repz
negb
pop
xchg
sbb
imull
xchg
fidivl
pop
aas
inc
aaa
fwait
mov
mov
out
mov
fldl
xchg
push
jno
add
mov
add
or
mov
imul
push
lods
imul
jge
movsl
aas
ljmp
adc
js
cmp
lods
mov
stc
push
cmpsb
out
in
out
sbb
mov
jmp
mov
fisttpll
movsl
out
lods
pop
xor
js
iret
mov
cs
jmp
inc
jle
out
mov
lcall
or
dec
dec
ljmp
jecxz
push
cltd
icebp
lds
out
push
pop
mov
push
adc
hlt
ja
mov
fwait
notb
mov
cli
inc
sub
inc
and
les
popa
movsb
cmp
jle
pushf
jns
jnp
xchg
test
jne
xor
cmpsb
add
add
xchg
dec
jnp
sti
mov
ds
ret
inc
outsb
inc
lcall
pusha
int3
or
jbe
ljmp
push
mov
ljmp
sub
lret
inc
add
cli
pop
cmp
sub
insl
jo
fistps
jo
cld
lret
in
cld
or
or
sub
pop
lea
mov
push
lret
mul
dec
mov
repnz
or
lds
mov
lods
repnz
es
mov
out
jae
add
and
mov
dec
sub
inc
jo
test
push
es
pushf
sub
rep
cmp
adc
or
lock
mov
test
cmp
loopne
enter
mov
lock
les
adc
or
push
jl
aaa
xor
call
or
gs
ret
fs
jne
and
jmp
xchg
aam
shll
jge
dec
pop
push
mov
shr
shl
icebp
dec
mov
inc
out
push
clc
scas
inc
or
lea
out
cmpsb
pop
leave
test
test
shll
rclb
fs
sbb
ds
and
mov
mov
mov
inc
rorb
pop
lret
and
inc
xor
jl
jmp
sar
mov
test
mov
sub
mov
dec
mov
jmp
cmpsl
add
jmp
xchg
cmpsb
or
jbe
fiaddl
das
hlt
fstpt
push
mov
sarl
loope
movsb
add
sbb
test
mov
xchg
pop
movsl
jo
push
cmpl
push
mov
inc
cmp
popf
dec
rcrl
pop
jmp
sti
mov
ret
rorl
test
cmc
fldt
mov
test
imul
cmpsb
cwtl
rclb
ds
sbb
jmp
sbb
fadd
popf
mov
iret
jne
mov
inc
mov
leave
jns
sub
in
cmp
sub
pop
xor
add
dec
das
pop
repz
mov
or
enter
fadds
adc
filds
std
push
pop
inc
cmpl
push
jo
test
mov
push
push
add
cmp
dec
mov
dec
outsl
dec
lret
clc
pop
mov
cmpsl
cmpsl
lds
adc
divb
test
add
int
scas
sbb
gs
sub
xchg
jns
push
mov
pop
inc
cmp
lret
movsb
sub
inc
lahf
add
addr16
push
inc
jae
test
or
dec
dec
cs
ficomps
jo
dec
push
sub
cmp
xchg
movsb
sbb
test
aam
and
xlat
sar
mov
push
pusha
aad
fbstp
negl
xchg
push
adc
push
mov
mov
notl
mov
mov
call
jp
push
push
dec
xor
mov
add
loopne
or
mov
movsl
aam
xchg
out
imul
shr
jecxz
cmpsl
cltd
mov
fmuls
push
fucomip
push
mov
dec
mov
lds
sub
push
lods
mov
andl
pop
scas
fistpl
fidivrl
mov
add
pusha
dec
pop
sbb
sbbb
fstps
add
movsb
cmpsb
adc
movsb
sbb
test
pushf
jo
mov
dec
ss
ds
aas
jp
or
mov
xchg
out
cmp
rcrb
lret
repz
mov
pop
lock
jnp
cmp
pop
popf
pop
stos
push
push
in
jp
push
es
das
pop
and
lods
inc
shr
add
ficoms
sub
xor
ret
dec
add
xchg
jns
movsl
pop
and
sub
iret
sbb
xor
lcall
int
xor
mov
jb
lret
lret
jle
scas
fidivs
adc
pushf
js
repz
addb
xchg
mov
movups
pop
cmp
mov
fidivrl
scas
sub
repz
fdivrl
in
stos
or
insl
mov
push
mov
lret
mov
push
cld
lcall
pop
jecxz
jp
lock
inc
testb
adc
push
insl
cli
xor
xor
xabort
mov
jns
daa
aaa
or
add
adc
jo
push
mov
add
pusha
aam
stos
je
test
or
cmc
inc
ds
mov
jb
mov
lds
push
mov
bound
mov
imul
and
in
push
jecxz
mov
dec
fildl
sbb
lea
ja
lret
mov
data16
push
mov
cmp
popf
hlt
nop
add
xchg
mov
xchg
dec
rorb
jne
mov
jp
push
bound
out
sbb
mov
jp
jno
xchg
jns
es
sarb
and
pop
jno
mov
xor
js
andl
loop
in
data16
or
dec
mov
in
imul
jp
adc
dec
jnp
lret
push
jne
jne
xor
pop
sub
fcom
xchg
inc
dec
push
dec
xchg
roll
ds
cmp
gs
sub
add
cmp
inc
aas
js
pop
cmp
notl
sbb
jbe
jl
mov
sub
fucom
inc
adc
jne,pn
je
push
push
test
push
movsl
in
cmp
push
das
push
jae
inc
xchg
jo
ret
sbb
cmc
js
imul
jle
arpl
jnp
ljmp
scas
sub
jge
fstps
bound
mov
mov
mov
mov
shl
cmp
xchg
pop
mov
ficoml
xchg
dec
push
mov
mov
cmc
push
and
ror
mov
outsb
into
repnz
ret
popf
add
lahf
push
push
cltd
and
jbe
mov
les
arpl
repz
ljmp
xchg
icebp
sbb
test
push
adcb
cmc
pop
decb
rcrb
xchg
mov
pop
fbld
call
imul
nop
cmpb
sub
mov
dec
imul
or
xor
dec
xor
stc
mov
jmp
int
movsl
and
mov
cmp
test
mov
cmpb
mov
pop
daa
and
mov
pusha
getsec
loop
stos
jbe
add
pop
add
lods
popf
push
sub
lock
enter
jns
js
testb
mov
lock
outsb
mov
push
divb
mov
roll
xchg
or
jecxz
ja
lds
mov
mov
jl
add
test
or
dec
dec
and
mov
adc
arpl
outsb
jnp
out
push
push
int3
cmp
jb
xor
mov
int
sbb
outsb
push
outsl
cmp
mov
xchg
rcl
jno
add
lcall
enter
xor
pop
add
sub
pop
mov
insl
bound
sahf
pop
mov
sahf
movsb
out
cltd
or
shlb
aaa
shl
and
cmovb
inc
imul
repnz
jb
mov
jecxz
sub
shrl
rorb
stos
xchg
sbbb
jg
gs
push
xchg
movsl
repz
and
pop
imul
mov
sbb
mov
movsl
inc
inc
sub
pop
lret
adc
mov
int
dec
mov
jge
scas
xlat
jle
in
lds
inc
mov
testl
or
leave
aad
out
movsl
and
mov
mov
rcr
dec
mov
icebp
xchg
jge
jo
pop
fistpll
pop
adc
nop
fisttps
stc
mov
xchg
scas
jno
sub
jo
sub
sbb
icebp
daa
mov
sbbl
sti
test
xor
mov
pop
sbb
loope
and
cmp
add
jg
jle
and
mov
fdiv
add
cmp
jo
cli
add
jge
and
ret
pop
lock
inc
mov
cwtl
or
and
and
add
gs
aas
adc
mov
call
cmpsb
xchg
push
dec
mov
pop
jo
test
in
rol
inc
xlat
and
jle
and
aas
mov
or
cmp
or
push
pop
popa
xchg
shr
sti
mov
push
mov
mov
dec
jge
add
cmp
dec
mov
xor
sub
cmpsb
arpl
adc
loope
jae
popf
in
pop
test
lods
in
sbb
fldt
cld
jle
cs
cli
mov
push
ret
add
push
mov
lock
mov
or
loopne
cmp
jmp
cmpsb
loope
push
in
into
xchg
ss
or
mov
push
jo
mov
pop
xchg
cwtl
add
cld
iret
mov
jnp
fcomps
xchg
cs
dec
mov
mov
jno
inc
mov
adc
and
xor
cli
mov
mov
in
pop
cmp
sbb
mov
fs
jno
add
popa
or
push
push
sbb
dec
xchg
or
sub
daa
sbb
enter
and
ljmp
pop
mov
pop
or
push
ret
inc
cli
mov
jmp
scas
jecxz
aas
out
add
orl
jo
add
loope
repz
dec
dec
or
or
inc
cwtl
movswl
nop
test
ret
dec
leave
push
stos
pop
or
xlat
ja
daa
loop
pushaw
xor
dec
push
lret
xor
dec
add
add
repz
aam
sub
or
sub
dec
es
add
int3
stc
das
repnz
cmp
dec
lret
loop
int3
loop
lds
addl
cld
fst
xor
mov
inc
inc
mov
pxor
outsb
scas
dec
jle
out
dec
adc
adc
mov
fisubl
xchg
mov
add
pop
pop
int3
xor
adc
adc
sub
sahf
lds
mov
emms
mov
cmp
mov
lahf
mov
dec
leave
cmpsl
cli
pop
insl
pop
xor
rcrl
mov
jg
push
pusha
xor
sub
pop
rorl
out
xchg
mov
and
test
mov
movsb
mov
sbb
jl
sbb
jne
jecxz
cmpl
dec
mov
adc
or
movsl
movsl
xlat
sub
xchg
and
xchg
cli
pusha
and
xchg
cltd
add
push
cs
mov
add
cli
jl
xchg
cwtl
scas
xor
movsl
ret
int3
dec
lahf
icebp
fstp
test
push
cmpsb
out
jp
mov
jle
divl
sub
jg
nop
inc
out
out
fildl
cld
jecxz
lods
xlat
dec
push
roll
cmp
pop
outsl
sub
cli
jp
stos
mov
dec
inc
jmp
jp
push
jg
mov
in
mov
push
sbb
dec
mov
enter
imul
cmp
mov
jo
call
pop
rclb
cltd
pop
or
add
pop
pop
aas
mov
jg
jg
inc
test
fisttps
lret
xchg
xor
cmp
lret
pop
jns
cmp
mov
mov
aad
lahf
push
bound
mov
inc
das
cmpsl
push
sbb
lock
mov
cmc
inc
sti
xor
lds
xor
call
xchg
call
or
dec
mov
mov
adc
mov
sbb
lea
push
das
add
arpl
jno
pusha
dec
lahf
ret
sbb
icebp
dec
mov
stos
or
ret
inc
xor
faddl
xchg
jae
xor
cmp
cmpsl
push
fcomps
shrl
xor
sarb
jmp
dec
popf
les
sbb
sub
mov
lcall
rcl
mov
xor
pop
mov
jb
out
sarb
ret
mov
mov
pop
mov
dec
out
push
cld
push
cmpsb
movsl
aaa
daa
or
mov
mov
test
push
pop
add
aad
nop
mov
ror
xor
sbb
fiadds
imul
pop
fdivrl
aaa
in
lods
das
push
fwait
daa
stos
pop
mov
pop
inc
dec
xchg
js
iret
sub
mov
push
mov
pop
xchg
mov
lcall
repz
sarl
rcrl
sti
sbb
cmp
push
pop
addr16
xor
add
fs
jo
xchg
lahf
insl
jg
xor
ret
jp
mov
ss
sub
push
cmp
das
lcall
cmc
ret
xor
das
add
jae,pn
loope
loopne
jne
cmp
mov
sub
dec
adc
adc
lea
nop
into
pushf
mov
pop
popa
push
pop
jmp
jle
js
aam
mov
add
push
pop
add
lahf
jbe
leave
imul
push
scas
ret
lahf
xor
and
sbb
jp
arpl
rol
dec
and
pop
test
jnp
cmp
xor
mov
jmp
imul
shrl
mov
xor
jg
pop
add
mov
mov
xchg
out
ret
fistl
mov
popa
dec
jl
xchg
xchg
shr
fildl
cmpsl
js
sub
xchg
mov
xor
adc
lret
push
mov
mov
loope
push
addr16
popa
icebp
sbb
sti
enter
mov
out
or
scas
add
loop
data16
std
shr
sbbl
xchg
sbb
je
ss
arpl
rorb
mov
xchg
pop
int3
idivb
add
push
test
and
mov
mov
push
rcr
pop
inc
js
imul
inc
scas
or
iret
jnp
cltd
es
adcl
or
xchg
nop
adc
clc
dec
bound
scas
repnz
sbb
stos
or
xchg
and
cmp
push
cmp
ljmp
dec
ds
xlat
inc
pop
lods
js
mov
repnz
mov
orb
aaa
or
pop
sbb
lods
outsl
ret
ljmp
pop
lcall
inc
jl
adc
mov
subb
add
lahf
ljmp
pop
add
jne
cmpsb
add
jmp
mov
inc
arpl
inc
xchg
cld
fstpl
sbb
daa
je
pop
inc
cmp
sub
cmp
daa
icebp
cs
stc
ja
jmp
pop
jbe
jnp
jg
ds
pushf
gs
add
out
cmp
xor
enter
imul
sub
adc
mov
inc
mov
push
adc
inc
pop
clts
aas
xchg
hlt
pop
pushf
imul
es
out
jg
sti
hlt
push
out
or
icebp
jl
dec
insl
call
adc
xor
adcl
jne
loope
sbb
add
dec
mov
dec
push
mov
inc
ret
sbbb
inc
cmp
and
pop
das
stos
pop
jl
orb
aad
mov
mov
jnp
jg
or
push
dec
xor
pop
inc
pop
xchg
xchg
sbb
lcall
inc
sbb
pop
in
jns
sbb
xchg
cld
push
sub
jg
inc
mov
lock
mov
add
cli
or
mov
xor
pop
mov
sbb
cmpsl
sub
fidivl
dec
int3
dec
pop
adc
pusha
bound
jp
jg
test
jle
mov
gs
mov
cli
jo
mov
rolb
or
push
inc
fcoms
lea
test
inc
scas
mov
cwtl
int3
push
in
xchg
mov
jnp
fimull
idivb
fs
and
fisubrs
lock
push
sbb
inc
xchg
push
cmp
outsl
sti
fsubrs
sub
push
pop
bnd
adc
popf
inc
jmp
push
insb
loope
adc
pop
add
push
xlat
or
and
sahf
jg
sub
and
imul
dec
test
stos
lret
imull
lcall
rclb
out
test
pop
cmp
aaa
and
popa
cmpsl
call
push
pop
pop
adc
mov
jge
je
pop
lock
adc
leave
or
int3
xor
mov
les
and
jge
xlat
mov
popf
cmp
lret
mov
into
jmp
push
or
inc
inc
aas
pusha
cmpsl
dec
sarl
add
imul
sbb
in
lods
sbb
jecxz
aas
cbtw
movsl
or
cmp
mov
dec
adc
cltd
mov
mov
loopne
sahf
cs
in
icebp
inc
stos
and
sub
lahf
inc
loope
and
pop
jnp
pop
xor
mov
mov
push
enter
pop
imul
xchg
push
mov
aam
rcrl
xchg
fld
mov
dec
cmp
adc
inc
inc
fnstenv
pop
cmp
push
imul
pop
jecxz
gs
or
test
xor
lods
imul
jnp
test
fisttpl
mov
lret
ror
and
rorb
or
push
gs
shlb
sbb
or
cld
dec
bound
repnz
addr16
push
in
sub
pop
cmpsl
cmp
pop
inc
jp
sbb
addr16
or
aam
jns
aad
jns
cmp
xor
mov
fsubp
fmuls
push
inc
test
stos
adc
in
daa
sub
mov
scas
lods
ds
shll
mov
fcomps
repnz
cmp
stc
fcoms
stc
fistpll
mov
lret
sti
test
rorb
pop
repz
shlb
xor
mov
sub
popa
pushf
scas
xchg
cmp
cltd
fldcw
test
js
xor
scas
bound
lds
push
fldcw
dec
stc
fdivs
scas
js
sub
inc
cld
jno
mov
inc
aas
loopne
loope
mov
mov
inc
fsubrp
xorb
idivl
lea
fiadds
sub
lret
test
xor
xor
sub
fsub
popf
in
push
mov
dec
cld
or
std
mov
fistl
filds
xor
cmp
incb
sahf
push
push
xor
pop
jg
inc
fbstp
leave
jmp
inc
shrl
mov
sbb
and
mov
push
dec
aaa
lcall
imul
sub
xor
daa
lea
mov
jae
je
pop
jl
adc
lods
ret
add
adc
rclb
mov
cmpl
pop
xor
mov
or
mov
ret
push
leave
es
jbe
icebp
lds
rcl
mov
mov
xchg
mov
sbb
jo
movsl
add
cli
and
xor
outsl
and
mov
andb
pop
out
mov
pop
test
mov
pop
test
into
and
xor
das
mov
add
jnp
push
repnz
push
std
int
sbbl
call
cli
lods
xor
mov
aas
mov
adc
jmp
dec
bound
in
adc
sub
dec
fwait
xor
inc
and
cld
repnz
pop
pop
lock
icebp
je,pn
aam
push
pop
scas
mov
in
das
popa
rorb
fimuls
mov
add
push
lea
into
out
popf
adc
in
test
push
pop
add
loopne
je
sahf
pop
sub
dec
inc
adc
ljmp
push
cmp
add
pusha
fstps
cmpsl
sbb
js
ret
push
daa
out
push
xchg
mov
nop
insb
add
rclb
lods
xchg
dec
adc
ja
pop
dec
sahf
sub
sbb
and
mov
mov
lea
cmp
lret
mov
enter
faddp
or
adc
xor
pushf
pop
hlt
xchg
pushf
pop
mov
lahf
fistpll
rcrb
push
mov
mov
push
cltd
dec
cmp
js
movsl
xchg
es
sub
sahf
shl
inc
push
mov
cld
out
pop
test
test
pop
mov
push
pusha
rcrl
test
test
mov
sbb
std
inc
xchg
popa
push
ja
sub
jns
push
insb
mov
push
mov
imul
scas
cmp
in
arpl
les
push
nop
fsubp
xbegin
int
fdivl
das
dec
add
test
arpl
out
pop
sub
mov
inc
into
sub
or
pop
mov
addr16
inc
out
mov
xor
add
into
lcall
repz
jnp
sub
ljmp
pushf
les
jb
add
fcoms
aad
ret
in
pop
and
push
xor
adc
jb
pop
or
stos
mov
cmp
js
adc
rcrl
jnp
arpl
mov
cli
pop
xchg
add
dec
and
lret
jecxz
lret
insb
test
jo
pushf
xchg
adc
inc
stos
fisttps
cmp
dec
call
dec
sbb
jbe
ja
xchg
mov
xchg
loopne
adc
in
sub
nop
movsl
mov
jns
mov
mov
iret
sub
je
cmp
ficomps
inc
sub
in
and
push
sub
inc
push
std
mov
test
add
xor
and
daa
movsb
cmc
cmp
in
imul
ret
push
push
sahf
xchg
add
cmp
mov
xor
adc
adc
fmuls
iret
scas
leave
xor
cmc
lods
adc
or
mov
xor
arpl
dec
nop
ss
cld
cmp
push
sti
cmp
lcall
repnz
mov
or
dec
sbb
jne
scas
cmpsb
sbb
not
inc
add
push
mov
fcmovnu
mov
jae
idivb
sbb
lods
std
sbb
mov
fnstsw
in
scas
or
int3
aam
inc
lods
xchg
inc
sub
dec
daa
fidivl
les
aad
icebp
xchg
ficoms
sub
push
fcmovnu
pushf
mov
mov
adc
mov
call
daa
subb
add
es
mov
sub
pusha
xchg
mov
jge
sbb
out
inc
mov
dec
aad
jns
mov
ss
cmp
push
dec
fcompl
xchg
jno
cmp
jns
mov
pop
js
test
xor
das
sub
sub
add
sbb
nop
dec
jle
pop
fistpll
mov
pop
subb
push
in
pop
fwait
or
push
xchg
loope
sbb
nop
roll
push
lock
aaa
jbe
aad
cmpsl
cmp
out
enter
xor
jl
or
dec
pusha
sar
aam
stos
insl
and
rolb
adc
lds
nop
or
jbe
aas
mov
test
stos
outsb
outsl
xchg
hlt
repnz
data16
fs
data16
popf
mov
call
call
movsl
popa
mov
outsb
xchg
cmp
cmp
mov
mov
test
movb
call
xor
js
mov
scas
scas
adc
call
out
adc
std
sbbb
cli
mov
and
jmp
fcomip
leave
je
cmp
pop
xchg
leave
adc
mov
mov
loope
push
add
xor
test
adc
fsubs
fldln2
mov
xchg
cmp
mov
xchg
dec
rorb
ds
cwtl
push
leave
stos
sub
mov
add
cld
popa
push
lret
sbb
fld
sbb
shll
mov
cmp
aam
add
sub
inc
or
mov
pop
jb
icebp
test
xlat
inc
out
adc
subl
sbb
inc
nop
out
adc
data16
jge
mov
fcmove
adc
jo
pop
push
popf
in
shrb
cmovge
imul
cs
loopne
push
bound
and
ret
mov
push
test
jo
repz
xchg
int3
mov
or
mov
jae
or
mov
popf
dec
and
sbb
ret
rcl
mov
in
jg
out
imul
inc
fisttpl
repnz
push
mov
sub
imul
int
ja
loop
nop
mov
fisttps
mov
mov
fs
xlat
mov
in
jecxz
data16
out
sbb
mov
inc
jl
pop
push
mov
sbb
xchg
mov
and
pop
mov
pushl
rol
lahf
fdivrs
cmp
dec
daa
mov
daa
outsb
adc
pushf
add
mov
cld
xchg
push
cmp
and
cmp
mov
or
ret
fcmovbe
jbe
lds
mov
mov
mul
ljmp
cltd
push
sub
mov
pop
pop
out
cmp
std
lcall
into
fwait
std
popa
adc
push
std
lcall
jo,pn
icebp
int
das
insb
divb
negl
pop
bound
jp
push
std
addl
int3
jo
inc
into
rcll
push
sbb
mov
cwtl
sbb
add
inc
pop
add
add
mov
dec
loop
pop
push
repz
nop
hlt
call
inc
call
xchg
xchg
lock
push
ret
mov
imul
pop
call
fdivl
orl
mov
mov
pop
fistl
pop
push
xchg
es
fdivrl
mov
mov
xor
outsl
jl
mov
addr16
aaa
xor
push
push
ret
adc
mov
addr16
inc
cmp
cs
jl
dec
repnz
jno
mov
insl
lds
jns
popl
aas
loop
ficoms
mov
inc
pop
sti
pop
iret
jg
or
dec
inc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
mov
xlat
lea
sub
and
add
push
pop
add
sub
sbb
adc
mov
test
mov
in
loop
mov
push
mov
push
je
aad
fimull
stos
lods
popa
loopne
js
push
pop
jge
inc
mov
push
jmp
jnp
lods
icebp
enter
repz
pop
mov
xlat
push
cmp
pushf
jge
pop
pop
negb
xor
ljmp
rcr
in
clc
inc
pop
mov
test
jg
jecxz
insb
into
pop
xor
inc
jp
jl
call
imul
jo
inc
cmp
je
xor
adc
sbb
push
in
cmp
insb
imul
and
pushf
mov
xchg
ret
pop
dec
and
inc
sbb
adc
lds
loopne
add
jo
cmp
out
fwait
mov
int3
dec
cltd
sbb
push
aas
adc
mov
mov
data16
push
sbb
test
jbe,pn
pusha
icebp
stos
and
gs
mov
call
cld
stc
mov
call
mov
nop
int
add
clc
mov
mov
push
hlt
sahf
add
add
push
imul
cmp
sti
add
mov
adc
lea
mov
decb
ds
orl
fdivl
nop
in
sbb
add
mov
das
sarb
mov
cltd
rclb
or
loope
sub
and
in
dec
fnstenv
push
lea
mov
lea
sbb
fstl
gs
push
mov
push
sbb
pop
mov
outsl
rolb
add
inc
and
inc
jns
testb
nop
lods
das
push
sub
stc
xor
cmp
mov
sbb
nop
dec
fcmovnu
fisttps
mov
xor
sub
mov
mov
lret
or
xchg
daa
aas
xchg
jge
std
push
ret
dec
fstl
fldt
pop
mov
call
outsl
pop
lea
pop
cld
dec
mov
ret
mov
or
inc
adcl
dec
xchg
sbb
xchg
add
ja
repnz
push
stos
out
mov
cli
jge
test
xor
pop
enter
jae
clc
xchg
std
mov
inc
cmp
js
f2xm1
int
fwait
xorb
js
inc
lret
dec
mov
ret
fbstp
xor
or
and
adc
jbe
xchg
add
das
enter
jns
xor
mov
mov
out
fcomps
xor
fwait
pop
movsl
xlat
sbb
xchg
sbb
mov
jp
mov
sbb
inc
incb
jecxz
sarl
adc
sbb
scas
or
stc
xchg
push
nop
in
cmc
xchg
inc
sub
jae
jns
outsl
filds
enter
mov
pop
jg
sub
push
and
hlt
stos
aad
les
pop
mov
out
sub
stos
xor
sbb
shll
scas
rcrl
and
dec
outsb
pop
or
jae
and
push
xchg
xor
pushf
aam
mov
add
jmp
aad
imul
neg
clc
int3
xor
ss
mov
push
sub
insl
lods
ror
jp
pop
mov
sbb
mov
test
xor
stos
test
iret
or
and
cmpb
mov
mov
insb
mov
xchg
out
jmp
xchg
dec
xchg
pop
and
pop
dec
fisubs
sbb
flds
sti
xor
xchg
and
xchg
outsb
lds
lcall
cmpsl
mov
daa
inc
push
mov
lahf
pop
rol
nop
in
pushf
mov
xor
lock
ljmp
ret
inc
popa
fwait
popf
and
inc
ljmp
das
dec
out
lret
js
aaa
push
cs
pop
fisttpll
je
xchg
out
jle
insb
xchg
push
pop
xchg
add
lods
dec
mov
add
pop
cli
cltd
sub
inc
mov
mov
mov
xor
push
icebp
ljmp
aad
lret
or
cltd
out
and
jmp
cmpsb
add
std
test
cmp
std
cld
push
xchg
mov
ret
in
pop
ss
outsl
sbb
loopne
push
call
jbe
sub
inc
rorb
xchg
out
dec
sub
dec
push
add
inc
xchg
clc
add
mov
popa
pop
aas
test
mov
push
sbb
and
pop
or
cmp
aas
pop
fs
xor
sahf
mov
adc
xchg
int
out
sbb
lods
push
mov
rclb
mov
and
inc
mov
xchg
push
or
dec
push
aam
out
test
dec
mov
add
ret
cli
fldcw
pop
mov
sub
cmp
jbe
add
es
repz
pop
outsl
out
add
lea
adc
sub
jge
popf
repnz
jbe
sbb
or
jae
fildll
jecxz
xchg
out
inc
mov
and
jmp
dec
inc
movsb
pop
int3
or
and
jne
stos
push
mov
stos
and
mov
xchg
cmpsl
scas
mov
jnp
adc
icebp
xor
add
add
cmp
rolb
and
pushf
movsl
out
int3
pop
in
lock
test
push
inc
push
insb
mov
xchg
cmpsl
into
and
pop
add
pop
movsl
pop
test
nop
mov
jno
jae
xchg
test
xchg
sbb
jns
movsl
mov
inc
adc
cli
push
cvtps2pd
add
popa
cmpb
pop
xchg
jo
daa
xchg
rcll
test
call
in
jo
mov
out
adc
or
mov
nop
pop
jg
or
xlat
arpl
sbb
push
fcomp
sbb
sub
repz
mov
iret
ss
mov
ret
int
repz
cmp
psllw
repz
mov
jmp
xor
out
or
in
jb
inc
sub
add
jmp
and
jns
pop
stc
inc
cltd
sbb
lret
or
pop
sbb
sub
xchg
lock
lods
addl
arpl
aas
mov
xor
lahf
loope
lods
adc
fdivrs
add
sbb
popf
out
sti
cs
push
lret
test
add
jg
stos
mov
out
pop
adc
add
pop
add
insl
or
es
mov
xor
and
xchg
xchg
test
or
in
sbb
mov
data16
adc
clc
mov
xchg
inc
mov
or
pop
adc
and
lcall
popf
test
roll
sub
cmp
insb
mov
imul
xchg
fst
sub
in
cmc
insl
fadds
push
popf
int
lds
and
icebp
xchg
aad
sub
addps
out
pop
pop
jb
lods
or
pop
xor
inc
rclb
and
and
adc
inc
cwtl
push
int3
or
mov
into
out
gs
loopne
std
pusha
or
xor
sbb
test
sti
adc
pop
jg
mov
roll
add
dec
ja
xchg
icebp
outsb
cmp
pop
test
cli
cmpsb
outsl
sbb
and
push
pop
in
out
pop
je
mov
int3
test
xor
adc
xor
mov
in
std
mov
aad
fwait
xlat
das
jge
test
pop
pop
ret
and
cmp
aam
jae
mov
dec
push
je
push
in
test
clc
sahf
mov
aad
sbb
jns
in
sub
popf
jl
mov
add
cmpl
mov
pop
dec
sarl
mov
inc
or
inc
xchg
adc
ja
mov
out
shr
dec
cmp
cmp
xchg
dec
cwtl
or
repz
mov
xor
out
add
sub
xchg
neg
mov
dec
ret
mov
push
cmp
repnz
sar
xor
aaa
shrb
hlt
andl
xor
pop
or
mov
lds
sub
shl
add
ljmp
mov
shrb
and
xchg
inc
pop
lds
cwtl
inc
and
enter
sarl
jbe
lcall
and
inc
dec
test
push
push
cmp
pusha
in
xlat
jle
in
xchg
sub
adc
and
sub
adc
int3
xchg
ds
or
push
je
mov
mov
out
dec
xlat
dec
push
dec
ror
div
and
xchg
and
dec
push
pop
data16
pushf
rcl
out
add
xchg
ds
ja
test
out
ljmp
bound
iret
test
xchg
hlt
inc
test
or
mov
cmp
setbe
and
add
test
xchg
jns
and
ret
test
jmp
sub
jo
lea
push
push
ret
lret
inc
insb
jae
pop
mov
mov
add
adc
mov
xchg
addr16
or
mov
les
push
mov
cmp
dec
out
add
push
push
mov
xchg
inc
loopne
inc
adc
pop
aad
push
out
adc
pop
faddl
test
int
jne
popl
mov
mov
xchg
mov
mov
in
out
sub
jb
lahf
sarb
sub
dec
fcmovnbe
fiadds
jns
xor
inc
bound
mov
scas
data16
cwtl
cli
jne
imulb
out
jae
add
shrl
jle
stos
lret
pushf
mov
bound
sbb
outsl
cmp
mov
cmp
mov
mov
iret
jle
mov
push
lahf
adc
jg
loope
inc
xchg
insb
ljmp
mov
mov
or
xchg
pop
test
mov
in
test
mov
adc
in
push
lcall
rclb
ss
call
repz
add
or
xor
sub
loopne
in
arpl
mov
add
mov
and
xchg
cltd
or
jnp
cli
pop
push
dec
or
push
out
rcl
icebp
mov
and
jmp
jg
std
mov
xchg
jp
js
bound
jne
xchg
inc
loopne
in
push
push
dec
lods
mov
cmp
mov
xor
xchg
cmpsl
push
add
sbb
sbb
sbb
jp
inc
jp
add
cmp
mov
addr16
push
add
add
jmp
xor
lods
or
je
stos
push
clc
scas
xchg
mov
inc
jle
icebp
mov
insb
fwait
repnz
mov
sar
or
testl
dec
cmp
movsl
inc
pop
insb
sbb
fisubs
aam
and
rcrb
sbb
test
mov
push
test
ja
sbb
xor
andl
cmpsb
mov
xchg
xor
adc
dec
dec
mov
pop
pop
fs
das
xlat
jge
add
and
popa
rolb
adc
fmuls
mov
and
mov
jmp
shlb
cltd
data16
popf
mov
xor
xor
and
dec
lock
out
data16
lds
ljmp
xor
pop
jno
mov
or
fcomi
push
int
adc
adc
fs
jae
sub
mov
jns
std
aas
mov
xchg
sbb
fucomp
cmp
mov
mov
in
pop
push
je
push
sub
xchg
je
mov
bound
jns
es
cwtl
xor
inc
push
inc
call
lcall
xchg
inc
push
add
or
std
sbb
iret
fnstcw
adc
into
pushf
ffreep
sbbb
cmc
clc
cmpsl
mov
aas
mov
cmp
lret
aad
and
nop
sarl
mov
or
aad
paddd
es
sarb
les
shll
pop
inc
out
fldl
jbe
pop
dec
pop
dec
sbb
sbb
mov
fiadds
cmp
add
inc
add
mov
lcall
push
sbb
mov
cmp
mov
out
adc
mov
fimull
lcall
push
shr
mov
xor
mull
pop
dec
xor
mov
adc
in
mov
int
pusha
jns
aas
mov
test
adc
push
or
jbe
jno
imul
mov
mov
dec
fcom
jecxz
mov
jecxz
sub
sbb
out
ljmp
jnp
add
je
out
cmp
repnz
mov
adc
push
pop
add
xchg
hlt
xor
ss
popf
inc
into
movsb
imul
inc
mov
xor
nopl
push
jl
lds
arpl
sbbl
mov
inc
mov
imul
ja
imul
cmp
mov
xor
dec
xchg
fucomip
cltd
mov
int3
fsubs
outsl
xchg
push
mov
sbb
mov
loop
lds
inc
and
push
fldt
lock
sahf
and
shl
jns
pop
adc
adc
and
mov
cs
xchg
cli
jge
and
in
imul
xor
push
adc
mov
icebp
sub
add
and
push
arpl
xchg
fiadds
push
sbb
cli
js
pop
cld
in
stos
enter
sbb
leave
inc
enter
bound
inc
andl
adc
adcl
mov
fstpt
xchg
mov
fsts
mov
dec
lcall
mov
sbb
lret
sub
xchg
mov
addb
cwtl
test
push
mov
test
pop
test
add
imul
xchg
sbb
popa
push
out
sub
push
in
test
aas
mov
jmp
test
ds
out
push
sbb
xor
int3
pop
mov
iret
push
arpl
mov
gs
mov
cwtl
das
rclb
adc
adc
add
add
xchg
ss
sbb
push
mov
scas
fsubr
pop
cwtl
nop
neg
mov
xlat
xor
inc
xchg
nop
sbb
movsl
adc
or
adcl
cwtl
mov
aaa
fisubrl
mov
and
cwtl
mov
mov
lods
dec
dec
stos
loop
in
jle
scas
cmp
cmpsb
test
sub
xor
repz
mov
pop
inc
dec
imul
movsl
mov
push
dec
arpl
imul
fsubrl
inc
sub
xchg
lcall
push
inc
inc
push
hlt
xor
outsl
push
sbb
arpl
outsb
imul
std
orl
push
insb
pop
dec
push
mov
push
inc
mov
mov
movsl
or
rcl
out
add
rcl
gs
mov
mov
adc
repnz
ljmp
int3
xchg
pop
xchg
dec
fs
lahf
fcmovbe
ljmp
nop
xlat
sbb
mov
xchg
jns
mov
pop
shrl
in
mov
pop
lret
inc
aad
std
mov
nopl
cld
popf
scas
popf
js
imul
mov
jne
mov
dec
inc
jp
orb
jg
jno
mov
pushf
stos
mov
pop
ret
xchg
inc
push
cltd
je
icebp
pop
out
mov
fstp
mov
sbb
sub
mov
sub
out
mov
mov
and
sti
push
addr16
jg
aaa
lds
and
sbb
pusha
adc
arpl
xchg
push
lods
jno
mov
popa
and
inc
ret
insb
cmpsb
stc
clc
push
test
sbb
test
mov
xchg
sti
jp
data16
push
mov
aam
mov
mov
mov
xor
pop
add
into
mov
or
push
jns
in
pop
mov
inc
mov
xchg
aas
rol
and
je
push
shll
dec
or
lods
mov
mov
and
rcll
icebp
test
pop
push
lret
imul
cwtl
mov
add
roll
mov
xchg
ds
fs
icebp
ljmp
and
mov
sbb
push
cld
sbb
pop
es
fldt
pop
lods
mov
leave
or
adc
inc
mov
mov
xor
faddp
mov
mov
adc
leave
pop
mov
xlat
sub
jo
mov
inc
pop
xchg
sti
and
jle
fisttps
mov
xchg
push
pop
rcl
xor
mov
push
test
pop
adc
lods
mov
adc
push
jecxz
push
out
xor
ja
data16
popa
xchg
fimuls
mov
dec
dec
or
xorb
sti
jnp
jmp
cld
jg
mov
or
push
mov
push
movsb
js
mov
mov
jge
inc
scas
dec
orb
push
test
mov
mov
pop
dec
pop
jnp
xchg
add
cmpsl
adc
loope
sbb
insb
mov
loopne
push
dec
push
pusha
testl
scas
sbb
sub
xchg
aad
loop
dec
inc
xchg
in
hlt
imul
push
cli
push
mov
add
mov
imul
loope
cmp
into
jae
inc
loope
sub
int3
xchg
jmp
cmp
pusha
xor
std
jo
fwait
inc
mov
decl
mov
mov
add
cmp
mov
lods
popf
scas
out
lods
or
jl
or
cwtl
inc
push
gs
ficoms
scas
aam
jno
inc
push
cmp
lock
ljmp
inc
leave
mov
out
adc
mov
pop
loope
bound
in
es
jecxz
mov
xchg
insb
pop
push
cmpsb
xor
psrad
push
gs
out
loop
rcrl
pop
or
test
inc
dec
inc
mov
mov
inc
sbb
lea
dec
mov
inc
add
leave
js
fdivs
or
xor
mov
mov
mov
repz
bound
jne
call
mov
scas
xor
je
bound
xlat
pusha
mov
sbb
mov
adc
sarl
jl
pop
sub
mov
jnp
cld
lahf
loop
call
ss
xchg
movsl
out
pop
fs
cltd
es
dec
icebp
push
mov
mov
push
mov
jp
rcr
repz
push
std
mov
gs
cs
cwtl
sub
out
iret
add
movsb
mov
in
xlat
or
jle
into
xor
dec
mov
das
icebp
test
push
cmpsb
lret
imull
mov
dec
jne
cwtl
pop
jecxz
cmp
jne
clc
add
insl
cmp
stc
repz
outsb
fistpl
int
pop
sub
xchg
mov
mov
jns
sbb
mov
outsl
jmp
clc
jg
mov
push
cmp
pop
cmp
and
lret
xchg
inc
xor
pop
mov
dec
xchg
xchg
shll
add
add
andb
cld
push
and
sti
inc
and
add
pop
add
notb
rol
pop
pop
negl
jns
mov
or
hlt
xorb
push
std
sarb
shrb
inc
les
gs
sub
cmp
xchg
adc
jno
cmp
add
and
cmpsb
fbld
lret
jbe
mov
and
lods
in
cmpsb
add
inc
test
or
addr16
sbb
aaa
pop
popl
cwtl
cmovge
mov
xor
xchg
inc
sti
rcr
addb
addb
xchg
jl
pop
enter
jl
stos
xor
aad
xor
and
stos
addr16
mov
add
mov
pop
dec
cmpsb
cli
dec
dec
adc
dec
in
lock
cs
push
sbb
inc
mov
adc
in
push
scas
sbb
pop
mov
dec
rorl
mov
addr16
mov
out
and
mov
loopne
js
add
pop
ret
push
or
bound
jns
jbe
mov
mov
jg
fidivl
mov
test
lods
into
mov
jo
mov
movsb
ja
movsl
push
and
mov
and
into
mov
xor
jbe
fnstsw
pop
loopne
into
insb
sub
push
mov
cmpsl
scas
jle
pop
inc
fisttpll
mov
pop
cmp
xor
pop
out
jp
aas
setno
inc
repz
adc
xchg
arpl
sarl
call
mov
sub
andl
pusha
ret
push
in
jl
or
ret
add
sbb
inc
ficoml
xor
lea
inc
push
ficomps
sub
inc
ljmp
cmp
test
loopne
adc
xchg
mov
pop
sub
aas
stos
mov
aas
sub
int3
or
bound
cmpsl
xlat
xchg
insl
ficompl
push
or
jg
into
popa
dec
mov
adc
sub
jg
add
xchg
cltd
pop
ja
lret
movsb
addl
clc
adc
pop
and
loope
add
inc
mov
out
jno
mov
cld
pop
decb
push
and
xchg
add
add
lcall
fwait
in
jo
mov
cmp
adc
dec
cmp
adc
xor
pop
fstl
mov
and
std
jno
int3
cmp
ds
dec
lock
push
xchg
js
cs
jmp
je
ret
fildll
and
mov
mov
cmp
jb
mov
jo
dec
sbb
pop
es
jns
sub
in
fwait
jmp
shrb
jmp
iret
mov
jae
jae
and
out
pop
jp
push
adc
inc
lea
mov
lods
ds
pop
or
and
sub
jae
adc
mov
push
push
je
mov
das
mov
mov
or
or
dec
push
rcll
mov
xchg
adc
aad
out
jp
idiv
inc
and
xor
add
cli
and
sarl
arpl
stos
mov
or
fistpll
cltd
pop
call
rolb
xchg
adc
mov
aas
adc
outsl
mov
xor
imul
iret
iret
xchg
pushf
into
mov
clc
sub
jnp
negl
cltd
cmp
add
pop
or
je
push
inc
movsb
and
fidivs
daa
lods
cwtl
xchg
xor
pop
and
adc
jg
xchg
pusha
cmpsl
xor
jecxz
lock
xor
repnz
mov
sti
xor
sbb
cmovg
jle
fidivl
add
call
inc
fisubl
xor
or
out
ja
mov
sahf
mov
pop
pop
push
jl
in
push
popa
ffreep
pop
cwtl
shll
push
inc
out
add
pop
out
inc
mov
dec
mov
pop
mov
test
mov
inc
inc
adc
cld
je
insl
sarb
add
popf
add
cmpl
lods
ljmp
inc
xor
mov
mov
pusha
jb
xchg
arpl
cltd
ret
jbe
lods
cwtl
lea
cltd
lcall
adc
imul
and
hlt
hlt
aas
arpl
jbe
jae
mov
loope
adc
add
sbbb
xor
sahf
sub
fisubs
cmpsl
lret
or
mov
add
mov
sbb
jb
mov
mov
mov
pop
out
xor
pop
dec
insl
rorb
into
int3
push
sub
inc
cmpsl
es
jp
fsts
fildll
es
xchg
xchg
sahf
add
mov
je
inc
adcl
inc
mov
cwtl
or
aad
iret
mov
ljmp
cmp
push
xchg
hlt
pusha
xor
push
insl
fwait
outsl
dec
addr16
adc
ss
adc
xchg
inc
jae
cmp
jl
xchg
outsl
mov
mov
xor
stc
jns
jl
cli
mov
jno
mov
dec
dec
sbbb
push
cwtl
int
outsl
xchg
orl
mov
test
pop
test
test
sub
xchg
subb
jae
popa
mov
dec
ss
mov
fs
inc
ds
jo
scas
shl
insl
mov
mov
int3
jns
aam
inc
jns
les
cltd
lcall
flds
pushf
js
clc
iret
cmovae
push
lea
mov
pop
jge
lret
mov
fnstenv
mov
pusha
inc
pop
sub
cmc
fldenv
and
stos
sbb
in
mov
inc
xor
cmpsb
lea
in
popa
pcmpgtw
sarb
bound
xchg
xor
inc
enter
iret
pop
sub
sti
push
ss
pop
push
mov
push
mov
sbb
sbb
mov
cmp
jae
dec
add
rorl
mov
cmp
cltd
sub
sti
sub
cmp
popl
fcomps
call
shr
imul
lahf
in
out
gs
fcmovb
test
mov
out
xchg
shlb
leave
dec
sbb
inc
push
mov
test
outsl
lds
jne
daa
lcall
imulb
pop
mov
idivl
movsl
insl
or
cli
leave
in
ss
stc
in
pop
adc
jecxz
sbb
jp
sbb
loope
jmp
ds
popa
cld
inc
inc
aas
sbb
sahf
mov
add
mov
jg
fists
aad
mov
push
pop
add
prefetch
or
inc
cmp
stc
cmp
push
ja
hlt
outsl
mov
fbstp
sahf
push
dec
in
movsl
mov
fcoms
inc
in
aas
adc
js
mov
insb
lahf
out
cwtl
dec
fwait
bound
stc
sbb
mov
dec
cli
mov
mov
jle
movsl
mov
inc
jne
loope
cmp
lret
mov
push
idivl
std
xchg
testb
xchg
push
mov
js
shrl
into
mov
xor
fildll
pushf
add
fimuls
push
dec
sub
jnp
dec
sahf
jg
inc
jge
data16
cltd
bswap
les
and
in
cwtl
fldenv
or
out
xchg
cmp
adc
imul
es
inc
mov
aas
ret
rcrl
push
out
pop
inc
ficomps
cmpsb
jno
repz
into
inc
sub
sub
orb
push
xor
dec
insb
cwtl
pop
or
cmp
mov
fcoms
pop
cltd
add
rolb
daa
jns
lds
bound
mov
lods
xor
add
cmp
data16
mov
in
dec
and
dec
sbb
bound
cld
xorb
and
xchg
and
dec
repz
mov
pop
call
dec
icebp
arpl
sub
arpl
sbb
jns
cmp
cmp
or
jge
or
and
loopne
inc
gs
into
jl
in
leave
lea
mov
or
add
pop
aam
jae
sub
popa
test
adcb
sbb
jns
dec
sbb
stc
test
sar
xchg
aaa
push
test
cmpsl
fadds
int
fnsave
push
add
sbbl
enter
fisubrl
xchg
xor
in
rcl
lock
fidivl
sti
mov
aaa
xor
fistpl
lcall
test
xlat
inc
xchg
daa
sbb
mov
test
inc
cmp
into
lahf
pop
mov
and
scas
add
ficompl
push
outsl
mov
enter
dec
mov
ret
pop
xchg
sar
es
xor
and
repnz
cmp
xor
or
cs
and
ficoms
gs
test
stos
pop
xor
outsb
nop
jnp
faddl
aam
sub
pop
test
xchg
cltd
shl
std
mov
fistpll
sub
mov
mov
icebp
test
push
adc
sub
mov
sarb
xor
outsl
push
ja
shll
push
punpcklwd
push
ret
inc
inc
jecxz
shrb
mov
stc
pop
adc
cld
js
cltd
int3
aad
adc
jae
sub
fisubrl
movd
xchg
fiadds
inc
addr16
mov
dec
ja
icebp
lock
pushf
gs
add
mov
into
inc
jl
sbb
cmp
mov
imul
lret
dec
aaa
xchg
call
mov
sbb
pop
sbb
loope
mov
enter
inc
fcomps
dec
push
jg
xchg
cmc
jge
enter
or
and
mov
test
cltd
and
test
jno
adc
inc
cli
mov
clc
xor
iret
sbb
cwtl
lock
sub
xchg
out
ja
fstpl
out
sub
mov
push
andb
enter
insb
test
mov
mov
notb
push
lcall
aam
into
pop
jno
jg
lcall
aaa
into
insl
lea
and
call
ds
lds
sbb
repnz
xor
test
out
pusha
jns
out
xor
leave
inc
add
or
or
xchg
nop
rorb
jae
jl
in
xchg
xor
aaa
mov
jne
or
loope
roll
fwait
cmpsb
sti
ss
fmuls
aaa
ljmp
iret
scas
jecxz
mov
or
inc
ja
jmp
jge
test
imul
int
dec
dec
test
int3
add
in
dec
sbb
xchg
sbb
outsb
and
mov
or
rsqrtps
add
das
and
gs
iret
lret
loopne
sub
inc
xchg
push
jns
lods
pop
jns
into
lods
pop
jmp
push
iret
fisttpl
adc
lods
pop
or
shl
lahf
dec
popa
cld
cmp
cli
cwtl
ficompl
bound
inc
in
lods
ror
dec
movsb
xchg
add
push
test
mov
daa
movsb
pop
and
popa
cmpsl
mov
fstps
sub
shl
rcll
dec
aaa
pop
cmp
mov
push
sbb
add
bound
mov
jmp
mov
mov
and
push
push
add
mov
xor
jp
add
push
jns
xor
or
inc
std
jp
ljmp
mov
xorl
and
in
mov
enter
cli
dec
rclb
add
xchg
jmp
popa
int
int
int
cmp
mov
call
fidivl
mov
xchg
fsubrl
push
push
xchg
mov
fcoms
inc
and
stos
fsincos
jge
sbb
cmpsl
loop
inc
sbb
popf
outsb
dec
mov
jb
in
aas
std
dec
pop
jg
sbb
sbb
push
dec
ficoms
pop
add
push
sub
adc
cli
xor
or
adc
loopne
loop
or
lods
xor
pop
test
mov
jo
lret
cli
std
xchg
jle
test
push
pop
push
push
adc
cs
iret
in
push
mov
lds
insl
sbb
mov
mov
cmp
jge
shlb
pop
aad
sub
push
push
hlt
leave
mov
adc
push
mov
mov
push
outsl
fwait
dec
neg
mov
sub
lcall
mov
sub
pop
dec
aaa
mov
pop
add
jp
or
jmp
int
dec
in
mov
cmpb
pusha
pop
in
xchg
jno
shl
ret
xchg
push
popl
lret
push
subb
pop
and
fisubrs
outsl
xor
adc
es
and
push
mov
mov
test
adc
pusha
jp
jp
fadd
cld
pop
loop
push
pushf
int3
pop
inc
scas
push
add
push
lea
sti
pop
lods
into
fisttpl
mov
mov
add
pop
add
aas
or
mov
mov
andl
jno
fwait
enter
pop
lret
push
push
sbb
and
mov
push
and
shll
jle
push
incb
imul
mov
lahf
or
scas
lds
das
imul
mov
fldcw
imul
inc
xor
or
cmp
fldl
mov
jno
mov
insl
sbb
ja
test
adc
inc
add
cmp
or
data16
insb
dec
movsl
je
push
in
or
xchg
int
dec
icebp
cmp
daa
add
jge
mov
pop
xchg
test
jnp
idivb
mov
imul
dec
jo
rcll
dec
xor
sbb
loope
mov
sbb
jbe
add
pop
sti
or
push
inc
sbb
cli
hlt
daa
dec
decb
add
mov
repnz
out
mov
aad
sub
hlt
jnp
out
dec
jecxz
cmp
or
aas
insl
cltd
inc
sbb
pop
adc
repz
negb
mov
pop
pop
mov
enter
sbb
aad
jge
lret
pop
pop
xchg
mov
inc
scas
xor
mov
out
mov
jl
je
push
xchg
ja
int3
sti
lock
push
xchg
rol
test
sahf
mov
inc
ficompl
push
aam
dec
int3
push
jnp
pop
mov
cmpsb
pop
out
outsl
dec
xchg
js
jg
cmp
sbb
adc
inc
iret
or
ret
rorl
das
xchg
negb
pop
or
xchg
orl
mov
in
pop
push
xchg
loope
sti
cs
lret
xchg
push
sub
repz
sbb
adc
movsb
or
into
fldcw
jbe
adc
pop
and
es
testb
jle
hlt
nop
pop
xor
sbb
nop
adcb
daa
cld
xchg
aam
sub
cmc
insb
pop
in
aad
mov
push
icebp
enter
add
jne
loop
flds
pop
jns
mov
add
jl
and
dec
fimull
lcall
rorb
mov
scas
sub
jno
cmpl
ficomps
sub
push
daa
sbb
and
fisubs
jnp
dec
xchg
inc
jp
dec
cmp
jmp
int
push
xchg
push
ljmp
stc
mov
cld
pop
stc
ficoml
push
sbb
rcrl
cmpsl
or
shl
jns
push
ffreep
std
jmp
mov
xchg
popa
pop
jmp
mov
pop
movl
inc
daa
inc
rorb
jp
out
cmc
mov
movsl
out
sub
or
movsl
cmc
jae
into
pop
test
xlat
pop
icebp
sahf
rolb
out
rcrb
push
xchg
mov
mov
add
ds
in
std
or
inc
mov
mov
ja
add
mov
pusha
mov
arpl
je
jnp
lahf
int
mov
push
arpl
in
lds
inc
push
lea
mov
test
push
out
jne
xor
mov
int3
mov
add
bound
popa
mov
pushf
filds
rorl
dec
gs
xchg
lret
in
pop
jl
clc
loope
xorb
mov
into
nop
cmp
adc
cmp
add
xor
lds
dec
dec
es
clc
mov
adc
sub
fsts
fwait
xchg
cmp
lahf
adc
pop
addr16
adc
inc
fs
addr16
mov
push
xor
mov
cltd
inc
imul
sub
jb
les
repnz
dec
add
adc
out
rcll
pop
jecxz
lods
arpl
rcr
das
adc
mov
inc
sti
stos
lds
movsb
cmp
movups
daa
insl
test
jge
scas
jbe
lds
icebp
stc
push
insl
pop
mov
lods
popf
xor
lea
mov
jle
sbb
mull
mov
fistpll
jbe
cmp
insl
cmp
nop
nop
fnstenv
mov
sub
or
add
lret
sub
aas
leave
push
repz
and
sbb
jns
adc
aas
rcr
sbb
xchg
push
jp
mov
pop
inc
fisubl
rcrl
shlb
pop
mov
xchg
cmovbe
test
imul
lock
jo
stc
mov
add
sub
push
inc
push
xor
test
stc
es
mov
or
aaa
addr16
enter
xchg
dec
mov
lret
fadd
push
jl
sti
dec
jecxz
mov
cmp
stc
sub
into
in
inc
mov
adcl
imul
push
push
push
add
stos
out
mov
push
cmpsl
fisttpll
cmp
negb
loopne
das
inc
lock
cmpsb
ret
and
inc
and
cmp
xor
pop
iret
sti
js
push
mov
cmp
test
or
shll
fimull
aam
mov
cmp
jns
in
aad
mov
ljmp
int3
imul
sub
stos
adc
icebp
pop
add
lcall
fnsave
jae
jp
and
adc
sar
jge
mov
inc
int3
cmp
cmp
jns
shrb
mov
or
dec
mov
test
cltd
mov
scas
mov
hlt
fistps
xchg
insb
nop
sub
pop
push
pop
jmp
cwtl
pop
data16
cli
popf
insl
inc
shll
pushf
rorb
repz
mov
sti
mov
hlt
dec
xchg
in
mov
jnp
add
mov
and
cmp
adc
shll
fimull
std
add
stos
hlt
jmp
mov
mov
loopne
adc
add
test
or
in
test
testb
icebp
or
sub
add
or
push
push
popa
inc
push
lock
outsl
pop
jnp
cmp
ja
push
mov
imul
mov
js
shlb
loope
sbb
ret
mov
ret
ret
mov
lret
fidivl
dec
ss
xchg
push
sbb
mov
jecxz
or
sub
dec
lahf
jmp
mov
inc
add
cwtl
and
add
adc
mov
push
adc
and
cmp
add
adc
add
add
in
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
sbb
sub
xor
cmp
ss
ss
ss
ss
aaa
imul
aaa
xorb
aaa
lcall
aaa
ret
aaa
shll
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
loope
out
hlt
cmp
or
add
add
dec
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
xor
inc
cmp
pop
cmp
add
or
add
push
xor
xor
jae
jns
test
mov
xor
xor
xor
xor
xor
xor
xor
addr16
xor
cmp
arpl
xchg
xchg
xor
mov
xor
pop
aaa
jb
jnp
test
mov
xchg
aaa
sahf
aaa
lods
aaa
mov
shll
aaa
into
aaa
call
cmp
cmp
cmp
cmp
cmp
pop
cmp
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
idivl
cmp
adc
and
daa
cmp
cmp
cmp
cmp
xchg
cmp
cmp
sub
cmp
jae
jle
xchg
movsl
cmp
lret
cmp
fidivrs
cmp
dec
ds
ds
ds
add
xor
xor
dec
xor
pop
xor
ja
xorl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xlat
xor
jno
jle
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
dec
cmp
lahf
movsl
loope,pt
jmp
clc
aas
add
add
add
add
or
adc
sbb
xor
inc
xor
pusha
xor
insb
xor
mov
lahf
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pusha
xor
xor
xor
xor
repnz
xor
xor
xor
xor
jl
dec
cmp
nop
ds
fstpt
add
add
add
add
xor
pushf
xor
xor
xor
xor
xchg
xor
scas
xor
int3
xor
sbb
daa
aaa
sub
xor
jbe
xchg
cwtl
cmp
cmp
in
cmp
cmp
cmp
push
cmp
push
cmp
cmp
sbb
add
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
xor
je
js
xorb
xor
lods
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
xor
inc
xor
pop
xor
xchg
xor
scas
xor
into
xor
in
xor
or
adc
sbb
sub
xor
ds
ss
ss
ss
jo
jnp
xchg
mov
xchg
ss
ss
fdivs
fbstp
in
in
divl
add
or
push
aaa
and
aaa
aas
aaa
inc
aaa
push
aaa
pop
aaa
data16
imul
aaa
xorl
aaa
mov
mov
aaa
aam
out
in
aaa
stc
aaa
or
push
cmp
sbb
and
sub
xor
cmp
cmp
data16
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
outsl
cmp
cmpl
mov
sarb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
bound
jle
test
xchg
cmp
cmp
sarb
fnstsw
out
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
cmp
jle
test
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
cmp
jno
ja
jg
test
add
add
cmp
xchg
xor
xor
xor
xor
xor
xor
xor
xor
jne
nop
xor
xor
xor
movsl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
ss
push
xor
jl
xchg
xor
xor
cmp
inc
aaa
push
aaa
pop
aaa
push
aaa
xorl
cltd
aaa
lahf
aaa
xor
test
lods
cmp
xor
aas
ds
ds
ds
jnp,pt
sahf
mov
rolb
add
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
add
add
add
cmp
cmp
cmp
cmp
cmp
inc
cmp
add
add
add
sbb
sbb
and
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
sub
pop
xor
je
lods
xor
sbb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
jo
add
add
add
mov
cmp
cmp
cmp
mov
add
in
ss
ss
ss
add
add
or
