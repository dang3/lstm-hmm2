push
mov
sub
xorl
push
movzwl
sub
mov
push
push
andl
call
test
movl
je
adcl
xor
jmp
push
push
xor
andl
inc
push
push
call
xorl
test
movl
je
xor
movl
jmp
sbbl
push
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
push
subl
push
movl
push
call
andl
test
jne
push
push
adcl
call
test
movl
jne
push
push
call
xorl
test
jne
addl
push
andl
push
addl
call
test
movl
jne
push
xorl
push
push
subl
call
notl
test
movl
jne
push
push
adcl
push
call
test
jne
xorl
push
andl
push
subl
call
subl
test
jne
push
push
andl
call
test
movl
jne
andl
push
sbbl
push
addl
call
test
movl
jne
push
andl
push
push
call
orl
test
jne
addl
push
andl
push
push
andl
call
xorl
test
jne
push
push
xorl
call
movl
test
movl
jne
subl
push
xorl
push
andl
call
test
movl
jne
subl
push
adcl
push
xorl
call
test
movl
jne
push
xorl
push
push
decl
call
test
movl
jne
push
push
adcl
push
sbbl
call
xorl
test
movl
jne
push
orl
push
call
test
movl
jne
andl
push
push
addl
call
adcl
test
jne
push
push
orl
call
test
jne
push
push
addl
push
call
subl
test
movl
jne
push
addl
push
push
xorl
call
movl
test
jne
push
push
call
andl
test
movl
jne
orl
push
push
negl
call
orl
test
movl
jne
subl
push
push
call
test
jne
xorl
push
push
sbbl
push
adcl
call
xorl
test
movl
jne
sbbl
push
push
xorl
push
addl
call
sbbl
test
jne
orl
push
push
adcl
call
test
jne
sbbl
push
adcl
push
xorl
call
test
movl
jne
addl
push
subl
push
xorl
call
addl
test
jne
xorl
push
notl
push
andl
push
call
test
jne
push
push
push
xorl
call
sbbl
test
movl
jne
movl
push
addl
push
call
test
jne
andl
push
xorl
push
call
subl
test
movl
jne
push
push
call
orl
test
jne
subl
push
adcl
push
push
andl
call
addl
test
movl
jne
addl
push
push
adcl
push
call
adcl
test
movl
jne
subl
push
push
subl
call
subl
test
movl
jne
adcl
push
adcl
push
call
orl
test
jne
subl
push
push
call
orl
test
movl
jne
push
push
push
orl
call
test
jne
push
movl
push
movl
push
call
test
movl
jne
movl
push
xorl
push
call
test
movl
jne
push
subl
push
subl
call
addl
test
movl
jne
subl
push
push
call
subl
test
movl
jne
sbbl
push
adcl
push
adcl
push
xorl
call
andl
test
jne
movl
push
xorl
push
xorl
push
andl
call
adcl
test
movl
jne
subl
push
addl
push
subl
call
xorl
test
jne
addl
push
push
adcl
call
test
jne
push
addl
push
call
orl
test
movl
jne
subl
push
push
andl
push
xorl
call
adcl
test
movl
jne
push
movl
push
push
call
addl
test
movl
jne
movl
push
subl
push
call
test
movl
jne
push
push
call
addl
test
jne
addl
push
subl
push
call
test
movl
jne
sbbl
push
xorl
push
addl
push
addl
call
movl
test
movl
jne
andl
push
push
push
call
sbbl
test
movl
jne
xorl
push
adcl
push
adcl
call
addl
test
movl
jne
adcl
push
adcl
push
call
test
movl
jne
adcl
push
xorl
push
subl
call
xorl
test
jne
push
adcl
push
push
andl
call
andl
test
jne
push
push
subl
push
call
test
jne
push
push
sbbl
call
test
movl
jne
subl
push
push
call
test
movl
jne
adcl
push
subl
push
andl
call
test
movl
jne
andl
push
orl
push
orl
push
adcl
call
andl
test
jne
orl
push
push
push
call
sbbl
test
movl
jne
sbbl
push
push
call
sbbl
test
movl
jne
sbbl
push
orl
push
call
test
movl
je
subl
xor
movl
jmp
or
movl
movzbl
add
mov
dec
mov
mov
mov
mov
sub
imul
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
sbbl
lea
mov
mov
and
mov
lea
mov
subl
mov
mov
orl
mov
mov
mov
adc
xor
mov
add
movl
mov
mov
mov
cmp
jne
xor
mov
mov
orl
mov
or
xor
and
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
sub
mov
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
xor
xor
add
mov
sub
mov
mov
sbb
mov
mov
orl
mov
mov
decl
mov
subl
mov
andl
mov
mov
addl
movl
adcl
mov
andl
xor
add
movl
jmp
add
mov
adcl
mov
xor
subl
lea
push
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
sub
mov
adcl
xor
lea
push
addl
mov
pushl
xorl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
xor
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
andl
mov
xor
mov
addl
xor
xor
andl
add
mov
negl
xor
lea
movl
mov
movl
cmp
movl
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
adcl
inc
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
movzwl
xor
mov
mov
sbb
push
mov
sbb
mov
mov
mov
add
xor
add
mov
subl
push
mov
add
movl
cmp
movl
je
inc
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
sbb
mov
xorl
xor
xorl
xor
addl
add
add
movl
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
jmp
jmp
iret
push
jae
lret
xchg
mov
add
xlat
pop
jp
adc
and
imul
xor
fsub
push
dec
imul
pusha
insl
pop
iret
pop
dec
and
jg
jo
jg
mov
fdivr
push
jg
in
cmp
mov
mov
mulps
fldl
push
cli
sbb
imul
adc
cmpsb
jmp
enter
cli
js
arpl
cwtl
pop
mov
repz
cmp
jae
fisubrl
push
jecxz
mov
mov
in
push
dec
or
repz
rolb
push
push
movsl
stc
push
fnstcw
xor
xor
aad
xchg
jmp
jo
movsl
in
jbe
mov
push
je
sbb
frstor
ret
dec
xorl
lret
lea
into
inc
dec
add
and
adc
push
lods
fwait
jno
pusha
idiv
or
stos
jecxz
js
dec
mov
iret
add
push
cmp
mov
and
cmp
xchg
ficoml
push
mov
in
push
inc
mov
push
mov
nop
xchg
mov
daa
test
push
sub
sub
add
or
addr16
in
push
add
int3
aad
pop
outsb
jnp
enter
lcall
int
decb
fsubrl
test
pop
sbb
mov
imul
push
sbb
mov
rcrb
out
pusha
mov
pop
leave
inc
pop
push
push
lcall
fs
add
loope
jge
pop
jg
int
and
cwtl
jge
shl
dec
dec
movsb
repnz
and
sbb
fsts
test
inc
jle
aam
icebp
in
sti
nop
fldl
js
and
jge
jno
movsb
mov
sub
fidivs
or
add
pusha
adc
adc
mov
pop
xor
cmpsl
fisubrs
jmp
pop
mov
pop
daa
push
add
pop
scas
push
sub
es
add
or
mov
neg
push
scas
push
cltd
push
cmpsb
inc
push
mov
jbe
pusha
pop
addb
and
insb
stc
repnz
pop
sarb
addr16
and
stos
in
imul
cmp
mov
adc
pusha
push
leave
dec
frstor
rcl
ljmp
xchg
sbb
adc
mov
mov
add
fists
inc
dec
xchg
outsl
jmp
frstor
addr16
push
dec
subl
lock
mov
dec
sub
sahf
imul
pop
bound
stos
dec
mov
in
push
adc
imul
mov
mov
jne
out
mov
lret
flds
xchg
and
fisttpl
lock
jae
rcl
push
sub
outsb
arpl
dec
or
and
and
leave
push
dec
cmp
inc
push
xchg
push
inc
cmp
sbb
xor
cld
dec
dec
popf
data16
fistpl
data16
mov
cmpsl
rorb
dec
inc
jnp
mov
pushf
xorb
icebp
rcll
int
sbb
cmpsb
sti
or
xchg
xchg
nop
jl
pop
sub
add
popa
sub
mov
pop
out
jb
dec
add
inc
cmc
mov
dec
sub
fwait
adc
addl
cmovbe
cltd
pushf
jnp
fimull
fnstcw
jl
sbb
and
inc
add
sub
lds
cmp
and
cmc
cwtl
jno
sub
jbe
and
pop
adc
ret
fcmovnbe
xor
cmc
pop
out
fmul
cltd
fs
imul
xchg
movsb
std
and
inc
sub
jb
dec
fists
jo
repz
sarb
gs
mov
pop
inc
shrl
idiv
add
pusha
icebp
mov
es
ss
jae
filds
mov
pop
mov
push
lret
sub
adc
sahf
test
cmp
sub
repz
outsl
push
mov
dec
adc
in
inc
push
aaa
rcl
xor
sub
fs
mov
push
jbe
adcl
mov
jge
inc
and
lret
xchg
push
inc
xchg
dec
push
xchg
mov
lea
sub
hlt
sahf
xchg
out
jbe
sbb
testb
xchg
cwtl
mov
in
mov
mov
cmp
popf
xor
lods
adc
std
loopne
jnp
mov
negl
mov
js
arpl
jno
xor
mov
scas
out
xchg
ja
subb
pop
and
lahf
cmpsb
bound
hlt
adcl
xchg
push
test
adc
adc
stos
push
testb
mull
rclb
or
in
out
xchg
push
mov
inc
jecxz
add
ljmp
fcmovnb
in
mov
clc
in
mov
jle
cmp
jb
sbb
xor
mov
leave
aam
sbb
xor
jae
cmpb
cwtl
sub
jmp
leave
jns
and
iret
lds
mov
addl
jl
popf
mov
pop
push
sahf
mov
lcall
mov
mov
test
or
cmc
sbb
xor
cld
or
dec
mov
lds
dec
je
mov
mov
in
xor
adc
or
sarl
pop
into
dec
lret
popa
pusha
adc
sbb
jne
jmp
pop
jle
loope
js
aam
jbe
pop
aaa
pop
dec
or
iret
xchg
in
aaa
int
int
ficompl
psrlw
mov
pop
jg
jle
fbld
ds
push
sbbb
pop
cmp
shll
test
jg
mov
ficompl
jecxz
xchg
add
pop
mov
dec
test
or
xorl
rclb
mov
mov
ljmp
add
xor
into
movb
fiaddl
inc
icebp
sbb
xchg
jo
jo
out
inc
and
sub
or
dec
xor
ds
xchg
fwait
into
in
das
sti
add
loop
dec
outsl
movb
sbb
add
repnz
inc
out
pop
and
push
mov
push
decl
lds
out
outsb
fnsave
xchg
xchg
int
jb
inc
inc
xor
rcl
push
ret
stos
inc
js
lods
adc
stos
pop
xor
pop
sbb
cltd
xchg
and
cmp
inc
jmp
and
int
lahf
fwait
mov
loopne
cmp
clc
sub
xlat
jecxz
mov
sarl
lds
inc
dec
dec
js
shll
jle
lcall
and
scas
ljmp
imulb
mov
cltd
sahf
inc
sti
stos
shrl
test
pusha
mov
add
xor
xchg
jmp
leave
cmpsl
mov
dec
fiaddl
cli
lock
xor
dec
sbb
jo
fwait
mov
sub
out
mov
dec
aad
jbe
pop
popa
rorb
nop
and
xchg
jecxz
mov
das
push
jbe
popf
insl
jp
sti
sub
sub
sbb
popa
arpl
mov
xor
cwtl
scas
movsb
into
add
jbe
fs
loope
mov
cmc
imul
subl
inc
sbb
add
mov
adcb
ljmp
cs
stos
jno
dec
scas
mov
in
shrb
adc
daa
ret
push
adc
cmp
push
jp
das
jge
cwtl
ljmp
negl
xor
aaa
jb
icebp
stc
dec
rol
test
pop
addr16
imul
nop
cmp
adc
inc
aaa
xor
mov
test
pop
or
std
pop
insb
mov
leave
fs
ljmp
mov
orl
ret
jbe
push
and
dec
jnp
das
mov
inc
test
sbb
add
add
cmc
cmpsb
je
jecxz
adc
jg
fs
sbb
or
in
stos
inc
cld
les
add
push
xchg
sbb
mov
ret
bnd
dec
jnp
aam
pop
mov
test
push
xor
mov
daa
mov
sarb
cmp
cmp
mov
or
sub
je
outsb
mov
enter
wbinvd
inc
test
hlt
mov
icebp
fnsave
jecxz
aad
sarl
cwtl
xchg
push
mov
adc
sbb
fdivr
cmpl
sub
lds
and
add
negl
lods
pop
jle
fldl
fdivp
mov
push
jmp
arpl
daa
push
sub
pop
ret
xchg
push
mov
test
adc
gs
je
insb
jae
lea
and
in
xchg
mov
sbb
or
in
in
and
mov
movsb
mov
rcrb
leave
mov
data16
dec
cmp
cwtl
inc
movsl
cmp
mov
bound
je
bound
lahf
add
add
and
faddl
push
aad
dec
ja
cmp
fstp
fsubs
iret
imul
pop
outsl
stc
cmc
mov
dec
adc
stos
dec
into
fnstsw
lock
popf
fisttps
fwait
repnz
add
sbb
fcomps
cs
in
mov
stos
negb
cwtl
cmp
fmuls
movsb
fsubl
inc
jb
dec
pop
jp
gs
mov
xchg
dec
cmp
addb
cmp
jns
xor
sbb
scas
xchg
dec
add
xor
pop
sub
mov
push
lret
pop
bound
mov
insl
jmp
cmp
mov
test
scas
adc
cld
repz
imul
fnstsw
dec
in
and
hlt
ds
pop
cmpsl
adc
ror
aas
mov
mov
stos
ss
xor
sbb
jmp
inc
push
mov
ror
sub
addr16
lods
xor
xchg
lret
xor
ficompl
or
aaa
sbb
cmp
imul
push
int3
push
cmc
or
test
pop
xchg
pop
outsb
pop
xchg
jbe
fcmovnbe
fwait
xor
or
gs
js
push
sar
popf
shl
mov
ja
dec
cwtl
rclb
and
ljmp
shlb
lods
ds
in
xchg
jp
sbb
inc
repnz
stos
add
xchg
mov
push
jo
jle
mov
inc
stos
fistpl
xor
sbb
push
push
punpckhwd
or
or
or
psrad
ret
push
mov
movsl
sbb
add
call
mov
cmpsb
pop
pop
out
es
push
cld
movsl
hlt
lea
push
fsubrs
mov
dec
cmpb
enter
jg
call
jbe
lds
inc
cmp
rcr
xchg
shrl
out
cltd
clc
push
xchg
pop
cld
shrb
test
xor
or
pop
andb
or
jb
popl
xchg
icebp
fisubl
lock
cmp
add
cmpsl
fucomi
sub
pop
js
add
pop
lret
push
mov
rol
cmpsl
dec
fnstsw
and
enter
xor
inc
push
fs
pop
mov
cmpsl
sahf
jge
jge
push
stc
push
fs
mov
loopne
xor
and
aas
ret
mov
jle
cmp
outsb
push
inc
out
in
dec
out
xchg
ss
xor
pusha
loope
sub
fs
popa
cmp
aam
add
or
adc
loop
dec
aam
xor
fildll
shrl
mov
test
or
or
lret
and
add
pop
ficoms
cld
call
fs
and
and
cmp
cmp
and
pop
cmc
outsl
insb
xchg
ret
and
aam
out
js
addr16
or
outsl
push
xchg
or
inc
lds
imul
fbld
sub
icebp
in
sbb
add
out
hlt
rcl
cmpl
ret
cmpsb
arpl
or
adc
cmp
sahf
das
and
andb
sub
push
sub
mov
lcall
fnstcw
iret
in
rol
adcl
mov
test
dec
mov
pop
cmpsl
jp
lcall
mov
pop
push
pop
push
lods
cwtl
movsb
jns
sbb
insb
mov
adc
test
scas
out
cmp
or
xchg
sub
pusha
sbb
push
arpl
pop
dec
aad
mov
sbbl
and
xchg
adc
lock
inc
mov
dec
sbb
push
ret
in
scas
call
mov
outsb
mov
sbb
filds
cmp
cmpsb
fcoms
dec
mov
popf
mov
into
mov
jle
aas
lcall
add
adc
aad
or
cmpsl
clc
icebp
loope
daa
outsb
pop
xchg
jg
inc
cli
sub
mov
pop
test
inc
cld
outsb
mov
mov
inc
push
jmp
bound
or
or
pop
jae
shrb
cmp
jb
sahf
or
in
lcall
mov
lea
inc
scas
shrl
lea
int
jecxz
push
decb
in
sbb
jl
sbb
adc
mov
or
bswap
addr16
imull
ss
stos
shrl
add
iret
negl
sub
inc
les
jno
push
push
shl
mov
adc
pop
cld
in
dec
xchg
mov
push
xlat
dec
das
popf
fwait
jnp
insl
pop
outsb
into
jmp
xchg
mov
xor
ljmp
add
mov
cmp
pop
adc
mov
mov
das
lcall
mov
pop
cmp
repz
mov
cmpl
mov
push
movb
dec
fwait
mov
push
add
aam
cli
pop
mov
mov
push
out
ja
and
ficoms
sub
pop
into
push
push
adc
cli
sbb
enter
mov
ljmp
rol
adc
in
std
pop
jb
idivb
pop
xchg
and
ljmp
jmp
aaa
loope
sbb
arpl
cmp
cmp
mov
jmp
sub
lea
leave
enter
inc
dec
not
mov
or
push
sbb
xchg
fcoms
fs
xchg
sti
or
mov
xchg
inc
pushf
inc
and
lods
pushf
sbb
jbe
aam
inc
push
mov
pop
xchg
das
fisubs
repz
pop
lods
cmc
mov
cmc
sub
gs
or
inc
xchg
lret
addb
mov
pop
mov
pop
push
xchg
xchg
dec
mov
in
ds
inc
adc
push
divl
or
std
push
mov
aad
adc
cmp
jge
insl
fdiv
adc
in
or
pop
jb
icebp
ret
scas
pop
mov
fisttpl
sub
and
pop
xchg
outsl
ja
xor
shrb
insl
mov
daa
jns
insl
fs
test
stc
test
movsl
or
xlat
aaa
lea
or
adc
aas
ret
push
mov
push
stos
fsubs
push
push
inc
dec
pop
stc
mov
cmp
out
out
scas
add
and
add
push
fisubrl
fs
imul
jb
sahf
cli
mov
mov
lock
xor
and
cld
popf
pop
cmpsb
adc
mov
mov
push
in
cli
xchg
lea
jmp
mov
repnz
inc
jb
jmp
mov
jns
inc
xchg
push
insl
xchg
adc
xor
xchg
push
xchg
sub
dec
push
dec
int3
jo
inc
xor
add
push
and
lcall
sbb
push
mov
xchg
lods
inc
mov
ja
xor
test
and
inc
inc
inc
je
adc
cmp
mov
aam
adc
cmp
push
push
and
icebp
jg
and
testb
mov
mov
movsl
cmp
test
lahf
lods
lea
pop
rcrb
test
jecxz
inc
hlt
repz
dec
aam
popf
gs
leave
mov
scas
dec
mov
pop
xchg
repz
sub
add
lds
test
clc
ret
add
ss
mov
or
jl
out
xor
shl
sub
inc
dec
add
xchg
lret
sbb
adc
addr16
push
icebp
sbb
lods
push
mov
movsb
in
mov
inc
sbb
outsl
test
adc
mov
rcrb
xlat
je
adc
ret
rorl
sbb
xor
sub
add
push
fiaddl
or
test
ret
mov
call
dec
fists
pop
push
sub
mov
dec
jp
mov
mov
jp
imul
mov
stos
sbbl
lcall
add
gs
jo
lret
in
cmp
jno
xor
xchg
mov
popa
repz
inc
jle
or
inc
pop
inc
fsubr
icebp
jle
jae
idivb
movsl
xchg
test
int
pop
in
mov
data16
and
div
roll
xchg
stc
je
daa
dec
out
sub
arpl
push
popf
push
fbstp
int
pusha
add
or
xchg
icebp
push
lcall
into
out
pop
lods
leave
jecxz
sbb
pop
enter
or
jno
cmc
incl
lahf
push
dec
sub
pop
insl
mov
ja
insl
sub
add
push
lret
sub
cmc
leave
hlt
inc
fdivrl
lock
cmpsb
and
jae
sbb
jecxz
fdivrl
dec
mov
cwtl
mov
mov
cmpsl
jnp
fidivl
or
adc
sbb
inc
mov
scas
lock
roll
js
jns
int3
out
sbbl
cmp
inc
loope
shrl
pop
or
out
cmp
pop
outsb
pusha
lods
ljmp
fs
cmp
ss
das
mov
xor
mov
jmp
mov
jg
out
mov
xchg
jge
aaa
loop
hlt
push
insb
adc
shl
jbe
cs
movsl
or
cli
xlat
push
mov
push
mov
jne
add
inc
push
shrb
pop
mov
aad
sbb
xchg
lret
or
cmp
jge,pt
mov
add
add
xor
loopne
in
sub
fsubrs
insl
adc
mov
dec
fsubl
stc
mov
ljmp
push
ret
mov
popl
addr16
xchg
je
dec
mov
push
pop
mov
inc
jg
jp
push
sub
std
test
ja
and
push
scas
into
mov
leave
mov
jns
insb
cmp
std
pop
test
in
mov
pop
andl
in
cmp
outsb
mov
arpl
ljmp
xor
fwait
mov
push
xchg
pop
adc
mov
inc
pop
dec
movb
adc
in
mov
movnti
mov
scas
push
enter
jnp
or
push
imull
mov
roll
test
int
test
fcmove
or
daa
xor
nop
push
test
mov
dec
and
daa
fsubrl
pop
jnp
mov
das
cmp
mov
jmp
das
stos
lea
jp
lods
pushf
outsl
xor
and
xchg
mov
bound
mov
sbb
or
mov
inc
jo
in
loopne
or
dec
sbb
clc
lock
fwait
out
push
scas
dec
mov
pushf
cld
fnstsw
or
push
pop
fnstsw
test
lcall
sbb
clc
fisubs
addr16
ret
cmp
insb
cmpsl
pop
das
mov
xchg
loop
test
dec
inc
mov
sub
xchg
dec
xlat
sbb
mov
cltd
push
aas
sbb
sahf
or
repnz
add
push
fbstp
leave
pop
iret
push
push
inc
inc
test
cli
xor
sbb
shrl
dec
cmpsb
aam
jecxz
test
imul
sbb
mov
scas
xor
repnz
cli
js
adc
pop
lods
push
test
int3
adc
popf
mov
adc
push
or
enter
lahf
lods
iret
jg,pn
mov
out
lods
outsb
fdivrl
and
mov
xchg
movsl
xor
pusha
sub
xchg
or
gs
je
pop
inc
inc
inc
cs
add
jge
lret
inc
inc
add
xchg
add
loopne
or
or
hlt
cltd
fwait
lea
es
pop
ss
cld
or
movsl
cmpb
addr16
jns
test
inc
fcomps
cmpl
cltd
stos
ds
xchg
sub
pop
adc
adc
in
mov
add
mov
pop
xor
imul
sub
dec
pop
sarb
test
jmp
dec
sbb
das
test
jmp
test
mov
mov
fnstcw
das
faddp
addr16
cmpb
mov
jbe,pn
test
test
jl
lds
mov
daa
out
mov
jne
mov
push
xchg
sub
inc
sbbb
daa
dec
sub
adc
xchg
es
ja
cmp
mov
shlb
std
and
mov
fistps
mov
add
pop
cmp
xchg
sahf
stos
orl
ficomps
mov
adc
leave
inc
and
dec
push
faddl
push
add
push
in
mov
lret
nop
ja
sbb
xchg
mov
ret
jnp,pt
js
out
or
pop
cmc
sub
repz
and
rorb
sub
das
lea
jo
jbe
or
ret
dec
and
mov
sub
fs
and
mov
dec
sbb
hlt
dec
pop
adc
lods
jne
div
divl
cmpsb
mov
jg
pop
sub
fwait
stos
xchg
mov
dec
aas
out
bnd
cltd
iret
lahf
mov
jmp
vmulsd
nop
jp
sub
out
jl
imul
adc
and
rcll
pop
add
imul
mov
or
cmp
push
in
in
mov
add
mov
or
sub
push
in
mov
test
inc
dec
pop
xlat
aad
subb
mov
and
mov
adc
cmp
loop
subl
cwtl
cmp
cmpsl
inc
dec
sub
dec
inc
or
add
loope
je
push
dec
fs
fsubrl
sub
or
pop
shll
cmpsb
cmp
enter
sbb
or
aad
fs
das
imull
rolb
push
outsl
mov
mov
aam
xchg
jbe
mov
adc
int
shrb
add
lds
iret
addr16
icebp
fcoml
cmp
lods
mov
sub
movsl
push
dec
in
or
les
inc
enter
lcall
repnz
not
clc
lea
xchg
mov
data16
lock
pfmax
movsb
jl
or
mov
addb
fs
dec
push
push
or
sbb
lret
mov
cmp
or
sarb
cmpsb
ficoml
or
adc
jne
or
repnz
repnz
cltd
out
lret
xchg
mov
sub
add
test
inc
sarl
pop
mov
push
bound
dec
aaa
mov
inc
pop
push
inc
outsl
xchg
dec
fnstcw
aas
adc
mov
cwtl
add
adc
lret
mov
fisubs
add
xor
sbb
fisttps
mov
cmp
or
int3
mov
sbb
mov
adc
mov
push
movsb
out
lret
xor
xorl
or
pop
jge
cmp
lock
mov
xor
sub
dec
ret
inc
fldenv
pop
inc
scas
push
jecxz
stos
test
jo
push
cs
shrl
in
cmp
aaa
adc
mov
pop
aaa
loope
test
insb
jp
sbb
aas
ja
jo
out
cmc
and
inc
mov
addl
nop
push
and
aaa
gs
jbe
ja
inc
outsb
js
sahf
das
and
pop
shll
test
mov
lcall
jmp
adc
rcrb
inc
test
repz
mov
inc
inc
stc
sarb
jns
pop
sahf
push
mov
insb
xchg
xchg
outsb
push
adc
lcall
pop
mull
out
ds
and
lcall
sahf
dec
add
push
and
jno
jne
sub
mov
pop
outsb
sub
enter
fcomps
sub
mov
pop
jno
adc
bound
mov
imul
mov
or
loop
jnp
dec
sub
aas
mov
loopne
notb
dec
stos
divl
dec
les
sub
icebp
xor
je
xor
into
mov
and
lahf
push
inc
cmp
add
lea
inc
loopne
jmp
sub
xor
and
repnz
arpl
fiadds
je
jecxz
shlb
and
insl
pop
push
in
sbb
adc
bound
cld
lods
fs
lock
sbb
push
in
push
add
lods
jecxz
dec
clc
test
bound
roll
aam
xor
cmp
sahf
je
scas
lods
push
sub
push
lahf
mov
dec
mov
pop
adc
sub
jecxz
jb
fwait
mov
mov
aaa
adc
icebp
push
dec
pop
int
mov
daa
xchg
pop
in
jge
dec
mov
out
sub
ss
push
sbb
adc
fistps
jns
dec
xorb
mov
stc
or
fldcw
inc
pop
push
sahf
push
js
jge
jge
mov
jl
push
dec
sub
ret
push
cmp
dec
popf
les
pop
push
cmp
add
mov
dec
mov
pop
rolb
push
adc
dec
jb
test
and
pusha
cmp
and
pop
pop
cmc
push
jae
mov
popa
mov
sub
aad
mov
shl
mov
pop
outsb
sub
js
and
test
lret
jp
roll
xor
mov
push
lods
xor
push
sti
int3
in
or
in
sarb
pop
fcoml
adc
shr
andl
or
xchg
add
ret
jns
out
cmpsb
adc
jns
sub
data16
aad
push
fiadds
add
adc
cld
adc
scas
jnp
fmulp
jne
push
jno
adc
rcr
cli
xchg
adc
push
push
pushl
sbbl
xlat
mov
dec
mov
pop
int3
adc
or
xchg
pop
cltd
rolb
xor
lds
sub
mov
sbb
iret
les
sbb
cmp
imul
enter
pop
pop
fcmovnbe
xchg
push
inc
push
mov
adc
or
add
mov
das
mov
loope
dec
icebp
pop
ror
movsb
pop
mov
push
sbb
aaa
jbe
out
adc
pop
jnp
cs
cmp
cmp
popf
ljmp
lods
cmp
or
in
or
mov
and
xchg
stos
mov
dec
lods
in
jg
sahf
int
push
sarb
push
test
daa
insl
imul
adc
jb
fiadds
cld
jg
dec
cmc
cmp
test
cmp
aaa
leave
cwtl
lea
push
subb
sub
dec
lcall
mov
mov
std
int
and
push
es
jbe
leave
push
mov
inc
pop
test
sbb
push
pushf
clc
or
push
sbb
push
sti
cmp
gs
js
stos
mov
int3
mov
mov
pop
mov
movb
push
vpand
fcmovnbe
out
push
andb
dec
pusha
repz
out
adc
mov
cmp
pop
cmp
addr16
icebp
out
clc
js
jb
push
fs
adc
sbb
add
jecxz
stc
inc
fwait
xlat
and
shl
push
jb
adc
lods
ljmp
pop
dec
movsl
or
dec
cmp
xchg
je
push
dec
adc
sub
cmpsl
sub
loope
repnz
mov
sub
push
jbe
push
outsl
and
leave
or
pop
or
pop
call
push
add
stc
inc
out
mov
fiadds
das
test
sbb
sbb
xor
xchg
mov
ret
ret
test
adc
pop
call
in
stc
outsb
or
orl
test
je
fists
push
mov
xor
sub
mov
outsb
insb
imul
sarb
xchg
push
sbb
fstps
pop
sub
push
loope
or
data16
xor
sub
mov
out
cmp
cs
loopne
ss
aad
shrl
aaa
dec
mov
loope
inc
stos
fisubl
lret
iret
mov
insl
addb
push
inc
out
imul
mov
hlt
rclb
cli
jg
and
jae
dec
adc
cmp
dec
jnp
movsl
mov
aad
lcall
cmp
push
add
in
mov
jge
nop
cld
test
cltd
pop
pop
mov
mov
pop
out
dec
aaa
ds
sbb
enter
mov
push
xor
rcrl
div
mov
movsl
out
dec
test
iret
cwtl
movsl
pop
jbe
mov
lods
cmc
test
sub
or
fnsave
mov
loope
xorl
push
cmp
mov
cmp
sbb
mov
into
gs
jno
ficompl
leave
dec
adc
xchg
xor
pop
jbe
or
xchg
xor
fstp
xchg
jmp
mov
sbbb
test
js
mov
xor
sahf
xor
test
sbbb
mov
addr16
xor
pcmpgtw
dec
lret
test
adcb
clc
adc
imul
lcall
push
iret
sub
incb
xor
shlb
push
sbb
sub
cld
jmp
jae
jg
mov
lock
popa
sub
jmp
daa
push
inc
sbb
gs
inc
push
dec
add
push
mov
in
in
lret
fs
dec
bound
les
pop
jmp
cmp
pop
ds
xor
inc
cmp
adc
aam
imul
push
ss
sub
xor
jb
subl
xorl
pop
xchg
cmpsl
mov
dec
pop
pop
mov
sbb
and
lods
ret
mov
in
out
xchg
fcmovb
mov
push
xchg
mov
mov
xchg
inc
and
xor
cmc
cltd
jno
mov
jge
jmp
cmp
jbe
adc
leave
ret
push
ss
mulb
movsw
fdivs
xchg
aam
mov
pop
sub
jbe
or
jns
xchg
sbb
dec
mov
adc
in
xor
push
jge
sub
push
lret
stc
mov
js
add
pop
mov
jmp
fcoms
jecxz
ljmp
jle
jge
xorl
mov
push
jne
fs
sti
and
sbb
pop
mov
test
scas
xor
pop
xchg
rcl
lods
cmp
orb
std
je
ja
xchg
rcr
bound
jo
cmp
inc
pop
and
inc
arpl
cmc
std
push
sbb
xchg
sub
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
add
movl
sbbl
mov
xorl
mov
add
xor
cmp
movl
jne
mov
or
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
orl
add
mov
mov
mov
xor
push
mov
and
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
push
push
push
push
lea
xorl
push
push
movl
call
addl
push
call
adcl
movl
movl
mov
mov
addl
xor
orl
mov
add
mov
notl
mov
test
movl
je
inc
mov
andl
mov
dec
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
imul
movzbl
xor
mov
add
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
adcl
xchg
xor
mov
sub
sbb
mov
sub
xor
mov
and
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
andl
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
mov
xor
add
sub
mov
dec
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
or
xor
dec
add
mov
andl
sub
orl
lea
addl
xor
adcl
xor
cmp
je
mov
orl
xor
sbbl
add
cmp
movl
jne
andl
pushl
addl
call
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
push
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
adcl
mov
dec
xor
sub
mov
movl
add
movl
cmp
movl
je
addl
pushl
pushl
call
mov
sub
mov
mov
mov
movl
xor
orl
add
movl
cmp
movl
je
mov
mov
sub
sub
mov
mov
mov
and
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
jmp
or
xchg
loop
movsb
emms
adc
jo
xlat
pop
jp
aaa
pop
jp
leave
bound
loop
sbb
fnsave
icebp
dec
repz
inc
imul
out
stos
or
and
mov
pop
jae
in
xchg
pop
cmc
sarb
cld
pop
lods
xor
mov
ds
add
pop
imul
sbbb
fistpl
pop
loopne
mov
test
cld
mov
adc
sbb
pop
adc
test
and
out
adc
or
rcrl
paddd
sub
push
daa
inc
jb
movsb
hlt
inc
xchg
jle
xor
imulb
rol
mov
mov
data16
pop
in
or
mov
and
mov
lea
push
lret
dec
sub
add
divb
xchg
mov
lods
adcb
and
mov
push
popf
sbb
jmp
iret
ror
in
sti
pop
addr16
sbb
xchg
dec
outsl
shll
push
xchg
pop
cmp
dec
pop
jb
adc
xor
and
mov
inc
sub
mov
je
icebp
lcall
cmp
xchg
lahf
arpl
push
cmpsb
jl
pop
cmp
testb
sub
adcl
push
inc
xlat
mov
loop
push
sub
scas
jmp
test
mov
dec
addb
out
jb
test
or
xchg
inc
clc
dec
xor
add
push
bound
mov
adc
jne
fisubrl
push
mov
cmp
ja
in
dec
or
cmp
out
mov
cmpb
and
pop
ret
jmp
and
subl
or
adc
inc
ret
mov
aam
push
ret
pop
das
je
shrb
jo,pt
or
cmp
xor
das
int3
xchg
pusha
mov
pop
repnz
int
lods
cmp
mov
jg
mov
xchg
lods
push
cmp
sbbl
mov
cmp
shll
cs
fnstsw
mov
mov
and
pop
ja
mov
scas
into
int3
sbb
into
test
or
data16
fnsave
out
sub
or
cmc
sub
stos
and
sub
pop
test
scas
into
lock
pop
stos
sarl
jae
push
les
ficoml
mov
scas
ret
or
pop
int
jo
sahf
and
cmpsb
icebp
insl
jle
in
pop
cmp
or
mov
es
pop
addr16
push
mov
notl
aas
pop
bound
jl
scas
sti
shll
pop
notb
jmp
sti
adc
movsb
aad
add
push
inc
das
lcall
icebp
mov
add
jmp
pusha
push
daa
addr16
out
adc
push
das
insb
push
popa
push
adc
mov
cmc
sbb
and
xchg
leave
adc
cmc
mov
mov
in
xchg
mov
test
xor
dec
mov
add
inc
cmp
repz
mov
pop
hlt
addb
adc
ss
int
lahf
mov
call
xchg
xchg
push
cli
xchg
lods
fldl
dec
push
mov
clc
rcrb
fwait
jg
xchg
movsb
lar
rol
fldz
sbb
test
xchg
inc
push
rcll
fwait
xor
xchg
int3
loop
bsf
sbb
clc
xchg
les
mov
xor
pop
aas
daa
cld
ds
xchg
lret
cmp
loope
or
in
sub
inc
pop
push
sbb
sbb
xchg
gs
jno
sbb
test
mov
push
mov
cmp
and
scas
or
xchg
pop
faddl
mov
inc
sbb
inc
jmp
cmp
mov
mov
repnz
lahf
sbb
inc
mov
ljmp
jp
clc
punpcklbw
cmp
scas
shl
push
xchg
mov
daa
mov
mov
int
bound
adc
mov
or
sub
repz
mov
mov
outsb
jns
pushf
into
push
pop
pop
enter
shll
pop
xchg
mov
sub
pop
jno
arpl
sbb
xor
ja
ss
and
mov
xchg
das
das
jbe
ja
pop
in
addl
lcall
adc
push
or
std
xor
and
fucomp
and
push
jle
lods
pop
orb
jno
lds
inc
push
mov
cld
mov
les
pop
clc
sbb
adc
pushf
adc
pusha
add
std
repz
popa
aaa
fisttpl
call
lret
scas
loopne
xlat
inc
scas
adcb
pusha
imulb
mov
scas
xor
pusha
dec
xor
mov
jnp
push
pop
pop
iret
sbb
dec
inc
mov
std
out
dec
mov
mov
lea
addl
sub
mov
fisubl
popf
mov
cmp
cmp
adc
mull
test
mov
jp
sahf
ja
push
push
add
lods
cmp
in
dec
notb
or
xchg
xchg
sbb
addr16
xor
sbb
lret
loopne
pop
dec
mov
and
jp
ja
lcall
stos
ds
mov
std
add
push
xchg
pusha
mov
push
int3
stc
push
loope
jb
adc
xchg
scas
xchg
sub
mov
adc
shlb
pop
adc
in
call
lock
dec
ljmp
add
add
jecxz
cmpsl
idivl
xorl
jge
out
mov
test
lods
xlat
sbb
or
inc
inc
or
cli
mov
movsb
inc
pop
dec
pop
xchg
mov
mov
in
xlat
loop
xchg
adc
and
int3
fadds
and
pusha
lods
or
icebp
add
dec
xor
pushf
push
cli
push
filds
or
in
in
mov
mov
push
fwait
inc
out
shlb
adc
push
adc
mov
lea
ljmp
icebp
icebp
jle
sub
repz
fistpl
ds
xor
inc
cmp
jmp
dec
out
pushf
cmpsb
rorb
je
sbb
nop
or
lret
mov
shrb
push
leave
inc
sahf
ljmp
in
and
mov
bound
popa
xchg
dec
push
sbb
xor
add
lret
sbb
sub
movsl
pop
nop
testb
fs
hlt
add
inc
pop
shll
mov
ret
xchg
mov
mov
sbb
and
inc
ja
inc
xor
shlb
xchg
test
popf
or
inc
pop
insb
push
xor
enter
pop
aam
cmp
and
jae
adc
inc
lea
pop
sbb
or
jns
test
das
mov
je
add
xchg
jp
mov
sarb
rcrb
sti
lds
jae
cld
rorb
dec
push
bswap
pop
rcll
inc
pop
mov
push
sti
jno
dec
ds
mov
push
add
testb
push
rorl
cli
add
out
push
jmp
jns
inc
jge
lods
arpl
jae
jp
sahf
push
jmp
stos
ret
ds
push
mov
into
cltd
xlat
pop
lcall
scas
adc
jb
in
inc
sub
cmpsl
sbb
cs
rolb
cpuid
sub
jp
push
sbbb
loopne
cltd
xchg
test
push
testl
aad
xor
dec
andl
es
iret
dec
jecxz
arpl
loopne
jb
sbb
push
adc
out
subb
jmp
out
dec
jns
lods
pop
cli
jmp
inc
arpl
sbb
cmp
cmpsb
push
faddl
jb
lcall
cs
lea
sbb
mov
test
xchg
fnstenv
mov
and
pushf
hlt
jecxz
jg
stc
mov
and
adc
incl
inc
mov
arpl
xchg
lds
pop
push
call
jle
cmp
dec
add
pop
mov
aad
mov
pop
push
or
mov
gs
xor
aaa
add
mov
jb
out
cmp
cwtl
cmp
outsb
sbb
loopne
inc
xchg
pushf
cmp
jge
hlt
and
cmovno
mov
out
filds
jmp
in
sbb
sbb
push
sbb
sub
adc
aas
add
sbb
xor
bswap
hlt
ficompl
icebp
rclb
inc
mov
in
fwait
jbe
push
jg
pop
cmp
xor
dec
or
out
mov
sbb
mov
imull
sbb
adc
out
shr
rcrl
jae
xor
pop
imul
out
jae
bnd
cmp
lret
pop
cmpsl
mov
lret
rcrb
mov
mov
push
jmp
mov
xor
arpl
lds
cmp
add
xor
repz
dec
adc
jecxz
imul
sbb
das
pop
mov
sbb
repnz
repnz
mov
mov
push
cmp
pop
int
decb
dec
loopne
jo
dec
push
or
push
mov
push
mov
shrl
adc
mov
aad
pop
test
into
sbb
test
or
adc
leave
dec
inc
mov
lock
int
dec
ret
xchg
aas
in
test
jb
mov
add
or
daa
xorb
cmp
or
gs
add
test
mov
push
out
aas
mov
mov
pop
xchg
xchg
or
gs
adc
add
das
add
es
mov
mov
sahf
jmp
ret
mov
pop
sahf
loop
int
shll
mov
jne
jae
jge
add
lret
cli
lods
inc
inc
mov
mov
andl
movsl
cmp
imul
sbb
mov
fidivrs
cmpsl
dec
lea
sbb
cltd
adc
addr16
mov
inc
dec
mov
sbb
push
movsb
mov
adc
cmp
inc
cmc
cmpsl
fisttpll
dec
loop
stos
inc
push
adc
mov
ret
push
test
xchg
sarl
fstpt
stos
push
adc
pop
in
cltd
pop
push
xor
dec
sub
enter
cmp
xorl
and
insb
sub
mov
adc
fidivrl
adc
cmpsb
fistpl
jns
sarb
inc
push
pushf
stos
xor
loopne
rorl
push
mov
pop
and
stc
fsubl
iret
outsb
addr16
fisubl
shlb
push
cltd
decb
or
lods
mov
es
push
mov
loopne
in
imull
inc
inc
mov
insb
es
push
int
push
cmp
std
pop
adc
push
leave
loop
mov
dec
sbb
dec
mov
xor
sti
inc
sbb
mov
or
xlat
insb
or
xlat
in
add
jle
cmp
pop
sti
jbe
cmp
pop
or
lods
test
dec
mov
jp
sbb
push
inc
xchg
xor
lret
rcrl
aam
xchg
sbb
push
xchg
test
subb
cmp
xchg
dec
inc
add
sub
dec
imul
fcompl
and
mov
int
enter
repz
xchg
fwait
adc
rcrl
jecxz
arpl
sbb
mov
shll
or
sahf
mov
add
mov
movsl
ss
cli
ret
push
add
xlat
in
and
sub
shlb
mov
mov
push
cmp
dec
jb
icebp
jne
and
jno
jnp
insb
mov
xchg
js
or
jns
loop
xchg
psubsw
iret
sub
pop
shl
dec
pop
test
fiaddl
std
mov
imul
ljmp
mov
repnz
inc
or
ret
mov
rorl
jmp
mov
jne
test
xor
aaa
cli
xchg
pusha
lahf
jne
inc
mov
shr
adc
cmp
jno
rcrb
push
fwait
xchg
mov
adc
xor
mov
mov
ret
iret
and
iret
push
jnp
xor
push
in
jne
ficomps
iret
mov
mov
pop
ficoms
sbb
pop
and
sbb
xor
sahf
test
sub
imull
or
pop
gs
arpl
jecxz
dec
icebp
jne
mov
cmp
stos
pop
mov
jo
out
ljmp
pop
rcll
mov
xchg
adc
mov
pcmpeqb
roll
cli
sub
mov
nop
adc
stos
push
xchg
mov
add
clc
xor
push
subb
push
mov
cmp
in
mov
inc
mov
scas
jmp
ret
hlt
push
aaa
popa
jl
sub
aas
pop
dec
adc
je
ss
pop
pop
mov
leave
adcl
scas
mov
mov
gs
xchg
test
inc
mov
lret
sarb
pop
imul
es
xchg
fstpl
xchg
jno
mov
je
push
xor
stos
insl
or
iret
stos
loop
cmp
pop
jle
rorl
xchg
xor
inc
add
push
mov
out
add
push
inc
ss
rcl
ljmp
mov
lret
cs
stc
fwait
adc
jne
pop
jp
popa
negl
stos
rorl
xchg
mov
cmp
aaa
mov
sub
sub
in
xchg
ljmp
sub
call
jb
and
xchg
jbe
fisttpl
and
sbbl
mov
mov
push
xchg
push
dec
xor
dec
sub
push
cld
push
cmc
jno
adc
sub
icebp
pop
lock
mov
mov
inc
mov
cmp
push
daa
scas
fwait
inc
fdivs
lahf
gs
into
testb
rcrb
or
rcrl
repz
jmp
imul
xchg
int
xchg
dec
mov
mov
scas
fdivrl
sub
push
adc
jecxz
aas
enter
stos
aas
loopne
xchg
xchg
lcall
pop
aaa
pop
pop
pusha
ficoms
cwtl
mov
popa
or
int
inc
mov
movsb
sbb
add
and
mov
sbb
lahf
add
cmp
mov
mov
pusha
sbb
sub
push
sub
dec
call
in
jge
dec
insb
push
shl
subl
xchg
push
insb
add
les
push
inc
cmp
es
sahf
sti
out
jo
and
push
ljmp
cmp
hlt
in
xlat
stos
cltd
mov
mov
shll
mov
cmpps
adc
jne
xchg
pop
fs
imul
sub
mov
shr
jge
sbb
mov
or
adc
cld
sbb
inc
insl
cmp
insl
imul
pushfw
sbb
push
mov
and
xor
xchg
inc
stos
mov
into
cmp
mov
mov
dec
test
xchg
decb
daa
pop
adc
lods
mov
sbb
xor
pop
flds
cmp
mov
js
adc
scas
ficomps
cmpsl
cmpsl
lea
call
int
dec
pop
and
ss
push
ds
inc
jmp
iret
ljmp
in
mov
mov
inc
sub
xchg
xchg
popa
sub
mov
adc
push
push
aad
or
add
cmp
pop
popa
dec
push
xor
mov
cmp
xchg
mov
push
xor
push
dec
pop
mov
test
adc
jecxz
mov
add
mov
pop
adc
add
or
jecxz
cmp
das
lret
dec
out
adc
sub
jnp
fisubl
subl
or
ds
cmp
xor
pushf
push
mov
mov
pop
mov
jg
ret
mov
xchg
dec
jecxz
je
movb
xchg
cmp
mov
mov
fsubrs
aas
repnz
sub
pcmpgtd
push
jnp
sub
and
pop
lahf
inc
sub
cwtl
inc
int3
jmp
jl
or
fdiv
mov
jbe
call
xor
bound
lock
lock
icebp
cmp
jg
mov
pusha
sbb
scas
sbb
arpl
iret
xchg
in
jl
clc
mov
xor
mov
pop
test
pushf
and
add
sub
sub
pushl
rcrb
push
in
les
sar
jae
ret
pop
push
lods
jle
clc
cmp
ss
repnz
daa
iret
pop
xor
sahf
pop
jbe
fucomip
jb
cmpsl
cmp
jecxz
mov
movsl
push
repz
and
shl
fsub
dec
cmpsb
dec
lret
jno
outsl
ret
shlb
mov
stos
mov
data16
fdivrl
fidivrl
fisubrs
addl
lcall
mov
mov
mov
fwait
sbb
pop
ljmp
dec
aad
lods
push
fisubrl
into
lcall
mov
jo
push
and
repz
imul
es
inc
adc
xchg
jge
xor
mov
lahf
push
jbe
mov
ljmp
or
ret
cmp
xchg
adc
mov
push
add
adc
mov
mov
shlb
or
test
mov
fstl
jo
dec
mov
ja
or
iret
jbe
jle
addr16
ljmp
add
nop
sbb
addr16
dec
xchg
mov
shlb
mov
xor
cmp
sbb
and
xchg
mov
std
imul
pop
mov
inc
sub
xor
cwtl
cmpsl
cmc
xlat
cmp
sub
popa
cld
stc
cltd
sbb
and
sbb
imul
insb
jg
cmp
test
add
imul
outsl
rcrb
inc
mov
xor
fsts
scas
lcall
pop
sub
jg
adcb
xchg
sub
pushf
mov
ja
rolb
xchg
ja
in
repnz
int3
icebp
into
je
xchg
adc
lret
adc
adc
fimuls
xchg
xlat
push
inc
cmc
sub
stos
mov
insl
fnsave
jp,pn
into
push
lea
pusha
cmpsb
mov
das
xchg
sbb
fmull
dec
imul
pop
add
mov
jo
out
and
and
popf
mov
test
mov
dec
cmpsb
cwtl
adc
inc
in
cli
mov
push
jo
jmp
adc
js
jo
icebp
lods
mov
and
test
std
and
push
adc
loope
inc
mov
test
lret
roll
mov
inc
inc
leave
subl
call
loope
aas
aas
cmp
data16
cmp
repnz
test
js
mov
sahf
lock
dec
sub
fs
mulb
test
stos
arpl
roll
dec
mov
addr16
mov
inc
mov
gs
loop
pop
push
or
sbb
sti
imul
or
pop
ljmp
mov
pop
fnstcw
or
insb
mov
std
pop
add
out
pop
push
mulb
jns
test
inc
in
and
jmp
add
fimuls
in
jecxz
xor
aas
cmp
jl
xor
dec
nop
cmp
mov
jo
and
jle
inc
xchg
mov
cmpsl
arpl
mov
inc
add
fstpl
cmpsl
or
mov
es
xchg
jle
fs
xor
test
inc
imul
inc
pushl
jo
pop
test
clc
mov
movsl
loope
push
outsl
aam
add
xor
scas
out
test
mov
xor
test
mov
xchg
pop
add
xor
pushf
lea
push
sub
daa
loope
lods
push
and
cwtl
mov
push
test
inc
dec
pusha
decl
sub
lods
lcall
fidivl
pop
mov
jo
fcmovb
pop
scas
push
addl
mov
sub
mov
insl
inc
shl
sub
mov
sub
mov
inc
sub
sbb
mov
mov
out
lods
lahf
and
ficompl
push
shlb
xchg
mov
xchg
mov
or
xchg
rorl
push
sbb
fwait
iret
ret
sbb
mov
ds
push
mov
xchg
shr
mov
mov
notb
adc
je
xor
xchg
push
int
xchg
add
cltd
je
cmp
pop
cmpsl
xchg
adc
inc
outsl
mov
test
sub
add
fdivp
mov
or
mov
iret
push
xchg
ret
cmpsb
sbb
cmp
out
and
cmpsl
cmp
xorl
cld
pop
cmpsb
shl
cmpsb
nop
cmp
add
sub
mov
dec
leave
pushf
or
lcall
xor
repnz
filds
ror
fcmovnu
add
cli
enter
fs
pop
mov
jb
in
adc
cwtl
mov
sbb
mov
jg
arpl
arpl
push
stos
arpl
leave
aas
push
and
ret
out
jl
lods
mov
loope
icebp
ret
ffree
push
stc
sub
jo
lods
hlt
in
out
andl
ret
scas
popf
repz
inc
add
inc
cmp
lods
out
les
dec
cmp
xchg
pushf
xor
loope
out
mov
lods
and
daa
adc
cmp
data16
mov
and
sbb
sbb
cmp
notl
jbe
inc
outsb
sub
jg
mov
shll
pop
push
bound
mov
add
fisubl
imul
adc
cli
rclb
jg
cwtl
aam
rcrb
jge
lea
push
popa
push
xchg
sub
pop
test
mov
pop
sbb
xchg
fsts
lods
loope
sbbb
popa
mov
fmuls
pop
rclb
stos
push
push
push
and
pop
sub
xor
xor
xor
pop
iret
je
stos
and
dec
pop
dec
inc
mov
cmc
fildl
test
adc
outsb
or
out
in
scas
cmc
and
push
and
and
fsubs
loope
pop
sbb
lea
xchg
sub
das
add
push
inc
fdivs
das
or
orb
sbb
test
lock
repnz
int
ds
into
loope
adc
sub
gs
gs
imul
inc
mov
fsts
xor
sbbb
adc
sub
data16
adc
insl
int
loope
daa
mov
lret
cmp
add
dec
dec
dec
or
add
add
xchg
jnp
push
pop
loop
jle
sahf
mov
cmp
xor
stc
sbb
add
lods
add
sbb
push
ja
mov
or
mov
leave
sub
int
mov
arpl
ss
gs
mov
orb
jns
or
push
lcall
lahf
in
mov
imul
inc
mov
popa
add
push
fisttps
lahf
inc
xchg
es
inc
scas
jns
mov
adc
add
outsb
ds
dec
add
inc
divl
xor
xor
sar
sbb
ds
cli
scas
push
add
sub
sbb
mov
ljmp
mov
push
imul
ss
call
pop
mov
imulb
subl
xchg
scas
insb
cmc
mov
fadd
test
and
xchg
and
inc
mov
rorl
jle
loope
xchg
scas
jl
fildl
mov
mov
cli
repz
xor
insl
dec
mov
ljmp
mov
bt
xchg
lock
daa
jbe
les
aaa
test
ljmp
cmpsl
popf
sarl
sub
lods
jg
push
lret
sti
sub
mov
jne
div
idivl
mov
or
adc
scas
fcom
pop
loopne
sbb
mov
rol
orl
outsb
push
cmp
xchg
cmp
mov
sbb
sbb
mull
sbb
inc
sbb
enter
jne
sbb
enter
popf
insb
insb
test
lret
push
sub
jl
das
sbb
loope
arpl
icebp
xor
push
and
lret
fsubs
leave
stos
addr16
lods
fisubl
pop
jno
pop
out
dec
push
sahf
subl
mov
jmp
adc
shlb
mov
mov
cs
sbb
push
loop
imul
das
rcrb
scas
xor
adc
stc
mov
mov
mov
jmp
pushf
or
sbb
fs
scas
sbb
xor
cmpsl
push
xchg
aad
js
sarl
rcll
sbb
loop
pop
rorb
xlat
inc
xchg
xor
ss
inc
cmp
mov
jmp
fisubrs
sbb
ds
jp
sbb
jge
cld
mov
jnp
mov
sbb
ficompl
mov
in
addb
cwtl
or
and
xor
cmp
add
popf
test
daa
mov
sahf
ret
xchg
int
mov
jb
stc
pop
jnp
xchg
mov
fidivl
jbe
pop
jle
mov
jae
loop
gs
pushf
push
fwait
daa
cmp
push
out
push
pop
stos
cmp
sbb
jno
js
insl
jb
sub
or
lods
sti
pop
jle
mov
pusha
mov
jecxz
pop
or
cmp
mov
shl
jb
cmp
pop
adc
outsb
popa
std
fisubrs
fidivrs
insb
push
lret
xchg
push
data16
fistl
jl
jnp
push
aam
pop
or
sub
push
adc
lds
js
or
int
adc
insl
push
cs
int
lods
stc
push
inc
mov
jno
insb
sub
out
cmp
pop
jns
xor
cmp
xor
dec
enter
hlt
pop
cmp
aaa
adc
xchg
mov
or
shlb
pop
shlb
inc
icebp
sbb
fpatan
cmp
shlb
jecxz
popa
xor
pop
push
or
mov
xor
pop
in
xchg
adc
push
inc
pop
leave
in
xor
xchg
outsl
fisubrs
add
mov
mov
xchg
mov
mov
xor
inc
stc
sbb
and
rcrl
pop
cmp
cmp
cmp
xor
adc
jae
pop
into
leave
sbb
lea
adc
jl
adc
sub
popa
push
aad
mull
cwtl
adc
imul
test
or
fidivrs
or
or
iret
dec
fisttps
or
and
repz
xchg
add
cmp
adc
outsl
xor
mov
and
jns
add
mov
lock
pop
fimuls
push
xorl
add
jle
movsb
gs
push
push
lcall
scas
lret
xor
icebp
outsl
test
dec
push
pop
scas
leave
push
mov
pop
and
cmpsl
xchg
out
icebp
xor
xor
es
xor
dec
jmp
out
sbb
inc
cld
or
ja
mov
sbb
inc
mov
jmp
pushf
cmp
inc
inc
mov
rcr
fmul
xor
cli
add
lock
bound
cmp
out
sub
fsubl
fsub
loope
inc
mov
xchg
mov
mov
gs
add
jl
pop
inc
inc
scas
and
mov
inc
popa
mov
aad
adcl
mov
dec
xorl
or
subb
push
mov
cmpl
cmp
cli
sbb
aaa
call
and
sbb
es
xchg
jns
mov
bound
mov
dec
cmpb
cmp
sahf
xchg
or
pushf
notl
pop
or
lods
push
decb
ficoms
push
and
dec
daa
mov
lret
cmp
scas
arpl
test
mov
or
shll
arpl
testl
dec
addr16
adc
xor
push
mov
jp
and
loope
dec
out
gs
and
jmp
or
pop
or
and
cs
in
push
adc
sar
lock
sub
imul
cmp
dec
sub
or
mov
mov
shrd
mov
rorb
jle
lret
and
in
sub
rcll
dec
jmp
cld
add
sbb
cmp
aam
sbb
dec
xor
int
adc
aam
testl
mov
clc
xchg
popf
sub
ret
mov
je
nop
inc
add
lds
iret
xor
adc
pop
imulb
into
in
mov
or
call
xchg
adc
mulb
lds
orb
dec
scas
iret
jmp
int
fidivl
dec
pop
adc
cmp
lods
push
inc
test
dec
inc
daa
and
add
xor
cli
shl
je
js
fists
add
pop
loope
jns
rolb
cmp
loopne
pop
std
mov
pusha
lods
loope
iret
dec
stc
sub
pushl
push
insl
cmp
jg
loope
mov
mov
rol
adc
cmp
lock
ret
push
xchg
xlat
sti
jmp
jmp
cs
push
mov
inc
insb
sti
pusha
imul
sub
rorb
adc
mov
nop
sbb
mov
xchg
cld
or
inc
cmp
in
xchg
arpl
or
jo
dec
pop
mov
stos
xchg
jge
nop
es
push
out
mov
or
fcmovnu
divb
hlt
aas
inc
repz
pop
repz
mov
jg
cwtl
ljmp
arpl
into
outsb
or
mov
inc
dec
add
leave
lret
push
xchg
cli
pop
or
scas
cmpb
lock
push
and
pop
mov
std
push
adc
movsb
mov
lods
arpl
add
daa
push
call
imul
sub
lea
test
and
iret
jns
outsb
sbb
fisttpll
or
pop
mov
out
and
cmp
pop
push
sbb
jo
ds
inc
out
test
ret
fcmove
call
or
mov
add
leave
sbb
nop
dec
push
pop
lret
jmp
in
sbb
inc
out
push
cld
aad
sbb
int3
inc
ret
std
pop
adc
jae
cmp
adc
xchg
js
or
test
sahf
sbb
push
movsl
or
psubsw
fcmovnbe
daa
scas
gs
imul
xor
call
scas
test
mov
and
cltd
dec
and
jle
rcrb
lret
dec
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
push
or
xchg
xchg
xor
nop
and
aaa
pop
jp
sbb
mov
lcall
dec
push
lea
jg
xchg
mov
adc
outsl
lcall
ds
inc
dec
or
cwtl
cmpsb
repnz
xlat
or
push
std
call
mov
cld
push
imul
sbbl
sbb
mov
cmpsb
adc
and
add
jmp
xchg
jns
push
pop
sbb
cmp
pop
fwait
jl
mov
stc
lods
outsl
xchg
fdivp
push
imul
lods
in
sbb
adcb
dec
inc
mov
rcr
loopne
inc
js
mov
or
push
mov
mov
cmp
or
roll
dec
jbe,pn
cmc
and
fistpl
ffree
sarb
in
aaa
cmp
sbb
lods
fisubrl
das
or
push
sbbb
xchg
or
push
pop
xor
cmc
xchg
pop
stc
scas
xor
xchg
aas
pushl
cmpsl
iret
andl
pop
mov
xchg
insb
jge
or
icebp
inc
bound
dec
xchg
lock
fwait
cmc
sti
lods
lret
cmpsl
cmp
movsl
sbb
jns
aam
jmp
pop
push
ficomps
popa
mov
in
rcr
imul
mov
fdiv
imul
icebp
cmpsb
inc
jle
lea
pop
test
push
ja
mov
add
pop
insb
adc
mov
aaa
push
jmp
and
fwait
notl
adc
push
das
add
add
sahf
mov
cmp
fwait
pop
mov
cli
in
mov
loop
push
ret
lret
cmp
jl
andl
rorl
sbb
lods
sub
iret
add
out
push
sub
push
xlat
and
daa
push
dec
sbb
or
fisubrl
and
inc
ss
out
mov
pop
lds
mov
shlb
lret
fbstp
dec
in
insl
aam
inc
jge
inc
lock
stos
popa
adc
dec
dec
pop
cmpsb
add
xchg
jbe
push
imul
and
inc
and
lahf
lods
adc
push
pop
xchg
dec
xchg
or
shlb
dec
sarb
cld
subb
cs
inc
popf
xor
jp
fcmovnbe
mov
fmull
aaa
pop
cmpsb
cli
fsubs
fs
cmpsb
pushf
test
dec
dec
popf
insl
adc
dec
insl
push
lds
outsl
aas
xchg
inc
inc
xchg
and
cmp
les
cli
pushf
scas
hlt
cwtl
test
sbb
sbbl
cmp
and
ds
int
je
pusha
mov
xchg
push
push
push
stc
push
xor
ficomps
pushf
cld
out
lea
les
test
cltd
es
sub
jb
sbb
imul
popa
fiaddl
fistps
mov
xchg
add
inc
sarl
cmc
jp
or
jp
inc
mov
ret
push
lds
ljmp
mulb
shlb
lea
int
xor
ficomps
and
fstp
inc
xorl
sbb
jnp
ja
jp
jmp
pop
jg
bound
repnz
push
lret
sub
lods
cld
imul
cmp
mov
pop
shll
mov
pop
sbb
out
xor
add
outsb
mov
jno
pushf
dec
inc
adc
stos
mov
mov
push
cmp
ret
pop
xor
dec
mov
je
pusha
scas
les
jl
mov
mov
xor
push
xchg
jae
pop
loopne
je
add
movsl
cmp
jo
or
xor
mov
stos
out
sub
sub
sbbl
push
repnz
int3
jb,pn
popf
scas
and
scas
sub
push
out
sbb
push
mov
shl
mov
aaa
shrb
cwtl
rol
inc
fst
push
cmp
mov
fcmovb
lahf
fdecstp
mov
inc
and
pop
pop
iret
incl
sub
les
inc
fmull
mov
loop
mov
xchg
in
push
push
cwtl
insb
mov
adc
pop
xor
and
test
fs
cmp
paddq
mov
arpl
ss
xor
pop
inc
imul
cmc
addb
xchg
les
add
lods
cmp
lods
jnp
mov
dec
lea
push
adc
repz
mov
js
cmpsl
mov
push
xor
pushf
mov
pop
pop
sub
mov
xor
and
ja
repz
pop
into
aam
push
repz
adc
mov
cmpsl
mov
je
cltd
add
mov
or
xchg
fnstsw
pop
fwait
test
dec
adc
mov
std
in
dec
and
cwtl
lock
out
clc
jnp
mov
aam
lods
ror
cmovnp
jmp
dec
aad
lock
cmp
mov
lahf
lea
dec
cmp
jecxz
dec
cwtl
les
sbb
mov
adc
in
je
sbb
push
bound
mov
push
das
aam
jle
cmpsl
lret
in
and
mov
mov
and
test
gs
lock
inc
int3
dec
xor
les
std
aad
xor
push
add
subl
nop
mov
xlat
xchg
inc
or
push
add
xchg
adc
xchg
mov
jg
xor
xchg
ja
outsb
sbb
stc
pop
icebp
ljmp
sbb
inc
cmp
xchg
inc
outsl
sbb
inc
xor
movsl
mov
sbb
stos
cltd
cmc
cli
mov
push
aad
scas
je
leave
pop
jecxz
arpl
ficomps
rolb
sbb
repnz
push
adc
push
sti
xchg
daa
sbb
xchg
jno
push
jg
ds
and
ja
dec
xor
jge
fld
ljmp
shr
inc
xchg
fwait
test
imul
push
or
dec
sarb
andb
iret
mov
orl
lods
lock
call
jns
notl
push
xchg
cmp
cwtl
push
push
rorb
jecxz
xchg
mov
cmp
xor
jle
sbb
aad
out
cmp
ds
pop
in
adc
pop
cld
ss
loope
pop
aaa
insl
push
push
xor
cmp
cmp
outsl
jge
loope
out
xor
sbb
push
mov
out
rorl
mov
ds
mov
xor
dec
mov
hlt
mov
hlt
add
pop
jmp
sub
jmp
pop
mov
arpl
dec
or
in
fiaddl
jns
arpl
mov
xor
pusha
ja
jb
and
fldl
adc
push
jae
push
rorb
or
popf
xchg
call
addr16
pop
aas
fcoml
pop
fstp
ja
sub
xchg
aaa
or
adc
pop
jle
cmc
inc
and
test
push
mov
out
in
movsb
inc
mov
pop
pop
cltd
test
jl
sti
inc
leave
stos
lret
sbb
in
fistpll
xorl
fbstp
out
popa
push
xchg
scas
lret
pushf
addr16
adc
fdivrs
cmp
hlt
xor
push
mov
mov
stos
xor
sub
and
xchg
cld
xchg
imul
or
or
je
das
pusha
mov
xor
mov
outsl
push
testb
aaa
aas
notl
test
sub
cmp
add
dec
mov
subb
aam
inc
inc
push
mov
imul
out
in
adc
jno
sahf
movsl
or
icebp
outsl
inc
adc
lods
push
scas
fwait
sub
scas
add
xchg
in
xor
mov
jg
add
mov
int3
sets
cmp
jns
test
pop
inc
nop
sub
addr16
int3
dec
in
xor
pop
shll
movl
cmc
sub
jp
out
xor
sub
sbb
imul
in
insb
out
or
jmp
repnz
mov
repnz
shrl
cmp
loop
dec
pcmpeqw
mov
sbb
cs
inc
xorl
rcrl
push
in
mov
push
mov
mov
dec
inc
and
loope,pt
dec
aas
jno
jl
popa
and
ret
jae
mov
mov
xchg
add
pop
xchg
inc
mov
repnz
stc
jae
in
xchg
pop
push
dec
scas
mov
outsb
and
mov
lods
jae
and
inc
adc
inc
out
jge
mov
fiaddl
pop
in
sub
adc
cmpsl
fisubs
jecxz
add
out
mov
imul
pop
push
mov
insl
xchg
mov
insb
mov
pop
xor
cs
sbb
jae
insl
popa
outsl
shr
cmp
cmp
gs
mov
rcll
xchg
jecxz
loop
rol
enter
stos
out
lahf
inc
lret
repnz
add
sbb
jge
loop
gs
fidivl
cmc
pop
dec
test
adc
pop
cmp
adcl
aam
xor
imul
scas
int
ret
jne
pop
clc
insl
insb
cltd
xor
xor
dec
insb
pop
insl
test
mov
ret
and
icebp
aad
insl
scas
push
push
xchg
aad
add
sub
imull
xorb
rcrb
jmp
inc
xchg
loopne
or
xchg
jne
insb
das
adc
inc
sbb
xchg
dec
jg
mov
jecxz
test
sub
mov
repz
stos
inc
add
mov
shlb
mov
sub
pop
push
jg
jbe
scas
xor
inc
or
test
popa
mov
lods
pop
insl
leave
mov
inc
xlat
gs
fists
iret
loope
pop
mov
add
pop
pop
cmpsb
pop
data16
mov
mov
aas
pushf
inc
add
sarl
outsb
andb
mov
lret
add
mov
mov
mov
or
xchg
mov
push
xor
xor
and
ror
and
push
pop
push
daa
push
jg
mov
mov
mov
add
std
stc
popa
push
mov
shrb
mov
mov
pop
movsl
xor
stos
dec
leave
std
jo
and
push
push
js
push
ret
xlat
add
mov
cld
clc
push
int
pop
sarl
inc
or
dec
test
adc
pop
mov
adc
and
js
jp
push
push
pop
push
push
push
jae
bound
add
cmpps
out
xchg
ss
sti
hlt
in
fiadds
popf
and
fnstenv
fsubrl
and
xlat
stos
push
in
addr16
xchg
lret
scas
jb
ss
xchg
jne
jne
out
mov
push
enter
and
je
dec
jle
hlt
les
jge
cmp
stos
inc
popa
mov
insl
or
adc
push
lahf
xchg
test
or
scas
dec
mov
add
pop
push
pop
cmp
test
jnp
lods
mov
jb
dec
loop
push
push
adc
call
lcall
nop
add
outsb
lods
mov
mov
repz
mov
jg
iret
inc
inc
in
fstpt
insl
or
movsl
andb
mov
insl
in
sbb
in
rorb
fnstenv
test
daa
adc
mov
adc
pop
ljmp
loope
xor
fwait
push
push
push
cmpsl
dec
adc
je
outsb
outsl
push
lods
scas
xor
xchg
fidivrl
sbb
mov
xchg
push
pop
fwait
cwtl
mov
hlt
mov
arpl
and
nop
mov
push
and
or
dec
add
sub
lret
and
das
int
cmpsl
xor
repz
pop
aad
lods
popf
cmp
inc
dec
dec
mov
and
inc
pop
push
xchg
cli
cmp
js
push
test
pop
sub
mov
dec
add
mov
dec
outsb
call
sbb
jl
pop
in
cmp
push
movl
mov
jne
inc
push
ret
psrad
or
sbb
ja
jno
xchg
mov
jmp
out
xchg
insl
les
addb
ss
cmp
add
mov
adc
gs
test
pop
fucom
xchg
jbe
jg
mov
mov
xchg
mov
xchg
dec
out
push
jle
clc
xchg
out
leave
cvtsi2ssl
pop
aam
lahf
mov
cmp
mov
or
addr16
pushf
rcll
add
jns
adc
cmp
cld
xchg
jo
cmp
idivb
mov
es
es
arpl
xchg
lret
out
xor
cwtl
adc
cmp
popf
mov
pop
pop
and
pop
sub
lcall
xchg
sbb
inc
jno
icebp
mov
orb
mov
pinsrw
es
mov
inc
xchg
js
lods
repz
xchg
dec
sahf
in
in
pop
push
dec
mov
cmp
cmp
mov
out
and
jmp
mov
pop
push
mov
aam
and
arpl
cmpl
pop
mov
jg
mov
xchg
scas
lret
adcl
adc
into
fdivrs
arpl
sbb
mov
jno
add
int
icebp
icebp
fnsave
iret
cmp
mov
dec
jecxz
shll
dec
dec
mov
loopne
add
call
in
push
pop
push
jo
push
mov
lcall
repnz
ret
xor
jno
jge
mov
mov
and
push
and
mov
cmp
les
out
ret
cld
mov
inc
iret
gs
mov
mov
xlat
push
jle
or
je
mov
mov
sahf
addr16
cs
les
add
loope
loopne
mov
jb
or
pop
cmc
or
dec
leave
ja
dec
test
mov
shl
pop
mov
insb
ds
ljmp
xor
mov
out
jns
std
dec
js
mov
jns
loop
mov
and
fsubs
cmp
movsl
cmp
icebp
fimuls
add
test
bound
mov
push
xlat
fimuls
ret
dec
jecxz
jns
dec
addr16
test
lds
stos
jbe
cmp
xor
add
inc
mov
push
negl
fiaddl
pop
sub
or
cmp
test
and
aad
push
hlt
fpatan
mov
xor
cld
mov
loope
mov
mov
daa
mov
xchg
ret
loop
xchg
outsb
adc
sub
push
push
inc
cs
hlt
in
sub
fwait
icebp
inc
pop
iret
cmc
int
shll
mov
pop
je
sub
imul
push
lods
sbb
mov
push
scas
out
mull
pop
mov
fwait
stos
test
jae
out
orl
push
sbb
dec
rclb
ret
loop
pushf
cmpsl
adc
pop
pop
or
mov
inc
test
mov
ret
adc
sub
cmp
pop
scas
xlat
imul
ret
mov
jl
jb
lods
add
pop
in
test
lods
mov
pop
xor
xor
dec
outsb
insl
sub
mov
add
sub
aad
cwtl
xchg
popa
mov
test
and
sub
pushf
or
mov
ret
push
out
pop
icebp
arpl
ret
fidivl
icebp
aaa
jge
sub
imul
xchg
ds
test
out
pop
and
inc
jg
and
stos
aam
push
insb
repz
ja
cli
inc
push
inc
cmp
gs
cmp
out
sub
xor
mov
and
jbe
push
xor
push
enter
sub
and
xorl
dec
rorb
push
ds
loope
fnclex
in
loopne
and
mov
adc
test
popf
sti
clc
xor
scas
jns
mov
lcall
sbb
mov
mov
jmp
mov
sub
cmovl
sub
addr16
mov
pop
gs
cmpsb
pop
mov
mov
cmpsl
jle
sub
hlt
xor
cltd
cmc
dec
xor
mov
je
mov
nop
and
jmp
mov
adc
xchg
and
clc
push
out
mov
out
in
sbb
sub
cltd
push
mov
into
mov
add
cmp
ss
sahf
ljmp
test
pop
xchg
mov
pop
gs
sub
push
shll
xchg
jmp
mov
leave
out
jne
mov
xchg
test
cmp
push
or
push
jne
jecxz
sub
push
mov
pop
rorl
sub
in
push
stos
sarl
js
mov
in
movb
and
into
mov
and
cmp
jnp
cmc
imul
add
data16
in
clc
lods
jo
fs
shll
pop
test
aam
mov
cltd
mov
or
cltd
mov
out
push
in
mov
notb
inc
mov
dec
push
hlt
xchg
iret
sub
cmpsl
xchg
sub
aad
mov
push
mov
pop
xor
enter
fidivrl
test
cmc
imul
inc
fnstenv
repnz
sub
ret
push
scas
pop
gs
inc
dec
mov
lea
dec
mov
nop
loopne
rcrb
push
daa
add
roll
dec
outsl
ljmp
and
lds
js
sub
and
test
sub
int
pop
and
sub
mov
dec
pop
inc
cmp
loop
lea
imul
cld
in
xchg
mov
iret
jno
sahf
adc
icebp
lcall
loopne
ret
and
xor
or
dec
cli
cmp
lds
pop
add
popa
mov
rcrb
dec
imul
adc
sbbb
fbld
push
xchg
push
int
testl
mov
lret
push
into
pop
xchg
push
push
push
addr16
pop
jo
or
cwtl
addr16
mov
out
clc
xor
sub
int
test
jp
pop
mov
mov
stc
cwtl
cmc
into
sbb
or
pop
mov
adc
inc
sahf
xor
lcall
cmp
icebp
lret
mov
aad
jle
xchg
sbb
pop
rclb
sub
cmp
cmpsb
add
stc
lds
xchg
xor
xor
push
or
cmpsl
jb
push
adc
int
cmp
jl
mov
lock
lret
cmp
inc
push
repz
pop
iret
test
jno
mov
ljmp
xchg
movsl
xchg
rolb
jnp
fdivs
test
lods
add
cmp
mov
loop
ret
mov
gs
fistl
in
imul
mov
pop
xchg
xor
push
xor
adc
or
std
jg
pop
fisttps
adcb
shll
dec
test
xchg
pop
enter
or
mov
jb
rorl
push
mov
sub
xor
inc
xlat
jnp
pop
mov
jg
or
add
addr16
mov
out
das
fadds
popf
add
mov
rcrl
imul
sbbb
into
lock
adc
fstps
rolb
pusha
adc
lret
in
out
or
jp
mov
jo
and
pop
sahf
and
cwtl
ds
xor
xor
xchg
inc
mov
aad
aaa
movsl
push
daa
loope
inc
inc
xchg
mov
ror
xchg
out
mov
mov
push
cmpl
dec
sbb
aaa
xor
lahf
stos
jb
or
mov
icebp
subb
ret
mov
push
loope
lds
xchg
pop
add
add
cmp
outsb
jp
repz
filds
icebp
out
push
cs
mov
std
cmp
adc
adc
jmp
xchg
push
mov
xchg
cmc
jae
cli
push
mov
lahf
add
ljmp
inc
add
cmp
xor
lods
stc
rcrb
ss
mov
stos
gs
mov
cmp
js
ret
test
push
lds
fisttpll
jecxz
xchg
into
mov
inc
lods
decb
adc
jg
push
cmp
dec
xchg
test
adc
mov
fwait
add
ja
aam
cmc
inc
lret
outsl
mov
out
push
mov
popf
sarb
bound
push
add
lcall
pop
mov
sub
mov
mov
mov
aam
neg
fsts
jno
xor
div
jne
loope
lea
das
inc
outsl
cld
jge
lret
dec
aaa
cmp
add
jg
fisubl
mov
push
mov
outsb
in
dec
push
int
pop
out
js
pop
or
xchg
sbb
mov
repnz
insl
sub
dec
xchg
aam
and
mov
sub
xlat
mov
sbb
xchg
push
sbb
lock
cli
mov
rorb
mov
pop
dec
cli
outsl
les
pop
cmpl
inc
push
dec
pop
cmpsb
ss
jbe
mov
imul
daa
dec
ja
xchg
cs
aaa
loopne
andl
imull
rcrb
mov
xchg
mov
gs
fnstenv
xor
mov
jb
popa
pop
loop
jp
and
pop
jnp
push
mov
sarb
mov
enter
iret
sub
sub
ret
jle
cmp
imul
insl
repnz
inc
fidivrs
inc
rsm
fisttps
mov
mov
mov
gs
adc
xchg
add
xchg
inc
push
ds
inc
sbb
hlt
rorl
pushf
cltd
pop
inc
and
inc
pminub
sbb
xor
xchg
pop
mov
push
inc
inc
inc
mov
adc
dec
cltd
xchg
jae
cs
jmp
into
pop
rorl
insb
lret
sbb
or
fcoms
je
inc
adc
out
and
je
cmp
loopne
xor
push
push
addr16
xor
xchg
test
adcl
lds
arpl
push
pop
sbb
je
sub
mov
mov
add
dec
les
pushf
jle
sub
cltd
dec
mov
or
outsl
xor
xorb
cld
insb
aad
mov
fdivs
adc
cmp
add
leave
aad
je
sbb
cltd
pusha
pop
imul
mov
cs
ficompl
fsubrp
jl
stos
out
cwtl
xlat
outsl
inc
outsl
adc
cmp
push
fcmove
pop
lret
lds
js
pop
jmp
pop
mov
call
out
xchg
pop
sahf
mov
aas
pop
jge
cmpsb
push
repz
mov
cmp
add
xchg
and
jnp
repnz
dec
dec
lods
xor
add
js
ret
push
add
cmp
inc
js
aam
sti
test
push
inc
jecxz
mov
cmpsl
inc
fstpt
fistps
rcrb
orl
test
xchg
mov
inc
inc
jnp
dec
int3
stos
lds
xor
gs
fnsave
xor
orl
lahf
sbb
inc
movsb
jo
jp
pop
xor
dec
into
or
sahf
adc
ret
lcall
jle
jne
lahf
jo
cmpsl
mov
lret
call
push
test
lea
repnz
cmp
mov
mov
mov
xchg
add
es
stos
loope
sahf
xor
cli
loopne
xor
aaa
lcall
fcmovb
repnz
sub
out
push
scas
adc
dec
adc
or
xlat
xchg
pop
jae
imul
pop
movb
cmp
cmp
lret
out
and
cmpsl
push
shlb
xor
pop
pushf
mov
mov
add
push
and
mov
mov
pop
shl
mov
ja
mov
sub
and
lods
mov
adc
outsb
sbb
sub
xor
fcomps
in
and
out
or
inc
sbb
fsubrs
mov
push
push
dec
nop
mov
fistpll
or
out
fwait
mov
xor
sub
lea
push
or
pop
push
addl
xchg
imul
and
mov
leave
add
push
addl
push
adcl
mov
or
inc
ja
push
or
jp
jge
xor
mov
cltd
stos
jle
add
xor
stos
cltd
cltd
xchg
jno
pop
sarl
aad
adc
jbe
and
mov
cli
or
insl
out
mov
xchg
test
es
jb
nop
mov
push
aad
mov
sbb
pushf
loopne
xchg
add
negl
out
mov
jns
stc
mov
mov
add
adc
add
push
mov
pop
pop
push
mov
cwtl
adc
in
xchg
sbb
and
std
inc
test
lock
push
xchg
add
push
adcb
nop
mov
int
mov
pushl
mov
test
out
pop
xchg
sbb
mov
or
adc
stos
fsub
add
push
jb
and
mov
and
and
pop
xchg
push
aad
ds
cmp
mov
out
xor
mov
in
loop
call
jno
and
and
ret
jo
lds
dec
mov
mov
scas
loop
xor
adc
dec
inc
int3
jle
add
out
push
cmovnp
out
lods
fstpt
cli
loop
pop
xchg
in
fwait
call
xchg
or
ja
pop
fildl
setge
add
xor
int3
adc
add
mov
jp
dec
test
jle
sub
and
shrl
test
int
pop
push
or
or
je
push
or
sbb
xor
daa
movsl
lea
lds
adc
test
xor
add
sbb
ja
scas
iret
btl
inc
inc
fs
in
fucomi
data16
cld
sbb
subl
xorl
lock
cmc
sarb
cmp
stc
loop
ror
cmp
ja
inc
and
in
mov
adc
mov
push
inc
dec
xchg
dec
mov
push
sub
sbb
loop
sub
bound
mov
pop
add
in
add
repz
mov
in
daa
test
dec
movsb
xchg
pop
fdiv
push
je
push
mov
pop
xor
jns
xchg
call
inc
fwait
call
outsl
inc
xorb
incb
cmp
push
mov
pop
in
js
mov
push
addr16
mov
mulb
iret
mov
xor
pop
adc
nop
and
inc
mov
pop
jle
dec
lcall
lcall
push
or
inc
out
cmpsb
into
push
lcall
adc
mov
dec
shlb
leave
fmull
cmovns
fbld
sti
testl
pop
xchg
lret
xor
mov
mov
loop
xchg
inc
movsl
xlat
sbb
cmp
and
insl
daa
add
movsl
pop
inc
and
fs
mov
adc
cmpsl
inc
pop
cmp
es
faddl
push
ds
std
test
push
dec
jle
in
in
pop
rcrb
dec
daa
adc
dec
out
push
cmp
mov
rclb
jnp
fisttpll
insb
inc
jl
sarl
cli
sarl
add
daa
sub
fmul
xchg
test
enter
iret
scas
repnz
or
sub
in
insl
xorb
adc
mov
lock
mov
sub
andl
imul
fadds
fcomip
xchg
mov
mov
jl
mov
cs
mov
out
in
shl
jmp
subl
shl
push
inc
cmp
cli
push
xor
addr16
out
pusha
jns
ds
jbe
out
ret
loop
or
out
inc
ret
dec
mov
ja
leave
sub
sahf
jae
test
mov
pop
imul
dec
aad
iret
aam
repz
js
mov
mov
push
test
or
and
rcr
int
pop
test
aam
fucomi
mov
iret
aas
push
dec
imul
xchg
jmp
loopne
sahf
xorl
fcomps
push
push
popf
dec
out
pop
gs
bound
sub
fcomi
fdivp
imul
fidivrs
std
sub
xor
push
nop
mov
cmc
iret
push
mov
lds
dec
test
mov
lds
jg
dec
movsb
jnp
arpl
fstpt
dec
jb
imul
push
dec
daa
cmp
sbb
lea
sub
fdivrl
insl
lea
xchg
mov
mov
xor
sahf
movsl
fs
jne
rolb
outsl
out
jge
lea
sub
cmpsb
pop
and
les
in
cltd
mov
ret
push
adc
push
imul
xchg
cmp
test
sbb
jp
ja
push
int
test
jl
mov
and
jb
push
add
xchg
shrl
leave
sub
lcall
fisttps
and
xor
clc
cmp
test
add
cmp
loopne
push
jb,pt
and
inc
hlt
mov
iret
pop
push
sahf
mov
lock
lret
scas
jmp
sub
aaa
push
sbb
cwtl
cld
hlt
cmp
movsl
inc
pop
pop
in
movsl
pop
cmp
popf
fisttpll
into
repnz
in
pop
jmp
xor
stos
lods
js
add
push
dec
into
fsubp
xchg
adc
cmpsl
leave
pop
sbb
insl
cld
mov
push
mov
mov
add
imul
pop
dec
mov
sub
aad
es
enter
lret
push
pop
mull
jns
adc
adc
cmpsb
jae
pop
sub
std
scas
push
stos
popa
loop
xchg
inc
jne
out
pop
push
cmpsl
inc
and
dec
push
pop
cmp
loope
cmp
xchg
test
sbb
push
mov
sbb
nop
pop
and
fcmovne
lret
adc
dec
fimull
jl
and
stc
stos
testb
scas
mov
sub
mov
outsl
in
int3
and
sbb
xchg
mov
cli
push
push
lahf
push
out
gs
addr16
pushf
in
in
lret
lret
jns
test
mov
mov
es
push
fdivl
int3
xlat
lret
adc
jmp
das
mov
or
mov
scas
mov
int
std
adc
sub
shll
mov
push
dec
sub
xchg
in
adc
adc
cs
mov
in
xchg
push
xchg
or
jb
inc
arpl
movsl
sub
out
ljmp
ret
cwtl
cmp
xor
insl
sbb
add
cld
inc
pushf
xorl
add
call
bound
or
pop
push
call
sbb
push
mov
sub
mov
or
jo
pop
les
cmpsl
movsb
xor
xlat
mov
aad
mov
loopne
pusha
mov
jb
jmp
int3
jge
shlb
ja
scas
add
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
xor
xor
xor
push
push
movzwl
adc
mov
mov
or
mov
mov
mov
or
andl
xorl
movl
movl
mov
mov
sub
mov
xorl
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
orl
mov
mov
or
sub
xor
xor
and
mov
sbbl
orl
adc
mov
mov
xor
xor
mov
sub
and
sub
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
call
cmpl
jb
add
mov
adc
orl
mov
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
mov
add
push
and
mov
mov
lea
mov
mov
mov
mov
andl
xor
subl
add
adcl
mov
dec
mov
sub
mov
mov
andl
add
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
mov
xor
mov
andl
add
movl
cmp
je
movl
mov
jmp
mov
mov
cmp
movl
jne
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
mov
xor
mov
dec
xor
adc
add
xor
or
adc
mov
mov
adcl
mov
xor
addl
add
imul
mov
orl
xor
movl
add
movl
cmp
mov
mov
push
movl
je
movl
mov
orl
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
subl
mov
addl
xor
xorl
add
xorl
imul
mov
movl
jmp
and
mov
xor
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
mov
mov
sub
jmp
inc
sbb
fwait
jnp
mov
mov
jp
pop
jp
push
push
pop
outsl
add
repz
mov
cld
orb
bound
lcall
cltd
add
sub
sbb
idivl
pop
xor
fwait
aaa
mov
dec
in
sbb
ret
and
pop
add
sti
xchg
or
mov
jbe
xchg
jp
inc
mov
add
addr16
js
lcall
mov
add
push
scas
lods
movsb
xor
inc
fcompl
popa
cmp
lock
pushf
push
in
js,pt
out
mov
test
fcmovne
aas
leave
add
xor
cmpsb
xchg
arpl
mov
clc
je
or
fld1
mov
andl
mov
ds
in
ljmp
jge
lahf
xor
xlat
jecxz
out
cmpsb
ss
ret
push
scas
ret
out
mov
cmp
sti
xor
sub
lods
jb
mov
or
xchg
in
and
scas
xchg
mov
mov
cmp
jp
aad
fs
insb
stc
dec
push
test
lret
ss
ret
mov
push
adc
fimull
pop
jns
mov
xchg
mov
or
add
xchg
pusha
insb
lret
jg
enter
mov
mov
mov
mov
sbb
into
ds
out
mov
pop
push
sub
mov
cmp
lds
orl
dec
mov
fisubrs
or
ret
xchg
xor
loope
lcall
addr16
push
inc
jns
and
fnsave
ffree
add
xchg
jb
pop
cli
xchg
add
lahf
mov
pop
popa
cs
dec
out
repnz
mov
loopne
popa
ret
test
movsb
arpl
mov
mov
inc
lcall
repnz
lret
lahf
inc
andb
jmp
or
adc
and
push
icebp
push
cltd
hlt
xchg
push
inc
and
inc
push
popf
dec
xchg
cmpsb
gs
iret
or
inc
jae
cmc
push
sbb
in
xchg
adc
insl
clc
popf
add
add
lret
imul
ret
loop
xchg
sbb
adc
pop
ret
pop
lods
notl
add
imul
ret
and
jp
dec
insb
jno
dec
loope
mov
mov
adc
cltd
loope
mov
or
push
and
pop
adc
test
push
sub
insl
pop
adc
movsl
dec
aas
mov
sub
stos
xor
jge
inc
inc
call
jnp
sbb
sti
or
xlat
mov
xchg
push
xor
sub
mov
loop
jb
and
rol
arpl
adc
jl
dec
cmp
daa
in
push
lock
jns
mov
nopl
mov
or
cli
cmpb
insl
test
xchg
or
xor
stos
lcall
xor
out
cmp
sbb
xor
jge
fisttpl
dec
pop
les
push
sti
roll
cmp
inc
popf
and
addr16
mov
incl
mov
inc
out
add
scas
push
popf
movb
fidivrs
jno
or
das
xor
cli
inc
shlb
rcll
test
dec
cli
xchg
call
mov
ss
add
add
mov
jge
mov
push
enter
in
rorb
mov
scas
sub
or
cwtl
sbbb
ret
adc
jbe
pop
sbb
jnp
sahf
and
stos
cmpsb
insb
popa
lea
add
cmpb
or
mov
inc
ds
aas
push
mov
notl
movntq
ljmp
and
leave
jb
loopne
into
out
xor
mov
jne
jbe
add
cli
pushf
inc
addl
rol
pop
cmp
sti
push
sbb
stos
movsb
iret
scas
push
scas
ljmp
xlat
cmp
push
pop
mov
je
and
lods
aas
aad
push
test
push
iret
push
and
mov
add
sbb
cmpsl
or
mov
aas
lods
sub
lock
inc
sub
sbb
arpl
iret
ljmp
out
std
fiaddl
stos
dec
cld
int
dec
pop
push
pusha
fcomps
shll
repnz
fdivs
xchg
cmp
sbb
jnp
pop
pop
fdivl
inc
cmp
or
push
roll
xor
mov
add
stos
ss
push
ret
xchg
mov
fwait
stc
repnz
adc
shlb
mov
fwait
mov
xchg
lock
pop
std
pop
lea
popa
sub
mov
int
test
call
sub
push
or
das
ret
mov
fs
cld
xor
ret
fidivrs
push
std
dec
mov
jl
sti
call
jle
dec
sti
xor
shlb
jns
mov
and
or
repnz
xor
cmpl
clc
xlat
shrb
mul
je
xor
add
jnp
les
test
rcrb
adc
cmp
xor
sub
mov
sbb
enter
xchg
fs
mov
mov
iret
inc
daa
xchg
mov
pushf
stos
or
cwtl
sub
fsubs
fmulp
inc
adc
xchg
fisubs
fldl
xchg
push
pushf
dec
movsb
ficoml
mov
ds
mov
mov
aam
inc
cmp
cmp
repz
push
push
decl
imul
fwait
out
das
jo
shlb
adc
xor
in
test
mov
addb
popa
repz
sub
pop
test
in
fsub
xchg
gs
mov
stos
je
jne
sub
ja
enter
push
adc
mov
xorl
dec
mov
mov
lods
and
pushf
mov
lock
addb
enter
fwait
into
and
test
pop
imul
scas
adc
jp
enter
mov
daa
mov
popf
rclb
dec
mov
lret
je
out
loop
imul
jbe
shll
xchg
sbb
test
mov
jae
jge
push
test
out
sub
mov
xchg
scas
mov
popf
movsb
dec
dec
push
in
cmc
xlat
sub
jbe
in
xchg
xor
int3
sbb
enter
dec
push
mov
out
mov
out
cltd
fisubl
mov
punpckhdq
mov
scas
rcll
in
xchg
shrl
fstpl
cmpsb
inc
dec
aas
inc
dec
call
bound
jne
inc
cli
addr16
mov
add
jg
adc
pop
pushl
mov
cmpsl
sub
aad
hlt
jae
sbb
jne
iret
cmp
push
jl
scas
mov
jmp
pop
imul
pop
mov
mov
movsl
sbb
lods
leave
std
lock
dec
bound
call
jnp
les
pop
out
pop
xchg
pop
pop
out
popa
adc
jns
mov
outsl
mov
aam
rcr
mov
pop
sub
es
stc
sub
xchg
out
out
dec
push
popa
xchg
lods
xchg
push
xchg
sub
testb
xchg
mov
mov
mov
stos
sub
sub
test
xchg
dec
hlt
sbb
lds
es
fld
iret
inc
movsl
and
pop
mov
out
clc
call
inc
inc
rcrb
sbb
imul
cltd
fwait
loop
daa
push
sub
lret
stos
jl
xor
fisttps
pop
lret
stos
pop
mov
or
inc
xchg
jnp
add
inc
pop
cmc
roll
and
dec
rorb
jp
fidivrs
orb
jbe
into
cwtl
add
pop
mov
inc
icebp
add
popa
mov
mov
mov
clc
stos
les
in
clc
mov
jae
xor
push
mov
in
mov
iret
adc
sahf
imul
xor
add
stos
sub
adc
in
sbb
enter
cmpsl
xor
xor
fwait
data16
dec
xchg
and
xor
adc
sub
adc
push
stc
imul
cwtl
ficomps
lock
insb
cmp
cwtl
lock
mov
lds
mov
sbb
push
sahf
fsubs
into
push
add
add
sub
xor
mov
sub
add
jl
xchg
mov
mov
ds
jne
popf
imul
or
test
insb
cli
mov
jp
dec
fdivr
in
movsb
xchg
mov
loop
jo
mov
pop
scas
xchg
roll
jae
notl
xor
sub
outsb
push
and
adc
mov
lock
into
mov
nop
xchg
jg
clc
jge
lret
mov
add
mov
sub
in
add
lret
mov
loop
push
pusha
pop
sbb
cmc
mov
lock
leave
sub
lret
into
lret
xor
adc
movsl
test
xchg
xor
or
fst
shll
jge
xor
cmp
pop
fcoml
and
scas
cli
sub
test
push
push
mov
incb
adc
dec
jbe
arpl
mov
adc
mov
dec
add
jl
and
fbstp
setbe
add
sbb
mov
bound
jo
leave
pop
jae
cmpsl
lret
sbb
jns
ret
push
dec
xchg
jnp
test
xchg
sub
xor
or
inc
sub
aaa
sar
push
shlb
mov
jecxz
mov
sbbl
lock
int3
cld
xchg
std
in
push
cltd
xchg
dec
jmp
dec
inc
sahf
xchg
adc
jg
mov
cmp
sti
movsl
ret
mov
push
pop
mov
or
ja
pop
lahf
push
mov
and
movsl
adc
imul
jecxz
xor
popa
mov
movsb
pop
xor
mov
dec
rcrb
xchg
pop
cmp
rol
lea
fs
ds
repz
inc
in
pop
mov
and
outsl
fsubl
ret
aam
daa
mov
add
adc
test
mov
aam
cmp
push
inc
test
pop
mov
shlb
inc
hlt
rcrb
testl
jns
leave
insb
sarb
aaa
mov
imul
xchg
das
mov
mov
xor
mov
enter
sub
xchg
and
pop
andnps
sbb
cli
sub
repz
and
add
xchg
push
ljmp
sbbl
adc
cmp
shlb
xor
xor
or
inc
xchg
cli
mov
out
es
cmp
xchg
js
and
cmp
fmull
jl
push
std
jbe
push
adc
pop
mov
dec
aaa
mov
xor
mov
fidivs
int
in
mov
mov
cmpsl
or
mov
mov
in
inc
icebp
jb
or
lret
enter
je
cmp
and
je
je
movb
aad
daa
loop
add
fdivrl
dec
sub
fisttps
push
pop
scas
fisubrl
cmp
mov
push
ficomps
cmp
outsl
fcmove
jl
fsubrl
daa
push
add
mov
int
dec
ret
test
pushf
lods
imul
scas
mov
rolb
xchg
mov
enter
imul
stos
push
adc
push
cmc
lahf
fwait
jp
inc
xor
in
cmpsb
test
out
in
cld
xlat
adc
dec
repz
hlt
mov
and
jb
repnz
jne
add
fwait
repz
sub
mov
xor
mov
push
or
ds
sub
pop
ret
lds
repz
adc
pop
test
hlt
sti
xor
and
insb
scas
adc
imul
push
xchg
adc
jbe
adcb
jne
inc
lcall
lea
pop
inc
testb
cs
lahf
xchg
bound
pop
jp
aam
das
and
xor
ret
cld
add
add
inc
movsb
xchg
mov
aas
test
aaa
xchg
push
ja
sarl
mov
arpl
lock
push
xchg
in
pushf
hlt
dec
jg
cmpsl
jmp
inc
mov
out
pop
in
dec
in
aad
jmp
pushl
ss
or
inc
jnp
gs
fstp
xchg
jmp
or
mov
adc
imul
or
jae
mov
xchg
cli
movsl
xor
jae
push
mov
xor
cmp
outsl
icebp
jl
sbb
fnstenv
push
aam
xor
dec
mov
sbb
or
or
pop
mov
or
sarl
loopne
lcall
jbe
sbb
fsubs
repz
mov
ss
scas
call
lock
sub
mov
jmp
xchg
push
mov
mov
inc
int3
ja
inc
sbb
call
mov
divl
pop
mov
sub
push
push
ljmp
pop
jge
push
daa
add
or
sub
xchg
mov
push
and
out
cmpsl
sub
test
mov
shrb
xchg
imulb
movsb
inc
mov
popf
aas
jg
cmpsl
cmpsb
add
cltd
lods
insl
push
insl
add
mov
sarl
mov
jae
adc
shlb
xchg
xor
add
sub
cwtl
js
gs
mov
push
roll
dec
lock
mov
das
faddl
mov
xchg
lea
std
aam
jl
inc
in
clc
stc
test
das
pop
cli
push
enter
xchg
insb
das
subb
mov
not
mov
mov
mov
lods
pusha
inc
mov
in
push
outsb
ljmp
or
addl
jne
sbb
in
leave
lock
nop
and
sub
addr16
add
jecxz
data16
xor
aas
mov
and
popa
fldt
jns
sub
int3
icebp
pusha
int3
int
mov
cmc
call
push
mov
add
xor
sub
mov
loopne
and
jp
jge
or
aaa
pop
fiaddl
mov
push
mov
cmpsl
and
test
xor
stos
mov
jge,pn
xchg
or
lods
outsb
adc
dec
ljmp
push
dec
outsb
xchg
ljmp
jne
ss
cmp
into
insl
xchg
lods
xor
cltd
jno
mov
and
push
sub
addr16
leave
sub
cli
bound
testl
add
insb
jg
xchg
das
data16
aaa
fcmovu
push
daa
xchg
pop
mov
mov
mov
repnz
subl
or
and
xchg
push
jb
xor
fldenv
adc
dec
dec
adc
mov
cmp
or
sub
lcall
jnp
or
pusha
loopne
cmp
lods
jnp
scas
sub
sarb
shlb
iret
loopne
and
inc
daa
sti
xor
dec
nop
xchg
pop
loop
dec
into
outsb
cmovs
mov
dec
pop
int
cmp
add
pop
sti
jno
scas
outsb
sbb
icebp
xchg
not
adc
shrl
lods
push
insl
fistl
scas
mov
rorb
mov
push
fiaddl
jg
scas
add
fs
cmp
stos
lcall
adc
mov
and
out
pop
in
das
jmp
xlat
mov
lret
wrmsr
lods
nop
bnd
mul
or
cmp
xor
or
push
or
ss
push
icebp
adc
lods
je
dec
jmp
enter
stc
mov
xchg
ja
rcrl
pop
add
loop
clc
jp
push
jmp
xchg
xor
adc
jb
ret
movsl
aaa
aad
add
outsb
xchg
repz
mov
add
data16
mov
mov
mov
sar
insb
or
and
mov
inc
cmpsl
dec
push
mov
lea
imulb
push
lods
cwtl
xchg
call
or
mov
lcall
repnz
repnz
out
std
xchg
andl
and
sbb
rcrl
pop
pop
sahf
push
insl
je
jle
add
jb
jbe
cmp
pop
inc
dec
mov
add
inc
pop
pop
out
jg
cmc
movsl
lret
mov
or
iret
or
mov
loopne
icebp
test
iret
mov
mov
inc
sahf
cmp
jo
jg
sbb
lods
fs
adc
and
jb
pop
nop
cmp
sub
push
int
call
sub
int
lock
push
and
hlt
and
push
cmpsl
out
jg
in
sbb
mov
jle
out
fld
cltd
jle
mov
movsb
cmp
sbb
ficomps
sahf
adc
lods
jne
scas
or
inc
mov
xchg
or
adc
stos
inc
sti
adc
gs
xchg
mov
push
shlb
jmp
out
or
icebp
mov
das
stos
pop
testl
out
addr16
test
mov
lret
push
movsl
inc
mov
cmp
pushf
shrl
push
loope
sar
lcall
movsb
ja
jb
jne
enter
les
add
mov
pop
push
popa
lock
aam
adcb
arpl
or
and
inc
rolb
lea
aad
icebp
lret
lods
inc
scas
mov
inc
sarl
lea
jae
mov
xrstors
in
pinsrw
or
mov
adc
cmpsl
in
or
lahf
cmp
mov
std
test
pop
xchg
adc
lods
adc
jae
popa
pop
nop
sub
dec
dec
clc
adc
sbb
int
imul
jg
adc
nop
sbb
inc
mov
xchg
dec
or
push
jno
xorb
push
mov
mov
dec
adc
sbb
pop
cwtl
xchg
xlat
cmpsb
fwait
pop
rcr
je
xchg
int3
ja
sbbl
out
and
xchg
scas
sub
sti
movsb
fcomps
dec
and
push
or
rorl
or
rep
mov
movsl
loopne
lods
jecxz
outsl
hlt
subb
dec
xchg
sbb
lar
xor
es
stc
leave
cltd
mov
fisttpl
stc
and
out
adc
mov
push
sbb
dec
or
je
ds
les
inc
fisubs
movsl
sbb
imul
ret
mov
xchg
inc
enter
shr
sbb
clc
cmp
repz
enter
test
iret
out
ja
test
push
xor
xchg
bound
test
and
ret
dec
xchg
dec
daa
or
clc
pop
or
mov
push
mov
dec
lods
jno
xlat
push
fmuls
lds
adc
les
std
subl
jg
mov
inc
cmp
cwtl
daa
loope
and
cmp
imul
scas
add
lcall
mov
mov
pop
insl
fdivs
sbb
cltd
outsb
sbb
jno
adc
ret
mov
jge
fmul
sub
jne
fimull
imul
cmp
mov
sub
mov
xlat
loope
and
out
mov
adc
repnz
gs
adc
or
or
fs
dec
jge
mov
adc
out
pop
xchg
dec
ljmp
cmp
hlt
in
mov
loopne
pop
out
lock
mov
or
pop
mov
gs
mov
push
mov
cmp
iret
leave
jmp
scas
mov
push
in
test
push
js
rcrb
mov
mov
xchg
mov
xchg
out
lock
mov
sbb
shll
fbstp
mov
and
push
and
pop
cmp
xchg
and
jmp
repz
ja
pop
aam
in
in
or
andl
insl
mov
jg
mov
lret
lods
push
sub
lret
push
loope
loop
pop
adc
mov
inc
lret
cmp
popf
add
sub
mov
sti
push
cli
jb
xchg
sub
mov
fs
xchg
cs
pop
test
xor
int3
jmp
add
nop
repz
das
pop
cmpsb
out
test
jl
mov
or
push
mov
stos
cs
aas
inc
lahf
enter
out
push
bnd
pop
aad
outsb
cmp
or
xorl
dec
andb
mov
sub
jmp
ds
pop
pop
sub
mov
mov
orl
mov
xor
adc
mov
add
mov
lahf
add
mov
aaa
cld
mov
sub
scas
pop
jmp
xchg
xor
leave
insb
cmpsb
mov
rcll
pop
movsb
xchg
cmpsl
data16
into
pop
ret
out
lret
dec
aam
pushf
lret
xor
orb
pusha
test
adc
push
mov
bound
cmp
repnz
std
mov
test
jl
jg
cltd
cmp
mov
cmp
mov
adc
ss
loopne
jae
in
int3
push
mov
inc
int
out
test
sbb
dec
shrl
inc
xor
lods
jns
sarb
mov
idivb
cltd
inc
rcrl
es
mov
dec
jmp
fldcw
push
mov
add
jno
inc
mov
movsl
fldenv
sub
sbb
xor
push
inc
cmp
adc
adc
hlt
dec
or
pusha
pop
test
push
or
jns
add
pop
inc
mov
inc
xchg
out
lcall
inc
fcoml
cld
aas
push
int3
pop
insb
push
repz
mov
mov
scas
pop
xchg
stos
aam
and
arpl
inc
xchg
cltd
xchg
xor
into
jp
out
js
jg
ret
cwtl
mov
pop
lods
jo
ret
adc
xchg
mov
adc
cmp
in
dec
sbb
mov
mov
lds
les
sahf
sbb
pop
lock
adc
cmp
hlt
and
pop
cmp
mov
mov
rclb
push
jp
mov
xchg
inc
ss
or
cwtl
xchg
popf
movsb
outsl
xchg
andb
push
jbe
outsl
mov
cmp
and
add
pop
mov
leave
out
mov
lret
pop
mov
rol
adc
xor
jg
out
dec
test
outsb
adc
pop
mov
jne
pop
jle
and
push
mov
dec
ljmp
out
lods
shrb
mov
in
pop
cwtl
shr
cmpsl
cmp
pop
adc
in
std
mov
out
rol
les
cmp
andl
lds
jne
ja
dec
leave
or
sub
icebp
sbb
jl
outsb
ret
mov
xchg
or
cmp
xchg
adc
and
dec
pop
test
fisubrs
pop
push
roll
mov
sbb
movsl
int
ss
lahf
jne
jb
push
jp
jge
inc
loopne
push
sbb
les
pop
pop
lods
ficomps
sbb
arpl
pop
aad
lahf
add
sbb
mov
jbe
fcompl
push
dec
push
and
outsb
push
jb
xchg
cli
in
test
leave
jmp
movb
push
fisttps
outsb
out
dec
imul
addr16
sub
cs
xlat
dec
mov
aas
fimull
scas
mov
jb
ficomps
ljmp
bound
imul
sarl
into
hlt
jmp
mov
mov
js
jg
setg
push
dec
xchg
fcomi
iret
add
or
inc
test
rol
cmpsl
jmp
xchg
adc
fistps
mov
ja
or
push
shrb
insl
and
fs
lods
xlat
subb
xor
lods
jb
sarb
hlt
add
or
ss
pushf
shrl
repz
pop
jle
rcrl
cli
fsubr
scas
sbb
ss
fcomps
cld
loope
xor
jle
push
imul
add
pinsrw
add
dec
in
loop
sub
stos
fistpll
adc
out
push
or
or
xchg
dec
mov
mov
mov
xor
loope
lods
aaa
dec
sbb
in
sub
push
lahf
pop
inc
mov
js
loop
and
and
xchg
hlt
imul
and
cmpsb
mov
mov
pop
cmpsb
dec
call
and
imul
shrl
out
negl
cmp
test
mov
jle
jp
aaa
sub
jnp
negl
dec
push
lods
ret
mov
lods
sub
or
roll
sahf
in
loop
xchg
push
pop
cltd
lds
movsb
xchg
xor
mov
jmp
cmp
pop
xor
je
mov
inc
test
jle
bound
mov
mov
mov
dec
add
movsb
adc
out
jo
adc
adcl
and
sbb
sub
stos
jnp
lods
enter
cli
mov
test
and
mov
or
sarl
cmp
lret
clc
adc
jne
push
jo
dec
stos
les
insb
mov
push
roll
fistpll
jmp
mov
sub
in
add
gs
movsl
fincstp
dec
mov
or
add
out
popa
test
bound
inc
js
inc
imul
inc
push
xorb
addr16
or
out
ficompl
push
test
dec
int3
or
outsb
pop
lret
test
cmc
lods
daa
and
cli
cwtl
shll
cli
aad
cmc
stc
in
pop
dec
movsl
push
in
movsl
pop
xchg
mov
adc
js
add
mov
lods
movsb
test
sub
cmp
dec
iret
repnz
pop
testl
jle
adc
push
mov
pop
xorb
cmpsb
lea
aaa
add
xchg
mov
insl
xor
cmp
loope
inc
js
pushf
mov
fnstsw
pop
je
sub
out
xor
adc
test
jecxz
iret
lods
or
arpl
sub
xor
or
test
cwtl
sub
and
addl
repz
add
sub
ja
add
lods
pop
sbb
sbb
fsubr
fisttpll
mov
jmp
xchg
outsb
daa
data16
xchg
aam
mov
aaa
mov
daa
sahf
adc
loope
sub
push
shll
or
jecxz
call
mov
add
push
mov
xchg
sarl
and
cmpsb
sub
pop
iret
xor
and
sub
xchg
mov
jns
sbbl
mov
repz
dec
xchg
out
cmovno
mov
outsb
or
sbb
mov
dec
daa
xor
mov
es
fisttpll
mov
adc
push
jo
pop
enter
dec
cltd
or
pop
in
test
mov
sti
lret
xchg
aam
clc
mov
pop
or
jp
pop
dec
push
ffreep
inc
stos
adc
pop
adc
and
ljmp
sbb
loope
jge
jb
pop
test
push
lods
mov
aas
or
lock
mov
dec
sti
addr16
sub
or
push
push
or
jb
in
cwtl
or
dec
orl
sbb
mov
mov
idivl
or
sub
jb
arpl
cmc
adc
lahf
push
inc
dec
push
std
jno
loope
push
cs
sahf
cmp
aam
inc
xor
out
xchg
sbb
cmpsb
sbb
ja
push
insb
cmp
cmp
repnz
in
mov
or
pavgw
add
push
sahf
cmc
ja
mov
icebp
in
mulb
outsl
push
push
push
inc
sub
aad
stos
es
aad
movsl
int
xor
dec
imul
int
iret
and
insb
dec
jb
leave
mov
decl
subl
xchg
insl
cmpsl
hlt
xchg
test
pusha
pop
add
xchg
jnp
in
insb
ljmp
cs
out
pop
xchg
lret
mov
lods
inc
fimuls
sti
jnp
insl
mov
es
pop
mov
jge
ljmp
sahf
in
ljmp
fdiv
inc
filds
jl
seto
push
daa
cmp
mov
into
sub
loope
cmpsl
in
loope
shll
in
inc
fcoms
xlat
scas
movsb
rol
mov
lods
mov
xchg
stc
jo
and
dec
test
pop
and
pop
aas
movsb
and
loop
mov
jl
inc
inc
jmp
stos
fucom
daa
inc
dec
cwtl
inc
movb
mov
outsb
lahf
dec
xor
mov
cmp
push
pop
dec
stc
loopne
cli
aam
inc
pop
test
jle
mov
mov
dec
shld
jo
ja
xchg
movl
outsl
mov
cmp
mov
fsubr
sbb
inc
xchg
mov
push
fs
lods
test
jno
adc
loop
adc
jnp
xor
nop
adc
cs
in
negl
or
out
data16
pop
mov
in
push
and
mov
stos
xor
stos
call
mov
fildll
or
daa
rclb
pop
xchg
fs
or
jl
adc
sbb
pop
int
mov
xor
push
test
xchg
sub
pusha
xor
sub
sub
stos
inc
sub
add
pop
cmp
lea
mov
and
lret
addb
iret
test
into
gs
push
adc
xor
mov
sub
and
xor
sbb
pop
xchg
shl
jge
mov
in
cmc
or
test
mov
inc
sti
jne
or
das
pop
cltd
icebp
fmul
inc
dec
jl
xchg
sbb
pop
xchg
jae
xor
adc
ds
pop
cmp
jae
mov
pop
fsub
cli
mov
or
loope
lahf
punpckhbw
nop
or
negb
mov
sbb
mov
ja
into
and
sbb
pop
cmp
das
add
js
aad
sub
sti
shrb
push
leave
mov
cmp
pop
push
push
adc
iret
xchg
arpl
call
icebp
xorl
adc
cmpsb
dec
mov
fldenv
iret
sbb
add
push
sub
push
das
mov
jo
cmp
dec
icebp
out
inc
loope
ror
movl
xchg
ja
sar
jl
and
loop
cmp
stos
sub
pop
mov
jb
dec
outsb
inc
movsl
mov
mov
mov
xor
fucom
add
sub
pop
into
mov
sub
test
inc
adc
scas
dec
pop
test
daa
daa
and
fsubrl
adc
xor
addr16
rorb
jp
pop
sbb
sub
jmp
les
and
or
gs
and
adc
push
jo
inc
mov
jo
daa
pop
add
or
mov
or
out
test
xor
xchg
or
orb
push
das
and
pop
sbb
mov
push
in
call
mov
cmp
lea
jl
mov
pop
and
les
mov
cmpsl
frndint
or
cmpsl
jns
mov
orl
inc
cld
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
push
add
movl
subl
movl
and
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
xor
xor
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
jmp
push
pop
rcll
fwait
pop
push
outsb
adc
fldl2t
jp
sbb
jp
insb
xor
jp
pop
mov
fldt
jns
jae
adc
stc
or
pop
testl
test
jno
push
mov
pop
lret
sahf
je
pop
jge
lods
xor
xchg
popa
ficoms
ds
fidivl
or
fcmovb
mov
xchg
xchg
pop
mov
loop
hlt
aaa
sbb
adc
jns
jecxz
mov
sbb
push
movb
fildll
out
xchg
mov
or
push
cmp
xor
dec
xor
and
fcoml
jl
mov
addb
movsl
icebp
ja
push
pop
jno
jg
dec
gs
sbb
sti
xor
or
mov
pop
je
jbe
add
enter
icebp
sbb
push
add
or
lods
adc
and
cli
out
filds
dec
movsb
xchg
scas
xorl
or
mov
mov
jns
iret
sub
and
add
xchg
loopne
popf
jns
test
popf
jecxz
lret
psadbw
adc
fidivrl
ds
in
aam
stos
pop
add
inc
mov
push
cmp
aam
pusha
loopne
pop
dec
imul
mov
push
and
sbb
pop
adc
sbb
mov
jp
in
xor
adc
mov
aaa
inc
and
mov
stc
mov
arpl
pop
stos
outsb
pop
jb
xchg
dec
imul
rcl
je
std
sbb
jo
out
stos
and
scas
push
inc
into
fisubrl
andl
mov
cmc
lret
fstl
add
pop
add
pusha
cmpsl
pop
lock
aas
inc
out
das
fs
mov
cmpsb
cmpsl
mov
mov
scas
mov
dec
mov
pop
icebp
andb
cmpsl
inc
lcall
pop
movl
jge
fiadds
sub
pop
fistpl
push
lcall
inc
push
insl
flds
es
jecxz
or
push
xchg
sbb
push
cmp
nop
pop
xchg
xor
and
jl
stos
imul
test
push
sbb
or
jg
cli
mov
int
or
mov
and
mov
push
out
cmp
addb
sbb
mov
cltd
jl
icebp
in
int3
stc
push
inc
push
das
ret
aad
sub
push
adc
popf
cmp
dec
subl
dec
inc
pop
aad
jne
adcb
fisubs
inc
je
pop
icebp
into
movl
into
jp
sub
je
pusha
mov
sbb
insl
sbb
aas
or
xchg
sbb
mov
mov
fs
sbb
mov
or
in
jno
mov
xchg
jmp
mov
add
xchg
decl
inc
loop
pushf
xchg
push
imul
shlb
and
and
std
adc
rorb
fcoms
ret
mov
imul
scas
loopne
push
insl
fucomp
cmp
es
ret
outsb
lods
outsb
lods
inc
push
sti
mov
cmp
adc
jg
pushf
cmp
out
lahf
jge
sbb
imul
dec
test
push
movsl
mov
cld
xchg
call
jae
lret
and
sub
cmp
add
mov
jecxz
fiaddl
dec
inc
jnp
xchg
adc
jns
xchg
inc
xor
sbb
lock
ret
icebp
pop
outsb
pop
adc
xor
mov
dec
jl
push
and
arpl
lods
mov
lods
fs
hlt
in
gs
adc
pop
pop
push
popf
iret
inc
sbb
jge
xchg
xor
lahf
pop
shll
xchg
cwtl
or
out
cmpb
nop
jecxz
pop
lahf
adc
and
xor
stos
pop
and
add
dec
adc
test
xchg
and
les
popf
negl
or
movsl
sub
js
mov
push
jae
pop
gs
jle
pop
fistps
inc
mov
fwait
dec
insl
dec
enter
mov
dec
notl
ss
loopne
cwtl
sbbb
sbbl
ja
or
std
add
mov
sub
xor
pop
xchg
cmp
push
and
test
mov
pushf
pop
xchg
add
lds
rcrl
cltd
inc
fistpl
sarl
outsb
clc
test
in
or
lods
dec
cmp
insl
lret
xchg
jnp
xchg
mov
mov
pop
js
loope
sbb
outsb
divl
xchg
mov
mov
cltd
pop
dec
inc
and
mov
push
ljmp
rorl
stos
jl
fiaddl
lsl
rolb
cmp
xchg
aaa
and
mov
lds
aaa
cmp
fisubl
sub
repz
jo
jp
or
movsb
push
ljmp
push
cmp
neg
jne
int
xorl
push
sahf
jbe
hlt
in
shrl
lahf
xor
cmp
mov
lds
xchg
mov
mov
pop
fs
lods
cmp
sbb
outsb
lods
imul
inc
pop
pop
sbb
lods
xor
fmul
push
jne
jl
or
loope
call
fidivrl
xor
aam
xor
rorl
lds
sub
das
jae
stos
int
fsub
mov
sbb
in
shr
mov
arpl
loop
shll
sbb
sbb
orl
sbbl
push
pushf
int3
cmp
les
es
iret
inc
push
push
lea
pusha
mov
inc
jnp
and
mov
stc
adc
cld
rep
scas
repz
mov
inc
or
lds
mov
aad
sub
orb
mov
fsubrs
clc
jne
fnstsw
addb
dec
xchg
and
cld
push
in
and
adc
mov
xchg
outsl
mov
subb
and
pop
mov
idivb
cmpsb
sub
sbb
mov
fwait
mov
in
pop
data16
mov
xor
imul
dec
shlb
lret
jl
mov
push
xchg
push
xchg
dec
jge
sub
lods
jae
sbb
bound
in
push
sti
cwtl
xchg
jbe
add
mov
or
jle
and
or
xor
mov
enter
pop
out
pop
int
mov
test
cmp
pusha
sbb
mov
adc
mov
pop
in
outsl
js
mov
ss
out
filds
dec
or
fildl
xchg
adc
mov
add
pushf
inc
jmp
addl
ret
or
ret
xor
enter
sub
pusha
mov
mov
push
cli
test
pop
mov
in
push
imul
mov
xchg
insl
mov
and
sub
jg
or
push
jne
test
loope
repz
popa
mov
je
loop
cmpsl
inc
dec
loope
ss
mov
insb
mov
adc
test
scas
sar
leave
xchg
popf
xchg
inc
jnp
fwait
inc
xchg
and
sti
mov
add
hlt
mov
sbb
aaa
cltd
adc
sub
bound
js
pop
mov
das
in
lods
sbb
jecxz
ja
enter
loopne
sub
clc
xor
sub
mov
mov
cmp
stos
sbb
pop
or
sahf
inc
cmp
pop
cmp
repnz
dec
mov
xor
xlat
sbb
rcrb
inc
add
ret
xor
inc
push
xchg
mov
cmp
out
mov
add
pop
insl
add
or
sahf
test
icebp
and
fs
jmp
jge
cmp
fcomp
adc
and
push
popf
jno
xchg
and
cltd
cmp
notb
inc
loopne
int3
out
icebp
jp
adc
movsl
mov
mov
lods
inc
in
mov
sbbb
xchg
stc
int
pop
cmpsl
jmp
lods
adc
sarl
std
xchg
lret
daa
bnd
pusha
outsl
and
mov
xchg
ds
test
out
pop
in
push
xchg
jnp
js
mov
or
xchg
inc
out
cmc
mov
loope
sarl
add
icebp
sub
sub
xor
es
mov
mov
std
pop
dec
add
popa
fnstenv
push
or
dec
icebp
push
in
cmp
cmc
hlt
xor
jne
adc
cmp
addr16
push
xorb
inc
stos
mov
ss
dec
cmp
xor
mov
loope
jnp
jmp
out
cmp
xor
cmp
dec
es
imul
jmp
pop
cwtl
inc
in
movsl
cld
add
stos
xlat
inc
jns
inc
icebp
stos
lock
orl
popf
ret
repz
in
js
das
bound
push
mov
stos
dec
nop
or
push
pushf
jp
out
je
fucom
fs
sbb
jge
into
lcall
mov
nop
mov
push
out
xor
ljmp
xlat
cmc
sahf
dec
es
cmp
dec
dec
in
js
xchg
inc
xchg
pop
insb
pop
inc
pushl
mov
or
add
test
cwtl
pop
or
xchg
sbb
dec
ror
inc
pushl
jmp
add
jge
or
lret
ret
rolb
push
dec
sbb
stos
aam
adc
sti
and
cld
inc
mov
cltd
push
popf
rcl
loope
aas
xchg
push
push
push
fidivrs
jmp
fdivrl
cmc
inc
pushf
dec
lahf
cmp
xchg
pusha
test
pop
test
mov
imulb
adc
leave
je
gs
jecxz
stos
push
pop
je
clc
test
mov
jns
test
in
inc
dec
mov
cmp
sahf
adc
dec
mov
mov
push
gs
sub
sti
shlb
lcall
pop
and
push
push
mov
mov
adc
out
jp
call
sahf
jo
arpl
nop
xchg
popf
adc
bnd
roll
mov
addr16
push
jbe
sbb
cmpl
fwait
xchg
push
or
insb
mov
dec
push
jg
je
and
les
stos
cli
adc
dec
outsb
imul
mov
sub
into
pop
lock
ljmp
outsb
cmp
adc
cli
lret
jge
das
mov
cmp
stos
and
fs
and
fmuls
push
mov
daa
push
dec
divps
inc
mov
into
fildll
fwait
mov
jmp
out
push
mov
add
and
mov
imul
jns
mov
cmpsb
or
lods
roll
lcall
pop
jge
test
out
sub
shrb
call
aad
lret
inc
inc
inc
shrl
inc
xor
mov
adc
adc
pusha
imul
aam
lods
sbbb
sbb
or
jne
jb
or
push
mov
fistpll
push
insb
and
imul
adc
push
in
imulb
push
clc
out
fsub
pop
loope
fistps
sbb
mov
loopne
push
inc
sbb
and
dec
in
movsl
into
cmp
aaa
inc
pop
and
test
cmp
scas
loop
loope
mov
mov
rorb
jbe
dec
lret
ja
lea
mov
jns
jne
xchg
and
nop
ss
push
dec
or
mov
xchg
jg
and
pusha
loope
clc
or
dec
leave
push
fidivrs
addr16
in
pop
lea
repnz
or
imul
lock
mov
ds
jge
sub
dec
sub
xchg
in
out
fadds
cld
pop
adc
sbb
into
int3
ss
or
ja
bound
cwtl
jp
lahf
pop
jo
jb
stc
xchg
mov
mov
adc
mov
inc
test
sbb
mov
test
jno
popa
xor
mov
vandps
aam
test
lods
sub
sahf
jp
in
xchg
outsl
and
movsl
dec
push
jmp
mov
pusha
mov
and
dec
jmp
cs
out
pusha
imul
cmp
fildl
and
iret
fidivl
inc
pop
insl
xlat
push
fcompl
shrl
movsl
mov
jmp
cmp
adc
add
push
test
push
add
mov
pop
aaa
pop
nop
push
jle
adc
into
push
movsl
add
test
neg
ret
jl
int3
pusha
sti
mov
mov
lahf
out
lcall
jns
lock
xchg
les
mov
mov
cmp
es
outsb
testl
dec
sahf
repz
xchg
outsl
push
add
jp
cmpsb
js
inc
icebp
push
mov
xchg
sub
mov
push
lret
test
pop
mov
fidivs
test
xchg
mov
xchg
ret
rorl
std
pop
std
push
pop
mov
push
sub
nop
sbb
loope
dec
mov
xlat
xor
int
inc
push
pop
leave
cs
data16
fmull
fcomp
pop
ja
lret
xchg
setle
sub
pop
xlat
push
mov
add
fnstenv
and
ret
sub
xor
sub
inc
cmpsl
xchg
xor
mov
mov
mov
add
loopne
push
mov
test
inc
dec
mov
jg
popa
xor
es
pop
pop
mov
xor
dec
push
jns
andl
push
negb
push
mov
lcall
cmp
sbb
mov
sbb
mov
lods
xor
push
push
insb
mov
aaa
and
jno
test
inc
push
xor
arpl
insb
mov
je
cmp
jnp
cmp
ret
movsl
jge
fisubrs
and
in
sbb
test
daa
mov
lods
xor
xor
sbb
out
repz
scas
iret
dec
push
insb
popa
insl
push
jb
pusha
mov
add
out
pop
dec
call
mov
jp
add
or
add
add
lds
roll
or
xor
mov
mov
int
mov
xchg
enter
push
scas
das
mov
leave
loopne
push
push
imul
pop
outsb
dec
xorl
sbb
pop
or
mov
cmp
cmp
pop
stos
xor
mov
adc
mov
dec
std
mov
xchg
push
loopne
xchg
shll
inc
mov
jle
dec
xlat
pop
bound
mov
jle
jo
shl
ss
mov
pop
movsl
push
inc
je
dec
test
sub
xchg
cmp
mov
repz
mov
fdiv
add
mov
sahf
sub
mov
xor
push
add
popf
and
xor
xor
pop
adc
cmp
pop
subl
repnz
imul
sti
adc
xor
shlb
mov
push
pusha
jne
test
pop
cmc
jg
sub
pop
pushw
mov
ss
jge
out
push
dec
fidivrs
pop
mov
ret
or
pop
int3
mov
jecxz
or
fcompl
jb
hlt
addl
pop
data16
push
cs
jge
gs
lods
dec
sub
lock
jno
sbb
adc
pop
ficoms
sbb
adc
mov
push
jl
test
dec
add
out
xchg
incb
push
push
inc
inc
insl
std
ret
push
fidivrl
repz
and
adc
out
inc
pop
popa
loopne
in
mov
jge
pop
sub
mov
in
bound
daa
scas
daa
ficoml
xor
mov
shll
scas
add
dec
jbe
sbb
pop
cmp
xor
inc
mov
dec
lea
lods
jnp
dec
loopne
cmpsl
flds
xchg
sbb
popa
daa
sarl
scas
pop
xchg
ljmp
fimuls
jecxz
decb
call
aas
roll
cmp
pop
push
lret
fwait
out
jb
insl
insl
imul
lods
fsts
adc
xor
scas
fadds
xor
cmp
les
ja
sbb
fwait
test
outsb
call
dec
daa
inc
fmul
outsb
inc
dec
fcmovu
mov
cmp
vcvtdq2pd
lret
push
sub
cwtl
dec
in
test
mov
je
fcoms
loop
shrl
inc
dec
cmp
stos
repz
sarb
inc
xchg
dec
mov
pop
and
daa
or
movntq
stc
cmp
adc
xchg
dec
mov
shrb
add
mov
sub
clc
inc
pop
inc
xchg
insb
sub
sbb
fisubrl
cltd
shrb
stos
xchg
fs
inc
or
inc
scas
popa
das
lds
mov
cmc
and
and
mov
sub
leave
pop
daa
movsl
xchg
imul
popa
sub
cmp
leave
scas
push
test
test
enter
lcall
popf
outsb
inc
cmp
shrb
adc
lds
outsb
pop
dec
dec
and
and
decb
xchg
fcompl
int3
outsl
and
mov
aam
add
mov
and
test
sbb
add
addb
pcmpgtw
jmp
stos
mov
jmp
nop
mov
lret
cmp
pop
xor
push
dec
stc
dec
fdivrp
jecxz
adc
aad
jmp
leave
cltd
pop
mov
into
mov
mov
or
sbb
lock
mov
xchg
arpl
mov
and
outsb
rorb
pop
cmp
mov
mov
pop
lds
push
or
pop
testl
adc
dec
mov
mov
mov
mov
jmp
ljmp
nop
push
mov
nop
push
mov
mov
stc
dec
pop
aam
mov
dec
add
dec
scas
cmp
test
push
out
mov
rcrb
dec
mov
cmc
aaa
dec
dec
mov
sbb
push
dec
pop
pushf
jle
ret
pop
roll
push
mov
or
inc
pop
fwait
out
add
out
sub
popf
or
mov
shll
sahf
test
pop
insb
flds
mov
inc
mov
or
stos
mov
out
sub
lahf
btr
test
mov
push
cmpsl
push
cltd
shrb
and
pop
daa
cltd
imul
outsb
xor
in
or
jmpw
mov
mov
loope
xchg
es
jl
xchg
rcll
xor
jl
xchg
dec
pop
or
xlat
cwtl
clc
dec
xorl
out
pop
lcall
pop
in
test
add
rorb
push
xchg
ret
pop
jecxz
cmc
or
sub
js
jecxz
lds
jae
subl
and
add
push
inc
sbb
je
ret
xor
sub
jb
cmc
sub
inc
jge
adc
orb
xor
inc
or
inc
fdivl
jl
insb
aas
roll
mov
xchg
cmp
scas
xsaves
aad
ja
daa
imul
or
into
fstps
cmpsl
xor
adcl
cmp
sbb
mov
mov
int
addl
nop
adc
jg
test
inc
inc
imul
inc
inc
mov
aaa
and
pop
cltd
sahf
pusha
aas
pop
leave
mov
mov
ds
mov
push
cmp
add
lock
mov
repz
popf
loopne
cmp
xchg
es
jg
in
cmp
push
stos
adc
loop
add
inc
shl
lahf
inc
mov
fwait
in
shlb
stos
or
loope
mov
mov
xlat
push
add
scas
bndldx
push
mov
cmp
not
test
loope
add
out
mov
ret
stc
and
pop
xchg
adc
shl
jle
mov
testb
popf
sbb
sbb
js
icebp
mov
cs
and
sub
aad
shlb
test
add
or
jle
bound
scas
lods
sbb
inc
cwtl
xor
mov
cmp
scas
or
mov
xchg
adc
in
lret
fs
push
and
inc
in
mov
inc
push
jge
mov
add
outsl
je
cmpb
adc
mov
mov
aad
sarb
and
jns
xor
push
leave
fcmovu
xchg
out
jae
ja
cmc
xor
mov
sbbl
fists
push
je
in
cmp
jae
lret
mov
push
subb
adc
lds
fwait
jb
gs
sarb
sub
pushf
jmp
xor
aas
push
jne
les
jb
pop
enter
imull
iret
je
std
outsl
push
dec
shl
mov
add
in
loope
dec
jge
ja
stos
xor
mov
add
cli
test
ret
cld
cmp
sarb
outsb
cltd
mov
add
mov
or
cs
sbbb
data16
insl
filds
shrb
xor
fdivl
hlt
nop
lcall
mov
repz
pop
mov
sbb
mov
or
fbstp
shll
push
dec
sub
stos
jnp
lret
jmp
testb
dec
cmp
jle
mov
lock
or
jb
ds
das
ret
add
xchg
add
je
imul
pop
jp
push
sarl
adc
cmp
fidivrl
mov
push
xchg
lock
jns
test
test
mov
sub
pushf
lods
jns
sbb
cmp
xor
lret
or
push
xor
cmp
aam
add
jmp
dec
xchg
lret
adc
ret
arpl
loop
bnd
jg
jmp
mov
dec
jae
jnp
cmp
scas
adc
mov
mov
testb
enter
cmp
cmpsl
add
mov
out
mull
xor
cmp
es
sar
pop
stos
lds
aam
xchg
lret
call
push
push
sarb
mov
out
add
and
and
or
pop
imul
jbe
jns
jbe
leave
fidivrl
in
add
mov
pop
jb
mov
xchg
xor
pop
icebp
xchg
mov
js
mov
mov
jmp
cli
fs
push
push
pop
or
cmp
or
dec
or
xchg
shlb
ss
pop
sahf
test
das
leave
mov
test
and
ss
add
sub
out
jno
sbb
jle
pop
sbb
test
xchg
dec
inc
mov
sbb
sub
fdiv
inc
dec
lahf
push
inc
das
push
adc
pop
sub
cwtl
cmp
imulb
into
mov
jo
cmp
sbb
pushf
mov
push
mov
push
dec
add
mov
mov
rcrl
popf
movsb
scas
xchg
incb
or
or
xlat
jnp
jecxz
cmp
xchg
incl
lods
and
jo
outsb
addl
jno
inc
shrl
ss
inc
js
mov
aad
push
xchg
icebp
push
ljmp
mov
push
xchg
mov
decb
pushf
sub
clc
dec
dec
mov
pop
addr16
jle
cmp
imul
and
xor
inc
sbb
popa
adc
in
lock
inc
mov
dec
xorl
jnp
out
in
mov
xor
cmp
dec
fs
mov
jge
daa
jle
loop
or
iret
xchg
mov
dec
test
add
ds
mov
rorl
insl
lds
js
ret
popf
iret
mov
mov
cmc
not
push
jno
jmp
orb
push
jbe
test
pop
add
pop
adc
lds
mov
int3
notb
adc
pop
scas
sbb
mov
add
sbb
push
fistpll
push
lods
jns
enter
js
stos
lret
call
sbb
fdivrl
cmp
fidivrl
lcall
int3
stos
fs
adc
std
int3
fstl
jmp
or
mov
dec
and
dec
gs
push
adc
push
incl
jno
je
out
ret
mov
jno
dec
loop
popa
and
mov
leave
inc
frstor
push
aaa
inc
insl
inc
sti
xchg
je
cmpsb
lret
xor
imul
vpmuludq
sarl
dec
lds
loope
pop
mov
push
and
jg
daa
cmp
cmp
cmpsl
adc
add
sub
dec
pop
shrl
iret
cmpsl
negl
and
dec
mov
movsl
mov
inc
xchg
push
jg
mov
jne
sub
add
xor
lock
inc
lcall
add
nop
pop
and
push
add
pop
icebp
arpl
aas
scas
jl
test
jbe
push
ljmp
xchg
and
adc
clc
sub
int
sbb
sbb
push
lock
ljmp
pop
xchg
lock
sbb
xchg
push
adc
mov
pop
cmp
adc
rorl
insl
dec
pop
push
push
pop
shl
bound
push
fxch
ja
mov
fdivrs
shlb
pop
pop
adc
dec
fsub
mov
adc
and
jl
push
adc
xchg
adc
fcom
push
test
xor
movsl
mov
enter
scas
pop
dec
push
sub
ljmp
ret
ret
xchg
pop
test
cwtl
xor
adc
mov
inc
adc
icebp
inc
add
and
shl
fstps
inc
test
je
sbb
ljmp
sarb
aam
mov
and
repz
movsb
gs
sub
jecxz
out
cmp
ljmp
pop
popa
jnp
sbb
mov
dec
push
minps
or
sbb
test
pop
xchg
fsubrl
jno
or
or
faddp
lds
lods
int3
jge
sbb
fildl
add
adcl
ds
xchg
push
pushf
mov
push
pusha
add
scas
imul
nop
enter
push
subb
mov
push
leave
push
cmp
ret
or
adc
cmpsb
or
dec
adc
mov
mov
roll
fists
xor
cmp
cmpsl
andl
jle
push
mov
repz
mov
mov
mov
fnstcw
jp
mov
mov
fs
cmp
push
pop
sbb
fwait
dec
xchg
adc
fstl
pop
leave
push
loopne
jmp
lret
filds
or
lds
adc
or
mov
stos
jl
repz
lahf
insb
repnz
sbb
pusha
iret
adc
cmp
mov
or
outsl
loope
and
add
and
pop
dec
dec
mov
andl
xor
dec
test
es
jecxz
rcrb
mov
test
push
outsb
movsl
mov
insb
dec
out
mov
jl
jl
mov
cmc
adc
out
nop
push
ljmp
mov
out
push
aaa
jne
pop
jl
data16
pop
es
loop
fs
aam
mov
stos
cmp
into
or
mov
loope
in
add
mov
sti
fcomps
popf
push
es
push
jp
repnz
pop
ds
pop
cmp
sbb
jg
inc
sbb
ljmp
ja
xor
inc
mov
jae
lret
in
rolb
fisubs
rcrl
lock
dec
xor
in
push
mov
into
sbb
iret
or
jbe
fnsave
cmp
dec
dec
out
sbb
hlt
fwait
out
inc
mov
xor
popa
push
daa
and
push
and
jmp
enter
cmove
aaa
jg
sub
das
test
sub
cmpsl
mov
push
testl
adc
mov
cmpsb
clc
arpl
inc
test
xchg
push
movsl
loopne
in
jbe
stc
lcall
adc
ja
adc
or
xchg
pop
mov
mul
lods
mov
dec
bound
call
mov
loope
ds
ret
sbb
lods
cmpsl
cmpsl
movsl
pop
mov
push
shll
mov
pop
sub
sbb
xchg
xchg
push
pusha
inc
fisubs
loope
mov
xchg
mov
and
fiadds
add
xor
mov
xchg
int
dec
jecxz
cltd
outsb
jbe
cmc
cmc
mov
xor
test
std
xchg
clc
lods
ds
xor
punpckhwd
cs
imul
test
jae
dec
divb
adc
cmpsl
adc
les
or
fldlg2
pop
adc
test
sbb
and
push
or
xchg
mov
scas
cltd
or
sub
movl
pop
lret
mov
mov
push
cld
inc
mov
mov
in
out
gs
cmp
icebp
xor
add
pop
lods
fs
xchg
inc
stc
cmpsl
push
into
mov
stc
cld
pop
ret
pusha
outsl
mov
pop
rorl
push
pop
xchg
cmp
xor
loopne
cmpsb
call
popa
pop
xchg
and
inc
push
inc
mov
push
mov
aad
inc
pop
adc
test
aad
xor
shr
imul
mov
mov
lahf
out
cmp
sbb
xor
mov
mov
adc
jl
loop
rcl
xchg
xlat
fstl
divb
jnp
sti
aaa
sub
add
dec
mov
lods
lock
mov
pop
cld
cmp
iret
lock
jmp
mov
cmp
lcall
into
inc
gs
jnp
inc
inc
loopne
xchg
push
insb
popa
js
sarb
add
scas
outsb
jo
mov
sbb
mov
mov
ret
xchg
push
je
mov
test
mov
mov
cmpsb
sbb
xor
movsl
jl
and
lahf
arpl
es
inc
ja
xchg
add
pop
test
add
ret
out
repz
dec
push
stc
adc
xchg
or
jno
jns
jae
stos
push
test
test
mov
push
mov
xor
sub
push
fdiv
cwtl
xchg
sub
ss
sbb
fbld
mov
mov
jge
inc
mov
cmp
xchg
mov
cmpsl
cmc
xchg
std
aaa
jg
adc
test
sbb
inc
add
shlb
xchg
jmp
outsb
aad
adc
pop
pop
iret
je
ret
dec
repz
cmp
inc
lret
pop
add
mov
and
dec
xlat
clc
mov
mov
shlb
mov
stos
scas
mov
cmc
push
in
adc
mov
mov
cmp
pop
ss
stos
filds
loopne
stc
push
int
lret
or
aad
or
sbbb
cwtl
mov
jle
cmp
cld
sbb
jo
fsubrs
outsl
or
les
mov
sbbl
jecxz
clc
pop
cwtl
jg
loope
imul
jne
hlt
mov
adc
jle
dec
test
push
fists
fsub
adc
daa
xor
jmp
or
movsl
dec
out
and
xchg
mov
out
clc
inc
mov
enter
sarb
repz
mov
insb
call
out
pop
fiadds
jns
xchg
jmp
adc
or
lock
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
or
movl
adcl
mov
mov
mov
add
mov
negl
xor
add
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
or
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
adc
mov
adc
mov
adcl
xor
mov
and
mov
decl
add
movzwl
add
mov
movb
mov
mov
adc
lea
subl
mov
mov
inc
mov
xor
adcl
sub
adcl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
mov
dec
mov
jmp
sbbl
movl
push
movl
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
andl
xor
or
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
xor
mov
or
mov
sbb
xor
or
mov
push
add
jmp
movl
mov
mov
movl
inc
cmp
jb
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
not
mov
subl
xor
adcl
add
movl
jmp
decl
mov
adc
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adcl
mov
subl
add
movzwl
negl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
or
mov
movzwl
movl
xor
add
movl
mov
movl
mov
mov
inc
mov
movl
cmp
jne
mov
mov
adcl
xor
movl
add
subl
mov
add
mov
addl
xor
add
movl
mov
mov
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
jmp
sbbl
mov
and
mov
xorl
xor
xor
sub
sub
sub
xor
mov
mov
mov
subl
lea
movzwl
adc
mov
sbbl
mov
dec
mov
lea
mov
sbbl
mov
add
mov
lea
mov
incl
mov
sbb
mov
andl
lea
dec
mov
movzwl
adc
mov
mov
addl
lea
mov
xorl
mov
andl
mov
orl
lea
addl
mov
or
mov
xor
add
movl
jne
jmp
negl
mov
mov
subl
xor
xor
sbbl
sub
orl
sub
xor
movl
mov
movl
mov
movl
mov
jmp
mov
mov
xor
adc
xor
xorl
sub
sub
or
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
jmp
fstps
sti
sarl
jnp
inc
xchg
or
xchg
mov
je
jp
sti
pop
jp
dec
jns
xchg
pop
sub
or
jmp
cmpsb
rcll
jo
repnz
push
and
mov
hlt
rorb
adc
mov
xchg
inc
sti
pop
mov
jb
sub
jnp
lock
mov
scas
jl
mov
dec
xchg
or
adc
dec
out
rcl
nop
stc
or
xor
imul
jne
or
shrb
push
jns
ret
lods
xchg
or
push
sub
lods
cmp
mov
adc
pop
imul
insl
jnp
xchg
mov
xor
scas
ret
aas
leave
in
popa
in
rorb
mov
fistpll
cmpsb
out
ror
sysexit
jno
insb
xlat
or
inc
inc
ljmp
das
dec
movb
jo
mov
fcoms
inc
ds
push
xor
jl
fcom
loope
inc
mov
dec
loope
inc
popa
or
add
insb
jle
xor
cwtl
adc
sbbl
xor
movb
mov
les
jg
ja
out
or
mov
enter
inc
das
iret
idivb
push
lods
orl
dec
iret
mov
cwtl
aam
pushf
or
lahf
adc
pop
outsb
pop
push
gs
adc
push
dec
dec
ja
push
repnz
pop
hlt
jg
push
inc
mov
fwait
pop
out
mov
inc
push
xorb
cmp
pop
out
pop
xor
out
jnp
aas
mov
scas
ficompl
stos
mov
imul
stc
sbb
and
imul
ljmp
daa
iret
stos
dec
in
and
addl
mov
cmc
insb
dec
or
push
cmp
sub
lcall
bound
test
fucom
and
sbb
ljmp
xlat
pop
enter
and
mov
xchg
test
or
ss
xchg
fs
or
inc
sub
lahf
in
pushf
mov
lds
pop
dec
hlt
add
pop
jo
jbe
sub
inc
adc
mov
push
jnp
pop
sub
jo
test
leave
fstpt
mov
inc
inc
dec
sahf
pop
sub
sbb
sbb
int
xchg
jl
xorl
cli
test
and
mov
push
xchg
in
mov
xchg
cmpsl
dec
test
fldt
imul
add
xor
out
cs
mov
test
test
push
mov
cmpb
pop
je
sarl
mov
shlb
cwtl
inc
test
leave
pop
loop
dec
cmp
mov
sahf
testb
mov
mov
rcrb
mov
fbld
ljmp
cmp
cltd
aad
movsl
arpl
xor
inc
mov
rorb
cmc
mov
lock
mov
and
movsl
outsb
cmpsb
sub
inc
adc
jmp
dec
leave
setnp
in
lahf
xchg
fbld
notl
and
jle
xor
and
aam
jmp
and
in
push
outsl
inc
cmc
std
loop
xchg
and
add
aaa
sbb
sarb
push
mov
adc
mov
stc
mov
sbb
xor
mov
cmp
sbb
lret
sarb
fistl
xchg
add
jg
dec
dec
or
int
or
add
pop
rcll
test
mov
add
imul
hlt
mov
daa
cs
cmp
add
fimuls
shl
ror
lods
fldt
rorb
xor
fldcw
test
add
enter
int3
sub
inc
sbb
outsb
aaa
roll
inc
arpl
xchg
cmpsl
xor
inc
push
dec
stc
push
or
outsw
rcll
fistpl
inc
mov
cmp
mov
dec
jle
dec
push
xor
shll
inc
inc
test
jb
xor
into
xchg
iret
bound
insl
xor
pop
jns
fcomi
sbb
out
outsl
push
push
push
inc
stos
nop
xorl
mov
add
mulb
fistpll
bound
dec
test
cli
mov
out
insb
minps
mov
xor
pop
addr16
dec
hlt
sub
and
icebp
call
mov
mov
stc
xchg
cmp
mov
clc
aas
stos
sbb
hlt
cli
xor
adc
cmp
jbe
iret
jmp
insl
push
adc
movsl
icebp
mov
cmp
loop
push
sbb
jnp
pop
push
dec
jno
pop
sub
push
movsb
in
inc
or
int3
dec
rolb
mov
add
lahf
test
push
and
pop
mov
call
mov
fs
pop
in
xor
pop
jbe
and
cmp
frstor
out
and
pop
stos
dec
cltd
pop
mov
add
insl
pop
pop
mov
into
mov
xchg
jp
xchg
inc
adc
and
test
adc
sbb
adc
mov
in
jae
lods
sbb
repz
and
loop
das
push
pop
jne
and
idivl
jg
in
test
fxch
sbb
es
xor
push
cmp
xchg
aas
int
pop
cmc
mov
xchg
stos
push
dec
sarl
ret
ljmp
cmp
cmpsb
add
mov
mov
stos
loopne
mov
mov
bound
shrb
std
inc
sub
mov
in
mov
sbb
je
dec
xor
mov
shll
repnz
aam
push
in
cwtl
mov
sub
loop
jbe
jl
jp
adc
loop
mov
lods
mov
xchg
shlb
push
sub
mov
arpl
mov
jle
loop
rcl
es
andb
dec
insb
mov
or
test
repz
fiadds
sbb
neg
test
dec
in
dec
out
movsb
hlt
mov
push
stc
jg
mov
shll
scas
out
xchg
jo
ljmp
cltd
push
adcl
daa
gs
filds
fldt
inc
mov
or
or
lods
mov
fbld
adc
dec
cmpsl
sub
ret
and
fidivs
testb
je
xchg
out
rorb
data16
sub
popl
shrl
jno
xchg
jecxz
lds
inc
loop
push
xchg
pushl
push
inc
inc
fistpll
pop
hlt
or
cmc
div
jne
popa
and
bound
jle
sub
ret
sbb
mov
dec
pop
jne
pop
sbb
mov
xchg
pop
popf
jecxz
lods
rcrl
adc
and
scas
ret
and
mov
arpl
fstl
shll
mov
push
push
jg
scas
test
jecxz
mov
rcl
adc
mov
mov
lahf
sub
or
push
popa
cld
test
fidivl
xchg
insb
inc
sub
insl
add
sub
jno
add
bound
outsl
jnp
mov
xor
pop
outsl
and
lea
lret
adc
inc
stc
das
les
xor
stos
pop
dec
and
pop
dec
sahf
jbe
mov
fldenv
xchg
outsb
subb
xchg
mov
sti
cli
sub
inc
ret
sbb
inc
sbb
fmull
lea
es
bound
lret
fidivrl
js
xor
dec
xchg
adc
mov
out
mov
gs
and
or
push
add
std
adc
mov
cwtl
lea
rcrb
mov
jg
mov
insl
inc
stos
jecxz
jecxz
enter
xchg
lods
mov
jo
sub
add
jl
mov
xchg
push
int3
or
ret
push
les
inc
xchg
dec
jmp
testb
jns
push
sub
or
stos
jmp
jbe
cmp
test
iret
loopne
aam
and
push
mov
insl
dec
lret
xor
les
adc
repz
pop
outsl
cltd
dec
push
sbbl
xor
lock
push
das
gs
dec
or
cmc
xchg
lahf
pop
popa
xchg
xor
inc
mov
aam
outsl
jne
pop
in
ret
adc
or
fdivr
andl
ficoml
adc
sub
pop
and
dec
sahf
daa
dec
in
or
sbb
mov
aaa
sahf
into
lret
xchg
mov
aam
jae
adc
dec
cmp
movups
sbb
sub
stos
dec
or
ret
push
push
xchg
mov
jbe
mov
xchg
fs
cld
cld
outsl
and
scas
mov
xor
mov
call
push
aas
dec
lea
in
ljmp
lods
imul
mov
ljmp
fcmovnbe
mov
mov
das
and
lods
frstor
ljmp
push
dec
int
insl
cmc
aad
push
dec
ret
push
cmc
rcrb
xlat
or
es
negb
mov
mov
std
mov
out
xchg
cmpsb
cmpsl
pop
repz
ret
adc
xor
sub
xchg
mov
and
jmp
scas
int
and
cwtl
in
mov
mov
addl
jmp
dec
ds
les
cmp
icebp
sub
iret
mov
add
lock
cltd
repz
adc
decl
imulb
pop
xchg
mov
ficomps
and
sbb
daa
js
mov
mov
das
and
imul
imul
dec
popa
push
roll
sbbl
mov
rclb
sbb
les
cmp
addb
int
out
movsl
xor
jmp
pop
inc
inc
pop
cmc
or
rolb
inc
movups
pop
adcb
sarl
inc
pop
aam
jbe
leave
mov
arpl
and
sub
lahf
sti
test
decl
test
aad
insb
push
jg
inc
mov
repnz
mov
fisttpll
jp
in
aam
dec
sbb
std
xchg
outsb
xchg
jg
adc
pop
inc
aam
dec
add
test
outsb
pop
jno
push
fimuls
lret
mov
cmc
or
rcl
scas
rorb
push
fxch
stos
hlt
aaa
mov
xor
adc
scas
inc
push
pop
xchg
dec
push
sub
cmp
ret
leave
bnd
repnz
mov
cli
push
or
adc
int
pop
mov
push
or
push
sbb
mov
jo
sub
fucom
add
lret
xlat
mov
fldt
inc
jge
pop
xor
nop
sub
jns
xchg
and
pop
int3
cmpb
cs
insb
subb
push
fs
ss
sbb
push
pusha
lea
pop
jns
int3
jns
xor
mov
cs
sahf
xchg
jb
mov
loopne
sub
outsb
dec
dec
fdiv
out
cld
aad
cmp
jbe
enter
lods
fldenv
adc
rclb
outsl
adc
in
mov
cmpsl
jbe
popaw
les
jp
int
xchg
xchg
cmpsl
jo
data16
pop
or
les
test
push
push
push
add
outsl
out
mov
push
dec
fsqrt
bound
pushf
add
cltd
xchg
xchg
jle
fstpl
insl
addb
mov
mov
mov
or
jae
jne
dec
enter
aam
rcr
imul
int
pop
inc
xchg
or
cld
dec
ss
outsb
mov
adc
outsl
jb
es
adc
lahf
push
mov
inc
jecxz
into
popa
mov
mov
fldl
enter
ret
or
pop
dec
xor
sbb
ja
scas
ss
ficoms
push
movsb
push
fmuls
outsb
cmpsl
cwtl
mov
scas
popa
xchg
scas
icebp
scas
test
pop
in
loope
xchg
lahf
cmp
arpl
scas
cmp
pop
add
sbb
fadds
cwtl
loope
dec
scas
popa
clc
jp
mov
out
mov
jge
pop
mov
hlt
cmpb
ja
dec
dec
enter
mov
std
jecxz
inc
lods
nop
movsl
xor
movsl
jns
imulb
mov
sbb
lcall
mov
xor
das
mov
daa
push
inc
and
movsb
lods
sub
out
and
cltd
stos
lahf
lahf
pop
mov
xchg
out
lcall
pop
add
add
int
jecxz
in
mov
jle
and
lock
mov
cmpsl
pop
shll
in
push
adc
push
lea
outsb
mov
cmp
mov
jle
xor
test
add
mov
dec
xor
push
dec
pop
roll
fisubl
pop
mov
push
mov
in
and
lea
loopne
and
adc
and
cmp
inc
fistpll
xor
insb
add
jl
jns
push
loope
fs
shrb
out
lock
jl
fcompl
cmp
cwtl
adc
hlt
xchg
fwait
cs
or
and
fnstsw
lcall
daa
and
mov
jns
ret
js
jge
scas
jnp
mov
or
mov
leave
push
rcr
push
sub
stos
push
and
aas
rcr
out
cmp
and
sbb
clc
rcll
adc
shll
sub
and
inc
cwtl
push
movsb
je
and
sbb
aad
in
and
sub
dec
and
loopne
icebp
mov
push
scas
cltd
mov
jge
outsb
fsubrl
mov
push
mov
add
sbb
push
adc
adcb
lret
dec
mov
mov
push
push
cmp
jno
pop
scas
mov
push
in
jns
jns
fst
mov
test
pop
daa
test
push
je
nop
xor
jle
mov
xor
mov
inc
stos
pop
sbb
xor
rorl
sbb
out
sub
in
add
xchg
clc
daa
into
andb
jns
add
out
mov
mov
mov
lcall
test
das
movsb
push
fnstenv
and
bound
mov
or
js
loopne
rorb
pushf
lahf
ds
out
mov
add
sub
rol
scas
sbb
push
imul
out
mov
jg
jns
jns
or
and
push
jno
aad
out
out
out
mov
push
pop
cmp
inc
inc
sub
cmpsb
inc
jnp
mov
rclb
inc
adc
adc
pop
cltd
out
in
js
cs
cwtl
in
fistpl
lret
pop
jb
or
mov
icebp
faddl
bound
inc
stos
sbb
sbb
push
xchg
adc
jo
dec
pop
test
mov
jbe
dec
adc
test
outsl
jbe
orl
inc
jbe
inc
scas
inc
sub
inc
stos
xchg
movsb
xor
dec
arpl
test
mov
nop
push
dec
sub
movsb
xchg
sub
and
dec
fisubrs
enter
ds
fmull
es
aam
es
adc
cmc
mov
cmp
cmp
lea
mov
mov
or
aam
mov
outsl
in
pslld
outsl
jne
andb
add
ds
sbb
es
push
pop
cwtl
fiaddl
repz
cltd
aam
sub
sub
and
xor
insl
jae
jle
into
daa
cltd
mov
jae
lock
adc
adc
sub
jmp
xchg
test
lds
ficompl
insb
xor
xchg
sub
ds
leave
fwait
pop
sbb
stc
mov
loop
pusha
ljmp
das
testb
fdivr
lret
fcoml
dec
xchg
xlat
pop
out
push
sub
push
sub
push
sub
ljmp
hlt
bound
or
test
sub
cwtl
mov
ss
ror
jg
jge
xor
mov
gs
mov
ret
xchg
icebp
lods
pop
rcrb
fisttpll
and
sub
fiadds
out
int
aam
test
adc
fiadds
or
enter
call
icebp
xchg
push
mov
adc
dec
hlt
stc
pop
stos
rorb
test
test
jns
imul
and
pop
enter
push
push
sbb
sub
les
unpcklps
iret
aas
ljmp
adc
leave
and
gs
shlb
mov
movsb
mov
dec
pop
mov
rcll
jns
sbb
lea
or
or
movsl
sub
add
add
xchg
cs
mov
push
incb
lret
or
fmull
xor
and
fsubs
je
adc
jbe
out
push
mov
pushf
xchg
dec
sahf
ljmpw
clc
mov
adcl
inc
sub
xchg
sub
or
lds
mov
mov
mov
xor
js
stos
sbbl
es
push
scas
push
sbbl
add
adc
push
sti
pop
push
mov
ja
mov
aam
fisubl
xor
enter
push
les
repnz
rol
inc
popa
xchg
sbb
dec
xchg
dec
ds
mov
icebp
call
ret
xlat
arpl
cs
pop
push
je
push
mov
mov
int3
xchg
mov
scas
sti
push
mov
ror
pop
rcrb
lds
mov
xchg
repnz
mov
mov
cmp
sbb
cltd
cltd
pop
push
pop
pop
int3
insl
mov
shr
adcb
push
cmp
dec
ljmp
sbb
out
xchg
mov
sub
fbstp
mov
aam
mov
mov
and
movsb
test
xchg
and
testb
aad
sub
pop
out
push
fildl
push
inc
lcall
and
jnp
or
mov
or
imul
fucomp
into
sahf
xor
pop
sub
sbb
loopne
sbb
mov
es
arpl
lock
xchg
xchg
adc
nop
loop
fwait
mov
xchg
inc
adc
sahf
fistps
add
xchg
push
inc
pop
inc
inc
jns
imul
sub
jbe
xchg
push
scas
fstpl
in
push
mov
fdivl
call
jnp
cmc
adc
lahf
jns
ljmp
shlb
add
divb
aam
pop
clc
lds
notl
mov
out
jnp
clc
xchg
push
clc
xor
inc
daa
fstpt
cmp
mov
mov
and
sti
push
jle
xor
mov
or
gs
push
lds
push
dec
cli
fsubr
sahf
pop
repnz
movsb
jle
nop
add
cmp
xor
test
enter
push
stc
aas
pop
cmc
xchg
pop
push
mov
sub
inc
shll
xchg
cld
addr16
inc
mov
rcr
cld
adc
and
cmpb
mov
ds
xor
enter
add
je
les
in
inc
jecxz
push
jge
inc
jae
push
push
inc
mov
mov
dec
xchg
jb
test
mov
cltd
pop
insl
imul
jae
xor
jnp
mov
stos
fwait
dec
icebp
in
fwait
pusha
jnp
fimull
aad
add
xor
jecxz
inc
sbb
movsb
pop
sarl
out
lods
mov
xor
fdivrl
and
pop
jmp
adc
aad
fildll
das
xlat
inc
push
cmpsl
xchg
lcall
dec
stos
es
sbb
jmp
daa
xchg
jns
int3
sub
aaa
adc
stos
push
add
bound
pusha
inc
push
xchg
pushf
pop
mov
cmpsl
jle
jg
enter
xchg
ljmp
fimuls
mov
fldl2t
out
mov
test
pop
call
adcl
cld
mov
lret
cwtl
push
bound
xor
pusha
xchg
fistpl
aas
jecxz
ss
jecxz
scas
mov
test
dec
fiadds
inc
rep
jae
sarl
mov
fdivrl
inc
ret
lcall
add
rol
pop
xchg
scas
aad
or
mov
xchg
jne
sbb
dec
adcb
xchg
scas
mov
push
cmpsl
popf
loop
jo
in
xchg
push
outsl
scas
icebp
adc
add
xchg
pop
enter
fmull
mov
cmpsb
fstpt
sbb
dec
fadd
inc
cld
dec
pop
jecxz
mov
add
sub
roll
out
inc
jecxz
js
xor
mov
outsb
ss
into
sbb
lea
inc
and
stos
jecxz
sahf
mov
xorl
lret
mov
ja
in
aad
inc
xlat
add
or
inc
xchg
and
adc
sub
mov
mov
add
lcall
mov
rolb
daa
pop
les
pop
mov
mov
aaa
jp
xchg
mov
or
push
stc
insl
add
inc
add
jmp
cs
mov
and
pop
popf
and
pop
xchg
das
inc
notb
out
aam
sbb
fbstp
dec
sbb
lret
sub
or
imul
cmp
arpl
sbb
sub
out
dec
cs
or
sub
xlat
movsb
inc
push
and
sti
pusha
xor
xor
mov
mov
scas
ret
push
into
pusha
sbb
xchg
push
stos
insl
or
mov
loop
lods
mov
mov
push
mov
xchg
scas
cmpsl
dec
inc
mov
xor
data16
or
push
mov
insl
movsl
dec
pop
dec
and
out
popf
fwait
gs
inc
and
outsl
jle
push
stos
cmp
aaa
jp
imul
sbbl
insl
in
rorb
in
in
ss
dec
imul
mov
imul
rcl
out
jne
sbb
and
xor
std
mov
loopne
cmp
pop
adc
ret
add
sahf
xor
mov
lret
pop
push
movmskps
shlb
adc
jae
lret
in
lods
repz
sub
leave
fsubrs
jg
stc
xchg
pop
pop
push
sub
dec
bound
pushf
push
or
pminub
fucomip
jno
push
sbb
dec
add
loopne
cmpsl
testl
cmp
xor
in
fisubrs
rcrl
mov
rclb
outsl
fiaddl
xchg
mov
dec
jmp
pop
dec
movsl
sub
pop
mov
mov
mov
pop
mov
es
int
xor
ljmp
mov
ficoms
jo
cmp
shrl
push
jecxz
jp
int3
push
dec
aad
mov
inc
aad
mov
jmp
xor
sub
xchg
sub
shl
and
mov
mov
das
aas
inc
sbb
addr16
sahf
mov
sti
jno
xchg
xor
fnsave
mov
adc
fcompl
lods
mov
call
push
adcl
stos
lods
dec
nop
pop
ds
mov
sbb
mov
ficomps
fs
adc
xchg
fs
mov
clc
push
pop
mov
aam
adc
into
jge
test
sbb
stos
and
cmp
lret
cmp
add
sub
push
mov
lds
fisubrl
rcrb
push
or
and
mov
jmp
imul
pop
lahf
incl
jmp
sbb
test
out
mov
inc
push
jmp
sub
in
stos
hlt
mov
xchg
cltd
and
test
pusha
nop
mov
mov
pop
dec
ljmp
scas
mov
rcll
and
mov
repz
imul
std
cmp
or
fadd
sub
lods
xor
ret
adc
xor
rcrb
jl
xchg
jecxz
mov
cmp
sub
pop
or
mov
push
xchg
add
ffreep
push
jp
inc
cld
lcall
push
outsb
xor
fs
sbb
sti
hlt
mov
lock
or
mov
cs
idivb
ja
xchg
cmp
adc
jne
call
inc
loop
fimull
lret
adc
repz
mov
jb
aad
scas
dec
jmp
push
inc
sub
aas
movsb
ljmp
mov
scas
insb
das
mov
test
mov
subl
fwait
test
push
fmulp
repz
fsub
bnd
fildll
cld
add
not
adc
or
xchg
pop
inc
pop
hlt
mov
les
or
xchg
push
loopne
out
ja
sbbb
nop
arpl
dec
pop
or
jge
jp
and
mov
cmpb
or
mov
rol
repnz
jno
mov
sbb
nop
cmc
out
or
lahf
lods
jae
div
loop
rclb
mov
mov
cld
lods
inc
xchg
sbb
sti
nop
sbb
mov
mov
add
fsub
outsb
cmc
aad
lret
mov
cmp
xchg
mov
xor
or
push
jne
and
outsb
mov
insb
adc
into
lods
xchg
fcomps
push
cld
add
pop
jl
sbb
out
test
mov
cmp
push
cwtl
cmp
fldcw
cwtl
pushf
pop
das
cmp
jne
cmp
mov
push
js
lock
mov
repnz
dec
shlb
dec
movsb
enter
mov
loop
mov
adc
add
inc
insl
push
xchg
daa
push
imul
jl
push
cltd
je
jne
pop
push
sbb
mov
push
push
dec
popf
xchg
jp
cwtl
inc
lahf
xchg
dec
dec
lock
sti
das
adc
aad
fcomps
inc
inc
fxch
sub
xlat
mov
cmp
into
aad
push
pop
jmp
fildll
push
js
push
inc
sub
sbb
ja
inc
movsb
data16
or
inc
push
push
lea
punpcklbw
mov
or
es
insb
mov
pop
adc
mov
loopne
iret
jo
mov
push
divl
inc
pop
mov
mov
scas
sbb
inc
test
adcb
mov
rcrl
imul
add
clc
add
out
adc
xor
xchg
add
xchg
arpl
insb
inc
pop
jmp
cs
adc
inc
testb
stos
call
js
repz
inc
cmpsl
lcall
cmp
cwtl
inc
or
pop
mov
sub
enter
mov
andl
movsb
push
and
dec
push
or
xor
stos
mov
mov
mov
inc
mov
subb
repnz
popf
and
pop
aam
mov
aaa
cmp
mov
xchg
mov
push
jecxz
sbb
add
cld
mov
or
int3
push
add
xchg
mov
sub
lcall
mov
xchg
add
mov
or
test
pushf
js
nop
in
bound
dec
xchg
out
jne
clc
dec
arpl
in
or
and
test
or
push
mov
mov
sbb
dec
sbb
mov
mov
jmp
jnp
xchg
xchg
push
pushf
mull
leave
js
test
pop
pop
mov
mov
in
adc
inc
shl
cmp
xchg
mov
sti
pop
jecxz
mov
pop
aas
push
xchg
fwait
push
jnp
or
dec
sub
scas
dec
mov
psllq
pop
int3
pop
outsl
xchg
sbb
and
addb
ja
sti
dec
fnstcw
popa
clc
xchg
js
jl
shl
out
pop
mov
fdivl
jo
idivb
les
imul
inc
test
jp
std
xchg
pop
jnp
lock
or
cmp
roll
mov
sub
icebp
cmc
cld
nop
fisubrs
cwtl
pusha
notb
mov
std
sbb
mov
mov
sarl
adc
xor
mov
xor
fsubs
lahf
inc
iret
pop
push
jmp
das
ja
and
leave
sub
xchg
mov
push
xor
outsb
dec
jo
mov
push
sbb
popf
outsl
lds
inc
and
inc
pop
leave
insb
jae
add
pop
mov
or
inc
aam
lock
lret
jl
mov
fcmovnbe
inc
mov
sahf
push
or
mov
cmc
inc
leave
adc
add
and
ret
inc
or
les
mov
sbbb
loop
in
pop
movsl
ret
xor
sub
inc
xchg
cmpsl
lock
pop
frstor
sub
xchg
inc
adc
mov
adc
daa
outsb
adc
xor
fists
test
in
pop
xchg
add
inc
cmp
out
ljmp
rcl
insb
sbb
rcrb
hlt
fsubl
push
jno
scas
cmpsl
push
dec
lcall
imul
movsb
cmpsl
out
push
mov
mov
mov
mov
jg
stos
cmc
outsb
pop
or
xorb
or
adc
or
test
and
test
sub
or
roll
cmp
loope
mov
xchg
ret
fsubl
mov
call
outsl
sbb
dec
push
add
jns
aaa
mov
movsl
pop
lods
jge
movsl
mov
roll
dec
ss
popa
clc
mov
jb
jecxz
jecxz
push
cmpsl
jae
data16
push
mov
stc
cmp
push
fnstsw
loope
jle
push
mov
dec
inc
inc
and
cmp
and
push
pop
sbb
pop
pop
xor
add
jecxz
es
loope
adc
icebp
stc
mov
pop
mov
mov
sub
scas
outsl
mov
loope
xor
push
ljmp
ljmp
leave
inc
lock
mov
shlb
cmc
aam
sub
sbb
or
xor
fcomps
aad
jmp
adc
sbb
js
add
mov
push
push
lock
inc
sbb
test
lret
out
mov
aad
add
cmp
pushf
sbb
add
fprem1
mov
cwtl
movsb
xchg
fdivr
in
xchg
dec
call
adc
lret
lret
xor
adc
fwait
testl
cmp
jp
nop
lods
cmp
xchg
jg
out
or
sub
or
inc
xor
pop
stos
push
add
xchg
jno
jnp
inc
add
mov
jnp
je
cmp
xlat
pop
adc
and
loope
jno
push
mov
xchg
jp
sti
cltd
cmp
loope
pushf
movsb
mov
sub
dec
out
mov
cmp
bound
cmp
ljmp
loopne
rcll
fsubrl
and
pop
mov
sbb
dec
mov
sub
jno
repnz
push
ret
and
push
mov
loope
xor
orb
in
xor
pop
outsl
cli
test
mov
int
test
mov
adc
pop
iret
mov
xchg
lret
repz
mov
rolb
inc
icebp
push
fnsave
cmpsb
rcll
sub
jne
test
pop
dec
fmuls
sub
icebp
cmpsb
cmpsl
es
and
pop
mov
jg
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
pop
mov
add
xor
add
add
add
add
add
add
add
sub
add
sub
add
xor
add
test
pop
add
add
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
imul
mov
inc
add
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
add
rorb
add
add
add
add
and
add
adc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
test
ret
pop
dec
test
sub
mov
add
add
pop
inc
jne
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
push
movb
xor
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
push
mov
inc
pop
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
movl
movl
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
mov
movl
movl
lea
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
mov
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
mov
mov
mov
mov
mov
mov
lea
mov
cmp
jb
mov
mov
mov
add
cmp
jae
sub
add
mov
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
sub
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
pushl
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
lea
add
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
mov
add
mov
mov
xor
add
mov
push
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
push
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
xor
add
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
mov
mov
add
mov
mov
mov
add
andl
mov
mov
mov
mov
mov
mov
lea
mov
xor
mov
add
incl
cmpl
mov
jb
movl
movl
movl
movl
movl
movw
movb
xor
lea
mov
xor
sub
inc
mov
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
movzwl
movzwl
mov
xor
mov
xor
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
jmp
mov
xor
mov
lea
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
sub
xor
cmp
jne
xor
jmp
xor
inc
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
push
push
movl
movl
xor
inc
je
mov
xor
add
cmp
jne
jmp
mov
xor
add
mov
sub
mov
mov
xor
add
mov
add
mov
jmp
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
pushl
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
push
pushl
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
add
push
lea
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
mov
popa
test
cmc
aaa
push
shrb
out
push
popa
jns
add
repz
add
mov
in
dec
jo
sbbl
push
cmp
outsl
jmp
push
arpl
les
xor
mov
pop
mov
imul
js
les
cltd
sahf
cmp
ret
jno
movsl
lea
jmp
mov
outsl
xchg
pop
push
push
xorb
sub
popf
and
fisubrs
mov
cld
or
outsl
pop
inc
and
mov
push
inc
pop
pop
adcb
aad
popf
mov
dec
mov
adc
aas
icebp
les
dec
scas
sbb
mov
cli
fstpt
test
push
stos
dec
cmp
and
out
jmp
pushw
sub
mov
lods
and
push
int
into
dec
adc
in
pop
or
adc
push
mov
xchg
cmp
cmp
mov
jns
test
mov
dec
cmp
adc
popf
push
push
mov
int3
dec
mov
pop
push
xlat
fcomi
aam
xchg
bound
adc
push
xor
fsubl
add
loope
mov
mov
out
dec
repz
add
mov
and
push
add
scas
test
xor
or
lahf
stc
mov
sub
ret
push
xor
fs
cmp
pop
into
mov
mov
aas
rclb
cltd
cmp
mov
inc
jmp
shlb
insb
push
shll
sub
jno
hlt
push
cmc
sbb
push
adc
in
xchg
lds
ds
test
nop
loopne
xchg
test
fnstenv
sub
dec
mov
hlt
jnp
xchg
faddl
data16
adc
dec
cld
mov
jnp
add
mov
xor
mov
or
scas
fbstp
lret
jecxz
pop
cli
pop
jl
mov
fwait
push
iret
ljmp
add
inc
cmp
push
mov
sub
jle
cmp
scas
push
push
lahf
push
movsb
pop
loope
cmp
or
lds
into
xchg
test
pop
mov
xor
push
sub
clc
int3
mov
jb
mov
mov
push
mov
arpl
xchg
imul
lret
fsubs
orl
and
popf
mov
test
aas
fwait
cmp
sub
inc
cwtl
sub
mov
out
push
insb
cmp
cmp
mov
lea
fwait
dec
js
movsb
iret
pop
pop
mov
ljmp
and
fwait
js
adc
jbe
cwtl
in
movsl
lret
psllw
push
test
lds
outsb
mov
and
cld
mov
jle
mov
push
cmpsl
adc
in
xlat
mov
scas
add
in
sbb
cs
jnp
xor
or
pop
inc
orl
push
sub
ret
push
sbb
adc
into
pusha
and
movsl
fidivs
push
iret
add
pop
xor
mov
mov
ljmp
inc
pop
gs
mov
adc
icebp
inc
sub
dec
out
push
adc
jle
xchg
mov
loop
jp
push
xchg
mov
jno
mov
xchg
in
rorl
out
sub
movl
out
pop
add
adc
rcl
jl
movsb
rcl
jg
loop
cld
int
sub
stc
mov
stos
jnp
push
mov
lret
pop
dec
cmp
in
inc
in
jo
inc
jecxz
xchg
mov
inc
mov
fisubs
xor
sti
fstps
sbb
adc
and
push
cmp
in
jne
mov
sub
push
adc
sub
or
mov
dec
cmc
and
xor
inc
aad
mov
int3
imull
mov
cmpl
testl
xor
cld
sub
dec
outsl
push
in
mov
in
jbe
jl
add
aam
add
jno
push
xlat
mov
les
aaa
ret
popa
jecxz
jno
and
adc
enter
push
jnp
cltd
ss
cmp
inc
outsb
mov
sahf
popa
mov
push
mov
inc
push
fstpt
adc
in
repz
dec
les
push
adc
xchg
in
popa
and
nop
fcomi
jg
frstor
push
push
xchg
mov
and
and
in
jg
pop
inc
mul
add
add
add
push
sbbb
fistpl
mov
add
repz
add
jmp
in
xchg
inc
xor
mov
inc
jge
repz
imul
or
cmp
jo
pop
xchg
call
mov
shr
int
adc
inc
lock
inc
mov
or
jbe
pusha
inc
jbe
mov
repnz
or
sbb
sbb
testb
xor
orl
lock
push
sbb
ja
ljmp
xor
xchg
repz
jecxz
orl
test
sub
and
push
fs
scas
shr
jb
mov
mov
jge
pop
ljmp
sub
inc
movsl
xchg
dec
sarb
pop
pop
loop
cmp
andb
mov
and
out
mov
or
and
jae
xor
push
shll
add
add
inc
in
movsb
jae,pt
mov
mov
loope
pusha
clc
lods
add
sub
dec
sub
adc
in
adc
xlat
mov
movsb
or
aam
pop
dec
xlat
shll
inc
inc
imul
mov
mov
mov
push
cmp
sti
jne
test
and
jmp
adc
jl
or
loope
mov
push
mov
jl
ficoml
push
mov
lods
dec
orl
sti
adc
pushf
cmpsb
into
pop
lea
mov
add
mov
cmp
jmp
mov
lea
enter
ror
jmp
mov
cmpsb
daa
rclb
roll
add
insb
mov
std
cmp
pushf
addr16
adc
xchg
fdivrs
inc
ljmp
jae
test
add
shll
jmp
enter
in
movsb
pop
ja
push
push
clc
add
cld
mov
scas
jno
xchg
insl
xchg
push
enter
mov
pop
jb,pn
into
and
jno
cld
pop
cli
addb
testl
ljmp
adc
dec
fnstenv
jg
mov
or
and
test
lret
add
mov
jge
test
jmp
inc
insb
add
in
xchg
push
sub
addr16
add
pushf
ret
cmp
push
rclb
inc
fsub
add
int3
ret
mov
dec
mov
scas
mov
push
call
rorb
stos
and
mov
dec
in
not
cmp
mov
andb
sbb
outsb
inc
ja
in
sti
xor
lods
inc
fs
inc
sahf
in
xlat
dec
mov
fs
test
inc
cwtl
cltd
push
or
mov
pushf
jp
and
scas
cwtl
jl
fldenv
mov
lods
mov
push
ljmp
aad
cltd
mov
or
ljmp
addr16
leave
in
push
popa
out
add
adc
outsl
push
rol
shrl
cmp
lods
dec
stos
popa
push
add
popf
xchg
iret
mov
push
jmp
inc
xor
mov
aam
dec
mov
in
andb
test
lcall
gs
sub
incb
movsb
dec
iret
pop
test
cli
clc
pop
in
out
cmp
mov
add
repnz
lods
sbbl
adc
push
stc
xchg
fcomps
mov
xlat
ja
out
leave
aaa
push
fstl
stc
mov
lods
and
stos
testl
sbb
lcall
fisubl
pop
cmp
sub
add
fists
int
xchg
test
xor
scas
xchg
stos
lods
testl
repnz
adc
dec
lods
incb
je
cmp
fmuls
in
shlb
pop
in
icebp
add
push
lods
lods
sub
dec
movsl
cli
inc
mov
jnp
ljmp
push
popf
loop
stc
cmpsl
ss
je
loopne
sub
jno
out
mov
imul
xor
xor
mov
pcmpgtw
lods
fldl
lds
sbb
stc
push
xor
mov
lret
movsl
dec
adcl
sarl
mov
jne
xor
icebp
sub
pop
dec
xor
pop
jno
jp
incl
and
lret
aam
inc
jns
inc
cmpsb
rclb
fcmovb
test
push
mov
add
add
cmp
cmpsb
jg
mov
jae
inc
fistps
add
repz
add
mov
fcoms
dec
xchg
je
mov
outsb
out
inc
es
dec
loopne
movb
inc
js
or
cmc
pop
or
jns
xlat
sub
fsts
enter
outsb
cmp
mov
repz
push
cmpb
hlt
loopne
add
call
inc
cmp
add
aad
rclb
or
clc
hlt
mov
test
ljmp
fidivl
mov
subl
sub
test
mov
std
icebp
jg
lea
xor
leave
and
cs
jp
mov
lahf
clc
lcall
mov
adc
jp
in
xchg
hlt
fmuls
jae
call
adc
lea
sbb
cmpsl
insl
or
sbbb
adc
lock
push
sub
stos
mov
push
mov
add
inc
mov
jne
cltd
sbb
movsb
push
jno
adc
rclb
add
mov
cwtl
sbb
cmpsb
fcompp
and
jns
cmp
mov
sbb
cmp
mov
push
test
mov
sbb
mov
mov
popa
rol
jmp
popf
add
fstpt
dec
mov
mov
cmp
jle
jnp
jmp
ss
xchg
shl
lea
fisttpll
xchg
cld
inc
mov
aas
mov
rcl
lods
or
mov
jle
lahf
leave
push
or
sub
cmp
dec
push
mov
sbb
mov
jno
mov
add
sbb
xchg
jne
pop
xchg
xchg
fwait
imulb
out
and
push
pop
mov
dec
or
push
adc
push
or
leave
xor
jne
adc
movsb
xor
xor
jecxz
inc
test
fistl
pusha
sti
push
mov
adc
popa
fsubp
xchg
pop
out
mov
cld
call
push
pop
stos
imul
pop
add
push
rorb
or
lods
add
dec
xlat
cmp
insl
adc
mov
lds
mov
adcl
popf
repz
loopne
imul
mov
enter
pop
mov
mov
fisubl
xor
push
pmovmskb
pop
xor
or
pop
loopne
fnstsw
ss
les
repnz
xor
shlb
pusha
pop
mov
xor
fsubrs
sbb
jmp
enter
jge
insb
pop
jecxz
and
mov
sub
push
leave
mov
cmp
sbb
stos
shl
jo
xchg
jg
push
jne
insl
sbb
mov
repnz
pop
insl
idivl
mov
jnp
insb
lock
add
xchg
loopne
cmp
push
jne
adc
inc
dec
xor
pop
cmpsl
add
inc
sub
daa
mov
fnstcw
inc
dec
int3
in
ja
std
push
add
sub
jp
jp
scas
adc
rorb
dec
cwtl
push
lret
lds
repnz
cwtl
scas
xchg
sbb
sahf
lock
aas
aad
stc
in
pushf
sbb
and
fisubl
mov
mov
into
add
adc
or
pop
jp
mov
call
mov
cmp
mov
repz
pop
je
popa
or
insb
push
or
std
mov
inc
sub
inc
mov
icebp
test
jns
push
data16
or
adc
jne
pop
dec
bound
inc
dec
adc
and
xchg
notl
test
icebp
mov
std
pop
sub
cltd
xchg
inc
sbbb
and
xchg
dec
imul
mov
add
mov
lret
mov
out
jp
lods
in
push
imul
push
cmp
cmp
ret
iret
adc
push
cli
or
scas
fildl
or
cltd
inc
jecxz
cltd
mov
sbb
leave
pop
out
dec
xor
ret
jg
call
xchg
adc
or
add
test
jecxz
adc
push
insb
adc
xorb
dec
ror
sbb
xchg
pop
jns
xor
jns
xchg
push
test
cli
pop
and
and
in
xor
xlat
adc
ljmp
or
fdivrs
into
dec
xor
mov
jmp
int3
jns
cwtl
or
das
stos
leave
in
arpl
aam
sub
mov
ret
add
add
add
pminsw
idiv
repz
lret
xlat
xchg
push
jecxz
add
add
add
call
out
xchg
leave
inc
pop
sbb
les
scas
cli
lcall
pop
outsb
gs
mov
cmp
lds
nop
mov
adc
pushf
cs
insl
out
jae
mov
call
out
mov
mov
aas
fwait
mov
js
jl
jecxz
test
fadds
jg
mov
test
push
in
loopne
cmp
je
and
mul
imul
adc
pop
inc
add
fs
test
pop
stc
aaa
dec
rcll
ss
jnp
fwait
es
into
xchg
cmpsb
push
loope
mov
outsb
in
popf
sbb
out
rcll
in
mov
inc
arpl
jns
aaa
inc
jl
ja
mov
adc
adc
mov
push
xlat
pushf
loope
xchg
dec
scas
js
xchg
mov
inc
lcall
aad
fs
dec
dec
pop
and
test
cmp
mov
dec
loop
popf
notb
jne
loopne
mov
fs
gs
inc
and
int
cmp
insb
sbb
add
adc
inc
dec
xor
test
sbb
and
movsl
xor
or
lcall
popa
jmp
ja
ds
js
scas
int
mov
imull
xchg
sbb
arpl
fists
pop
scas
xor
out
decl
repz
jp
stos
inc
xchg
pop
adc
cmp
test
sub
pop
or
xor
xchg
stos
lds
outsl
dec
outsb
loope,pt
cmpsb
push
daa
fimull
cmp
push
iret
sub
sub
lods
push
movsl
push
adc
cmp
add
inc
leave
mov
dec
sub
adcl
pop
mov
shrl
xchg
enter
inc
leave
mov
push
mov
outsb
sbb
cmp
xor
xchg
in
pop
xchg
pop
sti
iret
cmp
or
test
pop
xchg
jno
lret
rorb
pop
pushf
jmp
lods
andb
test
adc
cmc
insb
adc
adc
xor
mov
jle
sbb
fs
insl
lods
sahf
enter
cmpsb
push
fld1
shrb
mov
fldt
mov
xor
daa
or
xchg
gs
pusha
imul
dec
sbb
add
jnp
insb
add
xchg
inc
mov
inc
stc
pop
mov
mov
pop
mov
xchg
cld
xchg
les
xchg
jl
pop
inc
aad
cmpsl
lret
and
dec
or
fidivrs
dec
add
and
loope
js
cmpl
or
and
loopne
or
push
sub
sub
aaa
xchg
xchg
out
add
ret
sub
pop
in
mov
jb
cmpsl
std
sub
xchg
adc
inc
sahf
or
inc
enter
push
aaa
sarb
or
ja
cltd
dec
push
inc
cvtpi2ps
fbstp
xchg
xor
dec
push
jae
daa
cmp
sub
cmpsb
in
mov
push
sbb
cmp
mov
dec
push
sub
in
loope
lret
loopne
daa
adc
enter
icebp
fwait
insl
fimull
xor
and
int
out
enter
sub
insb
cld
iret
ss
mov
repnz
test
js
cmp
jno
push
xor
xlat
enter
jp
mov
pop
sbb
movsb
mov
push
fldenv
test
insl
jl
sqrtps
cmp
push
jnp
dec
rcll
sahf
lret
adc
and
mov
loope
push
mov
insb
push
jnp
adc
sahf
mov
or
cwtl
mov
lock
pop
inc
and
pop
fdivrs
rol
fstpl
shll
dec
cmc
rcrl
test
das
lret
mov
inc
fucomip
jl
pop
push
pop
jle
pop
pop
ss
gs
or
repz
mov
in
adc
mov
and
aam
inc
movsl
push
xchg
sbb
in
mov
cmp
push
addr16
mov
daa
push
aas
jbe
cmp
sbb
pop
dec
push
sahf
ss
inc
js
sbb
sbb
cmp
xor
icebp
mov
fstpt
cmp
or
sbb
or
scas
int3
push
aad
fbstp
fisttpl
loopne
scas
lods
push
lret
lods
in
aam
cmp
clc
fnsave
in
cmp
jecxz
mov
nop
push
or
xor
sarb
fimuls
stc
inc
add
enter
mov
add
add
xchg
lret
jnp
sarl
adc
daa
inc
call
add
call
fwait
dec
les
xor
cltd
xchg
mov
jecxz
pop
cmp
push
lahf
cmp
jp
mov
dec
sub
icebp
loopne
rol
sbb
aam
push
or
pop
mov
addr16
fwait
mov
jmp
dec
sbb
rcl
gs
mov
cmpl
out
jns
arpl
mov
notb
inc
in
cmc
or
add
sbb
add
add
ret
pop
in
es
insb
jne
or
xlat
or
subl
out
std
mov
inc
sbb
inc
fistl
or
int
jle
movsl
mov
pop
cmpsl
data16
in
sub
pop
cmpsl
lea
repz
adc
and
mov
lds
and
out
pop
or
int3
sbb
dec
out
inc
push
cwtl
mov
pop
cltd
repnz
out
jecxz
ficompl
jg
in
aam
testl
mov
aaa
dec
in
cmpsl
xor
push
pop
sbb
jle
lock
outsb
loopne
add
lea
sub
sti
or
lret
sbb
and
movb
or
sahf
pop
and
fwait
push
test
add
and
mov
cwtl
iret
movsb
add
mov
adc
or
inc
nop
mov
in
jae
push
shll
sub
push
xchg
imul
jb
test
ret
or
adc
cmovo
jae
movsb
push
dec
pop
xchg
cmp
or
mov
add
jecxz
mov
pop
jnp
dec
shll
call
cmp
gs
cmp
iret
jecxz
filds
xchg
sbb
movsb
lret
add
flds
and
and
lret
shr
fcmove
fsubp
cmp
in
xor
es
dec
sti
fnsave
clc
sbb
subb
inc
addr16
pop
iret
cltd
in
push
pop
ds
fs
das
stos
xchg
lret
lock
std
pusha
and
stos
xor
int3
scas
mov
sbb
testb
jp
int
sahf
loopne
mov
dec
cmp
jg
xor
sbb
or
sub
inc
or
mov
jge
inc
jle
aaa
push
pop
testb
pop
jmp
push
aas
xchg
out
dec
sbbl
repz
scas
sub
and
les
jo
adc
stc
cltd
inc
scas
inc
inc
decb
xchg
pop
inc
sbb
out
inc
sbb
pop
ret
mov
les
and
xor
adc
mov
jmp
std
out
and
fimull
loope
dec
jecxz
insb
loopne,pn
jmp
or
stos
ret
xor
cltd
or
shl
arpl
push
mov
sub
sarb
mov
into
icebp
push
and
shr
or
cmc
aaa
xor
cmc
insb
ds
and
cli
xchg
jecxz
sbbl
in
stc
scas
out
pop
xchg
aam
jne
jg
or
sub
sbbl
cs
push
sub
fcmovb
pop
inc
les
daa
xchg
lods
or
and
scas
mov
movsb
jmp
pushf
outsb
dec
push
pop
xchg
pop
jmp
push
mov
iret
enter
mov
popl
sub
and
fwait
cmp
xchg
or
sahf
add
lock
cs
push
notb
pop
add
mov
in
pop
ficomps
sub
mov
lock
and
gs
add
popa
add
xchg
shl
outsb
movsl
test
jnp
and
scas
jle
or
add
xor
xor
and
xor
in
xor
pop
or
inc
lds
adc
jle
sub
sub
xlat
cmp
mov
popa
or
jae
test
inc
cmp
ret
aaa
jno
pop
pop
iret
and
addr16
mov
popf
aas
js
push
push
inc
ja
not
mov
ds
adc
lods
jne
loop
push
fnstsw
dec
sbb
push
mov
gs
dec
dec
into
mov
dec
inc
cmc
aam
ja
je
pushf
in
in
rclb
jae
fsubp
or
roll
mov
mov
jno
shrb
fiaddl
add
push
sub
test
adc
dec
stc
cmp
add
repz
add
push
mov
jnp
ret
xchg
push
xor
loopne
jnp
in
xchg
pop
pop
adc
nop
idivb
lock
je
adc
add
stc
gs
fistpll
pop
jl
call
fstp
push
mov
adc
sbbb
dec
push
test
mov
mov
jo
in
fisttpl
mov
ljmp
jno
xor
sub
push
sti
adc
dec
sbb
pushf
add
mov
scas
in
xchg
ficompl
fdiv
dec
out
adc
repnz
fidivrl
mov
add
dec
jns
or
push
rcrb
adc
jb
sbb
xchg
loop
ljmp
scas
stos
mov
cpuid
ret
or
cmp
dec
mov
cmp
insl
lods
xchg
orb
lods
inc
cmpsb
cld
ljmp
and
sbb
dec
fidivs
cmpsb
mov
and
xchg
cmp
mov
pop
mov
pop
mov
and
pop
or
jp
addl
lahf
add
xor
inc
cmc
flds
jbe
jb
jns
mov
mov
fmuls
aam
mov
jno
add
ja
jae
xor
aad
repz
or
cli
xchg
add
xchg
lret
loopne
repnz
movhps
movsl
rclb
test
daa
popa
movb
insb
add
fdivs
xor
xchg
mov
out
jle
dec
test
jb
mov
xchg
lret
sub
aas
shrb
mov
les
imul
xchg
add
cmp
rolb
add
test
mov
cmp
xchg
test
mov
dec
push
jp
inc
xchg
mov
fcompl
outsb
mov
and
adc
push
js
push
jb
push
shll
mov
stc
cmp
push
cmp
fisubrs
pop
std
in
xchg
xor
fstpl
jne
mov
out
inc
jl
jecxz
push
sub
sbb
inc
pop
fcompl
mov
inc
pop
into
repz
int
pop
aam
push
into
int
push
push
mov
dec
hlt
ds
outsl
lret
out
mov
inc
adc
pushf
mov
scas
movsb
add
loope
sti
test
int
sbb
jle
flds
pop
fdivrl
mov
sbb
movsl
push
fisubrl
fdivrs
loopne
loopne
aaa
adc
push
pushf
sahf
js
lods
insl
in
aam
mov
or
or
mov
mov
pop
call
mov
push
dec
mov
out
lea
repz
and
jl
ret
push
add
loop
fidivs
adc
shl
fs
scas
dec
sub
andb
xorl
mov
pop
inc
mov
scas
imul
pop
push
mov
jmp
xchg
repnz
cmpl
ljmp
clc
xchg
out
push
jno
test
shl
imul
aas
stos
ljmp
jne
dec
mov
mov
arpl
pop
int
xchg
dec
enter
fldt
jnp
sbb
or
dec
loop
sbb
fwait
xchg
je
jb
fmull
push
ss
ja
mov
nop
jne
sub
lcall
or
sbb
scas
and
or
and
xchg
popa
lock
loop
lret
push
push
mov
jmp
shl
inc
dec
jbe
insb
pop
push
inc
iret
inc
js
arpl
mov
mov
hlt
nop
cmp
xchg
mov
in
adc
test
xchg
ss
in
popf
ljmp
lret
push
jns
test
pop
sbb
inc
xchg
mov
pop
adc
stos
movl
pop
test
mov
pushf
cmp
stos
cwtl
mov
sbb
rolb
adc
xor
fucom
bound
loop
sub
inc
loop
jns
iret
mov
inc
xchg
xchg
pop
sub
popf
and
sbb
je
aas
xchg
pusha
mov
sbb
mov
outsb
mov
iret
sub
aam
outsb
lea
repnz
rcrl
push
inc
and
and
dec
repz
es
jnp
nop
mov
mov
mov
inc
lcall
mov
xchg
dec
std
jo
inc
sbb
mov
add
jne
and
cmpsb
mov
sub
add
add
fisttps
mov
adc
lret
or
repz
add
dec
aad
dec
cmpsb
insb
push
sbbb
pop
mov
adc
test
daa
das
push
sti
mov
xor
test
xchg
loopne
inc
dec
and
mov
add
popa
mov
nop
or
and
aad
mov
and
mov
jecxz
sbb
cs
inc
loop
faddl
repnz
mov
pop
pop
test
xor
aas
outsb
adc
mov
mov
fcompl
fs
bound
les
xor
mov
lret
jbe
cltd
repz
mov
lret
mov
mov
mov
or
stc
movsl
ljmp
jmp
inc
dec
mov
mov
mov
inc
cmpsl
inc
sbb
adc
adc
iret
jl
xor
popf
cmp
shlb
pop
cmp
mov
push
fdivrs
das
mulb
cmp
gs
stc
mul
mov
push
int
out
push
test
movsb
jae
mov
inc
insl
or
sarl
ret
push
pop
dec
lds
sub
cwtl
push
sahf
sub
cmp
mov
daa
inc
sbbb
imul
dec
push
enter
ja
cmp
movsl
pushf
dec
ds
xchg
flds
inc
in
fnstcw
xchg
adc
outsl
lea
push
adc
test
sahf
jb
js
add
jl
shrb
or
jg
loope
xchg
inc
fiadds
pop
push
xchg
push
sub
add
fwait
sub
or
fistl
mov
mov
enter
xor
iret
addr16
les
lds
fidivrs
iret
mov
cli
inc
cmp
push
les
int3
cmpb
mov
sbb
push
xor
jne
pop
push
mov
aad
pop
lock
sbb
lock
mov
cli
lods
mov
repnz
daa
pop
enter
cmp
lret
fsubp
jno
mov
sbb
ss
adc
pop
loop
je
mov
ret
xchg
jge
out
aas
aas
cmpsb
and
sahf
or
movsb
adc
lock
sub
and
aaa
or
lcall
cmp
adc
dec
repnz
jbe
sbb
pusha
in
cmp
sub
pop
jmp
xor
push
pop
xchg
test
adc
std
leave
and
mov
cmpsl
out
inc
out
push
or
dec
pop
enter
iret
xchg
adc
int3
int3
cltd
inc
sbbb
sub
int
and
push
cs
repnz
cmc
inc
pop
inc
int3
add
inc
and
sarl
lea
xor
out
jecxz
jnp
sub
sbb
xor
cmp
jbe
inc
mov
enter
clc
pusha
xchg
inc
mov
test
imul
pusha
mov
push
push
ljmp
sahf
fucomp
and
bound
out
mov
out
mov
and
in
ficompl
ret
inc
cmpsl
ss
icebp
or
es
xchg
lahf
xlat
pusha
pop
adc
cli
ja
ja
jnp
ret
mov
cmpsl
popf
cmp
pop
out
test
push
adc
sub
pop
jle
outsl
dec
lcall
and
enter
adc
dec
fsubp
xchg
ja
dec
push
and
shrl
mov
push
imul
scas
and
out
mov
xor
mov
adc
das
data16
mov
mov
lea
bound
or
test
push
add
jae
test
insl
pop
xchg
add
xor
test
cmpsb
adc
adc
adc
daa
push
dec
ss
mov
ss
das
xor
cmp
testl
iret
mov
mov
lret
mov
push
xadd
movsl
pop
adc
ss
pop
fsubrs
popa
insl
in
jle
lods
jp
es
fabs
repnz
jae
es
inc
inc
shlb
les
aam
inc
adc
jp
fisubrs
mov
mov
prefetchnta
fidivrl
lods
jmp
shrl
icebp
stos
enter
jl
adc
aam
xchg
pushf
pushl
ss
scas
rolb
clc
outsl
js
dec
js
jle
fstpt
xchg
add
mov
add
xor
stos
sbb
popa
aas
sbb
les
inc
jb
jbe
cltd
sbb
jnp
mov
add
add
add
mov
jno
cmc
divl
mov
out
testl
add
int
insb
inc
sub
dec
push
pop
filds
shrb
and
cli
in
mov
mov
test
lods
push
cmp
arpl
inc
jnp
mov
push
cmpsb
jecxz
dec
mov
push
xchg
ja
cld
or
inc
call
mov
mov
jmp
jp
or
je
fimuls
test
fadds
lret
popf
mov
sbb
push
int
push
or
jp
dec
enter
jge
in
inc
aas
and
dec
test
adc
mov
sbb
jno
lods
pusha
push
js
or
rclb
push
jmp
clc
lahf
adc
fadds
inc
repz
mov
fimuls
cmp
out
ffree
dec
fistpl
js
sbb
dec
scas
fwait
cmpsb
out
bound
xchg
fstl
jne
and
cmp
lret
jecxz
shll
pop
cmpsb
in
pop
xor
push
push
mov
in
xchg
pop
xchg
lcall
ret
fidivrs
jmp
add
dec
stos
hlt
push
jg
lock
jnp
jo
lcall
mov
and
aas
fidivs
loop
mov
and
mov
inc
cmp
ret
or
pop
daa
fs
cmp
loopne
xor
add
mov
jns
mov
or
out
in
mov
inc
jle
mov
clc
cli
mov
sub
cmp
mov
add
add
sub
pop
out
lret
xchg
xchg
mov
jb
mov
cmp
test
jmp
xor
pop
xchg
push
shr
ficoml
test
and
nop
add
or
dec
scas
lcall
das
cmpsb
rcr
imul
leave
out
mov
and
ja
sub
stc
mov
mov
adc
sbb
and
xchg
mov
dec
pop
pavgb
psubsb
jb
or
and
cwtl
push
mov
out
cld
sub
test
mov
lea
mov
jne
clc
xchg
and
push
iret
ss
scas
push
mov
jecxz
push
xlat
out
pusha
jecxz
mov
adc
hlt
int3
in
ss
pop
pop
xchg
lahf
out
loop
dec
or
cmp
in
fcomps
out
daa
adc
push
push
je
shlb
push
fwait
outsl
inc
outsl
cmp
rclb
dec
imul
add
nop
xor
fcomip
xor
rclb
and
sub
ret
push
adc
push
es
xchg
nop
push
popf
sub
push
push
or
jge
rcrl
cmp
test
call
mov
mov
sbb
rclb
leave
pusha
and
loop
or
shr
mov
pop
inc
mov
or
mov
stos
xchg
lods
jo
adc
mov
dec
sub
std
xchg
sbb
pop
add
insb
or
cs
mov
adc
lds
js
lcall
sbb
pop
movsb
incl
add
jmp
aas
adc
faddl
repnz
aas
gs
jecxz
mov
push
loopne
hlt
xchg
sbb
lea
sbb
ffree
xchg
mov
fldl
test
pushf
frstor
pop
or
call
xor
lea
xor
jae
push
icebp
faddl
adc
divb
adc
and
fwait
push
out
add
sbb
sub
loope
scas
inc
inc
jae
lahf
jp
mov
push
ret
test
orl
bound
daa
aas
ja
add
xor
ja
mov
cld
fsubrs
inc
out
das
test
push
mov
push
xchg
push
cwtl
data16
fsubs
ljmp
sbb
or
push
lods
xchg
fprem1
add
outsb
and
jnp
lea
cld
test
dec
in
inc
daa
mov
in
push
jp
add
cmpsl
push
fstl
jl
push
lock
mov
mov
test
mov
mov
aaa
mov
aaa
push
xchg
inc
jnp
xchg
rorl
mov
lret
sub
cmp
subl
push
mov
fbstp
add
data16
add
ret
inc
fisttps
lahf
int
push
rsqrtps
imul
repz
add
ljmp
xor
jecxz
jbe
pop
xchg
pop
divl
cmpsb
nop
js
and
shl
popa
push
orl
mov
js
outsl
jle
mov
mov
sbb
sub
pop
sbb
xor
xchg
sbb
fdivr
dec
push
add
xchg
std
fs
dec
xor
lret
sub
cld
xor
cmpsb
in
cmp
cltd
jl
sti
inc
add
mov
cld
out
stos
pop
mov
push
pop
xchg
addr16
movsb
jl
fs
fneni(8087
mov
push
sbb
sarl
inc
inc
mov
int3
addr16
jl
or
add
push
shlb
jp
out
sahf
xchg
mov
jl
lods
test
or
inc
lret
int
lret
out
fldt
pop
add
push
gs
cmp
push
push
mov
jbe
mov
adc
inc
outsb
fisubrs
sbbl
and
insb
popf
loopne
and
lock
pop
and
and
loope
mov
je
push
mov
pushf
dec
sub
addr16
jae
lods
sbb
incl
ret
cmp
sub
mov
out
cmc
pop
jb
cmp
push
push
cli
loope
cmpsb
and
scas
push
mov
das
xchg
lret
pop
es
sub
in
cmp
sbb
sub
and
in
xor
ret
inc
sub
inc
ja
or
fmuls
inc
cmc
xchg
mov
add
push
aad
lahf
insb
out
cwtl
sbb
sbb
sbb
js
cmp
scas
push
fistl
rcrb
shl
bound
jb
jo
fldcw
push
scas
jmp
add
mov
pop
push
out
dec
lret
ds
sub
mov
xchg
rcll
xchg
lahf
cs
dec
pop
movsl
jp
xor
lods
adc
sbb
jnp
test
inc
daa
pushf
pushf
xchg
push
ret
sub
cmp
jno
repz
inc
add
mov
xchg
mov
and
mov
pop
pusha
or
push
mov
adc
cltd
jnp
jne
orb
adc
kmovw
jno
lahf
sub
sub
scas
pop
data16
push
je
pushf
lods
rcrb
inc
in
jnp
iret
shlb
jg
into
adc
cmp
arpl
adc
xor
fildl
notl
sbb
shlb
cmp
andb
ret
stos
popa
cmc
inc
shr
jns
xchg
mov
cmp
lods
out
sti
and
push
or
push
aam
test
cmpsl
fsubrl
dec
cld
xchg
fs
sbb
pavgb
push
lret
test
cmp
push
mov
jl
push
dec
sub
cmc
test
inc
scas
adc
xchg
mov
sub
inc
adc
jp
mov
lret
stc
xor
add
cmc
addr16
test
out
stos
jg
lds
adc
adc
dec
xchg
xchg
arpl
or
aam
and
add
xor
and
xor
mov
xor
aam
jb
pop
je
lods
xchg
lods
add
inc
jb
xor
mov
cmp
jg
adc
xlat
mov
cmpsl
mov
dec
sub
xchg
mov
mul
adc
pop
stc
inc
in
cmp
sbb
push
sbb
pop
xchg
pop
orb
out
out
xchg
mov
pop
ds
ds
xchg
mov
test
iret
lret
pushf
arpl
gs
mov
loop
repnz
inc
adc
lahf
xchg
je
in
push
push
movsb
stos
jo
cmp
inc
push
sbb
sbb
fdivp
xor
mov
xor
mov
iret
dec
push
bound
ds
xchg
mov
out
bound
cmp
jmp
and
mov
lds
fwait
sbb
mov
daa
sbb
add
ret
push
xchg
sub
imul
xchg
js
inc
dec
sahf
pusha
sbb
sarl
pop
dec
and
cmpsl
adc
inc
test
in
jecxz
mov
dec
push
test
cs
add
popf
or
imul
push
and
lahf
repnz
adc
sub
lea
xor
hlt
mov
xor
es
cmp
xchg
loopne
push
inc
sub
sub
mov
push
mov
sub
xchg
mov
pop
push
fwait
inc
outsl
subb
jb
scas
mov
imul
adc
xor
mov
scas
outsb
inc
das
xchg
dec
add
add
add
call
aas
popa
adc
orl
add
repz
add
js
and
xor
das
popa
sub
rcrb
jmp
inc
jbe
mov
inc
jb
dec
in
push
rclb
xchg
push
cmp
or
in
in
xor
cmp
cmp
and
fcoml
jb
imul
or
push
out
cld
mov
pop
insl
lods
xchg
adc
hlt
in
jle
mov
cmp
pop
icebp
cli
imul
push
bound
inc
mov
pop
jb
arpl
mov
cld
jae
mov
repz
leave
xlat
xor
into
add
inc
mov
xor
inc
fwait
aas
sbb
or
scas
fnstsw
jp
cmp
loop
das
add
adc
aad
jmp
add
sub
pusha
mov
stos
inc
scas
nop
ds
dec
data16
push
int3
mov
xor
jmp
push
rolb
aaa
dec
mov
xchg
cli
jle
es
cld
xor
lock
in
mov
je
insb
hlt
loop
cld
test
xorl
xchg
movsl
jmp
cwtl
hlt
faddl
push
popa
xchg
cltd
cmp
in
jle
jg
fs
into
imul
mov
or
adc
and
add
sub
xchg
sub
std
sbb
sub
dec
or
jo
add
mov
xlat
rorl
lret
scas
push
int
rclb
xor
cmpsl
dec
and
and
xor
fucom
pop
int3
xchg
adc
mov
push
daa
scas
adc
lods
lds
pop
es
jnp
cmp
mov
idiv
mov
dec
mov
arpl
mov
scas
mov
in
mov
adc
cmp
mov
jbe
shrl
pop
orl
out
pop
mov
push
ljmp
out
push
ret
and
sub
lahf
les
sub
push
gs
sub
pop
das
push
adc
mov
loopne
ret
jno
sub
test
mov
mov
xor
sbb
movsl
mov
loop
sub
jns
push
push
fadds
aas
jmp
iret
cwtl
mov
mov
lea
xchg
lds
dec
push
pop
jno
sbb
rcll
lock
jle
nop
and
xor
flds
ds
cld
jge
and
jno
popa
or
cmp
lock
cmp
push
adc
das
mov
sub
mov
imul
sbb
adc
sbb
lods
fists
mov
push
aad
push
sbb
sub
insb
dec
mov
adc
loop
or
mov
or
add
rcr
test
sbb
into
lds
or
repz
incb
test
add
gs
and
addb
inc
sbb
jno
mov
dec
push
sbb
idivb
push
xchg
mov
sub
dec
repz
cmp
mov
data16
cmpl
pop
dec
aam
repz
sti
stos
sbb
fadd
mov
lds
sti
out
inc
push
test
or
sbb
negl
jmp
in
cwtl
xchg
cmovns
dec
push
cmc
insl
lods
call
pusha
ljmp
and
sbb
lods
out
dec
mov
clc
stos
mov
mov
loopne
lds
and
inc
lods
cltd
cmpsl
add
push
idivb
add
fdivs
sub
and
addb
sub
andl
fdivrp
sub
pushf
mov
in
clc
xchg
dec
pop
mov
pop
mov
cmpsl
sbb
jno
outsl
jg
rcll
push
pop
fwait
in
add
cld
or
or
sahf
fdivrs
cmc
rcll
jle
jns
cmpsb
mov
in
sbb
lea
mov
test
adc
out
dec
imul
fsubrs
jecxz
jnp
fimuls
roll
mov
dec
xchg
jp
or
sbb
fxch
pushf
je
inc
jle
dec
adc
pusha
stos
cli
push
and
sub
out
xor
push
addr16
mov
std
pushf
icebp
pop
push
in
pop
inc
push
je
test
cmpb
sub
pop
dec
outsb
pop
test
js
lock
pop
jp
inc
aad
in
rol
and
jne
notl
push
int
mov
mov
add
sahf
insl
not
neg
mov
int
shl
mov
add
add
loope
xor
sub
sbb
out
nop
in
jo
daa
pusha
imul
xor
nop
jbe
in
lret
jge
dec
les
lods
aam
fwait
sahf
ja
add
ret
mov
nop
sub
test
add
or
loop
fwait
mov
cmp
jge
push
sbb
imul
test
xor
cmpsb
outsl
dec
aas
inc
hlt
push
sbbl
inc
test
in
jns
fidivs
inc
add
jnp
dec
mov
andb
inc
insl
adc
pop
movsb
sub
push
xchg
sbb
xchg
add
xorb
cld
dec
ljmp
popf
mov
pop
push
xchg
enter
mov
cld
test
cmc
mov
cwtl
mov
xchg
ret
adc
pop
dec
mov
bound
push
xor
dec
das
adc
aad
mov
xchg
std
inc
shrl
aas
xchg
mov
adcb
rorb
xor
out
sub
inc
jb
lods
xor
rcrl
movl
push
pop
cmp
loop
jmp
insb
sub
push
jns
cmp
jp
out
mov
jmp
xor
sub
mov
mov
jge
push
mov
out
mov
xor
pop
push
int3
cmp
adc
or
pop
popf
lcall
out
pop
add
or
fwait
add
lock
jge
lds
aas
jl
outsb
dec
loop
cmp
dec
in
pop
mov
es
movntq
lcall
dec
cmovle
lret
xor
rorb
pop
xchg
push
mov
mov
push
mov
mov
pop
popf
xchg
sub
in
mov
adc
sbb
inc
dec
clc
data16
or
shr
xchg
push
out
sbb
dec
or
add
push
jmp
shlb
adcb
stos
imulb
mov
fwait
pushf
or
mov
dec
push
cld
addr16
cmc
xchg
jns
dec
mov
xchg
pop
ss
mov
dec
add
outsb
xchg
pop
mov
sub
loope
aas
loopne
sbb
inc
jg
mov
adc
fsts
mov
jo
call
add
in
cmp
add
in
mov
arpl
mov
adc
faddl
mov
lods
out
push
dec
int3
shlb
lea
shll
cmp
mov
gs
add
ss
es
frstor
arpl
dec
imul
int3
icebp
sahf
aam
fnsave
cmp
lods
mov
pop
js
xor
frstor
push
or
mov
fisttpl
cmp
les
pop
push
or
mov
cmc
push
adc
mov
mov
es
jns
ret
mov
mov
adcb
mov
pop
orl
sahf
test
test
sub
inc
ret
cmpsb
arpl
das
jmp
cmpsl
xor
insl
xor
pushl
shl
pop
jg
mov
ljmp
sti
and
cmp
addl
fnstsw
sub
push
adc
ss
leave
clc
push
aam
mov
outsb
out
stc
jns
inc
dec
scas
cmp
insl
xchg
shll
add
cmp
dec
sbb
sti
sbb
arpl
les
cmp
ds
in
adc
mov
lds
jp
inc
adc
sbb
jmp
pop
mov
mov
xor
enter
inc
push
xor
dec
cmp
sar
nop
mov
aas
jno
popl
cmp
shlb
lret
xor
nop
sub
lahf
and
andb
dec
xor
inc
or
das
sub
into
jns
aas
xor
sbb
jecxz
xor
inc
punpcklwd
push
mov
test
fisttps
cmp
cwtl
push
mov
dec
jge
sbb
out
jg
mov
js
test
fstpl
add
jo
pop
sub
adc
out
das
std
stos
inc
hlt
mov
and
push
repz
lahf
mov
loop
test
xlat
or
ds
ud1
cmpsl
cmc
loope
push
incl
jno
and
ss
insl
lock
in
in
xor
jbe
and
int
xor
or
sbb
xor
mov
out
out
data16
xorl
cmpsb
pop
xchg
dec
fnsave
pop
lock
add
add
add
std
mov
push
jg
mov
ljmp
add
mov
jecxz
inc
mov
out
mov
jnp
gs
repz
jnp
jmp
jle
ror
mov
mov
inc
leave
sti
cmpsb
out
dec
push
jno
mov
arpl
or
scas
filds
lods
push
xchg
ja
push
pop
or
jne
fs
shll
fisttps
test
rcll
mov
mov
data16
and
cmpsb
cmpb
xor
mov
shll
lea
sub
lds
shlb
lods
mov
cmpsb
mov
loop
xchg
test
arpl
adc
pop
insb
sub
hlt
dec
sub
add
cmp
pop
inc
sbb
mull
mov
xchg
orl
insl
mov
inc
pop
sahf
adc
jb
repnz
sbb
jp
bound
dec
jp
roll
sub
mov
int
sub
testl
xchg
jg
daa
out
arpl
jae
sbb
loopne,pt
stos
xor
out
xor
gs
jo
mov
jle
mov
rclb
push
repz
jge
fs
and
mull
mov
aaa
test
jge
pop
mov
imul
std
xor
out
cltd
push
cmp
test
jecxz
push
outsb
lret
mov
sub
mov
lock
loopne
mov
cmp
fwait
mov
push
mov
imul
test
pop
test
adcl
ficomps
movsb
mov
shlb
stos
pop
adc
mov
add
cmpsl
xchg
icebp
or
sbb
and
inc
add
sti
in
lods
xor
sti
add
cmp
and
xor
sbb
xor
dec
lret
and
fucom
or
adc
movsl
xlat
sub
daa
or
outsb
sub
xchg
gs
mov
mov
pop
lods
es
mov
cmp
cmp
or
inc
bnd
jg
addr16
adc
test
or
cmp
or
inc
push
cmp
call
push
push
out
dec
jp
jge
into
loop
sub
out
mov
inc
cmp
sub
and
sub
and
test
pop
rclb
repz
das
pop
inc
lret
or
xor
icebp
mov
rorb
ja
sbb
cmp
push
shl
ret
loop
or
dec
mov
arpl
pop
es
rcl
lret
mov
repnz
sbb
loopne
aaa
iret
stos
call
out
mov
mov
and
sahf
pop
ja
push
pop
outsl
mov
das
ljmp
clc
add
push
sti
mov
outsb
jge
aam
and
mov
repnz
jmp
nop
out
or
ljmp
sub
pop
inc
adc
sahf
adc
xchg
push
imul
subl
jo
jo
jae
or
std
sbbl
dec
xchg
sarb
shr
filds
scas
cmp
leave
inc
std
aas
pop
pop
dec
inc
sbb
dec
push
pop
cmc
mov
lods
xlat
sbb
cmp
xor
and
xchg
ss
popf
ljmp
pop
lods
pop
xchg
ret
jge
push
aam
cmp
xchg
jo
icebp
stos
sbb
inc
dec
fimull
push
inc
push
cli
push
xchg
es
jmp
pop
xchg
lret
push
xchg
int3
out
gs
pop
dec
inc
popf
jl
sbb
and
aad
and
lahf
add
xchg
adc
push
xchg
mov
xor
clc
testl
mov
mov
das
inc
xchg
jbe
test
inc
sbb
sub
loopne
push
lds
mov
mov
mov
mov
fs
pop
repz
and
pop
sub
mov
fwait
rcll
int3
dec
mov
xchg
xor
ja
pop
ss
xchg
pop
fsts
outsb
nop
in
fwait
cmpl
xor
inc
jnp
mov
dec
scas
addl
mov
cmp
inc
or
test
push
xchg
mov
testb
jno
popf
cmp
mov
fmuls
sbb
imul
xchg
pop
sbb
movsl
mov
or
dec
add
cmpsl
xchg
and
and
adc
add
add
inc
push
lret
in
out
dec
add
inc
in
sgdtl
repz
add
adc
shll
cmpsb
cmpsb
jbe
ret
jg
loopne
or
in
add
loopne
inc
mov
push
or
or
adc
cld
mov
insb
pop
ss
insb
mov
test
jnp
insb
sti
pop
pop
ljmp
das
inc
xor
cwtl
idivb
rcrl
add
mov
xchg
mov
inc
push
xchg
daa
cmp
jmp
dec
enter
mov
adc
ja
jnp
pop
mov
mov
mov
xor
jmp
xchg
cmp
lret
mov
jle
push
cmp
clc
or
outsl
stc
sbb
inc
nop
dec
jmp
push
icebp
pusha
scas
popa
jmp
cmpsl
xchg
mov
or
mov
adc
mov
jmp
mov
push
je
xor
insb
pop
sbb
jae
push
xchg
and
mov
sub
testl
popa
lret
inc
mov
je
mov
and
arpl
fmuls
outsb
xchg
jmp
add
sub
adc
lret
xlat
cwtl
or
sub
inc
xchg
cld
mov
data16
out
pop
jb
out
cmp
mov
lock
cmp
xchg
sbb
leave
xchg
sub
mov
in
jecxz
mov
int
cs
jbe
mov
fisubrs
mov
popl
push
mov
adc
stos
icebp
sbb
movsl
jl
sbb
mov
inc
inc
and
ret
ss
add
sub
xor
int3
mov
xchg
in
test
mov
jg
ret
in
mov
or
push
jecxz
out
adc
add
ss
mov
sub
loopne
cmp
sub
call
xor
jno
sub
rcll
es
enter
enter
hlt
loop
into
arpl
insl
out
test
insl
add
iret
aaa
cmpl
jo
jo
ds
cmp
cmp
and
fwait
icebp
xchg
dec
jg
fisubrl
outsl
lahf
mov
sub
in
jge
jle
shl
add
ds
jecxz
mov
loop
sub
mov
jae
adc
or
jl
add
or
data16
add
inc
stc
insb
arpl
sub
clc
cltd
popa
and
shrl
or
int
sub
xchg
push
fisubl
and
pop
out
cli
pop
loop
inc
pop
dec
sbb
inc
or
jl
adc
sbb
test
push
add
addr16
mov
jbe
iret
add
add
popa
pop
daa
jno
mov
nop
add
xchg
fdivl
cwtl
insb
xlat
fimuls
inc
jb
rclb
cld
inc
pop
sahf
cmpl
cmp
jne
cltd
lret
out
mov
jmp
xor
iret
xlat
xor
push
inc
sub
ss
dec
and
xor
xchg
push
rcrl
sub
xchg
mov
sub
scas
dec
cmp
sub
mov
lcall
cmc
and
outsb
pop
lcall
push
imul
xor
stos
fbld
mov
out
mov
jno
into
shr
pushf
ror
stos
sbb
jp
outsb
mov
mov
loope
mov
or
inc
rolb
push
ds
mov
sub
in
shl
test
push
cmpsb
out
and
ret
pop
clc
or
into
xor
inc
insl
test
fildl
insl
jne
sub
or
in
mov
xor
divl
std
mov
or
and
mov
mov
test
std
or
cmc
outsb
sarb
enter
lcall
push
ss
cli
cmp
push
add
in
dec
sub
push
fdiv
mov
iret
inc
adc
xor
iret
xor
add
popf
orb
add
out
mov
push
aam
lret
loope
shlb
fmull
xchg
movsl
jne
int
sub
ret
mov
xor
addr16
sub
outsl
xlat
enter
adc
pop
mov
lahf
sub
jnp
sub
mov
xor
es
in
ficoml
mov
in
inc
dec
jo
cld
loop
cli
loope
imul
lea
mov
lcall
xchg
xor
fsubs
std
xor
cmp
push
inc
rclb
inc
repz
xor
sahf
cmp
stos
aad
clc
jae
fbld
inc
push
fnsave
add
je
std
mov
shr
and
add
repz
add
fsubl
lea
jnp
int3
mov
mov
and
jmp
jmp
xor
sahf
xlat
cmc
or
pop
pop
in
jle
daa
and
sub
jne
sahf
adc
scas
and
xchg
push
dec
stc
push
scas
xor
mov
fbld
pop
loope
mov
leave
cmp
insb
test
and
addl
mov
dec
mov
fsubrp
sti
cs
jp
icebp
adc
shr
push
xchg
jno
test
stos
sub
cli
adc
addr16
lret
jno
push
lods
inc
ja
pop
xchg
xor
in
loopne
pop
jnp
repz
dec
pusha
shll
inc
outsl
mov
lods
push
ss
sti
mov
pushf
inc
cmp
add
pop
inc
lods
pop
pop
ja
rorl
clc
mov
stos
shll
xchg
shlb
dec
xchg
xor
sbb
out
jbe
shl
es
mov
shrb
pop
adc
sub
cmp
mov
fcmovne
inc
xchg
dec
movsb
ja
mov
popa
inc
orb
mov
icebp
je,pn
mov
xor
dec
dec
test
out
std
and
lcall
inc
pushf
push
mov
pusha
mov
fimuls
out
push
cs
pop
xor
mov
aas
mov
add
arpl
nop
in
sbb
jb
pop
cld
jp
scas
ja
loope
divl
push
dec
sbb
mov
loope
cmp
jo
and
push
dec
int
test
outsb
and
lea
dec
popa
movsl
lods
in
fistl
jecxz
mov
pop
or
jg
orl
adc
enter
test
mov
cmp
inc
mov
cmp
sbb
orb
add
pop
stos
cmp
push
aas
outsb
rclb
xchg
push
pop
scas
mov
data16
icebp
add
sbb
out
ds
lcall
les
inc
leave
enter
pop
push
sarb
gs
pushf
push
js
add
jmp
mov
je
inc
out
or
aad
pop
xchg
nop
and
jo
je
pusha
jnp
loop
cmp
pop
out
ds
std
jno
jns
pop
sbbb
push
mov
inc
add
cmc
sti
out
fdiv
subl
decl
fcoml
mov
outsb
inc
cmp
mov
jns
lea
sti
mov
jecxz
or
adc
adc
mov
dec
push
or
mov
cwtl
jo
mov
mov
or
gs
jp
aas
mov
xor
push
popa
jb
lea
push
sarb
push
stos
pop
inc
xor
in
dec
jnp
imul
add
sub
and
out
popf
or
or
insb
cwtl
push
scas
push
mov
add
stos
push
rcrl
test
fiaddl
inc
mov
cltd
icebp
mov
loopne
push
jns
in
mov
fnstsw
jno
sahf
shlb
xchg
push
and
cmp
and
pop
add
ret
int
xor
lea
daa
add
xor
or
xchg
ds
aas
push
push
lds
outsl
dec
out
lods
call
pusha
mov
into
and
out
sub
mov
push
dec
xchg
sbb
pusha
pop
cmp
mov
sahf
iret
dec
xchg
lcall
leave
lods
sub
push
ret
xor
adcl
push
loope
bound
test
imul
lods
inc
int
imul
lret
mov
or
outsb
filds
push
jne
enter
gs
loop
repnz
mov
popa
sub
adc
xchg
into
scas
pusha
hlt
repnz
lods
adc
das
push
lds
data16
dec
mov
mov
roll
ror
jmp
in
mov
insl
fildl
xchg
scas
pop
sub
lret
movsb
mov
fs
jae
mov
mov
sub
push
ljmp
outsb
or
jmp
jg
aaa
adc
mov
or
mov
and
sub
cmp
mov
jnp
es
loope
sub
push
add
adc
out
in
push
std
add
inc
aad
cmp
std
push
subl
movsl
push
std
or
xchg
jmp
and
add
add
in
in
or
enter
add
repz
add
add
push
rolb
xchg
cmp
xchg
mov
lret
inc
rcrl
shlb
jmp
xor
cmp
les
cmp
aam
fwait
mov
test
or
inc
imull
dec
mov
sar
mov
add
rclb
or
mov
push
insb
sbb
stc
movsl
fldt
inc
cmp
xchg
add
or
pop
cltd
testl
push
sbb
call
cwtl
scas
out
int3
cltd
lahf
add
pop
mov
inc
inc
cmpsl
jmp
sbb
mov
dec
cmp
int3
ret
adc
mov
jecxz
add
repz
pushf
xchg
out
jle
push
scas
jle
shll
or
pop
nop
out
push
lea
repz
rolb
xor
cmp
add
adcl
mov
sub
repz
pop
and
xchg
add
iret
outsb
sahf
jmp
xchg
jge
lahf
sub
push
inc
cld
ret
mov
inc
ds
or
lea
push
xor
fbstp
sub
dec
cmp
jns
in
loop
fsub
das
je
inc
xor
aad
xchg
jnp
popf
adc
adc
pop
inc
adc
int
mov
insl
sbb
aas
jae
xchg
and
or
fs
or
dec
mov
adc
dec
out
sbb
shr
imul
std
add
pusha
push
les
nop
sub
inc
jmp
mov
out
or
xchg
jg
std
stc
sbb
gs
adc
jmp
pop
into
lods
inc
add
xchg
clc
sub
sub
pop
or
xchg
imul
cmpb
loop
sub
sbb
ja
xchg
scas
xchg
lcall
loop
andb
sti
push
pusha
jns
xchg
adc
pushf
xchg
cltd
push
out
xor
icebp
pop
push
pop
mov
push
mov
mov
addr16
xchg
and
cmp
jle
cld
xchg
push
jle
pop
test
mov
dec
sub
std
xchg
or
fsubrl
stc
sbb
mov
outsl
push
or
jne
xor
mov
xor
xchg
pop
call
fs
fnstcw
mov
xchg
pop
pop
adc
and
or
movsb
dec
or
mov
xchg
fldt
adc
push
adc
js
cmp
icebp
je
adc
sti
add
cmp
adcl
fidivrs
gs
clc
shlb
sub
cli
jnp
inc
mov
mov
jno
insl
inc
cmpb
mov
mov
mov
push
sbb
jle
fldl
sbb
ljmp
mov
mov
lahf
inc
inc
pop
lret
push
jge
cltd
fldenv
cmpsl
sbb
adc
fcmovnbe
mov
jnp
cmp
aaa
mov
xchg
push
push
ds
inc
lds
sbb
sbb
out
pop
jne
ret
sahf
loope
push
xchg
pusha
push
push
xor
dec
fcomi
stos
xchg
add
daa
es
push
pushf
pop
adc
mov
sbb
mov
sbb
loop
and
xchg
es
ds
dec
fcmovbe
icebp
pushf
adcl
loop
sub
mov
add
mov
fs
dec
mov
fs
add
add
adc
outsb
mov
repz
aam
xchg
and
push
xchg
outsl
sub
sub
push
fisttpl
sahf
push
or
sub
pop
xchg
sti
lret
push
pop
mov
sub
iret
out
pop
ret
jl
push
push
lods
jo
test
ret
pop
jb
test
scas
mov
inc
mov
mov
cmc
mov
sub
aam
sti
dec
push
or
imul
and
in
and
jp
cld
pop
xlat
popf
cmpb
xchg
rcll
adc
shll
xor
mov
fstpt
cmc
add
ds
and
mov
jl
or
pop
pop
or
mov
ret
cmpsl
sub
push
jmp
psubq
adc
sbb
imul
cmp
scas
or
push
sbb
xchg
into
lods
and
xorb
rclb
icebp
sub
jg
pushf
orb
nop
imul
cmp
bound
push
call
call
sbb
mov
add
push
out
je
jne
jne
or
add
out
or
mov
xor
adc
add
add
push
push
add
lods
test
gs
lea
repz
add
loop
call
dec
mov
jmp
inc
adc
dec
or
mov
loopne
mov
lds
or
lods
mov
fs
push
movsl
cltd
icebp
test
addr16
mov
xchg
les
inc
jae
shlb
xor
fdivs
sbb
aad
rolb
inc
push
add
xor
xlat
aam
enter
push
rcrb
add
loopne
mov
movsl
ret
jne
dec
push
stos
pop
and
pop
fs
xchg
jbe
sub
xchg
xchg
push
orb
repz
cwtl
test
cmp
sahf
xlat
mov
loope
xlat
xchg
ss
clc
shrb
xchg
stos
xor
movsl
adc
movsb
nop
dec
sahf
or
lods
dec
movsb
sti
dec
lock
sbb
and
divb
cwtl
sub
lds
mov
shlb
and
adc
mov
sbb
pop
or
dec
pop
xor
leave
xchg
mov
pop
outsl
cmpsl
xchg
in
sub
cmc
addr16
data16
pop
xor
and
pop
inc
cmpsb
dec
outsb
fs
xchg
mov
lods
mov
data16
stc
xor
xor
ss
xchg
shlb
repz
stc
rcr
pop
hlt
in
clc
mov
movsl
push
out
mov
aas
or
in
adc
push
loope
fcmovne
adc
mov
jae
sbb
jg
test
nop
mov
pop
add
push
add
xor
stos
xor
ret
mov
dec
in
mov
test
and
add
test
sub
mov
sub
out
push
add
pusha
sahf
push
xchg
push
shl
js
les
xor
pop
ljmp
push
fwait
cmp
and
cmp
ret
mov
mov
movsb
cmpl
sub
jecxz
roll
dec
pop
das
aad
xchg
ljmp
outsl
nop
ret
mov
and
out
ficomps
jle
addl
mov
popl
adc
jo
ret
loopne
scas
adc
sahf
mov
fwait
popf
or
leave
enter
pop
test
mov
or
xor
cmpsl
movsb
jno
pop
ss
fsubrl
jo
dec
fsubrs
and
test
jge
pop
lcall
mov
pop
fnstcw
imul
sub
divb
rdpmc
or
or
cmp
xchg
or
push
push
cltd
fdivrp
outsb
insl
add
lret
push
scas
lcall
inc
inc
cld
inc
aas
dec
insb
or
lret
stc
imul
mov
xlat
repnz
in
inc
pushf
ljmp
mov
mov
pop
pop
leave
push
nop
cs
ja
fiadds
pop
in
cmp
mov
and
push
jno
add
adc
xchg
inc
bound
ss
or
mov
aaa
imul
cmpsb
sbb
xor
lods
dec
mov
mov
inc
add
xchg
cmp
inc
push
or
pop
sbb
sbbl
sahf
movups
mov
push
sbb
cmp
inc
mov
mov
aaa
in
loop
shrb
jmp
or
push
inc
mov
shl
or
sub
jns
fnstenv
adc
and
cmpsl
dec
fs
cmp
mov
pop
cwtl
adc
push
leave
lret
or
xor
push
mov
call
cmp
shll
mov
mov
jge
nop
push
and
mov
in
out
or
rcll
js
cmp
arpl
or
ss
xor
sbb
mov
pop
pop
mov
pop
cmpsl
call
std
dec
ret
mov
add
imul
inc
pop
or
xlat
xor
imul
xchg
mul
lds
pop
mov
or
pop
mov
push
ljmp
sub
inc
mov
sub
cmpsb
cltd
test
sbb
jg
fldenv
outsl
rcll
out
stc
and
push
push
pop
movsb
mov
cli
cli
cmp
cwtl
loop
push
insb
jb
lcall
idivl
pop
dec
pop
pop
shlb
arpl
fs
push
out
sti
das
jmp
sarb
jne
pop
add
std
test
xor
cld
stc
scas
or
xor
mov
fadds
cmc
xor
add
add
add
je
jne
pop
outsl
out
aaa
jae
sahf
mov
add
repz
add
jge
and
int
fisubs
fldl
push
cmp
repnz
add
mulb
fmuls
repnz
mov
sub
subb
sbb
sbb
lret
dec
lahf
aad
loope
test
xor
cmpsb
mov
dec
cmp
insb
icebp
and
into
lods
inc
xchg
adc
and
scas
cld
or
or
cltd
add
cmp
push
test
add
int
rcrl
pop
dec
dec
iret
leave
push
mov
dec
and
sub
mov
xor
sub
cltd
subl
dec
rorb
xor
ret
push
mov
fsubrl
jmp
fldt
jg
lcall
stc
stos
add
pusha
fyl2x
push
adc
fistpl
test
bound
fdivrs
adc
cmp
pop
out
push
or
popa
cld
push
xchg
fcoms
mov
cmp
adc
adc
inc
push
cmp
fisubs
inc
addr16
mov
add
xor
mov
div
stos
inc
sbb
push
push
shll
cmp
push
mov
and
movsb
sti
scas
movsb
pop
stos
push
inc
xchg
jae
cs
cmp
cli
jg
imul
dec
fcmovnbe
dec
mov
xchg
dec
cltd
ja
out
mov
inc
int3
add
lods
sub
mov
adc
setbe
clc
sbb
xchg
push
sub
sarb
mov
test
jnp
imul
loopne
cli
or
mov
push
mov
push
cltd
pop
call
adc
sbb
sub
clc
iret
popf
xlat
aas
jg
aad
jecxz
mov
lods
mov
cmp
inc
xchg
mov
push
lahf
sbb
aam
inc
mov
sub
testl
inc
test
xchg
andb
push
test
sbb
mov
lea
clc
movsb
ljmp
jmp
inc
addb
loop
sub
jle
mov
ss
dec
lods
xor
lcall
adc
es
pop
mov
push
gs
or
jecxz
jecxz
pop
and
fwait
and
ds
sbb
call
sahf
push
ljmp
dec
pop
inc
pop
or
ja
sbb
xchg
das
sub
scas
mov
sahf
call
xchg
adc
or
mov
sti
pop
lahf
push
push
into
push
dec
movsb
inc
mov
pushf
loope
sbb
mov
int
shrb
fwait
subb
xor
jp
test
ficompl
pushf
mov
arpl
push
cmp
mov
mov
push
loopne
lock
pop
in
mov
lret
rolb
fs
push
and
and
add
mov
or
mov
popl
jl
lret
cmovs
cmp
dec
adc
out
push
movsb
test
daa
rcrl
jecxz
mov
popa
std
popa
ret
mulb
adc
sbb
cmp
out
sbb
add
loopne
cmp
xchg
lcall
lret
xor
test
pop
sbb
and
mov
in
test
cmp
mov
scas
push
inc
nop
ljmp
fld
fidivrs
ret
push
into
gs
out
popf
xlat
sub
sbb
cltd
xor
sub
and
rorb
sub
adc
andl
mov
sub
fnstenv
ljmp
repnz
pop
fistps
inc
in
sub
lds
lock
fisttpl
lcall
rclb
lock
cltd
sbb
pop
sub
dec
cwtl
adc
pop
neg
fdivl
rcrl
jg
push
ret
in
hlt
pop
cmp
sarl
mov
aaa
dec
xor
inc
leave
test
jbe
js
jmp
or
mov
xor
and
sub
mov
arpl
mov
adc
fildl
lods
hlt
sub
pushf
and
jae
popa
into
sbb
dec
jmp
out
loop
and
mov
pop
jnp
les
lock
aaa
adc
js
cmp
or
into
inc
call
add
mov
cmpsb
dec
movl
ret
loopne,pt
pop
lds
lods
les
mov
push
add
add
add
ss
std
iret
cmp
cld
xchg
add
add
add
cld
cmp
rdtsc
cmc
outsb
pop
addb
jo
stos
sbbb
inc
xchg
stc
insb
mov
jno
sbb
call
std
adcb
mov
dec
inc
lods
cld
loope
lahf
mov
push
loope
les
push
xchg
and
xchg
rcrl
jae
arpl
divb
aad
fsubs
pop
cmp
stc
add
push
sbb
pop
mov
and
sti
in
lret
ljmp
mov
daa
in
add
sbb
das
ljmp
jae
jge
roll
loopne
or
daa
icebp
push
or
nop
mov
add
bound
cli
mov
insb
jp
sub
in
add
mov
push
sahf
mov
mov
push
je
in
xor
mov
adc
adc
es
xchg
mov
push
xor
add
dec
mov
cmp
cmp
push
sbbb
cmpsl
cmp
imul
cmp
pushf
and
addr16
jle
jmp
jae
rcrb
ds
pop
subb
imul
in
xchg
cs
cmc
clc
imul
cmp
sti
icebp
adc
pop
pop
aas
popa
cmp
sub
lea
jnp
loopne
les
int3
cli
in
add
pop
dec
mov
sbb
pop
in
push
movsl
mov
sub
mov
jne
inc
and
cmp
cmp
scas
ret
lcall
push
pop
loop
imul
aas
mov
and
jae
cmp
in
sahf
xor
push
out
hlt
test
add
mov
xchg
adc
jae
shlb
in
mov
add
add
cmp
push
inc
dec
push
clc
imul
inc
push
stc
sarb
clc
jo
pop
dec
jmp
sbb
pop
shlb
xor
jg
xchg
jmp
je
xchg
sub
imul
loope
mov
repnz
pusha
push
jg
insb
sub
or
cmc
push
push
loop
fsubr
test
sub
in
call
adc
sbb
pop
outsb
add
fbld
and
aaa
mov
stos
arpl
push
xchg
mov
mov
sbb
cmpsb
dec
dec
jb
dec
js
or
cltd
aas
lock
adc
adc
lcall
pusha
or
mov
js
xchg
mov
push
xchg
xchg
divl
stos
leave
or
mov
sbb
jmp
adc
dec
dec
sbb
dec
scas
aad
mov
les
dec
test
decb
dec
jae
add
xchg
add
xchg
push
jecxz
outsb
test
les
xor
icebp
int3
scas
dec
and
popa
pop
pop
fucom
sbb
int3
les
sub
cli
xchg
adc
std
rcl
jmp
iret
popf
sbb
mov
call
jecxz
sbb
mov
push
ret
je
add
imul
clc
lds
mov
jge
jmp
lock
mov
shll
fcmovbe
jge
lcall
test
ds
mov
xchg
insl
xchg
shl
xchg
add
inc
fcmovnb
out
notb
insl
addr16
into
lea
jmp
addb
jbe
sarb
cmp
push
push
adc
cmpsl
mov
pop
sbb
imul
sbbl
pop
sub
stc
cltd
xor
jmp
mov
inc
push
rclb
xor
je
imul
lds
subl
insl
repz
jbe
or
mov
cmpsb
stos
mov
add
adc
sub
xchg
popa
xchg
fsubr
insb
insb
shl
fsubl
rolb
or
dec
mov
push
stos
xchg
cs
pop
and
enter
arpl
in
lret
jp
lcall
mov
fsub
mov
hlt
jg
pop
sbb
push
movsb
jo
jecxz
repz
shlb
popa
mov
pop
sbb
dec
adc
dec
arpl
cwtl
pop
shr
lds
lcall
jnp
mov
out
inc
cmc
pop
imul
mulb
xor
outsb
arpl
and
fwait
clc
mov
or
inc
cmp
fnstcw
lret
faddp
in
mov
dec
inc
insl
mov
lret
in
add
add
add
es
mov
jmp
fdivrp
ds
clc
fmuls
add
add
insb
daa
lahf
xor
jne
sub
test
adc
mov
inc
and
add
push
clc
movsb
add
sarb
es
out
jnp
hlt
sbb
out
adc
pushf
add
test
addr16
rcrb
push
cltd
pusha
outsb
bound
movsb
dec
fcomps
shll
std
test
cmp
gs
xchg
inc
jae,pt
adc
mov
push
movsl
jg
jae
mov
pop
jecxz
xchg
inc
int3
lods
or
fmuls
movsb
cmpsb
pop
fs
add
xchg
mov
nop
jae
jecxz
sbb
or
loopne
pop
cmp
stos
sub
cmc
mov
jp
ret
arpl
loopew
imul
aad
pop
fadd
jp
divb
sub
sub
repz
rol
sbb
jmp
dec
sub
xchg
or
xor
dec
idivl
sbb
repnz
and
push
lret
hlt
stos
cmpsb
jns
pusha
jg
in
fsubrl
shrb
jo
out
test
xor
add
or
les
or
std
push
cltd
js
mov
add
xor
lods
cltd
addr16
sbb
movsb
test
aas
sbb
inc
ljmp
scas
fstl
icebp
scas
icebp
das
enter
push
sti
fs
sub
sub
les
mov
add
sub
dec
push
xor
scas
ret
jbe
lods
inc
or
es
add
gs
call
leave
cmc
arpl
pop
jle
out
push
iret
and
test
jae
mov
idivl
test
pop
imul
sub
jo
mov
dec
loopne
ss
lock
lea
push
sbbb
call
nopl
adc
and
test
into
xchg
adc
push
repz
imul
out
push
jnp
ret
pushf
scas
shr
push
inc
cmp
push
loopne
jnp
fcoms
add
mov
shll
mov
repnz
sbb
iret
xchg
ja
xchg
inc
sbb
fldt
je
cs
inc
jecxz
sub
ss
push
and
aas
les
shrl
out
xchg
ja
ret
les
std
fdivl
mov
jge
lods
sbb
push
test
push
push
mov
cmp
aad
jl
dec
pop
fwait
cmpsl
divl
sahf
or
mov
mov
cmp
imul
rcl
pusha
jnp
mov
popa
push
cmpsl
cmp
sub
xlat
pop
pop
adc
cmp
xor
fmuls
test
xor
and
dec
or
mov
cmp
push
adc
xchg
dec
push
repz
push
mov
imulb
or
ficoml
stc
in
pop
js
rcrl
scas
inc
mov
or
iret
mov
stc
dec
xor
or
cmp
pop
insb
mov
adc
push
mov
mov
daa
cmp
cmp
ficoml
test
pop
sahf
dec
daa
mov
mov
loopne
fists
inc
out
stc
pop
int
mov
sub
sub
pushf
icebp
cwtl
or
loope
or
xchg
fidivl
lcall
mov
jnp
mov
stc
push
xchg
or
clc
jbe
enter
and
adcb
js
pop
push
push
ror
daa
fcompl
sub
ret
add
addr16
fimuls
pop
xor
pusha
test
mov
stc
call
icebp
sarl
inc
je
and
or
add
mov
and
or
hlt
or
das
push
xchg
out
dec
pusha
push
pop
and
stos
inc
xchg
inc
jb
push
mov
pop
ds
jbe
sub
push
les
incl
jo
test
in
inc
or
mov
lods
aam
jmp
mov
jmp
xor
loop
inc
out
lods
data16
decb
movsl
and
gs
insb
xchg
or
add
jnp
data16
mov
je
push
hlt
xchg
add
int
dec
out
rclb
loop
push
cmp
inc
sbb
push
sub
dec
popa
adc
or
push
lds
pop
mov
pop
lock
lods
sbb
inc
call
enter
test
sub
cmpsl
aam
stos
and
cmp
je
fcomps
roll
std
mov
mov
xor
push
lahf
dec
mov
dec
rcl
or
stc
mov
add
add
add
aaa
sti
addr16
out
fidivs
cmc
movsl
icebp
adc
add
add
popf
nop
test
mov
roll
sub
shrb
jnp
cmpsb
test
insb
push
or
popl
sub
movsb
lret
sub
mov
frstor
es
lds
sub
popa
xchg
lahf
mov
test
add
push
jbe
mov
sub
icebp
dec
pop
iret
es
in
fs
pop
imul
sahf
aad
movsb
xorl
in
cltd
out
jg
mov
mov
inc
add
sub
pop
sbb
loopne
mov
sbb
call
cmp
repnz
jl
mov
stos
shll
outsb
clc
xor
cltd
clc
faddl
hlt
xchg
loop
idivb
dec
mov
les
mov
push
pop
sub
pusha
mov
add
in
jmp
mov
movsb
js
cmp
or
roll
mov
add
add
pop
dec
xchg
stc
shll
mov
call
dec
mov
and
loopne
or
and
inc
mov
xlat
jb
xchg
int3
int
aaa
std
repnz
aaa
sub
pop
inc
mov
push
jae
mov
dec
aam
sub
fisubrs
sub
pop
or
or
jns
sbb
and
jo
push
cld
lret
sbb
inc
xchg
xor
popa
adc
ss
shll
mov
dec
test
push
mov
imul
dec
addl
sub
imul
cmpb
mov
jle
mov
test
cwtl
jne
add
jnp
and
negl
outsl
test
push
jne
sbbl
cmp
cmp
add
xchg
adc
cmp
push
mov
jp
pop
sbb
scas
fsubrl
mov
rcll
lahf
loope
jbe
and
cli
jle
sti
cmp
jle
stos
sbb
addr16
in
mov
test
mov
gs
mov
xchg
daa
push
or
cmp
jmp
lods
inc
jo
add
pop
lcall
outsb
pop
jnp
lret
mov
lods
sub
inc
xlat
pop
jne
ss
mov
ljmp
mov
mov
addl
ret
mov
idivb
out
cli
mov
xor
jno
or
jns
ja
inc
push
rorb
xchg
loopne
dec
sub
sbb
stc
inc
pop
pop
cmp
leave
dec
fmuls
fwait
addr16
std
dec
or
divl
xchg
inc
sub
imul
clc
mov
lret
or
loope
and
xchg
out
leave
mov
pop
mov
push
pop
dec
jmp
cltd
inc
or
clc
xchg
cli
push
ficompl
mov
dec
mulb
pop
or
mov
pushf
inc
jmp
pop
lods
dec
fiadds
sub
ljmp
icebp
cltd
inc
xor
sub
inc
cmpsb
mov
push
add
dec
repz
dec
stc
jo
in
pop
mov
xchg
mov
es
icebp
in
or
xor
scas
cmc
push
loope
jp
call
fpatan
ja
sbb
cmp
cmp
sbb
lock
mov
cmp
xlat
and
xor
mov
ja
sarb
les
pop
xchg
jle
data16
jb
jg
jae
cwtl
aas
push
mov
into
fs
fs
or
nop
sbb
fs
ss
lahf
fs
xchg
stc
sub
add
or
mov
mov
mov
xor
loopne
test
call
and
dec
shlb
sbb
cs
and
inc
add
push
sub
or
test
or
leave
dec
shl
push
dec
das
lret
scas
adc
xchg
mov
and
push
inc
xchg
and
adc
jecxz
add
test
data16
popa
inc
stos
gs
arpl
push
dec
pop
push
pop
popl
mov
and
mov
sbb
jge
xor
fmull
gs
mov
adc
xlat
add
repnz
repnz
testb
or
fst
add
int3
xchg
jne
xchg
xchg
int3
xchg
dec
push
repnz
push
pusha
xchg
dec
push
cmc
jmp
jmp
into
mov
or
cmpsl
cltd
loop
or
mov
sahf
jns
push
int3
int3
popa
mov
add
idivb
jns
fimull
scas
push
ret
jnp
inc
xchg
lret
nop
je
add
inc
movb
add
add
inc
sbb
repz
mov
add
repz
add
sahf
push
push
orl
aas
ret
sbb
dec
sub
mov
bndldx
sub
jbe
sarl
scas
sub
cltd
push
sub
sub
loopne
js
insb
mov
sub
fwait
cmpsl
enter
cli
nop
xchg
cmpsb
adc
pop
sbb
lods
push
lcall
je
pop
or
add
cmp
push
add
pop
mov
jae
mov
and
xchg
arpl
fwait
mov
push
cmc
push
mov
pop
fcmovbe
in
inc
shll
dec
mov
daa
sbb
in
in
xchg
or
pushf
dec
jecxz
or
sbbb
into
mov
sahf
dec
aaa
jne
sub
lods
andb
sti
mov
addl
popf
xchg
hlt
fs
add
cmp
out
dec
ds
push
jle
cmpsb
add
jbe
xor
jp
lcall
test
ret
jmp
fisubrs
fiaddl
iret
mov
repnz
rolb
xor
imul
aad
inc
es
das
roll
cmp
ret
mov
stos
pop
data16
dec
out
jecxz
and
mov
jb
jecxz
lret
fidivl
pop
xor
and
adc
and
lods
adc
and
mov
les
inc
xor
cmc
push
xor
imul
and
movsb
in
jae
dec
jge
xor
jne
dec
inc
out
xchg
repz
dec
mov
pop
xorl
push
int
sbb
cmpsb
mov
jmp
mov
negl
enter
shrl
or
aad
jmp
mov
inc
subl
lret
mov
and
stos
fs
lea
test
push
jmp
in
mov
insl
loopne
sub
adc
pop
sub
in
fcmove
stc
xor
insb
fwait
nop
pusha
xchg
xor
sub
popf
dec
mov
add
push
sbb
fmuls
aad
jno
int
fsubl
outsl
push
or
xchg
loop
sub
mov
sub
pop
outsl
jns
mov
shlb
lds
or
cmp
jle
cld
jg
mov
call
bound
stos
insl
sub
cmp
filds
ss
std
rolb
in
andl
inc
pop
cli
aad
or
sti
lds
and
add
and
popa
mov
mov
scas
outsl
int3
ds
mov
fcmovnu
enter
mov
add
loope
cmpsl
jae
mov
mov
or
jp
sbb
or
xchg
scas
cmp
repnz
mov
mov
insb
pop
addr16
je
pop
ret
insb
dec
sub
imul
jnp
add
test
testb
push
std
fwait
xchg
add
aad
in
dec
sti
aas
mov
xchg
frstor
mov
stc
mov
enter
push
fstpl
pop
push
jg
cmp
cmp
pop
push
jno
in
sub
int
and
mov
cltd
adc
xor
leave
sbb
or
aam
movsl
sub
mov
lods
inc
cwtl
inc
lds
repz
inc
fdivrl
adc
out
fucomp
scas
add
adc
push
icebp
xor
icebp
mov
ror
cltd
outsb
push
and
inc
mov
imul
das
xor
push
xor
mov
lss
int3
push
loope
jl
adc
out
cmp
push
jno
gs
add
and
mov
fwait
sti
into
lods
test
cwtl
push
mov
jb
add
outsb
mov
xchg
popa
je
pop
jmp
movsb
lds
es
mov
xlat
les
out
dec
lods
mov
mov
xchg
push
add
jmp
add
mov
adc
sahf
xor
mov
mov
ret
inc
and
movsl
movsb
or
out
pop
mov
rclb
iret
jmp
jge
rorl
ss
fisttpl
daa
test
jmp
outsl
xchg
jecxz
or
mov
aad
sbb
lock
cltd
and
xchg
out
xchg
or
test
negb
fcoms
mov
fistpl
pop
std
inc
jg
movsb
mov
sub
mov
fwait
aad
cs
out
xor
imul
loope
rclb
and
jle
movsl
dec
fildl
xor
out
das
lcall
xchg
xchg
pop
or
dec
push
fldt
mov
add
mov
sub
cmp
add
add
add
in
aad
fdivrs
lahf
mov
or
mov
xor
pop
lahf
test
fsubl
clc
leave
dec
into
or
cmpsl
leave
stos
jo
notl
push
in
addb
hlt
ds
push
cmp
cmpsl
cmp
mov
shrl
int3
data16
cmpsb
data16
sbb
rolb
insl
add
inc
pop
ss
mov
mov
repnz
cmc
dec
daa
mov
xchg
inc
movsb
xchg
adc
dec
or
mov
mov
js
jge
fwait
lahf
and
xlat
inc
addr16
push
push
mov
sbb
push
push
sub
aas
dec
lea
push
in
scas
lcall
rcll
xor
xchg
cmpsl
arpl
xchg
cltd
mov
in
pop
fidivl
pop
loopw
pop
sub
dec
jne
fisttpll
js
psrlq
std
sahf
xchg
push
leave
and
cwtl
lcall
push
lods
adc
mov
je
xor
inc
sbb
dec
or
sbb
lcall
repz
mov
jmp
add
or
jl
adc
movsl
aam
cmp
mov
and
ret
dec
adc
and
pop
sub
cld
rcll
inc
mov
lret
lret
out
popa
sub
mov
add
fs
pop
sahf
mov
loope
and
xchg
test
dec
sahf
and
mov
int
addb
push
inc
sub
lahf
sub
inc
test
cwtl
jp
inc
ja
inc
mov
rolb
sbb
lods
out
mov
jo
fmull
dec
pop
fwait
mov
push
push
adc
sub
dec
addl
push
adc
ss
and
push
lret
or
das
and
lds
add
pop
shr
test
inc
icebp
xor
and
ret
dec
add
mov
out
xor
dec
mov
loope
dec
mov
dec
sbb
jp
mov
cmpsl
sbb
mov
mov
lock
mov
aaa
mov
lret
repnz
jae
movsl
repz
out
mov
popf
lods
std
adc
fsubrp
xchg
pusha
ds
popf
mov
mov
or
sub
test
jmp
sbb
cmp
pop
cmovo
iret
xor
xor
xor
mov
xchg
push
mov
mov
mov
xchg
mov
cld
aas
es
mov
cmp
jmp
je
outsb
out
cmp
or
mov
sbb
in
popa
mov
add
das
adc
or
mov
fisubl
xchg
add
and
ds
mov
adc
adcl
das
ret
fwait
dec
leave
lret
dec
testb
mov
fsubr
icebp
push
or
shrl
mov
xor
loopne
xlat
std
enter
aad
inc
out
cmp
mov
in
push
lahf
adc
push
cltd
sub
fldt
es
jne
sbb
pusha
leave
mov
push
pop
sub
dec
jl
cmp
dec
lret
aam
xchg
lds
mov
leave
xchg
repz
jmp
pushl
inc
mov
fimuls
mov
in
dec
inc
pop
mov
lcall
out
popa
pop
push
iret
popa
cld
mov
fsubs
xlat
sbb
pop
popa
dec
daa
rcrb
mov
xchg
loopne
push
lahf
mov
jg
or
addr16
fisubrl
xor
push
and
mov
xchg
ss
add
xchg
fucomp
imul
sub
xor
xchg
pop
out
jae
pushf
sbb
dec
stc
mov
mov
add
adc
sahf
in
ret
lock
or
push
imul
js
xor
push
int
scas
cmp
jecxz
fidivl
sub
arpl
mov
cwtl
mov
cmpl
push
cmp
popf
and
jno
dec
xor
ficompl
or
test
and
aaa
mov
jbe
sti
push
xchg
in
popa
loopne
fadd
xchg
or
je
mov
rcr
std
cltd
fbld
cs
cmp
mov
stos
adc
xchg
test
cltd
cmp
inc
add
popa
inc
movsb
push
icebp
out
inc
mov
shr
push
faddp
mov
testb
out
xor
cmp
jne
dec
jecxz
pop
mov
inc
push
aas
fsubrp
and
mov
adc
arpl
repnz
push
pushf
and
push
mov
into
sbb
cmp
inc
add
add
add
adc
dec
negl
mov
cmp
pop
loop
inc
add
repz
add
std
jno
sub
push
out
gs
jmp
popa
ret
sahf
pusha
pusha
nop
cmc
idiv
xor
ror
add
std
inc
in
scas
cld
scas
push
mov
dec
fildl
ds
and
icebp
fs
xor
mov
add
jnp
fistpll
rcl
sub
stc
lea
sbb
popf
push
adc
mov
cmpsl
mov
jbe
push
xor
lods
adc
rclw
pop
push
mov
xchg
xlat
data16
mov
push
cmpsl
testb
fsubr
inc
push
pop
out
pushf
and
cmp
adc
fstp
pop
lret
lret
fisubs
xor
ljmp
xor
and
cwtl
mov
sahf
and
rol
orb
or
in
jg
in
fs
add
das
std
inc
in
dec
xchg
mov
push
jns
xlat
shrl
lret
repz
jge
or
push
bound
push
ja
inc
pop
cmp
divl
repnz
movsl
sub
add
add
add
jmp
out
mov
push
ja
push
jns
pushf
inc
mov
daa
int
mov
or
cmc
pop
mov
and
mov
mov
dec
ffreep
cld
out
mov
sub
rcrl
cwtl
insl
imul
lods
jb
adc
pop
into
fmuls
dec
movsb
xor
popa
sbb
pop
xor
imul
das
std
mul
in
int3
and
outsb
adc
enter
adc
pop
dec
daa
cld
inc
adc
int
push
test
pop
test
adc
xchg
cmp
mov
lds
inc
dec
and
movsb
jae
fyl2xp1
mov
add
bound
sub
movsl
and
repz
and
mov
pop
inc
imul
sub
pop
pop
xlat
push
sub
mov
push
mov
addr16
jns
call
push
xchg
xor
les
adc
push
sub
aaa
pop
dec
xchg
rorb
loop
push
andl
insl
and
jb
insb
mov
mov
lock
sub
push
xor
pop
cmp
xchg
push
mov
sahf
ds
sub
inc
cmc
mov
pop
test
stos
loope
add
rolb
add
inc
fs
aam
fistl
iret
cmp
popa
jmp
jmp
pushf
sub
inc
mov
fiadds
fwait
mov
dec
out
adc
out
dec
fstl
push
int3
sbb
loope
lret
inc
imul
dec
inc
jmp
std
xchg
mov
jns
adc
popa
sub
out
andb
mov
add
sub
pop
jmp
dec
lahf
adc
push
out
mov
aad
pop
lock
and
dec
scas
dec
imul
fdivrp
or
ljmp
rcrl
xchg
or
push
sub
xchg
xchg
pop
jae
push
or
fimuls
jg
insb
mov
xchg
sub
or
xchg
shlb
mov
inc
xchg
mov
flds
mov
iret
sarb
call
sarl
sub
test
outsb
cwtl
ljmp
testl
sbb
fistpll
add
int
adc
sahf
mov
sbb
or
sbb
push
sbb
data16
pop
leave
fildl
pop
dec
mov
inc
mov
mov
and
sub
js
mov
jecxz
sbb
icebp
iret
push
and
and
fmulp
jl
pop
mov
mov
mov
sub
mov
push
pop
mov
notl
push
call
test
and
fwait
push
mov
into
ja
xor
in
aaa
jno
jns
xor
hlt
sbb
mov
inc
lods
and
in
mov
jg
push
add
fbld
jecxz
in
ljmp
mov
shlb
and
fwait
in
mov
pusha
sbb
notb
mov
rcrb
dec
add
jne
adc
sarb
jp
mov
or
add
dec
sub
dec
clc
scas
push
adc
pop
pop
cwtl
mov
jmp
arpl
out
xor
xchg
jo
and
jno
push
add
add
add
ds
fdivp
cld
ds
daa
cmp
in
inc
add
repz
add
sub
inc
fs
sbb
insl
sti
cmp
call
mov
mov
sbb
loop
cmp
sub
dec
std
ljmp
pusha
add
sbb
dec
push
push
inc
rclb
mov
movsl
xchg
addr16
test
cwtl
shlb
cmc
and
push
and
jo
lods
or
push
push
int
ss
or
jbe
pop
cmpsl
push
sbb
imul
aas
enter
dec
rorb
add
xorb
cld
popa
gs
shrl
test
mov
add
pop
cwtl
push
mov
cmc
stos
xor
in
aaa
repnz
jmp
shl
insb
fisubrs
dec
lret
and
pop
rcl
in
ffreep
lret
shlb
jne
jne
mov
frstor
outsl
inc
jmp
xchg
add
fldenv
lahf
addr16
inc
daa
sbb
les
jmp
lods
and
jb
inc
ret
jmp
add
mov
dec
pop
adc
jnp
dec
sarl
mov
add
push
call
faddl
ss
sbb
in
test
sar
mov
sbb
int3
popf
push
jns
inc
sub
aad
dec
test
aas
in
cltd
js
mov
insb
lods
out
stos
xor
or
popl
je
shlb
popf
cmc
je
lods
mov
iret
popf
aad
jns
sbb
iret
out
push
jmp
lods
mov
mov
insl
add
pop
arpl
fwait
int3
xchg
ret
and
fs
sbb
pop
ret
rorl
adc
jne
jns
sub
xchg
lcall
or
mov
and
push
jecxz
jp
lods
lock
and
int3
cmp
jg
pushf
pop
pop
shll
push
clc
jp
xchg
add
push
ret
iret
movl
das
xlat
mov
jl
pushl
dec
pop
int
mov
push
in
movsb
jae
cmp
in
cmp
repnz
cmc
jge
cwtl
lods
icebp
stc
ficoml
xor
xchg
mov
mov
pop
test
gs
cld
pop
mov
cmp
sub
inc
cwtl
sub
fs
sbb
lcall
inc
lret
push
cltd
xor
mov
fwait
insb
pop
test
push
jmp
dec
cmp
adc
xchg
or
cmp
jne
lods
ds
and
add
stos
sahf
sbb
clc
xor
movsb
mov
pop
test
insb
mov
and
sbb
cmp
jecxz
popf
lahf
mov
lret
jbe
inc
sbb
or
es
jl
or
sub
push
jmp
rolb
lods
imul
add
stc
mov
lock
xchg
sar
inc
push
and
enter
mov
xlat
push
inc
sbb
mov
add
out
mov
andl
inc
mov
iret
push
add
movsl
scas
rcrb
das
sahf
lock
leave
mov
xor
in
lcall
ret
cld
cmpsl
and
mov
mov
xor
call
scas
sub
pop
push
fldcw
add
loope
and
lret
lahf
sbb
scas
in
and
fdiv
out
fists
push
mov
mov
testb
clc
stos
mov
gs
sahf
pop
into
ror
cltd
cmc
and
das
dec
fdivl
pop
aad
sbb
or
pop
outsl
dec
push
mov
and
mov
inc
aad
stc
pop
sub
mov
add
icebp
sub
cmp
insl
mov
adc
cmp
movsb
and
int
lds
lock
mov
pop
mov
jge
jnp
pop
adc
dec
pop
jbe
enter
mov
and
out
push
aaa
lock
adcl
mov
loopne
mov
or
xchg
inc
add
sub
int
or
xchg
push
into
mov
add
pushf
bound
mov
lret
adc
mov
cli
in
pop
jno
fcoml
shlb
jmp
in
out
fisubl
nop
or
xchg
insb
cmp
jmp
mov
mov
inc
xor
insl
jmp
dec
sar
aas
sbb
jmp
cmc
xor
dec
addb
add
push
mov
imulb
pop
mov
mov
xchg
xchg
pusha
mov
dec
add
js
mov
imul
stos
sbb
lret
dec
movsl
cli
out
std
and
lret
push
pop
push
jp
rolb
add
add
jnp
xor
jg
sbbl
inc
dec
add
repz
add
inc
sbb
out
mov
imul
lea
push
dec
mov
cwtl
add
sbb
icebp
mov
hlt
lret
mov
add
dec
orps
nop
mov
mov
adc
sahf
xchg
mov
stc
xor
sub
lea
imul
cs
adc
sti
aad
aam
cs
xor
stos
rclb
cmc
scas
repz
push
cmp
das
cmp
mov
aas
daa
clc
shl
cli
inc
jg
cmp
jo
pop
bound
loopne
mov
mov
pop
pop
mov
xchg
cmp
stos
cmpsl
mov
outsb
scas
xor
inc
fsts
stos
mov
pop
js
jp
stc
mov
fsubs
rorb
out
mov
gs
cmp
out
jl
test
std
sbb
xor
call
gs
iret
and
lods
psrad
negl
inc
pop
push
pop
or
repnz
mov
mov
aas
inc
push
sub
cmp
bsr
sub
jbe
movsl
aaa
in
in
sbb
lret
cld
enter
mov
mov
pop
cmp
cmpl
sub
ljmp
mov
inc
les
pop
insl
jae
xchg
push
div
mov
push
test
test
negl
jnp
jecxz
cmpsl
or
fsubrl
inc
cmp
cli
xor
scas
jmp
fs
adc
or
pop
movsb
push
clc
in
jmp
cwtl
jmp
loopne
inc
fs
and
stc
shrb
into
cld
xchg
ljmp
jl
out
mov
jb
mov
outsb
sub
pop
pop
sbb
repnz
and
mov
aad
aad
clc
int
negb
cli
push
jnp
rcl
adcl
sub
push
call
xor
cwtl
sbb
jp
cld
fistpl
mov
pop
mov
mov
push
enter
call
test
mov
js
sahf
stos
das
mov
test
imul
dec
test
outsb
in
inc
loopne
mov
pop
xor
and
lret
sahf
dec
ljmp
stos
jb
mov
adcb
sub
dec
xor
lcall
jmp
push
xchg
pushf
es
loopne
jno
mov
pushf
xor
mov
jbe
adc
push
push
in
shr
adc
add
shll
rcrb
cmp
push
repz
in
or
icebp
mov
out
loopne
add
pop
aam
dec
repz
fsubrl
xchg
stc
shrb
imul
into
push
clc
addr16
int3
mov
mov
sbb
inc
lret
lcall
lahf
mov
sub
inc
pop
push
jmp
dec
js
cmp
mov
pop
xchg
cmpsl
mov
lcall
xor
jnp
mov
mov
add
jg
test
rcrb
js
mov
lock
sbb
imul
sti
inc
sub
mulb
push
mov
adc
fisubrl
movsb
sbbl
mov
in
sub
pop
stc
sbb
jnp
jae
jns
jne
pop
pushf
loopne
sbb
jnp
ds
aas
data16
or
mov
jo,pt
movsl
cmp
mov
icebp
pop
and
data16
test
add
shlb
jns
cmpsl
addb
adc
push
and
clc
adc
jge
outsb
cmp
shl
sub
into
sub
or
cmp
mov
and
mov
sub
mov
fsts
pushf
push
cmp
arpl
cli
jmp
sbb
mov
testl
out
mov
lods
add
lods
mov
addr16
fistpl
cmp
sub
add
loopne
stc
mov
sti
inc
adc
movsb
sub
mov
mov
and
popa
fimull
xor
add
dec
clc
xor
loop
fsubs
xor
hlt
and
xor
push
and
in
call
mov
inc
les
mov
sbb
mov
and
pusha
lock
outsb
not
into
adcl
sbb
mov
adc
add
add
loop
add
mov
clc
xor
push
add
repz
add
mov
or
aad
jne
mov
sub
mulb
into
loope
subb
ficomps
or
sti
je
jp
jbe
aam
adc
mov
icebp
imul
into
fistl
dec
roll
sbb
pop
cmp
mov
sbb
mov
out
mov
and
inc
rep
push
mov
dec
inc
mov
fwait
mov
mov
cmp
mov
and
fsubs
rcr
ret
imul
mov
jge
jmp
fs
popa
add
int3
pushf
out
lock
mov
sbb
mov
jne
dec
in
jo
pop
mov
pop
int
gs
sahf
cs
and
in
int3
pop
aam
xor
sbb
mov
adcb
jle
pop
iret
xchg
fnstcw
icebp
mov
jecxz
mov
loop
mov
jge
pushf
test
es
adcl
or
xchg
and
insl
cltd
dec
fucomip
rorl
jp
inc
test
aam
es
aaa
gs
fisubrl
in
addb
and
or
arpl
push
sarl
xchg
test
xor
pop
add
subl
aas
addr16
in
insb
and
mov
mov
jl
jb
test
xlat
push
xor
inc
fisttpll
movsb
sub
push
repz
popa
bound
xchg
mov
adc
rolb
pop
addl
xchg
clc
dec
jmp
inc
sbb
push
mov
ficoml
xchg
loopne
movsl
iret
adc
ds
movzbl
lods
mov
xchg
mov
adc
sbb
jge
in
mov
mov
or
add
add
daa
jle
sub
push
push
into
roll
aam
into
push
lock
adc
bnd
inc
hlt
sbb
or
sub
imul
add
js
jp
addr16
sub
int3
mov
inc
bound
mov
mov
aad
and
sub
mov
nop
or
add
push
or
jmp
xchg
mov
push
ja
mov
std
rcll
les
stos
stc
popf
out
push
lret
arpl
jle
call
cs
lea
mov
mov
test
mov
adc
sbb
mov
adc
or
jb
imul
adc
or
dec
in
fldpi
cmpsb
jecxz
pop
dec
mov
mov
add
mov
sbb
and
jns
cwtl
call
aas
mov
dec
test
mov
pop
mov
sbb
decb
xchg
loopne
ss
gs
int3
xchg
mov
jle
scas
iret
scas
rcr
add
lahf
or
add
add
jle
inc
aam
orl
adc
insb
ja
push
ss
lock
imul
scas
and
pop
xor
jbe
lret
sti
mov
jns
sbb
cmpsl
stos
inc
lahf
adc
push
push
dec
jp
test
pop
push
ds
movl
pop
cwtl
je
xor
add
fdivrl
cltd
xchg
pop
xchg
clc
shrb
leave
std
inc
mov
pop
adc
jle
int
jle
fwait
sub
add
xchg
or
pop
addb
pushf
xchg
or
mov
std
cmc
sub
and
jo
loope
sti
fiaddl
ja,pn
je
into
outsb
jecxz
lret
xlat
sub
dec
xchg
fwait
lea
cmp
cmp
inc
inc
loop
jne
xor
mov
sahf
call
mov
add
sub
push
fsub
jb
sbb
imul
push
push
or
mov
xchg
mov
mov
mov
cmpsl
rcrl
ficompl
daa
enter
inc
adc
sub
insb
xchg
push
push
insb
xchg
pop
xchg
decl
aam
loope
sub
adc
dec
fmul
and
arpl
sub
inc
pusha
or
pop
gs
fistps
pop
mov
dec
lock
sub
push
and
imul
icebp
inc
jg
mov
fisttps
dec
dec
pop
push
cmp
cli
pop
jns
push
imul
xor
hlt
pop
dec
insb
divb
jo
sbb
push
daa
cld
xor
xchg
shrb
cmp
stos
je
ljmp
add
add
pop
pop
loope
loope
fistpll
adcl
cmp
add
push
add
repz
add
cltd
push
xchg
ret
pop
push
xchg
ficoms
xchg
les
and
lods
pop
aad
iret
imul
add
call
add
hlt
sub
sub
jno
sahf
sbb
dec
fistpll
adc
ja
push
icebp
adc
dec
fldl
fstpl
jmp
lcall
pop
pop
sbb
inc
or
mov
dec
stos
add
sarl
idivb
addr16
sub
xor
mov
lds
pop
mov
scas
ds
mov
and
sbb
test
sub
sarl
cmpsb
sub
lods
sti
dec
dec
add
fisubs
pop
inc
and
sbbb
frstor
out
xchg
lock
sub
mov
mov
in
xchg
scas
push
adc
int3
into
and
test
inc
inc
push
sarl
xchg
icebp
out
jno
insl
inc
pop
mov
cs
sub
jge
sub
mov
pop
xor
mov
pop
rcrb
out
pop
xchg
mov
adc
xor
adc
mov
fistpl
jne
ret
add
not
dec
mov
out
cmpsb
call
addl
mov
push
std
frstor
scas
pop
ficomps
imul
adc
iret
dec
mov
sbb
dec
cli
fs
adc
cmp
sahf
pop
xor
add
fld
les
adc
data16
icebp
fs
add
mov
stc
mov
aas
mov
mov
cltd
int3
stos
sbb
jbe
and
das
scas
pop
cmp
adc
lea
fcmove
inc
in
jg
stc
mov
stos
lea
inc
add
cli
cmp
mov
stos
inc
scas
in
std
insb
aam
fwait
xor
pop
xchg
movsb
mov
xor
jmp
ret
dec
loop
into
repnz
movsb
js
les
fsts
jecxz
lret
mov
leave
add
enter
fwait
sbb
nop
mov
sub
mov
outsl
outsl
or
js
shlb
out
xchg
mov
xchg
xor
dec
fs
push
dec
push
imulb
fs
sbb
dec
add
mov
test
cmp
jmp
push
dec
out
call
push
pop
jge
xchg
aas
leave
adc
rclb
fs
and
inc
and
mov
test
dec
and
mov
leave
add
insb
loopne
pop
cwtl
pushf
inc
lods
jp
push
inc
push
push
push
insb
cmp
imul
in
sbb
iret
in
sbb
mov
not
sbb
add
lds
jb
in
cmp
in
dec
dec
jns
cmp
mov
or
jnp
outsl
jbe
inc
xchg
sub
addr16
mov
dec
cmp
add
imul
idiv
sub
push
std
ds
dec
bound
hlt
stos
in
and
lods
cmpsl
jbe
push
into
addr16
arpl
cmc
adc
adc
mov
cmpsb
lods
pop
or
lds
gs
push
sarl
data16
insb
popf
in
or
fwait
mov
mov
jge
idivb
add
fwait
xchg
ljmp
pop
xlat
orb
enter
xor
sub
adc
push
fbstp
testb
stos
test
lret
mov
xor
stos
lods
lahf
pop
in
mov
and
push
dec
mov
cmpsb
subb
lahf
sbb
mov
in
mov
mov
cwtl
pop
mov
lods
cmp
lods
mov
loope
add
pop
or
fsubrl
int
int
out
pop
push
call
sub
inc
or
sub
sbb
inc
lods
cmc
loopne
jns
inc
push
roll
aaa
and
pop
imul
or
loop
xchg
not
popa
arpl
jecxz
subb
or
mov
lret
add
xor
push
outsl
hlt
flds
adc
loope
mov
aam
shlb
cmc
add
stc
call
mov
and
xchg
cmc
in
cmp
push
mov
mov
ret
outsl
jg
sbb
add
jbe
mov
xchg
inc
mov
xor
loope
push
cmp
inc
pop
lods
push
inc
sbb
in
sub
push
insb
mov
aad
adc
and
xor
mov
cmc
push
xlat
cmpsl
adc
sbb
mov
jne
inc
andb
adc
inc
and
jb
decl
leave
jmp
mov
cmp
xor
inc
sub
cld
push
aaa
je
add
add
add
test
xchg
and
cmp
pop
add
rcrb
pop
add
repz
add
push
sub
inc
dec
loop
movsl
mov
sti
lods
or
dec
adc
outsl
ljmp
or
orb
cmpsb
lret
lret
popf
addr16
add
xor
push
sbb
sbb
mov
mov
in
and
mov
rol
lahf
or
adc
jg
inc
jbe
dec
mov
mov
lret
sbbb
adc
rclb
inc
lea
insl
int
int3
fwait
subb
mov
dec
outsb
arpl
inc
mov
jo
pop
sti
dec
or
sbb
jae
sub
sbb
das
std
cltd
es
aas
jp
inc
cmpsb
fcmovnbe
icebp
jecxz
or
je
or
lcall
sub
gs
dec
dec
popf
lret
fbstp
add
add
xchg
fwait
and
inc
pushf
xor
jmp
push
int
popa
inc
mov
dec
cmp
pop
dec
repnz
push
les
shlb
or
xor
push
xor
test
fsubrl
aas
adc
pop
cltd
fdivr
jle
loop
cltd
cs
mov
xor
sbb
cmp
inc
daa
stos
jg
shrb
mov
mov
cs
ret
lret
jno
mov
or
add
or
es
adcb
lods
lods
repnz
pop
fs
jp
pop
fmulp
push
jbe
add
cmp
and
lock
xchg
lods
push
sahf
aad
push
shll
pop
in
mov
pop
sbb
xor
lahf
dec
jle
sbb
test
dec
mov
sbbl
mov
int
orl
xor
std
pop
sahf
push
push
or
decl
test
jecxz
fdivrs
pop
xor
sbb
das
lds
sub
popa
sub
push
pop
rcrb
xchg
xor
test
cmp
jbe
in
cmp
add
dec
xchg
cmpl
es
enter
push
test
mov
pop
mov
rorl
sbb
and
mov
ja
bound
inc
scas
and
lcall
mov
push
sub
push
pushf
push
hlt
fldt
lock
ja
mov
in
dec
in
push
pop
pusha
rcr
xor
pop
iret
cltd
and
fnstcw
imul
mov
cmp
jle
cwtl
jno
or
dec
lea
dec
scas
sub
test
mov
add
std
mov
xor
loopne
sub
in
jae
adc
or
repz
xchg
add
jmp
jb
imul
inc
loopne
xchg
ss
add
sub
or
loopne
aas
sub
adc
data16
rolb
gs
shll
aad
mov
mov
and
scas
sub
adc
popa
inc
mov
push
pop
idivb
jae
orb
rcl
pop
fisttpll
fisttpl
pop
mov
push
xor
inc
mov
sbb
out
sub
mov
sub
or
addb
mov
sahf
push
stos
test
xchg
lret
xlat
iret
sub
icebp
fidivs
push
les
jge
inc
je
aam
int3
push
bound
es
mov
mov
pusha
mov
and
outsb
jb
cltd
pop
jge
ficomps
in
outsb
in
mov
sub
in
add
adc
rcl
fidivs
lret
mov
clc
mov
lret
sub
inc
add
out
xor
or
in
pop
jnp
dec
mov
cmc
divl
lcall
fldt
cmp
push
int3
or
mov
cmp
dec
andl
lds
mov
int
lahf
repz
lcall
sub
sahf
sub
mov
test
nop
mov
nop
xchg
lds
add
mov
mov
lods
jbe
andl
lcall
call
imul
adc
rol
prefetch
loop
xor
mov
sub
push
int
or
lret
and
fs
inc
stos
or
repz
add
test
jb
and
lods
jl
rorl
jae
inc
inc
pop
dec
cmp
cltd
cmp
pmuludq
movsb
aaa
xor
jg
testl
outsl
dec
sarb
mov
jl
adc
push
cmpb
sbb
sub
xchg
repz
fisubs
arpl
mov
push
gs
add
ja
addr16
inc
mov
xchg
ja
mov
flds
inc
je
push
mov
add
add
add
and
cmp
loope
mov
movsl
lock
add
add
icebp
add
cmpsb
mov
cmpsl
push
inc
ror
inc
jge
sub
dec
fisubrs
cmpsl
in
pop
xorl
mov
dec
and
inc
jbe
inc
push
arpl
ja
inc
dec
mov
subb
and
jno
pop
clc
sbb
inc
xchg
outsb
jne
push
in
fwait
push
pop
push
idiv
xchg
ret
mov
sbb
leave
imul
hlt
cld
mov
pop
fidivs
jg
xor
xlat
or
dec
mov
repnz
mov
mov
sub
ljmp
pop
inc
dec
aad
fcomi
ljmp
mov
sti
sarl
adc
das
and
adcl
jae
out
push
dec
cld
frstor
xchg
lock
hlt
out
push
add
imul
mov
push
ljmp
add
dec
in
jne
fdivs
rclb
pop
idivl
repz
mov
mull
repz
movsl
inc
pop
mov
mov
mov
es
dec
or
lods
push
sbb
into
shl
das
inc
mov
icebp
cmpsb
mov
insl
xchg
movsb
jns
and
fyl2x
xchg
dec
mov
push
sub
popa
sbb
xchg
or
cmp
mov
clc
xor
out
mov
jp
int3
addl
fucomip
xchg
add
insb
nop
mov
jne
rclb
adc
jp
adc
add
push
aam
dec
rolb
jae
aaa
ss
mov
mov
jnp
int3
dec
cwtl
ds
sub
dec
shlb
stc
sahf
test
loop
xor
in
mov
dec
aas
sti
je
in
xchg
in
sbb
rolb
dec
mov
inc
dec
dec
rcrl
shlb
mov
jmp
popa
mov
aad
pop
cmpsl
mov
dec
sbb
rclb
sub
mov
fistl
imul
pop
rcrl
mov
jbe
cmpb
out
add
outsb
sub
pop
repz
std
into
dec
add
cvtps2pi
mov
sub
rcl
icebp
outsb
test
lock
sarl
aaa
rcrl
mov
xchg
cmp
jg
add
sub
cwtl
outsb
dec
xchg
fsubr
mov
add
push
xor
rorb
std
push
shl
dec
rolb
sbb
cmp
ret
stos
imul
lea
mov
xor
aas
movsb
cmp
enter
jbe
flds
mov
cmp
aaa
loop
cli
sbb
xchg
xchg
jae
mov
dec
inc
pop
jne
icebp
movsb
les
outsb
pop
sub
cmp
les
pop
adc
dec
std
jne
mov
nop
lcall
faddl
mov
sbb
xor
xchg
sbb
dec
pop
fcompl
lcall
dec
mov
aad
inc
dec
mov
js
in
add
xor
aam
dec
xchg
push
xor
loop
sarb
stc
lahf
sub
fwait
xor
lods
ret
dec
and
hlt
lods
adc
cwtl
xor
sbb
and
dec
xchg
mov
mov
jmp
jecxz
or
fwait
mov
adc
inc
sub
push
jecxz
jno
icebp
nop
sub
dec
mov
lods
data16
sarl
mov
sub
jmp
mov
adc
jnp
in
push
addb
imul
repz
ljmp
imul
jb
arpl
mov
test
lods
rcll
add
dec
mov
movsb
xor
mov
lds
mov
inc
push
push
sub
enter
sarl
pop
lcall
shlb
leave
pusha
es
xchg
gs
push
mov
dec
call
inc
movsb
xchg
and
cmp
mov
xor
clc
mov
xor
inc
ret
inc
ret
mov
arpl
fwait
push
adc
sub
movsl
dec
out
cmp
push
popa
xchg
mov
cmp
mov
ljmp
or
add
pop
sub
mov
or
int3
jae
inc
jnp
sbb
or
cmp
imul
and
or
pop
call
push
mov
movsb
adc
and
repz
or
adc
shrb
push
jns
xor
je
mov
jp
bound
mov
mov
add
add
jg
mov
jp
ret
cmp
aad
add
repz
add
das
xchg
fld1
xchg
daa
fsts
pop
les
add
or
dec
leave
adc
addr16
popf
mov
jp
jle
adc
test
int
jb
jg
out
std
es
cmp
mov
sub
rcll
shll
cwtl
mov
mulb
jl
popl
pop
push
cmpsl
push
cld
test
pop
fisubrs
in
mov
ret
or
cld
cld
push
mov
outsl
int
jns
pop
scas
inc
lahf
push
jmp
add
hlt
and
test
es
add
sbb
nop
fmull
pop
jae
data16
push
adc
jle
imull
sbb
sub
pop
jnp
inc
inc
pop
lret
imul
xor
arpl
loope
std
push
xchg
fisttpl
fisubrl
and
mov
or
lcall
mov
sbb
sbb
mov
mov
sub
mov
scas
or
popf
inc
mov
mov
popf
xor
add
stos
mov
lods
push
adc
addr16
jne
xchg
out
movsb
or
rorb
cmp
sbb
in
cmp
insl
cmp
dec
sbb
cmpsl
ret
pop
jnp
jne
ret
into
lock
stc
mov
pop
or
xor
push
pop
mov
gs
les
test
mov
movsb
pop
dec
push
into
xchg
pop
mov
rcrb
ret
push
push
sarb
xchg
cmp
scas
add
pushf
vpshlq
inc
pushf
mov
mov
inc
loope
sbb
mov
cmp
xor
nop
mov
cmp
cli
loop
fisubrs
lcall
pop
inc
pop
and
mov
cld
scas
lahf
pop
xlat
daa
add
pop
mov
subb
dec
pop
jle
xchg
push
std
dec
mov
add
movsb
mov
insb
push
insl
ret
cmp
lret
out
sub
xchg
xor
movsb
mov
lea
dec
jle
or
xor
pop
add
sahf
xchg
cmp
lds
and
lret
test
adc
push
outsb
mov
jl
repz
in
movl
mov
pushf
sbb
out
mov
je
addr16
mov
ret
or
loopne
pop
or
dec
into
je
mov
xor
out
mov
les
fsubl
lock
in
jl
adc
aaa
jmp
adc
and
inc
in
add
xchg
movsl
add
or
inc
sbb
in
pop
dec
mov
pop
sbb
sahf
lret
mov
xchg
inc
cmp
test
repz
and
ljmp
pushf
xchg
cmpsl
cmc
aam
xor
jecxz
xchg
dec
lock
push
jbe
or
shll
jge
add
adc
sub
out
mov
inc
int
jmp
repz
and
xor
cmp
mov
sahf
xchg
mov
and
push
fwait
mov
leave
dec
mov
imul
inc
movsb
leave
jne
outsb
loopne
pushf
gs
xchg
int
mov
ret
aas
daa
add
cmp
pusha
les
pop
inc
or
xchg
ljmp
mov
or
cmp
cltd
test
jl
sbb
fistpl
lret
dec
cmpsl
cmc
xlat
cmp
orl
mov
jge
aam
jns
scas
fstps
shrb
fsubp
clc
scas
xchg
dec
push
jns
push
insb
stc
xlat
rorl
lret
das
ds
xor
pop
xchg
jl
movsl
xchg
mov
inc
adc
gs
push
icebp
test
ss
adc
int
bound
dec
dec
push
cltd
add
or
fnstsw
mov
insl
mov
mov
shrl
mov
pop
fildll
mov
aaa
hlt
push
cmp
push
sarl
popf
outsb
cli
insb
sub
jp
dec
jae
or
sbb
fists
pushl
in
sbb
dec
pcmpeqd
dec
div
fistl
aas
cmpsb
fs
pop
js
addr16
inc
rcll
inc
aam
adc
call
push
mov
xchg
rclb
xlat
aad
push
dec
pop
sti
in
es
cmp
loopne
stc
pop
cmp
je
out
lret
sub
cmp
daa
jecxz
jb
scas
push
push
pusha
dec
aas
pop
loope
out
mov
or
cmp
and
jo
inc
pop
cs
icebp
lcall
jb
out
cmp
add
add
push
push
cmp
cmp
push
pop
mov
lahf
add
add
repz
add
andb
sbb
lret
test
andl
filds
sarl
inc
fisttpl
decb
mov
pop
cmp
sbbb
outsb
push
outsl
daa
or
adc
jo
pop
pusha
and
bnd
int
jne
mov
adc
pop
pop
jo
ja
xchg
lcall
xchg
iret
pop
aas
push
jb
inc
gs
outsl
xor
or
jecxz
cltd
add
adc
xlat
imul
cmp
sub
or
int3
cmpsl
mov
ret
inc
gs
mov
int3
pop
mov
daa
push
int
inc
dec
dec
mov
repnz
insl
and
cmc
roll
pop
int3
inc
push
xor
push
and
push
or
jo
cmp
mov
push
or
daa
sbb
call
insl
adc
fidivl
dec
out
adc
push
je
mov
lcall
not
aad
pop
rcll
pop
xchg
out
mov
testl
adc
fsub
and
pop
cwtl
pop
loope
repz
repnz
xchg
daa
jmp
cmp
adc
jno
jnp
sbb
dec
xlat
jb
xchg
sub
xor
lock
or
fbstp
pop
fmulp
jb
int
out
dec
ret
or
mov
xchg
sbb
in
mov
movsl
ret
mov
push
cmp
jl
mov
jge
stos
and
cmp
out
cmp
add
xchg
das
ja
enter
sbb
aaa
mov
test
fldcw
mov
out
add
cmpsb
add
sub
lods
data16
xor
rep
fiaddl
xchg
xor
js
jb
pop
inc
add
gs
out
xor
nop
les
cmp
out
push
mov
push
das
inc
imul
mov
incl
das
jns
js
inc
aam
sti
xchg
jae
add
push
out
das
arpl
in
xchg
xchg
fcmovnu
daa
pop
add
mov
scas
inc
movb
adc
mov
jae
jmp
or
lcall
mov
setns
rcll
adc
or
testl
scas
cmp
clc
dec
test
fcomps
and
mov
addr16
dec
and
and
iret
or
adcb
jg
addr16
sub
aaa
roll
and
add
mov
pusha
push
pop
lret
dec
loope
inc
or
inc
enter
int
lret
sub
or
sti
into
push
sub
mov
sub
ret
inc
sbb
sbb
adc
pop
xor
aad
mov
aam
popa
mov
add
aam
sahf
inc
cmp
mov
dec
fadd
loope
cmp
adc
dec
ret
ds
popa
das
pushf
jae
jnp
add
ss
mov
pop
dec
lret
xor
aam
sbb
sub
outsb
mov
subl
ljmp
jne
je
sbb
xchg
icebp
add
fbstp
pop
data16
pop
or
shrb
popf
arpl
mov
push
push
or
cmp
sub
cltd
stc
movsb
cltd
repz
push
sbb
scas
dec
inc
mov
data16
mov
ret
outsl
rclb
test
pop
jne
push
andl
add
ja
push
outsb
cltd
and
or
dec
in
inc
xchg
mov
xchg
dec
es
stc
add
and
xor
jecxz
jno
mov
addl
pop
jmp
std
imul
stos
push
sbb
mov
pop
inc
fimull
or
pop
mov
sub
cmc
jmp
notl
and
rolb
or
arpl
rcl
push
jo
fsubrs
ret
outsl
cmp
aam
lret
pop
sub
jge
lods
pop
or
fnstcw
ds
pop
adc
push
inc
outsb
cmovg
xlat
pop
sbb
dec
pop
dec
adc
adc
push
xchg
cmp
leave
mov
cmp
sbb
fistpl
fcoml
into
ljmp
and
xchg
cmp
push
push
and
fstps
mov
mov
int
sub
and
cmovne
xor
cli
test
push
sub
cmp
mov
add
add
add
mov
jg
test
out
add
jnp
out
add
repz
add
pushf
inc
dec
jbe
mov
shl
out
mov
lods
mov
lds
fildll
imull
sub
out
loop
mov
mov
iret
xchg
mov
jbe
in
aaa
jo
adc
sti
cltd
nop
adc
imul
jmp
sub
dec
mov
sbb
repz
fcomip
push
jno
loopne
bound
mov
imul
jo
xchg
inc
cmp
sbb
or
leave
push
inc
inc
sti
test
jmp
test
mov
mov
inc
fstl
cmp
jg
mov
add
mov
gs
mov
ss
mov
jge
imulb
hlt
and
pusha
jne
mov
cmc
cmp
xor
mov
pop
popa
push
and
adc
push
push
ss
sbb
sbb
xchg
xor
insl
in
call
iret
mov
sbb
stos
jae
xchg
and
inc
sbb
cld
divl
push
fcomi
mov
jecxz
call
cmpb
jno
mov
fcompl
repz
inc
push
leave
ds
sbb
ret
xlat
cmpsb
ss
lock
push
push
xchg
inc
pop
test
lods
inc
xchg
cltd
pop
dec
inc
into
pop
cld
adc
icebp
add
in
addr16
aad
aaa
cld
cwtl
cltd
daa
mov
int3
sbb
add
or
inc
int3
xchg
cmp
shrl
cwtl
inc
cmp
sub
jg
pop
jge
and
add
dec
fs
or
jge
push
jmp
cmc
movsl
test
or
jecxz
mov
mov
and
pop
jecxz
jb
add
inc
mov
lock
gs
fldl
add
jbe
mov
inc
jno
ret
lods
imul
add
aam
sarb
sar
es
and
enter
jmp
enter
movsl
addr16
aaa
xor
mov
or
push
dec
jo
lods
inc
and
adc
sbb
movsl
add
rclb
xor
out
jp
cmp
jae
out
mov
ret
inc
div
mov
ja
sub
inc
insb
aam
mov
dec
cmpsb
mov
lahf
ffreep
aam
push
and
mov
rorb
repnz
jmp
mov
insl
xlat
out
sarb
aaa
cltd
xor
fbld
sti
nop
in
mov
sbb
push
fs
inc
es
sbb
out
leave
nop
cltd
sbb
in
jno
jno
fwait
rcl
sbb
jecxz
xor
lock
aad
arpl
mov
lahf
lahf
filds
xor
dec
psrld
daa
xor
cmpsb
lods
or
je
sarl
mov
imulb
in
xor
dec
loop
sti
jp
add
xchg
mov
out
sarb
ja
test
jp
and
push
pop
mov
dec
cmp
and
insb
sti
cmp
rol
scas
sub
jne
fbstp
or
cmp
mov
cld
mov
and
inc
js
stos
or
pop
loop
cmp
fldcw
int3
mov
mov
dec
xchg
xorb
jno
movsl
mov
icebp
sub
outsb
jg
mov
in
push
inc
or
and
mov
mov
sbb
push
adc
lock
inc
fcmovb
filds
outsl
xor
fldl
dec
add
cmp
jecxz
roll
inc
scas
ror
add
jns
cmp
pop
les
inc
mov
jecxz
jne
ret
sbbb
loope
mov
into
mov
jmp
fs
addr16
jnp
fwait
sub
jle
adc
in
loopne
or
in
enter
xor
mov
orl
jmp
inc
jae
xor
jge
lock
xchg
rcrl
and
aad
repz
jmp
adc
arpl
jl
nop
jns
movsb
cmp
sahf
dec
xchg
cmp
mov
adc
subl
and
mov
out
lods
les
sub
test
mov
movb
xchg
inc
je
xchg
insb
lds
and
lock
pop
lcall
dec
sbb
cwtl
lret
xor
adcb
cs
into
subl
jl
in
orb
push
aam
jle
adc
sub
fbld
add
fidivrs
add
dec
mulb
repnz
out
pop
fnstenv
add
add
add
sbb
add
daa
mov
cmpl
inc
adc
shll
aas
pop
cmp
and
push
push
jae
insb
sub
and
jb
push
xchg
mov
cmp
sub
or
and
dec
jae
inc
shlb
xchg
xor
decl
pop
xchg
aad
jg
adc
add
mov
mov
inc
inc
pop
push
fldenv
int
fcmove
adc
repz
lahf
pop
fs
push
add
xchg
xchg
test
popa
xchg
icebp
in
shl
shlb
mov
in
xor
pop
mov
jecxz
ljmp
in
jo
or
or
imul
into
fisttpl
ss
pop
aas
fld
mov
inc
addr16
jle
cwtl
and
sbb
push
inc
jae
push
xor
mov
sub
jns
in
loope
lods
dec
jo
pushl
movzwl
sub
aam
sbb
push
sub
adc
in
adc
jg
mov
mov
or
neg
jge
push
outsl
lods
mov
or
push
in
fst
jns
jp
scas
push
mov
xor
mov
movsb
addr16
hlt
add
xchg
inc
mov
xor
xchg
popa
jmp
or
xchg
jge
mov
out
cmpsb
cmp
shll
icebp
inc
mov
sbb
imul
ss
xchg
lret
ret
test
add
dec
aam
push
lea
hlt
xor
insb
repz
lds
push
mov
jae
cld
or
aad
jl
add
data16
mov
lret
or
sub
dec
xor
add
lcall
xchg
in
pop
sbb
loope
nop
dec
pop
jns
into
sub
hlt
inc
lret
test
cld
pop
mov
xchg
and
shlb
outsb
je
test
addr16
sti
enter
movsl
imul
cmpsl
mov
xchg
sub
out
and
call
inc
mov
jno
stos
mov
rcrl
ror
pop
and
into
sti
mov
jae
mulb
gs
pop
fsubl
jmp
loopne
xchg
inc
push
mov
scas
dec
lcall
xor
jne
sbb
shr
outsb
mov
add
lret
mov
iret
cli
movsb
icebp
int
jecxz
loop
and
inc
cmc
decl
lods
hlt
clc
fs
add
mov
xchg
clc
and
xchg
cmc
in
aam
test
insl
cwtl
adc
or
or
shrb
loop
push
mov
cmp
and
xor
mov
std
fwait
xchg
fstl
and
or
sub
xchg
jmp
sub
movsl
adc
add
mov
inc
sub
jae
sbb
clc
push
xor
ret
stos
ljmp
imul
hlt
push
sbb
mov
ljmp
lock
cld
adc
xorb
add
pop
adc
fbld
adc
outsl
repz
dec
lahf
js
pop
inc
pop
repnz
aad
bound
and
mov
loope
inc
push
dec
test
or
push
cmpl
adc
push
jg
inc
pop
stc
xor
shrb
push
loope
mov
inc
fsubrs
xor
cmp
gs
pop
mov
aam
scas
std
fstl
les
daa
sub
jp
das
ss
shrb
mov
push
cmp
xlat
data16
movsl
sub
mov
sub
jo
pop
mov
fiaddl
outsl
add
and
in
arpl
jnp
dec
sbb
mov
or
and
shr
out
jno
inc
xchg
inc
dec
dec
outsl
leave
int
inc
fwait
ljmp
fidivrl
mov
or
mov
imul
adc
xchg
jg
jmp
and
shll
xor
pusha
nop
insl
push
cmp
inc
sub
push
sbb
clc
pop
lcall
push
insl
stos
mov
shr
jbe
test
mov
sub
insl
xor
clc
xor
sbb
rcrb
mov
divl
xor
filds
movsl
lods
push
gs
out
pop
cmpsb
push
cmp
das
loope
push
fs
xchg
je
jb
cmovbe
ds
xchg
xchg
cwtl
lcall
out
imul
push
push
sub
pop
aad
js
dec
in
xchg
rcrl
jp
ds
push
nop
outsl
insb
jle
imul
push
xchg
test
rcl
adc
mov
add
add
add
mov
mov
add
pop
int3
ja
add
add
add
inc
mov
out
rcll
pop
clc
dec
shlb
push
xchg
rcrl
jo
hlt
cmp
push
mov
test
movaps
imul
lods
imul
jno
outsb
push
fsts
cs
bound
adc
pop
mov
in
std
lcall
pop
pop
lea
adc
add
loopne
rcr
add
push
insb
or
test
outsb
scas
or
inc
jp
and
xchg
adc
cmp
add
mov
outsb
xchg
push
inc
mov
push
das
xchg
out
es
mov
ret
xor
xchg
push
or
pop
mov
loop
test
mov
adc
adcl
cli
pop
addb
loop
inc
and
sub
dec
adc
or
adc
movsb
lcall
xchg
jnp
jl
out
mov
mov
adc
sar
std
xchg
inc
or
xchg
cmpsl
pop
sti
sti
loop
std
sbb
adc
cld
jo
int3
push
jg
pop
out
mov
sbb
leave
dec
insb
sub
pop
lahf
mov
test
movsl
ds
in
lods
lret
push
fcomip
fcoms
sub
xor
add
push
adc
cli
mov
sub
mov
inc
std
scas
sbb
jle
cmp
aam
popf
or
sbb
inc
insl
jnp
xchg
in
mov
xor
mov
add
or
aad
pop
in
js
test
into
xchg
sbb
fistpll
movsb
es
pushf
fistl
inc
icebp
mov
lds
outsb
stc
or
sarb
pop
fisubs
sub
push
inc
mov
xchg
addr16
push
pop
int
cs
xchg
pop
jns
mov
mov
out
adc
mov
loope
dec
adc
xor
fsubr
test
out
aas
out
dec
test
and
xchg
mov
inc
out
or
push
fwait
mov
jge
lret
xchg
inc
pop
sub
jge
cmpsb
dec
ret
jne
mov
xorl
loopne
inc
ljmp
pop
mov
jo
out
aaa
movsb
lock
xchg
test
or
inc
push
jg
jle
sahf
push
add
adc
sbb
pop
jae
out
dec
cmp
int3
shr
fstpt
sub
mov
mov
cmpl
push
mov
add
das
sub
mov
xchg
addl
mov
out
cld
xchg
add
xchg
jne
jl
jns
ret
cld
xchg
mov
sbb
or
pop
insl
outsb
mov
adc
dec
push
insb
dec
dec
testl
jl
and
daa
pop
adc
add
das
jl
jp
push
nop
adc
push
insb
cmp
mov
lds
mov
push
insl
xor
leave
fnstsw
inc
mov
cmpsb
sbb
js
mov
cli
gs
insl
sub
and
sbb
cmp
mov
adc
xor
mov
fdivrl
and
add
scas
shlb
sbb
jle
push
int
enter
lret
rorl
pop
cmp
ss
aaa
rolb
sub
inc
lret
fisttpll
add
mov
scas
sub
pop
rcr
mov
clc
sbb
imul
insb
psllw
ds
mov
push
clc
mov
rorl
mov
and
js
int
test
mov
ffreep
rcll
or
loop
push
fstpl
jns
in
jp
xor
add
pop
nop
pop
clc
xchg
sub
mov
pop
lods
xor
cli
pop
nop
dec
leave
outsl
xorb
jge
dec
das
inc
imul
rcll
lock
jno
mov
mov
fs
cmp
xchg
sub
xor
arpl
movsb
lret
dec
fs
ss
and
or
insb
or
movsb
imul
inc
push
cs
mov
daa
or
out
test
cli
daa
cmpsl
ret
sahf
xchg
xchg
popa
push
sbb
push
sub
ret
mov
jne
aas
repz
fisttpl
cs
movsb
out
adc
jnp
cmpsl
add
or
sub
ja
orl
dec
xchg
scas
push
out
bound
pusha
mov
push
sbb
addr16
xchg
scas
xor
xor
jbe
sbb
test
push
inc
jmp
stos
in
xchg
aas
adc
mov
add
add
mov
and
pop
inc
mov
add
add
mov
dec
xchg
push
inc
jns
lods
sarb
cmp
jl
push
xchg
pop
inc
fsub
jae
dec
sub
mov
je
dec
inc
and
orb
call
in
xchg
jp
fsincos
mov
inc
dec
sbb
mov
pop
leave
frndint
cld
lret
pushf
dec
mov
cmc
push
xor
mov
sub
call
jo
shlb
mov
in
clc
cmpsl
scas
std
mov
push
xchg
add
sbb
je
in
mov
lret
mov
push
insl
stos
mov
dec
xchg
mov
jmp
xchg
xchg
dec
cmp
nop
lods
sub
push
mov
outsl
daa
ja
pop
jp
xor
xchg
mov
mov
cld
outsb
in
ficomps
push
sbb
fdivrp
in
mov
enter
xchg
dec
jmp
pop
mov
pop
inc
leave
mov
or
jp
inc
pop
rol
push
mov
in
lahf
lea
jns
or
loopne
leave
xor
shlb
out
sub
xor
sbb
inc
and
mov
repnz
or
and
enter
lock
inc
mov
loop
iret
fdivp
into
and
decb
xchg
push
cmpsl
outsl
stos
push
psubusw
sub
cmp
push
repz
adc
aam
pop
loop,pt
adc
mov
sbb
sahf
lret
fndisi(8087
adc
sbb
mov
sahf
xlat
lret
les
stos
sbb
icebp
cmpsb
icebp
std
popa
cld
push
xchg
aam
push
aam
and
imul
out
int
fdiv
scas
std
iret
pop
xchg
adc
jns
and
push
into
push
jns
jle
divb
cmovl
or
lcall
or
sahf
incb
sub
stos
mov
shll
mov
shlb
ret
in
adc
xchg
mov
test
mov
sahf
jecxz
inc
xchg
jne
mov
xchg
arpl
xor
mov
popf
pop
adc
or
pop
pop
shl
sbb
inc
xchg
mov
repnz
popa
nop
data16
call
cld
shl
pop
data16
int3
jl
inc
fbld
leave
cli
daa
imull
cmp
dec
movsl
out
adc
dec
adc
icebp
mov
js
notl
cmp
icebp
xchg
out
push
push
inc
fldl
cmp
add
ljmp
cld
insb
pop
pop
mov
repnz
lock
mov
pop
and
inc
mov
test
leave
ss
adc
jecxz
dec
shr
fcompl
pop
jbe
inc
xchg
pop
nop
aam
xor
out
and
push
das
jne
sbb
mov
inc
lret
lds
into
push
xor
ret
jge
fs
inc
sahf
jne
push
test
lods
xor
pop
jg
push
insb
cmc
jne
dec
pop
hlt
dec
dec
xor
insl
xchg
mov
cmp
rclb
pop
pop
shl
and
xor
push
sbb
js,pt
jge
rorl
mov
or
lcall
sub
addl
shlb
outsb
xchg
adc
add
or
sub
and
outsb
xchg
nop
push
pop
push
out
dec
jmp
pop
and
imul
inc
mov
mov
pop
fs
dec
xorl
repnz
adc
out
bound
scas
clc
js
arpl
mov
imul
mov
iret
pop
mov
adc
ja
mov
lds
mov
repz
cmp
in
inc
push
push
sbb
test
or
loope
lds
jns
adc
aam
add
cmc
sbb
hlt
push
push
jns
icebp
sbb
mov
aam
pop
es
stc
arpl
xchg
and
mov
movsl
push
jb
outsb
outsb
mov
dec
mov
adc
mov
inc
mov
lret
int
cmpsb
pop
dec
or
mov
sarb
mov
out
jp
or
push
iret
ret
insl
xchg
mov
inc
add
in
cltd
sbb
xor
es
pop
test
shlb
push
cmp
out
rcll
sub
mov
outsl
fistpl
xchg
cmp
mov
addr16
adc
xchg
cs
add
cmp
pop
sbb
pop
pop
xchg
push
mov
jecxz
add
add
add
pop
fldl
inc
sti
aas
jb
add
mov
addl
add
sbb
pop
mov
push
sahf
cmc
mov
mov
cmp
push
push
jg
jns
addr16
mov
fchs
sbb
pop
xchg
sub
das
lods
mov
xor
in
popa
iret
ret
sbb
add
enter
popf
mov
cmc
sbb
push
std
outsl
xor
xlat
cmp
cwtl
cmp
sub
sti
mov
add
lods
mov
push
adcl
and
or
push
jmp
adc
xor
mov
push
mov
or
test
ret
or
push
scas
mov
jno
scas
enter
mov
loope
jle,pt
sbb
push
movsl
iret
xchg
mov
mov
mov
mov
sub
movsl
insl
scas
int
xchg
jmp
imul
pusha
and
mov
push
cmpsb
push
orb
and
cmpsl
adc
push
xor
insb
mov
cmp
ror
dec
notb
adc
inc
and
mov
lret
sub
ret
sbbl
xor
xlat
dec
xor
or
sbb
pop
ja
sub
inc
push
pop
xor
xor
cmp
test
lock
adc
inc
cmp
stos
xchg
fbld
aas
ljmp
push
out
pop
mov
scas
push
mov
pop
dec
jnp
sub
inc
sahf
jb
cmp
fistl
pop
imul
aas
sbb
addr16
add
lahf
sbb
sahf
add
xchg
xorl
jbe
push
xor
inc
clc
sub
pusha
push
call
jl
and
ret
sub
scas
imul
mov
xchg
push
mov
mov
pop
dec
push
cmp
push
rolb
mov
test
mov
int3
push
std
or
es
or
jp
xor
test
pop
cli
mov
test
rcll
shll
in
shl
add
inc
push
and
mov
das
lret
out
jbe
cli
stos
mov
pusha
enter
or
add
scas
cmc
mov
and
incl
adc
sbb
sbb
fstpl
mov
bound
cmp
fdivr
in
lea
je
lods
cmpsb
cmp
cwtl
cmp
sbb
fildll
mov
cmp
lret
call
mov
int3
sbb
cmp
push
inc
push
mov
insb
ds
ljmp
xchg
fisubrs
push
push
xor
inc
aas
lods
imul
adc
aam
jmp
add
inc
xor
fisttps
mov
out
into
ficoml
xchg
sub
or
stos
cltd
pop
xchg
jne
pusha
xchg
jb
pop
add
jmp
fmull
and
sub
fwait
shrb
lods
push
dec
shl
mov
insl
mov
mov
xchg
cmp
cs
mov
popa
fcmovnu
inc
xchg
gs
push
pop
cmpsl
mov
roll
les
data16
shrl
imul
outsb
enter
sbb
and
and
adc
sahf
lahf
pop
pop
les
xchg
sbb
mov
fs
fisubrs
dec
mov
add
push
imul
imull
or
cmp
les
xor
xor
add
jge
loope
pusha
push
lods
out
xor
es
mov
dec
mov
loopne
xor
pop
mov
xchg
xchg
ja
test
dec
lea
movsb
int
decb
mov
mov
add
rcl
pusha
jno
lods
jmp
loopne
repz
out
lret
dec
push
in
js
lcall
push
sub
and
ret
in
inc
pop
push
or
xchg
dec
sbb
movl
pop
fs
js
sbbl
pop
jp
arpl
je
adc
cli
push
pop
and
bound
shll
pop
mov
stos
add
dec
jmp
xchg
or
out
inc
jp
lret
into
or
push
inc
cli
lea
mov
mov
pop
push
lahf
cmp
inc
test
lods
aas
pop
sub
and
xor
dec
fidivrl
add
sub
xchg
jne
lret
push
mov
insl
and
add
add
add
mov
or
dec
push
movsl
xchg
add
add
add
clc
fwait
les
test
sub
cmc
insb
shll
sarb
rcll
lods
xchg
sub
dec
cmpsb
push
loopne
mov
xchg
gs
mov
sbb
inc
push
pop
xchg
imul
lcall
cmp
popa
icebp
js
pop
push
cmp
rcrl
jbe
daa
jg
sbb
addb
dec
add
sbb
iret
sub
in
lahf
jnp
lcall
test
sbb
out
xchg
pop
ret
mov
movsl
jbe
push
push
cmp
push
jle
int
dec
or
lahf
lahf
movsb
and
inc
xchg
mov
in
in
sub
mov
sbb
in
xor
push
lds
out
mov
mov
enter
or
xor
insb
cmpsb
cmpl
ljmp
mov
pop
hlt
scas
push
mov
mov
mov
sub
cmp
push
mov
sti
lret
insl
adcl
into
xchg
stc
mov
mov
out
lahf
jo
je
pop
ret
and
pop
mov
mov
sub
mov
in
adc
mov
call
jge
dec
jmp
add
inc
add
scas
mov
jge
or
xor
or
dec
jmp
fsts
or
mov
push
or
cmp
mov
lds
in
sub
cmp
fiadds
movsl
dec
testb
das
popf
or
jge
sahf
lea
lds
sub
loopne
fdivp
pop
leave
mov
lahf
in
or
mov
mov
ljmp
inc
mov
lods
mov
mov
pop
negb
pop
ds
out
pop
aam
push
dec
mov
pop
or
aad
std
add
or
popa
fstl
sub
jno
es
out
mov
fisttpl
pop
xor
ds
rcrl
into
dec
ja
popa
fidivl
cltd
inc
push
or
enter
push
xchg
ss
fincstp
ror
dec
mov
or
cmp
fcomps
clc
and
sub
push
jmp
lret
inc
cmpsl
pop
das
xchg
pushf
dec
leave
push
mov
mov
xchg
shrl
mov
mov
les
sbb
mov
jno
adc
or
pusha
cmpsb
inc
inc
dec
xor
sbb
pop
les
xor
sbb
ret
mov
mov
fs
pop
ja
cld
lret
pusha
sti
mov
lods
and
mov
mull
dec
lea
push
jg
xchg
mov
lods
mov
mov
int3
and
xchg
mov
repz
mov
mov
test
sbb
mov
ja
jns
xchg
xchg
dec
sti
out
loopw
pop
xor
not
jg
mov
out
mov
test
dec
enter
mov
sbb
shrb
jp
ficoml
mov
repz
adc
ljmp
push
jbe
popf
mov
fmull
mov
jle
or
sbb
xor
push
es
jae
push
xchg
nop
stos
jecxz
mulps
stos
fsub
adc
or
cmp
push
cmp
and
ss
or
mov
lret
jp
js
xor
ud2
push
enter
ret
cmpsb
rcrb
arpl
mov
scas
cmc
xchg
xchg
dec
pop
daa
lcall
out
jnp
sbb
add
jle
test
cwtl
jle
imul
cmpl
push
sbb
and
xchg
rcll
push
dec
loop
mov
dec
movsb
xor
stos
stos
leave
mov
push
lods
out
dec
out
inc
jne
or
push
cmpsl
mov
add
push
lfs
mov
jp
mov
pushf
pushf
ss
imul
imul
pop
cmp
push
enter
test
daa
jecxz
add
mov
sti
test
pop
mov
lock
rol
vmovapd
in
js
shll
es
call
popf
fcmovbe
mov
icebp
pop
adc
into
pop
dec
aas
mov
test
outsb
pop
xchg
xchg
sbb
mov
imul
add
add
mov
cmp
cltd
mov
cwtl
mov
add
add
add
push
push
js
pop
xchg
enter
jg
addr16
inc
push
mov
fisubl
in
jg
in
ds
sub
push
loopne
mov
add
pushw
ficompl
or
loope,pt
js
push
add
xor
mov
fiaddl
sahf
shrb
pop
rolb
sub
repnz
xchg
imul
push
adc
mov
fbstp
cmp
scas
jl
aam
call
add
sarl
loop
int
cltd
shll
xlat
shrb
xchg
repz
insb
jecxz
mov
mov
jae
movsb
push
or
fimuls
sbb
decb
cmp
push
jmp
mov
orb
mov
inc
mov
mov
mov
nop
push
and
sti
dec
arpl
popf
leave
push
data16
test
test
stos
mov
sti
fldcw
add
daa
mov
sbb
jmp
cmc
pop
mov
mov
xor
repz
jmp
adc
jge
push
cwtl
iret
sti
mov
test
lea
inc
call
sub
adc
stos
lret
les
mov
enter
pop
dec
les
mov
jnp
shlb
sti
mov
mov
jp
int
outsl
dec
and
fnstsw
fcmovnbe
adc
sarb
push
jbe
mov
aas
repz
sbb
or
mov
and
sub
out
in
xor
mov
popa
arpl
jp
test
push
push
mov
mov
and
mov
add
paddsb
repnz
xor
pop
sub
in
bound
int
loop
jl
push
into
xor
sbb
adc
push
jbe
push
leave
mov
lds
push
test
lods
jle
sbb
sbb
mov
sub
outsl
sbb
je
sbb
loope
sbb
push
shlb
dec
mov
dec
mov
xor
sarl
test
scas
addr16
cli
sub
sti
jle
ret
cmp
sarb
push
sbb
loopne
dec
and
mov
scas
leave
fadd
fadds
xchg
shll
int
pop
jg
push
fsubrl
mov
sti
mov
mov
bound
xchg
inc
je
and
call
imull
and
push
pop
lds
push
dec
adc
dec
es
aas
pop
mov
xchg
xchg
ja
xchg
into
push
sub
xor
adc
out
mov
sbb
fcmove
add
jnp
inc
inc
xchg
mov
subl
jo
xor
push
inc
repz
popf
jne
dec
jb
loopne
je
cmp
inc
cmpsl
dec
sbb
sti
mov
das
sbb
sub
out
xor
iret
xchg
shl
stos
and
push
gs
pop
sub
cmpsl
mov
dec
mov
xchg
ljmp
icebp
xor
mov
pop
mov
add
scas
pop
cli
cwtl
push
cmp
sub
pop
mov
adc
lods
in
test
and
add
popa
push
sbb
or
mov
and
out
and
imul
fstpl
push
inc
add
mov
les
and
ret
pop
cwtl
into
dec
and
dec
or
adc
loop
daa
rcrl
insb
pop
out
dec
leave
in
arpl
mov
mov
js
mov
movsb
inc
jne
daa
ss
aam
jno
imul
icebp
cmp
pop
xor
mov
and
mov
add
stc
xchg
cmp
std
fcomip
pop
jmp
lahf
xchg
mov
je
mov
add
fs
sbb
hlt
int
adc
test
mov
xchg
fsubs
xor
cltd
mov
data16
mov
inc
imul
mov
cltd
ljmp
cmpsl
ficomps
or
cmp
fisubrs
jnp
xchg
jae
sub
es
rcrl
jge
icebp
loop
cmpsb
or
push
and
decl
ficomps
in
stc
xchg
aam
test
fdivrl
add
aam
out
arpl
mov
cs
filds
inc
mov
xchg
sbb
jb
pop
fisttps
dec
jo
addr16
cmp
sti
add
add
add
and
es
sti
std
sbb
adc
push
mov
add
cmp
add
dec
xor
add
mov
out
loope
mov
outsb
imul
pop
std
xchg
pop
lds
int3
hlt
push
sbb
mov
lea
fdivrl
pop
call
xor
add
fisubrl
test
imulb
lret
repnz
cmp
cmp
jnp
mov
or
push
shrb
fdivrl
sub
shl
cmpsb
jge
push
pop
hlt
lret
xchg
dec
jnp
fsubp
shr
mov
dec
ss
inc
push
shlb
fmull
adc
jg
sub
pop
es
mov
loopnew
adc
mov
ret
cmp
fsubl
adc
sub
cmp
pop
add
mov
mov
mov
repnz
sbb
mov
mov
pop
fstpt
jecxz
dec
xchg
sub
lock
daa
rcrl
jmp
in
out
lret
mov
xchg
xor
dec
mov
shlb
mov
push
movsl
addr16
inc
imul
jb
sub
pop
or
add
rcl
jno
push
and
lock
or
dec
addr16
inc
cmp
dec
xchg
fs
ret
popa
push
stos
inc
pusha
jmp
cmp
outsb
or
push
adc
inc
andb
mov
xor
xor
pop
sbb
das
ret
out
mov
test
cmpsl
inc
sub
jnp
dec
addr16
xchg
std
idivl
xor
push
xor
sub
nop
mov
push
fmulp
cmp
xchg
jb
jo
mov
scas
and
mov
or
scas
push
and
pop
and
add
jno
push
xchg
out
in
pop
add
out
rorb
stc
fsubr
ret
adc
push
and
cli
jns
aad
test
inc
insb
lahf
dec
push
cmp
cmp
add
adc
xchg
cmpsb
cmp
sbb
rorl
into
adcl
mov
xchg
sub
xchg
aas
or
loop
in
enter
sbbl
xchg
mov
orb
sti
call
in
push
jp
push
shrl
add
lods
sub
xor
stc
mov
movsb
outsl
pop
aad
out
dec
jno
mov
lcall
mov
add
pushf
add
in
mov
jae
test
pop
pop
sub
push
test
enter
xchg
push
pusha
mov
fs
push
push
xorb
sbb
inc
ret
aam
dec
adc
lahf
mov
ljmp
mov
jns,pn
test
mov
push
sub
aaa
rcr
sbb
into
cwtl
lret
gs
cmpb
stos
xor
cmp
arpl
loope
aad
mov
cmp
imul
xlat
ja
cmp
roll
inc
push
push
jb
push
jae
aad
mov
sar
popf
jp
xchg
pop
jae
repnz
sarb
or
jle
mov
lret
xor
mov
stos
ss
lea
leave
and
pop
inc
sbb
or
sbb
pop
jbe
jb
loop
sbb
sbb
clc
and
mov
js
sti
mov
mov
cmp
lock
std
and
mov
cld
mov
or
and
adc
fcmovnu
add
inc
in
and
clc
insb
lahf
adc
test
mov
sub
icebp
sbb
dec
inc
arpl
dec
xor
jl
rcl
ret
lahf
lcall
dec
pop
mov
inc
sub
xor
add
lea
fucomp
fistpll
jbe
jnp
pop
ljmp
sub
adc
cmpsb
ss
daa
inc
lret
pop
mov
push
popa
jle
adc
cltd
cli
xchg
cmovno
adc
hlt
ror
icebp
pusha
ljmp
mov
push
add
out
pusha
adc
cld
mov
stos
add
repnz
jmp
cs
pop
push
daa
rcll
stos
xor
or
push
inc
or
pop
xchg
cmp
loopne
orb
mov
data16
inc
push
push
dec
and
subb
ret
mov
add
das
imul
pop
loopne
mov
ret
jl
push
jge
lcall
loop
inc
fs
dec
shrb
cwtl
cmc
orl
pop
dec
mov
or
rcrb
test
dec
in
and
mov
sub
cli
cltd
cmp
dec
dec
push
out
jg
push
aas
cmp
mov
add
add
add
mov
jg
lcall
mov
repz
add
mov
inc
push
push
push
iret
lret
pushf
ds
xchg
das
fdivl
cmp
xchg
sahf
mov
and
imul
mov
fstp
xor
push
fistl
mov
sbb
pop
ja
mov
add
sbb
int
bound
sub
mov
arpl
int3
mov
dec
sbb
clc
inc
or
cmc
xchg
pop
test
and
out
aas
lods
fcomip
in
sub
inc
pop
ljmp
imul
push
les
jns
and
ss
lods
xor
out
sahf
aad
and
add
mov
jg
es
xlat
jb
sub
pop
dec
or
insb
pop
or
push
or
adc
arpl
dec
rcll
ret
imul
push
cmp
pop
lock
inc
lods
jmp
xchg
sti
insl
fbstp
fdivr
notl
xchg
jmp
out
push
sub
pop
call
and
std
out
jp
scas
test
cmpsb
decl
or
sbb
xor
mov
jecxz,pn
fs
das
xchg
inc
push
int
sbb
inc
lret
adc
adc
sahf
les
xchg
stos
fiadds
xchg
and
aas
jp
in
dec
push
popa
hlt
sub
push
jl
add
add
sbb
mov
inc
mov
xchg
xlat
cmpsl
lcall
push
sbb
inc
pop
sbb
or
and
je
data16
mov
sbb
loope
cld
cli
push
pop
push
sub
push
and
xchg
push
mov
stos
fdivs
jecxz
jp
cmpsb
or
lret
popf
ljmp
or
sbb
or
mov
inc
outsb
repz
adc
and
rolb
push
les
mov
shll
push
pop
adc
repz
add
jmp
mov
inc
mov
pop
inc
push
stos
xchg
leave
sub
sub
xor
xor
or
jle
mov
mov
imul
cmpsl
imul
inc
sub
ljmp
push
es
icebp
sub
jb
add
lcall
incl
aam
mov
daa
mov
pop
mov
mov
into
mov
data16
aad
jge
mov
movsl
jb
mov
ja
cmc
popf
popf
jmp
or
add
add
cmpsl
call
pop
icebp
pop
sub
aad
cmp
mov
jmp
inc
mov
mov
pop
inc
sarl
mov
ljmp
scas
jb
mov
push
dec
int
add
sub
in
mov
jne
in
push
lret
imul
daa
and
pop
xchg
push
cmpsb
cmp
movsl
or
cltd
pop
fstps
mov
pop
xchg
sti
gs
lret
mov
repnz
sub
enter
sbb
aas
stos
xor
push
idivb
sub
inc
adc
lret
fbstp
enter
out
xor
sbb
mov
lods
popf
idivl
mov
jmp
lods
xlat
jo
lods
xchg
lret
addr16
push
fists
pop
pop
dec
inc
lahf
ljmp
cs
loope
sar
aam
pusha
xchg
jmp
or
mov
mov
aaa
cvtps2pi
lods
orb
mov
dec
pop
xor
in
shr
in
insl
xor
gs
pop
aam
idivb
es
mov
xor
int
ffreep
inc
dec
cli
in
mov
mov
enter
jmp
fsts
jo
dec
sub
pop
in
out
mov
mov
jle
das
fs
test
insb
lret
pop
push
and
out
icebp
and
sbb
push
ds
mov
lods
xlat
mov
subb
add
xchg
push
push
out
lahf
pop
push
mov
cmp
out
sbb
lahf
push
mov
mov
sahf
sbb
xchg
jmp
je
pop
mov
out
mov
shrb
addr16
push
nop
jmp
xchg
or
ljmp
out
xor
fildll
mov
or
bound
push
xor
in
gs
sub
cmp
mov
cmpsb
call
xor
jne
stos
fbstp
test
add
cmp
pop
sub
stos
jns
dec
sub
dec
or
cwtl
jno
add
repz
add
cs
repz
mov
push
inc
cmp
pop
inc
ss
ror
subl
mov
mov
imul
inc
sbb
das
xlat
add
jge
inc
mov
jmp
fs
pop
jecxz
inc
inc
aam
add
movsb
lcall
pop
and
or
ret
inc
rcr
jns
and
push
push
dec
and
in
cmp
fcompl
sub
outsl
lret
test
mov
fisubs
pop
addr16
orb
push
jne
xchg
out
call
push
pop
or
mov
or
push
clts
rorl
push
sub
mov
cld
mov
cli
call
xlat
les
int
fs
fisttpl
mov
jnp
nop
adc
mov
dec
addr16
pushf
push
nop
js
xor
decl
aad
subl
dec
cvtps2pd
enter
sbb
inc
lahf
aam
cmp
test
mov
push
jbe
in
stc
orb
in
cmp
push
adc
mov
mov
popa
sub
add
mul
daa
fsubl
and
insb
jnp
dec
mov
push
idiv
sub
les
mov
lock
and
mull
shrb
add
in
gs
mov
or
adcb
out
ret
aam
fldl
out
pushf
out
imul
dec
mov
in
lods
nop
pushf
xchg
call
mov
out
fwait
xchg
add
outsl
add
xchg
idivl
lods
dec
sar
pop
test
inc
push
xor
jne
xor
cmp
divl
jge
aaa
mov
and
repz
popf
sub
dec
inc
or
fdivrs
jae
aaa
pop
ds
cmp
in
das
cli
dec
ljmp
mov
arpl
pop
in
inc
xchg
add
je
xchg
add
dec
mov
push
xchg
sbbb
xchg
cmp
into
pop
cmpsb
scas
sarb
popf
rcrb
stos
pop
and
and
push
dec
mov
ret
xchg
out
adc
filds
fmull
mov
xor
lods
ss
mov
adc
mov
in
arpl
les
or
push
dec
fcmovb
lret
mov
push
popf
lods
xor
jl
push
add
call
adc
or
or
pop
jnp
pop
std
iret
ja
std
and
fs
xor
fyl2xp1
bound
mov
and
xor
scas
movsl
mov
out
inc
cmovl
inc
aaa
sbb
dec
dec
pop
insl
inc
std
cmp
mov
dec
pop
clc
jp
cmc
xchg
sti
inc
push
in
xchg
notl
or
pop
adc
push
sahf
add
push
pop
stos
push
nop
mov
jle
ljmp
pop
xchg
sarb
xor
push
shrb
idivl
in
mov
popa
push
ljmp
xchg
inc
jns
test
outsl
sti
nop
jbe
and
fcompl
mov
aad
push
xor
lret
pop
stos
jo
movb
stos
mov
ja
mov
push
repnz
lods
or
adc
aad
adc
jns
ja
lods
jbe
fldcw
pop
jns
scas
or
shll
jle
push
add
mov
repnz
lock
out
mov
or
outsb
push
and
pop
inc
mov
mov
negl
lods
ljmp
jae
adc
lret
and
out
xchg
jae
faddp
rclb
jae
xor
add
dec
imul
cmp
aas
or
inc
pop
jo
and
fnstsw
movsb
push
fdivrp
test
xor
mov
mov
jae
mov
pop
mov
pop
std
inc
cmp
fwait
subb
mov
dec
cltd
shll
fists
jecxz
out
aaa
ds
fbld
into
xchg
or
aam
lock
addr16
sarb
lock
aaa
ficompl
mul
inc
add
jo
dec
scas
sti
adc
push
mov
pop
inc
arpl
mov
jecxz
je
pop
shr
mov
jp
sahf
clc
add
xchg
loopne
sbb
pop
cmp
jns
les
adc
inc
dec
pusha
sub
dec
out
test
setb
add
add
lret
dec
jge
xchg
outsl
jge
lcall
add
repz
add
xchg
xchg
fsubrs
and
fdivrs
sahf
insl
lds
iret
or
mov
mov
in
push
pusha
ret
notb
jo
jae
ficoms
es
loopne
jecxz
sub
xchg
js
pusha
fiaddl
insb
lock
rcrl
fldt
decl
and
pushf
in
mov
inc
and
adc
cmc
popa
lret
pop
cmp
repz
repnz
or
mov
sbb
adc
mov
adc
loope
sbb
pushl
fwait
leave
popa
sub
dec
jns
sbb
shr
jg
sub
addr16
leave
dec
int
test
test
pop
mov
lret
outsb
popa
xchg
daa
jge
repnz
call
inc
dec
out
pop
jge
sbb
test
lods
mov
mov
icebp
lds
es
inc
xor
pop
out
xchg
xor
inc
in
add
xchg
sub
shll
sbb
inc
push
mov
dec
mov
std
xchg
pop
or
cmp
or
mov
push
push
enter
and
popa
sub
push
or
xor
add
cmpsb
xlat
sbb
int3
xor
std
aas
cmpsl
addr16
imul
mov
mov
jle
pop
pop
movsl
sti
cmp
idivl
int
jecxz
mov
aad
pop
fimuls
pop
mov
pop
or
pop
add
sub
xchg
xlat
pop
ja
adcl
sbb
lds
jp
mov
data16
jle
sbb
roll
sbbb
imul
cmc
js
mov
push
int3
daa
lds
mov
push
mov
adc
xchg
inc
rolb
ret
std
mov
dec
mov
push
adc
incb
rcrl
out
xchg
outsb
std
jno
sbb
push
scas
cmp
jge
fmul
cmc
rcrb
in
cld
and
nop
dec
movsl
add
sub
cmp
repz
fs
ljmp
mov
and
nop
aaa
lods
jg
int
sbb
aam
sbb
xchg
jo
mov
jo
and
leave
add
mov
gs
fsubrl
sub
negl
sub
push
cli
jne
ljmp
gs
fidivs
mov
adc
xchg
sbb
or
jbe
out
cmc
icebp
ja
xor
jb
loopne
aad
inc
ret
pop
in
mov
in
je
bound
stos
loope
addr16
add
out
pop
bound
sarb
mov
inc
add
push
into
cwtl
jl
fmul
daa
add
mov
subb
lods
sub
mov
mov
add
cs
add
fadd
fbld
hlt
fdiv
lock
jb
or
mov
xorb
xor
notl
sbbl
add
adc
jle
push
shlb
lods
jbe
cmp
insl
cmp
cmp
push
fmuls
js
xchg
sti
inc
cmpsb
lea
xor
mov
lock
or
mov
mov
sub
pop
mov
xchg
sbb
mov
xor
mov
adc
filds
add
xchg
stos
sbb
fstl
lock
mov
sub
sbb
icebp
pop
push
dec
aam
dec
xlat
loope
xor
lods
sub
fsubrs
sti
pop
sbb
push
xchg
lock
inc
insb
test
push
xor
insb
cmp
or
push
sub
mov
stos
cld
and
push
and
xor
rcll
clc
xlat
inc
xorl
push
lock
mov
aam
je
xor
mov
mov
jmp
pop
inc
jns
dec
mov
fmuls
mov
shl
mov
inc
add
xchg
inc
mov
into
adc
in
lahf
repz
pop
or
lret
or
test
lods
xchg
xchg
fcmovbe
or
xchg
movsb
cmp
push
shlb
outsl
mov
mov
inc
xchg
ss
daa
repz
pop
testl
xchg
adc
test
out
test
xlat
aas
cmp
push
popf
mov
mov
lods
dec
cld
scas
jb
adc
test
cwtl
lea
jne
lahf
ljmp
xor
arpl
mov
stos
pop
adc
add
add
xlat
hlt
push
ljmp
sub
cmp
push
movsb
add
repz
add
jmp
xchg
pop
or
lods
imul
xchg
lahf
aad
shlb
push
pop
outsl
loope
icebp
test
mov
lods
int
cwtl
lcall
mov
jbe
aas
mov
mov
inc
jno
pop
jmp
xchg
arpl
in
or
lods
jg
out
cli
fcomp
jnp
sub
test
insb
add
inc
jecxz
mov
push
or
jns
clc
clc
push
dec
negb
std
jl
lock
mull
jno
pop
mov
mov
clc
sbb
cmp
add
mov
xchg
sbb
sub
inc
jmp
mov
aad
mov
mov
imul
mov
leave
and
lcall
mov
xchg
int3
dec
or
xor
jno
aam
jp
jb
mov
enter
adc
dec
loope
sbb
push
outsb
sub
push
cwtl
lret
mov
aas
ja,pt
notb
icebp
adc
stos
lret
outsb
sub
hlt
icebp
jns
stos
dec
popa
push
hlt
push
sete
mov
xchg
cld
dec
std
outsb
in
jmp
pop
dec
dec
and
stc
and
not
std
adc
lea
mov
mov
fiaddl
add
popf
cmc
ds
pop
xchg
xor
lods
xchg
cli
jo
fistl
or
imul
int3
pop
dec
pop
add
mov
cmp
test
jp
sub
and
stos
push
mov
shrb
adc
gs
sbb
mov
mov
cmp
adc
push
jo
jecxz
das
and
xor
lret
loope
mov
and
rolb
scas
mov
push
movsb
insl
xchg
aas
pop
cltd
sub
pop
daa
rorl
adc
mov
mov
bound
lods
mov
sub
fiadds
dec
out
push
adc
jmp
stos
cmp
mov
pop
sbb
xchg
std
jg
pop
and
push
clc
fninit
cmpsb
ret
sbb
xchg
es
cmp
jg
loop
clc
out
fcomi
cmc
xor
out
ja
cmpl
cmp
repnz
scas
pop
out
repz
jnp
adc
dec
div
jge
rolb
push
cltd
in
ss
rcrl
cmpsl
jb
movb
mov
ret
xchg
ljmp
xor
scas
fcomps
sbb
sbb
arpl
mov
or
xor
divb
mov
jae
xchg
mov
aad
and
fwait
insl
loopne
mov
out
lods
pop
mov
pop
mov
or
cld
push
sub
rorl
pop
and
adc
lods
xor
mov
fimuls
mov
in
out
jecxz
dec
jno
cltd
dec
mov
push
jle
sub
and
dec
stos
sbb
fwait
or
inc
fistps
into
cmp
imul
stos
mov
sbb
fstps
xor
pop
inc
adc
loope
cmc
xor
sbb
mov
jecxz
adc
pop
cmp
xchg
mov
xor
ficompl
lock
dec
shrl
push
mov
gs
mov
dec
test
jns
in
jnp
mov
nop
inc
lret
or
out
inc
push
jno
pop
mov
stos
call
rcl
or
dec
mov
outsl
xchg
into
pop
movb
inc
push
inc
dec
cmp
xor
dec
scas
aad
insl
sub
roll
xchg
inc
sbb
out
sub
sbb
add
ret
lds
out
pop
ficomps
xor
mov
push
cmpsl
rdpmc
addr16
push
sub
imul
stos
int
sbb
sub
data16
decb
inc
enter
xlat
xor
jo
add
and
test
cmp
mov
cmp
push
je
and
rcrl
test
insb
inc
lods
push
clc
and
jb
roll
mov
inc
sarb
and
mov
sbb
mov
dec
fsubs
call
cld
lret
dec
and
jmp
repz
mov
push
xchg
mov
xor
or
jg
push
ds
gs
jle
xchg
call
and
add
pop
xor
pusha
push
mov
adc
movsb
movsl
imul
rol
xor
push
ret
xchg
and
add
add
pop
test
aam
lahf
pop
dec
sar
adc
cmpsl
ljmp
add
push
add
flds
loope
xlat
orl
cmp
xchg
movl
lcall
loopne
std
mov
clc
loope
pop
ret
jbe
outsl
fisttps
mov
or
add
push
xchg
pop
outsb
mov
xor
mov
test
jnp
enter
add
jge
jecxz
pop
lret
mov
andb
xchg
cmp
xor
mov
xchg
or
popa
les
xchg
adcb
sub
and
pop
add
popf
ficoms
fstl
sysret
jns
jbe
xor
in
and
aad
or
mov
jp
or
push
in
cmp
cmp
lahf
jge
lods
lods
loop
ltr
dec
or
out
insl
popa
iret
mov
icebp
sbb
sbb
loope
sbb
loope
cltd
scas
xchg
aam
jo
or
mov
push
ja
adc
loopne
cmp
inc
enter
mov
push
push
lds
jae
adc
cmp
inc
pop
xchg
ret
jl
xor
mov
into
aaa
out
mov
adc
xor
mov
jecxz
lcall
inc
aam
mov
addb
adc
out
stos
cmp
push
jnp
iret
int
lahf
lds
jge,pn
mov
enter
dec
dec
and
mov
adc
jmp
sbb
push
pop
mov
ja
inc
lcall
lods
jl
mov
in
rclb
popf
push
inc
call
loope
pop
ficomps
lret
pushl
cmp
dec
mov
push
and
negl
add
aad
outsb
in
mov
gs
ss
je
sarb
cwtl
stos
pusha
dec
add
aad
mov
cmp
mov
push
sbb
lods
xchg
arpl
push
imul
mov
leave
and
dec
cs
clc
mov
outsl
dec
mov
mov
insl
ljmp
sub
cmp
dec
repnz
rol
stos
addr16
out
add
sbb
addl
jae
sahf
loopne
mov
jge
into
xchg
jne
xchg
js
xchg
adc
adc
popa
fdivl
lods
in
test
std
sub
jbe
mov
lcall
pop
push
inc
inc
rolb
negl
inc
ljmp
xchg
pop
in
int
inc
shrl
mov
mov
lcall
push
dec
push
mov
lcall
xor
add
and
ret
mov
lahf
lcall
push
inc
xchg
stos
xchg
ss
inc
movsb
les
loopne
inc
mov
test
frstpm(287
xchg
out
lods
repz
flds
xchg
pop
mov
imul
cmpsl
aam
pop
ds
push
les
jle
mov
jns
pop
shrb
outsb
or
icebp
xchg
ljmp
mov
push
sbb
out
mov
in
dec
out
cmc
popf
ljmp
xor
push
xchg
jo
mov
pop
push
cmp
and
js
std
loopne
mov
outsl
shrl
sbbl
gs
lahf
jmp
pop
pusha
push
pop
sbb
stc
outsl
jle
sbb
fisttpll
sub
xchg
pop
cmpb
add
inc
xchg
or
insb
lcall
sub
add
xchg
and
add
and
cmp
sub
popa
mov
xchg
pop
jae
xchg
out
push
out
xor
mov
inc
adc
test
ret
fnstcw
ficoms
shll
call
lret
mov
push
das
clc
insl
mov
cmp
sbb
sbb
sub
fisttpll
lods
outsl
or
cli
inc
xchg
aam
les
cs
insl
outsb
lds
int3
outsb
js
push
mov
enter
mov
push
in
lds
scas
inc
fcoml
in
in
pop
fwait
rcll
loopne
pusha
fs
mov
icebp
add
lcall
setbe
adc
nop
xchg
lret
xor
jge
fstps
stos
das
pop
dec
repnz
notl
lret
ljmp
out
push
bound
int3
xor
cmpl
or
xlat
out
cmpsb
mov
jb
cmp
cli
mov
cmp
mov
pop
mov
arpl
and
inc
or
lahf
aad
add
and
xor
sti
js
and
add
add
dec
mov
lret
mov
sub
pop
cmp
add
add
mov
orl
xor
arpl
stos
faddl
ljmp
xor
xor
arpl
int3
movsl
pop
out
adc
sub
dec
and
cltd
xchg
dec
inc
inc
aad
sub
cmpsl
pop
inc
cli
jl
pop
ss
mov
cmp
popf
cmp
cmp
clc
pop
std
leave
xchg
pop
clc
or
ret
push
movsl
mov
imul
ficomps
jnp
jbe
mov
mov
negl
push
xor
xchg
stos
ja
sbb
mov
mov
fildl
cmp
fsubrs
mov
push
arpl
xchg
inc
test
movl
mulb
loopne
adc
and
xchg
inc
xor
int3
mov
adc
fisubrl
orl
cmp
sbb
test
and
scas
inc
xor
jno
xchg
rcl
sbb
stos
iretw
add
out
les
movsl
jecxz
mov
cmp
rclb
xor
push
jae
adc
xchg
xor
pop
add
leave
sti
mov
cmp
test
mov
xlat
cmpsb
loopne
xchg
pop
xchg
mov
out
insb
popf
scas
pop
test
or
sub
repnz
lods
inc
or
mov
mov
cld
mov
xor
or
jecxz
cmp
sbb
dec
fsubrs
into
cmp
push
in
punpcklwd
fcoml
jmp
sbb
xchg
stos
jle
fcompl
jl
insl
sub
scas
pop
push
loop
mov
jecxz
mov
fcmovu
sbb
pop
les
add
mov
xchg
mov
sbb
lds
aaa
icebp
ret
je
rep
adc
int3
sub
add
not
push
pop
mov
das
lret
xor
sbb
mov
mov
xor
mov
xlat
xor
pop
fwait
push
out
pop
pop
popf
aas
fucomi
and
loope
xchg
jno
aam
dec
outsl
and
testl
out
iret
and
adc
cwtl
push
push
jae
inc
xor
jb
rol
mov
cmp
int
aam
cli
cmc
pop
xor
imulb
push
inc
fmull
push
shlb
xor
popl
pop
cmpsb
adc
dec
mov
mov
loope
jecxz
cmpb
roll
out
nop
dec
arpl
aas
mov
push
xorl
mov
loop
cmp
ficompl
and
std
mov
ja
mov
loopne
aas
xor
fsubl
imul
push
in
mov
fldenv
ljmp
jb
mov
outsl
pop
pop
leave
cld
inc
testl
pusha
or
mov
cmp
mov
je
icebp
cltd
in
lret
mov
subb
and
dec
cltd
insb
xor
inc
fs
jo
and
bswap
mov
lock
popf
mov
test
jg
jl
inc
sub
dec
stos
mov
imul
jb
addr16
js
mov
nop
pop
adc
ljmp
jnp
mov
jnp
fistpll
test
ljmp
rcll
leave
adc
es
lds
cmpsl
leave
in
das
sbb
cmp
mov
call
mov
popa
mov
scas
jecxz
lods
test
xchg
adc
frndint
movsb
cld
inc
push
iret
sbb
mov
scas
mov
inc
test
loopne
xor
mov
push
repnz
shl
loopne
cmpsb
ror
andb
and
sar
sub
xchg
rclb
push
xor
fnstcw
mov
sbb
add
inc
xor
sub
inc
lea
nop
dec
add
dec
lods
inc
in
js
sarb
xchg
mov
mov
mov
cmp
sub
mov
xchg
pusha
cmc
mov
xchg
mov
outsl
or
rorl
cmp
divl
fwait
imul
or
in
loop
cwtl
mov
xor
sub
andl
sub
add
push
mov
sbb
mov
jg
ljmp
gs
pop
sbb
sbb
rcrl
bound
orl
adc
sahf
pop
sbb
imul
push
sbb
xor
cld
mov
cmp
les
add
xor
jmp
and
xchg
aaa
popl
add
add
inc
xchg
daa
cmp
mov
and
xor
add
es
ja
jg
adc
sbb
and
stos
fisubl
mov
adc
lret
jne
xor
xchg
jnp
popa
xchg
in
or
jle
push
in
in
push
pop
maskmovq
imull
pusha
jg
rclb
mov
pop
push
jp
mov
dec
xlat
aaa
dec
cmp
push
mov
jmp
mov
dec
xor
mov
loopne
ds
jmp
jbe
lods
cmp
dec
xchg
test
mov
mov
aas
dec
push
add
adc
lock
mov
std
decb
push
mov
inc
ret
loope
sub
mov
push
xchg
in
rorb
inc
inc
mov
jbe
cmpsb
xchg
idivb
mov
mov
sub
or
nop
fcmovb
fs
mov
stc
cld
mov
imul
jge
cli
adc
push
inc
in
push
xchg
pop
xchg
out
repnz
jg
scas
add
fwait
mov
xchg
mov
cmc
in
les
push
jl
neg
test
or
push
add
dec
mov
mov
pop
dec
mov
lea
into
mov
jg
mov
sbbl
xchg
mov
mov
lods
mov
jmp
das
in
or
aaa
cmc
jecxz
das
arpl
repz
cmpsb
mov
jo
add
dec
or
mov
int3
add
adcl
push
dec
push
cmc
notl
mov
mov
mov
into
inc
xor
gs
scas
stos
cltd
aad
in
mov
je
jb
fldt
ljmp
dec
inc
sti
jae
pop
lahf
sar
xor
xor
adc
outsl
fwait
push
cmp
mov
mov
sbb
cmpsb
sbb
loop
or
cs
xor
mov
push
jmp
pop
inc
push
or
pop
xchg
popa
cmp
jl
xor
jae
mov
sbb
push
xor
adc
cmp
sub
orb
popa
push
cmp
sub
and
cwtl
lea
add
movsl
bound
cmp
cmp
cmp
add
cmc
lds
push
out
hlt
in
push
sbb
sub
fidivrs
jne
mov
push
push
pop
test
lods
loope
jmp
jns
fsubs
mov
adc
pusha
add
ja
dec
inc
mov
pop
test
call
out
adc
sub
in
and
imul
or
xchg
pop
lret
cld
in
call
mov
and
inc
std
or
xchg
mov
scas
mov
cli
add
in
lds
push
pusha
dec
imul
lea
jb
inc
mov
and
xor
sbb
fcmovne
and
outsb
in
and
roll
push
inc
outsb
insl
call
mov
lret
stos
xchg
xchg
sahf
test
ret
mov
in
mov
inc
cmp
jno
test
add
in
sti
shlb
scas
ret
mov
rolb
adcb
les
fdivrs
jp
and
imul
lods
pushf
rcrl
push
dec
dec
xchg
movsl
sbb
pop
lret
aas
pop
push
popl
dec
in
js
test
xor
cmpsb
dec
test
inc
dec
fs
dec
inc
fcomps
arpl
xor
lock
out
arpl
dec
int
fwait
mov
lods
push
gs
pop
imul
push
xchg
jbe
fcoms
addr16
push
mov
cmpsl
call
push
cmpsl
dec
imul
or
stos
sahf
xchg
mov
mov
pop
adc
adc
vshufps
sbb
xorb
leave
dec
out
mov
lret
lahf
and
bound
push
dec
rol
in
call
sbb
mov
in
inc
lods
push
mov
and
sbb
bound
sahf
pop
mov
mov
je
sub
and
call
adc
mov
ficoml
jns
aaa
mov
xor
mov
sbb
imul
aaa
sbb
mov
adc
pop
mov
push
aas
mov
jmp
aam
inc
out
bound
inc
adc
data16
test
imul
xchg
repz
inc
repnz
pop
xlat
fwait
mov
movsl
in
xchg
sub
roll
and
cld
cmp
add
add
add
clc
data16
mov
out
fcmovu
hlt
adc
and
add
or
cmpl
mov
into
pop
pop
bound
iret
xchg
scas
or
cmp
push
ja
imul
mov
pop
into
push
sbb
loopne
or
stos
adc
outsb
mov
fistl
or
fnsave
and
out
mov
movsb
push
push
faddl
aas
inc
idiv
inc
nop
push
inc
mov
cwtl
xchg
je
pusha
add
bnd
xchg
lds
into
clc
push
loopne
shl
into
cli
mov
in
push
repnz
repz
stos
sbb
or
movsl
movsl
xor
cmp
dec
test
clc
dec
loop
push
test
inc
cmpsb
add
nop
popf
rcll
in
shll
call
mov
inc
mov
lds
push
shll
cmp
aas
hlt
aaa
cmp
gs
cmp
lret
xlat
fisttps
sbb
out
pop
cmp
ja
ljmp
scas
cld
addr16
xor
outsb
and
and
jp
in
mov
pop
lahf
push
aam
stc
mov
sub
dec
gs
add
jp
jns
and
popf
inc
sub
push
or
xchg
or
pop
push
inc
inc
insl
mov
mov
jp
sbb
jae
loope
in
jmp
jge
insb
scas
insb
in
and
push
shl
adc
fdivrl
mov
in
mov
loop
inc
xor
rclb
lret
aad
add
in
inc
mov
insb
data16
shll
outsl
mov
cld
sub
mov
sbbl
test
xchg
mov
xorb
ds
cmpsb
or
mov
add
cmp
repnz
pop
scas
adc
pop
shll
push
int
dec
enter
mov
adc
lods
mov
fstps
push
jecxz
dec
mov
cmpxchg8b
mov
sbb
xchg
sub
ss
sbb
pop
pop
lcall
jg
jmp
sbb
push
repz
mul
mov
or
adc
mov
sbb
sub
dec
fists
sub
test
mov
inc
push
xor
adc
xor
adc
lret
dec
addr16
xor
mov
lock
fsubr
fidivrl
scas
sahf
cld
xchg
gs
cltd
jge
mov
mov
sub
pop
in
dec
add
sub
aad
xorb
pushf
mov
push
sbb
sbb
outsb
int
arpl
cmp
mov
xchg
inc
add
add
in
ffree
dec
or
hlt
inc
adc
in
pop
sbb
cmp
shll
shl
out
add
cmp
xchg
scas
mov
test
sti
lods
pop
enter
inc
cltd
mov
jge
fwait
ret
mov
mov
push
sbbl
push
or
stos
mov
jns
aas
insl
arpl
sbbb
mov
adc
into
cmc
repnz
mov
cmp
scas
daa
mov
rcr
add
xchg
adc
or
xor
inc
mov
push
ret
fnstsw
dec
fsubrs
int3
test
std
fdivp
adc
fs
jge
xlat
lock
shlb
and
xchg
fidivrl
mov
cmp
fs
je
inc
cmc
mov
cmp
inc
call
test
shlb
sbb
fucompp
sti
iret
sbbb
push
lahf
jecxz
add
fstl
mov
jle
fsubrl
jg
cmpsb
inc
ds
push
ss
ja
cmp
or
push
pop
ljmp
xor
hlt
xchg
mov
pop
sub
push
xor
cmpl
sti
clc
cli
pop
nop
pop
das
pop
call
cmp
xor
loope
xchg
idivl
adc
mov
xchg
cmp
es
mov
and
leave
ret
imul
jae
fistps
pushf
pop
jp
scas
js
insb
test
jae
fstpl
pop
push
ja
dec
lods
test
int
in
pop
insb
aad
xor
cs
xchg
jb
pusha
ss
dec
or
movsl
iret
jno
jb
insl
mov
xor
std
ret
mov
mov
arpl
fsub
mov
cmc
scas
mov
add
imul
in
jmp
cmp
jl
mov
mov
push
dec
dec
xchg
cmp
sahf
adc
add
add
add
iret
cmp
outsl
jecxz
push
insl
mov
mov
add
cmp
push
or
mov
push
mov
out
add
sarb
add
and
mov
das
xchg
test
inc
cli
dec
and
xor
aam
and
jge
test
add
sub
jo
mov
pop
ja
pop
mov
filds
sti
cmp
cld
jge
inc
rcll
cmpl
das
inc
int3
dec
sbb
xchg
mov
ret
imul
jge
aam
xchg
stos
lret
vpunpcklbw
adc
lods
gs
jns
aaa
leave
stos
test
enter
fcompl
xor
iret
pop
mov
stc
pop
js
cwtl
adc
cmp
int
pop
pop
mov
out
xchg
sbb
xchg
movsb
cwtl
sbbl
cmp
in
sub
adc
cmp
mov
mov
pop
mov
leave
mov
xchg
fdivs
test
cld
clc
or
or
js
push
or
cmp
cmc
cmc
test
fistl
mov
in
ljmp
jle
mov
psadbw
or
mov
jle
arpl
mov
cmp
in
add
jne
fcmovnu
mov
jp
scas
inc
sbb
ds
sbb
into
iret
in
stc
bound
push
adc
xchg
xchg
movsb
sar
mov
fmuls
mov
cmpsl
lds
je
lahf
or
movsl
sub
jmp
pop
dec
cld
daa
or
cmp
out
sub
adc
jo
inc
pusha
mov
or
xorl
pop
sub
sub
and
into
inc
mov
mov
push
add
or
cmpsb
leave
push
aam
jb
mov
out
sbb
mov
push
int3
push
inc
ret
imul
pop
in
mov
pop
inc
aas
sub
into
daa
in
xchg
pop
sub
jmp
ret
lahf
adcb
out
or
fwait
xchg
cld
add
loop
roll
cld
fistpll
dec
xchg
ds
sahf
dec
stc
iret
pop
arpl
popf
xor
mov
jnp
xchg
sbb
jno
call
or
lahf
test
dec
test
and
adc
loop
mov
mov
adc
pop
push
jmp
shrb
xchg
sub
hlt
test
adc
mov
push
jo
xchg
inc
sub
mov
ret
inc
jp
jp
push
push
cmp
fidivs
xor
loop
add
push
in
popf
or
cltd
mov
inc
ss
cltd
xchg
into
mov
lcall
fisttpl
mul
bound
je
fmull
inc
icebp
xchg
push
fildl
ljmp
adc
cmp
aad
cltd
and
mov
pop
push
test
and
or
loop
add
lods
jae
sbb
dec
cmpsb
cmp
mov
adc
into
xchg
mov
fxch
xor
in
in
fldenv
or
loopne
push
aam
or
shl
sar
lods
pushl
jg
pop
and
sti
push
cmpsl
dec
insb
sbb
mov
pushf
aad
or
pop
aas
or
bound
jb
sbb
je
addr16
popa
cmc
push
jmp
out
push
popf
sbb
scas
pop
pop
scas
jno
cmp
sti
dec
add
cmp
inc
push
rorb
sti
scas
arpl
cmp
sub
rcr
int3
out
sbb
cmc
nop
loope
push
mov
mov
dec
inc
mov
and
iret
push
pushf
cmc
adc
cmpl
js
fstpl
rcll
loope
push
sbb
and
jno
outsb
in
out
add
int3
je
faddl
sbb
fnstsw
test
jecxz
xchg
movsb
bound
dec
or
pop
pop
outsl
sub
xor
mov
push
in
cmp
jbe
in
dec
add
sub
fisubl
mov
lods
sub
and
mov
push
lods
clc
xchg
or
call
xchg
mov
cmc
jge
jbe
cld
push
pop
jmp
pop
mov
mov
mov
inc
lods
pop
xchg
mov
or
imul
popf
sub
jge
outsl
std
fsubrl
xor
and
pop
lds
ds
or
insb
add
mov
pop
mov
or
out
adc
aad
ja
add
pop
mov
imul
mov
lahf
cmpsb
pusha
inc
sub
inc
in
add
add
adc
push
std
and
jns
push
xchg
or
add
repz
add
out
es
cmp
dec
jge
mov
mov
sub
jp
jge
add
pop
cli
adc
pop
mov
sub
pop
dec
adc
mov
xor
in
enter
push
cs
mull
das
or
movsl
aam
adc
aad
cmpsl
mov
mov
dec
fwait
aam
out
adc
clc
ret
jne
push
stos
push
add
nop
aam
adc
fbstp
mov
xor
jp
xchg
and
imul
pop
outsb
rcrb
pop
and
inc
sbb
int
dec
iret
stos
adc
dec
mov
jbe
dec
cmp
enter
ret
mov
and
out
xchg
jle
mov
inc
mov
or
push
push
xchg
ja
xlat
inc
jae,pt
addr16
loope
shr
inc
rcr
rolb
pop
jo
or
mov
aad
sahf
hlt
es
insl
in
pop
lock
or
xchg
cs
je
xchg
mov
mov
lret
add
outsb
xor
xchg
notrack
or
in
ljmp
sub
mov
cmp
rclb
pop
jne
aam
or
mov
and
sub
mov
insl
ss
sahf
pop
es
pop
lret
pop
push
cmp
cmc
jbe
lods
xor
jl
idivb
mov
push
iret
inc
inc
cmp
jbe
and
shll
lcall
clc
or
es
or
xor
or
fwait
sub
out
jmp
in
sub
pop
jle
test
aas
mov
js
popa
aam
mov
dec
mov
in
xor
mov
imul
push
outsb
cmp
xchg
dec
mov
ret
rcrl
jg
pop
dec
inc
mov
das
lds
stos
das
and
sub
mov
xchg
sub
jns
cmp
les
sbb
fs
je
mov
test
pop
mov
xor
or
mov
rol
mov
cwtl
nop
sub
and
mov
stos
rcr
or
rcl
ja
mov
mov
ficoml
orb
out
scas
rcl
sbb
ror
rol
in
xor
push
pop
test
push
or
insb
xchg
xchg
cli
lock
jnp
add
inc
stos
daa
aas
jmp
and
xchg
mov
shll
push
inc
xor
enter
mov
add
lock
mov
cmc
clc
hlt
push
ja
cmc
inc
sub
xor
fnstenv
lahf
ficoms
mov
push
dec
out
ss
ds
inc
jg
sub
mov
or
ret
clc
repnz
es
ja
or
ljmp
mov
adc
dec
cmp
add
mov
ja
push
xor
or
pop
mov
pop
and
sbb
jno
dec
jle
clc
sbb
push
test
push
inc
icebp
enter
dec
nop
sbb
push
fs
pushf
lret
sbb
mov
pop
nop
lods
out
bound
or
pushf
pop
add
sub
popf
int3
sbb
inc
mov
mov
mov
inc
cli
aam
mov
push
gs
into
push
pusha
movsl
cli
out
xor
rcll
mov
adc
insl
andl
pop
cltd
mov
xlat
mov
and
and
sub
xchg
jecxz
movsb
mov
std
dec
jmp
push
mov
mov
mov
cmp
xchg
scas
aaa
push
mov
push
push
push
clc
jne
rorl
cwtl
adc
mov
adc
push
adc
mov
lods
xchg
add
xchg
out
ss
test
ss
fwait
adc
push
add
jmp
loop
leave
aas
sti
sarb
dec
or
testb
cmp
out
cmp
mov
add
cmp
cld
movsl
push
aam
push
shlb
lods
push
shl
icebp
imull
mov
pop
mov
dec
scas
mov
push
daa
test
rolb
cmp
les
fwait
push
lock
out
aad
xor
cmc
dec
iret
pushf
xor
out
mov
inc
push
in
mov
lcall
pop
push
dec
jge
jnp
adc
test
sbb
pop
jae
pop
sti
push
pop
je
into
mov
jg
mov
lea
xor
add
add
addb
bswap
test
dec
or
inc
xchg
cld
cld
movb
repz
add
clc
mov
shll
add
cmp
jno
mov
loop
mov
icebp
xchg
sub
pop
aas
push
adc
mov
sbb
jo
rorb
subb
cmpsb
sahf
jnp
enter
repnz
push
shll
push
sti
adc
into
or
loopne
lahf
jge
and
sahf
imul
push
xor
sbb
lret
in
sahf
jb
icebp
mov
sbb
mov
fisubrl
lods
imul
inc
stc
stos
pushf
insb
or
mov
pop
or
inc
stos
in
rolb
das
dec
int
mov
sbb
sub
pop
shrb
movsl
gs
or
clc
sbb
push
xchg
jecxz
or
push
pop
fwait
les
fcomps
out
cmp
xlat
mov
sbb
push
ss
sub
add
sub
pushf
mov
sbb
stos
jg
inc
test
ss
sbb
cwtl
das
loop
dec
cwtl
nop
lret
inc
clc
fisubrl
test
xor
pop
and
xor
shll
mov
adcb
cmp
fs
xor
push
dec
inc
xor
scas
dec
out
xchg
xor
xor
in
sub
inc
jbe
scas
inc
daa
and
iret
mov
cmpsb
fxtract
sahf
mov
mov
not
push
shll
xor
pop
jl
ss
in
cmc
pop
xchg
jecxz
push
jp
and
cs
xchg
lock
repnz
in
dec
xchg
imul
cltd
mov
cmp
loop
daa
fstps
loop
cmc
subl
pop
sbb
sarl
sub
adc
add
pop
jbe
loope
inc
int
cmpb
mov
or
es
xlat
scas
adc
insl
dec
cmp
js
and
leave
pop
das
jo
stc
sbb
movsb
les
push
insb
adc
xor
idivb
test
enter
sbb
out
cmp
push
push
add
pop
lock
rcll
idivb
sti
push
in
nop
mov
test
je
ss
sbb
shll
xchg
sbb
leave
imul
fisubrl
push
nop
shl
inc
inc
les
aam
stos
arpl
cmc
inc
test
dec
cmpsl
mov
das
stc
jo
pminsw
sbb
mov
adc
jbe
sub
dec
dec
mov
xchg
or
ja
jl
mov
add
leave
push
fadds
repnz
push
fimuls
lcall
adc
lret
cmpsl
sbb
mov
xor
mulb
pop
sbb
mov
aad
lea
jnp
mov
sbb
hlt
xchg
stos
xchg
or
ds
xchg
push
js
push
or
out
push
pop
push
push
jecxz
mov
in
mov
ljmp
aad
adc
out
sub
and
mov
and
or
test
xchg
imul
add
sub
mov
jno
xor
repnz
xchg
inc
sbb
push
lock
xor
mov
cmpsb
pop
jp
inc
adc
prefetch
dec
imul
inc
test
sub
or
int3
scas
lcall
pop
les
sub
sub
cmp
pop
pop
xchg
xor
fnstenv
fiadds
jl
daa
stos
cltd
cltd
xor
cld
xor
sbb
dec
mov
mov
mov
ja
data16
xchg
xchg
jns
stos
pop
ja
ficomps
in
mov
jge
popa
pop
inc
mov
into
scas
mov
mov
sub
fildl
mov
std
jns
fidivrs
dec
test
mov
inc
scas
popa
sbb
out
jle
mov
test
fmul
lea
mov
std
out
dec
jne
push
js
jae
iret
clc
lcall
call
out
or
cld
pop
cmp
mov
pop
push
je
rcrb
xchg
push
adc
or
push
xor
sbb
mov
clc
jg
jg
loope
sbbb
cmpsb
test
loop
insb
call
in
test
xchg
outsb
fsubs
jecxz
jp
push
adc
and
adc
data16
adc
ja
test
add
fisttpl
jmp
mov
inc
bound
push
push
mov
js
sarb
cmp
sbb
popf
rorb
add
add
add
jg
cmc
or
out
dec
and
repz
add
and
iret
scas
test
repz
add
add
cmp
jg
insl
loop
pop
sub
xchg
mov
idivl
push
add
ret
dec
movsl
sahf
or
sub
or
out
mov
push
sti
daa
jp
xchg
daa
jbe
andb
stc
int
shl
xorb
cld
cmpsl
cmpsb
mov
add
bound
cmp
push
addb
fistpll
loop
mov
sti
pop
push
inc
mov
je
dec
or
mov
je
lock
adc
mov
pop
addb
lods
fcmovnbe
stc
fcmovne
push
xchg
cmpb
xchg
pop
inc
arpl
cli
jne
movsb
test
inc
mov
loope
inc
and
arpl
xor
jge
pop
clc
cmp
data16
add
sbb
in
xorb
pusha
xchg
rcr
mov
cltd
mull
jp
push
aam
jg
add
or
and
mov
cld
dec
lret
jne
or
cli
pushf
repz
pop
cmp
xchg
sub
cmpsl
icebp
sub
jbe
fisttpll
shrb
inc
ja
pop
orl
fsubl
jns
inc
insb
adc
stc
roll
call
push
les
fwait
ret
mov
fcompl
imulb
ljmp
jecxz
dec
mov
mov
jp
xchg
cltd
test
lahf
outsb
xor
jo
pop
sbb
fildll
cltd
fdivrl
mov
sub
push
aam
or
push
cld
push
iret
sbb
push
add
scas
or
adc
pop
mov
cli
mov
sahf
hlt
ret
into
push
fists
pushf
push
loopne
stc
shl
in
hlt
fdivrs
call
je
ds
lea
pop
por
xchg
loop
add
sbb
adc
and
mov
pop
add
add
adc
sub
dec
frstor
adc
div
xor
mov
movsb
mov
shr
popf
push
sub
mov
jno
xchg
mov
xchg
shll
ljmp
js
jns
dec
mov
jmp
push
jg
sbb
mov
ret
push
inc
mov
sbb
jl
push
scas
adc
jle
or
mov
es
pop
insb
inc
pop
add
sbb
enter
lods
dec
mov
xor
and
test
jb
ret
repnz
hlt
insb
nop
test
sub
push
pop
addr16
lret
arpl
movsb
fs
fdivrl
ret
or
sub
std
mov
mov
movb
mov
inc
xchg
adc
shlb
inc
pop
in
push
test
shll
mov
dec
inc
int3
inc
ds
daa
xchg
dec
cmp
pop
inc
or
xlat
mov
roll
daa
pop
gs
call
xor
dec
push
in
test
sub
jl
test
inc
push
mov
cmp
mov
int3
mov
inc
loop
or
jg
movsb
push
xchg
or
pop
dec
insb
jb
xchg
data16
xor
rorb
ret
xchg
add
cmp
inc
pop
out
jge
xor
mov
mov
fldenv
add
hlt
loopne
neg
xchg
dec
mov
shrl
shlb
mov
inc
sub
test
and
incl
jle
mov
mov
cmp
dec
aaa
or
lods
cld
dec
les
push
cwtl
inc
mov
jl
repnz
subb
ss
mov
mov
xor
leave
es
mov
pop
adc
pop
push
add
xchg
sbb
mov
add
ficoml
mov
ljmp
pop
mov
scas
mov
clc
jmp
loopne
icebp
stc
lds
stos
add
inc
call
fdiv
pop
clc
js
xor
inc
test
and
xor
std
sub
or
xor
mov
xchg
mov
xor
pop
ss
add
jns
pop
popa
cmp
jo
cld
cmp
ss
in
fldcw
jne
jmp
jg
sbb
ficoms
out
add
shrl
cwtl
cmp
sbb
inc
adc
pop
jnp
pop
xchg
test
adc
fldenv
das
popa
adc
add
add
add
outsb
out
lds
pop
nop
push
loop
add
repz
add
sub
mov
inc
pop
pop
xorl
cmc
mov
std
adc
inc
cmp
pop
push
popf
sysenter
ljmp
loop
ss
aam
inc
fs
dec
pop
adc
subl
fs
nop
or
inc
daa
lcall
mov
push
loope
mov
sbb
mov
call
push
nop
jo
mov
icebp
cmp
mov
pop
sub
sbb
jp
xor
mov
popa
jne
and
cld
jmp
xor
mov
sub
push
pop
ror
std
jge
ret
mov
pop
push
movsb
mov
jbe
enter
jnp
xchg
xlat
cli
inc
rcrl
jecxz
adc
fwait
insb
jg
dec
cmpsl
xor
dec
pop
rcrl
add
mov
mov
test
ss
pop
shlb
and
xchg
inc
or
pop
dec
pusha
or
sbb
push
jg
cmc
fcoml
les
inc
push
nop
push
pop
xor
push
jge
or
sub
inc
imul
roll
sub
jns
and
mov
xchg
clc
fs
dec
in
mov
je
daa
jns
push
lret
leave
daa
dec
mov
fsts
pop
or
clc
push
lret
cmpsl
imul
cltd
fdivrs
aad
jnp
mov
jle
nop
and
push
sub
xorl
mov
pop
loop
inc
es
scas
shll
in
mov
sbb
push
movsb
jne
rol
fnstsw
xor
mov
add
js
cmp
pop
movsb
inc
movsb
int
mov
das
scas
out
in
xchg
mov
add
addb
or
and
repz
or
sbbb
aad
jnp
add
jae
cmp
sub
mov
aas
es
push
xorl
cli
lock
and
add
pop
mov
dec
xchg
cmc
push
sub
out
xchg
fisubrl
das
dec
pop
imul
cwtl
add
push
loope
shlb
add
pop
icebp
test
jo
dec
push
loope
test
pop
sbb
dec
nop
inc
mov
das
and
fdivrl
mov
jae
mov
inc
cmp
punpckhdq
pop
mov
lea
int
pop
pop
fists
test
or
sarl
jae
mov
shrl
mov
mov
insb
mov
xor
mov
xor
and
adc
pop
divb
aam
inc
and
jg
pop
sub
xchg
pop
adc
add
imul
mov
cltd
popl
js
push
cmp
jno
fmull
mov
pop
ret
repnz
cmp
push
mov
and
pop
cmp
xor
sub
cmc
jbe
jmp
movsl
xchg
cmpsb
cli
jnp
inc
lret
lret
fs
int3
inc
add
loopne
sub
out
pop
push
or
cmp
jg
jecxz
xchg
mov
daa
cwtl
add
push
nop
mov
lret
ds
cmp
enter
xchg
insb
loope
stc
pop
arpl
idivl
xchg
cmpsl
inc
clc
pop
xor
jne
scas
mov
mov
cmp
sbb
push
shlb
mov
pop
out
push
jg
outsb
sub
mov
or
or
xlat
out
jns
sbb
lcall
rcr
imul
je
push
inc
fldl
or
scas
enter
mov
and
xchg
fwait
call
in
mov
adc
enter
lret
ret
lea
inc
mov
inc
std
xchg
inc
rolb
mov
notl
adc
inc
insl
sarl
loope
leave
pop
mov
movsb
sub
xchg
test
cs
add
gs
mov
push
xor
mov
ljmp
jb
rolb
adc
fstl
dec
xchg
in
jo
scas
clc
cld
stos
repz
loop
add
shrl
sub
out
push
outsl
lods
lods
jmp
xchg
cmp
cmpsl
pop
aad
inc
push
lret
pop
xchg
cld
xorl
shll
adc
hlt
mov
ljmp
lods
sbb
pop
insl
or
xchg
outsb
sbb
out
pop
xor
sbb
in
push
mov
dec
push
aaa
andl
loopne
pop
call
push
aad
int3
jno
xor
clc
bound
add
lret
lods
xlat
sti
mov
subb
add
add
xchg
lahf
mov
inc
shrb
lahf
es
or
and
inc
iret
jg
jno
sbb
xchg
les
dec
push
jl
xlat
add
sub
andl
insl
jge
pop
lcall
mov
push
in
inc
hlt
dec
xchg
inc
enter
sub
sub
fnstsw
cmp
call
mov
pop
xchg
into
push
arpl
movsl
inc
test
xchg
xchg
inc
xchg
mov
mov
dec
cmp
xchg
sub
jle
aaa
insl
push
pusha
sub
arpl
shll
into
sbb
and
sbbl
popf
cld
rcrb
pop
dec
divps
mov
xlat
cmp
push
mov
icebp
enter
adc
fists
mov
pop
mov
pop
xchg
mov
adc
adc
mov
mov
sub
mov
shrl
xchg
test
fisttps
leave
idiv
xchg
test
xchg
or
out
mov
cmp
bound
xchg
and
adc
lds
cwtl
mov
xchg
outsl
test
mov
lret
pop
push
xlat
movsb
xor
test
bound
cmp
fmuls
xchg
sbb
shll
pop
xchg
dec
ficoms
and
rcll
pop
xlat
xchg
rep
mov
scas
lea
cwtl
pushf
cli
adc
pop
pusha
xor
mov
repnz
lods
jmp
xchg
mov
push
shlb
arpl
sbb
sub
ss
jbe
push
out
pop
mov
cmpb
inc
xchg
test
enter
pop
jo
and
scas
out
jo
out
je
cmp
lods
jge
dec
stos
mov
fs
hlt
jb
sub
fwait
daa
nop
imul
hlt
rep
lods
or
out
push
mov
cmp
xchg
sbb
sbb
in
sahf
sbb
push
add
loopne
iret
push
ret
cmc
jmp
dec
cmpsl
add
aad
or
xchg
orb
xchg
das
or
push
sar
imul
mov
cmp
xchg
and
jge
push
inc
mov
je
fwait
mov
cmp
pop
cmpsb
clc
insl
xor
mov
pop
aam
push
jl
pmulhw
insl
ljmp
test
dec
dec
lret
pop
orb
popa
inc
movsb
push
insb
test
pop
jmp
cwtl
sti
jno
xor
ror
adc
xchg
xchg
pop
push
xchg
sub
cli
adc
mov
fsubp
cmpsl
inc
push
lret
cmp
shrb
inc
jo
lret
sub
arpl
out
subb
jecxz
insb
fs
andl
add
jmp
cld
imul
lock
aas
push
fildl
mov
dec
mov
aas
bnd
sbb
ret
fadds
fs
subb
sarb
xchg
push
outsb
fsubl
in
addb
aad
sti
test
push
lods
xlat
xlat
cld
cwtl
shlb
negb
sbb
jae
mov
pop
stos
mov
adc
jnp
sbb
out
mov
hlt
mov
cwtl
clc
pop
xlat
mov
sbb
cmp
dec
sbb
aaa
std
hlt
mov
xchg
data16
inc
push
jmp
lret
or
imul
jecxz
faddl
sbb
push
aaa
xchg
jns
cmpsl
sbb
fisttps
mov
fwait
xchg
dec
out
adc
insb
dec
mov
inc
jg
iret
repz
and
gs
xor
mov
adc
xor
dec
subl
xor
ret
lods
inc
pop
sbb
and
adc
sub
add
je
movsb
faddl
xor
jno
cmpl
lds
loopne
ficoml
cmc
mov
and
fimull
mov
or
repz
add
mov
lahf
adc
sbb
mov
imulb
lahf
mov
dec
repnz
int3
dec
sbb
in
jmp
lods
int
cmp
xchg
dec
stc
pushf
and
xchg
xchg
das
jns
fsubrl
test
mov
jo
jno
push
add
or
add
fisubs
fmull
mov
add
fimuls
sub
sbb
punpckhwd
add
add
loop
bnd
fcomi
mov
jg
cmc
mov
fiaddl
add
add
add
xor
in
push
pop
jns
inc
mov
aad
xchg
pop
fnstsw
add
inc
cli
cwtl
jmp
mov
repnz
insl
adc
pop
cmp
cltd
add
pop
ror
cmp
jecxz
mov
scas
mov
jnp
lret
mov
xor
sub
jno
inc
cmp
insl
inc
pop
sbb
aad
into
push
scas
lods
mov
scas
and
push
jns
pushl
lcall
mov
pop
jae
dec
pop
icebp
or
sbb
xchg
dec
adc
insl
call
add
inc
jo
cmp
vsqrtsd
repnz
xor
shl
fadds
push
pushf
cs
cltd
fldenv
or
pop
dec
in
icebp
inc
sbb
inc
and
aad
sbb
and
mov
mov
push
lods
test
inc
mov
xchg
adc
pop
adc
or
push
je
inc
pop
dec
fdivp
fwait
xchg
pusha
cld
xchg
mov
xchg
xlat
mov
sbb
leave
add
mov
jnp
sahf
enter
leave
fdivl
or
inc
fcomp
or
aad
leave
inc
mov
xor
orl
bnd
lea
dec
xor
shll
pop
sub
aas
push
mov
xchg
xchg
or
and
mov
jae
mov
or
push
mov
adc
je
loope
sub
insl
and
test
xchg
nop
mov
stc
lea
lods
movsb
add
imul
or
mov
jg
lods
pop
mov
lods
adc
xor
inc
nop
and
sahf
sub
xchg
bound
fwait
loopne
sbb
mov
int3
cli
jo
dec
adc
shll
jo
jns
jo
jne
imul
fisttps
xchg
jo
xor
scas
xor
in
hlt
in
xchg
pop
js
cmp
shl
mov
out
push
push
cmp
jno
xor
out
cmp
sub
xor
xchg
movsb
and
dec
push
sub
push
stos
add
fsub
push
loope
movsl
add
cli
rolb
lahf
insb
lea
inc
add
jp
outsb
dec
in
inc
or
jge
push
pop
adc
mov
add
push
or
scas
inc
lret
jp
lock
lods
out
cltd
lret
add
call
and
dec
or
stc
test
jl
and
ret
rep
nop
add
dec
push
jp
movsb
xor
push
cmp
fidivrl
adc
adc
xchg
add
cmc
popf
dec
orb
dec
xor
icebp
and
fcoms
or
test
push
mov
and
hlt
lret
movsl
push
into
xchg
les
pop
scas
xchg
push
lock
cli
test
fcompl
loope
mov
jmp
fisubl
or
js
or
dec
dec
inc
loopne
and
test
jg
sub
lods
pop
xor
or
fwait
dec
cmpsb
scas
push
xchg
cltd
sbb
gs
pop
mov
jecxz
ret
xchg
dec
fisubs
ficompl
ss
push
inc
paddusb
dec
or
push
or
fidivs
aas
repz
mov
lock
cmp
loop
push
jae
mov
shrl
pop
mov
fcmovnb
cmp
mov
incl
adc
iret
and
js
insl
mov
push
test
cmp
enter
inc
xor
push
fisttps
push
das
push
push
mov
push
add
push
popa
pushf
cmp
test
sub
mov
shlb
jno
sbb
in
dec
sbb
fbld
sti
cmp
into
inc
lcall
adc
add
push
ret
outsl
pop
pop
es
mov
sbb
popa
jns
loopne
xchg
lret
adc
lcall
ljmp
ret
fsub
xchg
add
xor
scas
nop
fldcw
ret
sbb
hlt
aas
hlt
and
mov
in
fisttpll
sbb
fwait
mov
in
push
xor
jns
pop
jae
push
bound
or
fwait
sub
imul
into
pop
mov
fiadds
rcrb
jne
sub
lahf
lock
aad
and
jge
call
fs
pop
into
out
push
adc
dec
fyl2x
xchg
add
mov
data16
fs
pop
jg
lock
or
jmp
fucom
popf
xchg
gs
lock
movsb
std
es
adc
in
sub
scas
rclb
in
jne
in
mov
sbb
xor
test
test
add
add
add
ss
in
inc
or
clc
add
add
add
inc
jbe
jae
sbb
iret
mov
sbb
inc
sub
imul
xchg
xchg
fs
push
inc
scas
lahf
addr16
jo
loop
adc
mov
sub
repz
bound
jae
lahf
pop
mov
loope
cmp
pop
and
cmp
mov
lret
sahf
lods
out
aad
into
and
xchg
adc
dec
and
lret
pop
jmp
push
mov
adc
pushl
sbb
xor
imul
stc
mov
and
inc
mov
outsb
xchg
lcall
fstpt
in
pushf
fdivs
inc
add
push
or
mov
scas
and
outsl
in
lahf
push
lahf
inc
push
push
sub
and
mov
es
data16
hlt
adc
xchg
vandnps
dec
pop
outsl
insb
cld
lock
sub
fwait
sub
dec
adc
std
stc
lret
sub
insl
fs
pop
shlb
mov
pop
xchg
and
fnstcw
insl
add
ds
and
jp
cmpsl
xor
mov
cmp
mov
shlb
mov
and
jb
sub
stos
jnp
ret
fadds
jns
jb
xorb
data16
or
fs
es
ja
push
mov
outsb
mov
mov
das
xor
outsl
test
sarl
mov
movsb
pop
and
jno
ss
enter
fldenv
jno
mull
adc
dec
or
lahf
imul
adc
adc
lea
adc
lods
xchg
mov
in
mov
and
adc
ret
mov
repz
pop
gs
out
xchg
addr16
es
push
mov
push
pushf
mov
push
xor
mov
pop
lock
and
pop
jecxz
pop
push
or
pop
xchg
pop
test
jmp
xchg
sahf
mov
das
popa
push
dec
dec
or
ds
dec
mov
xor
loop
loop
jl
inc
jns
int3
dec
and
mov
xchg
daa
cltd
or
inc
fsub
xor
adc
addl
stos
add
shlb
in
out
jmp
leave
mov
enter
dec
scas
cmp
or
aaa
sahf
and
add
aam
lret
xchg
out
pop
inc
rcll
jge
mov
cltd
lds
dec
jle
nop
xor
push
lods
jae
pop
add
out
into
and
inc
les
iret
push
push
sbb
dec
inc
push
lods
movhlps
fildll
sub
movsb
mov
or
add
push
pusha
jns
mov
scas
pop
mov
inc
sbb
jns
ljmp
mov
ljmp
js
in
ss
dec
push
cmp
sbb
dec
ss
cli
cmp
cmpsl
add
daa
ja
mov
jl
cmc
cs
insb
lret
insb
mov
sbb
jle
sbb
add
movb
push
mov
cltd
stos
jns
mov
pop
pushf
pop
cli
mov
push
cmc
adc
lahf
sub
std
mov
push
sub
inc
pusha
pushl
aas
notl
shrb
add
cmp
ss
std
push
add
or
pusha
mov
jb
cmpsb
outsb
jb
inc
sub
xchg
cmc
sti
or
imul
out
pusha
daa
imulb
cld
std
sub
fidivrl
dec
insl
out
iret
push
jle
jb
cli
adcb
outsl
mov
adc
pop
mov
lret
push
xor
add
mov
mov
stc
lret
xor
insb
xorb
sub
and
xchg
mov
in
and
into
jge
adc
loop
imul
cmp
imull
cltd
mov
test
push
push
imulb
sub
fisttpll
push
push
jnp
fs
xor
add
xchg
sbb
mov
pop
mov
imul
and
gs
jns
ja
cmpsb
dec
notl
loop
add
jns
and
jne
push
rclb
fcomi
adc
shr
lea
push
sbb
xchg
bound
jns
jae
mov
sub
and
rcrb
add
ss
addr16
int
jp
data16
int
sub
gs
pop
adc
nop
push
jne
and
mov
push
sub
add
add
add
roll
aas
fs
in
add
add
add
jnp
inc
pop
test
add
pushf
sbb
or
test
mov
jo
add
int
stc
vpor
loopne
sbb
movsb
or
adc
loopne
loopne
lods
add
data16
adc
js
js
js
sbb
dec
lret
mov
rcrl
mov
rolb
jo
aaa
xor
push
lea
movsb
lods
call
adc
ss
in
loope
pop
xchg
mov
xor
sbb
std
int
adc
push
mov
mov
sti
push
dec
push
in
or
loope
cs
fwait
iret
stc
adc
fcompl
imull
popl
sbb
lock
pop
mov
jmp
or
or
jne
inc
lds
ljmp
in
push
insl
xchg
xchg
jnp
rorb
nop
pop
mov
add
gs
adc
in
push
inc
out
dec
lahf
mov
or
push
adc
and
pop
mov
inc
cmp
or
xor
pop
sbb
hlt
cmp
pushf
scas
icebp
mov
pop
xchg
cmp
pop
cmpsl
push
adc
cmpl
ficomps
jmp
and
pop
iret
rcl
or
xchg
inc
outsb
sbb
xchg
pop
cltd
fwait
notb
pop
pop
xchg
mov
adc
mov
in
mov
stos
push
cmp
mov
shr
in
adc
sbb
ret
inc
adc
movb
jo
pop
adc
jecxz
cmp
lahf
bound
push
or
and
push
sbbl
test
mov
je
mov
dec
sar
stos
cltd
cld
and
sbb
rcrb
mov
cmp
xchg
inc
fimuls
dec
enter
and
mov
pop
push
mov
sbb
mov
fld
mov
xchg
fs
pushl
mov
push
inc
xchg
mov
data16
ficoms
mov
sbb
cltd
push
in
in
mov
pushf
add
stc
outsb
test
aaa
jl
cmpsl
sub
pop
or
and
xchg
jbe
cmp
stos
aas
push
adc
push
dec
cmc
lock
call
pop
sub
movsb
gs
inc
insb
push
jmp
mov
sbb
mov
add
mov
fsubs
fcmovu
lods
bound
push
pop
push
outsb
fdiv
mov
sbb
mov
fbld
pop
sub
lock
lret
xchg
adc
fcoml
aaa
psubb
jp
mov
or
stos
mov
jnp
mov
dec
mov
pop
adc
out
sbb
inc
jnp
pop
xchg
shlb
inc
xchg
fstpt
mov
push
fstps
in
test
cmp
jmp
rcrb
rolb
push
in
pushf
xor
rclb
std
sbb
aaa
cltd
xchg
add
inc
cmp
lcall
je
subb
jg
mov
dec
add
pop
sbb
mov
adc
and
pop
add
cltd
fildl
test
xorb
lret
dec
sbb
cli
notb
fwait
add
movsl
ja
mov
shll
std
dec
test
pushf
out
jo
push
pop
and
out
inc
fnstsw
fldcw
stos
dec
movsl
pop
and
xchg
out
es
cmpsl
in
pop
add
in
pop
lahf
cli
jnp
pop
inc
out
sbb
cltd
mov
hlt
int
mov
add
jl
lods
mov
push
pop
mov
addl
mov
aad
xor
nop
int3
push
inc
lcall
insb
pop
jnp
jne
fs
mov
ss
pop
adc
movsl
fdivs
iret
push
ljmp
in
sti
sbb
sahf
xchg
push
sub
adc
or
cmp
mov
pop
imul
in
scas
cmp
cmp
jmp
in
xor
sar
add
mov
sub
scas
sub
mov
jns
insb
test
out
out
shrl
push
push
and
aaa
in
negl
rolb
out
and
rolb
dec
inc
push
leave
repnz
call
sti
mov
das
daa
aaa
add
jbe
std
arpl
adc
sub
aam
in
or
enter
cmp
cmp
mov
orl
js
push
shlb
mov
add
add
sub
mov
inc
cli
shlb
jmp
add
rclw
icebp
gs
push
pop
imul
fisttps
fmul
loopne
lret
adc
iret
sti
loop
rclb
ds
jmp
mov
or
mov
cs
xchg
div
test
adc
int3
and
fcmovbe
mov
scas
jbe
dec
inc
fs
popl
push
sub
std
lcall
dec
jecxz
in
sub
divl
sbb
adc
fwait
mov
in
pop
or
cmpsl
xchg
mov
fdivrs
mov
ret
mov
ror
cli
testb
hlt
or
bound
sahf
pop
lods
mov
pusha
cli
pop
xchg
pop
shrl
pushf
mov
and
int3
pushf
sub
sub
sub
lods
adc
xorl
jp
jmp
pushf
dec
inc
int3
inc
inc
rolb
pop
cmpl
inc
sub
push
daa
or
mov
xor
xchg
icebp
xchg
ljmp
mov
lcall
pop
cs
sub
sub
hlt
inc
mov
packssdw
lods
fwait
loope
movsb
dec
sahf
sahf
repz
xorl
cs
lret
jns
out
imul
xor
mov
mov
mov
cmp
xchg
cld
repnz
loopne
and
push
rorb
mov
push
and
push
xchg
in
into
int3
leave
xchg
pop
ret
int
out
out
jne
xchg
rolb
jns
and
mov
mov
sub
out
rclb
int
pop
aad
mov
push
int
lcall
in
bound
mov
jb
dec
shl
addr16
xor
or
mov
or
jg
sbb
pop
jle
xor
insl
inc
sbb
xchg
jmp
mov
jnp
jl
or
jmp
daa
sub
aam
xchg
test
movsb
mov
sub
pop
dec
mov
jnp
out
insb
mov
jae
jno
sub
in
xchg
in
test
repnz
or
ja
inc
xor
mov
jmp
xor
cmp
jae
push
adc
inc
or
fcoml
int
sahf
dec
and
adc
xor
jae
movl
int3
cmpsl
ficomps
sbb
push
jne
mov
mov
add
sub
dec
cmp
sbb
dec
in
roll
ret
popa
sub
jl
add
stc
les
scas
mov
pop
push
jp
push
insb
pushf
sub
and
jle
out
scas
pop
movsl
push
jl
fsubl
push
mov
dec
xchg
mov
shr
xorps
lods
adc
imul
mov
or
add
out
xor
add
rorl
push
in
subb
mov
sbb
idivl
and
xlat
outsl
xor
adc
push
push
jmp
cld
and
lahf
cmp
into
fnstcw
sub
pop
inc
outsl
arpl
add
jmp
mov
adc
mov
mov
aam
inc
xor
icebp
push
das
test
popf
push
loopne
mov
gs
push
inc
push
jns
out
xor
sub
jns
add
jne
inc
jne
inc
xor
sbb
adc
and
mov
or
insb
mov
imul
xchg
lds
sub
aad
and
inc
sarb
add
and
jbe
inc
and
js
stos
rcrl
jp
mov
xchg
mov
or
add
insl
inc
aaa
lret
in
dec
pop
repnz
lea
je
xchg
movl
mov
popa
cmc
incb
ficoms
ficoml
adc
mov
jno
mov
aad
cmp
out
dec
lret
call
or
sub
roll
ljmp
fucomi
adc
jo
daa
inc
add
push
bound
fsubs
into
push
sub
fsubr
stos
ljmp
movsl
cwtl
mov
cmp
int3
cs
test
mov
fidivl
repnz
test
stos
pop
lret
std
lea
and
mov
xchg
sbb
data16
xor
fadds
jl
mov
cmp
push
adc
cli
cmp
sti
ret
mov
or
xor
cmpl
repz
aaa
and
je
add
add
add
les
std
mov
test
add
repz
add
xor
pop
lods
push
mov
mov
gs
rclb
imul
or
inc
mov
mov
push
push
mov
fsubs
gs
and
or
fildl
xlat
jge
dec
imul
mov
mov
insb
rcrl
jbe
inc
movsb
lock
std
and
mov
cmp
sub
mov
lahf
adc
mov
int
push
imul
sbb
aam
fistl
and
stos
mov
pop
ja
sahf
and
sub
xchg
sahf
sbb
pop
gs
insl
insl
adc
outsl
pop
pop
mov
call
incl
test
fisubl
xchg
cmp
cli
mov
sub
add
inc
dec
inc
or
rcrb
or
jecxz
dec
inc
jl
push
adc
adc
mov
push
aad
pop
dec
xorl
cmpsb
aad
hlt
and
icebp
lods
add
mov
std
test
xor
insb
add
push
push
ja
push
adc
adc
mov
cs
inc
or
push
mov
in
fs
lock
and
fs
insl
inc
adc
and
bound
out
adc
or
into
and
mov
out
pop
ret
roll
pop
push
hlt
pop
xor
lods
inc
push
fwait
sarb
mov
sbb
test
mull
mov
mov
aad
jne
jmp
mov
fnstsw
dec
mov
or
popa
xchg
jecxz
sti
std
loop
pop
cmp
repz
adc
outsb
dec
xor
iret
daa
stos
pop
push
fidivrs
leave
cmp
sbb
xchg
and
sarl
int
mov
jg
sbb
mov
mov
into
xchg
add
sbb
rorb
mov
cmpb
jno
push
pop
or
out
iret
pop
inc
fsts
lret
stos
push
push
push
and
push
gs
xchg
jmp
adc
sub
enter
loop
mov
daa
cmp
mov
shlb
test
xlat
lods
and
dec
imul
cmp
fsubrs
mov
add
and
cmpsl
pushf
lods
or
outsb
cwtl
ja
add
push
sub
inc
scas
pop
and
gs
xchg
or
aad
sub
dec
add
stos
mov
xchg
sbb
jmp
nop
sbb
es
scas
pop
xchg
jne
pop
xchg
cmp
sub
push
lds
mov
sbb
and
popl
js
test
notl
in
movsb
lods
xor
in
je
rorb
push
leave
xor
leave
movsl
cs
and
jb
lea
jle
push
lret
push
clc
push
mov
push
fdivl
xor
jb
mov
sti
out
sub
shr
neg
ret
orl
in
lahf
bound
pushf
or
jb
in
pop
fdivp
lock
and
out
xchg
jmp
sbb
mov
std
nop
aaa
fcompl
dec
repnz
adc
adc
mov
add
test
xchg
loop
bound
leave
mov
out
cmpsb
pop
push
sbb
popa
or
and
or
inc
pop
insb
in
je
ret
stos
xchg
and
rclb
jbe
rolb
jmp
sbb
scas
push
pop
pushf
rep
bound
int3
jae
push
mov
push
mov
and
loop
pop
adc
mov
cmp
insb
and
iret
stc
and
add
ljmp
sbb
xchg
je
sarl
mov
out
sbb
pop
push
pushf
jo
nop
filds
pop
subb
cwtd
mov
jnp
scas
mov
xchg
test
jmp
and
loopne
push
sub
cltd
out
loopne
adc
mulps
or
rclb
xchg
loop
cmp
rcll
and
sti
aad
cltd
out
and
cmpsl
dec
mov
lret
jo
mov
fsubl
or
mov
xlat
adc
xor
mov
ds
cmp
mov
aas
mov
sbb
fldl
mov
push
push
leave
mov
sbb
sti
repz
movsb
jbe
loopne
sbb
mov
test
sub
mov
mov
incb
xchg
add
add
push
dec
shr
jg
push
mov
test
add
add
add
es
adc
mov
mov
xchg
xlat
mov
push
mov
mov
aas
lahf
add
pop
pusha
es
pushf
jge
mov
cmp
sub
sbb
loopne
push
mov
sarb
sub
inc
dec
js
jmp
sbb
rolb
outsl
inc
ret
mov
in
ret
fcompp
lahf
add
rclb
and
mov
xchg
mov
loop
aas
mov
stc
cmp
xchg
aad
fsubl
push
imul
insb
dec
cmp
mov
popa
stos
iret
push
scas
aaa
aam
lea
inc
cmpsb
pop
sbb
paddsb
lahf
mov
in
imul
sti
call
out
dec
cmpsl
mov
iret
outsl
cmc
lods
mov
add
ficomps
and
in
fsts
in
popa
or
sbb
imul
inc
ja
push
mov
mov
dec
push
add
push
xor
in
inc
insb
sub
mov
icebp
dec
jg
jnp
into
loope,pn
sbb
jno
iret
aam
cmp
sti
inc
ja
subb
sub
xchg
adc
outsl
push
sbb
sub
loop
js
mov
pop
mov
dec
sub
repnz
fwait
mov
sbb
sarb
xchg
xlat
inc
add
dec
mov
repz
xchg
test
in
popa
lret
fstps
add
mov
pop
push
mov
mov
add
xor
repnz
mov
mov
mov
scas
pusha
mov
shl
in
test
aad
jge
test
jb
inc
cld
jb
movsl
jecxz
jp
insl
pop
stc
dec
mov
pop
pop
js
mov
pushf
movsl
repnz
int3
push
mov
sti
mov
test
fldt
jne
sub
or
addr16
mov
and
mov
js
fwait
lods
push
xor
and
testb
cmp
bound
lret
jb
out
dec
test
push
insb
cs
push
push
push
in
xchg
sbb
cmpsl
add
add
adc
inc
stos
std
and
add
push
pop
ret
cmp
lret
mov
jns
loopne
cs
sub
test
call
inc
data16
lret
mov
cmp
mov
pop
mov
test
cltd
lahf
adc
mov
pop
pushf
das
xor
in
loop
jl
js
push
sarb
jne
lret
pusha
ljmp
jmp
lods
cmp
fs
sbb
iret
xchg
sub
loope
mov
sbb
or
or
cmp
mov
inc
jno
ficoml
aaa
repnz
popf
mov
jg
dec
mov
aad
loopne
adc
ret
insl
cmpsl
ds
dec
jne
or
int3
out
cmp
sti
sti
push
pop
lcall
psrad
lret
mov
jl
into
in
stos
out
xchg
xor
cmpsl
aad
orb
mov
or
out
iret
ret
jle
dec
adc
cmp
pop
inc
xchg
popa
in
cwtl
stos
pop
loope
jg
add
or
rclb
icebp
sub
pop
dec
cwtl
negl
push
adc
fnstenv
dec
adc
mov
out
sahf
popf
pop
ret
int3
aam
out
or
es
mov
jne
jbe
enter
shlb
and
icebp
and
push
lea
or
stc
pop
shufps
rcl
dec
shrb
push
adc
shr
pushl
movsl
inc
imul
rcrl
mov
pop
enter
sub
test
adc
mov
loope
inc
mov
jae
movsb
xchg
mov
scas
push
dec
push
cmpsb
rcpps
and
clc
daa
jp
jl
inc
adc
lahf
sbb
imul
aam
std
lock
test
ds
push
xor
xchg
mov
dec
loop
insl
das
push
es
iret
push
and
lret
nop
push
insb
aam
mov
fldenv
jp
sahf
scas
cs
mov
clc
leave
hlt
stos
xchg
stos
shrl
push
mov
xor
daa
adc
mov
push
cld
int3
mov
cmp
lret
icebp
sar
imul
cmc
frstor
pop
xchg
push
pop
fs
xchg
aaa
testb
xchg
pushf
outsl
bound
mov
movsl
lea
rclb
insb
bound
mov
test
ss
add
add
add
movsl
push
movsl
shl
divl
mov
clc
add
repz
add
test
jg
mov
out
mov
jbe
cmpsb
sub
add
cld
pop
xor
movsl
cmc
out
es
xor
das
out
es
pop
jb
jne
push
push
add
out
xchg
lcall
sub
sahf
pop
or
sbbb
sbb
adc
inc
repz
pop
aad
jle
push
mov
popf
mov
lret
dec
mov
push
popa
daa
subl
inc
lahf
pusha
and
add
mov
dec
sbb
sub
adc
es
aam
pop
inc
scas
and
stos
xor
call
xor
xchg
rcrl
sub
pusha
pop
pusha
cmp
addl
cmp
push
aad
call
add
lcall
xchg
lret
sarl
leave
mov
mov
pop
mov
add
xlat
add
sbb
lods
packsswb
inc
mov
push
xlat
lahf
adc
repnz
xchg
xor
scas
mov
cli
xchg
aam
cwtl
xor
sub
je
sahf
stos
inc
mov
sbbl
push
xchg
push
xor
outsb
or
nop
ss
jg
and
and
cmp
movsl
dec
or
pop
xchg
arpl
roll
cmp
ret
push
out
push
in
cwtl
sbb
and
call
fldcw
inc
xchg
pop
sbb
into
in
sub
notl
dec
push
jl
outsb
fsubrs
pop
xchg
sbb
test
inc
adc
je
mov
mov
leave
lds
jae
push
adc
pusha
push
roll
cld
pop
push
mov
bound
adc
fs
roll
iretw
mov
negl
jl
mov
jb
sbbb
jecxz
insb
mov
jge
insl
lods
sarl
and
push
clc
dec
pushf
fsubr
and
mov
adc
insb
fwait
enter
int
enter
xor
mov
popf
xor
notb
dec
mov
jmp
in
aad
jb
xchg
movsl
pop
and
inc
adc
mov
push
mov
mov
insl
mov
fstpt
dec
mov
push
sbb
jecxz
pop
stc
loop
dec
add
sub
int3
div
mov
fisubs
mov
popf
dec
test
mov
or
xchg
cmpsl
jb
repz
sub
sub
push
jb
in
iret
push
addb
mov
cs
push
popf
push
sbb
add
popf
push
fistpll
loop
fsubr
daa
lcall
or
xor
outsl
subl
data16
adc
mov
push
call
addb
icebp
dec
insl
das
dec
add
movsbl
jge
rcrb
push
or
inc
mov
shlb
loop
jns
inc
inc
hlt
rcrb
pushf
inc
xchg
mov
daa
imul
xor
fwait
pop
push
or
fsubs
cld
es
cmpsl
std
cmp
lret
xchg
mov
sub
inc
stc
xlat
and
add
xchg
movsl
inc
mov
xor
ret
and
fwait
xchg
push
pushf
cmp
inc
push
dec
out
leave
adc
jnp
jo
jbe
and
call
leave
fstpt
ss
popf
push
call
pusha
sbb
add
inc
mov
cwtl
jbe
adc
dec
movb
push
stos
test
stos
xor
push
push
inc
xchg
stos
aad
and
hlt
xor
push
addl
hlt
test
lock
outsb
dec
push
sub
cmpsl
fists
loop
in
mov
lret
repz
cltd
enter
repz
test
ret
xor
fsub
lods
repnz
jl
iret
xchg
mov
mov
sar
xor
cmp
in
scas
adc
jp
sbb
outsl
mov
loope
push
add
mov
pop
dec
mov
mov
cmp
sbbb
dec
in
lea
sti
cmpsb
stc
pop
inc
jmp
xor
pop
das
pop
test
push
rorb
out
inc
mov
les
mov
jecxz
pop
push
pop
jae
jno
jb
mov
test
into
cmp
ret
pusha
pop
lds
dec
sbb
sub
add
shll
cmp
pop
mov
mov
mov
dec
push
xchg
or
stc
push
out
daa
adc
ljmp
inc
or
addb
ljmp
push
mov
call
jnp
or
inc
in
sar
pop
testb
add
add
adcb
lret
insb
insl
std
add
push
add
add
jecxz
popa
mov
outsl
loope
mov
and
les
add
