push
mov
sub
mov
mov
and
push
movzbl
add
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
push
pushl
push
call
jmp
push
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
inc
xor
mov
add
mov
and
mov
xor
mov
sub
mov
adc
mov
xor
mov
neg
mov
sbb
movl
and
mov
mov
mov
sbb
xor
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
call
cmpl
jb
add
mov
adcl
mov
sub
mov
movl
cmpl
je
cmpl
jg
jmp
push
pushl
pushl
call
mov
dec
mov
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
push
call
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
andl
mov
inc
mov
cmpl
jl
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
xor
or
sub
pop
orl
sub
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jb
add
sub
movl
mov
movl
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
mov
adcl
mov
mov
sbbl
xor
add
mov
lea
mov
mov
jmp
mov
xchg
pop
popf
je
or
jp
fstpl
jp
sub
xor
xor
imul
inc
aad
icebp
pusha
dec
imul
jo
pop
iret
pop
dec
xor
jg
xorb
pushl
cli
arpl
in
cmp
mov
mov
mulps
fstl
push
cli
sbb
imul
and
mov
jmp
enter
cli
js
jae
cwtl
pop
mov
add
fisubrl
fs
mov
mov
int3
mov
push
bound
add
lods
dec
lret
rclb
std
bound
stc
push
sub
push
pop
mov
js
cmpsb
pop
movsl
repnz
js
inc
and
fcoms
xchg
insb
std
pop
cltd
mov
xor
in
mov
fcmovnb
sub
test
and
and
jb
into
sub
cli
dec
push
lcall
mov
cltd
push
dec
inc
lds
or
xchg
outsl
push
pushf
js
icebp
add
aaa
daa
add
das
and
in
es
fucomip
movsl
mov
stc
cmp
xorl
and
dec
cltd
fdiv
test
jmp
jbe
adc
fwait
aaa
jmp
divl
jno
mov
pop
cmc
ret
mov
mov
repz
daa
cmc
sbb
add
pop
mov
out
cmp
mov
ljmp
pop
mov
ret
mov
test
xor
mov
std
lds
cmp
idivl
out
push
stc
aam
aas
cmpsb
sbb
lret
int3
loopne
xor
lcall
jl
loop
pop
dec
or
xchg
mov
ljmp
mov
fwait
pusha
or
xor
xlat
shl
fildl
repnz
daa
mov
pop
mov
push
lods
inc
cld
rorl
cmc
out
movsl
scas
daa
xchg
push
xlat
mov
xchg
clc
jle
pop
loope
or
sahf
mov
stos
jo
fbld
int
sbb
lds
inc
jecxz
test
push
outsl
xor
xor
add
test
jg
sub
mov
push
jg
mov
push
insb
dec
pusha
in
inc
adc
into
mov
jl
scas
mov
ja
test
dec
psllq
mov
jbe
fwait
xchg
fisubrs
inc
dec
cmc
cs
xlat
outsb
imul
aas
cli
push
fstl
add
xchg
hlt
dec
pop
mulb
test
test
inc
inc
sbb
mov
in
loope
mov
sbb
ret
in
sub
inc
pop
sub
sti
push
aad
inc
cmpsl
dec
pop
arpl
lds
pusha
mov
push
imul
mov
idivb
jbe
lret
in
aam
and
mov
pop
mov
out
sbb
mov
mov
scas
push
lret
or
pop
out
add
adc
pop
push
sub
lret
xor
stos
lods
push
in
dec
xchg
sbb
pop
sbb
sbb
out
out
xchg
data16
lcall
std
mov
es
sub
inc
sub
jne
popa
mov
lret
add
imul
cmp
imul
mov
xchg
sub
jecxz
jmpw
idivl
daa
fadds
dec
ret
test
xchg
push
imul
jle
mov
jo
jb
adc
sar
frstor
add
mov
fcmovne
into
clc
pop
sarb
xchg
out
xchg
stos
mov
mov
mov
int
add
fwait
jo
mov
add
jno
or
xor
pop
pop
lar
fwait
xor
inc
call
mov
push
aas
ja
mov
pop
jbe
adc
mov
adc
mov
sahf
sbb
sub
test
lock
test
cmp
dec
mov
mov
insl
add
lahf
pop
xchg
popa
cltd
dec
push
rorb
mov
mov
aad
outsb
pop
movsl
pop
adc
dec
mov
cs
xor
push
mov
or
int3
jmp
push
xchg
cli
sbb
mov
sti
test
test
mov
popa
push
fsubs
insl
inc
cmp
loope
repz
lret
jle
mov
popa
lret
bound
dec
fucomi
adc
fmull
mov
dec
pushf
jp
ss
and
sub
and
notb
mov
mov
add
add
or
scas
jnp
pop
ss
aas
xchg
pop
xchg
push
out
dec
out
mov
adc
and
jae
outsl
lods
sbb
sbb
jecxz
mov
mov
inc
inc
dec
aam
dec
xchg
xchg
mov
sbb
clc
xchg
gs
mov
rorl
add
or
inc
xchg
xor
sti
pop
or
push
inc
in
icebp
fwait
jmp
jl
cwtl
and
xor
jno
dec
cli
and
shr
lcall
scas
dec
sub
int
leave
aas
hlt
cmpsb
pop
jnp
mov
cmp
pop
pop
in
mov
ljmp
and
rcrl
dec
sub
sub
cltd
or
shrb
cwtl
fidivrs
jl
cwtl
pop
roll
neg
shrl
in
sti
in
dec
sbb
imul
sub
xor
mov
mov
dec
jns
mov
sbb
dec
push
jbe
sahf
pop
cmp
test
jo
sub
iret
stos
xchg
inc
xchg
sub
sub
repz
rorb
mov
pop
mov
xchg
xor
outsb
jl
cmp
call
and
lret
cli
pop
fbstp
out
ret
lret
imul
push
repnz
cltd
inc
add
into
stc
mov
xor
inc
dec
mov
and
popf
xchg
cmp
test
mov
cmp
rcl
lret
loop
cmpsl
sbb
ret
ret
bound
mov
ss
dec
popa
xor
cmp
jmp
push
xlat
insb
sbb
jge
sbb
jns
aam
fwait
outsb
hlt
ficomps
popf
pop
mov
mov
sbbl
popa
jo
dec
cmp
lcall
cmp
sub
push
les
lock
sub
ret
loope
imul
ffree
xchg
pop
ds
pop
lcall
fstps
mov
jg
lods
lret
inc
adc
sub
inc
fucomi
mov
sub
dec
inc
into
lahf
adc
jae
out
pop
mov
mov
jne
lret
sti
sub
sbb
out
js
pop
jle
xor
mov
gs
jg
sarb
pop
mov
ss
int
stos
pushf
movsl
fdivrs
inc
je
insl
daa
fidivrl
lahf
std
adc
cmp
test
xor
clc
cmpsb
ds
mov
push
lods
shrl
jbe
cmp
fldl
pushl
xchg
dec
in
dec
pop
adc
imul
insb
fisubl
add
sub
fisttpl
pushf
je
out
mov
xor
xchg
inc
daa
push
shll
inc
pop
pop
sub
bound
outsl
xor
jae
in
push
lock
pop
test
test
pop
xchg
shrl
jnp
jp
outsl
sub
mov
shlb
cli
aam
pop
push
in
out
mov
pop
hlt
sbb
adc
xchg
gs
scas
push
in
sub
out
push
in
repz
pop
fs
test
push
and
lock
gs
cmp
sub
jo
mov
jo
add
cmp
mov
pop
cmpsb
cmpsb
xchg
scas
cwtl
jns
dec
ja
xor
cmpsb
in
cmpsl
in
sub
jmp
hlt
cld
inc
cltd
scas
pop
jge
push
push
test
dec
sub
dec
cmpsl
cmp
fwait
sbb
in
cwtd
cs
into
add
js
insl
mov
mov
add
lea
sub
stos
test
cmpb
xor
adc
xchg
push
jle
xor
pusha
subl
inc
test
and
arpl
adc
lahf
xchg
cmp
sbb
pop
call
jnp
or
pop
fbstp
pop
jno
loopne
sbbb
outsb
lods
sbb
dec
outsb
popa
push
call
xor
test
cmp
push
pop
ret
pushf
xchg
sbb
cld
mov
add
out
into
rolb
sub
adc
loop
pop
test
repnz
cwtl
jle
or
nop
mov
pop
adc
pop
out
jo
fwait
insb
enter
mov
lcall
dec
mov
jne
les
xchg
test
inc
sbb
std
loop
mov
daa
push
jmp
test
adc
dec
inc
scas
and
jmp
ja
mov
lock
pop
loope
lods
mov
insl
test
fistl
es
add
inc
shrb
mov
push
fsubp
add
xchg
dec
xor
movsl
test
and
or
adc
cli
fildl
iret
cmp
jmp
lret
xchg
pop
jno
and
loop
cmpsl
mov
add
pop
ret
mov
lods
shrl
test
imul
testb
pop
push
xor
out
xor
inc
mov
outsb
jl
or
fcoms
std
cmc
lret
lods
out
dec
aaa
into
mov
adc
stos
xchg
mov
dec
pop
ljmp
push
data16
test
sbb
add
add
xchg
sub
and
jmp
dec
push
jmp
mov
jg
mov
pop
rorb
das
sbb
xchg
xchg
xor
mov
pushf
addr16
xlat
lret
inc
jbe
sub
fucomip
je
xor
push
sub
xor
and
mov
jge
aas
inc
pop
stc
xchg
jb
cmc
cmp
ficoml
inc
idivb
lds
add
dec
cmp
and
xchg
adc
cmpsl
or
cmpb
xchg
sbb
push
int3
xlat
iret
mov
into
jns
inc
int
frstor
fcmovbe
aaa
cmp
ficompl
test
in
pusha
mov
das
ds
les
scas
in
mov
mov
insl
fcoml
jle
push
fmuls
loopne
and
in
add
scas
shl
das
into
mov
or
mov
je
and
movb
sbb
fdivrl
cwtl
stos
movsb
iret
and
xchg
and
lret
imul
sub
sbb
push
call
cmpsl
out
adc
adc
loopne
addr16
add
dec
lret
cmp
jmp
cltd
sub
mov
push
inc
or
popa
test
js
lcall
cmpb
sub
cmp
je
gs
sub
xchg
popa
leave
loope
add
movsb
adc
sub
out
dec
stos
mov
ficoms
pushf
insb
push
in
stos
mov
enter
popf
add
pop
sbb
dec
out
loope
mov
out
das
jecxz
xlat
add
shr
inc
pusha
push
mov
mov
dec
push
fcomp
shll
jo
in
shr
push
lock
cwtl
inc
xor
arpl
leave
ljmp
fnsave
pusha
das
insb
xor
out
dec
dec
xchg
xor
popa
push
sbb
inc
pop
push
lods
mov
pop
xchg
add
rcrb
or
dec
aaa
or
movsl
adcb
dec
leave
jnp
mov
cmp
sahf
fstps
stos
pop
add
test
dec
push
push
cld
sub
rcrl
xor
jmp
mov
lret
push
or
sbb
fs
jp
arpl
ret
aad
fadd
lret
hlt
mov
pop
daa
cld
cmp
in
les
inc
inc
out
adc
sar
dec
push
mov
outsb
cmp
cmpsb
pop
out
bound
jecxz
out
mov
mov
repz
rolb
cmc
pop
sub
sti
xchg
xchg
or
push
xchg
aas
adc
cmp
mov
mov
movsb
int
pushf
xchg
xchg
rcrl
lret
insl
outsb
lods
test
adc
fwait
xlat
popa
and
shrb
inc
sbb
adc
loopne
adc
aam
outsl
in
out
fildll
popa
jne
push
js
test
dec
out
pop
mov
stos
lahf
movsb
xchg
mov
or
pop
mov
cmp
mov
lret
into
mov
or
out
push
mov
and
scas
in
mov
test
rcl
push
ffree
je
or
adc
push
and
sbb
enter
jno
dec
js
add
rcrb
into
imul
push
dec
jbe
mov
ljmp
loopne
fucom
dec
push
div
fs
add
mov
push
movb
or
jp
inc
jl
mov
test
push
xor
xchg
adc
jge
fwait
daa
insb
lock
dec
push
out
mov
pop
arpl
cwtl
test
adcb
inc
cli
hlt
pop
or
push
pushf
scas
jns
dec
imul
jle
mov
pop
xlat
stc
lahf
mov
cltd
pushf
push
and
in
cmp
mov
jle
ficomps
or
in
scas
mov
sub
adc
or
jbe
insl
cwtl
sti
dec
loope,pn
daa
xchg
ror
or
pushf
loop
into
out
mov
pop
std
mov
es
mov
inc
inc
add
push
jno
mov
ss
enter
outsb
mov
cmpsb
xor
cmpsl
insb
mov
xchg
jmp
pop
mov
mov
cmp
push
cmp
jnp
pop
jle
xor
mov
sub
sbb
mov
xchg
mov
mov
pop
ret
shrb
or
mov
jbe
mov
xor
dec
cltd
fisttps
insb
shl
mov
pop
sub
pushf
adc
add
lahf
push
pop
dec
arpl
pop
push
je
dec
rcrb
mov
in
cmpsb
jbe
lea
in
pop
and
push
mov
mov
movsb
xor
or
stos
fsubl
sbb
in
inc
imul
jne
push
js
insl
pop
aas
cli
xlat
rolb
and
sbb
jne
fs
lock
out
popf
std
lret
jno
test
adc
xor
mov
std
jae
scas
addl
inc
mov
dec
loopne
sub
ja
aaa
loopne
andl
jnp
fidivrs
adc
lds
stos
pop
pop
je
jmp
mov
cwtl
fs
enter
call
jno
in
xor
mov
popa
rcrl
iret
add
clc
ret
pushf
outsl
mov
mov
xchg
and
push
test
adc
xor
jmp
imul
fistl
adc
mov
mov
jo
sub
mov
hlt
add
frstor
dec
xlat
sub
pop
fildll
lods
das
les
sti
mov
dec
testb
gs
loopne
mov
push
sub
or
testb
sbb
push
pop
add
xor
enter
mov
mov
aam
arpl
fldl
and
jne
pop
cmp
pop
sbb
out
cmp
mov
adc
sub
push
xorb
adc
ffree
lea
mov
cwtl
cli
je
xor
inc
clc
nop
cmpsb
sti
jne
push
push
inc
fwait
sbb
cli
push
and
or
and
enter
mov
fiadds
xor
cmc
xchg
mov
mov
out
mov
sub
xchg
mov
dec
loop
test
push
imul
xchg
jmp
jae
ret
dec
popa
stc
flds
stos
pushf
cmp
sti
bound
sub
sub
loop
in
data16
ja
dec
adc
mov
shl
iret
inc
leave
add
xor
mov
imul
cmpsl
sub
je
lods
leave
test
or
into
dec
mov
test
scas
or
jae
lret
pop
dec
shlb
scas
testl
icebp
mov
xchg
call
xchg
into
add
or
roll
rorb
aam
pop
popf
mulb
shrb
daa
or
mov
xor
push
push
add
in
pop
push
jnp
inc
pop
or
dec
inc
mov
jbe
int3
ret
or
or
in
in
fs
add
cmpsl
imul
pusha
mov
sbb
sub
subb
pushf
xlat
cwtl
cld
xchg
andb
mov
push
push
pop
xchg
add
inc
adc
frstor
mov
mov
push
cmp
adc
jmp
mov
xchg
dec
dec
adc
inc
inc
enter
pushf
sbb
jecxz
mov
add
cmp
push
adc
mov
fistps
mov
lds
std
repnz
in
lcall
movsl
imul
idiv
bound
fucom
push
es
push
sbb
ret
testb
lahf
jmp
lds
pushf
adc
xor
adc
hlt
dec
mov
jmp
in
push
rcrb
push
xor
adc
xor
lret
dec
mov
jae
push
sub
xchg
addr16
pop
divb
dec
sub
dec
add
ficoms
ss
cmpsl
je
cmpsl
cmc
lock
int
mov
imul
push
pop
repnz
aas
pop
xor
mov
setb
cs
cmpsb
adc
sub
xchg
mov
mov
lahf
test
sbb
xor
outsb
xorb
push
mov
add
scas
pushf
jbe
mov
rcrl
pop
lock
out
cltd
cmpsb
ret
or
popf
inc
lcall
mov
cli
lods
in
push
xor
cwtl
inc
lea
xor
jnp
push
test
mov
xor
push
fs
and
js
cmp
sbb
nop
push
rcrl
and
mov
pop
roll
jne
add
pop
jle,pn
in
adc
scas
inc
add
fadd
addb
lret
lret
aaa
jmp
lds
inc
cld
dec
add
mov
int3
push
mov
add
scas
jle
inc
into
dec
jge
ja
mull
or
repz
fsubs
hlt
pop
in
rcrb
call
mov
pushf
jae
scas
aas
jne
xor
lret
jg
je
jge
popa
int
mov
push
testl
xchg
std
push
aas
fnsave
hlt
sub
pop
sub
movsw
in
mulb
mov
mov
or
scas
push
push
insl
icebp
adc
cwtl
lahf
cs
mov
mov
jno
ret
cs
pusha
lret
inc
inc
popa
dec
push
pusha
dec
out
outsb
in
sub
jp
outsl
xlat
mov
cmc
daa
and
xchg
mov
xor
dec
rolb
sbb
push
lea
shrl
lahf
mov
dec
aad
enter
xchg
jecxz
jp
dec
push
in
les
sti
dec
lret
icebp
cmp
pop
ss
cmp
push
scas
sub
jecxz
fbstp
xchg
jl
outsl
push
jne
lret
dec
dec
incb
dec
add
scas
cmp
cli
adc
pop
or
inc
or
xchg
int3
cmpsb
adc
ds
das
in
sbb
xor
pop
xor
arpl
and
andl
stos
bound
sti
ret
pop
pop
push
loope
sbb
movb
scas
push
stos
mov
aas
addr16
push
enter
pusha
mov
lods
mov
push
je
cmpb
shl
sbb
pop
movsl
or
stc
mov
shlb
mov
pusha
add
push
sbb
pop
imul
or
lds
jmp
inc
mov
push
xchg
fimuls
int3
sbb
sbb
and
fwait
ret
push
mov
adcb
sub
cmpsb
loopne
out
aad
xchg
sbb
and
mov
or
sahf
push
cs
mov
popa
or
pop
leave
pop
cmp
xchg
mov
fmul
lret
mov
arpl
push
sub
test
cmp
fnstenv
jge
dec
cld
dec
pop
ss
mov
or
add
stos
cmp
jne
jg
add
repz
xchg
rorl
mov
mov
pop
mov
mov
decb
fdiv
sub
cmp
mov
push
mov
and
mov
mov
bound
insl
int3
cmp
cmp
pop
filds
movsb
mov
xchg
jl
mov
adc
arpl
stos
mov
sub
cmpsl
enter
jae
ficompl
jg
pop
push
dec
out
xchg
add
loope
test
jns
mov
fstps
pop
mov
or
dec
pop
mov
sub
sti
loop
mov
out
test
les
dec
push
loopne
sbb
add
out
orb
movsl
rorb
inc
xor
adc
pushf
and
pop
lods
dec
sub
xor
movsl
xor
movsl
mov
jo
jb
test
pop
and
fwait
adc
dec
imul
add
sub
xor
fwait
stos
cmc
std
incl
mov
sub
push
fs
std
cld
lods
pop
mov
popa
sbb
out
mov
test
pop
mov
or
lcall
gs
in
push
add
adc
out
pop
pop
sti
lea
loope
es
int3
adc
or
lds
mov
out
jge
adcb
icebp
std
jl
test
inc
in
add
das
cli
iret
lods
inc
sub
pop
push
cmp
xor
daa
movsl
inc
pop
sbb
lds
mov
sub
fld
xchg
repnz
mov
or
mov
ret
dec
mov
xchg
xor
es
push
addr16
sti
xor
repz
inc
push
addl
jmp
push
and
xchg
sarl
jge
cltd
jb
repnz
popa
pop
sbb
scas
cltd
dec
xchg
mov
ss
arpl
lods
jmp
lcall
mov
fcom
push
jl
cmp
cld
cmp
ficompl
test
pop
ljmp
mov
sub
jnp
out
jmp
jno
or
cmpsl
mov
mov
cmp
test
jb
and
ret
ret
repnz
push
cmpsl
mov
adc
test
loop
jp
insb
inc
repnz
insb
and
mov
mov
stos
test
pushl
jge
or
sbb
loop
inc
pushf
mov
fistpll
fwait
jns
pop
mov
sub
add
xor
fstpl
inc
and
jmp
or
dec
or
setns
ljmp
or
push
fisubl
aaa
sti
mov
cmpsl
in
xchg
cmpl
jle
outsl
xor
dec
out
xchg
in
sbb
iret
push
mov
js
sub
pop
cmp
movsl
mov
fwait
icebp
xor
adc
and
jp
je
sub
lret
imul
mov
mov
xchg
sbbl
jae
flds
adc
or
enter
icebp
test
out
dec
loope
add
push
mov
arpl
mov
pop
push
mov
push
or
insb
mov
insb
pop
or
stos
inc
sub
mov
dec
mov
cmp
push
fwait
sub
pop
inc
jnp
mov
into
pusha
mov
movlps
inc
mov
int3
fdivrs
or
inc
aas
fcomp
jp
xor
xlat
sbb
push
loopne
push
xchg
outsl
out
sbbl
movsl
cmp
sbb
ficoml
divb
orb
mov
clc
add
or
mov
adc
scas
ret
js
iret
arpl
out
sub
mov
pop
mov
test
ffreep
mov
int3
aaa
cmp
cmc
stos
rcll
insb
pop
ja
sub
sbb
scas
mov
dec
add
iret
lods
mov
jle
xor
in
loop
xor
or
add
aas
mov
and
loop
push
incb
and
cmp
insl
in
and
sub
xchg
cmpsl
adc
mov
or
int
jno
lods
jmp
aaa
mov
jne
adc
test
stos
aad
in
sar
stos
aaa
mov
mov
jbe
jae
aam
lods
push
sub
xchg
fildll
sahf
add
push
test
pop
xlat
es
and
add
fwait
in
popf
movsb
adc
lahf
pusha
xchg
sbb
orl
mov
mov
adcl
xchg
xchg
add
fistpl
add
out
jnp
mov
cmp
rcrl
or
pusha
into
jne
and
imul
loop
jecxz
lret
jno
popa
fsubl
cmp
jo
inc
jbe
stos
inc
ret
shl
loope
xchg
mov
lock
jp
jecxz
repz
or
lods
std
mov
movsb
mov
cmpsl
popa
cs
mov
pop
jle
lock
or
push
lcall
cmc
push
loopne
divb
lds
jbe
mov
int3
push
xchg
and
dec
xor
mov
xchg
ucomiss
hlt
fnstenv
icebp
or
lds
jo
iret
iret
xor
adc
pop
fnsave
in
lods
adc
sub
jbe
pop
sub
xchg
xchg
clc
fs
lahf
sub
out
xchg
outsb
aas
jno
xor
pop
cs
cmc
stc
out
mov
cmp
cmp
adc
stos
test
fmul
arpl
js
fldl2t
jae
ss
arpl
add
mov
mov
push
stc
push
xor
daa
cmc
add
aas
cmp
pushf
inc
xchg
bound
cmc
xchg
add
sub
cmp
test
adc
inc
hlt
stc
mov
lock
icebp
pop
sbb
mov
sahf
repnz
or
mov
and
and
cmc
into
ljmpw
sbb
mov
push
dec
loopne
stc
add
negb
bound
rorl
push
cld
outsl
loop
sub
lret
and
adcb
js
sbb
pop
xor
sub
lods
in
mov
mov
add
test
in
ret
mov
pop
pop
call
cs
leave
push
repnz
dec
sbb
xchg
out
out
cli
pushf
mov
push
jmp
pop
mov
test
cmpsb
inc
ja
enter
sbb
pop
in
jne
loopne
xor
mov
fs
add
loopne
cmp
pushf
cmpsb
sub
fcom
pop
dec
mov
jnp
mov
addr16
and
jne
mov
addr16
mov
jg
lahf
pop
xor
or
shrl
les
in
testb
dec
xor
jle
dec
add
repnz
fisttpl
aas
cs
inc
fsubl
in
push
pop
xor
stc
in
pop
scas
and
js
dec
das
cmp
enter
cmp
lret
outsb
pop
in
inc
out
popa
scas
pop
leave
xchg
int
jmp
decl
call
es
pusha
shl
cltd
cmp
lahf
mov
pop
stos
fildl
test
call
test
cwtl
add
rcrb
xlat
jecxz
sub
cltd
xor
popf
cmp
test
mov
push
ljmp
stc
dec
mov
cs
test
xor
rorb
lret
mov
jne
inc
cmp
jg
stc
add
fisubs
pop
fwait
int3
push
std
movsb
pushf
cld
pushf
sbbl
cmp
das
cmpb
aam
sbb
mov
adc
ret
and
pop
cwtl
sbb
loop
jmp
lret
repz
lahf
ror
sahf
pop
js
in
ljmp
push
out
lahf
pop
into
push
jnp
dec
pminsw
outsb
dec
bnd
add
xor
jecxz
pop
pop
sahf
xor
ss
pop
fisttpl
shlb
xor
inc
add
adc
fldl
xchg
inc
dec
sbb
lahf
or
jae
js
and
adc
pop
jbe
xor
lcall
sbbl
push
pop
setge
mov
ljmp
ret
mov
add
mov
and
in
ret
mov
aam
daa
stos
sarb
mov
leave
inc
sbb
rcrb
add
fisubl
out
leave
pop
sbb
dec
stc
add
jmp
shl
mov
mov
jp
inc
jns
int
jno
push
mov
jb
insb
add
stos
mov
lret
push
sub
shll
repz
ss
mov
sbb
jmp
jns
pop
outsl
cmp
scas
insb
lahf
stos
xchg
jne
lods
fdivl
repnz
mov
ljmp
lods
pop
testb
es
push
pop
cmovb
mov
add
scas
loopne
sar
stos
jnp
sbb
mov
movsb
out
enter
and
call
dec
or
hlt
adc
dec
inc
mov
xchg
addr16
inc
enter
ficoms
mov
movsl
inc
sti
xchg
dec
xchg
xchg
jo
pop
and
sub
jb
xor
dec
pushf
pushl
jmp
das
adc
sub
lcall
lret
mov
inc
idiv
scas
and
jo
mov
out
outsb
push
js
adc
xchg
mov
enter
cmp
and
stos
addb
imul
jcxz
pop
das
mov
popl
stos
adc
push
jl
repnz
cmp
xchg
jecxz
cltd
pop
cmp
cld
xor
push
test
xor
shl
iret
xor
cmpsl
sbb
inc
push
outsl
divl
in
dec
push
stc
les
pusha
adc
int
xchg
cmp
clc
mov
sub
popf
shlb
sub
or
imul
jns
dec
mov
loope
data16
mov
push
das
and
cmc
sub
and
mov
adc
shr
sbbl
or
pop
xchg
pop
dec
repz
jns
in
dec
mov
lock
nop
dec
cmp
xchg
out
sti
mov
dec
adc
mov
js
or
loop
pop
imul
xchg
int
sub
xor
movsb
lret
xchg
stos
lret
mov
and
test
repnz
jle
sbb
ja
ret
ds
das
sbbl
lahf
notl
jne
fs
out
dec
xchg
push
xchg
pushf
cltd
mov
mov
movsl
movsb
hlt
inc
mov
pop
movsb
adc
jp
mov
mov
lods
jne
mov
and
inc
popf
lahf
pop
clc
dec
cmp
sbb
leave
push
sbb
leave
in
sub
in
sbb
pop
pusha
or
inc
push
arpl
xlat
bswap
mov
pop
sub
shll
xchg
out
push
mov
mov
repnz
fiaddl
pop
mov
add
aas
std
arpl
cmp
js
xor
sub
fs
sub
lods
jbe
loope
add
movb
add
jbe
das
test
dec
add
sub
xor
cltd
xor
rolb
fidivrl
in
push
push
dec
push
and
and
lods
cmc
or
lahf
das
and
cmp
loop
imul
push
aad
ds
ret
push
leave
loopne
sub
xor
test
pop
jns
out
ffreep
jge
sbb
push
aaa
ret
xchg
daa
cmpsb
mov
and
sbbb
idivb
in
sbb
bound
adc
ja
outsl
push
call
jg
push
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
movl
mov
mov
lea
mov
mov
movl
mov
xor
mov
sub
mov
movl
mov
mov
cmp
je
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
jmp
mov
test
lcall
jp
fstpl
jp
jecxz
stos
ja
into
mov
sub
fsubl
push
pop
mov
adc
loope
loopne
xchg
repz
pop
iret
imul
int
add
jnp
jo
lahf
add
cwtl
sbb
test
and
les
or
out
aad
push
cmp
arpl
sbb
push
rcrb
or
push
shll
sbb
jno
and
push
movsb
mov
cmp
mov
sub
xor
cwtl
push
jecxz
mov
das
pop
jp
jmp
lock
xor
cs
sub
xchg
in
ret
inc
xor
test
add
cmp
mov
scas
cmp
dec
outsl
dec
insl
jne
jbe
iret
loop
iret
inc
mov
aam
dec
or
dec
add
mov
sarb
and
add
pop
inc
mov
sbbl
or
cli
fs
mov
or
cs
loop
adc
mov
cld
cwtl
jb
stos
sub
add
jb
imul
lds
cmpsb
jmp
shrb
out
notl
adc
cli
ffree
pop
shrl
mov
mov
and
push
subl
in
jecxz
cs
cli
xchg
xor
pop
out
sti
cs
scas
pop
in
ret
loopne
aad
jle
outsb
leave
rcl
xchg
shll
rolb
and
cmp
push
cmpsl
fs
jp
sub
and
inc
mov
pop
data16
jg
arpl
out
inc
jns
inc
mov
dec
je
in
mov
sbb
sbb
dec
push
bound
scas
push
xchg
out
arpl
and
pop
out
cmp
ror
cmp
and
sti
or
outsb
mov
in
mov
sub
inc
lret
jecxz
insl
test
scas
movsl
inc
push
int
addr16
out
cmp
gs
push
insb
adc
jmp
push
cltd
pop
jmp
mov
and
js
jne
mov
add
inc
jno
mov
icebp
pop
divb
out
pop
mov
iret
invlpg
push
and
dec
out
lods
test
sub
jmp
std
lret
ret
nop
sti
adc
xchg
rol
mov
call
dec
inc
lds
test
lock
cmp
nop
pop
fs
in
in
sbb
nop
sbb
movsb
push
dec
outsl
popf
mov
out
lret
xchg
mov
push
sahf
dec
xor
cs
cs
xchg
mov
adc
and
push
std
fists
dec
test
sahf
lods
insl
mov
jo
lcall
ss
cmp
decl
adc
loope
push
xchg
fdivrs
loopne
or
jnp
cwtl
out
add
sub
and
jbe
adc
cwtl
mov
mov
mov
cwtl
jae
lret
and
insb
pop
icebp
faddl
pusha
jne
leave
aas
or
cli
aad
in
cmp
pop
push
or
sub
adc
rolb
pop
ret
mov
jo
fisubrs
jne
in
subb
sub
push
fsubl
addb
add
xor
cs
xchg
shll
jge,pn
popf
mov
sbb
xchg
sub
dec
lret
jle
mov
je
xchg
mov
xchg
dec
fisubrs
movsl
xchg
repnz
fiaddl
mov
sub
insl
mov
dec
addl
into
inc
int3
lahf
sbbb
ret
fcoml
xchg
jno
fs
mov
ss
mov
push
mov
js
add
pop
sahf
repnz
std
aas
out
fucom
fdivrp
dec
je
bound
cld
lock
fcmovu
mov
lret
mov
mov
push
xchg
enter
cwtl
xor
mov
jl
pop
push
or
xor
pmaxsw
jnp
into
mov
mov
xor
push
aad
jmp
loop
js
popa
lods
xchg
out
jge
ljmp
xchg
insl
lret
pop
mov
push
mov
fwait
ss
pusha
sbb
rcll
cmp
inc
add
xchg
insb
lcall
mov
ret
push
aaa
je
or
enter
xchg
adc
imul
roll
inc
pop
aaa
std
sub
inc
lock
or
cltd
sti
aad
xor
gs
sub
lret
lods
neg
adc
lahf
xchg
scas
push
mov
inc
mov
mov
test
xchg
rcll
xor
adc
ret
pusha
mov
pushf
sarl
or
test
test
add
jle
and
ljmp
jbe
jns
icebp
nop
mov
inc
fcmovbe
and
jmp
imul
fdivrs
and
in
test
fdivl
sbb
sbb
std
sbb
lods
cmp
addl
pop
jne
into
pop
bound
aam
and
xor
sub
int
inc
add
mov
loop
inc
fwait
cli
xchg
sbb
andl
test
xchg
mov
mov
xchg
xchg
jbe
jl
out
sbbl
call
in
imul
shll
arpl
inc
xor
jg
hlt
push
je
rcrb
jo
dec
push
les
xchg
add
imul
mov
mov
repnz
leavew
or
loopne
adc
cli
insl
mov
add
imul
stc
stos
inc
fisttpl
cmp
je
in
cltd
aam
fdivrl
in
es
sbb
xchg
frndint
pop
je
jl
xchg
movsb
cwtl
xchg
jne
jnp
pop
push
and
iret
or
insl
adc
clc
jnp
push
or
int
in
pop
xchg
gs
repnz
mov
movsb
imulb
stos
mov
test
rcrl
inc
mov
shlb
dec
and
repz
add
pop
aam
stos
mov
mov
jae
push
sub
jmp
cwtl
xor
push
adcb
popf
xor
push
inc
mov
sub
inc
lds
mov
mov
icebp
pop
sbb
cmp
incl
xchg
xor
pop
sbb
popa
sti
fistps
xlat
mov
stos
push
mov
adc
int3
sub
loopne
and
xchg
movsl
push
ficompl
and
aaa
add
fistps
xor
movsb
cld
mov
xchg
lea
pop
jge
rclb
mov
xchg
imul
pop
adc
mov
aam
ja
pop
rcll
flds
or
aam
jnp
inc
lds
popf
cli
call
add
fadd
shl
mov
mov
pusha
fsubp
cwtl
mov
or
inc
cltd
mov
push
push
cmpsl
loope
int
xchg
into
pop
or
xor
es
adc
sub
or
inc
lcall
and
enter
push
xchg
out
sub
push
xchg
mov
dec
out
pop
adc
add
test
cli
or
call
fisubrs
cmp
out
cmp
ss
aam
mov
test
push
insb
repz
leave
mov
into
cs
xor
imul
outsb
jp
xchg
pop
repz
or
push
es
jbe
lcall
invd
adc
sub
mov
mov
cmp
cmpsb
adc
push
mov
out
mov
sbb
jns
cld
jecxz
inc
or
adc
das
jg
xor
in
pop
inc
mov
aam
dec
inc
xor
jg
call
stos
lods
in
dec
out
cli
call
mov
ss
les
ret
cmp
lret
xor
jge
ja
cs
inc
addb
out
jg
ficomps
xor
inc
sbb
icebp
movsb
pop
mov
push
push
pop
and
jge
cmpsl
sbb
pop
les
add
dec
and
xorl
jle
arpl
jo
inc
xor
std
aas
dec
or
adc
out
movsb
loope
xchg
and
scas
ss
mov
or
dec
cli
mov
and
out
cmp
inc
rorb
test
sbb
sbb
push
lods
inc
cmp
stos
dec
cwtl
shlb
ds
adc
or
jmp
pop
shlb
andl
fs
lret
fidivs
sbb
cmpsb
imul
sbb
pushf
mov
mov
mov
out
out
in
sbb
and
mov
adc
popf
mov
cmp
sbb
sbb
adc
jne
popf
sub
mov
and
push
mov
loopne
sahf
imul
jge
push
and
cmp
shl
sbb
shlb
xchg
xchg
aas
popa
fidivs
stos
push
pushf
jno
sbb
xorl
fldt
pop
mov
mov
push
or
incb
or
mov
and
mov
mov
test
or
out
dec
push
pop
mov
sbb
cmp
cmp
jmp
fcmovb
es
insl
lcall
fstpt
mov
inc
pop
mov
sbb
jmp
fists
aas
cmp
leave
xchg
sub
sub
pushf
mov
mov
fidivrs
leave
out
mov
and
pop
add
push
xor
sbbl
inc
daa
imulb
sahf
push
es
repnz
movsb
out
ret
inc
enter
daa
cli
enter
cli
jp
movsb
idivl
push
ja
vmread
andl
add
cli
jmp
jmp
jns
cmp
lahf
sbbl
out
cmp
mov
mov
jae
in
addr16
mov
mov
push
pop
lods
xor
insb
mov
and
test
pop
sti
fisttps
adc
pop
call
mov
shlb
testb
mov
mov
push
mov
mov
in
push
and
ja
push
adc
aas
sbb
jo
mov
bound
into
jge
aam
outsb
cs
and
fs
jge
in
es
xchg
mov
nop
int3
mov
sti
sbb
add
fwait
mov
xor
iret
xor
and
xrelease
or
loopne
push
sbb
pop
nop
in
push
insl
push
mov
jmp
xchg
leave
push
fsts
aaa
shl
fdiv
dec
xor
daa
gs
xor
lea
cmpl
sub
repz
stos
sub
ljmp
xor
add
mov
mov
mov
hlt
shrb
push
sbb
mov
ljmp
imul
fnsave
cmp
cmp
addr16
and
adc
rcl
scas
outsb
mov
test
xchg
xor
xchg
lea
jecxz
xlat
pusha
mov
lcall
or
xchg
imul
and
ja
push
fstl
adcb
mov
jns
iret
sbb
daa
in
ss
into
sbb
divl
in
gs
mov
cmpsl
fisubs
xor
xorb
mov
sbb
inc
mov
add
adc
sbb
pop
sarl
pusha
mov
andl
les
loope
loopne
xchg
rorb
les
lahf
out
fldcw
sbb
je
dec
mov
push
adc
lret
dec
pop
xor
fisttpll
std
xor
xor
mov
inc
popa
rolb
adc
shll
xor
incl
cmp
xor
mov
lret
jmp
cmp
or
add
cmp
pop
sub
movsl
push
jmp
ljmp
scas
mov
shll
xchg
lcall
mov
lods
sub
ljmp
nop
adc
xchg
inc
push
mov
jno
dec
in
and
cmp
fiadds
jecxz
scas
adc
xchg
jmp
adc
xor
call
xor
call
sar
shrb
xchg
inc
gs
pop
and
divl
push
popa
nop
and
jo
aaa
xorl
xor
pop
leave
pop
adc
lcall
stos
jg
xor
mov
dec
sub
jmp
xchg
push
outsl
fwait
dec
cmpsl
jae
and
pusha
mov
icebp
mov
data16
inc
gs
call
pop
aaa
add
xchg
mov
mov
test
mov
xor
movsl
mov
std
sbb
or
mov
mov
sbb
cld
pop
out
and
mov
in
or
fsubl
xchg
and
repnz
ficomps
push
jge
mov
test
add
sarl
scas
jns
push
cmpsl
mov
into
adc
cmpsl
xchg
xchg
dec
push
mov
int
mov
das
mov
mov
push
lds
or
ljmp
adc
loop
addr16
push
cmp
xchg
jecxz
xchg
fisubrl
pop
mul
adc
dec
iret
clc
mov
sub
jo
into
movsl
push
add
jnp
inc
adc
shrb
std
daa
test
rolb
ss
lahf
inc
mov
sbb
arpl
repnz
scas
add
inc
mov
jne
sbb
mov
lret
pop
xor
pop
pop
mov
add
pop
imulb
lret
push
sub
inc
xor
xor
mov
jmp
call
push
push
sar
add
movd
cltd
cmp
pop
push
imul
sahf
add
dec
or
and
lock
jb
bound
lcall
test
mov
or
or
and
push
into
xchg
mov
es
inc
testl
dec
push
xchg
pop
movsl
int3
xlat
clc
mov
das
pop
xchg
lcall
jae
xchg
in
lods
push
loope
jmp
mov
fs
xchg
aam
outsl
jge
prefetcht2
aad
lods
test
push
jg
mov
je
mov
sub
inc
cmp
push
sub
sub
sbb
add
push
lahf
inc
jl
add
adc
push
outsb
outsb
xchg
mov
scas
pop
cli
jg
jno
adc
ficompl
test
push
and
mov
mov
xor
call
and
sub
xchg
call
hlt
imul
sbb
ret
shrb
or
or
mov
icebp
in
inc
xor
scas
push
out
add
lock
sbb
mov
cmp
sub
ret
add
decl
push
xchg
arpl
lds
add
add
arpl
addl
bound
xor
hlt
pushf
hlt
shrl
push
dec
ret
cli
int3
mov
dec
out
xor
pushf
xor
ds
out
push
adc
push
mov
aam
loop
mov
xor
ljmp
cmpsb
andl
repz
pop
dec
and
adc
subb
jb
pop
pop
inc
push
fsubs
xchg
mov
mov
add
or
add
mov
add
push
cltd
cltd
xchg
aam
pop
out
jo
dec
cmpsb
xor
scas
push
xchg
lock
ja
imul
fiadds
test
in
adc
rcrb
jge
sub
clc
repnz
mov
hlt
mov
test
inc
inc
ljmp
jle
mov
push
in
mov
xchg
imul
and
sbb
in
xor
leave
setbe
xchg
mov
icebp
dec
jnp
inc
xlat
imul
js
mov
dec
out
push
insb
ljmp
fsts
nopl
adc
dec
das
dec
aad
mov
and
and
mov
hlt
dec
xchg
pop
outsb
mov
mov
nop
jg
or
xchg
repnz
pop
inc
and
cmp
pusha
sbb
inc
aaa
sub
mov
mov
daa
je
loope
cwtl
ror
arpl
fs
outsb
or
mov
cwtl
cmp
scas
scas
in
daa
out
add
ljmp
shlb
jl
outsl
sub
cli
cmp
insb
sub
out
loope
mov
movsb
fadd
add
test
xor
cmp
or
stos
lds
or
xor
movsb
push
or
mov
and
push
dec
push
fwait
imul
mov
frstor
je
test
gs
sbb
ds
out
xor
dec
or
out
aas
push
cmpsl
jb
push
mov
mov
lcall
pop
and
cmpsb
outsl
xor
jnp
lods
cwtl
sub
jo
cmp
add
clc
or
pop
pop
loop
push
leave
push
xor
adc
lcall
mov
pop
jecxz
jg
lods
leave
mov
inc
xor
dec
jge
cmp
fldenv
mov
xchg
mov
xchg
add
orb
inc
sbb
and
push
dec
sbb
mov
ss
sub
insb
xor
js
nop
mov
outsb
xor
xor
or
pop
lock
aad
dec
repz
cmp
lret
sub
mov
xor
ficoml
sarl
or
dec
outsb
lcall
lret
hlt
push
ficoms
call
mov
add
shl
iret
mov
push
clc
adc
push
repnz
jp
fstl
std
jo
push
pop
cmc
lret
lods
or
and
xor
add
stc
popa
jo
ljmpw
and
ss
stos
mov
mov
jae
call
mov
fsubrp
inc
neg
jle
push
adc
sbb
in
xchg
arpl
stos
mov
stc
mov
push
push
xor
mov
jne
adc
lret
sbb
cmpsb
or
ss
in
jb
mov
inc
mov
or
out
cmpsl
ret
and
lahf
cmpsb
mov
jp
jge
pop
jg,pn
sub
push
jecxz
inc
pop
pop
into
out
push
jle
jecxz
clc
outsl
mov
fimull
fidivl
lock
pushf
das
adc
icebp
sbb
or
push
arpl
adc
push
addb
cld
fisubrs
std
hlt
sti
test
addl
jmp
and
les
dec
fistl
pop
push
movsb
mov
in
loope
sub
int3
adc
aaa
je
adc
xor
mov
in
hlt
cwtl
in
mov
popa
pop
imul
push
notb
cmp
sub
testl
fcomps
add
mov
push
mov
test
daa
adc
add
jne
ss
cmpb
lds
movsl
mov
jp
cmp
mov
or
cmpsb
pop
cmp
jno
push
pop
dec
pop
mov
in
js
cli
dec
inc
bound
push
filds
pop
ds
stc
mov
or
mov
inc
jo
inc
lock
sub
sbbl
in
lock
adc
dec
mov
or
push
imul
xlat
fistl
cli
idivl
or
test
jp
hlt
add
jge
negl
sbb
inc
lahf
dec
call
adc
addr16
dec
dec
sbb
mov
xor
pusha
cmp
movsl
jge
int3
jmp
shlb
cs
adc
es
xor
pusha
leave
jno
les
xor
aaa
xor
lret
dec
inc
hlt
push
lods
sub
lds
lea
jns
outsb
jle
mov
sub
ret
out
lods
lret
cs
or
mov
dec
sbb
cmpsl
pushf
aam
ret
xchg
mov
and
fmuls
les
push
pusha
xchg
pop
fimuls
stos
sti
cwtl
pop
xor
mov
outsl
pop
test
adc
inc
xor
add
cmp
int3
mov
or
popa
dec
out
dec
ret
mov
pop
mov
es
mov
mov
dec
lret
fwait
aad
mov
cmpsb
cld
xor
add
rcll
lret
adc
nop
repz
sub
mov
test
rcrb
lock
sti
pop
out
jae
insl
push
loopne
hlt
lods
std
movsl
stos
xchg
enter
xchg
sbb
inc
jg
mov
mov
xchg
xchg
or
in
hlt
pop
dec
push
imul
add
scas
push
fbld
jo
jae
or
or
out
outsl
mov
js
jo
jmp
in
lock
xchg
loope
sub
jnp
add
fldt
xlat
mov
jno
in
movsb
cmp
aam
or
and
les
add
stos
mov
pop
jp
lds
or
es
mov
int3
pushf
sbb
aas
inc
iret
push
pushf
addr16
rolb
leave
rolb
pop
mov
dec
mov
hlt
pop
js
adc
out
xchg
inc
pop
hlt
and
mov
in
arpl
sub
mov
dec
add
xor
push
ds
pop
je
sub
bound
sub
in
jb
adc
xor
sar
in
sbb
xchg
pop
data16
dec
out
sbb
dec
jg
xchg
cmpl
cwtl
es
sbb
imulb
outsb
fptan
mov
push
shll
clc
pop
mov
jge
mov
inc
cmp
sub
mov
movsl
iret
jno
jns
aad
lods
stc
mov
mov
or
icebp
dec
and
or
dec
gs
fsubs
push
fnstenv
cwtl
xchg
icebp
dec
lret
inc
fiaddl
mov
push
sbb
je
fcoml
ja
add
xchg
dec
xchg
pusha
xchg
movsl
mov
sti
addr16
xorps
mov
mov
or
mov
shlb
cmp
pushf
or
jle
notl
push
or
mov
das
mov
je
test
rolb
inc
shlb
aam
scas
jne
hlt
out
ljmp
loopne
adc
adc
xchg
push
ja
xchg
sbb
test
rolb
imul
nop
lods
outsl
sub
inc
inc
cld
shll
loopne
push
or
ret
mov
std
dec
andb
lret
ss
sbb
and
adc
xor
in
fcmovne
mov
mov
inc
or
xor
scas
pusha
sti
push
pop
subb
jg
inc
ret
pop
in
into
jecxz
call
push
inc
and
push
jno
xchg
cmpl
aam
add
xchg
shlb
repz
addr16
nop
dec
hlt
aad
fistps
xchg
xchg
test
imul
std
cwtl
add
pop
fildll
out
ja
jae
jle
notb
lret
mov
adc
ljmp
mov
test
and
pop
mov
imul
and
outsb
ret
add
mov
daa
adc
mov
idivl
addr16
and
mov
imull
adc
out
into
push
call
sarl
mov
test
adc
or
pop
jbe
jmp
dec
dec
push
pop
lods
std
notl
jle
xlat
and
cmpsb
int3
push
out
jmp
sbb
repz
sbb
ja
push
inc
add
and
push
data16
add
mov
lods
sarl
mov
mov
stos
pop
jne
mov
mov
in
lods
push
in
jl
aad
cli
push
das
lahf
sbb
popf
mov
fldcw
test
push
popa
mov
add
fsts
inc
or
cli
pop
adc
jmp
mov
cmp
push
fs
mov
mov
mov
out
mov
jp
mov
push
cmp
scas
xchg
xchg
jl
push
test
xchg
sub
lods
daa
mov
and
je
outsl
pop
sbb
jg
dec
pop
scas
lret
imul
inc
popa
mov
cmpsb
xlat
aaa
addr16
fadd
movl
adc
mov
push
decb
mov
adc
or
add
push
ds
inc
push
mov
orl
fstpl
cmp
mov
call
sbb
call
mov
pop
mov
jmp
test
lahf
jg
xor
pop
shll
std
ds
cltd
mov
lds
mov
jae
lods
cmpsl
bound
push
adc
push
inc
lds
mov
insb
adc
cltd
in
ds
jl
rcr
dec
pop
fwait
add
xor
adc
jecxz
ret
mov
dec
cmp
fwait
sarb
fimuls
mov
push
or
sbb
scas
imul
cli
cmc
ret
mov
pushf
mov
enter
pusha
popf
lret
mov
jo
sbb
dec
out
imul
xor
mov
add
loop
pop
in
imul
dec
ret
xor
dec
je
add
mov
push
mov
mov
pushf
jb
in
xor
mov
divl
push
imull
adc
lcall
in
mov
mov
and
jo
lahf
xor
daa
in
mov
push
sbbb
cmp
idivl
cmp
xor
xor
mov
lahf
sbb
popl
dec
cmpl
enter
sbb
test
xlat
adc
fistpl
dec
je
cmp
pop
hlt
mov
sbb
jle
mov
incb
stos
xorl
pop
mov
inc
push
sbb
adc
jge
push
mov
cs
aad
aaa
movsl
insl
ss
bound
call
sarl
into
int
movsb
jp
lods
int
pop
jecxz
xchg
inc
out
mov
sbb
mov
lcall
aas
orb
notb
cwtl
arpl
fsubl
in
push
xchg
fdiv
imul
pushf
orb
icebp
add
pop
popa
cltd
pop
idivl
pushf
popl
test
mov
cltd
cmpsb
pop
dec
mov
sub
fists
test
inc
repnz
cmp
mov
and
mov
in
int
add
jp
movsl
mov
lcall
loopne
mov
int3
dec
dec
and
in
jmp
out
ja
and
mov
jge
push
inc
xchg
xchg
inc
xor
mov
add
adc
btr
imull
jp
inc
je
aam
sbb
daa
inc
dec
and
lret
xchg
inc
mov
cmpsb
pop
mov
or
or
sbb
push
fwait
aaa
or
jmp
mov
jp
xchg
push
mov
lea
mov
mov
pushf
xchg
fists
cmp
sahf
fs
mov
mov
adc
out
fidivrl
jne
lods
fldpi
xchg
inc
test
mov
push
mov
add
inc
in
lock
aas
sub
add
rcr
cmpsb
loope
pop
shll
lock
adc
mov
iret
mov
mov
push
sbb
mov
data16
scas
xchg
push
cmp
arpl
repz
clc
cmp
inc
sub
imul
push
cmc
adc
push
dec
pop
jecxz
lea
adc
and
mov
nop
adc
add
mov
cld
inc
mov
inc
cmpsb
add
nop
xchg
in
mov
pop
hlt
roll
mov
mov
lods
pop
fisubrl
filds
pop
js
and
or
cmc
xchg
ret
sub
hlt
cmp
mov
rclb
nop
mov
lods
push
dec
dec
aad
loopne
mov
arpl
cs
and
out
or
cltd
or
loope
mov
les
dec
int3
push
call
adc
push
lret
mov
or
enter
aas
rcrl
mov
or
scas
mov
jmp
mov
or
inc
mov
icebp
insl
out
mov
sqrtps
loope
jecxz
scas
out
in
lcall
stos
push
cmp
mov
cwtl
notb
ja
aas
xor
add
mov
or
repnz
add
imul
rorl
test
adc
ljmp
sbb
mov
test
pushf
icebp
mov
and
add
fwait
and
pushf
sub
mov
jl
scas
addr16
bnd
sbb
les
in
push
xchg
lods
xor
jecxz
sti
and
subl
pop
mov
adc
adc
rclb
subl
push
add
dec
jae
push
xchg
cmpsl
inc
push
call
inc
adc
jl
push
mov
mov
adc
pop
xchg
add
pop
dec
jns
sbb
mov
pop
sub
adc
mov
jne
fsubrs
jae
pop
xchg
push
stos
rclb
mov
rolb
pusha
addr16
mov
inc
cmp
repnz
mov
and
pop
mov
xchg
pusha
jno
hlt
je
jle
es
pop
in
inc
cld
mov
popf
dec
iret
insb
aaa
arpl
es
cli
xor
lea
sbb
repz
sbb
mov
jle
and
push
push
js
adc
adcl
xor
ss
adc
fstpt
ljmp
and
mov
imul
ja
mov
popf
in
hlt
jmp
add
push
and
fnstsw
test
sbb
mov
xlat
cmp
inc
jae
sbb
mov
push
aam
outsl
test
add
add
mov
jl
sbb
cmp
push
fidivs
insl
shll
cwtl
cwtl
cli
sbb
bound
popl
sub
int
hlt
xor
adc
ja
test
sub
pushl
call
mov
push
daa
xor
jns
dec
lahf
push
outsb
inc
into
pop
inc
pop
pop
adc
sbb
pop
pop
mov
lods
movsl
fdivl
and
push
stos
test
mov
adc
adc
ja
sarb
pop
arpl
outsl
rcrl
aad
lods
mov
and
call
lret
lcall
ss
test
jle
push
and
divb
inc
push
lods
cmp
loop
mov
add
push
cli
jge
sti
mov
fsubl
inc
push
aam
nop
xchg
mov
add
pop
push
in
inc
ret
push
pop
lock
int
fldcw
fsubrl
daa
add
test
lret
pop
pop
fimuls
mov
mov
inc
fstpl
cmp
aaa
and
jecxz
notb
pop
jmp
and
push
lcall
into
jg
enter
popa
or
iret
pop
cmovp
rcrb
or
push
sahf
jae
sbb
dec
pop
rorb
sub
pop
jne
xor
mov
pop
sub
aaa
int
pushf
or
pop
xor
push
mov
xchg
xchg
dec
sbb
cmp
mov
and
mov
inc
dec
aad
lea
inc
fstps
mov
xchg
push
mov
add
lcall
pop
int3
mov
inc
or
fwait
lcall
jmp
clc
movsl
pop
cmp
cmc
xchg
pop
xor
push
sbb
test
aam
sar
cltd
mov
pushf
adc
bound
mov
insl
dec
cmp
movb
clc
sti
mov
jns
cmc
mov
jb
insl
cmp
cmp
jne
mov
mov
mov
mov
xor
xor
add
add
mov
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
xor
sub
xor
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
jmp
mov
dec
mov
fiadds
roll
xor
fstpl
jp
enter
int3
ss
push
mov
in
mov
js
notl
enter
mov
mov
in
xchg
mov
sub
inc
in
cmp
popf
fdivrs
or
cmp
aas
ficomps
stc
or
rolb
ret
mov
nop
and
outsb
lods
jae
or
jle
jl
jl
dec
sbb
loope
push
mov
mov
sub
fcmovnb
mov
addr16
pushf
in
sbb
in
testl
dec
xlat
out
sbb
or
dec
dec
inc
pop
lods
enter
mov
mov
loopne
shlb
push
or
ret
repz
out
mov
xor
or
cli
in
xchg
lahf
arpl
xor
pmuludq
adc
pop
push
gs
mov
out
lds
jae
imul
in
and
ret
inc
inc
adc
lock
fs
pushf
push
loope
mov
pop
jno
cmc
ja
fisubs
xchg
std
push
into
lods
je
adc
dec
jnp
dec
cmp
sbb
adc
push
loopne
sbb
test
xor
std
in
lahf
cli
fisubl
or
pop
sbb
fwait
stos
xchg
cltd
out
and
leave
ret
sub
dec
push
and
sbb
cld
bts
sbb
pop
out
testl
push
dec
out
cwtl
dec
or
pop
xchg
fisubs
and
inc
sbb
cmpsb
dec
jns
mov
jmp
push
pop
pop
ds
sub
ret
loop
inc
sbb
jmp
mov
mov
pop
sub
mov
push
jne
sarl
jb
xchg
cmp
popa
mov
pushf
xor
sbb
fwait
ret
pop
hlt
pusha
into
pop
ja
lahf
adc
dec
ss
cwtl
inc
xor
stos
enter
pop
pop
xchg
in
jno
lahf
lock
mov
shll
xchg
inc
mov
xchg
add
and
cmc
mov
push
js
hlt
fidivrl
leave
int3
sbb
pop
add
loopne
cld
int
jg
mov
popa
pop
out
mov
and
or
clc
jb
notb
out
xor
jl
repnz
clc
jnp
mov
out
push
cmp
test
fmuls
test
xchg
inc
shll
sarb
xor
mulb
scas
ret
inc
ficomps
push
lock
movsb
adcb
cmpsl
decb
shll
mov
movsb
cs
out
xchg
mov
mov
cmp
pusha
jno
enter
aas
push
push
cmp
adc
xchg
cmp
dec
leave
lods
dec
cs
cmp
and
mov
mov
mov
std
adc
and
mov
push
scas
push
inc
cmp
sub
outsb
pushf
lods
push
imul
xchg
adc
mov
xchg
pcmpeqw
rolb
test
and
and
les
enter
xchg
popa
repz
outsl
fwait
outsl
adc
sahf
test
out
loope
sbb
xor
mov
arpl
fimull
mov
js
imul
or
filds
sbb
mov
jbe
dec
pop
gs
xorl
das
fldl
sbb
xor
je
call
outsb
addb
sub
ret
rcl
addr16
and
stos
outsb
mov
sahf
ret
iret
iret
pop
lcall
mov
adc
jg
js
out
cli
xorl
cmpsl
xchg
mov
adc
out
jge
loope
sub
negl
mov
xor
insl
inc
lret
clc
jmp
lcall
mov
push
sbb
insl
fsubs
or
adcl
das
aam
sbb
fwait
adc
mov
rorl
mov
int
inc
sbb
push
out
jg
jno
adc
adc
adc
aam
mov
insl
jmp
insb
iret
and
js
int
push
testl
clc
and
mov
jg
sahf
shlb
dec
loope
cmovle
sti
mov
pop
xor
jne
dec
test
loop
jmp
push
jmp
adc
dec
mov
xchg
push
xchg
jl
sbb
dec
xstore-rng
cmpsl
adc
sahf
cmc
mov
int3
or
out
pop
pusha
incb
cs
sub
andb
fcmovb
lods
mov
pop
and
jae
aad
xor
and
xchg
cmp
jl
or
add
cmp
adc
or
xchg
fstpt
cmp
cmp
inc
adc
mov
mov
push
int
sbb
and
sbb
mov
enter
pop
push
aam
int
mov
jno
inc
pop
bound
push
cmpsl
cmp
lods
mov
or
push
and
stos
dec
rorb
cltd
repnz
mov
xchg
into
add
lahf
mov
bound
sarl
hlt
in
int3
sbb
mov
hlt
ss
fs
inc
test
dec
ret
test
jp
imul
xchg
xchg
js
mov
rclb
push
pop
imul
mov
jbe
mov
ficoms
or
popf
add
mov
fidivrs
insb
ljmp
sub
adc
pop
fstl
out
out
hlt
push
dec
push
mov
sahf
popa
cmp
cmpsb
lret
bound
call
mov
xchg
adc
xchg
clc
pop
xchg
ret
mov
pushf
movsl
mov
xchg
dec
test
data16
repnz
lods
nop
mov
andb
mov
flds
xchg
lea
cmp
mov
push
jno
add
adc
pop
xchg
inc
mov
aaa
out
push
stc
pop
xchg
cmpl
mov
mov
inc
les
push
icebp
aas
cli
dec
pxor
xchg
adc
add
xor
mov
popf
push
inc
inc
xchg
mov
in
xor
in
xor
outsl
scas
and
notl
mov
rclb
sub
dec
aas
xchg
stos
mov
cli
adc
pop
imul
nop
add
leave
aad
aam
stos
push
jmp
xorb
insb
shrl
test
cs
mov
fs
ror
mov
cmp
sub
mov
in
mov
mov
loop
jb
or
push
adc
aas
lods
xor
fsts
pop
pop
jecxz
xor
stc
mov
pusha
mov
out
mov
mov
or
outsl
jp
add
pusha
dec
cmc
out
invd
ja
sub
lret
adc
mov
andb
pushf
xchg
jo
inc
shl
xchg
rcrb
rcrl
fldenv
mov
lahf
push
pop
mov
jle
fnstsw
aas
pop
lea
test
stc
mov
lds
or
test
iret
xchg
mov
sub
pop
or
test
leave
enter
sbb
add
xchg
jo
mov
adc
icebp
adcl
dec
into
call
push
inc
shrb
mov
fbstp
push
inc
sub
xchg
mov
or
insb
and
hlt
xor
ss
sbb
mov
lea
mov
sbb
push
int
hlt
into
ss
test
mov
les
jl
imul
js
inc
push
cmp
and
xchg
ret
imul
fisubl
out
out
rep
jno
jns
sbb
and
popa
fnstsw
xchg
pop
call
mov
pop
clc
or
cmp
ret
mov
push
xchg
daa
cmp
cld
stos
add
inc
mov
outsb
lods
movsl
mov
leave
out
hlt
cmp
ss
sub
inc
imul
cmp
inc
and
jno
or
rcrb
cmpl
sbb
push
add
lcall
xor
movsl
adc
jecxz
jp
jp
mov
mov
lock
jb
cltd
and
adc
ljmp
push
xchg
inc
jecxz
ss
mov
sbbl
fildll
fcmovb
cmpsb
cmc
mov
lcall
lock
in
pop
dec
push
xchg
mov
test
push
test
mov
lea
and
popa
push
ret
daa
bound
repz
jae
xor
pushf
out
mov
cmpsl
jns
jae
fldenv
sub
es
inc
sbb
addr16
repnz
pop
xchg
mov
jmp
mov
out
movhps
subb
and
imul
jge
ja
hlt
idiv
xchg
push
xchg
xchg
sub
mov
sti
pop
jle
int
jno
popa
repz
test
test
mov
or
pop
xchg
sub
inc
xor
pop
sub
add
jmp
arpl
aaa
push
stos
shrl
add
sarl
mov
les
in
inc
push
fmul
cmpsl
iret
jl,pn
push
mov
idivl
or
dec
ficompl
jl
sub
ret
cmp
rcll
xor
mov
sbb
les
xchg
js
or
cmp
data16
dec
data16
pop
xchg
call
mov
les
xchg
popa
mov
adc
ss
nop
pushf
gs
adc
cs
or
psubw
xchg
insl
ret
shll
xchg
into
clc
mov
mov
movsl
jp
popf
jp
cltd
test
leave
mov
bound
xchg
inc
mov
inc
imul
bound
call
mov
hlt
mov
push
pop
or
int3
add
aas
sub
cmp
inc
xor
int
test
sub
mov
outsl
movb
adcl
cmp
pop
adcb
loopne
sti
mov
scas
jg
lock
andb
mov
jno
je
cld
push
and
sub
mov
push
add
xlat
sub
push
lods
addr16
pand
push
outsl
rorl
lret
xchg
fs
xchg
dec
cld
cmpsb
jge
mov
dec
sub
and
add
xchg
sbb
shl
fcmovnbe
and
add
fistpll
push
mov
sbbl
xchg
or
adc
adc
aas
push
cmp
iret
mov
je
sti
push
test
in
sub
movsb
imul
fs
push
iret
add
mov
cmp
rcr
push
xor
repz
scas
shl
popf
and
test
dec
jge
cwtl
dec
sbb
mov
pusha
xor
nop
cmp
stos
test
repz
mov
cmp
cmp
xchg
loopne
and
cmp
negl
fistl
or
xchg
lcall
repnz
mov
push
jbe
dec
push
sahf
sahf
stos
sbb
gs
push
sub
aam
movsl
mov
roll
in
or
repz
mov
push
leave
and
jg
mov
call
add
ss
in
push
ret
xlat
push
dec
sub
js
inc
pop
and
scas
mov
inc
sub
clc
sub
dec
push
jb
lcall
fisttpll
int3
add
sahf
insb
mov
xchg
lcall
pop
scas
pusha
lret
cltd
shr
xchg
xor
in
jae
mov
pop
xor
data16
pop
popf
test
xchg
mov
data16
cltd
cmp
cmp
loopne
or
pop
aas
push
pop
mov
mov
jg
mov
lahf
push
fiadds
fsts
cwtl
call
cmpsb
pop
jb
xchg
jne
shll
mov
cmc
or
sub
cmp
push
addl
rorl
mov
decl
rcrb
inc
mov
mov
pop
cwtl
ja
jae
and
arpl
cmp
mov
push
jmp
pop
dec
cli
cmp
cmp
lret
test
aam
ret
movsl
cs
or
fdivrs
push
imul
sbb
xchg
cmp
cmp
sbb
dec
xor
lahf
add
fcompl
mov
pop
xchg
xor
inc
in
adc
das
ljmp
int
and
lcall
inc
xchg
cmp
xor
add
icebp
lahf
hlt
jbe
rorb
adc
test
ds
xlat
gs
or
adc
sti
ljmp
push
out
ja
dec
add
mov
add
xchg
add
and
jnp
jle
sub
andl
popf
push
repz
push
push
mov
je
stos
cwtl
pop
push
mov
scas
and
ds
stos
sbb
jecxz
mov
xor
sbbl
data16
lret
sbb
lret
das
scas
bound
xor
jno
gs
inc
sarl
pop
mov
addl
js
xchg
adc
cmp
mov
repnz
inc
sbb
rorl
pop
mov
mov
popf
daa
or
test
mov
push
dec
push
mov
sbb
gs
stos
and
loopne
xchg
lds
dec
mov
xchg
jl
mov
les
pushf
mov
lret
dec
pop
rorb
add
sbbl
in
fcompl
pop
dec
add
movsl
pop
fbld
rorb
xor
add
lods
lret
in
add
fimull
fstl
jle
jg
mov
xchg
mov
and
mov
xlat
jecxz
fstpt
out
jae
xchg
out
sub
cwtl
add
push
mov
pusha
xor
jo
jmp
out
nop
push
push
jns
aas
sub
stc
pushf
jae
or
push
imul
push
int3
ss
outsb
mov
lret
add
add
bound
dec
fs
cld
sbb
dec
push
hlt
or
sbb
cmp
cltd
or
xchg
mov
sub
mov
shl
out
mov
popf
cmp
je
adc
sbb
pushf
mov
subb
es
repz
movsl
push
js
cmp
dec
push
into
push
mov
push
pop
stos
xor
aas
inc
in
sbb
sbb
mov
cwtl
cmp
pop
jbe
jo
pop
divb
lret
pminsw
imul
xchg
inc
loop
push
sbb
mov
out
pop
cmp
add
adc
cld
cs
mov
cmp
stos
or
je
insb
in
test
lcall
clc
rorl
cmc
push
lods
es
xchg
fs
in
pusha
enter
mov
mov
xchg
int3
pop
mov
xor
loop
popa
out
cmc
cli
adc
cmc
mov
mov
xchg
popf
and
sub
cmp
fsubs
aas
cmp
mov
test
int
jl
repnz
lods
addr16
mov
clc
xlat
ret
test
mov
inc
xchg
es
sub
jae
xor
aam
cwtl
jle
fnstsw
mov
ljmp
push
rolb
movsb
lahf
xlat
or
pop
push
inc
pop
nop
repz
leave
js
jns
es
push
fildl
jle
inc
sub
and
testl
dec
test
jle
insb
loop
inc
mov
adc
xor
mov
and
pushf
js
xchg
xchg
fidivs
xchg
pushf
mov
sub
insl
push
and
test
xor
aaa
mov
hlt
push
stos
out
int
orb
push
inc
js
enter
pop
lods
and
ret
sbb
adc
rol
sahf
jo
xchg
xchg
fidivrs
je
cwtl
push
out
adc
sub
mov
jno
sbb
sub
mov
fcoms
pop
gs
fs
orl
cmp
push
or
repz
and
fisubl
xor
dec
pop
negb
ljmp
jne
jns
lods
jge
ja
inc
cmpl
mov
sub
mov
add
loop
test
xor
popa
test
outsl
mov
sub
mov
sbb
mov
or
xchg
into
int
mov
ret
push
rcr
sbbl
push
js
into
sbb
test
dec
mov
pop
inc
sbb
and
and
cld
xor
faddl
and
and
aad
mov
cmp
outsb
lret
add
xchg
mov
loop
push
or
leave
mov
test
shll
mov
mov
insb
mov
cmp
daa
xchg
sub
int
xchg
and
out
ss
jge
fistps
or
or
clc
fs
mov
fisubrs
xor
push
add
mov
decb
test
aaa
inc
loope
fidivrl
mov
jmp
outsb
jmp
sarl
pop
into
add
stos
cmpsl
lock
pop
mov
sbb
les
add
jo
fdivrs
xor
mov
daa
xor
in
add
dec
mov
jo
cmp
ret
in
adc
bound
mov
push
cmp
mov
xorl
loope
dec
jp
arpl
add
add
movsb
test
cmpsl
and
mov
test
in
divps
js
adc
cmp
stos
test
jge
sbb
pop
out
cltd
and
push
ficoml
repnz
into
inc
xor
sbb
fdivs
cli
mov
inc
outsl
inc
sti
popf
gs
pop
jge
mov
mov
imul
lahf
jp
dec
scas
cmpl
mov
mov
pop
adc
frstor
push
push
daa
mov
cmp
shrl
ret
and
scas
lret
bound
pop
enter
out
aad
fdivrs
cltd
xlat
pop
dec
imul
push
and
das
mov
loopne
dec
and
into
pop
jl
cmpsl
inc
push
mov
push
lcall
xor
mov
pop
sbb
mov
mov
push
hlt
sbb
imulb
xor
pop
cld
filds
pop
adc
inc
inc
sar
and
sbb
jae
btc
fldcw
adc
movsb
mov
loopne
imul
add
inc
roll
bound
or
cmp
cld
jno
inc
xchg
call
fistl
jbe
aaa
push
xchg
incb
aad
popf
mov
push
push
jle
push
les
cmp
xchg
jp
mov
outsl
cmp
mov
into
in
mov
mov
xchg
stos
pusha
mov
jb
jo
sahf
cmp
imul
cmc
mov
loopne
cmp
test
mov
rol
inc
pop
movsb
mov
ficoml
in
jae
xor
inc
fld
and
call
icebp
sbb
iret
xor
es
roll
push
pop
add
insl
ss
insb
mov
ja
xor
insb
xor
rcrl
test
repnz
les
das
add
push
movsl
aas
rolb
mov
insb
jne
in
lret
dec
mov
flds
int
mov
lods
fucomi
flds
sbb
mov
sbb
push
xor
xlat
push
outsb
mov
in
stos
int
or
lahf
jb
push
cli
loop
lret
jmp
xchg
jge
gs
nop/reserved
mov
js
adc
xchg
cmp
sbb
or
cmp
pop
popa
xor
or
pop
sub
insl
jl
mov
dec
cs
lret
cmpsl
imul
cmpsb
xchg
sahf
add
or
push
or
dec
or
enter
push
or
in
cs
xchg
imul
sub
sub
dec
cmp
xchg
movsl
pop
testb
lret
pop
push
movsl
fs
adc
inc
add
sbb
cmp
shlb
jmp
ss
and
dec
das
mov
mov
cmpsb
fstl
mov
ret
icebp
inc
push
stos
out
lea
cmpsl
sbb
mov
stos
jmp
or
and
sub
dec
outsb
pop
adc
fists
and
clc
pop
cmpsl
cmpsl
roll
aaa
inc
xchg
mov
sarb
ret
in
cmp
sti
cmp
cmpsl
xorb
pushf
and
cmp
add
inc
mulps
jl
minps
cwtl
mov
nop
cmp
mov
scas
mov
or
cltd
mov
push
ds
mov
jb
or
inc
in
cld
scas
test
es
rorl
in
pop
sbb
fwait
stc
push
add
arpl
shrb
add
gs
mov
in
cmp
or
icebp
je
cmp
notb
scas
or
and
fistpll
jl
mov
jne
sbb
mov
scas
sub
jle
in
insb
mov
adc
xlat
push
lods
mov
aaa
test
fnstsw
sahf
push
cmc
jnp
mov
leave
scas
adc
cmp
jle
xchg
cli
insb
lahf
push
loope
jge
pop
xlat
lods
cltd
aaa
jne
rclb
out
xor
xor
std
cmp
xor
cltd
xchg
push
pop
rclb
mov
out
decl
scas
clc
sahf
clc
icebp
clc
push
xchg
jne
add
das
or
iret
mov
mov
dec
sbb
or
stos
inc
sbb
fs
outsb
inc
sub
ja
call
jmp
movsl
mov
inc
mov
pop
sbb
or
int
cmp
dec
movsl
pop
pusha
pop
adc
xchg
jne
mov
and
outsb
scas
cs
mov
adc
pop
mov
mov
aad
popf
decb
and
out
pop
adc
movsb
jo
daa
xor
push
pop
sub
sub
loope
cld
out
lods
pop
inc
xor
mov
push
and
add
out
dec
push
sahf
push
jmp
cmp
xor
out
mov
test
repz
imul
cmp
jmp
and
in
add
loopne
pop
std
out
stc
test
std
pop
les
mov
mov
inc
outsb
dec
xor
in
inc
enter
mov
sbb
stos
inc
sbb
movsl
xchg
sbb
mov
nop
xchg
ss
mov
and
push
in
mov
daa
push
movsb
in
popa
scas
add
jns
cmp
xlat
fsub
mov
jae
inc
shrl
lods
das
cwtl
sub
loope
jno
push
jns
sbb
popa
push
imul
sbb
call
repz
and
adc
lret
andps
out
fdivl
mov
aad
xor
sbb
pushl
xchg
test
roll
cmpsl
aaa
adc
lock
xor
insb
push
xchg
mov
lea
aaa
neg
test
pop
pop
stos
cmp
sub
mov
or
call
lds
and
adc
js
int3
cmpsb
xchg
in
test
xor
arpl
adc
sbb
mov
sub
xchg
add
sub
scas
insb
stos
jmp
cmpsl
sub
sub
lahf
sbb
nop
adcb
pop
cmpsl
in
dec
pop
jmp
xlat
cmp
pmaxsw
ja
inc
test
stc
mov
lods
jg
stos
ds
fsubrs
mov
adc
push
ret
rcll
test
daa
lock
xlat
dec
lret
cli
ss
pop
sub
out
ret
mov
xor
xchg
lret
loope
or
sbbb
leave
in
add
cmp
enter
and
clc
xor
jo
fstpl
and
and
jecxz
imul
popf
outsb
mov
stos
movsb
mov
sbb
xchg
outsb
mov
leave
dec
pusha
or
call
sbb
mov
mov
aam
inc
inc
das
push
adc
daa
or
lcall
mov
adc
dec
xchg
pop
sti
mov
pop
dec
push
dec
mov
es
lret
js
pusha
ret
push
jb
cmp
ret
ficoms
mov
pop
mov
inc
cmp
mov
movsb
jb
jne
ja
xchg
fnstsw
test
jnp
cltd
lret
gs
adc
jo
lds
mov
pop
xchg
dec
repz
xchg
out
outsb
add
and
xchg
adcb
mov
in
sub
mov
xor
push
or
fwait
nop
pop
pushf
arpl
jbe
or
rclb
inc
lret
in
mov
or
jp
ret
sahf
aad
push
mov
rcl
sarb
clc
pop
adc
pop
adc
inc
mov
cli
in
jns
jae
mov
fdivrl
jne
push
jo
js
sbb
jbe
add
shll
lea
sbb
mov
jl
mov
sub
icebp
sbb
int
push
adc
xor
int
lds
and
stos
cmpsb
xchg
aam
paddusb
rcl
adc
loop
loop
or
out
jbe
imul
fcmovne
push
jno
cmp
into
push
xor
adcb
push
stc
and
dec
xchg
inc
sahf
imul
xor
adc
popf
and
mov
icebp
pop
xor
imul
or
mov
xchg
adc
imul
sub
mov
repz
adc
cmp
int
pop
xchg
or
shl
stos
push
sti
cs
inc
push
pusha
test
adc
pusha
movsl
mov
push
idivl
jge
lock
sahf
test
shl
addb
jno
je
pushl
notb
push
stc
mov
bswap
out
and
mov
cwtl
jp
pop
mov
pop
loope
in
mov
mov
out
dec
outsb
sbb
adc
xchg
aaa
jae
aaa
ret
out
addr16
push
jnp
aas
cmc
cmp
in
lret
add
int
enter
sub
xchg
mov
pop
aas
mov
mov
adc
xchg
stc
std
dec
loopne
inc
xchg
adc
in
jle
sub
mov
jp
dec
hlt
mov
nop
jbe
flds
fists
lcall
and
xor
pusha
arpl
cwtl
in
adc
dec
add
xchg
sbb
and
lea
push
jbe
out
aas
xor
xchg
fiaddl
jecxz
jp
add
push
jecxz
stc
orb
popa
cmp
mov
rclb
mov
cmp
loope
fstps
jle
xorl
xchg
femms
and
xchg
lds
xor
popa
cmpl
lret
jae
xchg
rol
or
dec
mov
sbb
sbb
dec
inc
mov
pusha
mov
sbb
cmp
adc
sbb
cwtl
movsl
push
xor
out
orl
stc
in
push
out
push
mov
loopne
cmp
push
jbe
ffree
inc
xor
push
mov
ja
int
nop
lds
inc
inc
jle
pop
jne
ljmp
add
or
lds
pop
cmp
mov
lcall
sbb
pop
clc
xchg
outsb
mov
je
les
dec
push
pop
or
sub
repz
sub
shll
aad
and
sub
fsubs
lock
outsb
and
push
add
and
push
mov
pop
popf
icebp
mov
sti
in
xchg
cltd
dec
lods
and
jo
cmovle
fisubs
andb
add
mov
in
mov
dec
fidivrs
mov
pushf
or
popa
fcomi
jmp
test
push
push
in
xchg
or
cmpl
xor
jg
stos
movsl
enter
lods
cmp
dec
pop
xor
data16
out
gs
lea
add
xor
insl
and
mov
cwtl
mov
xchg
mov
rcr
fcmovnbe
mov
sub
fldcw
xchg
ds
jnp
stc
push
push
mov
jb
dec
inc
add
stos
scas
cmp
gs
lods
jle
mov
mov
in
cli
sahf
in
push
stos
mov
and
add
push
inc
jnp
push
aad
dec
gs
inc
jecxz
fwait
push
cltd
jbe
sub
jl
clc
lods
rcr
lcall
mov
mov
int
adc
mov
cmc
sti
cmp
sub
adc
arpl
pushf
call
stos
cltd
dec
xor
iret
addr16
push
jo
xor
jle
xchg
pop
push
iret
bound
lock
in
imul
test
add
jnp
sub
or
add
jmp
or
aad
mov
out
dec
mov
xor
in
sub
sbb
lahf
test
xor
xchg
sti
rorb
lret
testb
mov
les
adc
or
sbb
adc
out
cmp
lods
mov
pop
sti
out
pusha
xorb
in
xchg
inc
stc
mov
xchg
fldenv
idivb
sbb
xchg
mov
lea
pushf
fsubr
stos
insl
fwait
add
in
fisubrs
dec
jno,pn
inc
push
int3
xacquire
push
dec
mov
cmc
xchg
lret
cmpsb
and
fwait
push
repnz
pop
repz
mov
inc
jg
cwtl
inc
iretw
in
sbb
in
jo
jae
pop
sub
push
and
mov
repz
sti
test
push
add
or
roll
loope
or
mov
sbb
test
add
mov
and
jmp
les
xor
fwait
sbb
xchg
ss
jbe
insl
sbb
xchg
out
psllq
xchg
push
and
fistpll
ja
addr16
je
adc
mov
mov
test
sbb
lea
sbb
lds
lcall
pop
les
pop
pop
icebp
cmp
daa
jl
dec
inc
pop
dec
mov
shll
in
mov
fmuls
or
ficomps
fnstsw
je
or
sbb
jl
stc
cmp
xorl
adc
pop
mov
std
and
pop
or
cltd
add
lods
add
add
int
adcb
mov
out
movsb
in
into
into
int3
jle,pn
insl
mov
push
cld
repz
or
sbb
dec
mov
add
movsb
jb
popa
aaa
xchg
pop
cmp
xlat
mov
jno
cmp
sbb
cwtl
jg
xlat
jle
dec
adc
lret
xor
or
mov
add
inc
jge
mov
inc
leave
adc
sarb
aaa
or
cmp
xchg
sbbb
mov
sbb
inc
shrb
sub
push
and
ret
andps
bound
call
stos
outsl
cmc
inc
fxch
mov
and
icebp
scas
iret
inc
lcall
xorb
je
popl
and
std
into
ds
sbb
jmp
popa
jg
push
outsb
or
jb
fcom
dec
shr
xchg
call
mov
test
mov
lcall
or
cli
mov
xor
imul
or
addl
loop
push
in
inc
aam
mov
insl
mov
mov
push
cltd
and
lock
out
out
sbb
fsubp
aam
pop
mov
xlat
cli
inc
inc
test
jo
or
popf
mov
mov
outsl
stc
push
xor
cmp
out
and
mov
add
mov
adc
int
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
lea
xor
cmp
je
lea
mov
mov
sub
mov
pushl
pushl
call
mov
mov
xor
lea
jmp
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
add
mov
mov
movl
mov
movl
movl
mov
sub
push
xorl
push
movzwl
add
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
sbb
mov
mov
xor
mov
or
xor
mov
adc
add
mov
movl
cmpl
je
cmpl
jg
jmp
push
pushl
push
push
pushl
pushl
call
mov
dec
mov
jmp
mov
xor
add
mov
movl
xor
movl
mov
mov
sub
xor
mov
mov
xor
sbbl
add
movl
cmp
je
movl
push
jmp
mov
add
mov
dec
mov
andl
mov
sub
xor
adcl
xor
add
subl
div
xor
jmp
sbb
fwait
and
lret
lahf
adc
jp
pop
jp
inc
jb
ja
repz
jb
int3
dec
mov
int
sbb
lock
cmp
fmul
lret
into
xor
aaa
push
cwtl
push
pop
scas
push
push
jbe
cwtl
les
sbb
push
mov
mov
je
lods
xchg
adc
or
xor
and
iret
or
sarb
push
mov
jbe
cmp
outsb
leave
cli
mov
add
xchg
andb
dec
mov
mov
repz
xchg
mov
scas
cmp
loopne
inc
ffreep
dec
rcrb
test
mov
push
cmp
xchg
or
adc
fnstcw
jb
andl
imul
lock
adc
in
dec
jnp
mov
sbb
mov
in
imul
or
xchg
xlat
fcoms
test
mov
es
mov
pop
and
xchg
push
and
add
pop
adc
jo
and
insl
leave
orl
out
addr16
fisttpll
push
shll
popf
mov
pop
xchg
int3
sbb
in
cwtl
les
mov
fsubrs
subl
inc
mov
clc
xor
adc
jno
icebp
cmp
mov
testb
not
cmc
into
lret
sbb
subl
std
cmp
mov
mov
adcl
cli
pushw
aad
cmp
stos
dec
cwtl
pop
je
mov
int
data16
and
or
push
rolb
or
add
mov
decl
aaa
xchg
xor
push
hlt
dec
xchg
or
pop
pop
add
mov
xor
nop
jl
int3
mov
push
sub
mov
sub
negb
mov
adc
loopne
jg
stos
mov
mov
or
or
dec
mov
sub
call
adc
fstpt
or
js
mov
mov
dec
and
mov
lahf
jle
sub
cltd
push
mov
inc
mov
mov
test
xchg
inc
mov
mov
pop
dec
fmuls
jecxz
cmp
enter
mov
pop
and
les
mov
mov
jo
sbb
pop
push
aam
adc
ror
in
rclb
mov
and
cmpsb
nop
rep
es
popa
push
fnstenv
xchg
inc
cwtl
outsl
pop
push
or
and
jb
push
jae
rcl
and
pop
pop
es
push
xchg
and
xor
mov
xor
in
fiadds
int3
cmp
push
out
sti
push
or
gs
in
ret
pslld
and
pop
ljmp
shrb
adc
xchg
and
jne
push
sub
fnstenv
cld
and
sbb
ficoms
lods
int3
jge
pushl
jle
mov
roll
fxch
mov
jnp
repz
or
ret
jg
divl
xlat
movsl
call
xchg
insl
insb
add
push
pop
inc
inc
mov
pop
sbb
ljmp
movsl
jp
int
push
inc
xlat
push
js
leave
mov
pop
jp
sub
stos
ficompl
adcl
and
rclb
call
mov
pop
push
mov
sahf
cwtl
test
rcl
int3
test
adc
xchg
xor
rolb
push
add
test
lock
pop
leave
inc
lds
inc
ja
mov
adc
cmp
shr
xchg
xor
xor
inc
add
cmpsl
lods
orl
fisubrs
push
mov
dec
jmp
inc
rorb
jmp
enter
dec
lea
add
add
imul
aam
fcomps
pop
rcl
shr
into
push
inc
push
or
mov
mov
in
shlb
filds
push
sub
sbb
je
ret
in
iret
outsl
mov
dec
mov
lcall
stos
loopne
rcrb
lret
notb
mov
int
push
or
mov
sbb
shr
add
daa
sbb
hlt
mov
sbb
por
adc
inc
mov
lods
pusha
sbb
cmc
pusha
pushf
out
imul
hlt
push
push
les
sub
jg
in
mov
xchg
xchg
lahf
imul
cli
popf
sub
popa
push
mov
jne
dec
xchg
loop
in
leave
rcrb
and
sub
call
cmp
xor
pop
and
inc
mov
push
xchg
push
jmp
inc
push
test
fildll
shll
fnstsw
lods
sbb
or
mov
das
push
andb
les
adc
lea
mov
xor
or
mov
xchg
test
icebp
in
es
mov
pusha
js
and
call
mov
push
lock
fwait
or
inc
rep
push
inc
mov
insl
cmp
dec
mov
mov
lods
mov
mov
loop
cmpl
and
mov
push
arpl
jge
push
jmp
insb
or
jl
mov
inc
or
push
mov
sarb
cltd
icebp
pop
es
push
loop
popa
add
xchg
dec
sbbl
and
mov
add
loopne
sbbb
repz
fcoms
leave
xchg
mov
jp
imul
mov
lahf
jbe
out
jae
inc
clc
sti
mov
dec
mov
shl
push
inc
mov
js
xchg
cld
mov
mov
rcrl
sbb
inc
fisubl
inc
aad
inc
xchg
dec
and
mov
data16
ret
sbb
cmp
mov
dec
ja
and
jno
or
pusha
pusha
pop
xchg
mov
fidivl
mov
repz
movsb
gs
mov
cmpsl
es
jns
cmp
int3
scas
cld
mov
in
insl
insl
mov
rorb
push
xor
aas
out
fdivl
pop
inc
and
pop
test
jo
mov
cmpsl
cmpsl
scas
fsubrs
mov
fadds
insl
pop
pop
and
cwtl
inc
fists
xchg
push
sbb
idivl
ds
imul
push
mov
pop
sbb
rcll
xchg
adc
je
inc
fwait
pop
imul
ljmp
sbb
mov
sbb
out
ret
fcomi
xor
cwtl
xor
jne
popf
sub
mov
push
popa
addb
movsl
loop
xchg
stos
and
jne
mov
inc
and
stos
xchg
xchg
les
scas
int3
movsl
repnz
add
jecxz
jmp
mov
xor
xchg
ss
jno
std
lret
adc
cltd
fs
xchg
sbb
or
sbb
aad
cmpsl
mov
push
or
lea
das
ss
outsb
dec
and
cld
xorl
lret
addb
mov
jb
popa
add
dec
incb
sub
inc
das
xchg
push
or
xor
pop
add
cli
xchg
popf
data16
xchg
pop
ret
idiv
add
or
addb
lods
fwait
in
mov
xorl
adcb
sub
loopne
or
mov
xor
mov
adc
scas
bound
xor
das
pop
sbb
aam
dec
arpl
outsb
shr
add
arpl
jno
inc
dec
xchg
in
push
arpl
push
icebp
out
daa
pop
pop
arpl
hlt
mov
repz
dec
pop
and
stc
xchg
test
xchg
decb
fsubl
hlt
fsubs
and
orb
jg
test
cmp
out
or
addr16
mov
test
rcll
pushf
xor
sti
mulb
loopne
xor
lcall
loop
cltd
adc
cltd
dec
pop
mov
push
cmc
loope
sbb
jecxz
icebp
push
fwait
enter
sbb
sub
sub
dec
xchg
leave
push
jns
enter
lret
lods
enter
cmp
dec
es
lret
ret
bound
adc
cltd
scas
int3
je
mov
mov
in
ljmp
data16
outsb
add
fists
jns
and
jns
jno
shr
jbe
jno
inc
data16
stc
mov
leave
mov
dec
ja
mov
into
jae
xchg
sar
pop
sahf
pop
test
adc
and
into
push
fisubrl
ds
roll
popf
xorb
mov
in
push
jp
negl
mov
xor
mov
ja
shll
out
jmp
inc
ja
insl
repz
sbb
and
push
xchg
sub
pop
daa
or
xor
rcrl
dec
aaa
addr16
and
lret
divl
pusha
inc
repnz
je
inc
mov
xchg
sbb
mov
jecxz
xor
jg
or
nop
inc
add
sbb
mov
mov
pop
push
addr16
add
scas
imul
fwait
mov
pop
add
xor
mov
enter
clc
sub
sub
mov
xchg
lock
xor
mov
sub
pop
out
inc
inc
clc
xchg
lock
lea
xor
or
or
xchg
aad
jl
cmp
in
popf
sbb
mov
pop
push
pop
aaa
adc
aad
mov
ss
xchg
mov
sbb
mov
cmpsl
ljmp
xchg
add
mov
lahf
inc
aaa
dec
cmp
mov
dec
xchg
mov
inc
nop
fisubs
inc
cmpsl
in
stos
aam
jmp
in
mov
mov
mov
filds
and
and
dec
cld
pop
mov
addr16
mov
add
and
or
adc
in
or
out
xchg
lea
pop
in
xchg
push
pushw
inc
mov
jns
das
loopne
stc
jl
icebp
sub
popf
mov
mov
add
test
mov
mov
lcall
test
jnp
pop
dec
pop
cltd
in
push
adc
int
arpl
icebp
mov
mov
cwtl
call
test
xchg
pop
xor
push
sub
adc
xchg
mov
sub
pop
jns
cmpsb
xor
in
mov
pop
stos
pop
mov
fcomp
test
mov
xor
in
adc
mov
push
ret
movsb
aam
hlt
call
sub
inc
mov
adc
cmp
jecxz
sar
mov
icebp
popl
ret
mov
ret
jle
fildll
testb
mov
xchg
dec
dec
shrl
push
nop
xor
hlt
shlb
add
addr16
pop
jge
jle
inc
or
jae
movsb
fnstenv
push
push
int3
movsb
out
lret
inc
mul
pop
jp
fidivrl
outsl
out
lret
cmp
pop
hlt
cmpsl
bound
aas
sbb
cmp
jl
repz
and
jle
push
in
fcmovbe
pop
std
mov
sti
xor
sub
lds
rclb
mov
pop
test
or
fadd
mov
iret
mov
adc
call
push
lock
out
je
xchg
mov
gs
arpl
cmpsl
jp
lods
ret
je
push
mov
mov
mov
jg
sbb
mov
out
pop
bound
cmp
mov
push
push
and
jecxz
outsb
adc
xchg
sti
lret
jae
sbb
mov
push
pop
imul
enter
lea
rcll
inc
in
popf
cmp
cmp
mov
notb
adc
repz
pop
iret
sbb
fucomi
sub
gs
or
pop
call
shlb
pop
cld
lods
test
jmp
popw
addb
sbb
add
xchg
mov
cwtl
or
and
arpl
cs
fisttpl
xchg
out
adc
adc
xchg
jl
mov
in
sub
add
and
dec
and
jns
inc
loope
enter
iret
icebp
jp
push
pop
mov
loopne
mov
je
sbb
jmp
xchg
outsb
insl
stos
cwtl
mov
push
inc
mov
push
fstps
sbb
clc
pop
fidivrs
jmp
push
imul
cmp
fwait
push
pop
cmpsl
scas
jb
das
cltd
mov
xchg
fbld
addr16
lods
mov
sbb
add
xchg
test
test
adc
mov
scas
in
sbb
or
sub
fmul
int
adc
mov
rcl
mov
shlb
mov
or
int
fsubs
sbb
mov
mov
mov
js
mov
dec
popa
jno
push
mov
js
cld
aas
jle
leave
popf
xchg
cli
jns
mov
out
out
cmpsb
add
push
imul
jns
lret
dec
outsl
mov
jnp
popa
js
push
decb
iret
push
sarb
jae
add
xchg
add
sbb
cmp
ds
pop
mov
sahf
ret
ror
pop
pop
cmp
lea
sbb
pushf
and
loope
sub
adc
sbb
ret
dec
jge
pop
mov
mov
out
test
loope
adc
mov
jns
and
test
xchg
and
out
jg
enter
push
pop
stc
adc
mov
xor
ljmp
cmp
cmp
push
shll
and
cmc
addr16
inc
outsb
test
dec
rcr
xor
into
xor
test
jae
and
cltd
jl
jo
cmc
jg
int
jp
cmc
mov
outsl
adc
or
xchg
add
aam
jbe
xchg
das
int
mov
jno
lea
scas
movsb
or
shrl
js
xor
ficompl
pop
pop
jae
outsb
sar
ret
pop
xor
repz
or
push
setb
outsb
mov
lods
and
jmp
test
push
mov
je
shrb
fdivp
popa
mov
dec
add
sub
jp
and
xchg
xor
popf
mov
pop
dec
repnz
cltd
jbe
push
add
push
jmp
sahf
out
inc
cmp
in
inc
divl
or
mov
push
xor
mov
dec
jo
fwait
inc
add
mov
cli
sub
sti
in
in
mov
jmp
shll
xchg
repz
enter
movsb
imull
lahf
or
and
ljmp
shrl
mov
pop
sbb
bound
adc
mov
fisubrs
cltd
int
or
pusha
sbb
push
movsl
push
mov
movsl
pop
out
mov
pop
jmp
lahf
addr16
sub
or
ja
sbb
jne
andb
push
in
int
gs
and
adc
xchg
xor
fs
outsl
sub
sub
push
jbe
push
sbb
xlat
sbb
xor
or
fnstcw
pop
inc
hlt
nop
test
cmp
cmp
sbb
and
cld
nop
subb
cmc
sbb
into
enter
rol
inc
fxtract
movsl
cmp
fs
mov
cmp
jne
jnp
mov
and
jae
dec
notb
lods
jae
ja
inc
or
and
mov
and
mul
jmp
andb
nop
cmc
dec
mov
fistps
mov
push
mov
out
xchg
enter
fcoms
fistl
mov
inc
ss
cs
push
mov
or
mov
dec
jecxz
sub
mov
sar
push
scas
push
jb
push
pop
add
mov
xchg
fdivrp
mov
push
outsb
mov
std
movsl
aas
xchg
xor
popa
sti
fnsave
inc
cmp
rcrb
sbb
xor
je
push
push
jo
aam
jbe
rcr
cmpsb
fildll
ja
loopne
cld
pop
fdiv
mov
sub
test
mov
ljmp
dec
je
icebp
sbb
cmp
in
sub
adc
adc
dec
popf
inc
call
xlat
xor
add
dec
and
sbb
pop
pop
sahf
mov
jb
or
clc
pusha
int3
and
lret
xchg
insb
fsub
cmp
and
adc
fbld
subl
ret
push
jns
scas
dec
ljmp
jp
cmc
or
iret
jl
pop
sti
fistpll
incb
cmp
xchg
xchg
cwtl
orl
mov
cli
testb
mov
inc
sbb
add
mov
push
out
mov
in
or
sti
add
jo
or
and
mov
test
xchg
popf
out
mov
mov
jae
xor
cli
pop
cmp
rcll
js
and
push
inc
js
mov
in
xor
lock
bound
int
test
jbe
ja
pop
testl
ror
fisttps
or
push
jb
mov
dec
cmpsb
lret
mov
adc
negl
in
nop
repz
push
mov
mov
cmpsl
inc
or
cli
pushf
fldt
pop
out
jae
mov
dec
scas
stc
jo
ret
jge
xchg
loope
pop
mov
sbb
idivb
jns
shlb
mov
adc
mov
imul
sti
repnz
add
mov
lret
adc
sbb
cmpb
fnstenv
test
xchg
je
je
jnp
add
jno
pop
jns
ret
xlat
cmpsb
adc
xor
stos
imul
int3
dec
ret
shlb
xlat
fstps
das
jecxz
add
xor
test
sbb
or
mov
or
sub
push
xor
loope
or
pop
push
mov
arpl
dec
fdivs
mov
jecxz
subl
inc
push
pusha
cmpsb
lcall
fsts
das
jno
fadd
leave
sub
push
popa
adc
out
pop
sub
shlb
mov
jmp
xchg
ljmp
adc
adc
mul
aaa
mov
add
xor
inc
lods
xchg
sbbl
jg
sub
pop
xor
pop
xchg
or
cs
fsubr
push
dec
sbb
movsl
cmp
mov
nop
cmpl
add
cmp
das
stc
xor
xor
xor
inc
mov
adc
arpl
sub
inc
stos
mov
xchg
repz
add
fildll
mov
inc
stos
and
adc
popf
mov
mov
fnstcw
mov
roll
adc
xchg
cmp
jno
fcoml
lea
pop
ss
sub
push
mov
push
ret
leave
and
pop
std
sti
imul
arpl
cmp
or
faddl
pop
out
dec
inc
add
repz
adc
lods
repnz
mov
lods
inc
pushf
cli
sbb
sub
popa
sbb
and
jae
fstl
mov
push
mov
adc
inc
scas
fsubr
push
std
and
mov
dec
mov
fisubs
mov
loope
pusha
and
fld
jecxz
sub
notb
in
aaa
pop
mov
dec
pop
gs
fisubrl
daa
xchg
or
xor
jg
imul
ds
inc
inc
pop
mov
lret
test
arpl
andl
ljmp
xchg
mov
sbb
fsubl
int
xlat
cltd
ja
xchg
repz
test
cltd
push
and
mov
scas
or
or
dec
mov
lret
jle
push
in
ss
adc
and
outsb
pop
sub
jae
dec
push
lods
or
add
call
fdivrs
fwait
jp
jg
int
imul
mov
push
dec
sbb
enter
dec
xchg
fisubl
add
cmp
push
jns
addr16
jae
sub
daa
imul
into
jp
fnsave
mov
or
inc
gs
insb
in
shlb
xchg
pop
push
adc
cmp
arpl
lret
mov
xor
scas
popf
lcall
sbb
es
xor
rcll
rcrl
jl
leave
addr16
mov
aaa
mov
push
sahf
cmc
sarb
xor
loopne
cld
push
outsb
or
test
je
cmp
nop
hlt
loope
dec
mov
cmp
addr16
jno
and
xor
aam
bound
mov
push
daa
jecxz
or
xchg
cmp
pushl
mov
inc
xchg
cmp
mov
cld
jo
mov
mov
aas
pop
mov
aad
mov
fwait
dec
imul
fsubs
jbe
and
fildl
subl
adc
out
and
xchg
scas
outsl
in
sub
pop
jecxz
sbb
mov
xor
insl
and
icebp
rcr
jns
nopl
add
and
sub
lds
pop
xchg
xchg
jmp
and
push
sub
adc
push
sbb
jbe
inc
clc
fidivl
loop
xor
lods
dec
sbb
out
mov
movsb
push
fstpt
mov
es
xchg
test
repz
mov
mov
jb
loopne
aas
stos
mov
mov
fnstcw
stos
mov
jle
jb
jl
lods
jp
adc
and
test
movsb
movb
lret
out
sti
mov
jne
push
insb
xchg
scas
not
out
dec
insb
sbb
cmp
outsb
mov
cld
popa
or
sarb
dec
loope
insb
scas
or
xor
mov
sti
jl
jnp
stos
xchg
fsubp
jecxz
pop
xchg
push
adc
mov
and
jne
jae
jnp
shrb
je
push
andb
arpl
addr16
jo
ljmp
jbe
lea
pop
sub
xchg
bnd
stos
xlat
imul
dec
adc
out
hlt
sub
std
cltd
js
fxch
dec
push
xor
adc
sub
shlb
int
cltd
pop
es
loopne
je
mov
mov
dec
mov
lahf
xor
sub
fwait
pop
jnp
push
jmp
xchg
add
xchg
dec
mov
fsubs
iret
pop
fidivs
sbb
fldt
stos
cmpsl
mov
xor
sub
test
add
lret
pop
push
jge
fmull
out
outsb
add
dec
and
lcall
mov
mov
cld
add
mov
shrl
and
loop
stos
setl
sub
cmc
or
out
cmp
xor
test
je
xchg
fmull
lds
mov
mov
mov
aad
in
dec
into
sahf
sbb
mov
mov
lock
mov
leave
add
mov
lea
enter
bound
shrb
ss
add
mov
pop
and
sub
popf
repnz
cld
xchg
adc
scas
inc
mov
sbb
inc
sbb
adc
mov
mov
iret
xor
mov
mov
jnp
xor
pop
cwtl
in
test
jge
add
mov
mov
mov
xchg
sub
adc
xchg
orl
sbb
insb
cmp
add
mov
insl
jg
arpl
cs
jp
in
pop
pop
sub
cmpsl
or
subl
imul
and
cli
insb
dec
jae
or
push
add
jne
mov
rcl
sahf
add
sarb
rcrl
test
outsl
int
mov
ret
scas
movsl
jp
sub
xor
xchg
int
notl
push
mov
clc
test
xor
leave
loope
mov
int3
pop
adc
aas
scas
xor
je
rcrl
popa
das
or
insl
sbbb
fisubrs
lcall
roll
stos
sbb
gs
xor
mov
mov
sahf
inc
inc
rclb
cmp
lret
fcmovnb
push
mull
pop
iret
xor
pop
das
sub
dec
jne
mov
arpl
fsubrs
mov
pushf
cwtl
repz
cmpsb
adc
inc
inc
jl
adc
ljmp
lods
push
js
sub
das
insb
add
lods
inc
pop
mov
ja
mov
mov
mov
mov
mov
les
mov
popa
xchg
ljmp
dec
ss
daa
and
jnp
cwtl
xchg
add
jp
shll
adc
outsb
push
out
push
mov
call
fmuls
sub
pop
lahf
jmp
jmp
jmp
gs
lcall
pop
das
push
sub
jbe
cs
lods
stos
adc
cld
repz
xchg
or
push
out
dec
loop
lret
addr16
pop
stos
add
into
test
icebp
icebp
ja
adc
jge
int3
aaa
dec
adc
and
dec
cmp
ds
add
jnp
ja
push
inc
int3
sub
inc
fnsave
out
xchg
or
popa
int3
fwait
arpl
aam
ja
les
test
test
sub
testl
lds
sub
or
fnstcw
fwait
movsb
inc
dec
sub
sbb
repnz
cmp
or
jge
out
inc
mov
jne
clc
dec
pusha
pop
sbb
push
mov
adc
xchg
push
test
jg
mov
stos
movl
add
inc
xchg
imul
into
xchg
push
add
pop
cmc
cmp
add
pop
cmp
arpl
out
sahf
sub
fwait
xchg
push
jae
mov
sub
and
sbb
cli
faddl
cmpsb
divl
or
cmc
dec
subl
adc
jns
pop
cmp
cmp
xor
cli
pusha
test
out
mov
test
or
enter
sub
dec
popa
out
and
jae
daa
mov
jp
stc
cmp
out
ret
fisttpl
xchg
cmp
adc
and
jbe
in
stos
rol
cmp
or
xor
lods
pop
push
fwait
pop
push
mov
mov
sbb
pop
push
test
rorb
mov
sarl
bound
push
and
int3
xchg
jg
push
cs
repnz
cwtl
cmc
xor
push
inc
imul
or
xchg
cltd
xchg
enter
jno
lahf
push
test
pop
mov
loop
jle
sahf
popa
sbb
pushl
pop
and
daa
cmpsl
jl
push
std
mov
and
cs
inc
pop
call
stos
add
clc
pop
data16
add
jnp
data16
push
mov
push
scas
outsb
sbb
sbb
jae
dec
icebp
and
jge
repz
insl
leave
repnz
lea
xor
popf
test
xchg
mov
lds
into
jae
int3
add
xchg
mov
sbb
mov
cmp
lret
adc
dec
jge
icebp
out
addb
mov
mov
dec
push
rorl
fsubr
out
sbb
popa
sti
shlb
xchg
jne
adc
fs
sub
xchg
xor
fiaddl
iret
cmpsb
pop
pop
lret
test
pop
push
rcl
jo
adc
xchg
andl
jg
adc
enter
cmpsl
cmp
xor
sbb
cs
sbb
xchg
jns
xor
js
hlt
cld
add
or
hlt
sub
xor
dec
adc
inc
pop
sub
jb
push
xchg
mov
inc
subb
pop
fwait
pop
pop
sbb
js
lock
loop
push
adc
adc
fwait
cli
cmpsb
lds
rcrb
push
nop
popa
test
rorb
and
jne
outsb
clc
jmp
call
and
push
mov
and
ret
sbb
std
or
in
mov
xchg
rclb
mov
mov
xchg
pop
push
mov
mov
cmc
cmp
enter
and
ljmp
jns
mov
leave
popf
push
sbb
clc
out
test
imul
jbe
lds
xchg
push
mov
bt
ljmp
imul
jl
mov
jbe
in
in
jmp
dec
data16
nop
out
inc
popf
pusha
sub
add
lea
or
test
test
sahf
testl
in
add
clc
adc
pop
pop
jmp
neg
pop
leave
mov
loope
xchg
stos
mov
andb
jne
push
pop
xor
mov
in
je
fiadds
rcl
mov
lahf
loopne
mov
fsubrs
xor
mov
jge
xchg
jp
cmp
data16
roll
jp
xor
push
push
shrb
jns
dec
outsb
cmpsl
ficoms
sahf
inc
xor
orb
sbb
cmp
popa
xlat
mov
dec
sbb
sub
xor
lret
mov
and
mov
dec
adc
pop
cld
fimull
imul
jle
sti
xchg
push
stos
icebp
test
bt
daa
mov
adcl
jmp
push
sub
iret
std
pop
mov
mov
dec
cld
sbb
and
adc
sbb
sbb
mov
mov
xor
rcrb
mov
out
xchg
mov
test
les
movsl
imul
and
mov
sub
aad
lods
cmc
push
test
ja
inc
roll
adc
mov
outsl
push
mov
mov
sbb
mov
es
into
aas
jg
add
fwait
lods
pop
adc
rol
jne
ja
jae
mov
mov
in
add
in
loop
mov
pusha
and
xchg
iret
inc
and
and
ret
xchg
mov
and
jp
lds
clc
fdivrl
imull
ljmp
sub
lret
popa
repz
test
sub
test
inc
fneni(8087
xorb
in
mov
fiadds
mov
scas
and
adc
jae
out
in
pop
scas
and
je
cwtd
lcall
jb
enter
or
pop
lahf
xor
je
test
jo,pn
add
in
mov
ret
xor
cmpb
lock
sbb
dec
add
xchg
sahf
and
sub
das
ss
jnp
loop
addb
add
xchg
push
push
xor
jnp
xor
mov
add
incb
xchg
pop
aam
mov
cmp
loope
push
ljmp
inc
xor
dec
inc
inc
sar
in
sbb
enter
in
adc
imul
xchg
sub
es
pushf
cltd
push
dec
dec
xor
and
lods
xor
sub
mov
xor
jge
mov
movl
cmpl
je
cmpl
jbe
jmp
push
push
call
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
pushl
push
push
pushl
call
jmp
mov
xor
add
cmp
movl
jbe
mov
movl
cmpl
je
cmpl
ja
jmp
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
xor
add
adc
mov
sub
mov
mov
xor
movl
add
subl
imul
andl
xor
xor
inc
mov
cmpl
jge
jmp
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
mov
mov
sbb
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
sub
add
mov
mov
movl
mov
xor
or
sub
xor
mov
or
push
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
call
cmpl
jb
mov
sbb
xor
andl
xor
add
inc
mov
cmpl
jge
jmp
push
call
cmpl
jb
jmp
jo
aam
movl
xor
or
call
jp
jbe
movsb
push
cmpsl
lods
orb
or
enter
mov
mov
std
sahf
fsubs
movsl
sbb
pop
iret
pusha
cmc
imul
pop
stos
jl
xchg
or
push
stc
mov
and
xchg
repnz
sub
daa
jge
bound
fisubrl
pop
mov
hlt
fsts
test
or
pop
add
pop
push
jle,pn
idivl
bound
imull
cld
jmp
scas
fdivrl
sub
dec
dec
dec
or
fistps
xchg
and
je
sbb
mov
cmpsl
fmuls
test
aas
jge
jle
mov
adc
xor
xchg
test
jmp
pop
and
nop
aas
mov
in
mov
int
cmpsb
int
jo
lcall
dec
add
enter
dec
xchg
sbb
adc
cmpsb
out
lock
jmp
js
cltd
push
out
fs
push
lods
pop
data16
mov
push
ds
scas
push
out
daa
xchg
int3
jl
xchg
pop
adc
sbb
in
sbb
movsl
or
test
in
pop
dec
pop
inc
push
lea
fs
scas
fnsave
sub
mov
lods
pop
jns
cmp
cmp
push
ret
mov
and
push
cwtl
pop
mov
sbb
xchg
ret
loope
push
arpl
sbb
fnstenv
fsubrs
clc
leave
stos
dec
pop
xchg
divb
inc
jnp
dec
cmp
sub
decb
jno
jg
dec
pop
in
pushl
or
adc
push
sub
and
loope
mov
aad
out
jbe
mov
mov
push
fwait
inc
sti
fadds
mov
jp
mov
fsubs
adc
cmp
jne
jnp
into
scas
mov
pop
sbbb
mov
jp
int3
arpl
pushf
or
cmpl
aas
stos
nop
jb
call
ret
loop
and
lock
in
and
scas
and
jne,pn
into
cld
imul
aad
dec
inc
in
fwait
das
jmp
pop
jb
or
cwtl
pop
jmp
rcrb
sbb
das
aad
packsswb
and
or
enter
lea
ja
dec
mov
sub
bound
jne
lret
pop
mov
scas
mov
adc
leave
fsubrs
add
or
mov
cmp
rcrl
scas
pop
outsl
int
cs
mov
mov
jno
jb
push
in
pusha
inc
xchg
xchg
inc
and
ljmp
add
inc
data16
out
lods
sbb
mov
inc
arpl
cmp
lock
cs
add
inc
fcoms
das
xlat
pop
xchg
xchg
mov
idivl
mov
in
pop
pop
xchg
loop
pop
ret
and
mov
mov
xchg
cmp
sub
sub
jg
subl
xchg
scas
mov
lahf
sbb
cwtl
into
pop
rcrl
nop
add
imul
jae
jne
imul
xor
lea
adc
fstl
or
ds
ds
sbb
int
xor
lods
movsb
xor
pop
mov
xorb
ds
int3
sbb
mov
sub
xchg
repnz
mov
in
cmp
or
push
test
repnz
pop
jb
lods
mov
sub
add
jnp
jbe
push
cli
call
push
mov
dec
das
int3
in
bound
xor
popl
aaa
pop
xlat
ljmp
test
out
sbb
jns
jle
and
or
and
sub
setge
or
dec
mov
cmpsl
push
adc
cmpsb
sahf
cltd
mov
gs
mov
out
xchg
insb
mov
scas
mov
sbbl
loope
les
xchg
xor
mov
in
cmp
int3
push
mov
jmp
dec
stc
nop
mov
xor
dec
mov
mov
sbb
jge
test
add
jo
ret
enter
dec
jecxz
xorl
push
gs
jne
jmp
imul
dec
cmpsb
xchg
aaa
add
xchg
push
pop
jne
aaa
mov
test
in
dec
cmp
rorl
push
push
xlat
je
test
jge
mov
pushf
xor
insb
in
outsb
jae
xor
ds
lret
into
test
shlb
xor
das
stos
test
jo
lret
jmp
leave
mov
cmpsb
push
ret
xchg
mov
pop
cmpl
mov
lds
test
sub
lds
lret
xchg
pop
scas
mov
test
or
or
int3
xor
test
sbb
xor
insl
rcrb
mov
adc
fidivrl
sub
imul
mov
ret
ror
mov
jle
and
xchg
cmp
cld
jb
xor
or
in
popf
adc
dec
jae
lods
lret
movsb
inc
jo
jge
imul
mov
push
cli
cmp
stos
testl
cmp
or
mov
pop
ffreep
xchg
int3
fst
in
stos
movups
jno
in
add
aaa
rorb
daa
lds
sahf
jecxz
jge
jae
pop
test
mov
adc
inc
mov
and
xor
pushf
cltd
stc
les
jb
loop
lock
and
cmp
lods
jae
sub
xor
adc
pop
movsl
mov
push
dec
mov
inc
push
jle
lea
dec
sahf
pop
xor
add
mov
loopne
add
insl
cmp
xchg
gs
pop
repnz
in
in
rcl
movsb
dec
sub
mov
and
fisttpll
imul
or
cltd
sub
xchg
jle
nop
inc
sahf
inc
lcall
push
cmpsb
xor
jno
xchg
mov
adc
mov
mov
mov
jecxz
test
adc
in
or
loop
mov
jbe
add
jbe
int3
lret
cwtl
adcb
nop
repnz
pop
push
sub
sub
ja
dec
push
ret
repz
dec
data16
clc
ret
data16
xor
jge
mov
xchg
repz
int3
mov
aas
lods
dec
pop
stc
bound
xor
cs
sub
pop
fnsave
lods
ficomps
mov
adc
jmp
ljmp
cmp
movsb
jmp
aam
mov
mov
decl
in
ds
and
daa
les
leave
je
dec
xchg
loop
test
mov
pushf
or
rorb
aad
sub
in
jnp
mov
jbe
xchg
xchg
pop
sub
loope
xor
gs
iret
add
loop
inc
cs
cmp
xchg
les
call
xchg
jo
shll
mov
decl
jge
fsub
fs
pushl
iret
ljmp
xlat
xor
xchg
rcrb
inc
xor
sbb
popa
cmpsl
stos
rclb
sti
mov
adc
adc
shlb
adc
jg
cld
xchg
sti
jns
xchg
ret
mov
outsl
mov
pushf
cmpsl
add
inc
call
xchg
loope
lret
bound
inc
bnd
inc
inc
mov
int
mov
push
mov
and
les
es
pop
jmp
rcr
fsubrs
testb
sub
inc
cmp
dec
mov
add
dec
daa
sbb
add
bound
ror
add
mov
movsl
mov
sub
pop
jo
xor
mov
inc
pop
jg
test
testb
xorb
mov
cmp
sti
call
mov
mov
stc
nop
and
cli
push
cmpsb
adc
aaa
xlat
xchg
push
xor
imul
or
sbb
push
out
xchg
adc
xchg
fwait
push
and
mov
popa
mov
andb
das
or
dec
mov
dec
xor
mov
and
mov
mov
fimuls
movsb
pop
adc
or
fucomip
mov
imul
or
adc
xor
stc
mov
jns
jg
push
mov
mov
into
jno
jne
xchg
jns
mov
jno
fimuls
sbb
loope
bound
js
movl
hlt
pop
cwtl
daa
pop
inc
repz
pop
add
mov
cmp
das
and
aas
sbbl
in
mov
cmp
push
xor
gs
inc
rol
mov
push
testl
stos
les
mov
add
in
jne
adc
not
idivl
jo
test
cmp
lcall
mov
mov
rorl
push
jno
sub
mov
cmc
mov
imul
pushf
sbb
add
adc
inc
fldenv
xor
in
fidivrs
cmp
je
mov
js
mov
xor
shrl
sahf
pusha
and
in
add
push
stos
in
mov
testl
imul
xlat
jecxz
cmpb
push
mov
xor
push
xchg
cli
cmp
adc
lods
mov
es
cmc
pop
sub
sbb
notb
sub
sub
ficomps
mov
js
adc
and
pop
ror
sub
or
and
cmp
mov
adc
leave
mov
std
or
pop
push
movl
pop
jmp
xor
ds
leave
mov
add
ljmp
inc
outsl
rcrl
sbb
sarb
fwait
cmpsl
mov
jb
std
stc
mov
imul
mov
lret
pop
push
push
mov
xchg
mov
mov
repz
add
in
dec
pop
out
inc
dec
iret
sub
sub
mov
push
fsubrp
adc
mov
sbbl
or
and
imul
cli
cmp
rolb
mov
mov
addr16
mov
shll
mov
push
mov
xchg
cmp
and
aaa
dec
divl
test
inc
pop
adcb
icebp
andl
int
aas
add
popf
les
push
hlt
loopne
xchg
mov
add
push
lret
pop
sbbb
inc
and
push
test
movsl
jmp
mov
dec
lods
xchg
xor
fbld
sbb
pop
cli
mov
outsb
mov
or
lods
pop
call
cwtl
add
bound
pop
jp
fs
push
pop
icebp
ljmp
inc
pop
lahf
data16
daa
aaa
sub
mov
ret
test
cli
out
push
ret
adc
scas
xchg
push
lods
pop
idivb
les
out
stc
xor
aaa
xchg
xor
out
mov
xchg
sbb
sub
cmp
or
inc
loope
dec
mov
pop
gs
out
ret
push
push
fs
xor
dec
loopne
shr
mov
pushf
insb
out
sahf
nop
push
sub
inc
leave
call
pop
jmp
or
mov
pop
pop
popf
mov
xchg
pslld
sub
xchg
lods
stos
popa
cmpsb
mov
or
enter
xor
test
xchg
and
xor
out
out
xchg
data16
js
loop
test
and
outsb
decb
lahf
or
lret
fnstenv
xchg
ret
add
add
popf
push
mov
add
xchg
inc
loopne
inc
mov
popa
roll
pop
push
jg
mov
fsub
xchg
push
pop
dec
test
lock
call
and
xor
call
loope
sub
fwait
dec
sub
in
add
sbb
adc
clc
or
repnz
mov
inc
aam
and
cmp
mov
and
mov
mov
cltd
loop
mov
loopne
inc
fwait
pushl
hlt
incb
inc
in
jmp
insl
jbe
jae
je
mov
cmp
xchg
xor
icebp
fdivrs
xchg
push
jl
or
push
aaa
ja
sbb
fcomi
lock
xchg
cmp
fnsave
repz
scas
sub
jle
leave
outsl
jo
jmp
inc
inc
push
mov
bound
xlat
in
jno
inc
push
fistl
rcrb
add
std
cmpsl
mov
fsubp
cwtl
aaa
dec
lods
hlt
in
mov
nop
jp
lea
imul
pop
loopne
xchg
inc
pop
jo
or
pop
add
sub
daa
shll
or
bound
inc
stos
cmpsl
into
sub
pop
imul
insl
shlb
lea
lahf
xchg
cmp
pop
pushf
sub
cltd
imul
xchg
dec
shrl
jo
xchg
xlat
sbb
lahf
adc
insb
sub
rcrb
es
ss
movsb
jp
jb
imul
sbb
scas
enter
lock
sub
add
pop
mov
sub
xchg
das
out
enter
push
mov
sbb
cmp
test
movsl
jl
dec
dec
push
mov
loop
inc
pop
lcall
mov
ja
push
jmp
mov
dec
pop
call
dec
cmp
jmp
mov
ss
adc
popa
std
xchg
call
mov
mov
dec
gs
mov
mov
add
pop
daa
jbe
dec
mov
ret
xchg
mov
cld
mov
xor
add
jge
mov
mov
inc
or
mov
add
int
cmp
add
gs
pop
mov
icebp
pop
push
jns
adc
dec
gs
iret
test
adc
test
pop
in
pusha
scas
addr16
cmp
clc
pop
push
jns
std
lahf
addl
dec
repnz
xchg
movsw
sbb
push
or
fisubl
mov
xchg
lds
mov
lahf
dec
inc
mov
mov
xor
insl
stos
movsb
dec
ror
dec
xchg
imul
icebp
repz
arpl
add
dec
pop
mov
subl
in
js
outsb
test
xchg
sbb
push
mov
insl
fimuls
out
mov
and
in
aas
xor
push
pushf
std
xchg
mov
fwait
div
mov
dec
mov
push
or
mov
mov
pusha
in
insl
int3
xor
sub
stos
adc
aas
inc
add
cmpsl
adc
int
dec
testb
mov
or
pusha
adc
pop
lds
mov
xor
xchg
imul
or
pop
or
pop
imulb
int3
sub
mov
adc
test
dec
in
scas
std
rcr
je
push
or
inc
outsl
jne
imul
ljmp
mov
dec
scas
jl
fadd
add
xchg
je
or
fs
add
jecxz
fdivrs
and
int
fsts
sub
mov
enter
into
mov
inc
inc
and
xor
pop
jae
shlb
pop
fisubrl
in
push
loopne
jo
stos
out
loop
leave
flds
pop
fists
cmc
add
in
outsl
clc
movsb
rcll
push
scas
sub
outsl
sub
inc
adc
fldcw
jne
test
push
ljmp
and
in
sbb
jbe
xor
adc
pop
push
add
les
rorb
stos
outsb
mov
push
mov
dec
mov
mov
out
fwait
dec
inc
adc
jmp
lcall
inc
pop
cmp
mov
dec
and
or
repnz
test
aas
pushf
push
dec
in
inc
sub
add
mov
dec
xor
cld
jmp
jns
aaa
movsl
xor
cmpsl
sahf
adc
mov
inc
pop
mov
mov
test
dec
and
or
jo
aas
dec
jg
and
lcall
adc
cmpsb
sbb
pushf
pop
dec
rcrl
push
push
mov
mov
stos
out
add
mov
mov
fincstp
push
jnp
das
movsb
cmpsl
ja
cmpsb
fidivl
cmpl
shrl
and
rolb
sbb
dec
mov
mov
std
rcl
or
mov
push
add
out
in
ja
xchg
cs
xchg
in
ficomps
sbb
fs
adc
mov
ljmp
xchg
lcall
and
mov
aaa
arpl
dec
repz
dec
daa
mov
popa
pop
jnp
xchg
loopne
fxch
out
movsb
insb
test
shrb
pop
sub
jae
mov
sub
dec
push
insl
sub
sbb
add
inc
dec
enter
arpl
inc
sub
and
xchg
ret
mov
ret
outsb
sbb
shll
sub
insb
sahf
or
add
cmp
pop
fwait
cmpsb
inc
dec
pushl
xor
out
bound
dec
cmp
xor
out
test
or
add
stos
xor
push
sahf
push
adc
xor
mov
fwait
roll
mov
std
dec
movsl
pop
xor
sbb
pop
js
inc
jg
cmp
out
push
test
out
sbb
js
adc
dec
mov
shl
inc
pop
mov
or
mov
mov
pop
ret
push
clc
pop
pop
push
repnz
push
loope
lcall
cmc
adc
jmp
inc
repz
push
sbb
inc
cmpsb
loop
subl
push
cmp
jle
xor
cld
mov
jb
aam
mov
subb
pop
or
lret
mov
sbb
ret
jp
push
int3
loopne
sarb
in
fildll
movsb
push
jle
aas
data16
cli
insl
inc
xchg
pushf
push
jb
jne
cmp
out
clc
icebp
pop
jp
mov
inc
out
add
push
push
xchg
and
or
in
cmpb
mov
dec
pop
jge
adc
in
std
stc
cmp
add
cmp
dec
adc
lods
fbld
and
xchg
adc
out
in
repnz
jecxz
movsb
dec
sub
cmp
mov
scas
and
int3
inc
orl
and
hlt
and
jl
push
push
test
pop
pop
dec
cwtl
insb
fldcw
cmpsb
cmp
cmp
ja
push
push
add
xlat
xor
lock
out
lret
xchg
or
jle
push
aam
mov
and
pop
std
cmp
in
adc
mov
push
jg
aas
pop
aas
scas
mov
in
test
adc
paddb
movsb
mov
pusha
gs
les
rol
pop
out
scas
mov
in
arpl
push
jno
adc
mov
les
mov
xlat
fsts
negl
movsb
or
jle
out
loop
test
bound
and
jbe
aad
push
outsl
jns
xor
nop
cmc
test
or
ja
std
cmp
mov
dec
fwait
loope
mov
arpl
and
cmc
pop
and
adc
fwait
imul
adc
jae
jns
rorb
mov
ja
aaa
inc
lea
rcrb
pusha
pop
sub
ret
xlat
push
dec
cltd
clc
lds
inc
push
xchg
out
sub
push
in
xor
ret
out
and
data16
sub
lock
hlt
pop
cmpsl
out
shrb
movzwl
imul
je
shl
mov
or
leave
xchg
int3
mov
push
int
jne
sbb
loop
and
fs
cmp
push
xchg
std
lods
sub
push
lahf
adc
xchg
xor
ret
fists
mov
jmp
iret
int
xor
mov
pusha
stos
xor
xor
and
push
mov
inc
pop
pop
add
nop
ds
dec
jb
jnp
jl
out
ja
add
mov
xchg
sahf
mov
sahf
and
jno
sbb
out
jmp
pop
ret
pop
dec
icebp
pusha
lea
movsb
sub
jmp
pop
mov
repnz
dec
das
test
push
or
shrb
outsb
xchg
dec
xchg
je
jmp
xchg
loopne
outsb
shlb
mov
inc
fimuls
mov
jg
pop
lret
pop
das
dec
mov
cli
adc
loop
sub
add
mov
loope
xchg
ret
xchg
cmp
stos
xor
in
les
mov
jbe
add
jbe
xor
mov
movb
dec
mov
inc
xchg
std
cld
repnz
or
aad
ljmp
or
lret
lods
shrb
imul
mov
mov
fdivs
repnz
out
test
js
push
push
push
leave
js
dec
dec
xchg
mov
push
hlt
jg
pop
and
inc
and
cwtl
mov
push
xchg
in
aad
xorb
in
mov
lea
dec
mov
lret
stos
std
or
pop
pop
pop
daa
sbb
ficoms
sbb
pop
out
push
je
cmp
or
sbb
mov
xorl
jae
jae
pop
inc
sbb
loop
or
insl
mov
popa
aad
pop
in
fcmovne
xor
scas
scas
addl
push
mov
push
repz
shrb
leave
bound
add
push
scas
mov
movsb
lds
leave
out
push
jo
mov
xor
rorb
xor
dec
jge
repnz
stos
and
or
aaa
mov
mov
cmpsl
outsb
stos
inc
inc
nop
pop
sbb
and
ja
jmp
sbb
fsub
inc
out
jmp
mov
jp
cmp
jns
and
inc
enter
fistpl
rclb
xchg
jne
sub
jmp
mov
inc
cmc
jl
enter
repz
imul
inc
arpl
test
fcmovnbe
iret
sub
jne
push
and
jmp
dec
mov
pop
pop
xor
pop
cs
push
mov
scas
clc
cmp
pop
fdivrs
pop
das
aas
mov
mov
dec
cmp
dec
movsl
das
or
mov
sahf
add
mov
pop
push
lar
mov
les
pop
fs
popf
lcall
mov
push
cmpb
pushf
add
dec
or
orb
ja
in
add
stos
lcall
xchg
inc
test
mov
loopne
lret
inc
ljmp
into
pop
addr16
pop
dec
push
pop
fsubs
jns
je
out
cld
fmul
push
or
adc
and
inc
cmc
addr16
adc
call
adc
mov
popf
enter
scas
pop
in
lahf
adc
lret
aaa
and
mov
in
sub
ss
pushf
add
into
stos
mov
pop
testb
testb
fimull
je
jp
dec
cld
jb
inc
lds
adc
add
inc
jl
mov
pop
leave
or
add
int
mov
clc
and
mov
ja
push
xchg
test
and
sbb
fiadds
jg
mov
lds
push
je
inc
xchg
pop
mov
inc
test
dec
sbb
sbb
mov
dec
cwtl
inc
mov
add
jnp
aaa
cwtl
xchg
pusha
push
add
push
rolb
inc
cmc
pop
adc
mov
inc
sub
jp
jmp
push
sub
xchg
add
inc
insb
pop
mov
jo
movsb
pusha
mov
dec
fyl2xp1
pop
push
pop
dec
aas
xchg
je
or
movl
cmp
push
mov
adc
jmp
sbb
sub
dec
subl
cmp
js
dec
les
cmc
aas
xor
or
pop
jge
inc
jb
mov
das
sub
inc
jae
push
call
mov
push
mov
inc
ds
pusha
sbb
stos
xchg
lods
jo
mov
lds
mov
dec
cwtl
shll
rolb
cmc
out
shlb
add
push
inc
repnz
fldlg2
jp
mov
cmp
push
std
jnp
and
or
lcallw
orl
std
xor
repz
cmp
inc
mov
jb
inc
sbb
add
adc
stc
and
je
jmp
xchg
push
cmp
cltd
cmp
xchg
push
add
jne
stc
add
mov
in
les
dec
adc
lcall
inc
inc
rcrb
cmp
and
mov
aas
les
push
sarb
lods
rol
inc
jno
fimull
pushf
aam
pushfw
xor
lret
cmpsb
or
test
and
xchg
call
jo
popa
pop
xchg
in
xchg
addb
repnz
ds
push
lret
sbb
mov
xor
cmpsb
insl
clc
repz
jns
sahf
out
js
loopne
pop
jns,pt
inc
xlat
stos
and
std
pop
dec
xor
push
inc
sbb
mull
pop
dec
xchg
mov
cmp
flds
lods
test
sub
sbb
mov
sub
fnstenv
fisttpll
mov
mov
or
je
add
nop
sti
stc
xor
fsubr
imul
pushf
das
fidivrl
mov
or
cmp
outsl
test
mov
movl
or
jno,pn
pop
sub
mov
fucomp
jnp
cmpsb
xchg
sarb
cmp
aam
ror
jno
scas
and
xchg
adc
dec
push
sbb
ss
push
add
xchg
cmp
xchg
push
sbb
or
in
loope
iret
sbb
lods
jbe
or
fisubrs
imul
xor
xchg
ja
push
lahf
cmpsb
or
mov
fcom
pop
inc
and
inc
stos
push
lret
cmp
call
cmp
in
dec
add
insb
iret
xor
mov
inc
jl
pusha
mov
or
inc
mov
lret
aaa
push
and
call
jbe
inc
inc
mov
add
in
xorl
js
cmc
movsb
jno
dec
adc
fisubs
cwtl
sarb
push
dec
scas
scas
lea
push
sbb
lods
js
jb
clc
scas
jnp
popf
push
leave
sub
mov
lcall
pop
movsl
sub
push
aam
pop
pop
xchg
fstpt
jp
repnz
jnp
lahf
nop
xor
ss
inc
ljmp
idivl
out
inc
incb
lods
je
addb
pop
cltd
lahf
iret
pop
xchg
or
jecxz
sub
int
jo
mov
pop
cmp
stc
sub
je
mov
cli
mov
jnp
ficompl
les
mov
cmc
fs
mov
xchg
push
xchg
je
inc
mov
mov
imul
mov
sbb
clc
or
xchg
outsb
jg
xor
imull
test
inc
push
and
movsl
mov
sub
xchg
and
jmp
xor
dec
jae
xor
les
inc
enter
stos
and
call
adc
and
stos
sub
inc
cs
aas
js
subb
cwtl
and
scas
xchg
add
popf
in
loop
mov
cmp
sbb
mov
test
add
mov
lcall
lods
pop
mov
inc
or
test
pop
cmpsl
rcl
int
enter
pop
add
out
inc
outsb
xchg
cmc
push
dec
jb
bound
mov
fdivrs
loope
sub
pop
xor
cmpl
mov
xchg
dec
dec
xor
and
pop
mov
out
call
nop
and
mov
sbb
test
sub
sub
xor
add
pop
inc
or
jg
jns
rcr
fsubs
fcmovnb
sbb
adc
jecxz
fs
fistpl
ds
fld
and
test
push
pop
loope
stos
das
dec
adc
sbb
ret
fadds
mov
arpl
inc
or
popa
clc
out
inc
aam
js
lds
leave
in
inc
xor
les
into
xor
pop
sahf
imul
add
addb
push
xchg
int
adc
jp
orb
mov
xchg
int
add
popa
hlt
jecxz
sub
mov
dec
jl
jb
js
scas
xchg
mov
mov
adc
repz
ss
int3
mov
pushf
call
pop
nop
mov
fldcw
jbe
imul
cwtl
dec
adc
and
bound
jne,pn
loopne
rcll
call
testb
mov
pop
jmp
and
sub
push
leave
stos
outsl
cmc
sub
lds
cmp
xor
nop
xchg
leave
call
and
push
sti
jecxz
gs
subl
es
ljmp
cmp
sbb
push
inc
sti
xor
mov
imul
mov
mov
or
std
mov
jnp
stos
scas
fnsave
test
addr16
in
outsb
mov
ds
or
lods
mov
testl
lret
mov
adc
insl
stc
movsb
sti
rcr
cld
jo
sbbl
mov
cmp
or
jns
push
cmp
pushf
mov
mov
clc
ficompl
xchg
pop
jmp
sbb
pop
add
push
outsb
int
sub
jge
inc
xor
xor
push
fcom
ss
fs
hlt
add
in
sub
jo
imul
sbb
sbb
cltd
dec
mov
lret
enter
xor
in
xchg
es
sahf
mov
xchg
lock
lods
add
std
insb
rclb
mov
sarl
dec
inc
or
lahf
inc
mov
add
cmpsb
js
js
xor
pop
push
cmp
and
outsb
add
out
jle
sbb
mov
inc
pusha
pusha
in
jne
enter
pop
int
adc
outsl
jns
mov
div
popa
pop
dec
sub
popf
mov
xchg
and
out
xchg
arpl
idiv
jno
ficompl
test
jecxz
dec
adc
pusha
pop
rcrl
adc
into
popf
shl
mov
mov
inc
dec
lds
iret
and
rcll
push
sub
mov
add
mov
out
sbb
xchg
inc
and
jb
jl
dec
mov
pushl
xchg
inc
dec
xor
or
pop
mov
fidivl
xchg
pusha
pop
call
push
imul
lds
inc
ljmp
adc
cmpsb
enter
jecxz
mov
test
in
mov
gs
lcall
add
repz
test
lret
adc
xchg
mov
add
std
cltd
or
fildl
mov
rcr
jmp
lods
xchg
shl
rclb
movsb
dec
add
jo
jp
xor
lahf
movsb
das
adc
inc
scas
or
push
cmp
or
sbb
cmpsb
call
aad
push
sti
pop
inc
cmpsb
dec
cmpsl
aas
xchg
enter
rcll
leave
fmuls
jp
ljmp
icebp
add
mov
push
jnp
lods
inc
testb
in
jb
add
jg
add
mov
add
lahf
in
shrd
jp
adc
jp
add
rclb
cltd
in
cmp
in
scas
arpl
pop
mov
mov
adcl
xchg
add
dec
nop
out
xlat
jp
xchg
cmp
insb
mov
enter
pop
mov
xchg
out
xor
popf
cmp
add
push
rep
lcall
fcmovne
push
cmp
push
dec
pop
mov
lcall
xor
sub
out
imul
in
push
xor
pop
rorb
ja
aas
sbb
shll
daa
and
in
inc
pop
adc
inc
enter
fldl
addb
push
test
jmp
aaa
cwtl
sbb
cmp
inc
mov
and
dec
pushf
mov
sti
lahf
cmpsb
mov
loopne
push
sub
lahf
mov
push
or
les
jecxz
cs
fidivl
sbb
movsb
sub
mov
not
xchg
ror
xchg
jnp
std
mov
mov
inc
and
sbb
jno
jo
mov
sub
arpl
fwait
int3
fisttps
lret
cmpsb
out
dec
notb
mov
sbb
inc
pop
pop
xchg
dec
mov
lock
pop
jne
and
adc
inc
test
int3
mov
je
xchg
mov
js
insb
ret
xchg
sub
push
or
insl
jl
frstpm(287
bound
out
sbb
nop
dec
cmp
push
pop
mov
sbb
sub
sbb
fstps
xchg
inc
and
ljmp
add
aaa
sbb
xchg
xchg
sbb
sbb
add
mov
out
rcr
or
jmp
jecxz
arpl
xor
and
enter
xchg
inc
add
pop
pop
inc
sbb
pop
cli
xor
cmp
mov
je
fisubrs
mov
inc
aad
lds
or
aam
cmp
cs
loope
mov
pop
mov
fisttpll
sub
lea
cmp
push
sbb
fdivr
lea
mov
dec
leave
sub
mov
jnp
cmpsb
jae
jmp
pushf
loop
sbb
mov
iret
pop
mov
and
mov
mov
fsubr
or
mov
mov
fsubs
mov
enter
jge
jmp
lods
aad
push
lret
ja
dec
addl
jecxz
inc
out
imul
movb
repnz
out
add
inc
mov
out
std
mov
test
xchg
sbb
mov
aaa
xor
sti
push
iret
or
std
jle
add
lcall
insl
jl
sahf
push
or
mov
rclb
loop
lahf
ret
xor
cltd
stos
jmp
fdivrs
cltd
icebp
cmp
push
popa
sbb
lahf
jo
adc
pop
or
pop
inc
push
bound
mov
leave
fistpl
popf
pop
mov
xor
jle
and
test
dec
iret
add
add
pop
lahf
mov
cmp
cmp
push
add
scas
dec
mov
popf
cmp
push
sub
jns
pop
dec
sub
xchg
mov
fwait
addr16
xor
fimull
mov
orl
sbb
lret
mov
subb
mov
xor
push
ret
lret
aaa
push
cmp
inc
adc
pop
sub
add
dec
sti
jbe
daa
or
jl
mov
xor
push
aam
int3
ss
mov
cmpsb
fwait
mov
int3
aas
popl
cmc
ss
pop
push
clc
lcall
pop
sub
mov
hlt
jo
add
ds
sub
loop
stc
inc
in
fs
aaa
pop
in
in
inc
aaa
pop
xchg
mov
sbb
sub
insl
and
mov
insl
mov
fs
adc
xchg
adc
jne
sti
mov
insl
lahf
in
cs
dec
pop
pop
push
jmp
sbb
sarb
js
xchg
lahf
push
dec
sub
jle
adc
fs
mov
and
xor
les
je
pop
call
push
arpl
and
mov
scas
xor
xor
jp
push
mov
stos
mov
fstl
popf
adc
cli
sbb
bound
mov
cld
das
stos
setnp
je
mov
cmp
ficomps
xchg
xor
xchg
inc
and
push
push
lret
pusha
inc
sbb
mov
mov
sarb
adc
out
inc
mov
int3
in
int3
dec
mov
sub
add
jge
xchg
sbb
icebp
push
mov
loope
sub
jb
push
pop
jno
mov
sbb
mov
int
in
outsb
pop
je
xor
loope
mov
repnz
xchg
jmp
jae
cli
cwtl
int
int
sarl
imul
mov
jnp
or
mov
add
or
mov
into
scas
pop
test
stos
dec
xchg
push
adc
sar
stos
push
lret
enter
mov
adc
filds
out
stos
lcall
insl
into
dec
icebp
push
das
lods
mov
repz
sbb
jecxz
cmp
inc
sbb
adc
icebp
mov
sub
mov
lahf
jno
push
es
js
push
fcoms
xor
stc
jl
loopne
lds
xor
lea
jb
lock
mov
mov
sbb
mov
cmp
mov
or
sbb
jmp
inc
adc
sub
insb
hlt
mov
dec
inc
jns
cmp
xchg
popf
in
sub
cld
mov
mov
dec
mov
paddusb
mov
mov
fisttps
inc
mov
faddl
or
cli
stc
xchg
addl
and
leave
xchg
or
add
outsl
push
or
lea
iret
jge
sahf
jnp
icebp
mov
das
xchg
into
jp
xor
roll
pushf
aam
loop
es
fcmovu
stc
das
lods
mov
and
dec
lea
xchg
test
jbe
adc
jo,pn
inc
lds
iret
mov
shrb
shr
or
mov
test
das
mov
or
or
adc
aam
cmp
jb
jb
cld
dec
push
imul
lret
shrb
lock
fmull
inc
movsb
add
sbbl
and
mov
dec
imul
mov
and
mov
jnp
push
and
push
mov
rorb
xor
inc
sbb
lret
test
inc
sub
mov
xchg
notb
inc
jle
xor
in
inc
sub
imull
pop
add
mov
lods
aad
pop
lcall
pop
adc
in
inc
mov
les
push
jmp
cmp
pop
mov
or
sbb
mov
xchg
push
and
push
push
or
pusha
inc
cld
cmp
adc
push
sbb
pop
mov
push
and
mov
daa
mov
and
pusha
mov
lea
adc
cmp
sbb
in
imul
mov
xchg
or
ss
pop
xchg
cmp
stos
mov
adc
pop
cmp
cmp
xor
or
and
xlat
jp
inc
ret
jge
mov
or
rcll
mov
add
add
enter
cmp
cli
adc
pop
or
jle
jecxz
sub
iret
out
cltd
xchg
imul
fldt
sub
pop
js
addr16
in
lds
or
rol
orl
sarl
add
dec
adc
push
mov
loope
subl
icebp
and
icebp
orb
and
lahf
xor
mov
cmpsb
xchg
and
dec
jno
rolb
mov
mov
jg
repz
xchg
and
add
sti
sub
lods
mov
sti
cltd
notb
mov
sbb
inc
cltd
inc
sub
dec
sbb
and
mov
xor
outsl
push
inc
mov
mov
dec
jle
jg
xchg
cmp
mov
push
and
mov
cwtl
ret
xchg
mov
cmp
pop
mov
sub
je
xor
pop
jp
repnz
push
or
shrd
imul
or
sti
or
jp
ds
mov
daa
jbe
andb
out
dec
movsb
or
arpl
jns
test
ret
xchg
mov
mov
adc
xor
push
in
subl
in
mov
and
push
inc
adc
movsl
repnz
pop
adcb
pop
dec
adc
pop
mov
clc
dec
xor
sub
cmpb
fldenv
mov
add
xchg
and
clc
mov
fucomp
dec
punpckhbw
push
ss
int3
mov
cltd
rorl
fistpll
pop
loope
pushf
call
mov
pop
mov
imul
or
mov
push
mov
subl
testl
adc
inc
jo
sub
out
cmpsl
mov
mov
xchg
sub
inc
icebp
push
ror
aad
sbb
pusha
icebp
adc
xchg
mov
lret
push
mov
cmp
sub
addr16
shrb
inc
add
adc
jecxz
pop
push
movl
shlb
loop
cld
outsb
adc
sbb
mov
push
inc
push
scas
orb
xor
cmpsb
and
push
pop
lahf
mov
jne
inc
mov
pop
sub
xor
inc
jge
lret
mov
leave
orl
shr
loopne
inc
js
inc
inc
push
mov
add
nop
xchg
mov
sub
movsb
xor
icebp
pop
cltd
rorb
fwait
icebp
adcl
sbb
jmp
adcb
loope
xchg
cli
fcom
cmpsl
aas
pop
jp
pop
sbb
sbb
shrl
clc
mov
xchg
movsl
jno
pop
push
ret
test
aad
sbb
dec
push
mov
hlt
fsubrs
mov
fwait
push
cwtl
fisubrl
inc
xor
jl
mov
push
mov
xor
jb
dec
mov
and
mov
xor
cmc
ret
add
or
sbb
movsl
mov
jg
jns
push
pop
les
sub
sub
add
and
fcmovnu
addr16
int3
pop
mov
rorl
inc
sarb
es
xor
xchg
mov
dec
sbb
xor
sub
ljmp
sbb
mulb
dec
xor
dec
mov
dec
adc
stos
add
inc
xchg
orb
dec
or
je
cmp
shll
push
pop
addr16
xchg
push
jle
inc
in
pusha
mov
sti
xor
loopne
dec
push
nop
mov
test
push
pop
outsl
xchg
dec
push
decb
fcoms
cmp
les
jb
fisubl
mov
call
out
lahf
les
mov
push
fmull
add
inc
movsl
in
cmp
cmc
loopne
push
cmp
fisttps
mov
mov
sbb
mov
inc
andb
add
mov
xor
sub
or
pop
inc
aam
sub
adc
shr
push
aas
or
lods
cmp
ds
push
lods
into
adc
add
data16
aam
mov
xor
ja
aad
push
int3
cld
lods
push
and
push
js
sub
inc
mov
xorb
pop
lea
and
pushf
inc
mov
and
xor
outsb
xcrypt-ecb
cmpsl
dec
outsb
adc
push
cld
pop
mov
fs
xchg
cmp
dec
push
cmp
pop
inc
ficompl
or
push
dec
cmp
iret
jae
inc
call
cwtl
jb
push
decb
sar
gs
mov
push
add
xor
notb
sub
xor
push
in
dec
and
xchg
and
std
adc
xor
dec
js
mov
pcmpeqb
cmp
sub
enter
js
in
xor
cmp
sbb
bound
sub
bound
sbb
jne
xor
leave
fimull
push
push
aam
scas
push
inc
cmpsl
fldcw
lods
add
test
bnd
nop
inc
dec
xchg
add
jl
mov
test
je
add
mov
mov
and
xchg
sbb
jne
push
mov
fstl
idivl
mov
ds
data16
jmp
scas
dec
add
in
movsl
or
test
scas
cmpsb
outsb
es
cmp
ds
mov
orl
lahf
pop
jmp
mov
add
or
dec
mov
test
inc
xchg
stc
jmp
pop
xor
mov
jne
shrl
popf
fsubr
add
fstp
dec
das
adc
dec
out
outsb
xchg
ret
dec
or
mov
ds
sbb
cld
adc
jb
xchg
aam
jle
or
cmc
shl
jmp
jp
xor
add
push
mov
mov
sahf
out
jmp
outsl
mul
push
test
stos
add
mov
or
cwtl
das
test
dec
dec
pop
jmp
aaa
push
int3
jle
jb
and
ljmp
out
push
shr
sbb
and
pop
cltd
mov
sub
mov
dec
fildl
test
mov
decl
lret
and
sbb
call
leave
mov
sub
inc
in
in
sbb
movsb
into
data16
out
les
push
xchg
lahf
repnz
test
ret
dec
push
add
xchg
ds
xor
test
test
in
dec
ret
mov
and
push
insl
pop
cmp
pop
mov
jge
subl
mov
enter
inc
xchg
pop
xor
jno
xchg
cmpsl
adc
nop
shrb
adc
pop
jbe
adc
imul
dec
adc
scas
cltd
xor
loopne
mov
jmp
icebp
push
cmp
shrb
or
push
int3
cmp
sbb
test
push
loopne
std
enter
vpmacsswd
shl
ret
orb
hlt
cmp
mov
or
adc
lods
movsb
mov
push
cmc
or
xchg
into
loope
cwtl
inc
repz
xchg
out
stc
dec
inc
jecxz
add
hlt
sub
mov
pop
icebp
insl
in
jg
adc
sbb
fidivs
mov
pop
push
flds
adc
icebp
or
test
push
sti
test
in
movsb
inc
xor
pusha
adc
mov
sahf
mov
insl
jl
jmp
dec
mov
into
push
add
ds
jmp
std
cltd
jnp
push
push
imul
ss
dec
imul
leave
ror
cli
sbb
xor
jbe
inc
rcr
movsl
dec
stos
pushf
mov
add
fcomps
test
mov
pushf
sti
inc
fnstenv
pop
fistps
adc
sbb
std
lds
popf
data16
mov
std
inc
or
jae
add
jnp
aam
dec
xlat
pop
rclb
xor
std
sbb
mov
dec
mov
repz
loope
mov
mov
nop
arpl
cs
stos
in
push
jbe
mov
dec
mov
and
pusha
call
sbb
sbbl
sbb
lea
into
dec
ret
adc
hlt
jno
pop
and
push
xor
mov
jbe
dec
or
fwait
mov
orl
je
mov
sub
mov
daa
xchg
xchg
mov
mov
pop
adc
nop
cmp
mov
int
add
stc
in
sarl
cmpsl
cs
mov
mov
mov
mov
sbb
lods
adc
lods
stos
mov
pusha
inc
imull
mov
xlat
pusha
xor
xchg
dec
dec
out
sub
push
fnstsw
mov
les
add
cmp
scas
pushf
and
ljmp
jp
jno
or
jle
mov
lock
cpuid
xchg
inc
jae,pt
mov
pop
in
jl
jle
mov
mov
and
adc
cmp
push
or
jge
setbe
dec
movsl
cmp
pop
movsl
push
stos
jne
popa
test
jns
fildl
and
sub
mov
sti
cli
and
sbb
cmpsl
fdivs
scas
mov
pop
dec
inc
sbb
mov
cmp
push
dec
cmp
mov
ret
dec
loop
pop
jo
sbb
xchg
mov
outsl
nop
sbb
and
or
xchg
and
dec
mov
insl
sub
or
mov
outsb
out
xchg
ret
xor
mov
jmp
xor
shrl
sub
es
jge
xchg
xor
mov
cmp
test
mov
and
mov
sbb
inc
lcall
adc
aad
add
sub
ret
push
ret
push
push
test
ljmp
push
aas
repz
adcb
cmpsb
sti
sub
repnz
jne
out
pop
pusha
sub
outsl
mov
out
bound
or
pop
mov
jg
shrb
ret
sahf
lds
fstpl
mov
pop
dec
jle
es
les
test
xchg
rcrl
fdivrs
cli
in
fstp
sub
sub
jno
dec
repnz
addb
movsb
pop
int
setle
xlat
shll
add
loop
enter
in
dec
ja
or
jle
push
out
push
push
jb
mov
out
popf
cld
mov
or
inc
inc
jae
out
jmp
mov
mov
cmp
stc
or
inc
js
fdivl
jne
jb
cli
jp
jmp
pop
rcll
cmc
mov
in
movsb
mov
mov
xor
mov
push
stos
icebp
pop
sub
dec
push
jae
lret
shlb
mov
push
jne
scas
xor
xor
cmpsb
bound
mov
xlat
mov
sub
mov
add
sub
cmp
loop
bound
xchg
dec
in
std
jne
inc
loopne
push
sub
lret
cs
cmpsb
mov
jno
or
pusha
jecxz
jmp
mov
lret
aam
rolb
int
push
cltd
dec
cmp
in
and
xor
mov
aaa
mov
fdivs
es
jbe
xchg
out
je
cmpb
jp
outsl
dec
dec
pop
mov
push
aaa
enter
popa
mov
leave
pop
or
lods
cmp
cs
cmc
mov
fdivrl
mov
jno
gs
or
adc
popf
add
sub
cmp
adc
and
push
jo
ret
jmp
leave
mov
add
mov
mov
inc
jl
jl
pusha
jge
inc
int3
inc
push
lods
fldenv
push
mov
mov
dec
push
rorb
test
div
mulb
test
stos
mov
adc
add
inc
mov
cmp
in
fistpll
jo
dec
sub
xchg
pop
or
pop
in
enter
sbb
pushf
dec
imul
jp
push
sub
ret
dec
xchg
xchg
mov
pop
test
mov
xchg
mov
fstpl
cmp
pop
inc
mov
out
sub
fs
inc
pop
fbld
inc
cmpsl
test
sub
mov
jge
pushf
arpl
or
xor
adc
aaa
pop
pop
popf
adc
mov
mov
dec
adc
out
out
addr16
fsts
jecxz
insl
xchg
push
mov
loope
xchg
jecxz
leave
or
inc
mov
pop
mov
mov
xlat
jmp
mov
ret
pop
xchg
jo
pop
pop
fdiv
and
lar
jg
lds
ror
jne
bnd
xchg
sub
add
inc
and
enter
pop
pusha
dec
jae
roll
push
fmuls
or
sub
xor
mov
inc
add
xor
mov
mov
pushf
test
sbb
addl
pop
push
pop
sbb
push
or
imul
pop
out
or
daa
clc
scas
negb
cwtl
test
add
or
jp
adc
outsl
xlat
adc
out
cwtl
lret
cld
hlt
push
xchg
pop
push
xchg
call
rorb
in
mov
les
pop
xchg
sub
and
testb
lods
rorb
cmp
out
push
cld
pop
stc
push
jecxz
inc
jnp
mov
add
lcall
insl
je
cmpsl
movsb
out
fs
push
loop
out
les
cmp
mov
jmp
ret
mov
sub
dec
inc
sbb
jp
in
scas
inc
out
addr16
and
mul
mov
xchg
sub
or
icebp
aas
ss
jmp
mov
push
fcmovnb
xchg
pop
ljmp
sahf
sub
mov
push
int
and
adc
pop
jmp
jl
sub
out
xor
aad
add
shlb
cmovno
ja
dec
cmp
push
adc
jle
jae
into
jp
xor
pop
inc
sub
test
pop
pop
addb
jp
xchg
movsl
jmp
fucomi
inc
xchg
js
jb
hlt
into
mov
xchg
xor
out
mov
das
fxch
ljmp
or
lret
xchg
xchg
enter
pop
cltd
pop
or
push
mov
das
in
push
ljmp
sbb
cmp
dec
jmp
ds
aas
test
imul
cmp
test
cmp
jmp
sub
lods
push
cmp
xor
or
stos
cmp
xor
lds
xor
add
sahf
and
sub
dec
or
mov
xchg
inc
cmc
test
mov
jbe
aas
dec
gs
push
cmc
jp
sbb
stos
pop
roll
sbb
je
stos
insl
sti
xorl
push
adc
out
adc
inc
mov
pusha
fs
dec
push
lds
sbb
dec
imulb
aaa
hlt
fnstsw
jo
jle
sarb
inc
pop
cmp
xchg
sub
pop
xchg
jle
shrb
mov
addr16
xchg
mov
jecxz
and
jbe
and
jo
fnstcw
mov
std
pop
movsl
pop
adc
xor
push
mov
std
subl
jl
ficompl
mov
adc
stos
loope
outsb
loop
dec
lods
cmp
sbb
inc
pop
jl
push
enter
jbe
neg
lret
pop
je
jo
mov
mov
mov
or
pop
dec
jno
or
daa
mov
jecxz
cmpsb
sub
xor
and
xchg
jne
je
enter
test
ja
in
xor
dec
mov
adc
repz
pop
in
out
outsl
cmp
lcall
and
xchg
cld
js
jb
fdivp
cmp
dec
jno
popa
addb
push
bound
or
mov
jbe
jbe
pop
inc
push
dec
push
in
cmp
sbb
mov
fisttpll
jae
adcb
xchg
mov
test
std
scas
xchg
gs
jle
and
cmp
dec
aam
pop
sub
int3
push
xchg
push
mov
cmp
js
pop
push
pop
rcl
aad
mov
push
es
sahf
mov
cli
sbb
add
lods
add
fwait
subl
lret
jo
lret
sbb
and
push
frstor
xchg
aas
loop
push
dec
xor
out
or
ss
inc
int3
mov
pop
int
xchg
cmp
stos
mov
addr16
mov
stos
add
test
jmp
lahf
aaa
dec
mov
ljmp
lods
sbb
in
shlb
push
dec
fdiv
pcmpgtd
xor
push
out
xchg
pop
push
repz
inc
popf
xor
xor
shlb
pop
stos
and
rcl
nop
mov
out
popl
push
out
nop
insb
cltd
in
fbstp
add
jb
xor
pop
out
lcall
push
dec
mov
cmpsl
nop
jno
pop
cld
xchg
xor
push
pop
stos
rorb
gs
popa
jp
cmp
cmp
mov
jle
push
mov
in
sbb
dec
movsl
loopne
gs
shl
mul
push
push
dec
cmp
testb
shlb
push
lods
add
jle
or
ds
xchg
adc
fs
dec
stos
cs
push
fnstenv
jg
mov
ja
bnd
in
adc
movsb
mov
jmp
cmp
imul
ja
imulb
add
push
mov
lret
movsb
es
lahf
loopne
add
pushf
cmp
fisubrs
mov
cs
dec
shr
loopne
popa
jl
jge
ret
stos
test
jmp
or
hlt
aam
push
inc
push
adc
enter
ljmp
mov
add
push
pushf
jmp
mov
out
clc
int
subl
cmp
fisttpl
movsb
xor
pop
test
xor
out
dec
jp
mov
sbb
cmp
sub
pop
xor
lahf
ljmp
push
lcall
test
dec
sbb
adc
sub
test
or
loop
fs
aaa
sti
sbb
mov
cwtl
xchg
movsl
xchg
xchg
adc
mov
rorl
inc
xor
pusha
mov
mov
fstps
inc
roll
sti
sub
icebp
and
push
out
mov
jmp
jno
adc
das
addr16
or
xchg
add
mov
cltd
sbb
and
aad
mov
imul
rcr
cltd
xor
dec
sbb
push
das
lahf
leave
jne
cmpsl
jmp
andb
test
repnz
jmp
dec
xchg
xor
cli
out
jp
dec
jns
imul
inc
jbe
mov
xchg
xlat
xchg
or
push
movsb
and
xor
sub
rorb
imul
dec
arpl
cmpb
test
pop
inc
fwait
push
fcompl
mov
clc
test
inc
mov
fdivrs
fisubrs
sub
or
xor
in
cmpsb
mov
adc
push
and
repz
aaa
fwait
xor
addr16
arpl
xorb
or
arpl
mov
add
cmp
inc
or
adc
pop
gs
dec
enter
cltd
add
rolb
sbb
dec
sbbl
mov
jmp
dec
mov
lods
adc
aaa
add
adc
lea
adc
jmp
and
leave
push
shrb
dec
mov
aam
mov
and
movsb
cmpsb
rolb
mov
aam
mov
scas
outsb
sub
ljmp
adc
pop
push
mov
pop
lcall
and
add
pop
xor
pop
mov
movsb
mov
addr16
dec
push
pop
daa
pop
lods
mov
adc
pop
flds
adc
mov
jmp
add
scas
sbbb
sbb
pop
mov
and
push
dec
xchg
sub
or
mov
in
popa
cmp
nop
shll
scas
notb
and
jmp
xchg
jp
mov
mov
sahf
icebp
stc
mov
dec
cmpsl
mov
xchg
dec
or
inc
loop
pop
rcrb
adc
mov
xor
or
xor
mov
in
es
pop
mov
mov
sbb
addr16
sbbl
jne
sarl
imul
mov
jecxz
cs
push
ljmp
push
aam
loope
fldcw
mov
scas
pop
push
dec
or
fldcw
add
enter
mov
lods
cmpsb
repnz
dec
arpl
mov
cwtl
pop
mov
push
faddl
fldl
into
xor
mov
movlhps
pop
das
pop
ljmp
mov
repnz
push
mov
fbld
jp
sbb
mov
inc
mov
bswap
das
push
sub
fnstcw
xchg
fstpl
lcall
std
lret
fnsave
scas
dec
imul
jae
out
les
in
and
lods
inc
outsl
mull
shll
mov
ljmp
cmp
jmp
mov
insb
sbb
push
mov
dec
gs
or
jb
loope
mov
mov
stos
pop
jl
mov
pop
data16
movsl
inc
mov
sbb
je
cmpsl
add
dec
enter
sub
cwtl
pop
xor
cwtl
pushf
pop
addb
cmp
nop
gs
inc
iret
imul
movsb
inc
jb
lcall
xchg
iret
mov
mov
data16
pusha
loopne
dec
pop
repz
icebp
mov
sub
adc
mov
sub
xchg
sahf
mov
add
mov
pushw
inc
das
in
mov
jmp
mov
scas
push
call
cmpsl
sahf
xchg
inc
rorl
jg
cltd
sbb
inc
cmp
pop
pop
in
sbb
fdecstp
stos
jne
sub
mov
xlat
loopne
mov
shll
mov
in
mov
xor
add
and
test
loopne
inc
insb
inc
or
add
dec
adc
bound
test
ljmp
das
ret
sub
lahf
adc
mov
aas
cmp
ds
icebp
mov
fstpt
jmp
enter
je
ret
and
mov
dec
jnp
out
inc
mov
outsl
les
jae
mov
or
stc
push
mov
ret
mov
push
pop
xor
imul
mov
sbbb
sbb
adc
cwtl
es
dec
icebp
popa
add
dec
mov
push
mov
add
adc
popa
xchg
lea
mov
mov
jle
fsubrs
mov
fnsave
gs
dec
daa
jmp
sub
push
or
outsl
daa
sub
ja
lahf
movsl
pop
dec
ss
xlat
sub
test
dec
mov
dec
ret
pop
sbb
repz
sub
sub
int3
mov
mov
ret
adc
and
xor
mov
clc
adc
das
aaa
test
in
pop
fsubl
jge
xchg
stc
push
fcmovnb
push
jnp
inc
mov
shr
jae
or
dec
xor
in
dec
ficoms
jns
xchg
notl
push
xor
jns
push
iret
test
mov
mov
adc
add
loop
ss
dec
rolb
pop
xor
dec
push
ss
jg
push
leave
pop
in
and
inc
jecxz
insb
cmc
or
popa
fs
mov
inc
sbb
pop
sub
fistpl
call
xlat
test
scas
jp
add
movl
cmp
movl
je
xor
mov
not
mov
subl
xor
adcl
xor
xorl
add
xorl
add
notl
adc
xor
andl
mov
orl
push
add
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
xorl
movl
dec
mov
orl
mov
mov
adcl
xor
add
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
dec
mov
mov
sbbl
xor
mov
sub
mov
mov
add
movzwl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
call
jmp
mov
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
call
jmp
lea
xorl
mov
inc
mov
mov
xor
sub
mov
movl
mov
mov
sub
add
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
pushl
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
sbb
mov
push
mov
xor
or
mov
or
xor
xor
mov
push
orl
add
movl
jmp
movl
mov
mov
inc
movl
cmp
movl
jb
adc
mov
xor
subl
add
jmp
mov
jmp
sub
xor
test
mov
mov
addr16
inc
mov
jp
mov
int3
ss
dec
mov
sub
add
jae
pop
shl
inc
ror
nop
jae
xchg
mov
cmpsl
repz
rorl
mov
fistl
pop
mov
lcall
mov
std
lret
popa
mov
sahf
mov
mov
adc
lea
and
icebp
jp
inc
lea
and
jbe
dec
repz
lds
push
mov
add
nop
inc
inc
imul
jo
push
xor
test
popf
jne
pop
sub
push
addr16
outsl
or
push
call
mov
cmpsl
aas
lret
jmp
sub
ret
xchg
out
xchg
imul
jmp
pop
cld
jne
mov
mov
push
outsl
aam
repz
cmpsl
out
inc
rcrl
out
nop
jmp
ljmp
dec
fisubrl
cmpsb
xchg
aaa
cmpsl
in
test
popf
xlat
add
xor
orb
mov
inc
or
call
mov
fs
stos
and
xor
fcoms
mov
sarb
sbbb
mov
and
and
gs
cs
test
in
xor
jge
sbb
sarl
add
xor
and
fisubl
pop
test
and
pop
test
sub
xor
pop
mov
inc
testb
and
jp
xor
adc
dec
push
inc
push
sub
arpl
push
dec
fildll
jecxz
bound
add
lea
loop
arpl
push
push
gs
sub
xor
inc
outsl
inc
adc
aas
cmp
mov
mov
inc
or
lret
add
and
inc
mov
pop
jecxz
jo
aas
adc
mov
pop
pop
and
xchg
out
into
les
jg
pop
nop
fisttpll
add
xor
mov
add
mov
daa
in
rcrb
lahf
xchg
xor
lock
push
push
mov
adc
mov
push
test
mov
mov
jl
xchg
mov
test
xchg
stos
mov
lea
imul
adc
mov
stos
lock
jp
clc
push
lods
adc
scas
dec
jb
jb
add
cmp
mov
out
xor
sub
cmpsl
jmp
sub
ret
repz
push
xor
or
hlt
dec
test
adc
push
push
lcall
fcomi
xchg
dec
mov
inc
mov
add
dec
test
or
loopne
mov
mov
mov
stos
mov
orl
loope
and
imul
xchg
test
mov
push
jecxz
sub
inc
arpl
push
jno
test
mov
dec
stos
dec
push
daa
and
xor
pop
fistpl
cmp
mov
fwait
addl
cmpsb
test
cmpsl
mov
cmc
in
inc
add
fsubrs
daa
aaa
sahf
xchg
mov
pusha
cmp
inc
or
cmp
pushl
inc
iret
push
shlb
sub
mov
pop
push
xchg
insl
into
je
movsb
shlb
mov
cld
rolb
movb
imul
loope
dec
mov
and
cmp
mov
stos
jle
mov
adc
mov
scas
pop
jnp
jbe
push
sub
outsl
fcmovnbe
mov
ss
sbb
ret
mov
xchg
push
das
sub
int
test
pop
mov
fdivrs
jl
popf
cmpsb
cmpb
lock
pop
loopne
inc
mov
dec
pop
add
add
jmp
repnz
data16
sbb
cmc
cmc
mov
call
loopne
add
push
adc
mov
addr16
lds
push
cmp
sbb
and
mov
cmpsb
sub
rcrl
add
xor
or
mov
jl
xor
push
sub
arpl
popf
push
sbb
int3
add
sub
pop
faddl
test
sbb
nop
outsb
mov
sub
or
cmpsb
movsb
adc
pop
lret
test
mov
pop
mov
out
lock
adc
in
and
add
push
sbb
inc
shll
xor
mov
fadd
addr16
xchg
lahf
pop
or
test
inc
dec
outsb
jae
xor
pop
dec
pop
cmp
xor
and
sub
xor
push
push
add
mov
rol
dec
movsb
xor
or
xchg
xchg
dec
addl
shrb
movsl
bound
insb
mov
loop
dec
sbb
rol
cmp
lahf
push
mov
out
fwait
pop
mov
adc
test
lret
and
loopne
scas
xchg
sarb
lahf
jae
push
in
push
jo
mov
inc
imul
mov
or
mov
add
inc
out
push
push
and
jnp
sub
test
pushf
or
push
std
fdivrl
xchg
loopne
out
roll
shlb
lock
nop
cltd
lock
imul
push
rcrb
xor
and
int
jmp
sbb
jo
xchg
jge
cltd
dec
icebp
jge
data16
andb
lods
inc
push
out
das
sub
adc
imul
and
mov
std
roll
into
pop
pop
cmp
leave
inc
mov
sbb
mov
adc
icebp
ret
sahf
insl
and
std
sbb
mov
movsl
dec
call
xchg
xchg
out
repnz
jnp
pop
mov
xor
imul
mov
idivb
jae
cmp
mov
mov
mov
nop
push
in
and
and
inc
inc
pop
repz
mov
or
lea
and
pusha
lret
pushf
adc
pop
jo
mov
and
xor
mov
cmp
sub
push
ficoml
decb
jae
sbb
mov
movsb
push
movsl
cmp
fsubrl
xchg
lcall
mov
sbb
mov
sub
and
sbb
jmp
lcall
mov
inc
cmp
jg
in
scas
push
add
shr
adc
out
aam
and
imul
test
mov
jo
sbb
cmpsl
test
test
xor
lcall
roll
adc
jmp
pop
ret
fdivrl
inc
ljmp
jo
push
sahf
scas
dec
pop
insb
fnsave
mov
popa
fptan
les
in
mov
fimuls
mov
ret
pop
lret
ljmp
and
mov
add
stos
fsub
andb
out
or
ficomps
sbb
xchg
or
inc
cmpsl
sub
sub
xchg
test
pop
ds
push
lret
xchg
push
add
mov
sub
sti
adc
and
test
xchg
stos
push
lret
push
cmp
pop
and
and
out
push
push
rcrb
lcall
mov
ss
mov
jmp
xchg
cmp
cmp
into
cmp
fstps
in
imul
nop
leave
push
jns
and
loope
lea
movlps
sub
pop
sub
insl
or
clc
adc
mov
fistl
xor
mov
scas
jge
cmp
and
jmp
mov
add
pop
imull
lods
sbb
dec
push
fists
mov
pop
fucomip
rcr
adc
fstps
xchg
xchg
in
and
push
push
sub
loopne
sub
insl
mov
and
jecxz
je
sub
sbb
adc
mov
mov
ljmp
jmp
arpl
inc
ret
in
or
push
shll
jo
xchg
icebp
fcompl
sub
push
pop
aad
jae
sbb
divb
push
or
test
je
call
lea
popa
and
inc
jo
pop
pop
mov
jns
fbld
cmp
mov
loopne
data16
push
shll
sbb
and
stos
loope
aaa
dec
test
in
add
inc
cmp
inc
xor
cmp
imul
pop
sub
mov
push
xchg
cmp
xchg
push
xor
jp
mov
mov
xor
inc
xchg
mov
int3
inc
adc
sbb
sub
mov
inc
mov
mov
push
int
cmc
xchg
sbb
jmp
or
add
jmp
push
call
mov
cs
ds
jp
ljmp
push
mov
cmp
xchg
lods
shl
sti
arpl
inc
lahf
cwtl
jmp
push
fdivp
fsubs
push
xchg
das
scas
das
mov
fs
jmp
test
test
mov
shrb
shlb
xchg
imul
outsl
sbb
or
jmp
test
popa
adc
mov
fsubrs
enter
jnp
mov
std
pop
lods
xor
xchg
xor
and
mov
rol
xor
add
loopne
aad
inc
mov
call
orl
add
test
lock
xchg
xchg
cmpsb
cmc
inc
or
pop
inc
dec
fucomp
mov
pop
clc
mov
xor
daa
out
sbb
sbb
insl
negl
fs
inc
jecxz
mov
in
inc
sbb
add
push
rcll
adc
sub
inc
and
sbb
pop
xchg
sti
sub
mov
orl
cltd
hlt
out
aaa
push
inc
call
and
fstpt
mov
cwtl
xor
dec
decb
nop
pop
fildl
pop
into
mov
lea
adc
clc
adc
clc
fimull
sbb
mov
or
sbb
sbb
push
lahf
mov
daa
inc
mov
mov
imul
push
dec
push
xchg
out
test
fadds
jp
rorb
lcall
xchg
mov
test
and
push
sahf
notb
lea
dec
adc
xor
divb
jmp
pop
pop
rcrb
icebp
xchg
add
in
xor
inc
xchg
jl
or
sti
lods
loopne
inc
test
aaa
and
mov
sar
leave
pop
std
dec
outsl
js
loope
in
jecxz
adc
mov
les
inc
fstps
push
jns
idivl
xchg
cmp
dec
push
xchg
xchg
out
xor
mov
dec
pop
jo
jae
mov
xor
lods
aad
inc
popf
sbb
xor
cmp
add
or
mov
test
adc
dec
add
cwtl
sti
in
push
add
jne
iret
loopne
aad
cli
jge
xchg
mov
dec
cli
lret
mov
sbb
aad
mov
pop
mov
mov
xchg
jnp
mov
add
sub
mov
and
imul
scas
adcl
test
jnp
push
xor
test
mov
add
fdivrp
nop
sub
insb
insb
push
jecxz
dec
mov
scas
les
dec
ja
das
adc
movsl
inc
test
in
xor
push
mov
idivb
clc
jns
jne
sub
stc
pop
movsl
es
xlat
mov
push
jmp
lods
mov
mov
pop
cs
scas
aas
and
sbb
inc
ja
sahf
scas
xor
pop
das
stos
xor
inc
stc
mov
popf
insl
mov
add
aad
push
push
fiaddl
sub
ja
clc
in
clc
outsb
dec
pop
sbb
jne
addr16
stos
cmpb
hlt
adc
outsl
divl
cld
sub
xor
out
pushf
mov
call
mov
popa
das
xor
pop
jae
imul
or
dec
mov
divl
jbe
or
rorl
test
mov
lods
daa
inc
lahf
test
push
adc
push
lock
mov
mov
bswap
xchg
std
rcrb
je
int
jnp
xor
test
cmp
inc
pushf
repz
fcomi
jnp
xchg
fdiv
ljmp
insb
push
lock
sbb
adc
fiaddl
shrb
fldt
dec
sub
dec
scas
shll
pop
push
lret
inc
fwait
ss
hlt
pop
mov
xchg
insl
insl
cmp
out
enter
jmp
xchg
push
sbb
pop
popl
add
test
xor
stc
test
cmp
es
cwtl
xlat
adc
mov
pop
movsl
ljmp
aad
mov
pop
ret
jmp
mov
leave
jle,pt
jmp
pop
jle
inc
jae
insb
xchg
adc
jg
push
in
adc
push
call
and
inc
adc
int
cltd
cmp
sbb
call
and
pushf
mov
fs
mov
test
jecxz
dec
mov
lea
cmpsb
ret
pusha
outsb
cmp
mov
mov
mov
adc
test
xlat
pop
mov
mov
gs
rolb
mov
sub
fs
out
pop
in
pop
sub
sub
xchg
jo
sub
fidivrs
mov
sbb
adc
repnz
mov
adc
aad
insl
dec
cmpsb
ret
rcrl
andl
imul
repnz
xchg
mov
test
jge
movsb
movsl
fwait
ljmp
jb
cmp
ret
jmp
adc
lods
call
pop
fisttpl
lds
push
fwait
aaa
ja
cmpsw
out
xor
push
mov
icebp
bound
imul
sti
cmp
int
pop
out
call
cli
sub
xchg
mov
cld
xchg
bound
or
xor
dec
push
sbb
push
lret
mov
gs
adc
enter
add
iret
inc
jg
mov
loopne
aas
mov
ds
out
mov
jmp
daa
pop
insl
mov
dec
lahf
inc
or
fstpl
call
jno
repz
pop
inc
addb
dec
cmp
out
fists
ret
dec
enter
lds
jbe
mov
or
mov
movsb
lret
push
mov
outsb
dec
call
push
jno
rorl
movsb
call
insb
lods
lcall
in
shrl
out
in
subl
mov
jns
inc
add
imul
push
ffree
cs
xchg
sub
or
adc
xchg
mov
loop
gs
popf
repz
push
mov
fidivl
push
jno
adc
das
rorl
mov
cmp
daa
add
push
outsl
or
mov
stc
jnp
sahf
adc
adc
aam
jb
inc
test
out
cmp
lods
fcoms
or
mov
sbbl
arpl
fisttpl
ja
pop
mov
daa
fstps
orl
dec
mov
or
adc
mov
dec
test
lods
inc
lea
dec
sub
push
gs
imul
je
test
insl
and
push
je
shrb
mull
js
xor
lret
outsb
and
lods
enter
xchg
ret
pop
test
dec
outsb
push
pop
adc
jecxz
lret
mov
mov
xchg
xor
sbb
icebp
hlt
int3
xchg
mov
icebp
call
sbb
lahf
arpl
cmc
fs
lcall
or
jne
cmpsl
gs
cld
add
adc
ds
ret
out
cmp
or
cmp
fucomp
and
and
cmc
inc
ficoml
mov
sbb
push
sbb
data16
push
stos
mov
lret
inc
push
je
lea
mov
or
and
mov
ja
scas
xchg
mov
push
icebp
add
mov
push
mov
dec
adc
sahf
adc
dec
lea
or
cmp
call
xchg
mov
push
insb
sub
mov
jle
sahf
out
xor
inc
jmp
pop
call
lock
int3
add
pusha
and
mov
sbb
fcmovne
lods
incl
arpl
leave
xchg
fstl
inc
faddl
and
mov
dec
adc
fsubl
push
testl
jae
test
push
inc
pop
cmp
or
cld
push
test
adc
and
pop
into
mov
pop
xor
out
sub
xor
int
mov
mov
repnz
repnz
inc
bound
test
push
je
push
dec
scas
push
scas
jns
adc
insl
scas
xchg
lods
and
lret
jmp
and
shlb
cmpsb
shlb
xchg
inc
inc
adc
pop
lods
pop
lods
cmp
jl
adc
movsl
flds
mov
ja
rorl
push
cmp
hlt
gs
mov
push
into
jnp
or
adc
or
in
jns
lds
in
mov
cmp
mov
test
inc
sbb
pop
ja
inc
dec
hlt
dec
addr16
inc
mov
xchg
into
push
mov
mov
in
and
imul
and
enter
stc
mov
sbb
cmp
pop
fildll
jge
push
test
mov
xlat
mov
sbb
int
je
ja
mov
stos
es
jp
sub
orl
rcrl
cwtl
dec
in
inc
sbb
xor
fisttpl
mov
das
dec
jbe
xchg
scas
frstor
dec
jmp
jo
xchg
or
pop
mov
push
loope
lods
aad
leave
movsl
inc
in
pop
jp
jl
xchg
outsl
jge
mov
xor
xorl
lret
mov
mov
mov
mov
sbb
dec
cmp
test
inc
cld
js
into
insl
out
pop
jmp
aad
fdivrs
mov
scas
notl
jb
insb
stos
dec
push
hlt
cmp
in
lods
mov
jo
mov
dec
imul
xor
mov
dec
dec
lret
cmpsl
and
in
repnz
sub
out
sbb
push
push
cmp
punpcklwd
imul
insb
mov
mov
push
js
add
push
jnp
nop
sub
xchg
dec
insl
ja
push
pop
shll
jmp
xor
sti
iret
loop
dec
sahf
sbb
call
push
push
mov
push
jl
xchg
ficoms
pop
mov
outsb
divb
mov
push
inc
sbb
lret
sub
mov
ja
or
mov
jno
fimull
pop
popa
mov
pushf
cmp
xchg
icebp
push
lods
inc
cmp
and
mov
xchg
jb
sub
fsubs
mov
aad
out
andl
lcall
mov
inc
and
psadbw
adc
or
sbb
dec
cmpsb
mov
mov
pop
inc
jecxz
sub
es
jg
je
fsubs
arpl
mov
into
or
fwait
ljmp
testl
cmp
and
lcall
outsb
mov
popf
jecxz
mov
popa
jo
das
sub
xor
jle
jp
push
hlt
push
xchg
mov
fnstcw
pop
cltd
mov
repz
in
inc
daa
sbb
jb
cmpb
push
fdivs
cmc
in
jle
jae
adc
lods
or
sti
dec
sbb
daa
fs
mov
adc
pop
xor
add
test
xchg
push
std
arpl
lock
jp
fidivl
add
hlt
xchg
fimuls
mov
sbb
cmp
stc
push
cwtl
xchg
inc
jl
sub
xor
mov
loop
sbb
jge
dec
mov
insb
sbb
loopne
mov
cmc
mov
add
lock
test
ret
cmp
ret
dec
andb
pop
test
xchg
sub
xchg
or
jp
or
push
xor
xchg
mov
xchg
ret
pushf
out
cmp
add
jne
adc
xor
pop
lds
fnstcw
jl
jno
and
lds
xchg
xor
in
mov
mov
repz
cmc
jl
lds
jo
fdivrs
xchg
fldcw
into
push
lret
addr16
mov
pop
jnp
dec
into
push
cld
sbb
jne
jb
xor
add
push
push
sbb
sub
cmp
jns
inc
or
and
sub
pushf
insb
das
dec
fsubs
xchg
push
stos
adc
das
adc
aam
andl
sbb
shll
movsb
push
ljmp
xchg
dec
adc
inc
add
mov
xor
sbb
loopne
or
cmp
enter
and
or
ja
imul
cmp
pop
stc
testl
push
mov
xor
mov
out
sbb
arpl
fbld
mov
xchg
clc
clc
pop
jecxz
repz
sub
push
hlt
or
subb
clc
and
pop
sahf
lcall
sub
push
jge
push
out
pushf
or
adcb
push
and
pop
outsb
sbb
xchg
xchg
adc
lret
push
add
push
mov
aam
outsb
or
xchg
and
and
push
lahf
sub
inc
das
jecxz
push
int3
add
add
add
rcl
int
int3
fcoml
adc
xchg
xchg
cltd
xchg
dec
pusha
movb
xchg
rolb
push
cld
in
bound
cmp
pop
push
les
or
add
clc
lods
jae
stos
jnp
dec
arpl
jge
jnp
mov
jle
dec
mov
xlat
push
jnp
pop
sbb
scas
pop
aam
sbb
jne
mov
mov
jg
xchg
test
fadds
jle
int3
xor
xchg
nop
aaa
jnp
repz
addr16
outsb
stos
shr
push
loope
add
or
bound
mov
dec
jmp
or
cmp
enter
inc
mov
pop
cmp
dec
mov
add
repz
mov
pushf
jnp
scas
jecxz
and
push
lret
pminub
mov
cmpsb
inc
fnsave
xlat
push
ds
daa
dec
call
movsl
cmp
sbb
jg
out
daa
mov
push
ffree
dec
std
dec
arpl
mov
sbb
pop
jo
pop
mov
mov
sbb
xor
dec
iret
std
cwtl
dec
test
jo,pn
ficoml
mov
rclb
xor
adc
mov
jae
and
mov
into
mov
pop
aam
movsb
or
add
std
or
aaa
add
jno
cmp
aam
mov
dec
sbbl
cmp
inc
inc
push
jmp
dec
mov
clc
scas
push
call
shll
xchg
outsl
iret
arpl
lahf
cmp
jo
das
xor
jecxz
pop
inc
flds
shrb
mov
xlat
lods
xlat
mov
scas
mov
or
arpl
subb
fidivrs
mov
aas
jno
jnp
push
push
fimull
pop
std
sbb
mov
pop
mov
in
scas
jg
adc
mov
popf
push
pop
pop
push
out
test
pop
pop
stc
mov
int3
fildl
test
push
ja
cli
mov
jg
fcmovbe
repz
mov
out
jne
aaa
std
sbb
pop
stc
sbb
or
sbb
sbb
cmp
xchg
cmp
test
sbb
dec
mov
pop
push
outsl
pushf
aam
jmp
add
test
ljmp
mov
cmpsl
mov
xlat
lahf
and
add
push
scas
dec
and
jns
sub
push
inc
mov
pop
scas
ficoml
ja
xchg
rclb
dec
and
pop
rcr
mov
push
add
add
push
push
sahf
clc
and
adc
push
and
mov
mov
scas
adc
mov
push
std
fsubrs
dec
or
lahf
jnp
loope
repz
lahf
pop
xchg
in
js
jle
iret
lods
xor
dec
repz
cmpsl
jne
or
fiaddl
lret
add
test
adc
push
sti
frndint
ljmp
frstor
dec
xchg
js
lahf
pop
sbb
jbe
add
ja
sbb
lods
int
and
xchg
fildl
movsl
or
notl
sub
push
out
pop
xor
fidivrs
add
shll
mov
mov
mov
inc
push
add
jg
std
inc
pop
loope
cld
xor
ja
addr16
mov
lcall
pop
arpl
add
cmpsl
pop
pusha
add
mov
outsb
mov
sub
sub
std
aam
cmpsl
or
dec
cmp
js
inc
jmp
adc
sbb
and
mov
mov
pop
adc
cmp
jne
xchg
pop
jecxz
ficoms
adc
push
dec
mov
xor
dec
or
test
daa
mov
stos
pop
lar
out
cld
mov
cwtl
adc
cltd
push
adc
inc
in
in
dec
and
and
mov
loopne
pop
shrl
adc
ds
inc
stos
cmp
mov
pop
movb
xor
dec
jl
cmp
adc
jb
jae
cmp
push
mov
out
pop
mov
out
aad
add
cmc
testl
and
andb
adc
push
bound
cmp
cmp
js
mov
movsb
mov
mov
push
test
xor
dec
mov
xchg
ja
or
sahf
and
jne
push
inc
loopne
or
lods
pop
stos
test
pop
cmpsb
push
imul
movhps
mov
mov
xor
pop
push
pop
push
jno
push
dec
gs
mov
loop
in
inc
adc
xlat
lahf
stc
sbb
inc
addr16
inc
out
add
rorl
rolb
sub
stos
pusha
mov
sbb
aas
sbb
xchg
mov
mov
sbb
sub
hlt
leave
or
out
lcall
sti
mov
push
xor
mov
push
ds
lods
jae
das
stos
scas
mov
mov
insl
lahf
pop
xchg
xchg
jo
xlat
scas
pop
or
sbb
push
lods
or
mov
add
dec
sbb
push
notl
push
push
add
dec
pop
data16
cmp
xor
inc
push
lret
inc
mov
cli
outsl
jl
faddl
negl
pushf
adc
lock
leave
push
xor
loopne
cli
mov
mov
pushf
orps
insl
cmp
movsb
mov
xchg
addb
xor
imul
dec
jg
aad
jnp
imul
mov
icebp
xchg
mov
or
inc
pop
scas
add
fwait
jbe
sub
inc
mov
into
notb
cmp
inc
movsb
cmpsl
leave
aaa
mov
mov
iret
pop
mov
xor
mov
sbb
sbb
cmpsl
cmp
xor
jns
fldcw
dec
mov
inc
mov
inc
xor
pop
lods
push
fs
insb
adcl
cmp
add
push
test
lods
dec
inc
pop
movsl
in
pop
sub
jp
cmp
sub
xchg
mov
mov
pop
push
iret
test
xchg
add
mov
fwait
mov
sub
ljmp
xchg
cmp
rolb
aad
movsb
sarl
insb
ret
xchg
jge
pop
js
dec
rcll
arpl
xor
jo
hlt
cld
pop
xchg
in
jno
dec
insb
call
dec
ljmp
test
or
or
push
aas
lds
cmp
lcall
jns
lds
sahf
es
imul
cmc
das
mov
mov
sub
pop
movsl
lret
repnz
repz
test
or
js
add
popa
lds
pop
sbb
ret
jle
addr16
lahf
push
cmp
sbb
and
dec
pop
xchg
cltd
mov
xchg
out
int
out
fisubrs
xor
mov
movsb
xchg
pop
popf
lret
pop
scas
push
div
sbb
pop
push
cmp
mov
aad
and
sarl
or
dec
mov
or
ficompl
leave
icebp
sub
aam
fsubs
xchg
inc
adc
outsl
test
or
int3
adc
dec
pop
bound
push
adc
out
rcll
movsb
enter
roll
sahf
cmp
mov
fisttpll
stos
fs
pusha
rolb
inc
shlb
movsl
lods
icebp
mov
test
add
add
pop
xchg
inc
inc
cltd
xor
xchg
pop
dec
test
sbb
mov
nop
into
out
xlat
test
hlt
pop
repz
fldt
repnz
xchg
std
mov
call
inc
jo
rclb
xchg
and
int3
pop
push
xchg
clc
gs
js
mov
loope
push
shll
out
dec
mov
push
cld
xchg
pop
mov
insl
pop
push
xchg
and
repnz
std
mov
push
pop
hlt
cld
popf
sahf
or
adc
inc
xor
cmpsb
outsb
bound
out
sub
cmc
dec
cmc
push
jb
sub
mov
mov
fdivl
rcll
pop
jns
adc
aad
mov
icebp
or
fists
jae
gs
repnz
adc
inc
dec
mov
imul
in
dec
mov
lcall
adc
push
and
or
fs
and
ljmp
cld
push
mov
ficoms
fistps
fwait
dec
and
adc
mov
dec
pop
cmp
push
and
push
jecxz
ficomps
pop
mov
js
mov
xchg
jno
xchg
daa
sub
lods
imul
stos
and
test
jl
jmp
pop
orb
dec
inc
mov
jbe
sub
sub
push
mov
incb
xchg
subb
jbe
push
insb
or
add
mov
lret
cmp
jecxz
insb
cs
mov
add
dec
add
nop
xchg
loopne
dec
inc
shr
xchg
xchg
negl
ss
push
lret
and
and
xchg
jb
jae
ret
pusha
into
mov
test
imul
sub
out
int
notl
test
les
jle
xchg
es
xchg
mov
mov
loope
das
add
divl
push
push
push
push
push
adc
push
and
push
mov
cmpsb
ret
test
mov
add
mov
xchg
pushf
in
dec
imul
inc
dec
imulb
mov
cmpl
xor
xchg
push
add
fs
cmp
mov
add
nop
xchg
push
adc
mov
xchg
stos
test
and
jo
and
stos
leave
pop
jg
icebp
mov
xchg
outsb
add
mov
mov
dec
xor
pop
dec
jbe
clc
add
out
mov
mov
dec
cmpb
stos
cmc
outsl
lds
push
repnz
or
lock
push
xchg
outsb
aas
pop
xchg
lcall
scas
aam
or
scas
cld
mov
loop
inc
dec
push
push
dec
lret
cmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
mov
adcl
add
subl
movzwl
xorl
mov
or
mov
movzwl
addl
xor
subl
add
mov
mov
inc
mov
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jbe
jmp
push
pushl
pushl
pushl
pushl
pushl
call
cmpl
jb
mov
xor
mov
adc
xor
add
mov
mov
xor
add
adc
mov
movl
adc
movl
or
movl
sub
mov
and
mov
mov
mov
adc
xor
add
mov
movl
mov
movl
je
mov
mov
sub
imul
mov
movzbl
sub
mov
adcl
xor
subl
xor
sub
and
sub
xor
adc
mov
mov
mov
sub
imul
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
notl
add
sbbl
imul
mov
mov
movzwl
xor
mov
add
or
dec
mov
mov
xor
mov
adcl
add
xor
incl
mov
sbbl
mov
addl
mov
add
incl
and
and
mov
xorl
mov
mov
lea
mov
and
mov
or
mov
mov
orl
sub
add
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
xor
orl
add
movl
jne
jmp
and
mov
sub
add
xor
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
xorl
xor
sub
adcl
sub
andl
xor
movl
mov
movzwl
mov
mov
jmp
adcl
mov
addl
mov
xor
xor
jmp
push
xor
pop
inc
or
into
addr16
mov
inc
cmpb
pop
jp
repnz
mov
pop
sub
sub
mov
stos
and
dec
in
xchg
jl
mov
fisubrs
pop
lea
div
dec
int
inc
int3
adc
jae
push
push
and
aam
popf
xchg
out
repnz
out
jge
xchg
add
sbb
fiadds
mov
cs
sbbb
call
mov
and
adc
mov
jle
lcall
mov
cmp
pop
outsb
dec
hlt
push
and
cltd
jbe
lods
jno
mov
dec
mov
int3
add
les
test
outsb
lret
push
dec
xchg
je
inc
add
and
in
dec
lea
ret
xor
cmpsb
mov
clc
movsl
add
and
xor
mov
outsl
mov
in
sub
imul
cmp
clc
sbb
jecxz
jns
int3
xor
in
inc
mov
mov
jae
ljmp
dec
mov
out
ret
xchg
iret
popf
pop
or
sbb
push
push
mov
jmp
adc
pusha
lods
idivb
xchg
cmp
cmp
vpsubsb
add
adc
lret
or
dec
mov
mov
adc
ljmp
mov
pop
cmp
cmp
sub
std
mov
inc
jl
es
and
popf
addb
aam
or
or
mov
loope
testb
push
jns
aad
addr16
je
mov
and
out
lea
leave
and
data16
pop
ljmp
jl
sub
inc
push
push
subl
and
dec
push
js
lcall
xchg
and
repz
lock
cmp
add
sbb
enter
int
pop
lds
dec
sahf
iret
in
push
testl
jge
aam
out
outsl
aam
ja
sbb
and
stos
aas
enter
enter
mov
cmp
mov
or
dec
inc
and
jmp
mov
adc
das
jns
jo
xor
jmp
lock
cmp
rol
mov
lahf
hlt
test
cmp
adc
cs
dec
nop
add
adc
pop
push
mov
in
cmp
mov
in
divb
add
repnz
fimuls
mov
xchg
divb
push
decb
mov
aam
fldl
xor
adc
aaa
faddl
adc
loop
lea
xchg
pop
and
sarb
pop
sti
xchg
je
arpl
lret
adc
mov
cmpsl
xchg
daa
cmpsb
and
mov
lahf
pop
sti
xchg
jle
and
pop
mov
mov
cmc
and
xchg
mov
mov
dec
ljmp
add
leave
movsl
cmpl
push
push
ja
xchg
or
inc
jbe
jge
adc
cld
mov
stos
sti
leave
xchg
int
in
mov
inc
outsl
xor
xor
in
dec
mov
rorb
subb
adc
add
add
aam
cs
push
scas
scas
xchg
popf
sbbl
sbb
push
adc
cmp
call
jae
push
and
pushf
in
mov
shl
or
push
movsb
pop
mov
dec
adc
aad
cld
outsl
leave
xlat
mov
dec
ret
mov
repnz
cli
dec
imul
lret
dec
add
test
fistpl
mov
jb
cwtl
in
jge
xor
fldenv
add
das
adc
repnz
fwait
xchg
pushf
dec
adc
test
scas
cmpsl
sti
jl
stos
ss
jmp
das
push
fmull
dec
lock
sbb
jns
push
lret
stc
scas
mov
xchg
jns
cmpsb
lahf
mov
pop
push
outsb
imul
clc
or
js
pop
mov
mov
imul
addb
inc
and
addb
sar
xchg
inc
stos
loope
in
jg
fadd
add
push
sbb
into
sbb
mov
cmp
inc
mov
sub
scas
fnstenv
jnp
or
pop
pop
xor
icebp
push
xchg
bound
and
pop
aad
mov
mov
pop
hlt
mov
not
mov
cmp
sub
mov
insb
add
je
jns
fcoms
out
inc
inc
outsb
imul
jle
mov
pop
icebp
dec
push
mov
xor
popa
jle
xchg
xchg
pusha
mov
xchg
fstp
dec
mov
fidivrl
cmp
cld
or
outsl
mov
outsb
mov
mov
inc
cmp
sbb
int3
lahf
sbb
jae
out
xor
and
sub
mov
es
arpl
imul
mov
fsts
push
push
lahf
mov
fsts
fcoml
clc
ja
mov
data16
in
mov
scas
inc
jns
xlat
sarb
cmp
pusha
mov
cmp
mov
iret
sbb
xor
add
push
add
push
lret
dec
sub
notb
dec
inc
leave
xchg
aas
cmpl
sub
push
popa
and
js
adc
cmp
sub
call
xor
inc
sbb
in
inc
or
dec
mov
xchg
arpl
dec
xchg
insl
rcrl
mov
js
and
rcll
xlat
xlat
adc
insb
or
lahf
roll
lods
or
jne
dec
xor
push
mov
scas
shll
out
clc
or
mov
mov
inc
xor
mov
sub
mov
pop
sbb
stos
xchg
adc
jns
das
hlt
push
in
sbb
aad
loope
adc
test
dec
into
rcrb
jmp
xchg
test
xchg
xchg
ret
fsts
adc
xorl
jl
dec
cmp
push
adc
leave
mov
testb
jb
cmp
fistpll
pushf
enter
test
cmp
sbb
xchg
mov
psubd
es
mov
test
dec
ljmp
imul
lock
xor
jl
jle
ret
or
addr16
xchg
jns
aad
add
adcl
jg
dec
ss
or
inc
jae
pop
js
mov
add
push
xor
inc
lock
pop
jge
mov
jno
mov
out
sbb
inc
dec
jmp
add
ljmp
fxrstor
dec
lods
pusha
test
jecxz
mov
mov
or
dec
add
push
pop
scas
loopne
rclb
mov
sbb
adc
mov
ja
mov
imul
and
mov
lahf
jae
fnstsw
push
nop
adc
xchg
clc
cltd
mov
sbb
jne
mov
dec
loope
aas
cwtl
lds
jp
jo
and
test
adcb
mov
stos
xor
shll
shl
dec
stos
ficompl
pop
mov
lods
int
aas
insl
shlb
xlat
jecxz
test
std
lret
xor
hlt
in
fisubs
or
aaa
arpl
inc
cmpl
xchg
or
lret
and
or
roll
jne
sub
cmp
xor
popf
or
ds
lock
cmc
shll
inc
aas
fcoml
fs
mov
nop
xchg
add
leave
inc
mov
or
push
shrb
pushf
xlat
and
pop
sbb
data16
sti
popf
mov
arpl
sbbb
push
lcall
mov
inc
daa
jg
jge
nop
outsb
sub
ficoml
test
cmp
add
xchg
shrl
mov
in
sub
xchg
inc
xchg
outsb
jle
out
xchg
fldl
cmp
jns
push
xchg
aam
movsb
lock
dec
mov
add
pop
loop
jp
mov
or
and
mov
pop
xchg
sbb
iret
les
mov
cld
cltd
cli
jns
ret
mov
imul
insl
daa
jge
add
or
xchg
push
mov
jl
jmp
pusha
ds
xor
les
xor
jmp
adc
dec
mov
lods
sbb
jp
cmp
jne
adc
mov
adc
xor
pop
adcb
daa
cltd
hlt
sbb
or
pop
outsl
xchg
movsl
in
roll
popa
lods
push
les
lret
in
jae
sarb
clc
in
jp
or
mov
out
pop
pop
fwait
ret
dec
enter
xchg
mov
sbb
push
fstps
dec
pop
das
gs
outsb
aaa
inc
jle
imull
lea
lea
enter
insb
es
mov
data16
scas
pop
cmp
popf
and
push
inc
inc
stc
mov
loopne
inc
iret
mov
psubusb
jl
mov
lds
stos
ljmp
sbb
icebp
jge
movsb
or
push
pop
adc
into
add
mov
das
xchg
push
xor
add
mov
addb
add
addr16
dec
cs
fiaddl
and
test
cld
sarb
ds
jmp
sahf
add
sbb
or
test
pop
jne
push
addr16
cbtw
hlt
into
and
dec
push
mov
cpuid
fstpt
dec
push
testl
and
push
imul
pop
jns
sahf
repz
jge
cmp
sbb
cwtl
push
pop
lcall
jo
rcrb
divl
or
or
loopne
loop
stos
lods
jg
pop
sub
xchg
out
mov
jecxz
jmp
nop
push
xchg
insb
test
mov
mov
mov
stos
and
shrb
mov
in
stc
adcb
pop
ret
sub
jb
popf
jp
xor
push
and
pop
data16
sub
and
in
hlt
xchg
lods
fs
xorl
mov
cmpsb
push
and
and
add
inc
or
je
push
imulb
mov
cmp
insb
andb
jno
jmp
into
xchg
push
xchg
out
dec
xchg
cs
enter
mov
loop
mov
adc
stos
or
repnz
test
xor
fs
xor
test
pushf
push
shrl
add
mov
es
push
pop
call
gs
or
leave
dec
pop
testl
pop
dec
cmp
xchg
mov
popa
sahf
shlb
and
xor
nop
mov
aad
mov
in
mov
lret
mov
jge
pusha
jecxz
fcoml
mov
push
ret
sub
popl
inc
mov
pop
push
aaa
and
imul
sub
pop
testl
pushf
add
or
inc
insb
lock
and
xor
insl
or
pusha
cmc
mov
mov
xchg
mov
push
lods
cli
or
lahf
mov
fwait
fwait
lcall
inc
int3
imul
daa
scas
bound
and
dec
je
bound
idivl
pop
xchg
push
mov
xchg
cmp
xor
loop
outsb
pop
adc
jl
loop
push
dec
fildl
fimuls
aas
fildll
icebp
mov
pop
aad
xchg
imul
sarl
sbb
fnstcw
jae
cmp
test
ret
imul
insb
sti
sbb
adc
push
arpl
rol
jg
ficoml
dec
ss
xor
mov
vunpcklpd
cmpsb
jo
fistl
mov
clc
inc
or
xchg
cwtl
mov
es
pop
mov
cmp
movsl
and
movsl
fwait
add
push
arpl
rorb
jo
cltd
popa
push
cmc
dec
sub
mov
lahf
movsb
fdivp
or
imul
test
sub
pop
mov
das
push
xlat
inc
mov
mov
push
lahf
inc
flds
stos
jp
ret
sbb
and
push
das
enter
jp
callw
sub
repnz
ljmp
mov
mov
pop
xchg
int
cwtl
mov
dec
pop
add
xor
inc
data16
addr16
xchg
add
cmp
sti
shll
pop
sahf
xor
test
push
cmovo
fistps
mov
pop
or
cmp
cli
test
mov
inc
or
mov
pop
cltd
inc
jns
jne
push
arpl
imul
int3
dec
push
mov
inc
mov
mov
inc
out
fwait
or
adc
sbb
das
jge
mov
out
or
and
mov
inc
and
lcall
jge
idivb
sub
xor
xchg
xor
mov
or
and
ljmp
push
xchg
and
add
jno
in
shlb
outsl
test
neg
and
clc
mov
repnz
fwait
push
pushf
in
ret
mov
movsl
ja
jmp
sub
repnz
sub
mov
sarl
sbb
mov
xor
cmp
mov
add
adc
cltd
dec
xor
rorb
lcall
cmp
lock
insb
sbb
dec
cld
xchg
sbb
testl
push
mov
gs
divl
fcmove
inc
dec
in
or
outsb
pop
sbb
cld
std
sbb
jl
icebp
mov
sub
add
arpl
andb
nop
jnp
fs
and
jp
inc
xchg
outsb
aas
popa
add
test
ja
mov
in
dec
push
out
imul
jg
imul
mov
dec
aam
xor
push
icebp
xchg
ret
lcall
lcall
jle
into
imul
sub
dec
dec
fcmovne
inc
das
inc
mov
mov
pop
std
xorb
imul
int3
mov
rep
pop
push
and
stos
jno
rclb
and
jmp
out
add
cmpsl
sub
dec
fdiv
push
adc
dec
ja
cmp
nop
les
mov
mov
xchg
stc
pop
or
mov
mov
or
push
mov
inc
nop
cmpsb
and
pusha
sub
ror
scas
xor
push
push
lret
movl
sbb
insl
mov
jmp
inc
push
fcmovbe
inc
xor
xchg
dec
stos
jo
cmp
mov
mov
arpl
dec
cs
cmpsl
xor
mov
adc
sub
sub
push
lahf
dec
mov
int
adc
js
fstl
push
and
xor
movsb
test
js
test
mov
shlb
mov
je
jge
and
dec
lcall
jmp
scas
or
pop
adc
fdivrp
lret
cmp
xor
mov
mov
sahf
dec
mov
mov
ss
jmp
clc
ret
push
cmp
std
pusha
stos
in
std
icebp
jo
and
xchg
aam
das
addr16
js
add
adc
into
imul
jnp
int3
mov
nop
in
ljmp
dec
sbb
mov
cmc
std
xchg
cmp
mov
adc
out
jecxz
ljmp
adc
mov
and
ss
outsl
leave
mov
push
fwait
fwait
popa
sub
inc
or
es
or
push
sub
add
divl
in
pop
pop
xor
bound
out
test
lret
sbb
adc
jge
pop
out
cmpsl
and
jno
outsl
sbb
mov
push
lret
cmp
push
sbb
adc
test
sub
cmpsb
push
ja
aaa
outsb
aam
mov
dec
test
adc
clc
xchg
cltd
xchg
aaa
cmpsl
popf
scas
xchg
imul
mov
cmp
cmp
dec
sub
sti
jno
movsl
sti
dec
sub
fadd
in
imul
jg
inc
or
clc
xorb
and
sbb
pusha
pop
ja
jb
int
push
jno
pushl
xor
mov
scas
cs
add
dec
mov
or
xchg
fnstsw
mov
cmp
shl
pop
loope
aam
lds
inc
sarb
out
sub
mov
call
in
xor
pushf
pop
push
roll
jge
subl
shrb
xor
cmc
test
xorl
ljmp
sub
cmpsl
cmp
insb
popf
fwait
inc
cld
dec
xchg
aas
cmpsl
mov
imul
repnz
stos
aad
mov
lock
sbb
or
lods
jl
stos
cmc
push
in
or
dec
lods
pop
insb
shlb
mov
sbb
and
fbld
lods
cwtl
js
pop
xor
div
cmp
push
bound
push
es
imul
jne
pop
mov
mov
push
mov
addr16
es
cmpsb
add
clc
dec
inc
jmp
sub
outsb
jle
pop
mov
xchg
loopne
cmp
je
aad
mov
popa
test
test
jb
xchg
inc
notb
mov
ficoml
xchg
lods
or
ss
cmp
mov
je
sub
or
push
mov
xchg
jb
jg
and
rcr
out
nop
stc
mov
push
dec
sbb
fistpl
fistpll
xchg
es
jle
lret
mov
pop
cmp
cli
adc
cmpsl
dec
cmp
lcall
cmpsb
pcmpgtd
xchg
cltd
sahf
xchg
mov
add
push
lods
cs
das
out
arpl
sarb
cmc
scas
mov
xlat
mov
sbb
dec
add
jo
pop
fyl2xp1
mov
jno
lea
pop
dec
pop
negb
and
daa
loop
xchg
ja
add
pop
stc
push
sub
lock
push
push
fstl
shll
aaa
je
pop
jle
fs
test
dec
mov
push
mov
sub
clc
jl
in
mov
lahf
mov
xor
mov
fsubl
dec
popa
out
mov
and
aam
xchg
mov
inc
ret
dec
cli
jg
push
mov
fisubl
xchg
jg
scas
out
mov
ljmp
dec
pop
push
xchg
jl
jmp
mov
xor
mov
cmp
out
test
dec
sbb
call
out
add
rclb
mov
xor
mov
or
mov
mov
out
push
xchg
call
test
lcall
stos
leave
jbe
in
pop
cld
clc
sub
daa
jno
or
or
mov
dec
inc
rolb
call
sub
inc
add
enter
shl
add
xor
push
mov
pop
sub
sbb
xchg
cs
push
or
jecxz
cmpsl
stos
or
mov
insb
and
and
and
pop
mov
sarl
js
loope
data16
rep
push
pop
xchg
and
push
add
shll
add
or
push
shrb
cmp
clc
out
test
icebp
push
inc
out
insb
jg
repz
push
rorl
xorb
or
js
jne
inc
mov
out
jge
sahf
cltd
mov
inc
rorb
int3
push
mov
js
cld
out
mov
shl
iret
xor
loope
xor
fmuls
jb
add
addr16
mulb
or
rcl
xor
push
ljmp
int
ret
sub
pushl
mov
xchg
dec
sub
lahf
adc
xor
xchg
jp
ljmp
xchg
imul
sbb
cltd
adc
fstpt
into
inc
or
mov
cmc
stc
sarb
pop
popf
arpl
scas
and
fcoml
inc
dec
inc
mov
insl
sbb
sub
into
or
add
sub
arpl
lods
lahf
pop
in
stc
call
and
dec
lahf
outsb
sub
imul
cwtl
xchg
or
xchg
jmp
xchg
dec
xchg
rcrl
inc
mov
jg
bound
loopne
add
inc
fistpl
add
jb
mov
push
xchg
int
cmpsl
insb
cwtl
xor
aas
cmp
test
cld
cld
fs
pusha
pop
in
lahf
addb
jnp
jns
push
pop
mov
ss
sbb
idivb
mov
sub
cld
popa
cmpsl
inc
jecxz
xchg
loopne
fcomps
push
inc
fisttps
pop
and
fldl
enter
data16
das
mov
ret
clc
loope
add
cwtl
scas
add
mov
shlb
std
mov
jmp
rcr
nop
pop
xchg
mov
xchg
pushf
insl
in
lret
pop
add
nop
sbb
fcoms
out
filds
inc
push
mov
stos
push
jnp
daa
cmc
int
in
test
sbb
add
adc
lds
pop
mov
xchg
adc
enter
pushf
dec
jns
adc
jbe
push
cmpb
jbe
jecxz
js
negb
mov
mov
daa
and
loop
scas
loopne
dec
xchg
sub
push
aaa
xchg
mov
inc
fst
repz
or
xor
push
xor
mov
cmpsl
jae
dec
or
push
pop
add
cmp
mov
cs
mov
popa
pop
cmp
sbb
or
nop
mov
add
jne
out
mov
and
iret
scas
sbb
loop
out
fsubl
fisttpll
xor
xchg
lods
pusha
mov
xchg
icebp
push
std
lock
repz
sbb
mov
add
iret
mov
faddl
cmp
mov
add
stos
mov
popa
leave
or
mov
dec
cmpb
cmp
adc
ljmp
addr16
mov
add
or
or
mov
bound
dec
fsubrl
mov
out
test
jae
push
cmp
adc
pop
fldcw
out
dec
jl
aad
xchg
add
sub
xor
lret
dec
bound
sbb
inc
clc
sti
out
das
pop
mov
andl
lock
ret
dec
push
aad
mov
mov
push
mov
gs
xor
cwtl
xor
adc
jmp
hlt
daa
iret
ja
cmp
scas
pop
pop
stos
adc
adcb
xchg
inc
mov
aaa
push
stos
loopne
push
jle
inc
dec
mov
mov
je
ljmp
cmpsb
and
xchg
add
subl
cmp
or
jbe
ss
iret
push
fnstsw
adc
push
jb
bound
jecxz
test
popf
adc
rcrw
adc
sbb
mul
jns
push
cld
lods
outsl
push
cltd
ja
or
jg
pop
sahf
cmpsl
xor
add
and
into
inc
xchg
inc
jmp
int
ds
in
jne
aas
cmp
sub
sub
ljmp
mov
pop
push
shlb
pop
xor
xchg
aaa
call
xchg
xchg
imul
jmp
xor
pop
mov
movsb
in
cmp
in
sbb
mov
jbe
sahf
push
or
jbe
jl
pushf
cmp
add
scas
not
adc
or
imul
mov
push
fcmove
mov
loop
inc
test
push
adc
fcmovb
jne
or
jnp
mov
cli
nop
and
add
sub
mov
cli
insl
call
inc
mov
decb
scas
ror
inc
jne
aam
push
add
fbstp
cltd
addl
and
add
xor
sbb
fisubl
and
sahf
add
adc
push
xchg
into
das
jmp
xchg
dec
lret
or
pop
frstor
xor
hlt
orl
lock
insb
xchg
andl
dec
dec
xchg
or
sbb
fimuls
pop
jmp
jge
fstl
add
out
arpl
dec
mov
or
into
cmpsl
sbb
shld
pop
mov
out
aam
imull
xchg
imul
or
jecxz
out
dec
pop
out
test
cmp
clc
jb
sbb
rcl
inc
out
mov
push
dec
jp
mov
push
and
pop
fcomps
inc
sub
and
inc
push
cld
inc
inc
dec
jbe
lcall
cmp
sti
mov
inc
movsl
pop
pmulhuw
xchg
push
and
out
rcr
movsl
out
out
xor
cld
and
cmp
das
add
inc
lds
imul
mov
stos
dec
dec
mov
jg
mulb
aam
mov
sub
xor
clc
lock
mov
mov
dec
les
aaa
mov
mov
shl
xchg
cwtl
sub
inc
ds
dec
xchg
cmc
das
mov
test
icebp
inc
fld
jae
sub
adc
pop
lock
outsb
movsb
adc
sbb
sub
int3
insl
jo
pop
insb
outsl
imul
jns
mov
xor
rorl
test
inc
hlt
or
movhps
jl
clc
test
mov
inc
cmp
mov
push
xchg
test
sbb
adc
and
and
xchg
push
popa
add
add
and
mov
cmp
push
movsb
mov
or
inc
leave
jnp
xor
and
xchg
push
dec
inc
inc
dec
pop
or
sbb
push
iret
inc
iret
dec
andb
push
les
fcmovb
cli
ja
or
lahf
into
fisttps
sahf
addr16
pop
test
scas
mov
dec
and
pop
sub
gs
dec
mov
test
mov
cmp
mov
xchg
jae
sub
xor
clc
imul
jg
lods
in
mov
pop
addr16
fcmove
sahf
mov
shr
int3
mov
sahf
jl
out
push
outsb
and
mov
inc
mov
loopne
imul
xchg
arpl
out
cmp
jno
add
bound
lret
sub
pop
cltd
test
movsl
lret
mov
out
je
jp
ret
bound
lea
jge
imul
mov
out
fistl
inc
out
or
xchg
mov
or
add
or
imull
inc
dec
mov
aam
sbb
mov
mov
fdivs
fisttpll
insb
pop
add
pop
lret
mov
add
sarl
jecxz
mov
mov
loope
out
cmp
lea
xchg
mov
add
sahf
dec
sub
or
hlt
adc
push
popw
rclb
inc
mov
mov
sub
push
cmp
and
pushf
andb
pushf
xor
mov
lahf
mov
int3
sbb
subl
lret
or
mov
clc
pop
ljmp
sti
push
mov
test
int
push
outsb
mov
sbb
inc
mov
mull
out
imul
es
data16
dec
inc
arpl
jns
std
insb
popa
out
insl
and
in
loope
dec
popa
mov
dec
cmpsb
jae
in
cmpsb
addr16
mov
js
test
xor
sahf
iret
loop
add
in
insl
jmp
leave
hlt
jae
mov
jmp
aaa
xchg
dec
imull
lretw
subb
mov
push
adc
mov
gs
repz
jo
jecxz
sbb
dec
lods
repz
cmpsl
dec
mov
outsl
jo
arpl
ficompl
call
push
cmpl
adc
and
mov
pop
lock
mov
cmp
inc
jge
xchg
mov
arpl
movsb
mov
inc
adc
popa
int
js
mov
adc
add
cmp
lahf
repz
push
shll
arpl
out
loope
jns
in
out
std
sahf
pop
mov
daa
push
mov
outsl
aas
dec
repnz
adc
loopw
ret
xchg
fnstenv
iret
xor
sub
scas
lods
aaa
xorb
sahf
jno
mov
adc
daa
pop
mov
nop
aad
movsl
bound
mov
movsl
xor
sub
and
fs
cli
add
mov
cmp
or
mov
xchg
jno
sti
in
xor
and
and
in
mov
push
fnstsw
xchg
insl
aad
jne
rcrl
fidivs
mov
bound
pop
scas
or
aas
xchg
dec
adc
mov
jbe
pushl
cmpsl
imul
dec
pop
cltd
mov
xchg
jmp
clc
add
iret
imul
enter
inc
mulb
mov
inc
pop
mov
mov
sbb
dec
and
fmull
stos
xor
xchg
mov
sbb
add
mov
out
inc
xor
cmp
les
sub
divl
sub
testl
and
repz
sbb
inc
pop
mov
or
fs
add
inc
imull
rcrl
rcrb
lret
call
rorb
sbb
dec
push
lret
mov
fstpl
popa
sahf
and
xchg
adc
mov
repz
rorl
scas
push
mov
inc
add
rcrl
test
and
mov
lods
pop
into
stos
pop
pusha
sbb
adc
push
pusha
std
scas
dec
jecxz
push
adc
dec
enter
daa
pop
jbe
pop
pop
adc
out
inc
jb
daa
jae
dec
je
xchg
ret
pop
ret
fnstsw
mov
shl
aam
popf
adc
js
cmpsb
test
sub
xor
je
mov
in
mov
loop
sbb
mov
cmpsl
and
xor
loop
jp
dec
lea
cli
pop
scas
jns
mov
and
and
stos
ja
ret
pop
push
mov
mov
ret
jmp
jns
lret
push
hlt
dec
add
dec
xorb
out
or
add
repz
cmp
xchg
adc
mov
cmp
repnz
dec
fiaddl
jle
cmp
add
pop
in
scas
rclb
xor
iret
in
inc
addb
xchg
lcall
cmpsb
mov
lods
xor
pushf
inc
xor
dec
addb
add
sub
in
cmp
fdivrs
cwtl
ficomps
mov
mov
fdivrs
call
lret
popa
outsl
fisubrl
mov
jbe
sub
push
sbb
int
push
sbb
loop
lret
xchg
mov
mov
jge
sbb
call
pushf
lods
les
cli
and
sbb
repz
enter
mov
and
xor
lret
stc
jo
sti
sub
mov
cmp
out
out
fsts
cmc
dec
arpl
push
ss
xlat
mov
pop
cmp
fidivl
adcl
push
pop
mov
pop
mov
jae
sysret
xchg
sbb
imul
rcll
mov
cmp
outsl
inc
sbb
dec
mov
das
inc
movsl
jle
pop
imulb
mov
fcomi
mov
std
adcl
stc
outsl
inc
xlat
mov
mov
dec
test
mov
fwait
fs
mov
in
push
sarb
pushf
xor
jp
out
inc
mov
ss
and
dec
fdivrp
xchg
iret
jns
cmpsb
cltd
fs
mov
test
cmp
push
pop
mov
cli
xchg
dec
in
sub
sbb
sub
add
xor
mov
add
mov
mov
inc
mov
subl
add
andl
imul
xor
or
adc
mov
mov
mov
add
sbbl
or
mov
or
mov
movl
cmpl
je
cmpl
ja
jmp
push
push
pushl
call
mov
dec
mov
jmp
mov
addl
add
xor
sbb
mov
mov
mov
add
addl
and
mov
andl
xor
xor
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
jmp
dec
popl
lea
push
xor
mov
cmp
jp
pop
jp
aaa
leave
sahf
clc
sbb
popa
insb
xchg
in
cwtl
fnstcw
ljmp
sbb
or
xchg
xor
mov
sbb
dec
gs
int
jo
repz
push
inc
hlt
lret
inc
pop
push
inc
mov
lahf
sub
or
mov
addb
nop
xlat
jp
push
or
sbb
add
les
mov
dec
lods
lods
lret
loop
in
std
dec
sub
inc
or
and
dec
into
or
inc
pop
add
xchg
adc
mov
pop
js
cmp
int3
pop
movsb
sub
ficoms
loope
pop
clc
lock
int3
push
cmp
fistpll
test
test
aas
or
jnp
xorl
jmp
mov
pop
pusha
icebp
mov
cmp
sub
xor
notb
test
mov
dec
push
sub
mov
jecxz
popf
enter
or
cltd
mov
loop
lret
dec
mov
aad
ss
out
rclb
pop
fdivrl
mov
dec
adc
scas
in
nop
push
stc
inc
int
gs
flds
mov
pop
pop
lcall
dec
fninit
mov
clc
adc
jmp
arpl
adc
cmp
ss
xor
jecxz
push
mull
notb
enter
jae
adc
scas
icebp
mov
dec
test
pop
push
daa
lods
lahf
adc
clc
jge
out
jle
out
std
sub
test
daa
jl
mov
inc
addl
inc
push
sub
fcmovu
xor
cltd
mov
mov
out
shr
jbe
ret
in
sub
addr16
out
jbe
mov
mov
mov
call
pop
or
sbb
les
jb
adc
add
icebp
pop
cmpsb
bound
adc
cmp
pop
jo
or
xor
mov
dec
xor
fcmovnu
mov
mov
xlat
arpl
loopne
sbb
ja
mov
mov
jb
imul
xor
xchg
push
pop
stc
ds
out
adc
js
jp
addl
jo
aas
inc
fidivrs
mov
adc
outsl
mov
cld
fucomp
xor
das
popa
push
fisubl
adc
hlt
out
fsubr
cmpsb
xchg
pop
pop
std
les
imul
mov
mov
adc
bnd
inc
int3
jle
clc
sti
jo
mov
and
shll
enter
fldcw
iret
orb
sbbb
out
push
jb
addr16
lret
adc
xchg
sub
into
mov
push
cmpsl
or
addr16
xchg
out
push
das
cmpsl
cld
and
and
and
pop
shl
inc
shlb
pop
cmp
fadds
xor
inc
jb
or
jle
or
arpl
aad
test
icebp
bound
das
mov
sbb
daa
jb
out
iret
outsb
movsl
or
iret
bound
dec
jb
cld
mov
shlb
xchg
leave
fcoms
xchg
cltd
xor
jae
push
ficomps
mov
out
push
loope
push
aam
xchg
scas
icebp
lock
cmp
cmp
mov
dec
jnp
aad
jne
dec
push
inc
stc
or
idivl
xchg
scas
inc
jg
push
jnp
sahf
inc
cmp
scas
or
jb
lcall
mov
ss
fdivrl
insb
cltd
out
cwtl
jg
outsb
and
add
mov
mov
pop
xchg
sub
movsl
movb
mov
in
rolb
xor
sub
mov
push
sub
mov
pcmpeqd
push
fwait
sub
add
sub
fisubl
pop
outsl
movsb
xchg
stos
imul
cld
ret
jo
seto
gs
xorb
dec
test
push
mov
leave
les
out
sub
push
clc
cmp
push
sarl
std
push
jmp
sub
cmp
jmp
scas
cs
test
push
pop
cld
sbb
aam
pop
jbe
mov
outsb
add
rcrl
push
push
sbb
adc
rcrb
dec
test
inc
out
mov
cmp
cmp
aad
mov
std
stos
mov
stos
sbb
adc
mov
cmp
add
push
xchg
std
test
popa
pop
js
and
sub
das
dec
mov
dec
sahf
mov
pop
ja
sub
xor
cmpl
xor
fcmovne
outsl
lods
data16
xchg
inc
sahf
mov
test
xor
push
mov
ret
xchg
or
jne
nop
sbb
clc
test
sbb
outsb
lods
stc
js
sbbb
notb
movl
sahf
mov
mov
outsl
int
test
xor
adc
sub
jg
divb
iret
and
xor
pop
insl
or
enter
xlat
sbb
jb
dec
pop
aas
faddp
out
mov
mov
lods
adc
mov
fnsave
sti
lea
out
bound
jbe
fdivrs
das
cwtl
cmpsl
in
pop
mov
push
push
mov
xchg
repz
cmpb
inc
sub
or
mov
js
fwait
les
pop
adc
sbb
int3
push
test
inc
xor
xor
sahf
cmp
push
dec
aad
mov
dec
insl
ljmp
imul
add
fsubrs
sti
pushf
dec
jecxz
ljmp
cmp
add
fs
ret
mov
xchg
and
aad
push
dec
lock
jnp
xor
mov
fldcw
mov
ja
movsl
xlat
cmp
mov
imul
mov
mov
std
outsb
scas
pop
or
aad
in
shll
in
mov
push
mov
mov
lret
sbb
fwait
shlb
sbbl
or
xchg
and
dec
ja
out
mov
push
shrb
pushf
xchg
repz
inc
ror
sbb
sbb
dec
movsb
lock
enter
and
push
push
jecxz
fbld
sahf
mov
test
rorl
out
enter
pop
sti
adc
sub
push
sub
orl
stos
arpl
jnp
imul
pop
cmp
mov
cmpb
aas
and
scas
add
addr16
test
mulb
das
gs
jae
test
ret
dec
imull
js
popa
mov
push
pop
mov
xor
ds
out
movsl
mov
lea
fs
push
cmp
xchg
call
andb
mov
addr16
pop
mov
lea
stc
and
popl
int
xchg
rolb
sub
andb
or
inc
ret
movsl
dec
push
mov
subl
inc
cld
jae
push
movl
cmp
or
fwait
push
cld
cmc
mov
inc
mov
jae
pop
cmpb
loope
push
js
pop
cmp
testl
test
mov
xor
pop
mov
test
jg
jp
pop
test
inc
sbb
cs
cmc
adc
lahf
lcall
jg
cmpsb
pop
fwait
pop
or
jle
xchg
stos
call
dec
adc
das
repnz
data16
rolb
jp
jecxz
mov
fisubs
repz
xlat
jecxz
cmpl
pop
add
nop
mov
push
pop
lcall
jns
aam
inc
inc
or
jbe
xchg
xor
in
sarb
mov
mov
add
mov
inc
mov
xchg
or
sbb
movsb
ret
jp
fldenv
jne
mov
mov
sub
imul
xchg
xorl
ljmp
pop
ficomps
jmp
inc
cmp
xor
jns
fcoml
aas
lods
adc
test
and
xchg
or
xchg
out
loope
cmp
xor
xor
iret
xor
mov
lret
aad
push
nop
mov
pop
in
imul
dec
jge
imul
xchg
push
fmull
mov
mov
and
xchg
orl
jno
jno
dec
add
ljmp
jg
add
test
addr16
or
outsb
pop
mov
pop
lret
pushf
mov
cli
pop
mov
fdivr
push
insl
outsb
sbb
in
mov
loopne
mov
mov
cwtl
xor
and
and
inc
mov
in
sub
in
mov
adc
icebp
jp
mov
sub
call
stos
fiaddl
mov
xchg
lcall
adc
out
cmpsl
mov
rcll
out
mov
xchg
push
out
and
jns
aam
push
push
cld
sub
lock
test
push
cmpsb
mov
sti
mov
push
pop
aas
lret
mov
cld
add
and
xor
and
inc
fwait
enter
mov
cld
pusha
push
mov
les
push
fstpl
test
or
test
push
sbb
ret
je
add
subl
std
loopne
out
or
xchg
cmp
test
out
test
dec
mov
sub
loope
mov
and
jb
inc
aam
sbb
inc
inc
std
sbb
int
int
lds
sbb
sub
push
inc
cmp
popa
inc
xor
push
push
push
mov
f2xm1
jle
sub
call
push
sahf
cld
shll
mov
testl
fwait
sahf
inc
sti
mull
ret
mov
pop
lret
cmp
push
js
push
inc
aaa
aad
sub
mov
dec
mov
cmp
loope
mov
orl
lods
push
mov
loope
lcall
stos
mov
cmpsb
mov
pop
mov
jmp
scas
mov
lahf
imulb
pop
push
mov
ljmp
xor
inc
jmp
dec
or
inc
push
mov
lods
dec
lods
sahf
xchg
sahf
icebp
mov
loope
or
cmpsl
xor
lahf
xchg
or
cmpsl
test
test
pop
cmpsl
dec
fiaddl
sub
and
xchg
adc
add
lods
fs
adcb
pop
ljmp
cmp
lea
inc
mov
push
jp
test
iretw
and
jb
sbb
adc
fcmove
outsb
xchg
outsl
inc
sbb
jge
push
add
cld
sbb
popf
push
mov
mov
pop
jbe
push
push
popf
add
fcoms
and
lods
and
iret
test
scas
adc
ficoml
or
ja
jo
out
add
xor
fs
push
push
popf
cmp
xchg
push
fimuls
adc
in
jne
jg
mov
push
popf
inc
xor
daa
jp
push
inc
pop
fnstenv
test
adc
cmp
fistpl
subl
dec
adc
mov
lods
movsb
adc
mov
cmpsb
pop
int
or
clc
and
xor
cltd
and
sbb
cmp
inc
lahf
stc
in
push
mov
sub
jb
ret
jne
nop
iret
stos
scas
add
aas
push
out
inc
cmp
sbb
mov
adc
sbb
mov
mov
xlat
xchg
mov
lock
pop
jl
push
cmp
fsubp
cwtl
mov
fidivrl
nop
pop
cmp
add
push
mov
xor
mov
pushf
outsb
and
pop
xor
mov
add
arpl
cmp
divb
and
inc
cmp
lods
push
jbe
cmc
subl
addb
or
lahf
inc
in
or
mov
sti
sub
sahf
std
fwait
xchg
dec
lods
loopne
fcmove
notl
insl
andb
jmp
jae
movsb
js
aad
fistpl
xor
add
loopne
ljmp
pop
adc
jnp
lcall
mov
jle
and
jno
scas
dec
sub
add
hlt
jecxz
insl
lods
shll
and
fsubs
jmp
enter
mov
push
or
stc
pop
xchg
add
xchg
loope
mov
jmp
pop
push
or
adc
shlb
mov
push
pop
mov
cltd
mov
pop
mov
jle
ficompl
insb
cli
pop
ss
mov
shll
or
fxam
inc
pop
dec
orl
sub
leave
mov
je
or
in
push
and
sub
cmpsl
out
roll
push
lcall
divl
pushf
ds
out
loope
mov
jbe
jbe
xchg
in
fadds
xchg
inc
out
sbb
cmp
orb
pop
inc
imul
pop
adc
repz
dec
sbb
arpl
xchg
mov
daa
or
sti
mov
adc
das
sbb
xchg
fsts
adc
xchg
mov
fstps
xchg
bound
mov
repz
jecxz
mov
arpl
sub
out
push
add
fsubp
adc
hlt
out
add
or
inc
leave
push
jp
idiv
xor
xor
mov
bound
mov
sub
push
inc
mov
jo
movsl
aam
jl
mov
stc
fsubl
fstp
pop
in
cmpl
sub
imul
in
cs
shr
xor
movsl
push
add
jbe
jge
fmul
popf
ja
repnz
lods
test
hlt
pop
fdivl
and
in
cmp
dec
imul
in
adc
sbbl
xchg
out
or
fistpll
loope
adc
pop
sub
cmp
in
faddl
adc
cwtl
inc
aam
test
and
xchg
pop
pop
mov
mov
mov
add
inc
test
in
cli
add
leave
daa
cmp
sbbb
shll
push
sbb
fsubl
lahf
lahf
rol
push
push
mov
jle
pusha
mov
mov
aaa
inc
movsb
cmp
push
lret
int3
inc
jnp
cmp
rcl
ss
mov
popf
mov
xchg
adc
mov
dec
jecxz
adc
rclb
lcall
pusha
sub
cli
outsl
cmp
jne
push
insl
lds
in
push
fcomip
inc
mov
sbb
jnp
in
mov
mov
frstor
scas
mov
xor
sbb
cli
cmp
lahf
les
xchg
adc
or
and
jle
sbb
push
dec
jg
aaa
dec
andl
adc
pop
mov
pop
push
dec
into
jl
jp
mov
jne
bound
mov
data16
fisubrs
cs
cli
push
sub
push
sahf
push
fs
xchg
cmp
cld
xchg
lret
test
lock
xchg
mov
pop
pop
fnsave
test
stc
pop
dec
lea
nop
cmp
mov
js
dec
mov
mov
xor
pop
cmp
adc
mov
mov
lds
nop
jmp
dec
or
outsl
cmpsb
loopne
aaa
mov
mov
push
out
stc
loope
cmp
xor
les
push
inc
out
dec
lcall
add
mov
and
repz
enter
pop
push
pop
cmp
add
push
add
scas
jno
mov
xchg
push
leave
int3
popa
inc
jae
fidivs
push
punpckldq
shlb
shlb
pslld
lods
or
cld
scas
iret
sbb
stos
cmp
add
cmc
sub
lds
test
adc
mov
imul
jmp
lods
sbb
xor
adc
jbe
test
xor
adc
sub
mov
mov
mov
mov
jb
aaa
sbb
xchg
stos
mov
pop
mov
cltd
dec
add
push
insb
popa
dec
inc
inc
lock
out
or
pop
shl
aaa
adc
int3
sar
sub
cmp
icebp
inc
into
addb
ret
or
inc
sub
mov
out
or
xor
or
ja
rolb
push
int3
mov
out
imul
stos
stos
pop
and
mov
mov
testb
lods
push
in
ja
cmp
hlt
mov
inc
dec
pusha
adc
fmuls
xchg
cmpsb
clc
lea
pop
mov
mov
dec
mov
jle
jle
rcll
push
dec
sti
jle
iret
xchg
xor
adc
testb
inc
xor
dec
push
push
pusha
pusha
arpl
pop
in
mov
imul
adc
jb
daa
fwait
xchg
lods
repz
cmp
bnd
or
mov
sub
int
ss
cli
aaa
or
mov
aam
popf
xor
xor
or
jp
cmp
pop
add
cmc
rolb
sbb
mov
cmp
mov
scas
je
mov
add
jmp
xchg
lret
cmp
jb
mov
outsb
dec
sbb
jne
fiadds
xchg
mov
pushf
cmpsb
hlt
dec
xor
sbb
je
out
and
xchg
xchg
lods
ret
imul
addb
data16
sahf
xchg
inc
pop
lahf
ljmp
add
pop
int
mov
sub
lea
mov
mov
or
ret
mov
push
lcall
leave
enter
mov
pop
add
gs
xchg
jg
imul
cmp
std
fadds
cs
andl
imul
insl
lock
mov
xchg
mov
and
cmp
jne
xor
add
es
test
aam
mov
repz
or
sbb
sub
or
jno
outsl
bound
pusha
loopne
fistl
mov
sub
xor
inc
dec
sar
xor
addr16
pop
lds
aad
and
out
cmp
fwait
inc
push
fisubrs
lahf
rclb
mov
rorl
xchg
dec
add
push
in
testl
dec
inc
hlt
mov
cmp
jnp
push
mov
fwait
iret
loopne
mov
mov
test
hlt
aaa
add
in
leave
sbb
or
ds
xlat
pop
aad
xchg
dec
aam
pop
push
test
test
sub
inc
jmp
in
push
jne
inc
das
mov
or
and
clc
lods
push
pop
in
aaa
cmp
cli
int
pop
dec
xchg
shrb
repnz
xchg
cltd
jno
mov
sub
adc
cld
dec
dec
ja
nop
in
clc
clc
jb
xchg
or
popa
sarl
sub
xlat
in
lock
add
sub
jl
dec
mov
gs
andb
push
fxch
mov
dec
nop
enter
outsl
mov
shl
es
andl
sub
bound
and
lret
pop
fisubl
push
adc
jb
outsl
aam
jmp
leave
insb
pushf
or
clc
pusha
test
pop
xchg
fcmovnbe
das
push
ljmp
xor
pop
aas
fucompp
mov
inc
test
incl
adc
inc
sbb
shll
gs
sub
push
mov
ret
lea
rcrb
and
pop
adc
mov
sub
jg
int3
aad
adc
mov
aad
pop
adcl
fbld
and
mov
jge
inc
pop
in
xchg
add
lods
je
push
imul
inc
es
pop
sbb
pop
mov
scas
dec
call
mov
daa
gs
fimull
xchg
sub
xchg
pop
sbb
iret
xor
lahf
rorb
insl
ds
sub
test
stos
xchg
sbb
dec
mov
ljmp
add
and
dec
rcl
loopne
mov
mov
xchg
mov
cld
and
xchg
mov
out
lock
lods
xchg
inc
test
andb
cmp
es
inc
jnp
notl
jl
mov
push
adc
mov
call
dec
dec
adc
jp
mov
xor
sub
and
cmp
popa
jae
jmp
cld
into
sub
dec
and
inc
sbb
idiv
push
sbb
adc
repnz
cwtd
mov
lret
addr16
add
aad
ljmp
ja
add
mov
inc
fnstcw
test
xchg
pop
std
mov
fidivs
pop
nop
int
pop
stc
sbb
and
aam
sbb
bswap
adc
stos
pop
jle
rclb
jbe
mov
and
sbb
orb
repz
mov
lea
repz
adcl
les
fildll
cld
ldmxcsr
and
inc
out
popa
sbbb
dec
dec
movsl
insl
out
and
popf
pop
daa
jns
testb
notl
adc
lret
cmp
sbb
hlt
xor
fistpl
mov
mov
scas
or
jns
and
xchg
cmpsb
dec
dec
movsl
loope
mov
xchg
or
pushf
sub
movsb
cmc
fwait
stos
push
xchg
mov
ss
cmp
lahf
gs
daa
dec
mov
je
jo
fdivs
shrl
les
sti
cmp
jmp
mov
in
adc
dec
aas
push
jmp
lods
int
loop
fmuls
xor
pop
add
pop
xor
mov
pop
mov
inc
mov
xchg
xchg
or
cmpsl
loopne
mov
push
notl
addr16
pop
pop
xchg
lcall
inc
in
movsl
add
mov
repnz
xchg
lcall
lods
test
insl
jp
jle
mov
xchg
mov
add
inc
fisubl
adcl
cmp
out
xchg
adc
jns
out
cld
mov
iret
mov
xchg
jae
cmp
fisttps
adc
jp
repz
sbb
xor
imul
inc
pop
into
into
pop
fnsave
pushf
fprem1
std
sbb
mov
cltd
push
movsb
in
mov
lods
enter
hlt
cltd
pop
hlt
and
in
mov
mov
ror
mov
inc
repz
loop
adc
pop
lds
cmp
fadd
jns
dec
cmp
int
xor
cmpsl
punpckldq
and
in
add
cmpsl
bound
aas
jno
andl
lret
or
cmp
pop
cmp
pop
adc
push
mov
fsubrl
scas
adc
les
pop
in
rcrl
loope
les
fsts
mov
adc
int
mov
out
scas
xor
lahf
lock
lods
and
inc
pop
push
cwtl
cmp
add
sub
cmpsl
ret
mov
inc
sarl
imul
je
scas
push
xchg
and
sub
lahf
faddl
fsts
mov
cmpsl
dec
adc
test
popf
cli
jno
or
push
inc
pop
loope
xlat
ja
and
dec
shll
sub
pop
sbb
rolb
imul
push
popf
cmc
enter
shl
xchg
dec
mov
bound
fidivs
mov
pop
mov
jp
sub
sbb
add
subl
loop
dec
inc
mov
test
or
outsl
or
sti
inc
pop
nop
add
inc
loopne
fdivrs
jge
or
or
mov
jle
inc
push
sub
fcompl
sbb
mov
mov
mov
dec
push
inc
fistl
and
mov
les
or
mov
ds
lret
scas
ficoms
sub
pop
jp
inc
iret
xchg
sub
je
aam
sbb
aaa
test
jl
and
push
lret
push
jae
mov
sub
push
in
inc
cmp
sub
sbb
outsb
mov
mov
cmp
cli
test
xchg
ficoml
push
sub
sbb
hlt
fistl
inc
inc
mov
and
sbb
stc
jp
jne
dec
stos
dec
jmp
jg
in
push
stc
cmp
iret
mov
adc
or
lahf
jmp
and
das
rclb
pop
sub
xor
sub
cmp
cmp
xchg
aad
mov
lcall
mov
xchg
shrb
clc
fucomp
popf
sahf
jo
xchg
xchg
push
cwtl
in
rclb
add
jns
or
sbb
jnp
movsb
in
push
jns
xchg
dec
xlat
jp
inc
ljmp
sbb
loop
push
das
pop
aas
jne
mov
mov
cs
popf
bound
jmp
subl
jne
lcall
xor
imul
xchg
adc
enter
cli
int
xchg
xchg
pop
xchg
lods
pop
sbb
or
hlt
lea
out
in
cmp
int
imul
faddl
jl
adc
shlb
pop
or
cwtl
popa
fs
xchg
pop
push
jge
movsb
sub
fisubrl
pusha
dec
cmp
stc
ds
jmp
fisttpll
xlat
pop
push
lods
mov
mov
repnz
mov
mov
sub
mov
xchg
mov
cmpsl
stos
loop
cmp
sbb
fiadds
aas
insb
insl
inc
rolb
cmp
sbb
dec
dec
sbb
cmp
or
or
xor
sbb
jp
inc
adc
gs
das
sahf
jl
fsubrl
dec
ss
push
aam
add
pop
mov
sbb
cld
inc
cli
push
or
dec
inc
push
test
cmp
jbe
jne
iret
jnp
mov
clc
adc
int3
fs
add
cmp
jns
mov
sahf
pop
inc
pop
fs
imul
pusha
push
xchg
add
xchg
mov
dec
or
cmpsb
ret
stos
psubq
xchg
pop
leave
mov
popf
mov
rcr
out
and
pop
or
dec
popl
push
add
sbb
arpl
pop
bound
push
dec
ret
aad
loope
ljmp
loop
cld
subl
les
add
pop
lret
xchg
stos
out
xor
adc
jle
sub
cmpsb
xchg
popa
fs
addr16
ss
std
dec
les
jns
add
xchg
cmp
xchg
imul
loopne
ret
jne
sbb
xchg
jae
inc
mov
xchg
push
adc
xor
call
or
xchg
cli
loop
jno
push
orl
loope
insb
dec
jnp
add
mov
pop
pop
mov
lea
mov
jmp
inc
lcall
jecxz
cmp
in
xchg
imul
in
icebp
sbb
fcoml
cmpsb
fistl
pop
add
call
and
cmp
int3
imul
fidivrs
pop
nop
dec
or
insb
in
scas
xchg
xchg
mov
xor
lahf
leave
inc
scas
iret
scas
lcall
mov
mov
incl
outsl
jbe
filds
cwtl
popa
out
or
pop
pop
mov
in
les
dec
dec
or
mov
test
fstps
jo
lret
in
pop
mov
clc
movsl
pop
adc
xor
mov
adc
sub
inc
je
adc
ljmp
aad
mov
cwtl
lret
cs
outsb
pop
fmull
dec
cmp
pop
dec
and
sub
mov
lods
call
ljmp
popa
repnz
popf
add
loopne
loopne
lock
jmp
movb
mov
and
out
cli
cmpsb
nop
je
mov
pop
inc
mov
fdiv
mov
jg
add
push
fdiv
cmp
and
iret
and
or
cmp
inc
popa
in
inc
and
das
loopne
popa
or
push
cmp
jne
adc
jecxz
out
cmp
jle
and
or
icebp
fsts
iret
xor
dec
adc
sub
loopne
inc
xor
jecxz
rcl
mov
inc
pop
lcall
and
pop
jo
out
pop
test
mov
mov
ret
clc
mov
pop
rcrl
ljmp
mov
dec
ljmp
add
mov
test
jle
inc
lea
loopne
pop
sub
xchg
add
icebp
mov
addr16
rep
nop
inc
jmp
mov
mov
insb
fists
mov
into
dec
jle
loop
jae
push
and
pop
and
ljmp
dec
je
lret
jl
loop
jns
adc
scas
test
ja
sbb
lea
mov
dec
mov
call
mov
pop
mov
mov
cld
out
cmp
rclb
or
or
psubq
jg
je
inc
gs
mov
mov
jge
jle
mov
cmp
icebp
sbb
shr
mov
adc
add
lret
sub
mov
add
movsb
pop
imul
jo
rclb
mov
jno
adc
dec
xchg
imul
pushf
sub
or
mov
je
and
pop
cmp
pop
inc
cmp
dec
fs
je
cltd
inc
or
mov
jge
or
jmp
rorb
and
outsl
fwait
mov
mov
sbbl
xchg
pop
into
imul
loop
mov
mov
dec
mov
pusha
xchg
insl
xchg
pop
or
push
fisubrl
popf
sub
ljmp
int
dec
xor
dec
or
xor
into
lea
mov
mov
out
aam
mov
fldt
inc
pop
push
sbb
leave
or
push
pop
sbb
nop
enter
sbb
movl
jne
gs
into
jo
and
jle
imull
js
daa
bound
add
mov
test
lea
or
add
jns
mov
test
nop
loope
stos
ret
mov
pusha
xchg
sbbl
pop
dec
fstpl
adc
repz
orb
imul
dec
aam
pop
mov
shl
pop
pop
dec
data16
movsb
repnz
sub
hlt
ftst
jb
xor
add
mov
add
outsb
or
or
daa
and
bound
push
aas
shl
rcrl
mov
popf
and
and
pop
aaa
jge
int3
push
mov
cmp
xor
bound
paddusw
push
sbb
addr16
lods
daa
xlat
and
mov
mov
jb
pusha
lret
mov
dec
stc
jae
sub
jo
fistpll
or
xchg
lahf
jb
jg
cmp
sbbb
aam
lock
in
lret
mov
lock
inc
push
xchg
inc
fst
and
stos
pop
sub
inc
pop
or
mov
mov
add
pusha
daa
mov
cmp
daa
add
adc
pop
out
adc
scas
inc
jle
mov
lcall
sub
aam
jae
cmc
imul
mov
jl
mov
push
mov
sbb
cld
sub
shlb
mov
mov
dec
loop
push
adc
mov
or
mov
out
inc
mov
inc
fcomp
add
das
xchg
xchg
jnp
in
mov
or
pop
jle
cli
test
fwait
pop
incl
loope
dec
mov
stos
dec
xor
sub
loop
sub
xor
testl
cli
push
sbb
cmp
aas
inc
out
dec
mov
jbe
stos
das
test
dec
fldt
push
sbb
mov
test
dec
outsb
xor
inc
popa
and
mov
stc
andb
jo
ss
add
add
lea
shrl
stc
inc
movsl
test
outsb
sbb
push
cltd
aas
push
imul
mov
arpl
pushf
and
ret
adc
sti
fdivrl
cmp
or
xchg
clc
add
rorl
or
pushf
and
add
stos
cwtl
jnp
inc
jns
in
fistpl
cmp
mov
pop
jp
or
sbb
inc
pop
insb
inc
push
arpl
jns
scas
mov
int3
testb
pop
aam
lcall
popf
lcall
aam
mov
mov
cltd
push
jge
sti
pop
mov
movsl
jnp
sbb
and
sbb
cmp
lret
movb
es
lea
push
inc
pop
mov
push
mov
jecxz
leave
arpl
cmp
xor
sbb
dec
std
sub
es
push
lods
or
mov
cmp
pop
sbb
cmp
add
jmp
push
movsb
add
push
push
pop
mov
mov
pop
cwtl
ja
sub
cmp
jo
adc
jp
and
xchg
lahf
push
jl
pop
int3
push
dec
fsubrl
pop
and
les
shr
sahf
fnstcw
popf
mov
ja
arpl
mov
lods
pop
enter
pop
adc
popf
frstor
mov
jl
out
fwait
jae
ret
push
sub
sub
inc
jge
sub
pusha
daa
jg
adc
cltd
push
arpl
outsl
push
scas
mov
hlt
leave
mov
push
mov
and
adc
js
push
and
clc
cmc
nop
jg
add
popf
pushf
pop
insl
xchg
scas
loop
xor
inc
hlt
xor
jb
je
jle
sti
mov
sub
sub
leave
lahf
mov
mov
pop
cmp
pop
add
lcall
stc
sbb
mov
iret
inc
jmp
clc
bound
mov
hlt
sbb
mov
imul
jl
movsb
imul
mov
cmp
in
mov
in
js
push
and
cmp
sbb
in
in
lahf
pop
call
jns
lret
jae
rolb
dec
arpl
outsb
mov
cmp
push
mov
jmp
push
cmp
dec
add
inc
dec
inc
bnd
mov
push
in
addl
into
fidivs
mov
adc
imul
ret
jl
cmp
push
std
ss
imul
add
test
and
cmpl
mov
cmc
lahf
call
cs
pop
push
aad
test
aam
sub
cmp
ss
insl
and
aad
mov
cmc
jno
xor
out
xor
ret
inc
dec
lcall
das
cltd
mov
add
xor
push
cmpsl
mov
popa
cs
jle
mov
insl
xchg
mov
fs
ss
xchg
mov
sar
jb
nop
sub
mov
dec
push
xor
cmp
inc
mov
flds
icebp
push
xchg
testl
push
fsts
adc
call
adc
jnp
mov
fimull
dec
mov
popf
add
pop
add
xchg
mov
movl
loop
and
cmp
test
mov
dec
xchg
test
xchg
iret
je
sbb
jle
cmp
ret
jbe
mov
jb
sahf
stos
fisttpl
test
adc
jns
or
scas
testb
mov
loop
dec
jae
push
test
push
pop
jo
mov
mov
and
jmp
jne
and
insb
cmp
insb
and
clc
pushf
sarl
inc
pushf
inc
mov
and
test
stc
lahf
pop
loop
mov
mov
mov
fmul
jmp
push
lock
adc
popf
sbb
or
nop
pop
aam
nop
inc
scas
imul
mov
stc
cmpsl
adc
stos
mov
jnp
jge
pop
xlat
jns
xor
push
xchg
insb
and
cwtl
subb
jmp
fwait
xor
or
lahf
scas
popa
jg
xor
mov
jl
aas
xchg
dec
sub
sub
mov
sub
sbb
dec
loop
repnz
movsl
insl
mov
push
rcll
pop
mov
adc
adc
nop
mov
jne
pop
inc
lcall
jns
pop
push
jmp
sub
and
cmp
xor
mov
pushf
addr16
dec
push
ss
push
or
push
out
lds
sbb
scas
mov
sbb
mov
test
scas
xor
nop
sub
scas
dec
dec
xchg
imull
sti
jle
dec
sahf
adc
inc
negl
fbld
fwait
js
pop
jae
cmp
scas
and
stos
cmpsl
pop
cwtl
and
or
xor
xor
xorl
xchg
icebp
fcoml
ret
mov
xchg
mov
sub
outsl
ret
dec
rcrb
sbb
ljmp
mov
pusha
psrlw
adc
aas
push
inc
std
sarb
into
jecxz
pop
fidivl
loop
std
sbb
inc
stc
push
mov
ds
mov
sbb
or
xor
mov
nop
xor
lods
push
enter
xor
sbb
shrl
mov
pop
imul
pop
xchg
and
xchg
lods
ja
iret
and
fidivl
cltd
mov
sub
movsb
shll
push
mov
aad
cwtl
into
xor
lock
or
nop
imul
les
push
dec
mov
jo
lock
aas
sbbl
orl
or
fstpl
jg
sub
mov
jecxz
jno,pn
adc
outsb
mov
sbb
frstor
push
mov
scas
lods
xor
and
and
shrb
mov
scas
lcall
adc
and
scas
and
repnz
pushf
ss
sbb
addr16
int
push
push
aas
pop
jbe
fwait
les
mov
add
xchg
and
out
dec
leave
xor
rol
in
fidivrl
movsb
sbb
add
pop
fistpll
inc
jne
pop
pop
fcoml
test
sti
sub
lret
push
push
mov
aad
inc
icebp
aaa
fsub
pushf
xchg
decl
popf
or
enter
into
jecxz
add
add
pop
or
dec
lock
lds
daa
sbb
and
mov
sub
push
in
insl
sub
idivl
push
pop
inc
pop
das
stc
xchg
cltd
cmp
mov
out
fdivs
sub
push
adc
dec
dec
jns
cmp
in
outsl
inc
movsl
popa
and
ss
or
mov
cmp
movsl
in
in
mov
mov
inc
mov
sbb
add
cmpsb
cld
cltd
adc
sub
clc
lret
xor
and
xchg
lea
pop
loopne
mov
dec
and
xor
mov
xor
rcll
mov
cmp
outsl
ja
dec
daa
in
lds
xchg
daa
repz
mov
das
mov
arpl
dec
decb
fistl
aam
lock
out
sbbl
adc
pusha
cs
or
sbb
push
dec
scas
es
call
aaa
mov
sbb
sbb
mov
and
sahf
enter
pusha
jns
push
out
inc
and
pop
pop
mov
jmp
jg
pop
adcl
mov
adc
cmp
xchg
mov
mov
out
xor
sti
fcoms
pop
stc
sti
push
cwtl
nop
mov
les
adc
adc
lods
insl
and
sbb
mov
ss
out
imul
dec
pop
inc
test
arpl
xchg
mov
cmp
andb
inc
test
insb
xor
mov
leave
cmc
std
lds
push
aam
jge
nop
mov
mov
in
repnz
outsb
dec
and
outsb
pop
addr16
std
cwtl
push
xor
es
mov
arpl
or
push
fildl
and
testb
out
sbb
mov
xor
xor
mov
popf
jg
ret
and
inc
mov
xchg
loope
pop
in
cmp
clc
scas
imul
in
fisttps
push
mov
jg
or
mov
scas
dec
fcmovnbe
fwait
add
jl
mov
insb
fs
das
cmp
icebp
or
xor
push
mov
fwait
out
hlt
add
aam
stos
add
jo
std
popf
cmp
out
fsubl
fcoml
adc
sub
gs
xchg
mov
lods
push
je
in
cmp
out
or
inc
fwait
inc
push
cmp
cmpsl
jmp
int
lret
shlb
in
mov
push
xchg
inc
popf
mov
cmpsl
stos
and
inc
sti
lods
lret
inc
mov
dec
hlt
cld
les
test
dec
mov
fwait
inc
cmpsl
ret
jae
jbe
mov
negl
loopne
sti
xchg
adc
inc
mov
lds
inc
cmp
xor
sub
adc
xchg
xor
push
sbb
fistps
fcompl
push
xlat
mov
and
sarl
sbb
lahf
push
inc
mov
sub
xor
or
sahf
mov
in
jno
jge
ja
dec
aas
stc
movsb
test
cmp
xchg
pop
scas
outsb
add
add
pusha
adc
mov
fs
jecxz
jge
sub
sub
mov
sub
iret
ret
mov
leave
xchg
jnp
sub
lret
or
mov
cmpsl
adc
in
push
paddsw
shl
and
cmp
fwait
divl
inc
outsl
incb
xor
pop
inc
dec
sub
into
in
aad
test
test
sbb
sbb
cs
scas
and
mov
scas
sbb
ss
inc
pop
adc
into
fcoml
jne
ss
add
inc
je
test
bound
in
sbb
hlt
push
mov
push
mov
pop
rorl
popf
jo
lcall
cs
insb
fwait
lods
pop
popf
mov
lock
push
neg
mov
sub
fbld
cld
ss
jb
add
scas
leave
and
and
fwait
ds
scas
and
pop
pop
jb
paddq
mov
popa
repz
sub
lret
add
push
pop
lcall
xor
adc
in
pop
dec
xor
aas
jb
xchg
pusha
sub
sbb
bound
addr16
in
sub
add
in
nop
repz
test
sub
pop
je
mov
pusha
je
dec
jne
push
and
push
insl
and
adc
push
push
adc
addr16
ret
jae
mov
mov
pusha
mov
add
lds
pop
ja
hlt
iret
into
lods
sbb
ret
rol
sub
xchg
inc
mov
jge
in
cwtl
int3
lret
in
movsl
xchg
ffree
inc
cld
iret
xchg
push
cmpsb
pop
bound
xor
mov
or
mov
arpl
and
xchg
jmp
popa
push
clc
sub
hlt
stc
pop
and
mov
add
das
cld
iret
fs
repz
inc
jecxz
xchg
faddl
push
push
outsl
repz
ds
sub
jg
jl
scas
rdpmc
push
pop
call
adc
ficoml
mov
sahf
addr16
inc
push
dec
cs
aam
cs
inc
stos
jo
push
leave
xchg
pop
inc
lock
decl
adc
sbb
and
dec
lods
jg
inc
push
jg
push
ljmp
fdivs
mov
jno
stc
sahf
out
jae
xor
dec
add
test
std
pop
cwtl
mov
and
add
addr16
divb
fimuls
andl
and
movsl
pop
cwtl
xor
jae
cmpsl
or
mov
popf
dec
pop
andl
xchg
sarl
mov
and
repnz
imul
push
flds
xchg
inc
vmaxps
rclb
in
mov
aas
loop
outsl
fists
inc
inc
and
int
lahf
add
lds
inc
inc
icebp
mov
imul
add
popa
sub
addr16
data16
cmp
adc
ret
dec
or
repz
pop
sbb
mov
mov
sbb
shll
fsubrs
xorl
jl
movsl
hlt
push
jmp
and
scas
jge
nop
std
mov
int3
lock
jp
jg
inc
add
in
lods
iret
xchg
cltd
pop
xor
and
dec
mov
add
mov
mov
ds
or
mov
sti
or
lret
xlat
sub
add
mov
addl
mov
mov
addr16
gs
pop
imul
cmp
jo
mov
stos
lret
sbb
jae
cmpsb
fiaddl
cwtl
sub
hlt
ja
fildll
push
aam
pop
fdivl
jno
aam
roll
sbb
aas
and
cmp
test
mov
mov
jle
stos
add
and
repz
repnz
fists
mov
pop
imul
pop
add
cmp
mov
jge
inc
loop
fidivrl
ljmp
lea
ficoms
xor
sti
dec
shlb
mov
iret
add
xchg
xorw
mov
ljmp
je
ljmp
or
dec
cld
pop
lea
mov
insl
test
push
jg
mov
cs
mov
loop
rorl
into
xchg
dec
xchg
add
jno
add
xor
lcall
adcb
jo
cltd
ffree
jno
lret
pop
mov
mov
sub
lret
pop
iret
clc
ja
loopne
les
repz
fldcw
hlt
jl
movsb
out
mov
rcrb
sub
mov
add
mov
into
fdivrs
iret
js
test
or
pop
push
cmp
arpl
mov
add
das
push
pushl
push
fcoms
cmp
cmc
cmp
push
pop
xchg
daa
mov
jb
push
gs
sbbl
mov
arpl
jno
dec
xchg
cmp
imul
jbe
inc
jns
jae
lahf
mov
subb
mov
sbb
movsb
enter
ljmp
into
pop
pusha
xchg
mov
mov
jo
mov
and
xor
xchg
out
in
adcl
push
outsb
out
fs
xor
dec
fstl
add
das
mov
inc
sub
test
cmpsl
jecxz
cmp
dec
and
push
jle
mov
push
pop
daa
jne
pop
lods
das
movsb
mov
repz
pop
lods
test
xchg
and
adc
mov
fldlg2
nop
das
sub
and
gs
dec
adc
js
jge
jle
test
sbb
test
decl
lock
test
icebp
sub
xor
add
and
or
adcb
and
enter
mov
ljmp
jbe
loope
inc
mov
fldcw
fldl
dec
dec
mov
lret
clc
and
sbb
xchg
sub
dec
pop
cmp
dec
pop
sbb
jbe
or
lods
clc
repnz
xor
pop
adc
fs
das
in
push
push
ficoms
fisubs
push
adc
push
aam
frstor
jp
add
xor
les
or
out
sbb
mov
arpl
stos
adc
lret
int
and
and
das
inc
call
add
pop
roll
cltd
pop
mov
pop
repnz
or
jb
sub
into
pop
int
add
fwait
or
ja
outsb
add
add
add
stc
daa
and
out
mov
pop
sbb
stos
cmp
cmp
int3
xchg
in
xchg
ljmp
mov
icebp
icebp
xchg
mov
jbe
add
mov
inc
cmp
movsb
sbb
xlat
inc
push
test
pop
push
mov
ds
cmpb
ret
adc
scas
pop
mov
enter
sbb
into
xchg
cld
xor
movl
mov
outsb
and
jle
in
jns
arpl
adc
ret
scas
push
jge
adc
call
sbb
jo
push
inc
pop
scas
inc
mov
outsl
lret
mov
clc
or
mov
out
or
std
lods
or
inc
cmpsb
pop
xchg
pop
jl
and
add
xchg
sbb
mov
insl
cmovp
mov
push
mov
out
xor
iret
stos
sbb
and
xlat
shrl
sti
cs
sbb
sbb
lods
inc
int
lret
dec
push
insl
popl
mov
or
jne
aaa
jecxz
mov
dec
mov
sub
sub
mov
sti
jge
sub
jg
mov
rcrl
sbb
or
cwtl
pop
in
adc
outsl
or
lahf
and
add
xor
adcl
ds
cmp
mov
addr16
xor
jecxz
add
jnp
push
fwait
push
add
add
adc
adc
add
cmp
arpl
inc
or
mov
jb
push
sbb
addl
es
or
jae
adc
loop
sti
in
fnop
jl
cld
push
lds
idivl
mov
shll
scas
daa
sbb
std
stos
pop
ret
ret
mov
leave
ret
cmp
push
shrb
fidivl
or
std
pop
mov
jno
inc
cmp
repz
add
ja
xchg
outsb
popf
dec
pushf
mov
inc
insb
mov
adc
aam
xor
test
daa
pop
stc
xlat
mov
mov
sbb
mov
adc
jbe
aaa
pop
pop
sub
mov
stc
cmovne
shll
jne
add
nop
adc
cmp
cmp
shl
shlb
push
pop
push
push
iret
add
popf
mov
mov
xor
sub
pusha
ret
jg
int
mov
ja
imul
rcll
dec
jecxz
xchg
xor
xchg
jno
inc
in
int3
cld
mov
daa
or
add
add
imul
jl
pusha
cmpsb
inc
xlat
inc
pop
jne
pop
adc
push
cmp
aad
pop
rcll
mov
stc
inc
rorl
mov
addl
icebp
repz
ss
adc
push
cltd
jo
push
incb
je
pop
mull
or
lcall
lea
and
jge
mov
imul
push
sbb
fcmovnbe
int
dec
inc
fldcw
pusha
sbb
jb
mov
test
dec
mov
mov
sar
jg
stc
sbb
add
gs
cmpsb
mov
pop
fsubr
xchg
call
sti
lods
sub
dec
xchg
sub
xchg
jle
cs
outsb
ret
or
sub
lods
insl
lock
pop
out
inc
push
stos
mov
cmp
inc
xor
daa
jmp
cmc
popl
mov
adc
inc
sahf
jae
inc
jmp
jecxz
aam
xor
ss
jmp
sbb
dec
adc
mov
fdivrs
jae
mov
add
test
repnz
mov
sbb
and
dec
sub
mov
xchg
cmp
cli
push
stos
mov
out
xchg
movsb
cmp
lds
loope,pt
rol
adc
inc
neg
daa
dec
dec
adc
jp
inc
leave
or
imul
lods
mov
ret
cmp
insb
jnp
dec
inc
pop
dec
inc
hlt
mov
pop
cmp
dec
mov
int
enter
das
pop
push
cmp
imul
das
inc
xchg
popf
pop
ret
inc
sub
das
mov
cmp
mov
stc
into
xchg
ja
xor
jmp
int3
nop
ljmp
stc
mov
repz
movq
fisttpll
xor
dec
pop
ds
fists
mov
in
test
sar
inc
stc
leave
repnz
mov
cmc
add
sbb
mov
sub
pop
pusha
adc
push
and
and
imulb
pop
and
jge
mov
es
call
nop
jge
pop
jmp
mov
push
pop
aaa
cld
aad
loope
sbb
aas
loop
mov
fstpl
pusha
cmp
out
repz
xchg
clc
cmpsl
push
xchg
lods
inc
xor
inc
shlb
and
sbb
dec
mov
cmp
jo
pop
test
orb
out
pop
dec
mov
fs
das
sub
hlt
jb
xor
inc
pop
jns
cs
or
xchg
idivb
jno
jb
cld
xchg
adc
or
mov
push
pop
sbb
adc
fists
sti
stos
jne
sub
test
inc
dec
add
sub
inc
jmp
or
sbb
xchg
shrb
sub
enter
adc
fwait
inc
push
lea
cli
cmpsl
pop
xor
pushf
sub
vsqrtss
repz
daa
movsl
push
dec
lods
fs
jno
addr16
push
dec
fwait
call
xchg
mov
jg
je
pop
aam
cmc
xchg
andb
cmc
les
out
or
lods
adc
shll
scas
divb
test
pop
xor
fcoms
jo
fwait
mov
and
lds
push
and
shll
push
adc
cs
sbb
inc
xchg
dec
mov
call
stos
push
mov
enter
dec
sbb
dec
cmp
xor
fimull
jl
out
fsubr
sub
in
movsl
insb
scas
mov
lods
push
push
sbb
aam
or
push
adc
shrl
pop
lea
push
xor
add
pop
mov
and
jno
pop
aas
lods
je
shlb
or
or
push
mov
out
dec
cmp
adc
mov
inc
pop
and
clc
xchg
mov
and
sbb
push
lea
jl
xchg
dec
ja
and
scas
pop
jns
sub
xchg
out
sub
xchg
jbe
aam
mov
inc
xchg
test
mov
adc
mov
pusha
inc
cmp
jns
pop
ret
sbb
xchg
fs
mov
pop
test
fcmovnb
inc
test
xchg
lret
inc
ret
jge
lret
rclb
and
push
push
popf
ljmp
sbb
clc
dec
push
or
push
cmp
mov
out
inc
jmp
mov
dec
dec
idivl
inc
arpl
or
sbb
dec
inc
mov
and
call
inc
xor
aaa
jl
sub
scas
rcrl
jns
leave
adc
mov
push
push
cltd
mov
test
out
jp
neg
sub
pop
push
push
cmc
into
mov
jmp
bound
sbb
lret
int
outsb
jnp
outsb
mov
pop
cmp
xchg
jmp
gs
xchg
loope
xor
mov
jecxz
xor
vandnpd
and
mov
push
mov
xor
push
jbe
insl
cmp
xchg
jns
mov
dec
jae
orl
js
adc
mov
xor
and
decl
mov
pop
das
popa
fstp
fidivrs
out
or
scas
xor
gs
cld
add
push
int
sbb
jbe
xchg
ja
push
incl
roll
cmp
inc
daa
std
fadds
das
orb
pop
pop
ljmp
pushf
jno
push
fwait
sarb
jb
scas
cmp
das
adc
imul
pop
cmpsl
das
jae
ret
xchg
les
ja
shl
movsl
xchg
inc
xor
lock
sub
test
fcomi
in
mov
xchg
pop
fnstsw
mov
cmp
fistpl
jae
sub
dec
sub
movsl
mov
xchg
push
mov
aaa
mov
pop
jmp
mov
jle
or
or
mov
stos
shrl
xchg
mov
shlb
cmp
push
je
pop
nop
mov
je
test
daa
data16
add
mov
loopne
mulb
and
mov
test
mov
dec
cmp
add
je
push
add
pop
stos
add
push
icebp
and
mov
xchg
sbb
sub
inc
mov
push
pop
jle
pushf
sub
mov
std
lds
nop
and
ja
or
xor
sub
or
mov
enter
in
negb
jne
insl
inc
nop
movsl
push
cmp
or
pop
std
out
hlt
popf
push
mov
push
dec
out
xchg
das
jge
lds
mov
popa
mov
stos
jns
jno
lods
mov
je
cmp
fdivs
movsl
sti
cmp
push
mov
pcmpgtw
stos
es
aam
int3
int
aad
sti
xchg
and
inc
insb
adc
or
inc
out
inc
push
sbb
js
mov
lahf
xchg
mov
int
ret
and
ds
cmp
add
into
shrb
stos
insb
adcl
sti
scas
push
mov
call
imul
xchg
das
pop
sub
xor
cmpsl
sbb
xchg
fisttpl
dec
pop
icebp
pop
imul
out
sub
movsl
insb
push
sub
lcall
int3
popa
jge
leave
jle
mov
clc
sbb
mov
add
imul
leave
add
inc
in
decb
jg
ja
insl
in
in
push
test
fmuls
loopne
push
fscale
adcb
cs
lcall
ret
mov
pop
popa
mov
push
sub
push
mov
pop
insl
cmp
xchg
lret
fwait
push
mov
jp
fcoml
push
test
xor
push
pop
xor
xor
mov
and
mov
push
lcall
push
inc
sub
or
es
add
cwtl
aas
pushf
ffree
sub
cmp
movsl
push
mov
outsb
loope
into
mov
jne
cs
fs
add
icebp
hlt
faddl
test
pop
repz
daa
sbb
mov
cmp
fadd
aad
out
out
movsb
sbbb
push
add
sub
or
or
int3
cmpl
insl
arpl
aaa
leave
addr16
mov
notl
clc
neg
popf
aas
stc
mov
inc
fisubrl
cs
sub
pop
pop
sbb
mov
insb
scas
sub
sub
insb
movsb
imulb
cmp
sbb
dec
in
leave
mov
mov
ds
mov
inc
out
adc
adc
fmul
push
aas
popa
jecxz
pop
pop
add
dec
pop
xor
mov
sub
lods
pushl
mov
adc
push
test
ja
xor
push
dec
adcl
incl
adc
movsb
scas
xor
mov
outsb
mov
inc
jle
js
dec
in
clc
mov
pop
pop
into
aas
adc
push
mov
mov
sbb
nop
inc
and
test
sub
sbb
test
ret
sbb
sarb
mov
dec
cmp
jge
and
xchg
out
jg
jo
dec
ja
xchg
pushf
sub
and
out
pop
fst
cli
pushf
pop
mov
jb
lods
dec
mov
lods
in
xchg
inc
cli
ljmp
das
insb
popf
mov
pop
add
sbbb
pop
dec
pop
pop
lret
flds
push
adc
dec
cld
fsubrl
push
or
test
mov
movsb
int3
adc
vlddqu
lcall
fbstp
mov
scas
int
ss
sub
mov
ret
inc
xor
stos
int
adc
mov
mov
cs
pop
call
clc
pop
xchg
lcall
fs
ss
jnp
jp
insl
test
popf
add
addr16
sbb
in
dec
jmp
pop
sbb
lahf
dec
sbb
imul
scas
jp
ja
outsb
fsubs
fcmovbe
stos
ljmp
arpl
fnstsw
sahf
jbe
pop
bound
adc
insl
xchg
sti
shrb
inc
ljmp
test
push
adc
push
mov
scas
dec
sbb
loop
inc
rcrb
jp
mov
push
jbe
aaa
mov
jmp
cmp
adc
pop
sbb
xchg
mov
hlt
sub
lock
stc
iret
gs
cmc
add
dec
mov
mov
sbb
xchg
jp
mov
outsl
ja
stos
dec
mov
xchg
mov
add
movsb
repz
mov
cld
adc
add
pop
sti
jbe
push
mov
pop
jmp
sub
mov
mov
testb
and
fcmovne
pop
imul
xor
push
std
sarl
add
cli
xor
sahf
ficompl
push
mov
ja
stc
inc
dec
or
iret
mov
loopne
in
pop
rcll
in
jmp
fadd
sbb
mov
roll
adc
cmpsl
cmp
sarb
pusha
push
sbb
stos
push
mov
jae
in
cmpb
pop
shl
int
sub
jge
and
out
in
jbe
cltd
push
xchg
sbb
jno
das
push
fucomi
movsl
ja
dec
jne
je
fadd
adc
stc
jne
mov
jb
into
aam
adc
fisubrl
cmp
xchg
xor
mov
sbb
cmp
lods
ljmp
push
or
or
imul
aad
inc
fistpll
xchg
movsl
jns
lahf
fidivl
cltd
cli
xchg
sarl
xchg
es
into
sahf
inc
repz
sub
cld
repnz
xchg
rol
mov
out
mov
sbb
mov
pop
adc
subb
fimuls
dec
hlt
push
icebp
out
mov
mov
jmp
xchg
push
imull
subl
cmpsl
xchg
mull
sub
sub
inc
inc
movsb
mov
mov
int
movsb
jb
cmpsl
jge
jge
cld
xchg
sbb
xchg
test
iret
popa
jo
cmpsl
xor
push
lds
mov
out
mov
jne
lret
gs
subl
cmpl
out
cwtl
lock
inc
add
pop
mov
fldenv
lahf
leave
jle
pushf
jle
cmp
xor
jmp
in
mov
out
and
lea
hlt
push
push
xchg
sub
into
jmp
scas
push
inc
adc
lret
mov
js
call
imul
xchg
insb
cmp
dec
mov
push
lret
pop
addr16
jns
mov
cmpsl
enter
pushf
cmpsl
adcb
dec
mov
stc
jmp
lock
lods
xorl
jb
mov
jle
scas
push
jne
pop
outsl
outsl
pop
jno
daa
shrl
jne
adcb
adc
rorl
in
cld
cs
lods
aaa
adc
lret
jp
sub
mov
mov
test
lock
sub
pop
scas
push
pop
jns
mov
stos
inc
dec
pop
ss
xor
outsl
rep
push
pop
mov
outsb
push
and
sub
cmpsb
shlb
test
mov
dec
call
in
cmpsl
pop
push
dec
daa
mov
shll
jno
push
stos
lcall
loop
sub
push
dec
mov
fisubrs
filds
jbe
stos
mov
cli
es
adc
dec
jne
mov
push
into
jne
xchg
xchg
and
or
mov
mov
push
outsb
test
aas
xchg
pop
jb
pop
popa
add
jae
jnp
out
dec
mov
pop
add
mov
and
xlat
call
mov
andl
psadbw
pusha
mov
push
inc
cld
das
or
lahf
push
jb
mov
or
sub
scas
ret
dec
add
xor
ja
xchg
push
loope
imul
or
sbb
sahf
mov
lods
into
mov
ficoms
or
lods
ljmp
clc
mov
test
daa
fnstenv
mov
fldl
pop
or
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
jmp
insb
loopne
jmp
mov
xchg
into
xchg
inc
xor
jge
pop
jp
jae
aaa
in
xor
lds
adc
cld
enter
pop
inc
and
push
mov
addl
divb
sti
push
mov
fbstp
and
or
jbe
ja
sub
mov
cmp
negl
jle
push
mov
mov
in
pushf
aam
fiadds
sbb
sbb
add
push
jo
cmp
mov
mov
mulb
hlt
ret
mov
cwtl
data16
xchg
mov
sub
in
cld
daa
add
imul
mov
add
hlt
dec
pop
or
rorb
add
mov
sarl
loopne
inc
push
jmp
cli
mov
or
gs
push
pusha
lock
movsb
adc
push
inc
adc
lds
xor
ja
jnp
xchg
mov
shll
js
pop
lds
in
or
fstps
jp,pt
in
mov
in
fwait
sub
inc
xchg
aaa
add
fdiv
fnstcw
test
mov
mov
jae
imul
inc
sti
addr16
loop
inc
push
cli
sbb
add
push
fnstenv
mov
mov
sbb
cmpb
inc
inc
jnp
push
loope
push
xchg
je
push
lahf
push
sbb
pop
or
xchg
sbb
push
dec
imul
sub
mov
pop
adc
mov
xor
testb
jle
cmpsl
cwtl
lret
inc
leave
das
out
mov
call
ds
pop
adc
cmc
in
int
clc
add
pop
lcall
imul
cmpsb
mov
or
ja
sub
jb
jecxz
sub
push
pusha
cli
cld
lahf
jns
pop
imul
push
pop
inc
sbb
cwtl
cmp
jne
out
enter
dec
xlat
mov
ret
or
in
les
mov
imul
or
lahf
add
mov
cltd
adc
or
pop
xchg
xchg
shr
mov
inc
push
pop
jmp
out
dec
push
cmp
shlb
sbb
mov
imul
xchg
sbb
leave
les
xchg
popf
insb
jb
mov
and
jmp
xchg
outsl
jns
and
cmp
mov
jnp
jb
pop
sbb
sbb
mov
popa
fidivl
dec
mov
and
gs
shl
cmc
dec
add
pop
dec
xchg
mov
imul
dec
mov
mov
adc
movsl
rcrl
or
into
addr16
sbb
mov
es
sbb
mov
cmpsl
cltd
hlt
cmp
insb
dec
cmp
xchg
insl
jns
ja
lret
pop
sahf
jnp
cmp
aas
out
jae
inc
sbb
addr16
sarb
mov
nop
hlt
add
hlt
mov
pop
inc
inc
or
xchg
xchg
int
mov
and
inc
pusha
ja
mov
icebp
inc
leave
addr16
icebp
ret
out
sub
and
inc
pop
jnp
mov
jl
inc
or
sahf
mov
fildll
add
xchg
outsl
mov
out
adc
outsl
aaa
mov
cmp
mov
pop
sbb
fidivrs
or
fs
fwait
inc
mov
mov
imul
jle
lods
mov
xchg
dec
fidivrl
mov
test
imul
cli
sbb
push
push
mov
inc
push
aam
iret
xor
leave
mov
test
sbb
mov
mov
lock
test
sub
out
jns
lock
cmp
inc
pop
int
xchg
sbb
cld
sahf
xchg
or
sbb
xor
pop
adc
les
repnz
popa
ret
sub
in
nop
sub
push
add
aas
cmp
mov
mov
push
cmc
cmpsb
out
pop
lods
jecxz
push
cmp
push
push
cmp
fcmovne
lret
lret
or
xchg
pop
xchg
push
mov
repnz
mov
imul
mov
hlt
lahf
jns
std
clc
xor
cmp
pop
lcall
sbb
inc
dec
fldl
enter
pop
sub
or
jmp
dec
ja
adc
push
std
flds
push
lret
cmp
call
or
popf
aas
shl
inc
scas
fisubrl
jmp
jp
xor
sti
repz
aad
daa
inc
or
jae
mov
rcrb
cwtl
or
ret
sbb
jae
adc
lret
fldcw
push
arpl
arpl
or
or
imul
insb
call
fbstp
addb
push
bound
addb
fimull
ret
and
mov
out
push
fmuls
test
add
ds
mov
mov
orps
ret
addr16
mov
add
js
mov
cmp
or
mov
dec
jmp
icebp
push
scas
jno
pop
pop
arpl
test
bound
inc
xor
xchg
or
repz
xchg
mov
or
push
bound
push
mov
cmc
inc
or
push
or
or
mov
sub
xor
adc
rolb
ss
xchg
cmpsl
ret
fisubs
icebp
outsl
popf
fisttpl
pop
mov
adc
aad
pushf
inc
cmp
cmp
sub
shl
or
loopne
bound
adc
loopne
es
out
mov
and
mov
es
xor
mov
call
gs
popa
fcoml
mov
add
sub
arpl
lahf
mov
pushf
lods
cmp
testb
add
jb
or
push
inc
sub
mov
loop
int
lret
aas
cmc
daa
sub
push
cmpsb
mov
loope
outsl
pop
adc
imul
add
dec
mov
mov
repnz
mov
sbb
cld
and
lahf
jo
test
dec
jle
push
sub
inc
cmp
int3
pop
aam
inc
test
lods
mov
add
xor
sbb
rcrl
mov
shlb
popa
pop
jmp
jbe
jle
ret
sbb
ds
xchg
pop
ds
les
mov
or
mov
loopne
fcmovnbe
mov
mov
sbb
dec
dec
in
add
sub
dec
dec
mov
lcall
inc
lock
jmp
fidivl
xor
neg
jp
sbb
cld
hlt
push
jo
das
test
pop
mov
iret
adc
lret
bound
jmp
ss
xchg
nop
lods
inc
mov
mov
in
add
cli
repnz
iret
shl
mov
push
adc
scas
jmp
ret
dec
xchg
mov
into
js
jne
pop
add
rorl
ret
push
arpl
push
pop
xchg
inc
mov
leave
adc
ret
fcmovnb
clc
xchg
out
int3
mov
xchg
nop
insb
pop
mov
push
jns
xchg
aaa
inc
xchg
dec
push
test
in
inc
jl
inc
sub
mov
insb
xorl
rorl
mov
dec
lods
aas
shlb
jge
adc
push
jle
dec
xor
mov
fiadds
movsb
sub
adcb
mov
mov
sahf
xor
xchg
xchg
aam
xchg
inc
jbe
in
sub
aaa
std
xchg
aad
mov
or
jmp
out
hlt
pop
or
adc
popf
addb
rcrb
sub
mov
jb
pop
in
lock
xchg
ds
into
add
jg
adc
aad
cmp
mov
fbld
aam
mov
dec
imull
nop
daa
mov
xchg
jb
js
enter
xor
xchg
push
mov
loope
sub
pop
mov
cmpsl
cmp
fidivrs
scas
jnp
jmp
icebp
jg
popa
aas
mov
lds
inc
xchg
xor
leave
mov
pop
pushf
lods
sbb
les
push
jae
xchg
mov
push
jmp
lea
mov
imul
rorl
adc
xor
cmp
pop
repnz
bound
jno
cmp
ljmp
test
xor
mov
and
lods
lea
cmp
int
xchg
es
push
jecxz
mov
sub
xchg
or
pop
jmp
movsl
sarl
xor
call
add
sub
sub
call
mov
push
idivb
mov
dec
push
add
pop
lahf
mov
out
xor
dec
iret
push
ss
xor
mov
jecxz
scas
dec
ror
outsl
push
sarl
sub
cmpsb
js
shrl
rcll
lds
and
mov
sbb
adcb
cmp
xor
and
push
mov
mov
movsl
adc
aaa
xor
inc
mov
pop
xchg
pop
lods
leave
or
dec
ror
lahf
pop
outsb
add
das
cwtl
jecxz
notb
push
sti
lret
cmp
cmp
and
outsb
adc
lock
ficompl
loop
mov
sbb
mov
arpl
insl
cmpsb
push
and
cmp
cli
mov
outsb
js
mov
add
jmp
sub
xchg
and
sbb
push
pop
cld
inc
push
movsl
sub
lret
mov
mov
leave
je
jmp
dec
mov
cmp
repnz
pop
imul
movsl
sub
fdiv
stc
out
mov
iret
sbb
sahf
jno
and
pusha
mov
out
push
xor
jb
shll
and
pop
in
int3
xchg
sahf
rolb
or
pop
andl
loope
stos
mov
add
sbb
data16
fisttps
pusha
dec
in
outsl
rcl
push
adc
and
mov
add
mov
sahf
sub
pop
data16
cmpsb
arpl
xchg
test
outsl
dec
cwtl
pop
cltd
mov
mov
cmpsb
and
test
loop
dec
icebp
mov
cmpsb
xchg
xchg
enter
xor
loopne
test
ja
mov
data16
ljmp
pop
pusha
pusha
je
push
adc
mov
lea
clc
adc
cmc
ret
push
les
jecxz
test
jp
add
sbb
fwait
dec
loope
aam
cmp
pop
outsb
jl
sahf
dec
pop
shll
es
xor
sarl
cld
mov
scas
imulb
and
pushf
jne
mov
cvtps2pd
sbb
mov
inc
cmp
negb
xor
push
mov
inc
mov
sbb
xchg
idivl
xchg
push
icebp
fisttps
jl
in
sahf
imul
movsb
fdivrs
es
mov
aad
mov
aas
pop
addr16
cmpsb
mov
inc
sahf
and
xchg
jae
xor
stos
ds
ficomps
xor
xor
imul
testb
gs
jbe
stc
pop
or
mov
outsb
inc
mov
test
sbb
mov
mov
stos
cmp
sbbb
sub
rorl
xor
mov
adc
lea
sub
dec
pushf
sub
pop
js
out
mov
dec
in
mov
push
pop
add
cmp
loop
popa
adc
out
test
pop
cmc
push
loope
outsl
aaa
ss
and
pop
mov
lea
in
push
xchg
xchg
xor
sti
push
xchg
fadd
push
mov
mov
ss
push
into
xchg
shll
test
fidivs
cmpsb
repnz
jg
fucomi
or
ljmp
mov
add
cmpsb
or
cs
fstl
movl
xchg
fnstsw
cld
mov
sub
push
mov
das
stc
inc
sbb
xor
iret
cwtl
fisubs
push
int
subl
cwtl
or
or
sbb
imul
leave
xor
addl
adc
sidtl
cmp
iret
xor
sbb
lock
fdivrl
pushf
jecxz
mov
dec
aas
push
sahf
loopne
pop
inc
xor
out
inc
pop
xchg
data16
push
in
ljmp
push
or
out
jae
pop
cmp
nop
mov
iret
call
loope
in
clc
sbb
fsts
in
adc
lret
out
in
mov
push
push
inc
rorl
mov
subb
outsb
sbbb
mov
push
pop
fiadds
ljmp
stos
frstpm(287
cld
les
inc
dec
or
je
mov
test
jno
outsl
repnz
jg
adc
or
ret
and
sbb
dec
sub
fdivrp
enter
ljmp
icebp
rol
in
jge
das
mov
mov
test
fcomps
cmp
sub
cmp
gs
dec
subl
imul
test
mov
pushf
inc
xor
push
sub
std
sub
dec
or
sub
jmp
mov
stos
xor
lods
jbe,pt
repnz
add
sub
dec
push
repnz
test
adc
ret
fcompl
jnp
bound
cmp
int3
cwtl
cli
adc
fbstp
imul
mov
sbb
cmp
in
sbb
sub
stos
je
shrl
mov
mov
nop
mov
cmpsb
movsl
jp
repnz
dec
adc
aas
push
dec
dec
fs
sub
inc
pusha
xor
sbb
mov
xor
jle
mov
stos
adc
pop
test
stos
test
out
push
adc
arpl
cmp
mov
xchg
xor
push
mov
out
sarl
in
mov
xchg
push
leave
stos
pop
pop
lahf
and
shll
or
push
out
repz
out
push
mov
repz
stos
and
or
jmp
add
mov
rcll
cmp
shll
jne
jnp
xchg
insl
adc
adc
or
add
dec
je
lahf
test
dec
pop
lret
xor
jle
pop
imul
repnz
scas
dec
jmp
dec
dec
and
dec
lret
inc
mov
jb
ja
scas
pusha
and
push
daa
mov
xchg
or
or
sub
mov
or
lock
mov
and
mov
fxch
mov
pop
aaa
dec
mov
xchg
xor
inc
fisubs
jb
xchg
pop
mov
ret
xchg
mov
mov
lret
cmp
xor
cld
jle
test
mov
inc
ja
xchg
dec
sub
ja
cmp
jae
cmpsb
repz
lods
inc
cld
jecxz
xor
out
inc
pop
pop
jbe
popf
mov
cmp
adc
pop
and
addr16
adc
insl
cli
jnp
sub
ljmp
imul
dec
push
call
xlat
pop
fs
adc
push
cmp
je
xchg
pop
mov
sbb
pop
fs
and
pushf
jmp
push
scas
mov
mov
in
cmp
xchg
dec
cmpl
icebp
xchg
fiaddl
push
lret
es
iret
lahf
lods
xor
cmp
adc
outsl
jge
adc
loope
es
or
imul
jbe
add
and
imul
adc
mov
dec
and
js
or
pop
inc
hlt
ficoms
pop
cli
addb
fdivs
adc
leave
mov
xor
cld
enter
jmp
outsl
inc
xlat
mov
aad
inc
xchg
xorl
jns
hlt
sbb
filds
fs
inc
aaa
jp
jae
pop
leave
jno
mov
pop
cwtl
lret
and
cltd
xor
movsl
sbb
icebp
hlt
shll
scas
inc
mov
cmc
push
fwait
cmp
cmp
xor
jp
jne
into
fbstp
lret
daa
jmp
push
jo
arpl
stos
mov
add
fwait
push
ficomps
insl
or
dec
insb
xchg
xchg
lock
xor
daa
bound
mov
xor
xchg
mov
dec
fidivrs
pop
outsl
leave
test
add
add
fstpt
adc
xor
push
andl
inc
jge
ret
scas
xchg
scas
push
fnstcw
xor
jle
aas
insb
sub
jmp
add
idivl
inc
fwait
jp
sub
scas
add
cmp
or
xchg
push
call
je
int3
adc
push
inc
gs
int3
ret
popa
repz
pop
inc
imul
push
xlat
xor
lahf
jge
daa
addr16
and
pop
and
test
lret
push
ror
lcall
ds
pushf
push
lds
jmp
aas
add
cmp
mov
andl
je
push
push
cmpsl
fildll
rol
pop
out
fnstenv
into
insb
adc
mov
push
and
adc
xchg
mov
das
add
mov
data16
cli
push
mov
inc
xchg
jnp
in
xor
sbb
adc
xor
fucom
rolb
shl
loope
or
mov
pop
mov
into
fisubrs
into
jb
or
push
fstl
test
shll
test
jp
or
add
mov
sbb
jg,pt
inc
je
dec
cmp
popf
out
adc
jmp
add
loope
fcmovbe
add
lock
dec
pop
test
in
pop
cmc
fs
add
addr16
push
xorb
cmp
sbb
js
cmp
and
leave
cwtl
inc
stos
xorb
add
pminsw
or
jno
pop
push
test
inc
sbb
mov
movsl
cwtl
nop
add
lods
fidivl
popl
fiaddl
movsl
xor
test
loope
fmull
and
inc
xchg
pop
add
int3
xchg
and
xor
popa
sub
negl
dec
inc
in
cli
bound
cwtl
pop
cmp
mov
xor
cmpl
cmpl
lret
push
fcomi
cmp
inc
sbb
mov
inc
mov
call
jne
rcrb
notl
jle
mov
push
cmp
scas
jg
ljmp
push
inc
mov
lea
pop
mov
push
scas
add
push
js
icebp
jbe
out
fnstenv
xlat
cmc
addr16
and
jns
test
insl
sbb
popf
xchg
pop
mov
out
movsb
mov
test
mov
pop
mov
rol
pop
movsl
and
jo
fs
out
jb
in
pop
in
sbb
test
jl
pop
xchg
or
pop
subl
add
repz
stos
jns
push
xchg
jp
test
mov
loope
xor
or
pop
push
daa
mov
lahf
cmp
cmp
cmp
add
mov
xlat
pop
fxch
sbb
jecxz
jo
int3
lret
mov
enter
mov
add
push
jmp
push
in
push
cmp
push
cld
lret
xor
pop
xchg
insb
or
sbb
inc
push
imul
sarb
jle
xchg
les
test
and
add
neg
fwait
inc
cltd
popa
push
inc
inc
mov
inc
xor
cmpsl
gs
repnz
and
mov
dec
add
xchg
int
mov
roll
push
sbb
jo
and
xchg
mov
sbb
out
cltd
outsl
jno
cmpsl
jns
jb
adc
stc
pop
rcrl
fwait
pop
into
mov
adc
arpl
rcrl
lret
mov
inc
ror
sahf
mov
jl
pop
sub
mov
mov
push
xor
add
mov
pusha
pop
pop
in
pop
push
push
pop
pop
adc
mov
into
sbb
xor
lods
sbb
or
or
mov
sub
pop
les
sbb
cmpsl
hlt
les
push
jne
cmp
inc
or
stos
pop
mov
shl
or
jge
bound
decb
mov
mov
cmp
add
mov
test
test
mov
cmp
cmp
jne
lock
cmp
or
outsb
cs
sub
sub
inc
xor
cltd
add
pusha
xor
dec
mov
iret
cmc
mov
mov
push
sti
add
in
pop
mov
out
adc
push
jmp
mov
fstpt
mov
xchg
out
mul
sbb
dec
test
jecxz
iret
xchg
rol
mov
and
sub
lods
push
dec
mov
enter
cld
sti
and
jp
dec
push
or
dec
mov
and
mov
pop
add
adc
xor
pushf
inc
jl
add
add
cmp
fs
mov
mov
mov
lahf
and
stos
movsb
inc
and
into
xchg
lcall
outsl
idiv
out
jmp
pop
out
xor
test
xor
cs
xchg
and
cmp
mov
outsb
das
adc
loope
test
sub
jb
cmp
xlat
sbb
sub
push
addr16
adc
jns
inc
enter
jae
push
andl
hlt
jae
movsl
hlt
std
mov
cmp
arpl
int
stos
xlat
cmc
das
add
loope
jns
inc
or
test
sbb
xor
xchg
push
shr
outsb
outsw
xor
sbb
xor
lcall
jmp
or
jl
lock
out
push
gs
clc
ficoml
add
xor
into
int
add
jp,pt
int3
jge
data16
inc
pusha
popf
push
inc
jns
fucomi
xor
adc
push
lahf
ret
xchg
jp
daa
pusha
nop
filds
fimuls
enter
call
xor
mov
mov
je
sub
scas
sub
inc
repnz
jmp
or
lcall
mov
call
ror
scas
repnz
gs
out
in
sub
or
nop
mov
sbb
push
outsb
jl
and
sub
divb
fsubrs
xchg
push
cs
iret
adc
fcoml
pop
mov
fiadds
jno
cmpsl
outsl
mov
and
and
lahf
scas
inc
xchg
jno
data16
adc
in
insb
je
andb
pop
nop
divl
jae
das
jle
fdivs
les
fs
jnp
push
fstpt
lock
movsl
je
sub
les
stc
pop
and
sbb
and
popf
mov
mov
test
icebp
sub
lcall
mov
movsl
mov
enter
mov
mov
pop
inc
adc
stos
mov
fucomip
mov
insl
loope
cs
int3
sub
movsb
push
decl
cmpsb
scas
ds
push
push
mov
scas
lods
mov
add
hlt
push
xchg
mov
sbb
xchg
ljmp
call
cltd
fsubrl
pushf
movsl
mov
mov
and
inc
bound
pop
or
pop
adc
mov
push
lods
inc
adc
mov
int
add
lods
jl
pop
mov
jb
icebp
sbb
les
in
loopne
bound
cs
sub
pop
sarl
and
rorl
jb
pop
and
test
movsb
inc
in
xor
sbb
cmp
dec
xchg
jmp
inc
and
pop
inc
scas
ret
std
pop
xchg
push
jl
fs
sub
pop
jo
sub
hlt
jge
mov
mov
aad
leave
push
or
and
in
and
sahf
push
lock
faddl
dec
test
pop
jo
pop
dec
push
sbb
jl
xchg
sbb
stos
icebp
aas
repnz
outsb
mov
test
sbb
loopne
or
out
add
lcall
out
push
jl
test
roll
fidivrl
test
push
lret
add
mov
jl
jl
dec
lods
in
push
mov
sarb
clc
dec
jmp
bound
cltd
xor
add
inc
test
xor
mov
pop
sbb
imul
sti
or
cmp
psubsw
daa
arpl
gs
xchg
jle
rolb
jge
push
mov
les
mov
dec
sub
push
cmc
out
pop
xor
ss
shll
rcll
xchg
xor
int
jecxz
dec
jo
sarb
cmp
push
xchg
jne
and
pusha
push
adc
and
jp
pop
inc
or
inc
add
test
adc
je
inc
dec
insl
mov
dec
rcll
sbb
push
dec
mov
sub
sub
or
fidivs
negb
jae
cmp
jp
dec
or
push
cld
outsl
stos
push
inc
add
inc
icebp
lret
push
je
int
test
cmp
pop
cli
bound
adc
dec
sbb
cmpsb
dec
sbb
pusha
pop
daa
mov
push
xchg
lret
in
pusha
rclb
xorb
jb
add
aam
push
mov
cld
xchg
cmp
lret
jnp
mov
cld
dec
xor
cltd
aas
stc
shll
mov
stos
inc
xchg
and
hlt
dec
fdivr
sub
xchg
xor
sub
into
mov
test
xor
movsb
push
repz
xchg
out
filds
enter
popa
jnp
sbb
fcmove
rolb
xor
fs
iret
jae
inc
lea
mov
out
sar
xor
pop
les
jns
adc
mov
xchg
arpl
inc
dec
push
sub
push
pop
addr16
fists
cmp
out
mov
inc
cmpsb
xchg
pop
jbe
pop
mov
rcll
js
inc
pop
mov
test
sbb
xchg
mov
mov
lds
dec
push
push
nop
dec
push
inc
or
inc
pop
popl
cmp
jmp
xor
mov
outsl
cli
outsl
pop
fdivs
aas
cld
imul
imul
pop
scas
cltd
adcb
es
lret
add
rep
std
or
fistl
mov
or
loop
out
sub
sbb
fs
int
sbb
xor
inc
mov
cmp
roll
adc
das
gs
test
push
ss
lock
aaa
adc
sbb
dec
cmp
loopne
and
scas
or
in
popf
and
aaa
imul
dec
dec
ds
pushl
xchg
inc
and
icebp
pop
in
xchg
addr16
add
sbb
sub
mov
cmc
mov
mov
sbb
pushf
cmp
aas
dec
and
xlat
mov
sbb
outsl
js
xor
ret
push
add
jle
mov
mov
and
loope
int
negl
insl
popf
jbe
icebp
in
daa
jo
mov
push
xor
push
ret
loop
sub
jne
pop
jns
cld
or
in
sbb
es
jae
xchg
out
movl
xor
xor
loop
out
imul
jo
or
clc
mov
call
mov
xor
adcl
mov
insb
icebp
jl
jnp
bound
ja
or
xchg
scas
push
ss
push
add
leave
dec
mov
stos
in
jl
loope
repz
push
incl
jns
pop
out
ret
cltd
or
fldcw
xchg
repz
add
outsl
rol
push
out
loop
ss
jbe
xchg
arpl
in
add
add
xor
adc
push
fwait
mov
out
pop
lds
lock
dec
push
jb
mov
ret
sbb
jl
mov
imul
std
cmp
scas
push
adc
or
sahf
mov
shlb
aad
loop
jae
xchg
insb
out
shr
out
subl
or
pusha
lcall
push
adc
sti
add
or
xchg
iret
andl
lock
xor
nop
cmp
push
adc
xchg
pop
sarb
cmp
popa
push
cs
clc
testl
idivl
pop
cmp
lock
add
sub
mov
dec
mov
push
fmull
push
xchg
aaa
push
movsl
popf
loopne
jae
pop
and
lret
int
pop
sbb
inc
jecxz
and
cmp
rclb
out
mov
sub
rorl
xor
adcb
inc
cmp
xor
sub
xchg
add
and
lock
lahf
test
mov
xor
leave
adc
mov
stos
sub
mov
jecxz
in
xchg
shrl
xchg
arpl
imul
add
popa
add
mov
out
lret
mov
and
inc
mov
addr16
push
lret
dec
out
add
cwtl
or
dec
sub
mov
in
bound
nop
mov
cmp
repnz
mov
inc
fnstsw
xchg
subl
xchg
neg
testb
imul
fnstenv
in
cltd
cmp
adc
push
outsb
xchg
lods
jb
lahf
cpuid
xor
mov
jns
mov
pop
insb
ja
out
add
les
or
fcomps
inc
mov
mov
sbb
ja
xor
push
addr16
jns
mov
jns
fwait
or
dec
sets
mov
outsb
mov
dec
xor
add
inc
out
repnz
pushf
and
jnp
lcall
jl
insl
mov
jmp
mov
xor
mov
sbb
mov
push
xchg
fisubrs
ja
push
daa
mov
and
dec
or
dec
pusha
sbb
js
fsts
jl
push
push
or
dec
neg
daa
jbe
scas
add
sub
adc
or
or
mov
outsb
sub
or
or
and
mov
test
xor
stos
mov
ret
aam
and
rcrb
in
sub
dec
lcall
mov
popa
and
std
inc
adc
cmp
icebp
sub
jo
pop
xor
fisubl
testl
or
orb
sar
cwtl
inc
mov
cltd
pop
adc
rol
pop
frstor
add
push
and
mov
pop
popa
pop
loop
mov
and
cmp
mov
cs
ret
or
jno
cmp
fcom
mov
adc
push
lret
dec
xchg
mov
mov
jne
push
cs
mov
inc
into
movsb
inc
je
jmp
pop
stos
xchg
dec
pop
mov
jo
mov
pop
popa
xor
adc
cmc
add
mov
fwait
mov
mov
cmp
pop
sbb
insl
insl
jmp
or
test
xchg
dec
sahf
mov
fstpt
loope
ja
pusha
leave
xlat
add
mov
fstl
cmp
mov
pop
clc
pushf
dec
sub
psrad
jne
movsl
mov
sub
lret
pop
lds
jnp
inc
and
adc
mov
sub
cmp
sti
jge
inc
movsl
sbb
or
inc
sub
je
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
jmp
enter
sarb
add
sbbl
mov
jge
pop
jp
dec
sbb
jo
dec
add
out
push
lret
inc
and
in
dec
mov
icebp
addl
loopne
test
mov
xlat
fwait
dec
fisttpl
cmp
call
std
mov
outsl
push
xor
dec
dec
dec
scas
pop
out
imulb
ja
cli
stc
fiadds
xchg
push
iret
inc
sbb
push
inc
test
jae
insl
stc
add
test
lret
or
xchg
outsb
pop
xchg
pop
cmp
inc
mov
jbe
outsb
in
sbb
fidivrl
shlb
outsb
mov
jno
cmc
adc
inc
pop
stos
push
sbb
jp
push
call
mov
or
pushf
and
jae
dec
outsl
cmp
and
lea
lock
es
mov
stc
or
andl
fsubs
dec
rorl
out
ljmp
in
mov
mov
ds
pop
scas
xchg
or
ret
xor
mov
daa
adc
pop
xchg
mov
pop
in
pop
xchg
dec
dec
outsb
stos
mov
mov
imul
lods
adc
stc
lods
mov
test
repnz
pusha
xchg
jl
mov
in
and
push
xchg
rcrl
sbb
pop
inc
loopne
mov
mov
sti
cmp
shll
inc
test
push
xchg
in
sub
inc
out
sub
arpl
cmp
pushf
push
pop
push
mov
push
jge
cld
cmp
test
inc
movsl
pusha
dec
inc
js
sub
jp
mov
jge
adc
xchg
pop
push
xchg
insl
sti
jbe
add
enter
lods
jle
sub
jbe
and
mov
mov
xchg
pop
gs
xchg
fyl2xp1
inc
in
in
inc
dec
mov
aad
mov
or
cli
cli
outsb
cld
push
jo
pop
inc
inc
sbb
rorb
ja
and
cmp
mov
sahf
mov
cwtd
mov
adc
jp
cmp
sbb
shlb
and
or
mov
xchg
adc
cmp
or
mov
enter
data16
aaa
cmp
push
lret
push
pop
push
xchg
test
inc
mov
inc
ja
or
or
and
or
icebp
loopne
lret
fs
cmp
enter
adc
push
mov
sbb
xchg
cmp
aaa
sar
out
shlb
or
jecxz
cwtl
loopne
or
mov
ljmp
and
xlat
dec
out
outsb
jmp
xchg
push
incl
in
insl
inc
pusha
inc
mov
fnstsw
inc
je
arpl
jmp
inc
mov
xor
in
out
fidivrs
jb
push
popa
pop
repz
mov
xchg
dec
inc
mov
daa
dec
mov
xchg
mov
push
fildll
pusha
scas
hlt
aaa
adc
fdivrl
lods
jb
into
ss
add
arpl
hlt
cmp
cmc
pop
sbb
lret
add
xor
xor
popf
out
mov
je
mov
xor
bound
cwtl
mov
sub
mov
inc
fs
mov
clc
data16
jne
aam
or
sbb
lock
out
nop
es
sub
lahf
andl
ds
je
lahf
add
add
dec
mov
repz
or
movsb
cmp
sub
xor
sbb
mov
ss
push
dec
ret
dec
leave
inc
aaa
imul
js
push
push
ljmp
cmp
push
and
push
inc
add
inc
ret
jae
xchg
loope
mov
loope
jp
push
dec
int3
pop
inc
push
test
jbe
inc
stos
pop
jno
cmpsb
mov
call
out
ljmp
dec
sahf
mov
js
jno
int
stc
xor
fcmove
sub
dec
iret
push
cmp
test
je
loope
packssdw
fstpl
movsl
cmp
mov
bound
enter
ret
pop
pop
popa
rolb
imul
lock
pop
push
inc
ds
cmpsl
shlb
inc
mov
push
lods
mov
mov
add
or
and
pushf
aas
and
cmp
mov
push
sahf
push
dec
cld
sub
aas
mov
shrl
or
test
lock
icebp
mov
adc
std
scas
adc
movsl
inc
push
cmp
sbb
imul
dec
push
jp
jp
adc
cmc
jo
rcll
adc
aas
sbb
xchg
add
dec
fimuls
dec
popl
xor
cmp
jbe
push
seto
mov
das
cmp
fcompl
in
rorb
mov
cltd
nop
fidivs
add
fucomp
in
mov
lds
xchg
testb
test
ficoms
xorb
xchg
sub
fdivr
mov
or
icebp
int3
adc
lods
adc
push
xor
cld
fistpl
fsub
inc
test
sub
cmp
aad
sub
into
adc
mov
jmp
dec
jo
enter
push
popa
jae
xor
mov
dec
inc
add
jne
mov
lahf
push
call
test
orb
dec
fwait
sarb
sbb
add
add
cld
cmp
ljmp
mov
outsl
ljmp
or
mov
mov
cld
scas
sahf
cmp
ret
mov
push
outsb
jge
pop
mov
mov
pop
insb
xorb
sbb
outsl
mov
mov
dec
shrl
lret
call
or
jne
gs
inc
xor
adc
mov
xchg
sub
xchg
cmp
jbe
xchg
inc
fdivrp
aad
bnd
push
push
or
inc
es
inc
lahf
ds
sbb
insb
push
cmpsb
dec
inc
cmp
or
stos
pop
std
aad
xlat
xchg
mov
mov
and
jl
out
pop
test
insb
mov
mov
std
movsl
mov
loopne
xchg
and
push
xor
xlat
cmp
push
sbb
pop
clc
aam
dec
lock
cmp
mov
cmp
push
push
sbb
out
enter
rcl
pusha
mov
jmp
flds
enter
adc
pop
lock
cwtl
fs
or
fcmovnbe
xchg
cmp
pop
xchg
fcomps
mov
into
mov
jns
dec
pop
dec
repnz
add
jno
push
repnz
mov
nop
lods
xchg
fs
mov
popa
clc
mov
jnp
adc
push
cli
or
aad
rolb
cmp
inc
stos
jb
sti
iret
inc
jbe
js
jmp
inc
movsl
or
xchg
outsb
dec
inc
es
or
adc
fldl
sub
imul
in
cmp
rcrb
dec
mov
jmp
insb
push
xor
out
bound
les
or
inc
jmp
nop
mov
push
xchg
adc
fistl
mov
or
int3
sbb
xor
test
imul
js
loope
pop
pop
add
xor
shlb
mov
popa
pop
fs
out
mov
jo
fadd
push
xor
mov
cmp
pop
inc
sub
nop
sbb
pop
stos
icebp
and
xlat
cli
bound
mov
cli
xchg
pop
push
test
loop
nop
pop
sar
mov
push
push
xchg
loopne
push
gs
push
fdivrs
pusha
das
push
dec
ja
pop
inc
mov
aad
xchg
and
loopne
mov
ds
incl
insb
lods
call
mov
jb
or
push
mov
mov
adc
or
aas
loope
pusha
xlat
add
out
xor
sahf
xchg
fisttpl
cmp
jl
pop
out
mov
sbb
sub
lods
dec
popf
das
jmp
and
pop
out
outsb
mov
scas
sahf
test
stos
das
cmp
mov
cmp
outsl
push
xchg
scas
adc
mov
mov
nop
rorl
xchg
bound
ds
dec
jo
negb
add
pop
mov
jge
lahf
pop
xchg
outsl
pop
aas
jns
fistl
dec
mov
inc
xor
adc
cmp
mov
les
dec
inc
sub
cli
adc
orb
cs
jmp
xchg
mov
pop
xor
or
jo
test
inc
outsb
sbb
daa
mov
lods
gs
push
ja
push
cs
add
push
sub
into
addr16
adc
xor
mov
mov
dec
push
mov
add
cmpsl
cmc
jecxz
bound
adc
or
mov
movsb
pop
shl
outsb
mov
fs
aas
push
in
and
shll
inc
adc
int3
sbb
test
mov
lret
push
mov
adc
lock
push
jecxz
addr16
and
gs
adc
xor
repnz
in
inc
xor
sbb
cmp
rclb
adc
push
add
add
push
or
aam
adcl
push
pop
mov
push
daa
repz
pop
andl
jb
scas
lock
jae
sub
xchg
sbb
nop
dec
mov
push
xchg
sti
cmpsl
and
jnp
in
jno
aas
mov
mov
into
mov
mov
sahf
inc
movsl
push
rolb
push
dec
std
fildll
and
shl
push
or
push
gs
enter
std
add
jl
cli
ficoms
xor
push
jg
push
mov
dec
dec
dec
pop
jecxz
sbbl
or
call
or
cmp
xor
into
lret
cs
mov
in
or
jg
lds
inc
cmpsb
mov
fisubrs
je
out
mov
mov
loope
addb
cmc
mov
sub
mov
pop
pop
testl
xchg
rcl
pop
xchg
std
mov
rcrl
sbb
shlb
and
movb
inc
int
lret
imul
ret
addr16
mov
test
loop
mov
popf
inc
bound
insb
imul
sti
pop
jecxz
or
push
adc
rcrb
xor
and
xchg
jns
sub
xchg
push
test
cmp
cltd
xchg
fs
pop
sbb
jl
or
push
in
jo
mov
mov
cmpsb
dec
out
movsb
add
xchg
std
adc
mov
dec
dec
sub
mov
in
fstpl
cmp
pop
or
pop
sub
out
jae
out
jb
lret
sub
fwait
jg
xchg
pop
or
addb
add
cld
sbb
fnstenv
subb
faddp
mov
adcb
dec
ret
sbb
push
pop
es
hlt
loopne
mov
into
pop
nop
loope
xor
dec
adc
sbb
fnstsw
adc
mov
or
or
stos
mov
loop
movsb
jns
push
repnz
or
dec
dec
imul
xor
ja
xchg
mov
scas
sub
and
jle
popa
adcl
popf
je
jg
jno
xor
js
mov
pop
jg
mov
mov
xlat
lods
jno
add
xchg
scas
xchg
nop
sti
mov
out
sbb
adc
pop
mov
roll
in
int3
and
inc
jne
mov
call
mov
shrl
lea
xlat
cmp
cmc
mov
add
jmp
mov
xchg
fmull
roll
cmc
dec
pop
mov
int3
xchg
lahf
inc
inc
repz
xor
aaa
lret
xlat
cmp
add
add
cmp
inc
jno
lcall
fstl
sub
xor
into
ja
test
daa
or
dec
enter
cmpsb
insb
pushf
sub
mov
add
pop
sub
ret
mov
dec
mov
dec
jecxz
dec
mov
cld
stos
ljmp
xorl
adc
into
call
out
movsl
mov
imul
icebp
imul
insb
inc
jmp
filds
inc
fs
cmpsb
aad
add
xchg
jae
xlat
inc
stc
push
insb
sub
in
sub
inc
jecxz
popa
popa
dec
insl
addr16
insb
pushf
adc
shll
xorl
or
and
int
xchg
jmp
dec
inc
or
mov
cmpsl
movsl
adcl
popf
or
push
pop
add
into
addr16
sub
inc
inc
sub
arpl
pusha
sbb
jnp
adc
dec
testl
gs
add
push
jmp
and
add
aad
shll
or
jg
inc
sbb
int3
or
in
repz
dec
rolb
push
ret
pop
sbb
and
pop
and
mov
pushf
into
pop
mov
cmpsb
aam
sbb
jb
mov
mov
movsl
scas
fmuls
push
fldcw
popf
mov
ja
in
fs
cmp
mov
idivb
movsb
leave
pop
bound
push
lcall
loop
inc
shll
dec
hlt
mov
mov
sti
jmp
imul
xchg
je
das
push
ficoml
mov
loope
out
or
mov
cmp
cmp
ret
mov
cmpb
mov
mov
push
jecxz
hlt
nop
and
inc
inc
aas
call
mov
add
nop
jge
push
pusha
fmuls
shll
ret
push
scas
out
andb
jnp
add
nop
cvttps2pi
adc
mov
mov
popf
movsl
pop
pop
out
das
out
and
test
shrl
sarl
jns
or
nop
pop
aaa
xor
imulb
int
fldcw
jo
and
nop
sbb
je
in
cmp
int3
repnz
leave
ficoml
shlb
sbb
xchg
movsl
cmp
dec
dec
cwtl
sti
lock
loopne
dec
into
ffree
or
gs
daa
push
pusha
rcll
ljmp
add
pop
xor
movsb
mov
adc
push
gs
jo
repz
and
xchg
lret
ficomps
int3
fisttps
lcall
in
mov
out
jo
iret
push
sbb
out
repnz
dec
js
jns
pop
out
push
mov
mov
icebp
inc
jae
outsl
pop
rorl
sbb
ss
ljmp
test
mov
push
add
bound
clc
dec
and
in
fadds
adc
xor
xchg
mov
ss
add
cmp
sub
into
and
push
in
xchg
stc
insb
shl
out
leave
add
adc
std
mov
mov
jge
pop
or
out
test
fwait
mov
push
outsl
test
mov
fstl
xor
push
sbb
loopne
and
xchg
push
add
dec
push
jl
addl
fistps
js
in
movsb
loopne
arpl
mov
and
stos
lock
fs
sub
test
inc
ljmp
fcmovnbe
lds
inc
ds
nop
or
sub
insl
cwtl
sub
xor
push
lds
jns
push
xor
push
dec
notb
fcoml
addb
push
jle
mov
test
mov
adc
and
lock
mov
dec
xchg
push
iret
xchg
jmp
and
fcmovne
les
adc
ret
repz
dec
out
iret
inc
pop
into
jge
mov
fistl
mov
test
rol
in
xchg
in
mov
bound
int
movsb
pop
insl
jle
sub
test
movsb
popf
and
inc
out
xor
mov
insl
xor
aas
jb
shrl
mov
dec
imul
mov
iret
mov
ret
xchg
push
xor
cmp
add
je
mov
ljmp
jle
out
idiv
xlat
rcl
fs
jl
cld
gs
out
scas
ds
repnz
in
mov
and
sti
sub
ljmp
jmp
jae
jne
in
mov
push
xchg
mov
fistpll
lret
xchg
sbb
gs
das
mov
mov
data16
and
push
or
adc
lock
test
es
dec
call
push
les
pop
dec
xchg
gs
push
jno
jl
lock
rolb
movsb
lahf
push
fsubl
fistpll
pushf
xchg
mov
push
lds
or
sub
and
popa
add
jp
in
inc
adc
cwtl
hlt
dec
or
sbb
sub
fisttpll
rcrb
enter
pop
adc
lcall
push
push
pushw
lahf
and
lcall
pop
imul
leave
or
int3
and
mov
mov
scas
push
test
cmp
sahf
mov
mov
cmp
stos
jmp
lcall
test
nop
mov
or
rolb
xchg
jo
mov
ret
mov
pop
inc
data16
mov
stc
clc
or
jbe
cmp
jbe
jecxz
add
stos
lcall
lcall
mov
jns
mov
pusha
inc
hlt
mov
fmuls
mov
jl
pop
push
ret
dec
fs
cmp
add
aad
lock
xchg
dec
fmul
mov
inc
arpl
cmp
imul
pop
add
sbb
lcall
mov
inc
jbe
mov
inc
mov
or
jmp
adc
cwtl
aam
cs
test
out
add
mov
or
jbe
daa
lcall
repz
or
shll
dec
adc
push
cli
push
fisttpl
sbbl
jp
cld
call
lock
sub
dec
aad
daa
icebp
jmp
clc
loop
ljmp
inc
das
fdiv
in
out
hlt
and
movsb
stc
cld
pop
inc
mov
aas
aaa
sbb
jbe
cwtl
inc
int
and
mov
arpl
cmp
sub
pop
add
sub
cld
sub
push
movsl
test
xchg
and
dec
icebp
cmp
dec
loopne
sti
ret
stos
inc
lea
outsb
mov
std
out
sbb
inc
cld
fcompl
movsl
imul
loope
repz
xchg
jge
jecxz
bound
adc
imul
pop
xor
jne
sub
push
scas
out
adc
xchg
inc
inc
or
or
arpl
sub
mov
mov
dec
sub
mov
movsl
xor
js
cli
and
pop
dec
fidivl
cmp
repnz
cmp
out
fnstcw
mov
pushf
jg
sub
dec
xchg
and
loope
xor
add
aaa
data16
nop
xor
repnz
jge
mov
orl
add
lret
dec
jg
aad
pop
clc
inc
cmpsb
sbb
jae
push
push
sbb
dec
cmc
test
shl
lret
mov
sub
push
pop
mov
cmpsl
mov
mov
imul
cmp
push
pop
inc
sbb
iret
aam
or
mov
push
fidivl
pusha
fidivl
mov
pop
xor
or
push
in
mov
xor
mov
inc
cmp
mov
add
sub
sub
dec
xchg
sbb
inc
fnstsw
insl
fildll
xor
inc
add
push
push
pushf
push
mov
scas
cmpsl
jbe
adc
in
lahf
cmc
cli
rolb
gs
add
adc
and
sahf
sbb
jmp
or
js
pop
sbb
mov
push
adc
mov
insb
rcrb
pop
enter
mov
push
mov
ss
xchg
jo
push
dec
jl
lcall
sahf
repz
sahf
sub
xchg
cmpsb
sbb
loopne
cmpsb
xchg
jo
nop
orb
jmp
enter
push
and
fimull
mov
and
int
decl
idivb
sub
test
jne
mov
sub
int3
std
scas
jp
repz
adc
push
add
add
push
jb
adc
adc
test
in
insb
dec
or
sahf
fldt
cmp
pop
in
ljmp
add
lods
subb
loop
rclb
call
mov
aas
repz
adc
mov
sbb
pop
sar
repnz
jecxz
pop
movsb
xchg
dec
mov
out
test
mov
and
xchg
mov
scas
mov
fidivl
jl
adc
fmull
ljmp
ljmp
std
enter
pop
loopne
fwait
clc
push
adc
leave
into
stos
and
xchg
xchg
dec
jge
pop
jge
lods
mov
or
add
popl
or
and
pop
bound
and
testb
mov
jge
cmc
dec
xchg
les
mov
dec
inc
fadds
hlt
cltd
call
pop
testb
pop
pop
ret
cmpsl
les
mov
push
aam
imul
cmpsb
inc
lret
movsl
jmp
in
insb
cwtl
gs
pop
inc
pop
sbb
xor
add
or
mov
cld
dec
inc
xor
bound
inc
pusha
xchg
out
jnp
je
lea
pop
loopne
out
icebp
sbb
add
dec
lock
push
lahf
cmp
sarb
je
pop
in
jnp
add
lods
add
lcall
xor
cmc
cmpsb
sahf
adc
test
push
nop
xor
sbb
fs
psllw
jmp
xchg
sbb
sbb
movsl
jg
sbb
divb
mull
push
shl
pop
push
cmp
sub
mov
jo
aad
xor
mov
in
sub
pop
pop
nop
mov
outsl
in
cmp
adc
mov
mov
pop
push
pusha
ss
cmp
addr16
adc
jb
jle
sub
sub
cmp
push
push
mov
ret
and
or
jns
or
pop
inc
scas
xchg
loopne
enter
ret
push
jge
or
xor
mov
ds
rcl
inc
mov
inc
mov
js
fidivrl
pop
lahf
test
loopne
sbb
cmp
pop
ss
xor
add
sti
lods
stc
vmwrite
out
cmp
ror
lods
in
int3
test
lods
out
popa
and
pop
push
mov
inc
inc
mov
add
daa
push
mov
rorb
mov
mov
jmp
pop
jo
pop
or
pop
mov
ja
add
pop
icebp
sbb
sbb
xchg
int
out
mov
sti
jnp
out
xchg
insl
push
and
sub
aaa
enter
mov
push
jo
and
mov
xor
jle
lea
cmp
xchg
negl
insl
aam
adc
fldl
pop
and
ljmp
jo
es
loope
out
out
inc
sar
aas
inc
mov
dec
pop
jae
leave
adc
fld
xchg
in
inc
fldenv
add
pop
push
inc
adc
in
enter
popf
popf
push
lock
popf
rcl
sarl
pop
mov
pushf
outsl
mov
cwtl
pop
cmp
and
push
fmulp
mov
pop
js
fldt
mov
jno
pop
and
sahf
enter
out
sub
cltd
pop
lock
hlt
scas
xor
mov
fisubrs
sbb
dec
call
into
jmp
cwtl
xchg
leave
das
mov
imul
xor
xchg
hlt
push
dec
push
mov
call
fs
ret
out
jb
das
dec
mov
xchg
insl
or
push
sbb
inc
movsb
dec
mov
dec
movaps
push
iret
out
mov
loopne
mov
add
adc
hlt
mov
arpl
loope
aam
pminub
mov
divb
sti
xchg
test
or
sbb
stc
mov
add
mov
repz
push
mov
jecxz
mov
and
fistpl
xchg
and
daa
dec
aam
inc
mov
sbb
xchg
xchg
das
jbe
sbb
mov
jo
push
sti
lahf
lahf
mov
mov
cmp
out
pop
jae
and
add
sub
movsl
and
int
pushf
imul
add
pop
lods
fiadds
xlat
push
sbb
insl
inc
adc
in
push
cmpb
hlt
pop
push
out
lock
jno
push
jg
and
jp
cli
gs
nop
lods
shlb
mov
pushf
movsl
mov
arpl
inc
jecxz
mov
jb
pop
jg
insb
dec
sti
push
push
sti
ret
fisubs
int3
adc
cmp
jg
ret
sub
test
mov
add
xchg
cmc
mov
pop
enter
pop
cltd
mov
mov
stos
mov
sub
sub
test
sarb
mov
daa
daa
adc
sti
cmp
fdiv
hlt
jl
push
call
jns
jnp
pop
fiaddl
pushf
ds
sti
icebp
xchg
adc
nop
in
inc
sbb
in
mov
fists
fsubs
fldenv
pop
stos
pushf
insb
inc
mov
cmpsb
ret
cmpsl
in
push
xorb
cmp
sahf
imul
scas
mov
inc
icebp
push
popf
insl
lock
mov
lret
sbb
decl
shlb
out
xor
imul
sub
xchg
mov
std
ja
inc
push
loop
mov
mov
int
loop
mov
stos
insb
or
jne
in
repz
rcrb
lock
push
mov
lods
faddl
int
jo
ljmp
or
xchg
xchg
xchg
adc
mov
repnz
push
pusha
push
pop
add
sarb
push
je
lea
dec
xchg
cmc
mov
bound
xor
xchg
mov
lcall
mov
sub
add
sbb
repnz
pop
push
insl
dec
inc
lcall
loopne
jb
xchg
stos
sub
mov
gs
cs
sub
and
mov
test
sbb
cmp
jne
arpl
and
adc
inc
roll
pop
cmp
pop
ficompl
pop
mov
ret
not
lock
and
xchg
fmulp
pusha
popf
or
aaa
dec
shlb
lret
xchg
jmp
scas
mov
mov
mov
subl
fildll
cmp
dec
pop
jg
lods
add
std
and
adc
push
mov
add
push
push
pop
push
mov
dec
pop
enter
rcll
loopne
push
sub
push
test
sub
mov
jg
adc
loope
repz
nop
sbbl
inc
int
jmp
adc
test
clc
xchg
js
les
mov
sub
test
xchg
lods
xor
lods
mov
pusha
add
out
xchg
sbb
mov
sub
xor
test
xchg
jns
fdivr
push
repnz
push
into
dec
addl
fstl
clc
mov
imul
popa
cli
pop
and
scas
lcall
arpl
sahf
ljmp
mov
js
add
loopne
sbb
mov
sti
and
popa
sub
mov
pusha
jae
in
adc
rolb
data16
inc
fisubrs
inc
popf
sbb
lea
jnp
int3
push
mov
sbb
je
sbb
pop
sti
add
out
mov
pop
dec
add
adc
add
cmp
push
push
jo
cmp
fstps
jge
or
gs
aas
outsl
and
cmp
add
mov
cld
and
jecxz
inc
dec
mov
and
dec
dec
shlb
push
fwait
out
das
pushw
push
add
adc
push
or
xlat
adc
scas
mov
mov
pop
fnsave
dec
dec
xor
ret
mov
pop
cmp
pop
lcall
out
aad
xchg
push
mov
into
inc
scas
in
mov
pop
cmp
fimuls
das
dec
das
int3
js
enter
pop
mov
sbb
xchg
sub
adc
push
sar
ss
insl
shlb
xor
sti
ss
iret
aaa
fnstsw
xor
xlat
mov
dec
int
stos
or
dec
adc
fucomp
pushf
xchg
lret
fcmovnu
fistps
sub
shrb
dec
shr
int
aad
jle
movsb
lahf
lods
inc
inc
in
arpl
jns
mov
add
mov
xchg
push
jle
std
mov
add
xchg
xor
or
mov
and
adc
scas
sbb
not
add
not
test
ret
inc
push
je
lret
mov
dec
push
mov
mov
outsl
outsb
daa
sbb
sbb
mov
faddl
xor
popa
icebp
xor
and
fadds
aas
add
or
xor
sub
xor
sub
and
mov
data16
cmp
das
cmp
adc
outsb
imul
mov
xchg
je
push
adc
sub
add
int
fistl
push
jle
push
fisttps
cmc
fisubl
add
inc
mov
fsubrl
xchg
pop
push
jmp
ss
jp
xchg
mulb
pop
mov
fsubrp
add
dec
lods
ss
adc
fdivl
inc
push
mov
fsubr
pop
dec
mov
ret
sbb
stc
pop
repnz
mov
xor
jbe
jnp
adc
pop
sbb
mov
mov
jae
pop
xchg
mull
orl
mov
adcb
stos
jne
adcl
sub
movsb
shll
dec
xchg
mov
xchg
add
pusha
lods
pop
int
sbb
imul
add
sub
cs
or
in
ret
loop
gs
rcr
lcall
mov
xor
xchg
xor
add
or
bnd
push
inc
pop
inc
mov
jns
pop
ljmp
pop
inc
bound
lock
dec
mov
loopne
neg
inc
sahf
out
loope
mov
sub
scas
shlb
lods
popf
lret
shlb
sbb
jns
pop
gs
mov
mov
in
test
and
mov
add
cmp
mov
mov
adc
dec
mov
add
push
mov
or
lds
out
inc
fsubl
ja
add
scas
sub
iret
insl
ja
mov
sahf
adc
mov
jnp
pop
mov
in
sub
test
out
test
int3
imul
nop
imul
jno
sub
gs
and
in
mov
lea
inc
cmpl
and
stos
out
and
dec
pop
test
inc
dec
ret
jmp
ret
sbbl
dec
loop
es
shrb
loopne,pt
sub
sub
jb
sti
movsb
jb
xor
orb
imull
adc
out
mov
pop
inc
aas
je
mov
je
pop
lods
sbb
clc
add
adc
call
mov
pop
push
nop
gs
ret
or
lahf
jp
int
aad
push
mov
pop
add
mov
popa
dec
shl
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
or
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
push
call
jmp
push
mov
movl
cmpl
je
cmpl
jl
jmp
call
mov
dec
mov
jmp
mov
xor
add
mov
sub
xor
mov
notl
mov
andl
sub
movl
movl
xor
mov
mov
add
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
call
xor
xor
dec
mov
jmp
sub
add
mov
sub
xorl
mov
adc
mov
mov
inc
mov
andl
mov
inc
mov
cmpl
jb
jmp
push
push
pushl
push
pushl
pushl
call
cmpl
jb
sub
movl
mov
orl
sbb
mov
xor
or
mov
sub
or
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
jmp
fs
dec
mov
movsb
jnp
rol
aaa
cli
pop
pop
adc
aam
jp
pop
jp
es
loop
adc
push
mov
daa
iret
adcb
aaa
mov
xchg
jns
xor
clc
push
add
jb
jno
cmp
shll
lock
ljmp
popf
orb
mov
dec
xchg
jp
les
andb
push
loopne
sub
cli
adc
dec
xchg
pop
out
lock
cmp
jecxz
push
xor
xchg
mov
mov
inc
repnz
int
sub
pop
dec
out
jecxz
data16
sub
pop
movsb
movsl
std
xorb
lods
xor
out
jo
orb
sbb
and
xchg
lock
pop
or
mov
cmpl
or
call
in
mov
loopne
sub
ss
xor
fsts
push
outsl
test
adc
xor
lcall
mov
movsb
dec
add
and
ret
dec
xor
mov
jge
pop
out
inc
repz
lods
jge
pop
push
gs
movsb
clc
sub
inc
mov
lahf
mov
aad
push
add
subl
icebp
mov
repz
ja
xchg
dec
out
jb
inc
pop
jno
xchg
sbb
inc
rcll
mov
fbld
stos
add
insb
xchg
xor
xchg
test
push
fadd
loopne
inc
in
pop
scas
fldl
xchg
adc
pushl
repz
stos
fcomp
out
mov
cmp
outsl
lea
imul
sbb
inc
or
mov
jae
or
pop
ds
sarl
int
adc
add
int3
lock
mov
inc
popa
call
hlt
jns
fldenv
or
sti
or
inc
and
xchg
mov
js
movsb
pop
ss
push
stos
mov
sub
xlat
pop
pop
mov
or
adc
xchg
int
mov
mov
ja
stos
jae
je
mov
pop
fbld
aad
jle
lret
test
and
aad
add
insb
adcl
rorl
or
rcl
pop
or
mov
test
inc
out
mov
int
sbb
jo
dec
xacquire
rcrb
xor
jecxz
add
lock
fs
xor
jmp
add
lea
jmp
outsl
xchg
lea
ljmp
hlt
scas
mov
pop
adc
lret
xchg
and
sub
xchg
xor
jae
lcall
outsl
and
push
push
or
je
push
jle
lea
enter
popa
subb
mov
inc
cmp
movsl
push
mov
sti
pop
adc
ljmp
cmp
mov
sahf
ret
cmpsl
shlb
push
imul
mov
sub
sti
xchg
adc
mov
test
mov
mov
dec
mov
shlb
and
or
push
inc
xchg
pushf
inc
dec
popa
jbe
and
mov
xchg
lcall
or
aam
sbb
xchg
and
arpl
sub
and
out
mov
ja
test
adc
lods
adc
add
push
dec
and
cltd
out
dec
or
das
push
add
adc
scas
and
stos
stos
push
mov
ret
stos
leave
jecxz
xchg
or
cltd
lea
in
cmp
nop
popa
pop
dec
ds
pop
mov
push
shr
xchg
adc
and
cmp
test
cmp
pop
loope
mov
cli
aaa
sarb
jns
xchg
xlat
cs
ror
pushf
stos
mov
notb
push
in
fsubp
cmc
dec
imul
push
mov
inc
fdivs
sbb
and
dec
faddl
xlat
aas
mov
movsl
push
fxch
data16
int
cmp
popa
cmp
jmp
and
inc
push
pop
loop
inc
and
mov
dec
loope
dec
jg
add
pusha
mov
or
arpl
lea
pop
and
jns
aas
rorb
dec
mov
xor
bound
pushf
repz
sahf
xchg
mov
ds
repnz
cli
inc
add
nop
mov
cmp
dec
cwtl
xor
or
nop
xchg
pusha
testb
pop
aam
lock
pushf
lret
inc
adc
imul
mov
sbb
dec
daa
cmpsb
popa
push
and
mov
out
es
xchg
sub
aam
setno
inc
insb
mov
cltd
dec
fcomp
push
add
cmp
outsl
sub
scas
jae
add
insb
mov
out
lock
inc
or
out
push
push
das
aad
cltd
popf
js
imul
fdivs
rolb
mov
rclb
sbb
mov
std
out
data16
int3
int
lcall
add
mov
mov
test
fisttpll
rorl
aad
jl
mov
dec
dec
iret
adc
jne
popf
enter
out
xchg
dec
jmp
xchg
dec
cwtl
ret
ja
fdivrs
and
and
cmp
lods
xchg
or
xchg
in
jno
mov
clc
jbe
aas
or
cwtl
push
and
icebp
je
mov
xchg
inc
fs
cmc
jge
xor
xor
push
je
dec
xor
push
sbb
mov
lods
and
push
adc
cwtl
inc
scas
mov
pop
in
and
icebp
push
dec
fisubrl
testl
stos
push
and
push
ja
cmp
cmc
fsubr
insb
cmp
pop
ds
das
mov
or
or
mov
imul
js
jmp
fisubs
pushf
push
fimuls
int
pop
in
in
out
mov
adc
cld
xor
push
or
jo
loop
xor
dec
pop
push
test
mov
leave
push
mov
inc
xchg
mov
push
shrl
dec
xchg
addr16
je
adc
aaa
cs
cmpsl
add
jecxz
rcl
lods
sbb
xor
sbb
sbb
ficomps
or
hlt
inc
inc
mov
mov
push
jno
lcall
fsubs
xchg
jmp
sbb
push
punpcklwd
std
push
mov
mov
dec
ficomps
fimull
sbb
test
push
loopne
xchg
or
dec
mov
sub
mov
loop
pop
sub
sbb
iret
or
jmp
std
fsts
scas
jmp
lea
mul
xor
add
repnz
scas
test
xchg
stc
and
nop
xor
and
cmp
clc
lock
add
xor
cmpsb
fsubrl
jbe
ja
push
jo
jle
loop
pop
mov
jp
imul
adc
ds
dec
mov
popa
popf
mov
cwtl
jno
sub
popa
hlt
sub
outsl
add
pushf
cmp
sub
fidivrs
or
inc
pop
cwtl
sahf
sbb
cmp
mov
inc
test
pop
out
pop
rcl
rcl
jno
xor
jecxz
cwtl
adc
and
or
jae
enter
in
mov
mov
aas
and
push
pop
pusha
fwait
add
aaa
or
jo
ret
mov
cmp
mov
inc
mov
cltd
stos
mov
repz
leave
and
outsl
mull
mov
xor
and
mov
xchg
int3
cmp
mov
je
aas
ret
or
lret
ret
pop
adc
xchg
pushf
test
sub
push
add
rolb
xchg
lods
cmpsb
mov
sbb
inc
jb,pn
adc
xchg
mov
pusha
mov
dec
cld
and
aad
mov
cmpsl
dec
sub
mov
f2xm1
or
fcoml
rol
sbb
icebp
sub
insb
mov
out
xlat
inc
xchg
push
rcrb
popf
scas
or
and
sub
jge
js
mov
adc
push
push
push
mov
xor
ret
or
sti
xor
loope
jecxz
or
adc
lcall
std
push
test
lock
imul
cmp
jp
lahf
pusha
add
mov
ret
testl
inc
sarb
mov
mov
jp
sbb
gs
leave
inc
xor
add
sub
shr
pop
ljmp
xchg
xadd
andl
sbb
loope
das
repnz
inc
and
adc
rclb
jmp
loope
add
cli
cmp
push
cmp
mov
imul
cmp
push
push
cmp
mov
sub
jg
add
ljmp
clc
or
push
out
mov
insb
hlt
inc
lcall
insl
jnp
mov
push
sbb
out
pop
orl
pop
clc
pop
lock
xor
ficoml
dec
divb
scas
sub
test
arpl
jecxz,pn
repnz
rcr
xchg
fwait
inc
dec
push
dec
out
cli
lds
sbb
mov
imul
pop
pop
push
loope
mov
sbb
cmp
rcl
je
enter
mov
cmp
dec
xchg
push
repz
xchg
sub
test
scas
fsts
loope
into
and
ficomps
es
rcrl
cmpsb
mov
leave
xor
push
add
jp
push
lahf
ja
or
fs
inc
adc
enter
mov
jb
or
and
add
in
pop
dec
xchg
incb
cmp
pop
sub
cmpb
insl
es
mov
mov
ret
adc
inc
cli
sub
xlat
inc
leave
add
cmpsl
mov
es
cmp
jecxz
rcll
out
test
jne
adc
mov
jge
popa
test
rorb
popf
mov
mov
mov
push
mov
rolb
and
inc
push
push
add
add
les
dec
and
popa
shr
scas
push
je
lahf
sbb
lods
ss
dec
jge
cmc
inc
push
sub
pop
pop
dec
pop
in
call
aad
mov
mov
mov
sub
icebp
sbb
push
les
jb
int
pop
inc
daa
inc
jp
push
sub
shrl
movsb
xor
adc
cmp
pusha
es
cmpsl
mov
cli
xor
xchg
or
fcmovne
rcrb
test
xor
je
es
cs
xor
sbb
int3
mov
clc
mov
cmp
shl
lret
add
mov
lcall
push
repz
push
fldcw
cmp
fisttpl
rcll
int3
cmc
xor
fwait
pop
addr16
pop
jae
in
imul
and
xchg
fisubl
jns
lods
push
ss
push
dec
mov
cmp
xchg
cmp
add
cwtl
inc
aaa
pusha
mov
jns
mov
sti
ljmp
adc
shrl
movsl
sbbb
enter
sahf
xchg
movsb
in
ficoms
lock
jg
sbb
dec
inc
enter
dec
aad
jl
fisttps
add
inc
test
call
mov
jno
fistpll
stos
cmp
js
fs
fisubrl
int3
sbb
inc
cmp
out
into
push
fimull
jp
cmpsl
out
mov
push
lret
cmp
outsl
out
or
adc
js
js
mov
sbbb
mov
lock
mov
andl
lcall
gs
arpl
mov
mov
sbb
inc
mov
add
adc
out
dec
mov
shl
mov
sub
and
es
cwtl
ss
fistl
xor
pop
or
sarb
sbb
nop
in
mov
sub
repz
rcrl
mov
jbe
rclb
mov
jg
sbb
pusha
cwtl
rorb
cmpsl
icebp
and
in
lahf
sub
dec
inc
and
push
packssdw
addr16
dec
cmp
repnz
dec
and
test
mov
dec
or
fnstsw
jns
push
leave
xorl
outsb
test
mov
push
lock
inc
mov
cmc
aam
insl
adc
insl
pop
jle
decb
out
sbb
cmp
jmp
mov
bound
or
vdivss
pop
hlt
and
inc
bound
fimull
leave
fwait
shrl
mov
mov
dec
xchg
xor
or
and
xor
pop
mov
out
xchg
push
orl
xchg
int
ret
shrb
mov
jp
hlt
lret
mov
xor
sub
add
xor
inc
dec
subb
aad
outsb
xchg
lock
hlt
pop
or
ficoms
adc
aas
leave
ret
idivl
xor
bound
int
push
dec
arpl
add
or
cmpxchg
push
scas
add
mov
mov
mov
test
push
das
arpl
mov
mov
orl
xor
mov
movsl
cmp
pop
add
and
sbb
repnz
mov
mov
pop
movsl
das
adc
ret
push
sub
jbe
arpl
out
add
cwtl
push
out
lcall
mov
mov
popf
dec
inc
mov
popf
sub
insb
or
mov
or
push
loop
inc
or
es
fdivrl
aas
mulb
xor
mov
dec
xchg
sti
or
xor
pushf
rclb
inc
jne
stos
cmpsl
testb
xlat
xor
icebp
fwait
mov
and
push
or
jecxz
outsl
lahf
adc
test
insl
call
pop
inc
jnp
popa
fcmovu
movsb
xor
addr16
pop
cs
negl
les
test
dec
mov
dec
loope
fmuls
push
repz
arpl
stc
int
mov
lea
pop
mov
ret
sahf
push
xchg
add
sbb
add
mov
dec
pop
inc
add
mov
data16
imul
movsb
mov
inc
cmp
add
mov
xor
or
add
ret
xor
ds
dec
cmp
dec
in
loopne
dec
push
add
cmp
push
sub
and
repz
out
sub
in
adc
aaa
pop
ret
bound
je
inc
mov
fcompl
or
into
imul
inc
sbb
sbb
dec
mov
ret
fmull
aaa
rol
call
ss
fwait
test
sub
xor
jae
push
pop
mov
cmpxchg
jnp
push
in
adc
cld
cltd
or
cmp
scas
cmpsb
xchg
fists
mov
ljmp
sbb
rolb
push
fildll
out
and
xchg
jae
lock
fimull
or
adc
ja
je
das
ljmp
movsb
test
ss
lds
in
enter
cmp
jo
or
push
and
add
into
ja
push
inc
jg
push
adc
sahf
lea
and
pop
testl
ljmp
out
dec
scas
or
xor
mov
leave
setae
fs
mov
sbb
xor
lcall
scas
cmpsb
sub
xchg
lods
mov
nop
jbe
add
cmpsl
mov
push
loop
ljmp
jp
popf
sbb
cmc
ss
xchg
sbb
pop
sti
ftst
mov
pop
ds
sbb
rcrl
cmp
rcrl
adc
aaa
test
push
movsl
jg
sub
fldt
rorb
lds
adc
dec
dec
popf
inc
fnsave
lret
or
popf
leave
sbb
push
sbb
lret
mov
inc
sub
cwtl
push
pop
xchg
or
imul
dec
movl
scas
fidivl
mov
test
jbe
adc
adc
fcomps
mov
popf
mov
xchg
jmp
stos
and
jg
lock
cmpsl
xchg
bound
dec
hlt
jl
incb
or
mov
inc
lods
icebp
out
inc
test
mov
scas
jp
ds
xor
cld
xchg
lds
scas
pop
inc
push
iret
cld
xchg
cli
leave
jns
push
mov
jecxz
sbb
cmc
stos
and
cwtl
mov
pop
or
push
icebp
jmp
mov
add
cli
rcr
xor
sti
out
or
push
push
jl
pop
xchg
fiaddl
sub
shlb
xor
jb
movsl
insl
gs
bound
leave
popf
or
dec
jp
out
push
jge
pop
xor
inc
sbb
stos
sti
fsubl
out
pop
ja
loopne
ja
or
jb
mov
lret
cmp
mov
iret
cmpsb
fsubs
inc
push
pop
jle
shlb
into
inc
daa
cmp
xchg
int3
or
sub
mov
scas
jno
insb
addb
cmpsl
mov
push
and
rolb
cmc
addr16
add
js
in
mov
ljmp
ffree
iret
lcall
xchg
pop
xchg
mov
pop
data16
push
xor
pop
das
loop
pop
andb
add
jns
and
sahf
sbb
lds
addb
adc
roll
jp
ljmp
popf
jns
jg
adc
xchg
ds
lock
mov
out
addr16
int
push
mov
push
mov
icebp
insl
mov
ficoml
cmpsb
imul
daa
arpl
ret
or
xchg
inc
inc
insl
out
dec
and
jae
faddl
mov
mov
loope
mov
pushl
mov
shrd
in
stos
adc
ret
or
std
sti
stos
jle
push
sbb
iret
push
push
ret
push
addr16
js
fcmovbe
jl
test
adc
adc
stos
xchg
mov
pop
scas
fs
jnp
stos
mov
add
leave
inc
daa
or
mov
jne
scas
lahf
mov
mov
sub
scas
testl
aam
add
sub
std
sarb
adc
lea
test
jge
push
push
jne
movsb
push
cmp
sub
pop
sub
popf
mov
aad
add
mov
adc
xor
daa
pop
cmp
loop
jb
mov
mov
cmp
lcallw
test
adc
mov
fsts
pop
daa
out
pop
xorb
wbinvd
ss
jae
test
dec
int
or
inc
faddl
test
mov
fimull
push
jbe
lods
adc
sub
popf
dec
xchg
push
inc
imul
dec
mov
push
pop
push
mov
mov
test
jbe
adc
xor
cmp
inc
xchg
dec
push
das
pusha
fdivrs
mov
and
adc
test
inc
jl
scas
out
jns
add
sbb
xchg
pop
aad
mov
sbb
iret
decb
and
dec
xor
outsb
sar
cld
outsb
fmuls
xlat
hlt
pusha
mov
push
jb
mov
das
and
lret
in
mov
dec
mov
mov
xor
mov
jecxz
jne
push
sub
mov
pushf
out
dec
sub
popa
push
ret
xor
pop
inc
push
stc
loop
xchg
push
mov
inc
aas
rcrb
scas
aad
imull
cmp
cmp
shll
imul
and
insb
xchg
pop
mov
xchg
push
repnz
pop
fadds
push
ss
xchg
loopne
clc
arpl
lcall
test
mov
frstpm(287
or
outsl
inc
mov
mov
iret
and
cld
pusha
and
mov
inc
mov
aas
scas
add
xorb
cmp
jo
and
out
push
ss
bound
adc
inc
sbb
mov
ret
jle
or
sahf
ficoms
pop
push
rolb
mov
aas
inc
clc
sub
add
pop
mov
add
add
bound
icebp
inc
sbb
and
sub
sbb
fstpl
dec
jo
nop
ret
jae
xchg
xor
xlat
js
insl
mov
inc
push
arpl
out
loopne
xchg
int3
dec
push
call
aad
or
jmp
mov
out
push
fs
je
das
mov
mov
pushf
pushf
fwait
mov
and
push
std
loopne
mov
arpl
jge
xchg
gs
and
push
and
xchg
adc
adc
lds
daa
and
jecxz
inc
pop
inc
ljmp
mov
jecxz
fadd
cmp
add
push
add
outsl
mov
mov
idivl
mov
mov
mov
pop
mov
cmpsb
out
sbb
pop
pop
sti
sbb
orl
in
ret
shll
repz
ss
and
lods
push
cmp
leave
movsb
mov
testb
xchg
mov
xchg
mov
add
lods
push
cmc
mov
adc
fucomip
or
xor
jmp
mov
xchg
test
cmp
add
stos
jg
mov
fisttpl
ljmp
jo
mov
test
adc
push
out
rorb
mov
test
aam
sbbl
sub
mov
and
int3
adc
dec
inc
xchg
xlat
sbb
push
rcll
push
sub
jns
jmp
jle
mov
psubb
mov
pushl
mov
pop
push
or
inc
fbstp
and
decl
mov
mov
movsb
push
sbbb
sub
sub
adc
lcall
jl
jns
pop
mov
adc
lock
pop
cmp
pop
lcall
in
sub
and
repnz
subb
xor
or
xor
inc
pop
jne
xchg
mov
dec
lods
shrb
popf
sahf
std
mov
fists
and
mov
aas
enter
imul
mov
xchg
pop
mov
popa
jecxz
fmull
cmpsb
ds
cmp
ja
popf
loope
data16
mov
in
movsb
and
or
mov
fwait
xor
dec
jae
push
and
subl
repz
icebp
mov
scas
loop
js
lahf
aas
fldcw
pop
aas
int3
imul
orl
mov
fs
data16
mov
xchg
push
fidivl
cmp
mov
mov
or
mov
inc
sbb
sbbl
or
xchg
cwtl
dec
sbb
mov
cmp
adc
jno
mov
push
repz
sub
adc
push
ret
ds
js
mov
push
inc
call
fdivrl
roll
fcmove
mov
jnp
mov
movsl
cmp
cltd
shll
jne
movsb
mov
aam
divb
jg
insb
dec
cmp
cmc
xchg
imul
test
sub
push
int
push
dec
push
sarb
lock
enter
mov
inc
int3
push
inc
sbb
xor
fisttpll
mov
push
dec
mov
sub
jo
push
pop
mov
add
cmp
push
sub
data16
jae
ljmp
mov
jge
sub
call
movsl
int3
adc
into
jg
loopne
push
pusha
pop
sbb
bound
or
xor
cmp
xchg
jge
adc
or
ja
add
outsl
pop
jnp
cmp
test
or
mov
cld
mov
lret
xchg
xor
push
pop
icebp
das
mov
or
in
cmp
stos
ucomiss
mov
adc
or
mov
xchg
xlat
mov
mov
scas
subps
xchg
mov
jne
loope
out
in
pop
movsb
pop
repz
push
in
pop
daa
pop
stos
call
cs
cmpsb
add
hlt
push
pxor
aad
jne
add
push
lds
pop
gs
pop
sub
jno
js
aad
cwtl
test
stos
in
dec
dec
bound
sti
xor
jmp
loope
xchg
mov
adc
dec
sti
or
xor
adc
sbb
xchg
add
stos
or
inc
xchg
mov
cmp
pop
das
push
xchg
or
mov
bound
pop
in
xchg
push
push
pop
xor
push
int3
or
out
mov
lds
das
cmp
ljmp
mov
andb
fiaddl
popa
adc
mov
mov
notb
std
ljmp
push
mov
xchg
cmp
or
sub
mov
out
inc
pushf
je
mov
cld
dec
jns
shrb
and
inc
pop
jo
cmp
inc
std
movl
and
pusha
sub
pushf
pushw
mov
repz
mov
call
jno
jl
sti
jnp
mov
in
lods
sub
pushf
xor
bound
aad
in
mov
jecxz
and
imul
lret
fsubrs
add
add
mov
test
es
insl
out
ljmp
jne
cmc
mov
mov
lods
ret
add
movsl
loop
push
xor
jns
jns
out
xchg
push
fwait
mov
je
mov
repnz
out
lcall
xor
inc
loopne
mov
sbb
add
cmp
fimull
sub
inc
push
fs
xor
lods
jmp
sub
sub
lea
outsb
inc
mov
adc
mov
jo
mov
push
xchg
ret
stc
cmp
adc
ljmp
add
and
and
jae
mov
and
repnz
or
fstpt
pushl
ja
push
pop
shlb
out
mov
aaa
add
lea
es
cmc
icebp
mov
stc
pop
sbb
cli
xchg
push
mov
or
lcall
cwtl
stos
lea
sub
repz
push
andl
stos
mov
lahf
xchg
lahf
stos
ss
insl
gs
pop
mov
sub
pop
xchg
cmp
scas
shlb
cmp
push
pop
lds
mov
icebp
mov
cmpsb
nop
shl
scas
aam
jmp
mov
or
and
mov
mov
mov
int
scas
sub
sbb
js
aad
cmc
dec
jl
js
cs
dec
and
push
mov
inc
cmpsb
mov
adc
dec
lock
gs
hlt
push
adc
cmp
xchg
sub
add
iret
js
cmp
cmpb
xchg
push
enter
out
loopne
out
data16
mov
mov
pop
loopne
flds
mov
jge
mov
or
pop
jae
sub
movsb
inc
cmp
sarb
jecxz
mov
out
or
cmpsb
push
sbb
add
lock
xor
arpl
xchg
ds
mov
mov
sub
mov
loope
lds
fcoms
xor
icebp
into
stos
ret
or
xchg
pop
ja,pt
jle
leave
int
notl
and
mov
mov
popa
stos
cmp
xor
adc
sbb
pop
pop
cmp
imul
mov
or
insb
xor
push
repz
das
loop
pop
test
test
inc
jbe
cmp
aaa
sbb
stos
arpl
cmp
fists
aaa
sar
sbb
pop
in
push
inc
sub
shl
inc
jmp
push
mov
xchg
lahf
ss
aaa
xchg
outsb
sub
popa
mov
xchg
enter
ljmp
xor
or
out
mov
jle
pop
xchg
mov
push
stos
xchg
cli
repnz
cmp
pop
movsb
jle
cmp
jno
push
popa
mov
es
inc
ret
stos
fsqrt
jl
xlat
das
mov
mov
test
mov
movsb
ror
adc
push
les
stos
jns
and
pop
das
repz
scas
aam
inc
inc
sbb
out
lds
sbbl
dec
mov
scas
xor
scas
mov
add
jne
push
xor
daa
add
dec
fcoml
mov
test
jl
sbb
shlb
andb
jne
bound
sub
int3
loop
shrb
pop
mov
loop
add
js
leave
sti
imul
and
pop
in
lret
cmp
or
cmp
jbe
aam
dec
and
adcl
sti
add
add
cmp
xchg
mov
pop
lret
in
testl
bound
faddl
jle
es
dec
xor
inc
sbb
pop
add
mov
pop
inc
cmp
fidivs
mov
stos
push
popf
lea
mov
xchg
lds
rclb
jne
pop
jne
loopne
adc
xchg
sbb
or
push
xchg
das
pop
xchg
pushf
inc
pusha
inc
mov
mov
pushf
ss
jmp
mov
leave
push
lds
int3
ljmp
and
cmp
hlt
add
dec
int3
lret
ja
je
sbb
in
lock
xchg
inc
pop
xchg
cld
push
jmp
hlt
adc
push
add
dec
jmp
xchg
pop
mov
or
xor
xor
mov
push
pop
pop
sub
clc
or
pushf
jmp
jb
cmc
pop
and
add
and
xor
leave
jge
test
xor
inc
xor
jne
cmp
lds
jb
dec
pushf
ja
in
and
mov
xor
in
mov
jne
sub
xchg
sti
retw
js
popa
dec
fldcw
sub
in
fmuls
outsb
cld
mov
jo
fbstp
sbb
pushf
addr16
pminub
fcmovnu
in
cmp
pusha
call
pop
sbb
adc
jnp
mov
mov
je
pop
mov
sahf
jmp
or
fstl
sbb
cli
mov
popl
push
xor
cmp
and
sar
fbld
and
aaa
shrb
xor
jae
jae
mov
cmpl
popl
imul
mov
and
push
in
sbb
adc
movsl
pop
and
ror
cld
lds
and
cmp
add
mov
pop
inc
in
adc
test
sub
sbb
jle
lcall
mov
push
and
ss
sbb
pop
add
sub
xor
lods
sub
ret
mov
fbld
orb
inc
add
pop
rorb
pop
mov
arpl
sbb
mov
adc
mov
sub
dec
ret
in
mov
inc
rcll
mov
in
xchg
lahf
insl
pop
mov
mov
shrb
and
and
push
xor
inc
mov
mov
fstpt
cmp
fcompl
out
and
mov
mov
push
repz
cmpsb
pop
insb
enter
mov
mov
and
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
jmp
inc
cmp
mov
jnp
sub
jmp
mov
lret
jge
aas
pop
jp
or
jo
ret
add
mov
sbbl
mov
sub
fcomi
mov
testl
dec
add
in
push
dec
xchg
xchg
movsl
inc
gs
ja
int
cmp
nop
mov
cltd
push
mov
and
jbe
dec
inc
jecxz
aaa
adc
mov
xchg
pop
lcall
outsl
xchg
mov
std
out
or
clc
popa
out
sub
lcall
icebp
stc
mov
loop
aam
lods
sub
ret
fwait
add
jg
loopne
les
pop
mov
movsl
cmp
cwtl
ss
mov
imulb
xchg
cmpsb
rsqrtps
popf
inc
inc
cmp
jno
push
sub
push
test
dec
jns
gs
push
dec
pop
push
push
in
ljmp
or
inc
jnp
xchg
mov
fs
loopne
push
add
ret
rcrl
cmovae
test
ljmp
xchg
mov
and
mov
jns
movsb
dec
mov
sbb
mov
lods
pop
ja
add
push
shrl
pusha
adc
scas
ret
mull
add
xorb
pop
dec
sub
mov
lods
pop
mov
dec
loopne
push
xchg
dec
push
fiadds
imul
push
dec
sbb
mov
mov
mov
imul
lods
lahf
lahf
repz
andb
mov
lods
lret
add
and
loope
mov
out
or
dec
insb
inc
xor
shll
nop
and
and
adc
add
mov
jl
mov
iret
jnp
sbb
mov
pop
ja
sub
dec
pop
stos
pop
mov
out
add
sbb
out
scas
lret
jle
gs
xchg
je
arpl
mov
cmp
iret
sub
push
add
xchg
fiadds
mov
lds
pushf
call
repz
popf
lcall
push
imul
nop
shlb
dec
sbb
mov
bound
sbb
xchg
mov
test
inc
cld
cltd
mov
pop
add
xlat
push
pop
sub
add
mov
xchg
pusha
cli
pop
je
inc
mov
mov
mov
add
stc
in
pop
sarb
test
and
add
add
jmp
push
xor
imul
icebp
aaa
cmp
ret
push
mov
mov
push
in
cwtl
inc
dec
pop
dec
adc
or
mov
sti
xlat
arpl
testb
popa
out
add
test
mov
repz
ljmp
push
sbb
inc
push
addr16
dec
mov
xchg
cltd
sbb
jbe
into
jns
in
bound
push
enter
out
xor
mov
push
cmpsl
insb
loope
ret
in
test
lcall
xor
stos
push
sahf
enter
lret
mov
pop
daa
or
lcall
aaa
repz
imul
add
pop
dec
lods
imul
push
and
cmc
scas
mov
mov
lahf
or
jge
in
mov
sbbl
dec
lahf
mov
pop
bound
xor
or
xchg
jnp
sbb
movsb
jne
jns
dec
arpl
jecxz
push
movsb
call
ss
ja
sbb
leave
cmp
lret
lds
xor
inc
sub
jno
cmp
loopne
sbb
test
repz
cmp
sub
movsb
pop
mov
dec
mov
pop
sbbb
cmp
addr16
divb
iret
cmc
sbb
push
push
mov
inc
imul
jl
movsl
pusha
imul
fcomip
sub
in
lea
hlt
mov
inc
adc
loop
sbb
scas
in
gs
fwait
and
add
decl
cmp
xor
add
adc
and
cmc
mov
mov
jmp
outsl
cmp
sub
js
lret
aaa
rcrb
mov
lcall
fwait
lret
lds
jmp
push
mov
cmp
roll
cwtl
lods
lret
negl
repz
or
imul
sbb
in
push
xchg
popa
sbb
addb
arpl
mov
jns
lea
mov
push
pop
sub
mov
fstps
test
int
dec
stos
lret
xor
inc
scas
outsl
jmp
xchg
mov
add
cmpsb
imul
xor
push
jb
pusha
pop
mov
pop
outsl
es
pushf
ss
lret
mov
std
cmp
int
fadds
adc
jns
cmp
pop
push
lods
lret
out
mov
sbb
out
cmp
xchg
or
adc
jb
jecxz
test
sub
ljmp
sbb
insb
pop
ror
stc
or
dec
mov
push
bound
fidivs
out
scas
pop
test
push
push
cmp
xor
pop
mov
imul
int3
mov
and
cmpsb
fld
xchg
iret
aaa
fnstsw
add
xchg
adc
out
fldl
mov
dec
inc
jo
addr16
ss
lods
mov
cmp
pop
add
push
cmp
aas
add
cmpsl
mov
push
idivl
cld
frstor
lret
xchg
mov
xor
add
xchg
inc
sbb
push
push
in
push
push
out
int3
jmp
vpsrlq
adc
push
cmp
shll
ficoms
movsb
inc
cs
or
loopne
push
lods
cmc
cmp
push
pop
cmp
cmpsl
test
popa
outsl
pop
in
loopne,pt
or
push
mov
in
cmp
mov
dec
mov
mov
outsl
es
fildl
push
pop
lcall
fwait
popf
cmpsl
arpl
inc
adc
pop
lods
pop
std
stos
pop
or
and
sbb
cli
das
xlat
jnp,pn
stos
inc
cmp
enter
sub
enter
cltd
mov
aas
xor
push
mov
xor
push
inc
icebp
mov
sahf
cld
xor
int3
or
lret
jnp
mov
addr16
xor
add
stos
cmpsl
out
xor
push
cltd
push
mov
xor
pop
jns
jp
pop
cmp
jmp
mov
xlat
daa
nop
xchg
fs
scas
push
test
movsb
jmp
push
out
stos
or
test
xchg
testl
fisttpl
fcomps
repz
and
movsb
outsb
stc
xor
jns
div
mov
vorps
inc
mov
popf
pushf
sbb
lea
lret
adc
push
sbb
stc
mov
cmp
stos
pop
stos
push
sub
loope
fcoms
sbb
rcrb
cmpsb
int3
pop
push
imul
mov
mov
iret
push
and
push
rorb
jno
adc
fdivs
push
movsb
into
es
lret
or
bnd
inc
push
rclb
dec
xor
enter
cmpsl
icebp
adc
fiaddl
dec
pop
sbb
xchg
jno
out
idiv
jle
lret
jmp
xchg
xchg
jno
imul
fcompl
mov
mov
sbb
imul
aam
faddl
push
js
bnd
jbe
enter
repz
fildll
adc
std
xor
pop
icebp
and
jecxz
sbbb
and
push
fiaddl
addb
shr
and
mov
dec
pop
push
loop
lea
push
sub
pop
sub
popf
inc
cmp
push
and
or
shll
xchg
pop
sub
add
std
push
repz
aad
lea
repnz
jmp
scas
fldcw
ficompl
mov
hlt
sti
data16
jp
adc
les
mov
das
add
push
sti
stos
loopne
fucomi
lahf
imull
fiadds
pushf
jmp
imul
xchg
dec
out
enter
dec
mov
nop
pop
fstps
cltd
xchg
mov
pop
cmpb
pop
xchg
andb
mov
cmp
psllw
fwait
iret
mov
test
jne
bswap
lock
mov
lods
lock
push
jecxz
xchg
sub
jb
xchg
push
pop
pop
mov
aaa
jecxz
aad
mov
xchg
cltd
stc
je
mov
xor
test
xlat
xchg
add
das
mov
adc
or
xor
and
inc
pop
imul
fisttps
sbb
ret
cmp
into
or
sub
out
jns
ds
arpl
stc
mov
and
push
jl
sbb
cmc
sbb
js
or
mov
mov
in
mov
mov
mov
dec
and
adc
add
and
mov
push
xchg
add
dec
aad
ds
cmp
xor
test
icebp
ljmp
mov
out
xlat
ficoml
cli
jo
add
xchg
xor
out
in
idivl
dec
pop
test
shrb
cmp
pop
lcall
pusha
cmp
dec
shr
pop
das
nop
lcall
sarb
clc
hlt
push
sbb
movsl
xor
cmp
and
add
or
lret
cltd
xor
or
fadd
sti
mov
and
out
cli
or
mov
int
pop
sbb
loopne
in
sbb
jecxz
push
or
rolb
fiadds
mov
sbb
cltd
push
and
mov
icebp
pop
mov
out
jge
pop
dec
push
sbb
push
mov
rclb
fisttpll
mov
mov
or
fdiv
incb
mov
shlb
xor
push
mov
cltd
pop
lcall
adc
addb
sbb
inc
call
lea
nop
std
es
jbe
mov
cmp
sbb
out
cltd
xchg
inc
add
popa
sbb
mov
add
dec
dec
or
shlb
in
and
add
cs
int
jg
mov
jmp
pushf
popf
daa
jo
fs
mov
pop
pop
dec
pushf
test
mov
das
push
mov
push
test
adc
cltd
inc
stos
pop
in
xchg
into
pop
test
xlat
in
push
sbb
jo
cmpsb
in
add
scas
out
push
pop
pop
add
mov
cld
call
sub
mov
jle
dec
mov
shll
xchg
add
wrmsr
sarl
or
xor
sbb
mov
leave
mov
clc
mov
les
rcl
inc
mov
enter
mov
cmpsb
jae
cmp
in
mov
pop
in
dec
push
je
push
lock
pop
addr16
dec
outsl
adc
ljmp
jg
les
adcb
scas
add
sbb
call
inc
out
daa
in
pop
xchg
cmp
pop
cld
add
data16
sbb
push
and
sub
adc
outsl
or
enter
mov
sub
xor
mov
mov
pushf
test
int
insb
fwait
or
mov
les
add
mov
xor
sbb
cmpl
sarb
xchg
std
shlb
ds
jge
push
rcrl
or
loope
pushl
xorl
mov
shrl
mov
pushf
movsl
xor
popf
movsl
jo
scas
mov
outsb
or
fsubr
xchg
pop
push
scas
fdivl
mov
mov
mov
pusha
pop
pop
je
pushf
roll
fcmovu
stos
pop
push
fwait
call
push
std
xchg
push
push
cmp
inc
mov
sti
aas
jbe
inc
shlb
pop
rorb
dec
ds
js
outsb
outsb
cmp
insl
pushl
mov
adc
rcll
jne
fs
add
pushf
hlt
inc
sub
fxch
pusha
add
int3
and
dec
or
adc
int3
jne
lods
int3
sbb
test
dec
cli
nop
shr
push
hlt
popf
jecxz
add
pop
mov
pop
int3
jo
icebp
push
cli
out
out
cs
jmp
push
mov
mov
loop
stos
sbb
jne
test
stos
push
sub
int
inc
xlat
bound
lods
lds
cmp
negb
sbb
pop
xchg
out
xor
sub
pop
mov
inc
lret
std
or
jnp
rol
push
push
lock
fidivs
sub
cmc
out
lret
je
mov
lret
cmp
popf
push
pop
outsb
inc
jae
inc
fistpll
mov
movsl
mov
push
fs
test
outsl
adc
out
lods
push
fildl
jnp
lcall
hlt
fildll
call
loope
ss
test
xchg
test
push
push
ret
je
stos
cmpsl
adc
popa
arpl
mov
xor
rol
cltd
push
fcmovnbe
test
push
lahf
xor
lea
lea
xor
add
outsb
or
push
jmp
les
lods
out
mov
incb
lret
mov
cld
sti
testb
roll
lock
int
dec
lret
scas
pusha
jnp
cmp
pop
xchg
icebp
fcomps
daa
fs
ja
in
mov
rclb
or
sub
jle
repnz
mov
cmp
adc
test
jge
and
cmpsb
nop
fcoms
adc
pop
add
daa
outsb
or
mov
fistps
stos
jmp
add
outsb
sub
pop
push
jg
mov
jbe
mov
and
pushf
or
or
jnp
cmp
sbb
shll
fcomps
pop
subl
les
add
mov
xchg
dec
cmpsl
int3
add
inc
jns
jb
ljmp
into
hlt
add
out
scas
dec
cmpsl
insb
inc
jmp
xchg
js
lods
cmpsb
xor
inc
movsb
push
push
call
rorb
cwtl
mov
in
mov
aaa
es
sub
pusha
push
lret
push
mov
scas
movsl
jbe
xlat
jg
jnp
movsl
xchg
jmp
push
icebp
mov
scas
int3
out
push
movb
pop
adc
pop
fucomi
pop
enter
sub
and
adc
loop
adc
cmpsl
jbe
jp
mov
mov
and
mov
and
push
cmp
ljmp
pop
mov
decl
pop
push
test
xchg
xor
adc
in
mov
jbe
iret
popl
jge
fdivrl
push
cmpl
mov
aam
cltd
addb
divb
adc
fnsave
hlt
addl
dec
shr
and
loop
stc
sbb
adc
in
fwait
aad
loopne
dec
push
push
xor
gs
xor
xor
cltd
sbb
lock
outsl
jnp
adc
adc
fldt
or
sub
arpl
fistps
mov
mov
lods
cld
pop
inc
mov
adc
inc
jmp
movsb
scas
mov
mov
mov
xchg
or
adc
fldcw
mov
fwait
cmc
dec
testl
std
stos
dec
xor
cwtl
pop
mov
sbb
iret
pop
push
popf
fcom
inc
in
push
mov
pop
fdivl
pop
sbb
mov
in
dec
jge
push
push
imul
jne
jb
icebp
dec
inc
jp
and
lods
cmp
or
lea
clc
outsl
mov
pusha
lods
dec
fcoml
xlat
shl
stos
xor
pop
and
sub
mov
test
sti
ds
inc
mov
mov
jmp
cmp
sbb
jle
mov
leave
adc
push
out
mov
fistpll
in
lcall
cmpsl
fldt
sbb
or
or
dec
sub
mov
cld
cmpsl
or
in
jmp
lds
idivl
xchg
mov
mov
fsubrl
js
stos
mov
xchg
add
insl
fwait
xchg
jge
insb
fidivs
cli
xchg
or
cmc
xchg
mov
das
or
mov
pop
jp
and
push
out
sub
ljmp
cmpsb
pop
cmpsl
push
sub
jno
sti
pop
jge
adc
gs
hlt
loope
mov
mov
inc
xor
mov
or
cwtl
jecxz
test
pop
stos
insl
jns
les
out
fcmovnbe
xchg
mov
xor
pop
arpl
ja
sbb
xor
push
pop
or
jnp
cmc
ds
cmp
lods
js
mov
jnp
mov
cwtl
gs
mov
ja
rorb
ss
mov
fisubl
das
push
xchg
add
cmp
jne
js
aas
icebp
mov
testl
hlt
mov
into
mov
push
adc
and
push
cmp
fcomp
cmpsl
aad
mov
mov
mov
sahf
ret
leave
out
scas
sahf
into
aad
jo
adc
insl
push
clc
les
and
pop
dec
fcompl
jno
out
pop
lds
mov
scas
jle
cmp
js
push
xchg
adc
pop
xor
sub
jo
jb
stos
push
xor
cmp
mov
aad
lds
or
xchg
pop
and
cmpsl
lds
cmp
pop
shrb
test
je
jle
sbb
test
pop
out
movsl
jle
bound
jmp
sbb
jge
in
shrl
dec
jle
in
lock
mov
ja
jp
fst
pop
mov
jle
jl
xchg
dec
ret
ljmp
ds
into
rcll
jl
inc
lods
pop
mov
shrb
dec
sahf
repz
push
outsl
jge
mov
cwtl
ror
les
lea
mov
fisttpl
mov
rcrl
pop
sahf
xchg
test
and
test
and
pop
es
adc
mov
in
ss
mov
repz
js
push
ret
jno
sbb
call
xchg
push
out
cmp
lcall
or
inc
movsl
loope
xor
jmp
pop
mov
cmpsl
loopne
xor
xlat
stos
test
je
pminub
fwait
in
mov
fisttpll
popf
movsb
xchg
cmp
loopne
mov
fwait
jo
or
popa
cmc
dec
xchg
cmpsb
lods
add
sub
mov
scas
lcall
pop
andb
insl
pop
dec
int
and
push
out
stos
adc
aaa
xchg
push
imul
jmp
sbb
fdivrs
and
adc
cmp
es
addb
pop
adc
or
repnz
test
faddl
push
test
nop
adc
jo
aaa
jno
enter
mov
lds
or
xor
jp
lock
test
and
fisttpl
xchg
mov
popa
inc
or
in
aaa
in
adc
xchg
xor
pop
in
xchg
add
and
cwtl
mov
loop
add
das
test
xor
dec
sbb
pop
add
dec
lock
inc
mov
lret
lods
jle
xor
jge
xchg
push
out
int3
adc
pop
nopl
or
and
outsl
test
ret
inc
outsl
inc
mov
jl
cwtl
inc
add
aam
test
lahf
pop
push
xchg
sbb
mov
inc
cld
mov
xchg
sar
mov
inc
push
call
mov
mov
into
jae
shlb
xor
add
fs
jg
mov
mov
cli
fnstsw
sub
in
mov
dec
mov
fnstsw
repnz
mov
push
mov
fs
das
es
cmpsb
mov
das
call
insl
lods
sahf
aas
push
push
pusha
add
dec
out
imul
jo
inc
and
pop
jae
or
xchg
mov
add
mov
into
mov
pop
jae
push
ret
bndldx
add
pushf
hlt
xorl
test
cld
mov
dec
ret
lcall
lock
rorb
push
ja
in
mov
mov
dec
xchg
fs
aad
leave
faddp
lods
jae
int
repnz
push
stc
repnz
cmpsb
mov
movsb
pop
movb
sub
scas
cmp
bound
mov
imul
add
jg
inc
gs
insb
lcall
and
out
outsl
mov
ja
cmp
mov
aad
or
ds
dec
mov
fcompp
mov
iret
sub
inc
aas
jle
mov
repnz
sbb
cmp
lret
or
mov
cmp
add
xchg
xor
xorb
cld
mov
movsb
mov
mov
inc
lea
inc
sub
addr16
lgs
cmp
sub
xchg
test
bound
test
cmp
std
pop
dec
cmc
cli
or
jp
aam
cld
jmp
mov
repnz
shlb
lret
dec
inc
pusha
push
sbb
pop
divb
push
mov
ficoml
data16
push
dec
mov
pop
lahf
or
fldl
dec
mov
roll
add
push
lods
xchg
int3
sub
arpl
inc
add
sub
jns
adc
jo
cmp
inc
xchg
js
stos
push
icebp
xchg
popf
and
mov
dec
iret
add
sub
cltd
fimull
std
cmp
xor
or
andb
sub
push
pop
or
andb
js
enter
int3
push
call
jns
scas
add
xor
xchg
fcmovne
sahf
jecxz
popa
sub
add
adc
pop
shll
test
sahf
cli
aad
sub
lods
jg
dec
jl
in
mov
mov
xorb
jle
fstps
mov
insl
push
lods
inc
cmpsb
mov
imul
jmp
stos
shl
repnz
das
cmp
mov
add
mov
xchg
dec
jecxz
fwait
xor
cs
pop
push
pop
mov
sbb
sti
lods
cmc
xor
sti
jnp
mov
adc
jno
cmpb
inc
sbb
push
dec
and
decb
getsec
pop
fdivrs
or
insl
cmp
push
cmp
adc
xlat
mov
push
out
ret
rol
sbb
lret
ret
in
mov
repnz
cli
mov
xchg
add
ret
mov
lock
fisttps
fsubrs
add
xchg
int3
pop
pop
dec
xor
mov
adc
jnp
sahf
loope
push
ja
sub
cwtl
sar
jnp
ds
test
jno
adc
movsb
sbb
fs
mov
test
push
add
dec
jge
lcall
pop
push
rcl
hlt
std
rcr
push
aam
dec
dec
out
pop
mov
cmp
push
les
rcl
in
xchg
xchg
jne
mov
into
sub
dec
pop
arpl
gs
mov
rclb
call
mov
mov
lock
push
std
jecxz
cmpsb
jge
addr16
mov
rcll
addr16
rclb
jo
pop
mov
mov
inc
idivb
out
inc
mov
int
lea
cmc
mov
push
mov
mov
cmp
lcall
sbb
sbb
push
idivl
cld
mov
sub
imul
push
xor
xchg
test
in
jo
in
mov
clc
movsb
mov
fs
or
xor
fidivs
popf
sub
sahf
add
xchg
movsl
mov
pop
and
mov
cli
push
cmp
lahf
xchg
negb
aas
test
gs
pop
sub
rcrb
stos
mov
sahf
xor
icebp
adc
fsubrl
fcmovnu
leave
rcll
sub
outsb
mov
cmp
pusha
xchg
mov
jl
cld
enter
add
int
xchg
in
repz
sti
imul
ds
mov
sub
sahf
stos
mov
mov
daa
cmp
push
cwtl
out
pop
imul
lods
fiadds
sbb
movsb
push
scas
out
mov
xchg
pop
pusha
mov
pop
inc
movsl
add
pop
pop
sahf
adc
jge
test
out
test
mov
push
incl
and
mov
faddl
into
jne
mov
repnz
rcr
imul
scas
cmpb
jno
addl
pushf
mov
stos
jno
lds
cwtl
xchg
add
dec
sub
xchg
pop
dec
or
inc
bound
mov
adc
jns
pop
add
sub
popf
dec
rorb
rcr
lods
jnp
adcb
lcall
idiv
out
mov
jae
sub
lods
dec
stos
fmulp
divb
add
xchg
ss
xchg
cld
in
and
popa
push
insb
cld
push
xchg
inc
xlat
shrb
bound
fcoms
push
insl
xchg
out
mov
pop
pop
popa
add
xor
stc
icebp
xchg
jnp
or
jbe
or
cmp
mov
hlt
sbb
in
test
daa
stc
push
dec
sysret
imul
xor
adc
pop
ljmp
mov
dec
les
inc
movb
cmp
loopne
xchg
push
ja
xchg
cmc
les
cmova
mov
pushf
dec
fdecstp
jl
outsl
xchg
imul
cld
mov
lret
jge
jb
insl
addr16
lahf
jmp
inc
add
ficoml
mov
repnz
scas
mov
dec
cmc
out
push
jp
movsl
sub
push
ss
push
push
and
gs
add
and
adc
repz
or
testb
loope
cwtl
pop
out
shrb
and
mov
cmp
or
xchg
or
add
and
and
mov
adc
xchg
xor
mov
faddl
fmull
insl
out
gs
popf
shlb
inc
jo,pt
cmp
and
ret
jne
push
insb
xchg
mov
cmp
xor
test
ficoml
scas
popa
adc
fs
cld
xchg
andb
loop
loope
xchg
or
dec
and
mov
dec
cmpsl
jno
jno
adc
aad
mov
push
insb
adc
mov
mov
pop
loop
cmp
push
sub
cmp
aad
xchg
fs
cltd
out
fcomps
ror
movsl
pop
ja
test
ja
popa
rcll
inc
sbb
sub
imul
call
fistps
popf
loope
mov
jle
sarb
cmp
jl
repz
inc
cltd
arpl
adc
fsts
leave
pushf
sti
sahf
dec
jbe
xchg
jb
and
inc
cmp
fcoml
test
lahf
arpl
and
sbb
dec
out
mov
imull
pop
inc
outsb
dec
jmp
push
mov
mov
sub
clc
push
lds
inc
sahf
fistl
inc
idivl
sbb
mov
stc
mov
jp
addr16
mov
push
jg
jle
imul
jmp
mov
stos
or
outsb
mov
xor
in
dec
and
or
movsl
cmpsb
rclb
ficompl
andb
incb
pusha
test
xchg
das
movsb
xchg
push
and
cs
xor
sub
out
data16
mov
sub
pop
mov
jl
pop
leave
xchg
push
out
mov
std
xchg
pop
dec
push
lock
movsb
xchg
mov
xchg
cmp
mov
jp
xchg
xchg
movsb
and
mov
orl
mov
movsl
cli
mov
pusha
mov
sti
test
into
ja
pop
inc
mov
adc
mov
imul
aaa
jbe
stc
lret
addr16
mov
call
test
movsb
or
sbb
push
and
mov
divl
or
popa
and
jb
mov
add
add
mov
nop
xchg
pop
cmpl
jae
test
aam
mov
mov
jno
jle
outsb
ss
movsb
mov
lods
imul
push
stos
sbb
jbe
pop
dec
or
fnstcw
xlat
scas
add
xchg
sarl
lods
pop
cltd
inc
pop
mov
into
ret
adc
shll
fisubrl
pop
and
mov
pop
mov
into
iret
pop
testl
adc
popa
push
sub
jae
xchg
cltd
leave
idivb
aaa
dec
pop
mov
pop
pop
sub
and
int3
stos
xor
push
jns
cmpsb
mov
jne
rorb
jnp
mov
sub
and
popf
mov
dec
mov
add
jecxz
mov
xor
sbb
imul
or
test
or
addr16
sbb
mov
push
popf
sub
and
sbb
mov
inc
lret
mov
pop
xor
iret
idiv
and
jae
xlat
outsb
arpl
movsb
pop
push
jbe
or
xchg
mov
cmpsb
and
stos
rcrl
mov
addl
divl
fcmovne
stos
sbb
jbe
and
loope
das
jmp
inc
rcrb
jb
add
jmp
pop
cmp
jo
pusha
jle
pop
add
cmp
mov
or
mov
idivl
ret
fsubl
and
xchg
cli
popf
xchg
stc
xchg
and
shl
push
loopne
fbld
inc
adc
sbb
arpl
clc
js
push
jmp
sbb
in
scas
les
fstl
dec
int
jns
jns
mov
add
fsubrl
cld
scas
shrb
pusha
data16
add
sbb
addr16
lds
fistpl
stos
in
push
xchg
and
je
sbb
out
out
inc
jecxz
xor
js
cmpsb
lcall
movsl
cmp
push
icebp
stos
adc
dec
dec
out
adc
sbb
neg
cld
jnp
xor
mov
jp
das
pop
out
push
xor
dec
aam
mov
jecxz
fwait
movsl
xchg
lock
mov
jae
popa
push
sub
inc
mov
cltd
stc
shl
insl
ds
xchg
inc
hlt
xchg
iret
lret
and
jne
xchg
xor
sub
sub
test
imul
sub
jge
and
adc
popa
jno
lret
fiadds
test
fsubs
lds
je
jbe
pop
call
test
pop
cmpsl
xchg
jnp
xchg
outsb
jl
je
xchg
jb
add
sti
dec
add
ja
mov
cmp
insl
aam
push
push
clc
xor
add
or
and
push
add
jmp
subb
inc
cmp
jb
call
adc
cli
jp
stc
mov
nop
sbb
add
gs
mov
movsl
insb
rcr
dec
movaps
test
call
sub
xor
int3
jns
popa
xchg
subl
lret
andl
jmp
pusha
jae
mov
jnp
scas
dec
psrld
mov
jno
nop
daa
and
pushl
pushl
pushl
pushl
mov
call
mov
jmp
xchg
roll
push
mov
negb
mov
jno
jp
push
into
testb
mov
idivb
push
and
ja
ss
fsubl
inc
jo
jb
or
mov
dec
or
jle
add
cmpsb
dec
sub
jecxz
push
sub
int3
iret
movaps
idivl
imul
sbb
outsb
push
pop
sbb
sub
lock
arpl
rclb
inc
orb
in
mov
jne
into
test
pop
or
clc
jg
dec
je
insl
fstps
add
jle
testl
das
pop
jnp
xor
adc
jns
iret
xor
mov
test
push
pop
test
stos
test
fbld
or
push
mov
xchg
hlt
cmc
sub
test
jle
ja
dec
or
sbb
lds
ja
push
stos
pushf
jl
and
outsb
jb
loop
pushf
ds
aad
mov
stos
xchg
xchg
test
in
jbe
dec
inc
shrb
adc
dec
shrl
jecxz
stos
push
shlw
test
mov
outsb
sub
push
je
or
dec
addl
test
mov
lds
dec
adc
iret
mov
call
scas
aaa
add
or
mov
lret
or
sbb
push
loop
dec
jno
pop
mov
add
popf
xor
push
xchg
jg
mov
dec
mov
ja
cli
aaa
popf
cmp
addb
enter
add
jnp
push
pusha
inc
or
push
cwtl
mov
and
jne
pop
mov
pop
cld
jnp
fldcw
in
xchg
ret
mov
ds
add
stos
xor
cmpsl
das
out
imul
dec
aam
cmc
jecxz
stc
stos
fsubs
dec
mov
bound
xchg
lret
mov
add
xlat
sbb
sub
and
push
mov
cmp
ss
test
test
stos
sbb
test
mov
adcb
xchg
ss
cwtl
fcmovbe
sub
jg
pushf
test
push
sahf
xor
xor
and
clc
xor
and
xlat
js
outsl
jge
lret
in
inc
ret
xchg
aas
std
sbb
pushf
add
out
into
cmc
pop
rclb
adc
in
pop
rorl
pop
rcrl
pop
or
divl
test
dec
xlat
outsb
arpl
fs
idivb
mov
mov
push
leave
mov
jns
push
dec
fsts
les
sti
movsl
jns
repz
add
pushf
dec
and
push
stc
xor
pop
or
addr16
push
mov
jns
jo
push
push
loop
inc
xchg
mov
jnp
inc
push
stc
inc
inc
insb
mov
pop
inc
mov
lods
xchg
cmovno
inc
pop
push
jae
iret
sbb
hlt
lods
sahf
adc
daa
sti
dec
gs
inc
aad
gs
pop
aad
mov
push
mov
sbb
mov
fmuls
roll
mov
sbb
xchg
hlt
insl
out
jmp
pop
shlb
aas
jae
and
into
sar
pop
xor
add
push
rorb
or
xor
fsubr
adcl
and
outsl
and
cmp
loop
insl
add
fidivl
outsl
and
pusha
jp
push
out
dec
lahf
xor
and
xor
adc
push
lcall
push
xchg
dec
ss
push
jo
ret
jo
testl
fistpl
imul
sbb
test
dec
jae
dec
js
inc
pop
imul
mov
ja
mov
call
dec
add
das
lods
or
xchg
jge
std
adc
aas
rolb
popf
adc
sub
sbb
xchg
popa
mov
idivb
xchg
and
in
adc
in
out
jae
pop
iret
mov
dec
and
fcompl
movnti
nop
or
pop
or
push
iret
pop
pop
ss
insb
stos
pop
sbb
das
lret
test
pusha
pop
or
rcr
std
jne
pop
rcrb
jg
jmp
lods
mov
out
lahf
fiaddl
enter
or
lret
js
mov
or
sub
in
pushf
fldt
dec
aad
test
dec
xor
test
aaa
pushf
negl
lods
outsb
xchg
loope
jecxz
adc
pop
mov
loop
or
jne
pop
adc
xor
sbbl
iret
push
sbb
test
loopne,pn
fidivs
mov
movsl
ljmp
xchg
xchg
jp
mov
fdivs
pop
sti
mov
cmpsl
ljmp
shr
hlt
sub
add
add
dec
leave
xor
xor
or
cld
mov
cwtl
jne
cltd
mov
pop
add
fucomip
cli
xchg
orb
fsts
mov
pop
ss
inc
mov
jg
jbe
cmp
xchg
sahf
data16
jbe
shrl
pop
add
fdivrs
fs
sahf
push
cld
and
addr16
and
arpl
lods
add
inc
or
pop
fstps
xchg
insl
les
cwtl
xor
aam
mov
or
dec
fucomp
enter
faddl
imul
pop
leave
ret
push
mov
sub
movl
movzwl
and
mov
lea
adcl
mov
mov
adc
push
add
mov
orl
mov
movl
cmpl
je
cmpl
jge
jmp
push
pushl
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
lea
mov
mov
orl
mov
mov
addl
xor
add
subl
mov
movzwl
sbb
mov
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
xor
xor
dec
mov
jmp
mov
mov
add
neg
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
push
push
pushl
call
jmp
mov
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
andl
xor
or
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
xor
mov
add
cmp
je
movl
mov
movl
jmp
mov
mov
cmp
movl
jne
movl
push
movl
jmp
mov
mov
mov
cmp
jne
mov
adcl
xor
mov
sub
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
addl
push
call
sbbl
test
je
xor
movl
jmp
movl
xor
mov
mov
mov
andl
mov
inc
mov
cmpl
jge
jmp
pushl
push
call
cmpl
jb
mov
andl
xor
or
inc
mov
cmpl
jl
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
lea
xor
mov
movzbl
add
lea
mov
movzwl
add
mov
neg
mov
andl
xor
add
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
push
push
push
xorl
mov
andl
xor
or
inc
mov
cmpl
jg
jmp
push
push
pushl
push
push
pushl
call
cmpl
jb
xor
mov
sbbl
add
mov
mov
cmp
jne
sbbl
mov
mov
or
mov
mov
xorl
mov
xor
xor
add
mov
sub
mov
mov
add
xor
andl
xor
or
inc
mov
cmpl
jg
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sub
mov
mov
and
mov
mov
xor
mov
sbb
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
push
push
push
push
pushl
call
cmpl
jb
mov
movl
mov
xor
or
sub
mov
mov
and
movl
sub
mov
mov
mov
mov
xor
mov
xor
xor
addl
add
sbb
mov
xor
xor
adcl
add
movl
lea
movl
cmp
movl
ja
xorl
mov
sbbl
xor
andl
lea
push
mov
xorl
xor
sbbl
lea
push
xor
add
or
mov
pushl
call
andl
mov
inc
mov
cmpl
jb
jmp
push
push
call
cmpl
jb
mov
or
xor
lea
not
mov
movl
mov
xor
sbbl
xor
sbbl
add
mov
xor
movl
lea
cmp
movl
jbe
mov
mov
mov
or
mov
or
mov
movl
cmpl
je
cmpl
jg
jmp
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
movl
mov
andl
sub
sbbl
xor
movl
mov
mov
mov
mov
cmp
movl
jne
lea
mov
andl
lea
xorl
mov
mov
test
je
movzwl
sub
mov
and
mov
sbb
mov
mov
xor
add
sub
imul
mov
xor
mov
mov
mov
mov
cltd
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
addl
inc
ret
push
mov
push
movl
dec
mov
sbbl
movsbl
xor
xor
or
mov
mov
mov
adc
sub
movzwl
sbb
mov
orl
xor
cmp
movl
jne
adc
mov
push
sub
mov
andl
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
xor
mov
xor
mov
sub
movl
add
push
mov
andl
xor
add
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
call
jmp
mov
mov
xor
sbb
xor
mov
add
movl
add
movl
imul
mov
mov
movl
cmp
je
not
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
sub
movl
sub
push
adcl
movl
mov
push
movzwl
or
mov
mov
xor
push
movzwl
add
mov
mov
add
andl
mov
mov
sbb
mov
test
movl
je
xor
mov
mov
mov
and
mov
xor
adc
add
and
mov
xor
mov
subl
xor
orl
add
sub
mov
mov
and
mov
xor
add
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
pushl
call
cmpl
jb
mov
mov
xor
add
adc
mov
sub
lea
addl
xor
adcl
xor
cmp
je
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jb
mov
addl
xor
add
movl
cmp
movl
jne
sbbl
pushl
subl
call
mov
mov
xorl
mov
sbbl
xor
adcl
add
movl
cmp
je
sbbl
pushl
orl
pushl
andl
call
mov
mov
mov
sub
sub
mov
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
mov
movl
xor
addl
add
movl
cmp
movl
je
mov
or
mov
sub
mov
and
mov
adc
mov
add
movzwl
sbb
mov
andl
mov
mov
andl
add
adcl
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xorl
add
mov
movl
jmp
sbbl
mov
andl
mov
inc
mov
cmpl
jl
jmp
push
call
cmpl
jb
mov
addl
add
movzbl
or
mov
mov
mov
xorl
mov
movl
xor
addl
add
movl
cmp
je
jmp
mov
movl
mov
orl
xor
adcl
add
movl
cmp
mov
je
mov
xor
movl
add
movl
cmp
je
adcl
lea
subl
push
sbbl
pushl
subl
pushl
adcl
call
subl
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
add
add
add
mov
testb
add
add
add
xor
add
push
add
push
xor
add
add
add
inc
push
pop
lds
dec
mov
addr16
call
inc
cmp
ja
inc
popa
je
pop
inc
outsb
arpl
gs
popa
je
inc
imul
in
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
mov
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
sbb
sarb
xchg
jg
xchg
jo
sarb
mov
push
xor
mov
std
xchg
jp
pcmpgtd
ss
inc
mov
inc
ss
es
hlt
insl
jnp
pop
inc
mov
pop
pop
divl
mov
mov
ss
pop
packsswb
movsl
lds
jp
push
mov
xchg
jno
jge
jp
mov
mov
ss
pop
push
movsl
adc
jp
mov
push
pop
cmp
xchg
push
jge
jp
and
mov
mov
icebp
out
mov
xchg
int
out
divl
jb
xor
sub
jae
mov
xchg
or
jp
mov
sub
mov
mov
sub
mov
mov
sub
mov
mov
jmp
mov
lret
fildl
shl
mov
icebp
out
adc
and
sub
sub
xor
mov
mov
jp
jp
sub
cmc
sub
mov
mov
sub
jl
jp
xor
mov
xchg
add
jp
jmp
jnp
shrl
jbe
jp
sub
lcall
lods
mov
mov
divl
mov
mov
jg
cmc
xor
rcll
jnp
jnp
dec
mov
mov
frstor
jp
cmc
icebp
push
jnp
jnp
cmp
icebp
dec
jnp
jnp
cmp
icebp
cmp
jnp
xor
jmp
cmc
repnz
jp
xor
jmp
cmc
repnz
jp
xor
add
jmp
cmc
repnz
jp
test
jp
sub
inc
mov
stc
jg
jp
xor
cli
out
jge
jp
jb
xor
cli
out
jge
jp
jp
cmp
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
mov
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
xor
mov
sub
sub
mov
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
