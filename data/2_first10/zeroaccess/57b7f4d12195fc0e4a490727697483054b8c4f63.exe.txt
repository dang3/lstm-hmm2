push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
mov
orl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
incl
add
movzwl
adc
mov
mov
mov
sub
movb
and
lea
sbb
mov
xor
xor
adc
mov
mov
mov
sub
mov
xor
xorl
sub
mov
adcl
movl
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
sub
push
and
movl
mov
push
mov
or
xor
andl
mov
subl
push
andl
add
jmp
mov
mov
inc
movl
cmp
movl
jb
mov
xor
add
movl
jmp
adc
mov
sbb
mov
subl
xor
xor
mov
andl
add
addl
movzwl
sbbl
mov
subl
mov
xorl
movzwl
orl
xor
sbbl
add
mov
mov
mov
movzbl
inc
mov
movl
cmp
movl
jne
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
pushl
call
mov
dec
mov
jmp
xorl
mov
addl
xor
orl
add
mov
sbbl
mov
xor
add
mov
movl
movl
movl
mov
mov
movl
jmp
movzbl
sbb
mov
xor
xor
or
mov
mov
xor
movl
xor
addl
sub
subl
sub
xor
or
sub
xor
mov
mov
mov
lea
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
and
mov
or
mov
sbbl
lea
inc
mov
mov
mov
subl
lea
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xorl
lea
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
or
mov
andl
mov
lea
mov
xor
mov
xor
add
jne
movl
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
mov
orl
xor
addl
xor
sub
sub
xor
movl
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
jmp
cmpsl
js
movsb
mov
je
stos
xchg
mov
popf
bound
bound
pop
bound
xor
cmp
jns
jne
inc
jl
jb
sub
sar
push
jae
inc
mov
scas
inc
push
cmp
loop
inc
push
jg
insb
mov
mov
jbe
loop
jg
icebp
and
or
xchg
xor
fsub
jno
sbb
out
loop
add
adc
jae
movsl
or
mov
cmc
push
xor
aam
in
loop
mov
xchg
mov
jmp
and
adc
xor
sub
dec
sti
scas
xchg
xor
xchg
dec
clc
pop
dec
push
adc
jmp
sbb
fcompl
inc
loope
inc
mov
pop
sbb
popa
or
mov
fmul
enter
stos
aad
repz
aad
add
mov
rol
pop
mov
das
sbb
mov
loopne
pop
jl
popa
inc
mov
sti
pop
xor
je
or
sti
adc
mov
xor
rcrb
mov
or
daa
mov
or
add
ja
repnz
je
arpl
mov
jge
mov
push
mov
pop
xor
push
adc
add
mov
push
cmc
fimull
aaa
cmp
lcall
subb
sub
sub
popa
outsb
sbb
xchg
shll
sbb
incb
int3
inc
mov
das
or
dec
mov
or
sarl
rorb
push
sbb
pop
cmp
jge
sub
adc
imulb
sbb
xchg
movsb
xchg
adc
sti
jae
roll
sbb
data16
inc
mov
bts
sub
or
jne
pusha
and
pop
test
enter
sbb
out
adc
cmp
stos
lahf
je
jl
xchg
out
stc
sbbb
icebp
add
ja
jnp
sub
lret
cmp
dec
fs
fiaddl
repnz
sbb
jl
jl
inc
imul
dec
daa
mov
ret
fdivrs
pusha
jle
ss
mov
sub
jl
pop
nop
cmp
dec
mov
mov
shl
cmc
xor
xchg
xchg
adc
jl
repz
pop
orb
iret
enterw
mov
mov
sar
or
push
popa
mov
mov
je
mov
xchg
gs
sbb
push
adc
fwait
jae
jno
in
loopne
je
sti
je
shl
shlb
lods
mov
jmp
les
and
nop
mov
out
sbb
cld
push
or
mov
fwait
stos
adc
in
out
arpl
jecxz
lods
dec
mov
mov
mov
adc
mov
cmpsl
xchg
js
mov
aas
add
mov
jo
or
jg
fldl
push
pop
leave
inc
fcompl
loop
cmpsl
lea
xchg
sbb
out
sub
mov
jne
out
pop
mov
xor
push
stc
push
and
sbb
push
decb
std
sbb
sti
aad
cmp
xor
sahf
mov
fsubs
xchg
mov
xchg
gs
push
jecxz
std
mov
or
dec
pop
inc
and
mov
jae
cmp
pop
sbb
push
aaa
ficomps
and
jbe
pop
or
inc
dec
sbb
push
inc
pop
jge
cmp
dec
and
cmp
xchg
xchg
add
iret
or
sbb
hlt
adc
ret
or
or
lock
xor
loopne
incb
push
pushf
ret
mov
cld
or
imul
stc
pop
outsb
and
pop
dec
mov
popf
mov
mov
mov
mov
js
add
loop
insb
add
dec
pop
lods
jo
aam
jne
jmp
pop
iret
pop
inc
sahf
testb
fidivrl
ss
negb
mov
ljmp
inc
and
call
cmpl
push
jb
in
dec
push
leave
pop
jp
lret
xchg
into
jge
jo
test
cltd
mov
mov
clc
sub
rcr
jo
lods
or
fdivrl
mov
in
pop
insl
aas
mov
cmp
movsl
jno
loope
jle,pt
outsb
or
pop
clc
es
xchg
mov
stos
or
pop
sahf
movsb
jns
and
cmc
int
cmp
sbb
push
inc
mov
add
sbb
dec
jb
mov
pop
add
das
addl
xchg
daa
arpl
push
clc
flds
adc
mov
xchg
sbb
cmp
inc
cld
jl
lcall
push
jecxz
or
fs
push
sbb
mov
xchg
rorl
dec
jne
ss
or
push
xchg
scas
pop
les
mov
or
sub
aad
ljmp
xchg
or
addr16
cld
cmp
sbb
or
jo
imul
sti
cmp
mov
std
xorl
movsl
in
sub
imul
test
int
fwait
and
pop
mov
mov
push
sbb
push
inc
mov
popf
or
mov
lcall
mov
sub
cmp
movsb
push
fcomip
and
inc
sub
out
xchg
push
idivl
cmovl
daa
adc
dec
int
xor
movsl
jmp
cmc
cmpb
daa
mov
jle
dec
call
stc
inc
xor
enter
ret
sbb
dec
cmc
leave
pop
cmp
adc
ret
jo
cmp
and
and
mov
xchg
sahf
mov
jle
and
pop
push
bound
lea
cwtl
and
lahf
mulb
fsubr
and
notl
clc
pop
push
inc
ficompl
mov
lock
shlb
call
push
mov
int
call
mov
dec
inc
or
jo
inc
dec
pop
data16
shll
insb
rol
sbb
addr16
movsb
mov
popf
fs
adc
repz
adc
hlt
lret
push
cmp
jmp
in
test
insb
push
dec
jbe
mov
sub
push
and
shll
dec
orb
inc
cltd
sbb
pushf
push
movb
push
add
adc
sub
dec
inc
test
xor
out
xchg
mov
jno
std
push
fsubrp
inc
or
imul
lds
fwait
xchg
idivl
mov
scas
jle
shrb
mov
jns
das
xor
adc
jle
mov
mov
sbb
cmp
inc
jg
dec
or
cmp
ja,pn
scas
dec
es
mov
shlb
or
insb
aaa
mov
ja
mov
jno
movsb
sub
in
rclb
adc
cmc
or
push
push
xchg
fcomps
aam
repnz
jo
enter
push
or
xlat
inc
jnp
jl
hlt
out
outsb
roll
inc
cwtl
loopne
xchg
sub
lret
jo
cmp
inc
add
pop
jg
sub
push
sarb
add
dec
testl
shll
and
enter
popw
ja
sbb
cs
scas
ret
es
dec
inc
mov
cmp
sahf
ljmp
stos
sarl
sub
cmp
out
sbb
xchg
ret
lods
popf
sub
les
int3
push
xor
out
leave
jmp
ret
jno
sub
lods
or
cmpsl
pop
xchg
loopne
in
mov
lock
movsl
nop
cmp
cmp
leave
sub
ds
stos
mov
jmp
sub
addr16
adc
lcall
clc
ss
mov
mov
out
jl
aas
and
shrl
nop
and
stc
mov
add
aam
mov
mov
rcr
jmp
pop
mov
jne
xchg
repz
adcl
sbb
arpl
inc
pop
dec
xchg
xlat
pushf
pop
test
add
adc
lods
or
fwait
int3
or
push
bnd
jmp
jns
ss
sti
and
out
sub
movsb
cmc
std
test
sbb
jae
aaa
cmpsl
iret
fistps
xchg
dec
push
hlt
or
xchg
cltd
lods
outsl
in
lcall
dec
xchg
xchg
inc
pop
sub
cmp
inc
cltd
js
pop
inc
ss
cmp
mov
rcl
nop
in
pop
jnp
sub
sbb
flds
fst
lahf
sarb
mov
xchg
add
xlat
dec
ss
adc
repz
rcl
lret
int
cmp
cmpsl
fdivrl
xchg
adc
pop
in
add
push
cmp
jb
jmp
je
pop
pop
or
mov
inc
inc
add
das
insl
dec
xlat
jl
aad
pop
popf
mov
mov
fcomp
mov
fcoms
icebp
pop
xor
sbb
or
push
testl
mov
sbb
inc
jns
xorb
adcb
or
mov
shlb
mov
cmp
dec
push
aad
jmp
fsubrs
and
sbb
mov
out
shll
or
xchg
pusha
mull
xor
or
push
loop
das
fwait
cmp
cltd
jne
push
repnz
mov
pop
loopne
ljmp
cmp
rep
in
and
movsb
lahf
jmp
pop
or
dec
test
mov
adc
sbb
retw
ss
and
dec
pop
rcrl
jmp
pop
cmpsl
scas
and
lahf
stc
cmp
aam
insb
test
lret
push
mov
sbb
mov
lods
push
daa
outsl
jl
stc
into
mov
sub
lea
push
push
in
xchg
into
sbb
popf
adc
push
jns
fiaddl
out
daa
in
lds
clc
in
icebp
cmp
jmp
jle
aas
xchg
mov
ljmp
scas
xor
dec
push
push
ss
xor
fstpl
data16
fs
mov
mov
mov
popa
cmp
shlb
mov
cmp
push
push
and
mov
and
fwait
aas
xchg
add
out
xchg
aaa
adc
sbbl
add
and
cmp
push
shll
mov
sub
sub
into
push
pop
xor
inc
jecxz
mov
or
aam
xor
hlt
mov
loop
pop
jl
das
stos
int3
cmp
pop
xor
pop
sbb
dec
incb
and
sub
sub
cs
hlt
adc
cwtl
icebp
sub
sbb
sub
push
sbb
scas
add
or
inc
lea
mov
mov
int3
mov
fldt
push
jl
lock
jne
cmpsb
js
test
movsb
mov
mov
in
sbb
inc
sub
and
mov
fldln2
mov
add
mov
add
jmp
jp
lret
lahf
test
sub
inc
into
pop
fwait
pop
shlb
push
sub
out
sub
or
bound
clc
insb
xor
mov
add
sub
mulb
nop
lret
subb
test
or
mov
addr16
adcb
sbb
add
in
sbb
dec
push
mov
sub
sbb
mov
xchg
jo
fstps
push
roll
loope
cmpsl
jno
mov
add
lahf
mov
lret
sbb
adc
sbb
sub
cwtl
push
mov
xchg
mov
sbb
lods
sahf
fmuls
or
fnsave
mov
sub
rcr
xchg
into
pushf
mov
adcl
out
sub
or
out
fmuls
sub
jl
mov
and
pop
enter
mov
ret
mov
xchg
mov
lahf
movsb
cld
inc
imul
addl
mov
push
idiv
gs
or
xlat
aas
mov
mov
cs
or
lahf
test
push
in
mov
lcall
xor
mov
and
loopne
push
dec
and
xchg
jge
cmpsb
pop
arpl
ret
cmp
inc
mov
mov
cmp
add
popf
pop
or
inc
fninit
dec
push
clc
fstpl
pop
popa
jnp
out
int3
mov
outsl
in
test
sahf
fwait
scas
pop
pop
xchg
clc
inc
test
clc
ficoml
mov
mov
xchg
iret
insb
jb
hlt
add
jecxz
sbb
mov
jl
or
repz
lods
sbb
insl
lahf
xor
adc
adc
dec
vpsubusb
call
sub
ds
je
xor
les
dec
jb
sub
sbb
push
int
in
or
adc
jbe
loopne
jnp
inc
iret
adc
mov
push
sarl
mov
xchg
mov
ror
sub
push
out
jecxz
jecxz
add
fcmovnu
rcll
cmp
imul
mov
int3
jb
and
inc
inc
gs
cmpsl
adc
and
push
out
push
rolb
push
pop
ror
mov
pop
orb
add
gs
mov
test
inc
mov
sub
int3
dec
int3
aam
push
das
mov
movsl
jno
loopne
dec
pop
mov
les
es
pop
div
jnp
inc
mov
or
sahf
dec
cmpsl
cmp
incb
add
lock
xchg
fcmovnu
mov
pop
inc
out
push
cs
into
cmp
mov
jg
das
dec
rcrb
and
cmpsl
mov
xorl
test
mov
dec
je
xchg
out
or
pusha
stos
mov
xchg
jne
or
adc
sbb
lahf
shlb
xchg
andb
push
cmp
mov
add
xchg
int
repz
pop
ret
push
dec
imul
push
ljmp
cmp
pop
add
je
mov
mov
and
mov
cltd
adc
aaa
push
roll
and
sub
push
into
cmp
sbb
sub
cmp
int3
mov
movsl
sbb
scas
add
jp
imul
jns
push
push
repnz
neg
loope
lods
mov
jo
mov
cmc
xor
jno
repz
mov
movsl
mov
icebp
adc
and
je
cmp
mov
dec
xchg
push
fwait
push
or
in
mov
cltd
out
mov
js
mov
mov
outsl
neg
push
cmp
cmpsl
fs
push
out
pop
dec
pop
fcomps
clc
jecxz
sub
mov
cmp
js
into
inc
lods
sbb
or
dec
add
adc
cmp
mov
test
and
jnp
in
dec
lds
fimuls
cltd
add
mov
or
cmp
popf
pop
push
mov
adc
and
xchg
aad
xchg
or
bound
lods
mov
push
std
push
shll
cmpsl
mov
mov
lret
imul
rcrb
cmpsl
xor
push
pop
or
es
mov
mov
mov
xchg
les
je
dec
jmp
aas
and
add
out
dec
mov
mov
pop
lea
xor
insl
sti
mov
in
pop
out
stc
push
jne
fwait
divb
out
lret
cmp
or
mov
push
jmp
lret
dec
jmp
arpl
mov
ror
pop
fisubs
out
popa
jp
hlt
push
add
xchg
aaa
leave
shlb
fs
inc
lret
lods
shrb
out
adc
aad
test
cmp
add
mov
xchg
test
loop
push
inc
xchg
jno
mov
sbb
pop
fsubl
mov
out
mov
cli
xchg
dec
mov
fidivrs
and
sti
sub
mov
add
scas
pushf
aas
jnp
pop
enter
sbb
cltd
loopne
jecxz
and
push
and
dec
pop
fistps
int
aaa
loop
repnz
test
lret
add
jmp
mov
test
popa
dec
push
jno
inc
and
mov
es
int
xlat
mov
addr16
sub
inc
sbb
mov
xchg
lahf
andl
push
or
fs
daa
inc
and
pushf
cmc
push
sub
stos
popa
push
cmp
push
mov
cs
jo
icebp
lds
pusha
jmp
loope
outsl
pop
test
jp
mov
jno
xchg
fiaddl
pop
pop
in
sub
cltd
jl
jno
cs
mov
mov
push
test
bound
lret
add
bound
or
test
lret
pop
jmp
add
xchg
inc
out
xchg
pop
pop
loop
sti
xchg
mov
mov
loope
push
mov
addr16
test
xchg
dec
shrb
pop
outsl
fidivrs
inc
mov
add
pop
mov
and
stos
frstpm(287
lods
sub
imul
das
dec
pop
or
add
fistpl
adc
popf
xchg
bound
je
add
mov
adc
xchg
cmpsb
pop
dec
mov
mov
iret
fimull
gs
adcl
ret
or
cmp
and
inc
pusha
rorb
rclb
leave
push
adc
sub
cmp
jp
inc
xor
pop
lds
js
or
mov
popf
int
adc
xchg
fistl
add
or
es
add
je
add
adc
pop
mov
lret
pop
and
mov
jae
cmp
repnz
cli
xchg
mov
lahf
or
jg
mov
subl
test
jmp
out
inc
jne
mov
sbb
repz
andb
jl
add
xor
cltd
adc
adc
or
sub
dec
inc
outsl
enter
pop
rep
test
cmpsb
shl
lea
repz
imul
std
or
shrb
pop
sub
pushf
iret
jmp
xor
pop
test
xlat
inc
sub
cmc
sub
or
inc
fs
xchg
int
dec
inc
lcall
cwtl
lea
push
test
in
xlat
pop
jmp
pusha
out
fisttpll
clc
xchg
imul
int3
stos
mov
insl
pop
dec
pop
mov
sub
mov
fiadds
imul
shll
cli
push
sbb
dec
insb
out
mov
and
imul
scas
arpl
test
ss
pusha
aad
ss
push
leave
pop
jmp
movsb
es
leave
fstps
cmp
pop
movsb
xchg
sub
adc
or
mov
and
repz
jb
xchg
xor
push
mov
mov
mov
or
push
inc
mov
pop
cs
pop
mov
jmp
pop
dec
repnz
scas
test
jle
sub
aad
mov
jb
jl
mov
mov
into
loop
lods
jns
aaa
jmp
lret
inc
sub
xchg
and
flds
mov
mov
je
and
out
pop
fidivs
lea
and
pop
int3
clc
jle
add
xlat
xor
pop
jae
mov
loopne
out
cmp
mov
rcr
push
shlb
movsb
xor
dec
loop
dec
xchg
mov
add
push
scas
dec
add
pop
cld
xchg
xor
lret
dec
xchg
lds
pushf
arpl
test
push
cmc
ret
xchg
xchg
dec
ret
inc
ret
in
push
fidivrs
or
fstps
sbb
data16
dec
xorb
adc
scas
into
aas
mov
sbb
lret
or
ds
mov
sarb
imul
sub
xchg
cs
roll
pop
notb
and
push
in
sub
xchg
out
adc
fistpl
adc
leave
add
push
xor
lods
outsb
popa
in
mov
pop
pop
add
pop
inc
ds
xchg
nop
ret
arpl
shlb
pop
fldt
in
lahf
dec
shrl
por
sbb
xchg
dec
out
push
adc
outsb
pop
icebp
xor
out
cmpsl
fstpt
je
fadds
movb
cmp
fstps
into
cli
aam
and
ret
in
jmp
aas
xchg
jle
dec
sbb
cmp
jg
lret
push
push
insb
jnp
add
ss
and
and
add
leave
xchg
rcrl
pushl
movsb
arpl
mov
dec
and
aaa
stos
cs
and
jp
pop
sbbb
aad
mov
push
outsb
sbbb
mov
inc
add
push
add
xchg
int3
mov
sub
loop
jmp
cwtl
or
scas
adc
jmp
fimuls
cmp
pop
lcall
repnz
dec
push
push
xlat
loope
adc
into
jbe
adc
xchg
insl
jg
jne
mov
test
leave
in
mov
orl
mov
mov
jo
sbb
js
lret
cld
enter
mov
sub
aas
mov
mov
cs
shrb
push
mov
stc
pop
push
loopne,pn
cli
fdivr
test
shrl
test
imul
jb
sbb
jmp
mov
clc
jecxz
out
loopne
and
push
das
lret
and
xchg
jl
ficomps
cmpsb
xchg
or
xchg
jl
into
lock
xchg
or
xchg
mov
leave
addl
leave
ds
ja
fidivrl
scas
out
lahf
sub
xchg
xor
sub
pusha
sub
rorl
add
rorl
outsb
add
arpl
mov
or
push
jge
cltd
push
adc
call
pusha
outsb
repnz
adc
cli
in
aad
push
jae
xchg
loop
lods
movsb
mov
cmp
pushf
xor
enter
lock
sarb
fsubrl
lods
dec
in
inc
or
mov
cmp
call
mov
xchg
push
iret
push
int3
inc
sub
ljmp
jmp
inc
out
in
add
jg
jne
imul
add
out
push
pop
std
push
push
dec
mov
mov
mov
and
leave
and
mov
push
add
scas
xor
xchg
shll
xor
scas
push
add
std
addl
push
sbb
js
out
or
cmpsb
jnp
orl
dec
adcb
js
push
push
jmp
out
lret
fidivrl
jae
xor
int
test
shl
inc
icebp
lock
pop
in
cmpsb
cmpsl
jecxz
dec
push
pop
stc
popf
cwtl
and
push
pop
fld
into
push
ds
mov
inc
test
push
outsb
pop
inc
xor
push
sarl
mov
jge
xchg
push
cmpsb
mov
test
fsts
push
add
sti
jb
test
cmp
out
ljmp
push
adc
fwait
jo
mov
xor
mov
sub
sbb
aaa
jae
dec
dec
mov
adc
movsb
inc
int3
push
inc
jge
in
popa
stc
out
inc
sub
dec
push
jae
dec
mulb
ret
out
xor
stos
inc
dec
mov
inc
push
test
jge
cmp
jb
mov
clc
add
mov
sahf
adc
incl
es
cmp
or
xlat
shrl
add
and
mov
loop
mov
fwait
insl
daa
jl
hlt
push
lret
outsb
sub
or
dec
lods
mov
mov
jb
pushl
dec
scas
sbb
or
shr
pushl
in
adc
xchg
mov
sbb
xor
or
pop
leave
test
pop
fwait
push
stos
movsb
fistpll
xchg
xchg
xor
push
mov
xchg
dec
jle
push
push
mov
cmp
test
mov
and
hlt
into
inc
jae
pop
jbe
push
cmp
movsb
and
loop
movsl
mov
push
adc
cmc
ret
pop
cmp
lock
cmp
movsl
out
jb
aaa
xor
mov
lret
jno
testl
lea
mov
pop
pop
test
inc
and
arpl
ret
int
stos
aaa
int
imul
or
int3
stos
test
mov
ds
bound
mov
or
popa
sti
cmp
cmp
sbb
imul
inc
push
nop
dec
mov
jmp
fcoms
je
arpl
fs
test
or
xchg
insl
xchg
sub
ja
xchg
jecxz
cwtl
mov
out
sbb
and
mov
xchg
add
cwtl
fs
jo
iret
das
data16
xchg
inc
popf
xchg
into
mov
mov
and
push
in
mov
addr16
lods
roll
stos
testb
xor
in
push
int3
in
xor
and
ljmp
jmp
inc
jecxz
jnp
scas
jbe
iret
jo
cmpb
hlt
pop
sub
out
cmp
ret
shlb
adc
dec
jecxz
sti
push
inc
lds
pop
ss
inc
xchg
nop
or
cwtl
cli
jmp
and
shlb
ja
hlt
ss
add
pop
lret
xor
movsl
int
pushf
inc
fcomps
lock
cwtl
sahf
ds
push
mov
sbb
jmp
ds
roll
dec
xchg
push
mov
mov
outsl
jbe
cmc
out
add
popf
mov
jl
sahf
push
mov
mov
pushf
lret
aam
hlt
xchg
leave
out
xchg
mov
pop
outsl
nop
sub
mov
gs
fistpl
xchg
shl
pop
push
clc
and
or
push
ss
repnz
and
fld1
loopne
xor
bnd
mov
xlat
mov
pop
insl
jp
cmp
sub
inc
fmuls
cmp
test
mov
xchg
ror
and
jge
mov
adc
pop
aas
xchg
cltd
imul
xchg
ficompl
xchg
xor
aaa
inc
pop
xchg
pop
sub
cmp
sub
or
vmovaps
mov
rclb
add
push
push
add
mov
ret
pop
jne
aaa
les
lret
lret
inc
mov
out
cmp
push
and
fchs
in
in
movsl
cld
lret
in
and
adc
add
cmp
fwait
dec
add
lahf
adc
mov
add
jge
xchg
or
repz
pop
out
andb
lock
add
adc
hlt
jo
bound
call
cmc
mov
cmc
adc
arpl
sbb
cmpsb
fwait
testl
fs
call
jo
mov
ret
subl
out
in
inc
icebp
mov
xchg
sbb
sbb
dec
mov
cmpsl
jp
sbb
mov
sub
ror
xchg
and
aam
fdivrp
pusha
jmp
cltd
cld
adc
and
xor
lock
xchg
lret
lock
mov
mov
pushf
mov
jo
push
adc
fnstsw
ret
mov
jmp
aad
sbb
cld
test
mov
test
sub
sub
mov
push
inc
adc
push
inc
inc
sbbl
xchg
xchg
mov
xor
xchg
mov
pusha
pop
lahf
mov
adc
pop
inc
jge
into
stos
push
mov
dec
push
out
ss
popf
jp
add
mov
adc
lret
fdivrs
xchg
iret
sub
int
dec
testl
adc
push
add
aam
pop
push
jnp
adc
add
pop
xor
sbb
jns
in
or
cli
add
add
sub
movsl
add
fistpll
push
clc
cli
xor
push
imul
pop
add
dec
ss
sbbl
xor
mov
push
stc
adc
xor
cmpsb
mov
xchg
dec
std
cmpsb
cmp
pusha
cmp
adc
mov
imul
push
pop
in
cltd
ja
ljmp
dec
scas
lcall
mov
imul
ret
push
movsl
sbb
repnz
insl
cmp
jle
dec
and
add
mov
pushl
xchg
mov
bound
mov
sbb
int
aad
adc
push
inc
pop
jno
nop
repnz
xor
sub
stc
int3
fcoms
nop
xor
lcall
loop
jne
pop
in
lret
outsb
pop
outsl
sbb
and
sbb
cmpsl
in
or
adc
jno
cwtl
divb
sbb
xchg
in
jne
test
pop
loopne
movsl
inc
xor
cmp
flds
add
rcl
scas
jnp
add
ret
roll
fimull
jne
pop
pusha
mov
push
xor
shl
and
xor
and
or
jbe
rorb
adc
mov
sbb
mov
pop
pushf
inc
jl
cli
mov
cmp
sbbb
or
out
xor
cmpsl
loopne
inc
enter
push
jge
push
std
cs
daa
pushf
pusha
cmpsl
out
adc
cmp
mov
out
adc
pop
pop
adc
jo
mov
add
cmc
sbb
pop
fmuls
cltd
ret
lods
ds
test
mov
cmp
adc
dec
push
sub
pop
pushf
cmp
dec
sub
lea
jnp
leave
cmp
add
stos
insl
push
adc
mov
imul
arpl
xchg
or
mov
adc
xlat
mov
mov
popa
ret
inc
out
xor
outsb
loop,pn
inc
lods
pop
lods
pop
popa
mov
xor
sub
and
repnz
mov
icebp
push
gs
stos
xchg
xchg
lret
stc
jecxz
sti
das
pop
xchg
fwait
js
push
xor
mov
add
out
adc
in
mov
outsb
jns
xor
pop
ficoms
rcll
mov
mov
ror
add
es
pop
or
mov
les
adcl
mov
js
or
sbb
leave
sahf
mov
shll
inc
mov
mov
fistps
loopne,pt
pop
xor
aad
filds
out
jle
or
stc
aaa
jp
xlat
cmpsb
mov
xor
in
or
jbe
xchg
pop
xchg
inc
das
pop
int
adc
loop
inc
aas
dec
inc
inc
xchg
xor
sbb
repz
xchg
rorb
mov
push
push
iret
hlt
pop
das
fidivrl
mov
lock
push
push
mov
sarl
jo
je
testb
jno
pop
sbb
fildl
addr16
movsb
je
out
push
in
movsl
xchg
scas
adc
or
jmp
ja
dec
leave
add
pusha
push
clc
mov
lret
lahf
add
fs
inc
and
cmp
es
cs
aad
in
or
leave
repnz
je
stos
dec
jmp
je
jnp
out
jnp
mov
stos
push
enter
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
movl
pop
movl
jmp
sbb
mov
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
mov
dec
mov
jmp
xorl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
adc
push
or
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzbl
sub
xor
mov
push
sbb
mov
add
movl
cmp
movl
je
mov
sub
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
adcl
push
push
push
push
subl
lea
sbbl
push
addl
push
subl
call
push
andl
call
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
push
push
call
cmpl
jb
add
movl
movl
orl
mov
adc
mov
xor
xor
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
adcl
test
movl
je
mov
mov
mov
mov
imul
orl
mov
sbbl
add
xchg
or
mov
sub
xor
mov
xorl
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
sbbl
add
mov
sbb
mov
sub
mov
movl
xor
add
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
add
dec
mov
jmp
neg
add
adc
mov
orl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
xor
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
sub
mov
orl
sub
jmp
div
and
xchg
lods
mov
loop
sbb
bound
pop
bound
notl
cmp
mov
sub
push
jmp
sub
xorl
adc
xlat
pop
in
adc
mov
jmp
pop
sub
inc
in
sbbb
mov
insl
lcall
jp
xor
mov
mov
mov
sbb
out
inc
and
mov
test
mov
sbb
mov
aad
pop
add
ds
push
cmpsb
imul
mov
cs
adc
push
outsl
repnz
call
shrb
mov
jb
cwtl
push
imul
jl
movsb
xchg
mov
aad
call
or
leave
aad
mov
and
cmp
cmpxchg
push
mov
outsl
fiaddl
mov
jmp
add
rorb
xchg
dec
popf
and
and
mov
addb
mov
lret
inc
cmp
arpl
pusha
mov
shrl
mov
dec
adc
fnsave
insl
push
mov
add
inc
fcompl
sub
addr16
lret
mov
out
dec
xor
jg
mov
decb
ss
and
icebp
repnz
data16
shlb
or
imull
xor
fnstsw
push
loopne
or
jge
jle
test
cltd
cmpb
movsb
sub
addr16
negb
jbe
insl
test
sar
xchg
hlt
aas
mov
cmpsb
cmc
cmp
rcl
popf
fbstp
mull
xchg
je
out
sbb
mov
lds
das
and
jge
push
fisubl
lods
push
jns
in
shrl
or
inc
mov
lcall
leave
jmp
mov
popf
sti
out
inc
inc
mov
jbe
rcr
or
imul
fdiv
mov
stos
pop
arpl
sbb
leave
shlb
mov
jne
ret
in
mov
ss
or
cmp
sbbb
jl
imul
mov
out
jmp
push
jne
gs
aam
jae
jle
movsb
sti
js
mov
add
mov
inc
pop
and
pop
fcomps
dec
popa
mov
rcr
leave
pop
insl
xor
mov
add
push
iret
inc
movsb
or
pop
and
push
cwtl
push
xchg
mov
fdivrl
push
xchg
icebp
mov
mov
movsb
mov
js
sbb
subl
push
lods
lcall
call
cmpsl
das
scas
fprem
push
inc
xchg
xchg
lock
jg
cs
pop
ffree
xchg
negl
push
stos
push
dec
cmp
or
into
add
std
cmp
nop
jbe
jo
out
cmp
xchg
andl
iret
inc
and
pusha
ss
rcrb
ljmp
sub
fiaddl
inc
sbb
adc
mov
xchg
jge
ret
adc
pusha
cwtl
negl
pusha
jl
fimuls
daa
popf
movsl
sahf
test
mov
push
gs
pushf
dec
ret
stos
mov
aas
rep
icebp
imul
sbb
inc
leave
adc
int3
mov
out
arpl
push
popa
mov
or
adc
mov
imul
cwtl
or
cmp
cli
dec
rsqrtps
mov
movsl
add
jo
test
xor
mov
adc
or
cmp
cli
and
cli
xlat
fisubl
gs
js
cmc
gs
scas
mov
test
inc
in
iret
addl
push
popf
cltd
inc
xchg
sub
cmp
lock
jns
imul
xchg
xchg
js
ds
insb
jg
lea
inc
shrl
repnz
outsl
jno
or
dec
daa
cwtl
pop
aaa
cmp
push
fstpl
xlat
sub
lret
jnp
push
test
loop
mov
hlt
sbb
jp
sti
mov
ret
add
fnstsw
adc
push
mov
cmpsb
dec
sub
xor
inc
outsb
and
xor
sbb
jb
call
aam
call
xchg
xchg
jp
jmp
pushl
cmc
mov
mov
xchg
xchg
mov
xchg
repnz
lods
mov
jecxz
daa
enter
mov
out
lods
mov
dec
daa
push
mov
push
cwtl
test
and
es
push
call
lahf
dec
cmp
jecxz
cmp
inc
mov
lcall
sbb
jge
inc
adc
sub
dec
push
cwtl
or
mov
test
insl
jecxz
fsubs
icebp
and
dec
in
add
dec
ljmp
stos
sti
dec
dec
push
jno
ja
mov
sub
push
mov
outsb
in
lcall
loopne
push
aad
mov
je
test
gs
jg
out
xchg
in
push
lock
adc
xor
pop
pop
sub
nop
sbb
mov
mov
mov
cmpsb
sti
pop
push
mov
mov
mov
push
pop
adc
jno
jle
or
sahf
adcl
mov
dec
stos
push
daa
xorb
push
jnp
adc
add
pop
sbb
insl
xor
hlt
add
push
inc
fcmovnbe
scas
test
mov
cmp
push
insb
or
fdivrl
lahf
lods
sbb
iret
adc
rcl
movsl
or
outsl
cs
sbb
inc
cmpsl
in
lods
adc
mov
mov
xor
dec
movsl
gs
cmc
fisttpll
push
and
loop
add
lods
aas
mov
add
shr
cld
out
dec
cmp
int3
cmpsl
fwait
xchg
xlat
ret
or
cmc
ljmp
jbe
outsl
js
push
movsb
pop
and
dec
testl
fcomi
dec
add
and
mov
orl
stos
xchg
int
mov
inc
xchg
ss
ss
lret
mov
pop
pop
adc
mov
shl
cmp
jecxz
add
rol
dec
das
outsb
adc
rcrb
rcrb
sbbb
orb
pop
fidivrs
lea
sub
jg
ds
dec
inc
push
mov
nop
mov
int
inc
jmp
fdivr
inc
pop
stos
adc
xchg
and
loopne
or
pop
mov
daa
in
mul
push
movsl
roll
call
andl
enter
sub
push
pop
dec
cmpsl
pop
fnstcw
push
mov
sub
xor
jg
sbb
arpl
sbb
push
rorb
dec
add
je
adc
xor
cltd
test
testl
int3
jne
pop
mov
mov
xchg
in
fidivl
push
call
adc
leave
nop
mov
adc
sarb
lds
lods
jmp
out
inc
xor
mov
lahf
movsb
mov
inc
add
ljmp
and
lods
adc
in
lods
movsl
mov
push
mov
push
cmp
and
daa
cmpb
xchg
cltd
shl
pushf
sub
stos
in
sub
pusha
mov
mov
pusha
dec
call
ds
aaa
enter
mov
fsubr
cmp
mov
jle
inc
mov
fidivl
imul
cs
aaa
out
mov
lret
and
rclb
std
jmp
std
and
mov
imulb
pop
shll
lods
ret
pop
das
test
shll
inc
or
jecxz
pop
nop
push
inc
adc
xor
fiaddl
leave
mov
mov
pop
mov
roll
cwtl
add
pop
cmp
xor
bnd
stos
repz
sbb
add
xor
setg
push
mov
loopne
inc
shrb
xlat
repnz
and
and
clc
adc
stc
out
jbe
sub
mov
mov
iret
mov
mov
xchg
sub
nop
leave
pusha
mov
push
jmp
out
sbb
popf
inc
cmp
cmp
jg
imul
jnp
mov
fcomps
cwtl
jnp
outsb
out
push
scas
push
aaa
mov
pop
scas
jp
ds
les
add
insl
popa
adc
push
jmp
push
cmp
jecxz
jb
or
mov
xchg
mov
or
adc
cmpsl
es
jnp
push
clc
ficomps
mov
aas
xchg
push
cmp
movsb
cmp
je
dec
aam
jno
mov
cmpsl
call
fisubs
bound
push
xchg
dec
inc
add
mov
and
mov
inc
fmull
cmpsb
dec
pop
ss
cmc
xor
lea
lods
in
pop
sbb
adc
sbb
insb
andl
faddl
cmp
mov
push
push
mov
push
dec
push
popf
jle
cmp
pop
popa
pop
leave
stos
outsb
jne
ja
cmp
and
in
aad
inc
int3
jbe
stos
inc
push
xchg
xor
pop
jg
push
dec
cld
test
cmpsl
imul
bound
das
mov
repnz
out
and
pop
mov
fmul
inc
xor
sub
xor
insl
fidivrl
xor
push
std
sbb
stos
lret
or
lcall
add
cwtl
addr16
or
mov
xchg
repz
shl
adc
hlt
fs
mov
push
sub
xchg
dec
enter
push
aas
push
popa
jno
dec
shl
inc
fistpll
scas
addr16
pop
addr16
pop
push
and
mov
sub
mov
sbb
mov
mov
ja
sub
pusha
inc
mov
push
out
imul
xor
push
push
xchg
loopne
xor
jmp
inc
xchg
mov
mov
adc
push
ret
popf
mov
xchg
sub
inc
xchg
outsb
mov
add
sbb
sbb
mov
push
jecxz
lret
fisubs
or
repnz
dec
xchg
cmp
sbb
cmpsl
aad
mov
add
jp
mov
mov
sbb
ret
shrb
iret
and
and
jns
push
loop
ss
or
gs
xchg
push
stc
dec
adc
xor
cli
outsb
sahf
inc
fs
pop
cli
jb
int
mov
xchg
push
pop
or
loopne
xor
cmp
shl
sbb
mov
insb
mov
mov
pop
cs
mov
cs
shrb
jbe
lret
test
jae
xchg
outsl
push
cmp
fstp
add
xor
jmp
push
cmpsl
js
xor
xchg
mov
fldcw
and
dec
insb
mov
fldcw
sub
dec
in
pop
smsw
dec
fwait
jmp
and
push
inc
dec
adc
scas
or
cs
push
fnstsw
repnz
adc
test
sarl
inc
inc
ds
mov
pop
loop
cmp
aad
pop
dec
inc
movsl
shl
jmp
ljmp
xor
mov
sar
adcb
shrl
stc
popf
leave
mov
sbb
push
testb
push
ret
leave
ja
stos
addr16
adc
cli
pop
mov
int
shrb
into
xchg
xchg
pop
pop
xor
sub
out
mov
arpl
pop
enter
add
xchg
push
ss
jmp
lods
lea
cmp
xor
xchg
jo
outsl
xchg
dec
mov
icebp
and
loop
enter
inc
mov
push
test
ss
imul
mov
gs
mov
inc
cmpsl
push
loop
pop
inc
mov
and
je
scas
aam
jbe
xchg
pop
hlt
fldln2
cmp
fadd
add
sub
int
jo
mov
inc
mov
cmc
scas
iret
xlat
sub
adc
sbb
sub
arpl
arpl
stos
aam
ss
and
rorl
sahf
mov
js
mov
sbb
std
scas
loopne
mov
enter
cmp
and
sbb
les
jecxz
in
fwait
lahf
ret
inc
or
rcr
shll
adc
lea
xchg
pop
push
mov
stos
dec
test
dec
ljmp
je
div
cld
sbb
jno
sarb
call
es
pop
and
int
xchg
fadds
mov
jns
subl
popl
xchg
pop
cltd
jmp
dec
or
pop
ljmp
loope
mov
xlat
pop
xor
mov
sti
or
call
jle
mov
iret
and
adc
repnz
in
mov
sahf
mov
mov
rolb
adc
test
cmp
leave
pop
mov
mov
stos
gs
shlb
into
sti
mov
jo
stos
sarl
inc
add
xchg
lea
call
dec
in
call
mov
fildl
and
adc
repz
push
push
push
loope
pusha
jbe
mov
loope
in
nop
push
mov
add
nop
inc
iret
jp
pop
jns
jbe
push
dec
stos
dec
inc
into
inc
jg
ljmp
push
js
je
mov
in
jmp
dec
add
mov
cli
cmpsl
xlat
jbe
cmp
cmp
mov
ja
or
sub
inc
push
aad
stc
mov
nop
sbb
fdiv
jmp
je
add
mov
test
loopne
dec
mov
push
jo
lea
or
xorl
icebp
pop
fs
sbb
sbb
dec
mov
adc
rcrl
aam
sbb
aaa
fcomi
dec
push
out
mov
dec
cmp
sub
cmp
mov
scas
inc
and
jp
out
cmpb
call
fisubrs
inc
mov
cmp
xchg
dec
dec
or
dec
mov
loope
xchg
jbe
lea
repz
aaa
sarb
cli
aad
lds
outsb
inc
out
sbb
aas
imul
pop
and
jne
mov
adc
mov
scas
xor
test
xor
inc
int
jl
xchg
cmpsl
mov
outsb
movsb
adc
sbb
rcrl
or
cmp
iret
js
in
jg
or
int3
inc
sub
sbb
dec
and
jmp
outsb
cmpsl
mov
pop
lcall
clc
push
jae
andps
sbb
fiadds
rdmsr
fldcw
iret
pop
or
insb
into
lods
and
pop
xor
mov
int3
divl
mov
lahf
aam
lea
mov
loope
sahf
shlb
gs
into
mov
loop
sbb
inc
mov
inc
loop
push
outsl
pop
rcrb
jge
xchg
test
and
je
mov
pop
and
jnp
mov
cmp
push
push
sub
adc
enter
adc
xchg
push
add
cmp
outsl
scas
jbe
mov
gs
mov
mov
out
mov
lods
xor
loopne
mov
jecxz
clc
mov
je
push
push
insl
imul
cwtl
sbb
cmp
inc
call
loopne
movsl
jg
mov
mov
mov
xchg
mov
dec
ret
mov
int3
add
js
jecxz
jae
or
jmp
adc
es
xor
adc
sbb
xor
mov
cmc
lods
das
in
out
jg
xchg
call
push
push
xor
inc
test
sub
test
pop
ficoms
or
fwait
jo
testb
test
aam
les
out
mov
inc
inc
xlat
push
in
jbe
jle
adc
call
mov
or
arpl
push
mov
shr
std
lcall
xchg
in
push
stos
arpl
mov
xor
xor
lea
sub
pusha
jp
adc
iret
lahf
dec
push
loop
push
add
cmp
push
movsb
popa
mov
pop
fdivl
push
cmc
mov
popa
push
push
sub
addb
cmp
push
test
mov
and
fldenv
sub
lods
and
xchg
and
aad
sbbl
ja
and
pop
dec
xor
clc
or
mov
cld
mov
int
daa
jl
mov
lds
push
mov
sub
out
ret
imul
out
sarb
lahf
fildl
sahf
xlat
xor
pop
cs
jo
test
popa
addr16
test
add
in
aam
mov
es
push
sarb
outsl
ss
mov
or
mov
or
or
xchg
repz
pusha
cmp
add
xlat
push
inc
sub
jno
jmp
inc
and
pop
imul
push
mov
pop
movsb
ljmp
and
repnz
sub
mov
aam
fistpll
inc
movsl
pop
test
sub
sbb
jo
mov
mov
add
cmc
cmpsl
sub
in
popf
sbbl
cwtl
pop
subb
ficoml
lds
jno
xchg
mov
fnstcw
insb
mov
fildll
add
add
fwait
xor
into
repz
inc
inc
xor
sbb
fimuls
push
adc
outsb
cmp
jg
ds
incb
dec
inc
xor
mov
or
cmpsl
out
loop
clc
sub
cld
out
dec
pop
sub
adc
add
and
in
xor
sbb
jmp
iret
pop
js
lret
sbb
outsl
jecxz,pn
push
adc
imul
push
lea
ret
jne
pop
or
jp
cli
mov
sti
ja
or
test
jae
sbb
and
js
bound
inc
pop
sti
xor
ret
push
outsl
jb
xor
or
into
jnp
and
fdivrl
sbb
jne
in
sub
jecxz
repnz
mov
xchg
pop
adc
and
jle
mov
call
pop
or
leave
iret
mov
cmp
pushf
mov
xor
mov
lods
push
push
mov
adc
pop
jno
jecxz
js
adc
pushf
arpl
std
movsb
rol
mov
and
mov
stos
clc
push
fistl
rclb
ljmp
pop
lret
fidivl
subb
lock
inc
imul
push
mov
push
mov
outsl
out
mov
repz
xchg
mov
sti
bound
popf
push
pop
ret
pop
test
jmp
loop
xor
lret
cld
dec
jo
stc
cmp
lods
test
int3
xor
dec
dec
cmp
push
das
cmp
mov
subb
popa
xor
faddl
adc
cmp
cmp
fdivl
mov
scas
pop
into
cmp
lretw
jge
stc
push
or
dec
in
jp
cmc
add
mov
push
pusha
mov
fs
add
stc
into
fnstsw
push
pop
and
cmc
mov
fisubl
adc
pop
push
mov
sti
pusha
mov
pop
pop
or
dec
mov
mov
mov
add
xor
and
mov
mov
sbb
mov
jp
jns
and
adc
xchg
ret
ss
adc
repz
clc
loopne
jno
sub
cmp
loop
rcl
add
or
add
out
arpl
push
mov
in
mov
lea
push
pop
insl
cmp
dec
test
sbb
mov
xor
adc
add
jecxz
jbe
mov
mov
add
mov
test
stos
add
nop
nop
fldt
adc
inc
jnp
and
fs
lcall
mov
nop
test
aaa
call
pop
jne
aad
jle
add
repnz
pop
xchg
dec
or
or
push
mov
add
sub
mov
les
cmpsl
icebp
nop
cmpb
stos
xchg
pop
push
negb
fucomp
shll
adc
loope
lods
cwtl
sbb
rclb
jae
dec
jne
push
int3
push
pop
mov
movsb
ja
imul
lret
daa
sub
addr16
push
ljmp
pop
lock
inc
sbb
jbe
mov
ret
push
sub
sar
jns
jbe
dec
push
xchg
lea
adc
mov
xchg
xor
xor
pusha
mov
pop
stos
pop
fisttpl
xor
fs
aad
push
dec
movsb
sbb
adc
mov
adc
or
pop
dec
xlat
mov
sbb
mov
cmp
pop
scas
test
mov
mov
mov
cmp
fldcw
add
pop
popf
sbb
out
xchg
sti
pusha
mov
push
mov
mov
sub
mov
jns
lret
loope
mov
push
mov
sbb
mov
ss
movsb
std
cmp
mov
sbb
adc
cwtl
in
jge
add
sub
sbb
jg
xorl
pop
mov
mov
jl
nop
fdiv
js
jle
ja
movsb
mov
ret
jecxz
jb
aam
dec
xorl
add
jp
outsb
cmp
adc
lcall
gs
mov
dec
lods
and
repnz
fimuls
xchg
test
cli
pop
and
mov
in
mov
aad
jbe
mov
inc
mov
lock
test
ja
rolb
sbb
and
jns
popf
cmpsl
and
pop
push
pop
push
hlt
pop
and
and
push
dec
daa
and
xchg
fwait
lahf
and
push
scas
pushl
and
push
or
mov
jmp
ret
or
cmp
gs
pusha
lcall
cmp
addr16
rcl
sub
pop
enter
adc
gs
xchg
cltd
xchg
pop
xorb
inc
mov
pop
mov
mov
inc
mov
cmp
int
sbb
insl
pop
stos
mov
stos
lods
fistl
dec
leave
and
adc
inc
test
xchg
loopne
fnstsw
cltd
js
insb
in
fidivrs
lock
ja
inc
fisubrl
je
mov
lahf
stos
loop
jnp
bound
test
int3
jg
imul
add
cmpsl
adc
clc
mov
or
stos
xor
sub
mov
add
std
cmpsl
pop
iret
orl
mov
mov
rcr
jnp
cld
lret
sub
and
fcomps
and
into
add
pop
sub
js
insb
cmp
cld
xor
dec
in
dec
cltd
out
dec
rolb
icebp
push
arpl
repz
push
aas
dec
dec
dec
push
jns
cmp
sbb
xlat
cs
stos
push
jecxz
stc
sub
fucom
sbb
sub
cmp
sahf
pop
mov
out
mov
sub
pop
mov
mov
fcoms
scas
in
jmp
outsb
leave
sub
les
push
or
aad
loope
fistpl
mov
iret
nop
sub
pop
pop
add
inc
pop
out
jl
and
sbb
mov
adc
mov
andb
shll
loopne
lods
cmp
sbb
pop
xor
jb
popf
in
out
adc
lahf
jo
mov
cmp
arpl
ljmp
jecxz
mov
das
push
aas
enter
push
mov
and
cmp
daa
fdiv
push
mov
fwait
inc
int
lret
pop
xor
es
or
gs
cmp
dec
stc
push
inc
call
inc
mov
add
cmp
cld
gs
cmp
mov
push
ja
in
mov
or
push
aad
loopne
lds
insl
mov
dec
sarb
cli
xchg
sti
and
cmp
mov
pop
ds
sahf
sti
add
sarl
xorb
out
lret
mov
scas
loope
xchg
jb
jns
sarl
dec
adc
call
aad
pop
pop
dec
pop
int
cwtl
mov
mov
dec
fsubs
into
mov
rcrl
cmpsl
add
pop
xor
mov
xor
and
lret
jnp
inc
mov
mov
sbb
jo
jns
push
ret
aas
mov
loop
jno
mov
adc
push
mov
in
push
sbb
xor
divl
insb
leave
test
xchg
cwtl
pop
movb
jg
mov
pop
mov
xchg
ret
push
jg
dec
insl
mov
add
fs
test
add
ret
add
pop
std
mov
scas
iret
adc
cmp
mov
xlat
cmp
jnp
rorb
dec
clc
xchg
mov
fwait
arpl
imul
pop
sub
mov
add
push
hlt
icebp
cmp
cwtl
int3
es
shlb
test
mov
xchg
or
pop
sub
and
jbe
mov
adc
sub
xchg
aaa
fwait
std
fwait
std
dec
data16
test
aam
push
int
jmp
cmp
icebp
fists
sbb
pop
arpl
jl
inc
xchg
inc
arpl
push
or
lock
inc
daa
inc
dec
shll
inc
cmpb
mov
test
and
les
lds
lea
cmc
wbinvd
push
push
insb
aas
and
fadd
ljmp
cmp
popf
or
roll
push
mov
sbb
mov
dec
fwait
mov
pop
out
dec
scas
add
xor
outsb
iret
mov
jnp
cli
jae
addr16
pop
pop
jbe
sbb
nop
shll
fisttpll
xchg
sti
mov
mov
aam
mov
cwtl
mov
imul
outsl
popf
mov
mov
insb
xchg
negb
jl
inc
das
ja
mov
int3
les
in
push
mov
std
imul
je
dec
sbb
outsb
shll
hlt
dec
and
jnp
pop
mov
cltd
lahf
dec
adc
cmp
test
cs
jne
ds
loopne
and
dec
into
imul
mov
pop
push
xor
rclb
scas
scas
sbb
stc
aas
or
sbb
stos
sub
cli
pop
dec
iret
fsubs
pop
or
mov
xor
xchg
xchg
add
jmp
packssdw
cmc
enter
lock
aam
push
into
add
arpl
repnz
add
pop
mov
enter
mov
shr
subl
mov
xchg
dec
xchg
sbb
roll
sbb
ja
inc
lds
sbb
mov
dec
dec
inc
jg
push
add
or
cld
in
cmp
pop
mov
dec
inc
sbb
cmp
aad
stos
adc
or
adc
popa
fbld
outsl
pushf
adc
mov
inc
aam
xor
movsl
sbb
loop
fbstp
orb
xor
bswap
in
xor
std
and
pop
adc
in
nop
inc
jbe
scas
cmpsl
cmp
divl
andb
repz
jns
push
in
addr16
or
mov
cmp
popa
mov
mov
fwait
scas
xchg
int
mov
inc
loope
push
shr
andb
or
in
cmp
pop
scas
mov
ja
mov
cltd
dec
cmc
mov
repz
cmp
ljmp
adc
push
ja
mov
imul
xchg
stos
loopne
imul
leave
jne
or
andl
cmc
add
subps
jnp
pop
mov
mov
test
lahf
push
out
arpl
or
lods
aas
repz
push
dec
sub
mov
callw
add
mov
jl
and
jno
inc
bound
push
push
cld
rcrl
adc
cmp
mov
xchg
inc
pop
cld
es
aam
pop
es
insb
bound
xchg
repz
mov
dec
mov
mov
jns
popa
jle
mov
mov
lods
scas
test
push
sub
mov
xor
jns
arpl
shll
add
xchg
cmp
and
mov
xor
mov
test
sbb
and
inc
mov
sub
cmp
movsb
rorb
mov
lcall
js
sub
aaa
out
inc
add
dec
add
xlat
fs
xchg
pop
dec
dec
dec
je
sub
xchg
mov
mov
push
xor
inc
pusha
xor
adc
mov
or
cmp
test
xchg
jb
lret
shrb
lds
out
cltd
fdivr
in
lcall
ljmp
je
xor
cmp
dec
aaa
call
stos
nop
lea
in
es
lods
dec
mov
dec
inc
jo
jns
inc
divl
dec
lods
repnz
or
pusha
dec
add
add
push
cmp
xchg
inc
iret
repnz
lret
cs
cmc
rorl
jmp
lods
jmp
and
test
add
cmp
ret
ret
mov
dec
jno
adc
dec
aad
mov
ret
mov
mov
cmp
sti
js
mov
pushf
push
outsb
dec
movsl
mov
mov
imul
cmp
lock
xchg
ss
jo
int3
or
xor
fucomp
cwtl
mov
sbb
mov
cmove
cli
in
inc
mov
or
cltd
mov
and
outsl
mov
or
and
push
pop
adc
adc
in
xlat
cmp
mov
sbb
ljmp
lea
stc
rorl
in
adc
cmp
or
andb
sti
mov
movsl
loopne
cwtl
pop
jg
pop
or
xchg
lret
or
xchg
ja
fwait
shll
movsb
test
stos
push
cld
or
lds
std
add
outsl
insl
dec
insl
cmpsl
cli
jecxz
mov
es
popl
jmp
dec
add
jno
fwait
fwait
jnp
sbb
aas
add
xchg
mov
not
subl
stos
add
mov
sbb
mov
enter
jmp
adc
arpl
jns
sahf
sbb
or
shr
mov
mov
insl
mov
into
mov
out
jmp
push
into
jge
or
mov
dec
add
pop
adc
add
mov
sub
dec
jne
shl
mov
xlat
lock
arpl
not
jl
mov
sarb
in
ret
jno
imul
rolb
bound
jp,pn
into
leave
out
outsl
into
je
test
xor
ljmp
xchg
jp
mov
push
adc
push
sbb
pop
cmp
fistps
inc
in
movsb
or
ljmp
or
xchg
cmp
fwait
sbb
in
or
pop
xchg
cld
loop
sbb
sbb
cmp
lahf
inc
sbbb
dec
mov
gs
sub
jp
pushf
mov
lea
sbbl
xor
xorl
xor
movl
cmp
movl
je
mov
xor
adcl
add
cmp
jne
pushl
call
mov
mov
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
sub
add
mov
xor
mov
add
movl
cmp
je
sbbl
pushl
pushl
call
sbb
mov
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sbb
mov
xorl
xor
subl
add
cmp
movl
je
mov
mov
mov
or
mov
mov
mov
add
mov
and
mov
and
mov
adcl
add
movzwl
sbb
mov
mov
or
mov
mov
sbbl
add
not
mov
mov
jmp
movzbl
add
mov
mov
xor
mov
andl
add
inc
mov
sub
mov
sbbl
mov
xor
decl
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jmp
into
mov
adc
shll
xor
cmp
bound
pop
bound
mov
mov
mov
leave
clc
pop
lahf
mov
push
mov
outsl
and
sahf
clc
xorb
in
ds
sub
fstpl
pop
mov
ret
push
mov
sbb
imul
mov
mov
dec
xor
lds
cltd
mov
in
ja
lock
xchg
int3
add
outsb
insl
shll
addr16
xor
cmp
ds
fdivs
out
sbb
lds
push
outsl
stos
insb
or
adc
cli
les
sbb
sarb
mov
imul
lods
jb
jg
int
leave
push
cmp
inc
push
mov
sub
sbb
loope
push
dec
add
daa
sbb
pop
cmp
lcall
cs
xchg
push
rcrl
repz
mov
and
pop
fcomps
cmp
ret
xchg
fstp
jle
dec
sarl
les
loop
aad
mov
popf
jmp
push
leave
es
mov
test
push
cmp
lea
mov
adc
inc
fistl
sbb
repnz
push
sahf
xor
adc
ja
sbb
insb
stc
and
and
enter
add
cld
jg
mov
enter
sbb
mov
test
fdivl
pushf
lods
pop
pop
mov
stc
loopne
add
mov
jno
cmc
outsb
sbb
dec
mov
call
outsl
sub
or
xlat
aas
push
arpl
pop
gs
pop
hlt
dec
push
rcll
mov
outsb
in
mov
in
je
mov
adc
sub
fmul
mov
or
shll
fwait
aaa
or
push
adc
mov
shrl
lret
mov
jb
xorl
rolb
outsl
cli
incl
fs
das
psubusw
pop
pop
or
outsl
aad
adc
pop
cs
cwtl
sub
addr16
fldenv
mov
adc
fdivr
out
xor
sbb
sub
es
mov
mov
pop
sub
ds
mov
push
aam
sbb
ljmp
fistl
jp
fistpll
dec
add
pop
popf
cmp
pop
push
xlat
pop
sbb
xchg
fisubs
ja
cmp
fimull
js
add
fdivs
test
sarb
sti
or
mov
add
int3
and
mov
insl
fistpl
pop
movsb
das
dec
xlat
in
dec
xchg
pop
dec
jnp
hlt
bound
jnp
popf
or
das
dec
mov
push
popl
pushf
sbb
mov
xchg
mov
jmp
insl
pop
ja
dec
outsb
dec
adc
add
fbld
fdivrl
adc
ja
or
xor
mov
push
movsb
cmp
arpl
mov
scas
xor
outsb
icebp
mov
mov
mov
mov
shlb
mov
pop
add
jns
add
push
enter
subl
cmp
push
clc
mov
or
cs
push
out
popa
call
in
pop
ljmp
and
inc
inc
scas
imul
idiv
jne
ja
test
fs
lock
test
xchg
push
test
push
dec
les
scas
inc
aam
inc
fildl
rolb
push
hlt
push
in
cld
inc
and
xchg
push
into
mov
js
push
or
mov
xor
xor
das
in
sbb
pop
loopne
mov
jno
cmp
dec
js
adc
or
and
ss
js
adc
stos
ficomps
adc
orl
push
out
or
or
cmp
rolb
xchg
adc
idiv
cli
pop
add
mov
add
or
xchg
mov
adc
and
test
inc
rcll
sbb
xchg
mov
push
jne
xor
bound
and
jne
and
mov
dec
pop
push
ficoml
insl
push
adc
ret
and
mov
add
inc
sti
xor
mov
nop
sbb
mov
cmp
test
mov
inc
lret
lock
js
mov
sub
dec
aam
push
jle
mov
xor
daa
and
adc
mov
mov
push
rcll
nop
aad
sarb
xchg
fcmovnu
rcl
sti
push
lods
pop
mov
and
fsubs
test
sub
cmc
and
roll
jp
jno
dec
add
movsb
movsb
stos
arpl
outsl
data16
xchg
stos
out
mov
lret
hlt
sbb
push
out
mov
popa
data16
inc
jb
pop
shlb
arpl
arpl
inc
mov
jl
add
xchg
ja
sub
jge
lds
or
movsb
jecxz
mov
leave
inc
pusha
inc
mov
stc
jecxz
xor
fisubl
and
xor
sahf
sub
xlat
mov
ss
aam
in
push
push
push
mov
stos
cld
dec
mov
rcr
leave
ffree
pop
incb
and
add
nop
mov
mov
pop
cltd
dec
pusha
loope
cmp
inc
fldl
subb
mov
cs
daa
mov
adc
stos
xchg
fbstp
xor
testl
push
imul
jbe
xor
mov
xchg
hlt
add
mov
mov
das
push
jmp
inc
out
addb
pushf
xchg
cli
cmp
sbb
mov
lds
arpl
mov
cs
adc
cmpsb
jecxz
adc
push
mov
loop
fdivrs
and
mov
ret
or
mov
dec
lret
sbb
maskmovq
clc
stos
cmp
mov
xchg
outsl
jae
mov
sarl
push
outsl
das
add
pusha
mov
mov
aam
or
add
addl
or
mov
fidivl
cwtl
and
push
das
jne
orb
in
negl
pop
je
mov
pop
loop
mov
add
pop
lretw
add
push
push
repnz
lock
inc
pushf
subb
push
pop
rcll
jg
dec
fwait
xchg
jbe
mov
mov
mov
popa
bound
or
in
jnp
shll
fildll
jb
std
adc
mov
and
pop
test
scas
xor
jns
stos
jbe
lcall
adc
dec
inc
in
dec
aad
sbbb
pushl
out
xorl
ror
dec
lcall
call
lcall
aaa
add
lods
add
and
cltd
loop
js
or
loop
pop
out
dec
sub
in
pop
stc
notl
fildl
mov
fwait
sbbb
enter
fldcw
jge
mov
sbb
jno
daa
cltd
cmpsb
out
sbbl
mov
orb
mov
mov
xchg
cmp
ret
out
cltd
outsb
es
xor
sbb
out
mov
mov
inc
fdivrp
btcl
out
jmp
out
cmc
cmp
sahf
mov
icebp
cmp
mov
pop
imul
inc
outsl
pop
inc
inc
clc
mov
mov
xor
jnp
enter
jg
adc
movsl
xor
sub
stos
push
pop
mov
xchg
adc
sub
arpl
fidivs
mov
xor
mov
pop
cmp
add
lahf
and
jmp
lret
or
inc
xchg
mov
pop
imul
lcall
das
push
push
cmp
cmp
imul
or
fcom
add
xor
mov
sub
out
add
hlt
adc
fmul
insb
hlt
ret
mov
dec
xlat
mov
mov
fs
jl
jle
xchg
mov
cmp
imull
and
cmc
pop
mov
out
clc
cmp
test
adc
push
test
leave
clc
sbb
jns
popf
and
imul
loop
adc
sub
xor
or
in
mov
fadd
imul
inc
inc
pop
xor
cltd
movsb
or
pop
repz
or
mov
xor
mov
mov
mov
cmp
dec
leave
xor
mov
xor
inc
and
jge
das
push
pusha
mov
cmpb
test
aas
dec
adc
insl
shrb
jle
leave
or
sub
sbb
jecxz
push
fwait
in
fldl
addr16
lcall
adc
jbe
mov
jp
sbb
loop
jg
arpl
push
push
ret
add
lahf
xlat
jp
fimuls
mov
jns
push
pop
mov
pop
adc
push
mov
aad
cmpsl
rolb
add
sub
and
imul
mov
repnz
icebp
push
cld
rcl
push
cmpsb
mov
jbe
ja
sbb
mov
stos
pop
movsl
scas
lds
mov
fnsave
lock
xor
ja
adc
sbb
decb
sbb
or
push
ret
test
jb
cmp
mov
xchg
mov
inc
sbb
sti
xor
sub
sub
jb
mov
add
out
jae
popa
ja
sbb
enter
divb
xchg
mov
mov
sub
cli
push
sti
pop
testb
pop
pop
es
or
loop
enter
cmp
movsb
ss
cmp
clc
sub
and
and
leave
repnz
sbb
stos
xchg
aam
out
mov
cltd
iret
stos
mulb
imul
les
sbbl
add
cmp
pop
mov
cmp
add
adc
out
dec
outsb
dec
test
fisubrs
jecxz
mov
dec
xchg
cmp
dec
data16
nop
dec
bound
add
mov
pop
ljmp
mov
test
sub
jle
add
push
add
sbb
jge
xlat
mov
lea
loopne
aas
pop
cwtl
push
cmp
jge
adc
dec
hlt
sbb
push
je
ja
jle
cmpsb
xchg
jecxz
dec
add
cld
outsb
jle
push
popf
das
mov
out
adc
test
aas
jnp
xor
inc
add
jae
push
ljmp
xor
jno
cmpsl
jne
mov
cmp
inc
inc
mov
jo
mov
iret
fwait
repnz
jbe
mov
sub
stos
mov
mov
pop
sti
testb
je
mov
repnz
addl
jno
or
mov
sub
cwtl
loope
loop
jo
and
arpl
lahf
sbb
sub
shl
fld1
cmp
jg
pop
jbe
loop
push
push
and
rep
pop
or
sub
push
mov
fcmove
adc
jl
js
cmp
mov
sbb
sub
or
cld
add
xor
inc
pop
mov
jne
cmp
pop
sbb
jb
shll
data16
sub
sub
lods
or
add
cmpsb
fcmovnb
repnz
inc
aaa
xadd
push
out
fstpt
xchg
outsl
adcb
stos
push
cs
in
dec
mov
scas
jge
or
cmp
call
sub
mov
lea
leave
xchg
xchg
pop
xchg
bound
je
mov
shll
lods
pop
scas
orps
jnp
push
push
addr16
or
mov
pushf
daa
ret
mov
add
jp
inc
insl
mov
jp
ffree
fld
movsl
ds
cmpsb
lcall
push
jg
addr16
jmp
add
adc
and
popa
loopne
mov
jp
pop
mov
add
push
cs
mov
xchg
stc
push
mov
mov
lock
lock
aas
jle
inc
cs
sub
pop
push
std
mov
xlat
in
dec
pop
and
xchg
cmpsl
out
lea
scas
and
pop
pop
fwait
jle
inc
imulb
lret
mov
sub
cmp
mov
repnz
stos
ja
inc
jge
and
dec
sub
mov
mov
xor
cmp
bound
pop
xchg
les
gs
or
sbb
shl
clc
je
repnz
lds
or
xchg
xor
jno
outsb
adc
scas
ljmp
push
fdiv
and
notb
dec
push
sub
fisubs
stos
mov
inc
insb
and
push
pushf
mov
lods
out
xchg
push
or
pusha
rorb
out
mov
lea
scas
mov
in
cmc
mov
mov
sbb
mov
xchg
jmp
xorb
push
dec
loope
ret
mov
sub
adc
sub
cmp
mov
pusha
mov
pop
and
cmc
ds
xor
cmc
mov
repnz
orl
jecxz
clc
xchg
mov
shrb
mov
xchg
xchg
clc
les
inc
clc
sub
jmp
lahf
cld
iret
cmc
scas
mov
adc
cmp
inc
jge
pop
push
pushf
iret
add
dec
mov
pop
pop
adc
jle
fsub
pop
cli
movsb
rcrl
bound
push
sbb
dec
les
mov
lahf
lcall
fwait
dec
loop
pop
nop
in
dec
cmpl
sbb
jb
fistpl
stos
inc
add
xchg
cmp
js
sarb
sbb
push
daa
js
shlb
out
jle
sub
cmpsl
mov
lcall
jnp
xchg
fldcw
cmp
stos
jl
cmc
sub
cltd
int3
aaa
add
adcb
cmp
xchg
or
xor
loop
xor
jmp
fnstcw
add
inc
out
gs
add
mov
pop
inc
std
inc
adc
push
jmp
jmp
movsl
icebp
data16
loopne
inc
rorb
push
in
dec
pushf
nop
lea
popa
mov
call
in
cmpl
lret
mov
push
stos
aad
jns
push
push
fnstenv
mov
cmp
aam
sbb
mov
xchg
jnp
das
sub
xor
paddusw
and
bound
push
xor
push
inc
pusha
mov
pop
movsb
dec
hlt
outsb
loope
xor
xor
daa
inc
stc
pop
dec
pop
inc
popf
ficomps
rcr
fsubs
shlb
arpl
jne
fidivs
fs
xor
ret
lea
hlt
mov
push
xchg
bound
movsb
mov
movsb
adc
or
cltd
add
mov
dec
fwait
and
sub
pop
or
pop
sub
pop
dec
adc
testl
push
xor
in
push
cld
movsl
mov
dec
or
xor
mov
sub
fldenv
into
orb
push
cmp
lods
imull
cmp
jbe
and
xchg
xchg
aad
and
std
repz
data16
push
sub
out
subb
jae
sbb
popa
mov
xchg
out
rcll
repnz
repnz
out
mov
push
fsubrp
loope
sub
push
mov
cli
xchg
mov
outsl
mov
fildl
fsubl
lods
add
xchg
hlt
in
or
push
lds
test
lods
das
movsl
aaa
imul
andl
sahf
lods
mov
or
loope
add
movsl
shlb
sub
insb
addr16
add
lods
pusha
or
fisubs
and
add
out
push
ds
push
push
test
xor
mov
pop
popa
leave
xor
insb
aam
aaa
out
shlb
lcall
es
stos
movsb
inc
push
jecxz
mov
mov
repz
or
call
in
stos
sbb
lea
lret
add
imul
pop
pop
jg
cltd
dec
mov
iret
addb
add
mov
xor
pop
pop
nop
lea
add
cmp
mov
pop
xlat
mov
mov
sbb
cmp
cmp
ficompl
rcrl
sbb
lock
jmp
fnstsw
and
xchg
xlat
cmp
xor
push
xchg
jge
sbb
inc
aaa
and
aad
push
xlat
out
sub
insb
imul
in
ljmp
lea
dec
xor
shlb
pop
jb
push
iret
dec
xor
arpl
jns
dec
push
test
xlat
inc
or
inc
fstpl
stos
mov
out
loopw
mov
cs
sub
pop
mov
icebp
imul
mov
cld
lods
sbb
popa
adc
mov
sub
pusha
das
flds
outsb
sub
lods
add
mov
fstpt
or
out
push
mov
pusha
shll
or
sbb
pop
jns
pop
faddp
lahf
andb
outsb
xlat
mov
jmp
arpl
add
xchg
mov
sahf
inc
stos
push
in
rcl
xchg
inc
jnp
shrl
inc
fldcw
push
push
dec
jae
push
xchg
add
ret
out
push
xor
int3
repnz
adc
cmpsb
jmp
xor
in
jle
pop
lret
int
cld
cmp
fadd
popa
xor
sbb
cmp
shrl
pop
sub
push
sbb
popa
fwait
or
jle
shll
inc
add
pop
or
ds
pop
movsl
test
fcomi
jb
mov
roll
mov
pop
fisubrl
bound
xchg
xlat
cli
aam
xchg
cmpsb
aad
aaa
inc
pop
or
pushl
add
repnz
pop
dec
push
cmp
push
repz
jecxz
mull
adc
and
and
inc
out
or
outsb
jmp
or
aas
stc
aam
sub
pop
adc
jno
imul
or
jno
ret
inc
pop
pop
mov
jo
dec
popf
xor
mov
xor
popa
loopne
add
insl
rolb
sbb
test
push
xchg
jmp
push
mov
rolb
add
subb
mov
push
push
inc
fimuls
mov
stos
mov
or
fs
sub
inc
call
jno
arpl
mov
sbb
xchg
ss
fs
imull
mov
cltd
dec
scas
fadd
je
sbb
test
jbe
cmp
out
fcom
adc
daa
cmpsb
out
sbb
inc
or
jo
pop
add
adc
jl
xchg
mov
stc
mov
fdivl
inc
nop
jg
dec
mov
xor
leave
jg
lcall
loope
mov
fcomi
andl
pop
mov
cwtl
fneni(8087
loope
add
shll
sub
inc
rcrl
dec
pushf
sarb
jmp
data16
scas
or
imul
and
lea
dec
jb
mov
adc
xchg
xchg
scas
dec
mov
jb
dec
inc
loope
lahf
sub
add
pop
stos
outsl
aam
and
out
fisubs
sub
add
add
dec
in
xor
xchg
pop
loopne
xor
inc
cmc
mov
dec
sbb
pop
adc
clc
dec
int3
mov
mov
inc
out
jnp
dec
push
lds
pusha
jp
cltd
inc
lea
add
xchg
inc
dec
dec
jbe
out
pushf
testb
xor
int3
jge
cld
lcall
lds
les
lods
sub
xchg
cmc
cmp
xchg
fnsave
addr16
add
sbb
add
popa
mov
jmp
mov
fucomp
fwait
popa
jb
gs
movsl
into
cmpsl
inc
aam
in
add
pop
addb
push
jbe
mov
popa
lcall
mov
pop
cmp
adc
movsl
xchg
xchg
jle
and
adc
aaa
call
add
fsubrl
lret
ljmp
mov
cwtl
and
fwait
inc
cli
fs
adc
pushf
sub
jg
or
jae
fistpll
fiaddl
inc
sbb
mov
daa
mov
popf
or
mov
bound
std
pop
cltd
sub
mov
and
xchg
testb
mov
div
iret
insl
sub
imul
loope
mov
mov
push
loop
dec
sbb
push
adc
ds
jb
fwait
xor
jmp
lods
stos
out
xchg
pop
gs
cwtl
mov
lods
dec
cmpsb
dec
ja
stos
mov
imul
lcall
rcrl
xor
bound
das
fs
out
in
mov
sub
sbb
lods
xlat
and
iret
add
incl
sub
pop
test
scas
leave
popl
jb
inc
or
cmpsl
adc
inc
mov
mov
jle
sub
pop
pop
pusha
xorl
xchg
jge
pop
jb
fldcw
lea
pushf
pusha
add
jbe
cli
addr16
js
ret
std
test
pushf
lret
mov
repnz
rolb
das
inc
filds
xchg
jo
rclb
jmp
pop
jge
popa
mov
push
sbb
add
push
xchg
inc
push
jne
mov
jmp
addb
jae
push
add
mov
popa
sahf
fbld
jl
inc
test
fcompl
add
aam
movsl
jg
sbb
lret
push
scas
shrl
xor
mov
jno
push
shrl
add
push
insb
adc
movups
mov
int3
adcb
jmp
mov
fistpll
sub
inc
outsl
xchg
popf
ret
and
sub
sbb
pop
aad
and
cltd
sub
jno
xor
pop
lret
and
std
jae
and
push
adc
pop
and
lock
clc
or
in
lea
add
scas
stc
enter
or
std
sub
gs
sub
push
loope
lahf
fcoml
aaa
add
cmp
test
push
cmp
loope
sbb
pop
lds
insl
aaa
push
in
cmpsl
cltd
insb
jge
das
ds
int3
jmp
or
jnp
aas
mov
mov
mov
cwtl
mov
les
daa
cltd
das
jo
and
mov
adc
call
cmp
sbb
hlt
cmp
add
test
inc
sub
mov
lahf
sbb
sub
xchg
in
loopne
cmc
jnp
and
fwait
jge
data16
push
scas
push
cmpsb
jne
and
std
dec
in
mov
sbbl
dec
adc
das
pop
jl
outsl
mov
ljmp
int
jb
lret
adc
test
xorl
cwtl
mov
dec
aam
scas
or
sahf
mov
adcl
jmp
fsubs
inc
jbe
dec
stos
or
fwait
pop
test
mov
ljmp
push
adc
sti
ret
xchg
fsubl
push
cmp
sub
leave
shlb
orl
les
sub
das
cmpsl
fs
mov
cmpsl
test
ficoml
cmp
cmp
add
push
and
rorl
dec
incb
mov
xor
call
mov
gs
fnstenv
dec
xor
push
pop
inc
popa
pop
mov
jge
pop
sbb
jmp
adc
imul
cmp
ds
int
fcomps
xlat
xor
push
or
lods
and
pusha
jmp
jecxz
xor
dec
out
push
push
ss
mov
daa
pop
xchg
and
in
inc
lods
in
frstor
cli
hlt
dec
dec
inc
and
ret
mov
cmpsb
inc
lcall
sub
mov
dec
cmpl
icebp
xchg
lcall
gs
inc
sbb
dec
or
int
inc
xor
in
add
jp
in
dec
sub
into
add
mov
push
sbb
ffreep
gs
cmova
push
cmp
ret
cli
ja
sbb
cmc
shr
push
adc
pop
cmpsb
pop
push
xchg
cmp
cmpsb
fisubrl
out
fwait
fwait
mov
push
pop
imulb
shlb
incl
inc
in
inc
pop
adc
or
rcrl
mov
icebp
sbb
cwtl
pop
and
gs
aas
call
mov
cltd
loope
xor
jb
push
addr16
dec
pop
lret
addr16
fcmovnb
lahf
push
push
je
in
lods
jae
push
test
xor
dec
cmpsl
fildll
mov
hlt
not
push
mov
xchg
mov
sbb
xor
cmp
mov
sbb
xchg
xor
push
mov
or
push
jp
out
inc
dec
bnd
xchg
mov
mov
jmp
push
ds
mov
in
stos
mov
cld
add
mov
inc
test
stos
out
xchg
mov
test
jnp
insb
fwait
aad
aad
and
pop
stos
or
sahf
stc
dec
and
stos
xchg
add
dec
cmpsl
and
jnp
adc
ret
jecxz
subl
jbe
cmp
pop
pop
add
xor
ljmp
loop
aad
les
decw
adcl
sahf
pop
data16
pop
dec
pop
lea
es
lcall
mov
add
outsl
jo
shlb
dec
inc
xchg
xchg
stos
pop
ja
into
jl
xor
and
cmp
fildl
smsw
push
shlb
push
cmp
jle
cltd
lret
mov
lret
aas
add
shll
mov
jecxz
fisubrl
fildl
inc
int
sub
cli
and
addr16
pop
sub
push
nop
sbb
pop
mov
push
xchg
loop
jge
xchg
adc
out
pop
pusha
push
fsincos
jp
pop
movsb
add
ljmp
xor
jg
or
scas
and
pop
dec
or
adc
push
js
add
dec
cmp
dec
rcll
jb
pop
das
push
cmc
orl
sbb
mov
fisubrs
push
xor
or
inc
adc
jnp
test
mov
dec
xchg
inc
mov
repz
stos
je
inc
in
js
hlt
mov
les
jno
xchg
mov
fnstcw
out
jg
out
and
xlat
gs
aaa
sbb
push
cmp
adc
cs
insl
lds
sbb
lea
lods
push
fsubs
popa
insl
dec
rcrl
cmp
icebp
out
enter
mov
add
xchg
jg
adcb
aaa
pop
xchg
dec
dec
xchg
push
xlat
jl
pop
fsubrp
clc
stc
out
jo
xor
cmp
inc
outsb
std
push
jmp
xchg
sub
lods
adc
scas
enter
and
das
lret
addl
popf
cltd
and
dec
pop
cmp
mov
call
daa
enter
push
sub
imul
fistpll
xchg
or
stc
inc
or
je
loopne
sti
mov
test
push
mov
lock
outsl
hlt
mov
dec
into
repz
mov
sahf
jo
mov
lcall
cmp
ja
lcall
mov
jmp
sub
shrd
cli
sub
jbe
jl
mov
in
scas
pushf
fimull
mov
lock
gs
inc
mov
jo
jge
adc
lods
adc
lods
and
pop
pop
fidivrl
mov
mov
and
js
pushl
iret
dec
rcll
cwtl
adc
scas
and
dec
sbb
out
push
test
push
imul
aas
or
test
fdiv
dec
es
ss
hlt
clc
sbb
repnz
cmp
jo
out
scas
sub
repz
lock
xor
mov
xor
push
into
cmpb
leave
xchg
aas
and
out
insb
adc
sahf
xchg
jae
pop
movb
pop
adc
in
push
push
std
out
mov
sbb
cmp
das
or
aaa
adc
adc
sub
pop
int3
jmp
stos
inc
pop
in
sub
loopne
in
fcmovu
rcrb
xchg
fs
and
push
cmpl
pop
sbb
pop
sub
push
push
adc
sub
imul
es
add
xor
imul
test
cmp
xor
mov
out
fldt
test
das
xchg
out
rcl
mov
in
add
pop
clc
push
or
push
push
pusha
dec
cld
xor
push
jmp
xchg
jge
mov
or
pushf
jno
cmp
test
lods
xlat
cltd
mov
mov
pushf
xchg
jbe
jae
pop
xor
xchg
movsb
xchg
dec
ljmp
inc
push
mov
lock
jp
ss
icebp
inc
pusha
mov
scas
sbb
scas
adc
xor
sar
mulb
daa
sahf
bswap
imul
or
clc
hlt
fsubp
mov
lret
pop
iret
inc
das
dec
stos
inc
cmp
addr16
into
xchg
inc
and
and
pop
mov
inc
push
pop
pusha
lahf
dec
lea
xor
mov
jno
mov
cltd
adc
sbb
iret
and
and
sub
jne
jmp
jecxz
xor
and
rclb
sbb
call
shr
mov
pop
imul
shll
adc
xchg
dec
mov
mov
push
inc
int3
addr16
jecxz
mov
cmp
movsb
inc
outsb
mov
ljmp
shl
cmp
faddl
fisubrl
cmp
xchg
mov
rcrl
lahf
mov
and
rcr
std
sti
add
inc
mov
ds
mov
sub
lds
sbb
into
pushf
xchg
into
loop
add
mov
adc
in
sbb
imul
ds
add
sbbb
les
fidivrl
adc
mov
ja
outsl
jns
je
adc
push
adc
popf
cmp
push
out
loope
movsb
aad
dec
xor
movsl
jmp
pop
arpl
add
scas
jae
icebp
jp
adc
movsl
mov
cwtl
pushf
dec
nop
mulb
pop
enter
sub
dec
sub
repnz
stos
fisubrs
xlat
pop
test
pop
fiadds
push
scas
cmc
pop
fisubl
fs
mov
sbb
lahf
inc
cmp
mov
sbb
mov
xchg
stos
sub
jo
push
ficoms
inc
inc
jnp
xor
cmp
repz
clc
stos
stos
stc
push
dec
sbb
mov
mov
inc
aas
push
xchg
cmp
pop
mov
or
mov
mov
push
cmp
test
mov
paddd
add
flds
adc
cld
jmp
scas
push
cli
fs
clc
out
fwait
leave
cmc
mov
repnz
cli
adc
mov
inc
jns
ds
sbb
jle
icebp
test
in
outsl
fsubrl
xchg
lock
pop
mov
pop
and
cmp
cmp
push
mov
xchg
xchg
aaa
icebp
mov
mov
xchg
xlat
pop
add
jp
dec
addr16
adc
decl
add
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
xor
xor
and
movl
mov
sub
mov
and
mov
xor
add
mov
movl
mov
sbbl
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
xor
push
mov
mov
add
mov
mov
mov
mov
jmp
push
add
mov
add
inc
icebp
jne
sbb
sub
bound
test
inc
fildll
mov
xchg
ror
xchg
lock
pop
scas
pusha
pusha
ljmp
insb
das
loopne
je
adc
shlb
add
pop
push
lods
add
sub
jp
in
mov
mov
out
mov
cmp
aas
icebp
pop
dec
jno
out
mov
loope
int
sub
loope
rcll
imul
mov
mov
sahf
shrb
aad
stos
add
ss
test
js
push
leave
xchg
cmp
subb
insb
fisttps
out
pop
pushf
pop
cmp
loope
in
in
arpl
jae
ljmp
xorb
fwait
jle
pop
fdiv
or
movsl
or
dec
lods
data16
push
inc
mov
into
sbb
fucomi
and
dec
push
inc
lret
inc
cmp
adc
cmp
in
or
cmp
jb
fidivrl
popa
cmp
dec
lods
cmpsb
adc
addr16
jbe
push
in
cmp
add
add
push
je
jmp
repz
push
mov
xchg
and
jbe
push
int3
shr
aaa
xlat
mov
dec
test
negl
jecxz
sbb
dec
out
or
sub
adc
test
stos
scas
fnsave
scas
aaa
in
in
mov
lcall
scas
insl
sbb
add
iret
pusha
ret
xchg
mov
inc
add
cmp
repnz
cmpsl
dec
push
pusha
ljmp
cmc
push
sub
add
rcrl
subb
js
sub
test
jg
push
aad
add
daa
adc
mov
cmp
push
add
add
mov
sti
cwtl
cwtl
loop
push
inc
mov
out
xchg
insl
sahf
adc
or
push
adc
mov
gs
sahf
xchg
mov
lods
xor
scas
out
lods
outsl
repnz
xor
loope
stos
xchg
rcl
sub
dec
mov
movsl
loop
cwtl
push
pop
mov
add
mov
aaa
xor
shr
push
push
sbb
adc
dec
mov
cmp
stos
push
int3
mov
fidivs
add
mov
inc
out
jl
mov
mov
pusha
cmp
clc
push
loopne
int3
push
jnp
or
inc
ret
mov
insl
push
cmp
xor
test
popf
pop
and
lods
push
sbb
shll
add
fs
lret
insl
mov
add
xor
lds
mov
into
in
cmc
data16
daa
jnp
sbb
mov
and
fimull
or
add
or
mull
lcall
sbb
mov
sub
cmpsb
push
sub
lds
sbb
scas
cmp
sub
push
add
daa
push
or
push
fldenv
popf
repz
in
sbb
push
mov
outsl
inc
int
pop
mov
add
mov
jp
inc
sbb
mov
out
mov
daa
cmp
out
movsl
sub
adc
call
movsb
les
and
push
faddp
int3
into
outsl
icebp
movsl
cmp
and
push
repnz
dec
cmp
cltd
inc
cmp
mov
mov
mov
jl
sar
nop
dec
pop
fsubs
arpl
inc
sbb
fs
mov
test
cli
rcrl
mov
inc
xor
mov
in
adc
in
cmp
pop
cmpsl
push
adc
mov
cmp
jmp
or
jne
dec
outsl
push
arpl
lock
sbb
and
xor
xor
push
fisttpll
lods
je
push
shlb
lahf
loop
inc
mov
inc
cmp
inc
adc
lea
inc
push
jo
dec
ja
sbb
in
jne
push
inc
add
and
aaa
mov
xchg
bound
sbb
pop
and
cwtl
adc
decl
loopne
js
add
push
cmp
mov
cmp
push
test
xchg
pop
dec
icebp
testl
test
arpl
jmp
aam
mov
imul
jmp
mov
arpl
int3
inc
test
jmp
out
daa
mov
inc
hlt
cwtl
fs
xor
sahf
mov
dec
in
bound
sub
pusha
push
or
mulb
mov
jns
or
call
push
or
inc
push
stc
loopne
push
fs
mov
xor
inc
popa
repnz
mov
out
call
pushf
jmp
dec
vmovdqa
rorb
dec
dec
lahf
jle
sti
and
mov
jg
jmp
jecxz
pop
jae
test
adc
shrb
sbb
imul
or
aad
sub
es
add
sub
daa
repnz
enter
shlb
lret
cmc
and
or
push
mov
popf
push
jae
jmp
out
ljmp
icebp
aas
jl
mov
jmp
push
xchg
pop
sub
cmp
push
in
iret
outsl
mov
loope
sbb
ljmp
subl
sti
das
std
lock
dec
cmp
add
clc
sbb
or
or
insb
and
xlat
mov
mov
jge
inc
imul
xor
push
shrb
or
ret
add
xchg
jmp
popa
rorl
push
rorl
push
out
imul
adc
adc
sbb
in
out
xor
ja
sbb
pop
fstpl
sbb
in
je
mov
stos
inc
cwtl
mov
xchg
test
push
outsb
cli
xchg
mov
cli
stos
ret
decl
push
sub
add
sbb
test
les
cmpsl
sub
ficomps
rcr
movsl
stc
hlt
insl
aam
popa
fisubrl
jno
imul
adc
scas
stc
mov
and
cmpsb
mov
adc
mov
xchg
jge
loopne
jns
cs
dec
mov
popa
sbb
loop
icebp
mov
movb
and
imul
addb
je
xchg
or
jmp
push
pop
jno
arpl
jp
push
les
mov
sub
mov
cli
pop
inc
or
call
mov
in
sbb
mov
leave
add
sub
fists
and
outsb
in
rcrb
gs
mov
inc
mov
jge
cmpsb
clc
test
scas
imul
fstpl
xor
lret
into
shl
and
and
int3
gs
out
xchg
fsubrl
cmpsb
cltd
push
pushf
std
repz
pushl
xchg
sbb
push
push
imul
popa
int
fcom
popa
test
pop
inc
imul
dec
inc
mov
sub
or
popa
test
add
fs
ficoml
out
mov
into
sub
stos
fisubrs
bound
cmp
orb
mov
arpl
cli
mov
push
cmpl
xchg
jmp
jp
cli
lods
out
jmp
adcl
xchg
sbb
push
std
push
fs
fadd
sub
leave
daa
push
jnp
mov
xorl
inc
fbld
push
sub
pop
stos
call
test
mov
lods
add
lods
insb
xor
adc
enter
cmp
jnp
inc
lret
xor
jl
stos
fmul
scas
add
in
out
outsb
scas
ret
cld
call
scas
jne
push
mov
imul
out
xchg
dec
into
pop
cmp
and
push
rcrb
gs
cmp
mov
cmp
xor
enter
or
sbb
js
push
jl
mov
and
push
mov
gs
xor
or
or
test
push
mov
repnz
rep
rcrl
outsb
arpl
jg
jb
call
in
repnz
xchg
inc
loop
inc
dec
add
outsl
jo
push
mov
popa
ds
or
jl
pop
sbb
out
loopne
fisttpl
cwtl
pusha
imul
test
int3
ret
decb
neg
cmp
fst
lock
jl
mov
out
ds
loope
xchg
insl
add
js
mov
aam
jle
cmp
shl
dec
add
jb
das
int
in
lods
gs
dec
xchg
arpl
fiadds
sbb
sbb
jne
jmp
jae
sbb
xor
dec
jl
flds
xor
sbb
outsb
push
xor
test
and
sbb
xchg
hlt
add
sub
sahf
sbb
xchg
shl
xchg
fistpll
xchg
mov
sub
xlat
in
sbb
incl
add
push
dec
add
xor
mov
movsb
bound
int3
clc
jle
sbb
mov
stos
mov
fcoml
sbb
call
xor
jle
jmp
fwait
xchg
repz
xorl
hlt
inc
out
imul
and
jo
into
push
inc
push
add
dec
dec
push
in
cltd
insb
cmp
xor
mov
aad
sti
pop
xor
repz
push
rorb
xor
outsl
je
xchg
out
mov
insl
cli
dec
or
inc
in
gs
aaa
mov
enter
sbb
adc
or
inc
dec
sbb
cmp
aas
scas
call
sahf
lea
xchg
clc
mov
or
jg
cmpsl
jb
cmpsl
jno
ljmp
push
jge
add
rcrl
cmp
mov
lahf
jns
fcomps
or
cltd
cmp
ja
mov
insl
sbbb
sub
aaa
popa
fists
and
out
rcr
cmp
sub
sub
cli
mov
inc
aas
add
mov
push
pop
daa
imull
xchg
sbb
xchg
mov
in
out
lahf
push
sbb
fidivs
ss
adc
rol
mov
ret
outsb
test
in
push
adc
rol
jmp
dec
clc
cmp
adc
jne
mov
cmp
gs
adc
or
jne
fldl
fsubrs
lods
add
xchg
or
sbb
mov
cwtl
xor
cli
ret
xchg
outsb
sbb
aas
fmul
pusha
fcoml
inc
cmc
jne
es
ja
daa
xor
imul
jmp
mov
imul
mov
mov
dec
add
dec
mov
dec
xor
pop
add
jmp
cmp
aaa
inc
pop
dec
mov
cwtl
loope
pusha
pop
jp
sub
or
mov
nop
inc
outsl
mov
sbb
and
bnd
das
ds
adc
pop
cli
jecxz
mov
insb
negl
push
inc
or
andl
xchg
and
add
test
adc
ret
lcall
ss
enter
sbb
insb
outsl
into
xchg
sub
xchg
and
push
andl
push
jl
dec
mov
inc
fstpt
cmp
int3
pop
sahf
jl
inc
gs
stos
push
sti
stos
sahf
adc
out
dec
insl
sbb
inc
cs
testl
sbb
sbb
adc
or
test
mov
jne
popa
xor
mov
arpl
arpl
pop
mov
jle
jbe
or
lods
sbb
add
xorb
jge
popf
push
jle
mov
or
push
cs
andb
cmc
fdivp
add
pop
das
test
pop
push
and
push
cmp
inc
sub
ds
push
pop
ret
fstpt
shlb
inc
pushf
or
pop
and
push
fidivrs
mov
xchg
fcoms
out
cli
pop
jo
sub
mov
in
inc
mov
insl
mov
dec
xchg
ljmp
xchg
pop
movsb
inc
xor
and
pop
scas
mov
shll
add
mov
call
cmpsb
iret
sbb
es
add
fcoml
xchg
mov
push
test
xchg
imul
lock
cmpsb
and
jbe
push
mov
xor
jp
mov
leave
dec
popl
push
faddl
lea
adc
cmc
in
fdivl
cmpsb
mov
mov
xor
pop
cmp
sbb
cli
or
repnz
adc
lods
xchg
out
xchg
and
mov
fyl2xp1
sub
push
jae
leave
mov
cmp
in
stos
cmp
scas
or
mov
rcl
aas
pop
fidivrs
mov
stc
sbb
test
sti
idivl
aam
dec
outsl
xchg
sub
sbb
sbb
sub
in
and
adc
dec
dec
xchg
lahf
fiaddl
pushf
push
mov
lcall
or
stos
mov
jns
inc
and
out
jo
dec
jae
mov
sbb
pop
mov
lea
out
repnz
cltd
add
enter
dec
jmp
inc
or
cmpsb
mov
ret
icebp
or
fmulp
sub
test
je
sbb
ss
lcall
cmp
call
repnz
sbb
jns
outsb
ficoml
pop
or
imul
popa
pop
cmpsl
stc
testb
sbb
fs
outsl
pop
push
sub
imul
rcrl
add
es
dec
in
inc
xor
aas
out
xor
mov
movsb
jle
cmp
jecxz
cli
mov
das
stos
inc
scas
in
je
lret
cld
cmp
push
in
icebp
stos
std
sub
inc
xchg
lods
sub
mov
out
jmp
clc
or
push
xchg
xorb
loopne
icebp
test
pop
insl
jo
in
fsubs
loop
xchg
pop
xchg
pop
cmc
xchg
je
sti
mov
aad
shlb
pushf
bound
aaa
dec
mov
lods
repz
ja
jmp
dec
lahf
icebp
ljmp
mov
mov
lret
jb
xchg
stos
aam
lret
or
dec
pop
sub
mov
add
aaa
arpl
scas
mov
cld
jno
dec
sub
subb
inc
mov
mov
sbb
or
shll
fadd
adc
sar
testl
jl
mov
gs
xchg
mov
jmp
es
das
xor
pop
add
mov
aam
or
adc
sub
jmp
push
adc
gs
inc
dec
dec
mov
sbb
sbb
push
or
lods
jns
jne
or
ret
xchg
imul
scas
pop
xorl
popf
add
pushf
mov
movsl
jmp
xor
xchg
mov
int
inc
lcall
lcall
clc
push
out
dec
popa
cwtl
pop
daa
jne
jecxz
jg
mov
out
xchg
data16
xchg
or
mov
and
out
pop
mov
and
in
jne
pop
bound
mov
cmpsl
mov
stc
xchg
push
xor
dec
and
push
mov
push
pop
xchg
jnp
sbb
shlb
mov
push
fsubl
adcb
jecxz
aam
addr16
push
mov
daa
cmp
jo
ljmp
aam
js
mov
cli
add
jmp
and
pop
lods
mov
jg
cltd
push
dec
fdivl
cmp
inc
stos
push
xor
and
test
xchg
ret
jecxz
and
divb
out
in
and
and
mov
pop
jb
inc
mov
dec
sub
jecxz
sub
and
repnz
fs
and
mov
das
add
sub
mov
repz
push
je
adc
ljmp
and
xor
xor
setg
push
xchg
lods
loopne
xchg
loopne
xor
inc
jne
loop
fdivrs
sbb
jo
mov
inc
cmp
test
mov
jle
jnp
mov
jns
add
pop
cld
pop
int
cs
or
mov
enter
xor
pop
insl
adc
sbb
xchg
sbb
out
adc
cmc
push
jp
mov
scas
mov
fldt
repz
dec
ljmp
inc
xor
lret
add
shll
sub
jbe
scas
dec
cmp
ljmp
test
jmp
repnz
inc
or
cld
sub
cmp
enter
iret
dec
testb
sub
push
pop
jbe
pop
stc
sbb
scas
pop
into
inc
lods
mov
pop
ljmp
jle
dec
ljmp
les
pop
std
xchg
push
in
inc
xchg
or
or
mov
outsl
xchg
sub
dec
adc
leave
lcall
sar
hlt
test
cmc
sub
rcl
repnz
imul
pop
in
bound
xchg
shrb
test
pop
xor
push
and
aas
stos
ljmp
int3
es
insb
pop
shr
movsb
cmp
loope
inc
fisubrl
cmc
dec
ret
cmp
movsb
into
lcall
test
test
fnstcw
add
js
xchg
jg
cmp
ss
xor
cmp
ficoml
xor
adc
pusha
adc
push
iret
inc
in
idivl
inc
mov
and
mov
mov
icebp
xor
or
clc
push
push
jg
push
adc
or
std
xchg
mov
fsub
pop
mov
adc
mov
mov
dec
ret
jo
jge
ds
push
sub
sbb
ret
or
and
mov
int
in
and
xchg
push
inc
sub
pushf
jbe
adc
fldlg2
inc
and
fidivs
mov
add
xchg
das
dec
mov
aaa
mov
push
mov
sub
repz
in
push
jne
incb
data16
xchg
add
repnz
or
outsb
jne
repz
xchg
in
dec
mov
mov
jbe
shr
cmp
imul
into
fsubl
gs
xor
insl
and
mov
jge
cs
ret
mov
inc
enter
aad
jmp
push
jp
lds
mov
jns
dec
xchg
mov
or
pop
outsl
mov
sti
nop
sti
fld
sub
test
mov
loopne
cmovne
out
pushf
jg
cmp
pop
add
call
xchg
xchg
inc
mov
cmpsb
sub
mov
push
lcall
cmp
pop
sbb
push
fwait
adc
outsb
pop
push
fs
roll
add
repz
xor
je
jle
mov
and
inc
rcrl
add
sub
stos
cmp
shll
outsb
cwtl
into
out
ret
vmovaps
jae
xor
adc
pusha
mov
and
inc
jecxz
push
jge
mov
int
ret
cmpsb
or
cmp
je
push
mov
lods
push
data16
aaa
dec
loop
sarb
pop
jns
mov
and
aaa
ja
inc
xchg
inc
popa
aaa
push
je
inc
push
loop
addr16
mov
rcll
pop
int
xchg
cmpsl
dec
sbb
sub
arpl
mov
inc
sub
and
imul
out
out
adc
mov
and
icebp
fadds
jecxz
cmc
push
mov
ss
nop
notb
mov
leave
unpcklps
nop
insb
mov
jmp
add
xor
adc
in
mov
pop
dec
dec
xchg
mov
sbb
adc
or
in
cmp
xor
loopne
cmp
add
addr16
fdivrs
dec
mov
jmp
and
lahf
pushl
push
fcmovbe
mov
mov
cmc
in
outsb
pop
repnz
repz
push
mov
aaa
and
pushf
rclb
dec
lret
lret
paddsb
cmpsl
sbb
jp
xchg
lcall
sub
ja
cmp
mul
sbb
push
scas
popf
or
lahf
and
test
xchg
movsb
xor
cmp
xor
pop
jbe
xchg
movsb
cmp
or
xchg
pusha
nop
xchg
aaa
sub
push
xlat
jp
mov
pop
dec
stc
aaa
adc
add
ret
adc
jmp
idivl
xchg
call
cmp
pop
movsl
xchg
cmpb
out
xor
cli
inc
out
addr16
aas
data16
mov
popa
push
cld
xchg
lret
mov
dec
mov
cmp
fiaddl
pop
fadd
insb
sub
scas
push
fs
lea
cld
xchg
jmp
int
int
sbb
dec
pop
xchg
mov
sahf
jo
inc
mov
cmp
cmc
out
cs
loopne
out
iret
push
fdivrs
push
mov
xchg
mov
add
dec
sbb
jbe
lcall
testl
inc
xchg
jae
adc
pop
daa
rorl
ds
clc
jnp
and
pop
in
push
push
sub
fimuls
bound
sub
pop
addr16
mov
mov
test
cmp
xchg
mov
mov
ss
and
js
jl
pop
jecxz
cmp
pop
ds
ljmp
adc
mov
stc
inc
xor
cmp
jno
call
add
in
jg
or
leave
lods
ja
dec
ja
or
adc
dec
jbe
mov
cmp
shrb
ljmp
mov
cmp
js
cmp
daa
pop
and
pop
xor
adc
dec
jb
loopne
lcall
mov
and
xchg
mov
repz
pop
cmp
sbb
mov
rolb
mov
imul
inc
cs
sub
fstl
mov
dec
daa
fdivp
inc
notb
xchg
mov
out
fs
cmp
imulb
call
sbb
lods
mov
aaa
in
mov
mov
bound
xchg
in
jecxz
mov
fimull
or
mov
xchg
les
push
call
pavgb
jne
mov
push
mov
push
andb
add
and
push
jns
idivb
pop
out
fwait
add
ja
mov
insl
insl
sbb
push
add
cld
loopne
inc
repz
jno
push
cli
fdivs
inc
movl
mov
and
adcb
xor
and
leave
mov
mov
push
mov
rcrl
into
mov
popf
loopne
sub
rorl
bound
xor
jnp
test
flds
adc
scas
jp
inc
xlat
sbb
les
mov
aad
xchg
sti
xor
mov
faddl
or
nop
dec
add
data16
out
cmpsb
scas
outsl
in
les
inc
jg,pt
sti
mov
push
xorl
cmc
dec
pop
fmuls
lahf
sub
mov
sub
loopne
in
bound
ss
add
pop
wrmsr
fcomps
dec
enter
cmpsl
push
xchg
imul
insb
jg
fs
xchg
push
sub
clc
xchg
shr
daa
jg
inc
pop
mov
sbb
int
lret
outsl
out
loopne
lea
out
push
mov
sub
pusha
inc
add
pmaxub
stc
and
and
mov
lret
or
jo
cs
ficoml
adc
sub
cmp
cmpsl
pop
mov
ljmp
mov
jmp
and
jb
scas
rorb
cmc
xor
pop
repnz
sub
gs
cmp
sarl
call
lahf
dec
inc
dec
jge
add
sbb
cs
lret
inc
sbb
loope
ret
outsl
push
push
ret
push
shlb
mov
ja
xchg
daa
daa
repnz
loop,pt
les
push
inc
cmp
in
mov
rcrl
adc
sub
sbb
lahf
dec
mov
in
bound
int
mov
and
pop
dec
jp
and
popa
sbb
shlb
mov
ljmp
mov
outsl
and
push
lret
scas
dec
stc
subb
add
sahf
cmp
fs
stc
shrb
ret
scas
push
daa
adc
insl
test
aam
sbb
out
add
cmp
sar
movb
out
rcl
in
pop
popa
mov
xor
sbb
mov
insb
aas
inc
pop
or
mov
cmp
pusha
mov
mov
add
mov
arpl
adc
js
lret
and
jnp
shrb
mov
test
cltd
rcr
sub
pop
push
pop
jmp
jl
shlb
mov
das
sti
enter
inc
andb
inc
fcompl
xchg
cli
push
das
sbb
div
xchg
ret
ss
call
sub
cmc
push
loope
jmp
xchg
jbe
xor
cld
mov
xchg
out
icebp
jo
orb
pop
adc
ljmp
lahf
stos
out
mov
and
jg
divb
xchg
insl
jp
mov
or
fisubl
aam
sbb
push
jmp
jmp
pop
inc
ja
sahf
mov
jae
sub
std
xor
adcl
fistpll
out
cmpb
jbe
and
add
sarl
dec
push
test
dec
imul
sets
add
pop
fldl
int3
dec
sub
cli
inc
pop
test
in
sub
subl
jmp
mov
stos
hlt
aaa
out
jnp
jge
or
in
sub
dec
mov
xor
fcoml
push
push
or
lahf
xchg
xchg
push
mov
shll
xor
mov
sbb
jle
dec
ds
mov
inc
dec
cmp
cmp
sahf
mov
ja
cld
mov
leave
sbb
cli
lret
andl
inc
jno
sahf
push
shlb
inc
or
mov
loopne
push
push
pop
cs
xor
jns
jg
popa
out
or
jbe
jge
aad
pop
test
lods
sbb
dec
lods
or
enter
mov
push
jecxz
cmp
mov
fidivrl
cmpsb
pop
inc
testl
js
pushf
les
adc
sbb
cmp
dec
push
sub
sbb
pop
ret
jg
jg
push
xor
repnz
or
imul
insl
in
sbb
jbe
cltd
adc
dec
or
testb
clc
pop
repz
push
ljmp
mov
lahf
ljmp
leave
dec
in
dec
xor
testb
movq
stos
sti
int
fidivrl
mov
push
gs
lret
daa
rol
and
int
sbb
cltd
xchg
scas
call
cmpsl
insl
add
push
enter
sbb
push
jbe
adcb
sbb
hlt
mov
pop
cmpsl
inc
xchg
sbb
cld
adc
test
aad
push
push
dec
sbb
add
stc
inc
dec
popa
xchg
iret
cltd
sbb
adc
xchg
insl
int3
and
dec
ds
ja
sti
pushf
ja
mulb
cmc
or
pop
inc
jp
sbb
jle
shll
jnp
out
cmp
jecxz
mov
xchg
push
adc
xchg
mulps
push
mov
ja
xchg
xor
out
or
mov
test
pop
pop
fcomip
imul
ds
pop
push
lcall
repnz
jns
pushf
movsl
sub
xchg
mov
mov
movsl
fs
cmpsl
push
sub
lcall
in
cmp
xor
xchg
aaa
rorl
nop
subb
adc
mov
xchg
js
mov
xchg
mov
jnp
clc
sub
xor
enter
jmp
lods
mov
mov
mov
ret
xor
sub
imul
lret
shlb
xchg
push
imul
insb
fstpt
mov
hlt
or
popf
jb
js
scas
add
jecxz
movl
xor
test
mov
int3
jecxz
xlat
jbe
cmp
inc
pop
inc
or
and
loopne
mov
out
cli
adc
push
inc
mov
imul
enter
jecxz
dec
add
movsb
and
pop
ja
iret
push
lds
push
sti
aaa
pop
mov
dec
sbb
nop
stc
and
push
xchg
inc
dec
cmc
sbbb
xlat
mov
aas
and
inc
push
or
mov
insb
arpl
push
adcl
subb
or
insl
out
push
mov
in
cmp
pop
shlb
add
push
cmpl
mov
mov
pop
add
outsl
out
mov
call
shrl
nop
fisubrl
test
pop
hlt
mov
inc
int3
fwait
jae
je
push
mov
int3
pop
sub
mov
dec
sahf
pop
dec
cmp
movsb
push
jge
idivb
xchg
dec
into
and
std
pusha
ss
jb
iret
loop
cmp
push
cld
int3
sbb
in
xor
gs
aaa
xchg
mov
pop
push
sahf
pop
jg
pop
arpl
jo
jl
ret
mov
cmpsl
fstpl
cwtl
pop
loope
mov
hlt
pop
and
add
test
push
push
out
icebp
dec
sub
and
and
pop
dec
mov
sbb
xorb
sahf
or
push
imul
dec
lret
pop
mov
push
ljmp
inc
cmpsl
sub
add
js
aas
mov
lahf
cs
jecxz
pop
aad
ficomps
cs
aas
lods
out
stos
and
faddl
xchg
outsb
mov
adc
sbb
subl
mov
sbb
xlat
ja
add
sub
xor
inc
movsb
clc
jg
loope
xor
sti
mov
xchg
adc
shlb
and
lret
jne
pop
shlb
leave
inc
jns
jecxz
jecxz
test
cs
inc
dec
xorl
call
vorpd
dec
movsb
loope
or
cmc
pop
add
push
cmp
aad
shrb
rorl
mov
daa
testb
mov
js
cmp
push
sub
inc
sub
sbb
jae
ret
xor
mov
outsb
push
adc
fwait
push
iret
fidivs
jle
inc
movsb
cld
imul
adc
xor
test
in
xor
inc
loopne
cli
mov
je
or
out
jecxz
pop
mov
dec
xorl
int3
sbb
fstpl
xor
pop
leave
push
cmpb
std
hlt
xchg
jo
mov
mov
iret
mov
pop
push
pop
int
cwtl
xchg
sbb
andps
out
add
ficompl
jmp
adc
mov
xor
ja
jne
cs
jecxz
mov
js
sub
iret
inc
mov
clc
fs
mov
imul
sub
jmp
frstor
add
fidivs
pop
xor
stos
ret
jne
cmp
inc
xchg
aas
lods
out
stos
pop
dec
mov
stos
inc
ja
mov
rol
ret
scas
adc
in
xchg
mov
in
mov
push
push
or
xchg
jae
ss
xchg
jnp
fadds
push
repz
inc
sbb
or
inc
sbb
jne
mov
mov
xor
add
pop
leave
ret
push
mov
mov
sub
mov
mov
subl
cltd
sub
push
add
mov
add
inc
adc
push
push
mov
movl
mov
mov
mov
xor
xor
orl
xor
adcl
add
movl
adc
xorl
xor
xorl
xor
movl
cmp
movl
jne
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
orl
mov
orl
mov
mov
orl
xor
adcl
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movzbl
sub
push
or
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
mov
and
mov
sub
mov
mov
andl
movl
addl
movl
andl
mov
xorl
mov
sub
xor
mov
mov
sub
sub
mov
orl
add
mov
xor
mov
or
xor
mov
addl
sub
mov
mov
xor
adc
mov
notl
addl
mov
mov
sub
and
mov
mov
xor
and
mov
addl
mov
mov
xor
andl
mov
mov
mov
sub
xor
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
negl
xor
mov
add
xor
mov
sbbl
mov
xor
mov
sub
and
mov
addl
xor
mov
add
movzbl
movzbl
adcl
sub
mov
movzbl
xor
mov
or
mov
xor
add
andl
mov
andl
lea
adcl
mov
adcl
lea
mov
sbbl
lea
mov
orl
lea
andl
mov
adc
mov
sbbl
xor
add
andl
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
neg
mov
push
sbb
mov
mov
lea
add
mov
sub
mov
dec
mov
and
mov
orl
xor
add
subl
mov
xorl
mov
mov
mov
xor
mov
mov
andl
add
movl
cmpl
je
cmpl
jne
push
call
xor
add
dec
mov
jmp
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
addl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
adcl
xor
mov
mov
and
mov
add
movl
cmp
je
movl
mov
movl
jmp
mov
mov
cmp
jne
movl
push
jmp
mov
notl
mov
movl
cmp
movl
jne
or
mov
add
xor
addl
add
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
adc
mov
mov
orl
xor
add
xorl
imul
mov
sbbl
xor
addl
add
cmp
jmp
jl
lret
mov
test
rcl
ljmp
bound
pop
bound
faddl
mov
xchg
and
movsb
andb
pusha
scas
push
test
fiadds
dec
xchg
mov
xchg
add
dec
jne
or
popf
add
sub
adc
dec
sub
scas
iret
je
xchg
fldenv
pushf
shlb
lods
movsl
mov
call
jl
mov
pop
dec
xchg
shlb
mov
lods
and
push
sbb
and
scas
jmp
dec
add
subb
cmp
cmp
and
fwait
xor
xchg
popf
jl
sbb
pop
xchg
js
adc
add
and
cli
cmc
push
cs
fbld
jno
jnp
ds
in
mov
out
inc
int
shrb
inc
jno
dec
inc
xlat
xor
dec
cltd
out
lret
adc
cli
repnz
mov
push
fnstenv
fstpt
xorl
loopne
aad
xchg
adc
push
cmp
jbe
xlat
inc
movsb
enter
and
xchg
inc
jg
xor
jbe
push
jp
sbb
pop
or
shlb
hlt
xor
stos
jl
ds
xor
inc
cmpl
mov
lods
mov
mov
sahf
out
and
mov
test
mov
ja
dec
js
lret
jg
xor
sarl
adc
or
push
add
sbb
repz
add
jmp
adc
sahf
lret
push
or
scas
fstpt
and
shrl
std
ljmp
mov
jp
xor
out
pop
push
pop
cld
mov
dec
sub
dec
mov
adc
jb
push
cltd
shl
adc
popa
sub
scas
cmpsl
sub
dec
xor
movsl
mov
mov
outsb
out
jecxz
movhps
in
xor
inc
iret
rcrl
push
mov
adc
cmp
mov
mov
sub
aam
lret
inc
outsl
pop
xor
or
mov
xorl
pushaw
popa
adc
pop
loop
cmp
mov
outsl
sbb
pushf
movsl
jo
xchg
mov
sbb
cmpsl
push
push
inc
lret
push
fsubs
fs
dec
test
fistl
and
or
adc
sbb
mov
lcall
mov
push
push
mov
cwtl
cmc
push
mov
mov
inc
mov
sub
cmpsb
jecxz
xchg
xchg
sarb
mov
fildll
dec
push
inc
sub
or
ljmp
adc
call
rclb
outsl
mov
sahf
in
pop
jecxz
and
enter
mov
push
loopne
mov
push
nop
es
jp
pop
mov
or
sub
lods
push
gs
and
repnz
imul
mul
pop
dec
push
mov
imul
xchg
push
pop
jle
test
xlat
movsl
pop
out
es
adc
push
or
rcll
pop
cltd
cltd
inc
test
and
mov
outsl
mov
add
cmc
pushf
push
xchg
stos
imul
xchg
addl
cmp
cmp
fadds
fstcw
lds
fsts
jns
pop
xor
out
je
or
inc
lret
rol
cmp
cmp
insb
int
push
lock
shlb
inc
cwtl
shll
movsl
shrl
jno
push
mov
sbb
jo
negl
lcall
lret
sahf
outsb
cmp
in
pop
sbb
lds
pop
jmp
test
and
into
dec
ret
inc
loopne
rcrl
add
out
lret
cmp
fwait
adc
shr
ret
outsl
mov
sarl
mov
xchg
pop
addr16
mov
imul
loope
shrb
insb
aam
jmp
and
add
sub
xchg
push
or
aam
jmp
sbb
and
call
dec
mov
mov
push
or
pop
lcall
shl
adc
pop
and
push
notb
cs
fsubs
and
jo
xchg
fcmovnu
ret
jl
xchg
or
cmp
sbb
popa
jne
cs
xor
and
dec
push
hlt
mov
inc
push
push
jnp
add
mov
cmpsl
xchg
and
jmp
sub
add
inc
cmc
clc
add
imul
je
xor
aad
retw
xor
pop
mov
and
inc
clc
dec
adc
pushf
inc
mov
or
arpl
sub
inc
cmp
and
and
sub
ss
sbbb
inc
pop
xchg
cmpsl
push
fs
or
lea
inc
add
fidivrs
aaa
inc
call
and
mov
loopne
fstp
jle
sbb
sbb
fiaddl
inc
mov
cmp
cld
xchg
lods
rcl
sahf
push
call
adc
cmp
push
rcr
push
test
and
pop
mov
cmp
push
xlat
push
in
xchg
dec
dec
sbb
push
mov
ja
daa
sub
aas
sub
jno
adc
setp
gs
cli
mov
mov
icebp
sub
or
add
daa
ja
cmpsb
jg
outsb
aam
pushf
sub
fwait
sahf
xchg
lret
fs
adc
ret
int3
add
adc
push
sbb
movsb
push
xor
push
xchg
pusha
pop
pop
lods
xorl
fsubs
pushf
fidivrs
je
pop
hlt
sbb
pop
mov
je
icebp
pusha
adc
stos
inc
inc
jp
pop
cs
stc
add
sbb
pop
push
jecxz
xlat
push
mov
pop
aas
cmp
arpl
inc
test
or
pop
lcall
mov
mov
out
xlat
stos
and
or
outsl
shll
test
sbb
icebp
lret
or
lret
jg
pop
xchg
fst
cmpb
pop
push
fimull
dec
andl
pop
lret
in
adc
popa
rep
rcrb
enter
shl
jne
jae
sbb
mov
dec
xchg
push
mov
push
xchg
dec
push
cmp
jecxz
jmp
add
lds
cmp
pop
shl
lods
decb
xor
add
cmpsl
test
int
in
insb
jp
cltd
cmp
mov
stc
cli
test
ret
dec
rcr
sub
and
inc
leave
fsubrl
xor
cmp
cmp
dec
cltd
fwait
sub
fsub
dec
xlat
outsl
push
rcr
rcll
xchg
dec
shl
outsb
xor
add
out
pop
cwtl
fildl
cmpsl
fs
push
test
xor
aad
mov
cmp
push
movsb
cmp
out
iret
push
cli
jo
jne
js
sbb
test
xchg
je
pop
push
vaddsubpd
pop
les
fbstp
xor
in
mov
out
shl
stos
push
cmp
popa
daa
xchg
inc
xchg
jno
pusha
lret
arpl
fdivrl
lods
arpl
nop
lahf
jg
jecxz
repnz
mov
jo
fwait
jmp
mov
jmp
jns
jp
and
push
jns
xor
or
mov
dec
fstl
pop
push
mov
mov
inc
jnp
dec
cmp
sub
and
xchg
mov
into
pop
mov
int
shlb
jge
add
push
sub
mov
shl
les
mov
and
cmc
shll
jecxz
pop
lods
cli
and
add
inc
push
dec
push
rclb
sub
and
xor
add
pop
push
mov
lcall
add
xlat
sbb
sub
mov
in
lods
or
sub
mov
lret
adc
push
jo
dec
test
jbe
mov
dec
fsubrl
mov
fwait
insl
mov
adc
test
push
mov
cltd
inc
pop
rolb
xor
std
jl
add
add
in
pop
fs
and
dec
mov
in
das
sub
or
data16
lret
dec
mov
rcrb
sbb
mov
pop
shl
cwtl
popa
sbb
rcll
enter
ret
leave
movb
push
push
xchg
sbb
scas
data16
test
sub
std
int3
push
out
ret
ret
test
loop
ja
dec
adc
inc
cmp
cmc
jno
mov
push
adc
es
mov
adc
jp
je
xor
andl
sbb
cmc
push
push
sahf
lods
aas
rcrl
pop
mov
cs
push
stos
mov
lcall
jns
or
dec
xor
pop
fsubrs
in
sbb
repnz
jg
cmp
adc
sub
les
and
cmp
mov
push
push
push
das
mov
sbb
jmp
hlt
xchg
pop
popf
aas
add
mov
cmpb
inc
mov
data16
inc
pop
jmp
aas
mov
aas
sbbb
stos
nop
jle
cwtl
sarb
in
cmp
movsb
inc
pop
std
scas
dec
mov
xor
fucomp
mov
imul
ret
cmc
sbb
dec
mov
lds
inc
and
cmovge
dec
movsl
sbb
or
ds
inc
setbe
fwait
lret
mov
sub
lcall
sub
int
sar
sbb
imul
dec
adc
aam
jecxz
es
jae
out
lcall
cld
je
out
and
jno
test
out
roll
lea
and
sti
dec
inc
fidivrs
mov
popa
sbb
sarb
andl
sub
loop
lahf
adcb
movsl
movsb
dec
jl
pop
sub
scas
shll
xchg
cmp
ret
sub
xchg
stc
jb
clc
push
push
insb
cltd
scas
add
repz
xchg
or
outsb
ds
or
lods
sbb
pushf
faddl
mov
pushf
xor
pop
sbb
cmp
or
rcrl
cld
out
mov
jge
and
adcl
out
cmp
xor
cmpsl
faddl
loop
dec
cmp
xchg
jns
sub
daa
mov
cmp
and
mov
dec
pop
stc
dec
outsb
mov
ret
sbb
cmp
orl
clc
push
loop
sub
lahf
out
mov
ja
dec
nop
stos
inc
push
jne
lcall
insb
add
lea
lock
fimuls
mov
pop
clc
into
jne
insb
cmp
jbe
inc
fdivs
cld
dec
mov
sahf
leave
add
jmp
mov
inc
jle
aam
push
add
test
and
sbb
jecxz
pop
push
hlt
mov
adc
int3
mov
pop
js
int3
jns
mov
ret
mov
stc
negb
fucomip
dec
fwait
cmp
xor
add
repnz
mov
jo
mov
enter
dec
stos
inc
jle
cmpsl
popf
leave
jns
xor
ja
lock
in
call
push
pop
cli
dec
cld
cmp
and
fcmovu
lods
daa
ljmp
daa
adc
pop
arpl
sub
cmp
enter
sarb
int
les
rclb
and
push
jae
jp
call
repz
ficoms
aas
ret
sbb
hlt
lahf
pop
jo
mov
shlb
daa
call
ret
fldt
ret
push
jmp
clc
sahf
das
rcrb
push
mov
enter
mov
pop
xchg
fiadds
push
inc
stos
sub
and
adc
or
sub
pushf
in
jnp
cmpsb
jnp
int
jmp
movsl
mov
mov
pusha
and
xor
int
ja
rclb
fwait
lea
adc
add
rorb
lods
out
add
jge
in
pop
mov
push
adc
push
hlt
and
pop
or
pop
lahf
jecxz
ss
shll
sbb
mov
daa
lea
fsubrp
cmp
mov
sub
xchg
into
xchg
in
fdiv
lock
xor
stos
push
sbb
cld
pop
and
or
test
fcom
daa
and
mov
leave
pop
data16
sub
repz
bound
std
pop
sbb
sub
daa
xlat
mov
and
clc
xor
pop
pop
mov
push
ret
cltd
adc
and
pop
and
xorb
dec
mov
into
insl
sahf
mov
call
mov
nop
int
mov
ss
sub
aaa
out
outsb
xor
xor
mov
stos
test
push
in
adc
ljmp
hlt
andl
popf
or
jl
inc
scas
leave
stos
mov
sbb
iret
jo
clc
ljmp
mov
enter
data16
xor
xchg
push
adc
dec
pop
pop
ss
repnz
mov
xchg
ds
mov
push
or
mov
int
not
out
aam
mov
cs
fldt
and
mov
mov
mov
xor
jmp
mov
lods
pop
in
cmp
js
sahf
cmp
lods
cltd
repnz
pushf
push
xchg
testl
lret
popf
push
jo
adc
fimull
push
mov
xchg
rcrb
xlat
push
mov
xchg
adc
mov
fsubs
fildll
jne
pop
cmp
pop
or
adc
pusha
pop
add
outsb
subl
aaa
rorl
cld
jae
jo
cltd
push
adc
lahf
xchg
xlat
clc
and
mov
cmpsl
push
lcall
rcrb
and
pop
negb
fisubrs
xchg
pop
outsl
aad
scas
or
and
jg
lahf
iret
cld
xor
stos
sbb
push
fistps
fildl
outsb
inc
cmp
arpl
push
inc
popf
push
dec
dec
fadd
cmpsl
xor
pushf
pop
or
add
jno
test
outsb
std
mov
movsl
negb
sub
add
jp
jge
insl
and
dec
in
pop
or
iret
cltd
hlt
and
push
pop
push
or
loope
xor
test
pop
push
shl
jnp
jmp
xor
mov
and
jns
inc
fs
cs
jae
sub
insb
sarl
outsl
xchg
xor
xchg
lcall
stc
sub
xor
std
cmpsl
cmp
mov
inc
pushl
call
sbb
xchg
arpl
jl
lahf
xchg
loopne
mov
lret
lods
ret
mov
int3
pop
mov
mov
icebp
jge
sub
mov
adc
mov
push
test
jle
int3
fistpl
jb
cltd
jns
fwait
push
push
mov
jecxz
cmp
mov
jg
pop
das
xor
repz
fsubs
mov
xchg
mov
pop
clc
movsb
jbe
lods
sbb
outsb
mov
in
dec
inc
xor
adc
or
stos
ror
scas
xchg
xor
icebp
in
pop
cli
imul
daa
cmp
mov
mov
int
dec
jae
lret
and
pop
std
gs
xchg
cs
mov
or
scas
mov
adc
adc
xchg
scas
mov
fistpll
cmp
xor
push
xchg
jb
adc
mov
out
jecxz
push
pop
leave
sub
les
xchg
push
sbb
js
pop
je
aas
leave
or
std
sti
inc
lret
adc
jmp
out
leave
adc
clc
push
sbb
cmp
dec
mov
loope
sahf
repnz
fidivs
jp
sbb
movsb
pop
mov
cmc
lea
sbb
add
xchg
sti
jmp
xor
cltd
pop
mov
cmp
and
sub
jp
jns
jo
xchg
out
sbb
imul
cld
iret
nop
jo
xor
cmpsl
push
pushf
ret
pop
xchg
jno
insb
xchg
loop
repnz
lret
jns
int3
inc
lods
jo
cmp
mov
xor
int3
fistpll
or
out
test
mov
push
pusha
inc
aas
stos
inc
jge
sub
loope
sbb
pushf
mov
jne
movb
popa
lcall
popf
jnp
sti
push
ja
dec
jns
lds
in
xchg
jo
ljmp
int
and
jae
cmpsl
mov
cmp
jne
loop
in
aas
jmp
add
dec
loopne
jbe
enter
or
xchg
loopne
jnp
fcmovne
xchg
cs
jnp
mov
fmul
insb
das
xlat
jmp
je
mov
add
je
mov
add
sbb
pop
dec
ja
jmp
lcall
ljmp
orl
sbb
adc
push
scas
cs
addr16
outsl
cwtl
andb
dec
mov
loop
sbb
fisubrl
lods
mov
inc
out
inc
fcompl
outsl
imul
lods
test
or
jle
addr16
push
popa
push
or
ja
aas
popf
sbb
or
inc
cmp
lock
adc
mov
aaa
mov
jp
test
shrl
scas
lret
xor
adc
sbb
mov
jle
sbb
and
pop
xlat
mov
in
das
push
mov
sbb
pop
jns
gs
push
lahf
js
mov
test
sub
sub
movb
enter
xor
pop
insl
mov
mov
cmpsb
xor
lret
dec
in
adc
shrl
pusha
mov
sbb
jno
mov
mov
ret
loope
xor
or
addb
lods
sub
xrstor
cmp
cmpsb
clc
inc
repz
and
fidivs
mov
jns
test
mov
push
insl
mov
mov
cltd
stos
xchg
cmpsl
test
pop
in
sbb
and
aas
pusha
add
adc
ljmp
mov
mov
mov
insb
cmp
sbb
pusha
push
repz
fisttpl
xlat
inc
cmp
adc
jns
or
test
adc
movsb
add
jo
lds
pop
scas
add
ljmp
jb
cmpsb
jb
fs
fwait
xchg
pop
stos
sub
xor
push
xor
xorl
mov
enter
sbb
loope
cwtl
push
inc
mov
test
into
mov
sbb
sbb
add
fildl
cmp
andl
adc
into
outsl
icebp
lahf
imul
mov
or
jle
cs
adc
in
icebp
call
outsb
and
add
xchg
jne
pop
or
mov
add
daa
adc
out
xorl
imul
insb
adc
jle
and
or
inc
lods
mov
push
xchg
iret
cmp
xor
dec
rorl
rcl
outsb
adc
test
push
sarl
lahf
fwait
js
lret
sbb
daa
test
sbb
decl
jmp
les
jne
sbb
xchg
mov
cvtps2pd
lcall
mov
repz
hlt
mov
jle
jmp
sub
in
lcall
shlb
iret
in
mov
sbb
sub
inc
mov
rolb
push
adc
xchg
lahf
out
into
xchg
inc
push
int3
test
pop
add
les
in
inc
push
sarl
and
xchg
pop
sbb
in
out
hlt
jae
pop
jae
cwtl
push
mov
xchg
imul
gs
je
cli
imul
dec
xchg
sub
push
sub
std
mov
rorb
out
rorb
inc
push
popa
sub
into
xor
addr16
jae
sub
das
adc
dec
imul
ret
loop
push
shll
mov
stos
xor
push
xchg
lahf
lods
mov
and
add
ds
push
mov
fistpll
movsb
rcl
pop
jae
in
xor
mov
mov
adc
jmp
js
jg
cmp
xor
insl
pop
in
ss
adc
in
push
bound
push
sti
adc
mov
enter
lods
lret
inc
mov
jnp
xor
mov
mov
aaa
push
mov
add
mov
mov
adc
or
push
mov
divl
aam
jge
and
fcoml
cmp
push
loopne
nop
ja
xchg
dec
adc
xchg
outsl
and
adc
cmp
sub
inc
cmpsl
xchg
and
or
and
fwait
lea
insb
xor
push
lret
mov
call
dec
repz
sbb
xchg
outsb
pop
pop
lods
imul
cli
cmp
push
mov
pop
mov
data16
rcrl
adc
rorl
rcrb
loopne
in
inc
xor
sti
scas
dec
mov
push
adc
pop
in
pop
repnz
mov
cld
aam
mov
out
mov
leave
pop
pop
fisubl
or
mov
bound
imul
add
jg
mov
mov
repz
mov
mov
andl
std
loop
lret
ret
lods
mov
enter
adc
std
enter
fisubs
data16
sbb
jnp
and
fimuls
das
cmp
sub
arpl
mov
inc
mov
and
push
stos
std
pop
test
dec
xor
movsb
and
outsb
mov
fwait
aam
mov
mov
scas
push
pop
push
mov
pop
pusha
jnp
dec
push
inc
aas
shr
cmp
stos
mov
mov
inc
out
mov
pop
cltd
mov
adc
test
jecxz
push
leave
xor
stc
in
ljmp
push
lret
inc
sbb
mov
lock
ss
ljmp
lret
test
fmuls
je
aaa
cmp
xor
push
mov
rorb
out
pusha
push
push
push
lods
pop
stos
rolb
loopne
or
pop
dec
nop
sbb
bound
in
xchg
jne
lret
test
pushf
pop
add
add
les
ds
das
cmpl
in
sub
stc
sub
xchg
or
jo
sti
out
sub
xor
movsb
popf
jge
jne
movsl
sbb
add
sbb
sti
sbb
aad
movntps
sub
int
sahf
mov
ret
pop
testl
imul
jne
call
test
loop
mov
pop
sbb
inc
mov
test
aaa
out
mov
insb
insl
inc
push
jge
adc
xor
daa
bound
lret
xchg
shrb
cld
fldl
cmp
sbb
mov
lock
repnz
je
cmp
fildll
xchg
in
stos
pusha
int
pop
jl
popf
sbb
mov
jle
call
jae
imul
leave
lea
movsl
push
mov
xlat
add
inc
cmp
xchg
pop
push
outsb
xor
leave
sub
int
loop
jae
ss
mov
sti
ds
dec
mov
loop
push
shll
outsb
jbe
and
movsb
or
mov
or
push
sub
jge
repz
push
mov
sub
movsl
or
pop
push
leave
add
gs
data16
push
aas
or
pop
sbb
test
std
loope
neg
test
inc
sub
jno
shrb
pop
cmp
icebp
jb
xor
cmp
ds
clc
jg
pushf
leave
mov
repnz
sub
inc
mull
pop
jl
jbe
test
insl
xchg
movsl
sbb
cmp
enter
cmp
mov
add
out
xchg
ffree
dec
inc
add
mov
jge
fisubs
loop
add
inc
addr16
add
shr
bound
shrl
cmpsl
arpl
popa
in
dec
gs
adc
cmp
and
mov
xchg
icebp
mov
mov
and
data16
daa
shrl
or
jae
inc
adc
pop
mov
and
xor
imul
test
rolb
and
push
aaa
mov
subb
pop
fisubl
adcl
inc
jl
jbe
xchg
sbb
push
xor
ja
jo
push
std
out
mov
sahf
dec
dec
sti
int3
add
dec
addr16
sbb
insb
pop
push
add
xchg
pop
or
mov
rcr
clc
pusha
xor
inc
lods
adc
push
daa
mov
pusha
rep
cmp
sbb
es
pop
fs
mov
shll
xchg
push
leave
cli
add
ror
pop
sbb
pop
mov
aad
out
cmp
aas
out
mulb
mov
imul
jno
xchg
in
xor
pop
aas
mov
xchg
mov
out
hlt
mov
popa
movsl
xor
add
shl
mov
inc
mov
xor
mov
repz
fcmovb
sub
sbb
or
jbe
xor
leave
xchg
fsubl
mov
mov
xor
ret
add
cmp
inc
out
adc
sub
mov
cs
ja
add
xor
inc
inc
pushf
mov
xchg
ss
cltd
xchg
js
addr16
insl
cmpsb
pop
pop
lods
mov
or
jle
sarb
pushf
mov
xchg
dec
jl
mov
mov
adc
sbb
or
orb
andb
mov
inc
jl
bound
popa
in
mov
shl
inc
mov
or
shll
dec
xor
mov
adc
negb
xlat
stc
jb
or
pop
negb
addr16
xor
xor
push
cmp
lods
out
jmp
pop
fucomp
push
mov
or
movsb
jno
dec
int3
rcll
add
int
inc
repnz
fdivrl
mov
push
xchg
push
sahf
inc
outsl
ljmp
mov
lds
mov
jbe
fdivrs
movl
pushf
clc
insl
repz
fwait
dec
stos
lock
jnp
ss
insl
mov
mov
add
icebp
mov
sbb
jno
mov
adc
rcrl
push
stos
inc
push
cmp
pop
scas
into
adcl
rcl
aas
repz
ds
popa
sbb
mov
int3
or
pop
xchg
ret
sar
jnp
mov
inc
pop
inc
fsubrl
pop
lahf
mov
adc
mov
xor
mov
sbb
aas
imul
mov
cwtl
fcmovne
push
cmp
ret
push
cmpb
push
dec
outsb
loope
jl
add
inc
add
test
test
inc
jnp,pn
and
xorb
pop
mov
xchg
xchg
lret
lahf
fsubl
sub
push
lods
call
cmpl
movsb
dec
push
jmp
push
push
adc
mov
lea
add
jns
push
cs
or
mov
add
sahf
mov
popf
rcrb
mov
mov
sub
xchg
xchg
jg
outsb
hlt
lea
out
lods
or
inc
inc
lret
stc
pop
sbb
jb
shlb
lcall
push
sbb
outsl
pop
sbb
cs
out
bnd
lods
jnp
or
bound
adc
imul
pop
popf
adc
pop
dec
add
dec
mov
mov
ret
fisttpll
fwait
push
decb
negl
mov
jge
dec
sub
or
xchg
cmpsl
lahf
js
xchg
sub
pop
jle
movsb
mov
int3
and
out
add
loopne
jno
lcall
or
mov
fwait
push
inc
xchg
fcomps
lods
mov
mov
jg
dec
std
call
mov
ret
data16
nop
lret
daa
push
inc
inc
iret
adc
mov
xchg
int3
fwait
fs
nop
arpl
fs
dec
mov
sbb
or
push
mov
mov
jge
dec
icebp
fidivs
xchg
lret
gs
sub
aam
xor
mov
cmp
test
dec
decb
add
and
ud2
imul
push
lea
pop
and
pop
sub
lret
mov
aas
shlb
std
into
push
sbb
and
fcoml
cld
dec
push
test
in
jae
mov
ret
jecxz
mov
inc
les
ss
push
lock
adc
jg
jg
pop
dec
cmp
pop
xchg
cwtl
movsl
sbbl
pop
xlat
xor
push
xchg
sub
cwtl
iret
loopne
test
jb
lods
push
cmpsb
mov
pop
xchg
cmpsl
push
daa
aad
inc
mov
pop
xchg
inc
adc
loope
mov
pop
sarb
xor
cmp
gs
rclb
test
mov
rorl
loope
loopne
popa
rorb
xchg
and
pop
fildll
mov
sub
subl
aad
add
mov
xor
test
loopne
cmp
lret
ds
inc
or
mov
jbe
hlt
cmp
cmpl
jge
lret
mov
jle
lret
inc
loope
adc
lds
lods
in
test
sbb
fisubs
sub
jecxz
leave
adc
bnd
push
fs
and
jne
or
fnstsw
jl
pop
scas
sub
sti
int
cmp
inc
mov
adc
push
hlt
daa
icebp
or
mov
sub
jmp
and
pop
lds
push
inc
xchg
jg
ss
sbb
mov
mov
inc
fcom
fbstp
roll
js
arpl
adc
or
rcll
or
pop
xlat
nop
xlat
test
andb
add
sub
repz
hlt
jg
mov
push
stos
jne
or
jb
aad
scas
sbb
call
and
loopne
pop
jp
push
repz
dec
push
mulb
push
dec
mov
sbb
in
mov
mov
cli
inc
les
nop
mov
fmull
scas
push
adc
lahf
dec
push
dec
cmp
subl
xor
frstor
cld
jp
push
adc
dec
in
pop
cli
out
mov
pop
fsubl
inc
sub
js
outsb
popa
push
popf
fnsave
out
movsb
popa
imul
outsb
hlt
adcl
out
cmp
ss
push
je
inc
or
fmuls
scas
aas
out
sbb
mov
pop
nop
insl
fcomps
sub
cmp
or
xor
pushl
jg
clc
pusha
lret
scas
leave
out
sbb
mul
je
pop
xchg
cwtl
jb
inc
and
iret
shrb
cmp
dec
sahf
cli
adcl
out
and
mov
pop
push
pusha
sbb
leave
enter
inc
dec
cmp
jle
lahf
adc
mov
add
shrl
mov
ja
stos
test
cld
adc
call
sahf
das
subb
mov
shlb
mov
fimuls
dec
sbb
pop
mov
push
dec
mov
push
movsb
int
dec
cmp
ret
mov
roll
je
in
fisttps
sbb
mov
pop
dec
divb
dec
push
push
pop
inc
rsm
idivl
inc
mov
dec
orb
leave
or
pop
sub
std
loop
add
sbb
pop
xor
ret
jno
push
xor
mov
push
pop
sbb
sub
clc
xlat
imul
cld
push
movl
je
or
mov
movl
add
mov
xor
or
or
mov
decl
xor
add
subl
imul
movl
mov
jmp
subl
mov
xor
sub
mov
andl
mov
add
xor
or
mov
decl
mov
sub
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
jmp
jge
xor
xor
add
mov
mov
rcr
hlt
pop
bound
add
add
mov
ret
fwait
or
scas
or
mov
je
in
into
jle
or
ds
iret
dec
outsl
and
lret
jae
mov
cmp
pop
xor
jge
mov
insl
mov
pop
xor
add
xor
adc
xchg
lcall
xchg
sbb
dec
sbb
icebp
aas
fbstp
popa
xlat
lods
mov
push
jb
mov
inc
add
lds
movsb
add
ds
test
or
jge
mov
sub
nop
mov
cmp
mov
pop
or
mov
or
and
mov
rorb
mov
rcrb
movsb
or
sarb
inc
test
cmp
dec
cld
loopne
or
sub
jp
inc
dec
xor
jmp
aad
in
xor
aam
mov
add
inc
jns
popa
jle
push
push
xor
cmp
dec
mov
mov
cmp
in
add
lret
into
fadds
loope
jbe
cmc
jnp
sub
push
add
outsb
cmp
mov
push
sbb
in
push
test
lock
push
add
mov
imul
sub
push
outsl
out
dec
out
mov
sub
lret
imul
sbb
or
xchg
cwtl
test
out
into
push
bound
out
arpl
cwtl
repz
cmpl
aaa
cs
xchg
cld
xor
fcomp
cmp
cmp
pop
jnp
xchg
jo
inc
cmc
lods
xchg
mov
mov
and
dec
jo
add
shll
mov
add
mov
pop
iret
icebp
fdivp
hlt
pop
push
jmp
inc
xor
punpckldq
outsb
es
int3
push
inc
mov
mov
aam
cmpl
push
add
fdiv
xor
cmp
jae
xlat
bnd
sbb
add
cmpsl
xchg
adc
push
push
xchg
lock
push
xor
mov
mulb
xchg
cmc
pop
or
jg
shlb
xchg
fs
pop
shrl
or
test
ficoms
adc
sbb
aam
jne
dec
xchg
cmpsl
fildl
pop
inc
das
std
loope
cmc
lahf
lret
cli
adc
and
gs
sbb
mov
rorl
cwtl
and
sub
jnp
and
insl
cmpl
jmp
mov
mov
clc
js
mov
into
enter
pop
push
jl
ret
xchg
inc
in
loop
lods
and
jo
outsl
mov
mov
cmp
stos
or
andl
loope
adc
mov
xchg
jmp
int
pop
cmp
sub
sub
ret
out
adc
pop
push
iret
xchg
cmp
xor
and
mov
mov
scas
push
cmp
repz
nop
sbb
cmp
pop
cltd
pop
shlb
cld
dec
or
pop
emms
sbb
sub
dec
jp
xor
test
popa
mov
mov
and
mov
aam
mov
in
xchg
xchg
dec
fisttpll
mov
pop
sub
sub
cmp
cmp
call
or
xchg
dec
xchg
cmpsb
cltd
lea
and
int
inc
popa
int3
repz
repz
shr
mov
stc
repnz
mov
dec
mov
sbb
cltd
cmp
dec
das
aam
jne
add
mov
adc
sub
fwait
rcrb
xchg
loope
xchg
cmp
xchg
fisubs
cmpb
loopne
rcrb
scas
inc
cmpsb
xorb
mov
adc
xor
test
rorl
dec
push
xchg
and
xor
es
mov
imul
jg
arpl
push
test
outsb
dec
add
mov
and
ljmp
loop
pop
dec
mov
xor
fisubrs
ljmp
pop
pop
into
inc
rcrb
add
je
or
mov
aas
sub
ficompl
fistpl
divl
in
sbb
add
pop
lods
std
imul
addr16
or
xchg
ror
sbb
pop
aas
jne
scas
cs
sbb
rcll
mov
sti
sub
xchg
lea
loopne
pop
imul
sub
and
or
lds
dec
out
add
in
jb
pop
shrl
inc
sar
xchg
xchg
cmp
imul
call
push
dec
nop
push
insb
stos
xchg
xchg
jl
pushf
add
jl
in
sub
fiadds
test
inc
ljmp
dec
xor
ljmp
cltd
outsl
mov
test
adc
dec
sub
mov
pop
xchg
scas
and
push
mov
jnp
push
add
xor
inc
cmpsb
lcall
jbe
jns
mov
in
outsl
dec
mov
sbb
jle
add
xchg
xchg
xor
pop
inc
mov
rcl
lods
xor
cltd
xchg
mov
fidivrs
xchg
and
mov
jno
testb
inc
shrb
mov
dec
or
popa
pop
aas
cmp
and
clc
lock
lret
out
outsl
mov
into
ficoml
jno
pop
and
push
shr
jg
dec
push
movb
push
es
xor
subl
xor
loop
mov
jb
cwtl
rcl
sbb
add
jecxz
hlt
and
out
rol
xor
xor
pop
mov
cmp
lock
loopne
or
aaa
sarb
push
jecxz
std
and
testl
jg
jns
cwtl
dec
pop
xor
outsb
dec
sub
jno
lahf
in
jl
sub
jbe
adc
loopne
lcall
and
push
dec
xor
cmpsb
ljmp
cmc
cwtl
lods
jns
and
add
or
adc
test
data16
cmp
stos
out
xor
gs
jnp
popf
sub
or
and
cli
xchg
and
pop
iret
add
mov
pop
push
jbe
imul
pusha
mov
idivb
je
xchg
addr16
incl
pushf
inc
bound
dec
or
shrb
cli
insb
loopne
push
xchg
je
mull
lahf
lock
outsb
lret
or
xlat
addl
mov
adc
fbstp
xor
mov
pusha
in
sub
mov
xchg
jmp
adc
push
jae
adcb
enter
or
xlat
sbbb
imul
addb
ss
leave
sbb
inc
cmc
pop
mov
sub
lret
or
add
and
xchg
lret
fs
adc
insb
lcall
mov
mov
inc
loope
icebp
xor
lcall
xchg
push
shrl
negl
mov
roll
addr16
fidivl
popa
rorl
dec
and
xchg
xchg
aaa
cltd
xor
xchg
inc
cmpsl
cltd
ss
xlat
push
xor
mov
pop
loop
push
loop
test
ret
pusha
into
shlb
aas
mov
stos
xchg
sbb
lods
rcrl
mov
jle
sbb
mov
dec
lcall
divb
adcl
add
cli
or
cmp
cltd
pop
and
xlat
add
gs
add
mov
mov
add
arpl
notl
jl
jecxz
push
push
jg
into
insl
lods
add
mov
ss
xchg
xor
aam
xchg
pop
or
mov
mov
push
inc
jmp
xchg
je
fmul
insb
in
push
jb
lods
test
enter
add
lcall
xchg
insl
orl
mov
lds
dec
or
das
ss
fisubs
inc
js
fwait
xchg
ss
out
shll
sub
std
adc
fsubs
js
leave
aam
loopne
jnp
incl
iret
inc
sbb
shll
orb
mov
add
inc
popa
lds
testl
xor
out
push
xchg
pop
imul
dec
mov
sub
in
inc
adc
negb
xchg
pop
add
iret
lods
xchg
addr16
jne
and
lahf
push
inc
idiv
insl
and
inc
out
xchg
mov
dec
lods
push
out
outsl
push
outsb
aam
and
jbe
or
xchg
sti
int
in
push
pushf
and
cmp
jo
xor
sub
xchg
in
sub
push
pop
test
sub
js
stc
lods
aaa
ja
lea
cld
jnp
jae
pusha
mov
sub
pop
push
sarl
fcmovbe
popa
sub
lock
out
mov
mov
rcl
test
popf
iret
ss
xchg
out
inc
arpl
mov
lock
movsb
adc
shll
ds
dec
jns
jb
jno
dec
xchg
stos
ss
lret
hlt
or
ljmp
loop
icebp
scas
sbb
jmp
hlt
icebp
xchg
ret
push
and
jns
mov
mov
or
aaa
or
fsubrs
or
cmc
adc
xor
or
ljmp
mov
adc
je
mov
insb
int3
adc
divl
insl
popa
stos
dec
lods
xor
xor
pop
outsb
decb
xchg
mov
subl
loope
xchg
cmpsl
pop
stos
jae
pop
stc
mov
adc
sub
cmpsb
pushf
fs
adc
leave
or
lods
dec
mov
adcb
shll
int
pop
cld
popf
and
cmp
pop
mov
sbb
jecxz
dec
jecxz
add
test
pop
push
nop
popa
das
push
mov
add
insl
cmp
jb
mov
and
sarb
jmp
adc
nop
fcomp
xor
mov
adc
int3
xchg
jo
shlb
mov
scas
lcall
test
mov
xchg
dec
add
pop
mov
xchg
pop
jg
dec
dec
ljmp
fmuls
shll
xor
bound
popa
xor
xor
jo
dec
or
fsub
mov
into
sub
outsb
mov
dec
jbe
pop
aad
lock
insl
ja
faddl
repz
in
and
fs
call
xchg
sahf
cmpb
pop
or
mov
pop
xchg
sub
add
pop
jne
mov
loope
dec
icebp
mov
and
jb
cmp
pop
mov
jmp
inc
xor
add
jb
add
mov
lock
jno
fsubr
cli
pop
cli
mov
and
daa
lds
stos
adc
les
sbb
cs
andb
dec
sbb
inc
ficoms
inc
xchg
xchg
xchg
mov
sub
nop
inc
sahf
pusha
xor
out
pop
pop
inc
pop
popf
ljmp
sbb
jp
cmp
das
inc
sbbb
cltd
push
loopne
pop
pop
in
dec
jns
out
movsb
pusha
and
call
mov
fcmovbe
add
cmp
xor
ffree
repnz
xchg
cmp
lock
ss
adc
aaa
or
insb
adc
xchg
es
lods
jg
out
sub
push
inc
mov
fdivs
ds
jnp
sbb
lret
push
push
sub
sbb
popa
mov
ffreep
mov
shlb
test
sub
iret
lds
xchg
cltd
push
popa
popa
push
ret
and
mov
arpl
mov
and
xchg
loope
mov
fdivs
pop
jae
fdivs
arpl
addr16
insb
sub
jbe
mov
push
fidivrl
repnz
hlt
or
addl
push
jne
xor
test
scas
adc
xchg
imul
jo
stos
or
scas
incb
jecxz
jno
das
jo
adcl
je
ret
iret
clc
jl
into
mov
add
stos
fidivrl
jl
popa
aam
movsb
cmp
mov
sub
daa
pusha
xchg
rcll
rcl
out
fidivl
add
int
mov
outsl
in
xor
test
mov
xchg
xor
adc
ret
fsubrs
js
dec
loopne
adc
adc
mov
xor
imul
push
pop
mov
outsb
jg
in
xor
xchg
repnz
pop
aad
ret
movsl
add
jg
rclb
sbb
arpl
pop
adcl
and
out
movsb
add
in
out
call
stc
mov
je
xchg
addr16
fbld
hlt
sub
jns
sbb
shlb
cmp
ret
sbb
xchg
cmp
push
daa
inc
mov
add
and
mov
dec
stc
add
jb
rorb
lds
or
mov
cltd
insl
inc
mov
jb
pop
int3
add
popf
sahf
shrb
add
pop
xchg
into
pop
dec
mov
in
fiaddl
repz
xchg
push
jle
into
adc
push
int
inc
xchg
mov
inc
cmp
shll
cmpsl
ret
pop
mov
push
xor
jecxz
out
push
mov
cmp
add
icebp
cmp
in
inc
outsb
rcrb
push
push
jns
mov
iret
xchg
and
rorl
xor
push
jno
jne
pusha
push
jbe
dec
sarl
inc
mov
cld
or
sub
sub
fsubr
js
sbb
test
mov
iret
rcrl
hlt
mov
sbb
mov
rol
int3
inc
sbb
xchg
add
daa
and
jp
xor
repz
push
or
outsl
out
push
mov
dec
push
mov
out
outsb
adc
lods
mov
pop
or
std
repz
call
lods
subb
mov
inc
xchg
sbb
dec
aam
fstpl
dec
mov
loop
mov
jle
out
sub
shrb
mov
mov
push
rol
or
lock
out
pop
push
out
repz
pop
mov
jmp
mov
jecxz
ret
repnz
es
call
cmc
repnz
pop
ret
into
jecxz
ret
mov
aad
and
xor
jo
je
xor
neg
push
loop
mov
jne
daa
sub
xchg
xchg
icebp
jmpw
in
mov
add
jae,pt
arpl
fsubrl
inc
push
pusha
dec
dec
push
stc
push
cmpsb
fwait
mov
xchg
mov
test
les
shll
sbb
mov
mov
sub
cs
enter
mov
pop
xor
push
lds
repz
les
sub
imul
test
xchg
hlt
repz
inc
roll
mov
cmpsl
mov
mov
mov
mov
jecxz
aaa
fisubrs
and
pop
jge
xor
or
sarl
push
int3
pop
icebp
jl
ljmp
mov
adc
out
sub
test
test
jmp
sarb
pop
mov
mov
cmp
and
mov
cmp
loop
insb
shrb
inc
pop
push
sti
cmpsl
outsb
sub
stc
adc
sub
sub
notb
pop
xlat
imul
cmp
lea
pusha
lods
loope
fiaddl
pop
mov
nop
lock
inc
mov
cmp
jmp
rol
stos
pusha
mov
and
pop
dec
movl
inc
lahf
outsb
adc
lods
sbb
or
cmp
dec
cmpsb
mov
popf
xor
test
pusha
cwtl
and
imul
jmp
ljmp
fnstcw
inc
shl
test
pop
arpl
inc
fwait
push
push
scas
jp
cs
sbbb
das
popf
pushl
mov
push
pop
inc
and
push
fsubr
stc
sbb
pusha
sbb
xor
leave
xlat
aam
insl
test
xor
and
ljmp
pop
inc
and
xchg
cmp
imull
jns
adc
out
les
or
mov
cmp
adc
mov
and
orl
jb
sti
or
push
addr16
addb
xchg
enter
mov
adc
fsubs
mov
or
push
cmc
jmp
xor
or
daa
xchg
add
daa
lds
sub
movsl
gs
mov
jg
arpl
out
mov
fimuls
pop
push
pop
mov
ss
mov
in
jnp
sbb
sub
mov
leave
sub
out
push
mov
xor
xchg
shll
sub
lret
pop
xchg
sti
pop
jo
lods
sbbl
adc
aad
lea
inc
hlt
mov
mov
mov
add
scas
mov
lods
loope
mov
jmp
xor
int
ret
out
xchg
adc
mov
jne
push
mov
xchg
pop
cmp
pop
dec
sub
adc
cmp
dec
roll
pop
inc
jne
or
jnp
icebp
sbb
mov
dec
inc
adcl
scas
mov
xor
xchg
mov
clc
mov
inc
mov
lods
adc
xchg
in
sbb
adc
cmp
xchg
and
jecxz
js,pn
sbb
repnz
stos
mov
lcall
push
xor
fdivrs
adc
dec
or
mov
div
ljmp
mov
mov
insl
inc
cmpb
lea
mov
push
ljmp
mov
insl
inc
cld
sub
aas
push
imul
int
jae
inc
enter
push
jae
sbb
bswap
aas
mov
in
and
jg
fidivs
inc
jge
jmp
push
jae
sahf
push
addl
inc
dec
xchg
push
push
xorl
jge
add
ds
xor
ja
jp
mov
insb
dec
adc
call
arpl
sbb
cmpb
push
jl
ja
mov
shrb
or
lock
push
fld
scas
sti
inc
or
lret
pop
mov
adcb
dec
adc
pop
mov
xchg
popf
cwtl
xor
push
popf
xor
cmp
leave
mov
jg
pop
xchg
js
sbb
dec
aad
pop
sbb
push
fistpl
rclb
adc
inc
cmp
and
sbbb
mov
out
jp
loope
pop
and
mov
cld
mov
rcrb
or
int
push
mov
mov
push
in
lods
fdivl
dec
es
out
andb
push
push
std
enter
mov
xor
mov
jns
push
ss
pop
jp
or
and
mov
enter
stc
lock
xor
or
lcall
outsl
test
ljmp
js
push
pop
mov
inc
sub
and
mov
fdivs
inc
push
adc
cmp
add
stc
xor
sbb
in
mov
lods
cli
divb
insl
std
sbb
mov
fnclex
push
pop
and
mov
push
pop
in
mov
cmp
cmp
mov
jns
popa
popa
cmp
jnp
xchg
iret
ja
xchg
testb
pop
int3
out
push
and
sbb
cwtl
push
push
mov
mov
scas
sbb
xchg
inc
mov
out
add
in
dec
xchg
dec
pusha
mov
hlt
lea
inc
test
arpl
loope
jecxz
mov
sbb
xor
repnz
xchg
lds
mov
dec
ds
pop
pop
lods
popa
imul
adc
clc
loop
adc
fistpll
ja
shll
test
mov
adc
arpl
or
mov
in
adc
fldt
scas
movsb
dec
icebp
and
and
mov
adc
jle
icebp
in
cltd
xor
inc
pop
cltd
dec
sarb
addr16
loope
aas
push
pusha
dec
cmpsb
or
out
or
dec
lods
sbb
dec
xorb
jns
dec
hlt
fcompl
lret
sbbb
push
aam
filds
mov
out
adc
and
dec
icebp
add
pusha
vpunpckhqdq
pop
mov
jnp
jge
ja
jp
test
push
jecxz
inc
ljmp
mov
xchg
xor
xchg
xchg
das
adc
dec
xor
je
fistl
pop
xor
imul
insl
cvtps2pd
and
test
or
cwtl
push
call
out
sbb
mov
imull
sub
pop
adc
adc
insl
or
rclb
pusha
es
enter
je
scas
test
dec
ss
stc
out
inc
lods
out
xor
lcall
lar
cld
jl
mov
pusha
sbb
pushf
shlb
mov
fisttpl
adc
xchg
icebp
and
test
aad
pusha
dec
add
mov
stos
push
ja
cld
push
fistps
sti
call
call
call
mov
fcomp
lds
inc
ret
popf
ret
sarl
cmp
pop
out
add
loop
lock
xor
adc
jecxz
pop
sarb
or
jnp
repnz
mov
push
popa
out
and
inc
outsl
sahf
mov
xor
out
addr16
adc
xlat
pop
lret
mov
mov
out
clc
sbb
mov
sbb
mov
enter
adc
dec
sub
jno
sbb
adc
in
pop
dec
mov
inc
push
add
cmp
dec
mov
fisttps
pushf
cmc
cmp
aaa
imull
mov
inc
jg
cltd
sub
aas
daa
sbb
push
outsl
sub
pushf
dec
int
lock
sbb
cmp
add
sbb
jnp
jbe
xchg
cmp
pop
sbb
jp
cmc
xchg
aaa
and
add
and
call
mov
or
inc
xor
or
mov
mov
in
jbe
mov
call
das
lahf
stc
andl
js
sahf
sub
sbb
push
call
push
arpl
and
roll
shll
pop
fisubrs
gs
ss
cmpsb
fwait
jl
dec
imul
mov
dec
push
idivl
daa
pop
enter
sbb
aam
in
and
inc
gs
pop
incb
pusha
adc
inc
nop
lock
sub
mov
adc
and
jge
push
push
lods
add
push
sbb
mov
fidivs
xlat
or
sub
lea
clc
sbb
mov
and
dec
mov
loop
into
and
push
hlt
loopne
jno
data16
push
stc
arpl
nop
outsl
mov
dec
xchg
test
cmp
orb
repz
add
adc
movl
add
sbb
add
push
and
xchg
push
scas
inc
mov
movl
mov
divl
popa
shrb
into
dec
lcall
clc
mov
jae
inc
cmpsb
jne
hlt
dec
gs
jmp
add
movl
mov
sub
dec
dec
das
xor
fcoml
xchg
ja,pt
push
mov
inc
lds
pop
cmp
mov
dec
push
push
je
jl
in
push
jns
es
ljmp
sub
dec
std
in
jo
adc
mov
jg
sbb
mov
xchg
or
std
sti
mov
and
add
add
sub
aas
mov
jecxz
jle
ret
inc
clc
scas
fnstsw
stos
mov
negl
lahf
push
sub
imul
adc
cmp
xchg
and
dec
fisttpll
inc
cmp
sti
jns
and
sbb
mov
cmp
add
lods
or
ret
mov
jbe
test
pop
xchg
sbb
add
inc
fdivrs
push
jecxz
in
fdivrp
mov
cwtl
sub
jle
repz
jo
pop
jecxz
out
inc
daa
or
pop
mov
mov
into
loopne
out
inc
jo
in
dec
sub
push
je
or
xor
xchg
xchg
cmp
in
sub
icebp
ljmp
sub
mov
dec
stc
mov
hlt
mov
lock
inc
xchg
test
jp
pop
xor
mov
cmpsb
jbe
in
or
mov
xchg
pushf
scas
das
add
or
mov
lahf
or
mov
das
push
lods
leave
lods
xchg
daa
stos
xchg
sub
push
dec
inc
jecxz
daa
cmpsb
movsl
sti
inc
inc
call
sbb
jl
jg
pushf
int
xor
fs
push
es
in
push
addr16
mov
in
pushf
adc
adc
pop
mov
dec
pop
mov
adc
xchg
pusha
push
jle
jecxz
mov
xor
sub
out
insl
shlb
ret
cmpsl
sub
mov
ds
cs
xor
inc
xchg
mov
push
jmp
icebp
add
fucom
pushf
movsb
jp
js
cmp
popf
mov
mov
pop
mov
jecxz
cmp
lcall
aam
xlat
and
scas
pushf
data16
dec
push
lods
in
add
xor
sub
mov
in
or
leave
push
in
outsl
push
orb
dec
aas
xorb
sub
jp
mov
pop
mov
add
fsubrs
pop
adc
pop
inc
call
mov
ret
in
sbbb
repnz
cmpsb
cmp
sarl
into
mov
lods
mov
sbb
inc
and
and
and
sahf
xor
or
adcb
adc
shr
pop
jo
jns
rorb
mov
sbb
fistps
pop
and
addr16
cwtl
jecxz
pop
notb
xor
div
mov
aaa
lods
decb
sub
sub
imul
mov
in
jmp
popf
adc
mov
fcomps
push
movsb
mov
inc
inc
decb
stos
sbb
lahf
add
xor
in
pop
leave
mov
addr16
imul
int
out
sar
inc
pop
mov
push
dec
sub
int3
daa
out
or
mov
and
pop
inc
in
xchg
outsl
lret
enter
imul
push
push
mov
push
push
mov
cmp
nop
aaa
fcomip
rorb
cmpb
pop
popa
fcoms
inc
scas
xchg
in
divps
sbb
sahf
lret
jne
pop
sbb
jns
adc
mov
pop
mov
mov
pop
and
xchg
imul
fs
lea
les
or
inc
cmp
inc
adc
fstl
ficomps
pop
xchg
cld
mov
leave
cwtl
mov
push
aaa
js
jb
aas
lods
lock
jae
jg
popf
fnsave
out
pop
pop
je
jno
adc
ret
add
scas
ja
cmpsb
mov
inc
and
jg
leave
loope
inc
push
add
mov
mov
pop
push
pop
xchg
es
bound
rorl
cmp
jns
inc
rorb
aam
push
out
cmc
sub
inc
sbb
jp
or
fwait
dec
dec
and
outsb
repnz
pop
mov
adc
fs
outsb
sbb
addr16
push
inc
jne
cli
xchg
in
push
sbb
addr16
sbb
mov
das
popa
out
lea
popf
lods
lret
mov
cltd
mov
lret
jmp
data16
mov
fldenv
out
dec
out
pop
inc
out
adc
adc
jmp
xchg
jne
xor
mov
sub
rcll
stos
hlt
push
xchg
addr16
aas
rorb
out
shl
dec
and
mov
sub
jae
sbb
jl
in
mul
fiaddl
xchg
jge
add
push
aad
std
cwtl
dec
mov
int3
inc
mov
xchg
aaa
scas
dec
jb
clc
pop
add
jns
ljmp
neg
add
out
gs
iret
jmp
icebp
out
mov
mov
mov
cmp
inc
jo
andb
adc
xorl
cli
push
push
gs
mov
add
in
jge
dec
add
rorb
aam
scas
jmp
in
sbb
nop
xchg
ret
inc
cmp
pop
ljmp
aas
cld
push
test
lcall
jns
xorl
mov
movsb
das
mov
lods
aam
hlt
xor
fdivrs
shlb
test
fwait
repnz
mov
outsl
fsts
clc
nop
xchg
inc
test
xchg
mov
hlt
dec
ret
int3
cmpsb
sbb
mov
cmp
mov
adc
adc
pop
sbb
adcl
je
and
jle
mov
mov
stos
cltd
and
inc
mov
fdivl
cmp
sbb
sub
inc
bound
cmp
jecxz
push
icebp
int3
cmc
xor
xor
test
fdivrs
jns
fmulp
inc
in
cs
sbb
nop
popa
or
xor
adc
mov
mov
int3
jo
rol
push
adc
aam
daa
sub
arpl
and
add
pop
mov
cmp
ss
leave
cmp
push
addr16
mov
lock
mov
es
sub
out
hlt
test
dec
movsb
cmp
inc
insb
addr16
daa
and
inc
sti
xchg
sti
ss
adc
cmpsb
outsl
fcomi
ljmp
lahf
push
add
in
mov
dec
ficoml
xchg
jge
xor
int3
sbb
outsb
fnsave
and
mov
mov
js
into
xor
xchg
enter
or
inc
pop
out
inc
loop
mov
mov
imul
rcrl
mov
sarb
mov
mov
cmp
fldcw
mov
pop
test
and
xchg
ja
sbb
int
sub
subb
or
mov
movsb
scas
and
jbe
stc
ja
sarl
ret
or
adc
rclb
adc
dec
sbb
mov
imul
fidivl
push
cmpsb
mov
lods
inc
push
lods
dec
in
in
dec
or
fdivs
jnp
sbb
in
sbb
popa
inc
mov
iret
loop
jmp
mov
inc
pop
repz
or
cmp
jp
xchg
lcall
sti
fildl
cmp
andl
das
mov
imul
push
hlt
movsb
jae
dec
maxps
mov
sbb
popf
cmp
jnp
sarl
adc
test
sub
outsl
insb
jl
sbb
jmp
cmc
adc
mov
fdivl
fsubp
push
dec
cs
add
add
gs
jmp
push
ss
mov
rcll
repz
pusha
add
loop
je
lret
mov
xchg
imul
cmp
dec
xchg
mov
xchg
jl
scas
ljmp
stos
loop
pop
addl
push
add
f2xm1
mov
jg
movsl
in
cmp
mov
test
xor
add
sbb
sbb
cmp
push
inc
outsb
cli
mov
outsb
cli
xor
enter
sub
push
lret
loope
cmp
xor
jae
ficoml
xchg
xor
das
sub
jno
aas
xchg
cmp
mov
mov
push
mov
xchg
rclb
outsl
in
or
jecxz
adc
xor
incl
add
cmp
movsl
or
arpl
cmpb
jle
clc
cmp
mov
fwait
xorl
xchg
or
jbe
imul
dec
xchg
inc
cmpsl
xor
scas
adc
cmp
andl
add
sti
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
push
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
movzwl
sub
mov
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
pushl
push
pushl
push
push
call
jmp
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
or
mov
push
and
mov
add
pop
addl
push
call
push
andl
push
adcl
push
xorl
push
push
addl
push
push
call
xorl
push
addl
push
andl
push
notl
push
orl
push
push
call
dec
movl
jne
mov
mov
mov
cmp
movl
jne
orl
movl
addl
pushl
sbbl
pushl
pushl
call
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jb
mov
sub
mov
and
mov
or
mov
movl
lea
xor
mov
sbb
lea
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
mov
sub
mov
mov
mov
not
mov
xor
movzbl
add
mov
adcl
add
movl
mov
mov
mov
movl
cmp
jne
andl
xor
or
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
or
push
push
and
push
inc
mov
xor
mov
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
push
call
jmp
mov
sub
mov
sbb
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
inc
mov
mov
movl
sbbl
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
andl
add
mov
sbb
mov
sbbl
mov
add
mov
mov
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
and
push
pop
sub
add
movl
mov
movl
or
mov
xorl
mov
sbbl
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
orl
xor
add
mov
lea
mov
xorl
mov
xorl
xor
add
adcl
mov
lea
adcl
push
adcl
mov
subl
xor
addl
add
xorl
push
movl
mov
andl
push
pushl
call
sub
mov
adc
mov
xorl
mov
mov
adcl
xor
addl
mov
add
movl
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
adc
lea
sbbl
mov
mov
mov
sub
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
sub
xor
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
sbb
mov
or
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
jmp
cli
jl
popa
fs
repz
push
and
notl
bound
pop
bound
xchg
push
fists
fadds
pop
jnp
pop
popa
aam
sbb
fwait
out
cmpsb
outsb
cmp
daa
sahf
fisubrl
aas
repz
leave
loopne
dec
js
lods
popa
sub
addb
dec
cli
push
icebp
or
inc
fwait
hlt
pop
pushf
pushf
pop
or
data16
mov
in
pushf
incl
int3
icebp
fisubs
inc
mov
push
lcall
and
insl
jns
lcall
dec
adc
push
fcomip
in
lods
jg
or
mov
cmpsb
lret
pop
lret
jae
fnsave
enter
pop
into
cmp
testb
sub
pop
iretw
mov
jns
push
inc
ljmp
inc
js
loope
and
shlb
adc
lret
push
or
cmp
dec
repz
adc
loope
rcrl
cmpsl
mov
push
in
out
js
mov
mov
loope
cmp
xor
inc
xchg
push
sbb
add
and
and
rcll
popf
mov
rcrb
mov
mov
or
jp
mov
stc
mov
cld
fbld
movsb
inc
xor
mov
and
mov
icebp
mov
add
fidivrl
icebp
adc
or
xchg
add
add
jns
scas
and
mov
movsl
repz
mov
jno
adcl
xchg
mov
out
leave
inc
stos
pushf
mov
cmp
jp
jno
call
xchg
popf
jb
xor
aaa
cltd
mov
test
jle
or
fidivrs
dec
stos
mov
clc
addb
pop
leave
push
inc
cmp
cmp
cmp
popa
pop
or
push
or
int
cmp
sub
xor
orb
scas
push
fidivl
jno
andl
int3
pop
scas
out
mov
in
andl
add
pop
test
add
js
repnz
dec
ja
outsl
sar
imul
lret
xor
mov
faddl
inc
stos
fstpl
icebp
xor
adc
or
and
push
aam
add
int
lret
out
dec
inc
push
ffree
jb
push
movsb
sbb
call
daa
lahf
outsb
aad
lret
mov
imul
in
int3
movsl
sub
mov
cmp
add
xchg
mov
fmulp
in
test
cmpsl
lods
lcall
loop
shrb
ds
push
xchg
fmull
sbb
iret
mov
jle
inc
aas
cmp
inc
mov
dec
mov
cmp
hlt
sub
cmp
cs
adc
and
inc
mov
mov
lret
jnp
pop
scas
repz
test
es
sub
rcr
push
lcall
jp
lds
xor
cmpsb
and
in
imull
cmp
cltd
sub
mov
call
test
daa
in
sub
lods
inc
push
enter
add
xor
data16
mov
mov
mov
in
and
lds
lret
outsl
sbb
push
inc
out
mov
jae
xor
sbb
xrelease
insl
stos
push
jmp
mov
shr
xor
cmp
shll
add
std
sbb
fisubrl
inc
xchg
sbb
lods
mov
test
cld
inc
ret
jmp
mov
leave
fdivrl
push
inc
jge
outsb
sbb
dec
fsubl
nop
mov
mov
je
push
sub
xchg
push
jmp
sbb
inc
out
xchg
movsl
in
imul
cli
cmp
jg
push
inc
pushl
outsb
iret
mov
jge
push
bound
pop
popl
inc
push
into
xchg
xchg
nop
push
out
mov
pop
sbbb
pusha
out
push
or
mov
es
enter
mov
shr
jnp
and
out
jmp
stc
sub
shlb
sub
mov
jecxz
mov
push
rcll
push
dec
sbb
mov
sar
push
xlat
jmp
in
sub
bound
shl
pop
mov
inc
add
adcb
or
xchg
jge
inc
sti
bnd
xlat
pop
mov
xor
and
inc
pop
rep
movsb
enter
pop
inc
in
adc
call
push
mov
pop
and
sahf
inc
cmp
cmp
lret
mov
xchg
xchg
dec
icebp
out
dec
mov
lds
pop
push
lods
jl
popf
pop
push
int
mov
out
pop
test
cmp
aaa
std
sti
test
filds
and
xchg
test
hlt
cmp
mov
pop
push
xchg
xchg
loope
mov
sbb
icebp
inc
sti
mov
aam
fwait
rorb
xlat
insb
mull
and
or
pop
in
popa
or
xchg
or
movsb
aaa
inc
push
sub
lret
xchg
xor
mov
cltd
push
mov
cmp
jl
loop
jl
int3
adc
push
xor
push
outsl
pusha
imul
addl
xor
enter
jae
div
adc
cmp
cs
push
mov
lea
jl
repnz
iret
mov
sbb
push
stc
scas
clc
popf
sub
pop
and
decl
xor
inc
leave
jns
das
js
iret
xchg
adc
mov
inc
or
aaa
pop
ret
into
shl
ffreep
mov
cmp
out
mov
stos
lcall
ss
lods
pop
outsb
or
shll
jb
dec
shll
test
push
mov
fimull
addr16
jo
cli
nop
jl
mov
cmp
pop
mov
in
fidivl
or
stc
add
cmp
push
out
jb
call
pop
cs
arpl
push
nop
mov
insl
push
mov
jne
lret
pop
repnz
cmc
jae
or
push
adc
movsl
fsub
dec
mov
mov
hlt
notl
sub
push
mov
mov
cmp
ja
pop
out
pop
inc
adc
mov
les
add
je
lods
mov
sbb
lea
pop
adc
imul
inc
test
add
dec
mov
pop
jge
xchg
fstl
test
jge
mov
ficoms
push
xchg
outsb
add
push
mov
insl
ja
aas
shrb
jns
push
mov
shrl
adc
test
and
sahf
or
mov
movsl
popa
xchg
std
mull
inc
jae
hlt
repz
bound
std
jne
jne
out
divl
add
cmpb
pop
lods
xchg
test
mov
cmpsb
sub
scas
sub
cli
fucom
jg
cmp
and
mov
fadds
jae
clc
popa
cmc
repz
xor
repz
pop
ss
sub
jmp
jecxz
jmp
pusha
mov
int
mov
mov
xchg
push
xchg
xor
fistpll
or
pushf
cwtl
add
dec
push
gs
fwait
dec
pusha
push
fildll
in
sub
outsl
stos
or
mov
jbe
fnsave
dec
mul
mov
in
adc
fxch
inc
push
push
pusha
ja
orl
jnp
xchg
jno
in
push
jge
xchg
add
daa
mov
fildl
mov
decl
jge
pop
aam
xlat
loop
push
adc
scas
lock
mov
leave
xchg
adc
jge
xlat
dec
popf
jae
xchg
add
jo
movsb
mov
into
fistl
scas
repz
xor
mov
hlt
or
imul
imul
inc
jmp
mov
mov
adc
xchg
mov
mov
add
push
jp
mov
ss
xor
push
es
xor
sbb
add
lret
mov
loope
iret
iret
subb
aas
lahf
push
icebp
or
lcall
cmpsl
mov
xor
jnp
or
repnz
xlat
pop
xor
shrl
pop
cs
lds
sub
test
mov
leave
sti
xlat
inc
les
adc
push
or
and
nop
js
and
sarb
clc
stos
mov
adc
and
sub
push
ds
xor
movsb
adc
fadds
movsl
add
gs
scas
pop
f2xm1
int3
xchg
imul
daa
icebp
call
ficoms
pop
or
fndisi(8087
jp
in
push
mulb
add
xor
jno
addl
lods
cmp
or
fcomi
mov
ja
cmp
ficoml
xchg
mov
stc
in
add
std
push
je
add
sahf
outsl
jns
mov
out
dec
mov
xchg
and
and
cmp
cmp
jp
jne
lgs
and
adc
push
sbb
js
sarl
mov
push
pop
fistps
sbb
sahf
test
dec
orl
sarb
push
mov
xchg
mov
test
sub
and
mov
out
pop
cmc
ja
cli
mov
pop
repz
mov
adc
push
jno
push
lret
cmp
mov
sub
divl
push
dec
repz
out
xchg
fcoml
pusha
adc
ljmp
jmp
lret
mov
in
pop
aas
outsb
popa
push
test
jecxz
push
into
or
enter
cmp
jnp
xchg
aas
jno
jne
dec
or
mov
sub
fs
test
dec
lock
addr16
cmp
xor
inc
mov
int3
push
mov
jb
je
mov
adc
sbb
adc
cwtl
in
add
int
fldl
push
lret
insl
push
mov
xchg
jno
pop
sub
lds
repz
jo
jle
dec
nop
jge
pop
xchg
add
stc
sbb
lahf
test
mov
mov
add
sbb
or
loope
ss
rorb
cmp
loope
mov
notl
or
imul
cld
es
out
pop
xchg
fistpll
hlt
mov
movb
sub
dec
test
movzbl
insb
xlat
nop
in
inc
sub
insb
scas
hlt
push
inc
xchg
xor
mov
and
lret
repnz
je
pop
mov
inc
cmp
mov
repnz
stos
mov
test
bound
mov
mov
stos
xor
jae
add
inc
pushf
mov
into
and
faddl
add
sti
arpl
mov
cmpsl
mov
cld
mov
mov
ljmp
or
stos
add
cwtl
fldcw
cmp
and
cmpsb
popa
inc
mov
and
push
js
sbb
pop
test
lcall
xchg
mov
mov
out
cwtd
xor
mov
es
outsl
stos
pop
add
out
sbb
push
mov
push
jle
inc
mov
cmpsb
js
xchg
pop
cmp
sub
scas
xchg
xchg
jmp
dec
lods
push
iret
inc
das
mov
inc
xor
ljmp
stc
roll
fdiv
dec
mov
frstor
imul
dec
add
leave
pop
call
fwait
sub
scas
jno
stos
cmp
in
mov
mov
jae
aaa
and
cmp
xor
xlat
loope
aaa
cmp
pop
gs
or
aam
xor
sub
lret
xchg
movsl
inc
addr16
fcmovnbe
pop
rcrb
loop
out
cs
gs
jle
test
das
loop
ss
imul
mov
movsb
cmp
andb
push
push
fwait
xor
and
push
ret
jo
inc
rorl
push
fwait
popf
fldenv
sub
dec
pop
aas
jl
les
repz
shlb
imul
and
cld
push
mov
popf
fidivrl
les
loope,pt
fwait
xchg
out
cmp
inc
js
cmpsb
ret
cld
lock
mov
les
xchg
loope
les
je
cmp
cld
sub
mov
xor
out
jno
loop
cmp
out
cs
mov
mov
sbb
in
arpl
mov
push
mov
das
jge
mov
push
sbb
adcl
inc
jnp
mov
mov
jns
int
nop
movsl
loop
ljmp
fs
cmpsl
faddl
mov
test
dec
pushf
jae
sbb
mov
inc
lahf
arpl
sbb
test
sub
dec
and
ret
sub
jle
fisubs
mov
orb
mov
or
mov
loopne
jl
enter
fidivs
push
movsb
aam
arpl
jge
cmp
xchg
cmp
mov
push
cmp
xchg
hlt
int
sub
pop
loop
or
aam
cmp
inc
dec
inc
lret
cmpsb
jl
jb
push
dec
xchg
aaa
sahf
arpl
push
ljmp
push
sbb
stos
cmp
and
mov
inc
mov
mov
pop
lods
mov
sbb
mov
sub
popf
in
pop
push
jno
xchg
das
test
xor
push
sub
out
xor
rcr
sbb
inc
out
xchg
and
idivl
sbb
leave
das
pop
loope
popf
mov
shrl
adc
xchg
rorb
xchg
and
mov
adc
icebp
or
mov
je
adc
outsl
xor
add
hlt
lcall
fs
stc
adc
fidivrs
out
hlt
test
sub
push
bound
into
sbb
gs
dec
in
jbe
mov
mov
dec
push
mov
or
adcb
cld
add
adc
jns
les
and
mov
sbb
cltd
cmp
sti
stos
fs
out
lcall
inc
js
insb
pusha
int
xor
push
and
lods
cmp
add
addr16
jg
and
cmp
je
xchg
loop
je
dec
call
jae
movsb
andl
and
and
jge
jbe
sbb
aam
stos
pop
jne
cltd
pop
lea
test
sahf
cmp
ja
adc
dec
lods
jnp
inc
rclb
cmp
pop
ret
addr16
into
daa
add
in
stos
testb
enter
pop
push
mov
cli
in
adc
push
xor
add
stos
cmp
xchg
mov
xor
lods
or
lods
lods
aad
push
outsb
inc
enter
jns
stos
sbb
testb
sbb
push
add
hlt
mov
dec
xor
pop
xlat
xacquire
jne
xchg
loopne
xchg
mov
mov
shrb
lret
mov
stos
mov
cmpsl
pop
add
je
mov
pop
aaa
jmp
dec
xchg
movsl
ss
mov
adc
popa
sti
push
add
push
cmp
fistpl
imul
cld
or
add
inc
mov
cmpsl
xchg
push
jecxz
into
mov
hlt
hlt
pop
lcall
mov
xor
and
and
mov
pop
sbb
cmp
in
cmc
out
pop
shlb
add
int3
aas
mov
pop
pop
xor
ja
dec
jae
loop
in
mov
shlb
popl
shrb
add
push
lods
and
mov
lock
add
xchg
push
xor
add
xor
jns
fidivl
lcall
aaa
add
mov
mov
addr16
dec
xchg
pusha
pop
cmp
mov
sbb
xchg
fcomps
je
dec
jo
cmpsb
int
and
mov
add
and
and
imull
repz
hlt
push
test
sub
sub
insb
pop
jl
in
mov
xchg
enter
push
xchg
insl
std
test
rcl
xchg
ljmp
and
fs
adc
jle
pop
cltd
cltd
aas
fidivrl
and
sub
loope
test
jbe
dec
sbbb
push
or
adc
lahf
repnz
mov
inc
jp
xchg
fnstsw
mov
out
jae
inc
test
inc
xchg
xchg
in
cmp
cs
adc
into
daa
and
mov
in
inc
ret
or
push
mov
mov
ljmp
or
jno
std
pop
push
cmp
fsubs
dec
push
mov
setbe
jne
lods
mov
xchg
jns
adc
push
push
pop
inc
addr16
xchg
scas
dec
jo
jmp
mov
cmc
xchg
fnstenv
ror
mov
mov
and
adc
push
mov
bound
mov
mov
insl
loope
pop
xor
in
and
xor
enter
adc
fildl
je
cltd
loope
jg
rcrb
xor
dec
xor
pop
or
cmp
xchg
dec
jb
lea
mov
xlat
or
out
xchg
pop
pop
jmp
inc
loop
adc
inc
std
movsl
inc
add
and
outsl
jno
mov
fcompl
sbb
cmp
xchg
mov
out
aas
or
das
sub
arpl
fmull
pop
xor
out
xlat
xchg
xchg
repz
aam
or
dec
insl
repnz
cmpl
mov
aad
or
xchg
data16
pusha
mov
pusha
aas
push
push
jns
mov
shl
or
dec
dec
mov
leave
cmp
sahf
mov
loopne
xor
lea
mov
jo
push
movsl
insb
add
pop
loopne
add
mul
sub
push
sbb
iret
scas
repz
std
enter
das
outsb
mov
lock
lods
cwtl
mov
addb
mov
xor
fcmovnb
or
inc
nop
loopne
mov
push
mov
xchg
sti
and
pop
inc
jp
dec
std
lret
out
pusha
xor
clc
fmul
dec
jmp
adc
mov
repnz
adc
sarl
pop
add
ja
sbb
cmp
sbb
scas
dec
mov
rclb
std
and
jg
cmp
pusha
loope
pop
mov
mov
pop
and
outsl
jbe
out
xor
out
iret
lods
mov
mov
mov
mov
xchg
mov
add
mov
aad
fsts
mov
cmp
or
lcall
in
out
mov
or
movsb
aam
out
jns
xchg
ss
inc
ljmp
fldcw
lahf
inc
push
ret
fucomi
ret
ljmp
das
sbb
jge
cwtl
mov
cmp
cli
jne
cmpsb
mov
xor
je
mov
add
mov
mov
add
dec
sti
iret
loop
add
lea
rolb
jecxz
rorl
add
and
movsl
mov
add
stos
jnp
repz
test
pusha
mov
call
mov
mov
loopne
push
pop
xchg
inc
sub
in
xchg
hlt
and
dec
cld
pushf
out
push
mov
call
repnz
jae
dec
inc
pop
mov
sbb
pop
fisubrs
inc
mov
movsb
sub
inc
and
fsubr
bound
outsb
int
mov
mov
push
lahf
push
xchg
xor
jne
add
das
or
popf
stos
scas
leave
sbb
test
mov
leave
pop
loopne
shrb
fiaddl
icebp
push
add
sub
mov
mov
xchg
cmp
and
int
sub
add
shll
push
les
in
cmc
ljmp
js
lods
iret
or
dec
cltd
pop
imul
into
outsb
lahf
mov
xor
mov
jl
rol
lods
mov
in
adc
adc
call
push
cmpsl
into
bound
pop
movsl
std
push
xor
jle
add
sub
mov
inc
jecxz
addr16
dec
in
rclb
mov
pop
push
fnstcw
lods
daa
adc
dec
loop
sahf
fst
out
out
add
xchg
scas
or
cld
pop
clc
mov
repz
cli
and
jnp
cli
outsl
mov
xchg
sub
aas
sub
int3
daa
push
inc
in
cwtl
js
add
outsl
push
mov
sub
jns
pop
repz
daa
rol
pop
fisttpl
and
loop
movsl
call
push
sub
or
pop
push
mov
addr16
int
ret
test
outsb
pop
mov
mov
jno
sahf
subb
mov
mov
scas
ss
mov
mov
in
out
and
mov
xor
lcall
fsubs
xchg
mov
push
lea
arpl
mov
xor
je
jg
mov
xchg
leave
jae
push
js
fcoml
int
loopw
and
jmp
sbb
inc
test
add
inc
call
test
mov
lcall
bound
out
and
xlat
xlat
push
mov
cmc
das
xlat
sbb
add
in
imul
push
ljmp
or
dec
pop
mov
xor
xor
xchg
inc
aaa
pop
mov
mov
sbb
mov
shr
mov
in
sbb
ljmp
jg
dec
lods
outsl
jne
iret
dec
and
das
xchg
xchg
loope
sbb
faddl
es
loop
lcall
dec
and
cmp
arpl
popf
cld
popf
cld
dec
xor
rcrl
pop
push
negl
inc
cmp
mov
inc
das
cmc
loopne
iret
testb
stos
cmp
ss
sbb
mov
popf
cmp
mull
loope
push
movsl
les
inc
addb
ljmp
test
mov
pop
insl
test
dec
pop
fwait
pop
and
pop
popf
mov
btr
out
jbe
gs
hlt
push
sar
cmp
mov
int3
jbe
xchg
call
inc
xor
adc
mov
xchg
scas
sbb
fiaddl
aaa
mov
inc
cmp
or
add
in
sub
jge
or
fdivr
cmp
lcall
iret
sub
or
inc
gs
push
scas
xchg
negb
sbb
fwait
test
imul
jl
loopne
rcll
add
aam
pusha
inc
popf
call
cld
push
cmp
and
cmp
lds
xor
sub
testl
xchg
inc
lret
adc
pop
imulb
mov
xchg
mov
and
push
add
scas
or
dec
xor
cmp
xchg
ljmp
jge
mov
rorb
adc
mov
mov
push
scas
mov
arpl
not
and
mov
xor
and
das
jmp
leave
push
outsl
int3
push
sub
imul
test
subb
int3
lods
jge
js
testb
arpl
mov
mov
fiadds
add
pusha
add
add
mov
ficoms
sub
leave
pop
arpl
xchg
push
mov
cmp
pushf
cmp
mov
adc
lds
xor
pop
enter
sub
push
sbb
aam
lcall
ret
jmp
fs
inc
xlat
xor
cmpsb
sahf
inc
fwait
icebp
into
mov
mov
push
lods
out
mov
pop
and
in
test
test
call
outsl
into
loopne
jb
bound
lods
shll
add
and
int3
push
jmp
int3
stc
fs
shr
mov
dec
arpl
dec
sub
jmp
scas
cmp
xchg
adc
mov
test
xchg
mov
add
mov
sbb
sbb
mov
int
cltd
sar
push
jbe
fs
push
and
adc
shrl
ret
mov
lcall
out
popa
add
popf
lfs
loop
push
mov
push
add
jmp
test
aad
add
or
in
jp
aad
stos
mov
and
into
lret
mov
add
xlat
notl
cmpsl
xor
push
xor
js
xor
and
add
jo
dec
js
jmp
mov
stc
in
xchg
js
pop
andb
negb
cli
std
nop
sbb
aam
aad
inc
dec
ljmp
dec
lahf
jl
addl
pop
dec
mov
pusha
loopne
jecxz
aam
xor
aas
xchg
mul
and
sahf
sub
ljmp
pushf
xor
or
adc
fisubrs
lcall
dec
popf
lea
loopne
scas
data16
mov
loope
and
push
out
sub
negb
pop
lcall
scas
ret
stc
ja
lods
stc
shll
lds
inc
test
cmp
mov
sub
enter
repnz
pop
cmpsb
push
orl
nop
mov
shlb
lret
stos
push
in
mov
cmp
shlb
in
add
push
cmp
pop
cmc
ss
adc
mov
fisubs
shrb
or
fdivrl
lcall
lret
test
inc
mov
rolb
std
cltd
pop
shlb
jo
loopne
xor
cmp
sti
mov
cmp
rol
jae
mov
inc
or
pop
mov
jnp
or
mov
dec
pop
pop
insb
cmpsb
jae
pop
insb
or
cmpsl
scas
xchg
frstor
mov
adc
sub
insb
fadd
imul
inc
dec
js
sbb
mov
or
dec
call
sub
xadd
iret
out
leave
in
xchg
pop
insb
lcall
aas
daa
push
pop
mov
lods
ss
data16
mov
imul
cmp
jp
cmp
pop
leave
imull
mov
negl
imulb
mov
jmp
rclb
inc
lret
adc
xchg
dec
adc
sbb
in
sbb
invlpg
push
dec
insb
cmp
in
inc
das
push
mov
dec
inc
imul
scas
scas
jo
jg
inc
mov
outsb
insl
in
xchg
movsl
popa
popa
test
xchg
into
sub
iret
xchg
cs
scas
sbb
mov
rcl
pop
pop
cmpsb
cmp
or
add
jnp
mov
loopne
pop
or
cmp
jmp
jb
cs
sbb
lds
hlt
rcrb
out
test
test
pop
pop
adcl
out
lahf
movsl
sbb
cmp
mov
cli
push
push
mov
mov
mov
sbb
push
xchg
scas
aad
imul
out
mov
mov
ret
popf
in
dec
lret
das
jl
xlat
pop
frstor
xor
xor
sbb
sbb
push
push
mov
aas
push
and
out
cmpsl
cmc
adc
xor
jno
adc
adc
or
push
xchg
sub
add
add
mov
cmp
mov
in
or
add
data16
mov
dec
fldt
dec
pop
pop
adc
je
addr16
or
in
sub
push
sbb
mov
data16
fwait
pop
ficoml
je
jl
push
lds
lock
mov
inc
mov
test
dec
cmc
in
aam
add
lds
xchg
or
mov
in
int3
xor
adc
outsl
dec
gs
in
jl
jl
popa
popf
push
sti
jecxz
hlt
inc
aaa
mov
pushf
arpl
lea
iret
jmp
lea
mov
ret
out
int
xor
mov
fisttpll
jne
mov
ds
clc
in
jno
mov
xchg
popf
movsl
pop
cmp
sbb
jnp
loope
dec
xchg
mov
fldenv
mov
lret
scas
xchg
mov
sbb
sub
in
out
lret
add
stos
jae
stc
mov
xor
adc
test
nop
xchg
jns
iret
addr16
outsb
mov
nop
enter
jbe
ret
xchg
mov
out
cmp
loopne
stos
dec
cmpsl
mov
push
leave
fwait
and
shl
adc
or
lret
xchg
and
cmp
into
mov
fidivs
scas
sahf
cmc
add
fwait
testb
loopne
shll
aas
jae
cwtl
or
mov
xchg
mov
cwtl
idiv
leave
inc
stc
aam
daa
push
rorb
jg
nop
mov
jge
hlt
into
pusha
mov
mov
imul
rorl
xlat
sub
scas
popa
int
repz
and
fsubrp
xchg
das
test
sarl
add
cmp
mov
pop
jmp
stos
inc
jnp
dec
pop
cmp
or
pop
in
std
repz
mov
loopne
aaa
ja
test
inc
cmp
jmp
jae
push
in
pop
adc
mov
sub
lods
xor
pop
nop
mov
add
or
pop
cltd
ljmp
xchg
std
lock
pushl
lods
adc
jno
cmp
inc
cs
in
insb
cs
mov
clc
sub
daa
test
and
popf
mov
jne
popf
orb
movsl
mov
push
sub
fisubrs
shl
mov
jne
add
adc
test
mov
in
inc
jb
or
mov
mov
std
inc
dec
into
jl
fnstenv
jp
movsb
add
xchg
push
lock
data16
sahf
repz
push
fcompl
pop
hlt
xor
cmp
aam
mov
loope
pop
xorl
jbe
adc
cmpl
dec
push
push
push
sub
cmp
xor
add
pop
hlt
and
mov
mov
ret
xchg
adc
shll
out
lret
sub
xchg
add
lock
lahf
xlat
pop
cmp
pushf
dec
sub
cmp
sbb
fnstcw
sub
jns
lock
fcomps
or
jecxz
pop
cwtl
mov
es
sbb
mov
mov
mov
push
inc
xchg
scas
xchg
jmp
pop
adcb
push
shll
mov
push
lcall
imull
push
out
mov
xor
mov
pop
std
sub
sub
rclb
sar
pop
push
gs
cmpsb
or
mov
in
arpl
cltd
or
and
add
pop
xchg
sub
in
sbb
and
into
push
addr16
ss
filds
mov
lds
ss
adc
mov
mov
frstor
shl
sbb
lock
mov
pop
push
or
aaa
in
xchg
mov
lahf
mov
and
push
leave
mov
jge
fdivr
lea
fwait
lret
or
scas
pop
test
js
jbe
mov
stos
push
sub
jmp
int
sahf
and
gs
test
stos
inc
cmp
jge
mov
icebp
adc
mov
jp
aaa
dec
mov
xor
fiadds
pop
dec
imul
adc
cmp
jae
xchg
adc
xor
adc
lods
fmuls
xor
dec
pop
and
mov
loop
imul
cmp
push
aam
jge
insb
adc
pop
shll
xchg
movsb
ret
jbe
stos
shl
inc
sbb
xchg
inc
roll
mov
ret
imul
ja
jo
or
adc
les
mov
pushl
jb
xchg
adc
sub
or
popf
insl
or
xchg
ja
lcall
cmp
jmp
push
pop
pop
mov
scas
jecxz
bound
add
mov
xor
es
div
adc
daa
add
xor
pop
mov
push
call
inc
repnz
mov
insb
pop
lea
add
and
inc
xchg
adc
mov
push
test
rolb
adc
repz
jae
push
cs
je
cmpsl
enter
jle
mov
lret
bound
adc
push
adc
jnp
out
test
sub
adc
dec
aaa
sbb
out
mov
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
jmp
xlat
repz
xchg
mov
mov
les
test
int
bound
adcl
and
or
movsl
cltd
mov
mov
or
adc
shlb
rcl
pushf
push
mov
es
dec
mov
outsb
pop
mov
and
or
adc
sbb
cmp
addl
out
fsubrl
lods
sub
movsb
pop
movsl
test
sbb
inc
ljmp
cli
mov
inc
sbb
lret
or
cs
mov
xor
iret
clc
sub
jge
lods
mov
shl
lods
push
jnp
fstpt
movsb
push
loop
adc
rol
dec
out
aam
jno
in
jae
push
inc
xchg
int
pop
je
repnz
sub
sbb
add
fsubrp
add
btc
push
adc
dec
hlt
ljmp
cwtl
xchg
push
arpl
xchg
loopne
sbb
int3
xor
iret
ret
mov
push
mull
jno
push
jbe
sub
jle,pt
out
sbb
outsl
ror
rclb
rcll
not
dec
repz
add
push
aam
jmp
cli
insb
jge
pop
lret
stos
inc
mov
push
pop
jp
or
fidivrl
shll
dec
xor
aad
or
stos
ret
lahf
mov
shll
lret
mov
mov
push
push
int
and
xchg
sahf
add
into
int
pop
mov
pop
push
cmc
rcrl
sub
cmpsl
dec
push
test
or
jns
iret
fistpll
out
fdivr
cmpsb
shlb
cli
cltd
add
mov
mov
loop
cmc
xchg
out
jecxz
divl
popa
sbb
cmp
cmpsl
push
xlat
fisubl
mov
out
clc
pop
and
mov
push
adc
jecxz
mov
push
jmp
mov
add
and
lahf
inc
xlat
flds
xor
pop
adc
mov
sahf
ja
stos
mov
jle
ja
pop
mov
sub
and
bound
iret
sub
sub
mov
cmpsb
call
test
jg
fs
xchg
popf
scas
mov
xchg
add
out
mov
inc
test
and
imulb
cli
fdiv
xor
dec
xor
out
xchg
mov
ret
hlt
or
inc
pop
mov
jmp
sub
inc
xchg
std
mov
adc
dec
sub
in
dec
dec
leave
notb
adc
and
lock
mov
adc
and
mov
and
inc
sub
lret
into
and
aam
inc
mov
enter
and
ja
shlb
push
jnp
clc
xchg
fisubl
sahf
int3
add
push
mov
fmul
push
pop
mov
xor
adc
push
mov
add
addb
in
subb
orl
dec
decb
fimuls
dec
out
sarl
xchg
rorb
inc
push
push
jnp
inc
sbb
push
stc
daa
dec
stc
daa
outsl
fsubl
lods
insb
int
cwtl
xor
mov
push
inc
movsl
cltd
and
loopne
aas
adc
add
aam
jl
jg
pop
pop
xor
ror
sbb
pop
mov
jg
sbb
ffreep
jl
or
or
mov
in
cltd
or
pushf
lcall
imul
mov
pop
cmp
jb
int3
sarl
jmp
xchg
pop
scas
in
xchg
pop
and
push
xchg
push
push
in
push
cmp
push
jno
in
sahf
mov
popf
jb
testl
xchg
jb
int
add
sub
stos
cmp
xchg
push
sahf
imul
scas
je
jl
nop
mov
out
dec
xor
movsl
imul
xchg
mov
imul
inc
cmp
sub
cmp
ficompl
xchg
popa
cmpsl
test
and
lods
or
add
pop
loop
mov
insb
mov
rcll
or
mov
mov
nop
test
into
cwtl
inc
or
orl
mov
mov
push
fsubrp
test
pop
test
xor
addl
stos
inc
xchg
push
fisubrl
arpl
inc
sub
pop
sub
push
cmp
shl
or
std
mulb
loope
sub
adc
xor
test
inc
jmp
in
jnp
add
or
jb
mov
lcall
arpl
pop
pop
cmp
daa
xchg
sub
dec
sub
dec
es
push
mov
ret
inc
fs
mov
testl
gs
dec
not
fildl
lcall
test
fs
jecxz
xor
outsl
xchg
jecxz
cpuid
pop
shll
and
movsl
mov
dec
mov
sahf
in
cltd
add
mov
xchg
or
sbb
les
push
mov
xor
fdivl
ret
and
addr16
rcrb
popa
and
bound
jge
cmp
and
sahf
inc
or
aaa
std
dec
add
sbb
push
das
shlb
jl
lcall
or
minps
dec
ret
js
pop
push
das
add
imul
lret
in
shlb
je
mulb
add
xchg
jg
lret
mov
xchg
es
dec
push
sbb
sbb
cmp
out
lods
pop
inc
sbb
into
cli
cmp
xchg
push
push
lahf
lds
mov
xchg
jecxz
inc
idivl
into
xor
pop
add
cmp
sub
enter
lods
xor
cmp
xor
mov
sbb
sub
jb
or
xchg
fistps
push
test
sahf
cmp
push
es
cld
dec
pop
fstl
mov
xor
mov
sbb
push
data16
add
push
mov
push
outsl
stos
imul
decl
jb
mov
popf
adc
push
imul
imul
inc
rolb
sbb
mov
add
mov
sbb
test
repnz
push
sbbb
cmp
mov
mov
xchg
mov
mov
ret
cs
and
sbb
fdivrl
xor
push
cmpsb
add
cli
jb
xchg
pop
cmp
push
mov
imulb
inc
or
es
scas
pop
outsl
popl
sbb
enter
cmpsb
dec
iret
xor
pop
movsb
loop
rcrb
push
ljmp
xchg
jno
mov
je
lcall
xor
mov
push
arpl
sub
inc
into
mov
outsb
adc
mov
jecxz
inc
sahf
jo
std
or
clc
ret
into
and
popa
lahf
mov
jne
in
jno
scas
cmpsb
stos
rorl
pop
sub
and
rcr
push
push
mov
add
fbstp
addr16
rclb
push
push
dec
mov
lcall
pusha
sub
mov
cmp
dec
iret
popf
push
int3
cmp
jg
pop
xchg
jbe
mov
aam
jbe
pushf
stos
arpl
lock
add
jle
mov
pop
mov
mulb
and
frstor
pop
dec
adc
dec
jo
pop
frstor
cmp
out
addr16
outsb
xor
jge
movb
fisubs
fs
int3
mov
call
test
pop
ret
mov
and
insb
xchg
mov
fcoms
sbb
inc
or
xchg
in
ljmp
mov
mov
mov
cmp
out
lods
mov
lock
cmp
inc
aad
add
adcl
inc
xor
dec
cwtl
ret
out
lods
jp
xchg
popf
sbb
sub
loopne
jne
shlb
xor
popf
mov
nop
fwait
jb
je
iret
hlt
aam
push
sub
dec
jmp
test
pop
lods
add
jecxz
push
lret
pushf
sub
push
push
pop
fsubr
repz
adc
loop
dec
int3
flds
pushf
in
jmp
adc
adcl
jns
push
mov
into
cmp
sbb
sbb
mov
es
lahf
loope
push
inc
hlt
into
icebp
and
dec
xchg
in
test
inc
int3
lcall
sar
fcoml
mov
dec
pusha
pop
dec
int
lcall
add
ret
bound
filds
lret
aas
mov
mov
inc
enter
mov
xchg
cmp
adc
ja
cmpsb
addps
ret
aam
pop
sub
pop
mov
jae
and
mov
jg
cli
mov
jecxz
fs
mov
fcomp
lcall
and
enter
push
pop
xlat
or
jecxz
mov
mov
iret
imul
mov
lods
cs
bound
xchg
mov
push
sarb
jg
imul
xchg
fwait
xor
sub
adc
subb
inc
and
mov
jno
popf
insb
xchg
sbb
or
pop
jne
in
outsl
mov
mov
jno
ljmp
pop
or
jmp
ljmp
in
mov
mov
cmc
push
mov
xlat
adc
daa
xchg
mov
out
mov
mov
imul
jp
push
in
inc
pop
out
imull
or
xchg
sbb
rcl
sub
push
cmp
aam
dec
xor
shrl
jmp
fisttpll
cmp
faddl
mov
in
xchg
or
mov
xchg
lods
mov
cmp
imul
xor
push
mov
out
add
shll
into
ret
and
stos
mov
inc
add
xor
adc
mov
push
mov
repz
cmp
dec
or
sub
lahf
out
out
int3
lock
pop
mov
stos
mov
xor
pop
mov
inc
movsl
pop
cld
push
xchg
in
jecxz
xchg
stc
mov
shl
or
or
xor
jle
dec
stc
sub
andb
sbb
gs
aad
cwtl
js
adc
dec
insb
mov
dec
imul
mov
mov
push
jecxz
stos
repnz
mull
dec
xchg
hlt
sarl
ret
ret
test
orl
sub
adc
daa
faddl
lret
mov
nop
xorl
or
les
sbb
xchg
xlat
ss
push
and
pop
mov
shll
sbb
xor
add
cltd
sbb
pop
xor
and
paddsb
hlt
repz
xor
inc
or
cmpl
sahf
add
mov
test
insl
ficoms
mov
jb
inc
inc
sub
lock
ss
ficompl
pop
jne
cmp
aad
popa
push
enter
mov
pop
ja
mov
mov
inc
cmpsl
movsb
sub
outsb
push
lret
jnp
adc
js
push
aad
insl
push
xor
jnp
mov
xor
sbb
sarl
inc
fisubrl
test
mov
inc
cmp
pop
jmp
jnp
sar
fwait
ljmp
repnz
aad
pop
out
cmp
movsb
sti
iret
movsl
scas
lret
push
xor
jnp
cmp
jbe
rcrl
imul
push
push
mov
mov
jb
stos
lahf
fstpl
sbb
movsb
popf
mov
push
push
xchg
dec
iret
mov
add
mov
pop
mov
mov
imul
movsb
or
add
divl
and
loope
jg
cs
out
xlat
xor
sbb
mov
mov
push
fistl
insl
adc
call
dec
dec
test
int
and
cmpsl
mov
add
mov
sbb
aad
adc
ds
daa
adc
push
xchg
repnz
mov
inc
cmp
or
test
lea
les
imulb
and
es
in
push
es
sub
imul
mov
insl
adc
imul
sbb
iret
lret
jo
ja
sub
mov
jmp
int
es
sti
xor
mov
xlat
scas
jl
jle
adc
inc
mov
sub
xor
push
jl
cmp
jnp
lods
pop
mov
inc
pop
cmp
push
xchg
or
repnz
push
fincstp
ret
aaa
popa
inc
fsubl
jp
mov
ss
sub
fucomp
dec
mov
or
orl
jb
repz
pcmpgtb
shrl
jne
std
sub
cmc
jp
xor
ret
iret
or
push
nop
adc
shl
xchg
xchg
adc
pop
pop
out
lock
cmp
push
test
adc
xor
jg
movb
adc
xchg
inc
rcll
jecxz
jbe
jbe
inc
cmp
adc
and
cs
adc
lods
lods
sub
pop
xchg
inc
push
add
in
loopne
jbe
fstpl
loopne
loopne
sbb
sbb
mov
and
shll
arpl
movsl
push
and
cmp
aad
icebp
jae
ds
outsl
cld
sub
sbb
data16
mov
pop
fs
xchg
sub
ret
adc
aam
fisubrl
mov
lods
cmpsb
js
into
mov
sub
in
sub
cltd
sub
sub
sti
mov
add
push
loopne
sbb
ret
fisttpl
inc
or
imul
into
xchg
mov
cmp
enter
jo
gs
test
lock
in
fstpt
jns
and
or
enter
sarl
inc
ljmp
cmc
ds
mov
call
push
imul
sbb
imul
mov
outsb
addr16
nop
rclb
jmp
xor
insl
jmp
mov
cmc
sbb
adc
lahf
fnstcw
adc
mov
jns
xchg
lods
lods
out
shlb
mul
jecxz
fsubrl
shl
stc
dec
outsl
fisttps
pushf
mov
jle
imulb
lret
iret
jg
in
or
in
dec
pusha
pop
cmpsb
dec
scas
aam
or
lahf
lcall
bound
and
jo
pop
and
popw
outsb
push
sub
mov
sub
dec
in
pop
imul
loop
pop
jl
imul
ret
stos
dec
adc
sbbb
clc
daa
popf
lret
test
cmpb
cmp
push
jmp
test
sbb
inc
xlat
cltd
js
sbb
scas
xchg
mov
mov
sbb
scas
or
jne
sti
sbb
rcll
pcmpgtb
mov
cmc
js
mov
jp
inc
cmp
andl
mov
dec
mov
std
push
aaa
push
and
mov
mov
cmc
push
out
das
sub
test
ljmp
dec
fdivp
out
pop
xor
mov
jo
cs
cld
imul
lds
test
adc
icebp
jnp
cmp
nopl
dec
jns
out
rcrl
sub
add
jl
jp
test
pop
inc
int
inc
push
pop
mov
fimuls
call
xchg
cmp
loop
pop
add
sbb
xor
movsb
cli
clc
pusha
jo
mov
cli
test
lock
mov
xchg
xor
inc
out
mov
cli
xor
pop
jo
loopne
addr16
jno
mov
jmp
and
insb
add
jecxz
sub
sub
mov
push
out
bound
shr
pop
sbb
loopne
push
pop
pushf
rcll
push
mov
daa
jns
pop
cs
leave
push
xchg
fucomi
adc
pop
adc
shlb
pop
pop
jbe
cmp
pushl
xor
pop
and
js
loope
xor
orb
cmpsb
or
test
icebp
test
and
test
mov
dec
xchg
lcall
jmp
insl
aaa
mov
test
shrb
test
bound
sub
and
lret
xchg
pop
stc
adc
or
sbb
test
shrb
movsl
jle
int3
inc
xor
inc
lahf
mov
mov
sub
xor
push
movsl
test
inc
adc
in
jae
call
sub
std
ljmp
ret
insl
stos
js
sub
add
or
repnz
lds
fisubl
push
stos
pushf
insl
dec
inc
push
lods
aaa
aas
and
sbb
jnp
inc
xorl
push
mov
push
dec
test
add
in
xchg
dec
iret
call
into
xchg
jnp
nop
mov
pop
insl
push
lock
int
mov
push
fisttpll
or
or
js,pt
cmp
sub
mov
sub
sbb
dec
xlat
jecxz
dec
out
mov
stc
push
jo
mov
jbe
outsb
cmp
fimull
jl
mov
xchg
xor
push
push
into
sub
in
incl
mov
add
hlt
inc
add
sbb
sub
roll
je
jmp
fs
adc
decl
rcrl
icebp
xor
or
stos
adc
sti
jne
sub
sub
js
testl
mov
shrl
test
popa
xor
xor
test
in
inc
lahf
into
or
decb
notl
fcoml
mov
ret
inc
push
xor
in
int3
mov
call
aad
push
mov
imul
fcomip
mov
push
adc
cmp
add
fisubl
push
mov
icebp
sub
sub
mov
mov
cmpsb
mov
xor
shrl
xchg
dec
sarl
out
aam
xchg
mov
ljmp
dec
push
shlb
cwtl
cmp
fsub
adc
push
je
repz
jae
ja
popa
push
lahf
pop
pop
cltd
es
push
negl
fsubrl
repz
in
push
stos
loopne
xchg
addb
add
shl
fwait
rcrl
xchg
addr16
aas
sbbl
cmp
fcmovnbe
mov
mov
inc
cmp
dec
sahf
push
imul
adc
rorl
mov
or
jo
pop
outsl
mov
ret
lods
xchg
les
jne
notl
xor
xor
mov
xlat
mov
xchg
and
pop
cmp
jo
fadds
clc
push
pushf
adc
popf
gs
in
popf
jge
shll
mov
in
cld
jmp
sbb
mov
bound
and
ljmp
jnp
ret
xchg
xchg
ss
or
push
test
dec
aas
sbb
lahf
stos
sti
xor
cmp
test
repz
and
xor
pop
std
sbb
inc
sbb
lea
mov
mov
adc
int
or
or
imul
jnp
fstps
mov
lods
sbb
sub
xchg
clc
push
and
lds
fsubrl
add
jecxz
pusha
mov
xor
adc
ljmp
lea
sbb
jp
mov
sti
icebp
movsl
mov
and
push
cmp
cmpsb
shrl
shrl
ds
repnz
int
fwait
shrl
sub
jecxz
push
aas
ret
pop
mov
pop
loopne
push
sub
xchg
cmp
movsb
cmp
outsb
jge
push
pop
mov
push
in
sub
xchg
pop
pop
out
nop
xchg
cwtl
jae
push
cmp
sub
mov
and
inc
cs
cmp
fs
jo
pop
push
and
popf
mov
push
dec
inc
push
jecxz
test
ror
lret
shll
push
mov
push
and
fistpll
test
das
repnz
jno
and
xorl
in
push
lret
dec
ds
ljmp
mov
adc
cmp
dec
mov
jecxz
adc
inc
insl
call
loopne
dec
mov
ret
imul
or
jmp
xchg
sub
pushf
pop
pop
repnz
dec
inc
pop
push
dec
imul
aas
lahf
push
dec
jecxz
xchg
mov
test
inc
add
jmp
or
or
or
pop
out
dec
in
cli
mov
mov
std
movsl
push
jge
cld
movsl
or
or
enter
xchg
xchg
aaa
jl
push
push
mov
cmp
mov
mov
push
loopne
mov
mov
mov
outsb
sbb
xor
outsb
fidivrl
mov
mov
jl
pop
inc
mov
bound
shr
push
js
jbe
pop
jb
pop
loop
dec
sbb
ret
imul
sysenter
xchg
lcall
dec
iret
arpl
sub
or
mov
subl
sbb
testb
lods
xlat
incb
iret
pop
jb
cmc
ret
lock
std
aad
mov
sub
lret
mov
pop
dec
pop
xor
mov
push
jbe
repz
test
ds
sub
andl
mov
inc
test
mov
loope
sub
ret
fsubl
cmp
ret
scas
fstpt
in
in
sub
xchg
push
and
lcall
push
add
add
loope
jl
sub
mov
xchg
fadds
mov
and
inc
push
mov
adc
xchg
movl
inc
aam
xchg
std
jg
fists
cmovp
inc
jg
fistpl
fistpl
jns
lock
dec
mov
pop
test
ljmp
jecxz
xor
data16
xor
jb
cmc
jb
and
jl
cmc
mov
mov
sub
jge
push
push
pop
notl
jecxz
sub
push
xchg
pop
jbe
cltd
jae
fcompl
xor
sahf
xchg
fcmovnbe
sub
or
jl
pop
flds
and
or
jl
add
push
aam
ret
cwtl
subl
mov
dec
in
mov
pushf
shlb
mov
jo
cmp
mov
fbld
out
std
int3
stos
inc
or
test
outsl
mov
mov
jmp
xor
sbb
push
sub
shll
cmpb
pop
add
ret
mov
in
mov
insb
rcrl
xchg
xchg
movsl
sub
xchg
dec
jno
inc
mov
sbb
push
inc
mov
xchg
scas
out
sub
xchg
and
aas
dec
and
push
and
aaa
int3
jecxz
mov
lret
ljmp
jns
aaa
or
call
pop
sbb
and
dec
movsb
aam
call
cmp
out
dec
or
fs
inc
stos
jb
ret
repz
insl
adcb
and
mov
daa
rorb
addr16
cmp
fisubs
cmp
xor
xor
outsl
ja
adc
lret
add
fldl
mov
mov
and
sbb
incl
rolb
jle
xchg
jl
or
adc
sub
les
andb
and
mov
int3
push
lods
or
pop
or
aaa
sub
or
jp
test
xchg
push
lods
adc
les
outsb
dec
ffreep
add
jo
push
push
dec
push
add
adc
stos
pop
cmpsb
cmpsl
mov
ja
cmp
fwait
cmp
scas
dec
push
pop
cmp
cmp
inc
ja
dec
daa
mov
xchg
xchg
std
aam
mov
push
mov
cmp
out
jecxz
in
fstpt
loopne
push
add
and
jl
in
mov
cld
or
cli
lret
mov
sub
fbld
bound
jnp
scas
int
xchg
ret
fsubr
ss
sub
jae
mov
xchg
ss
sub
xchg
in
xor
jle
mov
cmp
in
jne
mov
mov
mov
xchg
mov
jbe
lods
insb
stc
cmp
pop
clc
movb
mov
aaa
lret
mov
and
inc
mov
loope
adc
bound
sbb
fists
sub
xor
iret
jne
sahf
inc
mov
int
ret
aaa
dec
adc
movsl
cmpsb
cld
mov
pop
fwait
sbb
test
ljmp
and
test
pusha
xchg
adc
mov
xor
popf
enter
jbe
inc
cmp
jge
cwtl
adc
je
sub
out
xchg
adc
or
mov
cmc
adc
fcomip
inc
ja
xchg
ja
fldcw
incl
scas
fwait
rcrl
sbb
inc
daa
push
pop
testb
add
mov
sub
ds
jecxz
inc
cmp
ret
jo
in
imul
adc
jle
pusha
mov
xor
mov
fimuls
mov
ss
cld
sub
inc
lret
mov
lods
bound
in
stos
lret
mov
addr16
mov
lret
and
jbe
mov
push
outsb
sbb
mov
mov
push
stos
inc
xchg
mov
and
xchg
push
dec
pushf
daa
fistpll
pusha
lods
fs
xchg
jg
and
xchg
sarb
jbe
aad
cmp
mov
dec
imul
rol
nop
stc
cmc
inc
pop
add
xor
push
in
divb
mov
push
jge
fwait
mov
sub
aam
iret
lods
repz
scas
filds
insl
fstpl
adc
sub
xchg
xchg
mov
mov
fmuls
dec
inc
inc
test
mov
xchg
stos
outsb
test
mov
or
dec
aam
inc
jp
push
cmpsl
push
jnp
add
aas
scas
lea
shrb
loopne
add
add
cmovb
add
jne
int3
aad
and
stos
add
in
push
xor
mov
xor
repnz
mov
movsl
pop
mov
mov
add
dec
cmp
push
xor
xor
jp
stc
xchg
shrb
mov
pop
jp
bound
pushf
cs
inc
add
scas
fcmove
inc
cmpsl
fcmovne
sbb
xchg
mov
fisttps
xchg
fldcw
add
mov
in
add
loope
into
fcmovu
daa
jae
add
adc
xchg
lds
mov
pusha
ds
leave
test
and
dec
sbb
in
rol
dec
pusha
jle
repnz
pop
sbb
test
push
les
mov
jg
gs
gs
mov
repnz
adc
bound
iret
add
cwtl
adc
cwtl
push
shl
lods
cmc
test
push
shrl
pusha
adcb
adc
mov
cmp
jnp
ds
vpmadcsswd
sub
push
lahf
sahf
jno
jo
ficoms
lret
push
imulb
push
push
sub
sbb
insl
loope
pop
movsl
test
push
enterw
pop
sub
stos
shl
jo
and
subb
aam
imul
dec
lret
sbb
fdivp
xchg
mov
lcall
and
int
lock
jb
cltd
push
dec
push
insb
and
adc
dec
xchg
popf
inc
mov
out
stc
jl
js
out
adc
fsubl
les
cmp
mov
pop
aad
aaa
cli
sarl
pop
push
adc
insb
dec
mov
fucomi
or
dec
adc
jle
lahf
sub
aad
push
popa
imul
jg
jns
mov
call
cmp
or
adc
bound
pop
sbb
bound
leave
jnp
call
gs
orl
pop
shrl
inc
and
stos
clc
inc
mov
lahf
mov
cmp
xor
push
lcall
pop
adc
pop
cli
jne
cmc
pop
jns
push
xor
xchg
sar
cltd
cli
popf
movb
cld
cmp
test
cwtl
pop
out
cmp
leave
int
xor
xor
mov
dec
jecxz
mov
mov
push
lcall
xlat
outsl
sbb
inc
cli
daa
movsb
jmp
xor
test
adc
ljmp
dec
xor
cmp
addr16
jmp
mov
adcl
and
jg
lock
enter
lret
ret
or
dec
and
test
sub
aas
xlat
adc
jb
addr16
es
pop
fldt
rclb
ret
sti
imul
mov
adc
and
sti
xchg
push
adc
leave
pop
mov
push
cli
je
insl
lea
dec
ljmp
ret
or
add
fimuls
push
pushf
mov
sbb
inc
mov
test
sub
in
aad
loope
add
enter
ja
and
fsubrl
fistl
int
pop
in
lcall
jl
and
xor
es
addr16
xchg
inc
cmpl
sub
sub
cmpsl
out
push
jne
in
xchg
addl
nop
in
sbb
xor
mov
repnz
dec
stos
or
clc
mov
or
mov
test
cmp
int
fdivs
ret
in
test
push
dec
mov
out
push
xor
mov
mov
call
gs
loop
cld
stos
cmp
add
xor
scas
push
incb
mov
das
inc
dec
mov
pop
pop
popf
mov
hlt
cmp
fs
addb
sbb
xor
adc
insb
jno
int
shrd
loope
dec
stos
lretw
in
push
dec
add
push
cmp
xor
test
inc
mov
punpckhbw
insl
in
iret
sub
push
hlt
and
add
jmp
out
mov
or
sub
or
push
jnp
mov
fsub
cmp
jp
add
or
push
inc
lods
inc
adc
adc
je
gs
sbb
and
jg
push
stos
cmp
dec
in
mov
xchg
sbb
adc
jl
cmp
ja
loop
jge
arpl
out
jno
out
loope
ficoml
inc
xor
inc
mov
push
out
adc
jp
inc
in
adc
jecxz
cmp
es
into
iret
jge
inc
pop
jnp
sub
jmp
clc
test
cmp
push
icebp
into
adc
orb
jne
sub
jmp
mov
adc
or
mov
clc
push
das
mov
pop
rolb
inc
js
test
cmp
sbb
out
in
dec
sub
mov
in
es
loopne
push
decb
cmp
imul
sbb
test
push
push
sbb
mov
out
cs
sbb
push
lods
and
add
neg
out
sub
dec
out
idivl
xchg
and
jecxz
lock
xlat
push
out
mov
int3
ljmp
out
in
and
idivb
jns
insl
cmpsb
inc
add
fsubs
mov
leave
inc
in
jle
jo
scas
jg
loop
std
arpl
adc
xor
or
test
nop
mov
or
test
cmpsb
out
mov
mov
dec
mov
add
jg
push
mov
cmpsb
xchg
test
popa
push
subb
xchg
fs
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
pushl
push
pushl
push
push
push
pushl
call
jmp
movl
adc
mov
addl
jmp
into
or
jg
fildll
dec
mov
fwait
cwtl
or
pop
bound
pusha
cld
adc
push
cmp
push
mov
jecxz
and
push
mull
jb
dec
mov
pop
jnp
arpl
xchg
sarl
mov
mov
mov
out
andl
jo
or
repz
push
cmp
in
sbb
mov
pusha
les
and
push
stos
insl
in
mov
xchg
aad
ja
rorl
movsb
sbb
dec
aam
dec
pop
and
repz
testl
and
loop
pop
cmp
out
shll
rclb
sbb
jno
pop
jp
lds
or
fistps
aam
xchg
jmp
pusha
push
filds
std
mov
stos
mov
sbb
and
aaa
incl
xchg
lods
fwait
xchg
adc
jle
sbb
mov
pop
test
sub
inc
inc
in
and
cli
mov
or
xor
xor
rorl
push
cmp
xchg
push
xchg
outsb
ret
and
lret
dec
xlat
adc
cmp
fnsave
xchg
mov
les
out
loopne
loopne
test
xchg
decl
std
pop
addr16
jg
daa
mov
sbb
push
faddl
orl
mov
into
sbb
fs
or
bound
pop
jnp
rclb
inc
jo
in
fistpll
inc
subb
sub
mov
pop
mov
and
mov
js
push
sub
movsl
mov
cmp
int3
jge
sbb
push
jg
and
sbbl
movb
rolb
inc
int
das
jge
rorl
xchg
cmp
pusha
push
movb
push
push
cmp
add
sbb
leave
and
add
add
cmpsl
push
jmp
jno
not
sbb
out
imul
add
pusha
mov
inc
leave
aas
divb
and
test
inc
sub
aam
push
pop
mov
mov
pop
mov
mov
cmpsl
ret
das
aam
mov
dec
pop
fwait
ss
xchg
lds
bound
jmp
sbbl
inc
leave
push
ret
dec
ret
imul
adcb
mov
inc
test
sbb
enter
and
imul
out
std
add
push
repnz
sbb
dec
icebp
cmc
xchg
add
shlb
pushf
dec
cmpsb
fbld
mov
mov
or
stos
dec
lods
stos
sbb
lea
adc
inc
mov
add
jb
inc
test
xchg
cmp
mov
movsl
dec
and
sarl
mov
cmp
lods
aam
jg
cli
outsb
or
or
xor
adc
mov
lcall
cmp
xchg
subb
add
xchg
sub
add
sahf
add
lods
inc
xor
add
add
xchg
into
cmp
cmp
dec
adc
xchg
mov
push
movsb
testb
add
or
xor
xlat
xchg
ljmp
sub
cs
push
sbb
adcb
sub
lret
dec
pusha
jmp
aas
mov
call
xor
das
adc
call
imul
mov
or
and
lods
std
nop
orl
sub
shl
loope
xchg
xor
inc
mov
cs
arpl
fs
cmpsb
lcall
jmp
add
mov
xor
loopne
push
mov
rorl
jmp
movsl
xchg
or
jnp
shlb
add
shll
iret
out
xor
mov
mov
xor
fisttps
in
xchg
out
aaa
sahf
xchg
cmpb
not
or
fldenv
add
sub
dec
xchg
je
xor
dec
mov
sbb
loopne
repnz
and
mov
fdivrs
push
aaa
ja
insb
je
xorb
sub
ja
data16
inc
insl
push
add
enter
popa
popa
pop
insb
add
lds
sub
enter
rorb
fwait
cltd
push
or
clc
mov
jne
or
inc
imul
mov
mov
rorl
aam
scas
xor
adc
in
scas
xchg
push
jns
popf
add
mov
mov
pop
stc
bnd
add
repnz
lock
pushf
adc
cwtl
nop
and
pop
rcll
mov
push
mov
cmp
mov
sub
jp
mov
inc
cmp
sbb
rorb
jp
fstps
add
js
inc
movsb
mov
leave
jle
cmc
imul
ret
or
jo
sbb
pop
and
mov
xor
out
psubw
je
ret
mov
popa
adc
aaa
out
arpl
fdivs
daa
sahf
lret
jecxz
and
sub
int
add
lock
data16
nop
jle
test
lahf
xchg
mov
mov
popa
lock
lds
leave
nop
lea
jge
mov
push
sub
cmc
xor
pop
mov
lods
or
rolb
cmc
inc
enter
ja
ljmp
xor
adc
popa
push
in
aam
call
out
lret
ljmp
testb
sbb
in
mov
mov
inc
in
xchg
cmp
out
dec
xor
push
xchg
movsb
mov
inc
or
addl
mov
jae
xor
adc
inc
mov
sub
mov
jnp
cmp
cmp
pop
cmp
bswap
pop
mov
jmp
lret
add
test
imul
sbb
xchg
sbb
sahf
add
and
adc
pop
shlb
sbb
js
shll
nop
outsb
jns
les
cmp
in
xchg
cmp
add
or
mov
test
cmc
mov
scas
xor
or
sbb
scas
sbb
jl
cltd
stos
and
into
cmp
or
lds
enter
jno
adc
cmpl
insb
jg
add
in
push
mov
pusha
push
bswap
jne
dec
js
into
arpl
push
ret
popa
mov
cmp
and
out
les
test
adc
lea
imul
jb
cwtl
push
jle
push
jp
mov
popf
jnp
adc
dec
ja
pop
dec
jle
fisubrs
popf
jbe
mov
mov
cmp
les
inc
leave
js
into
cli
xchg
adc
js
sub
mov
sbb
xlat
shrl
ficoml
mov
mov
movsb
xor
sub
scas
mov
test
or
js
dec
ret
out
dec
sbb
add
ffreep
imulb
mov
packssdw
or
mov
clc
dec
cs
sbb
sub
icebp
xchg
cmp
leave
imul
scas
add
cltd
sti
mov
ret
test
jb
add
dec
pop
enter
in
xchg
add
ss
cs
mov
lds
repz
mull
in
gs
sbb
xorb
push
jecxz
jecxz
xor
cmp
cmp
fisttps
jl
xchg
xchg
pop
shl
fistpl
or
and
aam
aad
xchg
fmull
lods
mov
mov
pop
fnsave
insb
scas
jge
mov
jbe
and
enter
in
or
sarb
add
cmp
mov
mov
dec
push
push
jmp
popf
sub
leave
mov
mov
push
or
pushf
aaa
add
adc
fwait
lcall
es
bound
subl
mov
ficompl
sbb
mov
mov
mov
or
stos
mov
adc
jg
cli
mov
out
sbb
lret
popf
aam
lds
rorl
mov
cld
dec
pusha
mov
js
pusha
mov
scas
xchg
xchg
cmp
push
lret
mov
lods
loope
movsl
pop
inc
cmpsl
std
imul
mov
lods
rolb
outsl
fldt
jl
xor
mov
dec
sbb
pusha
xchg
xlat
lret
lret
gs
mov
lock
icebp
cmp
pushf
jbe
fld
lahf
das
mov
pop
repnz
adc
push
push
xchg
lret
ljmp
dec
es
cmp
cmpsl
imull
dec
pop
cmpsl
std
call
mov
mov
cmc
pusha
fimuls
out
pop
sub
lret
repz
mov
fistl
pushf
jae
mov
aaa
data16
mov
shlb
in
add
insl
dec
jno
enter
data16
lcall
xor
sbb
sbb
xor
bound
call
repnz
adc
xor
mov
out
pop
arpl
cmpsl
dec
mov
mov
call
mov
in
add
data16
fldenv
sub
movsl
dec
das
movsl
add
jg
les
or
cmp
nop
pop
cmp
push
je
aas
or
sbb
sub
fbstp
fdivrs
movsl
push
push
inc
inc
fistl
mov
shlb
xchg
jg
adc
and
mov
lahf
test
ds
out
xchg
xor
pop
pop
sbb
clc
popa
adc
cmp
mov
mov
stos
sub
decl
cmp
xor
out
fs
jg
mov
xchg
xchg
mov
xchg
in
out
or
call
in
sbb
daa
xor
cmp
cmp
movsb
mov
push
fldenv
dec
cmp
je
in
and
xorb
mov
adc
lret
out
out
divl
andb
fdivr
fsubs
sub
lret
imul
es
add
push
imul
fs
ret
fiadds
or
mov
out
in
scas
fwait
jns
xor
andb
inc
addl
pushf
and
xchg
mov
pop
loop
sbb
adc
dec
ljmp
out
sbb
sbb
mov
clc
mov
adc
sbb
inc
outsl
cmpsl
rorb
cld
mov
xor
mov
adc
or
and
ds
stos
pusha
pop
push
mov
cwtl
lea
jmp
sarl
add
cmp
clc
das
inc
movsl
mov
mov
mov
add
sub
and
jne
sub
mov
leave
xchg
and
adc
jl
cld
inc
push
or
mov
push
mov
nop
ss
sbb
imul
lods
jnp
cmp
scas
in
inc
stos
inc
pop
das
inc
outsb
cmp
mov
addr16
cmp
aaa
imul
xchg
push
les
xchg
idivb
jb
movl
outsl
mov
or
test
ret
pshufw
mov
inc
jne
xchg
push
push
mov
pop
sbb
in
loope
ret
mov
or
add
ret
jmp
bnd
cmp
pop
mov
and
sbb
aam
aaa
cmpsb
xchg
shrb
xor
dec
cmp
push
mov
scas
xchg
inc
sub
cmpsl
in
jb
add
mov
orl
cwtl
aas
adc
mov
xchg
mov
into
jae
and
sbb
jle
xor
sti
out
pop
cmp
jge
sbb
xchg
jecxz
scas
add
dec
sar
jmp
mov
in
divb
push
and
or
xorl
in
jbe
mov
mov
out
mov
clc
pop
imul
clc
inc
lock
dec
out
popa
testl
mov
jecxz
fucomip
adc
add
cmp
cli
mov
inc
jp
xor
js
cmp
dec
cwtl
mov
pop
mov
push
call
cwtl
loope
push
xor
mov
mov
lcall
xor
or
adc
and
sub
push
pop
cmpsl
enter
push
xor
cltd
push
push
test
mov
pop
in
pop
testb
iret
cld
jl
push
dec
outsl
push
inc
scas
push
pop
popa
sub
jp
std
cmc
shlb
mov
orb
sbb
iret
adc
mov
add
lret
or
cmp
cmp
mov
aaa
repnz
test
mov
mov
test
add
cli
or
jle
mov
in
mov
add
dec
test
jle
daa
jecxz
pusha
int3
xor
enter
jbe
push
mov
imul
test
xchg
jecxz
outsl
imul
adc
jae
test
scas
inc
sub
xchg
pop
arpl
cwtl
jne
xchg
xchg
mov
test
inc
cmp
es
lods
or
push
dec
push
out
xor
int
popf
gs
sbb
in
and
xor
xchg
and
adc
xrelease
test
in
das
cmp
lret
push
inc
sub
repz
out
rorl
stc
push
bound
inc
outsl
in
fcoms
push
out
loopne
fldcw
ficoml
out
sbb
pop
fnsave
aam
pusha
int3
push
and
cmp
or
mov
and
jbe
pusha
sub
loopne
clc
call
jb
cltd
cmp
push
loopne
mov
mov
and
into
mov
fistpll
dec
dec
mov
inc
repnz
dec
inc
sbb
dec
sahf
cwtl
rolb
repz
out
xor
jo
movsb
adc
das
push
in
arpl
dec
xor
pop
loope
sub
aas
jnp
cmp
mov
jp
sub
adc
pushf
jno
push
movsl
pop
jno
dec
sub
into
sarl
pop
fisubl
mov
push
sub
test
push
push
or
movsl
pusha
sbb
rcl
pop
xchg
scas
mov
inc
xchg
mov
mov
ror
mov
sahf
pop
xlat
adc
ret
lcall
rcrb
sub
in
inc
mov
scas
cmpsb
adc
xchg
repnz
push
js
ret
and
pop
mov
sub
data16
pop
cmp
sub
lret
ja
xchg
in
lock
xchg
das
mov
or
fucomi
sbb
jge
stos
ja
lock
mov
pop
ror
mov
jge
imul
ja
jae
fldcw
cwtl
adcb
arpl
adc
xlat
dec
out
stos
sbb
andb
mov
insl
dec
shr
sbb
fdiv
sbb
cmpsl
adc
loop
popf
paddsb
shlb
xchg
outsl
ja
add
sub
stos
add
push
or
aas
loopne
lods
pop
or
test
outsb
loop
jno
int
ficompl
jno
orb
je
dec
cwtl
shlb
loopne
lret
xchg
das
divb
subb
movsl
xor
nop
in
xchg
mov
jo
mov
jmp
adc
fistps
aam
mov
mov
icebp
aas
lock
outsl
mov
cmpsb
push
push
stos
rclb
subl
inc
icebp
mov
sbb
popa
xchg
and
lds
xchg
or
int3
sti
call
ret
and
mov
pusha
jmp
lea
cmp
push
push
push
mulb
add
jp
xchg
out
jge
xchg
ja
ja
and
movsb
xchg
popa
push
jle
test
push
xor
iret
inc
adc
ja
scas
shll
movsl
xchg
mov
jecxz
mov
xor
and
std
fistps
inc
movsl
into
dec
inc
arpl
daa
cmp
mov
ret
test
dec
push
in
ret
mov
in
mov
ret
adc
jne
push
push
popa
shrb
inc
inc
aas
adc
cmc
ficoml
iret
or
xor
stc
adc
push
repz
ja
clc
pusha
mov
mov
aam
dec
in
fisubrs
cmp
nop
lcall
aad
scas
pop
daa
inc
hlt
inc
or
push
cmp
inc
insl
push
imul
xchg
push
fldenv
cmp
xchg
fldl
cmpsl
and
repnz
adc
and
add
das
call
xor
je
mulb
lret
add
aam
lock
lret
xchg
inc
mov
cmp
cmp
push
or
jnp
stos
mov
mov
dec
jno
mov
popf
mov
insl
outsl
aas
mov
insb
jno
lcall
cld
cmp
imul
je
ret
jg
lock
xor
inc
pop
lods
and
jne
rorl
aas
push
add
jns
pop
adc
jbe
xor
bound
adc
in
gs
push
pop
int3
mov
and
add
outsb
jbe
std
rcrl
fstl
mov
orl
mov
lret
sub
xor
jp
dec
insl
xor
mov
inc
ja
out
inc
test
and
popa
xchg
fcompl
adc
movsb
inc
pop
cli
xchg
repz
push
out
sub
inc
xchg
inc
je
xchg
sub
pusha
cmp
ja
fildl
stos
push
mov
xor
and
mov
test
clc
in
sbb
xchg
dec
scas
daa
mov
pop
sbb
jle
cmp
insl
mov
icebp
sub
add
push
lods
test
ss
inc
dec
sub
sbb
mov
cli
pop
or
and
sbb
push
add
sub
loopne
stos
adc
pop
nop
je
sub
pop
mov
xchg
es
pop
adc
mov
test
scas
ret
push
lcall
ljmp
lea
pop
xchg
pop
adc
dec
pop
xor
push
xor
sarl
jge
adc
or
mov
mov
das
adc
dec
dec
inc
je
cli
and
or
orl
mov
fiaddl
cmp
xor
mov
pusha
mov
jmp
scas
andl
outsb
cli
pop
lds
cmpl
hlt
cmpsl
lds
sub
icebp
push
je
in
cwtl
fstl
push
mov
pop
add
mov
aam
sub
jns
fiaddl
and
jl
inc
int3
fs
xchg
fmuls
xchg
xlat
ja
fisubs
andl
lahf
mov
jg
adcb
scas
mov
xchg
mov
cmp
adc
inc
stos
add
ret
adc
push
adc
movsb
lret
mov
cmp
dec
xor
aaa
pusha
iret
repz
movsl
sub
or
mov
sub
and
xor
shll
sahf
jb
and
sbb
mov
xor
jp
mov
shlb
out
outsl
xlat
mov
loop
adc
push
pop
sub
ds
movsb
or
jmp
cmp
leave
in
push
sbb
cmpb
jmp
mov
cmpsb
fsubr
loop
test
mov
out
push
inc
mov
ds
dec
mov
cwtl
jg
nop
adc
push
jae
push
xor
lret
add
addr16
xor
les
add
pop
or
ret
xor
fnstcw
popf
out
mov
pop
in
sub
lock
insl
dec
fistpl
push
add
loop
fwait
mov
dec
mov
add
int3
leave
or
jl
xchg
fnsave
mov
out
in
adc
idivl
and
push
punpckhdq
push
in
mov
nop
mov
sub
scas
mov
test
jmp
pop
call
xchg
push
dec
inc
add
loope
sub
fsubl
inc
repz
mov
add
into
aad
mov
pop
lret
mov
jbe
push
test
xor
pop
loope
xor
pop
iret
adc
sahf
sbb
loope
xor
fiadds
sbb
add
jg
mov
cmc
adc
inc
jge
sub
or
xchg
jmp
dec
sbb
xor
adc
nop
and
push
mov
mov
jmp
inc
shrb
adc
xchg
pop
rcll
or
das
mov
subb
mov
pop
orb
out
cli
out
xor
xchg
mov
add
notl
xchg
test
mov
jp
dec
mov
cmp
ficompl
jmp
dec
adc
jo
popa
xor
ret
jg
rcrb
mov
jb
adc
jbe
jg
hlt
cmp
mov
pop
dec
daa
icebp
mov
in
dec
mov
xchg
das
push
xchg
mov
leave
imul
pop
pop
dec
pop
jb
test
pop
mov
shrl
sbb
push
in
rcll
adc
imul
shl
enter
ret
push
fisttpll
aam
cs
adc
sti
fstl
dec
adc
mov
data16
mov
loop
jno
arpl
lods
cmp
push
mov
jne
mov
add
movsb
mov
push
jns
push
pusha
inc
shll
inc
je
sub
and
sub
fmuls
jbe
rcrb
mov
mov
dec
test
in
pop
inc
lock
add
mov
loopne
scas
or
pop
fs
ret
cmovbe
test
pop
das
pop
pop
roll
pop
inc
cld
and
xchg
lret
pop
cmpsb
sub
pop
inc
and
dec
cmp
inc
data16
test
mov
pop
add
dec
push
jbe
in
shrl
sub
das
dec
jbe
mov
inc
pop
cwtl
iret
xchg
mov
mov
add
xchg
out
fsub
or
or
clc
and
ljmp
ja
rcl
jecxz
fimull
jp
or
std
outsb
cmp
scas
mov
xor
xor
cmp
and
or
mov
js
je
fcmovbe
mov
int3
mov
push
in
jo
pop
clc
mov
xchg
jae
xchg
mov
jbe
sti
push
pop
out
or
mov
in
cmpsb
inc
jbe
mov
add
stos
outsl
or
mov
mov
aad
dec
out
shrb
jle
or
xor
es
jae
ret
add
lods
in
sbb
andl
sbb
and
add
jnp
fcmovu
pop
or
shll
loop
in
movsb
xchg
xor
jne
dec
mov
lock
test
addr16
xor
sbb
cmpsb
dec
inc
jl
int3
orl
pusha
inc
push
insb
outsl
imul
data16
xor
cmpsl
and
hlt
enter
in
fs
mov
rorl
xchg
mov
rcll
ljmp
xchg
adc
or
xlat
dec
popf
outsl
mov
pop
imul
jns
mov
dec
mov
push
popf
ljmp
mov
dec
cmp
imul
xor
out
outsb
rcrl
and
fcmovnu
jo
popf
adc
loop
inc
sub
psubusw
fcoms
sub
fs
mov
js
pop
xchg
cli
and
fs
bound
test
add
incb
mov
mov
add
xor
jecxz
jb
out
ss
ljmp
push
jae
mov
push
insl
pop
sbb
add
or
inc
in
rcrl
xchg
nop
dec
sub
push
mov
enter
pusha
int3
mov
and
jp
jno
jnp
push
mov
fcomps
pushf
lahf
ret
push
adc
ds
pop
and
pop
inc
ljmp
mov
ljmp
push
mov
sbbb
daa
popa
lock
icebp
test
fs
insb
push
inc
jecxz
xor
pop
xor
sarl
dec
or
mov
or
xchg
sar
xor
test
mov
xor
js
lock
mov
or
or
movsl
inc
pop
mov
mov
and
in
leave
ret
dec
dec
inc
pop
sbb
clc
ja
lahf
sahf
xor
sahf
xor
cmp
jp
adc
ficompl
sti
shr
mov
jl
andb
test
xor
sub
fwait
cmpsb
mulb
outsb
xor
mov
mov
inc
or
xchg
mov
idivb
push
aad
mov
xor
fldt
lcall
cltd
sti
loope
inc
sbb
adcb
out
fs
adc
inc
mov
ret
jl
cmp
in
sub
xor
les
or
clc
insl
mov
adc
jle
sub
andl
daa
pop
cmpsl
sbb
test
ret
sub
idivl
xor
cld
cld
jp
cmp
push
or
mov
test
popf
jmp
lds
mov
js
popf
lds
repz
xor
cmc
mov
sahf
push
push
and
in
mov
es
xchg
pop
lea
fmul
xchg
mov
dec
mov
sbb
dec
imul
jae
adc
mov
jno
inc
movsl
popf
imul
push
das
icebp
mov
add
push
add
xchg
push
jno
pcmpgtd
cmp
pop
xchg
xor
enter
lret
push
push
int3
outsl
lods
xor
test
into
sub
pop
adc
ljmp
xchg
jecxz
pop
pop
xchg
and
ret
out
mov
or
shll
popa
inc
or
sub
sbb
test
js
sub
xor
xchg
ljmp
xorb
and
imul
hlt
mov
stos
dec
add
and
aam
test
in
mov
add
pusha
aaa
subb
lods
mov
add
mov
flds
test
sub
repnz
inc
fwait
xor
out
insl
inc
jge
add
daa
stos
dec
dec
cmp
jbe
popf
fcoms
loopne
arpl
cli
stc
movsb
push
pop
imul
mov
ljmp
je
push
int3
insb
mov
ljmp
lret
lahf
cld
dec
int3
or
repnz
in
popa
xor
xchg
xchg
lcall
dec
or
push
aam
inc
cwtl
push
nop
xchg
or
in
fwait
add
xchg
cmpsb
fldcw
fidivrs
inc
adc
lds
push
cmpsb
and
mov
add
push
js
xor
in
xchg
push
mov
mov
mov
aas
cmpsl
mov
aad
adc
xor
sub
fmull
dec
mull
loope
jmp
mov
movsl
arpl
sub
sub
jne
loop
js
jb
fstl
test
cmpsl
mov
in
pop
mov
dec
aaa
in
xorl
movsb
adc
mov
or
cmp
push
sbb
iret
insb
out
cld
outsb
inc
mov
pop
sarl
lret
sahf
inc
jbe
add
phaddw
call
sti
sub
or
stos
pop
pop
sarb
jno
out
lods
aad
adc
divl
add
add
inc
subl
pop
out
bound
fldl
pop
mov
or
cmp
mov
mov
aad
orl
fstps
add
ljmp
repnz
add
in
aam
rcll
push
cmp
lcall
mov
xchg
push
lods
sub
cwtl
and
sbb
cmp
cmpsl
and
std
orb
pushf
repz
jbe
test
fwait
push
mov
jle
cmp
push
and
ret
lock
add
sbb
inc
fwait
in
rolb
and
std
inc
xchg
mov
adc
inc
xchg
jmp
adc
jmp
sub
popf
push
mov
inc
lods
mov
xchg
mov
add
ds
hlt
dec
cmp
cmp
mov
jecxz
int
jge
sub
sahf
clc
sbb
sarb
int3
push
xchg
add
adc
xor
xor
mov
icebp
push
bsr
push
fists
es
lds
pop
sub
lock
sbb
jo
stos
in
fiadds
adc
push
dec
mov
repnz
pop
adc
add
xchg
mov
inc
jb
aaa
in
test
ret
jnp
or
ret
sub
mov
pop
andb
push
call
and
jl
outsb
insl
lea
das
pop
sub
outsl
sub
fisubs
xchg
and
int
ljmp
testb
and
stc
fdivrp
scas
loope
int
ret
fs
insb
fmul
push
jl
bound
cld
jg
test
movsb
test
gs
push
mov
xor
mov
ljmp
and
addr16
aad
jmp
arpl
jg
mov
aas
cmp
inc
adc
or
leave
pop
mov
lret
mov
es
adc
insl
xchg
sbb
popa
outsb
sbb
push
aaa
sub
das
leave
push
dec
jl
rclb
int
push
jbe
adc
fwait
cmp
push
sbb
popl
call
pop
sub
jge
xchg
jae
xchg
push
sbb
outsl
inc
rorb
sti
mov
icebp
cmp
ljmp
fcoms
jecxz
pop
fimull
add
jnp
cmp
add
jbe
arpl
out
repnz
sub
mov
in
sbbl
lods
add
lahf
ljmp
sub
mov
fsubl
aad
sahf
lods
fmuls
cmp
pop
sbb
rclb
cmpsb
pushf
mov
sbb
sub
push
or
xchg
jmp
pop
aaa
xor
subb
out
cmc
xchg
xchg
fstps
fwait
insl
es
jo
adc
mov
mov
dec
push
outsl
mov
jg
std
add
es
pop
shll
orl
stos
add
mov
mov
and
lret
jge
sbb
sti
ret
push
sbbl
xor
mov
nop
mov
xchg
les
stos
inc
sbb
and
gs
cmp
cmc
xchg
enter
jnp
mov
cltd
rolb
xchg
inc
push
orl
pop
dec
jo
cli
jp
push
inc
subl
cmp
lods
or
out
or
pop
int
mov
daa
push
mov
push
lret
cwtl
add
aam
sub
mov
imul
mov
inc
adc
rolb
add
loopne
or
daa
cmp
add
test
pop
mov
ret
add
dec
mov
mov
xor
lret
dec
test
jp
sahf
lods
push
repnz
cmpsb
push
mov
insl
inc
jae
lods
inc
sbb
sub
icebp
push
adc
into
adc
push
push
xor
sbb
push
test
adc
jo
push
jp
mov
pop
scas
jle
mov
jmp
lret
jno
repz
sahf
lods
cwtl
es
mov
fdivs
or
inc
push
hlt
fsubs
mov
jb
fdivs
ret
call
inc
sub
aas
pop
dec
leave
loopne
out
xchg
or
ds
and
loopne
mov
push
ljmp
sub
in
push
push
popa
fdivrl
mov
jae
push
pop
test
inc
mov
inc
mov
push
push
ja
inc
push
mov
shlb
sbb
push
mov
popf
jmp
sub
dec
ds
pop
mov
addl
add
xorl
xor
movl
cmp
jne
mov
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
push
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
add
dec
mov
jmp
movl
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
movl
mov
add
push
mov
xor
add
sub
and
mov
addl
mov
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
jmp
mov
subl
mov
out
push
xchg
std
and
int
bound
push
or
pop
sub
test
jecxz
push
push
rcrl
aam
add
dec
call
daa
clc
xor
cmp
leave
pop
arpl
scas
dec
sub
push
mov
aaa
sub
lcall
inc
sub
ss
mov
xor
pop
leave
je
fs
xor
xchg
add
dec
sbb
add
xchg
mov
sub
cld
cmp
loopne
hlt
sub
inc
jno
loop
xchg
or
xor
or
jbe
mov
mov
jmp
cmpsl
push
mov
out
jge
jns
sbb
push
sub
std
es
mov
inc
rclb
movsl
and
js
xchg
push
or
ja
sarl
xor
out
xchg
pusha
mov
sti
rep
mov
mov
fcmovnu
push
cmpb
mov
cmp
lods
pop
sub
pop
jae
inc
ret
arpl
mov
popf
mov
lods
mov
les
mov
push
push
dec
cld
out
rcrb
cmp
out
in
or
cmp
sub
iret
addr16
mov
mov
mov
sub
lods
mov
repnz
cld
sbb
clc
jns
leave
pop
sahf
xor
js
in
xor
out
test
inc
lcall
mov
or
fisubs
inc
rolb
aaa
popf
mov
inc
sbb
mov
repz
adc
stc
xchg
jmp
dec
fcomps
lea
xor
lcall
cmp
pop
subb
cld
out
push
mov
je
jo
jo
dec
les
push
sbb
jo
test
lahf
das
dec
cmp
or
and
sbb
dec
mov
fsubrl
push
jae
pop
in
movsb
mov
pop
stos
sbbl
hlt
pop
mov
add
jne
ret
cs
and
outsl
out
test
push
xchg
mov
jecxz
das
cmp
push
mov
add
push
imul
xorl
pop
jmp
rorb
dec
js
imul
inc
repz
dec
pushf
orb
cmpsb
shlb
pop
scas
out
nop
lods
adc
outsb
dec
xchg
xchg
nop
lret
arpl
idivl
lods
jno
pop
mov
adc
in
dec
outsl
shrl
sbb
mov
mov
cld
jmp
movsl
out
fsub
repnz
scas
rcr
xchg
jecxz
xor
sub
fstl
sub
arpl
cs
stc
pusha
inc
dec
dec
jnp
sub
inc
xchg
mov
sbb
and
dec
mov
lret
lahf
cwtl
adc
lcall
jnp
and
dec
aad
cli
pop
int
jmp
xchg
sub
jle
inc
adc
xor
inc
test
inc
add
dec
inc
daa
lahf
cld
jl
xchg
adc
dec
inc
xchg
fidivl
xor
in
pop
fwait
jbe
adc
jecxz
inc
shl
xchg
mov
cmpl
pop
inc
push
mov
jl
lcall
jno
lds
shll
popa
pop
das
addr16
cs
add
imul
push
jo
fldenv
fidivrs
repnz
pop
lock
sahf
adc
mov
mov
insb
inc
in
jge
pop
push
push
push
call
shrb
lods
sub
lds
into
inc
mov
scas
mov
add
mov
mov
imul
js
es
clc
xlat
dec
neg
pop
js
in
sub
mov
popf
xchg
icebp
jp
sbb
iret
push
sub
or
lea
pop
sti
hlt
add
jne
mov
call
mov
jne
fiadds
addr16
or
loop
lahf
push
xor
imul
cmpsl
in
cmpsb
shl
idivb
aad
push
imul
jo
out
jle
imul
push
xchg
xchg
mov
dec
cmp
inc
xchg
int
push
stos
or
hlt
cmpsb
mov
jl
mov
or
test
shrl
int3
dec
addr16
in
mov
add
jge
outsb
fnstsw
xchg
mov
icebp
jmp
xchg
jb
lahf
mov
dec
xchg
add
inc
sub
xor
xchg
pushf
cwtl
insl
sahf
jge
xchg
mov
test
imul
add
orb
mov
fistpll
sbb
leave
mov
out
jge
xchg
es
mov
jne
ret
loop
cmp
push
jg
scas
fdecstp
in
and
mov
add
jbe
fsubr
jl
insl
xor
das
adc
repnz
push
in
pop
call
or
cs
and
pop
sub
nop
push
stos
les
jne
notb
inc
adc
jne
imul
popa
cmc
xchg
xor
sub
aad
loopne
jp
push
xor
sti
test
xchg
jo
mov
mov
into
mov
xchg
inc
int3
adc
shrb
add
insl
jae
cmp
movsl
adc
popf
mov
dec
lock
xchg
jbe
add
aam
mov
mov
insl
sub
mov
xor
fidivl
xlat
push
repnz
push
fidivl
mov
inc
pop
stos
shrl
mov
fmull
into
jg
fldt
callw
in
outsl
jp
call
iret
push
jmp
push
fsubrs
out
scas
loopne
gs
fisttps
push
lcall
mov
fwait
cmpsb
mov
test
lcall
pusha
lahf
push
shrb
or
fadd
push
jl
es
roll
mov
lahf
xchg
and
and
xlat
xchg
pop
push
dec
push
push
out
adc
hlt
loop
lods
das
mov
cmp
and
push
or
sbbl
aaa
mov
addr16
xchg
inc
mov
rorb
daa
xor
ffreep
xchg
xor
cmp
inc
fnstsw
dec
hlt
and
dec
repz
push
lcall
sbb
in
lea
or
lret
xchg
add
cmp
data16
sub
sbb
stos
fwait
mov
rcrb
mov
js
push
mov
into
mov
push
call
fmull
fsub
mov
dec
mul
inc
arpl
cmpsl
or
loopne
mov
es
mov
mov
cmp
cmovl
push
inc
js
jle
fidivl
je
adc
sub
fcoms
xchg
in
push
and
add
popw
inc
test
adc
jno
sarb
outsl
pop
mov
adc
push
inc
xlat
inc
pop
mov
xor
sub
loopne
sahf
subl
xchg
in
mov
jmp
stc
je
es
inc
mov
or
mov
filds
cmp
hlt
in
push
pop
mov
imul
cltd
adc
push
push
in
sbb
mov
sbb
mov
ljmp
popa
push
ljmp
cmp
pop
xchg
pop
push
push
push
ja
or
lods
aad
pop
and
xor
ret
popa
leave
sub
mov
pushf
mov
cmp
cmp
dec
push
inc
mov
mov
nop
mov
out
cmp
popf
loop
push
mov
cltd
inc
arpl
sbb
sarb
jmp
mov
scas
mov
lds
scas
and
rorb
clc
push
ljmp
push
addr16
fmull
cld
loop
push
mov
les
and
cltd
mov
push
js
dec
es
mov
inc
push
dec
repz
xchg
mov
inc
pop
rcr
jp
or
lahf
or
repnz
das
scas
add
push
cmc
mov
lret
add
inc
popa
stc
mov
dec
pop
int
ret
cmp
das
cmpb
jne
mulb
adc
fistps
ds
cmc
or
mov
popf
hlt
ljmp
aad
push
pop
les
les
adc
mov
jl
xor
stos
jl
outsb
andb
mov
push
mov
dec
stos
pop
pop
lds
sub
loope
lea
stc
fdivl
sbb
arpl
loope
jg
scas
stos
mov
cmpsl
imul
add
cmp
sub
repz
in
jge
movb
mov
nop
add
add
pop
mov
ss
pushf
mov
fisubrl
sbb
xor
pop
jnp
cwtl
dec
mov
aad
pushf
add
pop
aad
mov
push
pusha
aam
not
daa
sub
fmull
sbb
addb
and
repnz
jno
cli
out
push
pop
mov
dec
xchg
scas
leave
xor
addb
lds
ret
stos
fcoml
and
and
call
fsqrt
jle
fdivr
or
ret
mov
mov
jecxz
xchg
jbe
or
outsb
cld
divl
repz
push
jl
inc
sti
dec
sbb
jno
dec
xor
test
bound
pop
and
aad
lock
pop
add
loope
pop
popf
out
mov
add
jns
out
hlt
or
rcr
add
cmp
insl
sub
out
shl
xchg
jecxz
or
das
push
into
insb
and
push
cltd
fbld
call
in
sbb
das
jns
int
adc
fs
je
inc
lahf
and
pop
sub
and
iret
and
push
sub
add
rcl
loop
xor
push
xlat
jmp
sbb
xchg
xchg
cmpsl
jmp
in
mov
pushf
pop
test
jecxz
rorb
push
fwait
cmp
inc
rcl
xlat
sub
jp
xor
push
dec
jns
pop
test
or
mov
movsl
fsubrl
and
pop
cmp
rolb
or
outsl
add
lret
xchg
js
and
mov
xchg
cmp
push
fmull
test
or
push
dec
push
ss
jmp
fstpl
sarb
pop
les
cld
movb
push
mov
shlb
jle
sbb
fimull
mov
add
cmpsl
add
imul
or
dec
insl
sub
mov
pop
push
push
dec
pushf
xchg
dec
insl
je
leave
pushf
inc
stos
aad
insb
jmp
or
add
pop
xor
hlt
aad
out
loop
mov
xor
mov
addr16
mov
daa
bound
adcb
fsubl
ds
adc
ss
int3
sub
xchg
lods
aad
popf
jns
inc
sbb
adc
push
or
jbe
adc
pushf
repz
fnstsw
inc
jl
adc
cld
stc
cltd
outsb
mov
movsb
inc
insb
xchg
add
icebp
pop
dec
pop
fmulp
mov
sbb
pop
xchg
mov
lret
sahf
jecxz
mov
cmp
sbb
shll
in
adc
leave
add
data16
sub
jbe
sbb
std
fldt
add
je
mov
fldl
and
add
sub
lods
test
xchg
xor
repnz
cmpsb
psubusb
rorl
pop
inc
adc
dec
popf
in
addl
pop
loopne
addr16
push
mov
sbb
xor
das
mov
xchg
mov
stos
jle
add
std
mov
jno
pop
movsl
pop
test
inc
loop
adc
fsubrs
inc
or
adcb
pop
pop
int
popa
dec
adc
jb
fwait
mov
mov
icebp
out
out
mov
xchg
sbb
xor
popa
cli
mov
push
adc
jb
mov
lret
scas
in
jp
imul
jns
das
or
in
add
ja
xchg
push
mov
and
pop
mov
sub
mov
adc
inc
jns
rcr
mov
test
fsqrt
out
sub
movsl
xor
pusha
xchg
jno
jle
push
xchg
je
xor
and
mov
and
jle
ja
imul
into
insb
fs
shrb
daa
or
aam
xchg
shl
fidivs
push
out
mov
cmp
fisttps
pop
dec
cmp
xchg
push
out
mov
sbb
pusha
mov
in
lods
or
js
les
mov
push
mov
movsb
lods
scas
sub
cmp
imul
dec
cltd
mov
cmp
dec
dec
shlb
ror
push
jp
mov
clc
ret
dec
pop
pushf
cmpsl
lods
mov
dec
jnp
lret
daa
dec
sbb
hlt
sub
fisttps
rcl
sbb
movl
push
fstl
pop
test
das
sbb
dec
and
scas
or
lret
sub
jmp
pushf
jo
jbe
xchg
add
test
cld
es
jae
in
adc
and
sbb
mov
cmp
sub
mov
pop
and
scas
xchg
incl
addr16
bound
out
cmp
or
sbb
mov
inc
sub
pop
loop
scas
push
mov
push
mov
sbb
and
xor
out
shl
or
lock
insl
fisubs
push
dec
lcall
daa
pop
fcmove
xchg
pusha
cs
xchg
lahf
jge
cmp
push
pop
pusha
cmp
pop
popa
jb
arpl
jnp
into
jbe
stos
repz
cmp
loop
sbb
jns
mov
xorb
hlt
fsubp
inc
and
mov
jae
jns
in
mov
inc
pop
pop
stc
dec
andl
aas
or
push
push
scas
or
jnp
in
sbb
leave
ret
lcall
mull
in
imul
and
sub
jo
loope
mov
sar
cmp
andb
jae
loop
icebp
push
jo
xor
test
push
sub
insl
jne
stos
popf
movb
lahf
mov
lods
subb
mov
stos
cld
aam
pop
dec
aam
jae
stc
and
stos
lcall
ss
nop
sbb
lret
mov
sbb
mov
gs
fdivr
int
cmp
shl
clc
loope
outsb
in
mov
in
pop
cmc
stc
mov
int
xorl
xadd
loop
adc
mov
pushf
dec
and
and
out
ret
rol
pop
inc
xchg
rcll
xchg
aam
insb
scas
mov
clc
and
or
xchg
mov
shrl
rclb
mov
add
test
xorb
bound
cld
aam
mov
pusha
sub
dec
cltd
fsts
icebp
rcl
aam
hlt
inc
frstor
cmpl
xchg
xor
dec
sbb
push
sub
fsubl
xor
int3
ds
sti
sbb
aam
or
pop
or
ljmp
lods
sarb
pop
icebp
aaa
cmp
gs
lock
xor
imul
loop
jecxz
cmpsl
jb
mov
push
icebp
inc
daa
mov
jmp
push
mov
rorb
pop
lcall
xlat
cltd
and
icebp
pop
jb
xchg
test
fstpt
lcall
loopne
jge
iret
jmp
iret
in
cmp
cmp
add
addl
inc
mov
scas
jnp
adc
push
cmp
pop
xor
mov
or
lcall
nop
adc
mov
insl
add
xor
adc
imul
mov
mov
imul
out
imul
call
fistl
pop
outsb
divb
jmp
mov
ljmp
xchg
out
mov
lret
mov
ret
in
mov
into
jle
pop
das
leave
jno
into
mov
pop
fwait
jb
outsb
jle
insb
or
pop
sbb
into
xor
dec
addb
cld
pop
inc
imul
aaa
sub
jmp
sbb
cmp
stc
pop
add
imul
xchg
and
movsl
pushf
sbb
imul
fcmovnu
push
sbb
add
jae
pop
arpl
mov
addr16
or
pop
mov
call
insl
aad
loopne
test
xchg
push
int
dec
add
cmc
sub
pop
pushf
iret
insl
mov
sbb
fwait
or
ljmp
adc
pop
sub
pop
or
cmp
mov
push
jns
outsl
mov
repnz
pusha
int3
add
andb
adc
mull
mull
pop
xor
inc
loopne
push
and
pushf
lock
mov
push
neg
aaa
mov
or
call
dec
mov
jecxz
lock
pop
push
ja
push
mov
add
es
mov
flds
sbb
test
lods
daa
and
pop
dec
pop
add
aad
sarl
ss
cmp
cmp
seta
test
adc
insb
daa
mov
push
jp
repz
push
push
pusha
scas
push
jno
scas
dec
test
out
or
clc
les
pop
inc
mov
loope
dec
dec
adc
orb
jno
daa
or
stc
and
inc
pusha
push
dec
push
repnz
call
jo
jecxz
mov
mov
or
filds
mov
pop
dec
imul
cld
sub
push
ret
in
int
test
cmp
inc
sbb
rcrb
into
mov
xchg
xchg
movl
out
fcompl
ret
push
in
mov
hlt
imul
jb
add
out
sbb
jle
stos
jle
in
or
mov
add
aas
sbb
outsb
shrl
movl
dec
repnz
fwait
cmp
aam
xchg
mov
dec
jae
stos
imul
mov
mov
xchg
or
aam
sahf
arpl
and
gs
icebp
adc
lds
sub
shrb
cli
mov
or
jle
inc
int3
jle
mov
inc
lret
dec
jne
push
shrl
das
xchg
mov
icebp
cltd
and
xchg
outsl
xchg
pop
xchg
orl
leave
xor
and
cmp
fsubr
inc
inc
ret
rcr
mov
testb
enter
aam
movsl
fisttps
push
out
xor
inc
xor
mov
rcl
dec
mov
sub
and
rcr
mov
pop
pop
jbe
cltd
imul
out
mov
push
jl
add
gs
mov
lahf
addb
into
xor
cwtl
mov
fs
adc
jnp
xor
repnz
sar
sbb
in
roll
pop
push
data16
mov
ja
mov
loop
jg
imul
ljmp
sti
or
mov
subb
ret
or
cmp
mov
mov
leave
lret
push
push
sub
adc
sub
and
jbe
test
in
movsl
popa
inc
fildll
loopne
les
leave
mov
pop
mov
mov
sti
adc
sbb
adc
and
stos
icebp
aaa
mov
fiaddl
lahf
movl
movsl
nop
pushf
cmp
test
jp
mov
xor
sub
mov
stos
or
sub
xor
jne
jb
inc
faddp
lock
mov
mov
out
adc
xor
inc
lahf
scas
cmp
sarl
jnp
inc
shr
jo
push
jb
mov
dec
sahf
icebp
shlb
dec
leave
aaa
leave
mov
push
fucom
in
xchg
loope
out
dec
xchg
adc
insl
loop
sub
je
movsb
out
push
mov
gs
mov
icebp
addr16
aas
out
pop
add
out
mov
xor
int
xchg
mov
jno
es
cmp
or
mov
fsub
das
xor
cmpsb
xor
into
scas
scas
gs
xchg
nop
shr
mov
add
xor
mov
pcmpeqw
mov
xor
cmp
mov
xlat
cmp
xchg
sub
xchg
ret
or
add
fstl
iret
je,pt
pop
fdivl
psllq
and
xchg
dec
dec
mov
out
pop
les
fnstsw
sbb
mov
push
fwait
loopne
add
les
stos
mov
shr
sub
sub
add
sbb
mov
jae
jl
pop
ret
sbb
jae
lret
shr
dec
sub
stos
in
ds
shl
cmp
arpl
js
decl
mov
fwait
call
mov
mov
inc
mov
cmpsl
cli
dec
test
pop
negl
mov
fdivr
and
mov
ja
jns
and
inc
int
xor
and
and
cmpsb
xchg
cltd
mov
pushf
rorb
pop
fidivrs
sbb
insl
outsb
push
out
mov
into
ljmp
insb
push
and
pop
xchg
dec
fs
mov
mov
call
cld
daa
ja
jae
lahf
inc
jo
mov
leave
push
pop
je
mov
lods
push
dec
jl
enter
push
inc
out
fidivs
adc
dec
repnz
orb
push
int3
sub
hlt
mull
rcll
push
sbb
cmp
addl
jne
sub
dec
sbb
leave
ss
mov
jbe
jb
jl
cld
xor
daa
and
inc
notb
vphsubdq
stos
rorb
jge
pop
sub
ja
mov
jmp
int
lret
and
pop
roll
lahf
inc
mov
xchg
dec
pop
mov
push
scas
inc
or
xchg
insl
jl
stos
movb
mov
pop
lock
xlat
inc
xchg
xor
dec
test
scas
test
dec
inc
nop
lret
fninit
fidivs
xchg
fdivl
pop
loop
xor
arpl
stos
insl
xor
adc
imul
adc
sbb
addb
das
adc
fldenv
sti
call
mov
cmp
dec
push
aas
add
addl
fwait
outsb
adc
pushf
fmull
push
mov
repnz
mov
push
sbb
jg
cld
inc
clc
int3
xrelease
inc
jo
mov
pop
pushf
or
xor
in
pop
mov
adc
pop
push
lcall
inc
adc
inc
fucom
lds
or
add
mov
sarb
int3
shl
mov
jmp
popa
and
sarl
add
int
dec
popa
inc
xor
in
pop
movsl
dec
and
aad
jle
push
pop
xor
int
cmp
addr16
add
sub
xchg
mov
adc
and
cmp
dec
cmp
inc
sbb
mov
xchg
xor
fwait
add
mov
out
dec
cwtl
mov
cltd
lds
in
jg
or
lcall
out
enter
aas
daa
pop
mov
push
adc
and
loope
lcall
das
lret
mov
mov
or
mov
ret
xor
fcmove
pop
dec
loop
add
lods
popa
inc
icebp
fsubl
jge
fiaddl
repz
and
ret
adc
inc
xchg
add
outsl
loop
out
sub
leave
aaa
rcrb
mov
xor
gs
mov
jne
xor
lds
dec
xchg
leave
stos
andl
jns
mov
daa
ds
jle
repnz
dec
pushf
xchg
scas
and
lret
sahf
cmp
mov
mov
pop
xor
enter
cmp
mov
push
add
and
add
call
aaa
inc
in
jae
adc
fdivrl
repz
sbb
cmp
sub
jge
in
rorb
je
gs
xchg
add
mov
fdivs
adc
fldenv
pop
xor
adc
in
xorl
shll
ffreep
mov
or
cmpb
loope
in
repz
push
xor
jg
aas
inc
or
inc
popw
clc
jge
call
or
add
out
add
outsl
dec
push
xchg
mov
repnz
fstl
jmp
sub
push
stc
lds
mov
out
push
cli
jp
and
js
movsb
lods
je
sbb
sbb
jnp
mov
int3
xor
sub
fstps
faddl
call
mov
shlb
sub
inc
mov
xor
sub
xor
lcall
icebp
and
daa
pop
sbb
mov
loop
and
and
sar
shlb
jo
fcompl
xor
push
adc
stc
mov
pop
add
jo
test
gs
test
stos
and
cmp
fs
mov
mov
cli
cmp
xor
lods
cmp
jb
add
mov
and
add
jl
sahf
jp
pushf
adc
stos
rcr
dec
cltd
dec
mov
dec
sbb
jmp
cltd
dec
gs
movb
xchg
inc
mov
popf
inc
xchg
mov
das
out
push
mov
icebp
mov
jp
jge
mov
in
push
clc
icebp
ret
in
jb
xchg
rcl
js
insb
mov
ja
inc
mov
jmp
fimull
inc
inc
push
mov
repnz
lcall
mov
fldcw
xor
movsl
mov
fmul
icebp
dec
pop
stos
pop
mov
lods
xchg
mov
ret
call
push
fwait
add
mov
pop
scas
cld
add
push
sub
pop
jmp
bound
mov
ret
fbstp
cmp
dec
imul
xor
es
test
xchg
pop
mov
test
push
push
adc
sbb
cmp
lods
insb
sbb
icebp
xchg
addl
ret
dec
jmp
orb
mov
popf
fldt
cmpsb
jne
dec
and
popa
xchg
adc
testb
and
ljmp
xor
test
fucomp
adc
in
add
pop
imul
repnz
jge
loope
cmp
xchg
and
adc
dec
dec
jl
lret
sbb
inc
mov
sbb
xor
lods
mov
pop
addl
or
pusha
daa
sub
loopne
jnp
and
and
push
xchg
mov
sbb
mov
add
das
rclb
xorl
leave
sub
cmp
cli
cmpsl
dec
ret
je
mov
or
dec
pushf
adc
fwait
enter
and
adc
push
mov
js
xchg
lahf
out
stc
js
les
mov
loop
inc
rcll
sub
sti
mov
cmp
add
fsubrs
ret
mov
or
les
ds
mov
outsb
movsl
sub
xchg
addl
jg
xor
xor
sbb
lds
push
lock
jge
es
into
cmp
test
in
pop
divl
or
jmp
popf
insl
int
aaa
scas
leave
add
out
clc
int3
imul
mov
push
mov
repnz
bound
subb
add
xchg
es
xor
popa
sub
xor
dec
mov
mov
lock
mov
es
inc
cs
xor
adc
pushf
paddsw
fisttps
mov
xor
and
gs
adc
shll
pusha
xchg
push
xor
mov
lcall
pop
out
cld
or
or
jle
cs
push
xor
testl
jmp
push
lret
repz
inc
dec
push
xor
inc
mov
push
push
jne
pop
jmp
addl
in
push
inc
and
xchg
jg
xor
loop
inc
jae
add
lods
mov
push
ds
sub
cld
sbb
adc
add
jmp
mov
fisubs
and
push
sbb
xchg
pop
fldcw
icebp
rclb
mov
fsub
cmpsl
push
ret
out
mov
push
inc
mov
int
movsl
icebp
push
xchg
jge
sub
push
push
jl
cltd
jb
xlat
mov
inc
inc
push
push
pop
cmp
or
test
pushf
hlt
jle
mov
xchg
imul
cmp
orl
rorl
enter
test
mov
lahf
inc
xchg
pop
mov
add
or
xchg
mov
in
mov
iret
inc
popf
test
mov
adc
or
fsubrl
scas
aam
jns
into
mov
inc
dec
aaa
jmp
loop
mov
mov
mov
test
and
cld
mov
fwait
sub
mov
out
rcr
add
lea
movsb
inc
insl
mov
repnz
rclb
mov
mull
and
int3
or
jne
xor
jl
int
mov
adc
sbbl
sub
jl
dec
into
inc
and
pushl
sbb
mov
xchg
cmp
enter
lahf
sahf
arpl
cmp
jne
andb
sbb
and
pop
divl
mov
cmpsl
push
add
fiaddl
mov
and
outsl
out
cmp
xchg
dec
lods
insb
xor
mov
push
xor
enter
sub
jecxz
out
shlb
ja
jbe
sbb
imul
or
adc
mov
sbb
es
sbb
add
aas
andl
cli
rorb
mov
ret
sbb
leave
sbb
fstps
loop
imul
or
ficoml
xchg
push
mov
xor
jl
push
out
dec
mov
xchg
cmc
pop
scas
jo
int
out
nop
aad
icebp
fmull
xchg
pop
out
mov
ds
cmpsl
int
lea
adc
jae
mov
imul
xor
repz
mov
jae
push
cmpsl
fcom
js
mov
inc
daa
inc
and
ss
jmp
xchg
iret
pop
lds
pop
and
lahf
mov
or
mov
data16
mov
cld
arpl
aam
adc
mov
jae
dec
insb
cs
sub
pop
push
xchg
ret
xor
xor
adc
adc
inc
add
lret
xor
aam
pop
push
jge
pop
je
lds
aas
orl
sub
test
fsubrs
jge
enter
push
andl
popf
mov
mov
xchg
dec
loop
jnp
push
repnz
push
pop
scas
mov
cmc
daa
push
jnp
sbb
fmulp
adc
lea
mov
sbb
in
bnd
lea
mov
sub
mov
je
imul
sbb
cmp
int
dec
pop
fcoml
test
out
aad
cltd
push
adc
sub
aam
enter
das
mov
mov
int3
bound
inc
inc
outsl
sub
sahf
push
das
std
push
fldl
out
xchg
pop
mov
and
mov
push
ficoml
nop
hlt
arpl
movsl
add
out
push
sub
fdivl
out
aad
jmp
iret
xlat
push
mov
jp
sbb
pop
inc
and
mov
cmp
fistpl
cmp
mov
cmp
test
lret
pop
in
dec
mov
or
xlat
test
push
std
xor
dec
fwait
pop
inc
jmp
aas
cmp
leave
mov
scas
pusha
lret
popf
insb
xchg
add
test
sbb
movsb
mov
inc
movb
inc
xor
dec
xchg
lods
inc
xchg
cld
inc
mov
clc
adc
mov
push
out
inc
dec
pop
ficoms
mov
jl
ja
jnp
outsb
dec
mov
inc
jo
out
add
shrb
push
mov
decl
xchg
pusha
cmpb
fs
aas
and
cwtd
mov
and
out
cmp
mul
inc
aad
loopne
push
sbbb
rcll
inc
mov
mov
sub
add
rcll
out
in
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
jmp
aaa
dec
cmpsl
sbb
xchg
and
inc
dec
add
int
bound
pop
cmp
roll
aaa
xchg
mov
and
cmpsl
rclb
pushf
lea
test
jle
pop
push
adc
cli
faddl
div
data16
repnz
pop
arpl
into
inc
xlat
mov
stos
mov
jmp
int3
xchg
jmp
push
or
in
call
jno
dec
lahf
orb
test
out
outsl
cmp
or
jnp
xchg
dec
icebp
xlat
fnstcw
jb
and
or
jle
mov
mov
mov
jecxz
int3
adc
cwtl
bound
adc
mov
cmc
stos
lret
push
insl
sub
in
jl
loopne
inc
in
mov
mov
sub
push
sbb
pop
inc
xchg
sbb
jle
ljmp
push
xor
repz
int
in
jb
lret
ljmp
inc
out
insl
imul
mov
das
mov
out
xor
mov
out
das
gs
inc
mov
mov
aaa
xchg
mov
mov
pop
inc
je
xchg
rorl
xor
ffreep
xchg
push
mov
cs
pop
lods
jge
int3
xchg
jb
jb
test
jle
or
int
aam
and
sbb
xor
mov
mov
sub
movsl
sub
daa
mov
inc
pop
test
or
fcoml
jecxz
outsl
fisubs
in
jb
push
or
mov
adcb
js
cli
and
in
fadd
popf
sahf
int3
add
sub
sar
ljmp
scas
xchg
mov
and
jle
inc
outsl
in
cmp
aas
sbb
shl
mov
nop
out
mov
icebp
pop
lcall
nop
repnz
lahf
inc
rcll
ja
ja
aas
mov
cli
es
cmpsb
in
call
inc
cli
mov
dec
aas
roll
mov
xchg
into
mov
cmpb
fistpl
pop
jbe
decl
xchg
ficoml
ret
test
inc
mov
ds
xchg
inc
aas
and
lahf
mov
and
xchg
dec
pop
bound
cmc
mov
movsl
pop
enter
adc
and
mov
push
lcall
lahf
mov
add
xchg
enter
inc
imul
cmpsl
mov
adc
pop
xor
gs
dec
icebp
daa
imul
ret
push
pop
xchg
outsb
xchg
in
xchg
or
repnz
add
mov
or
jbe
adc
bound
and
lea
out
add
clc
jp
pushf
ja
divl
aam
pushf
sub
je
cmp
xor
xor
jbe
mov
xchg
jle
adcl
push
dec
mov
std
inc
pop
xlat
ret
outsb
fbld
sbb
mov
fnstcw
scas
jns
call
orl
pop
shll
mov
adc
pop
pop
imul
subb
or
repnz
clc
add
test
aas
sub
bound
inc
cmp
xor
push
mov
adc
fimuls
pusha
outsl
fs
shl
imul
and
mov
push
xchg
popaw
mov
ja
cmp
jno
or
loopne
std
mov
repnz
inc
push
xchg
adc
add
test
push
aad
rcll
rcrb
inc
clc
and
rorb
lret
mov
mov
inc
cs
call
push
cmp
into
int3
je
mov
ds
inc
fs
js
mov
jl
sarb
in
xchg
test
outsb
sub
je
push
call
outsl
fs
shl
sub
test
mov
mov
xchg
pop
and
ss
dec
cmc
push
add
jae
hlt
and
stos
sub
jb
and
or
mov
mov
into
inc
sub
ljmp
ja
mov
jae
ss
push
xchg
add
stos
mov
push
mov
adc
subl
addr16
lods
xchg
inc
outsl
sahf
fidivs
pop
dec
adc
inc
cmp
mov
pop
fimuls
mov
or
mov
and
adc
pop
call
in
push
dec
repz
sub
push
loopne
sub
pop
xor
inc
ret
adc
adcb
mov
mov
xor
push
arpl
pop
dec
xor
insl
fistpl
xchg
loop
pop
arpl
das
inc
jmp
lret
sbb
out
inc
and
cmp
push
mov
sbb
sbbb
je
pusha
and
mov
mov
inc
push
bound
call
mov
arpl
repnz
test
lods
push
gs
xor
and
inc
fs
test
shrb
mov
sbb
inc
icebp
or
insb
jg
mov
sub
dec
movsb
movsl
mov
adc
and
fldcw
cmp
leave
sub
sub
xor
pop
pop
cmpl
dec
pop
sbb
ficomps
mov
or
and
or
adc
ret
jne
push
mov
lret
mov
aam
inc
jmp
insb
pop
or
mull
fdivrs
popf
insl
mov
inc
leave
fisubrs
test
sub
aaa
add
hlt
cmp
cmp
in
push
mov
cmpsb
inc
add
xchg
int3
stc
push
jmp
and
mov
out
mov
push
or
les
pop
iret
push
push
mov
mov
xor
mov
jp
mov
popf
xor
jmp
icebp
inc
incl
clc
or
int
and
sub
cwtl
or
sub
adc
dec
add
sahf
and
jbe
mov
xor
adc
in
dec
mov
in
or
cmp
sbbb
cmp
inc
pop
into
push
idivl
or
xor
out
repz
movsl
popf
out
and
outsl
aad
fnstenv
pop
nop
gs
arpl
lcall
int3
hlt
rorl
ret
gs
xlat
xor
repnz
or
cmpsl
add
stos
xchg
lock
enter
pop
cwtl
xchg
dec
xor
xchg
xchg
insl
std
orb
pop
ljmp
cltd
xlat
push
cmc
mov
into
imul
in
fidivrl
jae
jmp
or
or
dec
rcrl
add
leave
lea
add
aam
sbb
sub
jmp
xchg
and
mov
mov
inc
out
push
adc
das
call
push
frstor
add
loopne
add
mov
enter
cmp
daa
mov
and
cltd
adc
mov
jle
nop
mov
ret
lret
sub
rcrl
mov
jge
mov
pop
mov
js
fmuls
dec
inc
xchg
xor
push
xor
dec
cli
sarl
xor
mov
lret
jg
jmp
inc
mov
enter
inc
and
arpl
sbb
in
push
ss
adc
lcall
daa
cmp
in
fisubs
aaa
xor
test
jno
fiaddl
arpl
outsl
sbb
mov
fnstsw
sub
push
data16
xchg
push
mov
ja
daa
hlt
adc
popf
test
repz
adc
leave
fwait
lods
cmp
xchg
xchg
and
lds
outsb
xchg
xlat
jecxz
pop
add
pop
jmp
in
dec
or
sete
fcompl
inc
testl
stc
push
ret
ret
sub
pusha
movsb
jg
loop
sahf
les
jl
ret
add
hlt
sarl
push
pop
cmp
rcrb
jmp
cld
or
adcb
push
sub
push
dec
rcrl
push
pop
pop
xchg
and
out
inc
add
insl
into
and
add
dec
lock
in
jnp
mov
xchg
cmpb
xchg
mov
xchg
test
iret
rclb
rcll
sbb
pop
outsl
mov
and
lahf
es
and
pusha
jb
push
fistpll
mov
jg
js
fisubrs
fldenv
pop
insl
jle
push
nop
pop
mov
add
add
add
in
inc
cltd
out
push
dec
movsl
sub
mov
imul
xor
sub
mov
xor
inc
or
cmp
lds
inc
push
sbb
inc
and
negl
jp
in
lock
and
jnp
xchg
mov
dec
dec
ljmp
xor
mov
pop
out
addr16
jne
es
sub
subb
xlat
arpl
adc
jecxz
xlat
pop
mov
mov
cld
out
stos
mov
dec
mov
push
clc
ds
je
dec
daa
pop
fs
push
mov
sub
cmp
popa
push
repnz
inc
lea
sbb
fsubrs
in
mov
jl
sub
sub
je
pop
and
pop
adc
dec
dec
xchg
js
into
leave
call
inc
sub
outsl
ret
and
adc
and
aas
cld
call
into
rolb
mov
xchg
fiaddl
mov
xor
das
lock
leave
adc
cmc
popf
add
fcoml
fdivrs
adc
sahf
push
add
pop
dec
fiadds
repnz
xchg
int3
jmp
out
jle
popa
inc
orl
xchg
xlat
bound
mov
adc
sub
in
std
fwait
mov
jge
rcr
adc
cmp
mov
mov
out
jg
xchg
sahf
out
stos
sub
in
insl
sub
cmp
cmp
jp
mov
mov
ljmp
mov
pop
add
jp
push
mov
shlb
mov
mov
pop
icebp
mov
in
insb
mov
mov
cs
pop
jge
arpl
nop
cmpl
je
data16
mov
cmp
loop
xchg
xor
sbb
lods
mov
inc
lret
or
sbb
in
nop
dec
mov
dec
stc
test
es
push
addr16
fwait
rcll
pushf
subb
inc
add
mov
mov
shl
sahf
std
pop
ja
xor
lret
int3
push
loope
pusha
mov
out
jmp
xchg
shl
jg
mov
loopne
leave
setne
jno
push
icebp
stos
out
mov
fmuls
mov
dec
lds
das
sub
std
test
in
add
inc
xor
sbb
mov
je
cmp
lock
mov
push
xor
push
mov
dec
dec
sbb
test
push
fisttps
adc
ja
stos
enter
and
decb
inc
push
pop
xchg
scas
out
add
push
fcmovnbe
jmp
out
mov
lcall
push
mov
les
xchg
inc
jle
sbb
rolb
xor
and
rcr
aam
fs
lods
pop
pop
jns
stos
mov
and
into
out
es
xchg
jge
mov
es
adc
fstl
into
ret
add
scas
add
das
push
or
ret
mov
mov
dec
cmc
dec
andl
jae
cmpsb
mov
jl
stos
fadd
clc
mov
mov
cltd
fnstsw
adc
daa
sbb
fbld
xchg
mov
rcll
mov
shl
inc
cltd
cmp
xor
cwtl
in
add
cwtl
or
jb
aaa
add
push
int
dec
mov
int
je
mov
mov
jle
jmp
faddl
sbb
loop
and
lahf
or
mov
aas
inc
sub
and
sbbl
pop
rcrb
inc
pop
or
mov
adc
hlt
inc
pop
add
out
jne
repnz
fdivl
addr16
gs
push
cmp
pop
repnz
inc
or
in
test
or
pop
mov
mov
call
das
inc
test
dec
scas
int3
or
jle
push
enter
sarb
mov
cmpsl
cmc
clc
ja
pusha
push
adc
inc
or
pop
and
ds
cmc
dec
mov
out
mov
out
cs
clc
pop
cmp
push
cmp
mov
inc
jns
cli
pop
enter
mov
cmp
push
test
xchg
fistpll
cli
movsl
hlt
das
loop
pop
clc
xlat
stos
mov
mov
dec
std
jne
adc
fisubrl
dec
sbb
inc
mov
negb
hlt
pop
inc
hlt
and
aad
mov
sbb
test
lea
movsl
push
orb
dec
dec
cld
mov
push
cmc
imul
loopne
jns
xchg
insb
lcall
stos
cmpsl
mov
pop
in
faddl
roll
dec
ss
or
adc
sahf
ret
out
pop
xchg
cmp
insb
iret
xchg
ss
and
scas
mov
inc
push
sub
push
xchg
sub
and
lods
inc
cmp
lahf
cwtl
jno
in
push
xchg
mov
pop
jl
movsb
mov
mov
sbb
cld
jnp
sbb
push
dec
arpl
popf
sbb
cmp
xchg
jns
lods
into
je
out
in
ror
push
notl
or
jg
es
rclb
je
incb
rorb
cmp
dec
push
adc
add
jae
inc
mov
inc
jmp
sbb
push
das
pop
mov
test
push
cmpsl
sub
hlt
mov
fcmovu
mov
pop
xchg
mov
pop
mov
mov
xor
std
lock
or
or
push
sub
pop
in
fmull
mov
rcrl
pop
inc
leave
test
mov
dec
mov
dec
hlt
mov
movb
mov
dec
lds
xlat
lods
popf
and
rcl
enter
shll
push
incb
push
push
pop
lods
and
hlt
pop
pop
jnp
dec
lcall
sahf
loopne
sub
daa
aas
orb
popf
xchg
lss
adc
adc
pop
mov
xchg
xor
outsb
loopne
inc
es
mov
pop
aad
scas
pop
popf
fsubp
mov
icebp
lret
xorl
jmp
loopne
in
cmc
imul
pop
test
or
cmp
addr16
jo
or
popf
ja
xor
dec
push
rolb
and
adc
jle
data16
mov
push
adc
in
pop
push
scas
pop
or
mov
test
push
cs
cwtl
push
add
mov
cmp
das
mov
imul
fistpl
push
inc
gs
mov
cmpsb
into
repz
sbb
pop
jae
or
mov
or
cmc
inc
dec
adc
out
popa
cmp
mov
jle
jge
test
cmpsl
or
sarl
sub
lret
jno
mov
cmpb
jbe
pop
or
bound
xchg
lods
enter
or
push
jb
popf
lret
test
sahf
fldenv
and
sar
aas
add
push
iret
iret
pop
pop
in
dec
cmp
dec
clc
adc
dec
ret
inc
xchg
mov
inc
cwtl
pop
icebp
cmp
insb
and
cmp
mov
mov
imul
add
sub
sbb
sub
mov
jl
mov
add
jg
loope
add
or
jmp
add
xor
js
leave
cwtl
pop
das
push
pusha
fnstcw
rol
xor
daa
xor
ja,pt
cmp
std
call
outsl
das
out
rolb
mov
lahf
pop
xchg
cmp
mov
sahf
dec
lea
xor
div
lahf
rorl
ja
loop
mov
jno
xchg
push
and
sbb
lret
test
pop
xchg
movsb
clc
mov
mov
ret
xor
rorl
dec
sub
mov
imul
stc
add
mov
mov
pop
stc
div
add
push
pop
test
dec
push
mov
je
out
shr
dec
xchg
jnp
shrl
push
inc
int3
add
inc
dec
jnp
maskmovq
mov
add
sub
xchg
inc
push
test
leave
cmp
or
lret
jo
or
dec
jge
fwait
push
xchg
lahf
fistpl
mov
lret
hlt
jae
sbb
popa
fimull
mov
fwait
loopne
and
push
hlt
cmc
jmp
es
cmp
js
mov
pop
loopne
push
std
jmp
xchg
das
fsub
rcr
mov
sub
mov
fdivrs
gs
mov
push
mov
iret
stos
lods
dec
movsl
adc
mov
xchg
pop
dec
outsl
xchg
cmpsl
inc
lahf
mov
sub
pop
add
hlt
add
xchg
mov
scas
shll
outsl
sbb
sub
inc
sub
jno
xchg
std
mov
push
loope
and
jns
adc
sbb
xchg
aaa
outsl
or
push
out
xor
xchg
cmp
das
sbb
jmp
out
out
xchg
mov
mov
jne
and
push
mov
push
loope
sbb
jb
cmp
cld
movsb
inc
pop
imul
mov
lea
mov
sbb
fsubl
sahf
jne
sahf
cmp
mov
iret
mov
mov
loope
mov
xchg
cld
pop
mov
ljmp
jp
ljmp
pusha
adc
sarl
jne
out
jecxz
int3
and
repz
dec
dec
push
pop
adc
mov
test
faddl
pop
loop
ljmp
or
jmp
hlt
sbb
movsb
push
mov
in
les
jne
pop
addr16
cmpsl
fstl
negb
push
sub
gs
out
repnz
xchg
loop
xchg
xchg
push
scas
lret
cmc
mov
and
mov
in
add
sub
inc
mov
pop
mov
lock
dec
sbb
push
sahf
jge
lods
loope
es
fisttpl
inc
dec
jge
test
scas
ret
inc
xor
xchg
inc
adc
cmp
lds
imul
mulb
lods
ror
mov
popf
mov
test
add
sbb
sbb
js
and
and
cld
es
lahf
cmovs
out
lcall
add
mov
cmpsl
or
rcll
sub
inc
hlt
push
jg
jnp
pop
imul
sbb
fdivrs
popa
cld
arpl
loope
xchg
enter
fidivrl
jge
push
rcl
pop
mov
sbb
ja
xor
mov
stos
lock
sub
sub
jmp
cld
dec
adc
pop
inc
fnstsw
mov
loop
es
sbb
shrb
mov
in
cmp
sub
notb
addr16
jge
int3
lahf
mov
pop
fs
rcrb
fstpl
mov
mov
mov
andb
xchg
push
or
xor
test
mov
js
mov
jmp
add
jmp
inc
sbb
sahf
movsb
data16
enter
ja
adc
movsb
xchg
in
adc
push
push
pop
add
mov
or
xor
roll
or
adc
xor
adc
jbe
gs
mov
out
cmp
pop
sub
cmp
pop
into
scas
scas
lcall
push
cmp
dec
inc
pusha
and
fcoms
inc
fnsave
xlat
and
mov
and
pusha
mov
jo
pop
loopne
movsb
xchg
pop
dec
stos
mov
and
jl
hlt
adc
inc
movsl
pop
imul
mov
out
xchg
jmp
repnz
jo
cli
add
jnp
mov
stos
int
inc
ljmp
cwtl
jge
sbb
jg
out
mov
inc
pushf
inc
xor
dec
or
repnz
and
aaa
orl
sysenter
loope
push
jle
xor
mov
fiadds
loope
sbbl
or
dec
mov
inc
xor
inc
push
enter
mulb
or
or
repz
lcall
pop
add
mov
push
insb
sub
mov
popa
mov
arpl
mov
out
push
bound
and
test
jo
pop
cmp
mov
jge
or
xchg
or
das
add
out
cmp
lea
flds
fldt
ret
cmpsl
lret
movsb
push
add
scas
arpl
and
pop
xor
inc
shlb
je
jbe
ret
aam
std
out
push
fldz
fidivrs
adc
lods
ljmp
fists
jno
sub
xchg
push
lcall
mov
xchg
mov
clc
fdivrs
cmp
jg
cmp
test
or
shrb
adc
in
sbb
inc
and
sbb
ret
cmp
sbb
push
inc
roll
xor
mov
jl
hlt
aas
inc
push
and
das
in
es
dec
enter
inc
add
fbstp
fnstenv
pop
cmp
cs
daa
or
pop
and
cmp
int
adc
out
std
push
xchg
test
pop
pop
push
sbb
sub
push
mov
rcrl
loopne
mov
es
mov
push
ss
and
push
std
int3
cmp
in
out
push
pop
test
loopne
inc
je
adc
stos
xor
mov
bound
push
jecxz
pop
dec
int3
xor
push
cltd
scas
das
add
outsb
xchg
and
xor
cltd
dec
pop
push
out
repz
adc
and
and
jno
loope
xchg
shrb
sub
inc
cmp
call
adcl
pushf
xchg
pop
cmc
add
xchg
sub
jne
cmp
and
jnp
push
jp
and
mov
fidivrl
cmp
inc
mov
fstp
insl
dec
or
cltd
jmp
inc
xchg
std
mov
sahf
ss
jbe
jp
sbb
je
mov
push
jnp
dec
movb
xchg
out
pop
mov
ret
adc
popa
out
arpl
push
leave
add
jns
pop
inc
inc
sub
jmp
les
icebp
sbb
push
clc
pop
shlb
loope
or
and
aas
icebp
jns
lods
jge
int3
sub
cmp
cld
jmp
jge
jl
push
pop
pop
les
adc
fdiv
mov
loopne
cli
push
sub
in
sub
gs
cmpsb
std
das
stos
push
in
iret
std
adcl
mov
sbb
or
dec
ret
int3
pop
popa
push
dec
dec
push
pop
mov
and
notl
xor
rclb
in
je
gs
sbb
jae
loope
nop
ret
or
pushf
mov
or
cmc
and
add
or
sahf
inc
sub
arpl
add
mov
rol
sub
xor
add
imull
lds
in
mov
xlat
ret
loope
out
shl
lret
inc
lret
push
jbe
dec
xor
mov
arpl
mov
jne
sahf
flds
ret
fs
fs
imul
call
gs
jecxz
mov
cltd
movsl
cmp
mov
loop
inc
cmpb
jb
adc
mov
inc
in
js
jbe
mov
subl
push
clc
xchg
pop
mov
sbb
mov
jno
mov
push
repnz
dec
jo
dec
test
je
stos
std
cs
mov
shl
inc
inc
testb
xchg
lods
addr16
xor
int3
push
lret
test
in
xor
fwait
cli
sub
add
fildll
xchg
data16
insl
outsb
lock
cmpsb
and
out
test
or
jmp
jmp
mov
xchg
and
fildll
shll
jbe
cmp
mov
call
repnz
xor
loopne
jle
or
sbb
mov
push
and
mov
push
sub
es
ret
dec
fdivl
add
stos
cs
fiaddl
xor
outsl
cs
rclb
bound
scas
rcrl
ficomps
or
mov
sbb
cmpsb
sbbb
les
repnz
fisttpl
pushf
jne
js
jecxz
sub
lret
rcrl
fmulp
dec
out
sbb
mov
xor
jge
scas
lahf
adc
fucomi
cld
roll
and
sub
sub
cmc
mov
sbb
movsb
pop
cmp
cld
bound
movsb
adc
mov
aas
and
sub
mov
sbb
sbb
jp
aad
sbb
mov
loope
into
test
fistl
mov
cs
call
sbb
arpl
push
pop
or
xor
lods
test
xchg
sbb
out
dec
je
dec
push
cltd
cmp
inc
xchg
xchg
dec
ret
sbb
aaa
into
adc
imul
cmp
add
pop
cmp
jnp
mov
loope
adc
xor
push
fmuls
mov
ror
dec
push
add
ja
shrl
js
in
fmull
aad
or
mov
push
out
testl
and
mov
adc
dec
stos
pop
jl
xchg
and
pop
or
pop
push
repz
cmp
out
sbb
jg
mov
lret
inc
movsl
popa
shl
sahf
jns
xor
int3
cmpsb
xchg
or
dec
mov
jge
into
rol
xor
repz
bnd
bound
sbb
cmp
push
dec
jle
mov
pop
push
rcll
push
js
mov
lods
push
aad
jns
or
dec
xchg
in
fcomps
push
ljmp
fsubrs
int3
test
lods
mov
andl
faddl
loopne
pop
inc
ret
adc
out
cmp
ret
pop
ss
xor
push
dec
pop
stos
cmp
std
jnp
pop
mov
dec
xchg
inc
push
pop
jle
outsb
out
pop
insb
mov
ret
adcb
test
dec
and
fiaddl
lret
jg
frstor
adc
and
test
ret
dec
fdivs
rolb
xchg
in
loope
lret
rorb
adc
hlt
adc
orb
ret
push
pop
pop
xor
stc
adcb
daa
pop
in
int
negb
xor
test
inc
in
rorb
dec
mov
icebp
add
or
sub
pop
stos
call
sbb
bound
int
mov
inc
pop
insl
out
mov
and
sub
mov
dec
test
inc
lds
cmp
push
jo
stos
adc
aas
inc
addr16
repnz
pop
je
jp
imul
lcall
pop
and
aam
inc
cs
in
xchg
add
out
xchg
ret
repz
dec
test
cmp
negb
lock
popa
stc
sub
mov
push
lea
inc
mov
insb
test
lea
push
jmp
sub
push
sar
pop
data16
jno
add
into
pop
cmp
pslld
xlat
inc
shrb
inc
inc
adc
dec
insl
dec
sub
lea
test
or
in
xchg
jnp
jae
test
mov
mov
and
dec
loope
jle
xchg
movsb
cmp
sub
sbb
dec
imul
xor
test
or
addr16
outsb
sbb
jns
adc
lods
mov
sti
sbb
ja
pop
divb
mov
popf
xor
and
jg
push
mov
pop
popa
out
gs
ret
cwtl
xor
mov
jge
xlat
add
inc
dec
fnsave
xor
pop
jno
jecxz
or
xlat
push
jbe
mov
sbb
push
xchg
jecxz
jne
fwait
pop
fadds
xchg
cltd
mov
fistps
mov
xchg
xor
pop
stos
mov
stc
stc
pop
cs
loope
add
notb
push
sti
cli
lds
sbb
push
mov
add
ljmp
lret
xor
jge
call
out
sub
rcll
mov
test
insb
mov
clc
jg
js
xor
and
or
add
add
inc
cwtl
jmp
or
cwtl
call
add
dec
pop
sarb
jg
lret
out
das
test
push
lods
pop
int
xor
push
das
cld
adc
shl
lcall
repnz
pop
cwtl
cli
icebp
add
sbb
jp
iretw
fnstcw
jno
fisttpl
pop
push
mov
movsl
cmc
xor
dec
xor
xchg
aas
cmp
sub
mov
mov
das
mov
iret
xchg
adc
jmp
scas
xchg
jmp
xor
orl
mov
movsb
and
jl
or
mov
jp
imul
imul
addr16
dec
jae
cmc
test
jg
inc
fistps
cwtl
push
cmc
aaa
in
pop
je
inc
adc
mov
fcoms
push
out
push
and
jns
in
add
fmul
sbb
jmp
rcll
jle
lds
int
cmc
in
jl
mov
xchg
arpl
negb
sbb
jle
divb
test
xor
gs
fwait
adc
outsl
fs
test
inc
jmp
repnz
in
ret
addr16
fcmovnbe
xchg
cs
int
push
aas
rol
xor
pop
orb
adc
xchg
adc
mov
mov
xchg
inc
rdpmc
fdiv
repz
or
or
cmp
sub
les
cmp
pop
inc
pusha
nop
jbe
jno
ss
mov
scas
shl
into
in
mov
clc
adc
inc
jno
pop
sbbb
pop
repz
mov
add
add
lea
push
and
mov
push
lock
cmpsl
push
lcall
push
pop
sub
ss
sarb
outsb
mov
dec
mov
xor
and
bound
sub
je
lret
addb
or
push
in
sub
pop
pushf
push
enter
enter
jl
xor
xlat
push
in
test
cmp
pop
xchg
cmc
jecxz
adc
stc
call
mov
xchg
popf
test
loopne
mov
cs
icebp
and
pop
pop
stos
outsb
vmovdqu32
roll
sbb
push
addb
mov
jecxz
sub
mov
in
fcmovne
outsl
mull
stos
fdivs
push
inc
adc
cmpsl
fs
or
sbb
out
ljmp
fmull
icebp
movsl
leave
in
dec
cmp
shll
xlat
sahf
cmp
dec
pop
aam
or
pop
jmp
inc
call
push
sub
xchg
jb
cs
add
or
popf
pop
insl
outsb
push
out
lock
das
and
and
popf
cmp
inc
jl
add
jns
and
pushl
add
mov
int
inc
lret
mov
mov
in
mov
int3
mov
or
cmpsl
andb
push
mov
lcall
shrb
xchg
lret
insl
xchg
mov
jns
push
movnti
aas
inc
cli
mov
xlat
pop
pop
add
shlb
scas
xlat
ss
jg
idivb
sub
pushf
les
popf
push
cmp
out
pop
pop
insb
sbb
sbb
pusha
sbb
shl
clc
je
insl
scas
aas
popa
stos
leave
jnp
decl
adc
xor
rorl
add
mov
mov
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
loop
scas
test
add
add
add
jno
inc
stos
and
ffree
jae
cli
jl
cmp
mov
jecxz
insl
cld
sub
dec
cmp
out
rorl
je
cmp
xor
inc
in
cmp
and
inc
sbb
lea
rcll
bound
sbb
dec
adc
mov
cli
popf
mov
and
inc
xor
in
and
jb
push
loop
sub
and
dec
mov
repnz
ror
iret
jo
cli
daa
int3
sub
sub
pusha
call
int
addr16
aad
inc
jns
jae
int3
or
cmp
out
push
sbbb
test
xor
popa
cmp
divb
aam
lea
ret
dec
push
inc
and
rcl
cmp
xchg
movsl
lret
sub
xor
sbbb
push
mov
in
mov
inc
negb
mov
pop
jecxz
and
cmpsl
addr16
mov
or
cwtl
popa
cmp
adc
pop
cmp
xchg
incb
pop
test
ret
dec
lcall
dec
sbb
addl
jle
flds
lahf
adc
cwtl
jp
imul
xchg
rcrb
pop
lret
or
push
sub
std
enter
xchg
int3
and
icebp
and
popa
dec
jbe
adc
out
xor
sbbb
push
out
mov
mov
sbb
pop
mov
pop
sbb
aad
addr16
leave
adc
mov
cmc
jg
test
out
xchg
pop
int3
adc
incl
neg
dec
stos
push
sub
push
int
push
mov
cmpsb
dec
pop
mov
cmp
push
inc
or
aam
sub
adc
cmp
out
pop
xchg
push
xchg
xchg
add
add
add
dec
mov
inc
jne
push
shll
pop
lcall
xorl
notl
and
or
cmp
push
cmpsl
stc
cmp
mov
or
pop
xor
orb
leave
sar
xchg
jp
shll
cli
mov
imul
lds
ret
sub
xchg
xchg
ds
pop
inc
push
mov
dec
pop
cmpsl
test
nop
lret
stos
xor
jnp
das
push
push
mov
repz
xor
jbe
cltd
xchg
xor
std
in
cmp
lret
hlt
pop
mov
cmp
dec
add
out
ja
fnsave
or
pop
pop
in
cmp
out
xchg
or
cmpsb
xchg
inc
and
push
pop
pop
in
cmp
sub
out
mov
dec
out
jns
lds
fsubl
je
xchg
rclb
addl
xchg
movsl
in
add
push
sub
stc
xlat
sahf
or
jnp
push
jge
mov
pusha
arpl
xlat
push
in
dec
mov
into
insb
ss
popf
xor
mov
imulw
pop
in
inc
xchg
sub
sahf
xchg
push
jns
les
mov
mov
mov
inc
pop
xchg
cmp
lods
xchg
mov
addr16
inc
fnstenv
add
sub
in
mov
inc
fwait
add
es
sarl
test
mov
sbb
cmp
xor
xchg
aas
add
test
add
mov
push
test
pop
into
out
inc
cmp
call
pop
shl
in
fcomi
je
inc
ds
rcl
add
xchg
nop
xor
xchg
push
xor
add
in
imul
cltd
aas
test
xor
pop
sub
sub
addb
mov
add
add
add
mov
adc
loopne
pop
addr16
ret
mov
insb
mov
mov
loopne
lcall
xchg
loopne
xchg
inc
inc
mov
clc
and
mov
cli
dec
enter
fs
into
aas
pop
mov
fwait
xor
push
mov
xchg
loop
stos
stc
mov
test
jecxz
das
insb
enter
cwtl
mov
popf
fcoms
cld
adc
add
scas
push
insb
leave
jge
mov
sub
mov
pop
jmp
daa
pop
sub
or
adc
cmp
cmp
and
into
cli
pop
fnstcw
popa
mov
arpl
mov
iret
lods
cmpsl
mov
add
ljmp
sahf
aaa
mov
stc
fstp
mov
aas
xchg
pushf
mov
add
jle
movsl
sub
fistps
sbb
icebp
xchg
jne
leave
lahf
aaa
jno
and
jbe
xchg
sub
jp
add
sbb
loopne
jb
and
call
or
mov
sbb
push
xor
bound
lods
sarb
sti
add
push
rol
add
test
cld
outsl
mov
mov
or
js
mov
outsb
push
fs
sub
in
insb
inc
mov
shll
fidivrl
or
mov
and
pop
push
mov
jne
loop
lahf
ss
fidivrs
cs
daa
cmp
lods
xor
cmp
or
jb
dec
cmpsl
pop
ret
inc
dec
adc
jecxz
std
fsts
imul
xor
iret
sbb
mov
lods
adc
jb
jo
mov
pop
cmpsl
movsb
or
inc
fwait
or
push
dec
clc
addl
das
and
aam
aam
ljmp
je
pop
lret
nop
shll
add
add
add
loop
test
pop
scas
daa
cmp
fldl
cmpsb
movsb
sti
jl
sub
xchg
call
daa
dec
pop
stos
push
js
hlt
testb
loop
cmp
inc
pop
testb
cmp
ss
fisubrl
or
mov
neg
pushf
pop
and
loope
jecxz
movsb
mov
outsb
fcoms
aaa
mov
in
dec
inc
cwtl
xor
adc
push
rol
stos
pop
mov
loop
ja
add
sarb
xor
int
dec
out
fs
xchg
in
or
push
lods
mov
adc
adc
lods
testb
shll
sbb
lods
xchg
pushf
call
and
mov
fwait
mov
pop
cmp
inc
dec
rcl
pandn
into
and
pop
incl
inc
lock
and
sbb
jo
test
lcall
fwait
icebp
mov
cmpsl
xchg
imul
pop
fdivr
push
inc
outsl
cwtl
xchg
bound
or
fwait
mov
fisubs
lahf
xor
xchg
mov
lds
jmp
sub
xchg
sahf
fimull
jns
insb
lock
scas
addb
push
loopne
scas
cmc
adc
jge
xchg
test
data16
lock
adc
jne
or
mov
ficompl
adc
inc
das
adc
repnz
shl
xchg
inc
aad
ret
mov
inc
mov
rclb
popf
paddd
mov
out
xchg
push
fldt
and
scas
sbb
test
push
ret
hlt
cmp
push
jle
sub
out
out
ds
shrb
jno
pushf
imul
adc
mov
lret
mov
pop
lret
dec
jle
sti
cmpsl
mov
dec
mov
dec
lea
add
add
add
dec
cmp
insb
push
pop
fs
push
mov
adcb
sub
stc
cmpb
cmp
loop
jb
cs
jp
push
adc
pushl
vphaddudq
inc
arpl
dec
aad
fwait
cmpsb
insb
push
mov
jecxz
outsl
dec
fistl
jmp
dec
add
out
jb
sarl
pmaxub
rclb
out
and
push
push
push
leave
mov
enter
sub
xor
lock
cltd
xchg
xchg
test
sub
cmpsl
rcrl
sub
dec
xchg
xlat
mov
sbb
add
fldcw
test
inc
sti
enter
scas
lret
inc
ljmp
sub
xchg
imul
cmp
test
inc
dec
mov
mov
ret
and
fnstsw
mov
cld
fisttps
testb
pop
stc
das
dec
popf
jnp
dec
pop
push
cmpl
test
add
lods
inc
mov
mov
lds
aam
cld
fisttpll
inc
das
ljmp
imul
add
push
add
cmp
xor
xor
nop
xor
mov
add
adc
and
in
andl
lea
jecxz
adc
push
jge
inc
sub
xchg
mov
hlt
cmp
inc
xor
lds
addl
xchg
jae
cli
test
jne
xchg
into
gs
sar
and
js
or
xor
mov
cmp
push
sbb
lods
decb
inc
out
ss
mulb
xchg
or
cli
rcll
test
mov
xchg
aaa
push
sti
mov
ret
and
push
jns
cmc
mov
clc
out
aam
repz
sub
repz
rcll
int
jae
pop
dec
sbbl
sbb
out
lods
cmp
stc
stc
arpl
mov
aaa
popl
add
add
add
jp
mov
popf
punpcklwd
ficoms
hlt
rol
dec
inc
std
and
dec
in
and
test
loope
mov
add
es
jb
ss
out
das
call
std
cwtl
ljmp
mov
dec
std
push
mov
aas
mov
clc
pusha
jecxz
test
pop
pop
sub
jp
shrb
and
dec
push
leave
jb
mov
pop
insl
outsb
mov
pop
stos
jo
cmpsl
negb
lcall
in
xor
ja
dec
test
out
out
clc
out
xchg
xchg
mov
ds
fisubrs
xchg
shlb
mov
inc
and
pop
mov
pop
sti
sub
ss
cmp
push
sub
das
iret
xchg
cmc
mov
ss
and
and
or
xchg
ret
fcmovu
and
pop
fs
popa
clc
scas
xor
sahf
mov
xor
or
loope
dec
jne
cmp
stos
sub
fs
sbb
stos
pop
inc
movsb
pop
insl
cmp
pop
inc
push
test
inc
loope
cmp
jmp
inc
fmuls
ret
pop
xchg
cmp
mov
or
lret
enter
into
js
xor
cwtl
inc
dec
jg
jp
inc
mov
mov
mov
jecxz
xchg
xchg
out
cmp
pop
repnz
fdivr
fistpll
popa
aam
insb
shrb
sub
jl
adc
sub
inc
push
mov
stc
gs
cltd
dec
dec
inc
ja
shrb
jg
mov
cmp
xor
mov
enter
xor
and
iret
leave
and
xor
out
xchg
cmp
cmp
nop
push
add
jo
sub
gs
aaa
push
bound
add
call
je
cltd
lahf
ret
add
push
daa
add
insl
mov
mov
sub
mov
es
outsl
sub
subb
lods
sti
adc
repnz
dec
jmp
add
stc
ficoml
fs
inc
push
scas
sbb
icebp
lods
push
std
push
iret
cmpsb
lahf
shrl
xchg
insb
mov
cmp
enter
inc
mov
ss
fs
jmp
divb
icebp
ss
xor
sbb
std
cltd
in
or
fimull
ljmp
or
or
push
mov
cmp
sbb
and
stc
xchg
stc
cmovnp
adc
xor
scas
ret
fisttpll
xlat
je
adc
rcrl
std
scas
adc
test
pop
sub
xchg
push
xchg
mov
mov
gs
or
arpl
call
mov
out
adc
inc
fcmovnb
add
addr16
rcr
test
std
mov
sbb
insl
mov
add
xorb
ret
call
iret
add
pop
lret
or
mov
push
dec
pop
push
mov
and
lret
nop
fadd
sbb
jle
adc
imul
ds
je
out
jo
dec
inc
sbb
xor
sbb
or
jne
xchg
xchg
inc
jp
push
cli
mov
jg
adc
scas
ja
mov
repnz
cmp
mov
jnp
mov
sbb
mov
ljmp
fcomi
xchg
sbb
in
test
sub
cmp
cwtl
pop
push
popf
push
adc
jae
fsubp
sub
cltd
dec
inc
sub
das
jle
jg
imul
and
and
add
call
xor
fsubl
popa
fwait
imul
pop
cmp
scas
and
sahf
sarl
or
gs
lret
ljmp
mov
leave
and
enter
outsl
mov
pop
fxch
sbb
cmpsl
pushf
inc
pusha
jbe
inc
push
pop
jmp
mov
test
xor
imul
pop
sahf
dec
int3
jnp
repz
enter
in
fld
mov
fwait
mov
jno
js
and
inc
int
movb
push
add
and
add
mov
lahf
adc
sbb
es
jns
cmpl
xchg
jno
and
dec
pop
jnp
xor
loope
arpl
jg
dec
mov
notl
daa
sub
jmp
pop
jecxz
add
sbb
sub
sub
xor
mov
xchg
imul
push
dec
sub
fisttps
imul
iret
ss
mov
jecxz
outsl
popa
xchg
sbb
call
inc
aad
push
sub
mov
jb
ror
mov
fdivl
cmpsl
notl
mov
jb
stc
shlb
inc
popf
or
and
out
mov
dec
pushf
leave
adc
mov
xchg
mov
fcmovbe
mov
inc
dec
in
gs
push
or
push
stc
lods
imul
in
jg
sbb
xchg
aas
xor
pop
dec
mov
adc
sti
xchg
test
cld
hlt
push
mov
xor
inc
add
mov
add
sahf
mov
jo
mov
sbb
insl
push
xlat
jmp
fisubl
xchg
jg
fimuls
jge
jmp
fs
jp
cmp
mov
xchg
into
addr16
and
mov
mov
fucom
push
repnz
call
call
cmc
pop
insl
fidivrs
or
lock
js
out
lret
out
scas
jg
push
mov
popa
xchg
stos
test
dec
scas
lret
cwtl
jge
and
stos
sub
std
push
aas
lahf
int3
xor
insb
mov
scas
sub
push
or
mov
out
jmp
xor
repz
repz
movsl
jl
jmp
and
jbe
mov
add
es
dec
xlat
jg
mov
adc
fs
xchg
out
test
xchg
pop
xor
test
shrb
cli
out
inc
lret
std
or
and
sub
int3
cmp
jg
jp
mov
push
dec
jae
dec
sarl
cmpsb
jbe
pop
fisubl
and
sbb
push
inc
mov
mov
das
mov
std
andl
fld1
and
pop
leave
mov
add
ja
imul
cmp
popa
loopne
mov
cltd
ljmp
or
shlb
pop
lock
pop
pop
mov
and
movsl
xchg
call
add
add
or
mov
popf
sub
xchg
add
scas
mov
inc
xchg
cs
pushf
and
inc
dec
les
and
ret
xlat
or
pop
mov
xchg
xlat
aaa
pop
sbb
stos
mulb
sbb
cmpsb
inc
stc
subl
or
sarl
push
roll
mov
sbb
cli
cmp
sub
sahf
dec
or
incb
fcompl
and
pop
out
xchg
jmp
cs
inc
ret
ret
and
lret
xchg
mov
jmp
in
ret
or
ret
lods
sub
mov
hlt
add
call
cwtl
pop
ret
call
mov
rcll
inc
int3
andb
pop
jnp
pushf
psubusw
lods
xchg
cmc
movhps
jp
mov
sub
ja
paddsw
jo
in
xchg
out
cmpsb
ja
outsl
dec
cmpl
xor
test
cwtd
push
sets
mov
mov
cmp
inc
sbb
jp
push
in
jecxz
xchg
adc
inc
xor
sub
sub
mov
mov
pop
stos
lods
jp
negl
mov
push
cmp
add
add
enter
scas
dec
sahf
into
jnp
aas
push
shrl
sub
std
imul
sbb
xor
fisttpll
add
xor
sbb
cli
arpl
dec
mov
xchg
je
dec
add
jecxz
or
mov
adc
or
and
mov
pop
mov
jmp
in
lock
mov
mov
cmc
orl
insb
imul
add
mov
and
mov
insb
out
add
pop
xchg
pop
cmp
xor
movsb
or
lret
mov
sar
push
lods
push
cmp
sbb
sub
mov
arpl
shll
mov
hlt
mov
sti
inc
jmp
dec
add
or
bound
sbb
inc
mov
sub
inc
xchg
pop
movsl
gs
ds
jnp
imul
push
xchg
mov
add
xchg
lods
mov
jne
cmp
out
lahf
xchg
xchg
clc
or
jmp
dec
push
cmp
stos
pushf
inc
pop
nop
or
roll
ret
mov
data16
push
xor
enter
ss
ret
pop
iret
fst
enter
inc
mov
add
call
add
xor
outsb
call
xor
std
mov
out
mov
cwtl
jle
lret
jecxz
xchg
sub
jmp
push
pop
mov
and
testl
cltd
jmp
rolb
jae
or
and
data16
mov
xor
out
rcr
cli
jb
loop
and
incb
cwtl
cltd
aas
popl
mov
movsl
mov
popf
add
push
punpcklbw
out
adc
jo
pushf
or
dec
addl
push
mov
test
inc
ret
imul
inc
clc
into
insb
ja
rorl
pop
dec
loopne
and
ds
inc
dec
xchg
xchg
or
xchg
sti
mov
xchg
adc
mov
inc
in
int
mov
arpl
jg
in
and
and
nop
lea
cmpsl
push
jmp
das
jmp
adc
xchg
test
mov
pushw
lcall
mov
loope
mov
movsb
jmp
je
mov
mov
aaa
lret
xchg
cmp
xor
movsb
xchg
cmpl
xchg
inc
xlat
das
and
fwait
push
mov
mov
add
nop
sti
out
movsl
lods
xchg
adc
push
add
adc
scas
xor
cmp
loop
cwtl
addb
or
jbe
xchg
adcl
inc
push
ds
inc
movsb
add
xor
mov
or
call
insb
sbb
aam
aas
dec
mov
add
fstp
outsl
adc
les
adc
rcr
bound
xchg
fldt
lock
out
repz
mov
ret
in
adc
ljmp
add
mov
cmp
popf
mov
mov
mov
pop
les
add
add
inc
add
inc
add
add
or
inc
add
add
adc
inc
add
add
sbb
inc
add
adc
add
inc
add
adc
or
inc
add
adc
adc
inc
add
adc
sbb
inc
add
and
add
inc
add
and
or
inc
add
and
adc
inc
add
and
sbb
inc
add
insb
jp
jbe
ja
js
jno
arpl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
add
in
loop
add
loop
add
mov
jns
xor
dec
cmp
dec
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
je
inc
add
inc
add
inc
add
loop
add
add
loop
add
inc
add
add
loop
add
test
pushf
clc
insb
loope
add
inc
add
loop
add
inc
add
add
inc
add
loope
add
inc
add
or
cmpl
push
orl
add
cmp
ds
add
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
jbe
mov
pushf
clc
sbb
push
pop
es
add
filds
sbb
add
mov
pushf
clc
addr16
addr16
pushw
push
es
inc
add
dec
cmpsb
dec
lahf
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
mov
add
jp
pop
loope
add
adc
imul
insb
push
imul
push
insb
inc
push
inc
jo
dec
dec
pop
jp
jbe
pop
jo
inc
push
jb
inc
je
inc
jae
dec
gs
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
add
bound
dec
ja
dec
inc
inc
push
add
je
bound
dec
bound
pop
outsl
push
inc
gs
dec
js
inc
js
arpl
add
add
add
jb
outsl
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
jp
push
arpl
dec
dec
data16
imul
dec
cmp
dec
lods
out
mov
js
pushf
push
adc
push
mov
add
add
add
lret
int
cmp
popf
ja
lea
inc
sbb
mov
imul
dec
jp
jbe
mov
inc
adc
mov
fs
mov
push
dec
xadd
add
fscale
fisubrs
sahf
jbe
movsb
push
test
out
jl
ret
es
mov
adc
mov
push
nop
imul
inc
andb
outsb
aaa
mov
cltd
fistpll
icebp
lds
add
aam
or
xchg
push
in
cmp
insb
pushf
inc
mov
mov
or
sbb
fdivrs
in
jge
pop
enter
in
pop
test
or
mull
or
inc
jnp
scas
push
jl
pop
lahf
xchg
arpl
jae
aad
push
scas
xor
stos
inc
test
lcall
fsts
sub
or
xchg
ds
out
shlb
mov
rolb
push
inc
pushf
cld
lahf
out
and
repz
pop
gs
gs
push
jg
int3
push
mov
mov
popf
cli
movsb
sbb
xchg
inc
adc
adc
push
imul
test
sbb
cmp
inc
mov
daa
nop
inc
movsl
aad
repz
inc
cld
add
hlt
xchg
mov
push
mov
inc
sub
addb
or
mov
aad
jge
mov
mov
jp
mov
lods
add
adc
es
or
xchg
dec
mov
fsubrl
and
jno
mov
inc
scas
mov
popf
mov
rorl
jnp
cmp
jb
cmp
cmpsl
lahf
into
push
push
sub
dec
pop
arpl
add
jb
and
push
mov
xlat
push
dec
clc
add
aas
mov
add
add
add
push
jo
insb
pop
in
mov
cmp
dec
imul
push
pop
or
mov
inc
bound
inc
bnd
inc
cmp
inc
cmp
mov
xlat
mov
nop
add
repz
sahf
ja
mov
or
lret
aaa
xorb
sub
or
inc
popf
xchg
stc
jo
mov
mov
xchg
jmp
les
je
xchg
sub
jecxz
xchg
and
mov
jmp
push
mov
std
mov
rcrb
jl
inc
rcl
aas
popf
pop
inc
loope
sbb
hlt
add
xor
arpl
push
lods
mov
mov
out
dec
inc
repnz
xchg
sub
aas
movsb
cmp
jp
ret
mov
out
xchg
cmp
imul
es
inc
pop
fwait
test
pop
shr
dec
mov
mov
push
jbe
pop
shlb
cmp
test
mov
push
xchg
inc
push
fs
push
xorb
lret
mov
fidivrl
or
inc
push
and
call
mov
cmp
jno
jg
insb
mov
enter
fbstp
push
push
sbb
cmp
in
lret
pop
xchg
jb
into
arpl
popa
mov
dec
mov
iret
movsl
jae
clc
mov
jbe
imul
xor
in
xor
inc
mov
adc
movsl
clc
fnstsw
pushf
aas
insl
add
roll
sbb
cmpsb
jp
adc
dec
cmp
pop
cmc
jbe
xchg
aam
xchg
add
call
mov
rol
mov
push
jg
ljmp
push
aad
mov
add
pop
cmpsl
leave
stos
or
loop
jecxz
negl
mov
dec
dec
adc
into
leave
insl
in
and
mov
jno
mov
inc
and
out
or
ljmp
mov
mov
add
dec
js
cli
aad
inc
and
lods
loop
ljmp
sbb
pop
push
cmc
mov
adc
hlt
inc
mov
xlat
out
fwait
ror
sbb
or
in
inc
pop
stc
jb
cli
push
lcall
push
jo
mov
push
dec
aad
xchg
mov
jle
mov
add
lods
stos
outsb
push
fists
push
dec
adc
shlb
sti
int3
inc
adc
fwait
add
out
jge
jp
decl
lods
movsb
sbb
movsb
inc
movsb
pop
mov
fdivrp
or
sbb
mov
pop
sub
xor
nop
les
test
sub
mov
pop
aas
outsb
push
mov
push
cmp
and
shlb
test
sbb
jle
fwait
cld
rcr
xchg
sbb
sti
mov
aad
mov
push
aas
jge
mov
aaa
lret
fisubrl
icebp
in
scas
test
dec
arpl
jmp
in
push
rclb
cmp
loope
lret
mov
mov
jns
push
sbb
ds
mov
mov
mov
push
cmp
lahf
lock
jmp
xor
loope
cs
and
or
and
clc
add
or
mov
pop
cmp
out
shlb
dec
sub
jnp
jle
mov
adc
cs
cmp
jo
xchg
mov
cmp
mov
in
fimuls
jnp
dec
btc
add
add
add
and
adc
es
repz
iret
inc
cmp
cltd
jg
xor
outsl
add
pushl
cmp
and
xchg
mov
movl
popa
add
imul
xor
ret
sbb
dec
jge
and
or
mov
movsl
xchg
aas
or
hlt
ja
lcall
mulb
mov
dec
jecxz
mov
mov
add
mov
jnp
or
test
xor
ret
cmp
jns
arpl
adc
cwtl
sub
ds
sub
aaa
scas
sbb
hlt
jb
jo
mov
add
or
xchg
adc
sbb
imul
pushf
and
mov
filds
sbb
mov
mov
je
push
mov
jp
sti
shrb
or
shll
daa
dec
jge
pop
std
loop
fadds
inc
loopw
movsb
shlb
adc
mov
cmp
dec
or
sarl
out
les
mov
fs
insb
cmp
jl
cmc
fidivs
mov
pop
inc
push
pop
add
enter
cmp
xchg
out
jo
fldcw
sub
adc
jmp
lret
lods
popf
fidivs
jmp
cmp
or
push
loop
mov
ljmp
mov
rcr
fdivl
add
cmp
repz
mov
inc
in
xchg
repnz
inc
xchg
icebp
test
mov
mov
or
idivb
adc
jp
mov
mov
inc
stos
sub
sbb
add
fnstenv
std
negb
sub
insb
aam
out
idivl
add
decl
mov
cmp
aas
mov
mov
mov
loop
xor
mov
and
xor
pushf
test
mov
enter
stos
and
cli
dec
jmp
mov
xor
int
dec
nop
in
mov
inc
inc
and
fwait
les
mov
cmp
movsb
add
cmpsb
mov
scas
jae
aam
mov
addb
adc
xor
sti
jae
cmp
loope
aam
mov
cmpsb
jb
pushf
out
xchg
or
cmp
push
into
or
dec
adc
sub
rol
mov
inc
add
arpl
mov
std
iret
lret
out
cltd
fistpl
cmp
test
test
pop
push
xor
nop
in
sub
and
xorl
sbb
les
xchg
pop
add
inc
xchg
popf
or
add
inc
out
mov
aas
mov
in
adc
sbb
xor
jbe
lods
add
pavgw
test
or
pcmpgtb
inc
adc
out
cmp
jg
dec
jg
sbb
jo
arpl
cmpsb
out
cmc
insl
fcomps
aam
sub
sbb
sbb
adc
aas
out
mov
inc
or
xchg
lretw
sbb
sti
arpl
lahf
dec
aad
enter
popa
push
sub
cmp
dec
ljmp
icebp
mov
pop
sahf
push
dec
cs
and
lods
inc
mov
xor
and
out
sbb
rolb
xchg
in
cmpsb
fildll
jae
dec
jmp
fcoml
xrelease
mov
dec
xor
into
inc
cmp
je
fbld
xchg
mov
scas
fbstp
inc
mov
scas
fistpll
add
xor
mov
push
lock
sbb
fnsave
or
push
test
sbb
lock
push
inc
xchg
xchg
sti
xlat
popa
xor
dec
cs
jnp
lahf
daa
fmuls
pushf
dec
and
in
popa
sub
or
int3
jg
xor
roll
iretw
dec
aam
mov
push
cld
aam
and
sub
ss
dec
dec
cmc
xchg
sbb
pop
xor
mov
fisubrl
fdivrs
mov
jle
or
sarb
cltd
dec
inc
mov
jle
mov
pop
shrb
mov
dec
xor
push
mov
cmpsl
mov
jo
fs
fldenv
loop
pop
lret
push
mov
mov
pop
adc
insl
push
sbb
cmpsl
pop
subl
mov
rorb
cld
push
decl
lea
inc
jge
cmp
cmp
iret
add
div
xor
shl
mov
outsl
mov
adc
mov
pop
mov
or
lea
inc
cmpsb
cmp
jle
xlat
test
and
call
out
xor
and
dec
sbb
cmc
loopne
xchg
jmp
add
jl
mov
cmpsl
data16
and
mov
pop
fwait
js
pop
push
pop
fsubrs
xchg
hlt
sbbl
sub
fisubrl
movsb
scas
in
jno
mov
mov
xchg
popw
mov
scas
xor
jecxz
xor
cltd
cmp
adc
xchg
pop
hlt
xchg
es
add
lahf
notl
xor
and
out
and
adc
xor
outsl
js
int3
add
xor
cs
pop
jl
mov
loop
xchg
xor
adc
sbb
les
dec
or
add
pop
sub
push
mov
add
pop
ret
add
bsf
or
out
in
loop
push
movzbl
add
int3
stos
dec
fstl
rorb
pop
push
movsb
push
out
cmp
and
dec
out
orl
cld
or
ret
cmc
adc
mov
in
movsl
insl
add
cwtl
leave
fs
fcompl
cld
jbe
mov
adc
mov
or
subb
out
lret
xchg
pop
std
push
mov
push
divl
push
push
out
ljmp
cmp
push
or
notb
xchg
std
inc
rcrl
cld
pop
not
mov
ficomps
xor
jp
outsb
and
add
cmpl
daa
adc
mov
fstl
mov
stos
jmp
mov
stc
jb
jmp
stos
std
xor
and
insl
fstl
filds
sar
push
mov
je
roll
ss
xor
es
sbb
aaa
sbb
sub
sub
mov
jnp
fisubs
and
ret
add
pop
lods
dec
mov
mov
addb
pop
in
hlt
outsb
inc
mov
fmuls
and
inc
sbb
xor
pushf
test
jmp
clc
adc
leave
mov
imul
imul
jle,pn
inc
xchg
dec
xor
mov
pop
adcl
lret
ret
or
mov
fstpl
push
cwtl
fcmovnbe
or
sbb
jae
out
sub
jmp
jl
mov
and
add
sbb
xlat
test
fdivl
adc
out
cmp
nop
xlat
repnz
adc
mov
aam
xor
and
scas
ret
call
and
mov
inc
out
mov
mov
add
adc
out
and
fistpll
scas
push
xchg
jp
movsb
int
jnp,pn
aad
inc
pop
jo
inc
xchg
scas
fisttpll
jo
fstps
lret
dec
in
adc
outsl
subl
jo
and
dec
mov
in
lsl
push
mov
lds
jp
push
xchg
mov
cmp
pusha
mov
mov
sub
push
adc
dec
incl
lods
mov
cmp
sub
xlat
mov
outsl
mov
xchg
mov
push
xor
cmp
adc
out
std
mov
cld
je
je
ret
sub
les
ljmp
aam
aad
loop
sub
push
mov
push
cwtl
add
das
dec
lret
rcll
inc
test
popl
es
mov
pushf
dec
test
sub
add
lea
pop
sbb
repnz
and
in
sub
pop
test
aas
loope
nop
add
into
push
lahf
add
jge
dec
mov
mov
out
repnz
xchg
enter
orb
lahf
or
pusha
movsb
add
xor
sub
pop
push
mov
mov
add
xchg
fld
daa
rcrl
lds
pop
loope
mov
daa
test
in
lcall
aaa
push
repz
in
sub
jp
shll
lcall
and
mov
movsl
push
sbb
repz
jp
inc
mov
mov
in
inc
cltd
sub
jnp
xor
pop
adc
shl
arpl
ret
arpl
ja
xor
sub
fmulp
int
pop
fld
and
cld
scas
hlt
mov
mov
out
mov
add
call
xchg
cmp
lds
dec
hlt
in
pop
adc
hlt
in
les
and
pop
mov
fs
xchg
xchg
and
sbb
test
or
mov
imul
enter
les
das
cwtd
mov
fmull
push
fwait
lahf
mov
lods
dec
jb
ljmp
cmpsb
imul
jbe
add
sahf
scas
loop
lods
push
lods
mov
xchg
mov
loope
or
or
xchg
out
cmp
cmp
ss
inc
mov
mull
xor
jecxz
or
pushf
mov
and
sbb
mov
shlb
mov
pop
dec
movsl
adcl
xchg
sahf
push
ljmp
inc
pop
mov
dec
and
out
es
test
mov
sarb
add
jmp
mov
aas
clc
add
sub
stos
mov
in
xor
jge
pop
sub
das
dec
imul
jne
xchg
fnstenv
js
cmc
mov
mov
xchg
add
cmp
cmc
or
mov
push
jmp
arpl
jl
push
mov
in
and
jl
xor
in
xor
in
sarb
mov
or
inc
enter
aas
loope
xor
jp
cmpsl
in
popf
aam
push
fsubrl
bound
enter
add
pop
adc
add
mov
lods
xchg
and
icebp
push
mov
pop
in
xor
pop
and
ds
dec
pop
aas
jecxz
push
nop
and
xchg
mov
sub
js
iret
mov
mov
mov
in
xor
inc
and
lret
addl
or
xor
jmp
fimull
jmp
enter
add
call
cmp
faddl
push
fprem1
pop
mov
mov
xchg
adc
int3
sbb
scas
sahf
clc
push
inc
lret
xchg
out
inc
mov
xchg
faddl
cmp
insl
fiadds
loope
jnp
adc
pop
mov
jb
mov
rolb
enter
in
pushf
shll
push
lods
dec
leave
fstl
outsb
or
fdivl
mov
adcl
shrl
hlt
imul
mov
adc
movntps
inc
mov
sahf
ds
shll
xor
or
sbb
mov
sub
decb
cmp
or
cmp
adc
jb
push
idivb
inc
sub
mov
jb
fcmove
std
sti
lretw
add
sbb
in
jmp
rcr
pop
cld
add
or
mov
imul
test
rcr
mov
sbb
movsb
sbb
aas
decl
aam
mov
stmxcsr
sti
hlt
sarl
mov
pop
inc
movsb
push
in
sub
mov
inc
sbb
sti
aaa
arpl
add
mull
pop
add
pop
cmpsb
mov
xchg
in
mov
xor
or
mov
fwait
dec
fnstsw
insb
mov
xlat
xchg
rep
and
ret
sti
aaa
sbb
ljmp
ret
pop
in
lret
cwtl
out
jnp
sbb
dec
int3
out
outsb
cmp
push
loopne
out
int
dec
jl,pt
jmp
testl
sub
imul
rcll
sub
push
mov
xchg
stos
in
add
push
or
js
mov
pushf
cmp
mov
sbb
xchg
insl
adc
pop
iret
pop
aad
ss
dec
jl
pop
ret
add
call
lods
movb
fisttpl
movsl
xchg
cmpsb
mov
popf
in
adc
insb
fistpll
aaa
cwtl
stos
imul
push
jg
mov
shlb
roll
pushf
int3
and
sub
push
out
and
fwait
test
cmp
sti
jmp
jno
loop
xchg
out
cmpsb
adc
adc
adc
jp
cli
add
lods
cmp
inc
xchg
push
xchg
mov
mov
add
add
test
shlb
mov
stos
imul
jp
or
repz
mov
pusha
fldenv
loop
xor
jmp
lods
mov
lods
insb
rolb
sbb
rolb
jo
test
xor
dec
iret
cmp
insl
jno
scas
add
sub
push
andl
test
mov
sbb
xor
in
mov
cmp
or
das
lods
mov
not
mov
or
fldl
int3
pop
int
test
mov
pusha
int3
ja
sti
mov
notb
pop
jmp
fidivrl
popa
shrb
mov
push
mov
cmp
lcall
ja
add
mov
shl
std
testl
sarl
rcl
fists
sahf
inc
std
adc
popa
cmp
xorl
and
aad
pop
mov
lret
jb
inc
mov
repnz
xchg
ret
lods
stos
jle
sbbb
mov
push
inc
popa
loop
insl
sbb
subb
movsl
mov
popf
movsb
sti
aad
inc
insb
mull
in
mov
mov
push
test
jg
rolb
pop
dec
lret
call
aad
ret
stos
inc
in
cli
js
int
movsb
aaa
icebp
sbb
daa
mov
enter
cmpl
and
loopnew
xchg
sbbb
or
sub
jecxz
jne
xchg
loop
inc
scas
sti
xor
bound
mov
cmc
xchg
out
cmp
in
mov
mov
in
xchg
push
out
dec
xchg
iret
add
aad
in
adc
push
jnp
cmc
push
mov
mov
cmp
std
push
or
iret
dec
jns
jecxz
or
loop
in
movsb
es
xor
cmpsb
lds
sbb
push
mov
xchg
xlat
mov
fisttpl
pusha
push
sti
mov
out
mov
sbb
aam
mov
sbb
shr
push
ficompl
or
in
sub
out
push
ljmp
or
fcoms
and
xlat
inc
daa
jmp
in
call
cmpsl
jb
xchg
iret
and
stos
fisubs
mov
push
cli
movsl
push
fsts
or
xchg
in
push
sbb
leave
inc
adcb
xchg
insb
mov
fcom
pop
pop
inc
sub
mov
pop
pminsw
xchg
icebp
add
lods
fisubrl
sbb
mov
iret
ret
jmp
pop
pop
xor
push
push
cli
test
sbb
cmp
or
sbb
sub
mov
push
sub
push
clc
xchg
cmp
mov
in
icebp
lods
mov
rolb
int
mov
push
out
aad
mov
jge
call
iret
enter
bound
fisttpl
pop
call
dec
xor
xchg
scas
dec
sub
cmpb
lock
fisubrs
jle
lret
popf
mov
xchg
push
jle
dec
cs
outsb
jae
lret
jle
repz
add
call
jmp
aas
mov
jge
adc
cwtl
pop
mov
addr16
mov
outsb
lds
fstl
insb
xchg
icebp
xchg
in
clc
cmpl
ret
fimuls
cwtl
cmp
jo
and
scas
sbb
pop
dec
pop
jle
and
fsubrs
jae
jg
xor
mov
jmp
mov
fstps
fwait
mov
out
mov
jo
loop
stos
aad
scas
out
adc
xor
cmp
mov
testb
ljmp
fnstenv
xchg
mov
adc
jle
mov
xor
sub
pop
mov
jmp
inc
mov
repnz
cmc
sub
aam
ret
sbb
or
jbe
push
hlt
out
cmp
stc
cmpsb
std
fstps
scas
fld
cmp
lods
loopne
cmp
lods
or
rcrb
popf
cmp
adc
push
xchg
out
xor
sbb
scas
and
or
sub
cmc
jle
inc
pop
fldenv
xor
mov
dec
aas
pop
push
adc
inc
push
outsb
std
pop
mov
dec
sub
cmpsb
and
in
cmc
add
shll
movsl
mov
aas
dec
stc
or
addb
fistl
in
icebp
jecxz
sti
std
adcb
rcll
mov
pop
add
cli
test
sbb
xchg
loop
or
out
xor
scas
call
mov
sti
in
fwait
call
ljmp
cmpl
push
cld
lret
movsb
ds
add
push
xchg
push
inc
xchg
inc
cmpsb
dec
dec
sbb
adc
adc
mov
lds
pop
into
add
call
out
stc
pop
adc
mov
pushf
test
cmpsb
andl
ds
into
push
and
jbe
mov
xchg
in
sbb
mov
xor
sub
lea
cmp
and
jne
sbb
jno
push
jnp
enter
sbbb
cmpsl
cmp
dec
and
das
cmp
lahf
insb
or
lcall
adc
adc
shll
imul
mov
or
jbe
jne
loope
shlb
movsl
test
add
cmc
mov
mov
or
add
dec
sub
pop
adc
xchg
sbb
jle
loope
ret
adc
xor
notb
mov
fwait
addl
pop
hlt
adc
jbe
int3
mov
xchg
test
and
aam
add
mov
sbb
push
adc
jl
or
push
pop
stos
in
incb
test
lods
dec
fs
ja
or
xchg
xchg
cmc
int
or
pop
mov
cld
rcl
xchg
sub
in
pop
jp
incl
lret
adc
cs
cmp
and
dec
add
and
ds
add
dec
sub
cs
pusha
in
mov
es
mov
test
mov
inc
outsb
iret
inc
jge
ljmp
dec
dec
out
push
sbb
aam
ds
ficompl
pop
or
shlb
scas
sbb
and
or
lret
jge
repz
fidivs
popa
pop
mov
xchg
jnp
mov
push
and
inc
ret
dec
insl
or
aam
adc
add
ret
sub
addb
imul
leave
adc
sbb
fldt
test
hlt
sarl
cmp
mov
rorb
sbb
rolb
add
add
add
push
insb
call
sti
jnp
pop
push
lcall
test
lods
aad
mov
adc
js
mov
push
jg
dec
iret
pop
ja
dec
xchg
push
mov
sar
leave
jne
mov
pushf
add
ds
or
xor
out
fisttpll
cmp
dec
pop
popf
out
push
xchg
push
xchg
cli
jnp
mov
jecxz
fidivl
adc
mov
int
scas
ljmp
movsb
sbb
out
pop
ror
sbb
xor
add
gs
test
sar
faddl
lcall
test
sbb
xor
mov
or
or
test
ss
sub
cmp
inc
pop
adc
push
outsb
dec
es
dec
xorb
mov
or
dec
sbb
and
in
jnp
je
sub
add
xchg
mov
jno
push
xor
dec
scas
push
mov
cmc
cmpl
mov
sbb
outsb
push
ja
loope
fmull
mov
mov
nop
leave
mov
or
mov
and
test
pop
mov
or
cltd
jo
mov
and
test
movsl
idivb
xchg
loopne
fucom
mov
ljmp
mov
push
testb
sbb
inc
fstl
insl
iret
stos
sbb
dec
shrl
lods
lea
movsl
dec
cmc
rcr
subb
push
xchg
cmp
xchg
fcmovnu
adcl
in
push
push
or
lea
sarl
orb
sub
jge
pop
loopne
xchg
pop
xor
xchg
xor
imul
jge
dec
data16
lahf
or
dec
mov
push
lock
cmc
das
sbb
xchg
iret
and
js
roll
add
add
add
or
rolb
hlt
dec
pop
sub
sbb
sub
cmpsl
or
es
cld
jb
inc
decl
cld
sub
loopne
push
jo
pop
sub
repnz
stos
adc
fcmovnu
shll
testb
push
lret
mov
push
inc
mov
xor
dec
pushf
mov
mov
mov
out
sbb
test
in
mov
dec
cmp
xchg
dec
push
or
inc
cmpsb
je
jge
sbb
inc
jnp
jb
aam
mov
sahf
test
das
xchg
ret
sbb
push
jle
jmp
movsb
xor
adc
pop
lods
shrb
sbb
xor
xlat
jle
or
push
imul
notl
jmp
ljmp
ret
mov
jp
xchg
mov
inc
push
repz
pushf
lahf
sarl
sub
jno
jo
ret
jbe
inc
lahf
fld
fdivl
je
pop
add
xor
ret
call
mov
stos
inc
sahf
loop
jnp
push
insl
sub
sbb
dec
aaa
mov
dec
gs
sbb
sbb
cs
mov
out
lds
fwait
push
or
jp
test
cmpsb
or
push
and
pop
orl
pop
shl
jl
jg
sahf
xlat
in
dec
cmp
sub
pop
xchg
jg
push
pusha
xor
das
xchg
mov
jge
iret
data16
mov
lret
mov
adc
inc
xor
lods
aad
push
mul
daa
leave
lock
mov
dec
js
lret
mov
add
dec
sbb
dec
sub
xchg
scas
and
imul
lods
adc
push
pop
add
cmp
mov
fisttpll
int
xchg
inc
cmc
sti
fildll
fldl
add
roll
add
add
add
jb
call
test
push
into
push
push
mov
lock
jp
jmp
mov
sbb
jle
sub
mov
stos
test
roll
push
fildll
mov
add
xchg
xor
or
fiadds
fmul
mov
push
movsb
xchg
dec
test
clc
cmp
shr
add
xchg
xor
pusha
leave
enter
sbb
cmpsl
sbb
frstor
push
sbb
hlt
sbb
cli
pop
sub
imul
mov
jg
xor
pop
shrb
mov
sub
ss
loop
je
dec
fsts
repz
jmp
sbbb
gs
pmaxub
loope
jae
adcl
add
lods
std
push
xchg
inc
or
pop
dec
sahf
sbb
in
pushf
pusha
insb
repz
iret
shrb
jno
sbb
mov
arpl
jmp
ret
sbb
popf
sahf
xor
xchg
inc
jo
jmp
pop
mov
fdivp
pop
inc
push
jns
in
jl
pop
xor
push
cli
jge
div
xor
int
push
xchg
inc
inc
in
push
cmp
or
pusha
js
jmp
adc
cmp
cwtl
pop
cmp
dec
jmp
xor
mov
ljmp
and
sub
mov
outsb
shl
ja
movsb
mov
xchg
cmp
scas
mov
cli
icebp
aaa
incl
insl
out
push
addl
cmp
adc
std
fistpl
inc
lods
test
xlat
js
cwtl
outsb
ffree
sub
jl
mov
pop
cwtl
in
mov
lcall
data16
push
dec
cmp
mov
push
mov
imulb
sub
or
mov
jl
repz
dec
in
ds
call
popf
or
add
ss
mov
ja
outsb
call
pop
dec
pusha
pop
push
shlb
jecxz
push
loope
sti
jne
in
sub
ficoml
and
xchg
les
lods
shrb
mov
rorb
into
mov
cs
and
jbe
clc
dec
iret
inc
mov
test
cmp
sbb
fstp
jmp
jae
addr16
and
and
fs
jle
xchg
push
decb
les
es
add
jmp
std
arpl
lret
jb
push
sub
adc
push
jno
mov
cmp
lahf
in
xor
rcll
push
scas
adcb
ret
shr
out
cmpsb
in
int3
sbb
push
popf
fistps
pop
test
xchg
popf
mov
pop
call
xor
lret
ret
outsb
cltd
xlat
xchg
cmp
jmp
jns
pop
movsl
iret
neg
push
test
sbb
mov
pusha
xchg
in
in
or
enter
fs
rolb
outsb
lcall
adc
push
adc
and
xchg
inc
insl
mov
push
fcoml
mov
ds
aam
xor
pop
add
aad
out
lcall
and
xlat
ljmp
xor
jmp
cltd
je
je
adc
and
imul
sub
sbb
mov
mov
mov
roll
sbb
mov
test
fisttps
jecxz
push
jae
xchg
lods
fldcw
insl
nop
out
imul
cltd
bound
mov
rorb
daa
push
imul
bound
xor
add
add
aam
xlat
js
inc
xlat
out
cli
stos
sub
outsb
jp
push
xchg
mov
push
pop
lods
ljmp
int
iret
and
mov
sbb
push
add
lea
sbbl
es
sub
mov
pop
insb
ja
xchg
or
loopne
pop
push
lea
aad
and
push
popf
jg
leave
sub
sbb
jae
fdivrs
stc
out
inc
test
mov
xchg
sti
repnz
ror
or
jb
jb
std
nop
adc
pop
sahf
and
fstp
jg
bound
cmpsl
push
mov
cmpsb
je
jp
test
mov
outsb
lret
mov
add
inc
jge
mov
mov
pop
xchg
lahf
std
das
andb
fcmove
int3
hlt
ljmp
shl
adc
int3
or
xchg
or
xor
divl
insb
mov
mov
push
pop
movsb
sub
dec
das
fistpll
mov
and
mov
inc
sub
jle
arpl
loop
shl
jb
jno,pn
sub
dec
inc
mov
mov
adc
out
cmp
sub
and
mov
movsb
sub
pop
cmp
repz
popf
xchg
adc
js
inc
jne
cli
xchg
jo
aam
inc
cltd
or
pop
std
jae
fdivrl
lret
sub
sbb
stos
mov
outsl
xor
jle
fcmovnu
sbb
cmp
push
mov
movsb
imul
jmp
je
xchg
xchg
cmp
stos
insb
outsb
scas
aad
push
jg
js
in
sbb
add
loope
sub
insl
dec
adc
adc
rclb
pop
mov
aas
into
pop
cmc
mov
add
jne
jg
clc
cs
push
pop
xchg
add
call
paddq
push
cmp
popa
fidivrs
jp
and
addr16
cld
imul
pop
cwtl
cld
inc
push
jge
andb
inc
ljmp
mov
inc
rcrl
sarb
cmp
sbb
lds
in
or
loope
lret
mov
sub
jns
xor
nop
dec
stos
into
sbb
into
popl
xchg
mov
das
rclb
imul
adc
insb
fidivs
cmp
dec
lock
cmp
cmp
inc
fidivl
lahf
ret
shlb
imul
dec
jl
add
mov
xchg
dec
es
push
call
push
cld
shll
push
ret
mov
jnp
stc
ret
in
movsb
push
inc
mov
cli
or
sub
js
mov
jno
fsubs
xor
scas
jns
pop
or
push
sub
xchg
and
mov
mov
rclb
pop
jns
sarl
mov
mov
push
cld
shll
mov
aam
adc
push
iret
ljmp
aaa
dec
enter
xor
sar
rolb
xlat
sarl
xlat
adc
or
mov
sbb
clc
dec
jns,pt
cmc
mov
mov
insl
lret
jle
push
fwait
test
pop
subl
les
adc
mov
fnstsw
cmpsl
or
int3
popf
inc
fnsave
add
push
filds
pusha
rorl
jle
test
push
mov
mov
stc
imul
add
iret
rolb
mov
out
outsl
cmp
and
stos
lods
cmp
adc
addr16
cltd
test
or
dec
mov
je
lcall
add
call
popl
add
repz
pop
mov
outsb
mov
xor
adc
sarb
add
es
xchg
stc
negb
inc
fsubrl
or
inc
xchg
cs
sbbl
push
imul
pop
push
fst
popa
jl
xchg
mov
je
xchg
stc
fstps
mov
mov
xchg
shl
jp
les
in
lock
in
mov
mov
push
sbb
mov
push
sbb
lret
adc
and
and
add
mov
pushf
inc
fisttpl
std
mov
scas
fnop
call
aad
mov
add
movsb
popf
call
out
hlt
jb
nop
insb
fdiv
mov
sbb
shll
mov
les
xchg
mov
jo
and
pop
cltd
jb
shr
insb
mov
xor
dec
and
push
jl
dec
sub
lds
mov
sbb
clc
push
lea
cli
pop
cmp
pushf
push
xor
sbb
movzwl
pop
pop
jp
xchg
mov
in
scas
jl
dec
test
cli
mov
mov
out
mov
scas
xor
les
sub
ss
cmp
lea
pusha
jnp
loope
xchg
js
adc
pusha
xor
xchg
push
aaa
sub
lahf
mov
movsl
pop
mov
xor
push
jecxz
inc
cs
adc
data16
pop
frstor
dec
jecxz
js
test
add
jb
stos
fcoml
in
lods
xchg
scas
daa
jp
shl
test
push
rolb
xor
je
nop
push
and
push
mov
mov
xchg
adc
push
push
jp
xchg
add
call
xchg
jno
pop
neg
lret
cltd
cs
pop
mov
aas
or
outsb
inc
or
or
push
sahf
sub
je
aad
sbb
stc
imul
pop
fstpt
push
test
dec
or
or
mov
mov
jbe
xchg
aam
add
cmp
dec
fwait
xchg
int
dec
inc
push
inc
test
loop
test
aad
ljmp
or
mov
fwait
cwtl
fstl
lcall
ret
adc
mov
mov
cmp
pop
lret
push
sub
xchg
out
clc
bound
pop
icebp
dec
or
inc
jnp
jo
push
les
sti
fwait
add
mov
in
icebp
out
lcall
or
sub
mov
jmp
or
nop
sahf
add
cmpsl
clc
ret
xchg
into
repnz
mov
or
jns
inc
adc
pop
xchg
dec
push
pop
repnz
cmp
fisttpll
mov
lock
fdivr
jp
xchg
jae
imul
std
test
adc
clc
mov
sub
fs
push
pop
xor
sti
jl
lods
adc
mov
push
out
cli
xor
lret
test
and
hlt
movsl
push
push
mov
dec
add
fdivs
movsl
mov
sti
mov
xor
and
fdivr
cmp
arpl
fwait
sub
xchg
pop
xor
jecxz
into
mov
pop
jne
iret
repnz
js
ret
mov
cwtl
pop
jecxz
sbb
sti
mov
adc
mull
and
add
ret
adc
hlt
adc
cmc
add
test
lock
lcall
and
adc
je
sub
inc
dec
call
rcr
fcmovnu
pop
lret
or
push
insb
out
jmp
add
add
add
cmp
ret
in
imulb
inc
mov
mov
hlt
xor
ja
clc
fnstsw
xchg
sbb
shr
subl
add
xor
adc
lcall
std
ret
in
insl
dec
enter
mov
fistps
outsl
xchg
and
lcall
fsub
test
hlt
pusha
add
sbb
adc
xor
fwait
jecxz
cmp
adc
and
das
xchg
idivb
ss
stos
aad
pusha
dec
inc
in
xor
mov
pop
and
dec
inc
xchg
aad
rcrb
repz
mov
inc
and
mov
add
cmpl
pushf
cmpsb
rep
outsb
int3
stc
into
push
or
sub
mov
and
cmp
mov
jo
cmp
fnstcw
aad
stos
dec
dec
cmp
adc
sar
inc
loopew
mov
fsubrp
cltd
test
ret
jg
pusha
mov
jg
int
dec
in
mov
ficoms
in
cmp
insb
fneni(8087
inc
inc
andl
sti
mov
jns
jne
mov
push
adc
test
std
cmpsl
xchg
fimuls
xor
mov
and
adcb
inc
cwtl
sub
cmp
or
sub
jge
add
pop
icebp
into
bound
push
or
mov
push
sarb
mov
pop
mov
lret
leave
add
dec
andl
mov
sbb
push
push
call
inc
movsl
test
push
jae
jmp
test
sbb
mov
orb
cmc
add
xlat
xchg
out
cmp
push
cmp
lret
in
dec
xchg
jne
xchg
lahf
arpl
std
jle
out
sbb
mov
lcall
je
inc
sbb
sbb
xchg
or
movsb
xchg
adcl
imul
fdivl
in
inc
mov
inc
xchg
jge
imul
jge
push
mov
add
push
sbb
imul
xchg
jb
adc
and
repz
fs
jl
in
mov
and
mov
cmp
jle
test
rcrl
fimuls
cli
mov
aas
imul
fidivl
add
cmp
lods
lret
out
popf
outsl
xor
cli
ret
mov
jge
push
push
insl
pop
inc
cmpsb
jae
clc
push
in
dec
popa
xor
shlb
je
add
outsb
mov
push
hlt
mov
fistps
cmp
and
ljmp
aaa
cli
loop
aas
ljmp
cwtl
je
push
mov
mov
adc
mov
int3
pop
js
mov
push
xor
sbb
inc
pop
jmp
ret
mov
les
popa
fildl
out
int3
cmp
imul
xor
ds
in
xor
xor
adc
sub
pop
mov
mov
mov
dec
push
sbb
sub
jno
mov
ja
push
loop
or
jecxz
cmp
ret
xchg
pmulhuw
icebp
mov
push
xor
push
cld
push
movsl
mov
stos
or
es
add
mov
stos
xchg
dec
hlt
roll
ficoml
adc
les
sub
push
mov
cmp
es
push
mov
mov
push
outsl
inc
and
call
mov
or
jge
dec
push
les
inc
jle
push
jne
mov
mov
les
cmp
fucomp
jo
and
cmp
cmc
pushf
add
call
sbb
mov
and
xor
push
dec
xchg
call
shl
fisubl
pop
int
shlb
cmp
popa
mov
in
inc
fs
pop
sub
test
mov
jle
mov
sbb
xchg
ret
lret
dec
adc
sub
repz
call
mov
or
sahf
decl
insl
sar
cmp
icebp
andl
lahf
cmp
jmp
sbb
sbb
adc
push
xchg
ret
xchg
jl
xchg
fistpll
test
adc
adc
jns
pop
push
mov
dec
ret
repz
push
pop
icebp
loopne
sbbb
movsb
mov
jo
add
or
ret
test
xchg
hlt
cmp
cs
outsb
adc
daa
jbe
xor
cmpsl
fadds
inc
jmp
andl
jb
dec
stos
loope
push
xchg
call
lret
mov
shll
pop
inc
ret
sbb
add
mov
xchg
mov
inc
inc
inc
jnp
jle
xor
cmpsb
xchg
add
adc
lea
jmp
lret
stc
inc
rorb
pop
and
lret
inc
outsb
pop
frstor
add
dec
out
int3
rcrb
loope
jl
lret
std
test
mov
dec
push
bnd
lret
xchg
add
xchg
dec
cld
jmp
add
sbb
mov
stc
sbb
pop
sub
stc
shlb
jge
fstpl
cmpb
sub
scas
fsubs
mov
xchg
ss
sub
fsubp
aas
and
push
xchg
and
into
inc
sti
inc
dec
outsb
addb
pop
xchg
xor
into
out
fs
popf
lret
imul
je
inc
inc
hlt
xchg
nop
ffree
popf
aam
dec
ret
mov
call
sub
shrl
pushf
das
aad
fwait
sbbb
cli
lds
insl
xor
sub
jae
sub
arpl
cmc
pop
orl
loope
pop
dec
into
popf
lret
pop
or
mov
lret
outsb
aaa
loope
ret
add
dec
push
pop
ret
jg
add
ljmp
das
inc
inc
add
mov
pusha
pop
inc
inc
or
and
sbb
in
xchg
fwait
scas
hlt
scas
mov
push
jnp
sub
ret
in
or
dec
mov
rcl
jae
jmp
hlt
mov
pop
in
inc
push
pop
ds
xchg
xchg
lret
stos
into
push
or
push
xor
xor
pushf
dec
es
adc
inc
jp
cmp
sbb
int3
jns
icebp
icebp
popf
bound
scas
mov
sarb
cld
pop
fabs
mov
test
jnp
mov
push
adc
lahf
mov
jbe
out
dec
or
push
std
aad
pop
push
cmp
mov
fisubrs
aad
adc
xchg
loop
mov
rorl
test
sbb
pop
or
leave
lret
pop
jge
mov
jbe
fisubl
iret
mov
cld
jnp
in
adc
mov
into
adc
cs
push
shl
xchg
mov
aad
negl
aas
pop
int3
cbtw
push
adc
andl
adc
add
push
es
xchg
subl
push
cmp
xor
dec
loopne
mov
movl
mov
mov
ja
add
xor
fadd
imulb
mov
hlt
jecxz
sub
mov
loop
cltd
add
lret
add
mov
jbe
hlt
mov
and
cmpsb
cli
lock
pop
mov
add
out
inc
jo
iret
pop
inc
mov
push
adc
lock
mov
shll
sub
mov
dec
testb
cmp
add
icebp
jecxz
jae
jae
addb
pop
ret
lock
adc
xor
mov
fisttpll
push
cmp
xchg
mov
faddp
mov
cmp
sub
dec
push
push
sti
lret
xchg
push
arpl
or
jo
lahf
add
sbb
mov
decl
jb
movsl
jge
jge
stos
jne
test
leave
imul
jbe
and
xchg
aas
dec
inc
dec
clc
add
aad
rcrb
dec
leave
pop
push
mov
xor
dec
sub
es
jo
push
xchg
pop
enter
mov
shlb
jo
xchg
push
iret
sbb
pop
fnsave
and
test
mov
repnz
insb
les
insb
or
xchg
lock
mov
add
bound
lock
mov
cmp
arpl
push
dec
insb
mov
mov
and
jmp
imul
daa
jmp
or
test
pop
int
xchg
or
jo
fisttpl
push
stos
cmpsb
repnz
daa
cmp
add
mov
sub
mov
jl
ficoms
pop
or
add
add
pushf
pop
pop
fisubrs
or
out
into
mov
xorps
add
xor
push
out
or
lret
dec
scas
int3
mov
and
shrb
xchg
ss
dec
shlb
pushf
loope
lock
add
test
imul
outsb
sub
pop
cwtl
and
movsb
pop
xor
into
mov
sub
out
jle
pushf
rolb
add
add
add
ficoms
bnd
in
stc
push
outsl
dec
xor
fucomip
fimuls
test
mov
jae
jne
mov
pop
in
add
mov
fstpl
repz
les
jne
and
push
ss
mov
movsl
jb
xor
sbb
sub
xor
outsb
pop
outsb
lret
cmp
imul
rorb
in
popf
fsubs
xor
dec
aas
pop
push
dec
pusha
pushl
sub
lret
add
test
stos
mov
or
adc
pop
mov
out
adc
fcomps
loop
cmp
add
mov
mov
pop
dec
push
lcall
inc
push
xchg
shrl
out
mov
and
js
les
xchg
mov
movsl
loope
xchg
push
pop
cmpsl
mov
ficoms
push
adc
add
xor
rorl
add
push
mov
inc
xor
ds
sub
fwait
add
inc
push
dec
mov
test
jne
inc
out
xchg
push
xor
and
neg
data16
pushf
adc
leave
movsl
icebp
sub
pop
daa
adc
rorl
dec
aas
fadds
jns
ret
out
pusha
mov
pop
inc
xor
ficompl
mov
xor
addb
xor
push
negb
pop
outsl
addb
jno
sahf
xor
push
sbb
lds
cld
dec
push
dec
cmp
mov
dec
repz
dec
sar
popf
add
sub
leave
lds
call
sub
psllw
ret
mov
or
lahf
xchg
cwtl
inc
and
in
outsb
and
pop
mov
das
movsb
add
call
testl
push
jl
and
sbb
dec
or
xchg
imul
xchg
xor
fwait
mov
test
fsubr
mov
jnp
call
rol
dec
sarl
inc
mov
fsubs
enter
or
mov
jl
sub
and
jae
fisttps
imul
cmp
loope
xor
hlt
fincstp
lods
scas
jle
sarl
dec
or
lret
lods
push
add
aam
nop
sbb
xchg
jns
les
bound
push
je
adc
or
sbb
dec
xchg
jb
dec
fstpl
out
rcll
daa
sbb
inc
pop
lret
push
in
mov
xchg
jnp
sbb
enter
cli
mov
js
data16
fimuls
pop
rcrb
jl
je
or
lds
jg
or
push
sbb
xchg
sbb
mov
dec
xor
arpl
add
aas
test
push
sbb
jp
repnz
sub
cli
and
and
adc
pop
inc
lock
rolb
int
xor
int3
pusha
cmp
add
adc
out
mov
sub
sbb
jbe
push
dec
aad
faddl
into
arpl
repz
dec
test
repnz
and
jp
or
push
xchg
jae
jl
stos
add
int
lea
mov
sbb
xchg
sbb
mov
out
into
ficomps
inc
mov
dec
ret
inc
pop
push
push
sub
fsubrs
pop
push
test
cmpb
int3
mov
fdivs
pop
int3
iret
mov
fldenv
sbb
das
dec
dec
shll
cmp
imul
and
test
cmpsb
add
call
addl
shll
fucom
pop
bound
mov
mov
inc
push
xor
sti
push
mov
or
test
adc
mov
in
adc
mov
fdivl
xchg
pop
inc
xchg
push
jl
jb
addr16
mov
add
jle
pop
push
out
inc
popf
jg
push
lea
mov
imul
sub
dec
adc
push
test
popa
out
xchg
in
add
hlt
mov
cmp
mov
in
lcall
dec
jle
or
mov
std
negb
jge
sbb
mov
ds
ret
lahf
into
and
jb
adc
mov
pop
in
push
int
add
notb
pop
popa
das
jmp
sub
pop
and
pop
cmp
mov
inc
mov
jl
xchg
out
sub
jge
cmp
in
fcoms
test
mov
loope
jmp
mov
pop
mov
inc
sub
pop
test
pushl
mov
repnz
pop
xor
scas
push
mov
add
dec
jbe
add
push
pop
scas
in
mov
or
sbb
pop
xor
mov
cmp
pop
fwait
popa
jle
add
mov
fcompl
loope
dec
jmp
clc
stc
mov
cmc
sbb
lds
in
pop
mov
scas
in
mov
adc
jne
int3
add
sahf
xchg
lahf
cmp
out
sbb
jmp
in
aad
pop
mov
jb
sub
mov
add
or
orb
xorl
or
adc
fcmovne
adc
xchg
mov
push
sub
popl
jg
call
into
inc
mov
les
add
call
into
icebp
shrb
push
inc
adc
sub
repnz
or
addr16
xor
neg
in
cltd
sbb
cmpsl
addl
or
pop
xor
jb
cwtl
jne
cli
imul
mov
aam
clc
mov
popa
cltd
fcoml
sti
add
xor
mov
sbb
and
rcll
outsl
jo
scas
push
pusha
mov
adc
pop
into
mov
jbe
popa
adc
fistps
xor
cmp
fbstp
sub
xchg
sub
jge
in
das
pop
pusha
cmp
cmpsl
les
inc
adc
or
fistl
test
enter
movsb
repnz
dec
jae
sub
sub
and
jge
cmp
leave
bound
mov
xchg
neg
cmpl
add
fmull
mov
xchg
cmpsl
ds
repz
pop
xchg
cmp
fistps
lret
xlat
adc
mov
je
lret
cmp
mov
and
aas
inc
add
int
xchg
xchg
shlb
gs
xor
dec
insl
mov
xchg
sub
icebp
inc
sub
sub
xor
popf
pop
insl
popa
insl
aas
ja
sbbl
dec
jnp
pop
les
adc
scas
mov
loopne
mov
iret
repz
jo
cmp
pop
mov
enter
mov
pop
mov
test
popa
mov
inc
in
les
pushf
movsb
inc
add
ss
mov
test
add
popa
pop
lahf
dec
repz
or
sub
bound
xor
cmp
push
test
nop
jns
lods
in
out
cmp
mov
xchg
outsb
fcoml
ljmp
repz
mov
pop
aad
test
add
cld
mov
addl
push
mov
add
jo
push
arpl
out
or
outsl
ja
xor
xor
sahf
mov
fldt
dec
xchg
pop
fsubl
aad
das
sub
xlat
ret
movsl
lret
mov
fcmove
arpl
data16
cmp
sub
cltd
jmp
pop
outsl
jge
dec
js
popa
and
inc
inc
ret
mov
mov
imulb
fnstcw
stc
je
jns
push
mov
arpl
inc
lahf
and
or
jbe
add
dec
sbb
jnp
std
das
adc
bound
adc
add
push
stc
ljmp
and
in
aam
sbb
mov
sub
push
lock
jns
clc
jge
sub
inc
loop
aam
hlt
and
es
jl
jo
xchg
jns
add
jmp
iret
push
or
imul
repz
ljmp
lret
iret
add
adc
je
xor
mov
insl
lcall
mov
dec
sbb
test
mov
repz
push
jecxz
sbb
test
imul
aaa
in
jge
mov
scas
pop
ljmp
or
push
adc
clc
int3
jge
mov
js
stos
mov
mov
adc
outsl
jo
cmp
psraw
lcall
mov
sbb
testl
xor
cmp
mov
js
std
add
out
sahf
or
cmp
fcoms
sub
sti
aam
movsl
movsb
pop
mul
daa
jne
sbb
mov
and
and
xchg
dec
test
std
fistpll
loopne
lods
mov
lock
stos
add
call
arpl
sbb
in
push
fcoml
outsb
pop
aaa
mov
adc
inc
sbb
dec
out
pop
pop
xchg
dec
cmp
mov
mov
in
daa
mov
insl
test
out
sub
pop
test
cmp
sbb
sar
insb
mov
sbb
sahf
out
mov
fldt
rcrb
stos
in
jl
inc
mov
xchg
orb
xchg
pop
push
je
xchg
mov
mov
and
shrd
stc
mov
mov
inc
mov
test
jle
cmc
or
dec
add
mov
jns
mov
pop
lret
mov
in
into
lret
mov
inc
mov
xor
aad
lret
cmp
or
mov
pop
dec
sbb
inc
add
sti
lret
or
or
stos
jp
clc
pop
or
mov
mov
mov
cmp
sti
rcl
call
jne
xchg
out
xor
mov
ror
xlat
fwait
lock
lds
mov
xlat
pop
lret
aaa
push
jo
jp
jns
bswap
mov
jne
push
xchg
pop
mov
xchg
mov
and
mov
add
mov
out
jne
mov
jae
movsb
cmc
je
dec
clc
or
mov
je
flds
xor
jns
pop
cmpsb
and
add
pop
mul
mov
sbb
popf
mov
mov
jecxz
xlat
cmp
sbb
jnp
sbb
idivl
dec
ja
mull
out
cmpb
fs
sarl
mov
adc
push
js
dec
push
arpl
mov
aam
lcall
sti
ret
push
and
lds
pop
pop
dec
sub
scas
fucom
call
push
mov
idivl
stos
daa
popa
mov
mov
add
call
cmpsw
fbld
lock
ds
je
ss
and
es
inc
adc
lret
cmpsl
mov
sbb
pop
jne
out
mov
jb
mov
mov
push
lock
cwtl
nop
sti
add
pop
sbb
fxch
pop
jnp
jo
xor
mov
imul
ret
fwait
loopne
cmp
jnp
sbb
push
adc
gs
je
gs
aam
adc
pushf
mov
jecxz
inc
repz
sbb
in
cmc
test
push
mov
sti
jb
xor
outsl
scas
fadd
lods
mov
xchg
fmull
sarl
lret
lahf
popa
push
lea
dec
lods
jecxz
inc
outsl
adc
sar
pop
xchg
mov
in
adc
pushf
and
and
repnz
outsb
out
lahf
in
lods
jp
or
popf
fisubs
dec
ret
shrl
out
push
sub
cmp
lock
in
dec
jb
and
icebp
arpl
call
jb
sbbb
fsubrs
jle
cmp
insb
mov
jecxz
call
aam
adc
cli
sub
and
pop
pop
xor
int
xchg
pop
fidivrl
aas
dec
lret
push
pushf
cmp
test
mov
icebp
aad
or
jns
call
jle
es
test
mov
sub
imul
xchg
lahf
push
dec
mov
pop
mov
lea
sub
scas
dec
ffree
lods
sarl
lret
inc
das
adc
cmpsl
rcrl
pop
pop
mov
xor
push
sbb
pop
jns
and
test
aad
loope
push
cld
xlat
ljmp
or
pusha
jg
js
xchg
dec
orl
dec
jl
fwait
loope
sub
sarb
add
lcall
call
ja
imul
shlb
jne
outsl
clc
adc
dec
jmp
aad
push
mov
test
mov
pushf
xchg
cmp
lea
insl
mov
adc
xor
popf
xchg
mov
in
push
out
push
inc
and
jmp
mov
roll
adc
ja
scas
mov
imul
das
jle
fnsetpm(287
arpl
pop
sbb
enter
imul
or
mov
pop
jae
add
and
push
and
and
lret
or
shlb
int
mov
mov
cwtl
add
xchg
xor
push
icebp
xor
fnstenv
sub
jle
or
mov
cwtl
sbb
jbe
add
push
shr
pop
push
les
int
movsb
dec
scas
pop
clc
insl
pop
cmp
lcall
jnp
and
mov
mov
add
ret
lcall
lods
movsl
mov
inc
ret
fwait
mov
sub
adc
mov
iret
or
cmp
mov
dec
dec
adc
jo
xchg
ret
stos
das
arpl
lret
nop
xchg
push
xor
xor
push
addb
rorl
daa
push
sbbl
insl
int3
or
gs
cltd
lods
test
cmp
ficoml
push
mov
lret
lods
aad
sarl
je
test
mov
mov
stos
inc
xchg
inc
rcl
xor
add
adc
mov
jle
fisttpll
sbb
sub
mov
push
xchg
mov
or
inc
rol
mov
mov
stc
mov
ja
dec
cmp
dec
sbb
sbbl
add
cmpl
les
push
add
lods
push
sbb
das
loopne
mov
xorb
sbb
or
mov
mov
lahf
arpl
icebp
iret
xchg
or
jne
xor
and
adc
xor
push
mov
lods
stc
and
fdivl
mov
imul
mov
popa
lods
pop
dec
inc
out
mov
in
mov
jmp
sub
or
fadds
push
ss
scas
lea
jle
mov
mov
cmp
push
outsl
leave
xchg
lods
movsl
sbb
and
lea
scas
adc
sbb
push
cs
xchg
lock
test
push
or
aaa
add
xlat
jmp
adc
int3
sbb
inc
rcll
xor
xchg
rclb
sbb
or
in
dec
orl
mov
jmp
imul
imul
shlb
lds
ds
cmp
xchg
loope
push
lret
enter
es
out
jmp
pop
inc
cwtl
leave
add
addr16
push
adc
dec
cltd
xor
aad
loope
loope
into
mov
jle
leave
xchg
out
cmpsl
pop
mov
push
mov
aaa
xchg
mov
push
cmp
pop
dec
xchg
push
mov
mov
movsb
hlt
int
mov
pop
push
inc
jbe
pop
add
mov
jmp
aaa
pop
cmc
mov
dec
pop
or
movsl
rol
add
cmc
mov
rorl
aam
dec
scas
shll
sahf
jmp
cwtl
xor
jns
out
out
add
mov
inc
pop
lahf
iret
jg
test
add
lcall
lock
mov
daa
lret
imul
outsl
mov
add
add
add
movsb
jg
lds
push
dec
das
jge
pop
inc
imul
pop
shrl
jge
adc
sub
jmp
sbb
and
test
loop
lret
sub
lcall
loop
cmpsb
push
les
xchg
clc
adc
push
xor
std
dec
sbb
iret
rorb
inc
cmpb
enter
icebp
pusha
mov
pop
xor
pop
adc
jle
jno
xchg
inc
mov
repz
cltd
mov
lcall
xorl
test
inc
xor
and
scas
sub
shl
lods
mov
out
pop
xor
ljmp
imul
adc
jb
fcmovnbe
imul
enter
push
bound
hlt
add
fs
jge
rclb
add
and
push
or
cwtl
sub
imul
cltd
out
sbb
jg
je
adc
and
push
call
mov
divb
push
iret
loopne
xchg
mov
inc
mov
repnz
out
or
loopne
nop
std
sbb
inc
jno
lahf
cmp
inc
jbe
jne
adc
iret
mov
and
add
adc
bound
pop
ja
std
push
mov
sarb
mov
sbb
lods
nop
or
fmuls
mov
punpcklwd
sub
insl
xor
jbe
sti
icebp
xlat
jl
jae
push
test
lret
adc
clc
or
mov
test
xchg
sub
cmpb
pusha
test
lea
or
es
lahf
add
cli
sti
push
sub
push
out
sbb
movsb
jno
cli
add
and
inc
insl
sbb
daa
ss
xor
and
roll
flds
add
add
add
sub
cmc
hlt
int
or
push
mov
ds
push
aad
rclb
inc
jp
xor
add
pop
push
mov
or
push
pop
fwait
daa
das
adc
xchg
mov
xchg
adc
test
iret
pop
pop
dec
mov
add
and
sbb
mov
popa
add
imul
lea
pop
rcl
mov
outsl
jne
jb
push
jecxz
cwtl
popa
shrl
je
rorl
push
or
inc
rorb
fiaddl
jg
cmpsb
or
subb
cmp
lahf
ljmp
bound
aas
loopne
push
and
pop
fwait
mov
sbb
dec
mov
xchg
jge
sahf
mov
mov
and
in
mov
adc
xchg
cmp
out
sbb
jnp
push
xchg
dec
in
pop
add
pop
push
and
mov
jl
adc
gs
test
pop
sbb
cmp
mov
sbb
cmp
mov
js
pop
sahf
fsts
in
jns
cmc
dec
inc
xchg
mov
mov
add
lcall
incb
test
jecxz,pn
ljmp
aas
daa
xchg
pushf
xchg
sti
sub
cmp
jbe
into
syscall
pop
adc
js
or
mov
mov
mov
cmp
mov
pop
mov
sarb
bound
pop
iret
push
mov
push
or
ss
ret
test
clc
or
loopne
mov
popa
mov
xor
sar
pop
and
aaa
cmpsl
mov
sub
dec
cli
test
ljmp
mov
lods
and
xchg
mov
adc
test
add
imul
insl
add
aaa
out
mul
aaa
cmc
xchg
lcall
ja
add
call
ret
push
fnstcw
cmc
jmp
stc
jge
imul
and
push
int
pop
sbb
ds
adc
and
add
hlt
mov
roll
test
push
aas
sub
das
in
xor
test
pop
dec
pop
arpl
loop
mov
in
mov
xor
pop
mov
mov
cwtl
cltd
xor
clc
je
add
aam
ljmp
pop
cltd
ja
lahf
or
mov
stos
ret
sub
bound
aaa
imul
lret
dec
inc
push
ret
push
sahf
and
xor
add
test
add
rcl
xchg
std
enter
pop
cltd
mov
add
cld
or
xchg
pop
les
jno
mov
push
xchg
es
add
bound
int3
into
adc
push
mov
out
cmp
daa
mov
cmpsl
es
cmp
cmp
popf
dec
mov
ljmp
jne
push
dec
jb
dec
bound
out
dec
push
push
sahf
jo
push
xlat
insb
cld
push
sub
pop
adc
enter
inc
mov
and
pop
jnp
loope
into
gs
je
pop
dec
mov
iret
and
fwait
mov
sbb
push
dec
and
lea
inc
add
sahf
in
les
jo
insb
aas
xor
xchg
rcl
ss
rol
mov
pop
dec
fisubs
je
in
daa
mov
sbb
xor
xorb
lahf
in
sbb
or
fs
dec
or
adc
orl
out
cmpsl
jb
loopne
mov
mov
or
nop
adc
sbb
shlb
popa
ljmp
ss
cmp
inc
loop
fldl
add
add
add
rcrl
cmc
jbe
lcall
inc
cmp
loopne
or
adc
adc
add
sub
loopne
or
fwait
add
outsb
xchg
ja
mov
inc
pop
fnstsw
dec
movsb
jae
adc
and
sub
mov
repnz
push
xchg
lahf
aas
pop
mov
cwtl
mov
jge
mov
mov
mov
fstps
mov
pop
xor
pop
gs
iret
test
jmp
inc
loop
call
inc
jne
loopne
adc
jo
ret
inc
in
sub
aas
xor
sarb
push
sbb
aas
js
add
mov
ss
loop
xchg
aam
inc
adcl
stos
adc
adc
daa
outsl
iret
cmpsb
sub
add
pop
and
xor
scas
fwait
and
xchg
pop
cmp
stos
inc
repz
out
cmpl
mov
pop
or
popf
pop
test
lret
mov
add
inc
sub
sub
inc
mov
cmp
sbb
or
add
xchg
movsb
mov
pusha
or
jo
mov
imul
iret
push
jo
add
pop
sbb
scas
inc
jge
push
xchg
mov
cmp
leave
and
pop
mov
test
xor
xor
fldenv
jo
xchg
add
inc
hlt
sub
mov
nop
sbb
mov
mov
dec
sarb
mov
imulb
xchg
adc
ds
loop
jmp
call
dec
cmp
fcomp
push
popa
cmp
dec
push
mov
outsb
jbe
lret
outsb
negb
xchg
xchg
inc
filds
add
add
add
adc
call
xor
ficoml
and
andb
or
jg
pop
push
cmp
sub
and
aas
mov
push
fsubs
inc
sarb
pop
sub
divb
ret
stos
jecxz
push
sbb
es
dec
lcall
inc
inc
fidivrl
lods
js
inc
je
inc
dec
mov
pusha
sbb
imul
jo
sub
cli
mov
inc
out
cmp
dec
or
das
insl
movsl
les
iret
push
mov
and
insl
jbe
pop
fcmovnu
lahf
xor
sub
xchg
lcall
sub
das
sbb
jne
adc
imul
shll
jle
mov
push
pop
inc
push
rolb
xor
fnstenv
iret
cld
out
popa
dec
jmp
outsb
jno
test
orl
inc
scas
xchg
cmp
lahf
ds
ja
fdivl
fdivrl
and
cmp
jo
cs
test
jge
shr
push
ret
push
inc
dec
jecxz
sbb
loop
pop
sub
pop
push
sub
shll
push
lods
mov
jb
ds
sub
ret
loopne
iret
ja
jne
in
xor
repnz
push
ljmp
scas
mov
jno
shlb
pop
imulb
subl
xor
or
mov
fwait
movsb
mov
dec
adc
insb
and
adc
sbb
mov
rclb
cmp
sub
adc
sahf
out
leave
or
repnz
dec
dec
dec
popf
es
jp
jle
lds
pop
pusha
in
xchg
int
inc
clc
rcl
cmp
paddsb
nop
roll
loope
add
add
add
dec
outsb
mov
adc
pop
lods
and
shl
in
dec
mov
sbb
std
hlt
stos
dec
dec
sbb
sbb
mov
cmp
add
outsb
and
mov
outsb
sub
lock
and
add
or
dec
rclb
dec
sbb
out
inc
jle
cltd
mov
in
and
xchg
and
rcr
push
cmpsl
dec
into
and
xchg
xlat
xchg
and
mov
sbb
out
lret
fxch
hlt
jo
lret
and
cs
gs
ljmp
mov
mov
icebp
adc
jl
push
sbb
pop
pop
lcall
xor
jmp
out
xchg
pop
stos
mov
pop
sub
push
inc
xchg
loopne
mov
int
and
push
push
push
inc
lcall
sahf
inc
insl
push
xchg
push
lods
cmc
fwait
sub
jne
je
and
lea
pop
test
fwait
pop
sahf
loope
adc
test
call
lds
sub
ror
addr16
aaa
add
jg
fs
pop
xor
daa
lea
and
xchg
icebp
enter
mov
cmp
fidivrl
inc
stos
inc
fs
shlb
lcall
cmpsl
and
mov
xor
jecxz
sahf
daa
pushf
adc
mov
mov
mov
stos
out
jno
sub
pusha
mov
pusha
jne
lcall
fbstp
test
mov
inc
mulps
les
cmpsb
je
or
mov
and
in
mov
call
repnz
dec
mov
popf
insb
loop
cmp
mov
xor
bound
inc
jns
push
mov
and
push
mov
and
loop
mov
xchg
cmpl
push
loopne
lcall
add
call
in
aas
sarb
mov
sarb
leave
shll
fcompp
adc
jge
xchg
mov
imul
push
test
xchg
jno
inc
and
cmp
cmp
stc
or
test
sub
jp,pn
test
and
sahf
lea
sub
and
dec
test
push
and
cmp
aam
ret
call
or
inc
adc
fsub
fwait
sub
aad
mov
daa
mov
pop
push
push
push
sbb
jne
ljmp
pushf
xchg
stos
xlat
sbb
mov
cmp
push
xchg
bound
clc
icebp
pop
jbe
cltd
add
push
xchg
fnstsw
mov
mov
adc
movb
pop
cld
cmp
cli
popf
jne
xor
jno
push
push
and
mov
xchg
out
test
jae
add
dec
loop
out
popf
cli
sbb
cmp
xor
sbb
sarl
repz
fucomp
fcompl
sahf
or
pop
pop
repz
push
pop
jmp
outsb
subb
pmaxsw
cs
mov
sub
xchg
sti
stc
int
add
jo
mov
mov
popa
sbb
mov
push
push
jae
call
test
scas
add
push
and
repz
data16
scas
push
and
imul
push
cmc
mov
mov
mov
adc
or
or
mov
popa
dec
cmc
jge
ret
and
fidivrs
testb
and
into
mov
jno
fisubs
cmp
push
outsb
arpl
imul
jge
fwait
xor
test
and
pop
dec
rcr
inc
ja
in
add
add
add
pop
jo
xor
rol
rcl
mov
xor
inc
imul
push
aaa
cmp
xchg
repz
adc
aad
sbb
dec
sbb
inc
stc
inc
xchg
fdivs
push
fsubrs
push
fnstsw
les
shll
test
fadds
mov
add
out
or
ja
adcb
jp
rcrb
addr16
push
jp
jle
dec
push
faddp
sbb
cmp
scas
mov
lret
xor
mov
adc
daa
out
lods
mov
xchg
jno
pop
pop
mov
mov
in
fadds
xchg
mov
pusha
pop
in
insb
daa
cmc
movsl
ss
xor
pop
mov
stos
test
dec
aaa
jmp
mov
cld
fists
push
sub
insb
cltd
into
dec
pop
daa
movb
cmp
xchg
das
sub
mov
aas
mov
sub
pop
into
inc
push
icebp
jg
mov
lds
lret
sub
leave
fdivrs
xor
xor
xor
aam
mov
ja
jle
mov
int3
dec
out
sti
lods
cmp
adc
sbb
fdiv
bound
bound
or
mov
lea
daa
pop
jp
popa
inc
push
lret
mov
hlt
insl
aam
cmpsl
hlt
jge
adc
jae
inc
scas
adc
inc
push
jecxz
push
pop
and
cli
es
loope
and
xchg
sub
sbb
sub
jno
inc
icebp
jecxz
aas
sbb
mov
jb
dec
dec
testl
cmp
jecxz
push
mov
pop
xchg
and
movsb
test
sbb
in
inc
je
xchg
pop
cmp
rorb
cmp
test
cmp
and
loope
js
xor
mov
aam
fnstsw
out
fcmovu
in
addr16
out
add
call
mov
rcrb
add
lret
not
test
out
int
push
push
adcl
lahf
mov
push
clc
xchg
inc
xchg
movsb
inc
xor
test
xchg
movsb
in
je
inc
fsub
adc
xor
ljmp
mov
dec
cmp
mov
jmp
in
fwait
push
nop
add
movsl
sub
js
iret
push
mov
mov
clc
out
xchg
lods
ss
pop
cmp
sbb
test
sahf
jecxz
out
aas
jle
nop
ss
out
jp
push
adc
jb
inc
cli
sbb
mov
jb
jae
icebp
ret
dec
mov
popf
aaa
cmpl
gs
adc
jo
pushf
out
arpl
add
incb
add
fs
push
cmp
jle
dec
xor
notl
and
inc
lret
push
pop
fidivs
push
push
loopne
inc
rclb
arpl
sbb
in
dec
mov
mov
xchg
cmc
pusha
neg
clc
and
adc
scas
cmp
int
inc
ss
leave
xchg
loop
je
cltd
test
jbe
int
fstps
xor
in
arpl
int3
jne
data16
add
arpl
add
add
test
push
jns
mov
insb
xlat
cmp
and
push
xchg
outsb
inc
jmp
fsts
cmpsb
cmp
push
cmp
aad
in
leave
stos
fcoml
mov
je
mov
addr16
aaa
mov
cli
jl
call
adc
insb
inc
sbb
ret
hlt
paddusw
or
add
ret
add
or
dec
cmp
cmp
mov
cmp
or
lds
jecxz
mov
das
out
xor
call
add
stos
outsb
mov
mov
push
fcompl
xor
aas
les
cmpsb
cld
jmp
aaa
cli
pop
scas
int3
fwait
aam
das
mov
fwait
mov
gs
repnz
insb
outsl
cmpps
std
mov
test
lea
mov
pop
sbb
loope
mov
ret
jbe
fadd
sbb
sahf
jbe
aad
adcl
aaa
les
and
xchg
out
jmp
or
xchg
test
jmp
mov
mov
adc
fnstsw
jmp
xor
divb
pop
scas
test
arpl
lahf
cmp
or
out
pop
mov
pop
sahf
jnp
ds
cli
push
cmpsb
xchg
mov
push
fdivs
data16
pop
sbb
jp
test
jg
and
jl
mov
adc
enter
scas
sbb
call
sbb
cmpsl
int3
mov
outsl
xchg
insl
shrl
or
pop
or
lods
add
sub
orb
pop
nop
jge
xchg
ds
shll
mov
inc
or
dec
push
jb
push
sub
lods
ret
mov
mov
sbb
xchg
pusha
frstor
or
cmpsl
cld
sbb
sub
mov
outsl
sub
xorl
sar
sub
lods
in
sub
aas
daa
xlat
mov
sti
adc
inc
test
aas
lock
xchg
mov
mov
cmpsl
push
push
lcall
add
adc
add
sub
loope
nop
scas
les
jecxz
test
divb
lahf
sbb
or
es
jae
mov
add
cmp
cmpsb
pop
cmc
pop
scas
iret
add
xor
adc
mov
mov
icebp
and
xchg
jl
ljmp
lock
lret
mov
fucompp
and
out
and
pop
push
cld
inc
or
mov
fldl
pushf
inc
adc
inc
mov
pop
imul
pop
cmp
ret
adc
xchg
jge
sbb
fwait
push
push
cmp
add
sarb
popa
dec
push
inc
fs
mov
add
cli
cmp
in
adc
mov
lods
jno
sub
pop
jno
xor
push
push
cmp
daa
jl
xchg
mov
lods
inc
stos
out
pushf
mov
iret
pop
icebp
mov
shll
or
push
mov
roll
sbb
push
pop
push
pop
sub
sbb
xchg
add
adc
cmp
add
xor
push
add
pop
jmp
cmp
fcmovnb
inc
es
arpl
and
cmp
add
lea
mov
adc
lods
clc
sbb
mov
adc
ljmp
push
or
mov
arpl
imul
jo
mov
stos
cmpsb
push
movsl
lds
sub
outsb
lahf
shl
mov
daa
aaa
dec
xchg
les
mov
test
adc
push
cmp
imul
adc
test
call
popf
shrd
pop
popf
fiadds
pop
lods
push
cmp
lock
inc
out
loopne
mov
dec
divl
sub
pop
mov
pop
into
inc
out
jl,pn
and
mov
sbb
add
lahf
scas
mov
mov
add
cmp
push
mov
sbb
xchg
and
mov
sbb
adc
mov
movb
in
xchg
mov
cmp
fdivrl
addr16
lret
mov
stos
je
xor
addr16
push
arpl
cmc
in
adc
repz
das
cli
fists
dec
es
dec
pop
jecxz
lahf
in
add
call
xchg
inc
cmp
xor
imulb
mov
jge
popf
imul
std
jg
push
in
inc
push
insb
mov
mov
std
add
in
xor
sub
or
out
mov
inc
add
jecxz
out
or
xor
aam
popf
ljmp
iret
int
push
dec
jp
and
jle
jne
adc
ja
jmp
fs
add
cmc
mov
aas
mov
sub
cmp
push
or
adc
jmp
pushf
in
mov
sbb
xor
or
mov
push
rcrb
cmpsl
cwtl
push
lea
dec
adc
int3
sub
push
mov
xor
xor
shll
outsb
mov
push
cmpsb
popf
mov
sarl
fs
mov
mov
xor
cmp
mov
and
fidivs
and
out
lret
rol
jne
fistps
xchg
aas
dec
pop
jl
imull
imul
aad
pop
jo
les
inc
out
fs
mov
cli
adcl
push
shl
cmp
ret
fnstsw
add
gs
cmp
in
outsl
test
int3
xor
adc
imul
mov
flds
mov
cmp
and
fisubl
xor
mov
lea
adc
int
xor
dec
xchg
xchg
xchg
out
inc
inc
jae
arpl
in
aam
or
mov
push
pop
aas
push
and
out
rcr
cli
pop
sub
dec
pop
push
xor
xor
xchg
test
mov
int3
jmp
jne
pmullw
mov
insb
punpckhdq
mov
push
adc
cwtl
out
leave
clc
jge
xchg
add
call
je
js
rcll
add
xchg
andl
mov
pop
jge
inc
out
jecxz
jo
push
sub
jns
sub
jmp
les
clc
adc
subb
lret
mov
ss
dec
pop
loope
loopne
pushf
insl
vunpckhps
in
jno
mov
and
outsw
mov
rolb
or
mov
insb
and
test
xor
jmp
leave
mov
and
mov
outsb
mov
cs
cli
sar
cs
jne
adc
out
lods
xor
mov
pushf
push
add
mov
pushf
ret
js
ss
dec
adc
cli
in
mov
inc
mov
lcall
cmpsb
sub
imul
sbb
out
push
std
out
int
ds
mov
addb
adc
roll
je
lahf
sahf
repnz
xor
and
clc
mov
fcoms
add
or
push
data16
imul
and
sub
sub
xchg
jno
daa
aas
mov
inc
sbb
jg
rorb
scas
call
lret
xchg
test
push
sub
test
adc
mov
add
arpl
bound
or
mov
repz
cli
push
jbe
outsl
dec
xlat
paddusb
lret
jg
adcb
movsb
not
xor
push
cmc
lea
mov
movsl
push
mov
repnz
xorl
fidivl
xchg
sub
xor
loope
mov
divb
push
sti
and
aaa
push
pop
mov
cmc
icebp
or
inc
loope
movsb
fnstenv
andl
popf
jecxz
add
inc
add
inc
add
xor
or
inc
add
xor
adc
inc
add
xor
sbb
inc
add
dec
pop
pop
dec
inc
xor
push
push
inc
cmp
pop
ss
pop
add
inc
pop
inc
pop
push
dec
inc
pop
cmp
dec
add
cmp
xor
aaa
inc
inc
pop
xor
pop
push
push
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
add
pop
add
dec
add
xor
pop
add
add
push
add
dec
add
add
inc
add
add
xor
pop
add
xor
dec
add
push
add
add
cmp
push
add
push
add
add
add
add
add
dec
add
push
add
add
add
add
add
dec
add
add
pop
add
add
push
add
add
pop
add
xor
xor
push
add
add
add
add
inc
add
xor
cmp
add
add
inc
add
inc
add
lock
add
inc
add
lock
add
inc
add
lock
add
inc
add
lock
add
inc
add
lock
add
lcall
add
inc
add
add
add
add
add
add
add
enter
int3
inc
add
rolb
add
cmp
add
inc
add
add
push
outsl
jb
push
imul
aas
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
imul
add
