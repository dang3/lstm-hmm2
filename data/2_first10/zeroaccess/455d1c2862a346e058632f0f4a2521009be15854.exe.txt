push
mov
sub
mov
movzbl
mov
mov
movl
movl
cmp
movl
jne
or
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
sub
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
push
push
push
pushl
pushl
call
xor
or
dec
mov
jmp
add
push
xor
or
adc
mov
mov
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movzwl
not
and
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
push
mov
movzwl
mov
mov
mov
movl
movl
mov
jmp
sbbb
cltd
js
mov
leave
movsl
cmpsl
and
jo
jo
jo
rcl
aad
ror
rol
pop
push
add
bound
rdpmc
cmpps
adc
mov
add
mov
sbb
lods
sarb
or
sahf
jp
inc
lods
push
sub
mov
stos
js
roll
jmp
mov
dec
fcomps
pop
test
sub
mov
pusha
nop
mov
and
jmp
out
repnz
xchg
xor
jbe
xlat
and
add
adc
xor
or
fldl
xor
pop
push
or
pop
fstps
jno
mov
ja
sbb
xor
int
clc
xchg
xchg
mov
adc
dec
jg
popf
insl
cmp
sti
cmpsb
xorl
adc
jo
mov
ja
dec
mov
xor
adc
xchg
insb
out
xchg
mov
and
mov
mov
add
scas
scas
mov
pop
jbe
data16
aam
enter
lcall
jo
ficoml
imul
lods
mov
in
fcomps
and
stos
xor
cli
rcl
mov
int
int
push
cltd
jb
das
and
dec
pop
cmpsb
into
shll
loop
shl
in
jno
mov
outsl
test
sahf
ljmp
std
out
jl
xor
jle
cmp
add
loope
jg
rcll
es
not
and
shrl
mov
mov
sub
push
in
test
xor
push
popl
and
pop
xor
lock
pop
bnd
lods
jb
aam
sti
cwtl
jns
lahf
add
mov
nop
stc
rolb
pop
shr
cwtl
xchg
pop
enter
jnp
bnd
fidivl
mov
jno
int3
shufps
pop
or
mov
pop
iret
addr16
outsl
shl
lahf
fidivrl
sub
or
mov
andb
cld
jmp
clc
icebp
mov
icebp
ficompl
or
jo
jle
jo
inc
lods
cmpsb
les
add
loope
cmc
sbb
mov
rol
inc
cmp
in
psllq
aas
je
sbb
and
push
les
std
xor
dec
pop
mov
cmp
imul
les
adc
stos
shlb
ret
ret
or
cmp
loop
and
cmpsl
mov
xchg
mov
cli
mov
xchg
cmovne
mov
sub
mov
fsubr
repnz
xchg
sar
sub
and
nop
add
in
insl
dec
add
and
shl
xor
inc
mov
scas
in
sbb
xchg
mov
mov
push
out
ss
rcl
xchg
adc
jl
cmp
dec
fs
out
mov
sub
jnp
sbb
cmp
mov
pushf
lahf
fs
dec
stos
ret
or
sub
int3
je
mov
push
rclb
xor
mov
sbb
cli
imul
mov
xor
fsubrs
das
mov
fildl
fistpll
jl
adc
adc
mov
xor
loope
subl
dec
mov
movsb
xchg
inc
mov
mov
sbb
cmp
lahf
mov
insb
dec
scas
int
mov
adc
push
popa
in
outsb
adc
add
adc
cmp
jo
lcall
jb
sbb
fwait
leave
push
jecxz
jmp
lret
stc
les
cmpb
rcr
jle
fsubrs
lods
jle
cmp
outsb
and
pop
add
add
xchg
pop
xchg
jnp
iret
movsb
cmc
pop
addb
lea
test
fmuls
pop
pop
mov
inc
stos
ret
clc
cld
pop
xor
int3
mov
mov
lea
jmp
dec
iret
lods
dec
lods
imul
mov
add
jo
jo
sub
mov
inc
pop
push
call
ror
jle
jne
fistps
ja
inc
cmp
mov
mov
push
cmp
stos
fldcw
jbe
mov
pop
mov
adc
mov
mov
add
lea
lods
and
xchg
std
rorl
push
mov
aas
pop
adc
scas
adc
push
popa
fadd
inc
xchg
mov
jb
push
js
pop
aaa
pop
fwait
xchg
xchg
loopne
inc
int
pop
fadds
lds
mov
roll
inc
xchg
xchg
xchg
fs
mov
es
in
inc
cltd
cmp
push
mov
std
xchg
push
outsl
jns
call
xor
fs
jae
das
jno
xor
gs
mov
std
mov
fimull
fwait
xchg
test
sahf
xor
pop
sahf
gs
imul
hlt
gs
ret
into
dec
sahf
iret
xchg
aad
xchg
sahf
cmp
enter
mov
repnz
scas
in
cmp
push
pop
fldcw
add
call
in
push
cmp
xchg
sarb
push
jbe
aas
adc
push
mov
and
sti
test
enter
fld
add
inc
pusha
loop
add
and
call
add
or
cltd
sarl
insl
jg
mov
and
mov
mov
add
pop
shlb
out
fcmovnb
das
sub
mov
jl
lods
lahf
mov
scas
ret
mov
push
and
mov
and
push
jnp,pt
jp
jl
xchg
jge
jp
and
mov
rclb
out
hlt
pop
pop
in
lods
call
push
and
mov
mov
movl
mov
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
lea
mov
jmp
int3
sub
push
mov
mov
jo
jo
jo
pop
fists
xchg
daa
inc
cmp
adc
scas
outsb
mov
out
iret
xchg
dec
repz
arpl
jl
fucomp
lods
cmp
jno
out
mov
out
cs
movb
int
lret
xchg
fdiv
push
hlt
pop
cmp
gs
bound
ja
imul
add
jb
mov
movsb
andl
push
dec
cmc
add
movsb
mov
icebp
and
xor
aad
push
ljmp
fdivrs
push
cmpsl
add
xchg
popf
xchg
xchg
orb
add
popf
or
push
repz
lcall
pop
jae
push
mov
mov
dec
add
and
mov
in
xchg
inc
mov
imul
dec
sti
lods
loopne
fnstenv
sbb
xchg
mov
xor
jle
lods
test
bound
insb
mov
stos
jmp
pop
mov
xchg
orb
out
lods
std
jnp
call
mov
inc
js
jne
fsubl
rorl
insl
sbb
sar
negl
fsubrl
mov
ss
lods
insl
add
cs
xor
fst
add
in
add
in
xchg
mov
movsb
sbb
in
repnz
xor
cs
push
sar
daa
fimull
push
imul
repz
dec
push
adc
das
hlt
mov
sbb
pop
or
dec
and
mov
jmp
inc
mov
xor
xor
xchg
push
cli
daa
cmc
dec
mov
std
andb
pop
jl
fdivrl
lret
cvtps2pi
and
jo
les
pop
out
cmp
mov
pop
adc
pushl
call
sub
lahf
enter
sub
fdivrl
xor
cmp
mov
sahf
inc
mov
clc
mov
mov
imul
mov
mov
cmp
je
mov
orl
jmp
mov
jmp
popa
ja
add
xorl
adc
mov
std
lret
jo
jo
jo
jo
sbb
jge
xorb
sbb
and
dec
xchg
pop
fdivs
shll
push
or
push
mov
sub
sbbl
cli
mov
sahf
push
cmpl
push
cltd
sbb
out
mov
cmp
stc
imulb
xor
fldl
add
jbe
aam
mov
in
popf
xchg
add
or
mov
push
xchg
dec
lods
mov
pop
popa
aaa
xor
dec
cwtl
mov
xchg
sub
sarb
popa
push
xchg
xor
sub
sub
mov
out
mov
cld
cli
rcrl
repz
jmp
pop
je
mov
fdivrl
stc
jnp
movsb
mov
mov
out
pop
push
or
lock
sti
dec
adc
push
jo
js
push
test
cltd
cli
mov
mov
ds
xor
inc
mov
lcall
and
in
dec
scas
das
xor
lea
dec
xchg
pop
leave
xchg
shrb
test
xchg
dec
ss
iret
dec
int
lods
movsb
dec
mov
pop
push
adcl
mov
mov
cli
mov
add
enter
and
aad
inc
sub
cmc
push
clc
and
jno
sbb
sub
imull
movsb
pusha
push
mov
push
std
pop
pop
mov
mov
scas
arpl
and
cmp
ret
pop
cmp
push
or
movsb
imul
repz
mov
sbb
call
sbb
out
adc
mov
or
sub
pop
mov
fcompl
mul
pop
outsl
or
mov
add
cmc
jg
lock
idivb
clc
ljmp
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
jmp
cld
test
jb
stos
inc
inc
cmp
mov
jo
jle
jo
add
outsb
push
push
xor
aaa
gs
imull
mov
mov
push
jp
pop
push
subl
fchs
std
lods
adc
lret
sbb
pop
aaa
loop
push
sub
enter
sbb
enter
aad
pop
cmpb
lret
inc
cltd
daa
scas
mov
push
out
call
repnz
mov
pop
lcall
cmp
inc
loopne
push
lahf
sbb
das
rolb
push
fwait
xchg
fnstsw
push
test
jmp
mov
mov
cmp
in
xchg
mov
cltd
aad
xchg
push
ds
loope
fdivp
mov
inc
int
repnz
pusha
inc
xchg
mov
mov
push
dec
je
and
hlt
out
cmp
addr16
shlb
mov
mov
pop
mov
inc
adc
mov
mov
pop
mov
pop
add
popl
or
jmp
mov
mov
mov
lcall
sub
and
push
jmp
or
or
xor
push
loopne
cmpl
daa
stc
mov
es
sbbl
test
es
lock
rcr
jmp
push
dec
push
scas
idivl
add
xor
push
enter
sub
mov
push
mov
push
dec
xor
xchg
notb
fcoms
dec
in
imul
cmpsl
and
dec
xchg
jmp
mov
pop
in
loop
dec
mov
ret
pmaxsw
lock
mov
imul
leave
lea
cltd
scas
loop
push
sti
sbb
pusha
test
xchg
dec
mov
fadd
lock
adc
dec
dec
ret
xor
stos
lret
jmp
push
fmuls
cmp
jmp
ret
gs
cmpsl
insb
cmp
pop
jo
jo
jo
jo
inc
pop
pusha
lea
test
fwait
and
rep
jne
fcmovnbe
xchg
imul
cmpsb
pop
push
or
cs
es
stc
push
mov
cmp
adc
sbb
fldcw
cmpsl
stos
lods
lcall
xor
out
lret
cltd
pop
jnp
and
aas
xor
lahf
push
xchg
test
in
mov
lahf
xchg
dec
jo
dec
sahf
pop
imul
int3
jo
mov
mov
es
je
mov
xor
mov
inc
std
rolb
gs
cmc
xchg
xor
push
out
fwait
roll
sahf
cs
sbb
clc
xchg
fcompl
cmp
adc
jo
inc
push
add
xchg
pop
frstor
fists
mov
mov
mov
mov
pop
sub
jle
mov
out
add
adc
dec
adc
dec
adc
inc
imull
insl
psrad
pop
push
pcmpgtb
out
rcrb
push
ret
xchg
add
pop
rolb
inc
cmpsb
ss
js
jge
and
sub
dec
lods
lret
dec
hlt
insl
in
xchg
pop
or
inc
ficoms
jne
push
out
int
leave
popa
stc
iret
js
rcrb
push
clc
std
push
xchg
or
fistps
mov
xlat
inc
enter
mov
aad
dec
out
cmc
stc
mov
lret
int3
jb
gs
jnp
pop
mov
push
mov
lods
lods
inc
pushl
lea
sub
cvtpi2ps
inc
push
jo
jo
pop
fcomip
clc
aad
inc
mov
fmull
push
repnz
push
dec
dec
add
jo
arpl
cmpb
pusha
mov
in
pop
cmp
jge
dec
flds
ret
xor
insl
loope
imul
cmpb
jb
dec
fisttps
test
inc
in
xor
add
mov
mov
jmp
jp
sbb
cltd
ja
jno
sbb
sub
xlat
out
jo
jo
jo
jo
sub
test
rolb
xchg
ficompl
cs
and
mov
jl
adc
nop
fsubp
adc
push
bound
arpl
ret
les
repnz
lcall
pop
cmp
push
cmpsb
jo
int
fstps
xor
xchg
xor
push
test
mov
lret
push
int3
aaa
mov
in
xor
out
icebp
or
pop
outsl
hlt
enter
aad
pop
movsl
aad
pop
decb
add
xchg
and
add
mov
rcll
dec
sarl
clc
fisttps
enter
mov
pop
lret
decl
push
pop
sahf
sbb
adc
mov
aaa
aas
push
scas
xor
mov
cltd
test
out
or
in
mov
in
in
call
add
dec
loope
add
pop
scas
std
cld
and
das
jle
aaa
xlat
int
int
cmpsb
or
xlat
add
mov
push
sub
mov
mov
or
fs
aas
jne
xchg
xor
mov
xchg
jo
stos
mov
mov
inc
xchg
mov
pop
subl
xor
shlb
push
cld
sub
movsl
xor
sub
and
leave
xchg
or
dec
cs
mov
or
and
push
test
pop
rcrl
mov
mov
aam
pop
jecxz
cwtl
insb
mov
jnp
add
adc
mov
into
int3
or
ja
out
push
xchg
fcomps
dec
repnz
jb
insb
push
lret
out
rolb
jle
jnp
mov
cmp
out
xchg
out
fbstp
movsl
mov
mov
xor
mov
add
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
jmp
and
jae
xor
cmpsl
jo
jo
jo
jo
shrl
mov
lcall
xchg
test
test
outsb
sbb
outsl
scas
or
add
out
mov
shll
addr16
out
in
inc
inc
jns
addr16
adc
sbb
cmp
pop
dec
push
outsl
add
ret
sub
mov
cmp
insb
loopne
xchg
mov
ja
repz
in
xchg
push
push
fsts
dec
jno
insb
and
cmc
and
jg
dec
push
dec
sbb
adc
mov
dec
cmpb
adc
ljmp
xchg
enter
adc
loopne
mov
cmp
xchg
pop
loop
jl
and
scas
push
or
cmp
movsl
or
mov
cmpl
test
fwait
mov
push
aad
es
cmp
dec
scas
dec
shlb
out
and
sbb
loopne
and
cmp
stc
cltd
lods
dec
pop
leave
adc
xor
mov
fcmovnb
sub
mov
pushf
adcl
fsubp
fldl
push
lock
pop
mov
jle
cmpsb
and
shl
and
xchg
jle
gs
push
sub
jae
fstp
popa
dec
mov
adc
or
cmp
mov
jmp
jge
add
lods
add
fwait
mov
or
fstps
jo
lret
data16
stos
bound
cltd
dec
popf
data16
out
dec
push
scas
mov
or
xchg
or
jae
enter
fcompl
imulb
mov
sti
or
ss
sahf
xchg
aas
push
lahf
fdiv
adc
scas
mov
sbb
cmp
inc
cmp
and
fstps
movb
add
int
outsl
jl
lods
push
addr16
xchg
repz
mov
pop
ss
dec
xor
popf
xorb
lds
sbb
imul
mov
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
jmp
cs
add
popa
push
in
jno
imul
jo
jo
jo
jo
mov
int
xchg
xor
cvttps2pi
mov
jno
cld
cmpsb
lods
cli
mov
pop
dec
leave
jns
mov
cwtl
dec
and
cs
jne
add
adc
push
cmpl
fsubrs
inc
adc
inc
test
test
cltd
push
cmp
mov
lea
push
pop
dec
sahf
clc
push
sahf
push
movsb
ja
push
sbb
or
cmp
pop
push
xor
push
loopne
mov
cmovno
scas
xchg
fnstenv
sahf
imul
stc
mov
mov
pop
jno
js
sbb
inc
call
in
lock
mov
xchg
adc
inc
pop
dec
shll
mov
mov
sbb
fxch
repz
outsl
pop
pop
inc
mov
push
lret
rclb
dec
insl
xor
jg
outsl
sbb
pop
mov
shlb
std
je
mov
bound
fldenv
cwtl
sub
push
lcall
jmp
jge
push
movsb
test
inc
adc
cmp
xchg
pop
inc
jae
sub
add
mov
sbb
pop
sub
es
jb
cs
pop
popf
push
mov
jnp
out
jge
push
test
imul
jno
xchg
push
insl
in
xchg
das
xchg
push
imul
mov
loopne
mov
push
xchg
out
dec
mov
arpl
fdivr
push
adc
or
mov
jp
add
mov
mov
dec
cmp
sub
out
pop
pop
test
sub
pop
mov
clc
out
xchg
lahf
iret
inc
pop
fstp
jge
xchg
inc
pop
mov
rclb
dec
sub
mov
jl
scas
hlt
dec
movsb
xchg
jg
aad
fmuls
std
jns
dec
ret
imul
jle
int
out
adc
cwtl
mov
cmp
push
ret
push
mov
sub
leave
ret
push
mov
push
or
push
movzwl
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
mov
mov
mov
xor
push
mov
or
xor
sbb
mov
sbbl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
jmp
imul
cmp
jae
jl
dec
mov
jo
jo
mov
pop
cmp
push
fwait
mov
loop
sbb
mov
rcll
cmp
jg
lcall
mov
or
movsb
fnstcw
out
mov
ds
lea
jle
xor
push
cmpsl
jg
cmc
jns
adc
dec
in
sbb
daa
or
lods
push
out
insl
bound
push
cltd
push
sbb
cli
lods
test
call
std
sub
dec
or
pop
jae
jmp
cmpsl
das
and
testb
mov
jecxz
mov
loope
and
ficomps
daa
scas
push
jbe
ret
jnp
mov
clc
cmpsl
jb
push
mov
xchg
add
inc
test
and
stos
mov
arpl
rol
outsl
mov
pop
adc
xchg
pop
addl
push
and
fisttpl
mov
or
mov
push
fisttpl
pop
adc
cltd
dec
add
in
cmp
xchg
lods
sbb
fimull
ret
stos
mov
cli
sbb
xchg
bound
xor
icebp
call
adc
outsb
mov
lods
pop
mov
fwait
add
loope
mov
cmc
imulb
insb
or
fstl
hlt
inc
dec
shrb
inc
jp
xlat
cmpl
jnp
jle
lods
mov
leave
je
dec
cli
xchg
jge
mov
add
test
mov
adc
lret
mov
subb
sbb
pusha
pop
lcall
or
mov
adc
sarl
push
xor
movsl
jne
repnz
and
mov
jecxz
jge
sub
sub
aaa
sub
pop
cmp
or
repnz
xchg
mov
lcall
loopne
int3
lock
dec
jb
fwait
hlt
ret
xchg
cmpsl
pushf
inc
pusha
lahf
loope
dec
scas
sbb
ja
pop
sbb
outsl
pop
es
ds
dec
enter
xchg
incb
mov
push
pop
fnstcw
in
dec
inc
movl
cmpsl
cli
dec
dec
cmp
mov
fyl2x
test
sti
ret
push
aam
xor
int
gs
jp
outsl
jecxz
imul
cmp
and
sub
fimuls
shll
cmp
cmp
jbe
pushf
aaa
cmc
cld
lret
xchg
cmpsl
push
out
imul
adc
loopne
adc
clc
fs
ss
cld
cmp
mov
cmp
ja
push
jmp
jmp
mov
ja
push
aas
xchg
out
sahf
and
dec
mov
jle
jo
inc
inc
and
out
cltd
in
imul
dec
notb
bound
out
fildl
repz
jle
inc
lods
test
mov
imul
dec
arpl
fbld
sub
mov
insb
mov
outsl
cmpsb
loop
mov
pop
add
scas
iret
fdivl
push
jp
xor
xor
pop
insb
xlat
cs
cmp
insb
sarb
sbb
mull
push
movsl
enter
inc
jno
cmp
test
test
stc
and
xor
test
push
mov
orb
jl
cmpsl
bound
add
repz
sub
subl
jg
xchg
pop
fstp
mov
or
xor
jg
pop
rcrl
pop
addr16
xchg
out
ss
gs
or
loopne
or
hlt
mov
frstor
cmp
mov
sub
icebp
movsb
ja
repnz
cltd
or
fwait
cltd
jl
loope
xor
addl
pop
cwtl
leave
clc
adcb
mov
mov
loopne
or
inc
push
dec
mov
pop
mov
sahf
adc
pop
xor
and
leave
inc
push
out
mov
shl
mov
addr16
xchg
out
shld
fwait
les
mov
cmp
out
mov
inc
mov
in
jmp
lahf
in
add
jmp
out
xlat
cmp
lea
test
push
xor
in
daa
jnp
into
out
jne
mov
scas
jae
stos
mov
adc
fcomi
mov
out
in
scas
cli
orb
aam
sub
call
xchg
lea
cmp
mov
gs
xchg
cmc
pushf
loope
xor
mov
shll
and
inc
jns
cmp
push
cmp
pop
popa
mul
cltd
dec
xor
sbb
pop
xchg
mov
jns
push
inc
dec
flds
mov
leave
xor
call
mov
push
mov
and
jp
loope
lea
sub
test
or
mov
pushf
mov
insl
dec
mov
test
loop
mov
mov
pop
cmp
xor
pop
cmpsl
popf
iret
xchg
outsb
cmp
aam
test
stos
scas
adc
ret
push
pop
movsl
cli
ja
fstps
xchg
mov
xchg
pop
jle
pop
lret
cltd
jnp
data16
roll
roll
push
xor
mov
mov
xor
add
jmp
fistl
loope
lds
add
scas
jl
cld
pop
jo
mov
sbb
dec
jb
mov
xor
lds
les
mov
lcall
dec
pop
pop
sub
pop
mov
nop
sti
sub
stos
jg
mov
adc
jecxz
dec
stos
pop
xor
or
cmp
and
test
out
or
int3
loop
mov
sub
mov
add
jle
es
loope
in
jecxz
fstl
stc
pop
and
push
jae
subl
pop
test
xor
popf
es
mov
popa
mov
sub
shl
inc
notl
aas
in
lea
scas
or
mov
mov
insb
sub
aas
mov
test
cld
movsb
pusha
or
and
mov
es
and
dec
jno
xlat
xchg
mov
adc
sub
out
imul
pop
xchg
jecxz
dec
adc
adc
pop
add
pop
mov
xorl
xchg
and
inc
pop
cmc
nop
ret
ret
cmpsb
xchg
stc
lret
roll
or
cltd
fbstp
push
push
mov
pop
xchg
push
jmp
push
push
aaa
dec
loopne
imul
in
cld
shlb
jns
fld
fwait
pop
push
mov
and
dec
gs
shl
jmp
pop
int
and
cmp
out
repnz
cmp
adc
insb
push
push
cwtl
std
mov
mov
mov
dec
sub
scas
mov
mov
inc
add
push
adc
mov
cmp
add
das
outsb
js
bswap
add
and
addr16
dec
icebp
pusha
jns
add
push
fiadds
fsubs
mov
pusha
arpl
mov
orl
xchg
iret
adc
jo
lcall
and
les
rep
jno
dec
push
fsubl
repnz
nop
out
les
clc
xchg
ret
out
push
pop
sbb
cmpb
es
xlat
fidivrl
insb
outsb
ljmp
in
out
jbe
xchg
ljmp
pusha
sub
jecxz
pop
add
test
inc
lcall
rorl
aas
xchg
push
loop
mov
cli
shll
mov
lret
jne
popf
mov
sbb
jl
mov
sub
ds
push
mov
lods
push
dec
ss
xor
aam
pusha
imul
pop
push
cwtl
fiadds
rol
add
mov
fdivrs
xchg
mov
adc
stos
mov
ds
outsl
pop
jg
in
add
jecxz
mov
or
scas
cli
mov
xor
add
jmp
jecxz
fcoms
out
icebp
icebp
pop
xchg
aaa
aas
cmp
jo
mov
or
dec
sbb
lret
dec
xor
sub
aam
mov
into
push
xchg
andl
out
jo
xor
imul
xchg
in
sbb
or
aas
pop
es
sbb
ja
aad
mov
int
mov
jge
xor
or
je
add
xor
lcall
outsl
test
sahf
jns
arpl
icebp
pop
fmuls
jno
mov
in
int
jp
cld
and
pop
dec
fisttpll
adc
outsl
xchg
xchg
xchg
js
and
mov
jno
insl
push
jnp
dec
mov
xchg
stc
addr16
sti
pop
test
lret
je
inc
xchg
into
pop
xor
cmpsb
or
jp
pop
lds
das
loop
into
es
stos
dec
xlat
add
out
sbb
xor
mov
or
adc
cmp
xchg
lods
ja
mov
dec
into
sbb
jle
insl
mov
es
pop
bnd
lea
in
add
push
notl
pop
push
jbe
sbb
inc
lock
adc
lods
aas
cmp
mov
fsubrl
movsl
jae
mov
ret
push
test
data16
and
mov
enter
out
mov
push
out
stos
mov
cld
das
cmpsl
lea
pop
shlb
xchg
inc
test
adc
pop
pmulhuw
cs
stc
adc
dec
push
insl
dec
hlt
pop
mov
sbb
shlb
xchg
push
and
les
pushf
jno
in
xor
mov
mov
pop
test
ror
jno
sbb
inc
mov
jnp
push
xorb
daa
test
sub
dec
xor
cmp
xor
mov
adc
mov
cmp
rorb
push
pop
cmp
movsb
fdiv
insl
or
cmp
cli
clc
inc
cmpb
out
sub
out
bound
mov
sbb
xchg
xor
lret
stos
xchg
sbb
jmp
push
or
and
sbb
in
insb
sub
pop
das
mov
movsl
sbbb
mov
dec
jp
push
shll
sub
push
fidivl
jg
mov
lret
jecxz
pop
xor
clc
mov
repnz
cli
loop
aas
movsl
out
lahf
sbb
sahf
mov
add
pop
xor
ret
aam
into
add
mov
or
mov
pusha
add
dec
ficoms
pushf
jb
add
cld
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
adc
mov
addl
mov
adcl
xor
adc
mov
andl
add
movl
movzwl
mov
orl
movb
not
lea
mov
or
jmp
out
out
jno
in
or
and
adc
cmp
push
pop
shl
sub
je
add
ret
pop
out
in
pop
dec
iret
cmc
popl
aad
add
adc
xchg
loopne
jge
pop
fistpl
and
xchg
fldenv
sbbl
dec
subl
add
aas
rorl
sti
jl
imul
sub
cmp
sbb
xchg
or
push
xlat
sub
inc
inc
pop
cli
xchg
ret
stos
ss
jne
or
jp
pop
mov
out
leave
adc
cs
lods
loop
mov
outsb
mov
les
jmp
and
mov
xchg
sub
push
push
jns
rcr
mov
and
xor
inc
dec
mov
fistpl
jnp
fdivrs
out
fistps
imul
or
out
mov
iret
jnp
add
dec
and
loope
decb
into
jb
cmp
insb
push
data16
ret
xchg
cmp
ret
jo
out
jns
push
inc
adc
fld
out
jae
out
xorl
popa
and
mov
xor
mov
lret
fwait
dec
lds
and
sbb
inc
outsl
xchg
xor
jb
in
cltd
xchg
aad
xchg
orl
jo
inc
jg
scas
scas
mov
mov
push
xor
aas
inc
fistpll
icebp
add
xchg
sbb
mov
aaa
adc
sub
cmpsb
pop
aam
and
sbb
sub
cmpl
inc
push
aaa
andb
sti
mov
push
xchg
xchg
mov
ja
scas
xchg
mov
sub
sbb
jno
test
mov
cmc
cmc
mov
and
add
ds
jecxz
loopne
fcomi
das
loopne
mov
dec
or
inc
mov
and
popa
and
dec
pop
les
repnz
into
jge
pop
dec
or
cmp
mov
loopne
jo
push
xchg
cld
sbb
adcb
sahf
in
das
fisubrs
mov
adc
enter
jp
adc
and
aad
insl
cmp
add
repnz
bound
xchg
and
pop
lret
cld
push
dec
adc
xor
xchg
cwtl
aas
and
pop
sti
out
mov
or
mov
mov
push
xchg
pop
mov
aas
cmp
xor
insb
xlat
sub
shll
lcall
jae
mov
mov
icebp
in
adc
mov
adc
int
movsl
test
xor
cmp
push
aam
add
mov
inc
fcmove
mov
int
ds
in
in
sbb
mov
out
mov
and
mov
scas
and
jle
hlt
int3
repnz
repz
test
xor
push
mov
xchg
ja
jmp
mov
mov
xor
pop
mov
movzwl
adc
mov
subl
xor
sub
andl
mov
negl
movl
jmp
fists
cltd
mov
addr16
push
and
sti
lds
jo
cmp
mov
mov
cmpsl
in
jge
and
movd
sarl
pop
cltd
mov
in
add
sbb
jbe
jo
jecxz
les
stos
in
loop
mov
vpsubb
xchg
das
addr16
hlt
inc
nop
lock
stc
stc
inc
cli
jo
rcr
dec
lds
jmp
add
mov
repnz
frstor
sbb
and
fidivrs
add
add
lahf
fdivrs
lahf
add
push
rorb
test
jge
xchg
sbb
aad
push
or
sbb
inc
push
ret
mov
es
insl
mov
into
es
push
mov
sti
and
inc
call
pop
test
addr16
and
jae
push
rolb
int
cli
push
idivl
jo
push
imul
fwait
rcrl
xor
mov
out
sbb
incb
dec
clc
aad
cld
pusha
push
dec
jns
pushl
and
xchg
fwait
sahf
mov
out
je
or
loopne
jbe
xchg
scas
sahf
add
movsb
scas
fs
jb
nop
xor
lahf
push
xlat
daa
jl
pushf
mov
movsl
lea
or
or
push
loopne
lcall
fnstsw
lods
mov
mov
repnz
and
je
add
int
cmp
aad
add
int
rcrb
push
addr16
jo
mov
popf
aad
in
cmpsl
bound
lods
aam
cmp
fnstsw
and
mov
mov
insl
xchg
and
out
cli
xchg
sbb
mov
mov
mov
sbb
push
xor
pop
mov
xor
es
inc
sub
lea
fdivs
ds
dec
subb
adc
mov
push
adc
call
sub
inc
xor
push
clc
pop
aas
inc
icebp
enter
in
and
clc
push
test
inc
pop
xchg
movb
hlt
call
jnp
add
test
adcl
arpl
sarl
jecxz
mov
xor
adc
dec
mov
fisttpll
pusha
xchg
repz
cmp
rcr
pop
idiv
out
pop
stos
ljmp
jle
push
loopne
mov
bound
adc
negl
mov
xor
cmp
lds
sarl
mov
jecxz
lock
add
bound
fbld
sub
push
xor
cmp
imul
mov
fidivrl
jne
mov
add
inc
cmp
mov
inc
data16
hlt
pusha
jle
and
leave
dec
inc
jb
cltd
sub
shrb
inc
mov
ljmp
movsb
inc
mov
call
icebp
mov
sub
cmpsl
aam
fs
xchg
ret
fnstenv
movsb
mov
jno
xor
push
out
lcall
add
mov
mov
jns
nop
ret
movl
mov
mov
push
xor
mov
adc
mov
add
movl
jmp
mov
movl
mov
movl
jmp
jge
lret
in
icebp
ss
int
sbbb
jo
jge
jo
push
in
aas
enter
stos
mov
addr16
cmpsb
fldl
pop
jp
dec
push
mov
pop
stc
push
xchg
push
jns
xor
dec
sti
sbb
cwtl
out
jmp
addb
mov
or
sbb
inc
lock
pop
rorb
inc
xchg
mov
add
ret
push
mov
jge
punpckhwd
xor
cmpb
test
mov
decl
jge
imul
rcr
out
sub
cmp
pop
ljmp
dec
or
xchg
cwtl
jmp
cmp
psadbw
inc
inc
push
imul
mov
ffree
aaa
repnz
inc
jno
jno
ds
fstpl
pop
add
adc
stos
adcb
mov
clc
lock
lahf
cld
movsl
rorl
je
sub
cltd
call
push
lret
out
dec
mov
mov
insl
inc
push
testb
fs
jg
cmc
pop
pop
cmc
xchg
push
pop
or
leave
jecxz
in
divb
xchg
clc
sbb
loop
lea
fldenv
shlb
push
in
subb
repnz
mov
or
xlat
cwtl
cmpsl
pop
arpl
lea
dec
jo
mov
rcr
cmc
sbb
cli
xor
fnstenv
add
mov
cmp
jg
add
scas
sahf
or
and
in
xor
or
add
stos
shrb
ficoml
frndint
jnp
fs
jg
cwtl
push
std
out
test
ss
sbb
mov
mov
mov
push
repz
mov
ret
in
mov
in
aam
or
xor
push
rclb
into
mov
xchg
mov
in
in
adc
mov
dec
inc
enter
into
mov
mov
jb
cmp
xchg
sbb
xchg
mov
stos
fs
and
mov
ror
fld
ja
test
or
mov
or
dec
xchg
sbb
imul
mov
imull
inc
xchg
xorb
leave
popf
xor
cwtl
sub
pop
mov
imul
lcall
jg
dec
dec
push
scas
mov
mov
lea
out
add
push
jns
fildll
push
cwtl
and
sti
imul
repnz
mov
test
aas
jo
add
addr16
enter
lds
cmp
and
ja
xchg
addl
pop
adc
xchg
fnsave
mov
pop
mov
lret
mov
sarb
movups
les
or
jo
sbb
mov
int
push
xor
fldcw
adc
ss
sbb
sub
cmp
inc
adc
popa
scas
aad
sahf
cmc
push
fadd
fcomps
push
call
push
loopne
cmc
movsl
mov
cmpsb
rclb
mov
sub
mov
push
fsubl
inc
cmp
movl
jmp
leave
daa
rclb
repnz
jecxz
cmpsb
dec
cmpxchg
jo
cmp
ss
push
cmp
lds
sahf
jg
mov
rclb
dec
add
jns
cli
xchg
cli
test
loop
cmpsb
mov
std
out
inc
add
mov
test
sti
inc
push
cld
push
lock
cmpsb
mov
mov
mov
jge
jno
pop
add
jne
sarb
xchg
scas
push
or
ja
rolb
mov
dec
or
add
sbb
leave
test
mov
dec
fisubrs
mov
sbb
sub
mov
sub
sbb
fistps
xchg
loope
mov
lock
cmp
xor
stos
add
in
adc
std
push
or
and
ljmp
mov
fs
mov
adc
in
xor
rcll
jg
sbb
out
out
jp
adc
loop
fidivl
sub
add
sbb
jmp
inc
mov
mov
dec
mov
and
stc
aaa
std
scas
sbb
stos
lock
push
mov
xorb
out
sbb
inc
sbb
mov
cs
xor
lret
lret
jne
xchg
out
movsl
aas
mov
and
inc
lret
mov
fcompl
fisttpl
cs
fldl
orb
cmp
ss
cltd
sub
popa
push
dec
jmp
xchg
pop
cmpsl
adc
and
and
mov
sub
cld
shl
out
scas
adc
repnz
adcb
adc
jecxz
fnstsw
jo
mov
pop
cmp
out
cmc
ds
fisubs
stc
std
repz
or
or
rcr
push
das
mov
add
add
insl
ljmp
sub
mov
jne
inc
mov
or
or
pop
xchg
cmpsl
ficompl
adc
inc
insb
incb
dec
mov
cmp
push
cmpsl
cmp
xor
mov
cs
das
dec
pop
stc
punpckldq
mov
mov
int3
xchg
lret
shll
pop
push
adc
xchg
mov
imul
insb
jmp
and
jmp
test
push
test
sub
sub
mov
mov
lcall
jl
gs
cmp
sarb
dec
fsubrs
sbb
jns
ret
pop
xchg
cmpsl
mov
pusha
xor
out
shlb
mov
mov
jno
sub
popa
leave
test
bound
mov
push
xor
xchg
and
out
pushf
jmp
fdiv
mov
int
les
xor
or
pop
ret
scas
sbbl
in
les
dec
push
orl
pop
lock
xor
lds
aas
xchg
xor
sub
sbb
pop
mov
test
mov
jno
pop
dec
leave
gs
jb
xor
imul
fsubrl
sub
jb
and
mov
jmp
push
jge
add
jb
inc
sbb
enter
or
jo
cmp
test
cmp
jae
test
sbb
je
mov
lret
push
xlat
cltd
pop
cs
cmpsb
or
or
add
xchg
cmpsb
jne
in
dec
lcall
cmpsl
xlat
sahf
int3
ljmp
ret
push
lahf
shrl
aad
mov
iret
out
add
dec
push
sbb
das
cmp
test
in
lock
in
lods
pop
mov
out
das
jo
add
sbb
repnz
and
mov
lahf
cltd
sbb
dec
les
add
insb
push
xlat
xchg
int
cmp
push
inc
into
movsb
test
inc
iret
or
mov
in
adc
jmp
inc
ljmp
jae
xor
dec
jnp
jae
test
mov
pop
cmp
addr16
daa
dec
push
dec
in
and
cld
adc
lock
cli
pop
lods
sub
mov
sub
jne
es
mov
imul
daa
addr16
or
mov
mov
mov
mov
and
movsl
in
repz
jp
pushf
sahf
ss
mov
cs
jg
jae
lcall
mov
mov
clc
sbb
pop
xor
add
adc
cmpsb
std
out
jb
bound
ret
lcall
lahf
dec
shr
ss
cltd
das
ss
jge
daa
call
arpl
ja
xchg
sub
out
lret
mov
cltd
cltd
or
dec
incb
push
repz
pop
inc
sbb
pmaxsw
addr16
jbe
sbb
inc
pop
adc
cmp
test
pop
jmp
out
fsubl
out
jle
stos
lea
jnp
push
pushf
mov
cmp
scas
loope
sub
sub
push
jecxz
dec
in
mov
dec
ficoml
ret
loopne
pop
shll
mov
push
sahf
mov
sub
nop
or
jmp
add
mov
les
xchg
dec
dec
xchg
ds
cltd
inc
int
jbe
icebp
out
jno
inc
jnp
xchg
sti
push
jp
add
push
lcall
in
out
cmp
loopne
pop
xchg
mov
imul
sub
pop
cmpsl
fcmovnb
cwtl
sbb
and
in
mov
xchg
add
mov
push
cmpsl
and
dec
int3
stos
cmc
jmp
add
or
dec
sbb
lahf
dec
inc
rol
sbb
mov
xchg
mov
mov
push
mov
jne
ja
popf
add
arpl
xor
cmp
js
fs
daa
icebp
cmpsb
call
jns
adc
faddp
ja
and
loopne
sub
add
ret
jne
pop
xor
push
add
ss
xchg
stos
mov
add
add
cmp
push
cmc
nop
xor
push
insb
lea
arpl
test
lock
xor
add
cmp
movl
je
add
push
adc
push
mov
mov
andl
xor
mov
add
addl
movzwl
andl
mov
sbbl
mov
addl
movzwl
sbbl
xor
addl
jmp
fdivl
dec
rsqrtps
icebp
inc
sub
jb
repnz
leave
and
cmp
insb
inc
adc
dec
xchg
int3
sub
jle
xchg
pushf
jle
fcom
fstps
clc
sub
xchg
mov
lcall
loope
push
pop
push
mov
je
pop
xor
aam
jns
jae
jbe
cli
push
in
test
mov
xchg
adc
fmull
arpl
dec
fisttps
outsb
push
inc
add
lret
imul
mov
hlt
add
pop
push
cmpb
cmp
mov
xor
xrelease
push
mov
mov
rcl
cmc
out
jo
mov
ja
and
add
cs
mov
movsl
mov
in
int3
xchg
xchg
out
sub
sub
iret
shrl
shrl
pop
push
addb
cmp
jmp
xchg
xchg
iret
mov
xchg
int3
mov
xor
outsb
mov
repz
imul
orl
packsswb
fcmovbe
jae
ss
addb
adc
gs
lahf
mov
test
addl
mov
push
in
dec
dec
jae
lcall
sbb
inc
subb
push
clc
push
lods
shrl
pop
dec
jns
pop
in
popa
shr
das
mov
push
jno,pn
xchg
xor
and
cmp
sbb
xchg
sbbl
jno
mov
js
push
js
xchg
adc
mov
inc
fs
sub
mov
int3
cld
arpl
push
pop
inc
shr
xor
rorb
and
mov
sbb
outsl
or
sbb
icebp
adc
jmp
push
cmp
loop
xlat
pop
push
pop
xchg
mov
cmp
sub
xor
ret
xchg
outsl
out
lock
test
aad
xchg
test
push
ret
pusha
push
pusha
mov
loopne
jecxz
mov
jne
mov
std
int
mov
in
adc
inc
fcomps
or
jle
and
sub
js
inc
jmp
das
repnz
jmp
imul
adc
lahf
xchg
xchg
imul
xchg
sbb
ret
scas
jno
sbb
mov
scas
jge
cld
jl
xchg
cld
in
insl
scas
sbb
cli
shll
and
push
push
push
push
fisttpl
imul
mov
pop
jl
inc
mov
stos
mov
outsb
dec
insl
and
rol
and
outsl
ret
dec
sub
push
push
jae
jns
xor
push
add
insl
loope
rdtsc
aad
repz
mov
cmp
push
int3
cmpsl
sti
jmp
dec
sub
cmp
js
or
or
imul
dec
sub
xor
or
sub
fiaddl
xor
enter
in
xlat
pop
addr16
inc
cmpsb
pop
lods
dec
cwtl
jbe,pt
xchg
mov
sbbl
insl
lods
cltd
sbb
cmpsl
mov
mov
cmp
in
lret
jne
add
movl
mov
movl
mov
jmp
or
daa
arpl
fisttpll
pop
movsb
cmpsl
xchg
jo,pn
cmp
pop
in
add
mov
ljmp
cltd
sbb
jl
loop
loope
outsl
xor
mov
nop
mov
out
or
adc
out
jns
sub
lods
fsubl
div
ja
push
adc
loop
jp
sahf
dec
clc
cmp
lods
adc
push
inc
fbld
das
js
add
push
dec
outsb
pop
lock
sub
insl
lock
movsl
push
mov
inc
fildl
sti
addr16
stc
or
cmpsl
in
inc
mov
and
scas
add
pop
push
sbb
add
jmp
shr
enter
jg
mov
repz
dec
leave
and
sub
test
cmp
cli
fsubrs
divb
dec
iret
pop
sub
mov
push
imul
clc
dec
jo
push
adc
out
mov
in
roll
or
aas
test
lods
arpl
fwait
test
cmp
and
cmp
jnp
in
add
push
daa
sti
jge
rol
lock
cld
dec
imul
or
xchg
pushf
xor
adc
jne
pusha
cmp
outsl
test
mov
push
cmp
loop
fs
lret
push
into
jl
push
inc
dec
outsb
int
cmpsb
testb
pop
jge
shrd
adc
fbstp
lods
aas
xor
insb
xor
mov
xchg
push
in
fs
out
data16
loope
xchg
xchg
aad
adc
mov
lret
add
fwait
dec
push
dec
mov
popa
pop
jle
fdecstp
mov
cltd
lret
pop
test
and
rol
inc
jg
mov
sub
test
outsb
mov
mov
movsl
sub
sbb
adc
lods
shll
mov
out
inc
mov
ja
lcall
adc
pop
sahf
cmp
xor
mov
mov
lret
cmc
adc
mov
sub
xchg
movsl
xor
ss
mov
mov
mov
int
cmpsl
fs
nop
mov
inc
test
popa
pop
repz
pushf
rorb
outsb
pop
loope
cmovo
mov
ret
loop
push
leave
mov
sbb
xchg
mov
mov
mov
test
lahf
andb
push
mov
xor
mov
loopne
mov
dec
cld
dec
xchg
mov
sub
test
fcmovne
adc
ret
ds
xchg
push
jae
pop
jnp
lds
mov
push
inc
mov
mov
int
xor
mov
cli
adc
lret
sbb
leave
ljmp
cmp
sbb
jmp
dec
xchg
push
loopne
movsb
mov
in
sub
mov
lods
adc
push
fdivrs
movsl
jne
adc
xchg
frstor
dec
inc
imul
adcb
sub
mov
fldt
xchg
lods
call
cmc
and
xchg
add
jle
inc
das
lret
cmpb
hlt
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
jmp
xchg
roll
icebp
lods
add
roll
jo
jge
jo
mov
xchg
icebp
int3
insl
pop
pop
addb
stos
out
adc
jp
bound
hlt
cli
xor
test
jge
cmc
and
mov
gs
jnp
xchg
push
arpl
movsb
cs
movb
xchg
mov
adc
fs
in
into
push
ds
test
repnz
mov
pop
mov
dec
jns
adc
adc
pusha
enter
or
repz
fcomps
movsl
pop
jo
cs
outsb
mov
aam
inc
clc
dec
insb
jbe
sbb
mov
mov
push
cwtl
and
mov
jmp
xchg
mov
addr16
xor
and
xchg
adc
xchg
stc
movsb
das
push
shr
and
and
roll
xor
and
andb
add
insb
jnp
inc
push
scas
adc
lret
les
jmp
enter
inc
jne
pop
lea
xchg
gs
mov
fnstcw
bound
xor
pop
adc
jne
xor
arpl
leave
push
out
movsl
mov
repz
std
mov
rol
cmp
add
xor
movsl
inc
pop
inc
adc
loop
stos
jge
paddb
ret
cmc
fcoms
call
and
fs
cmpsl
push
jo
imul
cmp
mov
daa
inc
cmp
push
mov
and
mov
test
fildl
les
inc
mov
in
pop
iret
sti
cltd
pop
dec
adc
sbb
xlat
add
fsubrl
andl
scas
sbb
fildll
push
out
push
dec
push
leave
sbb
sbb
jge
imul
loopne
pop
pop
adc
jmp
sti
ficomps
pop
scas
mov
popa
or
ret
sbb
adc
arpl
pop
push
or
inc
pop
xchg
stos
add
ficoml
nop
in
jae
pop
pushf
dec
cmpb
repnz
push
push
xchg
mov
je
inc
loopne
jns
push
inc
jp
test
push
pop
pop
cmp
sbb
xchg
jno
dec
dec
add
inc
dec
cmpsb
inc
je
mov
mov
rclb
cmp
pop
out
xlat
jne
popf
into
addl
dec
std
push
dec
mov
mov
cmp
xor
sbb
call
inc
out
ret
jne
bound
xchg
je
es
jb
or
movb
rcl
push
push
aad
mov
shr
cmpsl
xor
add
mov
fcoms
movl
xchg
fs
out
and
repz
push
xor
mov
and
fcmovne
je
ficoml
mov
arpl
cmp
jecxz
out
jbe
outsb
xor
push
and
in
lahf
or
lods
lcall
jae
nop
add
pop
clc
xorb
fimuls
lods
fwait
lods
mov
pushf
push
iret
sbb
push
mov
push
mov
mov
sbb
jmp
pop
scas
sbb
push
pop
mov
cmc
movsl
mov
adc
jo
stos
jle
jo
push
inc
mov
outsb
out
movsl
inc
in
insl
cli
test
pop
cmp
mov
addr16
mov
sbb
cmp
adcb
cltd
add
or
cmc
jae
xor
pop
pop
mov
pop
adc
lret
inc
scas
adc
cltd
call
or
rorl
mov
dec
pop
xchg
jg
fsubrl
scas
and
mov
jg
cmp
xlat
cmp
test
inc
pop
and
jp
pushl
lods
aaa
and
stos
in
jo
mov
rorl
inc
daa
das
xchg
xchg
fwait
cmp
xchg
mov
loop
out
sti
xchg
es
add
stos
addb
negb
in
inc
fisttps
fldcw
mov
and
cmp
insl
add
xchg
pusha
sbb
xchg
in
sarb
inc
adc
add
or
push
mov
cmp
mov
mov
push
ja
pop
adc
insb
das
push
xor
sbb
ja
push
push
add
jle
outsl
xor
mov
stos
movsb
leave
adc
pushf
lret
loop
daa
out
pop
aas
ret
pop
jb
aas
mov
or
jg
insb
scas
push
in
aad
push
arpl
add
repnz
cli
pop
inc
incl
push
scas
cmpsb
sbb
lahf
ror
sub
push
or
sub
sbb
repnz
mov
inc
int3
sti
outsl
rcrl
xor
mov
sbb
fisttps
pop
mov
mov
or
jecxz
inc
icebp
push
mov
mov
add
push
dec
xchg
xor
test
es
mov
incl
pop
out
cld
push
je
insb
cmp
ja
bound
inc
ds
test
sahf
adcb
mov
cmpsl
scas
popa
add
or
rolb
mov
daa
popa
pop
pop
adc
push
ss
or
outsl
add
xchg
test
or
into
enter
and
lcall
mov
movsb
mov
xor
arpl
shll
cmp
int3
movsb
or
cwtl
adc
nop
dec
or
ja
ret
cld
test
dec
dec
xor
mov
jnp
inc
inc
aaa
inc
push
loopne
test
fimuls
add
push
xchg
scas
incb
mov
test
mov
push
loopne
ljmp
and
pop
mov
cmp
and
mov
mov
sub
test
cmp
mov
fdivrs
sar
xchg
stos
push
and
push
movzwl
and
mov
jmp
ja
and
dec
xchg
inc
sahf
dec
xor
jo
pop
dec
cli
push
add
fdivrs
jb
sub
sbb
mov
add
or
adc
movsb
cmp
mov
in
frstor
mov
leave
lods
push
jnp
das
inc
ja
xchg
adc
dec
sti
insl
mov
add
push
js
jb
mov
xchg
mov
xchg
jmp
or
cmp
shl
mov
cmc
inc
xchg
fisubrl
xchg
push
push
fldlg2
insb
cmpsb
hlt
int
or
arpl
test
add
xchg
arpl
adc
dec
push
pop
push
jo
push
or
mov
or
out
xor
add
sub
pop
sahf
in
mov
jecxz
sub
dec
mov
mov
mov
mov
jecxz
cli
mov
shrb
gs
into
cmc
cmp
cmp
mov
ljmp
push
in
dec
cwtl
mov
verr
in
xlat
jno
cld
xor
sub
out
cwtl
ret
shrb
cmc
and
xor
adc
and
cwtl
xchg
pop
adc
cmp
movsb
pop
mov
cmc
shrb
mov
int
nop
fadds
cmp
cwtl
leave
pop
mov
push
scas
pop
and
sbb
mov
sub
stc
and
or
insl
push
lcall
add
int3
aaa
test
in
xor
repnz
and
fs
test
addl
pop
imul
fbstp
leave
mov
rclb
aad
sub
mov
push
cmpsl
add
cmp
out
adc
loop
mov
add
mov
cmp
jno
sarb
pop
and
and
insl
jbe
pop
ror
push
mov
insb
cwtl
jns
out
scas
xchg
dec
sub
fidivs
dec
xor
xor
inc
not
mov
add
dec
lock
xchg
cs
fs
dec
out
popf
jbe
mov
inc
or
into
mov
cmp
inc
sub
dec
push
pop
loop
in
gs
lea
fs
stos
nop
rep
sub
sbb
inc
or
adc
mov
ss
lcall
lcall
sarl
push
outsl
push
cmp
shlb
insl
or
xchg
sub
movsl
out
jb
mov
xchg
pop
xor
orb
jb
icebp
lcall
jge
inc
mov
lcall
inc
clc
xor
jnp
add
movl
and
mov
sbb
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
call
xor
xor
dec
mov
jmp
mov
add
xor
and
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
jmp
xchg
imul
cli
jne
xor
stos
jle
jo
faddl
inc
push
xchg
leave
cmpsb
mov
sbb
test
or
stos
imul
test
repnz
inc
push
gs
pop
inc
dec
sbb
test
xor
test
mov
xchg
sbb
jecxz
sub
aam
aad
sub
push
inc
fldt
in
mov
pop
jecxz
xlat
cmp
sarl
xchg
dec
adc
jmp
add
lock
jmp
sarb
inc
cld
popf
in
lods
cli
cld
movsb
mov
or
jecxz
sub
pop
push
cli
dec
cli
add
stc
stos
cli
scas
inc
mov
ljmpw
imul
xor
mov
xor
outsb
repnz
adc
movsl
or
gs
inc
xor
or
sti
and
inc
rcr
and
adc
arpl
sub
sbb
cld
xor
xorl
push
hlt
pop
push
ret
shrb
filds
sbb
adc
iret
xchg
lret
or
subb
leave
push
xor
or
repnz
cltd
aas
or
loopne
ret
jbe
clc
add
sbb
xchg
adcl
daa
xchg
addb
pop
or
pop
nopl
cwtl
push
add
aam
loope
cltd
mov
test
add
cmpsb
cmc
push
pop
jle
adc
fistps
xchg
or
pushf
lret
push
and
mov
jnp
aaa
hlt
xor
lret
mov
xchg
pusha
push
sti
popf
scas
fcomp
push
test
repz
divb
out
cmp
test
mov
test
mov
iret
fnstenv
lahf
test
sbb
inc
mov
lods
adc
ficoml
fistpll
xchg
lret
jmp
inc
and
fcmove
xor
cmp
test
mov
inc
cltd
xchg
sbb
xor
sub
popa
test
mov
jo
inc
les
fbld
jne
mov
xor
mov
add
mov
and
pop
cli
popf
lock
aaa
sbb
mov
cmp
fidivrl
mov
cmp
xor
stos
mov
xor
mov
mov
fs
aam
or
xlat
sbb
fstp
outsb
push
cmc
stos
jno
cld
cmpsl
scas
sahf
into
add
add
adc
roll
shl
mov
mov
push
ret
loop
aam
jp
ret
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
addl
movl
mov
mov
adcl
mov
xorl
xor
jmp
fidivl
jle
jne
jb
sub
sub
jo
cmpsl
jg
jo
and
notl
test
push
sub
jg
push
xchg
sbb
movsb
jp
repnz
cmp
shlb
out
movsb
add
roll
jb
inc
popa
fstps
push
mov
fucomp
inc
push
in
push
jl
and
in
adc
xchg
test
mov
dec
sahf
cmp
dec
jl
addl
push
ja
sarl
pop
rcll
mov
sbb
cwtl
loope
mov
inc
cmpsb
cli
stos
mov
adc
inc
enter
scas
cmp
xor
dec
pusha
pop
jmp
mov
and
test
cwtl
cli
movsb
cld
jecxz
inc
or
mov
lea
jno
imul
js
lret
pop
pop
sti
mov
into
sub
cmp
pop
mov
scas
fnstcw
sbb
dec
pop
xchg
jmp
pop
cmpb
cmp
pop
rorl
stc
dec
or
pop
jge
in
cmpsb
test
xlat
shr
lods
cmc
aaa
cli
jbe
out
rcll
inc
inc
sahf
and
or
enter
scas
scas
movsb
arpl
push
loope
jnp
jmp
sub
stos
movsl
dec
pop
cmovb
mov
sub
pop
sbb
loope
dec
cmpb
int3
jle
and
xchg
or
mov
in
push
sub
jecxz
dec
cli
in
push
mov
ss
fisttpll
ret
xchg
push
sub
pushf
or
cld
cmp
cltd
adc
mov
xchg
add
in
pop
sub
add
orl
mov
mov
xor
push
sbb
mov
or
mov
sbbl
add
adcl
mov
sbb
mov
adcl
mov
subl
mov
or
jmp
out
hlt
arpl
popa
xchg
insl
hlt
pop
xor
andb
jo
jg
jo
iret
outsl
mov
pop
outsl
and
imul
push
push
push
mov
lods
movsl
mov
mov
jg
sub
inc
dec
jle
ror
lods
sub
xchg
cmp
movsl
sbb
inc
push
xor
lret
xor
in
mov
aaa
test
push
xor
add
decb
jmp
shrb
iret
and
sub
bound
mov
jmp
jmp
dec
ljmp
loopne
push
pushl
iret
push
or
cmp
outsb
pusha
stc
lods
dec
mov
xchg
rorb
mov
pop
push
ljmp
cs
add
push
mov
leave
call
sar
test
out
aas
push
push
test
push
mov
cmpsl
inc
sbb
ja
gs
outsb
ja
sbb
in
xor
fwait
int3
jp
aam
es
bound
pop
daa
aas
subb
imulb
ljmp
sub
into
mov
enter
mulb
shl
push
cltd
jl
adc
dec
lret
and
pop
xchg
xchg
loopne
call
push
fs
cmp
or
negb
pusha
out
sarb
mov
inc
mov
call
fwait
dec
mov
jmp
test
pop
sbb
scas
arpl
lcall
ljmp
push
pop
xorb
ret
jae
pop
lret
inc
jns
mov
dec
or
insb
test
push
fs
fadd
jp
test
xor
mov
popf
fcomp
or
inc
sbb
mov
inc
add
incb
mov
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
xor
add
jmp
jge
gs
gs
sti
ret
pusha
jo
fstps
pusha
orb
jo
fisubrl
mov
mov
in
out
lods
data16
inc
cmp
inc
mov
sbb
iret
push
xchg
fadds
fisubl
lods
dec
cmpsl
mov
negb
daa
mov
clc
outsb
or
sti
and
int3
fimull
clc
in
and
fwait
jno
xor
repnz
inc
cwtl
ljmp
or
lds
jns
xorb
jnp
fs
mov
cmpsl
lods
lcall
repz
inc
dec
insl
push
cld
lds
cwtl
jns
pop
scas
fstpt
or
cmpsl
aas
int3
push
or
xor
add
dec
fisubs
mov
xor
push
jns
scas
inc
push
xor
cmpsl
pop
xchg
scas
cmpsl
std
mov
or
sub
mov
cli
scas
ror
inc
push
mov
or
mov
cmp
daa
sbb
jne
cmp
imul
mov
aad
lahf
and
cld
jge
jl
shll
loopne
addr16
pusha
push
cmp
push
sahf
mov
sbb
add
call
xor
xchg
adc
mov
adc
xor
testb
in
lods
shlb
and
xchg
xor
sbb
jnp
and
lret
xor
dec
push
popa
daa
xor
sbb
lods
mov
bound
adc
data16
inc
inc
lret
jno
push
xchg
or
mov
mov
push
xchg
sbb
roll
inc
xchg
jo
in
mov
outsl
pop
xlat
cwtl
mov
jae
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
push
adc
movl
mov
sbb
mov
mov
xor
add
mov
sub
mov
sub
mov
andl
mov
mov
jmp
mov
jg
inc
rorl
jae
pop
dec
arpl
add
cmp
loop
jo
lods
rcrl
movsb
adc
lds
int3
imul
pop
mov
js
outsb
jb
enter
dec
sbb
sahf
mov
test
jb
pop
out
test
popf
push
sub
xor
ret
jl
or
aad
cmpsl
pop
inc
loopne
ja
push
das
cmpsl
xor
sub
imul
lods
mov
sub
rorl
mov
or
imul
into
jb
dec
mov
push
stos
add
mov
loope
inc
mov
addb
test
aam
adc
cmpsb
test
test
mov
xchg
fwait
cmp
mov
jge
push
lds
arpl
dec
aad
pop
cmc
dec
lds
xchg
cmc
dec
test
dec
outsl
fwait
push
xchg
xor
cld
sbb
mov
je
cmp
stc
push
orb
sub
sarl
mov
cmp
shrl
cmpsb
xchg
icebp
fisttpll
cmpsl
ficomps
lods
subl
out
notl
xchg
or
push
push
add
xchg
cmp
rcrl
loope
in
xchg
xlat
pop
or
fninit
aad
xor
jns
int3
fnstcw
xor
outsb
xchg
mov
lock
inc
out
mov
mov
push
jp
repnz
outsb
mov
jge
or
pushf
adc
fstpt
xor
stos
xchg
frstor
sbb
testl
xchg
lock
pusha
pusha
fdivrl
xchg
test
inc
sbb
ffreep
call
aaa
inc
imul
lcall
mov
pop
scas
je
mov
sub
xchg
dec
sti
jmp
rorb
mov
push
les
cmpl
popf
and
cmpsl
xchg
pop
adc
pop
xchg
icebp
xlat
test
sbb
mov
ja
sti
and
ret
rcr
xor
adc
cmpl
dec
and
adc
mov
jp
inc
aad
movb
jecxz
mov
lods
inc
xchg
es
fcmovnb
cmpsl
inc
sbb
in
movsb
push
cmp
call
in
adc
test
out
push
pop
aaa
ljmp
fld
pop
in
leave
mov
out
shrb
sub
adc
mov
mov
adcl
mov
mov
orl
mov
subl
mov
andl
mov
mov
test
mov
jne
mov
jmp
sub
test
pushf
fsubl
out
movsl
cmp
loop
jo
addr16
mov
adcl
fwait
mov
aaa
and
xchg
xchg
orb
dec
push
sub
mov
leave
dec
out
add
add
and
in
inc
and
inc
out
stos
sti
adc
sbb
mov
and
mov
xor
inc
out
xor
xor
xchg
xchg
imul
les
push
in
dec
orb
mov
popf
fwait
pushf
lds
sarb
inc
lods
mov
jne
sbb
xchg
jle
aad
xor
sbb
int
fstpt
lret
fsts
push
push
pushf
xor
mov
popf
jp
mov
fldenv
add
jg
mov
pop
rcrb
add
pop
je
xchg
cltd
in
adc
ret
mov
sbb
ret
or
andb
insl
mov
cmc
mov
push
xor
fs
jbe
sbbb
sbbl
mov
push
add
sbbl
lds
iret
int3
xor
insb
jmp
out
andl
xchg
mov
mov
popa
adc
or
cmc
xor
jecxz
push
ret
aad
leave
push
lods
add
xchg
dec
cmpsl
mov
jo
stos
sub
lret
push
jae
cld
push
and
test
cmpsl
ror
arpl
pusha
or
adc
adc
mov
push
add
adc
fiadds
ficomps
xchg
stc
push
pop
dec
stos
iret
jmp
xchg
lret
jnp
mov
lds
ja
jae
cmp
push
jns
dec
aam
je
jl
bound
addr16
clc
adcl
call
cwtl
scas
pusha
in
adc
aaa
dec
cli
lret
mov
push
xchg
push
sub
cmp
jecxz
icebp
push
aam
xor
or
pop
inc
into
fdivrl
int
imul
cs
in
pop
xchg
mov
std
out
cmpsb
aam
push
mov
aam
mov
sbb
lret
xchg
xchg
mov
mul
push
jae
stos
mov
icebp
js
dec
dec
fmuls
pusha
sbb
cmp
fisubl
push
cmc
add
push
rcr
sarl
stos
scas
leave
and
dec
aaa
mov
mov
dec
xor
sbb
jns
ss
sbb
push
test
sbb
roll
ret
push
mov
sub
mov
mov
mov
subl
mov
xorl
movl
incl
movl
subl
mov
push
push
push
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
add
xorl
mov
movl
jmp
inc
jae
pop
sub
jae
and
mov
mov
jo
jge
jo
stos
dec
test
movl
pop
or
add
push
in
push
jmp
mov
repnz
call
dec
push
xor
mov
sar
les
es
xchg
or
jle
push
jp
loop
mov
inc
fs
pop
shlb
in
and
jnp
mov
sti
fists
call
rorl
dec
mov
push
ret
lcall
push
ret
ja
fs
outsl
xor
mov
je
std
mov
ret
push
dec
lods
jbe
ss
insb
xlat
pop
add
add
movsl
adc
adc
sub
pusha
inc
jecxz
ret
dec
scas
pop
bnd
movb
lret
add
mov
and
pop
cli
jg
push
pop
mov
ret
icebp
stc
movsb
push
pop
les
sti
push
ljmp
fldcw
jbe
sbb
cwtl
cmc
xor
int3
push
in
xchg
pop
ret
setb
sar
sub
mov
jb
icebp
arpl
lret
xchg
mov
cwtl
ja
cltd
stc
rcrl
fs
movsb
outsb
push
push
push
mov
pop
cmovns
loopne
cmp
test
add
and
fiaddl
fwait
mov
lahf
jg
jno
bts
shlb
test
sub
inc
lret
sbb
jb
xor
and
inc
mov
and
and
xlat
int
sub
jo
inc
xchg
iret
dec
fwait
push
cmpsb
pusha
sbb
out
mov
mov
icebp
pop
in
cltd
xor
ljmp
fwait
mov
xor
pop
test
jmp
insl
in
loop
dec
lods
xchg
cmp
cltd
sub
sti
add
xchg
push
orl
sub
ja
sub
mov
xor
mov
sbb
and
movsb
lret
fwait
scas
in
loop
bnd
adc
cmp
loope
in
dec
cmovp
jne
leave
mov
gs
insb
xchg
and
popa
out
out
popf
xor
and
mov
into
and
pop
dec
scas
cmp
int3
xor
mov
lret
mov
shll
int3
clc
stc
pop
in
and
int3
mov
xchg
mov
sbb
push
mov
adc
out
imul
push
or
mov
fucom
jmp
cmpsl
test
loop
pusha
pop
mov
cmp
cli
fmul
in
shrl
dec
pop
je
out
movsl
ret
push
out
enter
xor
adc
push
pop
or
stos
mov
dec
mov
push
mov
xor
mov
pop
mov
in
adc
loope
mov
push
cltd
mov
int3
adc
cltd
into
or
xchg
in
imul
mov
xor
cmp
iret
arpl
xchg
inc
adc
push
aaa
mov
jns
and
in
jbe
xrelease
adcl
movl
movl
add
jmp
sbb
sarl
lahf
popa
sti
arpl
movsl
mov
and
jo
ljmp
mov
rorb
incl
xchg
push
add
std
insl
sbb
sub
js
in
test
int
int3
sbb
out
xchg
stos
cmp
movsl
mov
lret
stos
movsl
loopne
stc
aaa
pop
movsb
push
arpl
jnp
mov
xlat
pop
pop
iret
mov
jecxz
test
aaa
lods
mov
rcrl
and
and
mov
pop
cmp
xor
stos
faddl
xor
lods
xor
negl
mov
rolb
mov
or
insl
or
or
mov
mov
popa
push
push
fwait
movsl
dec
mov
ret
cltd
int3
insl
add
bound
push
inc
nop
inc
mov
ljmp
adc
sbb
mov
pusha
adc
mov
cmp
mov
and
popf
jp
xchg
out
xchg
and
push
stos
popa
mov
test
insl
lods
xor
jp
icebp
push
mov
jge
jl
scas
shll
in
add
lret
dec
sbb
jp,pt
jecxz
sub
cmc
pop
ss
dec
push
lret
fmull
stos
xor
ret
test
mov
aas
or
cmp
nop
push
sub
cmpsl
cmpsl
sar
sbb
inc
dec
es
adc
jecxz
clc
aaa
sbb
pushf
jle
mov
lret
ljmp
lcall
sub
insb
lret
jg
mov
ret
outsb
push
fs
adc
daa
sbb
pop
jmp
push
daa
das
or
insb
add
mov
cmp
sbb
das
inc
adc
loopne
jmp
negb
dec
dec
push
idivb
adc
loopne
stos
nop
xlat
push
mov
cwtl
ror
fstpt
jle
and
sbb
add
adc
mov
into
dec
push
xchg
cmp
pop
outsb
pop
shlb
repz
and
std
inc
jne
mov
xchg
adc
and
cmc
ljmp
ret
stc
cmp
mov
flds
xchg
xchg
xor
clc
jne
mov
movsb
enter
jnp
pop
pop
pusha
jg
in
pop
out
andb
pop
in
jae
mov
cmc
data16
outsb
repnz
sbb
insb
adcl
subb
test
ds
sub
out
insb
enter
pop
cmp
popa
lods
inc
adc
dec
pushf
xor
fiaddl
and
adc
fsubl
add
adc
je
ljmp
out
xchg
dec
mov
loope
test
xor
cmp
cltd
call
fsubs
icebp
and
jg
adc
pop
popf
push
adc
mov
mov
mov
cmc
out
nop
jbe
jg
fcompl
adc
xchg
mov
inc
dec
rorb
loop
and
push
push
nop
test
mov
push
cs
int
cmp
jb
std
mov
jns
xlat
mov
or
add
and
add
movb
notb
add
movl
add
in
test
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
andl
add
orl
mov
adc
jmp
or
rcl
cmp
pop
jns
popa
fsubrl
jo
jge
jo
cwtl
mov
out
fmuls
dec
aam
sub
mov
stos
aad
cmp
dec
cmp
pop
cltd
add
push
adcl
add
jecxz
dec
mov
enter
inc
cltd
mov
stc
jo
mov
das
add
ret
das
jnp
gs
push
es
inc
iret
dec
pop
jbe
pusha
add
xchg
je
dec
sub
shll
adc
cmp
add
mov
sti
jl
or
imul
int3
leave
inc
cmp
insl
jbe
pop
andl
sarl
fists
fs
pop
mov
jo
or
int3
inc
sbb
push
inc
mov
cmp
movl
je
adc
and
dec
sub
cld
into
jae
imul
or
mov
cmp
int3
js
ja
jns
mov
push
lret
outsb
mov
push
call
cmp
mov
and
aam
popl
cmc
aaa
jnp
lds
repz
sub
cs
das
and
scas
push
mov
cmp
fnstcw
sbb
cmpl
sbb
hlt
push
pushf
rclb
leave
fmull
mov
xchg
pop
or
sar
ljmp
inc
aam
xorb
and
push
jbe
pushf
sarl
bound
sbb
inc
jbe
inc
push
jle
and
in
jmp
push
inc
cmpsb
lret
push
push
adc
sahf
mov
shll
jns
or
jp
sbb
pop
push
sti
aam
cmp
test
jnp
inc
mov
adc
fistpll
lods
mov
sub
pop
lret
test
jmp
lret
out
test
mov
push
jl
cld
mov
mov
inc
or
es
sbb
mov
cmc
mulb
icebp
repz
adc
nop
cli
push
insl
jmp
setne
sbb
addl
test
scas
sub
ja
sbb
daa
mov
mov
jecxz
cmp
jae
out
xchg
hlt
fmul
xor
ja
xchg
mov
loop
call
or
push
in
and
cmp
cld
mov
jmp
sub
xor
outsl
pop
shufps
and
enter
or
mov
sub
fisubs
inc
cmp
pop
add
fldt
cmpsb
movsl
xchg
bound
enter
test
pop
pop
cmpsl
sarb
dec
fwait
xchg
cmpsb
mov
push
mov
shlb
std
repz
mov
aaa
sbb
cmp
adc
push
mov
es
push
sub
or
xor
push
lcall
or
aaa
pop
and
and
imul
mov
cmp
add
sub
xor
dec
loopne
jmp
sahf
inc
mov
sbb
lcall
ret
test
dec
lret
add
xor
mov
xorb
xchg
mov
xor
add
adcl
push
inc
mov
sbbl
xor
add
push
mov
orl
xor
addl
add
xorl
push
lea
push
addl
pushl
adcl
pushl
call
adcl
test
je
lea
sbbl
push
mov
jmp
xlat
and
insb
push
aaa
pop
push
push
sahf
mov
int3
jo
and
jo
cltd
xchg
orb
xor
shrb
cmpsl
out
mov
mov
sbb
jmp
mov
call
rorl
pop
jp
lahf
mov
aad
mov
xor
jns
out
dec
mov
das
and
and
aad
sahf
mov
add
or
divb
cld
adc
mov
jecxz
repnz
leave
xchg
stc
aad
shrb
testl
clc
dec
jge
ret
je
in
ljmp
push
adc
cmp
sub
pop
cli
pop
cmpsb
clc
stc
das
or
or
aaa
jne
movsb
fsubl
pop
xchg
gs
jno
fsubrs
fucomp
cmc
xchg
pop
mov
arpl
cmp
mov
adc
nop
popl
xor
mov
gs
or
fwait
ss
push
lock
or
push
adc
xor
addr16
and
xor
mov
loop
rorb
sub
lahf
mov
popa
repz
lret
pushf
pop
xor
pusha
test
popf
lock
xchg
cmc
fstpt
pop
jne
sbb
ds
jl
push
inc
mov
xlat
cmp
push
outsb
insl
push
or
lcall
pop
inc
iret
add
stc
imul
dec
dec
push
aaa
and
les
pop
stos
lcall
fmuls
inc
shll
addl
lcall
push
cli
pop
xchg
aam
push
in
xchg
mov
shrb
out
aaa
hlt
pop
fisttpl
ljmp
push
and
pop
mov
vhaddps
jecxz
arpl
lods
ss
or
out
insb
and
test
cli
sti
ljmp
push
inc
mov
inc
and
movsb
addb
pop
mov
ja
out
icebp
jno
cmpsb
cmpsb
shlb
add
cmp
daa
movb
inc
jl
out
cwtl
pop
cmpsl
divl
and
sbb
aad
and
xchg
ja
xor
repz
out
pop
inc
xor
scas
or
add
jae
mov
push
mov
mov
loopne
inc
pop
push
hlt
lret
inc
fcoml
push
ret
mov
inc
mov
pop
mov
cli
sub
in
rol
inc
pop
adc
stc
test
testl
fs
jmp
cwtl
xchg
dec
add
adc
loope,pt
push
sub
and
mov
testb
cmpsl
and
pop
jae
adc
or
or
bound
or
mov
inc
iret
mov
imul
stos
xchg
xchg
push
mov
sub
cmp
or
sbb
scas
cmpsb
xchg
inc
and
mov
pop
adc
cs
clc
adc
add
push
mov
add
push
mov
mov
pushl
jmp
sahf
das
or
mov
mov
pop
mov
cmp
jo
and
jo
inc
sub
inc
pop
lea
je
fs
outsl
aaa
dec
rcrl
pusha
sub
adc
push
repnz
daa
pop
jbe
mov
or
bound
mov
aam
ret
mov
scas
adc
cmp
add
jns
push
rolb
push
hlt
or
ss
mov
cmp
mov
mov
jmp
jecxz
inc
sbb
lods
sbb
jbe
and
fcomps
mov
cmpsb
fsubrs
mov
push
in
lahf
jns
or
mov
push
out
jno
test
xchg
xor
mov
mov
stos
dec
gs
insl
std
inc
push
xor
ret
stos
rcrb
cmc
bnd
and
cmpb
pop
shll
cmp
push
cmpl
out
lea
lret
sub
or
pop
lods
lcall
iret
adcb
test
adc
cmp
xchg
pop
jmp
sub
mov
or
aas
inc
push
mov
ret
inc
test
clc
jo
sub
movsl
inc
dec
jg
pop
es
mov
pop
out
and
and
fwait
loopne
les
mov
xchg
xor
xor
adc
rcrl
add
mov
lds
xchg
mov
negl
shlb
dec
xchg
out
popf
and
pop
dec
mov
cltd
ja
dec
dec
jno
cmp
push
adc
jecxz
mov
stos
add
nop
loop
aas
xor
inc
adc
sub
and
test
cmpsl
or
jmp
and
cmp
mov
pop
movsl
pop
in
adc
lcall
mov
test
or
js
pop
ffreep
pop
or
mov
mov
dec
cwtl
lret
mov
stos
insl
push
adc
mov
cli
dec
sub
bound
imul
icebp
gs
mov
ret
add
sbb
cmpl
aaa
cmp
mov
icebp
insb
out
sub
inc
int
test
jne
adc
xor
aas
inc
add
sub
jmp
sub
dec
ret
int
mov
push
sub
lea
jb
nop
pop
addl
in
data16
rcll
hlt
std
xor
lds
enter
movsl
lea
add
mov
scas
movl
jo
jno
push
mov
pop
xchg
or
ud0
jmp
and
lods
clc
jbe
pop
mov
repnz
fwait
imul
jg
jb
dec
xchg
fisubrs
ds
mov
sbb
cwtl
in
jg
popf
shl
pop
shlb
cmpb
sbb
nop
lcall
test
int3
mov
add
dec
jmp
cmp
clc
cmpl
jmp
in
outsl
pop
outsl
jne
data16
test
pushf
bound
jo
jge
jo
push
or
inc
or
lret
sub
mov
push
mov
xor
js
shrb
fxtract
cmpsl
pushf
imul
sub
out
insl
fwait
sbb
jns
mov
jmp
popf
aaa
test
lret
mov
adc
mov
xchg
add
inc
xchg
cwtl
cmp
imul
add
dec
push
push
add
cmp
pop
movsb
push
arpl
push
out
inc
xor
cmp
or
add
mov
fldt
fmul
pop
xchg
add
aam
mov
ret
lret
test
insl
icebp
xor
xor
sbb
sub
into
dec
xchg
or
out
adc
lcall
bound
stc
or
scas
out
and
mov
sub
test
mov
gs
sbb
test
test
add
lods
mov
data16
jae
jmp
cmp
push
add
insl
cmpsl
aad
sub
aad
out
and
insb
shlb
mov
inc
test
cmpsb
inc
out
test
add
add
cltd
xor
dec
dec
push
fstl
push
fiaddl
xchg
cli
std
adc
xor
fldl
pop
filds
pop
sbb
aaa
cli
add
adcb
mov
ja
jge
lret
push
in
out
xor
stos
mov
test
loop
out
jns
mov
xor
or
imul
ret
clc
xchg
mov
into
out
movsl
lret
pop
fistl
out
inc
in
adc
popa
and
lock
push
movl
push
clc
xor
push
stos
add
out
js
cmp
pushf
ret
dec
pop
add
cmpsl
pop
cmp
push
popf
js
mov
stos
das
lods
fbld
out
fimull
add
stos
je
addr16
jl
imul
ret
sbb
inc
hlt
call
jae
add
mov
lods
cs
int3
mov
adcl
ret
pop
adc
mov
jecxz
push
arpl
xchg
xor
out
clc
repz
cwtl
jne
mov
fwait
inc
ds
dec
gs
sub
pop
sub
scas
int3
ja
rcr
push
jne
std
add
dec
and
mov
jbe
into
pop
dec
push
imul
aam
insb
jecxz
and
xchg
sub
xor
paddsb
ljmp
ja
js
mov
mov
mov
leave
jp
cltd
push
add
or
or
pop
mov
or
mov
xor
add
lock
int3
and
shll
dec
lcall
sahf
jbe
push
outsb
xor
int3
or
aas
test
mov
and
inc
cmc
push
mov
xlat
adc
repz
jle
mov
pusha
sbb
push
inc
add
inc
loopne
test
call
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
jmp
ja
mov
mov
call
shlb
and
jo
and
mov
popf
sub
xchg
fcmovne
push
test
clc
in
inc
pusha
sbb
mov
popa
pushf
rcll
pop
ret
pop
push
bound
addl
lea
xor
ret
pop
sti
sbb
xlat
lcall
clc
cltd
popa
fwait
decb
pop
mov
xchg
and
aas
push
jmp
pop
loop
adc
addr16
mov
adc
icebp
lret
adc
loopne
inc
push
test
jns
shl
fildll
lods
fcmovbe
insb
imul
cmp
mov
dec
daa
jle
adc
adc
mov
ret
add
or
or
cmp
mov
add
insb
push
lock
mov
mov
in
jae
pop
nop
or
jmp
stc
negl
xchg
mov
and
stc
mov
pop
fs
cmp
push
ffreep
mov
cltd
ss
mov
clc
cmp
adc
movsb
hlt
nop
mov
aam
arpl
or
add
or
ja
scas
jl
xor
push
dec
repnz
aam
pop
xor
sahf
call
insb
and
out
aam
aaa
cmpsl
scas
out
xchg
dec
xchg
hlt
mov
cli
xchg
aad
push
aad
andl
dec
inc
gs
cwtl
movsl
cmpsb
inc
xor
test
pop
sub
sarl
sbb
ret
pop
and
sbb
cmpsb
mov
lods
decb
mov
or
jnp
cmc
xlat
icebp
nop
aad
push
outsb
ret
mov
icebp
lahf
push
push
jl
hlt
divl
sub
sub
frstor
roll
adc
fisubs
mov
ret
pop
lahf
adc
jnp
xchg
fwait
fdivl
push
or
roll
mov
mov
push
cmpsl
std
int3
fwait
nop
stos
rcll
push
and
lahf
mov
addb
fsub
ficompl
adc
push
addb
push
push
xor
sub
in
cmpsl
cmc
jg
movsb
jnp
ret
mov
testb
sub
subl
fiadds
cltd
dec
orl
pushf
dec
xchg
je
iret
push
mov
lret
jmp
mov
adc
jl
xchg
cmpsb
cmp
pop
pushf
ret
xchg
in
ss
repz
pop
pop
mov
jno
lock
loopne
jge
push
daa
sub
xchg
xlat
inc
ja
sbb
repz
loopne
mov
sti
icebp
stos
mov
test
sahf
lret
push
push
shrb
pminub
adc
sub
or
ljmp
mov
fistps
std
out
or
mov
xchg
jo
aas
sub
rcrb
test
push
push
mov
jecxz
or
mov
adc
icebp
sahf
mov
mov
dec
aad
repnz
call
jno
mov
cmp
mov
xor
jmp
inc
cli
fisttpl
jp
xchg
mov
out
jo
and
jo
fcmove
inc
out
pop
inc
int
test
nop
xchg
pushf
sbb
push
push
cli
cmp
add
sub
jg
xchg
mov
jno
aad
fsubs
dec
into
fmull
test
int3
dec
dec
outsb
test
dec
add
push
or
mov
std
sbb
jle
and
push
dec
aas
sarb
mull
adc
xchg
mov
nop
inc
push
jl
insb
push
stc
sahf
mov
mov
push
add
xchg
lea
xor
vmovaps
int3
adc
cli
and
stc
imul
cmpb
push
filds
popf
add
mov
inc
es
cmp
daa
jecxz
std
cmp
dec
icebp
mov
and
icebp
mov
mov
xchg
addr16
add
outsb
sub
shl
xchg
in
pushf
aas
xlat
adc
popa
push
or
movsb
pop
iret
mov
incb
mov
sahf
mov
inc
cltd
inc
std
in
pop
insb
ja
inc
ss
xacquire
gs
in
das
xchg
pop
adc
lea
push
inc
xor
dec
sbb
inc
push
repz
sub
jo
das
cwtl
jno
mov
or
cmp
imul
dec
aad
xchg
jbe
aas
mov
sbb
pop
js
ret
mov
scas
into
push
lcall
mov
jge
lea
imul
xchg
xorb
mov
shlb
push
and
cmpsl
and
dec
or
adc
das
pop
imul
aam
dec
jns
andb
mov
fsubr
aas
xchg
pop
mov
es
movsb
dec
cmpsl
inc
xchg
insl
xchg
je
lret
inc
in
je
and
repz
in
xchg
sahf
sbb
sub
pop
and
sbb
xchg
dec
fldenv
test
cwtl
sahf
loopne
mov
test
inc
mov
inc
mov
addb
sub
loopne
jmp
jl
movsb
xchg
sbb
cmpsl
fisttpll
jp
pop
stc
ss
mov
push
subl
addr16
push
call
and
ja
bound
adc
and
rorb
or
sub
mov
fdivrl
jbe
push
push
add
fadds
clc
adc
xchg
icebp
and
gs
daa
and
outsb
out
cmpsb
daa
mov
out
repz
dec
pop
popl
in
jmp
sahf
cmc
lods
xor
stc
subb
ss
jmp
pop
xchg
jno
stos
int
mov
pop
push
int3
adc
add
jno
add
lock
adc
leave
out
mov
xchg
mov
movsb
rorl
subl
int
and
daa
imul
xlat
jnp
icebp
pusha
or
pop
pop
rorl
add
jmp
mov
fwait
xchg
fwait
jae
roll
out
and
jge
jo
out
cmp
in
test
ja
inc
aad
dec
fimuls
mov
mov
rcrl
inc
pop
push
cmp
push
fnstcw
lret
dec
lahf
pop
add
adc
push
or
cmpsl
mov
and
inc
bound
xor
outsb
call
cmp
lods
sti
pusha
cwtl
shlb
push
aas
cmpsb
imul
and
push
pushf
shlb
fs
cld
pop
rcr
subb
mov
mov
stos
sub
or
imul
xor
leave
call
ds
pop
das
lret
sbb
lods
loopne
leave
sub
sbb
into
ja,pt
mov
popf
gs
jnp
divb
or
push
arpl
sbb
mov
add
in
ficomps
test
adcb
mov
iret
dec
push
gs
inc
push
push
push
push
mov
stos
imul
insl
cmpsb
inc
xchg
stos
loopne
cmpsl
test
pop
and
sahf
mov
add
inc
pop
xor
loopne
xor
mov
inc
inc
mov
push
cmpsb
and
push
fwait
add
in
cmc
xor
outsb
jae
sbb
and
pop
or
lods
in
sti
stc
mov
ret
test
jns
fidivrs
out
das
out
out
hlt
push
outsl
in
loopne
fiadds
jmp
mov
repz
les
push
cld
fcoms
cmp
fmul
mov
pop
or
sub
jb
sbb
movsl
mov
cmp
add
orl
test
stos
lahf
dec
sub
into
xor
mov
gs
push
push
sar
lahf
std
mov
ret
mov
sti
aad
dec
into
daa
mov
add
xchg
sub
dec
ret
mov
cli
outsl
cli
and
jne
lea
aam
mov
push
gs
popf
jne
mov
in
std
add
push
popf
inc
mov
js
cli
ljmp
lret
xchg
push
pop
jg
pop
mov
into
arpl
fbld
mulb
and
xchg
cmc
jno
mov
stos
pop
icebp
push
cmp
std
dec
lock
jbe
cmp
call
push
int3
jbe
inc
fistpl
sub
icebp
rcrb
ja
lea
sub
stos
xchg
pop
fmuls
movsl
fmul
push
ret
loopne
shll
lods
mov
push
pop
sbb
pop
daa
dec
clc
dec
mov
enter
fdivp
dec
mov
and
mov
rorl
rcl
in
mov
push
sbb
fimull
lahf
fdivs
mov
mov
mov
and
iret
xor
stos
fiadds
dec
out
dec
pop
and
loop
imul
mov
imul
sar
or
jne
mov
mov
pushl
lea
jmp
mov
push
mov
in
lock
sbb
and
jo
add
pushf
ss
pop
loope
sub
xor
imul
pop
fwait
jmp
test
sub
cmpsl
push
or
and
iret
xchg
pop
xchg
ljmp
popa
andb
in
cmp
insl
xchg
or
push
inc
jecxz
pushf
loope
sbb
sub
imul
mov
cmpl
sarl
mov
push
js
jno
movsl
mov
dec
ret
mov
nop
mov
fnstcw
or
mov
popa
arpl
movsb
fs
inc
lret
rcll
outsb
inc
inc
adc
imul
inc
sbb
aam
sbb
in
test
mov
xchg
pop
shll
inc
cmp
cmpsb
add
lcall
adc
scas
xchg
jnp
je
rcrl
add
int
and
insl
mov
xchg
inc
jge
jp
cmp
push
subb
dec
stos
add
dec
mov
pop
xchg
sbb
xchg
out
addr16
push
ret
mov
inc
add
sub
lods
clc
ficoml
ds
das
clc
in
push
je
mov
adc
pop
jb
test
xor
pop
cltd
mov
xlat
sbb
repz
fwait
sbb
cmp
sub
jbe
ljmp
aas
xchg
rcll
mov
adc
iret
sti
and
aaa
xchg
rcrl
pop
add
xor
push
add
loope
sub
hlt
cmp
adcl
sbb
addr16
add
ja
or
popl
lahf
in
int
scas
mov
iret
sub
ficompl
jbe
pushf
xor
pop
push
push
mov
push
pop
adc
data16
mov
aas
pop
pop
push
in
push
cmp
cmp
adc
popf
xchg
push
pusha
mov
sub
mov
adcl
pushl
mov
mov
xchg
icebp
sub
loop
mov
jae
pushf
aad
pusha
test
jno
imul
adcb
push
popa
ret
mov
add
xchg
lods
js
mov
push
ds
test
fdivrl
jg
push
test
mov
push
rorl
test
jp
xchg
mov
call
cmp
in
xor
mov
push
xor
pop
cld
orl
cs
pop
test
or
pop
jb
dec
cmp
cld
rorl
pop
ja
add
ja
mov
aaa
sahf
mov
push
rcl
lock
scas
mov
mov
sub
lods
loopne
lods
stc
clc
jo
pop
sub
xchg
or
mov
mov
xor
sbb
mov
mov
das
dec
pushl
lea
jmp
add
out
out
xor
call
leave
pop
mov
and
jo
jl
std
sahf
cwtl
dec
jecxz
clc
scas
push
lds
sbb
sbb
mov
gs
jmp
mov
sbb
hlt
pop
push
lcall
ficomps
jmp
inc
push
movsb
jb
xchg
xor
pop
fldcw
aad
sub
xchg
lods
jb
or
inc
or
out
inc
out
fistps
dec
or
ret
adc
das
push
jno
dec
mov
jp
lods
lcall
push
mov
rcrb
pop
or
pop
inc
int
jge
pop
insl
and
cmp
sti
mov
shrb
icebp
ss
sub
mov
xchg
test
cmp
ja
mov
fiadds
fwait
cmp
aam
mov
mov
fcmove
sub
loope
adc
fld
orl
mov
add
test
jg
popw
pusha
outsl
xor
xlat
arpl
lds
jmp
orl
xor
xor
fmull
add
lods
xchg
pop
sub
mov
jbe
imul
pop
bound
pop
jl
in
in
mov
fmull
aad
cmpl
sub
mov
nop
dec
popf
enter
xor
ds
push
mov
ret
sahf
imul
mov
ljmp
sub
jne
add
lea
imul
sub
aas
jns
jmp
pop
loopne
xchg
nop
and
ja,pn
cwtl
inc
cmpsb
push
add
mov
decb
add
stc
push
push
js
addr16
mov
aad
outsl
fdivr
out
push
or
repz
hlt
stos
sbb
dec
xor
fsubrs
xlat
shlb
repnz
sub
shrl
mov
push
repnz
lret
mov
sub
in
leave
lods
mov
jecxz
pop
inc
and
mov
push
stos
adc
rorb
dec
rcrl
repz
inc
data16
mov
loope
faddl
lret
jo
pop
sub
adc
das
into
imul
sub
jno
popf
mov
aas
addr16
mov
lahf
jns
pop
in
mov
pop
outsl
jnp
or
inc
add
stc
dec
into
out
mov
imul
movsl
push
fwait
xor
out
push
nop
pop
or
adc
sbb
dec
or
mov
filds
and
pop
stc
mov
add
rol
arpl
dec
pop
mov
and
lahf
add
hlt
jp
xchg
popa
je
cli
mov
fcmove
inc
inc
xchg
mov
rcrl
adc
add
je
lock
cmp
mov
push
xor
int
bound
imul
mov
add
xor
add
xor
jmp
push
pop
jmp
cmpsb
jnp
or
lahf
jo
int3
in
lods
cmp
loop
jo
jge
jo
pushf
pop
sbb
leave
or
sahf
fdivrs
adc
xor
divb
lds
aad
mov
inc
insb
icebp
test
pop
dec
in
add
imul
arpl
and
adc
mov
cli
in
and
leave
mov
fsubrl
jne
insb
push
and
jp
jmp
push
push
mov
lahf
nop
mov
add
out
push
adc
lret
mov
repnz
pop
addr16
xchg
xor
fs
fs
push
movsb
sbb
jecxz
int3
mov
in
imul
pushf
aaa
sbb
out
fdivrl
lods
push
fwait
xor
icebp
jl
data16
in
popf
in
aam
mov
sahf
dec
imull
aaa
push
in
mov
adc
addb
or
adc
mov
mov
inc
inc
cld
push
mov
mov
xor
lahf
enter
lret
aas
out
pop
lret
pop
mov
test
imul
dec
insb
push
sbb
xchg
js
mov
imul
shr
push
imul
xor
mov
in
subb
call
xchg
mov
and
push
iret
lods
jo
fcmovbe
jb
daa
xor
shlb
les
in
clc
mov
dec
push
push
outsb
xchg
push
shll
pop
add
leave
test
aam
call
test
loop
and
xchg
push
arpl
pop
or
jo
sub
xchg
mov
adc
test
jecxz
and
inc
outsl
sub
lds
fmuls
mov
dec
and
fistpl
sbb
adc
add
ss
out
out
std
dec
adcl
lock
sub
arpl
sbb
dec
cmpsl
mov
shl
imul
pop
xchg
inc
push
int
inc
ror
mov
aad
bound
in
jp
mulb
nop
movsl
sbbl
adcl
aas
loopne
imul
test
mov
pop
lret
push
scas
inc
gs
or
scas
addr16
and
stos
cmpsb
insb
popf
sbb
movsl
out
lds
pop
mov
mov
xchg
daa
jge
inc
add
xor
mov
icebp
sti
out
add
cmp
gs
jo
inc
xor
mov
cmp
xchg
sub
fcmovu
adc
ficomps
scas
mov
mov
test
imul
add
sbb
pushf
aaa
dec
loope
sbb
sub
jnp
sti
cmp
jb
jbe
adc
mov
jne
mov
push
cmp
and
xchg
popf
scas
icebp
adcb
stc
push
movsl
in
jae
mov
adc
sub
add
enter
gs
mov
cltd
sbb
mov
shl
stc
dec
daa
or
mov
xchg
enter
sar
jae
das
aad
call
mov
mov
jmp
out
mov
ja
add
xchg
out
jo
and
jo
or
test
xchg
add
rorb
mov
out
cmp
iret
or
insl
sbb
out
mov
das
mov
std
movsl
dec
cwtl
cwtl
xchg
inc
stos
movsl
jae
adc
sbb
lret
or
add
mov
lahf
loop
outsl
rcrl
mov
add
stc
lods
popa
scas
imul
pop
mov
pop
jnp
sbb
loopnew
jle
mov
sti
sbb
lods
xchg
add
jp
dec
or
ds
add
or
fiadds
or
sbb
enter
ds
push
imul
pop
sbb
push
push
pop
sbb
in
sbb
add
xor
cmp
xchg
stos
add
es
sub
cs
inc
stc
imul
dec
test
loope
and
pop
pop
or
xor
pandn
xchg
in
adc
enter
pushf
imul
cli
mov
mov
add
shrl
or
nop
mov
inc
fs
hlt
push
xchg
and
ss
cmc
add
or
mov
sbb
mov
mov
icebp
add
mov
adc
and
fidivrs
jo
or
push
and
lods
test
cmc
add
in
lret
clc
pop
pop
popa
cli
inc
movsb
cmp
out
cmc
adc
push
mov
stc
sub
cmp
or
fdivr
push
jo
mov
dec
and
xchg
mov
mov
pop
testb
lock
outsb
pop
mov
dec
jnp
sbb
mov
rcpps
xchg
push
cld
bound
sbb
lahf
add
jmp
adcl
or
jl
lret
ret
mov
jae
shl
addr16
neg
dec
fcom
sub
mov
repz
inc
loopne
lcall
mov
mov
in
pushf
arpl
lcall
inc
popf
push
xchg
jns
jecxz
sbb
cs
mov
popa
jmp
adc
mov
imul
or
mov
ret
xor
pop
mov
aas
ss
xor
xor
push
xchg
mov
pusha
mov
or
loopne
std
jmp
in
pop
lret
inc
mov
push
idivb
jno
inc
hlt
push
mov
in
pop
jne
or
insl
cmp
leave
outsl
ficomps
lcall
cli
pop
icebp
adc
ja
or
rcll
aaa
gs
jne
aam
popa
push
jmp
ja
imul
mov
sbb
cmp
int3
inc
mov
and
or
and
xchg
add
pop
xchg
mov
xchg
into
hlt
xchg
adc
cmp
sti
jg
imulb
adc
fstps
out
xor
adc
mov
mov
add
pop
pop
pop
leave
ret
push
mov
sub
push
subl
mov
sbb
mov
mov
mov
sub
imul
mov
movl
neg
movl
mov
mov
or
mov
add
mov
adcl
mov
xor
xor
mov
sbb
mov
jmp
arpl
cmc
xchg
cmc
arpl
pop
das
imul
cmpsl
mov
xchg
jo
lahf
jge
jo
iret
cld
lock
jge
jle
sbb
divl
pop
repz
lcall
xor
cmp
test
jno
sbb
test
ffree
push
or
and
cmpsb
mov
les
stos
fsubs
loop
ja
mov
mov
stos
mov
sub
adc
pusha
stos
movsb
repnz
mov
xchg
pop
mov
pop
arpl
mov
xchg
rclb
imul
mov
hlt
cmp
add
push
sbb
aaa
pusha
repz
dec
jno
mov
push
push
pop
mov
dec
xor
cmp
test
in
xor
pop
jge
xor
dec
jl
dec
and
outsb
imul
ss
ja
xor
mov
jge
out
or
add
pushf
push
fwait
or
pusha
or
out
rcll
dec
or
and
sub
cmp
mov
cmp
pop
xor
outsb
adc
mov
cmp
sub
push
lds
je
push
xchg
inc
add
dec
pop
cmpsl
inc
icebp
cltd
scas
bound
jl
daa
nop
out
lea
insl
stc
leave
fs
sub
jo
cmpsb
into
div
stos
jp
adc
fsts
xchg
data16
adc
sti
jb
xchg
ja
mov
mov
aad
mov
out
push
add
cmpsb
sub
mov
fwait
adc
xchg
adc
or
lahf
pushl
jbe
mov
add
negl
mov
xchg
xchg
repnz
cs
jmp
pop
and
sub
mov
pop
push
fnsave
mov
inc
into
xor
mov
adc
dec
xchg
xor
clc
shl
mov
mov
sub
mulb
stc
dec
adc
jp
stos
push
xchg
xchg
push
dec
or
pop
cmc
test
mov
mov
jg
aam
pop
adc
repz
cmp
pop
popf
pop
dec
mov
cwtl
adc
out
shrl
push
adc
and
je
pop
pop
xchg
int3
adc
sub
in
pushf
call
add
jmp
test
mov
jl
movsb
xchg
pop
fbld
lock
mov
lock
xchg
les
or
mov
xor
dec
pop
ret
sbb
or
cld
std
lcall
mov
insl
fadds
test
imul
and
stos
sub
ljmp
test
mov
sbb
adc
gs
jl
aas
loope
mov
cltd
jae
fidivrl
mov
je
scas
js
mov
sbb
jbe
imul
inc
fldenv
ffree
inc
pop
push
mov
ret
xor
incl
xchg
pushf
xor
cs
sub
cmp
mov
sub
and
dec
jnp
pop
inc
cmp
cmpsb
scas
loope
inc
dec
xor
rorl
push
mov
push
icebp
test
xchg
sahf
clc
jne
cmp
or
sub
adc
ss
pop
lcall
inc
xchg
mov
mov
xor
xchg
xchg
dec
cmp
push
push
aam
xchg
xchg
mov
sbb
or
stos
fwait
adc
or
lcall
dec
rol
shll
or
mov
mov
and
xor
adc
add
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
adcl
jmp
xlat
mov
mull
mov
in
xchg
mov
lahf
jge
jo
fwait
in
mov
jmp
imul
js
sbb
stc
lods
push
in
lahf
icebp
subl
cmp
loopne
mov
ja
push
mov
pop
adc
push
icebp
imul
loopne
and
movsl
lock
popf
push
or
gs
and
mov
out
ds
inc
stos
sarb
out
add
xchg
jmp
out
adc
jb
jg
jmp
rorl
insb
dec
cmp
call
repz
mov
out
cmp
push
and
cmp
push
add
lsl
cmp
btcl
lret
in
cmpb
cmp
in
mov
push
mov
outsb
sub
enter
fisubs
cmp
std
inc
jl
test
cmp
outsb
call
adc
fimuls
sub
lcall
data16
push
stc
shrl
testl
cmp
sub
cwtl
pop
cli
adc
mov
xchg
nop
sub
sbb
hlt
dec
inc
rcrb
mov
and
cmp
mov
push
ret
lahf
jl
leave
cmp
daa
pop
mov
mov
sub
test
pop
push
add
sbb
fadds
in
jae
cmp
pop
cmp
xor
add
addr16
push
ret
daa
aas
mov
push
cmp
sbb
ja
std
hlt
add
xor
iret
ss
sbb
dec
or
and
sub
cmp
mov
pushf
mov
arpl
sti
xor
ret
dec
or
je
add
cmpsl
cmp
fsubl
inc
xchg
cmc
jle
push
sbb
repnz
rorb
sub
and
push
jnp
repnz
cmp
loope
sub
stc
push
loopne
dec
sub
xlat
push
and
or
mov
adcl
fucom
xor
subb
aad
jbe
das
das
aas
outsl
scas
cmp
shrb
ret
test
adcb
enter
sti
dec
pop
or
shl
sub
je
dec
add
icebp
xlat
rorl
pop
add
push
jae
cmpsb
loopne
es
lea
fsubr
orb
adcl
out
add
fwait
movsl
mov
gs
sub
mov
std
adc
xchg
xchg
cwtl
mov
adc
sti
pushf
adc
adc
pop
in
mov
xor
lret
pop
std
lods
xor
or
mov
jge
push
lods
push
cld
inc
jg
mov
lods
cs
sub
cmp
mov
cmpsl
pop
pop
jmp
scas
inc
mov
cltd
mov
ljmp
mov
fldl
inc
sti
lods
mov
jns
cli
sbb
dec
sub
mov
cwtl
mov
jmp
inc
pop
iret
sub
and
fs
std
mov
in
fcmovbe
imul
jne
fisubs
sub
fisttpl
cmc
fsts
fdivrs
repz
pop
xor
std
aam
ljmp
rclb
and
mov
lods
out
jle
or
ljmp
aam
stc
insb
in
mov
test
movl
movl
adc
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
add
movl
andl
jmp
into
iret
cmpsb
cmp
sbb
xchg
jo
lahf
jge
jo
pop
sub
in
mov
add
ds
jle
mov
jmp
lcall
and
mov
cmp
mov
ja
mov
xorl
jle
xor
lea
enter
aam
xchg
add
icebp
jns
int
hlt
inc
jge
mov
pop
jecxz
push
lret
xor
lcall
adc
jae
mov
addb
lock
adc
sbb
jns
mov
jle
cmp
add
xor
lret
mov
mov
mov
or
xchg
xchg
std
fwait
out
imul
in
int3
xchg
dec
mov
xchg
xor
lahf
sahf
test
mov
push
cmp
in
rclb
loopne
aad
mov
cmpsl
mov
sub
inc
pop
scas
andl
sbb
in
add
hlt
jg
gs
adc
rorl
add
movsl
aas
mov
cmc
and
sub
xchg
lods
ljmp
mov
aas
xor
aad
cmp
les
pop
adc
fisubrs
adc
in
mov
out
mov
jae
icebp
loop
pop
addr16
xor
jecxz
lcall
push
cwtl
cmp
and
inc
mov
jb
add
movsb
stos
out
sub
mov
jns
sbb
xchg
sub
cmpsb
notb
cmp
movsl
cmpsl
jmp
cmp
pop
xor
sub
repz
lcall
push
fdivs
out
lret
cs
mov
dec
scas
lahf
mov
push
loop
rolb
stc
jp
mov
cld
sub
pop
popf
xchg
push
sahf
pop
scas
or
arpl
adc
outsl
lcall
popf
mov
out
push
fidivs
and
cmp
jae
sub
test
aaa
cmp
repz
inc
mov
adc
push
jl
mov
and
aaa
inc
push
loop
push
jmp
das
mov
push
jo
and
push
lret
adcl
sub
dec
sbb
push
int3
loope
inc
lods
mov
test
out
jecxz
sbb
adc
push
jo
insl
ds
mov
fsubrs
adc
xor
xor
test
xchg
ficompl
adc
lea
in
sub
sahf
xor
adc
jmp
xchg
jnp
or
mov
add
divl
push
push
daa
jp
sbb
test
leave
dec
mov
add
jb
popf
jg
fcoml
das
dec
das
sbbb
int3
mov
scas
lds
std
and
xchg
lret
pop
push
jae
push
fwait
mov
sbb
and
in
out
addr16
in
lcall
sbb
call
out
xchg
out
sti
js
push
sbb
shlb
movsl
sub
sbb
lcall
scas
nop
popa
scas
dec
sbb
subl
ja
rorl
rorb
pop
inc
pop
rorb
cld
aam
icebp
mov
test
cld
aam
lds
xlat
mov
test
pop
pop
jb
sbb
push
lret
push
in
mov
mov
and
push
xchg
adc
and
aaa
bound
adc
dec
xor
fs
fstl
mov
mov
inc
int3
cmp
pushf
clc
movl
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
movl
adc
mov
xor
sub
mov
add
movl
cmp
movl
je
movl
push
movl
jmp
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xorl
sub
mov
add
mov
jmp
addr16
xchg
jno
ja
dec
in
std
and
cmp
icebp
jo
lahf
jge
jo
das
dec
scas
mov
subl
bound
or
add
stos
ret
pop
xor
xor
xor
cld
cs
sub
pop
add
pop
aam
cwtl
je
shrb
mov
outsb
push
mov
push
mov
in
sbb
gs
and
int3
jbe
nop
inc
mov
push
adc
add
xchg
mov
xchg
mov
pop
xor
pop
dec
xchg
lea
and
scas
mov
addl
out
pop
pop
xchg
inc
push
mov
xor
mov
cmp
fwait
jl
cmp
cltd
loop
cwtl
daa
mov
inc
ja
in
mov
xor
jl
scas
lods
fwait
out
cmovns
push
mov
or
dec
jecxz
pop
push
pop
cmp
ret
bound
sbb
push
popa
sub
xor
mov
sub
shll
xor
addr16
stc
dec
stos
sub
imul
in
push
push
pop
jmp
jae
xor
movsl
and
les
jge
mov
insb
movsb
inc
dec
lahf
or
jmp
jae
fidivs
mov
jp
pop
cmc
push
adc
js
rclb
popf
and
or
mov
fwait
gs
in
mov
jb
jl
hlt
orb
xchg
and
mov
push
and
dec
add
das
cmpsb
adc
loopne
sahf
enter
sbb
shrb
faddp
out
out
ret
xchg
jne
adc
inc
cmp
jp
test
js
ret
idivl
mov
push
lcall
movsl
ljmp
or
or
cmp
lahf
jno
pusha
push
test
int3
xchg
inc
repz
or
aas
xor
int3
pop
sbb
out
xchg
pop
add
mov
and
or
mov
ret
mov
clc
gs
insb
xchg
mov
push
cmp
add
imul
jo
lcall
push
insb
xchg
sbb
ret
roll
inc
cwtl
jg
and
inc
xor
in
hlt
outsl
mov
int
fisubrs
es
rol
into
mov
test
cld
mov
dec
sahf
cmp
sbb
inc
or
imul
or
inc
movsl
adc
cmp
xor
enter
scas
adc
movb
dec
ret
cld
stc
insb
popa
loopne
xor
je
popa
lods
add
add
and
loop
and
mov
mov
sub
or
in
insl
mov
ret
enter
pushl
xor
push
pop
sub
test
and
call
lea
shl
test
cli
into
in
ret
dec
movsb
or
mov
ret
stc
mov
push
scas
adc
mov
jno
jo
adc
pushf
sub
mov
stc
fildl
inc
or
aas
adc
out
sub
shll
addr16
inc
mov
jne
or
xchg
in
jnp
mov
and
fwait
and
aaa
xchg
icebp
mov
and
aam
mov
lods
pop
or
jmp
xchg
mov
push
inc
mov
inc
out
inc
in
or
stc
int3
mov
jae
jg
adc
fmul
fs
and
cmp
popf
mov
rclb
mov
mov
test
xor
xorl
add
movl
cmp
movl
jb
mov
sbb
mov
xor
sub
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
pushl
call
mov
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
add
sbb
add
imul
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
jmp
xor
mov
mov
jae
jg
ja
mov
ds
jo
lahf
jge
jo
cltd
push
cli
aas
jg
jno
or
sbb
ret
sahf
sbb
mov
pop
insb
xlat
clc
jecxz
ret
lahf
idivb
je
je
mov
push
adc
sti
fsubp
mov
jo
inc
adc
cmp
pop
insb
pop
stos
ret
xor
jge
cltd
call
pop
ja
inc
bound
aad
push
out
test
dec
inc
xlat
ss
nop
divl
insl
ret
shlb
jo
inc
pop
rol
or
mov
dec
xchg
pusha
test
std
jae
dec
sbb
pop
jne
xorb
xor
cltd
mov
fsts
mov
aas
int3
imul
mov
cld
push
and
jmp
push
into
or
fidivs
sbb
cmc
mov
push
stos
mov
inc
sbb
dec
adc
addr16
mov
ret
inc
push
fldenv
mov
push
push
cmp
ficomps
sbb
or
lds
push
lahf
mov
pop
je
test
mov
pop
dec
out
notl
outsb
push
test
in
out
lret
stos
ljmp
or
jae
inc
out
test
cmp
ljmp
int
mov
mov
inc
push
jne
sub
cli
dec
insl
out
pop
test
scas
mov
mov
inc
movsl
fsubs
ret
sub
mov
jg
fstps
into
add
push
jne
daa
adcl
cmp
hlt
push
dec
fldt
test
inc
out
or
out
or
js
lods
jle
xchg
xor
jp
je
xor
jg
arpl
xor
icebp
adcl
sbb
aas
insl
rclb
sbb
dec
xchg
sbb
dec
mov
rcl
pusha
inc
add
aas
jae
add
adc
jmp
imul
lods
inc
roll
add
test
cmpsb
and
inc
xchg
dec
sub
lcall
movsl
sub
dec
test
loopne
es
cmp
movsb
inc
adc
outsb
test
test
pusha
daa
mov
dec
add
popa
push
add
dec
out
fistl
insb
mov
pushl
cwtl
mov
xlat
call
imul
cmp
jmp
sub
mov
loope
xchg
cmp
mov
shll
sarb
fbld
mov
and
mov
xchg
aas
shrl
sbb
cltd
dec
imul
test
xor
rcrb
sbb
push
pop
jns
jno
lds
loop
xchg
lahf
inc
mov
xchg
add
jb
xchg
sbb
daa
pushl
xchg
lret
inc
sub
fbstp
bound
and
mov
loop
add
xchg
sbb
jbe
push
punpcklbw
aad
adc
imul
inc
push
jno
inc
decl
push
or
pop
jns
inc
clc
jp
sub
or
outsb
xor
in
pop
lret
add
fidivl
fs
jl
and
mov
insb
add
push
mov
cmc
aaa
in
mov
imul
cmc
mov
or
rsm
mov
inc
add
fisttps
test
lret
inc
xchg
pusha
maxps
fisubs
inc
aam
dec
es
mov
mov
repz
das
jne
add
jmp
shlb
sub
lret
cmc
leave
dec
pop
mov
jge
jo
repnz
loope
stc
gs
mov
fildll
adc
nop
add
rolb
ds
es
ljmp
add
push
and
ljmp
scas
es
jnp
or
pushf
hlt
push
fsubrl
add
push
jl
mov
inc
shrb
xchg
and
push
iret
es
mov
dec
fldenv
lret
jb
sub
mov
into
fdivs
dec
add
leave
addl
daa
adcl
adc
movsb
jmp
outsl
push
lods
ret
jne
inc
lods
xchg
cltd
xchg
xlat
insb
nop
push
push
hlt
mov
mov
mov
sbb
add
push
mov
loop
iret
push
push
sti
cmp
xchg
mov
pop
lea
mov
imul
ret
add
cmpsb
into
mov
mov
stc
xor
fcomi
insl
mov
data16
popf
pop
push
push
out
mov
imul
jbe
push
push
xor
stos
decb
or
push
data16
mov
pop
pop
insb
jg
sub
aaa
jbe
lret
mov
gs
cltd
sub
or
in
ret
or
sub
in
insl
jb
cs
adc
fisubs
lret
pop
dec
lock
sti
in
insl
pop
jge
je
pop
xchg
jo
out
mov
add
dec
aad
es
pushf
inc
mov
or
je
imul
in
dec
imull
adc
push
add
xor
mov
in
pushf
ljmp
mov
cmp
xor
enter
dec
dec
cmpsl
cmp
dec
shrl
lret
pop
sub
lahf
xchg
jo
mov
cld
rcrb
test
cmp
pop
fdivs
jmp
lahf
jmp
aas
test
aaa
and
xchg
in
lea
movb
jnp
jle
sahf
sarb
lds
push
std
push
jmp
ret
inc
sub
das
scas
cmp
xchg
pop
test
popa
add
dec
or
push
dec
cld
pop
or
jle
mov
aaa
das
mov
pop
xlat
lds
movsl
nop
ret
and
movsl
xchg
push
mov
push
fwait
in
mov
push
insl
push
sub
ja
jns
loop
xor
loopne
stc
cmpsl
test
je
dec
jge
push
inc
mov
fincstp
cmp
nop
add
call
leave
add
fadds
into
push
dec
jne,pt
stc
push
lock
out
pop
stc
push
aaa
cmpsb
cmpb
fcmovnbe
mov
cwtl
cwtl
lods
repnz
cmp
insl
jg
dec
inc
sub
repnz
ret
ds
clc
rcrl
arpl
mov
jmp
movsl
sahf
lods
imul
insb
pop
xor
and
jb
and
and
mov
incb
lahf
sahf
xchg
loop
ds
hlt
mov
sbb
shlb
int3
sbb
jns
cmp
pop
subb
mov
sub
mov
test
and
sti
inc
pop
mov
add
push
push
adc
fnstsw
pop
pop
inc
inc
outsb
inc
aaa
pop
bound
push
ds
sbb
mov
jmp
push
fsubrl
test
rolb
dec
push
sti
inc
cmc
add
fnstcw
stc
mov
movsl
mov
dec
add
ret
shlb
ljmp
aaa
imul
lock
cmp
ja
mov
jmp
mov
jmp
cmp
mov
loope
loop
pop
movsl
leave
or
lahf
jge
jo
or
adc
rclb
scas
inc
data16
mov
cmpsl
adc
rcrb
mov
push
sbb
xchg
addl
fsubr
sbb
test
sbb
sbb
fnstsw
mov
test
in
sub
xor
lahf
in
jbe
stos
jle
jecxz
or
lods
in
cltd
add
pop
dec
mov
pushw
mov
mov
mov
insl
hlt
fmull
mov
mov
mov
and
imul
jecxz
add
push
add
negb
adc
test
jae
ja
cmpsb
cmp
xchg
pop
fisttpll
cwtl
jp
cmp
mov
cltd
sti
aam
xchg
push
xor
sub
dec
fbld
fiadds
xchg
push
outsb
rorl
push
dec
and
ficoms
or
push
mov
insl
jns
and
xchg
adc
sub
xor
push
or
mov
movsl
leave
xor
insb
ficompl
inc
out
pop
inc
insb
addr16
mov
andb
leave
and
in
xor
pop
sbb
sahf
bound
clc
mov
aam
cmp
or
push
adc
jp
arpl
sar
int
enter
cmp
mov
and
mov
jmp
dec
sub
dec
jl
mov
insl
sbb
jg
icebp
pushl
cwtl
push
sub
int3
dec
movsl
mov
into
jecxz
xchg
xor
jns
add
scas
mov
push
in
dec
aam
mov
xchg
rcrl
push
int
flds
call
je
jne
xor
pop
dec
cmp
nop
sbb
int
ffree
xchg
cmp
sbb
imul
sarb
into
cmp
pop
ss
test
jnp
inc
inc
push
or
iret
or
into
and
sti
mov
cld
pop
mov
push
xchg
cmp
mov
andb
icebp
test
dec
mov
mov
outsl
ljmp
cmpsb
in
dec
insl
mov
push
xchg
or
bound
loop
mov
stos
sub
hlt
or
sub
sub
insl
repnz
dec
rorl
ja
outsb
lret
mov
ret
pop
imul
insb
iret
adc
dec
mov
fidivs
mov
sub
lods
pop
leave
xor
enter
dec
lea
xor
repz
les
or
inc
aas
sub
and
jmp
mov
mov
jno
pop
pop
add
cltd
loopne
popa
push
jmp
add
xchg
cmp
aam
pop
lods
ss
and
outsb
or
cmp
les
sub
add
aad
xlat
lods
cmp
iret
fisubrl
ret
and
inc
mov
icebp
and
out
dec
mov
fwait
push
xchg
outsb
adc
ljmp
fisubrs
mov
mov
int3
mov
test
add
xor
movl
insl
aad
sub
lret
call
cmp
cltd
xchg
fs
adc
scas
test
mov
adc
push
pop
xchg
adcb
push
jp
movsb
lds
cwtl
push
movsb
test
jge
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
xchg
fcomi
push
jb
mov
shlb
cmp
pusha
xorl
jge
jo
scas
xor
adc
dec
mov
add
hlt
or
mov
cltd
inc
sbb
mov
je
and
cmpsb
cs
out
insl
aas
mov
dec
sub
leave
orb
xchg
and
imul
int
push
mov
jle
jmp
out
and
sbb
sbb
pop
lock
hlt
xlat
cmp
cmc
adc
pop
adc
add
shll
push
sbb
and
sbb
insl
pop
jecxz
jnp
pop
gs
mov
je
lods
cltd
insb
and
into
mov
mov
xlat
mov
shlb
cmp
cmp
xchg
push
or
movsb
subb
or
or
inc
test
or
aad
call
xor
pop
std
mov
push
jo
or
je
or
or
aam
push
test
fisubrl
push
pushf
loop
mov
xchg
adc
repz
je
inc
jb
cmp
roll
jae
and
iret
add
pop
ljmp
daa
mov
dec
push
insl
jp
inc
or
sbb
ja
and
pushf
xorb
jmp
mov
add
mov
or
cwtl
nop
roll
sub
sti
mov
xor
imulb
mov
leave
adc
xchg
repnz
mov
xor
cmp
jle
pop
cmc
push
enter
out
lahf
je
sti
loopne
std
loopne
clc
dec
xor
xchg
lods
xchg
adc
aam
jno
inc
sub
push
jns
int
sbb
sub
imul
ss
jb
fistpl
mov
jge
arpl
loope
add
cmp
filds
mov
roll
xchg
pushf
cltd
jl
ss
testb
bound
and
pop
add
pop
out
aaa
push
pusha
sarb
xchg
fcoms
ret
xchg
daa
fwait
mov
push
xchg
shll
enter
cmp
xor
inc
xchg
loope
cwtl
sbb
mov
sub
sub
sbb
jbe
mov
sbb
mov
push
cwtl
lock
fisubs
in
or
scas
or
bound
jp
lret
sbbb
jp
push
bound
push
loop
cs
sbb
ds
jmp
stos
call
leave
xor
xchg
sbbb
pushf
in
scas
add
push
cmp
xchg
lods
xor
sbbb
lea
pop
inc
mov
cmp
out
or
push
push
fcoms
push
insl
fmuls
pop
fdivl
iret
stc
sbb
sub
cld
jle
jb
push
sub
es
mov
jnp
fimuls
pop
aaa
sarb
rorb
mov
and
sub
adc
jecxz
xor
mov
mov
or
scas
dec
leave
outsb
mov
mov
bound
out
dec
imul
outsb
les
in
pusha
push
sub
mov
or
lock
hlt
sub
sbb
movsb
sbb
cmp
push
jg
push
mov
pop
add
lds
stc
cmp
xor
mov
ss
xor
popf
adc
pusha
mov
and
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
jmp
xchg
dec
inc
inc
inc
push
xchg
dec
fdivs
adc
jo
lahf
jge
jo
dec
add
jo
jbe
leave
std
add
lock
in
rolb
stc
adc
stos
or
lods
rorb
test
xchg
add
mov
add
shlb
pop
push
repnz
mov
inc
cmp
xchg
scas
out
aaa
sub
and
mov
cmpsl
lea
inc
andl
push
lock
cmp
andb
fwait
dec
out
jp
xor
pop
dec
sub
ret
imul
push
mov
fwait
inc
mov
lret
fwait
cli
in
push
mov
cmp
into
daa
aaa
mov
xchg
mov
push
insl
and
dec
in
dec
add
jne
adc
inc
js
push
in
pop
int3
jge
xchg
or
jge
xchg
sbb
mov
adc
orl
pop
jge
enter
xor
push
mov
push
jnp
out
dec
and
dec
sbb
xchg
into
xchg
xor
mov
cmp
or
jns
pop
imul
out
dec
ljmp
inc
jle
ret
es
pop
outsb
rorl
mov
int
ficomps
cld
int3
xlat
popa
add
push
jns
pushf
adcl
and
xor
pop
addr16
lods
jecxz
push
andl
movsl
in
sub
das
stos
pop
popf
cmp
or
test
cmp
push
les
adc
lret
sahf
mov
push
lret
jl
negl
sub
push
adc
cltd
mov
sarl
dec
jae
sti
mov
lods
jnp
mov
int
mov
imul
add
repnz
sub
ds
popf
mov
jge
push
into
pop
mov
or
dec
idivl
sarl
sub
stos
pop
stos
jno
imul
sbb
inc
push
xor
lea
js
mov
xchg
pop
movsb
jns
psrad
out
adc
sub
lds
daa
out
cwtl
imul
aad
ret
out
fsts
mov
ljmp
icebp
in
mov
cmpsl
out
scas
jp
rolb
jge
push
mov
shl
lret
int
stos
mov
gs
sbb
fildl
mov
sar
adcl
pop
lahf
sub
and
lea
pop
jo
push
imull
pushf
stc
mov
xlat
rolb
push
pop
push
ror
imul
pop
xor
in
dec
jno
cwtl
adc
adc
add
out
cmc
sub
mov
dec
outsb
out
dec
bound
add
test
xor
push
loop
jmp
add
ffreep
out
xchg
and
movsb
pushf
aad
ljmp
xchg
pop
add
sbb
lods
idivb
xor
push
lcall
mov
in
js
mov
jnp
pop
xor
sbbl
mov
inc
inc
out
aad
rolb
xchg
inc
inc
cs
jo
aaa
mov
loope
jnp
sbb
loope
cmpsl
lahf
sbb
add
xchg
mov
sbb
repnz
mov
mov
dec
push
in
fs
sub
xchg
rcll
push
pop
sub
xchg
insl
shlb
sub
push
repnz
aaa
popf
scas
mov
inc
sub
or
out
and
xchg
pop
dec
dec
mov
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
lcall
out
ds
jno
inc
mov
lahf
jge
jo
iret
hlt
and
test
sub
mov
gs
shr
push
repnz
push
imul
add
cwtl
stos
push
fs
inc
pop
add
fs
add
mov
push
lcall
popa
dec
mov
cld
je
and
pop
push
scas
loop
and
pop
or
inc
leave
ja
insb
push
loopne
add
mov
lods
and
push
adc
pop
cmp
push
js
les
xor
rcr
add
loop
shr
pop
mov
int
sub
jecxz
lds
stos
stos
out
sahf
xchg
inc
hlt
add
pop
rorl
je
push
inc
and
cmp
clc
je
xor
cltd
inc
aad
cmpsb
mov
xchg
sahf
aas
cmp
push
test
test
pop
xor
in
mov
outsl
stos
insb
dec
clc
cmc
movsl
mov
out
movsl
sub
cli
pop
sahf
jle
dec
out
and
rorl
icebp
jnp
mov
mov
insl
xchg
adc
shrb
lock
mov
das
jmp
cmp
mov
pusha
iret
push
push
jp
adc
adc
test
orl
xor
inc
popf
or
cmp
arpl
nop
dec
cmp
clc
push
shrl
js
sub
adc
je
or
lock
sbb
mov
adc
in
inc
fldl2e
stc
mov
inc
call
sub
inc
fcoml
dec
inc
cltd
pop
mov
xor
aad
mov
hlt
dec
and
add
fsubr
lcall
cwtl
loop
out
adc
in
xchg
aaa
inc
pop
dec
fidivl
xor
xlat
xor
lahf
lret
xor
mov
loop
jns
lea
sub
mov
movsl
pop
cmpl
stc
mov
fistps
scas
sahf
test
pop
in
call
scas
mov
cld
push
pop
movsb
es
adc
aaa
adc
or
inc
xchg
mov
dec
mov
jae
outsb
mov
cmp
fwait
jae
add
or
je
cmp
stos
mov
rolb
idiv
xchg
mov
jae
push
andl
jecxz
rcrl
aaa
scas
inc
inc
cmp
inc
lods
vpmacssdd
push
inc
mov
inc
inc
pop
xor
aas
inc
ss
pop
lret
mov
clc
jno
orb
add
cmc
aam
mov
push
cmpsb
adc
or
add
jno
xchg
cmp
dec
movsb
lret
je
mov
xor
mov
ds
jl
push
nop
movb
cmpsl
bound
js
inc
imul
orl
adc
push
out
aam
inc
cmpsb
decl
jb
or
pusha
xchg
inc
cmpsl
in
xor
cld
stos
xor
out
push
ret
pop
pop
outsl
loop
xor
mov
add
mov
xor
cld
add
push
inc
mov
and
out
cmpsl
clc
dec
mov
xlat
hlt
pusha
arpl
sub
xchg
test
addr16
int3
inc
add
inc
cli
or
loopne
pop
dec
icebp
jle
xor
loopne
cmp
add
jo
xchg
aam
mov
and
fbstp
popf
in
push
fidivs
ds
adc
push
mov
jno
lahf
into
cs
xchg
pop
out
push
fwait
adcl
loop
rolb
push
in
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
xchg
dec
push
adc
push
xchg
dec
lock
pop
push
mov
lahf
jge
jo
sbb
test
and
repnz
addr16
mov
stc
call
dec
pop
fisubrl
mov
mov
adc
rcrl
mov
js
mov
xor
cmp
cvtps2pd
inc
mov
pop
adc
aas
and
adc
in
aad
pop
iret
jg
cmp
andb
pop
push
dec
push
iret
xchg
sub
fbld
and
and
pop
neg
add
in
push
lods
mov
and
push
cmp
push
shll
scas
inc
jmp
dec
pop
insl
pop
pop
add
mov
adc
pushl
lahf
into
test
lock
icebp
jbe
inc
inc
add
pop
sub
outsl
bound
outsl
incb
pop
adc
mov
repz
out
mov
pusha
std
divb
loop
jp
jge
sarb
loopne
cwtl
or
dec
jb
mov
fsubp
fiaddl
or
popa
jns
cmpsb
sbb
add
xor
flds
inc
loop
dec
dec
pop
xchg
ror
fadd
in
lret
mov
cmp
xchg
cmp
xorb
scas
lcall
mov
xlat
mov
popf
rcrb
or
push
notl
loopne
sub
dec
jne
into
inc
sub
pop
stos
outsb
xchg
and
mov
out
mov
mov
sets
rcll
aam
out
das
pop
xchg
imul
sahf
inc
callw
cmpsl
push
cmp
sub
sbb
jl
xchg
sub
cmc
mov
cmp
test
xchg
mov
sahf
hlt
js
sub
addl
pushw
repz
xchg
xor
ljmp
int3
xor
and
pop
test
xor
jo
fistpl
jne
sete
out
cmpsl
add
mov
data16
mov
sbb
lret
adc
rcrl
cmp
mov
dec
movsb
bound
cmp
pop
sub
pop
aad
lea
fwait
mov
cmpsb
nop
cld
mov
push
call
push
and
ds
pop
scas
inc
sbb
add
nop
xor
insl
aaa
xchg
in
push
add
dec
mov
loope
jb
arpl
fnstcw
fcmovnb
cwtl
insl
adc
inc
inc
push
dec
dec
jg
fisubrs
lret
daa
pop
mov
bsf
push
jl
push
hlt
or
cmp
push
mov
ja
fwait
lock
addb
jbe
loop
xor
mov
inc
mov
pop
rcll
call
and
popf
inc
inc
dec
cmp
mov
mov
and
test
push
std
inc
sbb
mov
out
sbb
mov
xchg
push
ljmp
jge
fisubl
xchg
sub
pusha
or
cmp
aam
loopne
pop
mov
cmc
pop
jo
mov
imul
push
test
out
adc
daa
mov
mov
push
mov
and
fisubs
jns
ret
cmp
dec
push
lret
or
cmpb
lods
xor
cmp
cmp
or
ja
xor
xchg
ss
sahf
pop
pop
xchg
dec
fmulp
dec
fwait
inc
mov
xor
add
mov
mov
mov
mov
xor
jmp
sbb
pop
pop
pop
pop
sbb
adc
js
ret
js
xchg
jo
lahf
jge
jo
xchg
push
in
xor
mov
movsb
leave
xchg
test
rep
pop
sar
mov
jnp
je
popf
cmpsb
pop
dec
lods
mov
mov
int
dec
pop
sbb
xchg
test
mov
call
pop
pop
ja
lock
popf
in
jmp
mulb
mov
fwait
push
xor
daa
pusha
stos
dec
mov
pop
out
movsb
mov
ret
cld
sarb
pop
cld
hlt
xor
cltd
ss
es
inc
in
pop
dec
jg
lahf
or
int
test
fsubs
stc
repz
addr16
fimull
and
jae
add
stos
adc
sub
rcll
or
pop
jecxz
aaa
xchg
push
shlb
pop
call
pop
or
movl
inc
es
idivl
rcrl
or
or
outsl
rcr
jle
pop
ret
flds
sahf
xchg
fdivl
rcll
mov
xchg
mov
cld
popa
sub
mov
mov
jnp
out
pop
or
cmp
enter
mov
call
aad
ret
cmp
adc
shl
pop
fs
mov
cmp
sbb
rolb
stos
and
pop
add
scas
push
movb
imul
leave
fnstsw
push
imul
xchg
rclb
fucom
mov
repz
fnstsw
add
sub
imul
xor
pop
mov
push
or
rcr
mov
jmp
push
fcomp
mov
stos
lock
mov
out
inc
xor
dec
fwait
cmp
mov
ret
shl
lret
pop
dec
lret
in
lods
inc
jecxz
cmp
scas
aaa
push
cli
add
push
xor
arpl
in
mov
sbb
movsl
dec
dec
mov
outsb
pushf
push
push
xor
xlat
sbb
and
adc
rorb
in
rcrb
and
dec
xor
testb
mov
jl
mov
idivb
ljmp
lods
pop
or
out
xorl
xchg
mull
rcll
fwait
dec
and
aam
cmc
movsl
mov
cmc
data16
test
fs
sub
daa
push
push
pop
xor
cmp
xchg
mov
int3
push
cs
sbbb
pop
xor
repnz
push
pop
mov
notl
fwait
xchg
inc
or
cmp
imul
cwtl
jno
jb
pop
pop
and
sti
jge
shlb
jbe
dec
adc
xor
or
mov
mov
push
mov
ror
jmp
fdivp
add
jno
test
mov
mov
movsl
xchg
ds
ja
insb
mov
insb
fidivrl
jnp
sub
negb
test
cmpsb
mov
nop
xlat
and
push
in
ret
push
test
mov
fs
xchg
icebp
mov
fwait
mov
stos
xchg
jo
sbb
push
inc
cld
in
stc
or
mov
xchg
clc
into
ret
jno
mov
or
or
test
clc
mov
sbb
dec
xor
add
inc
sbb
inc
jmp
js
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jmp
mov
popa
jbe
xchg
xorl
pusha
or
jo
inc
jo
rclb
int3
add
roll
in
mov
jnp
jge
jmp
call
cmp
sbbb
lods
popa
ljmp
cmp
lock
aas
cmp
mov
repnz
cmp
inc
in
add
jmp
arpl
cmpb
adc
cmpsl
je
rcl
mov
add
sub
xor
arpl
mov
push
popf
out
fwait
xchg
icebp
mov
scas
stc
loopne
xchg
dec
das
iret
jmp
pop
xor
gs
push
and
mov
shl
mov
xor
call
xchg
push
xor
cmc
add
pop
or
aaa
jns
xor
ret
ficoms
cs
insl
mulb
inc
mov
jecxz
xchg
mov
jbe
xchg
lock
pop
mov
shrl
mov
movsb
inc
dec
jl
or
jge
mov
sar
mov
cmp
or
jb
sub
ret
cli
cmc
aas
jl
cmp
sarb
cli
daa
lock
xor
jns
sbb
xor
mov
push
xor
pop
mov
mov
and
lods
mov
addr16
outsb
cwtl
test
icebp
imul
and
movsb
data16
or
jnp
aam
dec
leave
mov
adc
inc
mov
int3
in
cmpsb
shlb
clc
sub
pop
pop
xchg
mov
pop
lret
int3
mov
push
fidivl
mov
ret
mov
mov
mov
xchg
pop
sar
and
cli
mov
push
cltd
cld
jnp,pt
aam
and
out
mov
pop
shlb
daa
icebp
push
push
mov
repz
xchg
data16
in
aaa
push
push
push
testl
into
dec
mov
inc
xor
insl
push
fidivrl
lods
jb
lea
mov
and
push
ss
push
repz
sub
in
std
dec
mov
pop
mov
movsb
jge
mov
xor
fstps
add
pusha
pop
xchg
adc
inc
cmp
lock
dec
xor
mov
and
idivb
imul
cwtl
out
xchg
sbb
iret
mov
imul
subb
sbb
aas
stc
rorb
dec
mov
mov
cmpsb
je
decb
int3
mov
ds
or
sub
adc
sbb
enter
into
add
sbb
pop
hlt
fdivl
jp
sbb
mov
pop
mov
mov
jns
adc
mov
sbb
or
dec
xor
sarb
cld
jp
mov
pop
das
stos
mov
repnz
cld
adc
pop
fsubl
lcall
roll
push
stos
pop
and
pop
sti
ret
jecxz
dec
addr16
sub
ss
in
jno
adc
scas
mov
add
xchg
jbe
fwait
aaa
add
les
cld
xor
xor
sbb
mov
jp
fwait
xor
insl
faddl
test
leave
push
cli
cmpsb
pop
push
inc
and
push
outsl
lea
mov
in
lea
mov
and
data16
decl
fdivl
rolb
rorl
scas
xlat
mov
xor
add
jmp
xor
out
icebp
xor
cmp
lods
cld
sbb
mov
lahf
jge
jo
jno
repnz
outsb
or
sbb
adc
jl
mov
or
cmp
mov
mov
sti
shlb
fidivrl
push
movsb
push
leave
rcrl
pop
es
call
test
clc
sub
cmpsb
aad
outsl
mov
push
shr
sbb
jg
out
ljmp
inc
or
xor
push
or
out
xlat
jg
mov
add
stos
aaa
sub
xor
sub
push
push
test
cs
dec
int
ficoml
lahf
jl
shrb
dec
dec
and
les
lods
insb
cli
ja
jl,pn
pushf
sbb
mov
sti
jo
adc
scas
cmpsl
cmp
hlt
mov
stos
or
mov
sub
mov
xchg
arpl
aam
mov
popa
pop
icebp
push
and
or
xchg
push
insl
xor
negl
lret
sbb
mov
or
dec
jbe
icebp
loopne
pop
aad
xor
sbb
in
jle
fwait
rcll
push
mov
scas
push
and
sarb
enter
xor
fists
xchg
stc
and
cmp
adc
test
call
fcoml
sub
fnstsw
jno
popf
lock
int
cld
add
mov
hlt
sbb
std
stos
mov
dec
movsb
mov
mov
adc
pushl
loope
mov
mov
mov
or
lahf
test
cmp
mov
add
push
xor
int3
jns
out
gs
mov
mov
dec
dec
aaa
fistpl
jb
push
cs
aam
test
test
or
test
add
call
fwait
std
cmp
stc
test
push
loopne
test
push
add
pop
lret
sbb
fxch
xlat
mov
imul
jp
xchg
js
jne
fs
daa
cmp
cmp
push
push
jno
sbb
sti
jge
stos
ret
pusha
xor
mov
popa
xchg
in
sbb
int3
imul
cmp
ss
scas
dec
mov
inc
jmp
add
sub
mov
push
shll
and
add
xchg
mov
in
or
push
in
xchg
xor
fldenv
and
xor
mov
sbb
repz
xchg
pop
jg
add
decb
inc
cmp
inc
jl
dec
in
out
xor
lods
jle
pop
dec
cmp
outsl
cltd
mov
dec
fmul
sbb
out
cmpsb
and
pop
lret
cmp
fnsave
dec
aad
scas
jbe
xchg
inc
add
xchg
cld
jmp
push
aad
lret
cwtl
mov
sbb
xchg
pop
xchg
loop
push
lahf
es
cwtl
leave
in
cmp
cli
xchg
hlt
cwtl
pop
jg
fidivrs
aam
xor
jl
mov
pop
aaa
jno
test
lods
lret
in
or
push
add
mov
add
mov
dec
int3
and
jbe
jle
pop
aaa
insb
insb
sbb
cwtl
enter
inc
pop
inc
push
das
in
pop
js
cmp
popl
icebp
sbb
cwtl
push
call
shll
rol
cmc
ss
mov
or
testl
jmp
dec
mov
lret
jae
bound
imul
mov
jge
lea
mov
mov
xor
mov
sub
jmp
out
inc
push
jno
ljmp
pop
fwait
mov
lahf
jge
jo
in
stc
rolb
clc
movups
ljmp
or
leave
test
pop
mov
jl
rcrl
pop
mov
mov
scas
xchg
mov
mov
aas
add
icebp
push
hlt
loopne
cmp
fwait
mov
mov
leave
addr16
outsl
cld
mov
dec
movsb
xchg
xchg
arpl
adc
push
test
xlat
cltd
jg
fcmove
loop
xchg
dec
mov
push
mov
pushf
lods
mov
dec
out
inc
repnz
push
xor
lds
push
enter
jnp
add
outsb
scas
ja
shlb
call
xor
mov
pop
mov
dec
repz
pop
sub
mov
stc
jo
or
jg
dec
xor
addr16
sbb
or
into
xor
jns
mov
orb
push
sub
dec
mov
sbb
sti
sub
xor
arpl
sub
pop
shrl
ljmp
int3
mov
pop
xchg
push
mov
xchg
lret
cmp
xor
lahf
push
enter
in
sbb
xorl
sub
or
cmp
std
fnstsw
rcll
dec
mov
cmp
loope
jns
iret
dec
sbb
iret
nop
in
sbb
and
lods
in
sbb
xlat
stc
xchg
mov
jmp
arpl
fwait
movsl
jp
push
imul
jnp
dec
jle
mov
xor
lock
aad
dec
lret
nop
mov
xchg
jmp
nop
or
sbb
pop
outsl
movsb
js
push
push
cmc
mov
ds
in
cltd
inc
cmp
lahf
cwtl
shrb
mov
mov
jl
jge
test
lock
push
ljmp
fyl2x
xchg
sbb
xchg
jecxz
test
lahf
icebp
fisubrs
mov
ss
es
hlt
sbb
inc
push
sub
cmp
clc
mov
inc
out
ja
outsl
xor
cld
mov
push
mov
sbb
mov
into
xchg
aas
cmp
js
dec
push
cmp
cmpsb
sbb
xchg
push
dec
push
add
jp
jle
mov
mov
ret
sbb
pop
sbb
prefetchwt1
add
xchg
repz
fs
ret
dec
cmpsl
test
jg
subl
adc
jecxz
loopne
out
cwtl
aad
bound
jecxz
jo
mov
pop
or
popa
test
sub
mov
cmpsl
orb
call
scas
mov
xchg
mov
xor
cmpsb
loop
mov
sub
lea
xchg
test
nop
jo
mov
ficomps
scas
pop
nop
enter
stc
adc
ss
stos
fwait
jbe
mov
jge
rcll
enter
or
xor
sub
in
sub
jle
call
insl
cs
mov
daa
jp
cmpsl
aam
addr16
mov
jg
inc
pushf
cmc
inc
or
cmp
push
adcb
jae
pop
mov
mov
cmpsl
and
push
divl
xor
popf
imul
xchg
sub
and
test
sahf
mov
xchg
nop
inc
mov
dec
adc
sub
mov
push
ds
pop
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
orl
push
sbbl
call
andl
test
jne
xor
movl
jmp
adcl
push
call
sbbl
test
movl
je
call
cltd
movl
cmp
jne
movl
cmp
jne
push
push
adcl
push
push
push
push
push
xorl
push
orl
call
movl
jmp
push
call
test
je
sbbl
push
andl
call
movl
jmp
push
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
movl
lea
adc
mov
adcl
lea
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
add
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
or
mov
or
mov
mov
push
mov
subl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
jmp
mov
add
mov
mov
mov
movl
cmp
mov
movl
je
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
xor
andl
add
imul
mov
movl
jmp
sbb
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
or
xor
sub
add
mov
mov
mov
xor
add
movl
cmp
jne
subl
pushl
andl
pushl
adcl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
adc
mov
mov
xorl
push
push
mov
xor
not
push
mov
add
sbb
jmp
sub
gs
mov
fstps
sbb
push
jg
jo
fsubr
cs
sub
xchg
pop
test
sahf
pop
jo
adc
loop
movsb
test
cli
in
lret
mov
popa
push
adc
xlat
xor
jae
xor
ja
mov
push
inc
mov
imul
in
insb
lock
xchg
dec
call
mov
pop
imul
lds
dec
jno
icebp
sbb
sbb
xor
mov
and
xchg
adc
inc
cmp
arpl
mov
roll
pusha
and
mov
mov
in
pop
pop
aaa
cltd
movsl
es
imul
dec
cli
clc
aas
xchg
rol
inc
pop
repz
iret
into
mov
mov
xlat
cld
popa
sub
stos
sbb
jo
icebp
test
std
mov
xor
and
jp
and
in
push
cmpsb
mov
int
ror
mov
xor
jns
pop
mov
or
add
ret
cmp
icebp
adc
dec
aad
mov
push
scas
cmp
clc
out
xchg
mov
xchg
dec
fsubl
push
pop
and
jbe
cmovb
repnz
ljmp
sbb
lods
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
imul
mov
sub
mov
and
mov
sbb
xor
add
mov
jmp
icebp
ja
pop
inc
scas
icebp
jno
push
inc
movsl
lahf
xchg
push
mov
ret
jg
jo
shrb
dec
lods
pop
cmc
sarl
cmpsb
adc
pop
lcall
push
test
aaa
adc
xchg
cld
jbe
sub
mov
xchg
cmc
and
add
sub
and
cli
mov
and
outsl
ficomps
dec
loope
dec
adc
inc
jb
dec
shll
inc
cmpsl
and
bnd
jne
jmp
inc
push
lret
ds
xor
pop
pop
mov
enter
sbb
lods
sub
stos
xor
and
mov
sbb
call
push
jmp
in
imul
sti
dec
cmpsl
aam
mov
stc
push
faddp
mov
mov
pop
icebp
mov
push
adc
sbb
lds
xchg
xchg
jnp
test
ficoml
add
lcall
mov
push
pop
nop
adc
or
sbb
inc
push
scas
cli
fisubrs
sub
out
in
insb
aaa
sbb
sarl
add
push
add
jae
inc
stc
divl
inc
cmp
pop
adc
je
push
cmp
fs
and
xor
iret
and
push
sub
sbb
cmp
add
inc
call
and
lea
mov
jmp
rorl
sbb
push
and
mov
jo
inc
jp
scas
je
push
ljmp
jmp
cltd
iret
shlb
sub
ret
incb
test
push
lcall
and
pop
push
andb
cmp
pop
xchg
les
cwtl
jmp
push
xchg
cmp
or
push
fsubp
repz
sub
xchg
mov
movb
jnp
sub
cmpsb
mov
mov
lods
fstps
jmp
ret
inc
mov
cmc
lock
imul
minps
add
push
aaa
push
pop
fnstcw
lods
or
mov
xchg
and
cmpsl
xor
outsl
inc
test
andl
adc
and
and
mov
mov
ret
and
xor
sbb
push
mov
xchg
jl
fnstsw
jmp
xchg
mov
pop
add
mov
sub
push
loop
lcall
add
sbb
mov
das
test
pop
pop
sbb
not
cmc
repnz
ja
pusha
push
movsb
js
mov
stos
mov
and
xchg
add
call
inc
add
add
add
or
sbb
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
neg
mov
add
xor
add
sub
mov
mov
adc
mov
mov
adcl
jmp
cmp
in
fcomi
jecxz
icebp
xor
iret
cmpsb
sbb
xchg
mov
jo
popa
inc
dec
nop
mov
out
out
mov
cwtl
mov
and
test
int3
movsl
inc
xchg
mov
cld
repz
jmp
mov
and
pop
xor
jge
js
dec
xchg
cmpsl
js
mov
pop
sbb
xchg
fstpl
dec
cwtl
push
rcrl
jnp
stos
int
loop
push
mov
xchg
rcll
sbb
pushf
or
loop
lea
jb
das
xor
test
and
mov
in
mov
inc
add
cmc
mov
xor
lds
enter
fistpll
in
push
add
or
xlat
fsubrp
dec
insb
and
int
xchg
dec
add
cmpl
nop
loopne
sbb
sbb
loop
push
sub
push
test
mov
cmp
mov
loopne
enter
push
shl
data16
inc
mov
and
jb
adc
adc
je
pop
push
jmp
out
xor
push
pop
mov
cmp
cmp
adcb
xor
js
cmp
inc
bound
jno
xlat
ret
pushf
ret
je
into
mov
adcl
mov
xorl
movzwl
add
neg
movl
sbb
mov
mov
sbb
mov
xorl
xor
andl
add
cmp
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movzbl
adc
mov
xorl
mov
andl
xor
notl
add
movl
cmp
movl
jmp
fistpl
shlb
adc
jmp
and
jo
ret
jg
jo
fwait
and
mov
mov
dec
xor
xor
out
xor
adc
test
imul
mov
ja
dec
mov
cmp
mov
int3
out
cmpsb
leave
out
lret
lcall
mov
dec
cld
pop
jge
hlt
idivl
sbb
sti
xor
sub
push
sub
cmp
xorl
imul
mov
test
sub
cli
sub
sahf
jae
mov
cmp
out
lods
inc
ret
cmc
negl
int
cld
adc
xchg
adc
out
cmp
mov
adc
sub
sti
or
or
pushf
jl
sbb
inc
fstps
jg
nop
aam
mov
xchg
movsb
mov
lods
xor
push
jno
sbb
sub
stc
jo
es
orl
pushf
hlt
jo
inc
xor
sti
sarb
inc
cmpsb
rcll
adc
es
cmp
fcoml
mov
nop
sahf
mov
dec
cmpsl
pop
aas
sbb
push
xor
dec
psubw
repnz
out
mov
dec
das
sbb
sub
shrb
icebp
xchg
inc
push
loop
mov
je
mov
test
test
lret
or
add
gs
inc
add
movb
mov
sbb
mov
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
jmp
or
shrb
mov
inc
pop
mov
or
scas
jo
ret
jg
jo
sbb
mov
nop
pop
insb
in
jb
imul
shlb
test
arpl
in
push
xor
bound
mov
or
repz
enter
or
movsb
mov
adc
dec
out
jnp
jae
decl
scas
cmpl
cli
mov
cli
inc
mov
and
push
lahf
int
push
addb
loop
cld
iret
sbb
jb
out
popa
cs
xor
lods
inc
adc
das
mov
sub
or
sub
xchg
repnz
mov
jno
cmpsl
lods
stc
or
mov
cmpsl
jle
out
xlat
jo
xor
test
outsb
stos
pop
add
shrl
adc
or
pop
out
iretw
and
icebp
pusha
mov
and
jge
dec
loopne
int
xchg
sub
sbb
inc
sti
in
ficoms
xchg
movb
fadd
jbe
xchg
out
mov
pop
mov
jbe
push
mov
sbb
insl
push
sbb
and
rorl
cld
jmp
movntps
push
rep
mov
push
jle
call
jo
ret
jg
jo
enter
cmp
shlb
push
pop
sbb
or
jp
incl
dec
sbb
cli
or
and
shrb
dec
rcrb
push
mov
cli
xchg
test
incl
frstor
add
add
push
andb
cmp
xorb
adc
frstor
mov
cmpsb
and
adc
xor
clc
movsb
pushf
out
pop
sub
cs
xchg
sub
movsl
inc
jle
pop
pop
inc
sub
gs
mov
pop
sub
sbb
or
mov
fcomps
push
jne
inc
repnz
inc
mov
push
lods
cmp
xor
sub
jns
xchg
mov
xor
cs
sbb
sbb
add
pop
fimull
insb
lcall
adc
sti
movsb
fistps
or
pop
jecxz
data16
inc
adc
mov
clc
in
fisttpl
sbb
int3
dec
adc
mov
push
js
sbb
lock
sub
imull
xchg
loopne
mov
pop
subb
test
sahf
popf
xor
xor
sbb
cmp
and
insl
pushf
xor
or
je
testb
jg
xor
sub
sub
mov
jmp
jmp
int3
push
icebp
xchg
icebp
je
in
pop
mov
add
jo
ret
jg
jo
cs
ds
lock
xchg
cmp
addl
aas
push
xor
lods
into
cmc
cmp
mov
add
or
xchg
add
pop
shll
notl
or
mov
jle
int3
iret
adc
sbb
jne
fdiv
outsb
cmp
rcll
sub
sti
dec
jge
mov
fisubrl
fists
cmp
adc
pop
popf
pop
stos
fstp
pusha
cmp
or
shr
dec
in
pop
lret
pop
out
pop
sbb
dec
test
dec
cli
xchg
repnz
dec
subl
xchg
rcl
dec
popa
inc
push
call
mov
jne
fxch
dec
xor
call
adc
mov
jmp
imul
ds
jmp
xorb
mov
not
filds
inc
xchg
addl
loope
hlt
xor
movsb
jle
mov
dec
xor
push
mov
push
push
out
in
and
and
pop
or
sub
inc
inc
pop
push
lret
cmp
loopne
mov
and
dec
scas
push
sbb
or
shrl
adc
cmp
andb
pushf
jb
add
inc
cld
mov
cmp
jmp
mov
enter
lea
leave
inc
inc
or
or
ret
jg
jo
cmp
fbld
dec
test
notl
adc
cmp
into
fsubr
or
jbe
cmp
inc
mov
adc
xor
mull
xor
pop
push
xor
hlt
push
mov
pop
stc
push
shrb
sbb
movsb
loop
and
popa
inc
jns
lahf
cli
mov
rcrl
dec
pop
jmp
jl
aaa
fst
pop
jns
pop
jns
sbb
sub
mov
roll
sti
or
mov
sbb
out
aam
dec
lds
mov
imul
push
ds
lcall
test
mov
mov
mov
mov
push
lahf
scas
insb
cli
pop
pop
and
cmp
cmpsb
lea
cmp
dec
and
adc
fbstp
fs
add
dec
add
repnz
les
jle
fstl
lcall
adc
hlt
pop
mov
insl
pop
inc
inc
push
stos
jl
ljmp
inc
inc
cmp
insb
in
scas
mov
mov
lds
mov
xchg
je
mov
jmp
lods
ret
jno
insl
popa
fdivrs
xchg
test
xor
jo
jg
jo
in
stc
call
inc
mov
aas
fs
movsb
pop
sbb
stc
ffree
or
xor
stos
in
sub
pop
hlt
cmp
mov
call
xorl
jns
sbb
fiadds
adc
mov
cmpsl
and
cltd
dec
js
scas
lea
push
mov
adc
iret
jno
mov
pusha
imul
js
sahf
shrl
ret
into
cmpsl
into
push
push
in
out
ja
std
push
and
cld
push
mov
les
xchg
imul
push
inc
push
xchg
push
inc
clc
or
mov
xor
jge
xchg
jmp
pop
repz
shrl
push
icebp
cmpsb
stc
and
pop
imul
sub
add
pop
lcall
pop
and
lods
shl
push
popf
cmp
daa
or
push
mov
sahf
mov
add
sti
mov
lcall
js
adc
mov
push
or
mov
scas
dec
scas
das
mov
or
jns
mov
dec
iret
shrl
lret
pop
lcall
arpl
int
jge
pop
jb
in
clc
movl
jmp
mov
mov
xor
add
cmp
je
mov
jmp
dec
int3
cmp
mov
add
rcrb
out
ret
jo
ret
jg
jo
xchg
pop
cmp
cmp
int
mov
cmp
es
inc
leave
pop
adc
dec
mov
add
mov
test
es
mov
loope
push
or
cmp
jmp
mov
mov
fs
pop
and
cwtl
jl
jae
sbb
in
mov
or
add
mov
xchg
leave
push
inc
jnp
pop
push
push
pcmpeqb
sub
add
sub
aaa
js
xchg
out
fnstcw
mov
lret
xchg
imul
ss
jecxz
jmp
je
jp
jg
lods
call
dec
mov
sub
mov
jmp
cmc
mov
cli
jae
push
outsb
cmp
andl
and
out
fistpll
pushf
pop
xchg
pop
push
pop
popa
cmp
imul
jmp
sbb
popa
xor
push
pop
and
sti
jnp
int
jnp
add
nop
xor
sub
fucomi
jmp
add
mov
push
mov
popf
pop
rcrl
add
ret
pop
pop
jge
pop
shlb
clc
jmp
inc
gs
icebp
imul
push
jp
cmp
jo
sub
and
pushf
repnz
shll
xor
ja
inc
pushf
out
shlb
imul
mov
fwait
les
aam
xlat
movsl
jge
test
jo
push
pop
pusha
xor
rcrb
pop
in
pop
icebp
lret
leave
add
adc
and
mov
icebp
mov
lret
out
std
xchg
cmp
mov
bnd
mov
mov
dec
cld
not
popa
adcl
fs
dec
push
enter
xchg
cltd
nop
cltd
ret
daa
sub
shlb
adc
jnp
pop
inc
movsb
test
pusha
pop
imul
xchg
xorl
frstor
and
xlat
mov
or
xchg
das
popf
loop
cmp
lea
add
jmp
mov
sub
pop
adc
dec
sub
fnsave
pop
pop
lds
mov
xchg
jns
xchg
call
sub
mov
jo
mov
rcr
cwtl
ljmp
dec
lcall
pop
in
cwtl
inc
xchg
pusha
sub
push
and
inc
movsb
xchg
repz
cmpsl
js
rolb
lret
push
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
jmp
pop
out
dec
mov
mov
testb
dec
mov
ret
cmp
jo
cltd
or
cmp
fisttpl
pop
or
mov
cli
push
out
in
jns
jnp,pn
jbe
pop
in
repz
dec
sbb
shrl
and
out
into
imul
pop
lods
sub
pushf
fdivr
xchg
ds
xor
jmp
lret
outsl
pop
pop
cli
popf
and
dec
push
ljmp
fdivr
fbld
or
or
mov
inc
dec
es
and
cmp
add
pop
in
cmp
hlt
mull
pusha
sbb
mov
inc
or
js
enter
ficompl
comiss
cmc
lahf
icebp
out
cmp
lds
mov
imul
sbb
sub
mov
pushf
out
lret
scas
frstor
das
cmp
sbb
int
aas
js
xor
mov
lods
stc
xor
adc
jle
xchg
lret
insb
jne
push
decl
std
repz
sti
sahf
scas
add
sahf
clc
in
fstpl
cs
testl
scas
movsb
insl
mov
scas
mov
pop
aad
mov
inc
push
add
out
xor
lea
adc
stos
push
xor
xlat
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
ds
adc
dec
xor
nop
pop
mov
jo
jge
jo
mov
push
je
movsb
stc
aam
xor
sbb
sbb
movsb
add
lret
scas
out
stos
sahf
sbb
shrb
mov
inc
loop
subl
das
ds
dec
sbb
gs
lods
pop
mov
repnz
dec
nop
in
pushf
movsb
insl
push
ret
stos
ret
fistps
push
mov
ljmp
inc
jg
or
sub
mov
inc
pop
cmp
mov
stos
or
loop
pop
ss
pop
lcall
inc
push
pop
add
jae
lods
push
jne
int3
sub
fistps
mov
fstpl
ret
lcall
mov
inc
std
or
and
data16
mov
push
mov
andb
and
pop
scas
icebp
mov
iret
mov
sbb
mov
ret
mov
iret
dec
push
sub
int3
or
das
and
xchg
jge
xchg
es
in
sbb
popf
fbstp
and
cmp
icebp
add
repnz
xchg
add
repnz
push
js
hlt
sub
pop
push
fsubl
into
shll
inc
mov
fsincos
das
jl
push
pavgw
popf
adcl
repz
hlt
test
adc
and
repnz
dec
fwait
enter
and
mov
inc
jmp
and
shr
push
ror
pop
jmp
pop
push
or
xor
xchg
stc
xorl
bound
mov
cmp
dec
std
jp
adc
scas
sti
push
jne
sbb
mov
out
imul
addr16
dec
xchg
in
rolb
cmpsb
aam
icebp
jae
lods
or
adc
and
in
jecxz
lods
cmp
mov
loope
xchg
jns
std
adc
loopne
dec
pop
push
leave
rcll
in
mov
out
mov
lock
xchg
shlb
cmp
xor
inc
xchg
xchg
imul
test
jne
aad
clc
sub
xor
fildll
xor
jp
sbb
cmp
sub
adc
mov
fldcw
pushf
add
enter
and
and
or
sarl
and
repnz
aam
add
mov
test
xchg
push
lahf
stc
scas
jecxz
stos
mov
cmpsb
mov
jl
cltd
jmp
ss
and
mov
adc
xchg
cmp
mov
pop
test
repz
xchg
icebp
xor
and
xor
mov
push
and
les
and
jecxz
jp
loope
leave
les
cmp
push
stos
inc
lret
leave
or
xchg
mov
je
push
cmp
cmp
and
int3
pop
idiv
push
int3
xor
sahf
fidivrl
jecxz
add
cmp
sahf
mov
xchg
inc
shrb
xchg
jnp
cli
pop
jb
push
push
push
mov
dec
int3
xor
andl
push
cmp
repnz
sarl
xchg
xlat
push
aaa
outsb
cmpb
call
sahf
pop
xor
mov
in
loop
in
xchg
xorl
mov
pop
fistl
cwtl
das
call
cmp
mov
sbb
ljmp
sbb
or
sbb
jmp
mov
cli
xor
testb
int
xchg
jge
jo
pop
mov
ror
sahf
out
leave
iret
adc
loope
aas
or
push
into
clc
or
mov
mov
int
sahf
dec
dec
rorl
insb
jecxz
xor
mov
push
cmp
push
sbb
and
mov
pop
xorl
jae
sbb
dec
jne
insb
push
jp
xorl
or
pop
test
arpl
ret
inc
sahf
jp
cmpsb
mov
sbb
stos
push
out
std
lret
movsb
pop
je
cmp
mov
jo
subb
lea
fdivrs
enter
sub
cmpsb
dec
cmpsl
in
lock
out
sbb
daa
cmp
je
aas
jo
out
mov
adc
pop
add
pop
jmp
lret
fisttpl
push
fistps
push
repz
imul
mov
fdivs
adc
adc
sub
rorb
das
aaa
popf
jp
sub
jecxz
xor
hlt
xchg
iret
pop
pop
xor
sbb
fildl
stc
mov
adc
sbb
sbb
mov
sahf
add
dec
shrl
pop
outsb
out
test
xor
jbe
imul
sub
add
dec
fwait
mov
mov
mov
hlt
inc
mov
push
aad
stc
xchg
or
mov
mov
sub
daa
xor
adc
cld
jae
inc
iret
add
in
push
jnp
pop
xor
lcall
mov
fcmovne
lock
xor
jnp
cmp
addr16
jae
int
adc
inc
cmp
cld
xor
mov
sub
jecxz
jno
add
xchg
loop
test
aas
mov
adc
jo
insb
push
jne
scas
inc
mov
test
xchg
dec
and
push
adc
mov
out
iret
or
sbb
mov
xchg
add
cmpsl
lods
mov
push
mov
xor
jb
or
push
aas
push
jle
popf
nop
push
insl
mov
movsb
popa
and
cli
mov
pop
cwtl
pop
lret
test
mov
sub
in
jbe
xchg
lock
sub
enter
push
mov
jb
inc
and
push
and
in
movsb
add
sahf
int
or
call
pop
mov
lahf
xor
pop
syscall
cmpsl
fnstenv
lods
mov
cmp
imull
jb
in
out
jno
cmp
adc
pop
aam
or
gs
push
pop
jp
addr16
mov
or
push
inc
cli
xchg
mov
out
xor
mov
jo
xchg
inc
test
je
inc
cmp
push
jnp
xchg
test
shr
repnz
mov
inc
decl
ffree
stc
call
jmp
or
jmp
jnp
ret
sub
loope
in
mov
adc
ja
negb
or
insb
push
push
outsl
push
hlt
adc
mov
inc
ror
stc
or
sbb
xchg
clc
popa
dec
sub
cltd
sub
mov
popa
and
dec
dec
xchg
xchg
pop
and
outsl
fstp
or
inc
repz
push
push
andl
mov
xchg
xchg
add
and
pop
cli
push
lret
ret
mov
int
inc
loop
jns
jne
testb
and
fistpl
flds
lahf
sahf
in
cmpsb
mov
shl
or
inc
pop
dec
rclb
inc
add
pushf
clc
mov
mov
movl
add
xorl
xor
movl
cmp
jne
mov
mov
and
mov
mov
movl
add
mov
jmp
fcmovnbe
aam
repz
push
jae
arpl
cmp
xor
jge
jo
fiaddl
and
pusha
cmp
ja
nop
fcom
dec
insl
mov
mov
xor
pushf
pop
test
pushf
frstor
sbb
add
dec
cli
shll
add
sar
lahf
repnz
mov
scas
inc
out
mov
sbb
push
in
test
into
jno
adc
mov
push
daa
mov
out
push
imul
mov
mov
push
lret
iret
aas
test
xor
mov
fnsave
jnp
lret
adcl
lahf
les
jge
inc
push
jle
and
push
fistps
xchg
int3
xlat
lret
mov
push
fstpl
dec
in
add
cwtl
out
mov
pushl
fadds
jo
loop
aas
xor
add
xchg
add
push
stos
cmp
in
sahf
dec
cmp
dec
loopne
popa
lods
add
adc
jle
jne
cmp
dec
aaa
pop
in
sbb
mov
cwtl
fsqrt
inc
dec
mov
jnp
sub
or
ret
int
mov
ljmp
bound
call
gs
mov
pushf
les
mov
dec
pop
test
or
lock
fmul
lret
push
jmp
aas
jecxz
inc
dec
lcall
xchg
cmp
loopne
int
sbb
addr16
pop
xor
jge
pop
clc
sbb
pop
xor
inc
stos
test
cmpsl
and
jge
arpl
lahf
sbbl
mov
pop
leave
pop
scas
ljmp
or
hlt
dec
jne
leave
or
insl
sub
aam
stos
pop
ret
adc
and
xor
xchg
in
bound
mov
sbb
or
mov
lea
cli
jo
stc
adc
xchg
cmp
mov
pop
lods
iret
sub
out
insl
dec
mov
movsl
imull
push
dec
cpuid
push
sbb
sahf
jmp
lahf
stos
mov
ds
push
shrb
lret
sub
xor
ret
sbb
sarl
and
mov
mov
xor
dec
out
push
repz
lret
insb
fs
lods
mov
cli
scas
mov
fnstenv
xor
or
shlb
xor
hlt
mov
inc
jmp
xor
out
xchg
push
jno
repz
inc
xor
je
mov
jmp
mov
mov
enter
pop
adc
mov
jge
xor
push
mov
arpl
jg
int
mov
filds
jle
in
lods
popa
pushf
cmp
pop
bnd
data16
cld
loope
dec
mov
dec
dec
into
cmpsb
ss
cli
or
xor
cmp
rcl
add
fisttpll
jb
xor
mov
cltd
mov
fldcw
pop
pop
mov
mov
add
sub
cmc
pop
data16
push
pop
mov
nop
pop
sti
stc
lcall
adc
ljmp
cmc
int
mov
cmp
pop
test
test
inc
jg
push
sub
into
mov
rclb
mov
mov
scas
fwait
mov
enter
xchg
pop
dec
movsl
mov
hlt
inc
dec
out
orl
stc
inc
sbb
mov
mov
xchg
adc
cmc
and
inc
pop
flds
sbb
loope
daa
idivb
dec
or
mov
mov
add
mov
xor
sub
push
sbb
jmp
lods
das
mov
mov
lcall
pop
mov
jo
clc
xchg
and
loop
mov
ds
into
xchg
mov
outsl
repnz
lret
push
sbb
cmp
push
push
cmc
iret
dec
stc
jg
push
icebp
dec
jmp
ffree
mov
je
cmp
mov
cltd
mov
push
fistps
jle
xchg
dec
cmp
and
adc
fadds
shrl
xchg
cmp
in
xchg
test
daa
and
lock
push
sbb
mov
pop
lock
ss
jle
inc
jns
adc
xchg
shll
popf
inc
shrl
mov
je
and
test
sub
outsl
ja
mov
or
cmc
pop
add
loopne
pushf
fiaddl
fmul
mov
fisubs
xchg
fsub
insl
icebp
sbb
pushf
repnz
adc
in
and
dec
xchg
push
xchg
sub
push
jb
jae
insb
imul
popf
outsb
loopne
jg
je
mov
xchg
loop
adc
jge
je
push
das
test
jo
pop
pop
sbbl
mov
jns
jmp
pop
movsb
outsl
scas
movsl
sub
mov
movsb
cmp
pop
sbb
orl
loopne
mov
aaa
mov
cmpsl
repnz
popa
lret
jbe
scas
jp
and
mov
mov
iret
pop
dec
mov
popa
lea
add
pop
notb
sub
ljmp
shlb
push
push
stos
sub
nop
and
sbb
push
aas
stos
cmovge
fstpl
push
adc
push
js
pushf
inc
lock
sbb
loope
xchg
int
jmp
out
jecxz
fwait
xchg
mov
pusha
or
cmc
or
jne
cs
mov
sbb
out
test
cli
jmp
mov
or
mov
push
add
xchg
jle
pop
sbb
stos
into
daa
inc
mov
mov
sub
xor
adc
movsb
jae
and
jbe
xchg
dec
lcall
push
sbb
cmp
les
mov
call
std
jp
out
arpl
dec
pushf
adc
jle
sub
push
int
test
jge
xchg
jae
fildl
notb
fcmovne
xchg
daa
into
and
lret
pop
mov
push
lea
mov
pop
inc
pop
push
popl
mov
cmp
clc
out
xor
ror
mov
not
rcrb
dec
or
push
push
enter
xchg
lahf
cmp
mov
cmp
test
mov
mov
std
mov
lahf
je
jns
pop
fidivl
mov
lods
pop
or
aas
xchg
cs
aam
aam
into
into
fstps
cs
inc
sub
je
or
icebp
aas
arpl
test
jae
xchg
pop
dec
outsb
push
mov
in
daa
dec
jo
imull
imul
test
xchg
push
and
jne
iret
inc
in
pop
pop
mov
xor
lret
call
mov
mov
push
out
dec
into
mov
mov
gs
ss
mov
ljmp
sbb
mov
pusha
lahf
cwtl
lcall
outsl
push
xchg
pop
mov
sahf
adc
fs
lock
cmp
jno
sarb
je
out
jl
pop
push
dec
pop
mov
fldenv
das
add
mov
add
jmp
outsl
mov
or
imul
popa
sbb
mov
jo
jge
jo
mov
add
jge
arpl
cmp
dec
or
out
in
or
sub
fucomip
or
adc
stc
mov
insl
je
add
fcomps
sbb
adc
mov
mov
ds
mov
sub
inc
push
pushf
sbb
cwtl
sbb
cmc
sbb
xchg
inc
mov
or
mov
call
or
repnz
push
cmp
mov
jmp
and
inc
iret
inc
jl
ficoml
lods
shrl
mov
inc
adc
fcmovu
push
roll
xor
sbb
out
xor
dec
or
enter
xchg
js
insb
sub
sub
icebp
nop
or
mov
movsb
faddl
sub
push
jno
adc
mov
jmp
jecxz
fdivr
pop
mov
nop
test
loop
sbb
sub
shrl
lret
ret
lcall
cltd
push
adc
push
pop
push
insl
mov
push
or
loope
cmp
call
arpl
aad
sbb
dec
sub
outsb
cli
dec
call
pop
mov
cmp
add
mov
inc
mov
jno
jbe
cmpsl
rolb
aad
jmp
jbe,pt
insl
repz
xchg
xor
xor
repz
mov
nop
mov
mov
push
dec
int3
push
xchg
std
push
into
nop
jne
fwait
push
loop
xchg
out
mov
xchg
push
inc
and
movsb
sbb
mov
dec
adc
mov
xchg
sbb
or
test
daa
sub
xchg
scas
in
lret
popf
xchg
divb
sub
hlt
xchg
out
out
ret
dec
aam
fcmovb
sub
fistl
dec
cltd
mov
add
mov
dec
push
sti
scas
aam
push
dec
jge
cmp
cli
scas
sub
ds
pop
mov
pop
adc
mov
ds
daa
stos
divl
out
scas
mov
notl
imul
jne
xchg
lods
mov
aas
push
pop
test
aam
imul
fistps
pusha
dec
sbb
push
imul
std
fs
insb
enter
cmp
pop
cmp
and
or
loope
shlb
jae
into
jmp
push
adc
test
inc
cmp
cld
notb
mov
mov
and
pusha
or
shlb
push
addr16
adc
inc
mov
pop
gs
outsb
or
mov
mov
cld
push
or
popa
fistpll
inc
pop
retw
outsl
pop
pop
subb
mov
fistpl
sub
add
shll
cld
xchg
pushf
and
movsl
mov
xor
xchg
xchg
adc
in
stos
add
aaa
mov
mov
int
mov
xchg
push
dec
pop
scas
jne
lea
ja
cld
dec
push
sub
pusha
and
add
lahf
sahf
push
xchg
test
shlb
rcll
and
mov
xchg
stc
adc
mov
cmp
cmp
or
hlt
or
int3
push
jl
aam
mov
mov
faddl
sub
adc
add
or
fdivs
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
jmp
outsl
mov
jae
dec
cmpsl
repz
xchg
stos
and
pop
jge
jo
sbb
test
inc
pop
loope
sahf
inc
cmp
pop
outsb
gs
nop
vpcmpeqd
cli
daa
add
movsb
pop
pop
sub
add
add
add
pop
inc
hlt
inc
gs
test
push
pop
fdivrl
xchg
cmc
push
fs
mov
iret
push
je
sahf
inc
test
sarl
sbb
lcall
aad
cmpsb
cmc
inc
fstpl
les
test
js
and
add
and
push
hlt
mov
insb
sub
imul
mov
enter
dec
std
cli
iret
andl
popa
popf
sahf
mov
loop
nop
pop
xlat
sub
neg
jmp
jg
mov
jmp
pop
dec
xor
xor
jne
lods
xor
imul
sub
pop
push
cwtl
test
int
movsl
out
jnp
cmp
rolb
gs
int
mov
xor
mov
push
jmp
shlb
mov
jbe
ficoms
lahf
loopne
pop
mov
dec
mov
dec
addr16
test
push
jns
iret
aad
and
iret
fcmovnu
and
jns
dec
and
jno
es
cmp
fmull
pop
push
dec
leave
push
add
mov
inc
jg
xchg
icebp
aad
rcll
cmp
shlb
inc
adc
sub
mov
mov
xchg
das
inc
cmp
mov
das
xor
repnz
sti
fldt
sbb
mov
jmp
jl
sarb
pusha
dec
bound
xor
dec
mov
cli
xchg
xchg
dec
inc
mov
in
mov
mov
ds
mov
bound
mov
hlt
mov
loop
inc
sahf
movl
jno
xchg
mov
daa
mov
cli
sbb
movsb
push
fsub
jl
into
xchg
jno
addr16
lods
mov
xchg
aaa
outsl
test
dec
cli
ret
or
xchg
mov
mov
jmp
push
mov
fidivs
jl
inc
movb
lcall
cmp
pop
out
xor
push
loope
dec
push
inc
dec
rol
inc
and
cmp
jns
arpl
jae
lods
call
popl
add
cs
mov
dec
dec
cmp
jg
dec
mov
in
out
sub
fidivrl
push
mov
add
dec
inc
dec
pusha
call
xchg
cmpsb
inc
jne
pop
mov
call
jb
xlat
push
mov
dec
jns
adc
cmp
mov
and
push
dec
mov
jecxz
adc
push
bound
lret
jge
test
scas
jbe
aad
clc
data16
xchg
push
mov
jle
fsubl
subl
out
cmp
arpl
pop
mov
into
cmp
inc
inc
xchg
cmp
push
lcall
xchg
inc
stos
add
xchg
rolb
inc
loopne
inc
outsb
out
mov
lods
xchg
cmp
mov
sbb
fistl
dec
push
mov
pop
inc
or
fsubs
pop
div
jbe
pop
and
mov
ja
mov
daa
mov
sahf
movsb
jae
mov
mov
jge
add
jns
cli
ja
lods
sub
xor
test
xor
imul
loop
inc
mov
pop
scas
outsb
push
mov
icebp
xchg
popa
fidivrs
dec
or
xor
loop
das
repz
cld
fdivl
int3
sbb
jnp
xchg
push
or
add
sub
adc
mov
push
mov
xor
movl
jmp
xchg
shll
push
paddsw
es
jo
pop
jge
jo
shrl
nop
xchg
aad
test
sysret
cltd
pop
add
push
mov
adc
outsb
adc
sbb
push
fisubl
xchg
pop
xchg
shl
scas
gs
nop
dec
call
aaa
out
lret
cli
in
cmp
cs
xlat
icebp
add
xchg
or
adc
and
add
mov
leave
aam
push
cmpb
rep
lret
pop
mov
movsl
mov
xchg
rorb
push
add
shrb
mov
dec
pop
outsl
hlt
cmp
push
sbbl
movsl
inc
mov
ret
adc
sub
push
jmp
insb
cmp
out
cmp
iret
outsl
icebp
dec
fnsave
push
jmp
inc
int
xchg
push
adc
lods
xchg
inc
pop
xchg
int3
test
stc
loope
mov
fldl
lock
leave
dec
sahf
out
sarb
and
jae
mov
ljmp
push
or
into
je
or
lods
test
ja
mov
orl
add
notb
repz
mov
imul
cmp
cli
adc
pop
sub
andl
data16
push
ret
pop
inc
or
inc
or
cli
sub
add
out
add
sbb
sbb
mov
imul
push
inc
sahf
cmc
bound
clc
mul
push
rep
mov
cmpsb
ficomps
adc
mov
sbb
lds
xchg
adc
mov
leave
inc
not
pop
fldt
movsb
sub
pop
iret
fstpt
push
mov
jg
dec
push
aaa
ret
cld
jmp
dec
dec
dec
lret
ret
pop
pop
mov
icebp
sar
shl
fsubr
push
mov
or
push
insl
sbb
gs
out
mov
sbb
fildll
mov
rcll
and
mov
lods
leave
xor
inc
sub
movsl
mov
mov
xchg
mov
xor
shrl
movsb
sbb
lods
or
mov
ret
pop
fisubs
jmp
cltd
adc
pop
arpl
in
and
inc
aas
and
int
inc
mov
repnz
xlat
fsubs
inc
fmull
or
or
mov
xor
cwtl
xchg
testl
mov
flds
push
inc
xchg
std
push
orb
pop
mov
movsb
addl
nop
jne
and
popa
push
mov
shl
lods
jp
xlat
ror
in
stos
mov
push
sbb
lahf
pushf
xchg
cmp
daa
cli
in
mov
cld
insb
lret
mov
sub
xchg
aad
and
icebp
sbb
mov
lods
inc
lahf
imul
cmp
pop
lock
add
vpaddsw
cmp
loop
in
lret
dec
gs
adc
rorb
fisubrs
push
cmpsl
in
jbe
push
fnstsw
imul
test
call
adc
add
pop
cmp
out
sbbl
push
les
and
loopne
movsb
cmp
adc
inc
pusha
jmp
xor
test
mov
or
repnz
pop
sahf
dec
mov
push
mov
es
cmp
enter
add
adc
xchg
add
xor
rorl
push
inc
push
out
test
push
nop
sub
pop
push
notl
shll
les
cli
and
push
test
rorl
in
mov
or
fistps
mov
mov
dec
out
shlb
add
test
test
push
cmp
movl
je
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
and
leave
adc
adc
call
sbb
xchg
and
dec
jo
pop
jge
jo
imul
into
and
mov
sarl
out
dec
inc
sarl
inc
cmc
and
jns
dec
jno
mov
iret
mov
mov
jecxz
outsl
sbbl
push
or
push
sbb
cmp
cltd
mov
pop
pop
fwait
dec
jno
imul
mov
mov
mov
inc
push
loope
pop
faddp
aaa
lods
sub
cmp
lret
inc
fildll
outsb
pushf
mov
or
xchg
rol
dec
cmp
mov
jl
inc
mov
iret
add
sub
mov
pop
mov
aam
ljmp
cmc
mov
outsb
push
xor
js
add
inc
imul
andl
xor
dec
popa
and
shrb
dec
dec
sbb
adc
or
jecxz
mov
xchg
xor
fildll
cltd
mov
xor
ja
fxch
cmp
rcrb
std
pusha
pop
test
scas
into
push
mov
je
fyl2x
push
inc
pop
mov
fbld
fdivl
mov
sub
sub
add
sbb
pop
pop
inc
cmp
jo
xchg
ja
cltd
adc
push
xor
fxch
mov
test
jmp
repz
rorb
push
fiaddl
jle
pop
stos
aam
popaw
and
daa
lcall
push
adc
movsl
add
scas
xchg
xchg
push
xchg
rcrl
mov
adc
jmp
subb
dec
mov
dec
xchg
xor
gs
xchg
pusha
mov
xchg
lods
sti
out
outsb
ret
fdivrp
add
lret
push
xchg
ss
sbb
dec
jae
lods
roll
inc
xor
xchg
mov
or
xchg
jmp
mov
or
xlat
lock
in
rcrb
subb
lahf
mov
mov
fnsave
push
push
jp
lock
insl
mov
mov
push
decl
jns
mov
test
jo
mov
push
bound
in
xchg
push
popf
lds
pop
xlat
push
leave
fstps
cmp
fwait
adc
scas
fmul
divb
mov
stos
leave
jns
dec
fists
lock
out
mov
scas
icebp
clc
popa
in
stc
push
out
mov
pop
dec
or
fnstsw
adc
xchg
es
xor
dec
mov
push
imul
cld
cmp
test
push
aam
push
out
imull
sub
pushf
cld
jne
cld
into
cmp
sbb
jae
lret
xor
repz
movsl
ljmp
out
jno
ljmp
mov
adc
inc
xlat
in
or
das
roll
pushf
ud1
sbb
push
fwait
cmp
mov
fsts
inc
mov
lea
fstpl
lea
pop
outsb
addr16
lret
adc
arpl
mov
inc
sub
lods
out
adc
pop
shrl
mov
imul
jo
out
mov
bound
out
sbb
mov
pop
aas
mov
daa
sub
add
adc
notb
fwait
outsl
cld
mov
cltd
or
call
ja
scas
inc
adc
fwait
lods
adc
int
xor
int
pushf
pusha
mov
inc
jmp
adc
ss
fdivp
lds
xor
fdivl
mov
xchg
xchg
adc
xchg
sbb
or
sbb
fiaddl
adc
in
mov
sub
addl
xor
movl
cmp
movl
jne
jmp
js
stos
loopne
jae
cmc
pop
sub
push
jbe
jo
pop
jge
jo
repnz
sbb
jbe
sub
es
fwait
cmp
xchg
aam
adc
loopne
xchg
int3
sbb
jecxz
cmp
call
ret
push
pop
xchg
push
push
mov
cwtl
mov
lahf
daa
js
push
mov
or
cmp
adc
lcall
jno
aad
jno
adc
lock
mov
test
cmpsl
gs
lea
arpl
mov
xchg
sub
sbb
out
aas
xor
pushl
push
loope
xlat
sub
mov
mov
dec
cmc
lahf
adc
pop
sbb
fidivrs
jbe
push
rcll
pop
push
xchg
out
and
or
lock
shl
stc
mov
dec
mov
mov
sub
or
push
dec
fistps
aaa
test
cmp
lahf
jle,pn
pop
rolb
adc
test
das
sub
xchg
in
mov
push
into
data16
dec
inc
push
add
mov
movsl
jge
adc
into
mov
adc
mov
mov
popf
sub
jle
xchg
push
out
ss
data16
ds
mov
mulb
mov
lds
xor
test
mov
incl
and
and
fistpl
jbe
mov
dec
cmp
push
nop
mov
popf
jp
add
mov
xor
push
adcl
xlat
scas
adc
xor
push
dec
jecxz
or
leave
dec
xchg
repnz
decl
xchg
aaa
addl
movsl
or
mov
xchg
pop
ds
xlat
dec
out
xor
cmp
push
fs
jge
xchg
cmp
mov
ljmp
lock
xlat
test
test
and
pop
adc
sbb
push
stos
pmulhuw
les
scas
int3
or
pop
dec
mov
sub
sti
jmp
scas
sub
push
testl
xor
fstps
xchg
aam
fdivrl
insb
add
ret
adc
push
imul
clc
mov
insb
sbb
dec
mov
dec
mov
stos
repz
ljmp
push
inc
out
add
inc
push
cmpsl
sub
jge
inc
call
cmpsb
adc
in
ss
xor
mov
xchg
add
pushl
jl
and
or
xchg
add
adc
pop
shl
gs
mov
sbb
jl
imul
pop
jb
stos
sbb
loopne
push
xchg
sarb
and
or
mov
es
cltd
pusha
inc
push
mov
mov
jne
mov
add
xchg
pusha
out
push
and
lcall
test
jnp
push
cs
stos
rorl
popa
inc
dec
aaa
loop
in
insb
add
hlt
lahf
push
pop
ja
push
xchg
in
push
lods
push
ljmp
loopne
mov
std
fdivrs
inc
daa
mov
mov
mov
outsl
fdivs
outsb
push
xor
pop
insl
adc
and
fwait
dec
mov
fmuls
xchg
cmpsl
popf
dec
pusha
pop
insb
mov
mov
iret
xchg
dec
cmp
jae
enter
shlb
and
jp
pusha
add
or
push
mov
xlat
fists
jecxz
dec
inc
movsb
in
or
lods
f2xm1
mov
fbstp
inc
xor
xchg
push
push
int
push
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
jmp
mov
cwtl
test
jb
jb
xchg
adc
lcall
jo
pop
jge
jo
dec
mov
xlat
jle
rolb
xor
xchg
mov
iret
xlat
and
adc
mov
sub
dec
xchg
pop
out
mov
stc
repnz
adc
push
cwtl
pop
testl
jmp
pop
outsl
mov
leave
xor
shll
jno
rorb
jmp
sbb
or
mov
arpl
jecxz
push
xchg
push
lret
push
mov
mov
jnp
push
mov
popa
mov
dec
xor
jae
push
pop
cmp
nop
mov
movsb
cmp
and
inc
or
mov
push
pop
mov
je
mov
xchg
call
adc
mov
mov
es
clc
mov
rorl
icebp
js
pop
jne
xchg
push
in
mov
mov
mov
loopne
jg
mov
push
adc
push
sub
nop
nop
mov
xor
mov
clc
fs
in
mov
hlt
insb
loopne
int3
adc
and
or
and
xchg
sub
inc
insb
test
or
dec
mulb
fcmovnu
scas
mov
orl
dec
adc
hlt
mov
dec
scas
cmp
outsb
push
mov
lea
cmpsl
mov
outsl
rolb
fisttps
popf
psllq
dec
add
pushf
adc
arpl
in
mov
pop
hlt
pop
mov
jmp
jmp
mov
testb
jnp
sbb
iret
pop
xchg
pop
xchg
lret
or
pop
clc
into
push
and
jle
lods
rorb
mov
jmp
fistps
adc
out
out
or
js
in
pop
xor
and
pop
push
push
scas
das
call
mov
ficoml
inc
inc
adc
mov
mov
dec
loope
cmp
enter
sarb
iret
xchg
jge
add
xor
fnstenv
xchg
inc
mov
xchg
cmp
fwait
mov
cwtl
add
ret
push
ljmp
lock
lock
mov
inc
test
rcll
loopne
jg
jnp
mov
mov
test
rcrb
sub
mov
pop
xchg
insb
xor
div
or
and
pusha
mov
lret
loope
sub
mov
je
adc
push
adc
scas
aad
dec
mov
xchg
xchg
xor
stos
loope
nop
ret
mov
jl
push
dec
push
out
mov
out
xor
cmpsl
fwait
dec
add
sti
loopne
in
in
outsb
mov
adc
fnstsw
ljmp
push
xor
pop
cmp
popa
sub
and
sub
inc
adc
and
xor
orb
out
sub
pop
pusha
stos
sbb
adc
jne
sbbl
sahf
popf
mull
ds
addl
nop
int
sub
pop
fwait
call
dec
cmpsl
fidivrl
imul
rorl
cltd
inc
jno
popa
movsl
cmp
dec
shl
lods
xchg
fstpt
aas
js
push
inc
push
andl
jmp
gs
adc
mov
test
add
mov
mov
or
mov
sub
lock
fmull
adc
pop
dec
icebp
loope
fwait
mov
movsb
gs
dec
lods
andl
xor
lcall
fistps
je
leave
cs
repz
cmp
mov
or
test
add
movsl
cmp
ss
cs
sbb
xchg
jl
jnp
adc
sbb
xchg
es
loopne
mov
add
add
or
ret
push
mov
sub
and
movl
mov
adc
movl
sbbl
mov
subl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
xor
sub
mov
sbbl
jmp
mov
mov
pop
dec
xor
jo
divb
inc
pop
jo
mov
ret
pop
mov
ret
sub
sbb
jno
mov
lret
xor
cmpsb
rorl
roll
mov
mov
cmp
add
adc
mov
pop
mull
xchg
popl
adc
pop
cld
adc
or
jge
loop
cmc
rcll
sbb
mov
inc
out
add
popa
cmp
dec
mov
aas
pusha
shrl
mov
push
loope
cmpsl
sub
out
push
adc
lds
incl
out
mov
and
scas
inc
test
mov
mov
outsb
fists
fdivrs
test
push
arpl
cmp
fs
jmp
cmpsl
int
sub
addl
and
test
ret
sbbb
xchg
push
repz
adc
sbb
dec
cmp
repnz
push
clc
xlat
fidivrl
jmp
cmp
mov
arpl
fbstp
sbb
and
dec
sti
aaa
ljmp
or
mov
movl
push
int3
sbb
fwait
pop
imul
mov
sub
add
dec
push
push
xchg
adc
xor
nop
iret
sbb
push
push
sbb
dec
add
mov
repz
mov
sti
xor
pop
jmp
jae
mov
mov
and
addl
push
js
notb
jp
lcall
adc
daa
mov
pop
nop
sub
icebp
or
call
jbe
in
xlat
sarb
jbe
loope
mov
pop
add
sub
jmp
mov
xorl
inc
imul
sbbl
hlt
out
pop
test
ds
or
lcall
inc
mov
mov
cwtl
pusha
loope
in
fcmovne
sahf
mov
sti
cs
icebp
enter
push
add
int
outsl
cld
in
fwait
mov
mov
repz
pushw
adc
jecxz
fistl
jl,pn
xor
out
ret
test
xor
xlat
mov
ljmp
jns
mov
jp
in
cmp
stos
push
adc
mov
dec
pop
pop
sub
sti
repnz
mov
push
pop
fucomp
push
test
xor
xor
xchg
and
xchg
cltd
add
mov
pop
scas
pushf
addb
cmp
xor
xorl
pop
mov
xchg
nop
cmp
in
in
mov
cmp
lret
subl
jmp
hlt
xor
fwait
repz
inc
xchg
aaa
xchg
sbb
je
pop
jo
mov
push
sbbl
sbb
pop
cmp
adc
inc
push
and
sbb
pop
scas
shlb
shll
push
sub
xchg
xor
outsl
pop
jno
sti
and
jle
inc
jge
int
cmp
loope
jo
xor
cmp
add
sbb
adc
mov
in
inc
out
inc
clc
xchg
mulb
inc
xor
lods
ret
int
adc
pop
xorl
movsb
jne
dec
mov
out
imulb
out
xor
mov
pop
adc
push
adc
ja
xchg
pop
push
das
mov
es
and
loopne
push
and
push
jno
mov
arpl
repz
cwtl
mov
sub
fbld
sahf
xchg
idiv
mov
inc
in
shll
les
adc
pop
mov
inc
xchg
mov
movb
icebp
sbb
test
cltd
dec
push
movsl
mov
cmp
aam
inc
and
repnz
sarb
sbb
js
imul
popa
in
aaa
aas
push
loope
or
adc
sarb
xlat
push
cmc
sub
cltd
pop
add
cmp
fcmovne
rcrl
mov
push
mov
pop
mov
mov
fincstp
outsl
xlat
jle
insl
sarb
lds
loope
hlt
in
testb
cmpb
stos
adc
dec
jg
sbb
xor
jle
lret
push
mov
jnp
iret
jg
mov
lahf
and
std
cs
push
lock
add
leave
subl
movsl
mov
icebp
adc
in
stos
cwtl
lock
sbb
adc
cs
mov
loopne
jle
insl
mov
cmp
mov
mov
xchg
cvtdq2ps
xchg
or
mov
in
dec
fstpt
lods
insl
inc
cmp
jnp
or
mov
xchg
cld
addr16
inc
out
sub
out
aad
movsl
xchg
and
jbe
xor
rcr
pop
and
push
sub
xlat
std
jle
mov
or
mov
in
lea
outsb
repnz
cli
dec
pop
neg
dec
inc
pop
jb
imul
mov
xchg
sbb
and
insb
fsubl
inc
arpl
pop
insb
out
mov
clc
xchg
loop,pn
inc
insl
xor
stc
mov
pop
inc
mov
cwtl
sbb
jmp
dec
inc
lret
xchg
push
xchg
aas
ds
jno
mov
xlat
xor
pop
in
xrelease
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
push
xorl
push
test
jmp
mov
mov
jne
jne
sub
pop
jo
mov
fistps
pop
int
mov
loopne
cmpl
mov
nop
sbb
cwtl
add
ja
inc
sbb
xchg
cltd
inc
fldenv
fldt
sti
dec
pop
mov
sti
dec
jae
mov
xchg
imul
xchg
cld
gs
sub
pushf
xor
push
dec
ja
adc
test
mov
lods
cli
std
xor
jg
subl
mov
fidivrl
imul
xchg
out
out
adc
mov
jmp
fldt
mov
pop
sbb
fsubrl
adc
and
ss
fs
dec
push
stc
add
int3
test
stos
pop
push
mov
frstor
ds
aas
jb
jp
dec
addr16
pop
mov
imul
leave
mov
mov
jns
lahf
shlb
stc
lods
sar
sub
push
and
push
loopne
int3
lcall
cltd
jae
jno
cli
inc
mov
mov
insl
push
mov
frstor
ret
pop
ret
cmp
pop
in
roll
xchg
les
fdivrl
push
mov
ret
in
push
fimuls
insl
xchg
je
inc
shrb
xchg
mov
pop
push
out
and
test
aad
mov
lods
lret
call
inc
inc
xchg
jge
xchg
mov
movb
out
inc
mov
fcomps
sahf
cmp
xor
ret
mov
jle
loope
mov
mov
sti
jo
pop
sbbb
cmc
insb
pusha
and
dec
andb
pop
pop
sub
mov
ficompl
pop
pop
jne
movsb
aam
data16
sbb
idivl
add
jp
mov
insb
repnz
push
cwtl
es
inc
ret
in
xchg
dec
pop
cmpsl
fisubrs
das
jmp
xchg
rol
data16
lods
outsl
into
mov
mov
and
xchg
ljmp
sbb
orb
das
aas
push
pop
stc
dec
mov
andl
push
out
dec
push
mul
loopne
negb
js
mov
jbe
dec
lds
mov
mov
hlt
jg
stos
push
add
lret
mov
dec
scas
jne
and
adc
in
lds
push
mov
in
imul
push
xchg
data16
xchg
outsl
cld
mov
jle
cmpsb
cltd
dec
mov
add
push
jle
sub
rcl
in
and
out
cmpsl
icebp
std
fidivl
movsl
rclb
fs
cltd
push
cmp
mov
je
mov
add
mov
or
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
pushl
push
push
call
mov
dec
mov
jmp
and
imul
mov
add
add
mov
sub
mov
jmp
lret
sbb
inc
loopne
push
mov
rorb
ja
popa
test
adc
jo
jle
jo
mov
cmp
jp
repz
sbb
cmp
jne
sub
mov
mov
rcr
insl
arpl
add
daa
repz
inc
add
jbe
cs
in
xor
test
rcll
or
xchg
push
mov
sub
mov
out
xchg
jae
rcrb
push
mov
lahf
xchg
pop
add
xlat
xor
mov
leave
xchg
jns
push
xor
popa
cmpsl
push
lahf
inc
push
dec
test
test
out
stos
jmp
push
orl
cwtl
jecxz
xchg
xor
push
xor
fwait
les
sbb
cltd
adc
lret
mov
mov
or
xchg
push
cwtl
jbe
notl
mov
div
pop
jp
fnstsw
clc
mov
enter
rolb
roll
push
fimull
pop
arpl
inc
mov
xchg
ret
mov
add
push
xchg
scas
xlat
xchg
rcrb
lret
push
pushl
and
cmp
sbbb
or
xorl
inc
pop
loopne
mov
add
push
push
push
sub
push
call
dec
lds
jmp
jae
or
mov
imul
fcompl
ljmp
inc
pop
fsubl
loope
jl
jae
mov
inc
gs
out
or
shrb
adc
enter
mov
pusha
sub
mov
aas
enter
scas
pop
mov
mov
ret
dec
aas
and
jo
dec
insb
js
sub
push
sub
push
mulb
imul
adc
pop
inc
mov
jo
ss
dec
mov
or
pop
sub
and
or
pusha
aad
out
loope
push
pop
div
ret
lock
pusha
in
repz
ss
fld
cmc
sub
imul
jb
push
or
pop
mov
jg
ficoml
lahf
jb
mov
icebp
js
jmp
push
cmpsl
iret
sub
mov
mov
mov
sbb
mov
xchg
lret
xor
jl
mov
adc
jo
scas
arpl
add
out
xor
mov
mov
mov
nop
xor
cld
or
adc
daa
jnp
adc
pushf
mov
push
add
rcrl
sub
roll
xchg
pop
cli
in
xchg
scas
js
lods
pop
mov
mov
add
xor
out
adc
xchg
push
shll
stos
jae
xor
or
into
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
sub
xor
jmp
call
jno
popa
push
xchg
arpl
push
lock
jo
mov
add
sub
inc
fmull
dec
sahf
imul
fdivs
outsl
adc
lds
xchg
aas
sbb
dec
outsl
mov
jne
mov
lret
scas
cmpsl
aas
xchg
add
pop
mov
cmc
in
xlat
pushf
dec
pop
test
in
stos
mov
xor
test
xchg
fidivl
dec
dec
rorb
mov
cltd
dec
jecxz,pn
insb
pop
jge
mov
daa
clc
and
popf
xchg
fcomp
inc
dec
adc
in
xor
adc
data16
pop
adc
adc
pop
mov
imul
jl
sbb
adc
add
add
aad
cmp
mov
and
adc
adc
xchg
or
andb
mov
jmp
push
sbb
mov
cwtl
and
xchg
das
enter
ret
mov
sub
xchg
movsl
std
xchg
xchg
js
pop
fs
aas
mov
jge
nop
mov
rol
xor
push
leave
add
push
rep
sbb
add
xchg
pop
lods
mov
data16
mov
lods
aaa
push
pusha
popa
mov
mov
fidivrl
repnz
inc
mov
fwait
ds
mov
lods
sbb
sub
jne
fucom
daa
xor
cmp
cmp
mov
daa
and
add
cmp
ficomps
push
push
imul
stc
fldenv
sti
daa
lea
add
int3
mov
push
je
in
mov
mov
cld
pop
stos
insb
xchg
roll
sbbl
rol
fisubs
pop
cmp
xor
inc
fwait
out
sti
sub
mov
int
negl
lcall
sbb
and
negb
pop
in
mov
mov
mov
and
sar
pop
lahf
imul
lods
and
mov
ljmp
sbb
mov
mov
fimull
or
or
xchg
add
add
mov
out
adc
xchg
adc
inc
sub
sbb
mov
xchg
lds
sti
xlat
xchg
hlt
xchg
loop
add
fadd
jne
dec
jl
and
aam
jno
rcrb
push
add
lret
imul
iret
movsb
outsb
divl
testb
sub
loope
fadd
pop
mov
leave
jne
fcmovbe
data16
xlat
push
inc
clc
push
pop
sbb
out
movsb
pop
mov
sub
fmuls
in
adc
mov
xor
mov
xor
adc
xor
jmp
push
popa
jne
add
cmp
cmp
jo
mov
mov
mov
adc
fcmovb
dec
xor
mov
mov
inc
cmpsl
or
clc
mov
repz
cmp
test
jecxz
adc
add
inc
in
jecxz
test
mov
in
loopne
pop
fisttpll
sub
sub
imull
fxch
int
xor
dec
in
and
pop
add
in
fwait
adc
or
aas
pop
sub
cli
jle
and
sar
insb
push
insl
les
in
inc
insl
lock
jmp
jae
jae
movsb
push
inc
lcall
lock
mov
addr16
dec
adc
add
cltd
orl
mov
jle
cmc
xchg
stos
and
imul
or
inc
sahf
inc
mov
inc
repz
into
sub
jns
inc
xchg
lcall
sbb
mov
add
sbb
push
aam
mov
ljmp
je
imul
shlb
arpl
lods
cmc
mov
int
pop
inc
lock
xchg
cmp
jbe
fidivrs
ljmp
std
xchg
loopne
and
cli
inc
mov
push
mov
idivb
push
xchg
mov
inc
mov
jecxz
mov
add
jg
and
or
hlt
nop
cmp
and
fildl
add
int3
idivl
enter
cs
mov
rcrl
sbb
mov
mov
sbb
nop
mov
and
mov
pop
psraw
lret
popa
cmp
sub
push
iret
mov
out
mov
addb
xchg
push
sbb
add
inc
fwait
iret
pop
popa
sub
xchg
xchg
in
and
test
add
rclb
push
or
inc
mov
clc
mov
push
js
lock
or
movl
xchg
jnp
xchg
arpl
sub
jnp
sbb
std
pop
xchg
dec
imul
xchg
idivb
lods
inc
sub
and
mov
sbbb
aad
sub
pop
out
and
subl
fs
push
jne
xchg
jg
hlt
pop
cmpsl
push
pop
daa
mov
adc
sub
in
jmp
mov
rorl
test
rorl
icebp
scas
and
sub
insb
scas
push
lods
lret
mov
fistps
ret
icebp
sub
push
inc
mov
adc
lret
mov
mov
mov
je
notl
mov
xor
xorl
add
jmp
inc
mov
jp
adcb
mov
sbb
outsb
jo
mov
push
push
icebp
or
sub
into
mov
xchg
loop
idivb
adc
xchg
dec
pop
idivl
jae
jne
adc
add
pop
mov
sub
mov
inc
imul
sbb
lods
inc
xchg
sub
jae
jb,pt
adc
dec
mov
or
ljmp
fsubrs
inc
inc
repnz
stos
add
or
fbstp
in
mov
jl
cli
sti
pop
ret
inc
cmp
scas
stc
sbbb
dec
xchg
xor
leave
sub
stos
push
xlat
imull
movsl
push
icebp
mov
sub
ret
sub
jns
dec
inc
mov
push
in
dec
cli
xor
pop
fcmovnb
loop
cmpsl
cmp
fcomp
sbb
lods
ja
cmp
pop
or
adc
inc
cmp
mov
mov
jae
sbb
cmp
gs
sub
inc
mov
pusha
push
les
test
iret
xor
out
repnz
pop
nop
xchg
jl
lret
push
or
inc
jo
inc
fstpt
pop
inc
mov
xor
dec
scas
dec
jb
cld
push
shlb
xchg
xor
ja
push
mov
rcl
sbb
mov
and
mov
dec
cmp
inc
mov
fs
xchg
pop
mov
leave
in
mov
je
sub
mov
sbb
test
in
lods
sti
cltd
lret
jb
mov
jo
xchg
cmp
cmc
add
push
lcall
cmp
inc
ss
icebp
dec
fwait
jnp
idivb
dec
cli
cmpsl
ljmp
divb
push
cltd
xchg
lods
pop
mov
clc
add
jns
daa
inc
cld
ror
and
test
jnp
mov
push
pop
scas
xor
xchg
in
mov
fidivl
ss
push
mov
lods
dec
sahf
mov
xlat
sbb
into
push
ljmp
pushf
inc
xchg
jns
mov
mov
mov
mov
sub
pop
rolb
filds
mov
cmp
icebp
incb
int
or
es
stos
adc
mov
mov
push
loop
ljmp
jmp
insb
push
outsl
mov
dec
out
ljmp
dec
testl
add
ficomps
pop
jns
shlb
stc
dec
adc
mov
jle
jne
mov
clc
jne
pushl
jmp
and
lods
shrb
in
mov
jo
mov
fidivrl
jg
sbb
push
mov
inc
mov
jp
adc
cmp
mov
insl
pop
add
mov
rcll
imul
jno
into
gs
fwait
mov
imul
mov
rcl
jns
pop
mov
lahf
sub
sub
jl
mov
sbb
xchg
in
push
jae
mov
dec
sbb
sbb
dec
leave
pop
cwtl
pop
loopne
mov
or
inc
aaa
xchg
in
out
or
hlt
nop
ret
or
adc
mov
xor
cmp
mov
lods
fs
sub
and
rcrl
push
jecxz
or
dec
sbb
xlat
insl
mov
inc
jg
and
xor
xchg
div
out
in
fwait
stc
mov
sti
add
shll
sub
jne
sahf
nop
sub
shrb
out
repnz
movsl
ss
scas
mov
out
mov
rolb
sbb
push
push
push
dec
xchg
xchg
int
or
scas
sar
in
in
and
xchg
mov
cmp
test
sbb
mov
xor
sbb
pop
rclb
les
dec
mov
andb
stc
sub
sub
xor
fisubrs
adc
mov
and
mov
adc
mov
clc
jg
mov
mov
mov
mov
mov
in
adc
data16
sti
loopne
popf
fldt
ds
out
push
push
cmp
xchg
ds
in
daa
je
mov
adc
xchg
inc
sub
pushf
movsl
popa
sti
cwtl
mov
fadds
dec
movd
call
push
add
mov
cli
cltd
xchg
dec
mov
dec
loopne
xchg
pop
xor
and
cmp
iret
dec
jp
mov
in
add
test
pop
out
and
ljmp
mov
testb
inc
cmp
cmc
shll
or
cmp
ficoml
mov
orb
pop
jns
dec
jge
aaa
push
into
out
popa
mov
fdivrs
scas
movsb
leave
xor
jge
scas
fnstcw
mov
inc
arpl
inc
fistpll
mov
jo
fwait
out
loop
and
aad
adc
cmp
insb
aam
sbb
call
inc
bound
hlt
outsl
leave
adc
sahf
lods
adc
inc
loop
push
pushf
call
jmp
pop
insl
and
xor
insl
jp
or
xchg
jp
mov
mov
mov
icebp
into
mov
imul
add
insb
out
in
sub
push
mov
out
lret
mov
mov
clc
dec
sahf
xchg
mov
loopne
movsb
mov
sub
in
push
pop
scas
push
xchg
lret
iret
inc
xor
adcl
cmp
je
xchg
stc
test
dec
sub
pop
nop
xchg
mov
sbb
adc
inc
and
in
mov
mov
outsb
dec
in
sub
cmpb
xlat
fwait
cmp
inc
mov
dec
jb
pop
scas
cwtl
test
xor
adc
pop
lcall
enter
mov
xchg
add
cwtl
imul
add
push
mov
outsb
pop
shll
sub
std
dec
sub
xor
jmp
in
pop
mov
inc
aas
cmp
push
ja
add
popf
push
enter
push
cmp
popa
jmp
xchg
add
aad
xor
push
pop
lahf
jo
xor
push
cmpsb
xchg
push
xchg
imul
push
push
cbtw
aad
xchg
scas
or
addr16
pop
in
jb
adc
add
es
ja
mov
arpl
pop
sbb
sbb
les
push
loop
mov
ljmp
pop
and
test
hlt
cltd
dec
lea
dec
scas
add
in
xchg
or
xchg
fdivrl
jno
dec
push
sbb
inc
push
dec
fsubrp
es
mov
sbb
and
les
xchg
ja
jp
mov
aam
test
aas
std
mov
jmp
pop
test
inc
adc
and
sbb
or
pop
ret
jb
sub
in
dec
call
outsb
push
pusha
outsl
add
scas
cmpsb
aas
fldl
adc
ret
adc
out
insl
cmp
mov
mov
lret
mov
mov
mov
shl
lds
enter
push
dec
mov
dec
jmp
sbb
pop
lcall
mov
test
jle
sbb
xchg
stos
test
inc
leave
pop
mull
imul
inc
push
test
xchg
cmp
cmc
and
jo
mov
adc
fists
aad
push
adc
stos
cmp
jl
xlat
mov
loop
test
arpl
loop
clc
loop
xchg
or
movsb
arpl
jecxz
push
and
jnp
pop
and
xchg
jnp
push
inc
and
ja
mov
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
xor
add
cmp
movl
je
pushl
decl
pushl
xorl
call
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
or
mov
adcl
xor
decl
add
movl
cmp
je
not
mov
mov
mov
xorl
jmp
lods
mov
loopne
outsb
push
repz
scas
int
jbe
jo
jle
jo
scas
mov
dec
sub
dec
push
mov
cmpb
add
xor
jno
inc
cmpsb
add
mov
mov
lds
add
sti
test
es
add
cs
ret
mov
shrb
mov
push
enter
add
das
jl
dec
jb
cld
das
ja
cs
repnz
pop
pmaxub
scas
or
inc
pop
sub
xchg
je
ret
cli
push
insb
ss
jae
push
cmc
fsts
mov
test
flds
lret
sub
aad
hlt
dec
std
fldl
dec
dec
adc
js
inc
bound
ja
xorb
popa
leave
rclb
sarl
mov
aas
sbb
inc
push
cmpb
ljmp
inc
nop
outsb
fwait
leave
jbe
popfw
icebp
or
mov
sahf
sub
ja
mov
inc
sbbb
scas
imul
pop
ss
dec
jg
data16
in
xor
addr16
flds
mov
sub
adc
xchg
cs
jnp
aam
add
mov
popa
loop
jmp
adc
fdivrl
ret
xchg
push
cmc
xlat
bound
add
movsb
fldcw
dec
popf
xchg
fists
bound
int3
addb
sub
lcall
cltd
fsubl
outsb
hlt
sahf
in
pop
loop
pop
fldcw
mov
push
loop
into
lds
ret
jnp
test
mov
sub
sub
xchg
nop
stos
jmp
push
sti
stos
mov
aam
fcmovbe
and
jmp
notl
mov
mov
icebp
stc
rol
divb
xchg
std
inc
outsl
cs
or
aaa
mov
mov
sti
loopne
mov
pop
jb
fbld
frstor
mov
fistps
xchg
dec
dec
inc
push
push
add
inc
bound
imul
int
in
fimuls
cmp
push
sbb
mov
mov
xor
sub
enter
icebp
pusha
or
clc
fcomps
cmc
cmp
cli
cmp
mov
pop
jle
mov
pusha
pop
and
outsl
daa
in
ret
sbb
jno
rorl
cmp
subb
fucom
push
dec
bswap
dec
lret
push
pop
pop
add
xchg
sub
lret
mov
shrb
cmpsl
imul
mov
and
fisubs
add
lea
cmpsb
jbe
dec
imul
mov
xchg
jb
ret
sub
jno
shll
sbb
and
add
add
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
orl
add
mov
or
mov
mov
sbb
mov
addl
add
add
mov
mov
mov
add
neg
xor
and
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
add
lea
mov
push
jmp
add
xor
inc
cld
xchg
loop
jge
sub
jae
jo
jle
jo
pop
data16
fldt
std
pop
xchg
lcall
fdivrl
shll
xchg
xchg
add
adc
push
movsb
xchg
inc
out
mov
xchg
ret
popf
jbe
shl
mov
in
inc
cmc
iret
in
addr16
pop
lea
popf
jl
xchg
lock
lcall
lods
lcall
jmp
ss
sub
xchg
popa
inc
mov
dec
sub
sub
ret
adc
pop
sub
xchg
inc
lods
sbb
adc
pop
pop
imul
sub
out
pop
setb
mov
mov
jmp
or
loope
xchg
repnz
jecxz
fcoml
std
jae
cmpsb
mov
in
pop
daa
andb
daa
test
jnp
lret
and
mov
mov
sub
movsb
movsl
out
fisubrl
push
test
mov
inc
mov
sarl
pop
or
add
mov
add
mov
jns
daa
jl
dec
jl
mov
xchg
cmpsb
inc
pop
das
js
lret
aas
jl
mov
stos
mov
fisttpll
rcll
jmp
int
dec
adcl
push
loopne
and
xchg
mov
adc
ja
dec
daa
test
std
push
cmpb
fmuls
sbb
dec
shl
push
shlb
sbb
out
mov
lcall
jnp
inc
jle
test
add
mov
pusha
adc
or
test
push
mov
xor
push
push
dec
cmp
pop
and
jecxz
cmova
and
xchg
js
popf
cmp
add
mov
jp
repz
loop
popf
and
add
sbb
mov
inc
outsl
push
lea
mov
push
and
ljmp
loope
xchg
aad
push
add
or
test
mov
dec
mov
fwait
push
lods
cwtl
ds
jo
adc
sub
xor
hlt
cmp
push
fwait
rolb
es
ffree
mov
in
cmp
sahf
mov
jmp
push
xchg
adc
lods
cmp
std
and
iret
mov
test
xor
pusha
js
and
cwtl
xlat
aam
ljmp
icebp
int
sbb
mov
xchg
pop
push
fstps
test
mov
loop
dec
cld
mov
and
sbb
in
dec
or
stos
inc
mov
pushl
pushl
call
mov
jmp
ret
sbb
sub
jno
pop
or
mov
jo
jle
jo
inc
pop
cwtl
fstps
xor
cltd
mov
fsub
pop
lods
sbb
daa
mov
cmp
je
pmovmskb
xor
setnp
sbb
loopne
mov
ja
mov
je
cmp
and
xchg
cmp
xlat
and
mov
add
fisttpll
cmpsl
sub
std
mov
xchg
and
add
jnp
inc
jno
lret
push
fwait
shlb
insl
lcall
rorb
push
mov
push
lds
adc
cmp
pop
fwait
pop
lret
js
ss
enter
fsubs
xchg
mov
dec
mov
cmp
adc
jmp
xor
mov
adc
cmp
pusha
dec
mov
or
ss
adc
jns
sti
pop
xor
in
scas
das
adc
mov
cmc
mov
sti
xchg
mov
sbb
xchg
loope
scas
cmp
xchg
in
add
and
imul
dec
pop
inc
and
jbe
pop
aaa
jecxz
sub
xor
mov
pop
xor
in
in
bound
dec
xor
data16
sub
sbb
or
loope
sub
mov
stos
mov
cmp
aaa
mov
sub
mov
fbld
repnz
das
push
sarl
into
js
ret
loope
add
sub
mov
lea
sub
sti
jns
push
cli
sbb
movsb
xor
es
xchg
add
inc
xor
sahf
loope
icebp
cmp
push
jl
stos
mov
push
test
mov
ficompl
pop
push
xor
cmpl
aaa
xor
xor
pop
and
in
jp
jp
xchg
mov
adc
outsb
add
hlt
pop
mov
mov
pusha
scas
call
sbb
pushf
in
mov
aaa
add
push
daa
fisttpl
rorb
sbb
mov
or
fcomps
fidivrl
jp
loope
mov
inc
cwtl
pop
xor
les
and
mov
mov
data16
aaa
lock
xchg
add
loopne
mov
aad
scas
cvtps2pd
xorb
mov
aad
dec
mov
push
and
mov
mov
and
fwait
out
dec
mov
and
out
int
pop
and
ds
inc
sub
add
xchg
movsb
fdivs
je
adcb
push
cmp
mov
mov
xor
jmp
add
mov
jb
jge
jge
clc
jb
adc
jo
jle
jo
mov
cld
mov
sti
psubw
aas
add
and
pop
jne
out
ja
sbbb
jmp
xorb
test
adc
fsubs
xlat
fbstp
xor
outsb
idiv
dec
adc
out
cld
jp
leave
sbb
and
cmp
mov
cmpsb
ds
add
popf
add
dec
sbb
mov
pop
xor
jbe
cmp
pop
das
ljmp
push
inc
xchg
negb
or
xor
gs
mov
cs
shl
xor
aad
mov
xchg
mov
mov
pop
rcrl
jecxz
adc
bound
push
stos
fcmovbe
fistl
sti
mov
jecxz
jae
clc
ficomps
xor
adc
dec
dec
sbb
loop
jbe
xor
repz
pop
das
pop
repz
stos
lahf
scas
add
and
adc
jo
adc
andb
std
out
ret
loop
jnp
leave
mov
out
sbb
aas
int3
lahf
shlb
ss
test
pop
daa
stos
cmp
fsubrl
jae
xlat
stos
xor
adcb
lods
xor
imul
loope
inc
stc
adc
jo
xor
push
xchg
inc
jmp
sbb
rclb
mov
notl
pop
lret
cmp
add
neg
pusha
xchg
inc
push
mov
xor
test
call
jbe
cli
jp
rorb
movsb
or
xchg
jmp
dec
enter
xchg
sbb
sub
pop
cmp
pop
add
cmp
mov
pop
loope
test
jae
push
fwait
add
add
pop
fwait
mov
mov
cmp
sub
jno
mov
add
adc
imul
pop
mov
xor
ds
popf
shlb
and
cmpsb
sbb
out
push
sub
sub
pushf
loopne
or
sbb
pop
and
out
mov
push
ja
jns
mov
and
pusha
pusha
mov
les
jmp
push
inc
lods
iret
xchg
gs
mov
push
scas
push
test
push
cmpl
aaa
sti
adc
jo
sbb
or
cltd
nop
and
aaa
sbb
push
pop
push
lods
sahf
in
push
shlb
push
push
cmp
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
icebp
sbb
imul
outsl
stc
out
and
mov
jg
mov
cli
decb
aas
jge
xor
inc
pop
pop
scas
jp
mov
xor
pop
dec
push
add
shl
cmpb
push
icebp
bound
xchg
insl
push
sbb
adc
inc
fsubl
push
ret
dec
or
xchg
imul
lea
les
cmp
sub
push
gs
dec
xor
xchg
jp
add
sub
xchg
loopne
ret
and
cmp
push
outsl
sbb
mov
sbb
loopne
push
lods
xor
rep
loope
dec
imul
sbb
pushw
fs
cwtl
cmp
sti
xor
cmpsb
shrl
add
jmp
loope
mov
push
dec
inc
mov
dec
jnp
adc
adc
fstpt
inc
add
mov
into
inc
cmpsb
inc
jl
inc
imul
xor
or
mov
popf
mov
rcl
push
loope
scas
imul
movsl
push
sub
cmp
cmp
gs
in
dec
pop
sti
jae
into
mov
ret
in
inc
outsl
mov
add
ret
out
adc
and
imul
cmp
push
add
fadds
pop
xchg
push
ja
push
loope
in
xchg
and
adc
je
enter
js
subb
push
push
inc
xlat
loopne
out
loope
xor
push
mov
pop
je
jo
addb
loopne
in
subl
shrl
out
int
mov
add
mov
call
cmc
test
imulb
xchg
add
cmpl
std
into
jno
inc
dec
das
in
dec
mov
sbb
xchg
add
xchg
ret
out
nop
mov
rcrl
scas
in
xchg
aas
xchg
xchg
lods
cld
and
aam
je
neg
push
out
inc
add
fnstenv
and
stos
fcmovnu
mov
lcall
mov
cmp
stos
popa
incb
arpl
cmovge
insb
jne
lds
cwtl
adc
jo
xor
add
inc
outsb
cwtl
mov
push
sbb
push
xacquire
jae
lret
popf
xchg
ret
loopne
or
mov
ds
dec
adc
add
inc
les
lods
cmp
cmpl
mov
sbb
or
ja
fs
dec
pop
pop
sub
stc
mov
das
das
or
mov
sub
ss
std
push
jb
pushf
lret
arpl
add
pop
mov
loop
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
jmp
aas
fidivrl
sbb
bound
sub
mov
cmp
movsb
js
jo
jle
jo
or
dec
shrb
das
pushf
pop
xor
shlb
push
or
dec
xchg
xchg
addr16
push
add
cs
movsb
sahf
push
imul
cli
or
sub
test
add
mov
dec
add
sbb
and
movsb
enter
push
sbb
popa
add
fdivl
inc
cmp
cmp
loopne
sub
jb
jg
popa
inc
leave
add
and
cltd
mov
mov
fs
aad
fcomps
jp
pop
std
jle
gs
jle
das
lcall
xchg
jge
jbe
push
pmuludq
jle
out
movsb
cmpl
mov
iret
sbb
sbb
stc
in
aam
movsl
into
dec
inc
xor
stos
rcrl
dec
xchg
push
popf
idivb
jl
test
sbb
or
and
hlt
cmp
dec
lahf
setbe
inc
rcrb
fmuls
cmp
adc
pop
loopne
sub
dec
mov
push
cmpb
jmp
or
fxch
jecxz
mov
insl
fwait
jo
or
test
repz
daa
adc
loop
ds
cmp
pop
xor
mov
rcr
add
xor
xchg
aad
rcrb
lret
arpl
pop
test
jnp
and
and
fistps
or
leave
jno
mov
mov
addb
jbe
xlat
sub
and
rep
insb
or
dec
shll
mov
adc
push
jno
pop
xchg
icebp
cld
out
aad
dec
jnp
push
cltd
push
push
push
pop
jbe
rorb
mov
clc
xlat
push
adc
fcomps
mov
xlat
adc
cwtl
in
adc
mov
ds
sti
xchg
loopne
popf
call
aaa
call
push
mov
sbb
adc
xor
mov
mov
fs
outsl
std
xlat
mov
test
and
mull
into
add
int
int3
mov
or
jbe
jbe
dec
jg
pop
xchg
data16
iret
push
xor
loop
pop
loopne
add
and
pusha
jo
mov
sbb
fs
out
add
ljmp
outsl
mov
cmp
in
sbb
out
xorl
and
jnp
jle
lret
pop
iret
and
mov
stos
inc
mov
aas
add
das
or
sub
mov
dec
lcall
test
lret
gs
mov
mov
pusha
pop
outsb
test
outsb
add
imul
lods
mov
dec
jae
sub
mov
mov
mov
xor
mov
jmp
mov
jne
pop
push
fldcw
add
jo
sub
or
push
xchg
push
mov
jp
cmp
dec
fnsave
cmp
lcall
fsubr
clc
enter
jb
out
xchg
jne
dec
inc
push
xchg
adc
adc
sbb
mov
sbb
mov
and
cmp
aam
dec
and
mov
imul
dec
fistpll
pop
cmp
addr16
cmp
xlat
or
pop
sub
push
mov
sbb
iret
sub
add
imull
mov
enter
push
mov
pusha
xlat
insl
aam
cmp
clc
daa
inc
adc
jb
and
or
xchg
cmp
mov
or
jecxz
loopne
lods
pop
mov
pop
pop
subb
xchg
or
cmc
idivb
popa
outsb
jge
and
or
fdivrl
sbb
arpl
jp
pop
lea
mov
pmulhw
cmp
ja
xor
fnstenv
call
dec
std
xchg
push
aad
inc
sub
and
ljmp
push
std
mov
pusha
repz
cmp
outsb
cmpsb
or
xchg
pushf
xchg
add
out
and
mov
jmp
std
fcoms
imul
pop
cli
cmc
cmpsb
add
movsl
inc
dec
movsl
sub
out
mov
into
push
sbb
xor
and
jo
or
into
add
sbb
in
stos
stos
std
sub
xchg
xor
jmp
testl
gs
fstpl
cmp
cmpsb
xor
dec
js
pop
or
cmp
aaa
inc
mov
mov
popf
std
dec
inc
adc
and
mov
int
lods
inc
push
inc
test
int3
or
push
add
cmp
lods
negb
or
pop
std
lret
mov
imul
sbb
enter
xlat
push
push
in
cli
dec
jp
out
pop
cmp
aas
leave
mov
jbe
push
aam
lret
pop
mov
pop
jae
je
fs
aas
push
jle
pop
mov
movsb
xor
cmpsb
inc
je
sub
sub
testb
ficoms
sar
fcmovbe
push
out
pop
movsl
and
into
sti
aaa
pop
mov
sbb
mov
out
mov
inc
jl
pop
dec
jg
ficomps
ret
je
inc
sbb
mov
imul
lock
xchg
jae
lods
sbb
mov
mov
mov
lret
pop
enter
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
sub
sub
xchg
push
mov
mov
jg
mov
xor
loop
fwait
or
cmp
ds
in
dec
sub
dec
and
xor
add
clc
in
sbb
xchg
roll
cmp
push
ss
jns
stos
into
gs
add
pop
xor
lods
stos
sbbb
xchg
lret
mov
xor
mov
dec
and
leave
cmpsb
sbb
aaa
lcall
test
in
sub
jns
sar
mov
test
cltd
es
jmp
in
jno
mov
pushf
add
jne
fs
mov
adc
jmp
sbb
bound
aam
jl
xchg
push
push
das
mov
and
iret
jo
stos
cwtl
push
das
inc
test
xchg
and
mov
sub
mov
inc
add
stos
add
xchg
xorl
jge
pusha
pop
xor
push
movsb
cmpsl
jnp
xor
rorl
lret
or
mov
xor
push
fdivrs
inc
movsb
push
xchg
sub
xor
ficoml
xor
rorl
cmp
out
pop
call
jns
in
or
mov
pop
stos
addl
mov
popa
pop
js
sub
movsl
insl
mov
repz
sbb
in
adc
out
xchg
loopne
in
mov
das
mov
cmp
rcr
and
jmp
pop
pop
mov
cmc
mov
inc
adc
shll
enter
sbb
jno
lret
je
enter
pop
adc
scas
xchg
clc
sub
inc
lods
aaa
aaa
jae
subb
jne
movhlps
add
or
ljmp
test
mov
mov
fcmove
mov
hlt
ficoml
iret
sbb
rcrl
out
loope
faddl
inc
xor
push
mov
mov
pop
mov
fwait
outsb
push
and
push
test
pop
gs
call
lock
mov
pop
push
add
pop
lock
popf
xchg
aaa
loop
int3
mov
mov
cmp
jns
and
outsb
inc
addr16
mov
jnp
add
xor
pushf
mov
mov
and
cmp
lea
or
inc
dec
xorb
std
out
sbb
iret
imulb
dec
add
fldt
fcoml
xor
ss
movsb
sbb
lods
adc
adc
test
mov
cmp
inc
lock
push
and
cld
call
fsubs
pop
sbb
mov
add
div
mov
jmp
adc
inc
rolb
xchg
int
rcll
test
movq
jle
jo
or
and
lahf
jb
test
add
cmpsb
test
das
mov
and
mov
sbb
sbb
cwtl
mov
ret
loope
push
hlt
imull
xor
jg
imul
ret
insl
xchg
test
cld
sbb
inc
or
jmp
jae
sub
jns
rcr
mov
sbb
rcl
je
add
sub
hlt
and
cmp
fidivrl
mov
dec
cld
mov
adc
aas
fidivrs
imul
xchg
jge
scas
cmpsb
mov
sub
add
xchg
fucomi
or
gs
hlt
bound
ret
pop
jo
fwait
inc
sbb
in
and
mov
rcll
nop
mov
in
jg
mov
push
fisttpl
fs
loope
ret
and
cmpb
icebp
daa
fs
and
ret
cld
xchg
inc
lret
pop
aaa
sbb
sbb
lret
pop
int3
gs
pop
xchg
push
movsb
add
lods
mov
xchg
cmp
clc
insl
push
fsub
and
or
scas
push
pop
ret
pop
in
push
xchg
dec
ret
lock
pop
mov
fcoms
sti
shlb
orl
inc
mov
aas
push
mov
popf
or
xor
test
in
jp
mov
or
movsl
and
in
jnp
sbb
mov
cltd
in
inc
mov
ror
andl
lea
xor
mov
int3
sub
jge
into
pop
sbb
mov
mov
adc
ret
loope
roll
jo
pop
mov
rclb
rorl
call
jg
cmc
cmp
adc
and
test
fldz
mov
call
sub
adc
push
lahf
mov
sbb
pop
inc
pop
adc
mov
int
jae
ret
imul
lahf
inc
shlb
xor
call
pop
dec
sbb
dec
adc
daa
test
out
jmp
add
dec
or
pop
int3
imul
cmp
xchg
lods
and
push
sbb
out
pop
stos
xor
add
xor
xor
mov
sub
mov
lret
pop
cltd
fwait
add
mov
inc
mov
add
xchg
add
ja
add
pop
mulb
sti
push
push
shll
test
sti
inc
sub
test
sbb
rorl
xor
jmp
sub
mov
popa
pop
xchg
aas
sbb
xchg
jle
jo
xor
cmpsb
vprotb
inc
add
adc
push
xchg
ficoms
adc
scas
jns
imul
and
scas
int3
adcl
xchg
std
pop
loope
shlb
mov
jb
sub
xor
es
insb
pop
xchg
out
mov
add
test
lock
shlb
stos
sub
ffree
test
add
bnd
sbb
xor
pop
ret
adc
push
enter
inc
xchg
dec
aaa
and
data16
mov
xor
out
mulb
or
sub
pop
daa
dec
ficoml
cmp
out
data16
cmpsl
xchg
jb
negb
xchg
cmp
mov
mov
ret
ret
sbb
decl
addl
xor
or
cli
xchg
enter
sbb
std
dec
aas
lea
jb
or
jg
push
mov
lds
cmp
adc
arpl
imul
inc
idivl
out
cld
xchg
lahf
fcomi
loopne
hlt
pop
mov
jae
push
daa
hlt
xchg
jp
pop
dec
test
push
jo
add
xlat
test
out
js
push
stos
mov
pop
sbb
dec
jg
movsl
int
es
push
rcrb
in
xlat
sub
fisttps
and
sbb
pop
cmp
jecxz
fs
mov
cmpsb
call
mov
and
jo
jno
add
jle
pop
icebp
repnz
dec
inc
loopne
jb
push
in
insb
stos
pop
inc
nop
sub
sbb
aam
pop
dec
inc
in
insl
jle
cmp
sti
lea
aas
roll
fidivl
and
outsb
pop
sub
ds
movsl
insb
pop
sub
cli
lods
mov
inc
icebp
jne
divl
cltd
popa
adc
jbe,pn
xor
sub
xchg
je
xlat
fs
cmp
mov
stos
pop
mov
inc
dec
lds
pop
repz
xchg
gs
in
sub
cmp
push
sbb
push
in
adc
pusha
clc
hlt
push
xchg
scas
jo
or
adc
pop
punpckhdq
inc
je
mov
push
in
sub
jl
fldcw
sub
mov
cmp
lods
xchg
movsb
push
icebp
mov
push
push
push
xor
or
scas
inc
jle
pop
mov
push
sbb
out
in
or
add
or
daa
iret
hlt
pop
lds
jb
adcb
rcrl
adc
mov
jge
mov
mov
jmp
dec
fistpll
arpl
pop
jp
mov
or
mov
pop
sub
ficomps
sbb
add
sub
mov
or
add
inc
sbb
dec
mov
test
int
rorb
dec
lds
xchg
fsubs
lea
jae
pushf
push
xchg
arpl
sub
mov
sbb
or
call
push
sub
test
div
lods
pop
mov
rorb
mov
dec
sarb
adc
ds
push
push
imul
cmpsl
inc
or
add
js
cmpsb
cmp
popa
sub
iret
xor
mov
push
movzwl
adc
jl
lret
or
jl
adc
lret
jl
pop
nop
lods
orl
mov
push
add
pop
lahf
mov
ss
xchg
pop
gs
add
adc
push
mov
mov
ror
mov
negb
fisubrs
imul
test
and
call
push
push
xor
outsb
inc
mov
lods
push
sbb
pop
in
aam
mov
jge
ficompl
xchg
push
movsl
pop
lock
push
jno
iret
ss
out
neg
mov
stos
aad
imul
add
xchg
sarb
or
movsl
fs
out
call
cwtl
shll
rorb
out
test
ret
push
into
loopne
test
sbb
imul
mov
loop
fadd
cmp
mov
mov
inc
xlat
cmp
dec
jns
mov
inc
jge
lds
cmp
loopne
mov
ljmp
fwait
popf
enter
sub
leave
daa
sbb
inc
and
loopne
repnz
lods
jp
dec
pop
cmp
repnz
inc
daa
inc
mov
xor
mov
sub
mov
push
xchg
inc
aaa
shr
int
aam
xor
dec
loop
jne
xor
push
inc
push
add
adc
mov
jbe
jnp
mov
test
lea
fidivl
in
or
int3
lods
or
or
das
filds
imul
subb
test
stos
cmpsl
jno
insl
outsl
sahf
cmpsb
pop
out
lea
lret
out
lret
mov
aaa
ret
jmp
jb
jle
add
xchg
xor
out
out
sbb
jg
inc
push
iret
pop
inc
daa
mov
add
pop
inc
or
fdivp
pop
add
rorb
in
cmp
iret
cli
or
dec
adc
mov
xor
jge
push
push
mov
push
push
shll
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
jmp
adc
iret
cmpsl
aad
jae
jl
jge,pn
sub
lret
jo
jle
jo
sbb
lock
sub
xor
sbb
ret
lcall
stos
mov
and
sub
pusha
leave
push
adc
mov
or
sbb
add
adc
or
cmp
loop
in
mov
mov
add
shlb
jmp
or
xor
jl
cmp
stos
jp
jae
fcompl
mov
stos
push
xor
mov
and
mov
stos
roll
jbe
or
notb
fs
stos
lahf
in
fwait
bound
push
xchg
dec
xor
inc
mov
or
loopne
mov
xor
js
adc
pushl
sub
pop
pop
popf
xchg
cmp
bsr
repz
popf
loop
jns
sub
add
neg
dec
call
rorb
dec
mov
scas
rolb
mov
in
jge
sahf
ss
add
push
movsb
fimull
test
int3
ds
data16
ret
mov
inc
inc
loope
fcmovnu
mov
lahf
dec
repnz
pop
adc
push
mov
and
rcrl
mov
lcall
fxch
adc
sti
stos
sahf
test
dec
mov
jg
inc
jl
rorl
push
lods
repnz
fxtract
mov
into
outsl
xor
mov
mov
scas
mov
inc
arpl
leave
mov
mov
adc
cmp
add
arpl
jo
mov
pop
pop
rclb
aam
add
jl
js
stos
sub
call
iret
into
insb
cmc
xor
push
cmp
mov
rcrl
movsb
pushf
push
xlat
adc
out
repz
dec
outsl
pushf
push
adc
or
pop
xchg
arpl
mov
dec
es
jl
lret
ja
and
outsl
mov
sub
dec
pop
sbb
sub
test
jmp
push
xchg
mov
orl
xor
test
mov
push
arpl
and
movsl
jmp
mov
dec
cmp
push
add
push
cmova
enter
dec
sub
add
mov
arpl
push
arpl
push
cltd
sbb
rcrb
aad
mov
cli
int
mov
bnd
adc
push
into
popa
les
cmc
push
cli
mov
fiadds
mov
jb
xor
sbb
or
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
jmp
or
shll
jno
jmp
lds
das
stos
adc
jo
jle
jo
mov
xchg
push
inc
arpl
repnz
js,pn
lock
idiv
aas
cmp
mov
or
fistpll
mov
dec
in
xchg
aaa
call
jbe
cmp
push
mov
stos
sub
loopne
rcrb
mov
stos
sbb
fs
js
and
in
bnd
cs
xchg
jg
std
xor
push
add
sub
jb
push
mov
pop
nop
std
cli
push
mov
lock
sub
fmuls
lahf
add
es
pop
xchg
mov
jnp
add
or
scas
fildll
xlat
push
cltd
aas
ljmp
dec
mov
xchg
sub
or
push
rcr
fwait
shll
inc
cmc
repnz
lahf
sqrtps
mov
mov
push
xchg
add
loope
sub
cwtl
in
mov
mov
test
sub
mov
pop
dec
xchg
je
pop
adc
fdivl
sub
adc
jmp
cmc
mov
sub
pop
popf
push
or
xchg
mov
aaa
into
in
xchg
adc
lock
mov
sbb
repnz
dec
sahf
stos
jmp
jle
int
std
mov
in
mov
mov
push
test
scas
les
call
out
sarl
enter
cld
xlat
mov
cmp
push
push
and
scas
lods
sub
mov
dec
push
sub
cmp
call
push
test
jo
mov
pop
andb
xchg
add
add
data16
fsubl
out
mov
pop
in
mov
xor
mov
xor
mov
stc
hlt
push
js
aaa
or
int3
outsb
nop
pop
lock
pop
into
adc
mov
into
mov
inc
fwait
nop
inc
jge
aaa
push
je
inc
pop
inc
mov
addl
mov
or
push
aas
fimull
mov
loop
mov
nop
lock
lock
sub
repz
sub
mov
push
add
test
ljmp
cld
sbb
cmp
pop
out
jno
popf
xor
and
add
in
daa
mov
mov
lret
in
in
sbb
icebp
or
mov
outsb
nop
sbb
adc
and
jb
jecxz
push
mov
pop
rcr
movsl
mov
fwait
adc
dec
jle
pmullw
push
pop
push
pop
inc
xchg
sub
jmp
cmc
icebp
lret
mov
test
jnp
pop
adc
mov
rcrb
lret
leave
out
mov
cltd
or
dec
pusha
pop
fs
cltd
push
std
dec
xor
fsubrl
push
aam
mov
fildll
call
mov
aam
dec
xor
pop
add
mov
mov
in
adc
incb
loope
stos
ficoms
xchg
push
subb
loop
rcl
inc
cmp
mov
cmpsb
dec
pop
int3
jnp
lret
inc
sar
adc
or
jne
cs
mov
shl
mov
sbb
mov
pop
lock
enter
in
add
inc
andl
addb
js
cwtl
cmp
mov
imull
and
push
aas
jp
jl
mov
nop
push
jmp
mov
xor
pop
pop
adc
and
jle
cwtl
shr
ret
or
jmp
lock
jne
push
push
incl
inc
cmp
fisttpl
jmp
add
shll
test
push
lock
jae
dec
adc
or
rcrl
fstpt
pop
jno
mov
add
sub
push
push
fcoms
dec
xchg
inc
cwtl
je
push
or
jmp
jo
add
mov
xor
lock
mov
mov
in
or
pop
loop
ljmp
sub
xchg
rcll
jbe
sub
adc
aad
and
adc
leave
push
mov
test
mov
data16
sub
ja
cld
sbb
stos
je
adc
cmp
sub
in
mov
sub
inc
xchg
fwait
cltd
add
dec
fistpl
fcmove
sub
xor
cmp
xor
mov
pop
in
adc
mov
sub
ss
or
jne
dec
fidivl
in
xchg
or
pop
fstpt
fcoms
cmp
movswl
push
dec
sub
out
sbb
ljmp
xchg
out
pop
adc
aas
dec
leave
inc
inc
daa
stos
and
pop
cmp
sbb
dec
cmovle
incl
stos
inc
fsubs
int
imul
and
les
add
sahf
jecxz
pushf
mov
daa
rorl
mov
mov
sbb
fsubrl
push
std
sti
mov
les
jae
or
pop
popf
or
xor
fwait
out
jmp
push
mov
arpl
popl
scas
iret
ret
cmp
popf
sbb
nop
rcrb
lret
jmp
cmc
std
fs
jno
mov
ds
mov
mov
pop
sbb
and
aas
push
jnp
ja
ljmp
mov
push
stos
loope
cld
ret
mov
mov
sbb
or
xor
xor
xchg
and
mov
mov
add
push
ds
or
stos
aas
out
call
xchg
adc
pusha
xchg
pop
add
cltd
pop
daa
and
and
les
sbb
mov
mov
mov
push
cmp
sbb
pop
xchg
pop
mov
xor
loop
repnz
add
sbb
pop
popa
or
fsts
aas
xchg
mov
dec
xchg
test
add
movl
pop
cmpsb
idivl
enter
jmp
sbb
add
push
idivb
cmp
sub
ret
sub
cmp
sub
les
ret
dec
lahf
cltd
popf
cmp
jns
push
sub
add
hlt
daa
movsl
pop
and
mov
dec
movsl
mov
and
lock
and
inc
ret
dec
add
rcrl
popf
cmc
xchg
cmp
sbb
jno
inc
or
ljmp
dec
sub
mov
test
add
mov
fwait
jmp
sbb
add
rcrl
mov
arpl
sti
push
ror
ljmp
xor
xor
mov
mov
adc
push
movsb
cmp
dec
fcomps
mov
push
mov
push
arpl
mov
iret
jae
sarb
mov
jmp
cmp
jge
jb
ret
imulb
xlat
lods
aad
fsub
cmc
data16
or
add
lock
in
push
std
push
mov
adc
push
gs
test
and
mov
push
cmp
pop
sbb
fcoms
or
add
into
std
sti
push
scas
xchg
mov
mov
pop
push
shlb
xor
out
mov
je
lret
pusha
rcl
clc
dec
dec
mov
mov
jae
jb
or
sbb
or
xorl
push
push
xchg
testb
inc
mov
les
sbb
adc
ds
and
xchg
leave
in
mov
ficoms
mov
push
mov
shll
movsb
cmp
decb
xchg
cmpsl
test
movsl
and
repnz
adc
push
lods
sub
push
ficompl
xchg
popf
cmp
sbb
mov
hlt
orl
inc
aas
outsl
fsubs
jle
pop
dec
mov
jmp
outsb
ds
loopne
outsb
outsb
mov
pop
mov
out
sbb
jo
jle
jo
jmp
jmp
daa
fistpl
js
pop
and
dec
inc
mov
cli
std
sbb
jo
sbb
dec
ret
add
fwait
mov
adc
cmp
or
adc
and
jne
add
arpl
xlat
out
sub
lahf
mov
sub
cli
xlat
roll
mov
xor
dec
js
mov
sti
dec
mov
add
add
repz
cmp
push
push
das
loopne
std
jg
and
repnz
insb
js
xchg
add
out
xor
repnz
in
mov
ja
jo
test
mov
add
xchg
fimull
mov
std
jae,pn
pop
rclb
shrb
jge
es
jbe
jl
add
enter
push
orl
cli
dec
lret
jo
jg
jno
daa
jnp
mov
sbbb
mov
pop
fistl
xor
test
mov
ret
fsts
push
push
sbb
pop
or
nop
xchg
aam
sub
repnz
push
mov
lods
add
pushf
adcl
mov
push
push
sub
mov
into
pop
add
cmc
xor
movsb
mov
dec
addl
ret
and
cwtl
jbe
sbb
mov
dec
push
dec
or
out
out
xchg
sbb
int3
mov
pop
jns
mov
jle
fmul
mov
mov
mov
push
jl
xchg
push
pop
rorl
outsl
mov
mov
or
daa
mov
add
mov
and
mov
std
dec
lahf
lret
jmp
stos
je
mov
in
shr
jge
xchg
enter
movsb
inc
shufps
rclb
nop
push
mov
jmp
and
in
xchg
lds
ret
mov
std
ja
sbb
ret
inc
ja
pop
addb
dec
pop
mul
inc
mov
hlt
stc
subb
ud1
mov
push
xor
mov
xchg
sarb
iret
push
add
aaa
pop
inc
loop
js
ret
cmp
inc
pop
test
sbb
cwtl
fsubrs
enter
and
rcll
xchg
scas
rcrl
or
mov
in
jae
mov
sbb
sub
out
push
dec
xchg
pushf
xorb
stos
js
js
jl
cmp
mov
lock
adc
stos
mov
dec
je
repz
xchg
push
lret
inc
in
movsb
xor
imul
push
sahf
push
or
mov
scas
roll
xchg
push
xor
mov
jmp
cmp
push
add
data16
and
pop
repz
shll
sbb
mov
inc
sar
and
jmp
sbb
dec
cmp
divl
dec
mov
dec
xchg
push
leave
cli
jo
out
jnp
mov
fstps
add
int
adc
pop
pop
adc
pop
test
xlat
xchg
aam
test
ljmp
aad
mov
outsb
rorl
cs
add
jle
cli
pop
into
daa
adc
in
push
pushf
jg
or
jecxz
sbb
aam
or
mov
mov
sbb
or
inc
imull
xchg
sub
push
sbb
pop
call
jmp
jb
pop
outsb
outsb
adc
sub
xor
sahf
push
cmc
in
aas
sbb
shrl
pushf
mov
out
mov
stos
shlb
push
mov
fnstcw
sbb
push
mov
sub
aas
in
subl
cmp
imul
and
insl
inc
out
jge
popa
shrb
mov
lods
cltd
rorb
xor
pop
enter
dec
adc
or
inc
rclb
inc
ds
mov
les
fs
dec
push
xchg
cmp
rorl
sbb
pop
pop
lcall
call
pop
sub
dec
rolb
fs
ret
aam
push
adcb
fstp
mov
push
cltd
ss
inc
sti
jo
push
cwtl
mov
mov
pop
xchg
adc
jo
mov
dec
push
dec
mov
sub
fcomps
call
ret
int3
xor
sub
adcl
pushf
call
shrb
xor
pushf
andb
cmp
ret
pop
movsb
mov
pop
iret
lret
ljmp
in
xlat
inc
das
jb
xchg
mov
test
and
and
fsincos
loopne
or
xchg
adc
das
jmp
repz
mov
mov
fwait
stos
inc
and
je
test
dec
xchg
ljmp
push
incl
jp
sbb
pusha
sub
dec
pop
fsub
dec
data16
jge
frstor
cmp
jnp
xor
add
sub
call
imul
nopl
rorl
adc
cltd
in
xor
in
testl
imul
xor
cmp
xchg
push
pop
dec
push
dec
mov
push
gs
shlb
mov
pushf
xchg
mov
sbb
dec
jmp
fsubp
stos
mov
insb
leave
pop
sub
xlat
inc
xor
es
mov
ds
inc
mov
push
push
mov
mov
mov
inc
mov
sbb
xchg
jne
xchg
push
inc
aad
pop
test
int
pop
popf
push
jo
bound
ljmp
mov
adc
jns
and
xor
mov
pop
jg
ficoms
push
adc
push
popa
dec
aad
icebp
bound
xlat
aas
sub
mov
fiaddl
int
je
inc
fcomps
add
sub
xchg
push
in
xchg
addb
loopne
mov
daa
orl
sub
pop
lods
in
inc
popa
mov
or
inc
mov
movsb
mov
das
mov
std
dec
jmp
arpl
cmc
pop
add
and
push
repnz
jl
sub
push
in
or
mov
push
scas
in
cmp
lods
fsubr
aam
mov
insb
push
and
push
pop
jnp
add
xchg
gs
mov
in
push
jb
mov
push
or
or
inc
or
and
scas
popf
cmp
pop
ror
andb
pushf
push
and
fwait
jnp
int3
cmp
cli
inc
je
xor
dec
scas
mov
add
rorb
dec
or
pop
or
mov
rcrl
and
push
jecxz
mov
mov
push
outsb
xchg
xlat
pusha
fcoms
std
fs
into
xlat
and
and
jne
stc
scas
or
xchg
mov
mov
out
addr16
ret
add
sub
enter
stos
in
lret
push
mov
outsb
mov
xchg
pop
das
mov
imul
sub
sub
push
push
dec
and
push
dec
das
sbb
inc
hlt
mov
ror
arpl
inc
sbb
or
movsl
dec
sub
pop
jo
xchg
mov
xchg
scas
jb
int
scas
imul
lea
mov
add
insb
or
pop
bound
sub
lret
pop
or
ss
sahf
ja
jecxz
fcomp
ret
add
std
adc
mov
pop
or
lret
mov
aad
hlt
mov
aas
dec
fidivl
sahf
jecxz
dec
lods
call
insb
aas
lods
stos
sbb
pop
icebp
sbb
idivb
fstps
xor
mov
dec
nop
lret
shl
add
rcl
inc
inc
imul
inc
xchg
imul
xchg
outsb
fdivrs
jecxz
jg
sub
cltd
inc
adc
sahf
cmp
mov
inc
sbb
les
pop
hlt
pop
mov
pop
jmp
cld
pop
cmpsl
addr16
gs
mov
int
mov
jle
jo
xor
fcomip
sbb
cmp
outsb
mov
add
inc
jno
out
xchg
inc
int
sub
std
cmp
adc
xor
cli
or
test
add
into
scas
and
fildl
popa
iret
jnp
ljmp
jmp
xchg
sub
aam
mov
push
adc
push
outsl
push
cmpsb
mov
push
jl
xor
ret
pop
stos
xlat
into
push
orl
add
pop
into
jno
lods
shll
pushf
push
shlb
imul
or
incl
pop
fiaddl
dec
jbe
mov
dec
cmp
adc
ss
jmp
imul
stc
lds
jge
and
lods
pop
insl
testl
jns
lods
stos
pop
mov
push
push
xchg
aad
xor
mov
dec
ret
jo
cmc
and
shlb
or
xchg
push
jge
mov
sub
xchg
fistpl
and
dec
jns
stos
sub
icebp
adc
test
xchg
xor
cmp
add
or
or
outsb
cmp
push
nop
stos
xor
push
mov
inc
push
jns
xlat
insb
clc
mov
mov
dec
adc
cmp
das
dec
lods
insb
insl
mov
xchg
out
fcoml
jle
jmp
mull
loope
sahf
shrb
gs
stos
mov
jecxz
dec
ficoms
xsha1
cmpsb
dec
outsb
sub
push
jne
xchg
rolb
and
mov
fstpl
or
jb
or
mov
mov
push
arpl
sti
insl
in
cmp
enter
pop
out
bound
sbb
mov
scas
push
arpl
icebp
xor
mov
repz
xchg
stos
enter
hlt
xchg
dec
icebp
aad
cmp
ja
fildll
shlb
gs
aam
inc
mov
xchg
pop
xlat
shl
fsubrs
xlat
fiadds
and
and
and
pop
mov
xchg
test
pop
mov
fnstcw
xor
dec
cltd
fcoms
int3
push
mov
int3
cmp
dec
mov
adc
xchg
sbb
iret
pop
stos
cmpsb
mov
mov
sbbl
jno
fcoms
addr16
sahf
aam
mov
test
stos
mov
aaa
mov
js
loopne,pn
mov
lds
add
call
stc
out
sub
xor
popa
popf
dec
jne
dec
lods
scas
pop
mov
mov
lea
cli
add
out
fiaddl
call
pop
mov
jle
add
add
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
jmp
fisttps
jecxz
out
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
in
in
cld
jge
mov
fsub
add
mov
add
add
mov
inc
push
fisttps
test
fadds
jmp
fildl
inc
jo
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
ret
cld
incl
out
xor
mov
cld
jo
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
pushf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
cmp
pushf
or
enter
xor
pushf
inc
ds
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
pushf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
pushf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
bswap
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
les
mov
mov
cmp
mov
add
xor
pushf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
fs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
xor
pop
lods
incl
mov
pushf
jo
cmpl
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
pushf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
pushf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
fdivr
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
faddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jo
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
int3
jne
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
and
jo
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
pushf
inc
xor
pop
inc
shl
inc
sub
inc
add
add
loopne
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
leave
inc
add
rdpmc
sbb
mov
cmovne
jmp
inc
mov
sbb
mov
add
out
add
sub
add
jo
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
into
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
ljmp
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
pushl
lcall
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
wrmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
pushf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
or
inc
xor
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
call
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
pushf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pop
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
pop
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setl
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
add
add
enter
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
add
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
incl
jo
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
jno
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ds
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
pushf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
icebp
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
add
into
fs
mov
ret
add
add
add
ds
add
into
ret
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
cmp
fs
or
add
add
push
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
xor
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
add
add
lret
lock
clc
inc
lret
cmp
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
pushf
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
pushf
pushf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
pushf
add
clc
cmp
or
add
xor
or
lea
or
enter
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
mov
adc
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
add
pushfw
add
add
mov
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
aaa
inc
pop
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
pushf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
mov
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
in
into
inc
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
xor
fmuls
test
cld
or
dec
ret
push
inc
dec
mov
mov
push
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
pushl
in
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
push
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
cld
mov
xor
add
dec
jnp
mov
xor
add
mov
mov
xor
rorl
jb
add
ja
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
pushf
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
mov
mov
cmpb
add
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
xor
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
pushf
mov
jge
decl
