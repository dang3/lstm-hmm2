push
mov
sub
xor
mov
mov
cmpl
movl
mov
mov
mov
jmp
movl
jne
push
push
push
push
push
push
pushl
push
call
xor
subl
sub
neg
movzwl
sub
mov
mov
sub
inc
push
mov
mov
sbb
addl
mov
orl
movzwl
adc
mov
orl
and
mov
cmpl
mov
mov
not
jmp
movl
mov
jl
push
push
pushl
pushl
push
push
call
xor
dec
add
sbb
mov
add
add
mov
sub
mov
cmpl
mov
mov
jmp
movl
mov
jb
pushl
push
call
andl
mov
mov
or
sbb
orl
mov
sub
mov
sbb
add
mov
orl
orl
dec
lea
mov
mov
xor
mov
mov
add
mov
sbb
mov
and
mov
and
mov
and
shrd
shr
mov
xor
mov
adc
mov
jmp
stos
xchg
sarl
cmp
and
int3
xchg
movsb
js
adc
adc
movlps
stc
dec
jmp
fisttpl
lds
lods
add
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
mov
push
mul
je
enter
aam
imul
out
fs
push
cltd
mov
inc
subb
mov
sti
jp
cmp
mov
xor
mov
adc
insl
xlat
lods
hlt
loop
cmpsl
iret
rcl
jmp
outsb
mov
test
bsf
ret
mov
bound
sbb
pop
fwait
inc
in
aam
sbb
jl
cld
adc
std
imul
mov
adc
cmc
xor
lret
out
dec
test
test
sbb
xchg
shrl
cmpsb
or
jp
lea
fsts
cwtl
addr16
pop
xchg
pop
lcall
shll
loope
sbb
sar
arpl
lds
sub
xchg
pop
addr16
shll
push
in
fwait
pop
cmp
lds
scas
mov
mov
cli
push
adcl
xor
addr16
das
out
sub
cmc
mov
mov
outsb
and
mov
dec
xchg
add
jo
xchg
pop
cwtl
push
dec
mov
lahf
xchg
xlat
sarl
mov
inc
adc
cmp
cmpsl
enter
dec
xchg
aam
test
out
mov
incl
mov
vsubpd
stc
and
into
loope
cli
mov
jp
push
xor
subl
xor
jmp
mov
push
xchg
mov
movlps
movlps
stc
int
loope
and
das
shll
jmp
pop
push
stc
and
pusha
dec
sar
imul
and
inc
adc
std
movsl
mov
lahf
and
push
stos
jl
movsb
and
dec
mov
sbb
shl
in
cmp
loope
sub
mov
leave
mov
ret
adc
pop
aas
pop
dec
mov
pop
jecxz
into
push
ret
mov
xchg
std
shll
adc
daa
scas
imul
orb
cmp
loop
fidivs
mov
lret
lods
xchg
add
adc
add
pop
mov
and
mov
or
lds
bound
lds
in
in
or
cmp
mov
xor
pusha
mov
add
mov
inc
iret
cmc
in
jno
and
mov
outsb
outsl
gs
xchg
int
xchg
je
mov
jg
out
xchg
pusha
push
neg
and
lods
fs
lcall
out
fbstp
add
pop
ljmp
loop
add
into
mov
xchg
gs
inc
mov
push
cs
lret
repz
popl
out
fdivp
mov
movsl
clc
outsb
fisttpll
out
xchg
and
in
dec
pop
mov
out
ret
sti
faddl
inc
mov
outsb
mov
xchg
inc
mov
xchg
push
jp
mov
inc
gs
sub
sub
ds
shlb
inc
xlat
nop
mov
jmp
aaa
add
pop
mov
mov
out
or
mov
pop
lret
in
and
fiaddl
mov
andb
dec
cmp
lahf
in
mov
sub
cmpsb
loop
add
sub
add
and
filds
push
movl
movl
adcl
movl
movl
and
movl
movzbl
xor
movl
subl
movl
cmpl
mov
movl
mov
movl
jmp
mov
je
push
push
push
call
andl
andl
orl
andl
sub
adcl
cmpl
movl
movl
movl
jmp
mov
jne
pushl
pushl
call
subl
orl
or
xorl
andl
sub
adcl
xor
dec
movl
and
movl
movl
mov
add
movl
movl
movl
movl
and
movl
cmpl
movl
movl
movl
movl
jmp
mov
mov
jb
pushl
push
call
addl
adcl
addl
andl
orl
neg
movl
xor
movl
adcl
movl
sbb
movl
movl
movl
sbbl
movl
adc
mov
orl
shl
mov
adcl
push
push
push
push
subl
call
mov
xor
mov
negl
xor
cmpl
mov
mov
jmp
movl
mov
ja
push
push
pushl
pushl
call
adc
adcl
adc
or
mov
subl
jmp
jno
sub
cmp
push
pop
js
aam
push
or
adc
movlps
ret
sbb
clc
in
icebp
pop
mov
adc
push
mov
dec
and
les
les
sbbb
pop
test
inc
rcll
add
add
into
push
pop
insb
cmp
add
fisttpl
shrl
out
xor
mov
es
dec
lods
adc
push
scas
ja
ds
call
bound
decl
das
iret
in
jge
cld
in
mov
fiaddl
stos
inc
jb
loop
cli
daa
adc
out
adc
mov
in
fsubrp
sbb
test
pop
inc
and
and
out
mov
sbb
shl
in
lock
inc
xorb
sbb
xorb
mov
insl
mov
std
xor
ljmp
imul
sbb
je
mov
push
jae
out
adcl
mov
inc
js
dec
add
sbb
fidivs
push
pushf
movsl
xchg
pusha
push
sbb
cmp
movsl
xor
inc
clc
xor
mov
sbbb
jp
out
ret
xor
pop
add
pop
sub
push
es
sub
insb
lcall
mov
arpl
add
pop
iret
xor
sub
add
je
push
subb
mov
and
xor
pop
sti
or
in
xchg
into
shll
inc
cmp
shll
aam
jle
into
lock
pop
xchg
adc
mov
ret
sub
inc
adc
xchg
sti
mov
subl
cmpsb
and
fistpll
iret
push
dec
sarb
ja
add
sahf
aaa
xchg
sub
or
push
pushf
push
mov
sub
cmpl
notl
mov
jmp
movl
movl
jbe
push
pushl
pushl
push
pushl
call
adc
add
movzbl
xor
mov
sbb
adc
sbb
xorl
mov
lea
sbb
mov
mov
adcl
or
andl
and
cmpl
movl
mov
mov
jmp
movl
jg
push
push
call
adc
xor
xorl
and
orl
cmpl
movl
mov
movl
jmp
movl
jb
pushl
push
pushl
push
pushl
pushl
call
dec
movzwl
adc
addl
add
and
movzwl
or
mov
inc
not
mov
xorl
or
notl
xor
movl
cmp
jne
mov
adc
mov
jmp
push
sbb
xor
and
adc
movlps
sbb
aaa
xor
add
xchg
adcl
pop
mov
call
xchg
cmpsl
lret
sbb
lds
xchg
movsb
push
inc
cmp
into
push
jne
xchg
iret
in
aam
push
xchg
nop
movsb
or
jecxz
sub
lock
and
push
mov
cwtl
je
dec
call
push
sub
mov
pop
mov
in
jle
adc
pop
xlat
mov
add
add
add
push
scas
mov
and
inc
mov
fnstenv
adc
ss
mov
xor
push
sbb
sub
fsubs
or
jo
test
pop
pop
jp
pop
dec
loopne
fcompl
je
inc
pop
or
loopne
sub
sti
pop
pop
fistps
movl
push
sub
sbb
orb
fs
and
inc
dec
mov
mov
mov
push
adc
cltd
outsb
insb
jae
popf
addr16
xchg
aam
icebp
sbb
mov
mov
js
jp
idivl
mov
sbb
iret
out
les
cwtl
stos
rcrb
push
or
pop
jns
insl
stos
sub
jnp
in
fiaddl
jns
xor
pop
mov
lock
arpl
imul
or
add
cltd
daa
xchg
push
pushf
insl
adc
pop
cmp
mov
out
aaa
insl
jmp
mov
hlt
push
add
ss
lea
inc
pop
xor
pop
jge
mov
mov
mov
shrl
insl
jnp
cmp
cwtl
mov
in
inc
lods
add
mov
fnstsw
test
fcoms
aad
add
push
sbb
ss
xchg
repnz
fstpt
sarb
inc
rcrl
mov
movl
shrd
cmpl
mov
movl
movl
movzbl
jmp
movl
mov
jl
push
push
push
push
push
call
dec
xor
add
xor
xor
adc
and
orl
movl
shr
sub
mov
mov
shl
addl
xor
andl
xor
subl
or
mov
mov
cmp
jne
mov
adc
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jle
pushl
pushl
pushl
push
call
add
xor
add
or
xor
adcl
neg
movzbl
add
mov
sbbl
xor
mov
cmpl
mov
mov
mov
jmp
mov
movl
ja
push
push
pushl
call
xor
sbbl
and
movzwl
xor
mov
adcl
sbb
mov
mov
shrd
subl
mov
cmpl
mov
mov
mov
mov
jmp
mov
mov
jge
push
push
push
push
push
push
push
call
adc
notl
sbbl
mov
or
decl
mov
xor
shr
xorl
jmp
and
aaa
and
ljmp
stos
add
adc
movlps
cwtl
xchg
pusha
sbb
mov
inc
mov
sbb
add
repz
leave
or
and
insl
lcall
loopne
jg
and
iret
pop
adc
xor
add
adc
and
imul
mov
shrb
shll
std
dec
insb
pop
xchg
repnz
pop
out
call
inc
in
addb
adcl
fisttpl
push
xchg
iret
repnz
enter
movsb
add
int3
jno
leave
sub
fistps
push
out
xor
mov
sahf
cmp
inc
xchg
inc
setne
xor
mov
call
movsb
lock
in
push
adc
sbb
push
enter
fists
loop
loopne
and
fwait
lea
ret
mov
jmp
pop
or
je
inc
dec
lock
scas
mov
fbld
sbb
push
add
dec
lcall
mov
sub
pop
and
pop
mov
scas
cs
xchg
xchg
jae
mov
jge
rol
jl
inc
mov
sub
jae
outsl
xor
xchg
jl
stc
out
in
pop
cmp
pop
mov
sub
jp
je
adc
divb
inc
clc
jp
test
shl
dec
fsubl
xor
push
push
mov
lea
adc
sbb
lret
xchg
dec
int
mov
ret
aam
pop
jbe
xor
adc
or
sub
xor
in
mov
out
daa
out
fnstsw
mov
movsb
adc
sbb
pop
sbb
into
xor
and
xor
aaa
xchg
mov
adc
aaa
add
jae
addr16
or
adc
enter
ss
clc
mov
nop
cs
sti
fiaddl
xchg
mov
push
sbb
adc
xor
orl
or
adcl
shl
sub
mov
mov
sbbl
mov
xor
add
mov
mov
cmpl
notl
movl
jmp
mov
jg
push
call
negl
xorl
sbb
sbb
add
mov
or
mov
jmp
test
and
and
test
ljmp
mov
movlps
pop
inc
pop
loopne
dec
ljmp
movsl
jmp
mov
jbe
xchg
sbb
insl
and
mov
js
xchg
dec
jo
and
cmp
dec
mov
outsb
aas
sahf
mov
and
jecxz
mov
pop
xchg
mov
or
sub
xor
fwait
inc
sbb
push
sub
fidivs
imul
lcall
cs
fiadds
mov
jge
xchg
jne
mov
lods
xlat
or
and
push
int
mov
test
sub
dec
dec
ss
inc
pop
ja
push
fsubs
dec
loop
add
lcall
mov
cmpsb
hlt
shll
inc
scas
cs
outsl
mov
pop
add
push
xor
scas
cltd
and
test
inc
hlt
fs
mov
cmp
push
pop
dec
add
mov
or
clc
jb
push
xor
sar
out
dec
pop
mov
push
int3
xor
xchg
xchg
mov
sbb
rorb
data16
jecxz
xchg
aad
fldcw
pop
mov
lods
xchg
push
xchg
sub
push
cmp
inc
push
lods
rcr
xchg
pop
popf
out
cwtl
pop
cmc
and
ds
push
orl
xchg
ja
mov
ljmp
add
pushf
movsl
sub
into
fistpl
hlt
daa
in
pop
testb
mov
imul
leave
dec
mov
jl
in
hlt
push
cwtl
pop
jnp
fmull
sbb
xchg
fisttps
fdiv
push
mov
sub
fiadds
fnstsw
mov
je
test
fxch
push
inc
xor
xchg
test
ficomps
in
aad
dec
mov
inc
jmp
inc
gs
cmp
aaa
enter
lea
mov
adc
popa
jecxz
inc
add
adc
sbb
mov
shrd
shr
adc
mov
xorl
mov
dec
xor
shl
mov
adc
mov
xor
cmpl
movl
mov
mov
jmp
movl
movl
jbe
push
pushl
call
add
xorl
or
movzbl
or
mov
mov
or
mov
addl
or
movzbl
and
mov
mov
xor
or
add
mov
shrd
orl
shr
adc
mov
mov
cmpl
movl
mov
jmp
movl
jg
push
pushl
push
push
call
dec
sub
sbb
decl
sbb
cmpl
mov
movl
jmp
movl
jae
push
call
sbbl
and
adc
mov
add
add
or
sbbl
adcl
mov
movl
xor
xor
or
shl
lea
mov
mov
adcl
shrd
shr
cmpl
movl
mov
jmp
mov
movl
ja
push
call
sbb
mov
sbb
inc
inc
sub
subl
cmpl
mov
mov
jmp
mov
jl
pushl
call
xorl
add
xor
xor
xor
sub
or
mov
mov
mov
or
xor
mov
or
mov
xor
or
addl
shl
imul
cmpl
movzbl
mov
mov
movl
jmp
mov
ja
pushl
push
pushl
push
pushl
pushl
push
call
movzwl
sbb
addl
or
sbb
and
mov
cmpl
mov
mov
mov
jmp
movl
je
call
sub
orl
and
sbb
sbbl
decl
subl
xor
mov
shrd
orl
mov
jmp
xchg
arpl
pop
inc
push
pop
pop
adc
in
jle
ds
lods
sti
sti
adc
movlps
ffreep
adc
and
sbb
sahf
loop
mov
in
push
out
repz
call
xor
xchg
mov
jge
cs
fmuls
mov
mov
mov
cs
xor
movsb
dec
pop
or
and
nop
inc
jnp
jb
xlat
and
cltd
mov
cwtl
pop
jbe
inc
add
xorl
stos
and
popa
xchg
pop
mov
test
mov
jecxz
xor
dec
cli
or
aam
dec
out
or
bound
jge
xchg
out
cmp
mull
pushf
jecxz
sbb
adc
scas
lret
lret
imul
cmp
and
or
lahf
cmp
mov
fildll
mov
add
jecxz
push
test
pop
push
ja
jb
idiv
cmc
aas
movb
loope
inc
shrl
insb
dec
cmp
jmp
lcall
and
int3
out
dec
jb
repz
xchg
lock
out
xchg
clc
jb
mov
dec
jg
jae
pusha
rolb
pop
sub
pop
daa
dec
cmpsl
push
jge
fcmovnb
fwait
out
mov
test
das
dec
mov
add
or
pushf
mov
ficomps
pop
sbb
jb
nop
sbb
sub
mov
es
adc
xor
jae
dec
push
sbb
test
pop
pushl
lock
adcl
pop
xor
sub
aad
daa
mov
das
xor
sahf
jecxz
xchg
pop
not
mov
mov
shlb
push
adc
dec
movb
dec
xchg
push
mov
lock
pop
aaa
and
push
or
cmpsl
test
lret
ss
cmp
subl
xor
insb
mov
xchg
dec
mov
addl
xor
sbbl
shr
mov
mov
orl
xor
subl
or
addl
shl
negl
sub
movl
mov
jmp
add
add
and
inc
stos
div
adc
movlps
popl
sbb
mov
sti
rcll
icebp
add
dec
out
sub
xchg
rol
hlt
mov
loop
pop
stos
add
sub
and
icebp
popf
aaa
push
pop
mov
cli
rorl
pop
pop
js
add
lock
fdivs
pop
add
subb
sarb
mov
in
leave
sarb
es
push
dec
xchg
jmp
and
andl
pop
scas
cmpl
leave
sub
int3
sti
cmp
repnz
and
es
mov
in
flds
test
shl
xchg
push
hlt
xchg
or
fmul
push
aam
cmpb
pushf
popa
test
enter
std
ss
mov
std
xor
lods
ret
sbb
ja
divb
jle
xchg
rcrb
sbb
lret
and
js
xchg
jecxz
andl
mov
cld
xor
out
inc
cmpsb
push
lods
jns
pop
and
cmpsb
rorl
adc
aad
decb
movsl
push
jg
hlt
sbb
dec
repnz
mov
lods
pop
aas
xor
cmp
lods
inc
jge
ret
and
dec
mov
push
or
daa
jge
in
sub
pop
mov
push
xor
mov
xchg
inc
fcoml
iret
test
mov
mov
push
push
and
jmp
cmpsl
imul
adc
inc
cmc
lods
ja
sub
outsl
in
sti
sti
clc
inc
mov
aad
sbb
inc
xor
frndint
and
sti
inc
cmp
mov
jle
xchg
mov
and
imul
inc
testl
mov
jecxz
jnp
xchg
repnz
sahf
jno
call
and
idivb
in
test
xchg
jmp
pop
pop
fcompl
aas
xor
fisubl
dec
or
pop
dec
cmp
mov
mov
jg
mov
orl
mov
adcl
shrd
mov
or
mov
sbbl
xor
orl
shl
xor
or
shr
mov
cmpl
not
not
mov
jmp
movl
jb
push
pushl
call
not
inc
sub
mov
and
mov
mov
sub
sub
addl
and
movl
mov
sub
mov
xor
mov
shrd
shr
mov
mov
adc
mov
mov
mov
movl
xor
xor
andl
or
shl
imul
sub
jmp
or
mov
mov
xor
mov
addl
shrd
mov
mov
sbbl
xor
sbbl
shl
xor
or
sbbl
shr
mov
adcl
mov
mov
movzbl
sbb
mov
addl
shrd
shr
mov
jmp
cwtl
mov
lcall
xchg
js
repz
movlps
adc
jge
rorl
mov
mov
push
xchg
bound
ret
movsb
mov
cmp
mov
imul
add
inc
xor
dec
add
mov
sbb
mov
into
mov
inc
lahf
cmp
add
jo
aaa
repnz
aaa
jecxz
sbb
push
mov
orl
cld
mov
mov
add
xchg
xchg
cmpsl
lcall
shlb
shll
xor
popf
lret
push
shrl
pop
stos
icebp
mov
pop
ljmp
sbb
cmp
inc
lret
mov
dec
movsb
out
pop
out
aaa
sarl
js
sahf
mov
push
aaa
cmp
mov
mov
ret
push
in
fnstcw
cmp
fnstcw
lea
subb
sti
sub
aas
mov
lahf
mov
cmp
mov
sub
fstpl
push
mov
sti
mull
sub
mov
xchg
mov
jle
lds
out
or
dec
incl
cs
push
pusha
or
jo
mov
jp
test
fdivr
and
nop
lahf
dec
les
fiadds
inc
fisubrs
movsb
das
imul
push
push
push
pusha
fwait
sbb
das
and
xchg
inc
mov
and
leave
adc
add
cli
ljmp
or
and
mov
jns
roll
cmp
lods
ret
xchg
push
jae
mov
dec
xchg
dec
cmpsl
enter
add
add
push
mov
mov
lea
imul
ljmp
push
out
comiss
push
mov
jge
ja
lods
insl
xchg
stc
in
cmp
fistl
stos
sbbb
cmp
add
push
pop
loop
cmp
lds
shl
loope
xchg
adc
dec
sbb
add
inc
add
mov
andl
xor
andl
xor
adcl
or
shl
andl
add
cmpl
mov
mov
not
jmp
not
jbe
push
push
call
adc
mov
xor
mov
sbb
sub
xor
add
mov
sub
mov
cmpl
movl
mov
movl
jmp
movl
mov
jge
call
movzbl
sub
mov
mov
add
and
sbb
sbb
dec
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
sbb
sbb
jmp
jb
and
out
out
adc
movlps
jno
jmp
in
imul
js
mov
adc
out
xor
inc
mov
cmp
pop
jno
sbb
and
fildl
rcrl
sti
jg
mov
sbb
push
cwtl
scas
aas
js
enter
xor
js
add
lods
inc
sti
outsl
rcrl
xlat
icebp
in
sub
notl
pop
push
test
insb
cmc
and
mov
sub
mov
je
out
fsubrl
cwtl
jns
jl
jge
cmpsb
inc
sbb
mov
pop
inc
jp
jg
out
mov
pop
mov
inc
dec
int3
adc
pop
jne
push
and
aam
ljmp
pop
sbb
push
cmp
ret
addl
inc
orb
dec
into
jo
lret
xchg
nop
popf
mov
repnz
ss
flds
pop
mov
in
ret
pop
movsb
mov
cmpsl
mov
movsl
mov
jmp
icebp
dec
aaa
clc
mov
jae
addr16
cltd
pop
sti
and
ja
xor
push
jo
fsubs
mov
icebp
lcall
sbb
push
jbe
shrb
xor
jge
cmp
dec
xchg
fimuls
mov
ret
popa
xlat
mov
dec
inc
lea
shlb
mov
add
sbb
dec
sub
and
dec
roll
mov
mov
pop
mov
testb
sbb
sub
popa
cmpsb
dec
loope
notl
int
cmc
jne
push
inc
jns
inc
std
not
mov
mov
cwtl
enter
sub
lock
jl
ficoms
or
push
fwait
scas
fwait
rcr
repz
mov
or
lods
adc
adc
fcompl
pusha
mov
and
dec
sub
rolb
loop
loopne
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
jmp
mov
imul
stos
mov
jmp
adc
movlps
pop
js
loop
ret
xor
jns
xor
jecxz
mov
lds
or
stos
in
mov
cltd
iret
leave
movlps
cmpb
fcmovb
dec
cmpsl
ja
mov
out
xchg
cmp
xchg
sahf
mov
test
repnz
and
sbb
mov
repnz
inc
dec
inc
inc
in
rorb
loope
jbe
mov
lds
xchg
inc
or
push
mov
push
insl
jno
cltd
sahf
out
repz
leave
jmp
xor
gs
cmp
es
es
cmpsb
rcrb
fimull
mov
aas
cmp
xchg
in
sbb
xchg
fistpl
ret
push
lods
jecxz
iret
cwtl
test
and
out
bound
aad
and
dec
pop
pop
pop
addr16
fstps
in
mov
mov
xor
inc
mov
mov
xor
mov
push
loop
fmuls
lahf
or
sbb
inc
out
ljmp
jle
ficoms
scas
int
add
push
lret
push
jmp
adc
fnstsw
cmp
xor
das
les
out
out
arpl
into
js
orb
in
dec
dec
pushl
sbb
mov
cmpsl
push
in
cmc
cmc
inc
cmc
add
cmp
mov
mov
cmp
iret
popa
andnps
insb
adc
iret
ljmp
sbb
or
pop
mov
enter
push
xchg
xlat
jno
cmp
pop
push
je
sub
mov
pop
mov
arpl
stos
pushl
or
add
cmp
inc
dec
xor
aas
cs
out
adc
xor
push
and
jle
fildll
shrb
cmp
stc
inc
or
push
imul
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
jmp
mov
outsb
mov
fidivrl
mov
movlps
shl
adc
jo
gs
xchg
leave
jg
jmp
sarb
sub
pop
lcall
mov
popf
arpl
mov
mov
dec
pop
mov
imul
jb
pop
daa
ret
adc
fldenv
dec
cmpl
jno
cmp
add
lret
cmpsb
and
push
push
pop
ja
mov
jle
sub
icebp
ss
push
add
mov
es
cmp
stc
stos
jge
bound
xchg
mov
jge
mov
scas
jns
sbb
xlat
ss
aas
push
fcmovnbe
jbe
jg
dec
cmp
xor
call
sahf
call
cmp
pop
data16
int
inc
mov
or
jge
push
mov
lods
cmp
mov
xorb
cmp
or
dec
loope
pop
pusha
hlt
stos
mov
mov
dec
sub
pop
mov
repz
mov
out
shlb
mov
into
jmp
lds
xchg
sbb
cmc
rcrl
das
dec
add
xchg
jp
nop
push
les
addb
dec
call
push
ja
pop
iret
pop
jns
repz
jmp
sub
mov
sub
push
in
fnclex
jns
xchg
popf
dec
lret
ret
mov
adc
lcall
mov
test
rcrl
movsl
jmp
cwtl
sub
mov
daa
mov
imul
repnz
fnstcw
lahf
lcall
or
mov
sub
fimuls
mov
arpl
sti
mov
mov
out
push
sub
outsb
shlb
in
mov
pushf
dec
xor
mov
mov
xlat
lods
xor
sbb
dec
mov
cli
add
ss
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
jmp
adcl
stos
mov
insb
in
adc
movlps
cli
xorb
cmc
jns
cmpsb
push
add
inc
es
dec
dec
sbb
ljmp
adc
or
xchg
mov
adc
inc
es
pop
fs
cmp
mov
jecxz
push
notb
jns
and
pushf
loopne
rolb
xchg
cltd
orb
add
aam
scas
mulb
repz
rolb
outsb
sbb
sub
outsb
inc
lahf
push
in
inc
mov
jp
xor
cmp
cmpsl
lea
pop
mov
inc
fldcw
sub
rcrb
fnstcw
push
adc
cli
out
adc
xor
mov
xor
imul
sub
mov
push
mov
std
rorb
xchg
lea
cld
dec
adc
cli
push
arpl
mov
ds
xchg
mov
inc
inc
out
out
fsubs
pop
cmp
or
insb
xor
push
fdivl
enter
xor
movb
jmp
decl
pop
inc
je
jae
inc
add
adc
and
and
rorl
into
cmp
imul
and
dec
test
mov
or
insb
xchg
imul
pop
mov
jnp
mov
and
movsb
lock
push
in
pop
sub
or
pop
mov
mov
mov
fistl
movsb
packssdw
dec
jo
movsl
popf
aam
roll
jmp
jne
in
mov
popf
hlt
stc
sub
es
call
fsubrl
sti
repnz
cmc
mov
xchg
mov
rolb
add
xor
jno
outsb
xor
push
and
mov
mov
mov
mov
lret
sub
imul
je
jbe
sbb
and
arpl
jb
mov
add
jo
ret
cmp
pushf
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
jmp
stc
popa
mov
inc
xor
jle
hlt
inc
stos
loopne
adc
movlps
inc
pop
pop
sbb
xor
out
mov
test
insl
lods
xor
out
push
mov
jnp
jmp
xchg
add
push
pop
cltd
xchg
mov
test
jae
int3
push
int3
lret
ja
jle
mov
shll
push
jo
push
insb
mov
pop
cmc
add
dec
inc
jmp
push
lods
sti
scas
xchg
jl
sbb
pop
sahf
xor
jmp
or
in
dec
cs
adcl
mov
outsl
jo
pop
scas
mov
add
mov
jp
fwait
inc
mov
in
fdiv
and
adc
jo
xchg
cs
aaa
adc
cmp
cwtl
and
int3
lahf
mov
add
js
pop
dec
pop
or
sub
lcall
pusha
mulb
inc
or
repnz
xor
daa
or
addb
xor
rcrl
mov
jmp
dec
clc
push
mov
xchg
out
cwtl
rcll
xchg
leave
jne
data16
cld
jne
clc
fldt
ret
inc
ret
mov
push
lods
mov
pop
sub
jmp
jmp
adc
add
pop
aas
cmp
aaa
cmpsl
xchg
movsl
xor
xor
daa
lcall
call
mov
shl
ljmp
mov
addl
jno
cmpsb
les
jp
jnp
scas
xchg
fwait
cmovb
sbb
mov
and
jo
xchg
or
inc
bnd
push
cmp
xor
ja
in
add
cmp
clc
ds
xchg
fldenv
scas
mov
sub
cltd
cltd
in
sub
dec
rolb
dec
sbb
icebp
sbb
lcall
xchg
ds
pop
fisubs
mov
mov
hlt
add
jg
in
push
push
xchg
mov
pop
xlat
jp
xchg
sahf
cmp
or
and
in
jp
or
add
fs
loope
xchg
aam
jns
mov
inc
nop
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
jmp
mov
pop
lahf
push
or
lods
inc
pop
fdivrs
movlps
pop
inc
ljmp
push
and
rcr
jmp
or
add
push
insl
cwtl
out
testb
in
cmp
jb
xor
jno
mov
data16
fldcw
ret
push
arpl
and
mov
shll
faddl
inc
popf
stc
movsl
fidivrl
cs
jne
insl
push
sub
push
push
adc
fucomp
js
das
xor
dec
das
mov
push
and
pop
pop
push
add
insl
mov
xor
mov
cmpsb
xchg
shll
scas
gs
adc
loope
add
inc
cmp
test
push
pop
pop
mov
xor
push
shlb
add
cmp
sti
daa
and
xlat
jmp
cmc
jmp
in
jbe
mov
sbb
movsl
ja
or
int3
es
push
add
stos
or
fdivrp
adc
addr16
fsubrl
cltd
xor
xchg
outsl
and
sbb
push
cmp
adc
stos
out
cli
imul
stos
xchg
stos
ljmp
sub
dec
ds
or
pop
dec
insl
adcl
push
inc
enter
push
add
int
sub
repnz
inc
adc
dec
inc
ljmp
xlat
lds
les
cmp
push
ljmp
movsl
lret
xchg
clc
and
outsl
dec
lock
xchg
sub
push
arpl
out
push
sub
mov
mov
dec
gs
sti
scas
jo
mov
push
mov
sub
outsb
rorb
xor
ja
ljmp
inc
push
push
mov
jbe
imul
imull
dec
fs
stos
jl
xor
xorb
insb
push
mov
jle
inc
fdivl
filds
jno
imul
jecxz
addr16
and
or
rdtsc
mov
iret
lods
je
dec
inc
xchg
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
jmp
push
shl
dec
jne
sub
lods
and
adc
movlps
sub
mov
rol
in
cmpsb
adc
jle
out
fisubs
and
movsl
jge
dec
push
and
vmwrite
inc
sbb
icebp
xlat
xor
out
push
and
out
mov
les
aaa
xor
sarl
movl
ficomps
pop
push
add
mov
push
sbb
je
push
and
mov
fwait
mov
fldcw
and
xor
xor
fcmovb
mov
cs
or
mov
mov
sub
dec
clc
and
movsl
cmpsb
hlt
cmpsb
daa
pop
shl
loop
xor
or
imul
jmp
mov
adc
sbb
xchg
in
mov
imul
daa
insl
dec
push
push
xchg
iret
push
movb
pop
xor
ljmp
mov
mov
jns
or
push
jge
popf
fwait
adc
pop
dec
push
mov
in
xchg
int3
cmp
xor
icebp
mov
mov
test
cmovs
cli
lahf
pop
lcall
int3
outsb
mov
aaa
xchg
fsub
mov
jge
adc
sub
inc
add
repnz
int3
jbe
inc
pop
out
sub
dec
jo
mov
loopne
mov
mov
push
out
arpl
add
and
ds
popa
es
jo
add
pushf
add
and
pusha
fistl
data16
gs
loope
adc
sbb
jbe
shlb
jno
ret
mov
aas
inc
enter
stc
sbb
add
or
test
jmp
enter
cli
mov
push
jo
add
inc
pop
fcmovb
or
into
and
shll
into
and
mov
sub
insl
in
mov
push
adc
push
add
add
fstpt
ja
js
aam
adc
movlps
cli
lret
xor
jb
stos
push
jg
icebp
divl
xlat
imul
incb
aad
sub
sbb
dec
mov
fildl
cs
sbb
loope
out
push
pop
ljmp
cmpsl
fwait
pop
fisubrl
sbb
out
push
test
cmp
pop
popf
lods
and
dec
sub
mov
outsl
out
xchg
les
aad
dec
iret
cmp
sarb
xchg
jecxz
mov
aad
push
sbb
insb
pop
inc
js
mov
test
or
clc
mov
xchg
xor
out
in
jns
cmp
or
sbb
mov
lock
cwtl
or
pop
mov
cmp
jg
xor
add
mov
mov
sbb
pop
inc
js
frstor
roll
jno
idivl
inc
lahf
cld
icebp
xchg
mov
repnz
addr16
cmp
sti
fadds
xor
adc
inc
fisubs
loopne
pushf
into
mov
jl
jmp
push
xchg
in
mov
mov
pushl
push
xchg
je
pop
fwait
cmc
or
call
or
fs
iret
jl
lds
ret
pusha
mov
and
icebp
mov
std
loopne
inc
jl
test
shll
leave
or
add
mov
popf
lds
sub
scas
mov
pusha
mov
sub
sbb
test
mov
outsb
adc
jl
pop
mov
xor
sbb
hlt
mov
xchg
sbbl
icebp
hlt
xor
orb
add
pop
push
and
jecxz
cmc
lahf
jmp
bnd
cmpsl
aam
out
fisubrs
ret
mov
clc
fs
jmp
inc
insl
and
rclb
add
shll
lods
sub
dec
dec
push
mov
cmp
sbb
mov
adc
push
call
shld
mov
mov
or
mov
shl
or
xor
xor
xor
xor
jmp
lods
mov
xor
pop
sbb
js
push
push
rclb
adc
movlps
rorb
les
mov
push
inc
addr16
push
cmp
popa
dec
insb
or
mov
mov
mov
fwait
push
xor
outsb
mov
mov
push
divb
mov
and
jbe
shll
pusha
adc
sbb
push
push
push
imul
test
add
icebp
mov
dec
add
xchg
movsb
sub
andl
xchg
pop
push
and
and
sbb
add
sbb
adc
inc
pop
push
sbb
adc
or
cwtl
loop
mov
movb
sub
dec
fst
cli
add
testl
into
or
pop
or
shll
shlb
int3
and
lret
pushf
dec
sbb
adc
inc
push
push
cmp
push
or
inc
jns
fsubp
add
add
adcl
or
aaa
jl
adc
out
jno
mov
push
dec
mov
xor
scas
dec
add
stos
jae
test
mov
ret
mov
add
pop
xor
int3
adc
jns
push
mov
ret
adc
sbb
or
dec
sub
clc
mov
daa
xor
int3
iret
and
push
and
imul
fsubrs
test
pop
cmp
pop
in
lods
jmp
in
mov
out
inc
mov
loope
cmp
sub
add
fwait
mov
outsb
xor
es
dec
dec
xor
jge
jg
xchg
mov
pop
mov
push
xor
pop
or
stos
ds
add
pop
pushf
test
cmp
daa
movsl
xlat
pop
dec
inc
or
mov
lcall
mov
push
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
jmp
inc
mov
aaa
cwtl
arpl
push
or
push
int3
adc
movlps
lret
sbb
cmp
and
repnz
in
out
push
cmc
aam
mov
pop
xor
mov
pop
sti
cld
es
ret
mov
inc
cmp
cmp
and
jnp
clc
loop
pop
repz
adc
stos
xchg
cmp
ja
and
js
push
dec
mov
stc
push
subl
push
lock
fnstsw
push
ds
fimuls
pop
loopne
push
xchg
mov
adc
adc
rorb
jns
iret
xchg
lea
loopne
pop
mov
js
lahf
xor
in
lahf
mov
pushf
mov
mov
scas
sbb
xchg
mov
hlt
sti
loope
and
das
stos
cli
cmp
lret
aam
mov
cmp
dec
repz
pop
cltd
jp
xchg
dec
ficoml
and
mov
loop
lret
cmp
mov
testb
sbb
gs
push
mov
mov
push
jle
push
adc
dec
rorl
push
mov
dec
insb
xor
bswap
jl
stos
sbb
cmpsl
xchg
or
popf
xchg
sbb
nop
sbb
aad
jle
push
pop
cmpl
mov
fwait
sub
inc
clc
sbb
sub
and
adc
and
sub
ficompl
xchg
and
jae
xor
inc
shll
xor
xorl
and
or
lcall
push
sahf
pop
jne
xlat
push
mov
lods
pusha
sbb
add
add
scas
xor
inc
mov
push
sbb
xor
push
mov
xor
and
fldcw
mov
insb
clc
mov
loope
add
repz
cmpsl
stos
push
pop
push
pop
mov
or
and
add
or
add
mov
pop
lods
insl
es
imul
out
xchg
fmull
or
lods
enter
add
or
mov
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
jmp
add
lret
lret
add
mov
scas
insb
enter
movlps
xor
jb
jmp
faddl
imul
clc
sub
sbb
ret
add
sbb
insb
aad
wbinvd
sub
sbb
lods
sub
dec
sub
scas
push
popf
scas
jp
dec
out
cmp
push
outsb
popf
fbstp
cmp
aaa
jb,pt
ret
inc
xor
pop
fiaddl
pop
dec
jae
mov
jg
mov
xor
push
inc
push
pop
mov
pushf
mov
data16
inc
popf
scas
mov
dec
cmp
jo
jl
popf
out
enter
pop
or
push
aaa
scas
pop
pop
mov
mov
cltd
mov
aas
jl
jnp
xchg
cltd
or
nop
cmp
stc
outsl
push
int
xchg
adc
divb
jnp
subl
cmp
cmp
or
hlt
mov
repz
sahf
cli
mov
or
jecxz
mov
mov
repnz
mov
imul
push
and
popf
and
cs
jmp
aad
lahf
inc
fucomi
scas
add
mov
adc
mov
sub
int
inc
add
les
inc
imul
inc
rorb
jcxz
sub
mov
adc
repnz
in
stc
adc
jl
jne
cmp
mov
dec
out
iret
gs
lods
bound
rcrl
mov
jp
leave
sbb
mov
mov
lods
sbb
imul
mov
mov
push
or
out
repz
xor
add
mov
jmp
adcl
xchg
addr16
test
daa
pusha
dec
mov
xorb
test
scas
shll
in
sbb
mov
cmp
mov
data16
pop
cmp
xor
mov
xchg
or
movsl
dec
ds
xlat
ljmp
push
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
jmp
inc
jl
xchg
pop
xor
js
mov
push
les
adc
movlps
leave
push
sbb
leave
jns
iret
cmp
and
pop
cmpsb
cmp
test
pop
push
cwtl
cmpsl
js
aas
sbb
repnz
add
scas
mov
jp
adc
push
mov
lahf
cmpsl
jnp
cmp
or
rcll
sub
into
lret
mov
xor
bound
jge
add
inc
xor
jne
sub
ret
jl
testb
or
lcall
fdivrs
outsl
push
mov
es
fsubr
and
outsl
xchg
fcom
cmp
mov
test
xchg
mov
mov
ficompl
sub
pushf
js
cmpsl
cmpsl
stc
bound
hlt
andb
fmul
js
mov
fidivs
lcall
push
popa
sub
inc
lret
rcrl
outsl
xchg
adc
push
inc
cmp
fmul
sub
dec
xchg
nop
scas
jno
push
sub
fwait
mov
loope
leave
cmp
cmp
adc
xor
push
mov
stos
sub
enter
push
add
aaa
or
sbb
dec
outsl
sub
or
xchg
fwait
lds
sbb
mov
mov
rolb
jbe
sbb
cltd
rcrb
xor
and
push
mov
xor
mov
sbb
adc
popa
call
or
jmp
fsubp
fsubr
pop
mov
test
clc
subb
xor
xor
and
out
pop
fwait
jp
out
mov
in
in
insl
push
xchg
inc
out
test
and
loopne
nop
iret
lods
shlb
cmpsl
cmpsl
leave
push
sar
fwait
scas
test
sarl
sbb
shlb
push
push
cmp
xor
cmp
xchg
pushf
clc
inc
negb
mov
add
jnp
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
jmp
jb
jecxz
gs
sbb
push
xchg
lahf
dec
es
rclb
movlps
sub
icebp
pop
jl
movb
mov
pop
push
lock
sbb
pop
loope
add
push
jle
xor
subb
clc
mov
je
imul
fsubl
jno
es
jmp
mov
xchg
cmc
push
xorb
fildll
imul
dec
mov
dec
mov
cmp
and
ret
js
daa
cmp
aad
jae
jl
mov
xchg
mov
shll
mov
jp
jmp
add
hlt
or
pop
jmp
mov
xchg
popl
aas
call
mov
sub
movsl
aad
incl
inc
nop
imul
test
fcmovnu
addb
pop
cmc
jne
inc
lock
adc
push
imul
sub
shlb
xchg
pop
lock
add
and
cmp
cs
aam
cltd
sub
les
xchg
decb
adc
sub
lds
out
adc
aad
stos
and
dec
and
mov
mov
lahf
xchg
dec
pop
jo
shll
xor
cmpsb
in
loop
mov
stos
mov
jge
sbb
mov
push
popf
mov
mov
adc
loope
sahf
lock
cmp
stos
or
inc
bound
in
aaa
mov
arpl
cmp
inc
mov
int3
rol
bound
push
xor
lods
dec
out
imul
imul
adc
stos
dec
lcall
cs
in
sbb
cmp
inc
dec
stos
mov
popl
jno
jbe
or
push
adc
and
pop
les
mov
or
shll
jge
jle
mov
mov
push
sbb
dec
sub
push
lods
pop
in
sarl
push
cli
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
jmp
imul
xor
and
mov
push
cli
sarb
mov
adc
add
and
mov
cmp
das
xchg
popa
or
sti
xchg
mov
xchg
mov
arpl
jb
and
decl
popf
lret
sub
clc
test
imul
mov
mov
pop
pop
sub
sbb
pushf
imul
push
rcrw
push
sub
nop
lds
dec
bound
cs
and
in
mov
push
xor
sarb
les
xchg
jo
jle
pop
leave
inc
or
xor
rolb
xchg
pusha
fs
stc
cli
jbe
imul
xchg
push
insb
push
mov
adc
dec
subl
pop
push
dec
dec
jb
inc
jecxz
pusha
rcl
hlt
ror
repz
shr
out
xchg
sbb
lds
mov
je
push
xchg
xor
mov
stc
sbb
hlt
sahf
js
mov
jno
enter
cmp
mov
pop
xchg
jno
mov
stos
push
popf
outsl
xlat
adc
rorb
jns
xchg
loopne
in
cli
pusha
adc
dec
addb
js
or
push
jne
pop
pop
test
xor
push
subb
sub
cmovs
je
and
pop
scas
stc
and
mov
ss
cmp
out
shll
scas
inc
idivb
add
cs
mov
xchg
sub
or
jecxz
arpl
push
mov
addr16
jecxz
adc
fwait
mov
dec
int3
iret
xor
bound
mov
xchg
add
adc
jnp
rolb
gs
pop
loop
ja
adc
sbb
mov
and
mov
xchg
inc
inc
lock
push
add
add
or
pop
pop
roll
sbb
mov
into
out
sbb
sti
sbb
mov
cmp
jg
sbb
cmp
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
jmp
mov
xlat
sbb
mov
mov
adc
rclb
cmp
mov
mov
test
pop
fcompl
int3
lret
push
mov
insb
je
es
or
aam
pop
jns
ficoml
mov
or
aam
sbb
xor
mov
pop
nop
pop
sahf
pop
movsl
icebp
adc
xchg
fwait
pop
inc
cmp
jne
jle
push
mov
sbb
pop
popf
cltd
test
aam
jno
in
adc
mov
int3
in
jb
aaa
sub
sbb
and
mov
movsb
pop
test
or
out
sahf
sbb
das
popf
jae
dec
jmp
dec
ljmp
jmp
cmp
cmp
pop
add
stos
cmp
mov
pop
and
jl
cwtl
fcoms
pop
int3
sbb
cmp
lahf
mov
mov
jb
aaa
into
sbbb
xor
loope
sbb
or
aas
xchg
aaa
fs
iret
in
adc
lea
es
scas
xor
icebp
mov
jge
mov
xor
mov
mov
lds
mov
jns
das
push
mov
movsb
sahf
nopl
fistl
push
dec
fmull
xor
testl
into
or
xchg
inc
mov
jmp
push
scas
adcl
hlt
add
push
xchg
jg
dec
rcr
push
stos
repnz
mov
mull
inc
sti
sub
loopne
nop
cmp
rclb
sbb
sbb
mov
xchg
pop
repz
inc
push
jg
bnd
test
scas
je
add
test
fs
sub
mov
scas
ds
data16
mov
mov
cmpsb
scas
jbe
add
loopne
pop
dec
jns
lock
rorb
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
jae
cmp
movl
jae
subl
shrd
movl
shr
ret
mov
xorl
xor
and
movl
shr
ret
xor
xor
ret
push
mov
sub
and
movl
cmpl
movl
mov
mov
movl
jmp
movl
jae
push
pushl
call
adc
and
mov
sbb
sub
andl
mov
cmpl
movzbl
notl
movl
mov
jmp
notl
jle
push
pushl
push
pushl
call
xor
add
andl
movl
or
add
mov
movl
mov
mov
or
movl
movl
sbb
movl
mov
mov
or
push
and
movl
cmpl
mov
movl
mov
jmp
mov
notl
jge
pushl
pushl
call
sub
and
sub
movzbl
or
add
neg
subl
movl
movzbl
sbb
push
adc
movl
add
mov
mov
push
orl
push
orl
push
sbbl
jmp
shrb
push
sbb
mov
mov
adc
lahf
movlps
test
dec
xor
shrl
call
sbb
jecxz
dec
push
cli
fldt
pushf
pop
mov
sub
fidivrs
out
xchg
out
xor
or
call
lods
dec
inc
xchg
divb
jae
icebp
push
shlb
cmpsb
pushf
or
ror
cmp
lea
out
sub
push
lret
shlb
jo
loop
cmp
ss
dec
cs
loope
jmp
xchg
incl
pop
xchg
ds
lret
or
cmpb
push
push
out
sbb
mov
movsl
bt
pop
inc
push
dec
dec
fmuls
cmc
or
dec
jge
and
std
in
and
fs
jo
mov
rcr
aas
push
mov
in
mov
fs
dec
fists
mov
dec
movsb
je
mov
xlat
mov
rcll
jecxz
push
mov
xor
mov
loope
push
add
fistps
push
shr
movsb
sub
insb
gs
fcomps
sub
push
push
sti
nop
add
or
mov
jmp
mov
inc
push
jb
xor
mov
bound
push
push
pop
lea
and
xchg
jb
inc
push
call
stos
fwait
insb
aad
fcomps
fcom
int
add
xor
xchg
add
jns
fadd
adc
xchg
and
mov
pop
imul
jecxz
adcb
scas
outsl
xlat
clc
adc
pop
add
mov
pop
push
mov
dec
cmp
pop
out
ds
inc
scas
popa
add
jmp
outsl
loope
xor
cld
mov
cltd
je
push
xchg
jo
cmp
jnp
push
sub
rolb
scas
and
push
xor
cmp
sub
adc
lods
nop
lcall
insb
and
fldenv
xchg
xchg
mov
push
xchg
in
fidivs
test
inc
fsubrs
rcrl
or
ret
stos
mov
sbb
test
dec
hlt
cmc
adc
dec
sbb
test
mov
arpl
lcall
scas
imul
int3
out
xor
ja
mov
fld
mov
pop
sbb
push
jae
cmpsb
test
in
jecxz
aam
mov
insl
cwtl
repz
mov
push
out
fsubp
jno
inc
mov
xchg
les
cmp
mov
mov
cmp
push
icebp
fsubp
imul
shlb
sbb
fwait
dec
fwait
cwtl
mov
shr
popa
dec
mov
inc
call
cmpl
mov
movl
jmp
mov
mov
jae
push
call
mov
mov
sub
xor
andl
sbb
adc
adc
or
mov
xor
mov
mov
orl
push
addl
or
sbbl
push
addl
or
sbbl
xor
subl
xor
decl
push
push
call
not
mov
and
mov
push
push
push
push
call
cmpl
mov
mov
jmp
movzbl
movl
ja
push
push
pushl
call
add
mov
sub
addl
sub
sub
sbb
mov
mov
adc
mov
and
movl
cmpl
notl
mov
jmp
movl
jbe
pushl
pushl
push
call
mov
sbb
andl
subl
addl
and
xor
xor
mov
sub
add
andl
movl
xor
movl
movl
movl
cmpl
movl
mov
jmp
movl
not
jne
push
call
subl
or
sub
sub
add
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
jmp
mov
and
loopne
mov
js
mov
adc
leave
fstp
in
cmpsl
add
or
pop
dec
js
or
sbbl
lods
in
push
call
dec
mov
shl
sbb
call
jo
dec
fisttpl
sbb
and
pop
aad
mov
xchg
xchg
push
scas
jo
mov
movsb
mov
das
dec
imul
mov
cmp
fwait
test
dec
lahf
or
fsubrp
xor
push
addl
bound
push
outsl
popa
and
sbb
mov
adc
dec
push
and
adc
lods
rol
aaa
in
rcrl
jnp
shll
ret
mov
sti
outsl
mov
and
push
add
lret
xor
sub
sub
add
mov
add
test
jge
lret
mov
cmc
sub
call
mov
fs
cmp
inc
mov
outsl
roll
mov
sub
sbb
movsb
mov
jmp
popl
movsb
shll
es
lcall
ficoml
rclb
mov
aam
mov
xlat
rolb
xchg
enter
xor
sbb
je
outsb
orb
add
pop
pop
dec
mov
sub
or
fwait
inc
push
pop
lea
or
jb
fucomp
inc
lea
sub
and
rclb
mov
jg
xor
dec
test
movsb
lret
mov
or
fnstenv
cmp
sbb
adc
cmp
or
mov
or
ljmp
fs
repnz
ret
inc
xor
insb
decl
adc
push
xchg
mulb
int
loop
pushf
sbb
pop
ret
sbb
pop
mov
pop
jp
jnp
ficompl
cld
mov
popa
fstps
xchg
push
fisubl
pop
cs
push
scas
cmp
call
mov
lahf
pop
fbld
jl
cmp
imul
imul
int3
cli
xchg
cmp
scas
dec
and
mov
pop
dec
sarb
test
inc
lahf
inc
pop
scas
xchg
nop
pop
jle
leave
mov
mov
sbb
push
loope
ss
in
mov
adc
sub
dec
cli
cmp
jge
std
xor
and
sub
lods
outsl
notb
pop
mov
js
repnz
dec
imul
xchg
mov
repz
xchg
xchg
and
pop
push
mov
rorb
pop
std
pushl
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
jmp
jbe
mov
imul
cmpl
scas
adc
lahf
movlps
jns
mov
jecxz
and
popf
shr
sub
pop
decb
mov
hlt
push
push
into
push
cwtl
xor
push
inc
mov
xchg
bound
outsb
sub
loopne
pop
fs
mov
or
sub
std
jl
jnp
sahf
popf
and
jo
mov
cmp
mov
imul
mov
les
pop
mov
cwtl
cmc
mov
daa
sub
std
loope
ljmp
fnstcw
aam
stos
int3
sub
jp
dec
add
xor
sbb
pop
xlat
ror
mov
push
mov
hlt
dec
push
dec
xchg
movsl
push
adc
mov
mov
xchg
inc
jno
push
cli
movsl
cwtl
lods
sar
fstp
or
push
out
xlat
add
jne
inc
or
inc
inc
mov
imul
shlb
adc
xchg
push
ljmp
out
xchg
stos
in
cmp
and
push
xor
xchg
sub
pushl
dec
inc
push
sbb
mov
fwait
out
fidivl
into
les
iret
icebp
pop
hlt
pop
dec
fstpt
push
aam
lahf
sbbb
add
sbb
add
sub
fs
movsb
sbbl
enter
push
enter
daa
inc
sbb
cmp
sub
dec
ss
and
bound
arpl
mov
imul
and
pop
push
pop
out
mov
fsub
clc
in
push
pop
push
mov
add
dec
rcll
mov
lock
out
repz
mov
movsb
pop
cmp
push
lcall
out
clc
sbbb
daa
cmp
push
movl
inc
xchg
mov
mov
loopne
lods
add
fistps
fildll
sarl
xchg
xor
addl
inc
or
xor
outsl
push
push
in
nop
xchg
mov
stos
xor
cmp
or
insb
add
das
and
lods
loope
rcrl
xchg
adc
lods
insl
mov
push
das
lods
jbe
jge
xchg
cmp
sub
add
xchg
pop
push
in
in
lret
daa
pop
js
and
ret
pop
mov
in
das
in
mov
mov
movsl
pop
sub
and
add
sbb
cmpsb
pusha
xor
daa
lds
test
leave
scas
add
neg
popa
inc
mov
das
int3
in
add
fstl
xorb
outsl
test
in
adc
add
add
ret
lock
jmp
addl
scas
sbb
pop
add
mov
sbb
lahf
movlps
pop
lods
add
pop
mov
pop
pop
sbb
mov
push
or
pop
inc
scas
jle
ret
inc
repnz
sbb
xchg
add
fmuls
fisubrl
mov
push
fisubs
sbb
lcall
inc
movsl
jb
popf
outsb
fistpll
push
push
aaa
loop
in
push
or
icebp
shrb
xor
mov
cmp
pop
in
je
xchg
mov
jmp
xchg
pusha
and
xchg
mov
mov
xor
outsb
mov
jl
sub
je
dec
mov
sti
outsl
push
jb
push
in
orl
in
scas
shr
sub
pop
lds
into
lds
dec
jbe
mov
mov
cltd
lea
xchg
sub
sarb
mov
xor
mov
lea
push
and
in
fldenv
mov
and
fisttps
xor
jbe
and
aas
das
pushf
push
movntps
fldt
push
lahf
ds
jb
jb
scas
pop
test
in
push
push
sbb
pop
sbb
sahf
idivb
add
sub
or
mov
and
jns
jno
mov
movsl
mov
ficoms
xor
mov
jno
jg
dec
sub
popa
int
sbb
push
sbbb
mov
aaa
in
fcmovne
mov
sbb
pop
daa
mov
or
inc
pop
pop
aam
jno
das
sbb
test
rorb
icebp
icebp
jg
sub
jg
inc
shll
xchg
mov
out
clc
fwait
sti
lret
lods
pop
fstpl
inc
bound
stc
ljmp
fsubrs
xchg
enter
and
jg
sahf
ja
mov
push
pusha
test
int3
dec
push
lret
icebp
mov
clc
mov
loope
shll
mov
jne
pusha
adc
arpl
js
stc
xchg
iret
out
adc
sub
ss
xchg
push
dec
nop
pop
insb
stc
sbb
clc
cs
fidivrl
ljmp
jmp
arpl
out
sbb
imul
adc
dec
pop
jge
shrb
xchg
out
aad
dec
sahf
inc
pop
mov
push
mov
sub
cltd
popf
xor
mov
dec
mov
and
ret
test
dec
mov
es
adcb
ret
in
pop
bound
pop
pop
inc
lods
inc
rcrb
mov
cmp
jne
cmp
je
movl
movl
jmp
pop
repnz
push
mov
call
mov
lahf
movlps
aas
rorl
cli
cltd
fs
push
mov
sub
movsb
clc
jne
inc
cmp
outsl
lds
or
mov
jnp
mov
fimull
mov
inc
jnp
rcrb
and
push
mov
mov
push
sub
jno
dec
xchg
mov
fstl
aaa
and
negb
and
decb
fsubl
cld
push
lock
cmpsb
lock
or
cmp
test
test
das
scas
mov
repz
ret
inc
mov
or
cs
test
pop
movsl
cltd
sub
cltd
ds
fimull
inc
mov
out
push
ret
dec
shrb
xchg
out
movsb
rcl
mov
pop
dec
sti
jbe
sbb
and
mov
mov
sub
lcall
push
shll
cmp
daa
xor
pop
xchg
and
pop
rcrb
mov
push
pop
cwtl
out
or
jb
xchg
shl
mov
icebp
dec
lea
frstor
out
sarl
stos
pusha
xchg
cmp
and
leave
loopne
inc
and
sbbb
icebp
mov
jge
adc
xchg
push
inc
scas
mov
push
push
addr16
daa
cmpsl
xor
repnz
insl
in
jae
stos
enter
lock
adc
pop
lret
outsl
test
push
sbb
mov
test
notb
jge
es
sbb
cmp
or
mov
jg
rcll
and
and
adc
lock
jmp
int
fdivrl
call
arpl
add
sub
xchg
dec
mov
shrb
mov
popa
popf
mov
ret
cli
jbe
inc
jp
pop
fucomi
xchg
sub
js
mov
fcoms
lock
xchg
mov
push
ds
cmp
enter
cltd
filds
adc
rorl
cs
sbb
jnp
xchg
arpl
jg
movsl
iret
sub
mov
sarl
inc
mov
mov
imul
jb
fnstenv
lock
bound
pop
jecxz
sbb
lods
dec
xchg
insl
push
sub
inc
push
ret
and
push
mov
out
andb
cmc
cmp
insb
jmp
ds
out
sub
jl
rolb
jecxz
push
mov
repz
sbb
inc
lods
sete
cmp
aad
xchg
mov
repz
lods
pop
and
call
mov
push
lock
and
lahf
push
daa
sbb
inc
rclb
add
add
pop
add
rcll
push
bound
adc
adc
repnz
jp
push
cmp
scas
leave
sti
notb
scas
fwait
and
ss
fdivl
fisubrl
insl
rorl
lret
mov
jnp
sub
mov
push
push
mov
loop
rorl
dec
repz
fwait
popf
imul
leave
imulb
add
mov
pop
adc
lret
cwtl
aaa
in
dec
dec
push
rcll
mov
cltd
syscall
push
daa
jo
and
pop
in
shrb
pop
lret
ltr
push
mov
fnsave
mov
rclb
mov
lock
jge
pop
pop
pop
push
or
jmp
mov
aam
add
pop
sub
testl
add
adc
pop
lods
push
addr16
imul
lret
xor
adc
dec
jns
les
pop
icebp
jp
arpl
add
xchg
lahf
pop
sub
paddd
movsb
testb
cmp
inc
iret
add
jmp
jg
popf
es
lods
push
sarb
fsubrp
ret
jo
fs
aas
lods
xchg
popa
or
pop
cli
shrl
popa
aad
test
aam
add
cmp
or
jle
jge
push
jle
push
xor
into
adc
mov
xchg
aas
xlat
pop
mov
mov
jp
xchg
movsl
sbb
sub
iret
inc
adc
push
sbbb
inc
in
decb
and
cwtl
dec
or
and
push
ficompl
js
adc
and
cmp
jmp
sbb
pop
mov
xor
outsl
inc
mov
dec
pop
imul
cmp
ja
mov
pop
push
leave
xchg
call
insl
popa
inc
jg
test
mov
sub
pcmpgtw
xchg
add
xor
mov
rcl
sub
mov
pop
insl
inc
arpl
es
out
sbb
test
or
sbb
stos
testl
scas
sbb
add
jecxz
mov
pop
add
mov
sub
stos
pop
test
mov
pop
test
cmp
pop
outsl
in
and
cs
push
movsb
rcll
jo
mov
pop
andl
xchg
pusha
push
dec
fstps
push
jl
push
xchg
sbb
xor
pop
pmulhw
jnp
int3
ss
jb
cld
mov
pop
pusha
or
push
push
pop
inc
adc
mov
pop
fwait
push
movl
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
jmp
sbb
cmp
sbb
notl
cmpb
movlps
clc
xchg
pop
loopne
fstps
push
pushf
cmp
add
mov
sbb
arpl
mov
repz
sbb
and
ror
cmpl
dec
sbb
push
lds
sarb
test
mulb
push
push
popl
inc
pop
mull
mov
add
sbb
push
xchg
xchg
inc
mov
scas
aam
mov
pop
dec
pushf
enter
xor
insb
inc
loop
popa
sbb
lods
mov
push
mov
sub
sub
lods
mov
push
hlt
icebp
loope
sbbb
aad
cmp
xor
xor
pop
xlat
aaa
sti
and
cmp
mov
mov
add
fildll
or
test
mov
push
cltd
push
add
jbe
add
mov
int3
push
xchg
gs
insl
mov
adc
jl
mov
mov
and
rcll
ljmp
shl
mov
imul
subl
sub
xchg
xchg
stos
gs
xor
mov
js
cmc
in
cmc
adc
sub
xchg
jb,pt
mov
dec
sbb
dec
cmp
popa
aas
inc
inc
dec
mov
cmp
sub
int
test
sti
enter
xchg
add
and
shlb
imull
stos
fbstp
xor
stos
sbb
icebp
mov
push
jb
shll
in
test
adc
in
popa
mov
gs
arpl
pop
repz
cmp
fstl
xchg
push
pop
pop
enter
repnz
mov
and
mov
push
xorl
frstor
cmp
sahf
or
pop
arpl
push
aam
cltd
cwtl
test
xor
xchg
out
jnp
mov
std
mov
repz
sbb
repz
scas
cmpsl
add
int3
xchg
fwait
sahf
sbb
lock
pop
add
dec
adc
cmp
fsubrs
xchg
jmp
sub
jbe
sub
jne
mov
mov
jmp
or
sbbl
dec
pop
xor
ja
adc
in
sbb
popa
push
adcb
arpl
repz
xchg
mov
fldl
jno
jmp
fistl
mov
mov
rorl
add
mov
cmp
les
test
cmp
lret
test
sbb
sbb
cmp
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
jmp
xchg
jnp
stc
pop
jno
loop
cmp
mov
jle
xchg
adc
lahf
movlps
stos
or
mov
mov
push
jno
and
movsl
or
ds
sbb
sbb
ret
popf
insb
out
outsb
push
popa
lds
xchg
aas
or
sbb
leave
jns
das
aas
sub
test
add
aam
popf
cli
out
int3
int
mov
enter
mov
ja
icebp
mov
into
in
pop
aam
dec
fnsave
dec
lcall
stos
in
mov
movsb
mov
sbb
mov
sub
xor
gs
rol
mov
sbb
mov
in
adc
adc
es
push
and
jmp
cmpsb
idivl
mov
lods
jo
repz
jae
in
out
fwait
div
adc
mov
je
mov
iret
gs
lock
test
jnp
pop
lahf
frstor
mov
mov
in
repnz
dec
orl
insb
inc
pop
push
add
jle
adcl
mov
mov
push
pop
bound
adc
xchg
add
mov
cmpsl
fldl
sub
dec
dec
es
addb
repz
lret
inc
xchg
insb
in
push
aam
ret
adc
insl
adc
or
adc
movsb
stos
rcr
leave
pop
es
std
xchg
mov
mov
cld
adc
jecxz
jl
cmc
jb
test
jg
enter
lret
lahf
xchg
fwait
iret
cmp
cltd
mov
negl
mov
jbe
ja
jmp
push
adc
rclb
imul
cmpsb
xchg
ret
add
call
ror
stos
pusha
xor
ss
andb
xchg
pop
cmpsb
ret
adc
inc
outsb
pop
pop
nop
or
cmp
insb
iret
mov
sub
cmpsb
jo
cld
mov
cli
jno
dec
adc
dec
mov
insl
inc
bound
mov
fwait
adc
dec
jg
jne
cld
push
push
xchg
push
mov
jg
or
pop
sub
mov
mov
sahf
clc
je
sahf
mov
and
nop
add
push
and
jne
sub
scas
or
data16
adc
jne
pop
dec
test
xchg
fstps
mov
ds
and
fs
jge
sbb
and
imul
test
sub
mov
aaa
pop
adc
xchg
pop
xchg
mov
shrb
pop
outsb
mov
cmp
inc
or
enter
or
cli
jno
sbb
test
jae
adc
xchg
data16
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
jmp
sbb
ja
pop
sbb
inc
popf
push
push
mov
adc
adc
or
pop
add
dec
fcmove
dec
jp
aam
scas
jns
pop
push
sahf
js
inc
sub
mov
scas
and
leave
aam
inc
addb
jno
fmull
and
jecxz
and
xor
push
jno
push
cltd
add
sbb
fidivrs
stos
enterw
iret
outsb
mov
mov
leave
jp
loopne
ds
inc
mov
sub
aaa
xchg
test
xchg
sbb
mov
cs
dec
sub
xchg
or
movsl
loopne
xchg
mov
roll
push
cmp
inc
xor
or
mov
stos
pop
dec
sub
sbb
sub
dec
push
pusha
loop
xchg
ja
mov
add
dec
push
lods
dec
movsb
pop
add
push
enter
push
stos
pop
mov
push
add
lret
sub
pop
adc
imul
mov
mov
dec
sub
cmc
out
and
ja
movsl
sbb
jnp
sbb
and
adc
lret
jecxz
xor
repz
cs
pop
dec
shrl
lods
rcrb
dec
icebp
lret
inc
mov
push
sbb
out
arpl
daa
icebp
loop
ret
add
mov
cld
inc
xchg
mov
xchg
mov
cld
mov
sbb
aam
mov
and
mov
and
push
jns
and
lret
push
push
ret
xor
inc
jp
aaa
addr16
lret
idivl
out
popf
adc
stos
roll
cmp
inc
push
and
xor
adc
lcall
jnp
dec
sbb
adc
in
adc
inc
mov
sub
pop
pop
dec
in
and
popf
sbb
shld
fisubl
sub
test
push
addr16
jle
loopne
fisttpl
mov
es
pop
fmul
seta
and
lods
push
stos
mov
sbb
pcmpgtw
fstps
mov
mov
lret
repz
out
das
popa
out
cli
push
and
lcall
push
push
xor
in
out
call
sbb
jns
fs
or
sub
pop
ljmp
cwtl
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
jmp
sbb
sbb
and
or
mov
pop
movlps
movups
ljmp
xor
mov
adc
rol
xchg
sti
test
xchg
dec
xchg
pop
inc
pushf
and
mov
and
popa
cmp
test
arpl
jo
jp
rcpps
jb
push
xchg
lret
or
add
fstl
subb
sbb
nop
jb
lcall
test
outsb
popa
sub
sbb
or
repz
dec
jo
and
inc
inc
lret
addl
int
add
and
mov
jp
mov
cld
hlt
popf
sub
add
jg
mov
enter
sub
adc
xchg
inc
cmp
mov
pop
mov
cli
mov
stos
pop
push
sbb
push
jp
imul
mov
test
loop
xlat
mov
add
sbb
into
popf
lahf
push
loopne
or
pop
sbb
mov
shlb
mov
jb
das
cmp
dec
pop
rol
ret
ret
sbb
dec
cmc
adc
sbb
imul
xchg
add
scas
push
out
push
stos
sub
popl
jg
jl
test
jmp
in
scas
scas
dec
pop
xor
adc
mov
push
fstpt
es
aaa
je
or
mov
test
xchg
cmp
sbb
sbb
cld
mov
adc
cmp
lods
add
or
mov
in
mov
lret
mov
shrb
ret
dec
xchg
outsl
and
pop
cltd
ljmp
xor
cli
xor
adc
dec
test
out
jae
imul
mov
fwait
test
into
push
insb
dec
iret
out
insl
inc
pop
loope
adc
gs
sbb
pusha
pop
insl
push
inc
cltd
mov
outsb
mov
ja
fs
aas
lcall
xor
jmp
push
xchg
dec
add
insl
scas
inc
int3
popa
pop
and
int
pop
insb
sub
or
add
inc
dec
lret
in
inc
pop
fxch
jae
in
sub
inc
lahf
sub
push
adc
jecxz
imul
iret
subb
fcoms
push
clc
mov
jmp
fdivl
fnstcw
sbb
push
das
xchg
pop
movlps
js
jne
out
cld
mov
shll
mov
xor
or
aaa
lcall
push
shlb
cmp
sub
mov
push
imul
mov
lds
jnp
sbb
shl
mov
mov
sub
ret
stc
push
popf
inc
inc
jmp
and
mov
push
cmpsl
out
jp
cwtl
jbe
jnp
mov
add
xor
or
fisubl
icebp
in
pop
or
out
gs
jnp
jns
cmpsl
sbb
jecxz
sbb
hlt
mov
orb
leave
inc
xor
adc
shll
hlt
mov
xchg
push
cmp
lods
xchg
andl
xchg
adc
ffree
in
push
xchg
cld
adc
xchg
xor
jmp
dec
cmc
es
jecxz
sub
xor
push
cmp
loop
adc
outsl
sbb
in
xor
mov
mov
stos
sbb
inc
push
push
jae
mov
arpl
mov
jno
adc
out
jl
xor
xor
nop
mov
out
repnz
call
jecxz
int3
leave
push
pop
mov
cmpsl
push
jmp
scas
fcmove
loop
xchg
out
lock
xchg
add
lret
pop
jne
cmc
aas
mov
jge
pop
roll
int
push
add
rcr
test
negl
mov
ret
push
repnz
mov
out
fmul
sub
ja
stc
jno
mov
fcomi
js
mov
mov
dec
imul
es
jb
push
filds
sub
adc
pop
pop
and
xor
sbb
imulb
ja
jmp
test
leave
sbb
insl
ds
pop
out
sub
and
shl
xor
xchg
shrd
cld
mov
mov
sub
push
repnz
jo
cwtl
lea
jne
pop
loope
imul
rcr
mov
and
fs
mov
mov
in
jl
out
xchg
ja
das
dec
dec
xchg
adc
sub
cmp
inc
aas
jmp
in
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
jmp
nop
xchg
cltd
lret
pop
dec
mov
push
or
ljmp
adc
adc
dec
in
xchg
or
andps
testb
test
mov
pop
lret
aaa
mov
and
jnp
or
cmpsb
das
and
out
mov
or
inc
loopne
jb
out
imul
inc
cs
xchg
sbb
rorb
filds
or
decl
cmp
jb
xchg
pop
rep
sbb
sbb
mov
ja
lods
pop
enter
outsl
pushf
push
insb
cmpsl
and
xchg
xchg
lods
ljmp
mov
fimuls
fidivrl
pop
fdivrl
out
cld
pushf
cwtl
xor
dec
and
in
inc
mov
movsl
jmp
xchg
nop
scas
mov
sahf
jge
pop
movsb
or
xor
jl
jb
nop
shl
cmp
mov
mov
dec
adc
test
mov
jmp
fildll
roll
popf
adc
jge
pushf
xorl
mov
adc
bound
fsubr
js
mov
and
or
hlt
add
mov
int
pop
xor
shrb
mov
pop
enter
jg
and
mov
and
pop
jo
ret
les
insl
inc
repz
out
fimuls
cmpsb
cli
aaa
pop
jns
aam
loop
je
xchg
sti
fldl2t
adc
dec
ljmp
or
mov
and
aam
js
cmp
pop
es
daa
pusha
mov
sub
add
mov
enter
insl
jbe
sbb
iret
into
add
inc
stos
int
xorb
push
dec
cmpsb
jno
pop
dec
std
ljmp
jne
fcos
sbb
or
xor
pushf
mov
or
adc
pop
aam
add
jne
adc
push
js
xchg
roll
aas
orb
aad
das
add
xor
nop
xchg
inc
jns
addb
push
movsl
fldl
push
fucom
leave
mov
push
xchg
arpl
imul
jo
loop
imull
inc
jae
mov
repz
cmp
int3
xchg
push
sbb
xor
dec
ja
lret
sbb
xchg
pop
in
call
sub
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
jmp
add
popf
pop
sbb
push
jno
insb
sub
adc
ficoms
adc
icebp
jae
xor
push
pop
outsb
mov
sti
or
inc
mov
daa
incl
inc
add
test
mov
movsl
movsb
push
push
shll
fldenv
pop
ret
arpl
push
mov
hlt
mov
jbe
daa
pop
mov
outsb
pop
popf
xor
dec
mov
cmpsl
stos
xchg
mov
jmp
inc
mov
and
xor
jbe
pop
inc
xchg
dec
push
sub
push
inc
std
or
push
sbb
mov
sbb
stos
inc
inc
push
das
shl
loope
imul
adc
xor
sub
out
cmp
mov
aam
test
jnp
repnz
xlat
dec
pop
xchg
or
pop
add
es
dec
xchg
xor
divb
add
xchg
outsl
rorb
cmp
sahf
sbb
xor
mov
sub
rcll
adc
cwtl
mov
jne
xor
push
sbb
imull
mov
lret
aad
push
push
jno
push
dec
sub
inc
fwait
dec
push
push
popf
inc
mov
nop
pop
sub
rcl
cmp
fwait
jno
insb
add
sub
push
jge
pop
jno
jge
loopne
cs
cmp
mov
and
dec
inc
test
lods
out
xlat
mov
mov
mov
mov
out
mov
xlat
out
mov
pop
ljmp
sbb
pop
or
pop
call
xchg
mov
and
paddq
scas
popf
sbb
push
cmp
cmp
hlt
push
or
mov
ja
mov
sub
add
inc
xchg
insb
mov
cmp
adc
add
outsb
xor
cld
pop
cmp
xor
stos
pop
pop
ficoml
push
inc
jbe
mov
adc
andl
add
sub
cmc
adc
outsb
jp
xchg
sub
fadds
jmp
xchg
fnstenv
and
push
push
mov
cli
inc
push
or
fmull
in
xor
xchg
bound
sbb
aam
ret
inc
shlb
and
mov
inc
cmp
andb
roll
es
ljmp
ss
jno
mov
test
and
sbb
mov
add
jae
loop
sub
push
push
fsubrl
int
mov
xchg
mov
call
ljmp
ficoms
pop
mov
add
xchg
jb
cwtl
in
xchg
xchg
dec
shrb
pop
fldcw
cmpsl
mov
ficompl
repz
push
pop
pop
sub
inc
std
pop
push
pushf
push
and
aas
les
mov
std
popa
jne
ljmp
inc
stc
adc
ljmp
sub
inc
adc
subl
mov
dec
clc
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
jmp
std
push
mov
ja
pop
jmp
into
push
cmp
jo
adc
adc
adc
call
xchg
pop
aaa
out
sbb
aas
repz
xchg
inc
inc
mov
jo
insb
push
lahf
test
int
or
and
pop
dec
fsubp
pop
pop
mov
jb
sbb
add
loope
xorb
insb
inc
mov
mov
xchg
fcmove
mov
test
add
aas
and
push
pop
pop
or
jnp
mov
push
mov
lock
mov
aad
shl
sub
jno
dec
movsb
into
inc
or
dec
lds
subl
rcll
dec
jae
push
fcompl
sub
xor
pop
jne
mov
mov
cmpsb
or
sub
inc
jle
sahf
pusha
push
cmp
fimuls
and
or
shll
pop
pop
adc
aaa
cs
inc
xchg
push
sbb
sub
shll
orb
cmp
and
dec
dec
pop
mov
inc
in
cs
jg
push
dec
xchg
mov
enter
pusha
add
jmp
loope
adc
jle
dec
xor
decb
inc
sub
dec
lret
inc
xor
in
out
xchg
sbb
repnz
jmp
lods
nop
cmpsl
mov
mov
cli
xor
jg
out
mov
pop
xor
and
xor
or
xchg
clc
out
dec
pop
hlt
mov
fisubrl
pop
aad
shrb
js
data16
fiadds
repz
js
mov
repnz
adc
push
sbb
jecxz
shlb
dec
shr
inc
mov
xchg
jne
lods
call
dec
jbe
ljmp
lret
out
daa
ss
das
bound
jmp
jmp
mov
mov
dec
and
jno
ss
movsl
mov
mov
loope
push
out
push
mov
jb
xchg
cwtl
fisubrs
movsl
in
stc
ja
scas
mov
pop
rol
popf
xchg
maskmovq
testl
stos
push
jmp
jne
in
dec
out
push
idivl
push
arpl
xchg
loope
mov
push
and
mov
lock
std
mov
pop
dec
daa
pop
push
idivl
fcmovb
and
xor
pop
daa
pop
movsl
xchg
mov
mov
push
movsl
inc
out
les
out
es
cli
mov
xchg
jle
shll
push
push
mov
cmp
inc
mov
in
repnz
sbb
inc
jnp
xor
mov
cmp
aaa
fs
xchg
ljmp
pop
pop
push
push
cmp
adc
ret
fs
add
in
mov
xchg
dec
adc
lret
int
sub
jge
push
je
sahf
push
dec
notb
idivb
fwait
pop
out
dec
lea
ss
stos
xchg
sbb
mov
mov
test
or
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
jmp
decb
sub
ficoms
js
outsb
adc
ficoms
adc
ljmp
fstps
xchg
xor
lock
jmp
xchg
or
cs
and
iret
xor
and
push
sub
adc
jne
mov
test
cli
xor
mov
xchg
les
pusha
cli
mov
bound
adcb
fisubs
ds
inc
mov
test
push
int3
mov
fmull
fistl
add
pop
icebp
out
cli
mov
out
data16
fcompl
int3
shl
jmp
push
xchg
pop
jp
js
or
lods
stos
dec
aad
cmp
clc
loope
js
sub
mov
push
jge
lcall
jbe
push
pop
mov
push
mov
sub
add
inc
cs
xchg
sbb
xor
inc
loop
stos
or
sub
pop
es
nop
pop
jg
fmul
iret
add
add
test
leave
mov
loopne
in
aad
mov
fbstp
mov
push
mov
bnd
sub
inc
out
pop
push
sub
mov
lock
mov
dec
dec
dec
jle
nop
jmp
loope
push
inc
jmp
adc
stos
mov
jns
out
cmp
sbb
lea
push
inc
mov
cmp
cmp
out
inc
loopne
andnps
mov
movsb
ret
pop
out
push
pop
dec
jnp
push
into
xlat
xor
jnp
push
pop
and
and
dec
xor
iret
sbb
mov
add
or
ljmp
insl
add
mov
xchg
sarl
fldenv
inc
or
fwait
out
cmp
adc
iret
push
stos
out
fdivr
movsl
stos
sbb
imul
insb
xor
mov
nop
push
inc
xor
loopne
in
push
xchg
push
and
movsl
sub
inc
lcall
fildll
lds
inc
mov
add
mov
sti
push
insb
and
jne
scas
jnp
stc
dec
sbb
sbb
or
ja
xor
add
je
push
insl
in
xchg
lahf
mov
mov
das
dec
cwtl
cmpsb
sub
xchg
jne
in
jecxz
xchg
into
scas
xchg
jmp
mov
stos
pop
bound
shl
jmp
fisttpll
add
or
int
pushf
mov
imul
push
or
jno
test
xchg
into
aad
arpl
js
test
dec
loopne
sbb
sbb
clc
movb
inc
sub
mov
insl
jns
mov
sbb
mov
inc
or
cwtl
xor
in
call
jbe
or
fwait
orb
mov
xchg
cmpsb
int3
or
shl
xchg
push
sbb
inc
rcrl
push
in
jne
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
jmp
aam
lock
mov
insb
jg
add
ficoms
adc
cmpsl
out
sbb
or
je
out
loope
inc
imul
arpl
and
cmp
or
or
xchg
in
xchg
mov
pop
ret
mov
in
pop
shrb
arpl
lcall
add
lcall
dec
xlat
push
ficoms
shl
movsl
loope
frndint
dec
test
mov
fildl
pop
add
sub
stos
push
mov
push
jp
sbb
xor
cmp
aaa
xor
jno
sbb
xchg
sub
les
push
xchg
push
stos
cli
jb
out
mov
arpl
enter
into
loope
dec
or
cld
cmc
leave
jne
je
mov
icebp
xor
mov
jns
xchg
in
stc
push
subb
test
vmovdqu
inc
popa
ja
insb
mov
outsl
std
ret
push
adc
sub
xchg
test
mov
inc
daa
imul
mov
leave
mov
pop
sub
mov
mov
xchg
stos
and
xchg
adc
dec
dec
nop
loop
xchg
lret
out
sub
std
cmpb
sbb
insl
mov
repnz
cmc
jbe,pt
in
rcrb
mov
shlb
fidivrs
jecxz
jle
mov
dec
push
cli
call
lods
dec
hlt
jge
inc
repz
ss
inc
lcall
mov
dec
sub
insl
mov
into
fsubs
xchg
ljmp
loopne
mov
jp
clc
mov
mov
stc
test
and
cmpsl
stos
cwtl
inc
lods
dec
lret
loop
test
fimuls
and
xchg
out
cmc
pop
aad
dec
cwtl
addr16
adc
xchg
stos
xchg
sbb
arpl
out
loope
les
cmpsl
fsubs
add
pop
add
ret
inc
stc
out
add
xchg
sbb
push
ja
test
xchg
popf
sarb
test
sub
mov
dec
mov
ds
mov
jo
xor
pop
push
pusha
mov
sub
adc
jae
test
mov
jg
mov
and
pusha
mov
mov
push
mov
fisttps
insb
mov
mov
xchg
jb
jle
lahf
je
mov
push
and
icebp
fsubs
insb
inc
cmp
and
xchg
rcrb
add
int3
movsw
fs
inc
xchg
mov
sub
mov
add
push
les
cmc
sbb
repz
jno
sub
xchg
jle
stc
das
js
and
iret
insb
jns
lock
pop
mov
aaa
sbb
mov
lods
pop
lahf
or
push
je
dec
jmp
ljmp
test
shll
push
pop
hlt
test
mov
lret
xor
test
in
xorl
outsl
das
mov
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
jmp
jae
jge
jge
and
in
pop
sbb
inc
bound
adc
adc
adc
or
pop
xchg
jp
lods
fiaddl
or
fwait
pop
shl
repz
mov
sub
bsf
stc
cli
ret
dec
push
sub
lea
push
jle
mov
mov
jp
or
inc
je
insb
shll
aam
daa
mov
sbb
sbb
and
test
add
mov
mov
data16
push
and
or
loope
je
xchg
sub
xor
call
data16
push
adc
orl
xor
lds
sarb
movsb
call
ljmp
sbb
iret
sbb
loop
cmc
jnp
std
dec
mov
addr16
mov
mov
xorb
leave
dec
or
push
inc
mov
hlt
shrl
xor
ljmp
mov
cld
out
push
add
inc
jmp
mov
xor
xor
adc
jno
pop
lods
sbb
lret
lret
out
jno
leave
das
shll
lcall
and
xlat
lds
pop
insl
fistl
pushl
ficompl
nop
std
xor
sub
fldenv
mov
inc
out
dec
pop
adc
or
xchg
mov
pop
mov
pop
lcall
sbb
push
mov
dec
ja
decb
out
rorl
movsl
addr16
lahf
push
sub
mov
movsl
ja
and
mov
inc
adc
fstl
sbb
in
loopne
pusha
shl
mov
fstpt
shl
rol
sbb
push
out
shrl
stos
in
sub
daa
mov
push
adcl
add
adc
sub
outsb
dec
or
lds
mov
mov
cli
push
jmp
sub
arpl
cmpsl
mov
out
addr16
mov
fistpll
fstp
aas
inc
je
pop
int
sbb
xchg
test
mov
sbb
jg
mov
out
orb
pop
xor
imul
sti
push
mov
pop
push
icebp
aam
ss
inc
add
fdivl
int3
repz
inc
push
outsl
cmp
mov
push
mov
push
jle
xlat
jae
test
leave
inc
in
leave
fstp
and
fcompl
pop
xchg
fwait
pop
jo
data16
dec
movsb
mov
and
dec
hlt
inc
mov
es
xchg
mov
ja
js
cmc
xor
scas
mov
cmc
add
pushl
add
lret
pop
leave
jge
cli
int3
push
mov
mov
mov
push
lcall
mov
stos
fisubs
ror
inc
dec
adc
lea
clc
adc
call
ljmp
mov
cli
adc
rcrb
push
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
jmp
gs
icebp
pop
ficompl
das
mov
pop
mov
xor
adc
pop
pushf
cmp
push
ret
jl
stos
mov
push
push
mov
jne
add
dec
and
arpl
mov
mov
push
icebp
push
or
pop
push
pop
jo
int3
push
inc
iret
test
gs
cltd
mov
xor
xlat
ret
cs
xchg
xchg
dec
dec
mov
and
pusha
xor
lods
jmp
lea
mov
aas
push
jnp
mov
es
insl
movd
lods
push
imul
mov
sub
fwait
dec
jl
adc
cmp
mov
dec
lret
inc
aam
jge
les
int
pop
pop
cmp
sbb
push
test
dec
jmp
inc
cli
lret
adc
cli
jge
mov
mov
imul
mov
sub
or
mov
pushf
faddl
xor
pop
movsb
mov
lcall
mov
pop
ss
mov
jle
out
mov
jae
mov
xorl
orb
add
jmp
dec
insb
mov
orl
jmp
sbb
fcmovnu
repz
pop
shrl
sub
out
add
sbb
push
xchg
fbld
icebp
mov
pop
mov
and
cld
lret
xchg
cli
mov
pop
shll
cmp
dec
push
ja
int
shlb
pop
rorl
adc
and
icebp
mov
ss
mov
cmp
fadds
nop
stos
add
pop
scas
loop
xchg
mov
mov
push
push
push
cli
and
movsb
dec
iret
pop
push
sbb
ficomps
inc
fisubs
fs
test
lret
inc
inc
xchg
and
dec
xchg
push
mov
movsl
inc
int3
addl
inc
xor
sbb
scas
pop
clc
pop
int3
bound
mov
sbb
add
and
mov
fs
and
in
out
icebp
enter
jmp
aad
inc
push
iret
mov
adc
imul
fnstenv
je
inc
out
dec
aad
out
and
testl
in
and
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
jmp
sbb
pop
loope
pop
pop
cmp
sub
sub
adc
movlps
ret
xchg
push
pop
shl
fnstcw
sbb
jno
push
fidivrs
or
jnp
fldenv
dec
jnp
sbb
inc
pop
mov
cs
push
mov
xchg
rcr
push
rorb
mov
dec
pop
ret
sub
jg
pop
cld
or
sbb
ret
popf
mov
mov
enter
xchg
insb
dec
and
lock
cltd
scas
xorb
mov
fnstenv
lahf
mov
mov
js
fdivrl
adcb
cmp
out
jg
xorb
js
in
rcrw
cwtl
sbbb
stc
les
mov
jns
inc
mov
push
or
and
cmp
fsubrl
push
cs
ja
scas
scas
mov
gs
pop
jb
jp
push
xchg
mov
sbb
subl
jo
xor
pop
dec
add
xchg
das
loopne
sahf
call
test
in
jge
flds
int
jnp
ljmp
ljmp
cli
fisubrs
push
and
aaa
mov
stos
ljmp
mov
sbb
pushf
pop
pushf
popa
xchg
push
inc
or
in
or
inc
cwtl
adc
push
pop
xor
cmp
jo
cmp
xor
stc
roll
inc
fisubl
inc
pop
xchg
mov
stos
jb
mov
gs
imul
gs
les
fmul
sub
add
adc
and
mov
add
push
mov
aaa
dec
into
repz
dec
jae
mov
aam
decb
scas
aaa
aaa
fnstenv
sbb
mov
cltd
dec
js
mov
sbb
dec
ffreep
add
je
or
xor
cmp
pop
pushf
pop
pop
and
sub
stos
sbb
adc
and
inc
scas
xchg
bound
shlb
cli
sub
loop
and
ss
and
push
jp
stos
mov
fists
mov
fucomp
dec
pop
mov
and
pusha
xor
shrl
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
lods
mov
lods
cmp
pop
rcrb
adc
adc
stos
pop
xor
push
clc
pop
gs
pop
divb
aam
cld
mov
outsb
pop
sub
cld
pop
repz
aam
dec
xchg
add
pop
movsl
bound
push
int
rcll
xorl
insl
push
pop
pop
mov
adc
subl
test
sbb
mov
or
or
andb
movsb
pop
sahf
in
push
lret
adc
pop
lret
jmp
sub
arpl
lret
in
mov
mov
rcl
std
mov
cmp
ret
and
add
mov
add
data16
inc
push
mov
iret
insb
add
and
es
cmp
outsl
pop
lds
xchg
cmp
out
xchg
test
or
pop
push
xchg
aaa
xor
stc
jnp
sbb
cmc
imull
frstor
xor
cmp
lock
std
sub
ret
iret
loope
repz
in
cmp
lret
scas
jg
out
xor
in
jbe
sar
mov
fiaddl
data16
mov
mov
data16
fdivl
dec
fidivl
loopne
jp
xchg
inc
gs
jp
cmpsb
dec
out
sahf
fnstenv
mov
mov
icebp
mov
pop
pop
out
fidivl
fdivs
inc
xor
icebp
jp
pop
in
mov
outsl
and
loope
dec
and
shrb
ret
mov
orb
into
sbb
xor
nop
mov
add
adc
push
xchg
and
bound
and
outsb
enter
mov
jno
cld
pop
dec
push
push
gs
mov
jl
xchg
lret
sbb
mov
xchg
out
test
in
hlt
jecxz
adc
ret
xchg
call
or
loope
xor
popf
js
scas
mov
shll
add
cld
leave
push
jl
loope
out
add
movsl
stos
pop
out
std
adc
ret
or
enter
in
roll
and
es
scas
sub
xchg
or
push
inc
push
outsb
push
lods
sub
dec
mov
cmp
stc
gs
mov
mov
ret
out
push
inc
fwait
cmc
xchg
xchg
sti
mov
inc
clc
mov
shlb
push
popa
or
cs
adc
mov
sbb
dec
fidivrs
xchg
jecxz
xchg
lea
lods
add
lahf
pop
xlat
mov
in
push
popf
les
pop
add
repz
rolb
in
cltd
xor
inc
test
push
imul
mov
pop
mov
push
stc
les
mov
arpl
xor
js
push
nop
inc
mov
dec
mov
mov
mov
pop
xlat
cli
rolb
sub
mov
leave
movsl
pop
mov
adc
jb
inc
and
xchg
imul
adc
int
std
or
jp
pop
cmp
jle
pop
jno
lea
xchg
iret
jecxz
repz
jge
in
adc
add
outsb
aaa
sbb
stc
jb
pushf
pop
pop
xchg
inc
popf
xchg
std
mov
adc
push
dec
mov
fldl2t
adc
push
push
pop
sub
mov
jl
cmp
add
in
dec
fdivs
push
das
mov
mov
je
xchg
inc
inc
in
adc
pop
lods
pusha
test
or
jle
add
inc
cld
hlt
xor
add
in
adcb
push
push
call
mov
mov
xor
jmp
fcomps
pop
sub
and
lahf
fidivrl
push
adc
adc
cs
or
mov
mov
sub
sarb
fdivrs
pop
jp
inc
lret
push
dec
add
cmp
loope
or
push
mov
aam
cwtl
jmp
mov
xor
gs
test
test
pop
outsb
dec
xchg
orl
jno
xor
std
leave
insl
inc
in
ja
popa
add
xor
push
dec
or
mov
pop
js
mov
mov
mov
pop
push
xorb
jmp
inc
inc
rcrl
mov
and
stc
xchg
or
xchg
dec
dec
cs
jge
test
pmulhw
shrb
sbb
cli
in
sub
sbb
adc
mov
scas
sbb
mov
pop
pushf
out
xchg
or
pop
divl
add
popa
cmpsl
push
mov
stos
mov
pop
icebp
xchg
vphsubbw
insl
push
sbb
mov
mov
jl
daa
xor
repz
lsl
inc
imul
imul
cld
or
cs
ds
popf
cld
int3
cmp
fwait
sub
mov
dec
xchg
call
sbb
mov
mov
dec
mov
sub
movsb
incb
xchg
pusha
imul
sub
divl
clc
fdivp
repnz
and
cli
mov
sahf
xor
fcomip
and
dec
fst
ret
inc
dec
pop
outsb
ret
pop
mov
sahf
jne
xchg
popf
roll
lret
fwait
xchg
shrb
enter
lret
jbe
pop
add
mov
mov
mov
fwait
dec
or
mov
rcrl
dec
pushf
pop
sarl
add
jb
pushf
and
push
jne
add
xchg
dec
fldcw
xor
or
test
push
enter
subb
jl
subl
inc
inc
arpl
xor
cmp
lock
jnp
jle
test
sub
xlat
hlt
mov
xor
sti
mov
inc
shl
dec
test
mov
movsl
cld
or
cs
dec
inc
lret
out
pop
hlt
jo
sti
cmp
into
jne
sub
or
popa
inc
sbb
fdivp
neg
imul
xchg
mov
jae
push
leave
xchg
mov
push
push
sub
inc
jbe
mov
shll
out
fwait
adc
clc
or
notl
imul
mov
pop
push
arpl
test
out
mov
fstps
out
cmpxchg
in
addr16
int3
pop
push
out
xchg
stos
sub
mov
pop
xchg
pop
sub
iret
push
or
je
sbb
fsub
jne
pusha
inc
add
incl
addr16
xchg
sbb
sub
or
cs
dec
pop
adc
pop
mov
xchg
and
pop
pushf
loope
clc
decl
push
ljmp
add
fisubrs
and
add
rcrl
notb
pop
aam
mov
jns
pop
jae
mov
mov
or
movsb
sbb
scas
insl
mov
adc
add
push
loope
xchg
outsl
daa
enter
int
pop
jno
int
xchg
push
clc
mov
test
push
or
mov
xor
mov
xor
jmp
sarl
sbb
jbe
stos
and
pusha
js
inc
adc
push
adc
adc
add
fistps
cltd
repz
ror
shlb
f2xm1
jecxz
in
cmpb
jbe
ja
pushf
push
fisubs
pusha
jmp
adc
je
xchg
dec
jle
shrb
das
icebp
outsb
scas
cs
in
cmp
jle
adcl
into
fsts
sarl
dec
subb
sti
cmp
inc
dec
pushf
ret
pusha
push
pop
jae
cltd
cmp
icebp
aad
add
sbb
push
push
and
pop
leave
or
push
add
cltd
sub
stos
sahf
out
and
pusha
dec
cltd
scas
pusha
sti
imul
outsb
mov
shrl
mov
fldl2e
cmp
jp
loopne
lea
xchg
pop
fidivrl
push
inc
or
imul
fsubs
ret
add
push
dec
xchg
daa
inc
adcb
ja
int
jno
jl
jge
sub
sub
pop
and
mov
and
pop
push
mov
cwtl
in
faddl
sub
sub
inc
aad
rcrl
dec
jecxz
sub
push
dec
outsw
repz
pushf
xchg
dec
sbb
xor
test
cmp
cmp
sub
xchg
lret
xchg
bnd
data16
fbld
and
or
shrl
stos
ds
lahf
fstpl
inc
cmp
cs
in
loop
push
mov
rcrl
add
dec
popf
pop
pop
or
outsb
jp
pushf
mov
sbb
rcrl
cmp
cmp
shlb
fwait
sbb
dec
dec
dec
insb
sub
add
cmp
popf
and
rorb
or
mov
je
xchg
adc
mov
mov
rolb
cltd
jle
scas
movsl
pusha
repz
sahf
out
pop
in
inc
call
xchg
adc
jae
leave
ja
and
fnstsw
jmp
lret
aam
shrb
jo
lds
sti
pop
lock
imul
push
cli
and
mov
xor
mov
push
jg
lret
sbb
xchg
insl
pop
fnstcw
jbe
repz
cwtl
and
lahf
dec
add
inc
jne
nop
cmp
mov
or
add
adc
mov
aaa
pop
cmp
aad
test
dec
pusha
lahf
or
stos
imul
xchg
leave
or
lret
aad
mov
or
inc
xchg
shlb
outsb
aad
mov
and
icebp
in
stc
add
ficompl
shll
mov
dec
jno
xor
fcomi
jecxz
add
fists
and
pop
rcr
icebp
das
cmpsl
inc
pop
jg
in
xor
and
xchg
mov
mov
testb
push
out
out
add
aam
cs
and
cmp
stos
loop
adc
mov
lea
and
mov
seto
pop
or
dec
jne
imul
stos
cltd
ficompl
daa
xor
xchg
jbe
push
fdivrp
in
icebp
out
fcmovnbe
bound
dec
das
xchg
movsl
popf
mov
aam
add
pop
mov
mov
inc
mov
jne
sub
int
sbb
std
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
jmp
mov
imul
test
stos
out
and
cmp
adc
adc
adc
in
mov
mov
sti
fimuls
mov
lcall
dec
cmc
std
scas
mov
sbb
fs
add
cs
ret
call
int
popa
movsl
lahf
pop
je
sbb
push
lock
xor
cmp
aam
roll
push
insb
or
inc
inc
addl
and
xchg
leave
pop
dec
mov
loopne
mov
pusha
test
xchg
xchg
and
adc
negl
mov
push
pop
test
shll
repz
test
sti
loop
push
cs
popa
aam
mov
mov
sbb
mov
sbbb
pushf
movsl
dec
push
mov
push
repz
mov
leave
dec
jae
mov
or
pop
out
rol
int
cs
and
sbb
push
add
or
icebp
fsubs
add
stos
negb
mov
fsubrl
mov
jae
adc
test
in
repnz
es
test
dec
cltd
xchg
adc
pop
jb
jnp
call
mov
adc
enter
xchg
aas
arpl
inc
pushl
jmp
xor
sbb
sahf
rcll
test
adc
adc
sub
cmp
cmp
mov
xor
push
push
dec
xlat
mov
ds
ja
stos
into
sahf
pop
xchg
push
xchg
sarl
ds
mov
cwtl
jg
popf
sbb
and
mov
cmc
add
gs
push
xchg
aam
out
stc
xchg
addr16
imul
testl
div
in
loopne
xchg
add
and
xchg
push
ja
mov
jb
out
sbb
xor
jl
push
mov
out
or
and
dec
cmpsl
mov
mov
pop
jno
fcmove
xchg
pop
in
ss
xlat
sahf
movsl
mov
mov
sub
mov
iret
xor
pop
out
sub
mov
in
lcall
ds
jne
test
pop
sbb
data16
xchg
lahf
pop
cli
mov
xor
xor
lahf
cs
mov
out
xchg
inc
lcall
arpl
and
in
pop
das
jbe
xchg
out
mov
test
jecxz
cli
push
lock
daa
push
push
leave
lcall
sti
outsb
adc
push
call
cmc
jmp
push
jns
push
loop
xchg
dec
mov
stos
adc
test
out
pop
mov
jno
or
and
xor
shrb
and
loope
adc
or
jp
cltd
dec
jg
loopne
pause
lea
insl
mov
or
or
sub
mov
sbb
ljmp
or
jnp
pop
dec
mov
cmp
shrb
or
or
das
push
addr16
scas
clc
inc
cmp
or
cmpb
cmp
or
sbb
test
adc
sub
push
arpl
ds
jg
loop
enter
fisubl
testl
inc
hlt
in
out
push
inc
push
mov
xchg
test
fisttpl
into
jmp
mov
adc
icebp
adc
push
mov
ffreep
je
jmp
insb
ror
shlb
insb
daa
ret
mov
shr
add
adc
adc
adc
xchg
or
cld
push
mov
sbb
rorb
loop
aaa
xchg
push
adc
jmp
mov
dec
mov
daa
lahf
pop
add
ja
jl
inc
adc
call
xchg
xchg
pop
test
sub
jbe
sub
call
xor
xlat
jg
jmp
les
mov
imul
xchg
mov
test
push
fistpl
push
xchg
cwtl
std
repnz
stc
loope
hlt
adcb
mov
aaa
mov
pop
sub
jge
sti
shl
lahf
mov
idivl
shl
adc
popa
ljmp
out
xchg
ss
sub
jmp
jb
xchg
jnp
or
dec
imul
sub
adc
outsl
sti
je
dec
dec
into
xor
ficompl
and
xchg
sbb
pop
sahf
stc
xor
mov
jl
add
inc
call
push
lods
nop
les
out
xchg
lods
lock
jp
fcoms
cmp
sarl
mov
dec
dec
push
popf
sub
ja
jmp
ret
and
enter
or
ljmp
fsubr
or
std
shlb
jmp
fs
inc
mov
mov
fwait
xorb
icebp
imul
das
out
push
mov
aad
jns
cmp
scas
jo
pop
add
aaa
gs
lahf
fwait
stc
stc
mov
cltd
push
daa
add
out
or
add
jb
pop
cmp
mov
std
pop
sub
xabort
cs
es
or
popf
or
repz
mov
out
sti
push
orl
pushw
adc
fsub
data16
sarl
or
push
jge
mov
loop
cmpsb
push
dec
int
lret
fnstsw
and
cli
lods
inc
insl
inc
mov
or
ficomps
adc
xor
outsb
push
movsl
daa
push
mov
shll
push
cltd
mov
loopne
fcomps
leave
xor
dec
in
pop
fucomi
aad
or
mov
xchg
data16
test
or
movsb
adc
xchg
mov
ret
push
mov
repnz
fucomi
push
jecxz
leave
mov
popf
xor
and
fldl
sub
cmc
in
xchg
pop
add
das
mov
mov
or
jp
and
sahf
and
lret
push
sub
push
addr16
sbb
pop
adc
mov
inc
adc
push
gs
mov
xchg
test
xor
enter
inc
mov
dec
push
cmpsb
clc
cltd
inc
sbb
iret
mov
mov
repnz
test
punpckhwd
jb
xor
cltd
pushf
or
sub
clc
test
stos
dec
adc
fcoml
xchg
and
inc
dec
jmp
fscale
and
mov
nop
mov
sbb
fmuls
cmpb
xor
sub
and
mov
pop
das
ret
push
iret
pop
xchg
pop
jo
mov
shrl
xchg
or
mov
inc
xchg
add
cld
pop
addr16
pop
repz
pop
movsb
bound
or
jnp
lods
scas
mov
mov
mov
mov
add
adc
or
mov
jmp
les
lds
pop
inc
daa
and
mov
out
adc
push
adc
adc
cmp
cmp
mov
fldenv
fadds
pop
popf
in
lock
mov
mov
sub
mov
cmpsb
lods
sub
cltd
cltd
dec
adc
test
jmp
nop
xlat
arpl
popa
cmp
cmpsl
push
push
fsts
sahf
mov
out
enterw
cmp
and
add
in
loopne
or
movsl
aad
test
movsb
mov
push
adc
iret
inc
lock
ljmp
jbe
test
sub
aas
cmp
xor
push
ja
mov
test
or
or
insl
dec
cmpsl
add
add
daa
leave
or
and
insb
loopw
add
inc
xchg
aam
in
jg
xor
stc
sbb
call
aam
push
cmp
hlt
mov
stc
sub
dec
mov
push
mov
xchg
ficompl
imul
adc
movsl
add
or
fnstsw
xor
out
jge
mov
jp
mov
or
jp
scas
lret
adc
pop
jno
out
xor
push
cmp
xor
int3
and
in
pop
inc
lods
add
pop
out
fs
test
or
xchg
jno
push
fadds
ss
es
aaa
out
pop
jbe
inc
jmp
cmp
movsb
lcall
xorb
rcrb
ret
cld
imul
dec
negl
call
cmp
inc
js
rcrb
pop
lcall
test
js
sub
popf
add
mov
je
fmuls
or
xchg
xor
and
jne
ret
push
call
pop
inc
mov
aaa
dec
les
into
pop
mov
aas
fstps
aas
into
sub
popa
sti
popf
dec
mov
enter
mov
out
fs
inc
push
add
js
sbb
push
jne
lcall
mov
out
insl
out
mov
xchg
adc
std
push
pushf
jb
xlat
xchg
sbb
fdivs
addb
pop
hlt
fiaddl
fnsave
add
jg
inc
dec
mov
mov
mov
jge
jbe
es
bound
call
lock
xor
xchg
lret
in
cmp
sbb
xchg
test
xor
sbb
les
and
fstpt
adc
add
push
sub
arpl
dec
enter
arpl
jne
adc
sbb
ret
sub
and
xor
ss
ss
cmp
jae
push
outsl
sub
insl
mov
imul
movlps
sub
or
movsl
scas
pop
or
dec
sub
loop
ret
push
arpl
in
push
pop
sar
xchg
in
enter
jle
popa
xor
shlb
iret
cld
call
sbb
push
inc
popf
or
int3
mov
decb
out
lods
addr16
lods
out
insl
or
fbstp
cmp
ss
mov
push
add
loopw
mov
xchg
mov
popa
jb
andl
add
push
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
jmp
push
add
aaa
mov
inc
sub
push
in
fisubl
adc
push
adc
adc
jmp
xorl
cltd
pop
push
push
loop
inc
lea
pop
jns
call
rcrl
aaa
and
xchg
mov
hlt
mov
fcomip
cmp
insb
and
sub
addl
dec
int
test
mov
adc
lock
decl
or
iret
out
movb
mov
icebp
xor
mov
inc
mov
fcmovb
shlb
shlb
rcl
mov
ds
mov
cmp
and
mov
jb
cli
pushf
in
test
mov
cs
popf
imull
cmc
test
jmp
inc
or
lahf
fistl
lods
add
add
fs
dec
or
mov
aad
sub
shr
jp
mov
divl
aaa
jp
dec
jp
jl
loop
push
add
and
mov
jo
in
mov
push
pop
nop
and
sbb
sbbb
mov
lahf
push
mov
cmc
xchg
pop
dec
pop
insl
pop
cmpsl
pop
adc
test
jmp
inc
and
fdivl
cmp
ret
cmpb
jb
mov
jge
and
neg
dec
les
sub
cmp
cli
repz
imul
arpl
ret
jbe
outsb
fimuls
push
jns
pop
leave
xlat
nop
mov
mov
fdivrs
fadd
mov
stos
sub
mov
aas
xchg
add
jp
or
or
ss
dec
gs
cmp
push
hlt
mov
push
mov
mov
and
push
pop
jnp
adc
inc
or
or
clc
arpl
mov
jmp
inc
adc
je
data16
es
mov
out
adc
gs
mov
mov
iret
push
inc
mov
xor
int
jg
cmc
imul
push
xchg
leave
pop
in
cmpsl
xor
aas
pop
inc
cmp
divl
mov
jmp
dec
pop
dec
rolb
adc
cmp
xchg
pop
cli
mov
fs
or
mov
xchg
ret
and
or
jnp
mov
add
test
jno
mov
jge
cmp
sahf
xchg
push
sbb
xchg
and
test
cs
mov
in
je
shrb
sbb
jo
sahf
sbb
cli
scas
jo
dec
mov
adc
roll
cld
sbb
aam
shlb
std
clc
adc
idivl
ret
lock
add
adc
mov
fst
mov
sbb
xor
mov
xchg
out
scas
popa
push
add
xor
dec
aas
and
mov
mov
ret
fidivs
mov
lret
jmp
sub
cltd
push
cmp
sub
and
ficoml
mov
lea
fcmove
ja
inc
push
mov
addr16
pop
stos
out
xchg
cwtl
cmp
leave
js
popa
mov
adc
push
std
cmc
inc
add
cs
fistpl
and
stos
std
shl
mov
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
jmp
and
pop
sbb
push
repz
mov
decb
adc
cmpsl
pop
aaa
ljmp
jnp
iret
test
pop
xor
push
ficoms
lea
pushf
aaa
push
sbb
pop
aaa
inc
in
sub
ret
and
lods
sub
adc
out
push
push
es
dec
xor
cwtl
pop
push
jo
cmc
in
pop
jl
mov
loop
std
fwait
inc
push
jmp
lock
sub
mov
mov
fwait
icebp
fs
ficoms
sbb
cmc
mov
or
ds
push
push
cmp
arpl
add
orb
jo
lcall
xchg
xor
fbld
fwait
pop
mov
jp
in
push
jns
fisubl
inc
mov
mov
popf
pushf
and
outsl
adc
rclb
cli
mov
and
jecxz
xor
insb
jge
aam
pop
pop
aaa
mov
popf
inc
bound
fmull
gs
xchg
sbbl
movsb
es
mov
jmp
pop
jl
mov
and
xchg
xchg
and
xchg
or
loope
push
sbb
adc
pop
and
ret
pop
fildl
jno
fs
jno
cmp
bound
jbe
movsl
cmp
sahf
jnp
outsl
ja
dec
lock
cs
fdivrl
xlat
lock
lret
sub
cmpsl
mov
fisubrl
lret
lods
popf
pop
sbb
ljmp
cmc
jo
mov
sti
mov
push
pusha
jne
dec
add
je
lahf
in
shrb
jecxz
xchg
pop
add
push
aad
mov
gs
out
repnz
add
adc
adc
xor
mov
or
test
mov
pushf
push
xchg
push
push
jns
scas
and
xchg
test
push
stc
mov
pop
call
lods
jne
push
cmp
xor
test
sub
inc
ret
setnp
ljmp
mov
xor
es
gs
and
mov
jb
loope
jge
ljmp
mov
jmp
push
out
out
js
or
adc
mov
cmc
push
sub
sar
loopne
scas
into
mov
mov
mov
pop
lret
repz
jp
adc
clc
xchg
xchg
jbe
out
push
out
arpl
push
mov
cmp
inc
and
mov
outsb
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
jmp
pop
rolb
sbb
sbb
popf
fs
mov
adc
decb
adc
scas
les
sbb
mov
sbb
cs
add
std
xchg
cltd
and
pop
sub
mov
enter
sub
stos
pop
cmp
jmp
lcall
mov
cmp
scas
outsl
dec
jae
and
sbb
es
xor
rol
mov
pop
repnz
pop
mov
xor
or
stc
and
mov
pusha
jns
push
sub
push
jg
mov
sbb
sbb
leave
adc
insb
add
repz
xor
lret
sbb
mov
cli
fmull
roll
and
hlt
xchg
std
nop
subl
mov
mov
je
xchg
aaa
cwtl
jnp
pop
push
or
inc
xchg
jl
cmpsb
or
dec
push
mov
int
inc
sub
inc
aaa
mov
pop
sahf
movsl
loopne
dec
jo
mov
xor
loope
test
cmp
adcl
movl
or
inc
push
lods
push
insb
xor
xor
ret
test
push
xor
scas
icebp
cmp
push
sbb
xchg
xchg
jbe
adc
add
imul
mov
cmp
repnz
xor
loopne
out
rcrb
mov
inc
xchg
in
cli
pop
ljmp
in
sbb
pop
xchg
jae
mov
push
imul
sbb
mov
mov
divb
aaa
mov
leave
adc
int
enter
shl
and
mov
xchg
mov
xchg
ss
pop
dec
dec
out
pop
jmp
jbe
mov
addr16
std
dec
xor
lcall
or
xchg
cmp
out
jbe
add
cmp
jge
jle
mov
in
xchg
push
bound
or
aad
mov
rcrb
and
lcall
inc
cmp
lret
popf
cwtl
lods
pop
cmp
lretw
out
repnz
inc
pop
xor
mov
sub
mov
sub
out
loopne
orb
pusha
repnz
loop
js
mov
mov
push
lahf
popa
mov
cmp
in
mov
insl
test
adc
mov
mov
inc
sahf
mov
cmpsl
rorb
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
jmp
repz
push
cmpb
adc
int
mov
decb
adc
scas
add
lock
int3
pop
arpl
jbe
inc
pusha
ret
out
pop
pop
mov
scas
les
sub
dec
call
push
jns
mov
push
xor
not
push
sbb
inc
jg
mov
les
jb
scas
in
test
pop
outsb
lock
cmp
push
and
adc
sub
or
addr16
push
xor
cs
jmp
test
pop
idivb
sbb
push
sub
stos
pushf
xchg
movsb
jecxz
mov
pop
je
cpuid
ds
imul
int
xchg
test
pushl
pop
pop
xchg
cwtl
cmp
adc
mov
or
cmpsl
clc
inc
jl
xor
dec
jne
movsl
jne
iret
test
mov
out
xor
pop
or
sbb
push
or
outsl
shll
mov
sub
icebp
xorb
pop
pop
or
sbb
adc
enter
mov
outsb
test
hlt
mov
subl
cmpl
push
mov
sbb
mov
setg
outsb
push
pop
and
jns
clc
mov
cmp
mulb
repz
inc
mov
adc
or
outsl
xor
jns
sbb
dec
mov
mov
inc
les
mov
shl
mov
aaa
mov
push
xchg
andb
dec
cli
lret
int
cs
iret
jge
add
mov
mov
jbe
out
xchg
or
arpl
add
push
sub
xchg
xchg
inc
cwtl
int
adc
cmpsb
sbb
movsl
mov
mov
sti
xchg
add
aaa
xchg
nop
imul
sarb
inc
fwait
dec
mov
into
mov
mov
push
or
leave
add
xchg
xor
aad
push
aas
es
out
mov
mov
ljmp
out
and
mov
ret
int3
or
push
lock
in
inc
jecxz
jg
shll
xor
cmp
lods
push
add
push
mov
mov
adc
popf
jne
int
pop
outsb
mov
mov
jno
push
lret
aam
clc
inc
pop
std
xor
cli
mov
push
cmp
jecxz
ljmp
xor
in
sbb
push
lret
dec
jne
mov
shl
add
mov
push
fcomps
pop
pop
pusha
push
imul
rorb
dec
add
sbb
mov
sub
mov
sbb
add
jmp
mov
bound
popa
adc
mov
lcall
movlps
pusha
int3
add
out
fimull
filds
call
in
cmpsb
loope
push
ja
adc
adc
clc
xorl
lods
jo
rcr
inc
jo
cmp
lret
ficompl
mov
inc
pop
sahf
shrl
leave
leave
fmull
es
add
xchg
mov
aad
push
out
outsb
jne
mov
xor
push
lahf
sti
or
rclb
push
lock
pop
repz
loopne
cmc
pop
inc
testl
sub
pusha
pop
and
in
out
inc
jp
outsl
arpl
mov
xor
pop
pop
shrl
sbbl
inc
adc
mov
xor
out
stc
sbb
push
jmp
sahf
push
jl
pushf
mov
fs
cs
ljmp
aam
pop
cmpsl
lock
sbb
mov
inc
mov
xor
imul
loopne
or
inc
adc
inc
mov
enter
sti
movsb
fcmovnu
mov
clc
out
incb
insl
sbb
mov
cltd
xchg
mov
mov
adcl
cmpsl
shlb
mov
mov
push
adc
test
stos
push
and
push
loopne
adc
jp
sbb
ffreep
jb
xlat
cwtl
call
cmp
pusha
and
imul
jo
mov
ss
cmp
inc
xchg
ret
mov
pop
cmc
xchg
in
and
faddl
lahf
stos
rolb
xlat
pop
loope
xor
inc
xchg
adc
aaa
addr16
add
test
or
sbb
popa
xchg
xchg
xchg
mov
mov
fdecstp
xor
jp
loop
fucomip
out
add
mov
dec
xchg
movsb
lahf
dec
je
jle
pop
adc
and
loope
frstor
clc
xchg
rolb
and
and
xchg
jb
ror
pop
sub
sbbl
mov
rcll
mov
and
or
subb
add
fnstenv
mov
out
jns
mov
cltd
push
xor
xor
pop
push
out
mov
sbb
ret
push
push
lcall
stos
sub
push
ss
dec
ror
mov
inc
pop
in
sbb
nop
and
repnz
inc
or
push
negb
cwtl
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
jmp
jp
push
sub
pop
cmp
mov
adc
decb
adc
adc
test
sbb
ja
int3
adc
data16
inc
xor
and
jmp
gs
mov
ljmp
pop
fdivs
push
jbe
ret
xchg
add
pop
daa
arpl
jb
xchg
jp
xchg
push
dec
insb
dec
rcll
outsl
out
xchg
inc
in
mov
jle
cltd
xchg
jl
fsubl
out
jbe
in
rclb
fisttps
test
ss
imul
mov
jmp
pop
or
test
xchg
leave
cli
sub
test
cmp
int3
and
pop
adc
enter
pop
rcll
idivl
jae
lret
dec
mov
xor
mov
xor
mov
pop
test
xchg
fldenv
jge
test
sbb
adc
lods
cltd
scas
shll
push
dec
add
divb
cli
push
popa
inc
cmp
sarl
ret
out
mov
push
mov
xchg
fnstcw
aas
jo
outsb
aas
insl
pop
sahf
icebp
loopne
fwait
enter
test
or
sar
sbb
xchg
sub
imull
cld
mov
inc
add
shr
add
lcall
add
shl
mov
mov
push
pop
arpl
imulb
xlat
and
in
and
mov
xor
testb
sub
fs
pop
sahf
sub
rclb
push
mov
jl
or
sarb
inc
cmc
cmp
lret
shlb
mov
fldenv
mov
push
add
and
mov
sbb
sbb
cmp
sbb
and
repnz
adc
cmpsb
mov
sbb
xor
sub
push
cmc
leave
into
ret
dec
jns
push
mov
sub
mov
sarl
cmc
inc
sbb
and
pop
sar
test
shlb
mov
fs
lret
sub
call
jo
ss
cmpsl
shll
inc
popf
jge
rorb
jae
sti
outsb
jno
push
mov
xchg
rcl
cli
jb
repz
mov
and
jns
xchg
sahf
mov
imul
jbe
pop
loop
xor
lahf
cwtl
sbb
pop
pop
sub
and
sbb
fld
cmc
inc
mov
sub
mov
or
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
jmp
mov
call
sub
push
mov
push
adc
rorl
adc
das
orb
outsb
or
and
or
xlat
mov
add
adc
mov
jmp
inc
jno
push
fcomi
and
mov
lahf
sbb
inc
mov
jae
jp
les
mov
dec
inc
xchg
mov
mov
daa
test
mov
in
push
fwait
imulb
sbb
jmp
stos
aam
pusha
popf
out
push
mov
mov
inc
and
sbb
and
rorb
ss
andb
rcrl
addb
fimull
es
rorb
jbe
dec
mov
pop
mov
inc
fiadds
lcall
fdivl
cmpsb
jmp
inc
dec
rcrl
or
ja
mov
iret
xchg
mov
outsb
mov
divl
sbb
pusha
mov
lret
std
lahf
cmp
enter
mov
imul
out
mov
stos
sbb
ss
dec
repnz
and
nop
inc
imul
movsb
jecxz
jae
xchg
imul
out
add
add
jns
dec
mov
pop
call
xor
rorb
sub
bound
xor
push
call
aas
mov
mov
loop
xor
push
mov
imul
cmp
add
jne
movsb
cwtl
inc
fidivrs
mov
ds
insb
inc
push
xorb
dec
dec
loope
out
ficomps
inc
lock
daa
add
pushf
int3
pop
mov
adc
into
stos
push
mov
mov
roll
addb
and
and
jnp
jl
xchg
jp
ss
daa
out
dec
lahf
sub
xchg
mov
leave
pop
fstpt
or
and
arpl
inc
aaa
mov
loope
sbb
mov
sub
imul
fs
scas
jmp
faddl
push
pop
fwait
mov
fsubs
xor
push
fdivrs
shrl
xchg
cli
testb
shlb
je
mov
cmp
hlt
divb
xor
ds
mov
je
adc
pop
lds
pusha
jno
leave
mov
rol
sbb
cmpb
mov
sub
and
xchg
dec
dec
add
lret
fdivp
mov
jecxz
aas
lahf
pop
ja
je
pop
stos
test
cli
mov
add
mov
pop
pop
sbb
repz
cmpsl
and
xchg
out
pop
test
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
jmp
jl
and
pop
popa
loopne
stos
inc
rcll
add
movlps
mov
and
fistpl
cld
rol
dec
scas
xor
adc
mov
mov
mov
sub
aas
ffree
sub
or
ror
mov
test
in
push
cmc
stos
xor
cmp
lahf
cmp
pop
lcall
jne,pn
cwtl
jl
pop
mov
and
mov
jb
or
outsb
push
lds
xchg
decb
jne
sti
jbe
in
outsl
icebp
mov
in
push
pop
xlat
test
cwtl
jb
sbb
aam
cmpsb
fisttpll
lcall
pop
push
loop
mov
add
push
scas
or
stos
sub
or
sar
jl
clc
scas
jnp
cwtl
popf
dec
stos
and
aad
rclb
adc
imul
sbb
cltd
push
ret
out
mov
inc
jmp
scas
mov
lahf
cmp
adc
inc
int3
cmp
loop
subl
jge
test
xlat
cld
jne
repz
mov
xor
loopne
cmpsl
inc
jns
xchg
int
mov
popa
mov
cwtl
inc
pop
mov
fwait
out
mov
mov
je
add
push
clc
movsb
dec
pop
pop
test
bound
iret
fcomip
jb
decl
mov
sbbl
mov
popf
xlat
xlat
bound
test
jmp
das
jno
inc
int3
das
jge
fmuls
pop
pop
imul
sbb
ds
loope
hlt
pop
push
xchg
xor
cmp
ss
insb
push
scas
sahf
lods
jp
push
push
cmp
imul
and
cwtl
enter
xor
dec
sbb
sub
repz
and
inc
pop
inc
xchg
jae
xchg
mov
cmp
xor
rol
into
mov
jb
inc
inc
jns
jbe
pop
dec
push
adc
cwtl
jbe
inc
sub
cmp
mov
jbe
push
xchg
rcrb
pop
lea
adc
sbb
xor
ss
jbe
add
jecxz
xor
movsb
pop
cmp
or
scas
add
aam
cwtl
iret
nop
setae
lret
pop
sahf
lods
jmp
add
gs
mov
aam
and
jp
lods
pop
cmp
pop
sbb
mov
in
or
sub
int3
ja
nop
mov
mov
in
insl
aas
shrb
in
xor
shrb
andl
outsl
stos
or
add
push
loop
mov
mov
ficompl
mov
aam
inc
jp
push
add
xchg
jp
ficomps
int
pop
cltd
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
jmp
mov
loop
lcall
stos
xchg
push
or
popa
movlps
lock
ljmp
mov
mov
mov
mov
push
add
mov
test
jmp
adc
xchg
cmpsl
push
or
xchg
nop
and
dec
insl
push
push
bnd
nop
test
mov
fiaddl
out
ja
sbb
imul
mov
xchg
xchg
dec
aam
jno
fisubrl
lahf
add
mov
push
inc
stos
fildl
push
mov
mov
subl
test
les
cmpsl
inc
adc
lock
scas
fsubrl
stos
sub
js
mov
sub
push
test
dec
lret
push
shrl
iret
pop
xor
ljmp
xor
roll
fdivl
and
out
push
mov
repnz
sbb
cld
jmp
mov
or
jno
jge
fstps
pop
scas
push
lods
scas
or
enter
loop
lcall
jnp
adc
push
xchg
or
sahf
add
mov
loope
xlat
jno
lds
paddsw
dec
and
aam
shll
cltd
add
push
push
ficomps
into
pop
inc
or
inc
cmp
cmpsl
lahf
xchg
out
outsl
shll
add
shrb
imul
jge
sbb
fildll
xor
lock
inc
lock
adc
fs
pop
pop
pop
scas
mov
inc
pop
mov
xor
pop
xchg
jbe
enter
aad
sub
movsl
nop
mov
pop
jge
push
pop
mov
mov
or
mov
popf
or
and
aam
cwtl
idivl
rcrl
xor
lcall
insl
aad
jae
adc
mov
inc
pusha
dec
fstpt
out
push
add
push
xchg
insl
xchg
xor
mov
jne
sbb
ds
sbb
mov
insb
in
pop
rclb
fs
xchg
sub
in
packssdw
push
aad
mov
lahf
and
push
lods
pop
es
mov
mov
jns
mov
cld
cli
xchg
add
flds
out
or
aam
std
pop
sti
adc
test
mov
adc
js
flds
jne
and
repnz
mov
dec
add
mov
and
mov
xchg
js
xor
lods
faddp
mov
cmp
pushf
dec
movb
push
test
call
mov
xor
sub
div
mov
mov
or
xor
mov
jmp
sti
je,pn
sub
stos
push
cmp
js
notb
adc
adc
fidivrl
mov
loopne
dec
lret
push
call
shlb
negb
stos
inc
pop
pop
or
cmp
mov
push
insb
cmpsl
std
push
outsb
inc
or
ljmp
sub
push
lahf
and
test
in
in
lds
test
pushf
pop
clc
shlb
subb
sub
dec
add
setb
sub
mov
loope
stos
push
mov
in
lret
jle
in
gs
add
pop
jle
add
add
sub
mov
stc
cmpsb
mov
mov
and
xlat
push
sbb
sahf
xor
jl
jge
lods
std
pusha
in
sub
sub
cltd
and
arpl
leave
lock
aaa
fiaddl
xchg
adc
das
xor
loopne
or
xchg
push
xchg
je
mov
cmpsb
mov
lds
cmp
sarb
sbb
push
jno
xor
pop
in
clc
hlt
push
imulb
cmpsl
ss
mov
stc
out
inc
jle
outsb
addb
pusha
cs
decb
mov
inc
stos
pop
out
mov
sbb
dec
sub
push
and
cmp
mov
adc
rorl
popf
or
pop
mov
xor
inc
icebp
clc
cltd
inc
dec
mov
push
imul
sub
xor
push
pop
mov
push
enter
and
inc
sbb
ret
es
lods
cld
fnsave
xchg
jno
and
data16
movsl
das
xor
bnd
lret
jl
cs
and
clc
lahf
dec
bnd
adc
scas
sub
jp
push
mov
in
aaa
fwait
in
rorb
pop
fdivs
int
and
cwtl
xor
not
sub
or
in
es
pop
cmp
repnz
in
jno
push
iret
cmpsb
rolb
add
and
in
stos
adc
or
scas
xchg
mov
push
cmp
add
cmp
push
or
aad
pop
add
fldcw
push
fcoml
aas
xor
ljmp
inc
ret
push
aam
aaa
fldt
in
xlat
jae
gs
fcmovne
jmp
jb
xchg
icebp
or
cld
push
leave
adc
push
mov
cmp
int3
mov
ret
clc
push
fdivrl
aas
cmp
sbb
in
pop
xchg
pop
pop
dec
and
inc
xor
xor
in
ljmp
lret
addr16
xchg
ret
enter
jmp
repnz
decb
jle
fdivs
stos
mov
int
ds
in
pop
out
mov
lahf
and
xchg
es
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
jmp
xchg
and
jp
sbb
lods
pop
xchg
pop
mov
popa
movlps
sub
cmp
inc
push
pusha
out
dec
add
mov
mov
ja
xchg
cs
shll
xor
jbe
inc
in
mov
xchg
cwtl
adc
lds
repnz
and
insb
pop
sbb
lock
stc
mov
aad
data16
add
imul
cli
mov
into
popa
je
outsl
mov
xlat
inc
push
xor
mov
push
aam
inc
stos
out
mov
addr16
fsts
xlat
cli
repz
add
out
sahf
es
xchg
dec
insb
sbb
cld
call
push
pop
in
jmp
push
subl
xchg
jo
cmp
push
sti
ret
outsl
adcl
dec
inc
pop
out
push
push
sub
iret
ret
mov
cltd
popa
data16
inc
mov
incb
jp
mov
push
or
cli
sbb
fcmovb
cmp
daa
sub
adc
add
loope
dec
cmp
popa
nop
xor
dec
aad
lret
add
in
cmp
in
into
pop
jno
jp
fistps
dec
jne
fidivrs
std
cmpsl
push
xchg
sub
idivb
insb
push
in
fwait
pop
iret
add
push
in
cmpsl
shll
push
les
iret
sti
inc
stos
jl
mov
sub
scas
xchg
inc
inc
popa
ja
addr16
jbe
and
out
pushf
xor
das
cmp
shrl
rol
cltd
mov
add
fwait
jns
out
ret
out
dec
jge
mov
fstl
arpl
xchg
mov
push
icebp
sub
fbstp
mov
call
aaa
jns
js
sarl
testb
sbb
rclb
cwtl
pop
aaa
fs
outsb
sbbb
dec
xchg
clc
arpl
inc
and
cmpsb
cs
mov
and
imul
in
and
xlat
dec
jo
outsl
cmp
inc
pusha
and
mulb
and
push
cmp
out
stc
lds
out
push
mov
mov
xchg
xorb
fisubrl
jp
cmpsb
jne
fsubrs
sbb
jb
gs
cmp
gs
stos
cmpsb
push
aad
mov
pop
arpl
mov
je
cmp
sub
test
ret
dec
dec
adc
mov
mov
mov
cmpb
mov
scas
mov
push
insl
cmpsl
fsub
pusha
add
adc
or
mov
icebp
sar
ficomps
mov
add
pop
adc
into
test
sub
shlb
push
aad
jle
popf
leave
and
mov
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
push
addl
push
mov
or
mov
push
mov
sub
mov
shrd
cmpl
mov
mov
mov
jmp
movl
not
jae
push
push
pushl
pushl
call
movl
sbb
xor
mov
mov
sub
imul
add
xorl
mov
or
addl
shr
mov
mov
mov
mov
xor
mov
xor
xor
cmpl
mov
mov
movl
jmp
movl
ja
push
push
pushl
call
or
orl
sub
movl
mov
mov
sbb
sbbl
mov
sbb
mov
or
mov
mov
andl
shl
adc
mov
add
shrd
negl
xor
shr
xor
mov
adc
mov
xor
or
mov
mov
negl
mov
mov
mov
mov
cmpl
movl
mov
mov
jmp
mov
mov
ja
push
push
push
push
push
push
call
mov
mov
sub
sub
and
mov
xor
xor
sub
imul
sbb
add
mov
mov
andl
mov
mov
shl
xor
jmp
filds
scas
pop
sub
out
neg
mov
movlps
daa
push
xor
sub
xor
mov
push
jge
inc
jl
inc
dec
in
adc
adc
test
xlat
jb
inc
add
in
mov
fiadds
mov
lea
imul
insb
mov
xor
cs
cld
pop
or
push
das
push
sbb
and
mov
bound
xchg
ja
outsl
mov
stos
sbbl
and
loopne
jbe
lcall
fnop
cltd
ljmp
sbb
inc
sub
ss
inc
cmpsb
fmuls
sarl
test
jecxz
xor
outsb
mov
xchg
andb
adc
adc
inc
mov
shl
repnz
jecxz
inc
mov
jle
fs
out
push
arpl
mov
adc
add
rcrl
mov
imulb
mov
add
mov
rcrl
lret
cmp
adc
cmp
jnp
ss
lea
pop
cld
dec
in
push
bound
jb
aad
movsb
aam
sbb
jecxz
mov
pop
mov
adc
sub
movsb
sbb
rsm
cmpsl
fdivs
cmc
testb
and
je
push
lods
pcmpgtd
xchg
mov
xchg
xor
mov
test
jg
add
in
cmpsl
add
mov
push
mov
bound
cmpsb
inc
ret
jne
push
mov
cmp
or
cltd
das
and
pushf
daa
or
lcall
lcall
outsl
repnz
xchg
xchg
xchg
jmp
fistps
sbb
cli
mov
jns
aam
sbb
sbb
and
push
daa
aad
cltd
or
xchg
pusha
jmp
std
and
out
cmc
out
aaa
loopne
aas
movsl
push
fidivrs
leave
es
sbb
jno
lock
add
mov
aam
mov
inc
jbe
dec
cmp
popa
xor
ret
sub
outsb
lods
xchg
adc
or
mov
incb
push
jnp
mov
jmp
mov
sbb
lock
mov
or
jnp
mov
sti
lock
pop
cwtl
mov
mov
inc
xchg
add
mov
out
mov
scas
push
fdiv
pusha
inc
pusha
sbb
cli
xchg
mov
mov
into
outsl
ret
gs
in
jp
jecxz
insb
ss
mov
pop
incb
fldz
xor
push
hlt
aas
in
sbb
push
sbb
pop
cmpsb
cmp
mov
fcmovnb
add
adc
add
movb
mov
xor
adc
shld
mov
shl
mov
movl
movl
movl
cmp
movl
jne
cmp
je
mov
cmpl
mov
notl
movzbl
mov
jmp
mov
jbe
pushl
push
push
push
push
call
or
sbb
not
movzwl
adc
xor
xor
and
mov
add
xor
add
xor
add
movzwl
xor
mov
cmpl
movl
movl
not
mov
jmp
mov
movl
jge
pushl
push
push
call
or
or
movl
andl
orl
movzwl
adc
andl
adc
xor
incl
xor
xor
xor
mov
sbb
mov
shld
movl
shl
movl
cmp
movl
jne
movl
cmp
movl
je
cmpl
mov
mov
jmp
mov
jne
push
call
addl
and
and
and
movzbl
or
xor
mov
mov
mov
adc
mov
mov
mov
sub
xor
push
pop
xor
xor
xor
jmp
shlb
jno
jno
stos
sub
cmpsb
js
sub
test
adc
xchg
movlps
jl
call
adc
testb
dec
shrb
cmp
add
xchg
bound
push
addr16
push
jecxz
inc
ss
rol
push
je
pop
jle
fwait
cld
aaa
repnz
arpl
in
cwtl
add
mov
cmp
sbb
push
push
lret
push
jp
aad
mov
cmpl
inc
outsl
rorb
mov
inc
mov
dec
lret
mov
mov
and
xor
pop
inc
cld
adc
xchg
lock
je
sarb
jp
in
outsb
aas
cmp
xor
pop
scas
dec
adc
aad
fdivp
xor
lret
and
cmp
cmp
adc
xchg
add
xchg
xchg
arpl
popf
cmc
test
pusha
cltd
lret
jmp
int3
into
or
sbb
xor
repz
sbb
dec
adc
jns
clc
xor
mov
dec
sub
inc
cmp
or
enter
rclb
mov
inc
push
pusha
mov
mov
sub
adc
jl
cmc
push
fistps
jbe
jecxz
push
cmp
call
or
sub
jae
imul
pop
int
mov
xorb
movb
repz
mov
inc
jo
push
fcoms
subl
add
or
sbbb
dec
inc
es
sbb
loopne
ja
mov
sub
and
dec
dec
mov
sub
inc
inc
jle
push
stos
fiadds
sahf
gs
int
fs
js
nop
out
dec
in
inc
in
pop
rcll
or
adc
or
movsb
out
push
iret
cld
mov
push
mov
mov
mov
dec
jbe
dec
dec
fimuls
push
daa
cmp
pop
inc
mov
out
iret
pop
xchg
adc
sahf
sti
mov
clc
mov
clc
push
test
pop
xlat
mov
fldenv
mov
add
aam
dec
pop
add
sbb
in
aas
mov
push
sub
outsl
out
and
ljmp
xchg
aas
lods
xor
int
jp
cmc
mov
pop
jnp
mul
add
or
insb
mov
pushf
mov
ret
push
xchg
or
inc
mov
add
cmp
mov
push
bndldx
cs
sbb
negl
hlt
movsl
mov
adc
inc
or
shl
adcl
mov
xorl
xor
movl
shr
or
cmpl
mov
mov
movl
jmp
movl
movl
ja
pushl
pushl
pushl
push
pushl
call
or
or
xor
add
and
add
xor
mov
xor
mov
mov
mov
mov
mov
push
cmpl
mov
movl
jmp
mov
mov
jae
pushl
call
sbb
adc
xor
movl
orl
add
pop
andl
sub
cmpl
mov
mov
jmp
movl
movl
jne
push
push
push
call
xor
movl
or
or
subl
adcl
mov
xorl
add
addl
mov
subl
lea
mov
mov
mov
xorl
jmp
outsb
xchg
or
pop
pop
stos
adcb
fistl
adc
jnp
ljmp
jmp
dec
adcb
and
loope
cmpsl
mov
sbbl
add
testl
and
xchg
les
dec
adc
or
jno
push
jle
hlt
mov
push
ja,pn
out
inc
movsl
pop
push
loopne
ljmp
push
dec
pushf
cld
stos
adc
sbb
pop
cmp
or
dec
ret
mov
pushf
push
fldt
in
sub
out
lds
ficoml
xchg
rcr
adc
xlat
cmp
mov
dec
incl
in
jl
dec
scas
test
aaa
pop
insl
sub
jg
ret
inc
sbb
push
dec
sti
fs
adc
in
fstpl
int
inc
adc
mov
sbb
fdiv
mov
dec
mov
in
inc
sar
adc
add
int3
fldenv
sub
int
aas
adc
pop
sahf
les
inc
add
pop
test
push
jb
xchg
mov
outsb
movsl
push
les
push
mov
and
les
sbb
aad
fisttpl
or
xor
pop
in
add
push
ret
jne
inc
sahf
insb
imul
jl
and
pusha
shll
sti
cltd
gs
shlb
std
addr16
es
mov
push
imul
andb
test
shrl
rcll
push
or
xchg
push
sbb
aas
outsb
mov
sub
mov
icebp
jbe
gs
fistl
dec
adc
push
push
xlat
mov
bound
in
arpl
aas
lret
sbbl
mov
xor
gs
int3
adc
sub
lds
and
sbb
mov
mov
jl
and
gs
jmp
cwtl
movb
in
mov
xchg
push
push
inc
fisubrs
cmc
pop
sub
inc
inc
in
sub
in
lea
inc
inc
add
shrb
mov
scas
loop
ud2
xlat
sbb
les
pop
testb
ljmp
inc
inc
in
pusha
rorb
mov
push
out
mov
push
cmp
jb
xor
stc
xchg
aas
pushf
cmp
test
cmp
jns
ret
xor
cs
inc
pop
scas
and
stos
je
add
lods
fstpt
pop
mov
sarl
or
mov
std
adc
xor
mov
mov
lcall
ds
lds
xor
cmovge
out
mov
stos
in
xor
xor
andl
jmp
sub
sbbl
pop
js
lods
push
push
es
fsts
adc
dec
cmc
pop
insl
add
add
adc
pop
test
push
sbb
pop
xlat
mov
xchg
pop
outsl
mov
mov
xor
loop
xchg
or
or
sahf
stos
add
aaa
clc
inc
dec
hlt
mov
mov
push
addb
and
dec
insl
jo
xor
ljmp
xor
mov
cltd
jmp
movsb
cli
lods
add
adc
std
adc
adc
jmp
lahf
int
sbb
mov
int3
jo
push
pop
dec
push
adc
loopne
repnz
lcall
ret
cli
test
sti
mov
mov
cwtl
jne
iret
inc
jno
xor
mov
push
loopne
xchg
cmp
mov
sbb
out
flds
outsb
mov
inc
cmpsb
xor
jns
int
sbb
xchg
insl
jg
popf
push
sbb
ds
popf
xlat
dec
cmpsl
test
repz
loop
mov
loop
sub
add
test
push
popa
ret
inc
popf
or
xor
fdivp
mov
fwait
dec
xor
and
fsubrs
pushl
rclb
inc
mov
fdecstp
aaa
mov
in
jno
xchg
inc
std
ret
mov
xchg
cmp
stc
adc
lds
ljmp
or
jmp
outsl
xchg
mov
mov
mov
jb
add
xchg
xchg
dec
adc
and
scas
mov
pop
in
add
mov
imul
outsb
rcll
ljmp
jnp
inc
mov
mov
out
aaa
movsb
sbb
fisubs
sub
xor
push
in
adc
shr
imul
adc
incl
cmpsb
repz
testb
push
mov
sbb
repnz
out
push
idivl
mov
lcall
shlb
xor
dec
xchg
roll
subb
aam
sahf
inc
cmpsb
sub
lcall
sti
mov
out
into
pop
and
inc
scas
xchg
or
sbb
insl
mov
int3
insl
pop
xor
sbb
mov
adc
jp
pop
addr16
testl
add
repnz
mov
js
and
push
jmp
rolb
xor
cli
sbb
dec
push
and
mov
repz
stos
daa
mov
push
in
enter
lret
mov
dec
insl
repnz
scas
add
sbb
mov
and
mov
scas
ja
jbe
loope
lret
dec
xchg
xor
punpckhdq
call
movl
shl
sbbl
or
xor
mov
movl
jmp
test
repnz
cltd
dec
sbb
mov
es
adc
xchg
movlps
lock
imul
fwait
jb
pop
push
ret
mov
imul
stos
jecxz
jb
jnp
push
add
cmp
inc
mov
pop
add
out
mov
sub
out
addr16
jecxz
mov
cld
add
or
in
jnp
mov
jno
aas
pushf
test
loope
movsb
rcrb
push
lcall
adc
xchg
mov
rclb
addr16
sub
and
cmp
scas
call
jo
pop
popa
jb
rorb
imul
scas
mov
sbb
dec
out
aaa
int
movaps
call
cmc
sub
fmull
mov
aaa
int
int
jg
mov
out
stos
xchg
and
test
sub
aam
mov
test
fmuls
jno
cld
pop
push
aam
fisubl
inc
sbb
pop
jmp
cli
cmp
fwait
cmpb
sbb
add
lret
and
and
dec
adc
dec
hlt
push
cmp
xchg
cmp
insl
lods
and
fidivrs
arpl
cmpsb
push
fisubrs
aad
mov
imul
pop
shrb
out
cltd
pop
cmp
or
loopw
repnz
mov
mov
cmc
mov
jecxz
lds
pushf
add
adc
loope
sub
cmp
mov
in
fstpt
cs
sbb
jo
lock
push
add
stos
es
cmp
fs
mov
fwait
mov
sub
stos
sbb
test
enter
jnp
add
mov
jecxz
scas
xchg
add
stos
mov
rorb
pop
mov
fdiv
enter
imul
test
rclb
pushl
mov
dec
jle
aaa
jbe
lds
pop
jp
mov
call
jbe
inc
push
add
insl
movl
out
jbe
test
adc
sub
sbb
sub
xchg
insl
das
push
push
ds
mov
xchg
mov
jmp
insl
push
mov
cld
int
testl
mov
outsl
gs
in
jae
imul
cmp
ja
dec
int3
out
mov
push
insb
sbb
cld
pop
jle
inc
stc
hlt
jmp
arpl
out
dec
movd
cld
leave
scas
not
and
nop
imul
aam
lret
cmp
dec
addr16
inc
popf
fsts
xor
jg
or
adc
insl
push
inc
clc
cmpl
mov
movl
mov
jmp
movl
ja
push
push
push
push
push
push
push
push
push
call
addl
and
orl
and
add
movl
jmp
mov
jns
sbb
into
lods
add
lods
mov
movlps
cmpsl
ret
push
xor
fneni(8087
rcrl
es
repz
dec
and
xor
dec
sub
adc
or
dec
jbe
mov
mov
ljmp
xchg
or
call
out
insl
fstpl
add
sub
push
nop
out
dec
xchg
mov
fidivl
dec
movsl
lahf
cmp
repnz
cwtl
mov
aas
cmpsl
or
sbb
lods
mov
cmp
jl
adc
sti
popf
dec
inc
push
cmpsl
pop
out
adc
xlat
mov
cltd
sbb
inc
clc
adc
enter
xchg
or
mov
int
mov
adc
hlt
repz
dec
lcall
mov
sub
or
ficomps
mov
pop
cmp
sbb
mov
dec
sub
jmp
mov
je
cmp
rcrb
shll
sbb
cs
jb
fdivrl
push
inc
ss
jbe
mov
cmpsb
xchg
outsb
pop
les
aas
mov
pop
in
cmpsl
pop
scas
pop
fwait
inc
popf
add
lods
mov
daa
fs
mov
sbb
mov
jmp
ret
shll
test
dec
enter
iret
pop
pop
xor
dec
test
inc
ficoml
dec
or
adc
setbe
pop
scas
pop
push
cld
aad
fldl
adc
inc
adc
aam
jle
jno
adc
push
push
stos
and
jns
aas
out
shrb
push
sahf
push
lods
mov
xchg
lret
test
mov
cmpsl
push
outsb
pusha
into
mov
cmp
movsb
fisttpl
push
sub
sub
je
push
mov
sub
cs
ss
pop
into
mov
stc
clc
cmc
repnz
lret
mov
in
pop
mov
scas
scas
jmp
ret
xor
cmp
mov
jnp
rcr
push
stc
sahf
movsb
mov
push
inc
addb
shrl
int
insb
fnstcw
mov
out
pusha
dec
into
jbe
in
fisubs
orl
mov
or
or
mov
mov
test
jecxz
repz
mov
in
psrld
imul
cmc
xor
sub
ret
arpl
sub
jne
aas
lret
add
leave
popf
inc
or
pop
insl
in
mov
or
out
sbb
cmp
clc
xor
adcl
xor
shr
adcl
shl
sbbl
or
push
lea
subl
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
jmp
icebp
mov
cmp
pushf
mov
int
jle,pn
leave
adc
xchg
movlps
add
shl
cli
sbb
add
cmp
mov
push
clc
pushl
test
in
xor
cld
imul
test
xchg
pop
mov
jne
mov
push
pop
push
pop
ret
jae
leave
les
and
mov
add
mov
test
test
and
add
cmp
cmpsl
inc
fs
lret
aam
add
jge
jp
ffree
mov
mov
mov
mov
sbb
inc
add
popf
jmp
loope
xchg
cltd
lds
jb
sub
insl
ja
add
sub
movsl
mov
and
and
xchg
inc
imul
mov
jb
pop
mov
push
mov
sub
xchg
jne
mov
pop
dec
xor
pop
xor
mov
add
mov
out
hlt
pushf
xchg
addr16
push
lcall
insl
mov
call
movsl
loope
xchg
or
cld
into
fs
dec
push
icebp
test
pop
shlb
inc
andl
sbb
mov
cmp
cmp
or
fstpl
test
mov
test
ja
xchg
add
addb
mov
call
sub
mov
sub
mov
mov
lea
sbb
and
mov
cwtl
mov
ss
xor
and
mov
jne
loop
rcrl
push
mov
out
outsl
xchg
rcrb
out
fcomp
add
mov
subb
inc
and
aam
sub
inc
pop
pop
aad
push
dec
and
icebp
imul
addb
cmp
mov
or
jo
jg
mov
adc
or
xor
loopne
arpl
pop
cmc
pop
add
pushl
int
aam
aad
daa
adc
xlat
es
or
and
fnsave
repz
add
mov
lret
sarl
stc
dec
xorl
bound
push
dec
xlat
scas
fdivs
xchg
add
aaa
inc
scas
fs
rcrl
dec
sbb
or
pop
clc
fcmovnu
xchg
sahf
mov
out
in
pop
movsb
cmp
xchg
imul
and
xchg
rcr
jge
fs
insl
fistl
mov
insl
xchg
cmp
mov
pop
fcmove
testb
push
repz
imul
mov
loop
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
jmp
iret
xchg
stc
cmp
dec
mov
fwait
mov
adc
mov
popa
scas
shr
shl
xor
out
add
dec
ficomps
fistps
jns
mov
mov
jo
ds
add
loope
push
je
add
push
mov
and
ja
xchg
xchg
inc
push
dec
jne
lret
mov
or
psrad
movsl
outsl
aaa
cltd
xchg
cs
enter
outsl
dec
inc
das
lock
add
inc
adc
cmpsb
cmp
push
dec
clc
pop
icebp
in
xlat
mov
pop
fildl
in
lds
cmp
js
out
push
into
push
cwtl
pop
das
xor
dec
xor
popf
popa
mov
push
adc
push
or
test
arpl
sbb
jno
pop
push
test
or
jg
mov
mov
sub
enter
mov
fildl
mov
jmp
adc
push
xchg
pop
mov
insl
inc
jecxz
stos
repnz
push
pop
out
add
fbld
adc
or
mov
push
mov
cmpl
enter
cmp
sbb
xchg
mov
addb
sbb
stos
ret
add
or
cmp
xchg
adc
scas
jae
cmpb
xchg
add
jae
sbb
insl
sahf
jg
adc
and
sub
iret
lods
decb
inc
pop
lret
call
jmp
jb
mov
pushf
enter
jns
inc
push
mov
sbb
orb
mov
ja
imul
lock
mov
mov
outsb
clc
je,pt
push
outsb
lods
in
fsts
lea
sub
cmp
enter
cltd
enter
or
lds
loopne
push
adc
jg
lcall
mov
imul
push
shrl
aas
imul
mov
pop
sub
inc
cmc
adc
cld
jno,pn
cmpsb
jg
ds
daa
orb
cmpsl
repnz
mov
add
cmp
xchg
inc
into
pop
xchg
subl
xchg
adc
addl
ss
nop
adc
jp
test
rorb
aaa
dec
in
sbb
lock
fwait
leave
dec
adc
test
shlb
cld
inc
mov
pop
gs
loopne
faddl
and
xor
and
xchg
jle
add
mov
scas
in
push
popa
testb
xchg
outsb
loop
leave
xchg
jae
fwait
sbb
prefetch
or
push
pushl
shl
call
jmp
imul
cltd
sbb
imul
push
push
mov
adc
jno
sub
and
xchg
push
ret
cmp
sub
and
in
das
js
test
out
jo
xchg
enter
pusha
aas
pop
adc
pop
push
fisubl
sub
pop
xchg
imul
aam
je
lock
mov
jmp
and
cmp
lcall
fmull
xchg
mov
sub
testb
mov
ror
xchg
imul
inc
test
xchg
jl
sbb
cld
cmp
adc
arpl
cmovb
inc
cli
cmp
mov
inc
in
dec
inc
dec
adc
scas
loopne
leave
int3
sbb
push
loope,pn
pusha
nop
cmp
pop
ja
ret
out
mov
stos
movsl
mov
jle
or
pop
pop
push
sub
mov
xchg
add
out
loope
call
adc
leave
in
mov
cmp
outsl
or
xchg
loopne
sbb
jg
adc
inc
xchg
das
push
into
ret
dec
inc
push
fs
subl
dec
jl
pusha
pusha
adc
dec
popf
jnp
sarb
hlt
or
dec
pop
sarb
push
icebp
int3
jns
xchg
sbb
jae
outsb
sub
lea
into
dec
iret
jg
ja
and
sbbb
mov
scas
popa
dec
ret
pusha
cmp
pop
push
add
insb
scas
aam
insb
sbb
enter
sub
pushf
mov
sti
adc
ds
adc
push
add
movsl
mov
sub
movups
xor
push
jg
or
sbb
or
shlb
mov
adc
cwtl
sub
or
sbb
out
cld
movsb
dec
mov
cmc
mov
adc
jae
xchg
out
inc
test
sti
pop
dec
adc
inc
mov
xor
les
cmp
out
add
es
aad
hlt
popa
and
inc
shr
testb
scas
sub
lahf
xchg
pushf
lret
or
xor
mov
fldt
xor
repz
push
call
lock
mov
pop
pop
add
mov
fisttpl
aad
test
into
jmp
scas
inc
or
ror
lea
sarl
call
inc
or
ret
xor
cli
and
inc
movsl
push
cwtl
ljmp
cmpsl
insb
pushf
add
aam
sub
xor
sahf
mov
adc
xchg
cltd
inc
inc
pop
in
imul
adc
cltd
pusha
add
cmc
cmc
stc
gs
nop
ret
inc
mov
inc
adc
enter
add
adc
jmp
mov
mov
pop
pop
mov
lods
mov
cwtl
mov
adc
mov
movsb
mov
and
repnz
addr16
ja
jns
ljmp
inc
ficompl
add
mov
add
subl
enter
cs
mov
gs
inc
lret
adc
int
in
add
xchg
cmp
xor
sahf
jnp
mov
gs
das
mov
sub
lods
cmpl
shll
inc
adc
pusha
cwtl
push
xchg
jns
sub
push
shr
loope
pop
out
call
sbb
loope
jp
fsubr
sbb
in
lret
dec
loope
xor
pop
jnp
mov
addb
aad
mov
add
movsl
cmp
or
adc
cmc
fcomps
xchg
push
mov
pop
rol
mov
push
and
adc
in
int
add
mov
xchg
inc
insb
mov
adc
and
jl
into
sahf
add
fsts
cmpsl
xlat
loopne
ficomps
push
in
and
push
xchg
and
dec
pop
mov
inc
sbb
and
push
ret
subb
setae
ficompl
cwtl
scas
movsl
mov
js
xchg
dec
xchg
xchg
sub
dec
push
jno
xchg
leavew
cmp
mov
cltd
jo
xchg
imulb
sbb
push
cmpsl
fnstcw
xchg
jne
mov
lds
mov
push
enter
cs
cmc
fbld
hlt
lods
sub
add
adc
and
insl
rcrl
aam
xor
lock
ss
jbe
clc
pop
div
pop
push
fsubs
nop
movsl
pushf
sub
repz
dec
inc
dec
sbb
sti
arpl
xor
mov
rorl
int3
mov
fs
lahf
imul
loopne
je
arpl
mov
jno
sub
add
or
and
push
sbb
jl
test
fidivl
into
xchg
aaa
arpl
je
push
fwait
add
and
outsb
ret
pop
adc
stos
sub
cmp
adc
nop
sub
jmp
add
inc
cmpb
push
inc
add
inc
xchg
aam
sti
cmc
mov
call
jo
pop
leave
dec
sub
pop
mov
pop
scas
mov
je
test
insb
inc
nop
je
xchg
dec
mov
outsl
push
shrl
movsl
adc
fstps
jl
or
cmpsl
mov
stos
loope
popf
into
lret
daa
rcr
mov
xchg
mov
mov
cmpsb
test
mov
dec
test
cmp
ret
cmp
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
jmp
cwtl
push
cwtl
sbb
mov
stos
sbb
adc
js
mov
xchg
pop
xor
sarb
mov
ss
mov
scas
ffreep
ret
in
jg
pop
push
ljmp
or
add
cmpsb
mov
dec
inc
add
xchg
mov
pop
roll
cmp
cmc
and
jne
lret
push
jne
loopne
sbb
imul
rclb
cld
out
movsb
dec
jnp
xorl
movsl
ds
jmp
jbe
pop
xchg
sub
les
and
xor
sti
jo
sub
cs
xor
cwtl
out
pusha
fbld
or
pop
sub
push
pop
int
imul
ret
bound
pushf
mov
dec
bound
mov
dec
adc
xchg
mov
mov
jnp
pusha
xchg
idivl
push
insb
or
pop
enter
or
aas
mov
ss
sbb
mov
cmpb
add
xchg
call
dec
mov
imul
ret
es
mov
cmp
shlb
jo
jg
call
dec
jae
rcrb
xor
push
jg
imul
xor
sub
adc
lock
sbb
mov
sub
filds
mov
aaa
les
insb
ret
shlb
insl
mov
ds
jne
sbb
add
mov
mov
loop
mov
push
mov
mov
movsl
outsb
jne
lcall
bound
es
sbb
adc
inc
adc
in
mov
xor
ret
cltd
cmpsl
xorl
xchg
cmp
repz
xchg
movsb
jl
xchg
and
in
rep
dec
fwait
sub
adc
fcomp
aas
fimull
mov
mov
push
push
popa
enter
mov
imul
decl
inc
cld
sbb
push
cltd
pop
hlt
into
push
push
loopne
cmp
jbe
cltd
popf
insl
aaa
inc
mov
nop
mov
movsb
mov
sub
popa
xor
add
fcmovb
stc
lret
dec
mov
push
rorb
aam
cmp
pop
js
dec
lds
jmp
push
leave
sbb
mov
sahf
pop
pop
test
xchg
int
mov
or
mov
lret
xor
fwait
gs
sub
imul
pop
xchg
in
inc
or
or
mov
sub
or
rolb
sub
test
mov
push
xchg
inc
xchg
pushf
mov
ljmp
pop
incl
add
decl
cmp
rorl
stc
cld
decl
test
cld
decl
or
lods
enter
add
or
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
jmp
jno
cmp
cmp
jno
xchg
xlat
test
mov
adc
lods
adc
xchg
movlps
pop
iret
daa
sbb
in
adc
jge
pop
sbb
into
mov
mov
push
xor
mov
pop
cmpsb
mov
or
push
aas
push
xor
or
and
lret
fdivs
shl
inc
fs
fcomp
aaa
ret
or
lahf
sub
jbe
jg
arpl
leave
ss
out
int
sahf
stc
xchg
jns
lods
repz
rorb
nop
mov
pop
dec
mov
jmp
pop
and
loope
lcall
dec
jno
push
std
fs
sahf
jnp
in
stos
add
inc
icebp
fsqrt
arpl
into
sbb
sbb
push
mov
hlt
sti
jae
ds
push
jnp
mov
cwtl
lods
daa
shll
cmp
into
cmp
sbb
push
xor
push
les
xor
adc
mov
jge
and
adc
cltd
push
nop
test
mov
jp
xor
push
sbb
jecxz
inc
das
adc
mov
mov
mov
ret
xor
push
and
xor
gs
loopne
cmp
xchg
je
xor
leave
xchg
push
push
add
add
data16
mov
data16
dec
bound
icebp
and
adc
cs
fs
mov
cmp
outsl
cmp
aam
lods
loop
add
adc
arpl
jno
in
outsb
outsl
jno
inc
rclb
rcl
rcl
fists
enter
mull
sub
test
test
cmpsb
shll
inc
mov
xchg
sbb
adc
inc
repz
jbe
xchg
xchg
pusha
daa
mov
loop
ja
adc
push
lret
iret
adc
add
bound
inc
lret
pop
cmp
cmp
pusha
test
ficoms
add
mov
xor
mov
jle
in
leave
mov
loopne
in
mov
lock
xorb
les
lret
jge
in
adc
in
adc
inc
pushf
cmc
jnp
sub
cmpsl
sbb
or
aam
in
sub
fldl
sbb
add
mov
addps
fsubrp
cmp
jecxz
sahf
in
imul
adc
push
in
ss
fimull
sti
imul
jle
cmp
loope
jle
aad
sub
xor
push
or
xchg
sub
popf
cltd
insl
lods
std
js
negl
and
jl
dec
pop
outsl
dec
aad
add
imul
jae
lea
xor
mov
inc
mov
jae
pop
or
pop
leave
ret
mov
and
mov
or
mov
jne
sbb
mov
sbbl
mul
ret
subl
push
cmpl
mov
mov
movl
mov
jmp
movl
jne
push
pushl
pushl
call
adc
not
movzbl
xor
mov
movzwl
adc
or
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
jmp
adc
fscale
fyl2xp1
lock
and
adc
mov
and
sbb
add
cltd
mov
adc
int
mov
jne
js
add
repnz
and
push
and
mov
jecxz
mov
adcb
pop
dec
and
pop
test
adc
bound
mov
push
cli
into
mov
loop
sti
in
sti
fcomps
xor
movsl
jne
stc
dec
sbb
cmpsl
dec
inc
ljmp
mov
push
push
daa
adc
jle
dec
jns
stos
mov
jg
cmp
mov
sbbl
dec
adc
sub
mov
lods
imul
mov
ror
dec
jb
xor
out
push
mov
mov
adc
mov
cmpsl
pop
jge
cwtl
cli
mov
sub
mov
xchg
btc
cli
das
es
clc
sbb
mov
lods
movsb
flds
lods
scas
or
push
sbb
pop
shrl
mov
int3
lahf
scas
mov
shlb
inc
shrb
sbb
fbstp
outsl
data16
ja
mov
in
jl
xor
jae
fucomi
mov
fmuls
add
push
or
xchg
roll
loopne
push
test
enter
insl
cmc
mov
xchg
mov
lcall
or
and
xor
das
stos
mov
lods
leave
lock
mov
mov
cmp
xchg
jg
or
jae
lret
add
pop
inc
jno
fcomps
mov
sub
fisubs
mov
in
loope
mull
xchg
xlat
mov
xchg
jle
lret
mov
and
adc
pop
stc
fisubs
mov
and
mov
pop
loop
and
lods
and
cmp
mov
inc
mov
iret
mov
fwait
xchg
cmc
roll
mov
scas
cmpsl
xor
adc
test
lahf
das
imul
push
loop
mov
stc
mov
insl
popf
out
pop
sub
inc
flds
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
jmp
pop
mov
push
sbb
loope
push
dec
sahf
lods
mov
adc
mov
adc
sub
scas
jo
add
adc
xchg
and
adc
add
insl
push
jbe
test
dec
mov
std
and
out
sahf
and
sbb
flds
clc
mov
lret
addr16
pushf
mov
or
jmp
test
jg
adc
insb
enter
popf
jo
addr16
ret
movl
js
mov
jmp
or
jnp
jnp,pn
lret
idivl
in
fucomi
xor
aas
leave
ret
iret
jle
fsubl
adc
inc
add
mov
xchg
dec
jecxz
push
pop
sbb
pop
pushf
or
cli
xor
push
cmp
in
sub
fidivrs
pop
xorl
shlb
push
shlb
xchg
stc
aaa
pop
test
iret
pop
pop
xor
inc
and
in
aad
int
cmp
lods
mov
mov
push
xchg
out
inc
cmpsl
outsb
faddl
lods
mulb
hlt
jl
rclb
scas
pop
fwait
jo
ds
mov
and
into
int3
sub
push
arpl
out
or
dec
insl
bound
adc
in
outsb
cmp
mov
sub
dec
cli
mov
dec
jle
lock
loop
jno
push
cmp
or
rorl
and
loope
jno
movsb
repnz
mov
ret
sub
dec
fiadds
clc
stos
adc
sahf
call
and
cmc
mov
test
shrl
lahf
lahf
inc
out
lret
xchg
mov
les
rcr
inc
iret
ret
sub
out
sub
mov
rcrl
hlt
jle
jno
add
cmpl
pop
inc
or
dec
xor
sbb
je
cmpsl
in
sub
std
ljmp
xchg
scas
enter
je
pop
lret
jmp
pop
dec
add
repz
and
outsb
int3
lods
loope
fiadds
lret
daa
popa
adc
in
xchg
arpl
push
dec
icebp
and
and
add
rorl
leave
jnp
add
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
jmp
and
popa
and
clc
inc
jbe
out
jmp
adc
mov
or
ss
adc
push
out
mov
adc
sarb
and
aad
push
jne
push
xor
and
fst
inc
dec
or
mov
xor
mov
outsb
addr16
js
in
loope
inc
nop
and
hlt
cs
das
call
jne
in
mov
sub
mov
loop
push
nop
testb
inc
inc
add
push
pop
pushf
mov
mov
sbbb
mov
push
inc
lock
iret
rorb
push
addr16
gs
loopne
pop
movsl
sti
idiv
cmp
or
out
xor
stc
inc
ljmp
lods
dec
test
stos
mov
push
int3
and
subb
ja
xor
es
jo
jne
rolb
mov
scas
lcall
inc
or
mov
dec
in
xchg
sarb
cmpsb
pop
or
fstpl
sub
cmp
in
aaa
andb
mov
imul
fimull
stos
or
arpl
mov
fistps
popf
or
inc
sbb
mov
mov
xchg
or
mov
xor
pop
fldt
outsb
mov
out
mov
mov
aad
adc
xor
jle
adc
mov
test
mov
dec
mov
xchg
stos
lods
sub
std
sahf
jmp
iret
ja
sub
mov
jge
lret
adc
sbb
bound
pop
out
mov
popl
rcr
or
sar
iret
popa
arpl
test
xchg
cld
rcr
or
pop
or
mov
inc
notl
or
push
jl
movsb
frstor
in
lods
inc
adc
es
je
push
lods
iret
sub
xor
mov
sub
mov
movsl
push
xchg
fisttps
pop
insb
mov
popa
sub
hlt
movsb
mov
loope
fmull
inc
lods
pop
sbb
clc
inc
lret
add
movsl
xor
inc
rol
and
in
sbb
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
jmp
lret
push
out
sub
rorb
cmpb
movlps
pmullw
adc
loope
addr16
xor
and
jne
testb
mov
cwtl
sub
jb
inc
scas
mov
dec
or
push
sub
lds
rorb
jl
pop
push
pop
lock
mov
xor
inc
xlat
ds
sbb
mov
sahf
hlt
rclb
jbe
lret
add
push
and
call
or
push
add
mov
arpl
dec
inc
xchg
aas
adc
xchg
inc
mov
fucomip
jns
cli
out
inc
ret
xchg
push
fisubs
push
dec
dec
mov
mov
inc
cli
mov
add
cmpsb
lock
jmp
pop
mov
out
testl
push
adc
mov
hlt
pop
pop
xor
in
push
push
stc
and
in
call
and
and
sarl
mov
push
push
repnz
xchg
or
aam
negl
cld
mov
int
fsubl
js
dec
stos
loopne
adc
dec
add
std
scas
out
ljmp
cmp
mov
hlt
les
add
test
rcr
pop
fimull
or
cld
into
inc
daa
pop
dec
jge
xchg
add
jg
fmull
enter
jg
jns
repnz
div
cmp
pop
xchg
mov
xchg
xlat
or
lea
dec
jmp
jmp
nop
outsb
in
fwait
cmpsb
icebp
fdivrs
dec
xchg
loop
lock
add
adc
and
out
sbb
repnz
inc
pop
or
shrl
loope
add
arpl
mov
xor
fbstp
ficomps
aad
loopne
adc
shll
shll
outsl
stos
lahf
sbb
cmpsb
fildll
push
aad
sub
out
cmp
call
sub
adc
sbb
or
pop
adc
cmpsb
push
mov
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
push
call
mov
movzwl
push
call
test
jne
xor
movl
jmp
mov
mov
and
mov
mov
push
cmpl
movl
movl
jmp
mov
movl
ja
pushl
call
addl
subl
subl
orl
pop
mov
mov
mov
mov
mov
andl
movzwl
subl
or
andl
cltd
adcl
movzwl
sbbl
idiv
xor
movzwl
adcl
or
and
mov
and
mov
cmpl
mov
mov
jmp
movl
movl
jne
pushl
push
call
orl
sbb
sbb
xor
add
and
mov
mov
mov
subl
mov
mov
andl
sub
andl
mov
movl
xor
add
mov
sub
movl
mov
movl
cmp
movl
jb
cmpl
movl
mov
mov
mov
jmp
movl
jbe
push
push
call
adc
movzbl
add
mov
adcl
and
add
subl
movl
movl
adc
movl
add
jmp
loope
jnp
cmp
pop
popf
push
xor
stos
inc
dec
xor
sahf
xchg
adc
pop
adc
adc
frstor
mov
cmpsb
inc
pop
dec
imul
movl
sbb
pop
jp
adcb
out
push
push
mov
push
stos
jmp
shll
es
daa
cmp
stc
mov
jecxz
cmp
pop
or
popa
mov
ret
mov
adc
mov
les
sbb
scas
gs
inc
rcll
out
adc
xchg
es
cmp
cmp
add
mov
dec
insb
sbb
cmpsb
cmp
or
or
and
iret
hlt
cli
mov
mov
mov
clc
and
mov
jae
popf
arpl
push
js,pt
out
xchg
sbb
popa
mov
dec
out
lahf
xor
mov
lods
jecxz
std
cmp
sbb
push
enter
test
push
call
in
lcall
xor
pop
punpckhdq
inc
fmuls
pusha
pop
pop
xchg
push
dec
mov
jns
pusha
scas
out
stos
daa
cwtl
js
dec
mov
mov
inc
sub
sbb
pop
aam
or
push
or
fwait
mov
mov
mov
movsl
dec
dec
fidivrl
lret
or
sbb
jmp
add
out
sbb
xchg
sbb
into
inc
fwait
jnp
adc
xchg
in
adc
and
cmp
stc
xchg
enter
in
dec
cs
addr16
mov
mov
sub
inc
dec
lds
jmp
push
cmpsb
in
xchg
mov
aas
and
cs
push
addr16
mov
sub
dec
dec
jbe
push
sbb
cltd
push
mov
mov
test
push
insl
popf
in
mulb
popa
xchg
fstl
inc
mov
mov
mov
mov
xchg
ficoml
dec
aam
mov
test
inc
enter
lret
sbb
into
ficomps
sub
int3
mov
pop
andl
inc
cmp
cmp
hlt
repnz
mov
or
jbe
dec
stos
incl
mov
push
dec
and
and
mov
or
leave
xor
or
add
aas
mov
add
mov
mov
std
push
and
popf
fwait
bound
jmp
pop
push
xor
fnstsw
pop
ja
cltd
and
clc
sbb
push
xchg
push
push
jo
mov
aas
out
imul
fsubs
pop
add
lods
pop
or
cld
std
jns
je
outsb
xor
addr16
adc
test
out
mov
test
cmpsl
rclb
jl
call
sub
xor
rclb
add
sahf
cmp
xor
or
and
dec
mov
icebp
mov
xor
imul
je
fdivrl
push
push
pop
cmp
cltd
mov
mov
sti
aas
cwtl
cmp
mov
js
push
and
out
and
xchg
shrb
and
and
inc
and
xor
mov
mov
sub
add
add
mov
xor
incl
div
mov
add
adcl
and
subl
pushl
xorl
pushl
call
movl
cmpl
movl
mov
jmp
mov
mov
jl
push
push
pushl
push
pushl
call
neg
sbb
addl
sbb
addl
sub
adc
movl
sbbl
movl
orl
mov
mov
and
or
adc
mov
and
xor
andl
pushl
adcl
pushl
call
or
pushl
movl
movl
movl
cmpl
mov
notl
jmp
mov
ja
push
pushl
pushl
pushl
push
pushl
pushl
push
call
or
and
xor
add
movl
adcl
movl
sbb
movl
movl
add
movl
xor
mov
cmpl
mov
mov
mov
jmp
movl
not
jbe
push
pushl
push
call
movl
movzwl
or
mov
mov
add
xor
and
andl
adc
mov
sub
mov
or
addl
and
mov
xorl
sub
pushl
mov
mov
incl
add
andl
and
mov
adc
jmp
pop
push
shlb
lcall
jle
sub
stos
in
adc
pop
adc
adc
xchg
lcall
int3
fisttpll
sbb
adc
sub
aam
fstps
xchg
mov
jae
add
in
cmp
shll
mov
out
icebp
shlb
cmc
sub
push
xchg
xchg
pop
in
push
fnstsw
imul
jns
mov
push
mov
pop
mov
lods
jmp
arpl
mul
shrw
lock
dec
scas
iret
out
jle
rol
and
into
stc
insb
pop
sub
cmp
cmpsb
ret
insb
mov
and
lock
mov
fwait
cmp
inc
jo
dec
push
xchg
cmp
testb
jmp
je
lret
repnz
pop
xor
adc
loope
in
bound
roll
movsb
dec
js
sub
mov
shl
js
clc
adc
out
jmp
loopne
jnp
fs
mov
cmp
xchg
pop
and
ss
aaa
loopne
pop
push
mov
pop
xlat
inc
push
insb
arpl
xlat
test
mov
lock
insb
mov
push
mov
inc
push
inc
adc
cmpl
xor
nop
fsubrl
shrl
pop
mov
push
xchg
jne
xor
sbb
pop
mov
and
test
enter
lahf
arpl
arpl
or
mov
pop
cmp
jl
xor
movsb
and
xor
mov
jmp
dec
cmp
leave
aas
jge
jp
inc
sub
push
dec
imul
mov
inc
cli
mov
dec
pop
pop
add
and
movsl
or
aam
ja
aad
dec
pop
fstps
out
std
lret
ja
mov
pop
in
cli
ds
mov
and
mov
mov
iret
mov
sahf
outsl
jge
xor
mov
aad
and
jg
cmp
add
cmp
stos
mov
mov
adc
xchg
sbb
imull
lret
out
test
sbb
loop
dec
cmpsb
outsl
push
mov
repnz
mov
xchg
out
test
push
sti
add
daa
add
push
scas
std
mov
scas
pop
push
inc
int3
std
dec
rcr
and
ret
andl
sub
push
clc
pop
test
and
sub
out
pop
add
and
divps
cs
mov
aaa
pop
mov
jle
je
jbe
outsl
sbb
in
sbb
iret
xor
xor
subb
inc
fmull
sbb
pop
xchg
or
in
pop
incb
outsl
sub
or
cmpl
or
into
out
test
jbe
fnsave
adc
adc
dec
popa
scas
repnz
je
je
es
mov
jnp
sub
push
aas
push
or
push
xchg
aas
sub
push
pop
mov
out
and
bound
inc
negb
push
das
mov
add
orb
mov
jp
push
add
ja
adc
idivb
inc
arpl
sar
iret
pop
mov
mov
ds
mov
sub
mov
orl
xor
adcl
and
pushl
mov
movzbl
and
mov
imul
sbbl
xor
subl
or
andl
mov
sub
pushl
call
andl
dec
movl
jne
sbb
movl
mov
subl
mov
movl
sbbl
mov
call
inc
lea
cmpl
mov
mov
jmp
mov
jbe
push
pushl
call
movzbl
add
dec
dec
sbb
sbb
mov
xor
xor
sub
add
mov
adcl
lea
mov
xor
mov
mov
cmpl
mov
mov
mov
not
jmp
movl
movl
jle
push
push
pushl
pushl
call
adc
sbb
and
or
and
sbb
adc
xor
mov
adc
mov
cmpl
mov
mov
movl
jmp
mov
jbe
pushl
push
call
mov
adc
and
or
orl
sbb
dec
xor
xor
movzwl
xor
shl
adcl
shr
or
movzbl
and
mov
xor
mov
cmpl
mov
movl
mov
movl
jmp
not
mov
jne
push
call
and
movzbl
adc
sub
movzbl
sub
movl
and
sub
mov
xor
mov
and
mov
xor
mov
mov
xor
xor
sub
or
mov
shrd
shr
inc
mov
and
mov
cmpl
mov
mov
movzwl
jmp
movl
mov
ja
push
push
pushl
push
pushl
push
call
sbb
add
mov
xor
mov
not
and
inc
mov
xor
xorl
xor
or
or
mov
adcl
push
sbbl
pushl
incl
lea
andl
push
andl
shl
orl
call
lea
sbbl
push
adcl
mov
orl
mov
xorl
lea
orl
push
mov
lea
mov
adcl
mov
adcl
mov
push
call
push
push
addl
pushl
xorl
jmp
nop
fwait
inc
stos
pop
sbb
dec
sti
adc
stos
sahf
lods
sub
adc
adc
js
xor
push
mov
add
cmp
xor
orb
outsl
in
data16
xor
mov
jg
push
movsb
cmp
push
cmovae
inc
out
add
inc
sub
inc
mov
lock
stos
add
call
out
push
mov
cmpl
fadd
sti
rol
outsl
add
add
les
xor
jmp
loop,pn
add
fcomip
cmp
push
jbe
popa
shl
ss
jecxz
xchg
test
adc
xor
jle
jb
mov
in
jne
push
repnz
ret
mov
mov
mov
scas
xor
loope
ss
adc
hlt
cwtl
aaa
out
call
or
aad
and
sub
pop
inc
sub
lods
and
fxch
enter
hlt
je
and
movsb
je
xor
mov
fstpl
movsb
imul
lds
sub
pop
push
es
push
sbb
icebp
mov
jp
push
add
fdiv
mov
lret
xor
ds
repnz
fbld
cmp
sarb
xor
test
scas
cmpsl
or
ja
hlt
cwtl
inc
pop
int3
inc
mov
pop
push
add
xor
mov
adc
adc
outsb
add
movsl
pop
cmpsb
dec
push
shlb
dec
pop
les
and
xchg
xlat
jne
outsb
push
out
or
lret
push
push
std
cmp
sbb
lock
mov
mov
dec
mov
push
ds
cs
push
add
ss
fdivrl
jbe
xor
cmp
mov
mov
cmp
push
and
jae
icebp
adc
mov
out
push
rolb
in
add
mov
aas
pop
mov
xchg
dec
sbbl
fwait
std
dec
xchg
pop
mov
inc
dec
jl
sub
push
andl
out
push
and
pop
jne
mov
xchg
adc
xor
push
jmp
sbb
cmc
jno
pop
and
push
push
cmpsb
shrl
aam
push
int
push
dec
stos
adc
pop
or
mov
mov
inc
jecxz
push
add
mov
jne
imul
pushl
xchg
aaa
cmpsb
cltd
ret
or
mov
insb
cld
scas
ja
cs
sbb
mov
sbb
call
mov
pop
scas
sti
movlps
scas
pop
mov
int3
add
pop
add
xor
daa
push
js
sbb
lods
xchg
pusha
popf
push
rclb
cmc
add
jno
sub
in
imulb
or
aas
and
cltd
aaa
push
mov
mov
mov
rol
imul
mov
loope
xor
lods
cmp
stos
push
push
mov
xchg
add
inc
dec
in
xor
cmp
sbb
or
stos
pusha
test
js
or
cld
pop
sub
push
and
out
jle
mov
repnz
insb
push
clc
popf
ljmp
cmpsb
cs
cmpsl
push
mov
mov
mov
dec
jg
and
mov
and
add
mov
mov
jmp
mov
jge
push
call
mov
add
add
add
xor
adc
xor
movzwl
and
sbb
mov
mov
cmpl
mov
mov
mov
jmp
movl
jne
pushl
push
push
call
or
mov
add
sub
sbb
subl
mov
adc
shr
adcl
shl
or
adcl
mov
xorl
xor
cmpl
movl
movl
mov
jmp
mov
mov
jb
pushl
pushl
call
not
mov
or
or
add
adc
mov
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
call
xor
inc
add
adc
sbb
sub
sub
cmpl
movl
mov
jmp
mov
movl
jge
pushl
push
push
pushl
call
or
mov
mov
sub
add
orl
neg
movl
incl
xor
lea
mov
adc
mov
lea
mov
mov
or
mov
adc
mov
sub
sub
andl
lea
xor
subl
movl
cmpl
mov
movl
movl
jmp
movl
jle
push
push
pushl
call
sbb
addl
xor
mov
sbb
adc
adc
subl
movl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jl
push
call
and
movl
xor
or
xor
add
sub
add
adc
mov
mov
or
and
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
jmp
aaa
mov
add
aaa
dec
faddl
mov
pop
adc
adc
xchg
mov
stc
mov
pop
data16
test
dec
cmpsl
add
outsb
push
jnp
ja
test
addb
lcall
sbb
in
sub
jbe
xchg
imul
pop
lock
mov
loope
xor
fdivrl
jge
sbb
pop
cmp
lahf
mov
es
testl
jg
cmp
fiadds
sub
subl
xchg
mov
fbld
xor
addr16
imul
mov
mov
pop
sub
adc
add
push
imul
rorl
mov
inc
pop
sub
adc
fsub
push
adc
les
sub
jl
aad
shl
nop
cld
xchg
test
stos
addr16
test
loop
pop
dec
xchg
ljmp
testb
jmp
jecxz
xchg
loope
stc
push
in
rorb
in
in
repnz
or
shrb
jns
xchg
xchg
xchg
imul
cmp
xchg
push
addl
mov
loope
out
mov
mov
scas
xorb
sub
lcall
or
mov
stc
sahf
inc
pop
xlat
cwtl
mov
jo
lods
out
xchg
and
push
sahf
adc
daa
xor
dec
mov
jo
cld
mov
xchg
pusha
mov
mov
andb
je
faddl
lahf
cmpsl
nop
sub
in
stos
lods
popa
jb
xchg
bsf
jge
movsl
testb
pop
int3
push
and
push
dec
sbb
movsl
mov
aam
pusha
dec
sub
sti
and
cmp
pusha
pop
dec
xchg
xor
out
inc
or
add
cwtl
mov
addl
fsin
loop
cmpl
xchg
pop
mov
pop
inc
aam
mov
je
movsb
mov
pop
dec
movsl
stc
fstpl
jo
hlt
xor
sbbl
stos
pop
stc
in
push
xchg
js
dec
mov
cmp
pop
dec
mov
or
mov
inc
xchg
dec
cmp
imul
and
and
clc
dec
xor
arpl
xchg
fcmovb
ja
and
fdivs
test
jp
out
and
mov
pop
pop
out
repz
xlat
sub
mov
daa
add
in
jbe
push
mov
xchg
sbb
jnp
lret
pop
mov
out
mov
shrb
push
repnz
fists
jo
aaa
pop
jg
add
mov
shl
dec
adc
hlt
inc
pop
jo
stos
xchg
mov
jle
and
xchg
mov
lock
dec
std
imulb
insb
scas
and
inc
jns
mov
pop
stc
sbb
movsl
jb
xor
dec
add
int
inc
mov
add
push
lahf
push
push
xor
dec
cmp
hlt
jp
mov
fnstcw
mov
xchg
mov
or
add
mov
imul
xchg
dec
sahf
dec
shll
adc
loop
cli
cmp
shlb
pop
mov
mov
ds
jbe
test
xchg
mov
sub
mov
sbb
mov
cmp
jne
cmp
jmp
mov
and
fwait
iret
test
in
mov
adc
adc
aaa
cmp
mov
dec
mov
dec
mov
das
inc
xor
ljmp
and
ret
mov
movsb
dec
rorb
mov
cli
sub
leave
das
into
fidivrl
fists
jl
pop
in
jmp
aas
xor
insb
pushw
mov
and
push
xor
push
mov
jp
iret
aaa
into
push
push
movsb
and
dec
add
in
cmc
mov
mov
cmp
push
dec
fsubrl
pop
push
xchg
xchg
add
aad
icebp
jg
push
jp
jae
fsubs
jns
test
or
pop
int
sbb
lret
xchg
in
pop
ss
or
xchg
push
adc
rclb
and
cltd
in
ja
and
fsubs
das
lahf
or
mov
inc
xchg
das
sub
inc
push
mov
mov
mov
adcb
push
mov
jp
mov
adc
cmp
add
fs
jne
jno
or
or
into
loopne
mov
sti
xorb
add
repz
shl
push
adcb
adc
out
jns
out
inc
sub
sub
fldcw
call
loop
push
mov
push
fwait
ja
shl
and
punpcklwd
pminsw
addr16
lods
mov
inc
sbb
pop
pop
scas
add
dec
or
ret
je
stos
push
add
mov
pop
sti
mov
data16
push
push
mov
cltd
sub
xchg
or
xchg
data16
pop
pop
push
in
or
or
push
mov
xorb
pusha
add
pop
inc
sub
leave
dec
push
inc
leave
adc
dec
loopne
sub
push
pop
jmp
adc
stc
inc
test
add
mov
cld
sbbb
mov
pushf
push
pushf
nop
imul
mov
xchg
mov
mov
push
inc
adc
push
add
js
jecxz
aaa
loopne,pn
or
pop
dec
pop
int
subl
mov
jbe
pop
pushl
mulb
sar
pop
push
and
mov
rcrl
adc
xchg
in
iret
jg
sub
jbe
cld
les
imul
add
das
push
pop
pop
xchg
and
jp
pushf
ret
ficoml
or
jb
popa
dec
in
xchg
mov
xchg
lahf
cmp
lea
adc
lcall
sbb
lret
lret
and
fcom
sub
mov
and
sbb
push
cmp
fcmovb
pop
pop
pop
pop
ret
dec
xchg
jb
dec
dec
in
insl
xchg
jno
out
adc
lods
xchg
stos
lock
mov
xor
arpl
push
rol
jno
je
repnz
inc
push
and
das
jmp
jo
pop
hlt
push
and
xor
in
sbb
inc
xor
arpl
mov
xchg
imul
popa
pusha
pop
imul
pop
subb
xchg
mov
mov
jmp
insl
hlt
mov
inc
movsl
dec
mov
add
icebp
push
fwait
inc
and
cmp
testl
add
inc
and
mov
inc
and
js
add
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
jmp
sbb
je
sub
cmp
ret
js
outsl
adc
pop
adc
adc
lahf
sub
jmp
loopne
sarl
imul
mov
shrb
cmp
leave
lods
jae
mov
xchg
pop
arpl
mov
pop
test
add
cmp
mov
fbstp
xor
sub
push
fcoms
aam
icebp
mov
fucomip
sbb
push
fdivrl
ljmp
xor
bound
cli
test
stc
add
mov
insl
jp
popf
pop
repnz
jp
int3
cld
mov
call
das
pop
nop
insb
test
or
scas
insl
jnp
xor
push
or
ficompl
or
or
adc
outsb
mov
xchg
dec
js
jg
clc
adc
push
fadds
mov
ss
repnz
xchg
push
dec
mov
popf
mov
or
and
stc
cmp
inc
call
insb
push
imul
mov
dec
pop
adc
rcll
inc
inc
cs
mov
mov
pusha
aam
scas
sbb
arpl
mov
dec
jmp
adc
xchg
xchg
push
lret
lret
movsb
lret
jmp
cltd
popa
call
mov
push
icebp
adc
mov
or
in
mov
adc
addr16
cmove
xchg
mov
jg
out
xor
pop
and
pop
lds
or
pop
mov
mov
cs
js
inc
repz
xchg
pushf
push
xchg
out
pushfw
ljmp
pop
cmp
dec
insl
push
and
jl
or
or
mov
mov
xchg
in
sub
sub
cs
ror
inc
sub
inc
jle
lahf
inc
enter
push
add
add
or
mov
mov
and
jmp
sbb
xor
in
enter
xchg
mov
sub
ss
xchg
subb
jae
mov
std
andl
lock
sbb
nop
outsb
in
sub
stos
call
xor
pop
out
pop
xchg
pop
mov
mov
aas
add
push
inc
out
adc
inc
aad
mov
and
test
mov
mov
jg
mov
or
mov
inc
push
fs
adc
xchg
fcompl
call
negb
lds
nop
jo
out
aam
cmp
data16
and
stos
and
je
in
dec
popf
mov
push
jnp
xchg
xchg
ret
xchg
and
std
insb
adcl
xchg
test
pop
adc
pop
lods
scas
stos
std
and
pop
imul
adc
jnp
lds
or
movsl
ja
inc
mov
push
lds
stc
iret
mov
pop
shl
test
shrb
outsb
into
ffreep
test
xchg
add
xchg
ss
fdivs
gs
xchg
test
sub
and
or
fcmovu
sbb
jecxz
jle
lahf
adc
xchg
dec
outsb
addr16
xor
shlb
popf
add
leave
cld
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
adc
or
addb
dec
insl
adc
pop
adc
adc
push
pop
loopne
int
mov
mov
xchg
xor
dec
sbb
adc
daa
rorb
sbb
aaa
adc
in
insb
out
jp
jbe
imul
mov
cmp
pop
jae
shl
lret
push
popl
push
lcall
jno
movsb
scas
xor
xor
jb
pop
mov
or
iret
xorl
xchg
dec
pop
dec
or
out
call
repnz
xchg
add
call
push
std
cmp
negb
xor
mov
test
or
mov
dec
mov
idiv
cld
adc
cmpsl
pop
decl
or
dec
pushf
call
mov
clc
outsl
test
ss
es
out
xor
test
pop
add
cmpsb
cmp
icebp
in
lods
mov
popa
mov
pop
jno
scas
out
xor
lahf
pop
sub
addr16
sub
addr16
fisubs
fcmovnb
aad
bound
pop
jle
inc
jo
xchg
sbb
pop
xchg
loop
mulb
adc
sahf
pop
push
fyl2x
cmp
enter
mov
dec
push
in
loop
imul
or
xchg
shrl
jnp
xor
ljmp
cs
das
popa
pop
xchg
repnz
lahf
iret
cld
leave
mov
cmpsb
push
jecxz
and
sbb
xor
outsb
insb
movsl
addr16
sbb
js
fists
or
jle
mov
jge
test
cs
push
push
mov
or
sbb
sub
rcl
mov
add
mov
fwait
aad
adc
call
xlat
lea
lahf
fdivrs
mov
xchg
adc
sub
cmp
jge
add
cmp
arpl
out
jge
gs
nop
movl
mov
fucom
xchg
es
rol
aad
sub
xchg
sbbl
pop
add
mov
pop
lods
sbb
mov
push
cwtl
mov
pop
mov
jno
cmp
leave
lret
stos
sub
and
or
push
loop
stc
test
mov
leave
loopne
arpl
jnp
or
shrb
sbb
xor
fcompl
jns
out
subb
add
imulb
into
movsb
xchg
fimuls
inc
lcall
jp
mov
scas
push
push
sub
in
jg
sub
mov
mov
mov
mov
mov
aaa
xchg
ret
stos
xor
popa
out
and
lock
loope
es
pop
inc
ljmp
cmp
test
inc
or
push
int3
fistl
es
std
ds
xchg
enter
cmc
mov
out
lods
stos
add
aad
popa
push
ja
mov
ljmp
push
lods
subl
scas
test
sub
dec
ret
cmp
or
xchg
es
jnp
cmp
dec
sbb
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
lods
test
jmp
insl
pushf
inc
fs
mov
push
arpl
adc
adc
jbe
pop
pop
out
pop
enter
xchg
adc
fists
arpl
jno
loope
ja
mov
xchg
jnp
dec
or
xchg
fmuls
mov
icebp
pop
popa
adc
pop
xor
jo
int3
pop
pop
mov
lds
mov
pop
addr16
push
aaa
fbld
insl
sub
les
ret
orl
adc
or
sub
mov
scas
push
cmpsb
mov
fisttpll
sub
shl
xorl
je
popa
or
mov
hlt
out
xor
addr16
fiadds
dec
jp
gs
adc
push
setge
iret
sub
outsl
mulb
add
mov
lock
pop
xchg
xchg
cmp
mov
popf
and
cmc
pushf
arpl
xor
mov
imul
pushf
mov
stos
lahf
subl
xlat
pushf
mov
mov
call
lahf
xor
dec
jle
and
or
mov
iret
xor
int3
stc
or
fs
dec
ljmp
mov
enter
dec
push
and
out
pushf
dec
je
dec
push
mov
mov
lea
int
insb
mov
sbb
out
orl
cs
mov
cmp
ss
imul
jns
rcll
xor
pop
test
sarl
push
test
in
fimull
cmc
dec
jo
fldcw
stos
xchg
das
and
mov
stos
imul
dec
pop
stc
fldcw
and
loope
dec
es
in
in
jb
mov
cmpsb
mov
jae
pusha
sbb
bound
push
aam
fs
insl
jmp
mov
push
ss
sub
lcall
cmp
imul
dec
inc
xchg
cmp
andl
test
jg
ja
cmp
pop
add
rol
jne
inc
test
popa
push
xchg
xchg
cmpsl
push
xor
xchg
xchg
push
push
popf
rcll
insl
fwait
icebp
decb
cwtl
ljmp
enter
loope
push
dec
aad
lock
stos
rol
jns
pop
cmp
mov
and
loop
inc
addr16
stos
xor
mov
inc
cmp
cmp
out
jae
test
pop
out
ja
mov
cmp
test
xchg
int3
or
push
loop
mov
pop
jmp
mov
pop
mov
mov
sub
out
mov
loope
inc
dec
add
and
fstp
insb
push
inc
pop
cmp
adc
inc
or
fwait
enter
inc
lods
dec
dec
cli
jg
mov
xchg
adc
jecxz
faddl
aam
push
mov
test
push
out
mov
js
xchg
mov
lods
mov
sub
cmpsl
je
int
sbb
jb
sub
lret
sub
andl
adc
push
cmp
arpl
call
outsl
int
sbb
out
cs
pushl
pop
xchg
cmpsl
jl
push
and
jns
cmp
sub
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
jmp
mov
test
cwtl
lods
test
adc
pop
adc
adc
xchg
aad
cwtl
and
inc
xchg
push
inc
pop
push
mov
jo
or
jne
lret
lret
call
cmp
mov
xor
and
xchg
lods
xchg
sbbl
inc
pop
dec
mov
pop
daa
xor
shlb
push
pop
dec
insb
pop
lret
xor
pop
add
into
fildll
inc
popa
insb
flds
add
sbb
imul
cmpsb
adc
fprem1
sub
loope
mov
inc
or
lea
fwait
cltd
repz
xchg
xor
rorb
dec
jns
sub
xchg
and
insb
sahf
iret
mull
cmpb
xchg
fildl
shl
insl
cli
and
mov
sub
or
push
adc
add
into
je
jge
adc
cmpl
shl
movsb
xor
mov
adc
push
push
fistpl
clc
jge
repnz
negl
popa
mov
mov
frstor
imul
mov
inc
andb
stos
mov
xchg
out
adc
mov
xor
in
pop
sbb
pop
cmpb
sub
cltd
cs
or
imul
es
push
icebp
dec
pushf
pop
enter
ret
jg
mov
mov
xchg
adc
adc
inc
loope
mov
push
cmp
xchg
fnstcw
pop
dec
lds
ljmp
shl
dec
or
dec
push
mov
jns
je
shll
sti
jnp
xor
rcll
cwtl
mov
sahf
sbb
cmp
cmp
stos
orb
subl
mov
pop
xchg
jne
pop
enter
sbbl
adc
push
cltd
out
mov
stc
push
add
jne
mov
in
aas
push
cmp
shrb
sahf
and
insb
leave
loop
enter
repnz
cmp
ss
xlat
mov
pop
xchg
pop
pusha
xchg
jne
xchg
outsb
cmpsl
jo
lods
fcmovne
adcb
out
pop
or
aad
mov
jno
shrl
dec
imul
lcall
scas
dec
in
sub
notl
aas
sub
lahf
lods
les
pop
mov
xchg
stc
cmp
aaa
dec
movsb
adc
insl
mov
out
xchg
stos
pop
and
out
ds
cmp
push
adc
jns
out
jp
repz
jg
mov
test
mov
orb
adc
test
push
sbb
jecxz
data16
xchg
xlat
ret
xor
imul
repnz
sbb
adc
dec
or
aam
push
mov
mov
mov
push
es
fsubs
jmp
fs
lcall
and
jo
popf
mov
dec
inc
dec
sub
mov
xchg
inc
adc
mov
repnz
shll
mov
pop
sub
push
push
push
jmp
jne
pcmpgtb
sbb
aaa
data16
mov
pop
adc
pop
adc
adc
outsl
les
xor
cltd
inc
push
imul
repz
and
adc
cmp
test
test
test
xchg
pushf
insb
mov
jo
imul
mov
sbb
jne
mov
imul
sub
mov
sbb
mov
sbb
decb
nop
sub
mov
insb
cmp
mov
mov
nop
jnp
mov
dec
dec
mov
mov
sbb
call
jmp
or
arpl
cmp
mov
ds
mov
sub
dec
mov
jl
adc
lods
std
fisttpll
cltd
xor
cs
lock
pop
fstp
hlt
hlt
pop
xchg
push
leave
mov
mov
cli
pop
aad
js
jbe
xchg
push
cmc
pop
add
fstl
je
jne
mov
pop
dec
lods
mov
out
xchg
mov
mov
push
adc
fcmovbe
inc
jmp
xchg
add
lods
fldenv
imul
icebp
and
or
push
cld
test
adc
outsb
push
inc
jbe
stos
sahf
stos
pop
sahf
inc
mov
mov
jecxz
mov
addl
jl
add
xchg
imul
rcrb
cmp
addr16
cmp
cmp
jns
int3
pop
pop
fwait
mov
xor
sub
shll
aam
pop
into
push
jmp
inc
inc
adc
and
and
push
decl
dec
das
ja
orb
pop
incb
call
xchg
jne
inc
and
dec
nop
int
les
shrb
out
add
sbb
mov
out
push
cmp
lods
xchg
adc
loopne
stos
mov
push
jns
loope
mov
or
inc
in
and
xor
sbb
loopne
mov
sahf
aam
inc
sub
inc
nop
js
imul
xlat
and
mov
mov
js
clc
push
dec
fld
push
push
adcb
xorl
cmp
mov
pop
xchg
xchg
and
xchg
add
fldenv
lea
outsb
pop
mov
mov
mov
mov
sub
cwtl
popf
out
jno
xchg
add
pop
addr16
fsts
test
cmp
ds
cli
xor
adc
xor
jae
cmp
lea
int
call
sub
sbb
mov
gs
pusha
movsl
sbb
inc
inc
rol
dec
sub
or
icebp
sbb
xchg
pop
and
xchg
xor
inc
lret
nop
mov
pop
xor
xchg
or
pop
mov
ja
mov
mov
rorb
dec
pusha
pop
shll
in
hlt
cmp
xlat
popa
mov
jl
inc
mov
nop
addr16
repz
ds
sbb
fwait
out
add
push
ret
dec
add
mov
jl
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
jmp
pushf
cmpsb
mov
scas
fwait
cmp
aam
insl
dec
adc
pop
adc
adc
jg
cmp
lret
stos
sar
adcl
inc
push
mov
in
mov
push
notl
cmp
mov
mov
dec
xchg
mov
adc
dec
xor
mov
and
ss
pop
lret
or
jg
adc
in
in
xchg
jecxz
sbb
mov
xchg
push
pop
or
addr16
test
adc
js
pop
mov
and
inc
in
and
lret
adcl
xchg
pushf
cmp
cmp
cwtl
jo
test
mov
fildl
sbb
roll
xor
insb
clc
leave
aam
loop
dec
dec
mov
pop
inc
dec
or
mov
pop
mov
push
nop
test
push
cmp
lock
ror
mov
lahf
sbb
fdivrp
xlat
mov
push
out
int3
shr
or
js
int3
scas
adc
testb
out
pushf
inc
repnz
or
mov
adc
ret
push
mov
jo
jae
or
inc
dec
jl
jle
dec
add
xor
fistpl
leave
lock
dec
jae
insb
stos
pop
out
sbb
loopne
dec
int
sbb
sbb
add
and
imul
clc
lahf
pop
jo
lret
stc
sub
mov
push
test
push
jmp
sub
insb
dec
data16
js
push
icebp
xor
mov
mov
inc
or
and
mov
ds
mov
sbb
mov
and
fldenv
scas
push
pop
pop
imul
dec
jbe,pn
repz
ficompl
jne
loop
lahf
pusha
sub
dec
loope
sub
loopne
lods
data16
call
jg
ljmp
mov
inc
fs
cmpl
fsub
sub
rorb
nop
pop
pop
dec
adc
fnstsw
and
or
lar
xchg
std
scas
dec
fpatan
xor
or
mov
or
lock
orb
fstps
jae
outsl
cmp
push
loope
dec
test
idivl
test
mov
andb
sbb
es
fisttpll
sti
ljmp
cmp
popf
pop
dec
pusha
lret
sbb
leave
mov
clc
and
mov
loopne
inc
test
popf
pop
loop
mov
and
sti
cli
icebp
and
fdivrs
mov
mov
xchg
xchg
jg
in
push
mov
movq
pop
xchg
repz
sub
jecxz
sbb
add
jle
pop
xchg
cmpsb
mov
xchg
rol
pop
insb
sub
xchg
cmp
addr16
das
movl
mov
ss
popf
sarb
mov
fwait
test
xchg
icebp
je
jbe
jmp
repz
jmp
ficoms
iret
sti
add
and
sbb
call
sbbb
jmp
stos
loopne
lcall
into
movb
movb
mov
mov
or
sub
mov
sub
jmp
sbb
insl
imull
sub
pop
lods
mov
adc
pop
adc
adc
push
cmpsb
pop
out
cli
jg
ds
ret
ss
and
xor
mov
dec
adc
lret
cmc
fwait
inc
test
push
mov
loope
lods
add
fs
popa
loop
cmp
stos
lcall
adc
fidivrs
into
xchg
and
mov
std
js
mov
cmp
sarl
aaa
es
data16
jle
ja
mov
mov
pavgb
fisubrs
dec
or
popf
sbb
pop
inc
jp
mov
test
xor
adc
pop
stos
pop
push
mov
rclb
dec
adc
or
sbb
mov
es
js
imul
jmp
or
inc
scas
xchg
mov
popa
cmpsl
xlat
or
lods
test
pop
add
pop
fnstcw
jle
fnstsw
mov
mov
cmpl
lock
xchg
enter
mov
sub
ss
fidivrl
orb
pushw
cmp
stos
cmp
dec
js
mov
cmpsb
add
and
adc
push
aas
cld
flds
subl
mov
loope
pusha
sbb
push
dec
pushf
das
in
outsl
cld
js
scas
xor
out
mov
pop
shll
push
popf
jecxz
add
xor
lahf
or
std
or
mov
lret
lcall
lods
adc
sub
outsl
jle
sbb
out
testb
push
cmpl
dec
inc
cmp
int3
push
push
lea
mov
dec
fwait
xor
rcll
or
icebp
push
xor
jp
pop
mov
sub
or
fidivl
inc
add
mov
lds
dec
in
fxch
mov
xchg
xchg
js
add
xchg
ja
sbb
adc
pop
in
jg
mov
dec
or
inc
daa
nop
pop
sti
outsb
call
mov
cmp
mov
insb
add
or
jg
mov
dec
add
int3
aam
call
push
pop
inc
rcrl
je
mov
mov
out
sarl
xor
pop
ds
in
repz
sbb
jno
xchg
adc
sbb
mov
mov
outsl
xor
call
sbb
test
and
xor
inc
lods
mov
js
cltd
movsb
add
lahf
daa
clc
or
mov
ljmp
add
adc
jbe
fsubrl
aas
jle
pop
call
inc
mov
das
inc
pop
mov
aam
mov
mov
pop
fsubrs
and
and
mov
imul
push
jne
fprem
shlb
jg
adc
je
pop
movsl
loop
lock
daa
push
push
fwait
push
sti
mov
add
mov
mov
fstl
lcall
test
fists
psubusw
cmpsl
sti
pop
xor
test
adc
loop
xchg
inc
dec
std
in
push
mov
adc
movzbl
cltd
idiv
movzbl
jmp
rclb
dec
push
add
mov
jecxz
jle
incb
adc
adc
add
sarl
or
shrl
dec
ret
shl
pop
xchg
scas
add
divl
mov
mov
mov
push
les
push
lret
fadd
pop
and
cmp
xchg
sahf
inc
pop
in
jne
mov
and
imul
flds
dec
es
xchg
sbb
repz
int3
insb
fimull
jae
stos
xchg
xchg
stc
sbb
inc
fmull
imul
in
xor
mov
icebp
test
cwtl
ss
shl
cmp
aas
mov
inc
add
xchg
fidivl
cli
cwtl
in
je
cmp
enter
js
add
jbe
je
je
dec
test
cld
sub
pop
je,pt
out
cmpsl
arpl
loopne
sub
pop
add
xor
mov
jp
test
scas
loope
jge
jnp
pop
dec
cmp
jns
pop
xchg
sub
and
aad
cmpsb
into
mov
out
lock
rorb
sub
fnstsw
ljmp
out
aad
dec
mov
pop
ss
es
xlat
dec
ret
mov
pop
sbb
rcll
push
pushf
mov
and
lods
pop
push
cmp
loope
xchg
or
inc
movsl
push
out
sbb
cwtl
loope
dec
xor
shlb
inc
lods
popf
mov
push
stos
jecxz
enter
fcoml
push
aam
jno
mov
insb
push
mov
ret
mov
and
mov
push
or
outsl
or
dec
or
cmpsb
and
jnp
inc
rorl
jge
fistl
pop
xchg
mov
fidivrl
inc
pop
dec
mov
lods
xchg
cmpsb
nop
decb
lock
pop
pop
or
outsb
xlat
iret
sbb
shlb
jp
cmpl
cwtl
cmc
add
sub
jmp
je
aam
jecxz
xor
in
pop
and
subb
adc
dec
xchg
or
adc
in
rorb
push
mov
aad
fisubrs
jl
inc
xor
jne
out
xor
push
add
insb
pop
jns
fmull
arpl
and
aas
jl
add
aas
dec
cmp
pop
imul
repnz
fdivr
loope
inc
dec
sbb
xlat
xchg
mov
test
sbb
cmp
inc
les
dec
mov
inc
adc
int
sub
push
push
xor
loope
jecxz
ret
xlat
adc
xor
inc
push
popa
pop
sub
sub
jne
shr
xchg
gs
addr16
mov
lcall
pop
cmpsb
les
rol
jp
stos
xchg
orl
ja
jmp
and
sub
ljmp
jle
sbbl
pop
cmp
les
pop
dec
jae
call
hlt
push
push
dec
pop
jp
mov
jg
jp
mov
sbb
cmp
push
stc
ja
inc
sub
dec
repz
or
mov
movb
movb
movb
movb
movb
mov
mov
jmp
iret
xchg
mov
dec
daa
mov
pop
mov
mov
inc
cmp
adc
adc
xchg
cltd
add
dec
xorl
dec
mov
xchg
sbbb
push
jmp
pop
je
ret
add
fcomps
mov
jp
or
mov
rorl
jmp
or
testl
in
sub
push
cwtl
adc
and
sahf
icebp
xor
pop
dec
test
mov
int3
jno
imulb
pop
nop
dec
fcomps
nop
mov
lods
hlt
stc
inc
mov
ja
jns
mov
pop
je
sbb
cmp
out
fsubrs
pop
scas
ss
fsubrs
push
mov
test
pop
adc
lea
inc
movsl
lret
ss
orl
lahf
je
rclb
sbb
sub
std
sub
aaa
pusha
mov
mul
cli
out
fsubs
ret
in
sbbb
test
sub
jecxz
jecxz
in
loopne
add
add
adc
testl
outsl
aaa
jno
mov
js
mov
push
dec
push
mov
or
xor
jbe
into
adc
imul
ret
xchg
pop
not
mov
xor
inc
and
fwait
mov
pop
movzbl
adc
dec
dec
pop
bound
or
mov
pop
lcall
les
cmp
xor
pop
ret
cmp
out
roll
lret
stos
stos
push
add
addr16
fiaddl
mov
mov
outsb
scas
mov
mov
add
jb
mov
paddq
jle
not
mov
aam
mov
arpl
sbb
addr16
pop
push
pop
or
aas
lds
inc
hlt
pop
inc
xchg
pop
iret
lcall
pop
sub
adc
fs
stc
lret
test
mov
adc
or
xor
js
sahf
xlat
clc
int3
mov
push
fs
out
xadd
int3
pop
fdiv
jl
mov
mov
movsb
rcrb
iret
outsb
xchg
sub
or
xor
outsl
xor
push
cmp
repnz
sub
mov
ds
mov
inc
xor
dec
or
aad
dec
in
lcall
mov
lods
inc
in
sbb
loop
sub
std
cmp
xor
push
insl
adc
in
int3
mov
test
hlt
pop
fistpll
rcl
lcall
jne
or
adc
dec
in
adc
call
push
mov
sub
in
enter
lods
adc
out
pop
xor
pop
push
jb
adc
jno
repnz
jl
insb
shrl
xor
sbb
cli
jbe
cmpsb
jmp
pop
push
lock
inc
insl
jae
or
pop
in
add
xchg
sbb
incb
ret
inc
andb
push
mov
sbb
sub
outsl
fisttps
int
pushf
pop
or
dec
idivb
xor
or
jecxz
out
jmp
leave
iret
push
repz
jae
inc
int
call
les
rorl
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
jmp
and
mov
mov
dec
fidivrl
mov
adc
pop
adc
adc
cmp
or
int
dec
test
rorl
aaa
sbb
int3
mov
lea
sub
cmpsl
cmc
jmp
iret
test
getsec
fsubp
and
jne
js
mov
ja
lcall
sub
push
mov
push
popa
cmp
movsl
xor
test
test
sub
cmp
mov
lods
or
lds
in
and
scas
cs
or
xor
xlat
ret
cld
push
sahf
flds
movsl
in
jno
xchg
in
repnz
ljmp
push
fcoml
cmc
out
scas
add
push
pop
mov
dec
into
imul
sub
sbb
dec
pushf
lds
mov
add
ffree
iret
insl
mov
push
adc
out
loop
subb
xor
xchg
pop
lahf
out
mov
stc
inc
icebp
sbb
pop
dec
out
mov
xlat
adc
xchg
pop
mov
out
lods
mov
jmp
add
mov
addb
enter
push
ficompl
cmc
cmp
scas
dec
fmul
sub
outsb
imul
mov
cmpsb
mov
sbb
mov
mov
jnp
fmuls
daa
fwait
gs
lock
or
jno
xchg
icebp
lcall
sti
xchg
cwtl
sbb
outsb
mov
cmp
mov
fstps
dec
int
std
in
jns
lret
out
mov
popf
data16
lods
sub
push
mov
or
push
test
push
out
xlat
ret
mov
jge
pop
xlat
mov
sti
mov
stc
das
mov
shlb
insb
mov
sub
and
imul
insl
mov
cltd
dec
rcll
and
mov
xchg
rolb
cmpsb
xor
das
andb
leave
sub
jmp
mov
movsl
mov
loope
fwait
cld
ret
jns
fbld
out
cmp
push
ja
mov
sarl
dec
add
fwait
rol
inc
xchg
std
int3
movsb
or
or
dec
xchg
lods
lahf
outsl
dec
subb
pop
xlat
in
cmp
flds
decb
cmp
xchg
mov
push
aad
mov
fdivr
insl
loope
mov
jns
xchg
jmp
out
mov
lock
cmp
and
ret
xchg
mov
xchg
movsb
sbb
xchg
mov
les
xchg
mov
out
jne
jmp
xor
fbstp
or
pop
lahf
mov
cmp
sub
pop
dec
sbb
or
dec
dec
fs
lods
cmp
jcxz
fs
mov
inc
or
scas
and
arpl
fwait
cmp
test
sahf
sub
cmp
ret
ljmp
filds
ficoml
jae
jle
aas
mov
xor
adc
cmp
aaa
mov
mull
outsb
push
lock
call
mov
mov
pop
xor
sbb
mov
ljmp
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
or
xor
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
sbb
sbb
stos
int
stos
push
sahf
insb
insb
aad
adc
pop
adc
adc
das
fwait
scas
xor
push
mov
mov
jle
add
mov
jo
sbb
pusha
shlb
pop
insb
outsl
cltd
xchg
jnp
ds
pushf
pop
cmp
aaa
mov
insl
add
or
or
or
push
pushf
mov
mov
in
xchg
inc
ficomps
mov
push
mov
lahf
mov
inc
jb
test
nop
xor
idivl
jg
mov
jnp
scas
push
fidivrl
repnz
out
in
hlt
and
sub
stos
mov
jecxz
xchg
xchg
jle
jp
mov
test
es
add
into
xchg
dec
out
dec
sub
into
out
push
loop
cmp
jl
outsl
push
inc
mov
shrb
cwtl
jmp
out
fwait
mov
fwait
cmp
mov
nop
popa
jge
and
int3
stc
lret
nop
fisttpll
aas
in
push
popf
cmp
sub
push
stc
frstor
incb
stos
jg
lock
fcoms
lods
push
outsl
arpl
xchg
in
aas
mov
out
cmp
imull
inc
sbb
adc
push
pop
mov
jo
jmp
clc
jbe
js
and
cmpsb
imul
and
pushf
outsb
or
xchg
pop
and
xor
mov
shll
movsb
scas
cmp
stos
xchg
mov
iret
dec
insb
mov
lcall
inc
add
push
or
and
inc
pop
pop
mov
bound
enter
dec
mov
negl
out
jne
imul
adc
test
nop
mov
xchg
insb
and
cmp
fwait
mov
or
loope
fwait
push
nop
xchg
in
cmp
stos
shlb
enter
dec
decb
repz
test
sub
lea
inc
mov
xchg
lcall
lret
pop
das
stos
mov
jle
cwtl
shlb
adc
ljmp
jno
insb
mov
and
pop
lea
mov
popl
test
sbb
insb
pusha
call
out
adc
xlat
pushf
xchg
xchg
pusha
xchg
ffreep
jg
pop
add
sti
sbb
loop
rorl
into
popa
ja
out
push
out
fldl
cmp
arpl
jp
add
jp
or
xlat
mov
cmp
popl
and
je
mov
inc
pop
xchg
lea
cmp
pop
test
cmp
jo
shll
sub
inc
and
sti
sub
movsb
mov
sbb
add
dec
ror
popf
or
fistps
pop
inc
sub
xchg
add
loopne
add
mov
jmp
sti
push
aad
pop
pop
stc
fnstenv
xchg
mov
mov
movsb
mov
mov
mov
test
or
sbb
gs
push
mov
xor
imul
cli
and
in
sub
cli
jl
ja
sbb
insb
xlat
sahf
aam
mov
cmpsl
xlat
sbb
pop
bnd
fsubr
or
nop
pusha
mov
rorl
add
mov
pop
ss
and
mov
xor
jle
fwait
repnz
incb
cltd
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
adc
jmp
jne
rcl
cmp
adc
scas
insb
outsl
hlt
push
mov
int3
movlps
addr16
adc
aam
xor
fsubrp
enter
mov
es
pop
shll
add
stos
fcmovnu
dec
adc
mov
and
js
add
xor
mov
dec
dec
lods
imul
repz
jno
cld
mov
aaa
dec
imul
xor
xor
xchg
cli
or
in
gs
pop
push
int
in
dec
mov
stos
shl
inc
std
inc
xchg
xor
xor
dec
xor
lahf
fwait
mov
dec
add
sbb
movsb
mov
xor
pop
mov
sub
inc
push
lods
inc
pop
pushf
mov
sub
jmp
add
rcrb
loopne
jle
adc
iret
sub
cmp
push
and
push
mov
popf
andl
mov
sti
or
movsl
bound
repnz
mov
cmp
xchg
and
aad
inc
or
movl
jns
movsb
inc
and
xchg
out
inc
or
pop
pop
xchg
mov
stos
lret
scas
sub
adc
shrl
mov
xor
xchg
push
mov
jl
adc
fmull
mov
and
ds
stos
ret
pop
sbb
shld
shll
xor
sub
cmpsb
fwait
mov
fwait
pfrcpit1
pop
dec
in
insb
loope
rol
mov
cmp
stc
pop
push
cmp
les
inc
cmp
into
cmp
lods
dec
insl
dec
adc
imul
mov
push
sbb
add
push
mov
ds
scas
cmp
fisubrl
ja
add
or
add
adc
fldl
repnz
pop
cmpsb
xlat
dec
cmp
dec
fs
and
fldcw
add
pop
dec
mov
enter
insl
push
clc
std
lock
cmpsl
push
gs
fsts
cmp
mov
push
adc
jmp
jb
dec
adc
jb
fildl
jle
and
adc
cmp
loop
jns
cmp
sbb
pop
das
or
pop
out
popa
sub
and
xchg
mov
push
in
data16
xor
mov
test
pop
mov
mov
dec
pop
daa
inc
gs
mov
addr16
inc
bound
dec
push
outsb
add
js
jmp
repz
xchg
cli
xchg
xor
jbe
gs
movsl
nop
in
dec
xor
sahf
test
inc
orl
inc
lret
ljmp
dec
add
dec
xor
ljmp
jbe
lea
add
sahf
idiv
lahf
stc
mov
xor
out
lock
mov
sbb
push
adc
mov
pop
push
xor
sbb
fst
mov
jno
dec
sub
add
push
mov
arpl
mov
push
mov
jne
das
pop
xor
mov
and
dec
loopne
cli
test
and
ficoms
push
or
mov
lret
in
dec
add
push
ret
clc
in
or
daa
pop
xchg
xchg
ljmp
int
inc
xor
sti
jle
xchg
mov
mov
cmp
aaa
lea
arpl
jbe
mov
das
les
movsb
es
das
pushf
das
fmuls
mov
push
or
pop
cmp
roll
add
rcl
adc
daa
add
ljmp
sbb
iret
mov
pop
scas
and
adc
dec
aam
pop
and
popf
repnz
inc
ret
mov
out
ret
sub
rol
arpl
or
test
mull
js
out
int
sub
aad
sub
push
xchg
popf
dec
dec
loop
or
lods
inc
fldl
out
rclb
jns
cmpsb
pop
stos
movb
mov
rorl
push
push
pop
add
or
imul
mov
sbb
lcall
cmpl
movl
not
movl
mov
jmp
mov
jb
pushl
pushl
call
or
xor
or
sub
mov
mov
sbb
sbbl
andl
push
mov
sub
movl
movl
movl
jmp
mov
pop
test
iret
and
adc
movlps
ljmp
ja
inc
sub
push
xchg
inc
ret
rolb
fsubrp
dec
nop
in
pop
dec
jae
frstor
jnp
cli
push
jb
shl
mov
stos
aam
xor
dec
mov
sub
adc
xchg
mov
mov
inc
sti
lods
call
ss
mull
xchg
sar
loop
add
loop
sarl
pop
xchg
std
clc
pop
dec
add
mov
jnp
cmp
ds
mov
jno
imul
pusha
dec
xchg
pop
push
and
dec
mov
mov
mov
filds
js
in
or
xchg
in
clc
dec
shl
int3
aam
cltd
jl
sub
mov
ret
test
adc
jne
cmp
enter
adc
xor
xlat
dec
and
call
nop
call
mov
stos
xchg
push
ss
stc
mov
mov
push
or
jecxz
std
aad
test
jbe
xchg
stos
cmp
test
mov
mov
or
fst
pop
pushf
mov
clc
cltd
in
sub
or
loopne
add
cltd
popf
mov
mov
add
pop
push
das
scas
push
shr
xchg
push
cmp
and
push
data16
xchg
pop
stc
fisubrs
adc
ret
adc
dec
out
lock
outsb
push
sar
sub
mov
mov
loop
cmpl
and
push
and
mov
ja
jns
and
leave
push
repnz
pop
cltd
test
loopne
lock
test
pop
js
jnp
mov
mov
add
adc
mov
pop
xor
setnp
mov
pop
xchg
jp
les
xchg
test
pop
inc
pop
fld1
cmp
mov
mov
pusha
dec
mov
shll
dec
ret
jp
out
int
fisubrl
sub
cwtl
cmp
in
sub
loope
pop
mov
mov
movl
xor
subl
div
adc
imul
cmpl
mov
movl
mov
jmp
movl
jne
push
pushl
push
call
adc
adc
mov
add
mov
or
xor
sbb
movzbl
xor
mov
subl
xor
add
and
mov
movl
xor
xorl
div
sub
xor
mov
cmpl
movl
mov
jmp
movl
movl
jae
push
pushl
push
call
orl
movzwl
adc
dec
and
cmpl
mov
mov
jmp
mov
mov
jg
push
pushl
call
sbb
and
addl
adcl
adc
movzbl
sbb
mov
mov
or
jmp
bound
adc
popa
add
lcall
sbb
adc
or
out
xchg
aad
pushf
pop
mov
push
xor
fcoml
jb
xor
mov
add
lret
push
mov
testl
push
push
push
rorl
jmp
mov
inc
add
fdivrl
push
xchg
psllw
ds
xor
in
xchg
sub
add
xchg
mov
lods
pop
cmc
loopne
ja
in
andl
mov
fwait
popf
aaa
inc
int
push
loop
or
cmpsb
xchg
and
movsl
enter
sub
cmp
repz
in
ljmp
repz
inc
pushf
jmp
xchg
push
negb
jns
mov
dec
je
cmpsl
loopne
jp
imul
std
adc
in
jo
push
stc
or
xchg
imul
pop
adc
pop
add
mov
sbb
ret
lods
lds
dec
call
pop
sub
sbb
dec
add
ret
pop
jo
cs
pop
mov
int3
add
xor
int3
mov
mov
sbb
add
jne
xchg
xor
sarb
fcmovb
cmp
fcmovnb
xor
jecxz
mov
pop
pop
ret
cmpsb
push
add
push
jg
loope
jg
dec
call
sbb
in
stos
in
mov
jbe
lcall
aad
inc
push
push
mov
fwait
xor
mov
sub
ja
popa
mov
mov
mov
push
dec
adc
pop
mov
cmc
mov
in
dec
jno
mov
xchg
dec
div
iret
fs
push
scas
and
pop
mov
sub
adc
mov
cmp
fiaddl
cmpsl
in
aad
cld
lods
fdivs
fldl
roll
les
cwtl
push
pop
out
sahf
add
adc
leave
cmovb
outsb
std
lret
test
pop
sbb
push
outsb
hlt
sbb
inc
fcoms
sbb
mov
lods
in
mov
loope
daa
mov
call
test
clc
das
add
movl
addl
jmp
pop
repz
cmp
pop
data16
jle,pn
sbb
adc
movlps
dec
add
out
dec
aam
or
mov
divl
xor
std
pop
lcallw
mov
dec
sub
pop
fwait
ds
jl
js
lcall
pushf
data16
insl
mov
lods
in
stos
or
test
dec
jno
repnz
ja
jno
mov
inc
cli
xor
in
or
add
subl
inc
xchg
mov
cmp
sbb
inc
jne
sub
sahf
or
jp
xor
mov
test
mov
enter
cs
mov
out
cld
xlat
inc
pop
xchg
mov
add
adcl
xor
clc
jl
xor
lods
xchg
nop
mov
roll
mov
ficomps
push
int
adc
adc
dec
sub
bound
and
push
repnz
pop
mov
mov
fs
std
mov
cld
dec
loopne
popl
mov
in
adcl
xchg
push
jp
inc
repnz
dec
js
and
scas
mov
or
fwait
stos
shlb
ret
xor
sbb
aaa
sub
icebp
xor
dec
jmp
pusha
out
in
push
icebp
je
cmp
addl
shr
les
xor
and
fimuls
push
adc
lea
push
or
fnstcw
mov
adc
add
gs
out
pop
adc
push
add
cs
imul
push
ret
lods
xchg
jl
out
add
fistpll
mov
or
repnz
dec
cmp
pop
repz
enter
add
xlat
xchg
incb
in
pusha
push
cwtl
stos
or
pop
es
pushf
jo
sub
or
pop
dec
dec
lock
cli
mov
bound
mov
bound
pop
fidivs
xchg
fs
sti
jle
push
test
cltd
ljmp
sub
and
jns
dec
push
psubb
movl
xorl
mov
add
xor
or
xor
imul
cmpl
movl
movl
jmp
mov
jl
push
push
pushl
call
not
movzwl
adc
add
sub
xor
mov
xor
add
sub
and
mov
xor
and
sub
mov
mov
mov
sub
add
movl
orl
movl
movl
cmpl
movl
movl
jmp
mov
je
push
push
call
and
addl
orl
xor
add
or
mov
mov
xor
xor
sub
or
movl
and
mov
cmpl
mov
mov
mov
jmp
movl
movl
jb
pushl
push
pushl
pushl
call
neg
xor
sbb
or
neg
subl
imul
mov
imul
imul
mov
adc
mov
adcl
and
or
xorl
mov
xor
mov
add
mov
mov
addl
lea
cmpl
mov
movl
movl
jmp
movl
jae
push
call
notl
or
addl
movzwl
sbb
mov
sub
xorl
neg
inc
mov
cmpl
movl
movl
mov
jmp
mov
mov
jbe
push
push
push
call
and
andl
sbb
neg
movl
movl
cmpl
mov
movl
mov
jmp
movl
jge
push
pushl
pushl
pushl
pushl
push
push
call
neg
or
movzwl
and
mov
movl
xorl
xor
and
movl
mov
xor
jmp
int3
cs
lahf
push
pop
leave
sbb
xchg
mov
adc
adc
cmp
dec
xchg
cltd
lock
lds
mov
dec
adc
mov
or
xchg
add
lahf
push
icebp
lret
pop
jge
sarb
mov
in
adc
arpl
fst
inc
ret
adc
push
test
jo
dec
rcll
stos
lods
jne
test
push
xlat
outsl
sub
or
xchg
insl
in
inc
add
dec
sbb
add
call
xchg
mov
sub
das
mov
outsb
ret
cmp
inc
arpl
shl
dec
or
dec
cmp
mulb
fsubl
psubsw
inc
insl
mov
cltd
xlat
les
mov
addl
adc
in
rolb
push
sti
inc
mov
dec
leave
or
fidivs
pusha
scas
and
sbb
pop
mov
jnp
or
jo
add
mov
mov
push
sbb
sbb
sbbb
or
rclb
in
imul
cmp
mov
or
insl
push
add
call
cmp
mov
xbegin
repz
sbb
jne
xor
sbb
popa
cmp
adcl
xchg
push
out
push
je
hlt
fcomi
test
xchg
movsb
jne
xor
inc
ret
xchg
pop
jle
xchg
mov
insl
mov
fwait
aaa
mov
sub
push
js
or
fisubs
arpl
sub
test
cld
subl
jns
pop
sbb
pop
jo
lret
dec
sbb
inc
pop
call
sarb
lret
testl
pop
rol
jo
repz
clc
cld
inc
lds
or
in
ds
cmp
push
lcall
and
xor
adcb
adc
and
mov
cld
in
add
jae
lea
incl
add
inc
add
roll
in
incl
add
leave
inc
add
rorl
or
sbb
add
movl
xor
mov
xor
movl
sub
movl
movl
sub
mov
movzbl
and
add
or
mov
sbbl
sub
cmpl
mov
mov
jmp
mov
je
push
pushl
pushl
push
call
xorl
sbb
mov
adc
mov
add
adc
mov
lea
add
or
cmpl
movl
not
movl
jmp
movl
movl
jge
push
call
adcl
orl
xor
or
or
add
subl
inc
xor
xor
sub
sbb
sub
xor
xor
and
mov
mov
andl
movl
xor
movl
incl
mov
inc
add
cmpl
mov
movl
mov
mov
jmp
movl
mov
jb
push
pushl
push
pushl
push
call
mov
adc
mov
negl
andl
movzwl
xor
mov
adc
imul
jmp
aas
mov
cmp
add
stos
cmp
or
int3
movlps
mov
das
repz
je
or
test
sub
xchg
popa
dec
sbb
fistps
jbe
jl
inc
popa
mov
sbb
mov
sub
pop
jo
out
add
imul
inc
sub
lds
icebp
or
cwtl
jae
cs
ret
fs
sub
mov
mov
sub
bound
xor
out
cmp
int
xor
mov
mov
mov
adcl
fcmove
sbb
test
out
xor
sbb
cmp
or
fstps
incb
mov
out
ljmp
sbb
stos
fdivr
jecxz
fbld
push
xlat
dec
sbb
xor
lods
push
sub
inc
fiaddl
jne
jl
testl
jnp
mov
dec
cwtl
jge
in
mov
xchg
sti
out
popf
cs
mov
loope
arpl
ret
cmp
fwait
sbb
mov
mov
jp
add
or
ljmp
roll
jnp
cmp
loope
in
mov
inc
int
clc
les
dec
inc
jb
sub
sbb
je
es
cltd
sarl
pusha
push
jmp
xchg
push
pop
bound
cli
dec
and
fidivrl
out
les
outsl
enter
or
outsb
mov
mov
mov
and
push
dec
push
xchg
clc
insl
jno
ret
mov
pop
cmp
nop
cmp
xchg
mov
adc
or
sbb
dec
mov
push
push
loopne
cmpsb
dec
fsubl
add
lahf
clc
imul
fdivr
mov
xor
clc
bnd
mov
xchg
out
outsl
shrb
orb
cmpb
push
dec
call
jns
repnz
adc
inc
fists
sbb
jge
fmuls
adc
cs
cmp
add
pop
mov
xchg
insb
bound
lock
daa
mov
imul
adcl
xor
subl
mov
div
sub
mov
sbb
mov
cmpl
mov
mov
mov
jmp
movl
mov
jg
pushl
pushl
pushl
push
call
add
negl
sbbl
and
sub
xor
movl
movl
movl
sub
mov
mov
movl
xor
jmp
jbe
and
sub
std
jle
or
adc
pop
jo
jmp
ljmp
push
imul
pusha
mov
lahf
and
test
xchg
cmp
mov
leave
iret
loope,pt
out
push
sub
fsubrs
fstpt
cmp
int
nop
jnp
into
xlat
js
xchg
xchg
aaa
sahf
inc
scas
shrl
sbb
jns
lods
in
and
push
andb
cmpsb
jle
mov
and
mov
sarl
dec
fistpll
dec
mov
lret
movsb
inc
sub
xchg
cmp
sbb
inc
bound
mov
rcll
std
cmp
mov
push
pusha
xlat
xlat
rcrl
sbb
dec
push
xor
repnz
mov
jo
mov
xor
fsubl
test
mov
ret
xchg
inc
and
repnz
nop
fidivl
jae
jp
adc
mov
jne
inc
addr16
adc
test
out
jmp
jg
je
dec
cmc
sbb
jae
ja
push
xor
sahf
cli
loopne
add
sbb
xor
leave
adc
and
push
add
adc
inc
nop
mov
adc
sub
ret
add
stos
rclb
popl
jg
mov
push
xchg
orl
loop
or
mov
dec
add
xchg
push
into
add
cmp
nop
stos
sbb
stos
cmp
clc
lret
shlb
add
test
mov
cmp
insb
out
mov
dec
sti
xor
pop
sub
mov
loope
mov
lret
push
mov
lahf
xor
pop
sbb
sbb
ret
mov
orb
pop
dec
add
out
mov
push
inc
adc
mov
sbb
xlat
push
pusha
add
sbb
lret
pop
dec
inc
ja
adc
sub
addr16
test
add
nop
arpl
icebp
mov
add
imul
add
add
sbbl
mov
xor
xor
xorl
mov
div
xor
cmpl
mov
mov
jmp
mov
mov
jl
push
push
push
push
call
sbb
adcl
movzbl
adc
mov
mov
xor
adcl
mov
inc
movl
sbbl
movl
adcl
movl
cmpl
mov
movzwl
jmp
movl
ja
push
push
call
sbb
and
neg
or
sub
adcl
and
mov
mov
orl
sub
shr
mov
xor
sub
mov
imul
cmpl
movl
movl
movl
jmp
mov
jne
push
pushl
call
sbbl
sbbl
sub
xorl
adcl
cmpl
movl
movl
movl
movl
jmp
movl
mov
jle
push
pushl
call
notl
xorl
sub
xorl
mov
adcl
and
mov
sbbl
sub
add
mov
movl
sbb
movl
mov
add
or
mov
or
sub
mov
or
mov
sbbl
movl
incl
movl
movl
movl
movl
and
movl
sbb
movl
sbb
movl
notl
mov
add
mov
sub
cmpl
movl
movl
jmp
movl
movl
jg
push
call
and
and
andl
xor
negl
and
or
orl
mov
imul
sbbl
imul
orl
mov
sbbl
or
andl
mov
lea
xorl
push
call
mov
orl
mov
or
imul
xor
xor
xor
mov
add
cmpl
mov
movl
mov
mov
jmp
movl
jb
push
call
addl
sub
sbbl
movzwl
adc
adc
movzbl
or
and
sub
jmp
xchg
out
lcall
mov
cmc
stos
adc
push
add
adc
xlat
and
sub
and
addr16
loopne
dec
inc
inc
insl
dec
mov
pop
scas
imul
push
es
movsl
pop
xchg
pushf
dec
xchg
dec
cmp
jecxz
push
gs
rorb
inc
and
mov
lods
xchg
sbb
bound
stc
xlat
add
inc
loopne
cmpsl
push
sub
xor
les
push
cmp
inc
inc
bound
sbbb
add
or
cltd
sub
js
xlat
sub
shll
jl
ret
andl
sar
jns
xlat
sub
or
stos
les
jne
sub
enter
dec
into
jb
in
int3
add
and
sub
add
lea
lds
or
movsl
rcll
pop
mov
pop
mov
or
jp
sub
xchg
jle
cmc
aas
jb
nop
sub
mov
mov
sti
dec
push
pop
stos
mov
loop
push
sbb
loop
lea
mov
cltd
adc
jmp
lahf
mov
mov
xchg
jno
jl
mov
sti
int
dec
dec
icebp
fwait
movsl
in
cli
rcrl
mov
out
jle
mov
fs
or
or
jbe
sub
cmp
push
lock
pop
and
xor
stos
call
inc
jp
jns
test
fs
sbb
xchg
dec
outsb
lret
sti
mulb
add
pop
stos
lods
popf
adc
or
ds
fimull
jo
push
cmc
inc
jns
inc
stos
jle
mov
pop
imul
mov
push
mov
jp
xchg
int
dec
ljmp
jmp
mov
cmp
pushf
xor
dec
push
rcr
rorb
dec
cmp
xchg
aas
ds
addr16
sti
inc
imul
push
adc
ficompl
mov
or
notl
inc
gs
jp
push
mov
sar
or
sub
cmpl
mov
movl
movl
jmp
movl
movl
jb
pushl
push
call
xor
subl
movl
add
movzbl
adc
sub
adc
neg
xor
xor
mov
andl
div
xor
sub
add
mov
cmpl
mov
not
jmp
not
notl
jl
push
pushl
push
push
push
call
mov
add
mov
andl
add
subl
xorl
decl
movl
xor
movl
movl
cmpl
movl
movl
mov
jmp
mov
jae
push
call
or
adc
inc
adcl
or
adcl
adcl
movl
movl
xor
or
sbb
movl
movl
movl
movl
not
movl
movl
sbbl
movl
orl
mov
mov
add
mov
cmpl
movl
mov
movl
jmp
movl
movl
jl
pushl
push
push
call
or
or
sbbl
sbb
andl
and
xor
sub
sub
imul
cmpl
mov
mov
movl
mov
jmp
mov
movl
jle
pushl
call
sub
sbb
adc
sub
movzwl
sub
movl
mov
lea
cmpl
mov
movl
jmp
movl
mov
jbe
pushl
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
sub
mov
mov
mov
sub
sub
mov
and
mov
xor
add
mov
or
lea
cmpl
movl
mov
not
jmp
movl
jle
push
push
call
xor
adc
mov
mov
sub
and
xor
subl
and
sbb
mov
orl
sub
cmpl
movzwl
notl
jmp
movl
jg
pushl
push
pushl
pushl
call
subl
adcl
sbb
xor
add
add
adc
sbb
add
sbb
mov
movl
adc
movl
mov
sbb
mov
movl
neg
movl
mov
xor
mov
sbb
mov
subl
xor
addl
xor
andl
mov
andl
call
mov
cmpl
movl
mov
jmp
mov
jl
push
push
call
xor
or
or
mov
or
sub
notl
andl
mov
and
mov
mov
sbbl
mov
xor
movl
xor
andl
mov
xorl
call
addl
or
xorl
or
mov
adc
mov
adcl
xor
sbbl
xor
mov
orl
call
sub
mov
and
mov
mov
subl
mov
andl
jmp
aam
jle
cmp
xor
xchg
call
adc
push
loope
xor
test
inc
movsb
jge
js
add
adc
cs
push
xchg
clc
sub
fimuls
or
mov
adc
jmp
adc
int
sarb
xor
pushf
mov
addr16
mov
xchg
inc
pop
or
pop
adc
subb
fcmovnb
mov
mov
test
or
or
sbb
adcb
inc
mov
dec
mov
imul
xor
dec
push
aaa
sub
or
mov
push
aas
sub
icebp
out
cwtl
inc
dec
or
mov
sbb
lods
xor
leave
push
dec
mov
or
xchg
shrl
pop
jmp
jb
jp
and
loop
jp
int3
xchg
lock
jge
rcr
fadds
and
shll
dec
and
cmp
xor
xchg
push
and
fucomi
testl
push
in
jbe
xchg
andl
adc
loop
sub
out
and
inc
lds
xchg
fldl
imul
cs
adc
xor
sahf
xor
xor
mov
inc
pop
add
cli
cmp
xchg
push
sbb
popa
les
or
inc
dec
gs
arpl
stos
mov
sbb
clc
mov
jb
testb
cmp
pop
stc
addr16
push
add
jmp
xor
lods
rorl
in
out
int3
sarl
or
mov
or
cltd
mov
and
mov
inc
ficompl
xor
loope
sbb
xchg
xor
or
sub
andl
jp
sarl
or
imul
push
lcall
dec
sub
imul
mov
pop
push
or
adc
jb
adc
pushf
imul
js
ds
in
sahf
sbb
xor
je
imul
or
incl
add
ret
lock
orl
mov
addl
mov
call
mov
add
mov
mov
sbbl
or
sub
mov
movl
or
xorl
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
jmp
pop
dec
scas
jns
pop
sbb
stos
add
cmp
sti
adc
adc
push
dec
mov
fstpl
outsl
sbb
outsb
cmpsb
lret
dec
sbb
xchg
xchg
or
aam
out
pop
test
jmp
test
notb
add
fbld
xor
scas
xor
std
fildll
add
inc
hlt
fs
add
pop
or
cli
daa
sub
sahf
jmp
push
xchg
push
inc
jecxz
jecxz
jge
lret
push
jb
ret
cmc
int
inc
mov
out
cmp
popf
cmp
loope
xchg
jns
mov
imul
or
aam
aam
in
in
into
mov
mov
adc
sbbb
repnz
vpmullw
call
insb
push
sarl
arpl
dec
int
xchg
leave
cmp
pusha
dec
call
jnp
mov
rorl
push
mov
add
push
std
sbb
pop
inc
aaa
sti
scas
xor
and
jo
push
lret
add
std
cli
mov
xchg
andl
es
and
popa
test
loope
loope
sbb
das
dec
mov
jo
data16
add
mov
leave
or
les
adc
cmp
inc
xchg
sub
pop
dec
aam
xor
int3
repnz
jbe
sub
ret
or
xchg
cwtl
jecxz
in
sub
aas
orb
dec
dec
add
xchg
jb
fnsave
add
cmp
xchg
or
in
jbe
psadbw
jp
jmp
out
pop
fidivs
pop
mov
sbb
pop
push
jp
cwtl
movsl
clc
pop
add
scas
movsb
jno
dec
jle
sbb
dec
mov
mov
jl
loope
aad
mov
pop
mov
xor
popf
and
pop
sbb
arpl
out
scas
push
stc
int3
mov
mov
dec
sub
pop
shlb
in
and
adc
iret
add
mov
test
dec
lock
xchg
push
arpl
fsubl
in
xor
jmp
std
decl
ret
add
add
add
js
pushf
mov
movlps
cmp
xor
cmpsl
dec
pop
flds
lods
inc
dec
cltd
mov
pop
lahf
dec
adc
push
add
dec
ret
stc
adc
jns
repz
lea
or
pop
or
mov
popf
out
jge
jecxz
in
test
or
inc
or
out
sub
std
jge
cmp
xorb
lock
in
dec
xor
jne
and
cmpsl
push
call
movsl
inc
sbb
pushf
ljmp
pop
cmp
subl
imul
inc
cmp
cmp
sti
mov
gs
es
sbb
lods
movsb
mov
in
popa
aad
pop
scas
or
sldt
inc
cwtl
add
adc
push
jmp
sub
adc
or
out
mov
xchg
jl
mov
fidivrl
jb
clc
sbb
mov
xchg
jae
addr16
dec
lods
xlat
sbb
pop
icebp
push
adc
insl
lret
sahf
add
fsubs
aas
mov
adc
inc
shrl
xchg
in
pop
dec
cld
push
aam
in
out
and
mov
inc
addr16
testl
in
ret
in
mov
cmp
jle
dec
popa
jge
idiv
iret
fwait
lea
cmp
negb
dec
insl
mov
adc
movsb
dec
mov
fdivl
pop
push
ja
push
lahf
xor
rcr
insl
loopne
mov
divb
mov
test
mov
dec
loopne
cld
cli
sbb
dec
jae
mov
mov
lds
rorb
movsb
bound
sub
rcrl
mov
jbe
xchg
mov
sub
negl
imull
and
adc
pop
mov
nop
movsl
inc
inc
mov
pop
and
jge
movsl
sbb
xor
push
mov
lret
xorb
push
imul
pusha
dec
sub
fwait
ja,pn
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
jmp
ljmp
pop
inc
lea
mov
movlps
out
inc
ljmp
in
std
jge
leave
push
iret
stos
mov
cwtl
aam
daa
cmp
mov
imul
daa
jb
mov
jge
dec
cs
mov
mov
movsl
add
stos
les
clc
ret
dec
lock
cmpb
mov
push
pop
bound
sub
push
lock
pop
fnsave
add
shlb
mov
mov
and
jnp
adc
xchg
inc
aad
shlb
add
jg
ja
add
sti
ja
fucomi
xchg
jecxz
lcallw
xorb
mov
xchg
insl
in
adc
cmp
adcl
fists
push
cli
fcomps
mov
movsb
pusha
mov
add
dec
ror
jnp
push
jl
test
aam
gs
pop
or
faddl
andb
in
cmp
adc
lahf
sub
add
or
mov
and
frstor
jns
cli
sarl
daa
pushf
adc
sbb
push
jmp
jmp
in
sub
mov
dec
mov
fcoml
inc
fisubs
rclb
test
pusha
or
std
sub
mov
setnp
xchg
adc
lahf
fadds
sbb
xor
sbb
fmuls
or
insb
addr16
movsb
jbe
repnz
fists
push
enter
xor
mov
cmp
sbbb
les
fdivrl
jb
adc
dec
sub
adc
cli
imul
cld
fdivrl
mov
leave
mov
mov
xor
push
adc
adc
push
inc
outsb
popa
cmc
addr16
cmp
dec
insb
pop
loopne
xor
nop
dec
movaps
andb
mov
sub
dec
jnp
add
mov
shrb
jno
int
and
mulb
inc
add
add
pop
sbb
sbb
ss
cmp
js
mov
adc
adc
mov
pop
mov
inc
sub
fistps
push
mov
stos
int3
pop
lret
mov
push
aad
aas
movsl
mov
test
or
mov
cmp
insb
xchg
mov
xchg
sti
jb
jnp
adc
cmpl
fsubrl
test
or
adc
sahf
aaa
mov
and
jmp
cmp
sbb
mov
popf
adc
loop
popa
adc
sbb
jnp
or
or
pop
mov
loope
mov
fildl
mov
call
and
jmp
neg
mov
sbb
cmc
jnp
adc
mov
jnp
roll
inc
sbb
dec
orl
js
cmp
add
fs
das
cmp
push
mov
sub
cmp
fsubrl
pop
loope
fsub
shlb
es
inc
dec
inc
ret
xchg
sbb
adc
addr16
cmp
push
in
fs
jl
push
cmc
xor
jmp
jl
mov
icebp
dec
mov
push
mov
enter
adc
jmp
in
ret
jne
and
xchg
mov
ret
sbb
mov
and
arpl
insb
iret
test
push
inc
mov
sbb
inc
mov
fsubrs
dec
mov
jecxz
mov
adc
mov
lret
sbb
sub
test
push
mov
scas
inc
movsb
ja
add
arpl
pop
out
xchg
ljmp
ljmp
push
ret
cmpsb
lock
mov
fidivl
lods
inc
int3
ret
mov
dec
xlat
mov
divb
ret
mov
push
fwait
inc
lods
xchg
jg
test
outsb
sub
addl
cmpsl
push
sub
lret
das
jmp
lds
scas
in
cmp
sti
mov
dec
inc
inc
les
incl
mov
rorl
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
jmp
arpl
das
sub
sub
and
or
sub
movlps
pop
mov
stos
loop
mov
sbb
mov
mov
jg
push
lods
jecxz
dec
add
pop
pushf
sbb
inc
and
xor
push
cmp
mov
mov
adc
dec
mov
sub
outsb
dec
mov
mov
xchg
imul
and
daa
dec
ret
scas
das
xor
inc
pop
xchg
sbb
das
fstpl
cli
movsl
lods
mov
in
jae
jae
pop
and
or
in
movsl
lea
cmp
inc
xlat
sarl
fs
fs
stos
ds
mov
out
aad
testl
pop
jge
mov
jl
cwtl
add
ss
push
xor
cmpsb
mov
or
nop
jo
adc
mov
pop
xor
rorb
test
shll
sar
xchg
aas
icebp
pop
cmpsl
lret
stos
jnp
xor
xchg
pop
and
shl
mov
jecxz
fists
push
add
xrelease
or
ss
dec
bound
or
mov
es
rorb
nop
cmpsb
imul
lret
mov
push
sahf
sbb
cmp
jl
in
out
sbb
add
stos
cmp
negb
lods
loop
xchg
rcrb
sub
add
add
mov
mov
aas
add
sti
gs
mov
push
fbstp
fsincos
jmp
xor
ficomps
mov
xor
sbb
sub
aad
nop
popa
mov
mov
push
mov
inc
aad
in
sbb
mov
clc
imul
xlat
xor
inc
lock
clc
into
scas
and
fistps
xor
sahf
ret
mov
test
scas
sti
dec
lock
orl
cmpsl
mov
pop
test
sti
push
dec
xchg
sub
mov
mov
jmp
xor
fisttpll
and
rcrb
insb
out
adc
adc
pusha
ret
das
sub
cmpsl
sarb
dec
mov
and
lret
lods
xchg
xchg
cmp
sbb
add
push
test
and
movsb
mov
shlb
jmp
dec
es
xor
xchg
xchg
test
inc
xor
mov
ds
stos
cmp
mov
xchg
mov
cmc
outsb
leave
aad
scas
pop
test
xchg
gs
mov
adc
icebp
fwait
mov
pop
pcmpeqd
cmp
push
dec
mov
mov
mov
rorl
sub
adc
jns
push
xchg
dec
sbb
fisubrs
mov
mov
adc
sahf
xor
pop
mov
cmp
inc
push
adc
rorl
fwait
mov
inc
push
daa
stos
mov
jo
jne,pt
or
lret
adc
or
data16
iret
call
outsl
xchg
outsb
ja
pop
mov
add
es
sbb
mov
inc
mov
or
inc
les
fcmovb
hlt
sub
and
jle
sbb
pop
cmpsb
lret
jae
dec
into
fsub
cld
fisubrs
scas
push
push
fdivl
cwtl
mov
pop
mov
fdiv
pop
movsl
pop
mov
jne
xor
lcall
adcb
mov
arpl
push
pop
out
scas
pop
jne
fsub
mov
test
subb
push
scas
or
add
push
mulb
test
sub
in
mov
bound
ret
scas
pop
ja
mov
dec
ret
outsb
fists
mov
fs
popf
dec
lcall
xor
out
jmp
sub
gs
dec
not
adc
fcomip
popf
fsts
adc
sub
cmpl
push
fwait
ds
pop
mov
mov
js
insb
mov
arpl
or
jb
pop
or
in
inc
pop
test
dec
aam
bnd
imul
or
decl
sar
pushl
add
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
jmp
les
jp
pop
test
mov
out
adc
movlps
lret
pop
mov
mov
mov
mov
mov
inc
inc
cwtl
xchg
sub
in
sbb
sub
std
sarb
incb
fidivrl
loopne
fadd
add
cmp
shll
call
jns
fistl
or
lds
adc
lcall
shrl
dec
adc
aam
jne
xor
clc
pusha
mov
imul
mov
iret
aaa
fcoms
jecxz
mul
dec
in
sahf
inc
outsb
cltd
sub
ja
add
lahf
mov
fs
cli
xor
jp
mov
mov
push
imul
jl
lods
cmc
lret
sub
xchg
ds
xor
jge
xor
imul
jecxz
scas
mov
xacquire
ja
shrb
jg
adc
sub
cmc
testl
mov
aam
je
xor
repz
addr16
mov
mov
or
lds
divps
scas
lock
jge
out
repnz
dec
and
or
or
sub
pop
and
fcmovnu
inc
cwtl
ds
adc
or
adc
int
lret
sbb
and
cmc
dec
ja
out
rcr
pop
cmp
mov
pop
call
push
jae
cs
pop
adc
arpl
sub
mov
inc
out
lock
mov
loopne
adc
pushf
fidivrl
fdivs
cli
sbb
jl
mov
adc
jo
push
scas
sarl
cld
inc
in
inc
rcrl
dec
xchg
sbb
ljmp
pop
dec
xchg
lcall
lret
mov
xchg
jo
xchg
push
inc
jns
orb
aaa
fldcw
daa
jl
pop
jp
and
aam
jno
sub
inc
out
mov
test
dec
hlt
jge
inc
call
and
xchg
xor
cmc
mov
mov
mov
mov
xor
xor
mov
call
jmp
cmpsb
test
fistpll
and
daa
cli
push
adc
movlps
mov
mov
out
out
ds
jno
lret
loopnew
rolb
pop
and
sub
fidivs
pop
dec
dec
sub
xor
cmpsb
mov
aaa
aad
stos
ss
test
test
loopne
iret
mov
sub
in
filds
repnz
pop
and
or
sbb
cs
jo
mov
mul
pop
lods
jp
orb
lods
nop
push
popa
sbb
enter
xchg
call
xchg
pop
in
js
mov
shl
or
lret
sti
call
inc
rcrb
fisttpll
pop
dec
pop
rclb
add
sarl
stos
insb
mov
push
aad
mov
pop
sub
mov
and
orb
dec
pop
mov
stc
or
add
imull
dec
ret
ret
jmp
jl
cltd
sbb
adc
mov
iret
addr16
mov
mov
inc
mov
rcrl
fnsave
push
adc
subl
mov
cmc
mov
sub
jle
push
and
in
add
sbb
ret
xchg
ret
and
mov
cmp
xchg
cmpb
outsl
movsb
push
add
and
das
push
push
lods
and
loopne
dec
jl
jae
icebp
fmuls
mov
mov
or
sub
xor
or
fs
enter
mov
push
jb
clc
les
shlb
mov
push
push
jno
and
in
or
jp
and
cmp
inc
or
outsl
jnp
push
jl
cmp
aaa
stc
cwtl
inc
xor
add
test
adc
mov
pop
mov
les
lods
or
dec
and
xchg
out
repz
test
incb
fildll
xor
push
fdivrl
cmpsb
lcall
jle
lods
sbb
mov
xchg
lahf
cld
stos
jge
lahf
pop
pusha
ret
adc
mov
cmp
mov
xchg
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
push
insl
mov
pop
mov
sti
jle
inc
inc
stos
push
ficoms
adc
pop
sbb
lahf
pop
rcll
stc
cmpsb
outsl
inc
add
mov
jle
xchg
sub
dec
dec
push
dec
shld
pushf
xor
es
push
cmp
xor
xchg
inc
xchg
test
add
ret
sti
and
and
sti
pop
ficoms
setae
ficomps
scas
fadd
sbb
test
popf
mov
fst
push
mov
pop
or
cli
xchg
and
pop
loope
jge
test
adc
nop
mov
add
fisttpll
pushf
jns
js
filds
mov
mov
push
stc
xchg
push
cmp
and
into
xchg
daa
lods
fwait
repz
xchg
out
cld
mov
jge
inc
xchg
mov
nop
insl
adc
jnp
arpl
insb
ljmp
outsb
jo
sub
cmp
inc
loopne
or
ljmp
mov
or
mov
and
dec
movsb
xchg
pop
mov
iret
mov
xchg
push
inc
or
scas
sbb
bound
lods
push
bound
out
or
scas
and
rclb
sub
jo
pop
mov
and
cs
mov
scas
test
leave
repnz
nop
and
adc
lods
or
mov
mov
mov
cmc
pop
jecxz
mov
inc
and
mov
inc
int3
xlat
dec
fstpt
push
push
xchg
movsb
imul
jecxz
jnp
sub
push
mov
push
ds
mov
push
push
insl
clc
cmpsl
cmp
add
std
int
jmp
cld
dec
lret
inc
xchg
mov
ljmp
jmp
jnp
fisttpll
and
pop
stos
pop
test
pop
ss
mov
and
pop
mov
out
jg
jl
mov
loopne
pop
add
lcall
aaa
xchg
popf
scas
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
jmp
adcl
inc
cmp
or
jle
ficoml
adc
adc
shll
mov
hlt
inc
mov
xor
rorl
cmp
xor
cld
cmp
cmp
or
push
mov
in
inc
fcmove
pop
mov
adc
andnps
fisttpll
pop
test
push
rclb
cs
stos
sub
pop
pop
jae
testl
arpl
mov
cwtl
lret
pushf
icebp
aam
xor
push
pushf
test
jl
add
dec
icebp
notl
ja
addr16
sbb
jne
adc
sub
roll
lea
std
pop
add
adc
leave
mov
and
push
xchg
inc
sbb
sbb
sbbl
mov
jle
pop
mov
das
sbb
sbb
or
xor
ja
call
andb
mov
sub
lret
incl
je
stc
push
and
in
lahf
add
sub
mov
and
nop
add
jge
add
sub
jl
scas
adc
mov
jne
mov
imul
cs
std
js
cs
mov
add
sub
aas
cmp
xor
and
out
mov
lods
loope
jle
std
outsl
movsl
push
popf
xorb
jge
jp
xor
mov
je
or
pop
sbbb
rorl
jl
mov
pop
daa
lahf
lahf
lea
in
dec
sub
out
inc
sti
jne
cltd
in
mov
nop
cltd
sub
lea
mov
push
xchg
cmpsb
arpl
mov
or
shlb
or
inc
movsl
jmp
cmpsl
dec
inc
xchg
cmp
pop
loop
cwtl
jg
push
or
or
mov
aam
sti
loopne
ds
outsb
pop
jne
push
adc
int3
pop
inc
movsl
mov
inc
pop
cmp
divb
lret
mov
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
jmp
stos
in
inc
cwtl
inc
sbb
fidivs
cli
add
adc
movlps
iret
jae
mov
jbe
icebp
out
test
xchg
idivb
sub
push
out
imul
das
mov
sub
stos
pop
je
cmp
or
addb
or
aas
push
iret
in
iret
or
out
nop
mov
call
hlt
jbe
stos
or
mov
dec
cli
xchg
push
movsl
inc
int3
in
lcall
mov
lahf
add
int
lcall
lret
inc
out
aad
and
fldenv
daa
addr16
push
pop
es
sarl
nop
mov
mov
push
ds
loopne
out
mov
imul
rcrl
jle
mov
jns
xlat
leave
les
std
mov
addr16
incb
mov
imul
jg
fdivr
add
mov
inc
subl
mov
decl
add
mov
iret
push
add
dec
sahf
or
mov
scas
or
das
jp
and
leave
lret
and
xlat
mov
mov
fwait
loop
pop
or
mov
rol
or
clc
push
in
jne
xor
xor
jb
pop
push
pop
movsb
xor
mov
lret
mov
mov
aas
les
xor
adc
lock
nop
jae
sbb
pop
xor
out
fnstcw
repz
push
fs
int
pop
xchg
mov
or
mov
jno
sbb
fldenv
jp
fwait
cmp
cmc
arpl
and
xor
std
push
xor
repnz
cli
fld
repnz
lret
inc
cmp
int
xchg
jbe
jb
jg
and
lret
cs
mov
scas
fidivs
mov
lret
push
in
sbb
mov
cmp
jp
es
iret
jle
pusha
jg
jb
and
popl
mov
fdivr
jge
add
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
jmp
enter
cmp
jp
aas
inc
stos
movsl
out
lods
xor
movlps
and
mov
insb
mov
loop
pop
test
iret
dec
add
or
je
stc
push
mov
nop
xchg
dec
dec
sahf
test
fcmovne
ss
mov
adc
lds
stos
cmp
ret
call
or
int
in
stos
ja
roll
dec
push
mov
jmp
mov
cmp
mov
inc
dec
cmp
push
dec
add
test
bound
repz
push
lds
mov
jne
push
mov
inc
mov
mov
cmpsl
dec
xorl
je
push
dec
mov
xor
arpl
adc
test
and
pop
adc
cmpsl
or
pushf
std
inc
sub
stos
lods
adc
mov
xchg
inc
sub
push
jb
imul
cmpsl
or
xrelease
sbb
out
cltd
insb
mov
xlat
mov
mov
mov
jmp
dec
mov
push
ja
shr
test
lock
loope
xchg
fistps
rclb
dec
mov
dec
and
rorl
mov
xchg
xchg
add
pushf
add
rcll
insb
push
lds
pop
pop
es
push
lods
pop
cwtl
clc
fcoml
cli
and
adc
xchg
mov
jo
or
movsb
into
in
lods
test
cmp
push
mov
sbb
sbb
pushf
inc
sbb
fcoms
cmp
mov
testl
popa
sahf
inc
out
mov
xor
sbb
dec
loope
aad
fiadds
ficomps
sub
xchg
aad
mov
popf
fsub
mov
testb
leave
daa
jp
jmp
mov
loope
mov
jp
or
mov
ds
fnsave
sub
push
jge
into
lds
cmpsb
insl
insb
lea
ret
pop
adc
out
sbb
mov
mov
push
les
add
decl
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
jmp
xchg
sbb
les
ficoms
push
enter
movlps
repnz
jmp
mov
jecxz
sbb
and
and
fs
test
fildl
mov
add
lds
shl
les
shrl
push
cmp
cmp
mov
js
or
pop
mov
sbb
inc
dec
out
ret
mov
rolb
hlt
popf
fbstp
and
out
mov
jg
lea
je
xchg
rolb
pop
into
and
loope
mov
mov
cmp
cmpsb
out
jne
add
push
adc
scas
icebp
lcall
imul
push
and
add
call
movsb
inc
int3
movsl
outsl
xchg
pushf
ljmp
push
sub
adc
jae
mov
ljmp
aad
sti
addr16
mov
jle
or
mov
dec
inc
adc
add
int
sti
jne
mov
repz
es
add
xor
int3
nop
push
xlat
and
cli
pop
adc
push
data16
outsb
dec
js
adc
imul
sarb
in
fnstsw
les
loopne
sub
nop
ret
nop
sub
sub
sbb
sub
mov
test
pop
jb
mov
adc
mov
mov
push
add
popf
mov
lods
nop
add
loop
cld
xor
push
add
xor
pop
pop
into
andb
and
adc
mov
lds
or
call
out
in
out
jbe
ret
sahf
jo
xor
or
cmp
js
or
repz
f2xm1
gs
cltd
jg
sbb
xchg
inc
cli
es
pop
jecxz
push
ljmp
ss
push
inc
cwtl
jecxz
xor
adcl
pop
pusha
xchg
daa
add
aad
add
fnstsw
adc
ret
les
out
test
dec
dec
test
lea
sub
xor
mov
push
xor
outsl
push
jb
shrb
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
jmp
xor
inc
popa
inc
and
subl
int3
movlps
bound
fidivrl
adc
mov
or
fld1
aam
ds
mov
loop
push
rcrl
cwtl
sub
arpl
and
mov
push
je
pop
adc
xor
jb
movl
pop
mov
or
cmp
sti
mov
fcoms
addr16
mov
add
add
push
sub
adc
add
xorl
pop
pop
test
std
insb
xchg
frstor
push
sbb
sbb
jnp
cltd
mov
or
ds
shrb
pusha
cmpsb
cmp
jns
xchg
dec
jne
or
or
loop
pop
clc
jl
lock
cmp
dec
xor
xchg
inc
push
mov
les
repz
ja
aad
adc
repnz
lods
xlat
xor
inc
adc
ret
adc
jae
ljmp
sub
cmp
test
pusha
pop
cmp
sub
or
aaa
testb
jmp
xchg
mov
iret
pop
and
mov
push
insb
pop
sbbb
imul
je
nop
fdivl
pushf
pop
mov
movsb
inc
cli
or
dec
test
ficoml
les
fists
fimull
std
xchg
lds
xor
jge
sbb
aad
adc
incb
lret
pop
data16
jns
test
cmpsl
add
sub
cmpl
loopne
aaa
pusha
mov
mov
pusha
insb
pop
clc
push
adc
imul
xchg
std
sub
repnz
in
jae
xchg
insb
mov
cs
mov
mov
xor
pop
int3
mov
pop
insb
ret
gs
dec
inc
dec
cmp
lret
dec
addr16
dec
mov
or
mov
or
icebp
lods
and
cld
incl
add
jmp
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
sub
mov
and
ds
jle
rclb
ret
jmp
mov
repnz
popf
rcrl
es
jnp
sub
cmpsb
jae
nop
rcrb
mov
sbb
cmpsb
outsb
sti
les
inc
jne
and
mov
aas
mull
xchg
jno
ljmp
adc
mov
xlat
inc
loope
idivl
lock
mov
cli
jecxz
jg
aam
lock
arpl
dec
sbb
xorl
sub
pushl
mov
mov
cmc
jp
lahf
shl
pop
lret
xor
cs
xchg
cmp
mov
cmp
or
jne
divl
push
test
aad
xor
xchg
sub
in
and
lret
filds
xor
cs
lods
dec
repz
xor
test
mov
jne
bound
pop
movaps
orb
adc
fnsave
xor
mov
and
xor
roll
push
and
addr16
loopne
repz
cmp
stos
sbb
pop
shlb
cmp
dec
mov
sub
adc
mov
rcrl
enterw
xlat
cli
jmp
push
xor
shlb
jns
aaa
or
mov
repz
insl
lds
lea
lods
xor
jne
in
mov
xor
aad
mov
xchg
and
lods
xorb
xor
mov
cmp
aaa
popa
insl
cwtl
push
insb
and
clc
mov
in
mov
or
mov
jo
ret
adc
fstl
adc
enter
in
sbb
js
enter
jnp
daa
dec
mov
shrb
movsl
test
sbb
xchg
popa
aam
ljmp
sti
add
test
shrl
add
call
or
jp
push
pushf
lcall
cmp
dec
xor
sub
shlb
push
pop
sbb
mov
xchg
jecxz
repnz
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
jmp
out
imul
cmp
adc
movlps
xlat
add
movsb
cmp
jb
addb
add
mov
in
lahf
push
xchg
xchg
xlat
mov
out
mov
push
hlt
out
jo
mov
lds
es
scas
fsub
ud1
sahf
mov
dec
aad
test
enter
es
icebp
test
call
iret
push
cs
inc
xor
out
lea
pushf
push
xchg
stc
jbe
cmp
pop
adc
pushf
loope
mov
mov
scas
std
imul
pop
mov
lock
mov
sub
movsl
call
test
push
das
jne
xchg
push
in
jmp
add
andl
xchg
xchg
pop
popa
rcll
add
ret
jb
mov
fsubrl
in
mov
movsl
test
popf
outsl
mov
adcb
push
add
jle
scas
and
ja
ss
fcmove
fimull
xor
xor
push
mov
lds
sbb
jp
push
jno
daa
test
ficoml
imul
xchg
push
repz
pop
xchg
orl
push
mov
pop
and
pop
fldcw
ss
mov
mov
test
jb
inc
sub
inc
ds
aad
mov
nop
mov
push
or
leave
or
lcall
mov
fcomip
in
cmp
add
cld
jae
popa
mov
inc
lcall
inc
inc
call
sub
add
rolb
sub
nop
gs
and
mov
nop
repz
pop
inc
pushf
rorl
gs
cmp
int
outsl
mov
push
jns
pop
cmc
add
mov
cmp
push
addr16
test
and
mov
mov
pop
sub
aad
add
push
rolb
lock
mov
das
popf
xchg
movsb
mov
inc
imul
fs
test
mov
out
sti
jbe
jne
cmp
push
push
es
pop
test
out
rorl
dec
sub
std
decl
mov
mov
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
jmp
cltd
outsl
sbb
and
jne
mov
int3
movlps
sbb
ljmp
sbb
jge
leave
sbb
mov
rcll
inc
inc
cltd
shlb
icebp
jo
ficompl
test
jmp
inc
subb
in
les
notl
mov
cli
test
aad
lea
dec
ja
les
inc
xchg
or
push
inc
in
cwtl
sbb
stc
jecxz
mov
add
ja
sub
push
test
dec
fcomps
sbb
and
out
pusha
push
ja
hlt
jge
mov
push
je
outsl
cli
dec
cmp
xor
or
push
lods
lods
adc
iret
pop
or
inc
lcall
push
lods
and
jae
jge
fwait
aaa
xchg
shll
xor
ret
rolb
test
mov
roll
stos
rcll
enter
jno
mov
xchg
and
or
sbb
and
ror
inc
jl
cmpsl
xchg
xor
xor
outsl
fcomps
mov
cld
in
inc
mov
dec
mov
idivl
xchg
ds
jmp
test
xchg
icebp
aaa
cltd
jbe
cwtl
pop
inc
sub
cli
xor
cltd
js
movsb
testl
hlt
jno
hlt
jb
rclb
pop
shlb
arpl
mov
cmpl
lods
pop
cmp
push
mov
lods
adc
add
cld
pop
or
jb
aad
mov
adc
dec
inc
sbb
push
mov
in
jecxz
js
lods
xor
lret
jmp
int
lods
or
loope
lahf
mov
movsl
div
jbe
mov
sub
stos
out
ret
sub
addr16
jae
cmp
mov
add
fucomp
cmpsl
push
lods
add
dec
and
sub
pusha
movsl
inc
xor
lods
aas
xor
aas
mov
xor
jnp
pusha
dec
inc
ljmp
mov
fnsave
and
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
jmp
jg
loope
mov
mov
mov
test
adc
loopnew
dec
adc
in
xchg
xor
je
cmc
insb
mov
out
sub
xchg
fcmovnbe
aas
lds
pop
mov
or
stc
out
cmpsl
pop
jmp
sbb
cwtl
aam
cli
fdivrs
sbb
sub
jmp
inc
cltd
in
xor
pop
sub
rolb
and
lcall
mov
add
insl
and
or
add
pop
pop
add
jl
lahf
jns
test
shr
clc
iret
enter
sub
lea
push
xchg
mov
cli
cld
fxch
mov
jge
imul
sahf
mov
adcl
imul
pop
inc
push
fldl
in
ds
inc
in
mov
lret
jle
and
mov
pavgb
adc
loop
out
pop
adc
push
cltd
int
xchg
pop
mov
iret
movsl
loop
sub
mov
sbb
int
sbb
push
xor
fiaddl
mov
data16
dec
lret
mov
cmpsl
push
push
leave
jnp
add
mov
mov
outsl
push
stos
push
xchg
outsw
add
cli
out
pop
push
popf
out
mov
pop
push
in
mov
movsl
inc
lods
adc
jl
fidivrl
in
jmp
mov
mov
push
fwait
xchg
inc
mov
mov
sbb
lods
sbb
popa
cwtl
ljmp
pop
mov
or
adc
bound
mov
movsb
insl
mov
negl
xor
add
xor
rol
imull
cli
icebp
in
push
incl
ret
jb
arpl
cwtl
or
mov
jb
cmp
sub
insl
in
push
imul
dec
push
sbb
addr16
hlt
and
or
cltd
leave
mov
pop
sbb
adc
call
pop
popa
inc
mov
jle
mov
jle
movsb
andb
cmp
jmp
fbstp
arpl
mov
push
scas
outsl
nop
jae
add
adc
ds
or
or
mov
mov
mov
jmp
cltd
jns
dec
and
cltd
pop
sub
sarb
mov
adc
movlps
dec
imul
jecxz
mov
fisttpll
hlt
sbb
dec
mov
loope,pt
jo
and
xchg
test
mov
lahf
xchg
mov
rorl
dec
pop
pushf
repnz
or
pushl
lea
cmp
sub
sub
mov
fistl
into
or
or
mov
out
pop
mov
mov
xchg
adc
fiadds
push
insb
loope
mov
jge
ret
hlt
vcmpps
lods
js
leave
imul
outsb
adcl
inc
dec
dec
ljmp
jne
lret
in
pushf
cmp
push
dec
pop
cld
rclb
pop
mov
xor
mov
fidivs
jl
mov
frstor
imul
mov
pop
shlb
movsl
dec
lods
pushf
shlb
pop
pop
push
or
mov
dec
dec
cmp
and
stc
and
xor
sti
rcrl
inc
fdiv
sti
xchg
jge
outsl
adc
dec
repnz
sar
pop
sbb
clc
leave
sbb
push
push
cs
call
sarl
push
jae
fisubrl
jnp
dec
adc
das
jb
dec
xchg
sbb
xchg
movsl
cmpsl
lret
dec
cmc
fwait
add
mov
xchg
popf
mov
push
xor
insb
pop
lcall
fistpl
shrb
repnz
add
jne
pop
mov
addb
repz
xchg
mov
sub
adc
sub
xchg
xchg
inc
mov
negl
in
int3
pop
clc
in
add
rol
sbb
pop
push
jmp
pop
jl
adc
sbb
and
sbb
test
push
das
mov
repnz
addr16
push
ljmp
sbb
out
push
add
cwtl
xorl
inc
mov
pop
push
rcrl
rorb
inc
jecxz
rcrb
sbb
xchg
mov
dec
adc
cmc
ficoms
imul
or
decl
test
decl
jmp
sub
sbb
sbb
cs
icebp
mov
and
cmc
scas
adc
adc
xor
pop
popa
fcomi
lods
fwait
jo
ret
push
pop
push
pop
jl
jnp
jge
mov
in
insb
pop
out
dec
test
out
inc
adc
mov
xchg
fs
jns
push
stos
xchg
sti
movsb
xor
xlat
fildll
xor
push
jbe
iret
bound
and
cmp
gs
jl
cmp
and
shrl
and
xor
loopne
pushf
movsl
scas
rolb
mov
movsl
mov
ljmp
or
pop
jnp
movsb
inc
lds
dec
or
lea
pinsrw
jg
adc
cmp
xor
add
xchg
in
popa
jne
or
mov
mov
pop
inc
mov
lods
lock
sub
fidivrs
les
and
inc
lcall
xchg
adc
call
dec
xchg
sbb
lods
mov
jmp
mov
push
push
mov
jp
ss
fisttps
mov
gs
jmp
ljmp
push
xchg
out
inc
fildl
and
rorb
push
rolb
std
jmp
insl
pop
push
cs
ja
pop
mov
add
out
xchg
out
int
inc
inc
das
jl
add
push
jne
and
sub
jns
repnz
repnz
mov
adc
jp
mov
sub
mov
ljmp
cmp
or
rorl
inc
inc
xchg
or
push
and
inc
in
push
fadd
xchg
fidivrs
fisubs
sub
mov
cmp
imul
loop
stos
jnp
test
call
outsl
fmuls
nop
and
scas
sub
aas
jmp
mov
bound
aaa
push
add
nop
pop
je
xor
testb
lea
mov
fld
xchg
pop
mov
inc
lcall
adc
into
sub
je
imul
or
add
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
jmp
insl
ja
add
popf
sub
xlat
mov
js
stos
adc
adc
rcl
jmp
dec
sbb
pop
jge
dec
lds
repz
fwait
adc
sub
adc
subb
xor
cmpsb
adc
cmp
jne
mov
push
and
cmp
sbb
les
xor
add
scas
les
repz
rol
jp
lahf
loopne
testl
sbbb
jmp
inc
addw
rcrl
jmp
repnz
xchg
imull
xor
cmc
push
xchg
rcrb
mov
jl
imul
cmpb
cltd
sbb
cmp
sub
inc
das
fbld
xchg
sbb
movl
shlb
out
out
out
jl
or
mov
jo
mov
pop
sub
dec
icebp
jbe
and
sarl
pop
cmp
cmp
test
push
inc
loopne
lcall
lret
out
sbb
xchg
jp
inc
fiaddl
add
xchg
pop
sub
inc
add
jb
inc
daa
jbe
or
inc
sbb
adc
add
dec
popf
div
xchg
cmpsl
lods
pusha
jp
stc
pop
cmpsb
inc
ljmp
lods
mov
and
pop
mov
bound
pmaxub
sbb
das
ret
mov
pop
xchg
xor
imul
into
pop
lahf
push
push
insb
shr
lret
call
xchg
leave
mov
sahf
inc
loope
adc
movsb
lods
cltd
mov
xchg
and
xchg
daa
insl
mov
sub
xlat
nop
push
jg
pop
cmp
jmp
dec
je
addr16
addr16
cltd
roll
jmp
inc
jge
repnz
xchg
mov
cmpsb
nop
jp
fidivrl
xor
xchg
mov
adc
dec
dec
sub
mov
popf
cmp
cli
mov
in
lahf
outsb
adc
cltd
out
mov
and
mov
ds
mov
mov
xor
shlb
decl
lock
xor
xor
mov
mov
jmp
addr16
pusha
out
sbb
xor
mov
adc
movlps
sbb
xor
ss
bound
jb
scas
out
sbbl
stos
sahf
out
add
jg
repz
and
rolb
adc
out
daa
mov
xchg
mov
insl
add
mov
in
mov
pop
js
jb
push
jae
shll
jbe
add
push
push
cmpsb
int
mov
or
push
pushf
mov
mov
sbb
push
cmpsl
cmc
jnp
push
out
inc
nop
jmp
bound
lahf
bound
ljmp
push
jb
frstor
out
jae
jmp
mov
adc
jno
xchg
shlb
sarb
or
mov
rorb
push
sub
hlt
lret
push
inc
push
push
fwait
arpl
fmull
sti
jle
mov
mov
xchg
cltd
in
fcomps
add
jb
push
or
lret
fwait
lea
inc
hlt
jge
or
mov
testl
cld
push
outsb
js
popf
fcmovu
icebp
and
dec
std
and
fst
push
mov
cld
sbb
loop
stos
mov
bound
adc
sbb
fstpl
mov
aad
or
mov
int
or
mov
mov
push
adc
pop
cli
mov
aam
sbb
std
mov
int3
cltd
mov
pop
mov
lahf
add
adc
repnz
gs
pusha
mov
int
loope
jmp
dec
fs
add
pushf
xor
dec
mov
inc
add
das
dec
sahf
inc
jg
stos
lds
jge
pop
pushf
movb
ja
aad
mov
mov
and
shlb
pop
rorl
adc
jle
mov
pusha
testl
inc
pop
mov
mov
jno
cwtl
rolb
xchg
subl
ljmp
int3
push
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
jmp
ds
jnp
pop
and
popf
cmc
inc
in
and
adc
adc
in
loop
and
mov
xchg
mov
lock
pushf
bound
push
repz
shlb
add
or
testl
xchg
pop
shrl
add
int
addb
xchg
icebp
dec
mov
testl
cmpsl
sub
sub
sbb
mov
scas
ret
aad
pop
out
or
xor
and
jae
or
repnz
xchg
dec
loope
mov
shrb
fimuls
mov
inc
pop
insb
and
adc
fs
pop
or
xchg
dec
dec
add
sbb
jmp
cmp
mov
push
out
cmp
cld
fcmovnb
sub
flds
gs
fdiv
cmpsl
mov
inc
rorl
rcrl
xor
adc
xor
cmp
iret
fistps
dec
je
mov
inc
iret
pop
and
fldt
xchg
jg
push
push
test
in
jge
push
mov
cld
xor
pop
pop
jge
test
mov
popf
mov
pop
nop
jb
dec
hlt
test
aas
adc
push
out
inc
arpl
insl
jmp
int3
lahf
cmp
outsb
push
or
fistl
xchg
aam
sarb
ret
sgdtl
mov
std
inc
in
jnp
test
cmp
jl
cltd
sub
sbb
cli
lds
xchg
pop
test
fidivrs
scas
push
pop
add
pop
movsl
test
in
dec
outsb
ret
sbb
pop
leave
inc
sub
sub
cmp
dec
fcompl
popf
pop
push
add
or
cmp
bswap
mov
mov
pop
lds
push
loope
ja
push
mov
push
mov
es
xorb
clc
sub
scas
push
divl
lea
pop
icebp
xor
mov
add
les
fstpl
scas
pop
icebp
cmp
sbb
loopne
movsl
jb
inc
pop
lret
xchg
flds
mov
cmp
imul
or
add
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
out
xor
and
mov
cmp
std
jle
sahf
adc
adc
subb
sub
xchg
rcll
sarl
adcl
or
lds
test
sub
lret
inc
scas
loope
pop
jecxz
fwait
dec
popa
fmull
xorl
jge
fcmovnb
xor
and
cmp
jge
dec
out
hlt
adc
jmp
mov
int3
adc
sti
daa
xor
and
xchg
xor
push
sbb
stos
push
pop
cwtl
fadds
adc
lret
js
mov
daa
or
push
insb
fwait
insl
icebp
popw
dec
repz
pop
mov
fwait
je
sbb
out
adc
fninit
push
insl
add
mov
dec
mov
pop
mov
ret
lods
jnp
mov
mov
push
cwtl
adc
sbb
inc
call
pop
fists
or
jne
jmp
je
popa
jmp
mov
add
mov
ret
pushf
adc
inc
andl
or
push
jmp
mov
xor
fsubrl
jnp
int3
les
rcll
js
loopne
sub
or
pop
mov
push
jns
pop
in
xchg
cmp
xor
sbb
lods
mov
nop/reserved
outsb
imul
lcall
add
cs
mov
sarb
pushf
or
int
enter
stc
xor
test
gs
into
push
andb
xor
out
ja
popa
mov
jl
les
dec
test
jno
jg
subl
xor
xor
pop
pop
jno
out
repz
mov
jle
in
fistpl
lret
cmc
scas
add
fstpt
std
dec
dec
test
cld
push
xchg
out
jge
xor
mov
bswap
into
add
mov
xchg
add
push
stos
dec
je
mov
lahf
popa
mov
xor
xor
mov
jmp
call
push
pop
popa
cwtl
daa
punpckhdq
lcall
adc
add
cmc
jl
mov
sub
pop
fwait
roll
scas
mov
clc
dec
sbb
cmp
or
push
lds
ss
data16
push
arpl
xlat
sub
pop
mov
xchg
mov
xchg
imul
cs
inc
arpl
push
inc
inc
movsl
ja
int3
and
xchg
and
out
mov
fldenv
popa
fwait
mov
add
mov
pop
out
rclb
mov
mov
pop
mov
dec
movsb
push
push
rorl
bound
sub
add
xlat
in
adc
arpl
and
leave
sub
sbb
pop
push
fsubrs
sar
push
pop
add
or
adc
sub
mov
jmp
mov
push
cmp
testb
cwtl
and
cmp
jno
mov
cmp
mov
sub
cmpsl
ljmp
out
lahf
xchg
outsb
fildl
repnz
loope
cmp
mov
inc
pop
int3
fs
xchg
aam
mov
jne
sbb
int3
fildl
jno
es
jae
xor
paddsb
out
in
mov
es
arpl
mov
xchg
subb
adc
out
xchg
adc
leave
inc
push
xchg
cmp
movsl
pop
sarl
outsb
out
lahf
jl
cwtl
pop
arpl
leave
push
push
leave
call
lock
popf
inc
test
cld
sbb
je
dec
add
jb
sbb
cs
inc
fidivl
aas
stos
xchg
push
les
xchg
lret
imul
gs
xor
jecxz
jnp
int3
ds
test
shl
xchg
jge
stos
or
jmp
sbbl
sahf
xchg
sbb
inc
adc
lock
push
or
insl
mov
and
mov
xor
xchg
out
mov
cmp
in
or
mov
inc
mov
push
cs
jg
imul
add
clc
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
jmp
fwait
xchg
out
cmp
aaa
sbb
lods
fists
jle
xchg
adc
adc
iret
jmp
pop
sbb
sub
push
js
jge
iret
stc
push
js
cmp
lods
ss
jg
imul
bound
int3
in
sbb
test
pushf
fsubrs
ficomps
or
push
mov
jnp
jo
jp
aad
push
inc
fs
cli
jp
mov
lock
icebp
push
into
aaa
icebp
mov
add
and
push
inc
aam
push
dec
dec
stos
xor
out
aam
push
jbe
cmp
ffree
fdivrs
push
jge
lea
add
sahf
jecxz
sub
loop,pt
mov
push
aaa
inc
pop
sarl
cmp
adc
push
mov
das
inc
lret
inc
push
rcrl
pop
aaa
sar
out
stc
shlb
inc
inc
out
xchg
dec
es
aam
cmp
test
pop
push
jnp
popa
lret
sbbl
add
sti
mov
pop
outsl
dec
cmp
xor
dec
and
sbb
into
add
mov
fbld
jnp
xor
push
pop
stos
pop
xchg
and
and
popf
sub
cmp
test
pop
xchg
jb
movsb
cld
xchg
enter
jge
add
mov
lea
push
dec
popf
int3
push
loopne
loope
add
inc
test
fsubrl
pop
lods
fildll
push
xor
movsl
mov
cmp
or
lods
lea
lea
cmp
jnp
mov
xlat
and
mov
test
push
arpl
xor
test
repz
in
lds
pop
mov
pop
mov
or
mov
imulb
lahf
push
fs
inc
out
mov
jge
pop
pop
xor
mov
dec
in
push
repnz
inc
stos
outsb
jo
mov
xchg
es
mov
imul
fildll
mov
and
mov
notb
leave
sub
or
sbb
in
xchg
clc
lock
dec
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
jmp
stos
f2xm1
mov
sahf
cmpsl
fldpi
xor
stos
push
inc
stos
std
mov
adc
and
xor
test
jns
xchg
pop
cmc
into
daa
mov
push
cmc
mov
dec
sub
push
mov
cwtl
sti
jb
or
pop
push
mov
push
rcrb
mov
lcall
jp
das
lret
push
divl
mov
push
or
jmp
out
mov
push
push
push
pop
sti
leave
adc
mov
das
pushf
jbe
leave
js
push
adc
loop
xor
xlat
lret
sti
mov
mov
das
xchg
mov
ret
daa
repz
dec
jmp
loopne
aas
nop
pop
mov
mov
sub
inc
fmull
lcall
xchg
and
dec
pop
jo
jmp
cwtl
cmpsb
cmpsl
fwait
jns
nop
pop
mov
push
and
out
mov
pop
cmpsb
push
mov
jne
pop
repz
pop
stos
in
js
fdivrs
dec
cmp
push
pop
mov
aas
and
push
or
fnstcw
jo
inc
enter
stos
push
jo
inc
sarl
mov
push
dec
or
ret
cld
jmp
push
pop
test
pop
cmpsb
xchg
and
punpckhwd
hlt
and
clc
push
sub
std
push
dec
repz
cwtl
adc
push
repnz
jmp
cmp
leave
pop
jle
sbb
dec
fwait
insl
ret
xor
insb
scas
repz
or
push
repnz
out
andb
or
mov
mov
or
sub
insl
shl
dec
into
je
out
and
push
dec
mov
xchg
xor
nop
aad
jmp
sahf
lret
movsl
std
mov
stc
aad
gs
push
mov
shll
sbb
loope
lcall
dec
cmp
fistps
push
enter
xchg
pop
fcoml
and
nop
and
stc
push
repz
imull
test
fisubrs
pusha
dec
les
xchg
xor
ss
cmp
xchg
inc
sub
push
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
jmp
push
loope
dec
cmp
push
fsts
add
int3
movlps
aaa
scas
lods
loop
in
inc
inc
jg
orb
push
push
or
push
adc
cld
sbbl
fcmovnb
decl
mov
mov
repz
mov
or
add
cmp
adc
insl
pop
loope
stos
jno
push
sbb
je
rolb
add
inc
xor
je
mov
iret
ret
lret
inc
int3
enter
adc
rcll
cmc
push
xlat
push
add
mov
push
xchg
xor
inc
jmp
orb
test
les
mov
es
pop
out
jg
bound
std
jg
push
xor
sarb
sbb
cmpsl
sbb
repnz
pop
iret
fbld
lods
pop
pop
dec
iret
leave
mov
xlat
nop
add
jae
mov
adc
xchg
cmp
jae
scas
nop
xchg
jo
pop
sbb
or
xchg
dec
mov
lds
lea
dec
xchg
out
mov
rcr
jno
insl
negl
test
es
sbb
pop
shll
fucomi
fmulp
pop
mov
inc
jl
std
dec
in
ja
mov
pop
and
in
xchg
dec
test
cli
andl
adc
lock
mov
cmp
inc
addr16
xchg
addb
pop
xor
roll
push
push
scas
dec
outsb
mov
int
cwtl
mov
lods
jbe
aad
xchg
sub
adc
add
dec
ss
pushf
addl
movsb
mov
push
xchg
pop
cmp
insb
sbb
cmpsb
mov
rcrb
sahf
push
cwtl
jmp
sbb
jmp
or
pop
jno
add
xor
lds
inc
lock
push
sub
mov
cmc
mov
nop
aas
movsb
out
cmpsb
ret
fsubr
out
ds
jge
test
sbb
add
sbb
movsb
loopne
int3
jmp
cmpsb
inc
imul
adc
and
push
aad
mov
add
daa
outsl
inc
outsl
mov
jb
in
mov
push
jge
sub
xchg
addl
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
jmp
mov
jl
push
push
pushl
pushl
pushl
push
push
push
push
push
pushl
pushl
pushl
pushl
call
adcl
orl
sbbl
xor
and
movl
sbb
push
adcl
push
movzwl
and
mov
adcl
or
movl
jne
or
mov
mov
cmpl
movl
movl
jmp
movl
mov
jle
push
push
push
push
pushl
pushl
push
call
sub
and
inc
notl
or
or
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
jmp
mov
sub
push
pushf
fs
test
adc
cmp
filds
ficoms
andl
jle
test
xor
cli
push
fdivrl
or
mov
dec
mov
std
inc
hlt
pop
mov
and
or
lcall
aaa
pop
fisubs
inc
dec
xchg
aam
dec
mov
aaa
push
cmp
jbe
push
stc
inc
adc
adc
filds
in
mov
and
sbb
push
adc
lret
cmc
xor
cmp
xor
pop
inc
imul
push
stos
push
stc
inc
std
and
mov
sti
and
adc
inc
add
or
sbb
pop
iret
int
pop
gs
sahf
mov
test
pop
cltd
mov
insb
push
iret
lret
dec
scas
sbb
dec
sahf
jecxz
aam
adc
pop
and
xor
stc
push
sti
sar
xor
lods
int
xchg
push
push
scas
decb
out
sbb
getsec
rcrb
or
ret
sbb
cli
fs
pop
negb
jnp
mov
test
xor
test
jmp
push
xor
test
xchg
mov
jg
jnp
and
xchg
jbe
sub
mov
cli
xchg
stos
lods
cmc
dec
cmp
call
push
push
fs
div
arpl
fdivs
outsl
xlat
loope
sbb
push
mov
decb
outsl
subb
fsubrp
icebp
adc
imul
sti
or
and
mov
ficoml
rorl
pop
xchg
filds
push
pop
clc
out
insb
xlat
sbb
or
stos
pop
sub
inc
jbe
stos
std
xchg
xchg
inc
test
inc
cmp
dec
repz
pop
ret
add
jne
int
xor
cmpsb
inc
cmp
mov
dec
xchg
jg
add
clc
fstpl
repz
inc
xchg
and
sub
sub
jp
sbb
outsl
mov
inc
push
imul
sub
sti
ljmp
and
adc
out
jb
rcrl
cmpsl
jb
roll
in
fcoml
outsl
xchg
cmp
les
sti
pop
fildll
dec
pop
out
shrl
aam
sbb
sarb
push
jne
ljmp
xchg
sbb
push
insb
inc
adc
ret
cmc
adc
jns
popf
fsqrt
mov
xchg
xor
scas
int3
fimuls
or
sbb
xchg
cltd
jnp
push
adc
or
int
insl
loop
pop
and
sub
jge
jnp
sub
mov
mov
or
in
arpl
test
mov
adc
and
dec
pop
lods
sbb
js
mov
data16
int3
mov
ror
cmp
mov
fisttpll
pop
xor
mov
xorl
notl
jno
jge
xchg
cmc
js
int3
dec
xlat
mov
push
and
iret
push
pop
inc
xchg
les
inc
addr16
or
fcmovb
repz
stos
lods
sub
and
xchg
scas
data16
jnp
lret
pusha
dec
add
enter
mov
push
cmpsl
stc
sub
popf
add
add
or
sbb
and
lret
push
std
dec
mov
push
adc
adc
stos
lcall
bound
pop
pop
mov
imul
cmc
rcll
rolb
jecxz
mov
std
xchg
stc
fsubl
call
enter
mov
mov
fisubrs
sub
pop
push
fiadds
jl
inc
sbb
leave
lock
dec
push
nop
pop
pop
ret
or
xor
aad
fisubl
or
hlt
mov
dec
incb
cld
cmpsl
iret
rcr
xor
test
aad
clc
mov
xlat
sbbl
lods
fidivs
and
test
mov
jge
mov
mov
outsl
add
nop
jmp
aaa
and
push
push
test
sub
mov
and
jne
mov
lock
cmp
adc
fisttpl
mov
imul
daa
out
rolb
loope
jno
xor
cmp
mov
ss
xchg
add
jmp
dec
sub
push
push
insb
or
push
pop
sbb
hlt
daa
rcl
add
mov
ret
mov
xor
lcall
das
aad
inc
stc
leave
pop
add
into
repz
push
repz
lods
sub
sbb
jle
inc
or
mov
movsb
outsb
add
in
push
mov
addb
mov
xchg
pop
bound
pop
stos
ja
inc
xor
sbb
popa
jns
es
leave
insb
fcoml
out
jns
lock
add
add
mov
pop
movsl
jg
nop
das
sub
pop
xor
outsl
or
addr16
mov
mov
dec
fwait
jecxz
push
cmp
xchg
ds
jl
adc
ja
loop
je
subb
xchg
or
std
add
test
fdivrl
mov
or
in
cmp
xor
and
pusha
dec
xchg
push
pop
xchg
or
xchg
push
insl
inc
in
outsl
jo
xchg
int3
fs
je
je
inc
mov
aaa
add
daa
push
fisubl
inc
icebp
int3
mov
je
and
popa
ja
and
add
dec
sub
mov
mov
mov
xor
add
divb
lea
push
jae
into
adc
sbb
sti
cwtl
ds
aam
dec
scas
cmpsb
cwtl
sti
inc
add
mov
cli
or
or
mov
ffree
leave
mov
jl
and
cmp
std
jnp
dec
push
hlt
inc
movsb
sahf
pushf
stos
orl
pop
xchg
arpl
jns
dec
mov
gs
je
mov
mov
pop
pop
mov
jge
add
push
out
sahf
sti
push
sbb
dec
xlat
aam
adc
xchg
sub
adc
and
push
jmp
pushf
arpl
push
sbb
ret
mov
xchg
adc
pop
mov
shlb
les
pop
push
fldenv
push
cs
cs
repz
mov
mov
repnz
andl
jae
or
and
stc
daa
std
mov
popf
orl
cli
lret
fists
add
int3
cmp
jmp
cwtl
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
movl
je
sbb
add
mov
movzbl
mov
pop
pop
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
xor
subl
and
shl
ret
xor
xor
ret
