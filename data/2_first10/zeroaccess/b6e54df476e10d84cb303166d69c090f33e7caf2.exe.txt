mov
mov
ret
mov
mov
ret
cmp
movl
jmp
xor
sbb
and
nopl
jmp
mov
ffree
jae
in
mov
in
data16
ljmp
push
aas
inc
adc
rolb
dec
ret
clc
loopne
jmp
jbe
cwtl
lds
and
out
mov
mov
jge
mov
loop
stos
xor
int
popf
inc
idiv
sbbl
out
stos
xchg
pop
cmpsl
cmp
or
sub
jae
adc
dec
ss
mov
jne
lret
push
outsb
aam
jle
mov
cwtl
pop
idivl
addr16
mov
xchg
xchg
cmc
cwtl
dec
shll
dec
xchg
cmp
out
les
mov
sub
and
mov
sahf
stc
or
and
jmp
outsl
adc
daa
xor
jnp
cmp
ljmp
dec
popa
fwait
ret
xchg
cmp
shll
arpl
sbb
aam
add
sbb
aad
movsl
cwtl
push
inc
cmc
scas
mov
pop
cli
xchg
ret
int3
mov
movsl
cmp
inc
mov
lret
nop
and
cld
daa
mov
popa
jge
sar
inc
sub
stos
setbe
push
jno
pop
jmp
sti
test
cmpsb
jne
into
roll
in
and
mov
decl
lods
or
mov
mov
aad
mulps
jl
outsl
lock
push
inc
jmp
punpcklbw
cmp
fnsave
mov
mov
icebp
sub
hlt
and
ret
lods
lret
sbb
mov
or
iret
mov
cmpsb
dec
pop
clc
incl
mov
xchg
into
fsts
xchg
xchg
dec
ret
in
ljmp
sbb
pop
pop
cmp
fisubl
je
adc
jmp
int
movsb
mov
sahf
cmpsl
in
xor
mov
clc
cs
std
loop
sub
insb
jae
lcall
push
xor
mov
push
cmpsb
aaa
jne
ss
jge
shlb
push
stos
stc
insl
out
jae
out
xor
pop
out
inc
xchg
cwtl
dec
add
sub
inc
jnp
or
sbb
or
es
jno
sti
pop
pop
xchg
outsl
lds
aam
inc
ljmp
xorl
pop
cmp
sahf
dec
popf
icebp
addr16
sbb
add
es
jno
sarl
jbe
bound
fiaddl
mov
xchg
int3
mov
movsb
xchg
paddd
cs
shll
iret
and
lcall
mov
int3
cmpsb
inc
cmpsb
in
loopne
jns
cmp
push
xchg
sbb
mov
fstps
inc
inc
test
out
jecxz
adc
rcll
push
cltd
pop
sbb
mov
jns
clc
aaa
rorb
pop
push
in
fsubrp
ret
or
popa
rol
mov
sub
repz
out
leave
fmuls
inc
pusha
xchg
out
inc
cmc
dec
cmpsl
jbe
sbb
pop
xlat
mov
and
loope
mov
mov
in
mov
cmp
push
dec
lods
inc
or
mov
negl
add
mov
sub
mov
loop
scas
enter
or
mov
loopne
mov
scas
inc
push
cmp
dec
xor
push
mov
popaw
pushf
arpl
mov
sbb
push
or
scas
movsb
das
into
rolb
sbb
sar
cmp
adc
pop
inc
inc
pushf
ja
pushf
into
add
outsl
mov
jbe
add
in
lock
les
fs
push
cmpsb
adc
add
imul
movsb
or
pop
push
call
mov
das
in
fscale
fdivs
add
int3
repz
clc
or
mov
jmp
mov
xor
enter
fidivs
nop
push
sub
jnp
pusha
inc
push
xchg
call
xchg
jecxz
push
pop
movsl
add
in
pop
dec
inc
iret
xchg
cli
sbb
add
ja
inc
mov
xor
loope
push
mov
in
xor
std
lods
pop
mov
or
nop
jae
add
add
enter
add
sub
sub
mov
sub
clc
cld
sbb
mov
cmp
aam
xchg
cli
or
and
test
inc
cld
add
hlt
popf
push
rol
test
and
fwait
jg
dec
dec
push
pop
ret
dec
loop
add
test
ljmp
jg
mov
mov
andb
negb
std
push
mov
push
mov
jae
daa
mov
pushf
fdivrl
and
push
scas
jne
push
mov
push
flds
stc
push
cmp
mov
jle
fmull
shl
jbe
push
bnd
and
xchg
jle
jecxz,pn
cmc
inc
es
push
add
jmp
cmc
xchg
add
stc
test
mov
in
test
test
outsl
std
push
movsb
lods
adc
jl
push
ljmp
jbe
insl
out
nop
xor
out
pop
jmp
into
popf
popa
fdiv
pop
adc
or
or
out
imulb
into
icebp
rcrl
clc
mov
mov
sub
inc
mov
push
mov
and
adc
lods
ljmp
push
mov
push
cltd
adc
or
inc
inc
aam
repnz
repz
adc
push
cwtl
add
push
xor
push
mov
aas
adc
ficoml
push
stos
shrl
xor
dec
ret
add
aaa
jae
sub
jg
or
nop
pop
mov
adcw
push
mul
xor
jg
and
dec
insb
push
lea
push
xchg
or
mov
arpl
adc
insl
icebp
addb
cs
inc
and
jl
mov
or
dec
cmp
popa
sti
sbb
rcll
xor
aas
push
mov
negl
sub
jp
aas
jl
pop
cmp
rcr
cmp
adc
cmpb
sti
mov
lds
and
cltd
loop
cmp
dec
dec
cmpsl
sub
fstl
fstp
mov
pop
adc
mov
or
jns
jecxz
mov
loope
in
ret
ret
or
inc
inc
cmp
repz
push
js
mov
cwtl
sbb
push
shlb
imul
jb
cli
insl
cmc
testb
out
push
xor
jns
lds
inc
xchg
jno
xor
outsb
mov
data16
imul
clc
sbb
mov
icebp
xchg
jo
push
shrb
mov
dec
icebp
insl
push
lret
call
int
or
ja
outsb
cmp
movsl
pop
push
and
ljmp
xchg
out
pop
mov
lods
bound
lds
add
movl
cmp
movl
jae
adcl
shrd
shr
ret
inc
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
movl
movl
movl
movl
movl
jmp
cld
xor
test
mov
mov
push
add
prefetchw
adc
xor
xchg
cli
std
adc
test
mov
cmp
test
xchg
lock
pop
jmp
mov
cmp
pop
sbb
mov
in
data16
iret
outsb
mov
mov
push
in
pusha
sahf
stos
cmc
jo
push
jnp
neg
popf
stc
push
imul
imul
cld
imul
push
jmp
fimull
test
movb
lcall
sar
call
mov
dec
and
rcll
out
sub
leave
dec
out
mov
and
movsl
mov
lds
pop
inc
xor
dec
negl
xchg
jmp
mov
lock
es
xchg
jb
aaa
inc
loope
add
inc
inc
pop
mov
pop
daa
idivb
push
scas
addr16
aas
es
faddl
dec
sub
rorb
sbb
dec
out
testb
xchg
add
in
dec
pop
aaa
lret
mov
pop
xchg
cmpsl
cmp
adc
xor
scas
push
lea
xor
ret
bswap
or
adc
push
orl
push
push
inc
push
push
cmp
out
dec
mov
pop
cld
mov
out
cmpsb
inc
mov
not
and
mov
roll
or
fidivrl
pop
inc
add
jle
stc
icebp
xor
pop
xchg
mov
sbb
lret
ljmp
sub
daa
cmp
jmp
xchg
cltd
push
push
stc
into
xchg
or
fisttps
xchg
cwtl
js
dec
and
pop
adc
jmp
mov
inc
mov
sbbb
jecxz
adc
mov
outsb
test
ljmp
loope
xor
bnd
xchg
into
enter
xor
mov
shll
push
imul
push
inc
xor
pop
jnp
cmpsb
es
js
rcr
add
lret
pop
fwait
inc
std
inc
or
mov
mov
adc
pop
dec
out
add
out
xchg
pop
scas
cmp
lods
xchg
mov
popf
fildl
mov
stos
or
jmp
je
jge
cltd
lods
pop
jae
test
rcrl
notb
pop
shll
add
aad
test
pop
mov
sti
mov
enter
js
inc
arpl
xchg
push
sbb
lea
mov
and
mov
aad
lods
sti
pop
aas
jmp
vmulsd
inc
mov
pop
jb
out
pop
scas
out
fsubs
sbb
mov
mov
push
ja
mov
cmpl
lea
xchg
sti
xor
daa
test
pop
repz
sub
fs
xchg
and
sbb
cs
mov
mov
xor
dec
aaa
aas
push
js
lret
ja
cmp
mov
pop
test
scas
scas
arpl
sar
loope
lods
mov
cmp
mov
imul
cli
sbb
mov
sbb
test
inc
ficoms
cmp
stos
and
adc
push
xor
push
insl
mov
sti
and
mov
gs
cwtl
xchg
xor
test
xchg
mov
loope
jg
push
movl
inc
cmp
sbb
xorb
push
clc
mov
aas
stos
sahf
ret
jbe
pop
add
inc
lods
and
sub
sbb
adc
cmpsb
add
cmc
mov
outsb
sub
lahf
in
sahf
jno
add
lods
enter
fwait
mov
mov
adc
addl
cmpb
leave
test
and
xor
xor
mov
jnp
sub
cli
mov
xchg
jb
mov
pop
pop
rol
and
clc
mov
into
inc
ja
push
into
mov
test
lock
ffree
pop
jmp
pop
outsl
cmpsb
mov
push
loope
mov
xor
ljmp
xor
dec
int3
jle
add
mov
push
in
push
or
push
pop
mov
and
jp
sub
inc
gs
mov
mov
test
dec
mov
lcall
out
inc
mov
or
imul
jo
dec
xchg
roll
les
push
xor
cwtl
or
cmp
sti
mov
out
jne
imul
popf
dec
loopne
pusha
stc
and
mov
push
mov
dec
adc
fs
icebp
xchg
adc
int3
push
and
pop
push
rolb
xchg
pusha
shrb
clc
dec
inc
push
jno
add
call
adcl
ljmp
stc
mov
fisubl
adc
loop
adc
sahf
pop
mov
xchg
in
xchg
dec
push
adc
hlt
rorl
ret
cmpsl
push
xchg
cltd
mov
and
xor
arpl
mov
xchg
lds
inc
test
loop
decl
movsb
call
cmpsb
mov
or
mov
dec
mov
cs
and
push
repnz
dec
mov
dec
in
mov
dec
lret
arpl
push
int
sub
imul
fimull
mov
push
sub
es
sub
adc
inc
lret
cwtl
inc
sbb
xor
lods
insl
push
jp
addr16
pop
pop
rclb
xchg
sub
mov
rcll
out
aad
and
push
pop
jl
xchg
addr16
xchg
fadd
shl
and
or
lahf
pop
ret
pop
in
and
adc
imul
inc
aam
jno
add
inc
fdiv
add
add
inc
fcoml
inc
loopne
arpl
add
ds
add
lds
mov
inc
xchg
inc
inc
das
ljmp
loope
pinsrw
movzbl
test
andl
mov
pop
scas
neg
and
cmc
push
rclb
cmp
adc
mov
cmpsl
jmp
jle
pop
xchg
aad
ljmp
xor
orl
cmp
mov
lret
pushf
sbb
push
cli
mov
mov
in
mov
ret
sti
test
mov
add
mov
inc
ret
shll
inc
ret
das
nop
sub
rolb
aad
repz
fisubl
aas
mov
mov
xor
and
sub
lds
mov
out
mov
adc
data16
add
mov
aad
adc
gs
out
cmpsb
or
fwait
push
sbb
dec
or
arpl
or
in
gs
int
xor
incb
mov
shrl
insb
test
cmpsl
dec
lea
mov
adc
les
fs
inc
icebp
pop
cmpsl
lods
and
lret
sub
and
mov
inc
add
lods
orb
push
loop
mov
push
je
cmp
pop
dec
or
stos
sub
insl
lret
cbtw
fst
mov
add
lods
xchg
out
fs
and
dec
popa
sbb
inc
aam
or
test
inc
outsl
sub
insl
xor
xor
iret
inc
mov
adc
stos
movsl
dec
adc
scas
mov
aaa
mov
iret
cli
jp
cmpsb
aaa
add
xchg
push
mov
stos
dec
cmpl
mov
push
arpl
ljmp
xchg
push
int
or
je
aas
push
or
mov
in
iret
jns
int
call
imul
cmp
imul
pop
lret
pop
lea
sub
push
clc
repnz
jb
cmp
test
sbb
jp
add
lret
push
jmp
pop
in
aam
pop
xchg
loop
inc
cmpsl
adc
add
xor
mov
pusha
cltd
js
stos
jle
add
fistl
mov
repnz
jecxz
inc
pop
sub
mov
push
jmp
sbb
ret
les
xor
test
fistl
int3
loope
lods
pop
pop
mov
push
cld
jne
enter
mov
pop
pop
pop
mov
jl
mov
lcall
ja
inc
push
dec
shl
cwtl
fwait
sbb
jbe
or
out
int3
push
adc
cltd
rolb
outsb
or
icebp
xor
fsubrs
xchg
cmp
movsl
xor
cld
das
ss
pop
dec
rcl
imul
ret
out
adc
and
pop
sbb
xor
mov
sahf
shl
call
adc
jns
adc
out
push
aam
ja
dec
fistl
and
call
in
dec
jle
idivb
rcll
aas
test
xor
cmp
insl
xchg
push
xor
jo
addb
mov
xchg
cmp
sub
inc
push
dec
es
mov
push
cmp
lret
xchg
inc
lret
int3
test
add
sub
or
lods
pop
push
or
pop
lds
fistps
or
dec
xor
mov
dec
xchg
pop
mov
je
lea
mov
or
cs
inc
negl
jmp
daa
test
push
test
bound
pop
sbb
or
jg
fstpl
mov
push
or
aam
push
ret
sti
push
xchg
into
stos
xor
hlt
sub
sbb
push
fiadds
in
push
pusha
rclb
and
xchg
in
xor
in
mov
cmp
push
loope
xchg
jae
in
fidivrl
pop
into
fadds
mov
mov
dec
jle
fisubl
mov
add
fsubrl
std
stc
sub
xor
push
scas
outsl
mov
push
jbe
daa
push
in
fwait
inc
out
cwtl
jle
inc
bound
push
add
lea
inc
fstl
pop
out
cmc
or
jl
stos
mov
cmpl
sub
fisttpl
test
inc
adc
xor
mov
aas
sbb
movsb
and
dec
xchg
outsl
loopne
push
mov
mov
sahf
fmull
add
hlt
stos
pop
loopne
jo
mov
enter
mov
out
xor
les
or
xor
lret
bound
and
pop
ds
or
or
pop
cli
ror
xchg
mov
rcr
in
fisubs
sahf
popa
pop
dec
inc
xor
mov
cmp
sub
dec
mov
scas
call
push
cwtl
fimuls
xor
sbb
or
sbb
cmpsb
add
dec
push
mov
xor
push
ret
in
fdiv
xor
shll
mov
mov
push
push
push
and
mov
scas
xor
lea
push
dec
popa
andl
add
mov
sub
aas
div
das
fs
getsec
pop
sub
push
cmp
add
mov
inc
daa
pop
push
clc
mov
sub
adc
jae,pn
out
int
loop
dec
or
dec
pop
pusha
enter
fdivrs
cmp
jns
adc
clc
ds
xchg
loopne
mov
addl
cmpsl
scas
or
adc
dec
loop
bound
inc
add
xor
mov
in
mov
pushf
push
rclb
push
mov
sub
movsl
and
data16
inc
lea
je
sbb
mov
mov
in
dec
add
movl
mov
mov
jmp
pop
inc
sti
and
jbe
pop
js
and
xchg
fimuls
pinsrw
sets
mov
enter
fcmovnb
mov
or
outsb
xchg
lret
jne
adc
mov
aad
pop
and
xchg
inc
mov
xchg
and
dec
cmp
cmp
lcall
mov
fistps
ljmp
and
mov
jbe
popa
mov
cli
icebp
scas
jae
jge
push
in
ja
in
outsl
movsb
pop
sub
push
push
add
sub
orb
andl
enter
shll
sbb
lret
mov
jp
pop
xor
rclb
loope
xor
imul
or
lods
repnz
add
mov
insl
mov
stc
cld
dec
sahf
out
pop
data16
sbb
ret
repz
pop
push
adcb
jae
movsl
adc
enter
aas
inc
ret
sbb
mov
cmpsb
addr16
in
ljmp
xchg
hlt
dec
mov
add
dec
mov
fs
mov
pop
cmp
scas
dec
mov
push
scas
ja
and
es
adc
xor
sbb
fs
and
add
mov
mov
repz
lcall
out
and
pop
pop
lods
lret
out
add
ret
and
xor
mov
fistpl
xchg
ret
repnz
pop
jns
adc
sub
aad
pop
mov
sbb
push
xchg
xchg
in
xlat
xchg
add
inc
scas
cli
push
daa
ret
stos
filds
jnp
xlat
sub
adc
add
pop
sub
mov
repnz
lahf
cmp
pusha
and
sub
dec
mov
call
ja
mov
cltd
mov
repnz
jl
xor
sbb
xchg
sub
push
jbe
notb
jns
jb
repnz
fsubrs
loopne
out
pop
in
mov
push
fsts
insl
pop
sti
arpl
dec
es
adc
lock
stos
add
inc
ljmp
inc
xor
cltd
fisttps
enter
xor
sahf
enter
loope
aad
vmovaps
xchg
outsl
adc
push
xchg
or
and
inc
jmp
jo
mov
inc
pop
shr
rcrl
push
xchg
push
iret
mul
mov
sub
xchg
jns
cmp
xor
scas
fnsave
cmpsl
xlat
icebp
or
aas
or
rcll
test
mov
ret
sub
jns
cmpsl
push
and
jl
jl
xchg
pop
dec
cltd
mov
jg
fwait
lcall
movsl
fwait
push
lds
mov
nop
cmp
movsl
movsb
pusha
add
adc
addr16
inc
adc
in
stos
aad
dec
mov
mov
mov
lods
fs
inc
movsl
ficomps
mov
pop
and
dec
mov
cli
push
xchg
movsl
mov
and
and
repz
inc
adc
out
pushf
jecxz
loope
fadds
jl
cs
leave
add
int
pop
popf
ss
add
inc
leave
add
cmp
inc
bound
sub
mov
gs
sub
js
inc
or
push
cltd
out
fucomi
dec
sbb
inc
fwait
add
push
inc
lods
jecxz
add
mov
and
dec
xchg
sbb
rcrl
aam
std
pop
imul
mov
xchg
shl
shlb
inc
inc
pop
fadds
out
mov
mov
xchg
adc
sub
push
sub
dec
push
cld
or
out
imul
pop
test
addr16
out
fidivrs
dec
pop
pop
arpl
sub
pushf
aas
test
aam
icebp
sbb
mov
jge
andb
ffree
inc
test
sub
mov
lret
push
jae
add
cmpsl
sarl
and
xchg
ret
into
sarb
int3
cmp
sbb
adc
aam
enter
xor
cmp
ret
loopne
push
add
aaa
std
fucom
adc
je
xor
pop
fisttpl
loopne
in
cmc
fucomp
movsl
call
xor
jbe
dec
sub
fstp
inc
ret
test
push
and
jns
inc
lea
shr
xchg
loopne
call
jg
subb
mov
enter
mov
lock
and
push
fisttpl
jb
lods
data16
inc
stos
ljmp
insb
add
add
rcrb
mov
mov
jecxz
mov
cmp
rcrl
add
or
hlt
inc
or
push
aaa
movb
ja
daa
jl
into
xor
mov
and
repnz
pop
xchg
ja
pop
iret
cmpb
sbb
in
clc
mov
lods
shlb
jmp
mov
fisubrs
sti
push
pop
mov
jbe
cwtl
or
repnz
js
pushf
mov
xor
icebp
fcompl
je
and
fldcw
jmp
aaa
into
mov
add
mov
pop
mov
sbb
mov
sbb
mov
and
dec
dec
push
and
loopne
cmp
es
sarl
cmpsb
imul
mov
push
out
push
pop
pop
cwtl
or
pop
pop
in
fstpt
lods
xorb
jp
stos
shrb
adc
out
mov
cmp
inc
pop
out
scas
sub
into
cwtl
mov
pop
gs
nop
insb
loope
imul
and
xor
rcll
shl
cmpsb
sub
mov
and
xor
imul
mov
push
sub
push
movl
jmp
ljmp
stos
lea
jbe
xchg
push
xchg
loop
pinsrw
jne
bswap
mov
fwait
lcall
cmc
rorb
lock
aas
mov
and
push
push
mov
xchg
inc
adc
mov
and
out
cmp
ss
std
loope
cmp
imul
repz
push
mov
mov
enter
jbe
dec
mov
sub
mov
jb
es
jle
es
push
and
icebp
or
push
movsb
stos
rclb
das
jne
dec
jnp
sbb
addl
push
xchg
lcall
into
lret
cld
lret
stc
lock
jno
xor
lea
scas
xor
sub
shlb
outsb
sbb
and
cmp
daa
ret
push
dec
jl
sbb
cmp
mov
jmp
pop
cltd
pop
push
fimull
ret
adc
cltd
lret
fsubl
mov
stos
dec
fucom
mov
add
or
push
mov
push
add
movsb
lahf
or
lret
and
push
mov
stos
xchg
add
fcmovu
popa
push
xor
ljmp
adc
sub
pop
or
dec
mov
xchg
flds
scas
dec
jmp
adc
inc
mov
push
sub
scas
mov
add
push
std
test
fidivrs
sub
mov
mov
cs
add
xchg
and
jbe
xor
dec
dec
ds
dec
data16
dec
ja
fnstcw
xchg
mov
jl
lds
jecxz
push
push
adc
aaa
les
sbb
xchg
aam
cli
fidivrs
xor
movsb
sbb
jmp
mov
cmp
inc
mov
popa
lahf
ja
xchg
pop
cltd
popf
les
outsb
std
dec
je
roll
pop
mov
lahf
adc
sbb
rcrb
mov
cli
mov
hlt
xor
addl
lcall
incb
iret
movsl
xchg
fcoms
cli
aas
mov
xor
fiadds
lcall
push
fistpl
mov
cmp
fdivrl
and
aaa
stos
pop
mov
push
adc
scas
sub
or
sbb
out
outsb
inc
push
push
iret
xor
or
fsubl
jmp
into
into
mov
ljmp
imul
sti
sti
mov
fisubs
mov
jne
or
fstl
scas
xor
repz
aam
push
cmc
cmp
sbb
rcr
mov
lret
stos
mov
push
out
mov
call
icebp
sbb
pushf
xor
ret
test
imul
dec
add
sub
outsb
pop
xlat
fldcw
mov
loop
scas
mov
sbb
fnsave
cmp
stos
scas
aad
pop
aas
bswap
xlat
lahf
mov
jbe
loope
test
mov
mov
out
cmp
into
xchg
js
fucomip
xor
cld
mov
hlt
mov
mov
mov
jl
shrb
inc
pusha
imul
bswap
jae
scas
or
adc
xor
cmpsl
ror
in
loope
jbe
jae
xor
popf
shrb
or
insb
js
mov
in
sti
shl
fwait
dec
scas
shrb
outsl
test
add
adc
jbe
mov
jns
pop
mov
pop
sti
mov
fmul
lret
mov
rolb
das
cmp
add
xor
and
add
adc
jle
repnz
icebp
cwtl
hlt
push
je
sarl
insl
jle
sub
into
mov
pop
xor
inc
mov
pop
sbb
pop
jno
lea
xor
jge
sti
iret
pop
sbb
pop
jl
in
xor
int
shll
cmp
inc
push
dec
sbbb
xor
andb
js
sub
and
mov
fs
mov
mov
lock
push
jp
sbb
push
dec
dec
int
leave
or
les
test
push
fnstsw
fsubrs
outsb
lock
cli
in
push
or
ja
rclb
addb
mov
or
add
aam
addr16
out
mov
push
and
popf
loop
push
cmpsl
dec
sub
push
or
add
mov
jnp
fcmovb
push
repnz
add
or
punpcklbw
lcall
cmp
sub
push
and
cmpsl
shlb
mov
xor
push
mov
pop
add
mov
outsl
aad
das
inc
sbb
mov
or
mov
inc
loope
fwait
ret
decb
movsb
pushf
fwait
mov
xorb
or
mov
dec
popa
stos
aaa
loop
jbe
jecxz
push
movsl
sub
dec
rcll
leave
lock
jg
and
fwait
pop
mov
notl
jle
aam
inc
daa
push
ret
mov
mov
pushf
mov
lahf
jbe
stos
inc
shlb
pop
outsb
enter
and
jne
aas
dec
jmp
lret
lahf
jmp
jne
and
fistps
mov
dec
mov
gs
pop
das
rcrl
stos
sub
hlt
jnp
lods
aas
mov
cmp
aad
loop
push
mov
outsl
stos
enter
gs
add
jae
inc
rclb
enter
mov
daa
xchg
sub
cs
dec
fwait
jne
lcall
aam
sub
fwait
jno
inc
inc
or
lcall
mov
jmp
testl
inc
sbb
popf
ljmp
push
and
and
jo
andl
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
jmp
xchg
mov
imul
pop
xchg
in
rorb
pinsrw
movlps
xchg
and
sub
fmulp
setp
test
mov
je
ljmp
cwtl
in
lahf
sub
mov
mov
jle
mov
pop
pop
cld
mov
jl
sbb
ret
lahf
sub
rcr
mov
xchg
xor
jge
mov
xor
loope
cmp
lret
rorb
iret
sbb
mov
dec
fistl
or
mov
out
das
rolb
scas
mov
ficompl
scas
aad
fisubl
cwtl
and
jbe
loop
push
shl
insl
adc
sub
xlat
js
in
enter
cld
popa
ljmp
mov
fisubrs
inc
jbe
or
inc
mov
push
xchg
mov
scas
aaa
popf
rclb
dec
xor
add
stos
leave
jbe
and
mov
cld
lahf
jl
in
sbbb
in
ds
xor
fucom
jb
lcall
fiaddl
jnp
sbb
mov
inc
dec
je
sbb
adc
xlat
and
push
push
cs
push
inc
jne
test
movsb
stos
cwtl
sub
ret
je
lret
int
xor
jns
jno
push
arpl
fildll
push
stos
mov
das
mov
dec
dec
sub
push
call
or
out
jae
cld
or
sbb
xor
ret
insl
mov
jns
xor
ss
mov
sbbl
mov
jp
xor
lods
and
adcl
stos
and
jno
sub
sbb
out
mov
pop
xchg
outsb
movsb
mov
movsb
out
test
add
jbe
and
dec
out
sbb
movsb
or
movsb
loopne
pop
fsubrl
rol
test
js
jmp
in
out
mov
mov
mov
rorb
or
mov
xchg
and
jle
pop
ds
xor
xchg
cmp
inc
subl
clc
cld
or
push
jp
imul
push
xor
repz
and
mov
dec
xor
and
sar
test
dec
icebp
adc
lea
and
cmpsb
add
cwtl
cmp
scas
mov
clc
lcall
mov
xor
mov
mov
ret
les
out
push
into
jecxz
xor
pop
xchg
and
add
jo
sbb
adc
push
aaa
mov
mov
add
stos
mov
xor
xchg
and
mov
inc
inc
xchg
push
popf
in
pop
xor
sub
push
lods
xor
pop
arpl
sarl
xor
sbb
cmp
js
loop
shrb
lcall
pop
pushw
mov
or
push
repnz
rcrb
lret
cli
adc
xlat
adc
loopne
lret
int
dec
cli
jl
scas
add
lods
mov
jns
xor
xchg
lods
sub
sahf
roll
mov
jle
add
xor
fldt
mov
pusha
cmp
lock
icebp
xorb
sub
fiaddl
shll
lret
xchg
inc
mov
push
loope
jb
mov
popf
stos
inc
into
je
aaa
sub
and
sub
or
cmpsb
push
loope
xor
jge
aas
cmp
cmp
push
lret
nop
jl
adc
dec
pop
fsubl
xchg
push
lods
push
mov
imul
mov
or
cwtl
jae
mov
jle
pushl
jmp
push
loope
enter
sti
movsl
stc
push
je
mov
rorl
jl
bound
add
ja
xor
inc
jmp
mov
and
cli
imul
pop
mov
adc
jg
nop
add
and
mov
pop
push
mulb
pop
cmp
cs
sbb
test
lcall
push
xchg
mov
pop
mov
pop
clc
hlt
pop
sub
pop
mov
addr16
scas
ljmp
test
xchg
push
mov
andl
pop
or
mov
pop
rclb
add
sbb
stos
mov
daa
cmpsb
sub
clc
and
test
cwtl
jne
add
rol
push
add
test
add
jnp
pop
sbb
fcomip
lret
test
mov
cmp
fists
add
fisubrs
mov
dec
icebp
les
sub
pop
lret
lahf
jmp
sbbl
cltd
stos
aas
je
aam
or
xchg
fnstsw
push
cmpb
out
mov
or
lods
cmp
xorb
pop
ret
fists
jp
ss
lret
faddl
sti
or
mov
mov
ficoms
dec
int3
and
rcr
popf
xor
movsl
xor
push
and
pop
xor
notl
rclb
and
lret
insb
pop
mov
data16
fs
outsl
ficoml
and
inc
sub
test
lret
jmp
mov
jo
mov
addr16
jno
mov
mov
mov
fwait
jmp
or
stos
sahf
imul
addr16
aam
xchg
inc
addl
popf
mov
cmpsb
jno
pushf
jmp
jno
pop
test
das
push
dec
mov
jnp
jmp
loope
add
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
jmp
push
fadds
sub
push
and
cmp
dec
push
les
pinsrw
pminsw
pop
ficompl
mov
jnp
cmp
xchg
add
jmp
cmpsb
das
cld
and
mov
leave
cli
push
xor
loopne
dec
std
out
inc
sahf
and
jecxz
jns
lea
mov
mov
adc
sbb
inc
pop
enter
out
inc
sbb
imul
sarl
mov
sub
fwait
cmp
in
jno,pn
mov
jno
cmp
jmp
iret
jg
lock
or
sbb
fs
mov
sub
sub
orb
adc
adc
mov
mov
outsb
mov
pop
cmp
aas
cli
fs
int3
cmp
add
jle
inc
cmpsb
jne
aaa
add
jb,pn
push
inc
sbb
stos
xchg
add
mov
cmpsb
sub
pop
insb
push
enter
cmp
and
imul
cmpsl
decb
mov
sbb
in
out
push
mov
sbb
aaa
mov
gs
jg
fidivrs
mov
mov
pusha
xchg
xor
ds
in
lock
loopne,pn
inc
cmp
pushf
cmpsb
push
test
add
insb
xchg
inc
add
scas
xchg
add
enter
jo
mov
dec
and
xor
std
pop
ret
mov
lea
mov
pop
imul
out
inc
push
imul
inc
cs
mov
adc
jb
stos
jg
int
pop
rcrb
dec
les
popl
or
xchg
rcll
aad
je
iret
pop
mov
xlat
sub
loopne
xchg
dec
insb
dec
push
in
xchg
push
movsl
pop
sahf
pusha
arpl
into
xor
stos
lret
rcrb
push
or
jb
adc
or
pop
scas
stos
sub
push
movsb
stos
test
roll
rcrb
sub
xor
aam
mov
imul
jp
push
push
lmsw
mov
or
lahf
int3
call
mov
pop
adc
pop
jg
mov
sarl
movsl
out
outsb
mov
in
fwait
push
jp
xchg
int3
adc
sbb
ds
mov
inc
fdivrl
mov
dec
shr
lcall
adc
xlat
mov
sub
add
mov
jg
jmp
jo
pop
mov
push
call
bound
pop
mov
mov
xchg
rcr
shl
test
adc
pcmpgtd
cli
js
or
fdivl
addr16
sub
inc
lret
cmc
pop
mov
rcrb
xchg
movsb
xor
pop
sub
push
pop
data16
xor
mov
mov
xor
iret
vmaxps
sbb
js
mov
and
sbb
shlb
jge
js
mov
divl
mov
jae
sub
mov
cmp
xchg
cmp
xchg
pop
nop
stos
in
arpl
scas
mov
jbe
sbb
adc
inc
movsb
pushf
pop
pop
or
lcall
sub
negb
adc
loope
out
and
std
inc
inc
fs
rcrb
mov
mov
xor
inc
xor
jp
outsb
subl
or
adc
mov
gs
pop
movl
add
andl
test
jmp
ret
sbb
jae
insl
xchg
xchg
mov
les
inc
mov
loopne
mov
imul
lods
sub
jecxz
in
ret
mov
and
js
jne
int3
gs
sbb
pop
shlb
mov
or
push
adc
inc
out
jnp
xlat
add
fnstcw
sub
addr16
sbb
sub
add
dec
jno
xchg
jbe
jmp
mov
add
push
cmp
mov
jp
loopne
lret
or
enter
cmc
push
pop
mov
ret
pop
push
aam
inc
jge
mov
xchg
sub
orb
leave
pushf
xor
adc
mov
sub
dec
jmp
shl
aad
mov
daa
pop
push
dec
lods
or
sahf
fsubs
and
test
cmc
jmp
mov
fsts
mov
mov
test
cmp
bound
push
lcall
add
loop
sbb
dec
cs
pop
mov
lods
push
mov
mov
add
mov
lret
test
mov
inc
jno
push
dec
pop
loope
rcll
nop
cmp
jmp
fsub
xor
outsl
add
push
mov
jl
cmp
aam
xlat
aad
insl
outsb
subb
stos
rcrl
cmc
in
out
jl
pop
inc
xchg
divb
jge
fs
push
push
mov
and
dec
dec
lcall
inc
jmp
xor
xor
imul
data16
sub
xchg
pop
mov
sbb
cmpsl
and
mov
xchg
pop
dec
je
sub
dec
sahf
insb
arpl
sub
sbb
cs
xchg
lds
mov
adc
sti
add
data16
or
data16
loop
cmpsl
bound
jmp
jne
pop
scas
pop
roll
jne
adc
jnp
cmc
out
and
loop
popw
inc
loop
negl
dec
faddl
in
shlb
mov
sub
add
scas
mov
je
ret
dec
add
cmp
jb
movl
movl
movl
movl
jmp
xorb
ret
xor
xor
inc
cmp
data16
pinsrw
sete
mov
pop
sub
mov
stc
cmp
fwait
mov
add
or
lret
cli
fisttpll
mov
mov
test
cs
mov
or
xchg
call
push
cmp
iret
jle
inc
inc
xor
fisttps
adc
mov
outsl
cwtl
imul
cmp
es
pop
lock
and
pop
cltd
and
repz
test
fs
fnstsw
or
dec
lea
fstps
or
icebp
or
shlb
cmp
push
int3
sarl
mov
outsl
cld
cmp
sbb
jle
outsb
dec
cmp
decb
jge
pop
add
jl
jae
jmp
fadds
jne
xor
pushl
nop
shl
ss
mov
shrl
lcall
sbb
aaa
mov
in
addr16
call
mov
test
mov
cmp
clc
xlat
shll
leave
test
sti
xor
inc
ficomps
adc
pop
cmp
pop
add
xor
cmp
ficoml
idivl
jmp
addr16
sahf
sub
loop
lea
dec
out
out
out
xchg
out
mov
push
add
lcall
ret
shl
cli
lret
add
outsb
fwait
cs
push
jge
and
mov
imul
leave
pop
add
into
mov
mov
pusha
cltd
into
ja
loopne
fs
or
jbe
mov
or
inc
push
mov
push
sbb
fisttps
iret
dec
push
pop
pop
repnz
call
xor
mov
dec
xchg
add
push
xchg
bound
mov
mov
pop
std
popf
out
adc
lds
push
fidivrs
mov
into
pop
xor
inc
sbb
push
xchg
dec
call
lea
push
mov
inc
pop
or
cmpsl
imul
cmpsb
test
xor
and
xchg
rolb
xchg
mov
xor
out
pop
adc
stos
adc
js
jno
push
int3
pop
ss
dec
add
dec
pop
jp
das
mov
jle
sbb
mov
cmp
xchg
jp
loopne
int3
in
adc
jge
test
or
inc
sarb
add
push
dec
push
adc
imul
std
divl
imul
pop
loop
repnz
scas
iret
lods
xchg
cld
or
push
or
cs
sbb
mov
mov
mov
pop
aad
ss
repz
and
ffree
push
es
pop
mov
testl
popa
sbb
xor
out
adc
adc
mov
out
addr16
lret
in
out
loopne
adc
mov
js
xchg
das
mov
neg
es
mov
dec
add
fsub
pop
xor
out
jle
nop
in
dec
pop
int
ss
push
dec
insl
xchg
or
js
test
insb
xchg
or
xor
testb
add
and
arpl
fdivr
push
imul
cmp
shlb
mov
punpckldq
mov
xor
js
adc
pop
and
ljmp
or
push
fidivrs
hlt
and
fs
rolb
decl
inc
sar
rcl
mov
xlat
xchg
cmp
sbb
mov
fldt
dec
insl
add
fidivs
sub
ret
push
es
mov
and
and
cmpl
ffree
lods
xor
leave
movsl
mov
icebp
and
xchg
dec
cmp
dec
jne
sbb
jb
fistl
sbb
and
pop
sbb
add
fmuls
dec
xlat
cmp
out
fimuls
scas
jo
push
gs
sbb
add
popf
loope
loope
and
adc
mull
cmp
nop
dec
dec
inc
xchg
jo
sub
data16
jne
xchg
cmpsl
ret
in
ds
push
cmp
add
pushf
mov
jle
pusha
dec
nop
sbb
shrl
lcall
add
movsl
xor
pop
out
xorl
pop
sub
cmp
loop
daa
adc
gs
adc
lahf
leave
scas
sbb
cmovb
popf
repz
push
or
fimull
aam
inc
out
push
mov
lahf
sarb
and
into
pop
jmp
test
jo
out
divb
aad
nop
jne
mov
shll
mov
adc
fiadds
cmpsl
bound
bound
lods
enter
jmp
cmp
aas
add
xor
scas
data16
aas
mov
jg
mov
mov
outsb
mov
push
in
popa
sbbb
xlat
sub
jmp
cs
mov
mov
rdpmc
pop
mov
pop
add
cmp
cli
fwait
sub
aam
daa
ss
pop
lret
sub
sub
and
shrl
pop
out
ljmp
repz
cwtl
inc
cmp
fcomps
dec
loopne
mov
jge
mov
rcll
pop
push
movsb
sub
scas
stos
push
xchg
cwtl
push
inc
inc
out
scas
cmpsl
mov
push
cmpsb
xorl
push
push
lret
imul
out
sbb
adc
adc
subb
cmp
mov
dec
mov
mov
adc
pop
notl
xlat
pop
xor
aam
xor
and
xchg
mov
out
lahf
ror
pop
adc
jae
push
cmpsb
xor
jns
ret
xchg
xor
adcb
neg
out
pop
sbb
ja
mov
addr16
inc
hlt
rcll
add
inc
lock
inc
in
sbb
add
movl
movl
movl
mov
mov
or
lea
add
movl
jmp
add
inc
sti
daa
push
cs
mov
pushf
pinsrw
movq
lods
outsb
movsl
daa
loopne
shrb
orl
mov
adc
mov
xchg
sbb
jne
stc
pop
cmpsb
or
repz
mov
jne
push
adcb
jno
push
pop
sub
scas
pop
scas
sahf
mov
lret
lods
adc
lock
std
sahf
push
mov
cmp
and
mov
jbe
dec
sarl
scas
and
xor
out
or
ret
jmp
ljmp
push
mov
and
loop
in
aaa
xchg
scas
or
and
dec
enter
mov
xor
pop
dec
jbe
leave
into
mov
fnsave
cwtl
dec
lds
insl
pop
jb
mov
xor
pop
jb
xchg
adc
addr16
jns
rcll
xchg
jl
test
ficompl
cmpsl
repz
inc
adc
cmc
inc
stos
fsts
add
pop
sub
pusha
cld
inc
test
xchg
repnz
cltd
xchg
xchg
cmp
or
scas
roll
ficoms
rcll
xchg
lods
rcrl
xchg
subb
insl
sbb
mov
cltd
jne
pop
dec
fucomi
push
inc
sbb
das
push
push
mov
jbe
cli
and
rorb
xor
out
push
outsw
xor
ret
dec
mov
stc
pop
push
stos
cmp
cli
add
popf
jp
aas
xor
data16
dec
outsb
jl
nop
fbstp
xchg
sub
push
mov
adc
gs
stos
sbb
xchg
dec
ss
arpl
sbb
jns
dec
loope
adc
or
push
pop
pop
clc
add
cmp
mov
mov
sti
cmp
xchg
adc
push
jmp
xor
cli
ljmp
push
sub
mov
mov
cld
dec
mov
aaa
cld
add
cmp
xor
enter
loopne
test
in
pusha
dec
push
dec
int
push
es
es
movsl
cs
shlb
stos
xor
nop
into
jecxz
cmp
pop
fistpl
test
inc
xchg
enter
push
or
inc
ficompl
rcrl
jl
out
ffree
push
test
clc
sbb
cmp
fidivl
outsl
roll
push
daa
insl
push
dec
xchg
pop
adc
pop
std
mov
shlb
jge
insl
pop
push
push
cli
xor
cltd
xchg
imul
fnsave
arpl
cmc
mov
in
shll
cmp
jo
sbb
pop
pop
lods
clc
in
cmp
mov
sbb
adc
jbe
push
decb
add
and
mov
sub
hlt
hlt
insb
push
push
scas
iret
lret
cld
aam
mov
xlat
ds
xor
addr16
lret
and
and
mov
xlat
cld
hlt
int
push
iret
lea
inc
stos
push
xor
jnp
insb
movsl
sub
jae
ret
jae
daa
jbe
inc
sarl
adc
pop
jns
cltd
test
dec
stc
cmpsl
in
cli
int3
jecxz
std
push
stos
gs
mov
fcoml
fdivp
adc
clc
xchg
js
stos
cmp
das
xchg
iret
pop
sti
hlt
imul
in
movsb
or
sti
sti
sub
lods
push
mov
sub
popf
push
sub
mov
arpl
cmc
pop
push
arpl
jns
and
data16
jo
add
and
cld
lock
movb
repz
push
sarl
cmc
push
fdivp
clc
push
inc
sbb
repnz
mov
loopne
or
push
subl
xor
in
test
shl
cltd
lret
cmp
xor
enter
and
test
add
sub
stc
in
pusha
jae
hlt
jb
mov
inc
or
mov
lods
mov
add
scas
out
mov
pop
stos
sbb
enter
hlt
sbb
dec
xor
mov
xchg
mov
mov
push
or
nop
cmp
jmp
lock
xor
xor
mov
xchg
jle
push
sbb
lods
dec
pop
mov
addl
pop
lods
inc
je
stos
adc
fstpt
fwait
jmp
inc
jo
je
inc
jp
jnp
push
push
mov
repnz
roll
mov
mov
test
mov
push
fdivr
test
mov
fdivrs
mov
jmp
jo
cmp
mov
push
xchg
xchg
and
xchg
push
pop
pop
mov
mov
bound
lock
into
push
iret
leave
ss
clc
mov
and
sbb
in
mov
push
loopne
mov
or
test
std
inc
inc
jns
ds
add
mov
sbb
mov
or
push
cltd
xchg
cmp
sub
push
aam
sub
mov
test
mov
in
xchg
sub
sarl
notl
xchg
fsubs
call
xchg
data16
nop
jno
pop
and
cmpb
dec
inc
push
stc
lea
cmp
jno
in
sbb
sub
cmp
outsb
sbb
lcall
add
push
push
xor
fs
outsb
js
fs
xchg
sub
enter
test
mov
mov
testb
dec
cmpsb
pop
pop
lcall
xchg
pop
mov
xchg
push
daa
mov
mov
fcomip
mov
mov
and
add
out
adc
je
mov
adc
adc
shrl
shll
or
or
add
inc
int3
fwait
push
add
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
jmp
aad
sub
ss
adc
xchg
in
or
les
xchg
cli
push
mov
stos
call
mov
mov
ja
mov
mov
cwtl
stos
loope
int3
test
push
xor
cmp
int3
stc
outsb
enter
pop
jo
movl
sub
cmp
push
mov
stos
repnz
jns
adc
inc
imul
cli
dec
repz
or
imul
sar
xchg
ss
addr16
push
inc
ja
cmp
stos
jg
push
cwtl
lods
add
pop
fcom
mov
fdivs
js
lds
clc
loopne
int
sub
repz
pop
call
pop
pop
jmp
dec
fiaddl
enter
testb
ret
and
cld
mov
mov
or
adc
push
inc
mov
jle
push
jp
xchg
mov
test
sub
sub
addr16
push
inc
mov
cmp
daa
stos
add
sub
insb
mov
bound
cmpsl
fstpl
mov
jge
xlat
stos
push
mov
repnz
in
dec
repnz
fldl
decl
fisttps
dec
les
aad
mov
mov
sbb
cmovnp
pop
push
inc
mov
aam
mov
fnstcw
in
sbb
xor
adc
push
fs
adc
mov
xor
mov
and
scas
lock
rcrb
fwait
and
or
outsb
negl
shr
ja
loopne
rcll
shrl
jnp
scas
iret
push
sarl
sub
or
sbb
ret
and
dec
xor
push
fucomp
cli
repz
ja
stc
rclb
sub
mov
bound
adc
mov
mov
xchg
pop
add
or
jp
pop
adc
sub
mov
and
test
push
bound
sahf
ja
jl
call
lds
jno
pop
mov
lods
pop
scas
xchg
add
xchg
and
mov
lods
shll
or
lods
dec
leave
sbb
fsubrs
mov
xlat
mov
pushl
daa
cmc
loopne
and
cltd
into
aad
mov
dec
testb
inc
push
jns
lds
movsl
outsb
lcall
adc
les
sbb
in
pushl
movsl
popf
push
sarb
inc
inc
xor
xchg
mov
outsb
mov
and
cld
mov
or
in
cld
cmpsb
cmpsb
mov
mov
rcrb
inc
add
mov
mov
or
fs
jb
xor
push
push
mov
out
shll
adcb
call
repnz
fsubl
insb
jg
in
mov
mov
testb
outsl
and
lock
int3
mov
dec
add
adc
rol
push
mov
inc
fistpl
adc
movsb
push
in
lock
or
xor
xor
in
sub
popf
mov
repz
in
adc
or
push
mov
sub
inc
xchg
cmp
ret
pop
out
push
addl
fistl
lret
dec
scas
jmp
pusha
test
mov
lcall
push
test
lds
sub
fsubr
loop
test
jle
mov
ljmp
push
dec
cmp
int
scas
dec
sbb
cli
bnd
mov
inc
push
jl
das
stos
push
inc
fdivl
jl
pop
or
push
add
hlt
xlat
jecxz
xor
lcall
xchg
ss
into
xor
cltd
fisubrs
cmp
mov
cld
aas
dec
dec
jne
cmpsb
xchg
push
insl
scas
out
mov
mov
xchg
jl
mov
and
cs
xchg
sub
cltd
js
jle
aad
test
stos
mov
xchg
inc
sub
sbb
xor
xchg
imul
xchg
out
popf
lock
mov
add
jnp
leave
shlb
mov
out
jb
xchg
lock
and
xchg
fstpl
adc
push
fwait
sub
jmp
stc
jmp
dec
mov
out
xchg
sbb
fwait
xchg
das
lods
call
sbb
push
inc
push
and
push
adc
test
sbb
cmp
bound
jbe
xor
aaa
fsubrs
popa
clc
inc
imul
sbbl
stos
inc
mov
insl
clc
push
sti
cmc
inc
je
int
mov
add
shrb
hlt
pop
data16
loopne
and
and
loop
mov
and
pop
sbb
jecxz
and
repnz
frstor
aaa
std
lea
add
push
xor
js
test
ffree
inc
mov
incb
pusha
fsubr
les
popa
add
xchg
adcl
or
xor
push
popa
ds
js
sbb
sbb
mov
cltd
les
add
and
sar
add
repnz
popf
lea
mov
sub
cli
pop
cmpsl
cld
jge
or
clc
mov
test
bound
mulb
movsl
clc
pushf
jg
lea
push
test
pop
sbb
mov
cmp
jno
adc
mov
cmp
in
jge
mov
mov
cld
inc
loope
adcb
jb
pop
into
pop
add
add
pop
adc
sub
jno
insb
mov
fmuls
jl
out
pop
push
push
jl
pop
mov
into
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
jmp
out
aad
aad
aad
adc
push
mov
les
psrld
dec
icebp
jg
icebp
mov
inc
dec
dec
ret
mov
adc
hlt
mov
imul
jae
mov
xor
xor
add
push
add
cmp
fcomip
dec
sub
push
mov
xchg
jmp
loop
in
dec
ficomps
pop
cmp
int3
out
add
or
add
cmp
scas
pop
inc
fbld
ret
test
xor
ds
pop
scas
cmp
enter
fmuls
fcmovne
outsb
or
push
inc
xchg
push
jno
bound
dec
jmp
push
inc
mov
jle
jg
call
imul
cld
sbb
add
in
lcall
test
sub
mov
adc
push
jb
xor
lds
inc
mov
jnp
mov
stos
add
pop
mov
mov
xchg
pop
mov
push
adc
xchg
pushf
ss
pop
push
mov
insl
lds
imul
xlat
in
shll
decl
pop
ljmp
xchg
aad
xor
mov
out
jecxz
fs
mov
idivl
scas
sub
scas
insl
js
movsl
pop
jae
jo
pop
fdivrs
out
dec
dec
mov
mov
jae
adc
out
and
ja
add
repz
stos
addr16
rclb
jb
mov
inc
dec
insb
sbb
bound
push
add
adc
imul
lea
stos
pusha
inc
and
shrb
pop
dec
addl
out
sub
divl
jno
rcrl
sbb
test
add
or
fs
add
sbb
pop
push
lret
lock
stc
xchg
lock
push
push
bound
adc
adc
dec
and
or
in
sub
sbb
add
pop
xor
in
jns
xor
mov
mov
dec
stc
ret
mov
add
std
xor
pop
xlat
jno
pop
push
dec
xchg
pop
cmp
cltd
ljmp
xchg
addr16
inc
test
jae
pop
loopne
jp
insl
xchg
or
cmpsb
ds
pop
push
cmp
sahf
bnd
jp
and
ljmp
andl
ret
addl
addr16
test
insb
arpl
pop
sahf
lcall
cld
inc
enter
sahf
popf
leave
xchg
xlat
mov
pop
mov
in
cmc
xchg
sub
mov
fcomps
cld
lret
ret
cmp
or
xor
cld
data16
clc
cltd
sarb
cmp
je
sbb
pop
mov
in
in
shrl
testb
int
push
negl
cmpsb
or
andb
nop
fdivrl
push
mov
xchg
lret
nop
adc
lods
xchg
xchg
jl
sbb
andb
mov
inc
nop
jg
inc
mov
pop
jmp
mov
orb
stc
pop
xor
adc
cmc
cmp
dec
jge
test
pop
pop
std
push
xlat
mov
add
sarb
nop
aad
cmp
int3
jae
mov
std
jb
inc
mov
lds
arpl
adc
sahf
mov
std
ss
fldenv
and
sbb
cmpsb
loope
scas
ret
loop
out
sub
orl
test
notb
mov
nop
xchg
mov
aad
and
inc
jb
rorb
mov
jecxz
mov
jmp
fwait
fwait
or
adc
sahf
xchg
xchg
enter
iret
inc
xor
mov
add
jl
lock
or
mov
fistl
fbld
add
jge
test
mov
push
int3
fcmovb
xor
and
add
cmpsl
lret
cmp
loopne
add
or
cld
pushf
lcall
test
in
arpl
shr
dec
adc
sti
push
mov
call
int
test
shrl
lods
hlt
ror
adcl
repz
enter
in
mov
ds
insb
sti
add
hlt
mov
cmp
movsl
or
in
adc
ficoml
cmp
and
or
lret
repz
setb
sub
leave
cmp
scas
xchg
mov
mov
sub
cltd
xchg
sub
mov
sub
scas
cmp
icebp
js
xchg
fcmovb
test
xchg
cli
inc
out
stc
push
iret
and
adc
aad
arpl
mov
xor
mov
pop
pop
mov
shll
add
repnz
dec
dec
dec
sub
sti
push
mov
movsl
lods
int3
mov
ljmp
push
stos
aam
pushf
movsb
cmp
aaa
and
js
inc
pop
aaa
mov
ret
in
or
aas
shll
cwtl
rcrb
icebp
mov
jge
dec
xorb
lahf
mov
push
nop
movsl
shl
icebp
stc
sub
jno
lods
addr16
xlat
les
fimull
push
test
sti
or
imul
movsb
arpl
mov
js
popf
push
iret
xchg
xor
mov
mov
sub
cmp
mov
push
js
aaa
mov
xor
cld
mov
rcll
roll
jb
cmpsl
jp
hlt
mov
and
mov
jo
popa
mov
jae
xchg
dec
test
lds
popf
jle
dec
pop
push
ljmp
mov
fsubrs
mov
lret
inc
negl
dec
je
fidivrl
fisttps
jp
pop
scas
fidivrs
cmpsl
mov
cltd
imul
call
sahf
push
incb
ret
hlt
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
jmp
imull
xchg
xchg
aam
jmp
js
add
shlb
stos
fstps
sti
pop
dec
shrl
and
adc
pop
scas
lcall
sub
sub
jo
or
push
xchg
push
fucomi
cwtl
push
sbb
push
int
outsl
loop
xor
inc
cltd
inc
xor
xor
or
mov
cltd
movsl
adc
cmp
lcall
adc
sbb
mull
inc
xor
sahf
xor
dec
insb
ljmp
sahf
shr
dec
xchg
fwait
lods
push
mov
inc
adc
sbb
pop
or
jmp
or
pop
imul
lret
mov
cltd
or
out
dec
addl
jno
stc
divb
add
jl
mov
add
daa
rolb
inc
fdivrl
xchg
out
scas
sarb
fsubrl
mov
push
in
add
sti
push
dec
xchg
jo
out
push
sub
or
es
push
nop
lods
mov
aam
jae
cmp
or
mov
jo
xor
dec
push
hlt
xor
repz
cmp
in
jne
int
imull
in
scas
xchg
mov
jecxz
mov
push
aam
adc
pop
add
or
dec
addr16
leave
adc
push
mov
adc
sbb
data16
pop
adc
sub
xchg
nop
add
mov
out
cmp
lret
pop
cli
jmp
movsl
sub
shlb
loopne
adc
pusha
jo
punpckhbw
push
adc
pop
cmp
add
mov
mov
mov
cwtl
push
in
jg
adc
leave
mov
sub
fidivs
in
or
in
dec
mov
iret
inc
popf
aaa
clc
sahf
addr16
sbb
popa
mov
imul
cmp
je
loopne
mov
push
fwait
push
xchg
inc
fildl
lret
push
mov
xchg
aad
imul
sti
xlat
insb
lcall
das
cs
add
dec
iret
pop
sbb
int3
rolb
cmp
sub
ds
aaa
movsb
mov
mov
and
mov
inc
jge
add
and
imulb
jmp
mov
lock
or
aam
popf
cld
jbe
or
mov
hlt
fiaddl
out
mov
lahf
fnstenv
icebp
scas
mov
push
inc
jl
xchg
jmp
loope
mov
sbb
lcall
sub
or
je
roll
mov
test
jmp
jecxz
sti
aam
push
call
fidivl
and
mov
jmp
push
in
call
lock
fldl
mov
jo
movsl
std
shlb
and
cmpsb
js
mov
sub
nop
enter
xor
lock
pop
cmpsl
jno
or
inc
lret
sub
xchg
std
lcall
in
xlat
and
fiadds
fisubrl
out
dec
pop
mov
jge
mov
sub
aas
adc
jae
sub
int3
ss
mov
sbb
mov
pop
mov
loope
jge
pop
adc
pop
je
or
xchg
out
scas
jbe
icebp
push
mov
lds
mov
add
pop
lods
test
lds
push
ret
test
movsb
lds
loop
dec
mov
aam
sbb
adc
xchg
cmp
cmpsb
adc
ljmp
imulb
mov
cld
lret
xlat
insl
stc
jecxz
idivl
addr16
cli
ja
mov
jo
addl
cmp
jp
out
cmp
inc
std
inc
loope
xchg
push
and
arpl
inc
sbb
and
adc
pop
imul
cmpsb
les
xchg
out
jle
xchg
or
adc
lret
jecxz
cli
sub
shrb
and
fistl
into
ss
movb
stc
push
pop
ror
cmpsb
xor
pusha
inc
cltd
aas
jge
mov
addb
fnstcw
hlt
mov
js
xchg
jl
and
sbb
push
push
stos
xor
xchg
sbb
outsb
and
jle
test
es
lret
int3
mov
insl
aad
cmc
inc
add
cmpsl
stos
fbld
sbb
or
ja
sub
into
ss
adc
lock
movsl
jbe
insl
test
push
loop
das
mov
shlb
repnz
mov
aas
dec
sar
test
in
mov
fdiv
jg
xchg
push
test
fnstenv
inc
cld
jmp
stc
lods
stos
and
dec
fwait
rcl
xorl
cmp
jg
lock
push
es
sub
ror
bound
jae
scas
adc
idivb
or
daa
out
xor
imul
repnz
popa
sbb
push
cltd
jbe
jp
xchg
enter
sbb
sub
inc
cmp
movsb
xor
push
hlt
or
push
pop
aad
iret
pop
inc
call
jns
ds
fisttps
in
dec
push
pop
es
dec
pop
pop
and
jle
in
in
daa
xchg
cmp
fidivrs
mov
addr16
fdivs
in
and
cmp
dec
push
fwait
sub
aam
jno
aam
fs
cld
shll
fdivrs
jns
lock
push
cmp
test
imul
outsl
inc
loope
inc
scas
cmp
cs
out
int3
or
cmp
cmp
mov
aas
mov
lock
sbb
outsl
push
test
push
sub
and
push
loopne
pop
inc
fwait
loopne
and
pop
ss
std
out
push
pop
incl
sbb
mov
or
cmp
mov
adc
sbb
ds
imul
fidivrs
popa
and
fbld
mov
inc
dec
add
std
ret
addb
cmp
push
outsb
xchg
gs
and
mov
fisubrl
ss
jmp
ret
adc
and
xchg
jo
mov
pop
add
nop
pop
and
and
dec
dec
xor
gs
mov
push
jmp
inc
loopne
adc
test
iret
pop
mov
push
add
btc
movw
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
pop
fdivl
jo
push
push
mov
mov
dec
repz
pcmpgtw
push
xchg
jp
inc
out
imul
dec
aad
pop
push
shll
sub
fcmovnb
xor
loope
les
mov
dec
dec
test
sahf
cld
inc
rcl
cltd
pop
inc
stos
adc
lahf
and
adc
mov
jle
dec
push
push
leave
ljmp
push
add
pop
dec
mov
mov
orl
out
call
jae
and
icebp
mov
xor
mov
xor
test
rorb
popf
jne,pt
and
cmp
lahf
xchg
flds
cmp
mov
or
test
sub
adc
sub
sub
mov
out
add
inc
add
ret
mov
and
aad
jb
ret
test
cmp
cmp
adc
lods
ljmp
popf
dec
mov
xor
push
cmp
inc
jmp
or
xchg
xchg
scas
iret
or
repnz
out
push
pusha
nop
cmc
test
ss
flds
mov
sbb
xchg
cmpb
mov
xor
xchg
cmp
fstpt
push
mov
dec
aas
mov
cltd
jle
scas
das
adc
mov
sbb
les
sub
xor
mov
pop
je
stos
popa
or
pushf
push
leave
sahf
pushf
xchg
in
jo
fnstcw
mov
xchg
jo
leave
inc
into
ja
or
scas
lcall
jb
data16
adc
jmp
ljmp
inc
pop
dec
mov
bound
push
and
dec
jno
cmp
fsubs
es
scas
loopne
dec
stos
pusha
inc
cmp
jecxz
sub
gs
xchg
and
adc
cmpsb
test
into
jbe
int
sti
cmp
jg
mov
push
out
pop
pushf
mov
sti
pop
xlat
xchg
jg
insl
aaa
cmp
subb
cmpsb
rol
shll
push
add
fimuls
icebp
roll
insl
testl
xlat
pop
daa
test
inc
aaa
lods
cmpsl
loopne
mov
adc
pop
cld
test
sahf
lock
stos
js
jecxz
pop
imul
dec
test
adc
mov
in
ds
cwtl
out
or
push
rcll
pop
push
or
in
clc
add
push
or
mov
jmp
dec
mov
inc
mov
aaa
sub
test
icebp
mov
arpl
inc
daa
pop
filds
repz
rcll
popa
jns
in
add
test
dec
icebp
mov
pop
fmuls
lret
cmp
imul
mov
movsb
sbb
add
jg
ljmp
bound
adcl
daa
cmovp
xor
ds
lcall
popf
fadds
dec
stos
aaa
sbb
rcl
lea
insb
push
mov
mov
fdivrl
cs
xor
adcl
jae
cltd
xor
cmpb
mov
stc
mov
arpl
enter
and
adc
aas
add
dec
sub
cld
adc
cmp
ds
leave
es
aam
xchg
inc
inc
cmp
into
popf
ret
sub
and
pop
sub
dec
gs
add
fsubr
lret
rolb
push
xor
gs
jle
pushf
faddl
pop
cmp
cmc
dec
xor
aaa
inc
cld
push
lahf
std
lds
add
jge
fsubrl
jp
in
gs
xchg
sub
inc
mov
inc
lahf
push
pop
int
xchg
data16
jg
add
jg
adc
pusha
xor
push
dec
push
sub
ds
ja
mov
mov
stos
in
sahf
in
mov
into
sub
push
pop
jnp
lock
pop
icebp
xor
lods
repnz
je
mov
mov
sti
and
jge
adc
fmull
xor
mov
jo
pushf
or
dec
fistl
aad
push
add
push
lahf
lahf
cli
loopne
std
cli
ret
jl
pop
mov
lods
imul
jl
ret
add
fmulp
shlb
mov
cmp
enter
int
repz
sub
jl
pop
insl
enter
imul
dec
clc
adc
clc
cld
add
fstps
fstps
cli
pop
or
mov
movsb
nop
ljmp
push
test
call
lahf
mov
fidivs
pusha
pop
movsl
fmuls
and
or
cs
into
jp
pushf
ret
adc
lcall
xchg
mov
subb
cmp
out
insb
pop
pop
and
repz
xchg
bound
mov
adc
and
int
fs
fwait
mov
add
cltd
cmc
cs
lock
or
and
and
mov
push
add
dec
rcrl
push
pusha
push
inc
mov
scas
out
adc
adc
sub
mov
dec
popf
inc
sub
jne
popa
lret
sub
femms
repz
pop
or
lds
roll
loop
addb
fmull
pop
ret
int3
push
cmp
push
addr16
mov
bound
mov
outsb
jnp
fstl
or
adc
test
xlat
xchg
jecxz
movl
jne
push
mov
testb
add
movsb
hlt
js
les
jg
hlt
pop
and
inc
add
dec
ljmp
push
mov
mov
andb
dec
cmpsl
or
dec
mov
ret
jp
jb
and
test
das
lds
insb
inc
mov
dec
pop
jno
sbbb
inc
xor
fmull
test
shrl
mov
sbb
xchg
sbb
inc
in
push
pop
mov
mov
cmpsl
jne
cmp
fs
cmpsb
inc
pop
cmp
and
mov
xor
loopne
fwait
mov
roll
in
mov
mov
ds
ret
mov
data16
popa
push
loop
jle
repnz
jmp
or
and
stos
into
inc
or
cmp
stos
cmpsb
mov
push
aas
lret
cmpsl
pop
cmp
sbb
push
insl
or
insl
jge
jp
mov
fsubs
adc
fmuls
dec
finit
notb
inc
cld
addb
mov
mov
mov
mov
push
add
push
adc
jmp
lcall
xor
inc
popa
sub
pop
add
jae
fwait
test
inc
inc
movsl
dec
add
sub
stos
loope
int3
cmpsl
mov
ljmp
in
sub
dec
clc
jo
push
testl
mov
xchg
or
outsl
lcall
roll
and
cmp
pop
nop
sbb
xorb
data16
imul
mov
xor
movsl
movsl
popl
pusha
aad
addr16
repnz
mov
sub
mov
push
jno
or
dec
test
xchg
outsl
adc
xor
inc
jae
xor
dec
loopne
sbb
orb
dec
pop
sbb
jo
loope
fbstp
je
scas
xorl
rcrl
push
cltd
aaa
lods
adc
push
inc
mov
clc
xor
ss
cmp
pop
roll
xlat
dec
sbb
adc
adc
xchg
lods
cld
insb
sub
mov
adc
cli
jl
xchg
xchg
jle
aam
and
mov
outsb
fdivrs
xchg
mov
dec
clc
js
cwtl
sub
in
lods
cmpsl
xchg
into
mov
dec
pop
push
loope
ss
pushf
or
sbb
lock
ret
sbb
popa
mov
pop
outsl
add
adc
sub
nop
adc
insl
scas
scas
xlat
in
into
ficoms
mov
jae
xchg
out
test
pop
int
lret
adc
test
into
out
add
loope
test
orb
lret
pop
imull
inc
iret
cli
loope
loopne
jno
inc
jb
outsb
movsb
jae
fdivs
xor
sahf
lods
xor
dec
rcrl
mov
xchg
int
pop
lahf
mov
pop
add
cli
add
add
or
sbb
mov
xchg
adc
es
movsb
sub
mov
fdivr
dec
or
stos
and
add
mov
les
pop
dec
pushf
shlb
or
mov
daa
sub
stos
add
dec
fwait
and
call
mov
add
mov
pop
adc
jmp
frstor
jp
xchg
or
sahf
dec
sti
pop
cmp
xchg
notl
push
int3
sbb
aam
cli
call
iret
dec
fsubrp
int3
and
data16
mov
sbb
das
pop
stos
mov
mov
clts
movsl
adc
xchg
adcb
and
jbe
inc
and
andl
lahf
inc
jmp
rolb
enter
mov
xchg
and
roll
js,pt
jecxz
int
insb
cmp
jne
insb
lcall
xchg
mov
test
nop
mov
push
stos
sbb
out
sub
push
aad
fadds
jnp
mov
xor
movsb
sahf
fadd
outsb
sbb
cwtl
mov
pop
and
mov
loopne
add
gs
in
pop
mov
loopne
jmp
fisubrs
pop
rcrb
add
ficoml
add
jmp
fdivr
aad
xor
jg
sbb
pop
sbb
mov
add
inc
lods
pop
jle
fs
daa
shlb
cs
lds
mov
xchg
lea
lret
into
fwait
stc
test
pop
icebp
les
lock
rcll
adc
scas
lods
movsl
data16
shll
aas
push
add
xor
mov
xchg
sbb
data16
inc
cwtl
lds
sahf
aam
in
sahf
dec
fldenv
mov
add
adc
xor
imul
clc
mov
in
mov
jmp
push
pop
xor
jbe
ucomiss
mov
test
bound
mov
add
loope
test
iret
jl
inc
in
in
idivl
icebp
inc
xor
sahf
out
pop
into
cmp
or
add
add
dec
xor
cli
cmpsb
xor
dec
pop
jmp
faddl
cltd
insb
pop
cli
lcall
pop
sbb
jmp
mov
cmp
test
sub
cltd
push
fwait
xor
cmc
inc
sub
nop
xchg
add
mov
mov
xor
scas
or
push
cmp
or
in
arpl
movsb
sbb
or
repz
outsl
push
int3
call
jnp
enter
pop
adc
inc
pop
push
inc
cmp
fwait
push
popa
dec
lea
leave
test
scas
inc
orl
xchg
xchg
ja
adc
sbb
clc
outsl
push
pop
jle
in
mov
pop
mov
cmp
mov
dec
push
adc
xor
xor
fnstenv
jle
cwtl
fnstcw
lcall
das
stos
jae
cli
inc
addr16
ds
sbb
add
jnp
and
push
dec
fsubl
lcall
mov
ds
xchg
test
test
push
add
std
stc
fwait
sbb
push
in
xlat
xlat
lcall
pop
and
jb
test
add
in
mov
imul
icebp
cmp
sbb
aad
in
in
cli
cmpsb
xchg
mov
and
js
cltd
sti
sbb
es
add
iret
mov
cmovl
mov
je
inc
fstl
sub
mov
mov
xlat
pop
gs
scas
xor
or
pop
xor
es
adc
loope
push
imul
pop
fcmovbe
cli
jl
mov
sbb
jp
sub
mov
aas
imull
xor
bound
pop
sub
push
cli
shl
xor
test
jl
inc
cmpsl
jmp
into
cld
mov
in
stos
xchg
mov
mov
mov
and
push
mov
mov
pop
gs
je
push
imul
bound
popa
dec
pop
or
cmpps
lea
add
mov
cmp
loopne
and
jmp
and
imul
jae
retw
mov
pop
ret
xchg
stos
mov
pushfw
pop
sahf
add
out
imul
cwtl
arpl
aaa
test
sub
fsubr
lods
adc
pop
cmc
mov
rcr
aad
shlb
mov
adc
mov
js
mov
in
imul
aad
shll
movsb
pop
arpl
push
pushf
outsb
cs
ret
sbb
pop
lcall
ja
roll
and
mov
mov
pop
outsb
push
mov
mov
xchg
add
mov
mov
sub
mov
jmp
mov
and
cwtl
sub
inc
push
push
je
push
add
jmp
jae
sub
stc
fisubrl
outsl
add
daa
adc
cltd
adc
xor
xor
jmp
or
mov
fdivrl
sbb
xchg
mov
jb
stc
mulb
or
test
out
add
jae
in
loopne
adc
imull
fsts
stc
out
or
je
mov
out
fwait
add
sub
jns
clc
xchg
xchg
push
or
jne
push
repz
lret
mov
popa
insb
mov
sub
mov
popf
xor
jg
mov
pop
sbb
je
out
jge
shl
test
insl
outsb
shlb
fcoms
movsl
xchg
cmc
mov
repz
adc
shll
ja
push
pop
adc
les
xor
fs
dec
jae
leave
mov
sub
scas
js
and
and
inc
add
ror
sub
push
mov
ret
fstpl
lods
lea
mov
xchg
xlat
xchg
icebp
xor
les
sub
cmp
aam
mov
xlat
jmp
xor
jns
dec
into
mull
pop
xor
dec
xchg
mov
mov
add
loope
mov
daa
or
repz
push
ficoml
add
inc
sbb
repnz
xorl
dec
cmpsl
push
adc
add
xlat
movsl
push
outsb
ljmp
jge
ds
push
pop
arpl
outsb
mov
jmp
fdivr
adc
jnp
jecxz
fwait
xor
push
sub
mov
shrb
pop
xchg
int3
mov
sub
je
addr16
adc
mov
movsb
outsl
hlt
push
push
and
mov
lahf
xlat
jo
xchg
and
adc
dec
xchg
jno
lcall
out
in
test
push
jne
out
and
mov
or
cmp
xchg
sub
fwait
rcr
push
add
jbe
sbb
test
inc
mov
mov
dec
jo
adc
scas
sbb
int
jmp
imul
mov
dec
test
cmpb
mov
out
and
xchg
aad
mov
and
popa
repz
push
add
movsb
inc
cmp
inc
pop
inc
aas
inc
xorl
inc
out
lods
inc
cmp
dec
sbb
rclb
outsl
lock
aaa
jne
inc
xchg
loop
movsl
push
cmpsl
js
xchg
mov
mov
lds
mov
aam
push
or
arpl
adc
and
sbb
xor
dec
pop
pop
repz
inc
sub
imul
fnsetpm(287
movsl
fs
mov
add
pusha
fidivrl
pop
inc
ljmp
pop
lock
insl
push
and
daa
or
lods
or
cmc
dec
sti
pop
cmp
bound
jp
sbb
fs
inc
pop
cltd
testb
inc
decl
xchg
out
inc
ds
sub
sbb
sbb
sub
lods
test
loope
mov
push
jno
mov
repnz
sbb
mov
repz
loop
sbb
push
fsubs
lods
push
mov
jnp
jno
enter
addr16
pop
outsl
aas
out
cmp
or
out
stos
arpl
xlat
and
dec
jle
xchg
daa
inc
pop
arpl
mov
jp
mov
xchg
or
inc
pop
mov
decb
les
xor
loope
test
sbb
jmp
dec
daa
cmpsb
mov
xor
out
jae
xchg
pop
dec
xor
pop
fwait
add
push
dec
adc
fdivrl
fcmovu
loop
push
rcll
and
pop
les
sarl
jns
lret
jecxz
lret
push
add
xor
cmpsb
adc
jge
adc
inc
rol
int3
mov
out
or
adc
add
lcall
mov
sbb
mov
shrb
mov
ljmp
insb
pop
nop
hlt
fldl
cmpsb
aaa
in
out
jbe
pop
add
lret
aam
pop
fcomps
or
in
ret
adc
xchg
jmp
adc
adcl
sub
mov
es
or
jp
lock
inc
mov
and
sahf
hlt
jae
pop
ret
xor
xlat
and
les
xor
cmp
shl
fbld
mov
test
sti
movsb
sahf
inc
inc
push
xchg
rcll
add
lahf
out
push
out
stc
dec
xchg
outsl
push
push
mov
je
negl
jae
jnp
sbb
xchg
rorb
clc
ret
add
int
movsl
rcrl
push
mov
xchg
mov
xchg
push
lods
jnp
iret
stos
in
sub
push
cli
ljmp
int
je
icebp
mov
push
cmp
dec
or
les
dec
enter
inc
cmc
and
xor
fdivs
cs
dec
inc
sbb
out
negb
jnp
cs
mull
and
pop
pop
cmpsl
inc
dec
or
aaa
aaa
pop
xchg
or
fs
mov
je
ret
xlat
mov
clc
dec
repz
push
and
fwait
xchg
ljmp
leave
sub
jo
xlat
test
mov
loope
setnp
push
movsb
or
dec
add
and
in
inc
mov
rcl
stc
fxtract
mov
cwtl
mov
icebp
aad
loopne
dec
jmp
xor
jbe
fs
loope
cmp
scas
mov
adc
out
out
sti
enter
jmp
pop
into
pop
sbb
inc
adc
aad
imul
test
or
add
inc
aam
dec
jae
push
mov
dec
enter
into
xlat
scas
adc
and
rcll
shll
xchg
out
jp
loopne
add
fwait
mov
pop
lods
mov
repnz
pop
adc
scas
mov
bound
mov
sbb
inc
jb
or
in
dec
pushf
mov
xor
sub
scas
cmp
xor
test
add
dec
incb
mov
jecxz
mov
jo
xor
push
xor
push
pop
cmpsb
lock
lcall
stos
add
mov
dec
cmp
and
sbb
dec
or
pop
decl
aaa
xchg
out
stc
push
data16
sub
cwtl
mov
cmpl
pop
add
or
ss
cmp
lods
dec
sub
clc
dec
push
cmc
push
push
sbb
pop
push
sbb
push
lock
adc
inc
sahf
adc
ret
mov
push
movsb
dec
sub
hlt
outsb
jmp
sub
jmp
shr
stos
test
arpl
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
jmp
lcall
or
inc
inc
cs
add
sub
inc
push
ja
int3
xor
push
and
iret
arpl
mov
in
lret
mov
or
nop
bound
mov
add
push
lcall
mov
pop
inc
sbb
add
loopne
pop
mov
cmpsl
lds
and
cltd
call
fwait
dec
mov
out
cs
jbe
les
push
lret
lret
push
lahf
mov
xchg
das
pop
xchg
jne
adc
pop
adc
sub
inc
daa
push
rcll
add
jbe
clc
cmp
sti
cli
mov
imul
call
out
jmp
addr16
push
push
shll
sbb
dec
add
jp
lcall
dec
ljmp
sub
aas
cli
idivb
inc
stos
lret
add
cwtl
ret
shll
adc
fimull
pusha
dec
mov
sub
push
divl
xchg
dec
movsb
ret
mov
or
jg
mov
mov
cwtl
sbb
outsb
orl
fisubs
mull
pop
in
pop
andl
xor
sbb
test
std
push
inc
add
je
test
aaa
test
jo
or
outsl
shll
fistpll
xchg
inc
ss
js
dec
xor
xchg
cmp
sarl
clc
push
lods
cmpsb
jnp
mov
lahf
outsb
pop
rorb
test
adc
push
push
ret
jge
xchg
stos
mov
js
and
lock
js
push
icebp
repnz
sbb
sbb
mov
mov
cli
jne
sub
hlt
lods
fs
aam
dec
jecxz
sub
sti
mov
fst
pop
repnz
dec
push
push
fildl
test
sbb
test
mov
iret
and
scas
dec
inc
lds
sahf
ljmp
rcll
add
loopne
loopne
mov
fsub
outsl
movsb
add
pop
fcmovne
inc
fstps
add
insb
inc
and
sbb
lods
stos
push
out
dec
jo
cld
int
and
lret
pop
push
orb
leave
mov
testl
jle
pop
sub
dec
or
cmp
inc
inc
dec
xor
cli
mov
fisubl
inc
cmp
jmp
cmp
push
aam
loopne
in
jmp
adc
fwait
movsl
xchg
pusha
js
lret
push
dec
cli
dec
mov
popf
shlb
push
shl
mov
or
xor
ds
call
shll
lock
popf
lea
ficomps
mov
xchg
push
psubw
mov
rolb
lcall
dec
lret
xchg
mov
and
jns
or
lret
pop
enter
jge
xchg
inc
lret
jmp
leave
push
shll
sbb
into
js
mov
or
xchg
decb
jns
adc
hlt
outsb
pop
hlt
in
test
adc
cwtl
sarb
cwtl
sbb
sub
das
cld
inc
dec
shlb
dec
mov
jb
icebp
aas
subb
out
mov
pusha
jge
push
sub
loopne
sbb
insb
lahf
push
jno
ja
pop
pop
jnp
fs
dec
test
inc
cltd
cld
or
popf
outsl
mov
pushf
push
js
test
outsl
pop
mov
es
in
ds
shlb
adc
mov
mov
ret
lcall
scas
jae
xlat
in
mov
out
loop
test
push
cmpl
mov
sbb
lahf
in
dec
inc
pushf
push
pop
insb
inc
mov
fstps
and
mov
imul
or
adc
cmpsb
pushl
xor
xchg
aam
addl
jo
xchg
subl
adc
push
fwait
push
xor
mov
lahf
sub
pop
mov
in
fnsave
xor
pop
xchg
lods
je
lret
call
pusha
gs
adc
ljmp
shlb
fildl
adc
lahf
add
xchg
adc
rolb
ds
ja
jl
loope
pop
dec
fidivrl
pop
add
jl
addr16
bound
mov
jg
out
stc
sti
sub
test
xor
ljmp
dec
sub
sbb
push
cmp
fdiv
loope
or
jmp
mov
ds
cmp
ds
sbb
mov
out
cli
sub
push
xor
xor
fs
mov
dec
popf
loopne
iret
dec
add
xacquire
jp
in
inc
mov
cmp
into
pop
setnp
adc
fwait
push
adc
or
inc
ljmp
shl
xor
lcall
lret
popf
push
pop
inc
xchg
ljmp
aaa
out
jbe
and
and
push
fsubs
ja
push
outsl
mov
inc
lods
mov
fwait
jp
jg
push
out
and
cltd
push
or
lods
ret
popa
loopne
pop
into
xlat
sub
sbb
or
push
and
addr16
lea
xor
jne
clc
xchg
fbld
xchg
inc
rorl
imul
push
dec
sahf
pop
sub
ret
jg
scas
imul
cmc
iret
and
sbb
pop
xorb
fdiv
push
lahf
push
pop
aas
adc
push
call
in
pop
mov
cld
sbb
call
leave
in
xor
sbb
sub
cs
cwtl
ljmp
adc
mov
outsl
icebp
rol
mov
lock
jno
push
mov
mov
or
test
aas
push
fildl
dec
mov
lods
enter
bound
and
sub
fs
cmp
repnz
call
je
and
inc
ja
popa
inc
pop
pop
fisubs
out
xchg
icebp
lods
js
push
dec
add
ja
fimull
push
test
sahf
and
mov
fs
cmpsb
xchg
and
or
push
movl
jg
cmp
xchg
jns
mov
sub
fbstp
sub
outsl
push
enter
fxch
cmpsl
sbb
pop
in
inc
mov
enter
orb
addb
jmp
in
xor
std
cltd
enter
pop
movsb
adc
popl
push
cmp
pop
xor
xchg
popa
stos
sub
lock
out
int
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
jmp
mov
sbb
popf
or
dec
xchg
push
in
inc
add
add
pop
xchg
push
clc
xor
repz
jno
push
mov
push
stos
or
out
scas
sbb
dec
movsb
sub
sti
je
sub
fisubl
ret
ret
fcomi
cmpl
fs
jmp
mov
add
mov
push
popf
pushf
cmp
sub
iret
popf
push
out
icebp
test
mov
loop
out
mov
outsb
fs
xchg
lods
push
mov
pop
add
adcl
cli
fiaddl
popa
pop
inc
xor
xchg
adc
mov
inc
inc
orl
xchg
cmpsl
push
test
in
jae
xchg
fadd
sbb
mov
pop
sub
mov
mov
dec
roll
adc
mov
pop
arpl
lds
bound
sarl
inc
sbb
js
push
fsts
cltd
lret
xchg
ret
out
push
pop
or
loope
sub
cmp
leave
js
xchg
orb
fisubl
pop
sbb
mov
mov
popf
xchg
push
xor
or
or
fsubl
sbb
mov
test
scas
lret
cli
loopne
jmp
test
cld
pusha
pushf
jb
dec
fmuls
sub
movsb
sahf
mov
rcrb
test
lret
pop
pop
lods
xlat
adcb
enter
rorl
adc
inc
lods
push
mov
push
cmp
dec
xor
test
jp
pop
add
mov
lea
scas
cmp
mov
cli
out
outsl
das
push
fidivl
push
std
pop
or
jns
sub
pop
fstpl
and
jo
and
and
pop
xchg
sub
enter
cmpsl
xor
js
pushl
xchg
jne
in
mov
pop
pop
xor
enter
or
sbb
xchg
push
fcoms
out
pop
data16
les
xorb
pop
rorb
push
push
stos
repnz
cmp
xchg
mov
popf
loopne
je
lds
push
push
adc
jl
sub
adc
cmovno
cli
test
xor
adc
scas
aaa
fs
jnp
sarl
pop
xchg
aam
arpl
out
xor
adc
sti
pop
clc
mov
cli
or
mov
jo
mov
ret
mov
mov
arpl
mov
in
adc
ljmp
cmp
int
or
aad
mov
fadd
jno
mov
jbe
or
cmp
sub
je
aaa
jecxz
lea
fwait
mov
ds
test
and
jge
in
xor
push
roll
popf
or
dec
lds
imul
and
jle
int3
stc
insl
daa
jae
push
imul
mov
das
out
adc
pop
add
push
cmp
sub
subb
jbe
in
addb
call
inc
sbb
inc
jae
pop
ret
and
js
js
adc
cltd
or
cmpb
icebp
les
xor
scas
mov
ljmp
adcb
mov
std
push
dec
cltd
xchg
aam
push
stos
jno
jecxz
pop
movsb
mov
and
push
sbb
xlat
jne
sub
jno
sbb
mov
ret
or
cli
jmp
imul
test
imul
xchg
fisubrs
push
push
ja
push
cmpsb
leave
sub
and
mov
or
or
cli
out
jmp
inc
movsl
push
pushf
adc
mov
jns
mov
sub
aaa
and
lea
loopne
mov
int
lcall
sub
inc
mov
sti
jp
lret
dec
cmpsl
xbegin
lret
push
rcr
sub
in
cmp
dec
cld
mov
xor
and
and
hlt
xlat
or
loop
jg
sub
mov
pusha
hlt
mov
div
jno
mov
jbe
push
cmpb
jecxz
dec
hlt
push
iret
add
popf
inc
cli
sub
or
movsb
add
lret
push
and
xchg
push
sub
pop
push
push
les
pushf
fmulp
mov
dec
rol
or
lds
jge
aas
mov
mov
cmp
mov
jo
mov
sbb
push
and
and
jbe
mov
cmp
dec
cld
inc
inc
cmp
mov
cmp
adc
mov
and
fcmovbe
flds
pop
fstp
add
mov
aaa
adc
lret
cld
sub
lea
in
pop
std
adc
andl
lret
jne
mov
jge
xchg
loope
test
sbbb
outsl
jbe
aaa
push
repz
nop
aad
add
jg
in
or
in
sub
dec
and
adc
loop
adc
scas
mov
cmp
pop
jl
inc
or
insl
add
incb
fisubs
loope
pop
mov
jmp
push
scas
jle
pop
ret
aad
rorb
rorb
or
mov
stc
das
lret
jl
mov
sbb
in
mov
js
pop
cwtl
fistps
jnp
or
ljmp
sbb
push
std
sbb
popf
loope
xor
pop
pop
rcrl
sti
dec
cmpl
cwtl
popf
jmp
xchg
lret
xchg
aad
push
pop
iret
mov
pop
dec
inc
pusha
ficoml
add
xchg
imul
mov
xor
inc
adc
inc
and
icebp
test
sbb
lahf
out
jmp
dec
call
jbe
inc
sbb
cmp
adcl
fcoml
out
push
mov
stos
arpl
scas
lods
mov
sbb
push
je
jno
push
and
jp
out
cmp
pop
sub
daa
pop
sbb
pop
ret
das
push
loop
mov
loopne
pop
pusha
scas
int
subb
mov
divb
sbb
das
addr16
dec
push
sub
les
push
cld
dec
xor
or
or
xchg
mov
and
fisubl
rsqrtps
std
jg
leave
fs
inc
add
icebp
mov
add
loop
inc
jmp
icebp
faddp
inc
popf
and
or
mov
push
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
jmp
mov
xchg
adc
mov
ss
add
jo
push
mov
push
or
bound
fwait
mov
add
jnp
aad
mov
insl
lea
dec
test
dec
jb
push
insl
stos
dec
mov
mov
dec
mov
cmp
stos
inc
insb
xor
popa
adc
mov
push
fwait
stc
ret
sbb
xchg
xchg
ljmp
jg
test
fimuls
fisubl
out
ret
pop
jp
push
leave
sbb
repnz
push
push
pushf
and
das
pop
gs
enter
xorb
xor
inc
mov
cmp
mov
stos
test
insl
iret
lret
push
shlb
lods
stc
adc
lds
pop
push
imul
scas
outsl
mov
inc
mov
lret
popa
out
out
cmp
pop
mov
cwtl
lea
int
fldenv
cmc
inc
mov
mov
cmp
add
lea
pop
mov
int3
mov
dec
add
fcomps
fidivs
xchg
cmp
int
int3
sub
or
jno
pop
xor
leave
dec
mov
fnstsw
xor
push
pop
dec
out
mov
mov
cwtl
inc
push
fwait
clc
idivb
and
hlt
into
aaa
jo
adc
test
mov
test
ret
push
sar
inc
xchg
sbb
insb
pop
mov
sbb
test
out
ds
xor
xor
test
cmp
dec
lock
xchg
testb
xchg
xchg
shrl
decb
xchg
aas
inc
cmp
and
repnz
loop
lahf
loop
lds
mov
iret
xchg
out
mov
scas
bound
inc
xor
push
aam
add
imul
fs
sub
push
clc
lds
cld
mov
outsl
xchg
loop
mov
sub
adc
scas
and
inc
and
aaa
push
in
mov
lea
std
mov
dec
xchg
scas
jo
hlt
js
bound
dec
sti
js
loope
pop
arpl
testb
out
movsb
pop
gs
aad
mov
mov
aad
mov
negl
mov
jb
inc
or
sahf
leave
push
push
add
jmp
cmp
mov
cmp
push
gs
mov
ret
xor
dec
cmp
rcl
fstps
jae
push
shl
pop
cmp
add
inc
lret
pop
jne
mov
push
loop
fisttps
in
adc
xchg
or
adc
dec
mov
xchg
fisubrs
data16
pop
xchg
mov
loopne
mov
icebp
inc
add
imul
out
cmpsb
mov
cltd
inc
dec
dec
insl
sbb
imul
sub
mov
pop
add
and
jne
mov
and
push
push
pop
lret
bound
jl
daa
sbb
jno
cmpsl
leave
mov
sahf
dec
imul
out
mov
ds
bound
sarl
addr16
inc
jne
mov
stc
xchg
xor
pop
or
sub
push
fstl
mov
test
xchg
js
push
sbb
dec
sbb
sbbl
cmp
mov
sub
inc
sbb
sub
or
mov
ficoms
jg
pop
xchg
pop
gs
inc
into
xchg
cmp
imul
sbb
and
mov
or
imul
mov
pop
sub
cmp
test
fucom
xchg
loop
inc
dec
and
je
mov
cltd
ficompl
ret
mov
gs
sti
out
ds
pushf
mov
jb
inc
nop
xchg
xor
shll
rolb
mov
xchg
test
mov
popa
push
scas
into
or
sub
mov
mov
sbb
sahf
mov
jo
insb
push
mov
ja
xor
mov
repz
push
ljmp
clc
pop
mov
dec
gs
mov
lds
jl
xor
fiadds
rorl
lds
or
inc
mov
jae
xchg
lods
jnp
lods
cmp
test
aas
into
push
mov
sub
mov
add
inc
adc
and
in
inc
sub
sbb
cli
bound
dec
xchg
nop
nop
in
adc
dec
test
ja
dec
test
jecxz
into
sub
test
sbb
out
pop
sub
sub
mov
xchg
cmpsb
mov
inc
repz
fdivrl
mov
mov
add
movsb
std
mov
mov
push
fnstenv
insb
xchg
f2xm1
cltd
lock
out
aad
test
sbb
cs
es
push
mov
cmpsb
movl
mull
inc
and
jg
loop
mov
sarl
out
es
sub
inc
gs
inc
in
push
cld
mov
ret
push
pop
jmp
loop
ret
imul
dec
lcall
xchg
dec
dec
add
popa
sahf
mov
fistl
ljmp
pop
mov
gs
sbbl
pop
lds
sub
mov
sub
lcall
gs
das
insb
lds
gs
pop
mov
mov
shlb
and
mov
lods
xchg
loopne
les
rclb
mov
and
les
sub
jnp
mov
inc
jecxz
enter
test
fs
pop
pushf
pop
loope
bound
xchg
cltd
and
pop
dec
inc
ret
decb
xchg
mov
lret
mov
or
xor
and
inc
test
insb
cltd
jge
or
or
int
xchg
push
popf
out
shl
dec
fsubr
enter
xor
and
fs
test
pop
jns
inc
repnz
dec
sbb
mov
and
jl
xor
xlat
mov
cmp
add
mov
dec
sbb
loopne
stc
jmp
mov
xchg
dec
movsb
dec
pushf
pop
push
sub
mov
out
roll
sbbl
ficompl
jp
scas
movsb
jecxz
xor
sub
inc
sbb
rcll
push
jmp
into
mov
insl
cmp
sub
mov
sbb
bound
ret
xor
aas
out
push
or
out
fcoml
rclb
jmp
push
xor
xchg
mov
insb
xchg
movsb
dec
mov
pusha
xchg
or
sbb
push
sbb
adc
add
bnd
daa
aad
shlb
adc
rcrl
and
sbb
adc
add
mov
mov
mov
push
push
push
jmp
dec
js
gs
push
pop
cmp
xchg
and
add
fwait
xchg
cmp
mov
cmc
fs
popf
in
rcrl
cs
mov
xorb
popa
xchg
fdivrs
adc
outsb
cs
push
pop
cltd
mov
jl
pusha
jbe
pop
pop
or
sub
fstl
subb
mov
arpl
lds
movsl
xor
addr16
or
jmp
imull
jne
push
gs
movsl
imul
out
xchg
dec
xor
mov
xor
sub
leave
notb
iret
in
rol
dec
push
push
das
lcall
stc
pop
xchg
mov
cmp
aad
mov
add
mov
mov
cmpl
xchg
sub
sub
ds
jae
andl
cwtl
mov
sbb
outsb
pop
test
dec
mov
mov
sub
out
nop
inc
scas
rolb
push
pop
mov
add
cwtl
stos
in
fs
push
add
pusha
dec
das
inc
shlb
ret
pop
fldcw
pushf
icebp
pop
fisttpll
loope,pt
ljmp
je
int3
mov
outsl
xchg
push
push
push
pop
stc
pop
lock
sbb
stos
adc
dec
adc
lea
dec
jns
push
pop
lret
rorb
sbb
jns
ss
clc
sti
je
xchg
xlat
xchg
ds
xchg
jb
push
mov
or
aaa
mov
pushl
clc
inc
jae
fistpl
add
xchg
push
popa
push
rorb
xchg
loopne
xor
xchg
pop
in
shll
aaa
filds
push
aad
sbb
mov
je
jne
pop
repz
leave
jb
loop
inc
mov
gs
jns
adc
cmp
das
fisubrs
mov
rol
outsl
fsubr
iret
or
mov
xchg
pop
inc
jmp
pop
mov
pop
je
stos
push
jb
lcall
mov
add
in
es
fs
sti
das
mov
test
ds
adc
mov
mov
cmp
dec
jge
xchg
inc
int3
inc
cmpsb
aas
mov
mov
outsl
lods
stos
jb
and
mov
pushf
cli
or
stc
lcall
aaa
stc
inc
xor
and
add
adc
mov
push
out
or
inc
mov
test
mulb
sti
fbstp
movsb
or
jmp
cli
test
mov
dec
pop
jno
test
adc
cli
cmc
ljmp
push
pop
jnp
fcmovnbe
cmp
insb
sub
popf
pop
xchg
rclb
mov
mov
loop
sub
movsl
push
clc
pop
or
dec
insb
sarb
mov
cs
data16
jo
insb
mov
fistpl
mov
push
xor
in
dec
mov
push
hlt
out
movsb
sar
lods
lds
xor
popa
lahf
cmp
dec
push
dec
cmp
pop
cmp
add
adc
xor
push
loope
pop
aad
loopne
xchg
aas
jmp
aad
mov
mov
sub
imul
xchg
mov
test
pop
neg
fidivrl
icebp
cmp
xlat
inc
jmp
lds
sub
sub
inc
lcall
icebp
mov
mov
jge
jbe
movsl
test
js
lret
ret
insb
pop
xchg
imull
addr16
adc
in
out
clc
aam
pop
in
mov
mov
pop
jmp
bound
loope
repnz
cmp
cmpsb
cltd
mov
pop
push
int3
and
sub
jmp
enter
jmp
stos
popa
push
dec
pop
enter
dec
nop
sbb
sub
add
cmp
sbb
cmp
ja
nop
xchg
or
cmp
sar
push
int
mov
out
aad
enter
add
add
popa
hlt
sbb
insl
jnp
adc
xchg
xor
rcll
sbb
cmp
mov
add
mov
push
addb
test
dec
mov
ret
cmpsl
hlt
pushf
in
xor
mov
scas
into
scas
leave
jne
aam
dec
xlat
cli
sub
cmpsb
roll
popa
lods
in
pop
sbb
sbb
es
data16
aaa
lea
mov
mov
jl
imul
scas
clc
mov
imul
pop
fcoms
cli
orl
lahf
pop
or
loopne
inc
and
icebp
dec
lock
jle
ret
jp
or
popl
lds
adc
adc
dec
clc
fsubrs
mov
nop
test
jae
pushl
cs
push
ret
loop
mov
shr
das
inc
sub
push
rcl
pushf
mov
cmp
jge
dec
and
jmp
cs
sub
imul
xor
mov
mov
popa
mov
inc
jnp
mov
jo
push
sub
icebp
sbb
sbb
mov
orl
push
pop
lds
aaa
push
inc
sub
iret
imul
dec
popa
and
mov
push
jnp
jle
cmc
inc
xchg
pop
or
cs
test
shl
daa
je
cmp
jmp
add
adc
sti
rcrl
mov
test
xchg
inc
xlat
mov
inc
add
jle
fdivs
xlat
fistl
into
mov
sub
xchg
cmp
lcall
mov
cwtl
fadd
cmpsb
pushf
inc
jno
and
cmpsl
icebp
es
pusha
inc
push
mov
mov
mov
in
stos
in
jg
dec
push
nop
pushf
in
mov
mov
testl
push
jle
jle
xor
lds
xchg
enter
call
or
sbb
jae
cmpsb
or
sbb
aaa
dec
adc
pop
js
jbe
cs
add
pop
adc
int
pmaddwd
pop
add
cmp
mov
xchg
scas
movl
inc
sbb
js
xor
stos
dec
sti
ds
sti
inc
ljmp
outsb
addr16
cwtl
and
jge
sub
aad
inc
test
dec
pand
xchg
adc
inc
mov
int3
and
sub
lods
sar
cmpsb
outsl
jne
pusha
aaa
cmp
pop
into
jge
xor
add
pop
add
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
jmp
fnstenv
inc
mov
mul
push
js
or
add
cmp
pop
test
nop
mov
pop
push
or
cs
cld
mov
mov
imul
std
push
mov
inc
scas
test
aad
push
icebp
xor
and
ljmp
xchg
movsl
inc
jb
jbe
bound
pop
sub
hlt
xlat
sbb
aad
scas
dec
and
mov
adc
movsl
push
out
ds
icebp
inc
xchg
mov
leave
or
pop
dec
cltd
std
push
ljmp
add
mov
adc
sbb
dec
pop
mov
stc
pushaw
add
inc
int
lods
stos
cmpsl
es
movsl
fcompl
xchg
pop
leave
out
ret
in
aad
loope
xchg
mov
iret
mov
sbb
mov
inc
mov
rorb
out
ret
out
sub
out
enter
sbb
stos
testl
movsl
pushf
adc
push
ljmp
push
pop
ljmp
xlat
adc
pop
cs
ret
call
sub
cmpsb
call
pop
xchg
adc
mov
dec
inc
pop
add
push
mov
movsl
ret
push
outsl
mov
and
push
push
fcompl
inc
test
push
mov
push
inc
pop
sbb
push
data16
fistps
mov
pop
pusha
dec
mov
cli
ficoml
lods
dec
sarl
cmpsl
dec
std
xchg
mov
in
pushf
subb
dec
mov
cmp
mov
pop
dec
mov
jne
movsb
shr
pause
shll
xlat
pop
add
movsb
mov
ds
inc
dec
or
xlat
adcl
adc
loope
jns
push
add
jne
pop
mov
mov
aas
cmp
push
test
adc
repnz
push
xchg
pop
mov
testb
je
in
addr16
dec
ds
mov
lret
xchg
inc
jmp
add
ret
aaa
sbb
test
leave
std
nop
add
ss
mov
sbb
int
sub
jmp
test
flds
pop
xchg
sub
push
mov
leave
cmpsb
iret
and
add
cltd
dec
add
sbbl
into
xlat
gs
or
inc
mov
stc
sbb
bound
leave
out
push
pop
pop
loope
mov
sub
push
loop
xor
cltd
icebp
adcb
xor
sbb
test
sub
push
or
mov
int3
or
mov
js
push
test
lock
adc
add
je
lcall
and
mov
push
outsb
xor
ror
ror
dec
jne
push
jle
inc
adc
stc
sar
push
stos
test
pop
lahf
fdivl
inc
scas
push
imul
push
add
movb
xchg
outsb
add
rorb
pop
push
jae
jge
jp
mov
aam
fucom
lea
jl
and
fcoms
lret
push
adc
arpl
out
mov
mov
test
aaa
js
mov
inc
pop
inc
jns
gs
pusha
int3
jno
push
jg
mov
jne
imul
lods
nop
sahf
jne
popf
push
icebp
cmp
adc
addl
sub
cmp
dec
mov
adc
pusha
push
xchg
mov
rcrb
shll
and
fcomps
push
out
pushl
int3
shll
cmp
and
lds
cmp
jbe
xor
int
add
jle
adc
mov
inc
incl
pop
movsb
cmp
mov
mov
sbb
aaa
sbb
jb
mov
fstpt
pop
pop
sub
mov
mov
mov
xchg
cli
ss
inc
cwtl
xor
enter
xchg
mov
adc
add
jp
push
gs
xchg
inc
popf
push
xchg
add
js
scas
dec
pushf
adc
jle
imul
stos
jp
flds
fdiv
hlt
ljmp
inc
and
ja
je
cltd
test
outsb
aad
inc
cmp
dec
inc
jg
ret
stos
call
dec
scas
sbb
cmc
push
add
jne
je
into
mov
add
jl
and
roll
adc
dec
add
das
jbe
stos
fnstenv
mov
xor
repz
jne
jl
fs
rcrb
and
lock
push
push
jle
cld
dec
repz
cmp
repnz
pop
into
cmp
inc
jmp
outsl
inc
imul
push
out
sbb
inc
cwtl
cmp
lret
ss
lcall
cld
daa
lds
mov
imul
les
int3
jecxz
add
or
fcmovnb
jb
xchg
sbb
fadds
inc
cld
rolb
push
mov
daa
lods
gs
imul
inc
cwtl
dec
rcll
sub
popf
adc
mov
mov
jp
pop
xor
add
test
fidivrl
cltd
aad
and
mov
add
cli
arpl
mov
mov
out
adc
sub
dec
inc
dec
mov
aaa
shrl
adc
dec
je
out
mov
mov
xchg
inc
or
scas
mov
mov
loope
hlt
add
inc
pop
iret
push
and
cmpsl
test
in
jmp
sbb
xchg
lahf
fchs
stos
push
mov
int3
stc
lds
mov
inc
fdivrl
mov
fsubrl
adc
sub
jecxz
imul
sarb
push
mov
adc
mov
rcl
and
test
mov
push
xor
adc
imul
sbbl
js
sub
movsb
push
lahf
out
ret
fisttpl
pop
pop
xor
sub
das
mov
loop
or
jb
in
push
mov
pusha
push
xchg
mov
and
inc
cvtps2pd
outsl
scas
push
notb
int
js
fsts
mov
mov
leavew
add
mov
mov
out
lock
xor
push
stos
aaa
in
mov
jle
or
popf
sbb
jg
aam
pop
mov
adc
xchg
sarb
mov
push
syscall
add
insb
aaa
mov
gs
jp
scas
mov
rclb
imul
xor
push
mov
adc
notb
out
cs
cmp
cmp
inc
xchg
out
addr16
sbbl
in
cmp
adc
rcr
pop
adc
pusha
addb
movsl
xchg
mov
out
xchg
pop
movsb
xchg
paddb
outsl
adc
rclb
stc
test
test
adcb
adc
cvtps2pi
pop
mov
insb
dec
push
add
cli
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
jmp
out
fisubl
push
jne
lret
sti
xchg
mov
add
stos
shll
xchg
into
push
dec
lcall
jmp
cmpsl
xchg
rolb
es
xchg
in
cmpsl
gs
mov
fimull
cs
nop
jae
push
iret
fimull
jno
push
jns
addr16
dec
imul
rclb
xchg
mov
and
jb
mov
mov
in
fadd
movsb
jl
xor
or
jp
jecxz
ljmp
outsb
xchg
dec
adc
aad
lret
dec
push
push
sub
rorb
mov
push
mov
mov
cwtl
andb
imul
xor
das
sbb
adc
aad
or
sbb
nop
xor
cmp
out
inc
sub
push
mov
divl
rcl
test
and
sti
push
push
xchg
popa
outsl
jp
and
sbb
test
mov
mov
push
bound
push
sub
sbb
push
xor
lret
mov
adc
sub
in
adc
sub
pushf
aaa
popf
inc
ss
push
sbb
mov
xchg
mov
out
pusha
xchg
push
lret
mov
call
and
clc
pop
out
xchg
es
sbb
mov
sbb
stos
adcb
push
test
fbstp
mov
add
or
jno
pavgw
push
insl
daa
inc
jbe
xchg
dec
cmp
movsb
imul
jl
mov
or
jl
add
aam
adc
cmp
cmova
int3
loopne
test
and
mov
dec
mov
outsl
or
andl
dec
shrb
push
mov
or
jne
mov
xor
mov
inc
mov
int
stos
pop
mov
decl
add
or
xchg
mov
mov
out
scas
bnd
decl
push
clc
inc
in
in
and
cmp
xchg
xchg
ret
sub
mov
divb
mov
lret
adcl
sbb
mov
lds
imul
jbe
push
or
and
movsb
dec
mov
adc
clc
lcall
lret
add
xchg
adc
sbb
subb
add
push
fistpl
add
inc
pop
mov
je
scas
std
and
gs
mov
cmp
cmp
cmp
js
cmp
outsl
xor
sbb
or
xor
sbb
fcoml
inc
cltd
dec
mov
cmp
idivl
xor
sbb
mov
andb
or
pushf
cmp
xchg
mov
cmpsb
test
jecxz
cmpsl
call
push
push
loop
adc
or
pop
aad
stos
outsb
mov
mov
sub
in
leave
icebp
sub
xor
pop
xor
or
cmp
loop
mov
inc
sub
jl
in
and
push
jmp
push
mov
xchg
andl
out
cmpsl
clc
sbb
cwtl
inc
in
or
jae
int
cwtl
mov
pushl
ret
mov
movsl
mov
jmp
pop
outsb
dec
rorb
sub
push
jo
fdivrs
add
xor
dec
and
xchg
insl
or
out
push
lea
ds
mov
jmp
movsb
push
xor
jp
mov
sbb
cs
lcall
aad
imul
push
in
ret
outsl
cli
call
jp
adc
push
jg
jne
nop
outsb
loop
je
pop
adc
mov
pop
andb
mov
mov
ljmp
outsb
cmp
mov
mov
jp
mov
in
outsl
sbb
call
adc
pop
mov
gs
inc
movsl
jmp
ror
pushf
mov
inc
cltd
push
fnstsw
mov
jle
mov
inc
push
pop
mov
mov
int3
cld
fsubrl
mov
push
gs
adc
jp
jns
mov
mov
sub
xchg
or
lea
dec
inc
jge
xor
out
xchg
jno
outsl
mov
ret
and
mov
push
pop
cmpsb
xor
push
repnz
dec
jmp
in
stc
popf
aaa
clc
es
sbbl
orl
fstpt
mov
orl
or
and
dec
sub
mov
adc
sbb
shrl
pop
pop
imul
xor
adc
pushf
inc
fcomi
mov
inc
ja
jmp
ret
mov
jecxz
jb
and
lahf
cs
jne
scas
push
mov
cmp
jg
pushw
jge
xor
cltd
mov
hlt
enter
push
adc
pop
pop
lcall
inc
sbb
insb
xor
inc
and
mov
test
int3
cmp
mov
or
addr16
fsubs
xchg
jge
inc
xchg
jmp
das
in
cltd
in
and
divb
push
out
xor
or
mov
xchg
mov
pop
push
fbld
jge
jle
xchg
sti
fbld
xorb
add
and
enter
mov
fnsave
xchg
ljmp
out
jnp
lods
negb
mov
mov
push
movsl
rcll
and
xor
lea
sub
shll
dec
xor
mov
adc
xor
test
or
fimuls
ret
and
enter
in
mov
pop
je
out
jns
cmp
lds
pop
aaa
sub
fadds
xchg
mov
pop
mov
sbb
sbb
int
inc
and
inc
iret
fisttpl
shl
shr
or
scas
fstpl
movsl
into
mov
mov
sbb
jne
js
add
lock
cmp
push
insb
fisubrs
scas
push
mov
in
ljmp
dec
jnp
add
scas
lcall
mov
daa
jns
repnz
adc
jb
icebp
in
xchg
aam
loope,pt
mov
lahf
pop
xor
adcl
cltd
dec
stc
adc
adc
cltd
add
stos
and
add
mov
and
mov
cmp
add
ret
test
into
mov
push
push
push
push
call
push
push
jmp
add
lds
jmp
jmp
add
rolb
std
int3
ror
jae
mov
sub
mov
out
pop
pop
mov
les
mull
sub
mov
in
jge
cmp
shl
lret
push
movsb
cmpsl
xchg
cwtl
les
bnd
negl
clc
or
xor
fildl
jo
adc
dec
mov
or
cltd
cld
sbb
std
movswl
notl
cwtl
and
xchg
cmp
cwtl
rorb
sub
inc
sahf
jmp
ss
and
ret
mov
push
xchg
pop
xchg
sbb
sahf
pop
fisttpl
and
xchg
push
call
aas
sub
fwait
mov
pushf
aam
mov
dec
adc
sbb
mov
xchg
fstpt
testl
rorl
scas
add
jle
and
fcmovu
lahf
imul
inc
out
movsb
and
out
pop
movl
pop
lret
adcl
xlat
lcall
mov
in
pop
repz
pop
mov
add
fld
test
iret
jl
sbb
in
mov
lds
adc
mov
cli
popf
push
rcrl
mov
adc
pop
cmp
lcall
shll
sbb
mov
sbbb
pop
jecxz
arpl
push
push
sbb
getsec
ljmp
adc
flds
js
test
lret
test
jnp
and
test
mov
pushf
cs
scas
nop
lea
fstpt
fwait
add
and
mov
add
jae
pop
pop
or
adc
addr16
or
dec
popf
mov
jo
sbb
pop
pop
mov
cmp
in
mov
mov
dec
stc
inc
cmpsl
gs
inc
cmp
xor
push
ret
mov
ret
lds
add
int3
xchg
mov
mov
push
pop
mov
push
pushf
jae
repnz
clc
int
xchg
and
xlat
pop
xor
insb
add
arpl
xchg
jmp
xchg
cltd
out
xorl
add
lret
mov
sub
push
sbb
push
push
sahf
mov
ffree
aas
mov
cmp
xorps
sahf
push
sub
cmpsb
and
mov
std
popa
icebp
push
mov
gs
icebp
fstpt
lcall
sbb
arpl
jne
fisttpl
adc
fwait
orl
sub
mov
mov
inc
sahf
jae
xchg
movsl
xchg
xor
aas
sub
call
out
stc
mov
insb
mov
or
push
insl
stc
fcompl
push
repnz
inc
pop
mov
andb
scas
push
mov
dec
pushl
cli
sub
imul
incb
sub
dec
faddl
xchg
or
insl
mov
xor
loope
addr16
jmp
and
std
lcall
iret
sub
mov
ss
movsb
pop
xchg
cld
push
test
pop
dec
bound
sub
add
lahf
xor
test
mov
add
cmp
mov
jae
lods
dec
cs
mov
push
addr16
or
je
lret
enter
push
mov
outsl
ret
outsl
insb
jns
cmp
popf
loopne
outsb
xor
addr16
outsb
lret
push
mov
hlt
pop
aas
imul
data16
add
incb
dec
loope
in
mov
outsl
pop
ja
push
add
js
outsl
fisttpll
fadds
lret
icebp
jns
cmp
jmp
ret
and
mov
mov
add
divl
pop
sub
sub
jo
dec
inc
cs
and
aam
mov
repnz
orb
in
sub
flds
or
jo
mov
cmpsl
xor
std
xor
in
aam
repnz
cs
xchg
and
adc
test
push
sahf
ds
mov
in
pop
fildl
fiadds
jmp
aad
sbb
xlat
sbb
add
sbb
ffree
lods
pop
fidivs
fisubrl
jb
lret
sahf
pop
xor
rcrl
lds
iret
andb
sub
jge
adc
das
xor
inc
hlt
mov
cld
mov
not
xchg
repz
rcll
das
or
gs
pop
add
scas
cmp
push
jge
shl
in
sbb
cld
call
mov
add
in
loopne
aaa
mov
js
xor
fwait
mov
lods
xor
push
rcr
cmpsl
jle
sub
or
in
push
insb
or
xchg
jne
movhps
sub
je
mov
xchg
nop
outsl
mov
int
clc
or
and
cmpsl
dec
xchg
or
pusha
push
mov
in
or
xor
sbb
daa
push
pop
push
lods
insb
inc
add
jo
lea
or
add
cld
mov
mov
sbb
mov
pop
and
jne
cmp
fnstsw
adc
cmp
int3
out
out
dec
lret
pop
pop
xchg
nop
fcompl
insl
movsl
mov
scas
cli
mov
add
lea
mov
jmp
testb
xchg
adc
in
js
mov
sbb
shlb
inc
inc
push
jns
sub
jg
dec
popa
and
call
aaa
xchg
xor
popf
das
xchg
jne
mov
dec
out
fidivl
ror
jmp
ror
ret
repz
cmp
xchg
xchg
cld
js
iret
pop
mov
scas
ss
lods
loopne
inc
dec
push
jnp
aas
addr16
sub
mov
out
lods
add
cmpsb
add
aaa
and
mov
sbb
mov
stos
add
push
lock
and
ja
hlt
je
cli
fiadds
out
push
loopne
hlt
push
sub
je
add
test
fwait
jb
scas
jp
nop
xorl
add
push
fs
inc
das
loop
dec
mov
add
sbb
push
mov
int3
pop
in
cltd
xchg
sbb
mov
test
aas
ljmp
sti
push
mov
xchg
or
lock
jb
das
mov
fs
je
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
adc
movl
mov
sub
mov
xorl
mov
addl
movl
orl
jmp
sti
out
out
jo
jo
pop
inc
push
push
mov
js
invd
add
pextrw
pop
jmp
mov
mov
mov
lret
sub
jle
adc
popf
push
je
outsl
inc
push
pop
push
xchg
in
push
out
movsl
mov
dec
test
cmp
sub
out
loope
and
iret
pusha
mov
or
mov
adc
scas
xchg
pop
dec
jns
push
xchg
push
std
mov
scas
fstl
cmpsl
pop
das
lret
xchg
fdivrp
or
pop
mov
aad
sub
fisubs
jbe
mov
repnz
sbb
and
dec
mov
fstps
jnp
in
pop
xchg
or
push
test
fidivl
sbb
mov
add
xor
fsub
subb
cmpsl
lods
iret
stc
ss
sbb
in
loope
or
push
lods
popf
dec
out
std
sbb
bound
mov
in
ror
jl
push
pop
insl
in
cmp
dec
jecxz
or
dec
push
or
push
repz
mov
sub
fildl
xchg
sbbb
sarl
dec
dec
mov
scas
cmpsl
mov
push
xor
int3
mov
xor
xor
push
push
sti
mov
sbb
inc
js
dec
cmpsb
cli
dec
cwtl
push
movsl
and
sbb
sub
fists
cltd
test
vroundss
scas
js
lock
loope
dec
pop
pop
adc
jmp
adc
lcall
push
ds
stos
mov
in
in
cmpsl
jp
cmpsl
ret
mov
mov
xor
int3
dec
mov
mov
jp
mov
sarl
jae
add
sub
bswap
push
xchg
push
sbb
jnp
fs
shlb
sbb
jge
adc
cmp
jge
mov
pop
loope
mov
out
sbb
push
inc
outsb
mov
decl
aam
test
fldenv
mov
jo
push
jbe
sbb
popa
cmp
lea
lock
sbbb
or
or
loope
cmp
add
ficoms
les
fwait
and
cmp
fadds
xchg
lret
push
nop
mov
sbb
and
mov
mov
dec
cmc
out
cli
sbb
movsl
jbe
cmp
icebp
into
mov
es
jecxz
xor
daa
jge
cmpsl
test
nop
pop
ds
sbbb
fcmovb
scas
movsl
mov
adc
cmp
aad
sbb
dec
loope
cli
jmp
rcrl
push
push
adc
mov
mov
mov
push
lock
or
lock
enter
and
dec
push
int
orl
out
jp
xchg
inc
dec
clc
andl
and
or
popf
mov
pop
mov
fcmovne
pop
and
ret
mov
sbb
in
je
subb
popa
mov
xchg
scas
dec
out
das
push
or
inc
jne
nop
cmc
or
mov
je
jecxz
scas
ja
mov
pop
sub
mov
add
scas
mov
rcr
add
into
into
cs
lahf
neg
filds
test
sub
mov
push
or
movsl
mov
mov
jg
and
mov
sbb
adc
mov
cmp
mov
orl
xchg
js
ret
cmc
lds
sbb
adc
pop
ja
mov
mov
pop
stos
std
push
jne
lret
add
stc
pop
xor
daa
ficompl
roll
fcmove
push
fsubrl
add
cmc
imul
and
mov
adc
add
pushf
addr16
inc
out
xchg
mov
cmp
mulb
pop
mov
xchg
fneni(8087
adc
movsl
push
adc
or
xchg
mov
cmp
aad
loope
sub
dec
dec
adc
into
jl
in
xor
in
cmp
add
addb
sub
fwait
hlt
mov
inc
sub
dec
xchg
push
inc
sbbl
mov
pop
jno
iret
mov
xor
testl
icebp
xor
cmovae
sbb
or
mov
cmc
mov
mov
adc
inc
aam
xor
inc
jecxz
sbbl
jb
pop
and
mov
mov
pop
pop
and
pop
pop
add
cmp
fimull
fisttpl
into
sub
mov
adc
jne
les
clc
adc
push
outsl
loopne
xor
jmp
and
mov
cmp
sub
sti
call
in
std
xchg
cs
xor
inc
arpl
aas
jae
jns
mov
pop
and
xchg
push
fisttpll
or
cld
out
sub
ds
sub
cmp
pop
lret
jl
popa
loopne
in
cltd
int3
mov
pop
cmpsb
sub
aas
dec
mov
xlat
imul
imul
je
sub
push
aad
mov
ss
bound
loopne
push
stos
xchg
inc
mov
test
jbe
fnstenv
loop
mov
push
cmp
pop
sub
inc
nop
adc
xorl
insb
jb
cmp
ficoms
jnp
inc
jmp
negl
fadds
jp
fisubrs
arpl
mov
jno
out
jl
mov
repz
sti
ret
push
cmp
movsl
in
push
adc
inc
dec
jnp
mov
jmp
shrl
add
inc
add
mov
out
mov
stos
loopne
push
aas
sub
pop
push
iret
hlt
mov
scas
popl
dec
dec
scas
jle
jno
adc
or
mov
iret
lds
aam
call
inc
fs
aaa
sub
inc
mov
pop
jl
repz
cltd
mov
mov
mov
movb
movb
cmpl
jbe
andl
adc
jmp
pushl
call
movb
movzbl
mov
sub
imul
mov
or
movzbl
push
orl
and
mov
movb
movl
movb
subl
movb
movb
orl
mov
orl
mov
subl
add
adcl
jmp
ret
sub
shlb
mov
xor
mov
xchg
lock
invd
add
fildl
call
arpl
push
jbe
repz
lock
mov
clc
out
sub
pop
dec
push
test
push
movsw
cmp
outsl
mov
sub
add
sub
dec
jae
out
cltd
push
inc
and
adc
rorb
cmpsb
pop
icebp
ret
nop
stos
jl
adc
or
fnstsw
inc
xchg
scas
cmp
mov
ret
imul
adc
out
mov
pop
pop
in
dec
cs
mov
pushf
enter
and
fldenv
pop
dec
ljmp
in
inc
stos
xor
sub
sub
cmpsb
push
inc
sbb
cmp
cmpsb
stc
push
pop
aam
pop
dec
loop
xlat
in
scas
jmp
imul
sub
xlat
inc
fistpll
mov
push
add
stc
inc
lahf
movsl
test
shlb
stos
cmp
call
sub
mov
mov
nop
cmpsb
sbb
gs
mov
loope
xchg
or
pop
aam
loopne
cli
adc
or
mov
adc
je
sbb
in
sbb
sarl
dec
add
gs
dec
jae
out
jl
fdivl
sahf
lods
lods
adc
aad
or
fnstenv
add
cmc
imul
push
out
xchg
loopne
lret
jp
scas
stos
adcl
out
jg
push
xchg
xchg
lahf
out
mov
push
fisttps
dec
cmp
sbb
jmp
push
pop
mov
rcrb
or
idivl
push
add
repz
and
inc
mov
sub
pop
jno
std
cmp
pop
cwtl
ja
inc
sbb
jle
ja
mov
inc
inc
sub
rorb
mov
jno
insl
sahf
lret
sub
xor
mov
insb
or
lods
push
in
push
addb
mov
enter
ja
jg
xchg
xor
add
add
rolb
addr16
ret
and
push
adc
inc
add
or
or
stc
stos
adc
and
sub
push
add
push
pop
pusha
lahf
add
cltd
mov
aaa
jbe
cmp
push
inc
negl
loopne
test
adc
sub
int
inc
pop
movsb
hlt
orl
mov
icebp
inc
test
iret
sarl
xor
mov
and
rorl
fwait
lret
insl
arpl
add
fdivrs
sbb
pop
daa
shll
shrb
loop
daa
mov
outsl
mov
enter
push
sbb
js
dec
push
dec
ficompl
loope
lods
mov
xor
pop
nop
dec
psubd
mov
dec
xchg
cmp
sbb
push
inc
sub
dec
ljmp
ret
xlat
imul
push
xor
stos
xor
mov
sbb
add
add
fwait
push
out
xchg
xchg
jne
push
adc
shlb
test
xchg
pop
pop
ss
push
lret
subl
cmpl
pop
push
xchg
cmp
push
sub
test
or
adc
popa
into
fucom
shll
out
loopne
loopne
cs
push
dec
ret
push
cli
jnp
mov
test
cmpsl
repnz
pop
mov
adc
push
sub
fists
icebp
mov
xchg
cmpw
inc
push
into
sub
dec
std
mov
mov
sti
rorb
mov
sbb
ljmp
test
sub
les
mov
and
pop
je
aaa
cmpsb
jnp
dec
je
sahf
clc
ret
mov
fistpl
es
shlb
jno
jae
lfs
outsl
ljmp
cli
dec
xchg
push
and
lcall
xchg
pop
sbb
mov
cmp
out
cmpsl
in
push
sbb
cmp
in
xlat
jnp
outsb
mov
jle
jne
mov
pop
mov
loopne
test
dec
mov
sbb
fisttpl
and
rclb
sub
jg
sub
sub
push
and
pop
pop
cltd
lret
andl
test
out
iret
insb
inc
inc
xor
add
pop
lahf
hlt
and
xor
mov
cmpsl
ljmp
xor
gs
lea
push
insb
mov
push
mul
push
cwtl
push
jmp
mov
mov
sub
mull
sub
lea
push
cmp
jb
pop
inc
nopl
push
mov
xlat
push
add
and
outsl
lcall
cmc
aam
sbb
cmp
add
push
iret
or
sub
sbb
mov
mov
test
cmpsl
popf
clc
xchg
std
push
popf
jae
pushf
test
cmp
gs
sub
mov
lods
xchg
lret
pop
fwait
sti
cltd
mov
push
sbb
les
jbe
ret
add
xchg
scas
cltd
fld
dec
rolb
xchg
mov
xchg
lahf
fists
adc
in
into
mov
test
or
sbb
fisttps
shl
out
jecxz
rol
jbe
mov
push
xor
push
xchg
jne
add
addr16
mov
sub
scas
jp
mov
dec
rcrl
psubb
mov
xchg
ret
adc
inc
push
repnz
inc
pop
in
adc
jg
test
mov
mov
test
dec
cmp
outsl
ret
repz
mov
cld
or
pop
mov
imul
mov
and
fwait
or
jp
scas
gs
or
mov
jecxz
pop
jb
outsb
or
or
int3
gs
ret
mov
or
dec
and
xchg
xchg
in
inc
mov
adc
mov
aam
popa
ljmp
incl
add
inc
inc
add
roll
movsb
pop
add
mov
subl
and
movl
jmp
mov
hlt
add
sbb
push
xchg
add
cvttps2pi
inc
fldcw
xchg
push
add
bound
xor
sbb
xchg
arpl
aam
jl
lds
jmp
and
inc
jae
mov
pop
rcrl
inc
xchg
jecxz
jmp
in
mov
and
call
mov
pop
xchg
pop
inc
pop
fs
sbb
cwtl
pop
movsl
cmpsb
jnp
pop
call
xor
test
xor
test
in
xchg
sub
jae
xchg
push
ret
ret
sbb
sahf
mov
mov
pop
dec
call
pop
jl
inc
inc
call
mov
cltd
out
mov
stos
add
sub
pop
outsl
xchg
lds
lret
sahf
stos
dec
lds
dec
fadds
mov
inc
out
mov
outsl
jo
inc
push
pop
scas
jo
loope
sub
aam
lea
sbb
mov
sbb
ds
mov
push
push
push
adc
xor
outsb
arpl
lea
push
scas
shlb
sbb
dec
and
test
lcall
imul
movsl
es
cmp
ret
jbe
mov
xchg
or
dec
pop
cmp
cmp
pusha
fistps
jne
sarb
push
jp
xlat
pop
aam
push
dec
adc
std
sub
outsl
mov
out
movsl
lret
jb
ja
ja
arpl
adc
mov
sub
int
mov
shrl
sub
lods
sub
movsb
rcrl
faddl
jecxz
push
imul
aaa
pushf
adc
jae
mov
arpl
dec
inc
jne
data16
leave
flds
ret
xor
push
insl
divb
dec
lret
pop
add
stc
test
mov
or
mov
imul
movsl
addl
push
and
jle
cmp
add
fsubrs
stc
push
leave
adc
xchg
cmp
in
add
mov
in
or
push
mov
inc
lahf
roll
push
lods
inc
cmpsb
push
outsl
dec
adc
inc
pop
adc
in
and
xchg
lods
xor
adc
leave
cmc
adc
mov
pop
jno
xchg
dec
mov
bound
push
clc
clc
adc
push
adc
ret
stos
add
std
fstp
pop
add
xchg
mov
int
int3
jns
pop
pop
stc
or
bound
pop
push
out
mov
sahf
sahf
dec
adc
setns
or
fcmovu
leave
add
js
in
int
neg
dec
les
popa
mov
inc
inc
jmp
mov
and
mov
pop
test
dec
cmpb
lds
mov
inc
push
inc
cmpsb
mov
adc
sub
cmpsl
xchg
cmp
sub
adc
add
ret
xchg
fisubl
clc
add
pushf
xor
psrlq
pop
test
lods
subl
in
les
adc
ret
mov
adc
inc
fs
or
lock
push
xlat
sahf
ret
xor
push
xchg
rol
mov
mov
iret
xor
cmp
mov
repnz
imulb
pop
push
test
pop
shr
nop
xlat
inc
rorb
mov
icebp
bound
jno
pusha
inc
mov
pop
mov
jno
jmp
pusha
lahf
jmp
jno
cmp
jge
dec
add
fbstp
and
pop
push
inc
lahf
pop
pusha
data16
pop
jmp
add
out
xchg
push
mov
icebp
push
lret
aad
out
in
lahf
in
xor
in
loop
or
mov
cmp
imul
push
setne
push
daa
jecxz
imul
jmp
inc
loop
jne
dec
jnp
fsubs
rorb
jmp
jnp
mov
jno
and
and
cmp
inc
dec
add
push
out
int3
push
mov
cmp
dec
lds
stos
jp
jo
shl
push
jle
xchg
iret
in
mulb
into
loope
lret
imul
repnz
bound
bts
xchg
push
ljmp
pop
push
push
jmp
sub
mov
stc
mov
xlat
ds
ret
sti
out
or
pop
xor
das
mov
nop
sub
aam
pop
dec
push
inc
xor
push
pop
xchg
shr
mov
neg
mov
mov
outsb
push
add
jl
into
ret
ja
dec
stos
jmp
jnp
fdivrl
inc
das
frstor
fs
cmpsl
aas
and
pop
ret
orb
cmp
inc
aas
push
jle
pop
pushw
ret
clc
andl
mov
loopne
or
insb
and
dec
cltd
mov
stos
insb
sub
lahf
push
jle
push
int3
stc
fcmovnu
jae
cmp
mov
les
and
cvtps2pd
xlat
push
js
inc
adc
lods
lahf
pop
pushf
stos
mov
mov
ds
push
cltd
sbb
ljmp
inc
add
lret
jecxz
xchg
push
pop
adc
sti
fwait
dec
dec
aad
xchg
cli
jp
jmp
lods
or
adc
adc
inc
subb
jle
adc
roll
and
aad
xlat
shll
mov
loop
test
test
mov
cwtl
cltd
imul
fcompl
fisubrl
rol
nop
into
sbb
arpl
adc
mov
into
repnz
sub
nop
pushf
sbb
outsb
pop
out
imul
sbb
cli
daa
cmp
push
js
xlat
dec
repnz
loopne
mov
jbe
stos
xor
fwait
pop
movsb
outsl
mov
jge
ret
leave
lahf
dec
ljmp
pop
gs
das
out
setne
sahf
bound
jo
pop
xor
cmovns
popf
xchg
ljmp
js
arpl
lea
mov
inc
fs
in
inc
mov
cli
mov
ja
mov
mov
sub
mov
cmpl
jl
andl
mov
and
jmp
push
push
push
call
mov
mov
movzwl
movzwl
shr
addl
or
sub
movl
mov
orl
movb
movb
sbbl
mov
mov
xorl
xor
addl
add
xorl
movzbl
movzbl
sub
cltd
mov
adc
mov
jmp
mov
pop
push
and
sub
mov
mov
lahf
ret
invd
add
movntps
and
and
mov
rorb
mov
jnp
imulb
add
addr16
jae
xchg
fs
call
jbe
rol
inc
cld
pop
mov
das
jmp
icebp
movsl
stos
jbe
xchg
mov
out
pop
cmp
cld
jb
outsb
jb
in
fs
ds
inc
adcl
dec
shll
pushf
iret
cmp
repz
sbb
sub
mov
lods
cli
je
jns
in
ljmp
test
shll
xorl
mov
pop
sbb
mov
mov
je
loopne
inc
push
add
mov
mov
mov
lods
pusha
or
icebp
xchg
sbb
jno
lock
addl
xor
xor
push
mov
push
jp
inc
pop
add
add
inc
pop
and
inc
lahf
or
pop
jbe
adc
imul
pusha
and
adc
inc
lcall
mov
add
js
and
mov
mov
shrb
test
ss
mov
popa
inc
in
push
lahf
mov
outsl
test
mov
jne
sbb
jp
jae
inc
clc
dec
mov
xor
xchg
mov
cmp
ja
adc
addr16
stc
es
or
je
push
enter
adc
sbb
add
pusha
dec
mov
or
ss
adc
dec
sbb
mov
into
jg
rcll
adc
cmpl
test
push
mov
and
js
sahf
sub
jle
mov
pop
cmp
cmpsb
mov
adc
dec
xor
cltd
or
je
ss
mov
iret
rol
aad
jbe
cmp
dec
enter
iret
add
push
jge
test
mov
adc
js
icebp
in
sub
xchg
xor
cli
daa
int
data16
lret
push
jp
cmpsb
inc
icebp
inc
push
repnz
aas
daa
cmp
outsl
call
jne
mov
arpl
movsb
and
mov
jecxz
mov
cmpsb
lea
jmp
pop
std
mov
inc
popa
out
jbe
inc
fwait
sbbb
mov
in
xor
movsl
inc
cmp
adc
adc
in
test
dec
lret
xor
insl
sti
mov
das
add
xchg
jnp
push
imull
out
mov
cmc
cmp
cmp
jae
cltd
andb
jbe
rcrb
pop
nop
cmp
fnstcw
dec
leave
call
or
push
inc
inc
mov
inc
cmc
add
add
xor
inc
adcl
test
nop
ds
cmpsl
xchg
insl
out
sbb
imul
cmp
or
push
inc
push
mov
insb
mov
das
and
int3
imul
xchg
cmpsb
jae
mov
rolb
je
insl
or
mov
push
enter
xor
pop
je
incl
dec
jp
or
int3
or
xlat
nop
movsb
mov
jbe
mov
push
and
xor
rcll
fsts
insl
mov
xchg
ds
fidivrl
dec
mov
stos
sbb
and
lods
pop
ret
sbb
lahf
loop
inc
xor
push
adc
iret
push
scas
mov
pop
insb
jns
xor
int3
inc
icebp
sbb
mov
adc
imul
decb
stc
loope
out
movsb
pusha
mov
or
or
jno
cmpsl
mov
mov
fbld
push
inc
and
push
subb
mov
push
mov
and
mov
push
mov
pop
hlt
jge
mov
sub
jae
fwait
pop
test
mov
or
dec
cli
dec
mov
adc
xchg
jl
adc
sub
out
repnz
push
xor
mov
cmp
in
adc
cld
mov
mov
sbb
jb
lods
shll
and
je
sqrtps
les
jmp
push
xchg
js
into
mov
lret
imul
faddl
or
inc
sbb
mov
dec
pop
xlat
sbb
mov
push
pushf
arpl
enter
incl
out
inc
pop
jne
mov
ficomps
pusha
jmp
mov
dec
mov
mov
fisubl
xchg
fisttpl
push
outsb
or
cmpsl
sbbl
pop
test
jbe
lods
insb
jo
xor
mov
aam
stos
shll
fsts
jmp
push
sub
cmpsl
imul
jne
pop
mov
cmpsb
iret
fcoml
xor
ret
cmp
xchg
loop
mov
pop
and
cmp
lods
ja
cs
sti
lcall
xchg
push
sbb
cmp
mov
xchg
in
pop
jg
push
inc
jns
adc
or
xchg
or
pop
loope
lods
sub
pusha
pusha
icebp
sub
sbb
loope
dec
jae
addr16
aaa
in
daa
in
loop
pushf
icebp
xor
or
out
das
scas
push
adc
adc
push
mov
sbb
data16
jmp
cmp
fdivrs
test
or
cmpb
mov
add
ljmp
push
push
ss
dec
sub
mov
adc
imul
ss
in
jmp
call
mov
or
push
data16
mov
inc
push
pop
ret
mov
cmp
repnz
mov
lods
stc
add
pop
inc
jg
int
mov
dec
aad
mov
push
adc
subb
mov
add
add
jl
and
jmp
push
call
jmp
sub
push
xchg
jne
jle
and
jb
cwtl
test
psadbw
dec
add
lds
and
xor
or
jns
in
in
enter
xor
int3
aas
rorb
sub
es
sahf
call
xchg
adc
in
push
inc
cmc
insl
add
aas
cmp
cmc
aad
add
scas
out
or
mov
test
lret
jp
sbb
adc
cs
ss
rol
jecxz
adc
imul
push
sub
dec
dec
inc
inc
jno
sub
mov
je
sbb
hlt
aam
and
ret
cltd
test
sub
push
jnp
fs
icebp
lahf
jo
mov
fwait
lcall
addr16
in
mov
rcr
imul
dec
popa
stos
jmp
push
push
outsl
push
inc
jp
arpl
xchg
mov
std
dec
pop
lret
mov
out
gs
test
mov
add
or
jge
scas
das
jbe
ds
sbb
xor
bnd
xor
fucom
jl
xchg
repz
fdivr
ret
imul
jbe
ja
push
jmp
faddp
adc
dec
and
mov
popa
hlt
push
cmpsl
fucomp
pushf
cmpsl
loopne
add
dec
arpl
add
ret
fcom
or
aam
push
jl
mov
movsl
and
popf
dec
inc
mov
insl
neg
push
mov
inc
std
push
push
cmpsb
jmp
orb
dec
fisubrs
xchg
imul
roll
loopne
fisubrl
test
rolb
lret
scas
mov
lods
and
mov
add
dec
scas
inc
orl
sbb
fimuls
push
mov
inc
ror
aam
add
pop
push
sub
clc
aas
inc
repz
mov
les
cmp
push
fwait
cmp
rol
and
in
or
sub
scas
stc
push
sbb
mov
xor
or
int3
mov
push
cmp
mov
les
and
xchg
cmpsl
sbb
pop
lods
cmp
lock
lds
or
jl
jmp
outsl
adc
mov
cmpl
aas
int3
xchg
pop
mov
std
stos
das
loop
inc
add
xchg
lods
sub
pop
push
or
ja
pusha
pop
aaa
dec
pop
loopne
in
inc
xor
sub
sbb
xor
les
cli
out
inc
repz
mov
mov
push
das
aaa
test
jmp
xchg
jmp
xchg
pop
lods
mov
jmp
add
jl
or
mov
jg
imul
insb
loope
push
gs
jns
mov
pop
mov
jns
push
imul
icebp
nop
inc
or
mov
nop
cmpsl
lock
pop
sbb
or
add
mov
pop
jne
jae
dec
xchg
in
outsl
pop
out
fcmovnb
push
cmp
jne
dec
push
divb
insl
daa
jmp
cltd
call
xchg
and
inc
pop
mov
imull
and
push
jo
pop
jle
sbb
push
outsb
or
arpl
or
mov
push
jae
adc
xchg
adc
dec
enter
into
mov
leave
xchg
mov
xchg
pop
push
lock
cmpsl
fcoml
mov
dec
stc
ret
repz
jne
fildll
arpl
push
ret
inc
xchg
rol
inc
pop
jbe
xchg
cmp
xchg
pop
add
push
rol
aas
mov
hlt
inc
or
push
popa
fimull
jmp
jae
push
jnp
mov
mov
negl
sbb
xchg
xlat
mov
xchg
clc
ret
xor
enter
and
jnp
inc
mov
fidivl
sbb
jg
outsb
gs
jns
stos
idivb
arpl
lock
ljmp
adc
ror
pop
lea
gs
add
leave
or
jmp
pusha
jb
std
xor
ret
jmp
aas
or
cmp
data16
idivl
push
sar
dec
mov
adc
adc
ds
xor
sahf
fcoms
addl
and
dec
push
out
repz
and
xor
mov
clc
xchg
push
ret
lock
ljmp
aam
dec
clc
xchg
xchg
in
mov
int
jo
test
xlat
jb
cmpsl
in
mov
sbb
jnp
xchg
cmpsb
inc
negb
sbb
sub
mov
and
loopne
into
arpl
movl
xchg
inc
or
xchg
out
dec
aaa
push
cltd
xchg
push
push
aam
mov
inc
inc
shlb
sarl
addr16
gs
out
ja
imul
xor
add
dec
cwtl
mov
xlat
pop
and
mov
inc
cli
icebp
jle
out
dec
cmp
ret
loopne
or
inc
cmp
aam
rolb
loop
stos
jl
div
sub
lahf
pop
inc
sbb
in
fisubl
test
and
addr16
add
addb
rol
iret
imul
sbb
gs
push
dec
add
aam
aad
pusha
and
out
mov
fmuls
mov
xchg
jle
or
push
push
ficoml
sbb
scas
adc
mov
scas
xor
movsb
push
lahf
pop
or
jmp
jb
or
icebp
test
cld
enter
dec
mov
aam
xchg
xor
stos
icebp
sti
mov
dec
in
fldcw
and
push
cmp
sbb
dec
jae
pop
xlat
test
lea
pop
cmp
dec
pop
in
pushf
stos
xlat
pushf
sahf
repz
jne
add
aam
adc
arpl
mov
fs
push
sbbl
dec
mov
cli
int3
pop
pop
xor
inc
inc
lods
imul
adc
fwait
jmp
in
adc
aaa
dec
cld
lods
cltd
rcl
sbb
lea
mov
push
and
mov
fldt
fadds
fmul
test
test
insb
mov
xchg
cmc
fmuls
movsl
adcb
jmp
mov
xchg
mov
push
lcall
add
pslld
loopne
adc
dec
mov
out
loop
es
mov
sbb
jb
xchg
jae
sub
cmp
sti
jae
mov
test
jl
hlt
cli
out
rol
pop
stc
movsb
cli
push
and
nop
fisubrl
sbb
sbb
mov
cli
js
imul
lock
cltd
popa
dec
jno
xchg
lock
stc
add
jl
sub
mov
out
lods
test
shlb
lret
pop
ds
inc
inc
outsb
sarb
or
imul
lods
pushf
xchg
imull
lods
out
add
sti
data16
gs
ret
sub
inc
call
pop
mov
jae,pt
mov
mov
sub
xor
jnp
xchg
cmpsl
out
or
std
shll
insl
xlat
push
dec
xor
into
jle
mov
pusha
lahf
scas
out
outsb
cmp
jns
push
xchg
push
push
inc
xor
adc
push
dec
lret
loopne
fisttpl
imul
xor
inc
fs
pushf
outsb
in
je
hlt
cld
popa
repz
inc
cmp
outsl
fnstsw
mov
push
xchg
negb
das
jno
mov
dec
lds
aaa
pop
push
pushf
enter
pop
insl
push
adc
mov
enter
xchg
sahf
cmp
mov
mov
or
ja
adc
mov
lods
imul
xchg
pop
or
sahf
or
cli
dec
xor
sub
mov
insb
ljmp
ss
jg
and
adc
cltd
clc
les
sbb
data16
cmpl
jle
lds
pop
sub
mov
gs
movb
jmp
int
fs
imul
clc
cld
mov
xchg
insb
inc
xor
cld
hlt
leave
sti
xchg
pop
adc
pop
xor
mov
push
int3
dec
popf
aaa
movsl
sbb
loop
jl
out
pop
sahf
ja
mov
pop
dec
cs
xor
push
cmp
rclb
out
incl
in
pop
icebp
hlt
mov
jno
cld
mov
or
iret
inc
call
pop
fwait
lahf
shlb
pop
mov
sub
outsl
daa
out
lds
dec
sbb
jne
leave
jp
or
pop
dec
pop
jnp
cmpl
into
lods
cmp
add
cwtl
or
jg
mov
push
mov
in
mov
inc
mov
lcall
push
fucomp
mov
pop
mov
add
int3
rorl
sub
arpl
xlat
insl
or
out
mov
jbe
pop
mov
mov
loop
xor
mov
cmp
stc
shll
stos
cmpsb
jae
jge
mov
sub
shlb
mov
scas
and
mov
arpl
jmp
jb
adc
cmpsl
in
dec
jp
fidivrl
pop
dec
dec
adc
mov
iret
mov
cmp
jns
jae
loopne
adc
xor
mov
jnp
sub
adc
gs
rcll
jl
cmp
mov
mov
cmp
cmpsb
test
dec
js
loope
mov
loop
mov
jno
cmp
loop
ficomps
test
and
xor
movsb
iret
mov
dec
gs
pop
js
add
mov
jb
dec
xchg
fisubl
mov
xchg
pop
mov
mov
xchg
lahf
ffreep
sbb
nop
outsb
mov
enter
testb
idivb
lea
mov
xchg
test
xchg
int
inc
fisttps
sti
mov
rorb
stos
pusha
das
mov
inc
push
jo
xchg
jle
jmp
mov
xchg
cmc
xchg
pusha
fisubl
in
push
es
js
jp
popf
pop
outsl
xor
sub
xchg
clc
ficoml
sub
int3
sub
add
pop
jmp
sbb
xchg
call
xlat
sub
cwtl
cltd
ficomps
add
sbb
fidivrl
dec
fwait
ja
stos
jg
test
or
mov
ror
sub
mov
ret
pop
fxch
out
and
stos
jecxz
xchg
mov
ret
dec
dec
lods
inc
pop
lock
cmpsl
enter
mov
stos
and
hlt
test
jl
mov
sarb
scas
mov
psrad
mov
dec
pop
dec
fidivs
mov
xchg
out
out
and
mov
pop
push
cmp
sub
jb
jmp
ljmp
ret
ss
popa
or
movsb
lahf
xor
int
push
in
idivb
mov
jmp
pop
xchg
sar
and
pop
xor
jbe
fstpl
dec
add
pop
rcl
lcall
inc
dec
pushf
insb
or
inc
movl
pop
pop
ja
sub
outsl
adc
enter
dec
fisttpl
cli
add
mov
loope
xor
cmp
pop
mov
add
sub
bound
pop
xor
inc
pusha
sbb
fisttps
test
fidivrs
repz
ds
sarb
push
mov
push
fisubrl
lds
xchg
roll
enter
xor
jle
sbb
pop
rorb
out
jecxz
clc
adc
cmp
ss
push
jmp
leave
bound
or
loop
jge
sub
ds
cmpb
fsts
ja
cmc
sbb
arpl
in
addr16
inc
lods
xor
xchg
adcl
int
adcb
xor
sti
push
aam
fistpll
enter
push
pop
inc
cmpsb
xchg
lret
xchg
push
out
or
xchg
insl
sbb
push
xchg
imul
jbe
lds
pusha
add
jle
mov
test
and
fldlg2
add
pop
mov
in
je
mov
mov
and
call
imull
ret
js
push
cmp
mov
jns
shll
imul
fldcw
push
pop
movsl
lods
pop
xchg
fadds
pop
adc
xchg
add
icebp
add
inc
out
cmpsl
mov
andl
jmp
dec
mov
aaa
es
mov
push
test
invd
add
mov
dec
or
ja
xor
inc
sbb
mov
and
dec
sbb
outsb
test
lock
adc
test
add
sarb
sub
outsl
jecxz
movb
scas
inc
mov
cmpsl
popa
andb
call
and
xchg
jp
leave
out
add
js
cmp
jae
int3
lret
int3
mov
rorl
sub
adc
jo
xor
xor
jno
sbb
rolb
mov
pop
jle
test
bound
lcall
dec
cmp
shlb
xor
xor
jle
test
push
inc
movsb
adc
xchg
push
dec
xor
mov
in
test
jnp
xlat
mov
or
pop
sbb
sbb
out
in
push
dec
test
std
pop
xchg
dec
mov
cmp
and
lods
adc
push
outsl
pusha
pop
in
mov
scas
popa
enter
pop
mov
bound
and
sti
data16
xorb
movsb
addl
dec
pushf
ss
dec
ret
and
fsubp
adc
mov
rcrb
dec
cmp
adc
insl
data16
adc
xchg
or
add
jmp
pop
add
loopne
iret
jmp
or
rcr
inc
and
stos
into
add
lds
mov
lret
cmp
mov
xchg
xchg
gs
push
fildl
lahf
add
pop
stos
mov
icebp
mov
roll
movsl
jo
mov
aaa
xchg
icebp
add
rolb
or
scas
cmp
lods
pop
outsb
xorl
test
test
pop
pushl
data16
rorl
push
inc
lods
xchg
outsb
mov
ret
lret
ret
adc
jl
lock
jbe
dec
ret
cmp
mov
in
repz
mov
addr16
mov
daa
push
imul
addl
scas
stc
shlb
pop
pop
add
loop
test
fs
mov
lahf
xor
lock
pusha
push
mov
and
xchg
aas
push
rorl
mov
jnp
pop
rolb
sbb
roll
pop
dec
dec
testl
pop
mov
pop
ffreep
sbb
stos
pop
push
xor
push
adc
or
aaa
add
pop
inc
adc
js
mov
sbb
fidivrs
mov
std
mov
aas
stos
dec
add
cmp
dec
sahf
xchg
test
mov
sbb
movsb
xchg
xchg
or
aaa
jl
aaa
repz
cld
jmp
jl
into
jo
pusha
inc
sbb
sub
mov
out
mov
daa
and
add
mov
data16
adc
pushf
das
cmp
fsubs
add
xchg
dec
lret
in
int
cmpb
push
ljmp
shlb
jno
and
jnp
les
and
xchg
scas
pop
call
hlt
jnp
lret
jno
mov
push
jp
xor
add
xchg
sbb
pop
add
lods
cmpsb
addl
xchg
mov
jns
cli
sub
sbbb
dec
sbb
arpl
leave
mov
test
lcall
movsl
mov
loope
fs
mov
sub
and
push
outsl
scas
cmp
sub
fimuls
mov
pushf
rcrb
add
js
mov
mov
test
push
cmp
dec
out
dec
movsl
cmpb
stc
iret
adc
push
sbb
sub
jl
sbb
dec
ret
mov
cmpsb
icebp
mov
int
adc
test
pop
faddp
f2xm1
and
ja
xchg
mov
leave
dec
or
sbb
outsl
inc
hlt
mov
cld
jbe
adcl
lea
adc
cmpsl
lcall
ds
inc
push
mov
cmpsb
push
dec
mov
repnz
and
dec
out
sub
xchg
mov
inc
lret
xor
inc
jge
inc
cmp
repnz
xchg
imul
xchg
fldcw
shrl
nop
mov
fidivs
ja
pop
adc
jg
sbb
mov
test
ret
jo
popa
sar
or
out
and
and
add
fs
mov
xchg
repnz
frstor
fwait
sarb
add
pop
inc
fildl
push
mov
das
cmpsl
adc
xchg
ret
dec
mov
sub
xlat
lods
lcall
pop
mov
jl
ss
jns
rorl
outsb
fnstenv
sub
push
fcompl
shll
pop
xchg
jae
or
and
mov
fs
sbb
or
push
push
lcall
dec
inc
xadd
imul
cvtps2pd
fwait
scas
mov
ja
sbb
jge
add
ljmp
orb
in
rol
or
rolb
ja
lret
inc
das
roll
mov
lds
cmp
or
stos
jae
push
pop
cmpsl
in
hlt
sbb
jle
xor
xor
mov
lods
cmc
jo
rcll
xchg
xchg
aaa
lahf
push
xchg
fisubrs
dec
clc
or
jmp
gs
lret
iret
in
add
movntq
andb
xor
pop
push
mov
xchg
lcall
mov
xchg
or
cld
jmp
js
cmp
sti
addr16
sbb
daa
addr16
stos
test
xor
dec
jns
jbe
pop
push
fldl
lods
imul
pop
jne
adc
aad
and
sub
iret
fistpl
test
pop
sar
cmpsl
jne
in
sub
xchg
stos
xor
xor
xchg
rol
rorb
xchg
add
xor
mov
orl
jmp
insb
lods
push
repz
je
xor
or
repz
mov
add
divps
loop
adc
pusha
js
cmpsb
icebp
daa
push
cld
je
ljmp
lcall
popf
clc
ficoms
xor
pop
ret
std
mov
cmp
mov
movl
or
data16
sub
sti
pop
adc
cld
test
add
outsl
fnstcw
clc
xchg
mov
push
aad
push
cltd
in
mov
xor
movsb
jb
lods
insl
es
or
mull
mov
addr16
sub
test
roll
lret
xor
ret
mov
xlat
sahf
sub
ljmp
mov
pop
xchg
cmp
scas
push
clc
cmp
sbb
shrl
mov
loop
pop
or
les
cmp
or
imul
ret
cmp
lods
mov
loope
outsb
cltd
jle
sbb
loopne
sbb
add
iret
mov
or
dec
cld
jae
stos
pop
pop
adc
cmp
jp
and
mov
and
pop
sbb
repnz
xor
into
add
pop
xchg
sub
in
testb
sub
mov
and
add
cli
loope
ret
pop
jnp
push
cmpsb
cmp
xchg
lea
imul
push
imul
rorb
sbb
ljmp
nop
lds
repnz
xor
mov
imul
adc
fdivp
int3
divb
scas
add
pop
cmp
add
lahf
mov
cwtl
jae
aam
jno
shll
iret
mull
leave
fcomps
and
xor
cmpsl
adc
cmpl
mov
jbe
pop
dec
outsb
daa
jge
and
lcall
in
mov
daa
mov
dec
jne
sbbb
cs
mov
popf
mov
daa
aas
repz
adcl
ljmp
mov
inc
aas
pop
xchg
xor
pop
xlat
mov
insl
shrl
xor
notb
in
jmp
pop
scas
inc
adc
addr16
popf
mov
notl
inc
dec
into
mov
inc
fistl
push
xchg
testl
jnp
xor
pop
push
lea
loop
js
insb
jmp
jno
imul
inc
cmp
ljmp
jg
scas
imulb
mov
aas
mov
cmpsb
sbbl
cs
out
in
scas
pop
adc
movsl
stos
in
pop
mov
push
sub
inc
adc
add
push
psadbw
add
int
add
push
xor
sub
lock
loope
out
cmp
add
out
and
dec
xchg
out
loope
and
dec
and
out
dec
test
and
cmp
xorb
pop
mov
aaa
add
negl
sbbl
imul
inc
test
jl
xchg
repz
xchg
lods
lret
jb
mov
mov
mov
test
pop
xchg
mov
mov
lret
xchg
in
pop
int3
je
out
clc
lea
lret
sbb
adc
inc
scas
scas
mov
and
fistpll
inc
jmp
mov
into
sub
cmpl
jmp
pop
jecxz
pop
out
imul
scas
popf
orl
ljmp
repz
jo
xor
sub
mov
je
mov
or
and
dec
fwait
and
cld
lret
fisubrl
pop
cmp
dec
outsb
cmp
sti
sti
idivb
cmpsl
push
mov
cwtl
inc
inc
mov
push
das
pop
push
movsb
cltd
mov
leave
inc
xor
jecxz
mov
and
lea
ss
test
sbb
stc
mov
insb
lea
cmp
xor
in
push
test
mov
xor
arpl
lods
xor
add
xor
xchg
mov
cli
jne
and
mov
mov
and
lock
aad
push
ja
push
pusha
push
cwtl
pop
push
popa
sbb
sub
fs
cli
xorb
les
and
xor
xlat
ljmp
std
pop
hlt
mov
and
arpl
inc
sub
cltd
pop
mov
sbb
aas
pushf
js
lods
cmp
movsb
out
fwait
je
js
mov
add
fs
mov
sub
leave
mov
dec
arpl
fildll
push
sub
dec
sub
or
cmc
lea
out
in
cli
mov
inc
adc
pushf
sub
push
sub
push
cs
or
nop
cmpsb
add
into
push
pop
fwait
dec
sbb
inc
jo
mov
cld
mov
xchg
dec
loope
popa
xchg
fimuls
mov
cmp
push
or
cli
daa
pushf
inc
inc
xor
cmc
push
mov
std
in
sahf
loop
loopne
push
mov
mov
fmulp
imul
mov
inc
sub
adc
pop
inc
or
xor
clc
xchg
int
cmp
dec
push
and
mov
add
cmp
insb
cmpl
mov
lcall
xchg
xlat
sbb
test
sub
and
and
xchg
dec
sbb
fisubrs
fs
sbb
sbb
dec
clc
inc
cmp
aad
add
mov
dec
adc
jmp
mov
ret
popa
cmp
popa
push
ja
mov
cmp
or
inc
fsubs
mov
push
mov
xchg
pop
outsl
xlat
sbb
and
xor
popa
xchg
addr16
jb
and
pop
pop
bound
cmp
les
mov
les
loope
inc
lods
cmpsl
fists
push
adc
aaa
stc
and
lock
insb
in
push
sahf
notb
xchg
jae
decl
mov
hlt
std
sbb
xor
xor
lods
stc
adc
lret
sbb
pop
dec
or
pusha
pusha
insb
lret
ja
xchg
mov
stos
cli
cltd
xorl
idiv
movl
mov
movl
cmp
movl
jmp
fidivl
push
or
fmuls
hlt
inc
mov
add
psrld
xor
fdivl
lret
bound
repnz
repnz
push
shll
je
xchg
adc
push
lret
sbb
pop
cmp
mov
rcrl
mov
sbb
bound
test
jmp
fadds
ljmp
cs
stos
and
mov
out
out
shrl
mov
rolb
push
imull
stos
push
test
push
stc
mov
pusha
scas
pop
sarb
aam
shr
adc
mov
out
shlb
je
mov
push
ja
add
and
ss
aaa
xor
pusha
mov
fs
xchg
mov
ds
mov
cld
lahf
xchg
sub
popf
orl
pop
mov
sub
in
sbbl
sub
fsubl
les
imul
fwait
push
xor
xchg
test
fisttps
test
repnz
adc
cmp
xchg
dec
lahf
fbld
cmp
dec
stc
xor
scas
mov
jl
xchg
arpl
movsl
mov
pop
adc
popa
lds
pop
leave
adc
notl
dec
mov
ljmp
sbb
jb
imull
repnz
in
adc
and
mov
adc
test
push
jl
incl
sbb
das
sti
cmpsb
scas
adc
mov
fisttpl
sbb
cli
outsb
cmp
jno
jno
lahf
cs
cmp
xor
imul
lock
xor
sub
and
ret
or
stos
pop
xor
and
ds
xchg
mov
pop
in
adc
shll
push
mov
sbb
out
push
es
add
iret
cmp
jo
push
mov
push
clc
rcrl
lods
dec
loop
adc
outsb
inc
xchg
std
mov
test
cmp
cmp
imul
inc
subb
out
push
lods
in
or
add
dec
fiaddl
repz
iret
int
push
sbb
cli
test
cmp
aam
add
out
ss
sbb
cmp
fs
leave
sub
fwait
mov
jp
pop
fwait
in
xchg
pop
lods
out
repz
dec
mov
jae
cmp
int
inc
icebp
in
dec
notl
push
fistl
mov
dec
add
push
pop
xchg
inc
fs
sub
enter
icebp
scas
icebp
cwtl
add
jne
rol
xchg
sahf
jnp
addr16
pop
cmp
scas
out
push
mov
and
into
inc
pusha
cmp
shrl
add
pop
xor
adcb
jnp
sarl
fistpl
popf
dec
jnp
sbb
xor
mov
jno
cmp
int
xchg
mov
xor
in
sub
movsb
mov
pop
pop
dec
pusha
jnp
fxtract
pusha
les
out
mov
cmc
jo
mov
and
shrl
pop
xchg
jmp
jne
out
adc
sub
cmp
lret
leave
xchg
jo
test
gs
inc
sub
and
rcrb
adc
pop
sub
and
in
pop
jecxz
add
call
flds
xorb
mov
push
add
push
aaa
filds
add
sbb
out
jae
shll
mov
xchg
mov
cs
lsl
imul
jno
pop
adc
mov
in
jp
adc
ss
mov
aaa
mov
xchg
dec
fidivl
int
push
addb
xchg
cld
aam
pusha
fsubs
int3
jmp
lods
sbb
clc
push
icebp
mov
xlat
jae
xchg
xor
dec
fucomip
ficoms
adc
rol
adc
idivl
lret
sbb
cmpsl
push
lods
test
push
rcrl
sub
xchg
mov
int3
cmp
add
stos
ret
leave
mov
aad
xlat
mov
xchg
add
movsb
cmp
xorb
mov
test
xor
les
dec
fcmovnu
jg
mov
insl
pop
loope
ret
xchg
mov
cmp
test
ret
aas
stos
push
or
andb
lret
jg
out
sub
jae
xchg
jl
je
bound
call
push
int3
mov
adc
fldt
jo
jno
mov
shll
imull
sub
insl
lret
mov
cmp
sub
sub
cld
jae
xor
sub
loopne
rolb
lods
mov
int
nop
jae
mov
out
inc
mov
jge
arpl
aad
push
push
repnz
sub
push
dec
dec
sarb
mov
xchg
pop
push
xor
mov
or
jb
inc
subl
cli
push
cmpsb
insl
cmp
xchg
gs
xchg
or
push
lds
mov
or
jbe
add
movl
pop
push
xchg
sbbb
pusha
imul
repnz
aam
rolb
mov
inc
mov
inc
jmp
fisubrl
fisubl
mov
and
fildl
pop
enter
pop
push
sub
out
std
in
gs
mov
in
je
dec
dec
sbb
cli
add
or
in
pop
mov
fwait
sbb
xlat
mov
push
xchg
sbb
mov
data16
dec
jo
js
test
fdivs
add
fistpll
testb
aas
push
bound
fldt
or
xchg
add
lcall
arpl
test
stos
xchg
ret
js
sahf
mov
pop
rcr
test
into
sbb
xor
mov
xchg
lods
stos
xorb
inc
cmp
mov
sbb
jno
in
fldenv
rclb
dec
and
sub
icebp
rorb
mov
jae
xor
movl
cmpl
jb
mov
sbb
jmp
push
call
movl
mov
mov
push
push
adcl
push
push
andl
call
xor
xorl
xor
orl
or
or
movl
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
dec
and
xchg
sub
push
mov
iret
imul
pop
adc
js
xor
stc
jo
pop
pusha
add
loope
mov
push
add
dec
addr16
insl
inc
mov
and
testl
cmp
stos
das
cwtl
rclb
cmp
inc
in
movsl
xorb
jae
sub
mov
js
stc
jo
loopne
adc
adc
shrb
mov
dec
jecxz
and
sbb
cmp
sub
or
out
xchg
lret
arpl
mulb
out
call
outsl
xchg
mov
mov
jnp
pop
inc
sbb
fsubs
out
int
mov
pop
dec
or
dec
out
mov
negb
cld
mov
movsb
movsb
cmp
jmp
push
dec
adc
pop
mov
iret
mov
or
jle
inc
pop
lret
les
jecxz
jo
pop
or
and
push
call
sbb
ret
addl
mov
xlat
cmp
inc
pop
test
arpl
xlat
stos
mov
popf
dec
pop
pop
dec
sahf
push
and
sub
scas
or
notb
jge
aaa
aas
cli
mov
stc
jg
xchg
add
pop
iret
inc
icebp
stos
xorl
jno
out
push
in
int
int3
and
or
fnstenv
jmp
negl
inc
xor
dec
jnp
dec
inc
cld
nop
and
cmp
sti
lods
push
les
iret
fldl
push
xchg
xchg
lds
cli
cmp
call
scas
cmp
lea
sti
lods
or
rcll
shrb
pop
jg
push
test
jo
cli
pop
mov
xor
sub
jo
adc
mov
jbe
xchg
push
mov
lea
dec
ds
cld
mov
mov
and
push
jae
fcomps
xor
and
sbb
cmp
loope
aas
xor
cmp
test
ret
sub
insb
mov
lock
iret
xchg
jg
outsb
faddl
push
cmp
das
jp
cmp
sarl
call
negl
std
dec
jl
dec
dec
or
pop
push
cmpsl
cs
dec
push
test
sub
mov
pop
insl
pop
mov
loope
sbb
xchg
hlt
xchg
sub
sbb
xor
lods
push
sahf
insl
jns
add
xchg
clc
shll
ret
cld
mov
int3
push
data16
insl
ds
popa
sbb
cmp
mov
jo
cmp
ljmp
test
lea
and
pop
repnz
dec
cmpb
add
into
push
mov
xor
outsl
shrb
lods
pop
inc
push
mov
subb
loopne
icebp
mov
mov
mov
out
mov
jb
dec
js,pn
xor
push
mov
repz
shrb
dec
add
mov
push
xor
inc
sub
or
scas
xor
rclb
aam
mov
sti
js
jne
push
inc
mov
or
sub
mov
imul
mov
mov
jb
std
sub
sub
adc
sub
je
fadds
ss
lds
xchg
or
sbb
cltd
jno
sub
dec
sub
sub
bound
push
and
ret
push
call
push
sub
ja
inc
cmp
mov
clc
out
sbb
add
pushf
adc
adc
pushf
inc
test
loop
push
cmp
stos
nop
mov
pushf
jo
add
lret
mov
fimull
dec
jae
mov
inc
jbe
outsl
popf
add
or
push
pop
add
mov
jl
scas
adc
cmp
cmp
dec
ljmp
dec
dec
or
xchg
mov
cmp
pop
movsb
dec
lahf
dec
dec
jecxz
adcb
andb
daa
sub
stos
pushf
popf
in
jmp
call
or
imul
sbb
adc
jmp
shrb
xor
pop
arpl
mov
cltd
aas
push
dec
pop
test
cmp
iret
xchg
testb
fcompl
cmc
insl
frstor
ss
cmpsb
ffree
call
jecxz
aad
sub
sahf
movsl
or
out
leave
or
dec
mov
cmpsl
mov
sbb
or
sahf
jo
jecxz
insb
and
lahf
lret
hlt
fwait
dec
cmpsl
ficoml
in
lods
inc
sarl
repnz
mov
fs
cld
or
inc
into
push
aaa
pop
mov
mov
mov
or
nop
cmpl
mov
and
xor
out
and
inc
sahf
lea
dec
xchg
shll
jno
clc
insl
clc
fmuls
inc
call
rcrl
and
jne
repz
mov
nop
ret
call
mov
or
sbb
mov
insl
push
fcmovnb
orl
enter
jnp
cltd
mov
and
in
iret
sub
pop
mov
lds
test
push
mov
in
mov
mov
pop
bound
imul
xchg
daa
inc
push
and
sbb
js
inc
mov
dec
mov
inc
daa
jmp
cmp
and
aad
cmp
adc
push
into
leave
xchg
dec
subb
xchg
call
andl
mov
out
sub
je
clc
int3
mov
dec
pop
adc
jae
or
sarl
testb
cld
jo
xor
notb
or
ret
or
out
mov
and
xchg
cmp
inc
mov
std
addr16
sub
xor
nop
iret
movb
push
inc
xor
imul
sbb
pop
xor
push
cmp
in
xchg
add
inc
jne
int3
pop
fs
mov
rorb
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
jmp
jb
ffreep
push
aad
push
dec
mov
mov
push
invd
add
maxps
add
and
mov
sub
pop
or
fs
sbb
ds
dec
fstps
filds
ret
lret
add
or
push
outsl
xor
dec
dec
aas
imul
inc
sahf
push
push
lods
inc
test
ficoml
add
jns
scas
fiadds
pop
cmp
pop
cltd
movsl
mov
mov
push
movsl
das
dec
mov
push
lret
jbe
dec
outsb
ljmp
dec
xchg
cmova
fnstcw
sub
adc
cmovae
dec
mov
sub
add
mov
je
jae
mov
es
xchg
int3
pop
cmp
inc
das
imul
push
sbb
sub
fists
ja
push
daa
mov
jo
pop
rclb
mov
push
mov
add
fldenv
cld
jl
mov
out
sbb
mov
test
ljmp
js
push
fdivrl
popa
xlat
push
mov
push
aam
jge
dec
push
sub
pop
cmp
cli
and
add
cmc
test
cld
sub
jecxz
sbb
je
imul
or
pop
xchg
mov
mov
xlat
repnz
push
push
or
jle
jns
ret
sbb
mov
xchg
xchg
cmp
loopne
jl
aad
js
stos
std
cmp
pop
or
shrl
sti
push
adc
call
or
mov
mul
mov
cli
inc
xchg
pusha
cmp
dec
mov
cmp
xchg
imul
sbb
inc
es
pop
in
pop
pop
arpl
pop
fisubs
mov
jg
mov
sub
push
xchg
and
mov
sub
insl
dec
mov
imul
add
stc
test
and
adc
sub
fdivrl
adc
push
scas
adc
out
notb
sub
outsl
outsl
cwtl
and
repnz
stc
flds
stc
inc
ret
movl
adc
push
or
loope
push
dec
lods
add
cmp
jbe
cmc
and
jb
popf
test
scas
fisubs
test
clc
pop
jecxz
pushf
xor
into
arpl
subl
push
popf
lahf
mov
dec
xchg
and
rolb
mov
mov
popa
jo
fwait
ret
rolb
xchg
push
mov
adc
add
daa
enter
xor
test
jp
cmp
sub
push
and
jns
scas
jecxz
jnp
mov
hlt
inc
shrb
jmp
lret
push
or
lret
sarl
mov
aas
movsl
sbb
mov
test
insl
scas
test
pop
mov
and
mov
and
mov
mov
push
loope
ja
lcall
in
sub
sub
push
mov
repz
cli
lahf
cmpsb
jmp
push
inc
inc
int3
mov
fiaddl
sbb
add
mov
mov
mov
hlt
pop
out
mov
sub
add
insl
out
or
xlat
lret
jbe
mov
add
je
push
mov
imul
inc
js
push
movsb
enter
push
ret
int
shlb
jno
jmp
or
mov
sbb
popl
push
popf
inc
jns
jne
lods
or
mov
add
cmpb
push
mov
cli
or
jg
push
mov
push
aam
push
add
cmp
push
mov
or
out
and
jl
xchg
jae
mov
in
mov
inc
push
nop
movsl
gs
jne
mov
lret
jbe
popa
jae
pop
pop
test
addb
fcompl
mov
outsl
pop
fdivs
pop
cmp
inc
cmpsb
push
cld
scas
jae
lret
int
jae
lock
cltd
inc
mov
imul
cli
cmp
mov
mov
mov
mov
mov
dec
iret
mov
dec
push
xchg
outsb
js
test
in
idivb
inc
cli
mov
das
xor
outsb
xor
sbb
cmp
in
mov
push
jle
dec
inc
aad
hlt
das
xor
shlb
mov
sub
or
mov
lea
jns
test
rcrl
shrb
ret
and
add
mov
ret
cmpsb
jmp
xorl
sbb
jae
push
mov
pop
pushf
icebp
mov
incb
test
mov
addr16
cli
les
jb
hlt
adc
out
sbb
adc
xchg
mov
int
mov
popf
sbb
in
int
pop
or
in
or
cmp
add
jno
add
add
lock
inc
clc
mov
shrl
sub
and
xchg
das
arpl
adc
scas
dec
mov
imul
pop
mov
jo
mov
push
shlb
mov
aam
mov
sub
repz
add
add
xchg
inc
push
cmpsl
roll
dec
scas
adcb
sub
xchg
mov
shrb
sahf
cmp
inc
jmp
dec
xchg
in
push
or
cmp
pop
js
push
cmp
mov
inc
sub
pop
and
push
mov
std
enter
mov
jb
dec
pusha
js
pop
fstpl
xchg
pop
lahf
inc
add
loope
out
add
std
incb
or
mov
lods
cs
jb
add
xchg
repnz
and
adcl
icebp
cmpsl
xor
add
popa
fwait
mov
mov
sub
xor
sbb
mov
add
cli
cmp
dec
rolb
repz
gs
mov
jmp
pusha
lahf
aas
sti
aas
pop
or
ss
cmp
push
fisttps
invd
add
or
xchg
dec
xor
jns
sbb
fwait
mov
dec
xor
mov
divb
add
subl
call
dec
adc
jnp
or
pop
mov
loopne
and
mov
dec
sti
mov
pop
inc
xchg
sbb
adc
and
xor
in
sbb
xor
repnz
push
sbb
outsl
int
xchg
sbb
xorl
mov
mov
sub
int
in
mov
pusha
loopne
fstps
cltd
pop
mov
sub
mov
pop
jbe
bound
xchg
and
into
ss
test
dec
pop
out
adc
sbb
sbb
fwait
and
test
sub
mov
adc
and
int
out
inc
in
mov
cmp
test
push
push
mov
icebp
jl
enter
pop
jle
mov
inc
mov
imul
out
jno
pushf
iret
test
cwtl
adc
xor
aam
jg
pop
cld
sbb
sub
shl
push
jne
jg
mov
push
mov
sbb
lds
aas
push
or
movsl
add
dec
xor
mov
pop
je
jne
ss
add
mov
mov
xor
scas
pop
mov
ret
or
mov
add
push
pushf
fs
incl
aam
cmc
xchg
ja
or
add
mov
mov
sub
into
mov
cld
jg
mov
jecxz
les
mov
jmp
mov
jmp
lods
adc
jns
in
shlb
cmp
add
icebp
repnz
add
add
shll
fnsave
mov
pop
pop
flds
or
fs
int
xchg
jg
push
lods
outsb
and
das
xchg
ror
add
lock
xor
repz
fsubrs
adc
in
mov
add
cmp
lret
cs
in
stos
sarl
repnz
test
cmp
mov
jno
or
aaa
push
insl
cli
jge
scas
dec
insl
aad
pop
xchg
aad
js
cli
push
pop
dec
js
bound
cltd
fucom
jecxz
aam
repz
inc
xor
cmp
ja
in
sahf
orb
in
pop
or
movsl
add
dec
bound
and
and
loop
in
test
sbb
cmp
pushf
jne
fidivl
xor
test
test
adc
mov
add
jle
movsl
inc
and
mov
mov
cmpsb
xchg
mov
mov
mov
pushw
inc
mov
sub
cmp
add
jecxz
insb
test
mov
jg
cltd
jmp
mov
inc
shll
sbb
jae
push
mov
ljmp
fadds
xlat
frstor
ffree
push
sarb
dec
pushf
cs
and
pop
mov
add
fs
xor
insb
mov
leave
pop
mov
insb
push
ds
pop
loopne
jae
aam
sbb
cltd
push
loope
pop
addl
dec
rcrl
jbe
jmp
enter
xchg
pop
orl
stos
push
leave
enter
dec
mov
scas
test
out
jp
pop
sti
std
lock
mov
or
rcr
sahf
shll
sub
sbb
outsb
mov
popa
cmp
push
push
lcall
mov
mov
call
pop
adc
sbbl
pop
mov
xchg
and
movsb
ror
pop
mov
cltd
filds
movsl
out
ret
mov
stc
push
push
pop
imul
pop
bound
mov
data16
sbbl
or
int
lcall
in
dec
xlat
cld
mov
cli
jnp
push
pop
iret
mov
mov
adc
push
les
mov
adc
bound
push
dec
mov
mov
mov
xor
cmp
cmp
pop
popa
cs
lods
sbb
and
xchg
sbb
in
pop
pushf
ret
cli
xchg
pop
and
push
test
adc
and
mov
xchg
int
sbbl
cld
fwait
push
mov
es
add
mov
sahf
cmpsb
es
mov
mov
mov
or
movsb
scas
jg
out
pop
int
push
ljmp
mov
mov
jg
xor
pop
inc
xchg
test
mov
arpl
lea
xchg
inc
add
xchg
aaa
mov
insb
lret
aad
pop
stc
adc
or
movsb
and
shlb
stc
incl
sub
ljmp
inc
cmp
mov
je
jecxz
inc
out
xor
push
pop
fwait
mov
jnp
jge
sbb
pop
lock
sub
lock
xchg
add
push
pop
adc
jbe
push
loop
mov
ret
ficoml
aad
lea
jecxz
pushf
pop
mov
adc
iret
addb
inc
pop
pusha
shll
outsl
dec
add
sub
mov
push
add
xchg
adcl
mov
xchg
xor
insl
test
call
adc
shrl
iretw
imul
and
mov
sub
inc
cmc
jno
scas
mov
into
shrb
push
or
int3
inc
inc
sbb
dec
into
pushf
jg
in
pop
cmp
or
xchg
sub
dec
add
or
push
or
pop
pop
dec
pop
je
lahf
jp
aaa
sbbb
imul
jb
sbbl
fwait
xorb
mov
mov
push
push
push
js
mov
dec
pop
iret
xchg
ret
ret
inc
xlat
lahf
jbe
mov
and
mov
mov
popa
adc
enter
cwtl
sub
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
jmp
xor
xor
or
fcoms
invd
add
pcmpeqw
push
fdivrl
cmp
ljmp
lock
idivl
repz
dec
fwait
aas
cmpsb
mov
or
int3
std
mov
cs
or
push
bound
and
inc
lea
aad
sahf
xchg
fcomip
jg
fucom
sahf
bound
push
inc
xchg
pop
js
sbb
xchg
push
cmpsl
dec
adc
mov
cmp
push
mull
sbb
cwtl
inc
pushf
cmpsl
dec
ds
sub
aas
and
sub
ss
outsb
adc
movsb
add
std
xchg
cltd
xor
or
sub
push
cli
push
dec
aad
iret
dec
daa
jg
cli
dec
and
outsb
mov
mov
push
mov
pop
ja
push
jnp
std
ja
push
fs
sbb
mov
cmp
fsubrl
shll
mov
adc
sbb
push
jo
or
dec
mov
ss
fwait
mov
mov
and
adc
popa
jmp
push
push
adc
xorb
enter
push
xchg
mov
cmp
push
clc
xchg
lock
lods
push
jae
mov
or
cmp
fdivs
pop
fisubs
stos
inc
decl
push
lahf
mov
sub
cltd
push
cmpsl
and
dec
dec
lods
jb
push
xchg
imul
aad
push
les
inc
pcmpgtw
push
popa
inc
add
test
test
or
jbe
ret
popf
call
mov
hlt
cmpsb
pop
sbb
test
jl
mov
data16
jmp
push
stos
mov
inc
mov
negl
bswap
lods
inc
data16
int3
subl
mov
insb
fistps
sti
mov
push
lds
call
and
pushf
popa
mov
les
or
loopne
inc
mov
jmp
fwait
or
mov
aaa
ja
lock
cmp
testb
jle
xchg
push
outsl
sahf
dec
in
pushf
inc
rcr
sbb
cmc
push
notb
rcl
adc
into
push
add
push
and
pop
incb
idiv
ds
in
add
out
inc
jne
cmp
push
dec
ds
lcall
pop
hlt
clc
mov
fildl
xchg
cmp
loop
inc
scas
dec
cmc
fisubrs
or
jo
dec
aaa
aas
or
pop
cmp
pop
popf
and
subl
pop
hlt
xlat
jg
or
sbb
adc
outsl
dec
je
fdiv
repnz
mov
push
popa
xlat
out
sarb
rorl
mov
pop
test
call
jmp
sub
jne
adc
enter
and
push
push
sub
adc
fucom
adc
sbb
lret
stos
cmpsl
addb
ja
sbb
lock
xor
stos
test
inc
and
lds
push
es
push
stos
push
shrb
cmp
jmp
xor
dec
mov
xor
adc
pop
pop
cwtl
shll
iret
pop
sub
fisttpll
dec
sarl
xchg
mov
je
outsl
insl
and
mov
push
arpl
pop
sbb
xor
sbb
cmpsb
adc
fwait
test
push
fsubrl
adc
ret
loope
pushf
pop
test
dec
clc
jg
pop
xor
bound
add
std
out
mov
insb
sbb
jno
dec
push
lds
imul
jb
push
jnp
lahf
imul
mov
add
push
adc
lock
ja
xor
js
in
mov
xchg
mov
movsb
sub
fmulp
xor
loope
push
fwait
sbb
das
cmp
jecxz
repz
mov
cmpsb
clc
cmp
xchg
lret
in
and
xor
pop
xchg
sahf
xor
mov
cmp
dec
jo
mov
mov
push
fisubs
scas
push
cmp
and
clc
stos
scas
xor
addb
mov
test
and
test
jae
jnp
sbb
sbb
and
mov
test
loopne
call
pop
sub
adc
orb
and
jae
cwtl
jnp
sbb
add
and
aad
inc
fs
ds
ja
and
sbb
push
hlt
mov
fcomi
mov
inc
pop
jbe
es
sbb
jg
mov
add
fdivp
xor
or
mov
adc
sti
shlb
pop
add
sti
fiaddl
les
aaa
stos
insl
movsb
movsb
imul
stc
std
or
sub
sbb
xchg
xchg
mov
sarl
data16
lret
or
cmp
adc
push
add
lret
std
add
test
jecxz
push
xor
cmpsb
ss
int
in
push
mov
int3
mov
add
sbbb
xor
dec
cli
push
or
call
sub
sti
dec
mov
jb
stc
lret
insb
pop
movsb
insb
scas
pop
mov
cwtl
dec
rcll
jmp
mov
mov
out
add
mov
outsb
dec
inc
dec
idiv
sti
pop
and
into
add
xor
push
xchg
aad
sub
xlat
jmp
loope
dec
call
fidivs
sub
scas
sbb
ret
fnstsw
ror
mov
nop
das
in
nop
jo
sub
shl
and
xor
mov
cmpsb
negb
push
loopne
jne
mov
in
scas
mov
test
jp
xlat
mov
ljmp
clc
hlt
xchg
cmc
cmp
adcl
rcl
dec
cmp
out
in
adc
push
sahf
sahf
cmp
jae
or
out
call
xor
sub
pop
cmp
cmp
push
and
mov
push
pusha
ja
lahf
gs
test
out
fimuls
ret
mov
xor
shl
jmp
push
mov
cli
sbb
fnstenv
dec
cli
loope
mov
or
push
movl
incl
in
fsts
sbb
mov
mov
repnz
jmp
icebp
aad
mov
sbb
jmp
leave
popa
pop
push
xchg
fwait
mov
jno
test
ret
sti
dec
clc
xor
dec
clc
lods
dec
mov
mov
dec
add
int3
inc
mov
sbb
mov
xchg
scas
pusha
mov
adcl
cmpsb
xor
sbb
xlat
inc
add
mov
xlat
imul
mov
xor
gs
ljmp
cmpsl
popa
mov
stos
jg
mov
ret
mov
adc
pushf
xchg
sbb
sub
add
cmp
jbe
int3
jp
test
inc
lahf
cmpsb
adc
or
and
jmp
fstl
pop
ret
ret
pop
adc
imul
push
add
lds
pop
pusha
hlt
and
int
and
mov
mov
jne
or
mov
push
cld
jmp
xchg
and
mov
out
xlat
mov
pop
cwtl
movsl
inc
pusha
jbe
clc
add
and
insl
ss
ret
dec
aas
ljmp
lds
daa
sar
push
out
cmp
inc
arpl
xchg
jge
pcmpgtw
jle
mov
testb
jg
ja
inc
pop
cmp
xchg
and
stc
jecxz
fstps
shlb
loopne
adc
add
xchg
mov
icebp
dec
adc
int3
leave
or
xorl
fisubrs
subl
sbb
loope
sub
and
fcmovnu
cmp
add
xor
adc
neg
cmpsb
push
pusha
xchg
rolb
or
pop
leave
push
bound
cs
stos
es
out
mov
out
add
push
mov
lret
adc
dec
sub
fildll
mov
aas
xchg
leave
push
cmc
pop
std
mov
or
scas
ficoml
mov
clc
icebp
mov
mov
jecxz
inc
movsl
loope
or
imul
add
mov
or
sbb
mov
scas
fidivrs
loope
cmpsl
and
mov
outsl
push
mov
stos
xchg
out
lods
pop
xor
sub
push
pop
mov
ds
or
xchg
and
mov
jge
jmp
mov
mov
iret
cmc
ficompl
cmpsb
shrb
hlt
adcb
mov
mov
aad
xor
adc
enter
shll
mov
xchg
mov
jg
mov
dec
push
push
cmp
lock
loopne
call
andb
xor
cmc
ret
jl
rorl
lock
mov
cmp
push
stos
loop
push
mov
sub
and
das
or
roll
pop
repz
cmp
dec
and
imul
sbb
and
inc
jbe
dec
ret
jae
dec
addr16
jne
outsb
and
jne
inc
cmp
and
orb
lahf
arpl
movsb
xor
mov
pop
es
mov
inc
cmp
jno
stc
pop
notb
push
dec
dec
dec
les
call
push
or
mov
std
sbb
mov
lods
jno
mov
pushf
jno
shrl
das
push
add
adcb
mov
pop
or
lock
push
and
push
mov
sahf
sbb
lods
inc
je
jmp
js
imul
rclb
lcall
xor
ds
test
repnz
inc
xchg
das
test
jle
nop
movsb
subb
and
movsl
cmp
stos
lock
mov
or
outsl
icebp
jmp
outsl
in
jp
aaa
inc
jo
dec
test
imul
sahf
mov
mov
pop
and
xchg
daa
sbb
pop
push
jno
pop
es
push
pop
sahf
ror
ds
jb
out
mov
jbe
dec
popf
adc
mov
outsb
cld
mov
aas
mov
or
xor
mov
mov
mov
rcrl
mov
cmp
int
and
push
sub
mov
pop
bound
lods
test
ljmp
ds
test
lcall
dec
idivl
mov
sub
jecxz
xor
xchg
or
dec
xlat
inc
out
sub
mov
xchg
cwtl
repz
jbe
inc
pop
and
mov
fimull
stos
xchg
cmp
fistpl
test
and
cltd
testl
lcall
rcrb
jle
fldlg2
stos
pop
aas
fidivrs
jl
cmpsb
push
cmovg
cs
outsl
lods
outsb
mov
jae
in
iret
aaa
in
inc
sub
bound
and
inc
repz
cmp
push
sub
adc
aas
jmp
sub
repz
or
insb
push
jp
adc
scas
and
adc
push
adc
out
aas
pop
imul
xchg
popf
loopne
clc
fisubrl
push
notb
or
xchg
pop
cmc
inc
shrl
dec
data16
xchg
add
orb
xlat
repz
fbstp
loopne
pop
xor
insl
jne
jbe
cmp
shrb
dec
mov
push
adc
dec
outsb
lahf
movsb
js
lods
cmp
call
testl
pop
sbb
xchg
sahf
jg
pop
les
add
orb
mov
mov
rclb
mov
lahf
add
xchg
stos
lret
lret
adc
mov
push
and
shll
dec
mov
inc
sub
adc
dec
pop
shll
mov
sub
xor
pop
push
sbb
sti
adc
adc
adc
cmp
xor
insl
neg
mov
cmpsl
push
aaa
fs
test
data16
xchg
je
mov
filds
mov
pusha
inc
inc
add
ret
mov
mov
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
mov
or
mov
mov
loop
out
mov
ud0
add
lea
clc
push
push
cmpsb
xlat
movsb
enter
loopne
es
insl
repz
inc
push
rorb
cmpsb
jmp
scas
push
xchg
movsb
jmp
sub
nop
pop
sub
push
mov
xchg
scas
js
cmp
stc
mov
dec
fstl
mov
in
jle
nop
jp
mov
pop
fwait
pop
sbb
adc
fisubrs
inc
pop
cmp
repz
sub
adc
cmpsb
std
fsubrs
xor
and
gs
xor
lahf
push
orb
ds
popa
xchg
bnd
jo
xchg
inc
xchg
je
jno
jb,pn
cltd
call
mov
fs
or
jae
arpl
popf
ds
paddb
popf
rcrb
andl
adc
inc
mov
fwait
inc
shl
icebp
std
pop
jne
jae
sub
sub
aad
push
pop
imul
sbb
sbb
sub
jo
dec
repnz
ffreep
stc
cmpsb
cmp
rorl
mov
mov
add
out
adc
jns
pop
test
popf
fstpt
adc
cmpsb
pushf
fimull
sub
shl
xchg
loopne
fidivl
ljmp
cmp
mov
ljmp
or
add
loopne
in
jbe
pop
and
or
adc
cwtl
jo
repz
xchg
push
pushf
mov
adc
and
or
in
jmp
mov
repz
jae
je
xchg
jae
add
jo
cmc
into
loope
jb
iret
int3
jnp
sub
mov
repz
jmp
sub
ljmp
je
mov
inc
js
movsl
or
cmp
push
out
pusha
xor
sub
adc
mov
pop
pop
cmp
fs
and
js
sbb
inc
push
xor
adc
push
andb
mov
mov
pop
pop
aam
lret
cmpsl
popa
fadd
in
shlb
cmpsl
and
ret
clc
fwait
mov
in
sbb
popa
mov
mov
mov
clc
inc
inc
mov
cmp
mov
xchg
jbe
jne
xor
pop
push
cwtl
pop
cmp
cmp
mov
push
pop
rorl
sbb
arpl
enter
pop
mov
mov
pusha
mov
inc
dec
add
mov
mov
and
sub
jge
jecxz
scas
or
push
aad
pop
xchg
sbb
xor
jecxz
inc
inc
js
push
pop
add
inc
dec
test
adc
xor
sub
test
dec
cs
sub
mov
shlb
mov
dec
lret
cmpsl
insb
push
ljmp
ljmp
out
adc
movsl
js
pop
push
dec
lret
hlt
js
pop
aam
jbe
hlt
cli
jp
fs
adc
xchg
cmpsl
jno
push
fisubrs
call
push
or
mov
xchg
and
sti
adc
xor
sub
ljmp
pop
fimull
xchg
xlat
repz
imul
movsb
inc
cmpsl
cmpsb
sbb
sub
fcomps
push
mov
ret
subb
push
dec
push
addl
mov
int
fistpl
dec
std
push
inc
rcrb
shrl
fildll
xchg
icebp
add
lret
stos
repz
into
imul
rcll
push
and
cmp
leave
ljmp
jl
xchg
orb
cld
sbb
inc
daa
cmp
jecxz
add
test
and
stos
jbe
fwait
mov
leave
xor
sub
scas
outsl
jb
sarb
rcrb
icebp
sub
or
pop
pop
inc
xchg
pop
call
xor
jb
or
out
push
mov
jb
mov
sub
add
ja
mov
test
push
dec
outsb
push
xor
jge
mull
mov
add
call
pushf
cmpl
xchg
fadd
cmp
dec
iret
mov
daa
jmp
adc
pop
sbb
mov
scas
mov
xchg
aaa
faddl
ljmp
push
aad
dec
je
mov
fs
or
jmp
leave
inc
ds
add
arpl
jb
gs
sbb
mov
fidivs
lahf
aam
repz
fdivs
cwtl
cmp
push
mov
adc
ljmp
cmp
push
int
adc
ljmp
fcoml
aam
cli
in
out
in
lods
outsl
cltd
pop
or
sbb
xchg
xchg
pop
mov
jo
stc
faddl
xlat
mov
xchg
dec
test
ss
fsts
jnp
loop
lahf
xor
rcrb
push
bound
nop
mov
adc
push
test
stc
arpl
fdivrl
inc
ss
or
mov
add
mov
test
mov
add
xchg
sbbl
imul
add
mov
or
enter
jg
push
sub
mov
scas
fidivl
ss
cmpsl
in
pushf
repz
jmp
sub
scas
cmp
out
ret
pop
fs
dec
test
hlt
xchg
popf
enter
aaa
lret
pop
in
das
push
out
xor
xor
add
into
inc
or
dec
cwtl
shll
scas
into
cmpsl
lret
cwtl
mov
lret
je
cli
cwtl
adc
repz
dec
add
adc
xchg
mov
push
mov
repz
popa
loop
mov
jbe
out
xlat
cmc
sbb
xor
jno
mov
ss
adc
jne
pop
jns
jo
add
hlt
lahf
or
popa
adc
in
push
jp
out
outsl
fwait
add
jg
in
lretw
xlat
jg
sub
xor
or
jno
cmp
ret
xor
jl
xorb
and
dec
int
add
sbb
mov
sbb
adc
mov
out
icebp
push
cwtl
jno
dec
cmc
jge
out
sbb
lcall
xchg
fnstenv
adc
hlt
cwtl
xor
loop
stc
test
fcmove
aam
into
dec
jns
jae
in
mov
xchg
pop
mov
les
fwait
mov
imul
add
xchg
aas
inc
xor
pusha
scas
jne
nop
das
jbe
jmp
sub
xchg
mov
mov
inc
enter
inc
mov
fsubrl
and
mov
inc
mov
test
ss
mov
fmul
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ret
mov
adc
cmpsb
js
and
clc
sbb
mov
fildl
repz
loope
lahf
loop
cltd
jecxz
or
mov
jb
xchg
dec
mov
bound
jbe
daa
pop
insb
pusha
adc
inc
mov
jnp
mov
je
fwait
lret
pop
mov
jle
pop
pop
andl
punpcklwd
add
mov
dec
test
lcall
fdivrl
push
ret
movsb
and
fdivs
mov
clc
fwait
ss
adc
push
pop
mov
pop
cmp
cmp
js
sbb
lods
movsl
out
jge
adcb
mov
ja
cmp
test
call
fwait
and
out
in
inc
pushf
out
adc
jecxz
shlb
test
popf
push
roll
or
loope
sub
cmp
dec
aas
or
pusha
xor
dec
mov
jne
dec
fsubp
sbb
popa
xchg
jo
adc
cwtl
pop
dec
sub
in
call
pusha
idivb
daa
int
lock
inc
mov
jecxz
dec
xchg
aas
push
and
out
bound
cmc
enter
js
icebp
cmpsb
out
mov
adc
jle
sti
jb
ss
add
into
hlt
add
xor
stos
std
mov
sbb
jg
pusha
mov
jge
scas
nop
mov
shlb
movsl
dec
xchg
push
mov
xor
shr
sbb
push
hlt
cmc
sti
aas
mov
xlat
pop
loope
cs
mov
test
sub
mov
pop
out
in
ja
lret
pop
xchg
jg
sbbl
dec
clc
repz
dec
imul
outsb
mov
cmp
mov
jne
testl
mov
xchg
sbb
sub
cmp
xorb
ss
push
sub
out
mov
and
outsb
mov
in
dec
lock
pop
sub
in
inc
add
ds
lret
mov
jns
mov
jmp
cltd
out
in
jne
mov
xchg
in
push
add
fldenv
bndldx
or
insl
stos
jl
sti
xchg
fwait
cld
inc
inc
sub
enter
mov
sahf
sub
outsl
les
dec
dec
or
jle
jb
mov
inc
divb
ficoml
rcll
mov
shrb
adc
mov
adc
lods
leave
adc
ds
mov
mov
shl
jnp
sbb
sub
inc
int3
mov
stc
jbe
dec
inc
jg
add
jne
movsb
xor
js
insl
arpl
es
sahf
mov
in
cltd
daa
test
xlat
lea
pop
mov
sbb
lcall
pop
mov
add
fwait
sbb
cmc
nop
pop
push
push
stos
aaa
push
mov
insl
mov
jg
or
int3
dec
ljmp
aas
insl
add
inc
ss
ja
push
cmp
repnz
lds
mov
out
push
push
repz
push
xchg
or
gs
pop
aas
mov
pop
fstpt
outsb
push
test
mov
out
fdivrs
sti
mov
ljmp
cmpsb
push
adc
orb
stos
cld
aad
cs
xor
nop
das
jge
mov
aaa
jno
ficoms
xchg
mov
fmuls
pop
dec
in
jecxz
loope
mov
jl
xlat
ja
stc
outsb
mov
dec
subb
ret
xchg
jmp
xor
and
and
jae
jns
das
out
inc
loope
jl
ljmp
stos
cmp
in
add
adc
xchg
mov
out
in
xor
popa
jnp
jl
push
dec
pop
decb
aas
inc
xchg
jns
cmpsb
mov
js
dec
adc
clc
mov
jge
daa
cli
add
jmp
cli
cld
ss
ljmp
inc
ds
sbb
icebp
dec
jne
mov
inc
adc
mov
add
push
enter
daa
cld
mov
inc
rcr
out
and
mov
gs
push
mov
sbb
sbb
shrl
and
gs
jns
mov
in
in
xchg
jp
fwait
xor
pop
insb
fisttpl
leave
and
pop
jno
xchg
out
adc
movsl
mov
aaa
cmc
bound
dec
adc
sub
adc
xor
xor
cmp
or
and
cmc
mov
or
inc
insb
push
sbb
loopne
or
addr16
sqrtps
pop
push
bound
adc
mov
into
jb
cmpsb
jnp
test
hlt
pop
insb
jae
gs
aas
push
scas
xorl
je
mov
rorb
mov
imul
enter
stos
or
scas
addr16
adcb
cmp
lcall
lock
adc
stc
jge
push
data16
mov
icebp
imul
sub
in
mov
adc
enter
fisubrs
sarl
mov
scas
xor
inc
nop
sbb
and
cwtl
sahf
pop
xchg
data16
jno
xchg
push
shl
ret
scas
or
cs
stos
cmc
mov
pop
into
mov
push
add
mov
nop
or
rcrl
mov
loop
sbb
xchg
imul
loop
test
sahf
aaa
cmpsl
jge
and
loope
stc
addr16
inc
sarl
fldt
fiaddl
mov
mov
xor
push
add
add
sub
xor
adc
mov
push
and
jb
cmp
ret
loop
inc
push
sbb
inc
shll
call
out
lock
cmp
mov
sbb
js
or
stc
mov
xor
mov
shrl
stc
repnz
push
jl
adc
sub
jle
sub
daa
jae
test
add
sbb
mov
sub
das
xor
jbe
dec
and
sbbl
xchg
or
scas
inc
dec
lods
les
out
mulb
mov
jns
xor
sub
pop
pop
mov
pop
jo
xchg
pop
xchg
mov
lods
sbb
int3
mov
jno
cmp
sti
sub
pop
outsl
leave
xchg
ret
popf
out
in
lods
ja
arpl
test
dec
js
movsl
es
xchg
and
das
adc
inc
dec
cmp
cwtl
test
ja
fbstp
test
addb
lods
cmp
cmp
mov
mov
xorb
cmp
shll
stos
push
sbb
jb
pop
mov
xchg
xchg
mov
popf
mov
aas
out
fisubl
iret
pop
xor
outsb
cli
xor
aad
jmp
or
pop
cwtl
mov
or
movl
movl
movl
mov
mov
mov
mov
add
jmp
pop
sbb
dec
mov
or
gs
xchg
pop
mov
psrad
sbb
add
daa
int
rcll
lcall
jle
into
push
mov
unpcklps
daa
vandpd
or
test
and
pop
inc
jmp
stos
mov
and
mov
pop
jnp
mov
icebp
jle
mov
movsl
int
inc
xchg
lods
mov
mov
mov
stos
popf
enter
movb
inc
mov
push
add
insb
xor
jmp
mov
xchg
jbe
pop
and
clc
push
fmull
cmc
out
lods
adc
das
pop
sbb
pop
repnz
pop
jbe
pop
inc
cmpsb
rolb
inc
cmp
pusha
mov
fstl
inc
xchg
add
sub
addr16
or
adc
mov
cwtl
push
jne
xor
inc
xor
lds
sbb
push
aad
scas
pop
sub
loope
sti
pop
scas
fdivrs
mov
imul
xor
pop
or
insl
jecxz
xchg
sub
test
fistl
bound
shlb
xchg
rclb
jns
lcall
popa
ror
clc
jno
mov
out
scas
fstps
mov
xchg
mov
js,pn
mov
pop
xchg
lea
shlb
lock
xor
test
sarb
xchg
call
cmp
xor
cmp
pop
aas
addb
lods
popa
int
outsl
xor
push
lods
jb
mov
mov
adc
add
jmp
adc
addps
ja
xor
cmp
jl
sub
aam
add
out
imul
iret
rcl
fwait
in
mov
xor
out
rorl
shll
int3
xchg
lahf
ds
cmp
lock
lret
mov
loope
mov
lcall
nop
sub
call
xor
fisttpl
repz
dec
mov
imul
dec
out
fwait
sarb
inc
inc
inc
mov
js
in
call
adc
pop
push
lret
pop
movb
mov
into
popf
hlt
and
mov
fldcw
add
jl
inc
mov
push
out
jle
lea
add
jl
cmp
sub
add
and
jns
rolb
adc
imul
mov
lods
push
insl
enter
lods
daa
in
stc
ljmp
sub
xchg
mov
outsl
dec
loopne
leave
nop
and
es
adcl
clc
mov
mov
rcrb
adc
out
adc
lret
rolb
subl
out
pop
rorb
insl
orl
pusha
xlat
out
dec
arpl
jne,pn
test
stos
int3
cld
sahf
rcrb
orl
outsb
sbb
xchg
pop
push
mov
push
jne
incl
add
gs
sbb
sbb
sahf
add
out
xchg
fldt
xchg
add
int3
popa
insb
and
jg
cli
ljmp
gs
roll
stc
cmp
popa
int3
pushf
sub
sbb
cmp
sub
fstp
rcrl
insb
jmp
gs
dec
push
push
dec
add
cmp
ffree
pop
bound
not
cmpsl
adcl
and
push
adcl
inc
js
ret
stc
cs
int
sub
popa
pop
int
add
sbb
cwtl
add
lods
fldenv
adc
adcl
aas
in
idivb
out
adc
xchg
out
lds
lret
mov
cmpsl
lods
rclb
jb
outsl
ds
jg
sbb
outsb
ljmp
and
test
mov
add
in
das
bound
sbb
jl
push
stos
in
aad
sub
mov
xlat
divb
cs
mov
jl
xchg
push
ficompl
call
cs
mov
popf
aad
push
int
stc
mov
nop
aaa
inc
ljmp
xchg
jne
push
xchg
or
dec
jl
xor
inc
test
jo
pop
nop
jnp
fprem1
fisttps
sbb
xlat
lock
add
jmp
repz
rcrb
xchg
add
daa
bound
ds
sti
pop
popa
xor
xchg
mov
popa
and
test
adc
xor
inc
test
adc
shll
jne
add
ret
xor
cltd
xchg
int
cmp
mov
xchg
out
sub
dec
xchg
imul
sub
xchg
lods
rorb
inc
insb
stos
pop
stos
or
sbbb
addr16
fcompl
and
ss
scas
outsb
into
repz
sub
pop
add
mov
dec
mov
out
in
dec
sbb
push
jle
leave
mov
inc
pop
mov
mov
ss
push
insb
test
dec
cmc
cmpsb
push
stos
bound
mov
aaa
push
jp
stc
scas
insl
mov
mov
ja
outsl
ljmp
pop
fwait
adc
je
repz
out
mov
push
fcmovb
cwtl
lods
btr
xor
lea
mov
jmp
dec
sar
and
sbb
pop
xchg
loope
lock
addr16
xchg
jle
mov
inc
outsb
loope
jmp
cmc
mov
adc
adc
add
xor
jmp
pop
pop
xchg
mov
cmpsl
inc
mov
aad
jnp
clc
and
sti
pop
mov
js
outsl
ret
dec
faddl
push
cmp
jg
or
shrb
rcr
inc
jle
orl
es
out
popf
leave
icebp
sarb
xchg
movsl
jnp
subl
outsb
dec
fcmovu
lods
jmp
cmpsl
cmpsl
fdivrs
jns
add
pmulhuw
mov
sub
das
icebp
movsl
les
cwtl
sar
aas
shlb
shl
mov
add
pop
cld
adc
add
hlt
pop
sbb
inc
mov
outsb
or
inc
xchg
sub
cmpps
sbb
in
mov
jns
cli
pop
pop
enter
mov
push
jbe
mov
sub
aad
imull
filds
fs
fcom
sub
add
ret
cmp
stc
fs
jl
and
add
cli
es
jg
je
cmpsl
sub
int
mov
sbb
andb
xor
pop
mov
aam
loop
or
into
loopne
cmpb
test
les
outsb
mov
xchg
cli
stos
and
cmp
push
pop
stos
cmc
cmp
add
add
push
sub
mov
ljmp
iret
sbb
pusha
pop
push
mov
aaa
lods
mov
mov
stos
mov
cld
lcall
xlat
adc
jmp
into
add
or
mov
notl
mov
cmpxchg
insl
subl
push
cltd
stos
adc
repz
imul
mov
sbb
inc
push
push
enter
jmp
loop
addr16
sbb
je
loope
cmp
fisttpl
loope
in
mov
xchg
xor
arpl
aam
hlt
jnp
add
jne
ljmp
push
mov
mov
sbb
lret
inc
xor
mov
and
pop
sbb
xchg
sbb
inc
scas
push
les
sub
addr16
bswap
xchg
pop
fwait
sahf
xchg
pop
fwait
arpl
pop
cwtl
into
fstpl
jle
inc
inc
add
cmpsl
lods
test
push
add
test
or
cmp
mov
adc
xlat
fisubrl
sarl
mov
addb
enter
and
rcl
lods
pop
push
loop
cld
dec
jo
inc
out
insl
scas
ds
test
push
push
cli
pusha
iret
jns
push
mov
not
dec
inc
pop
mov
mov
arpl
leave
lods
push
mov
push
dec
sahf
mov
arpl
sarb
dec
test
out
add
ret
jp
mov
scas
pop
lea
lahf
call
xchg
mov
stos
pop
movups
shll
sbb
and
dec
add
add
cli
mov
pop
cli
movsl
stos
mov
int
jbe
mov
xor
cmpsb
ret
push
pop
cmc
mov
dec
xor
lcall
ss
dec
scas
hlt
jo
int
adc
sub
movl
xchg
push
stc
dec
cmp
mov
aam
out
jp
cmpsl
cmp
scas
cmp
push
lret
test
adc
pop
sbb
stc
mov
mov
or
mov
jb
movsl
daa
dec
repnz
out
imul
sbb
sahf
or
mov
push
mov
ljmp
loope
cmp
inc
iret
push
dec
sar
pop
xlat
mov
popf
adc
and
add
inc
fsubrl
push
dec
push
xchg
call
dec
cmp
pop
sbb
pop
adc
pop
ret
out
mov
jae
cmpl
nop
cwtl
dec
inc
out
mov
or
lret
sbb
out
test
out
clc
mov
sti
pop
cmp
cmp
test
or
loop
mov
mov
movsl
out
jl
lods
repnz
push
mov
cwtl
jbe
icebp
into
push
xor
sbb
out
add
jmp
fstp
stos
sti
sti
add
inc
negl
movsl
xchg
lcall
test
xchg
inc
xchg
jl
flds
cmp
fnstcw
xor
mov
xchg
sti
loopne
pop
std
dec
fldcw
mov
sbb
mov
cltd
cmc
mov
int3
mov
cmpsb
ss
outsb
xchg
inc
xchg
out
lods
out
ret
jle
jb
fsts
dec
pop
xchg
xchg
sahf
je
add
pop
cli
lods
fadds
cmp
cmp
mov
push
sbb
pop
jmp
dec
or
pop
mov
test
scas
jnp
sbb
int
fiadds
loopne
xchg
sbb
jno
sbb
cltd
inc
jae
ss
cmp
adc
dec
aas
xchg
adcb
adc
jecxz
in
cmpb
outsb
repz
aas
sarb
outsb
inc
out
cs
insl
js
icebp
xchg
push
cmpl
xchg
incb
shlb
jo
lock
inc
js
and
testl
lock
fcoms
loopne
adc
out
push
push
and
sub
ja
jl
fisubrl
mov
mov
cmpl
js
loope
add
lea
iret
push
add
jg
cmpsb
addl
mov
sub
add
popl
dec
xor
jge
ja
shlb
sbbb
xchg
and
in
call
jg
fs
jo
fcmovne
je
sub
and
mull
lret
mov
xor
stos
sub
ja
movsl
and
or
outsl
pop
sub
loop
sahf
and
scas
xchg
push
in
mov
dec
jle
lcall
cmp
cmp
or
pop
addr16
mov
aam
clc
jge
mov
ss
jg
add
mov
fwait
sbb
mov
lea
ss
mov
or
lret
dec
nop
hlt
mov
mov
dec
jnp
mov
lahf
ret
inc
addb
mov
add
mov
cmp
xchg
inc
sbb
gs
pop
mov
jae
shll
cwtl
fidivrs
fisubl
scas
pop
andb
jae
pop
mov
add
cmc
loopne
pop
pop
mov
sahf
mov
xorl
mov
jmp
nop
mov
dec
lcall
leave
js
pop
test
sub
repnz
xlat
popf
push
fs
mov
jo
insb
bound
pop
sbbb
adc
test
outsb
and
pop
pusha
sbb
jp
lea
mov
pop
mov
mov
mov
loopne
add
adc
jecxz
mov
pop
or
xchg
in
pop
xor
and
shll
inc
xchg
pop
dec
fimuls
mov
mov
sub
int3
bound
lods
fwait
and
add
xchg
jo
and
das
add
dec
add
pop
add
int3
dec
push
addr16
imul
loope
mov
sub
rolb
cmpsl
lcall
add
pop
add
pop
push
push
test
mov
sbb
mov
divl
xlat
add
mov
add
push
gs
icebp
repz
mov
pop
enter
sbb
push
pop
dec
imul
or
and
or
jbe
loopne
loopne
cmp
int3
mov
mov
outsb
out
adc
pop
adc
das
push
imull
int3
daa
and
push
pop
mov
nop
adc
adc
aam
mov
inc
mov
jno
mov
mov
push
adc
adc
test
fwait
adc
mov
insl
pop
lcall
das
mov
push
xchg
and
test
lahf
inc
aaa
pop
jmp
add
pop
add
imulb
test
pop
pop
cmc
add
add
pop
ljmp
shr
out
das
cli
mov
mov
mov
push
cmp
fstpl
mov
push
inc
outsl
or
push
pop
jns
lods
jno
dec
cmp
push
adc
adc
xor
scas
pop
outsb
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jmp
pop
cli
pop
sub
or
dec
pop
nop
push
inc
aas
js
daa
in
adc
and
mov
enter
daa
mov
sbb
aam
cmp
mov
fimull
dec
pop
sbb
scas
ss
cmp
sets
loopne
pop
add
xor
rcrb
sti
mov
pop
mov
lods
jle
insl
add
in
push
push
pop
imulb
and
cmp
insl
ljmp
pop
sub
rclb
aaa
xor
dec
pusha
push
cld
ds
mov
sbb
xchg
imul
gs
pusha
imul
daa
fs
mov
addr16
shll
inc
fmul
lret
cmp
pushf
fsubrs
cmc
sub
and
add
movsl
dec
adc
movsl
inc
xchg
aad
jg
out
dec
lret
mov
aam
and
sbb
sub
sbbb
mov
push
xchg
cs
scas
pop
pushf
add
fstp
ret
std
jb
icebp
shll
push
leave
dec
jne
imul
and
push
ljmp
xchg
je
jmp
test
sbb
sub
addr16
fiaddl
xchg
xor
mov
test
out
loope
sbb
mov
sub
sub
mov
xchg
testl
scas
inc
hlt
jl
aad
xchg
sti
addr16
or
pusha
push
pop
shl
loope
inc
cmpsl
popf
and
jle
push
sarl
fdivp
mov
mov
jnp
jge
inc
ss
or
sbb
add
sbb
xor
test
or
sub
xchg
and
iret
pushf
xchg
adc
mov
cmp
out
push
ror
xor
loopne
pusha
jo
jne
imul
andl
inc
and
push
gs
ss
inc
ret
push
enter
mov
cmpsb
push
push
cmp
movb
adc
cmc
dec
inc
mov
or
push
mov
xor
clc
pop
or
inc
cmc
xlat
movsb
jne
or
jbe
in
enter
sbb
adc
or
cmc
mov
or
pop
test
jbe
sahf
or
jb
enter
mov
cmpsl
xlat
inc
mov
repz
mov
cli
lock
enter
popa
test
sbb
jb
nop
pop
je
lock
mov
clc
hlt
lahf
int
xor
fstps
mov
repz
dec
rclb
adc
sbb
lods
rcl
adc
mov
xor
pop
stc
jne
out
or
daa
xor
out
add
fcompl
pop
frstor
push
sbb
pop
fs
pop
inc
add
cmpsl
in
jne
arpl
xlat
dec
adc
or
adc
mov
xlat
sbb
pop
xchg
bound
and
xor
std
xor
scas
lock
jae
test
xchg
in
inc
insb
sub
push
and
mov
or
or
les
les
adc
rorl
popa
jbe
mov
jmp
lods
ret
cs
jne
dec
roll
clc
sbb
sub
hlt
cmp
push
mov
xchg
test
mov
xchg
add
jle
mov
fwait
xorl
mov
xor
xchg
gs
andb
pushf
mov
je
jp
jmp
adc
inc
xor
shlb
xchg
mov
sti
mov
lcall
or
add
add
jb
pusha
call
sbb
mov
xchg
push
mov
mov
pop
cmp
je
mov
pop
xor
in
sti
in
dec
aad
les
ret
jmp
add
push
mov
lret
and
xchg
add
imul
bound
sub
add
fisubrl
fs
xchg
xchg
push
and
cmpsl
icebp
cld
je
xchg
xor
jg
test
cmp
in
push
mov
js
push
ret
lret
inc
push
fbstp
int3
in
pusha
shll
leave
js
loop
fiaddl
xchg
mov
pop
inc
dec
adc
dec
jo
into
in
fldl
mov
jne
in
ret
rclb
call
add
stos
push
cwtl
into
shll
into
pop
or
push
adc
scas
adc
outsb
daa
stc
int3
inc
push
pop
imul
and
mov
jmp
call
rorl
inc
cwtl
lcall
in
jo
gs
mov
cmp
pop
inc
push
push
and
dec
dec
int
arpl
pushf
jnp
cmc
xor
subb
lock
decl
mov
shl
mov
sbb
sahf
aad
sub
or
cmc
mov
mov
jmp
inc
xor
lock
add
in
xchg
mov
inc
xchg
cs
int
pushf
hlt
gs
xchg
out
cmp
gs
in
lds
sbb
cmp
cld
stos
jmp
imul
repz
gs
push
dec
rcrl
jle
sub
jmp
frstor
xor
jp
js
pop
cltd
fwait
sub
pop
cwtl
mov
mov
pushf
and
js
pop
aaa
push
in
mov
pop
fists
jle
mov
iret
mov
xor
sub
add
mov
push
pop
xor
enter
imull
call
das
stos
test
add
iret
push
and
inc
xchg
aam
sahf
dec
cs
cmp
ret
punpcklbw
pop
xchg
push
rcrl
push
mov
or
xor
or
jp
xor
mov
test
and
push
or
test
sarl
sub
iret
mov
jbe
pop
ss
fstps
insb
and
aam
lret
mov
stos
mov
dec
mov
push
fbstp
sub
xchg
testl
adc
mov
mov
filds
insb
test
sub
cwtl
jp
mov
dec
push
orl
es
push
mov
pop
cwtl
push
sti
fdivs
push
push
cmpsl
fsub
das
jno
ss
imul
ljmp
jb
lea
repz
in
jne
ss
lock
push
mov
pop
lock
inc
loopne
or
stc
xchg
jecxz
cmp
cmpsl
addr16
in
sbb
or
movsb
xor
sbb
daa
pop
fisubs
outsb
out
mov
mov
fldcw
inc
lods
enter
push
inc
mov
mov
ficompl
std
cmpsl
js
js
sbb
xor
cs
mov
flds
lods
ds
jp
push
call
inc
add
idivl
fldt
sub
push
sub
mov
mov
dec
adc
movsl
cmp
mov
or
jne
mov
add
imul
xor
mov
div
jmp
lret
pop
cmp
adc
and
mov
and
sub
xlat
xchg
push
jle
loop
incb
mov
fidivrl
mov
pop
js
mov
pop
fwait
sbb
inc
xchg
lods
test
lds
jbe
jl
por
and
and
pop
lods
test
mov
adc
jne
push
push
push
add
add
in
add
iret
aad
xor
dec
xchg
dec
fdivl
fnsave
ret
add
scas
inc
fwait
sub
sbb
clc
bnd
xchg
in
gs
mov
fnsave
xchg
pop
and
jnp
push
adc
jb
push
sub
xor
mov
mov
stos
lahf
fisttpl
scas
mov
mov
sbb
flds
outsb
or
scas
push
loopne
mov
bound
or
test
and
js
lea
push
in
jmp
jg
jcxz
in
fisubrl
loope
hlt
int3
mov
mov
lcall
sbb
mov
adc
adc
push
int3
test
mov
clc
int3
inc
in
inc
outsb
pusha
sbb
jge
cmp
stos
push
and
prefetchw
aam
fdivl
pop
shl
sbb
cli
mov
jecxz
or
cli
insl
incl
lret
dec
xchg
adc
jecxz
out
push
adc
insb
loopne
mov
push
xchg
jecxz
push
aad
add
test
fisttpl
add
scas
cmp
loop
inc
xchg
push
out
push
jb
adc
and
or
es
push
jle
cwtl
xlat
xorl
notl
push
js
in
pop
ljmp
inc
fildl
cmc
shl
push
push
lods
add
add
xchg
repz
push
push
scas
pushf
popa
xchg
mov
ret
fldl
shl
in
and
movsl
mov
or
js
call
ljmp
xchg
mov
sbbb
dec
sbb
shrb
sub
cmp
stos
cmc
dec
sub
sub
lcall
push
pop
jge
sub
adc
xchg
pop
mov
cli
lods
jne
repnz
jge
movswl
lock
lahf
fnstenv
dec
aaa
addl
or
dec
lea
aaa
or
hlt
push
stc
out
xorl
push
rclb
and
cmp
inc
jmp
sbb
rclb
dec
jle
pop
fidivs
mov
mulb
outsb
fldl
mov
or
xchg
subb
push
sbb
cmpb
inc
sbb
xchg
movsl
push
cwtl
or
push
pusha
mov
xchg
mov
dec
push
adc
and
daa
jbe
and
sbb
xchg
imul
cs
into
test
jle
ror
jnp
out
loopne
sub
xchg
pop
adc
sub
jecxz
push
or
arpl
or
and
jae
call
fcmovbe
inc
sbb
cmp
xchg
stos
dec
mov
push
xchg
inc
test
dec
or
mov
xchg
xchg
lods
or
imul
inc
or
movsb
mov
jmp
ds
lret
inc
xchg
jl
pusha
xor
mov
fsubp
dec
sub
adc
imull
mov
push
int3
std
out
pop
int3
rcrb
add
les
push
add
dec
sub
fwait
mov
aam
rcl
imul
rolb
fwait
push
fs
mov
cmp
mov
imul
flds
adcl
sub
sub
loope
inc
dec
push
das
gs
lea
dec
mov
outsl
stos
sub
cltd
jo
fstl
inc
push
das
call
xor
in
and
pusha
sub
lods
lcall
bound
push
jne
lods
fisttpl
push
pop
mov
mov
lcall
fldt
cmp
push
push
stos
lret
roll
push
sbb
dec
xchg
dec
add
test
aam
jbe
bound
and
jb
aas
cmp
stc
push
ret
adc
in
mov
xchg
mov
mov
add
out
and
cwtl
mov
xchg
into
sub
sahf
sub
cmpsb
pop
outsl
movsb
icebp
xchg
sbb
js
ss
sbb
hlt
aaa
mov
icebp
cmp
xchg
hlt
xlat
lcall
movsl
pop
xlat
jge
sahf
mov
sahf
inc
dec
mov
mov
xchg
aaa
pop
jmp
jmp
sub
mov
xchg
and
cmp
xchg
repz
mov
and
dec
or
jnp
jle
into
rolb
cld
fmuls
xlat
aad
inc
or
or
loop
push
inc
jge
das
es
daa
out
out
movsb
mov
push
sti
add
ja
xchg
movsl
xor
shlb
mov
je
lods
mov
subl
sub
ret
dec
loope
dec
dec
add
mov
and
bound
pop
cld
in
push
movsb
add
jo
enter
inc
ret
fadds
in
xchg
sahf
sahf
mov
inc
mov
sar
and
inc
fcmovnbe
mov
mov
and
cwtl
dec
or
rorb
inc
shrl
popa
shlb
mov
js
adc
mov
sub
cmp
pop
inc
les
mov
mov
pop
jmp
cmp
push
jg
mov
stc
std
pop
rorl
xor
xchg
jae
xchg
shll
scas
adc
xchg
lret
push
sub
cmp
test
adc
popf
sbb
inc
jmp
xorl
jp
imul
lds
scas
ja
ds
push
jecxz
push
fisubrl
xor
cs
push
pop
scas
xor
xchg
sub
cwtl
jg
sub
sbb
ljmp
lea
repnz
aad
pop
xchg
xor
push
pop
sub
mov
adc
adc
fwait
insb
ret
data16
ja
movl
test
cmp
cwtl
aad
adc
pop
push
jge
xchg
repnz
mov
mov
add
mov
dec
or
fistpl
or
dec
jbe
in
nopl
div
stos
je
les
cwtl
xor
sbb
addr16
lock
clc
xchg
inc
push
and
sbb
gs
push
adc
mov
mov
ja
push
inc
sbb
add
push
daa
mov
idivl
test
arpl
sahf
dec
fs
mov
cmp
scas
movsl
mov
pop
in
jns
xor
xchg
pop
cmp
push
insb
cmp
mov
or
pop
dec
jmp
lods
call
pop
add
xchg
or
lods
mov
jmp
cmc
xchg
cmp
push
mov
adc
pop
push
mov
and
rorb
and
push
xchg
dec
cmp
xlat
sbb
mov
mov
scas
rclb
sub
dec
test
add
sub
das
pop
xchg
pop
es
mov
arpl
xor
lds
mov
js
les
fwait
xor
push
ljmp
outsb
fdivrs
cmpsl
jae
mov
iret
or
inc
mov
sbb
xchg
in
push
push
ret
xlat
das
out
mov
mov
sbb
aas
inc
jmp
mov
ds
lods
aaa
mov
orb
cmp
push
imulb
out
or
push
add
testb
push
sbb
xchg
pop
std
adc
push
and
idiv
test
pop
stos
jbe
mov
rol
sbb
mov
mov
push
cmpsb
dec
lods
mov
xchg
repnz
lcall
jo
xchg
shll
imul
xor
cmpsb
adc
push
xchg
mov
mov
fisubrs
cmpsb
and
pop
mov
mov
and
sbb
add
lcall
push
xor
lahf
add
and
hlt
mov
incl
add
aaa
sub
mov
adc
xor
mov
sub
pop
xor
mov
stos
add
cmpsb
andl
pop
sbb
xchg
lcall
cli
fists
adcb
sub
adc
pop
push
inc
xlat
test
cld
lea
loop
pop
mov
jns
bound
push
repnz
fcomps
outsb
fisttpll
and
and
hlt
pop
mov
repz
pop
and
sub
inc
les
int3
jnp
push
inc
repnz
inc
scas
push
movsl
add
or
mov
jp
fadds
sti
cmp
aaa
arpl
mov
lret
lods
xchg
dec
stos
je
or
adc
mov
addl
pop
sub
lret
jo
sub
in
push
fistpll
out
mov
mov
xor
adc
cmp
inc
pusha
aam
fiaddl
loopne
sub
add
sahf
movsb
xor
fisttps
jp
push
test
cs
pop
sahf
cmc
sub
mov
dec
pop
rolb
push
leave
in
push
jp
push
addr16
mov
xor
ret
push
leave
mov
sbb
fsubl
cmp
sbb
icebp
sub
enter
cmp
std
sti
add
xchg
cmpsl
dec
jle
sub
pop
adc
xor
sbb
adc
ljmp
cld
les
loopne
push
xchg
popa
xchg
shl
ljmp
xor
adc
ss
xlat
sti
shll
cmpsl
mov
dec
shlb
adc
inc
xor
pusha
sub
xor
sub
std
push
xchg
lret
aad
mov
int3
mov
xorb
addr16
xlat
push
popf
rcrb
scas
pop
stos
aad
ret
leave
sub
mov
inc
into
lret
jl
inc
adc
stos
clc
je
mov
or
fcompl
fdivrl
push
push
cmpsl
loope
jp
cmpsb
xor
xchg
ja
adc
mov
dec
hlt
fadds
es
mov
or
pop
popf
cmp
add
lahf
mov
movsb
movsl
rcrl
popa
movsb
push
xor
inc
enter
adc
sar
dec
ret
imul
insb
mov
jne
mov
and
and
cwtl
rorl
arpl
sbb
loopne
outsb
and
adc
inc
outsb
js
iret
add
jne
cli
mov
add
movsb
es
ljmp
in
loope
push
mov
inc
enter
cmpsb
sbb
adc
sahf
out
test
adc
push
mov
outsl
incb
adc
pop
xor
aad
sbb
mov
rcrl
int3
pop
adc
sub
xchg
das
jo
mov
adc
jge
aaa
lret
xor
pop
push
out
rcrb
cs
xor
mov
cmp
scas
adc
mov
mov
mov
mov
push
aas
sbb
sbb
sbb
pop
and
inc
or
and
and
js
pop
mov
mov
sti
loope
xor
nop
imul
mov
push
gs
jnp
iret
push
xchg
mov
fnsave
cli
cmc
mov
daa
iret
adcb
or
jmp
pop
jne
aad
add
nop
cmp
mov
lcall
push
mov
and
fiadds
pop
mov
pop
outsl
jle
fists
sub
pop
cmpsl
in
popf
cmp
outsl
xor
sub
insb
pop
std
inc
int
ret
push
xchg
dec
inc
jbe
jo
add
lds
push
lods
pop
movsl
pop
mov
test
sti
sbb
movsl
sub
mov
push
iret
adc
cmp
fisubrl
or
sbb
scas
adc
pop
xor
inc
sub
or
pusha
sbb
jl
je
scas
mov
fs
mov
hlt
push
fbld
fnstsw
nop
jmp
jl
pushl
bswap
jmp
repz
sbb
rolb
stos
push
mov
imul
inc
xor
dec
fisubrl
xchg
ljmp
pop
cwtl
lahf
mov
add
in
sbb
scas
adc
aam
lock
pop
lret
fwait
push
push
push
cltd
mov
mov
daa
cmp
add
lret
and
ret
and
sti
cmp
loope
ret
jb
or
push
pop
xchg
sub
pop
mov
pop
aaa
cmc
push
sbb
push
cmp
pop
and
iret
out
adc
xchg
inc
scas
lret
pushf
add
adc
mov
gs
pop
cltd
push
rcrl
mov
inc
cmpsb
movsb
out
ficomps
mull
or
sbb
mov
mov
mov
xor
test
stos
shl
in
xchg
mov
jmp
push
outsl
add
jle
sub
adc
aas
out
inc
mov
dec
dec
sbb
mov
cmpsb
mov
dec
adc
jmp
push
sub
lea
fnsave
mov
inc
sbb
mov
repnz
or
or
js
test
scas
pop
xlat
aaa
fistpl
jg
add
mov
push
jns
mov
idiv
repz
daa
loope
xchg
mov
jmp
cmp
xchg
or
scas
fldt
mov
and
flds
rorb
insb
sbb
out
cmpsb
xlat
adc
jg
insl
ret
stc
insb
adc
pop
mov
pushf
lcall
cwtl
daa
add
xchg
inc
out
inc
sbb
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
jmp
scas
fldl
movsl
jl
stc
mov
mov
sete
jmp
and
fmull
push
test
mov
test
call
mov
push
roll
jp
mov
pushf
pusha
sbb
jb
xor
xlat
pop
fistpll
imull
cmp
push
inc
dec
arpl
fistpll
insl
repz
push
rcl
je
push
pop
mov
int
imul
subl
push
sahf
out
push
dec
ret
cwtl
test
jmp
aaa
push
inc
rcl
js
pop
fwait
addl
mov
mov
lea
and
jp
fsincos
inc
popa
icebp
xchg
add
add
iret
cli
and
jmp
mov
dec
sub
out
xlat
es
insb
mov
sahf
push
mov
leave
or
fstps
push
mov
cmp
mov
dec
and
fildl
xor
lahf
mov
ljmp
mov
inc
mov
fsubl
inc
adc
ljmp
add
clc
pop
sbb
fadds
pop
fisttps
sbb
ror
jg
cmp
or
fcoml
xchg
cmpsl
and
add
pop
ljmp
mov
mov
xor
ret
shr
xor
outsb
cmpsl
loop
imul
movd
sub
fbld
stos
int3
jbe
mov
or
xor
mov
xchg
jb
mov
add
insb
test
aas
add
or
mov
cmp
lods
sahf
pop
mov
xchg
jle
jnp
mov
gs
test
pop
adc
cwtl
fstpt
pop
psllw
sub
and
and
jnp
jge
scas
jmp
call
inc
test
rorb
or
inc
dec
and
cmc
repnz
sbbl
rcrl
jbe
test
dec
push
test
lret
cmpsl
push
push
cli
popf
in
sarb
mov
xchg
fildl
or
iret
in
and
ret
jge
mov
fs
into
int
ret
push
into
dec
inc
mov
insb
rcrl
mov
pop
icebp
out
cmpl
out
mov
mov
test
jecxz
inc
jge
push
sub
jns
cmp
jecxz
pop
cmp
and
dec
and
push
jl
mov
shlb
aas
enter
scas
push
in
jp
int3
push
cli
or
inc
js
repnz
sub
or
jmp
popa
rolb
test
adc
push
lcall
insl
mov
and
frstor
dec
ficomps
xchg
cmp
xchg
push
push
pop
dec
pop
jae
lcall
lret
jns
xor
push
cmpsb
jnp
sbb
mov
mov
and
xchg
add
xchg
cmp
jmp
cli
add
shll
sarb
cli
jns
fdivrs
ret
clc
shlb
pop
sahf
jp
jge
pusha
imulb
testl
ret
stc
fs
mov
inc
gs
pop
sbb
and
sbb
mov
jae
fimuls
pusha
jne
adc
sbb
jmp
adc
push
dec
into
push
cmp
imul
rclb
xchg
add
pop
xchg
mov
js
dec
test
xor
iret
dec
icebp
cmp
mov
into
mov
push
xlat
lret
mov
lods
stos
or
pop
fwait
mov
int
pop
movsl
add
dec
sub
repz
add
orb
mov
jns
xorb
pop
shlb
data16
mov
mov
flds
and
cmp
xor
bound
pusha
int
add
or
sbb
mov
out
jns
das
test
rcrl
push
mov
cmpsb
imul
call
mov
in
mov
cwtl
cs
mov
aas
daa
outsl
int3
jnp
jb
fstpt
jae
adc
pop
and
cmp
and
aas
je
cmpsl
cltd
sub
xchg
lret
lock
inc
fimuls
dec
sub
fbstp
cwtl
add
add
imul
testb
inc
cmp
mov
test
mov
push
ret
fildl
lods
rcr
or
int
jmp
ret
push
stos
shrl
stc
aam
pop
mov
repnz
fs
xor
jecxz
mov
and
jecxz
mov
adc
jo
jb
lcall
jmp
hlt
inc
sbb
dec
movsl
push
xchg
inc
lods
mov
aas
and
xor
int
sub
cmpsb
jmp
adc
cltd
fisubl
mov
aaa
sub
mov
mov
jmp
nop
js
sub
adc
jb
add
jns
inc
sysret
dec
push
filds
sub
rclb
int
and
shll
out
test
nop
dec
pop
popa
fdivr
fdivl
imul
mov
jnp
lret
bound
adc
push
pop
jmp
out
stc
dec
xor
mov
idivl
jno
fstl
dec
inc
in
shlb
xor
inc
bound
pop
lret
add
loopne
outsl
sbb
lea
js
fsubrl
xchg
mov
or
and
aas
and
mov
xor
stc
ret
mov
cli
sub
sub
xchg
mov
test
pop
into
inc
daa
dec
mov
mov
push
cmp
sbb
cmc
cltd
dec
mov
jl
pushf
pop
ljmp
bound
mov
fcmovnbe
es
push
dec
adc
scas
insl
gs
adc
sub
mov
ret
fcompl
add
xchg
sbb
lret
aam
stc
push
out
outsb
mov
shl
xor
or
out
adcl
jbe
idivb
xchg
cmp
loope
adcl
ret
gs
icebp
fimull
subb
inc
adc
jl,pt
pop
clc
mov
xchg
aas
arpl
dec
pop
cmpl
jecxz
sub
xor
gs
or
cld
cmp
ret
dec
ja
scas
lahf
fnstsw
insl
cmp
push
lahf
sar
movsb
sbb
jnp
mov
mov
push
add
xchg
xor
mov
outsb
lahf
sbb
in
in
jb
out
std
lods
mov
push
xchg
cmp
dec
decl
xor
mov
repz
mov
mov
shrb
or
int
mov
ds
xchg
rcrb
jne
mov
and
and
jmp
jne
add
subl
xchg
add
push
addr16
and
fmuls
push
ss
xchg
adc
xchg
in
das
jle
nop
add
leave
and
stos
sti
push
jg
out
sti
rcr
mov
loope
out
mov
sub
xor
pushf
loopne
cmp
mov
aad
jle
andl
gs
test
shlb
xor
cwtl
fsub
lahf
mov
sti
cmp
insl
mov
mov
andb
cmpsb
pop
mov
and
pop
cs
ljmp
cli
in
push
mul
jnp
cmp
sbb
sbb
jge
imul
push
aas
pop
cwtl
inc
jle
fdivrp
sti
mov
cltd
clc
or
test
stc
dec
sti
add
xor
inc
dec
mov
inc
jmp
mov
inc
adc
imul
jecxz
sti
ljmp
sub
inc
hlt
dec
cmc
aad
cmpsb
imul
push
mov
inc
or
cmpsb
out
fwait
nop
std
aad
jmp
mov
mov
pusha
jl
cs
mov
in
mov
xchg
jb
push
mov
iret
loop
xlat
jbe
pop
mov
scas
jbe
push
shlb
push
fsubrp
out
fimull
push
into
dec
mov
ficoms
int
jle
adc
push
int3
fimuls
jns
dec
lahf
mov
pop
fwait
test
inc
outsb
jl
fstps
xlat
outsl
adc
xor
mov
in
mov
inc
and
adc
ret
enter
lds
xchg
add
inc
inc
fistl
push
sbb
adc
and
outsl
ret
addr16
mov
xor
call
mov
outsl
mov
aaa
xor
cs
mov
and
sbb
push
lret
adc
out
rcll
pop
aam
int
cmp
aam
sahf
jno
fistpll
inc
jle
fs
cwtl
leave
push
xchg
ret
mov
pop
mov
fbstp
xlat
inc
and
insl
pop
js
movsl
dec
cli
push
mov
out
aam
xor
dec
mov
xor
dec
fdivl
addb
lea
or
xchg
addr16
addr16
pushf
jg
out
mov
cs
jnp
js
xor
adc
mov
movl
mov
xchg
fildl
ja
mov
imulb
mov
lods
dec
jmp
add
mov
rcll
cmp
lods
mov
cmc
ss
sahf
out
inc
mov
in
movl
lds
pop
and
add
sti
push
push
cmp
cwtl
in
cwtl
es
test
and
int3
inc
testb
cmc
dec
jmp
lahf
mov
push
clc
jmp
les
fstps
cmp
jle
movsb
sub
or
pop
pop
stos
fdivrl
adc
cmp
push
je
push
mov
pop
or
movsl
xchg
pusha
jp
inc
xchg
repnz
rcll
and
xchg
leave
and
or
shlb
xchg
das
aaa
pop
icebp
mov
xor
mov
scas
push
icebp
iret
aaa
push
sub
pop
push
iret
mov
addb
sarb
xor
hlt
mov
or
sub
rclb
dec
into
lret
add
daa
or
jnp
gs
test
sub
cmpsb
daa
cmp
or
pop
movsb
adc
addr16
sub
scas
xchg
aad
xorb
fidivrl
sbb
jmp
lret
nop
or
jns
sti
sar
mov
cmpsb
jb
nop
dec
psrad
push
inc
mov
lret
dec
adc
aaa
lret
adc
dec
ljmp
into
push
sbb
lods
inc
cld
mov
xor
das
in
mov
xchg
jl
add
mov
sub
lahf
es
fcomps
in
xlat
and
sub
or
lahf
loope
adc
sar
push
mov
sti
inc
xchg
ret
xor
dec
push
icebp
inc
mov
outsb
inc
mov
mov
push
mov
mov
push
push
xor
mov
dec
out
and
push
cmpsb
cltd
xor
cmp
fldcw
filds
mov
xchg
inc
pusha
cmpb
inc
sbb
lods
and
imul
stos
xchg
xlat
and
xor
xor
cmp
mov
jnp
je
stc
mov
testl
jbe
pop
xchg
mov
and
sbb
cli
loop
lock
jns
or
cmp
and
inc
jmp
jle
add
mov
or
es
pop
mov
lea
push
mov
cli
inc
imul
stos
movsl
and
xchg
lahf
sub
ret
cmp
adc
outsb
stos
jae
je
sub
jne
in
or
xor
sub
xchg
mov
mov
in
mov
xchg
push
xor
out
mov
cmp
into
in
mov
sbb
adc
xlat
pop
orl
push
fdivrs
shll
jecxz
test
xor
xchg
push
and
imul
lea
ljmp
mov
jecxz
aaa
lock
into
lods
push
sbb
cmp
in
pmuludq
addr16
fiaddl
jo
dec
shll
jmp
xor
jg
test
aad
mov
lret
scas
dec
add
out
jle
mov
or
aas
sub
lds
mov
or
and
je
or
lahf
ret
std
insb
int
xchg
push
int3
scas
mov
test
xchg
xchg
aam
lcall
jno
xchg
jg
flds
mov
or
fwait
cli
int
dec
push
insb
sub
xchg
orb
popf
or
push
jnp
jp
cltd
hlt
xchg
cmpb
adc
lret
and
push
pushf
cmp
inc
sbb
std
nop
lock
push
jmp
fimull
pop
mov
xor
std
popf
or
bound
loope
lret
mov
icebp
or
movsl
mov
out
push
mov
shrl
pushf
mov
sbb
mov
test
mov
pop
sbb
mov
sbb
sti
bound
imul
pushl
bound
mov
ret
push
out
cmp
and
pop
or
negb
jmp
mov
jbe
fcoms
imul
std
loopne
push
and
lret
les
pop
fwait
xchg
push
minps
hlt
cld
xchg
je
push
divl
xchg
xor
adc
xor
scas
test
pop
sahf
add
movsl
adc
insb
mov
push
fcomi
fyl2x
outsl
adc
hlt
fsubrs
cs
pop
mov
push
mov
lahf
and
ja
addr16
pop
cmp
test
add
incl
enter
add
jmp
nop
shrb
sub
addr16
sub
pop
sbb
js
adc
and
int
in
xorb
sbb
out
or
cmpsl
loop
jo
inc
pop
xchg
xchg
out
stos
sbb
mov
or
jmp
dec
nop
mov
or
jmp
jns
in
and
pop
iret
nop
std
push
pop
jge
insl
xchg
arpl
mov
cld
xor
sub
or
pop
fwait
push
and
in
lock
stc
nop
ja
mov
or
lcall
arpl
mov
jno
lds
mov
filds
mov
xchg
push
jle
jne
mov
ljmp
aaa
sti
xchg
mov
dec
in
testl
fcoml
je
mov
repz
cmc
and
fdivp
sar
lds
cs
pop
repz
ret
ret
stos
mov
or
jg
and
adc
in
mov
mov
addl
inc
lods
cmp
sub
inc
imul
mov
mov
or
test
sbb
mov
ljmp
dec
fsubs
jnp
jns
xchg
mov
mov
fdivs
inc
xor
loopne
push
nop
xor
pop
cmpsl
sub
jo
shlb
imul
sub
ret
sub
cmp
nop
ja
repz
adc
xchg
adc
push
inc
add
inc
xlat
sub
adc
aaa
pop
jmp
addb
arpl
sahf
das
jo
xor
or
int
fs
lods
mov
out
push
inc
sbb
jnp
add
pop
sbb
neg
sub
dec
mov
inc
imul
adc
imul
inc
jp
dec
ret
movsb
les
or
mull
push
cltd
adc
ret
add
repz
xchg
test
dec
mov
adcb
pop
lar
inc
jne
push
mov
adc
iret
pop
clc
lods
aaa
lret
or
idivl
bound
shrl
iret
lcall
pop
in
jg
mov
adc
push
pop
add
negb
xchg
fcomp
inc
scas
add
bound
push
push
out
hlt
out
fld
bound
pop
daa
xchg
xor
data16
sub
and
push
enter
loop
stc
sbb
ret
les
lods
cwtl
cs
cs
test
push
add
cmpb
mov
and
push
insl
and
inc
mov
push
fidivs
imul
jnp
inc
shrl
xor
jno
out
mov
enter
or
lock
xchg
arpl
fsubrl
xor
xor
out
adc
sub
pop
int
sub
fchs
jmp
mov
adc
test
outsb
sbb
sbb
push
xchg
movsb
lods
lock
lret
sbb
cmp
sarl
enter
icebp
pop
cmp
aaa
cmp
dec
mov
cwtl
movsl
lahf
push
jno
mov
sub
jo
and
movsl
inc
push
push
out
pop
lcall
lods
pop
mov
test
and
out
lock
popa
loop
daa
push
jp
xor
adc
in
out
adc
push
fcomps
push
or
cmp
popa
insb
or
add
les
inc
pop
daa
mov
popf
shll
inc
outsl
sar
insl
pop
lods
cld
inc
pop
and
xlat
icebp
into
cli
adc
movsl
jl
mov
setne
loope
or
inc
dec
data16
mov
aad
sahf
mov
aaa
cs
push
cmpsb
cmpsb
movsl
pushf
cwtl
pop
mov
inc
lock
icebp
sbb
mov
cmp
aaa
mov
mov
push
inc
bound
mov
repz
imul
enter
lds
cmp
scas
mov
cmpsb
xchg
aad
shlb
cmc
das
mov
xchg
jg
in
adc
inc
in
push
xor
mov
push
adc
jae
movsl
xor
aaa
sbb
in
xor
xchg
rorb
jnp
push
cwtl
dec
push
xor
repz
mov
jmp
mov
pushf
out
sbb
xor
push
ljmp
pop
xchg
shl
imul
aaa
cld
testl
je
push
popf
cmp
or
pusha
cmc
int3
push
jl
test
mov
lods
fdivp
outsl
push
cmp
pusha
outsb
xor
les
mov
inc
jmp
clc
add
rcrl
aam
dec
dec
mov
push
aad
pushf
dec
inc
and
xchg
std
ret
inc
in
std
or
test
adc
out
into
jmp
adc
cmp
imul
and
inc
xchg
push
fcomp
jl
inc
pusha
inc
lods
shl
xorb
or
ja
and
inc
xchg
mov
jl
mov
cs
xor
xor
and
adc
movsb
movsb
loopne
xchg
inc
leave
pop
mov
out
jmp
dec
dec
add
dec
cmp
mov
test
movsl
scas
adc
stos
int3
stos
push
fldt
mov
cvtpi2ps
xor
cld
ds
xchg
push
pop
cmp
in
ret
mov
push
mov
shlb
pop
sahf
inc
xor
xchg
mov
sbb
enter
dec
cmp
mov
push
sbb
jg
cmp
scas
int
push
or
insb
cmp
push
dec
sbb
mov
add
into
les
je
in
jns
adc
mov
jle
inc
sbb
in
stos
lcall
adc
push
imul
ja
out
push
xor
or
popa
adc
pop
jecxz
sub
or
cmp
das
out
mov
leave
add
loopne
into
mov
scas
imul
jg
gs
aam
fwait
mov
jmp
adc
cmpsl
jno
xor
test
sbb
cmp
pushl
dec
adc
mov
pop
in
add
incb
shr
add
adc
ret
push
xchg
cmp
mov
xor
mov
loope
repnz
lods
pop
and
addr16
fs
mov
jge
push
add
rolb
roll
add
adc
ja
sbb
ds
fisttpll
jl
mov
es
mov
lret
rolb
and
scas
or
cmp
loope
gs
arpl
cmpsl
std
or
push
es
pop
in
inc
sub
pop
test
test
std
inc
mov
push
xor
push
inc
xor
pop
aas
pop
xchg
inc
cli
in
lret
xchg
jo
nop
out
fdivrs
inc
mov
sahf
test
fdivs
out
push
fdivl
ret
push
add
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
jmp
push
gs
pop
out
dec
push
push
add
mov
and
and
dec
xor
and
and
lock
hlt
cmp
jne
xchg
xchg
mov
and
mov
inc
sbb
mov
adc
pop
dec
movsb
xchg
fcomp
lds
sbb
fcmovbe
fucomp
ds
roll
pop
mov
icebp
sti
sti
sub
mov
int3
inc
pop
and
add
cmc
mov
lods
lds
push
xor
outsb
fsubrs
lcall
xor
mov
lret
adc
pop
fs
in
jno
jae
fldcw
repnz
cmp
stc
movsb
sarb
xor
mov
mov
xor
out
mov
mov
jmp
and
out
mov
push
xchg
call
mov
outsb
and
faddl
dec
int
mov
cs
or
scas
cmp
fnsave
repnz
inc
stos
int3
out
lods
lea
push
cmp
add
scas
ret
jecxz
mov
adc
mov
test
test
inc
jb
int3
ret
jl
push
and
clc
rcr
mov
xchg
adc
mov
lock
mov
cli
sub
jns
mov
cwtl
les
inc
mov
add
dec
add
jmp
push
imul
xor
inc
in
push
dec
fmull
sbb
push
pop
orl
aad
shl
cltd
push
mov
xchg
jb
cmpsl
push
icebp
pop
test
or
push
sub
stos
dec
jmp
sarl
shll
or
loope
lods
daa
dec
lds
mov
ret
cld
out
mov
dec
push
addr16
clc
int
xor
mov
test
mov
ljmp
push
push
push
lahf
push
movsl
pop
fsts
cs
mov
sub
sbb
shlb
and
mov
arpl
aad
xor
arpl
jb
sub
jl
mov
or
ja
push
shll
push
lret
jecxz
xor
inc
jne
xlat
pop
notl
cwtl
shrb
pop
xor
inc
fcompl
test
fsts
xorb
out
mov
cmp
push
or
jmp
je
mov
xor
xor
push
pop
jns
ret
andb
sbb
cmp
lea
pop
push
stos
mov
test
enter
adc
test
adcb
inc
mov
mov
rolb
test
cmc
cmp
in
frstpm(287
shrl
mov
stc
push
mov
or
xchg
sub
and
mov
popa
push
bound
sahf
adc
mov
sub
or
mov
roll
xchg
cs
test
loopne
jnp
pop
xor
stos
ret
adc
mov
in
jmp
xchg
sub
and
pop
pop
dec
or
mov
xchg
fwait
mov
push
mov
mov
out
enter
jmp
jne
aam
mov
imul
out
fsubrs
pop
jne
mov
ror
xchg
call
insl
mov
add
mov
enter
pop
lds
aam
lods
xchg
pop
add
cltd
ss
pop
cmp
lods
xor
loop
rorb
xchg
sbb
scas
sub
push
xchg
insb
mov
fistl
add
imul
or
dec
popf
fmull
fwait
cmpsb
mov
shr
lahf
loop
dec
push
inc
xchg
movsb
push
dec
hlt
xchg
add
jl
dec
xor
xchg
push
flds
cltd
jne
out
addr16
cmc
push
jl
aam
jp
ds
sbb
inc
adc
sahf
and
mov
sbb
insb
jbe
sub
inc
loopne
out
cmp
or
mov
fstpl
sub
pop
xchg
pop
in
aad
ja
adc
jmp
imul
sub
test
mov
imul
mov
jb
pop
shrl
sub
es
arpl
jbe
outsb
and
or
jle
int3
dec
pop
push
adc
sbb
push
sub
sub
sar
jmp
mov
add
into
mov
dec
ljmp
mov
sub
pop
xor
hlt
loope
xor
lock
fstps
jp
or
sti
test
incb
aas
stos
adc
and
sub
jp
mov
sub
push
movl
xor
or
fisubs
and
jae
xlat
xchg
jae
jl
pop
jp
sub
mov
incb
outsl
data16
aaa
mov
sub
mov
cmp
push
hlt
cmp
inc
movsb
cwtl
rorb
adc
mov
jecxz
iret
inc
and
rclb
loope
xchg
pop
xor
push
push
cli
out
mov
and
mov
add
or
jae
xchg
ds
movsl
out
push
sub
pop
test
push
mov
jg
fbld
xchg
nop
pushf
mov
mov
enter
xchg
xlat
mov
cmpsb
daa
gs
mov
jo
scas
int3
push
ret
push
mov
lret
call
add
mov
arpl
outsl
mov
in
test
addr16
das
push
outsl
mov
mov
lds
fists
repnz
idivl
in
movb
cmp
mov
sbb
pop
dec
gs
dec
cli
in
inc
pop
mov
push
pop
dec
add
and
dec
xchg
or
rcrb
adc
je
popf
stos
mov
mov
dec
cmpb
mov
pop
xor
repz
mov
mov
push
gs
dec
rcrl
or
sub
add
repz
cmp
fsub
mov
jb
and
mov
mov
mov
mov
stos
cmp
je
rep
xchg
jmp
mov
das
cmp
jo
call
cld
js
xchg
hlt
rcrb
push
ljmp
jmp
jnp
enter
xchg
sub
outsb
movsb
ret
sbb
or
jge
mov
push
pop
mov
jmp
inc
xlat
sbb
fsubl
addr16
xchg
pop
cmovae
cld
into
movsb
movsb
popa
mov
negl
mov
movsl
mov
cmpsb
sub
test
jge
jmp
pop
pusha
int3
out
por
aas
testb
pop
ja
aaa
pushf
cmp
jo
dec
and
dec
or
pusha
mov
push
sbb
push
pop
jno
mov
jp
add
ret
or
push
subl
mov
dec
pushf
sti
cmpsb
mov
xor
mov
enter
js
in
icebp
test
xchg
int3
mov
inc
stos
and
xchg
call
test
cli
jb
jle
dec
js
loope
lds
xchg
and
jmp
sbb
push
adc
xchg
int3
xchg
nop
adc
and
jg
jp
test
pop
sahf
add
testb
pop
mov
shr
push
roll
call
mov
fisubrl
cmc
dec
inc
mov
jb
fcompl
mov
mov
ret
outsl
push
incb
sbb
mov
push
sub
pop
xor
mov
add
jnp
push
push
mov
jnp
je
inc
test
loopne
enter
loopne
pop
jl
outsl
xchg
cli
int3
push
mov
push
adc
jg
das
mov
pop
call
cld
daa
loopne
in
std
insb
pop
mov
out
cmpsb
sbbb
ret
push
daa
dec
mov
repnz
mov
add
repnz
das
ds
push
fcmovne
jle
rclb
mov
pop
dec
mov
pop
xor
and
lods
mov
lcall
cmpsb
xchg
inc
and
dec
jb
sbb
sub
add
xchg
jmp
sub
out
leave
clc
cs
fsubp
fidivrs
inc
mov
ds
xchg
and
in
cmpsb
push
push
push
inc
dec
xor
rcr
int
imul
js
leave
sub
data16
adc
jmp
or
xchg
in
xor
out
ljmp
out
std
pop
mov
cmp
push
add
xchg
mov
lret
ss
inc
jnp
sbb
fiadds
push
les
cmc
bsr
add
add
mov
negb
imul
cmp
mov
cmpsb
bound
imul
xor
prefetch
cmc
out
bound
sub
and
add
push
negb
hlt
test
sub
andl
mov
cld
jge
sbb
and
jo
sbb
push
into
dec
cs
lcall
nop
addl
daa
out
sbb
mov
stos
decl
sbb
cmp
mov
out
mov
pop
jmp
mov
xchg
or
loop
mov
pusha
mov
addl
mov
scas
pop
sti
add
fbld
pusha
sbb
pop
add
cmp
or
pop
cmpsb
repnz
imul
fnstenv
push
and
loopne
mov
mov
pop
out
mov
out
inc
ret
pop
lods
inc
push
and
push
or
aad
cmp
movsb
sahf
adc
in
push
scas
and
int3
add
and
add
mov
pop
dec
adc
pop
xchg
das
inc
fistps
xchg
and
xor
seto
inc
iret
cmpl
xor
push
jp
sbb
ds
fwait
xchg
cmp
jne
jns
jnp
adc
pop
xchg
cmpsl
loopne
xchg
push
out
outsb
loop
mov
stos
add
sbb
rol
pop
shrl
pusha
or
cmc
movsb
fnstcw
push
mov
call
out
popf
adc
mov
mov
clc
jg
sbb
rcll
dec
push
movsb
mov
popf
sub
push
jbe
xor
fnstcw
adc
and
cmp
sbb
out
subb
in
xchg
and
jp
jne
lahf
sarb
dec
es
mov
gs
fists
mov
push
xchg
fisttpll
fiaddl
idivb
cs
mov
xchg
inc
mov
mov
cmpsb
shll
inc
or
inc
shrb
cmp
loopne
adc
es
cmp
xlat
pop
or
inc
xlat
adc
mov
clc
test
inc
add
pop
mov
cmp
push
mov
dec
mov
mov
pop
mov
pop
test
lahf
call
cld
jnp
jecxz
faddl
fisttps
dec
adc
pop
fnstenv
pop
push
dec
in
jmp
pop
out
sti
dec
movsl
adc
xchg
xchg
push
daa
xchg
clc
loopne
adc
dec
aad
push
add
inc
inc
mov
pop
adc
pop
sbb
leave
add
movsl
jle
data16
and
jecxz
imul
xchg
lds
mov
imul
jmp
jg
mov
push
rorb
dec
test
mov
sbb
cltd
enter
adc
mul
call
nop
jl
xor
push
je
subl
ds
stos
dec
lea
jge
or
outsl
xchg
leave
pop
sub
test
daa
push
sub
and
test
shrl
xlat
inc
xchg
cltd
xchg
bound
or
xchg
stos
aas
in
fs
push
addr16
push
pop
xchg
xchg
jno
aas
adc
mov
movsb
aad
sub
mov
test
sub
fstl
jb
mov
mov
daa
xchg
pushl
je
xchg
lahf
or
and
xchg
fwait
dec
pop
fcomip
dec
lds
dec
pop
and
pop
imul
mov
inc
mov
aas
adc
add
mov
ljmp
call
lods
pop
imul
outsl
cs
xor
cwtl
imul
cmp
je
mov
dec
in
lods
adc
bound
sbb
xchg
cld
lea
jnp
inc
test
std
lret
lods
outsb
mov
cmpsb
leave
push
pop
or
dec
push
lods
jle
pop
mov
xor
xchg
cmp
loope
mov
xchg
xlat
push
cmpsl
clc
xor
lret
idivl
jl
mov
enter
icebp
mov
push
mov
xchg
and
xor
rcl
ja
sbb
mov
test
cmpsw
sbbl
xchg
push
sub
sbb
and
push
out
sarl
push
lret
xchg
shlb
push
mov
adcl
movsb
mov
or
cli
mov
push
lret
int3
scas
sti
std
xorb
jns
push
cmp
jmp
or
fcmovnbe
cmp
dec
push
repnz
out
data16
lahf
lret
cmc
mov
shl
lods
inc
test
aad
and
fldl
mov
icebp
ljmp
aas
sarl
adc
cmp
lcall
push
daa
xchg
icebp
add
mov
mov
jmp
fwait
shlb
push
aad
rcl
outsl
insl
fcmove
stc
enter
xchg
stos
repz
enter
sub
sub
das
jecxz
push
test
lea
jb
dec
lea
imul
movsl
adc
or
in
cmp
imul
xchg
xor
jecxz
imul
lods
add
test
outsb
and
pop
sbb
dec
dec
pusha
mov
push
sbb
or
adc
inc
insb
cld
mov
fwait
jbe
shrl
pop
xchg
rcl
jns
mov
fstpl
xor
add
insl
add
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
cmpl
jg
mov
add
jmp
pushl
call
push
jmp
addb
add
test
xchg
jno
jl
test
shlb
decb
jae
leave
mov
lea
sub
xor
mov
pop
lret
dec
fbstp
leave
pop
mov
imul
jae
mov
pop
xchg
jmp
das
jle
rorl
jmp
ret
xchg
jecxz
js
mov
or
or
lahf
jnp
jecxz
inc
or
divb
mul
cmpsb
insl
cmp
adc
arpl
or
addr16
loop
mov
dec
lcall
mov
ficomps
mov
popa
mov
jg
push
xchg
clc
in
nop
jge
out
pop
inc
leave
and
cmpsb
xor
filds
aad
pop
push
rcl
adc
push
enter
fsubs
pop
sbb
ja
jecxz
mov
aaa
ja
jo
lret
push
pop
and
daa
inc
stos
xchg
stc
xchg
int
fnsave
xchg
mov
cmpsb
fbstp
out
sub
or
push
adc
adc
or
cmpsb
xor
dec
jge
call
xchg
and
dec
jne
arpl
nop
nop
pop
dec
iret
incl
lcall
xchg
rcr
pushf
shll
jmp
sahf
jo
mov
dec
pop
pop
mov
test
lds
inc
ret
rep
sbb
sub
fcomp
shll
ds
sbb
stos
stc
repnz
into
cmp
pushf
sbb
mov
mov
push
into
add
xchg
mov
xchg
inc
adc
cmp
insb
mov
ds
and
dec
loope
repz
sbb
mov
inc
or
stc
out
pop
mov
lods
iret
ja
inc
stos
aad
adc
push
std
cmp
push
sbb
stos
lock
stos
fmull
dec
mov
outsl
xchg
mov
sahf
lret
fldl2t
xchg
xchg
fidivl
pop
mov
and
sub
xchg
inc
repnz
push
jge
pop
push
or
loopne
jb
les
sub
dec
pop
adc
mov
and
inc
push
push
push
lcall
pop
xchg
loope
or
jmp
xor
pop
xchg
lea
pop
or
add
pusha
pusha
push
outsb
cmpsl
sar
push
dec
jnp
popl
stc
jl
cmp
ds
shll
jbe
outsl
jge
mov
cld
jmp
and
in
xchg
negb
mov
lcall
sarb
dec
fidivrs
mov
jno
fbld
lret
in
xchg
xchg
xor
das
push
cltd
popa
push
jmp
mov
aam
iret
mov
scas
add
sub
lods
push
ds
xchg
shll
movsl
mov
sbb
dec
fnsave
jl
xchg
lret
jle
fnsave
mov
int3
cld
in
inc
dec
jne
cwtl
adc
adc
fnstcw
mov
xor
xchg
aam
or
sbbl
mov
mov
insl
outsl
test
shr
rep
idivl
jle
xor
xor
push
es
sbb
out
or
dec
mov
pop
sub
in
jmp
dec
fucom
sti
stc
pop
xor
jbe
imul
movsl
test
cltd
mov
dec
push
into
lods
inc
mov
outsb
test
mov
jnp
rclb
movsb
pop
pop
stos
stos
add
push
dec
rclb
adc
mov
aam
pushf
shlb
int3
lods
push
pop
or
lret
sub
stc
mov
fdivrl
andl
push
aad
inc
jno
imul
xor
aas
lds
shrl
int
cmpl
add
push
pop
ror
movsl
add
pop
mov
xor
test
lock
xchg
mov
into
lds
pop
jns
ficoms
sub
mov
loop
xor
outsl
jnp
insl
inc
fwait
lock
icebp
mov
stos
adc
es
in
gs
inc
xor
jae
aaa
lea
jno
xor
jb
push
shll
imul
subl
push
aam
pop
xor
mov
xchg
sbb
mov
jo
jecxz
ljmp
sahf
mov
movb
pushl
add
mov
pop
push
es
fwait
out
mov
insb
pop
add
xor
cli
scas
lret
arpl
mov
pop
call
pushf
xor
xchg
jb
fs
push
and
ret
or
push
dec
js
push
pop
dec
into
jmp
fcmove
sahf
push
std
inc
jmp
dec
pusha
loopne
decl
xchg
sbbb
iret
orl
inc
adc
imul
mov
jg
insb
into
fdivs
pop
cmp
or
sbb
sahf
aam
stc
stos
or
cwtl
fdivs
js
orl
or
insl
nop
pop
or
nopl
aad
cmpsb
lds
cmp
popa
inc
cmp
iret
fadd
xor
mov
sub
sarb
shld
pop
or
sub
push
ja
or
mov
loopne
aad
gs
lret
xchg
sbb
mov
lcall
xchg
dec
loopne
repz
pop
sub
jae
jmp
fdivs
popa
enter
lcall
add
cmc
add
jecxz
iret
out
cmp
arpl
or
sbb
std
repz
sbb
arpl
mov
cmpsl
jno
jns
jne
in
lds
aam
adc
push
insl
jmp
cld
test
xor
jae
push
mov
imul
push
sbb
cmp
inc
hlt
loope
fnstsw
mov
mov
scas
push
out
fs
and
aam
jmp
sbb
sar
push
jo
cs
sahf
imul
pop
lret
punpckhwd
jle
leave
mov
push
mov
sbb
push
push
jbe
sub
and
test
push
mov
pop
sbb
lods
mov
adc
in
outsb
sbb
lods
not
aaa
mov
es
in
mov
mov
aas
repz
test
pop
inc
lret
mov
push
jecxz
xor
add
aad
push
inc
sub
add
xor
in
pop
or
cmpsb
imul
sub
cmp
mov
lods
xchg
out
inc
mov
mov
out
inc
cmpsb
jmp
imul
jl
fs
jns
lock
das
repz
sub
in
insb
lea
fcoml
mov
cli
mov
outsb
jmp
sub
mov
fldcw
test
fnstenv
lcall
xchg
clc
addb
fldenv
inc
stos
aad
xor
jg
mov
dec
dec
xchg
push
mov
test
mov
inc
push
inc
dec
scas
add
ret
rol
mov
and
jmp
adc
pop
xorb
loop
es
aaa
rolb
lret
sbb
sbb
aas
push
lret
lods
mov
mov
mov
addr16
push
push
mov
mov
cmpl
jge
movzbl
add
adc
jmp
push
push
push
pushl
call
shrd
jmp
outsb
fwait
push
movsl
or
movsb
js
jae
mov
jbe
jno
dec
data16
je
jle
icebp
insl
andl
rcll
sub
mov
loopne
pop
xchg
mov
outsl
push
add
push
icebp
mov
mov
fcoml
popa
mov
fidivs
sbb
adc
xor
dec
fdiv
popf
data16
sub
add
inc
sub
mov
sbb
dec
mov
in
cmc
and
lcall
and
jne
mov
idivb
mov
cld
sbb
fildl
cmp
sub
xchg
mov
repnz
arpl
mov
or
pop
or
xlat
ficomps
cmp
arpl
addr16
mul
xchg
cmpsl
sbb
sub
sub
jge
aaa
cmpsb
mov
pop
aam
jns
push
xor
inc
idivl
test
out
aad
jecxz
sub
popa
jg
lock
imul
push
hlt
sub
icebp
xor
loopne
pop
push
cld
in
mov
sub
inc
xchg
xchg
dec
int3
and
mov
das
mov
sub
pop
pop
sahf
addb
mov
jmp
jno
dec
push
cmpsl
fnsave
mov
push
pop
clc
stos
rep
cwtl
push
pop
xor
mov
andb
stos
loope
or
xor
xor
imul
xchg
in
das
push
jmp
in
and
sti
push
imul
push
add
es
and
out
add
dec
add
jae
cmp
mov
out
cmp
gs
repnz
adc
mov
lds
dec
jae
loopne
jns
xchg
cmp
sbb
xchg
add
data16
test
out
cmc
dec
subb
xor
fisubrl
mov
data16
aas
push
in
lcall
outsl
push
enter
or
ja
int
addl
popf
jno
outsl
loope
maxps
bound
inc
mov
lea
cmc
rcll
rclb
sub
dec
in
adc
xchg
lods
jo
jae
out
js
adcl
or
mov
push
popf
and
push
stos
cld
push
pop
xor
sbb
adc
sahf
mov
inc
shlb
popa
ja
dec
dec
sub
sti
hlt
bound
icebp
leave
xor
cltd
add
int
and
mov
mov
jmp
jb
in
int
xor
popf
mov
fsubrp
ret
jmp
decl
push
mov
adc
test
xor
mov
xchg
mov
pop
mov
sarb
mov
dec
push
call
mov
xor
cmpsl
pop
jge
jb
push
aaa
push
sub
xchg
leave
ljmp
mov
xchg
call
cmpsb
xor
pop
fsubrs
fsubr
or
and
lret
push
cmc
outsb
mov
jg
movsb
scas
fimull
mov
cmp
ret
xchg
enter
cs
in
jecxz
or
mov
out
mov
in
sahf
sub
add
jg
inc
clc
mov
pop
pop
pop
pusha
js
dec
cmpsl
mov
imul
in
mov
call
arpl
mov
repz
add
mov
in
inc
loopne
or
mov
mov
aaa
decb
mov
pop
stos
add
add
sbb
jnp
into
push
inc
and
repnz
add
lret
inc
sub
cs
xchg
lcall
jno
in
imul
jg
fsubr
sub
stos
test
cli
push
insb
out
ja
rolb
ss
subb
or
fstpt
fistpll
jmp
fsubrs
inc
and
cmp
call
sti
dec
cmp
inc
adc
mov
cld
cmp
loopne
mov
cmp
cmpsb
mov
mov
stc
in
pushf
xorl
rolb
fwait
dec
ljmp
push
dec
jmp
inc
subl
mov
xchg
daa
jg
sub
mov
push
adc
push
jbe
inc
pop
scas
loope
mov
stos
inc
fwait
or
cmpl
hlt
xchg
aad
mov
mov
arpl
xchg
xor
pusha
mov
fisubl
js
or
int
xor
xlat
adc
dec
cs
les
outsb
sub
rcrb
xchg
ret
sbb
call
cltd
cmp
aaa
ret
mull
push
stos
imul
fildll
arpl
ret
pop
xchg
mov
mov
sbb
out
imul
cmp
lret
mov
push
daa
add
loop
leave
mov
cli
fiaddl
movsl
ds
cld
rcr
xchg
fs
rcr
xchg
mov
sti
xchg
or
outsl
lahf
adc
mov
in
int
stos
mov
lods
add
cmp
insb
sysret
cltd
pop
dec
push
mov
mov
jge
hlt
iret
push
or
inc
xor
test
cmp
stos
cmpsb
mov
push
into
test
out
inc
cli
push
pop
jmp
push
xlat
sti
mov
mov
ljmp
pop
outsl
pop
jns
testl
push
xor
scas
fdivl
ds
and
mul
adc
sub
ret
mov
rorb
mov
loope
andb
roll
sbb
xor
lcall
cmp
fcomi
out
inc
xchg
ret
add
cmp
repnz
or
adc
ss
xor
mov
enter
push
popf
into
stos
mov
fsincos
std
xor
inc
cmp
jecxz
loope
cld
fldcw
inc
imul
sahf
ret
xor
jno
ret
jp
fistpl
into
mov
fimull
imul
mov
jno
js
cmp
xchg
sar
ffreep
mov
adcb
cltd
js
shll
push
pop
pop
and
mov
insb
scas
push
lret
inc
repnz
testb
dec
add
insb
fsubr
xor
pop
xchg
scas
into
icebp
inc
xchg
push
clc
cmp
cmpsb
add
or
pop
push
mov
cld
inc
mov
pop
dec
xor
enter
adc
fidivrl
cmp
and
ss
test
sarb
pop
cltd
push
cmpsb
mov
and
shrl
xchg
xchg
cltd
pop
cmp
push
mov
out
rcrb
repz
xchg
in
rclb
in
movsl
js
in
sub
hlt
ss
outsb
pop
or
in
push
cmp
cmp
jle
enter
pop
mov
ss
imul
jae
out
das
push
xor
mov
sub
push
sub
popf
mov
js
iret
aaa
xchg
mov
dec
imulb
ret
stc
mov
lret
xor
mov
lret
pop
xlat
sbb
mov
in
mov
or
jecxz
fstpt
insb
fbld
push
inc
sbb
cli
stos
loop
mov
sahf
call
or
shr
mov
mov
adc
xor
and
mov
sbb
xor
sbbl
or
mov
sub
mov
mov
subl
shl
mov
and
mov
mov
shrd
movl
xor
addl
shr
mov
mov
sbb
mov
mov
mov
mov
sub
sub
xor
decl
or
orl
jmp
cli
int
lahf
push
or
inc
cmpsb
ss
jne
mov
addl
imul
inc
loop
shr
mov
test
rorb
adc
cmpl
cmp
cmp
lahf
lret
sub
mov
ds
ja
add
pop
jb
push
fldl
inc
inc
mov
pop
out
mov
mov
sub
add
sub
xchg
fimuls
cmovnp
jne
xor
testl
jg
push
mov
sub
outsl
mov
xchg
jbe
or
cmc
mov
arpl
dec
xchg
jle
aas
mov
jb
cmp
cmp
ljmp
mov
leave
mov
iret
jp
dec
sti
imul
movsb
mov
xchg
pop
mov
test
sub
xchg
enter
mov
mov
arpl
pop
sbb
xchg
and
dec
mov
scas
cwtl
mulb
cmp
push
daa
and
lea
mov
lret
sahf
fmuls
pop
rcr
shrb
and
ljmp
mov
xor
mov
add
push
shlb
pushf
sahf
pop
daa
rorl
push
into
fisttpl
mov
pop
ja
sbb
adc
out
cmp
cld
lods
xchg
cld
pop
fisubs
sub
add
mov
in
dec
cmc
sbbl
xchg
dec
fisubl
cmp
insl
adc
jg
add
push
jb
popf
jnp
mov
inc
fisubrl
inc
dec
lahf
push
popa
add
dec
jae
loopne
adc
inc
ror
jne
adc
adc
test
mov
ljmp
and
out
mov
stc
and
inc
mov
aaa
cmp
and
cmpl
incb
leave
imul
popa
jbe
jno
lods
cmp
cmp
push
lods
das
stc
ds
pop
shr
add
cmp
rcrb
inc
or
mov
outsl
or
insl
icebp
xor
push
pop
mov
jbe
int3
push
push
out
inc
pop
push
xchg
mov
lret
inc
jmp
add
and
cli
sub
mov
scas
mov
lods
mov
sarl
dec
mov
mov
test
ljmp
fdivrl
sbb
cmp
scas
in
xchg
shrd
xor
mov
iret
adc
mov
mov
push
or
popa
sahf
xor
shll
mov
iret
icebp
mov
mov
mov
or
and
xor
and
nop
add
mov
stc
addr16
adc
sub
jno
mov
adc
xor
pop
mov
and
gs
pusha
and
mov
je
out
cmp
test
rcrl
dec
shrb
lcall
adc
popf
iret
cmp
xchg
dec
loop
mov
pop
dec
jae
daa
das
mov
jb
test
mov
pop
cmp
add
xchg
and
mov
rorb
pop
in
jno
xchg
ljmp
inc
and
iret
push
movsb
add
jnp
cmp
sub
adc
cmp
xchg
push
mov
andl
imul
aam
fbstp
sbb
mov
movsb
add
push
rep
cmc
xor
stc
jns
aad
hlt
notl
push
mov
and
fldt
lahf
mov
push
in
dec
push
aad
add
push
stc
ror
and
mov
lahf
inc
add
inc
adc
pop
mov
aas
push
fsubl
or
repz
out
adc
sarb
mov
les
popa
jle
rorb
push
cmp
cltd
add
popf
stos
sti
out
xchg
mov
pusha
lcall
mov
ja
and
jo
int
push
cltd
es
lret
cmp
sbb
into
mov
or
lock
shlb
or
das
fsub
cmpl
test
aad
push
or
push
xor
sar
ja
insb
cmpsb
xor
mov
xchg
dec
fiaddl
shrl
rcll
data16
fstps
jae
in
xchg
mov
es
into
add
mov
sbb
stc
mov
inc
bound
push
test
test
imul
enter
ljmp
cmp
decl
dec
lret
aad
dec
push
popf
pop
dec
pop
cmp
inc
jo
mov
lret
pushf
xchg
loopne
lods
les
pop
sahf
add
out
adc
ja
jne
and
pushf
xchg
testb
add
xchg
mov
add
mov
enter
int
xchg
mov
jbe
dec
arpl
lret
dec
imul
xchg
add
dec
stos
cmc
cld
sub
dec
sbb
push
xchg
cmp
mov
xchg
fdivp
dec
aas
pop
or
mov
sbb
clc
fimuls
jge
mov
into
addb
fdivrs
xor
dec
mov
imul
cmpsb
mov
xchg
mov
clc
rorl
or
fbstp
test
xchg
insb
lret
adc
jns
int
rclb
and
push
call
rorb
pop
out
mov
shrb
les
dec
loope
gs
push
scas
imul
int
addr16
repnz
nop
dec
add
out
push
and
ret
jne
lahf
xchg
fucom
fidivrl
sarb
ror
or
adc
xor
mov
mov
mov
sarl
into
pushf
sub
repnz
push
pop
pop
cltd
push
daa
jecxz
dec
inc
cmp
ret
push
jge
pop
push
mov
dec
mov
in
pop
daa
lock
dec
cmpsl
push
jns
cmp
add
shrl
jmp
mov
fimull
sub
sub
in
cmp
pop
sub
ret
inc
jne
jecxz
jns
push
aaa
xchg
jns
add
mov
mov
pusha
or
sahf
push
mov
mov
sbb
out
fdivrs
dec
inc
jg
xor
repz
xchg
sbb
out
insl
jbe
adc
andb
cli
std
xchg
pusha
repz
or
mov
sub
sarb
sub
pop
adc
jmp
test
jno
pop
fstpl
lahf
or
xor
lea
addr16
ret
mov
xchg
adc
inc
xchg
mov
popa
dec
test
test
lcall
inc
xchg
push
or
and
insb
inc
bound
movsb
das
dec
xchg
cmpsl
pop
ss
sub
dec
addr16
sub
sbb
std
std
aam
add
dec
roll
cmp
xor
rcrl
sub
shl
lods
add
aam
loopne
in
icebp
dec
cmp
loop
push
ss
xor
jg
add
sbb
fistpl
and
pop
clc
lea
daa
mov
or
scas
in
cs
mov
ret
jns
pop
or
fdivrl
fcomi
mov
insb
dec
lretw
cmp
incl
sbb
mov
xor
or
mov
adc
mov
jmp
movsb
dec
dec
jo
gs
adc
push
int3
xchg
lcall
addl
push
std
sbb
xor
jb
mov
inc
sub
pusha
mov
aas
outsl
pushf
movsl
mov
mov
mov
sbbl
xor
arpl
xor
ds
dec
jnp
pcmpgtd
xchg
cmp
into
sar
push
call
inc
jle
cmp
xchg
jecxz
mov
mov
cltd
sbb
mov
pop
iret
xor
lret
out
fisttpl
push
lods
xor
lods
push
insl
sub
testl
adc
lods
push
jle
mov
cltd
mov
inc
movsb
cwtl
cmp
jmp
aas
mov
jo
push
dec
cmp
jnp
cmpb
shrb
push
dec
sbb
push
mov
incb
adcb
pop
into
push
push
movsb
jg
ret
lcall
mov
xchg
mov
in
sub
test
repnz
mov
mov
int3
cmp
dec
xor
add
jo
idivl
test
cmpl
mov
xor
adc
popf
clc
jge
loop
sbbl
loope
adcl
dec
inc
loopne
jbe
push
out
mov
push
adc
mov
outsl
sbb
nop
cltd
xor
test
pop
movsl
fdivr
add
add
fwait
test
sbb
push
stos
out
pop
rolb
dec
loope
ret
mov
ds
pop
add
push
push
insb
rolb
xchg
dec
mov
sbb
fcomps
dec
or
jae
mov
mov
cmp
cmp
dec
shl
xor
test
xor
iret
lods
outsb
out
and
pushf
pushf
mov
pop
stc
or
jmp
inc
cmp
jnp
fdivs
cmpsb
icebp
sub
mov
subl
nop
sub
xor
cmp
mov
cmp
inc
lret
stos
jno
jmp
lock
test
outsl
dec
outsb
rorb
adc
popf
fiaddl
cmp
or
pop
or
adc
les
test
sub
dec
mov
push
xlat
test
fisttpl
pop
orl
push
pop
and
or
jns
fwait
mov
cs
fisubl
xchg
dec
mov
push
cmpsl
cli
add
scas
xor
pop
das
fwait
mov
repnz
mov
cmc
and
or
inc
cli
cmp
sti
outsl
lahf
rcl
pop
outsl
mov
mov
jmp
jb
insb
std
hlt
daa
loopne
and
mov
or
xrstor
inc
lds
fldt
insb
jno
negl
ret
mov
daa
bound
add
jecxz
push
push
add
or
cmp
push
cmpsb
aad
and
jo
in
popf
cltd
sbbl
fistps
or
aaa
shld
inc
enter
push
addr16
dec
int
outsl
sbb
aaa
xor
mov
into
jle
aas
and
inc
inc
push
movsl
jns
stos
int
push
pop
negl
jb
mov
xchg
cs
lahf
sub
xchg
sub
xor
mov
inc
jl
fstpl
push
mov
imul
lea
push
movsl
ds
inc
imulb
fadds
lret
push
xchg
jg
test
jg
ret
stos
lret
and
repnz
mov
mov
sub
pop
dec
cmpsl
and
mov
in
sub
push
adc
mov
xchg
popa
shlb
fsubrp
test
jmp
fildll
mov
add
sub
cld
sub
int
mov
outsl
sahf
test
dec
xchg
push
push
dec
fwait
test
insl
in
mov
sub
sbb
mull
xchg
nop
mov
sbb
insb
cmpsl
sbb
pop
adc
dec
aad
xor
lahf
fnsetpm(287
mov
or
popf
cmp
adc
push
xor
out
js
imul
aad
pop
mov
shl
scas
push
rclb
push
mov
cmp
and
ret
js
scas
repnz
imull
icebp
push
repz
test
push
push
jno
mov
movsl
sbb
pop
jle
loopne
mov
pop
test
mov
mov
pop
shll
lock
jb
scas
cmp
shlb
xor
cltd
or
cmp
testb
out
xlat
int
jne
cmp
inc
mov
pop
aaa
pusha
loop
mov
lods
cmp
cmp
sbb
or
pop
lods
inc
stc
int
arpl
inc
add
ds
mov
sti
and
leave
dec
xchg
mov
leave
inc
inc
imul
fmul
cltd
or
lahf
outsb
dec
jle
adc
repz
inc
push
mov
jb
dec
push
add
pop
test
leave
sbb
cmp
in
and
cwtl
es
mov
push
fdivs
or
push
addr16
lock
imul
mov
or
test
lcall
popf
dec
cmp
stos
xchg
hlt
rorb
adc
adc
cmp
or
iret
mov
xchg
and
and
addb
jb
lcall
into
cmpsl
es
mov
ds
idiv
jmp
in
push
out
add
pop
xchg
mov
sub
push
cmp
sub
jae
fxch
pop
in
sub
cli
and
xchg
inc
ds
push
bound
jae
sub
popf
cmp
enter
jne
lods
xchg
xchg
xchg
xchg
loop
cmp
or
repz
insb
inc
mov
sub
gs
out
sahf
in
popa
out
xchg
push
mov
aaa
mov
mov
out
jmp
mov
push
mov
aad
mov
in
add
lds
adc
mov
xchg
inc
pop
imul
pop
nop
iret
mov
pop
lock
adc
int
mov
sub
bound
addr16
lret
movsl
clc
nop
stc
aaa
cmpsl
gs
cmpsb
out
dec
sbb
das
xchg
or
out
mov
jb
cmp
push
xchg
into
jge
push
push
hlt
cmp
sub
cmpsl
and
inc
or
cs
add
dec
dec
out
mov
pop
iret
xchg
sub
mov
push
out
leave
in
lods
inc
lahf
sub
popa
lret
xor
nop
or
ss
popa
push
sub
adc
ret
inc
sbb
fucomip
pop
test
shr
jnp
test
cltd
movsl
and
out
xor
mov
icebp
iret
inc
push
in
fimull
jb
dec
xor
cmp
sbb
ret
adc
fnstenv
out
sarl
or
cli
roll
aaa
push
pop
jo
jle
ret
shrb
sbb
adc
daa
mov
jmp
lcall
adc
lds
jge
mov
mov
lock
pop
xor
mov
fwait
mov
or
inc
bound
push
pop
lret
repz
arpl
and
adc
mov
cmpl
jl
subl
jmp
pushl
pushl
call
mov
mov
mov
mov
mov
mov
shl
xor
shld
cmpl
jg
dec
jmp
pushl
call
shl
mov
xor
xor
movl
movl
movl
cmp
movl
jne
movl
cmp
je
subl
mov
mov
cmpl
jg
add
jmp
pushl
push
pushl
push
push
push
push
pushl
call
mov
mov
xor
shld
shl
xor
addl
xor
movl
cmp
movl
jne
cmp
je
mov
mov
shl
mov
xor
movl
shr
or
sbb
mov
cmpl
ja
and
jmp
push
push
pushl
call
mov
mov
mov
mov
mov
jmp
bound
clc
xchg
xor
xchg
outsl
inc
adc
addl
std
fimull
test
pop
or
repnz
mov
sub
daa
in
adc
inc
lock
test
push
mov
movl
pop
test
jb
imul
nop
xchg
dec
push
lret
lahf
sbb
push
jae
cmp
gs
sti
out
push
inc
frstpm(287
int3
stc
push
mov
cmp
and
add
mov
pushf
ja
dec
mov
mov
gs
out
mov
mov
cmp
mov
aas
cwtl
add
sub
push
rcrb
subb
sti
cwtl
lods
mov
fisttpl
and
dec
fnstenv
daa
sbb
std
mov
shl
mov
push
addl
insb
jbe
test
jp
jle
fwait
cmp
push
shrb
xor
jg
xchg
sti
in
fcoms
sbb
stos
pusha
ss
cli
push
push
mov
mov
enter
fcmovu
xor
mov
int3
mov
mov
sub
aaa
lds
fwait
xor
das
inc
es
shlb
cmp
lds
add
push
push
sahf
dec
popf
arpl
mov
sub
out
out
pushf
rorb
movsl
inc
insl
dec
int3
adc
xchg
pop
call
ja
xor
std
fsts
negb
dec
lret
xchg
and
dec
adcb
aaa
mov
xchg
les
pop
sub
cmpsl
dec
xchg
bound
push
xchg
add
cmp
xor
enter
stos
sbb
aas
ja
adc
stos
mov
loope
daa
mov
lods
mov
enter
in
in
and
add
gs
sbbb
cs
movsl
xchg
cmp
arpl
mov
push
xchg
loope
outsl
test
jmp
add
daa
clts
sbb
outsb
inc
sub
or
xor
xchg
out
cmp
loop
outsl
xchg
ret
mov
jp
xchg
fcoml
outsl
mov
adc
fst
je
jg
mov
fdivrs
or
jle
loopne
sbb
push
ljmp
mov
incb
inc
or
mov
jb
xchg
or
fsubl
xchg
daa
into
pop
mov
pop
das
jmp
mov
std
imul
ja
jg
adc
cltd
adc
fdivl
nop
fwait
ret
lock
test
mov
pop
sbb
cltd
addb
ja
notl
dec
cmp
or
data16
icebp
sbb
scas
push
data16
mov
xor
sub
repnz
pop
mov
std
je
cmp
in
or
aas
test
pusha
in
jmp
jg
mov
or
jmp
jecxz
jb
in
xor
imul
hlt
dec
lret
and
and
lcall
push
cmp
stc
icebp
inc
pop
mov
mul
in
lret
std
lret
mov
negb
mov
mov
fisubs
add
jnp
mov
cmp
dec
mov
or
outsl
inc
push
adc
xchg
lret
fneni(8087
add
hlt
xor
adc
enter
mov
or
fistl
xor
push
and
leave
movb
sahf
mov
inc
in
push
mov
cltd
inc
cltd
enter
dec
popf
mov
lret
dec
fildl
sbb
and
out
es
outsl
loope
push
out
inc
loop
data16
xor
sti
mov
or
gs
dec
test
or
mov
sub
dec
divb
push
mov
out
mov
addr16
jp
xchg
popa
sub
mov
dec
daa
sub
jo
ret
into
push
sbb
jge
jb
ja
sbb
jae
and
xchg
fmull
ret
lods
pop
scas
adc
dec
mov
sbb
out
ljmp
dec
fimuls
das
push
dec
add
xor
mov
pusha
mov
in
fistpll
mov
cmp
jbe
fdivrl
push
cmp
dec
outsl
or
sbb
mov
rcl
aam
sub
or
iret
test
pop
xchg
cmp
mov
push
sbb
mov
pop
ja
cmp
jb
pop
inc
js
adc
xchg
xchg
pop
sub
xchg
sti
dec
aam
shll
sbb
addr16
push
cmc
dec
pop
jl
mov
add
sub
xor
outsl
mov
adc
test
mov
jne
sub
pop
lret
xor
pop
popf
adc
pop
jno
andl
nop
mov
xchg
jmp
mov
mov
push
cld
pop
mov
push
xlat
adc
iret
in
push
lret
push
rol
jge
add
cwtl
ja
sub
int3
lea
pop
in
in
vmovups
daa
lds
cmp
cmp
sub
in
dec
mov
negl
cmp
sub
addl
out
push
scas
jno
mov
mov
sub
repnz
stc
add
mov
mov
adc
cltd
rorb
call
dec
cmp
cmc
fnsave
addb
cwtl
mov
xchg
lcall
push
xchg
mov
pop
xlat
mov
mov
out
mov
orl
int3
cmp
pop
mov
mov
pushl
pop
pop
rcr
test
jno
test
mov
testb
sub
cmpsb
and
fisttpl
test
aam
adc
xor
xchg
adc
and
add
or
enter
jbe
incl
fcoml
sahf
mov
add
cwtl
jl
mov
and
xchg
movsb
leave
mov
lcall
or
nop
jmp
ja
out
test
fnstenv
add
mov
xchg
mov
std
sub
xor
pop
movl
mov
mov
rclb
xchg
mov
ret
icebp
jno
mov
xor
int
or
xchg
loop
or
test
adc
xchg
xor
pop
loop
xchg
test
mov
movsl
aam
pop
leave
push
pop
aas
shrb
jmp
xchg
xor
repnz
mov
aaa
sub
lods
adc
imul
aam
push
fs
test
int
push
jo
and
push
out
xor
es
pop
cwtl
xchg
rcl
pop
mov
xchg
sub
clc
insl
lret
incl
fwait
push
in
imul
mov
cmp
into
and
dec
nop
mov
sub
shrb
dec
xlat
test
xor
stos
mov
adc
test
xchg
or
enter
add
sbb
pop
xorl
sub
mov
add
mov
lea
mov
xor
mov
mov
mov
adc
jmp
fbld
and
repz
mov
adc
addl
pushf
sbb
mov
repz
xchg
imul
outsl
mov
and
cs
pusha
repz
or
jmp
cmpsb
sbb
repz
pop
dec
js
rcrb
fildll
mov
xchg
inc
cmc
lret
mov
push
xor
push
push
rcrb
sub
jns
outsl
sbb
pusha
jecxz
fsubs
bound
dec
jp
inc
xchg
xor
add
fwait
icebp
test
enter
jecxz
jb
pop
into
sbb
popa
es
jecxz
jb
mov
jnp
in
mov
shlb
enter
icebp
or
cmp
into
ss
adc
jo
pop
ljmp
lods
and
xlat
imulb
sbb
repz
push
jo
cltd
es
pop
add
and
fmull
mov
outsl
fsubs
shrl
pop
mov
xadd
xchg
jmp
mov
stos
rorb
in
ds
mov
add
adc
sbb
fsts
cmp
mov
into
pop
mov
movsb
adc
xor
add
xchg
jbe
leave
mov
dec
sub
jl
push
adcl
loopne,pt
mov
cmp
sbb
rcll
call
pusha
sti
dec
dec
loope
xchg
or
jb
push
fwait
ja
and
mov
clc
xchg
popa
out
nop
orb
adc
rclb
out
addr16
fdiv
fisttps
push
mov
and
rorb
mov
xchg
fiadds
ja
std
pop
es
rorb
gs
shl
icebp
add
jae
mov
jne
sbb
xor
xor
je
ret
cmpsl
fldcw
scas
das
ss
pop
mov
fidivrs
rorl
jmp
nop
mov
inc
out
and
enter
insl
sub
dec
dec
lret
cltd
aaa
rcr
outsb
mov
sbb
orl
adc
fcoms
shll
test
jbe
aaa
inc
lock
mov
and
addr16
jecxz
outsl
ljmp
cmp
cld
pusha
mov
in
dec
adc
in
mov
pop
pop
lahf
pop
int3
iret
xchg
outsb
mov
dec
je
stos
xor
mov
loope
aad
mov
cmp
pop
sbb
or
mov
sub
add
test
roll
sbb
test
jae
add
dec
in
aam
and
mov
and
vaddps
sbb
insl
lock
js
cmpsl
mov
jae
dec
popa
push
mov
std
insb
add
mov
mov
jg
mov
cmp
leave
pushf
movsl
fnstenv
into
insl
jnp
ja
pop
push
arpl
mov
mov
xchg
test
icebp
push
dec
inc
inc
inc
or
pusha
cmp
outsb
pop
inc
stos
jo
mov
fwait
pop
es
gs
icebp
mov
xchg
and
add
movd
js
leave
test
imul
and
test
es
mov
imul
cmp
stos
cli
scas
hlt
pop
mov
add
es
orl
cmp
push
push
jle
movsb
add
push
sbb
je
inc
jbe
and
sbb
pop
jg
dec
es
lds
dec
les
gs
cmp
inc
hlt
int
jp
push
add
mov
push
jle
mov
sub
dec
ss
lea
clc
daa
mov
pop
aad
xchg
scas
or
loopne
or
xchg
mov
jg
push
add
orl
or
shll
gs
mov
add
jns,pt
sbb
stos
test
rorb
jmp
rclb
pop
test
pop
stos
movsl
fwait
in
stos
ja
mov
test
mov
repz
jnp
and
addb
mov
xchg
int3
cmp
pop
cmc
and
sbb
imul
xchg
jno
cmc
sbb
jp
xchg
add
arpl
cmp
adc
gs
mov
cmpb
inc
xchg
in
repnz
inc
stos
in
loop
into
shll
stos
aaa
mov
and
push
in
popa
nop
jnp
sub
xchg
mov
stos
lds
push
les
xor
fstpl
and
into
lds
pop
ret
loope
mov
push
in
sarb
les
push
adc
das
lods
push
out
insb
inc
outsl
jp
sub
adc
sbb
andl
addr16
jp
jp
jmp
xchg
push
negl
push
lock
shlb
xchg
jne
jl
cmp
aad
out
jp
mov
add
negb
jge
fs
cld
ficoms
fs
pop
pop
inc
iret
cmp
in
enter
inc
shrb
dec
fbld
mov
xchg
fldl
sbb
imul
cltd
mov
xor
mov
dec
es
xchg
ss
ret
fsts
add
neg
mov
or
mov
sbb
xchg
ret
push
and
daa
mov
mov
mov
daa
push
push
ret
roll
js
pop
add
mov
xchg
mov
dec
aaa
inc
mov
mov
jmp
adc
arpl
inc
cmp
sti
push
fisubs
xchg
adc
xchg
ret
sbb
fs
outsl
xchg
mov
add
mov
xor
mov
data16
jecxz
push
xchg
jns
mov
mov
arpl
xchg
repz
lret
lock
push
xor
daa
sbb
inc
icebp
mov
mov
mov
cltd
mov
imul
mov
adc
hlt
fisubrs
lahf
inc
cmp
adc
xchg
in
xlat
cmp
cmp
and
adc
jno
test
mov
call
sub
test
push
and
out
add
or
xor
jo
ret
jo
dec
add
scas
iret
ljmp
loope
out
or
dec
fcomps
int3
add
in
push
mov
aas
stc
lock
bound
push
sbb
in
ss
sete
jae
iret
shrl
cmc
imull
cli
xchg
frstor
call
xchg
adc
fs
push
lds
les
mov
movsl
dec
push
jnp
and
pop
or
fldl
call
cld
push
leave
je
int3
lock
sarl
sub
clc
push
imul
lcall
xor
data16
jbe
xor
fidivrl
repnz
ljmp
dec
insl
lea
mov
addr16
rol
lock
xchg
cwtl
inc
xchg
pop
mov
outsl
enter
xor
mov
stos
cmp
dec
cld
orl
xor
orl
shr
xorl
shl
adcl
or
movzbl
sbb
mov
mov
mov
and
movl
sub
mov
neg
mov
xor
shr
negl
shl
or
subl
push
lea
sbbl
push
lea
orl
push
call
and
mov
cmpl
jb
jmp
push
push
pushl
pushl
call
mov
xor
shr
shl
or
push
lea
push
mov
sub
mov
shrd
shr
cmpl
jg
xor
add
mov
sub
imul
jmp
push
push
push
call
mov
mov
movl
xor
addl
xor
or
andl
lea
push
shl
movl
call
mov
sbb
mov
sub
xor
shl
adc
shr
or
mov
sub
push
sub
lea
push
orl
mov
inc
mov
incl
shrd
shr
or
mov
mov
sbbl
xor
shl
xor
movl
or
adcl
lea
push
call
and
mov
or
mov
cmpl
jl
mov
and
xorl
jmp
pushl
call
xor
shl
shr
or
addl
jmp
xchg
adc
inc
adc
xchg
popa
aaa
repnz
cmp
adc
addl
mov
outsl
ss
jge
neg
out
sbb
inc
scas
push
orb
and
inc
mov
scas
cmp
mov
cli
cld
or
mov
pop
xchg
repz
and
outsl
test
nop
outsb
repz
adc
jg
test
sbb
fisttps
sbb
jmp
cli
cmpsb
or
cmpl
pop
or
pop
lock
and
mov
pop
xchg
lock
xchg
cmpl
sub
pop
mov
mov
ljmp
mov
jbe
inc
fcoml
dec
cmp
iret
mov
mov
pusha
sub
pop
cmp
adc
std
jle
mov
jne,pn
hlt
subps
pop
sbb
cmpsb
inc
sar
testl
mov
lahf
shlb
out
mov
jb
inc
ret
dec
stc
push
pop
inc
fwait
cmp
mov
adc
in
sbb
lods
prefetch
or
xchg
jp
add
outsl
rclb
les
cmp
sarb
inc
xchg
loope
jle
jne
adc
jecxz
jecxz
inc
lock
lods
cmp
sub
pop
push
mov
call
les
ret
dec
jle
stos
in
pop
inc
cs
push
push
aam
dec
sub
aas
subl
dec
xchg
push
enter
out
sti
orb
jne
cli
cltd
maskmovq
testl
fs
inc
cmp
jp
movl
xor
mov
dec
leave
push
mov
xchg
mov
fsubrs
xor
icebp
rorl
lods
xchg
mov
inc
add
mov
lods
mov
jne
lods
mov
rcrl
dec
test
lret
lret
int3
dec
cmpsb
scas
mov
lret
mov
mov
shlb
and
push
in
nop
sub
loope
cmp
pop
mov
push
inc
push
mov
jno
ss
pop
jmp
test
pusha
push
and
ds
or
loope
jbe
enter
ss
jecxz
mov
movl
dec
cld
jecxz
and
enter
cs
push
rcll
jb
sub
xor
add
inc
xchg
ds
xchg
repz
and
fistpl
mov
bound
jne
and
mov
les
push
incb
lods
cld
push
hlt
sbb
test
sbb
sti
fidivrs
cmp
xchg
test
and
rclb
pop
adc
aas
or
xor
lds
mov
mov
dec
bound
je
imul
sbb
pop
sub
pop
jbe
xchg
out
scas
cs
cwtl
push
jnp
hlt
in
arpl
mov
cmc
lcall
sbb
adc
dec
push
jge
notb
insb
jno
push
imul
out
inc
test
jmp
loop
ljmp
test
cltd
ret
push
arpl
movsb
push
jnp
sub
jle
fs
jg
ss
inc
out
sub
aas
ss
imul
es
pusha
sub
shll
push
jbe
mov
rorl
test
cltd
orl
jp
in
mov
scas
adc
push
imul
into
call
inc
fldt
push
andb
jb
mov
scas
push
xlat
mov
test
fdivp
jl
daa
leave
lcall
xchg
jo
rcrb
adc
inc
ljmp
addr16
scas
lahf
lods
in
push
ret
or
xchg
sti
addl
jmp
push
arpl
jmp
xchg
cmp
clc
in
js
cmpsb
adc
and
insb
aaa
lds
push
inc
sar
dec
jmp
testb
insb
fstl
xor
fildl
std
aaa
stos
insl
sahf
icebp
rcl
and
xchg
sub
or
es
stc
inc
sbb
sbb
dec
sub
leave
mov
push
or
or
shlb
test
movsl
xchg
mull
shlb
in
lcall
sub
xor
mov
jne
dec
fmuls
iret
ret
sbb
adc
jo
imul
jbe
cltd
jo
xor
movsl
xchg
or
pop
inc
insb
fidivrl
mov
dec
mov
arpl
adc
shrl
inc
pop
xchg
mov
sahf
jne
push
in
cmp
ret
shlb
cs
aad
mov
aad
imul
sbb
jnp
inc
subl
adc
roll
loopne
cmp
or
dec
add
gs
mov
fs
jp
mov
add
pop
cmc
push
popf
loop
cmc
inc
stos
popf
sahf
rcll
lahf
sbb
adc
lcall
fldt
in
addr16
aam
jp
inc
fcomps
aad
mov
cmp
jmp
int
jge
sti
mov
pop
outsb
lcall
fldl
fidivs
add
shl
es
mov
inc
mov
mov
cmp
add
pop
mov
push
jecxz
sbb
dec
and
inc
sbb
daa
fwait
mov
loope
ds
jp
pushf
mov
into
xchg
outsb
lahf
push
xchg
cld
rcrb
jne
add
fisubs
cmp
pushf
jno
add
fdivrl
divl
movsb
jne
cld
bound
je
dec
xchg
imul
fldt
sbb
loopne
pop
sbb
hlt
mov
inc
out
scas
push
int3
sub
arpl
cltd
insl
aas
aad
les
add
pop
sub
mov
imul
repnz
inc
ljmp
lret
sbbl
inc
add
fistpll
movsl
nop
add
les
enter
jb
int
leave
mov
clc
fwait
cmp
pop
inc
sbb
fxtract
cmpsl
lods
mov
xor
jnp
adc
or
mov
test
cs
lock
jno
arpl
mov
adc
fists
xor
stos
sbb
std
xor
push
faddl
xchg
mov
rcr
jbe
push
arpl
ror
cwtl
pop
in
xor
mov
shl
sbb
lret
je
movsb
pop
cld
jno
and
movsl
orl
cmpsb
rolb
scas
push
pop
lods
mov
pcmpgtd
cmp
xchg
xchg
stc
and
cmpsb
in
arpl
fs
es
pop
pop
aam
push
add
pop
xchg
cwtl
push
mov
jmp
std
fwait
pushf
push
mov
lea
xor
vpslld
int
insl
fdivl
andl
jmp
jmp
or
jge
idiv
int3
fcoml
jl
sahf
push
dec
int3
add
mov
fwait
push
lea
sbb
push
adcl
mov
sub
mov
shrd
and
shr
mov
mov
adc
xor
xor
subl
or
shl
mov
sub
mov
movl
shrd
shr
adcl
mov
mov
xor
jmp
adc
sahf
dec
push
rcrl
lods
rclb
adc
addl
push
jg
mov
popf
jne
xchg
xchg
imul
add
mov
lea
dec
adc
push
sahf
xor
aaa
push
push
loop
inc
or
js
cmp
mov
imul
pop
jns
loop
pushf
mov
push
scas
outsb
imul
push
popa
jge
xchg
test
mov
fbstp
cld
pop
loope
std
int3
int3
xlat
lods
mov
sub
movsl
sbb
push
in
int3
xchg
test
mov
xor
mov
mov
in
jmp
dec
outsb
jl
cmpl
jge
xchg
push
xchg
movsl
xchg
fildl
sub
mov
aad
inc
push
test
in
dec
in
and
enter
mov
lret
ror
xchg
addb
and
ss
jmp
cld
scas
mov
sub
jae
popa
cli
and
sub
lods
xor
inc
xor
dec
dec
fimuls
push
lcall
sub
stc
xchg
xchg
lret
mov
insl
pop
mov
rol
mov
sbb
or
xorl
inc
stos
mov
xor
outsb
mov
cmp
sbb
mov
cmp
inc
and
sqrtps
je
insb
inc
push
jae
jbe
push
xor
push
push
lahf
aam
insl
pop
cwtl
mov
data16
hlt
xchg
cmc
adcl
mov
xchg
enter
inc
sbb
and
movsl
xchg
fstps
dec
jp
nop
fs
sbb
xchg
scas
iret
mov
test
pop
adc
jl
xchg
mul
addr16
cmpsl
pop
push
add
push
pop
movsl
inc
movsb
lret
bound
in
cli
jne
push
mov
inc
ds
mov
xor
push
cwtl
ret
lret
int
mov
ret
sbb
lods
pop
xchg
outsb
mov
mov
push
push
pop
pop
pop
stc
push
testb
shlb
inc
sub
pop
into
xor
test
push
cs
pop
lahf
cmpsl
push
cmp
mov
adc
insl
ror
jecxz
pop
add
jg
sbb
xchg
adc
insb
iret
scas
jno
jecxz
clc
xchg
mov
int
sbbb
mov
mov
pop
xor
push
cmovle
imul
rolb
cmp
jo
dec
loope
scas
ss
arpl
mov
lock
int3
lods
js
idivl
gs
std
or
inc
dec
mov
sub
sti
inc
mov
arpl
imul
gs
rcrb
ja
dec
mov
ja
in
pop
pop
dec
mov
jp
xchg
adc
aaa
pop
sbb
out
mov
scas
or
stos
xchg
dec
movsl
pop
orb
mov
or
mov
or
std
pop
pop
push
adc
push
call
or
outsb
ret
mov
adc
push
inc
mov
and
push
imul
cmpl
adcw
gs
mov
or
negl
aaa
aam
dec
popa
aaa
pop
sub
xchg
sarb
dec
mov
jns
and
pop
jae
out
sbb
outsl
test
fadd
je
pop
sbb
push
or
enter
push
mov
rclb
sub
cs
adc
jecxz
sbb
icebp
jl
pop
dec
mov
push
cltd
popa
stc
push
jmp
popa
inc
inc
and
fdivrs
gs
jb
cmp
arpl
cmp
andl
dec
push
pop
cltd
fimull
pop
and
subl
subb
mov
mov
rcrl
jne
xchg
push
inc
fnstcw
jo
sbb
hlt
das
mov
aaa
in
test
mov
fs
sbb
ja
dec
pop
mov
out
pusha
sbb
lods
mov
pop
xchg
fs
add
pusha
xchg
aad
xorb
cwtl
mov
xchg
aam
push
adc
movl
call
mov
pop
mov
mov
loope
dec
js
loop
stos
mov
aam
jo
loopne
std
inc
outsb
xchg
out
jp
lahf
daa
lret
sbb
insb
and
rorb
sbb
rcrb
and
cmp
xor
xchg
out
push
inc
test
cmp
jns
fxch
pop
dec
pop
iret
insb
cmc
test
xchg
inc
out
or
icebp
into
nop
out
out
push
mov
add
div
lods
or
jb
sub
cmp
ljmp
jp
push
jbe
in
iret
mov
xchg
in
aam
mov
iret
xchg
ja
xor
rcr
mov
ret
lods
sub
ja
inc
jp
xchg
lret
cmp
cs
loopne
pop
ss
mov
cmpsl
lods
push
data16
mov
jns
jge
ret
push
clc
es
pcmpgtw
sub
push
xor
frstor
add
in
lret
xchg
jmp
mov
push
mov
in
adc
sbb
pop
es
imull
out
daa
mov
pop
lcall
insl
mov
or
jle
adc
push
jbe
fldt
xlat
and
mov
xor
rcr
daa
jnp
lcall
adcl
xchg
lods
xor
mov
pop
mov
cmp
jg
in
dec
ret
in
dec
dec
ret
mov
pop
and
push
push
pop
insl
test
js
pop
in
mov
sub
rcrl
in
cmp
lds
imul
xchg
xchg
inc
lcall
jg
imul
lahf
repnz
xchg
mov
lds
xchg
aad
push
sbb
jg
lcall
imul
adcl
push
leave
jb
jl
jne
cmp
mov
into
shl
imul
jmp
mov
les
xchg
xor
mov
ret
push
in
and
or
adc
pop
subl
push
mov
mov
sbb
push
push
add
das
xlat
outsl
jp
jmp
cwtl
scas
mov
mov
icebp
sub
push
not
lahf
fs
push
mov
daa
xchg
sub
inc
jns
sub
rcrl
inc
aam
shrb
dec
add
fisttpll
pusha
rcll
outsb
add
mov
jns
sub
sti
pusha
mov
sub
testb
jmp
adc
mov
add
out
call
int3
rolb
imul
mov
test
xchg
adc
lahf
cli
sbb
jge
cmpb
inc
xchg
pop
xor
xor
iret
xchg
push
filds
int3
sbb
cmp
ljmp
xor
lds
inc
out
xlat
lods
inc
mov
clc
call
xlat
dec
call
cli
jns
sbb
pop
lds
test
jnp
jge
fisttps
inc
mov
das
roll
in
es
dec
lock
scas
push
push
arpl
jo
mov
xchg
aaa
cld
jecxz
fildl
add
inc
inc
add
lret
add
lea
adcl
push
xorl
shl
call
mov
cmpl
jg
sub
and
jmp
pushl
push
call
mov
shl
xor
shr
or
push
lea
sub
push
cmpl
jg
xorl
jmp
push
pushl
pushl
push
push
push
call
mov
mov
shrd
shr
mov
mov
sub
xor
mov
adc
shl
mov
mov
mov
sbb
xor
or
mov
and
shrd
adcl
shr
adc
mov
mov
orl
xor
xor
andl
or
cmpl
jg
jmp
call
add
mov
shl
mov
shrd
shr
mov
adcl
mov
xor
xor
sbbl
or
notl
add
lea
push
shl
xorl
call
mov
xorl
mov
cmpl
jg
jmp
push
pushl
call
xor
shr
jmp
notl
notb
sub
in
mov
adc
jge
movd
add
lods
sub
pop
lcall
mov
push
or
adc
arpl
mov
das
out
or
das
inc
dec
cmpsb
fidivrs
mov
dec
mov
or
pop
cmp
push
push
xchg
aaa
nop
sub
jbe
sub
xchg
or
pushf
add
or
ljmp
push
adc
clc
adc
cld
and
add
fdivs
shrb
mov
test
dec
stos
add
sbb
hlt
sub
push
mov
std
in
addl
inc
in
xchg
and
je
xchg
movsb
lods
pop
test
popa
mov
adc
add
xlat
mov
cmp
mov
xchg
or
xor
inc
push
aaa
rcrb
adc
and
lds
sbb
and
dec
loopne
mov
pop
lds
stos
jge
pop
jae
lahf
inc
inc
lahf
mov
mov
cld
mov
imul
push
push
mov
movsl
dec
pusha
jmp
pop
aad
sub
insb
es
addl
or
push
mov
sub
inc
std
test
ret
test
sbb
sbb
pop
push
int
mov
pop
in
pop
ret
xor
insl
dec
jae
jne
jns
cmpb
rcr
and
out
adc
mov
movsb
cmp
call
push
popa
cmp
or
enter
pop
les
stos
mov
in
xchg
into
enter
push
and
clc
mov
mov
adc
loope
or
mov
lea
push
cmpl
ja
and
jmp
push
push
push
pushl
call
mov
mov
shrd
shr
mov
mov
addl
xor
neg
xor
or
push
sbb
mov
movzbl
and
mov
mov
push
orl
pushl
subl
shl
call
lea
xor
add
add
push
add
mov
mov
cmpl
jbe
adc
or
jmp
push
push
push
call
shrd
shr
mov
mov
xor
xor
or
addl
push
adc
mov
push
adcl
pushl
subl
shl
call
cmpl
jge
sbb
jmp
pushl
pushl
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
sbbl
mov
rol
mov
adcl
xor
movl
mov
movl
cmp
movl
je
or
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
push
mov
sub
not
mov
cmpl
jb
jmp
push
call
mov
mov
sub
push
mov
mov
sbb
mov
adc
orl
orl
add
mov
mov
add
mov
cmpl
ja
sbb
inc
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
sub
mov
sbb
mov
cmpl
ja
or
jmp
push
push
push
call
orl
orl
lea
mov
mov
mov
not
mov
sbbl
add
neg
mov
mov
adcl
mov
mov
neg
shrd
cmpl
ja
or
jmp
push
push
push
pushl
push
call
shr
mov
mov
xor
xor
or
cmpl
jb
jmp
pushl
push
push
pushl
pushl
call
mov
movl
movl
movl
movl
movl
movl
xor
movl
movl
mov
add
movl
movl
cmpl
jge
adcl
adcl
jmp
pushl
push
push
call
movl
movl
movl
movl
movl
dec
movl
sbbl
movl
movl
movl
cmpl
ja
xor
add
sub
mov
jmp
push
push
push
call
movl
movl
movl
mov
shl
mov
andl
push
addl
push
push
push
andl
call
xorl
mov
xorl
mov
mov
mov
add
xor
add
mov
mov
sub
sub
mov
sbb
lea
and
mov
cmpl
jg
jmp
pushl
pushl
push
call
mov
or
and
mov
or
xor
cmp
movl
jne
not
mov
mov
shrd
cmpl
jbe
adc
jmp
push
pushl
push
pushl
pushl
call
shr
mov
mov
shl
xor
xor
subl
or
mov
mov
cmp
movl
jne
mov
add
mov
neg
xor
xor
or
sbb
mov
cmpl
jbe
jmp
pushl
call
mov
mov
shrd
mov
mov
xor
shr
cmpl
jbe
xor
jmp
push
push
call
mov
xor
or
shl
sub
mov
andl
mov
mov
add
adc
mov
and
mov
adc
mov
shrd
negl
shr
sub
mov
mov
cmpl
jg
add
jmp
pushl
pushl
pushl
pushl
pushl
call
xor
shl
xor
or
mov
mov
subl
shrd
shr
neg
mov
cmpl
jbe
adcl
jmp
pushl
pushl
pushl
call
mov
mov
xor
xor
or
shl
incl
lea
mov
cmpl
jl
dec
jmp
pushl
call
mov
shrd
shr
mov
mov
mov
adc
xor
cmpl
jbe
and
jmp
call
mov
xor
or
shl
imul
mov
dec
mov
sbbl
shrd
mov
or
mov
xorl
xor
orl
shr
mov
mov
addl
xor
subl
or
shl
sub
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
jb
jmp
pushl
push
call
mov
shrd
mov
mov
xor
shl
xor
or
shr
subl
mov
sub
mov
mov
adcl
mov
subl
shrd
adcl
shr
add
mov
cmpl
jg
sbb
jmp
pushl
push
call
mov
mov
xor
xor
or
shl
orl
imul
addl
sub
jmp
mov
or
mov
mov
cmpl
jl
or
jmp
push
pushl
call
mov
shrd
mov
mov
xor
shl
addl
xor
adcl
or
andl
shr
cmpl
jg
jmp
pushl
push
push
push
call
mov
mov
mov
mov
shrd
shr
mov
cmpl
jg
mov
adc
or
jmp
push
pushl
pushl
pushl
pushl
push
call
mov
mov
xor
xor
or
shl
mov
mov
adc
add
add
xor
xor
adc
mov
mov
xor
add
adc
shrd
or
shr
movzbl
adc
mov
mov
xor
sbbl
shl
xor
movzbl
adc
or
neg
mov
add
movl
mov
mov
sub
imul
mov
cmpl
ja
or
jmp
push
pushl
pushl
pushl
call
mov
movl
mov
movl
mov
movl
adc
mov
xor
mov
cmpl
jbe
jmp
push
push
push
pushl
call
mov
shrd
shr
mov
mov
xor
shl
adcl
xor
or
movzwl
sbb
mov
lea
cmpl
jbe
and
jmp
pushl
push
pushl
pushl
call
mov
mov
mov
shrd
shr
mov
adcl
mov
subl
shl
adc
mov
xor
xor
sbbl
or
sbb
mov
or
mov
xor
cmpl
jl
jmp
push
push
push
call
mov
mov
shrd
shr
mov
mov
xor
shl
xor
adc
or
adcl
lea
mov
or
mov
cmpl
ja
add
jmp
pushl
pushl
push
call
mov
mov
shrd
shr
mov
mov
subl
shl
and
mov
xor
adcl
xor
xorl
or
cmpl
jle
inc
decl
jmp
push
call
mov
mov
or
mov
mov
shrd
notl
shr
mov
sub
mov
xor
addl
shl
addl
xor
sbb
or
lea
mov
mov
addl
mov
shrd
shr
xor
add
mov
sub
xor
mov
mov
addl
xor
shl
adc
mov
xor
addl
or
mov
sbb
mov
or
add
cmpl
jle
sub
negl
jmp
push
push
call
mov
mov
shrd
shr
mov
cmpl
jge
neg
jmp
pushl
push
push
call
mov
xor
xor
or
lea
mov
cmpl
jge
jmp
push
push
push
pushl
push
push
push
pushl
push
pushl
push
push
push
pushl
call
mov
shl
mov
shrd
shr
mov
mov
addl
xor
orl
xor
subl
or
xor
mov
shl
incl
mov
adcl
mov
orl
mov
addl
or
xor
mov
mov
andl
shrd
shl
sbbl
shr
mov
mov
or
xor
mov
xor
orl
or
mov
dec
orl
not
xorl
and
xor
or
xor
mov
xor
and
mov
cmpl
ja
sub
jmp
push
push
push
call
mov
xor
or
mov
mov
shrd
shr
mov
sbb
mov
mov
adc
mov
mov
xor
xor
xor
adc
mov
addl
xor
andl
shl
subl
mov
addl
or
mov
mov
cmp
je
xorl
mov
xor
add
mov
sub
and
sub
cmpl
ja
add
jmp
pushl
push
pushl
push
push
push
call
mov
mov
mov
shl
xor
mov
mov
mov
subl
xor
adcl
xor
sbbl
shrd
shr
xorl
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
xor
xor
mov
sub
xor
push
push
movl
movl
mov
and
movl
movl
mov
mov
and
sbbl
mov
xor
inc
and
and
add
cmpl
jle
xor
sub
jmp
pushl
call
xor
mov
movl
movl
mov
cmpl
jb
xor
jmp
pushl
call
xor
sub
mov
imul
xor
mov
movzbl
sub
mov
div
mov
xor
or
sub
xor
sub
mov
cmpl
jl
sbb
jmp
push
pushl
pushl
call
movl
movl
movl
movl
movl
movl
sbbl
mov
xor
or
adc
mov
sub
imul
xor
add
mov
sub
or
add
or
and
cmpl
jge
xor
xor
mov
and
and
jmp
push
call
sub
mov
sub
add
mov
mov
orl
sub
or
add
cmpl
jg
mov
sbb
mov
adc
jmp
pushl
call
mov
xor
div
xor
mov
xorl
sub
mov
andl
add
sbbl
mov
movl
movl
not
movl
or
mov
sbb
xor
and
add
add
mov
xorl
xor
subl
div
and
mov
or
sub
cmpl
jl
jmp
push
push
push
push
call
mov
movl
movl
movl
movl
mov
mov
orl
xor
cmpl
ja
jmp
pushl
pushl
push
pushl
push
pushl
call
xor
push
pop
div
mov
xor
div
mov
or
cmpl
jle
or
jmp
pushl
push
push
push
push
call
sub
mov
movl
mov
mov
xor
sbbl
div
cmpl
jg
jmp
push
push
call
imul
xor
xor
imul
xor
mov
movl
movl
movl
mov
and
mov
orl
xor
adcl
div
mov
imul
add
xor
and
mov
sbbl
sub
mov
sbbl
movl
mov
mov
sbb
and
xor
and
sub
or
cmpl
ja
jmp
push
pushl
call
xor
mov
movl
movl
movl
mov
and
or
add
xor
add
or
andl
or
dec
sub
cmpl
jg
inc
mov
sub
jmp
pushl
call
mov
movl
movl
movl
and
mov
shr
sub
cmpl
ja
mov
and
jmp
push
push
call
xor
mov
lea
push
call
mov
or
or
mov
add
or
add
and
lea
adc
mov
and
movl
movl
movzwl
adc
movl
sub
movl
mov
sbb
mov
movl
subl
movl
movl
mov
mov
sub
imul
movl
mov
orl
mov
and
sub
mov
lea
adc
mov
mov
cmpl
jbe
sub
adc
jmp
push
push
pushl
pushl
call
mov
mov
imul
and
imul
or
mov
lea
mov
movzbl
xor
movl
movl
movl
and
movl
or
mov
mov
mov
sub
or
mov
mov
andl
xor
xorl
xor
adcl
mov
subl
call
xor
or
or
mov
mov
mov
mov
cmpl
jle
xorl
jmp
pushl
pushl
push
call
mov
xor
xor
mov
call
or
cmpl
jle
jmp
push
push
pushl
call
or
mov
mov
xor
xor
mov
call
or
mov
cmpl
jb
jmp
push
call
mov
mov
mov
xor
xor
mov
mov
addl
mov
mov
mov
andl
call
mov
adcl
or
mov
or
subl
push
adcl
push
andl
push
addl
push
addl
call
mov
mov
cmp
movl
jne
mov
mov
xor
xor
mov
call
xor
mov
mov
sub
mov
adc
mov
addl
xor
xor
andl
mov
call
or
movl
or
add
mov
adc
mov
xorl
xor
xor
mov
adcl
call
sub
mov
mov
xor
mov
mov
mov
sbb
mov
mov
xor
subl
xor
mov
mov
xorl
mov
decl
call
adcl
or
movl
mov
andl
or
push
subl
push
push
addl
push
xorl
call
mov
movl
jmp
jmp
cmpl
jg
add
jmp
push
call
lea
mov
mov
movl
mov
xor
cmpl
ja
jmp
push
call
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
movl
xor
xor
mov
sbbl
call
neg
mov
mov
adcl
mov
xorl
mov
andl
xor
adcl
xor
mov
movl
call
or
and
or
cmpl
jge
orl
movzbl
xor
jmp
push
push
push
call
mov
mov
xor
xor
movl
mov
subl
call
sbb
mov
sub
mov
xorl
mov
mov
subl
xor
subl
xor
mov
mov
mov
mov
incl
mov
call
sbb
mov
addl
or
sub
mov
or
push
subl
push
addl
push
push
sbbl
call
mov
cmp
movl
je
cmpl
jbe
jmp
push
push
call
mov
mov
xor
xor
mov
call
mov
mov
cmpl
ja
jmp
push
pushl
push
call
mov
mov
xor
xor
mov
call
or
or
sbbl
mov
imul
cmpl
jle
not
decl
jmp
push
pushl
push
pushl
push
pushl
call
add
mov
mov
mov
jmp
movl
jmp
cmpl
jb
xorl
jmp
push
call
mov
mov
xor
xor
mov
call
mov
xor
mov
mov
mov
xorl
xor
addl
xor
adcl
mov
call
subl
or
or
adc
mov
mov
xor
adcl
xor
mov
call
adc
mov
cmpl
jb
jmp
pushl
call
mov
mov
mov
xor
xor
mov
mov
mov
orl
call
or
or
mov
or
push
push
negl
push
push
subl
call
movl
mov
jmp
movzbl
adc
mov
mov
and
mov
xor
andl
xor
movl
mov
addl
call
add
mov
mov
mov
mov
sub
mov
cmpl
ja
movl
jmp
pushl
push
call
mov
xor
xor
mov
call
or
or
mov
movl
jmp
mov
cmpl
jl
jmp
pushl
push
push
call
mov
xor
xor
mov
call
mov
mov
sub
mov
xor
or
or
mov
xor
xor
subl
mov
call
xor
or
xorl
or
xor
mov
mov
add
mov
xorl
xor
sbb
mov
sub
sub
sbb
mov
xor
xor
or
xor
movzwl
and
add
cmpl
jge
jmp
push
call
mov
movl
movl
movl
movl
movl
movl
and
movl
xor
movl
cmpl
jl
mov
mov
and
adc
jmp
pushl
pushl
pushl
push
pushl
pushl
push
push
call
mov
add
mov
sub
cmpl
jbe
jmp
push
push
push
push
call
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
dec
or
sbb
mov
cmpl
jg
orl
jmp
pushl
pushl
call
xor
mov
sub
mov
mov
sub
cmpl
jle
xor
jmp
push
push
pushl
call
mov
xor
mov
div
mov
xor
sbbl
div
orl
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
and
sub
push
push
push
mov
pushl
pushl
call
test
je
movl
movl
movl
push
movl
adc
mov
andl
mov
andl
push
addl
push
push
adcl
call
push
subl
push
xorl
and
sbbl
and
push
push
orl
call
xor
xor
and
mov
cmpl
jbe
and
jmp
call
mov
xor
or
mov
xor
or
notl
mov
xorl
movl
movzbl
and
mov
movl
add
movl
movl
sub
movl
adc
movl
cmpl
jb
adcl
jmp
pushl
push
push
push
call
mov
mov
mov
mov
or
mov
or
mov
mov
sbb
mov
adcl
sub
mov
movl
sbb
mov
xor
xor
subl
and
sbbl
and
cmp
movl
jne
movl
cmp
movl
jne
sub
movl
sbbl
movl
adc
movl
cmpl
jl
sbbl
xor
jmp
push
push
pushl
pushl
push
pushl
call
movl
movl
mov
mov
sub
adc
mov
subl
imul
adcl
and
negl
imul
mov
addl
pushl
imul
incl
xor
mov
adc
mov
sbbl
div
xor
mov
adcl
xor
sbb
mov
sub
or
xor
sbbl
pushl
addl
pushl
call
andl
pushl
call
andl
movl
movzbl
sub
movl
cmpl
jge
negl
jmp
pushl
push
push
push
call
movl
movl
movl
movl
mov
mov
sub
mov
mov
add
mov
adc
cmpl
jge
and
jmp
pushl
push
pushl
push
pushl
push
call
mov
add
adc
and
mov
and
orl
mov
movl
decl
movl
addl
movl
xorl
movl
subl
dec
cmp
jne
movzwl
or
movl
mov
xorl
mov
movl
addl
mov
call
xor
lea
mov
mov
sub
sub
mov
lea
adc
mov
mov
cmpl
jbe
jmp
pushl
push
push
call
mov
mov
mov
xor
shl
shr
or
xor
mov
add
mov
or
mov
and
mov
xor
or
xor
or
sub
sub
mov
cmpl
ja
andl
jmp
push
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
subl
xor
sbbl
xor
xorl
or
cmpl
ja
subl
jmp
push
push
pushl
push
pushl
pushl
call
mov
push
pushl
lea
push
shl
call
adcl
lea
subl
push
mov
mov
andl
lea
andl
push
adcl
mov
subl
lea
notl
mov
mov
orl
mov
push
xorl
call
xorl
push
addl
push
pushl
addl
call
mov
cmpl
ja
mov
xor
jmp
push
pushl
push
push
push
push
call
mov
mov
mov
shr
shl
or
mov
mov
sub
sub
mov
xor
xor
mov
or
xor
mov
lea
mov
cmpl
jle
adc
jmp
pushl
push
push
call
lea
mov
mov
sub
lea
xor
sbb
movl
movl
mov
sub
movl
movl
orl
mov
adcl
mov
sub
add
mov
mov
movl
adc
xor
cmpl
jb
and
jmp
push
push
push
call
xor
and
mov
and
mov
movl
movl
movl
movl
sbb
movl
add
movl
andl
mov
sub
mov
adc
mov
cmpl
jl
and
jmp
push
call
mov
push
push
or
or
push
addl
push
xorl
call
mov
negl
mov
sub
mov
movl
sbb
mov
mov
cmp
jne
cmp
je
and
movl
movl
movl
xor
add
mov
sub
xor
movl
mov
mov
sub
xor
mov
mov
mov
cmpl
jb
jmp
pushl
pushl
pushl
push
pushl
call
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
and
movl
sub
movl
cmpl
jl
add
jmp
pushl
call
movl
movl
movl
mov
mov
push
push
xor
adcl
xor
push
push
call
addl
mov
andl
mov
push
push
push
sbbl
push
call
cmpl
jl
subl
jmp
call
mov
mov
push
push
push
push
andl
call
mov
sbb
mov
mov
mov
andl
add
movl
mov
adc
mov
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
addl
xor
adcl
shld
mov
and
shl
mov
mov
sbb
mov
sbbl
xor
subl
xor
mov
movl
cmp
movl
jne
movl
cmp
je
mov
mov
cmp
je
cmpl
jl
sub
jmp
pushl
call
mov
mov
mov
shl
xor
mov
mov
cmpl
jle
and
jmp
pushl
push
push
call
mov
xor
xor
shrd
xor
shr
or
or
mov
movl
mov
movl
cltd
movl
cmp
movl
jne
cmp
movl
jne
movzwl
add
movl
cmpl
jge
mov
add
jmp
push
push
call
movl
mov
mov
mov
xor
orl
shld
adcl
shl
movl
mov
mov
xor
sbbl
xor
mov
cmp
jne
movl
cmp
movl
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
addl
xor
and
shl
ret
xor
xor
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
negl
subl
movl
cmpl
movl
je
cmpl
jbe
xor
jmp
push
pushl
pushl
pushl
push
push
push
pushl
push
push
push
push
pushl
push
call
add
mov
mov
pop
pop
pop
leave
ret
mov
mov
ret
orl
mov
mov
notl
or
mov
movl
jne
mov
sbbl
mul
ret
xorl
push
mul
and
mov
add
mov
mull
add
mov
mul
add
pop
ret
incl
push
mov
sbb
push
mov
andl
or
movl
jne
mov
mov
sub
imul
mov
mov
xor
div
andl
mov
and
mov
movl
div
not
mov
jmp
and
mov
andl
mov
movzbl
xor
mov
cmpl
jge
jmp
pushl
pushl
call
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
