push
mov
sub
sbb
mov
mov
mov
add
mov
decl
mov
sbbl
push
push
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
xor
push
mov
mov
sub
imul
mov
adcl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
or
jmp
test
push
movsb
jb
jl
pop
or
jns
jle
jle
mov
jle
into
xlat
cmp
pop
add
jns
int3
and
sbb
inc
fs
out
mov
es
test
call
add
dec
stos
push
sub
sarb
mov
stos
push
rcl
test
pushf
mov
dec
out
dec
call
mov
and
jnp
ret
xchg
sub
loopne
cld
ljmp
sub
add
sbb
outsl
insl
add
cmp
jno
ds
or
adc
jge
inc
dec
aaa
adc
ja
sbb
ds
hlt
leave
mov
daa
or
xor
pushf
sub
xor
mov
cmpsl
mov
sbb
dec
fisttpll
sbb
sbb
pop
or
mov
fscale
lods
flds
lcall
repz
dec
movsl
jo
jb
mov
into
bound
fdivs
nop
xchg
mov
xchg
jbe
incb
jmp
popa
xchg
mov
adc
mov
or
push
adc
mov
sub
mov
out
inc
outsl
cmp
mov
insb
push
sti
sbb
pop
mov
push
arpl
popa
es
and
adc
cmp
and
xor
dec
movsb
int
movsl
dec
jg
jecxz
leave
inc
dec
pushf
mov
and
inc
int3
pop
popl
jno
dec
jns
pop
or
inc
mov
dec
dec
movsb
nop
mov
mov
dec
lcall
cmp
and
in
sub
cmc
outsb
mov
adc
out
sarl
in
add
mov
in
sub
adc
or
mov
adc
lea
xorl
mov
adc
mov
orl
mov
xor
xor
neg
add
mov
movl
lea
sbb
mov
mov
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
xor
add
mov
decl
mov
mov
mov
sbbl
mov
adcl
mov
xorl
movzwl
add
mov
jmp
fisubl
addb
lods
gs
aam
dec
xchg
test
mov
jle
mov
jle
cmp
fmuls
sub
divl
inc
fsts
mov
mov
arpl
xchg
pop
or
pop
repnz
stos
jle
xchg
adc
pushl
mov
aaa
mov
cltd
pop
xchg
mov
mov
add
notl
cld
mov
jp
sti
dec
addr16
test
mov
gs
mov
mov
orl
mov
mov
dec
adc
ret
dec
jecxz
orb
mov
pusha
push
jo
jb
movb
sub
fdivrl
nop
int
jns
push
mov
outsl
ret
jecxz
jae
sub
int
icebp
or
and
sbb
shlb
fimuls
loop
sbb
inc
sbb
push
push
jae
popa
mov
adc
cwtl
or
cli
cmpsb
repz
pop
mov
push
daa
xchg
adc
scas
adc
cwtl
aam
mov
mov
mov
adc
pop
jnp
or
scas
stos
inc
daa
pop
lret
imul
mov
mov
mov
popf
mov
popa
js
adc
nop
or
icebp
add
sub
xor
out
pop
xor
adc
mov
enter
sbb
movsb
lods
cwtl
popf
push
fstpt
repnz
push
push
orb
je
das
fldcw
or
sahf
xchg
popf
data16
daa
pop
adc
sti
roll
cmp
fst
jnp
pop
xorl
scas
xor
pop
cmp
call
or
and
mov
xor
addl
add
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
or
mov
sub
and
mov
mov
addl
xor
orl
add
movl
cmp
jmp
cmp
sub
mov
ss
call
jle
jg
jle
in
xchg
arpl
jb
mov
lds
xchg
adc
dec
cmc
xor
mov
mov
cmc
dec
dec
test
decl
mov
mov
jmp
inc
pop
icebp
xchg
mov
mov
andl
adc
pushl
pushf
xor
pop
neg
xchg
jge
push
jg
ljmp
les
cli
mov
popa
pop
xor
je
iret
rcrl
icebp
ret
outsl
jo
test
add
test
js
andnps
in
push
push
inc
es
xchg
dec
jecxz
sub
scas
pop
cld
sbb
jecxz
pop
add
xchg
jo
add
xchg
sub
orl
add
fldl
sbb
fmul
int
xor
mov
lods
lcall
mov
inc
sub
mov
sub
mov
inc
sahf
add
mov
cmp
add
mov
xchg
sub
pop
lods
in
mov
je
jle
fimull
cmpsl
std
sbb
inc
push
dec
addr16
int
cmpl
loope
lock
je
pop
xor
xchg
xchg
mov
mov
cmpsl
pop
iret
fdivrs
push
cmp
ret
mov
into
push
mov
add
mov
fdivrl
adc
imul
inc
fmulp
cmp
jg
pop
pop
sbb
and
pushf
sti
xchg
jmp
or
insb
insb
cmp
mov
mov
jae
mov
call
test
add
add
add
or
jmp
or
popa
sbb
dec
push
pop
sbb
jle
jg
jle
nop
xor
add
test
out
push
mov
mov
sbb
shlb
dec
jl
mov
subb
cmp
in
add
dec
test
mov
jae
mov
mov
aas
pop
int
cwtl
mov
stos
push
xor
pushf
cli
insl
dec
inc
pusha
aad
and
popa
aam
loopne
mov
inc
push
xlat
dec
arpl
test
mov
mov
xchg
dec
jae
xor
aas
aaa
cld
jp
fadds
xchg
sub
into
inc
not
fmuls
xor
movsl
addps
mov
jb
in
sbb
out
cmp
cmpsb
inc
cld
xor
mov
rcrl
mov
sbb
test
push
jg
lock
outsl
jb
dec
pusha
imul
dec
fstps
pusha
pop
repz
xor
test
push
mov
mov
or
add
pop
stc
fisubl
fdivrl
rcll
int3
mov
mov
loopne
scas
push
mov
test
clc
test
sub
pusha
mov
or
pop
inc
xchg
mov
pop
mov
lods
cli
fwait
pop
mov
cmp
pop
mov
and
push
mov
sub
mov
jb
insb
loopne
pop
cmp
ret
inc
ror
sarb
xchg
and
out
insl
inc
jge
mov
cld
lock
mov
jno
cmp
fdivl
out
jmp
fstpl
mov
into
cwtl
fcmovne
xor
or
add
add
add
add
or
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
xor
add
mov
mov
mov
xor
mov
sub
add
jmp
icebp
jmp
imul
dec
cmc
push
add
jle
jg
jle
out
mov
xchg
push
push
jae
jge
sub
scas
mov
faddl
mov
and
jne
mov
fisubl
cwtl
fisttpl
xchg
sbb
clc
mov
fwait
enter
int3
je
cltd
xor
jbe
mov
fcompl
icebp
inc
addb
aaa
int
cwtl
fs
popa
arpl
aas
loope
das
aas
cmpsl
fs
adc
adc
sbb
sarl
fisubl
out
xchg
and
mov
pop
stos
jg
clc
mov
xlat
xor
xor
imul
push
arpl
jbe
sbb
lahf
and
xchg
xchg
cmp
jno
call
and
call
adc
fs
repz
adc
mov
mov
enter
nop
mov
ljmp
into
xor
mov
dec
mov
iret
shll
and
mov
iret
sbb
hlt
ret
outsb
movsl
xacquire
mov
mov
nop
mov
stos
or
sbbl
xchg
vcvtsd2ss
inc
jne
pop
nop
mov
pop
push
sbb
dec
ss
adc
push
into
aam
mov
jg
mov
out
cmp
pop
test
dec
bound
sub
jecxz
in
nop
inc
imul
mov
mov
lahf
insb
adc
shl
das
sub
adc
stc
xchg
sbb
imul
cmpb
addr16
das
aad
call
scas
outsl
cmp
dec
jp
imul
xchg
les
jmp
lods
and
sub
rorb
add
cld
movzwl
add
jmp
push
mov
test
and
jle
jg
jle
pop
adc
mov
add
push
dec
out
xchg
mov
jbe
sbb
mov
loop
jecxz
in
mov
sti
adc
iret
arpl
in
scas
fbld
std
ss
sub
sub
adc
or
fiaddl
mov
sbb
cmc
and
inc
cli
adc
jecxz
in
jl
cmpb
jge
les
sahf
mov
adc
js
mov
ljmp
push
sub
fisubs
negb
fcmovu
or
cmpsl
mov
lret
jle
push
inc
lret
cmpsl
mov
xor
push
fdivrs
lea
mov
mov
sbb
fcmovb
into
ja
repnz
push
inc
es
cwtl
lock
cmpsb
and
ror
arpl
cmp
movsb
test
out
out
xor
stos
scas
xor
add
push
call
imulb
add
jns
das
add
mov
dec
addr16
rcrl
test
push
xchg
sbb
cmp
fdivp
and
mov
xchg
in
in
xor
insl
or
daa
pop
dec
into
mov
repz
cltd
mov
stos
inc
mov
into
mov
pop
jl
pushl
call
gs
jmp
cmp
dec
sbb
dec
mov
les
int3
xchg
and
iret
or
shr
fcmovu
lret
push
loop
jmp
hlt
daa
dec
push
cmp
das
cmp
sub
pusha
push
mov
dec
loop
dec
call
dec
or
movb
xor
sub
jmp
xchg
sahf
loopne
icebp
jo
popa
mov
cmp
insb
fnstenv
jb
add
mov
jle
jae
or
imul
pop
fldenv
movsb
fsubrl
inc
jne
daa
or
in
mov
dec
enter
scas
sub
fstl
jecxz
lods
jo
repnz
jle
add
inc
xchg
dec
jnp
push
hlt
clc
pop
or
fisubs
ja
in
leave
lahf
insb
insl
and
repz
mov
test
push
jmp
mov
xor
mov
jp
rcrb
sbb
pop
sub
adc
mov
stos
and
xchg
sub
int3
or
adc
sbbl
dec
inc
jo
and
mov
lret
mov
xor
xor
add
ja
nop
ficomps
pusha
lret
test
and
add
enter
lret
cmovg
or
imul
xchg
movsb
or
out
addr16
pop
or
xchg
stos
rcll
mov
fs
dec
lahf
mov
sbb
dec
lret
jg
pop
iret
loope
add
or
jge
arpl
dec
int3
ret
xorb
inc
xchg
cld
dec
outsl
clc
cmp
mov
xor
clc
add
push
and
fldcw
test
lahf
and
sub
pop
jbe
mov
hlt
jmp
out
mov
inc
mov
rol
incb
and
aas
ret
rolb
fsubs
inc
loopne
mov
rcll
push
and
sbb
nop
push
jbe
aas
push
pop
pop
mov
ret
inc
int3
push
movsb
adc
jecxz
out
loope
lcall
inc
cld
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
jmp
pop
sbb
cmp
push
popa
movsb
insl
std
and
add
mov
jle
fstpl
aas
cmp
outsl
jns
rcrl
mov
mov
cmp
lods
lret
orl
daa
cmpsb
jo
inc
int3
jmp
fs
popf
adc
jge
and
and
jae
or
add
icebp
rclb
pusha
sub
fwait
cmp
mov
sub
sahf
jo
xor
dec
push
sbbl
sbb
add
inc
push
jmp
add
sbb
popa
stos
inc
icebp
pop
cmp
xchg
loope
dec
lods
clc
sbb
mov
push
dec
inc
xor
out
insl
in
inc
arpl
outsl
popf
in
xchg
movsl
dec
lahf
sub
insb
adc
ljmp
std
je
leave
fiaddl
dec
ret
xor
jbe
adc
loopne
scas
std
in
test
scas
mov
add
ss
cmp
dec
sbb
into
jae
push
ror
test
jg
das
mov
sbb
jp
cmpb
xor
pop
mov
lret
test
stos
push
mov
dec
pop
pop
adc
cmp
in
sbb
xor
dec
iret
incb
dec
in
xchg
cmpl
mov
mov
mov
jl
or
sub
call
add
enter
fdivrs
addr16
bnd
into
ja
adc
test
mov
push
repnz
jge
xchg
xlat
lock
outsb
sub
stos
sbb
and
test
push
pop
sbb
lret
popa
test
fwait
sbb
cmp
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
jmp
je
int3
xchg
int
jne
jae
psraw
lock
jle
mov
jle
pop
ror
or
mov
xlat
sbb
jg
into
push
fs
int
jne
jmp
mov
div
mulb
push
push
into
jns
mov
xchg
popa
orb
add
ret
fdivs
or
mov
and
ds
lds
stos
push
and
insb
pop
mov
hlt
mov
mov
clc
loopne
clc
cmp
das
xorw
pop
add
xorl
dec
ficompl
mov
xlat
push
xor
pop
jl
mov
cmp
inc
dec
imul
mov
cmp
cmpsb
nop
std
add
nop
cmp
xor
sahf
aaa
cmp
xlat
frstor
sub
pop
push
stc
jne
or
outsb
jb
inc
lret
pop
rdtsc
mov
call
sbb
into
ret
loope
fcomps
mov
inc
fsubrs
cmpsl
jb
clc
mov
jle
mov
push
add
into
in
sarb
lret
jg
inc
xchg
ss
xor
in
add
fdivl
jle
xchg
shrb
mov
fisttps
gs
push
shl
imul
push
inc
xor
sbb
loope
ds
lcall
pop
add
ret
pop
adc
mov
sbb
mov
cmp
in
stos
push
xchg
or
cmp
movsl
xor
sbb
lea
and
lret
sbb
in
nop
mov
push
ds
mov
xor
ja
xchg
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
jmp
xor
inc
pop
pop
jge
arpl
outsb
dec
or
in
or
jle
int3
jb
dec
hlt
icebp
push
sub
pop
dec
fwait
sub
outsb
jno
in
gs
imul
fnstcw
fdivr
popa
cmpsl
in
enter
pop
mov
cmc
jge
iret
shrb
popf
ret
and
std
push
in
aam
dec
mov
test
or
lcall
aas
dec
xchg
mov
sahf
pop
push
sub
push
and
jbe
mul
in
and
jmp
test
out
pop
pop
ljmp
dec
icebp
rcrl
out
mov
cwtl
jmp
daa
and
movsb
movsb
das
xchg
cs
insb
mov
add
pop
xchg
mov
mov
scas
loope
in
adc
inc
maxps
je
cmovb
pop
jne
fwait
das
xor
add
jmp
jno
repnz
cmp
add
scas
lock
pop
pop
adc
decb
jge
aaa
sub
div
popa
in
adcb
add
ficoml
jb
mov
xchg
gs
clc
filds
inc
mov
scas
jo
mov
insl
pop
hlt
add
mov
mov
fidivs
xorb
repnz
lcall
dec
test
icebp
dec
push
push
and
mov
adc
add
pop
icebp
outsl
in
cli
int3
nop
aas
int3
inc
outsb
mov
add
mov
sub
enter
repnz
jb
ja
lcall
mov
dec
or
repnz
mov
sub
and
mov
push
push
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
jmp
insb
jo
arpl
jge
jno
adc
mov
jmp
jle
mov
jle
inc
cmp
cltd
fcompl
call
mov
rol
bound
andl
sbb
or
mov
rorb
gs
mov
test
lahf
cmp
lock
rclb
stos
adc
clc
pop
stos
cmp
pop
test
notl
gs
adc
cwtl
stos
fisubrs
cmpsb
mov
mov
vmread
jle
or
lock
mov
test
mov
in
push
pop
push
and
imul
xor
jge
jecxz
inc
pop
out
outsl
mov
fs
sbbl
stos
xor
dec
aaa
pop
les
push
jae
mov
imul
andb
lock
sub
insl
xlat
push
pop
rcll
adc
dec
jne
push
xchg
fiaddl
in
mov
loopne
rorl
les
in
mov
cltd
dec
cmp
fcomp
nop
mov
gs
sbb
xchg
adc
ja
cli
cmc
cmpsl
pushf
xchg
mov
push
sbb
jg
and
mov
mov
push
inc
mov
add
xor
test
xchg
cltd
cmpsb
test
movsl
sbb
test
imull
daa
int3
ret
push
imul
mov
in
or
mov
cmp
movsb
xchg
fisttpll
cmp
ss
movl
dec
andl
dec
pop
call
xor
insb
notl
mov
and
cltd
fistps
lds
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
sbb
jge
fidivrl
jmp
jle
push
jg
jle
push
test
push
popf
inc
jae
xchg
imul
das
fiaddl
push
call
fs
addb
inc
lcall
cmp
sub
push
mov
add
inc
jb
dec
sub
cmc
fldenv
rorb
pop
lods
adc
pusha
insl
jbe
adc
stc
addr16
push
xchg
add
and
fsubr
jp
les
popa
jnp
add
popf
sbb
test
jns
fwait
mov
cltd
andb
jmp
std
sub
cmp
jb
ret
mov
imul
dec
fnsave
pop
mov
leave
push
cmpsb
push
dec
in
hlt
movsl
xchg
mov
nop
jecxz
fstl
test
dec
jns
or
mov
xchg
xchg
push
test
mov
leave
lods
insb
mov
xacquire
mov
int3
pop
cmp
pop
addl
mov
fnsave
rcr
jl
ret
mov
ljmp
inc
add
add
add
or
adc
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
jmp
xorl
push
sbb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
add
movl
mov
push
mov
or
mov
xor
mov
push
add
mov
sbbl
jmp
pop
imul
cltd
jg
sub
jle
push
jg
jle
out
mov
mov
cmp
mov
xor
xor
mov
scas
add
jecxz
daa
addr16
es
push
in
jmp
stos
out
nop
or
or
sub
sub
stos
dec
xchg
pop
fdivrl
in
mov
test
scas
sbb
push
xor
adc
sbb
sub
rorl
ds
pushf
push
or
cmpsl
hlt
movsl
loop
adcb
mov
jg
pop
rorb
adc
rolb
adc
mov
in
in
dec
shl
or
push
in
cmpsl
orb
lock
push
inc
adc
sete
imul
mov
sbb
addr16
test
pop
das
sub
jo
adc
add
jns
and
daa
pop
addb
les
adc
rcll
loopne
lcall
dec
mov
lcall
sub
call
call
mov
aaa
push
dec
pop
inc
rcrb
cmp
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
mov
xor
mov
xorl
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
jmp
push
nop
outsb
stos
jae
push
jo
sub
lods
xor
or
push
jg
jle
sar
jbe
cs
lods
in
js
add
enter
mov
dec
push
iret
jb
pop
int
int3
rcl
sbb
lcall
lods
outsb
in
pop
xchg
sub
aam
outsb
pop
and
testb
jge
es
inc
sti
loopne
stos
adc
arpl
mov
adc
adc
cwtl
jo
jns
adc
outsl
xchg
clc
add
aas
lds
xlat
cltd
scas
xor
mov
or
and
sub
addr16
pop
xor
pop
lea
mov
nop
iret
sbb
jnp
mov
add
mov
addr16
jne
mov
pushf
jmp
or
add
pop
push
out
repnz
shll
test
out
jnp
add
aas
sub
dec
or
shlb
sub
dec
enter
or
pop
fadds
jo,pt
mov
out
mov
test
add
out
hlt
adc
jo
xor
inc
call
stos
addb
sbb
outsb
xor
xchg
sub
mov
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
sub
and
mov
jmp
inc
dec
fwait
imul
add
xchg
xor
jle
jns
jle
pop
int3
cmpsb
cwtl
jb
jge
ja
adcl
aam
jns
add
lods
push
repz
mov
inc
cmpsb
xchg
popa
mov
test
fistpll
mov
stos
testb
cmc
ljmp
dec
subb
pop
outsb
xor
hlt
mov
adc
bound
sub
push
sub
into
ljmp
adc
cmc
or
sub
sti
jp
jp
inc
imul
jne
loop
mov
vminsd
dec
push
sub
jbe
iret
jo
and
aas
jmp
cmp
sbb
pop
and
and
ja
cwtl
pop
loopne
pop
cs
ret
imul
test
int3
test
xchg
dec
insb
cmc
cmpsb
jae
subl
sub
cmp
shll
lret
push
jnp
icebp
in
pushf
add
lods
arpl
pop
into
sub
fstl
sub
cmc
or
lcall
fwait
scas
jno
cmp
stc
jnp
dec
xlat
pop
fisubs
lock
hlt
stos
or
std
test
or
sbb
dec
aaa
scas
dec
or
cmc
dec
cmpl
mov
aad
pop
jge
call
imul
jno
mov
ds
dec
stos
mov
out
stc
clc
mov
sub
icebp
sbb
call
inc
jbe
lods
jle
ja
les
xor
daa
sbb
leave
lret
imul
mov
fldt
lods
lcall
ret
icebp
dec
movsb
cli
mov
js
nop
jnp
pop
xchg
or
sbb
mov
mov
lods
and
pop
enter
push
popa
jecxz
inc
lock
bound
js
jo
bound
inc
repnz
pop
xlat
icebp
cltd
lods
sbb
sub
in
pushf
or
mov
lahf
xor
adc
jns
repz
cmpsb
lahf
int3
movsl
cmp
cmp
cmp
iret
sub
dec
dec
daa
lret
jle
xlat
incl
cmp
cmp
lock
jb
dec
leave
push
inc
cmc
xchg
rcrl
pop
fdiv
movsb
push
sarl
shl
ret
mov
icebp
in
cwtl
stos
cmp
add
dec
test
adc
sbb
sbb
xchg
mov
ficoml
stos
lret
outsl
loopne
fisttpl
stc
sub
xor
add
sti
cmc
inc
cmpsb
adc
sbb
xor
xor
enter
push
xchg
pushf
and
cmp
lret
movsl
sub
inc
pusha
int
sbb
dec
xchg
mov
push
mov
dec
xchg
cmpsb
inc
cmpsl
cli
and
pop
ss
push
and
or
in
jbe
cwtl
xor
jp
loopne
pop
dec
mov
je
jp
sub
in
mov
pop
mov
adc
sbb
aaa
ror
fwait
sbb
xor
add
inc
push
add
cli
jne
pop
xchg
push
dec
popa
dec
negb
xor
dec
movsb
push
cwtd
js
cwtl
flds
es
xchg
lods
pop
jge
add
outsl
sub
sub
push
xchg
mov
push
xchg
outsb
xor
xchg
cmp
sbb
and
adc
rcll
test
call
int
adcl
fisubl
xchg
loope
or
ficomps
jae
mov
aad
xchg
jle
test
daa
push
pop
jb
mov
push
ljmp
dec
mov
pop
cmpsb
imul
push
lea
mov
dec
into
push
xchg
imull
mov
hlt
dec
and
xor
loope
add
xor
mov
andl
add
mov
xor
mov
movzwl
mov
xor
mov
mov
sbb
mov
movb
lea
orl
mov
and
jmp
jo
inc
xchg
jo
jne
xchg
or
adc
mov
push
jns
jle
stos
or
cmp
fldl
arpl
lock
gs
mov
jb
sub
pushf
leave
dec
gs
mov
dec
pop
add
lret
mov
xchg
dec
in
filds
stos
inc
jp
lahf
jmp
add
xchg
pop
jmp
sbb
push
add
cmp
xchg
pusha
xorb
out
ret
xor
shlb
xchg
cmc
fidivrs
loope
jbe
cmpsb
out
pop
adc
xor
hlt
inc
or
icebp
add
clc
push
xchg
int
add
out
cmp
push
inc
jmp
mov
sbb
pop
add
xchg
ljmp
push
sbb
mov
inc
sarb
xchg
fistpll
jp
inc
mov
es
test
loop
lret
mov
push
lahf
inc
push
mov
into
jns
push
cmc
frstor
sarb
sub
xor
adc
inc
sbb
in
cs
movsb
or
push
aaa
mov
mov
push
sub
inc
jg
push
xchg
out
or
cmc
lret
pop
stos
lahf
dec
in
xchg
test
dec
adc
or
shl
pop
sub
adc
mov
adc
mov
dec
mov
dec
cmp
out
lret
sti
add
in
imul
aaa
lret
scas
mov
sub
mov
sarb
mov
arpl
insl
and
cmp
dec
movsl
mov
dec
xchg
sub
sub
fistl
cmc
sub
inc
clc
dec
out
lea
push
popf
cmp
or
aaa
addr16
call
test
or
xchg
lds
enter
fsubrp
mov
ja
rolb
and
nop
mov
sbb
mov
test
ret
push
lods
icebp
pop
sbb
ljmp
mov
outsb
sbb
popa
sub
bound
mov
push
jne
fisubrl
add
push
movsl
xchg
lds
cltd
cli
cwtl
hlt
in
xchg
outsl
in
and
mov
aam
adc
leave
sub
out
xchg
add
fidivrl
aas
xor
daa
dec
mov
leave
pop
jo
repnz
stos
inc
pop
sub
fwait
movsb
ss
inc
jmp
divl
and
lock
sbb
lcall
es
scas
adc
adc
xchg
mov
add
xchg
push
xchg
es
mov
sarl
out
cmp
dec
xchg
xchg
imul
jo
pcmpgtw
fwait
add
cli
xor
cmpl
daa
sub
stc
push
icebp
and
stos
xchg
sbb
orl
dec
gs
jg
adc
call
mov
sbb
pop
cmpsb
pop
push
outsb
sub
imul
stc
or
mov
inc
aaa
cs
xchg
mov
sbb
dec
cmpsb
and
adc
fisttpll
xor
inc
aad
pop
sbb
xchg
shrb
mov
jge
sbb
mov
push
dec
or
mov
mov
sti
loopne
sub
mov
fsubs
out
sbb
mov
or
xor
mov
mov
xlat
and
mov
xor
sbb
aaa
jo
cmpl
ret
xor
add
push
icebp
dec
inc
pop
xor
dec
mov
jecxz
jg
das
inc
fadd
jmp
cmp
push
repnz
push
into
cltd
cli
or
xchg
sub
insb
inc
lds
cmpsb
pop
aaa
fisubl
imul
inc
decl
add
or
mov
mov
sbbl
xor
addl
sub
orl
mov
xor
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movl
adc
mov
mov
push
adc
xor
incl
mov
subl
add
jmp
notl
mov
mov
movl
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
jmp
sbbl
jae
out
xchg
lea
jle
jns
jle
xlat
sbbl
ror
jmp
and
cmp
mov
sahf
insl
fld
pop
push
or
pushf
adc
inc
push
or
push
enter
xchg
in
adc
arpl
int
gs
add
jnp
jne
stc
gs
lock
cli
push
pop
dec
xchg
push
adc
lods
dec
xchg
jo
adc
fwait
jmp
xchg
push
popa
mov
and
stos
jne
out
dec
loopne
inc
lcall
xchg
call
inc
xchg
outsb
push
xchg
mov
icebp
dec
test
das
mov
fdiv
lods
xchg
and
scas
sbb
add
jae
pop
mov
insl
jle
xor
bound
dec
jno
vpcmpgtd
push
into
inc
call
test
loop
mov
cmpsl
push
inc
sbb
enter
lcall
fstpl
and
xlat
bound
test
daa
sbb
enter
mov
cs
pop
cltd
mov
xchg
adc
std
cmp
sbb
dec
add
and
push
xor
jnp
mov
pushl
mull
std
mov
mov
out
cmp
dec
std
xor
fistpll
inc
in
cmp
pop
outsb
int3
iret
pushf
push
cmc
inc
bnd
jg
dec
fisubs
jo
jo
les
inc
inc
fadds
repnz
insl
dec
push
enter
popa
adc
dec
imul
add
jno
js
mov
add
fxch
inc
out
add
cmp
js
shll
push
ret
in
push
ss
scas
mov
push
mov
lahf
stc
cs
push
push
aaa
xchg
jle
adc
ljmp
pop
dec
cwtl
hlt
decl
test
std
jecxz
sbb
adcb
xchg
cmpsb
out
dec
mov
es
mov
xchg
repnz
jb
mov
add
rorb
fisubl
imul
pop
sub
xchg
xchg
xchg
jmp
call
cld
jmp
jmp
mov
dec
inc
pop
xchg
jb
mov
and
xchg
je
lds
mov
add
sbb
sub
mov
ror
inc
mov
or
loope
xchg
jo
jecxz
inc
idivb
adc
mulb
dec
shrl
dec
fistps
iret
pextrw
lods
in
outsl
push
xlat
cmp
insb
lahf
sbb
mov
mov
ljmp
and
fistl
orb
cld
push
cld
lds
xor
fbstp
cs
lcall
ss
cmpsl
cld
sbbl
push
sbb
lea
popf
xchg
rorb
and
lods
jle
dec
repnz
or
cmp
fdivr
cmp
cmp
punpcklwd
out
shll
aas
leave
hlt
adc
xchg
sbb
adc
cld
cltd
inc
mov
test
inc
adc
insl
mov
int
push
bound
adc
movsb
cs
lea
test
inc
cltd
push
or
fnsave
ret
les
jmp
jp
push
sub
push
mov
mov
push
mov
out
push
mov
out
imul
cld
push
adc
scas
daa
jae
cmp
pushf
xlat
dec
insl
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
jmp
mov
or
push
jge
inc
xchg
add
mov
jns
jle
dec
cmpsb
dec
imul
sbb
xorl
push
or
jns
lret
das
into
cmc
mov
stos
pop
push
mov
mov
out
es
inc
pusha
mov
rcll
fildl
shll
fldl
hlt
fbld
lock
mov
js
sub
mov
jno
mov
lcall
dec
inc
adc
mov
arpl
movb
call
and
or
dec
cmp
imul
mov
mov
mov
and
in
sub
stos
add
mov
ja
push
fmull
mov
fdivrp
jns
lcall
xchg
out
ret
lods
jne
stos
pop
orl
inc
sbb
std
jmp
lret
icebp
shlb
dec
aaa
decb
adc
mov
xor
in
lret
inc
mov
lret
dec
test
jbe
popf
sahf
dec
into
xor
jnp
data16
aas
jae
mov
sar
jns
inc
mov
lods
and
mov
add
add
scas
lock
ficoml
jl
jns
dec
ret
pop
jns
inc
push
sub
sub
movsl
outsb
xchg
stos
push
xor
mov
or
sub
dec
pop
mov
fucomp
ja
and
ror
fcoms
stc
subb
cmp
xchg
xlat
xchg
jne
xor
add
adc
std
arpl
jle
out
sub
inc
vpsllw
mov
push
cmp
push
pop
cld
rcr
test
push
fbld
adc
cmp
aas
outsb
and
mov
lods
and
jp
cltd
arpl
shlb
cmc
cmp
scas
mov
rcll
lret
jbe
mov
pop
ds
nop
rcrb
shll
jo
mov
pop
adc
in
inc
inc
or
xchg
cltd
inc
jmp
sub
cmpsb
ss
movsb
mov
adc
mov
add
jns
xchg
and
push
push
push
lea
iret
test
xor
inc
mov
jmp
flds
out
jnp
pop
dec
std
lret
mov
aam
scas
mov
movsb
clc
pushf
adc
aam
push
rep
xchg
xchg
pop
xor
inc
clc
in
test
fxch
sub
xchg
xor
addr16
sub
pop
lret
test
std
sub
sti
inc
mov
mov
aaa
jo
arpl
mov
push
pop
stos
popa
das
push
in
fsubrs
call
jbe
mov
mov
mov
dec
sub
jno
dec
mov
rorb
mulb
pop
jle
inc
push
cmpl
ljmp
inc
sub
stc
mov
push
and
scas
lods
or
add
lahf
int3
insl
into
daa
je
and
rcrl
jg
lret
rclb
js
push
filds
sbb
dec
es
addr16
xchg
cmc
orb
add
or
enter
cmp
cltd
inc
aam
inc
imul
cs
xor
mov
xchg
lea
dec
nop
push
roll
iret
addr16
and
cmp
add
scas
test
fmulp
and
int
lods
pop
mov
daa
fst
sbb
xor
sahf
bound
jno
push
iret
cmp
or
lea
pop
std
stos
mov
xor
add
mov
mov
jmp
pop
ret
jge
insb
jae
test
inc
xchg
sbb
push
jns
jle
jae
sbb
pop
jbe
dec
jo
and
add
sbb
scas
jne
adc
xor
pop
scas
inc
inc
scas
pop
out
inc
mov
jns
shlb
pushl
cld
add
into
push
sahf
sub
aam
rsqrtps
pushf
xor
or
lret
call
repz
ret
fs
pop
add
push
fdivs
scas
xchg
xor
and
pop
xchg
jo
mov
sbb
loopne
mov
cmc
imull
jns
jge
push
push
mov
lea
or
xchg
adc
and
cmpsl
imul
std
dec
int3
adc
dec
out
inc
psllq
cwtl
push
pop
lds
outsb
ret
jns
into
pop
and
add
or
push
mov
insl
fwait
es
les
lods
stos
cwtl
les
shrl
push
mov
add
pop
xor
shrb
popa
xchg
gs
sub
inc
add
hlt
imull
gs
push
lea
imul
mov
insl
scas
sbb
pop
mov
cmpsb
inc
std
outsb
sub
sbb
mov
repnz
insl
aam
jbe
mull
inc
push
inc
in
mov
inc
lret
movsl
clc
movsb
mov
jle
lods
fwait
mov
mov
rolb
out
jle
adc
repnz
cmp
ss
dec
js
xchg
mov
mov
andb
shll
inc
addl
fstps
mov
dec
into
xchg
shrb
jge
popa
xchg
lea
mov
jo
xor
xchg
and
popa
push
pmulhw
push
xor
cmp
ljmp
lcall
fldenv
out
and
mov
xchg
aaa
cmp
aaa
rcrb
ret
jo
aas
mov
shll
dec
inc
push
mov
jecxz
cmp
ss
mov
xor
sub
dec
xor
fst
sahf
js
js
imul
hlt
mov
push
iret
nop
mov
or
push
fstpl
jg
nop
mov
push
push
inc
xor
inc
dec
dec
push
jge
mov
xchg
cmp
aam
xchg
jno
xchg
dec
lds
cld
in
rep
repnz
xor
dec
aam
jbe
mov
cmp
adc
hlt
mov
filds
lock
addr16
and
negl
or
inc
leave
inc
mov
lea
mov
adc
xor
sbbl
and
out
and
dec
lock
pop
es
lret
fnsave
outsl
pop
dec
add
mov
test
rolb
cmp
pop
out
push
cmp
shll
mov
in
arpl
outsl
inc
cmpsl
popf
or
jecxz
ret
test
fs
enter
add
dec
mov
dec
mov
in
jl
in
pop
repnz
fcmove
jne
out
push
sub
scas
hlt
imul
test
xor
mov
leave
fdivl
and
jnp
add
data16
mov
xor
popf
dec
loop
mov
push
cmpsl
push
add
adc
hlt
cmp
rclb
sahf
inc
xor
insl
and
ss
scas
and
jo
mov
mov
cs
jl
and
into
mov
mov
inc
out
sar
fimuls
mov
inc
adc
mov
les
push
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
jmp
enter
cmc
jne
mov
sub
icebp
lret
jle
push
jns
jle
cmp
or
adc
dec
push
cmp
or
std
int3
mov
sub
lods
pop
xchg
lcall
dec
sti
fucom
pop
out
sub
repnz
cmpsb
inc
lsl
add
in
push
pop
rolb
push
mov
nop
xor
inc
mov
xor
cmpsb
ss
arpl
rcrl
add
pop
cmpl
dec
lret
mov
mov
adc
pop
adc
xchg
mov
cmp
mov
int
adc
daa
xchg
fwait
sti
or
adc
push
leave
sbb
sti
xchg
and
jg
nop
xchg
ja
adc
rcrl
mov
jb
jne
xchg
arpl
pushf
scas
icebp
jge
orl
ljmp
pop
int
push
adc
aaa
fisubl
orb
mov
push
mov
lret
dec
cmc
mov
xchg
test
mov
inc
imul
movsl
cli
in
adc
mov
pop
lods
jecxz
stc
pop
jl
and
dec
or
cmp
sub
mov
adc
jb
in
fs
js
and
loopne
push
arpl
fs
mov
xlat
mov
sbb
cmp
adc
stc
xchg
xchg
lret
mov
testb
shl
cmp
xchg
out
clc
mov
and
sub
add
jo
xor
lahf
inc
push
repz
int
cmp
insb
cmp
fcomi
push
mov
shlb
out
mov
mov
ljmp
pop
xor
imul
hlt
das
mov
clc
movsl
jb
loope
jo
and
jae
or
adc
aas
jne
out
je
les
in
setg
xlat
mov
and
in
dec
pop
mov
cltd
lret
and
lcallw
test
or
inc
pop
jno
adc
fiadds
jle
sub
or
pop
aaa
movsb
inc
or
xchg
movsb
sub
cmpsb
jecxz
andb
in
cmovb
fstpl
mov
pushf
pop
lods
jmp
popa
inc
mov
push
cmp
mov
dec
das
aam
je
xor
xor
mov
or
jp
pop
daa
dec
add
or
mov
ret
sbb
mov
jns
jb
ja
mov
stos
pushf
test
mov
mov
add
mov
jne
sbb
mov
cld
sub
mov
inc
mov
mov
mov
in
adc
sub
dec
mov
cmpsl
cmp
jbe
push
add
lock
iret
xchg
sub
sti
ds
int
push
dec
jno
insb
xchg
push
pop
jns
xchg
xor
ret
add
add
jecxz
ret
out
xchg
sar
loope
push
lahf
int3
add
mov
ret
xchg
push
scas
jecxz
ss
mov
das
pop
adc
movsb
or
jns
popf
inc
pop
mov
pop
mov
jl
cmpsb
xchg
mov
sbb
xchg
adc
xchg
mov
popa
inc
fidivs
incb
push
fistl
pop
jo
and
js,pt
xchg
xchg
add
fstps
sbb
gs
mov
nop
jo
jmp
jecxz
mov
sub
mov
scas
lret
adc
sahf
leave
mov
outsl
int3
test
mov
sbb
loop
outsl
int3
jle
dec
push
mov
xor
add
cmp
je
movl
lea
mov
jmp
push
fdivp
imul
mov
cmpb
jle
jns
jle
xchg
mov
sbb
dec
vpsadbw
xor
sahf
div
mov
and
dec
xchg
jnp
mov
xor
sub
les
sbb
adc
inc
inc
movsl
clc
adc
adc
shlb
lret
adc
jbe
cmp
mov
mov
pop
lea
inc
nop
div
lds
xchg
test
xor
mov
lds
lods
aad
jae
push
mull
fwait
push
ret
cmp
mov
xor
inc
mov
lret
daa
dec
mov
leave
push
jecxz
repz
insb
mov
cmc
in
and
divb
mov
pop
sub
sub
adc
int
sbb
imul
jbe
cwtl
lods
xchg
pop
sti
movsl
repz
cmpb
cwtl
and
aas
ds
xor
shll
int
stos
test
push
test
arpl
cwtl
idivb
xchg
ljmp
ja
and
imul
xchg
mov
cmpsb
jp
or
xchg
jne
push
popa
push
push
inc
xor
inc
icebp
test
dec
jmp
mov
mov
outsb
in
mov
mov
aam
aam
jge
mov
mov
lret
test
inc
inc
sbb
sti
incl
loopew
ret
add
or
inc
add
fwait
and
inc
push
and
mov
and
and
loope
jb
jmp
outsb
mov
pop
push
clc
adc
dec
shrb
mov
xchg
mov
ror
dec
ret
dec
push
fucom
mov
and
out
mov
sub
mov
push
outsb
cmp
and
jae
push
notb
stos
sub
divl
jnp
lock
adc
mov
adc
mov
mov
inc
jecxz
ja
dec
adc
push
jae
jl
jle
jmp
push
inc
sbb
jg
addr16
fists
inc
js
scas
pushf
cld
add
inc
fdiv
and
js
push
dec
addr16
and
imul
cli
push
mov
fbstp
mov
xchg
push
cmp
lock
paddsb
pop
mov
inc
cs
fidivs
mov
jecxz
sbb
loop
and
out
adc
mov
int
mov
cmp
dec
fsubl
push
loope
pinsrw
lahf
mov
mov
adc
out
scas
xor
mov
pop
push
imul
inc
stos
fistl
fwait
ja
inc
das
cmp
jns
in
icebp
mull
xor
mov
nop
cmp
jb
es
ret
pop
arpl
out
or
into
inc
sub
adc
cmpsb
or
cmpb
sbb
shl
pusha
popa
fidivrs
push
into
jno
loop
int3
jb
jnp
cmpsl
lods
or
push
sbb
and
je
jmp
and
mov
dec
mov
sbbb
and
push
sbb
push
in
fnstcw
inc
add
mov
call
pop
dec
cld
jb
and
inc
mov
aaa
mov
pop
or
cmp
test
setb
movsl
mov
pop
jmp
xor
js
outsl
mull
mov
aad
cli
movsl
cltd
cmpb
repnz
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
sub
jmp
pop
mov
and
jno
dec
call
clc
or
sbb
jle
pop
jg
jle
mov
cs
out
fstpt
mov
mov
and
jb
out
push
aaa
sub
jb
mov
mov
add
data16
sub
sbb
pusha
dec
cmp
test
inc
out
cmp
sbb
call
jecxz
add
lret
dec
and
inc
mov
xlat
sbb
cmpsl
fwait
push
sub
cmp
xor
cmpb
inc
push
enter
cld
scas
gs
cmpsb
test
cmp
daa
sti
push
xor
jecxz
push
xor
mov
sub
test
nop
pop
xor
dec
or
xchg
aam
cld
mov
xor
hlt
add
adc
movsb
xor
outsb
or
inc
out
imul
xor
sahf
fldcw
ja
ss
jge
inc
push
movsl
pop
popa
or
xlat
jnp
jno
adc
nop
ljmp
cmp
dec
insl
lds
xor
mov
insb
mov
loopne
loope
shl
adc
push
fmull
cmp
adc
insl
xchg
jle
xlat
in
arpl
pop
or
aaa
dec
sbb
mov
leave
add
dec
xchg
addr16
xor
ljmp
pop
pushf
adc
fldt
jae
fwait
sub
add
out
repz
cld
pop
xor
cmp
xor
shl
dec
call
mov
xchg
daa
clc
dec
pushf
cli
or
popa
inc
xlat
out
push
adc
xchg
jbe
lock
shl
push
je
aaa
test
loopne
add
mov
add
movsl
xchg
mov
int3
lods
daa
lcall
jnp
scas
in
and
jo
mov
rol
sub
ds
testb
adc
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
pushl
call
mov
dec
mov
jmp
movl
mov
xor
push
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
inc
mov
incl
mov
xor
xor
mov
add
xorl
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
jmp
imul
jge
push
pop
loopne
lahf
clc
and
jle
pop
jg
jle
call
int3
nop
lcall
add
fmul
pop
addb
std
cmp
adc
inc
loope
nop
mov
sarl
aad
sbb
jle
xor
or
add
sahf
movl
test
inc
push
cmp
adc
sbb
cmpb
mov
loope
gs
es
lcall
imul
loope
push
mov
jae
call
sbb
xchg
rorb
mov
call
es
sti
mov
sbb
xchg
les
cltd
lcall
lods
rcrl
gs
je
add
andps
outsl
cmp
mov
inc
mov
sahf
jne
ds
xchg
push
sub
popfw
ss
fists
leave
mov
mov
mov
xor
add
xchg
xchg
test
and
fs
ljmp
idivb
ss
mov
ss
push
cmp
sti
sbb
and
pop
fcomip
cmp
shr
pop
jns
jo
cmp
push
xchg
xor
adc
mov
addl
xchg
repz
xlat
xor
subl
movsl
inc
sti
sti
cltd
test
xchg
cmp
out
pusha
fstpt
jecxz
mov
sti
push
aam
and
iret
lahf
stc
cs
and
enter
sarb
std
int
int
push
aam
jle
js
aaa
in
in
and
cmp
adc
int3
jbe
daa
outsl
dec
push
inc
sub
stos
aas
xchg
xchg
les
sbb
add
inc
out
inc
and
or
xor
subl
test
mov
sti
sub
outsb
mov
xchg
inc
int
inc
or
inc
cld
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
jmp
sahf
jb
push
pop
jl
jb
ret
mov
jnp
sub
les
jle
add
sub
iret
sub
or
out
hlt
in
out
and
fs
lahf
fisubl
dec
imul
pop
push
adc
jle
cld
pop
push
jle
push
xchg
sub
leave
push
sub
sbb
movsl
icebp
and
scas
mov
cld
mov
push
iret
mov
sub
in
dec
pushf
inc
sub
inc
xchg
sub
loop
pop
bound
int
mov
mov
jmp
push
adc
push
pusha
into
dec
call
or
jae
jb
popf
pop
lods
mov
adcl
xchg
inc
and
in
pop
cpuid
xchg
pop
popf
or
adc
cltd
movsb
add
mov
xor
pop
movsb
jbe
xchg
dec
std
cmp
jne
aad
in
push
jnp
aas
push
and
add
movsb
xchg
mov
hlt
jmp
or
jmp
push
dec
stos
aam
inc
imul
sub
mov
bound
or
stos
sbb
das
sbbl
mov
adc
pusha
xor
cmp
iret
xorl
pop
jl
xchg
jge
into
mov
mov
cmp
ljmp
enter
aad
pop
sbb
sub
xchg
xchg
sub
adc
lock
add
pusha
out
mov
push
int3
dec
sub
push
jecxz
sub
fstpl
rolb
test
cli
mov
sub
in
pop
sub
inc
lock
in
inc
and
pop
or
shlb
or
pop
jmp
out
pop
inc
xlat
mov
sbb
daa
jb
sbb
cmpsl
fwait
push
lret
jle
push
iret
mov
cmp
or
xor
add
cmpl
mov
rorl
jae
shll
out
or
add
lods
xor
adc
leave
mov
mov
pop
loop
xchg
nop
mov
fcom
sti
in
jg
and
adc
sbbb
repnz
leave
repnz
xchg
sub
fbld
adc
pop
sub
pop
pop
mov
pushf
xchg
fimull
testl
leave
enter
lods
in
arpl
lea
mov
scas
inc
xchg
addl
mov
pop
aas
bound
dec
int
in
push
lret
addr16
xor
loopne
jbe
js
mov
hlt
pusha
xchg
sbb
test
push
mov
shlb
xlat
andl
adc
cmp
insb
push
jbe
sub
and
fisubrl
xchg
and
sbb
test
adc
cmp
or
xor
and
mov
mov
inc
pop
pop
std
mov
and
lods
shlb
push
movsb
out
sub
push
or
lds
dec
mov
mov
sub
stos
adc
pop
popf
jb
mov
mov
rcl
std
adc
push
mov
mov
movl
mov
jmp
xchg
jb
jg
dec
mov
cs
pushf
dec
and
jle
les
jle
adcb
mov
data16
mov
sub
dec
mov
je
or
in
xorl
add
cmpsl
mov
leave
roll
aam
adcb
outsl
adc
lret
or
mov
stos
es
lods
or
jg
test
jle
cmpsl
xchg
in
inc
add
push
lods
cli
sub
fidivrs
dec
arpl
sub
mov
mov
or
pop
mulb
add
or
data16
xchg
adc
rorb
out
lret
xchg
inc
adc
xlat
iret
ret
or
movsb
cmp
or
test
xor
mov
lret
loopne
xchg
xor
enter
and
or
sbb
movsb
enter
les
mov
add
mov
gs
mov
mov
leave
pop
ficomps
loope
sub
or
jo
dec
or
outsl
in
add
fnsave
push
sub
cmp
int3
ljmp
daa
and
pop
jg
jo
data16
in
pop
mov
add
mov
lea
insl
lret
xchg
pop
ja
xchg
or
pusha
jp
arpl
or
xor
mov
mov
int
push
pushf
mov
pop
pop
jge
mov
mov
sahf
enter
jne
cmpl
les
mov
fstl
imul
pop
xor
out
in
cltd
je
push
mov
xor
hlt
and
jnp
and
test
push
insl
testl
or
pushf
aas
test
push
inc
lods
xor
pop
imul
repz
pop
dec
xchg
enter
dec
fimuls
push
inc
cmp
jp
sub
dec
stos
add
icebp
sbb
inc
xor
jnp
sbb
out
inc
xchg
stos
lds
or
inc
test
add
inc
xor
pop
pusha
mov
sbb
cli
fimull
mov
bound
ljmp
leave
jmp
popf
lcall
daa
pop
hlt
outsl
add
pop
mov
imul
xorl
xor
out
and
aad
adc
fcomps
imul
add
cmp
imul
push
repnz
fdivrl
xor
ret
sbb
push
dec
dec
xchg
dec
je
bound
mov
dec
push
pop
ds
push
pop
push
or
inc
mov
cmp
cwtl
dec
push
cs
mov
jno
cmpsl
les
xlat
jmp
pushf
fwait
out
or
add
iret
xchg
scas
mov
pop
or
push
cmpsl
push
cmp
jle
flds
inc
pop
and
xchg
push
mov
sbb
nop
into
add
and
sbb
mov
subl
add
sub
inc
clc
cmp
add
add
dec
and
add
pop
add
add
pop
arpl
dec
add
out
xor
les
jle
imul
xor
cmovne
out
jns
pop
mov
dec
dec
subb
ljmp
enter
adc
dec
add
rorb
xchg
fsubr
mov
cltd
or
in
loopne
mov
fmuls
or
jp
push
movsl
sub
xchg
sahf
jge
loop
ficoml
orl
or
pop
xor
dec
js
lret
out
movsb
xchg
jmp
je
xor
cmp
adc
pop
inc
mov
adc
pop
outsl
repz
vsqrtss
sub
test
lds
loopne
imul
mov
int
std
test
mov
outsb
lcall
xlat
add
inc
out
push
inc
repnz
nop
sub
sahf
push
outsl
es
mov
loop
pop
mov
xor
les
mov
sub
test
mov
lcall
cmp
outsb
mov
inc
push
das
xorl
test
sar
mov
mov
stos
test
sub
sub
mov
stc
inc
or
sub
cwtl
pushf
test
adc
mov
mov
and
bound
ss
cmc
or
and
fisttps
jbe
push
and
icebp
fnstsw
and
dec
pop
lahf
mov
pushl
out
fldcw
add
les
mov
rclb
ss
pop
sub
scas
cmc
mov
pop
mov
pop
lret
arpl
xlat
hlt
dec
xchg
sbb
add
outsl
test
insl
int
inc
lcall
shll
push
fnstsw
cli
sub
xchg
in
xchg
in
jo
pop
mov
push
dec
sahf
out
mov
dec
add
pop
sbb
adcb
push
repnz
cmp
flds
outsl
mov
or
mov
dec
push
divl
js
rclb
fcmovne
cmp
inc
or
cld
add
insb
jne
mull
lock
pop
pop
mov
jle
adc
icebp
lret
test
test
mov
je
out
adc
and
imul
lahf
jmp
lret
cs
sbb
loope
sbb
push
fwait
sti
ret
sbb
out
xchg
jp
mov
inc
loopne
sbb
sti
mov
or
mov
push
fnstcw
es
scas
dec
mov
pop
test
mov
inc
call
inc
push
add
cmc
add
and
repnz
fwait
jp
hlt
cmp
pop
loope
flds
les
xchg
inc
mov
push
push
jo
add
mov
repz
mov
pop
cmp
mov
jl
outsb
inc
nop
cmpsl
repnz
lret
bnd
push
enter
mov
sub
bound
xor
xchg
xchg
lds
daa
cld
jmp
jbe
imul
pushf
mov
in
in
cmp
jne
add
mov
andl
mov
subl
xor
or
mov
andl
add
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
jmp
movsb
jb
push
cld
pop
gs
call
clc
jb
cmp
jle
jns
jle
push
push
scas
push
jmp
cwtl
or
mov
adc
adc
xor
shrb
loope
xor
push
fucom
ja
cli
mov
xchg
les
cmp
lahf
in
add
xchg
ret
adc
in
push
cmp
cmp
dec
add
lods
push
in
into
jmp
pop
popf
das
icebp
jp
xchg
cmc
cwtl
fists
aaa
mov
or
xchg
pusha
and
sti
push
xchg
lcall
dec
ljmp
inc
mov
imul
xor
out
aaa
mov
in
dec
and
xor
addr16
push
subl
pop
roll
push
stos
scas
pop
sub
lcall
int3
leave
loope
sbb
sbb
insb
ja
fucom
pushf
or
js
aam
fcmovb
inc
stos
mov
push
pop
pop
push
xor
xor
mov
or
or
aam
cmp
cmp
jno
xchg
mov
push
mov
push
gs
sbbl
jns
xlat
scas
pop
lahf
xlat
jg
push
dec
xor
or
xchg
inc
std
add
ret
push
outsl
imul
stc
jg
sub
mov
lahf
push
in
mov
mov
mov
movsl
gs
adc
mov
mov
enter
popf
push
lds
adc
add
call
outsl
dec
and
jns
adcb
popf
mov
bound
xchg
mov
mov
cs
mov
cmp
xor
dec
repz
fnstsw
and
push
iret
xlat
cld
adc
rorb
push
out
sbb
xchg
ds
mov
ret
fimull
and
lret
scas
pusha
out
xlat
sub
cld
hlt
out
jl
cmp
push
mov
lret
and
jns
or
scas
int
andl
adc
adc
mov
xchg
mov
sbb
ficoms
adc
popa
dec
and
adc
and
jbe
mov
popf
lret
sarb
int3
nop
cmpsl
add
xor
push
and
rcl
clc
and
xor
sbbb
xor
mov
aaa
jo
inc
lea
data16
pop
pop
mov
and
and
mov
cmp
xor
mov
inc
jnp
imul
sbb
mov
insl
loopne
subb
popf
daa
xlat
and
jnp
mov
jle
pop
rol
repz
insl
ss
inc
aad
mov
lds
mov
push
jb
stos
lock
fiadds
les
push
mov
pop
rorb
or
stc
sbb
or
test
push
mov
mov
test
out
or
jge
push
cmp
inc
adc
movsb
shrl
xor
sub
addr16
cld
dec
ret
push
mov
sub
movl
movl
mov
mov
sub
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
jmp
and
ss
cmc
lock
sahf
rol
adc
jle
aas
jle
dec
jns
jle
inc
jbe
je
push
push
faddl
jae
jl
jg
mov
sub
cmpsb
pop
enter
inc
cld
mov
xchg
outsb
or
cli
insb
push
insb
push
popa
int3
out
aaa
pop
into
fwait
rorb
lahf
pop
cmpsl
jp
sub
nop
adc
sti
repnz
and
mov
push
lock
adc
sub
pop
xchg
jp
jno
arpl
cs
data16
sbb
push
test
cmp
dec
cli
addr16
daa
mov
jne
push
and
xchg
push
cmp
sub
ss
push
jns
pop
js
jb
add
push
jecxz
cmp
addr16
or
dec
lcall
mov
lock
mov
mov
xor
mov
push
notb
xor
xchg
pop
xlat
addr16
mov
jo
sub
rcr
xor
pop
cmp
in
fistl
and
int
lahf
orl
sbb
push
sbb
xor
pop
aad
popa
adc
xchg
xlat
mov
or
mov
xchg
shrb
jge
lcall
daa
sahf
push
mov
outsb
xor
and
dec
dec
inc
leave
mov
mov
jge
mov
sub
jo
or
inc
xchg
inc
pop
push
out
push
mov
dec
roll
insl
mov
imul
jge
xlat
sbb
loop
dec
cli
outsb
and
mov
das
add
sbb
gs
jae
sub
mov
fnstsw
inc
gs
adc
lcall
dec
mov
rcrb
dec
add
scas
cmc
aaa
test
and
pop
jne
sbb
add
cmp
push
mov
fcos
push
movsb
push
push
lcall
cmp
mov
push
je
ds
cwtl
dec
jmp
nop
jl
cmp
jle
xor
clc
mov
pop
or
nop
das
imul
popa
add
scas
dec
int
xchg
jb
repnz
pop
and
sub
outsb
stos
push
push
imul
push
and
sti
insb
sub
push
add
sbb
dec
and
cld
scas
sub
in
lods
xor
xchg
dec
loopne
sarl
nop
mov
push
cmpsl
jns
cs
jp
add
xchg
inc
jmp
and
pop
notb
lcall
loope
add
in
ret
cmpsl
dec
ret
xchg
div
movsl
sbb
lahf
aad
loopne
cwtl
xor
mov
jbe
sub
mov
out
rcll
enter
inc
mov
jp
flds
fsubrl
loopne
out
xchg
jae
std
push
popl
pop
scas
mov
jmp
xchg
into
dec
mov
dec
or
xchg
mov
xlat
mov
lds
cmp
nop
cltd
loop
outsl
jne
sub
adc
xchg
movsb
push
lods
push
and
sub
fcmovu
pop
bound
ret
push
repnz
loop
or
mov
insl
inc
jg
out
in
shlb
adc
sarb
das
out
mov
int3
sub
fildll
fisttps
push
add
outsb
mov
stc
ss
xchg
dec
xor
lock
cmp
adc
adcl
ss
pop
adc
insl
jl
addr16
inc
fnstenv
bnd
aaa
scas
std
das
mov
jl
cld
xchg
in
int3
es
cmp
inc
fmull
mov
mov
or
mov
mov
adc
mov
sbb
mov
push
sub
lea
mov
xor
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
jmp
call
mov
dec
mov
push
inc
or
jle
dec
jns
jle
push
pop
ja
push
jae
out
int
push
fisttpl
or
push
cmp
int
cmp
xor
fisttpll
fstps
fwait
lret
imul
and
cmpsl
gs
fldenv
mov
lock
push
test
mov
push
xor
cmp
cmp
aam
sub
cmp
fldenv
and
push
adc
rorl
or
outsb
shl
jg
les
bound
cmpsb
fidivs
test
mov
daa
and
testl
dec
mov
mov
lea
fwait
dec
fimull
xchg
les
out
das
add
jmp
pop
fimull
jg
je
cld
jecxz
int
in
stos
cmpsb
adc
mov
xor
stos
jmpw
aaa
adc
sbb
cmp
jl
adc
in
mov
push
xlat
xor
push
in
mov
cmp
xorb
nop
ret
add
stos
lret
and
jle
jnp
pop
jle
cld
inc
aad
cmp
pop
add
pop
outsl
movsl
ds
jg
and
mov
in
mov
shl
gs
add
push
out
lods
nop
mov
push
pop
mov
lcall
scas
jge
je
mov
rolb
sarb
dec
mov
ljmp
sarl
call
mov
xchg
idivb
arpl
ret
lret
push
fs
cwtl
fadd
ffreep
push
test
cmp
icebp
pop
jl
rcrb
in
jno
push
jb
xchg
jno
shlb
ficomps
mov
xchg
jb
mov
and
dec
pop
mov
mov
dec
xchg
imul
or
mov
repnz
iret
mov
imul
mov
cmpxchg
sub
mov
jno
mov
mov
fdivs
shlb
clc
jno
adc
sar
lret
push
push
jae
mov
repz
je
shll
push
nop
sbb
ror
and
mov
mov
bound
mov
lret
cmp
xchg
xor
roll
fs
ja
sub
and
data16
xchg
cmp
push
dec
pop
mov
xchg
cmp
and
cmp
xorb
or
or
push
test
insb
xchg
push
leave
pop
mov
xchg
fldcw
pop
xchg
movb
cltd
stos
push
lret
loope
lea
adc
jns
inc
mov
mov
pop
add
in
int3
or
jp
pop
inc
mov
sbb
cmc
clc
xchg
lods
je
jmp
jb
pop
in
aam
leave
aam
mov
dec
inc
adc
lock
sub
inc
mov
inc
mov
dec
add
popa
in
rclb
cmpsl
xchg
pop
push
shll
and
xchg
adc
mov
test
mov
loop
out
fcomps
sub
adc
lock
mov
mov
data16
dec
out
pop
or
aas
add
enterw
fndisi(8087
push
mov
jns
push
jmp
cmp
ffree
dec
push
fs
iret
scas
jp
addr16
dec
outsl
mov
std
js
jmp
pop
lcall
scas
sub
mov
mov
xor
mov
xor
sbb
mov
xor
addl
xor
add
sbbl
add
div
mov
jmp
inc
push
sti
sbbl
mov
pop
popf
jle
dec
jns
jle
outsl
jg
xorb
push
mov
cmp
lock
mov
inc
sbb
push
dec
das
inc
loop
lds
push
add
outsb
inc
sub
and
imul
push
pop
dec
test
adcl
jnp
cli
cmc
mov
xor
fnsave
test
dec
push
aad
add
jne
iret
dec
enter
adc
inc
push
jbe
flds
repnz
sahf
sub
ljmp
notl
push
dec
stos
lds
andl
in
movsl
push
aas
loopne
mov
clc
repnz
cmc
fcoml
fdivp
jbe
pop
stc
cld
les
adcl
inc
popf
sub
pop
es
jle
mov
imul
pop
pop
adc
aam
dec
gs
adc
into
fcoms
sahf
push
xor
ja
mov
fbstp
sub
insb
int
and
xor
into
adc
jmp
xchg
popf
std
int3
sub
call
push
in
sbbl
decb
fcomps
adc
ret
sub
jb
mov
push
inc
scas
cmc
xlat
xchg
rorl
or
xchg
jo
imul
sub
out
adc
jmp
sbb
mov
mov
dec
dec
stos
push
aam
out
scas
rcrl
push
dec
mov
pop
dec
xchg
sarb
in
hlt
and
adc
push
mov
add
jle
pop
cmc
jg
loop
add
int3
stos
push
adc
cmp
mov
cli
hlt
andb
mov
mov
jb
push
mov
scas
dec
push
dec
push
jne
xchg
mov
xchg
lock
not
stc
mov
push
inc
clc
mov
popa
int
jno
or
or
cmpb
ja
mov
jbe
outsb
mov
adc
mov
inc
xor
cmp
xor
inc
pushf
or
sub
ss
add
int3
dec
ret
sbb
aad
push
xor
repz
sahf
xor
test
add
rcl
sbb
mov
dec
fwait
call
and
sub
pop
cmpsl
push
mov
xor
or
bound
scas
mov
inc
int3
inc
jbe
adc
sub
sub
xchg
mov
clc
sahf
mov
mov
mov
adcb
mov
dec
in
cmp
jo
xor
mov
cmpsl
fldenv
pop
dec
add
mov
cmpb
jmp
cmp
pop
aam
pop
adc
mov
iret
adc
iret
cmp
stos
mov
jecxz
icebp
iret
les
and
cmc
mov
adc
pop
push
adc
repz
test
push
push
jae
xchg
lea
testl
ljmp
loope
dec
cmpsl
js
ljmp
pop
sub
sbb
popf
sub
stos
xchg
jecxz
cmpsb
bound
xor
test
xchg
xchg
movsb
push
mov
cmp
out
pop
loop
push
adc
mov
cs
std
gs
shrl
aas
and
or
mov
pop
sbb
adc
jbe
cli
test
inc
jp
push
clc
test
cmc
mov
push
cmpsb
push
aas
xor
dec
add
in
push
popf
sbbb
push
fisttpl
sub
cmpsb
dec
fists
movsb
jecxz
popf
cltd
sti
mov
inc
mov
int
pop
sub
jno
xchg
stos
out
mov
ljmp
dec
inc
out
add
mov
movl
jmp
xchg
mov
jae
popf
cld
ja
or
out
ret
jle
dec
jns
jle
jbe
xor
popa
and
sbb
fistpll
cmp
nop
fisttps
icebp
xor
outsl
clc
inc
daa
clc
mov
xor
sbb
jle
dec
mov
imul
das
or
jae
cmp
push
aam
fidivrl
pop
dec
cmp
sbb
stos
inc
aad
dec
xor
cmp
pushf
jnp
rorb
loopne
jb
fnstenv
sbb
jo
xchg
sbb
xchg
sub
push
mov
in
insl
cmp
lret
out
stc
dec
mov
xchg
notl
out
imul
mov
push
dec
aas
adc
int
xchg
cmp
hlt
hlt
movlps
cmc
sbb
adc
ljmp
mov
imul
andl
stos
inc
sbb
mov
pop
pop
das
imul
or
xchg
inc
mov
adc
jmp
sti
cs
or
outsl
add
push
xchg
sub
sahf
hlt
incb
mov
mov
push
lods
call
push
fdivrs
nop
and
test
inc
aas
js
pop
repz
sub
pop
mov
pushl
xor
mov
popf
sbb
ret
ss
mov
and
dec
lret
or
and
aad
js
popf
and
xor
dec
sbb
and
xchg
mov
lods
rorl
sbb
stc
sbb
push
add
xor
mov
dec
adc
neg
repnz
inc
mov
lds
add
jnp
test
or
loop
sbb
jp
adc
data16
sub
sti
mov
add
xchg
out
mov
jnp
pop
ljmp
in
fsubl
and
jae
xor
and
int
cmp
subl
cltd
ret
inc
sub
cmp
inc
es
mov
sub
inc
xchg
lahf
adcb
scas
neg
xor
pop
sbb
lea
adcl
bound
sarb
or
out
stos
push
jb
int
push
push
in
lea
jg
dec
jno
movsl
les
std
das
cmpsl
icebp
mov
inc
fimull
sub
in
and
cmp
movsl
ss
xor
jbe
mov
jbe
imul
fnstcw
out
mov
pop
jg
add
jno
mov
jno
arpl
jecxz
mov
inc
jo
mov
jmp
test
sti
jg
jp
dec
xchg
jmp
and
insb
jmp
push
add
imul
add
jp
inc
sbb
les
andl
xchg
pop
cltd
fidivl
mov
pop
pop
pop
mov
nop
cltd
int
jle
stc
push
sbbb
mov
aam
push
lods
icebp
test
andb
add
sub
jp
push
repnz
sbb
jbe
nop
xchg
arpl
ficompl
pop
sti
hlt
js
subl
or
and
jbe
lret
mov
out
dec
repnz
mov
sbb
dec
mov
or
or
mov
mov
mov
push
pop
or
mov
lods
aam
pop
dec
shll
push
dec
sbb
rorl
lret
xchg
repnz
cltd
std
mov
dec
ret
int
leave
lea
inc
out
lret
push
inc
sub
mov
jp
adc
insb
scas
and
mov
test
add
int
push
xchg
jmp
adc
imul
cmp
inc
aam
dec
add
movl
cmp
movl
je
movl
lea
addl
mov
xor
mov
not
mov
orl
imul
movl
mov
movl
mov
cmp
je
mov
mov
sub
sub
mov
orl
mov
xor
add
pop
pop
jmp
pop
add
or
add
aad
out
iret
jle
dec
jns
jle
aad
mov
cmp
jecxz
xchg
outsb
stos
cmp
xor
or
jbe
mov
ficomps
pusha
jno
jmp
cmp
or
push
cmp
xor
dec
inc
loopne
mov
aam
icebp
mov
stos
push
stc
inc
cmp
sub
cmp
cwtl
std
dec
or
aad
das
lock
sahf
mov
in
aaa
imul
fwait
push
aam
and
inc
cmp
mov
jae
mov
mov
fcoml
stos
mov
lods
mov
add
sub
or
addr16
into
sub
and
or
movsb
test
sub
sbb
jle
cld
adc
mov
and
lock
loopne
pusha
mov
ret
mov
insb
xorl
mov
loop,pt
dec
add
mov
int
das
aas
adc
mov
in
jnp
outsl
loopne
jmp
popa
xor
int3
in
mov
push
repnz
popf
fistps
and
add
enter
dec
xor
sbb
xlat
sbb
pop
popa
pop
imul
add
adc
cld
clc
add
push
ret
push
pop
mov
andl
inc
aad
aas
push
pop
inc
pushl
fadds
inc
lret
mov
fmuls
cmc
cmpl
xchg
sub
shrl
or
dec
mov
insl
int3
leave
inc
roll
jl
mov
out
pop
pop
fimuls
and
push
sbb
inc
call
insb
or
movsl
shr
ror
inc
sbb
aam
inc
cmp
adc
inc
push
sti
cmpb
jmp
out
testb
ret
mov
bound
scas
push
popf
popa
divl
mov
mov
sub
push
ds
adc
fdivs
cmp
push
rorb
and
shrb
adc
fisttpll
add
arpl
inc
add
outsb
push
push
xor
int
pop
fisttps
js
jp
das
inc
lods
repz
push
test
cmp
push
or
xchg
xchg
add
fmull
cmp
jb
stos
jb
sbb
fsubl
mov
out
xor
jmp
mov
mov
addr16
shrl
mov
inc
scas
add
cwtl
test
adc
or
ja
mov
inc
mov
adc
cmc
ljmp
mov
mov
or
aad
shr
incl
fs
fdiv
dec
jne
push
outsl
rcl
divl
mov
addl
mov
pop
pop
out
fcomps
jns
out
mov
push
loop
jns
push
mov
jmp
mov
add
jnp
insb
and
cli
xchg
lret
ljmp
mov
mov
jno
shlb
das
xchg
insl
out
cli
ret
xor
jo
lret
dec
shlb
inc
sbb
fiaddl
iret
push
ja
sub
cmpsl
jne
sub
cwtl
outsl
fdivrs
int3
add
pop
jle
fdivl
pop
pop
outsb
insb
aaa
aas
lods
loop
pop
mov
push
loope
add
sti
jns
inc
jmp
cmp
repnz
inc
pop
pop
push
xor
out
lea
xchg
xor
adc
or
mov
mov
or
popa
inc
iret
push
aaa
mov
jmp
add
jne
outsl
and
lea
dec
dec
sbb
sub
dec
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
jmp
ret
or
insl
pop
jmp
pop
sbb
or
jle
dec
jns
jle
lret
testl
cmc
fwait
lret
cmc
add
out
dec
movzbl
push
fcmovu
mov
insl
lahf
in
inc
push
mov
or
mov
mov
xor
mov
enter
sarl
inc
xchg
aad
xchg
mov
mov
adc
sub
das
lret
mov
mov
push
xchg
mov
mov
mov
mov
or
imul
sub
add
mov
xchg
in
xchg
push
loopne
dec
ret
fldt
imul
out
stos
cwtl
add
enter
clc
ret
sbb
bound
sub
push
cmp
mov
into
imul
je
cmp
push
int
jno
add
dec
xchg
dec
push
push
or
iret
push
sarl
aad
stos
rorb
rorl
adcl
push
scas
clc
xchg
adc
push
jl
mov
into
outsb
aaa
or
fs
mov
cltd
mov
cmp
cs
or
imul
mov
shl
sbb
adc
and
mov
cld
mov
movsl
sub
sub
cs
sbb
sbb
xchg
ds
jae
cmp
or
push
sbb
popa
jbe
andl
mov
adc
xorl
adc
scas
repz
aam
sbb
arpl
rcl
or
push
punpcklbw
jbe
sahf
sbb
out
insb
cmp
xor
and
xor
adc
dec
jg
mov
lret
sahf
sbb
pop
mov
ret
fcoml
fstps
out
imul
push
inc
leave
adc
jg
cmp
std
sbbb
push
sbb
pop
mov
xor
jae
inc
popf
add
inc
mov
mov
rcll
cmpsl
outsb
sub
xor
dec
jge
sub
mov
andl
and
sbb
inc
pop
adc
test
xchg
aam
imul
js
xor
cmp
cmp
daa
push
adc
sarl
lcall
lock
jae
mov
pop
out
jle
test
sub
add
xlat
push
lods
adc
xchg
scas
ja
movb
roll
sub
sbb
or
dec
hlt
dec
pop
test
jge
or
ss
mov
sbb
add
fsubs
and
sub
int3
mov
dec
icebp
aad
jns
jns
or
fistpl
sbb
lds
lods
pop
out
xchg
cs
push
sbb
ds
movsb
cmp
mov
and
andb
ss
push
mov
arpl
jg
sti
icebp
pushf
mov
lret
rcrb
and
cmp
adc
pop
sub
subb
das
xor
popa
xchg
jae
jns
dec
dec
sub
rolb
xchg
cs
mov
dec
dec
inc
repz
int
add
mov
xchg
push
add
xchg
jns
mov
into
and
cmpsb
push
loopne
jp
fcmovnb
xor
xor
sahf
das
add
or
pop
mov
xchg
sub
and
aaa
sbb
sbb
dec
rep
inc
adc
outsl
test
repz
xchg
add
insb
or
dec
push
out
mov
inc
push
adc
lret
and
cmp
loope
inc
lock
jmp
mov
mov
mov
mov
xor
mov
add
jmp
int
adc
push
pop
dec
xchg
leave
mulb
test
sub
pop
jle
dec
jns
jle
repz
xchg
sub
in
outsb
repnz
sub
mov
dec
mov
and
inc
fcmovu
sbb
add
out
lcall
pop
push
cmp
aaa
shlb
or
mov
push
test
pop
aam
jo
aas
jae
sub
bound
outsb
xchg
inc
add
je
pop
popf
push
mov
jae
mov
or
test
push
push
or
pop
push
pop
jmp
stc
sub
cwtl
add
xor
inc
popf
add
cmp
stos
dec
mov
call
hlt
mov
xchg
push
rcll
add
push
clc
mov
scas
test
inc
dec
sub
cli
push
push
es
testl
pop
ds
sbb
mov
xor
out
and
sbb
mov
pop
mov
lret
mov
das
insl
xchg
add
adc
das
jns
lahf
push
or
mov
xor
adc
es
stc
adc
mov
pusha
pop
adc
add
js
pushf
pop
into
shl
lds
idivb
mov
push
pushf
in
add
jl
pop
call
xchg
aaa
decl
stos
dec
repz
lods
dec
mov
mov
sbb
sahf
jle
rcrb
fwait
xchg
cltd
push
inc
inc
ret
clc
xchg
dec
lahf
sahf
int
pop
mov
jg
cmp
cmpsl
lds
rol
inc
fwait
pop
aam
inc
scas
jae,pn
out
xchg
scas
decl
sbb
fistps
and
mov
dec
fiaddl
push
mov
test
mov
sub
and
ffree
adc
mov
rcll
mov
sub
mov
push
addr16
pop
dec
sub
mov
movsl
and
pusha
mov
movsb
jne
sub
push
inc
mov
das
lods
or
andb
mov
xor
data16
lahf
jecxz
push
push
dec
push
lret
sbb
mov
into
and
xchg
test
call
loopne
idivb
pop
call
mov
sti
loopne
stos
or
add
mov
mov
xor
hlt
pop
mov
jne
mov
inc
gs
mov
jnp
daa
fcoml
inc
push
lea
jmp
dec
or
imull
jge
ja
in
push
inc
nop
enter
cmp
lcall
sbb
adc
loopne
mov
out
popf
adc
mov
inc
pop
ja
dec
cmpsl
enter
repnz
fdivl
mov
fbstp
fisubl
je
pusha
sub
stos
mov
inc
mov
pop
push
mov
sub
test
dec
or
xchg
adc
adc
xchg
xchg
outsb
mov
fisubrl
and
pop
call
jp
xor
arpl
add
inc
int
imul
lods
and
mov
jnp
jge
sub
test
jo
imul
sub
clc
int
nop
aas
test
cmp
mov
xor
aas
test
into
jae
stos
fdiv
push
mov
fisubrl
push
xchg
push
push
pop
or
jle
xor
cld
popf
punpcklwd
dec
sbb
xchg
pop
cmp
mov
aad
mov
dec
pop
cmp
xor
dec
adc
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
jmp
fadd
test
rorb
insl
pop
jl
leave
test
sarb
dec
jns
jle
dec
roll
push
std
popf
jne
add
and
adc
jbe
xor
icebp
lahf
out
aas
loop
mov
or
repz
jne
xor
push
dec
mov
pop
loop
adc
sub
lret
mov
add
arpl
mov
andl
add
push
bound
pop
je
xor
mov
mov
in
test
push
lds
mov
lock
ret
pop
mov
out
xchg
leave
add
mov
je
jbe
mov
dec
pop
lds
pop
bound
aas
pop
mov
mov
jl
xchg
sahf
push
fstps
cmp
and
ffree
inc
jno
cmp
add
clc
jge
adc
or
push
mov
imul
jns
add
and
loop,pt
add
cwtl
dec
mov
add
insb
pop
ljmp
daa
out
cld
movsl
push
shrb
repz
rcrl
call
popa
ljmp
pop
mov
imul
gs
mov
xchg
insl
sahf
imul
daa
addr16
das
dec
jb
lcall
mov
or
pop
sarl
ret
sti
sbb
cmp
add
test
shrl
test
daa
fisubl
popa
push
fcmovb
jmp
lret
mov
movsl
dec
cli
jb
movsb
lcall
out
jmp
mov
aam
dec
add
sub
cmova
orl
cmp
mov
adc
inc
add
sbb
inc
out
jl
sub
jb
sub
sub
push
cmp
pop
inc
xor
inc
pushf
or
out
mov
push
sub
xlat
mov
push
push
xchg
push
test
repnz
mov
inc
push
lock
sub
xlat
mov
test
fsub
cli
rclb
sub
mov
leave
inc
or
scas
mov
out
pop
mov
scas
outsb
mulb
pop
push
cmp
test
rorl
mov
adc
loopne
cmp
inc
or
inc
jne
fidivrl
add
in
jbe
sarb
cmp
sbb
sbb
cmp
je
and
andl
xchg
out
mov
pop
aas
cmp
scas
movsb
lds
in
call
cmp
mov
aas
repz
pop
flds
and
cli
inc
rclb
inc
arpl
sti
fsubs
dec
pop
sub
dec
xlat
stc
test
xchg
jno
scas
insl
jmp
mov
scas
shlb
cmp
cld
sahf
jne
xchg
dec
mov
inc
mov
sub
inc
xchg
mov
into
jmp
mov
jne
sbb
shrb
add
mov
mov
adc
stos
test
shrd
ss
sub
mov
pushf
mov
in
push
inc
cli
test
out
jnp
cmpsl
enter
dec
or
lret
scas
mov
pop
or
sub
lds
test
xor
imul
xor
xchg
mov
jge
jmp
add
or
lret
loopne
or
inc
fildll
add
in
sahf
cmp
test
xchg
fcmovu
jns
mov
mov
ror
ds
adc
in
xchg
fdivs
add
shll
mov
stos
popa
sub
dec
push
enter
repz
add
ret
or
imul
decl
add
inc
pop
jmp
mov
cmp
je
mov
jmp
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movzbl
sbb
mov
sbbl
push
xor
or
sbb
push
jmp
jmp
lahf
xchg
mov
sbb
mov
ljmp
js
jle
or
daa
add
ffree
jbe
cmp
inc
pop
jne
je
call
mov
jbe
outsl
mov
cld
lods
sti
imul
sbb
shll
mov
les
ljmp
mov
nop
and
aaa
nop
lret
loopne
mov
mov
int
mov
cmpsl
adc
sub
push
ret
push
cmp
adc
arpl
add
cltd
daa
sarl
fimuls
sbb
les
mov
jp
jmp
shlb
mov
movsb
adc
dec
cmp
hlt
scas
das
push
pusha
fwait
mov
xchg
push
mov
leave
lcall
inc
mov
or
inc
adc
inc
add
cmp
movsl
and
dec
adc
dec
int
cmp
adc
push
push
pop
inc
add
push
arpl
dec
xchg
mov
inc
sti
pop
mov
and
cmp
stos
sub
mov
mov
lea
pop
xchg
ret
mov
push
enter
and
cli
stos
iret
test
xchg
inc
mov
ss
inc
dec
push
add
insb
addr16
mov
sbb
xchg
clc
sbb
mov
cltd
or
push
bound
sbb
popf
sbb
mov
es
pop
jg
pushf
pop
addr16
dec
push
arpl
stos
inc
mov
arpl
mov
loop
pop
push
stos
lahf
jbe
fistpll
sub
xchg
dec
subl
lahf
cltd
jl
mov
lods
jge
jns
repnz
cmp
pop
mov
xchg
inc
mov
orb
hlt
lods
xchg
dec
or
push
xor
leave
lahf
xor
gs
mov
jge
mov
out
and
cwtl
mov
lds
mov
cmpsb
push
mov
mov
pop
fdivs
or
jo
lds
xor
mov
push
in
mov
dec
clc
bnd
insb
out
mov
add
sub
sarl
xchg
xchg
daa
pusha
rorl
or
enter
mov
xchg
jb
add
pop
leave
adc
pop
cld
mov
out
mov
sbb
nop
pushf
call
jmp
mov
cs
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
or
mov
add
push
sub
mov
xor
jmp
push
ja
push
aaa
push
jo
mov
test
outsb
fdivrs
loope
jle
mov
push
or
push
shrb
xchg
sbb
inc
test
rorl
push
push
push
xchg
mov
lods
inc
mov
out
aam
sarb
sub
outsb
rorl
push
mov
mov
pop
in
adc
cli
mov
dec
clc
push
mov
cltd
mov
ljmp
cmp
stc
and
push
repnz
lods
arpl
cld
lcall
jp
sub
lahf
int3
rolb
test
test
jae
sahf
scas
jb
cmpsl
mov
mov
mov
js
or
and
inc
adc
test
movsb
cmp
das
xlat
arpl
ret
cmp
inc
clc
cmpsb
scas
push
or
mov
xor
mov
cltd
sub
mov
lret
out
dec
pop
enter
sbb
sti
notb
xor
sarb
mov
loope
out
sahf
jnp
cmp
mov
inc
xor
das
or
inc
push
sbbb
dec
xor
push
add
lock
cmp
es
shlb
and
mov
fisubl
por
incb
jne
popa
mov
dec
scas
clc
fsts
dec
cmp
cmc
xchg
lods
mov
shrl
and
lahf
mov
orb
pushf
ret
sbb
dec
xor
xor
leave
push
fimuls
cmpsl
iret
jae
pop
mov
xchg
popl
out
jno
mov
popa
cmc
notb
mov
sub
stos
or
call
out
xchg
pushf
sbb
in
sahf
add
inc
jo
loope
sub
int3
fcomp
jp
movsl
or
inc
sbb
ret
arpl
mov
je
pop
jecxz
mov
sbb
jmp
mov
xchg
popa
sub
xorb
adc
cli
sarl
mov
cmpsl
lret
and
je
insl
test
jns
ror
xor
jg
lcall
insl
ret
inc
popa
or
pop
cltd
enter
std
pop
mov
and
mov
cmpsb
cmpsl
sbb
push
mov
sbb
jge
xor
notl
movl
movl
add
jmp
cmp
jmp
adc
sbb
xchg
pop
adc
push
sarb
fstpt
loope
jle
lcall
imul
sub
sub
loopne
ret
test
cmp
inc
jbe
push
or
xor
outsl
movsl
fsubrp
jecxz
push
mov
and
movsl
rcrl
loope
jmpw
setb
ret
mov
pop
cmp
jne
or
push
xchg
mov
inc
mov
pop
xlat
das
fidivrs
xor
pop
xchg
sahf
and
sbb
cmp
mov
shl
mov
cmp
or
aaa
cwtl
push
jge
fcoms
stc
or
fcompl
jg
mov
stc
loope
clc
cmp
dec
and
or
mov
sbb
dec
ret
ja
cmpsb
jmp
xor
inc
push
je
orl
cmp
add
lds
cld
and
call
sbb
xchg
nop
pop
gs
es
sarl
out
cltd
ss
fcoml
roll
nop
dec
je
fcoml
inc
cmp
inc
stos
sub
jecxz
ds
mov
push
xlat
lock
popa
shll
popf
inc
js
lret
dec
lret
xchg
out
mov
in
andb
inc
out
push
cmp
push
fdivrp
push
pop
sub
mov
xchg
cli
xchg
andnps
loop
subb
lock
mov
mov
xchg
sti
pop
pop
fidivl
outsl
shl
push
mov
mov
insb
jge
lret
cmpsl
inc
aam
pop
xchg
fstpl
sbb
inc
cli
pop
push
es
cmp
outsb
jge
clc
pop
inc
or
aad
jle
popa
jge
xchg
pop
stos
clc
mov
mov
fists
xchg
repnz
movsb
jg
sub
fldl
scas
jge
inc
pop
ss
jmp
leave
cmp
mov
jl
out
imul
jae
fisttpl
into
outsl
xor
add
xor
fadds
out
ret
jno
imul
mov
lcall
movsb
loopne
sbb
leave
mov
xchg
ja
lret
es
inc
sub
jmp
arpl
mov
insb
xchg
jmp
push
mov
movsl
mov
stos
cmpsb
bound
jne
mov
mov
movl
mov
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
jmp
call
je
fnsave
inc
leave
mov
in
jle
js
jle
notb
lods
jmp
xlat
sub
js
loop
push
sbb
cmp
pushf
daa
cmpsl
mov
imul
orl
cmc
or
movsl
adc
mov
jmp
clc
dec
ds
stc
lods
jp
scas
xor
rcl
lods
jmp
jge
sub
popf
mov
push
loope
adc
outsb
push
fnstsw
in
fwait
pusha
fbstp
or
push
mov
iret
ja
xor
popa
push
jecxz
cmp
and
xchg
jg
rcrb
loope
xor
mov
pop
into
je
mov
push
xchg
inc
in
push
jnp
mov
das
xchg
mov
cmc
mov
or
xacquire
inc
cmc
mov
cmp
push
rcll
xor
dec
stc
inc
push
lea
adc
mov
cwtl
ja
xor
sbb
mov
negl
jo
cmp
pop
rcll
outsl
xchg
int
iret
push
enter
inc
cli
aam
xchg
cmp
jnp
cmp
shr
les
jbe
xor
fsubl
leave
and
mov
sub
mov
cli
cmp
int3
push
in
adc
jne
push
std
mov
icebp
mov
push
addr16
imul
sbb
clc
loop
sarb
orl
xor
add
sbb
pop
inc
inc
movsl
ja
orb
push
stos
mov
adcl
repnz
push
pop
and
inc
xor
fdiv
push
pop
push
incl
roll
push
aam
jl
add
push
or
xor
jle
pop
add
xlat
mov
add
and
loop
mov
jo
add
data16
inc
or
in
fsubs
lods
loopne
loope
pop
pop
jmp
and
loop
fists
add
sysexit
push
imull
ja
push
sbb
or
jg
mov
sub
push
sub
scas
pop
jno
add
incl
jb
roll
pop
sbb
into
inc
pop
xchg
faddl
sub
sbb
add
xor
incl
iret
push
in
jnp
xchg
xchg
aas
xchg
push
bound
addr16
cmp
shll
addr16
and
inc
clc
orl
sub
push
mov
or
mov
addl
add
subl
push
decl
call
movl
incl
cmpl
movl
jb
jmp
cmp
jne
movl
mov
mov
mov
mov
mov
jmp
mov
xchg
jno
jno
out
fisttpl
das
loopne
jle
js
jle
mov
push
dec
push
jp
daa
ret
or
stc
pop
lock
lea
sbb
pop
loope
inc
test
push
iret
or
dec
mov
adc
stc
or
aad
sub
dec
adc
call
popl
into
inc
push
sbb
xchg
xchg
adc
sbb
cmpl
clc
imul
inc
xor
in
and
add
cmp
mov
mov
lods
hlt
paddsb
pop
mov
jecxz
jp
test
shl
and
add
stos
in
shll
addr16
pop
insb
out
adc
aad
mov
mov
and
fistpll
aad
push
into
pop
cmpsb
xchg
sub
pop
sub
cmp
add
fcmovbe
mov
xor
out
push
xchg
inc
sahf
mov
add
mov
dec
adc
inc
xor
xchg
mov
ds
jmp
or
mov
mov
push
cmovns
mov
pop
jp
dec
jmp
imul
imulb
jl
or
and
sub
out
negb
push
hlt
in
mov
xchg
pushf
jecxz
ds
cmp
fisubs
ja
or
stos
jb
and
adc
cmpb
cmp
xchg
inc
movsl
push
jns
aaa
sbb
sub
in
push
inc
mov
push
cld
call
ficompl
nop
test
pusha
scas
jno
or
lea
repnz
outsl
std
xor
add
es
lcall
jecxz
aaa
sbb
icebp
or
mov
adc
out
or
enter
imul
cld
xor
add
pop
mov
das
faddl
mov
push
dec
adc
in
xchg
ljmp
aaa
mov
std
dec
imul
lahf
out
lahf
loopne
scas
xlat
add
inc
add
cli
icebp
imul
and
packsswb
push
sub
je
mov
fld
xchg
mov
mov
insb
lcall
pop
shll
cmp
xor
sbb
jnp
mov
int3
cmp
movb
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
sub
push
adc
mov
mov
andl
jmp
jns
out
std
jge
or
clc
adc
jle
jo
jle
test
xlat
in
pushf
mov
lods
imul
addr16
sub
sti
inc
inc
in
fstps
xor
push
adc
insb
fucomp
decl
test
mov
lock
cmp
xorb
insl
pop
sub
lcall
add
enter
cltd
dec
jmp
jne
xor
je
popf
daa
sub
cmpsb
mov
idivl
xor
mov
andl
xchg
push
in
lahf
out
sbb
sar
test
cmp
mov
into
es
fnstenv
ror
jmp
pop
aad
dec
mov
inc
loope
fildl
push
pop
movsb
ja
insb
loopne
fsubs
addr16
lock
das
cmc
in
pop
push
sidtl
arpl
lock
sub
loopne
pop
jle
loope
jbe,pt
or
pushf
add
aas
xlat
sbb
xchg
jno
cmc
jl
cwtl
stos
jae
mov
out
jne
out
pop
dec
push
call
pop
cmp
push
add
sti
insb
ret
sbb
ljmp
cmpsb
mul
jns
sbb
movsl
xor
dec
inc
nop
jno
mov
fbld
inc
cltd
fwait
mov
mov
dec
mov
fucomp
ret
js
dec
push
sbb
sahf
and
aaa
mov
cli
cmp
mov
push
lea
push
push
out
rcl
push
cmp
or
jmp
jmp
out
inc
mov
xchg
cs
shr
mov
int
insb
jecxz
cs
into
xchg
cltd
mov
mov
lret
into
scas
xchg
loopne
cmc
mov
mov
jns
and
adc
test
sub
adc
or
pop
mov
mov
mov
stc
popf
mov
insb
pop
dec
loopne
jo
imul
cmpsl
or
and
fisubrs
adc
out
mov
jmp
hlt
adc
hlt
leave
cwtl
out
or
mov
imul
rcrb
xchg
lods
aas
adc
mov
push
in
sbb
jne
jmp
daa
add
adc
aas
test
mov
aad
fildl
pusha
iret
stos
inc
mov
loop
pop
sub
add
adc
sarl
cmp
mov
cmp
popf
test
call
jp
icebp
sub
sbb
mov
push
test
bound
mull
jmp
fbld
sbb
iret
adc
repnz
dec
sbb
push
sub
sub
cld
xchg
mov
jl
pop
adc
dec
aam
pop
scas
out
jecxz
mov
dec
icebp
jg
xchg
mov
aam
dec
push
cltd
inc
mov
lods
mov
out
cmp
inc
lds
test
mov
and
subb
bnd
incb
imul
cs
cmp
pop
sbbl
clc
repz
loopne
mov
mov
jmp
sub
aas
mov
out
cmp
das
in
cmp
jns
or
rolb
xor
clc
mov
popa
or
ret
xor
inc
jg
fmull
gs
add
rcrb
in
mov
mov
cs
or
popw
jg
push
sub
call
jb
lds
shll
lods
mov
mov
ss
icebp
ja
and
stc
adc
popa
fisttpll
lds
push
inc
or
mov
push
mov
and
xchg
inc
inc
or
cmp
or
movl
xor
movl
movzwl
add
mov
mov
jmp
jmp
or
std
fdiv
sbb
or
lea
out
jle
jo
jle
xchg
imul
int
insl
fwait
jp
mulb
or
insb
pop
xlat
and
fwait
push
xor
dec
les
pushf
mulb
aaa
in
push
dec
add
push
cwtl
aas
mov
push
push
in
mov
cmpsb
dec
cltd
mov
test
or
lods
lcall
cmp
cmp
and
cmpsl
jnp
mov
adc
jmp
inc
sub
xchg
fistps
int3
sub
enter
in
out
lcall
sub
jo
or
sbb
or
pop
out
lret
lret
xor
test
xchg
sbb
popa
sahf
js
pop
jmp
push
push
std
mov
daa
xchg
int3
loop
inc
jno
mov
xor
loope
idivl
jb
adc
xchg
jnp
frstor
push
aad
mov
cmc
adc
dec
pushf
push
push
mov
je
xchg
inc
push
push
and
xchg
mov
cmpsl
jbe
xchg
out
dec
cmp
xchg
pushf
mov
cmpsl
je
pop
jb
testb
enter
cmpsl
mov
dec
fcmovnbe
aam
or
loopne
or
sbb
in
fxtract
xchg
fdivrs
mov
dec
push
popa
and
mov
push
ret
aaa
sub
push
push
and
and
mov
rorb
jp
fcmove
pop
sub
pushf
mov
test
fsubp
and
cmp
repnz
dec
out
js
mov
jle
or
jno
adc
inc
in
xlat
or
inc
adc
cmp
inc
outsb
imul
into
sub
ficomps
in
cmpl
test
shrl
cmc
jne
rcll
mov
ds
dec
pop
aaa
mov
dec
adc
cs
xor
icebp
push
cmpsb
sub
xchg
lods
mov
das
mov
mov
je
fsubrl
mov
sub
arpl
pop
jecxz
jle
aam
dec
sub
ja
jno
mov
js
dec
insb
jo
lret
mov
add
add
push
inc
pusha
sub
outsl
shll
int3
pop
sbb
dec
dec
dec
pop
add
xor
and
bnd
rclb
cwtl
hlt
lahf
adc
aas
popa
out
inc
cmc
mov
loope
lods
xlat
pop
sub
mov
adc
push
dec
sbb
xor
cmpsl
xchg
shll
pop
push
in
mov
iret
inc
cmp
fadds
fdivrs
mov
aas
stos
and
mov
xchg
sahf
xor
imul
and
cmpsb
fmul
aaa
push
out
lods
dec
push
ds
pop
xchg
es
and
fnstcw
out
jp
lahf
addl
sti
mov
mov
fnstsw
and
mov
push
push
sahf
loope
dec
mov
jmp
dec
adc
pop
pop
out
inc
ficompl
subl
out
subb
xsaveopt
lret
lock
jbe
test
stos
clc
mov
das
mov
rcl
sub
ljmp
push
dec
inc
je
popf
cmp
aaa
stos
push
stc
sub
sti
sbb
and
xlat
jbe
gs
adc
lock
xor
shrb
jecxz
cli
cmpl
mov
fnsave
mov
fsubs
repz
fdivrl
mov
leave
push
call
sub
ds
cmpsl
mov
pop
addl
lock
icebp
and
adc
pop
sub
adc
mov
mov
or
xor
xor
add
xor
mov
add
mov
inc
mov
xor
add
mov
movl
mov
mov
sub
add
jmp
xor
xchg
mov
stos
cs
lret
inc
mov
jle
jo
jle
das
jl
inc
lcall
arpl
jbe
and
and
int
pushf
es
dec
scas
pop
jg
sbb
push
lret
push
sub
arpl
add
jp
mov
dec
jl
out
jecxz
aaa
lahf
mov
je
ds
popf
mov
call
jbe
cli
dec
cmp
mov
mov
pop
out
mov
pop
rorb
jge
jbe
scas
xchg
out
popf
das
cld
cwtl
imul
out
icebp
mov
add
scas
call
sbb
xor
pop
lcall
xor
inc
repz
sarb
fstps
mov
test
pop
daa
ror
popa
shll
sub
subl
leave
fsts
pop
mov
inc
subb
lds
outsb
xchg
and
andb
xor
xor
inc
and
and
cwtl
aas
jmp
int
adcb
sub
sbb
in
in
push
inc
mov
shll
lea
mov
sbb
sbbl
shlb
and
mov
orb
clc
jb
push
lock
mov
int3
inc
xchg
mov
xor
sub
aaa
out
or
adc
repnz
movsl
test
mov
aad
pushf
sub
loope
dec
js
lahf
rolb
shlb
test
mov
es
scas
pushf
mov
stos
mov
data16
xchg
jns
repnz
adc
xchg
cltd
xchg
repnz
push
cltd
pop
push
cld
lcall
lods
mov
aas
add
icebp
dec
das
jo
xor
jno
push
cmp
jg
pop
mov
mov
test
pusha
pusha
mov
pop
mov
dec
mov
jmp
jle
leave
enter
mov
popf
int
ret
inc
jg
cmp
jl
dec
mov
fstps
pop
jle
or
pop
adc
je
sub
adc
sahf
adcb
cltd
adc
jmp
add
ficompl
lods
stos
push
mov
inc
xor
testb
bound
fs
cmp
mov
repnz
in
sbb
or
loope
stc
in
jnp
mov
stos
jle
mov
pusha
or
sbb
out
pop
pop
ret
xchg
scas
into
cwtl
stos
adc
jle
imul
xlat
xchg
add
xchg
pop
mov
jbe
dec
hlt
loope
mov
sbb
mov
cmp
lea
adc
in
out
inc
pusha
dec
enter
adc
xlat
adc
push
dec
jbe
ror
cmpsl
cwtl
lods
sbb
data16
xor
pop
push
shl
xor
in
data16
mov
sbb
push
divb
mov
mov
lcall
xchg
sub
push
mov
jg
and
cld
pop
jbe
cmpsl
push
out
mov
lahf
cmp
notl
icebp
or
pop
dec
fistpll
nop
fdivrs
mov
imulb
xor
dec
addr16
aas
insb
int
and
mov
inc
pop
daa
mov
test
psrlw
incb
xor
hlt
out
mov
rolb
mov
in
dec
stos
iret
mov
lock
push
push
aaa
jge
mov
popf
push
dec
scas
jecxz
int3
roll
stos
outsl
mov
loop
dec
push
imul
add
aam
pusha
mov
popf
fisubs
ljmp
xor
lret
push
adc
cmp
or
push
into
lds
cmp
mov
pop
jne
xor
fdivrs
test
add
add
in
cld
popf
popa
imul
push
fnstenv
mov
jle
jo
jle
in
pop
push
sub
push
cwtl
aaa
roll
loope
dec
mov
outsl
add
sbb
outsl
fisttps
push
jecxz
sbb
stc
push
addr16
scas
inc
pop
pop
jae
scas
xchg
mov
inc
out
stos
sti
mov
jo
hlt
add
sahf
jl
bound
jl
loope
sub
adc
sbb
mov
in
sbb
jno
imul
icebp
mov
cmp
shrb
in
test
push
enter
mov
xor
inc
adc
push
lahf
fildl
popf
pop
cwtl
mov
imul
pop
pop
jmp
daa
mov
std
test
cmpsl
sub
dec
mov
fists
inc
test
dec
insb
xor
shlb
gs
xor
pop
cs
xor
sbb
mov
int3
adc
orb
push
jmp
fwait
gs
xor
sub
lock
aad
cmpsb
mov
out
sub
add
adc
jbe
pop
pop
aad
push
lret
fs
jae
add
xchg
gs
les
sarb
shl
mov
loopne
pop
pop
lret
adc
xchg
test
repnz
ja
and
mov
mov
jno
int
xchg
addr16
add
ja
insl
jno
or
popa
fcomi
aas
adc
and
nop
aam
sub
fistpl
lahf
sbb
pop
push
fwait
and
mov
inc
test
movsl
popa
cli
jmp
insb
mov
pop
call
cltd
int
mov
xor
out
pop
into
test
adc
shlb
pop
and
scas
cmc
sub
sbb
and
and
in
fwait
loopne
pop
jge
xor
fsubs
mov
shr
push
cltd
xchg
les
xchg
pop
in
add
adc
adc
jb
or
mov
out
outsb
and
sarl
popf
xchg
icebp
mov
inc
adc
push
push
flds
jne
mov
pop
imul
xchg
insb
xor
sbb
mov
sub
and
cmp
ficomps
push
mov
sub
cli
or
push
push
nop
je
inc
aad
fsubrs
jo
xor
xor
das
test
sub
mov
inc
pop
mov
js
mov
ds
subl
jo
adc
int3
pop
lods
addr16
std
subl
xchg
rorb
or
pop
mov
pop
push
divl
cmp
dec
or
es
sub
and
pop
push
ret
lcall
xor
cltd
imul
pusha
stos
cs
sbb
ret
xchg
testl
fwait
pop
push
arpl
fnstsw
ret
sbb
fstl
adc
popa
mov
sub
stos
mov
jge
mov
push
mov
ljmp
xchg
adc
mov
and
jmp
add
mov
jg
mov
mov
lea
dec
lcall
sti
inc
xchg
sub
push
sub
clc
push
cmp
testl
bt
inc
ds
push
mov
adcl
pop
rorb
movsb
sti
xor
dec
rcrl
into
mov
stc
cmp
jmp
push
lcall
fwait
xchg
fnstcw
mov
inc
mov
test
sub
add
cmp
leave
mov
rolb
lcall
clc
movl
or
movl
sbb
movl
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
pushl
push
call
cmpl
jb
or
movl
sbb
mov
xor
sub
mov
orl
add
cmp
je
movl
push
jmp
xorl
mov
add
mov
addl
sub
movl
mov
andl
xor
addl
add
movl
cmp
movl
jb
mov
mov
sub
xor
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
inc
xor
sbb
add
or
add
imul
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
and
mov
sub
cmp
movl
ja
xor
add
add
mov
orl
jmp
xchg
dec
in
in
test
out
pop
xchg
rcrl
jo
jle
addb
ror
pop
mov
rorl
or
jnp
inc
mov
lea
cmp
jnp
je
add
cmp
and
fsubr
stc
dec
clc
mov
cmc
sub
sub
and
pop
inc
dec
std
cld
imull
pop
gs
or
mull
push
jo
jb
ss
js
xor
pop
mov
nop
cmp
cwtl
xor
push
inc
or
adc
push
and
cltd
aaa
scas
push
pop
xchg
insl
pop
jns
cmpsb
mov
stos
mov
cmp
add
scas
push
mov
jb
fldt
je
inc
pop
repnz
push
inc
fwait
inc
dec
cmpsb
std
cmp
enter
pusha
sbb
lcall
push
sub
add
pop
mov
scas
push
push
adc
inc
cld
lahf
loopne
xlat
hlt
cmpb
roll
mov
ret
cmpsl
add
ja
pop
sbb
mov
shll
sub
aam
lahf
inc
jmp
shl
dec
ds
aam
xchg
fbstp
mov
mov
jecxz
mov
gs
sti
div
sbb
mov
xchg
fnsave
fildll
push
or
minps
pop
stc
jg
or
nop
xchg
cmp
clc
roll
fisubrl
mov
cmp
dec
inc
cld
push
pushf
fisubs
jle
jge
xor
scas
sub
xor
push
pop
xchg
mov
pusha
shll
in
mov
arpl
mov
adc
mov
loope
cmc
jns
call
test
stos
add
add
fs
mov
int3
out
or
aad
lock
xor
inc
pop
jmp
in
sub
scas
cmp
les
mov
aaa
enter
loop
scas
stc
push
icebp
jno
mov
imull
inc
mov
mov
mov
pop
mov
inc
rolb
popf
jnp
jne
xchg
orb
pop
out
pop
orps
test
ds
cltd
mov
sbb
das
adc
jb
cmpsl
addr16
lret
push
dec
lcall
aad
fsubp
popa
cmpsb
inc
mov
jns
fisttpl
scas
cmp
xchg
ficomps
fsts
addb
dec
fiaddl
mov
data16
lea
push
ljmp
cmpsl
out
push
addr16
in
lahf
inc
mov
jg
notb
jae
cltd
sbbb
mov
call
and
imul
adc
push
sbb
fnsave
loopne
lahf
lods
test
fsubl
lock
cmpsb
cli
dec
push
rol
cmc
aaa
addl
jl
push
lock
fs
xor
sbb
sahf
fisubs
and
fildll
mov
cli
xchg
ret
ss
push
out
shrb
scas
test
lods
mov
les
mov
fsubrl
xchg
xlat
push
mov
jmp
fdivrs
inc
rorb
imul
fmul
sub
and
fildll
sbb
incl
xor
scas
in
ljmp
jb
popf
push
sub
add
aad
test
sub
adc
lds
shll
push
sub
fldenv
pop
cmpsl
pop
mov
mov
fistpll
enter
std
ja
adc
push
bound
or
push
pop
xor
adcl
add
jmp
mov
subl
mov
mov
sub
mov
xor
xor
or
add
adc
jmp
test
jne
xchg
in
in
pop
pop
cmp
cld
jle
jo
jle
hlt
pop
jge
imul
nop
ds
dec
sub
mov
sub
sub
movsb
mov
addr16
mov
cltd
shrb
inc
into
jge
nop
jb
push
test
mov
out
mov
mov
mov
stos
aas
loop
pop
adc
xchg
jbe
ja
movsl
loope
cltd
fdivrl
mov
insb
test
fs
mov
in
xchg
shl
fistl
pop
clc
push
fwait
jl
stc
jb
jp
xor
scas
imull
sti
fs
mov
and
lcall
mov
ficoms
out
adcl
pusha
shll
gs
mov
inc
adc
sbb
or
repz
cmp
lock
daa
js
stos
or
adc
pop
loopne
xor
and
or
jae
xchg
sub
mov
in
pop
dec
sbb
test
call
cs
lods
in
pop
mov
ret
shlb
ja
jae
cs
xchg
xor
push
add
notb
rclb
sti
outsl
xlat
mov
mov
out
popf
aad
cmp
cmp
lcall
push
sub
mov
add
inc
incl
inc
data16
clc
inc
mov
mov
scas
test
push
ret
ja
scas
insl
je
addr16
out
in
jbe
lods
mov
mov
clc
xlat
adc
mov
pusha
cmp
test
and
inc
rcll
push
std
add
inc
mov
sahf
pop
adc
mov
lds
jno
jmp
cmp
movsb
hlt
inc
jne
cwtl
inc
daa
cwtl
xchg
pop
ret
jmp
movsb
test
add
pop
push
loope
jmp
aad
jo
rolb
je
outsb
fisttpll
dec
int3
xor
xchg
addb
cmp
jl
cmp
xchg
xor
insb
inc
dec
dec
push
pop
popa
push
xchg
and
mov
cmp
xchg
arpl
cs
pop
inc
lods
stc
jns
repz
or
dec
mov
adc
sahf
inc
pop
gs
sbb
lods
cltd
pop
out
enter
cmp
out
in
movsb
daa
out
repnz
mov
sarl
sub
cmp
jno
push
xchg
lahf
mov
mov
icebp
rolb
rcrb
cld
or
xchg
hlt
add
xorb
jecxz
adc
bound
pop
mov
jne
sbb
popf
js
scas
or
shlb
pop
mov
jp
nop
inc
xchg
cld
xchg
cmp
push
dec
jecxz
push
lcall
dec
sbbl
cmp
ret
loope
push
dec
ret
push
cltd
dec
xchg
nop
sbb
outsb
rolb
pusha
mov
push
push
inc
xor
jle
pop
mov
cli
sti
cmp
fwait
mov
es
jmp
movsb
mov
jmp
xor
push
ss
icebp
or
clc
add
rol
aaa
paddusw
inc
fistps
sbb
scas
mov
push
fdivs
popa
outsl
jl
das
fldcw
lods
incl
sbb
pop
ficoms
add
push
stc
rcll
pushf
inc
inc
mov
sbb
and
pop
mov
add
fmuls
adc
mov
jp
lods
les
mov
inc
dec
dec
xor
push
dec
lea
dec
pop
in
jecxz
je
sbbb
inc
push
nop
mov
insl
sub
shrl
test
adc
fcompl
cmp
xor
jmp
mov
cmp
pop
cmp
rorl
scas
xlat
xor
mov
mov
xorl
sub
movl
cmp
movl
ja
mov
mov
movl
jmp
sub
mov
add
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
call
jmp
xor
xor
xor
add
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
push
call
cmpl
jb
add
imul
mov
mov
jmp
aas
andl
push
repnz
pusha
stos
in
xor
jo
jle
sbb
inc
insb
out
popf
aas
xchg
test
add
xor
or
dec
xchg
inc
lret
fbld
or
mov
out
dec
or
fdivs
fidivrs
push
pop
or
add
cwtl
pop
sub
data16
sbb
sub
xor
pop
xchg
pop
or
test
addr16
push
mov
bound
leave
call
outsb
push
mov
mov
cltd
cwtl
push
fstp
packssdw
or
popf
es
mov
mov
or
push
jmp
int3
bnd
add
pop
in
add
push
fabs
jno
les
popf
dec
mov
pop
or
ret
xchg
icebp
in
out
adc
cmpsb
and
mov
popf
jl
inc
outsb
xchg
lea
mov
jo
push
outsl
jmp
addr16
pop
call
xor
jb
inc
mov
push
or
fcmovnb
cmc
dec
das
cmpsb
pop
push
fistpll
stc
jmp
jae
mov
cmp
and
push
inc
xor
push
pusha
in
dec
mov
sbb
jbe
stc
jle
adcl
jg
test
sub
dec
fmul
mov
ret
add
aad
cmp
pop
loop
fsubr
push
mov
mov
jmp
or
xchg
jae
and
jns
mov
lods
aam
jb
lret
aam
add
inc
in
pop
insb
pop
pop
dec
sbb
out
je
ss
pop
push
pop
push
outsb
adc
jle
push
cmp
inc
outsl
add
mov
das
jge
dec
aad
decl
ja
add
inc
std
popa
test
jbe
or
pop
mov
xchg
ds
add
adc
sbb
xor
and
aam
adc
enter
arpl
lret
push
loop
loop
lahf
repnz
int3
scas
lret
pop
pop
loop
inc
decl
fwait
mov
pop
jo
adc
ljmp
cmpsl
xchg
push
dec
testl
stc
mov
push
push
jns
gs
inc
push
push
out
popa
movsb
in
xor
mov
or
and
mov
xorb
push
int
je
cmp
dec
cli
push
and
and
jmp
or
adc
xchg
enter
sub
dec
mov
push
dec
mov
jmp
pop
imul
out
jae
mov
push
adc
cltd
lret
mov
leave
or
sahf
in
ss
es
stos
inc
jge
xchg
iret
mov
outsl
mov
lods
adc
cmp
adc
push
adc
mov
cmp
cmp
pop
or
or
fmull
out
je
and
iret
fimull
sbb
adc
out
sub
push
data16
ds
popl
mov
or
jg
dec
repz
testb
fucom
or
mov
or
jge
orl
push
cmc
adc
in
adc
xchg
cmp
inc
repz
lret
loopne
outsb
adc
in
pop
ja
add
sbb
aas
aam
insl
dec
dec
mov
adc
inc
xchg
scas
dec
xor
dec
lahf
xchg
and
enter
and
pop
addb
mov
and
ret
sub
outsb
cmc
push
xchg
push
rorb
jnp
std
push
stc
fidivl
xchg
or
arpl
jmp
push
cmpsl
sbb
mov
cmp
sub
mov
pop
ret
scas
mov
push
mov
ja
stc
mov
sbb
dec
orb
fimull
xchg
add
add
or
add
adc
add
dec
int3
aam
pop
rcll
xchg
mov
js
adc
xchg
jo
jle
ds
lods
push
cld
leave
cli
add
xchg
dec
and
lock
les
inc
or
pop
in
add
imul
adc
inc
mov
push
icebp
popa
cmp
push
cmpsb
mov
sti
jg
dec
jle
clc
cmp
loope
lods
dec
mov
pusha
scas
aad
mov
mov
test
xor
arpl
adc
mov
shr
xchg
mov
cmc
rep
or
hlt
xor
sbb
sar
pop
lret
loop
test
mov
imul
add
lods
negl
sbb
shll
push
mov
xorb
push
incl
mov
jle,pt
rclb
ds
dec
iret
dec
xchg
mov
fs
sbb
add
ret
mov
imul
jno
adc
int3
add
sub
mov
sbb
cltd
add
fsubrs
clc
int
out
enter
repnz
or
rcrb
iret
cwtl
stos
sub
push
push
xor
push
shrl
les
insb
sub
outsl
mov
mov
cs
add
pop
iret
sti
pop
jnp
pop
sub
out
cs
mov
rolb
inc
xor
pop
xor
and
lods
adc
clc
sarl
int3
xchg
xchg
testb
sub
jg
lret
xchg
mov
push
xchg
dec
xor
inc
pop
push
ret
xchg
add
fwait
jg
push
cmp
lcall
or
loopne
mov
jae
popa
lods
or
pushl
in
data16
and
les
stc
inc
pop
sbb
xchg
mov
inc
mov
insb
enter
fisubrl
inc
cmp
xchg
gs
push
lcall
in
add
das
fisubl
xchg
andl
dec
aam
push
sub
xor
sbb
ja
sahf
cmp
es
jp
fsubp
dec
mov
rclb
jle
mov
test
bound
mov
inc
mov
add
imul
stos
test
pop
cmc
mov
mov
push
jge
lea
aam
jnp
stc
cmp
insb
cmp
ds
pop
push
xchg
push
movl
jecxz
lcall
cmc
xchg
mov
repz
inc
cmp
test
xor
sub
or
lods
loopne
mov
sub
out
pop
push
xor
add
popa
movsl
test
mov
mov
enter
ljmp
cmp
pusha
mov
outsb
xchg
cli
push
sub
lods
cli
daa
nop
adcb
sub
test
scas
jle
sbb
fstl
addr16
inc
or
rcr
xor
cmp
pop
pop
decb
mov
stos
test
ss
insl
movsb
xchg
test
mov
or
mov
xor
xchg
call
daa
or
mov
xchg
das
outsl
clc
dec
pusha
jbe
push
cmp
pop
stc
call
add
test
xchg
mov
mov
mov
sti
mov
cmpb
out
jl
or
icebp
movsl
stos
jne
repz
mov
push
pop
adc
mov
movsl
mov
cmpsl
inc
xor
jmp
divl
jge
adc
mov
repz
adc
and
xlat
lds
sub
aam
jb
jb
cmpsl
add
jae
pop
sti
xor
rcr
repnz
dec
int3
mov
and
ss
jp
xchg
into
mov
shrb
mov
ds
fwait
popa
sub
push
int3
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
xor
outsl
jne
std
inc
sbbl
mov
cmpb
jns
jle
out
iret
js
stc
cwtl
cli
test
push
cmpsb
jge
scas
stc
pop
jmp
int3
mov
lock
dec
mov
sahf
xor
cli
pop
loop
lret
addr16
adc
pop
movsl
je
lods
sbb
push
mov
inc
fsubrl
pop
rcl
cmp
dec
aam
pop
push
mov
push
xchg
sbb
and
xor
clc
sub
ds
add
iret
fstpt
icebp
mov
pop
adc
jno
jnp
dec
sti
cltd
mov
ss
lea
lahf
or
jb
jp
xchg
jle
dec
lahf
imul
push
cli
roll
cli
or
in
xchg
testb
repz
imul
mov
push
mov
xchg
inc
cltd
call
lret
scas
xchg
enter
arpl
push
adc
popf
cmp
dec
push
in
or
adc
pop
or
pop
pop
lea
out
xchg
js
orl
mov
or
sarl
cld
mov
stos
mov
sbb
mov
jmp
fcompl
stos
shl
out
js
loopne
mov
stos
jae
je
xor
loop
cltd
push
jle
pop
mov
push
mov
mov
dec
je
outsb
imul
loop
lods
push
jp
les
je
push
repnz
or
sub
movsl
cs
loop
add
fldenv
xchg
pop
mov
sbb
in
sub
or
es
test
xor
inc
mov
push
filds
aam
lock
jne
mov
loope
int
and
sub
in
xor
xchg
push
pop
mov
push
hlt
cmp
jge
mov
inc
add
push
ja
pop
mov
mov
dec
and
push
add
jnp
idivb
or
sbb
fldenv
jb
les
lods
lret
std
xchg
push
push
sti
lea
into
cli
mov
jle
clc
dec
in
movsb
popf
stos
lea
jmp
leave
or
aas
out
push
push
mov
xor
cltd
in
stos
xchg
int
inc
sub
fsubl
fwait
push
jae
cld
push
loope
push
pop
mov
or
jp
inc
test
mov
popf
and
lcall
es
dec
add
mov
cs
pop
je
in
pop
fwait
xor
push
xchg
fcom
xor
inc
adc
push
repnz
xchg
pusha
loopne
lcall
testl
sarb
pop
mov
sbb
aam
sub
pop
mov
dec
and
push
mov
iret
vhaddps
in
mov
lods
lret
data16
pop
jo
and
repz
call
ss
mov
sar
into
addr16
mov
lock
push
mov
loopne
stos
sub
imul
pop
add
xchg
adc
and
push
enter
add
and
or
jbe
or
dec
sub
sub
ds
ljmp
inc
lahf
mov
add
insb
fwait
arpl
and
dec
test
repz
ss
fstps
sub
ret
xor
out
and
int3
pop
ljmp
mov
lret
sahf
inc
cmp
inc
dec
rcrb
stos
orb
out
pop
inc
or
mov
cld
call
cmp
ss
call
lea
shlb
lahf
jne
cmp
dec
jb
or
faddl
iret
xor
adc
imulb
fistpll
fimull
add
add
mov
mov
xor
xor
jmp
test
rolb
dec
pop
repz
jp
hlt
lret
in
jle
jo
jle
call
sub
stos
ja
xchg
inc
cmp
pop
sti
jl
sub
adc
imulb
cmp
sub
dec
jp
cmpl
cmc
orl
xchg
sub
jle
mov
push
mov
ja
mov
add
addr16
jecxz
rorb
cmpsl
cmp
sub
mov
jge
cmc
loopne
js
dec
iret
xor
dec
movsl
mov
movsl
ficompl
nop
add
ss
sub
push
adc
daa
outsb
icebp
cmp
mov
into
xchg
sub
xor
cwtl
sbb
add
js
test
jg
movl
mov
xchg
mov
mov
pop
fbld
push
adc
ja
adc
rcrb
adc
cld
mov
clc
jo
jnp
sub
ds
stc
sub
jbe
ss
xchg
dec
repz
test
ljmp
gs
xor
jg
xor
dec
mov
jb
int
scas
sbb
xchg
fdivl
mov
stc
insb
jno
lods
aas
adc
sbb
pop
lea
rcl
dec
roll
pmulhw
shl
testb
add
push
out
push
imul
lods
test
data16
mov
out
dec
or
in
int3
add
push
adc
ret
mov
add
fistpl
or
pop
mov
dec
dec
sbb
loopne
pop
xchg
cwtl
jmp
loop,pt
fcomps
adcb
push
test
xor
dec
js
xchg
shlb
aaa
jmp
sub
fildl
add
aam
cltd
mov
cmp
cmp
jnp
lds
pop
adc
mov
repz
jnp
xor
loopne
loope
out
xchg
adcl
int3
stos
test
mov
iret
add
dec
mov
jp
xchg
arpl
lahf
sbb
inc
mov
idivb
hlt
sahf
popa
fwait
insb
ffree
es
add
fisubrl
cmp
and
lret
clc
lods
mov
xchg
inc
in
mov
and
rolb
repz
stos
bnd
or
xor
cmpsl
fistpll
push
popf
xor
mov
mov
xorb
movsb
xlat
lock
push
xchg
xor
testl
mov
mov
dec
dec
daa
jno
cmpsb
insl
xchg
outsl
das
lea
pop
imul
or
and
popf
popf
sahf
fdivr
sti
inc
xlat
adc
dec
mov
mov
xchg
fstpt
adc
mov
dec
js
ret
aaa
cmp
dec
sbb
pop
mov
xlat
push
dec
inc
mov
shll
outsb
xor
loop
sahf
imul
arpl
mov
xor
iret
cmp
andl
and
std
push
cmp
mov
xor
fldt
xor
xor
sub
xor
out
adc
das
or
loop
mov
xor
loop
push
push
xchg
and
ljmp
in
shlb
outsb
mov
test
scas
popa
bound
jl
out
cltd
add
dec
xchg
jl
mov
hlt
imul
outsl
fbstp
mov
popf
jle
sub
mov
pushf
cmpsl
or
out
sbb
xor
int
xor
push
inc
inc
outsb
jge
enter
andb
jge
scas
mov
add
mov
fisubs
cmpsb
dec
sub
jns
sub
sub
scas
mov
add
add
jmp
cmp
dec
mov
rol
hlt
mov
jle
jns
jle
sub
das
pop
incl
push
test
mov
mov
mov
xchg
xor
cmpsb
mov
sbb
cli
cmp
je
xor
push
testl
xorl
sub
add
fnsave
mov
sub
push
loop
fcomps
outsb
push
push
mov
test
shrb
mov
imul
popa
push
repnz
push
fldl
push
lock
cmpl
daa
xchg
cli
idivl
mov
daa
out
sub
popa
adc
push
iret
pop
in
pop
cmp
or
insl
xchg
je
aas
mov
fstps
shlb
roll
popf
int
jne
aaa
js
and
jne
aaa
arpl
lcall
inc
loopne
repz
adc
insl
sub
jmp
dec
lea
jp
xchg
pop
dec
es
dec
fwait
andl
xor
inc
cmp
emms
push
inc
in
popa
std
jmp
data16
xor
aas
aaa
add
dec
les
push
mov
xchg
push
mov
cmp
sbb
cld
addr16
jbe
jge
push
popa
mov
add
fmulp
es
mov
mov
push
adc
scas
iret
adc
ret
mov
push
adc
and
mov
cs
mov
in
test
fiadds
frndint
cmp
mov
xor
stos
push
fimuls
cmpsb
mov
scas
popf
cltd
push
cli
jp
fucomip
or
movl
imul
or
cmpsb
push
pop
ficoml
outsl
cmpsb
clc
imul
cmp
andl
xor
push
cmp
je
movsl
mov
dec
lods
inc
xchg
lahf
or
or
addr16
pop
jo
add
pop
adcl
jg
xchg
cmp
rclb
adc
leave
std
loope
mov
sub
cmp
jp
popf
inc
mov
jnp
outsb
les
arpl
mov
data16
push
hlt
mov
aas
cld
mov
ds
xchg
lahf
mov
addr16
sbb
or
in
nop
jae
sbb
cmp
lret
mov
leave
cmp
mov
inc
jle
popa
jb
sbb
xlat
jae
xchg
pop
sub
lret
and
cmp
add
sub
adc
sarb
sub
xor
jecxz
and
and
or
mov
aas
jnp
jb
push
mov
popf
add
xchg
jne
pop
mov
mov
and
std
cwtl
dec
dec
frstor
sub
js
dec
mov
adc
pop
popf
jle
iret
push
or
mov
loop
push
sub
inc
mov
das
push
xchg
mov
xchg
imul
sbb
pop
lods
fsub
xor
mov
icebp
outsl
in
jb
stos
cmp
mov
dec
mull
mov
cmp
dec
xchg
jg
stc
xor
sbb
adc
jecxz
js
leave
lods
test
push
sti
sub
test
xchg
adc
or
jne
mov
lock
pushf
cmp
or
in
mov
orb
push
popa
cli
push
mov
push
dec
or
inc
int3
inc
inc
clc
fs
xor
cld
pusha
lahf
lret
sar
xor
cli
mov
test
adc
popf
lahf
xor
mov
sub
in
scas
outsl
lret
sti
xchg
or
mov
xchg
push
lret
stc
enter
adc
mov
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
jmp
sub
inc
dec
idivl
mov
xchg
jle
jo
jle
pop
push
sub
icebp
fsincos
mov
jo
enter
frstor
jb
mov
xlat
jnp
jmp
hlt
sub
xor
dec
fildll
push
ss
mov
push
or
sti
dec
mov
cmp
xor
mov
pop
fisubl
dec
ja
test
cs
in
jnp
mov
out
mov
cmp
and
into
inc
inc
test
inc
incl
aad
aas
or
xchg
movsb
daa
mov
call
shll
and
fstp
xchg
fmuls
and
bound
adc
dec
push
lea
xchg
adc
jle
lahf
fdivrs
fldcw
mov
cmp
push
and
jae
sbb
jg
adc
and
imul
inc
adc
scas
jg
fisubrs
in
fwait
addl
ss
inc
das
xor
xchg
cmp
lcall
inc
add
ja
jns
sub
cld
sahf
nop
push
dec
and
xchg
lods
mov
cmp
pop
inc
jmp
mov
mov
hlt
jo
loope
push
popa
and
lods
xchg
jns
js
sub
sbb
cmp
or
pop
lea
gs
out
aam
xor
scas
mov
addr16
pop
sub
fsubs
sub
mov
stos
aas
mov
pop
mov
fildll
mov
fs
and
ret
addr16
cmp
or
fildll
push
addr16
dec
sub
leave
shrb
sti
iret
push
lock
xor
sub
mov
es
add
je
mov
test
das
aas
testl
mov
pop
mov
std
add
movsl
out
filds
add
popf
jnp
fbstp
push
jp
aam
arpl
aas
inc
iret
sub
in
mov
and
add
xchg
ja
add
repnz
shrl
mov
fisubl
dec
imul
or
sub
stos
fwait
ret
mov
shll
jmp
fs
addr16
pop
pop
bound
and
and
mov
mov
arpl
jl
xchg
cltd
data16
push
jmp
in
repnz
inc
xchg
add
and
orb
shl
add
scas
fnsave
out
out
ds
add
loope
adc
addr16
loopne
fstpt
jnp
rcll
loop
das
nop
inc
and
insb
rolb
cmp
imul
adc
mov
rorl
inc
xchg
pop
mov
cmp
aaa
arpl
xchg
and
pop
dec
mov
mov
enter
jb
pop
cmpsb
mov
loope
fs
add
cltd
jnp
ss
rorb
mov
dec
xchg
js
ret
fwait
inc
jno
je
jno
stc
pop
mov
mov
jae
loopne
sbb
into
cmp
das
xchg
push
dec
call
jge
repz
int3
sbb
movsl
cmp
sbb
and
jle
mov
pusha
fdivl
mov
dec
mov
mov
call
cmp
add
sbb
add
aad
dec
and
cmp
cmp
add
adc
adc
out
xchg
gs
gs
aam
cmp
icebp
orb
arpl
leave
cmp
xor
lret
movsb
lret
enter
push
scas
cmp
sbb
cmpsb
clc
push
xchg
mov
dec
push
repnz
ljmp
addl
pop
repz
call
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
jmp
and
mov
mov
jne
setnp
cmp
xchg
jle
jo
jle
mov
pushf
pop
jbe
sbbb
jle
sti
xor
ret
sub
jl
testb
rcr
iret
iret
sub
mov
loopne
cmp
repnz
push
in
and
hlt
lret
andb
pop
test
sub
mov
jae
std
xor
jmp
and
fucomi
and
and
cmp
sub
clc
mov
jbe
lock
cmp
aad
fbstp
or
dec
or
dec
mov
cmpsl
mov
enter
subb
push
sub
icebp
and
and
mov
mov
enter
mov
push
ja
jno
inc
clc
lret
jbe
push
lods
sbb
mov
sub
pop
mov
test
push
and
lods
push
stos
fwait
popf
mov
loop
imull
ret
nop
andl
xlat
push
jmp
mov
dec
stos
jle
mov
ja
xor
adc
add
push
test
movsl
mov
push
sbb
popf
mov
test
es
dec
cs
repz
vmaskmovdqu
shl
pop
in
push
push
inc
movl
fnstsw
xchg
outsl
test
adc
sbb
jb
clc
aam
xor
xorb
test
sub
dec
js
push
pop
bound
ffree
xchg
pop
mov
rcr
fwait
popf
inc
jle
pop
ja
mov
test
sbb
push
aaa
scas
mov
push
cmpsb
dec
mov
inc
stc
fisttpl
cltd
js
cmp
mov
mov
imul
bound
imul
into
mov
lahf
jne
stc
scas
incl
cmpsb
arpl
stc
insb
scas
fnstenv
call
dec
test
mov
and
iret
sub
pusha
pop
jne
jne
push
jg
incl
pop
dec
or
out
jno
fsub
pushf
xor
push
stc
ds
lcall
movsl
sub
jge
mov
add
push
shll
jg
call
cmp
lock
inc
ja
outsl
shr
mov
mov
mov
jle
adc
pop
roll
jb
lock
push
stc
lretw
fwait
mov
popf
push
roll
pop
dec
xchg
mov
cmp
iret
dec
out
jne
int
jb
shrb
in
jmp
out
scas
fs
shrl
push
cwtl
xor
xor
je
fisttpl
stos
scas
bound
cmpsl
dec
out
repz
sub
mov
insb
mov
sub
adc
lea
inc
dec
push
inc
xchg
fcomi
stos
gs
mov
aam
hlt
jmp
pop
push
dec
outsl
aam
cli
pop
push
xchg
push
dec
dec
jge
daa
jnp
das
out
push
fnsave
mov
pusha
ljmp
push
cmpb
xor
cvtps2pd
adcb
loope
push
adc
jl
xchg
divl
mov
add
jne
add
cmc
mov
mov
movsb
stos
mov
xchg
dec
add
sbb
aas
imul
out
aam
data16
lret
xor
jp
dec
arpl
iret
cmp
mov
xor
sub
mov
push
mov
xor
subl
or
and
and
gs
js
andl
push
adc
pop
fwait
ret
dec
js
mov
in
popf
repz
jb
cwtl
dec
sub
arpl
cli
xchg
mov
ljmp
stos
mov
and
xchg
pop
cltd
jb
add
hlt
xor
xor
add
add
imul
add
mov
mov
mov
jmp
push
and
jl
jge
movsl
sbb
inc
test
fmul
sahf
jle
jo
jle
dec
xor
lahf
xchg
pop
or
call
int3
xchg
stos
mov
fadds
adc
aad
fsin
out
xor
fimuls
unpcklps
jp
ret
fidivs
rorb
xlat
or
xor
xor
out
repz
inc
mov
cmp
std
out
inc
pushf
lcall
into
mov
sbb
push
decl
mov
aas
lret
inc
pop
rolb
and
fwait
inc
insb
push
std
push
dec
filds
das
aam
xor
mov
in
lcall
stos
push
jecxz
pusha
push
imul
fistpll
mov
lds
stc
lea
lcall
cmp
mov
add
cmpb
out
mov
outsb
dec
fdivrl
and
push
orb
rcrl
xchg
jge
popf
clc
push
jb
sti
outsl
pop
xor
push
and
jle
xor
cmp
inc
xor
cmp
enter
mov
pop
mov
pop
mov
imul
sbb
jle
jbe
dec
imul
push
add
insb
pop
rcrb
adc
or
lea
cli
sub
dec
push
pusha
shll
scas
out
dec
loope
in
jnp
inc
rcl
imul
jp
pop
sbb
int3
dec
push
mov
sbb
sub
pop
iret
cmp
pop
xchg
imul
xlat
ds
pop
daa
sti
sar
rclb
or
ja
pop
shrl
jbe
lods
addl
shl
int
mov
shlb
pop
ds
aas
cmp
pop
add
in
outsb
push
cmc
popa
imul
std
leave
lds
jecxz
cld
aad
or
push
movl
pop
fnstsw
outsb
mov
mov
shrb
and
lock
cmp
mov
fistl
add
push
rcr
mov
ss
and
pop
sbb
sbbl
xchg
mov
or
icebp
repz
mov
cli
pop
cmc
out
mov
xor
ljmp
xchg
test
jg
cmpsb
lds
sahf
out
jecxz
cmp
xor
or
xchg
mov
add
inc
insl
int
add
in
push
mov
mov
cs
pop
iret
mov
inc
bound
xchg
or
or
jne
xchg
aad
leave
mov
insb
out
nop
test
pop
lcall
dec
mov
sahf
adc
sarb
nop
adc
imul
mov
jl
movsl
out
leave
jle
rorl
xlat
cmp
mov
sbb
outsl
jnp
cmp
dec
inc
jne
ret
xchg
fcmovnu
test
and
push
adc
inc
add
lods
popf
fnstenv
and
xchg
inc
inc
loop
outsb
mov
pop
sti
inc
mov
jmp
andb
adc
fs
add
sahf
fs
cltd
cmc
insl
scas
adc
shll
sub
push
outsb
mov
jns
movsl
mov
jl
mov
pushf
pop
sub
or
sbb
xchg
push
cmpsl
aad
xchg
mov
clc
mov
dec
rclb
lcall
xor
mov
sar
jb
pop
gs
pushf
cs
jp
xor
enter
movl
insb
xchg
cmp
dec
dec
test
out
mov
jmp
imul
push
dec
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
jmp
pop
in
add
insb
xor
fcmovb
les
jle
jns
jle
dec
xlat
xchg
cmp
mov
xchg
int
cmc
mov
mulb
dec
insl
jne
mov
daa
xor
or
push
clc
cmp
or
mov
aas
sbb
cmp
repnz
mov
fs
fdivr
xor
shlb
mov
imul
pop
es
mov
aad
ds
sbbb
inc
hlt
mov
add
scas
mov
rcrl
mov
jle
xchg
mov
incl
fwait
xchg
fldcw
inc
jnp
sbb
xor
xchg
pop
clc
mov
jmp
xchg
inc
leave
cmpsl
out
adc
addr16
lods
sbb
out
adc
xlat
mov
pop
fmull
mov
stos
lea
aam
out
test
shll
xchg
outsb
pop
orl
sarb
xor
std
in
mov
js
cmp
sbb
repz
xchg
sub
sub
pop
sbb
add
jl
lods
sbb
sub
fcom
mov
jbe
push
in
lds
insb
jnp
popa
mov
aam
das
mov
add
or
sbb
lahf
movsb
xchg
std
push
mov
ljmp
data16
std
fwait
bound
addr16
cmc
mov
pop
mov
shll
xchg
add
add
and
in
ds
push
gs
xchg
das
ja
push
dec
mov
pop
push
insb
inc
mov
fs
ficoml
shrb
subl
je
ss
stc
stc
mov
fsubrs
push
xor
pop
or
lods
sbb
scas
mov
ficoml
incl
pop
rcrl
sbb
xor
insl
cmc
xchg
jae
inc
or
pusha
test
cmpl
outsl
cld
adc
push
cld
shl
sbb
mov
sbb
mov
inc
mov
inc
fisubs
call
jg
pop
insl
cmp
cmp
std
push
stc
pop
cmpsl
mov
dec
cmpsb
xchg
cmp
or
cmp
lahf
push
inc
rclb
xchg
cmpsl
mov
pop
and
sbb
scas
pop
pop
sti
xchg
push
dec
jg
push
sub
lcall
leave
jp
add
pop
inc
lods
sub
and
or
mov
cmc
or
ds
adc
loop
jp
dec
push
rcpps
push
out
mov
xor
fsubs
ror
loope
jg
out
daa
out
es
mov
mov
loop
mov
test
scas
leave
xchg
out
sarl
repnz
push
mov
push
stos
adcb
addr16
push
leave
cwtl
push
jno
push
roll
inc
or
pushf
pop
adc
stos
gs
sub
mov
adc
clc
jmp
sti
adc
cmpsl
daa
daa
ret
scas
cmp
ret
ror
mov
jo
xor
das
inc
aas
sub
fnstenv
xchg
add
shrl
dec
and
mov
scas
sub
pop
and
mov
push
outsl
push
leave
mov
divl
mov
cmpsb
test
sub
jl
adc
addr16
js
jo
jmp
jecxz
mov
xchg
movsb
test
cmp
and
stos
in
fadd
mov
les
jl
sbb
loop
xor
fisubrl
imul
dec
ljmp
sbb
loope
lret
push
in
sbb
xchg
ljmp
add
cmpsb
lea
sbb
adc
mov
adc
pop
dec
xor
and
lcall
mov
add
cli
jbe
mov
mov
xor
add
imul
mov
jmp
pusha
jecxz
jge
icebp
insb
fwait
mov
jle
jo
jle
outsl
in
pop
notl
enter
mov
and
dec
mov
enter
sbb
dec
insb
jo
jne
mov
daa
stos
out
inc
out
push
inc
xor
push
loop
out
jb
std
mov
adc
aam
add
add
adc
repz
xchg
imul
push
xchg
stos
sub
in
cs
add
and
js
fcoml
int
out
adc
xchg
push
shll
rcll
xorb
ret
pop
lret
fildll
mov
call
mov
and
mov
jne
fdivrs
jecxz
mov
rorl
dec
jg
pop
cmp
test
sbb
xor
pop
adc
mov
dec
bound
shl
push
adc
and
cmp
jno
into
jae
negl
push
xchg
repz
call
fsubrp
out
nop
das
xchg
cmp
hlt
sahf
cmc
rcrb
imul
out
pop
fmull
inc
in
pusha
aas
lds
cmp
xlat
jge
subb
add
lock
mov
out
adc
std
push
adc
popf
and
or
ror
mov
icebp
mov
imul
mov
push
dec
add
pusha
addr16
int3
sbb
lcall
ds
xchg
mov
icebp
imull
mov
or
int
and
psubb
outsb
dec
xchg
jns
divb
cmp
fs
xor
lods
test
xor
sub
cwtl
push
jb
ja
jle
dec
jp
aaa
cmp
lea
cmp
addb
sbb
rcr
insl
pop
mov
or
mov
arpl
sarl
in
and
pop
adc
je
fisubs
push
cmp
xor
scas
loopne
dec
test
and
mov
add
push
stos
mov
mov
sub
xor
adc
push
lods
in
cmp
pop
sub
xchg
fs
test
shlb
fldcw
mov
scas
adc
inc
outsl
cwtl
jg
sti
mov
push
mov
lods
and
push
jecxz
mov
jl
xchg
jo
test
add
pop
inc
xchg
in
and
push
pop
ds
xlat
push
les
out
mov
fwait
subl
sti
pushf
or
cmpsb
cltd
mov
sbb
mov
mov
loopne
cmp
and
jbe
test
mov
fptan
das
leave
scas
aad
add
or
dec
adc
xor
aam
jb
dec
test
sbb
xchg
test
test
jnp
test
mov
fcoms
inc
or
jb
dec
cmp
repz
std
mov
sti
mov
loop
inc
movb
arpl
lret
data16
xchg
adcb
movsl
std
jb
xor
insb
sbbl
pusha
and
xchg
inc
sub
cmpb
out
push
ret
xor
in
push
adc
mov
jg
sub
mov
xchg
pushl
sub
cmc
and
cli
push
pusha
add
xchg
divb
cld
fists
adc
sti
bound
pushl
and
outsl
or
cwtl
cltd
jecxz
les
push
sbb
in
push
loopne
cltd
push
jmp
lods
pop
out
mov
push
dec
ljmp
xlat
mov
lea
jmp
outsb
xlat
shlb
mov
pop
out
cmp
pop
xor
jle
xchg
aas
js
jae
test
iret
rorl
repnz
or
lea
cmpl
rorl
xchg
into
fcomps
nop
cmp
xor
jns
cmpsb
dec
jmp
ret
cvtdq2ps
rorb
es
mov
mov
in
adc
in
incb
dec
add
movb
insb
scas
dec
inc
fnstcw
pop
mov
push
sahf
push
mov
shlb
jb
hlt
adc
push
ss
enter
ficomps
cltd
sbb
pop
and
aaa
push
movsb
lea
xchg
rcrb
icebp
shlb
insl
popa
mov
push
popf
out
jle
das
mov
outsl
jne
push
xor
cld
popf
test
cmp
shlb
pop
cmp
ljmp
cwtl
dec
test
cwtl
test
xor
mov
mov
pop
mov
clc
outsb
and
icebp
xchg
js
jmp
lods
jp
out
insb
daa
mov
or
es
push
insl
inc
xchg
in
adc
push
notb
test
in
mov
mov
xchg
addb
push
jbe
in
lods
jns
into
mov
cmpsb
aad
icebp
cmp
jecxz
pop
out
int3
dec
mov
inc
stc
xchg
add
leave
xchg
enter
pop
push
int
dec
push
or
out
dec
sub
js
stos
inc
in
ret
pop
inc
ss
dec
sub
fildll
inc
and
mov
push
js
inc
decl
fsub
mov
inc
insb
shl
mov
lret
std
dec
fadds
mov
or
test
hlt
mov
jae
sub
mov
cltd
and
sbb
mov
adc
and
std
mov
mov
mov
ret
das
push
sub
adc
cmpsb
add
xchg
inc
fstl
int
clc
and
jl
stos
push
je
fwait
lcall
outsb
mov
sub
pop
dec
imul
xchg
and
push
sub
fildll
adc
cld
cld
inc
fs
xchg
dec
sbb
test
or
mov
stos
inc
sub
pop
imul
js
loop
push
pushf
mov
jge
sahf
jmp
insb
mov
nop
test
push
sti
xchg
test
and
pop
xchg
cmp
cld
xor
hlt
repnz
push
imul
leave
ret
daa
lds
fisttpl
push
popf
mov
loop
dec
movsl
repnz
mov
mov
xchg
out
jbe
clc
dec
jo
js
fldenv
shl
out
dec
leave
adc
bound
adcb
cltd
repz
cmp
or
mov
xor
in
int3
fldl
mov
loope
xchg
xchg
fidivrs
mov
mov
push
jno
push
repnz
test
les
and
sub
xor
adc
xchg
gs
xor
dec
lods
fadds
xor
sbb
pop
cmp
cmc
cmp
and
andb
fnstsw
roll
cmp
int3
and
ds
mov
pop
mov
mov
xlat
stos
mov
stos
test
fdiv
and
test
incb
cmpsb
mov
pushf
xor
push
hlt
test
lea
xchg
inc
popa
out
hlt
lret
pop
dec
pop
mov
cld
push
mov
add
test
jl
jno
stos
sub
xor
inc
mov
add
leave
pop
sub
and
out
fmulp
xchg
dec
stc
inc
cmc
loope
mov
mov
test
mov
dec
jp
dec
mov
inc
popa
cmp
pop
mov
inc
repnz
xchg
jne
ror
push
clc
mov
xor
mov
jmp
sahf
lcall
adc
and
sub
scas
jle
jo
jle
or
test
sahf
addr16
xchg
mov
jmp
mov
sbb
adc
test
scas
and
mov
mov
out
leave
mov
jg
add
jecxz
cmpsl
fs
mov
adc
dec
adc
pop
aad
out
add
stos
mov
lods
adc
push
cld
or
rcll
inc
lock
sub
sub
or
and
pop
jno
in
push
sub
and
mov
fdivrl
dec
lret
sti
cmc
mov
mov
jge
sar
outsb
xor
out
fimull
sti
pusha
jmp
pop
stos
lcall
mov
mov
cwtl
lods
sbb
pop
lea
dec
aas
adc
es
stc
or
sub
or
out
aas
lock
lret
sub
rcll
pop
xor
dec
notb
cmp
stos
push
mull
jmp
jmp
call
inc
push
ja
push
lcall
sti
cwtl
jmp
aas
xchg
fcoms
cmp
ja
push
test
sbb
movsl
fisttpll
inc
in
iret
roll
pop
sbb
cmp
test
cmp
cmp
daa
sub
or
cmp
addr16
xchg
jl
repnz
and
pop
sbb
adc
jns
inc
pop
jbe
gs
ss
cmc
dec
dec
dec
xchg
mov
fstpt
insl
push
sbb
push
jnp
ljmp
in
insl
lret
gs
push
jmp
int3
lcall
adc
sar
iret
lods
lea
test
fucom
push
pop
xorl
cmc
sbb
cmp
cmpsl
in
out
mov
lods
int3
inc
stos
mov
negb
je
outsl
ret
adc
push
dec
sbb
stos
xor
jmp
add
lret
pop
lahf
and
inc
cmp
add
daa
cmpsb
daa
stc
mov
jnp
or
cmp
push
out
jne
mov
cwtl
jg
cmp
imul
jne
or
adc
insl
jns
or
adc
jno
mov
xor
and
pop
call
xchg
adc
pop
and
sub
call
and
lcall
movl
insl
dec
in
xchg
cmp
jne
push
fcomps
jecxz
cmp
xorl
xor
in
cs
mov
mov
rcl
push
cmpsb
es
or
push
pusha
jo
xchg
jecxz
hlt
push
lods
mov
jg
scas
and
cli
cmpsl
cli
repnz
fdivp
or
imul
arpl
in
xor
popf
mov
ret
repz
xchg
outsb
rolb
mov
cld
dec
movsl
mov
hlt
sub
mov
lea
repz
aam
mov
mull
jecxz
jmp
mov
push
and
imul
cmp
scas
ja
fldl
bound
pop
iret
pop
pop
es
inc
cmp
jge
inc
andb
test
stos
cmc
shrl
mov
imul
mov
repz
or
add
mov
add
add
dec
sar
clc
loop
cmp
mov
sti
aas
lea
xor
loopne
cmp
sub
iret
xchg
or
test
xor
sub
arpl
mov
lahf
in
js
rcll
out
lret
mov
scas
dec
adc
enter
popa
jno
push
xchg
into
dec
or
lods
fcomps
and
dec
aaa
push
test
out
xor
cmp
jb
out
cmp
call
adc
inc
daa
in
aaa
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
jmp
mov
xchg
imul
js
jle
jns
jle
les
sahf
fldt
loop
inc
xchg
add
xchg
pop
jle
dec
jl
int
popf
mov
sbb
es
pushf
in
aas
scas
sbb
add
pushf
cwtl
fcomp
out
mov
dec
push
repnz
xchg
mov
mov
rolb
mov
sbb
sbb
inc
lock
dec
push
icebp
push
aaa
hlt
xor
sbb
movsb
test
sarb
jae
daa
testb
lcall
je
or
sub
jp
sub
ret
jmp
pop
inc
sub
in
mov
stc
jae
mov
mov
outsb
xchg
or
fnstenv
cmp
add
ss
in
mov
mov
jge
cmpsl
xor
subb
lds
adc
ds
xor
je
push
testb
xor
pop
sbb
pop
pop
or
rclb
int3
push
cmp
add
leave
cmp
movb
sub
les
sub
repnz
les
lods
sbb
lahf
lret
mov
sub
imul
imul
fisubrs
jns
and
in
cmp
fistpll
std
outsb
adc
stos
jo
pop
xchg
stos
aad
rorb
cmp
aad
jecxz
cmpsb
adc
lret
out
enter
lock
fcomi
loop
bound
mov
and
mov
mov
movsb
xor
in
shll
into
sbb
and
mov
and
jnp
loope
scas
icebp
cmp
inc
stos
test
sub
or
push
pop
jb
sahf
sub
inc
xchg
syscall
imul
fsubrl
mov
xor
subb
inc
in
sbb
fbstp
add
addr16
inc
pushf
jle
int
pop
fs
repnz
sbb
fidivrs
sarb
jg
cmp
jae
dec
xchg
push
fnstenv
ror
sub
jno
lods
push
or
dec
or
add
into
or
jbe
in
adc
add
jmp
in
cmpsl
imul
push
enter
es
in
int3
lock
sbb
out
jmp
test
pop
mov
sarb
mov
dec
sub
aad
mov
out
jmp
sarb
roll
sub
cmp
push
jl
xchg
sbb
add
mov
daa
mov
lret
push
sub
iret
repnz
xchg
pop
inc
addr16
test
into
mov
fiaddl
xchg
jle
adc
pop
cwtl
or
lcall
fcoml
inc
add
cmp
scas
cwtl
sti
and
insb
pop
aad
outsb
mov
cmp
add
xor
lret
mov
cmp
xchg
xor
fucomi
sti
cmp
mov
xor
mov
dec
jo
push
lock
fs
clc
test
mov
lods
xor
mov
test
mov
fstps
dec
mov
and
insb
std
push
dec
cmp
lcall
incb
imul
dec
push
out
imul
repz
stos
push
std
add
pop
jecxz
or
dec
pop
insl
inc
in
pop
jge
sub
es
push
xchg
loopne
in
mov
dec
pop
or
dec
sbb
jl
adc
inc
jb
push
stc
outsl
or
xchg
and
pop
iret
add
nop
mov
fcmovnu
mov
stos
push
xchg
jle
sarb
push
xorb
mov
pop
fimull
xchg
jge
pop
leave
ret
push
mov
sub
sbbl
push
sbbl
push
incl
push
andl
push
adcl
call
test
movl
je
adcl
xor
inc
movl
jmp
add
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
sub
movl
sbbl
lea
movzbl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
sub
lea
mov
adc
mov
mov
xor
or
sub
or
mov
mov
mov
sub
mov
mov
or
mov
mov
andl
xor
sbb
mov
xor
add
mov
mov
movzwl
cmp
mov
movzbl
mov
je
sub
mov
xor
add
sbbl
imul
movl
mov
movl
jmp
addl
xor
sbbl
add
mov
movzbl
sub
mov
xor
adc
add
not
mov
mov
mov
xor
xorl
add
movl
cmp
jne
sbbl
push
movl
pushl
sbbl
pushl
adcl
call
and
mov
mov
and
mov
sub
mov
neg
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
or
sbb
mov
mov
mov
or
movl
or
mov
movl
xor
mov
and
mov
and
mov
orl
xor
subl
xor
adcl
add
mov
adcl
xor
xor
adcl
add
movl
lea
movl
mov
movl
cmp
movl
ja
jmp
adc
mov
addl
mov
xor
xorl
lea
push
andl
xor
or
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movzbl
adc
mov
mov
xor
movl
lea
subl
push
and
mov
adcl
pushl
call
mov
mov
mov
or
xor
lea
mov
or
mov
subl
xor
xorl
xor
add
mov
andl
xor
movl
lea
movl
mov
movl
cmp
movl
jbe
movl
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
add
mov
inc
mov
subl
pushl
orl
sub
subl
pushl
adcl
xor
mov
pushl
call
sub
adc
xor
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
repz
jae
hlt
aaa
scas
aad
pop
out
arpl
mov
jle
jns
jle
and
clc
xchg
cmp
mov
xchg
out
mov
repz
fs
cmpsb
cli
xor
sub
and
outsl
push
cmc
jb
movsb
cmp
rclb
pop
loop
ficoml
repz
in
push
jp
pop
fs
push
jp
jo
fsub
pop
imul
mov
fwait
ljmp
jns
in
or
sub
cmp
sbb
and
rcll
test
xor
dec
clc
out
pusha
cmp
push
pop
adc
cli
shlb
add
lahf
sub
or
push
arpl
cmc
es
inc
and
jb
cli
mov
fiaddl
jecxz
repz
popf
dec
inc
xor
mov
loope
sbb
aaa
xor
xchg
mov
mov
push
fbld
inc
xchg
jbe
repz
xlat
dec
jl
mov
mov
cmp
cld
stos
pop
arpl
cmp
lret
hlt
out
lret
push
sar
mov
xchg
scas
mov
mov
mov
inc
pop
mov
repz
push
mov
xchg
pop
mov
sahf
mov
out
addr16
add
or
lcall
jmp
es
outsl
push
enter
imul
rol
mov
and
pop
int3
nop
sar
test
loope
pop
icebp
hlt
jnp
cld
fisttpl
xchg
dec
movsb
gs
pusha
pop
jmp
add
leave
pavgb
clc
bound
mov
sbb
mov
rorb
or
insl
push
jno
jmp
jp
outsb
insb
cmpsl
push
popf
xlat
jp
cltd
shl
mov
jne
adc
push
or
xchg
mov
sahf
jns
mov
fistpl
or
stos
ret
xchg
sti
test
jns
ljmp
call
mov
xchg
xor
rcr
jecxz
lcall
sbb
and
jecxz
pusha
pusha
inc
xor
iret
insb
fldl
add
les
movsb
mov
and
lods
test
out
dec
jmp
jg
bound
jo
pop
test
sti
in
jb
adc
sarb
ret
push
xor
outsl
into
mov
add
inc
push
dec
lret
dec
test
shrl
outsl
movsb
push
popf
setle
pop
jnp
test
xchg
add
xchg
pop
mov
fbld
pop
inc
push
js
loope
jnp
clc
inc
jg
mov
adc
cmp
leave
insl
dec
mov
or
jb
mov
shll
pushf
jb
lret
xor
hlt
xchg
mov
and
and
nop
or
test
stos
call
and
jge
and
mov
test
aad
cli
push
mov
ss
xor
xchg
mov
pop
cltd
sbb
imul
lret
inc
scas
imul
xchg
movsb
enter
cld
loop
out
xchg
mov
cltd
out
pop
inc
cmp
pop
add
pop
xor
push
repnz
and
shlb
repz
call
aad
repz
popf
es
je
jnp
jns
xchg
bound
jne
pushf
iret
test
mov
movl
movl
push
mov
mov
mov
movl
push
movl
mov
movl
mov
movl
cmp
je
or
jmp
cmc
pop
inc
gs
jge
pop
push
add
push
inc
sahf
mov
jle
jns
jle
dec
cmp
xchg
fcoms
xor
imul
mov
lock
out
push
push
das
daa
xchg
sbb
icebp
mov
xchg
mov
insb
bound
xor
scas
sbbb
int
insb
sub
push
xor
push
xchg
loopne
mov
dec
out
mov
jge
lock
and
or
in
icebp
shlb
stos
add
lds
daa
adc
lea
icebp
in
hlt
imul
inc
jl
mov
ficoml
stos
xchg
jge
inc
mov
dec
or
shlb
xchg
fists
mov
pop
or
mov
dec
in
ljmp
sub
sub
xor
les
jecxz
stos
popf
arpl
xchg
xchg
xor
lods
and
mov
mov
mov
jmp
repnz
mov
and
jns
mov
xor
mov
and
pop
sahf
cmpsl
inc
mov
sahf
push
jnp
fsub
addr16
xchg
lea
adc
push
cmpsl
mov
aad
mov
jbe
iret
ljmp
inc
inc
xchg
push
sub
out
mov
enter
cmpsl
fidivl
add
jns
cli
sbb
mov
mov
xchg
js
cmp
mov
cli
sbb
pushf
jbe
sahf
ss
loopne
repnz
dec
dec
inc
mov
cmp
push
push
mov
mov
adc
test
push
or
lret
mov
cmp
ja
popf
popf
jecxz
shrb
test
cli
movsl
add
in
repz
subl
push
jmp
pushf
fcoms
add
pop
mov
je
and
xor
fdivs
inc
sub
adc
divl
jge
pop
sti
mov
ds
in
xchg
ret
out
fdivs
adc
fistpl
and
mov
mov
and
xor
popf
mov
in
mov
es
jge
les
nop
push
clc
push
ja
lock
push
dec
mov
xor
xlat
fwait
aaa
mov
dec
fwait
aaa
mov
adc
adc
mov
lcall
lods
or
ret
mov
ds
test
in
ja
enter
add
in
in
mov
dec
push
fadds
mov
out
in
dec
pop
pusha
xchg
or
inc
push
sbb
pop
insb
int3
int3
sbb
aam
into
sahf
arpl
movsl
mov
jno
fnstenv
push
jmp
mov
das
push
fs
mov
mov
xor
aam
or
stos
mov
dec
xchg
int
jns
add
sbb
or
or
add
enter
pop
or
add
out
fmul
js
xor
jge
outsb
inc
add
and
mov
into
cmp
lret
xchg
ljmp
pusha
adc
shlb
stos
hlt
cmpsb
add
jae
inc
mov
sub
fsubl
pop
jmp
movsb
jle
aam
mov
dec
pop
ficoml
cld
mov
xorl
xor
add
movl
cmp
movl
je
and
mov
mov
xor
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
and
add
push
pushl
pushl
mov
jmp
pop
pop
cld
sub
mov
push
in
cmp
jle
hlt
jns
jle
subb
pop
push
inc
sahf
add
add
xchg
dec
xlat
mov
push
pusha
roll
out
test
pop
js
adc
sbb
js
sub
js
sbb
mov
jecxz
jns
lret
jne
add
sti
inc
push
jo
adc
in
sbb
loopne
mov
mov
push
cmpsb
pop
lds
test
and
add
jg
sub
inc
das
sarl
imul
or
subb
and
aad
out
xor
cmp
add
adc
enter
adc
ss
push
les
lret
xorb
roll
out
mov
xor
or
scas
stc
insb
pop
repz
cmp
daa
inc
out
mov
in
xchg
andb
push
cwtl
bound
xorb
cmpsb
aaa
mov
xor
das
test
je
push
dec
xchg
xchg
movl
les
jns
lock
add
mov
insb
add
xor
repz
push
jbe
es
xor
cld
mov
loop
and
js
push
int
subl
inc
mov
std
test
rorb
cmpb
jno
fidivrs
inc
cli
mov
add
test
mov
outsl
outsb
testl
insb
and
mov
sub
fbstp
xchg
lods
pop
in
ror
aad
adc
xor
gs
xor
mov
inc
dec
push
mov
rol
js
test
int
das
mov
mov
pop
jb
out
pop
mov
xchg
sbb
pop
or
hlt
jno
push
out
xor
jp
fdivrl
xor
jbe
pusha
mov
nopl
jne
mov
mov
jnp
sub
mov
mov
cmp
mov
dec
mov
or
cmc
jp
pop
movsb
popa
push
mov
rolb
pusha
sub
adcl
mov
xchg
scas
or
jl
repnz
mov
xor
mov
fnstcw
dec
add
into
cmp
or
sub
jnp
les
addr16
jg
insb
stos
mov
mov
and
mov
out
mov
popa
or
adc
out
push
cmp
mov
mov
mov
out
es
mov
adc
or
add
scas
cmp
fsubs
in
push
popf
adc
cmpl
scas
sti
push
test
cs
or
pop
and
test
cmp
cmp
fbstp
scas
es
pop
cmp
push
mov
into
test
push
pop
push
xchg
cs
push
repnz
xchg
push
jmp
xchg
aad
scas
insl
je
outsl
cmp
ljmp
mov
mov
push
and
outsb
rcrl
int3
sub
arpl
int3
test
sub
xchg
jmp
xchg
and
jbe
ds
pop
loopne
jae
test
add
add
add
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
jmp
in
ss
xor
icebp
add
lret
push
jbe
cmpb
jle
add
mov
test
popf
stc
and
push
repnz
mov
sbb
mov
mov
stos
into
mov
incb
pop
cmp
adc
sbb
shll
add
cltd
cltd
pop
lahf
in
aas
and
mov
scas
mov
shlb
mov
lret
das
aad
mov
inc
add
bound
insb
jecxz
shr
jae
cli
jno
addr16
rol
pop
imul
mov
scas
les
pushf
hlt
mov
mov
in
iret
pop
xor
sub
pop
mov
ds
fsubs
clc
out
je
popf
bound
ret
arpl
movsb
jnp
push
push
adc
and
hlt
and
adc
xor
add
out
mov
xor
jns
rcl
lods
jle
lret
idivb
mov
jecxz
mov
insl
dec
jmp
jo
sub
xor
stos
les
loope
jae
sti
pop
jg
push
cmp
fcoms
sbb
mov
push
test
movsb
dec
rorb
adcb
shlb
sbb
sub
mov
sete
jle
movsl
outsl
jb
push
dec
popa
mov
lods
mov
mov
mov
sub
add
cmc
lcall
xor
ret
aaa
lret
xor
cs
out
clc
cmp
aas
dec
add
incb
cwtl
ljmp
xor
js
icebp
mov
xor
jae
pop
insb
out
ret
outsl
rorl
xor
jnp
sub
push
in
leave
inc
jle
sbb
jnp
push
mov
lock
lahf
in
sbb
cld
mov
decb
inc
or
out
cmp
cmp
out
data16
pop
mov
jle
stos
push
push
cmpsb
xchg
rcll
pusha
imull
roll
jbe
dec
push
repz
add
ret
jl
std
js
sbb
push
jns
incl
fmul
xchg
scas
pop
insl
add
or
loopne
sub
mov
push
cmpsl
outsl
nop
push
daa
jbe
jne
test
and
dec
paddusb
loop
ja
push
iret
mov
jo
les
enter
aas
nop
aam
pusha
jp
loope
in
jne
lahf
mov
lret
jo
pop
sub
push
cld
stc
nop
popa
fadds
mov
fst
into
fwait
jmp
mov
pop
push
sub
icebp
jg
xor
ss
fisubrs
addr16
cmpsl
and
mov
push
inc
push
adc
mov
push
shlb
les
sbb
leave
jle
out
popf
cmp
sub
int
dec
adc
mov
mov
clc
sbb
jge
add
jnp
cmp
popa
push
or
mov
sbb
idivl
gs
inc
xor
scas
xchg
dec
jecxz
adc
cmp
dec
push
dec
cmp
out
repnz
int3
and
xor
push
orb
sbbb
shrl
cltd
push
jbe
subl
dec
shrl
inc
jle
lock
mov
push
call
mov
in
and
sub
xor
mov
into
mov
pop
jmp
push
clc
clc
mov
test
adc
and
jle
hlt
jns
jle
adc
xchg
pop
je
fmulp
adc
call
xchg
inc
imul
lods
in
inc
enter
add
xchg
out
jbe
ficompl
and
into
roll
insl
jae
fistpl
loope
xor
fldt
pop
lea
lcall
outsb
sbb
cmp
cmc
stc
inc
mov
hlt
add
jmp
inc
xor
enter
and
fldcw
test
lcall
mov
rolb
sbb
loope
int
and
ds
xchg
into
dec
into
sbb
loopne
arpl
or
outsb
mov
insl
xor
std
sarl
in
scas
andb
lcall
mov
cmp
push
mov
push
lcall
stos
lods
fidivrs
lds
paddsw
movl
add
mov
stos
cmp
in
mov
push
addr16
sbb
jle
mov
cmp
into
jo
roll
es
xor
aam
bnd
movl
push
jl
sahf
pop
syscall
out
scas
pop
fs
or
and
cmpsb
push
jo
mov
dec
pop
rclb
add
insl
mov
cmp
scas
stos
mov
sub
lea
mov
jp
dec
and
jb
pop
mov
inc
movsl
jne
push
inc
int3
sbb
mov
and
sahf
mov
xor
jne
inc
ljmp
fcmove
repnz
fnsave
aaa
mov
test
jo
xchg
fwait
cmp
push
popa
inc
or
in
push
and
push
movsb
push
push
and
push
or
jo
imul
inc
int
cld
or
ret
sbb
andb
mov
ss
mov
cmp
mov
aad
push
sub
bound
push
out
inc
cli
leave
jno
pop
gs
cmp
aaa
xor
fstpl
mov
jne
out
push
in
aad
addr16
test
or
or
data16
loopne
sbb
sbb
ret
xchg
mov
fcoms
dec
fistps
mov
add
xor
and
xor
jp
mov
cwtl
pusha
lret
aad
add
sti
loop
and
add
cmpsl
mov
gs
xor
cmpl
adc
ss
xchg
outsl
movsb
cli
popa
sbb
push
outsl
pop
cld
inc
xchg
enter
arpl
mov
jmp
push
test
sub
lods
je
sbb
popa
jo
les
mov
repz
jmp
jmp
xchg
add
leave
pushf
mov
mov
dec
sahf
xor
cmp
outsl
icebp
lods
cmp
sub
mov
in
aad
xor
popf
sbb
mov
imul
mov
into
idiv
xchg
push
leave
adc
xchg
mov
pop
cwtl
aas
fisubl
out
int
inc
push
mov
lahf
cmp
mov
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
xor
mov
andl
mov
add
xor
cmp
movl
jne
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
jmp
mov
jae
mov
sub
pop
loop
sub
inc
jle
pushf
jg
jle
out
xchg
mov
rep
ja
shll
in
lret
data16
cli
into
jmp
test
adc
repz
xchg
sub
lcall
loope
fisttpll
aam
push
xor
scas
mov
mov
loope
les
scas
mov
js
dec
in
gs
dec
imul
add
fistpll
or
divb
addr16
loope
fists
pop
sbb
sub
mov
jne
ds
call
jecxz
mov
push
out
jns
cld
fldl
and
nop
mov
mov
push
insb
jge
cwtl
imul
xor
mov
pop
test
dec
inc
loopne
adc
ss
mov
scas
xlat
fwait
dec
in
adc
mov
movsb
jbe
je
mov
stos
mov
call
test
pop
cmp
outsb
insl
mov
mov
in
xor
imul
add
jp
imul
pop
adc
xchg
mov
and
gs
xor
es
xchg
inc
push
insl
cmc
daa
mull
dec
imul
aaa
xor
push
test
je
out
pop
das
xor
xchg
nop
adc
aam
lea
mov
adc
xor
mov
inc
les
shr
inc
aam
sbb
mov
push
lea
jne
fbld
pop
movsl
xor
adc
fs
insb
mov
mov
jmp
cmc
mov
enter
cmpsl
mov
rorb
jle
pushf
jg
jle
mov
mov
out
fidivl
mov
inc
fists
fisubrs
aad
leave
dec
pop
cwtl
ret
xchg
movsb
mov
test
andl
ret
test
jne
addl
pop
mov
es
mov
ret
mov
inc
add
in
pop
push
test
xor
inc
pop
xchg
jle
mov
test
pusha
cmp
dec
es
inc
pop
dec
shll
fisttpll
jg
xchg
jae
fildl
cmp
xchg
sub
sub
push
dec
in
out
mov
lock
nop
lods
pop
mov
cs
lds
adc
dec
into
sbb
insb
cltd
or
pop
andb
dec
in
inc
mov
or
mov
pop
mov
icebp
mov
mov
lahf
pop
jmp
ja
test
jge
mov
popf
pop
and
lcall
fwait
pop
leave
cwtl
int3
mov
cmp
mov
lret
lds
orb
xchg
lds
lahf
mov
enter
jmp
xlat
jecxz
or
xchg
push
test
or
mov
jp
cmp
in
test
sbb
out
xchg
jmp
orl
fwait
movsl
pop
pop
cmp
dec
in
ss
aaa
mov
pop
or
pop
lds
and
test
ret
and
hlt
inc
hlt
or
cmpsl
lds
movsb
sbb
rol
insl
sub
repz
rorl
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzbl
adc
mov
andl
xor
add
movl
jmp
cmp
arpl
mov
arpl
test
inc
jle
popf
js
jle
xchg
popa
rcll
loop
fbstp
enter
pop
ds
out
subb
xor
mov
mov
imul
dec
push
ffree
inc
adc
mov
pop
and
call
sub
jnp
mov
pmaddwd
int3
cmp
xchg
cmp
dec
or
cmp
inc
lock
xchg
adc
sbb
add
xchg
dec
or
dec
xor
jno
add
push
and
ds
lret
cmp
fwait
fs
xchg
or
jmp
mov
push
js
push
push
pop
sub
inc
mov
xchg
mov
mov
add
mov
roll
test
push
sbb
sub
jl
push
adc
sbb
and
out
fldcw
inc
jns
aam
or
xor
sarl
fcmovnb
pusha
jp
pushf
scas
push
cs
cld
test
cwtl
test
or
lds
push
jmp
sbb
cs
lods
mov
aas
jbe
lcall
mov
push
pusha
loope
jno
sub
pop
or
sbb
and
dec
jnp
flds
je
jnp
push
pop
mov
push
movsb
mov
shl
addl
and
scas
xchg
scas
addr16
push
mov
jno
cmpsb
pop
popf
and
jo
dec
cwtl
pop
rcl
ss
mov
leave
shrb
bound
push
sbb
cmp
adc
jbe
fwait
in
or
aad
xor
pop
fldl
mov
inc
out
test
bound
aas
jg
jp
jnp
xor
xchg
mov
aad
movlps
sbb
sub
sub
xlat
insl
sbb
fiadds
mov
lods
mov
or
repz
imul
sub
pop
mov
cltd
fs
movb
mov
push
gs
insl
mov
sbb
push
ljmp
push
out
loope
xor
xor
lret
sub
rcrb
ja
in
xor
movsb
mov
push
fldl
inc
jg
jns
dec
loope
jae
jae
or
and
fdivs
sub
jmp
pop
les
push
inc
ljmp
adc
cmp
mov
mov
movl
movl
mov
mov
push
movl
mov
mov
cmp
movl
je
mov
xor
subl
xor
xorl
lea
xor
cmp
jne
movl
jmp
jmp
inc
lods
xchg
addr16
mov
leave
dec
jle
popf
js
jle
enter
repz
cli
stc
mov
and
push
mov
xchg
or
and
cmpl
sub
fwait
js
jecxz
mov
pop
jne
xchg
movsl
cmp
inc
popa
je
jl
lock
lods
xchg
sar
dec
outsl
shlb
por
stos
imul
sub
sbb
lret
pop
adc
imul
loop
insb
out
mov
js
xor
pop
mov
adc
adc
rorb
sub
add
lret
sub
xchg
cmc
pushf
lret
or
and
add
jle
leave
dec
jno
or
jae
and
xchg
adc
xor
sub
inc
test
ja
inc
jnp
out
cs
dec
jecxz
pop
jb
xchg
filds
sbb
rolb
inc
inc
jmp
scas
jnp
sbb
inc
fisttpll
pushf
cmp
jge
mov
inc
jp
fcom
mov
lods
sbb
xchg
ljmp
inc
pop
aad
fmul
xlat
or
pop
in
aas
xchg
add
mov
fbld
call
frstor
push
jecxz
pop
mov
inc
shl
push
jp
aas
push
popa
cs
jno
mov
sub
mov
pop
fdivs
pushf
mov
cmpb
popf
cmp
pop
hlt
and
out
mov
lahf
out
sub
pop
pop
or
fldcw
enter
jl
test
xlat
fcoml
loop
popf
shlb
jo
sub
or
movsb
push
and
cmpsb
fninit
in
dec
cmp
repnz
sub
fadd
fsts
jnp
sbb
fisttps
push
scas
movsb
cli
push
popf
dec
js
add
fistl
pusha
xchg
jp
lea
repnz
cmc
or
cmpsb
xchg
push
inc
out
es
pop
mov
imulb
xor
push
push
push
pop
sbb
insb
cld
xchg
test
leave
ja
add
or
cltd
roll
xchg
xchg
addb
xchg
cld
adc
xchg
rolb
cmpsl
dec
sbb
adc
inc
add
addr16
dec
dec
inc
imul
ret
and
xor
inc
div
incb
cmp
or
cs
shll
insl
add
scas
push
mov
jno
mul
pop
fwait
jnp
negb
or
insb
mov
cmp
xor
shll
decl
jne
mov
mov
xor
jmp
jo
rsqrtps
pop
jge
pop
mov
std
movsb
push
js
jle
push
mov
or
add
in
pop
add
filds
into
int3
lahf
push
pop
xchg
mov
add
xor
push
sub
jno
mov
xchg
sbb
inc
jecxz
bswap
ret
popf
icebp
sbb
mov
sbb
jo
jne
push
nop
mov
cld
movsl
mov
sbb
addl
pop
xchg
movsl
test
sub
push
mov
js
pop
jne
and
push
xchg
leave
inc
or
stc
inc
adc
push
sub
mov
cmc
lock
mov
dec
cmp
sub
in
mov
lret
fsubrs
ror
pop
lret
mov
hlt
inc
sbb
cmp
cmpsb
or
pop
cmpsl
fwait
test
orb
clc
adc
mov
stos
mov
mov
dec
add
pop
pmulhw
popf
xchg
mov
fwait
jle
push
arpl
mov
lods
sub
enter
loop
add
out
dec
adc
shlb
cwtl
sub
pop
push
xor
scas
fnstenv
mov
pop
push
mov
out
push
xlat
fs
jp
dec
mov
stc
imul
xor
pop
out
inc
mov
pop
out
add
cmp
insl
sub
pop
jnp
jle
xchg
sub
add
repnz
lods
add
das
scas
adc
jg
mov
cmpsb
shll
jno
mov
add
in
in
sarl
repz
test
and
popa
cwtl
mov
mov
pop
pop
out
int3
pop
cmp
xchg
jo
or
aaa
add
mov
test
fildll
xor
fdivrp
pop
sarl
cmp
popf
daa
loop
jecxz
lret
pop
ljmp
dec
push
jb
roll
repnz
ret
xchg
and
or
push
int3
icebp
xor
loope
clc
push
jbe
jg
mov
mov
jmp
mov
fnsave
pop
jl
cld
pop
rcl
je
ret
jnp
jmp
icebp
sbb
insl
pushf
xor
lods
lds
in
lcall
inc
mov
adc
or
fs
adc
fistps
pusha
add
rcl
inc
jne
jmp
cwtl
xchg
les
inc
sub
out
clc
cmpsl
jns
lock
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
movl
mov
xor
movl
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adcl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
mov
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
adc
mov
xorl
add
orl
mov
sbb
mov
xorl
push
movl
push
sbbl
test
je
mov
sbb
mov
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
imul
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
add
jmp
roll
std
mov
xchg
inc
jg
xlat
mov
pop
jg
jle
sbb
cwtl
addr16
test
insl
fistpll
loope
inc
push
fnstcw
aaa
fdivl
xor
mov
jecxz
inc
clc
mov
clc
push
fs
pop
hlt
mov
push
push
movb
jp
outsl
pop
aad
xor
xorb
pop
daa
les
dec
jnp
or
imul
inc
cmp
or
adc
add
roll
mov
ret
insl
repnz
lds
cld
cmp
jns
out
sbb
shll
jnp
ss
jl
pusha
cmp
push
lcall
insl
xor
dec
pop
arpl
cmpsl
mov
jmp
sbb
sub
xor
daa
imul
lahf
in
and
mov
lret
fisttpl
rorl
xchg
dec
ret
call
and
icebp
sti
in
dec
and
filds
jmp
jnp
stc
jl
int3
dec
repz
mov
sub
pop
sub
push
aas
jne
sti
xchg
jl
popa
push
shl
cmp
aaa
pop
add
adcb
and
and
inc
lods
mov
and
ss
test
push
push
xor
xor
lea
inc
xchg
pop
popa
hlt
lds
add
incb
sub
data16
or
cmp
insb
jmp
stos
outsl
adcb
fistps
jae
test
insl
push
sub
sub
sub
clc
popf
aam
sbb
fdivrl
das
cwtl
movsl
test
rorl
scas
cli
testl
cli
inc
mov
nop
std
pop
adc
cltd
lock
inc
sbb
dec
js
incb
lock
insb
jge
lret
mov
mov
add
or
mov
jmp
lret
outsl
dec
jne
stos
movsb
loope
lods
std
pop
push
mov
push
jle
pop
jg
jle
inc
int
movsb
cld
jns
cmp
or
bound
out
lret
jne
push
lahf
pop
sub
cmc
shlb
xor
shrl
adc
or
sub
mov
sbb
pop
test
cmc
out
addr16
xor
push
mov
iret
shll
adc
out
mov
dec
xor
ret
sbb
mov
je
dec
mov
or
cmpsl
fdivrs
loop
cwtl
rol
pop
cmp
js
ss
pusha
in
fucomp
filds
xchg
leave
adc
pop
cmp
scas
test
fadd
sub
or
mov
sub
clts
mov
loope
out
je
loope
pop
push
jle
pop
mov
mov
insb
pop
or
lcall
icebp
paddusw
cmp
ljmp
jbe
test
adcb
outsl
inc
jmp
fbstp
outsl
das
mov
mov
pop
xor
add
jmp
not
orb
lods
xchg
xchg
xor
xor
push
and
sbb
jle
pop
or
jmp
mov
xchg
mov
sub
sub
enter
xor
xchg
cmpl
dec
inc
pop
jbe
outsl
cmpl
pop
outsb
lods
iret
and
pop
xchg
jl
icebp
sub
sarb
sbb
mov
sbb
outsl
paddq
and
xorb
das
sbb
rorl
push
je
repz
arpl
test
and
sub
lods
mov
scas
push
fistps
ret
jno
push
icebp
mov
cmp
sub
xchg
sub
xor
xor
adc
mov
mov
decl
mov
mov
mov
addl
xor
xor
add
mov
mov
mov
movl
je
adcl
mov
adcl
xor
orl
add
movl
cmp
jne
sbbl
pushl
orl
call
and
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
xor
add
cmp
je
orl
pushl
pushl
subl
call
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
jmp
scas
repz
add
push
out
sub
and
push
jle
pop
jg
jle
push
dec
dec
flds
mov
adc
cltd
sub
out
test
punpckhbw
or
xlat
push
dec
inc
mov
xchg
adc
gs
data16
aad
mov
mov
cmp
inc
test
mov
cmp
cmc
cmc
rclw
push
xor
in
repnz
test
push
out
mov
insl
cmpb
stc
mov
push
fs
mov
gs
mov
shl
rcll
jnp
movsb
in
lea
jne
mov
jo
xchg
push
ljmp
lahf
or
mov
xchg
pop
dec
ss
stos
lcall
or
ret
cwtl
rorb
fwait
inc
fldln2
int
mov
insl
or
pop
subb
jns
cmp
arpl
mov
and
adc
cmp
aas
mov
imul
inc
inc
sahf
fcmovb
rolb
pop
lods
cli
mov
pop
into
sub
mov
vphaddbq
cmc
hlt
mov
lahf
mov
jl
clc
notl
mov
int3
mov
pop
imul
mov
lret
fwait
orb
lds
xchg
push
inc
cli
sub
in
inc
in
xchg
hlt
jns
out
shrl
cmpl
sbb
out
repnz
mov
or
mov
sub
nop
add
and
repnz
ret
cli
clc
and
adc
outsw
jl
jecxz
adc
xchg
jecxz
or
push
outsb
push
test
out
nop
mov
scas
call
insl
insl
ljmp
jns
lahf
or
fists
addr16
fwait
fwait
xor
push
cmpsl
lods
sbb
jl
adc
inc
mov
push
sub
dec
enter
pop
mov
or
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
jmp
lret
dec
add
je
jge
in
cmpb
jg
jle
notb
push
cmp
stos
out
addr16
insl
movsb
and
or
inc
cld
leave
rolb
pop
adc
jae
and
stc
fs
fwait
jge
pop
imul
popa
arpl
sti
adc
cmp
push
lcall
mov
cli
dec
xor
ret
and
push
test
adc
adc
idiv
imul
xchg
add
jecxz
in
or
ret
fisubs
mov
and
pop
push
lret
and
pop
add
push
das
pop
cli
xor
popf
cmp
movsl
gs
sub
xor
inc
lods
jne
xchg
jle
inc
fisttpl
pop
and
jmp
add
hlt
clc
ljmp
je
icebp
andl
aad
ja
cld
sub
scas
out
lds
mov
scas
mov
shr
adc
lea
out
mov
push
mov
and
shlb
adc
mov
inc
push
mov
jne
mov
jmp
sbb
fmull
mov
scas
pop
ds
or
movsl
and
sub
jmp
push
cmp
mov
jg
psllq
ds
pop
stc
fiadds
loope
lret
sub
and
pop
stos
loop
stos
sub
jbe
sbb
fistpl
cmpsl
add
movsl
mov
push
push
arpl
icebp
fsubrl
dec
mov
inc
les
jns
daa
lds
mov
xchg
pop
inc
insl
cli
ja
push
inc
in
stc
cld
and
fdivs
jno
dec
fstps
iret
add
and
adc
push
lods
cltd
mov
sbb
fsubrl
sub
dec
lcall
jmp
cmp
jne
xchg
mov
mov
jle
pop
jg
jle
mov
test
jns
xchg
pushf
xchg
xor
add
pop
clc
sub
push
int
mov
ret
ret
out
aaa
jnp
inc
jmp
fidivl
push
fnstenv
sahf
ret
adc
dec
mov
in
out
test
repnz
imul
inc
jno
mov
inc
pop
adc
cld
jmp
inc
scas
mov
adc
fmull
push
jne
fidivrs
insb
jle
lods
sbb
or
adc
into
daa
lret
iret
mov
adc
push
pop
and
push
ja
jg
cmp
das
scas
fwait
xorl
cli
das
sarb
mov
mov
fisubl
inc
cmpb
add
in
int3
out
sub
loop
test
jnp
push
mov
aam
lds
fisubrs
scas
jg
fsubp
lahf
stos
cmpsb
fisubl
pop
aas
inc
sub
pop
mov
lea
or
mov
jge
movsb
xchg
fildl
pop
mov
mov
mov
mov
loop
rol
loope
inc
ret
mov
cmp
aam
xlat
mov
dec
sub
test
push
repz
or
clc
mov
xor
icebp
pop
xor
int3
sbb
lds
testb
fisttpl
fldl
pop
pop
pop
xor
push
cmp
std
jecxz
mov
insl
aaa
jge
into
xlat
adc
push
push
sar
mov
int
rcrl
and
jl
mov
jle
in
outsl
jbe
std
or
test
fiaddl
lea
inc
movsb
jbe
and
gs
sbb
sbb
lds
insl
nop
fs
pop
aas
repnz
testb
daa
pop
pop
gs
sub
movsb
int3
aas
adc
xor
mov
inc
cld
mov
xor
add
cmp
jne
mov
xor
jmp
mov
jmp
xchg
aam
jne
xchg
in
sub
hlt
adc
jle
pop
jg
jle
ret
lret
add
jno
ret
cmp
adcb
mov
and
sbb
nop
jle
test
lcall
xchg
dec
and
dec
cmpsb
jns
ss
xchg
push
add
ja
mov
rolb
mov
mov
jb
cmpsb
push
movsb
rorl
gs
test
xchg
push
aaa
fwait
stos
or
push
scas
test
mov
xlat
hlt
mov
loope
bound
stc
daa
push
cmc
scas
test
sub
push
inc
test
push
mov
arpl
adc
sbb
stos
push
scas
mov
add
push
popf
cmp
aad
dec
test
push
jmp
or
or
dec
clc
cmp
push
lret
aaa
mov
sbb
pop
dec
inc
jno
dec
inc
or
cld
int
ljmp
ds
int3
inc
aas
jecxz
int
pusha
addr16
push
inc
stc
popa
dec
xchg
xor
in
mov
les
leave
cmp
lds
mov
lea
mov
imul
test
mov
or
jb
sub
lock
jnp
and
ror
or
stc
or
or
fwait
adc
hlt
int
add
in
in
mov
scas
sbb
popa
or
mov
pop
stc
iret
inc
mov
mov
push
pushf
stc
sub
pop
aad
push
outsl
mov
cld
loope
xchg
sbb
jecxz
lds
dec
les
data16
decb
mov
inc
mov
sbb
mov
dec
dec
in
pop
dec
push
add
adc
jb
xchg
lcall
hlt
xor
loopne
sub
cli
add
pop
notb
stc
test
push
push
insl
and
enter
into
movl
lock
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
jmp
inc
mov
pop
push
outsb
outsl
stos
ror
test
jle
jg
jle
push
fsubl
pop
and
cmpsl
clc
sbb
std
push
out
xor
call
test
leave
outsb
lret
fiadds
pop
adcl
xchg
faddl
xchg
xchg
inc
aaa
xchg
ret
inc
addr16
jmp
mov
movsl
jbe
and
cmp
jno
or
lret
push
ja
inc
sahf
aas
ret
mov
push
daa
jp
lods
lds
sub
dec
mov
shrb
mov
out
pop
mov
popa
js
leave
cmp
fdivp
outsl
xchg
jnp
push
test
push
lods
hlt
sbb
jb
push
stos
cmpsb
jbe
pop
leave
mov
int
sarb
xchg
jp
popf
jl
push
mov
std
mov
and
jge
clc
or
call
and
inc
daa
dec
xor
mov
enter
int3
cmp
or
std
mov
mov
and
iret
jne
cwtl
xor
push
push
testb
ljmp
insb
xlat
ret
or
jb
sbb
enter
ja
fldl
repz
insl
mov
fistps
fwait
fwait
mov
cmpb
out
addr16
nop
gs
aad
cs
test
mov
loop
sahf
cmp
ja
subl
adc
push
shll
cmp
cwtl
add
or
mov
out
in
mov
cmp
fisubl
cmp
xor
push
adc
fsubrl
cmp
pop
test
inc
jo
vmread
pusha
add
cmp
cs
ds
jne,pn
xchg
scas
pop
add
cmpsb
imul
ret
jl
push
inc
sahf
and
pushf
inc
pop
cmp
add
push
fimull
jge
enter
jo
test
pop
adc
shr
add
add
cmp
cltd
int
jno
ja
loope
cmp
add
inc
pop
jle
pop
jg
jle
jb
mov
rcl
out
xlat
lods
in
mov
push
or
daa
mov
sub
jecxz
loop
cmc
and
lods
enter
pop
outsl
sub
cmp
push
scas
das
insl
push
cmp
fsubrp
push
adc
pop
push
das
pop
lahf
pop
mov
or
push
ret
in
lds
adc
sub
addr16
and
cmpsb
cmp
sub
dec
cmc
add
insl
xchg
sbb
and
pop
notb
dec
outsl
sub
shlb
inc
out
icebp
mov
push
xor
jmp
sbbl
or
jge
or
lcall
movsl
mov
push
lods
sub
shll
loopne
mov
adc
cs
adc
sbbl
ja
sbb
fwait
loope
and
dec
in
clc
inc
rorl
pop
arpl
lahf
cmc
xor
mov
mov
lods
or
test
loopne
sub
mov
jo
aam
and
inc
jae
ret
addl
pop
inc
cltd
cs
jne
outsb
xor
xor
mov
cmp
mov
dec
leave
adc
mov
sarl
ret
dec
pop
aas
or
or
cmp
cltd
mov
movsl
jae
xchg
xor
or
mov
mov
fcmovnu
test
enter
sti
stos
sbb
or
or
imul
loopne
pop
or
mov
call
lcall
mov
dec
lahf
lret
imul
ja
call
add
mov
rclb
dec
xchg
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
jmp
ljmp
popa
cmc
xchg
fcomps
pop
jle
pop
jg
jle
xchg
in
js
pushf
loopne
xchg
cmp
stos
xchg
scas
xchg
push
mov
and
adc
pop
pop
rclb
adc
xchg
or
fldcw
adc
mov
in
pop
jno
sbb
pusha
push
stos
rcrb
mov
mov
data16
mov
cmc
jp
mov
outsb
jno
es
outsb
clc
jmp
xchg
addb
movb
sub
jns
jb
dec
dec
mov
xor
xchg
fdivs
mov
lcall
filds
out
jle
andb
inc
lcall
push
mov
insl
arpl
sub
cwtl
push
mov
aad
xor
sub
mov
das
jle
push
shrb
mov
lods
test
sbb
mov
xorl
fcom
cmc
and
mov
xchg
xchg
and
int3
sub
enter
pop
hlt
xchg
push
leave
lea
movb
test
dec
xor
jnp
rolb
insl
sahf
xor
lods
cmp
movsl
rorb
pushf
out
xor
cwtl
ffree
std
sub
fdiv
push
out
addb
pop
sub
cmp
and
jbe
int3
dec
cwtl
movsb
jae
cmp
push
daa
in
sub
test
cmp
xchg
les
jmp
lods
dec
jp
aad
adc
pushf
mov
cmp
inc
int
in
mov
dec
or
pop
add
cwtl
sub
shll
mov
sbb
adc
daa
sbb
pop
testb
into
push
movsl
fadds
or
outsl
dec
loop
in
xchg
sti
aam
fwait
sahf
imul
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
xor
add
inc
cmp
add
add
add
add
push
add
jl
add
xchg
add
xchg
cmp
add
add
mov
add
les
add
into
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
xor
add
cmp
add
dec
cmp
add
add
pop
cmp
add
add
add
test
add
mov
add
cwtl
cmp
add
cmp
add
add
enter
fdivrl
add
out
add
repnz
add
cmp
add
cmp
add
cmp
add
add
add
cmp
add
add
pop
cmp
add
add
je
add
nop
cmp
add
add
int3
cmp
add
cmp
add
cmp
add
cmp
add
add
sbb
add
cmp
add
cmp
add
add
pop
cmp
add
add
js
add
xchg
cmp
add
add
ret
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
sub
add
cmp
add
pop
cmp
add
cmpb
add
cmp
add
ljmp
add
add
sbb
add
sub
add
cmp
add
dec
add
pop
add
insb
add
jl
add
mov
add
cwtl
add
lods
add
mov
add
fidivrl
add
lock
add
push
aas
add
sbb
add
sub
add
cmp
add
dec
aas
add
bound
add
outsb
aas
add
js
add
xchg
add
xchg
aas
add
movsb
aas
add
mov
add
enter
fidivrl
add
in
aas
add
clc
aas
add
or
add
inc
add
xor
add
dec
inc
add
pop
inc
add
fs
add
je
add
addb
cwtl
inc
add
lods
inc
add
mov
inc
add
loopne
add
lock
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
push
inc
add
pusha
inc
add
jo
add
test
add
inc
add
scas
inc
add
mov
inc
add
call
inc
add
push
inc
add
sbb
add
inc
add
cmp
add
add
pusha
inc
add
add
add
addb
cwtl
inc
add
scas
inc
add
mov
inc
add
faddl
add
inc
add
clc
inc
add
push
inc
add
sbb
add
add
xor
add
add
push
inc
add
pop
inc
add
outsb
inc
add
test
add
add
mov
inc
add
fiaddl
add
inc
add
clc
inc
add
or
adc
add
and
xor
add
inc
inc
add
pop
inc
add
inc
add
jbe
add
mov
sahf
inc
add
scas
inc
add
movb
inc
add
in
inc
add
clc
inc
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
dec
inc
add
pop
inc
add
add
add
jbe
add
mov
add
inc
add
lret
add
inc
add
in
inc
add
add
add
inc
add
sub
add
inc
add
dec
inc
add
pusha
inc
add
insb
inc
add
addb
xchg
inc
add
mov
inc
add
ret
add
inc
add
call
inc
add
incb
add
inc
add
and
add
cmp
add
add
add
push
add
jle
add
xchg
inc
add
mov
inc
add
int3
inc
add
faddl
add
inc
add
push
dec
add
sbb
add
dec
add
cmp
add
add
push
dec
add
outsb
dec
add
mov
add
dec
add
mov
add
rorb
dec
add
add
add
lock
add
decb
add
dec
add
push
dec
add
cs
add
add
add
push
dec
add
stos
inc
push
dec
add
add
add
add
cmp
dec
add
ret
cmp
add
add
add
add
add
add
add
add
add
add
pop
xor
add
add
fs
add
sub
add
add
add
jb
insl
pop
dec
outsl
imul
ja
imul
fs
gs
outsl
popa
jb
dec
gs
inc
pop
inc
pop
inc
cmp
add
add
add
xor
add
add
add
and
add
add
add
aam
add
je
add
mov
add
nop
aaa
add
insb
inc
add
jo
add
dec
cmp
add
dec
add
sub
add
adc
add
inc
dec
add
hlt
xor
add
add
bound
add
add
xor
add
inc
cmp
add
add
add
add
push
add
jl
add
xchg
add
xchg
cmp
add
add
mov
add
les
add
into
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
xor
add
cmp
add
dec
cmp
add
add
pop
cmp
add
add
add
test
add
mov
add
cwtl
cmp
add
cmp
add
add
enter
fdivrl
add
out
add
repnz
add
cmp
add
cmp
add
cmp
add
add
add
cmp
add
add
pop
cmp
add
add
je
add
nop
cmp
add
add
int3
cmp
add
cmp
add
cmp
add
cmp
add
add
sbb
add
cmp
add
cmp
add
add
pop
cmp
add
add
js
add
xchg
cmp
add
add
ret
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
sub
add
cmp
add
pop
cmp
add
cmpb
add
cmp
add
ljmp
add
add
sbb
add
sub
add
cmp
add
dec
add
pop
add
insb
add
jl
add
mov
add
cwtl
add
lods
add
mov
add
fidivrl
add
lock
add
push
aas
add
sbb
add
sub
add
cmp
add
dec
aas
add
bound
add
outsb
aas
add
js
add
xchg
add
xchg
aas
add
movsb
aas
add
mov
add
enter
fidivrl
add
in
aas
add
clc
aas
add
or
add
inc
add
xor
add
dec
inc
add
pop
inc
add
fs
add
je
add
addb
cwtl
inc
add
lods
inc
add
mov
inc
add
loopne
add
lock
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
push
inc
add
pusha
inc
add
jo
add
test
add
inc
add
scas
inc
add
mov
inc
add
call
inc
add
push
inc
add
sbb
add
inc
add
cmp
add
add
pusha
inc
add
add
add
addb
cwtl
inc
add
scas
inc
add
mov
inc
add
faddl
add
inc
add
clc
inc
add
push
inc
add
sbb
add
add
xor
add
add
push
inc
add
pop
inc
add
outsb
inc
add
test
add
add
mov
inc
add
fiaddl
add
inc
add
clc
inc
add
or
adc
add
and
xor
add
inc
inc
add
pop
inc
add
inc
add
jbe
add
mov
sahf
inc
add
scas
inc
add
movb
inc
add
in
inc
add
clc
inc
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
dec
inc
add
pop
inc
add
add
add
jbe
add
mov
add
inc
add
lret
add
inc
add
in
inc
add
add
add
inc
add
sub
add
inc
add
dec
inc
add
pusha
inc
add
insb
inc
add
addb
xchg
inc
add
mov
inc
add
ret
add
inc
add
call
inc
add
incb
add
inc
add
and
add
cmp
add
add
add
push
add
jle
add
xchg
inc
add
mov
inc
add
int3
inc
add
faddl
add
inc
add
push
dec
add
sbb
add
dec
add
cmp
add
add
push
dec
add
outsb
dec
add
mov
add
dec
add
mov
add
rorb
dec
add
add
add
lock
add
decb
add
dec
add
push
dec
add
cs
add
add
add
push
dec
add
add
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
arpl
insb
outsl
arpl
add
data16
outsl
outsl
jb
push
add
arpl
push
add
outsl
ja
outsl
ja
jb
add
gs
popa
jo
pop
je
jo
add
in
jae
jb
push
add
jo
pop
insw
outsl
fs
int3
add
outsl
jb
add
js
imul
imul
popa
add
fwait
add
jo
pop
arpl
insl
outsl
fs
sub
arpl
arpl
add
data16
add
or
je
ja
jo
gs
add
data16
je
add
outsb
jbe
add
arpl
imul
add
jo
imul
add
je
push
add
je
add
mov
outsl
ja
add
test
jae
popa
arpl
add
add
outsl
insb
outsl
ja
jb
fildl
pop
popa
insl
jae
pop
gs
je
add
add
imul
add
outsb
imul
add
jae
bound
gs
add
push
add
arpl
inc
imul
jae
jb
arpl
add
add
insl
outsl
jbe
add
cld
add
jb
outsl
insb
add
and
insb
outsb
add
and
pop
gs
je
call
js
je
add
jo
arpl
call
arpl
add
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
repnz
jb
arpl
add
imul
add
ja
je
jo
add
mov
insl
popa
insb
insb
outsl
arpl
add
pop
pop
addr16
popa
imul
add
ja
arpl
data16
push
inc
push
push
cs
insb
add
xor
dec
outsb
jne
je
insl
dec
outsb
outsw
push
add
sub
inc
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
add
add
outsb
fs
imul
inc
add
dec
imul
add
inc
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
jne
insb
push
arpl
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
imul
ja
jb
insl
push
outsl
imul
push
imul
ja
add
fs
outsb
jne
add
add
popa
bound
arpl
insb
insb
inc
popa
jb
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
add
outsb
fs
imul
rolb
dec
gs
popa
addr16
outsl
js
js
add
outsb
fs
gs
popa
addr16
add
outsb
imul
push
outsl
imul
inc
gs
imul
add
outsl
ja
arpl
insb
insb
inc
popa
jb
mov
dec
outsl
popa
fs
insl
popa
addr16
add
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
add
jo
imul
gs
add
sbb
push
gs
outsl
jbe
push
jb
jo
add
gs
jo
popa
je
push
outsb
add
add
push
imul
popa
jae
inc
add
add
je
insb
addr16
je
insl
push
gs
inc
add
ja
outsb
jne
popa
jb
sub
inc
gs
outsb
jne
repnz
jae
dec
gs
popa
addr16
add
push
add
je
insb
addr16
je
insb
dec
inc
add
mov
push
imul
push
arpl
push
add
sbb
inc
gs
arpl
dec
outsb
outsw
add
add
jo
imul
imul
inc
push
js
push
add
add
outsb
fs
gs
popa
addr16
imul
add
add
popa
jb
outsl
ja
jb
jne
push
add
insl
add
je
imul
outsb
addr16
add
mov
push
popa
imul
jne
dec
fs
add
movl
imul
gs
js
add
cmp
arpl
popa
imul
outsb
add
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
into
add
jae
popa
addr16
outsl
js
add
add
je
gs
popa
addr16
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
aad
dec
gs
popa
addr16
outsl
js
add
add
je
outsb
jne
je
imul
add
fs
outsb
jne
add
gs
jns
je
insl
dec
gs
imul
push
outsb
fs
gs
popa
addr16
add
aaa
add
je
outsb
jne
je
je
add
mov
inc
jb
ja
arpl
add
xchg
add
je
outsl
jns
jne
jae
jb
add
inc
fs
jae
push
imul
arpl
pop
add
je
jns
inc
outsl
insb
outsl
jb
jle
dec
imul
jne
je
insl
add
or
inc
jo
outsb
fs
outsb
jne
add
inc
push
outsb
jne
popa
imul
add
push
je
imul
push
arpl
insb
insb
push
imul
xor
inc
push
gs
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
sgdtl
je
insb
addr16
je
insl
add
dec
add
je
outsb
jne
je
insl
inc
imul
or
inc
gs
gs
je
jo
imul
inc
add
je
popa
jb
outsb
je
movb
outsb
fs
popa
jae
add
inc
jb
popa
je
dec
outsb
jne
add
add
je
popa
jb
je
outsl
jae
sub
push
outsb
fs
gs
popa
addr16
add
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
inc
add
je
outsl
outsb
imul
push
add
add
jo
imul
gs
add
out
inc
jb
insl
gs
arpl
add
popa
bound
outsb
jne
je
insl
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
mov
outsl
ja
jb
insl
push
outsl
imul
jb
ja
outsb
imul
arpl
and
push
arpl
insb
insb
push
imul
add
pop
add
je
arpl
add
je
insb
addr16
je
insl
dec
outsb
je
or
imul
add
pop
add
gs
je
dec
arpl
dec
outsb
imul
dec
add
je
outsb
jne
je
insl
dec
outsb
outsw
push
add
pop
add
je
arpl
insb
insb
dec
outsb
outsw
add
add
popa
jb
outsl
dec
gs
inc
add
sub
fs
outsl
je
data16
gs
popa
addr16
add
sti
add
je
insb
popa
jae
dec
popa
insl
gs
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
push
jb
outsl
jb
add
push
gs
imul
js
inc
add
add
popa
jb
outsl
ja
jb
add
xchg
dec
outsb
jae
jb
dec
outsb
jne
add
add
jo
outsb
fs
outsb
jne
add
inc
gs
imul
add
push
gs
arpl
jo
jns
add
inc
gs
jns
inc
outsl
insb
outsl
jb
jb
jae
add
jg
push
push
outsb
outsl
ja
add
inc
push
dec
outsb
jne
add
add
insl
push
outsl
inc
push
add
push
jo
popa
push
add
xchg
push
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
imul
popa
jae
push
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
mov
jb
outsb
je
inc
add
push
gs
imul
outsb
addr16
add
test
push
ja
je
push
imul
ja
add
add
jo
imul
add
inc
imul
jae
popa
addr16
add
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
jne
inc
push
imul
add
inc
push
xor
cs
insb
add
lods
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
je
inc
jb
jae
dec
outsb
imul
add
push
imul
iret
add
insb
arpl
insb
gs
add
popa
je
inc
dec
inc
imul
add
jae
jp
push
popa
insb
gs
add
gs
outsl
inc
js
add
popa
je
inc
outsl
outsb
je
outsb
imul
mov
imul
inc
gs
gs
inc
inc
add
aad
inc
js
push
gs
dec
jne
push
add
popa
je
inc
imul
add
arpl
jae
bound
int
inc
jae
popa
jo
add
faddl
push
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
jae
je
imul
dec
jb
inc
js
and
inc
gs
imul
jae
mov
inc
gs
gs
dec
bound
arpl
mov
popa
je
dec
popa
je
push
push
inc
jb
popa
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
addl
imul
add
add
je
imul
jae
lods
add
insb
jns
gs
gs
add
add
je
bound
je
jb
arpl
add
jae
je
outsb
add
push
imul
add
popa
je
push
outsl
insb
imul
add
push
gs
dec
gs
imul
inc
gs
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
dec
inc
push
add
add
insb
arpl
imul
add
je
imul
outsb
jae
outsl
outsb
inc
js
add
add
je
jb
jae
dec
jb
inc
js
into
add
insb
arpl
push
arpl
addl
gs
gs
inc
js
outsb
je
outsl
imul
xlat
add
insb
insb
push
outsb
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
je
imul
add
je
je
arpl
bound
arpl
cmp
inc
gs
jne
jb
outsb
je
bound
arpl
jno
inc
gs
dec
push
xor
stos
add
gs
je
push
arpl
outsb
add
push
je
jb
inc
outsl
arpl
jbe
inc
imul
add
imul
mov
insb
imul
je
add
inc
inc
dec
xor
cs
insb
add
inc
imul
je
imul
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
add
inc
gs
gs
inc
imul
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
insb
dec
popa
insl
gs
imul
add
gs
jb
outsl
jb
outsl
fs
pop
add
je
gs
jo
imul
add
cmc
add
gs
je
push
popa
imul
insl
gs
add
pop
add
outsb
fs
imul
gs
add
test
dec
gs
jo
outsl
arpl
add
jbe
inc
imul
jns
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
adc
dec
outsl
arpl
push
imul
gs
push
popa
je
dec
popa
insl
gs
add
dec
outsl
fs
gs
popa
outsb
fs
gs
add
mov
je
inc
imul
outsl
bound
push
imul
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
push
add
jmp
inc
gs
imul
bound
gs
js
add
mov
gs
jbe
outsb
je
add
push
insb
gs
js
int3
add
jae
jb
jo
outsb
push
add
add
gs
je
inc
jbe
outsb
je
add
push
add
je
jns
je
insl
inc
imul
jns
add
push
gs
gs
outsl
outsb
imul
imul
add
fs
imul
js
add
pop
add
insb
jae
gs
popa
insb
jne
add
add
inc
popa
fs
gs
fs
je
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
gs
jae
jb
gs
jne
je
popa
outsb
addr16
inc
add
adc
dec
outsl
arpl
dec
outsl
arpl
mov
jbe
jb
inc
gs
jne
je
outsl
arpl
add
incb
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
loopne
inc
jb
popa
je
dec
jne
gs
add
adc
inc
imul
outsl
dec
inc
dec
add
xor
inc
jae
popa
jo
inc
outsl
insl
insl
inc
jne
arpl
outsb
add
ss
gs
push
inc
outsl
outsb
je
js
add
sub
dec
outsl
jbe
inc
imul
add
je
push
dec
outsl
arpl
add
push
outsb
insb
outsl
arpl
imul
fs
je
insl
push
add
push
add
je
jns
je
insl
push
imul
jae
insl
outsb
je
mov
popa
imul
je
jo
gs
bound
arpl
add
inc
gs
gs
jo
popa
je
inc
add
out
add
je
imul
movb
je
arpl
imul
outsl
bound
inc
jb
add
roll
inc
jb
popa
je
inc
imul
outsb
addr16
add
cmp
dec
jo
outsb
inc
imul
dec
inc
dec
xor
cs
insb
add
push
add
imul
js
add
add
addr16
gs
jo
insb
addr16
add
add
outsl
outsl
jae
inc
outsl
insb
outsl
jb
add
or
inc
gs
imul
push
add
add
je
popa
jbe
inc
imul
add
arpl
fs
xor
cs
insb
add
inc
add
je
inc
imul
jae
add
dec
push
inc
push
dec
cs
insb
add
push
dec
push
jne
mov
inc
add
dec
inc
add
or
dec
ja
cmp
dec
jb
xor
dec
ss
jnp
sub
dec
sub
push
pop
push
xor
dec
cmp
dec
cmp
dec
jb
xor
dec
ss
popa
dec
sub
dec
sub
bound
arpl
dec
jno
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
jb
jae
addl
jo
jno
aas
dec
jbe
cmp
dec
ds
dec
dec
xor
dec
xor
dec
push
sbbb
setae
nop
jo
jno
aas
dec
jbe
cmp
dec
ds
dec
dec
xor
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
mov
add
aas
dec
pusha
dec
cmp
dec
cmp
dec
pop
dec
xor
dec
xor
mov
ret
add
jo
jno
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
ret
psrlq
shlb
jno
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
cmp
dec
cmp
dec
cmp
dec
push
loop
jecxz
repz
jo
jno
jo
jno
ds
jg
cmp
dec
cmp
push
ds
dec
dec
xor
dec
xor
add
adc
adc
jno
aas
dec
add
xchg
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
mov
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
test
mov
add
or
inc
add
fstp
inc
inc
add
inc
inc
mov
jne
mov
incb
mov
dec
inc
add
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
ds
pushf
clc
and
pushf
clc
ljmp
add
imul
pushf
clc
popf
jmp
add
jbe
inc
add
adc
fcomps
inc
add
add
add
inc
add
add
dec
add
dec
add
add
add
add
inc
add
add
dec
add
inc
add
add
dec
add
add
jae
insb
popa
imul
dec
dec
inc
inc
insb
imul
imul
insb
jae
push
insb
imul
imul
imul
jae
imul
imul
dec
dec
inc
inc
push
outsl
imul
push
fs
imul
insb
imul
push
jne
jns
imul
jne
fs
push
data16
add
add
add
xor
inc
add
pop
dec
dec
dec
dec
dec
pop
dec
push
dec
or
dec
add
push
dec
pop
dec
push
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
push
dec
push
dec
inc
dec
pop
dec
dec
dec
push
dec
cmp
add
add
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jno
mov
outsb
jae
bound
add
mov
mov
inc
aaa
inc
jle
jno
mov
imul
inc
xlat
leave
xchg
inc
adc
jge
faddp
leave
xchg
fs
dec
leave
sbb
jno
rorb
add
shlb
xor
inc
push
outsl
push
push
inc
add
dec
inc
add
add
imul
pop
outsb
jbe
jns
push
imul
je
jp
arpl
push
imul
push
imul
push
jb
add
insb
pop
ja
je
bound
in
jnp
jnp
cmc
pushl
sar
fsts
in
add
add
add
int
push
pushl
fxch
xor
mov
jns
loopne
repz
lret
cmc
cmpsb
int3
jp
cltd
outsb
shll
pop
jnp
outsl
adc
dec
shl
push
fldcw
push
cmc
sub
popf
aas
fwait
leave
mov
sbb
test
decl
outsb
sbb
pop
push
dec
dec
mov
adc
faddl
inc
movhlps
pop
les
leave
adc
push
popf
dec
inc
inc
pop
lcall
ja
jp
enter
or
xchg
cmc
cmpsb
negb
shrb
mulb
std
sbb
daa
xor
push
pusha
xor
or
dec
movb
vmovq
or
sub
xor
ret
movsb
pop
and
xchg
into
hlt
lcall
arpl
leave
mov
aam
pop
dec
mov
imul
inc
in
lock
mov
lea
xor
xchg
mov
add
push
pusha
in
jle
cs
pop
ret
jl
and
add
add
add
int3
cmp
mov
add
outsl
dec
sub
push
negb
sub
lock
mov
pop
enter
aam
pop
sub
xchg
or
sub
xchg
int3
mov
and
pop
cli
xchg
pop
push
mov
jb
or
or
adc
in
test
icebp
repz
ret
sbb
sbb
fwait
test
out
mov
fisubrl
xchg
xor
aad
adc
add
jg
mov
and
xchg
and
das
push
and
jno
pop
daa
hlt
ret
sbb
sub
xor
xchg
cmp
mov
test
fistpl
andl
mov
add
jg
and
inc
mov
pop
xor
pop
pushf
adc
mov
out
aam
clc
lods
rcl
jmp
fiaddl
add
adc
mov
adc
rcl
js
add
testb
add
mov
jl
mov
les
sbb
jne
or
mov
subl
mov
mov
out
sub
jne
xor
dec
pop
mov
shlb
hlt
pop
sub
pop
sub
outsl
clc
jl
mov
mov
or
shl
push
lret
sub
pusha
push
or
aaa
mov
imul
jg
inc
popf
dec
ds
aam
jb
xchg
xor
mov
cmp
push
mov
arpl
xlat
sub
add
or
imul
cmc
mov
arpl
xor
clc
lods
add
xor
cltd
xchg
ret
inc
hlt
leave
mov
inc
ljmp
mov
in
mov
scas
call
inc
mov
pop
gs
push
push
inc
xchg
mov
xlat
negb
sbb
stc
sar
addr16
shll
add
add
subl
stos
dec
out
repnz
add
testb
add
stos
test
mov
fsubr
adc
sub
xor
mov
std
lea
add
fbstp
inc
add
fdivr
adc
mov
lods
outsb
rcr
clc
add
xor
mov
lock
and
adc
inc
fadds
push
divl
jle
sahf
xchg
cwtl
sub
test
hlt
mov
inc
lods
hlt
and
orl
out
test
pop
mov
mov
pop
sbb
sar
lcall
clc
add
xor
int3
shlb
in
cmp
cmp
jae
lods
sti
lods
js
adc
rorl
in
cmp
and
mov
aaa
sub
cld
sub
push
addl
pop
das
movsl
repz
fs
add
inc
or
leave
bnd
sub
jge
fs
add
ret
jns
leave
jae
in
dec
adc
cs
pop
add
jecxz
xchg
aas
mov
jnp
popa
push
sti
and
aas
pop
cmc
cmp
test
or
addr16
jne
mov
sub
shlb
or
mov
jmp
adc
sub
jecxz
mov
mov
aas
pushf
fdivp
fcom
mov
pop
sub
fmull
shrl
divb
hlt
cmp
nop
psubsw
jb
ds
imul
cmc
adc
or
and
pop
xlat
lods
imul
aam
mul
std
inc
sti
mov
lret
inc
out
push
sarl
outsl
pop
jp
mov
or
pop
lock
sbb
lret
out
pop
mov
add
int
lret
in
leave
ss
add
jg
cmc
insl
cmc
out
lcall
sub
or
add
pop
ljmp
pop
dec
xor
jecxz
or
mov
and
mov
aaa
mov
jns
out
mov
cmc
push
loope
je
scas
mov
testl
inc
fcoms
dec
mov
test
mull
repz
stos
insl
inc
add
add
mov
push
jl
test
mov
shll
bound
mov
fwait
loope
add
loopne
jmp
xor
rcr
lret
out
dec
out
lods
lds
arpl
mov
jno
and
xor
cli
cs
test
lahf
pushl
and
aad
into
inc
xor
data16
push
cli
outsb
cwtl
inc
jo
insl
lcall
push
sbb
sub
push
add
jmp
popf
push
fwait
mov
inc
push
jne
adc
stc
shrl
push
sbb
cmp
add
add
outsl
jle
dec
xchg
call
sub
add
testb
add
jo
jns
test
inc
repnz
dec
push
pop
sbb
sbb
lods
ret
mov
out
divl
ficoms
pop
pop
sub
push
adc
int3
push
mov
or
xchg
das
cmpsb
jmp
int3
adc
call
in
negl
jns
sbb
icebp
mov
mov
repz
or
push
xchg
sub
loopne
into
mov
pop
mov
imull
arpl
push
mov
repz
sar
seta
out
repz
leave
in
sti
cld
sub
insb
or
cmp
aam
jne
inc
sar
icebp
or
sub
push
adc
call
clc
cmpsb
sti
and
mov
cmp
pop
cltd
fs
dec
std
out
and
adc
xor
imul
test
jle
inc
call
and
outsl
sbb
add
jle
and
scas
sti
jle
inc
sbb
xor
add
testb
add
dec
mov
nop
loopne
data16
jmp
pop
fistpl
push
fisttps
mov
sbb
add
mov
mov
push
mov
popl
cmp
arpl
or
and
fs
loop
mov
or
sub
jae
mov
mov
roll
sbb
dec
mov
push
mov
sbbl
lds
cmc
arpl
add
sahf
mov
jge
mov
ss
out
test
pop
and
les
pop
fsubs
jbe
pop
lahf
cmp
jno
into
out
mov
in
jmp
inc
xchg
fsqrt
push
loop
cwtl
inc
jmp
cmp
xor
xor
inc
test
fisubrs
or
das
jbe
sti
xchg
int
add
clc
iret
rcl
mov
stc
push
lcall
lahf
fnstcw
ss
lahf
stc
inc
jb
lahf
aam
mov
add
add
add
icebp
fstpl
or
inc
enter
xchg
mov
sbb
jo
adc
decb
es
sub
jbe
call
cmp
sbb
roll
adc
adc
loope
cmp
adc
sub
lret
loope
mov
fsubrs
sbb
bound
out
mov
push
dec
rcrl
or
and
mov
in
cmp
pop
lret
inc
loopne
mov
aam
cmp
negb
mov
sub
xor
repz
and
sub
sbb
int
lahf
movsb
out
cmp
mov
mov
mov
fcoms
inc
fidivrl
xchg
jecxz
dec
imul
in
mov
cmp
jb
andb
adc
lods
fldenv
les
add
push
jl
jle
insb
pop
decl
xchg
rclb
daa
xor
add
testb
add
insl
movsb
pop
adc
mov
ss
sbb
mov
pop
mov
mov
cmp
iret
push
pop
or
xor
jne
xchg
test
filds
mov
or
pop
out
xchg
loop
push
je
adc
repz
pop
scas
es
rclb
lret
movsl
jge
sbb
sub
mov
dec
lock
scas
jmp
leave
add
jnp
das
sub
sub
rol
mov
inc
add
jmp
je
out
mov
jb
xchg
xchg
cmp
jo
sbbl
and
xor
jecxz
and
sbb
test
xor
pop
ljmp
jl
xor
or
and
push
adc
lcall
loope
jo
and
jl
mov
mov
adc
pop
ljmp
sub
add
testb
add
enter
push
add
fdivrl
js
dec
mov
mov
aaa
xchg
xchg
repz
hlt
pop
fst
js
nop
xchg
pop
fiaddl
addb
cld
ret
inc
popa
adc
and
cwtl
pop
cltd
push
or
mov
or
mov
inc
jnp
sti
inc
adc
js
decl
outsb
xchg
sub
xor
rclb
adc
push
addl
mov
stc
dec
sub
loope
cld
adcl
dec
xchg
enter
sbb
outsb
jbe
scas
int3
lea
movsl
jne
cld
or
mov
push
add
cltd
fildl
pop
or
mov
pushf
xor
ljmp
pop
daa
cs
inc
in
adc
call
adcl
ja
or
faddl
js
stos
cmp
call
shll
add
data16
jne
mov
arpl
add
testb
add
out
daa
push
test
rorb
mov
fnsave
mov
sub
cwtl
adc
sti
mov
cwtl
lret
jle
fmuls
iret
rolb
pop
insb
xor
sti
jg
jno
enter
xor
mov
ret
inc
std
jg
push
insl
rclb
mov
sub
mov
leave
aad
ljmp
push
lret
out
cmpsb
out
test
inc
cmp
mov
xlat
mov
sbb
ja
sbb
arpl
std
mov
xchg
adc
pop
inc
aam
fsts
mov
sbb
popa
push
es
inc
xor
cmp
out
shrb
mov
mov
cmp
inc
inc
cmpsb
rcrl
sbb
loop
dec
sub
pop
cmp
test
xor
mov
popa
scas
in
mov
jo
sub
xchg
and
xchg
pop
arpl
add
jnp
add
jnp
sti
xchg
rol
imul
add
testb
add
mov
inc
clc
dec
data16
ret
les
push
pushf
push
inc
sub
push
push
add
inc
inc
addb
xchg
lahf
mov
sbb
cmpsl
push
out
sub
pop
dec
jle
cmpsl
jbe
gs
outsl
push
xor
sbb
jge
andb
nop
dec
rolb
mov
dec
bound
pop
notl
lahf
inc
loop
jo
adcb
cmp
repz
jo
inc
sub
adc
lret
push
mov
jg
mov
xor
fisttpll
inc
lods
pop
clc
pop
dec
pop
fcomps
outsl
or
add
push
inc
vandnpd
jmp
cmp
cld
leave
mov
pop
fucom
mov
sti
enter
rorb
dec
addr16
dec
dec
cmp
xchg
and
sub
sub
aam
and
xchg
push
xor
add
pop
sarl
test
sub
sub
fisttpll
repnz
testb
add
mov
out
out
mov
pop
dec
rol
cmp
out
fildll
out
sbb
pop
mov
stc
mov
push
cs
lcall
movsl
pop
pop
aas
or
xchg
cltd
adc
pop
movsb
rclb
inc
add
sti
inc
pop
mov
adc
jg
loop
and
mull
out
add
clc
scas
ret
sti
movsb
mov
inc
cmp
dec
neg
and
loope
hlt
aam
clc
movsl
stos
es
fnstsw
aam
fnsave
ror
lods
xchg
sub
push
movsb
decb
in
movl
mov
mov
xlat
enter
fdivl
std
add
xchg
dec
dec
jmp
outsl
ret
out
hlt
loop
mov
aaa
fcoml
sub
rcll
fucomp
push
lahf
dec
xchg
xlat
add
insl
lock
std
repz
xchg
scas
movsl
dec
add
add
testb
add
movsb
sub
cmpl
dec
mov
aad
frstor
subl
pop
pop
out
or
aad
mov
mov
mov
mov
loopne
push
dec
xchg
movsl
scas
mov
jg
ret
mov
push
sar
cmp
fiaddl
and
add
mov
push
mov
cs
or
rcrb
inc
sbb
cltd
popa
idivl
push
dec
push
movsb
xchg
cld
xchg
xor
xchg
sbb
daa
mov
pop
lahf
add
push
mov
jge
pop
xor
ret
sbb
xor
adc
gs
jae
imul
in
outsb
mov
lcall
inc
test
test
and
mov
es
adc
mov
int
inc
xor
xchg
sub
aas
repz
sbb
and
ja
add
in
sub
cmp
or
sahf
andb
add
testb
add
mov
pop
pushf
inc
stc
in
pop
inc
imul
pop
and
inc
fwait
rcrl
or
push
mov
jnp
stos
in
jmp
sub
jmp
shl
shll
in
sub
test
sub
repz
xchg
mov
xchg
adc
inc
inc
dec
stc
add
enter
sbb
add
int3
and
aam
pushf
xlat
je
mov
insl
cmpsl
or
xor
inc
aaa
xlat
pop
in
pop
test
xchg
add
into
lret
das
lcall
jmp
jg
cmp
add
push
push
and
fnstenv
inc
je
sub
mov
ja
fildl
clc
jle
mov
mov
mov
dec
pop
stc
insb
mov
mov
cmp
mov
push
fiadds
add
insl
lcall
lret
sbb
aad
int3
repnz
in
hlt
add
testb
add
data16
mov
mov
inc
adc
imul
scas
iret
sub
push
mov
mov
jnp
xchg
lret
aam
and
test
pop
cmpsl
pop
shlb
cmp
loope
cmp
arpl
push
xor
add
fwait
loop
movsl
cli
out
add
push
popf
aad
add
push
int3
or
or
cld
test
xchg
sub
lds
pop
or
aam
push
pop
mov
test
jl
test
or
add
out
shlb
rcrl
mov
inc
sub
out
mov
roll
push
adc
xor
adc
mov
bound
adc
mov
xchg
adc
lea
sahf
xchg
mov
cli
lock
bound
mov
adc
mov
push
cmp
xor
add
lret
xchg
in
mov
pushl
comiss
xrelease
cmc
add
testb
add
pushl
popw
sbb
stos
stos
or
ds
js
das
std
das
int
aaa
shl
addr16
fstpt
mov
xchg
test
xchg
and
sbb
xchg
jmp
mov
in
push
xchg
cld
and
sti
xlat
bound
out
scas
mov
data16
call
add
stc
push
add
xchg
cmp
stos
adc
or
leave
and
mov
call
lahf
add
push
out
push
into
jp
push
movsl
mov
mov
sbb
fcompl
adc
jmp
stos
dec
mov
es
or
dec
mov
push
pop
addl
loope
movsl
je
dec
jle
dec
pop
mov
lret
cmc
ljmp
cmpl
lahf
sbb
pop
enter
addr16
pop
fwait
into
popf
xchg
dec
fadds
add
sub
in
negl
push
inc
push
xor
add
testb
add
cmc
out
sub
dec
xor
lods
mov
fistps
push
push
and
xchg
pop
mov
out
sti
push
stc
pop
dec
insb
sbb
dec
and
cld
stos
cld
imul
insb
dec
lods
das
push
pop
test
mov
insl
cmp
fdivl
loopne
cmc
in
fchs
es
mov
mov
test
fmull
inc
arpl
cmp
inc
int
sub
lods
nop
js
imul
scas
push
daa
shlb
ficoms
mov
inc
dec
iret
or
movsb
jle
add
jecxz
mov
xlat
add
dec
popf
sar
pop
leave
in
stc
push
mov
sub
test
inc
enter
addr16
or
xchg
mov
mov
add
jo
mov
inc
lock
loope
rcl
push
push
xchg
and
dec
pop
pop
rolb
push
test
lahf
testl
add
add
mov
nop
fmull
pop
into
testl
add
cs
jo
dec
mov
out
push
push
adc
fbstp
mov
lock
add
stc
jmp
inc
int3
lods
add
in
mov
jl
and
xchg
sub
inc
or
int
lock
xchg
pop
inc
dec
jno
fstps
mov
fsubp
loop
popa
adc
mov
js
sub
js
ficomps
push
xor
or
jmp
xchg
sbb
jmp
push
inc
dec
cmpsb
out
jno
loope
adc
data16
push
cmc
addr16
cld
xchg
std
mov
hlt
push
push
hlt
pop
jno
aam
adc
in
fldl
aam
imul
inc
stos
jo
or
and
mov
fstp
inc
ret
pop
xchg
cmc
outsb
jno
test
add
stos
sarb
clc
dec
stc
sbb
test
push
add
or
xchg
add
cmp
mov
push
add
adc
subb
testb
add
mov
cmp
ja
jl
sbbb
bnd
lahf
pop
sub
sarb
pusha
fnstsw
push
xor
clc
mov
call
fwait
ret
ds
out
and
or
jae
dec
xchg
push
bound
incb
and
cmp
sub
mov
int
jno
pop
inc
jbe
push
popf
movsl
inc
out
pop
out
mov
mov
sub
mov
and
flds
outsb
sbb
aam
inc
xlat
hlt
dec
movsb
push
ljmp
cli
bound
lods
inc
push
pop
cmp
int3
xchg
sbb
leave
mov
or
push
adc
xor
mov
adc
dec
in
in
and
lea
adc
subl
mov
jecxz
mov
xor
leave
repnz
outsl
jae
arpl
outsb
aam
dec
testl
push
pop
mov
add
add
repnz
add
pop
inc
xchg
pusha
push
mov
add
add
dec
sbb
and
xchg
adc
jmp
popf
jno
sub
movswl
test
xor
jg
leave
imul
jnp
or
cmp
clc
push
fwait
xor
bound
inc
fdivl
mov
ret
push
dec
fucomip
mov
mov
or
xlat
leave
addr16
jp
and
fwait
jg
pop
and
mov
lea
insl
mov
cltd
stc
pop
stos
mov
sub
in
add
je
mov
jle
or
inc
jmp
jle
mov
nop
rdmsr
push
scas
cltd
mov
mov
shrb
mov
push
addr16
push
out
orb
jl
mov
xor
subb
in
enter
xor
fwait
inc
lcall
add
pop
mov
push
decl
pop
imul
mov
add
testb
add
mov
sbb
insb
mov
mov
data16
xchg
shlb
xchg
imul
cmp
mov
insb
shl
mov
jb
fs
lods
js
pop
mov
pushf
inc
std
sbb
push
push
push
lahf
ja
dec
js
cwtl
into
mov
imul
dec
lret
jecxz
xor
stc
sarb
ret
negl
mov
repnz
mov
inc
sbb
sbb
fldt
aaa
mov
loopne
and
fiadds
pusha
inc
push
rcr
out
xchg
pusha
out
and
jb
insb
loop
adc
sbb
dec
loop
aad
incb
or
leave
pushf
sub
sub
out
adc
xor
clc
xchg
dec
sub
loopne
pushf
xor
push
add
mov
std
mov
pusha
loop
outsl
dec
pop
daa
ffree
mov
inc
es
frstor
add
and
cmp
sti
fsubp
decl
ret
sub
ficomps
testb
add
call
pop
push
sub
sub
lahf
lds
mov
inc
xchg
xor
xlat
rorl
xchg
dec
push
push
in
js
mov
xlat
jge
cmp
jbe
mov
mov
cmp
ss
mov
mov
lds
leave
jnp
test
mov
cmp
jle
mov
mov
fucom
nop
jmp
shr
fnstcw
push
call
xchg
sub
push
add
mov
sub
push
ficoml
insb
jg
ja
dec
loopne
pop
testb
pop
aas
jmp
les
xor
mov
leave
mov
and
xor
mov
insl
in
ret
mov
fmulp
pop
sbb
jg
inc
sbb
push
and
lock
inc
dec
movsl
mov
and
inc
lahf
push
cmp
xchg
add
and
and
or
pop
or
pushf
cld
add
testb
add
icebp
pop
fldlg2
std
mov
push
and
xchg
mov
arpl
jno
or
mov
pop
sbb
dec
mov
fbld
cmpsb
js
mov
jp
cs
xchg
into
pop
adc
push
jle
xchg
scas
das
call
in
cmp
leave
adc
xor
cmc
ja
pop
popf
aad
fs
popf
mov
xchg
insl
fsubl
rclb
lret
pushf
and
cmc
dec
jecxz
ja
daa
fs
imul
cld
fs
cmp
mov
adc
test
cmp
xlat
jle
mov
cmpsl
cmp
sub
xor
lret
movsl
std
inc
fbld
cmc
xor
mov
outsl
insl
in
jnp
aad
insb
or
sbb
cmc
rcr
incb
shrl
inc
cmp
push
push
rcrl
std
es
sbb
mov
add
repz
ror
lock
jnp
jmp
sbb
dec
xor
add
add
dec
out
mov
nop
repz
xor
and
inc
pop
outsb
jae
mov
mov
dec
enter
cli
push
xchg
add
out
pop
mov
sbb
push
pop
call
hlt
repnz
mov
jne
dec
xchg
ss
xchg
mov
cmpl
xorb
push
cmpb
leave
cmp
and
lods
mov
pop
inc
jp
das
ss
mov
or
pop
push
mov
mov
and
es
xchg
and
cmp
cmp
test
testb
int3
stc
mov
lods
in
les
inc
xchg
cli
mov
test
ret
notb
out
mov
or
mov
push
add
ljmp
ficoms
scas
movl
lret
fistpl
fildl
or
and
repz
fimuls
mov
mov
add
add
add
or
cs
push
jge
sbb
movsl
xor
in
movsb
jb
mov
add
jmp
or
sahf
inc
enterw
xor
dec
imul
pop
fcompl
or
jns
ss
test
sub
hlt
pop
push
sahf
mov
subb
and
and
out
or
dec
ja
inc
sbb
mov
inc
js
lods
xchg
ja
inc
mov
ja
enter
lahf
lahf
mov
clc
mov
out
xchg
push
hlt
or
in
xchg
addl
mov
push
popa
jg
mov
mov
jno
dec
cmp
cmp
sbbl
inc
jno
adc
out
push
lods
jg
mov
les
push
push
daa
sahf
and
fstpl
cvtpi2ps
sub
and
fwait
add
mov
add
lret
mov
add
out
xchg
jns
mov
mov
testb
add
xchg
fidivrl
lret
jge
cmc
cmp
mov
imul
js
aaa
and
sarb
jmp
fdiv
adc
dec
pop
lret
push
pop
stos
adc
mov
arpl
or
inc
imul
xor
jp
leave
insl
dec
xchg
shll
test
mov
jnp
push
in
rol
jo
pushf
sahf
pop
and
cmc
jno
outsb
pop
pop
xchg
lret
or
std
jne
ja
add
clc
lcall
in
xor
imul
scas
nop
pop
cmp
cmp
xor
mov
push
popf
imul
cmpsl
leave
fsub
and
cmovnp
lahf
jno
outsl
and
mov
shrl
jbe
cwtl
loope
or
mov
js
cmpsb
jne
lret
aam
jecxz
inc
test
push
dec
sarb
pop
mov
add
shrl
cmc
scas
mov
xor
add
testb
add
outsl
push
pushf
or
rol
jmp
add
fwait
mov
outsl
cmp
push
arpl
imulb
bound
fdivrl
jge
xor
add
cmp
orl
or
pop
and
mov
call
jbe
adc
movsb
sub
and
mov
and
or
mov
in
in
outsl
dec
lds
mov
xor
outsb
sahf
fs
cwtl
jo,pt
sbb
inc
sub
adc
dec
xor
sbb
rorl
fnstsw
mov
lret
jno
mov
leave
add
or
inc
add
push
adc
jae
dec
mov
adc
sub
out
in
roll
xchg
ds
add
pusha
sbb
je
icebp
das
movsl
xor
mov
popa
dec
icebp
iret
mov
adc
pop
pop
pusha
insl
test
push
push
repz
lret
pusha
rorb
lea
jo
push
add
testb
add
scas
cmp
mov
dec
mov
repz
pop
or
out
add
shl
xor
mov
cs
fidivrl
lret
ljmp
scas
fucom
jecxz
sbb
int3
xchg
aad
sub
sbb
notb
xor
dec
out
das
xor
int
inc
js
or
fwait
mov
xchg
cltd
ljmp
cmp
sbb
mov
sub
adc
ret
popa
mov
xchg
push
dec
stos
rorb
test
jno
pop
sbb
cltd
aam
std
fnsave
mov
mov
xchg
insl
mov
into
popl
or
sub
mov
inc
jl
jg
das
scas
popf
stos
and
xlat
cmp
outsb
mov
in
dec
xchg
inc
test
pop
push
sbb
lahf
dec
daa
stc
andl
add
jecxz
push
testl
dec
movsl
inc
pusha
add
add
add
add
lahf
in
bound
jg
mov
int3
out
inc
ret
mov
popa
aam
mov
in
cmp
mov
mov
outsl
jne
movsl
xchg
clc
call
into
fstp
or
mov
cmp
xor
pop
stos
sub
xchg
sub
repz
dec
lret
pop
aad
clc
sets
jle
rolb
push
outsb
arpl
cli
or
pop
fwait
into
daa
or
cmp
mov
or
mov
mov
mov
sub
push
xchg
not
dec
push
cmp
ja
pop
push
leave
and
add
repz
test
call
scas
push
push
mov
pop
pushf
loopne
sarl
push
push
movsb
mov
ljmp
fisttps
orb
repnz
and
xor
xchg
hlt
add
and
daa
lahf
jle
sbb
add
mov
add
testb
add
les
fsubr
cltd
fiadds
mov
mov
xchg
sub
sbb
jge
into
out
mull
mov
fwait
xor
xorb
movsb
xor
insl
xchg
call
xchg
stc
mov
test
out
dec
pop
int
mov
in
clc
jle
pop
imul
into
pop
xchg
lods
mov
not
sub
jns
cmp
pop
jne
mov
insl
or
jnp
stc
clc
roll
cmpsb
adc
dec
push
xchg
cmc
out
bound
mov
push
sbb
pop
adc
aam
cli
sub
mov
or
add
xor
lret
mov
adc
pop
mov
xor
rolb
cltd
fisubrs
xchg
add
mov
xlat
aam
add
xchg
out
add
add
add
add
xor
or
rcll
test
inc
shrb
pop
sub
outsb
xchg
andl
mov
mov
std
mov
xchg
fnsave
xor
aam
fdivrs
inc
ja
imul
bound
xchg
jb
popf
or
loope
inc
sbbb
ret
mov
test
daa
jb
lahf
mov
mov
dec
je
rcll
xor
xchg
movsb
xlat
jmp
dec
pop
lds
mov
pusha
sti
sbb
out
xchg
xor
pushl
push
mov
packuswb
pusha
in
cmp
call
mov
sbb
xchg
jmp
and
mov
push
add
imul
jo
dec
cmpsb
xchg
sbb
ss
mov
push
loopne
mov
int
mov
adc
mov
scas
mov
add
add
push
inc
pop
jns
aas
fisttpl
inc
xor
add
testb
add
lea
cmp
lods
xchg
adcl
lea
imul
push
mov
dec
test
nop
rol
fsubrs
shlb
jp
fbstp
jmp
mov
mov
faddl
in
xchg
push
adc
pop
mov
sbb
test
bound
dec
or
outsl
push
testl
loop
cs
call
sub
xchg
test
ljmp
xor
push
lock
addr16
cs
mov
out
and
mov
push
mov
outsl
jbe
imul
bound
cmc
push
add
inc
pop
test
fcmovb
lea
lcall
into
xchg
enter
mov
cmp
fstps
aas
pop
push
bound
mov
lea
add
jnp
mov
push
mov
add
add
add
insb
rcrb
pop
xchg
mov
sahf
mov
call
cs
mov
or
bound
daa
std
nop
int
inc
repnz
jmp
pop
loopne
adc
adc
sbb
shl
adc
jp
lret
dec
inc
pop
int
or
hlt
push
js
psrlq
aas
lret
mov
inc
cs
dec
das
push
int
xor
call
pop
je
or
jge
pop
lcall
xchg
jl
movl
popf
dec
movsb
inc
and
jbe
jno
jp
dec
daa
outsb
mov
pop
stos
test
pop
push
xchg
pushf
scas
hlt
jg
nop
iret
mov
rol
test
inc
das
bound
repz
je
pop
sbbl
dec
or
cmp
loop
xor
sbb
xchg
mov
adc
adc
jle
arpl
fcomip
mov
add
xlat
pop
xlat
jg
mov
les
pop
cs
add
testb
add
jns
add
mov
clc
and
mov
lahf
sub
adc
js
mov
jo
and
pop
enter
mov
jae
inc
jae
cmp
jne
or
sbb
or
xchg
jns
pusha
add
bound
mov
imul
in
aaa
xlat
movsb
cmp
or
pop
mov
inc
test
cmp
mov
imul
movb
xchg
imul
sarb
rorb
int3
fstpl
xchg
imul
clc
fbstp
loope
and
or
add
sub
xchg
fs
ret
bound
out
movsl
jne
je
jbe
add
jae
ret
in
bound
push
mov
data16
test
mov
xchg
pop
push
dec
arpl
sbb
pop
es
cmp
mov
sub
shrl
fldl
jo
outsl
mov
sti
jge
add
fdiv
mov
pop
sti
fbld
add
testb
add
inc
sarb
pextrw
sbb
inc
lods
iret
sbb
pop
in
push
mov
push
dec
out
mov
mov
pop
fcmovbe
jnp
call
insb
xor
mov
je
sbb
pop
add
jb
dec
jmp
xor
xor
jb
mov
sbb
add
xchg
push
cmp
stos
ret
mov
testb
pop
test
out
lea
ja
dec
mov
adc
ja
inc
mov
sahf
ja
sub
out
add
jae
mov
lea
sbb
mov
sub
sahf
mov
push
jge
in
cwtl
cmp
mov
inc
xchg
push
stos
lea
push
inc
cmp
pop
jne
ljmp
clc
inc
std
push
loope
ss
mov
dec
daa
sbb
in
jbe
cmp
pop
les
xchg
inc
xor
jecxz
aad
add
mov
stc
dec
push
aaa
mov
testb
add
pop
ficomps
dec
pop
cmp
mov
jno
loopne
arpl
push
pop
xlat
xor
hlt
aad
dec
in
jns
repz
push
in
inc
fsubrl
and
outsl
subl
xchg
or
scas
scas
mov
jo
inc
fs
jle
aad
icebp
jge
sbb
loop
int3
push
adc
aad
out
loop
jno
aad
scas
repnz
int
jbe
test
xchg
cmpsb
bound
roll
cmp
les
inc
pop
and
out
xor
xor
rorl
and
mov
inc
jae
loopne
dec
add
aas
sbb
sub
mov
shll
xchg
pop
mov
mov
movsl
xchg
clc
pop
ss
stc
and
into
lods
sub
cwtl
sarb
jge
insl
inc
jle
cmpl
cmc
pop
inc
ljmp
add
jmp
imul
pop
sub
fcoml
pop
jg
or
add
add
add
adc
outsb
inc
mov
sbb
mov
test
pop
gs
data16
scas
jmp
arpl
inc
jg
in
add
pop
sub
inc
loop
sahf
inc
sar
cmp
pop
test
fsubrp
jns
xor
mov
insb
fists
fildll
push
xchg
push
cmc
nop
jl
data16
in
lock
jbe
mov
fld
or
xchg
pop
jle
repz
sbb
mov
out
fs
sub
cmc
xor
sub
in
les
mov
lods
aas
lea
clc
mov
pop
add
sbb
xor
scas
cld
inc
adc
push
in
lods
jle
int
and
mov
pop
out
imul
cmp
in
mov
sbb
cltd
test
ret
and
and
jae
jle
cmp
ljmp
mov
fwait
mov
into
addr16
jecxz
fdecstp
add
add
pop
inc
pop
lods
pop
cli
cmc
inc
mov
sbb
or
add
add
add
dec
mov
and
out
jbe
scas
adc
adc
cmc
xchg
mov
fstpl
lcall
sub
push
push
scas
and
lahf
sub
mov
in
cmp
arpl
inc
scas
cmc
inc
sarb
aam
xchg
out
test
ja
sub
addr16
adc
nop
rorb
sub
cmp
mov
sbb
or
lds
jmp
mov
jns
xor
andb
mov
stc
jbe
sbbl
lea
sbb
icebp
mov
outsb
mov
pop
ljmp
fisubrs
jp
iret
arpl
cmp
ret
into
push
lret
push
push
jmp
mov
mov
jbe
cmp
dec
fadd
jge
gs
jo
testb
lret
ss
and
and
rorb
sbb
jge
xor
in
jmp
aad
sbb
ja
pop
mov
add
add
stos
cltd
inc
popf
jae
out
inc
dec
clc
jbe
sbb
testb
add
xor
sub
imul
shrl
cmpsl
scas
ret
jbe
mov
or
mov
out
pop
rclb
ljmp
adc
lods
aaa
jecxz
scas
test
push
mov
ret
mov
mov
mov
push
xor
imul
test
add
sbb
rclb
shrl
inc
sarl
inc
lret
out
push
addr16
pop
cs
rclb
aad
mov
fidivs
arpl
enter
mov
daa
lret
dec
leave
dec
jnp
add
mov
pop
mov
into
mov
js
cmpb
mov
out
cmpsl
int3
inc
fs
add
mov
adc
outsl
jo
mov
pop
mov
pop
xor
xchg
mov
cmp
xchg
nop
lcall
mov
sub
int3
add
jecxz
add
mov
nop
test
aam
int
xchg
clc
je
xchg
sub
testb
add
xchg
sti
inc
outsl
dec
bsf
push
orb
popf
movsl
ljmp
ret
sub
idiv
mov
or
bound
xchg
test
push
xchg
aaa
aaa
xlat
sti
iret
outsl
out
pop
adc
add
jmp
imul
or
rorb
out
das
push
pop
mov
cli
lds
mov
hlt
jns
inc
xchg
aaa
add
jmp
dec
shlb
lock
cmpsl
outsb
mov
push
fldl
insb
adc
add
mov
jge
scas
aas
mov
cmp
adc
xchg
jae
jge
pop
add
mov
nop
movb
push
daa
inc
js
into
inc
iret
pop
mov
shrl
inc
cmp
inc
dec
lock
cmpsb
fidivrl
inc
pop
ds
adc
inc
aaa
push
xchg
or
daa
xchg
jmp
lods
push
jmp
add
arpl
addr16
inc
jmp
mov
testb
add
push
mov
cmovl
cmp
aas
adc
out
lods
jae
cld
pushf
mov
and
push
ficomps
cwtl
and
gs
mov
inc
push
mov
enter
filds
cli
cwtl
sbb
call
sub
pushf
and
ljmp
movsb
pop
fsubrp
mov
and
cmp
cmp
loopne
nop
cmp
mov
push
in
adc
les
sbb
inc
orl
xchg
insl
shlb
jg
popf
xchg
jno
fisttpl
dec
adc
stc
scas
test
sahf
jp
dec
mov
movsb
pusha
or
mov
arpl
shll
pusha
pop
outsl
cmp
loope
aad
xor
pop
mov
aas
in
mov
pusha
insl
into
add
jo
outsb
fistpl
fdivrl
sbb
das
out
sub
jns
add
out
out
pushl
jecxz
add
xchg
adc
push
add
testb
add
mov
aas
pop
or
test
in
fnsave
cmp
lock
or
lods
add
ds
nop
fs
xchg
or
mov
add
jnp
sbb
sti
add
lahf
inc
fistpl
inc
jecxz
jns
ficomps
loop
repz
into
in
add
adcb
popa
pop
pop
mov
mov
and
leave
aaa
lea
xor
rcr
pop
clc
mov
jmp
aaa
into
jecxz
pop
or
mov
imul
pop
faddp
sub
jp
mov
aas
push
mov
ljmp
aas
pop
cmpsb
arpl
inc
push
xor
repz
sahf
dec
dec
mov
xlat
repz
in
push
push
jge
sbb
cltd
sub
push
dec
in
xchg
add
push
scas
out
mov
sar
lahf
mov
aam
add
testb
add
sbb
leave
cli
pushf
leave
stc
out
jp
out
mov
inc
add
lock
push
rclb
sub
lea
stos
xchg
xchg
push
and
ret
dec
push
add
xor
lcall
mov
hlt
in
enter
pushf
mov
mov
out
mov
sbb
or
dec
shl
mov
ret
push
ficoml
sbb
imul
lret
je
adc
mov
ror
pop
inc
pop
iret
shl
cmc
daa
jmp
sti
in
sti
sar
cli
and
fwait
sbb
repz
or
aad
push
pushf
adc
movsl
add
enter
mov
adc
or
inc
fsubrl
lock
repnz
adc
mov
pop
cmp
mov
and
aaa
xchg
and
movsl
mov
mov
cmp
scas
sbb
xor
lret
add
add
add
mov
int
sbb
pop
into
mov
pusha
or
pop
addr16
aaa
ror
rolb
push
fldcw
in
pop
lea
cmc
pushf
xchg
ret
fdivrl
jo
pop
mov
outsl
adc
mov
push
cs
mov
cld
adc
mov
leave
pop
push
mov
jns
roll
lea
loope
sub
jno
mov
and
or
ss
jnp
into
cltd
out
jl
shlb
dec
fcompl
add
pop
lahf
andb
and
xchg
mov
mov
aad
repz
les
xchg
fadd
fstps
aad
cmp
pop
dec
int
int3
sbb
scas
mov
outsb
mov
sar
or
push
mov
and
clc
jmp
adc
hlt
mov
xor
imul
fdivl
mov
dec
and
xor
adc
add
add
add
lods
lret
mov
fnstsw
add
cmp
aad
ret
in
rdtsc
repnz
inc
pop
add
add
in
scas
mov
lret
mov
ret
xchg
mov
cmp
dec
in
sbb
imul
mov
daa
sar
into
and
out
loopne
xor
stc
mov
jp
hlt
out
pop
fs
push
call
xchg
adc
pop
pop
popf
addr16
lock
lea
mov
mov
mov
xor
mov
fnstsw
pop
xor
add
shrl
fdivs
jl
das
adc
fstps
ficoms
cmp
add
into
sbb
hlt
mov
out
scas
cmp
xor
setno
jbe
or
dec
xlat
or
icebp
xor
push
es
or
pop
hlt
cmp
shrl
xor
add
inc
stc
mov
mov
fidivrs
rdtsc
repnz
add
add
cmp
mov
sarl
mov
enter
inc
hlt
int3
push
dec
movsb
lret
mov
xor
xchg
in
sub
int
jnp
outsl
inc
push
cwtl
hlt
mov
stc
adc
jnp
pop
imul
cmpsb
xchg
mov
insl
mov
push
in
jge
repz
addr16
mov
fisubrs
jmp
daa
mov
cld
mov
mov
ret
mov
add
nop
fsts
dec
imul
int3
cltd
popa
cmp
data16
push
call
js
push
jo
dec
sahf
and
imul
arpl
outsl
and
xor
cmp
inc
les
jl
adc
out
push
inc
cs
dec
loope
jg
xchg
cmpsl
dec
mov
push
out
pop
loopne
jo
test
or
and
xchg
sub
scas
jbe
or
lods
adc
add
add
add
inc
lahf
push
cmpsl
fsubr
roll
sub
mov
pop
or
xchg
imul
dec
cltd
pop
inc
or
jmp
stos
cmpsb
dec
frstor
lret
fdivr
pop
aas
xlat
and
push
notl
mov
test
out
shrl
dec
and
or
lret
mov
jae
mov
inc
mov
clc
add
jnp
adc
and
adc
mov
add
int
inc
mov
out
add
pop
gs
and
loopne
mov
gs
or
int
int
iret
xchg
or
mov
scas
pop
push
sahf
pop
cmp
cmp
inc
cmc
int
aaa
popf
stos
ja
push
in
aam
dec
and
cmp
mov
sbb
test
push
push
stos
arpl
mov
in
loope
lcall
out
arpl
out
add
hlt
fists
mov
add
testb
add
testl
lea
xchg
sbb
fidivl
pop
pop
fcmove
jle
ficompl
aad
lds
movsl
lock
jle
repz
push
sub
or
sub
repz
sbb
cmp
incl
gs
jno
jns
jl
fldenv
pop
scas
sbbl
pop
movsb
sub
xchg
mov
lods
stos
fildl
lea
fneni(8087
ret
inc
push
jbe
insb
xor
mov
test
dec
cwtl
cmp
dec
push
lret
or
repz
sbb
hlt
cwtl
hlt
mov
lods
mov
fucomi
js
cmpsb
jecxz
dec
popf
adc
mov
sarl
es
lahf
and
iret
pop
lret
imull
mov
xlat
sub
pop
enter
add
add
into
fwait
testb
mov
cmp
adc
add
and
jbe
xorl
xor
adc
lret
jb
mov
mov
out
sub
int3
jecxz
push
pop
and
push
xor
iret
std
mov
jmp
sbb
es
out
ret
mov
dec
dec
dec
jmp
fsub
inc
gs
mov
and
repnz
fdivl
imul
aad
pop
dec
xor
test
and
and
inc
movsb
pop
push
out
incl
adc
fcomip
decb
add
mov
mov
bound
cmp
push
adc
add
divb
movsl
fwait
jmp
push
fcoms
or
add
stc
pop
adc
test
inc
add
in
jns
mov
pop
sub
int
lea
xor
jl
test
out
mov
pop
mov
aas
xchg
push
add
testb
add
inc
dec
mov
cld
in
xor
aaa
out
nop
iret
xor
xchg
mov
stos
wbinvd
jp
or
testl
ja
test
sub
sbb
push
out
sub
mov
aam
pop
pusha
dec
xor
int3
pop
mov
adc
andl
dec
hlt
pop
sbb
arpl
and
xor
jp
cmp
sub
xor
lods
cld
xchg
loopne
push
ret
jae
xor
jle
cmp
xchg
cmp
pop
adc
pop
inc
ljmp
cmp
cli
and
js
outsl
or
addb
loope
stos
cmc
push
xor
dec
cmp
pop
cmpsl
xor
push
inc
jge
xor
inc
jl
mov
jnp
stos
daa
lods
loop
pmaddwd
mov
mov
jnp
das
lock
jns
add
sti
inc
out
aas
mov
sub
lods
xchg
test
add
testb
add
or
push
mov
sbb
mov
jno
scas
adc
xchg
pop
and
int3
cmp
std
in
adc
sti
sub
jns
imul
dec
stos
mov
sbb
cwtl
pop
add
mov
sahf
xchg
inc
xor
xchg
push
outsl
jge
dec
mov
dec
ficomps
push
cli
pop
rcl
push
dec
ret
inc
sbb
leave
arpl
hlt
inc
push
roll
sti
mov
jo
sbb
inc
mov
ret
push
scas
inc
cmp
insl
push
es
lahf
dec
push
ficompl
fs
lret
inc
dec
add
adc
dec
adc
js
gs
mov
sbb
cwtl
inc
mov
lret
out
xor
push
out
sarb
pop
pop
jo
loope
test
dec
out
sbb
dec
dec
mov
rol
daa
pop
leave
add
push
bnd
jp
xchg
inc
ffreep
cmp
add
add
add
or
or
call
dec
bound
mov
sbb
out
xor
xlat
rcr
in
cmpl
ret
sbb
in
mov
popa
add
adc
shll
inc
and
fcomps
aaa
mov
sbb
jne
scas
inc
sub
pop
pop
sbb
pusha
mov
sub
scas
jmp
jnp
push
lea
cmp
xor
movsb
cmpsl
inc
frstor
inc
jge
and
shrb
adc
cmpb
loopne
or
push
fmull
out
pop
jne
jns
xor
mov
mov
js
iret
and
mov
es
ljmp
xchg
or
adc
dec
sbb
addr16
mov
addr16
xchg
ret
imul
inc
jns
mov
inc
jecxz
lds
jmp
add
in
out
ja
fbstp
mov
pop
jo
add
testb
add
adc
pop
lock
pushf
sbb
jns
jnp
cli
cmp
xlat
push
fxtract
push
scas
push
jbe
xchg
stos
test
mov
push
xor
shrl
push
xchg
gs
outsb
jne
pushf
fnstcw
jge
add
push
ret
jno
lret
mov
das
fs
xchg
xor
jg
sub
stos
mov
fisubs
adc
test
aaa
pop
cmp
jmp
jmp
add
cld
pusha
int
adc
sub
pop
lds
lds
mov
push
cld
ja
jnp
shr
cmc
ret
mov
pushf
pop
sarb
sahf
lea
pop
mov
insl
jg
mov
pop
aaa
pop
push
test
xchg
rolb
xchg
jo
test
pop
out
mov
jbe
mov
push
xor
andb
add
pop
in
xlat
adc
add
testb
add
ds
jge
nop
pop
iret
icebp
adc
xchg
xor
push
jg
jo
xor
mov
test
or
daa
or
les
hlt
ss
dec
js
xchg
int3
adc
cmc
imul
or
loop
stc
push
xchg
xchg
inc
cwtl
in
inc
xchg
out
testb
es
xor
jns
sbb
or
stos
push
cmp
loopne
jle
idivl
mov
cmpsl
jns
or
in
jge
in
cmp
mov
cmp
xor
mov
das
out
test
push
es
jb
add
dec
or
xchg
inc
repnz
iret
rol
lods
stos
and
pop
daa
adc
push
jge
inc
push
ljmp
aam
mov
dec
mov
nop
in
cmp
dec
add
pop
sbb
shrb
mov
jg
imull
push
testb
lds
sbb
add
add
add
mov
cltd
data16
fwait
clc
arpl
and
js
icebp
cmpsb
fnstenv
xchg
mov
xor
movsb
cmpb
dec
mov
inc
push
enter
mov
pop
mov
es
sahf
and
mov
test
push
and
faddp
sarl
or
mov
pop
xchg
popf
or
enter
mov
or
jae
ret
in
cmpb
jae
iret
stc
mov
push
insl
xor
dec
jbe
pop
or
orb
add
movsb
sub
movsb
fsubl
jo
adc
jbe
dec
adc
pop
sub
adc
pushf
lret
pop
pop
inc
scas
idivl
psrad
cltd
fisttps
mov
mov
xchg
adc
outsl
out
cmpsb
mov
jne
jno
mov
sub
sbb
or
add
cmp
sti
jg
and
repz
testb
add
fisttps
cwtl
jo
into
repz
fisttpl
out
mov
inc
movsb
cltd
cmp
xchg
sbbb
mov
ret
mov
aad
cmp
add
lods
fcmovne
mov
sahf
xchg
mov
stos
push
sbb
out
pusha
vmovhpd
test
sti
jb
xor
out
inc
and
xchg
xlat
cld
adcb
iret
jge
jne
and
push
cmc
xchg
cwtl
std
cmp
out
xor
insl
leave
cmp
jmp
lcall
push
pop
lahf
ss
mov
cwtl
dec
xor
fmuls
cmp
push
mov
dec
movsl
jb
testl
pop
mov
ljmp
inc
push
add
ret
jb
data16
mov
jb
loop
in
iret
cmp
push
mov
push
add
lahf
int3
cmpsb
nop
mov
add
scas
aam
jnp
fldl
xchg
je
dec
sbb
add
jne
push
scas
xchg
pop
rclb
pop
push
es
fcmovnbe
ds
inc
data16
cmp
shl
stc
push
iret
lods
cmp
xor
sbb
cmp
add
cltd
adc
jle
sbb
sub
fmuls
and
mov
ficompl
sub
inc
add
popa
stos
xchg
mov
ljmp
jle
inc
das
ds
inc
arpl
push
imul
rorb
notl
fiadds
sub
nop
push
test
jno
mov
cwtl
test
shl
js
jae
or
adc
mov
iret
out
and
ret
rcrb
sbb
and
aas
sbb
push
out
sub
dec
add
jmp
xlat
popa
repnz
lods
add
mov
scas
test
pop
cwtl
jle
pop
jg
sbb
pop
mov
mov
add
mov
jno
std
outsl
mov
xchg
pop
cltd
mov
add
repz
add
testb
add
scas
jle
lcall
nop
pushf
xchg
mov
rolb
out
sub
int
cs
jno
sti
or
sub
jne
cltd
fcomps
ljmp
cmp
sub
jns
int
notl
rcrl
xchg
xor
ds
mov
or
cmp
add
sub
leave
fwait
dec
mov
or
add
push
and
scas
or
divl
cld
push
push
imul
lahf
mov
xor
pop
ja
mov
stos
into
scas
xchg
arpl
popa
mov
inc
repnz
test
fwait
insl
mov
push
nop
mov
fwait
dec
push
movsb
and
lret
fiadds
pushf
lds
fstl
test
leave
stos
ss
mov
jp
add
sbbb
loope
jmp
loop
vpcmpeqw
add
testb
add
stc
in
or
in
imul
mov
fisttpl
loopne
cmp
push
cwtl
sub
mov
rorb
and
or
out
jnp
ror
por
movsb
add
lahf
test
mov
adc
call
fld
dec
mov
les
test
xor
or
sub
mov
mov
lea
lea
aaa
into
inc
loope
mov
pop
ret
push
int
pop
or
stos
xchg
out
jb
ljmp
sub
lock
dec
jg
push
mov
icebp
xchg
jle
jmp
lds
mov
rorl
adc
sti
mov
xchg
daa
lcall
mov
or
push
or
insl
aad
rolb
xor
xchg
lds
icebp
cmp
subl
add
add
sbb
out
or
xor
or
dec
sbb
xchg
cmc
in
pop
xlat
or
and
in
sbb
mov
subl
adc
fwait
outsb
shl
rorl
fxch
add
xorb
das
mov
jno
lods
jg
pushf
shrb
pop
ljmp
out
vpaddusb
add
test
push
out
lcallw
push
xchg
mov
push
leave
mov
xor
call
pushf
sarl
popf
add
and
sarl
xlat
mov
test
dec
cli
xchg
pop
pop
pop
mov
in
push
or
lret
push
jecxz
inc
out
cmp
stos
in
les
adc
fdivp
pop
nop
ret
rcrl
mov
cs
mov
xchg
fildll
stos
movsb
notl
test
arpl
jp
fdiv
add
dec
cli
inc
jg
int
pop
sbb
push
mov
testb
add
js
mov
jmp
pop
lea
fistps
rorb
push
dec
push
xor
jns
push
jb
mov
es
mov
lea
adc
dec
stos
mulb
ss
lods
jbe
mov
leave
inc
push
mov
lock
lods
repnz
cmc
inc
insl
inc
adc
dec
xor
inc
push
xlat
mov
jle
fsubrs
jo
es
pop
add
stos
insb
push
dec
lcall
xor
adc
fldl
test
lcall
dec
mov
or
mov
jne
xchg
out
push
jb
cld
out
xlat
inc
mov
dec
dec
push
xchg
or
jp
mov
in
test
mov
pop
insl
test
lahf
fistps
mov
dec
aaa
cmp
sbb
pop
xchg
mov
int
insb
addl
push
and
add
xchg
std
cmp
jle
fisttps
cmp
pop
push
and
add
add
add
fsubl
scas
clc
sti
addr16
pop
jnp
jmp
mov
mov
mov
mov
pop
sub
sbb
enter
fsubl
mov
push
divb
out
dec
jecxz
data16
stos
push
gs
leave
and
cltd
stos
loop
std
lods
mov
pop
add
mov
test
and
jp
hlt
mov
call
in
xor
xchg
mov
mov
mov
aaa
shl
mov
sbb
movsb
inc
mov
jns
or
cmpsb
rcr
xchg
shl
test
in
loopne
add
pop
xchg
mov
mov
inc
les
mov
pop
adcb
icebp
sti
dec
movsb
adc
xor
addr16
cmp
imul
pop
sbb
cmpsl
outsl
pop
ss
in
stos
jo
add
cmpsl
mov
jns
repz
jnp
ret
sbb
add
iret
xlat
ficoml
jle
xor
add
testb
add
cwtl
out
jg
sub
or
sub
push
shrl
mov
jmp
dec
inc
test
pop
pop
jecxz
daa
adc
out
or
in
jae
xchg
sti
dec
xchg
lret
mov
jmp
cld
insl
inc
scas
sbb
or
in
in
sti
je
fwait
cmpsl
stos
out
stos
xor
les
sbb
dec
les
mov
clc
xor
inc
aaa
push
xor
lahf
mov
mov
mov
push
mov
jns
mov
xchg
out
fs
shlb
loopne
stc
push
shll
mov
jecxz
mov
jmp
pop
mov
mov
sahf
data16
and
sub
test
pop
subb
jnp
mov
add
inc
pop
mov
mul
bnd
mov
push
jb
mov
add
add
sub
iret
outsb
jmp
rcll
inc
aas
pop
add
add
add
add
dec
pop
mov
fidivs
shlb
out
or
rcll
fidivrs
inc
xchg
or
pop
loopne
mov
inc
flds
pop
mov
inc
loope
movsb
cli
cmp
add
pop
add
add
mov
data16
cmp
push
push
add
sahf
mov
lds
repz
insb
paddsw
or
dec
inc
or
mov
jmp
xor
movsb
lcall
mov
sub
lds
imul
mov
lods
add
and
cwtl
aas
mov
xchg
dec
inc
mov
xchg
insl
lcallw
pop
sub
mov
mov
bnd
movsl
fadds
dec
das
mov
pop
jne
insb
mov
cmp
lahf
pop
nop
mov
lods
pop
ja
mov
or
or
add
sbb
std
sbb
stc
cld
or
push
test
clc
and
add
add
add
sub
movntq
pusha
in
test
push
aaa
movsl
sub
mov
and
mov
insl
mov
scas
in
add
jae
pushf
js
jns
xchg
inc
push
stos
or
sbb
adcb
cmp
fnsave
and
or
fwait
nop
dec
les
sahf
imul
movsb
push
xor
adc
movsl
jns
and
cmp
push
jge
stc
clc
adc
mov
mov
sbb
push
cli
cmp
pop
mull
movsl
sbb
adc
pushf
and
data16
xor
inc
jbe
xlat
mov
and
cmp
repnz
dec
call
into
inc
sahf
out
notb
lea
arpl
mov
mov
cli
subl
clc
push
mov
mov
or
pop
push
xor
testl
cld
pop
add
negl
adc
out
jl
andl
add
add
add
int
ficomps
mov
pusha
adc
push
push
jns
test
rorb
or
clc
aaa
jp,pt
cmp
adc
mov
xchg
mov
inc
ret
and
arpl
jmp
push
sub
cld
filds
xor
dec
adc
inc
test
sbb
mov
popl
mov
inc
js
xchg
or
lahf
insl
or
movsb
in
lret
lds
aas
pop
inc
outsl
sub
mov
mov
data16
push
sbb
subb
cmp
mov
cmpsb
stos
popf
pslld
or
dec
fistl
fistl
add
or
mov
dec
adc
mov
xchg
jns
inc
push
fdivrs
sub
aas
test
mov
mov
setnp
dec
shrb
sbb
inc
cwtl
fwait
cmpsb
fbld
pop
sbb
add
inc
fstl
shll
dec
add
mov
dec
pushl
cs
and
testb
add
mov
popf
push
cmpsl
mov
lret
pusha
mov
nop
and
dec
inc
sbb
mov
push
pop
call
sbb
mov
sub
ffreep
cli
test
and
addr16
push
add
xchg
inc
jl
ret
xchg
xor
add
fsubr
in
add
mov
out
out
ss
shlb
loop
push
int3
sti
add
out
lcall
cmp
outsl
inc
js
test
mov
xchg
pop
jmp
jp
inc
mov
dec
into
cmp
push
push
popa
leave
fstpl
jmp
sbb
bound
add
sub
mov
ljmp
pop
out
movsl
lods
fcomps
dec
shll
mov
pop
sub
inc
cmp
into
jp
push
test
mov
inc
ja
jmp
or
jbe
jge
adc
lret
add
pop
sub
inc
ja
pop
aas
pop
pop
inc
adc
in
and
add
testb
add
push
std
imul
add
xor
imul
jmp
mov
sahf
outsl
popa
sub
sub
cmp
add
iret
js
xchg
adc
mov
into
nop
mov
xchg
dec
inc
mov
sub
inc
lahf
add
cmp
clc
aad
mov
repnz
mov
aam
and
leave
pop
gs
push
imul
xchg
pop
mov
jb
mov
push
jle
stc
shl
adc
movsb
int
pushf
nop
push
int
xchg
test
sahf
lahf
cli
push
idiv
leave
add
fbstp
lahf
mov
mov
and
push
lea
scas
inc
xchg
sbb
scas
aas
cmp
stos
xor
clc
xchg
js,pn
pop
enter
sbb
mov
and
mov
flds
addb
insl
push
clc
mov
ret
add
mov
jo
mov
repz
jae
ja
div
dec
lods
push
mov
sub
add
add
add
lds
leave
or
push
daa
dec
inc
ret
adc
mov
call
js
sub
sub
cmp
js
repnz
out
aad
adc
je
aad
lret
mov
fcomp
jge
fidivl
popf
mov
outsb
push
fisubs
int
mov
out
jmp
es
into
mov
int
in
mov
insl
dec
rcrb
cmpsb
jg
push
push
popf
pop
or
nop
inc
jbe
pop
adc
imul
push
orb
xor
fidivl
dec
rclb
mov
aas
out
fsts
jecxz
push
mov
hlt
mov
outsb
mov
pop
loop
sub
add
es
cmpsl
lds
dec
pop
in
mov
loopne
clc
les
js
in
aam
stos
push
hlt
mov
cmc
push
add
xor
cli
std
jg
into
jno
fmulp
cli
sbb
sub
add
add
add
sbb
cmp
dec
clc
cmpsl
mov
pushf
fcmovu
push
inc
mov
lret
mov
cmp
xor
jno
jge
mov
or
popa
push
jnp
leave
mov
push
xchg
jecxz
sub
mov
in
mov
stc
lcall
fwait
mov
insl
dec
adc
and
pop
out
loop
decl
pop
ffreep
sbb
scas
mov
mov
testl
push
sahf
inc
push
inc
mov
pop
inc
negl
jnp
roll
push
sbb
cmpsb
and
add
imul
les
xchg
mov
push
frstor
and
inc
ss
dec
mov
movsl
cmp
push
stc
lea
dec
jg
jecxz
insb
push
xchg
pop
enter
std
cwtl
pop
pop
insl
inc
jns
adc
mov
mov
add
testl
incl
sub
pop
pop
or
mov
add
add
mov
mov
mov
popf
mov
inc
pop
dec
cmp
gs
test
insb
imul
mov
add
data16
adc
pop
ds
cltd
jecxz
jo
cmpsl
mov
pop
loopne
fimull
gs
popa
leave
cmpb
add
dec
lret
mov
pop
add
imul
rcrb
outsl
out
xor
shll
cmp
lahf
mov
cmc
jb
xchg
lods
jb
sbb
movsb
mov
add
inc
inc
clc
mov
sub
pop
in
fisttpll
add
fidivrs
pushf
rorl
inc
jae
mov
bound
cmpsl
or
out
push
test
arpl
jbe
in
pop
ljmp
leave
cli
popa
xorl
mov
addb
pop
pop
movsb
mov
sbbl
add
fists
mov
sbb
fwait
inc
or
push
stos
pop
add
push
es
jg
pop
xorl
lss
push
mov
add
testb
add
xor
xchg
push
jb
imulb
lds
repz
in
cli
add
or
mov
pop
je
sub
popf
in
mov
roll
mov
sahf
jbe
or
sbb
addl
push
in
ja
cs
popf
and
jg,pn
pop
cmpsb
xlat
fcomip
cmpsb
xor
lods
gs
mov
pop
mov
fists
xchg
pop
inc
push
xor
xor
in
jno
cli
movsb
inc
dec
imul
mov
movl
les
mov
jge
in
sub
sbb
inc
jbe
xchg
lret
and
aaa
ret
or
and
or
das
pushf
movsl
cmp
xchg
lret
xor
test
sbb
das
cli
lock
jge
mov
lahf
mov
filds
mov
mov
mov
or
inc
divb
sbb
ret
sti
push
lods
fisttps
add
push
clc
or
cmp
xor
add
testb
add
mov
push
scas
sbb
dec
push
aad
push
lcall
lock
and
fidivrl
jge
add
sti
loope
dec
sbb
push
mov
dec
mov
cmp
out
xor
ror
imull
lods
xor
sub
int3
es
mov
or
xchg
mov
fistpll
leave
int3
add
xchg
lods
out
clc
fbld
or
ja
mov
jl
and
push
mov
jne
repz
lods
jecxz
in
mov
jg
into
xor
add
cwtl
sub
popl
push
fwait
arpl
mov
push
or
add
sti
roll
cwtl
ret
cmp
ja
xor
xor
ds
and
lods
jbe
mov
out
repz
dec
sti
in
leave
lret
inc
or
add
stc
lods
xor
ja
seta
xchg
in
sub
add
inc
hlt
aad
enter
jb
mov
xchg
xchg
pop
pop
iret
xor
jne
jmp
jbe
jne
push
xchg
js
ds
insl
mov
pop
addr16
add
mov
out
enter
mov
xchg
sub
mov
pop
cmc
lret
sub
mov
xchg
test
cli
les
lea
mov
ja
scas
es
adc
aas
ja
notb
lea
stos
movsb
outsb
adcl
mov
cmp
enter
pop
or
xchg
dec
push
xor
cmp
push
mov
pop
xchg
xchg
cltd
and
loopne
pop
lahf
mov
xor
loopne
arpl
adc
inc
sub
in
call
aad
push
imul
roll
sbb
or
in
mov
pushf
cmp
sahf
mov
add
sub
add
ficoms
stos
sbb
ljmp
roll
add
testb
add
gs
jno
insl
je
aad
adc
popf
popa
inc
inc
mov
test
les
mov
mov
data16
fadds
xchg
mov
jno
or
sbb
fwait
out
mov
loope
adc
shll
sub
xor
mov
ljmp
aaa
mov
xchg
sub
out
clc
stc
movsl
jmp
test
jbe
out
gs
mov
pop
sbb
subl
push
and
lret
fnstenv
mov
mov
jne
fadds
out
je
test
leave
fnsave
aaa
mov
push
imul
push
mov
add
mov
dec
push
mov
xchg
xor
inc
out
out
ja
mov
std
mov
lret
adc
mov
or
add
add
mov
out
sbbb
sbb
mov
add
testb
add
dec
scas
or
scas
imul
ljmp
push
dec
sti
mov
jge
test
movsb
out
test
and
xlat
or
lods
fidivs
loope
js
adc
cmpsl
data16
jno
adc
clc
or
or
or
cmc
cltd
cmpsb
das
shr
imul
push
mov
cmp
enter
and
lock
in
pop
icebp
loop
push
lock
push
js
add
ds
ljmp
sub
jbe
xchg
push
mov
mov
icebp
cltd
pop
fcoml
sarb
imul
mov
jmp
xchg
scas
cwtl
sbb
js
sti
jnp
negl
sbb
jne
dec
insl
leave
pop
out
jne
lock
inc
mov
jae
roll
test
sub
add
sbb
out
aad
jo
dec
fincstp
test
add
add
push
mov
arpl
cmp
xchg
mov
push
mov
cltd
sbb
cld
aam
and
imul
lds
lret
movsb
and
sub
or
sarl
and
sbb
dec
movsb
push
lock
mov
jae
cmp
adc
les
dec
mov
inc
cli
mov
mov
mov
cmp
and
jge
shl
inc
sbb
popf
xchg
xchg
sahf
movsl
imul
imul
sbb
push
sub
gs
pop
xor
pop
mov
daa
pusha
mov
in
sub
xchg
hlt
dec
dec
jae
inc
jbe
fstl
xchg
and
notl
sbb
push
fsubr
notl
lock
enter
mov
test
ds
loope
mov
mov
adc
dec
adc
add
in
add
cmp
out
dec
lret
fstpt
jbe
add
testb
add
stc
push
jb
dec
ret
xchg
inc
pop
pop
sahf
jno
dec
out
mov
or
lods
mul
mov
push
and
imul
testb
xchg
jg
xor
popa
push
out
repnz
xchg
cwtl
mov
jge
xchg
clc
or
pop
mov
adc
xchg
ret
add
dec
or
clc
insb
adc
pushf
inc
sub
leave
movsl
xor
pop
test
aam
icebp
scas
mov
mov
sbb
test
push
pop
loop
pop
outsl
mov
nop
cmp
repnz
fildll
push
stc
adc
ret
icebp
popaw
mov
int3
call
mov
fwait
outsb
dec
fbstp
popa
xchg
xor
ss
xchg
and
xchg
and
jg
mov
jle
jnp
addr16
jg
jle
out
lret
dec
mov
cs
cmc
sahf
sahf
mov
cmp
test
add
lods
jg
add
lods
adc
out
insb
xor
add
add
add
addb
xor
int
add
dec
rorb
jmp
pop
imul
push
scas
mov
ret
test
scas
mov
xor
sub
xor
inc
dec
jl
ljmp
std
inc
mov
into
addr16
out
add
ljmp
xor
jbe
or
lcall
mov
sub
adc
call
lahf
in
je
pop
add
mov
xchg
out
mov
fisubrs
mov
inc
test
insb
movsb
sbb
mov
or
cwtl
dec
test
out
or
inc
test
fwait
adc
add
pop
jne
repnz
idivb
enter
arpl
push
mov
clc
stos
in
fs
imull
ds
iret
subl
in
ret
pop
fwait
out
jne
or
pop
enter
ljmp
add
mov
dec
idivl
cld
add
adc
pop
bound
add
testb
add
scas
cmpsl
pop
cmp
mov
ficompl
sbb
mov
jne
loopne
mov
mov
stc
xor
add
push
shl
ret
aas
sbb
repz
cmpxchg
cmp
lret
or
test
jmp
mov
pop
mov
or
mov
test
sti
faddp
mov
sub
cmc
pop
out
imul
popa
out
lcall
es
mov
out
fsubs
mov
out
scas
mov
ss
stc
test
movsl
inc
inc
xor
nop
mov
inc
outsb
mov
or
sub
dec
jnp
das
pop
cmp
ss
sub
fdivs
hlt
cmp
movsl
push
dec
je
out
sbb
dec
fcmovnbe
dec
push
mov
push
ss
inc
adc
cmpl
cltd
scas
inc
aas
jle
xchg
fbstp
add
add
mov
iret
mov
daa
loop
test
add
testb
add
lahf
ds
add
jmp
pop
out
popa
add
das
fildl
pop
ljmp
lahf
scas
sbb
insl
xor
xorl
outsb
leave
fs
cmc
test
fdivrs
fstps
fdivl
mov
test
bound
movsl
ds
cmp
int3
and
xor
outsl
es
sub
mov
jo
out
out
sarb
repz
test
mov
add
leave
mov
sbb
inc
cld
inc
testl
dec
push
cmp
pop
stc
lret
shll
arpl
in
in
aad
jl
dec
aad
gs
cmp
shl
mov
lea
push
mov
add
repz
repnz
jo
faddp
sub
or
jecxz
aad
mov
inc
cmp
cmpsl
cmp
in
dec
in
ljmp
pusha
mov
add
or
sbb
ss
lcall
add
dec
xor
or
push
mov
pop
stos
cmpsl
sahf
inc
add
jl
ret
int3
add
into
jle
popf
pop
add
xchg
mov
sbb
adc
lret
cwtl
mov
xchg
or
mov
cmp
dec
mov
hlt
cmp
stos
cmp
ret
ds
adc
test
pop
movsb
ss
shrl
ljmp
int
loope
pop
pop
xor
cli
aam
aas
nop
and
xchg
xchg
dec
fildl
and
out
mov
cmc
jmp
xchg
mov
cs
fstps
lds
insl
xlat
mov
push
mov
rcrb
scas
stos
ret
mov
or
or
xchg
sub
push
inc
and
and
adc
jo
mov
scas
loopne
dec
shll
xlat
and
lock
add
shlb
cli
clc
cli
clc
sarb
repnz
inc
aam
jnp
ljmp
add
mov
or
decl
les
and
rcrl
mov
cmp
incl
jns
jb
sbb
mov
and
inc
push
mov
int
roll
xor
loopne
xlat
lea
sbb
dec
inc
mov
cld
test
mov
stc
jo
fistl
jecxz
jb
push
out
inc
mov
xor
push
or
cmp
inc
jmp
mov
mov
hlt
mov
mov
int3
sbb
pop
jmp
jecxz
sbb
sub
fdivs
inc
sub
repz
leave
jnp
insb
imul
orl
pop
mov
xchg
jg
and
daa
xchg
mov
pop
xor
test
aam
ret
sahf
stos
insb
sub
jbe
mov
pop
icebp
fcmovnb
movsb
sar
in
and
mov
xchg
inc
inc
jg
popa
mov
cmp
fwait
add
test
imul
push
lcall
cmp
add
testb
add
scas
add
loop
cmp
addb
add
pop
subb
pop
xchg
gs
incl
iret
push
fists
inc
adc
cs
movsb
xchg
cmpsl
jbe
fsts
sahf
dec
mov
aaa
mov
mov
enter
sti
jl
mov
pop
lods
aaa
cmp
mov
jmp
into
cwtl
dec
shlb
aam
dec
jne
test
das
sbb
adc
dec
jno
and
cli
xor
cmp
push
sbb
xchg
cmp
in
clc
aas
movsb
and
xor
jmp
xor
mov
frstor
sbb
arpl
in
and
std
dec
cmp
fidivs
pushf
mov
incl
jp
in
add
jecxz
add
das
jp
cld
insl
rorl
mov
inc
push
cs
mov
rorb
xor
push
xchg
cmc
test
popa
xchg
and
inc
add
fs
es
data16
cmc
jle
dec
push
hlt
cltd
dec
xor
add
testb
add
lahf
adc
xchg
clc
and
rolb
jecxz
mov
into
stos
pop
inc
mov
and
jle
lret
bound
ss
stos
sub
or
mov
mov
add
stc
fisttps
in
arpl
and
sub
xchg
out
add
jl
lret
adc
ds
popa
roll
test
loope
cld
idivb
push
mov
stos
dec
pop
stos
ret
jbe
sahf
pop
push
cld
imul
roll
out
imul
push
sub
xor
jg
xchg
inc
sbb
mov
setle
shl
scas
push
pop
in
adc
xchg
bound
fsubrp
cli
mov
mov
aad
or
sub
push
cmp
and
jge
shlb
adc
xchg
clc
mov
fldcw
cwtl
cmpsl
cmpb
add
testb
add
mov
test
outsb
xchg
mov
movsb
cmp
arpl
mov
je
pop
push
call
push
cs
ss
add
jbe
mov
pop
mov
jl
pop
cld
daa
mov
lock
cltd
cmpsl
les
imul
mov
movsl
lcall
jbe
lea
mov
pop
sbb
xor
stos
add
pop
sub
leave
add
or
movsb
mov
sub
mov
mov
push
enter
jecxz
jbe
mov
jmp
xchg
pinsrw
jae
rdtsc
ljmp
xlat
push
cmc
xchg
mov
cmpsl
adc
sbb
push
push
cld
aam
or
mov
dec
scas
lods
xchg
adc
rolb
test
cmovp
test
xlat
cwtl
dec
ret
and
mov
in
add
repz
push
sti
cmpsl
pop
push
jo
push
xchg
dec
rcrb
add
testb
add
incb
fstps
mov
sub
and
sahf
loope
js
aaa
aam
fwait
sbb
andl
pop
cmpxchg
enter
xchg
push
das
mov
xchg
pop
mov
fcmovnbe
aas
scas
nop
shll
sub
lcall
lea
mov
mov
sub
xor
mov
aam
xchg
stc
out
xlat
xchg
xor
shll
in
addr16
add
into
pop
xchg
mov
add
inc
pop
inc
pop
mov
xchg
xchg
lret
repz
mov
lret
pop
mov
inc
sbb
sub
bound
mov
adc
jecxz
shlb
arpl
xchg
add
clc
cli
pop
out
adc
enter
sbb
lret
or
adc
mov
mov
xor
mov
or
mov
adc
add
mov
std
cmp
or
lret
cmp
cmp
add
add
add
mov
test
push
xor
push
imul
insb
int
inc
jecxz
gs
pop
cmp
pop
add
outsl
inc
and
pop
lea
loopne
test
and
cltd
jbe
mov
dec
shrl
mov
out
ss
in
inc
and
xchg
cmp
clc
mov
mov
inc
add
xor
mov
xchg
aad
and
test
cmp
dec
dec
insb
sbb
aas
lods
and
adc
notb
inc
sub
es
adc
adc
nop
xchg
loop
jle
lds
push
mov
lret
loopne
ds
fidivl
pop
mov
mov
jnp
ret
loop
dec
adc
out
and
ja
ja
cmp
lret
dec
push
je
hlt
mov
dec
or
push
divl
add
add
and
jecxz
or
or
add
add
add
add
mov
pop
movsl
inc
cmp
xchg
cmpsl
push
mov
sbb
pop
enter
fnstsw
mov
jb
and
xchg
icebp
stos
dec
cmp
std
fnstenv
jmp
jbe
pop
inc
mov
xor
cli
mov
sbb
or
aas
cmpsl
mov
sbb
sub
pop
mov
mov
ss
or
pop
jge
pop
aaa
pop
sub
xor
add
sbb
test
std
fninit
jecxz
inc
adc
fs
fdiv
push
dec
pop
repnz
negw
jle
xor
stos
pop
inc
jne
icebp
rcr
test
sbb
mov
xchg
mov
push
mov
dec
ds
fdivrl
mov
or
stos
stos
fnstsw
adc
and
popf
lock
or
pop
aam
incb
add
add
xchg
ficomps
push
mov
testb
add
das
lods
sbb
and
cmc
cmp
jl
pop
cmp
dec
push
mov
mov
xor
lcall
cld
int3
and
sub
mov
dec
xor
push
add
push
add
jl
movsl
jne
sub
sahf
mov
or
cmp
lds
xchg
sar
and
mov
sbb
das
repz
in
sub
inc
or
and
xor
xchg
fdiv
outsl
in
aas
aas
shrb
mov
adc
jns
pop
dec
cmpsb
and
ds
ss
adc
xlat
jp
inc
xor
test
mov
cmp
repz
or
mov
stc
xor
movsb
lcall
jmp
sbb
nop
add
jnp
std
leave
inc
or
sti
xor
add
repz
test
sub
pop
cs
sbb
add
lods
xor
mov
pop
add
and
hlt
cmp
add
adc
cmp
push
fstl
sbb
adc
sbbb
nop
ret
imul
ja
and
mov
mov
aaa
fildl
rolb
xor
push
adcb
pop
cmpsb
aas
fs
popl
in
sub
int3
test
lret
test
in
loope
adc
fdivs
push
mov
pushf
cwtl
mov
nopl
decb
xchg
push
scas
repz
lea
sbb
jno
lds
out
testb
jae
add
outsb
push
push
xchg
push
xchg
push
shl
movsl
or
and
dec
push
test
fisttpll
js
stos
push
in
mov
xor
out
lods
pushf
jnp
dec
xchg
lea
es
jge
jl
sub
mov
lret
adc
lock
dec
lea
add
lock
mov
cwtl
sbb
xchg
ljmp
add
je
fdivrl
jnp
mov
mov
iret
aam
repz
cmp
lods
aas
hlt
mov
inc
sbb
jle
imul
aam
xor
cmp
xor
pusha
lds
sbbl
sti
sbb
mov
mov
scas
mov
mov
xchg
lea
mov
push
out
inc
xor
jb
pextrw
mov
pop
lods
dec
hlt
adc
sub
bound
lea
jno
stos
jle
aas
test
inc
jns
das
mov
ljmp
dec
outsl
mov
stc
test
mov
xor
testl
fs
cmpsb
adc
jmp
js
push
pand
test
add
xor
push
mov
stos
dec
xor
cmp
mov
sarb
pop
out
dec
pop
ret
pop
mov
or
mov
and
adc
add
sub
sti
pop
jge
div
cmp
les
aad
aas
add
testb
add
xlat
adc
jle
xchg
push
jecxz
lret
push
push
inc
and
sub
xchg
dec
and
pop
das
sti
fnstenvs
cmp
aaa
dec
stos
inc
dec
addl
xorb
cmc
push
lahf
dec
jle
cmpsb
scas
mov
sbb
test
or
jl
cmp
mov
shl
cmpsl
sub
or
jbe
inc
pop
sbb
lret
mov
pop
adc
or
mov
call
adc
dec
rorl
pop
pop
test
shll
inc
xchg
dec
test
or
stc
lds
lds
sbbb
dec
mov
ss
hlt
push
cmpsl
sub
xchg
push
xchg
sbb
jno
dec
cld
inc
and
hlt
adc
lods
das
pop
mov
shrb
and
xchg
movl
add
fsub
std
in
popf
jle
es
shll
testb
add
adc
cmp
iret
and
pop
sub
and
sub
add
jae
and
or
inc
sub
frstor
add
lret
lahf
sbb
stos
and
into
rcll
mov
inc
xchg
cmpsb
mov
mov
popf
pop
dec
xlat
orb
add
dec
fidivrl
testl
insb
imul
inc
jp
enter
add
mov
xor
fisubrl
test
dec
fmulp
test
sub
sti
subb
jg
idivl
xchg
or
iret
lcall
cmpsl
xor
gs
pop
and
in
xor
scas
add
mov
mov
pop
lds
and
sbb
in
ja
in
bound
push
fcmovne
ds
loopne
fldcw
pop
clc
pop
mov
sldt
pop
jp
jnp
sti
xchg
jle
popf
loopne
roll
stc
mov
inc
add
testb
add
cmpsb
jg
sbb
xchg
adc
repnz
inc
loop
mov
mov
movsl
popa
fimull
aam
push
mov
iret
ss
sarb
xchg
lods
adcb
mov
mov
aas
fnsave
aam
adc
inc
sbb
jno
fwait
mov
nop
adc
jae
jnp
sbb
mov
inc
out
dec
cltd
cmpsl
sub
xor
lds
gs
jns
mov
cmc
scas
xchg
mov
ret
pop
mov
neg
cmpsb
adc
push
sbb
and
jbe
popa
and
ret
cmpsb
rolb
repz
into
push
stc
in
adc
cli
inc
inc
mov
sbb
add
cmpsb
scas
decl
inc
test
add
outsb
fbstp
push
pop
mov
insb
movsb
and
pushf
dec
or
jne
hlt
cltd
in
stos
and
iret
mov
add
push
sti
loopne
cmp
push
fstpl
mov
add
testb
add
add
mov
sbb
jecxz
xor
sbb
cmpsl
jae
pop
jb
inc
dec
inc
push
pusha
leave
ret
icebp
ja
add
ja
frstor
ljmp
lods
jo
ja
shrl
addr16
xor
enter
mov
sti
rcl
cli
adc
mov
repz
add
or
jl
hlt
pop
xchg
and
cltd
pop
mov
adc
jecxz
out
cmp
insl
cmp
fisubs
cmpsl
sub
mov
jle
pop
inc
dec
aas
test
sub
and
ja
add
stc
xchg
jne
insb
mov
sarb
push
jae
es
in
loop
bound
push
push
std
scas
xor
mov
shlb
inc
cli
pushf
add
inc
xor
or
jae
add
push
ret
cmp
and
push
dec
outsl
inc
cmp
testb
add
push
nop
adc
and
sub
mov
xor
gs
popa
dec
repnz
movsb
mov
scas
js
xchg
adc
push
rcll
fiaddl
add
xchg
sub
cmpsl
push
fistpll
mov
sub
out
cmpb
sub
push
mov
xor
fistpll
or
sarl
shrb
jmp
mov
fidivrl
imul
mov
stc
cs
insb
push
mov
pop
lds
ja
outsl
or
fimull
repz
mov
xor
sub
jb
out
nop
lods
daa
in
fdivrs
out
adc
adc
adc
aam
arpl
test
dec
jb
mov
and
cmp
push
xor
push
mov
out
out
pop
cmp
mov
jbe
push
out
or
or
mov
incb
ljmp
push
pop
mov
add
add
add
cmp
or
xlat
test
lods
add
and
mov
or
les
and
in
test
sbb
push
mov
push
imul
xor
add
and
cmpb
bound
shrl
push
mov
int3
xor
xorb
adc
shl
icebp
fsub
in
aas
lods
mov
test
loopne
mov
in
je
xchg
scas
xlat
out
pop
push
jmp
jbe
dec
int3
ljmp
in
cmpsb
nop
sub
aaa
dec
clc
xchg
popa
js
test
add
inc
sahf
leave
mov
cli
fadds
xchg
rcl
sbb
call
or
daa
stc
rolb
xor
push
inc
insl
inc
push
sbb
dec
mov
repz
repz
jmp
cmpsb
mov
aad
pop
cmp
divb
rclb
mov
popf
mov
inc
add
testb
add
sbb
pop
adc
xchg
sbb
and
push
testb
sbb
fs
push
dec
fdivrl
mov
add
lcall
insl
cmc
dec
test
sub
jne
aad
fimull
mov
sahf
fdivrl
fstps
lret
pop
and
fbstp
fs
sub
mov
filds
and
nop
cmp
mov
cmpsb
es
fildll
adcl
daa
clc
aam
xor
mov
stos
loopne
add
sub
fsts
mov
popf
dec
lret
pop
lret
fidivrs
jle
scas
movsb
popa
sti
add
jle
inc
lods
movsb
imul
outsl
pop
in
stos
lret
lods
aaa
add
mov
add
ja
jno
ds
mov
and
cmpsl
les
mov
jnp
int
pop
xor
nop
lret
popf
add
jl
dec
jbe
idivl
ss
repz
in
lcall
add
stc
lds
add
or
or
addl
insl
outsb
cmp
mov
leave
add
mov
mov
fimuls
out
mov
loopne
bound
push
aaa
test
sub
ja
cmp
lret
call
cmp
or
mov
imul
cmp
ds
jo
jmp
ljmp
jns
fldcw
jge
mov
enter
cmpsl
jbe
stc
loop
mov
add
mov
iret
jnp
loop
and
lcall
xchg
mov
push
cmp
jns
push
mov
and
int3
add
dec
lea
pop
jl
xor
enter
sub
das
clc
insb
std
inc
imul
xchg
add
sbb
sbb
out
hlt
inc
or
add
outsb
sub
stos
fs
cmp
xor
nop
inc
add
testb
add
loop
ret
xchg
fidivrl
ss
xchg
ja
push
dec
aaa
dec
jne
enter
push
or
ret
rcrl
mov
aas
aas
in
and
shll
subb
xor
imul
lcall
mov
call
repz
fists
mov
sub
ret
fists
cld
dec
repnz
fs
jg
sbb
loop
daa
ret
mov
sub
leave
outsb
jl
xlat
adc
outsl
jns
add
jle
in
scas
push
pop
fs
xchg
mov
imul
lcall
sbb
test
add
imul
sbb
and
andl
loopne
loopne
xor
bound
fwait
mov
loopne
data16
dec
loopne
inc
pusha
inc
mov
out
loope
mov
mov
add
les
scas
fistpll
loop
rcll
add
add
scas
lods
imul
jl
xor
pop
stos
jp
mov
scas
mov
inc
mov
dec
notb
mov
loop
std
lcall
ror
mov
xchg
aaa
popf
sbb
adc
jecxz
mov
dec
jp
fwait
jg
push
mov
jae
loop
lcall
lods
xchg
or
cmp
leave
inc
jbe
addb
int3
jge
lea
das
mov
lret
fisubs
out
and
push
leave
push
int
fnsave
cmp
sbb
push
stos
jbe
mov
inc
repz
dec
xor
fwait
cld
cmp
sahf
mov
push
out
repz
fwait
lds
push
ficompl
mov
and
or
popa
cmpsl
or
inc
mov
cmc
fdivrs
add
cmp
les
ja
les
add
add
add
stos
xchg
jno
xor
cmp
add
xchg
jge
leave
pop
pop
mov
in
mov
dec
das
push
mov
push
rol
adc
jg
rcr
sti
xor
dec
mov
stc
fs
hlt
add
icebp
mov
fisttps
jmp
xor
pop
add
and
push
cmp
xorl
int3
xor
mov
fidivrl
daa
enter
inc
cmp
xchg
pusha
inc
test
xorb
xor
addps
adc
inc
mov
test
mov
jae
ffreep
push
jp
sub
pusha
inc
push
notl
sbb
bound
fwait
stos
jnp
mov
xchg
lcall
les
jo
push
mov
jnp
insl
out
mov
xchg
mov
fildll
cs
jl
bswap
inc
or
adc
add
adc
incl
arpl
ss
add
testb
add
in
push
imull
data16
sahf
or
scas
cmc
rcrb
pop
mov
fdivrp
xchg
aaa
popf
shlb
and
jno
xor
inc
decb
pusha
clc
das
or
enter
out
cld
ret
jne
in
fimull
arpl
imull
cs
test
sbb
xchg
shrl
inc
pop
arpl
inc
std
or
daa
jbe
sub
pop
loope
lret
mov
cmp
mov
in
repz
push
je
lret
mov
or
adc
cmp
or
cwtl
jns
mov
push
jmp
lds
push
inc
mov
inc
lahf
sub
push
fiadds
loop
mov
mov
aam
in
xor
arpl
push
outsl
pop
cli
scas
nop
sbb
loop
ja
fdivs
hlt
lahf
fnstsw
or
push
adc
je
mov
das
add
and
das
cmp
lods
repz
in
pusha
out
jg
sbb
push
add
add
divl
sub
cli
jg
nop
xchg
pop
aaa
push
out
das
sub
dec
test
testb
dec
fs
pop
mov
addr16
adc
or
test
andb
add
mov
shrl
cmp
sub
fs
adc
push
sahf
mov
jmp
pop
pop
fmuls
mov
cmp
test
aaa
sbb
mov
and
insb
dec
ljmp
sbb
ljmp
pop
add
inc
jge
mov
cmp
cld
pop
popa
stos
mov
cld
loopne
xor
adcb
dec
mov
movsl
xchg
add
inc
push
outsl
ljmp
in
mov
and
add
cmp
or
sahf
adc
pushf
repnz
jl
or
cld
into
xchg
pop
addr16
and
mov
lods
ja
or
add
add
daa
push
cld
push
std
jmp
push
jg
push
jbe
cwtl
lea
add
testb
add
cltd
add
push
pop
leave
push
push
in
sbb
inc
mov
xchg
and
and
lahf
xor
call
xor
adc
dec
sbb
jmp
add
xlat
sub
dec
es
scas
insb
xor
adc
pop
dec
add
fwait
push
push
lcall
cmpsb
jmp
adc
jl
rorb
push
mov
jne
add
mov
add
insl
mov
xchg
dec
cmp
aad
aam
jae
dec
xlat
sahf
or
xchg
jno
fnstcw
fdivrs
push
jp
lock
out
mov
out
push
stc
in
mov
cli
or
mov
stos
add
cltd
lcall
cmp
ret
and
test
rorl
repnz
xor
jne
push
popf
das
push
jmp
mov
dec
sub
lods
add
dec
push
add
sbb
dec
push
cwtl
adc
xchg
cs
testb
add
and
adc
or
pop
mov
lret
and
arpl
add
xchg
xchg
or
test
clc
mov
push
inc
xchg
test
lds
mov
cmc
stc
or
lds
and
sar
hlt
inc
dec
cmpsl
jle
adc
lahf
or
sub
sub
bound
nop
or
dec
mov
add
lahf
dec
in
mov
leave
or
mov
ja
iret
cltd
je
cmp
insl
or
cmc
or
enter
ss
dec
shrl
test
imul
in
pop
jecxz
push
sub
cs
loopne
and
arpl
gs
mov
xchg
mov
and
jmp
mov
ds
fsubl
ja
xor
mov
jae
xchg
stos
push
gs
movsl
inc
mov
and
in
icebp
lods
add
stos
add
push
mov
mov
sahf
and
testb
add
shrb
jo
push
cwtl
outsb
ja
andb
sbb
in
outsl
lret
es
push
jl
adc
int
movsl
pop
mov
jl
mov
xchg
scas
inc
sbb
push
sbbb
lea
into
jge
in
daa
xor
cwtl
xchg
mov
mov
das
or
mov
aam
aam
shrb
mov
test
in
lret
stc
mov
inc
sbb
iret
call
push
pop
dec
outsl
ret
imul
cmpsl
xor
dec
shl
ret
push
enter
sti
adc
dec
addr16
mov
inc
outsl
inc
mov
jg
dec
sub
mov
dec
inc
out
rcll
test
dec
dec
mov
push
repnz
adc
daa
ja
int3
mov
shrb
data16
pusha
mov
cmp
loop
fldl
add
jg
xchg
lcall
mov
add
testb
add
mov
enter
mov
int
or
clc
jns
loop
shrl
test
repnz
sarb
push
xlat
or
les
mov
cwtl
div
pop
repz
nop
jl
outsl
xor
mov
in
cmpsb
aam
aaa
xchg
pop
hlt
sahf
pop
pop
lock
dec
and
pcmpeqb
dec
loopne
or
cmp
int3
add
subb
sub
fbstp
shr
mov
mov
fidivs
lods
outsb
ss
fdivrs
or
fsubs
mov
dec
mov
jecxz
in
xor
push
sbb
imul
adc
repz
add
cmpsl
pop
cltd
fstps
cs
dec
ss
fs
imull
pop
dec
mov
cmp
adc
lds
lahf
adc
cmp
inc
addl
and
dec
lret
jmp
imul
xchg
aad
jb
mov
push
add
testb
add
pop
adc
imul
mov
repnz
es
addr16
fisttps
fwait
mov
loopne
sti
mov
xor
enter
mov
dec
jne
insb
outsl
ja
xor
hlt
mov
lock
lea
jp
sbb
mov
outsb
sbb
xor
cmp
push
cmp
jbe
fsqrt
roll
daa
dec
mov
fidivl
add
scas
xor
cli
popa
pop
mov
jbe
out
icebp
loope
das
fstps
nop
sub
mov
call
repz
ret
mov
xchg
iret
sub
xor
hlt
cwtl
pop
or
push
nop
sbb
cs
sti
sbb
scas
pushf
pop
cld
fs
mov
mov
push
icebp
out
popf
push
lret
es
add
fidivs
lds
cmc
cwtl
and
int3
mov
sub
add
testb
add
mov
add
cmp
fistpll
or
loopne
sbb
pop
fnsave
mov
je
jns
aas
mov
shl
xor
xlat
int
cmp
pop
adc
cmpsb
push
mov
jecxz
or
test
dec
out
dec
mov
cmpsb
cmc
and
and
push
xlat
aad
pop
jecxz
arpl
in
jae
inc
cmp
xchg
or
ja
outsb
jg,pn
mov
xor
mov
dec
sub
imul
and
push
push
insb
xchg
inc
or
dec
pop
mov
sbb
aaa
or
or
cwtl
mov
daa
cld
mov
out
aas
gs
and
inc
stc
xchg
les
xchg
in
mov
mov
cmp
mov
mov
jp
inc
cmp
arpl
flds
fisttpll
scas
test
add
sub
jns
clc
mov
jmp
jmp
add
add
add
shl
adc
mov
sbb
add
or
in
xlat
inc
movsl
psubb
pop
js
loope
movsl
add
cmp
dec
mov
mov
test
sbb
or
inc
fiaddl
mov
cmpsb
das
and
cli
xor
jecxz
loope
cmp
lea
iret
stos
push
push
int
sub
push
mov
cmpsb
add
mov
scas
sbb
in
dec
in
cli
scas
ss
test
add
aaa
push
mov
aad
leave
mov
push
push
imul
xchg
mov
loopne
pusha
or
jbe
sub
icebp
inc
cwtl
jnp
mov
mov
out
adc
dec
inc
sub
fistps
xor
push
jns
sub
pop
push
stc
push
addr16
mov
test
rcrl
jmp
les
dec
or
cwtl
mov
add
ret
jg
mov
and
in
push
add
testb
add
push
push
cmp
mov
mov
out
mov
call
dec
xchg
int
mov
xchg
xor
pop
add
adc
cmpsb
lcall
fmuls
pushf
xor
aas
dec
pushf
neg
sbb
pushf
adc
movsl
push
enter
lret
dec
push
lods
adcl
xor
and
pop
js
xor
loopne
jo
xor
jns
and
loope
in
jle
mov
jno
jl
or
xor
add
mov
inc
ds
xchg
adc
jne
mov
sub
push
xor
add
pusha
stos
jmp
lds
lods
inc
movsl
stc
mov
out
jl
fsubr
push
cmp
cmp
lea
fstl
push
push
jmp
outsl
mov
cs
add
aam
cmp
mov
add
adc
mov
cwtl
out
daa
mov
push
add
testb
add
jge
sub
adc
xor
or
ljmp
or
jmp
call
dec
out
adc
mov
leave
xlat
je
fs
aam
flds
rcll
jp
mov
cmc
imul
outsl
push
inc
notb
rclb
out
cwtl
add
iret
inc
stos
fistps
fmull
add
je
nop
idivl
xor
inc
push
mov
jg
add
jne
pop
inc
push
push
rcpps
pop
xor
std
lock
movsl
out
outsl
cmp
nop
xchg
daa
cmp
fcompl
pop
int
fwait
lret
dec
inc
mov
sub
aam
mov
stos
push
or
nop
fcmovnb
push
and
cli
cmp
adc
add
scas
call
xor
sub
test
lea
cmc
sub
lcall
loopne
and
or
dec
pushf
and
add
add
hlt
gs
push
sub
mov
add
add
testb
add
pop
xor
stc
cmp
stos
push
jbe
pop
adc
jns
jno
xchg
add
push
xor
mov
loop
dec
and
sub
in
sub
mov
cmp
pop
ficompl
or
cli
fnsave
xor
shr
adc
ret
push
jecxz
xchg
ror
cmc
hlt
imul
xchg
xchg
mov
ret
scas
xchg
int3
xor
dec
xor
jnp
cmpsl
jmp
push
mov
sub
or
addr16
cmp
aam
mov
repnz
repnz
pop
mov
or
cvtdq2ps
sub
sbb
daa
in
ja
in
jmp
add
fnstsw
daa
adc
mov
loopne
xchg
mov
push
dec
push
xorb
call
lea
fsubl
dec
sbb
add
aas
gs
repnz
and
ror
jbe
cli
push
add
testb
add
imul
cmp
popf
adc
and
cli
nop
and
mov
mov
and
sub
inc
loope
nop
outsl
dec
add
jb
cmc
pop
inc
mov
movsb
ja
pop
or
xor
imulb
sbb
xchg
aad
push
cmpsb
push
out
pop
xor
loop
insb
into
jl
fs
into
mov
mov
daa
mov
cld
insl
pop
or
pop
inc
and
jbe
out
pop
subb
add
fwait
stos
pop
rcrb
orb
and
sub
cmp
lcall
xor
mov
movsl
loope
sahf
fistps
cs
xor
cmpsb
mov
repz
test
out
popf
loope
push
jo
push
mov
test
cmc
mov
or
mov
pop
imull
adc
xchg
dec
leave
cwtl
cmpsb
push
ss
and
add
mov
out
fisttpll
mov
lock
add
testb
add
mov
sbb
in
inc
lea
or
add
mov
test
sbb
mov
lret
pop
push
cld
femms
icebp
hlt
inc
dec
dec
pop
jp
loopne
pushf
cmp
sti
inc
xor
push
lahf
lds
aaa
and
or
pop
imul
adc
cmp
pop
mov
sbb
sahf
rcll
incl
sbbl
inc
adc
jne
hlt
cmp
outsb
stc
push
jno
xlat
in
js
add
and
push
mov
or
push
pop
jge
xchg
dec
call
pop
mov
popf
or
pop
cmc
adcl
fsubrs
lock
push
xor
push
fstpl
mov
cmp
inc
testb
cmp
ret
and
subb
and
jge
imul
lret
out
js
sbb
sbb
add
fildll
mov
arpl
out
add
testb
add
and
jle
out
pop
arpl
pushf
mov
ljmp
adc
xor
test
in
into
push
jnp
lea
cmp
mov
xchg
sub
inc
sbb
mov
fwait
or
push
fs
mov
or
jae
inc
cmc
mov
dec
cld
pop
pop
add
inc
mov
fidivl
jbe
cmp
mov
push
pop
or
cmpsl
pop
rcrl
or
iret
fs
enter
repnz
sbb
jle
or
sbb
inc
imul
addr16
cmovge
rcll
shlb
andl
cmp
pop
xor
sbb
mov
out
movsb
or
rcrl
or
aaa
outsl
mov
gs
and
add
jmp
out
aas
mov
fsubs
testb
add
and
pop
sub
mov
jmp
push
pop
lret
movb
xor
lret
push
loope
lds
mov
imul
gs
add
push
les
cmp
pop
mov
or
jmp
xchg
daa
aaa
push
sub
std
jno
ljmp
aam
out
std
xchg
sbb
xchg
stos
push
xchg
ss
and
leave
sbb
pop
mov
push
jecxz
mov
outsl
pop
pop
jecxz
push
lahf
std
pop
test
hlt
sahf
movsl
xchg
push
push
cwtl
jb
fisubrl
iret
pop
in
ret
mov
jo
xor
scas
negl
cmp
in
cmpsl
or
jg
lock
inc
push
fcomps
cs
xor
xchg
cld
mov
xor
push
jno
and
sub
orl
loope
pop
cmp
outsb
inc
add
add
imul
out
mov
arpl
pop
jg
rcrb
add
add
add
sub
mov
rcrl
inc
out
repnz
push
pop
push
outsb
or
imul
movsl
push
or
ret
or
aas
pusha
adc
addr16
push
in
mov
xchg
mov
icebp
sub
test
add
add
mov
fucomi
fistpll
add
xchg
out
xchg
jle
inc
ss
cld
jo
aam
pushf
sub
mov
icebp
iret
arpl
fs
cltd
rcr
aas
push
xlat
xchg
mov
cmpsl
lods
outsb
jle
push
sub
mov
cld
in
sub
loope
mov
arpl
push
mov
fucompp
imul
mov
mov
pop
lret
loopne
outsb
fldl
mov
adcb
imul
in
sub
pop
nop
les
pushf
movsl
out
imul
shll
mov
sub
mov
add
js
add
dec
stc
mov
clc
add
rcr
lods
mov
pop
add
testb
add
lret
dec
mov
pop
mov
pusha
sar
mov
outsb
or
test
div
lahf
ficoml
mov
ja
mov
jp
stos
cmp
mov
or
pop
dec
adc
jbe
in
imul
or
xor
aaa
xor
adc
mov
jmp
sar
jl
in
sub
in
not
cltd
shll
and
mov
pushw
mov
pop
pop
and
mov
pushf
xor
and
push
adc
sti
leave
lods
out
les
inc
pop
mov
dec
les
mov
stc
pop
mov
mov
add
bound
stos
jno
xor
test
sbb
insb
adc
imul
push
jns
xchg
pop
dec
mov
xchg
cmp
jle
jg
cld
jo
hlt
leave
or
pop
add
testb
add
pop
aas
xor
outsl
dec
and
ja
into
or
in
jle
ret
loopne
je
stc
pushf
pop
sub
shll
mov
data16
cmpsb
imul
das
add
js
dec
cwtl
adc
push
adc
mov
push
and
or
int3
aam
ljmp
leave
pop
arpl
loopne
mov
ret
or
sub
outsb
imul
mov
push
call
mov
sub
shr
insb
sbb
pop
in
hlt
add
add
jge
add
cltd
shr
mov
push
cli
test
adc
jae
mov
or
mov
inc
and
lahf
adc
pop
jecxz
inc
mov
mov
inc
imul
inc
ficoml
shr
jb
fbld
add
mov
xchg
mov
mov
pop
inc
jb
pop
add
testb
add
je
cwtl
lret
shrb
outsl
adc
cld
pop
fisubrl
fcmovnb
fildll
fdivl
push
and
xor
inc
outsl
icebp
mov
cmpsl
lea
iret
mov
sbb
lret
mov
into
xchg
hlt
xorb
popa
repnz
in
cld
jecxz
sahf
or
xchg
aad
sbb
loopne
movsb
sbb
cmp
inc
mov
push
fwait
ds
pop
andb
adc
inc
mov
inc
push
jecxz
cmpsb
arpl
ljmp
andl
sbb
pop
cltd
and
int
adc
pop
pop
out
sub
das
cld
add
jns
xlat
pop
lock
add
hlt
iret
fwait
dec
add
inc
mov
neg
dec
outsb
out
int
in
mov
imul
insb
test
int
or
leave
push
dec
add
or
mov
rcrb
repnz
pop
add
testb
add
cmp
sub
mov
add
xlat
andb
pushf
shll
in
jg
hlt
mov
xor
pop
test
sti
adc
mov
mov
adc
fwait
push
lret
push
stos
insb
xor
mov
je
pop
cmp
inc
dec
call
cmp
aad
add
mov
sub
pop
scas
adc
shl
dec
fs
ror
mov
sbb
sbb
daa
inc
xchg
mov
stc
add
mov
rorl
pop
fnstenv
ljmp
dec
sub
cld
inc
stc
pop
popa
les
in
adc
xchg
jo
in
leave
jnp
imul
icebp
sarb
and
pop
loope
ror
ds
lret
scas
arpl
in
push
daa
cld
mov
mov
pop
out
stos
scas
adc
dec
xchg
addl
int3
add
add
sub
cmp
dec
cmovnp
sbb
mov
add
add
das
mov
and
sub
js
pop
sub
sbb
jl
movsl
and
imul
mov
xchg
cmp
adc
fmull
or
out
daa
sbb
push
push
inc
js
push
sti
jge
out
bound
das
mov
outsb
add
jne
xor
xor
movl
dec
sub
xchg
test
mov
fwait
push
jp
mov
inc
bound
inc
xor
aaa
sahf
dec
icebp
insb
xor
xchg
sbb
mov
or
es
xchg
sub
lahf
fcmovne
and
lock
inc
xchg
fdivp
aaa
add
mov
scas
call
ret
sbb
pop
jb
dec
or
pop
pop
xchg
gs
adc
sbb
rorl
mov
add
popa
and
pop
jl
add
or
push
shll
out
xchg
inc
push
xor
pop
add
testb
add
imul
stc
xor
add
adc
stos
dec
cmp
pop
das
jno
sub
mov
add
data16
sub
xchg
mov
xchg
jbe
movsb
or
pop
xchg
and
sahf
pop
lods
movsl
sbb
sti
mov
or
sahf
mov
xor
push
mov
out
addl
sbb
jne
scas
mov
ret
push
jg
push
sbb
movsl
aad
loop
flds
mov
adc
inc
pop
rcl
lret
mov
sub
scas
lods
and
sub
inc
cmp
nop
mov
cmp
fiaddl
clc
popa
inc
mov
xor
ret
jne
mov
call
dec
jle
push
jns
mov
xchg
filds
cmp
xchg
mov
jmp
dec
push
insl
mov
mov
add
out
lcall
inc
and
out
mov
pusha
add
testb
add
dec
dec
or
inc
xor
dec
mov
mov
jge
leave
popl
jnp
and
outsl
mov
decb
cmp
stos
js
enter
push
mov
sbb
adc
dec
sbb
or
inc
lahf
mov
or
mov
loope
dec
pop
sbb
mov
xor
sbb
test
mov
in
aaa
daa
push
aas
stos
scas
push
sub
movsb
out
inc
nop
rcrb
sbbb
mov
cmpsl
popl
cmp
inc
adc
insb
js
cld
jno
lcall
pop
jnp
sub
add
addr16
in
fisttps
aam
imull
andl
inc
cmp
cmp
mov
inc
adcb
in
out
push
dec
out
or
cwtl
icebp
imul
cmp
inc
movsl
add
bound
imul
xchg
mov
popa
add
testb
add
mov
jnp
sub
imul
rclb
shll
adc
idiv
lcall
and
and
xor
sub
dec
xchg
ljmp
inc
add
xchg
dec
push
dec
fistpll
sub
sbb
sbb
add
adc
in
or
mov
cmpb
pop
sti
je
in
and
xchg
add
or
mov
ds
inc
inc
imul
push
xor
jae
jmp
mov
ret
and
das
test
inc
rorl
rcrb
fidivrs
mov
stos
jbe
fcoms
pop
jae
test
mov
lock
xchg
dec
sarl
cld
fnstcw
pop
jb
out
add
push
pop
push
fsubs
lock
shlb
jmp
ror
mov
add
jae
fwait
cmp
dec
data16
stos
xor
testb
add
ljmp
sbb
enter
xchg
cmp
out
sub
cmp
xchg
repz
add
int3
ret
retw
into
ficompl
xor
ss
test
loope
sub
lea
xor
inc
cwtl
sbb
or
outsw
lret
fdivrs
loop
pop
addb
test
mov
in
js
jae
cltd
lea
dec
scas
mov
jl
xchg
cmp
scas
insl
cltd
adc
clc
push
jecxz
jns
lds
push
testb
fsubrs
aaa
push
hlt
cmp
pop
add
int3
fsubrl
in
daa
push
scas
push
movsb
jg
nop
in
mov
xchg
testl
sub
jmp
push
xor
into
mov
inc
push
jnp
cmc
imul
add
add
clc
mov
or
pop
xchg
cmpsb
outsb
arpl
add
add
add
mov
daa
lea
xor
test
mov
insl
lods
pop
adc
xchg
xchg
in
push
arpl
enter
pop
cmp
jg
popf
sub
in
jge
mov
adc
sub
xchg
scas
inc
shrl
xor
xchg
or
and
lret
stos
sub
adc
fcoml
in
inc
and
pushf
mov
outsb
ja
xor
jno
push
or
pop
cmp
iret
es
xor
movsb
jp
sti
cli
xchg
add
lret
test
sub
in
pop
push
jb
inc
in
fdivl
cmp
enter
jp
and
or
mov
adc
scas
pop
icebp
out
cmpsb
imul
out
cmp
stc
in
push
es
jb
push
fs
add
inc
pop
xchg
stc
jmp
rorl
jge
sub
and
mov
mov
xor
iret
inc
pop
test
xor
int
jmp
add
scas
xchg
push
adc
out
mov
call
add
testb
add
pop
imul
dec
mov
mov
cli
je
data16
loop
jg
xchg
xor
sub
pop
ret
jl
cli
jne
lds
sbb
mov
sub
in
fwait
in
sub
sub
xor
loopne
ss
jbe
lods
stc
pusha
fldl
ljmp
mov
shr
or
sbbb
adc
out
or
mov
sub
ja
lret
loope
mov
and
sub
pop
jne
mov
pop
fldcw
lret
jg
cmp
pushf
inc
push
call
xor
insl
fmull
cwtl
or
movsb
dec
ss
mov
cltd
push
sub
xchg
bound
nop
or
xor
mov
add
incb
mov
aam
jns
gs
cwtl
les
add
mov
int3
rorb
es
negb
add
testb
add
stc
adc
cmp
orb
scas
inc
notl
jg
push
sbb
enter
mov
sub
and
pusha
rolb
jle
gs
aaa
test
jge
stos
mov
negl
das
wrssd
scas
dec
dec
pop
fldcw
xchg
aad
test
mov
jmp
test
ljmp
dec
jbe
jno
sarb
adc
cmp
push
fsubs
xor
xchg
push
sbbw
cmp
dec
mov
cmpsl
fwait
jl
lods
je
xor
ss
mov
loopne
inc
int
add
sbb
loope
mov
fldcw
xrelease
mov
mov
xchg
push
mov
mov
mov
xchg
stos
icebp
sbb
jno
xlat
push
in
aam
scas
add
fmull
push
icebp
inc
fistl
cs
pusha
cmp
add
add
mov
cmp
add
testb
add
jnp
fs
iret
push
and
stc
aam
push
test
add
test
adc
shr
mov
imul
out
sub
sahf
fwait
call
sahf
pop
xor
dec
aad
xchg
ret
xchg
inc
xor
fwait
sbb
negb
test
repz
xor
or
push
mov
push
in
jns
int
ror
xchg
mov
cmp
inc
movsl
xchg
fsubr
fwait
add
xor
mov
add
insb
cmp
cmp
cmc
pop
loopne
xchg
inc
push
pop
frstor
mov
and
out
pop
ja
push
xchg
aad
sahf
and
xchg
adc
lds
sbb
xchg
or
rolb
ja
jmp
iret
dec
push
sub
loope
test
lods
jb
jbe
inc
jo
in
sti
orl
and
add
fsubl
mov
lods
push
adc
add
testb
add
pushf
dec
fbstp
in
mov
xor
jno
push
js
cmpb
daa
sbb
push
addr16
fildl
aam
insl
stc
adc
loop
enter
fisubrs
mov
ja
mov
insl
setp
ljmp
data16
fimuls
cmp
inc
adc
call
out
dec
das
mov
arpl
imulb
inc
fwait
dec
and
pop
data16
push
add
nop
mov
cmpsl
ret
insb
dec
cltd
mov
or
ljmp
imul
push
jbe
repz
popf
fiaddl
push
push
ss
sbb
sbb
push
pop
rclb
mov
mov
inc
shl
aad
out
mov
or
leave
mov
dec
aad
add
fbstp
scas
adc
lahf
mov
and
cmp
add
testb
add
stc
ljmp
pushf
push
jno
adc
add
jno
stos
pop
sub
xchg
icebp
faddl
and
sub
stos
incl
inc
decb
cld
popa
mov
stos
aaa
mov
push
jo
pusha
mov
loope
in
fisubrl
add
repz
lret
xchg
inc
pop
outsl
jl
insl
es
setge
aaa
jmp
or
dec
jmp
xchg
nop
les
mov
or
cmp
mov
jb
xlat
nop
push
lods
ret
aad
sbb
inc
mov
cltd
lods
xchg
dec
dec
sbb
sbb
dec
pop
mov
mov
addr16
dec
mov
imul
inc
jp
xchg
das
sub
sbb
daa
imul
push
leave
lds
jecxz
pop
mov
inc
loopne
ds
add
mov
scas
sub
scas
jecxz
xor
add
add
add
faddl
jg
mov
mov
aas
cmc
inc
cld
fcoml
pop
fcmovu
dec
and
mov
fidivrl
call
outsb
or
pop
add
cmp
inc
mov
xchg
mov
mov
adc
push
sbb
loope
sub
arpl
ds
fcmovb
mov
xlat
lods
movsb
inc
je
fistps
push
lea
or
mov
cltd
mov
lcall
jmp
mov
push
mov
pop
cmpsb
sbb
jnp
sbb
cmp
out
and
test
movsl
add
pushf
sub
jb
arpl
movsb
in
mov
sti
mulb
mov
jbe
cs
cmpsb
fadd
hlt
scas
dec
push
mov
xchg
push
mov
dec
loope
pop
inc
mov
or
pop
or
les
push
jecxz
test
mov
jge
add
incl
jecxz
outsl
add
out
into
push
cmp
sub
ret
jb
sub
add
add
add
sbb
push
call
inc
or
sti
jmp
es
sub
jbe
cld
push
xor
jne
out
andb
mov
mov
jno
cmpsb
daa
add
aad
pop
dec
lock
inc
inc
jo
mov
push
fwait
addr16
sbb
push
roll
add
insl
fstps
mov
jnp
sbb
arpl
mov
fisubs
jne
aad
xchg
ret
sub
xor
inc
xchg
jl
xor
lret
enter
hlt
dec
popf
inc
or
jp
lahf
gs
mov
fistpll
pop
js
sbb
dec
mov
add
dec
das
xchg
scas
enter
mov
popf
inc
cmp
jns
push
push
repnz
inc
or
pop
pop
addb
jno
std
mov
cmpsb
pop
bound
gs
inc
sahf
addb
pop
add
and
mov
fisttps
jo
sbb
insl
push
imul
testb
add
dec
fildll
inc
inc
rcl
sub
and
insb
pop
lret
inc
adc
es
xor
add
pop
in
cs
daa
pop
test
mov
mov
xchg
imul
jl
imul
lahf
lea
jno
mov
add
jecxz
sahf
cmp
mov
out
repnz
and
or
jb
mov
push
sbb
lret
call
gs
loop
adc
cwtl
cs
dec
xor
sub
pop
in
popa
push
jno
loop
dec
rclb
iret
lcall
dec
arpl
cmc
ret
mov
mov
aam
xor
xor
js
ja
iret
test
sbb
dec
pop
les
arpl
leave
into
pushf
jno
dec
in
jno
push
sub
fstl
dec
pop
cltd
sub
out
sub
cmpsb
aaa
dec
add
lahf
pop
fcmovb
fcmovnb
lahf
pop
bnd
mov
adc
add
testb
add
popf
stos
dec
push
pop
mov
push
xchg
sarl
push
xor
int
inc
jp
out
push
lea
xchg
fnsave
mov
xchg
gs
mov
or
outsl
fidivrs
lcall
lret
mov
or
sarl
out
andb
inc
push
enter
dec
imul
pop
popa
cs
test
out
mov
clc
jg
icebp
cmc
xor
add
pop
pop
fucom
inc
fsqrt
out
pop
mov
sub
popa
xlat
xor
push
je
das
lahf
inc
test
ficompl
sti
lcall
push
cmp
mov
jmp
popf
sub
pop
and
pop
pop
adcl
or
cltd
xchg
mov
ds
add
sarl
xor
mov
nop
cmpsl
mov
xchg
setns
xchg
xchg
rcr
nop
or
inc
cmpl
add
sahf
pop
testl
jno
mov
insl
add
testb
add
mov
icebp
int
xchg
lcall
jbe
iret
icebp
ja
mov
cld
adc
mov
cmpsl
scas
lcall
into
sar
jl
add
dec
movsl
addb
and
mov
movsb
push
scas
sub
xchg
sub
sahf
dec
aam
jae
paddd
pop
lar
jge
mov
pop
xor
inc
shl
xchg
pusha
into
scas
sbb
jb
jne
sbb
call
sbb
xchg
mov
or
push
mov
push
adc
stos
adc
add
rol
dec
jmp
mov
or
mov
es
inc
iret
xor
fistpl
push
fcompl
cmc
mov
ljmp
mov
out
sbb
add
adc
or
push
stc
lods
sub
add
test
pop
enter
stc
or
insl
push
repz
call
sbb
add
inc
pop
mov
movsb
inc
gs
mov
dec
int
outsb
add
testb
add
dec
pop
jp
std
mov
repz
in
test
lea
dec
adc
notb
mov
sub
xchg
add
mov
popaw
fcoml
pop
inc
movsl
sbb
xchg
mov
arpl
lods
mov
pop
mov
xchg
and
gs
pushf
lret
stc
lea
pop
gs
scas
insl
adc
inc
jmp
lock
test
and
xchg
sarl
loope,pt
and
negb
lock
mov
gs
add
xor
inc
shll
inc
dec
inc
call
cbtw
xchg
out
and
inc
mov
je
sbb
push
inc
sbb
pop
ss
dec
pop
add
pop
ficompl
loopne
mov
insb
loope
adc
pop
mov
in
fcompl
roll
and
add
repnz
movsb
jle
mov
xor
testb
add
inc
pop
cli
enter
add
daa
mov
sti
es
xchg
jb
test
je
push
rcrb
fldcw
shll
fs
mov
pop
jno
gs
mov
jle
stos
cmovno
pop
clc
ljmp
loopne
cltd
mov
mov
lods
or
lss
xor
mov
loope
pop
fdivr
add
cmp
xchg
xchg
insl
ja
push
jae
or
out
mov
push
mov
mov
dec
cmp
test
mov
out
mov
out
mov
outsb
scas
push
std
adc
xor
int3
push
or
insb
movsl
sub
int3
xchg
mov
inc
xor
push
fadd
addr16
sbbb
pop
pop
es
es
in
mov
jle
mov
ds
pop
mov
push
sub
add
stos
sub
stos
out
jmp
sub
mov
xor
outsl
add
testb
add
and
xchg
mov
jmp
mov
pop
cmpsl
dec
mov
adc
stos
pop
lret
mov
scas
push
in
add
iret
cmp
xor
ffree
in
aaa
push
fcompl
inc
mov
xchg
loop
nop
or
out
insl
enter
dec
in
pop
aad
inc
insb
sub
aad
popf
lret
cli
daa
or
sub
inc
inc
neg
mov
cmc
gs
cmp
ja
add
out
sbb
pop
or
lahf
aas
adc
jle
add
pop
rolb
and
outsb
sbb
incl
hlt
push
adc
push
xchg
int3
imul
jae
adc
arpl
mov
cltd
dec
loopne
jp
fsubrs
sub
sub
ret
jmp
push
mov
inc
std
sbb
mov
mov
addr16
and
mov
add
add
mov
fnstenv
cwtl
and
add
add
add
in
in
gs
shrb
dec
push
xchg
add
cmp
mov
inc
add
dec
push
iret
cli
dec
sbb
jae
aas
test
ja
bound
mov
adc
mov
mov
or
jbe
fsubp
fstps
push
in
test
adc
insl
pop
cmp
adc
xor
sbb
mov
adc
cmp
ficomps
mov
push
mov
and
cmp
aaa
imul
inc
xor
push
mov
leave
sub
cmp
mov
cmp
lahf
stos
sbb
push
mov
lahf
add
push
dec
dec
jae
push
cmp
pusha
and
aaa
sbb
lcall
in
xor
rclb
inc
pop
in
mov
mov
shrl
mov
jno
scas
repz
xlat
add
cld
je
jbe
jmp
lea
xchg
aam
push
lret
add
testb
add
inc
movsl
enter
xchg
outsb
sbb
sub
rcrl
outsl
mov
dec
mov
jl
sub
mov
jae
lds
lahf
das
into
iret
push
in
fnstsw
jb
cmpsb
cmp
fmuls
outsl
push
repz
fnstsw
mov
std
outsb
xor
sbb
pop
xor
hlt
shlb
inc
jo
add
mov
lret
fbstp
test
lods
mov
mov
gs
mov
jbe
movsl
shrl
add
and
dec
mov
sub
dec
aad
inc
sbb
lds
or
shlb
adc
lods
mov
aad
aad
pop
fnsave
add
jbe
push
pop
or
sbb
pop
cmp
insl
cmpxchg
pop
test
adc
xor
mov
dec
add
push
cltd
jmp
fcmovnbe
cld
xor
daa
ds
add
add
add
notb
push
inc
testb
pop
mov
jo
mov
dec
push
adc
lahf
cmpsl
xlat
leave
xor
ds
cmp
aaa
pop
addr16
pop
xchg
repz
and
mov
dec
cmp
in
pop
cmpl
mov
ss
adc
adc
fs
arpl
mov
ds
adcb
and
jb
neg
adc
shrl
test
xchg
aam
dec
cmpsl
xchg
out
xchg
adc
fistps
push
test
push
xchg
rcr
js
adc
test
bound
jle
or
adc
or
popf
push
lods
lahf
repnz
jne
dec
cli
and
cmp
inc
mov
mov
pop
test
clc
lods
cmp
lods
or
ss
xor
inc
negb
xorl
cmp
cmpsb
mov
add
mov
mov
push
jg
pop
jne
inc
movsb
aaa
sbb
jae
add
add
add
outsb
dec
test
cmp
sti
sub
pop
jl
jmp
lds
mov
mov
mov
test
mov
ret
negl
lock
push
xchg
test
in
jecxz
mov
ret
loopne
lret
push
ss
out
lock
cli
jle
mov
push
push
gs
and
test
pop
adc
ja
movsl
xor
sub
fnsave
jno
pusha
test
jb
jp
xor
outsl
jns
sbb
xor
shll
test
fisttpll
in
loope
popa
mov
mov
call
sub
mov
xor
out
mov
std
stos
lock
cli
fsubs
adc
xor
push
jns
jmp
dec
adc
or
cld
mov
jno
mov
add
mov
fucomip
addr16
push
cmp
add
add
sbb
jl
sarl
out
jge
add
push
or
sub
and
lods
mov
mov
mov
sub
xor
aad
out
js
inc
and
inc
mov
dec
roll
call
sbb
mov
mulb
and
xchg
inc
test
enter
push
and
add
lds
andb
mov
and
xchg
addb
fwait
xor
popa
jle
add
push
inc
jo
cmpsb
sarb
cld
sbb
dec
sub
xor
sub
mov
ja
pop
push
rcr
movd
jmp
notl
push
out
aaa
leave
pop
sub
xchg
xor
aam
push
mov
insl
sbb
sub
jae
out
cli
arpl
jl
pop
icebp
shrl
mov
or
fcomps
and
fnstenv
add
add
dec
out
iret
jmp
cmpsb
add
jg
fidivl
add
add
xchg
inc
xchg
and
xor
popa
icebp
xor
jbe
and
push
xchg
and
mov
insb
xor
mov
push
and
jge
sti
fidivrl
jl
popf
das
jge
mov
rcl
cwtl
pop
addr16
andb
rdmsr
nop
sarl
and
popa
pop
dec
jge
pop
int
inc
cmpsb
outsl
jb
xor
je
in
xchg
enter
and
clc
lcall
mov
scas
xor
jns
dec
lods
dec
sbb
sub
inc
mov
sbb
pusha
mov
repz
lret
ljmp
repnz
mov
int
fwait
test
loope
jg
repnz
adc
push
dec
mov
pop
add
scas
imul
popa
lods
insb
jns
test
ret
jmp
mov
int3
call
adc
cwtl
cs
sarb
and
lds
add
std
cmpsb
pop
lods
jne
xchg
sbb
add
testb
add
ljmp
addr16
lock
dec
out
cmpsb
and
divl
jno
pop
shl
ret
imul
repz
pusha
push
mov
xor
jle
push
fdivr
out
mov
pop
push
ljmp
cltd
mov
iret
mov
mov
sub
mov
fdivrs
movsb
cmp
outsl
mov
out
in
push
xchg
lods
fiaddl
xor
dec
in
clc
sbb
jp
pusha
test
mov
lcall
loop
cmc
xor
mov
cwtl
mov
xchg
jbe
xor
push
inc
mov
ror
or
jecxz
repnz
fwait
push
push
or
pop
aam
inc
dec
or
popf
fldcw
loop
pusha
push
xlat
mov
mov
add
xor
loopne
das
mov
add
xor
xor
fstl
call
in
lods
imul
neg
std
stc
idivl
das
pushf
ja
add
add
add
jne
mov
mov
lods
xor
adcb
push
movsl
push
pusha
push
mov
loope
insl
xor
pop
call
out
cmpsb
xchg
xor
dec
out
push
xor
push
out
mov
mov
sbb
sar
mov
dec
push
cmpsb
xor
je
jle
push
sbb
dec
xor
insl
out
divl
xor
pop
jge
fbstp
aam
loop
push
fistpl
rol
fdivrs
leave
and
int
dec
aad
add
in
push
aas
mov
cmp
loope
ljmp
cltd
sub
popf
lcall
xchg
pushf
mov
arpl
lret
out
fcmovnbe
flds
test
jecxz
fldl
xor
ljmp
dec
mov
dec
add
fidivrs
inc
cs
lea
ja
lret
mov
icebp
repnz
and
mov
je
pop
sbb
mov
push
subb
in
push
mov
sub
popa
dec
xchg
js
add
add
add
xchg
je
jne
mov
mov
dec
scas
jp
fwait
sub
push
iret
push
xchg
pop
icebp
cmp
mov
dec
loopne
inc
push
and
mov
or
cmp
out
push
arpl
in
xchg
jae
adc
sbb
fistpl
push
push
scas
sti
fisttpl
adc
cli
lahf
xchg
hlt
sbb
das
add
movsl
cmpsb
daa
sub
xchg
mov
adc
addr16
push
adc
mov
fildl
in
cltd
clc
cwtl
xor
adc
ret
push
adcb
imul
daa
adc
dec
int
sahf
lock
sbb
das
in
mov
or
lcall
repnz
loop
pop
testl
icebp
aad
jo
js
xchg
add
mov
pop
pop
cmp
mov
adc
daa
test
aad
out
push
fwait
or
add
add
ja
out
dec
jg
aad
scas
jl
mov
add
add
add
sti
xchg
jge
out
pop
sub
and
in
add
xchg
mov
xchg
cs
and
aas
insb
xchg
cmpsb
jo
or
xor
adc
add
out
push
fwait
into
movsb
in
je
ret
fcomps
jne
cmp
imul
sarl
jne
jle
xorl
addr16
inc
daa
dec
aam
sahf
or
adc
cli
push
fucomip
jle
add
shr
or
scas
adc
cmp
fldcw
cmc
fwait
mov
mov
push
mov
and
fiadds
jo
sar
mov
and
mov
arpl
movsb
pop
inc
sbb
out
in
cmpl
jecxz
call
lret
pop
ficomps
fwait
call
cltd
stos
xlat
scas
les
es
mov
push
ss
cmp
daa
sub
ja
mov
paddq
stos
jle
add
testb
add
adc
add
xchg
pop
pop
mov
mov
rcll
sbb
out
dec
pop
mov
aaa
cmc
je
aad
inc
ljmp
jns
jnp
cwtl
push
adc
add
adc
pop
inc
xchg
push
test
inc
addb
lcall
mov
pop
fdiv
mov
sub
mov
fstpt
sub
dec
in
ds
dec
cmp
or
jle
xor
rolb
mov
sub
inc
push
xchg
xor
sbb
fs
outsl
xor
aam
fmull
lret
mull
arpl
jl
pop
clc
and
lret
out
aas
fldl
dec
sub
dec
mov
shrb
mov
out
push
dec
mov
xchg
cli
mov
pop
mov
fsubl
add
or
push
mov
in
adc
add
cmp
jnp
jge
xchg
mov
jecxz
je
add
testb
add
pusha
mov
mov
das
lret
je
shlb
push
inc
js
add
or
pop
stc
ljmp
pop
stc
cs
jge
add
pop
icebp
into
jb
jns
nop
ja
pop
cmp
fdivp
gs
lret
dec
imul
jnp
idivl
lret
lcall
xchg
pusha
dec
mov
cltd
in
inc
movsl
orps
sub
ret
aas
or
sbb
mov
loopne
pop
mov
sub
lods
sub
mov
xchg
pmulhuw
jecxz
sub
nop
out
inc
mov
push
jp
add
stc
push
xchg
in
and
mov
pop
lret
icebp
aam
fsubr
cmp
rol
pop
add
int3
fwait
push
cmpsb
aad
dec
or
or
popf
mull
push
dec
in
inc
add
xchg
jl
pop
fmuls
scas
or
cmp
add
push
movsl
sarb
jecxz
sub
add
cli
xchg
jle
mov
mov
jl
add
add
add
out
dec
push
cmpsb
jb
or
leave
adc
aaa
mov
dec
fimull
dec
fdivrs
std
adc
jmp
sub
pop
or
leave
je
xchg
pushf
sub
sahf
jae
nop
fdivl
in
in
fsts
cltd
adc
neg
inc
movsb
and
js
bound
jge
or
test
and
mov
add
int3
jae
and
and
mov
inc
xchg
test
cwtl
sub
or
mov
pop
lods
fisubrs
fwait
cmpl
jle
je
icebp
mov
dec
test
jne
jbe
sahf
push
mov
pushl
ljmp
pop
dec
mov
pop
je
jae
negb
mov
shll
jae
imul
or
pavgusb
dec
sbb
lcall
arpl
and
cmc
cmpsl
jns
std
add
push
add
inc
aaa
dec
fwait
jnp
aad
gs
into
add
xchg
dec
pusha
jge
add
add
add
outsb
mov
pushf
dec
push
cmpsl
xchg
enter
fwait
test
xchg
out
mov
aam
repnz
stc
add
push
push
push
mov
das
xchg
leave
or
outsb
nop
out
ret
mov
push
pushf
or
out
lret
push
mov
jp
xchg
sub
imul
repnz
push
pop
movb
lahf
data16
ffreep
push
stos
fcompl
sarb
aad
call
xchg
and
xlat
add
pop
gs
imul
test
jmp
fs
roll
mov
cmp
cmpl
inc
fnstsw
scas
andl
sbb
dec
xor
data16
push
movsb
mov
mov
nop
cwtl
ficoml
scas
dec
and
mulb
lods
into
add
out
loope
jne
jl
mov
bnd
lret
das
jl
push
inc
add
mov
std
mov
enter
out
jle
add
add
add
lock
push
cmp
and
scas
or
push
les
addr16
repz
scas
cmp
push
cmpsb
xchg
or
inc
push
mov
jg
imul
lds
data16
jo
js
sub
cmp
jecxz
mov
test
pop
mov
std
dec
xor
insl
xor
sub
jnp
stos
mov
cld
xchg
and
mov
ret
js
sub
sbb
or
js
outsl
enter
lret
stos
add
add
jl
add
fsubrl
xorl
pop
rcl
lahf
push
xchg
xchg
shll
pop
jns
mov
xchg
in
mov
cmp
sbb
cmp
push
loop
dec
mov
or
ror
lds
pop
cwtl
mov
enter
rcr
rolb
add
fstl
out
icebp
xchg
in
jnp
jg
add
add
add
lock
push
push
sub
cmp
push
sti
mov
cmp
push
pop
into
adc
repz
mov
mov
scas
popa
scas
fstl
stos
pushf
xchg
mov
jmp
mov
pop
xor
mov
mov
test
mull
insl
lds
lds
sbb
lock
jnp,pn
jecxz
jne
aas
add
int
addr16
cmp
or
je
loope
lock
sahf
sarb
loope
mov
xlat
mov
stos
or
jb
cmp
push
popf
add
push
outsb
sub
push
mov
outsb
and
fstpl
test
xor
das
hlt
scas
jle
push
test
lret
mov
mov
xorl
test
add
aaa
adc
add
add
bound
in
pop
test
std
iret
fldl
add
testb
add
xchg
shl
xchg
pop
jecxz
pop
push
cwtl
icebp
insb
dec
mov
ljmp
fldcw
lock
sbb
lock
scas
pop
rolb
add
adc
add
lret
mov
pop
push
mov
icebp
out
adc
scas
or
rolb
out
push
sbb
cmp
add
or
mov
call
pop
cmp
push
cmp
loop
xchg
and
cmp
fstpt
aas
sub
xchg
test
mov
enter
push
or
xacquire
cltd
scas
xchg
cmp
dec
fisubrs
daa
add
xchg
mov
jecxz
fucomp
mov
add
je
in
pusha
mov
xchg
mov
outsl
fwait
loop,pt
outsb
cs
sbb
sbb
push
pop
mov
and
jp
lods
fstps
cltd
flds
add
jns
divl
bound
xor
add
add
add
adc
xor
add
inc
test
arpl
std
jbe
add
test
pop
cmp
pop
mov
loopne
inc
aad
loope
je
jae
jns
cmp
mov
bndstx
adc
push
iret
mov
out
repnz
fnstsw
adc
xor
sbbb
ja
inc
fwait
stos
cli
adc
outsb
push
dec
cli
scas
pop
stc
mov
repnz
cmp
daa
jno
dec
fstp
rclb
dec
cs
xor
imul
cmp
les
inc
push
xor
test
jo
add
fnstsw
in
aas
leave
loop
lcall
push
pop
test
call
mov
mov
sub
mov
or
sub
mov
push
pop
xlat
add
shll
in
add
mov
add
fisubs
mov
push
mov
das
jae
addb
testb
add
pop
iret
cmp
jb
xor
add
pop
aam
ret
sahf
cmp
inc
push
mov
mov
arpl
inc
aad
outsb
xchg
cmp
adc
mov
pop
repnz
test
scas
lahf
stos
mov
ret
cmpb
inc
sub
cmpl
jmp
insl
jge
push
jns
and
fs
push
jno
clc
xor
mov
rcl
loop
out
pop
dec
cli
mov
ss
js
test
loope
push
int
mov
fsubrl
sub
stos
or
mov
aas
mov
adc
or
mov
mov
aas
lods
pop
sub
push
icebp
cmpb
fs
xchg
sub
mov
push
cld
imul
sub
mov
into
fwait
dec
insb
fcomip
xor
and
sbb
mov
pop
mov
aam
repz
aam
ljmp
scas
pushf
faddl
add
mov
outsl
jne
ljmp
sbb
add
testb
add
mov
mov
inc
jns
pop
push
dec
or
or
or
jl
cs
xchg
in
sbb
popf
mov
dec
or
test
imul
xor
call
sbb
sahf
lds
ret
mov
inc
dec
cmpsb
es
cmc
xchg
rolb
mov
shrb
push
aas
mov
mov
push
xchg
pop
pop
inc
sub
pop
jle
mov
cmpsl
mov
cmp
pop
inc
testb
lds
jecxz
pop
add
popf
mov
les
xor
cltd
push
sbb
add
sbb
bound
jle
adc
rcrb
test
outsb
fsubp
bound
xchg
sub
and
jmp
cmp
sbb
fildll
icebp
outsb
sub
out
mov
fs
add
mov
jns
outsl
pop
mov
xchg
jmp
add
orb
jle
insb
xor
mov
das
sbb
add
or
mov
adc
push
push
insb
inc
imull
mov
rcl
fcomip
lea
xchg
iret
xchg
and
cwtl
cmp
nop
mov
movsl
je
pop
sbb
xor
mov
fldl
mov
cmc
repz
sub
scas
adc
mov
adc
dec
or
jb
and
pop
sbb
push
mov
orl
add
xorb
into
out
push
sti
jbe
adc
and
out
jmp
hlt
mov
xchg
push
sbb
jnp
cld
repnz
add
mov
iret
es
sub
or
sub
dec
repnz
scas
rcll
into
add
add
test
add
scas
aad
fmull
ja
jnp
mov
in
cmp
add
jo
ja
std
stos
lods
and
fstl
out
test
testb
add
outsl
dec
mov
fsubr
sarl
and
ds
pop
and
dec
ret
push
dec
shrl
cs
lahf
dec
ljmp
pop
pop
dec
xor
jmp
in
mov
sahf
mov
adcl
jno
cs
cmp
into
repz
pushf
push
push
pop
mov
xchg
int
int3
xor
movsb
imul
es
loop
jl
inc
ljmp
and
mov
je
mov
mov
xchg
sahf
jae
mov
mov
addl
mov
sarb
mov
jge
in
and
pop
pop
push
lock
out
sub
cld
jmp
jno
leave
push
cs
dec
bound
push
jns
pop
jbe
xchg
cmp
cmp
out
sahf
insl
mov
push
jne
inc
imul
mov
test
addr16
xor
add
cmpsb
arpl
je
and
testb
add
shll
pop
and
repz
loop
jae
add
stc
xsaves
clc
sbb
xor
xor
jns
sbb
push
pop
sub
xlat
inc
rcl
int3
jb
pop
push
add
and
fdivrl
cmp
faddl
cmpsl
xorl
cmovno
jae
cmp
lods
cmp
mov
xorl
pop
mov
mov
add
add
or
testb
jl
rcll
mov
sub
cmp
cmp
mov
cwtl
sti
jge
cli
sbb
mov
mov
mov
pop
in
in
icebp
adc
bound
sbbl
xor
pop
in
scas
decb
cmp
iret
mov
inc
rcll
mov
add
cmp
cli
mov
add
xchg
add
add
add
in
push
repnz
xor
jl
xor
xchg
mov
jmp
xor
nop
push
es
add
loope
cmpsl
cmpsb
mov
lahf
cmc
dec
adc
mov
inc
cmpsb
xchg
sbbl
push
xchg
test
rclb
clc
or
fnstsw
insb
pop
insb
pop
insl
push
in
sti
pushf
inc
fadd
mov
insl
cltd
sti
daa
adc
imul
sar
xor
mov
rclb
notl
xchg
in
fsubl
cld
cmp
xchg
pop
rorl
or
js
scas
sub
aas
xchg
cld
adc
dec
in
mov
icebp
sub
xchg
ss
lods
daa
leave
ja
jbe
std
or
add
and
sbbl
cmp
add
std
test
ljmp
cmp
aaa
xacquire
add
add
add
and
xor
mov
sbb
repz
dec
insl
out
or
mov
out
fwait
stc
sbb
andb
pop
insl
subb
enter
cmpl
roll
sbb
lods
cmp
sub
push
out
stos
mov
in
rclb
insb
jns
or
scas
jne
pop
sbb
adc
aas
in
in
leave
dec
lret
or
popa
or
enter
sbb
mov
mov
and
xchg
les
cs
sbb
pop
cmp
add
aaa
or
fisttpl
jmp
lds
dec
repz
add
jo
and
shll
mov
shl
test
sub
mov
lret
sbb
insb
cs
sti
mov
mov
cld
repnz
push
pop
add
mov
popa
add
testb
test
ljmp
add
add
call
inc
dec
loop
or
sbb
mov
insl
push
mov
out
add
test
sbb
pushf
mov
test
sbb
mov
aaa
cmpsl
inc
sti
dec
fcoml
std
addr16
imul
jle
mov
xchg
scas
xchg
push
arpl
sahf
call
mov
inc
mov
cld
iret
iret
adc
mov
inc
sub
mov
mov
sub
test
lea
in
sahf
inc
mull
pop
jge
push
loop
xor
sbb
aad
and
lret
outsb
cmp
les
andl
add
call
inc
pop
lret
cld
lret
pop
and
push
arpl
jae
push
roll
push
adc
in
mov
pushf
int
push
popa
in
add
pop
mov
or
in
insl
xor
add
scas
lcall
xchg
dec
lea
fimuls
add
ljmp
mov
xchg
lret
add
ffreep
insb
cmp
mov
in
in
push
dec
gs
mov
mov
push
int3
pop
outsl
push
sub
inc
xor
sbb
int3
aam
sbb
or
xchg
movsl
stos
mov
addl
push
mov
cmp
movsl
inc
lds
loopne
jae
out
hlt
mov
repnz
push
orb
imul
loop
adc
mov
inc
mov
jg
mov
popf
rcll
and
movsl
sbb
ljmp
popa
mov
sbb
ret
es
nop
push
out
sbbb
pop
pop
sbb
pop
stos
clc
pop
dec
scas
call
shl
sbb
sti
cmp
jle
int3
sbb
lcall
idivl
outsl
push
test
mov
adc
ss
cmpsb
sub
test
cmp
jb
ret
add
jl
cs
idiv
fst
inc
sahf
pop
sar
xor
aam
add
testb
add
jno
mov
mov
mov
fisttpl
sarl
sbb
inc
jnp
push
sub
aad
jle
and
jge
shrb
repz
sar
adc
mov
pop
mov
mov
fmull
pop
push
loopne
in
jbe
push
movsb
or
iret
pushf
loopne
add
sbb
vmwrite
sar
daa
stos
aaa
stc
pushf
fnsave
mov
mov
jl
mov
jnp
dec
add
xor
jmp
push
mov
pushf
jbe
inc
repnz
pop
stos
push
aaa
test
imul
imul
adc
cmp
mov
pop
outsl
rorl
movhps
sub
push
add
push
push
test
subl
xchg
cltd
test
add
call
and
out
xchg
pop
lret
add
add
add
dec
gs
adc
ror
insl
mov
cli
int3
fs
push
rclb
aad
mov
stos
mov
or
or
ss
nop
aaa
and
enter
mov
in
cmpsb
hlt
lea
bound
jp
jge
in
mov
xchg
and
pop
and
pop
cli
xchg
or
js
clc
add
loope
add
imul
test
adc
jl
inc
pop
mov
xchg
dec
mov
dec
sbb
stc
in
adc
fidivl
lret
xchg
sbb
xor
mov
jae
xor
hlt
mov
mov
inc
sub
test
aam
jmp
mov
pop
iret
push
movsb
pop
mov
data16
cltd
fbld
pop
les
jle
inc
xchg
mov
enter
inc
and
dec
movsb
add
mov
jge
std
sti
iret
and
repnz
add
push
push
adc
lcall
xor
mov
add
lods
data16
push
lea
push
sub
mov
jbe
or
jns
push
les
jae
xor
fwait
mov
fwait
gs
cli
fcomps
cmp
sbb
lea
or
sarb
pop
xchg
fimuls
movsl
mov
int3
icebp
add
jae
sub
xchg
addr16
ss
repnz
lea
cld
pop
fldt
push
mov
lods
mov
jmp
sub
sahf
mov
and
cmpsb
xor
mov
jp
ja
es
pop
in
lcall
outsl
inc
out
sbb
mov
adc
add
xchg
imul
inc
loope
ss
aaa
int
pop
jl
cmpsb
jns
xchg
and
lret
sub
add
outsl
xchg
inc
lahf
sti
hlt
out
cmp
loop
sub
lea
add
add
add
movsb
and
pop
lcall
and
mov
cli
push
mov
inc
outsl
xorl
mov
rorb
fsubrp
test
test
xor
xchg
fwait
lahf
repz
mov
jae
add
ret
mov
mov
or
cli
sbb
dec
lods
sahf
xchg
hlt
cmpsl
outsl
jnp
popf
or
repnz
repnz
scas
cltd
jp
cmp
pop
daa
or
sub
out
sub
inc
inc
dec
jecxz
in
and
dec
aaa
gs
fdivs
ficoms
notl
adc
mov
adc
imull
ljmp
stos
mov
imul
rcll
and
cs
add
add
mov
into
xor
mov
add
add
add
xchg
in
add
cli
inc
push
inc
clc
int
dec
mov
stos
mov
pop
or
decb
xor
add
rcrl
mov
mov
and
xchg
cld
adc
cmpsb
cmp
cld
fbstp
push
inc
jle
mov
push
movsl
mov
mov
dec
add
mov
push
ss
or
push
and
int3
cmpsb
fcoms
dec
lea
mov
ret
push
mov
push
sbb
jae
addb
inc
stos
add
pop
sbb
incb
mov
cmp
xchg
stos
mov
loop
lea
flds
imul
dec
mov
subb
orl
das
icebp
loop
or
fisubrl
cld
push
push
xchg
sti
dec
rorl
cwtl
mov
shlb
add
add
pop
test
ljmp
jp
cmp
lret
mov
add
testb
add
in
out
and
fdivr
add
insl
movsb
sbb
sub
push
lret
cwtl
xlat
mov
push
fmull
fs
ljmp
inc
shrb
xchg
ficompl
orl
push
and
fsubs
addr16
inc
loopne
int3
inc
leave
sub
subb
xchg
cmp
adc
add
mov
aad
scas
aaa
and
pop
mov
sbb
xchg
add
sub
cwtl
int3
sub
cltd
cmp
xor
repnz
push
mov
push
and
ss
jg
xor
ljmp
mov
pop
jb
pop
mov
pop
inc
add
jecxz,pt
mov
mov
out
mov
mov
aaa
xor
lods
mov
mov
cld
aam
out
je
inc
iret
and
lea
lds
aas
rorl
xor
inc
jb
xchg
divb
add
imul
push
jnp
sbb
xchg
sub
adc
nop
cwtl
nop
add
testb
add
subl
cmp
je
lret
or
cli
lods
loopne
pusha
xchg
data16
into
mov
sub
xor
sub
loope
das
adc
mov
hlt
das
pushf
data16
dec
insb
sbb
insb
ret
dec
bound
push
or
sub
test
dec
es
enter
xor
scas
in
cmp
mov
cltd
sbb
ret
add
jle
nop
jp
jnp
and
push
test
popl
push
repnz
sbb
pop
arpl
or
ss
das
rorb
mov
js
jg
mov
add
mov
insb
xor
mov
iret
cmp
xchg
in
jne
sbb
dec
cmpsl
pushf
rorb
cmpsb
lea
mov
add
aas
or
mov
pushf
imul
testb
add
cmp
xor
int
add
inc
in
mov
andb
mov
sbb
lds
cmp
rorb
loop
aam
test
ret
call
stos
sbb
cmp
repnz
cli
push
jge
ljmp
adc
test
cltd
lds
cli
popa
pop
mov
addr16
rcrl
das
add
sar
aaa
push
fisttpll
inc
addl
cmp
jbe
mov
xchg
insl
scas
pop
and
insl
xchg
inc
or
or
clc
sti
out
cmp
aam
cli
leave
ss
cs
mov
sbb
aad
add
lds
lock
xlat
stos
int3
movsl
es
mov
mov
or
jbe
jno
dec
cmpsb
add
jmp
or
mov
loopne
pop
mov
add
insb
fidivl
cli
sub
lcall
add
testb
add
data16
cmpsb
or
loope
jle
sbbb
push
fistpll
xchg
ret
adc
mov
aam
dec
ds
mov
jge
stos
lods
aaa
mov
ljmp
or
sbb
movsl
push
mov
shll
xlat
popf
pop
and
pop
in
orb
dec
dec
pop
sub
mov
xor
or
jecxz
in
jnp
mov
xor
dec
mov
int3
cmc
push
mov
test
inc
loop
jl
imul
cltd
mov
mov
jg
ret
push
orb
jo
xor
in
inc
repz
push
cmpl
cmp
jne
mov
mov
jecxz
pop
lods
and
fadd
pop
in
nopl
jno
imul
in
mov
push
cmp
push
cmpsl
insl
mov
shr
shl
incl
add
mov
in
pop
cmp
loop
xchg
add
testb
add
test
add
imul
xor
sub
fucomip
jne
jno
push
and
fwait
cld
cmp
add
repnz
and
aam
ljmp
cmpsb
xor
aas
out
fyl2x
loopne
jbe
scas
xor
aaa
cmp
ja
cli
sub
outsb
adc
ret
push
pushf
sub
std
push
xor
xchg
std
xchg
jp
xchg
or
dec
divl
mov
add
and
shrl
add
mov
cwtl
pop
int
xchg
shrl
test
xor
out
mov
nop
movsb
fyl2xp1
push
cmc
enter
aad
pusha
mov
rcrb
cwtl
sub
pushf
adc
jmp
pop
sahf
pushf
loope
xor
and
sub
ja
xor
fwait
rclb
pop
fidivl
adcb
or
mov
push
aas
push
dec
lods
jp
lcall
add
add
int
fstp
iret
push
lock
jmp
in
jne
jo
add
testb
add
mov
popa
stc
jp
stos
repnz
ficompl
loope
divb
xchg
arpl
xchg
repz
sahf
jle
repz
pop
rolb
push
leave
xor
sbb
xchg
cmpsl
jo
loopne
into
sub
and
mov
jns
rcr
jmp
inc
inc
xor
and
stc
int3
push
pop
push
mov
push
or
nop
insb
push
add
in
push
aas
sbb
outsb
inc
test
adc
test
jne
mov
xor
loope
inc
mov
sbb
mov
es
ror
ficomps
mov
jnp
js
fisttps
notb
int3
mov
and
inc
and
sbb
jp
fs
pop
sbb
leave
repz
lcall
xor
xchg
nop
pushl
inc
mov
dec
xchg
test
insl
lcall
sbb
add
ficoms
lahf
and
scas
std
sub
pop
mov
xchg
add
testb
add
adc
stc
or
ret
loop
fisubrs
leave
xchg
pop
xor
pop
mov
out
or
pop
call
and
dec
xchg
aas
sarl
mov
jno
xor
out
xor
insl
jmp
xchg
jo
inc
or
rclb
cmp
shl
cmp
mov
cltd
clc
fwait
repnz
xor
mov
pop
xchg
int
pop
in
inc
adc
testb
mov
mov
fsts
aas
push
test
sahf
xchg
jo
sub
xorb
dec
icebp
call
std
inc
lds
or
sub
xchg
mov
pop
mov
sbb
outsl
mov
mov
inc
stos
sub
jns
les
jp
pop
inc
sbb
mov
jns
and
mov
xchg
mov
and
and
and
and
rorl
add
mov
push
and
push
pop
xchg
add
testb
add
in
add
sarl
xor
cmp
sar
out
or
jbe
jge
sbb
pop
fcomps
insb
jle
sub
fisubl
or
sub
pop
inc
and
jecxz
cmp
sbb
xchg
hlt
or
mov
cmp
outsb
les
out
push
fimull
push
lods
mov
into
cmp
adc
jns
inc
iret
push
jno
std
mov
loopne
lods
movsb
mov
mov
xor
sub
in
mov
cmp
aam
lea
sbb
testb
cmpsb
and
out
pusha
cmp
cli
ret
xor
clc
ja
loop
lret
inc
lret
or
ds
orl
popa
dec
fdivs
pop
add
and
popf
pop
enter
test
pop
aad
or
jno
dec
xor
les
pop
push
add
inc
or
test
mov
aas
in
xchg
push
xchg
add
testb
add
dec
out
dec
mov
mov
jae
lds
movsb
pop
xor
and
shrb
mov
insl
out
pop
js
ss
loop
leave
push
pop
push
pop
fistl
and
and
std
jecxz
lcall
enter
adc
cld
cltd
test
mov
daa
add
outsb
in
sahf
jge
pop
jbe,pn
clc
pop
out
in
and
sbb
sub
and
cltd
push
lods
push
cmpsl
ret
add
inc
push
pop
es
imul
js
mov
movsb
aas
sysret
adc
cmpb
dec
das
mov
daa
xchg
inc
sbb
cmp
xchg
test
xchg
add
movb
xor
stc
inc
lods
mov
xor
inc
sbb
or
hlt
sbb
popf
in
mov
dec
ficoms
add
iret
add
ljmp
loop
dec
pop
xchg
pushf
ret
cwtl
add
testb
add
sbb
jp
jae
cmp
and
inc
mov
mov
iret
jns
push
xor
or
xchg
movsb
add
mov
subb
fxch
in
inc
push
or
mov
jmp
jecxz
inc
push
out
lret
mov
js
test
xacquire
sbb
pop
lret
xor
aas
das
or
lahf
shll
movsl
mov
jnp
sbb
aaa
repnz
call
sub
lods
xor
js
jl
inc
xchg
loope
jns
das
lretw
dec
out
mov
and
jle
fwait
inc
fldt
cmp
xor
in
push
mov
or
sub
aas
or
testb
adc
mov
test
rcl
add
sub
in
test
mov
cmp
xor
add
aaa
shlb
cmc
div
rcl
inc
pop
xor
jp
cltd
add
testb
add
ret
out
mov
sbb
sbb
and
jecxz
cmp
mov
js
loopne
pushf
sbb
hlt
mov
dec
sub
fdivrs
mov
push
inc
or
cmp
push
xor
sub
out
shll
loope
nop
jns
je
lcall
mov
int3
mov
aas
xlat
cwtl
stos
xchg
fwait
jne
test
mulb
leave
aaa
dec
out
jle
push
pop
gs
mov
outsl
rolb
mov
dec
cmp
addr16
push
stc
pop
push
adc
mov
adc
filds
mov
mov
lahf
std
cli
lahf
xchg
fadds
mov
repz
xor
and
xorb
outsl
insl
out
dec
push
ljmp
fisubrs
sbb
or
in
test
xchg
mov
cwtl
bound
loope
pushf
int3
mov
fldl
add
push
sahf
rcr
pop
test
iret
xor
add
testb
add
mov
fs
xlat
lods
outsb
sbb
sbb
mov
fistpl
addr16
pop
fcomp
mov
nop
int3
aam
js
fxam
scas
sbb
and
adc
jb
adc
fidivrl
mov
cmp
pop
je
dec
push
lret
pop
incl
push
ret
scas
lret
add
movsl
push
ror
dec
loope
iret
stos
bound
mov
mov
add
aaa
subl
imul
fs
lods
cmc
mov
mov
mov
add
js
inc
cmp
xchg
cs
cmp
mov
in
fildl
push
fimuls
cmpsb
push
push
fisubl
in
lods
mov
ror
aas
mov
popa
mov
pop
push
lahf
jmp
add
push
fsubl
out
in
negl
sub
mov
fiaddl
dec
ss
add
shll
cmpsb
jcxz
jne
push
inc
test
fwait
add
testb
add
sti
mov
adc
pop
adc
mov
dec
jmp
and
sub
jo
pop
jle
xor
fnstsw
sub
test
imul
int3
aam
pop
xor
mov
cmpsb
scas
mov
loopne
xchg
movsb
mov
in
push
push
sbb
scas
imul
jno
daa
mov
int
rep
jl
add
shrl
or
test
jmp
scas
gs
out
aam
pop
xlat
test
loop
sbb
adc
mov
ljmp
dec
pushf
hlt
cltd
out
xor
jb
xchg
xor
ficoms
mov
popf
popf
bound
jo
sti
cmp
je
movsl
scas
sub
adc
mov
and
hlt
xor
out
jnp
mov
jmp
adc
add
clc
jnp
jg
in
cli
cwtl
inc
mov
or
xlat
mov
testb
add
push
fwait
js
and
xor
xchg
outsl
stos
scas
inc
sahf
jne
adc
test
inc
push
loope
enter
lret
movsb
test
je
mov
sarb
lea
sbb
add
pop
shlb
sub
push
inc
mov
leave
insb
test
push
pop
inc
pusha
aam
xchg
hlt
sbb
pop
adcl
stc
dec
popa
lods
push
adc
mov
loope
sub
aam
push
xor
pop
mov
mov
repz
inc
gs
jo
mov
shll
imul
mov
jmp
xchg
jmp
lds
aas
sub
xchg
cmpsb
xchg
xchg
scas
push
push
sar
fiaddl
ds
sub
iret
aad
cmp
push
pop
shll
jns
enter
loopne
test
leave
sub
sbb
in
neg
adc
xchg
xlat
pushf
mov
add
ljmp
cld
inc
push
cltd
das
xchg
xlat
pop
jg
popf
add
testb
add
jno
in
cmc
xchg
hlt
or
add
sbb
lahf
mov
push
dec
inc
testb
fadd
repz
xchg
pop
into
inc
pop
pop
clc
jecxz
fsubrl
xchg
cld
and
mov
imul
mov
out
adc
sub
mov
bound
sahf
hlt
jecxz
cmp
pop
aam
add
testl
es
es
pop
jle
mov
dec
mov
inc
bound
test
push
adc
es
cmpsb
outsb
nop
stos
push
out
pop
imul
lock
add
mov
inc
lahf
cmp
xchg
std
xchg
sbb
jbe
ret
mov
xchg
mov
xchg
xchg
sbb
into
mov
cmp
push
flds
imul
cmc
jp
inc
cli
repnz
add
jl
sar
std
jle
loop
into
es
mov
sahf
add
testb
add
xor
enter
icebp
test
add
insl
mov
jnp
jne
xchg
scas
or
xchg
and
jae
mov
adc
mov
clc
and
pop
jle
or
mov
nop
dec
inc
add
cmp
orl
addr16
lret
mov
mov
or
aam
mov
shlw
and
dec
and
rcr
in
sbbb
push
sub
int
in
cld
mov
pusha
xchg
push
sub
pop
in
fwait
mov
idivl
jp
push
xchg
aam
loope
mov
addr16
xor
les
xchg
mov
cmpl
lds
cmp
fdivp
sub
pusha
ret
arpl
pop
js
adcb
jg
mov
jecxz
add
add
cwtl
or
stos
xchg
cmp
pop
xchg
aaa
addb
add
testb
add
and
or
adc
fbstp
pop
cwtl
adcl
push
cld
fisubrl
push
gs
repz
loop
cmp
insl
xchg
out
push
and
mov
loop
imul
add
dec
adc
test
xchg
hlt
ss
sti
mull
aaa
xor
sub
fisttpll
outsb
push
das
aaa
push
movsl
cmp
mov
sbb
decb
dec
push
jmp
xlat
sbb
sbb
outsl
add
jg
pop
lods
cmp
test
sahf
sbb
movsb
mov
shrl
dec
pop
or
test
mov
mov
xchg
sbb
push
ss
arpl
cmpsl
punpckhdq
gs
mov
dec
aaa
out
adc
repnz
movsl
test
into
cmp
add
outsl
sti
into
aad
aam
cmp
sub
lahf
add
testb
add
sbb
ret
fcomps
lcall
rcr
mov
jo
sarb
or
jns,pn
dec
dec
sub
fiadds
insb
inc
leave
add
cmovno
ljmp
cmp
mov
inc
push
xchg
repz
cli
mov
dec
cmc
test
mov
add
pop
lcall
fimuls
mov
mov
lock
push
mov
fdiv
pop
fwait
pop
and
repz
cmpsb
shll
sub
mov
mov
xor
fisubl
popf
jecxz
into
xchg
rol
mov
push
ljmp
pop
jmp
push
fnstsw
jge
jg
push
xor
inc
clc
mov
std
mov
dec
enter
hlt
or
mov
inc
std
cmp
fists
pushf
int3
outsb
xchg
push
add
push
and
xlat
aas
jle
ds
out
mov
add
std
mov
pop
dec
movsl
cmp
inc
int3
and
jb
fildl
test
inc
cmc
in
cmp
js
sub
sub
stc
dec
push
jg
orb
mov
jno
sbbl
out
and
movsl
or
pop
xchg
gs
xor
mov
das
add
hlt
cmp
or
pusha
pusha
movsl
xchg
stos
or
out
movsb
xchg
cmp
mov
and
ja
stos
mov
popf
cmp
fwait
add
shll
test
je
pop
cmp
aas
inc
jle
sbb
xchg
mov
sub
pop
lods
push
push
mov
imul
addr16
cmp
xchg
push
out
jecxz
push
xor
xchg
xchg
cmpsb
dec
out
sub
or
pop
cmpsl
popf
xor
push
jbe
jae
scas
dec
jne
adc
inc
icebp
jmp
aam
mov
add
add
mov
mov
jmp
ljmp
add
testb
add
mov
insb
push
inc
mov
xchg
lds
pop
pop
divb
insb
jno
aaa
xor
out
xchg
cmp
sbbb
sub
dec
sbb
imulb
jp
pushf
jl
pop
gs
push
adc
popf
cmp
js
jb
push
sub
mov
dec
aad
gs
jb
or
cmc
popa
jmp
arpl
mov
pop
bound
shll
push
sahf
or
mov
push
inc
jae
test
cltd
fstpt
push
jnp
iret
mov
mov
sbb
cmpsb
dec
xchg
pop
lock
mov
and
fdivl
ficoms
dec
jno
int3
cmpsb
add
mov
or
mov
rcll
sbb
adc
into
hlt
sub
ficoml
xor
pushf
push
out
cmp
leavew
daa
or
xor
daa
mov
cmp
add
lret
sbbl
mov
jp
js
mov
add
mov
dec
leave
repz
pushf
sbbl
cmc
jmp
aaa
negb
cmp
fnstenvs
imul
and
jns
fistps
jle
inc
xchg
jmp
cmp
div
mov
or
mov
sbbb
sbb
inc
fistpll
pop
inc
sub
fst
shll
xchg
cli
inc
frstor
aaa
in
jle
jbe
fnstcw
sbb
or
fdivs
dec
jno,pn
aad
mov
cmp
shll
fdivrl
arpl
into
out
leave
inc
or
mov
dec
lret
repz
jns
psubusb
maxps
dec
push
in
inc
mov
rorb
jae
es
enter
scas
and
insl
sbb
and
insb
std
scas
stos
out
insb
push
jmp
jle
enter
add
add
imul
and
or
mov
inc
push
shlb
add
fistl
adcl
or
and
and
pop
aas
out
lods
push
or
mov
push
stc
xchg
dec
mov
jge
repz
jae
inc
mov
or
xorl
sub
loop
shl
jo
cli
mov
inc
jle
lods
jns
xorb
adc
bound
cwtl
in
or
push
cs
clc
mov
adc
nop
mov
lahf
xchg
xchg
xor
bound
testl
ja
pop
andb
pop
or
loopne
mov
inc
jmp
xchg
shlb
xor
cmc
push
rol
iret
out
in
mov
mov
push
mov
lcall
fistpl
push
pop
adc
jg
or
fimuls
and
add
mov
jge
jg
decl
xchg
repnz
gs
movsb
add
testb
add
mov
int3
stos
data16
mov
add
cs
shlb
stos
dec
movsb
imul
jo
sahf
test
cmp
xchg
lds
cmp
lea
mov
inc
lock
pop
gs
lcall
stos
cltd
cmp
xchg
mov
stc
call
scas
mov
cltd
mov
sub
add
sti
sbb
cmp
push
jb
outsl
or
sub
lret
fistl
lods
jae
test
ds
fsubs
or
cmp
iretw
pop
shl
push
mov
das
push
sub
inc
adc
std
test
stc
es
std
lds
mov
in
enter
add
enter
jns
popa
fnstenv
lret
inc
jmp
les
xor
cltd
xlat
cli
test
repz
loopne
add
ja
out
das
mov
aam
nop
rcll
mov
add
add
cmp
push
popa
loop
and
enter
mov
adc
lods
push
push
and
and
add
ja
scas
jmp
js
aad
pop
test
jge
push
sbb
pop
imul
pop
hlt
insl
pop
xchg
mov
insb
pop
es
xor
int3
push
cmpsl
mov
xchg
jl
into
int
faddp
insb
cmp
test
pop
cmpsb
pop
push
daa
and
rcl
mov
jnp
xlat
jne
pop
test
lcall
stos
dec
xchg
pop
dec
cmp
or
adc
int3
cltd
jmp
mov
les
adc
mov
jl
fimull
xchg
and
cmpsb
cli
xchg
popa
shlb
mov
mov
mov
jp
jmp
jl
add
sarb
add
clc
stos
xchg
notb
stos
push
dec
sub
loop
test
mov
and
xchg
mov
add
testb
add
and
mov
and
imul
xchg
sub
and
pusha
mov
sub
sbb
inc
out
hlt
sbb
mov
fdivl
rcll
or
test
jle
add
sub
mov
negb
mov
gs
fidivrs
repnz
jp
dec
lods
decb
sbb
fldenv
les
pop
pop
out
std
inc
xchg
sub
cmp
enter
mull
mov
in
movsl
mov
xor
and
pop
jmp
xor
bound
loopne
nop
mov
stos
dec
push
bound
movb
dec
int
sub
sbb
inc
xchg
push
xchg
push
inc
jnp
dec
sub
push
xchg
and
rorl
jg
xchg
out
cmp
ret
mov
sbb
gs
sub
adc
movsb
ljmp
add
add
mov
repz
repz
enter
cmpsl
add
testb
add
outsl
mov
jno
jnp
lret
pop
and
jecxz
movsl
fdivl
fidivrl
xchg
jecxz
ss
aas
dec
sub
ja
out
ud1
pop
and
pop
mov
out
sbb
ljmp
mov
xchg
shl
out
xchg
dec
ss
adc
inc
push
mov
leave
jo
adc
std
dec
dec
add
adc
inc
mov
inc
inc
dec
xchg
cwtl
add
xor
cwtl
push
push
addr16
and
cmc
add
jle
fiaddl
push
pusha
xchg
mov
mov
inc
shrl
add
xor
in
push
pop
pop
shrb
stc
mov
xor
loop
sbb
cmp
jecxz
cmp
lahf
add
mov
inc
cmp
xchg
push
pop
add
shrl
jnp
xor
jmp
jmp
clc
cwtl
xor
aas
movl
add
mov
mov
cmp
push
sti
mov
test
add
add
add
lods
xor
jo
sbb
add
jmp
push
or
test
lods
cli
rorb
nop
je
mov
shlb
add
addr16
mov
adc
sahf
out
out
pop
loop
mov
int3
inc
mov
mov
fists
shl
xor
push
inc
inc
sti
xor
mov
out
in
jp
pop
adc
icebp
loopne
loop
mov
stos
cwtl
dec
xchg
cmp
arpl
xchg
pop
sbb
popf
and
sbb
fs
lahf
add
or
xchg
xchg
adc
fiadds
arpl
daa
popl
scas
dec
rcrb
mov
sbb
call
xchg
test
ss
xchg
popa
mov
in
cmp
outsl
mov
aad
lea
push
or
or
lret
rcll
dec
cmp
jno
sub
data16
or
sbb
mov
xchg
aad
or
testb
add
mov
loopne
adc
shl
enter
insl
jle
sbb
rorb
or
pop
mov
in
js
idivb
push
insl
mov
push
and
mov
test
pop
jmp
push
and
inc
or
nop
and
jae
adc
mov
mov
pop
aaa
xchg
in
pop
shlb
cltd
jo
push
scas
sbb
jnp
pop
xor
std
dec
leave
dec
inc
jle
push
aam
in
xchg
cltd
popa
pop
aas
repnz
leave
cmp
and
and
cli
push
lret
jmp
and
xchg
push
clc
adc
lret
pop
adc
out
mov
ror
sahf
xlat
inc
jl
jg
repnz
shrl
xchg
nop
adc
jge
dec
push
jne
sbb
add
pop
aad
mov
or
adc
leave
inc
je
pop
cmp
or
push
sti
push
imul
push
loop
loopne
les
add
inc
fdivl
stos
push
add
add
add
ret
cs
push
mov
push
or
decb
imul
test
adc
loop
or
out
or
inc
sbb
adc
decb
xorl
ds
xchg
mov
aas
fnstsw
mov
pop
andl
lds
mov
mov
sub
inc
fisubrs
and
ds
stos
pop
dec
pushf
in
xor
shrb
aas
add
repz
adc
iret
pop
jle
pop
imul
imul
push
mov
cmpsl
nop
push
jl
cltd
adc
icebp
lods
push
adc
sub
inc
mov
mov
leave
hlt
dec
adc
inc
movsb
mov
nop
out
decl
jl
shl
and
and
add
mov
stos
mov
jle
cld
fs
and
mov
add
sbb
mov
pusha
jno
and
subb
add
test
mov
pushf
shl
add
dec
and
cltd
call
int
out
popl
leave
loopne
xor
notb
lock
int
push
out
pop
aad
sub
mov
jae
or
rcrb
jp
loope
js
cmp
and
mov
test
ret
or
mov
cmp
xor
push
scas
bswap
movsl
ja
and
addb
pop
or
adc
loopne
pop
sti
mov
push
outsb
sti
or
je
cmp
and
stos
mov
fcmovnb
pusha
adc
movsb
lods
test
scas
sub
mov
push
mov
inc
je
ja
cmpsb
unpcklps
inc
sti
pop
cmp
xchg
adc
mov
mov
mov
jne
xor
out
in
dec
mov
mov
cwtl
sbb
add
add
stos
hlt
jmp
ljmp
rcll
lods
add
testb
add
add
fiadds
cmp
sbb
dec
addr16
inc
or
sub
cmp
jp
xchg
in
pop
ficoml
mov
cli
adc
ja
dec
data16
or
out
aam
inc
or
and
jns
test
cmp
cmc
add
dec
ret
jnp
cwtl
test
movsl
out
xchg
push
pop
in
dec
out
aad
aaa
fwait
aas
sbb
ds
fisubrl
incl
xchg
in
out
jmp
sbb
push
cmpsb
loop
daa
pop
mov
idivb
sbb
shr
jg
pop
adc
sahf
pop
add
sbb
add
pop
add
jns
sub
shl
add
xor
sbb
sub
or
pushf
mov
js
in
sbb
push
jecxz
xor
mov
loop
lahf
pop
xor
arpl
das
enter
xchg
sub
add
add
out
xlat
out
jg
dec
cmp
cmp
insb
lods
add
testb
add
mov
sbb
sbb
push
jnp
push
sti
cmp
mov
hlt
push
jne
sub
outsl
xchg
loopne
inc
xchg
mov
loope
or
or
jl
je
ds
sbb
aad
pop
aas
and
or
loop
push
cmp
and
xchg
mov
fldenv
mov
mov
pop
jecxz
cmp
sub
cmp
fucomi
mov
jecxz
mov
pusha
push
js
jbe
in
xor
call
jb
enter
outsb
int
cmp
sub
jecxz
jge
test
cmc
je
jb
es
ret
and
jbe
cmp
mov
adc
add
std
pop
sahf
popf
clc
mov
inc
mov
movsl
outsl
jno
insb
inc
sbb
inc
xlat
dec
jns
ret
sbbb
push
bound
dec
rolb
sbb
pop
fbstp
mov
jne
bound
add
jno
clc
mov
push
fbld
push
popf
es
sub
repnz
mov
xchg
or
push
adc
andb
jb
jp
sub
in
xor
lahf
out
lods
xor
add
fcomps
add
push
jmp
dec
and
stos
fstps
jmp
and
call
ret
jbe
pop
sbb
std
and
inc
adc
cmpsb
insb
push
mov
les
ss
jl
and
lahf
ja
xchg
add
add
or
mov
inc
inc
popa
bound
arpl
jbe
fcmovbe
mov
loopne
sub
pop
cli
lock
push
add
fidivs
mov
add
movsb
jne
sub
push
fs
xchg
pop
testl
lcall
std
clc
jns
ljmp
add
testb
add
dec
ret
jl
push
mov
out
inc
hlt
lods
hlt
sbb
xchg
cmp
adc
sub
stc
dec
jb
les
jg
lock
jmp
mov
lods
roll
dec
insl
std
rol
lods
gs
mov
mov
jmp
shlb
adc
ret
icebp
jns
push
inc
inc
fcomps
loope
rcr
pop
pop
xchg
negl
fdivl
mov
ljmp
lret
or
ficoms
xor
mov
aas
mov
ret
inc
push
js
imul
xchg
pop
inc
insb
cltd
arpl
adc
and
push
inc
cmp
inc
loope
popa
orl
mov
mov
push
push
inc
aas
sbb
or
jno
cmpsb
sub
idiv
xchg
or
lea
xlat
lcall
hlt
sbb
add
lret
jnp
sti
jmp
xchg
sub
in
dec
mov
add
add
add
cmp
in
adc
orb
out
xchg
in
fstpt
pop
inc
cmc
sbb
xor
mov
shlb
push
mov
mov
jbe
jo
adc
mov
add
push
test
sbb
xlat
icebp
push
sti
inc
mov
inc
in
xchg
adc
ds
mov
cmc
bnd
jno
pop
and
mov
cld
xchg
mov
mov
and
dec
cwtl
cwtl
dec
bound
push
xorl
leave
insl
cmp
or
imul
mov
mov
or
rorb
adc
aad
pop
push
push
and
sti
pop
and
je
test
test
loopne
lods
icebp
push
dec
in
shrl
jne
fwait
push
xchg
xchg
unpcklps
sbb
add
jecxz
lock
imul
testb
add
sbb
lret
rorb
nop
lahf
xchg
pop
fbld
xchg
xchg
xor
add
mov
sahf
jg
jecxz
or
adc
lds
cmpsl
scas
xchg
imul
rolb
sub
and
idivb
sahf
jl
adc
cmp
cmp
lods
jg
push
cmp
mov
ret
dec
dec
xchg
xlat
xlat
loope
cwtl
inc
mov
add
push
inc
imul
sbb
dec
into
sbb
xchg
push
test
adc
push
cmp
mov
lock
roll
cltd
inc
addl
inc
jo
aam
mull
out
imul
cmpsb
mov
push
or
dec
pop
pusha
cwtl
vprotw
adc
mov
leave
inc
add
pop
and
mov
imul
adc
sbb
add
mov
cld
mov
test
cmp
add
jle
pop
imulb
loope
ds
imul
and
cli
lods
xor
sbb
pushf
dec
sub
fnstsw
inc
and
inc
xchg
sbb
mov
or
jmp
cmc
out
xor
and
stos
mov
inc
repz
and
sub
clc
testb
out
mov
inc
out
pop
hlt
fcmovb
xorb
jae
adc
jbe
lret
xchg
fisubs
push
outsb
push
sbb
mov
rcrl
mov
adc
enter
pop
lds
dec
pop
push
mov
ljmp
imul
in
xchg
scas
cltd
add
pop
dec
cltd
arpl
add
mov
sahf
stc
cmp
ret
and
adc
jnp
mov
gs
cld
xor
addb
js
push
adcb
out
mov
push
sub
cmpsl
cmp
push
iret
mov
loopne
dec
mov
add
mov
dec
das
pop
out
cmc
mov
dec
ss
xor
add
pop
std
popf
xchg
in
mov
sbb
pop
stos
add
fidivrl
loope
ljmp
jns
or
or
dec
pop
div
mov
xor
mov
fdivrs
das
inc
loope
dec
or
addr16
cld
dec
pop
mov
jecxz
cmpsb
inc
data16
stos
pop
mov
push
mov
jecxz
inc
sarb
scas
adc
xchg
lret
daa
jle
test
fsubr
pusha
test
sub
mov
sbb
mov
and
mov
addr16
and
jo
jae
enter
pop
jbe
lcall
outsl
imul
sbb
cmp
and
jne
stc
in
sbb
sarl
int
ss
shlb
cli
les
mov
out
clc
mov
xor
inc
aad
pop
mov
movsl
out
insb
fdiv
vdivps
fdivl
daa
loopne
stos
and
fucomip
std
dec
std
pop
mov
test
add
testb
add
sbbl
insl
sbbb
pop
jbe
mov
adc
xor
sub
cld
mov
push
testb
fs
add
nop
pop
inc
addl
out
mov
bound
pusha
mov
dec
idivb
adcb
xor
ret
in
sub
or
pop
shll
mov
in
adc
daa
test
cltd
jne
cmp
imul
adc
cltd
nop
roll
shrl
jmp
mov
data16
mov
pop
fldl
nop
push
rcrl
mov
dec
sbb
roll
jnp
cwtl
dec
pop
cs
dec
lea
bound
pop
aad
in
nop
push
sub
mov
mov
rcrb
movsb
jno
repnz
jnp
popa
mov
subl
fidivs
loop
ljmp
and
sbb
add
testb
add
dec
cmp
mov
pop
jle
push
push
xchg
loop
lahf
sbb
out
jae
add
and
add
cltd
push
lcall
lock
pusha
mov
push
add
rcll
ret
out
std
push
lock
adc
adc
leave
into
push
movsb
push
in
xchg
ljmp
movsl
aaa
in
push
fstpl
pop
jbe
es
stc
lahf
jb
inc
lock
cld
adc
dec
mov
das
hlt
cltd
mov
pushf
loopne
divl
xor
gs
pop
or
pop
pop
inc
push
imul
cmp
std
cmpsl
loopne
or
stos
adc
outsl
daa
mov
gs
mov
out
in
xchg
mov
fcmovu
pop
mov
lcall
idivb
sbb
lock
mov
pop
cwtl
lcall
jnp
pushf
psrlw
or
adc
lods
loop
add
push
xchg
jg
jmp
std
jge
in
xchg
add
mov
adc
add
xchg
stos
jl
imul
pop
lret
int3
outsb
mov
lods
jle
sbb
lock
shrb
mov
sar
sub
repnz
hlt
pop
jno
dec
mov
mov
inc
adc
mov
mov
aad
inc
or
pop
out
shlb
out
cmp
es
je
dec
or
dec
invd
inc
and
cmp
or
cli
dec
mov
jne
sar
jbe,pn
xor
rcl
test
or
adc
push
sbb
pusha
das
insb
lods
pop
mov
pop
lcall
and
ja
mov
mov
pop
add
loop
andl
aam
and
jbe
inc
pop
mov
minps
mov
xor
lahf
pop
outsb
sub
mov
mov
mov
out
rcrl
cs
lds
and
add
add
xor
std
cmp
bound
mov
add
add
add
mov
inc
ficoms
jg
call
int3
cmc
mov
push
fucomip
mov
xorl
loopne
jnp
jmp
push
es
push
js
dec
rcll
inc
mov
or
sub
shlb
push
inc
pop
arpl
cmc
in
clc
add
mov
xor
js
xchg
cmp
loop
sar
subl
xor
fnstsw
inc
pop
and
sti
adc
stos
andb
in
out
or
test
mov
sbb
sbb
test
adc
jg
mov
mov
adc
jb
test
mov
mov
shl
sub
inc
lahf
push
lss
test
xor
aas
aad
jb
sbb
in
sub
or
pop
les
outsl
and
cmp
addb
push
pop
xor
cmp
ficoml
mov
pop
xchg
mov
add
add
add
dec
cltd
in
ret
sub
xchg
cli
or
je
lret
jge
test
out
dec
int
cmc
popa
pop
xchg
rolb
int3
andb
clc
fisttpll
mov
pop
xor
or
cmpsl
mov
cld
adc
push
dec
mov
nop
pusha
push
jno
dec
push
les
lcall
dec
ret
stos
fwait
leave
sahf
and
out
ljmp
mov
sub
orb
or
rol
adc
mov
lret
mov
pop
pop
leave
and
sti
jmp
je
xor
jno
les
mov
sbb
cltd
xchg
cmp
xchg
mov
hlt
cmp
jl
rorb
and
decb
lret
adc
push
mov
int3
xor
lcall
xchg
jbe
in
push
mov
push
arpl
sarb
call
adc
dec
lods
lret
pop
iret
jecxz
add
es
les
mov
push
push
adc
mov
add
popf
sub
sub
cltd
add
lcall
pop
mov
sbb
ret
mov
lret
stos
add
loopne
test
dec
lods
cmpl
les
sub
ficomps
iret
add
and
mov
mov
mov
cmp
test
mov
sub
dec
movsb
lock
and
sbb
pop
mov
inc
inc
jl
ret
mov
inc
int3
movsl
xor
repz
lcall
jmp
subl
jle,pt
push
mov
mov
jmp
push
cwtl
mov
push
pushf
pop
sti
sbb
or
into
mov
aas
outsb
cli
in
scas
xchg
ds
frstor
dec
adc
jg
test
fs
mov
loope
inc
dec
addl
mov
push
inc
adc
xor
in
add
clc
pop
stc
out
push
insb
xchg
cld
sub
mov
add
rclb
pop
dec
cmpsb
lds
cmc
fildl
clc
xchg
dec
inc
ret
loop
gs
mov
jb
ret
icebp
xchg
xor
inc
shl
bound
stos
push
lret
mov
lea
jno
cmpsb
out
cmp
and
orps
mov
and
ret
orb
dec
mov
aas
iret
stc
ret
mov
inc
lock
pop
xor
repnz
and
or
adc
fistl
outsl
sbb
mov
mov
jge
pop
add
dec
inc
pop
sub
ret
in
xchg
aad
xchg
mov
cmp
ffree
movsb
jmp
sti
jl
push
pop
aad
pushf
xor
repnz
mov
inc
and
les
leave
mov
sbb
jp
sti
into
cmc
orl
rclb
add
lea
gs
mov
xchg
add
lds
cli
lcall
ret
shrb
add
add
lods
sub
nop
sub
jne
sub
movl
cmpl
popa
leave
lsl
ja
iret
jbe
push
stc
pop
fiadds
add
inc
out
xchg
and
lret
dec
mov
pop
dec
mov
inc
fcmovnb
jle
imul
add
and
mov
jo
mov
ss
adc
jno
jno
sub
cmp
lds
sbb
into
pop
int3
push
jecxz
push
repz
sub
bound
leave
fildl
ja
adc
adcl
ret
mov
bound
ret
imul
push
jb
and
pop
pusha
test
sbb
sub
sub
jp
mov
pop
mov
dec
jle
daa
sub
pop
push
jmp
dec
shll
inc
mov
sub
cmp
xorl
insb
scas
xorl
add
testb
add
test
stos
or
mov
rorl
pop
out
jmp
lods
pop
sbb
mov
push
mov
sub
and
fldl
jbe
xchg
cwtl
jae
inc
jmp
sub
test
xchg
jnp
out
xchg
xchg
shll
sbb
imul
and
aam
jo
or
adc
test
dec
add
cmpsb
lret
sub
bound
mov
cmp
imul
fmull
lods
fsub
je
repz
inc
add
adcb
es
dec
sarl
xchg
insb
insb
fimull
shlb
sub
jg
mov
lahf
mov
lret
mov
hlt
push
push
adc
inc
xchg
repz
jecxz
jle
sub
out
pop
nop
or
leave
fnstcw
jle
mov
cmp
add
add
pop
sbbl
fstpl
mov
sub
mov
add
pop
pushf
and
addr16
out
dec
imul
xor
sti
jmp
sbbl
xor
jge
jno
mov
xchg
or
cbtw
fsubs
pop
fldl
mov
adc
fs
or
sub
rcll
mul
nop
movsl
push
lcall
xor
dec
popf
lock
gs
cli
scas
inc
pushf
or
xchg
push
xchg
adc
pop
jl
ret
or
or
out
adc
in
stos
sbb
add
lods
mov
xchg
icebp
test
cmpsl
les
ja
ljmp
and
xor
mov
dec
xchg
inc
xor
xlat
sub
fnstenv
jl
cmpsl
add
test
ds
lods
dec
sbb
mov
mov
sti
sub
mov
mov
sub
ret
cmp
loope
mov
jecxz
out
sub
cwtl
push
ret
add
add
add
pop
push
fs
jns
jno
ss
outsl
mov
in
cmpsb
push
pop
fs
test
pop
rorl
jne
sbb
push
rol
addl
xchg
sub
cmc
icebp
or
sbb
pop
inc
inc
or
movsl
or
xchg
imulb
add
incb
jmp
sbb
cmpsl
jb
fwait
inc
enter
bound
sub
push
lret
fisubl
stos
jecxz
hlt
add
movsl
inc
xlat
jmp
dec
and
fildl
ljmp
sbbl
lds
aas
cli
rclb
leave
mov
je
out
sub
jecxz
add
daa
xchg
adc
and
jle
mov
adc
jb
ficompl
hlt
sub
adc
inc
pusha
ret
add
push
xchg
test
jg
jbe
movsb
rolb
mov
add
add
pop
jp
cld
adcl
cs
shr
outsb
sbb
pop
mov
fnsave
push
pop
arpl
mov
int
call
outsl
inc
movb
mov
je
repz
xchg
xchg
xchg
ret
add
mov
repz
iret
ljmp
stos
imul
push
lret
push
loopne
and
mov
jmp
es
mov
xor
cli
out
sbb
idivl
dec
xchg
imul
dec
fildll
dec
movsl
lahf
adc
add
sbb
dec
push
pop
pop
add
stc
sbb
xchg
mov
jae
and
push
fwait
mov
xor
sub
outsl
cmp
icebp
and
pop
imul
push
icebp
negl
nop
aaa
push
push
xor
mov
or
out
push
add
lock
in
lcall
xor
dec
jge
scas
mov
add
mov
shld
jp
lods
or
mov
pop
icebp
nop
xchg
jo
ja
and
adc
cmp
gs
sub
jl
hlt
loope,pn
in
pop
loopne
sbb
mov
adc
sub
push
jnp
pusha
xor
scas
jb
push
inc
dec
shlb
outsb
daa
mov
dec
lahf
pop
imul
stos
or
or
pop
mov
leave
adc
iret
jmp
inc
xchg
jmp
lcall
and
xchg
jg
shl
adc
sti
loop
mov
dec
in
mov
ljmp
stc
inc
xor
enter
and
setle
stos
dec
or
dec
test
cmp
mov
add
inc
dec
pushf
adc
out
mov
jnp
mov
std
sub
add
dec
or
jg
stos
dec
push
jo
cmpsl
sbb
testb
add
lods
mov
lcall
pop
push
fmull
mov
rcll
fdivl
xchg
lcall
pop
inc
dec
inc
in
sahf
xor
stos
mov
pop
daa
push
out
jge
in
imul
adc
mov
pop
arpl
add
xor
in
lods
or
push
jae
push
repz
leave
sbb
adcl
ss
addr16
ret
daa
cs
int
loopne
gs
inc
push
or
clc
negb
mov
pop
or
push
cmpsl
out
stos
push
pop
pusha
mov
cs
or
mov
xchg
dec
movsl
add
fmuls
or
sub
addl
ljmp
jnp
add
scas
int3
cmp
ret
push
add
sbb
scas
rcl
or
clc
imul
jmp
rorl
add
out
idiv
outsl
mov
lret
inc
cltd
mov
roll
testb
add
fists
insl
test
inc
jno
out
leave
xor
into
xor
add
push
stos
mov
pop
andb
imul
jno
mov
jo
and
imul
rclb
stc
push
inc
sub
in
xor
mov
sub
xchg
and
lcall
and
mov
push
lea
daa
mov
int
pop
add
adc
and
call
data16
mov
xor
adc
sub
mov
fidivrs
mov
mov
repz
push
jp
clc
xchg
cli
add
stc
mov
popa
cld
pop
stc
in
call
xchg
jecxz
idivb
leave
mov
xchg
jno
out
das
leave
inc
gs
mov
dec
adc
push
dec
add
lods
imul
pop
outsb
sbb
sub
add
xor
mov
cltd
out
mov
add
testb
add
jg
pop
pop
int3
sbb
js
add
popf
data16
inc
pop
xlat
mov
adc
inc
daa
xor
xchg
call
sbb
leave
aaa
imul
mov
cs
mov
fstpt
sahf
pop
test
xlat
lock
cli
test
pop
addb
xchg
xor
add
imul
sub
sub
pushf
add
cmp
adc
loop
aas
std
fcmovnbe
cmp
sub
inc
and
mov
je
cmp
lret
xchg
fldl
jge
add
cmc
xchg
dec
xor
sbb
mov
mov
pop
test
in
push
nop
lret
pushf
out
xchg
dec
icebp
insl
out
rcll
les
add
daa
gs
sbb
test
stos
sub
mov
pop
pop
pop
add
and
add
fistpll
call
std
push
add
testb
add
test
mov
dec
jecxz
inc
push
into
lock
frstor
call
cli
mov
adc
addb
cmp
push
leave
lea
jb
jo
lods
dec
int
dec
jae
cmpsl
sbb
and
cli
xor
loopne
jno
out
mov
sbb
outsl
pop
pop
push
sbb
mov
cmpsb
mov
ret
or
jle
cmp
les
int3
and
into
mov
xchg
jnp
ds
cmp
clc
out
daa
fistps
scas
les
mov
inc
sub
neg
or
cli
jmpw
inc
mov
push
mov
rolb
push
jbe
cwtl
jl
scas
or
mov
jmp
push
sbb
xchg
movsl
sbb
jo
int3
enter
jno
outsb
jmp
arpl
inc
xchg
sahf
jno
push
xor
int
push
or
fsubrs
add
add
std
sti
leave
sti
iret
ljmp
jmp
les
add
add
add
nop
ss
insb
inc
or
fsubrs
sahf
add
nop
mov
cmp
cmp
mov
std
xlat
jae
push
jmp
dec
fdivrl
sub
mov
mov
lcall
mov
bound
jnp
pop
fsubs
daa
mov
hlt
push
adc
xchg
sub
inc
arpl
out
sbb
in
and
aas
mov
shll
dec
shrl
sub
inc
push
das
xchg
mov
dec
stos
add
ftst
movl
sbb
sub
lretw
push
popf
inc
mov
jmp
xchg
mov
aas
loope
xor
and
rcl
negl
clc
lahf
or
or
mov
and
jne
dec
lock
xlat
sbb
pop
dec
pop
pop
mov
sub
int
mov
mov
cli
add
mov
mov
es
scas
or
jb
add
testb
add
sub
mov
push
popf
gs
xor
rcl
aaa
pushf
xchg
popf
jle
mov
mov
add
sti
fiadds
jne
mov
shrb
sub
xor
fcos
xchg
xchg
and
dec
lods
mov
cmp
add
pop
ss
enter
xor
cmp
imul
out
dec
and
icebp
test
pop
cld
sub
inc
xor
arpl
jmp
aaa
test
int3
xor
sti
xchg
dec
lcall
pop
ja
cli
xor
test
jae
ret
adc
and
es
pop
push
dec
repnz
push
repz
xor
ss
das
lahf
mov
div
mov
mov
mov
jb
pop
pushl
out
mov
jge
leave
shll
xor
xchg
sub
add
fwait
mov
or
jg
mov
sub
btc
xor
movb
testb
add
clc
pop
push
jg
sub
push
ja
popa
js
cltd
test
movsl
loop
jg
mov
xchg
dec
loopne
test
mov
subl
pop
and
push
or
xchg
xor
idiv
fnstcw
cmc
xchg
xor
sbb
adc
adc
dec
dec
lahf
test
cwtl
mov
xchg
push
outsb
divl
push
sbb
fs
es
js
pop
pop
or
pop
dec
mov
into
adc
aad
and
test
sahf
fnstenv
cmp
test
outsl
and
clc
mov
leave
test
inc
pop
subl
adc
pop
mov
mov
sub
mov
mov
and
dec
mov
bound
jno
sarb
or
push
shrb
ds
xchg
or
fsubrl
add
xor
push
cld
pushl
out
adc
push
mov
imul
add
ret
adc
jno
sbb
push
adc
jg
inc
repz
mov
inc
xchg
stc
push
incb
xchg
setb
adc
dec
add
dec
mov
mov
mov
xlat
popf
adc
rcl
push
sbb
pop
test
js
pusha
aam
fstl
and
cwtl
popf
inc
sbb
insl
xor
cwtl
mov
test
ds
mov
jp
aas
mov
ret
mov
push
fcmovnb
adc
repnz
mov
or
push
rcll
inc
dec
jne
and
fsubrs
data16
jbe
iret
mov
mov
inc
enter
pop
outsl
and
jge
loop
xor
les
das
adc
jns
and
popa
loopne
jnp
xchg
outsl
cmp
popf
cmp
add
xlat
pushf
shrb
jb
ret
mov
add
add
add
insb
bound
or
jp,pn
es
lods
sub
orl
push
push
add
notl
hlt
sbb
fsts
fs
fstpl
push
inc
imull
mov
and
push
mov
dec
add
addr16
and
inc
push
xlat
xchg
pop
mov
arpl
rol
mov
pop
lds
fs
pop
mov
pop
in
jns
cmpsb
cli
inc
xchg
cwtl
xor
inc
adc
test
daa
jl
inc
and
data16
and
jge
jnp
xchg
sbb
lods
roll
in
int3
mov
call
mov
sbb
loop
bnd
pushf
mov
add
pop
jnp
int
lea
add
sub
stos
jle
int3
push
xchg
mov
xchg
and
dec
in
cmc
imul
pop
mov
pop
cmp
add
sub
scas
mov
xchg
push
outsl
mov
leave
add
testb
add
jl
sbb
jmp
popa
cwtl
jns
jge
fdivl
jmp
mov
clc
mov
sub
and
imul
dec
xor
stc
aad
test
inc
cmpsl
sbb
mov
stos
lea
pop
and
aaa
dec
or
and
inc
inc
lret
out
jmp
popa
lahf
jbe
dec
jp
or
loopne
cmp
lods
push
cld
js
xchg
pop
adc
cmp
mov
adc
or
cmc
fs
sbb
sbb
int
pop
pop
stos
fwait
loope
jns
cli
sub
into
and
xlat
filds
push
mov
nop
fsubr
push
inc
fcmove
lret
insb
xor
adc
stc
std
sub
js
movsb
fdivl
xor
lahf
scas
push
cmp
sbb
xchg
mov
cmp
add
jne
jne
jg
out
and
add
inc
lret
testb
add
lahf
das
adc
or
sbb
insb
sbb
insb
dec
inc
stos
sbb
add
mov
inc
jnp
js
cmc
pcmpeqw
imul
mov
lock
xchg
jo
mov
flds
les
jecxz
dec
xchg
cmp
in
insl
and
mov
data16
stos
filds
cli
shl
push
imul
push
repnz
push
inc
orl
dec
repz
inc
mov
sub
sbb
xchg
cmp
outsb
outsl
xchg
icebp
push
dec
xor
sti
cli
rorl
inc
lods
xchg
push
push
test
lock
sbbl
xchg
xchg
xchg
xor
or
scas
mov
and
or
push
subl
or
sub
add
pop
jg
xchg
mov
lock
mov
pop
push
cmp
add
sbb
mov
cmpsb
fstpl
lods
sbb
ss
add
testb
add
mov
fistps
sub
add
pop
scas
cli
cmp
jne
sbb
and
sub
sbb
xchg
testb
in
into
mov
push
in
cmp
movsl
lret
out
dec
in
aad
stc
inc
js
rcll
mov
mov
push
sbb
aam
mov
outsb
stos
sbb
outsb
hlt
cmp
mov
inc
add
xchg
pop
pop
mov
test
dec
in
movsb
in
imul
add
andb
cli
sarl
pop
negl
out
cmpb
xchg
adc
ja
aaa
cmp
cmp
aas
push
and
mov
jecxz
cmpsb
adc
mov
sbb
sub
int
xchg
pushl
iret
data16
fdivr
xchg
mov
or
mov
add
outsb
jle
lods
not
mov
add
int3
add
testb
add
lahf
cltd
jp
icebp
mov
dec
jmp
pop
push
aam
ss
xor
mov
xor
inc
adc
xchg
fxch
add
lods
aad
dec
lods
mov
sbb
and
pop
jo
jmp
push
mov
test
and
push
call
push
mov
insb
push
fildl
repz
int3
call
or
jg
ss
cld
scas
pop
sbb
dec
add
mov
sbb
cmpsb
cwtl
lock
lods
add
dec
aas
cltd
dec
jo
cmpsl
pop
jno
jmp
fs
adc
leave
and
xlat
mov
adc
mov
jecxz
into
out
push
stos
mov
mov
inc
mov
mov
lods
lea
mov
mov
dec
mov
or
push
cmpsb
test
stos
xchg
push
les
in
inc
jbe
cltd
into
jl
add
mov
xor
fbld
int
add
add
add
aas
mov
bound
pushf
std
sub
daa
jle
frstor
subl
stos
jne
sub
xor
pop
cwtl
dec
dec
rorb
mov
jns
mov
addb
scas
add
push
lods
xor
outsb
cli
or
repz
out
jb
movsl
adc
or
js
push
aad
fstpl
pusha
or
test
push
jo
add
ret
scas
pop
xchg
pop
push
add
jb
call
enter
lahf
xchg
cmpsl
add
loop
cli
or
dec
aam
addr16
out
mov
pop
loope
push
in
sub
imul
mov
lds
fld
jae
and
xchg
mov
outsb
jecxz
ss
leave
or
and
daa
data16
or
out
pop
into
xchg
fidivl
sub
lret
cmp
add
add
out
sti
xlat
ss
inc
movsb
jae
or
add
add
or
insb
sbb
xor
jns
adc
cmp
test
daa
or
jo
push
ror
mov
dec
xlat
push
addr16
mov
test
push
jne
xchg
jae
pop
xchg
xor
shl
pop
xchg
repnz
shrb
or
pop
cmp
popl
and
in
data16
jb
cmp
sub
stos
repz
mov
inc
mov
shll
out
inc
add
cmp
sbb
test
xchg
lcall
rolb
hlt
fs
mov
icebp
cwtl
popf
lea
pop
push
lahf
and
mov
pop
bound
sbb
adc
arpl
nop
mov
xchg
jp
inc
fs
stos
ret
out
push
mov
add
ds
sub
cmp
jg
cmp
xor
push
iret
add
testb
add
jbe
push
loope
leave
or
sbb
jne
shrb
mov
pop
jb
repz
mov
arpl
arpl
pusha
jmp
fmuls
nop
adc
mov
adc
or
adc
mov
pop
popa
in
scas
mov
dec
mov
lcall
clc
aam
into
sub
test
int3
inc
out
jne
or
cmp
push
loop
add
mov
cld
int3
push
xchg
negb
ss
addr16
insl
mov
out
adc
nop
cmpsb
push
icebp
and
xlat
clc
add
out
push
ret
rorl
xor
sub
add
mov
xchg
push
gs
push
in
imulb
sub
xlat
dec
push
and
xchg
or
clc
scas
stos
and
cmp
call
decl
jmp
ds
repz
aam
mov
add
testb
add
and
call
fiadds
cmp
dec
add
popf
mov
sub
outsb
cmp
mov
cli
popf
addr16
dec
shll
lds
hlt
jg
dec
or
mov
arpl
ret
lret
cmp
arpl
mov
sbb
mov
inc
mov
cmp
sbb
jae
imul
rclb
push
lds
mov
adc
adc
jns
call
cmp
inc
sahf
es
shll
cmpsl
sbb
mov
lods
fs
ds
notl
ja
fldenv
add
popl
xchg
mov
mov
addr16
mov
push
xchg
pusha
in
jl
mov
jnp
insb
mov
push
or
add
sub
sbb
movsl
sbb
pop
jb
in
mov
push
xchg
add
mov
jne
pop
aaa
nop
cmp
add
testb
add
aad
loope
add
or
push
out
pop
xor
leave
cmp
aad
mov
mov
jae,pn
sahf
loope
dec
jbe
dec
outsb
mov
jb
pop
xchg
add
test
sub
sbb
test
mov
adc
jle
xchg
rorl
cmp
je
fldl2t
or
pushf
out
test
stc
pushf
test
andb
cmpsl
cli
xchg
push
mov
ss
sahf
sbb
push
push
push
loopne
jl
adcb
and
dec
xchg
popw
mov
or
push
pop
test
xchg
loope
lcall
loope
std
xchg
rclb
shl
fldt
and
jo
sbb
push
inc
mov
pop
pop
cmpsl
dec
lods
cmp
mov
cs
inc
push
xchg
adc
rcll
ficoms
mov
lods
call
adc
repnz
stc
enter
in
out
mov
dec
adc
roll
add
add
add
mov
in
cmp
and
and
stos
aaa
dec
out
repnz
jmp
in
jg
aas
fiadds
test
setne
loopne
sub
adcb
lahf
dec
push
and
dec
xor
jns
adc
test
stc
jl
das
or
gs
mov
sub
lcall
sahf
push
mov
pop
aad
sbb
xor
dec
mov
sbb
ret
nopl
mov
and
push
fst
cmp
lds
jecxz
inc
int
fisttps
cmp
inc
pop
js
outsl
or
ss
jge
xor
sbb
mov
test
lcall
addl
test
movsl
inc
fidivrl
sbb
into
in
mov
xchg
pop
test
push
cmpsl
jnp
xor
ja
mov
jb
add
imul
cmc
call
data16
out
add
testb
add
dec
addr16
cmp
loope
jbe
adc
pop
xchg
mov
cmp
inc
out
xchg
or
mov
ret
push
dec
or
push
inc
call
loope
adc
jmp
leave
stos
push
mov
movsb
xor
fistpl
lock
jle
dec
mov
jl
or
or
or
out
dec
push
dec
stc
out
adc
ss
inc
test
sbbl
std
jns
sbb
fnop
in
xchg
aam
sbb
hlt
test
cmpsl
lds
and
imul
sub
push
xlat
cmpsl
dec
xchg
insl
pop
aaa
or
jg
loop
push
cwtl
add
adc
out
jns
mov
xchg
cltd
and
test
xor
cmc
call
shll
mov
shrb
sbb
cltd
add
movsl
mov
iret
xchg
xor
cmp
inc
add
testb
add
sti
popa
inc
mov
push
push
hlt
into
in
xchg
jno
outsl
and
and
jae
ds
rcrb
xchg
adcl
jmp
mov
rorl
cwtl
xchg
lods
test
add
out
cmpsb
xor
push
int
jge
pop
mov
pop
push
and
pop
pusha
pop
inc
fdivrl
out
fbld
mov
and
xor
fstps
lahf
xor
inc
adc
mov
das
stos
mov
adc
hlt
mov
adc
mov
dec
into
xchg
jle
mov
arpl
push
pusha
je
mov
xlat
jno
or
inc
mov
jae
ret
fwait
dec
xor
xchg
addr16
aam
fsts
jb
add
rcr
adc
add
leave
jno
mov
pop
adc
fists
int3
xchg
cmp
xchg
sbb
jg
lods
lahf
mov
push
stos
cwtl
popa
sbb
add
out
into
gs
fsts
shll
rcl
add
testb
add
add
inc
shlb
cld
mov
lea
sub
pop
incb
aad
insb
sbbl
xchg
aaa
and
sti
or
lock
sbb
mov
add
in
ja
mov
int
outsb
imul
out
mov
push
mov
mov
pop
in
adc
inc
test
repz
push
and
xchg
paddb
enter
les
lret
repnz
mov
bound
xchg
sbb
cmp
ljmp
xor
pop
sub
and
inc
outsb
mov
mov
xor
iret
movsl
mov
lods
pop
enter
xor
lods
dec
fucomp
data16
mov
mov
cmp
subl
loope
add
loopne
and
je
out
mov
jecxz
pop
lret
add
testb
add
imul
movl
inc
jl
cmp
push
jbe
pushf
cmp
adc
xor
sub
mov
dec
push
mov
addb
lods
sbb
fcmove
xchg
jae
jno
dec
dec
pop
lods
insl
dec
and
mov
shr
pop
outsb
inc
sub
xchg
in
enter
fsub
mov
mov
add
out
dec
mov
mov
fcmovu
orl
jno
inc
enter
sti
mov
bound
icebp
xchg
out
dec
mov
fnsave
lds
push
or
rorb
xchg
or
addr16
pusha
mov
lods
jnp
movsl
pop
lcall
fnsave
inc
dec
subl
daa
jmp
std
movsb
jnp
push
in
imul
ljmp
lock
loope
mov
js
xor
jge
add
dec
inc
dec
daa
dec
das
outsb
imul
enter
mov
add
add
add
cmp
cli
add
mov
lock
and
fisubl
xlat
lods
cld
lock
add
std
or
movsl
mov
aaa
jmp
or
mov
pushf
lods
jno
mov
mov
cltd
mov
mov
nop
rolb
das
push
sbb
das
cmc
jmp
xchg
loop
pop
stos
stc
clc
shll
inc
sar
mov
jmp
test
mov
test
flds
cmpsl
loopne
fadds
in
dec
xor
xor
cmp
shrl
mov
outsb
push
mov
outsl
arpl
loope
or
out
push
pop
push
in
dec
aam
pushl
fwait
sets
repnz
xchg
cmp
and
lds
jno
les
push
out
cmpl
in
les
xchg
mov
mov
out
xchg
arpl
sub
add
call
out
lahf
or
fdivs
mov
add
testb
add
sub
jle
int3
or
iret
stos
mov
shlb
data16
imul
cmp
std
pop
mov
imulb
dec
and
or
dec
pop
xor
xor
xor
and
aaa
movsb
int3
ljmp
out
cli
add
and
mov
test
shlb
popf
and
or
adc
or
and
adc
or
enter
repz
fdivrp
insl
rcrl
xchg
and
jg
test
aad
jp
adcb
cmp
loop
mov
cmc
dec
fwait
dec
cld
out
divb
hlt
mov
sub
lds
jne
mov
sbb
pop
mov
ljmp
hlt
add
ss
push
pop
and
jno
xchg
cli
leave
dec
adc
and
add
mov
mov
mov
ficoml
call
fadds
add
add
add
scas
mov
fstpt
lret
add
push
int
xor
dec
cld
inc
insl
shrl
xor
xchg
lods
cmp
adc
jge
imul
inc
mov
in
sub
std
xchg
inc
dec
adc
iret
std
fs
dec
les
fsubrp
lahf
rclb
ds
add
jl
cwtl
sbb
lret
lods
ds
inc
sbb
jne
mov
dec
cmpsb
ss
ds
pop
and
push
or
shl
and
mov
in
inc
mov
outsl
xchg
flds
jg
ds
mov
sarl
push
inc
mov
incl
outsb
test
or
sahf
mov
movsb
outsl
je
nop
repnz
aaa
in
in
rcr
shrl
cmp
pop
cld
add
xor
pop
jbe
pop
mov
cmpsb
cld
shl
inc
adc
ljmp
add
xor
add
sbb
sbb
or
xchg
mov
add
add
or
loopne
cld
cmpsl
xchg
pusha
in
inc
cltd
mov
xlat
lret
pop
fdivrl
call
dec
scas
cmp
lret
or
scas
mov
xchg
sbb
into
jp
in
imul
adc
jnp
hlt
and
jb
int
clc
cwtl
xor
adc
adc
outsb
ds
aaa
les
add
push
and
addb
pop
jne
xor
mov
pop
insb
adc
pop
std
and
add
mov
daa
lds
push
lock
cltd
mov
lret
sbb
jno
dec
aam
addr16
lahf
gs
jb
mov
clc
xchg
push
call
sti
pop
or
mov
xor
loop
push
enter
test
or
pop
fisubrs
sti
cmp
arpl
data16
xor
add
mov
pushf
adc
ds
sub
fiaddl
add
add
add
jb
or
das
fstl
daa
std
jl
xor
jp
push
into
mov
cmp
jmp
test
mov
cld
jno
adc
add
shl
mov
add
add
mov
insb
pop
nop
out
xchg
aaa
or
or
andl
fwait
xlat
sbbb
aam
iret
rcr
mov
adc
mov
iret
popa
jg
mov
jge
push
push
in
jg
mov
out
push
push
dec
push
pusha
lods
shl
adc
or
outsb
mov
mov
and
sbb
or
repnz
sbb
test
jmp
scas
pop
jbe
dec
lds
leave
push
push
je
gs
enter
lahf
in
cmpsb
repnz
scas
js
pop
ds
inc
xchg
outsl
les
cmp
popf
pop
pushf
inc
pop
mov
clc
mov
xchg
adc
lock
dec
cmp
add
lcall
sbb
mov
add
testb
add
push
pop
inc
andl
shrb
loopne
fsubrl
nop
fbld
fidivrs
fcompl
mulb
int
lahf
rcrb
sbb
xor
outsl
clc
xor
sub
rep
xor
bound
dec
mov
pop
loopne
dec
pop
jno
fildll
mov
pop
add
sub
lahf
fcoms
push
scas
ds
mov
ret
lea
enter
mov
mov
leave
mov
enter
sub
in
xor
mov
xchg
push
cmp
cwtl
test
movsb
ja
out
rcrb
data16
xor
dec
cmp
adc
fiaddl
sub
xor
pop
ja
testl
xchg
loop
mov
int3
sub
adc
out
repnz
loop
imul
iret
cmc
pusha
rcrl
sbb
ret
psubw
add
xchg
ja
push
jg
loope
cs
push
into
filds
add
add
imul
jge
xorb
test
or
xchg
in
insl
pop
mov
ror
fmuls
inc
mov
sbb
js
or
mov
ret
add
flds
lret
jle
outsl
or
push
lds
adc
lods
cltd
popa
test
scas
push
cs
mov
pop
lods
ljmp
lods
mov
pop
mov
in
adc
jno
push
adc
pop
and
aad
pop
push
and
into
sub
lods
mov
subl
in
fimuls
loope
leave
mov
dec
decl
repnz
and
push
lcall
aas
in
add
pop
push
jl
rcrl
add
divb
xchg
pop
insl
adc
aad
cld
and
xor
add
imul
xor
fistpll
add
testb
add
jecxz
faddp
popf
inc
mov
cwtl
xor
or
jo
mov
pop
mov
jo
inc
or
or
xor
sbb
leave
test
mov
faddl
addb
jg
sbb
jbe
rcr
ret
cmp
xchg
mov
xlat
sarb
outsl
rcrb
push
cmp
divb
and
ds
inc
dec
xchg
test
nop
push
adcl
sbb
push
inc
mov
stos
mov
mov
ss
dec
pushf
pop
leave
xchg
push
bound
adc
jns
pop
aad
mov
fsubl
dec
jb
filds
jmp
mov
mov
mov
and
out
test
dec
subb
insl
dec
mov
xor
mov
cwtl
sti
test
mov
xchg
xor
inc
ds
inc
add
out
fldcw
push
xchg
fsubrs
out
les
add
add
add
cld
ja
mov
mov
stos
or
test
outsl
out
sub
push
sub
inc
les
sub
roll
int
or
xchg
mov
in
xor
pop
sub
push
aaa
mov
sub
ja
into
out
aam
mov
pop
hlt
sub
mov
jmp
outsl
repnz
pop
push
mov
jmp
loop
and
iret
sbb
sbb
les
push
cmp
push
dec
xchg
sbb
out
xor
adc
rcl
or
push
lret
dec
xchg
scas
push
dec
dec
mov
add
or
push
leave
jg
inc
dec
loopne
js
pop
scas
xor
cmpsb
push
lds
enter
pushf
dec
in
ret
out
das
pop
add
sub
and
insl
add
sub
cmp
push
and
fwait
fwait
cmp
test
in
and
cld
xor
jb
sub
cmc
sub
movsl
add
cmp
add
in
sbb
sahf
cmc
fsubrp
jnp
mov
jmp
filds
add
add
add
dec
adc
and
xor
repz
decl
shrl
frstor
out
ja
icebp
or
lods
cmc
push
mov
push
pop
sarl
dec
sti
inc
cmp
dec
leave
add
sub
xor
test
out
addr16
pop
add
mov
xchg
mov
stc
cmpsb
pop
cmp
mov
push
jmp
andl
addr16
push
popf
ror
addr16
cmp
negl
dec
fbld
push
push
sbb
jo
rcrl
sub
pop
adc
and
lcall
push
lret
ret
or
sahf
movsb
or
lcall
ds
lret
jne
inc
mov
out
shlb
ret
push
xchg
scas
inc
leave
lea
int
roll
adc
and
add
jle
jg
std
fldt
cmp
jge
js
pop
loopne
add
add
add
repz
push
inc
cmp
inc
dec
test
cmpsl
xor
sbb
sti
mov
push
in
notl
fs
arpl
mov
and
add
and
dec
dec
sbb
push
jle
stos
cmp
mov
sbb
stc
std
pop
in
sub
imulb
hlt
flds
lods
and
jle
mov
in
push
sbb
in
mov
movl
xor
pop
mov
or
adc
cmp
adc
shrb
add
jno
shlb
fsts
jmp
or
mov
js
pcmpeqd
hlt
or
gs
cmp
lds
mov
xor
add
pop
icebp
push
jmp
stos
pop
cmc
pop
fnstenv
cwtl
xor
js
cli
jo
dec
push
lock
ljmp
add
add
mov
sti
idiv
lods
jne
adc
pop
push
daa
rcll
add
testb
add
or
and
adc
fdivs
push
jecxz
adc
int3
xor
sub
mov
ja
pop
cwtl
add
and
pop
rolb
push
gs
aad
dec
in
stos
mov
or
iret
sbb
mov
adc
pop
lahf
jecxz
lods
mov
imul
or
dec
int
cld
mov
and
cmp
pushf
xor
xor
mov
rcll
sbb
add
mov
lahf
inc
cli
es
cmp
je
ror
clc
rcrb
cwtl
jnp
xor
lods
sbb
sub
dec
icebp
out
int
movsb
xchg
or
jno
and
lret
pop
sub
add
dec
push
xor
mov
in
scas
sbb
insb
fstl
aas
subl
insb
mov
popa
jno
pop
cwtl
adc
add
aam
add
sbb
jmp
mov
and
or
loop
add
add
add
dec
cwtl
mov
ret
imul
sub
jb
mov
pop
and
inc
jmp
ja
dec
xchg
in
dec
xor
xor
cld
sbb
push
movsb
xchg
sub
call
add
mov
mov
xor
fsubs
push
push
xor
andl
std
jmp
call
lahf
inc
popf
xor
lea
aad
sub
movsb
xor
mov
inc
test
or
jns
shll
out
scas
insb
jge
xchg
or
faddl
lcall
mov
lea
int3
outsb
mov
and
iret
sbbb
out
sti
mov
cmp
mov
test
sub
sbb
adc
stos
jb
aaa
out
cmp
push
lods
cmc
pop
in
jle
adc
repz
mov
mov
xor
insb
decb
add
push
out
jp
dec
popl
jecxz
add
add
add
push
dec
mov
cmc
xchg
cmp
jno
or
js
mov
jl
in
loope
test
cmc
adcb
out
sbb
mov
mov
aaa
jle
add
cld
cmp
mov
mov
jecxz
jno
sbb
cmpsl
icebp
loop
add
pop
mov
or
fld
lea
stos
adc
and
inc
xor
mov
cld
clc
repz
adc
int
fcomi
data16
push
mov
xchg
jg
pop
shll
test
ds
push
jb
cs
add
pop
fsincos
mov
mov
movsl
stos
sub
ds
stos
push
pushf
test
mov
dec
lods
in
cmp
push
inc
xor
arpl
pop
sub
xchg
push
andl
mov
cmp
add
jg
mov
lcall
mov
je
in
add
add
add
dec
andl
call
or
divl
fwait
jl
pop
lods
addl
lret
xor
pop
ja
and
mov
lea
scas
push
mov
sbb
push
scas
jbe
aas
xchg
stc
mov
sbb
mov
daa
pop
jbe
das
and
pusha
lcall
out
ret
jecxz
stos
inc
out
inc
xor
mov
cwtl
int
fnstenv
jg
sbb
and
pushl
ret
dec
scas
fcompl
mov
and
jmp
in
icebp
inc
xchg
dec
pop
and
xor
push
sti
jbe
insb
sahf
mov
js
push
rclb
mov
or
jne
adc
aaa
cmp
dec
int3
rcrl
xchg
adc
jge
xchg
dec
pop
outsl
fbstp
std
sti
aaa
fwait
pop
adc
inc
add
sbb
jns
daa
data16
sub
add
testb
add
out
shrl
ljmp
and
orb
push
scas
ficomps
sub
dec
push
or
jb
jno
sahf
inc
push
roll
lret
push
lret
movsl
mov
add
out
jg
enter
clc
dec
mov
ss
mov
mov
adc
sbb
out
in
sbb
lock
mov
or
sub
adc
std
cmp
xchg
pushf
cmpsb
xchg
inc
andb
dec
jo
into
nop
adc
inc
es
dec
inc
test
leave
sbb
pop
push
rol
pushl
scas
data16
and
pop
cmp
mov
fistps
jl
mov
add
fbstp
adc
sarb
test
rolb
cmp
fs
jle
jo
loopne
fcmovnb
and
push
test
mull
jnp
and
aas
ja
and
fstpl
and
dec
add
jae
fadd
fsubp
jnp
push
xor
pop
push
out
add
add
add
je
mov
push
mov
inc
jp
mov
cld
dec
cmovl
mov
lahf
push
sarb
mov
xor
je
adc
js
lcall
imul
sub
xor
adc
pop
repz
lods
testl
rorl
sub
jb
ljmp
pop
cmpsl
imul
xchg
or
shlb
ja
fldt
mov
fisttps
es
dec
scas
imul
sub
jmp
pop
jl
int3
gs
push
add
mov
pusha
out
out
mov
mov
enter
mov
xchg
xchg
ret
pop
mov
adcl
into
dec
mov
outsl
xchg
outsb
push
repnz
adc
push
dec
xchg
lret
push
add
sub
xor
adc
repz
scas
dec
sbb
mov
push
cmp
sub
cld
cli
jle
addb
adc
add
testb
add
push
in
cli
mov
xor
insl
fstp
lahf
lahf
pop
test
adc
js
ret
aaa
ss
jl
mov
mov
fdivr
or
mov
xor
mov
divb
or
push
adc
jge
outsl
out
mov
and
xchg
mov
mov
xor
lock
push
scas
cld
xor
decb
loopne
inc
push
rcrl
pushf
dec
push
cmpsb
push
inc
pop
iret
lcall
call
inc
std
call
jbe
loopne
imul
and
mov
sub
mov
rclb
adc
insb
in
xchg
daa
jne
out
lret
loop
jno
cmp
loop
push
xor
repz
das
cwtl
jmp
and
in
in
mov
out
mov
xchg
popf
fs
pop
jnp
xor
popf
mov
aad
adc
mov
fists
push
pop
dec
adc
add
ja
sti
dec
push
sbb
sahf
or
add
testb
add
add
fldcw
sub
pop
testl
sub
push
xorb
xchg
std
add
cwtl
pop
not
flds
es
stos
sub
lahf
lret
add
rcll
jl
in
ja
sbb
fwait
out
lods
add
inc
lcall
lods
adc
dec
sub
add
xor
out
shlb
bound
push
lahf
loope
lds
cmpsb
push
in
dec
jge
jb
out
call
enter
out
negb
lods
cmovbe
lock
cmp
sti
push
insl
js
test
mov
loop
sbb
hlt
sti
repnz
adc
test
xor
iret
mov
jecxz
cli
cmc
fsub
cmp
imul
pop
mov
aas
inc
mov
dec
mov
roll
addr16
aas
and
add
into
arpl
inc
push
cmc
or
sarb
roll
jmp
add
mov
jge
add
pop
in
ljmp
lret
sti
jl
xchg
mov
jmp
icebp
mov
sbb
int3
nop
test
push
adc
jo
cmp
or
call
mov
pushf
and
in
test
je
lahf
cmpsb
xchg
adc
lahf
sarb
mov
loop
js
dec
xchg
insl
outsb
cld
lods
inc
cmpsl
arpl
dec
cmp
cmp
test
push
dec
add
cmp
xor
jnp
jp
mov
lret
pop
sbb
sub
inc
fdivr
add
jb
mov
mov
cmp
jne
repnz
iret
mov
mov
jo
push
push
xchg
int3
out
stos
aam
add
adc
adc
xchg
fsubp
xchg
mov
clc
mov
jbe
cs
add
fmulp
ja
and
adc
sbb
mov
cwtl
inc
mov
sbb
add
ja
decl
jecxz
mov
imul
add
testb
add
arpl
bound
shr
mov
divl
loopne
jl
jno
movsb
jne
jnp
inc
sbb
mov
movsl
or
mov
jo
xchg
fwait
mov
out
pop
jb
sbb
adc
push
rcrl
out
cwtl
lcall
ficoml
xchg
adc
sbb
les
xchg
mov
xchg
scas
mov
int
or
popl
xlat
xchg
push
mov
test
sub
jmp
cmp
outsb
jmp
imull
bound
fwait
mov
xchg
ds
xchg
les
dec
test
and
cwtl
sbb
jge
mov
jp
imul
cwtl
lods
movsb
pushf
js
mov
lcall
insb
add
mov
and
or
imul
xchg
inc
mov
lcall
pop
jae
ja
pop
push
movsl
in
mov
repz
lock
jg
mov
adc
lea
ljmp
push
jns
and
out
mov
jmp
inc
scas
jmp
xchg
movsb
dec
add
in
dec
ds
jle
push
pop
or
sti
or
leave
sahf
jne
fwait
or
outsb
pop
stos
hlt
in
jno
push
cltd
shlb
dec
idiv
cwtl
or
adc
jle
fimuls
or
cmc
jmp
pushf
xor
jb
into
xchg
xchg
xchg
inc
xor
arpl
mov
dec
jmp
inc
mov
pop
insl
lods
pop
add
testb
jecxz
and
loop
push
lds
ja
adc
out
fsubrl
shlb
jl
in
and
inc
mov
popf
out
add
push
push
movsb
mov
in
lcall
push
sub
data16
call
decb
mov
loopne
add
xchg
fwait
cwtl
pop
popf
pop
xlat
fisttpl
les
add
add
add
and
xchg
lds
xchg
aad
dec
lret
and
ja
push
loopne
call
fists
je
in
dec
rolb
or
in
xchg
aas
cmc
shr
js
xlat
das
adc
cld
xor
in
leave
or
mov
out
mov
jno
lods
cmc
pushl
imul
inc
movsb
xor
sub
stos
insb
mov
xlat
arpl
pop
ds
mov
arpl
fdivl
lret
dec
int3
jecxz
pop
clc
push
sbb
xchg
repz
add
jmp
out
cmc
adc
int
ret
stos
out
fmull
addr16
and
pop
xlat
insb
xchg
xor
sbb
outsl
xchg
xorl
addr16
push
lret
push
leave
leave
rorb
call
push
dec
into
dec
mov
dec
add
repz
dec
jnp
add
mov
dec
js
stc
mov
push
nop
aad
popf
test
in
add
testb
add
addb
je
and
inc
push
push
movsl
pop
xor
sbbb
and
sub
test
lahf
leave
cwtl
out
mov
cli
sti
movl
lds
fdivrs
addb
push
xchg
mov
jg
or
inc
pop
loope
cwtl
sub
push
gs
xchg
push
push
rolw
adc
inc
loope
jg
sub
in
dec
rolb
inc
cmp
popf
push
xor
mov
add
inc
or
fucomip
aaa
adc
pop
dec
add
call
dec
sub
cli
sub
and
mov
test
xor
outsb
sub
jle
mov
or
cmp
out
repz
dec
aas
in
inc
jo
fcom
cmp
jbe
pop
jnp
and
add
mov
pop
insb
fildll
decb
add
cmpsb
int
add
in
add
testb
add
hlt
lods
mov
ret
std
inc
rorl
mov
adc
jne
inc
or
dec
cmp
stos
stc
mov
sub
lds
inc
dec
mov
rclb
pop
jno
das
pop
sub
xchg
pusha
mov
ds
test
add
xlat
pop
ret
test
mov
adc
aad
add
mov
sub
mov
imul
xor
jecxz
sbb
xchg
cld
lret
addr16
das
jle
xchg
mov
push
mov
imul
cmp
xor
aaa
and
nop
std
fwait
inc
lds
repz
mov
jmp
jo
xor
sbb
test
pushf
jns
insb
sbb
pop
outsb
cmp
dec
test
out
outsl
cmpsb
add
jg
lods
inc
in
sub
and
divl
mov
mov
fmuls
or
add
lahf
int
ret
js
cmp
add
cmp
jnp
sbb
cld
out
add
testb
add
inc
pop
clc
cmp
dec
mov
pushf
adc
inc
insl
adc
ret
addr16
mov
dec
cmp
lea
jle
int3
sbb
fs
dec
daa
push
dec
adc
mov
jg
fidivs
mov
mov
ret
xchg
clc
std
pop
jno
cmpsl
pop
cs
mov
mov
jmp
dec
add
xchg
push
fs
push
xchg
or
fsubrl
mov
sub
mov
mov
pop
sbb
sub
adc
lds
mov
les
adc
jecxz
pusha
and
lock
sbb
div
mov
mov
aad
sahf
fnstsw
jns
add
push
andl
jmp
jge
mov
lahf
test
mov
sub
add
out
lods
xor
aas
xlat
jmp
popa
test
mov
add
add
xchg
mov
mov
inc
push
and
mov
push
sub
ds
call
jb
stos
loop
pop
dec
mov
jns
les
xchg
int3
push
fs
or
and
fistpll
int
adc
jecxz
fisubl
pextrw
mov
push
push
inc
jl
les
push
jno
and
sahf
ret
fs
or
out
and
hlt
popf
jle
ja
sarl
mov
xor
push
les
gs
jnp
es
pushf
sbb
lahf
cmpps
sarl
test
mov
xchg
movsb
sbb
addr16
add
jns
and
inc
mov
rclb
ja
fsubrs
notb
outsl
sub
or
and
int3
pop
test
repnz
in
arpl
ror
in
sub
xchg
cmpsb
scas
fwait
fs
add
jb
scas
cmp
int3
repnz
jbe
mov
add
testb
add
ret
imul
data16
xchg
xor
xchg
cmp
xor
pop
mov
cltd
xchg
aam
push
jp
loopne
lods
int3
or
int
or
mov
pop
insl
ffreep
mov
mov
mov
add
cmp
xor
fsub
mov
adc
jns
ja
cmpsl
push
and
and
push
pop
test
cmp
cwtl
pop
dec
scas
icebp
xchg
je
in
fsubl
mov
pop
add
add
add
and
popl
jle
cmc
outsb
fwait
adc
or
or
jge
jns
ror
aad
ret
push
sbb
movsb
sbb
in
xor
jae
shr
repz
xor
mull
cmp
pop
xchg
out
cli
cwtl
pop
lret
cmc
jmp
arpl
lods
cmp
add
mov
xlat
mov
or
fisubl
add
add
inc
lahf
inc
mov
inc
dec
and
dec
mov
fwait
or
sub
sbb
cmp
cmp
lret
ja
stos
mov
ds
adc
sub
sbb
push
mov
mov
dec
pop
dec
insb
jo
mov
mov
xor
lahf
or
rcl
sbb
cwtl
dec
test
cmp
mov
or
je
and
popa
push
inc
cmp
sub
mov
xchg
and
fsubrp
mov
mov
sahf
jns
loopne
sub
pusha
or
mov
outsl
or
lret
mov
dec
jl
and
sub
filds
mov
ds
pop
stos
push
icebp
out
je
fucom
shl
movsb
aas
and
sbb
int3
decb
inc
xor
js
jns
fidivrl
mov
add
mov
aas
jp
int3
icebp
adc
add
testb
add
insb
pop
cmp
scas
sub
cltd
push
add
fistps
sub
jmp
push
jmp
xchg
call
jecxz
ja
mov
scas
jecxz
lods
insl
cmp
test
sub
popa
push
scas
loop
scas
sbb
clc
xor
or
push
ljmp
xchg
shr
xchg
aas
rcrb
lock
jo
xchg
adcl
jmp
push
push
cwtl
fsubl
mov
push
cld
xor
jecxz
hlt
dec
loopne
mov
ret
enter
dec
pop
mov
movsb
subb
out
icebp
aaa
ja
add
lea
je
sbbb
and
xor
cld
dec
ret
aad
push
mov
imul
cld
cmp
int3
incl
mov
mov
adc
add
mov
sti
mov
cmpsb
dec
sbb
add
add
add
sahf
push
adc
mov
insl
aam
je
or
cmp
push
or
rclb
out
push
lock
jg
fcoml
fstps
push
imul
mov
mov
out
mov
mov
inc
es
stos
cmp
sub
inc
xor
fnstenv
mov
dec
jns
fwait
cmpsb
mov
inc
pop
xor
sub
out
and
and
jno
mov
jecxz
or
mov
xchg
inc
mov
test
out
and
or
clc
insb
push
shl
outsb
cmp
out
unpcklps
push
adc
inc
dec
pop
adc
push
imul
mov
sub
inc
jmp
test
xchg
push
add
pop
movsl
fstl
daa
fildl
inc
shl
jbe
ja
test
mov
and
push
or
cltd
sbb
add
push
cmp
adc
neg
jge
push
xchg
enter
hlt
add
testb
add
adc
push
sbb
and
sbb
rorb
xor
inc
mov
and
jmp
xchg
pushf
iret
xor
lods
jbe
mov
imul
mov
ja
xchg
mov
rol
lahf
sbb
movsl
jmp
push
out
add
stos
ss
nop
pop
sub
add
sbb
mov
and
stos
out
and
lret
jp
pushf
imul
sbb
fisubs
lea
test
ret
inc
push
ss
push
loope
push
imul
cmpsb
add
insl
mov
mov
sbb
or
mov
test
add
inc
xchg
push
mov
push
andb
ret
inc
mov
cltd
push
add
sbb
adc
pop
pop
pop
loopne
lret
or
movb
bound
adc
pop
jmp
add
pop
cmp
outsl
jg
jg
mov
xor
xchg
inc
xchg
jle
add
testb
add
xor
cltd
and
sbb
mov
mov
aam
jno
aas
icebp
mov
es
inc
xor
dec
inc
cmp
add
sar
jne
push
jmp
outsb
add
aad
xchg
inc
mov
sbb
jle
push
mov
xor
xchg
dec
addb
or
dec
popa
loop
pop
mov
pop
jecxz
data16
pop
push
cld
jne
cmp
out
ja
sub
out
cmp
xor
fst
mov
mov
adc
rolb
cmp
xchg
lret
push
ror
scas
rcrl
xchg
mov
add
dec
cs
or
les
pop
aas
cmp
mov
dec
sbb
ja
out
jo
into
aaa
pop
fcomps
xchg
add
xchg
rep
dec
mov
xor
out
add
ret
ja
and
aaa
negl
mov
add
add
add
andb
sbb
adc
test
adc
push
dec
sarl
mov
inc
and
cli
stos
ret
mov
hlt
mov
lods
jo
pop
jo
xchg
xor
cli
sbb
xor
mov
vcmpps
outsb
in
xor
ljmp
imul
std
jg
popa
mov
add
add
mov
ret
inc
mov
mov
test
insl
dec
js
lret
or
aas
inc
or
aaa
subl
sarb
sub
pop
add
stos
lock
fdivs
xor
add
xor
sub
push
fistpll
or
sti
out
loopne
fisubl
incl
sbb
ret
cld
lcall
add
sbb
lods
jne
mov
lahf
xorl
in
xchg
jecxz
jmp
mov
mov
and
testl
add
add
and
and
inc
dec
call
mov
mov
popf
test
add
movl
pop
leave
outsb
mov
scas
xor
cmp
in
andl
mov
mov
hlt
xchg
sbb
adc
faddl
push
pop
adc
dec
lahf
adcl
ret
bound
jbe
adc
jl
push
enter
cmpsl
popa
xor
insl
cmpsb
inc
aad
movsl
or
mov
sub
jb
push
sahf
add
sub
jmp
insb
push
cmc
jno
fidivrs
push
dec
sub
sbb
mov
jg
mov
cld
mov
xor
cmc
jl
test
or
outsl
pop
ficoms
loop
adc
sub
test
inc
add
jle
jne
cmp
pop
ret
inc
pusha
clc
add
testb
add
mov
data16
test
aam
xchg
lahf
test
add
leave
jno
sbb
out
movsl
push
jne
pop
push
xor
mov
loope,pn
sub
or
push
inc
push
out
movsb
jp
or
push
sub
mov
hlt
mov
xor
std
push
loope
mov
pop
ljmp
xor
mov
bound
inc
push
lahf
sub
or
cmp
mov
ret
ljmp
mov
imul
jl
iret
aas
xchg
mov
inc
cltd
xlat
mov
pushf
mov
clc
aam
dec
push
imul
in
jae
jo
out
rcl
nop
inc
scas
loope
xor
or
sbb
sbb
or
loope
add
adc
cld
ja
adc
daa
xor
jmp
dec
lret
jp
add
sub
scas
fdivr
fnstcw
cmpl
int3
push
stc
add
testb
add
data16
fldl
mov
pop
into
ficoms
adc
dec
sbb
mov
add
jae
es
xchg
inc
cmp
lea
dec
adcb
dec
mov
sahf
jno
imul
bound
pop
mov
mov
add
inc
cmp
pop
scas
xor
jecxz
ja
lds
aam
testb
push
and
ret
pop
adc
stos
int3
xor
fs
sbb
push
jae
xor
ds
xchg
icebp
push
push
mov
jmp
or
xchg
shrb
enter
sti
lcall
jns
mov
dec
icebp
mov
xchg
xchg
jg
dec
xor
pop
outsb
xor
cs
ja
push
add
fwait
out
test
dec
gs
ljmp
xchg
mov
xchg
xchg
icebp
pop
add
add
ret
add
xor
xchg
fwait
bound
notl
add
testb
add
sub
jle
adc
js
mov
mull
stos
ss
enter
mov
lcall
aam
testl
loopne
ret
sbb
push
sahf
sti
mov
push
cli
jmp
sti
mov
fwait
std
leave
inc
flds
pop
sub
sbb
push
cwtl
mov
hlt
xchg
push
lcall
hlt
jmp
xor
out
cs
dec
mov
xchg
out
inc
mov
xchg
push
popa
pop
ja
int
and
int3
jg
xor
aad
movsl
or
aad
add
mov
add
decb
sbbb
and
or
inc
xor
adc
jmp
iret
lcall
mov
jno
lret
nop
fdivrs
scas
out
in
jns
add
adc
int
in
idivl
pushl
inc
fildll
inc
sti
add
testb
add
ja
dec
jge
loop
push
xchg
in
in
fisttpl
inc
cmpsl
psrld
data16
arpl
loop
fnsave
jne
sub
mov
decb
jo
pop
movsl
cltd
cld
mov
mov
sub
and
mov
mov
cmp
repz
mov
add
adc
hlt
out
movsb
sbb
out
ret
std
push
xchg
call
loop
jg
add
ds
pmaxsw
pop
inc
lds
push
jae
mov
imul
sub
out
in
sbb
imul
jmp
sub
jo
cmc
pop
divl
ljmp
push
push
mov
mov
in
icebp
jne
orl
fnstsw
lcall
lret
stos
repnz
push
push
push
das
or
add
pop
es
inc
cli
aas
push
ljmp
cmp
add
testb
add
es
cmp
mov
repnz
ljmp
inc
out
mov
daa
imul
int
test
lock
pop
jnp
jno
or
pusha
aaa
aam
add
in
mov
mov
aad
mov
pop
mov
push
shr
imul
stos
js
and
mov
into
hlt
jp
hlt
aaa
out
jp
dec
mov
daa
cmpsb
shlb
orb
sahf
sbb
cwtl
inc
push
xlat
dec
rolb
push
sbbb
cmpsl
mov
cmp
mov
and
cmpsl
ja
fs
or
xchg
xor
add
fcomps
push
fwait
sbb
dec
fstp
in
jbe
lds
flds
jge
add
cmp
pushf
push
rolb
imul
add
lcall
adc
add
testb
add
and
mov
push
shrl
outsl
xor
ljmp
movsl
xor
cmp
loop
rcrb
push
jp
mov
adc
rcrl
andb
xor
arpl
pop
mov
add
stos
and
popa
sbb
mov
outsl
push
aad
inc
push
cltd
in
and
scas
dec
jno
inc
adc
pop
cmpsl
cmp
dec
cmp
mov
rolb
inc
jae
xchg
in
andps
lea
add
nop
adc
nop
cmp
or
xchg
faddp
dec
idivl
leave
mov
sub
push
leave
fstps
insb
cmpsb
jge
inc
ljmp
xlat
push
inc
pop
push
jns
rolb
mov
stos
ja
add
in
fnstcw
add
pop
and
cmp
hlt
adc
outsl
popa
and
add
aaa
jae
cltd
dec
mov
fs
add
testb
add
pusha
test
test
and
jbe
mov
iret
xor
inc
fwait
repz
rorl
dec
lret
cmp
arpl
xor
stos
push
add
push
mov
sub
gs
orb
xchg
xchg
xchg
pop
lahf
lods
xchg
xchg
push
dec
lret
cmc
in
fimull
mov
ljmp
xchg
adc
pop
repz
sub
in
out
mov
mov
js
jns
popf
jmp
cmp
bound
mov
mov
inc
mov
cmp
xchg
mov
mov
data16
lahf
iret
loope
lahf
ds
stos
cld
pusha
push
inc
rcl
xor
and
jbe
or
mov
in
pop
sti
fs
mov
aad
inc
lret
pop
and
inc
lret
les
adc
lcall
add
push
into
nop
out
cwtl
jle
xlat
movsb
add
scas
rcrb
sbb
add
testb
add
ret
push
mov
mov
jns
dec
push
aas
or
mov
adc
xlat
sbb
and
mov
sbb
outsb
adc
cwtl
hlt
lidtl
mov
aaa
push
lods
outsb
fs
ja
movsb
inc
xchg
lahf
mov
jnp
push
fstps
xor
and
orb
mov
and
jb
dec
mov
pop
jo
jo
sbb
pop
iret
push
out
mov
xchg
jne
mov
or
outsb
test
leave
faddp
aam
inc
cmp
lret
mov
rorb
xchg
stos
inc
xchg
add
inc
add
mov
sub
or
push
pusha
adc
fstp
mull
rclb
mov
stos
int3
xchg
jg
out
jmp
arpl
xor
lock
jae
jmp
lahf
testl
add
test
jg
xor
or
jl
mov
add
add
add
add
movsb
pusha
pop
sub
add
jp
aas
sub
push
xor
xchg
iret
cli
ror
sbb
fsubrs
call
test
lcall
fcmovb
push
push
jae
pusha
negb
je
pop
push
xchg
and
xlat
or
lock
testb
mov
cmp
cmp
jae
adc
std
in
daa
jg
adc
xchg
pop
push
mov
adc
mov
pop
in
sub
xchg
jo
pushf
ljmp
adc
add
shrb
cmpsl
or
push
pop
push
xor
sbb
push
lea
rolb
push
fstpl
jo
sbb
pop
sbb
jmp
mov
rcll
sbb
jmp
mov
leave
inc
es
dec
lock
negl
push
cmp
mov
cs
icebp
lock
add
adc
movsb
push
in
cmc
jne
pop
adc
les
mov
testb
add
adc
rol
leave
add
das
push
push
add
or
loope
push
cmpsb
pop
push
add
cwtl
in
incl
out
inc
aas
xchg
pop
adc
fdivs
add
inc
xorb
fnstsw
xchg
aad
test
js
outsb
in
or
jge
ds
fildl
daa
mov
cmc
fld
mov
xchg
mov
cmpsb
or
xchg
ret
or
inc
imull
xchg
lahf
xor
xor
mov
dec
iret
fidivs
ds
les
add
int3
or
jnp
cmc
ret
mov
add
sub
aaa
aad
xchg
pop
adc
mov
adc
push
imul
cmpsb
and
push
jge
push
push
xchg
push
xorl
pop
cld
fmuls
mov
out
mov
ret
mov
sbb
daa
aad
cmc
frstor
add
add
out
shlb
aas
out
fwait
aaa
call
and
add
add
add
add
dec
xor
fisttpl
fimull
fmul
add
jno
mov
jne
fistpll
push
inc
adc
jle
mov
inc
sbb
or
shll
test
adc
mov
push
in
xor
movsl
and
pop
push
popa
shrl
mov
jmp
pop
insb
adc
subl
sub
pop
clc
push
jge
and
int3
inc
bound
shlb
cli
stos
sbb
sbb
in
cmp
xchg
cmp
and
push
xchg
ja
mov
push
out
pop
and
mov
push
and
push
mov
add
jae
xor
movsb
mov
inc
cmc
fstl
cmp
pop
orl
bndldx
movsl
imul
pop
hlt
fldl
xchg
das
pop
push
jmp
mov
fldt
pop
add
or
mov
aas
cmp
add
add
add
or
test
push
divb
sub
mov
inc
dec
stos
and
jae
mov
jae
fmuls
int
xchg
leave
and
lock
and
sbb
push
hlt
lods
push
mov
add
lret
pop
out
clc
shrl
js
jne
mov
cld
inc
push
std
in
iret
push
fdivrp
pop
gs
nop
and
lcall
dec
scas
out
jg
or
ja
xchg
and
xor
lahf
add
jne
filds
cmpsb
out
xchg
jmp
ficoms
cmp
fisubrl
bound
push
shrb
inc
test
fidivl
push
adc
push
mov
popf
mov
inc
jle
mov
cmp
mov
daa
sub
lret
inc
scas
enter
std
imul
jle
scas
jle
enter
add
test
xchg
les
push
add
add
ret
bnd
rorb
cltd
jl
fiaddl
add
add
add
fs
add
lahf
add
fsub
nop
push
sbb
xor
jmp
lock
arpl
cmp
dec
aad
mov
lock
jmp
push
pop
leave
mov
aaa
and
and
or
push
repnz
stos
pushf
or
lods
mov
outsb
sub
sahf
dec
xlat
push
jnp
cmp
cli
mov
xchg
ds
out
mov
mov
movl
stos
lcall
sbb
imul
pop
mov
int
cmc
inc
pop
pusha
push
repnz
jmp
in
das
xchg
cmp
inc
fimull
inc
push
popa
adc
fstpt
pusha
pop
gs
jnp
and
imul
pop
add
addb
pop
loopne
sahf
add
dec
rcrl
or
aaa
mov
add
std
aaa
mov
lret
jne
cmp
add
add
inc
in
std
faddl
or
sub
push
lods
dec
xlat
cmp
add
mov
aas
lods
stos
outsb
pushf
loopne
pop
push
bound
pusha
shr
cmp
subb
push
cmp
dec
decl
lret
dec
or
lds
shll
and
push
add
call
cmpsb
lods
jl
addr16
dec
add
xchg
adc
subb
xlat
popa
enter
in
fdivrs
xchg
sarl
push
and
mov
loope
lods
sbb
movsl
or
pop
sub
dec
pop
mov
inc
dec
aad
lock
shll
add
mov
dec
push
mov
mov
or
dec
add
add
add
movl
add
lret
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
cltd
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
test
inc
aas
inc
lea
inc
mov
mov
call
out
fisttps
jecxz
call
lea
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
lea
pusha
push
incl
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
ljmp
movntq
movl
test
jmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
jle
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
cltd
mov
or
rorl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
addr16
je
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
aaa
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
and
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
ss
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
cltd
clc
xor
inc
cmp
pushf
mov
test
clc
dec
inc
mov
or
test
clc
testl
enter
ss
pushf
inc
decl
push
xabort
add
mov
mov
les
adc
dec
add
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
mov
test
cmp
pushf
xor
add
inc
dec
cmp
sarl
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
cltd
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
cltd
lret
xor
mov
lea
xor
add
inc
dec
mov
addr16
inc
sub
inc
xor
push
mov
add
inc
decl
add
inc
mov
cltd
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
test
cltd
add
jmp
mov
add
mov
jmp
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
mov
ret
xor
add
ss
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
call
in
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
adc
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
les
inc
push
aas
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
ss
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
pushf
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
xor
inc
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
cltd
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
cltd
cmp
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
nop
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
std
mov
clc
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
jmp
mov
jle
inc
nop
in
inc
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
leave
add
and
inc
jne
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
jmp
jge
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
cmc
or
out
mov
pop
push
cmp
sar
incl
inc
in
jle
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
mov
mov
push
insb
push
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
ss
lea
mov
fadd
dec
lds
out
inc
lea
inc
dec
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
jmp
addb
mov
sub
add
js
data16
idiv
inc
fadd
mov
andl
flds
pop
push
jmp
push
jmp
addl
mov
inc
out
add
mov
outsb
inc
jle
idivb
mov
orl
jb
decl
mov
test
inc
rorb
adc
mov
mov
cmp
test
pushl
mov
add
jmp
pushf
decl
add
data16
add
add
test
inc
mov
mov
inc
cmpb
mov
add
push
mov
call
mov
data16
test
out
lea
test
inc
ljmp
decl
test
incl
test
rclb
test
inc
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
std
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
cwtd
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
jmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
add
lea
push
rolb
xor
lea
test
decl
mov
dec
clc
call
lea
lea
test
popf
push
add
xor
cltd
mov
incl
push
push
inc
shlb
lea
call
test
incl
clc
call
jmp
inc
jae
add
mov
mov
data16
inc
lea
test
inc
dec
test
pushl
jnp
mov
mov
lcall
incl
pop
mov
mov
decl
mov
mov
test
incb
incl
ss
pushf
inc
mov
hlt
test
cmp
lock
test
clc
mov
lahf
lret
mov
add
add
rorb
mov
incl
cld
mov
add
jge
test
sbb
xchg
call
push
inc
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
cld
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
cltd
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
out
adc
jne
mov
fcomps
add
incl
mov
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
add
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
cmpl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
ss
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
cltd
pushf
xor
jne
mov
icebp
icebp
shl
mov
inc
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
cmp
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
testb
dec
mov
mov
xor
mov
in
jge
mov
dec
inc
xor
inc
hlt
ss
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
ss
fdivl
test
push
add
cmp
setns
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
push
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
in
and
or
in
xchg
add
add
push
inc
xor
add
push
push
inc
jmp
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
rol
call
jne
mov
inc
and
fs
bswap
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
cmp
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
idivb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
data16
pushf
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
sti
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
cltd
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
data16
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
jle
popa
data16
into
addr16
add
cmp
add
cld
add
cmp
pop
or
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
pop
mov
je
xor
mov
xor
pop
cmp
jne
mov
cld
push
pop
inc
stc
aaa
test
clc
test
xor
fs
or
decb
lret
aaa
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
data16
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
push
add
add
add
lret
lock
lret
cmp
pushf
jge
aaa
cld
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
cmp
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
cmp
add
data16
dec
fisttps
add
ret
lea
add
ss
call
clc
inc
shll
cltd
push
xor
inc
cmp
jbe
mov
or
inc
test
cmp
in
hlt
push
push
push
push
mov
cltd
cltd
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
cmp
pushf
jb
add
inc
daa
inc
inc
xor
dec
cltd
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
cmp
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
ss
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
ss
pushf
pop
mov
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
incb
cmp
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
ss
pushf
push
movl
inc
cmpb
pushf
addr16
shl
dec
xchg
jmp
aam
test
mov
or
add
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
ss
pushf
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
clc
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
dec
pushf
mov
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
mov
push
ret
call
call
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
cltd
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
leave
call
call
in
jmp
and
call
pushf
inc
mov
pop
push
in
ret
and
mov
and
mov
or
lcall
or
decl
jl
adc
dec
cmp
mov
and
xor
test
jge
push
jmp
adc
dec
pop
ret
push
jmp
mov
add
adc
or
add
add
adc
std
dec
adc
outsb
adc
sahf
xor
add
adc
fs
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
adc
adc
add
push
adc
roll
int
adc
aaa
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
push
adc
sbb
adc
mov
dec
adc
inc
or
add
adc
mov
inc
inc
add
inc
add
inc
add
inc
inc
add
inc
inc
add
push
add
imul
sahf
push
adc
jle
adc
jbe
adc
cmp
add
adc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
adc
dec
dec
adc
dec
popa
adc
adc
add
push
adc
hlt
pop
adc
dec
pop
adc
testl
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
xor
cmp
push
add
push
xor
xor
push
add
inc
pop
dec
push
push
add
pop
aaa
xor
xor
inc
pop
add
cmp
push
cmp
add
cmp
cmp
pop
inc
dec
inc
push
add
xor
xor
inc
xor
xor
xor
dec
xor
add
inc
pop
ss
pop
inc
push
dec
add
push
pop
inc
push
push
push
dec
add
inc
pop
xor
push
pop
pop
xor
push
push
pop
xor
push
dec
xor
xor
xor
inc
pop
pop
xor
push
dec
push
xor
pop
push
xor
inc
add
push
cmp
pop
inc
xor
aaa
xor
pop
inc
cmp
dec
pop
dec
add
pop
push
push
aaa
dec
pop
xor
dec
dec
add
xor
push
pop
push
inc
inc
inc
add
inc
cmp
push
push
pop
dec
inc
push
pop
inc
add
inc
pop
push
inc
pop
inc
ss
push
inc
dec
inc
add
inc
xor
dec
pop
cmp
cmp
push
pop
push
pop
dec
push
dec
dec
inc
pop
dec
xor
push
inc
pop
xor
add
push
pop
inc
push
dec
xor
pop
dec
xor
inc
inc
dec
pop
push
dec
xor
dec
ss
aaa
aaa
dec
dec
add
ss
inc
inc
xor
dec
ss
pop
dec
dec
inc
inc
dec
xor
xor
add
add
add
add
inc
add
dec
add
add
inc
add
add
xor
xor
pop
add
xor
dec
add
pop
add
add
dec
add
add
dec
add
dec
add
xor
xor
pop
add
inc
add
add
push
add
add
pop
add
xor
add
add
dec
add
add
pop
add
pop
add
add
add
add
xor
xor
pop
add
pop
add
pop
add
add
add
dec
add
add
add
push
add
pop
add
xor
inc
add
add
add
add
cmp
push
add
add
dec
add
add
dec
add
inc
add
add
xor
pop
add
add
add
add
add
push
add
xor
pop
add
inc
add
add
push
add
add
xor
xor
xor
xor
pop
add
add
add
inc
add
add
dec
add
add
add
add
add
add
cmp
dec
add
add
pop
add
dec
add
add
dec
add
dec
add
add
inc
push
aad
adc
dec
pop
cs
add
add
pop
popa
jbe
jns
dec
jb
pop
bound
gs
arpl
js
je
jno
jno
bound
jo
bound
