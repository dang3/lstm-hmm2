push
mov
sub
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
subl
push
mov
mov
sub
add
push
mov
xor
xor
mov
sbbl
add
andl
mov
mov
sbb
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
sbb
mov
mov
mov
sub
add
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
mov
movl
sbb
mov
and
xor
add
adcl
mov
mov
mov
mov
mov
and
mov
adcl
mov
and
mov
xor
push
neg
pop
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
movl
mov
and
movl
mov
xorl
mov
mov
orl
mov
and
mov
xor
movl
add
mov
adcl
lea
sbbl
mov
mov
or
mov
adcl
xor
add
mov
lea
andl
push
mov
movl
xor
add
andl
push
subl
mov
xorl
push
subl
pushl
xorl
call
andl
mov
inc
mov
cmpl
jb
jmp
push
pushl
pushl
call
cmpl
jb
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
movl
mov
incl
mov
lea
incl
mov
movzbl
or
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
push
call
jmp
mov
sbb
xor
sub
mov
sub
mov
mov
movzwl
movl
mov
mov
cmp
movl
je
add
mov
mov
sbbl
xor
xor
lea
mov
orl
xor
div
mov
xor
mov
xor
orl
xor
orl
sub
cmp
jne
mov
mov
add
mov
mov
subl
xor
addl
xor
add
add
movl
mov
movl
cmp
movl
jae
and
lea
not
mov
mov
xor
xorl
add
lea
mov
mov
mov
cmp
jbe
addl
addl
movl
jmp
addl
addl
sub
mov
xorl
xor
decl
inc
sbbl
incl
addl
add
cmp
movl
jb
notl
mov
xor
mov
movl
xor
xorl
mov
sub
add
mov
adcl
xor
sub
andl
ror
movzwl
sbb
xor
mov
mov
mov
adc
mov
orl
jmp
pop
mov
pop
mov
add
repz
subl
and
cmp
sub
cmp
jae
jb
fcmovu
imul
jb
int3
bound
lea
xchg
xchg
inc
mov
sub
push
rol
repnz
sub
nop
ss
mov
aad
jb
adc
and
aaa
jo
lods
sub
mov
notb
test
pusha
push
and
cmpl
fwait
dec
or
jecxz
imul
xchg
ss
leave
int
outsb
cmc
pop
imul
or
mov
shll
imul
jno
add
xlat
call
pop
lods
insb
inc
inc
sub
aaa
sub
lret
cmp
mov
xchg
pop
push
sub
lods
out
add
add
loope
cmp
sub
jbe
adc
scas
in
xor
lret
xor
sbb
add
ficomps
test
mov
xor
sub
scas
aas
sbb
fsubrl
sysenter
lea
mov
mov
loope
jecxz
movsb
cmc
or
out
dec
pop
aam
pop
adc
out
pop
cmpsb
jecxz
in
faddp
jo
or
cmp
push
jg,pt
jl
stos
sbb
testb
cmp
sub
add
adc
lcall
int3
leave
add
lret
fs
subl
push
dec
xor
fdiv
jmp
or
ret
jmp
mov
je
xor
lds
out
bound
mov
sahf
inc
or
add
adc
in
test
xchg
insb
lock
pop
adc
cwtl
cmpsb
ret
or
and
je
pop
lods
xchg
rolb
and
cmp
cli
push
jnp
je
lock
cltd
out
insb
divb
mov
test
mov
ja
ja
xor
lods
adc
jmp
push
fs
ss
or
mov
mov
js
cmc
inc
mov
sarl
scas
ret
pop
pop
mov
aam
ss
pushf
adc
ljmp
inc
push
cli
stos
fwait
dec
xor
mov
in
jae
push
and
inc
sub
jecxz
push
and
or
jg
adc
xorl
jne
pop
mov
pop
cwtl
andl
ds
sti
fbld
insb
xchg
or
ljmp
push
cmovae
inc
mov
sbb
pop
push
fs
aam
rclb
xor
in
in
jg
inc
sub
sahf
call
jp
shlb
jg
or
addb
xor
push
clc
push
decl
sub
cmp
rorl
hlt
push
int3
xchg
xchg
add
sbb
sbb
fimull
int
sbb
inc
cltd
add
inc
lea
test
sbb
push
adc
fstl
sbb
mov
or
or
dec
daa
test
in
in
dec
adcl
mov
je
rcrl
xor
mov
ljmp
aam
lret
pop
lock
aad
inc
ss
inc
nop
movl
hlt
repnz
sub
cmp
jl
out
stos
xlat
cli
cmp
mov
in
ljmp
sahf
iret
or
outsl
mov
adc
lods
imul
pushf
rcrl
push
cmp
dec
fidivs
xchg
fisubl
mov
and
or
jmp
jmp
nop
cmc
or
outsl
cmp
out
sbb
push
inc
imul
sahf
rcll
pop
ss
mov
or
rolb
pusha
cmc
stos
aaa
lahf
out
jns
mov
adc
sub
test
mov
filds
push
in
cmp
movsl
cmp
cmp
in
xchg
cmp
inc
loop
rcrb
xorl
sarb
sub
outsb
xlat
outsb
adc
scas
push
fstl
sti
stos
popf
mov
bound
rorl
mov
rorb
dec
lea
add
ret
inc
bound
aaa
pop
je
fwait
sbb
popf
dec
stos
jns
xchg
mov
xor
aad
and
mov
mov
pop
in
jnp
mov
cmpsl
add
insb
lods
sub
mov
xchg
xchg
mov
jmp
jg
loopne
loope
std
add
xor
out
pop
add
addb
or
pushf
xchg
rorl
into
push
push
sub
int3
xchg
add
push
mov
or
iret
scas
xor
and
sahf
imulb
inc
dec
jg
bound
ja
or
gs
ucomiss
repnz
and
rcll
shrb
pop
pushf
repnz
or
push
mov
jb
pop
out
pop
xor
loopne
pop
jmp
pop
les
adc
cmpsl
pushf
testb
sbb
cwtl
and
test
fiadds
jmp
pop
fidivs
xchg
out
je
scas
push
dec
xchg
gs
rorl
pop
repz
xchg
mov
mov
mov
cli
mov
ficomps
xchg
jg
ds
xor
jmp
sub
lret
pushf
push
pusha
andl
cmpsb
loop
cld
or
pop
and
adc
jle
add
int3
mov
jmp
nop
sub
or
pop
in
xor
mov
cmp
sarl
jbe
clc
inc
inc
mov
int
out
mov
xchg
mov
push
fsts
mov
inc
int3
sti
pop
sbb
mov
stos
fsubr
outsb
pop
dec
xbegin
inc
cltd
xchg
jmp
cmp
aad
xorl
aaa
stos
sub
pusha
and
cwtl
call
gs
aam
adc
lret
xor
push
out
pop
cmpsl
pop
roll
jns
pop
inc
sahf
cmp
push
fimuls
in
pop
outsb
lret
fcoml
out
jg
mov
mov
scas
rclb
and
mov
inc
sbb
xor
mov
jo
aas
inc
sahf
int3
ljmp
cmp
push
cmp
add
mov
les
inc
jbe
shlb
shlb
xlat
and
lock
shlb
js
inc
lcall
pop
push
and
sbb
cmpsb
mov
std
out
clc
add
mov
jg
push
test
jmp
xchg
lods
jecxz
in
xor
add
pusha
data16
dec
inc
pop
popf
popa
pop
aam
movsl
ficomps
mov
or
insl
in
xchg
cs
xchg
in
xor
inc
enter
das
pop
shlb
insb
mov
in
xlat
jno
cli
mov
jecxz
es
and
xchg
popf
lods
and
xor
sub
out
cmpsb
pop
xor
or
scas
movsb
pushf
dec
fbstp
inc
insb
jns
stos
mov
xchg
sub
int3
sub
psubusw
inc
sbb
das
add
repz
inc
cmpsl
popf
mov
dec
insb
pop
mov
cs
movsl
sti
sbb
fwait
sti
xor
std
mov
out
addr16
lock
std
jle
dec
mov
and
test
and
push
rep
fsubs
pop
ret
loopne
sbb
adc
or
ss
adc
add
dec
sub
sbb
pop
fistpl
cli
mov
inc
cwtl
sub
and
adcl
mov
jp
push
nop
and
jecxz
lcall
or
imulb
push
and
adc
fcomps
aas
sub
lcall
fidivl
jno
lock
addb
mov
repz
sbb
pop
rorl
dec
inc
xlat
es
jecxz
or
xor
data16
pop
shll
outsw
sar
push
into
push
xchg
rolb
sub
dec
cmp
sahf
jle
jae
test
insl
and
enter
out
inc
mov
lcall
jg
movsb
cmp
jno
inc
mov
adc
mov
es
test
push
jmp
jne
data16
aad
decb
push
adc
and
mov
adc
add
push
mov
add
and
sub
icebp
or
inc
push
sub
push
and
pop
insw
enter
in
mov
mov
mov
xchg
sub
push
loopne
cmpsb
lds
out
cwtl
xchg
popf
mov
cltd
int3
mov
push
cmp
imulb
cmc
and
repnz
adc
addr16
in
pushf
and
insb
fcoml
ss
pop
pop
jecxz
xchg
jl
js
pop
inc
xor
xor
jno
dec
in
pop
inc
push
out
inc
mov
test
inc
out
sbb
xor
lea
popa
mov
ja
mov
in
push
xor
je
cmp
inc
jecxz
insl
cmp
clc
insl
cmp
loop
outsl
faddp
pop
and
cwtl
imul
mov
imul
mov
gs
adc
sbb
out
dec
jne
ds
ljmp
cmp
or
fisubs
add
or
je
shrl
sbb
push
cmpsb
dec
inc
jle
mov
cwtl
jb
sbb
inc
inc
xchg
in
into
xchg
xor
or
stos
stc
mov
nop
cs
add
cmp
pop
lahf
shlb
stos
rorb
xlat
clc
std
pop
sub
and
push
push
arpl
push
ss
mov
loopne
cmpsl
insb
push
xor
and
stos
push
ja
fbld
xchg
into
add
addr16
mov
js
jnp
jae
aas
mov
xor
inc
std
divb
mov
push
fwait
pop
ss
lock
insl
jb
cmpsl
mov
shlb
push
pop
fiaddl
sti
cmpsb
push
inc
adc
push
cltd
popf
loop
das
adc
in
test
aad
mov
push
jae
mov
add
cmp
shll
mov
mov
dec
stos
mov
lahf
daa
les
repz
test
pop
enter
fwait
pop
enter
lret
loopne
insl
aam
iret
cltd
inc
fdivrp
inc
xor
sub
mov
dec
and
addr16
out
lods
pop
es
fwait
sbb
pop
cs
and
out
mov
add
inc
mov
scas
daa
lret
push
add
jbe
and
sarl
mov
jl
arpl
sub
jnp
sti
je
sbb
xor
dec
pop
shr
fimull
in
inc
out
addr16
sbb
push
pop
xchg
shlb
jmp
cmp
pop
cs
addr16
xchg
mov
jne
push
cmp
inc
dec
outsb
and
addl
add
pop
xchg
add
xor
and
fldl
xchg
lea
popf
push
negb
subl
mov
repz
or
stos
inc
jno
jbe
lret
mov
out
insl
and
push
aaa
pinsrw
mov
mov
js
and
mov
push
loop
mov
out
inc
add
cmc
inc
mov
cs
sub
inc
addr16
data16
inc
loop
jp
dec
jge
lahf
pop
ret
dec
pop
sahf
outsb
push
or
mov
xor
cmp
adc
in
js
jae
rcrb
mov
mov
or
hlt
shl
sub
out
fwait
int3
push
xchg
dec
cmp
dec
das
push
xchg
fnstenv
dec
mov
lcall
cld
outsl
imul
and
dec
xchg
xor
ret
mov
mov
and
ljmp
aam
xchg
mov
aad
mov
mov
fsubrl
mov
lret
sub
data16
mov
and
ja
mov
repz
or
cwtl
outsl
mov
outsl
cmp
cld
mov
cwtl
push
nop
xor
arpl
inc
lret
mov
js
jb
sbb
in
push
clc
push
jg
mov
adcl
push
sbb
pop
add
pop
mov
scas
lds
and
push
mov
ret
rcll
jl
outsb
shrl
daa
add
je
pop
cmp
mov
aaa
pushf
enter
arpl
sbb
sbb
mov
cmp
and
lret
lock
dec
repnz
in
inc
shll
pop
inc
mov
pop
pop
loopne
loop
mov
outsb
xor
lock
mov
and
or
fdivrs
cli
mov
jl
ds
adc
loopne
jl
and
rorl
decb
or
cmp
xor
lahf
aam
jbe
in
out
mov
in
and
cmp
or
mov
xor
dec
xor
rcrb
push
cwtl
mov
arpl
cs
xchg
jmp
movb
outsb
push
in
pop
mov
in
cmp
cltd
testl
enter
jmp
add
pop
cmpsl
inc
and
xchg
mov
xlat
adc
dec
pop
shr
fistl
sbb
rcr
aad
movsl
and
lret
sub
mov
test
mov
fs
das
test
pushf
sbb
mov
xchg
push
andb
ret
xor
cmp
bound
jle
mov
push
push
adc
jecxz
inc
loope
inc
arpl
loop
lret
push
pop
xchg
or
dec
push
or
ljmp
xor
in
cmpl
repz
dec
jge
inc
popa
enter
fstps
jecxz
dec
pop
inc
inc
xlat
mov
xlat
ss
fwait
test
test
test
pushf
or
add
mov
je
mov
sbbb
adc
xchg
daa
mov
aam
bound
imul
sbb
loop
aam
int
mov
jmp
mov
push
movsb
arpl
stos
outsb
jmp
mov
lds
cmpsb
add
mov
push
pushf
mov
add
clc
and
aam
movsb
sbb
push
sbb
xor
jecxz
test
sub
jb
or
and
mov
xchg
out
mov
or
xchg
sbbl
mov
and
insl
and
data16
icebp
pushf
insb
hlt
cmp
scas
adc
or
ret
dec
xor
mov
pop
lock
ret
repz
xorl
ss
lds
dec
test
lock
push
push
sahf
jecxz
jb
lahf
lcall
adc
sti
xor
xor
add
shll
psrld
mov
xchg
std
shll
out
xchg
pop
enter
add
mov
jno
pop
cmpsb
and
jne
push
je
dec
mov
popa
fwait
push
dec
inc
in
push
icebp
shll
dec
cwtl
mov
fisubrl
push
shl
std
cmpb
inc
aas
mov
jnp
mov
fcmove
lret
ret
and
repz
fsubl
or
sub
punpcklwd
test
fwait
orw
daa
pop
dec
jmp
testl
shll
jae
sbb
mov
lods
jne
cmp
insl
cmp
aaa
sbb
cmpsl
pop
push
insb
xchg
cli
test
mov
mov
out
bound
sbb
repnz
dec
mov
jecxz
loop
jl
jb
xor
gs
inc
mov
adc
adc
insb
pop
test
ss
imul
cmpps
int
jecxz
pop
push
add
mov
outsl
pop
loopne
gs
or
out
push
lahf
push
inc
andl
sbb
sub
test
jbe
sbb
fdivrp
aaa
and
xor
pushf
imul
fwait
mov
dec
es
push
sub
mov
sbb
mov
sarl
xchg
dec
jno
dec
data16
stos
or
xchg
push
sbb
movsl
vcvtsd2ss
in
fwait
xlat
mov
jp
xor
push
inc
adc
add
stc
ret
hlt
pop
sti
out
sub
dec
xchg
ss
push
push
mov
pop
popa
mov
aam
or
jo
iret
mov
hlt
jl
xchg
dec
lea
bnd
sub
mov
push
push
xchg
imull
ja
pop
or
xor
pop
jecxz
mov
sbb
mov
mov
push
ss
bound
test
inc
lret
jne
stc
mov
movl
cmp
add
xor
or
jae
mov
cli
jmp
adc
jb
or
in
dec
lods
pop
jmp
xor
mov
ja
sahf
je
sub
jmp
repnz
sub
mov
repz
pop
add
shrl
iret
mov
or
push
jo
cmp
out
sarb
mov
stos
push
cmp
xchg
popf
jmp
pushf
not
mov
pusha
mov
aas
inc
shrl
aaa
stos
pop
stc
pop
mov
dec
adc
push
das
in
inc
and
loopne
insl
mov
insl
mov
ds
into
or
call
test
dec
push
fisubl
jp
stos
push
cli
popa
cld
aaa
xor
mov
mov
mov
ja
xlat
xchg
mov
ss
and
iret
jmp
and
jmp
push
push
test
jp
lahf
movsl
fldenv
xor
lahf
sub
jmp
or
negb
sub
adc
and
ret
jns
js
pushf
inc
mov
add
mov
jl
dec
call
xorb
bswap
ja
jge
int3
sub
inc
mov
pop
mov
jo
sbbb
pusha
test
daa
fwait
cmpsl
pop
mov
dec
and
push
or
fxrstor
lret
test
sbb
mov
mov
aas
dec
lret
sub
cmp
sbb
or
jl
jecxz
xchg
cmc
sbb
dec
pop
add
sbb
xorl
and
inc
out
or
sub
dec
jle
sub
push
fdiv
fwait
pop
adc
push
jnp
lahf
mov
sbb
jecxz
sahf
cltd
xlat
shrb
xchg
bound
sbb
enter
aad
fsubr
cmp
jne
lea
ja
push
ljmp
xor
sub
jno
jno
cltd
loopne
mov
add
cltd
add
int3
std
and
mov
jne
into
int3
cmp
getsec
jb
xchg
pop
je
loop
mov
lea
pop
pop
mov
mov
dec
mov
and
pop
cli
call
add
and
sbb
or
cmp
adc
push
aad
and
inc
dec
or
aas
shll
xor
pushf
xor
mov
jno
cmp
rcrl
punpcklwd
dec
icebp
pop
xchg
sub
or
inc
pusha
inc
mov
mov
and
inc
jl
xchg
jae
jg
addr16
inc
mov
scas
int3
out
sub
ds
orb
dec
jo
jbe
and
popf
lea
adc
and
pop
cmpsb
cld
mov
sbb
ss
cmpsl
push
in
rorl
pop
dec
xor
ret
lea
jne
cmp
inc
testl
dec
xchg
in
xor
xchg
pop
cmp
pop
xchg
dec
pop
mov
mov
dec
leave
push
insb
dec
add
or
cmp
mov
fimuls
xor
jecxz
mov
int3
addb
cmp
cltd
add
loope
pop
inc
adc
adc
adc
ss
cmp
loop
cli
mov
mov
cld
arpl
inc
pushf
jbe
icebp
aad
push
lods
icebp
pop
xchg
stos
js
pusha
fldl
ss
out
mov
shr
loope
stc
mov
fcomps
inc
pop
lret
test
add
imul
mov
loop
ret
popa
into
sbb
sub
ja
fwait
adc
jecxz
pop
jbe
popf
loop
andl
xchg
mov
add
mov
cmpsl
dec
inc
fnstsw
xchg
repnz
out
jecxz
aaa
cmpsb
mov
test
dec
jnp
cld
lds
inc
jae
hlt
into
rorb
xchg
jmp
pusha
add
mov
push
scas
xchg
adcl
mov
push
imul
mov
fistl
pop
movsl
dec
mov
stc
sbb
and
stos
adc
fldenv
into
lahf
lahf
call
andl
mov
fistps
test
clc
icebp
lods
inc
aam
xchg
add
lods
pop
push
sbb
in
add
xchg
movsl
mov
dec
jg
adc
push
leave
mov
pop
nop
lret
fs
adc
add
out
shlb
scas
adc
push
push
popf
fdivr
loope
mov
sbbl
sbb
ds
and
repnz
sbb
lods
test
mov
inc
stc
push
and
pop
shll
pop
clc
pop
xlat
sub
in
or
shll
add
jmp
mov
mov
mov
cmc
jbe
sbb
outsb
pop
sbb
sbb
jno
xchg
cmp
jno
int
ja
jno
js
stos
jmp
jmp
data16
aad
pop
pop
add
mov
inc
lock
mov
in
movsb
cmpsl
push
xchg
ss
in
dec
dec
jbe
dec
push
pushf
xchg
jp
movsl
out
je
shlb
outsl
cs
lds
leave
pop
push
fisubrs
mov
cmp
or
test
xchg
push
push
icebp
les
dec
mov
daa
xchg
lcall
imul
aas
or
mov
hlt
add
imul
and
dec
shlb
push
pop
leave
xchg
dec
addr16
pop
xor
add
out
mov
jo
iret
pushl
scas
movsb
mov
cmp
movsl
dec
push
jge
cli
mov
sub
out
sub
ljmp
mov
mov
pop
adc
xchg
cld
push
rclb
push
imul
adc
cmp
push
fwait
out
test
or
mov
jecxz
faddl
and
mov
jno
sbb
fdivs
fsubrp
jne
jmp
fisttps
enter
cmp
gs
aam
adc
pop
and
mov
dec
ss
test
pop
push
push
add
insb
dec
out
adc
add
inc
mov
fwait
mov
fs
insl
aas
pop
pop
ret
call
adc
sti
cmp
push
data16
ds
cltd
imul
cmc
pop
outsl
out
pushf
push
and
ljmp
ret
enter
loope
es
mov
dec
adc
and
xchg
mov
and
insb
push
into
mov
xor
jno
adc
cmp
iret
incb
mov
add
push
lods
icebp
jmp
xor
mov
out
xor
aad
adc
mov
shl
add
in
mov
div
add
or
xchg
mov
icebp
shlb
ja
adc
rol
test
mov
push
xlat
shl
in
mov
bound
push
iret
stc
jmp
mov
xchg
pusha
dec
and
stos
int
fisubs
pop
scas
sbb
bound
xchg
scas
movsb
mov
mov
sbb
mov
pushf
dec
or
xor
out
movsb
aas
jae
mov
call
stos
xchg
sub
test
lea
je
cmp
outsl
int
roll
icebp
popf
loopne
call
ret
bound
sub
cltd
jge
pop
push
mov
xchg
cmp
add
fnop
add
lods
popa
sti
pop
pop
cmp
inc
inc
push
pushf
loopne
loop
outsl
sub
push
push
ljmp
pusha
dec
push
and
popf
cmp
sbb
jnp
jp
sbb
inc
sub
pushf
in
lret
out
mov
jg
mov
pop
lock
mov
call
fbld
mov
fcom
test
xor
lret
cmp
jnp
sbb
adc
cld
mov
jge
sub
jne
cmp
and
out
adc
xor
mov
hlt
out
popa
iret
push
xor
xchg
loopne
out
jmp
pop
es
ljmp
add
hlt
popa
fs
xchg
mov
fildl
leave
sbb
jbe
jbe
mov
popa
mov
pop
in
shlb
mov
add
or
or
clc
clc
mov
pushf
fcmovu
xchg
cmp
fst
test
jne
or
pop
jae
movsb
xor
divl
pop
out
xchg
add
pop
dec
mov
xchg
and
dec
or
xchg
push
std
adc
popa
divb
pushf
inc
push
dec
xor
push
mov
xor
mov
popf
dec
jbe
mov
pop
push
in
jo
fistpl
test
sbb
in
aad
lock
aad
test
adc
and
xchg
and
dec
mov
xchg
outsl
jno
std
jle
xchg
dec
out
or
mov
push
or
jg
lods
xchg
or
mov
in
fcomp
std
aaa
cmpsl
sbb
adc
lods
call
lahf
lods
mov
fldcw
sti
shlb
xor
std
pop
adc
imul
loop
adc
in
jle
pop
mov
lahf
lods
into
cmpsb
push
cmp
jae
adc
inc
adc
pop
xchg
enter
ss
scas
push
mov
lret
jmp
popa
xchg
stos
adc
insl
ss
mov
subb
dec
adc
daa
outsl
pop
insb
mov
out
sub
xorb
push
out
lcall
inc
pusha
adc
jb
jg
fstpl
sbb
lock
pushf
cmpl
adc
jns
jne
imul
int3
jbe
scas
test
xchg
pop
pop
mov
mov
adc
and
cmc
xchg
enter
jecxz
lea
push
mov
cmpsl
xor
pop
out
lret
ret
and
add
sbb
lock
cmp
push
sub
repnz
das
cmp
xchg
cmc
outsl
and
sarb
push
fidivl
jae
loop
sub
cs
lcall
pop
movsl
vpmuludq
icebp
test
pop
add
shll
pushf
push
sbb
adc
sub
ds
testb
inc
sti
cs
add
sub
jnp
int3
fiaddl
cld
out
sti
push
xchg
mov
mov
rolb
cmp
lahf
outsl
inc
mov
push
xchg
inc
adc
sub
insb
xor
sbb
lcall
in
pop
inc
aaa
dec
and
dec
bound
xorl
repz
aaa
xchg
mov
enter
lret
jmp
lock
scas
fnstsw
sarl
mov
sub
xchg
js
and
and
mov
out
adc
hlt
icebp
dec
stos
cmp
mov
push
fcmovu
mov
xor
dec
sub
test
cli
jae
insb
mov
fs
ljmp
and
push
mov
jge
scas
sbb
inc
jp
ret
add
inc
mov
xchg
arpl
es
imulb
sbb
mov
mov
ja
icebp
sub
mov
jo
sbb
and
int
jnp
xorb
cmpb
inc
rclb
inc
lahf
xor
and
jmp
cmpsl
cmpsl
loop
xlat
daa
cmp
mov
int3
pop
mov
movsb
std
add
or
jbe
xor
leave
leave
cmp
cmp
cli
add
jg
pop
xchg
sbb
xchg
stc
mov
mov
add
pop
push
inc
fcoml
jg
lds
adc
test
pop
and
xlat
mov
push
mov
sbb
scas
inc
inc
inc
add
dec
sbb
test
push
fimull
xchg
imul
dec
mov
jno
andb
push
pop
pop
adc
les
lcall
mov
cmp
jb
jg
popf
mov
pop
scas
dec
or
and
idivb
jmp
stos
scas
cmp
mov
shl
rcl
pop
out
movsb
push
mov
mov
cli
dec
aaa
pop
mov
stos
push
das
sub
shl
lahf
add
jo
jle
lock
lcall
push
gs
sbb
jo
sub
dec
pop
mov
bound
leave
andl
rolb
es
js
push
adc
dec
jmp
jle
roll
and
dec
insl
stos
gs
jae
or
ss
fucom
js
dec
adc
cs
arpl
hlt
jmp
rcr
adc
cmp
sub
test
fisttps
ljmp
push
jl
fists
jl
pop
ror
xchg
sti
cwtl
lock
mov
pop
add
lods
orl
add
or
add
fwait
aam
addr16
mov
gs
and
mov
or
sti
adc
imul
daa
add
stos
test
rcll
and
jg
es
sbb
mov
outsb
mov
ret
call
negb
mov
std
pop
scas
push
add
and
dec
outsb
das
jl
lahf
es
jle
jbe
cmp
ja
lcall
mov
jne
push
sbb
ret
xchg
mov
xchg
loope
mov
mov
push
incb
and
pop
jle
into
je
xlat
js
dec
mov
aas
add
xor
inc
fwait
gs
dec
add
or
arpl
add
out
dec
fmuls
mov
decl
fs
in
shlb
mov
inc
adc
das
lods
dec
shll
dec
iret
sub
pop
push
xor
xchg
lods
or
fmulp
repz
shll
adc
mov
xchg
cmp
lock
imul
mov
es
adc
sahf
ja
js
jne
iret
fstpt
mov
aaa
movsl
or
push
test
sbb
cmp
adc
adc
outsb
scas
inc
pop
jp
pop
imul
pop
or
mov
inc
cs
add
xchg
mov
mov
lods
and
xor
and
pop
adc
add
cs
xchg
inc
mov
inc
cmc
mov
push
push
inc
arpl
rolb
outsl
leave
leave
sub
int3
jo
fcompl
mov
or
scas
loope
mov
sub
out
adc
dec
out
mov
nop
les
cmpsl
push
shll
insl
sub
mov
dec
inc
fwait
inc
push
push
inc
sub
inc
adcb
lcall
repz
inc
dec
loop
arpl
mov
adc
adc
xchg
fucompp
std
std
add
loop
pop
jnp
cmp
cltd
xor
push
stos
mov
jb
enter
pop
mov
mov
rorl
push
adc
cmp
pop
outsb
stos
xchg
adc
shlb
and
jl
lods
xchg
addr16
cmp
lds
jmp
xchg
xorl
xor
adcb
xchg
adc
lods
push
sub
xor
xrelease
xor
sbb
xor
sbb
cmp
mov
notb
dec
mov
gs
jp
mov
sub
sbb
cltd
mov
pop
lret
out
inc
dec
pop
add
ds
adc
in
dec
sub
xor
cmp
jne
or
mov
andl
mov
adcl
xor
xorl
xor
sub
sub
mov
mov
xor
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
jmp
mov
and
out
mov
ffree
in
pop
addl
adc
and
dec
int
dec
adc
pop
out
iret
push
xchg
fwait
mov
dec
je
call
std
sub
or
addr16
in
push
adc
clc
or
mov
ss
mov
mov
leave
jb
popf
mov
jp
inc
push
sti
movsl
lcall
mov
out
mov
mov
mov
and
imul
movsb
xor
lret
out
cli
push
cmpsl
movhps
adc
jmp
push
lret
std
test
jno
aam
adc
xchg
popf
mov
pusha
pop
mov
adc
aam
mov
inc
in
les
xor
mov
or
jo
pop
xchg
sub
nop
test
mov
jl
sarb
xchg
lods
or
mov
lea
add
cltd
lods
test
add
dec
je
xchg
cld
and
pop
jns
inc
sar
jle
leave
xor
xor
and
adc
pop
psubb
dec
pop
shr
push
sti
push
sub
int3
out
leave
sub
decb
lock
ja
addr16
nop
ja
nop
xchg
adc
leave
mov
push
clc
pop
mov
and
or
lds
out
aaa
in
inc
mov
lret
xchg
adc
adc
subl
insl
add
inc
mov
xchg
xor
enter
jb
sub
aas
stc
es
orb
or
sbb
xchg
jno
sbb
std
enter
fmull
or
out
out
mov
fimull
jmp
cltd
and
jb
push
lret
inc
adc
adc
jnp
int
insb
push
sbb
aad
jns
or
pop
adc
mov
adc
push
negl
add
jge
push
movb
push
and
lahf
ror
xor
jp
xor
in
mov
rorb
lea
daa
jne
addr16
cli
out
pushw
lret
push
fisubs
ret
hlt
or
or
mov
iret
stos
cwtl
push
mull
addr16
addr16
cmp
pop
cmpsl
xchg
dec
mov
push
mov
cltd
cmp
lahf
mov
and
mov
cwtl
in
icebp
dec
mov
aaa
imul
push
cmp
jo
shr
pop
sti
loop
mov
test
inc
jle
pushf
pushf
inc
fmull
push
lahf
jnp
cmp
xor
adc
pop
jnp
daa
mov
or
fisubrl
addr16
inc
cmp
mov
dec
sbb
pop
imul
sbb
jmp
fiadds
or
inc
shll
jbe
mov
shrl
inc
movsl
lock
gs
adc
xchg
fwait
xor
test
popf
ljmp
rclb
lods
fisubrs
pop
jnp
fcmovnb
mov
add
dec
bound
jbe
fwait
jno
dec
mov
or
mov
pop
fs
fcomi
stos
inc
push
xor
cmp
cwtl
std
pop
mov
adc
repnz
inc
out
in
call
divl
dec
xchg
sub
mov
cmp
or
pop
das
loopne
stos
fsubr
sub
xor
inc
jle
sbb
int3
push
mov
jecxz
pop
mov
mov
icebp
inc
push
idivl
xchg
addb
inc
leave
cmp
add
xchg
xchg
and
fmull
mov
lock
rcrb
pushf
add
xchg
add
fdiv
loope
loopne
or
fstpl
xchg
jae
mov
cld
lds
stos
pop
lret
lret
adc
leave
movsl
leave
mov
adc
mov
and
and
cmpsb
orb
gs
jp
std
repz
and
pop
push
xlat
lods
lds
leave
cmp
outsl
dec
hlt
xor
lods
mov
cltd
std
add
cmp
ret
out
push
mov
repnz
cs
add
out
je
sti
shrl
xor
cmc
mov
sbb
aas
loopne
pop
sub
fldl
or
sub
pop
inc
gs
leave
or
inc
stos
call
cltd
hlt
jb
mov
sub
pop
std
sub
fwait
xor
cmp
out
adc
stc
ss
jne
int3
push
adc
sbb
aam
add
test
pop
imul
imul
xor
or
repnz
fcompl
pop
popl
inc
push
xchg
sti
and
mov
sub
dec
cs
mov
fs
test
sub
jb
inc
pusha
nop
cmp
inc
sti
dec
xchg
push
jbe
stos
sub
mov
pop
imul
pop
inc
lea
xchg
xlat
aam
mov
sub
sbb
xchg
jp
jp
and
out
scas
dec
jecxz
adc
lods
shrl
mov
push
adc
inc
fdivs
or
xor
xor
or
jbe
imul
in
mov
push
int3
aad
jmp
or
push
push
push
nop
pop
rclb
cmc
aaa
dec
cmp
jp
mov
mov
pop
stos
push
add
std
js
push
cmp
and
jae
sbb
std
test
shrb
jmp
add
push
popf
mov
cmp
push
in
push
add
adc
aas
and
in
mov
test
scas
jb
in
inc
mov
cmp
repnz
lahf
dec
test
mov
mov
xchg
fistpl
push
adc
ds
inc
dec
mov
jnp
inc
rcll
and
sub
mov
sbb
sub
add
mov
inc
mov
and
test
adc
push
and
insb
inc
loopne
lods
out
and
ffreep
nop
div
in
xchg
push
imul
jecxz
or
inc
orb
jmp
and
and
rolb
stos
jl
scas
stc
sahf
xor
and
ret
insl
outsl
sbb
xchg
js
or
popa
enter
cmp
loopne
sbb
dec
dec
dec
and
shrl
xor
fsubrl
push
cmpsb
mov
mov
call
icebp
and
sub
dec
or
inc
and
insb
mov
idivl
ret
pushf
inc
dec
cmpxchg
sub
jae
int3
xchg
into
outsb
xchg
sbb
push
jg
jg
xor
imul
idivb
cmp
dec
ss
xchg
pop
adc
and
or
mov
or
daa
stos
or
push
stos
jnp
push
rcrb
in
and
pushf
fcompl
in
clc
sbb
xchg
mov
fildl
dec
in
and
inc
pusha
repz
jl
nop
hlt
jnp
jno
mov
cld
xlat
sub
sbb
sbb
sti
push
push
outsl
sti
mov
mov
loop
mov
in
add
xor
xor
dec
mov
xchg
push
pop
sbb
popa
icebp
test
mov
and
fwait
adc
xor
mov
nop
rcll
arpl
aaa
sbb
lret
add
or
cld
fs
into
cmc
imul
or
mov
dec
movsl
jns
jnp
insb
push
mov
sbb
pop
into
inc
test
xlat
ljmp
leave
mov
sub
aas
sarl
xchg
jl
jb
std
push
xchg
push
cmc
scas
and
popa
adc
jne
pushf
cmp
hlt
fsts
jbe
test
jg
inc
mov
mov
icebp
mov
add
imul
mov
out
call
jno
adc
mov
jnp
xchg
enter
jnp
pop
push
fiadds
xchg
pop
mov
clc
movsl
fimull
sahf
xchg
data16
jae
cmp
push
pop
bound
stc
push
mov
push
and
add
and
sti
jns
push
jp
jecxz
lock
and
gs
outsl
or
popa
adc
mov
loopew
jge
sbb
push
into
sub
sti
jbe
or
add
sbb
jl
popl
stos
or
in
ja
sub
andb
dec
jmp
push
pop
push
xchg
jge
imul
or
frstor
in
xchg
inc
int
cmp
or
inc
fcom
call
inc
sbb
cmp
and
sbbb
js
sbb
sarb
sbb
xchg
inc
add
in
jnp
jle
dec
adc
imul
mov
insb
or
mov
push
sbb
movsb
hlt
nop
repz
addr16
mov
adc
std
mov
push
pop
gs
fimuls
das
lahf
push
loopne
inc
test
cld
icebp
roll
repnz
fldl
xor
jo
xchg
int3
xlat
mov
loope
int
stos
repnz
jge
cmp
cmpsl
fwait
xlat
movl
cmc
jno
dec
cmc
inc
sbb
sbb
push
mov
sbbl
out
xor
mov
call
xchg
mov
adc
cmc
jns
jmp
jb
xor
push
pop
cmp
hlt
sbb
js
and
cmp
add
sub
push
arpl
mov
adc
mov
jns
js
pop
fcmovu
fadds
scas
mov
and
mov
sbb
sub
imul
rorb
jbe
jo
xor
mov
xchg
mov
sbb
cmc
in
jae
hlt
out
jb
mov
shr
pushf
push
xor
push
push
movsb
dec
sti
shrb
xor
and
outsb
mov
mov
mov
dec
push
push
movsb
xor
pushf
add
xchg
stc
sub
test
push
sbb
sbb
cwtl
and
ja
es
mov
lods
cwtl
aas
adc
and
loop
iret
pop
dec
iret
fmuls
out
pop
sti
stc
rclb
cmp
sbb
ret
mov
mov
stos
mov
test
cwtl
or
loope
icebp
or
add
adc
stos
sbb
daa
aad
std
call
test
add
inc
lahf
inc
mov
ja
sar
xlat
pop
subb
dec
dec
clc
adc
mov
fdiv
mov
orl
jae
xchg
insl
mov
adc
out
pop
aaa
pop
or
xchg
mov
inc
dec
xchg
mov
adc
jp,pn
adc
dec
xor
mov
push
repz
cld
mov
gs
xor
xor
push
mov
int
inc
sub
pop
test
adc
xorb
xchg
lods
test
push
js
xchg
adc
sub
mov
and
test
mov
pop
clc
add
pop
add
cmp
sbb
xchg
je
jb
outsb
sbb
mov
bnd
xchg
cmp
add
xchg
sarb
repnz
nop
stos
inc
xor
jmp
aad
mov
ret
sbb
sub
dec
jb
test
jno
xor
inc
dec
iret
sbb
aad
lods
subb
rcl
mov
push
mov
rcr
fucom
movb
sti
xchg
sbb
stc
mov
sub
jo
mov
xor
loop
jl
dec
pop
adc
es
add
sbb
popfw
or
mov
leave
aad
jge
lcall
xchg
movsb
mov
mov
lea
cmp
push
stos
cld
add
mov
in
mov
ljmp
icebp
mov
jne
add
std
mov
cmc
cwtl
inc
rorl
imul
xor
dec
push
movsl
lahf
data16
aam
ds
loopne
stc
push
push
fnstenv
lret
lahf
loope
adc
in
mov
out
mov
loopne
cmpsl
fisubrs
int
cmp
cs
sub
push
loope
fsts
xchg
cwtl
mov
stos
xchg
pop
stc
mov
cmpsb
lcall
push
addr16
bound
out
xchg
lods
jp
int3
test
into
and
ret
sub
mov
and
clc
outsl
int3
aam
addr16
push
loop
or
sbb
inc
pop
and
adc
cmp
xor
std
mov
xor
fstps
xchg
stos
cs
mov
pusha
das
sub
sbb
ja
gs
push
popa
cmp
ja
aas
in
inc
sub
iret
test
jno
scas
xchg
out
jo
popf
sub
shll
cltd
hlt
xor
in
imul
mov
cmpsb
mov
mov
mov
pop
testl
insl
enter
aaa
sub
cmp
js
cli
sbb
std
jae
or
mov
sbb
xchg
daa
lods
and
test
pop
mov
sbb
jle
push
dec
sub
add
jge
mov
ret
cmp
int
fcompl
pop
orb
push
or
std
rcr
scas
inc
nop
inc
lea
and
stc
xor
pop
aad
lea
pop
or
pop
adc
push
xor
loop
dec
es
in
vprotw
dec
mov
movsl
mov
in
mov
cmp
das
push
out
mulb
outsl
adc
pop
inc
imul
pushf
scas
nop
jecxz
arpl
into
fists
mov
cmpsb
fimull
dec
jne
xor
mov
sub
pop
fucomip
test
mov
pushl
push
jp
cwtl
lods
inc
ljmp
outsb
dec
fdivp
das
xchg
jo
and
sahf
sbb
mov
jmp
xchg
int
lods
pop
mov
mov
call
insl
sbb
inc
add
pop
lret
aad
xorl
mov
sbb
iret
push
or
js
sbb
adc
insb
out
ret
pop
popf
pop
mov
mov
xchg
mov
cmp
cli
jno
lret
jp
orl
fisubl
jns
in
mov
xchg
sbb
pop
outsb
cwtl
ret
jl
loope
dec
adc
leave
lret
jl
cmpsl
pop
sub
ret
lcall
push
ds
sbb
inc
cmpsl
rep
pop
insl
jp
testl
pop
inc
lds
add
into
sub
shll
sub
in
mov
xor
push
cmp
inc
inc
sub
adc
xchg
push
mov
lret
sbb
jnp
push
cltd
dec
int
stos
sub
dec
bound
rorb
xchg
aam
mov
movsl
add
test
dec
mov
stos
pop
jae
ja
add
lea
mov
mov
pop
fistps
jno
mov
pop
sbb
adc
out
push
dec
bnd
push
cmp
sbb
mov
fucomip
pop
adc
xor
loope
xchg
call
lea
jo
shlb
out
inc
mov
aam
inc
or
fimuls
jl
and
les
mov
adc
push
stos
int3
aas
xor
pop
out
in
stos
sub
mov
xor
jmp
das
cltd
iret
lahf
push
inc
ret
push
mov
leave
push
imul
jecxz
cmp
xor
scas
cltd
add
pusha
xchg
out
fisttps
pop
push
xchg
lcall
out
push
movsb
sbb
mov
dec
mov
push
adc
mov
mov
or
lea
xor
dec
movsb
sbb
jnp
cmpsb
loop
jp
outsb
es
out
xchg
in
popa
mov
dec
push
pop
out
xor
push
std
cmp
sub
inc
cmp
scas
jge
daa
addr16
dec
xchg
shll
outsb
cmpsl
mov
fildl
xor
leave
ret
movsl
clc
mov
jl
jno
cmp
or
arpl
pop
jl
int
in
lods
push
jne
popf
add
mov
sub
out
data16
dec
mov
faddl
popf
scas
inc
movsl
ret
adc
aam
sti
jl
xchg
test
or
out
mov
out
clc
cmpsl
pop
add
inc
jne
in
dec
cmp
into
fldcw
or
lret
or
ljmp
adc
loope
pop
mov
mov
rorl
into
cmpsb
and
sbbb
sub
inc
xchg
inc
jp
outsb
inc
xchg
pop
dec
adcl
push
cmp
rcrb
rcll
mov
push
aad
movaps
stos
arpl
jg
shl
xor
fisubrs
xor
mov
inc
icebp
and
sti
pusha
push
add
pop
loope
push
add
cmpsl
push
cmp
inc
test
or
mov
imul
out
inc
mov
imul
mov
cmpl
and
iret
ljmp
ljmp
ficoms
inc
pop
lret
cmp
cltd
push
pop
loop
inc
jle
jle
ljmp
mov
out
inc
jle
ret
inc
pop
pop
push
push
push
xchg
imul
mov
bound
mov
inc
iret
and
xchg
or
and
mov
ffreep
pop
xlat
daa
data16
nop
sbb
and
xchg
mov
fisttps
call
pop
cmp
adcb
mov
jp
popa
add
mov
in
fwait
inc
in
xchg
mov
jg
pushf
push
fnstsw
push
dec
out
jle
sti
stos
xchg
adc
adc
in
adc
sub
or
clc
imulb
mov
sub
sub
sub
and
ret
fsubl
jne
loop
imul
cmp
rcll
arpl
and
cmp
lea
jbe
mov
test
add
push
cmpsb
pop
xor
in
cmp
orb
dec
movsl
adc
shll
pop
mov
sub
imul
jo
into
in
stos
push
cltd
mov
xchg
sti
aas
dec
int
cltd
push
aaa
dec
dec
xchg
pop
stos
lcall
aaa
cld
fldcw
mov
test
dec
lods
xor
xor
or
or
ja
icebp
mov
sbb
aam
icebp
lock
mov
fs
lea
xchg
mov
lcall
push
test
enter
fdivr
cmp
xor
pop
mov
fcomps
xchg
into
scas
sahf
sub
dec
enter
mov
cmpsl
pop
cmp
out
cmc
mov
pop
inc
adc
and
and
aam
outsb
rcr
sbb
pop
mov
inc
xchg
or
imul
pop
fmuls
lcall
push
mov
pop
jecxz
shl
mov
jnp
jmp
pop
cwtl
sub
sub
push
sbb
push
call
sub
jbe
shlb
sbb
test
int
jbe
jl
hlt
popf
push
push
jl
rol
mov
mov
cmpsb
inc
or
xchg
imul
cli
jbe
dec
imul
fistl
pop
rcl
addb
push
mov
repnz
loopne
fidivrs
out
sbb
push
push
mov
or
test
cs
inc
fmull
push
pop
popf
addr16
xor
out
mov
xchg
icebp
xchg
xchg
dec
fnstcw
sbb
mov
test
sub
in
int3
es
sub
aam
cmpsb
cli
cmp
cs
cmp
add
mov
std
test
push
sub
popf
or
test
arpl
and
aad
xor
lock
inc
xor
xchg
movsl
sbb
mov
inc
outsl
ss
jl
adc
fxch
icebp
fsubr
imull
cmp
pop
xor
test
rcrl
mov
fwait
xlat
popf
adc
daa
ret
xor
mov
mov
out
jno
jne
pop
jae
stos
push
out
inc
xor
jb
cmpsl
lock
hlt
cmp
jge
lds
lods
dec
jge
out
les
add
inc
popf
lahf
cmpsl
leave
and
mov
mov
aaa
pusha
jnp
xchg
pop
ret
push
lea
sbb
movsl
sbb
cmp
mov
xchg
push
stos
icebp
sbb
xor
push
jecxz
push
stc
sbb
mov
push
pop
gs
xchg
in
pop
xor
aad
and
or
mov
scas
ret
lcall
cmp
int3
mov
lods
imul
ss
push
inc
pop
jmp
push
ret
jl
inc
out
inc
xchg
inc
enter
push
out
in
or
pushl
dec
mov
std
mov
pop
push
push
sub
xor
push
push
sub
pop
or
subl
arpl
adc
je
icebp
jl
insb
or
sbb
sbb
jbe
mov
cmp
lahf
sub
push
push
fbld
push
mov
insb
sti
int
xor
test
movsb
mov
pushf
mov
cmp
mov
add
lahf
mul
dec
jge
mov
xchg
sub
adc
sbb
jge
cmp
imul
lret
dec
fisubl
out
inc
sub
fwait
popf
mov
push
and
xchg
lea
fwait
ja
imul
push
xor
in
stc
cmp
je
fwait
leave
ds
pop
fnstcw
shlb
sahf
fldt
das
push
ds
insl
sbb
shrl
mov
fwait
je
inc
ja
fcmovu
and
into
jno
mov
bound
sub
xchg
inc
lret
sub
daa
sub
and
hlt
insl
outsb
push
push
ja
jne
mov
add
and
jns
sahf
or
push
les
pushf
iret
ret
rol
into
sbb
iret
ret
lods
mov
xchg
addr16
test
stos
mov
in
xor
fisubrs
inc
mov
js
push
or
out
pop
imul
cmp
inc
jge
or
outsl
daa
mov
jecxz
insl
outsl
push
xor
jge
mov
jmp
mov
nop
test
es
sbb
aaa
ljmp
push
xor
sbb
ret
int3
shrb
aam
cli
testb
les
mov
test
cmpsb
pop
les
insl
add
jo
inc
mov
out
or
fs
inc
js
scas
call
jo
pusha
mov
add
xor
push
mov
lods
sbb
lds
mov
pop
sbb
repz
cmpsl
rcr
in
mov
adc
jle
pusha
mov
lea
pop
mov
out
jbe
enter
push
fsubl
xchg
pop
sbb
out
mov
mov
cltd
lcall
adc
mov
and
ja
enter
adc
sbb
cmp
push
jbe
ja
dec
popf
pop
cs
sub
incl
ljmp
xchg
mov
push
ja
movsb
xor
out
jnp
cmpsb
add
ljmp
cltd
scas
movsb
cmpsl
into
push
adc
into
add
jno
loopne
mov
and
xor
pusha
adcb
dec
sbb
mov
lret
int3
mov
and
xchg
dec
std
sbb
fs
cmc
cmp
mov
dec
in
mov
inc
and
rorb
push
xchg
add
sub
andnps
sbb
dec
sub
inc
andb
add
push
orl
mov
jns
sbb
and
and
or
xchg
xchg
sub
leave
xlat
jp
scas
test
jbe
jge
xor
imull
shl
pop
jb
sarl
and
inc
fnsave
cmp
pop
jmp
xchg
fbld
cmp
aaa
and
inc
stos
jb
add
push
mov
and
or
inc
andl
jne
mov
mov
push
sbbb
insl
add
pop
repz
and
imul
push
inc
sub
repnz
inc
xchg
ds
pop
pop
adc
movsl
dec
or
mov
pop
imul
mov
jp
inc
scas
mov
movb
jecxz
lret
and
mov
jl
pop
add
dec
cmp
fsubs
jmp
addr16
add
mov
dec
daa
ds
lcall
push
pop
vmwrite
out
addr16
mov
cmp
inc
push
cmp
inc
fstl
repz
push
push
mov
addr16
iret
addr16
das
aam
or
mov
sbb
scas
loopne
sub
daa
fildl
dec
les
lds
add
data16
lods
adc
aad
mov
lcall
and
inc
pop
outsl
fsts
hlt
ret
fiaddl
fs
imull
cmp
xor
outsb
adc
sub
lods
adc
or
sahf
loop
push
mov
data16
sub
fs
ror
cmpsl
push
in
scas
pushf
jmp
jo
mov
pusha
xchg
lcallw
xchg
jb
ret
icebp
dec
pop
mov
add
xor
adc
pushf
sub
cs
cmp
sahf
mov
mov
dec
jb
dec
jl
sete
xchg
in
ret
sbb
jp
mov
repnz
int3
push
pop
mov
clc
aad
outsb
mov
mov
mov
mov
push
dec
insl
jnp
pop
ret
pop
mov
xchg
mov
test
push
pop
or
cmpsl
pop
push
loope
push
iret
push
add
xchg
sbb
mov
cmpsl
fstpl
cmpsb
mov
mov
dec
sbb
xchg
jnp,pt
push
jnp
cltd
clc
sub
inc
and
cmpsb
push
dec
sbb
stc
ret
mov
popf
stos
fidivrl
jmp
sub
ss
xor
das
mov
xor
je
cmp
push
and
scas
xor
cs
push
in
jne
adc
or
cs
arpl
lds
in
fildl
sti
add
adc
mov
or
xor
adc
in
lahf
jo
inc
cmp
loop
mov
lcall
xlat
sub
gs
les
push
fs
loope
sbb
aas
cltd
mov
mov
dec
hlt
ret
adcb
add
cmpsl
movsb
mov
out
dec
rcrl
xchg
imulb
add
stos
jg
idivb
xor
or
imul
or
pop
dec
daa
fs
xchg
addr16
mov
push
loop
pop
outsb
add
xchg
mov
mov
test
adc
outsb
dec
sub
int3
sbb
mov
adcb
mov
jns
ret
repz
and
fsts
mov
mov
and
fs
pop
jp
pop
pop
aam
or
xchg
jo
xor
push
xchg
adcb
mov
jl
xchg
scas
lds
mov
and
pop
iret
add
cmc
cmp
or
xchg
add
mov
inc
xchg
inc
push
pop
mov
fs
xor
fsubr
nop
lahf
pop
xor
sbb
xor
ds
scas
and
popa
inc
dec
decb
sbb
dec
into
loop
push
inc
mov
in
dec
icebp
jne
cmpsl
adc
mov
ss
insb
orl
sub
dec
call
xchg
push
xchg
adc
cmpl
ja
cmp
aas
fcoml
imul
push
and
roll
push
jno
sbb
jmp
addb
stos
loope
cli
rol
fildl
nop
cmpsb
in
fisubrs
push
mov
jge
movsb
rcrb
jae
jae
pop
lds
mov
add
sbb
mov
leave
adc
ja
mov
mov
fisubrl
push
cmpsl
and
cmp
lods
jle
sbb
fadds
mov
xor
fisubs
mov
ds
std
jb
dec
jmp
xchg
shll
jmp
popf
mov
stos
ja
adc
rcrl
int3
jmp
cltd
lds
mov
fstpt
insl
and
movsb
sbb
xchg
jmp
xchg
std
add
inc
sub
mov
call
inc
hlt
mov
push
js
sbb
dec
pop
incl
loopne
test
push
jg
ds
ficoms
in
shll
test
sbb
cld
roll
push
sbb
subb
sub
popf
sbb
popa
add
mov
je
hlt
pop
fadd
pop
jne
mov
lret
pusha
rcrl
cmp
aaa
insl
dec
push
movsb
mov
daa
int3
rorb
imul
jmp
movsb
popa
ret
movsl
inc
sbb
test
rcrl
shrb
dec
push
xor
aad
adc
out
sbb
mov
sahf
push
test
mov
inc
pop
pop
das
dec
jmp
jg
add
xor
test
loop
push
lds
sbb
or
cmp
sub
xchg
cli
loopne
cmp
ret
push
cmp
adc
jns
in
iret
imul
and
test
cli
out
cmp
add
and
mov
out
std
dec
pop
iret
push
ljmp
cmp
mov
daa
push
lock
fsub
jp
fstl
or
outsl
test
jp
out
cmp
jae
cld
ss
mov
or
mov
sarl
mov
in
dec
dec
add
outsb
mov
aam
sbb
xor
dec
data16
xchg
xchg
std
pop
icebp
fnsave
andl
rcrb
fcom
notl
or
lcall
test
mov
fldl
rolb
cld
in
push
hlt
adc
xor
cld
stc
sub
jbe
sub
sub
xchg
inc
sub
cmp
push
adc
addr16
clc
test
arpl
jns
mov
mov
push
dec
or
fstpl
xor
cmp
push
xchg
out
dec
rorl
fstl
xchg
in
add
sbb
pop
sub
xchg
xor
pop
inc
or
mov
xchg
mov
push
aaa
negl
xor
int
test
push
mov
mov
mov
clc
mov
out
sbb
dec
mov
xchg
xchg
add
rcrl
push
outsl
mov
lahf
inc
fsubrl
stos
mov
and
mov
jo
mov
stc
jnp
test
sar
cmp
or
and
out
add
cmc
dec
cmc
test
mov
xor
mov
mov
xchg
and
mov
cmpb
jge
movsb
fisubs
insb
mov
adc
sbb
jno
xorb
movsb
mov
dec
mov
test
mov
cmp
loop
cmp
ljmp
mov
sbb
pop
and
aam
push
jo
sar
shrl
xorb
ret
outsb
out
loope
cwtl
cmpsl
mov
outsb
insb
scas
jmp
xor
outsl
js
cmp
xchg
mov
mov
inc
push
lret
sahf
jp
xchg
pop
mov
lea
xchg
add
jbe
jle
rcrl
jbe
hlt
cmp
cld
and
loopne
jge
and
mov
pop
mov
cmp
stos
leave
mov
test
gs
aad
sub
les
mov
xor
cs
jno
jo
lds
je
add
pop
leave
sbb
adc
jg
push
pushf
cmp
mov
mov
pop
in
test
inc
push
mov
push
mov
jle
lock
jb
in
mov
insl
fiaddl
jbe
fisttpll
or
jmp
mov
in
jne
fsts
sub
movsl
popf
in
sub
cmp
dec
xchg
not
mov
imul
sbb
ds
subb
lea
pusha
xchg
xchg
call
orl
mov
insl
or
xor
mov
pushf
pop
imul
sub
mov
cld
repnz
inc
and
ret
iret
xchg
jecxz
mov
push
pop
push
mov
add
mov
pusha
lock
and
mov
lret
lret
ret
xchg
enter
sbbb
dec
mov
stos
xchg
mov
mov
lret
mov
add
pop
cmp
fs
in
mov
sub
sbb
xor
shll
adc
movb
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
jmp
movsl
mov
sbb
scas
mov
nop
loopne
adc
pop
cmp
sbbl
adc
adc
pop
jl
fildl
cmc
rcrl
dec
jecxz
pusha
push
shrb
bound
jg
pop
or
lahf
test
cmpsb
ret
popf
xchg
out
xchg
arpl
mov
es
inc
aam
mov
or
mov
sub
fistl
adc
das
daa
out
jge
sub
leave
and
repz
in
movaps
xchg
ds
jl
xor
push
pop
dec
jno
pop
insl
lret
pop
leave
shll
mov
fadd
sbb
xchg
dec
add
jno
mov
sbb
test
outsb
pop
mov
imul
inc
rolb
daa
xchg
xchg
jns
pop
call
insb
std
fildll
jmp
sbb
sub
inc
bound
addl
pop
xchg
mov
mov
aas
and
cmpxchg
push
es
das
mov
insb
bound
sbb
insl
fstpl
outsl
or
xchg
mov
mov
and
andl
adc
xchg
pop
xchg
sub
icebp
ja
xchg
inc
hlt
stos
dec
and
mov
mov
fcoms
ljmp
dec
addb
ret
sbb
sub
jle
bound
xchg
xor
test
mov
xor
shll
pop
adcl
push
push
mov
mov
cmp
mov
inc
popa
or
pop
sub
pop
repnz
mov
addr16
jae
sub
repz
push
mov
cmp
cli
pushf
jae
mov
mov
add
std
imul
lcall
out
cltd
jb
dec
cmc
movsl
loope
shrl
mov
sub
add
add
dec
mov
rclb
int
push
movlps
movsl
rcll
and
mov
jnp
cmp
popf
int
push
call
rorl
das
mov
lods
adc
jge
mov
loopne
pop
orb
mov
push
cwtl
adc
sbb
loop
out
fsub
mov
scas
out
adc
push
mov
cmp
add
push
sub
mov
loop
sbb
dec
sub
and
imul
data16
sub
jb
push
lcall
sub
cmp
mov
mov
stos
dec
dec
rorl
pop
cmp
ja
xor
xor
push
jb
idivb
loop
jg
xor
aaa
mov
add
sbb
add
sub
cmp
pop
into
push
mov
jl
xchg
mov
nop
aam
stos
lahf
sub
bound
lcall
pop
cli
pushf
lock
cmpl
je
ret
gs
rclb
push
sbb
loop
lods
jae
mov
mov
lahf
mov
jae
mov
insb
lock
in
push
mov
inc
dec
ss
mov
mov
inc
xor
xchg
or
sub
adc
jl
xor
inc
sti
cmp
cmp
jnp
je
imul
subl
dec
lcall
cld
mov
mov
sarl
ljmp
cmpsl
lret
rcrb
sarl
mov
jecxz
or
nop
ljmp
out
mov
das
mov
fwait
popf
mov
xchg
imulb
push
jbe
mov
push
lds
pop
movl
orb
lahf
adc
cli
fists
lea
cltd
jp
movsb
notb
imulb
dec
test
sbb
and
mov
lods
adc
daa
pop
add
xor
jp
mov
mov
jp
xchg
inc
lds
nop
hlt
rcrw
xor
imul
fwait
sti
out
cmp
fsubrl
hlt
jne
test
fdivs
int
cmp
pushf
inc
leave
outsb
cld
xchg
add
ds
in
sbb
addr16
fwait
mov
sbb
nop
mov
loopne
lods
scas
faddl
mov
lahf
xchg
clc
mov
int
xchg
sbb
lds
jo
aaa
inc
addr16
cmc
fucomip
mov
xlat
cmp
mov
loop
pop
sbb
ret
xor
lret
jmp
int
das
int3
push
inc
inc
das
in
jnp
scas
inc
mov
arpl
pop
stos
fldenv
mov
xchg
ljmp
mov
and
push
out
push
hlt
mov
lret
mov
push
movsl
mov
push
repnz
or
xchg
xchg
call
xchg
pop
loope
xchg
mov
outsb
jmp
nop
call
jg
pop
imul
retw
push
fimull
mov
jns
roll
add
int3
adc
pop
or
inc
int3
cmp
pop
roll
jecxz
xor
mov
jno
ljmp
xchg
ljmp
out
stos
stos
scas
cmp
dec
int
and
push
add
in
roll
insb
xchg
jp
les
out
rorb
das
popl
int
inc
out
cmp
lea
lods
add
je
pop
push
aad
push
pop
ljmp
inc
push
cmp
xchg
sbb
pop
clc
xchg
and
ret
jbe
inc
mul
sbb
and
das
jns
lods
lahf
dec
loope
pop
in
jb
push
gs
rclb
jg
es
inc
xor
fs
cld
dec
stos
cmp
push
pushf
cmpb
or
push
push
les
mov
push
test
mov
les
xorl
in
imul
mov
testb
outsb
pop
fs
fdivrp
and
repnz
mov
out
notl
adcb
xchg
fdiv
dec
fimull
insl
xchg
pop
inc
lret
fldl
mov
rcrl
call
sarl
lret
fsubrl
sbb
adc
inc
jmp
xchg
xchg
addr16
daa
movsb
push
push
out
mov
mov
jb
pop
jae
push
jg
cmp
js
sub
mov
cmpsl
icebp
mov
mov
call
icebp
pop
fidivs
mov
aas
pop
pop
movsl
sub
push
inc
jecxz
adc
push
int
cmp
outsb
sub
add
mov
iret
mov
pop
ljmp
sbb
jl
push
jl
adc
pop
add
cmpsl
jl
nop
xchg
loopne
mov
hlt
pop
dec
sahf
lea
ja
ret
or
add
mov
lcall
inc
pop
pusha
xor
loop
mov
mov
fstpt
imul
mov
fnsetpm(287
add
push
cmc
and
jns
cs
mov
vandnpd
hlt
lret
lahf
add
jne
negb
jne
imul
ret
in
pop
jecxz
push
pushf
and
jnp
cmp
sub
xchg
and
mov
mov
nop
mov
push
ja
ret
lds
fcoms
dec
cs
pop
fisubrl
dec
andl
sub
jg
xchg
jmp
lock
out
jae
jns
inc
fsincos
scas
xchg
insb
add
jmp
scas
xchg
jmp
or
jmp
and
lret
jbe
scas
sahf
ret
enter
push
jecxz
mov
lods
pop
rolb
push
dec
iret
adc
lret
movsb
inc
mov
std
xorb
sub
sbb
mov
xchg
mov
aas
mov
pop
pushf
loope
mov
ljmp
lods
adc
lret
add
xlat
jbe
pop
in
pop
or
rcrb
xchg
mov
sub
mov
loopne
dec
push
add
fstl
stos
mov
in
out
push
xchg
pop
xor
ficompl
lods
loope
iret
loopne
je
out
cmp
pop
inc
xor
or
pop
test
pop
sbb
clc
je
xchg
std
pop
inc
and
fwait
je
push
xor
outsl
ljmp
or
pop
daa
sub
pop
sbb
cmp
adc
inc
pop
sbb
pop
xchg
das
lret
cmp
popf
nop
push
add
das
mov
inc
bound
add
fs
mov
icebp
push
loop
rcrb
inc
stc
adc
push
xor
ret
dec
cmp
cld
or
xchg
xor
leave
mov
mov
jmp
mov
dec
inc
jne
clc
std
cltd
mov
call
fs
popl
out
push
lret
cmp
cmpsb
cmp
daa
xor
les
jne
lds
pusha
pusha
mov
lea
scas
mov
lds
mov
andl
dec
and
mov
jl
stos
jmp
repnz
repnz
les
movsb
subb
in
inc
icebp
scas
push
dec
ja
pop
int3
dec
dec
shlb
push
add
into
fdivrp
insb
and
lods
pop
or
sbb
mov
je
fcmovnb
adc
ret
dec
cmp
add
dec
shlb
pop
jo
fcoms
pusha
cmpsb
dec
push
sub
pusha
adcb
stos
mov
aad
bound
xor
movsb
pop
out
mov
dec
popa
inc
fstps
push
sahf
rcl
dec
loopne
add
mull
mov
ds
sbb
rcrl
or
sub
mov
xchg
pop
jmp
sahf
fstpt
fbld
xchg
aad
lret
dec
sub
repz
ss
jecxz
cmc
jno
cs
nop
sub
pushf
lds
jnp
pop
ja
outsb
bound
push
jmp
insl
icebp
dec
test
mov
and
pop
jl
xor
dec
insl
lret
mov
pusha
aas
jb
loop
pop
shll
sub
pop
pop
scas
jle
cltd
shll
jnp
insb
ret
inc
adc
cli
fiadds
das
xor
push
mov
and
mov
and
fisttpl
mov
std
mov
in
sbb
out
mov
sbb
xchg
bound
scas
push
divb
stos
lods
mov
fidivrs
xchg
cmp
mov
dec
push
rcrb
setae
cld
call
inc
mov
lcall
lret
out
and
inc
xor
pop
add
mov
add
shl
cli
push
sub
idivl
mov
sbb
imul
sbb
xor
bound
xchg
lea
setbe
ret
lret
daa
lock
dec
ds
ss
pusha
fsts
rclb
cmpsb
lds
testl
dec
inc
leave
mov
iret
sbb
inc
xor
test
lods
or
data16
inc
push
pushf
or
mov
and
test
ljmp
imul
mov
leave
out
inc
mov
outsl
xchg
push
adc
fbstp
sbbl
xchg
fidivrl
inc
loope
shll
pop
push
mov
mov
data16
sbb
out
mov
dec
ljmp
jl
inc
inc
ja
add
jl
or
inc
ljmp
loopne
ds
adc
dec
dec
mov
xchg
xchg
incl
adc
sub
test
xor
insl
dec
jb
mov
shrl
arpl
dec
fdivr
mov
and
inc
adc
jno
jae
rcll
lea
int3
cwtl
cwtl
clc
mov
xchg
sub
scas
lahf
jae
loop
test
enter
ficompl
rcr
lahf
inc
add
jle
scas
and
sub
or
es
jns
dec
out
in
and
inc
cmpsb
jmp
cmpsb
sub
xor
or
pop
mov
js
popf
mov
jg
jo
xchg
pusha
mov
mov
ret
push
xchg
mov
mov
push
pop
inc
adc
mov
sbb
aaa
out
xchg
mov
imul
adc
cltd
icebp
pop
call
sbb
dec
xor
mov
xchg
popa
das
xchg
pop
aas
arpl
or
iret
lods
mov
mov
subl
mov
arpl
mov
mov
jl
stos
rol
test
inc
ret
iret
int3
jl
pop
rolb
outsl
cmp
push
pop
addb
fimull
adc
and
mov
add
push
jbe
enter
mov
pop
popa
mov
cwtl
inc
xchg
sub
fdiv
jne
xchg
ret
dec
sbb
fdivp
mov
xchg
dec
inc
push
xchg
jno
xchg
stos
shl
ja
pop
scas
sbb
in
scas
jbe
cmpsb
sub
je
mov
jp
xlat
push
mov
scas
jg
dec
ljmp
inc
aad
test
inc
jno
dec
cmc
add
jnp
mov
sub
dec
insl
loope
daa
lret
lods
push
lods
sbb
and
clc
adc
and
and
jno
aas
mov
cmp
faddl
int
ja
out
jl
xor
cmp
lea
jae
hlt
mov
insb
mov
or
and
xchg
xchg
aaa
lret
out
push
xchg
dec
or
push
or
in
mov
sub
mov
jle
icebp
bound
lods
daa
inc
sahf
adc
pop
add
not
aaa
out
jb
push
shrb
scas
daa
sahf
fwait
dec
bound
pop
jge
inc
out
pop
loopne
push
fmuls
in
cmpsb
sarb
rcpps
sub
jne
mov
out
jmp
lds
aaa
adc
xchg
cmc
cwtl
cld
mov
dec
outsl
jno,pn
sub
call
mov
xchg
add
rcrb
adc
sbbl
pop
adc
in
or
xchg
stc
or
dec
push
iret
or
jmp
out
repnz
xor
rorl
or
mov
insl
fldenv
dec
sub
rcll
fs
in
fs
jno
xor
xchg
cmovs
pop
push
insl
sbb
shll
jno
andb
and
fmul
mov
pop
xor
movsl
push
stos
stc
stos
inc
aam
ss
jge
test
in
test
sahf
xchg
loopne
mov
rclb
test
push
push
dec
xor
fbstp
fistpll
or
sbb
sbb
or
aam
xlat
xor
data16
push
xor
loopne
add
je
shll
ret
dec
out
jb
mov
lret
push
shll
add
or
jmp
in
dec
test
sbb
js
push
loop
xlat
mov
xchg
imul
or
jne
inc
dec
jae
jbe
enter
jle
das
rcll
int3
xor
or
test
insb
ds
dec
sub
int
mov
xor
sbb
sahf
jmp
fimull
jns
jo
sbb
sbb
xor
movsb
jae
dec
ds
adcb
pop
cs
icebp
mov
mov
inc
mov
pop
jb
inc
fdiv
dec
out
or
arpl
shll
mov
dec
in
mov
or
push
mov
push
mov
and
jne
dec
and
xlat
ret
cmpsl
jno
pop
test
int3
mov
out
int
out
dec
repz
xor
inc
mov
punpckhwd
xlat
dec
fadds
pop
shrl
repnz
jbe
leave
cs
arpl
adcl
decb
lcall
xor
ljmp
test
jge
out
sub
mov
xor
stos
lds
fidivl
std
mov
incl
mov
sti
xor
add
and
and
lods
and
dec
pop
fstpl
daa
jae
shlb
inc
cli
enter
jne
jae
pop
push
xchg
lds
push
push
sarl
or
inc
push
fnstsw
mov
imul
pop
pop
jnp
cld
out
pop
icebp
insb
inc
cltd
push
and
xchg
xlat
or
in
xchg
xor
jmp
cmp
mov
scas
ljmp
gs
push
shrl
or
adc
mov
iret
pop
cmp
xlat
jns
js
jl
test
sar
add
pop
data16
sbb
ror
les
mull
mov
jb
lret
in
ljmp
lds
sbb
ja
jo
xchg
les
fxch
and
mov
sti
pop
mov
cmpl
imul
xor
jnp
repz
ret
out
lock
jp
hlt
cmpsl
out
adc
dec
dec
sbb
jae
push
aas
imul
add
jnp
faddl
mov
lahf
in
jecxz
dec
pop
repnz
pop
adc
pop
xchg
imull
imul
and
pop
mov
fistpll
xchg
jg
mov
cmc
dec
add
rorl
inc
jne
das
pop
imul
add
pop
enter
mov
cld
loopne
shr
jnp
and
iret
fcoms
xor
push
bnd
cmp
es
testl
and
jle
out
out
adc
mov
mov
leave
add
xchg
adc
lods
sbb
or
aaa
cmpsl
or
movsl
adc
mov
ret
ficoms
push
std
mov
adcl
xor
inc
sub
lahf
repnz
nop
cmpsl
or
inc
notl
pop
inc
in
mov
ss
lods
cld
xor
xor
push
dec
rorb
push
lds
pop
mov
aam
jae
insl
push
out
fistpl
lret
cmp
dec
lods
sbb
or
ret
pusha
pushf
mov
adc
jo
inc
fwait
jmp
test
xchg
xor
ficoms
fimull
inc
loopne
test
mov
xorl
les
mov
fnstcw
adc
sub
and
in
cmpsb
jp
das
fnsave
mov
xchg
xchg
inc
mov
jge
mov
cltd
xorl
pop
movl
mov
lock
adc
popf
in
xlat
aam
mov
pushf
mov
add
outsb
test
mov
xchg
out
decl
cmp
jge
imul
xor
adc
imul
loopne
or
sub
push
test
sbb
push
aas
xor
in
push
adc
in
adc
aam
pop
lea
pop
mov
in
mov
xchg
inc
adc
loop
cmp
cmp
xchg
push
xor
and
pop
mov
pop
addl
ret
int
fs
and
sub
mov
ja
int
cmp
shl
add
ja
sti
mov
fldcw
or
pop
pop
fs
ficompl
xchg
push
mov
aas
inc
jecxz
das
jle,pn
lods
rcll
adc
fistpl
lods
mov
loope
jno
addr16
add
and
mov
aad
xor
test
fisttpl
cmp
xor
jbe
aam
in
jbe
aaa
inc
dec
jo
enter
in
scas
lods
mov
cmp
lahf
adc
mov
into
mov
sbb
lock
xor
aaa
cs
loopne
negl
inc
fs
out
std
inc
sub
mov
push
cltd
clc
push
mov
sub
jge
fisttpl
out
outsb
fdivrp
jno
and
sbb
das
pop
sub
xor
mov
dec
cmc
jecxz
adc
push
shrl
mov
push
lock
ss
loope
xchg
or
mov
pop
jl
pop
popa
scas
add
mov
jge
mov
rorb
mov
stos
jne
mov
xor
call
notl
inc
xor
cmp
inc
xor
or
jns
push
sub
clc
cmpb
mov
pop
insl
sub
hlt
std
test
inc
cmp
pop
mov
js
pop
push
lods
fdiv
and
adc
arpl
enter
in
ljmp
sub
es
test
or
aaa
out
add
add
outsb
mov
adc
fsubl
push
push
sti
arpl
jo
cmp
dec
dec
adc
and
xchg
xchg
xchg
lods
pop
shlb
ficoml
movsb
jecxz
fildl
movsb
jmp
je
pushf
out
mov
int
outsl
pop
cwtl
cwtl
call
sub
stc
mov
xor
pop
jae
mov
aas
or
pop
leave
push
outsl
or
and
mov
popa
dec
and
pop
leave
ret
ljmp
cmp
cmp
shll
cmpl
xor
std
dec
inc
stc
mov
mov
mov
inc
xchg
inc
push
mov
xchg
out
es
pop
adc
movsl
packuswb
inc
mov
or
in
push
arpl
jns
mov
aam
xchg
sub
mov
dec
data16
ret
dec
jl
in
xor
jno
loop
cmc
jbe
popl
cmpsl
aam
inc
insl
gs
push
loop
repz
in
mov
and
shr
and
xor
shll
sbb
enter
imul
xor
sbb
inc
and
insb
cmp
cmc
aas
aaa
and
out
push
adc
out
add
rol
iret
add
xor
mov
mov
inc
adc
push
mov
jge
mov
jge
mov
sub
daa
xchg
testb
xorl
mov
push
nop
cmc
test
add
dec
mov
sahf
and
insl
bound
adc
dec
pop
adc
inc
mov
int
fistpll
jg
jns
daa
test
cmp
in
adc
test
dec
pop
dec
xchg
imul
mov
jnp
jmp
or
inc
movsb
aas
jo
push
es
in
in
stos
add
test
xorl
push
or
subb
mov
adc
das
std
jmp
pushf
or
add
jb
vmovdqu
push
sti
push
xor
pop
cmc
in
nop
jge
sbb
push
pop
stos
jp
and
mov
dec
orb
fxch
loop
jae
xchg
mov
sbbl
pop
pop
and
scas
xchg
jle
jg
mov
lock
sbb
dec
push
xor
inc
and
sub
stos
lcall
dec
iret
mov
jecxz
jbe
dec
jecxz
ljmp
lcall
es
mov
mov
shrl
lds
pop
hlt
add
mov
enter
sbb
sbb
adc
cmp
or
add
out
dec
rorl
pop
mov
xchg
pop
and
dec
fidivl
jp
aam
clc
test
insb
out
in
out
lcall
test
movsl
cmp
ja
push
pop
iret
adc
movzbl
push
dec
jp
jmp
add
push
mov
inc
mov
stos
jns
inc
fcomi
push
roll
dec
cmp
jae
mov
jae
ljmp
f2xm1
cmpsl
jmp
xchg
inc
fidivrs
stc
dec
add
out
imul
in
and
dec
or
lock
shl
sahf
adc
add
mov
imulb
jecxz
scas
adc
imul
push
lret
or
pop
outsl
pop
hlt
sub
dec
sbb
sahf
mov
push
icebp
lea
mov
pusha
in
mov
xchg
xchg
xor
mov
js
sub
jl
stos
dec
negl
mov
dec
outsl
lods
aas
jbe
jge
test
push
or
push
ljmp
stos
cmp
cmc
add
dec
mov
movsl
mov
jmp
xlat
popl
xor
xor
push
and
xor
pop
ds
mov
popa
dec
clc
pop
pushf
pop
mov
adc
lock
ja
mov
lods
cwtl
frstor
sub
nop
adc
sub
ret
mov
arpl
and
dec
std
fisubs
adc
inc
inc
mov
loope
lds
mov
sub
sarl
mov
inc
je
sar
repnz
xchg
xchg
scas
es
out
lds
push
and
rcll
pop
aam
jp
ljmp
xchg
push
xor
or
cmc
inc
pop
jo
call
xlat
sub
push
rep
movsb
mov
leave
mov
push
cmp
or
or
mov
lret
add
mov
jbe
adc
mov
cwtl
leave
mov
mov
xchg
scas
test
mov
dec
stc
jno
and
add
scas
jecxz
repz
xchg
int3
mov
jno
jne
lahf
mov
out
and
push
cs
sub
ret
shrl
addb
test
rep
test
pop
lock
jecxz
mov
pop
lods
pop
add
mov
cltd
push
push
and
js
xchg
adc
arpl
test
fisubrl
jo
pop
xchg
dec
sbb
clc
lods
or
sbb
push
mov
sub
jbe
push
daa
fsubrs
test
jge
test
pop
incb
sbb
xchg
xor
sub
ret
fstpl
or
aaa
test
dec
sbb
cltd
xchg
jb
jae
push
lods
arpl
mov
push
adc
fldenv
adc
sbb
lret
repnz
mov
jmp
imul
inc
pusha
nop
int3
call
mov
mov
lahf
stos
and
test
mov
sbb
test
lret
add
cld
sbb
cmp
loop
jno
andl
mov
cltd
popf
inc
cmpsl
jmp
sahf
mov
pop
mov
test
cmp
lcall
in
mov
mov
ret
and
xchg
bound
mov
sbb
and
jl
out
mov
insl
cmp
xchg
ss
xor
jl
xchg
stos
and
jb
and
out
test
mov
pop
push
adc
inc
sub
mov
aas
stc
movsl
jbe
negb
incl
mov
mov
daa
rol
cmpsb
aam
push
sub
fnstenv
push
addr16
in
xor
fs
and
xchg
stos
lock
xor
mov
ja
addl
ret
insl
mov
orb
pop
xchg
jmp
out
fcmovnb
fisubl
decb
push
dec
cmpsb
cmp
sbbb
icebp
fdivrs
and
adc
fnstcw
bnd
dec
dec
mov
imul
dec
pop
dec
xor
frstor
mov
mov
or
lret
jns
stos
mov
or
or
xchg
add
vcvtps2pd
push
cwtl
fiadds
mov
sti
enter
adc
sbb
flds
fnsave
or
dec
jg
fcmovu
mov
loopne
pop
mov
fwait
sbb
and
cmp
jo
jb
pop
xor
and
ljmp
jb
jl
loop
repnz
out
loop
push
mov
sbb
mov
sub
mov
filds
cmpsl
jns
dec
repz
cmp
xor
pop
push
and
or
lods
mov
and
push
fwait
xor
rcrl
fwait
add
inc
sub
sbb
xor
inc
stos
xor
mov
xor
call
out
out
inc
les
subl
cmp
leave
lods
xchg
pusha
insb
leave
add
sub
hlt
repnz
mov
mov
out
popf
sbb
xor
fldenv
jecxz
mov
sahf
cmp
fbstp
mov
inc
mov
popf
adc
cmp
xchg
mov
xchg
addr16
xchg
ja
adc
filds
inc
rorb
mov
push
mov
paddb
push
pop
stc
xlat
fsubl
mov
cmpsb
jb
fdivr
cmpsl
mov
push
cld
clc
fbstp
addl
mov
cli
push
stos
ficoms
cmp
out
js
cmpsl
or
ret
leave
xchg
pop
in
out
pop
js
sub
sbb
pop
push
fists
sbb
cmp
rcrl
xchg
xor
test
cmp
clc
cmp
pop
jne
sbbb
pop
scas
pop
xchg
mov
test
push
pop
or
pop
mov
fs
es
shrb
inc
push
pop
shrl
xor
inc
test
ss
fcmovnb
leave
scas
jne
sub
cmp
data16
call
sub
and
std
sub
sbbl
dec
mov
nop
dec
dec
xor
out
ror
sub
jle
mov
rclb
sbb
and
decl
je
roll
sub
inc
pusha
and
cmp
lahf
iret
mov
sbb
or
test
and
ljmp
adc
pop
jle
push
stc
in
lods
or
pop
sub
mov
adc
in
sub
std
pop
into
adc
test
sbb
mov
cmp
inc
add
add
sub
or
or
dec
icebp
imul
inc
dec
inc
jns
adc
dec
aaa
sbb
sbbb
pop
movsb
popl
push
cli
in
mov
inc
pop
add
cmp
ficoms
xor
jp
mov
mov
mov
add
push
mov
mov
iret
jno
cld
out
xchg
dec
mov
xlat
cmpsb
xor
lea
movsb
mov
bound
jp
icebp
push
out
test
pop
movsb
addr16
adc
shll
pushf
fidivs
xchg
pop
xor
sbb
cmc
jecxz
dec
sub
push
mov
rclb
inc
push
fs
neg
movsl
sub
fs
mov
cmp
rolb
pop
push
push
xchg
add
sahf
fchs
jae,pt
or
sub
jb
lock
out
addb
lea
sbb
mov
lret
pushf
pop
jb
mov
sub
sbb
inc
cld
fwait
aaa
sbb
cmp
aam
cmp
inc
fistpll
xchg
sti
pop
dec
dec
testl
pushf
inc
xchg
test
dec
addr16
and
dec
pop
test
rcrb
mov
pop
dec
sub
lahf
sub
fadds
and
dec
arpl
cli
sub
in
lock
ret
sahf
mov
fstpt
mov
sub
or
aad
ja
sbb
sahf
les
test
shl
addr16
in
or
lret
adc
loop
leave
sbb
inc
mov
dec
adc
mov
pusha
sub
sbb
pop
cmp
out
jns
cmp
pop
bound
loope
cs
xorb
les
push
das
setp
cmc
mov
lret
ljmp
das
mov
ret
out
lods
jns
xchg
lret
mov
add
div
ja
stos
out
dec
inc
mov
popf
dec
push
push
shl
pop
jg
das
xor
mov
imul
cmpsl
sbb
lea
lret
in
dec
add
push
mov
pop
mov
fwait
cmp
adc
fiadds
dec
add
mov
ds
mov
mov
xorb
adc
push
xchg
or
dec
fldcw
mov
adc
ljmp
test
and
outsb
iret
orb
bound
sarb
pushf
pushf
xchg
push
int
mov
inc
xchg
out
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jle
jmp
call
cmpl
jb
movl
push
adc
movl
subl
mov
push
mov
adcl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
orl
add
andl
mov
mov
addl
test
movl
je
movl
cmpl
je
cmpl
jle
jmp
push
call
mov
dec
mov
jmp
mov
sbb
mov
addl
mov
mov
xor
xor
add
and
mov
mov
and
xor
mov
and
mov
add
sbb
mov
mov
xor
mov
or
mov
add
or
mov
orl
mov
xor
mov
xor
mov
add
mov
sub
sbbl
lea
xor
xorl
xor
movl
cmp
movl
je
xorl
mov
subl
xor
adcl
add
cmp
movl
jne
pushl
call
mov
not
mov
adcl
mov
addl
xor
add
movl
cmp
movl
je
pushl
sbbl
pushl
call
mov
xor
mov
xor
mov
xor
add
movl
cmp
movl
je
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
jmp
mov
add
sbbl
mov
mov
mov
sbbl
add
orl
mov
jmp
push
mov
andb
test
addl
repz
add
int3
int
pop
setne
imul
rcr
ja
rolb
cmpl
xlat
and
addb
ret
jne
aad
imul
mov
pop
in
jb
dec
loop
pushf
cmp
je
pop
push
pop
add
bnd
ds
insl
sub
add
shrl
add
sbb
into
jp
jge
dec
insl
mov
mov
adc
mov
inc
cmp
sbb
xchg
jo
lea
lods
shrl
fwait
aaa
add
jne
lahf
lcall
lret
jecxz
sahf
add
or
rorb
and
jae
adc
or
je
xor
fs
imul
cmpb
jb
sahf
jno
notl
popf
or
xor
cmpl
sbb
adc
and
push
outsb
or
jp
and
aam
into
mov
fsubrp
mov
xor
jbe
jo
scas
sbb
mov
and
mov
or
pop
insb
inc
xchg
inc
fiadds
sarb
jecxz
sbb
das
sub
outsl
xchg
aam
int
ss
xchg
ret
mov
fistl
lods
cmp
jle
inc
add
adc
cmp
and
cld
inc
popf
jne
inc
fwait
mov
xchg
dec
mov
imulb
loopne
dec
push
outsl
into
jle
into
adc
int3
inc
jb
jo
jmp
js
int3
pop
xchg
dec
xor
sbb
inc
gs
pandn
mov
popf
push
pop
dec
mov
rep
xchg
lcall
jbe
add
stos
leave
and
insb
aam
test
scas
std
scas
xor
roll
add
jns
or
pop
pop
jbe
pop
mul
shll
cld
push
test
fists
jl
test
push
ja
popf
or
dec
ljmp
test
cmpsb
and
into
xchg
mov
insb
jge
loopne
mov
sbb
and
jmp
dec
mov
jecxz
xchg
sbb
shrl
clc
stos
sbb
xor
adc
mov
sub
dec
xlat
aas
mov
enter
xor
xchg
outsb
cwtl
mov
leave
push
test
ret
pusha
in
mov
push
inc
jnp
mov
lods
mov
dec
mov
pop
shll
push
jmp
mov
add
out
pop
mov
push
insl
shl
das
rcll
nop
pusha
dec
pusha
jo
xor
jbe
imull
mov
out
das
dec
movsl
enter
in
xor
adc
or
faddl
push
nop
in
in
mov
push
jmp
and
ljmp
mov
pop
shlb
cmp
les
mov
or
mov
inc
ret
mov
inc
add
cmc
repz
outsl
push
pusha
push
push
in
lcall
pop
lds
jo
mov
leave
jecxz
cmp
data16
push
sar
decl
push
notl
rcr
mov
ja
gs
inc
cmp
loop
mov
push
clc
loop
jo
scas
xor
stos
inc
js
test
pop
testl
shll
inc
pop
aam
std
lods
outsl
mov
pop
leave
or
sahf
mov
into
sub
imul
scas
rorl
lahf
repz
jo
call
and
xchg
adc
rcll
in
cmp
iret
dec
dec
sbbl
fwait
cli
sbb
mov
push
lret
mov
or
push
call
cmp
add
lret
push
cmp
addr16
bound
jle
data16
nop
pusha
pop
xchg
lcall
mov
fnstenv
add
add
xor
sahf
incl
adc
pop
mov
enter
scas
xchg
andl
data16
and
mov
pop
pop
sbb
lret
inc
jmp
mul
mov
sub
in
mov
push
das
mov
sbb
lahf
sarb
xor
mov
add
test
mov
pusha
mov
sbbb
data16
cmp
or
mov
movsb
jmp
sti
imul
lods
ds
push
test
cmpsb
outsb
xchg
cmpsl
rorb
push
dec
mov
dec
inc
hlt
jge
loop
mov
in
xchg
mov
in
aaa
pop
mov
xchg
fs
pop
sbbb
and
mov
mov
push
mov
lcall
xor
adc
repnz
outsb
dec
or
and
dec
fwait
int3
rcl
sub
repnz
mov
mov
in
repnz
imul
adcl
jge
sub
lods
std
xor
out
dec
ljmp
xchg
repz
xchg
sbbb
pop
push
lods
in
clc
add
mov
mov
ja
push
pop
inc
xchg
cmp
outsl
scas
roll
push
test
decb
into
loopne
pushf
mov
inc
bound
sub
cmp
nop
and
jnp,pt
xchg
pop
adc
insl
negl
lods
jo
push
ret
addr16
push
push
hlt
push
pushf
jge
dec
insl
pop
sub
outsb
bound
loope
mov
out
sub
shl
jne
pop
cli
xchg
bound
pushf
push
sub
sahf
lahf
cltd
dec
mov
cmpsl
inc
test
sub
test
lret
stos
sbb
cltd
addr16
add
xchg
cwtl
push
test
mov
sbb
mov
lea
enter
lds
mov
xchg
jmp
sub
shll
sub
imul
jne
fwait
stc
adc
sbb
pusha
pop
fdivr
inc
jecxz
clc
inc
fnstenv
inc
in
dec
lea
in
cld
inc
je
inc
dec
out
mov
je
mulb
fldenv
push
jmp
sti
repz
fiaddl
dec
adc
jbe
cmp
or
out
ja,pn
inc
xchg
add
insb
lea
iret
cmpsl
dec
mov
fidivs
lea
mov
or
push
lahf
cmpsb
push
pop
aaa
fsubl
int
lahf
or
mov
xor
xchg
int3
dec
and
jne
ss
shlb
jl
sbb
adc
jo
pop
lods
inc
call
movsl
and
jecxz
sub
in
and
insb
stos
fs
dec
mov
inc
adc
sbb
je
ljmp
push
stos
fsts
or
loopne
or
js
sbb
notl
sbb
das
lret
jp
push
daa
mov
jb
push
jno
mov
dec
jmp
std
sbb
out
mov
adc
fstpl
xor
add
rcrl
aas
ljmp
pop
in
jmp
sbb
and
decb
push
ljmp
inc
adc
pop
test
mov
adc
cld
hlt
insb
jecxz
mov
push
in
loopne
mov
or
mov
fisttpl
cmp
mov
xchg
lods
mov
dec
outsl
enter
cmpsl
pop
sbb
stos
mov
mov
das
pop
mov
stos
clc
je
imul
lods
hlt
stos
xor
dec
mov
loop
ds
xor
or
cmpsl
inc
cs
loopne
sub
pop
push
scas
int3
or
sbb
and
hlt
sbb
inc
push
add
pop
xor
sub
lods
mov
lahf
hlt
pop
sahf
test
les
dec
int
imul
xchg
push
xor
leave
in
mull
jb
loope
inc
lret
add
sub
inc
pop
aaa
pop
stos
mov
inc
shl
adc
hlt
sub
lods
mov
xchg
jno
and
aad
sbb
jb
ret
je
clc
insl
mov
icebp
mov
fs
jnp
fidivrs
push
dec
int3
sbb
jne
xchg
mov
xchg
push
inc
stos
push
mov
mov
pop
lea
das
cmp
push
data16
mov
arpl
mov
mov
or
cmp
pop
or
not
add
lcall
push
jl
ja
inc
stos
insb
adc
mov
xchg
inc
popa
fadds
fistl
es
mov
mov
sbb
and
sbb
sub
movsl
stos
sbb
scas
aam
rcl
ret
xchg
jmp
sbb
lock
cs
vpmacssdql
gs
ja
das
inc
enter
outsb
test
xor
lods
dec
fldlg2
pushf
push
ljmp
xchg
pop
and
scas
lret
leave
mov
cmpsl
inc
fcomps
nop
jne
inc
ret
inc
add
out
dec
or
ja
testb
ret
leave
ficompl
push
mov
insl
mov
movsl
out
jl
or
insl
fucomip
adc
imulb
lahf
icebp
lods
mov
lock
js
ljmp
mov
push
imul
clc
pop
scas
sbb
ret
lods
fcomp
mov
jl
lods
cs
mov
rorb
mov
mov
jns
push
ds
scas
cmp
sub
or
ds
pop
clc
imul
callw
lods
incb
adc
scas
push
jecxz
pop
xor
sub
add
jae
arpl
cmp
mov
lods
mov
mov
mov
pop
cmp
js
pusha
ret
test
mov
xor
jp
test
scas
mov
nop
ja
and
pop
scas
mov
test
lods
insb
push
pop
dec
pushf
push
and
loope
jae
or
gs
lret
fcompl
mov
adc
cmc
das
inc
add
movsl
cli
or
jecxz
or
sbb
jno
cmp
sbb
aaa
addr16
fmuls
das
clc
xchg
call
jl
jne
clc
mov
mov
xor
mov
les
push
movsb
out
sub
pop
add
mov
dec
pop
mov
lret
cmpsb
lods
pop
inc
fwait
sahf
pop
xchg
mov
dec
daa
adc
jae
jg
fbld
push
xchg
imul
and
cs
cmp
mov
push
cli
mov
int3
inc
inc
in
ss
jl
pop
push
jnp
xchg
mov
or
imul
dec
or
xor
adc
je
dec
insl
gs
insl
repnz
jp
jmp
jns
ds
jg
pop
xor
fstpl
cs
push
cmp
xor
repz
roll
cmpsl
repz
pop
fistl
jne
xor
add
shlb
ljmp
js
loopne
push
scas
ss
inc
or
jnp
in
pushf
cltd
mov
aad
hlt
sbb
lret
insb
stc
outsl
clc
mov
call
lcall
mov
lret
insb
cld
bswap
push
stc
int3
or
inc
mov
xchg
xchg
push
mov
jnp
leave
movsb
add
lock
jns
xor
pop
ds
outsl
jmp
outsb
fistpl
nop
rcrl
adc
clc
sti
scas
sub
sub
add
jns
mov
lds
leave
inc
pop
push
lock
cli
bound
out
popf
push
jmp
push
adc
push
dec
mov
dec
mov
and
add
rcr
or
mov
xor
sbb
addr16
push
sub
cmpsb
mov
xchg
insl
and
mov
orb
jb,pt
jg
dec
pop
lcall
pop
roll
rolb
sbb
shlb
push
dec
adc
mov
adc
lds
js
mov
or
xchg
inc
rcl
cmp
adc
push
sub
mov
cmp
sbb
call
test
pop
jno
push
mov
push
and
mov
mov
fidivl
push
cmp
mov
lods
push
mov
jo
push
stos
subl
push
sarb
jmp
and
daa
jbe
shlb
mull
add
mov
xor
mov
pushf
ds
ss
gs
popf
jmp
xorl
int
cmpsl
and
add
jge
xor
fstps
lcall
push
mov
sbb
sub
mov
cwtl
adc
sub
flds
sbb
bound
lret
or
pop
fnsave
fwait
jp
inc
and
rol
and
ja
add
cmpsb
fldcw
lds
push
sbb
mov
xor
push
sub
cmc
pop
jo
arpl
push
gs
mov
or
lahf
insl
lcall
aas
or
or
cmpsl
mov
mov
add
mov
pop
mov
mov
fs
pop
je
mov
lcall
out
jl
add
adc
inc
jecxz
add
dec
cmp
push
cltd
outsl
pushf
sub
ljmp
lcall
mov
adc
sub
stos
inc
push
mov
fmull
test
add
imulb
pop
repnz
loopne
ret
into
decb
xchg
sub
pop
stos
je
out
in
sub
mov
jnp
sti
call
adc
sbb
push
les
adc
or
lret
mov
pop
adc
push
add
js
loope
clc
push
in
push
rcrb
pop
lahf
xchg
and
adc
test
outsl
and
stc
add
lret
push
adc
inc
dec
and
out
cwtl
jg,pn
fsubrl
xor
push
outsl
inc
imul
mov
negb
lahf
jo
repz
mov
xor
jbe
pop
imul
call
lds
fdivl
or
or
jmp
jl
rorb
push
jge
leave
fldl
ret
ljmpw
xchg
dec
lods
xchg
jae
add
xchg
lahf
push
insb
xchg
loop
jno
adc
jecxz
jg
mov
jb
adc
mov
inc
lret
pop
and
stos
stc
jnp
or
popf
test
sahf
int
mov
jno
mov
aaa
push
inc
lahf
cwtl
in
sbb
insb
sub
call
lea
xchg
jbe
inc
je
pop
push
leave
jp
xor
mov
test
dec
xor
sbb
push
jmp
push
jne
out
xchg
in
xchg
in
pop
loope
sbb
mov
aaa
pop
fwait
lock
lcall
add
orb
mov
insl
push
cmp
insb
xchg
popl
inc
dec
jnp
jecxz
lcall
mov
insb
jg
mov
nop
popf
aad
push
scas
sub
lahf
cmp
rorb
dec
add
inc
cmpsb
dec
js
movsl
imul
push
pop
scas
inc
fcompl
nop
in
lcall
sub
hlt
inc
mov
pop
cmp
aas
movsl
xchg
loope
aaa
out
int3
xorb
icebp
sti
pop
fadds
test
scas
inc
mov
in
cmp
rcrb
xchg
test
add
imul
cltd
pop
mov
jns
mov
inc
adc
bound
and
xchg
adc
out
inc
popa
adc
mov
xchg
xchg
in
stos
insl
push
fs
arpl
out
gs
jge
adcb
xchg
jg,pn
xchg
orl
and
stos
fs
or
or
js
lret
loope
fidivs
inc
pop
mov
lahf
test
arpl
daa
add
imul
icebp
sbb
adcl
and
loopne
cs
dec
adc
adc
adc
sbb
push
mov
call
daa
xor
lock
sub
fs
ds
or
ret
xchg
mov
sub
or
xchg
inc
pop
and
mov
fwait
push
rclb
sub
xchg
xchg
not
jge
mov
nop
jne
dec
lods
fs
js
insb
xchg
ss
mov
loop
jo
cmc
pop
out
push
ret
and
sbb
lods
shl
dec
ja
sarb
loope
out
aaa
aam
test
mov
nop
repz
dec
out
ds
sub
mov
scas
push
mov
jge
pop
mov
adc
push
dec
fs
push
gs
popa
push
add
ficoms
ljmp
rol
mov
push
sarl
das
adc
xor
stos
fnstenv
sbb
outsb
lret
adcl
xchg
jno
mov
scas
pop
insl
pop
jns
jp
lods
lcall
or
jle
push
les
mov
jb
imul
cmpsb
fsts
popa
ja
and
mov
ss
ss
mov
cmpb
ror
pushf
xchg
pop
mov
nop
mov
lds
shll
cs
sbb
push
inc
pop
fld
sbb
into
pop
les
mov
cmp
hlt
pusha
sub
ss
dec
ja
adc
and
xchg
loop
gs
jmp
enter
shll
fildl
cltd
arpl
mov
sahf
les
xchg
and
dec
push
sarb
inc
xlat
inc
test
xchg
pop
repz
lcall
push
cwtl
jnp
fists
ds
lds
rcrb
cld
lock
and
add
xchg
push
push
nop
xorb
xchg
test
mov
mov
xor
out
shrb
mov
sbb
add
cmp
mov
fmull
ss
adc
jl
sbb
add
scas
xchg
sub
push
sub
jne
test
pop
mov
push
cmp
std
lods
out
mov
iret
jl
outsl
sahf
insb
push
pop
inc
cld
push
or
ret
in
push
lcall
mov
and
xor
lahf
or
cmp
push
pop
inc
into
roll
fsubrs
inc
adc
das
jnp
in
cltd
mov
dec
cwtl
leave
sub
fistpl
adc
or
sbb
sbb
test
out
jle
dec
iret
leave
stc
inc
fsubl
je
push
sti
outsb
cmp
and
adc
out
cltd
jp
push
jge
sbb
cld
jge
mov
jge
jecxz
jge
cmp
cmp
sbb
pop
jns
insl
outsb
in
push
fdivp
pop
xchg
insl
rcll
mov
cs
pop
inc
cmp
and
push
in
icebp
cwtl
testb
xchg
and
cmp
xchg
pop
cwtl
dec
or
insl
xor
jno
push
sbb
pop
mov
mov
movsl
stc
inc
je
inc
jne
mov
lcall
and
add
scas
movq
scas
leave
push
addr16
mov
arpl
xor
int3
and
scas
mov
sub
arpl
xchg
pop
lea
xchg
mov
sub
sarl
cli
dec
xchg
xlat
dec
test
fisubl
lret
out
mov
rcr
arpl
sbbl
int
cmp
rep
cmp
xchg
mov
jo
daa
inc
negb
lock
mov
clc
cmp
scas
mov
mov
test
adc
lock
pop
add
jb
repnz
in
inc
add
mov
sbb
js
movsl
or
mov
pop
bound
fildl
mov
fisubl
sub
pop
sbb
lret
adc
mov
out
ret
cmp
xchg
lret
jbe
sub
lds
loope
loopne
bound
lea
cmp
push
fcom
dec
notl
cld
ret
aaa
sarb
push
loopne
jp
mov
int3
divl
mov
out
push
fwait
popa
pop
mov
test
and
into
jg
xchg
pop
arpl
ja
xlat
mov
outsb
loop
inc
in
pop
sub
xor
pop
or
cmpsb
xchg
outsl
cmpsl
xchg
std
push
addl
cmp
popf
mov
cld
scas
add
cwtl
dec
enter
mov
lret
push
addb
vpsllq
out
push
sbb
pop
push
and
in
jns
add
inc
jle
inc
test
cwtl
pop
push
mov
fstpt
andl
test
dec
mov
or
dec
loop
sub
adc
jb
sbb
rol
cmpb
add
jmp
inc
aas
out
dec
in
call
addr16
lret
imul
mov
fildll
mov
jae
outsb
dec
adc
fwait
ja
push
popa
cmpsb
jnp
mov
pop
cmp
xor
add
fisubs
mov
jecxz
outsb
pop
jmp
aas
sbb
push
sub
call
ljmp
mov
xchg
mov
ret
ljmp
fnsave
lea
dec
jno
sahf
or
xchg
and
sub
jmp
lock
inc
push
je
aam
aas
je
fucomip
int
pop
fistpl
pop
add
mov
add
jnp
movsb
sub
ror
in
iret
pop
lea
mov
adc
aaa
mov
sbb
vmovupd
test
mov
aam
sub
ret
lods
addb
fstps
test
bnd
mov
ds
push
fldenv
es
jae
inc
imul
pushf
add
in
mov
mov
gs
sbbl
cs
loop
fcoms
cmp
ss
loope
or
sar
pushf
sub
push
jne
mov
sbb
fmuls
icebp
imul
mov
out
jecxz
push
orb
mov
dec
jge
xlat
lock
cmp
dec
fidivl
ficomps
sbb
ret
bound
jno
in
mov
popfw
cli
popa
cmp
jecxz
movsb
popf
in
pusha
add
and
xor
or
push
or
xor
adc
jb
test
insb
sti
mov
testl
lods
imul
or
adc
sub
in
push
mov
adc
hlt
pushf
cs
xchg
mov
gs
or
cmp
add
pop
push
dec
scas
sbb
pop
cs
pop
sarb
adc
stos
mov
rcrb
inc
rcrb
dec
fsubrs
scas
out
jge
sub
and
les
inc
jmp
cmp
gs
jno
decl
mov
rorb
jge
cwtl
iret
xor
mov
bnd
lahf
aam
jb
pop
mov
hlt
push
mov
lcall
and
mov
scas
stos
cmpsl
out
popa
push
add
jmp
push
loop
cmpsb
cmc
rcll
mov
or
fdivrs
hlt
mov
sub
mov
ret
jl
push
or
test
mov
push
lret
dec
xchg
xlat
out
test
popa
xor
xor
cmp
sub
mov
fidivl
clc
rcrl
dec
cmp
xchg
aas
sub
rolb
ljmp
into
scas
add
movsb
sub
fdivrs
add
cmc
dec
jnp
mov
lds
and
mov
push
stc
mov
cmp
mov
push
out
popa
or
xchg
push
sbb
mov
test
xor
sub
jl
int
push
int
sbb
fldcw
inc
push
jl
mov
mov
dec
push
mov
or
cmpsb
lahf
nop
pop
insl
ljmp
xlat
imul
lea
sbb
popa
testb
cmp
out
pop
jp
clc
add
stc
in
jmp
mov
lahf
loope
scas
sbb
scas
xor
call
mov
out
dec
cwtl
xchg
xchg
fwait
push
pop
pop
sub
mov
pop
xchg
mov
cwtl
jmp
cmpsb
cmp
pop
add
test
fcmovne
addr16
dec
xchg
xchg
ds
xor
fists
idivl
test
adc
sub
jmp
push
push
sub
and
test
sbb
in
addr16
sbb
jns
dec
and
jg
testl
push
mov
pop
repnz
rol
stos
xchg
jmp
in
pop
mov
movb
push
pop
mov
ss
cmp
mov
jg
aam
sub
mov
cmpsb
js
sbb
leave
ret
and
jb
inc
rcll
ret
jg
outsb
or
xchg
loop
push
fistpl
mov
push
jne
fmuls
xchg
xor
pop
lods
xchg
loopne
cmp
test
cmp
mov
addr16
bound
cld
sub
jge
sahf
xor
pop
add
jbe
subl
stos
out
jg
in
loopne
push
adc
ljmp
cmp
jp
jnp
insb
cmc
inc
mov
push
ja
ficomps
mov
dec
mov
jnp
push
adc
push
jno
rolb
xor
xchg
js
icebp
lahf
stos
ja
aaa
data16
insb
shrl
mov
addl
sbb
ja
ds
push
dec
frstor
loop
pop
or
roll
add
ss
or
cmp
ja
push
loope
mov
out
jg
pop
and
xor
dec
cmp
ret
jo,pt
jb
repz
jne
lods
ds
shrl
mov
das
xchg
sub
out
aad
cmp
pushw
xor
sahf
mov
sbbb
fisttpl
in
decb
insl
cmp
mov
hlt
aad
dec
subl
dec
out
iret
in
and
fildll
ret
fcoms
inc
hlt
adc
stos
xor
call
sbb
mov
pop
sub
ret
loope
push
add
inc
fldl2e
sub
push
rcll
mov
mov
insl
aam
cmpsb
mov
xor
cmpsl
call
inc
fimull
les
in
pop
cmpl
push
cwtl
out
add
pop
mov
shlb
lods
xchg
fwait
shlb
jmp
sbb
addb
gs
nop
inc
outsl
rol
push
stos
cmp
mov
pop
pushf
or
xlat
push
mov
mov
xor
cmp
ljmp
mull
inc
adc
cmp
xchg
int
xor
sub
push
out
lds
jecxz
cwtl
stos
test
fisubrl
cmpsl
dec
popl
hlt
addr16
pop
ja
fbstp
mov
xor
jne
pop
insb
lods
test
in
xor
js
int
or
out
adc
jge
push
pushf
push
mov
in
mov
out
insl
xor
lods
xchg
cmpb
or
adc
imul
cs
int
call
or
jmp
roll
cld
cmpsl
fstl
sub
test
aad
rolb
push
cli
adc
and
sbb
lods
or
cmp
inc
fdivr
sbb
insl
adc
lds
sub
lcall
insl
push
stos
leave
dec
imul
dec
dec
mov
xor
push
cmc
adc
lds
mov
data16
adc
jo
dec
insl
pop
pop
mov
adc
loope
xorb
xchg
pop
pop
and
add
in
lcall
adc
stc
sub
outsl
ret
mov
jmp
and
mov
rcl
cld
jne
test
mov
mov
jb
pop
jecxz
fldl2e
xor
inc
dec
sbbl
and
add
rolb
xchg
leave
fildl
ljmp
adc
mov
mov
lret
leave
rcr
xor
pop
dec
sub
pop
and
push
push
jge
sar
pop
adc
cmp
divl
sub
icebp
das
mov
sub
hlt
mov
add
decb
lea
or
xor
das
fwait
xor
dec
aaa
adc
mov
ret
aaa
and
xor
cltd
cmp
lret
fsubr
sub
xlat
je
dec
jno
test
and
mov
dec
out
mov
jb
xor
lds
xor
push
arpl
mov
or
xor
dec
inc
mov
inc
sbb
push
js
dec
mov
cs
cmp
mov
sub
in
cmpsl
scas
mov
sub
leave
push
fcomps
push
leave
popf
ficomps
in
xorl
sub
lret
mov
fcomps
jl
imul
mov
fimuls
test
cmp
add
push
xchg
dec
jle
aad
cmpl
mov
loope
mov
in
sbb
clc
pop
adc
inc
je
or
insl
sub
dec
mov
test
gs
mov
push
jo
push
sar
cld
fs
stos
xor
aas
outsb
add
mov
mov
or
sub
pop
lret
xlat
adc
sbb
icebp
xchg
fdivp
dec
push
xor
mov
mov
adc
imul
leave
add
lcall
cmpsb
sar
fs
cmpsb
hlt
sbb
pop
cmp
sub
pop
xor
test
pusha
cmpsl
adc
ds
inc
fucom
sbb
sbb
enter
push
and
repnz
add
xor
add
les
sbb
int3
push
inc
mov
ds
in
loopne
dec
out
jmp
xchg
sbb
pushf
orl
pusha
pushf
push
mov
ret
mov
mov
mov
cltd
mov
dec
xor
fidivrs
or
lret
pusha
jb
push
dec
in
and
outsl
jp
fsubl
es
cltd
mov
faddl
cmp
and
sbb
fcomip
std
mov
movsb
das
and
push
testb
sub
mov
cwtl
lock
inc
or
adc
outsb
dec
in
mov
imul
data16
notb
or
jl
aam
inc
out
push
cmp
pop
xchg
cltd
das
ret
gs
pusha
sbb
sub
repz
mov
and
push
pop
mov
cmp
push
sbb
enter
lret
je
push
insl
cli
arpl
ss
lcall
dec
and
test
ja
cmp
push
mov
repz
test
jp
ja
shll
mov
popf
push
jecxz
push
nop
and
mov
rolb
cmp
mov
ret
pop
aas
dec
jmp
jle
lcall
je
jle
xor
jmp
mov
rclb
scas
jg
outsl
sbbl
lcall
pop
in
inc
jne
cwtl
xlat
ret
fsubrs
xor
cltd
test
test
xchg
ja
push
jecxz
lret
imul
jge
psrlq
repnz
fs
into
or
mov
and
and
repnz
push
xchg
aam
inc
xchg
lcall
outsl
push
jno
inc
inc
mov
cs
adc
add
je
clc
imul
sbb
mov
cmpsl
add
test
jnp
in
cli
mov
cmpsb
mov
es
dec
mov
cmp
call
arpl
dec
shr
cmpsl
lock
mov
cmp
icebp
pop
dec
cmp
sarb
xlat
rcll
xchg
adc
iret
test
sahf
pop
and
inc
push
lea
into
jnp
inc
push
xchg
lret
mov
movzwl
or
mov
add
mov
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
xor
mov
xor
jmp
add
cld
sbb
nop
andb
push
sub
addl
mov
xlat
xchg
cmp
cmp
shlb
imul
fistps
dec
jmp
push
dec
inc
test
mov
lcall
cmp
mov
call
pop
rclb
push
sahf
mov
fildl
adc
cmp
pusha
dec
xchg
inc
test
out
cs
push
dec
and
bound
aaa
xchg
shrb
mov
mov
xchg
jg
outsb
cltd
adc
lahf
shll
dec
mov
cltd
mull
js
or
into
dec
bound
and
add
enter
adc
push
dec
xor
xlat
and
pop
pop
adc
mov
dec
in
mov
xchg
or
stos
push
rolb
jmp
xor
sahf
pop
cmp
test
cmp
cmp
stos
add
xchg
pop
xchg
insl
les
movsl
sbb
stc
pop
add
add
add
push
outsl
push
notl
sti
jl
pop
fwait
and
mov
pop
jg
jl
popf
cmpsl
aam
mov
js
lret
pop
hlt
fstps
jbe
inc
fsubs
sbb
xor
cmp
movsl
sub
sbb
jbe
adc
mov
ficomps
clc
lret
mov
loopne
dec
pusha
movsl
in
pop
and
cmc
test
mov
mov
or
popa
jae
xchg
cld
sbb
int
mov
pushf
scas
pop
inc
mov
mov
outsb
jge
maskmovq
idivl
movsl
mov
ss
push
xor
out
dec
lea
andl
test
jg
ljmp
xchg
mov
rcpps
les
test
fsub
mov
and
xchg
enter
negb
scas
adc
push
loop
push
flds
in
call
pop
sub
pop
jae
pop
xorb
cs
or
sub
cli
rorl
jb
dec
sub
xchg
cmp
adc
outsl
loopne
movsl
cmp
cmp
jcxz
push
dec
pop
sti
pop
adc
loopne
xor
mov
sahf
out
inc
cltd
js
jge
lcall
xchg
mov
jmp
dec
cmc
lret
out
fimuls
pusha
daa
mov
stc
je
push
xchg
fildl
jne
loopne
add
add
push
xor
fldcw
jl
dec
fmuls
jle
mov
fcomps
mov
test
and
mov
xchg
lea
call
pushf
out
sbb
adcb
pop
sti
sbb
decl
dec
mov
mov
add
xchg
jno
jbe
and
push
mov
mov
ja
daa
jmp
mov
fst
fldl
pushf
jmp
add
out
ret
xchg
cmpsb
arpl
jb
sub
jg
add
icebp
xor
ljmp
mov
pop
ret
pop
dec
mov
ret
mov
rcl
stos
or
imul
pusha
iret
addr16
mov
rorb
add
scas
aas
dec
test
mov
repz
ljmp
into
jmp
add
nop
inc
std
or
xor
out
mov
lds
xchg
push
sub
mov
ss
mov
jle
repnz
call
push
adc
inc
inc
pop
cld
xchg
notl
push
stc
mov
sub
sahf
jmp
push
dec
repnz
cmp
push
jne
or
push
sub
xchg
mov
rcrb
mov
xchg
mov
inc
pop
xor
adc
movb
xor
lret
mov
cmp
cmp
dec
leave
movsl
xchg
add
pop
fwait
dec
pop
insl
xlat
xchg
xchg
ficoml
jbe
sub
aaa
dec
jno
cli
ds
std
mov
shlb
mov
lret
rclb
cwtl
or
sub
fdivrl
gs
sub
cmc
ffree
loope
xchg
add
mov
xchg
aaa
das
mov
jecxz
shll
pop
cltd
mov
arpl
jmp
mov
or
jno
jecxz
xchg
push
loop
mov
cmp
sbb
das
or
mov
and
xchg
addr16
out
jo
push
test
stos
fucomip
test
ret
daa
pop
inc
mov
loopne
mov
push
fdivs
test
sahf
jle
pop
pop
xchg
push
ret
daa
vmovhpd
cmp
lcall
pop
fcoms
ljmp
fcoms
xchg
cwtl
jle
ja
xchg
int
scas
insl
data16
das
fidivrl
jno
or
or
int
sbb
scas
and
inc
cmpb
add
repnz
lret
insb
es
adc
cmpl
fwait
cs
pushf
xor
sub
mov
jg
add
enter
fidivs
lahf
popf
push
push
imul
jecxz
mov
inc
jae
adc
pushf
sbb
xor
sub
xchg
in
in
inc
or
or
xchg
mov
inc
jnp
outsl
repz
jmp
add
cmpsb
lahf
fisubrs
flds
dec
int
xlat
push
cmp
ljmp
out
movsb
cmpsl
outsb
dec
ja
pop
movl
jnp
pop
cmp
shr
ss
call
outsb
insl
pop
cwtl
das
movsl
sub
ret
jmp
mov
or
jns
jg
pop
push
inc
daa
pop
sub
jge
insb
push
aam
adc
push
ret
andl
cmpsb
and
js
in
test
mov
fs
loopne
mov
enter
push
dec
sub
mulb
push
fisttpll
scas
dec
push
mov
inc
dec
test
sbb
loope
mov
pop
cmc
sbb
xor
add
leave
pop
sub
sub
dec
repz
add
int3
clc
mov
xchg
mov
sarb
call
leave
sub
adc
xchg
cmpsl
dec
imul
rolb
outsl
mov
push
lds
imulb
out
test
and
xorb
sbb
inc
ds
push
sub
sbb
cmpsl
sbb
mov
les
sbb
mov
aam
mov
mov
sub
pop
add
dec
out
push
hlt
mov
data16
cmp
sbb
jle
adcb
rolb
pop
dec
dec
or
sbb
inc
mov
mov
push
gs
push
cmp
outsl
outsl
mov
scas
inc
jb
sbb
loopne
sbb
pop
jbe
lcall
fsubrl
test
cmp
popl
dec
jmp
adc
shl
and
pop
jns
test
aaa
ja
add
imul
push
sub
test
jg
mov
jnp
enter
pop
xchg
test
inc
xchg
fdivp
add
into
jae
cmp
inc
sub
aaa
mov
or
jmp
pop
loopne
and
cmp
jno
push
jno
js
xor
xor
ret
inc
jbe
cmp
mov
aas
mov
test
cmp
loop
push
cmp
or
test
ret
stos
jb
push
sbb
sbb
leave
stos
lahf
lsl
xchg
cltd
or
add
xchg
insl
pop
adc
addb
es
aad
inc
sahf
ljmp
mov
lods
push
dec
idivb
sub
mov
mov
mov
cmpsb
jae
add
aam
cmp
mov
fistpll
xchg
jne
sub
xor
pop
addr16
cmp
jbe
dec
popa
inc
cltd
js
push
jecxz
divb
xchg
or
mov
in
lds
inc
push
push
jp
pusha
iret
or
pushf
xchg
lods
fidivl
loop
or
sbb
and
or
xchg
sub
mov
int3
outsl
mov
jmp
in
lds
sub
and
pop
in
ljmp
mov
movsb
loope
push
sbb
mov
xchg
jecxz
andb
mov
pop
xchg
jmp
dec
inc
inc
pushf
inc
cmpsl
push
mov
loop
lea
push
xchg
out
mov
pop
cmp
push
imul
add
pop
or
daa
dec
aaa
call
mov
sbb
inc
push
inc
pop
add
mov
dec
pusha
in
mov
cli
daa
push
ja
jge
std
dec
mov
jg
sti
dec
mov
pushf
pop
movsl
data16
fdivl
leave
fs
lods
popa
push
lods
xchg
add
jno
cli
and
inc
scas
movsl
and
or
xchg
cmc
mov
mov
lock
inc
addr16
xchg
mov
inc
sbb
jnp
enter
add
sbb
in
loope
push
and
cltd
cmp
and
divl
loope
gs
xlat
sub
add
and
or
mov
dec
or
dec
pop
push
push
xlat
xchg
or
dec
dec
icebp
mov
in
dec
mov
je
pop
mov
or
dec
bound
mov
insb
cmp
and
add
fsubp
out
fldenv
andb
testl
ss
inc
inc
push
cli
pop
mov
pop
xchg
pop
out
lahf
sbb
mov
bound
outsb
mov
sbb
cli
lea
pop
fcmovnbe
call
enter
out
cmp
add
movsb
test
pop
lahf
cmc
mov
mov
aam
jnp
jno
idiv
mov
xchg
push
mov
mov
aad
jo
sbb
pop
aaa
into
xor
push
andb
mov
dec
cmp
jle
sbb
jb
insb
mov
test
lds
lahf
mov
loopne
mov
push
push
cmp
sbb
add
inc
sub
jp
int3
mov
add
jecxz
adcl
in
ljmp
mov
cs
fstl
inc
pop
dec
lahf
inc
inc
jnp
loopne
cmp
xchg
arpl
or
in
inc
std
into
cmpsb
push
mov
jne
or
and
ljmp
cmp
mov
inc
cmpsl
xchg
mov
fdivl
lock
sbb
sbb
mov
int
in
cld
addl
push
jns
or
xor
arpl
inc
xchg
bound
fnstcw
test
jno
in
jl
inc
cmc
and
das
lock
andb
ss
mov
icebp
negl
cmp
out
popf
and
pop
and
loopne
sbb
fadd
ficoml
xor
clc
push
popf
dec
lock
std
into
add
fs
inc
ret
outsb
cmp
mov
insl
subl
mov
push
test
mov
sub
aaa
sub
sub
test
mov
bound
daa
fcompl
push
adc
js
scas
mov
loop
mov
aad
mov
mov
ljmp
jae
mov
inc
push
cld
push
dec
xchg
add
mov
pusha
mov
inc
sub
dec
xchg
bound
mov
fld
mov
pop
sbbl
mov
cmp
std
xor
push
orb
jbe
pop
lds
add
jge
shrl
scas
cmp
int3
test
push
fdivl
sbb
or
sub
les
pop
jbe
call
popf
adc
scas
dec
sub
mov
adc
push
cmpsl
out
outsb
add
decb
ss
and
cld
scas
repnz
mov
inc
imul
popa
insb
sbb
sub
mov
rorl
cwtl
stos
pop
mov
arpl
je
xor
adcl
mov
shl
dec
repz
lds
js
jns
xor
scas
ss
cmp
loopne
sbb
gs
xor
inc
loope
test
xchg
repz
and
out
push
push
stos
inc
ret
and
inc
mov
cmp
adc
mov
pop
xorb
fimuls
loope
push
jp
add
out
sub
jne
push
imul
and
xchg
pushf
mov
and
scas
lock
jmp
leave
out
xor
test
leave
cmp
rcll
push
movsb
or
stos
sbb
iret
mov
xor
lahf
jp,pn
repnz
pop
adc
and
push
lea
mov
push
mov
lods
enter
das
or
xchg
inc
xor
aam
fnstsw
sbb
daa
pop
mov
loopne
mov
or
lahf
push
and
dec
pop
out
movsb
xchg
dec
lds
jns
test
adc
sarl
aam
mov
sub
sbbb
daa
gs
ret
les
jo
mov
sbb
cs
jbe
push
mov
ljmp
idivb
sbb
xor
outsb
xchg
jb
repz
jbe
mov
add
loopne
gs
xchg
cmp
shrl
movsl
xchg
mov
mov
dec
xor
mov
adc
xor
mov
rorb
sbb
addl
movsb
sbb
xor
pop
xor
push
lea
pusha
jo
jae
call
fidivrl
aaa
test
lret
pop
mov
popa
mov
int
sahf
mov
shr
jmp
xchg
icebp
loopne
je
push
and
sbb
dec
insl
adc
sub
pop
out
cld
hlt
roll
dec
ljmp
mov
push
sbbl
jnp
and
imul
leave
popf
jl
xor
in
jo
lods
mov
push
and
jge
imul
mov
and
lcall
cmp
mov
or
ljmp
inc
add
decb
xor
dec
cs
cmpsl
les
je
sub
xor
es
sbb
in
and
insl
dec
cltd
fld
xchg
dec
adc
sub
aaa
mov
dec
popa
sahf
cmpl
jmp
xchg
mov
pusha
pop
pushf
sbb
mov
cwtl
add
ja
add
adc
mov
jp
scas
and
pop
cld
ror
adcl
adc
mov
out
scas
inc
or
push
sbb
mov
out
xor
jl
sub
mov
sub
push
cmp
cmp
mov
sbb
fimuls
rcl
dec
jae
je
push
jae
sub
push
es
cli
jnp,pn
push
cmpb
xlat
xchg
sbb
add
and
mov
adc
jnp
dec
shlb
aaa
cmp
lea
dec
out
xorl
arpl
jp
sub
stos
inc
dec
jne
aad
push
fwait
roll
gs
inc
push
sbb
cltd
out
sbb
push
decb
jp
repz
aam
cmp
lahf
rcrl
into
push
or
in
adc
mov
and
dec
arpl
in
out
mov
dec
or
rorl
test
and
xchg
bswap
fucomp
xorb
adc
outsb
xor
stc
jbe
bound
add
jnp
dec
aam
jp
aaa
es
xor
out
mov
jmp
pop
fdiv
adc
shl
addr16
mov
adc
xor
push
jg
ret
add
push
rol
and
notb
gs
sarb
xchg
inc
xchg
movsl
sarl
cmp
in
mov
loop
add
jae
push
cmp
push
es
sbb
pop
push
fmul
mov
add
addr16
jle
imul
fsubrl
xchg
leave
pop
in
mov
enter
inc
test
push
add
adc
sti
or
mov
push
cmp
je
fstpt
jg
dec
jb
loope
arpl
fidivrl
loope
mov
jecxz
lods
pop
add
mov
cmpsb
mov
mov
xchg
repz
sti
jp
add
xor
mov
cltd
rcrb
insl
xchg
xor
lds
mov
aas
fisubrs
sbb
or
adc
test
outsl
sbb
sarb
stc
xchg
pop
xor
enter
push
test
pop
push
mov
mov
mov
mov
addr16
mov
xor
xchg
push
lahf
andl
add
jmp
mov
cmp
mov
inc
incl
cld
adc
stc
xchg
call
and
pop
aam
and
sbb
xchg
test
lcall
lret
adc
xchg
out
imul
xor
inc
das
int
not
lret
scas
add
aas
inc
fsubl
cmp
push
in
outsl
adc
jl
fsubrs
fldenv
mov
loope
xchg
xchg
fisubs
aam
dec
xor
ret
xchg
data16
mov
sub
pop
pop
sbb
pop
push
pushf
mull
inc
xor
hlt
xor
cld
sbb
imul
ds
out
fstp
or
push
adc
pop
or
movsl
cmc
jp
sub
iret
pop
lods
test
and
xchg
movsb
push
loope
xor
dec
lret
decl
pop
cmpsl
push
scas
aaa
pop
lcall
mov
mov
mov
bound
push
cmpb
xor
sbb
daa
mov
ret
push
push
testb
mov
dec
dec
xlat
into
ja
orl
movsl
xor
push
dec
fcomps
daa
add
inc
test
lea
mov
push
mov
movsb
int3
out
roll
lcall
fsubr
int3
lcall
mov
imul
xchg
pushf
adc
or
loope
push
sarb
testl
into
rorl
dec
test
out
push
mov
push
das
les
sbb
daa
out
adc
sub
cmp
rcr
add
loope
mov
mov
aas
push
mov
dec
inc
xchg
ss
repnz
filds
aaa
dec
sbb
and
pop
inc
add
in
cmp
mov
std
xor
or
adc
lea
mov
push
in
sbb
call
ljmp
sbb
jge
mov
push
mov
add
mov
mov
jbe
mov
add
pop
adc
jmp
test
and
and
mov
out
test
popf
cltd
jmp
mov
inc
and
push
jle
and
pushf
push
xchg
dec
pop
pop
testl
ror
push
clc
add
jmp
mov
dec
loopne
push
insl
jl
repz
rcr
push
sbb
sub
sbb
inc
outsl
sbb
and
loop
adc
xchg
bswap
insl
insl
scas
push
aad
jge
mov
cmp
mov
mov
add
sub
pop
push
pushf
mov
or
pop
add
cmpsl
out
test
jge
xor
cmp
mov
mov
fcompl
roll
sbb
xor
gs
mov
cmp
aaa
push
push
mov
imull
push
jne
pop
leave
movsl
jecxz
mov
mov
push
mov
loope
ljmp
cld
cmpsb
adc
mov
or
xchg
sub
or
push
sub
lods
psllw
sub
scas
cltd
ja
pushf
mov
popf
push
das
mov
pop
pop
push
shrl
inc
xchg
and
jle
cmp
popf
lret
cmp
cmc
or
daa
in
fdivrs
and
adc
std
imul
test
cmp
fistpl
aas
dec
sbb
test
xchg
loope
int3
fwait
mull
jmp
in
rolb
imul
pop
mov
lret
adc
cmp
mov
jb
push
mov
mov
xlat
lahf
sbb
xchg
xor
dec
repnz
sti
sub
mov
cltd
inc
out
add
sub
inc
adc
xor
fneni(8087
mov
rcl
cs
test
mov
cmp
in
pop
push
loopne
in
inc
cmc
adc
sub
push
jno
xchg
sub
rorl
or
cmp
dec
out
adc
mov
out
cmpsb
imul
xor
aad
shl
aad
push
jne
mov
stos
sbb
xchg
pop
daa
movsl
hlt
xchg
orps
mov
popa
test
lods
pop
or
or
add
aas
jo
sbb
mov
stc
mov
repnz
cmp
push
xor
pop
cmpsb
jmp
xor
inc
push
insb
sbb
into
addb
or
roll
dec
fs
int
shl
mov
xchg
fcoms
lock
stc
mov
xchg
push
mov
shll
mov
imul
divl
mov
jecxz
gs
inc
mov
sub
mov
test
mov
mov
push
inc
hlt
mov
xchg
into
lret
leave
outsl
adcl
cmp
stos
mov
scas
inc
loop
rorb
in
xor
push
and
pop
or
ret
pop
out
add
inc
jo
ja
lds
mov
sub
repnz
and
pop
loope
jle
jmp
mov
les
lret
and
cs
push
lcall
ret
sub
jns
loope
out
sbbb
bound
dec
je
inc
mov
imul
mov
pushf
push
jmp
ss
stos
arpl
sbb
movb
add
mov
dec
and
mov
xor
jg
push
mov
sbb
fidivl
dec
or
shlb
daa
adc
rorb
and
js
jnp
enter
pop
pop
xor
inc
mov
mov
cmc
imul
sub
pop
sbbl
lock
mov
cmp
loopne
dec
jo
xchg
jl
mov
test
scas
pop
adc
push
test
xchg
jae
add
xchg
hlt
sub
mov
mov
das
push
data16
pop
cltd
cltd
sbbl
popf
add
mov
call
daa
das
jae
or
leave
mov
not
mov
or
cmp
mov
and
mov
lods
ret
and
loopne
outsb
cmpsb
test
lcall
outsl
mov
jo
out
in
adc
jmp
rcrb
cli
mov
decl
int
insl
mov
jmp
out
cli
or
ds
aam
fstl
and
dec
adc
repz
sbb
popa
rorl
dec
inc
lret
sbb
mov
mov
dec
sti
inc
stos
lret
xchg
js
rdpmc
popf
lret
pop
xchg
and
lret
popf
cs
nop
incl
jo
fidivrl
dec
adc
test
add
inc
mov
in
mov
repz
or
push
mov
push
sub
addr16
aam
mov
icebp
cmp
daa
adc
pop
aam
and
loop
imul
ret
out
ror
or
mov
adc
icebp
jmp
loope
add
jo
xchg
fdivs
mov
add
imul
hlt
add
arpl
mov
push
stos
sub
loopne
iret
jbe
jb
or
sahf
xchg
call
out
call
arpl
xchg
arpl
inc
add
cmc
rolb
jnp
xor
fidivl
mov
fstpt
iret
pop
outsl
hlt
shll
popa
test
sbb
pop
mov
add
push
jp
int
clc
outsl
jl
or
cwtl
sub
outsb
jg
arpl
scas
mov
icebp
sbb
xor
loop
pop
sub
xchg
test
add
daa
pop
push
inc
push
insl
xor
sub
mov
ror
inc
jns
ret
js
or
aad
int3
fs
into
adc
dec
data16
xchg
push
sti
movsl
fwait
sti
test
inc
data16
inc
aas
pop
pop
adc
sahf
loopne
int
mov
outsl
push
cmovo
add
addr16
add
js
sub
mov
push
xor
sbbb
pop
scas
lods
ret
dec
xchg
sbb
pop
mov
stos
xor
stc
rcll
rcrb
or
push
aas
test
vminpd
or
loope
xor
subb
pop
aaa
sub
aam
ret
inc
bound
add
pop
inc
and
daa
leave
cmp
dec
shrb
bound
ret
sub
stc
dec
and
je
fldenv
inc
mov
sub
pushf
das
mov
fwait
inc
sub
jns
xchg
clc
adc
push
mov
rcll
cltd
mov
aas
mov
insb
popl
adc
xchg
inc
xchg
aas
loope
fisttps
enter
sub
mov
rolb
add
xchg
xor
mov
nop
sbb
mov
push
shll
hlt
popf
sbb
add
lods
rcll
mov
mov
ret
scas
mov
out
jle
mov
into
xor
push
int3
xor
push
add
cwtl
inc
out
shll
ja
repnz
mov
mov
fcomi
lea
xor
push
pop
jb
sbb
call
mov
or
xchg
jo
fisttpll
or
pop
xchg
mov
stos
nop
daa
adc
xchg
jne
pop
loop
lcall
cmp
fisubl
and
neg
out
and
fidivrs
in
out
call
test
popa
pop
or
xchg
and
imul
jge
jge
pop
fistpl
sti
cs
cmp
inc
pop
cltd
xor
sti
mov
lret
or
mov
push
jle
adc
mov
insb
and
push
jae
adc
cmc
mov
mov
mov
cmp
push
in
imul
into
loop
xor
pop
outsl
int3
sbb
add
dec
and
xchg
out
popf
mov
cmp
sbb
cmp
inc
mov
xor
shl
mov
mov
adc
bound
das
fistpll
lahf
and
movsl
mov
repnz
pop
aaa
dec
test
pop
add
dec
js
mov
mov
jmp
lds
fld
popa
push
shrl
ret
push
and
mov
sub
adc
and
lods
es
imul
loope
imul
or
sbb
mov
in
das
lahf
xor
decl
dec
jecxz
jmp
add
adc
pop
xor
daa
nop
mov
outsb
sbb
jae
xor
sub
jns
imul
test
data16
xor
nop
pop
jp
mov
add
jl
lods
mov
int
xchg
cltd
fwait
out
lds
mov
jns
jmp
xchg
sub
mov
mov
mov
sub
aaa
leave
fcomps
dec
sbb
aaa
adc
add
repz
mov
and
jae
das
sbb
jnp
out
jb,pn
jmp
sarl
dec
lds
in
adc
jl
or
mov
pushl
or
add
repnz
push
notb
insb
mov
push
pop
inc
lahf
sub
cwtl
iret
mov
mov
insb
popa
hlt
add
and
mov
add
mov
pop
mov
cmp
mov
std
sub
aaa
dec
sti
xor
call
stos
and
sub
dec
testb
adc
sbb
mov
pop
sub
push
fcompl
sub
dec
cmc
gs
mov
lcall
inc
xchg
dec
cli
cmp
jp
in
cmp
mov
lds
inc
mov
loop
arpl
fstl
pop
add
scas
push
imul
or
out
push
inc
sbbb
mov
add
inc
daa
jne
and
pop
aaa
pop
out
bound
adc
jl
xor
mov
jge
bndstx
and
inc
ds
lahf
mov
pushf
out
xchg
bound
adc
jp
fwait
cs
dec
pop
pop
arpl
and
rol
jno
jecxz
shr
xchg
adc
shlb
mov
cmp
jno
mov
mov
xor
out
ds
sub
ret
adc
xchg
clc
repz
lret
push
jp
xchg
test
mov
inc
ja
in
loop
xchg
lds
xchg
inc
mov
loop
lret
stc
js
popf
mov
mov
cmp
into
mov
adc
loope
jo
into
cmc
pop
stc
aas
xchg
push
xchg
jle
lea
jecxz
cmp
push
jg
stc
icebp
push
js
aaa
fdiv
jg
cmp
out
dec
mov
stos
mov
push
test
mov
clc
xchg
test
xchg
pop
mov
imul
and
push
inc
repz
jle
in
pop
dec
push
mov
pop
adc
mov
loope
insb
sbb
in
loopne
sbb
lahf
lcall
test
or
push
cmp
or
decb
adc
push
hlt
decb
add
add
lret
dec
dec
insl
bound
jo
leave
loope
stos
ss
in
push
iret
pop
pusha
orl
inc
xchg
bound
adc
sbb
jl
xor
mov
js
or
je
sub
lods
sub
jle
mov
mov
daa
mov
push
pop
scas
clc
sbb
push
insb
mov
xchg
nop
xor
inc
rcll
hlt
inc
add
test
add
imul
mov
mov
inc
and
sub
pop
push
jne
add
inc
icebp
lods
xor
add
xchg
out
add
mov
pushf
push
js
cmp
jns
lods
push
in
sar
cmp
adc
cs
sarb
shr
cmpsb
mov
lret
loope
xor
jbe
scas
push
lds
les
bound
sbbl
pop
add
dec
js
mov
pusha
xchg
cli
mov
mov
mov
adc
adc
mulb
add
pusha
fsubrp
xor
sar
cmp
pop
mov
nop
inc
jg
or
add
out
repz
fstp
xchg
pop
js
scas
pop
loop
fwait
jno
xchg
mov
jne
xor
loope
inc
xchg
dec
xchg
mov
fisttps
inc
ror
or
adc
arpl
mov
lret
addl
lahf
test
rclb
hlt
aad
inc
jmp
mov
fisubs
mov
adc
sub
push
fdivrs
cmpsb
jg
nopl
cmp
mov
push
das
pop
mov
or
jno
mov
xlat
cli
add
test
jg
negl
push
dec
pop
into
pop
fisubrs
or
jbe
repnz
adc
add
push
fnstsw
jp
xor
sbb
test
xlat
pop
or
mov
jmp
out
add
lods
mov
mov
pop
into
mov
inc
in
jnp
ret
loopne,pn
sub
dec
js
pop
jmp
repz
aaa
stos
sub
cmc
gs
cmp
jo
cld
pushf
xchg
hlt
ja
mov
gs
mov
daa
imul
push
popf
inc
cli
inc
gs
std
push
xlat
or
data16
mov
cmc
subb
and
or
or
arpl
jecxz
pop
xor
push
push
mov
mov
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
jmp
add
mov
hlt
aas
push
push
rolb
orl
lahf
test
add
loopne
inc
pop
mov
or
cs
pop
testb
mov
dec
mov
jge
arpl
jno
loopne
je
jge
pop
bound
icebp
sub
or
push
das
insb
xor
sbb
out
mov
out
std
pushf
push
lret
imul
pop
and
xchg
push
sbb
and
loope
imul
push
mov
jmp
movsb
inc
out
cmc
adc
popf
push
in
in
push
cmp
or
inc
mov
sti
mov
out
iret
shll
push
jbe
outsl
jb
sub
sbb
pop
mov
scas
push
push
sbb
dec
add
test
or
lods
ficoml
jp
push
mul
cmpsb
and
test
mov
aaa
dec
fldenv
cmpsl
lcall
aas
fwait
movsl
push
out
pop
popa
pop
psubsw
sahf
xchg
pop
pop
and
dec
addr16
jae
add
add
lret
mov
int3
ds
jp
js
dec
scas
adc
mov
cmp
fdivl
inc
inc
mov
sub
mov
adc
mov
popa
xchg
mov
sbb
fldenv
fs
mov
daa
or
fisubrl
and
jns
and
mov
or
shl
mov
push
xchg
lahf
fcmovnbe
pop
fildl
inc
ds
xchg
bound
pop
jl
inc
cwtl
cltd
mov
nop
and
cmp
movsb
or
int3
adc
sbb
sub
repnz
mov
mov
dec
jb
jmp
loopne
dec
fsub
cwtl
adc
xor
mov
add
jmp
out
shrb
dec
rcrl
repz
mov
mov
pop
hlt
std
fs
notb
sbb
addb
int
or
cmpxchg
xchg
fmul
pop
insl
push
adc
dec
sub
cwtl
push
add
add
inc
lcall
fcoms
lea
iret
fsubrp
and
and
nop
mov
cmc
inc
inc
mov
pop
jbe
sub
pop
mov
pop
lret
icebp
fcomps
adc
jge
pop
jp
cld
xchg
mov
fmul
mov
bound
jns
inc
push
inc
test
lcall
cmp
inc
push
jns
stos
fists
ret
insb
in
out
sub
mov
pusha
test
movsb
dec
les
faddl
jb
lods
in
in
adc
and
dec
push
or
mov
insl
jmp
in
es
xchg
out
mov
sub
mov
loope
xor
lret
enter
or
pop
xchg
inc
xchg
divl
or
and
dec
fildl
out
jo
movb
adc
mov
psubsb
test
xchg
adc
add
or
fs
rclb
andl
das
xor
fwait
ds
adc
lahf
lret
call
adc
fistps
inc
sub
iret
lahf
mov
mov
idivl
xor
mov
dec
iret
or
fistl
lahf
inc
sbb
dec
out
dec
xchg
xchg
jns
out
rol
xchg
test
lods
mov
mov
mov
push
xchg
daa
aaa
les
cmp
subb
mov
sbb
outsl
mov
sub
mov
call
or
call
sti
sbb
mov
pop
xchg
stc
imul
mov
dec
pop
mov
mov
add
pop
or
fwait
dec
int3
outsl
sub
ret
mov
fisubrl
xchg
push
and
lds
out
xor
fs
mov
add
mov
mov
mov
jbe
jae
cmp
sub
jecxz
and
frstor
pushf
jg
jbe
ja
sahf
bound
fucom
cmp
inc
dec
ret
bound
popf
scas
inc
sahf
dec
into
mov
jae
adc
mov
adc
repz
push
xchg
push
mov
dec
sub
cmc
jbe
dec
out
jge
pop
xchg
adc
cmp
cmp
jp
xor
push
cmp
push
js
jge
and
inc
jbe
lods
test
fmul
ficompl
push
adc
sbb
sub
or
xchg
nop
jp
out
je
add
enter
jb
pop
jg
jge
js
inc
lahf
jnp
aaa
inc
call
addr16
adc
daa
inc
or
aad
push
fiaddl
jle
push
xchg
lea
lods
adc
std
loop
lock
imul
popf
pop
lcall
cwtl
imul
js
div
or
mov
cmpsl
enter
push
aad
icebp
jecxz
jbe
push
imul
jmp
test
movb
ret
cmpl
push
mov
pop
xor
xor
scas
bnd
sub
negl
adc
xor
pop
xor
fadd
psubusb
mov
sub
aad
xchg
mov
mov
nop
cmp
arpl
jbe
das
xchg
cmp
adc
fsubr
ror
pop
lods
enter
lea
imul
insl
test
and
in
xchg
pushf
sub
push
add
and
int
lds
xchg
mov
mov
or
rcrl
dec
mov
repz
mov
movsb
push
mov
jo
aas
out
jno
sbb
add
ljmp
adc
mov
sub
roll
aas
pop
int
cmpsl
fsubl
jp
ja
pop
adc
push
pop
mov
sbb
xchg
inc
jb
push
ds
outsl
sahf
pusha
test
shrb
mov
mov
jnp
jne
ljmp
imul
xchg
insl
mov
out
repnz
fmuls
sub
negl
dec
orb
orl
and
mov
outsl
mov
push
mov
sti
mov
daa
jp
add
sti
aad
xor
insb
mov
push
imul
jae
inc
adc
mov
inc
movsb
fnstcw
rorl
loope
cli
popa
xchg
mov
sbb
adc
fiaddl
jne
pushf
cmp
imul
stos
sbb
mov
cmp
cmp
and
xor
fwait
repnz
repnz
inc
imul
dec
pop
push
je
xchg
push
rclb
inc
jno
cmp
fwait
adc
les
push
dec
jno
movsb
into
mov
cmc
in
fxch
mov
mov
jae
enter
fisttpll
pop
clc
enter
pusha
enter
das
and
cmp
adc
cmpsl
dec
adc
xchg
movsb
sub
jle
adc
int
repnz
or
fsubrp
jmp
adc
dec
cmpb
push
stos
pop
rorl
push
push
daa
popa
and
and
mov
xchg
dec
lock
out
dec
mov
xchg
xor
pop
rcrb
push
xor
fistps
icebp
cmp
mov
insl
sub
stos
fs
mov
xor
cmp
in
fcompl
hlt
outsb
lret
pop
cld
js
cmpsb
push
mov
sub
push
mov
cmp
es
rol
test
push
and
xor
xlat
scas
mov
add
jbe
pextrw
and
mov
test
adc
pop
mov
dec
and
lods
mov
or
dec
imul
iret
jbe
loope
jns
mov
cmc
mov
mov
enter
in
fdivl
mov
push
fbstp
fsubr
xor
inc
inc
mov
cmp
mov
outsl
out
lret
nop
es
sarl
lock
int3
mov
inc
call
sbb
lods
lahf
pop
fstpl
faddp
sbb
jno
sub
rol
lds
stc
movsl
mov
cmp
or
and
dec
bound
in
add
or
mov
lock
xchg
mov
imul
popf
jno
mov
jns
xchg
inc
jg
cmp
movsl
je
fdivrs
out
jmp
shlb
insb
in
das
xchg
pop
jp
pop
xchg
stos
sub
xchg
xor
push
adc
out
out
or
div
mov
adc
jae
in
inc
cmp
aaa
lret
and
dec
jmp
in
fsubs
into
lds
add
jno
repnz
jbe
xor
int3
jno
pop
cmp
or
sti
and
faddl
pop
mov
adc
mov
rcr
push
or
xor
jo
or
xchg
pop
xor
ss
pop
sbb
aam
jecxz
inc
and
push
mov
and
push
testb
push
aam
js
cmpsl
test
dec
push
inc
ljmp
je
adc
sub
pop
in
xchg
out
mov
repnz
jge
dec
sub
test
sti
ja
and
jns
outsl
ret
pop
xchg
pop
je
call
lds
and
fwait
lds
jno
stos
in
sbb
negb
pusha
bound
mov
sub
ljmp
xor
and
in
push
les
push
js
je
dec
stos
sub
ret
sub
mov
mov
imul
aam
out
iret
imul
je
jmp
jo
in
sbb
xchg
fsubrl
xor
dec
jne
add
mov
sahf
sbb
lahf
decb
fistpl
jo
pop
push
in
jl
xor
cmpsl
pop
and
dec
add
xor
add
dec
lods
daa
jo
popf
stos
mov
xor
pop
fimuls
loope
jnp
hlt
arpl
or
ret
xorb
test
inc
and
into
ja
xchg
xor
or
arpl
dec
adc
push
aam
mov
add
popf
popf
and
mov
lret
imul
lahf
loopne
push
fldlg2
shll
into
mov
pop
mov
jb
sub
jo
dec
jecxz
add
or
test
xor
dec
out
fcomps
and
gs
das
aam
push
subl
shll
rorb
cs
fmul
push
loop
test
es
jno
aas
dec
in
cli
jae
mul
fnstsw
je
movsb
hlt
jg
or
je
add
imul
jle
xchg
imul
ret
xchg
cld
add
cmp
mov
adc
sarb
mov
mov
mov
pop
mov
pop
sub
sbb
jg
push
icebp
lahf
jp
dec
imul
jns
push
aad
arpl
mulb
call
roll
fcomp
outsb
test
test
int3
gs
mov
pop
imul
adc
mov
call
loop
xorl
xor
jb
lret
movsl
out
out
inc
in
push
mov
jmp
mov
insl
cmovae
adc
addr16
outsl
repz
shl
call
sub
mov
aad
imull
lret
inc
or
push
in
scas
call
xchg
add
push
addr16
push
inc
sbb
scas
into
mov
mov
popf
shl
pop
jbe
lret
fisttpll
shlb
dec
aam
test
sti
jae
out
and
stos
adc
pop
jno
inc
stos
pop
sbb
out
addr16
xchg
pop
addr16
addb
inc
cld
xchg
scas
lea
mov
movsl
push
fdivrl
dec
jge
add
or
sub
adc
jo
shll
into
mov
mov
movsb
push
xchg
notl
aam
imul
rcll
pop
sbb
pop
out
shlb
bound
pop
js
hlt
lea
cmp
inc
mov
push
fisttpll
lds
lea
mov
rcll
push
xor
dec
mov
add
hlt
mov
jb
fcmove
lret
xchg
adc
mov
cli
mov
stos
xor
mov
call
fnstcw
push
dec
inc
or
jecxz
xlat
dec
ss
add
ret
in
sahf
mov
adc
cmp
sub
cmpsl
jp
sub
jmp
dec
xchg
sti
mov
jmp
and
loopne
fwait
jae
dec
cmp
sbb
aad
shrl
mov
pop
ficompl
mov
ret
mov
xor
call
mov
sub
incl
xchg
adcb
jb
cmc
inc
jae
sti
mov
iret
add
das
or
hlt
sub
push
imul
popa
ret
and
xor
mov
fimuls
gs
jnp
leave
mov
loopne
popf
dec
mov
jl
fdivrl
movsb
or
mov
incb
mov
pusha
mov
ja
adcb
sbb
pop
or
and
xchg
xor
adc
lods
cld
jge
add
sub
jo
or
vpsubsw
stos
jns
push
inc
pop
and
xor
xchg
addb
cmpsb
cmp
test
rclb
inc
imul
cmpsb
lret
or
sub
mov
aas
fisttps
hlt
outsl
or
mov
mov
sbb
je
and
dec
jae
mov
ja
jns
add
or
mov
subl
shl
jne
push
and
loop
ror
push
stos
cmc
aas
enter
push
cmp
fistl
mov
xor
inc
sub
cs
mov
lods
cmp
cmp
scas
cmpl
jo
add
add
mov
dec
add
and
push
pop
sub
lds
pop
mov
cmp
int3
xchg
sub
add
xchg
mov
lea
cmp
mov
std
xchg
lds
fidivrs
in
fsub
call
dec
mov
xor
adc
orl
inc
subb
daa
inc
mov
popf
dec
xchg
shr
std
sub
dec
bound
out
fnstsw
ss
adc
daa
enter
mov
add
pop
push
mov
inc
repnz
arpl
andb
jae
outsl
mov
and
mov
rcrl
sub
std
fnstcw
push
leave
sbb
sbb
push
cmp
cmp
test
mov
sar
push
pop
push
out
ret
inc
mov
bound
add
cltd
mov
or
jl
stos
nop
bound
scas
sbb
or
push
cmpsb
adc
mov
xlat
lods
lea
or
or
insb
dec
xor
sub
or
aas
push
jo
insl
add
shlb
repnz
movsb
jnp
jl
aaa
cmp
sub
shll
cmp
adc
loopne
flds
js
and
jg
out
inc
xor
daa
shl
add
sbb
popf
testl
pop
repnz
into
sub
filds
push
cmpsb
or
fcmovne
lret
or
mov
call
cs
inc
loopne
negb
jb
shlb
mov
mov
push
mov
outsl
aam
xor
scas
out
xor
stc
movsl
sub
es
mov
mov
ss
jne
adc
sbb
inc
into
mov
pop
or
adc
jbe
leave
insl
xchg
add
loopne
int
xor
loope
iret
pop
mov
out
arpl
lock
mov
inc
cmp
push
push
leave
hlt
aad
test
shlb
jb
out
xrelease
lret
adcl
sahf
mov
rolb
pushf
popf
adc
lcall
cwtl
add
xor
cmp
dec
test
xchg
inc
loop
add
mov
mov
sbb
inc
mull
lcall
lds
or
jb
daa
adcb
stc
int3
mov
ret
inc
in
aas
or
pop
in
ret
into
jecxz
mull
xchg
add
xor
xor
mov
std
scas
stos
jle
pop
cmp
shll
and
xchg
lret
sub
push
movsl
loope
call
loope
sub
loop
jge
subb
xchg
mov
inc
mov
test
imull
frstor
ds
and
int3
in
inc
mov
mov
mov
lock
test
fnsave
mov
mov
mov
je
into
inc
int
mov
lahf
mov
test
loopne
sbb
ret
mov
and
imul
lcall
sbb
and
cs
pop
pop
lods
repnz
lds
and
dec
mov
rcrl
in
dec
mov
sub
std
lret
lods
roll
add
mov
xchg
push
cmp
out
js
outsl
push
push
imulb
iret
dec
out
in
mov
shll
fxtract
mov
stos
into
mov
jbe
sbbb
sub
lcall
idiv
sbb
addl
jecxz
add
clc
bound
dec
fs
fcmovbe
mov
sub
jne
faddl
inc
insl
mov
mov
push
xor
xlat
mov
loopne
dec
jo
cli
mov
lahf
adc
ljmp
lods
push
js
out
or
repz
movsl
mov
add
push
mov
and
inc
pop
shl
in
sahf
jl
or
cltd
in
stos
or
adc
jbe
push
mov
push
push
dec
jge
xchg
aad
inc
test
aas
scas
jge
movsb
fwait
mov
pusha
inc
adc
xchg
in
ret
push
pop
pop
pusha
rorl
xor
mov
dec
pushf
xor
mov
hlt
dec
fiadds
mov
imul
in
pextrw
inc
sub
cmpsb
mov
xlat
xchg
hlt
add
dec
jmp
adc
cmpsb
dec
mov
das
daa
mov
jo
and
dec
in
push
ss
sub
bound
clc
cld
ror
ss
test
push
cmpsl
sbb
sub
xchg
insl
nop
fs
ficoml
fnstenv
fists
add
repnz
jp
cmpsl
pop
add
shlb
pop
mov
dec
xchg
aam
mov
xchg
rcrl
xlat
adc
inc
or
add
jne
inc
mov
xchg
push
sbb
add
sub
sbb
leave
add
xchg
dec
aaa
jo
push
popf
push
jnp
mov
fucomi
xchg
add
js
or
mov
adc
mov
mov
xchg
aaa
dec
xchg
add
pop
fistpll
mov
dec
inc
xchg
cmp
dec
xor
and
mov
nop
mov
jecxz
stc
or
stos
jne
mov
cs
cmp
cmpsb
jbe
stos
int
inc
dec
faddl
nop
sbb
mov
mov
sahf
fstpt
add
cld
jo
leavew
rcr
std
int
inc
mov
stos
inc
cmp
ja
dec
scas
mov
stc
jecxz
cmpsb
push
push
stos
dec
sub
push
cmp
jbe
push
repnz
or
inc
ljmp
jmp
std
jp
dec
jp
mov
and
adc
bnd
add
bound
sub
es
lret
or
rolb
push
test
pop
jecxz
push
adc
sbb
xchg
js
sbb
lcall
aam
add
cmp
jmp
and
sub
cwtl
mov
mov
dec
rcrb
mov
repnz
jo
mov
rcrl
sbb
sbb
adc
js
ja
add
push
stos
cmp
es
lahf
out
out
inc
fistpl
rcrb
add
out
jbe
push
push
lods
leave
dec
daa
xchg
xchg
xchg
cmp
arpl
cmpl
or
push
js
cmc
add
xor
outsb
pop
push
mov
sarl
fcmovu
pop
loop
jge
test
adcl
cmp
sub
push
dec
arpl
subb
pushf
pop
jge
add
and
jmp
inc
das
xor
inc
mull
and
fistpl
sub
pushl
fisttpl
inc
adc
aaa
outsl
jg
mov
scas
mov
push
add
xchg
fidivl
adc
aam
insl
hlt
psadbw
or
inc
aad
xor
scas
les
out
movsb
pop
lods
pushf
mov
into
in
movsb
mov
out
dec
outsl
clc
push
dec
in
lock
sub
pushf
inc
dec
out
dec
pop
push
iret
dec
jns
pop
cltd
xlat
test
push
jbe
jns
adc
insb
adc
cmpsb
loope
fs
xchg
lock
data16
pop
in
push
loope
scas
out
sarl
mov
mov
notl
dec
sbb
out
adc
popf
dec
inc
dec
aaa
sub
and
repnz
cld
dec
push
into
mov
adc
popf
adc
imul
repz
mull
pusha
add
scas
mov
mov
inc
jnp
sub
mov
outsb
mov
pop
pop
push
addr16
push
jg
insb
data16
idivl
ret
arpl
fdivs
in
cs
xor
inc
inc
fnstenv
lea
xlat
rcrb
aaa
or
jg
push
mov
push
movsb
mov
mov
push
aad
jmp
inc
push
and
pop
test
mov
loopne
cmpsb
cmp
sbb
jbe
cwtl
adcb
sarb
xchg
or
mov
mov
mov
jne
hlt
subb
add
xor
push
aam
cmp
and
mov
dec
rcll
mov
dec
and
or
lea
cmp
jbe
nop
push
std
aas
int3
add
insl
imul
lds
pextrw
lods
inc
push
jb
fdivr
sbb
cltd
and
scas
pop
or
test
shll
jle
jp
sub
sahf
insb
add
xchg
imul
dec
adc
call
lock
mov
mov
xchg
push
jnp
mov
or
mov
or
pop
fisubs
fimull
cmp
jb
mov
sub
mov
mov
sti
fdiv
xchg
push
nop
mov
out
xchg
out
mov
push
aam
add
mov
mov
pop
fs
sbb
add
stos
ja
loope
sub
hlt
mov
outsl
cmpl
inc
movsb
negb
or
insl
addr16
jg
sbb
mov
adcb
int
int
and
xchg
inc
popf
pushf
add
adc
leave
xor
popf
imull
fnstcw
into
jnp
sbb
add
xchg
ss
pop
pop
and
or
mov
jle
in
decl
xor
repnz
loopne
std
xorl
sbb
adc
lahf
add
jge
les
aas
inc
pushf
lret
xchg
int3
xchg
or
jg
out
dec
push
nop
test
adc
xchg
cld
pushf
out
cwtl
sub
sub
or
int
std
jae
pop
test
jns
adc
mov
loop
cli
inc
xlat
mov
cmp
sbb
addr16
adc
cltd
cmp
cmc
int3
je
dec
shlb
push
pop
pop
cmp
push
pop
xchg
daa
or
jmp
and
call
daa
push
add
xor
or
push
lcall
pop
mov
inc
lods
lock
adc
lret
xor
in
sub
pop
testb
mov
jecxz
in
xor
inc
lock
fsts
adc
icebp
mov
mov
movb
fcmovb
test
jle
jl
mov
sbb
dec
shrb
mov
mov
jb
outsb
test
es
nop
cvtps2pi
or
xor
bound
cmp
movsb
pop
adc
ficoms
mov
push
rorb
jmp
scas
lock
mov
xchg
push
in
movsl
pop
ja
jno
in
xchg
push
sarb
pop
shl
lods
sbb
inc
xchg
fistps
stos
mov
mov
pause
in
stc
mov
or
in
dec
pop
into
leave
push
add
leave
gs
call
in
mov
test
data16
mov
inc
jle
jp
sub
loop
cmp
imul
aas
in
adc
ss
lock
mov
out
jp
jns
adc
pop
add
int
adc
lret
in
cli
out
shl
out
insl
imul
inc
mov
pop
out
adc
cmp
dec
or
jbe
int
in
pop
push
enter
inc
mov
rorb
stc
jb
inc
mov
jae
push
int
mov
inc
fcompl
icebp
lods
jns
cmpsb
fiaddl
adc
lret
cld
push
out
shr
movsb
xchg
mov
test
push
inc
jecxz
ja
cmp
out
scas
sub
xor
mov
mov
and
cmpsb
mov
sub
stos
mov
inc
sti
mov
cmpsl
inc
cltd
pop
test
pop
sub
jmp
jmp
sbb
inc
sub
jmp
movsl
in
icebp
sbb
mov
mov
push
xchg
mov
and
jmp
mov
mov
rcll
adc
ret
ja
mov
lock
adc
mov
sarl
sub
outsb
imul
lds
xchg
stc
stc
fcmovb
in
mov
xchg
dec
das
lods
iret
icebp
cmp
sbbl
lcall
pusha
sbb
cmp
sahf
jl
mov
imul
icebp
xor
cmp
xchg
sub
sbbb
cli
ret
push
adc
sub
mov
sbb
inc
outsl
cltd
or
into
call
dec
movsl
incl
call
mov
xchg
adc
add
in
adcl
fisttpl
pop
sti
imul
loopne
mov
or
cmpsb
and
mov
mov
jecxz
rep
jo
hlt
push
daa
loope
xor
les
or
sub
test
insb
and
jmp
loop
pushf
cmp
fcomp
cs
or
aaa
shrl
aam
and
add
mov
rcrb
mov
cmp
mov
pop
mov
inc
cmp
push
cmpsb
outsb
jg
rorb
sub
sub
lock
das
xchg
orb
scas
xchg
jg
pop
lods
push
pusha
js
out
ss
lds
lods
test
mov
movl
or
cmp
dec
and
pusha
mov
xchg
add
inc
fisttps
mov
and
arpl
mov
push
xchg
clc
cmp
or
jae
scas
push
xor
data16
xor
inc
rclb
hlt
aas
mov
jmp
scas
aam
dec
sbb
in
nop
fildll
push
ljmp
mov
scas
loop
shl
push
dec
inc
adc
out
jne
add
adc
inc
cmp
mov
inc
test
lret
add
jae
in
add
bnd
cmp
push
push
jmp
cmp
shr
shl
cmp
jno
js
adc
std
pop
fs
lods
lcall
imul
cmpsb
xchg
imul
in
outsb
lods
mov
imul
mov
rclb
jno
outsl
sub
jmp
jecxz
mov
adcl
in
stos
dec
mov
cli
insl
nop
push
sub
pushf
xchg
inc
pop
into
loope
cmp
xchg
stos
mov
push
ja
inc
adc
lds
mov
outsb
adc
cmp
adc
mov
and
mov
lds
mov
shlb
data16
aas
push
lea
leave
xchg
ds
and
pusha
jnp
addb
or
or
push
and
shlb
add
test
lock
imul
inc
inc
cmp
and
outsb
filds
push
or
xlat
mov
aaa
ret
lahf
stos
aas
pop
daa
mov
sbb
or
dec
xchg
or
into
mov
aaa
xchg
sub
cmp
dec
inc
mov
stos
mov
divl
sub
inc
jl
xor
mov
jno
mov
aas
mov
mov
sbb
jecxz
pusha
ja
inc
sub
mov
test
hlt
fsts
popa
add
xor
add
pop
sbb
lds
lret
sbb
imul
or
or
sub
insl
fdivp
push
ret
shl
jp
loope,pn
fs
pop
add
loop
repz
mov
mov
adcl
pop
fsts
inc
sti
scas
imul
mul
pop
xchg
pop
xorl
fcompl
pushf
mov
push
stos
out
nop
mov
sbb
iret
std
data16
lret
test
dec
ret
sti
add
ds
fsubrs
jle
lods
enter
test
or
mov
fdivr
lahf
ja
stos
add
inc
cltd
push
pop
inc
lock
addr16
scas
dec
inc
sbb
jns
jge
sbb
add
fiadds
or
mov
aam
jecxz
xchg
int3
insl
and
or
adc
mov
into
fwait
cmp
in
dec
sar
sbb
push
jae
fisubrl
and
or
inc
push
xor
icebp
push
cwtl
mov
push
test
jle
adc
push
push
jnp
or
mov
cmc
and
stos
sbb
jae
ret
jl
push
mov
aas
jae
popa
inc
fnstenv
inc
mov
jmp
mov
imul
pop
mov
push
mov
fsubl
popa
hlt
jb
sti
stos
popa
sbb
or
mov
and
mov
or
sub
scas
jmp
push
mul
adcl
lods
jmp
mov
or
or
cmp
inc
cmpsl
push
movsb
shrl
jge
dec
and
xor
mov
loopne
ja
inc
pushf
mov
xor
js
inc
and
xchg
and
mov
add
idivb
les
clc
ja
stos
sub
sbb
stos
test
sahf
jno
push
xchg
xchg
neg
sbb
pop
mov
fildll
outsb
ja
movsb
mov
jecxz
and
iret
mov
and
loopne
adc
xchg
sti
ljmp
inc
inc
pop
ret
pop
scas
inc
outsl
into
push
lret
cmp
call
mov
cli
adc
mov
mov
inc
sti
lock
add
lods
mov
shr
lds
in
movsl
lahf
gs
xchg
jb
outsb
ljmp
ret
clc
fdivrp
xchg
xchg
xchg
sub
xchg
adc
loop
jae
inc
sahf
mulb
aam
mov
les
test
mov
add
insb
adc
mov
outsb
jbe
mov
jmp
std
inc
lods
movsb
ret
cmp
in
in
push
outsb
fidivrl
aas
push
fdivl
sbb
call
adc
mov
les
xlat
sub
enter
cwtl
out
ljmp
pop
clc
pop
push
jle
fwait
push
fdivl
cmp
into
mov
fcmove
cmp
les
jno
mov
sbb
jge
jmp
lahf
loope
xchg
aam
jle
in
pusha
daa
fs
mov
cmp
adc
mov
inc
jmp
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
jmp
outsb
lods
or
mov
cmpsb
or
push
jb
scas
addl
mov
xor
xorl
dec
push
call
aam
pop
adc
aas
test
inc
test
cmp
mov
divl
or
loop
xchg
and
xor
sbb
insl
sub
sub
jmp
pop
sub
test
sbb
adc
jp
test
push
shrb
mov
vpshuflw
or
push
lahf
pop
ss
or
mov
test
aad
sahf
jle
and
bound
or
push
push
mov
sbb
arpl
lret
inc
mov
xor
mov
push
aam
fs
xor
xchg
arpl
jle
cmp
dec
jp
xlat
sbb
jae
and
shl
xor
and
jns
jno
je
add
mov
adc
je
ss
es
std
xlat
dec
sub
neg
pop
movsl
enter
into
push
jmp
loopne
pop
mov
xchg
dec
fstl
into
dec
mov
dec
mov
xchg
mov
push
and
sbb
stc
mov
sub
rclb
push
adc
add
mov
or
int
pop
adc
testb
mov
xor
mov
std
out
loopne
roll
mov
add
and
adc
das
and
dec
imul
aas
sbb
stc
imull
pop
mov
lds
dec
call
adc
ja
test
cld
push
cld
mov
lret
push
fiaddl
hlt
mov
jmp
pop
sbbl
and
jl
call
sti
fimull
loope
pop
push
and
push
xchg
push
testb
jbe
xchg
scas
ss
jge
pop
int
xchg
jae
mov
sub
in
test
mov
xchg
daa
pushf
inc
pop
mov
daa
insb
nop
and
ss
mov
int
loop
sbb
data16
mov
decl
push
sahf
sbb
xchg
and
and
or
push
xor
add
in
pop
mov
xchg
push
cld
ss
sbb
mov
jne
shrb
sub
sbb
subb
xchg
mov
fnsave
mov
mov
and
in
lret
inc
mov
call
ja
mov
arpl
inc
or
js
xchg
adc
ja
std
mov
movsb
xor
int3
push
loope
icebp
inc
push
imul
aas
adc
pop
fadd
push
shrb
ja
xorl
inc
adc
scas
mov
gs
push
popf
inc
lods
mov
mov
xor
adc
adc
andl
cmp
jmp
jp
lcall
and
fsubl
ljmp
xor
dec
in
sbb
ret
rol
jl
lods
out
js
or
jb
call
imul
cmp
insl
add
mov
cmpsb
loope
mov
shrd
add
cmp
into
push
jle
das
push
scas
jp
fsubrl
rsm
dec
imul
movsl
sub
test
stos
adc
mov
jecxz
ret
jle
cmp
insb
add
push
mov
je
in
sub
jecxz
shlb
push
jg
sbb
add
dec
mov
sbb
andb
imul
setge
pop
push
push
inc
aad
inc
pushf
punpckhbw
loop
jb
dec
out
jae
and
pop
bound
jmp
popa
pop
mov
aam
sbb
pop
test
leave
add
shrl
dec
nop
pop
js
pop
out
dec
inc
cmp
lods
jecxz
xchg
fdivrs
mov
jae
repz
test
js
pusha
inc
rorl
xchg
mov
sub
ljmp
push
repnz
scas
testl
mov
jno
test
push
jecxz
mov
xchg
xchg
and
aad
dec
imul
imul
sub
imul
push
lret
sub
inc
cld
jl
sbb
push
idivb
push
addb
push
lahf
test
das
add
mov
sub
push
pop
fistl
imul
or
mov
idivl
icebp
add
fisubrs
jo
push
mov
int3
inc
pop
mov
cwtl
push
stos
mov
dec
out
ljmp
cmp
add
jp
jge
jle
outsl
into
nop
jp
ss
jb
pop
jo
negl
push
or
push
mov
adc
mov
sub
xlat
popaw
test
stos
movsl
into
test
out
jbe
fstl
lret
in
or
add
shr
js
subl
lcall
icebp
mov
cmp
scas
xchg
aaa
cli
cmpb
mov
insl
das
and
inc
or
jno
insl
adc
pop
and
test
xchg
xchg
mov
inc
sub
adc
sbb
cmp
fists
pop
pushf
roll
stc
scas
push
sahf
decb
adc
sarl
mov
aam
int
pop
ds
cld
iret
ss
push
out
and
adc
jmp
pop
hlt
mov
shl
mov
imul
les
scas
lods
xchg
jl
dec
mov
xlat
adc
mov
jnp
ret
pushl
fbstp
dec
cwtl
gs
out
add
and
jg
test
fimull
imul
testl
test
pop
bound
pop
movsl
daa
call
add
outsl
into
jg
add
popfw
leave
mov
xor
cmpsb
add
cmpsb
cli
cmp
stos
inc
data16
out
ss
icebp
daa
adc
and
and
mov
insb
add
ja
ljmp
lret
adc
cmp
inc
insl
in
sbb
cwtl
loope
bound
add
inc
pop
sub
loop
and
mov
outsl
mov
xchg
pop
or
jae
fldenv
adcb
mov
push
popf
inc
add
xchg
sub
mov
test
add
cmp
xor
jne
push
rorb
loop
fidivrs
mov
sbb
hlt
push
fmuls
aam
pop
xlat
fbstp
add
cli
mov
les
cs
and
xor
pop
mov
push
cmc
lods
xchg
lahf
mov
add
and
mov
stc
enter
mov
jbe
cld
les
adc
dec
pop
push
aad
dec
mov
shll
push
push
js
jo
cmp
or
push
mov
dec
cs
loop
cli
mov
jmp
xchg
rolb
jecxz
pop
jg
iret
jae
push
sub
mov
call
fs
mov
sub
loopne
cmpsb
dec
mov
sahf
fwait
jno
mov
pop
nop
aad
cmp
repnz
push
cmp
mov
call
sahf
movsl
lret
dec
or
dec
add
adc
inc
inc
cltd
out
cmc
or
andl
aad
lea
inc
inc
mov
fwait
movsl
dec
insb
push
lcall
ljmp
in
adc
call
ret
mov
jb
mov
aas
sbb
push
inc
xlat
scas
xchg
push
outsl
dec
lea
push
add
repz
mov
ljmp
xchg
cmpsb
lret
xchg
adc
lret
or
mov
dec
into
sbb
push
and
push
fucom
inc
push
mov
xchg
dec
ds
lret
xlat
loopne
jbe
enter
les
out
cltd
push
inc
xchg
out
xchg
out
int3
dec
sub
rclb
faddl
pop
js
mov
xor
adc
repz
cli
out
cs
mov
int3
pop
in
mov
cwtl
cmp
xorl
shll
repz
mov
fucom
sbb
adc
push
xchg
lock
cli
insb
add
pop
pop
arpl
loope
push
xchg
or
cmp
xchg
insl
push
pop
xchg
enter
aaa
xor
mov
lcall
aad
shrb
jl
add
decl
aad
mov
lret
sub
scas
pusha
xor
jge
int3
mov
stos
fwait
aad
lea
push
mov
dec
push
cs
mov
sarl
or
lock
adcl
popa
fucomp
lret
test
test
xor
sti
ret
loop
insl
mov
sbb
in
push
movsb
fsubp
inc
mov
je
pop
xor
sarb
sub
xor
scas
or
or
mov
dec
repnz
in
cmp
rorb
jmp
arpl
dec
sub
sub
jo
mov
leave
imul
div
cmp
popa
int
cli
mov
jbe
addr16
fbld
movsl
andl
push
adc
adc
cld
adc
mov
cmp
ja
mov
ljmp
and
shlb
orl
sbb
add
aam
xchg
jge
jmp
lret
dec
loopne
ret
jno
mov
sahf
mov
daa
enter
and
sub
or
push
mov
push
inc
sti
out
lods
enter
ljmp
insl
fists
inc
xchg
fistpl
loop
lret
mov
inc
sub
jg
dec
push
push
xchg
jne
mov
jae
andl
shlb
ss
inc
fidivrs
cwtl
mov
pop
push
inc
push
pop
arpl
or
icebp
enter
cs
adc
mov
or
mov
daa
xor
cmp
sub
xchg
bound
mov
scas
sub
sti
loopne
push
imul
gs
sub
xchg
arpl
push
jl
mov
xchg
mov
sbb
sbb
push
push
cmp
jae
nop
mov
cwtl
orb
out
addr16
stos
lahf
aaa
mov
adc
fistpl
pop
lock
lods
daa
xor
loope
aad
imul
jmp
adc
mov
push
pop
mov
inc
sbb
push
stos
mov
cmp
repz
pop
out
adc
jp
cmp
jge
rcrl
sti
pop
aad
es
testb
dec
cs
neg
insb
xor
or
push
sbb
aas
stos
push
subl
jns
push
sbb
inc
inc
mov
pushf
pushf
push
sub
mov
lods
cld
and
sbb
dec
inc
pop
xchg
xor
es
xchg
sbb
fs
lcall
insb
rcl
rorl
mov
lret
sbb
sbb
sub
pop
mov
dec
popf
ss
negl
arpl
lds
std
out
int
push
add
jg
scas
cmp
inc
mov
or
push
int3
pop
lods
jmp
imul
rol
push
mov
mov
xor
pop
ss
rorl
dec
jl
sbb
imul
movsb
decl
int
adc
test
jbe
lret
enter
xorl
repnz
sub
enter
cltd
mov
outsb
mov
int
sub
clc
and
mov
sahf
je
xlat
movsl
jl
fwait
mov
in
in
pop
xchg
adc
pop
cmpb
push
mov
adc
or
cmp
push
or
xor
sti
and
push
ret
std
shl
test
addr16
ret
bound
or
xchg
lea
mov
or
inc
imul
adc
cwtl
pop
cltd
aas
insb
imul
push
push
adc
cltd
lods
daa
lret
jg
stos
inc
paddusw
shll
test
push
mov
jbe
imull
lods
sub
test
ja
cmp
jns
cmp
mov
mov
out
ja
jne
mov
into
aad
mov
pop
aas
mov
and
int
pop
push
adc
pushf
or
pop
xor
daa
and
push
dec
clc
mov
test
icebp
dec
pop
or
mov
test
rcl
loopne
push
sbb
loop
dec
cmovl
popf
js
inc
insb
fidivrl
jl
ljmp
lds
xor
xchg
iret
xchg
pop
popf
xchg
cwtl
call
movl
inc
cmp
lods
xchg
mov
fildl
mov
aad
out
add
je
push
sti
or
dec
xor
adc
inc
mov
mov
and
pop
mov
cmp
and
and
sbb
fsts
cmpsb
into
cwtl
shlb
mov
movsb
aam
inc
fdivl
loopne
xchg
push
cmc
sarl
neg
push
in
pop
sbb
ds
das
ja
pop
loope
fisttpl
int
dec
and
mov
add
pop
and
sub
cmp
jb
mov
daa
stc
popl
subb
lahf
rol
cmp
cmp
xchg
shrb
push
pushf
push
icebp
and
test
ficoms
sbb
imul
in
fxch
notb
pusha
mov
mov
or
mov
mov
loop
jge,pn
and
aam
xchg
and
repnz
aas
adc
pop
hlt
mov
stos
lock
adc
imul
xor
jmp
dec
push
xor
xor
shll
add
xchg
jne
fcomip
rorb
mov
icebp
les
dec
push
cmp
sbb
push
enter
ljmp
lds
sbb
sub
jnp
aam
lahf
pop
push
jnp
test
in
inc
xor
cltd
inc
sub
fcomps
xchg
cltd
jl
mov
shrl
int
cmpsb
out
loope
cmc
push
mov
jmp
repz
rcrb
outsb
xorb
fisttps
js
fdivr
xchg
adc
mov
mov
xlat
xor
fbstp
in
mov
stos
pop
notb
push
mov
mov
xchg
xor
fwait
inc
daa
faddl
jae
adc
push
call
pop
sti
jg
popa
outsb
sbb
xchg
cld
push
push
ja,pn
insb
gs
fidivrs
cmp
xchg
push
in
mov
popf
mov
xchg
push
xchg
push
aad
mov
jnp
mov
sbb
or
fmuls
movsl
mov
xor
mov
mov
add
mov
roll
fistps
mov
in
cli
fidivs
add
scas
mov
addr16
outsl
repnz
mov
jecxz
sub
inc
push
push
ljmp
cli
and
lret
xor
popa
rcl
pop
adc
movsb
cmp
loop
or
jle
inc
sub
ja
pop
dec
cmpsl
sbb
dec
sbb
cmp
imul
and
lcall
mov
push
jmp
loop
and
fldenv
fidivl
cmp
xchg
testb
inc
into
insl
push
daa
shll
cmpsl
jmp
aaa
popa
outsl
fdivs
push
mov
xchg
pop
jno
mov
or
jl
inc
js
scas
sub
jo
out
cmp
stos
add
xor
push
adc
add
je
push
mov
insl
xchg
push
xor
shll
out
scas
test
mov
lods
cmpsl
push
sahf
pop
sti
or
lcall
icebp
bndstx
sub
call
mov
cs
mov
ficomps
or
call
xchg
jbe
in
out
jae
loop
jl
sbb
mov
push
inc
lahf
cmp
clc
inc
mov
test
cmc
mov
out
iret
outsb
ljmp
fcoms
jl
push
mulb
sub
add
sbb
add
inc
mov
mov
or
sbb
and
daa
cmc
sub
sub
lcall
push
xor
pusha
xor
out
aad
and
ja
sbb
mov
push
adc
mov
lcall
inc
sub
push
jne
jo
rclb
jo
outsl
clc
push
int
adc
ret
and
adc
pop
out
rclb
outsl
pop
jg
cmp
jno
or
or
or
jae
lcall
hlt
push
es
dec
adc
inc
fwait
in
sbb
inc
in
add
lret
fst
testb
idiv
sub
fidivrl
mov
inc
insl
and
push
outsb
popa
dec
mov
repz
xor
xor
pop
pop
popa
imul
insl
test
and
out
xor
fsubrs
hlt
push
daa
cmpsl
mov
pop
push
enter
enter
stos
adc
inc
adc
sarl
cmc
pop
loopne
insb
movsl
pop
jae
push
jge
jb
sub
xor
insb
mov
in
or
jno
push
bound
rcrl
in
mov
movsb
cmp
int3
sbb
in
jb
jl
mov
fs
jae
pusha
jns
lods
and
xor
fsubs
scas
xchg
cmp
arpl
les
mov
loop,pn
pop
adc
inc
lcall
leave
add
push
ja
jnp
out
sti
stos
inc
cmp
lret
or
fstl
and
pop
adc
es
inc
js
sub
sub
data16
sti
movsb
inc
add
jecxz
dec
imull
jnp
xchg
mov
xchg
fsubrs
push
pop
or
xorb
fmuls
and
dec
pop
int
ret
pop
xlat
ja
pop
outsl
cmp
jnp
adc
jmp
jno
xor
mov
fwait
add
inc
aas
jmp
jns
das
sub
jbe
sub
and
fs
sbb
iret
decb
movsb
sbb
mov
xor
xchg
xchg
fsub
imul
pop
adc
inc
lods
lods
addr16
jge
jl
inc
or
roll
lods
subb
sahf
pop
shll
popa
adc
sub
leave
sub
sbb
xlat
and
fsubl
and
add
jecxz,pn
ret
mov
aaa
pop
xor
rcr
movsb
sub
inc
cmp
pop
scas
outsb
cmp
jge
adc
push
pop
and
out
push
xor
mov
push
xchg
shr
cmp
xor
and
inc
inc
repz
pop
adcl
mov
and
repz
out
and
and
adc
jmp
mov
mov
iret
out
push
mov
mov
mov
or
mov
cmp
push
aaa
inc
daa
je
ja
cs
lods
xor
sarb
repz
pcmpgtw
sbb
sub
ret
aaa
and
sub
xchg
and
jle
mov
sbb
sub
inc
jl
and
jns
pop
scas
pop
aas
add
inc
aad
xchg
cmpsl
or
lock
inc
in
pop
test
push
add
add
outsb
mov
mov
mov
addr16
pushf
ret
xchg
ret
push
scas
into
shr
jno
ljmp
test
push
test
fxch
les
pop
xchg
iret
ljmp
mov
cwtl
out
jmp
fucomp
insb
add
inc
cli
adc
mov
repz
int3
into
inc
jp
paddb
int
test
pop
cmpsl
inc
jns
ljmp
hlt
sbb
jbe
pop
mov
das
mov
xchg
shll
aaa
inc
shrl
push
in
in
xchg
aas
call
dec
testl
cmp
push
loope
nop
or
add
mov
mov
mov
inc
sub
ss
xor
dec
jno
lahf
arpl
xchg
stc
dec
xchg
push
je
adc
insb
cmpsb
push
lret
jnp
add
sbb
dec
jnp
pop
mov
cltd
mov
push
mov
cmpsl
mov
and
sub
adc
xchg
les
inc
out
insl
adc
outsl
inc
popf
dec
hlt
outsl
pop
xchg
cld
mov
ret
push
icebp
xor
jo
sbb
test
adc
jecxz
insl
ja
ljmp
add
mov
sub
mov
jecxz
push
dec
sbb
dec
jb
sub
arpl
out
in
aad
pushf
rol
ret
xor
paddd
or
fdiv
mov
in
dec
enter
push
das
jo
xor
fdivrs
mov
add
push
leave
dec
pop
mov
dec
and
mov
iret
ljmp
dec
mov
inc
in
mov
and
or
sub
imul
add
cmpl
addr16
rcrb
push
xor
and
ret
ss
mov
je
je
mov
mov
test
les
pop
pop
add
pushf
push
pushf
out
outsl
and
sahf
popf
leave
lods
sub
sahf
fisttpll
cmp
lret
lret
or
inc
mov
rolb
js
mov
pop
fistpll
mov
add
inc
or
inc
sarb
lret
mov
cmpsb
insb
inc
and
pop
cmp
adc
jp
pop
lret
mov
inc
test
movsb
gs
jmp
xchg
lcall
sbb
add
xor
xor
dec
or
in
jp
repz
es
pop
jmp
xchg
jmp
pop
icebp
fcompl
adc
aas
or
xor
jecxz
filds
mov
in
sub
mov
cmc
mov
xchg
aas
xchg
mov
loop
cmc
push
sbb
fbstp
movsb
push
pop
dec
je
test
push
lock
push
data16
dec
out
outsl
jmp
cmovns
mov
jne
imul
cmp
lcall
leave
addb
mov
sahf
incb
lret
test
xor
std
fs
icebp
ss
add
xor
shlb
xlat
push
push
leave
jo
out
mov
sub
negl
roll
pushf
or
sub
out
push
and
jecxz
in
jg
stos
aas
lods
jo
iret
int3
xchg
pop
jno
or
or
inc
mov
mov
mov
insb
sbb
shll
jo
rcrb
jo
loope
xchg
xor
pushf
popf
repnz
orb
adcb
out
and
loop
inc
insb
xor
in
testl
enter
ja
push
rclb
dec
pop
mov
mov
jb
int
sub
int
push
dec
rolb
mov
scas
aaa
icebp
jns
aas
mov
and
imul
push
pop
jp
adc
push
mov
lock
je
push
pop
cmp
jmp
aam
jmp
inc
mov
jp
pushf
int
xchg
and
test
inc
mov
out
sub
mov
jle
adc
dec
jg
aas
in
inc
xchg
or
stos
pop
inc
mov
jns
push
daa
fidivrl
inc
insl
outsb
rcrl
lea
daa
adcl
pop
rcll
lods
mov
pushf
xchg
dec
pop
fidivrs
call
mov
fs
sar
or
mov
push
add
sbbl
mov
mov
cld
xor
mov
nop
mov
adc
clc
ret
repnz
pop
cltd
shrb
test
cmp
cli
je
jb
pop
jmp
or
cmpsb
mov
and
pop
in
push
pusha
or
hlt
sub
mov
jecxz
xor
xor
out
mov
mov
lcall
dec
adc
or
and
xor
sti
scas
in
mov
or
vphaddwq
jnp
leave
cmc
push
push
clc
jbe
push
loope
push
loope
mov
sbb
cli
xchg
inc
cmp
lock
pop
movl
adc
sbb
mov
daa
xchg
mov
adc
loope
adc
in
pop
idiv
aaa
and
xchg
dec
sbb
popa
ljmp
add
loopne
shlb
insb
in
enter
xchg
xchg
jmp
xor
jg
push
stos
sub
fnstcw
lahf
add
hlt
ljmp
cmp
fstl
fsubrl
sbb
stos
sbb
push
js
lea
cmpsl
xchg
sbb
jp
pop
mov
fldcw
mov
pop
mov
pop
pop
fmul
bound
mov
cwtl
sub
add
and
sub
pop
mov
xor
dec
dec
popf
outsb
lods
pop
pushf
push
inc
or
adc
sbb
or
push
xlat
stos
xchg
adc
fst
and
push
sahf
jno
mov
and
lods
dec
mov
xor
cmp
sahf
cmp
push
std
aad
xchg
imul
mov
loop
in
sub
pop
sahf
int3
pushf
imul
mov
dec
lods
mov
sbb
xchg
mov
cmpsb
sbb
mov
lahf
mov
loopne
xor
push
cmpsb
popa
leave
lcall
imul
xchg
dec
xchg
adc
jne
rolb
add
fdiv
mov
ret
adcb
ds
popa
ljmp
sub
ret
push
adc
loope
lods
add
push
jg
jb
inc
sbb
add
pop
add
imul
adc
rorl
push
fwait
ds
and
and
dec
cmp
aaa
add
jns
jne
out
pop
scas
rol
scas
fs
test
push
scas
dec
jns
push
mov
clc
jae
ja
divb
test
xchg
dec
repnz
ret
inc
les
jnp
test
mov
mov
mov
sbb
inc
inc
fcmove
popf
aam
ja
adc
movsb
dec
sub
les
call
mov
jo
cmp
xorb
pop
sub
je
outsb
je
pop
xchg
push
cltd
and
xor
or
jecxz
imul
cmpsb
mov
jo
sub
scas
fidivrs
testl
paddw
loopne
aam
sub
fsubp
inc
and
mov
sub
xchg
push
pop
cmp
mov
in
jb
push
inc
mov
roll
sbb
jl
test
push
push
aad
pop
int
arpl
and
mov
mov
ss
fisubs
jg
pop
int3
push
cmp
dec
jnp
call
or
movsb
mov
mov
fidivs
xor
js
lods
push
hlt
cwtl
mov
adc
mov
dec
add
mov
xor
ljmp
xor
cwtl
jmp
popa
outsl
cmpsb
popa
pop
push
push
gs
rcrl
call
fistpll
xlat
or
adc
aam
mov
adc
pusha
mov
adc
fiaddl
fidivl
bound
lahf
cmpsb
es
push
adc
push
mov
fistl
fnstsw
push
out
jge
test
cmpsb
mov
dec
mov
loopne
cltd
mov
and
rorb
je
inc
mov
or
dec
push
sarb
movsb
loop
jb
bound
xchg
mov
xchg
mov
dec
aas
jns
dec
lcall
push
arpl
decl
mov
dec
and
xchg
loope
call
loopne
jle
mov
add
lds
xchg
divl
mov
cmp
les
lahf
pusha
mov
inc
jae
in
pop
sub
cli
add
lock
stos
jae
cld
sub
test
mov
fnstenv
xchg
mov
push
xchg
in
cld
dec
inc
ret
aaa
in
loope
dec
loop
mov
jbe
in
jno
ud2
jns
sub
xlat
or
ret
pop
shr
or
mov
or
xchg
or
push
jno
shr
mov
testl
lret
les
movsl
lea
shl
sub
arpl
adc
sub
shlb
test
fildll
mov
aam
popa
mov
ret
cmpsl
xor
iret
mov
sub
mov
adc
ds
pop
push
gs
add
sub
mov
gs
inc
jl
icebp
or
sbb
shlb
push
xchg
inc
xchg
lock
iret
or
std
scas
mov
lcall
mov
xor
inc
sbb
mov
and
jge
push
mov
repz
in
movsl
adc
jmp
es
stos
xchg
popf
adcl
inc
imul
or
gs
and
movl
int3
iret
adc
shll
cmp
clc
aas
ljmp
test
int
mov
push
or
fs
pop
pop
es
mov
cli
enter
cwtl
ss
push
mov
enter
aam
repz
push
push
pop
popf
stos
lret
test
cmpsl
push
inc
mov
or
notb
pop
cmp
inc
popf
rcll
sub
mov
sbb
sbb
fwait
je
subb
sbb
pop
pop
jo
orb
push
repnz
or
jmp
test
mov
xorps
add
les
dec
aas
fistpll
jle
es
or
lods
ud2
cmpsb
fsubrs
es
sbb
xchg
subl
mov
out
push
les
call
repz
cwtl
ja
fisubrl
jnp
out
arpl
stc
xchg
sbb
dec
cli
jmp
sbb
outsl
test
pop
jmp
imul
loop
xchg
in
jmp
adc
lcall
and
sub
pushf
mov
pop
jecxz
cmp
aas
into
mov
je
mov
xor
jo
or
mov
xor
push
hlt
hlt
inc
or
scas
cmp
stos
testb
aaa
cwtl
push
adc
fcomps
adcb
in
leave
or
add
sahf
or
jle
mov
mov
sub
cmc
xor
mov
mov
cmc
mov
or
sub
mov
insl
mov
fs
add
xchg
js
mov
cmp
out
dec
jo
testl
xchg
add
dec
icebp
test
mov
ljmp
add
or
xchg
mov
aam
or
jb
je
inc
dec
xor
mov
xchg
jb
pop
adc
cld
push
fidivrl
lret
rolb
push
sub
mov
int
ret
adc
dec
and
cmp
out
jmp
pop
mov
ret
jmp
sbb
movsb
mov
adc
mov
out
fs
aas
popa
insl
push
mov
subl
nop
cmp
pusha
fwait
rol
mov
or
stos
and
add
mov
or
add
out
push
mov
popf
or
push
clc
and
dec
pop
xchg
mov
icebp
jl
out
push
mov
mov
sub
xor
push
les
fcoml
mov
xor
mov
ja
popa
inc
adc
cmp
fcomip
popf
push
sub
ffree
jecxz
xor
sbb
arpl
cmp
lret
xchg
mov
loope
outsl
sahf
sbb
loopne
js
imul
inc
fidivrs
xor
mov
pop
lret
jae
sbb
adc
push
jbe
and
sbb
jmp
jae
loope
sub
pop
test
inc
sub
nop
inc
xor
adc
jb
test
jmp
or
mov
push
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
mov
xorl
mov
mov
sbbl
xor
xorl
add
mov
and
mov
and
xor
xorl
push
xor
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
movzbl
or
mov
mov
subl
xor
mov
add
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
mov
movb
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
pushl
call
jmp
lea
incl
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
xor
movl
add
andl
mov
sbbl
movl
push
movl
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
mov
dec
mov
jmp
mov
or
push
mov
xor
xor
or
xor
mov
sbb
mov
mov
push
add
jmp
incl
mov
mov
inc
movl
cmp
jb
not
mov
xor
movl
add
jmp
movzwl
or
mov
adc
mov
adcl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
add
addl
movzwl
sbbl
mov
movzwl
and
mov
sbbl
movzwl
xor
add
mov
movl
mov
mov
inc
not
mov
movl
cmp
jne
and
mov
sub
mov
xorl
xor
and
add
mov
mov
sbbl
xor
add
adc
mov
addl
movl
movl
movl
movl
mov
movl
cmpl
je
cmpl
jb
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
xor
add
movzwl
mov
mov
je
mov
subl
mov
xor
xor
notl
sub
notl
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
mov
movl
add
andl
imul
mov
xor
mov
mov
add
mov
add
incl
or
mov
mov
mov
sbbl
add
xor
mov
dec
mov
add
mov
add
and
and
mov
xor
mov
subl
mov
lea
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
or
mov
sub
movzwl
and
add
mov
andl
mov
xor
adcl
add
movl
jne
movl
jmp
xorl
mov
subl
sub
xor
movl
cmpl
je
cmpl
jbe
jmp
push
call
xor
or
dec
mov
jmp
mov
subl
mov
mov
xor
decl
xor
adcl
sub
sub
xor
mov
mov
mov
jmp
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
addl
imul
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
addl
add
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
mov
mov
andl
add
movl
xor
mov
subl
mov
mov
xorl
add
xorl
and
or
mov
mov
sbb
mov
xorl
mov
lea
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
jmp
rcr
sbb
mov
nop
cs
or
lret
out
int
mov
sbbl
adc
push
lds
cmp
addr16
mov
inc
lods
push
inc
pop
cmpsb
xchg
call
not
jnp
in
shl
xchg
fisubs
mov
test
cld
pop
push
add
aad
xchg
cmpb
rcrl
in
pop
icebp
xchg
pop
mov
add
jbe
jnp
push
scas
cmp
jno
js
adc
sbb
loop
fs
inc
addr16
test
cmp
adc
inc
imul
pop
mov
icebp
loope
lret
int
fdivrs
or
movsb
add
add
loope
xor
mov
cmp
insl
mov
fwait
xchg
push
cltd
jnp
lock
add
mov
adc
mov
inc
mov
adc
add
jmp
add
pop
dec
sub
pop
xchg
dec
mov
bound
mov
adc
dec
xor
enter
lds
aad
or
pushf
jnp
into
jns
adc
lret
lahf
cmp
jp
cmp
push
ja
ds
adc
rorl
inc
xchg
pop
cmc
cs
push
dec
pushf
les
jae
sbb
inc
sub
add
data16
lods
jne
dec
add
xor
stos
or
stos
addl
inc
push
xchg
pop
out
out
js
xchg
dec
imul
bound
lds
mov
das
cmp
adc
inc
mov
nop
cld
sbb
cwtl
sbb
jp
test
xchg
fbld
xchg
jae
or
dec
mov
jg
orl
adc
jp
add
adc
push
pop
push
mov
push
lcall
aam
add
adc
xor
fwait
das
push
clc
lds
lcall
push
mov
jle
rcr
push
repnz
jae
cmpsb
add
lods
xchg
cltd
xchg
pop
add
cld
jns
scas
fxch
dec
mov
xor
pushf
push
jno
enter
stos
jl
rcl
dec
inc
jb
sub
and
bound
ret
sbb
icebp
iret
aaa
lret
jo
leave
adc
imul
mov
or
sbb
mov
stos
push
mov
lret
lret
push
in
and
cmp
xor
mov
fwait
adc
xor
add
shlb
xchg
xchg
out
cmpsl
fbld
mov
cmp
adc
jbe
cwtl
pop
sub
repnz
mov
aad
xchg
lods
dec
sbb
jae
test
push
add
scas
bound
sub
lret
loopne
or
add
jae
lcall
test
lea
adc
jl
mov
outsb
mov
negb
aaa
fisttps
or
dec
cltd
sbb
int3
xor
inc
cmp
je
mov
push
mov
cmp
and
ja
fcomps
sub
jg
in
xor
in
push
pushf
xchg
and
sbb
mov
sbb
sub
push
cmpl
adc
push
int3
movsl
pop
jecxz
adc
adc
int3
jb
or
jp
mov
cmp
fcompl
in
mov
lcall
xor
sbb
mov
test
pop
mov
push
mov
movsb
or
fisubrs
sub
out
or
std
fdivs
cs
cmp
cwtl
or
les
in
lret
ret
ljmp
and
mov
stos
fsubrl
mov
sub
stos
xchg
testb
sbb
adc
dec
mov
repz
mov
loopne
nop
popf
mov
cmp
jb
push
adc
outsb
cwtl
mov
test
and
jl
testl
test
push
insb
rcll
sahf
xor
inc
cmpsl
mov
out
outsb
inc
and
and
inc
or
jl
jnp
mov
mov
and
into
insl
adc
and
push
mov
mov
leave
pusha
add
add
jg
rolb
jmp
or
daa
cmp
shlb
rcrb
cmpsb
hlt
mov
addl
dec
mov
push
loopne
adcb
stos
call
jl
sahf
jo
xchg
mov
inc
icebp
mov
pushf
sub
adc
ret
xor
mov
xchg
sub
push
cmp
movsb
xchg
scas
mov
insl
mov
mov
dec
xchg
adc
adc
inc
gs
int3
jmp
inc
in
xor
loopne
push
inc
enter
stos
inc
push
outsl
mov
jb
xchg
mov
popf
das
iret
cwtl
cmp
pop
push
lahf
xor
cmpsl
pushf
xchg
inc
imul
xorl
pop
add
test
xor
test
add
test
or
pop
sub
jg
or
into
fimuls
mov
rcr
test
push
cmp
pop
shrl
sub
stos
adc
ljmp
stos
in
fldl
cltd
jl
push
xchg
mov
enter
inc
and
push
jl
repz
sbb
adcl
mov
jae
popf
cs
dec
out
fdiv
popa
andb
aaa
pop
rcrb
mov
xor
sbb
jmp
dec
shrb
mov
lock
std
stos
negl
mov
jne
pop
mov
call
lock
imul
add
jno
test
jbe
pop
aam
in
sti
dec
and
stc
in
ret
lds
jnp
dec
out
and
cmc
mov
fcmovnu
xor
mov
lret
or
lea
and
jecxz
insb
int
or
das
out
and
je
jns
sti
sbb
add
push
stos
shlb
pop
fstps
xchg
jne
jb
aad
mov
pop
pop
push
push
sbb
pop
cmp
shl
jo
and
xchg
sub
mov
sub
mov
adc
inc
cltd
sbb
cmp
in
adc
testl
and
call
jecxz
or
sbb
lcall
adc
pop
jl
leave
dec
push
pop
xchg
push
dec
mov
push
or
sbb
shrb
and
sub
rorb
xlat
es
mov
add
lcall
cmp
rcll
bound
inc
inc
loope
cwtl
cmp
pushf
cmpl
out
and
daa
repz
cltd
hlt
imul
fldt
cld
or
addb
mov
jl
push
imul
and
imul
pop
insb
test
jbe
dec
add
lahf
fidivs
dec
jnp
push
inc
add
dec
xor
aaa
repnz
lods
sbb
add
push
push
scas
sub
lahf
push
aaa
and
mov
scas
sarb
jns
in
popa
imul
imull
jp
mov
insl
xor
in
ds
in
lret
xlat
jmp
lock
out
shll
pop
push
sbb
push
popf
gs
mov
lods
or
mov
mov
ljmp
adc
in
lds
mov
inc
in
mov
ret
mov
js
ficoml
sbb
rcrl
lock
inc
cmp
jecxz
cmp
movsb
xchg
jb
jmp
mov
movd
fbstp
shl
xchg
clc
sbb
out
cmp
sbb
xchg
xchg
or
or
out
popf
adc
sub
mov
out
call
in
dec
das
adc
sub
adc
pop
push
mov
aaa
dec
bound
and
push
imul
cmp
push
or
pusha
adc
mov
fisubl
sbb
pop
int3
out
dec
inc
rcrl
pop
cmp
mov
daa
sarl
movsb
cmp
cmp
push
ret
rorl
xchg
push
xchg
lahf
hlt
pop
mov
clc
pop
cltd
daa
mov
cmp
ffreep
cltd
pop
adc
scas
inc
outsb
js
in
test
sti
jp
mov
out
lds
daa
cltd
xor
loopne
jae
test
enter
and
scas
insb
ror
sahf
mov
sbb
add
pop
push
arpl
add
inc
lock
push
mov
cmp
mov
andnps
stos
outsl
or
arpl
pop
ds
jp
stc
call
aaa
inc
insl
ficomps
cmp
mov
jne
out
mov
dec
ljmp
iret
lea
popa
scas
or
cmp
adc
push
fsub
push
cmp
movsb
ljmp
iret
sub
mov
rcrb
js
xchg
mov
adc
cmp
scas
out
scas
movsl
pop
push
push
ret
pop
lods
iret
push
into
outsb
jb
jge
mov
mov
pop
fisubs
push
icebp
out
sub
jo
mov
fnstenv
inc
ret
out
test
jp
fs
pop
out
push
pop
jecxz
loope
ret
and
mov
insl
and
cltd
jl
fwait
je
pop
ret
mov
add
jl
mov
data16
cmp
ficoms
dec
pusha
mov
xlat
test
mov
mov
popa
mov
jnp
cmp
sub
pop
ffree
lcall
mov
dec
sbb
cmp
cs
loope
mov
pop
lods
pop
jmp
cmp
dec
movsb
stos
jl
scas
jae
inc
pop
cmp
int
jmp
js
jb
xchg
inc
pop
lock
inc
loope
rorl
push
push
aaa
push
xchg
add
stos
pop
xchg
jle
rclb
pop
mov
jo
pop
xlat
push
xchg
or
loop
bound
bound
add
and
lret
int3
ss
sahf
leave
pop
outsl
insl
add
sbb
lcall
testl
or
push
bound
addr16
inc
ret
loop
imul
cmpb
lret
push
xor
stos
jg
adc
sbb
dec
cmp
and
popf
mov
subl
cs
dec
mov
and
adc
repz
and
add
jp
sbb
jge
sahf
shl
pop
aad
stc
jg
orl
sub
or
negl
dec
bound
div
lods
lcall
xor
add
sbb
pushf
into
pop
add
data16
call
push
mov
outsb
inc
adc
sub
lret
jae
rcrl
insb
pop
xchg
mov
cmpsl
loopne
mov
inc
inc
into
je
mov
sub
out
insl
cld
xchg
lahf
pusha
cmp
jp
jno
dec
push
adc
jp
push
dec
inc
fcmovb
xchg
xchg
out
adc
clc
jp
popf
sub
je
scas
mov
pop
call
lcall
lret
scas
stc
cmp
sub
mov
pushf
ret
notb
fmul
adcl
in
aad
mov
ss
lds
mov
xchg
pusha
adc
fwait
pmulhw
lret
sub
push
and
mov
push
shll
xchg
mov
mov
data16
test
mov
test
add
add
lds
pop
pop
push
push
mov
fimuls
push
or
pop
and
mov
in
scas
jecxz
int3
xor
mov
pop
rcrl
cmc
js
xchg
or
jl
pop
mov
call
and
insb
xchg
scas
sub
xchg
lret
jnp
cli
inc
mov
into
push
sbb
cltd
sub
jne
imul
pop
adc
sbb
outsb
sahf
add
mov
add
push
mov
push
outsb
dec
data16
sub
cli
adc
mov
lods
push
jecxz
xor
fnstcw
popf
push
mov
mov
cmpsl
xchg
iret
icebp
inc
rorl
and
pop
sti
or
ret
cmpsb
dec
pop
ret
and
into
push
adc
in
add
cmc
fcompl
add
lods
mov
outsl
scas
push
mov
mov
lods
push
and
mov
fstpt
dec
mov
icebp
dec
out
call
js
cli
inc
jge
fdivrl
fsts
jle
ljmp
mov
arpl
xchg
divb
and
stos
int
pop
push
jo
sbb
pop
mov
popf
repz
or
stos
add
cli
inc
outsb
mov
outsb
lret
adc
sbb
lock
xchg
mov
inc
xchg
xor
mov
cmp
or
fwait
adc
sub
movsb
in
mov
sub
push
cmpsl
inc
mov
push
mov
xor
call
mov
pop
popf
push
rep
fnstenv
add
cld
jns
inc
dec
cmpl
and
mov
mov
mov
add
roll
movsl
pusha
sub
jecxz
lea
xor
insb
dec
dec
int
mov
adc
mov
cmp
mov
adc
xchg
inc
sub
mov
cwtl
or
fisttps
sub
mov
mov
xchg
sub
arpl
ljmp
mov
out
xchg
sbb
add
mov
cmp
sbb
pop
fs
cmp
xchg
mov
sbb
test
cmp
ss
xchg
or
or
mov
push
sbb
pop
insl
lods
mov
adc
and
popa
movsb
clc
out
push
outsb
pop
xor
or
add
jle
jp
mov
or
clc
jl
or
iret
lret
insb
fnstcw
xchg
jle
sarl
neg
dec
mov
subl
call
test
test
sbb
sbb
and
int
push
mov
icebp
xor
scas
mov
push
sbb
xchg
aas
outsl
sbb
jecxz
xor
pop
lea
cmp
push
pop
mov
pop
jge
test
add
inc
mov
rclb
adc
jnp
out
jle
push
loopne
fdivrl
mov
es
out
notb
test
adc
sbb
cmp
popf
mov
adc
nop
das
jg
xor
aad
aad
and
adc
hlt
add
mov
xchg
sub
arpl
jno
popf
cmpl
fldt
xor
sbbl
push
dec
out
mov
mov
scas
cmp
adc
stc
stos
lods
push
jl
ss
add
mov
pop
sbbb
fnsave
testb
mov
or
es
je
popa
inc
inc
lahf
lcall
cs
shll
imul
jmp
or
sbb
stos
lods
mov
es
movsb
dec
add
mov
call
push
xchg
movsl
mov
push
movsl
inc
mov
add
mov
adc
pop
aam
lret
mov
xor
mov
or
jle
xor
notb
stos
and
mov
push
or
scas
sahf
nop
out
adc
jno
imul
popa
testb
dec
lret
jmp
add
call
or
pop
sarl
lock
cmc
lods
loope
mov
cmp
imul
push
jae
mov
sti
rol
add
xchg
fstpl
sbb
xchg
rcr
push
mov
out
add
xlat
ret
mov
mov
dec
mov
adc
test
pop
repnz
out
xchg
push
mov
out
xor
dec
dec
dec
adc
int
out
and
nop
repnz
xor
movsl
popf
sbb
sbb
xlat
jno
fs
andl
icebp
das
or
mov
sti
xchg
mov
pop
lahf
jne
stos
adc
shrl
ja
or
movsl
mov
push
xchg
mov
lret
cli
jge,pn
popa
shlb
lds
or
inc
je
add
clc
inc
mov
mov
cmpsl
pop
in
loopne
scas
lods
ss
jge
jmp
push
fcomps
sbb
cmc
fstpt
jge
xchg
popf
jns
push
sbb
jg
or
hlt
lods
dec
cmc
lahf
in
mov
cmc
insb
pop
push
push
push
enter
call
sub
and
fcomps
jb
scas
pop
inc
test
mov
mov
push
incb
cmpsl
mov
xor
xchg
cld
scas
insl
into
fdecstp
fcmovbe
xchg
and
jo
sti
mov
stc
inc
jae
test
mov
inc
imul
sbb
pop
inc
sbb
iret
icebp
and
cwtl
mov
fisttps
jae
adc
cmc
fsubrs
cli
cmc
push
mov
or
sub
cli
sahf
or
sbb
daa
push
test
jb
sub
movsl
mov
outsb
lcall
int
sbb
xor
push
loop
cld
inc
call
stc
nop
std
mov
out
inc
aam
out
or
xchg
mov
clc
mov
aas
out
push
cmp
clc
mov
mov
test
jle
add
mov
push
mov
ljmp
or
pop
and
adc
mov
cmpsl
cld
mov
xor
imull
add
adc
ss
lret
repnz
jl
pop
les
scas
mov
xchg
lret
add
xchg
jge
mov
jp
pop
jmp
test
rcrl
je
fcompl
setbe
out
jmp
mov
xor
es
fwait
shlb
inc
xor
mov
pushf
mov
xchg
lds
pop
sbb
mov
std
mov
outsl
mov
lcall
xchg
lret
ret
push
dec
insl
push
xchg
std
aam
stc
rcrl
push
lcall
imul
pop
dec
jg
jbe
jbe
cmp
mov
dec
shrl
mov
jmp
mov
gs
repnz
and
mov
outsb
adc
addr16
xchg
les
test
mov
fdivrl
adc
arpl
xor
or
rcr
out
mov
push
or
adc
jge
ja
mov
mov
sbb
add
sbb
stos
out
mov
xor
sti
mov
inc
mov
cmp
popf
pop
test
jno
mov
jl
pop
das
mov
roll
pop
lcall
jle
insb
fadd
mov
mov
xchg
push
stos
sbb
push
jle
daa
test
push
scas
push
push
int
inc
clc
into
fldenv
sbb
stc
jae
int
fbstp
xchg
inc
sbb
push
lds
popa
mov
adc
adc
cmp
js
or
adc
jno
aas
push
mov
xchg
pop
adc
insb
mov
jne
jle
or
sahf
test
data16
push
cli
fildll
sbb
or
insb
pop
lcall
push
xor
mov
xchg
push
jge
ret
fistpl
push
cmp
pop
mov
mov
cld
push
into
fstps
or
or
das
insl
sbb
loop
loop
jle
repnz
das
ret
pushf
test
xlat
mov
jae
rcl
fldt
push
dec
lcall
push
pop
push
cmpsb
mov
sbb
cmc
inc
add
ret
enter
cmpsb
cmp
outsb
ret
cli
fsubp
or
loopne
int3
mov
add
and
mov
daa
mov
jno
sub
and
xor
xchg
jnp
cwtl
cmp
roll
mov
rcll
sahf
jle
xchg
js
mov
pop
jae
mov
add
test
or
jo
inc
xchg
das
movsl
and
adc
xchg
les
aad
test
add
add
lret
scas
aaa
inc
mov
xor
adc
sub
and
cmp
inc
cli
adc
jb
pop
scas
insl
lret
lds
lods
int
cmc
stos
int3
inc
jae
fisttpll
or
iret
mov
push
push
jae
repnz
lods
xor
cmp
int
pushf
movsb
out
pop
sub
and
adc
icebp
repz
pop
mov
fistpl
and
popf
fbstp
mov
or
cmp
dec
xchg
fsubr
and
mov
xchg
shr
mov
cmp
adc
jo
dec
or
push
inc
hlt
lahf
in
jge
cmp
push
jno
dec
ss
xrelease
stc
nop
inc
orb
repnz
and
mov
shlb
enter
repz
sbb
pop
lcall
cmc
inc
loop
jb
aam
inc
lret
cmp
adc
jle
xchg
fmuls
jmp
dec
cmp
or
mov
push
cmpsl
cwtl
jge
cmpsb
test
jbe
xor
lods
jnp
outsb
ljmp
and
lret
jmp
insb
aaa
mov
fld
cmpsb
sub
arpl
fadds
mov
fnstsw
xchg
sub
adc
dec
mov
insl
out
push
and
fistpl
sti
movsb
ljmp
bound
cmpsb
faddl
loop
mov
in
cmpsb
pushf
int3
loopne
add
adc
js
int3
push
outsb
loop
in
or
imul
add
xchg
enter
les
jmp
pop
pop
invlpg
jno
sbb
sbb
dec
pop
insb
pop
jle
in
push
leave
mov
insb
and
xchg
push
mov
rcrl
sbb
jnp
push
jmp
lock
pop
mov
decb
mov
inc
iret
mov
jno
add
lcall
popa
add
mov
movsl
push
lock
pop
fcoms
push
shrl
mov
movsb
adc
call
ljmp
in
sbb
shr
call
pop
jno
jae
adc
out
pushf
jecxz
js
lods
inc
xchg
cs
fdivrl
idivb
xorb
inc
loop
out
lock
jns
pop
les
shlb
inc
dec
adc
or
bound
divl
mov
lret
js
test
cmp
xor
mov
out
inc
call
cmp
loopne
xor
shll
xor
mov
pop
adc
inc
and
jnp
mov
inc
adc
push
icebp
lds
es
lock
sti
dec
scas
clc
dec
popf
push
mov
fwait
mov
call
test
mov
cltd
pushf
mov
sahf
aam
iret
jmp
inc
or
stos
das
push
lea
push
call
shrb
xor
out
sub
cmp
adc
mov
sub
scas
cmp
adc
cmp
or
sahf
orl
mov
repz
jae
sub
stc
pop
or
lret
cmpsb
xor
jne
mov
test
mov
movsb
int3
loopne
icebp
cwtl
in
arpl
ret
rcr
fdivrs
mov
xchg
imul
ds
pop
add
and
imul
in
jp
mov
inc
push
lds
and
mov
pushf
jl
xchg
mov
xor
sahf
add
sub
cltd
cmp
push
aam
icebp
jmp
xchg
xchg
xchg
mov
movsb
mov
xchg
test
sbb
push
xor
push
jae
sahf
add
and
dec
xor
or
sbb
pop
test
int
rcll
xchg
ljmp
mov
jnp
add
mov
sbb
loopne
lahf
jg
pusha
shlb
mov
frstor
mov
adc
pop
fwait
out
sub
mov
stos
stos
sub
xor
into
mov
aad
adc
push
cmp
ds
adc
mov
pop
cmpsl
mov
test
loope
nop
aaa
dec
cmp
mov
sub
xchg
cmp
cs
pop
adc
cmpb
pop
inc
pop
aaa
fildl
push
scas
fisubs
xor
adc
fldt
push
dec
lret
jne
xchg
imul
add
inc
push
js
push
xchg
push
ss
sbb
jp
icebp
sti
outsl
fwait
mov
int
shr
movsl
rclb
cli
and
inc
adc
pop
inc
sub
lcall
push
dec
shl
lds
push
mov
push
or
xor
xchg
pop
pushf
jb
mov
mov
xlat
jge
in
js
mov
dec
popl
sub
jae
mov
xchg
jnp
jns
mov
imul
mov
mov
jo
push
pop
add
test
mov
fidivl
in
idivl
in
push
sub
mov
lods
mov
aad
xorb
fxtract
inc
arpl
mov
pop
mov
pop
mov
fiaddl
jno
adc
das
test
rcrl
inc
adc
xor
and
pusha
cmp
push
les
mov
inc
jg
je
jp
pop
cmpsl
loopne
loopne
xor
movsb
scas
lods
xor
ja
push
dec
out
rorb
pop
call
cmc
rolb
or
rorb
mov
sbb
ficoms
or
xchg
decl
std
dec
scas
jae
ja
stos
shrl
cmp
imul
testb
adc
mov
inc
dec
pop
arpl
scas
scas
lcall
faddl
mov
sbb
ds
sti
jnp
xor
popa
sbb
and
xchg
mov
int3
adc
inc
sti
out
test
mov
pop
mov
jp
cwtl
arpl
push
test
mov
dec
out
cmc
imul
cld
jl
inc
push
mov
push
icebp
push
imul
shl
lea
xor
inc
incl
mov
icebp
aam
sub
inc
and
jle
out
jno
xor
pop
neg
lcall
dec
and
cmpsl
jle
or
push
rorb
xor
mov
mov
inc
or
sti
dec
aam
movsl
loope
push
and
imul
shlb
loopne
lahf
xchg
jp
pop
jecxz
sub
loop
xor
sub
mov
push
push
jecxz
sub
pop
inc
imul
gs
xor
enter
jmp
jno
mov
jns
fldcw
pop
sbb
shlb
cmp
cmpsl
mov
dec
or
xlat
jno
xchg
mov
xchg
loope
fistpll
sub
cmpsb
jbe
repnz
dec
push
imul
std
fists
stos
dec
mov
cltd
and
add
popl
xor
movsl
pusha
test
add
sub
es
aam
fld
shrb
xor
pop
fs
out
es
clc
mov
je
aam
dec
jb
jmp
sbb
jns
movsl
xor
jno
jge
mov
lock
cli
jle
lret
lea
test
sarb
add
lock
sbb
dec
sub
push
aam
jge
inc
shrl
loop
and
fwait
adc
sbb
shll
movsl
scas
popa
dec
jecxz
mov
mov
adc
dec
int3
or
fistpl
or
loop
imul
fimull
bound
jl
jns
lret
in
mov
sahf
or
sbb
das
xchg
iret
add
dec
ret
mov
frndint
mov
daa
pusha
inc
out
and
cli
iret
sbb
inc
stos
xchg
xor
aas
mov
jb
xchg
cmp
mov
call
sub
pop
fs
idiv
xchg
pop
add
add
jg
dec
out
pop
push
ds
in
pop
xchg
imul
adc
push
jnp
jns
sti
jmp
fmul
lcall
inc
adc
repz
or
jno
cmp
mov
daa
mov
mov
dec
shrb
fildll
repnz
lahf
or
inc
mov
lods
nop
add
jmp
push
mov
mov
fs
dec
movsl
mov
pop
pop
or
insb
sbbb
dec
mov
xchg
popa
xor
sar
mov
dec
mov
add
inc
mov
inc
jecxz
sub
ds
ret
jns
jo
pop
in
dec
sbb
ds
mov
mov
xchg
push
mov
sub
sub
es
jmp
push
scas
dec
push
lret
movsb
mov
inc
ds
repz
fwait
sahf
adc
int
mov
fildl
add
ficoml
aaa
mov
sahf
bound
xchg
mov
pop
mov
dec
xor
dec
bound
mov
xorl
loope
pop
movsl
mov
sub
enter
xchg
jge
sub
jle
rorb
push
push
std
in
mov
les
in
out
mov
lahf
xor
test
icebp
fsubrs
jmp
sbb
aaa
jb
xor
sub
das
pop
and
pop
rol
call
or
ret
adc
jae
push
pcmpeqd
sbb
mov
icebp
shlb
in
add
fwait
shlb
or
adc
mov
adc
fisttpl
insl
pop
frstor
xchg
jmp
push
sub
hlt
out
packssdw
test
test
adc
and
int
imul
outsb
mov
xchg
in
mov
mov
mov
sbb
inc
inc
push
inc
mov
test
sbb
stos
adc
or
je
dec
adc
mov
rorl
ret
xchg
rcrb
scas
pushf
leave
lret
addr16
xor
dec
inc
jnp
into
mov
mov
insl
clc
sbbb
imul
sub
clc
mov
stc
je
or
or
adc
sbb
outsb
movsl
xchg
movsb
negb
mov
aas
mov
mov
push
lea
rorb
ljmp
sub
and
stos
xchg
stos
jno
imul
sub
mov
movsb
adc
dec
mov
lods
xchg
push
jbe
rcrb
lods
dec
ds
out
inc
inc
test
lahf
dec
xchg
sbb
insl
and
sub
sti
xchg
nop
test
fs
jg
xor
mov
cvtdq2ps
push
repz
sbb
and
inc
in
dec
xchg
insb
test
sti
dec
sbb
pop
adc
sub
cmp
xchg
and
fwait
sbb
add
dec
ret
leave
lock
mov
and
xor
ficompl
test
and
pushf
addr16
or
mov
adc
adc
sub
cltd
pop
aam
addr16
clc
insb
sbb
pop
and
dec
pop
cwtl
outsl
xor
lcall
fadds
and
jb
outsb
xchg
mov
enter
shr
xchg
fwait
mov
icebp
xchg
xchg
pop
push
pushf
int
inc
pop
adc
mov
xor
or
stc
sbb
mov
add
xor
and
outsl
sbb
nop
add
jbe
ljmp
adc
ja
pop
lret
hlt
enter
dec
adc
dec
scas
cmp
pop
cmpsl
push
sbb
aad
scas
mov
pusha
add
popa
loop
or
stc
bound
sbb
mov
es
or
bound
push
push
add
mov
in
sbb
imul
repnz
fstpt
push
or
jo
add
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
jmp
repnz
repz
mov
test
pop
pop
addl
add
repnz
pusha
add
cli
mov
mov
orb
popa
fs
aam
cmp
sub
jge
out
pop
les
jbe
pop
aaa
and
fcmovne
push
enter
xchg
xchg
cmp
mov
sti
out
fcomps
mov
and
mov
adc
xchg
mov
out
push
jl
dec
sbb
test
pop
sahf
adcl
mov
in
mov
iret
fnsave
sub
out
push
sub
and
pushf
jecxz
leave
insb
sub
loope
lret
loope
adc
leave
int
mov
into
or
movsl
ds
lods
jbe
or
fisttps
lock
or
push
pop
pop
lods
mov
inc
popa
addr16
and
lock
shl
jb
icebp
xor
or
inc
fadds
aaa
cmc
aaa
test
adcl
dec
mov
call
pop
push
cli
mov
daa
outsb
xchg
pop
aas
repnz
imul
not
int
mov
in
fadd
sahf
mov
lahf
add
push
inc
push
fcompl
dec
xor
push
jae
lods
aaa
jnp
adc
cmp
mov
jo
lret
bound
orl
or
outsl
cmp
add
inc
cmp
pop
and
jmp
rorl
sub
cmp
dec
stos
or
push
rcr
in
push
mov
adc
hlt
mov
xchg
arpl
xchg
inc
pop
mul
insl
lret
add
add
push
ljmp
ret
cld
pushf
xor
inc
add
jle
loope
out
lds
push
stc
dec
jae
jbe
push
into
xor
adc
or
fidivs
sbb
mov
mov
dec
mov
adc
mov
out
inc
cmp
push
imul
aaa
in
sub
sbb
mov
int
and
aas
mov
inc
jns
or
cmp
enter
enter
mov
rcrl
mov
lods
repz
cmp
mov
cli
cmp
or
fisttps
mov
inc
sbb
mov
or
or
andb
push
adc
leave
enter
ds
out
mov
xor
pop
mov
iret
and
pop
scas
jnp
fwait
jno
cwtl
repnz
jbe
cmp
clc
cmp
dec
gs
outsb
xor
jg
jl
push
scas
sarb
ljmp
inc
arpl
cmp
int3
inc
sahf
clc
inc
dec
out
cmp
xor
cli
loopne
sbb
xchg
or
xor
cmc
gs
cmpsl
sub
add
test
rcrb
bound
mov
sub
mov
pop
test
pushf
data16
stos
arpl
add
vpsllq
and
mov
daa
cli
add
pop
adc
inc
pop
push
popf
push
repnz
sub
adc
repz
inc
cmp
mov
out
xchg
pop
dec
adc
jae
inc
dec
aaa
ret
in
sbb
out
leave
ret
dec
sub
push
push
sbb
cltd
enter
aas
add
and
and
push
lods
xor
loopne
mov
outsb
mov
sbb
outsb
lahf
cld
pushf
jno
push
dec
jne
stc
and
pop
push
ret
cwtl
lahf
movsl
loope,pt
movsb
jle
es
push
int3
pop
out
pop
pusha
clc
sbb
mov
outsb
mov
pop
mov
pop
ljmp
dec
imul
clc
imul
icebp
lock
jl
aaa
mov
jg
or
mov
xchg
pop
std
add
bound
pop
int
out
es
add
push
mov
inc
mov
lock
push
inc
dec
jno
mov
jne
sahf
pop
xchg
cmovle
lcall
jp
xchg
dec
fadds
mov
lret
add
xor
adc
jl
xorl
shll
or
mov
shl
rcrl
fsubp
sti
adc
js
mov
xchg
into
sub
mov
addb
mov
pop
inc
adc
cltd
mov
pop
sub
mov
inc
pop
movsb
sbb
ds
cmp
rcll
sbb
inc
sbb
shll
sub
xchg
repnz
sbb
int3
mov
loopne
arpl
in
in
rcll
mov
lahf
cld
loop
popa
and
sub
jno
repz
lock
or
jmp
cs
add
sbb
mov
inc
mov
mov
add
inc
std
in
out
ret
inc
lahf
push
push
pmaxsw
into
imul
mov
inc
test
pop
loope
jmp
loope
mov
out
mov
dec
mov
sub
nop
outsb
jecxz
aas
hlt
inc
push
push
or
jge
push
push
loop
or
iret
push
jp
add
shr
rep
testl
xor
data16
lcall
idivb
out
add
xchg
je
fwait
nop
cmc
cmp
jge
mov
or
push
data16
mov
rcl
ja
pop
inc
cli
fiaddl
push
xlat
or
pop
cld
ljmp
out
adc
jle
insl
xchg
push
repz
jp
cltd
shll
into
seta
dec
sbb
out
das
enter
dec
pop
pop
mov
pop
or
lea
jmp
movsl
xchg
ja
inc
repnz
cmp
cmc
iret
repz
sbb
js
cmp
icebp
lahf
dec
lods
movsl
push
dec
jns
scas
xor
dec
les
pop
sub
test
sbb
jle
push
clc
mov
cltd
nop
sbb
pop
mov
push
test
add
mov
dec
dec
call
cmpsb
push
ret
xlat
loop
imul
push
lret
or
add
dec
out
pop
pop
imul
mov
addb
or
pushf
mov
addr16
sub
inc
push
jae
popa
bound
jecxz
inc
dec
sub
sub
sbb
sub
xor
dec
inc
and
daa
mov
js
mov
adc
adc
xchg
xor
sbb
mov
and
clc
dec
push
push
sbb
adc
inc
es
xchg
bound
adc
stos
loop
loopne
pop
in
or
arpl
mov
xor
sbb
inc
std
pop
jb
scas
xlat
pop
xchg
repnz
stc
xor
inc
repz
scas
ljmp
stos
sbb
xchg
out
sub
pop
jg
dec
jmp
adc
sub
dec
xor
lahf
int3
dec
test
sub
mov
mov
cmpsl
mov
mov
pop
or
and
stos
lods
sub
mov
mov
sbb
imul
adc
out
push
fbld
pop
adc
jle
dec
sbb
jae
int
aaa
cmp
cli
pop
jge
cmpsl
lods
loope
bound
ljmp
arpl
mov
mov
popf
push
imul
cmp
xchg
scas
xor
out
pop
lahf
aam
dec
cli
lods
fdivp
adc
frstor
fucom
cmp
jno
mov
cltd
data16
inc
fldenv
mov
aaa
mov
sub
pop
fcomps
sbb
or
inc
mov
mov
mov
mov
test
lds
in
rcl
mov
in
out
adc
sbb
cs
push
es
mov
imul
popf
and
add
sub
repz
mov
loop
dec
out
sub
fs
inc
arpl
push
inc
mov
sub
lret
ja
xor
jo
sbb
xor
hlt
jbe
cs
cltd
add
repnz
aam
imul
xchg
cmpsb
dec
pop
sub
xchg
jecxz
imul
cmpsb
mov
sbb
sub
add
mov
sub
test
jl
nop
aas
ja
xor
jmp
fdivrs
fnstenv
mov
xor
pop
push
sahf
inc
js
rcrb
insl
or
push
adc
int
jo
jb
add
insb
push
xchg
jle
add
iret
pop
outsb
mov
fnstcw
sbb
or
push
jno
pop
and
jp
inc
xor
cmp
loope
imul
or
or
mov
lea
jg
adcl
jno
dec
fxam
add
mov
cmpl
out
cli
std
das
and
dec
xor
sub
sarl
pop
fistpll
loope
ffreep
jae
mov
xchg
je
clc
inc
sbbb
cmpsb
call
push
aaa
jne
lock
verr
mov
popa
jl
outsl
jnp
cmp
dec
dec
dec
jecxz
lret
int
mov
cmc
stos
mov
es
mov
pushf
orl
add
in
sbb
adc
mov
scas
add
add
jge
inc
sbb
xchg
jge
std
mov
mov
jnp
jge
or
inc
pop
xor
int3
pop
addr16
lcall
dec
xchg
in
jns
insb
xor
inc
push
cmp
cvttps2pi
mov
std
inc
das
push
add
jnp
insl
sub
sub
xor
in
push
jnp
adc
rcll
stos
xchg
jp
xchg
push
inc
test
or
dec
jae
call
stos
fidivl
and
dec
outsl
cmp
xorb
mov
lock
subb
lret
out
sbb
cmpsb
xchg
mov
fsts
es
adc
test
out
mov
lret
jbe
lds
mov
dec
jns
inc
inc
dec
iret
inc
ficoms
lea
mov
out
sbb
jle
and
lods
sbb
stos
cmp
addr16
pop
frstor
sub
nop
imul
hlt
jnp
or
cli
loope
jno
das
jnp
in
jle
xor
mov
adc
mov
inc
sbb
push
cmpsb
std
enter
int
inc
fwait
imul
nop
adc
fimuls
cmpsl
dec
cmp
cmc
mov
push
push
pop
jne
ficomps
inc
mov
jne
mov
pop
movsb
lds
cwtl
clc
and
cmpsl
add
adc
push
cmp
lds
pop
pop
scas
lds
cmp
test
sbb
hlt
mov
loopne
and
mov
mov
cmp
mov
mov
mov
fsubrs
dec
sbb
mov
xor
adc
andb
mov
cmp
sahf
lret
call
dec
add
in
sti
ret
andb
xor
cmovo
or
mov
shlb
pop
adc
jae
jbe
sub
test
fwait
cmp
rcll
incb
data16
inc
or
push
ficoml
pop
shrb
shlb
xchg
popf
loopne
mov
scas
das
adc
aad
rcrb
leave
jnp
rclb
out
mov
ja
add
fstpl
mov
mov
cmp
and
cmp
shrb
jae
xorl
xchg
fs
push
loopne
push
cmc
lcall
sbb
test
into
test
mov
jecxz
cmp
xchg
sbb
movsl
sbb
push
lcall
popf
js
adc
cmpsl
push
mov
in
sub
cmp
call
ds
push
mov
fcomps
cmpsl
data16
xor
pop
mulb
add
fidivrs
jle
fwait
jb
lret
cltd
shrb
enter
psubsw
push
lret
cmp
dec
lds
mov
and
insl
aas
in
cwtl
pop
mov
mov
hlt
decb
testb
push
xor
pop
dec
mov
push
jp
scas
mul
sub
or
sub
mov
nop
scas
inc
call
clc
adc
xor
mov
jbe
dec
popf
dec
test
add
inc
test
pusha
popa
and
pop
outsl
add
pushf
gs
fnstenv
aaa
or
js
clc
inc
mov
and
test
inc
lea
sbb
xor
rcrl
js
clc
jg
mov
loopne
loop
aad
es
popf
cld
push
xor
adc
iret
xor
mov
ja
std
xchg
jae
nop
add
in
xchg
in
test
lret
add
cli
sbb
std
push
imul
cmp
xchg
test
and
xor
loopne
rorb
push
stos
push
fcompl
dec
or
add
and
jle
dec
popa
mov
adc
cmp
ljmp
sets
out
mov
call
xchg
sbb
pop
ss
subb
jl
in
mov
enter
mov
sbb
adc
ds
sbb
jmp
pop
or
pusha
insb
mov
push
in
xor
fs
xchg
add
xchg
pop
xor
dec
je
push
in
push
cs
ret
test
sub
push
jnp
nop
jl
movsb
call
mov
adc
stc
cmpsb
or
cmp
or
fs
clc
clc
inc
fstp
mov
jne
shll
mov
daa
xchg
sbb
add
push
outsl
clc
stos
xorb
dec
mov
stc
and
or
push
lds
lds
imul
pop
out
inc
dec
pop
sbbb
enter
mov
sbb
jo
insl
push
lea
fidivrl
jmp
mov
pushf
jno
push
xlat
jnp
cmp
xchg
xchg
fwait
push
and
stos
fistpll
fcompl
popa
adc
inc
insl
xchg
cmc
sub
pop
mov
rclb
pop
mov
imul
aam
addr16
in
stos
jecxz
test
ret
shrl
in
xor
sbb
out
mov
mov
das
sbbl
incl
mov
dec
push
pop
icebp
scas
xchg
or
aam
and
rcr
bound
pop
inc
out
call
js
call
add
fisubl
sub
xor
inc
sarb
fsubrs
fcompl
call
sbb
loope
out
iret
fs
into
test
sub
iret
lahf
test
xor
repnz
sub
ret
out
scas
dec
pushf
stos
gs
mov
xor
mov
add
out
cmc
pusha
sti
xchg
aas
dec
test
or
aam
cmpsb
jecxz
les
jle
xchg
mov
jp
xor
jns
mov
jl
inc
adc
mov
mov
add
and
mov
dec
inc
ss
push
cmpsl
fisubrs
jp
lret
imull
aam
dec
out
pop
add
insl
lock
inc
outsb
call
out
dec
cmpsb
andb
testb
cwtl
and
pop
mov
lods
shl
or
push
jg
outsl
cwtl
sbb
roll
and
or
popa
pop
int3
inc
or
push
push
lahf
aad
jnp
inc
jno
les
fbstp
cli
movsb
and
test
aam
inc
mov
jae
jns
scas
addr16
sbb
sub
mov
je
mov
xchg
and
mov
movsb
lds
dec
dec
fcoml
scas
or
or
adc
cmp
cmp
mov
stos
or
jbe
rcll
imul
add
repz
push
scas
lock
daa
fs
shlb
ds
sbb
xor
orl
fcmovnu
std
lock
popf
mov
adc
jbe
pop
leave
insb
mov
daa
sub
xchg
adc
das
shll
and
adc
fs
enter
scas
inc
mov
cmp
pushf
push
mov
cmpsl
cli
add
xchg
pop
out
xor
xchg
rcrl
xchg
fidivrl
cmp
loope
push
or
lds
and
in
ss
into
mov
cmp
jge
into
dec
lods
mov
dec
mov
pusha
jne
dec
jmp
pop
sub
std
int3
mov
sbb
adc
ds
sub
cli
mov
or
bound
sub
push
adc
mov
cmp
dec
pop
mov
jge
or
outsb
aas
mov
add
cmp
add
out
shlb
daa
adc
ret
icebp
lea
jl
pop
lcall
adc
test
jg
sub
xchg
add
push
ret
pop
adc
loop
mov
aaa
loopne
lds
mov
adc
iret
adc
and
adc
sbb
fcmove
clc
push
movsb
fldenv
insb
mov
push
scas
adc
mov
dec
pop
jg
into
mov
inc
cmc
mov
addr16
push
js
add
push
cmp
in
pop
fadds
mov
jle
call
mov
or
or
pop
sub
cmpsl
jmp
ds
mov
add
pop
shll
add
ficoml
inc
mov
cmp
pop
icebp
jp
cmp
cmpsb
cmc
mov
in
cs
add
movsl
rcrb
aad
mov
push
mov
mov
adc
in
and
mov
and
js
push
pop
loopne
mov
xor
test
adc
push
test
stc
in
les
jmp
sub
stos
jno
popf
sahf
mov
dec
jp
add
pop
fisttps
out
mov
les
xor
je
cmp
negb
scas
cmp
and
cmp
jnp
test
sub
call
mov
dec
gs
xor
push
lret
movsb
nop
sub
scas
repz
shr
loope
leave
jae
sub
xchg
cmc
scas
sahf
inc
insl
les
mov
dec
add
sbb
popa
das
aaa
les
mov
cmpsl
aam
fwait
in
dec
or
test
leave
cmp
sub
pop
aaa
imul
lds
dec
lcall
dec
fistps
loop
pop
push
cld
mov
or
loop
xchg
cld
pop
sbb
pop
add
in
add
mov
adc
test
or
mov
xor
fs
jbe
out
shlb
inc
pusha
scas
push
mov
or
pop
enter
push
push
pusha
adc
mov
push
jne
aam
imul
aam
mov
jecxz
cmp
adc
cli
mov
testl
pop
jae
mov
mov
loopne
push
add
jno
jmp
stos
push
pop
mov
mov
fsub
scas
and
pop
mov
test
in
sbb
jno
test
xchg
fwait
or
push
movsb
adc
xchg
xchg
cmp
or
mov
sub
data16
cmp
into
popa
cmp
xor
add
test
pop
hlt
push
cmp
loop
and
inc
pop
bound
cmc
dec
lahf
pop
das
dec
inc
jbe
mov
or
or
stc
mov
xlat
test
jge
xchg
pop
lret
add
mov
shll
scas
imul
data16
push
pop
jno
mov
out
loope
jns
add
mov
adc
mov
push
imul
daa
sub
je
cmp
or
ds
jl
lods
nop
insb
andl
or
dec
fimull
mov
jmp
pop
jnp
inc
mov
repnz
xchg
or
leave
cmp
dec
shl
aas
jle
jbe
xlat
mov
xor
inc
aas
loopne
stc
jae
in
or
adc
push
into
dec
push
inc
xchg
outsb
pop
mov
in
jecxz
cmp
fstl
aad
mov
or
sbb
popf
or
aam
xchg
sbb
xchg
jg
ja
cltd
adc
or
mov
jl
jg
or
ljmp
pop
fimuls
sub
push
and
in
imul
repz
ja
dec
shlb
dec
lods
cmp
push
imul
pop
in
fimuls
pop
jecxz
cs
ds
mov
fisttps
out
stos
jnp
cs
movsl
rclb
out
loope
in
and
loope
aad
jbe
sub
adc
aam
js
cmpsl
and
fsub
sub
sti
inc
cmc
scas
test
cmc
sub
or
and
adc
jmp
jle
jmp
cltd
inc
cld
fcoml
mov
cwtl
outsb
xor
lcall
xchg
shl
lcall
xchg
and
imul
pop
jne
mov
cwtl
pop
int3
jecxz
movsl
pushf
xchg
ret
movzwl
push
cmp
int
test
faddp
jg
lret
mov
popf
mov
inc
cmp
sub
jge
xorb
lods
cmpsl
mov
stos
jns
or
push
jecxz
lahf
and
xchg
add
aad
jo
sarb
mov
inc
sbb
jle
loop
or
dec
jmp
sub
lret
xor
push
es
xchg
xchg
shrb
test
mov
in
add
lea
in
xchg
notl
lds
imul
pop
lods
in
les
repnz
sub
testb
xor
call
push
inc
push
imul
shl
push
iret
mov
sarl
xor
les
lock
test
loopne
inc
add
inc
popa
mov
ja
sub
pop
jl
inc
data16
test
jmp
xchg
mov
xchg
xchg
lea
fistpl
out
mov
ljmp
mov
fisttps
pusha
sbb
dec
das
jmp
jl
std
add
adc
scas
push
pop
sub
jne
xchg
mov
jae
cmp
sub
xor
sub
mov
inc
fsubs
xchg
stc
cmp
aad
mov
psrlq
push
xchg
cwtl
xchg
inc
std
subb
mov
loope
adc
cmpsl
lock
das
das
repnz
imul
sub
adc
lods
and
fisubrl
mov
ja
out
jae
aas
lret
out
jge
dec
inc
in
rcrb
movsb
aam
and
mov
add
insb
cmp
dec
dec
pop
pop
enter
push
push
jae
lock
ret
push
in
adcl
inc
inc
inc
aas
test
lcall
inc
inc
insl
jecxz
sbb
sbb
rorb
out
test
adc
js
xor
add
jl
or
mov
mov
lods
loopne
jne,pt
mov
in
orb
sub
into
lods
lds
jbe
push
insl
push
inc
inc
dec
add
clc
loope
iret
roll
push
pop
fsubs
pop
bound
mov
sti
jg
jbe
jae
push
pushf
ret
jo
mov
sbb
out
es
mov
pop
cmp
push
sbb
inc
test
dec
and
dec
jmp
inc
imul
insl
in
lds
mov
pop
xor
xorl
fdiv
out
jmp
mov
xor
stc
je
push
gs
mov
jg
mov
push
ljmp
add
or
pop
mov
imul
imul
push
fildll
cwtl
loope
push
clc
scas
sbb
dec
fisttpl
ret
pusha
into
je
arpl
aas
pop
enter
cmp
cmp
sahf
arpl
imul
in
imul
xlat
lods
clc
push
jnp
aad
test
pop
imull
jp
add
in
jmp
aad
push
jns
shrl
aaa
mov
stc
repz
mov
std
push
sahf
and
push
mov
fistl
leave
mov
loopne
xor
jp
dec
aad
xchg
mov
stos
cmp
ja
sbb
addb
int3
fiadds
sbb
out
or
cltd
pushf
cmp
xchg
les
push
inc
sbb
ds
add
aas
sbb
ljmp
cwtl
rorl
mov
lock
push
stc
sub
decb
out
mov
add
movsb
pushf
add
pop
or
dec
xchg
ret
xor
jnp
insb
shll
push
inc
xor
or
aad
dec
fdivs
nop
or
mov
sub
or
push
rcrb
mov
imul
cli
andb
ja
jno
lcall
add
jo
adc
cmp
insl
mov
pop
cli
jne
sbb
add
push
mov
mov
mov
dec
xor
mov
xchg
stos
lods
dec
jne
push
dec
xchg
arpl
outsb
hlt
into
fcmovb
out
std
xchg
mull
push
inc
in
xor
ja
adc
shlb
xlat
xchg
and
and
aad
inc
mov
jno
sahf
xchg
mov
jmp
xor
sbb
sbb
push
cmc
sbb
outsb
pop
cmp
pop
mov
in
jmp
inc
or
inc
mov
enter
inc
pushf
cmpsl
out
dec
out
add
push
adc
xlat
ret
fiaddl
fwait
int3
adc
aas
repz
leave
adc
xchg
sbb
call
adc
xchg
mov
jmp
aaa
add
mov
aaa
das
cmp
dec
in
pop
add
lods
mov
fnstenv
pop
mov
stos
repz
mov
scas
dec
mov
in
or
and
jns
dec
sahf
pusha
or
sub
push
lods
pop
xchg
pop
fldt
das
loop
xchg
ffreep
dec
mov
ret
mov
fsubrl
mov
jo
loopne
dec
aam
outsl
in
or
fdiv
push
negb
mov
aad
add
cmp
ljmp
pushf
push
lret
int
adc
xchg
sub
cmp
les
mov
in
in
lret
fnstcw
or
and
mov
jb
out
inc
test
add
in
aaa
icebp
rclb
inc
inc
in
sbb
xor
and
pop
mov
jle
sbb
dec
dec
dec
stos
push
js
push
push
scas
outsl
out
or
xlat
add
mov
push
mov
loopne
testl
push
mov
movsl
rcll
arpl
fmuls
jecxz
rol
jle
fdivr
sti
push
mov
jbe
push
adc
jno
pusha
mov
movsb
adc
repnz
sarl
stos
and
into
lcall
addr16
mov
hlt
cs
xchg
xchg
inc
dec
and
ret
dec
dec
mov
in
clc
xchg
pop
jnp
clc
xchg
sbb
cwtl
xor
lcall
and
lret
fsub
insl
sbb
dec
or
pop
pop
adc
and
mov
sub
mov
xor
add
mov
and
out
jo
fbld
push
movsl
dec
jne
imul
pusha
cmpsl
xchg
jmp
fstpl
xchg
bound
sub
add
xor
mov
inc
std
orb
dec
stc
ljmp
and
sarl
in
fwait
jo
adc
inc
in
test
sub
cmp
mov
jae
stc
jle
out
mov
cli
cmc
push
aad
out
push
daa
inc
dec
lcall
adc
jns
adc
pop
xor
andb
pusha
cmp
pop
sysexit
in
push
adc
and
dec
add
adc
fwait
ret
in
mov
in
and
and
imul
insl
sub
mov
aas
push
aaa
jge
int
mov
push
jno
mov
pop
mov
icebp
push
and
jp
xchg
jae
inc
adc
movsb
adc
mov
inc
mov
or
ljmp
shlb
fmul
xchg
xchg
sbb
add
jb
inc
rolb
stc
repnz
shlb
or
test
mov
mov
mov
mov
mov
mov
adc
in
sub
outsb
sbb
ret
dec
add
test
test
std
pop
jno
test
addb
pusha
leave
rclb
push
es
add
mov
inc
popf
and
xor
cli
outsl
pop
fnstenv
push
in
into
jp
jno
cmp
mov
sti
fcmove
add
aam
push
cmp
add
mov
sti
cmp
push
dec
push
jns
cwtl
fnstsw
mov
jmp
pop
clc
fdivl
lods
out
and
loope
mov
xor
mov
enter
jmp
mov
xchg
sub
ret
cmp
cmpsl
inc
repnz
fnsave
push
cmp
jp
outsb
stos
sbb
js
test
jne
or
lret
dec
ret
jno
pop
inc
mov
push
inc
cmp
shr
sbb
mov
hlt
inc
jb
adc
lods
inc
mov
dec
fwait
mov
xchg
js
jmp
pop
test
jecxz
mov
sti
stos
mov
jp
adc
sar
xchg
jmp
cli
in
cs
adcb
sbb
sti
or
push
add
push
mov
push
cmpsl
fcomps
loope
cmp
sahf
test
and
inc
scas
js
imul
repnz
faddl
dec
sub
push
loope,pn
sbb
sahf
fldl
in
aaa
mov
mov
mov
jns
loopne
fisubrs
sub
jne
mov
in
outsl
hlt
mov
insl
pop
cmpsb
xchg
mov
nop
imul
lea
outsb
leave
mov
xchg
test
cs
fiaddl
jo
es
pop
popa
in
xchg
movsb
inc
mov
push
hlt
lock
aas
ret
loopne
test
imul
jmp
fldenv
mov
dec
cli
xchg
pop
sub
test
mov
sbb
std
roll
mov
adc
lret
decb
jbe
xchg
jg
dec
fcomps
out
aaa
jo
sti
arpl
ret
imul
pop
sbbb
push
test
add
sub
ja
push
clc
gs
cwtl
js
add
aad
ja
jecxz
mov
add
mov
or
lock
push
jg
mov
jg
cmpl
insb
xchg
mov
cs
push
pop
adc
push
adc
ficoms
mov
inc
shrl
jle
flds
inc
and
sti
mov
les
sbb
cmp
cmc
adc
cld
pop
insb
jmp
sbbb
aam
rclb
sub
adc
data16
xor
cli
lds
les
outsb
int
divl
push
test
repnz
data16
scas
lods
lcall
push
rcrl
jno
iret
cld
lret
push
stc
rcll
jns
mov
ja
roll
jp
lahf
mov
mov
sub
dec
add
nop
dec
je
sub
dec
xchg
xchg
push
push
push
sub
cwtl
dec
cmp
jmp
dec
outsb
js
rorl
mov
pop
jb
lock
and
daa
in
adcb
stc
push
sub
jns
mov
jp
mov
pop
leavew
and
sub
xor
repz
xchg
push
xor
popa
cs
pop
in
pop
rcr
sub
out
and
dec
pop
cmp
shrb
lret
jmp
adc
test
leave
mov
cmpsl
xchg
inc
addb
lock
and
adc
lea
hlt
xor
xchg
pop
lock
push
sbbb
mov
jae
and
rolb
jo
out
negl
push
mov
cmp
xor
outsb
xchg
pop
ret
mov
dec
adc
test
gs
roll
mov
movsl
popf
pop
fiadds
add
in
xchg
mov
push
pop
pop
push
scas
icebp
je
andl
lret
dec
lahf
dec
pop
dec
cmp
mov
pop
xchg
mov
push
adc
mov
clc
mov
adc
icebp
mov
sarb
inc
push
ljmp
arpl
sti
push
mov
loop
add
pop
xor
add
out
xlat
sub
fwait
pop
out
add
icebp
outsb
sub
into
xchg
addr16
xor
shlb
negl
iret
or
push
mov
dec
cmp
daa
test
movsb
int3
das
push
lods
jecxz
sub
call
push
inc
push
mov
cmp
repnz
mov
push
ss
stos
xchg
and
xor
push
dec
scas
push
sti
and
xchg
mov
mov
movl
test
mov
adc
arpl
sahf
out
xor
cltd
pop
fildll
aaa
xchg
and
ss
addb
mov
jle
test
scas
inc
mov
mov
andl
xchg
add
sub
stos
push
push
xor
insl
movsl
in
mov
push
jbe
add
adc
ljmp
add
lods
push
mov
mov
ret
fwait
mov
jl
dec
mov
dec
scas
jbe
xor
lods
andl
vcvtpd2dqx
or
cmp
shlb
jecxz
mov
sub
mov
sub
jb
push
mov
mov
push
xchg
int3
pop
cmp
push
fiaddl
sub
stos
xor
mov
jl
sub
neg
inc
dec
add
mov
clc
xchg
inc
or
fcmovnu
cmpsb
enter
lea
stos
xchg
sahf
mov
addl
pushw
hlt
int3
icebp
adc
jns
fnstcw
rcl
js
outsl
mov
dec
or
jge
sbb
mov
repz
and
in
test
rdpmc
ss
cmpl
loop
mov
hlt
adc
into
rorl
iret
fwait
mov
xchg
ret
aad
mov
pop
cmpsb
jg
stc
push
or
stos
int3
popf
and
cmpsl
lds
test
in
pop
out
ss
inc
test
dec
clc
cltd
popa
adc
push
adc
jns
test
mov
pusha
mov
and
jge
std
xor
out
cli
mov
aas
imul
or
sub
fmull
push
cmp
mov
xchg
fsubl
outsl
pop
scas
adc
out
xchg
lahf
inc
lahf
add
fsubr
std
filds
xchg
mov
dec
xchg
int
lahf
xor
mov
sbb
shrb
dec
sbb
xor
stc
les
or
pop
inc
jle
pop
and
sub
nop
sub
xchg
imul
push
in
out
cmp
or
pop
in
xchg
dec
in
adc
inc
bound
insb
in
rcrb
aas
adc
mov
push
aam
mov
jb
int3
daa
xor
outsb
sbb
or
aas
test
xor
mov
or
mov
test
pop
insl
or
sub
sbb
in
pop
and
ds
adc
fldcw
test
mov
add
lret
rep
mov
jmp
jbe
movsl
cmp
or
test
call
fisubrl
stos
and
hlt
out
pop
push
addr16
rcll
inc
mov
insl
stos
mov
inc
out
adc
mov
jns
scas
and
out
cmc
cli
pop
and
lock
add
out
adc
mov
jo
sub
sarl
xchg
dec
inc
js
mov
cli
xorb
xchg
sbb
movsb
pop
out
sbb
mov
push
xorl
xor
dec
dec
loop
push
hlt
lret
jnp
ds
adc
in
mov
jb
bound
sub
mov
cmc
es
lret
js
lahf
rcll
ja
enter
std
xorl
mov
pop
cmp
adc
jle
mov
inc
pop
ret
mov
xlat
sub
mov
pop
push
push
dec
xor
mov
arpl
out
or
outsl
mov
aad
out
lock
lock
movsl
sub
xor
int3
mov
push
cmp
push
sti
jg
imul
jb
dec
arpl
out
mov
ret
pop
jmp
je
mov
test
jo
sti
das
fildl
mov
cwtl
movsl
cli
mov
xchg
in
orb
jecxz
xchg
repz
ljmp
in
pop
dec
jmp
test
loopne
shlb
out
inc
ljmp
xchg
daa
cmp
adc
mov
jg
inc
jecxz
jnp
movsl
arpl
mov
or
xor
fidivs
out
lods
fcoml
sub
dec
js
in
clc
popl
xchg
jne
add
cmp
push
insl
shll
xchg
mov
cmp
fidivl
stos
repnz
xlat
loop
xor
push
ret
les
mov
cmp
pop
xor
loopne
jb
sbb
xlat
jo
jl
adc
xchg
xchg
leave
jmp
adc
mov
ja
push
lcall
clc
inc
and
xor
add
cld
or
push
icebp
in
push
or
test
inc
inc
lret
shl
push
add
in
call
mov
mov
cmp
xor
mov
out
icebp
xchg
dec
gs
ljmp
testb
add
orps
xor
fwait
add
clc
inc
cmpsl
mov
sbb
inc
xor
fisubrs
popf
add
insb
xchg
orb
cltd
xchg
push
mov
jo
cmp
enter
cmpsb
mov
sub
ss
dec
ret
pop
clc
aas
push
mov
pop
fiaddl
fwait
sbb
jecxz
cld
xchg
out
rdpmc
dec
pop
mov
mov
leave
clc
inc
dec
ret
jne
rcrl
loopne
mov
mov
lea
xchg
sahf
push
inc
pushf
es
xor
fcompl
popa
jg
data16
push
lock
insb
int
imul
jno
fs
pop
jmp
pop
movsb
mov
jecxz
cmp
mov
or
pop
roll
xchg
in
jo
add
jae
mov
mov
pop
mov
inc
add
fs
mov
mov
ljmp
jl
movsl
push
xchg
ljmp
jns
mov
add
add
bound
daa
sub
fsubs
inc
lds
or
and
fnsave
sbb
call
mov
leave
je
mov
pop
fisttpl
mov
stc
mov
push
lods
stos
jmp
push
pop
gs
fildl
sbbb
jl
and
jle
sbb
fdivr
dec
cmpb
repz
out
fs
pop
stos
fmuls
dec
aas
mov
pop
leave
inc
fisubl
loop
add
jg
xor
addb
xor
cmp
jb
push
ds
push
sbb
stos
push
outsb
jl
cmpb
push
sti
jns
jo
mov
std
cli
or
jecxz
out
push
inc
dec
lods
jbe
mov
pop
leave
fdivrl
arpl
pop
add
rcr
rcrl
enter
xchg
xor
pop
lahf
dec
cmpsb
cmp
and
aam
cmp
ds
jmp
pop
aas
nop
pop
jecxz
sbb
daa
faddl
sbb
cmp
and
popa
insl
inc
pop
sbb
es
inc
inc
lods
adc
jnp
add
mov
mov
lahf
stos
loop
pop
and
stos
hlt
sbb
movsl
outsb
das
and
cltd
imul
mov
lea
scas
xchg
xchg
mov
cmp
in
cmp
mov
clc
and
cld
lock
cmpb
mov
std
inc
add
cltd
je
sti
fcomip
jno
cmp
stos
cltd
xchg
and
fcmovnb
add
mov
mov
cmp
push
inc
push
inc
sbb
loop
add
or
jmp
mov
fists
lret
add
push
mov
jmp
nop
jl
fsubrp
mov
jbe
jp
push
test
fwait
sub
jl
sub
lods
mov
je
loopne
dec
aas
gs
lahf
shl
test
js
cmp
sbbl
pusha
push
rol
imull
cmp
sbb
jmp
cmp
mov
loopne
jp
call
dec
iret
lock
sbb
popf
sub
fsub
pusha
dec
ret
or
mov
adc
push
out
sahf
xorl
or
ljmp
dec
gs
loope
movsb
scas
add
push
fcoms
ret
dec
mov
jno
push
xchg
int3
out
cmp
and
cld
inc
pop
sbb
mov
or
adcl
pop
gs
add
fwait
push
js
movsb
aam
leave
mov
dec
sub
sbb
mov
mov
jle
lret
pop
insl
jno
imul
stc
dec
stos
negw
and
or
cmpsl
jb
mov
inc
xchg
cmp
sbb
out
xor
addr16
pop
push
addl
mov
mov
mov
fwait
int3
xor
jnp
dec
xor
imul
or
mov
dec
mov
ja
shrl
or
add
xor
cli
sbb
dec
fisubrs
lods
cltd
push
jge
mov
inc
adc
xor
sub
add
dec
cmpsl
pop
in
mov
fcoml
pop
insl
push
and
or
lret
stc
or
fldt
xchg
inc
stos
repnz
mov
mov
inc
dec
jge
stos
test
cmp
rorl
xchg
mov
mov
pop
cld
int3
sbb
add
fwait
mov
dec
pop
sbb
pushl
xchg
mov
and
sarb
movl
loope
sti
dec
add
sub
mov
pop
fisttps
dec
hlt
sbb
xor
xor
mov
test
mov
xor
mov
jb
insl
in
test
bound
push
mov
lds
cltd
add
push
jno
jae
adc
sub
call
mov
pop
das
jg
and
xor
test
xchg
mov
leave
mov
inc
lods
cmp
dec
xchg
xor
pop
push
xor
int
scas
inc
add
test
mov
cmp
mov
movsl
mov
mov
add
lea
xor
dec
lcall
movsl
or
out
xor
sti
fldl
rcl
or
or
add
push
xchg
xorl
pop
lods
aad
in
ret
arpl
js
mov
lea
xchg
push
ja
cmp
push
ljmp
into
adc
aam
adc
lret
adc
mov
inc
stos
js,pn
nop
or
lods
mov
subb
aaa
lahf
hlt
lds
fs
xor
mov
out
dec
mov
ds
adc
gs
mov
jle
cmp
push
mov
fildl
sar
fsubrs
pop
push
push
imul
add
mov
push
outsb
mov
or
dec
adc
sub
dec
test
sbb
movsb
popa
ret
jle
adc
jle
movsl
add
push
addr16
hlt
clc
fwait
ret
cld
dec
add
pop
or
aad
pushl
jg
cmp
xchg
inc
ret
xor
lcall
repz
mov
lret
jno
sbb
ret
cltd
cmc
push
int3
fwait
push
aad
aam
cmp
lcall
mov
cltd
cmp
popa
adc
mov
add
fisubrl
scas
shl
subb
push
pushf
int
pop
sahf
iret
stos
test
iret
mov
xchg
xchg
cmp
gs
lret
lret
test
or
sbb
dec
arpl
sbb
add
rorl
jae
sbb
test
lods
jle
das
mov
std
ret
stc
pusha
mov
xor
ficoml
sub
xor
xchg
lods
call
jb
mov
movsb
pop
or
ret
jp
add
add
test
cmp
mov
das
dec
add
ljmp
inc
ljmp
sti
xchg
jl
jl
inc
xchg
cmp
cli
sub
jge
xchg
mov
fs
lods
repnz
cli
and
aas
movsl
or
sub
xchg
adc
cmp
and
jne
mov
cmp
mov
adc
stos
fldcw
mov
rcll
fildll
push
mov
sbb
xchg
add
inc
outsl
mov
jl
mov
lea
push
in
mov
mov
out
out
js
loop
test
lahf
lods
jecxz
out
sbb
pop
jno
in
xor
and
fisubrs
loop
popf
mov
push
adc
adc
iret
test
push
cmp
dec
cld
mov
loope
fcmove
outsl
test
adc
push
sbb
in
add
pop
inc
adc
push
lret
lods
xchg
sbb
imul
insl
jp
dec
and
in
shl
jae
cmp
imul
loope
xchg
add
inc
mov
outsb
je
les
mov
sahf
or
daa
inc
ds
mov
cmpsb
sbb
pusha
dec
shll
push
rorb
mov
pop
jnp
and
call
loop
push
sub
into
sub
and
mov
adc
adc
lcall
push
and
mov
inc
test
imul
xor
dec
add
mov
js
mov
and
sbbb
push
flds
add
inc
pusha
idiv
pop
outsb
fs
ret
out
loop
in
fdiv
clc
dec
test
ja
ja
ljmp
mov
xor
leave
sub
mov
mov
aam
and
loop
cmpsb
enter
call
rsqrtps
push
scas
xchg
and
jb
es
xchg
sbb
int3
jecxz
mov
lea
inc
add
add
idivl
cli
ret
inc
and
push
shll
jmp
jmp
mov
test
jnp
flds
insb
mov
jp
inc
adc
dec
adc
int
std
hlt
push
mov
mov
iret
dec
inc
push
cmpsb
dec
sub
repnz
inc
and
iret
loopne
divb
mov
xchg
in
pop
sti
lahf
pop
jecxz
xchg
or
inc
sub
mov
stos
push
lcall
mov
lds
mov
cmp
push
push
je
in
pop
fistps
out
ds
jb
fdiv
popf
and
repz
add
std
out
nop
fwait
ret
les
dec
insb
fnsave
stos
push
cmp
cmp
rcll
add
loopne
jo
inc
xchg
mov
dec
cmp
or
insl
adc
push
lahf
inc
and
cwtl
es
inc
bound
inc
jb
sbb
cltd
mov
jne
into
pop
and
shlb
add
jbe
sub
fs
in
pop
cmc
cmpsl
jns
xchg
dec
cmp
jne
mov
cmp
mov
ds
mov
jecxz
popl
jge
das
loop
mov
xchg
divb
ljmp
cmp
out
imul
cmp
lret
lea
scas
push
test
movsl
hlt
lds
nop
cmpsb
mov
sbb
aaa
push
insb
ret
and
xchg
sub
aaa
push
mov
aad
push
mov
ret
pop
and
out
aaa
enter
xorb
pop
mov
jb
movsb
and
sti
fistpll
mov
aad
std
adc
dec
sub
int3
into
mov
pop
mov
mov
push
test
dec
cmp
cld
mov
adc
add
jb
cmpsl
push
mov
cwtl
sbb
lods
push
dec
jo
lret
les
inc
mov
lds
mov
mov
mov
loop
push
jno
xchg
fadd
sti
cmc
rorl
jno
xor
jg
xchg
mov
cmc
xorb
xchg
mov
jg
in
adc
dec
mov
push
pushf
jae
hlt
xchg
popa
mov
xchg
call
or
outsl
fidivl
das
mov
mov
repnz
push
dec
lahf
jge
cmc
stos
movsb
clc
loop
add
test
stos
push
int3
pusha
adc
movsl
in
jg
je
sti
mov
inc
lods
sahf
sahf
and
in
and
cmp
arpl
fcomp
addb
jle
inc
mov
std
dec
or
stos
adc
cli
cmc
adc
daa
dec
popa
adc
leave
inc
fnsave
stos
lods
lret
int3
pop
jno
xchg
js
enter
in
int
sub
pop
inc
int
aas
rcl
mov
mov
dec
imulb
adcb
inc
inc
jnp
enter
outsb
ja
mov
iret
adc
imul
shll
and
mov
cmp
add
xchg
cmpsl
cmp
sbb
insl
das
mov
push
cmp
sbb
sbb
cltd
inc
aas
paddusb
mov
stos
rclb
mov
test
rolb
ret
cmp
sbb
adc
insl
adc
cltd
mov
and
divl
loope
pop
and
mov
stos
ret
lahf
pop
hlt
xor
repnz
js
mov
int3
imul
loop
in
jne
xchg
bnd
stos
ljmp
pusha
xchg
dec
nop
enter
pop
xchg
pop
adc
outsl
daa
aaa
lcall
mov
inc
ds
mov
push
out
xor
mov
idiv
cmc
into
mov
cltd
ja
sahf
mov
das
gs
push
jp
add
inc
sbb
incl
fisubs
mov
dec
cmpsb
jmp
lahf
jns
push
fs
pop
int3
orb
push
std
xchg
je
cs
cs
lds
pop
pushl
sbb
icebp
push
imul
cmp
cmp
pop
mov
mov
sbb
push
xor
mov
mov
jae
and
and
mov
push
outsl
xor
push
mov
mov
cli
pop
cmp
mov
movsl
sbb
mov
daa
push
sub
sahf
jl
test
sub
aaa
push
fmull
pusha
fildll
or
repnz
stos
or
loop
addr16
push
lock
addr16
cmpl
in
pop
jo
or
xchg
scas
movsb
arpl
sahf
mov
sub
mov
push
dec
jns
out
les
fimull
or
aad
xchg
or
mov
ds
jnp
mov
mov
leave
out
xchg
imul
stos
sbb
pop
mov
jmp
pop
mov
dec
stos
fnsave
ds
pop
ret
test
cmc
ret
jns
jns
pusha
movsl
adc
push
xor
into
and
dec
mov
cwtl
and
addr16
push
adc
mov
clc
lds
into
pop
xor
sbb
test
xchg
push
shrb
stos
cs
xorb
lcall
mov
cltd
jae
popl
addr16
and
dec
push
xor
or
sub
mov
and
jb
js
push
loopne
out
testb
push
and
xor
aas
push
fs
ret
out
ss
add
dec
inc
inc
cpuid
shll
insb
leave
pop
test
stos
lds
cmp
xchg
cmp
xor
mov
mov
sub
es
negl
xor
mov
daa
cmpsb
fdiv
mov
icebp
and
hlt
dec
ds
jnp
sbb
fnstenv
xor
lds
cmp
inc
push
lds
je
push
fimuls
sbb
jg
rcll
popa
xor
jge
sub
push
repnz
and
fwait
mov
cld
nop
push
es
or
inc
cmp
xchg
mov
jle
ja
jge
dec
pop
jmp
pusha
cmp
and
loop
in
aam
mov
mov
jo
cmp
pop
insl
add
pop
sub
dec
xchg
mov
mov
mov
jle
pop
dec
xchg
xor
jle
jb
jge
mov
sub
lock
and
mov
outsl
and
arpl
push
cmpsb
inc
cli
mov
scas
dec
lret
in
scas
lods
jp
xor
mov
mov
inc
pushf
jmp
mov
jg
cmp
push
repz
test
mov
addr16
push
loope
sbb
xchg
lods
jmp
xchg
mov
xchg
xchg
ret
movsb
pop
mov
in
outsb
fsubs
imul
call
pop
xchg
add
push
scas
dec
adc
adc
out
icebp
into
or
inc
rolb
mov
sti
push
in
cmp
stos
out
adc
ja
lods
call
lea
pop
dec
mov
ljmp
inc
jae
pop
test
sub
daa
aas
or
push
fcmovne
sti
int
mov
jb
mov
das
jmp
or
pop
mov
out
pop
push
mov
aas
in
test
dec
xor
mov
mov
lds
or
add
jno
push
mov
ljmp
ss
sub
pop
push
jp
cmp
test
cs
insl
sbb
adc
sbb
into
inc
pop
sbb
insb
push
hlt
subb
lock
movsb
insb
jnp
int3
aam
ret
leave
mov
push
pop
and
push
cwtl
sbb
stos
push
in
sub
pop
xchg
rcrb
xor
scas
mov
fistpll
sbb
inc
add
or
push
mov
mov
push
lret
mov
or
in
stos
shlb
lret
pop
arpl
jae
cmpsb
adc
outsl
je
push
xchg
jno
es
mov
and
sub
mov
mov
mov
mov
pop
into
push
aam
jmp
insb
clc
jecxz
and
sbb
in
sub
loopne
or
rolb
xchg
cmp
jle
stc
sahf
arpl
js
lea
lahf
jns
sbb
or
les
cltd
adc
and
jbe
inc
clc
adc
ds
mov
and
insl
xor
scas
pushl
and
sahf
xchg
xchg
cmp
aas
xlat
sbb
cmp
pop
jnp
or
scas
and
jbe
in
jbe
cmp
mov
mov
jb
aam
push
sbb
push
idiv
and
inc
sbb
loope
addr16
or
test
push
adc
lods
fadds
cltd
inc
push
mov
cs
imul
cltd
fs
or
jg
push
dec
mov
or
mov
cmp
or
and
sti
add
xchg
cmpsl
enter
cmc
jnp
push
adc
mov
loopne
push
outsb
push
mov
jno
and
fcoms
bound
push
test
stc
xchg
push
push
mov
imul
sub
and
dec
lret
dec
xor
cmc
sbb
pop
xchg
jg
lret
lret
cmpsb
mulb
ret
mov
shrl
or
sbb
lret
mov
lcall
arpl
mov
ret
inc
push
sbb
push
ret
sbb
iret
lods
mov
sbb
jne
icebp
mov
popa
mov
pop
insl
or
push
fbld
pop
mov
cmc
fdiv
leave
push
cmpsb
cld
and
cltd
xor
or
enter
add
push
mov
sbb
push
pushf
push
or
scas
inc
mov
xchg
pop
xchg
mov
inc
jp
enter
in
push
in
jmp
xchg
aad
pop
xchg
jbe
aad
imul
subl
int
pop
dec
inc
popa
mov
lcall
sbb
aam
and
dec
test
adc
pop
jmp
inc
inc
cld
pop
fdivrl
sub
movsb
sahf
fildll
adc
xchg
shlb
in
inc
cmpl
sub
push
lahf
into
sub
call
ret
out
push
stos
inc
in
add
xchg
imul
jle
jecxz
push
icebp
sub
cmc
mov
aaa
jb
fidivs
cmp
jbe
or
inc
mov
dec
imul
inc
das
mov
mov
adc
stc
bswap
push
inc
mov
enter
pop
xchg
xchg
out
in
dec
enter
and
cmp
int3
mov
inc
dec
push
punpckhbw
xchg
sbb
add
das
mov
movsb
orl
push
sub
xchg
rolb
clc
sub
rclb
pop
adc
lds
jmp
es
scas
daa
xchg
popf
push
xor
hlt
sbb
xor
lods
stc
hlt
adcb
cs
les
jns
addr16
js
rcll
push
mov
pop
insl
loop
aam
inc
scas
jae
loop
call
faddp
pop
pop
push
jmp
adc
xchg
das
incb
dec
jmp
add
sti
push
or
filds
mov
nop
sbb
push
shrb
mov
add
dec
add
sbb
add
in
outsl
sub
jbe
xor
and
fiadds
dec
icebp
daa
cmp
outsl
add
arpl
adcb
mov
stc
mov
ret
pop
mov
adc
lods
lahf
adc
adc
fwait
xchg
push
mov
je
lret
xor
sub
pop
mov
mov
xor
add
push
dec
jl
mov
aaa
fcomps
push
lds
nop
je
xchg
xchg
ret
out
sub
mov
lods
xor
fdivrp
rcl
pcmpeqb
jge
jnp
sbb
adc
dec
xor
xchg
mov
lods
push
daa
sbb
pop
push
jmp
or
xchg
push
mov
and
stos
cld
shlb
loopne
daa
xorl
mov
push
mov
jne
js
aad
xor
push
jbe
lcall
inc
jl
into
adc
sbb
pusha
mov
ret
mov
jno
outsb
fsubp
push
jl
add
push
les
fldt
push
push
movsb
push
mov
dec
and
sahf
es
cmp
adc
jbe
cmpsl
or
add
mov
les
aaa
add
xchg
arpl
cmpl
negb
aad
pop
inc
xchg
pop
push
gs
and
xor
cmp
jmp
js
lcall
dec
and
sub
push
jecxz
popa
mov
add
mov
mov
movsb
jb
lods
call
out
repnz
push
loopne
pop
sub
cmpsl
xchg
add
clc
popf
out
int3
or
fwait
rorb
jl
sub
icebp
adc
lea
mov
test
divb
cmpsb
jbe
mov
push
sti
cmpsb
adc
and
insb
dec
divb
mov
inc
les
bound
in
and
mov
push
mov
divl
nop
jge
add
pop
aas
cmp
or
lcall
sub
test
dec
xchg
dec
xchg
jge
inc
adc
add
cmpsl
or
jge
ds
xlat
xor
cmpb
sbb
arpl
pop
movsl
pop
cmp
nop
push
mov
adc
daa
pop
mov
movsl
cltd
in
mov
out
insb
loop
push
push
outsb
and
xchg
mov
push
outsl
push
test
mov
or
mov
cli
aad
add
push
lods
mov
popf
addr16
mov
pop
int
and
test
mov
dec
jmp
pop
mov
shll
sub
filds
sub
jb
mov
repz
scas
insl
testl
xchg
pusha
jne
cvtdq2ps
adc
or
mov
insl
adc
imul
loop
dec
stos
or
fwait
or
mov
fucomp
xlat
subb
xchg
xchg
pop
in
iret
jbe
lcall
orl
dec
pop
mov
mov
pop
clc
jmp
xorb
cs
inc
movsl
lret
icebp
lahf
push
xor
aas
mov
adc
push
cmp
lcall
jle
cltd
pop
dec
mull
or
or
std
ss
pop
cmp
ljmp
sub
and
push
dec
imul
orl
fistpll
dec
sub
aaa
ja
ret
dec
inc
cmc
test
fbld
pushf
movsl
xor
adcl
adc
jg
sub
sbb
push
xor
jmp
jmp
jb
mov
or
push
xchg
jecxz
adc
sbb
mov
jle
sub
sbb
fnstsw
push
insb
xchg
push
mov
aaa
loope
sbb
mov
stos
dec
out
push
outsb
lret
or
mov
pop
pushf
adc
into
inc
cmpsl
and
jge
adc
and
arpl
iret
and
iret
and
jns
cltd
mov
xchg
adc
fwait
sbb
dec
mov
mov
addr16
pop
jp
fs
ljmp
pop
cmp
jge
push
jge
nop
stos
dec
mov
pop
or
nop
and
movsl
inc
leave
push
jmp
inc
xor
fbstp
jl
fstpl
insl
cmpl
mov
imul
ret
xor
or
inc
icebp
xor
dec
lods
xchg
adc
int
mov
shl
adc
adc
fidivrl
xor
dec
aad
repnz
mov
int3
loop
mov
and
push
or
mov
in
movsb
mov
insl
add
rorb
aaa
fs
jle
mov
pop
call
add
inc
jle
sti
push
aas
cmp
xlat
fs
jo
lret
cmp
sub
out
fsubs
cmc
testl
jo
push
inc
lret
xor
add
push
inc
jbe
cmp
mov
jecxz
jb
arpl
outsb
in
jg
fnsave
lret
ss
xorl
inc
js
das
aas
mov
adc
fwait
es
ja
mov
lods
cwtl
pop
fsub
ljmp
aaa
jb
push
mov
xchg
std
push
xchg
adc
mov
push
leave
cmovle
inc
pushf
pop
lcall
jecxz
jp
adc
mov
aad
cld
stos
rcrb
cli
out
push
insb
and
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
jmp
aad
mov
mov
rorb
out
push
cmpsb
daa
sbb
adcl
addl
mov
mov
outsb
lods
mov
xchg
lcall
fsubp
aas
xchg
mov
int
mov
fs
mov
out
imul
mov
test
push
push
pop
and
and
sub
xchg
xchg
pop
xchg
or
xor
movsl
cmp
adc
loopne
dec
or
sub
aad
insl
daa
aaa
cli
movsl
jne
es
fcompl
neg
mov
popw
outsb
mov
loope
ljmp
cmp
mov
popa
mov
std
ss
xchg
add
lock
dec
shl
pop
fnstsw
lock
test
add
jle
movsb
jp
push
ret
push
in
clc
push
and
aaa
pushf
push
mov
sar
add
fstpl
clc
inc
dec
adc
jmp
dec
sahf
movsl
mov
jg
fnstenv
fwait
xchg
jg
fs
test
inc
jmp
mov
pop
movsb
leave
stc
jbe
or
scas
out
jp
mov
xchg
mov
std
pop
and
and
jns
std
inc
sbb
test
mov
stc
imul
adc
and
xchg
fldcw
cltd
push
and
push
sub
jmp
add
or
inc
fsubl
les
jecxz
jno
ss
sub
adc
mov
mov
call
pusha
icebp
pop
pop
dec
cmp
cwtl
aas
lea
sub
das
sbb
push
pop
inc
cmpb
lret
sbb
sahf
and
clc
cmc
enter
jbe
mov
clc
adc
loope
jae
push
bound
out
std
pop
out
and
js
jl
shll
push
add
into
jmp
mov
push
inc
divb
xor
or
inc
rorl
std
dec
rclb
arpl
subl
sbb
stc
mul
in
inc
in
mov
and
xchg
aam
cmpsl
push
xor
cmpsb
mov
adc
icebp
sub
pop
outsl
in
sbb
js
or
mov
shl
int3
insl
adc
push
xor
sbb
in
mov
pop
xor
lahf
sahf
add
pop
lret
outsb
loope
xchg
adc
cmp
sub
test
bndstx
jge
cmp
ds
cmp
or
mov
call
imul
pop
fmuls
in
fcmovnb
pop
dec
ret
out
lods
es
fcoms
std
movsl
or
sti
and
icebp
inc
mov
mov
push
insl
xchg
xor
sarb
ljmp
mov
sti
push
test
jo
shlb
out
or
in
gs
adc
cwtl
mov
push
or
pop
xchg
rcr
add
sbb
mov
jg
popf
in
shrb
cmp
pop
mov
ret
flds
pushf
stos
cltd
xorb
lods
push
test
fadds
jmp
sub
test
pop
fld
inc
sub
dec
gs
es
imul
pop
push
jo
jl
dec
ds
out
arpl
repz
test
aaa
filds
mov
loopne
cli
cltd
add
aam
inc
sub
sub
sbb
sub
insb
movsb
test
cltd
jno
adc
mov
mov
xchg
in
shrb
xchg
jp
idivb
fbstp
add
cmp
stos
adc
mov
lock
lods
gs
jns
push
movsl
inc
mov
and
and
cmp
cmc
sti
lock
mov
test
lahf
jp
mov
and
mov
jns
iret
cld
mov
sbb
pop
xchg
loopne
testl
and
mov
es
std
mov
add
shr
mov
jae
cmp
bnd
sub
jg
or
pop
inc
cmpl
jns
or
filds
and
or
xor
in
push
in
cmp
notb
dec
enter
cmp
fbld
ja
inc
jp
out
xchg
test
push
mov
cmpsb
cmp
jb
clc
fidivrs
movsl
in
jl
xor
lea
cmpsl
push
sahf
pop
movsl
daa
push
jge
repnz
lahf
jmp
pusha
cmp
or
sub
sbb
stc
cld
es
int
sub
lods
in
jae
aaa
mov
jb
pop
repz
cmp
inc
mov
ljmp
mov
je
fnsave
lret
sahf
sub
mov
dec
xor
jp
rcll
fimull
cmp
cltd
ljmp
scas
and
jno
sti
or
inc
jle
filds
xchg
cs
xor
les
xor
push
loop
cmp
imul
mov
test
mov
js
std
mov
cmpsl
cld
dec
call
stos
push
int
rcl
lret
xchg
ja
popa
mov
pop
pop
sbb
insl
xchg
fnstenv
movsb
out
push
cmc
ja
hlt
xor
cmpsl
jae
fbstp
cmp
mov
mov
and
add
pop
ret
inc
sbb
icebp
pop
rorb
inc
jg
jge
sub
mov
fisubl
inc
scas
dec
jp
push
pop
fiaddl
xlat
out
movsb
fnstcw
dec
mov
mov
sub
shrb
inc
js
dec
xchg
adc
adc
adc
dec
nop
dec
or
test
dec
mov
or
cli
cld
iret
repz
enter
xchg
jge
inc
pop
inc
hlt
in
mov
loop
adc
push
push
and
int
dec
push
les
inc
aas
fcomps
cmpsb
and
add
lret
loope
je
sti
mov
mov
pop
cmp
jnp
in
das
and
jp
dec
adc
sbb
jge
repz
fimull
test
mov
add
popa
fcom
movsb
push
or
scas
fiaddl
lcall
hlt
push
sub
lods
add
or
or
xor
dec
jne
or
sbb
xchg
jo
cltd
or
imul
xchg
inc
cmp
aam
push
adc
sub
mov
outsl
cmp
xchg
icebp
scas
xlat
mov
xor
sub
cmp
sub
clc
cmp
jb
popa
jno
into
jecxz
mov
fisubs
stos
xor
pusha
add
mov
andb
fstps
movsb
push
dec
out
xchg
mov
xchg
add
enter
mov
sub
es
xchg
or
mov
gs
subl
popa
icebp
mov
mov
lods
push
aad
adc
pushf
pop
andl
or
push
mov
sub
mov
sbb
clc
loope
mov
scas
nop
aaa
leave
inc
cmp
sbb
lret
fstpt
sub
pusha
inc
daa
dec
sti
push
xchg
dec
add
ja
pop
mov
cltd
or
mov
sbb
push
cld
xor
sbb
das
dec
scas
jmp
leave
sub
jns
push
and
pop
test
shrb
cli
icebp
imul
cmp
mov
dec
xlat
jo
pop
test
in
add
lods
cmp
dec
aam
notb
mov
xor
test
iret
enter
push
cmp
mov
cmp
test
adc
lods
das
je
test
lock
sbb
push
dec
push
out
inc
call
push
repnz
push
dec
xchg
imul
out
cmp
rclb
or
jbe
sbb
add
and
dec
jg
mov
fists
jg
dec
mov
push
sbb
arpl
cli
rep
sbbb
jb
fs
cmp
in
cmp
dec
mov
sbb
add
repz
mov
pop
enter
lea
sub
dec
mov
lea
adc
cmp
xchg
in
xchg
cmc
inc
adc
enter
filds
rorb
cltd
lods
imul
cld
cmp
in
or
sbb
bts
pop
sub
in
lods
mov
xor
out
cmpsl
mov
jnp
int
movsb
sar
and
and
jmp
sub
xor
mov
loope
cltd
cmpsl
push
sub
adcb
ds
mov
push
and
lahf
shrl
aad
dec
hlt
xchg
lods
push
fstpt
stos
and
les
jno
ja
lret
cs
ret
clc
out
lock
in
je
dec
xlat
inc
add
enter
jge
lods
xchg
push
aad
lret
imul
inc
add
push
adcl
pop
aas
loop
sbb
in
je
sbb
cs
and
mov
mov
mov
outsb
xchg
mov
push
popf
mov
sarl
jge
stos
mov
sti
add
xchg
scas
roll
adc
push
jg
icebp
xchg
xchg
jno
ja
int3
sbb
or
sti
jae
lds
inc
and
sub
cmpsl
call
pop
xchg
andb
cmp
xchg
inc
aad
jo
nop
fsubl
mov
sbb
hlt
ljmp
cld
sub
xchg
movsl
sbb
xchg
out
dec
sbb
xor
js
pop
out
mov
lret
loopne
arpl
mov
push
addl
imul
cli
js
xchg
jmp
lds
enter
and
add
pop
push
xchg
ds
jmp
jae
pushf
dec
scas
inc
ret
jecxz
and
sbbb
leave
mov
fisttpll
js
jno
pop
cli
loope
hlt
push
mov
imul
adc
in
mov
mov
push
faddl
stc
xor
gs
sub
das
cld
cmp
mov
es
shrl
or
cmpsl
rorb
fldenv
shlb
adcl
push
mull
mov
cmp
cld
ret
daa
pop
mov
fwait
fs
dec
test
adc
outsl
push
int
out
cld
mov
jo
rcll
add
mov
js
ret
das
stos
inc
mov
add
shrl
jp
or
mov
mov
jge
pushf
cwtl
pusha
loop
inc
fcmovu
shll
js
lds
aaa
add
inc
xor
pop
jo
push
rcrb
test
cwtl
and
xchg
loope
pop
lcall
imul
push
into
ret
fdiv
adc
push
pop
mov
dec
jp
pop
jbe
xchg
std
inc
dec
cmpsl
mov
cmp
aaa
in
sub
lock
jae
xchg
je
mov
push
in
push
or
pop
repz
mov
mov
push
imul
dec
jns
cmp
pop
fs
cmpsl
out
mov
push
fnstenv
mov
cs
pop
xchg
fildl
mov
sbb
inc
ficoml
aad
adc
jl
lahf
out
mov
xchg
les
jns
or
sti
xor
test
outsl
aas
add
daa
xchg
xchg
push
add
push
pop
sbb
mulb
inc
push
cltd
dec
movsl
dec
ret
mov
in
inc
pop
or
dec
and
push
outsb
mov
pandn
and
sbb
add
inc
mov
repnz
mov
dec
andnps
int3
adc
dec
inc
mov
dec
scas
ds
mov
xor
xor
cmp
mov
or
inc
cld
je
pusha
rcrl
loopne
mov
xchg
js
sahf
inc
ficompl
and
daa
mov
insl
xchg
jns
jp
mov
adc
mov
jmp
lea
imul
sbb
outsb
ret
cld
ja
lock
in
xchg
cmp
int
pop
jmp
dec
jmp
adc
pop
xchg
imul
pop
int3
sahf
sbb
xor
push
sbb
push
ret
cmc
xor
mov
jbe
cmpsl
add
lret
jnp
popa
dec
add
mov
lock
adc
sbb
push
outsb
xchg
mov
scas
divl
pop
push
clc
test
mov
or
xor
data16
leave
or
xchg
fildl
xchg
xor
xchg
inc
fwait
mov
int
pop
int3
xchg
fdivl
fs
jge
dec
and
mov
ljmp
mov
push
mov
xchg
call
call
ret
scas
and
aas
dec
sbb
adc
add
jl
lcall
pop
sbb
cwtl
lahf
repz
dec
mov
aaa
mov
inc
incb
dec
xlat
cltd
ja
push
push
clc
push
dec
or
sbb
inc
xor
xchg
popf
inc
sbb
dec
hlt
and
aas
cmc
mov
cltd
mov
jl
cmpsb
jmp
in
lret
xchg
push
push
sbb
adc
push
sub
dec
pusha
pop
xor
xchg
jg
fnsave
push
jp
and
xchg
lock
xlat
dec
mov
xchg
jmp
imul
sar
lods
stc
test
ss
int
adc
sub
icebp
add
scas
aad
sub
mov
enter
mov
mov
xchg
or
inc
mov
cmp
mov
sbb
outsl
scas
das
hlt
mov
movsl
pusha
xchg
or
ret
clc
sbb
clc
push
rcrl
jle
pop
mov
cmc
pop
test
into
ja
fbld
push
jle
add
mov
int3
aaa
xchg
dec
or
in
loope
pop
sbb
pushf
jmp
mov
jae
xor
jns
fs
pop
cli
pause
add
mov
and
fisubrl
dec
repnz
loopne
iret
shlb
cmp
push
ret
cmp
inc
mov
cmp
popa
in
test
push
add
pusha
aaa
adc
push
mov
jecxz
fistpll
arpl
pusha
dec
add
ss
mov
stos
cmp
in
lahf
movsl
xor
ss
mov
faddl
jg
mov
js
fimuls
adc
mov
mov
inc
aam
xor
push
pushf
and
xchg
lds
xchg
dec
or
or
pop
jle
rcll
sbb
xchg
xchg
roll
push
push
dec
mov
test
pop
out
or
jg
mov
mov
jecxz
dec
mov
pop
int3
scas
les
mov
mov
add
mov
sub
nop
call
inc
fcmovbe
loope
ficompl
and
shr
cmp
mov
xchg
xor
add
fstps
ret
loope
fiadds
repnz
inc
rol
pusha
movsl
cltd
and
fnstsw
cmpsb
pop
jle
inc
pop
in
dec
xlat
add
mov
cmp
mov
nop
dec
adc
je
and
xchg
pop
loopne
adc
mov
lret
icebp
fbstp
mov
jl
add
cmp
xchg
in
in
shlb
loopne
test
mov
xor
enter
mov
mov
xlat
or
pop
adc
pop
arpl
or
lret
sbb
pop
insl
mov
out
inc
xchg
inc
xchg
das
fnstenv
add
rcrb
cwtl
mov
hlt
gs
dec
push
pop
icebp
insb
xchg
lods
and
and
pushf
enter
ja
dec
mov
pop
xchg
xor
mov
loope
fnstenv
sbb
ds
add
outsb
jg
or
std
jmp
les
imul
outsb
mov
inc
pusha
mov
lret
and
inc
adc
dec
les
add
addr16
mov
popa
push
ja
shrb
out
dec
outsl
push
sub
std
jmp
or
lds
jmp
mov
inc
inc
inc
jge
or
push
addr16
push
nop
push
test
dec
push
inc
and
xor
dec
adc
movsl
scas
incl
ljmp
adc
xchg
fmull
jecxz
mov
cli
rcrl
add
cmpsb
pop
jno
dec
adc
cmp
imul
add
loopne
out
dec
cmpsl
cli
xor
rclb
negl
pop
imul
lds
adc
ror
cltd
nop
das
adc
and
rcrl
pop
popa
notb
add
pop
jne
sbb
sub
xchg
sbb
add
in
fists
add
cmp
nop
nop
inc
adc
and
out
push
sbb
in
jnp
rorl
or
cmp
mov
jg
hlt
stos
pusha
addb
ficoms
mov
int3
jb
pushf
pushf
les
adc
fstpt
mov
sub
pop
lock
lahf
xchg
or
stc
and
cltd
sbb
je
push
add
in
add
mul
sarl
pop
push
roll
mov
and
gs
pop
or
ja
cmpsl
add
in
std
dec
inc
pushf
or
shll
jnp
cmp
or
push
inc
cmp
adc
mov
mov
ror
ror
fs
sbb
mov
push
fbstp
addr16
shlb
jne
js
mov
and
mov
inc
ljmp
popf
add
scas
sub
lret
vpaddd
cwtl
inc
sbb
push
mov
or
lods
andl
mov
test
call
push
int
shl
cmp
adc
inc
scas
fucomp
repnz
mov
insb
pop
cmc
dec
out
into
pop
lock
xchg
test
add
jle
lds
jecxz
inc
push
sub
hlt
and
out
xchg
std
lods
add
inc
adc
stos
popa
and
int3
pop
aas
jecxz
jge
daa
add
push
insl
addr16
jno
sub
cmp
testb
lret
mov
cli
xchg
jecxz
mov
sub
xor
cmp
jnp
in
cmp
lahf
pop
xchg
pop
sahf
push
imul
sti
shrl
pop
out
in
lcall
and
push
or
mov
sbb
roll
or
pusha
mov
sub
bound
jns
enter
dec
pop
stos
xorb
jl
dec
repz
pop
push
and
out
lods
mov
push
pusha
adc
mov
xchg
sbb
rol
push
push
pop
adc
loopne
jecxz
push
push
repz
icebp
fistpll
aam
rorl
and
pop
lcall
into
and
ljmp
andps
inc
gs
push
imulb
cmp
sbb
sti
sarl
and
xor
in
xchg
in
push
adc
rcll
and
jmp
std
add
dec
test
repnz
cmpsb
dec
mov
scas
sbb
cmp
cmp
sbb
xchg
pop
push
imul
mov
xchg
sub
add
test
nop
xor
nop
rorl
xchg
add
fs
imul
fwait
and
xchg
or
cmc
mov
mov
jmp
add
pop
test
scas
dec
jle
add
into
in
lcall
push
push
pop
in
loope
das
fs
xlat
insb
mov
and
mov
inc
sub
xor
pop
add
iret
call
pop
cwtl
mov
sbb
jp
ss
lahf
scas
mov
xchg
xlat
das
repz
popf
std
repz
out
out
leave
imul
in
mov
std
fwait
mov
popf
nop
js
mov
pushf
cwtl
xchg
rclb
movl
and
add
rcrl
pusha
shl
es
jno
ret
mov
pop
in
pop
ds
flds
test
loopne
inc
leave
int3
mov
aad
jnp
lods
or
mov
mov
mov
mov
out
in
sub
scas
cmpsl
rorb
std
jecxz
sbbl
pop
mov
xor
xchg
push
xchg
pop
sub
sbb
cmpsl
mov
js
in
rcll
clc
es
rclb
inc
dec
cmpsl
inc
push
insl
jne
fstpl
xchg
sbb
add
xchg
push
mov
mov
popa
sub
pop
loopne
ss
inc
jp
aad
mov
fadd
cwtl
inc
sub
cmp
jne
data16
mov
popa
iret
das
hlt
xchg
pop
repz
jae
sbb
mov
cltd
pop
pop
cmp
insb
mov
lock
lcall
pop
jl
cmp
sub
inc
out
pop
in
inc
imul
cmp
sbb
or
mov
mov
dec
and
cmp
xor
mov
adc
inc
fs
out
ds
pop
pop
pop
push
xor
and
push
sub
dec
adc
mov
dec
cmc
int3
dec
jae
pusha
push
add
adc
adc
xor
push
mov
out
test
aam
data16
sbb
fadds
xchg
stos
out
outsl
jecxz
shrl
pop
repnz
add
xchg
clc
mov
and
ds
cmp
push
imul
add
aam
test
cwtl
mov
mov
mov
adc
inc
sbb
test
pop
sbb
push
xchg
push
cltd
lcall
inc
ds
pop
or
xor
cltd
rclb
sub
cld
rcl
out
insb
fs
in
lea
imul
jne
lret
shll
push
scas
shlb
out
inc
sub
inc
and
mov
divl
outsb
les
enter
pop
aaa
enter
in
pusha
push
pusha
out
adc
roll
jecxz
dec
add
sbb
push
mov
rcll
dec
mov
xchg
cli
ret
mov
daa
mov
not
mov
shll
out
xor
imul
pop
pushf
xchg
mov
mov
jle
push
sarl
and
mov
daa
rcll
fwait
lods
and
jl
pop
xchg
repz
stos
leave
and
push
dec
mov
cmc
ret
xchg
adc
cmpsb
xor
std
das
clc
mov
insl
mov
aam
push
mov
fdivs
data16
je
scas
mov
dec
cltd
push
pop
ret
xchg
mov
mov
jmp
pop
call
in
pop
lahf
hlt
adc
fisttpll
mov
xchg
and
adc
mov
fs
dec
enter
das
int3
movsl
lcall
rclb
cs
sbb
loop
fsubp
xor
sbb
jecxz
cmp
in
cmpsl
push
gs
cmpsl
dec
gs
outsl
mov
sbb
push
push
mov
sub
and
cmc
or
int
and
cmpsl
push
inc
test
iret
xor
call
mov
push
fidivrs
add
rcrl
jg
add
enter
mov
jae
fmuls
xchg
xor
sbb
push
dec
call
jbe
addr16
adc
gs
jae
and
into
pushf
int
jp
and
leave
insl
in
sub
rcll
scas
jp
sbb
pop
std
mov
insl
loopne
mov
in
adc
pop
dec
adcb
cmp
pop
ret
loop
jns
push
inc
adc
push
jp
push
xchg
add
roll
outsl
fnstsw
test
loop
data16
mov
out
pop
aaa
or
sbb
or
xor
mov
mov
xchg
xorb
mov
js
aas
mov
or
inc
sbb
shr
push
das
or
push
sbb
imul
push
jb,pn
ja
cmp
movsl
fidivrs
xchg
cmp
adc
pop
pop
daa
add
sbb
adcl
mov
lret
mov
into
gs
shlb
xor
push
jae
xchg
jbe
jge
or
andl
in
jae
xor
icebp
imul
sarl
mov
adc
sbb
fs
sbb
popf
mov
in
scas
ljmp
shlb
stos
call
jg
jns
mov
lods
xor
mov
push
mov
dec
sub
push
pop
pop
mov
pop
pop
xchg
cmpsl
adcb
adc
pop
pop
je
adc
pop
adc
or
mov
or
pop
sbb
dec
mov
or
ja
add
push
cltd
popf
enter
xor
std
test
fidivrl
push
enter
in
xor
inc
mov
pop
mov
pop
cmc
sub
mov
and
ret
iret
hlt
stos
mov
fwait
jmp
xchg
xchg
sub
pushf
dec
pop
ljmp
add
das
ljmp
push
pop
ret
or
and
cmp
cmpsb
repz
pop
cld
jns
addb
fwait
scas
bound
fs
cmovno
mov
lcall
dec
mov
inc
int
das
jmp
repnz
pop
lret
bound
sub
xor
outsb
inc
and
aad
xor
sub
push
push
movsb
lods
push
jmp
stc
ret
bound
hlt
adc
sub
pmullw
mov
dec
and
mov
test
ljmp
mov
mov
dec
xchg
mov
stc
ret
xchg
mov
sahf
aas
pop
mov
jp
mov
insl
cmpsb
xor
cmpsl
ds
inc
mov
xchg
lea
adc
and
mov
out
xor
cmp
add
fiadds
inc
dec
cld
mov
iret
loop
dec
jbe
mov
imul
push
stos
das
pop
inc
inc
in
mov
mov
dec
cmp
push
jne
mov
std
adc
inc
int3
xchg
aam
push
lret
shll
fst
ficoms
push
mov
jecxz
cmp
xchg
lret
loop
les
imul
mov
pop
data16
xchg
xchg
sti
lods
xchg
and
repz
dec
mov
xor
sbbl
jge
inc
mov
jae
movsb
cld
jecxz
faddp
cmp
pop
lea
or
repz
fcomi
lock
fcoms
ret
lcall
cltd
test
div
addl
mov
call
mov
mov
xor
add
xor
pop
rol
sti
mov
cmp
rcl
in
mov
pusha
ss
mov
or
push
pop
jno
clc
add
mov
push
fisubrl
add
dec
arpl
iret
mov
push
mov
sub
cmp
js
jecxz
sbb
pop
sbb
cs
stc
sbb
jp
sahf
in
stos
mov
ds
cmpsb
dec
out
aam
gs
push
dec
inc
push
xchg
movsb
daa
arpl
pop
add
dec
stos
pop
cld
cli
add
test
mov
popw
xorl
out
jb
cmp
outsb
lock
into
and
divl
xchg
fdivrl
shrl
in
das
loop
mov
xor
scas
xchg
shlb
leave
je
xor
int3
sbb
mov
sbb
fs
sub
cmp
mov
jle
and
jmp
push
out
jo
pop
mov
dec
filds
pop
mov
pop
and
mov
xor
stos
addb
add
out
xchg
cld
and
jo
xor
scas
negl
add
aaa
cmp
xchg
enter
lret
pop
cmp
pop
out
scas
stos
or
sub
imul
stc
add
dec
sahf
pusha
jmp
or
pushf
scas
adc
je
shrl
sub
fwait
imul
rclb
adc
insb
inc
cmp
pop
push
out
and
push
adc
pushf
daa
lods
push
adc
mov
cmp
popa
mov
sub
lock
mov
cmp
imull
stos
sbb
dec
pop
pop
push
lods
mov
adc
int
ja
out
mov
adc
clc
enter
add
cmp
mulb
sub
jo
adc
mov
mov
mov
std
and
xchg
mov
lret
xchg
test
outsb
xchg
pop
icebp
inc
push
ds
jnp
pop
add
call
cmp
cld
fsubrs
int
stc
xchg
adc
push
lock
shrl
add
sbb
push
push
or
mov
push
xor
push
out
movsl
fwait
imul
or
adc
les
std
pop
and
hlt
xchg
xlat
xchg
in
imul
or
inc
adc
sub
movsl
rolb
aad
jae
inc
gs
arpl
popa
cmp
sarb
mov
cmpsb
iret
cmp
movsb
inc
paddd
sbb
out
push
pop
int
jecxz
lods
push
mov
mov
mul
in
inc
daa
inc
jno
mov
mov
or
sbb
aad
cmpsl
pusha
adc
push
in
rcr
and
add
mov
fwait
or
bound
enter
mov
les
adc
popa
cmp
xchg
jne
inc
xchg
pop
cwtl
sti
xor
xlat
xchg
imul
xchg
fistps
and
xchg
dec
lds
adcl
pop
mov
out
or
xor
inc
jecxz
stc
xchg
mov
sarl
inc
push
mov
push
lcall
clc
ljmp
jg
mov
leave
les
ja
push
xchg
pop
and
pop
aaa
pushf
inc
mov
adc
pop
nop
add
and
mov
sub
fcoml
cmp
mov
xor
das
push
inc
int
in
mov
clc
ss
inc
mov
xchg
repz
dec
ret
shrl
sbb
sbb
cmp
xor
data16
mov
xchg
clc
sbb
in
faddl
mov
idivb
xor
adc
adc
xlat
insb
mov
movlps
dec
pop
mov
inc
dec
imul
sub
popf
adc
fcoms
pop
add
xor
pop
mov
or
lods
into
adc
jge
lahf
jnp
dec
xor
xchg
arpl
xor
adc
notb
push
mov
loopne
dec
dec
sbb
push
pusha
jl
sbb
cs
jle
cmpsb
mov
dec
fldl
andl
sbb
pop
pop
movsl
fsubl
cmp
shlb
inc
or
scas
movsl
arpl
xchg
push
xchg
dec
popa
sbbl
add
lret
insl
loop
push
popf
sarb
les
inc
in
inc
and
cli
cmp
cli
shll
jecxz
ss
stos
scas
adc
push
scas
inc
push
push
dec
fcomps
mov
lahf
loop
aad
mov
adc
fstl
mov
cmp
sub
sub
stos
fwait
mov
mov
into
fsubrs
and
inc
out
fadd
out
mov
icebp
xchg
and
out
int3
mov
jge
lods
and
cmp
pop
xor
test
mov
ja
sbb
dec
cmp
or
mov
inc
sub
adc
std
lret
jp
mov
sbb
mov
inc
inc
std
push
dec
cli
push
or
pop
cld
loop
and
dec
clc
rcl
mov
sbb
iret
cmp
fstps
outsb
pop
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
notl
push
sub
push
sub
mov
mov
mov
inc
mov
or
movl
movzbl
adc
movl
adc
mov
add
mov
adcl
sub
adc
mov
xorl
xorl
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
pushl
pushl
call
cmpl
jb
mov
sub
mov
orl
mov
andl
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jb
mov
xorl
orl
mov
andl
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
movl
cmpl
je
cmpl
jbe
jmp
call
mov
dec
mov
jmp
mov
orl
add
mov
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
mov
mov
neg
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
adcl
movl
subl
lea
movzbl
sbb
mov
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
call
jmp
lea
add
mov
xor
mov
mov
mov
sub
xor
mov
adc
mov
adcl
xor
orl
add
xorl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
mov
mov
add
movl
cmpl
je
cmpl
ja
jmp
push
call
xor
or
dec
mov
jmp
push
sub
mov
mov
mov
mov
mov
adc
mov
xor
and
mov
add
movl
cmp
movl
je
notl
mov
jmp
mov
xorl
xor
push
add
xor
xor
sub
mov
add
movl
push
adc
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
push
push
pushl
call
jmp
mov
xor
subl
xor
movl
cmp
movl
jne
movl
cmp
jne
push
movl
jmp
mov
xor
adcl
add
subl
xor
add
movl
adc
subl
xor
orl
xor
movl
cmp
movl
jne
cmp
movl
jne
addl
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
xor
xor
dec
mov
jmp
xor
add
mov
subl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
jmp
mov
movl
xor
add
adcl
imul
mov
orl
xor
add
movl
cmp
mov
je
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
mov
orl
add
and
mov
mov
xor
add
imul
sbbl
mov
mov
mov
mov
xor
mov
sub
mov
jmp
mov
xor
mov
mov
mov
xor
mov
sub
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
jg
mov
mov
xor
mov
sub
mov
jmp
mov
xor
add
add
mov
mov
mov
xor
add
not
and
mov
movsbl
cltd
add
adc
jmp
pop
push
xchg
dec
add
roll
int3
pop
mov
pop
addl
lods
push
js
dec
mov
xor
cmpsl
dec
cmp
xlat
push
in
xchg
call
addr16
mov
cmpb
das
push
shr
lock
ds
dec
hlt
pop
das
jmp
add
loope
shll
scas
and
push
stos
xchg
push
pop
pop
cmpsl
or
cmpsb
mov
jle
adc
mov
enter
lock
jbe
cmpsb
jmp
sbb
mov
add
cmp
mov
and
dec
enter
mov
xor
sub
fdivrs
and
imul
push
cwtl
fdivl
jmp
pop
push
pop
int
xor
cmp
dec
scas
mov
inc
scas
mov
pop
in
xlat
xorl
out
xchg
js
sbb
cmc
pusha
push
insl
mov
xchg
jp
int3
es
ficompl
rcrb
js
pop
add
sarl
hlt
sub
int3
or
mov
rorb
add
cmp
cmp
lods
vpmulhw
sbb
jge
push
lea
sub
push
or
push
mov
movsl
mov
inc
mov
fistpl
call
or
ficoml
sbb
push
movsl
push
jb
clc
mov
jle
ljmp
inc
pop
xor
or
in
mov
mov
testb
repz
xor
mov
test
sbb
dec
pushf
jl
jno
aad
jae
sbb
test
pop
push
sbb
pop
stos
shl
test
mov
in
jae
xchg
mov
cmp
into
mov
lds
mov
int3
loop
cli
cltd
sar
pop
adc
mov
popa
push
mov
add
imul
pop
imulb
jbe
je
cmp
dec
mov
in
out
cmp
dec
inc
cmp
loopne
nop
inc
imul
jns
pop
scas
dec
mov
cmp
inc
stos
mov
aaa
test
jl
bound
in
stos
sub
sub
ss
add
push
add
inc
mov
lods
cmp
xor
fwait
add
hlt
popf
in
clc
pop
fiadds
xchg
inc
push
sbb
pop
add
pop
mov
cwtl
xor
and
pushl
dec
dec
and
pop
jmp
push
push
aaa
jmp
or
pop
fldenv
cli
cmpsl
in
das
call
scas
ret
lods
movsl
pushf
adc
and
adc
lret
fbstp
jno
pop
lods
repz
lods
xor
push
outsl
iret
pop
xor
push
and
outsl
sub
or
sub
fisttpl
lret
cmp
fimull
movsl
hlt
aas
mov
and
pop
data16
out
shr
ljmp
pop
lea
mov
scas
test
out
add
cmp
decl
mov
cmp
push
jne
and
ficompl
lods
es
in
xorb
repnz
popa
mov
je
dec
ja
xor
jmp
xor
or
repnz
bound
imul
xor
adc
fwait
popf
push
cmp
cmp
je
sbb
xor
ja
in
mov
or
ljmp
mov
mov
jge
push
pop
lods
xchg
mov
sub
jns
jbe
dec
adc
lcall
outsb
ret
lods
pop
mov
mov
xor
repnz
xchg
ds
cmp
and
sbb
add
pop
xor
push
stc
loope
in
cwtl
adc
lods
add
aad
scas
iret
fisubrl
mov
fstl
mull
xor
fwait
arpl
push
stc
dec
cmpsl
mov
loop
sub
lods
mov
pop
mov
pop
andl
mov
pusha
aaa
xor
fs
push
pushf
test
cmp
addb
popa
data16
push
sub
and
push
mov
sbb
stc
jmp
mov
int
fiaddl
movsl
gs
jl
sbb
aaa
aam
jle
setle
aam
push
adc
mov
fnsave
dec
pop
and
sbbb
inc
fwait
ljmp
movsl
sub
fcomip
xor
icebp
adc
or
mov
inc
jecxz
mov
jecxz
sub
or
loopne
jne
sbb
jle
sbb
leave
sarl
cli
cmp
xchg
lods
inc
xchg
sub
jmp
mov
arpl
mov
lret
add
fldenv
aad
lds
fucom
cmp
mov
inc
or
cmp
adc
fwait
cli
mov
sbb
cli
ret
lahf
push
mov
ds
das
push
xchg
add
jmp
mov
dec
inc
inc
jecxz
and
xlat
addr16
mov
rolb
loopne
bound
xchg
jmp
movl
js
jo
sbb
mov
ret
dec
cmpsl
inc
fists
jl
push
es
out
mov
aam
sub
loope
orb
repnz
bound
pop
btc
in
jge
sub
fsts
je
sbb
jbe
in
fwait
and
gs
sbb
pop
sbb
sub
addr16
adc
orps
adc
out
icebp
push
sbb
flds
adc
out
xchg
aam
push
imul
clc
xchg
xchg
jbe
or
dec
lcall
clc
repnz
xor
push
arpl
lret
orl
gs
sahf
adc
xchg
push
out
icebp
and
add
dec
fwait
xor
testl
imul
insl
arpl
mov
mov
aas
out
xchg
adc
rol
in
push
xor
cmp
mov
and
dec
cmpsb
clc
add
xor
jae
bound
sbb
cltd
sub
mov
out
jns
or
jp
mov
inc
xchg
push
out
mov
loopne
lods
arpl
sbb
mov
jns
pop
into
pop
push
add
push
add
mov
lock
lcall
sub
mov
cld
lods
sub
jp
imul
inc
inc
icebp
mov
das
and
lea
adc
mov
insl
or
mov
movsb
sub
sub
xor
add
aad
add
mov
stos
rolb
adc
adc
repnz
mov
daa
fwait
sti
iret
in
lock
dec
sub
mov
loop
cld
cmp
pop
into
mov
je
cmp
ja
scas
cmp
popf
add
cmp
dec
lahf
add
scas
push
cwtl
sub
inc
subb
cli
sbb
and
lret
into
lea
mov
jns
pop
push
mov
fwait
rcr
or
data16
adc
mov
xor
scas
outsb
mov
jbe
sub
int
inc
popa
mov
sub
push
in
pushf
jo
insl
add
dec
sbb
push
inc
nop
cmp
push
fldt
in
xchg
enter
addb
or
aaa
jmp
pop
sbb
jmp
xor
lock
xchg
fnsave
jle
dec
rolb
scas
and
jp
addr16
in
sub
dec
adc
lret
out
sbb
lods
subb
outsb
xor
and
andl
pushf
and
lea
test
pop
lahf
notb
push
popa
jb
movsl
adc
adc
test
ret
loopne
mov
jae
cmp
cmpsl
mov
or
or
sbb
daa
mov
add
out
xor
push
mov
cmp
mov
jg
jne
fsts
loopne
mov
sbb
lahf
repnz
push
or
clc
js
cmp
iret
cwtl
sbb
mov
loope
or
shlb
jl
jp
xor
push
outsb
xorb
xchg
lods
inc
sub
outsb
shll
adc
daa
dec
or
dec
out
call
leave
test
pop
jne
mov
int3
rcr
js
jno
in
into
mov
insl
jbe
mov
mov
jae
ficompl
in
in
test
faddp
cltd
add
xchg
xlat
out
mov
ret
popf
loop
movl
fs
nop
loop
test
xchg
es
or
cwtl
mov
aaa
jle
inc
repz
out
pop
shl
jbe
xchg
mov
test
lahf
das
push
mov
enter
push
mov
pop
adc
lret
cmpsl
cmp
or
mov
inc
dec
push
aam
rorl
mov
es
daa
icebp
xchg
push
incl
xchg
push
mov
and
jmp
movsb
jecxz
test
mov
ja
mov
lods
ror
out
pop
push
hlt
sti
cmp
insb
push
jecxz
ss
xchg
bound
jbe
sbb
mov
xor
insb
jbe
outsl
cmpsl
inc
insl
mov
xchg
jg
test
mov
dec
test
xor
mov
lds
mov
push
push
mov
in
loop
mov
jle
push
cmpsb
or
outsl
or
adc
popf
pop
jg
flds
push
sahf
int3
roll
jno
lcall
aam
lcall
add
outsl
out
mov
fwait
sbb
and
pop
repz
std
xchg
mov
push
fucom
mov
or
decl
inc
sub
xor
push
clc
cmp
sbb
mov
add
adc
cmc
push
fcompp
mov
data16
and
sub
lds
stos
mov
movsl
xor
in
jne
xorl
xchg
mov
leave
xlat
jns
inc
pop
cmp
pop
inc
jg
fimuls
in
xor
fimuls
ljmp
les
cs
inc
popa
add
repz
int
xchg
loope
arpl
cmpsl
outsb
push
daa
orl
in
pop
adc
jb
adc
mov
xor
mov
shrl
je
loop
rcll
cwtl
add
mov
hlt
pop
mov
ret
inc
dec
push
int
rcrl
xchg
pusha
leave
daa
test
pop
je
jl
dec
sub
pop
lods
cmp
xlat
mov
nop
lods
sbb
add
fistl
cmpsb
les
les
mov
add
scas
inc
outsl
pop
dec
mov
sub
into
sub
aaa
ds
test
pushf
lods
jns
push
mov
mov
jecxz
out
jl
cmc
mov
xor
cmp
cmpsb
shlb
insl
cmc
popf
incl
push
add
cmp
into
lahf
mov
rcrl
xor
ss
adc
imul
push
in
mov
fmuls
nop
adc
les
jb
cmc
jmp
ss
and
pop
rol
loop
inc
test
inc
push
repnz
xor
nop
js
or
clc
or
mov
jb
add
aad
pop
aad
scas
mov
hlt
pop
jbe
std
ret
cmp
add
mov
ds
cmp
mov
inc
sbb
xor
mov
inc
and
cs
aas
jg
xchg
mov
pop
pop
jno
xchg
dec
or
jns
push
out
dec
lahf
mov
mov
lock
repz
add
sbb
jbe
mov
mov
pop
cs
mov
jge
mov
mov
shl
call
fcoml
scas
cmp
pusha
and
adc
push
inc
and
jp
gs
xchg
xor
xor
clc
mov
inc
out
cmpsl
insb
ss
jno
xlat
mov
cmp
outsl
clc
mov
roll
int
ja
inc
in
push
lret
ret
cwtl
ss
cmpsb
mov
ja
cld
push
or
testl
lock
lods
bound
mov
xchg
push
cmp
daa
sub
movsb
cltd
xor
test
pop
out
sbb
add
hlt
and
jmp
jae
mov
int3
orl
jle
cmp
or
sbb
shl
add
test
mov
pop
loope
adc
into
push
dec
es
mov
xor
adc
mov
pop
mov
call
pop
cmpsl
test
repnz
and
or
je
sub
push
dec
test
ljmp
test
out
loop
or
and
ret
pop
lahf
xor
imul
jge
mov
jnp
sub
cmp
cmp
in
cmc
inc
dec
rcll
in
loop
fs
ja
popl
aad
daa
pop
stos
xchg
inc
mov
push
inc
jne
inc
mov
xchg
xor
mov
enter
jb
xchg
dec
shlb
add
data16
fcoml
sub
pop
popf
mov
ja
pop
popf
sbb
pop
dec
loope
push
mov
xchg
sbb
mov
cmp
inc
and
and
mov
lea
movsb
fs
mov
cmc
repnz
mov
out
ret
mov
push
push
sbb
jp
lds
leave
or
jge
subl
lcall
cwtl
cmp
fsubrl
repz
pop
pushf
cmc
dec
or
cmp
xchg
jp
mov
xor
cmp
loopne
nop
and
pop
aam
dec
inc
dec
jecxz
add
push
mov
stc
inc
insl
enter
scas
movsl
inc
pop
mov
cmp
jo
icebp
sbb
jg
nop
sbb
out
test
sbbl
xor
sub
xchg
xchg
cmp
dec
xchg
rclb
xlat
hlt
loope
push
inc
cs
xlat
adc
call
mov
sbb
iret
and
cwtl
rclb
xchg
outsl
xchg
fldl
or
mov
fcmovne
lea
push
push
or
add
add
lcall
jne
xchg
add
mov
fmuls
xchg
outsl
insb
dec
pop
pop
cld
add
cmp
jg
jl
cmc
inc
xor
ljmp
test
adcb
jo
lret
jo
cltd
movsb
dec
jl
jne
sub
cltd
push
sbb
dec
dec
loop
and
mov
mov
cmpsb
dec
popf
mov
mov
aam
mov
popf
in
xor
sbb
or
sbb
sbb
and
std
adc
xor
inc
xor
dec
pop
fucomi
sti
dec
adcl
add
pop
inc
imul
fwait
cld
jp
mov
scas
ljmp
leave
sahf
dec
pop
clc
jmp
or
scas
addr16
adc
arpl
nop
adc
adc
fiaddl
xchg
and
jne
mov
cld
data16
mov
in
nop
mov
push
and
cmp
inc
dec
testl
jns
sti
jno
cmpb
fsubl
mov
xorl
dec
arpl
push
jg
dec
dec
cmpsb
mov
int3
flds
cltd
addr16
xor
mov
push
test
dec
int3
imulb
sbbl
xor
push
imul
insb
push
xchg
cmp
cmp
fidivrl
cwtl
in
repz
push
cmp
cmpsl
mov
es
sub
pop
jns
cs
xchg
dec
adc
xchg
jg
jge
popf
mov
stos
andb
in
add
xor
push
push
mov
mov
cltd
add
xchg
inc
rcrl
mov
mov
out
dec
mov
fsubrs
outsl
les
xchg
div
imul
bound
or
xchg
sahf
add
cmp
inc
sti
popa
xchg
lret
xor
xor
push
stos
cmp
jno
push
imul
or
clc
std
hlt
hlt
mov
adc
arpl
xchg
cmc
mov
push
add
negl
cmpsb
cmp
in
mov
lds
pop
in
mov
push
or
enter
movsb
iret
xchg
pop
jmp
sub
and
adc
inc
mov
mov
icebp
dec
dec
and
and
mov
dec
jae
and
out
and
lock
dec
outsl
push
mov
lods
mov
ljmp
arpl
decl
pop
mov
mov
inc
callw
mov
stc
mov
jnp
push
insb
push
sbb
fdivs
test
sahf
inc
vunpckhpd
pop
in
lock
mov
or
pop
or
repz
shlb
push
jne
andb
dec
mov
dec
scas
fists
xchg
arpl
fiadds
pop
jb
dec
pop
mov
dec
das
repz
jmp
jno
jl
inc
aaa
mov
sbb
adc
cmpsl
jg
dec
lods
ficoml
cmpsb
push
repz
mov
pushf
jo
xor
mov
je
shl
xchg
or
lea
adc
das
adc
fnstenv
repnz
jae
mov
ja
cmp
test
mov
data16
insb
adc
cmp
dec
in
adc
js
lcall
out
pusha
addr16
scas
stos
imul
or
mov
out
sub
inc
into
xor
dec
sbb
push
push
inc
sbb
mov
jle
lods
push
adc
jge
jb
lcall
jp
inc
jae
mov
adc
sub
rcr
jmp
cmp
sarb
lahf
ret
jo
xor
mov
shrl
pop
pop
hlt
jp
int
and
loop
mov
dec
in
mov
add
in
mov
clc
xor
stos
mov
mov
imul
or
popa
cmp
daa
cmp
jnp
movsl
sbb
fcomps
mov
aas
and
clc
data16
enter
jno
cli
addb
jmp
fisubl
mov
dec
inc
mov
cmp
das
jae
ret
mov
or
mov
rcrb
popa
push
scas
cmp
scas
ss
dec
fstpt
pop
adc
lcall
imulb
add
and
mov
dec
push
pop
cmpsl
leave
jp
je
push
popf
dec
jmp
andl
ja
call
inc
push
setbe
pop
xor
fiaddl
jl
dec
adc
xor
push
loope
push
insl
insb
dec
loopne
clc
add
lods
sub
mov
movsl
stc
sub
push
pusha
cmp
test
ficoml
dec
outsb
push
jge
pusha
and
and
mov
jmp
cmpl
pop
xlat
leave
or
adc
and
inc
push
dec
insl
movsl
dec
insl
pop
pop
pop
inc
gs
movsl
cwtl
jecxz
push
xor
push
inc
push
mov
mov
pop
cmp
out
xchg
cmp
lahf
dec
and
mov
push
aam
emms
jp
into
mov
rorl
pop
cwtl
push
addr16
sub
push
gs
xor
dec
fidivs
or
sub
repnz
mov
jle
push
or
mov
dec
rorl
adc
mov
pushf
cmpsl
in
out
bound
rcrl
xlat
xlat
xchg
nop
xorb
fucomi
dec
mov
dec
or
rorb
rcrl
bound
add
lret
mov
int3
pop
orb
clc
rcr
fsts
fmul
sbb
or
inc
popa
popa
cmp
sbb
gs
mov
ficoms
mov
sub
dec
test
add
out
cmp
mov
mov
xchg
xchg
cmp
add
xchg
cltd
push
repnz
xchg
cld
sahf
push
addr16
popf
rcrb
test
daa
fwait
dec
mulb
mov
scas
sbb
movsl
cmp
jmp
xor
xchg
jecxz
xor
mov
mov
jne
pop
cmp
and
pop
xchg
inc
xchg
inc
inc
adc
mov
mov
int
sub
adc
push
mov
inc
scas
insb
pop
ror
pop
cwtl
shl
sbb
push
and
xchg
sub
mov
dec
je
dec
jecxz
jecxz
daa
aam
loopne
add
aas
fcom
dec
fistl
cmp
and
nop
bound
sub
subl
addr16
cmp
push
ret
lods
push
push
adc
nop
mov
rcll
lods
mov
dec
jge
xchg
mov
je
cwtl
mov
outsl
les
lds
pop
stos
jno
rclb
pop
insl
mov
sbb
das
adc
xchg
mov
push
mov
sbb
xlat
mov
fwait
cltd
lahf
jge
fcmovnu
mov
mov
cmp
int3
push
mov
pop
mov
inc
arpl
pop
lock
int3
adc
jge
dec
xchg
push
into
cmp
or
xlat
cmp
add
mov
pop
lcall
xor
inc
rorl
imul
mov
adc
mov
and
mull
jnp
mov
faddl
push
pop
cmp
cmp
mov
lds
scas
pop
or
fnsave
icebp
push
in
test
sbb
ret
inc
xor
and
mov
xor
mov
and
lret
mov
sub
jge
fadds
hlt
sub
outsl
mov
lret
das
pop
xchg
ja
mov
insl
mov
cmp
shl
sbb
push
inc
fisttpll
mov
fs
pop
cmp
or
jge
lret
jge
adc
lret
inc
imul
jle
mov
test
femms
and
mov
fwait
sbb
inc
roll
sub
in
jbe
int3
push
leave
imulb
sbb
fistl
dec
cwtl
pop
mov
push
jg
popf
jl
xchg
mov
iret
mull
sub
into
mov
jp
div
lret
inc
jb
ds
sub
movsl
jge
aaa
pop
mov
or
push
xor
aad
movsb
mov
pop
fimuls
test
jge
insb
outsl
daa
outsb
repnz
test
cld
xchg
mov
rcr
popl
mov
push
sbb
pop
dec
lds
xor
out
dec
adc
hlt
test
mov
push
addr16
mov
dec
add
mov
test
in
xchg
and
fucomp
adc
push
bound
test
adc
loop,pt
jae
inc
pop
fistl
adc
ret
test
mov
jl
ljmp
sub
sbbb
xor
pushf
out
into
pushw
mov
inc
lret
dec
psrlq
push
orl
mov
call
sub
xlat
popf
push
aad
imull
mov
test
pop
jp
hlt
mov
out
jecxz
mov
in
cmp
add
add
movsb
or
adc
and
repz
mov
cmp
jp
repz
mov
lret
push
add
cmp
test
gs
je
jo
lods
jmp
cmpsl
and
into
pop
outsl
mov
mov
fcomp
nop
mov
dec
push
out
shll
test
idiv
sbb
jno
or
xor
movsl
cmp
fistps
notb
std
jp
je
sbb
fdivl
pop
inc
ror
imul
scas
jle
mov
inc
push
and
in
mov
push
lea
inc
cmp
sub
mov
mov
daa
inc
cmp
pushf
lods
das
push
pop
in
xchg
mov
mov
in
sub
dec
xchg
test
cwtl
jp
and
inc
xchg
sub
roll
lahf
lea
push
filds
sub
adc
idivl
adc
pop
and
sbb
pop
test
into
rcrl
data16
sbb
addr16
push
rol
cmp
pop
mov
jp
inc
stos
popa
stos
lea
pushl
or
dec
lods
add
xchg
ljmp
jmp
mov
int
popa
mov
imul
mov
xchg
lahf
push
repz
in
cmc
jae
mov
adc
repnz
inc
jmp
mov
dec
add
push
jns
leave
mov
mov
mov
popa
imul
mov
or
mov
xchg
std
lahf
xchg
pop
subb
cwtl
mov
imul
mov
mov
mov
lcall
stos
pop
cmpsb
xor
jge
mov
pop
bound
pusha
or
xor
pusha
rorl
repnz
adcb
jnp
mov
out
inc
mov
imul
jl
cmp
pop
sub
xchg
xchg
mov
int
std
or
ficoms
arpl
inc
jg
inc
test
adc
xor
fcomps
repz
sub
add
mov
mov
pop
push
sarl
push
jmp
dec
shl
sarb
push
in
shrb
loop
pop
xorb
movsb
pop
jo
push
into
pop
popa
outsb
cmp
rcrl
mov
in
jb
insl
out
lahf
dec
push
mov
stos
cmp
push
repz
xchg
jge
adc
pop
mov
idivb
scas
xor
les
aaa
jnp
cmp
test
orl
ficoml
inc
ficoml
in
je
pop
mov
out
sbb
jg
mov
mov
dec
jbe
cmp
js
mov
popf
jbe
lods
xchg
pusha
scas
scas
jg
pop
mov
sbb
out
lock
js
mov
push
imul
test
in
push
xor
jbe
icebp
popa
jbe
push
adc
clc
xor
pop
push
sub
lret
frstor
ret
mov
xchg
out
and
jbe
pop
xor
cwtl
lock
shr
in
test
cmp
sbbb
and
sub
lret
add
icebp
fidivs
mov
clc
or
sahf
sbb
jg
and
jno
jge
lea
lock
sub
xor
outsb
cltd
mov
in
inc
cltd
cmp
daa
xchg
inc
fsubs
xchg
xor
cmp
xchg
jnp
sbb
jnp
ret
xchg
popa
adc
push
add
mov
add
fstps
pop
mov
mov
xchg
cmp
into
fisubl
mov
adc
sub
into
inc
outsb
fs
push
insb
xchg
cmp
inc
out
shrb
dec
pop
and
rcr
jp
xor
or
or
mov
test
imul
iret
or
popf
hlt
lea
pop
sti
xchg
je
xlat
lcall
ja
xor
mov
cmpsb
pop
xor
imul
fisttps
push
pop
pushf
loop
and
nop
inc
mov
fmull
mov
js
pop
sbb
jb
out
xor
xchg
inc
mov
push
nop
and
inc
jns
je
adc
insl
push
jno
lods
adc
in
mov
inc
pushf
mov
int
cmp
sub
or
fsubrl
mov
mov
loopne
sub
inc
add
jno
fiaddl
adc
mov
mov
gs
insl
xor
rcll
and
stc
scas
or
or
xchg
loop
in
int3
push
mov
loopne
inc
push
inc
fsubr
aaa
jp
das
mov
lret
inc
mov
insb
out
mov
mov
cmp
fldt
ss
push
ret
cs
sub
leave
outsl
mov
daa
adc
jnp
push
pop
sub
aam
mov
inc
dec
adc
popa
mov
and
push
aas
pop
outsl
or
pop
mov
push
addr16
mov
rcrl
rolb
sbb
idivb
js
out
mov
xchg
mov
mov
loop
mov
rorb
in
mov
xchg
ljmp
jo
lock
loope
mov
and
xchg
popf
idivb
arpl
movsb
push
or
rcrb
and
sub
rcrl
in
cmp
std
shlb
sub
inc
or
arpl
imulb
enter
xchg
xor
jnp
adc
or
adcb
mov
shlb
mov
mov
clc
les
aas
int3
vpminsb
pop
mov
jns
push
call
pop
adc
test
aam
dec
cmc
push
cmp
pop
mov
adc
aam
ret
movsl
sbb
in
sbb
pop
sub
xchg
mov
int
int
std
out
rol
add
cs
mov
mov
fnstcw
repnz
lds
addb
xlat
imul
pop
pop
leave
hlt
mov
testl
and
lret
test
andl
dec
in
aas
out
dec
scas
adc
dec
mov
leave
cmp
int
lds
call
xorl
fs
dec
and
sbb
rclb
pop
and
dec
lods
fisubrl
inc
ss
lock
pop
jl
jmp
mov
jmp
push
cmpsl
repz
xchg
mov
adc
push
fstps
test
std
outsl
ret
adc
ds
arpl
scas
push
in
dec
sub
push
sbb
xchg
and
cltd
sub
loop
rcl
std
ja
packsswb
lods
fisubl
pop
push
pop
pop
lds
pop
pop
jbe
inc
or
scas
mov
fildll
je
adc
jge
pop
inc
jno
sbbb
icebp
cmp
push
add
sub
mov
inc
mov
test
and
and
mov
push
dec
sahf
fdivs
sbb
les
push
adc
imul
push
adc
dec
mov
in
sti
lods
imul
mov
imul
mov
sub
adc
testl
mov
ret
lahf
dec
pop
mov
inc
imul
mov
lods
cmp
mov
push
mov
ja
lods
ret
dec
and
or
shrb
sbb
leave
loopne
movsb
jb
mov
mov
cmp
icebp
out
test
je
push
insb
loopne
fistps
into
ds
mov
push
xor
aam
cltd
outsb
or
mov
mov
xor
orl
fnsave
pusha
cmp
dec
lds
out
shrb
push
mov
pop
rcrl
sahf
lds
nop
or
icebp
insb
xchg
loopne
inc
stos
dec
icebp
mov
out
xlat
pop
cmp
mov
lods
ss
mov
mov
inc
adc
push
push
fisubrl
aaa
std
and
bound
sbb
mov
daa
mov
fdivl
push
dec
pop
jns
cwtl
mov
mov
jg
sub
in
and
sti
inc
mov
inc
sub
ret
jmp
jmp
jmp
cld
sbb
fsubrs
adc
sbb
adcl
jge
fistps
sahf
test
mov
fldcw
mov
mov
xchg
inc
loopne
loopne
fisttpl
out
arpl
adc
dec
mov
ja
lods
bound
add
scas
xchg
xchg
push
mov
sbb
and
shll
xor
pop
mov
mov
insb
jae
or
push
push
fmull
out
mov
addr16
fldl
les
movl
test
add
add
and
inc
cld
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
je
mov
xor
mov
sub
add
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
mov
jmp
test
lock
orb
enter
test
xor
aad
sbb
addl
scas
and
xor
jmp
in
or
test
icebp
and
mov
cmpsb
mov
mov
iret
aad
in
sbb
sub
jae
shrb
mov
or
mov
push
flds
add
mov
jecxz
cltd
or
cmp
push
cld
push
lock
push
adc
xor
and
gs
loop
jge
xor
stos
hlt
imul
fwait
rclb
out
mov
xor
call
xchg
je
xor
push
mov
inc
ss
xlat
sub
add
cltd
sahf
sbb
popf
push
rolb
bound
fcomps
mov
xchg
icebp
insb
inc
rcrb
fstp
xchg
das
or
fst
inc
repz
xor
int
dec
push
into
hlt
loop
xchg
cmp
mov
popf
movsl
push
shll
cld
loope
mov
mov
inc
jecxz
int3
bound
enter
mov
outsb
xor
xchg
xchg
and
out
mov
push
dec
imul
jl
stos
add
xchg
jb
dec
hlt
jno
fdivr
imul
loopne
pop
rcll
pop
mov
loope
sub
or
mov
mov
cli
jmp
pop
rorl
popf
push
loop
jmp
adc
pop
pushf
cmp
imul
ret
popl
scas
push
jnp
dec
mov
mov
push
mov
pop
mov
cld
das
mov
jae
xchg
fimuls
push
lcall
in
adc
jl
adc
int3
mov
fstpt
inc
inc
jg
inc
xor
dec
cmp
push
je
aad
pop
pop
inc
cmp
push
popa
scas
xchg
pop
xchg
orl
push
shlb
pop
push
mov
push
adc
cmc
mov
or
mov
sbb
daa
iret
mov
mov
imul
fs
push
adc
popl
cmpl
dec
add
add
dec
push
ds
aad
orl
mov
inc
lods
daa
fisubrl
sbb
hlt
jne
sbb
lock
lock
jle
push
popf
and
or
outsl
add
dec
ret
leave
rorl
insl
xor
cli
jb
xchg
ds
rorl
mov
xor
rcr
pop
dec
movsl
inc
adc
inc
inc
jb
cli
or
add
mov
lock
fstpt
pop
mov
add
or
or
int
lret
cmp
repz
sti
insb
popf
add
test
cli
aaa
lea
mov
add
sub
push
out
sarb
pop
cs
fwait
and
movsl
push
mov
xor
pop
sub
sub
loope
mov
xchg
and
push
int3
xor
cmpsb
dec
and
mov
movsl
cmp
mov
mov
lret
les
jp
ret
cmpsb
mov
ficoms
aad
adc
cli
dec
cltd
or
adc
outsl
repnz
pop
shrl
push
lret
xchg
jae
fst
rolb
in
add
enter
and
pusha
xor
lods
lret
fiaddl
push
nop
icebp
jl
roll
add
add
xchg
int
adc
dec
imul
mov
pop
imul
jp
fwait
mov
stos
nop
fldt
and
xlat
pop
setno
outsl
roll
mov
int
repz
int3
sbb
pop
mov
pop
loop
adc
or
xchg
or
out
in
and
inc
call
gs
lret
xchg
adc
xchg
into
hlt
popa
xchg
xrelease
rcrb
out
pop
push
mov
cmp
adc
insl
xchg
test
xor
movsb
popl
adc
or
mov
or
sbb
or
into
inc
daa
into
xchg
mov
dec
lret
sub
mov
enter
movsl
loope
lcall
dec
int
xchg
inc
lahf
inc
and
mov
sbb
ret
mov
add
push
bnd
xchg
jno
test
sub
mov
fsubrl
stos
adc
or
lock
ljmp
jbe
fmulp
sbb
in
jne
sti
mov
stc
sub
xorl
cmp
and
enter
jmp
and
mov
sub
adc
add
lds
mov
xor
or
pop
lea
fidivl
ja
out
add
or
sahf
jp
jg
das
jo
cmp
stos
inc
lods
add
into
fwait
shll
insl
xchg
push
or
jne
cli
pop
inc
mov
fstpl
pop
add
mov
sbb
lds
aam
adcb
lods
sti
push
aad
insl
movsl
jmp
inc
sti
add
jo
and
sub
cmp
pushf
jne
jl
sub
mov
fsubrl
sub
adc
push
adc
loope
adc
jnp
dec
seto
ds
divb
dec
push
pop
pop
inc
enter
scas
jne
mov
sbb
pop
hlt
mov
push
pop
stc
inc
mov
sbb
xor
ficomps
adc
sbb
push
shll
xor
cs
sub
in
add
loop
xor
xchg
ret
dec
in
pop
inc
pushf
in
js
loopne
inc
mov
fsubrl
fidivrs
mov
fucomi
hlt
jae
jecxz
mov
je
hlt
out
jbe
in
ljmp
cmc
push
outsb
aaa
bound
mov
or
aad
dec
mov
sbb
push
enter
inc
stos
push
inc
outsb
cmp
out
pop
cltd
ret
aad
outsl
or
inc
mov
jnp
pop
inc
jmp
adc
xchg
mov
pop
adc
stc
add
ret
xchg
mov
outsb
mull
sbb
aad
pop
mov
gs
ss
mov
cmp
sbb
hlt
ret
xor
sub
loope
rorl
les
outsb
packssdw
lea
scas
fldcw
add
loop
outsl
sbb
sbb
lock
imul
fwait
iret
cmp
fisubs
sub
push
jp
push
xchg
lea
xchg
outsl
out
fdivrl
adc
bound
and
rcll
xor
pushf
mov
gs
outsl
add
mov
and
add
adc
je
add
fdivs
xor
pusha
sub
push
jbe
jae
lret
sub
jo
scas
push
fldt
cmc
sti
and
insb
xchg
mov
fistpl
ret
les
sbb
cld
pop
pop
insl
or
or
aas
loopne
hlt
jb
pop
pop
or
data16
mov
testb
cmp
lods
pop
lock
jl
outsl
push
dec
adc
cmpsl
pop
mov
repnz
cmp
or
and
sbb
sbb
out
mov
and
lret
mov
pop
xor
xchg
clc
pushf
sarb
mov
and
cmpsb
imul
jno
inc
mov
cmp
dec
sarb
mov
sub
rcrb
xchg
iret
negb
stos
cltd
dec
test
cmpl
dec
fstl
cmc
and
ret
jnp
inc
sub
fistpl
das
pop
sub
xor
popa
dec
pop
icebp
add
aam
xor
aaa
scas
rcrl
gs
and
xor
les
sub
sub
mov
push
outsb
stos
loop
mov
inc
enter
loope
sbb
push
aam
negb
subl
push
and
push
sbb
cs
je
call
addl
leave
pop
in
xor
and
test
cmpsl
jmp
xchg
lahf
call
sub
and
push
mov
lock
or
in
enter
xor
add
pop
adc
bound
das
insb
mul
repnz
adc
inc
loopne
jle
mov
fbstp
xorl
adc
test
xor
sbb
add
daa
push
outsb
sahf
sub
lret
into
push
push
es
jp
xor
test
or
and
push
cmp
inc
inc
leave
pop
and
ficomps
pusha
fs
enter
testl
jno
lods
aaa
clc
loop
out
divl
mov
loope
in
mov
mov
ss
in
mov
xchg
addl
jbe
sub
push
mov
or
pop
mov
mov
pop
sub
lret
mov
sub
xchg
inc
fadd
xor
popa
jl
and
scas
mov
dec
cltd
jl
or
mov
xor
lret
out
dec
movsl
add
das
mov
movsl
cwtl
mov
mov
in
fimuls
or
xchg
inc
dec
and
enter
test
xor
sti
fistpl
icebp
outsl
and
add
imul
not
push
inc
dec
push
mov
hlt
pop
sub
inc
jle
stc
clc
clc
sbb
aam
out
fildl
or
pop
xchg
sbb
sbb
push
js
fisubrl
popf
jne
fldcw
scas
push
lret
jg
divb
pushf
frstor
insb
popf
dec
mov
out
icebp
int
inc
pop
lcall
lret
sbb
push
test
data16
adc
xor
popf
xchg
or
js
aad
xchg
or
cmp
loope
fistl
dec
repz
mov
sub
in
mov
xor
xor
sbb
rclb
stc
cmp
and
sahf
xor
sbbb
cld
cmp
in
cltd
add
repnz
je
rol
xchg
ds
sub
shlb
jg
sarl
pop
es
lret
adc
push
jmp
addr16
sbb
popf
test
cmpsb
pop
mov
repz
or
push
cld
jge
inc
push
and
mov
ds
cmpsb
push
ljmp
add
orb
nop
gs
jecxz
imul
jns
pushf
int
pop
pop
pop
and
cmc
fldt
push
std
ja
in
lods
das
loop
pop
or
mov
jb
data16
adc
nop
xchg
rcr
sub
aam
pop
push
das
xchg
and
jge
test
outsl
inc
sub
test
fcoms
dec
ljmp
aam
inc
push
mov
std
mov
fistpl
cmpl
aaa
out
pop
aam
dec
cmpsl
cmpsb
stos
lcall
push
xchg
pop
pop
push
subl
lret
addl
adc
cli
movsb
mov
inc
pushf
in
add
cmp
rcrl
xorb
push
test
push
loop
lods
xchg
in
xchg
inc
cli
jns
adc
arpl
or
pusha
dec
push
pop
fldenv
sub
fstpt
addr16
dec
cmc
add
push
out
sahf
mov
xchg
fisubs
addr16
jae
jl
lea
add
in
ja
js
mov
pop
adc
mov
push
cld
repnz
leave
idivl
outsl
bound
mov
les
xor
pushl
push
push
or
test
cmpsb
ja
fidivl
push
cmpsb
div
pushf
lock
stc
shll
mov
aam
inc
mov
clc
add
jp
mov
daa
cmp
sbb
lahf
inc
push
test
jns
pop
pushf
roll
dec
cwtl
pushf
pop
ljmp
mov
fcompp
xor
movsl
sbb
jmp
loope
lret
in
hlt
adc
adc
push
mov
xor
outsl
mov
int
sahf
mov
mov
cmpsl
cwtl
pop
sub
pop
dec
bound
add
rolb
scas
loop
jns
mov
xchg
mov
enter
xchg
fbstp
pop
sbb
lods
adc
dec
pop
sbb
rcrl
mov
cmp
jno
cmp
cmp
push
fwait
or
xor
or
in
into
idivl
adc
fwait
rol
int
out
mov
addr16
lcall
fsubl
sbb
jle
gs
das
cwtl
jae
adc
mov
loope
jecxz
out
or
stc
xor
push
lods
ret
daa
xor
outsb
cmp
jb
sbb
jle
int
rorl
add
mov
mov
adcb
xchg
mov
loopne
fildll
mov
pushf
es
lods
sbb
stc
jae
daa
adc
inc
pop
or
pop
mov
loope
mov
inc
pop
cmp
xchg
xchg
xchg
mov
test
sbb
aas
or
std
aam
out
cmp
daa
jo
or
sbb
daa
imul
lret
test
xchg
sti
mov
shl
or
sub
xchg
sbb
push
ds
cmp
cmp
add
icebp
in
xchg
jecxz
lcall
clc
adc
pop
inc
psllq
ja
mov
dec
hlt
loopne
js
stos
lea
mov
or
fisubrl
pushf
push
test
int
das
gs
and
lds
xchg
or
mov
mov
or
sub
sub
mov
mov
mov
inc
inc
mov
push
or
cwtl
lahf
mov
sahf
sbb
sbb
pop
shlb
mov
ja
loop
mov
or
sub
insb
call
sub
cmp
loop
mov
mov
std
stc
cmp
scas
or
dec
cmp
idiv
inc
pop
sub
pop
jl
mov
pop
adc
loope
xor
push
divl
pop
sbb
pop
sahf
xor
and
mov
cmp
gs
push
cli
std
pop
mov
inc
icebp
push
mov
mov
jg
push
pushf
push
jae
ljmp
testl
sbb
popf
cmp
gs
pop
inc
cwtl
imulb
jno
cmp
sarb
lea
push
les
sbb
jle
adc
inc
flds
daa
or
scas
pop
mov
jns
fisttpl
loop
int3
rorl
int3
rclb
mov
int
repz
and
xlat
cmp
loope
icebp
and
and
movsl
push
pop
outsl
or
es
xchg
lds
cmp
aad
pop
hlt
testl
sahf
sahf
test
orb
inc
mov
and
xorb
sbbb
mov
pop
clc
enter
jae
std
stos
or
push
hlt
dec
int
ljmp
sbb
inc
in
lock
stos
test
push
jmp
xlat
jae
mov
add
mov
movsl
xlat
jae
bound
pcmpgtd
pop
sarb
dec
ljmp
pop
push
js
add
icebp
cwtl
or
mov
std
cld
mov
movsb
dec
mov
enter
test
es
std
jb
dec
pop
notb
mov
xchg
sub
and
pop
mov
jg
xlat
mov
fcompl
sbb
nop
dec
scas
mov
inc
mov
xchg
std
punpckhbw
add
pop
lods
repz
mov
aas
mov
sub
pop
aam
pop
cs
lea
sbb
stc
cmp
subb
push
mov
pop
pop
mov
jnp
fwait
out
loopne
pop
push
pop
stos
js
movsb
in
inc
lahf
lea
mov
add
push
mov
dec
push
test
imul
push
leave
xchg
pop
lock
lods
xchg
outsb
jg
shlb
sub
lods
fimull
jp
out
xchg
xor
and
pop
or
push
push
stc
imul
sub
loope
icebp
mov
fprem1
jecxz
mov
insb
xchg
jecxz
cmpsb
pop
pop
popa
clc
lock
incl
or
movsl
out
push
lods
mov
aad
dec
out
mov
dec
xchg
xchg
imul
ja
cmp
out
add
mov
mov
mov
enter
fdiv
test
mov
cmpsb
inc
loopne
push
pop
out
stos
lock
adc
orl
jo
push
lock
filds
aad
outsl
inc
fistpll
imul
es
push
push
push
js
arpl
pop
sbbb
repnz
int
xchg
test
push
mov
or
push
jmp
dec
push
sub
sub
fiadds
or
cmp
jmp
and
mov
dec
add
int3
cmp
stos
lods
and
jge
pushf
jae
jne
mov
jb
data16
sbb
fiaddl
pushf
in
sahf
push
pop
sub
mov
js
mov
fbstp
mov
jae
mov
fstl
lret
scas
or
fidivs
xchg
neg
flds
push
adc
or
push
cmc
out
cwtl
fstps
popa
mov
add
mov
lods
and
roll
repnz
adcb
adc
cmp
cmp
jae
mov
lds
clc
jne
out
sub
jl
ficompl
cmp
int
xchg
movsb
aad
flds
popf
push
jae
mov
jbe
xchg
pusha
out
xchg
inc
lcall
and
mov
fistps
into
push
pop
inc
jne
xchg
paddb
cmp
loopne
push
jg
jmp
loopne
js
es
and
pop
push
sub
mov
jle
cmp
in
int3
aaa
adc
pop
inc
lea
jb
cld
arpl
std
icebp
dec
mov
pop
popf
add
cmp
jb
pop
inc
dec
cmp
loopne
push
enter
stc
and
sbb
and
adc
mov
jns
shl
dec
jns
shl
adc
ret
xchg
rcll
insl
or
adc
mov
push
mov
mov
and
popf
ss
add
std
shrl
cmp
mov
xor
mov
mov
sbb
jb
int
mov
scas
movsl
push
jecxz
ljmp
add
aam
gs
xor
lahf
fyl2xp1
sbb
das
mov
jbe
and
xor
sbb
jp
cmp
lret
mov
sbb
dec
mov
in
out
shrl
cltd
mov
dec
push
mov
stos
inc
stc
inc
mov
in
nop
pop
inc
dec
jbe
addr16
mov
dec
daa
repz
fs
ficoms
mov
cmp
fidivs
stos
jno
cwtl
out
shrb
lret
sub
repnz
mov
popf
mov
movsb
sbb
push
es
in
mov
js
repnz
adc
jae
aad
push
jae
pop
std
sub
cmpsl
xor
push
movsb
aas
cmp
xlat
pop
sbb
sbb
insl
inc
outsl
outsb
cwtl
enter
in
test
jecxz
dec
inc
scas
insl
xor
jno
push
sub
pop
lods
sbb
ret
and
cmp
push
xor
cmp
mov
lret
pop
and
pop
in
arpl
daa
aam
push
push
cmp
lods
lock
daa
or
aaa
sbb
aaa
mov
push
shrl
lods
adc
adc
add
cmp
dec
add
ret
mov
xchg
inc
aad
addl
add
and
or
pop
jge
pusha
push
ljmp
divb
push
xlat
add
movl
sub
push
dec
adc
sarl
lcall
xor
lret
lds
aam
or
mov
setg
mov
adc
dec
mov
push
fdivp
mov
pop
add
jno
aaa
fwait
mov
mov
nop
jno
jp
test
xchg
shll
pop
mov
cltd
push
xchg
ds
enter
mov
pop
stc
xchg
dec
jmp
jle,pt
or
cmpsb
jg
inc
nop
gs
mov
ss
ficoml
imul
xlat
cmovo
jge
pop
out
dec
mov
pop
dec
stos
add
cmc
push
sub
xor
xor
and
scas
mov
mov
mov
repnz
xchg
add
in
mov
sarb
push
push
push
cmp
fwait
cli
xor
mov
and
cmp
std
pop
ds
dec
adc
cmp
aas
or
mov
mov
dec
pop
cmpsl
or
je
mov
rorl
dec
pop
in
sub
clc
lcall
add
pop
lret
pop
adc
mov
add
push
sbb
xchg
sbb
lods
out
push
nop
rcl
xchg
lods
pushf
cmp
xor
mov
daa
fs
out
leave
int
addr16
pop
sub
cld
nop
out
nopl
jnp
ljmp
mov
jg
push
mov
sbb
mov
pop
dec
xchg
adcb
jae
mov
mov
sahf
xor
leave
jle
fidivrl
cmp
ja
cmpsb
hlt
xchg
shl
loopne
sub
stos
inc
sub
shrb
cmp
in
xchg
sbb
neg
in
push
sub
lds
push
push
dec
mov
dec
jle
popf
pushf
adc
pop
push
mov
lret
in
cmc
inc
sbb
fnsave
xor
xor
jb
jge
scas
push
and
or
jae
lock
xchg
sbb
mov
xor
adc
iret
mov
dec
repnz
push
sub
jg
adc
mov
mov
and
shrl
jne
pop
mov
add
loope
in
pop
or
rcrl
mov
cld
mov
and
fsubp
bnd
mov
or
negl
jb
and
xchg
sub
jge
call
hlt
xchg
jae
xor
lret
cmp
add
mov
insb
daa
xchg
leave
push
dec
mov
stos
xor
daa
dec
dec
shl
addb
mov
push
mov
and
fldcw
daa
out
mov
mov
sub
push
xchg
or
jno
inc
pop
loopne
pop
xor
lods
and
fldl
add
adc
mov
testb
xchg
inc
mov
inc
imul
je
gs
push
lds
mov
adc
sti
aaa
aas
sub
fcomps
aaa
push
lea
aad
insb
out
inc
add
add
dec
test
jmp
mov
sub
jge
mov
mov
or
loope
xlat
dec
xchg
icebp
daa
pop
or
cli
jmp
xor
adc
movsl
repnz
test
jge
or
sti
mov
mov
call
ljmp
push
mov
addl
rcr
jge
mov
cmpsb
push
in
rcr
mov
mov
loopne
xchg
mov
mov
aas
ja
outsb
aas
cmp
fbstp
mov
xor
xchg
jecxz
pop
mov
ja
sahf
lds
sbb
push
outsl
je
cs
jge
jno
cmp
lods
jecxz
add
lds
leave
test
cmp
mov
push
into
out
or
imulb
sub
in
or
outsl
outsb
in
rclb
imul
sub
jns
push
int
jmp
andl
addl
insl
scas
pop
loope
ds
fbstp
pop
ret
adc
insl
mov
cld
pusha
ds
xchg
inc
adc
pop
inc
mov
pop
jns
or
in
xor
dec
mov
loope
or
jae
fcoms
sbb
sbb
aam
xchg
add
lock
cmp
mov
jnp
ss
fcmove
adc
addr16
cmp
add
inc
pop
xchg
stos
icebp
inc
pop
sub
out
and
xor
dec
imul
jmp
xor
jmp
cmp
ficompl
inc
rolb
cld
pop
mov
xchg
and
rolb
imul
mov
adc
pusha
loope
fcomps
dec
fldenv
lods
ret
leave
and
cmp
stos
outsb
mov
std
and
inc
mov
mov
aad
xchg
cmp
orl
imul
sub
push
jmp
mov
aaa
push
mov
ret
mov
js
shrl
pop
inc
and
dec
addl
sbb
pop
inc
mov
jmp
ss
xchg
test
adc
pusha
xchg
mov
fcoms
inc
cmp
inc
push
or
xor
pushf
mov
inc
adc
sbb
pushf
cmp
mov
outsb
je
pop
add
or
outsl
stos
hlt
pop
iret
dec
xchg
rolb
ret
and
adc
adc
jne
push
cmp
out
testb
clc
lret
fwait
daa
sahf
nop
jbe
jae
iret
push
repz
xchg
sar
popf
jle
shr
and
jbe
mov
aaa
insl
std
incl
cmp
int
lret
cld
jp
in
outsl
lcall
xchg
movsl
lds
call
cs
push
mov
nop
xor
int
popf
cmc
dec
dec
sahf
sbb
test
sti
das
cli
push
adc
mov
jmp
xchg
jbe
or
insl
and
ds
cmp
lods
outsb
and
mov
stos
mov
jns
sub
mov
mov
push
subl
push
ret
repz
add
and
icebp
fisubrs
push
cmpsb
loope
mov
dec
divl
or
mov
or
fisubrl
push
mov
pusha
sahf
ds
rcll
and
js
sub
or
ret
js
xchg
addr16
stc
dec
mov
push
fisttps
mov
nop
push
clc
pushf
in
jle
xor
test
icebp
adc
jnp
adc
mov
ret
lahf
add
inc
mov
in
xor
test
clc
les
pop
pop
pusha
xor
inc
pop
jne
pop
test
lret
pop
in
test
loope
dec
mov
push
popa
insb
add
sub
mov
mov
sub
lahf
and
ljmp
stc
lds
decb
pop
jp
subl
jo
stc
add
and
iret
iret
call
arpl
sbb
ja
push
mov
das
xor
adc
scas
adc
popf
dec
ret
test
lret
fstps
or
movsb
jb
sarl
cwtl
sub
icebp
out
pop
add
mov
cmpsb
dec
xor
inc
div
or
lds
insb
push
dec
hlt
and
and
insb
cmp
es
decl
repnz
insl
lods
ja
insl
cmpsb
jnp
sbb
ss
pop
cmp
mov
lds
loope
xor
xor
pusha
pop
dec
shll
xchg
in
lods
dec
cmp
cmp
mov
cmp
mov
aam
lock
mov
orb
ljmp
xchg
mov
or
test
add
and
mov
frstor
jb
inc
retw
aas
cmpsl
lcall
scas
xchg
adc
call
mov
or
mov
rolb
dec
loopne
out
jle
int
jg
xchg
inc
push
repnz
or
cmp
ret
push
sub
fidivrs
jg
aad
out
es
jnp
pop
inc
or
cwtl
dec
dec
data16
cmp
mov
or
adc
call
shlb
jp
cmp
enter
ja
push
mov
jl
mov
cmpsl
fnsave
inc
xor
inc
lret
fisubs
or
enter
enter
movsb
les
imul
sbb
xor
adc
idiv
movsb
inc
jmp
mov
mov
repz
mov
test
mov
or
mov
fnstsw
cli
ss
inc
dec
aam
xor
mov
mov
movsl
packuswb
out
sub
nop
pop
or
sub
dec
or
xorb
xchg
iret
pop
insb
pop
js
xor
imull
mov
pop
addr16
mov
pop
aas
stos
or
rolb
loopne
sbb
leave
insl
negb
cmp
dec
mov
sbb
arpl
das
aas
lods
mov
clc
aaa
push
ret
ljmp
outsl
xor
sbb
hlt
shll
test
lods
cmp
hlt
pop
cmp
mov
push
mov
hlt
pop
aaa
hlt
addr16
dec
push
test
imul
ret
fsubrp
jecxz
cmp
jno
inc
jo
or
jp
inc
and
mov
add
orb
mov
inc
arpl
jnp
jp,pn
inc
add
rol
jp
or
mov
inc
cmp
dec
fldenv
mov
push
sbb
stc
cmpsb
cwtl
push
sub
and
adc
adc
or
test
shll
cmp
mov
xor
push
xchg
shrl
add
jg
mov
fstl
push
cmp
inc
mov
mov
outsl
add
pmaxsw
xchg
xchg
xchg
iret
pop
into
shll
xor
fs
daa
popf
cld
dec
dec
in
ja
lods
cwtl
iret
daa
pop
pop
mov
sbb
jmp
loope
mov
jecxz
andl
sbb
les
sub
into
xchg
fs
repnz
out
jl
fcompl
jae
sub
xchg
mov
and
iret
fnstcw
push
xchg
or
and
mov
inc
push
xor
fidivrs
push
pop
push
jae
leave
test
dec
push
fcoml
lret
orb
sbb
subb
push
test
rcl
mov
fldl
mov
jnp
out
adc
test
imul
jl
out
inc
mov
or
pop
adc
or
xchg
inc
out
aam
call
pushf
jge
inc
sbb
test
mov
insl
push
mov
lcall
out
jmp
push
jae
jl
addr16
xor
mov
sub
sub
dec
xor
mov
jp
roll
mov
sub
jno
hlt
cld
aam
ret
inc
mov
inc
mov
shr
lcall
bound
fucomp
add
out
cmc
scas
and
mov
sahf
inc
aas
dec
mov
jno
mov
dec
jp
xor
push
jbe
aaa
jae
cli
inc
gs
and
or
adc
mov
aas
ss
mov
adc
or
cmc
mov
fld
cmp
xchg
in
les
xor
sub
shl
loope
test
adc
xor
inc
or
xchg
stos
push
sti
pop
cs
adc
in
mov
repnz
aas
lret
pop
inc
in
dec
add
or
gs
inc
pop
mov
fcmovbe
pop
pop
jmp
mov
sahf
sbb
jecxz
imul
cli
leave
dec
jne
gs
aaa
testl
cs
pop
jl
mov
xlat
fsubl
push
push
inc
mov
and
lods
mov
push
mov
push
gs
push
jae
and
dec
and
rcrb
sub
push
stc
dec
es
and
cld
cmp
not
gs
push
aas
cltd
mov
cli
bound
fldl
ss
jmp
add
out
out
mov
in
pop
push
jns
or
ja
xorb
insb
mov
inc
jbe
mov
sub
fsubrp
adc
loope
sub
into
scas
fstps
fwait
pop
lcall
mov
inc
fidivl
mov
insb
cmpsb
shlb
jp
clc
sbb
xchg
aaa
aad
mov
sbb
or
sti
adc
and
dec
mov
enter
fiaddl
add
mov
mov
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
orl
sub
sbbl
push
push
push
andl
push
orl
push
orl
call
subl
mov
lea
push
subl
push
movl
call
cmp
je
xorl
xor
jmp
mov
xorl
push
lea
push
push
push
subl
push
adcl
call
imul
cmp
movl
jne
orl
lea
andl
push
addl
push
andl
call
cmp
jne
addl
movl
or
mov
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
addl
movl
mov
or
lea
mov
xor
lea
sbb
mov
or
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
xor
add
dec
mov
jmp
mov
mov
mov
mov
mov
sbb
xor
adcl
mov
addl
add
notl
mov
movl
mov
cmp
movl
jne
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
adcl
xor
subl
add
addl
mov
mov
xor
notl
add
sbbl
mov
mov
sbbl
xor
subl
add
mov
andl
xor
xor
inc
mov
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
mov
addl
mov
mov
mov
mov
addl
mov
orl
mov
mov
decl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
sbb
mov
xor
xorl
add
jmp
lea
subl
push
addl
push
addl
call
movl
cmp
jne
push
lea
addl
push
adcl
push
push
orl
push
call
imul
movl
cmp
movl
jne
sbbl
lea
push
push
sbbl
call
movl
cmp
jne
mov
xor
mov
sbbl
xor
sbbl
lea
incl
push
add
mov
xor
lea
xorl
push
movl
mov
xorl
pushl
adcl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
adc
xor
and
lea
mov
neg
mov
orl
xor
orl
xor
xorl
add
mov
addl
xor
movl
lea
movl
mov
cmp
jbe
xor
or
or
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
push
call
cmpl
jb
mov
mov
mov
movl
cmpl
je
cmpl
ja
jmp
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
movzbl
adc
mov
subl
sub
andl
xor
mov
lea
mov
xorl
lea
subl
mov
lea
subl
push
addl
push
call
movl
cmp
movl
jne
push
lea
xorl
push
push
adcl
push
push
call
imul
cmp
jne
lea
push
push
subl
call
movl
cmp
movl
jne
lea
addl
push
negl
push
addl
call
movl
cmp
movl
jne
xorl
push
orl
lea
andl
push
subl
push
adcl
push
xorl
push
orl
call
imul
movl
cmp
jne
orl
lea
push
subl
push
notl
call
movl
cmp
movl
jne
lea
push
subl
push
subl
call
movl
cmp
jne
addl
push
lea
push
sbbl
push
push
push
call
subl
imul
movl
cmp
jne
addl
lea
orl
push
push
andl
call
movl
cmp
movl
jne
andl
lea
adcl
push
orl
push
sbbl
call
movl
cmp
movl
jne
xorl
push
lea
orl
push
push
push
subl
push
call
imul
movl
cmp
movl
jne
addl
lea
orl
push
andl
push
andl
call
cmp
jne
orl
lea
subl
push
xorl
push
addl
call
movl
cmp
movl
jne
adcl
push
xorl
lea
xorl
push
adcl
push
push
sbbl
push
adcl
call
imul
cmp
jne
movl
lea
addl
push
notl
push
call
movl
cmp
jne
lea
xorl
push
push
addl
call
movl
cmp
movl
jne
push
lea
adcl
push
xorl
push
adcl
push
xorl
push
call
adcl
imul
movl
cmp
jne
lea
xorl
push
push
orl
call
movl
cmp
jne
addl
lea
movl
push
push
adcl
call
movl
cmp
jne
andl
push
lea
push
push
subl
push
sbbl
push
call
xorl
imul
movl
cmp
movl
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
sub
mov
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
or
mov
push
movl
cmpl
je
cmpl
ja
jmp
push
pushl
call
mov
dec
mov
jmp
mov
xor
mov
push
mov
add
cmp
movl
je
movzwl
adc
mov
mov
incl
xor
andl
xor
add
addl
add
movl
adc
orl
xor
adcl
mov
movl
cmpl
je
cmpl
jge
jmp
push
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
jmp
sbb
cmp
xchg
xchg
dec
push
mov
mov
addl
addl
xor
push
jno
push
out
sbb
lahf
jno
push
test
enter
mov
sub
sub
dec
add
sbb
cltd
loop
xchg
dec
iret
or
scas
test
dec
mov
data16
cltd
ret
fisubs
es
inc
cmc
cmc
insl
mov
mov
dec
cmp
and
jmp
aaa
mov
ljmp
inc
dec
bound
dec
cmc
addl
xchg
add
fsubs
std
dec
or
or
stc
fbld
jno
scas
fistpll
ja
dec
lods
fidivs
dec
cmc
cs
push
push
xchg
push
mov
dec
popa
gs
dec
lcall
jl
js
push
adc
sbb
jl
lret
ror
std
sub
adc
or
pop
jle
iret
mov
insl
mov
push
loop
jne
inc
lods
dec
xchg
mov
aad
sub
subb
cld
mov
jecxz
outsb
int3
push
xchg
mov
or
pop
push
fisubl
dec
sahf
and
mov
adc
addr16
dec
rcr
add
mov
out
mov
hlt
inc
cmp
dec
lahf
rolb
fs
setp
orb
cmpsb
xchg
lods
mov
xchg
xor
aam
inc
add
les
mov
push
sbb
and
or
or
push
jbe
out
test
movsb
stos
cld
mov
inc
push
add
dec
dec
je
iret
jmp
fldt
inc
cli
push
pusha
jl
and
rcr
mov
dec
js
xorb
cld
sub
jg
aas
ja
xor
and
test
jecxz
jmp
out
push
std
pop
ficoml
cmp
and
pop
dec
inc
xchg
jnp
test
js
jno
mov
call
mov
xchg
mov
daa
das
mov
bound
lret
sub
mov
push
jmp
outsl
or
icebp
fisttps
push
imul
adc
xchg
dec
dec
sbb
mov
mov
cmpsb
mov
sti
mov
hlt
rcrb
in
cmp
mov
xchg
outsl
aam
lcall
leave
in
int
cmpsl
out
xor
filds
cli
scas
xor
dec
gs
mov
outsb
in
stos
jb
cs
jle
fldt
sub
dec
lock
xchg
into
xor
cmp
enter
fadds
popf
cli
xchg
mov
cmc
clc
inc
mov
in
ja
insb
add
std
mov
gs
mov
pop
add
rclb
data16
mov
movsl
mov
mov
push
out
arpl
pop
mov
and
cltd
and
in
stos
dec
cld
cmp
push
ja
lea
push
push
out
push
inc
adc
sar
push
pop
imul
mov
and
sbb
cmpsb
mov
mov
xor
cli
lods
sub
jmp
lock
sbb
jp
fsubr
outsb
inc
arpl
rcll
or
cwtl
mov
add
das
push
lret
mov
rolb
jns
mov
adc
leave
shl
jmp
lods
in
push
repnz
xchg
pop
jp
cmp
pusha
sub
push
and
inc
insl
or
stos
ds
fsubrp
pushf
je
pop
mov
fcmovbe
nop
xorb
jecxz
xchg
out
insb
inc
dec
mov
dec
inc
rolb
inc
pop
cli
out
mov
shrb
dec
pusha
cmp
les
sub
int
sub
data16
xchg
outsb
push
outsl
or
xchg
in
clc
subb
ret
wbinvd
insl
incl
pop
adc
lock
or
mov
xlat
cmpsl
adc
inc
and
adc
adc
mov
xlat
mov
std
jne
dec
xchg
sub
insb
testl
sub
dec
arpl
test
cwtl
inc
ret
jl
nop
dec
mov
sub
jnp
inc
fs
orl
xchg
xor
outsl
int3
mov
and
sbb
popf
jecxz
ss
js
jae
xchg
pop
dec
xchg
sub
push
lret
fwait
movsl
xchg
add
rcl
ds
imul
cmc
inc
push
sub
pop
mov
call
push
icebp
sub
enter
stc
in
fldenv
cmc
inc
dec
in
mov
iret
jb
push
dec
inc
out
testb
push
mov
dec
pop
bound
flds
or
arpl
ret
xchg
outsb
rcrb
loopne
pop
outsb
inc
cmp
fcmovbe
or
pop
je
lds
pushl
dec
push
dec
hlt
jmp
lods
nop
adc
jge
mov
popa
xchg
rcrl
mov
cmpsb
call
push
subl
out
or
adcb
inc
adc
sub
int
lcall
test
test
lcall
push
dec
adc
push
or
mov
fcomp
cltd
and
or
movl
cmp
sbb
cltd
cmp
fists
push
pop
adc
jo
imul
inc
lcall
sbb
and
outsl
dec
mov
in
add
push
ljmp
daa
xchg
pop
in
fsubl
sub
mov
enter
push
xchg
fdivrp
mov
and
push
inc
ret
sahf
sbb
hlt
mov
adc
cmovns
fidivrl
inc
pop
fistps
clc
test
mov
pop
lea
sbb
pop
repz
stos
jnp
in
mov
adc
sti
add
mov
inc
loope
pop
repz
stos
loope
mov
fisttpll
aam
xchg
jno
sbb
aaa
sarl
dec
and
xchg
xchg
mov
in
dec
jne
aad
mov
stos
cwtl
mov
daa
imul
add
lahf
and
sub
adc
ret
add
arpl
adc
mov
mov
in
stos
ret
fs
push
push
mov
jno
mov
sub
mov
push
dec
inc
ljmp
into
jecxz
cmp
mov
mov
ret
adc
cmp
into
mov
mov
orl
ds
mov
out
stos
add
pop
mov
pop
aaa
jle
ja
cmp
mov
push
push
jae
cs
daa
lods
filds
inc
and
adc
cli
xchg
addr16
push
leave
test
iret
cli
jge
and
cmp
push
adc
int3
pop
mov
fstps
arpl
jl
outsl
cmp
jmp
lods
call
mov
mov
xchg
xor
clc
testb
icebp
decb
mov
lahf
scas
rcrl
cmove
les
cmc
jo
fwait
xorl
fmul
and
sub
ds
popf
xchg
fcomi
xchg
push
jbe
out
fiadds
mov
incb
shlb
in
push
pop
call
add
fs
sbb
clc
push
push
or
notl
cltd
cwtl
mov
push
pop
ret
lds
or
sub
ljmp
daa
xchg
inc
stos
sbb
les
xchg
repz
jl
cld
hlt
push
daa
mov
shrb
cmpsb
jbe
add
sbb
rcrl
jae
sbb
aas
stos
pop
into
stc
sub
mov
cmpsb
into
add
mov
mov
test
test
repnz
xchg
dec
jmp
mov
ja
cld
xchg
ss
rorb
jle
mov
xchg
inc
in
mov
iret
pop
inc
imul
adc
mov
inc
and
add
jae
dec
shlb
xchg
cmpl
push
cmp
cs
lcall
lock
mov
push
lods
icebp
es
cmp
lret
int3
push
loopne
add
clc
andl
mov
jb
shlb
pcmpeqw
xor
xchg
cmc
and
dec
ret
test
adc
sar
xchg
dec
mov
repnz
or
xor
pop
mov
dec
call
filds
inc
sub
cmp
outsl
je
mov
inc
pop
cmpsl
stos
scas
jbe
mov
es
fmul
cmp
aaa
mov
cwtl
in
sub
push
mov
pop
out
mov
jbe
outsl
jns
cli
sub
cs
pop
pop
mov
xor
mov
fsts
sbb
les
dec
add
adc
int3
sbb
lea
rcr
adc
fnstenv
rcrb
mov
dec
pop
call
ja
rorl
in
incb
add
dec
aam
out
pop
pop
cmpsl
imul
aas
outsb
into
mov
test
lret
lcall
push
das
lock
adc
dec
inc
jl
adc
push
jmp
mov
sbb
nop
insb
fdivs
lahf
repz
push
mov
xor
jg
mov
loope
xor
fucomi
lds
xchg
mov
xchg
lods
leave
in
mov
scas
push
outsb
call
cmpb
test
xor
and
sub
nop
mov
leave
pop
dec
sahf
out
sbb
dec
negb
jecxz
test
mov
add
insl
mov
fadd
mov
xor
sub
push
es
notb
jmp
pushf
repnz
in
neg
fwait
mov
lret
loop
negl
pusha
lea
jp
loopne
mov
outsl
pop
jbe
sub
xchg
dec
add
outsl
push
xchg
and
cmpb
out
popf
jp
sbb
lds
fisubl
loope
mov
ret
mov
add
icebp
mov
jno
push
pop
jb
icebp
push
adc
xor
pop
mov
pop
in
sarb
test
fwait
add
cmc
out
push
or
or
loop
adc
mov
pop
inc
fisttps
mov
clc
pcmpeqw
inc
dec
fadds
popa
mov
push
pop
nop
je
insb
or
hlt
mov
aaa
mov
jg
sbb
or
aad
xchg
pop
icebp
push
fucomi
add
and
pusha
or
xchg
mov
xchg
pop
jno
or
stos
inc
inc
or
mov
adcb
dec
mov
fisubrl
rcll
jmp
jno
orl
jle
dec
xchg
mov
xorb
das
mov
inc
mov
cmp
inc
mov
fdivl
in
push
push
inc
rol
je
jnp
adc
nop
lods
adc
scas
pop
sti
cld
adc
jns
xor
mov
and
arpl
jb
je
mov
mov
fistps
cmp
or
je
arpl
jp
mov
leave
loopne
mov
test
and
out
out
in
xchg
das
dec
mov
xor
leave
rcr
fldl2t
and
jno
xchg
mov
jns
nop
add
push
movsl
jno
loopne
sbb
loop
je
cmp
popa
mov
ret
in
cvtdq2ps
and
mov
gs
nop
sub
outsl
popa
push
divl
push
sub
outsb
ret
mov
fistpl
lock
shl
shll
popf
dec
ss
outsl
adc
sbb
pop
mov
pop
gs
mov
push
ret
sbb
pop
mov
loop
cmp
xchg
insb
loop
pushf
push
std
js
je
mov
pop
pop
addb
lret
stc
out
push
mov
dec
sbb
mov
repz
in
sub
or
adc
pop
jne
or
ds
xchg
out
imul
add
or
pop
lcall
push
pop
sub
mov
cmp
aam
push
push
test
cs
cmc
fcmovb
pop
fiaddl
andl
and
js
lret
sub
icebp
mov
fs
je
out
xor
cmpsb
mov
shrl
je
xor
jmp
out
fucomp
aas
aaa
mov
dec
jns
jns
jmp
cmp
outsb
pxor
repz
int
cmp
lods
add
mov
push
ds
adc
push
cs
jp,pn
imul
mov
cmc
scas
stos
cmp
jmp
push
cmc
les
sbb
dec
aad
mov
lahf
in
cmp
jecxz
jne
int
in
sbb
jp
push
lret
hlt
xchg
jecxz
mov
mov
xor
sbb
jo
mov
mov
hlt
stc
xor
stc
fs
ljmp
lahf
and
jbe
adc
mov
push
pop
pop
loope
hlt
mov
movsl
pop
inc
dec
cli
cmpsb
sti
fimull
loope
push
lods
jl
mov
inc
adc
sub
push
imul
push
fmul
imull
inc
jp
sets
dec
mov
fcomps
rorb
mov
ret
push
sbb
shrb
push
int
pop
jmp
or
aas
dec
fwait
in
cmp
outsl
iret
sahf
and
ds
push
mov
popf
push
mov
imul
sbb
xor
out
and
add
andl
hlt
pop
cmp
push
repnz
movsl
fidivrl
mov
jg
sbb
aam
orb
shrb
mov
loop
push
mov
dec
ds
pop
loopne
xor
push
jp
popf
test
lods
pop
jmp
mull
enter
cmp
bnd
clc
or
and
mov
mov
fdivp
cs
pop
mov
fnstenv
shlb
inc
and
mov
mov
pop
push
xchg
test
inc
pop
sub
or
enter
mov
test
imul
add
mov
add
pop
pop
fcoms
push
int3
dec
test
imul
jnp
movsl
cwtl
cmp
sub
mov
xlat
push
int
jecxz
ror
repnz
pop
jmp
push
nop
fists
outsb
aas
dec
jcxz
mov
add
int3
or
jmp
pop
push
rcl
and
mov
xor
dec
pop
les
jl
mov
push
test
xor
shl
inc
cmp
mov
in
xchg
adc
sub
mov
mov
xor
inc
push
outsb
jge
push
test
xor
push
adc
je
push
test
jns
jns
nop
roll
lahf
test
sub
xor
jge
pop
cltd
cmp
sbb
mov
mov
mov
inc
push
in
mov
pusha
punpcklwd
mov
das
sbb
fisubrs
jmp
call
testl
adc
mov
jb
pop
pop
xchg
jo
roll
add
fdivrs
mov
fwait
and
or
sub
into
jp
repnz
fnstcw
es
mov
and
decl
push
in
jmp
test
mov
cmp
out
inc
cmpsb
ds
xchg
mov
xchg
push
mov
pop
loopne
cmp
sub
roll
loop
inc
pop
dec
fldcw
sti
outsl
je
lcall
jmp
popf
adc
loop
shll
scas
iret
sub
xchg
test
ja
fldcw
adc
std
mov
data16
jo
xchg
mov
pop
xchg
xchg
popa
daa
or
xor
or
sbbb
cwtl
jbe
jns
or
stos
jnp
fstp
pushf
pop
jno
and
jne
xor
mov
aam
out
rorl
mov
scas
xor
xchg
sbb
std
pop
sub
and
out
movaps
mov
scas
fwait
dec
add
xor
inc
in
dec
je
adc
push
stc
xorb
aas
dec
orl
pop
cmp
lea
dec
dec
imul
stc
cld
pop
lret
inc
fwait
std
les
or
std
loopne
mov
mov
jnp
popf
dec
lods
js
rcll
outsl
std
xchg
out
js
enter
sub
in
addr16
xchg
push
mov
lahf
mov
mov
mov
in
cltd
dec
mov
cs
inc
out
mov
fimull
scas
fbstp
fisttpll
mov
jne
rorb
mov
imul
xor
xlat
or
jbe
xor
jecxz
push
cmp
sbb
push
test
add
or
rcrb
or
inc
jp
xchg
pop
sbb
adc
lcall
mov
js
jbe
and
push
sti
xchg
sub
pop
push
fisubrl
aam
inc
je
mov
stos
pusha
lret
and
inc
mov
shlb
cmp
inc
out
and
push
fisubrs
add
sarb
pop
cmp
cld
xchg
out
lds
ret
stos
clc
add
jae
mov
cmp
sbb
jmp
jno
stc
mov
mov
lret
fistpll
sub
std
sahf
push
test
test
mov
dec
sbb
sahf
nop
pop
lock
pop
cmp
pusha
dec
and
repz
dec
test
or
pop
push
lods
mov
pop
and
les
or
cmp
cmpsl
iret
mov
mov
xchg
ss
out
adc
jecxz
lods
inc
sbb
xchg
mov
insb
dec
mov
fimuls
movsb
in
test
cwtl
test
pop
push
pop
lret
lods
xchg
and
jbe
xor
int3
in
xor
hlt
in
dec
or
jecxz
loop
lea
lock
into
xchg
jmp
mov
pop
idivb
lods
jmp
in
js
xchg
popf
sbb
mov
sarl
fidivrl
inc
cmp
cmp
inc
mov
pop
enter
jae
outsb
iret
repz
stos
mov
loope
negb
stos
xor
test
sbb
nop
call
cmp
adc
add
je
xchg
cmpsb
cmp
movb
pop
mov
cltd
adc
mov
inc
ljmp
pop
loope
sbb
inc
mov
adc
pushf
mov
pop
mov
or
gs
mov
xor
jno
xchg
jo
add
sub
rcrl
adc
push
roll
add
in
rolb
add
inc
lret
add
mov
insb
fwait
sbb
cmp
stos
inc
or
sbb
insl
lds
fists
sbb
pop
nop
sahf
int
xchg
outsb
lods
insb
js
inc
or
jl
cli
lcall
xor
std
sub
adc
enter
mov
push
push
push
mov
or
and
enter
addr16
dec
andl
cmp
dec
popf
or
aam
fcmovnu
jle
es
data16
add
in
loopne
pop
ret
xlat
test
fidivl
inc
or
xchg
daa
aam
lock
mov
inc
iret
adcb
jp
test
fsubrl
lds
xchg
push
pop
lds
in
call
jae
mov
outsl
jle
add
xor
ljmp
dec
out
push
sti
sub
pop
popa
call
adcb
push
scas
push
and
cs
cmp
mov
pop
imul
pop
cld
adcb
mov
add
mov
xor
ret
xchg
pop
call
mov
jl
cmc
push
mov
cmpsb
rcll
sahf
xor
and
dec
fdivs
cs
sbb
ss
pop
lock
pop
insl
xchg
mov
pop
jge
add
cmp
into
aam
hlt
sti
xor
pop
icebp
pop
int
gs
test
xchg
adc
pop
dec
jns
cmc
jp
ljmp
nop
cmpsb
push
inc
in
js
and
out
lods
jne
test
jae
push
adc
lock
fdivrl
dec
pop
mov
lret
jmp
inc
repnz
sbb
mov
lods
mov
sbb
or
cli
jp
lret
dec
in
jnp
inc
adc
rolb
mov
and
pusha
outsl
xor
mov
in
mov
into
outsl
fcoms
pop
shrb
fildl
out
stos
dec
jle
clc
or
int3
out
insb
xor
jecxz
addr16
fucom
jne
cmp
jne
push
pop
mov
mov
fwait
inc
aam
jecxz
pop
in
cmp
push
je
cmp
dec
call
xlat
and
cmpsb
filds
and
aaa
jecxz
or
rcrl
add
xchg
arpl
pop
xchg
mov
mov
inc
jmp
popf
push
lock
out
add
xor
scas
add
dec
and
loop
or
mov
sbb
fwait
cli
sbb
aam
add
aaa
std
jg
cli
sub
cld
clc
cltd
pop
mov
repz
push
push
mov
cmp
mov
test
push
jae
push
rolb
movsl
sbb
idivl
les
das
fildl
test
pop
sbb
shrl
ret
mov
gs
out
fisubs
sub
cs
mov
xor
pusha
insl
cld
push
les
fstps
jg
jge
shr
cmp
sbb
mov
xchg
cs
aad
ret
test
scas
push
mov
add
xor
push
xchg
daa
cmc
or
mov
stc
xchg
and
mov
sub
call
das
fldt
and
mov
xor
cmp
xchg
dec
inc
dec
je
adc
push
mov
lret
pop
add
aad
adc
cltd
daa
rolb
andl
std
cmp
sub
mov
sbb
cwtl
push
cld
addl
push
cmpsl
jnp
scas
fldcw
mov
fldenv
mov
cmp
add
arpl
ss
pop
push
ds
addr16
rorl
int
mov
cmp
repnz
mov
push
cs
jecxz
or
cmp
xchg
pusha
iret
les
xor
inc
lods
cmp
xor
and
jmp
fwait
jl
sahf
and
xchg
sti
repnz
fs
movsl
mov
sbb
jmp
scas
loope
or
adc
sub
fwait
sbb
outsb
sbb
xchg
in
pop
out
dec
jno
ficomps
xlat
or
rcrl
cs
in
push
or
jb
repz
dec
or
jle
push
fwait
pop
outsb
sbb
out
aam
lock
stos
mov
ja
shll
out
add
in
daa
ret
mov
mov
outsl
xchg
or
add
dec
jecxz
mov
jmp
daa
cwtl
cmpsl
mov
stc
rcll
popa
dec
dec
adc
popf
lods
mov
xchg
inc
mov
cmp
lods
lock
or
out
xor
xchg
pop
dec
add
lcall
lods
pop
mov
sbb
stc
cwtl
ret
jns
push
arpl
and
add
jnp
push
lods
mov
addr16
mov
loopne
loop
xlat
xchg
push
xchg
movsl
add
rcll
jecxz
push
data16
insb
or
in
lock
push
mov
or
roll
jge
popf
loop
insb
jne
sbb
clc
sbb
sub
mov
and
jmp
enter
push
jmp
cltd
inc
sub
sub
dec
jnp
jns
inc
and
lahf
mov
sub
dec
xor
push
out
jmp
fcmovb
fwait
ret
jae
in
mov
push
xchg
int
ja
mov
jecxz
lods
cmp
mov
cs
decl
mov
cmp
mov
push
jb
pop
inc
xchg
mov
jae
xor
adc
int3
aad
mov
sub
cwtl
out
addl
in
dec
sub
fldl
ds
jbe
imul
and
shl
or
xchg
faddl
mov
add
inc
xchg
test
fistl
xchg
pop
dec
fmull
mov
jmp
fdivrl
add
mov
lods
xchg
scas
shl
fcompp
aad
add
push
jbe
xor
daa
addr16
adc
enter
addr16
mov
js
sub
push
enter
mov
add
xorl
jo
fmul
sub
shlb
or
call
int
xlat
mov
push
jne
insl
aas
dec
sarb
fildl
int3
xor
xlat
pop
flds
xor
push
movsb
jge
pop
in
loop
or
stos
xor
into
jecxz
cmp
test
cs
sub
sub
or
mov
clc
mov
push
cmp
push
aaa
dec
or
jmp
jge
fucomip
pop
fisttpl
xchg
mov
and
ja
js
popf
shll
repnz
xchg
ja
jo
jnp
add
mov
mov
fisubrl
push
xor
js
or
add
cmp
dec
stos
sbb
repz
jg
loope
sbb
inc
pop
xchg
jl
pop
xor
jae
outsl
fs
stos
mov
cli
dec
enter
adc
xchg
push
mov
or
fsts
stos
dec
jmp
xchg
mov
lret
push
jge
push
lret
sbb
xor
movsb
xor
mov
xor
sub
xor
sub
scas
mov
lds
into
clc
pavgb
loopne
clc
xlat
pop
in
sbb
test
div
popa
ret
shrl
jns
cwtl
test
jmp
movsb
fistl
test
call
or
and
sub
arpl
xor
out
mov
dec
fiadds
mov
and
into
adcb
sbb
and
xor
in
lahf
fiadds
xor
jo
or
sbb
ficompl
clc
out
adcb
jl
repz
adc
push
pop
test
imul
xor
ret
ds
push
pop
arpl
xchg
sbb
xor
add
jmp
jo
cmpsb
jl
int3
dec
shl
jg
insb
jecxz
push
scas
insl
les
sahf
mov
jbe
test
sub
mov
push
mov
add
push
lods
or
in
divl
popf
inc
loope
xchg
add
int
sub
xchg
push
pop
int3
mov
stc
lea
test
lods
popa
negl
lock
aad
subl
jae
jl
test
stos
out
mov
in
in
cltd
js
aad
inc
push
inc
repnz
js
andl
push
ss
in
fisttpll
std
and
lods
jmp
es
add
or
test
repnz
mov
pop
lret
outsl
movsb
cmp
cli
out
jmp
sub
popa
lea
incb
shl
stos
cmp
adc
lock
mov
add
sub
xchg
xchg
lahf
add
ret
fcomps
mov
or
adc
dec
lcall
mov
loop
push
pop
mov
fs
and
cwtl
jg
mov
stc
pop
pop
test
fiaddl
mov
in
sub
mov
rcrl
cmp
sbbb
data16
push
mov
insl
fs
test
aas
das
push
test
dec
loopne
movsl
fisubl
sub
mov
pop
enter
xor
xor
aam
sbb
jae
mov
repnz
sbb
pusha
and
jb
inc
xchg
adc
mov
repnz
cmp
aaa
jo
pop
fwait
adc
mov
jbe
mov
mov
jmp
cmc
int3
dec
in
insl
sbb
jle
daa
into
jecxz
out
push
and
sub
in
leave
adc
mov
jno
push
iret
lds
mov
or
inc
loopne
out
dec
mov
jl
aad
adc
sub
nop
sub
frstor
sbb
sti
sarl
int
int3
add
cli
cmp
aad
mov
dec
mov
xchg
stc
pop
xchg
xchg
ret
call
pop
imul
push
sub
inc
addr16
sbb
test
mov
sub
mov
mov
xor
jbe
push
ficompl
dec
xor
dec
ret
adcb
cmpsb
jge
imul
aaa
sbb
inc
sbb
ja
es
iret
jno
add
xor
nop
xchg
jne
out
fisubs
sbb
xor
or
fs
test
sub
mov
jle
dec
push
mov
inc
orb
add
or
out
movsl
push
in
push
fadds
iret
sbb
and
jl
dec
dec
pop
adc
int3
xor
in
push
fistpl
movsb
scas
adc
pop
mov
mov
xchg
sahf
dec
arpl
inc
cmp
test
pop
daa
dec
shll
rclb
mov
sub
scas
mov
cmp
pop
mov
xor
out
pop
xor
sbb
and
add
sbb
lock
jg
dec
aad
sub
pop
bound
xlat
jbe
lods
mulb
andb
push
xor
lea
push
adc
dec
pop
xorl
shrl
pop
mov
mov
adc
lock
push
adc
int3
xchg
enter
lea
cs
rcrl
adc
imul
mov
cmpb
xchg
aaa
movsb
bound
outsb
test
fisubl
inc
jl
repz
mov
shlb
sub
mov
movsb
mov
fadd
cmp
cwtl
gs
mov
push
jp
xlat
mov
neg
cmp
add
cmp
mov
sbb
loope
aam
mov
out
adc
enter
push
rcll
dec
orb
mov
jbe
adc
aaa
lea
mov
add
push
add
addr16
add
out
repnz
sbb
or
test
sahf
cmp
sti
pop
jmp
xchg
testl
jge
loop
cmp
divb
xchg
cltd
mov
rol
andl
rorl
out
dec
pop
xchg
stc
es
lock
cmpb
adc
in
push
cli
add
je
std
xor
xchg
arpl
jno
cmp
dec
push
xlat
add
stos
pop
mov
data16
popa
psubusb
pop
lods
lret
mov
pop
daa
sub
pop
flds
mov
jmp
push
or
sub
lahf
adc
insb
or
xchg
mov
adc
mul
mov
adc
cmp
mov
in
lods
push
add
or
sbb
fcmovnbe
push
popf
stos
jl
pop
jb
inc
jo
enter
adc
insl
shll
push
hlt
jb
mov
jb
push
sbb
sub
xor
jecxz
std
mov
insl
cmp
sub
push
leave
cltd
subb
inc
ss
or
cli
cmp
add
test
cmp
repz
xchg
out
loop
leave
sbb
jg
incb
clc
adcl
dec
jmp
lods
mov
sbb
shll
in
and
add
insb
mov
push
lock
mov
pop
jnp
faddl
mov
test
push
lret
and
int
pop
dec
fbstp
adc
pop
ret
sub
insl
jl
leave
int3
and
sbb
fsts
fisttpll
xor
push
mov
sub
or
lds
xchg
bound
sbb
cmp
sbb
xor
mov
ljmp
mov
pop
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jb
jmp
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
movsbl
or
mov
addl
sub
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jb
push
mov
mov
mov
sub
sub
mov
andl
movl
sub
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
call
jmp
mov
andl
mov
addl
mov
adc
mov
mov
and
xor
addl
xor
mov
mov
adc
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
push
test
add
add
add
add
add
add
add
push
cmp
add
add
add
inc
push
call
jmp
lret
repz
lea
sub
mov
fldl
add
add
pop
push
imul
inc
imul
inc
js
arpl
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
add
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
inc
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
jl
lods
outsl
scas
hlt
add
testl
jbe
xchg
mov
cmpsl
loopne
pop
push
pop
notl
pushf
or
pushf
or
mov
lcall
xchg
pushf
sub
popa
mov
stos
mov
mov
jbe
xchg
mov
pop
pop
cmpsl
jae
pop
clc
push
stc
mov
xchg
cmpsl
test
lret
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
add
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
