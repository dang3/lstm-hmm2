push
mov
sub
mov
adc
mov
mov
or
mov
sub
push
movl
mov
mov
mov
sbb
mov
and
mov
orl
mov
mov
add
orl
mov
add
mov
jmp
iret
inc
loopne
push
adc
fmuls
jbe,pn
xchg
mov
xor
sahf
mov
in
mov
adc
ss
data16
mov
dec
inc
movsl
mov
pop
inc
xchg
mov
fdiv
ret
orl
adc
movsb
jge
dec
mov
and
cwtl
clc
pusha
lds
popf
mov
inc
push
mov
cli
imul
loop
push
stos
xor
notb
out
mov
cmp
xor
sub
jae
jp
call
jle
push
push
jl
adc
or
cmp
lret
xor
mov
aam
jne
push
ret
rcrl
pop
ja
mull
mov
xchg
adc
rorb
insb
cmpb
addr16
xlat
dec
rorb
mov
pop
leave
jle
xchg
out
sub
xchg
push
insb
or
sahf
outsb
jge
sub
int
push
imul
into
sub
mov
cmc
sbb
jg
inc
cmp
popa
inc
rcl
cmp
movb
adc
out
cs
mov
push
rclb
sbb
bound
pop
cltd
push
push
sbb
shrb
lock
jbe
es
addb
sub
push
in
adc
fidivs
lods
fcompl
les
jns
int3
icebp
das
mov
and
add
xchg
cmp
xor
mov
loopne
cmpsb
movsl
mov
sub
faddl
sbb
out
jp
pop
sub
or
or
mov
pop
sbb
and
movsb
out
xchg
pop
pop
mov
loope
push
cmp
jae
dec
inc
negl
sub
mov
mov
push
shrl
mov
nop
mov
into
adc
sub
mov
lea
loopne
lods
int
daa
jp
ds
push
xor
jno
jo
push
push
es
add
mov
lret
mov
stos
das
push
mov
repz
and
pop
ret
mov
mov
test
xchg
push
mov
stos
pop
insb
add
add
out
jo
aad
arpl
sbb
jnp
int3
in
push
xor
int3
cltd
aas
push
push
push
cltd
out
int
push
ljmp
or
mov
jmp
fdivp
loope
push
jp
adc
adc
inc
inc
lea
xor
int
shll
jecxz
xchg
or
mov
dec
mov
mov
incb
sahf
mov
fcomp
arpl
and
lret
inc
cmp
add
jp
adc
push
jle
mov
jmp
call
sbb
sub
ja
cli
faddp
test
push
inc
jmp
jnp
jecxz
mov
xor
lock
cmp
aam
or
out
or
mov
adc
outsb
sbb
mov
cld
push
xchg
insl
xcrypt-ofb
cmpsl
out
rcrb
int3
or
popa
xchg
pusha
or
push
sbb
pop
cmp
pand
lahf
xor
jb
mov
sbb
outsb
fdivl
insb
loopne
or
sbb
sub
mov
loope
jmp
jne
xchg
xor
pop
xorl
sbb
jae
cmc
fst
and
xorl
inc
sub
pop
lret
mov
and
jg
les
stos
adc
fsincos
dec
pushf
mov
mov
das
gs
xor
sub
testb
mov
movb
mov
dec
xchg
es
lret
mov
xor
stos
sub
in
or
jecxz
lcall
push
dec
xor
dec
pop
fstpt
stos
mov
popa
std
dec
xorl
pop
fnsave
aad
pop
mov
xchg
das
outsl
dec
inc
jb
aas
sbb
loop
jmp
cmpb
mov
and
or
jb
popf
xchg
jecxz
insb
lret
ljmp
stos
sub
push
mov
cmp
daa
jbe
sub
in
push
orl
lods
push
jns
sub
sub
cmp
ss
mov
rclb
jno
ja
scas
inc
and
aam
jae
push
movsl
sbb
stos
das
ljmp
push
cmp
aaa
add
or
add
mov
sub
into
imulb
shrb
sub
mov
test
cmpsb
add
loope
dec
xor
mov
push
jge
pop
shrb
sbb
jne
inc
and
sbb
lods
lcall
clc
sub
aad
das
or
push
mov
es
lcall
or
gs
loopne
outsl
lret
or
ljmp
or
loop
movb
sub
push
add
mov
cld
fisubl
mov
push
or
lods
push
jle
pop
pop
shl
sbb
adc
aad
mov
push
sti
push
pop
adc
imul
fadd
or
add
add
jno
push
out
outsl
sub
call
std
es
xor
lock
addl
mov
add
icebp
mov
push
shrl
loop
mov
lahf
dec
in
pop
cld
mov
jg
pop
movsb
data16
mov
mov
addr16
shrb
or
outsl
mov
int
mov
imul
ljmp
lcall
sub
loop
adcl
cmp
cltd
loop
test
mov
jge
dec
xchg
and
push
flds
push
call
jmp
sub
adc
lock
inc
roll
and
inc
arpl
jp
scas
push
xor
and
setbe
lret
lods
mov
push
pop
sub
or
cmp
rcll
arpl
pop
aam
dec
sub
jbe
jo
pop
mov
orb
inc
cmpb
pop
scas
adc
fwait
aam
push
lahf
pop
rcrb
clc
cld
int
sub
cld
cmp
pop
roll
push
xor
dec
inc
sti
dec
lds
push
pushf
mov
insb
arpl
sub
inc
iret
push
scas
mov
jne
sub
mov
out
cmc
movsl
add
mov
fistl
cmpsb
decl
add
push
inc
sbb
lock
int3
cmc
rcr
aas
cltd
xchg
mov
jp
cltd
jl
jne
mov
sahf
and
xor
push
sbb
or
repz
sub
aad
fcomps
push
fadd
ja
icebp
addb
mov
bound
push
aam
movsl
lods
mov
int3
add
or
daa
jns
xor
add
divb
mov
inc
inc
enter
add
lock
into
lea
jno
out
xchg
subb
loop
fs
or
adc
xchg
push
jmp
jmp
xor
lds
popf
sbb
mov
add
bound
xchg
loope
jnp
cwtl
insb
data16
int
pop
fldenvs
add
lret
fcoms
icebp
jecxz
lods
repnz
test
jge
addl
sub
notl
mov
movl
sbb
add
mov
not
orl
orl
cmpl
movl
mov
jmp
mov
jg
pushl
pushl
call
sbb
sbb
sub
or
orl
lea
adc
mov
or
mov
and
mov
xorl
mov
adc
add
mov
dec
mov
mov
adc
jmp
mov
xor
js
dec
mov
xchg
ret
mov
pop
test
add
xchg
pusha
cwtd
add
cmp
addb
fs
sub
and
jo
pop
mov
xor
mov
sbb
adcl
mov
scas
xor
adc
push
dec
fcoml
cmp
das
and
movsl
sbb
clc
sbb
subb
xor
cmp
mov
fldt
lcall
in
sub
fildll
jl
popf
lret
mov
aas
push
lock
jl
ja
cwtl
pop
addr16
je
jl
mov
out
scas
stos
mov
mov
lods
das
inc
mov
lret
push
sbb
shlb
call
mov
xchg
add
add
aam
cmp
sahf
push
fs
mov
jne
aas
mov
mov
cli
testb
das
xor
stc
roll
dec
or
xor
enter
xchg
rorb
sub
mov
adc
dec
cli
rcrb
pop
jo
daa
sbb
mov
push
xor
mov
dec
pop
in
test
push
fisubrl
jp
adc
int3
imul
out
and
repnz
lahf
xchg
mov
push
adc
clc
xchg
jno
cmpsb
push
push
mov
push
les
test
loope
fstpt
jae
pop
shr
fadd
cmp
mov
loope
icebp
and
cltd
push
dec
push
clc
pusha
mov
pop
aaa
jo
sub
or
sub
arpl
addr16
pop
mov
adc
repnz
ss
popa
aaa
sub
mov
out
xchg
ljmp
jns
jge
mov
sarl
sub
adcb
sbb
xlat
mov
or
add
lea
pop
jle
inc
cmpsb
cmp
sub
sbb
ss
adc
movsl
sarl
in
movsl
rcr
mov
jecxz
sub
mov
push
popa
cld
add
and
and
push
pop
in
dec
xchg
addr16
shll
adc
adc
pop
inc
pop
and
sti
lret
outsl
ja
jle
mov
cmc
stc
and
aas
or
stos
xor
pop
stc
inc
mov
sub
inc
mov
lock
pushf
jmp
jg
adc
aad
add
sahf
iret
movsb
push
bnd
lcall
jbe
mov
and
pop
inc
les
sub
cwtl
push
and
mov
pop
out
jecxz
ss
add
lahf
cld
fsub
test
cmp
insb
cltd
add
gs
loopne
loop
or
js
cmpsb
in
sub
jecxz
test
test
test
movsl
dec
rclb
cmp
pop
mov
adc
rcr
out
hlt
add
ss
fstps
aam
popf
jb
push
xchg
arpl
mov
addl
repz
ljmp
or
aad
popa
loope
xor
mov
fxch
icebp
adc
iret
xor
ja
xchg
dec
dec
jecxz
addr16
push
in
fdivl
add
xlat
mov
outsl
inc
add
lods
aaa
cmp
ds
or
push
fs
jl
jno
call
push
push
mov
and
in
orb
lret
das
mov
rol
lea
and
inc
xchg
mov
ja
mov
mov
jnp
fstpt
mov
and
loope
aad
cmp
dec
jb
lret
ret
cmp
fs
add
dec
out
jbe
mov
arpl
xchg
fbld
dec
nop
in
xchg
jle
pop
idivb
add
cmpsb
cltd
mov
cmp
jno
jp
push
push
or
in
ret
pop
xchg
mov
or
cmp
clc
mov
inc
das
inc
mov
pushf
xor
pop
mov
movsb
push
add
pop
lcall
dec
adc
mov
pusha
shlb
int3
fst
je
dec
inc
addr16
mov
cmc
and
sbb
push
jne
adc
clc
enter
inc
xlat
pop
cmpb
loopne
scas
or
push
or
int3
cld
mov
ret
lock
mov
sub
push
pop
lcall
ficoms
dec
shrb
lds
jecxz
inc
sub
add
daa
test
in
xchg
sarb
cltd
mov
push
in
mov
cwtl
mov
sbb
pop
cli
movsb
mov
pop
sub
xor
mov
dec
inc
fisubrs
in
jnp
addr16
pushf
mov
int
xor
insb
hlt
mov
std
aad
out
xor
into
dec
andb
pop
mov
stos
mov
pusha
mov
push
daa
imull
insl
test
mov
in
rolb
mov
clc
adc
jns
sub
push
mov
rorb
xor
lret
mov
cmp
out
call
sub
in
scas
pop
xchg
xchg
cld
test
leave
lret
out
stos
cmp
out
push
sbb
push
bnd
or
mov
and
cli
jnp
pop
pop
mov
cmc
arpl
push
mov
outsb
loop
arpl
out
jb
ficompl
cmpsl
push
xchg
ljmp
addl
xchg
add
mov
repz
push
pushf
cmp
pop
fdivs
scas
repnz
stos
imul
pop
jge
scas
add
jno
sbb
nop
inc
divl
mov
popf
cmp
or
ret
lret
out
call
or
adc
popf
das
fdivrs
sahf
icebp
and
pop
cli
jne
cmp
jmp
or
inc
lahf
jle
mov
loope
cs
cmp
sub
and
adc
sub
lcall
cmp
fldl
add
lock
lret
lret
cltd
mov
or
sar
test
xchg
das
push
das
cmp
and
sub
xchg
aad
sbb
inc
test
mov
mov
shlb
push
xor
stos
add
and
cmp
sub
lret
xor
sti
inc
in
mov
dec
inc
push
stos
data16
flds
lahf
xlat
inc
pop
ror
out
dec
xchg
or
inc
pop
mov
test
sbb
xchg
out
sub
dec
frstor
adc
xlat
ret
adcb
push
mov
iret
mov
outsb
xchg
mov
repz
ss
and
xchg
add
jle
lahf
negb
mov
inc
cmp
stc
adc
cltd
xlat
mov
fcompl
mov
mov
mov
add
mov
in
jg
jl
mov
jns
dec
jmp
mov
les
xchg
sbb
popa
mov
xchg
xlat
aad
push
mov
cltd
cmp
mov
int3
dec
addr16
jo
adc
mov
adc
inc
or
test
movb
cmp
repz
fldcw
cwtl
and
int3
shll
stos
push
test
roll
fcom
sub
xchg
gs
and
mov
imul
mov
shrd
adc
shr
mov
jmp
mov
lock
popf
mov
outsl
scas
mov
and
ja
jno
mov
cmp
or
pop
pop
mov
push
inc
bound
xchg
cmp
leave
lods
xchg
aaa
mov
mov
test
jg
inc
testl
imul
fwait
pop
movsl
rcl
add
rclb
mov
fistl
dec
mov
cmp
mov
stos
subl
mov
lret
push
test
push
std
jecxz
jne
sub
dec
dec
jecxz
aaa
lock
ret
insb
add
testl
pop
jecxz
xor
test
test
dec
rcl
jecxz
sbb
mov
and
jae
ret
out
je,pt
mov
test
xor
imul
in
aam
and
dec
cmpsl
ss
cmc
pop
cmp
sbb
or
test
and
adcb
rclb
sbbl
iret
imul
das
push
mov
scas
xor
in
mov
aaa
sar
and
stos
fldt
imul
push
ret
insl
arpl
or
jle
cmp
insb
push
dec
ret
pop
xor
inc
push
je
les
mov
mov
pop
mov
or
push
pusha
push
add
push
dec
imul
or
stos
adc
push
adc
pushf
imulb
lret
insl
dec
outsl
jmp
dec
xchg
jns
int
mov
pop
mov
int
sbb
mov
stc
and
icebp
ljmp
popa
mov
cmpsl
xor
mov
sbbb
pop
add
mov
mov
lods
xchg
mov
mov
pop
ds
dec
stc
adcb
jno
xchg
inc
adc
dec
aaa
lahf
jbe
mov
dec
inc
inc
push
jmp
push
into
sub
dec
mov
jg
adc
test
movaps
iret
ret
rcrl
rclb
hlt
sti
pcmpgtw
jnp
jp
imul
std
sub
aas
and
mov
inc
stos
aaa
mov
jae
insl
push
sbb
lds
mov
mov
xor
inc
fstpt
js
scas
fwait
aaa
sub
xor
cmc
mov
add
add
in
lcall
xor
xchg
cwtl
aas
cmpsl
jns
jl
in
mov
enter
ds
or
inc
add
iret
loop
mov
frndint
sbb
push
push
pop
rorl
sbb
pop
xchg
and
out
jmp
mov
xchg
xchg
bound
cmpl
sbb
mov
sub
cmpsl
cli
ss
mov
jp
pcmpeqw
cli
imul
dec
ja
jae
mov
loop
dec
das
adc
incb
ja
fwait
push
or
call
push
sldt
lcall
enter
sub
cmp
test
adc
shll
inc
add
jecxz
cmp
ja
leave
cmp
xchg
inc
roll
cmpsl
mov
inc
push
xchg
outsl
xor
or
scas
insl
push
lods
in
add
and
loop
stos
mull
daa
and
mov
cmc
sbb
jmp
dec
push
pop
clc
jp
lcall
bound
jl
inc
ja
call
and
dec
xchg
pop
outsb
inc
sub
out
dec
mov
mov
mov
clc
ds
loopne
xchg
test
pop
repz
pop
mov
shlb
mov
mov
adc
add
sahf
sti
pushf
xchg
and
nop
jns
ss
movsl
data16
das
fwait
mov
push
in
mov
mov
outsb
out
or
call
inc
dec
mov
sub
in
push
aad
cmp
test
shr
fs
and
js
jno
adc
push
cmp
add
xchg
dec
stc
or
and
cmpsb
pop
out
add
test
and
fwait
ljmp
iret
shrl
jl
les
or
dec
enter
pop
insl
inc
je
xchg
mov
in
or
imul
and
adc
cmc
dec
popa
stos
divl
inc
lahf
dec
sub
fs
mov
mov
movsb
in
and
sbb
mov
test
iret
imul
leave
cmp
pop
adc
out
xchg
cmp
aaa
mov
mov
sub
into
dec
je
sti
loopne
push
pop
pop
sbb
fcoml
int
jb
mov
sbb
insl
lret
out
jns
cmp
xchg
sti
add
push
inc
xor
pop
cmpsb
xorb
cs
mov
cltd
cmp
lcall
add
adc
cld
in
clc
je
ljmp
dec
or
int3
out
sbb
loope
call
xchg
inc
loope
push
shrb
xchg
rdtsc
mov
and
push
int
adc
sub
fldl
push
and
bound
sbb
loopne
mov
inc
pop
sahf
enter
inc
mov
aam
jno
or
jbe
repz
ds
pop
or
add
add
out
inc
stos
pop
andl
push
adc
daa
rclb
cmpsl
pop
mov
les
jle
ja
push
add
setbe
push
ja
scas
movsl
xchg
add
add
mov
sub
incl
test
pop
outsl
mov
lods
ss
lds
jnp
ss
add
fsubl
out
cmp
pop
inc
mulb
test
imulb
jns
sbb
sti
inc
xchg
and
inc
and
divl
jo
test
aad
nop
jbe
ret
cmp
mov
add
cwtl
ja
roll
lret
mov
stos
dec
test
insl
leave
ret
clc
fwait
adc
fnstcw
push
mov
je
movsb
call
and
mov
lret
loop
movsl
xchg
mov
arpl
jnp
adc
inc
jae
pop
pop
mov
adc
jo
mov
mov
rcll
cld
ljmp
dec
ja
fsubrs
popa
mov
ss
and
test
lea
jmp
icebp
jo
inc
push
lret
add
pop
lds
mov
pop
mov
gs
jmp
test
sbb
imul
in
lcall
push
inc
xor
push
mov
pop
jnp
sti
out
jne
lea
adc
cmp
iret
mov
sbb
inc
and
pop
loope
mov
imul
je
dec
pop
xlat
mov
or
in
dec
inc
iret
adc
dec
sub
pop
iret
mov
enter
das
pop
rcll
shll
and
stc
xchg
in
add
add
pop
sub
jb
adc
push
dec
in
loopne
movsb
js
insl
adc
push
mov
shlb
stc
aam
inc
push
adc
sbbl
insl
int
inc
inc
mov
or
sub
in
sarl
aaa
xchg
das
jg
adc
and
mov
andl
xor
adcl
xor
or
cmpl
movl
movl
movl
jmp
movl
not
jg
pushl
push
push
push
pushl
push
pushl
call
sub
xorl
andl
andl
addl
addl
adcl
movzbl
adc
jmp
sti
loopne
stos
dec
or
xor
xlat
xor
ja
ja
mov
cmpsl
and
or
repnz
stos
mov
pop
xchg
ljmp
cwtl
mov
jnp
jge
pusha
dec
test
adc
cmpsb
divl
lea
pop
ljmp
punpcklwd
inc
das
shrb
cmp
movb
ss
sbb
push
push
adc
out
mov
pusha
add
mov
loopne
mov
stos
in
pop
xor
ffree
push
push
fsubrp
mov
popa
lret
lcall
lea
jle
xor
lea
in
push
push
jg
add
rorl
shrd
push
cld
jo
or
iret
jecxz
loope
adc
fldcw
pusha
xchg
bound
sarb
xchg
jp
mov
mov
data16
pop
adc
add
cmp
xor
cmc
and
mov
ljmp
add
addl
fsubl
inc
jmp
dec
nop
in
outsl
and
add
test
cmp
imul
and
ss
xchg
test
inc
sub
sub
mov
jecxz
insb
or
in
out
xchg
sub
popf
adcl
std
dec
xchg
ret
imul
sahf
cmpsl
movsl
test
ja
or
and
or
movsl
jg
sub
jmp
aas
xor
push
fbstp
arpl
roll
push
jle
jge
mov
pop
push
fadds
cmp
mov
lret
ds
arpl
mov
mov
jo
fwait
std
ljmp
mov
int3
out
lcall
pop
idivb
bound
repz
rorl
sti
les
sub
adc
les
lahf
cmp
push
cmp
out
into
cmp
pop
in
jmp
in
ja
inc
mov
push
jne
and
icebp
lcall
sahf
nop
push
inc
lret
mov
test
and
fadds
movsb
nop
mov
dec
bound
psllw
pop
mov
shr
inc
aad
lds
negb
mov
add
test
test
outsl
xor
sahf
lcall
pop
push
sbb
out
adcl
xor
inc
mov
pop
and
sub
fmuls
push
inc
imul
add
ret
and
test
mov
std
pop
jbe
out
xchg
cmp
dec
insb
cmp
cmc
dec
mov
lahf
adc
ficomps
sub
jge
cwtl
sub
inc
pop
mov
adc
outsb
push
sbb
push
sbb
movsb
mov
push
pop
cmp
hlt
jo
mov
imul
inc
cmp
and
push
xor
cmp
cmpsb
add
test
aad
popa
sti
xorl
sbb
cmpsb
mov
scas
push
sub
inc
shr
or
dec
jmp
mov
push
inc
in
movsl
push
aam
out
mov
or
mov
out
lods
fs
in
mov
frndint
fwait
mov
push
sbb
cwtl
cmpsl
int
test
fldl2t
in
aaa
cmp
pop
dec
sub
lds
jmp
aaa
les
addr16
jge
sub
mov
mov
sbb
mov
xchg
pushf
pop
into
ret
clc
pop
cmp
mov
mov
fmull
mov
adc
arpl
lret
inc
in
lahf
loope
mov
xor
dec
push
bnd
sbb
in
jo
adc
inc
jle
inc
lcall
xchg
sahf
test
outsb
mov
movsb
outsl
jbe
movl
mov
sub
inc
imul
jg
cmpl
mov
push
jb
adc
sbb
fidivs
dec
int3
cmp
aad
aaa
xchg
jne
xor
mov
fstpt
push
add
and
xchg
lret
adc
push
cmp
fdiv
sub
lcall
mov
jno
ret
xorl
and
mov
lcall
mov
jns
ret
pop
mov
decl
or
pop
push
cmp
sub
pop
mov
sti
cmp
stos
mov
sbb
ja
vandpd
jns
add
adc
dec
call
out
adc
jg
push
nop
or
cmc
jl
test
add
xchg
cs
outsb
bound
fiadds
out
inc
inc
dec
pop
pop
frstor
pop
adc
pusha
mov
daa
arpl
and
xchg
test
popf
aam
shll
lods
sub
mov
adc
xchg
dec
add
mov
cltd
fldenv
stos
mov
fimuls
std
in
dec
push
sbb
data16
icebp
fistl
jp
cltd
aas
dec
dec
push
iret
jecxz
xchg
cmp
pusha
imull
hlt
push
inc
sub
cmp
xor
leave
ds
adc
sbb
inc
sbb
in
dec
mov
sbb
sub
mov
sti
dec
mov
popa
ficompl
andb
mov
jne
int
call
cmp
jl
repz
nop
inc
xchg
ja
sub
push
and
sub
dec
movsl
ljmp
sahf
movsb
push
scas
pop
xor
test
dec
lods
mov
mov
xor
orb
mov
dec
xchg
pop
mov
inc
out
sub
xchg
inc
or
stos
or
sbb
add
sub
jbe
sbb
test
out
xchg
mov
lret
jne
aam
test
fwait
movsb
jbe
ss
jnp
mov
clc
arpl
lcall
pop
xlat
mov
pop
ret
or
aad
push
ljmp
or
call
fsubrs
jbe
sbb
mov
int3
loopne
sbb
cs
sub
adc
icebp
dec
fstps
pop
or
inc
out
sahf
push
in
stc
fyl2xp1
cmp
mull
in
movsb
pop
test
repnz
inc
dec
pop
add
xchg
pop
cmpsl
pop
stos
pop
mov
dec
adc
lock
icebp
das
or
lahf
gs
cltd
adc
hlt
jmp
mov
fwait
pop
je
jle
fcomps
dec
out
dec
in
mov
mov
and
cmpsl
std
inc
ficomps
outsb
jmp
or
push
sbb
ret
aaa
sbb
inc
jmp
test
in
les
inc
cmp
ret
sub
xchg
push
cld
sbb
lahf
inc
mov
sub
cmp
inc
outsl
sub
mov
and
insl
data16
mov
dec
xchg
jbe
shrl
hlt
sbb
jl
adc
xchg
pop
dec
test
and
mov
cmpsl
movd
and
xor
mov
pop
into
pop
mov
ja
xchg
test
scas
adc
jae
fimull
cwtl
push
cmp
dec
enter
cmpl
movsl
loop
lds
out
cmpsl
repz
mov
or
repnz
xor
les
adc
movl
movl
sub
movl
movl
and
movl
movl
movl
xor
or
adc
movl
cmpl
movl
mov
jmp
not
jl
push
pushl
pushl
push
call
add
sbbl
add
sbbl
xorl
sbbl
notl
or
movl
addl
movl
movl
movl
mov
or
mov
movl
dec
movl
movl
cmpl
movl
movl
movl
movl
jmp
mov
jge
push
call
movl
orl
orl
add
xorl
xorl
xorl
and
movl
cmpl
movl
mov
jmp
mov
mov
jb
push
pushl
push
push
pushl
push
pushl
push
push
pushl
pushl
call
orl
sbbl
adc
addl
movl
sbbl
movl
add
movl
jmp
and
jnp
sub
mov
push
xchg
dec
das
aam
ja
notb
ja
jno
in
sbb
ljmp
jnp
xchg
pop
pop
mov
enter
pop
or
push
dec
or
push
fstpl
sbb
mov
pmaxub
pop
js
repz
sbb
xor
mov
mov
dec
mov
sti
shr
push
inc
bound
mov
pop
lea
jbe
dec
sbb
mov
cmp
rcrb
int3
das
jne
out
or
outsb
fmul
jle
lahf
fistpll
jno
fistpl
movsl
jne
aas
dec
mull
outsb
movsb
push
push
inc
push
adc
adc
leave
jb
mov
cmpsb
les
sbb
rolb
mov
insb
rolb
mov
lods
cs
int
rorb
jae,pn
sbb
xchg
mov
das
mov
sbb
lds
xor
fs
xor
push
dec
jo
sbb
lock
pop
dec
jge
int3
popf
jmp
xorb
cwtl
or
sub
sbb
mov
movsl
dec
out
ds
in
fcoms
test
cmp
and
adc
ret
adc
sub
jbe
loopne
pop
mov
sub
sbb
lods
jnp
loop
sub
xor
test
movsl
insl
or
mov
pop
mov
out
push
push
adc
pop
outsl
inc
ret
addr16
mov
fistpll
test
and
adc
or
inc
in
xorb
rcr
xchg
inc
inc
lret
out
loope
negb
or
sbb
pop
push
cmp
xchg
js
and
cld
mov
pop
sub
push
fsub
push
ret
dec
jge
mov
and
movsl
cs
pushl
adcb
fs
jp
and
push
lcall
inc
jg
repz
mov
push
int
push
lcall
pop
jne
mov
add
pop
fwait
addr16
dec
std
add
sbb
adc
ret
xchg
hlt
pop
dec
out
lods
xchg
lods
cmp
mov
cltd
pop
les
lds
sub
mov
data16
jp
out
addr16
lods
adc
adc
jbe
call
jmp
fnstsw
push
lods
incl
mov
add
das
adcl
pop
cmp
and
stos
pop
loopne
je
jne
push
xchg
aaa
iret
jnp
push
sub
jg
rorb
mov
pop
fiaddl
repz
fidivs
push
outsl
clc
iret
xchg
mov
mov
push
mov
into
cmc
mov
mov
or
andl
add
mov
jge
cmp
das
sbb
outsb
sbb
pop
adc
mov
mov
dec
sub
xor
inc
pop
jae
xchg
push
add
mov
add
aam
fildll
jl
pusha
inc
ds
scas
nop
xchg
push
daa
jb
or
mov
and
das
loop
nop
addb
and
pop
mov
jge
push
push
pop
lock
pop
call
pop
sbb
dec
int3
lock
inc
dec
xchg
xchg
stos
loopne
or
je
or
push
aaa
imul
lock
mov
fsin
push
rol
add
gs
sbb
aas
insl
xor
jp
enter
mov
icebp
hlt
mov
dec
fldenv
ror
mov
push
mov
mov
mov
xchg
in
fldl
sub
ljmp
xchg
pop
dec
xor
shll
cld
fcoml
jmp
ffree
repz
in
dec
cmp
push
inc
imul
fxch
mov
adc
rolb
inc
mov
lea
mov
aaa
dec
or
mov
rcrl
dec
pushf
inc
lcall
fdivrs
rcrl
outsl
lods
inc
inc
hlt
cmp
xchg
data16
pop
daa
test
fcomp
jae
xchg
orl
xor
jo
and
es
popa
xchg
enter
add
clc
add
sarb
imul
inc
mov
jg
jno
push
mov
xchg
pusha
daa
sub
sbb
xchg
dec
cmpsl
outsb
popa
rcl
loopne
in
mov
jnp
inc
ljmp
lahf
int
push
sahf
add
flds
xchg
pop
inc
fsubr
mov
call
and
add
xor
test
lahf
pop
nop
leave
dec
mov
jecxz
push
shrb
fidivs
and
push
mov
mov
pop
push
push
sub
and
sbbb
cmp
roll
fsubs
and
nop
in
std
pusha
xor
or
jl
enter
test
js
aaa
jnp
push
xchg
pop
jmp
lret
and
sbb
adc
push
and
and
sbb
xchg
aad
jle
ljmp
out
in
popf
mov
loop
fwait
jg
insl
push
jle
mov
lods
mov
jns
gs
jne
lret
in
xor
lret
movsb
or
fsubrp
iret
sbb
inc
fwait
push
mov
lahf
mov
sbb
mov
test
mov
mov
push
push
push
scas
sub
jo
mov
xchg
bswap
xchg
mov
xchg
pop
inc
cli
lds
xchg
mov
and
lods
pop
push
jecxz
mov
xor
jp
popf
dec
sub
jbe
adc
pushf
inc
into
add
enter
or
ret
cmpsb
and
adc
ret
out
in
adc
adc
jg
adc
xchg
into
mov
out
xlat
mov
adc
pushf
sub
les
dec
bound
adc
add
cmp
adc
sti
push
mov
push
and
mov
popf
xor
rorl
lret
sti
mov
arpl
aaa
mov
push
xchg
mov
mov
lds
int
or
lcall
inc
sub
iret
or
sbb
xlat
pop
pushf
std
repz
xlat
push
push
mov
and
pop
jg
inc
dec
ror
mov
incb
jge
add
pop
pop
faddl
aam
ror
push
pushf
data16
adc
push
mov
mov
fdivl
mov
pop
dec
sbb
pusha
out
mov
mov
cltd
push
mov
inc
jbe
lret
pop
push
lock
jle
mov
dec
xchg
cltd
repz
ret
inc
inc
lret
inc
ficoms
push
adc
dec
int
test
fdivrl
jle
adcl
in
inc
push
out
lods
in
incb
adc
ret
testb
clc
popa
mov
push
xchg
mov
mov
jo
and
jecxz
and
mov
scas
and
addl
xor
and
xor
data16
xor
mov
xor
dec
push
jb
push
mov
nop
shlb
sub
xchg
hlt
dec
js
shr
movl
inc
movl
xorl
movl
mov
xor
movl
not
movl
mov
addl
jmp
in
outsl
dec
gs
notb
inc
test
cmpsl
les
ja
sahf
adc
pop
cmp
xor
pusha
cmp
or
sub
mov
in
lret
or
stos
sub
inc
or
jne
inc
lret
and
int3
xchg
cmp
xor
dec
out
xchg
push
jp
mov
mov
dec
xchg
pop
mov
in
sub
adc
in
outsb
sbb
outsl
hlt
adc
and
dec
test
cltd
jne
mov
out
xor
xchg
pop
push
jb
movsl
int3
lods
test
loopne
loope
mov
xchg
je
pop
out
test
pop
xor
gs
xchg
mov
jl
ret
ja
xlat
lock
sar
les
test
lock
and
mov
jmp
mov
mov
mov
pop
and
fisttps
pop
lahf
dec
mov
xchg
sub
jbe
scas
cli
lcall
add
mov
adc
xchg
pop
push
push
dec
repnz
add
pop
jmp
in
dec
xlat
ljmp
push
push
xor
xor
outsb
rcrl
sbb
loopne
mov
add
jge
adc
loope
dec
mov
aam
in
mov
addr16
insl
adc
adcb
dec
or
icebp
imul
mov
cmp
adc
mov
test
outsb
and
loope
xchg
jge
es
in
icebp
sti
mov
nop
cmp
nop
fists
pop
push
dec
aam
inc
inc
mov
xor
add
incb
fistpll
or
sbb
inc
xchg
pushf
mov
jnp
and
push
scas
cli
cmp
sub
fdivp
and
lea
sbb
mov
in
and
movsl
lods
mov
lret
jl
mov
pop
cmpsb
pop
cmpl
aaa
out
xor
dec
loope
push
into
xor
popa
bound
rolb
inc
mov
sub
int3
inc
inc
xchg
inc
gs
inc
sub
mov
lahf
cmp
movb
jmp
cmp
call
lret
jmp
jnp
popf
sub
fdivrl
mov
mov
ret
pop
inc
push
mov
pop
ljmp
ret
add
push
mov
in
sbb
stos
jno
add
xchg
add
mov
add
mov
repz
stc
stc
jmp
or
test
loopne
or
mov
mov
push
jecxz
jb
scas
jnp
mov
xor
dec
dec
ds
fwait
out
mov
jbe
push
leave
je
fisubs
in
cmpsl
inc
mov
mov
mov
pop
push
cld
mov
inc
nop
imul
stos
xor
lods
add
std
mov
cmp
sub
add
adc
popf
xchg
sti
jb
jo
xchg
pop
sub
mov
jmp
pop
cmp
out
sti
scas
or
xchg
dec
dec
xor
mov
bound
repnz
jns
cmp
mov
add
shll
inc
je
xchg
mov
fadds
loopne
dec
mov
and
imul
jp
fcmovu
inc
mov
lahf
xor
dec
and
lea
adc
adc
add
in
jg
xor
ror
inc
xchg
fsts
int
cmc
add
jge
dec
fmul
jle
fistpl
mov
mov
ret
das
xor
inc
xchg
jge
mov
mov
jns
fldenv
fnstsw
out
and
daa
aaa
jae
outsl
push
lret
sub
lock
fwait
jns
mov
daa
inc
mov
adc
mov
pushw
inc
mov
dec
sub
insb
jne
cli
popa
fidivs
dec
cmpsb
test
dec
scas
sbb
inc
sub
push
adc
add
push
std
lret
jno
sub
pushl
aad
repz
mov
out
inc
sbbb
stos
inc
mov
in
pop
pusha
jo
es
rcll
push
pop
dec
ret
pop
add
dec
push
xor
insb
pop
or
out
rcll
jecxz
and
leave
jne
mov
pop
cli
aaa
ss
in
imul
std
cs
adc
addr16
lcall
test
jmp
ret
stc
mov
or
pusha
add
sti
arpl
mov
dec
sub
jle
out
adc
or
xchg
cwtl
jns
push
xor
mov
sub
mov
in
lods
pop
sbb
pop
jns
mov
pop
pop
std
rcrl
fstps
dec
xor
mov
adc
sub
mov
xchg
ret
add
jge
push
frstor
out
cmpsb
jg
div
inc
int
daa
clc
mov
pusha
jb
add
fisttpl
dec
pop
xor
sahf
dec
pop
inc
js
aaa
cmp
adc
je
in
out
jg
testb
push
test
inc
paddusb
lret
in
adc
mov
and
xor
roll
pop
inc
pusha
loopne
addr16
pop
dec
or
mov
out
dec
jb
push
aaa
out
scas
mov
pop
dec
scas
or
arpl
lcall
xor
mov
pop
sahf
or
cmp
xchg
sahf
mov
scas
pop
insb
dec
pop
mov
pop
lds
test
xchg
dec
imul
add
sahf
fs
cmpsl
pop
adc
or
jbe
sti
jmp
sbb
xor
pop
xor
and
test
and
mov
es
dec
leave
adc
jns
divl
xlat
fistl
sub
imul
call
repnz
add
push
aas
mov
mov
sub
js
mov
in
testb
mov
jb
adc
or
out
insb
dec
mov
xorb
sbb
out
cli
jb
test
push
lock
in
rcll
sub
aad
pop
pop
or
stos
xor
test
inc
sbb
scas
ror
pop
lcall
xor
loop
add
ljmp
push
lret
xor
sahf
cmp
jb
jae
jns
fisubrs
jl
daa
dec
insb
sti
push
adc
cmp
fwait
mov
popf
lock
test
mov
sub
jl
or
mov
xchg
push
and
hlt
dec
jg
hlt
and
pop
icebp
sahf
push
push
adc
emms
jbe
arpl
icebp
pop
leave
sub
xchg
insl
sarb
push
push
jmp
mov
sbb
sbb
mov
pop
sbb
stos
push
mov
mov
shl
sbb
mov
inc
fldt
and
push
xor
iret
nop
push
sub
dec
xchg
aas
pop
ljmp
pop
jae
mov
div
push
imul
in
jl
lret
outsb
out
pop
or
dec
mov
mov
sbb
std
jbe
mov
es
lea
push
mov
orl
push
adcl
push
andl
push
push
adcl
call
adc
mov
subl
mov
xor
mov
sub
mov
movl
jmp
mov
daa
xchg
gs
or
mov
fdivs
xchg
xor
test
call
xchg
pop
movsb
jmp
aam
les
gs
sbb
jbe
xor
test
xchg
jg
jnp
sub
mov
push
pop
mov
push
fistpl
cmp
xchg
inc
cmc
rorb
fwait
push
mov
ss
push
adc
push
scas
roll
and
inc
es
add
jne
pop
aad
test
cld
pop
leave
jg
mov
and
jmp
mov
fwait
jl
push
add
mov
or
mov
add
shrb
je
imul
xchg
mov
and
pop
test
pushf
jl
movsb
dec
dec
stos
lods
pop
test
hlt
mov
dec
jle
sub
dec
stos
push
push
fs
jns
sbbw
add
pusha
pop
out
test
cmpsb
in
mov
mov
and
ffreep
ljmp
adc
lods
mov
out
fwait
jecxz
pop
adc
aaa
mov
lcall
dec
test
dec
dec
sub
xor
mov
push
cltd
xchg
sub
aad
repnz
int
sub
addr16
jecxz
inc
in
imul
jbe
loop
inc
mov
or
into
inc
fidivl
into
dec
andl
cmp
inc
push
call
sub
xor
sbbb
xor
jnp
jns
pop
mov
cli
push
jle
and
lret
xchg
and
mov
mov
daa
loope
or
stos
rolb
or
fisubrl
inc
lret
mov
out
pop
fcompl
xor
sub
mov
jmp
inc
lods
shr
xor
adc
xor
adc
idivb
sbb
xchg
jl
mov
pop
icebp
adc
cmp
adc
xchg
sub
xchg
or
pop
lea
hlt
push
idiv
sub
clc
mov
daa
adc
insl
pushf
loopne
or
inc
scas
das
jnp
mov
cmp
mov
mov
push
add
xor
pusha
xor
add
bnd
push
mov
daa
sub
scas
test
popf
popf
fs
mov
push
jge
push
pop
hlt
jecxz
je
xchg
les
push
cmp
pushf
int3
notb
repnz
out
fisttps
sbb
push
rorb
iret
sub
or
bnd
or
fmuls
push
and
sbb
mov
sti
sub
mov
cmp
cmp
pushf
sub
or
push
sub
add
roll
dec
mov
cmp
sti
icebp
lds
push
int
imul
rcrl
shrb
pop
mulb
mov
fistpll
add
sti
sahf
call
je
jo
or
jle
push
jbe
sub
jb
inc
adc
jae
lret
sbb
jl
xchg
into
inc
xchg
cmp
notb
xchg
aas
repz
into
std
enter
cmpsl
push
jno
jo
cmp
cmp
int
sub
jnp
sahf
mov
mov
cmpsb
adc
push
and
in
pusha
addr16
shl
fistps
outsl
jb
repnz
jecxz
inc
xor
mov
push
test
out
pop
or
pushf
out
pop
lret
pop
pushf
shll
fildll
mov
cmp
subb
aam
push
mov
daa
lcall
or
dec
lock
push
dec
aad
icebp
mov
jmp
push
adcl
repz
mov
sub
cmpb
cmp
and
out
aam
pop
inc
mov
adc
repz
sub
pushf
movsl
xor
xchg
sub
jecxz
push
mov
dec
and
stc
cs
xor
mov
xor
mov
lock
push
test
out
push
mov
pop
mov
jae
lods
nop
mov
insb
push
lcall
std
adc
fimull
ljmp
ret
pop
cmp
imul
sub
sub
pop
aam
sti
or
orb
testb
adc
push
lods
add
mov
sbb
iret
in
mov
bound
push
insl
xchg
xorl
ret
fimuls
dec
jg
mov
add
cs
jecxz
jae
jl
cmp
adc
inc
fsubr
dec
fwait
addr16
insl
sub
xchg
insl
adc
cmpsb
sbbb
popa
or
push
in
aad
in
mov
outsl
mov
lods
cmp
fcoms
sbb
rol
jb
leave
cs
stos
inc
das
bound
ds
aam
pop
pop
jae
or
test
inc
push
dec
jge
cmp
lcall
dec
inc
fistpl
cli
int3
int3
fnstcw
shrb
and
repz
stos
in
in
cmp
inc
inc
jp
add
mov
popf
ret
dec
mov
mov
pusha
stc
ss
repz
xor
jo
in
mov
out
lds
fcoms
ficompl
mov
nop
ja
mov
mov
setl
xor
mov
adc
sbb
out
out
lea
outsl
les
cmp
pop
incb
xor
addb
sbb
and
iret
jge
testb
dec
out
sbb
xchg
dec
rcrl
arpl
sbb
out
mov
inc
fcomps
movsb
frstor
pop
stc
sbb
fisubrs
js
push
add
mov
add
mov
push
lods
sbb
popa
out
mov
pop
or
push
testl
xor
inc
fisubrs
jbe
adc
fnsave
adc
inc
clc
fcomip
xchg
or
sub
test
rcrl
repz
jb
adc
pop
adc
scas
imull
cld
es
jecxz
pop
aaa
push
jmp
loope
sti
inc
sub
lea
sti
mov
jmp
cs
and
and
scas
mov
or
adc
push
xchg
pop
out
int3
mov
dec
add
adc
or
cli
or
sarb
mov
repnz
mov
mov
xchg
rcl
in
mov
or
fisubs
and
mov
rclb
mov
hlt
clc
push
ret
adc
push
and
aad
lock
xlat
xor
lods
sbb
xchg
lea
jae
adc
lods
mov
xor
icebp
sahf
jns
arpl
ja
push
and
jl
ret
or
xchg
and
sub
ljmp
inc
dec
test
xlat
inc
mulb
cmp
jns
jmp
or
mov
test
adc
push
and
out
inc
mov
scas
lret
aam
sbb
and
shll
xchg
lods
arpl
sahf
ds
pushf
add
push
xchg
dec
in
and
sub
mov
adcl
lea
mov
mov
or
subl
and
mov
or
adcl
xor
movl
cmp
movl
jne
mov
and
mov
shrd
adcl
shr
adc
mov
mov
orl
shl
xor
andl
jmp
sub
sub
sub
adc
xchg
jecxz
and
xchg
movsb
xchg
addb
push
pop
scas
sbbl
mov
mov
mov
pop
mov
mov
ret
xchg
pop
and
and
add
or
sbb
dec
sbb
xlat
pop
add
cmp
cmpsl
test
push
cwtl
dec
int
imul
fildl
pop
xchg
loop
cmp
das
in
inc
and
in
mov
jno
loopne
popa
dec
std
in
jmp
mov
inc
rolb
inc
mov
sub
sahf
xchg
dec
sub
movl
popa
shll
stc
inc
pop
mov
sbb
xor
cli
pop
cld
mov
cmpsb
mov
add
mov
jmp
sahf
add
loop
xor
mov
sub
fcoml
pavgb
or
int
adc
jl
sarb
arpl
shlb
jbe
or
push
inc
cwtl
push
hlt
cwtl
mov
out
sbbl
mov
movsb
bound
xor
lods
shlb
jge
movsb
fs
popa
mov
adc
adc
fwait
and
cmp
cmp
insb
sti
fsubs
ror
adc
push
cmp
out
push
out
jecxz
lret
ss
cmc
daa
fcomp
or
sub
gs
pop
vpmovmskb
cld
mov
out
push
cmp
jecxz
dec
test
sbb
jp
pop
pusha
inc
and
adc
jmp
stc
xchg
xor
mov
movaps
popa
subb
push
ret
mov
ret
pusha
xchg
add
addr16
jp
pusha
in
daa
in
mov
movsl
jle
pop
repnz
imul
xor
fwait
xlat
adc
fs
out
arpl
sub
aad
loop
cwtl
cmp
fcmove
lods
lock
jns
cmp
shlb
mov
fdivrp
rcrb
dec
rcrb
movsl
test
or
adc
xchg
out
imul
addr16
mov
lods
inc
scas
jge
fmull
scas
add
adc
imul
xor
mov
std
pop
add
or
rolb
lret
rorl
lods
sahf
jae
jns
fs
mov
add
stos
ret
lahf
data16
mov
mov
movl
mov
icebp
ja
cmp
test
fxam
push
inc
subb
movl
daa
dec
and
stos
int3
sti
frstor
xor
cwtl
sub
pop
stc
or
test
jne
cmc
rcrl
add
pop
fsubrp
xchg
push
out
jmp
fisttpl
clc
inc
ret
and
dec
movsb
gs
xor
lock
sti
pop
cmpsb
cmc
xchg
pop
push
lods
outsb
jne
insb
fdivrs
jne
jnp
mov
sub
insb
push
jbe
stos
adcl
sbb
pushf
aaa
fmuls
aaa
mov
hlt
pop
and
outsl
or
push
sub
out
test
mov
pop
in
stos
ret
adc
les
adc
imul
loope
repz
mov
jno
outsb
sti
cwtl
jmp
push
jge
enter
ret
or
sub
aad
aaa
dec
lret
inc
inc
movsb
jns
lods
test
inc
mov
popf
mov
and
les
dec
inc
cmp
mov
addr16
js
out
jg
pop
mov
ja
jns
or
pop
lahf
test
call
xor
out
jbe
scas
and
inc
mov
jnp
mov
fistps
mov
shll
push
mov
js
and
jecxz
jmp
fsubl
push
stc
lret
stos
sub
adcl
das
cmp
scas
mov
inc
int
je
dec
push
mov
je
pushl
push
inc
jno
jge
shrl
andl
subb
lods
scas
aam
add
mov
js
pop
fistps
and
sub
insl
inc
add
sub
cmp
pop
fwait
stos
shr
push
jmp
or
push
in
rcrb
movsl
inc
lret
adc
decb
sbb
mov
scas
or
jb
sar
lret
xlat
addb
mov
mov
int
lcall
and
dec
cmpsl
jbe
add
mov
pop
movsl
fisubrs
into
pop
sti
fmull
popa
ljmp
sub
pop
xor
daa
mov
add
cmp
adc
bound
inc
fcoml
inc
outsl
or
mov
mov
jg
es
jmp
lock
lods
jne
scas
loope
xor
jp
mov
mov
or
movsl
and
test
push
or
call
or
lcall
test
cmc
sub
push
push
inc
popa
xchg
adc
sub
and
jns
sahf
adc
popa
xor
jnp
mov
sbb
cmp
pushf
mov
mov
ss
inc
hlt
lret
adc
jmp
add
iret
push
aam
gs
outsb
mov
sbb
mov
inc
mov
jg
dec
pop
xchg
setle
adc
xlat
xor
cmp
sub
enter
push
arpl
adc
in
mov
hlt
pop
cltd
sti
or
mov
cmc
push
cmpsl
adc
and
xor
inc
sub
or
push
pop
and
repnz
pop
insl
test
aad
mov
sbb
mov
imul
int
stc
dec
push
xor
xor
add
add
cmp
shll
or
push
data16
movl
neg
adc
sbb
mov
xchg
outsb
dec
and
movl
sub
push
sub
cld
lods
stc
sub
outsb
jno
lret
xchg
loop
mov
mov
xchg
adc
xchg
cmpsb
movsb
xchg
cmp
icebp
push
xlat
xor
loop
mov
and
sub
aas
mov
add
cld
stos
and
dec
pop
cwtl
test
push
int
sbb
popa
adc
push
ljmp
arpl
xor
push
rorb
push
rcll
and
cli
cmpsb
add
dec
cmp
std
add
or
lret
into
dec
push
repz
mov
fisubl
mov
mov
mov
mov
cmp
mov
test
dec
jg
mov
jle
pop
push
ja
push
inc
fwait
and
inc
fstpl
arpl
xor
hlt
in
lahf
inc
sub
dec
jle
ret
cltd
mov
xor
sahf
fisttpl
cmp
sbb
loopne
jg
pop
insb
lahf
gs
push
aas
sbb
push
or
push
cmp
lock
xchg
and
jle
sahf
cltd
sarb
dec
out
cmp
into
add
or
rcrl
aam
mov
and
mov
mov
sti
inc
iret
cmp
jmp
out
xor
adc
mov
lock
out
insl
sbb
xchg
aaa
sub
xor
mov
lock
mov
rorb
mov
movl
cmp
jne
notl
mov
mov
xor
cmpl
mov
movl
mov
jmp
mov
movl
jl
push
call
xor
or
movl
movzbl
xor
and
mov
xor
mov
xorl
mov
jmp
daa
mov
or
push
cmp
xchg
nop
pop
xorl
into
es
das
in
outsb
xor
lea
cmpsb
and
cmp
mov
or
mov
insb
push
out
sbb
cmp
xchg
dec
adc
bound
mov
dec
xchg
cmp
and
mov
insb
mov
sbb
jne
out
inc
jmp
sbb
outsb
cmp
sub
popf
xchg
arpl
xchg
add
adc
les
adc
inc
iret
mov
jge
iret
dec
dec
repz
pop
lret
lds
cmp
cmpsb
push
pushl
mov
inc
ds
dec
pop
aas
out
insb
dec
mov
popf
imul
pop
cli
test
xor
dec
fucomip
adcb
and
and
jp
push
ja
mov
adc
je
mov
mov
pop
loope
pusha
int3
add
sub
push
dec
mov
loop
movsl
jae
jno
fadd
adc
ja
cmp
ret
loope
adc
mov
cli
xchg
dec
pop
rcl
clc
xchg
cmp
cmp
add
bound
xor
jge
xchg
hlt
push
jmp
or
pop
pop
fwait
lcall
addb
lods
adc
dec
fldenv
inc
dec
daa
dec
dec
xor
pop
jno
test
pop
xlat
hlt
movsb
movl
cmp
into
ds
je
ret
out
popf
mov
aas
xchg
xor
dec
jp
repz
dec
adc
or
mov
movsb
daa
jmp
or
xor
mov
mov
add
outsb
xor
leave
cmpl
js
jl
leave
std
jle
adc
jne
es
data16
or
push
lods
dec
push
test
scas
inc
repnz
daa
loope
ret
icebp
scas
aam
jmp
jp
fiadds
in
test
xlat
inc
and
pop
mov
leave
popf
call
in
je
out
push
push
jg
sbb
pop
sub
jmp
dec
or
gs
push
mov
cmc
notb
ss
clc
test
outsb
stos
add
arpl
dec
xor
inc
mov
enter
sti
bound
addr16
addl
pop
cmp
cld
daa
mov
arpl
push
pop
dec
jle
jne
rolb
cltd
lds
mov
xchg
mov
fwait
sub
xchg
push
or
pop
and
xchg
xchg
jbe
int
stos
inc
add
xchg
dec
sbb
nop
sbb
fucom
cmpl
push
mov
data16
movsb
lock
out
cmp
push
lods
das
jmp
push
cld
cltd
rclb
inc
out
add
jno
cmp
sub
xchg
jne
xchg
mov
xchg
js
or
xchg
adcb
or
sahf
cmp
test
xor
mov
xchg
xchg
push
mov
mov
adc
sbb
cmp
sti
clc
mov
bound
pop
jecxz
pop
xor
loope
cmpsb
sub
scas
push
xor
add
cmc
push
cmp
xor
mov
mov
ret
cmp
movsl
out
stc
lahf
rclb
stos
mov
lods
std
xchg
aad
pop
xor
cwtl
or
xor
and
pop
rol
subl
fstpl
pop
push
pop
pop
mov
jge
aad
mov
mov
movsl
mov
pop
cmp
push
sbbb
fwait
idivb
pop
insl
jl
adc
fisubrl
mov
xchg
pusha
shrl
fadds
xchg
add
shll
lods
push
shrb
lahf
dec
mov
adc
inc
adc
pop
stos
or
adc
xchg
mov
and
sar
bnd
pop
lret
inc
lods
pop
jp
daa
sbb
or
mov
sti
and
pop
imul
mov
add
jecxz
dec
mov
xlat
test
aad
inc
shlb
lcall
stos
inc
call
loop
xor
lret
add
and
xchg
test
jae
jle
mov
push
ja
jns
sbb
mov
aam
sub
inc
pop
cmp
mov
in
pop
mov
mov
mov
iret
int3
xchg
fmuls
xor
aad
movsl
xchg
mov
cwtl
xor
jl
mov
in
int
ljmp
dec
aas
dec
add
inc
popf
in
insl
mov
mov
and
jmp
jae
out
xlat
ljmp
fwait
outsl
jle
bound
mov
lods
andb
or
sbb
sbb
jge
mov
lret
sbb
inc
lcall
test
mov
mov
add
jo
or
mov
push
pop
or
xor
movsb
jbe
sbb
or
mov
aad
xlat
sbb
jnp
stc
or
add
ds
adc
idivl
dec
sbb
jp
jmp
xor
jnp
fs
xchg
push
add
inc
and
daa
xchg
jecxz
dec
ret
adc
out
addl
les
cwtl
mov
sbb
movsb
pop
negb
lret
popf
stc
ret
mov
xchg
ret
sub
dec
rol
pop
xchg
xor
sbb
adc
or
call
sbb
xchg
rcl
push
mov
xor
cmp
hlt
popf
sbb
pop
rclb
mov
jno
xchg
mov
or
ret
adc
mov
loop
pop
lock
fwait
mov
or
add
lock
out
idiv
mov
ljmp
jno
mov
loopne
insb
bound
sbb
aaa
out
pushf
call
loop
test
xchg
pop
jb
stos
in
bnd
ss
addr16
cmp
enter
push
insl
lods
mov
push
lock
mov
aad
mov
sub
sub
leave
jl
or
add
fldcw
sti
outsb
popl
mov
jne
popf
push
sbb
jo
in
orb
dec
addr16
xorl
cltd
cmpsb
push
mov
lret
sahf
xchg
hlt
in
out
adc
or
rcll
pop
adc
std
mov
adc
cmp
cmpsb
mov
mov
inc
dec
iret
adc
inc
adc
pop
movsb
test
xor
loope
dec
jl
inc
inc
dec
mov
xchg
int3
xor
aam
in
push
mov
cmp
pushf
push
in
sub
lret
ror
mov
sub
cld
testl
pop
cmp
cli
pop
and
inc
xchg
scas
lcall
cmpb
push
in
adc
mov
iret
or
ja
mov
jae
adc
adc
adc
or
out
sahf
leave
andb
push
div
lea
dec
or
lcall
sbb
jl
jae
outsb
sbb
orl
add
vpmacsdqh
inc
jp
sbb
add
push
out
mov
pop
nop
pop
xor
jno
sbb
je
shrd
andl
mov
cmpl
movl
mov
jmp
movl
movl
jne
push
push
push
push
push
pushl
push
push
call
orl
or
xor
xor
xor
add
adc
adc
sub
add
mov
xor
xorl
shr
xorl
mov
orl
xor
or
movl
shl
cmpl
movzwl
movl
jmp
movl
movl
jle
push
call
not
or
sub
sub
sbb
sub
mov
mov
sub
imul
mov
cmpl
not
movl
jmp
mov
jne
push
pushl
pushl
push
push
call
sbb
adc
neg
subl
adc
mov
mov
not
add
mov
mov
mov
shrd
shr
adcl
mov
mov
xor
add
shl
incl
xor
jmp
jle
jl
dec
mov
push
mov
jp
ja
or
pop
sub
pushf
mov
sub
mov
mov
xchg
cmp
lods
xchg
or
mov
mov
mov
testb
xor
test
xchg
leave
sbb
mov
pushf
pop
mov
ja
and
xchg
outsb
aad
insb
xorl
mov
sub
jecxz
mov
jecxz
sub
orb
aas
pop
cmp
fsubr
imul
aad
daa
inc
in
sbb
jmp
xor
xchg
push
daa
lcall
jg
mov
mov
xchg
mov
insb
or
inc
xor
sub
xor
aam
xchg
fwait
mov
mov
mov
dec
leave
imul
loopne
mov
dec
icebp
movsb
insb
mov
loop
jo
jg
mov
add
aad
pushf
mov
cmc
in
ret
and
mov
xchg
out
pop
stc
mov
mov
and
cmp
xor
scas
pandn
mov
jae
mov
add
mov
rcrb
in
outsl
xchg
inc
dec
sti
dec
mov
mov
jmp
inc
stos
pop
nop
mov
ja
pop
cmp
mov
mov
gs
mov
scas
xchg
jae
inc
pusha
or
add
and
sbb
adc
dec
xor
mov
arpl
xchg
andb
adcl
in
or
pop
adc
cmpsb
lahf
jbe
mov
inc
lret
lods
pushf
or
adc
adc
lret
pop
stc
pop
dec
jne
ljmp
out
push
adc
pop
call
and
and
pop
clc
sti
pushf
dec
cwtl
push
movsb
add
out
push
and
mov
cmp
mov
dec
inc
into
lock
lret
xor
pop
xor
aad
mov
sub
jne
dec
dec
pop
pop
js
inc
mov
or
pushf
stos
fildll
repz
mov
push
xor
sbb
add
out
mov
inc
in
cmp
out
and
sti
jl
or
in
and
shlb
nop
sbb
lahf
mov
lahf
jns
aad
cs
jge
imul
mov
shl
test
rol
cmpsl
xor
mov
jne
adc
outsl
call
or
mov
lock
cwtl
mov
xorl
xor
andl
in
jle
jp
lea
cmp
dec
test
jbe
push
and
cmpsl
cmp
out
mov
shll
mov
dec
add
inc
fisubs
and
inc
syscall
es
xchg
sahf
cwtl
pop
out
xchg
xchg
stos
jo
jo
insb
xchg
add
sbb
adc
jle
movsb
mov
jns
pop
lahf
repnz
lcall
mov
cmp
jp
cmp
mov
js
aam
pushf
subb
inc
mov
mov
inc
cltd
jmp
or
and
andb
sub
or
sbbl
sub
pushf
sbb
adc
loope
xchg
dec
cmp
jl
push
icebp
shll
imulb
or
sub
outsb
ljmp
and
lahf
mov
in
mov
outsl
imul
loope
lea
leave
xchg
out
push
jl
in
imul
cmp
cmp
vpsubd
push
inc
push
mov
lock
cmp
nop
jp
mov
mov
and
gs
clc
push
fmul
xlat
test
arpl
lock
arpl
je
fdivr
xchg
je
repnz
leave
cmp
lcall
push
pop
clc
hlt
inc
insb
mov
add
scas
xchg
sbb
aas
sub
xchg
sbb
sarb
sub
mov
sub
call
loop
andl
mov
xlat
daa
and
aad
xchg
dec
xor
cltd
add
sub
mov
cli
cmp
sub
icebp
xchg
dec
lea
xor
clc
mov
mov
mov
adc
sbb
mov
and
outsb
js
lods
xchg
lret
jbe
mov
sub
push
bound
jnp
outsb
jb
inc
sbb
jl
in
inc
add
or
test
jecxz
jnp
xor
pop
out
scas
faddp
scas
push
loope
leave
aad
and
out
mov
push
lods
fs
add
adc
ja
jo
mov
fidivrs
sub
lahf
or
sbb
xorb
fildll
outsb
lcall
clc
outsl
pop
xlat
sub
jmp
fdivp
pop
cmpsl
push
push
ret
iret
out
fs
movb
mov
sbbb
rcrb
add
outsl
lds
fdivs
test
add
adc
out
add
lcall
pop
out
mov
xchg
xchg
mov
gs
sub
adc
outsb
aaa
cmp
lea
add
jmp
or
pop
lods
mov
repz
push
push
in
fimull
jmp
test
cmp
mov
jb
hlt
mov
mov
pop
and
fwait
testl
push
push
xchg
pop
test
jne
int3
and
bound
or
xchg
mov
mov
xor
inc
push
into
fistps
inc
cmpsb
es
mov
not
lock
mov
test
sbb
add
pop
mov
mov
movsb
pop
imul
inc
adc
push
lods
add
out
dec
stos
sub
outsl
pop
xor
lds
int
aaa
jb
je
mov
add
jle
pop
loope
loopne
push
jge
mov
jne
adc
and
jae
xor
sar
lahf
or
cwtl
mov
jo
mov
push
es
mov
std
js
std
loop
dec
inc
stos
or
cmpsl
rol
xlat
bound
mov
popf
mov
ss
mov
sti
enter
insb
push
mov
push
sti
mov
xchg
into
ret
pop
adc
stc
mov
fcomps
lods
cmp
jecxz
in
das
aaa
outsl
sub
cltd
sub
insb
jmp
leave
data16
mov
and
test
rorl
jp
cmp
lea
cmp
ljmp
into
mov
scas
inc
lds
scas
sbb
pop
stos
fstpl
inc
adc
sbb
xchg
not
aad
and
jae
jp
jno
mov
out
mov
jmp
adc
add
and
ja
mov
adc
jb
pop
or
jecxz
jne
mov
sahf
mov
divl
imul
sti
stos
inc
iret
daa
out
enter
scas
insb
and
ret
pushl
push
call
mov
mov
xor
push
mov
cli
clc
sub
mov
es
jmp
xchg
dec
loope
imul
fcom
sbb
pop
push
movl
aaa
inc
add
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
xor
or
mov
sub
sub
mov
xor
or
sub
xor
and
xor
or
sbb
mov
mov
add
mov
mov
sbb
mov
mov
incl
shrd
subl
shr
adcl
mov
add
mov
cmpl
not
mov
jmp
not
jne
push
push
push
call
mov
sbb
and
andl
and
orl
sub
or
sbb
jmp
pop
and
push
adc
fmuls
mov
xchg
mov
pop
icebp
test
pushf
add
jne
pop
leave
or
cmpsl
xchg
je
jnp
shrb
mov
clc
lret
pop
in
int
mov
fsubrl
inc
sub
inc
mov
cwtl
pop
sbb
ret
aad
stos
lret
dec
out
or
xor
loopne
mov
mov
outsb
dec
es
xor
das
sti
insl
ficoml
xchg
jbe
es
cmpsl
adc
dec
xor
jnp
mov
nop
hlt
bound
sbbl
xchg
push
rcr
and
push
test
aam
jl
fidivrl
push
push
inc
mov
aas
jb
mov
xor
adc
arpl
cmc
das
pop
sub
call
xchg
jne
adc
nop
jbe
gs
jecxz
inc
fadds
test
jg
pop
sbb
xchg
icebp
fildll
mov
jbe
xorl
aas
sbb
imul
aas
ja
imul
dec
insb
jle
jbe
adc
ss
adc
cmp
push
jno
mov
jp
and
push
cs
dec
loop
dec
adc
ret
sub
xchg
ror
cmp
and
je
into
sub
and
imul
add
std
sbb
in
pop
add
or
hlt
mov
fisttpll
mov
cwtl
ret
insb
cld
stos
adc
push
imul
push
push
imulb
rorb
fwait
add
shll
enter
and
scas
int3
cmp
ljmp
lahf
mov
sub
inc
repnz
sub
cmp
mov
xor
test
xchg
ret
mov
bnd
cli
outsl
sbb
ja
and
dec
arpl
or
xchg
xchg
loope
movsb
rdpmc
int3
gs
pop
mov
outsb
punpckldq
dec
xchg
subb
enter
adc
adc
inc
out
and
jo
loope
leave
sbb
cmp
xchg
shrb
mov
scas
stc
bound
js
lods
mov
mov
pop
adcb
call
and
cmpsb
dec
inc
jo
mov
enter
lret
mov
shlb
scas
xchg
push
cmp
cltd
leave
pop
cmp
sub
daa
mov
and
inc
int
or
popf
jle
in
cmp
push
mov
mov
sbb
or
adc
add
scas
into
pop
push
ljmp
sbb
nop
cwtl
xlat
repz
fmul
lahf
shlb
testb
dec
bound
mov
mov
pop
pop
inc
mov
lret
scas
shll
jae
call
mov
jbe
lahf
dec
movsl
pop
das
popf
in
pop
fsts
bound
inc
nop
push
mov
movsl
imul
push
jne
jns
adc
inc
cmpsl
and
rclb
outsb
pop
pand
mov
imul
push
sbb
push
mov
mov
jnp
pop
and
xchg
mov
jb
push
arpl
out
addr16
decl
mov
sub
inc
orb
xor
mov
pop
ljmp
adc
xor
mov
test
cltd
inc
push
push
mov
xlat
xor
pop
hlt
push
jle
mov
int3
inc
sbb
xchg
cmp
fwait
ror
push
cwtl
data16
jnp
and
lds
adc
inc
fidivl
add
fisubs
subb
psllw
into
sub
jmp
decb
scas
pushf
mov
stos
cs
push
jno
mov
dec
sarl
dec
test
mov
sarl
inc
add
push
mov
and
adc
mov
lret
add
test
bound
dec
addr16
fbstp
movsl
fwait
stos
mov
cmp
sub
and
dec
icebp
ret
cld
int
scas
sbb
adc
imul
int
xchg
popa
leave
insl
pushf
jns
xlat
dec
mov
pop
notl
repz
add
mov
inc
pop
inc
xchg
test
mov
bound
stos
push
and
mov
jle
pop
pop
stos
push
and
into
xor
mov
loop
fimull
arpl
std
pop
das
aaa
dec
in
xchg
je
subl
mov
arpl
mov
imul
xor
inc
fildl
ja
push
cli
cli
adc
pop
sub
aam
cs
shl
fsts
inc
outsl
mov
fmuls
jb
xor
jbe
or
lods
xchg
out
std
inc
sbb
mov
ds
mov
cmp
inc
or
aas
in
pop
xchg
push
jae
sar
add
adc
pop
sbb
test
insl
jmp
add
clc
cmpsb
mov
or
push
int
lds
pop
add
mov
inc
xchg
inc
push
stos
add
pop
add
mov
call
ret
mov
mov
arpl
insb
das
adc
dec
jmp
jne
std
repz
mov
cmpsb
roll
xchg
loopne
xor
aas
repnz
mov
scas
js
dec
shll
cmp
outsl
mov
ds
daa
les
bound
jnp
lahf
push
shr
stos
inc
xchg
bound
stos
fld
aad
bound
inc
cli
sbb
pop
ret
sbb
cmpsb
nop
add
cmp
lcall
dec
insl
pop
and
xor
test
clc
xchg
loope
adcl
out
mov
xchg
push
movsl
ret
repz
xchg
stos
dec
pop
pop
cmp
aam
rcr
mov
mov
cmp
cmp
in
adc
push
fildll
nop
lret
daa
dec
cmpb
fwait
lds
and
mov
cmp
xchg
dec
je
cmp
sbb
arpl
pop
dec
mov
aas
mov
adc
xchg
cmp
xchg
cmp
mov
imul
cli
or
daa
sub
sar
mov
jae
stc
add
mov
adc
gs
mov
push
int3
inc
mov
add
xor
cli
cmc
repnz
cmp
loope
push
movsb
jae
stc
mov
call
mov
xor
adc
push
dec
mov
cmp
xor
ljmp
xor
mov
ja
inc
mov
mov
push
push
mov
xor
dec
in
cmp
out
lds
test
pushf
mov
jae,pn
jae
xchg
push
aaa
addr16
push
notl
mov
mov
pop
daa
lret
mov
test
or
mov
xor
xor
subl
or
andl
shl
sbbl
lea
sub
mov
cmpl
mov
mov
mov
mov
jmp
movl
jg
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
pushl
push
call
xorl
movzbl
adc
movzbl
add
or
add
movzwl
sub
mov
shrd
shr
cmpl
mov
mov
mov
jmp
mov
jbe
push
call
andl
mov
adc
sbb
movl
mov
mov
or
not
mov
mov
sub
mov
add
jmp
rcrl
cmp
and
and
scas
dec
or
fcomps
ja
cmp
push
lret
jle
jmp
fisubrl
xchg
es
add
push
dec
pushf
aaa
sbb
insb
lods
jge
xor
sbb
or
popa
sub
fidivrs
icebp
pop
mov
in
mov
inc
push
aad
mov
mov
shl
or
mov
pop
ljmp
leave
nop
jne
pop
push
cltd
psubw
xor
rorl
popf
loope
stos
cmc
inc
daa
sub
jne
adc
mov
and
inc
out
in
push
mov
mov
imul
mov
jns
dec
inc
lret
jmp
xor
or
in
pop
jmp
lret
pushf
adc
jl
lret
xchg
mov
or
addr16
push
test
minps
icebp
xor
pushf
ljmp
mov
jmp
iret
mov
in
sbb
xchg
mov
or
inc
ljmp
push
dec
and
outsl
mov
push
imul
mov
shll
dec
fwait
or
cwtl
dec
sub
xor
xchg
loopne
loopne
push
jns
movsl
outsl
jecxz
repnz
push
lahf
shr
das
or
mov
clc
push
adc
inc
cmp
or
push
inc
adc
test
cmpsl
int
addr16
arpl
pop
loope
sub
leave
mov
push
and
xchg
movsb
mov
mov
xchg
adc
out
testl
fisubl
lds
mov
or
sub
xchg
sbb
jmp
sub
mov
sub
or
mov
xor
dec
push
cld
ds
lds
fistl
pop
mov
jne
inc
or
divb
sub
mov
xor
adc
sub
mov
inc
xchg
sub
jo
pop
push
ljmp
clts
xor
sub
lds
ss
sub
jo
push
inc
daa
xor
and
adc
cmc
adc
idivl
sbb
clc
mov
les
pop
nop
add
or
nop
sbb
and
mov
sbb
insl
sub
pop
mov
clc
jp
push
negb
fstpl
jne
sub
daa
ljmp
and
leave
cmpl
test
lods
insl
pop
and
daa
insl
mov
ficoms
sar
adc
adc
jle
mov
mov
push
xor
addr16
push
subl
stc
cmp
jg
mov
xchg
mov
pop
jmp
add
popa
cld
scas
xchg
jg
xchg
dec
popf
mov
dec
jp
sti
sbb
pop
or
bound
testl
cwtl
pop
push
dec
in
xlat
jnp
enter
mov
fs
mov
push
cmp
nop
orl
mov
test
lret
xchg
call
mov
out
inc
jmp
dec
cmp
je
daa
jecxz
repnz
cmp
repz
setge
cli
adc
push
xor
shr
sub
xchg
fldpi
rorb
ds
pop
mov
xor
lahf
scas
push
dec
sbb
sub
shrb
or
outsb
mov
int
dec
cs
xor
xchg
jp
fmuls
nop
and
mov
mov
stos
adc
gs
pop
cmp
dec
jb
jmp
sbb
fsubr
notl
popa
cmp
fisubs
popa
inc
pop
mov
sahf
or
hlt
push
mull
lret
sti
mov
and
mov
push
decb
fisubrs
add
call
pop
loope
mov
inc
mull
or
imull
leave
push
outsb
adc
xchg
mov
mov
in
jge
add
sub
aaa
imul
push
sbb
cmc
data16
cmpsb
in
or
or
out
hlt
fs
movsl
mov
cmp
aam
cmp
sub
repz
pushf
mov
dec
cwtl
in
out
mov
out
or
xchg
dec
aam
mov
movsb
or
or
loope
jno
jge
jo
out
mov
inc
add
mov
rcll
data16
jp
mov
xor
ret
sbb
mov
rclb
movb
rcrl
repnz
lds
inc
ljmp
mov
jae
bound
mov
dec
sub
fildl
jns
ja
push
out
add
nop
jnp
push
int3
ljmp
adc
aaa
fisubs
hlt
dec
dec
xchg
jp
push
lds
jle
movsl
inc
imul
cmpsb
adc
sub
in
lea
ret
sbb
push
mov
jno
add
test
jbe
and
test
jecxz
ret
xchg
sbb
cmp
and
pushf
adc
outsl
push
shlb
ss
pop
add
xor
insl
popa
pop
les
dec
mov
xchg
sub
icebp
imul
lea
dec
push
xor
pop
scas
daa
insb
dec
cmp
repz
jne
sbb
jl
cli
push
sbbb
jl
mov
push
mov
add
loopne
cmp
mov
sub
pushf
jae
test
out
insb
iret
out
int3
mov
ljmp
and
xchg
xor
in
call
sub
lcall
mov
mov
aaa
sbbb
lods
icebp
xchg
xchg
cwtl
mov
ljmp
dec
test
xchg
scas
mov
inc
lret
leave
mov
aad
xchg
xor
jl
jle
aaa
mov
rorb
push
mov
jne
cmp
dec
mov
scas
inc
lret
mov
push
cs
enter
or
fwait
ret
cmpsl
out
scas
sub
mov
jg
ret
mul
sahf
jmp
cmp
mov
es
rcrl
repnz
dec
mov
jo
push
jle
dec
icebp
pushf
les
movl
adc
cmpsl
shlb
ret
iret
xchg
cmpsb
je
jno
jo
or
mov
or
sbb
dec
addr16
incl
and
es
pop
aas
gs
pop
pop
add
outsl
mov
iret
std
outsb
cmp
lahf
cmp
pop
cmpsl
ja
jns
add
push
fs
sbb
sub
lea
aam
mov
sahf
mov
in
cmp
mov
in
fsubs
pop
pop
add
push
fnstenv
fimull
jb
in
adc
xor
dec
mov
sub
xchg
in
xor
push
lds
sub
sub
bound
gs
inc
notb
daa
fildl
jmp
hlt
mov
sub
inc
pop
mov
dec
fildll
jne
vmovmskps
data16
outsl
ret
ljmp
out
jg
test
cld
push
movsl
nop
iret
push
jbe
jl
push
sbb
or
and
test
jecxz
test
xor
mov
xor
adcl
or
shl
movzbl
or
imul
mov
mov
xorl
shrd
xorl
mov
mov
xor
shr
mov
and
mov
sbbl
xor
orl
or
sbbl
shl
adcl
sub
mov
mov
cmp
mov
mov
jg
xor
add
mov
sub
and
mov
cmpl
movl
movl
jmp
mov
mov
jb
push
push
call
xor
mov
sub
sbb
movzbl
and
mov
jmp
les
cmp
push
mov
mov
movsb
js
scas
add
outsl
dec
ja
xchg
das
mov
sub
adc
inc
sbb
gs
fsubrs
rcll
sbb
pop
ss
cmpsl
add
je
mov
mov
stos
test
int
ret
jp
add
dec
xchg
popf
push
dec
out
orl
cmp
imulb
mov
dec
pop
lods
xor
dec
fisubrs
adc
inc
ret
jle
lea
inc
insb
sub
add
push
rcll
jne
pusha
rcll
adc
fisttpl
cltd
pop
mov
push
mov
push
pop
cmp
stos
adc
aam
clc
add
jns
ja
mov
pop
rcrb
mov
fsubrs
ror
frstor
mov
push
andl
xor
scas
cmpsb
jl
addr16
push
das
movsl
test
jp
mov
test
dec
int3
push
insl
cs
add
or
jecxz
shrb
cmp
jne
pop
dec
ret
add
push
cmp
or
out
test
jne
xchg
imul
xor
je
inc
jmp
jne
and
into
mov
gs
jnp
jns
pop
push
push
outsb
push
push
or
leave
or
shrl
inc
jg
jae
imul
pushf
mov
add
lds
lods
dec
jo
push
and
xor
and
bound
sar
sbbb
dec
push
pop
fisubrs
xchg
pop
jp
push
mov
loope
cmp
xchg
sbb
xchg
repz
xchg
xor
dec
loopne
push
popa
xchg
xchg
fildl
sub
insb
push
sub
xor
movsb
aam
sbb
out
je
int3
pop
dec
dec
jp
sahf
filds
in
xorl
push
hlt
pop
sbb
stos
jp
dec
mov
cld
sub
mov
popf
leave
js
sub
xchg
pop
shl
lret
jo
int
push
out
pop
adc
jb
mov
lea
ljmp
cmpsl
ja
into
xor
movsb
test
pop
gs
push
cmp
loopne
test
int
sbb
mov
mov
lock
xor
mov
push
jl
add
push
aam
mov
inc
es
fs
sub
stc
jne
sahf
jae
jp
js
repnz
sahf
test
jnp
stos
inc
or
sub
cltd
leave
jns
inc
in
mov
inc
mov
pop
pop
sbb
xchg
fisttpl
xorl
cmp
adc
out
mov
adc
std
stc
mov
test
hlt
insl
mov
inc
xor
cltd
arpl
movd
xor
cmpsb
addl
addr16
mov
xchg
push
andb
fwait
push
add
add
dec
icebp
push
shll
sbb
or
dec
add
outsl
jne
insb
cmp
repz
call
imul
int
movsl
mov
popf
pushf
fucompp
mov
stos
clc
inc
cli
xor
jno
ret
ljmp
sbb
cwtl
jecxz
cmp
jb
mov
leave
fwait
ret
xorb
rcr
pop
ret
cmp
mov
fsin
dec
aaa
mov
insl
jge
jnp
xchg
mov
daa
inc
out
scas
subb
test
sub
in
lds
xchg
push
leave
lods
pop
test
inc
pushf
sbb
jns,pn
pushf
cmp
in
mov
movsb
enter
js
mov
jbe
push
popa
incb
jp
pop
lds
jb
or
pop
filds
int3
mov
jg
mov
jno
lahf
test
into
aaa
mov
adc
sbb
jg
sub
mov
cwtl
dec
sbb
adc
inc
icebp
data16
daa
stos
popf
inc
adc
push
sahf
bound
inc
mov
add
fwait
in
jns
clc
cmc
fsts
adc
adc
aas
jb
sahf
mov
mov
in
les
mov
xorb
in
stos
stos
stos
fsub
movsl
mov
jne
adcb
das
sub
jo
sub
add
movsb
pop
sbb
cmp
ffree
out
sahf
mov
jae
jnp
cmpsb
dec
jnp
jne
fwait
sbb
fstps
mov
es
dec
nop
mov
adc
out
xchg
or
xchg
and
into
push
adc
shr
inc
add
into
xor
pop
cmp
cs
mov
cld
movsl
movsb
and
insl
dec
add
test
addr16
imul
dec
inc
push
lock
sbb
scas
test
cmp
push
mov
push
daa
xor
lock
pop
push
pop
push
xlat
outsb
andl
jle
cmpsb
xchg
adc
push
js
cmpb
jo
xor
scas
in
xchg
pop
mov
ficompl
pop
inc
push
nop
in
mov
adc
aas
push
cmpl
fwait
add
jg
xor
sub
xchg
cwtl
or
mov
das
ljmp
pop
ljmp
ja
dec
inc
je
stc
pop
inc
xor
insl
jge
enter
pop
xor
pop
mov
jg
xchg
aaa
xchg
push
add
adc
xor
adc
mov
sub
push
hlt
out
inc
mov
es
rcrb
push
jo
jmp
dec
mov
aad
das
xlat
cmp
jb
sub
adc
loope
pop
xchg
mov
adc
jb
push
movsl
lds
movsb
je
or
imull
or
xchg
mov
call
add
bnd
mov
rolb
push
cltd
in
gs
and
negb
mov
popf
pop
push
cmpb
adc
out
xchg
inc
cli
push
sub
cmp
ret
imul
sbb
in
es
mov
std
mov
cmp
mov
xchg
inc
lds
mov
dec
je
hlt
dec
out
mov
cmp
jbe
mov
je
cmc
adc
dec
fsubp
pop
sbb
sub
sbb
pop
and
mov
call
fxch
repnz
sbb
cwtl
push
push
js
sbb
leave
fildll
adc
mov
mov
pop
sbb
loopne
pop
scas
icebp
je
in
sub
inc
icebp
pop
stos
scas
in
cwtl
inc
ror
out
inc
test
sbbl
xchg
pop
hlt
rcll
std
sbb
leave
xlat
mov
loop
jmp
mov
cmp
in
inc
pop
mov
xor
fsubrp
sub
adc
out
xchg
repz
mov
out
dec
or
xor
out
fmull
jge
popf
stc
insl
inc
dec
jecxz
mov
mov
in
pop
aaa
rolb
and
jno
ja
pop
nop
movsb
loope
mov
cmp
mov
xor
xchg
sbb
gs
int
fs
fdivp
push
mov
mov
imul
insb
daa
jno
lds
mov
cltd
push
push
xchg
ret
cmp
jg
mov
andl
shrd
mov
movzwl
or
mov
adcl
xor
andl
shl
orl
xor
adcl
or
sbbl
shr
and
mov
jmp
mov
mov
mov
cmp
ja
insb
notl
mov
xchg
cmc
jmp
and
and
mov
and
loop
and
pop
fidivrs
inc
in
and
lods
out
xor
insb
xchg
jge
mov
mov
sti
inc
mov
adc
stos
test
imul
xchg
fcomps
aad
mov
push
rcl
xchg
mov
lret
sub
cltd
out
cmpsb
jb
popf
or
or
outsb
xor
sub
out
notb
fcomip
cmpsl
lahf
jmp
mov
add
push
fnstenv
rcrl
dec
cmp
mov
xor
adc
mov
push
jl
scas
dec
or
push
xor
cmpsb
pop
push
cmc
icebp
jno
and
inc
pop
pusha
hlt
dec
bound
incl
outsb
inc
aas
mov
mov
push
mov
out
sub
adc
sub
loopne
sbb
lea
fcom
lea
std
and
and
add
cld
test
fistpl
or
stc
into
mov
mov
and
iret
jp
ret
inc
rorb
bound
movsb
out
mov
mov
mov
test
adc
cld
aad
arpl
inc
subl
lahf
push
mov
andl
insb
push
out
pop
sbb
das
sarl
test
cmp
fwait
sbb
xchg
insb
out
in
cmpsl
rcll
adc
cld
mov
push
je
add
dec
shr
push
mov
sbb
cmp
adc
dec
fists
xor
repz
nop
adc
out
loop
movsl
jmp
push
xchg
sbbl
push
cmc
icebp
mov
inc
fnsave
sar
pushf
mov
pusha
ret
pop
push
test
pop
movsl
in
je
je
push
adc
jb
sub
jno
in
sub
rorb
pop
push
jl
popf
shll
xor
pop
inc
jo
mov
jg
mov
adc
call
stc
ret
mov
fcomip
sub
xchg
mov
sub
cli
lock
jae
inc
cmpsl
pop
cmp
ja
scas
dec
mov
ljmp
mov
movsb
cltd
xchg
fisubrs
clc
pop
jmp
arpl
pop
lea
or
xchg
push
jmp
data16
lret
xor
aas
shrb
jecxz
jecxz
or
inc
mov
mov
icebp
daa
cwtl
ss
sbb
cmp
stos
push
add
adc
mov
push
mov
imulb
pop
jl
adc
imul
les
movsl
das
lea
xor
xor
dec
and
loop
mov
ficompl
aaa
and
sti
enter
pop
jo
jp
out
out
push
push
and
or
incb
enter
lcall
push
movb
iret
mov
mov
mov
outsb
mov
push
stc
xor
xchg
es
xchg
loope
push
mov
sub
xchg
fadds
cld
mov
int3
jbe
xchg
lahf
in
mov
sbb
sbb
scas
stc
push
jb
clc
lret
xchg
ret
fstps
xchg
jns
xchg
call
add
out
dec
push
rcr
inc
mov
inc
mov
ja
das
and
das
push
mov
add
loopne
or
xchg
cmp
xchg
ss
mov
arpl
inc
hlt
pop
xchg
xlat
jae
imul
xor
ljmp
add
fmuls
fwait
jbe
imul
push
cwtl
mov
mov
pop
sub
imul
adc
sub
jle
cld
cmpsb
incb
jecxz
arpl
or
mov
vaesdeclast
icebp
shlb
mov
aam
xchg
dec
sarl
into
pushf
lret
insl
sbb
cs
mov
mov
outsb
stos
or
int
cmp
out
cmpsb
stc
sbb
sbb
adc
or
inc
inc
push
mov
inc
ss
sti
out
hlt
cmp
xchg
shll
lock
mov
repz
mov
movsl
push
arpl
push
popf
jmp
adc
mov
fwait
pop
jp
jo
data16
in
mov
enter
insb
sbb
sti
cwtl
mov
mov
or
test
mov
xor
call
push
xlat
bound
and
cltd
cmp
push
repnz
mov
stc
mov
out
or
pop
pushf
test
arpl
mov
xor
js
int3
and
mov
push
or
adc
inc
inc
and
or
cmc
nop
push
addr16
cmc
js
jg
fisttpll
xor
push
aad
mov
cmp
xlat
out
sub
or
lods
adc
leave
dec
mov
push
jne
jae
mov
mov
mov
adc
inc
cli
les
mov
jmp
jmp
cmpsl
or
jne
cltd
aad
sbb
push
outsb
sarl
sub
dec
sbb
rorl
out
push
scas
push
sbb
inc
dec
cmp
mov
jbe
pusha
add
lcall
sub
mov
aas
test
jne
push
loope
lcall
xchg
add
mov
mov
xor
pop
pop
jno
stos
push
mov
push
or
mov
and
rdpmc
repnz
idivl
jae
js
loopne
adc
jnp
cmp
dec
pop
mov
call
and
jnp
mov
or
scas
pop
xchg
and
loope
js
and
xchg
dec
dec
push
out
add
ljmp
test
pop
and
ja
rcl
add
movl
repnz
shl
das
mov
push
xchg
aam
pop
pushf
mov
sti
shrl
cmp
testl
mov
andps
pop
mov
adc
lods
fistps
outsb
enter
inc
bound
out
adc
push
in
lahf
xor
cmp
jbe
subl
or
ljmp
scas
lods
test
lods
add
push
or
stos
imulb
lods
enter
mov
imul
add
mov
mov
push
test
mov
inc
cmpl
out
mov
les
imul
loope
lds
cmp
and
mov
and
sub
subl
aam
or
push
add
pop
push
or
pop
push
push
sbb
fidivrl
xchg
hlt
add
fsubrs
icebp
push
mov
aad
mov
loopne
lock
cli
testb
sub
data16
fisubl
mov
xchg
loopne
sub
test
stc
mov
sahf
mulb
subl
fistpl
pushf
lock
pop
xor
pop
into
outsb
jne
xchg
outsl
ljmp
xor
outsb
leave
and
loope
mov
mov
les
enter
sub
or
mov
mov
fsts
mov
dec
aam
adc
or
mov
mov
mov
add
mov
andl
shrd
sbbl
shr
mov
mov
inc
jmp
shll
adc
push
scas
xchg
inc
mov
mov
xchg
je
ja
out
lret
mov
add
push
outsl
fdivl
out
and
popa
int3
out
push
add
rcrl
jge
mov
push
or
pop
js
jle
sbbl
movl
fdivl
xor
je
mov
rcrl
pop
mov
push
cmp
gs
sbb
push
and
fwait
inc
jno
cltd
xor
ficoms
dec
xchg
xor
mov
mull
xor
rcr
repz
popa
out
push
add
xchg
les
cmpsl
inc
push
movsl
leave
jb
adc
call
pop
inc
mov
ljmp
out
jo
xchg
pop
dec
mov
xor
mov
aad
clc
hlt
scas
dec
cmpsl
xor
push
adc
jae
fcomip
pop
pop
cmp
and
fdiv
add
fildll
loope
inc
xor
jg
leave
pop
lds
xchg
movsb
xchg
addr16
lret
pop
mov
add
test
sarl
out
mov
divb
and
ret
xchg
sub
jg
push
inc
lods
cmp
out
mov
mov
mov
outsl
and
mov
jecxz
pop
stos
inc
aam
fsts
push
mulb
push
sbb
cmp
test
mov
push
pop
cmp
mov
cmp
mov
es
dec
movsb
ret
cmpsl
sahf
repz
mov
mov
adc
mov
clc
xor
cltd
and
pop
test
pop
cmpsb
inc
hlt
call
icebp
lods
fcoms
mov
jge
xor
xor
aas
inc
sbb
call
jns
lea
jnp
or
nop
mov
push
enter
push
imul
into
loop
jb
data16
mov
and
pusha
adc
jno
outsl
loope
rcr
cwtl
push
out
adc
dec
xchg
or
nop
xor
jecxz
or
xor
pushf
mov
jne
repz
sub
cmp
in
aad
cld
aam
ffree
test
and
imul
add
iret
push
pop
jp
dec
fcomps
adc
and
leave
dec
mov
mov
mov
loope
mov
jp
mov
mov
push
aam
xchg
sbb
sbb
loope
mov
mov
out
or
sbb
or
push
mov
insb
pop
push
nop
push
insb
xlat
cmp
xor
nop
push
ja
add
addr16
xorl
iret
in
addr16
mov
pop
gs
or
test
and
rcr
das
daa
jae
icebp
in
bound
test
mov
mov
test
or
cs
bound
dec
push
mov
mov
add
mov
xchg
pop
mov
jge
movsl
es
dec
mov
cld
add
lock
psrld
jo
sub
fdivs
dec
into
xor
add
inc
fwait
add
or
xchg
adc
xor
and
push
push
xchg
inc
fistpll
push
xchg
adc
or
pusha
xor
and
insl
lea
mov
fs
out
adc
dec
push
and
shrl
jecxz
jne
mov
stc
lds
inc
subb
inc
lock
aam
inc
inc
mov
stos
adc
lea
scas
push
jecxz
imul
inc
xor
xchg
jb
call
inc
push
and
mov
jno
test
arpl
pop
jbe
and
loop
sbb
dec
adc
mov
lods
lcall
cwtl
fs
fadds
pop
sub
cli
jcxz
mov
xchg
mov
ds
popf
cmp
jb
mov
push
imul
dec
repz
lret
shll
or
ds
in
mov
mov
mov
fcompl
mov
xorl
arpl
scas
inc
andl
dec
insl
xchg
mov
xor
je
fs
sub
push
jecxz
shlb
popf
aaa
adc
cli
xchg
add
jne
push
sub
mov
mov
sbb
mov
clc
dec
ret
loope
and
and
cli
mov
push
mov
xchg
aam
mov
mov
mov
adc
fwait
inc
test
add
jae
or
jg
sub
dec
subb
adcl
data16
inc
jle
push
shll
or
je
loope
aam
test
rorl
adc
iret
xchg
das
pop
and
mov
push
dec
push
xor
fistpll
sahf
call
xchg
test
lods
pop
int
mov
leave
das
xlat
cmp
loope
in
mov
fstps
test
es
dec
cs
sbb
lods
push
xor
xchg
xchg
loope
push
inc
cmp
cmpb
movsb
sub
fsubrl
neg
sub
xor
and
scas
mov
cmp
out
cltd
pop
dec
or
add
xchg
mov
cmp
sbb
andb
rol
mov
push
ljmp
or
out
or
pop
test
cmp
mov
js
push
movsb
call
loop
push
mov
and
stos
mov
jnp
out
cs
ja
aas
dec
in
dec
and
bound
cmp
fidivs
fidivrl
mov
add
and
and
fwait
les
mov
mov
dec
pop
leave
out
js
andl
stos
repz
push
cmp
out
enter
or
pusha
dec
xchg
xchg
sbb
fld
outsb
adc
test
pop
push
push
pusha
fldenv
dec
add
cli
cwtl
ret
sbb
mov
stos
int
and
rcl
gs
jg
xchg
adc
xorl
sub
pop
stc
and
fcomi
in
das
int3
push
mov
or
lods
pop
sti
int3
shl
int
push
gs
and
push
loopne
sub
jo
cmp
sbb
mov
les
stc
test
adc
cmp
inc
jnp
xor
or
xchg
fnstenv
outsl
push
mov
sbb
jl
incl
in
les
mov
hlt
leave
add
jmp
andb
imul
push
mov
ljmp
loop
paddusw
push
enter
insl
mov
jne
test
sub
cmp
lea
std
lret
add
fidivrs
aas
mov
xchg
es
in
shl
cmp
mov
add
push
inc
es
jns
mov
stos
dec
nop
and
push
mov
repz
lea
in
mov
pop
and
popf
ljmp
pop
dec
adc
ficomps
mov
push
xor
jmp
push
mov
xorl
xor
subl
jmp
scas
popa
inc
jge
sbb
cs
lret
loope
dec
negl
ja
loopne
pop
sbb
lods
xor
or
aas
bswap
cs
sbb
jmp
clc
xchg
ret
shl
in
test
cmp
sti
push
je
cmp
ljmp
sbb
in
push
cltd
sbb
sbb
add
pop
movsb
pop
inc
and
mov
push
fwait
adc
inc
jmp
add
inc
dec
aaa
pop
das
incl
scas
dec
sub
test
lahf
inc
inc
xor
mov
fldenv
add
popa
jae
xor
mov
outsl
cli
jp
std
inc
lock
imul
stos
ja
aad
repnz
xor
push
dec
mov
int
stos
lods
sbb
sbbl
nop
lds
syscall
cmp
sbb
cmp
sub
insb
adc
imul
popaw
sub
add
into
pop
cmp
sub
push
cmp
out
lods
lds
sti
xor
xor
mov
in
cltd
mov
leave
aaa
push
pop
inc
push
bound
insl
pop
mov
pop
in
adc
dec
add
xor
pop
cmpsl
fdiv
xorb
lods
cmpsb
dec
dec
fwait
sbb
fiadds
setb
add
inc
xchg
fdiv
cmp
add
jns
jecxz
sub
clc
cli
push
aaa
sahf
ret
add
jne
sub
pop
or
xchg
lahf
mov
imul
scas
cwtl
aam
or
hlt
or
pop
addr16
dec
mov
lods
test
ja
inc
dec
jo
lahf
daa
lods
pop
gs
xchg
push
mov
pop
cli
fstl
adc
fadds
outsl
jp
inc
jp
movsb
loope
fcom
in
stos
mov
out
sbb
pushf
mov
out
push
cmp
mov
loop
fcompl
sub
jb
lcallw
sub
adc
and
cs
cwtl
pop
mov
dec
mov
test
inc
adc
xchg
xlat
ret
sbb
cmp
arpl
pop
movsl
xchg
gs
insl
outsl
or
push
adc
repnz
ret
and
lock
push
decb
shrl
xorb
iret
ss
ja
and
pusha
sub
jae
push
lds
adc
push
pop
test
test
loope
sub
rcrl
mov
ljmp
ficompl
jl
mov
mov
imul
mov
neg
out
jnp
xchg
jmp
aas
imul
mov
mov
jno
xchg
das
inc
or
add
and
push
fwait
xor
fisttps
adc
mov
sbb
adc
jp
outsb
jg
movsl
cmp
jnp
and
repz
rcl
popf
or
ljmp
movsl
pop
hlt
pop
xchg
pop
pop
sbb
mov
inc
andb
sub
inc
lahf
pop
insl
mov
inc
xchg
mov
fadds
das
or
cmp
and
int
mov
mov
test
cmp
ss
adc
adc
mov
jb
fists
dec
incb
mov
mov
int3
bound
sbb
out
sbb
jno
mov
and
sbb
mov
pop
jb
mov
push
xor
mov
idiv
cmc
aam
xchg
sbb
push
icebp
pop
mov
clc
add
jo
mov
pop
sub
movsb
cli
sti
mov
sbb
testl
lahf
int
xor
inc
out
dec
fdivrl
imul
shl
movl
pop
push
mov
mov
cmp
popf
mov
rorb
pop
xchg
push
outsb
imul
mov
jp
ret
xchg
ret
push
sbb
sub
pop
scas
movl
in
or
jg
iret
je
or
shrl
jne
jae
sbb
mov
insl
shl
mov
popa
pop
ret
inc
cmp
inc
lret
movsl
mov
sub
push
mov
mov
sbb
xor
mov
sub
stos
lods
decl
jle
push
mov
pop
clc
xor
cmp
push
inc
sti
mov
cs
pop
push
push
pop
sub
xor
dec
jp
cmc
dec
and
xchg
mov
sub
out
adc
stos
add
pop
jge
iret
sarb
inc
loope
lds
fdivrp
adc
mov
leave
adc
pop
mov
inc
imul
xor
jmp
or
xor
pop
push
imul
dec
insl
jae
pop
cmc
aad
sub
daa
sbb
ja
outsb
xchg
mov
icebp
jne
or
pop
mov
adc
sub
movsl
icebp
in
push
cmovb
cltd
and
cmpsb
jmp
or
cli
bound
cmpsl
insl
and
cli
jge
inc
loopne
mov
setns
inc
xorl
mov
dec
jne
rcrb
insl
mov
xchg
or
aas
sub
mov
mov
mov
xchg
push
bswap
mov
scas
stc
lcall
xor
push
push
pop
cld
sbb
insl
xchg
mov
and
sbb
int
cmp
xchg
pop
fildl
add
notl
inc
and
repnz
mov
dec
jp
loopne
out
aaa
mov
jnp
dec
cmc
rcl
mov
mov
int
jecxz
lret
aas
pop
nop
outsb
addr16
xchg
inc
pop
jecxz
ljmp
adc
notl
sbb
fldl
add
test
scas
mov
jl
jl
and
pop
mov
sbb
cs
dec
adc
adc
push
outsl
xchg
push
cmp
rcl
push
in
adc
inc
inc
ficomps
jne
sbb
pop
push
aad
sub
dec
test
pushf
movb
inc
bound
xchg
mov
push
add
or
scas
ljmp
pop
cmp
pop
inc
dec
int3
xlat
xor
int
lahf
sub
jae
test
mov
inc
xor
pop
cmp
mov
repz
xchg
xor
add
adc
sub
xor
xlat
stos
loopne
mov
jno
mov
lcall
mov
ret
xor
cmpsb
hlt
imul
int
ret
jo
lock
scas
test
jae
sbb
decb
push
dec
or
movsb
ja
xchg
cltd
cmc
out
imull
inc
xor
jbe
pop
and
mov
sub
out
pop
xor
fisttpl
push
nop
add
xchg
bound
popa
push
adc
jge
inc
inc
add
xchg
daa
mov
sbb
lods
dec
call
outsl
xchg
ds
pop
loope
stc
into
mov
arpl
fistps
cmpsl
cmp
cwtl
lret
into
pop
mov
fildll
adc
rorb
push
in
add
sub
inc
add
loope
imul
jmp
add
or
or
adc
push
ja
test
and
inc
lcall
push
inc
dec
xchg
popa
mov
pusha
int3
cmp
adc
rorl
mov
sarl
cmp
xlat
sub
shr
cmpsl
sub
push
push
inc
push
push
inc
push
callw
int3
addr16
and
pop
adc
sbb
in
or
xchg
jns
addr16
call
add
xchg
in
inc
roll
adc
bound
push
mov
jecxz
fsubs
cli
imul
jae
sahf
sti
push
pop
cmp
jo
leave
ret
hlt
jge
push
mull
cli
js
jns
xchg
test
pushf
adc
loopne
fs
sub
lcall
mov
cmpsb
js
xchg
ret
fldcw
adc
push
add
mov
and
and
mov
pop
pop
and
or
push
or
cmp
clc
mov
lret
data16
pop
push
mov
adc
div
dec
scas
jp
adc
ret
enter
mul
sbb
hlt
or
pop
rcrl
sbb
inc
test
imul
cs
mov
jp
js
ja
in
mov
hlt
movsl
xchg
inc
pop
pop
jmp
mov
sbbb
aad
mov
adc
imul
divb
int3
mov
insl
into
loopne
pop
mov
das
xor
mov
mov
repz
clc
int3
or
pop
int
push
aas
fmull
loope
dec
jae
inc
out
mov
ret
adc
jle
jo
sub
jbe
hlt
push
mulb
aam
loop
mov
jp
push
nop
cwtl
add
data16
out
jbe
push
xor
dec
mov
add
push
int
mov
xchg
fsubr
jns
hlt
icebp
fcomi
dec
mov
xchg
in
mov
and
dec
or
mov
push
cmp
std
bound
jmp
data16
or
ds
push
xchg
push
cmpsb
inc
mov
mov
and
mov
jb
cld
test
imul
repz
fisubrl
scas
enter
dec
inc
cmp
cmpsl
pushf
lock
adc
sub
cltd
or
stos
push
jnp
cs
jg
adc
call
in
dec
cltd
or
push
push
sub
lods
push
xchg
lds
sti
jno
lock
aam
jo
mov
jecxz
add
pusha
mov
xchg
xchg
pushf
cs
mov
or
mov
movb
hlt
pop
gs
sub
fdivrl
sbb
adc
add
andl
iret
xchg
movsl
jl
push
mov
adc
jge
inc
push
sbb
xchg
push
lahf
adc
das
js
arpl
mov
movsl
cmp
pop
scas
cmp
std
lock
cmpb
cltd
xchg
and
insb
pop
xor
mov
aas
mov
lds
adc
jno
jg
aad
or
pop
cmp
jle
loop
mov
mov
push
outsb
cmp
mov
dec
ret
mov
cld
mov
cmp
inc
rcr
add
testl
ret
cmp
sbb
push
fmuls
xor
fcmovnbe
cmc
sti
sub
fdivl
push
xchg
inc
xlat
and
fisubs
and
cld
in
test
out
call
out
es
lods
fisubrs
pop
pop
xchg
add
inc
gs
fisttpll
scas
cmove
xchg
aas
push
mov
inc
xchg
cs
repz
ss
andb
or
fimull
xlat
lret
add
loopne
aad
psubsw
cmp
jl
xchg
popf
sbb
lret
or
test
loop
aad
stos
stos
mov
hlt
xor
cmp
push
sub
rclb
jg
jnp
or
pop
adc
mov
fs
adc
xor
dec
sarb
push
dec
out
insb
sub
out
aaa
sub
sbb
aas
mov
cmp
popa
lds
out
lahf
cs
sbb
adc
cmpb
fs
mov
jb
lahf
andl
mov
add
aaa
cmp
aam
mov
nop
mov
cltd
test
adcl
jb
and
mov
jo
popfw
popf
fists
cmp
mov
mov
push
sbb
jnp
movswl
pop
out
faddl
ja
inc
insl
mov
push
mov
dec
lds
addl
inc
out
dec
push
xor
das
mov
call
dec
clc
scas
adc
inc
xacquire
jnp
rolb
out
or
fstl
lcall
xor
ret
jmp
lds
add
rclb
jne
add
lock
stc
test
sbb
mov
sbb
sbb
pop
xchg
add
jp
in
sbb
rcll
ret
rcll
ret
cld
xor
mov
fldenv
ja
jno
push
sbb
push
push
pop
dec
icebp
ret
fmull
fwait
pushf
adc
shlb
cmp
sbb
xchg
out
jl
call
cld
jge
jecxz
lds
jo
dec
popf
xorl
cmc
popf
sub
pushf
in
pop
dec
fwait
mov
in
je
mov
add
cmpl
fbld
cmp
and
xlat
jle
mov
jp
dec
es
test
addl
pop
xchg
xor
jne
cwtl
xchg
push
iret
xchg
push
pop
call
lret
out
xor
jbe
ds
ret
push
mov
xlat
ja
sub
pop
aas
cmc
add
pop
pop
fadds
or
jo
mov
decl
pop
notl
jne
pop
pop
dec
add
outsl
repnz
out
fdivp
mull
cld
jp
mov
lods
pop
ds
sbb
imul
xchg
sbb
shrb
push
rcll
xor
adc
or
xchg
and
dec
test
inc
adc
add
imul
and
bound
dec
mov
lods
inc
stc
or
add
iret
js
loope
mulb
addr16
fwait
loopne
and
mov
pop
arpl
pop
scas
icebp
notl
test
mov
mov
gs
lret
sbb
adc
insl
inc
add
bound
inc
sub
out
in
jns
movsl
jo
hlt
in
incl
xor
jbe
cmp
cmpsl
nop
push
in
das
push
xlat
and
mov
xchg
jno
push
out
inc
sti
inc
lods
or
mov
and
adc
push
jl
pop
xlat
sbb
les
arpl
imul
add
subl
or
add
add
mov
movl
movl
mov
jmp
movl
jle
push
pushl
call
andl
adc
xor
xor
mov
sub
and
not
and
movzwl
adc
cmpl
mov
movl
movzbl
mov
jmp
movl
movl
jbe
push
push
push
pushl
call
add
sbb
sbb
xor
add
mov
mov
shrd
adcl
mov
or
mov
addl
jmp
inc
or
add
cltd
or
push
ret
or
ja
popa
or
rclb
aaa
push
out
or
popf
xchg
jge
mov
mov
jo
fsubl
std
daa
leave
popf
sbb
mov
pand
lods
out
aad
aam
jp
ret
xlat
jo
insb
test
add
mov
test
inc
orb
fnstcw
push
add
insb
push
ret
or
jns
cwtl
loope
mov
push
aam
outsl
popa
push
sub
js
sub
pop
data16
lds
xchg
mov
fidivs
dec
fsubl
mov
dec
aas
or
daa
xor
rcrl
aad
out
movsb
movsb
mov
fwait
ret
adc
rcrl
xor
repnz
xor
inc
stos
fldenv
pop
pushf
pmaxsw
add
nop
std
or
dec
roll
lret
scas
push
mov
lock
scas
enter
test
dec
ds
js
arpl
xor
and
push
mov
push
dec
dec
mov
in
in
or
mov
pushf
aaa
mov
fidivs
sub
clc
mov
sbb
flds
leave
cmp
leave
add
loopne
gs
mov
cmp
outsb
mov
test
lea
push
imul
rolb
stc
xchg
cmp
test
pop
and
push
inc
popa
xchg
sahf
scas
xchg
jb
lds
mov
xlat
mov
sbb
lock
insb
aad
and
cmp
cs
movsl
arpl
hlt
lret
cmp
jno
imul
test
sahf
cmp
xor
es
cmp
hlt
sbb
cmp
xor
push
cmp
push
pusha
pop
test
sbb
mull
fistpll
inc
xchg
push
decl
rorb
inc
stos
repz
data16
push
flds
and
mov
cwtl
imul
loope
push
aam
loope
jne
jo
sahf
xchg
sar
jecxz
mov
mov
or
push
mov
stc
jl
daa
or
aam
jns
mov
icebp
andb
sbb
mov
xor
mov
test
xrelease
fistps
mov
into
jns
test
in
cmp
jno,pn
and
inc
sub
jb
or
push
inc
lds
lea
rcrl
jg
pop
jp
mov
mov
bound
inc
dec
fwait
lret
inc
adc
popa
cmp
scas
pop
and
mov
inc
dec
aas
pop
addr16
xchg
shll
test
jp
mov
and
imul
shrb
sbb
fisubl
lret
sub
mov
fisubl
mov
pop
xlat
bound
aaa
jg
sub
xchg
jns
push
loop
cmp
fistpl
lods
loopne
je
inc
lahf
and
jne
mov
je
jmp
insb
pop
in
sti
std
enter
int
push
xchg
jae
jp
mov
stos
fnstcw
adc
sub
int3
pop
cmp
stos
add
mov
out
outsb
and
aas
push
subl
aam
test
sbb
xor
jne
xor
test
movsb
mov
ret
jp
add
pusha
add
ja
pop
dec
std
adc
and
add
dec
jbe
or
repnz
inc
mov
mov
jae
mov
jp
jne
pop
fcoml
lock
dec
xchg
out
data16
add
lret
lret
mov
mov
and
ret
mov
loopne
mov
test
cltd
jno
mov
pop
dec
dec
sarb
sub
sub
dec
mov
and
push
dec
jmp
pusha
lods
ja
mov
adc
cwtl
lea
mov
sub
out
mov
pushf
or
cmp
cmpsl
xchg
scas
xchg
dec
cltd
in
ja
push
idiv
adc
dec
sbb
std
lret
imul
xchg
stos
pop
repz
iret
mov
jae
pop
mov
cwtl
outsb
jle
push
es
je
sub
js
lahf
sub
sbb
out
mov
dec
aam
jle
mov
sbb
adc
mov
lods
mov
pop
mov
push
cmpb
in
in
sub
or
xor
roll
dec
pop
sub
jecxz
inc
aas
cmp
and
fwait
out
cmp
cmp
negb
push
test
inc
or
push
pop
xor
daa
add
lock
xchg
cmp
stos
cmp
in
mov
lret
lret
mov
in
imul
lods
scas
outsl
push
sti
jmp
xchg
push
jne
pop
jne
sub
pop
sbb
ret
test
mov
arpl
inc
mov
sarl
push
into
ret
fadd
mov
daa
lret
inc
mov
pop
xor
loope
callw
push
push
out
or
sub
pop
xchg
add
rcl
fld
sub
aas
add
dec
xlat
sahf
dec
ja
jne
inc
and
pop
pop
xchg
enter
gs
fisubl
hlt
movsb
filds
push
loopne
pop
std
notb
pusha
roll
mov
sub
sahf
and
fbld
out
jecxz
add
push
pusha
pop
sub
sbb
rcl
data16
fisubl
or
mov
mov
seto
arpl
mov
femms
orb
insl
xor
push
ficomps
pop
scas
mov
sbb
inc
xor
push
xchg
int
xchg
scas
sub
mov
outsl
push
inc
xlat
jecxz
int
mov
andb
push
pop
add
out
gs
adc
xchg
repnz
jg
outsb
dec
xor
push
or
adc
pushf
ds
sbb
movsl
mov
jle
nop
dec
jle
js
int
mov
pushf
pushf
mov
bound
mov
jmp
jecxz
and
sbb
xor
mov
je
dec
inc
insb
xor
jns
cmp
xor
mov
pop
inc
loopne
out
sbb
sbb
xor
in
xchg
mov
lods
jns
and
movsb
ljmp
cli
inc
pushf
pop
loopne
pop
cmpsl
adcb
sbb
jnp
xor
fdivr
and
nop
and
ficoml
out
push
inc
dec
pop
out
iret
leave
mov
shll
out
mov
mov
outsl
loope
fistl
adc
ret
nop
in
aad
sub
pop
jns
pop
xor
stc
or
pusha
int
imull
add
ja
es
ljmp
cwtl
sub
das
imull
or
nop
push
push
sbb
flds
pusha
loop
ljmp
xchg
ljmp
mov
pop
lahf
jns
xor
out
notl
out
and
push
pop
push
das
outsb
mov
push
jbe
cmp
andl
push
mov
push
movsl
sbb
jb
stc
out
push
mov
in
or
shrl
ret
int
in
fidivrs
sbb
sbb
popf
dec
roll
psllq
jge
shl
xor
movl
or
shr
mov
subl
mov
mov
addl
mov
adcl
shrd
shr
mov
cmpl
not
mov
movl
mov
jmp
mov
mov
jb
pushl
pushl
pushl
pushl
push
pushl
call
or
adcl
movl
sub
and
subl
subl
mov
mov
xor
xor
adcl
or
adcl
shl
add
add
add
mov
mov
adc
mov
and
shrd
cmpl
movl
not
mov
mov
jmp
movl
movl
jge
pushl
pushl
push
pushl
push
push
call
sbb
add
or
or
xor
or
add
mov
movl
cmpl
mov
movl
mov
jmp
movl
movl
jg
push
push
pushl
call
add
sbbl
mov
adc
mov
xor
mov
addl
sub
shr
movl
mov
or
mov
addl
xor
shl
cmpl
movl
mov
not
jmp
movl
ja
pushl
push
push
push
call
xorl
xor
incl
xorl
subl
sub
xor
mov
sub
or
cmpl
mov
mov
movl
jmp
mov
jl
push
call
addl
adc
xor
neg
mov
mov
add
sbb
and
mov
movl
mov
and
mov
movl
mov
add
movl
mov
mov
adc
jmp
ret
mov
dec
rcrl
dec
mov
add
xor
in
mov
rcll
les
lret
dec
adc
andl
push
xor
insb
jbe
into
pop
or
cmp
add
jno
lret
mov
lock
incl
out
pop
push
push
push
in
pop
or
lds
xor
xchg
enter
jne
sahf
dec
fstpl
rcl
leave
sub
adc
mov
xchg
cmpsb
mov
or
lret
out
xchg
lods
or
dec
aad
imul
and
push
jge
in
out
push
inc
adc
mov
jb
pop
mov
divb
cmp
fisttps
jo
cmpsb
sub
and
or
mov
xor
xor
dec
or
push
subb
mov
push
mov
push
pop
pop
inc
negl
leave
add
sub
adc
outsl
push
xor
adc
in
in
mov
dec
out
push
dec
movsl
loopne
bound
sbb
sub
mov
out
fbld
cmc
xchg
or
or
shl
pop
jb
ds
repnz
shlb
pushl
adc
mov
mov
leave
lahf
cmpsl
inc
insl
sbb
insb
lods
jmp
inc
sbb
out
loop
cs
xorl
add
push
lods
jp
pushf
mov
jecxz
roll
add
enter
test
movsb
xchg
orb
and
aas
popa
push
arpl
cli
in
inc
pop
pop
lods
xchg
or
addl
xlat
insl
cwtl
sub
sub
sarl
cmp
xchg
movsb
inc
int
int
jns
in
mov
jbe
cmp
data16
mov
fadds
fucompp
add
pop
or
add
push
cmp
and
outsb
enter
xor
pop
rolb
jl
push
scas
push
shll
and
xor
rep
cmp
mov
adc
jecxz
or
lock
pop
dec
or
pushf
push
in
test
loopne
je
fbstp
push
insl
dec
pop
jle
test
popa
jns
mov
repz
in
int3
jo
mov
xchg
cmpsb
jb
jmp
repnz
andl
cmpsb
dec
sti
push
xchg
sbb
scas
dec
or
inc
shl
shrb
in
mov
fdivl
stos
insl
icebp
arpl
cmp
das
data16
mov
leave
out
cmpsl
mov
jbe
movsl
pcmpeqd
cwtl
fcmovne
outsl
or
mov
add
jb
cli
adc
scas
test
jno
mov
fists
inc
int3
jl
add
fistpl
xchg
jg
or
sub
jns
loop
cmpsb
xchg
daa
pop
in
mov
loopne
loop
cmp
stos
loopne
dec
push
pop
cltd
lock
clc
xchg
lcall
xor
add
mov
scas
aaa
pop
call
shlb
bound
imul
adc
and
cmpsl
mov
fstpt
mov
inc
xchg
mov
jno
mov
mov
movsb
je
jo
xchg
rorl
cmp
sbb
xchg
clc
xor
movsb
jge
std
sbb
or
sbb
aaa
test
mov
dec
pop
enter
push
outsl
jne
inc
repz
loop
mov
xor
lods
js
jmp
cmp
jbe
adc
fcoml
pop
mov
add
mov
imul
adc
rcl
sub
cmp
xchg
dec
cmpsb
xor
jns
push
jle
pop
jl
push
sub
insb
mov
and
pop
or
lret
mov
pop
mov
lret
xchg
mov
push
pop
dec
icebp
pushf
add
cli
ss
jae
mov
cmp
aaa
dec
aam
mov
adc
mov
scas
pushf
rclb
mov
movsl
xor
ja
jmp
ds
test
sahf
pop
outsl
and
fs
sbb
cmp
or
add
cli
jae
and
xor
popf
out
leave
shlb
or
out
in
loope
ljmp
xlat
push
xor
movsb
pusha
sbb
push
jg
dec
adc
push
or
sub
jl
int3
rcll
mov
push
sbb
sbb
jp
and
sbb
mov
lods
cmp
cmc
pop
mov
jl
adc
jne
ror
outsl
sub
pop
xor
jo
push
mov
daa
cmp
stc
fwait
sbb
xchg
fisubl
jo
mov
or
frstor
aas
inc
das
mov
jge
fiaddl
jae
aaa
xchg
xchg
pop
adc
mov
sbb
mov
std
ljmp
shlb
lret
add
iret
ja
pop
mov
loope
pop
mov
xchg
loope
push
int
scas
xor
xlat
in
mulb
lcall
xchg
mov
outsl
loopw
cs
dec
xchg
jmp
mov
fs
fcoml
xchg
or
mov
jl
test
subl
stos
repz
mov
pop
icebp
dec
inc
adc
inc
ja
adc
jmp
sub
cmp
inc
jbe
cmpsb
ret
int
push
lds
out
push
int
cmp
mov
test
movb
push
shrb
dec
scas
push
lea
pop
movsb
lret
sbb
std
mov
mov
mov
jb
fstpt
xor
xchg
cltd
mov
pusha
xlat
scas
mov
push
stc
adc
lret
mov
dec
mov
jae
frstor
scas
xchg
sidtl
pop
and
sub
or
lock
fwait
pop
inc
les
mov
mov
or
inc
push
cld
out
pushf
add
arpl
pop
jg
mov
cmpsl
xchg
std
dec
sub
and
push
fiadds
add
je
inc
xchg
pushf
inc
test
popa
cwtl
out
lods
not
push
mov
sbb
popa
xchg
test
popa
lahf
inc
adc
pop
aaa
mov
mov
out
xor
pop
pushf
pushf
sub
iret
jl
icebp
in
pop
adc
sti
cld
stos
dec
ljmp
or
repnz
dec
push
pop
xchg
sub
xor
popf
mov
loopne
push
pop
outsb
jle
arpl
cld
sbb
xchg
unpckhps
daa
sub
insl
pop
addr16
adc
xor
fsubrs
inc
and
mov
jo
add
stc
jmp
fucomp
inc
xchg
sti
sub
mov
hlt
mov
jle
inc
or
xor
add
cmp
and
pop
mov
loop
ds
je
xchg
push
ja
mov
push
inc
xor
cmpsb
lret
test
andb
or
mov
and
push
jmp
sub
inc
scas
xlat
test
int3
pop
pop
push
ret
push
push
jecxz
mov
dec
andl
add
cld
push
cli
cmp
lock
lret
mov
movl
jmp
lods
jp
scas
adc
xchg
mov
pop
fisttpl
ja
dec
sub
push
mov
cmp
jecxz
add
adc
rcll
cmp
in
aaa
add
cli
mov
fsub
add
fwait
jg
icebp
sub
pop
ret
adc
adc
xlat
mov
jmp
jg
out
adc
mov
scas
and
mov
in
mov
cmc
sub
fistl
jecxz
arpl
pop
aas
aad
sub
lea
jnp
mov
icebp
cwtl
mov
jge
jo
scas
nopl
sub
jns
rclb
push
fldt
mov
pop
lret
mov
sbb
add
inc
ret
ljmp
push
jno
ret
push
and
in
aas
adc
or
filds
sbb
jne
mov
fiadds
jmp
pop
inc
cmc
fnsave
insb
in
aaa
out
ret
jno
sahf
lock
daa
outsb
mov
out
fisubl
cmp
int
call
xchg
fcoml
inc
xor
clc
jnp
clc
iret
lret
rorb
popf
or
jne
test
sbb
mov
test
fsts
iret
testb
std
and
add
xchg
push
jne
sub
jns
cmp
out
test
fsubrs
adc
aad
sub
popf
sahf
out
fbstp
cwtl
ljmp
mov
inc
and
call
mov
cmp
lods
mov
push
daa
fdivr
lahf
mov
and
outsb
xlat
fwait
pop
scas
dec
jge
inc
cli
mov
sub
jb
or
lahf
jp
stos
cli
loopne
fsubl
lods
in
pop
insl
dec
inc
xchg
mov
jp
dec
sti
cs
push
test
addr16
out
add
in
arpl
lret
pop
mov
cmp
sub
push
and
mov
dec
test
daa
ljmp
shl
mov
loope
dec
mov
xchg
nop
pop
lds
push
sbb
shlb
js
insb
mov
out
cltd
inc
mov
pop
daa
push
test
cmp
cli
cmpsb
out
mov
fwait
adc
bound
test
xchg
imul
mov
inc
std
and
dec
xor
push
xor
je
imul
je
dec
call
lods
or
paddd
data16
fstpl
jnp
mov
div
adc
pop
xchg
mov
je
pop
fcmovu
fimuls
dec
xlat
or
push
imul
jmp
scas
lahf
xchg
loop
inc
sub
push
lods
notl
and
push
pop
repz
add
or
cltd
pop
out
inc
push
cld
inc
sbb
sub
adc
push
add
mov
cmp
mov
push
lcall
pushl
cmpsl
aam
xor
jae
fcmovnb
mov
rcll
lret
icebp
loope
mov
es
into
adc
cmp
sub
andl
cmp
mov
sbb
rcrl
loop
push
push
stos
or
ds
and
push
mov
lods
mov
out
dec
rclb
adc
fisubs
inc
bswap
or
add
mov
cmp
js
jg
xchg
aam
inc
pop
loopw
xlat
lods
jo
mov
mov
dec
insb
stos
icebp
call
pushf
cmc
push
test
dec
jmp
xchg
out
fnstenv
sbb
xchg
adc
xlat
cmp
mov
daa
add
ljmp
fsts
xor
sbb
fmuls
outsl
icebp
stc
in
rol
push
clc
xchg
sbb
insb
and
sti
lea
adc
mov
jl
sbb
push
inc
mov
subb
mov
gs
xor
loopne
popf
jp
insl
cmpsb
add
push
push
arpl
mov
pushf
inc
les
jmp
int3
sti
fidivl
roll
imulb
fmull
out
dec
mov
fcoms
cmp
cmp
adc
xchg
in
xchg
into
xchg
jmp
jb
mov
je
inc
add
jbe
dec
and
dec
pop
div
pushf
jne
adc
data16
lods
mov
and
push
mov
rolb
dec
js
enter
inc
inc
jne
adc
push
in
mov
push
jns
cltd
in
jbe
pusha
inc
ljmp
adc
cmp
lret
and
sbb
lret
xor
ds
dec
aaa
enter
add
push
and
adc
or
jns
pop
roll
insb
or
push
or
in
jmp
imul
insl
jmp
push
lock
or
cld
or
lahf
ret
rol
mov
mov
mulb
sbb
or
repnz
push
icebp
mov
sbb
cmp
ss
and
or
call
ja
xchg
fimull
in
jo
mov
push
sub
idivb
adc
sub
les
dec
push
pusha
cmp
shl
inc
loop
adc
adc
or
mov
sbb
call
sarl
test
pop
repz
sub
cs
jb
leave
cmp
sbb
mov
nop
in
xor
mov
jne
xchg
hlt
mov
adc
adc
pop
push
das
movd
out
imul
dec
adc
lret
jl
ss
and
test
nop
das
cmp
adc
lds
sarb
ljmp
cmp
sti
xor
fsts
and
mov
mov
dec
xlat
sbb
lret
scas
xchg
mov
mov
sub
sbb
cli
in
inc
rolb
fisttps
insb
jne
rorl
dec
mov
es
fs
xor
jge
push
mov
xor
sub
repnz
jnp
fadd
ja
sbb
jp
stos
test
andb
push
mov
xor
sahf
outsb
sbb
test
push
scas
mov
cmpsb
sti
test
fsubrs
insl
jns
cmc
lcall
push
fs
pop
or
jo
cmpsl
push
xchg
pop
inc
das
mov
cmp
xor
xlat
outsl
adc
xlat
loopw
adc
sbb
sub
jecxz
fldcw
sub
ret
mov
mov
stos
push
and
lcall
popa
jecxz
jo
cli
mov
mov
xchg
jl
add
sub
mov
cmp
imul
add
fistps
decb
insb
and
enter
mov
and
repnz
cmpsl
jle
scas
fs
sbb
and
dec
out
inc
xchg
add
sub
iret
mov
mull
popf
in
cltd
push
lea
sti
roll
cmp
cmp
mov
or
scas
dec
hlt
inc
mov
jno
scas
xor
dec
and
or
and
xchg
push
cwtl
pop
mov
lret
and
loopne
xor
add
inc
fstpt
scas
test
rorb
enter
pop
add
add
dec
push
adc
call
cmpl
lret
ja
cmp
paddsb
repnz
jg
pop
push
in
mov
das
sbb
and
dec
and
push
int3
xchg
xchg
es
clc
bound
iret
aam
push
sbb
inc
add
dec
aaa
cmp
push
jbe
jl
push
inc
or
sbb
xchg
imul
fadds
int
sub
fadds
push
loope
mov
jnp
testl
inc
cmp
loopne
mov
popf
lea
movsl
sub
mov
xchg
sbbb
lfs
mov
mov
sub
inc
pushf
in
xchg
repnz
mov
cmpsl
mov
or
add
sub
lret
inc
jmp
cmp
mov
mov
dec
jmp
ljmp
mov
lea
pusha
mov
loope
in
icebp
sbb
popf
jg
adcl
popa
mov
iret
inc
icebp
add
sbb
lret
in
in
mov
movsl
out
cmpsb
xchg
cmp
mov
aaa
xchg
sub
xchg
lods
xchg
mov
sbb
push
ret
scas
aaa
in
hlt
mov
arpl
out
push
add
addr16
jnp
add
je
or
test
ret
insb
sub
mov
shr
mov
xchg
xor
rcrl
mov
pop
mov
sahf
in
jmp
or
dec
fwait
stc
in
loopne
aad
sbb
scas
movb
mov
sahf
mov
push
filds
sbb
mov
dec
bound
mov
mov
xorb
jnp
xchg
popa
dec
and
jbe
ds
mov
dec
aas
sbb
xor
cmp
shll
or
sbb
lock
leave
dec
rep
mov
mov
fdivl
mov
inc
push
sub
in
mov
hlt
rorb
insb
aaa
add
mov
xor
mov
je
mov
mov
repz
shll
xchg
cmpsl
jns
xchg
ud1
into
arpl
out
in
mov
cwtl
pop
cld
mov
push
imul
imul
mov
les
mov
sub
std
adc
cmp
lcall
or
pop
xchg
xchg
test
shl
roll
cmp
sti
mov
cmp
cld
test
cltd
sub
cld
daa
jl
or
mov
inc
aam
push
andb
outsb
mov
jle
adc
aam
xor
mov
xor
std
cli
aaa
frstor
pop
jg
in
notb
mov
insl
stos
mov
ds
shl
ja
jmp
int3
subl
dec
mov
call
xor
adcl
mov
fstpl
dec
jae
out
out
loopne
fwait
std
dec
push
out
aam
scas
in
sub
sbb
aam
outsb
mov
arpl
inc
mov
inc
inc
test
pop
sbb
mov
in
cmp
clc
dec
testb
cld
js
jb
add
xor
std
filds
in
pop
jne
jmp
xchg
sub
daa
fucomi
lcall
mov
arpl
add
loopne
mov
dec
sbbl
add
das
ficoms
mov
inc
push
insb
in
push
sub
and
lret
fildl
repz
popf
icebp
fmull
fwait
mov
xchg
sbb
inc
xchg
shrd
out
fiadds
mov
xchg
or
push
dec
lcall
mov
jns
or
in
js
add
dec
mov
fs
xor
neg
int3
pop
pushf
or
sbb
xor
push
cld
lods
mov
jbe
popa
stos
jo
add
jle
sub
es
jnp
pop
sub
mov
lcall
cmp
test
push
jns
aam
jge
fildll
mov
enter
jp
idivl
xor
push
gs
cwtl
gs
lods
sahf
rcl
pop
xchg
aas
in
dec
adc
cmp
negb
jmp
lea
and
pop
or
scas
push
xchg
mov
enter
pop
stos
stos
into
dec
sub
stos
test
xchg
rcrl
or
cmp
cmp
jnp
adc
lcall
out
idiv
movsl
xor
fs
cmpsb
dec
scas
cli
test
mov
push
dec
test
or
add
pop
enter
xchg
sub
dec
pushf
sbb
xlat
or
xor
mov
fisttps
cmpl
cmp
fiadds
test
lret
dec
inc
mov
jl
and
pop
xor
stc
add
cmpsl
mov
sbb
fmull
fiadds
sub
and
out
jmp
ret
jo
push
cmp
push
sbb
cmp
stos
imul
mov
mov
jns
inc
nopl
mov
pusha
pop
orb
mov
mov
and
iretw
mov
orl
std
insl
nop
mov
insb
sti
cld
icebp
das
dec
js
jbe
cmpsl
mov
ja
sahf
add
mov
mov
cmp
inc
popf
movsl
stos
or
add
mov
call
jae
sbb
nop
push
rolb
sbb
and
xlat
je
les
lahf
aad
inc
push
ja
and
out
or
in
dec
push
or
sub
sub
xor
push
dec
dec
lea
mov
out
fiadds
rorb
xchg
and
popa
insb
jp
xchg
xchg
mov
fists
xor
push
xor
test
jae
mov
add
dec
inc
fwait
or
aad
cmc
mov
dec
jo
scas
inc
sbb
adc
mov
dec
imul
xchg
cmp
or
fisttpl
repz
adc
sub
in
nop
mov
xor
fisubrs
je
rorl
or
cmpl
pop
xor
dec
fisubs
adcl
xchg
jb
mov
jge
std
jns
add
inc
arpl
pushf
sub
lods
iret
shlb
jo
mov
push
xchg
push
enter
out
in
push
dec
mov
inc
dec
mov
scas
enter
push
fucom
jle
push
out
sub
mov
mov
popf
adc
movsl
inc
popf
push
push
sub
aas
std
sub
mov
jae
and
jne
rorl
xor
gs
push
dec
add
in
adc
je
js
out
jg
sarb
mov
lock
dec
jecxz
cmp
jo
push
in
jle
outsl
mov
inc
inc
or
jmp
mov
or
test
or
add
icebp
inc
scas
mov
xor
cmp
into
adc
add
sahf
cmp
ficomps
push
and
inc
mov
add
aam
mov
or
lea
mov
mov
mov
shrd
shr
jmp
in
in
data16
push
sbb
cmc
lret
mov
pswapd
pop
push
lcall
push
ja
les
in
jo
addr16
mov
sub
adc
dec
sarb
roll
loopne
or
lock
dec
mov
push
test
lahf
jbe
add
lods
popf
test
fistl
fists
lods
out
xor
jl
adc
add
mov
or
mov
in
test
cld
sub
xor
cwtl
push
sub
mov
pop
inc
lahf
mov
dec
cmp
daa
in
sub
popa
aad
dec
lcall
mov
idivb
add
inc
in
mov
arpl
cwtl
es
call
jle
test
lods
inc
dec
bound
dec
and
and
stos
out
shl
cmp
cmp
push
cli
inc
xchg
dec
dec
lds
divl
imul
xchg
lret
cmp
popa
mov
cmp
lods
xor
fadds
movsb
daa
into
jbe,pt
push
loope
pop
test
in
imull
bound
out
dec
dec
std
xchg
sbb
imul
push
mov
jp
jnp
adc
dec
idiv
xchg
mov
js
test
in
popf
cmp
xor
or
mov
push
nop
add
push
shl
jbe
cs
jne
pop
or
and
outsb
lret
add
cs
int
sub
adc
stc
imul
mov
arpl
divl
fcmovb
lret
jnp
push
addr16
in
cmp
shrb
mov
fdivrs
loope
xor
aad
sub
in
jecxz
fisttpll
mov
repnz
iret
pop
adc
icebp
push
es
repnz
rolb
enter
sarb
fs
stc
dec
in
xchg
icebp
push
xchg
push
loope
adc
adc
addl
mov
popa
adcb
mov
fstps
sbb
gs
push
scas
jbe
pop
mov
lock
fildll
das
dec
or
push
xor
sub
jb
out
inc
mov
mov
mov
rcrb
lock
push
xor
fisttpll
aaa
mov
std
jbe
test
xor
sub
loop
mov
xor
addr16
imul
call
cwtl
aam
xchg
scas
ja
in
outsl
cmp
je
jnp
inc
je
jge
and
xchg
mov
cmp
mov
inc
or
sahf
mov
mov
cmpsl
sub
mov
xchg
rorl
add
dec
test
cmp
dec
inc
pop
jg
dec
cmpsb
cmp
sub
inc
mov
clc
call
mov
sub
adc
mov
xchg
testb
mov
aaa
mov
std
mov
fists
or
mov
push
arpl
aam
cli
mov
push
stos
xchg
mov
ja
xchg
leave
sub
dec
and
popa
out
movsb
daa
lea
xchg
inc
repz
xor
insb
lods
jle
mov
mov
pop
inc
mov
pop
ja
rclb
push
imul
addb
adc
lods
cli
xchg
aam
push
xchg
aad
inc
mov
mov
and
lods
cmp
rcll
mov
cmp
stos
scas
call
push
jg
jg
stos
outsl
xor
xchg
imul
notb
popf
xchg
xchg
pop
hlt
enter
inc
mov
xchg
lods
mov
dec
xchg
add
sti
mov
pop
cmp
ja
mov
push
xchg
cwtl
push
iret
jmp
aas
into
pop
adc
mov
lods
insl
cli
or
les
inc
gs
xor
pop
das
push
cmp
aaa
add
gs
push
push
das
ret
adc
movsl
out
daa
mov
inc
mov
stc
pop
adc
xor
idivl
paddb
movsb
mov
lods
cmp
incl
pop
in
xchg
shrl
call
shrl
mov
into
shll
dec
mov
mov
xchg
sub
jecxz
push
enter
test
sti
push
cld
mov
and
xchg
inc
in
dec
or
mov
lock
je
push
and
jg
outsb
mov
mov
fnstenv
sbb
jl
data16
icebp
and
dec
sbb
in
cmpsl
mov
mov
loope
add
or
xchg
aad
dec
dec
mov
stos
jmp
gs
movsl
lock
pop
and
cwtl
pusha
mov
out
mov
loope
jb
push
pop
cs
push
xor
jg
mov
pop
push
aad
sub
idivb
lahf
jg
nop
cmp
fisttpl
sbb
adc
daa
dec
push
enter
fwait
inc
ljmp
roll
xchg
cmpsb
pop
out
and
call
xchg
in
clc
lock
insb
insl
mov
hlt
in
ror
movl
sbb
loope
push
int3
in
paddq
fwait
adc
fcoml
loop
decb
test
mov
stos
xor
push
xor
sub
mov
sti
addr16
xor
mov
pop
mov
shl
out
loop
xor
sbb
add
mov
pop
mov
outsb
addr16
xchg
pop
iret
jecxz
cmc
js
mov
push
fmuls
mov
jl
jne
std
push
push
jmp
jns
inc
pop
fisubl
xor
in
jg
inc
add
nop
cwtl
addl
inc
outsl
mov
loope
adc
into
jecxz
jp
das
jne
fwait
inc
decl
lahf
inc
mov
out
jae
lods
and
imul
ret
dec
xlat
push
imulb
pop
add
pop
lds
mov
or
dec
cmp
xlat
repz
push
sub
xor
mov
cmp
push
sbb
adc
ret
cmp
icebp
movsb
or
xor
add
pop
lcall
test
popf
mov
cmp
outsl
pop
xor
andb
std
leave
xchg
add
push
in
loope
int
out
mov
icebp
cmp
pop
adc
add
bound
jmp
fisubs
popa
outsl
outsb
rolb
dec
jne
and
lret
mov
lock
data16
int3
fcoml
mov
hlt
cmp
mov
adcl
das
scas
mov
repnz
into
mov
or
mov
addr16
lods
sbb
dec
mov
and
es
imul
bound
orb
push
fcmovne
and
addb
das
jle
arpl
fstl
mov
clc
jp
and
jb
sub
int3
jecxz
aam
xchg
cwtl
sub
mov
push
insb
jmp
cmp
outsl
push
sbb
fnstcw
inc
cli
sti
jecxz
push
out
outsl
pop
cmp
mov
inc
lea
dec
adc
notl
test
pop
jle
roll
jg
popa
or
cmpb
aam
cld
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
jmp
outsb
hlt
xorl
adc
xchg
repz
outsl
add
or
xlat
mov
les
adc
ss
movsl
inc
test
dec
xor
dec
cmp
xor
mov
jmp
loope
pop
or
pop
sbb
mov
ficoms
mov
adc
fstps
mov
push
mov
cmp
insb
jecxz
push
xor
lcall
js
xlat
and
sub
mov
and
add
sbb
mov
ficomps
ret
arpl
jle
add
call
je
fwait
push
mov
nop
push
cmp
xchg
xor
adc
ret
dec
cmpsb
loop
mov
inc
dec
ret
and
pop
jge
arpl
pop
mov
mov
enter
icebp
jp
add
dec
or
sub
mov
push
jbe
xor
nop
popf
sbb
add
dec
mov
outsl
mov
dec
mov
mov
es
mov
mov
mov
ret
jo
mov
pop
addr16
mull
mov
daa
jle
sti
mov
rol
jg
dec
cwtl
mov
fldenv
dec
sub
jb
or
push
push
mov
fisubrl
adc
rclb
dec
cmp
sarb
pushf
mov
mov
ret
mov
ficoms
shrl
test
inc
stos
in
shll
xchg
sub
mov
mov
sbb
in
cmp
pop
push
xchg
sbb
pop
out
adc
enter
xor
xchg
pcmpeqb
add
cmp
popf
xorl
lea
ret
push
lret
rcr
push
les
insb
inc
xchg
jl
lods
pop
and
push
xchg
xchg
mov
cld
punpckhdq
xchg
pop
pop
push
jge
sbb
cmc
xchg
mov
cli
pop
addl
dec
push
mov
ds
lcall
pop
andb
or
push
sbb
mov
sbb
es
mov
pusha
add
leave
mov
cmpsb
cld
clc
test
push
push
aas
cmp
leave
and
pop
pusha
ja
or
popa
xchg
push
ret
mov
xchg
mov
or
call
xor
pop
and
nop
call
inc
jp
cmpsb
stc
into
xlat
xchg
sub
pop
lcall
and
fsubrp
pop
icebp
in
pushf
jle
popa
aad
push
leave
dec
incb
fadd
inc
cmp
cmpsb
pushf
cwtl
lods
pushf
sbb
xsaveopt
les
out
mov
jne
pop
fistps
inc
pop
adc
cmp
and
adc
cmp
pop
mov
jg
enter
pop
pop
cltd
bound
or
in
fbstp
insb
mov
xchg
pop
jl
in
jno
or
or
lret
addl
mov
out
rcrb
fwait
or
xorb
pop
pop
mov
loope
ljmp
and
scas
push
lods
rcr
pop
lcall
repnz
data16
cmpsl
stos
loope
dec
repnz
jbe
xchg
int
repz
add
xor
mov
ds
and
cld
mov
sub
fs
adc
cltd
les
dec
lret
dec
pop
lods
and
test
out
test
stos
inc
jb
push
lods
jns
mov
cltd
sbb
xchg
addb
add
push
repnz
mov
pop
insl
and
stos
mov
pop
lret
inc
pop
fsubp
loop
mov
ficoms
add
pop
std
or
mov
jp
adc
lcall
fs
lods
push
icebp
and
dec
adc
pop
daa
stos
jge
mov
cltd
dec
shlb
pop
inc
mov
aam
cltd
mov
jg
or
rcr
repnz
push
cld
push
les
std
inc
test
mov
mov
push
mov
test
mov
push
in
popf
xchg
lock
cld
leave
jp
cmp
cld
fists
ret
shl
in
jl
xor
xor
jmp
and
adc
dec
sahf
js
mov
dec
sti
imul
add
loop
test
dec
shll
shrl
mov
adc
or
dec
mov
fcmovu
cmc
push
pop
push
bound
inc
and
adc
sbb
push
jae
mov
std
mov
call
jmp
cld
cvtps2pd
pusha
gs
aad
xor
add
enter
loopne
imul
ss
sbb
aaa
lods
sti
mov
adc
je
fimull
xor
xchg
adc
xor
xor
testl
test
xorb
sbb
adc
data16
push
push
mov
sarl
cmp
ret
sub
inc
pop
fcmovnbe
sti
sub
std
stc
pop
jmp
shll
xor
std
pop
subb
sbb
dec
xchg
clc
or
sbb
mov
pop
sub
popf
and
or
jp
out
dec
push
das
lods
stos
xor
adc
fwait
xchg
leave
or
aam
in
movsl
cmc
adc
pop
loopne
add
mov
push
clc
jo
or
sub
xchg
hlt
mov
sbb
push
mov
pop
rcrl
inc
testb
sbb
rclb
loope
jl
or
pop
cmp
pop
inc
movsb
bound
jne
mov
xchg
adc
ja
leave
fnstenv
cltd
or
mov
jne
dec
mov
lock
cmp
jns
sbb
cmpsb
imul
push
testb
arpl
mov
ds
test
lods
inc
aad
divb
out
push
test
mov
icebp
es
pushf
add
xchg
mov
mov
aad
push
stos
mov
and
push
xchg
cmp
loope
mov
cld
adc
outsb
sub
pushf
ret
shll
pop
arpl
dec
js
inc
sub
and
test
in
sbb
leave
mov
cmp
fstpt
je
nop
popf
sbb
lret
ja
and
cmpsl
add
fisttpl
cmpsb
sub
jae
ds
xchg
fwait
ds
and
repz
sub
cmp
inc
jmp
push
and
sub
sbbl
loope
fsubrl
or
stos
sub
pop
shl
jns
fsubr
iret
inc
mov
sub
push
repnz
pop
shlb
es
shll
jle
sar
push
sarb
data16
cmc
ljmp
jecxz
or
test
xchg
or
xchg
loope
and
mov
iret
aad
xlat
jae
pop
xchg
inc
jmp
repz
idivl
pusha
mov
fstp
js
sbb
sub
inc
movsb
mov
push
imul
xor
push
mov
insl
xchg
pop
mov
and
fidivrl
dec
lret
test
shll
mov
dec
push
lret
sti
or
mov
dec
in
lods
enter
add
in
mov
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
jmp
add
mov
inc
pop
inc
or
aaa
mov
ja
cmp
push
lret
inc
push
into
js
test
xor
imul
aad
fnstsw
out
arpl
stc
sub
lcall
test
mov
sub
mov
iret
cmp
scas
lods
or
fildl
in
xchg
xchg
ror
mov
test
iret
in
or
test
in
sub
jmp
or
fs
mov
fs
and
add
lcall
je
aaa
stc
js
rcrb
nop
lret
imul
shlb
add
outsb
pop
das
add
dec
cmc
mov
cltd
mov
sub
jne
mov
sbb
ret
push
cmc
fsubs
sub
out
xchg
ja
gs
sahf
mov
cmp
test
add
lss
cmp
mov
lock
mov
cmc
mov
je
gs
jmp
fucom
mov
mov
push
cli
sub
imul
fs
sub
mov
sub
pop
inc
ret
sub
push
xor
mov
pop
insb
int
mov
fwait
outsl
mov
or
dec
addr16
inc
movsl
or
pop
cs
or
jnp
mov
subl
xchg
pop
mov
push
ret
imul
dec
mov
loopne
les
scas
shlb
bound
scas
xchg
ret
lret
aam
out
shll
in
xor
push
cmp
mov
mov
mov
and
repnz
repz
push
xchg
dec
shrl
jo
mov
in
mov
lods
mov
fnstcw
repz
xchg
adc
sti
orb
gs
mov
das
iret
test
xchg
dec
icebp
icebp
dec
lods
shrb
dec
cmp
adc
nop
lahf
ljmp
push
lcall
jns
cmpsl
ds
movsl
call
push
bound
lret
dec
xor
mov
mov
es
repz
lods
jmp
jnp
jge
cmc
cmp
cmpsb
push
lock
addr16
xor
sub
mov
jbe
clc
or
mov
pusha
dec
pop
xor
dec
loop
test
leave
xchg
jb
jo
daa
jmp
adcl
daa
sbb
ret
lds
mov
inc
add
and
mov
jae
popl
xchg
aam
icebp
xor
test
mov
clc
mov
jnp
orb
xchg
dec
and
js
xchg
std
lcall
dec
cmpb
nop
cmp
repz
mov
and
mov
pop
mov
sub
aad
scas
cltd
test
leave
ja
jae
out
push
jae
stos
xchg
add
dec
cld
scas
lods
xchg
bound
cli
scas
sub
jno
xchg
pop
insb
mov
mov
cli
aaa
es
sbb
push
pop
pop
cmpsl
push
popa
lcall
push
xor
sbb
pop
jg
xchg
sbb
jmp
jns
into
pop
out
hlt
push
mov
test
push
jae
bound
cmp
xor
cmc
int
push
mov
cmpsl
shlb
mov
int3
pop
dec
dec
pop
lods
mov
mov
imul
pop
sub
ja
cmp
mov
aaa
jnp
adc
jl
xchg
flds
lcall
testl
xchg
inc
jecxz
add
lcall
loop
jg
add
popf
insl
leave
andl
cmp
stos
es
lret
jae
xchg
scas
xor
ja
movsl
inc
xchg
cs
mov
out
subl
je
lret
sub
stos
imul
cmc
inc
inc
enter
adc
inc
and
add
loopne
movsl
xchg
loopne
xor
daa
mov
jmp
imul
push
sti
cmc
jmp
aas
sbb
int3
sub
sub
std
fcmovnbe
stc
jl
scas
data16
mov
es
loopne
or
push
push
loopne
dec
and
in
xor
jae
inc
fstps
cmp
pop
cmp
out
mov
jp
std
das
sahf
fwait
je
sub
and
sub
test
andb
dec
pop
add
fsubrs
outsb
fnstenv
cmpsb
scas
insl
test
pop
call
imul
popf
push
mov
mov
adc
lea
cld
je
in
push
dec
sbb
sbb
divb
or
loope
cltd
sbb
add
and
sub
ss
jmp
push
pop
subl
pop
dec
xlat
pop
mov
stc
mov
inc
or
fnsave
jno
loop
test
jle
pop
cmp
enter
les
lea
xchg
mov
shlb
frstor
inc
xor
arpl
call
mov
jg
jb
sub
add
pop
mov
lahf
outsl
cmp
adc
inc
pusha
leave
lcall
jo
and
mov
shrl
insb
add
add
jmp
pushf
mov
or
test
inc
loopne
xchg
lret
fadds
es
in
sbb
vcmpps
mov
sub
ljmp
fldenv
icebp
pushf
or
cmp
pop
aam
stos
xor
call
stos
jae
add
pop
push
icebp
imul
xor
add
push
dec
popf
sub
das
mov
scas
popa
into
in
jb
xor
dec
rorl
jne
xor
hlt
flds
cmc
cmp
xchg
mov
or
sti
cmp
femms
jl
lods
dec
lock
aas
dec
jecxz
inc
test
nop
push
jae
mov
lahf
into
mov
xchg
je
sti
add
loope
negl
pop
mov
fcoms
jle
insl
vsubpd
leave
mov
pusha
ret
mov
pop
mov
cmp
int3
xor
cli
aaa
xor
adc
sbb
and
jbe
push
xchg
inc
stc
fidivs
mov
mov
xchg
xchg
fucom
mov
popa
iret
add
inc
fwait
lods
pushf
fwait
mov
xorl
mov
jle
push
aad
addr16
add
fsubr
xchg
cmp
xchg
and
dec
xchg
xor
scas
and
icebp
push
jno
decl
add
inc
stc
mov
fs
push
out
insl
je
outsl
gs
jle
sub
inc
dec
sbb
and
mov
inc
mov
mov
pop
lds
test
push
outsb
shl
mov
inc
int3
add
inc
pusha
imul
addr16
vpunpckhqdq
pop
add
das
pushf
movsl
sbb
inc
inc
xor
push
xchg
adc
cmpb
push
inc
jnp
bound
fmull
ss
jmp
mov
jnp
sahf
mov
negb
cmpsl
pop
mov
and
test
scas
rcll
loop
or
xchg
loop
push
ds
cmpsb
adc
pop
scas
test
mov
ret
adc
int3
adc
adc
adc
jge
mov
mov
lods
enter
add
hlt
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
jmp
orl
push
cmpb
fcoms
loop
iret
mov
cmovns
mov
dec
xchg
cltd
mov
dec
adc
dec
into
cmc
inc
lods
in
das
into
stos
dec
in
pop
popfw
rcrb
jmp
cmpsb
loop
out
scas
mov
gs
cmc
xor
lahf
and
cmp
dec
lcall
or
and
or
cmc
cmpsb
lcall
xor
sub
xor
inc
in
int3
in
pop
push
fcomps
pop
std
fildll
xor
push
mov
imul
push
fldcw
jno
aam
pop
sub
je
or
lods
mov
jb
repnz
rcrb
jne
test
xor
or
imul
and
pop
add
or
daa
xchg
repz
lods
daa
into
push
outsb
nop
xchg
fadd
cmp
xchg
stos
testb
stos
inc
rcrl
incl
mov
bound
and
nop
addl
push
je
mov
xchg
mov
repz
pop
sub
cli
jmp
leave
lcall
fisubrl
popa
or
jo
cmp
in
std
cmpsb
pop
mov
mov
push
imul
jnp
xor
imul
ss
dec
dec
negb
icebp
jmp
xchg
bound
into
les
sub
outsl
push
outsb
push
add
out
sti
scas
aam
mov
dec
dec
adc
sti
jb
push
std
jne
pop
fimuls
popa
dec
je
loop
fsubl
ss
sbb
mov
arpl
or
idivl
jle
sbb
xchg
inc
lea
ljmp
pop
inc
lret
popf
mov
mov
pop
push
adc
cmc
fincstp
loope,pn
in
inc
xchg
sbb
mov
jb
loop
cmp
add
enter
out
bt
rorb
clc
sbb
mov
push
add
in
mov
repz
pusha
jmp
rcll
rorl
mov
in
xchg
xor
sbb
add
xchg
push
push
mov
cmpsb
cltd
xchg
mov
nop
mov
inc
scas
in
jno
into
mov
sbb
fistpl
push
fsubrs
jecxz
ljmp
cmp
mov
call
fmull
mov
fisttps
fidivs
leave
xchg
mov
push
push
lret
cmp
inc
movsb
xorb
sbb
out
je
out
jno
pop
pusha
cmp
movsl
jmp
and
push
fidivs
cmp
push
pushl
ljmp
sti
ret
dec
cmpsl
cmp
out
xchg
aam
ret
pop
lea
jbe
stos
loop
test
add
push
aam
push
cmp
addl
fldcw
dec
mov
pop
jge
inc
mulb
cwtl
ret
inc
rolb
pop
hlt
cmp
push
movsl
popf
inc
and
test
sbb
lahf
cmpsb
adc
lods
mov
push
mov
and
rorl
hlt
sub
sbb
pushw
jmp
bound
shr
les
call
xchg
sarl
cwtl
adc
mov
in
loope
xchg
cmpsb
jbe
and
lcall
jle
pop
ja
mov
push
imul
xchg
adc
cwtl
mov
or
shll
add
mov
iret
ds
pop
bnd
cli
xlat
add
inc
daa
xorl
jb
jbe
xchg
sub
movsb
or
dec
mov
pop
movsl
xchg
pop
repz
mov
ret
scas
repz
dec
pop
pop
inc
lods
shl
sbb
push
adc
loopne
add
test
jo
fs
mov
bound
js
push
mov
xchg
sbb
dec
imul
mov
lock
push
pop
mov
sahf
push
mov
out
cltd
mov
sti
test
sbb
mov
or
mov
les
enter
pop
sub
dec
ja
sub
jno
int3
and
pusha
fwait
sub
adc
loop
in
repz
push
cli
ja
loop
test
or
sbb
dec
sahf
addr16
inc
mov
dec
and
nop
and
mov
test
mov
sbb
xor
mov
fists
icebp
mov
push
jo
out
jmp
add
fidivrs
cmpsb
or
loopne
inc
dec
jns
nop
add
ja
test
fiaddl
lods
lret
mov
sub
xchg
and
sbb
lds
cwtl
xorb
cltd
xchg
test
cwtl
jmp
push
icebp
movsb
push
bnd
arpl
fstl
xor
jns
add
imul
or
inc
js
pop
xchg
test
sbb
adc
adc
sub
and
jne
add
sbb
int
sbb
inc
add
sub
xchg
imul
daa
lods
sbb
dec
mov
jbe
and
mov
mov
sbb
or
pop
daa
mov
or
movsb
hlt
sub
xor
push
testb
pop
popf
fnstenv
sbb
sub
push
clc
sbb
pop
lds
scas
stos
cmp
daa
icebp
cmpsl
sbb
cmp
fists
lods
mov
mov
loop
test
mov
push
sub
or
sub
xchg
fs
push
bound
cli
jmp
js
imul
loope
mov
and
pop
mov
sub
xor
push
js
mov
and
mov
cmp
sbb
xchg
pushf
adc
push
lods
cmc
lods
sub
mov
lock
data16
cmp
and
decb
into
cld
add
sti
or
lret
sub
xor
ret
loop
or
cmp
clc
test
sbbb
mulb
or
mov
pop
loopne
lahf
adc
test
xlat
adc
repnz
shll
push
cs
mov
es
test
insl
lods
das
adc
cmp
imul
ret
sbb
cmc
andl
mov
cmp
gs
clc
fcmovnb
iret
xor
push
mov
into
into
in
and
lock
loop
icebp
adc
inc
ret
pop
mov
sbb
loopne
ljmp
aas
and
add
adc
or
push
xorl
arpl
and
lret
xchg
imul
pop
lret
sub
ret
data16
sbb
push
mov
fwait
lret
ja
ja
jo
outsb
push
lds
stos
jbe
or
sbb
xor
int3
mov
aaa
mov
cli
test
cld
push
fcoml
das
xchg
adc
es
cld
cmp
push
mov
ja
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
jmp
mov
and
setns
dec
inc
hlt
ss
dec
xchg
ja
xchg
pop
inc
dec
daa
push
cltd
xchg
jl
pop
inc
pop
pop
sahf
mov
pop
xchg
out
cli
andb
mov
roll
sub
dec
and
push
mov
mov
inc
ret
loop
xor
dec
cmp
iret
in
push
in
sub
daa
mov
mov
les
test
jb
inc
jmp
push
sub
shrl
fstps
jmp
fwait
popf
or
cmpl
data16
adc
scas
cs
pop
fisubrs
cmpsb
mov
rcrb
mov
cmp
pop
jp
out
in
les
jns
sbb
fisttps
in
mov
daa
inc
mov
add
fisttpll
add
adc
xor
lahf
dec
ss
notl
fisttpl
cltd
push
cmp
sarb
xchg
or
cmp
movsb
adc
stos
movsb
movsb
sbb
cwtl
lods
sahf
sbb
xchg
nop
and
mov
xor
or
and
dec
inc
mov
cmp
fs
pop
inc
lods
mov
gs
inc
dec
cmp
fists
push
dec
sub
xor
movsl
cmpsb
pop
dec
out
pusha
jmp
pop
negb
mov
push
xrelease
movsl
or
scas
mov
mov
notl
xchg
gs
mov
iret
mov
mov
insb
adc
icebp
pop
leave
pop
rcpps
cmp
mov
adc
ret
popf
les
mov
jp
jle
and
cs
clc
mov
xlat
stos
fbstp
ds
adc
push
clc
cmpsl
rcr
fadds
and
jg
sbb
and
rcr
fldenv
xchg
test
add
cmpsl
out
sub
jmp
jno
or
jbe
jl
mov
jae
mov
out
push
icebp
mov
lahf
xor
xlat
int
inc
in
imul
ficompl
adc
jmp
ss
aaa
lcall
inc
icebp
dec
cmp
fwait
inc
lret
outsl
inc
lods
shl
push
jno
pop
pop
fldl
sarl
repz
fldcw
fsubs
in
jnp
or
ret
jg
sub
ss
mov
insl
es
mov
clc
out
rcr
fcoms
aam
sub
jge
rorw
push
inc
jo
sbb
push
in
jecxz
inc
ljmp
and
and
stos
xchg
loope
es
mov
hlt
lahf
mov
jo
cmc
mov
insl
testb
pop
dec
ja
jo
test
shll
fs
enter
adc
mov
push
push
jle
xor
cmp
push
adc
cmpsb
inc
scas
outsb
lcall
aad
ficompl
inc
shlb
jbe
out
sbb
xchg
xchg
scas
stc
lods
stos
adc
sti
test
mov
std
lret
leave
dec
ja
pop
adc
incl
bound
sarl
loope
cmp
mov
dec
les
fldcw
lock
mov
aam
xchg
or
cmp
sub
arpl
std
push
add
push
and
add
cmc
shll
test
rcrb
sub
dec
loop
jp
push
push
lock
push
inc
in
out
xchg
shlb
fsubrl
push
pop
sti
aam
cmpsl
bound
into
stc
imul
mov
sub
daa
frstor
cmp
lret
push
mov
neg
sarb
mov
orb
mov
jecxz
lods
fisubs
mov
test
inc
repz
inc
pop
cltd
mov
pop
cli
mov
mov
aaa
and
cmpl
stc
mov
cmp
lock
sub
adc
cmp
jo
mov
mov
cli
das
dec
jp
inc
mov
xchg
adc
push
call
add
push
std
adc
pop
test
sub
out
jo
adc
mov
std
addr16
dec
xor
jge
xchg
les
popf
sub
nop
arpl
mov
cmp
arpl
popf
push
xchg
rclb
enter
push
lock
lods
dec
bound
sub
jne
jmp
cmp
in
mov
lods
pop
addl
pop
inc
rol
dec
imul
add
or
inc
lods
jns
mov
add
mov
dec
loop
sbb
loop
repnz
fisubrl
push
int
push
or
ds
stos
ret
cmp
add
das
inc
jge
shrl
jp
add
orb
inc
iret
lcall
add
mov
cltd
repz
bound
test
cmp
inc
push
dec
test
xchg
pop
lret
mov
fcmovbe
fisttpll
lods
cmp
xchg
daa
lahf
int
cmp
lods
inc
dec
out
dec
imul
fwait
jnp
add
orl
aaa
xchg
push
test
jb
or
inc
sbb
mov
cltd
adc
xor
xor
call
scas
add
pusha
cmp
inc
cmp
lret
sub
sub
mov
inc
adc
test
out
mov
popa
cli
sbb
mov
pop
cmp
loop
scas
and
and
cmp
mov
in
fadds
adcl
inc
arpl
jl
lcall
outsl
sbb
das
stos
ljmp
imul
repnz
adc
mov
ret
mov
xor
dec
xchg
fwait
nop
mov
inc
jg
shrl
dec
push
add
dec
jo
dec
sub
adc
insb
pop
adc
mov
cmp
out
cmp
mov
jg
dec
cmc
push
movsb
and
pop
lahf
and
and
pop
adc
mov
lea
or
pop
shll
dec
and
adc
mov
adc
out
inc
jb
xchg
adc
sahf
adc
sub
sbb
mov
lods
jle
es
lods
dec
hlt
xchg
loop
movsb
fs
sahf
inc
push
jns
adc
or
lea
pop
pop
and
mov
mov
fcomip
fnstsw
push
dec
fldt
repnz
mov
and
add
mov
daa
ret
imul
mov
and
pop
sbb
sub
push
mov
mov
xchg
push
push
pusha
xor
push
jns
dec
and
inc
sbb
shrl
mov
ret
hlt
mov
jns
leave
inc
divl
xor
adc
ja
xor
xchg
jb
stos
mov
jns
or
movq
push
fiadds
add
les
cmp
lods
fisttpl
jle
inc
xor
xor
xchg
pop
push
ja
add
jp
push
inc
shrb
jmp
aaa
lods
loopne
arpl
xchg
xchg
xor
das
push
je
jbe
nop
pop
mov
dec
test
iret
sbb
sub
mov
inc
pop
cs
xor
arpl
pop
lods
jbe
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
jmp
ret
fwait
mov
and
inc
or
loopne
ja
testb
mov
cmp
sbb
xor
jecxz
and
cmp
jge
mov
cmp
dec
cwtl
jg
mov
xor
pop
or
lods
add
mov
xor
popa
dec
mov
lods
and
rolb
mov
rcl
push
scas
ret
xor
decl
or
daa
pop
shrl
xor
loopne
loopne
test
sbb
mov
mov
lret
mov
js
cmp
lret
test
test
cmpl
push
imul
mov
jmp
add
xor
xchg
in
jle
xor
je
mov
push
js
andl
test
dec
add
and
mov
test
leave
mulb
xor
in
sti
repnz
jnp
jge
jg
jg
pop
xchg
nop
pop
pusha
pop
cwtl
fistps
ret
ret
fisubrs
nop
mov
das
cli
rcll
inc
xchg
pop
fsubrl
testl
loopne
shll
xor
in
jecxz
inc
data16
test
and
and
leave
xor
fcmovu
sub
repz
jb
cli
lods
stos
sbb
mov
xor
outsl
imul
pop
jmp
jne
sarl
imul
jecxz
nop
ds
mov
inc
sub
ja
mov
pop
icebp
icebp
fcoms
sbb
jbe
inc
shrb
and
movsl
push
loopne
cmpsl
sub
xchg
xchg
mov
in
pop
jl
cmp
aam
xor
push
xchg
sar
jb
out
add
cwtl
xchg
cmp
mov
push
sbb
lods
test
dec
shlb
add
mov
stos
scas
fucomp
pop
mov
mov
stc
out
jge
fists
pop
pop
out
adc
push
test
or
ss
or
mov
jmp
jle
in
aas
push
sbb
sbb
je
jmp
lods
pop
shl
mov
inc
rolb
adc
imul
pushf
dec
shll
jmp
xlat
imul
push
shll
in
mov
out
mov
sbb
sbb
aaa
and
pop
lock
cmpl
loop
pop
sahf
inc
push
icebp
addl
cltd
mov
xchg
and
bound
adc
sbb
push
dec
inc
add
mov
sbb
sub
cmpb
fimull
inc
stos
push
movsb
push
sub
enter
pop
xor
pop
inc
mov
rorl
pop
stos
je
or
sbb
add
popf
and
jmp
aas
out
cmp
inc
xchg
xchg
jmp
leave
cs
push
inc
jbe
jg
push
test
or
mov
mov
test
pop
or
pop
orb
loope
movsb
flds
adc
inc
mov
push
loopne
cli
inc
out
dec
je
ds
in
bound
push
jo
enter
arpl
cmpsl
mov
aam
cs
sbb
jb
repnz
jl
xchg
sub
shrl
lea
cld
add
pop
mov
jno
push
loop
ficompl
pop
mov
fs
andb
hlt
loop
pop
lods
xchg
push
int
mov
mov
push
mov
or
xchg
push
cwtl
mov
xor
pusha
push
sarb
xchg
test
pop
sub
mov
jge
test
mov
push
call
add
adc
sub
and
js
in
es
popf
out
loopne
scas
cmp
stos
aaa
sahf
fcomps
repnz
mov
sub
push
imul
stc
mov
or
shrl
pop
mov
std
cld
call
mov
mov
pop
adc
test
mov
push
aaa
cmp
push
mov
mov
pop
sub
adc
dec
xchg
sub
lahf
aaa
aas
pusha
shll
test
dec
xchg
mov
mov
mov
testl
cmpsb
mov
pop
push
add
es
push
dec
sbb
cmpsb
cld
push
xchg
enter
xchg
stos
adc
jae
orl
push
fsubs
scas
shrb
test
loop
aas
scas
out
cmc
jmp
shrl
pop
pop
mov
add
leave
lahf
aas
sbb
and
push
or
sbb
and
jle
jns
sub
cmp
ror
add
outsl
dec
ja
mov
xchg
jg
sbb
fs
enter
mov
cmp
or
jbe
push
pusha
stos
sbb
je
sbb
lahf
or
out
data16
pop
rolb
outsb
sub
cs
ficoms
inc
jl
iret
mov
inc
orb
mov
sbb
dec
xchg
adc
jns
xchg
mov
mov
fcomp
dec
jnp
jp
stc
adc
pop
and
jp
in
push
shlb
and
push
mov
imul
and
in
mov
nop
add
xchg
ret
fbld
fwait
out
sbb
sbb
test
inc
iret
or
and
mov
lds
inc
jmp
cli
xchg
hlt
or
cld
dec
out
jo
xchg
clc
fistpl
ss
dec
lods
aaa
sub
pop
jge
pop
push
xor
xchg
sub
imul
jae
das
jl
int3
add
int
aaa
mov
cmp
sbb
cmp
aad
shrb
push
out
mov
cmpsb
sub
not
adc
jno
jae
test
mov
xorb
js
shll
sbb
pop
xchg
out
inc
inc
mov
arpl
scas
ret
jl
fimuls
jnp
mov
mov
and
loop
lcall
mov
cs
lahf
mov
int
xchg
out
js
or
jns
jbe
xchg
stc
push
hlt
mov
std
dec
in
ds
pop
outsl
add
mov
ds
jbe
inc
mov
aad
add
mov
add
sahf
cwtl
mov
stc
add
mov
dec
int3
dec
insl
fwait
push
xchg
mov
sub
inc
add
scas
or
les
push
sub
pop
or
xlat
adc
push
pusha
sbb
pusha
lods
fisttpl
enter
lret
subl
mov
xchg
xor
and
insb
faddp
mov
cmp
add
adc
jmp
sub
add
cmpsb
jb
sub
fdivp
andb
js
and
mov
test
pop
jae
int3
pop
fidivrs
sahf
ds
xlat
mov
mov
popf
jns
sbb
inc
mov
fists
mov
jle
in
mov
pop
mov
loopne
movb
ds
jb
xor
out
sub
fdivl
imul
addb
fcomi
ss
push
aad
js
xor
dec
out
mov
pusha
push
dec
fildll
fidivrs
sbb
push
jno
dec
push
mov
jecxz
sbb
pop
pop
divb
pusha
add
adc
mov
jg
call
outsb
mov
jge
sub
sbb
out
fwait
cmpsb
into
test
jge
movsb
push
aas
decl
or
pop
add
aam
inc
test
addr16
add
outsb
out
js
outsl
ja
mov
loop
sbb
nop
or
mov
in
cmp
xchg
mov
mov
add
cltd
sarb
mov
adc
loop
push
sub
dec
mov
and
loopne
cli
imul
mov
es
and
aaa
clc
std
lods
stos
fadd
loopne
or
or
cmpsl
jns
push
pop
cltd
jl
xchg
jbe
pop
mov
test
dec
adc
xor
inc
sti
dec
mov
mov
je
imul
mov
mov
xor
push
aas
leave
sub
out
fs
addr16
ret
jo
xor
lods
ds
in
in
cmp
mov
clc
fcom
push
or
insl
and
das
dec
cld
insl
lahf
flds
xchg
mov
mov
cmpsl
lock
cmp
mov
inc
jns
xchg
sbb
pop
ss
out
cwtl
xchg
push
jns
or
push
andl
or
xchg
adc
inc
lods
xlat
es
ror
pop
cmp
pop
lcall
lock
xchg
shrb
push
rclb
xchg
pop
dec
decl
lds
xchg
enter
fisubrl
pop
pop
dec
xor
or
stos
pop
inc
jp
sbb
mov
add
mov
inc
mov
dec
sti
cmc
push
push
fldenv
repnz
cmc
push
push
pop
movsb
sub
ljmp
stos
sti
dec
mov
sti
dec
sbb
dec
arpl
je
test
inc
pop
and
push
outsl
cmpsl
pop
adc
sti
insb
jmp
dec
movsl
std
jle
lret
push
push
mov
xor
mov
ret
lea
iret
pop
xchg
mov
or
push
xchg
outsl
xlat
and
mov
push
sub
jecxz
jno
sbb
and
xchg
movsl
mov
int3
xor
or
xchg
test
cmpsb
fnstenv
sbb
and
and
push
adc
js
sub
mov
and
lods
nop
mull
test
mov
mov
repnz
in
mov
mov
loop
inc
push
stos
and
adc
xchg
jl
xchg
xlat
in
std
sahf
sub
ret
aad
mov
mov
ret
jae
cld
dec
xchg
popa
mov
cmp
test
cmp
lahf
xor
sub
jle
push
ljmp
js
xor
push
dec
jb
jb
and
cmp
inc
jmp
inc
sub
mov
mov
repz
dec
push
imul
loope
add
xchg
repnz
add
add
sti
and
mov
xor
pop
dec
xor
mov
cltd
mov
mov
in
mov
into
xor
sub
cmp
out
mov
ss
dec
cmp
jg
adc
mov
inc
pop
idivb
rcll
mov
out
sbb
mov
pop
or
dec
inc
dec
pop
jecxz
xor
mov
hlt
mov
sar
xor
cmp
jns
adc
inc
bnd
clc
cmpsl
popf
loope
icebp
and
pop
adc
icebp
cmp
vpsllw
fmulp
repz
sti
ja
mov
imul
int
test
xchg
in
jae
insb
stos
mov
adc
sub
scas
add
push
jno
es
cwtl
cmp
jae
mov
push
pop
mov
mov
mov
or
popa
jecxz
aas
insb
andl
or
mov
fs
lcall
pushf
fcomps
mov
push
das
push
std
repnz
sti
stos
and
out
push
inc
add
cmpsl
jmp
add
jo
mov
outsb
add
cmp
scas
dec
icebp
jbe
ja
ja
mov
aad
fidivl
es
movb
sub
xlat
lods
mov
adc
xchg
es
jmp
call
dec
pop
pushf
fmull
out
mov
sbb
popa
jmp
out
pusha
iret
aad
fsubrl
test
addl
push
jg
xor
jmp
js
add
cmp
adc
loopne
lods
cmp
and
arpl
inc
sub
fistpl
loop
or
or
or
dec
cld
hlt
popa
mov
and
pop
or
insb
pop
lahf
fisubl
sti
ror
jecxz
mov
fnstcw
dec
pop
inc
xor
loopne
or
mov
push
sbb
in
in
xchg
sahf
je
out
push
jg
testb
and
repz
fistpll
cltd
inc
cmc
ljmp
jbe
fldenv
cmp
jno
xchg
rcrl
push
in
adc
mov
mov
ja
mov
push
mov
test
cwtl
push
fiaddl
daa
shlb
test
stos
fildll
rcl
cwtl
out
mov
ja
jmp
ds
mov
or
sbb
decb
pop
stos
or
ds
testb
xchg
mov
ljmp
insl
adc
dec
dec
add
std
xchg
adc
repz
fwait
and
shll
xchg
cmp
std
fucomi
add
cmp
rcr
mov
les
or
pop
mov
outsb
shlb
sahf
std
lds
cmp
adc
pop
lods
sub
repnz
adc
adc
ret
out
pop
xlat
cmpsl
leave
out
xchg
aaa
dec
dec
std
inc
mov
sub
lcall
movsl
cmp
and
subb
lock
fimull
pop
sub
popa
push
fwait
mulps
fsts
lret
mov
mov
adc
mov
cmpsb
js
sbbl
add
scas
jae
adc
sbb
fisubrs
negl
imul
hlt
jb
fnop
add
jle
into
mov
cmp
fmuls
aaa
mov
mov
adcl
jecxz
push
mov
sbb
mov
sbb
adc
sub
sbbb
sahf
jmp
xchg
inc
push
push
adc
repz
jmp
call
xor
negb
push
dec
testb
inc
fadds
sbb
add
xor
mov
loop
imul
add
out
jne
imul
out
jecxz
inc
jns
cmpsb
jle
push
pop
fdivrl
mov
scas
adc
enter
orl
leave
adc
idivb
xchg
add
stos
in
fbstp
push
sub
shlb
cmp
mov
adc
int
popf
bnd
jns
imul
cltd
and
pop
fcomip
flds
xorb
out
mov
movsb
hlt
mul
add
jbe,pt
js
cld
and
scas
stc
pop
pop
ljmp
outsb
dec
adc
mov
int
sub
ficompl
adc
outsb
imul
test
out
pop
mov
dec
rclb
imul
mov
lret
sbb
cmpsb
inc
or
lods
callw
inc
or
xchg
jmp
imul
sub
mov
leave
inc
xor
mov
gs
ds
add
jno
xor
in
adc
pusha
ret
lea
mov
aam
xchg
out
or
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
jmp
adc
cmp
ret
aam
mov
test
lock
ja
mov
iret
pop
cmpsl
std
jmp
out
mov
xchg
pop
sarb
add
or
adc
aam
lcall
cli
xchg
push
mov
xlat
cltd
xchg
je
adc
add
repnz
xchg
in
daa
dec
stos
int
mov
test
loopne
xchg
xchg
jo
and
jne
dec
loop
cmpsb
jecxz
iret
sbbb
aad
xor
push
ss
lods
shl
sbb
push
or
incb
dec
dec
mov
mov
inc
test
mov
jbe
inc
jmp
or
sbb
mov
sbb
es
jge
loopnew
mov
mov
gs
mov
inc
insl
lods
es
dec
mov
aad
xchg
pop
cmp
push
inc
add
pop
sarl
jne
jecxz
mov
lret
pushf
fs
mov
add
xor
in
in
jnp
jmp
test
idivb
das
dec
add
scas
inc
push
dec
mov
xor
std
cmp
repz
and
insl
or
addr16
das
cmp
dec
push
dec
cmpsl
cmpsb
push
mov
in
or
testb
cmp
xchg
add
imul
fadd
pop
vunpckhps
pusha
sub
call
xchg
shlb
and
xadd
pop
cmp
sarl
and
popa
mov
test
lods
std
out
jb
js
sub
pop
sbb
sarl
or
bound
jl
xchg
xor
xchg
push
inc
mov
jbe
out
test
dec
into
push
push
sub
mov
sbb
pop
pop
iret
adcb
sub
xchg
push
aas
pop
cmp
sub
mov
dec
iret
mov
add
push
scas
pop
cmc
xor
jae
loop
popf
rorl
loop
div
sub
xchg
popf
sbb
loopne
adcb
push
ljmp
pop
movsb
dec
xor
xor
cltd
iret
rcl
jns
inc
ljmp
lcall
cmpb
jb
jecxz
adc
mov
ficoms
das
xor
push
test
mov
jmp
imul
cmpsb
mov
hlt
nop
xlat
call
add
and
jbe
add
jl
pop
popf
addr16
jo
ljmp
cmpsb
adc
daa
jbe
xchg
ljmp
add
incb
xlat
add
dec
sarl
rcll
xor
cmp
adc
push
and
mov
lds
xchg
sub
sub
mov
stc
loopne
nop
mov
or
rorl
xchg
sub
fsubs
je
pop
mov
or
imul
sub
mov
sbbl
mov
stos
jno
shll
andb
dec
fisttpll
mov
mov
xchg
xor
mov
adc
or
xor
jo
bnd
rorl
outsl
pop
imul
nop
sub
sbb
xor
lds
lds
or
sub
out
test
gs
decb
mov
loop
push
int
popf
dec
pop
jno
int3
mov
inc
pop
sarb
repz
insl
pop
idivl
lahf
jbe
sarl
push
push
or
scas
pusha
jae
mov
or
cmp
mov
mov
dec
pop
xchg
popa
test
mov
push
lods
jecxz
nop
std
mov
cmpsl
xor
add
jno
mov
xchg
outsl
inc
test
inc
adc
pop
xchg
inc
lcall
xchg
lock
aas
daa
int3
dec
add
mov
stc
vpshlb
lds
mov
sub
pop
cmp
and
jne
popa
in
pop
jae
sbb
fucomip
or
sbb
fst
insl
out
xor
mov
push
mov
lret
adc
and
or
icebp
repz
fwait
jnp
push
mov
cmp
and
pop
lcall
or
faddl
or
xchg
push
lret
lock
int3
insb
cmp
rcll
stos
loop
and
insb
cmp
jns
jo
jae
imul
or
xchg
ret
mov
fadds
call
cmpsl
outsb
push
xchg
inc
adc
or
nop
push
outsl
inc
std
pop
ret
into
inc
cmc
xor
xchg
xor
and
les
jge
mov
xchg
ljmp
cld
xor
mov
or
ljmp
jns
aad
pop
daa
pop
mov
lock
sbb
xor
bound
sub
scas
sbb
mov
mov
insb
inc
lods
sbb
inc
repnz
int3
pop
in
xchg
mov
push
pusha
or
pop
cltd
jns
jl
mov
adc
mov
jl
sbb
mov
les
xchg
push
inc
pop
dec
mov
ljmp
inc
pop
icebp
mov
jmp
xor
rcr
jae
popa
xchg
std
jae
mov
mov
jmp
je
and
and
into
imul
repz
aad
lret
ret
icebp
push
add
sub
xchg
and
es
je
fcompl
insb
gs
inc
jo
inc
adc
in
repz
ret
push
fnclex
andl
cmp
sub
shlb
xchg
jp
pop
jno
daa
sub
sarb
sub
mov
rorl
mov
jnp
mov
bound
mov
pop
push
and
pop
sub
add
imul
mov
je
pop
inc
call
mov
push
test
inc
xor
jno
gs
jno
shll
cwtl
xor
cmc
in
pop
mov
hlt
into
cmp
xchg
jecxz
sti
fwait
sbb
lret
sub
xchg
scas
lods
das
sbb
call
dec
jbe
push
add
inc
mov
mull
dec
andb
xor
js
es
mov
das
aaa
adc
out
push
dec
mov
push
int3
add
addl
push
and
mov
clc
jl
mov
sbb
icebp
cmpsl
sub
gs
insl
lock
cmp
pop
das
mov
or
push
je
pop
in
push
dec
incb
les
adc
aad
add
push
xchg
aas
push
scas
cmp
jns
or
dec
xor
add
mov
out
out
js
dec
lahf
jns
mov
inc
push
in
stos
lds
jnp
sub
pop
ja,pt
mov
add
mov
js
repnz
mov
aaa
jmp
jae
fsubr
lret
rcr
daa
mov
mov
insb
mov
mov
cmp
insl
insb
add
fnstcw
push
mov
shlb
adc
lods
mov
adc
movsl
subl
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
jmp
sbb
and
sbb
scas
xchg
push
add
or
por
movsl
dec
pop
and
mov
adc
add
les
lret
ja
test
jle
jno
aad
pop
mov
into
scas
adc
inc
imul
cwtl
cmc
push
push
sbb
imul
test
push
andl
sbb
insl
push
sbb
cwtl
mov
out
test
dec
es
pop
cltd
sbb
mov
jns
mov
cmp
sub
sbb
xor
add
adc
lret
lret
mov
fcoms
adc
in
lret
out
outsb
into
in
je
xor
xor
push
sti
pop
jbe
es
out
aas
push
out
xchg
nop
sbb
push
jno
mov
mov
or
jp
fsubr
jecxz
push
adc
stos
neg
add
jne
sub
and
popa
mov
cld
jo
pushf
mov
mov
clc
xor
sub
adc
lahf
insl
xor
xchg
jmp
push
pop
jp
rorl
xchg
push
lods
and
inc
adc
movsb
cmc
dec
loop
xchg
adc
xor
mov
aad
loop
mov
xor
mov
pop
cwtl
mov
dec
popf
je
fwait
testb
pop
mov
imul
mov
mov
int3
xlat
push
popf
lret
push
pop
add
leave
fsubs
mov
cmpsl
jb
into
nop
inc
stos
inc
dec
inc
mov
repnz
fdivrs
ret
mov
or
dec
inc
insb
fistpl
and
mov
mov
shrl
scas
dec
addl
add
cmpsl
jno
clc
add
and
mov
imul
cltd
mov
js
pop
movsl
mov
and
push
jp
fldl
cmp
sub
add
int
in
or
jge
mov
ficomps
lret
and
das
pop
xchg
fnstcw
cmpsb
jmp
or
inc
dec
outsb
inc
test
outsl
add
pop
lods
xor
xchg
ss
lahf
add
mov
int3
jp
xor
pop
mov
out
xchg
lea
push
jecxz
clc
xor
vpmaxub
mov
and
sbb
push
sub
push
lea
scas
repnz
es
dec
add
add
lret
movsb
adc
sub
inc
xor
rorl
mov
cmpsl
gs
repnz
xchg
pop
adc
js
ret
int
fldl2t
jo
sbb
pop
mov
mov
or
push
mov
leave
mov
jne
cmc
mov
jo
xor
rcll
mov
lods
jo
sub
pop
stos
jo
movsb
mov
dec
popa
cwtl
andb
pushf
or
orb
es
insb
add
or
inc
jbe
cmpsl
mov
cmp
arpl
fsts
je
rcrl
fsubl
std
jnp
loope
in
mov
lods
push
or
das
push
mov
insl
das
push
scas
enter
mov
mov
jge
and
fwait
pushf
add
dec
pop
pop
xchg
mov
add
je
sbb
repz
push
into
js
loop
loop
fldenv
push
and
mov
pop
sbb
sbb
out
pop
mov
mov
sbb
sbb
lea
mov
repnz
sub
inc
add
xorl
push
or
mov
push
cmp
sarb
dec
lcall
js
pop
arpl
and
jp
scas
xor
leave
lock
inc
cs
pop
gs
jnp
push
pop
inc
cwtl
or
movsb
scas
dec
jg
pop
in
fcoms
and
data16
xorb
inc
mov
xor
into
cli
ret
mov
pusha
push
lret
push
xor
lcall
insl
out
testl
int
test
divl
bound
push
mov
pop
shl
jmp
mov
js
loopne
dec
or
fnsave
push
push
in
push
pop
in
push
add
jecxz
icebp
insl
dec
and
add
rorl
xchg
test
xchg
test
hlt
jns
dec
pop
negl
in
xor
jae
enter
inc
sub
push
or
inc
mov
push
and
out
bound
js
scas
out
or
divb
divb
xor
pop
popa
ss
push
mov
add
repz
vmovntps
sti
sub
xchg
sub
xor
xor
and
adc
push
jnp
movsl
adc
or
cmp
cmc
mov
lods
shlb
push
insb
mov
mov
add
iret
aaa
mov
jb
lock
arpl
xor
sbb
pop
enter
inc
out
ss
push
aas
addb
mov
pop
or
and
and
lret
sub
push
cmpsl
inc
xor
push
mov
pop
leave
xchg
pop
imul
mov
mov
push
adc
mov
dec
push
dec
pushf
or
ja
jge
cmp
fyl2x
add
or
daa
aad
xchg
test
xchg
int3
mov
outsb
outsb
dec
mov
pop
xchg
pusha
xchg
movsb
notb
enter
sarb
pushf
subb
test
lock
pop
insb
cld
mov
xlat
loopne
lea
push
add
sub
add
adc
aad
mov
adc
test
and
xor
dec
in
in
in
dec
jnp
sbb
insb
movsl
aas
fmul
sti
mov
pushf
fcmovb
andl
mov
sbb
inc
nop
mov
adc
imul
mov
ficompl
cmp
mov
xchg
test
dec
shll
and
add
test
or
mov
ret
adc
add
out
cmc
daa
pop
mov
dec
outsb
inc
pop
sbb
mov
pop
or
sub
mov
ret
pop
push
ret
insl
xchg
cmp
cmp
xor
cs
xchg
and
test
push
dec
out
push
inc
push
fbstp
insl
push
mov
lret
add
pop
xchg
in
or
xchg
popl
fldl
ljmp
pop
ss
dec
pop
pushf
stos
in
fidivl
push
xor
cli
cs
xchg
leave
in
pop
leave
ljmp
andb
adc
push
stos
sbb
fprem
shll
pop
std
xor
mov
cs
xchg
sub
loope
adc
call
mov
pushf
pushf
add
sub
add
repz
lcall
sbb
mov
jbe
xchg
mov
pop
inc
roll
pop
push
lds
outsb
mov
ja
aaa
or
fwait
push
sub
mov
sbb
pop
dec
sub
orl
lds
cwtl
mov
mov
jmp
or
notb
daa
jns
jle
mov
sar
movsb
xor
mov
jo
mov
xchg
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
jmp
sti
test
sbbl
xchg
cli
inc
aas
ja
sbb
imul
mov
into
lcall
das
sub
sbb
push
jle
mov
into
jns
outsb
pop
xlat
or
call
rorb
dec
dec
sarl
mov
leave
enter
sbb
adc
jno
push
xor
pop
popa
inc
xchg
cmc
in
lds
dec
add
aas
je
sub
pop
call
xorl
sbb
aas
mov
push
cmp
add
es
cmp
fsubrs
jb
lds
add
jle
xor
cmp
test
icebp
inc
jo
lock
or
movsl
inc
mov
clc
cwtl
push
and
test
pop
or
push
ret
jo
xchg
ret
shl
jle
push
xlat
pop
aam
cli
cmp
mov
or
filds
mov
insb
movsb
mov
test
clc
lock
mov
add
rcr
lahf
or
imul
xlat
mov
jmp
in
ret
and
cltd
dec
inc
rorl
mov
test
add
es
dec
dec
insl
cmp
add
inc
mov
mov
mov
cmpsb
add
fcomps
cltd
bound
push
fdivs
adc
adc
mov
pop
xor
clc
jg
clc
sarl
xchg
cmpsl
shll
or
testl
insl
loopne
jl
jecxz
adc
shll
mov
and
movsb
sub
or
das
xchg
rol
and
movsb
adc
mov
xchg
repz
test
push
sbb
insl
cltd
pop
or
daa
mov
outsb
jns
xchg
mov
pop
fwait
inc
rcrl
pop
sbb
aaa
sub
or
push
jmp
sahf
lds
inc
mov
outsl
push
decl
push
adc
incb
xchg
fsts
iret
inc
inc
js
test
imul
add
and
sub
adc
aas
roll
pushf
sarl
pop
movsb
pop
push
popa
lods
adc
aaa
xchg
push
dec
sub
add
call
jl
add
cmp
mov
pushf
inc
fidivs
sub
mov
fildl
outsb
xchg
std
jmp
adcb
scas
cmpsl
daa
pusha
sub
jbe
pushf
icebp
fstpt
jl
jmp
mov
ret
les
pushf
cmp
add
dec
push
jp
jg
dec
fdivrp
scas
and
push
sub
jo
or
cmp
loope
push
ss
mov
push
imul
je
sub
imul
add
jno
lods
adc
mov
imul
sbb
push
push
pop
testl
fwait
mov
jle
iret
jo
inc
dec
roll
dec
push
xor
pop
jecxz
mov
xor
cld
pop
fidivrs
data16
pop
call
int
int
mov
or
cli
pop
cmp
lret
xchg
and
adc
pop
std
ds
or
dec
mov
filds
sbb
add
xchg
mov
int3
pop
push
adc
jmp
int
or
imulb
cmp
fidivrs
mov
mov
and
incb
cmp
push
insb
xor
mov
jl
inc
push
adcl
xor
jns
sarl
mov
or
in
jb
jle
or
mov
xor
xchg
popa
out
mov
xor
pop
jecxz
xor
mov
push
into
shlb
in
test
lret
jg
stos
test
dec
mov
adc
jmp
xor
xchg
jno
and
cmpsl
add
push
stos
inc
negb
andb
push
and
jmp
push
dec
and
cmp
loopne
inc
jae
pop
out
cltd
xor
test
ds
lods
cli
mov
mov
es
call
or
or
test
je
cmc
andl
dec
into
frstor
xor
pop
pop
cmp
stos
dec
imul
inc
inc
outsl
xor
stos
and
adc
pop
and
pop
sbb
ret
sub
gs
adc
xor
into
xor
push
mov
jl
decl
faddl
fistpl
sbb
push
mov
jbe
jns
add
add
push
adc
pop
mov
jo
and
fidivs
cltd
scas
mov
std
jmp
in
mov
aas
cmpsl
test
dec
into
out
mov
aaa
mov
lar
or
loop
or
xor
push
mov
dec
inc
cmp
lods
ret
ds
lock
pop
loope
or
mov
mov
das
loopne
dec
daa
andb
push
cmp
enter
jmp
inc
insl
mov
pushf
daa
lea
mov
sbb
outsb
sbb
cmp
sbb
outsb
scas
mov
popf
cmp
cmp
xor
fwait
jb
push
lea
xor
mov
fstpt
setns
or
mov
xchg
fldcw
call
xchg
outsl
xchg
mov
adc
inc
int3
mov
push
sub
lret
clc
das
scas
xlat
rcll
or
nop
out
add
faddl
mov
pop
arpl
hlt
rcll
xchg
cs
popa
and
and
xor
movsl
cwtl
lahf
pop
mov
pop
xchg
in
jbe
inc
dec
cmp
sbb
xor
int
test
icebp
jg
notb
mov
icebp
out
mov
sub
pop
push
test
jbe
push
lret
push
cmpl
lock
xchg
xchg
jmp
sub
sti
and
jmp
jmp
fbld
add
int
sbb
enter
ja
sbb
pusha
nop
out
pop
lock
scas
lea
into
or
mov
ss
mov
fucom
enter
testb
jno
sbb
add
in
xor
mov
mov
push
aad
stc
pop
lds
push
divl
jns
data16
js
cmp
push
xor
ret
setnp
xchg
sbb
out
mov
daa
fsubr
mov
mov
dec
inc
sbb
cli
scas
into
repz
mov
mov
mov
inc
sbb
and
outsl
call
nop
sti
mov
xchg
ficomps
lahf
and
mov
push
push
stos
push
pop
rcl
mov
jbe
je
sbb
ret
mov
outsl
jb
and
xor
repz
fdivl
out
lods
jb
add
das
inc
push
movsb
mull
mov
negb
xchg
pop
insb
repnz
mov
xchg
outsl
or
lock
aaa
xor
dec
int3
loopne
add
aaa
dec
scas
add
jns
enter
cwtl
pop
pop
pop
subb
jge
dec
in
mov
cmp
xchg
aaa
repnz
ljmp
pop
cltd
pop
add
lahf
or
xchg
dec
or
movsl
enter
cmpsl
add
xchg
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
jmp
nop
loope
pop
dec
gs
int
xlat
sub
mov
mov
ja
jecxz
pop
scas
or
add
lret
jae
aaa
inc
out
mov
mov
push
pop
mov
xor
lret
aaa
call
dec
sbb
mov
xor
inc
pop
mov
popa
jle
aas
sub
jmp
loopne
insb
cmpsb
sbb
cmpsl
scas
lods
cld
adc
xor
ds
hlt
jmp
inc
mov
pop
inc
aam
jmp
rcll
add
push
sbb
or
and
imul
ds
push
fcoml
or
jns
mov
sbb
dec
pop
add
push
sub
outsl
in
mov
insb
xor
popa
mov
insb
rclb
mov
xchg
imul
pop
jb
mov
sub
dec
ja
sub
push
mulb
fbld
inc
mov
outsl
testl
cmc
cli
sub
lret
pusha
and
and
into
sub
sbb
inc
loop
dec
shlb
jo
mov
mov
dec
add
mov
ds
push
ret
testl
adc
sbb
out
mov
rcll
aam
xchg
jle
sub
push
push
imull
dec
sbb
push
insl
sub
push
aad
pop
adc
sub
inc
sub
cmp
mov
loope
outsl
les
outsl
fbstp
jmp
jecxz
pop
and
lds
mov
or
sbb
sti
xor
adc
pop
inc
xorl
clc
std
push
or
int
xor
push
mov
lods
xchg
loop
add
add
add
xchg
fbld
xchg
cmp
sub
xlat
dec
aaa
data16
or
aam
jae
div
adc
or
out
jbe
shll
xlat
popf
or
arpl
mov
dec
push
lret
jae
repz
jo,pt
xor
xchg
lcall
je
cmp
and
cltd
sbb
std
dec
sub
je
xchg
scas
xchg
fwait
enter
and
in
inc
inc
adc
add
adc
fcompl
xcrypt-cfb
cmpsl
mov
and
dec
daa
aaa
adc
fisubl
jp
sub
add
mov
sub
mov
in
pop
leave
insl
xchg
xchg
add
push
or
sub
dec
push
mov
sub
xorl
out
rcrl
push
lahf
jl
addr16
dec
sbb
dec
outsb
popf
mov
mov
in
adc
push
mov
sbb
mov
aam
outsl
fwait
add
cmp
pop
dec
pop
dec
mov
mov
ja
push
mov
push
add
mov
inc
dec
jnp
add
out
pusha
rcrb
in
test
or
adc
les
jnp
and
mov
mov
xchg
jbe
push
or
xchg
xchg
addr16
sub
xor
mov
pop
loope
pop
out
sub
leave
jle
add
or
pop
xor
test
ja
jle
mov
outsb
lret
adcb
mov
mov
fs
jae
push
pop
fs
stos
and
mov
adc
fdivl
and
jno
aas
lcall
sbb
dec
mov
outsb
sub
loopne
nop
icebp
faddl
pop
mov
insb
or
in
insb
cmp
fidivs
scas
ret
adc
ss
shr
sbb
cltd
cli
push
imul
xchg
inc
xor
inc
mov
rorb
cmp
mov
or
xchg
rcll
cld
ret
pushf
pop
pop
xchg
mov
icebp
jo
push
stos
push
mov
mov
fcompl
push
in
xchg
adc
lret
add
outsl
das
sub
adc
push
pop
fstp
xchg
adc
popf
xor
inc
jno
pop
mov
lock
pop
cwtl
push
rcr
arpl
scas
push
xchg
cmpb
mov
lods
mov
addl
sahf
test
add
aas
pop
fdivl
in
jecxz
cmp
xchg
popf
or
lds
aam
pop
jmp
pop
mov
add
jo
pop
fwait
sub
lret
mov
test
out
std
jns
or
cmp
test
mov
js
push
sbb
into
ljmp
sub
bound
out
jl
leave
sub
stos
add
loop
and
push
push
das
cmp
cmc
push
inc
cmp
inc
pusha
or
jl
or
pusha
loope
xchg
fistpll
mov
lds
sti
jmp
push
sub
push
in
xchg
or
out
add
cmpsl
aam
sar
cwtl
jge
mov
push
inc
xchg
push
stos
sbb
lret
mov
push
pop
cmpsl
sbb
mov
lret
pop
cmpsl
ljmp
inc
aas
in
mov
xchg
pop
sarl
std
mov
nop
out
jmp
insb
fwait
xchg
lret
and
pop
xchg
loopne
sbb
jmp
fistpll
push
test
mov
shrb
pop
popl
pop
sub
or
fadds
jmp
dec
stc
jge
inc
repz
mov
or
or
sbb
adc
ret
in
or
into
je
jbe
ret
push
scas
sbb
lea
sti
sub
dec
adc
test
les
add
js
pop
pop
test
and
cmpl
cltd
mov
cltd
ja
rclb
inc
push
dec
xlat
mov
int3
ds
scas
push
sbb
lcall
push
cs
sub
rcl
sbb
adc
nop
call
mov
pushaw
sub
leave
xchg
mov
xchg
or
fwait
cmp
xor
mov
data16
and
mov
movsb
jg
sbb
out
lret
pop
sub
mov
jle
lods
and
push
popa
imul
mov
pop
or
das
xchg
lock
popl
jecxz
cmc
pop
push
push
lahf
inc
or
daa
and
sbb
nop
push
lahf
test
cmpsl
bound
movsb
mov
add
or
mov
mov
mov
xchg
jp
xchg
cmpsl
shll
xchg
lods
in
mov
repz
das
xor
sbb
cld
loope
mov
in
dec
lds
aam
ss
push
int
push
sbb
sti
mov
fs
mov
jbe
loopne
inc
and
data16
hlt
aaa
negb
sbb
arpl
inc
pop
into
dec
cmp
leave
fistps
lods
jno
jo
mov
lods
mov
xchg
jns
mov
xchg
xchg
sahf
inc
aad
sahf
mov
adc
mov
icebp
or
pop
data16
pop
mov
pop
gs
arpl
mov
cmp
mov
add
fwait
call
push
jbe
fldcw
and
adc
lret
sub
cltd
cltd
test
pop
or
mov
shll
js
xchg
loope
jmp
shl
cld
sbb
orl
rorl
lods
rolb
or
shr
mov
mov
or
mov
mov
mov
jmp
dec
loope
lret
sbb
or
mov
adc
mov
insb
arpl
int3
or
sub
fdivrs
mov
xor
popf
mov
faddl
mov
or
dec
xlat
pop
inc
jns
gs
mov
mov
ret
icebp
xor
popf
xchg
lcall
xor
cmp
mov
aas
push
lahf
jb
fidivrs
pop
cs
push
rcll
ljmp
cld
cs
fildl
orl
sbb
lea
scas
lods
sub
xlat
push
mov
push
cmp
jae
xchg
shrb
ja
pushf
aaa
ljmp
loope
push
jmp
aad
xchg
cmpb
pop
mov
or
rclb
cmp
insb
xchg
nop
mov
mov
test
sbb
dec
int
and
push
mov
dec
imul
and
mov
or
or
scas
dec
loopne
mov
cltd
bound
movsl
daa
jmp
inc
cvtps2pd
jnp
pop
insl
dec
lret
jg
das
ja
ret
sub
in
mov
andl
ljmp
pop
dec
out
lds
mov
dec
psraw
mov
fildll
cmp
pop
shll
jmp
jae
mov
fnstcw
test
pop
and
pushf
cltd
mov
and
mov
pop
divb
fstpt
daa
imul
jmp
pushf
imul
pop
jl
jae,pt
push
ljmp
loop
negl
jle
data16
mov
jno
fstpl
shrb
pushf
imul
out
jb
ss
insl
fmulp
dec
icebp
or
in
push
xor
pop
cmp
popl
xchg
mov
jecxz
or
cmp
call
sub
xchg
cld
push
jmp
push
clc
push
test
lods
xchg
adc
or
adc
ds
adcl
nop
and
cmp
cs
ss
sub
les
or
daa
ret
and
inc
inc
push
cmc
jno
sub
ja
rorb
lea
sbb
sub
lahf
je
sbbb
daa
add
nop
xlat
mov
push
xor
or
add
push
xor
dec
and
mov
out
and
lods
xchg
lds
and
mov
flds
cmp
xchg
out
cli
sub
mov
outsl
inc
sub
mov
clc
fs
mov
sbb
je
mov
push
mov
and
insl
mov
xlat
inc
test
add
fstpl
insl
push
push
fwait
add
ljmp
rorb
scas
movsl
or
mov
inc
outsl
mov
mov
xor
stc
push
add
scas
repz
sbb
popa
popf
jne
pop
jo
or
lods
sbb
fdivs
sub
cmp
lcall
jmp
ljmp
imulb
stos
shl
je
data16
ficoml
data16
lahf
orb
shrl
jae
dec
jne
pop
mov
lahf
notb
sahf
add
outsb
scas
xchg
cmp
movsl
and
repnz
cmp
push
and
push
shr
or
xor
or
aaa
push
mov
or
popa
adc
add
add
sbb
out
stos
pop
cmp
pop
out
mov
sub
jle
mov
adc
and
movsl
sub
hlt
inc
stc
movsl
enter
bound
jb
les
lahf
inc
lret
mov
std
mov
push
and
aas
orb
pop
bound
lea
cvtpi2ps
jo
pop
ljmp
imul
mov
inc
stos
mov
je
push
add
cwtl
inc
in
hlt
fdivr
pop
stos
stc
cmpsb
push
mov
adc
mov
xchg
pop
lcall
add
mov
and
cmp
gs
stos
add
shl
jmp
mov
subb
mov
push
sub
fnsave
and
out
sub
jecxz
inc
mov
gs
stc
xor
clc
ds
jnp
push
adc
scas
mov
and
loop
sub
in
lret
and
and
faddl
sbb
adc
jo
pusha
decb
fisttpl
cs
dec
mov
mov
xlat
cwtl
push
and
imul
sbb
jl
loopne
and
xchg
inc
test
or
mov
fcomps
sub
aad
mov
test
popa
mov
push
pusha
leave
and
cwtl
dec
out
adc
enter
or
sbb
shl
sbb
xchg
mov
das
addr16
cmp
adc
adc
jecxz
lcall
xchg
xchg
cmp
popf
ret
pop
add
lods
vpaddq
pop
aad
sub
mov
arpl
sbb
rclb
dec
lods
mov
lret
mov
rcll
out
and
je
loop
pop
aad
mov
mov
fnstenv
shrl
and
ds
cmp
fwait
sub
add
mov
scas
cmpsl
popa
imul
or
and
jmp
dec
mov
jbe
ret
test
push
mov
in
push
jmp
gs
inc
movsb
dec
es
cwtl
adc
mov
ss
call
mov
mov
xchg
or
bound
jne
sub
hlt
adc
push
outsb
sahf
adc
push
gs
out
daa
into
cmc
ja
mov
cmp
clc
adc
pop
mov
push
out
or
in
and
inc
jecxz
arpl
ja
mov
mov
test
xchg
fsubl
mov
out
lds
idivl
or
mov
and
xor
aad
bound
jmp
xor
stc
add
inc
stos
insl
mov
clc
ret
aaa
xor
es
idiv
rcll
fisttps
jo
jge
ret
aam
dec
mov
jle
in
loopne
sub
js
sbb
ret
sti
push
ret
clc
push
xchg
xor
incb
dec
in
and
jne
rclb
pop
adc
ljmp
and
cltd
or
push
shrl
jle
mov
push
mov
jle
inc
or
fwait
add
pop
xchg
aas
add
ljmp
sbb
and
push
mov
mov
nop
push
call
pop
jno
es
fidivs
imul
stos
sub
pop
and
loop
xor
sub
push
pop
loope
inc
das
cmp
enter
not
insl
xchg
fstl
fs
or
mov
jae
sub
or
mov
mov
dec
mov
test
add
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
jmp
cltd
push
in
sub
jno
cwtl
aad
push
mov
cmovp
dec
popa
cmpsl
sbb
jge
sub
sbb
cmp
dec
mov
xchg
lods
fstpt
mov
into
dec
rorl
sarb
out
xor
pusha
xchg
jle
jb
popf
stos
xor
xor
into
jl
push
inc
push
sti
push
mov
aam
pop
fadd
jmp
mov
push
and
add
out
push
ret
mov
movsl
ret
dec
fidivs
jbe
xor
cwtl
push
mov
add
xor
imul
adc
imul
dec
lcall
mov
out
into
cli
cmp
int3
cmp
gs
jecxz
cmpsb
cwtl
or
mov
xor
xchg
push
mov
aaa
pextrw
sbbb
icebp
dec
dec
lock
iret
xor
push
aaa
sub
and
andl
in
fists
add
pop
inc
sti
cmc
fwait
sub
jl
imul
mov
rcrl
test
xchg
nop
xchg
mov
or
fnstsw
testb
mov
cmpsw
bound
pusha
fwait
aas
test
xchg
adc
nop
dec
icebp
jge
inc
cmp
mov
sub
and
adc
into
adc
mov
testb
leave
push
adc
dec
cmp
imul
or
lret
cmpsb
std
rorl
inc
mov
dec
icebp
addr16
fdivs
nop
mov
push
mov
aad
sbb
xor
test
in
xchg
push
mov
push
jmp
fldenv
add
mov
loope
dec
sub
dec
dec
or
adcl
loope
std
sti
and
fcomps
aaa
inc
lea
cmpsl
movsl
push
aaa
push
out
into
scas
push
repz
imul
outsb
enter
pop
std
dec
sub
dec
xor
ss
xchg
sti
jecxz
jns
out
mov
daa
dec
int3
mov
mov
and
or
lahf
sub
andl
fucomi
cltd
hlt
rorb
sbb
xor
loop
mov
cmp
sbb
addr16
jnp
push
mov
and
xchg
push
xor
cmpsl
xchg
push
sub
jg
dec
testl
mov
sbb
sub
ret
lret
cmpsl
add
fmuls
dec
test
inc
ror
lock
mov
push
mov
cmp
mov
adc
cmpb
push
cmp
in
fwait
out
iret
nop
mov
sbb
leave
in
push
pop
add
popa
xchg
and
fcmovbe
push
adc
aaa
jno
nop
gs
lock
mov
cli
pop
insb
sub
rolb
mov
pop
mov
cltd
jecxz
xlat
lret
xor
xchg
in
inc
push
addl
xchg
add
ja
dec
leave
xchg
jbe
jne
jnp
lcall
or
jle
mov
adc
repz
inc
in
mov
fistpl
scas
or
or
mov
cmp
inc
pushf
fwait
or
std
push
mov
mov
arpl
rcr
popa
dec
push
pop
jne
les
adc
xor
pushaw
lds
rcl
mov
femms
aam
ds
jnp
or
mov
inc
xchg
xchg
into
sahf
mov
add
jb
pop
cmp
scas
push
dec
mov
addr16
fnstsw
cmp
cs
ret
xlat
mov
pop
arpl
idivb
mov
fbld
lods
lret
and
ja
fsub
lock
sti
test
mov
sub
out
shrb
or
pop
ljmp
add
cmp
add
adc
sarl
ss
push
push
mov
sbb
sbb
push
lret
cwtl
dec
lea
test
mov
adc
xchg
jle
rolb
sbb
xchg
aaa
pop
inc
iret
pop
jno
mov
stc
ret
mov
test
jmp
xchg
lds
sahf
push
ret
and
lods
mov
fxch
out
mov
sub
sbb
lods
aas
mov
aam
loopne
jmp
rcrb
clc
es
es
ljmp
sbb
jle
push
xlat
mov
ret
xlat
out
pop
pop
push
pop
in
mov
sbb
cmpsb
into
mov
jae
cmc
mov
aad
lret
mov
ficoml
jb
out
ret
sbb
xor
sti
hlt
lahf
idivb
xchg
cmp
inc
sbb
and
shll
pop
aad
xchg
mov
inc
mov
mov
cmpsl
mov
shrb
push
jge
mov
iret
imul
push
in
sbb
std
lcall
push
or
and
sub
ret
and
mov
arpl
or
out
aaa
sbb
lds
pop
and
pop
mov
sub
lods
sbb
shr
and
jbe
cld
daa
stc
jmp
jnp
sub
fmuls
add
push
stos
jns
mov
insl
jne
add
jnp
mov
dec
adc
sub
push
jnp
leave
lret
dec
xor
aaa
orb
dec
or
nop
mov
test
push
xchg
add
xor
and
repz
jne
xchg
pop
fisttpl
mov
sub
fdivrl
mov
das
and
hlt
je
push
or
push
fs
sub
cltd
cmp
push
fimull
mov
cmpb
sbb
sbb
xchg
stos
bound
cmpsl
sbb
xchg
cmp
pop
push
and
in
loop
or
mov
pop
xchg
aaa
sub
cli
call
sbb
xor
mov
mov
pop
gs
insb
add
outsb
lods
add
rorl
jmp
pop
add
mov
icebp
pop
popf
das
xor
jle
fisubl
cmp
in
push
dec
aaa
sub
adcl
in
pop
daa
cmp
xchg
sub
clc
in
mov
xchg
in
jae
inc
cmp
xor
jae
repz
xchg
andb
and
popf
pop
pop
mov
jne
in
icebp
mov
rorb
clc
add
shll
xchg
dec
notl
sbb
jbe
inc
scas
lret
cmp
es
mov
xchg
int3
fdivs
mov
mov
ljmp
cmp
popa
dec
xchg
xchg
xchg
mov
mov
cmp
out
and
movsb
stos
sbb
pop
dec
dec
xchg
je
mov
jl
push
leave
pop
daa
dec
dec
dec
cwtl
dec
insl
test
xchg
inc
test
push
xchg
pop
xchg
sbb
int3
movsb
xchg
cmp
aas
or
or
les
xor
idivb
shrb
testl
addr16
cwtl
clc
sub
fs
and
loopne
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
jmp
push
mov
adc
xchg
add
ja
loop
bound
cwtl
push
lret
dec
xchg
bound
sbb
xchg
jg
and
and
sahf
push
dec
dec
push
adc
imul
lds
pop
or
sub
sbb
xchg
mov
bound
mov
dec
out
cmp
sub
enter
les
mov
stc
enter
xchg
test
xor
inc
xchg
out
imul
loope
inc
lcall
or
adc
push
out
mov
and
cmp
inc
mov
pop
cmp
icebp
xchg
in
outsb
xor
leave
hlt
and
pop
and
push
imul
fiadds
shr
call
dec
enter
fldcw
fisttpl
std
xor
mov
fs
jle
mov
cltd
repnz
out
in
insb
movsb
lret
test
daa
scas
adc
pusha
jp
movsl
jbe
out
stc
movsb
xchg
mov
imul
lcall
cltd
xor
push
in
inc
jae
xor
xor
jg
lcall
push
test
push
push
insb
pop
shlb
pop
sbb
test
faddp
outsl
inc
push
push
adc
dec
sub
sbb
loop
ret
push
imul
push
xchg
and
push
push
psraw
inc
and
and
lods
loopne
out
mov
aam
lods
inc
xor
push
enter
hlt
lds
add
or
rolb
add
cli
dec
xlat
arpl
cmp
daa
or
jb
adc
movsl
fwait
mov
fmull
repz
push
dec
outsb
popa
dec
mov
aad
test
scas
jecxz
faddl
dec
nop
and
push
hlt
mov
stos
sarl
iret
int
inc
lret
orb
dec
scas
jns
sub
inc
mov
shlb
sbb
nop
sti
rcrb
cltd
dec
stos
dec
je
cmc
in
pop
sbb
sbb
imul
xchg
enter
ret
imul
xchg
jo
inc
das
nop
xor
hlt
sbb
mov
fwait
mov
movsl
dec
mull
roll
and
jle
jae
enter
call
aas
pop
sub
daa
rorl
sub
cmp
test
es
ja
or
mov
xchg
std
and
jmp
pop
clc
movsw
inc
fdivs
divl
push
mov
stc
fldcw
xchg
pop
lock
outsl
int3
divl
fdiv
sahf
inc
fsubr
dec
stos
cmp
sub
fadds
icebp
or
mov
mov
fisubs
mov
xchg
jl
sub
pop
push
icebp
cmpsb
dec
lahf
jns
push
es
je
pop
adc
dec
xchg
pop
loope
test
cwtl
xor
add
dec
sub
adc
jno
movsl
idivl
test
fstpl
movsl
jmp
stos
insl
orl
sbb
pushf
add
xor
out
add
dec
add
dec
add
aam
sbb
test
ror
jne
mov
pop
in
test
pop
dec
test
sbb
les
mov
adc
add
push
outsb
and
movl
mov
mov
xor
in
xchg
addr16
jecxz
data16
mov
iret
addr16
add
jns
xchg
jne
lahf
aas
pop
scas
adc
cltd
mov
mov
jle
jns
mov
xchg
mov
mov
jo
mov
outsl
leave
add
xchg
adc
mov
sbb
push
negl
pop
mov
shl
adc
mov
fldenv
sbb
xchg
testb
xlat
repz
xchg
push
dec
xor
insl
jmp
xchg
imul
idivb
dec
jb
xor
add
cmp
add
xlat
jecxz
dec
lods
shlb
shrl
aas
notl
cmpsl
lods
cmp
push
dec
mov
js
out
push
clc
and
push
je
cmp
sahf
jns
pop
xchg
push
add
jp
lods
sub
mov
pop
call
sub
xorl
daa
push
pop
push
out
add
xchg
call
mov
aam
in
cmp
or
inc
xor
inc
add
pop
fnstsw
mov
mov
adc
ss
popf
cmp
pop
push
jmp
int3
and
mov
int
fidivs
aam
mov
xchg
xor
scas
push
push
dec
mov
xor
xor
imul
jecxz
and
push
ss
and
lret
bound
xchg
pop
lret
mov
cmpsl
hlt
mov
incl
bound
jne
fistl
lret
js
test
add
jae
add
dec
lcall
std
cli
shrl
xchg
mov
out
lds
fisttpll
std
into
or
xlat
sbb
xchg
enter
xlat
ror
nop
mov
pop
js
outsl
dec
pop
mov
and
js
pop
and
push
cmp
mov
into
inc
pop
pop
push
add
loopne
xor
xchg
adcb
mov
add
out
js
les
jg
push
lret
aas
rcrl
imul
inc
loopne
addb
cmpsl
cmp
ljmp
lock
xchg
lret
inc
sbbl
dec
inc
sar
add
and
inc
imul
lods
cmpsb
pop
xor
into
fdivrs
fdivl
adc
push
cli
push
jbe
lods
lahf
xchg
bound
mov
pop
stc
in
jno
insl
sub
mov
mov
fs
imul
xor
push
test
or
mov
fisttpl
mov
inc
pop
jbe
inc
pop
jp
mov
fstpt
mov
outsl
xchg
dec
or
pop
lds
xorl
push
jge
es
lods
xor
fnstcw
pop
add
lods
les
add
push
int
call
into
stc
cmc
xchg
or
push
mov
xchg
add
in
cwtl
ret
pause
mov
cmpsb
push
cmp
xor
ficomps
jb
ljmp
imul
aas
jbe
mov
xchg
adc
scas
xor
pop
hlt
mov
pop
and
clc
hlt
or
lock
xchg
loope
lods
mov
or
push
jecxz
cmp
faddl
mov
mov
xor
fsubs
stc
sti
inc
jmp
scas
shll
pop
jge
ficoml
insb
ljmp
sub
mov
fimuls
jle
adc
in
mov
or
mov
mov
push
clts
mov
adc
rcpps
xchg
dec
sti
inc
and
push
fs
or
adc
dec
aaa
call
jmp
int3
pop
sbb
pop
push
mov
pushl
insl
push
xchg
fs
sbbb
mov
mov
mov
mov
sub
icebp
sbb
insl
mov
inc
pop
xchg
jae
xor
cmp
fisubrl
inc
scas
xchg
in
dec
outsb
jl
xor
shr
add
pop
mov
gs
jmp
mov
xor
jmp
cmp
adc
mov
test
xchg
repz
xchg
mov
pop
dec
cmc
arpl
lret
pop
test
inc
aad
es
je
mov
int3
fnsave
jbe
jnp
cmp
pop
mov
leave
xchg
pop
mov
or
dec
in
jnp
jmp
xor
jmp
rcl
xchg
sbb
jbe
in
mov
pop
push
shl
push
mov
arpl
xor
xchg
inc
js
mov
and
jmp
shll
add
fs
pop
pop
fistl
xchg
pop
mov
push
ds
lds
je
pop
test
add
jecxz
sahf
adc
ja
jl
jmp
sbb
in
xor
cmp
xor
fnstsw
inc
cmp
aas
out
sub
ss
fadd
leave
leave
jnp
pop
in
push
aas
pop
loope
mov
cli
lock
xor
add
jecxz
sbb
nop
test
xchg
movsl
arpl
xchg
add
mov
mov
cs
negl
fwait
std
sub
fmulp
sbb
sub
jnp
lds
cmp
aad
cmpsl
loop
test
sti
test
js
pop
mov
idivl
je
mov
sub
adc
sbb
inc
jecxz
sbb
ds
pop
mov
jl
cli
mov
dec
pop
and
dec
loop
nop
movsl
xor
imul
xchg
adc
push
iret
sub
in
mov
ljmp
push
mov
fisttps
pop
mov
out
movsl
cmp
lea
mov
pusha
out
push
pop
sbb
lcall
ss
mov
jnp
mov
jg
pop
mov
or
ja
xlat
subl
sub
or
shrl
arpl
je
stos
jg
pop
pop
or
xor
jns
andb
mov
push
jns
neg
cwtl
in
push
negl
arpl
in
sahf
push
jns
inc
adc
into
add
jnp
sti
cmp
cmpsb
std
add
cwtl
lret
and
xchg
clc
sbb
ss
ljmp
ret
in
sub
loope
and
bound
iret
lahf
mov
cltd
jmp
movsl
cli
or
sbbb
xchg
cmp
xchg
pop
dec
ret
pop
xlat
iret
and
mov
jle
lock
or
lock
fmul
push
dec
xchg
cs
subl
pop
xchg
lods
mov
fnsave
xchg
adc
aas
mov
addr16
iret
push
and
mov
jmp
cmp
adc
jp
repnz
pop
xchg
mov
pop
xor
mov
pop
rolb
popf
and
push
jbe
or
icebp
jge
adc
ja
mov
sahf
in
aaa
push
mov
push
test
inc
in
repz
mov
test
xor
out
addb
bound
in
imul
pop
cmp
fdivrp
push
out
inc
xor
gs
mov
xor
pop
imul
pop
add
mov
popf
mov
mov
push
xor
adc
dec
clc
mov
aad
cmp
in
roll
dec
pop
push
cmp
mov
jg
pop
int
pop
jp
enter
mov
pop
cld
cmp
push
pop
sub
lcall
jbe
movsl
out
jl
push
mov
fistpll
jne
test
push
mov
sub
mov
stos
out
pop
shlb
sbb
push
jp
mov
fildl
add
inc
insl
jno
add
movsb
xchg
enter
in
lahf
jge
and
outsl
fldl
inc
adc
jnp
xchg
sub
ss
adc
pop
xchg
sbb
sahf
cmpb
dec
mov
stos
icebp
add
xlat
sbb
sub
std
lea
pop
pop
dec
jmp
jl
stos
xlat
gs
aas
xor
jb
outsb
xchg
mov
enter
sub
sbb
mov
into
insb
mov
sbb
ss
push
cmp
hlt
mov
lret
sub
das
mov
pop
pop
dec
shll
pushf
jbe
enter
inc
mov
les
cld
addl
push
sub
insl
mov
adc
dec
fldenv
mov
std
stos
adc
adc
jae
pop
push
fsubrl
push
adc
inc
test
and
fwait
jecxz
mov
pop
push
inc
fsubrs
out
icebp
and
pop
lahf
in
inc
or
addb
adc
xchg
pop
and
mov
ret
inc
adc
pop
adc
adc
fiaddl
jb
subl
cli
mov
insb
xchg
shrb
dec
mov
data16
arpl
mov
mov
xchg
sub
pop
add
mov
test
xor
inc
mov
or
pop
mov
sbb
push
fisubl
add
xchg
pop
mov
mov
popf
pop
inc
cwtl
sbb
or
mov
out
pop
jecxz
lret
add
fwait
lods
inc
out
jle
mov
and
fs
jnp
clc
pushf
insl
fisttpl
andl
cmp
mov
movsb
js
aas
arpl
sub
jge
insb
inc
jg
pop
push
and
pop
cmp
sbb
push
jne
loope
aas
scas
fcmovnu
cmp
sbb
lods
pop
daa
xchg
adc
cld
inc
outsl
mov
fld
xor
test
adc
or
jno
xchg
push
sub
xchg
das
xchg
cmc
or
inc
sub
dec
nop
fmuls
pop
fsubrp
xor
jge
insb
addr16
mul
loope
fbstp
neg
mov
movsb
test
jp
outsl
loop
push
pop
or
fsubrp
movsl
cli
daa
andb
xchg
adc
sbb
xor
cmc
adc
mov
loopne
mov
fistpll
mov
in
repnz
pop
repz
inc
sbbb
sub
pusha
clc
inc
mov
stc
dec
nop
test
pop
xchg
in
jne
mov
inc
jp
lds
inc
test
test
aam
repnz
sbb
pop
ret
sub
cs
call
add
fldl
mov
shr
push
outsl
add
outsb
pushf
sub
add
xchg
xor
cmpb
adc
js
mov
movsb
jae
add
push
xchg
divb
mov
and
push
mov
into
ja
or
push
dec
dec
lods
add
adc
jb
std
xchg
cmp
mov
push
mov
movsl
dec
jnp
sub
les
jp
int
mov
fucomip
mov
outsb
mov
std
xor
fcmovnb
mov
scas
divl
or
and
jae
cwtl
add
rolb
adc
ret
ret
outsb
insb
push
xor
fbstp
jno
or
int
aad
mov
inc
xor
imul
insb
es
je
or
mov
lds
pop
fadds
push
repz
shrl
jb
pusha
and
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
jmp
cmpsl
icebp
cmp
pop
dec
arpl
xor
adc
xchg
pop
mov
cmp
aad
jge
out
cmp
cli
mov
mov
les
outsl
decl
dec
jmp
loop,pt
jbe
nop
cmpb
inc
or
mov
cmp
in
xlat
mov
or
outsl
jl
mov
pop
jbe
xchg
ret
pop
sbb
mov
scas
inc
cmp
bswap
or
fs
scas
aaa
pop
movsl
jl
test
inc
mov
add
rclb
pop
sbb
jne
add
push
or
in
arpl
xor
aas
pushl
dec
xchg
mov
fsts
mov
aam
ljmp
mov
stc
pop
cmp
cmp
adc
xchg
jl
sbb
in
dec
adc
dec
out
lds
cmp
mov
inc
pop
pop
inc
std
adc
jbe
dec
mov
ret
aas
lret
mov
andb
cld
jnp
into
mov
dec
or
sub
xor
mov
dec
sub
push
pop
cmpl
sbbl
shr
aaa
xor
fcmovnbe
int
or
cmp
stos
bnd
call
jno
mov
test
mov
cmp
cmpsb
shlb
jg
sbb
pop
mov
ret
push
dec
loop
leave
jne
xchg
cmp
orb
mov
pushl
sub
cmp
inc
rorl
mov
in
adc
sahf
movb
jmp
sub
pop
jbe
stos
cmp
lea
xchg
test
dec
mov
sub
orl
cs
jge
cld
in
dec
and
daa
cmpsb
fisubrs
fnstenv
adc
loop
push
jecxz
jae
xchg
cmpsl
gs
mov
mov
lods
lcall
popa
call
pushf
xor
inc
out
hlt
lahf
lahf
jl
cmpsb
inc
insl
cwtl
in
scas
into
lahf
pop
mov
subb
or
in
or
lds
mov
jae
les
cmp
stos
lcall
fwait
scas
mov
sbb
xlat
int
jne
jecxz
mulb
sub
test
mov
sbb
mov
hlt
jl
inc
test
aam
dec
mov
lret
movsb
mov
and
jmp
inc
ret
push
outsb
cltd
adc
push
shlb
test
xor
fs
dec
and
pusha
lods
jae
add
mov
ficoml
shrl
mov
into
cmp
mov
ljmp
fistpll
inc
push
push
mov
jno
inc
cltd
in
cwtl
pusha
xchg
mov
loope
fisttpl
push
cmpsb
hlt
mov
mov
xor
pusha
mov
jle
cwtl
scas
rcr
and
cs
out
orl
mov
int3
leave
xorb
leave
pop
inc
xchg
sub
inc
ret
push
dec
test
incb
or
adc
ret
ss
repz
scas
and
ficoml
adc
fbld
test
aam
fstl
jle
and
loope
or
hlt
mov
filds
mov
insl
lcall
pop
data16
push
out
add
xor
andl
xchg
call
fstl
stos
scas
cmp
xor
pop
dec
ljmp
iret
xlat
dec
sbb
mov
ret
lods
imulb
jb
lea
push
insb
das
push
jae
dec
sbb
mov
push
cmp
sahf
mov
ret
imul
mov
shl
jecxz
addb
adc
adc
sub
pop
ret
rcll
ja
xchg
xlat
mov
sub
hlt
adc
insb
sbb
shr
push
mov
add
lods
shl
push
jg
or
mov
mov
shrb
js
sbb
subb
cmp
mov
mov
xor
call
shll
arpl
test
out
dec
or
mov
and
sub
cmpsl
int
push
inc
push
dec
pop
pushf
inc
jne
mov
sbb
mov
enter
aad
out
icebp
scas
adc
pop
jmp
out
addl
push
mov
fwait
mov
loopne
ret
jnp
pop
popf
test
repnz
aas
shll
inc
push
mov
xchg
mov
pop
test
sbb
adc
fwait
adc
stc
mov
hlt
ja
push
cwtl
push
popf
pop
xchg
pop
jmp
in
ret
inc
xchg
cltd
ret
xor
sbb
inc
iret
mov
lods
sti
xlat
sbb
xchg
jmp
adc
jnp
outsb
pusha
cwtl
adc
repz
adc
inc
mov
or
in
andb
sbb
out
cwtl
enter
sub
aas
out
or
adc
std
sbb
mov
mov
int3
xchg
pop
icebp
int
xor
ja
sbb
xchg
pop
cwtl
push
jl
adc
jnp
adc
lds
add
mov
addr16
mov
sbb
sub
sahf
lret
sbb
sub
inc
pop
pop
or
dec
add
cltd
xor
jns
andb
and
lret
push
xchg
cltd
adc
dec
int
roll
xor
cmp
add
movsb
mov
push
xorl
js
pop
push
daa
sets
into
push
imul
scas
in
test
mov
cmp
dec
xor
ja
pop
out
mov
sub
out
lcall
push
in
dec
add
test
lods
divb
inc
mov
mov
or
pushf
xor
or
out
cmc
adc
mov
lea
movsl
int3
sbb
pop
cmp
cmp
pop
mov
je
or
sbb
call
jb
jecxz
xchg
movsl
fadd
cwtl
jp
push
call
testl
and
mov
repz
mov
sbb
sub
and
stos
mov
jecxz
pop
cltd
and
jecxz
loopne
cmp
test
fst
xor
mov
or
loop
mov
les
dec
call
or
test
lock
call
out
adc
repnz
pop
push
stc
mov
lds
ja
cs
and
xchg
js
xchg
jne
js
xchg
int
adc
int
mul
test
lods
add
cmp
push
fisubrs
in
data16
sub
ficoms
in
stos
push
pop
mov
mov
in
lcall
cmp
test
test
sbb
or
imul
in
cld
xchg
andb
mov
or
mov
aaa
sub
xlat
movsl
mov
dec
sbb
sahf
addb
push
mov
mov
pop
or
pop
mov
aad
adc
sub
fisubrl
sti
and
aam
outsl
push
mov
and
sbb
fsubr
sbb
aam
scas
out
dec
test
sub
cmc
xchg
dec
dec
jno
fistpll
jecxz
pop
pop
push
mov
mov
jmp
ljmp
sub
dec
mov
adc
xchg
test
add
mov
out
sub
repz
jp
cmpps
orl
add
xor
pusha
sbb
aad
cwtl
mull
insl
sub
inc
mov
mov
xlat
pop
sbb
fisttps
shll
mov
jns
fisubl
pop
fsubl
dec
push
mov
mov
insl
cmp
and
push
shr
jg
push
cmp
sub
je
jp
nop
pop
js
jae
dec
test
testl
adc
cmp
out
mov
das
inc
push
or
push
dec
push
add
sub
add
pop
lret
push
enter
rorb
xor
mov
mov
outsb
inc
fildll
cmc
scas
push
pop
sub
sub
jns
movsl
xor
cmp
mov
loope
aam
daa
push
outsl
inc
adc
sbb
mov
xor
sbb
push
mov
jns
mov
cmp
add
sbb
pop
es
add
sub
je
dec
es
or
jns
scas
jle
add
nop
sub
and
aam
loope
push
stos
lock
xchg
stc
or
xchg
bound
aas
cmp
adc
loopne
out
test
and
inc
sub
cmp
insl
dec
lret
bound
movsb
xchg
test
and
loop
mov
sub
popf
sbb
jne
negb
dec
cmpsb
inc
push
lods
jp
and
push
nop
pop
aam
add
lock
cmp
or
sbb
mov
pusha
xchg
outsl
in
test
test
pop
fs
mov
push
out
adc
pop
insb
xor
jle
ror
pop
xchg
dec
inc
sarl
pusha
pushf
pop
jbe
loop
add
jmp
jae
icebp
and
movsl
sub
jb
adc
test
into
cs
cli
xchg
repnz
jb
clc
dec
xor
push
mov
dec
xchg
or
mov
lds
mov
ljmp
orb
add
adc
imul
push
dec
out
xchg
je
scas
movsl
xor
mov
bound
hlt
xor
cmp
push
mov
scas
dec
movsl
lods
xlat
imul
cwtl
sub
sub
and
and
adc
xor
leave
fidivrs
pop
xchg
cltd
into
fs
jno
aas
icebp
das
xchg
leave
mov
orl
out
hlt
add
push
xchg
or
cmpsb
cmp
nop
aad
pop
shrl
ss
or
adc
cli
push
es
scas
sub
mov
mov
aad
dec
push
and
cmc
imul
in
mov
in
mov
mov
push
stos
sub
and
mov
sub
ds
lahf
cld
mov
jbe
lds
inc
sbb
scas
add
xor
es
call
push
push
sarl
icebp
sbb
mov
jne
imulb
test
jno
push
scas
xchg
sub
sub
scas
mov
in
xchg
jns
cmp
repnz
xlat
hlt
or
sub
cmpsl
sub
ror
mov
daa
jg
pop
cmpsl
jno
cwtl
mov
clc
fwait
loop
push
xor
mov
lahf
lret
mov
and
loope
sbb
sarb
pop
repz
pop
sbb
shlb
dec
out
dec
in
fwait
rorb
jbe
mov
push
xor
loop
dec
cmp
gs
xor
lods
pop
movsl
pop
or
cmpsb
xchg
mov
adcb
fsubs
mov
iret
cmp
xchg
push
orl
cmp
popf
adc
das
dec
adc
cmp
lret
cmp
call
ljmp
iret
aad
sbb
or
add
repnz
mov
les
movsb
xor
cli
adc
das
aas
insl
dec
lret
adc
ds
or
rclb
inc
ss
fisubl
jne
pop
outsb
insl
or
and
dec
mov
push
jecxz
fdivrs
hlt
and
call
ja
stc
popl
push
mov
insl
nop
andb
test
mov
cmp
scas
mov
bound
jecxz
insl
and
jno
cli
jp
shrb
fadd
mov
jbe
inc
stos
cmpsb
sbb
pop
cmp
data16
fwait
lret
push
scas
sub
jg
push
jmp
sbbb
repnz
fiadds
daa
insl
imul
xor
fs
sti
pop
cmp
pop
xchg
push
jbe
push
lods
sbb
popa
loopne
lock
mul
adc
and
fmull
or
inc
mov
mov
ficomps
jge
insl
mov
adc
aaa
dec
push
jmp
out
xlat
or
and
test
dec
jae
and
pop
scas
sub
xchg
jp
mov
push
hlt
lods
ret
jnp
repz
cmp
clc
push
test
sub
notb
jb
or
cltd
and
jl
pop
out
jmp
in
push
lret
shl
cmp
fcoml
jg
sub
xchg
sub
mov
loop
mov
sbb
sahf
aad
out
xchg
pop
cmpsl
xor
pop
xor
sbb
mov
inc
dec
mov
inc
ja
push
test
pop
leave
jae
jns
call
les
and
and
push
sbbl
push
aad
subb
clc
xor
xchg
and
ljmp
xchg
fs
and
and
enter
pop
loop
popa
testb
sub
lea
cld
fmull
pop
fisubrl
rorb
iret
dec
fsubs
mov
loop
push
insl
fwait
cmpsl
rorl
mov
adc
jb
push
pop
push
sbb
lods
add
adc
pop
sub
or
nop
movb
xor
inc
movsl
push
lss
push
push
lret
mov
cli
sbb
ret
fwait
pop
push
lret
lret
fs
jecxz
fcom
push
push
adc
add
stos
push
add
push
jecxz
jp
ja
mov
mov
das
adc
std
mov
movsb
pop
xchg
lret
inc
shrb
ja
mov
xchg
daa
xchg
scas
insb
fnsave
andl
mov
cld
and
xor
jl
inc
ret
inc
xlat
cwtl
fcmovnb
fidivs
and
cmp
dec
shlb
pop
mov
or
push
pop
inc
sbb
shl
sub
das
insb
push
dec
scas
jnp
add
mov
aam
incb
inc
movsl
adcl
jbe
cmpsl
fwait
push
or
mov
xor
xor
push
out
push
push
test
ja
xor
repnz
cmp
int
fs
push
pushl
push
push
call
mov
jmp
push
rcrb
and
inc
outsb
xchg
stc
repz
aas
mov
psraw
jns
imul
or
ret
xchg
inc
xchg
mov
adc
dec
lds
ljmp
ss
and
inc
ja
jnp
push
pop
push
push
mov
aas
addr16
ret
movsl
fidivrl
cmp
xor
cmpsl
mov
rcl
cmc
adc
adc
xor
loope
xchg
xor
mov
mov
cmp
mov
test
fmuls
xchg
push
jnp
lahf
insl
or
mov
cmc
idivb
roll
mov
loopne
and
inc
popf
popa
out
adc
mov
pushf
mov
and
cmpsb
mov
stos
lods
push
ljmp
imull
mull
popf
clc
clc
xchg
push
cmp
scas
out
mov
jmp
jbe
jecxz
jno
or
push
aaa
popf
sbb
mov
out
daa
fwait
push
and
xor
jl
jo
jne
sbb
dec
ss
adc
and
icebp
push
push
sub
loop
mov
fdivrs
push
sbb
xor
std
insb
jns
xchg
cmp
dec
popa
into
in
insl
sub
flds
mov
daa
jle
jmp
sahf
add
mov
push
cmp
inc
and
stos
sbb
pushl
popa
xchg
jne
mov
jle
dec
mov
inc
sub
jmp
sar
popf
dec
fwait
inc
xchg
xor
fwait
iret
xchg
outsb
jns
gs
push
lods
dec
stos
add
cs
in
jmp
out
jp
gs
movsl
fdivr
in
xchg
jo
call
sub
xchg
insb
and
ss
jg
aaa
outsb
mov
add
popf
aad
jbe
out
cmp
pushf
push
into
push
push
mov
mov
mov
rcrl
add
insl
inc
mov
out
incb
or
jmp
out
fists
jnp
mov
imul
push
sub
xor
jle
push
in
sbb
cmp
out
mov
and
jmp
xlat
mov
cmp
std
stos
ss
push
xchg
xchg
cmp
and
and
bound
aam
pop
mov
and
pop
lahf
cmpsb
and
mov
lret
pop
xchg
pusha
scas
mov
lret
mov
ja
mov
cmpl
pushf
xchg
adc
aaa
inc
cwtl
pop
je
jmp
mov
mov
hlt
fnsave
jno
rclb
test
push
xorl
pop
and
cmpsb
loop
outsb
aaa
into
mov
sbb
xchg
lret
and
out
xchg
rcll
movsl
xor
icebp
mov
mov
popf
adc
stos
outsb
mov
pop
lret
sbb
adc
or
test
adc
dec
test
fcoml
push
cli
mov
add
xchg
scas
mov
adc
outsl
jge
fs
sub
pop
enter
xor
adc
jno
loopne
push
or
decb
inc
pusha
jne
mov
mulb
dec
jl
out
push
dec
test
cmpsl
mov
adc
rolb
jno
push
outsl
out
in
sub
mov
mov
push
push
sahf
sub
call
imul
sub
xchg
fistpl
push
les
jne,pt
push
lcall
xor
aad
adc
dec
xchg
mov
popa
inc
sub
add
ret
icebp
test
imulb
push
xor
jae
std
leave
xorl
test
mov
fs
dec
test
lods
mov
jno
cmp
dec
js
dec
push
iret
sbbl
xchg
jns
fistps
mov
ss
jbe
or
mov
or
xchg
push
lods
mov
sar
sbb
jb
mov
repnz
or
rcrl
and
test
lret
push
shlb
imul
in
mov
imul
mov
cltd
loope
add
inc
std
adc
push
fmuls
add
cmp
test
cmp
pusha
mov
pop
push
mov
cmp
aas
fsubrs
xor
pop
mov
dec
cmp
out
pop
lods
orb
cmp
int
pushf
jno
nop
adc
sbb
leave
inc
stos
xlat
ret
or
pop
mov
loope
push
rcrl
pop
xor
repnz
xlat
sbb
dec
cmp
paddusw
dec
mov
adc
dec
pop
ds
dec
rolb
inc
aaa
and
scas
push
sarb
daa
push
pop
mov
inc
stos
insb
rcrb
ret
imul
out
mov
dec
ja
jmp
inc
sbb
rol
xor
mov
mov
dec
pop
push
cmp
aaa
mov
push
lret
xor
jnp
repz
push
adc
iret
add
imulb
mov
nop
repz
jmp
jnp
push
jne
jnp
or
push
popa
pusha
mov
and
test
arpl
fcmovbe
xchg
xor
in
push
out
outsb
daa
aad
fwait
not
dec
sub
movsb
ja
outsl
pop
jp
xor
loop
cmc
lret
insl
out
cld
jbe
add
cwtl
adc
stc
dec
out
sub
sub
jecxz
rcrl
nop
clc
mov
and
mov
stos
xor
mov
std
fbstp
push
lcall
div
fs
shll
ss
push
inc
insl
cli
xchg
cmpsl
hlt
cmp
pop
addr16
cmpsl
lret
pop
add
xchg
lret
orl
test
push
fbld
sbb
scas
sbb
jnp,pn
add
and
sbb
pop
lret
or
lods
mov
btc
enter
imulb
dec
je
inc
ds
scas
mov
and
sub
sahf
xor
scas
mov
push
jecxz
sub
lods
jg
mov
mov
add
ficompl
in
xchg
out
inc
fcomps
leave
mov
adc
shll
inc
mov
fistl
call
and
adc
xor
sbb
aam
push
aam
cmc
ss
cmp
ljmp
sbb
cmpb
hlt
mov
and
std
ljmp
mov
fidivl
scas
adcb
stos
data16
call
loope
aas
xor
push
cs
out
loopne
enter
inc
pmaddwd
pop
push
cli
cmp
and
stos
inc
mov
push
popf
ljmp
xor
xor
mov
fisttpl
mov
mov
sbb
jl
pop
mov
jg
mov
sbb
mov
xchg
and
leave
ja
sbb
mov
in
mov
les
jnp
sub
or
in
cmp
fcoml
cmp
mov
xor
jno
div
aaa
or
shrd
shr
shr
jmp
imul
scas
sbb
xor
sub
adc
xchg
dec
popa
inc
sub
sub
xor
add
in
loopne
out
test
jb
movsb
stc
int
mov
roll
aad
test
pop
popf
mov
adc
cmp
popl
mov
xchg
fnstcw
das
in
orl
iret
dec
adc
bound
sub
dec
xor
xor
sub
cwtl
sbb
in
pop
out
or
sbb
scas
mov
mov
and
inc
inc
pop
test
lret
jns
repz
jg
popf
xchg
sbb
ja
mov
push
inc
add
insl
push
or
push
in
nop
lods
sahf
adc
xchg
mov
mov
mov
std
jo
es
and
mov
sbb
loope
loop
cld
cmpsb
pop
lods
sbbl
aas
shlb
jnp
subl
or
xlat
sbb
xchg
jb
pop
test
dec
xchg
inc
sarl
and
xor
inc
ljmp
cmc
mov
aad
das
and
stos
cmp
jo
jecxz
std
pop
inc
jmp
ss
adc
cs
dec
lret
adc
test
andps
test
shr
mov
jp
roll
pop
call
jbe
jp
and
xchg
pxor
mov
xchg
or
xchg
imul
insl
cltd
mov
arpl
mov
pop
in
fnstsw
xchg
mov
sub
push
fists
add
popa
push
insb
or
inc
inc
gs
lds
add
xchg
in
insb
add
xchg
shll
dec
mov
mov
mov
imul
call
push
and
xchg
fisubrs
xor
sbb
mov
lret
pop
movsb
filds
mov
xchg
incb
push
adc
inc
add
fwait
rclb
or
push
mov
mov
inc
mov
push
dec
and
lcall
pop
int
cmpsb
mov
cmp
ljmp
add
mov
xchg
cmp
ss
fcmovnu
xchg
pop
incl
jmp
vxorps
out
stos
xchg
pop
or
lods
arpl
xor
cltd
sbb
mov
jns
cmp
inc
add
cmc
dec
jg
push
lods
cmc
pop
pop
out
subb
sbb
sahf
sbb
jecxz
add
fwait
ds
inc
and
adcb
xchg
daa
jb
pop
xor
adc
inc
in
aam
sbb
mov
mov
xchg
dec
mov
daa
jle
or
mov
mov
push
or
pop
xchg
sar
jne
hlt
cmpsl
and
in
fcmovb
repz
dec
das
stos
xchg
scas
inc
mov
test
push
push
push
cmp
test
fs
jmp
in
cmp
aam
pop
movsb
add
ret
xchg
mov
scas
inc
mov
inc
lds
sti
dec
push
test
lods
std
adc
dec
fildll
mov
pushf
xor
jo
or
gs
cmp
xcrypt-cfb
cmpsl
movsb
ret
fs
xchg
int3
bound
add
aaa
mov
adc
aam
fstpt
push
popf
xchg
mov
fsubl
adc
repnz
cmc
cmp
xor
pop
mov
push
pop
jp
mov
adc
sahf
mov
xchg
push
or
push
cmp
cmp
shlb
decb
movsl
push
dec
dec
enter
adc
psrlq
cmpsb
xchg
sbb
sub
xchg
ficomps
add
mov
insb
fsubl
cs
jbe
adcb
stos
sub
mov
fsqrt
xor
jmp
add
loopne
xchg
hlt
inc
lcall
cmp
inc
ret
jne
xor
add
adc
sbb
adc
in
or
mov
mov
js
mov
enter
dec
mov
sbb
out
adc
xchg
sub
repz
movsl
fisubl
icebp
sub
xchg
mov
jae
or
lods
or
pop
popl
jmp
adc
mov
add
fcmovb
mov
mov
in
stos
sti
push
data16
loop
add
cld
add
add
divb
mov
push
rclb
mov
mov
inc
add
pop
lret
lods
push
mov
sbb
jne
pop
int3
mov
sub
fidivl
jns
adc
aaa
sub
pop
xchg
push
loop
sbb
sub
cmp
push
loopew
pop
xor
je
out
vpaddsb
push
inc
cmp
mov
cmp
rorb
cmpsl
add
or
iret
pop
jae
fimull
scas
pusha
cmpsl
dec
mov
jmp
outsl
repnz
jmp
sub
in
cmpsl
sub
mov
dec
xor
adc
aas
rclb
inc
int
bound
pop
loop
mov
xchg
std
out
aam
xor
mov
test
jmp
test
and
ucomiss
stc
rorl
fimull
mov
les
push
sub
inc
pushf
neg
sbb
dec
jmp
push
xorl
cwtl
push
mov
es
das
push
pop
pop
and
scas
es
mov
scas
addr16
jl,pn
mov
xchg
sarb
sbbl
or
loope
jns,pn
inc
insb
outsb
inc
inc
into
mov
dec
or
gs
gs
and
sbb
icebp
cmp
add
ljmp
and
mov
popf
sbb
pop
push
push
adc
ds
or
dec
testl
jp
dec
mov
push
leave
mov
das
rorb
jnp
pop
pop
shlb
lret
andb
into
xchg
push
jae
jg
mov
ds
shll
enter
ja
imul
movsb
mov
jno
xor
and
in
mov
pushf
inc
ja
mov
inc
incl
fidivrl
sub
pop
jne
imul
jbe
les
cmp
and
mov
cmc
lods
pop
stc
inc
cmc
shll
pop
xor
into
add
call
hlt
push
rol
rolb
push
mov
int
inc
out
mov
sub
push
fdivrl
mov
enter
out
scas
pop
imul
nop
int
cld
pushf
test
lods
mov
inc
lcall
les
push
pop
rorb
pop
sub
mov
cmp
mov
mov
xchg
mov
movsl
jbe
push
push
cmp
dec
insb
int
or
leave
push
adc
jle
xor
repnz
lods
jg
dec
xchg
hlt
xchg
mov
fmull
scas
in
je
adc
lea
mov
jns
jbe
stc
ljmp
inc
inc
es
inc
mov
arpl
inc
push
dec
iret
bound
icebp
push
mov
mov
mov
mov
push
push
jmp
push
xchg
stos
les
ret
shll
adc
xchg
in
pop
fs
dec
add
cs
cltd
lods
lock
sarb
mov
cmp
sbb
push
xchg
add
enter
mulb
xchg
xchg
sub
cmc
xor
pop
jae
push
xchg
shll
pop
mov
and
insl
cld
inc
or
mov
popa
dec
je
dec
jecxz
divb
enter
je
inc
stos
pushf
jp
pop
jecxz
mov
xor
xchg
sarb
fcmovnu
dec
adc
inc
cmc
add
mov
call
mov
push
imul
mov
inc
sahf
int3
xor
rol
mov
pushf
sti
push
pop
fldt
xchg
or
out
lahf
xchg
imul
jmp
push
dec
aas
insl
mov
cmpsb
icebp
sbb
push
lahf
mov
jno
dec
pop
pop
jo
push
stos
mov
insb
shl
mov
fcmove
or
jae
dec
dec
xchg
or
or
sub
mov
fsubs
add
sub
or
arpl
inc
mov
inc
inc
cmp
shll
pop
mov
inc
out
sub
cmp
ljmpw
leave
xlat
mov
adc
xchg
mov
mov
mov
jge
push
call
cmp
jp
mov
jle
inc
dec
jmp
mov
xchg
shrl
loop
mov
lods
xlat
stos
loope
clc
je
or
or
mov
repnz
test
sbb
sbb
add
mov
fwait
or
pop
and
rclb
les
dec
pop
pop
inc
mov
loopne
mov
aas
lock
inc
fcomp
or
out
imul
int3
in
imul
mov
add
mov
mov
mov
xchg
sti
lods
mov
cltd
mov
inc
int
ds
push
add
popa
std
aas
jecxz
sbb
dec
jo
add
insb
mov
pop
cltd
mov
pop
mov
xchg
pop
adc
adc
mov
rcrb
fwait
or
mov
lock
cli
mov
imul
adc
add
inc
sub
push
jno
xchg
and
lahf
adcl
lds
aad
cmc
mov
popf
outsb
jmp
inc
jne
dec
nop
cmpsl
mov
syscall
fdiv
pop
add
pop
xor
popf
dec
ror
enter
bound
enter
inc
outsb
loopne
into
in
sub
push
sub
test
cmp
sub
pushf
imul
enter
andb
sbb
cmp
xchg
lea
xchg
insb
icebp
cmc
shl
addr16
not
daa
and
sti
repz
push
sub
inc
insb
mov
jbe
addr16
subl
inc
pop
in
fsub
imul
jbe
divl
dec
std
sbb
pop
repnz
dec
cmp
aam
ja
jl
scas
roll
lock
ret
push
mov
and
int3
imul
push
pop
stc
pop
mov
icebp
mov
inc
bound
cltd
sti
or
rcrb
test
popa
outsl
fwait
jp
jbe
or
ds
xor
or
adc
xor
arpl
inc
adc
jb
in
leave
aad
mov
push
push
imul
cld
rcl
or
sbb
arpl
dec
outsl
ret
pop
pushf
or
decl
in
dec
jmp
push
movsb
lahf
daa
xchg
adc
lock
lds
push
rcrb
dec
jl
fistps
roll
testb
mov
xorl
xchg
push
jae
das
bound
frstor
xchg
ds
pop
xchg
jno
inc
fstl
jnp
cmp
mov
fs
mov
test
jge
test
push
adcb
test
nop
inc
or
js
inc
mov
arpl
inc
movl
jle
push
data16
lods
scas
les
outsb
add
pop
leave
fs
addl
push
fninit
out
and
xor
xchg
mov
pop
xorb
add
outsb
sub
lods
xor
xchg
lea
popf
int3
jge
dec
test
inc
loopne
test
ds
mov
fnsave
xchg
sti
out
dec
dec
or
in
mov
adcl
subl
test
pusha
push
pop
ror
adc
scas
sub
add
dec
pop
sub
mov
ret
pushf
xchg
mov
push
out
xor
jnp
test
xor
test
sti
cli
repnz
cmpsl
cmp
xor
test
xchg
pop
int
daa
push
aad
mov
pushf
hlt
inc
lahf
mov
or
ljmp
inc
push
xchg
and
mov
inc
mov
fstl
cmp
and
mov
mov
fistpll
sbb
lea
push
xchg
imul
xchg
roll
das
pushf
pushf
andb
in
out
divb
outsl
stos
stos
cli
je
rorl
lret
jo
mov
or
sub
outsb
jo
sub
test
or
or
cld
push
or
mov
jl
adc
jne
mov
sub
sarb
inc
jo
ret
cmc
in
mov
mov
arpl
jbe
pop
sub
out
sahf
or
std
scas
mov
out
fucom
mov
cmpsl
mov
or
test
nop
decb
sahf
pusha
mov
or
out
out
xor
add
xchg
iret
adc
adc
sub
cltd
insl
psadbw
mov
mov
outsb
push
cs
or
enter
cld
enter
repz
sub
dec
jno
call
cmp
mov
push
mov
aad
pop
sbb
push
mov
data16
pop
inc
or
call
jbe
out
out
insb
xchg
push
insl
nop
aad
sti
xchg
iret
or
inc
rorl
mov
repnz
mov
call
ret
inc
lods
mov
test
push
aad
dec
sub
aas
xor
into
mov
adc
cmp
push
push
adc
enter
add
jg
in
jge
ss
movsl
xchg
out
test
aam
jne
jmp
push
mov
pop
adc
or
and
dec
and
mov
pushf
xchg
mov
add
mov
push
mov
dec
or
push
add
jmp
cs
fimull
inc
gs
jmp
frstor
cmpsl
cmp
inc
ds
mov
int3
mov
leave
enter
sub
adc
mov
lea
out
cmc
iret
stc
push
scas
or
std
dec
lock
mov
lcall
mov
movsl
aam
lahf
scas
sahf
dec
aad
adc
xchg
mov
movsl
jns
mov
dec
ja
mov
pop
xchg
in
lods
divl
lock
mov
xor
xchg
push
and
jecxz
mov
fdivrl
pop
lods
call
hlt
shl
sub
xor
repz
divb
or
jb
hlt
stc
das
in
mov
adc
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
jmp
pop
jge
lds
hlt
inc
xchg
sbb
adc
xchg
sub
mov
jo
fwait
push
out
jg
orb
or
stos
fistl
cmp
aad
mov
jb
inc
and
pop
xchg
cld
ljmp
sbb
test
icebp
jmp
jns
fcmovbe
pusha
cwtl
sub
ficompl
add
pop
fildl
pushf
enter
fs
mov
loopne
pop
out
imul
ret
imul
dec
and
aam
mov
push
jg
out
and
cmp
les
mov
mov
sbb
fidivrl
sub
dec
mov
pop
daa
lds
ss
mov
lret
add
mov
lods
mov
je
xchg
insb
sub
dec
rcl
rcrl
xor
push
jo
clc
cmp
dec
lahf
into
and
jns
movsb
sub
nop
insl
push
mov
in
jp
xchg
mov
inc
insl
mov
je
and
dec
or
sbb
and
sub
test
int3
xlat
push
ljmp
test
int
jg
clc
xor
dec
ss
pushf
push
imul
jle
pop
dec
add
lods
stos
sbb
imul
push
mov
aam
or
xor
and
inc
jb
sbbb
adc
add
add
fidivs
addr16
cmp
pop
push
jns
dec
insb
sbb
mov
test
pop
add
jl
mov
pop
inc
mov
pop
or
cli
push
xor
nop
and
sub
subl
xchg
adc
popf
xor
jns
push
pushf
mov
stc
mov
nop
pop
or
ss
bound
cmp
test
imul
inc
pop
xor
shlb
cmp
add
jp
push
rcr
push
das
push
mov
xor
dec
lock
jo
cmp
addl
jge
push
sahf
add
push
adc
or
repnz
xor
mov
or
mov
sub
and
push
push
jae
xchg
mov
fidivrl
out
js
push
sbb
cltd
jnp
inc
mov
lahf
icebp
rol
test
scas
xchg
mov
mov
ja
fmull
out
test
or
push
mov
bound
mov
lock
ret
fldcw
dec
xchg
mov
pop
addl
xor
add
arpl
sbb
cmp
jae
fists
push
dec
bnd
mov
jnp
sahf
sti
mov
ss
lahf
mov
mov
dec
fwait
icebp
fidivrl
mov
jnp
ljmp
mov
sub
sbb
enter
mov
imul
sbb
addr16
call
mov
filds
movsb
mov
cmp
test
int
cmp
adc
loopne
adc
imul
jbe
icebp
pop
fdivr
mov
cli
sbb
mov
xchg
adc
outsl
push
stc
data16
push
or
xorl
addb
inc
mov
popf
inc
cmp
clc
jbe
xchg
push
inc
push
jl
lahf
and
pusha
xchg
add
and
sbb
fadds
mov
loopne
or
mov
xor
ret
cs
adc
mov
scas
stos
mov
shll
mov
inc
sub
in
and
adc
push
scas
pop
ret
cmpsl
xchg
xlat
pop
adc
pop
flds
and
xchg
sti
adc
gs
imul
sub
loop
xor
imul
fldenv
adc
rcrl
ss
push
in
sbb
or
inc
cmpsl
outsb
nop
jnp
repnz
mov
sbb
or
test
mov
xchg
adc
mov
jb
int
cli
push
mov
xchg
gs
xor
mov
mov
mov
inc
in
pop
arpl
sbb
js
sbb
mov
mov
lahf
push
pop
lods
jne
add
lock
xor
pushf
mov
test
dec
popa
inc
test
sbb
pop
enter
dec
xor
jne
mov
out
mov
inc
jg
iret
pop
into
jo
push
rcr
xor
jmp
jb
jmp
sub
adc
into
addr16
lock
xlat
ljmp
aad
inc
jnp
call
hlt
mov
fcmovnb
or
xchg
cmp
rcrl
dec
into
ret
xor
adc
jmp
pop
fwait
cmpsl
imul
daa
and
out
aad
jg
xchg
sbb
lds
pop
xchg
jle
lcall
pusha
faddp
and
pop
int3
push
fiadds
insl
insb
pop
daa
sahf
pushf
orb
cmpsl
jne
dec
mov
xchg
add
xor
roll
xchg
negb
sbb
mov
push
in
push
jo
loopne
mov
nop
push
popf
test
fisttps
stos
jns
repnz
fisubrl
dec
push
leave
jnp
cmp
mov
mov
cmpsl
mov
mov
mov
popf
aad
cmp
fs
sahf
jmp
jb
scas
pushf
add
outsl
mov
pop
fwait
cwtl
xchg
dec
outsl
je
sbb
movsl
push
inc
mov
jge
mov
inc
inc
daa
insl
and
je
es
lahf
imul
mov
sub
pop
cmc
add
xor
clc
test
xchg
outsb
ds
insl
dec
adc
sbb
mov
test
out
xor
mov
dec
jl
fdivl
outsl
xchg
add
inc
clc
sbbb
mov
adc
scas
ret
les
xor
mov
lcall
loopne
aas
cpuid
stos
jno
inc
js
addr16
repnz
add
mov
popf
push
push
or
jle
fsub
in
sbb
add
test
aad
call
iret
sub
cmp
addr16
lret
loope
xchg
cmpsb
in
enter
call
push
xor
inc
cmp
cmpsl
popa
fs
mov
ja
imul
add
das
and
mov
xchg
adc
enter
add
and
arpl
push
sub
out
enter
aam
aad
in
je
std
push
lret
divb
and
adc
dec
fildl
sbb
mov
repnz
int
or
add
inc
not
pushf
add
inc
mov
jmp
mov
jp
and
mov
inc
xor
shrb
xor
add
popf
pop
inc
aas
es
mov
xchg
imul
pop
jae
popa
shrb
adc
sbb
cmp
dec
sub
aad
xor
sbb
cmpsl
sbb
adc
cmp
or
ds
int3
add
jo
jb
icebp
dec
negl
sarl
ss
sbb
push
inc
arpl
xchg
cwtl
scas
ret
fbld
pop
lea
insb
xchg
shrd
shr
jmp
and
add
loop
es
pop
js
xchg
inc
pop
js
ja
add
mov
sbb
adc
daa
int
int3
adc
mov
xor
int3
rclb
lock
add
adc
xchg
mov
into
jge
adc
sbb
aam
out
sub
adc
mov
dec
dec
imul
bound
or
push
fs
aas
aas
ficomps
les
nop
pop
in
loope
rclb
pop
inc
pusha
in
stc
sub
pop
dec
orb
cmp
in
and
cmp
inc
push
icebp
js
dec
jmp
scas
popf
jl
into
test
pop
rcrl
data16
pop
out
lea
adc
jmp
gs
popf
jmp
sbb
pop
cmp
xchg
inc
into
jmp
cmpsb
stos
or
in
out
mov
pop
in
aaa
cmp
mov
sub
orl
imulb
cmpb
insb
sarl
jge
test
mov
sub
scas
icebp
jbe
sub
jl
xorb
outsb
loope
push
xor
lahf
pop
outsl
sbb
lea
or
sti
stos
push
cmc
dec
jne
cwtl
add
mov
and
xlat
jne
pushf
loope
enter
dec
xchg
cmp
add
push
adc
scas
call
pushf
ljmp
rolb
addb
sub
or
xor
pop
fiadds
xlat
mov
jmp
adc
pushf
mov
scas
jne
cli
test
std
jecxz
cwtl
insl
or
and
add
lahf
add
adc
mov
xor
sub
jb
ret
mov
stos
mov
mov
and
jne
daa
jge
dec
xchg
sub
jb
cmp
jns
loop
jb
push
lods
mov
lock
in
loope
mov
out
fldl
xor
lods
stc
dec
or
push
push
sbb
out
xlat
aad
xor
adc
pop
mov
mov
lret
jle
ds
sub
xchg
or
cmp
mov
sub
mov
popa
jb
mov
jp
sahf
stos
insb
paddsw
leave
leave
inc
jle
cmp
in
es
leave
push
nop
lret
push
cmpl
dec
add
xor
cwtl
xchg
movsl
test
and
xchg
daa
int
inc
jle
hlt
inc
lea
dec
adc
inc
add
jmp
enter
pop
jmp
hlt
sbb
dec
scas
xchg
or
cmp
fidivs
mov
push
xchg
sbb
cmp
sbb
and
cmp
add
js
cmp
cmc
sbb
mov
enter
jge
aas
xchg
cli
imul
js
cmpsl
incl
pop
ljmp
push
out
mov
push
cmp
aaa
pop
mov
mov
imul
jmp
cmp
sub
jl
ret
cltd
pushf
xor
lcall
mov
mov
inc
lds
mov
sahf
jp
out
stos
sti
xchg
add
pop
dec
mov
insb
push
mov
dec
icebp
outsl
inc
xor
xor
fsubrs
loop
bt
inc
lock
aas
scas
push
arpl
sub
mov
push
icebp
push
mov
push
mov
pop
push
jns
pop
xor
pop
insl
lock
pop
fwait
sub
cmp
or
fcompl
inc
lds
loope
xchg
mov
or
cwtl
xchg
sbb
rorb
out
stos
mov
clc
mov
out
or
int
cmp
sbb
iret
ja
xchg
dec
fisubl
and
in
push
lods
scas
jecxz
imul
xor
imul
inc
xchg
mov
in
xlat
repz
dec
jae
sub
inc
cmpsl
xchg
push
sub
sbb
dec
push
sub
fdivr
mov
scas
pusha
clc
cmp
inc
jp
daa
hlt
adc
ret
gs
int3
mov
ret
xchg
jno
cltd
popa
jmp
jecxz
lcall
in
sti
gs
cld
sub
and
imul
jecxz
mov
sub
jle
lret
dec
and
loope
movsb
cmpl
pop
xchg
icebp
adc
shl
lret
dec
rclb
cmp
jns
and
dec
push
pop
scas
inc
into
pusha
or
loopew
push
sbb
addr16
add
cli
daa
loopne
jnp
mov
inc
adc
add
mov
mov
roll
cmp
sub
lods
ret
jne
sub
roll
add
push
pop
test
adc
lds
mov
dec
push
xchg
lods
or
outsb
cli
push
cwtl
mov
lcall
dec
push
loope
arpl
das
xor
ja
scas
popa
aam
test
repz
adcb
sub
nop
inc
repz
fcom
mov
shlb
add
loop
or
ja
out
outsl
inc
sub
fcoms
ds
test
decl
and
xor
xor
dec
rorb
mov
and
dec
inc
push
mov
cmpsb
out
add
xchg
sub
push
inc
xchg
pop
addb
xchg
out
test
mov
lea
mov
sbb
xchg
mov
xchg
sarl
add
sub
nop
xchg
cmp
outsb
jns
sbb
inc
ss
rorl
mov
sub
jecxz
dec
and
or
loop
jo
xchg
jmp
add
mov
xor
lret
test
mov
sub
mov
popa
cmp
add
andb
aas
int
aad
mov
push
cmpsb
out
push
jl
xchg
int
mov
inc
xchg
pop
sbb
jns
or
andl
or
sub
mov
push
ljmp
mov
push
and
jmp
sbb
pop
jbe
sbb
cli
insb
dec
push
fs
push
xchg
jno
imul
pop
dec
rcrb
lret
sub
popf
inc
cmp
cld
mov
lahf
les
in
lds
pop
xor
dec
iret
rcrb
sbbb
ja
adc
and
mov
popf
push
clc
lret
sbb
lods
push
scas
fnsave
jbe
subb
pop
sbb
mov
dec
outsl
aad
popa
insl
ss
into
jmp
es
mov
into
in
jp
daa
mov
jno
add
xorb
mov
jecxz
aaa
std
fisubrs
es
mov
popa
cltd
adc
jmp
loope
adc
aam
pusha
inc
lcall
or
add
outsl
xchg
shrl
inc
je
mov
iret
imul
jae
mov
xchg
fiaddl
fmul
sbb
rcrl
adc
test
in
and
ja
mov
ror
invd
sbb
mov
movsl
in
loope
sbb
out
and
mov
push
push
mov
xchg
mov
les
negb
cli
mov
mov
dec
add
cmp
xchg
cmp
dec
fcmovnu
inc
push
je
mov
dec
or
shl
xor
or
jmp
aam
mov
xor
push
test
adc
xchg
cltd
mov
in
jmp
xor
mov
sbb
mov
hlt
xor
into
push
adc
add
or
inc
mov
jo
xchg
movsb
repnz
sahf
lcall
mul
mov
mov
loopne
outsl
scas
das
cmpb
fidivs
les
add
xchg
push
xchg
cld
jno
mov
fcompl
insl
stos
je
add
out
leave
inc
fcompl
push
or
test
adc
push
fcmovnbe
dec
rcl
sti
clc
andl
movsb
negb
pop
xchg
inc
mov
cmp
sub
xor
dec
rorb
adc
sub
gs
jbe
jb
js
ja
lret
cmp
mov
mov
jg
test
cmp
mov
repz
cmpsl
inc
lret
push
ret
insl
movsb
shlb
dec
lods
cmove
addr16
and
in
hlt
cmp
leave
shl
loope
les
xchg
or
xchg
inc
cmc
push
mov
push
and
pushf
inc
out
sub
pop
cltd
hlt
and
int3
pusha
out
popf
sbb
jle
clc
sub
aam
cmpsb
mov
call
add
out
add
or
adc
lea
dec
cmp
loopne
mov
aad
stos
mov
and
sub
faddl
mov
cmpsl
or
adc
fcomps
in
pop
shld
movsl
xchg
mov
push
or
xchg
leave
test
dec
int
xor
xchg
jns
push
das
imul
pop
repz
sub
ret
add
sar
jo
iret
std
cmp
sub
ds
sub
pop
repnz
fs
or
or
arpl
mov
and
test
out
decl
cmp
xchg
pop
cmp
mov
daa
jle
into
xchg
cwtl
ret
push
into
mov
pop
movsl
inc
es
fcompl
in
inc
es
pushf
mov
mov
jl
jne
mov
shrl
xchg
popa
cwtl
sahf
xchg
int3
ss
popa
jbe
mov
test
jg
cmp
xchg
sahf
test
xchg
sbb
ds
loop
dec
xor
imul
and
jp
jmp
rep
cwtl
xlat
hlt
std
mov
pop
ja
add
icebp
pop
in
loope
mov
xor
jne
loop
cmpsl
sbb
std
inc
cli
test
sub
inc
lret
cld
add
in
jae
ljmp
inc
add
int
in
ret
xor
aas
faddp
dec
movsl
adc
jg
inc
mov
xchg
xchg
call
int3
ret
sbb
test
dec
xor
jb
pop
lret
lret
in
cmp
call
pop
dec
xor
rcl
inc
rclb
adc
dec
adc
aas
mov
sub
xchg
mull
test
mov
test
sub
jno
xchg
or
jne
add
orb
xor
outsl
movsb
out
push
sbb
popf
decl
xorb
pop
push
pushf
pop
dec
rorb
popa
add
dec
mov
mov
adc
fldt
imul
push
jns
add
and
sbb
sub
lods
mov
clc
pusha
jp
popa
jo
or
insb
mov
pop
popf
pop
dec
cltd
hlt
notb
pop
imul
xchg
icebp
js
stos
shrb
ja
mov
in
js
rcrb
push
sub
shll
xor
pop
cld
cld
div
mov
xor
in
insl
jl
pop
pop
lret
je
arpl
xchg
mov
adc
js
jmp
cld
xor
jmp
sbb
movsb
fcoms
push
add
call
movsb
stos
cmp
mov
adc
cmpsl
cmp
dec
push
out
mov
cmpsb
add
push
inc
mov
add
sub
int
or
stos
incl
lret
sub
xor
mov
fs
shll
ret
scas
mov
int
ljmp
imul
fmuls
ret
mov
pop
push
push
dec
mov
push
out
add
jle
mov
scas
ja
xor
sub
data16
cmpsb
addr16
shll
loopne
pop
pop
sbb
jmp
adc
pop
in
mov
popf
out
sbb
mov
xor
sub
popa
out
mov
scas
loopne
mov
xchg
es
xchg
cmpsl
lods
dec
xchg
in
dec
xor
sbb
aam
or
in
push
cltd
inc
mov
aas
inc
sub
in
cmp
and
fxch
mov
sub
push
or
into
lea
xor
cs
adc
mov
inc
mov
fisubs
out
cmc
loopne
addr16
mov
push
mov
mov
lret
les
mov
lret
loop
insl
sti
mov
xchg
jp
xor
xchg
pop
ja
cmc
test
nop
or
xor
xor
sarl
sbb
jge
aad
mov
add
mov
scas
imul
adc
push
xchg
popf
mov
cmp
adc
imul
aam
cmc
ret
stc
out
dec
inc
and
das
seta
scas
adc
dec
imull
mov
mov
data16
push
jmp
outsb
inc
jnp
cmp
imul
mov
jae
mov
add
outsb
ret
push
imul
pop
push
cmp
adc
jle
mov
xor
jno
jns
insb
hlt
roll
xor
div
jb
lods
lods
and
pop
enter
rorl
mov
popa
mov
inc
enter
mov
popf
outsl
fxtract
and
mov
push
add
mov
jmp
jmp
mov
cmpsb
imul
hlt
xchg
lcall
mov
dec
sbb
mov
jae
out
dec
shlb
and
inc
inc
lods
jge
ljmp
mov
push
lahf
hlt
stos
in
xorb
pop
fisttps
mov
sbb
pushl
inc
mov
dec
mov
outsb
mov
mov
jo
lds
es
sbb
stos
xchg
pop
inc
cltd
pop
xchg
cmp
xchg
mov
jns
rolb
faddl
and
pushf
hlt
cmpsl
xchg
inc
and
jmp
pop
inc
inc
aam
mov
mov
add
adc
imul
lahf
mov
hlt
sbb
test
pop
test
hlt
in
jge
xor
stos
iret
repz
movsb
ss
mov
ja
cmpb
shrl
inc
jae
jecxz
mov
stc
fmul
nop
pop
push
jnp
pop
add
scas
hlt
jns
or
pusha
cli
cmp
es
shrb
jp
int3
fsub
or
pushf
and
push
cwtl
sbb
lahf
dec
sbb
xchg
cmp
jbe
ds
mov
sbb
adc
pop
loopne
jne
sub
dec
sub
decb
ljmp
mov
ror
stos
cmp
arpl
add
add
or
pop
inc
or
and
jo
adc
xchg
push
push
sbb
jo
jge
push
or
mov
add
call
mov
out
push
mov
add
popf
pop
and
add
fwait
cmpsl
jns
cmp
mov
lock
cltd
or
xchg
inc
outsb
outsl
mov
jns
rclb
dec
and
jns
scas
aaa
imul
and
les
sub
xor
jnp
mov
jp
cmpsl
fisttpll
fs
jmp
in
pusha
xor
mov
mov
push
lods
in
cwtl
jo
sbb
pop
sub
mov
or
mov
rcr
mov
mov
xor
lret
in
fcomp
sahf
mov
jl
stos
sub
inc
cltd
xchg
test
lret
xor
jo
outsb
jmp
mov
xchg
adc
je
jge
idivb
icebp
filds
jg
mov
xor
shrb
data16
lock
fdivrs
hlt
cmc
jnp
in
push
cs
test
fdivs
or
adc
cmp
ror
in
jo
popf
scas
or
dec
stos
je
and
xchg
outsl
push
pop
orb
scas
inc
idivl
mov
push
pop
cmp
icebp
inc
add
mov
aam
push
push
pop
sub
jmp
cmp
and
mov
js
cmp
mov
popa
das
rcll
cmp
push
outsb
dec
mov
inc
jno
cld
xor
and
sub
fdivs
sub
std
cltd
rcl
mov
and
push
push
sbbl
mov
popa
test
repz
stos
jo
pop
mov
jb
push
adc
cmp
adc
xchg
and
sub
and
btr
add
fwait
cli
xor
sub
popa
sbb
hlt
arpl
mov
jle
stc
aad
repz
adc
rclb
arpl
mov
and
cld
xchg
adc
xor
add
cmp
pop
mov
push
lret
sub
les
addb
dec
push
negb
fs
pop
outsl
jl
hlt
jmp
pop
sbb
dec
cmp
rorb
push
aas
xlat
pop
mov
inc
test
rcr
push
bnd
push
inc
and
jae
xchg
fiaddl
adc
xchg
jecxz
fildll
sbb
or
or
jbe
outsb
sbb
lret
mov
add
sbb
in
push
inc
pusha
rcrb
pop
bnd
jl
inc
clc
jp
aad
sbb
lcall
push
or
test
pop
jbe
dec
mov
lock
pop
sub
dec
std
std
lret
stos
push
mov
dec
mov
lock
adc
insb
in
in
call
lea
mov
xchg
push
mov
jge,pt
imul
cli
ja
in
ss
in
int3
test
jge
hlt
and
push
sub
inc
out
push
jmp
xor
xor
push
cwtl
pop
arpl
mov
dec
inc
pop
mov
mov
or
jmp
cmp
nop
lds
push
movsb
add
sahf
out
loopne
push
push
mov
arpl
add
popf
sub
mov
push
xor
test
daa
ds
popa
mov
rorb
xor
dec
add
push
movsb
inc
push
decb
ds
push
sahf
or
xchg
push
shrl
jg
add
push
cmp
call
cwtl
inc
mov
dec
jecxz
push
out
dec
lea
mov
mov
addr16
fst
xchg
adc
leave
loopne
sbb
jl
in
lods
loop
xchg
icebp
or
jle
adc
les
jge
push
mov
add
push
pop
sub
lea
sub
enter
sub
push
mov
xchg
outsl
xchg
stos
or
pusha
inc
hlt
mov
cwtl
mov
dec
xor
stos
rorb
inc
fisubrs
iret
lret
jle
dec
stc
mov
jnp
sahf
ret
push
jns
cltd
call
aad
jp
insl
push
sahf
cmp
inc
lahf
repnz
cmp
mov
insl
cli
call
mov
popf
ds
or
in
repz
xchg
lods
orl
push
pop
xlat
pop
pop
mov
arpl
leave
mov
out
dec
mov
ljmp
jmp
jb
mov
cmpb
iret
jmp
pop
out
std
in
into
inc
test
das
xchg
dec
pop
fcmovne
in
sbb
stos
xchg
lods
lret
lods
popa
shrb
mov
test
enter
and
in
cld
iret
inc
jo
push
and
popa
roll
les
dec
xchg
call
dec
pushf
sub
stos
sub
cmp
out
fnstsw
jne
fwait
push
int
pop
mov
imul
repz
jns
test
sti
pop
xor
inc
sti
in
loop
mov
in
mov
hlt
outsl
aas
sbb
leave
fcomps
sbb
ljmp
int
xor
sub
mov
or
rcr
add
lock
jb
sub
lcall
cmp
sbb
call
ret
mov
push
inc
jge
in
adc
add
test
push
xchg
insl
mov
ljmp
xchg
divps
push
dec
lret
cmc
shlb
mov
fldt
add
mov
lcall
or
mov
roll
test
frstor
out
int3
push
mov
push
cli
ljmp
jne
into
ljmp
push
int
cltd
lods
or
add
scas
or
pop
loopne
push
pusha
mov
inc
sbb
lea
adc
movsl
push
pop
mov
jmp
lea
inc
loopne
xchg
cmpsb
in
sbb
adc
mov
and
xor
lods
mov
dec
lcall
lret
icebp
mov
mov
push
lea
fildll
arpl
cmp
idivb
mov
sbb
dec
adc
pop
xor
rep
outsb
cmp
into
sahf
notb
out
inc
lahf
push
mov
lret
gs
fsubrs
scas
jae
pop
or
scas
jo
push
or
call
jp
divl
push
mov
int3
jbe
insb
inc
fst
mov
add
movsl
inc
sbb
pop
repnz
lcall
mov
scas
mov
lret
and
shll
xor
fistl
in
jge
push
and
xor
add
jg
jb
and
clc
xorl
inc
and
add
push
ja
inc
xchg
rorb
lods
ret
mov
stc
mov
jmp
std
sti
sbb
sbb
mov
out
adc
xchg
dec
pop
out
adc
and
jl
sbb
sub
xchg
imul
push
push
lcall
out
out
mov
enter
inc
inc
jb
insb
fwait
push
mov
sbb
enter
sub
jno
outsl
out
movsl
lret
aaa
pop
in
add
xlat
pop
mov
pop
mov
sub
shll
shll
js
dec
ss
push
movsb
into
outsl
cmovne
call
jecxz
std
sub
xor
mov
jne
sub
test
inc
push
test
xchg
fisubrs
or
or
push
mov
sbb
test
in
sarl
daa
jle
fwait
or
adc
push
mov
test
inc
push
jecxz
jb
mov
arpl
in
jnp
sti
loop
fs
stos
fbstp
cwtl
in
xchg
cli
add
adc
adcl
pushf
sti
jmp
push
xor
push
mov
scas
cmp
fdivrl
cltd
mov
xor
dec
jb
lods
inc
out
adc
mov
add
pop
xlat
push
mov
push
divb
adc
jmp
int
imul
in
cwtl
xchg
lea
loope
adc
incl
roll
sub
add
ljmp
xchg
test
mov
inc
mov
iret
xchg
fnsave
popa
push
lods
cmp
mov
testb
arpl
pop
cmpsb
outsl
pop
insl
inc
cmp
ss
loop
jle
jl
call
out
stos
int
and
xor
dec
adc
pop
imul
or
fs
cmp
mov
cmpsb
jno
lods
popa
js
into
out
mov
pop
and
leave
outsl
push
adc
arpl
aaa
mov
fldl
xchg
rorl
jmp
std
pop
push
flds
testb
xor
sbb
dec
iret
enter
jmp
sbb
or
mov
xchg
rolb
xchg
arpl
cmpl
mull
or
pushf
mov
xor
xchg
inc
das
xor
inc
sbb
push
and
xchg
cmp
outsb
jl
mov
mov
mov
add
add
adc
jp
mov
and
cs
inc
pushf
int3
sbb
sbb
jl
and
and
jns
shrl
out
in
xor
xchg
add
sub
sub
clc
scas
popa
shrb
mov
mov
shll
or
and
cmp
dec
jmp
test
adc
aaa
add
arpl
cwtl
inc
bound
push
sbb
out
das
xor
in
inc
push
pop
mov
xchg
sub
pop
xor
push
subps
mov
mov
into
mov
es
jo
stos
mov
or
mov
xchg
lods
pop
mov
scas
jle
insb
cmp
psubusb
xchg
fbstp
cwtl
ss
mov
jp
cmp
add
shrl
popl
mov
ds
shl
insl
call
test
sub
bound
pop
iret
fs
out
ret
out
shll
and
mov
cmc
mov
aad
pop
scas
jae
dec
cmp
sbb
repz
xor
inc
enter
ret
push
and
ss
cmp
int
pop
jl
repnz
lcall
loopne
stc
stos
outsl
sub
mov
mov
into
stos
push
loopne
push
lea
sub
insl
xchg
push
push
jbe
sbb
sub
xlat
xchg
aam
pusha
mov
jae
xor
jmp
jbe
daa
mov
stos
cmp
outsl
inc
or
push
and
sbb
enter
loop
push
sub
pop
cmpsl
sbb
push
scas
mov
pop
push
pushf
mov
dec
cmp
push
aas
inc
and
xlat
loope
push
inc
cld
push
jg
push
loop
cmc
sbb
in
xor
jbe
jecxz
jp
dec
pop
cmp
or
outsb
jp
clc
adc
add
and
fsubrl
mov
cli
loopne
add
pusha
in
in
sbb
imul
ret
push
xchg
or
xor
pop
lock
xor
inc
stc
push
jmp
inc
imul
push
dec
rcrb
jnp
xchg
out
popl
xor
jle
xorl
xor
outsl
inc
or
xchg
xchg
in
dec
out
fwait
inc
lret
aas
bound
lds
or
sbb
pushl
arpl
mov
push
inc
lock
adc
insb
sub
xor
daa
push
cwtl
aas
lret
test
mov
int3
arpl
push
add
rorl
mov
outsl
icebp
pop
or
sub
daa
shll
jne
push
int3
lods
push
xlat
adc
mov
iret
int3
and
enter
popa
ret
fs
xor
fsubrl
lods
insl
pop
in
das
pop
jle
lret
jge
or
inc
and
scas
imul
lret
xchg
pop
pop
mov
sub
fildll
xchg
aad
es
outsl
mov
enter
add
fistps
loopne
in
adc
ja
int
int3
xchg
fidivs
push
ljmp
push
push
mov
mov
pop
mov
mov
mov
sbb
js
xchg
lret
lcall
xchg
pop
loop
in
in
iret
repz
pop
cmp
cld
sub
clc
adc
pop
loop
xchg
mov
cmp
mov
enter
fstpt
dec
jl
jb
rcrb
imul
and
and
mov
in
cmp
insb
mov
mov
jb
aas
cmp
aas
lcall
mov
sub
cmpsb
pop
aad
xor
push
mov
xchg
pop
inc
push
les
adc
xor
dec
mov
popf
dec
out
iret
pop
xchg
mov
cltd
loope
mov
insb
adc
jmp
inc
adc
bound
cwtl
cmc
lea
cli
mov
lret
adc
jno
sub
mov
shr
or
shl
leave
push
pop
pop
pop
jp
or
imul
xor
and
push
jge
add
sti
mov
inc
cmp
into
fadds
cmp
out
aad
and
fisubl
sub
ljmp
jmp
ss
repnz
adc
pop
pop
jne
lahf
or
sbb
fld1
lahf
mov
xor
bound
icebp
and
mov
ss
gs
jb
or
mov
push
mov
and
dec
xchg
mov
scas
jo
push
nop
pop
idivl
repz
push
cmp
jns
stc
imul
inc
pushf
xor
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
xlat
mov
iret
or
push
mov
negl
testl
mov
pop
aas
jns
popa
add
addr16
cmp
rcl
sti
into
cltd
addr16
sub
dec
inc
push
mov
xchg
add
addl
loope
lock
push
pop
icebp
push
add
loope
and
int
cwtl
add
mov
push
popa
icebp
push
xchg
and
mov
mov
mov
imul
and
and
mov
scas
je
hlt
ss
push
lahf
cmp
ret
push
repz
or
ss
pop
movsl
test
fnstcw
movsb
jge
adc
aas
xchg
mov
and
cltd
fdivl
pop
scas
pushf
std
xchg
xchg
and
mov
addr16
xlat
test
clc
cld
and
jge
mov
andl
mov
or
or
inc
add
mul
lods
lcall
jl
jb
ljmp
sub
aad
adc
adc
into
pop
jg
xor
and
lret
jne
rcl
into
sub
daa
cltd
and
jo
ficomps
popf
add
jmp
lods
div
lea
outsl
xchg
mov
add
or
leave
daa
xchg
mov
dec
cwtl
rcr
stc
stc
sub
mov
xor
mov
xchg
hlt
lcall
xor
inc
stos
scas
cmpsb
jg
dec
cmp
aaa
repnz
push
mov
lcall
aam
xor
cmp
and
mov
inc
cmp
pusha
cwtl
pop
repnz
cld
pusha
fcoms
lock
cli
and
mov
adcl
popf
cmp
cwtl
popa
das
pop
push
add
mov
jnp
pop
dec
loop
cmp
movsl
cmpsl
in
add
mov
pop
adcb
mov
aas
mov
jmp
add
pop
mov
adc
fs
aas
adc
test
add
and
pushl
call
mov
test
aad
push
cwtl
loopne
push
daa
aam
mov
rcl
inc
jecxz
push
cmp
mov
jb
pop
cli
jno
mov
cmpsl
mov
xchg
dec
pop
lea
sub
clc
cmp
dec
scas
sbb
xchg
mov
push
push
pop
shl
mov
rclb
and
sti
jae
fs
pop
and
add
into
mov
and
std
out
mov
xchg
jecxz
jbe
pushf
pop
enter
mov
jo
insl
imul
pusha
ror
add
mov
nop
subl
mov
scas
inc
or
jae
sbb
sbb
jmp
xor
add
orb
cmp
jns
add
roll
pop
push
pushf
jae
mov
mov
jle
cmc
jg
jl
sarb
mov
nop
addr16
pop
or
fildll
lcall
jl
sar
pop
sbb
pushl
xchg
mov
adcl
inc
out
sti
fsub
idivb
dec
loope
das
xor
pop
pop
mov
pop
xchg
xchg
xor
popl
and
les
lea
je
jecxz
dec
aaa
inc
pop
dec
insl
ret
add
ret
sahf
into
mov
xor
arpl
adc
loope
mov
scas
mov
cmp
pop
cld
mov
cwtl
loope
inc
adcb
mov
mov
test
xor
popa
push
push
and
fbld
test
push
mov
mov
xchg
pop
pop
jno
adc
out
gs
push
jmp
daa
push
xchg
lods
dec
aas
rorb
jecxz
clc
push
in
ror
repz
scas
pop
cmp
sbb
pop
int3
lret
sbb
push
cwtl
es
out
sub
fadds
sub
dec
mov
mov
mov
jecxz
je
lods
fimuls
subl
push
xchg
dec
pop
test
scas
divb
stos
call
jns
mov
sbb
pop
imul
and
push
ja
mov
pop
scas
lcall
lods
aaa
sahf
sbbl
dec
push
dec
jae
dec
cmpl
sbb
mov
jne
mov
adc
xchg
inc
push
push
inc
cmp
inc
gs
mov
pushf
lea
int
xlat
lods
add
pop
je
ret
jns
cli
cmpsl
push
lods
sub
cmpl
pop
add
lods
xor
lods
loopne
mov
lds
jmp
add
ljmp
push
sbb
pop
inc
sbb
shlb
pop
jne
mov
xor
push
sarl
inc
cmp
mov
loope
sbb
jmp
or
push
adc
add
gs
insb
xchg
movsb
pop
lcall
sahf
jecxz
mov
or
add
enter
add
or
out
je
cwtl
out
jp
add
nop
ret
mov
sub
icebp
fisubs
hlt
xchg
jne
xlat
or
into
pop
mov
pop
jno
pop
push
pop
lret
aaa
andl
ret
fldt
cmp
xor
jbe
xchg
lods
out
pop
and
ja
mov
in
pop
das
insb
dec
adc
cmp
adc
out
dec
dec
nop
jge
adc
movsl
jmp
test
jmp
inc
fnsave
andl
imul
repnz
sbb
out
jl
and
jb
sub
xchg
lret
push
sub
lock
adc
ds
in
arpl
test
xchg
mov
xor
loop
mov
and
dec
les
push
fsts
xor
insl
das
jo
mov
sbb
sbb
negl
mov
jmp
or
pop
xor
lods
inc
lock
jo
lods
out
sahf
and
lods
mov
outsb
sbb
pop
mov
shrl
xchg
inc
fsubrs
mov
mov
mov
jp
sub
enter
nop
dec
jns
or
jbe
addr16
mov
mov
orb
negb
dec
push
and
repz
stos
subb
sbb
ss
dec
fisttps
mov
jle
xor
xor
icebp
fs
fbstp
out
enter
pop
inc
into
sbb
pop
les
pusha
dec
xchg
out
icebp
sub
leave
scas
aad
stc
dec
lcall
cmp
xchg
xor
cmp
adc
ret
sub
inc
cmp
mov
ficoml
adc
mov
ret
cld
test
push
add
cltd
lahf
hlt
mov
jo
outsb
andl
mov
repz
sahf
pop
mov
test
and
sub
in
cmpsb
ret
jb
adc
inc
sbb
dec
push
aas
aaa
loop
and
mov
jnp
xor
cmc
fstps
adc
ss
and
ret
mov
inc
add
mov
lods
enter
add
movsb
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
mov
outsb
arpl
xchg
and
xchg
inc
mov
adc
xchg
sbbb
jnp
cmpsb
arpl
enter
mov
dec
jne
mov
mov
xor
rcrb
lret
adc
sbb
inc
stos
cli
adc
fildl
cs
popl
mov
in
xchg
imul
fcmovnb
cmp
xor
push
mov
cmp
sub
jp
mov
js
lret
lock
mov
or
mov
jmp
mov
movsl
dec
xor
jmp
mov
or
pushf
xchg
add
loopne
jae
xor
call
loop
dec
sbb
cmpsl
adc
ficoml
sub
loop
push
icebp
data16
sub
es
mov
out
jns
jmp
sub
dec
data16
and
push
test
cmp
sub
mov
adc
pop
leave
daa
pop
test
js
xchg
stos
stos
adc
frstor
movsl
andl
mov
jo
cmova
stos
mov
ja
pop
sub
int
cld
scas
or
cmc
xor
hlt
cmp
ja
fs
push
cmp
je
leave
dec
adc
pop
hlt
push
icebp
jge
cli
cmp
fldl
mov
sahf
or
mov
sbb
fsubs
cmpsb
mov
fisttps
test
mov
lret
call
mov
or
mov
dec
mov
mov
mov
push
insb
push
xor
inc
scas
add
mov
es
push
add
ror
push
dec
aas
lahf
pop
mov
ds
popa
fcomip
mov
shlb
ficompl
insb
popf
out
xor
adc
movsl
into
and
push
scas
adc
xor
pop
and
out
adc
xor
push
test
pop
stos
inc
cwtl
aam
or
out
or
lods
scas
xchg
push
pop
mov
iret
sbb
push
adc
mov
pop
shrb
mov
adc
testb
mov
aad
adc
and
mov
pushf
decb
sbb
push
insl
imul
inc
cmp
sahf
push
dec
push
mov
cmc
jbe
ret
jecxz
lods
inc
imul
sub
push
mov
movsl
jmp
cmc
sti
add
push
les
mov
push
push
fcomp
out
jmp
mov
jg
pop
sbb
or
or
push
mov
jg
rorb
pop
mov
pop
in
movsl
in
mov
cmp
adc
fucomi
jne
add
lods
aam
adc
adc
out
push
xchg
mov
minps
mov
das
lret
sahf
jmp
dec
orl
lcall
cmpl
xchg
or
repnz
lahf
push
neg
xchg
imul
or
sbb
test
fwait
and
jne
xor
jle
aas
jge
xchg
push
insl
lret
mov
daa
pop
push
xor
sub
test
mov
les
stc
je
out
enter
mov
adc
dec
call
inc
imul
cs
or
push
cmp
pop
mov
cmp
push
jp
insl
repnz
dec
mov
mov
mov
jae
xor
cmc
fwait
and
cmp
fsubr
inc
pop
into
or
repz
fsubrp
jl
out
sub
stos
pop
dec
mov
movsl
mov
xlat
fistpll
repz
mov
lret
mov
mov
test
jg
push
push
sub
xchg
mov
je
xor
lods
lock
loope
dec
inc
mov
cmp
add
inc
scas
pop
dec
ret
push
push
xchg
or
push
lret
arpl
ret
shlb
inc
inc
mov
and
ja
addr16
cmpsl
push
pop
test
push
or
cmpsb
mov
out
sub
or
je
sbb
and
or
loope
clc
movsl
fwait
shll
scas
insl
fcompp
cli
mov
fsub
cmc
pmuludq
and
imul
lods
pusha
mov
sbb
repnz
inc
aaa
fadds
sub
mov
add
bnd
mov
push
cmp
push
push
mov
and
adc
orb
add
dec
into
cmp
lods
stos
mov
mov
xchg
add
pop
mov
mov
pop
int
mov
jnp
les
fsubl
sub
adc
mov
xchg
cmp
sbb
dec
pop
fcomps
shrb
jp
imul
scas
mov
enter
int
xchg
cmp
and
mov
pop
lret
addr16
and
mov
add
or
inc
cs
lret
jmp
mov
pusha
sub
cld
push
dec
push
mov
les
dec
outsl
adc
sbbb
fsubrl
loopne
and
mov
sub
fwait
and
cld
daa
jno
ljmp
jp
adc
mov
dec
dec
lcall
or
ds
mov
and
mov
into
aad
xor
hlt
lret
jns
imul
ffree
mov
jg
jbe
daa
mov
pop
xchg
push
aas
out
subb
scas
mov
loope
xchg
jns
mov
in
pop
inc
mov
sti
arpl
stos
lret
push
or
js
adc
inc
mov
and
pop
lods
int3
and
fsts
or
repz
and
ret
je
clc
pop
dec
cmc
lods
push
and
adc
scas
mov
hlt
xchg
cmp
nop
pop
xlat
je
lea
out
mov
xor
push
add
cmpsb
movsb
push
add
and
push
dec
push
add
test
or
shl
sbbl
inc
sub
add
inc
xchg
xchg
inc
xor
cld
testl
push
lods
or
mov
pop
inc
mov
mov
dec
pop
jle
dec
lea
call
adc
dec
push
mov
add
jb
dec
sbb
sub
roll
sub
movsl
ret
mov
bound
outsb
xchg
aaa
cmpsl
clc
or
addb
in
mov
pushf
in
jo
xor
pop
jnp
add
mov
js
ljmp
out
add
in
pop
arpl
cmpsl
mov
add
jle
aas
push
and
jnp
sub
ljmp
lds
sub
sbb
fdiv
rcrb
daa
sahf
in
xor
xor
fbld
dec
fdivrl
cwtl
cmove
sub
push
adc
les
inc
xor
aam
in
sub
pop
cmpsb
and
or
fcmovbe
clc
or
cmpsb
int
pushl
xor
inc
jae
iret
sbb
orl
and
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
jmp
fnsave
push
adc
adcb
adc
xchg
lock
jb
bound
or
dec
fwait
jmp
mov
test
xchg
aam
jl
ljmp
jae
xor
idivl
int3
dec
pop
pop
xor
sbb
lahf
xchg
orl
xor
cmp
and
imul
out
sbb
or
jne
push
add
das
sahf
xchg
cmp
bound
jp
mov
int
out
js
xchg
add
call
popa
push
add
neg
repz
push
popf
xor
xor
enter
push
mov
in
out
cmp
mov
mov
lock
iret
ds
adc
les
dec
pop
push
xchg
jns
les
mov
inc
incl
add
sbb
push
nop
mov
inc
pushf
stos
orb
mov
lock
in
cld
loope
jmp
mov
bound
push
push
xor
in
jo
xor
stos
jl
mov
inc
pmuludq
cmp
shll
icebp
cld
stos
and
jne
and
subb
in
test
inc
rclb
xchg
mov
xchg
cmp
jno
jle
les
add
ds
push
xlat
lods
mov
jmp
cmp
cmc
push
fsts
xchg
outsb
xor
lock
call
into
sti
out
lock
pop
xchg
ljmp
mov
jae
fwait
lock
push
mov
fistpl
lret
inc
dec
cli
xchg
xchg
negb
inc
mov
push
jno
sbb
xchg
ss
push
and
xor
xchg
enter
mov
mov
int3
sbb
xchg
mov
add
ljmp
cmp
repnz
cmpsl
xchg
push
push
mov
xor
int3
push
mov
and
cld
dec
or
and
out
jle
pushf
out
xor
or
icebp
push
mov
es
mov
jae
or
lcall
cs
insb
xor
std
hlt
je
dec
pop
or
arpl
out
lcall
mov
fisttpl
mov
mov
and
aas
dec
push
cld
mov
ja
add
stos
in
or
testl
push
jnp
cmp
lcall
cmp
cmpsl
adc
insb
sub
pop
mov
adc
movsb
movsl
mov
inc
xlat
and
int
jg
mov
push
or
test
push
stc
push
add
push
aad
outsl
lahf
push
sub
js
fdivrs
dec
adc
std
inc
mov
jae
adc
ljmp
andl
xchg
dec
dec
add
fildl
jno
jns
imulb
cmp
mov
push
sahf
pop
inc
ret
adc
mov
xchg
cmpsb
or
or
popf
repnz
and
mov
and
push
push
fs
fcoml
cmpsb
sub
fiadds
dec
push
push
adc
add
xor
xor
scas
daa
andb
pusha
push
jge
hlt
in
jbe
push
lock
sbb
cltd
jae
mov
scas
test
pop
cmp
mov
ljmp
int3
movsl
call
int3
dec
lret
pushf
lds
add
or
or
mov
lahf
jb
pop
xor
cmp
xchg
aad
test
cltd
push
or
adc
loop
outsb
ljmp
cmp
jbe
mov
fcmovnbe
or
jno
imul
inc
dec
xor
notb
jns
mov
dec
cmpb
sarb
pop
or
or
jle
cwtl
fcoml
pop
sbb
movsb
pushf
dec
repnz
inc
push
pop
sub
out
test
loopne
inc
mov
cwtl
aaa
test
mov
push
stc
call
xchg
fs
call
inc
xor
sbb
or
enter
stc
xor
cld
dec
shl
out
ret
sahf
add
sbb
out
adc
mov
or
xchg
xchg
pop
out
insl
clc
jmp
popa
push
movsl
ss
push
mov
jo
outsl
cwtl
addr16
jo
dec
dec
pop
mov
int
call
inc
or
cmpsl
inc
xor
adc
pop
sub
call
pop
sbb
cwtl
xor
mov
pusha
dec
outsl
fisttps
jp
data16
mov
sbb
inc
cmp
add
fs
fwait
movsb
outsl
jle
and
scas
mov
jl
dec
imul
inc
add
aad
sub
in
ss
mov
fdivp
mov
and
pop
mov
xchg
sbb
jnp
cld
push
dec
push
mov
cmp
inc
test
mov
into
jmp
iret
or
ret
sub
cld
or
inc
mov
sub
in
jnp
aaa
and
mov
movsl
jge
pop
shll
movsb
lcall
or
mov
fsubl
out
cltd
out
test
push
fbld
sbb
pop
jle
scas
imul
imul
movsl
dec
icebp
mov
nop
adc
ficoml
xchg
loop
dec
incl
or
xor
ljmp
and
orl
shrl
add
pop
outsl
push
sbb
loop
addr16
stos
sbbl
std
dec
push
push
cs
mov
push
sbb
out
in
dec
mov
mov
cmc
mov
mov
push
dec
jbe
loope
repz
iret
test
out
sarb
imul
loop
add
cltd
cmp
bound
push
lahf
jmp
hlt
mov
xor
ja
lods
mov
imul
fdiv
test
xchg
insb
push
scas
sbb
jno
push
jmp
sub
and
add
add
fidivrs
inc
mov
out
lock
std
mov
add
lret
lret
mov
jmp
fisubs
cs
mov
jns
add
push
addr16
xchg
mov
std
icebp
pop
adc
jb
stos
xchg
pop
int
cmp
cmp
aaa
pop
dec
repnz
mov
mov
xchg
ficompl
ret
in
mov
xchg
repz
sub
cld
push
mov
xchg
popw
lret
cmp
lods
add
pop
test
out
push
ret
pop
mov
push
cmp
push
mov
jb
fs
adc
lds
ret
daa
sbb
enter
fdivs
jnp
ret
push
cs
call
cmp
jle
jle
push
add
mov
lcall
dec
pop
nop
sbb
fwait
push
cmp
adc
cmp
add
inc
ret
hlt
jae
out
clc
mov
in
push
insl
sahf
inc
shl
cmp
sti
mov
inc
outsb
out
scas
daa
and
scas
rorb
ljmp
ljmp
sub
adc
cmp
xor
mov
mov
shl
shl
mov
mov
jmp
test
fcoms
cmp
or
ja
jp
bound
loopne
and
dec
shlb
push
add
dec
sahf
scas
cmpsb
and
mov
mov
popl
adc
sahf
lds
mov
fisubs
xor
sub
lock
lret
cltd
dec
dec
shll
xchg
testl
negb
rorl
stc
pop
mov
inc
push
in
mov
and
gs
arpl
push
icebp
divb
in
xchg
mov
add
pushf
xor
pop
xor
sub
xlat
mov
push
adc
cmp
pop
lods
aas
add
lea
repz
rol
jmp
in
sbb
xor
dec
pop
pop
mov
test
fistl
xchg
mov
lret
cmp
xchg
lds
stc
ja
mov
lods
dec
push
cmc
out
xchg
ret
and
mov
aad
roll
fucomi
out
cmp
mov
sub
in
dec
movb
fsubl
jl
je
or
insl
mov
or
dec
mov
pusha
pop
cmp
and
sub
cmp
sub
push
xchg
mov
movsl
test
insl
ret
push
jge
mov
insl
and
pusha
or
iret
push
js
iret
nop
fs
insb
adcl
loopne
push
out
fistpll
lret
in
xchg
inc
xor
dec
xlat
dec
inc
adc
mov
fstl
aaa
sbb
or
xchg
rcll
pop
andl
pusha
orb
aam
push
sahf
and
je
jecxz
imul
jmp
rcrl
push
lahf
push
lock
pop
xchg
adc
fnstsw
lea
decl
popf
push
sbb
ficoms
xor
sbb
xor
or
lods
fs
repnz
mov
data16
and
xchg
addr16
in
and
dec
and
dec
jne
pop
in
mov
sub
push
mov
in
pop
addl
pop
mov
jno
sub
jle
aaa
inc
aam
lret
dec
dec
ss
pop
xor
fwait
or
push
sub
adc
daa
jbe
data16
movsl
sub
loope
loopne
std
jns
mov
xchg
pusha
cwtl
cmc
adc
cmpsb
adc
bound
pushf
std
cmc
cmpb
js
sbb
jnp
adc
mov
fwait
out
and
sbb
stos
nop
pop
rclb
jecxz
add
ss
inc
mov
imulb
cmp
adc
xor
cltd
ss
mov
ss
andl
or
fmul
fst
pop
out
mov
and
in
inc
test
je
js
add
in
cld
jae
daa
xor
xchg
dec
imul
aaa
mov
sti
fbld
lock
cmp
sbb
sub
imul
push
movsb
insl
fistpll
mov
jb
pop
xchg
iret
addr16
mov
ds
aaa
pop
pop
incl
dec
and
loope
lea
iret
adc
outsb
outsb
mov
imul
sti
xchg
xchg
xchg
test
push
push
mov
pushf
sti
pop
adc
jno
jno
cmpsl
cmp
cmp
adc
int
sub
xchg
mov
xor
mov
fs
adc
dec
inc
push
cmpsl
mov
sbb
push
jle
sbb
in
sub
das
inc
rcrl
xor
pop
out
insl
stc
jmp
push
mov
fdivrs
jbe
pop
fnsave
sbb
fiaddl
fistps
lock
imul
pop
mov
xchg
dec
pop
mov
pop
mov
cmovo
imul
xchg
inc
out
push
lods
jae
push
and
and
dec
push
mov
ljmp
sub
xor
adc
mov
cmp
mov
call
scas
mov
inc
mov
std
sbb
daa
and
cmp
mov
mov
push
jle
ljmp
mov
outsl
xor
insl
adc
cli
jl
test
es
sti
push
push
loop
call
add
xchg
inc
loopne
cli
addr16
cmpsl
sbb
mov
ds
repnz
lods
fstl
insl
out
jmp
push
jp
add
jbe
jns
in
sbb
xor
jno
fldt
call
sbb
les
xorl
jl
in
fdivrs
ljmp
inc
pop
int3
loop
cs
pop
loope
pop
es
sub
mov
push
inc
cmp
dec
push
or
outsb
add
dec
pop
into
lcall
cmp
mov
test
and
push
add
popf
out
jbe
dec
scas
lret
pop
cmc
insb
jne
mov
mov
cwtl
cmp
lret
aad
sbb
push
outsl
sbbb
in
in
adc
adc
adcl
jnp
aad
lea
sbb
inc
lods
or
push
pop
loop
inc
fistl
inc
dec
xchg
lahf
ret
in
cmp
test
cmc
or
adc
add
dec
adc
ja
mov
cmpsl
cmpsl
int3
repnz
mov
and
cmc
arpl
add
jge
inc
daa
loope
roll
push
sbb
xchg
nop
mov
lret
push
mov
xchg
mov
lods
ficompl
dec
sbb
lret
cmp
enter
jnp
lds
out
scas
fs
or
mov
jg
cmc
push
ss
xor
add
out
pop
mov
leave
xor
shlb
inc
sbb
inc
test
push
loop
mov
rcll
sub
mov
in
repz
das
repz
pop
mov
push
push
xlat
or
pop
roll
dec
xchg
push
mov
jmp
andl
insb
mull
cld
lea
fcmovu
in
mov
and
nop
or
jb
push
popf
push
mov
push
inc
cmp
scas
testb
push
xchg
pop
pop
lea
lock
stc
sub
jg
ss
lds
repz
aam
fstpt
hlt
movsb
mov
sbb
mov
testb
xor
stos
or
push
and
out
push
sbb
aam
dec
fisttpl
arpl
movsb
or
jp
add
inc
xor
mov
vpperm
and
outsb
imul
cmp
mov
xor
sub
pop
cltd
xchg
or
or
mov
movsl
notl
imul
mov
adc
xchg
in
jp
addr16
pop
outsb
jns
dec
add
dec
movsl
xchg
fwait
sbb
cmc
mov
lret
mov
stos
stc
popa
fcmovnb
or
aas
fcomps
and
jge
ss
outsl
or
adcb
mov
aaa
pop
push
js
movsl
loop
cmpw
push
call
ljmp
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
jmp
sti
icebp
lods
mov
outsb
fs
stos
push
psrad
setb
scas
lret
adc
repz
loop
out
xchg
sbb
fucomp
shl
jge
out
fbstp
pop
addb
sysenter
jbe
pop
push
iret
mov
push
cmp
jmp
fistpll
jmp
sti
out
mov
cmpsb
inc
xor
imul
xor
pop
mov
jle
and
loope
fidivl
out
sti
add
cs
or
jl
jae
sub
cmp
add
or
mov
faddl
stc
or
sub
add
xchg
outsb
orb
clc
lods
jg
xchg
jecxz
xor
push
and
cwtl
test
cmpsb
cmpl
adc
or
in
xchg
cltd
std
xchg
xor
call
xchg
mov
add
lods
jae
bound
mov
popf
add
add
add
cmpsb
xchg
xor
bswap
inc
jle
or
into
cmp
jo
mov
xorl
push
jmp
bnd
das
leave
sub
clc
inc
popf
scas
aas
dec
xchg
jno
hlt
stos
dec
jl
fs
faddl
pop
xchg
leave
mov
xchg
xchg
pop
inc
test
loope
mov
and
xor
and
test
xchg
cmp
testb
test
fidivl
ds
movsl
push
out
cmpsl
sub
or
mov
ret
iret
mov
pop
adc
in
hlt
scas
mov
lea
ja
es
std
outsb
push
addr16
or
fidivl
push
jmp
in
repnz
ss
add
and
pusha
out
push
or
mov
pop
int3
pop
xor
jp
sbb
adcl
sbb
je
inc
push
add
cli
dec
movsb
into
les
dec
cmp
loope
pop
popa
lahf
sbbb
sbb
or
sbb
mov
mov
sar
nop
jp
outsl
jle
stos
cmp
lods
xor
inc
cs
imul
out
and
js
ljmp
dec
or
repz
sub
adc
fidivrl
push
call
cld
or
lcall
pop
pushf
adc
xchg
or
test
and
push
xchg
ficompl
repnz
push
stos
clc
dec
bound
mov
adc
pushf
movups
adc
notl
addl
sub
lret
jmp
insl
lahf
call
push
fisubrl
ja
adc
add
adc
outsb
and
ja
mov
gs
int
and
in
adc
jno
test
jns
data16
test
inc
xlat
or
cltd
sbb
push
stos
hlt
jno
push
iret
lock
xchg
xchg
enter
imul
jl
inc
lcall
mov
je
and
stc
jge
movswl
add
iret
adc
adc
or
ffreep
lock
jmp
pop
mov
add
outsb
popa
pop
out
cwtl
push
orl
mov
movsb
in
adc
std
lahf
and
arpl
mov
lods
lods
xor
int3
cwtl
mov
add
dec
push
sbb
lea
lods
sbb
int3
mov
mov
clc
cs
dec
mov
cltd
rcrb
sbb
hlt
das
push
mov
les
outsl
orl
mov
clc
pop
icebp
rorb
ret
enter
adc
pop
popf
push
dec
xchg
pop
mov
pop
addl
mov
nop
xor
cmpl
lock
push
sahf
inc
cmpl
xchg
mov
sbbl
ret
cmp
pop
jae
and
fldenv
gs
repnz
push
movsb
xchg
pop
xor
xor
ss
dec
sbb
xor
ss
sti
lods
nop
jle
inc
rorl
jge
orb
sahf
ljmp
sbb
mov
test
add
adc
push
ja
cmc
jb
mov
xchg
xor
test
cld
add
imul
outsl
rclb
adc
icebp
xchg
loop
adc
mov
and
sub
mov
daa
std
ss
mov
shrl
add
mov
add
mov
sub
add
ja
xchg
movsb
hlt
subl
cmp
shrb
cmp
inc
int3
mov
push
dec
add
ds
inc
dec
xlat
scas
mov
add
inc
and
jae
lahf
es
cmc
out
enter
mov
push
les
call
add
push
sbb
cmp
fninit
shrb
pop
inc
ljmp
repnz
add
push
adc
push
add
arpl
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
cmp
jae
xorl
shrd
movl
shr
ret
adcl
mov
xorl
xor
sbbl
and
shr
ret
xor
xor
ret
push
mov
sub
cmpl
movl
movl
jmp
movl
notl
jle
push
pushl
call
notl
andl
andl
sbbl
adcl
movl
mov
incl
mov
adcl
movl
mov
movb
sbbl
movb
and
movb
adc
movzbl
andl
mov
sbbl
sub
addl
imul
movzbl
andl
push
and
andl
mov
addl
movb
movb
andl
movb
movb
negl
mov
mov
negl
add
adcl
imul
sbbl
mov
subl
or
mov
sbbl
and
mov
movl
cmp
ja
mov
mov
mov
or
mov
mov
cmpl
not
mov
movl
jmp
movl
jb
push
push
call
dec
xor
add
mov
add
adc
xorl
xor
adc
mov
movzwl
addl
movzwl
sbbl
shr
notl
or
sub
mov
subl
movb
notl
movb
mov
orl
mov
xor
xorl
add
mov
or
mov
movzbl
and
cltd
sub
push
cmpl
not
mov
mov
jmp
mov
je
push
push
call
mov
adc
xor
neg
adcl
or
adc
pop
adcl
idiv
mov
addl
movb
addl
movb
xorl
mov
mov
negl
add
movzbl
movzbl
xorl
cltd
idiv
mov
movl
cmp
jae
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
idiv
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
sub
mov
and
xor
imul
mov
push
sub
push
movl
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
or
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
and
add
cmp
jb
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
lea
add
movl
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
xor
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
add
imul
xor
mov
div
mov
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
xor
and
mov
add
mov
add
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
push
push
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
push
mov
mov
mov
push
push
push
call
push
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
or
xor
mov
xor
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
and
push
cmpl
not
mov
not
not
jmp
movl
movzbl
je
push
pushl
pushl
push
pushl
call
sbb
adc
adc
subl
add
push
adc
mov
cmpl
mov
mov
mov
jmp
mov
movl
ja
pushl
push
pushl
push
push
call
sbb
adc
xor
mov
mov
sub
sub
xor
add
xor
or
sub
and
addl
addl
sbb
mov
shrd
shr
cmpl
movl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
push
pushl
call
addl
orl
mov
add
mov
add
mov
sub
mov
mov
mov
sub
sub
xor
movzwl
sbb
mov
neg
xor
sub
or
mov
mov
cmpl
mov
mov
jmp
movl
mov
jne
call
dec
addl
xor
sub
inc
andl
mov
mov
adc
shl
cmpl
mov
movl
movl
jmp
mov
movzbl
jle
push
push
call
mov
adc
mov
adc
xor
inc
xor
or
or
notl
add
movl
mov
cmpl
mov
mov
jmp
mov
jge
pushl
push
pushl
pushl
call
andl
or
add
xor
or
shrd
xor
orl
shr
xorl
mov
and
mov
xor
or
or
cmpl
not
mov
mov
movzwl
jmp
mov
mov
jge
push
pushl
call
movzwl
xor
movzwl
add
mov
or
mov
sub
or
addl
xor
mov
mov
and
mov
mov
mov
mov
inc
mov
xor
mov
mov
mov
mov
cmpl
mov
movl
jmp
movl
movl
jle
pushl
push
pushl
pushl
call
not
andl
adc
sub
xor
shl
orl
xor
and
shld
sub
shl
inc
mov
orl
xor
addl
xor
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
cmpl
movl
movl
not
jmp
mov
movzwl
jle
push
push
push
call
sub
adc
or
sbb
adcl
sbbl
xor
adc
mov
mov
mov
and
mov
xor
shld
sbbl
shl
xor
xor
cmp
jne
movl
cmp
movl
je
cmpl
mov
movl
jmp
mov
not
jbe
push
pushl
push
pushl
call
xor
mov
add
adc
and
adc
not
mov
subl
mov
cmpl
mov
movl
mov
jmp
movl
mov
jg
pushl
pushl
pushl
call
subl
mov
add
add
add
xor
shl
mov
xorl
xor
shr
adcl
or
mov
mov
movzwl
or
mov
mov
and
mov
mov
cmpl
movl
movl
movl
jmp
movl
ja
pushl
push
call
and
orl
subl
subl
sbbl
orl
and
cmpl
movl
movl
movl
movl
jmp
movl
je
push
call
sbbl
movl
orl
andl
adcl
sbbl
xor
subl
cmpl
movl
movl
movl
jmp
movl
not
jb
pushl
pushl
call
xorl
sbb
add
addl
subl
movl
and
push
pop
sbbl
sub
mov
add
mov
lea
mov
mov
mov
sub
and
mov
xor
or
xor
mov
xorl
xor
xorl
shr
subl
shl
or
add
mov
cmpl
movl
mov
jmp
mov
mov
jae
push
call
add
sbb
or
movl
and
movl
add
mov
mov
andl
xor
movl
shr
shl
adcl
or
push
orl
lea
adcl
push
adcl
lea
push
call
cmpl
mov
movl
jmp
movzbl
jbe
push
push
pushl
pushl
pushl
pushl
call
orl
addl
movzwl
sub
mov
movzwl
sub
mov
sub
movl
sub
mov
mov
subl
xor
subl
shr
mov
xor
shl
or
cmpl
mov
mov
mov
jmp
movl
mov
jne
call
add
sub
add
adcl
mov
or
movzwl
or
push
lea
sub
push
or
mov
mov
sbb
shrd
sbb
shr
xor
add
xor
or
sub
imul
mov
notl
mov
xor
addl
xor
or
xorl
lea
adcl
push
adcl
shl
subl
call
mov
mov
xor
shl
cmpl
mov
movl
mov
jmp
movl
jne
push
push
call
xorl
xorl
add
orl
and
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
push
call
mov
mov
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
mov
rol
mov
xor
mov
cmp
je
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
sub
mov
adcl
or
movl
mov
jne
sub
mov
adcl
mul
ret
push
mul
cmpl
movzbl
movl
push
pop
jmp
mov
mov
je
push
push
pushl
push
push
push
pushl
call
mov
sbb
mov
not
movzwl
adc
mov
mov
add
mov
xorl
sbb
mov
adc
mov
xorl
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
push
mov
and
sub
push
push
push
mov
pushl
call
test
jg
movl
movl
movl
push
dec
movl
mov
xor
mov
andl
push
notl
push
orl
push
call
sbbl
push
andl
push
and
and
push
subl
push
andl
call
cmpl
mov
movzwl
notl
movl
jmp
movl
jbe
push
push
pushl
call
neg
subl
dec
sbb
subl
xor
or
mov
sub
or
mov
mov
xor
or
cmpl
movl
not
jmp
mov
jg
push
push
push
push
call
sbbl
xor
movzwl
and
orl
xor
mov
xor
or
mov
movl
movl
or
movl
sbb
movl
mov
xor
or
sub
add
movl
cmpl
mov
mov
jmp
mov
movl
jg
push
push
pushl
call
dec
xor
inc
adc
movl
xor
add
xor
mov
adcl
movl
cmpl
mov
movl
jmp
mov
mov
jg
push
push
call
addl
mov
sbb
sbbl
mov
mov
sub
xor
xor
or
xor
movl
or
sub
sbb
mov
cmpl
mov
movl
notl
jmp
mov
movzbl
jg
pushl
call
xor
movzbl
sub
mov
mov
sub
add
adc
xor
mov
mov
mov
andl
or
or
mov
or
mov
sub
mov
mov
sbb
or
mov
xor
subl
xor
addl
and
adcl
and
cmp
movl
jne
cmp
jne
movl
decl
movl
xor
movl
adc
movl
xor
or
mov
sub
xor
movl
mov
and
mov
sub
adc
mov
orl
imul
subl
and
notl
imul
mov
xorl
pushl
or
imul
adc
xor
mov
movl
div
mov
xor
cmpl
movl
notl
mov
jmp
movl
je
pushl
pushl
push
pushl
push
call
sbb
adcl
or
mov
sbb
mov
add
cmpl
mov
mov
not
jmp
mov
jb
pushl
push
call
neg
mov
mov
xor
sbb
sub
sbb
cmpl
movzwl
mov
movl
jmp
movl
jl
pushl
call
sbb
or
addl
and
sub
xor
add
mov
sub
dec
mov
sbbl
sub
addl
or
xor
adcl
pushl
pushl
addl
call
addl
pushl
call
movl
cmpl
mov
movl
not
jmp
mov
mov
jge
pushl
call
and
add
adc
xor
movl
adc
movl
xorl
movl
movl
movl
mov
mov
xor
mov
mov
subl
add
movzwl
mov
adc
add
mov
add
adc
and
xorl
mov
orl
and
mov
movl
movl
subl
movl
orl
movl
dec
cmp
jne
and
movl
mov
xorl
mov
subl
movl
mov
subl
call
andl
lea
mov
cmpl
movl
movzbl
jmp
movl
jb
push
call
adc
sub
and
andl
mov
xor
add
sub
imul
xor
sub
lea
mov
sub
mov
sbb
mov
add
mov
mov
decl
xor
shl
and
shr
movl
or
mov
or
mov
mov
cmpl
movl
mov
movl
jmp
mov
movl
ja
pushl
push
push
pushl
call
and
xorl
add
sub
addl
addl
cmpl
not
mov
jmp
not
jae
push
call
adc
subl
and
xor
add
adc
and
mov
cmpl
not
mov
jmp
movl
movl
jbe
push
pushl
call
or
andl
and
sub
adc
mov
and
mov
mov
mov
shrd
shr
and
mov
not
mov
movl
xor
xor
andl
or
mov
sbb
mov
mov
orl
push
addl
pushl
subl
lea
andl
push
adcl
shl
orl
call
addl
lea
addl
push
mov
mov
sbbl
lea
orl
push
mov
orl
lea
adcl
mov
adcl
mov
mov
push
call
subl
push
andl
push
pushl
xorl
call
andl
mov
or
mov
and
mov
cmpl
mov
movl
mov
jmp
mov
jg
push
pushl
push
push
push
call
sbb
xor
or
mov
adc
xor
adc
mov
shr
not
shl
or
sub
mov
or
xor
mov
notl
lea
xor
mov
lea
movzbl
or
mov
cmpl
mov
movl
movl
mov
jmp
movl
movl
je
push
call
or
add
mov
or
mov
xor
inc
add
not
mov
mov
and
mov
cmpl
mov
mov
mov
jmp
movl
mov
jne
push
call
or
sbb
addl
add
orl
mov
mov
sub
sub
movzwl
sbb
mov
and
sub
cmpl
movzbl
mov
movl
jmp
movl
jae
pushl
call
add
add
movzbl
add
add
movl
add
lea
andl
xor
cmpl
mov
mov
movl
jmp
mov
jg
push
pushl
pushl
push
push
call
or
adc
xor
mov
adc
mov
movl
movl
movl
cmpl
movl
not
jmp
movl
not
jle
push
call
subl
not
orl
and
and
mov
or
mov
movl
mov
mov
add
mov
not
mov
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
shr
or
or
mov
mov
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
cmpl
movl
mov
movl
jmp
movl
jbe
push
pushl
push
pushl
push
call
adcl
sbb
sub
adc
mov
xor
mov
mov
mov
sub
xor
movl
cmpl
mov
movl
movl
jmp
mov
mov
jle
push
push
pushl
pushl
call
adcl
notl
dec
add
subl
sbb
not
sub
movl
mov
subl
mov
xor
xor
mov
xor
and
adc
mov
sub
xor
or
and
cmpl
mov
mov
not
jmp
mov
jl
push
push
call
inc
xorl
and
sub
sub
add
mov
add
xor
mov
or
movl
movl
mov
sbb
mov
add
xor
sub
adcl
mov
or
imul
adc
xor
mov
or
div
subl
sub
and
mov
movl
sub
movl
movl
mov
mov
adc
movl
cmpl
movl
mov
movzbl
jmp
mov
movzbl
jg
pushl
push
push
push
call
or
xor
or
or
mov
sub
add
inc
movl
mov
sbb
mov
movl
movl
mov
xor
mov
imul
adc
add
xorl
and
adc
sub
cmpl
mov
movl
mov
mov
jmp
mov
je
pushl
push
push
call
add
adc
neg
and
not
mov
sub
or
mov
mov
cmpl
mov
movl
mov
movl
jmp
movl
jne
push
pushl
push
call
inc
or
dec
sub
adc
adc
or
add
sub
add
mov
xor
adcl
div
not
mov
sub
and
mov
add
addl
mov
cmpl
mov
mov
mov
jmp
mov
mov
jle
push
push
call
add
add
sbbl
subl
xorl
movl
movl
dec
movl
cmpl
movzbl
mov
jmp
mov
jne
pushl
pushl
pushl
push
call
sbb
orl
movzwl
adc
add
mov
mov
add
mov
xor
add
mov
andl
xor
movl
div
add
and
mov
or
cmpl
movl
mov
jmp
movl
movl
jg
push
push
push
call
mov
sbb
mov
add
mov
movzbl
sub
subl
decl
adc
cmpl
not
mov
jmp
mov
movl
jae
push
push
push
push
call
xor
sbbl
mov
sbb
mov
inc
mov
mov
sub
sbbl
cmpl
mov
movl
mov
jmp
mov
movl
jg
pushl
call
mov
adc
mov
mov
adc
mov
mov
xor
xor
or
mov
sub
sub
adcl
mov
and
movl
movl
movl
and
movl
mov
sub
mov
orl
xor
sbb
xor
push
xor
pop
orl
div
mov
andl
xor
div
mov
or
sub
xor
mov
xor
movl
inc
mov
movzwl
sbb
mov
xor
div
imul
adcl
xor
xor
sub
imul
xor
dec
mov
adc
movl
cmpl
movzwl
movl
mov
jmp
movl
mov
jg
pushl
push
pushl
pushl
pushl
pushl
push
push
pushl
push
push
call
adc
xor
mov
adc
mov
mov
xor
mov
xor
or
xor
mov
movzwl
sub
or
or
movl
movl
cmpl
mov
movl
movzwl
jmp
mov
movl
ja
pushl
call
xor
dec
adc
movzbl
sbb
xorl
mov
and
mov
xor
subl
div
mov
sub
mov
orl
imul
xor
add
mov
or
add
xor
sbb
mov
sub
movzbl
or
mov
mov
movl
cmpl
notl
mov
mov
mov
jmp
notl
mov
jg
pushl
call
notl
adc
adc
sbb
movl
mov
or
and
notl
and
or
xor
cmpl
mov
mov
movl
jmp
movzwl
mov
jg
pushl
push
pushl
call
movzbl
sbb
add
negl
sub
dec
mov
movl
movl
movl
cmpl
movl
movl
movl
mov
jmp
mov
jb
pushl
push
push
call
mov
and
mov
neg
xor
andl
and
movl
mov
xor
and
add
xor
add
or
or
cmpl
notl
movl
mov
movl
jmp
movl
jle
push
pushl
push
push
pushl
pushl
pushl
push
call
adc
mov
add
or
sub
neg
sbb
sub
mov
inc
movl
cmpl
mov
movl
mov
jmp
mov
mov
jne
push
pushl
call
decl
decl
sbbl
and
movl
movl
movl
xor
mov
shr
xorl
sub
cmpl
movl
mov
mov
mov
jmp
mov
movl
jbe
pushl
pushl
call
add
xorl
mov
sbb
and
adc
or
xor
mov
lea
sbbl
push
adcl
call
addl
mov
adc
or
cmpl
mov
mov
jmp
movl
movl
jbe
push
pushl
call
sub
mov
xor
or
sub
imul
negl
sbbl
and
mov
orl
or
xor
and
lea
adc
mov
movl
movzwl
xor
movl
movl
xor
xor
or
movl
movl
and
movl
cmpl
mov
not
movl
movl
jmp
mov
notl
jg
push
call
sbb
orl
xorl
add
xor
xorl
xor
xor
xor
mov
sub
or
movl
sbbl
movl
mov
mov
mov
sub
xor
mov
sub
and
cmpl
movzbl
movl
jmp
movl
movl
je
push
push
push
push
push
call
sub
or
notl
sub
xor
add
add
mov
sbb
sub
and
sub
or
mov
sbb
lea
mov
mov
add
mov
add
mov
mov
imul
sbbl
and
cmpl
mov
mov
mov
movzbl
jmp
notl
mov
jbe
pushl
pushl
pushl
push
pushl
pushl
call
xorl
add
movzbl
adc
not
or
imul
mov
lea
mov
addl
movl
movl
movl
movl
mov
sbb
mov
or
mov
movl
xor
andl
xor
sbbl
mov
call
cmpl
movl
movl
movzbl
movzwl
jmp
movl
movl
jb
call
sub
and
and
add
adc
subl
sub
sbbl
mov
mov
sub
mov
mov
adcl
xor
xor
mov
call
xorl
or
or
sub
mov
or
mov
andl
xor
xorl
xor
mov
call
mov
cmpl
movl
mov
movl
jmp
movl
jbe
call
or
xor
inc
or
andl
cmpl
notl
mov
jmp
mov
movl
je
push
pushl
call
mov
mov
and
sbb
not
mov
sub
sbb
or
and
mov
movl
mov
mov
xor
xorl
xor
addl
mov
mov
xor
mov
xor
or
mov
sub
mov
movl
mov
mov
movl
call
cmpl
mov
movl
mov
jmp
movl
movl
ja
push
push
call
and
addl
adcl
movzbl
xor
or
mov
adcl
or
mov
or
subl
push
push
subl
push
andl
push
orl
call
movzbl
mov
cmp
movl
jne
mov
sub
mov
mov
xorl
mov
subl
xor
xorl
xor
mov
call
adc
mov
add
mov
xor
mov
mov
incl
xor
addl
xor
xorl
mov
xorl
call
or
and
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
mov
sub
mov
xor
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
sub
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
or
mov
xor
mov
sub
mov
mov
sub
mov
xor
mov
div
mov
xor
div
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
notl
jmp
movl
mov
jle
pushl
push
push
pushl
call
negl
addl
orl
adc
sbbl
sbbl
not
push
push
not
mov
or
movl
jne
cmpl
movl
mov
mov
jmp
mov
jl
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
sbb
and
or
xor
xor
mov
sub
add
add
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
je
add
mov
mov
pop
pop
movl
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
shld
shl
ret
xor
mov
addl
xor
and
shl
ret
xor
xor
ret
