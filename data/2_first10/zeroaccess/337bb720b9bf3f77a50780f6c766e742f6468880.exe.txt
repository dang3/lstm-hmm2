push
mov
sub
mov
push
movzwl
or
push
add
push
mov
xor
mov
add
mov
xor
mov
mov
sbb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
call
cmpl
jb
mov
dec
mov
dec
mov
movl
subl
mov
xor
add
mov
movzwl
sbb
mov
mov
orl
mov
adcl
mov
sub
mov
push
adc
pop
orl
sub
add
sbb
movl
mov
mov
or
movl
andl
xor
xor
inc
mov
cmpl
jg
jmp
pushl
push
pushl
pushl
pushl
push
push
pushl
push
call
cmpl
jb
mov
adcl
mov
mov
add
mov
mov
mov
incl
xor
sbbl
add
mov
lea
mov
sub
mov
xor
andl
add
mov
subl
lea
movl
push
and
mov
adcl
xor
add
movl
push
mov
xor
mov
mov
adcl
push
addl
pushl
adcl
call
movl
cmpl
je
cmpl
ja
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
dec
mov
sub
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
movl
xor
mov
inc
mov
lea
sub
mov
movl
cmpl
je
cmpl
jbe
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
mov
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
xor
inc
mov
adcl
sub
mov
movl
mov
mov
cmp
movl
je
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
push
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
pushl
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
xor
xorl
lea
or
mov
xor
sbbl
div
mov
andl
mov
inc
mov
cmpl
jg
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
sub
mov
pop
and
shrb
jnp
jnp
hlt
pushf
jnp
ror
aam
ret
add
xchg
mov
sbb
jle
push
orl
ja
stos
jl
jno
jl
inc
mov
sti
nop
jl
or
rcrb
push
imul
out
sti
fldcw
ss
rcrb
cmpsb
enter
cwtl
neg
sti
jns
sbbb
pushf
push
scas
lock
mov
lret
mov
xchg
add
xor
xchg
lods
in
mov
test
inc
mov
in
cli
xchg
xchg
inc
testb
add
sub
adc
daa
test
xchg
mov
mov
rcll
or
bound
add
outsb
jp
bound
mov
movsb
jecxz
mov
push
jno
cmpsl
je
aad
adc
loopne
je
pop
xor
xchg
sti
pop
dec
mov
and
push
ss
test
mov
stos
push
xchg
popf
push
mov
ljmp
jp
cs
pop
aaa
add
fildl
mov
and
ret
js
jmp
and
aaa
mov
test
inc
mov
arpl
lea
mov
xor
cmp
test
les
sub
scas
dec
lahf
cmpsl
cmp
jmp
push
nop
jmp
jae
inc
ror
cmpsl
xchg
das
int
pop
insl
sbb
jmp
xchg
mov
pusha
cs
xor
or
repz
fidivrs
sub
push
imul
in
cmp
sbb
mov
push
jmp
fimull
fisttpll
repnz
pop
cld
sbb
cltd
jns
ljmp
mov
out
cmpsb
loope
pop
xor
std
out
gs
fsubrs
lods
mov
fwait
and
adc
outsl
jge
adc
imul
lahf
push
in
push
jge
xor
inc
movsb
leave
test
mov
dec
adc
sub
in
shlb
cld
bound
add
sar
notl
jbe
out
jbe
mov
lds
mov
jp
rcrl
add
popa
xchg
adcb
or
or
fwait
imul
cmp
xchg
push
dec
fisttps
sub
pop
mov
fnsaves
mov
gs
mov
inc
jecxz
sbb
cli
pop
jo
push
or
out
aas
clc
sbb
mov
jns
mov
test
jno
fidivrl
inc
push
mov
sub
adc
dec
mov
lock
imul
cmp
adc
inc
pop
xchg
pop
js
sub
push
xchg
ret
sbb
les
xor
push
xchg
jo
push
stos
xlat
xchg
imull
and
jo
dec
int
out
icebp
cmp
hlt
cmc
nop
orb
iret
push
adc
aad
inc
or
out
xchg
cmpsl
jecxz
xchg
je
dec
lock
fcos
out
rcll
dec
pop
arpl
das
rorl
test
pushf
push
orl
movsb
sbb
sbb
pop
imul
jns
clc
hlt
gs
jbe
or
jle
out
lods
out
dec
jno
adc
dec
lods
mov
inc
sti
into
icebp
sbbl
int
cwtl
aaa
pushf
add
sub
mov
xor
dec
ds
decl
pop
adc
mov
rcl
notl
lret
hlt
push
mov
icebp
cmp
pop
inc
cmp
add
cmp
rcl
sub
dec
or
adcl
outsb
pop
dec
xlat
push
iret
bound
ljmp
and
dec
loopne
push
pop
pop
xor
decb
or
nop
push
int3
loope
mov
push
mov
push
movsb
data16
daa
jmp
notl
xor
inc
xchg
adcb
sub
fdivl
sbbb
xor
outsl
sbb
xor
mov
fstp
call
push
or
ss
mov
sub
sahf
lods
in
imul
arpl
cwtl
ret
lock
inc
cmp
cwtl
lahf
cmp
add
lcall
outsb
cmp
mov
cld
cmp
test
jae
frstor
inc
int
lods
pusha
inc
jecxz
pop
fs
lds
cmp
pushf
mov
jecxz
insb
int3
rorb
fbstp
shll
sbb
add
add
mov
minps
pop
jecxz
fstpl
std
js
push
mov
punpckldq
jmp
pushf
push
leave
leave
lret
movsb
and
arpl
xchg
lds
mov
stc
in
cltd
or
movsl
xor
je
repnz
adc
lcall
mov
mov
insl
repz
push
leave
ss
loopne
lea
jmp
mov
add
ja
inc
sub
add
fidivs
cld
je
lahf
jmp
add
pop
imul
iret
xor
mov
xchg
fistl
repz
frstor
xchg
loope
call
pushf
cmpsb
dec
xlat
sbb
andl
and
push
mov
dec
mov
hlt
inc
fdecstp
inc
sub
xchg
pop
movsb
adc
loop
inc
pop
sub
sbb
and
push
or
jmp
outsb
lcall
mov
sbb
mov
xchg
jae
jno
mov
sarb
popa
dec
mov
dec
jne
jmp
cmc
in
sahf
add
fsubl
rcll
pushf
shrl
jb
mov
sarb
mov
lock
or
cld
adc
fiadds
ja
nop
jp
dec
movsl
faddl
jg
sti
mov
mov
in
ja
pop
mov
jae
xor
fxtract
mov
gs
jo
xchg
dec
xchg
push
xchg
ret
pop
sahf
sahf
les
add
pop
mov
scas
js
xor
pop
pushl
loopne
arpl
jg
cmp
cmpsl
lret
mov
lds
mov
xor
iret
daa
lcall
outsl
push
aad
adc
or
mov
mov
jo
lret
into
in
push
fcoms
sbb
loope
jmp
subl
seto
mov
mov
jp
sti
mov
mov
push
lods
out
dec
cs
sbb
sti
push
sarl
in
mov
sub
sbb
negl
cltd
push
lea
or
cs
inc
or
sub
mov
jl
flds
or
push
mov
add
icebp
cltd
ss
jbe
aaa
ds
pushf
inc
push
mov
mov
repnz
mov
jnp
in
test
xor
sub
shrl
out
jmp
add
jo
mov
and
clc
movb
pop
cmp
or
movsb
mov
out
pop
test
daa
xor
add
or
push
lret
adc
stos
hlt
fildll
scas
pop
sbb
sbb
dec
repz
mov
mov
xchg
xchg
push
pop
dec
xor
bound
das
insl
pusha
sahf
cmp
loop
jmp
dec
push
jecxz
mov
dec
adc
and
xor
scas
daa
andl
js
pusha
xor
dec
inc
imul
and
pop
sub
cmpsl
rcrb
xor
mov
cmovle
andb
popa
roll
xor
cli
adc
or
test
dec
lods
mull
jno
aad
push
clc
mov
rol
inc
jne
in
outsl
and
sbb
stos
stos
add
in
jecxz
push
jle
adc
ror
lcall
fwait
cmp
inc
nop
pushf
jmp
aad
test
pop
test
or
stos
pusha
int
mov
dec
cli
xchg
add
mov
lods
fadd
test
xchg
or
push
movsl
loope
fisubl
arpl
pop
jg
ret
loopne
test
in
dec
outsb
sbb
cli
ds
dec
ss
dec
mov
insl
outsb
out
xchg
mov
sbb
psadbw
mov
cmpsl
dec
jne
lret
daa
js
lock
frstor
mov
roll
loopne
ja
sbb
aas
decb
in
xchg
mov
shl
add
lods
rcll
ds
and
xor
push
enter
dec
lahf
icebp
std
pop
inc
lret
or
je
popf
les
adc
push
rcrb
test
shlb
or
aam
lret
out
dec
std
std
lods
hlt
adc
add
popa
call
mov
aas
jae
divl
jle
mov
xchg
nop
mov
mov
jae
xchg
pop
xchg
xchg
push
cmp
loopne
xchg
pop
push
adc
aam
add
fildll
daa
stos
sub
xchg
pop
mov
dec
cmp
and
arpl
loopne
ds
dec
scas
and
push
std
xchg
imul
mov
mov
out
sti
out
sub
push
mov
test
loop
aam
mov
push
or
and
or
and
pop
pusha
lock
pushf
cmp
cs
cmp
push
fiaddl
lret
lret
mov
fidivrs
jge
mov
pop
pushf
or
pop
test
inc
mov
inc
out
jle
pop
out
and
leave
addr16
add
jmp
nop
shrl
cs
dec
cmp
dec
sti
popa
xchg
xor
sbb
scas
scas
subb
mov
jecxz
or
pop
outsl
mov
mov
subl
repz
fsts
inc
rclb
mov
sub
mov
sbbl
xchg
mov
pop
mov
adc
pop
aaa
repz
rcll
mov
dec
xchg
fcoml
xchg
lret
and
xchg
movsb
cmp
jge
sub
sub
popf
pushf
dec
pop
jg
push
loop
inc
popf
lds
or
pop
dec
mov
mov
push
gs
inc
cmp
gs
cmp
lret
pop
imul
push
dec
mov
in
subl
add
pop
pop
inc
add
add
cltd
jb
cmpsb
jg
mov
pop
outsl
xor
test
outsl
test
sbb
mov
dec
hlt
popa
pop
sbb
es
dec
lock
cld
sbb
jge
jecxz
xor
mov
xchg
jae
inc
and
lds
movsl
cwtl
mov
mov
xchg
mov
add
cltd
lret
pop
cmpsb
testl
pop
mov
inc
inc
jo
add
xlat
inc
lods
movsb
cmp
mov
xor
adc
lea
cltd
cmpsl
fdivrs
clc
xchg
adc
pop
push
pusha
and
out
rcrb
sub
es
in
add
jmp
adc
mov
test
mov
push
scas
idivb
pop
lods
std
push
xor
dec
jns
loop
add
scas
mov
idiv
rolb
xor
pop
fimull
cld
js
call
je
jae
ficoml
lods
jp
jp
cmp
jl
jo
xchg
rolb
dec
adc
adc
mov
add
jb
or
pop
and
inc
cmp
dec
sarl
add
loop
bound
ret
pop
pop
cmp
xor
pusha
mov
sahf
insb
mov
dec
add
pop
mov
notb
out
int3
js
sub
cmpsl
shll
fdivr
rorb
clc
enter
and
movsb
js
dec
lods
scas
std
cwtl
fmull
popa
aad
dec
push
sub
push
jmp
xchg
mov
add
pandn
inc
or
cmp
sbb
das
stos
out
inc
imul
mov
mov
cmp
outsb
push
ljmp
mov
dec
daa
in
mov
cltd
jae
sahf
sbb
movsl
inc
mov
pop
adc
add
fmul
ret
adc
out
out
push
push
mov
push
mov
clc
leave
test
adc
mov
ficomps
enter
push
mov
lods
jmp
dec
sub
mov
inc
or
pusha
dec
mov
fimull
mov
mov
xchg
xchg
lock
lods
call
push
mov
mov
mov
orl
pop
es
and
inc
ss
xchg
jb
dec
xor
jecxz
test
pop
imul
xor
push
dec
add
add
xchg
lret
mov
adcl
lock
fisubl
mov
pop
pop
shl
inc
cs
mov
ljmp
sub
bound
cltd
shlb
scas
ds
and
sub
sub
icebp
hlt
orl
pusha
or
icebp
sbb
dec
ret
push
jecxz
lret
in
and
cmpsl
mov
mov
and
iret
push
lods
add
mov
popa
xlat
sub
imul
pop
inc
dec
add
pop
fdivrs
int3
scas
sub
push
push
push
add
cmpsl
jecxz
addr16
rclb
and
dec
lret
and
push
adc
sbb
cmpl
push
push
add
push
sub
or
inc
shr
xor
dec
push
inc
push
or
jge
das
push
out
push
xor
adc
loopne
pop
hlt
insl
test
mov
add
shl
or
add
inc
test
mov
cmp
cmp
outsl
mov
mov
jecxz
sub
sbb
push
sbb
inc
xchg
aas
repz
sub
cmp
jne
movsl
sub
iret
pop
and
dec
js
cmp
inc
insl
scas
mov
cltd
cwtl
popa
dec
jo
xor
sub
jecxz
mov
xor
iret
gs
inc
add
xor
call
iret
negl
dec
sub
mov
test
inc
mov
cmp
lahf
xchg
cmp
mov
push
scas
cli
aaa
sar
inc
or
int
hlt
jle
and
xchg
add
mov
std
test
adc
test
ret
movsl
bound
bnd
ss
cmp
mov
or
sub
sbb
lods
push
adc
sub
sub
cld
cli
loop
or
fiaddl
adc
in
xchg
cmp
addb
pop
iret
push
test
push
sub
xor
cltd
pop
cli
test
jmp
stc
cli
cld
adc
rolb
jg
mov
into
pop
js
mov
push
mov
xor
orb
mov
add
shrb
mov
stos
adc
incb
lds
and
mov
mov
pusha
fwait
stos
adc
cmp
idivb
pop
in
clc
mov
mov
mov
xor
lcall
or
sbb
xor
add
pop
call
incl
pop
arpl
rorl
fistl
sub
bound
movsb
inc
in
imul
stos
repz
inc
insl
push
pusha
js
mov
sbb
adc
inc
stc
and
fs
mov
fcmovnb
jae
mov
push
movsb
call
fimull
int3
jmp
jae,pn
aas
jo
cmp
fists
xchg
mov
movsb
jno
ss
push
mov
push
nop
std
rorb
testl
and
loopne
fmull
adc
mov
jbe
xchg
xlat
jl
xchg
repz
insl
xchg
push
push
add
jno
and
push
rorl
jbe
pop
mov
test
jo
xchg
ja
je
outsl
push
and
aas
jge
aam
dec
dec
cmp
cld
and
jle
sbb
test
jecxz
or
fldt
push
or
dec
jecxz
mov
or
mov
arpl
lock
push
data16
fsubp
fidivl
add
daa
outsl
daa
dec
and
add
mov
call
addr16
out
xchg
fs
and
fnstenv
test
sub
jnp
ret
and
and
shlb
inc
add
xchg
sub
cs
pop
cmp
jns
mov
push
pusha
rcll
cmp
mov
sub
xchg
or
ret
mov
mov
sti
and
mov
loope
dec
inc
and
lret
aam
test
jne
cmpsb
adc
dec
sub
mov
xchg
and
loopne
adc
fsubl
sahf
popl
lahf
jg
nop
jge
cld
dec
sub
jge
dec
shll
pop
jmp
adc
lods
jmp
mov
or
scas
in
out
pop
mov
ret
xchg
sub
icebp
in
imul
gs
leave
lods
mov
jmp
dec
xchg
ror
push
push
cmpb
mov
jno
mov
fnstcw
into
popa
cmpsb
cmpsb
out
jl
cltd
test
xor
and
push
add
push
pop
mov
cmp
mov
outsb
xor
pusha
icebp
cmpsl
negl
mov
pop
add
jg
ret
cmp
dec
and
push
mov
sarl
jb
pushf
enter
shll
cwtl
mov
adcb
lret
lds
mov
cmp
fcoms
add
push
dec
shl
push
pop
in
into
enter
stos
in
xchg
add
call
movsl
and
stos
inc
pop
icebp
adc
pop
movsb
jo
dec
jno
or
add
fbstp
jo
add
fbstp
pop
xor
mov
jmp
daa
enter
inc
lea
lret
sub
cltd
dec
int
push
rcl
cmp
mov
in
bound
das
push
mov
shlb
mov
mov
adc
add
xorl
shll
test
cmp
xor
push
jmp
daa
lds
std
pop
jle
stos
push
shlb
mov
dec
xchg
mov
or
xor
insl
and
mov
inc
out
jo
repnz
pop
out
je
call
in
adc
push
mov
movsl
stos
fwait
cmc
fstl
dec
mov
xchg
cmp
rcrl
inc
push
cltd
sub
iret
jl
out
subb
scas
sub
es
xchg
lds
rorl
cld
jae
aas
cltd
inc
das
xor
loopne
pop
push
xchg
cmp
test
shl
push
xchg
cmp
mov
xchg
cwtl
out
push
scas
scas
or
mov
popf
in
mov
mov
enter
xchg
movsb
mov
jl
xchg
movsb
or
imul
ss
jmp
arpl
test
mov
jmp
jae
das
push
inc
in
xchg
sbb
fadds
fs
das
ja
sbb
xchg
push
cmc
inc
sbb
cmp
imul
mov
loopne
icebp
loop
movsl
or
xchg
xorb
repz
add
out
or
mov
movsb
dec
mov
lret
push
mov
sub
jo
fdivs
test
push
fisubrs
das
shll
xchg
dec
lea
fwait
es
xor
sbb
in
mov
add
xor
popaw
push
pop
lret
mov
stos
mov
pop
mov
stc
mov
into
adc
or
insl
adc
clc
cmpsl
lcall
push
stos
push
lock
mov
xor
mov
popl
sbb
jns
cmp
cmp
jle
fwait
push
mov
push
fs
movsl
clc
lods
leave
add
aam
orl
aaa
in
cmp
sub
inc
push
ds
outsb
je
in
dec
dec
out
push
mov
mov
pop
jne
cmp
test
dec
gs
add
testl
or
mov
mov
jae
dec
arpl
xchg
dec
push
add
push
adc
dec
or
div
adc
callw
pop
pop
mov
xor
dec
imul
cmp
dec
dec
cld
and
xor
mov
cmp
sub
lret
xchg
popf
test
mov
sbb
pushf
cmpsb
nop
dec
inc
mov
inc
pop
idivl
testb
movl
pop
daa
dec
xchg
pop
xchg
push
inc
sbb
push
leave
pop
sub
or
jno
adc
or
in
in
dec
fldcw
nop
and
jne
push
rolb
xor
fwait
lds
add
outsl
out
rorl
jecxz
mov
js
mov
jae
inc
cmp
push
jl
push
nop
dec
jbe
pmaxub
scas
mov
js
callw
repz
les
popa
mov
xchg
xlat
hlt
adc
xchg
and
jp
xchg
inc
ret
push
dec
es
stc
test
mov
ds
jo
aad
mov
or
xchg
sbb
fs
adc
add
sub
loop
pop
loopne
or
or
push
loope
pop
or
fdivrs
fiaddl
dec
sbb
cmp
dec
xor
das
push
insb
shll
outsb
or
push
sbb
xor
xor
sub
leave
shll
imul
mov
fisttpll
out
dec
add
test
out
dec
fstpt
scas
xchg
stc
mov
adc
push
adc
mov
fwait
lods
mov
jns
mov
inc
test
fistpll
imul
pop
sbb
pushf
or
rorl
fs
idivl
add
aam
lcall
insb
add
mov
jmp
test
adc
nop
jae
fidivrs
inc
mov
push
dec
lahf
popa
sbb
cmp
in
sbb
xor
jle
inc
inc
ss
ss
mov
into
cmp
jecxz
jbe
inc
clc
ja
lock
cli
jmp
adc
mov
inc
mov
mov
repz
xlat
mov
das
and
mov
jns
sti
lea
je
dec
mov
jecxz
adc
ljmp
dec
aad
ficoml
mov
mov
aad
and
inc
lret
jbe
sub
mov
xchg
xorb
inc
ss
into
sbb
shll
ss
ljmp
adc
bound
mov
rolb
scas
in
popf
icebp
out
fs
add
fsubl
std
les
push
cmp
sbb
sbb
mov
push
mov
mov
sarb
inc
notb
mull
or
sbb
movsl
fldt
pop
test
out
popf
add
inc
inc
or
dec
xchg
les
jg
xchg
and
mov
fxam
push
and
and
pop
fimull
insl
pop
mov
iret
adc
mov
sbb
stc
or
or
xchg
fisttps
cmp
testl
into
out
dec
dec
insb
sbb
nop
jecxz
sbb
pop
in
cmp
mov
push
shl
inc
or
lock
mov
or
icebp
call
sub
mov
dec
call
jo
int
mov
sub
in
mov
pop
mov
pop
cmp
pop
out
mov
test
decl
outsb
popa
shl
imul
add
adc
test
add
imul
repz
push
mov
decl
std
fwait
jb
stos
bound
hlt
or
push
ud1
in
push
add
cs
push
es
xlat
lcall
fld
insl
rorb
mov
push
outsl
mov
push
ja
fisttpl
or
sbb
dec
mov
xor
adc
mov
fiadds
insl
or
mov
shll
lock
inc
and
js
lods
mov
mov
ror
scas
pop
loop
push
popa
dec
mov
sti
and
mov
xchg
lahf
mov
popf
bnd
je
bound
adc
std
mov
cmp
movsl
out
xchg
adc
ds
add
add
xchg
movb
inc
xlat
mov
lcall
push
mov
jp
cmc
stc
out
pop
out
mov
xchg
lods
pop
outsb
addr16
or
jo
scas
icebp
out
lock
inc
dec
ficoml
stos
shll
lret
xlat
pusha
repnz
xchg
xor
test
bound
negl
nop
mov
mov
cmp
dec
sbbl
sbb
adc
mov
mov
aam
decl
xor
movsl
nop
popf
mov
pop
out
jmp
cmp
jecxz
jp
pop
inc
fmull
inc
jns
push
inc
adc
fs
loop
ljmp
aad
add
out
dec
sarl
push
hlt
hlt
orl
jge
rcrb
lret
dec
and
adc
in
test
push
test
mov
add
lea
cmp
xor
arpl
ret
sbb
adc
jle
add
dec
mov
icebp
cmp
mov
dec
lahf
and
sbb
push
cmp
sbb
dec
add
popa
sbb
or
xchg
push
fistps
stos
repnz
lods
int
lods
les
cmp
scas
pushf
push
loope
in
iret
mov
ficomps
jecxz
cmp
cmpsb
test
movsb
shll
inc
xchg
out
int3
push
pop
pop
shrl
and
insb
push
mov
jle
cmpsl
fcmovbe
push
mov
cmp
cmp
pop
cltd
popf
lret
xchg
sub
dec
icebp
notb
or
adc
dec
dec
mov
je
mov
dec
fisttpl
add
cmpsl
pushf
add
add
je
nop
add
sarw
loope
rolb
imul
bound
xorl
sub
cltd
rcrl
jmp
jb
sbb
mov
cmp
aaa
or
mov
and
pop
dec
out
ss
mov
and
xor
test
sbb
insl
inc
mov
rcrb
push
mov
daa
sti
pushf
stos
adc
adcl
mov
iret
mov
decl
lret
inc
shll
and
xor
xor
mov
sbb
ljmp
roll
xor
xor
sub
push
pop
add
inc
sub
push
or
push
sub
xor
ja
in
aaa
xchg
shlb
mov
test
inc
adc
push
jne
stc
iret
push
adc
testb
jecxz
xchg
mov
enter
mov
pusha
movsl
std
int3
inc
lahf
fidivs
mov
push
and
pop
push
lahf
lcall
and
loopne
xchg
jmp
sub
jbe
xor
cltd
mov
push
jle
aad
adc
adc
scas
adc
idivb
int3
scas
loop
sbb
adc
je
or
pop
mov
add
cli
mov
cli
daa
jecxz
pushf
pusha
out
push
call
ret
in
jle
xchg
insw
jns
test
mov
pop
icebp
lds
pop
mov
add
fstps
shlb
addb
stos
fisttpl
lahf
pushf
jnp
movsb
pop
push
cmp
movsl
lods
pop
cmp
in
jno
adcb
push
fwait
cmp
fidivrl
mov
mov
push
lea
rcl
sub
nop
sbbb
sbb
fsubrs
adc
in
cmp
aad
or
sti
lea
inc
out
pusha
aad
xchg
sbb
mov
inc
adc
es
xchg
mov
fmul
pop
inc
test
cmc
mov
push
test
jl
push
js
mov
dec
mov
pushf
data16
sti
push
jle
or
test
push
adc
mov
in
push
orb
rcrb
or
jae
inc
rcll
std
pop
inc
mov
imul
inc
sbb
mov
jns
dec
cmp
movsl
bound
dec
adc
add
in
jb
pop
pop
xor
cmpsl
adc
out
out
test
inc
add
add
mov
mov
fmuls
add
insl
out
xchg
dec
inc
inc
inc
push
cli
fidivrs
push
clc
sub
and
pop
sub
aas
push
jnp
xchg
push
inc
mov
mov
popa
pop
push
xchg
push
lods
pop
dec
pop
hlt
or
xor
ljmp
push
fwait
sub
mov
ror
test
xchg
xor
lret
jnp
mov
or
xchg
push
cmp
jle
jae
add
repnz
push
push
cmp
fsubp
pop
pushl
int
cmpsb
inc
mov
in
js
cmc
cwtl
aam
jne
lret
mov
fs
fiaddl
sbb
rep
dec
mov
adc
xor
mov
testl
jle
clc
add
movsl
fadd
in
inc
pop
or
add
rorb
rorl
adc
jmp
push
stos
pop
mov
repnz
push
xchg
pusha
dec
adc
xchg
inc
adcb
jmp
outsb
jb
jo
jmp
xchg
jno
xchg
or
lods
push
push
dec
and
adc
push
testl
into
stos
ficoml
movsl
pop
insb
imul
xchg
movsb
adc
cmp
out
ds
lods
lock
daa
mov
inc
aaa
pusha
nop
push
cld
icebp
sub
pop
in
jl
fsubp
jo
pop
push
leave
jb
or
sub
add
lds
mov
aam
jno
aas
jp
in
add
nop
dec
imulb
cmc
sbb
mov
popa
dec
loop
mov
outsl
cld
jb
pop
pop
push
lret
xor
push
pushf
sar
push
pop
sbb
mov
icebp
inc
data16
arpl
jae
sbb
push
mov
mov
jnp
outsb
adc
sbb
push
shlb
dec
jns
sbb
or
lret
mov
add
not
xor
push
ss
scas
and
dec
rorl
pop
mov
aas
push
into
xchg
inc
push
std
xor
fwait
dec
adc
pop
leave
out
loope
pop
mov
icebp
jecxz
add
ljmp
fidivs
lret
mov
repnz
mov
inc
pop
xor
mov
repnz
out
push
sub
clc
inc
lock
cmp
popf
mov
push
fimuls
arpl
shl
mov
aaa
rcrb
loope
faddp
insl
cmp
or
sub
or
add
pop
mov
and
cli
imul
pop
or
xor
iret
xchg
out
cmp
enter
stos
mov
add
jne
lret
popf
adc
stos
dec
mov
mov
cmp
cmpsl
fiadds
and
and
cwtl
push
loope
xchg
cmp
xchg
repnz
or
loop
aas
out
mov
and
sbb
push
jno
mov
aaa
or
add
mov
fs
ret
insw
and
jl
jle
mov
icebp
cs
dec
xor
in
add
xor
push
popf
add
mov
es
cmp
sbb
pop
cmp
cwtl
inc
dec
lahf
sbb
sub
xor
mov
cli
xlat
xchg
decb
cld
rolb
mov
adc
arpl
and
and
insb
cli
aad
subb
jg
mov
movsl
pop
sub
hlt
outsb
fistl
lret
daa
inc
xor
push
add
add
pop
add
pop
gs
test
adc
adc
and
push
inc
push
out
frstor
sarl
imul
sub
mov
movb
add
into
sub
movl
cmp
jne
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
xor
andl
xor
adcl
add
sbbl
add
movl
mov
cmp
movl
jae
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
pushl
push
call
jmp
mov
decl
mov
orl
xor
xorl
add
lea
movl
mov
movl
mov
cmp
jbe
addl
addl
jmp
addl
mov
xor
sbbl
inc
incl
sbbl
add
movl
cmp
jb
mov
xor
mov
add
mov
xor
notl
mov
sub
add
subl
mov
xor
sub
ror
xor
or
mov
mov
mov
mov
xorl
sub
xorl
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
jmp
lock
pop
pop
insb
js
mov
cmp
jnp
pushf
jnp
rcrl
push
pop
das
mov
rcll
movb
cmpl
mov
out
adc
pushf
outsb
jl
add
push
xor
mov
movsl
add
push
dec
lds
mov
nop
cmp
rol
jbe
mov
fwait
lock
outsb
push
xchg
out
inc
rcll
or
std
inc
push
push
cmp
xor
ret
cwtl
xor
jae
aad
mov
dec
in
cmp
cmpsl
add
add
popa
lret
jmp
pop
sub
or
pushf
imul
not
outsb
lcall
insl
sar
lds
out
and
filds
mov
xlat
push
xor
or
mov
lret
mov
scas
hlt
ret
std
sbb
shlb
es
and
mov
js
and
int
sub
das
and
aam
pop
mov
jb
or
stos
cmc
pop
out
repz
push
pop
popf
sbb
pusha
cmc
sbb
pop
mov
lcall
xchg
sbb
xor
and
les
cmc
pop
imull
call
lods
lea
sbb
mov
inc
fsubrs
mov
push
cwtl
mov
xchg
stc
cmpsb
mov
sbb
fisubs
and
pop
stc
orl
push
and
ja
xorb
sub
push
popa
xchg
enter
in
pop
and
jae
xchg
out
outsb
js
rcrb
or
jge
shl
jmp
in
cmp
in
sub
jmp
inc
jo
popf
mov
and
shrl
add
fstpl
ss
repz
sbb
mov
js
stos
push
inc
js
call
lods
cmp
icebp
jg
xchg
xorl
push
sub
pop
xor
bound
push
pop
insb
sbb
mov
addl
lret
pusha
push
push
lea
aaa
mov
mov
sbb
jge
xchg
cmpsl
cmc
cwtl
call
xchg
or
cmp
adc
mov
xchg
loopne
pop
inc
fstpl
outsb
fcoml
mov
aam
lcall
xadd
push
mov
cmc
jb
imul
je
fs
mov
test
adc
jnp
or
mov
aad
shr
pop
or
pop
mov
out
and
push
jno
jae
inc
out
js
jae
xchg
insl
xor
insl
loope,pn
arpl
repnz
add
mov
and
dec
fs
hlt
in
pusha
mov
call
mov
iret
fildll
rcrb
jecxz
ret
in
cmp
dec
ret
out
dec
inc
int
jo
xor
pusha
xor
stos
mov
or
pusha
mov
mov
xchg
sahf
cmpl
pop
sub
aam
loopne
sti
out
cmc
mov
leave
jo
dec
stos
sub
push
xor
or
mov
xchg
mov
ror
adc
or
inc
xchg
push
mov
addl
movsl
imul
or
sub
pop
lods
add
out
scas
mov
jl
push
and
push
bound
imul
pop
out
inc
je
rcl
insl
xchg
pushf
cmpsl
mov
icebp
out
hlt
mov
mov
sbb
cmp
inc
add
flds
popa
jmp
inc
mov
movsb
cmc
fstpt
inc
ss
pop
scas
inc
mov
xchg
out
mov
mov
mov
dec
aas
cmp
dec
jp
xchg
inc
mov
sar
bound
mov
mov
stos
lods
pop
sbb
xchg
mov
sub
xor
cli
rol
test
add
or
call
mov
sub
pop
in
arpl
dec
xchg
dec
scas
mov
js
inc
outsl
mov
test
sub
sbb
scas
out
xchg
xlat
nop
mov
orb
pop
out
xchg
and
test
outsl
add
jmp
arpl
cld
fsts
aad
mov
popa
or
call
stos
out
add
jnp
daa
mov
mov
cmp
addr16
int
xchg
mov
popf
add
loope
adc
imul
xchg
popa
push
dec
lret
cmp
sbb
rolb
jo
into
aaa
inc
mov
xlat
imul
inc
mov
in
jae
push
xlat
cmp
mov
arpl
dec
pop
ljmp
xchg
sbb
add
mov
arpl
jne
cmp
xchg
adc
jp
jg
fidivs
xor
or
aad
push
pop
sub
shll
sbb
mov
pop
sbb
jp
sub
es
jp
jl
sub
das
adc
gs
test
mov
jbe
dec
andl
les
jns
inc
jmp
lock
repnz
cwtl
xor
rorl
rorl
fisttpl
mov
push
inc
fnstsw
testl
fiadds
sub
and
subl
aam
pop
out
sbb
addr16
cli
sub
aad
movsb
idivb
js
sti
push
dec
setb
test
push
repz
shlb
mov
pusha
mov
pop
popa
or
cmp
pop
fsubl
repz
sub
fstp
gs
pop
cli
or
call
push
push
flds
ret
sbb
test
sbb
cmp
sub
mov
jne
loop
int
rorb
sub
mov
adc
or
repz
mov
dec
dec
cld
inc
fldl
repnz
fsubrl
xor
lahf
lods
push
pop
cltd
xor
leave
fiaddl
int3
cmc
js
dec
mov
cmp
cltd
testl
dec
cmp
xchg
lds
jae
dec
shl
mov
jle
xor
pop
xchg
out
xor
and
push
js
or
dec
shll
lahf
fsts
xchg
mov
xchg
scas
sub
xorl
adc
xchg
pop
mov
xchg
dec
sbb
ret
xor
ja
repnz
mov
xor
push
push
jl
repz
lret
cwtl
mov
mov
lods
push
dec
sub
jecxz
xlat
jne
sub
dec
fsubs
cli
lods
fsubr
pop
pop
and
mov
adc
xor
jo
pop
imul
add
mov
jbe
loope
sbb
movsl
dec
daa
mov
pop
dec
xchg
subl
jg
ret
popf
xchg
loop
adc
jle
insl
mov
jle
in
push
jg
mov
lds
fnstenv
cmpsb
xlat
pop
cs
xor
pop
xor
push
sti
mov
scas
jns
inc
sub
fisttpl
xchg
pop
cmp
sbb
dec
sbb
popf
adc
lahf
pushf
jp
shll
or
sbb
inc
sbb
shll
out
ret
push
mov
add
push
repz
sbb
sub
cmp
and
std
aaa
cmp
idiv
ljmp
xchg
sti
jns
and
jae
mov
sub
mov
es
cmc
dec
lcall
cmpsl
inc
push
pop
dec
loopne
negl
and
mov
daa
icebp
das
jb
adc
push
xchg
and
mov
imul
lret
mov
mov
push
insl
ljmp
mov
cs
sbb
rorl
pop
dec
lods
cli
or
fimuls
lahf
outsb
ret
jl
stos
mov
mov
sti
fwait
imul
jbe
movsb
mov
mov
roll
jb
inc
scas
pop
divl
pop
jp
xchg
fistl
jl
cmpsl
dec
pop
lds
fdivr
jge
sbb
rcrb
jbe
ja
fcmovnb
les
cld
icebp
shlb
xlat
fsts
pop
jb
jno
dec
inc
ret
jne
and
mov
sub
mov
push
push
popf
stos
push
xorb
dec
js
in
or
scas
or
jecxz
jnp
cmp
imul
fisttpll
xchg
enter
call
addl
add
sub
decb
jge
push
shl
addr16
push
lods
jnp
loop
sbb
jno
loop
push
cli
ss
pop
std
adc
bound
xchg
test
dec
mov
push
fisttpll
inc
outsl
shrb
lock
icebp
mov
imul
mov
in
mov
fwait
enter
and
push
cmp
mov
mov
sbb
mov
inc
mov
call
fbstp
xchg
sub
ljmp
lds
pop
outsl
lret
rol
nop
jmp
pop
push
pop
adc
or
lret
add
xchg
inc
test
imul
jp
out
jmp
mov
lcall
int
xor
jp
clc
push
inc
out
in
or
or
xchg
lock
adc
sub
mov
cmp
jmp
outsl
xor
xor
jl
imul
add
fcoms
sbb
xor
enter
push
in
mov
mov
loope
jb
push
js
adc
out
shll
jnp
jnp
fcom
les
jmp
push
add
ret
in
data16
addr16
cmp
push
cmp
jno
test
icebp
adc
dec
int3
sbb
repnz
cmc
push
loopne
out
shrb
movntps
sbb
dec
adc
xchg
push
jbe
xor
dec
aaa
enter
mov
clc
mov
imul
cmp
daa
call
rcrb
insl
push
jbe
je
add
push
xor
mov
enter
jmp
imul
bound
xchg
rcl
xchg
inc
cs
jne
sub
pop
cld
orl
hlt
shll
enter
js
icebp
lods
pusha
loope
fidivrl
mov
lahf
dec
xchg
aam
mov
test
pusha
lock
pusha
cmp
leave
nop
mov
cmpsb
xchg
push
movsb
jmp
addr16
mov
pop
mov
aad
xor
lods
pop
aam
xlat
inc
add
pop
pop
fsubr
inc
jecxz
cmp
inc
jp
mov
mov
inc
inc
xlat
jne
pop
nop
popf
adc
push
pop
push
fisubs
pop
cmp
clc
pop
out
pcmpgtw
inc
gs
xor
out
and
mov
cmpl
adc
sub
mov
ss
into
cmp
dec
cwtl
cmc
call
xor
jns
data16
jnp
sub
mov
ljmp
shlb
outsl
repz
dec
cwtl
mov
or
aas
push
rclb
loopne
repnz
jnp
push
cmp
or
int
movsl
imul
cli
andb
xchg
stos
and
aas
pop
push
sub
daa
into
repz
fwait
cmpsb
das
xchg
insl
rorl
jge
shr
mov
push
leave
jns
or
out
fsubrl
test
das
icebp
lods
xor
inc
loop
cmpl
sub
xor
xor
imul
test
jb
pop
push
sub
add
jl
scas
fnstenv
push
inc
cmp
loop
imul
sbb
dec
xor
and
sbb
push
arpl
cmc
push
and
jge
pop
repnz
imul
int
pop
enter
in
test
loopne
xor
or
fcoms
pop
xor
jb
mov
not
sbbb
call
mov
lods
dec
and
push
test
dec
fcoml
loopne
mov
decl
jecxz
mov
jns
fisubs
repnz
js
dec
daa
mov
out
sbb
in
rorl
cmpsb
sbb
mov
xorl
mov
pop
push
lret
jb
xorb
pop
lret
xor
aad
lcall
add
add
sbb
lock
jns
xchg
pop
call
push
cmp
cld
fnclex
lea
lods
shlb
push
sbb
push
add
mov
rcrb
rdmsr
loope
insb
out
addl
daa
loop
loop
sub
jge
sub
push
pusha
notl
leave
jnp
mov
cltd
mov
rclb
or
pop
mov
xor
mov
inc
adc
sbb
jecxz
jmp
in
stc
mov
jl
xor
pop
adc
mov
and
jne
gs
and
fs
dec
aam
jg
mov
jbe
imulb
int3
addb
push
mov
imul
insl
jbe
add
std
les
lods
dec
dec
push
inc
fcomps
mov
and
dec
and
pusha
mov
lds
jmp
into
cmp
cmc
mov
xor
cwtl
pushf
pop
in
out
stos
and
std
mov
ja
popa
sub
mov
adc
sub
mov
mov
neg
sub
cmp
cwtl
pop
insl
xchg
in
pop
jge
cmpsl
sbb
pop
and
pop
jg
sub
sub
inc
test
xchg
sub
mov
imul
sub
test
add
dec
sub
ds
xchg
dec
cmp
sub
in
popf
and
inc
jbe
lret
push
cs
movsb
pop
xchg
dec
mov
push
andb
jae
mov
fdivrl
mov
mov
jae
popa
bswap
mov
enter
pop
sar
mov
mov
out
loope
les
inc
jecxz
push
jb
jmp
jecxz
mov
out
fs
ss
xchg
rcrl
es
je
dec
jb
das
test
mov
sbb
push
xor
mov
jg
cmp
inc
femms
jge
popf
xor
mov
cltd
loope
fdivs
push
mov
iret
rorb
push
mov
sbbl
movntq
inc
ds
out
sbb
cltd
jne
mov
scas
sti
out
outsl
adc
std
jmp
cmpsb
xchg
movsb
mov
mov
sub
cmp
sbb
fisttpll
xchg
sbb
sub
inc
jns
stc
adc
fcomi
mov
or
pop
sbb
push
cmp
adc
arpl
push
mov
sub
arpl
dec
sbb
dec
cmp
cld
cmp
add
idivl
push
adc
es
inc
xor
pop
sbbl
mov
inc
add
rclb
jmp
adc
sub
cwtl
jecxz
inc
out
add
pop
in
shlb
lret
jg
test
mov
inc
push
or
mov
sbb
lea
std
xor
idivb
fisttpll
rcll
stos
rclb
pop
and
in
sub
data16
das
pop
lea
movsl
cmp
jno
sub
add
xchg
repz
dec
je
insb
cmp
xchg
call
xor
repnz
add
dec
fisubl
lds
test
mov
xlat
jl
xchg
xor
shr
or
add
inc
or
cmp
sub
frstor
in
daa
iret
cmc
push
aam
js
dec
add
add
add
sub
sahf
mov
orl
insb
testb
aad
in
cwtl
jns
adc
outsl
jno
mov
mov
lock
xor
inc
and
push
out
sahf
in
cmp
pop
insl
mov
sub
jmp
adc
lds
add
xorb
test
pop
cmovbe
call
or
xchg
or
les
cmp
pop
movsl
pop
scas
jp
scas
push
jmp
jl
cli
movsl
xchg
mov
xchg
sub
imul
jnp
rcl
push
or
xchg
ret
lret
scas
mov
movl
repz
aas
jmp
addr16
sub
imul
test
push
movsl
outsb
in
adc
neg
pop
loope
cs
sbb
adc
aas
ja
push
prefetchnta
leave
or
in
mov
cmc
xor
xlat
popa
sbb
push
xlat
push
dec
scas
pop
loopne
mov
aam
stc
loope
cs
xor
dec
gs
cs
xor
jno
scas
test
ljmp
sbb
add
jmp
pop
cld
sbb
vprotb
jno
icebp
test
push
in
shl
jb
outsl
inc
pop
fsubl
enter
cmpsl
mov
pop
add
sub
jae
roll
pop
adc
add
xchg
push
pop
fdivp
and
xchg
loope
mov
dec
and
in
push
mov
and
aaa
adc
push
iret
adc
fidivs
daa
out
adcb
mov
push
fnsave
or
out
push
sbb
lahf
loopne
add
int
jmp
pop
or
push
inc
stos
test
xchg
bnd
outsl
or
or
ret
mov
rclb
jle
inc
int3
in
js
rclb
insl
jmp
xor
xchg
mov
mov
fidivrs
push
mov
mov
stc
jne
mov
jmp
jle
out
pop
ret
subb
sbb
or
fistl
test
cltd
pop
fsts
negl
push
sbb
popa
negb
inc
adc
xchg
jns
fimull
int
inc
add
or
push
cmp
and
and
xchg
xor
mov
mov
and
dec
fistpl
jno
shrb
cli
mov
clc
inc
lock
inc
sbb
and
sub
test
lock
cmp
lret
ret
xor
shrb
and
stc
dec
pop
dec
popa
sub
dec
xchg
insb
sarl
idiv
inc
mov
roll
mov
jns
xchg
std
pop
adc
sarl
pop
rorl
inc
pop
out
jp
sbbl
lea
bound
mov
mov
jl
xchg
int
stc
push
push
in
test
add
cmpsl
outsl
adc
push
add
js
xchg
je
mov
add
adc
mov
jl
cmp
ficoms
in
adc
and
jmp
push
enter
mov
pop
pop
cmc
fiadds
pushf
mov
xor
pushf
jo
leave
fucomp
dec
cmp
pop
mov
push
loope
jmp
mov
sti
addl
in
jno
adc
jbe
jge
and
pop
mov
add
in
push
outsl
mov
mov
out
push
xchg
scas
cwtl
push
test
push
sub
mov
mov
cmp
sbb
xor
mov
xchg
mov
insl
popf
xchg
mov
push
jmp
sub
dec
lods
jb
fisttpl
nop
cmpsl
flds
in
jp
fsub
incb
movsl
or
lret
cltd
inc
in
test
mov
pop
inc
cmp
sub
push
fnstcw
in
mov
cli
inc
sub
pop
jge
loop
out
scas
sub
or
icebp
jb
jmp
dec
cmpsl
add
aad
inc
lods
loopne
push
adc
mov
test
jecxz
jo
pop
mov
int3
pop
test
or
dec
outsl
lods
cltd
jb
mov
ret
mov
pusha
imull
fldcw
jo
mov
fdivl
rorl
popa
loopne
jge
adc
inc
push
imul
insb
inc
pop
loop
add
add
push
jnp
push
dec
cmp
imul
fstpl
mov
out
insl
dec
push
popa
rolb
pop
cltd
sub
cmpb
dec
xchg
push
dec
sub
and
pop
cmp
xlat
scas
xchg
imul
test
pop
jecxz
rorl
fnstenv
xor
sarl
iret
push
ficoml
popa
dec
jns
aas
or
insw
loop
fs
push
lods
sarb
cs
lock
popa
sbb
xchg
pop
imulb
dec
jg
jbe
dec
adc
pop
jle
stc
ja
mov
es
jbe
xchg
and
mov
testb
sbb
xorb
add
sub
inc
je
adc
cmp
xchg
aaa
lock
sub
int3
xchg
cmp
pop
int
add
cli
ljmp
fwait
mov
jnp
inc
sub
lods
adc
mov
or
andb
sub
rorb
lock
xchg
ss
adc
pop
add
pushf
fsubl
daa
push
je
xchg
sub
push
push
sti
jecxz
push
aas
push
jne
mov
push
mov
std
or
js
push
out
add
xor
popa
cmc
push
sbb
push
inc
xchg
jmp
fisubs
mov
ficomps
ss
leave
popa
stos
jns
add
fsubrs
mov
iret
jnp
jnp
mov
inc
pop
test
fisttps
inc
push
fistps
lret
cmp
push
jl
cmp
sub
arpl
loope
pop
lret
push
cld
xor
add
and
adc
aas
ds
dec
ret
fst
ljmp
xor
or
sub
jmp
stos
into
add
xchg
je
outsb
add
mov
sub
adc
push
andb
mov
je
sbbb
push
test
inc
aas
or
dec
jmp
mov
jmp
jp
mov
shlb
popa
lahf
sbb
mov
je
ret
enter
setge
int
lods
repnz
cld
cmp
hlt
xchg
cmc
and
dec
fdivrs
jae
pop
sub
sbbb
test
inc
cmp
inc
sub
jmp
imul
adc
js
clc
inc
lahf
lret
pop
and
cmp
push
rsqrtps
fistpl
cs
imul
cmpsb
xor
add
xchg
stos
inc
dec
andl
push
sub
cmpsl
jnp
int
mov
stos
cmp
mov
sub
add
bswap
fisubrs
cmpsl
jo
rcr
and
cmp
sti
xchg
loop
push
push
xorb
data16
out
sbb
arpl
push
cmp
mov
cld
xor
mov
addr16
push
dec
mov
jns
fwait
push
js
xchg
mov
or
or
pusha
inc
es
jbe
inc
inc
int
and
dec
aam
mov
ret
popa
sub
mov
jb
bound
out
xchg
mov
jb
popf
mov
aad
rol
add
std
inc
cltd
gs
and
jbe
fiaddl
lds
xchg
add
add
jge
dec
cmp
fnstenv
xchg
sub
sti
sub
push
lock
push
mov
scas
ja
jecxz
cmp
sbb
rorl
out
js
loopne
test
sub
test
mov
pop
scas
xor
sbb
dec
into
movsb
lret
xchg
fadd
mov
push
lea
jno
push
or
add
xchg
fcmovne
mov
dec
fwait
dec
fcompl
pop
inc
ja
mov
adc
cmc
mov
or
int3
fs
jb
cmpsb
popa
outsl
cmpsl
hlt
and
jbe
arpl
cmpsl
mov
add
push
lret
aaa
or
jecxz
pop
into
or
cmp
cwtl
aam
into
lds
pop
mov
xchg
or
movsl
ljmp
loopne
aam
filds
mov
xchg
pop
test
jle
sub
push
lret
add
pop
dec
in
hlt
inc
cmp
cmp
roll
mov
sbb
mov
lock
ja
mov
lods
jns
inc
or
dec
enter
cld
mov
xor
push
push
shl
sbb
add
xchg
mov
add
inc
fs
fisttpll
mov
pushf
pop
decb
mov
cwtl
repz
push
xchg
mov
lret
notl
aaa
sub
or
jno
jmp
push
pushf
mov
mov
shrl
lods
cltd
movsl
das
inc
lea
test
push
cmp
cmpsl
xchg
mov
xor
mov
cwtl
sahf
dec
add
jle
inc
ret
jno
stos
in
test
in
inc
sub
repz
push
out
call
test
and
mov
jno
push
dec
mov
jo
pop
bound
mov
test
add
sub
stos
and
pop
out
mov
bswap
cwtl
lcall
scas
clc
or
pop
xchg
stos
in
mov
in
dec
addl
mov
clc
push
nop
pop
mov
mov
notb
sbb
pop
cmpsl
nop
or
pop
js
push
int
sub
jmp
lods
mov
sahf
lods
loope
cmp
or
repz
jmp
sti
shrb
pop
and
adc
fdivrl
mov
test
dec
stos
add
adc
and
and
aas
aaa
data16
mov
sub
clc
stos
ret
leave
stc
or
xor
in
mov
mov
mov
mov
jg
loope
adc
test
add
orb
push
outsb
dec
insl
stc
cmc
xchg
add
xchg
adc
cmp
jmp
loope
roll
repz
shll
mov
xor
sti
mov
add
sub
aad
aam
int
je
pop
repnz
mov
das
dec
addr16
ret
or
dec
jbe
nop
mov
add
ret
push
movsb
cld
sbb
cmc
pop
or
pop
outsl
jno
mov
mov
jb
leave
xchg
or
cmp
xchg
shlb
xrelease
pop
push
or
push
push
insb
std
std
mov
bound
and
jno
cmpsl
nop
pop
es
push
mov
sbb
movsb
push
jmp
fdiv
inc
int
add
push
nop
jb
leave
and
out
and
xorb
or
aad
enter
inc
out
jo
lcall
movsl
adc
mov
ljmp
scas
mov
add
adc
pop
jno
pop
and
cli
mov
aam
movsb
dec
fs
xchg
fwait
or
mov
shrb
jno
ss
xchg
sarl
pop
repnz
add
or
dec
adc
jmp
lea
sbb
dec
bnd
mov
idivl
and
dec
xchg
inc
xchg
cmp
loopne
fcoms
loopne
push
mov
dec
inc
xor
sbb
adc
mov
mov
cs
sub
cmp
inc
sub
xchg
pusha
push
mov
jno
cmp
mov
or
cmp
push
mov
dec
dec
xchg
sahf
stos
pop
jmp
pop
icebp
cmp
dec
cmp
icebp
mov
or
mov
jnp
outsb
xchg
in
rorl
pop
das
test
adc
push
push
cwtl
cmp
mov
xor
jg
add
jmp
imul
out
or
xchg
adc
cmc
sub
rorl
mov
rcr
test
lock
push
pop
push
fcmovnb
mov
gs
je
dec
dec
dec
or
mov
xlat
test
adc
lds
mov
loope
sbbb
dec
mov
add
cmp
fcompl
mov
sbb
arpl
sub
cmpsl
bound
jnp
pop
fs
int
in
inc
dec
mov
pop
adc
and
mov
cmc
inc
imul
sahf
aad
xchg
mov
and
daa
std
dec
sti
xchg
xchg
or
lret
out
cmp
and
fsubl
mov
hlt
jae
popa
cli
mov
push
scas
cmp
imul
ficoml
xchg
xor
decl
shrl
addl
stos
outsb
cmp
je
inc
sub
fidivs
rcrl
push
cmpsl
mov
lock
incb
dec
jae
xchg
pop
int3
dec
sahf
cli
inc
js
fnstsw
les
das
mov
enter
lret
mov
enter
es
sub
rcl
pusha
std
mov
mov
dec
ret
pop
leave
aad
outsl
outsb
push
insb
sahf
mov
pop
movsl
jo
mov
dec
aam
dec
dec
and
sbb
rcrl
daa
sahf
sub
rorb
hlt
inc
dec
test
xlat
add
push
sbb
cmp
pop
xor
xor
scas
pop
inc
or
and
into
lds
test
sub
lods
sbb
repnz
dec
xchg
push
in
add
mov
sbb
add
mov
dec
mov
add
inc
xor
xorb
idivb
pop
push
call
or
ds
ret
in
repnz
xchg
cmpsl
jae
data16
bound
ret
xlat
mov
iret
sub
pusha
repz
outsl
xchg
frstpm(287
inc
enter
iret
filds
or
add
loop
cmc
lock
add
mov
fsubs
loopne
shrl
jecxz
push
aaa
nop
movsl
fdivp
pop
mov
sub
dec
xchg
mov
and
mov
fmull
cmp
jae
negl
repz
sbb
add
adc
pop
in
dec
ds
sub
xchg
fnsave
and
adc
and
adcb
jmp
mov
imul
jb
push
in
push
leave
in
xor
add
test
fadd
lea
lret
pop
int3
popa
ljmp
test
cs
push
pop
lea
roll
push
sbb
testb
inc
jnp
sub
rcll
fucomi
test
fisubl
push
fmull
rol
push
xchg
mov
pop
insb
popa
loopne
add
jg
mov
dec
in
aam
mov
insb
loopne
jne
iret
lret
add
ret
sbb
xor
jbe
mov
les
cmp
fldl2e
popf
xchg
bound
cmp
mov
idivb
pop
dec
cltd
addr16
lods
pop
push
std
or
sub
jmp
daa
mov
repz
in
ret
mov
cmp
mov
arpl
and
popa
inc
mov
mov
ljmp
lret
or
push
mov
call
sbb
out
xchg
test
mov
push
cmc
mov
imul
jp
xlat
xchg
cmp
je
inc
out
stos
push
lcall
mov
ficoml
ds
popa
add
leave
test
push
gs
sahf
inc
mov
lods
mov
stos
inc
cmp
fsubrl
fsubs
jne
push
scas
mov
cmpsl
adc
inc
lock
in
mov
hlt
jne
in
cmc
push
cmpl
pop
sahf
add
stos
add
xor
and
js
jno
mov
mov
and
cmpsl
inc
popa
jmp
shll
pop
xor
push
pop
fsubrl
cmpsb
push
cmp
fisubrs
mov
lcall
rcl
loope
jp
jae
nop
out
shrb
push
jl
inc
adc
popf
inc
cmpsb
inc
sbb
jle
xor
loop
mov
mov
mov
push
mov
pushw
mov
add
sbbl
mov
mov
out
scas
xlat
adc
lret
adc
mov
dec
xchg
out
mov
in
ss
inc
push
adc
mov
mov
mov
data16
and
sub
jbe
leave
loope
jb
push
adc
bound
ret
cmp
or
jl
std
outsb
and
cs
popf
sbb
push
mov
xor
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
jmp
leave
pop
xchg
movsl
or
xor
es
jno
jnp
hlt
pushf
jnp
cmpsb
neg
mov
sub
jo
popa
ss
mov
roll
or
cmc
cmpsb
mov
dec
loop
mov
add
stc
je
aaa
pop
mov
xchg
sub
add
push
mov
adc
xlat
lods
xlat
and
fistl
and
cmpsl
aaa
leave
xor
lret
mov
add
inc
movsb
divb
add
xchg
hlt
clc
jno
fcmovnu
and
adc
std
fstpt
inc
xor
fnsave
out
push
fidivrl
rorl
dec
dec
int3
adc
xor
insl
cmp
stc
and
es
iret
add
shlb
push
test
je
jnp
cmpsl
dec
dec
mov
mov
cmc
pushf
out
aad
test
ror
nop
dec
and
or
sti
pop
lods
xchg
push
cmp
push
push
xchg
test
jecxz
je
lods
pop
add
mov
mov
repnz
jo
jge
shr
mov
jo
jbe
in
cmpsl
push
movsb
cmpsl
in
jbe
xchg
cmp
pop
mov
repnz
xlat
outsl
jle
js
das
daa
fildl
lahf
insb
inc
es
xchg
scas
xchg
ss
mov
push
nop
je
loope
and
aaa
cmp
fdivr
int3
fidivs
mov
rcrl
xor
pushf
push
xor
push
sub
popf
push
xchg
add
and
ds
xchg
adc
mov
es
mov
into
negl
cmpsb
push
loope
mov
cltd
cltd
cs
fcomip
add
mov
mov
lock
pop
sbb
mov
lcall
mov
fistps
stos
movsb
and
cmc
xor
fs
movsb
push
cltd
sbb
push
clc
and
add
sbb
mov
dec
xchg
ret
jge
addr16
or
inc
rolb
jne
and
clc
cmp
leave
lock
xchg
cwtl
js
adc
mov
fwait
orb
jbe
ret
and
shrl
sbb
gs
mov
mov
ljmp
mov
dec
cmpsb
push
push
mov
sub
sbb
mov
and
add
jmp
add
mov
or
sahf
insb
push
add
cmpsl
mov
cmpsb
and
mov
cmp
addr16
repz
in
icebp
adc
mov
fcmovb
ja,pn
inc
xlat
lret
daa
divb
leave
inc
jnp
mov
pusha
add
push
out
inc
push
cmpsl
jp
add
rcrl
adc
mov
pop
fldt
xlat
add
mov
or
shlb
fisubl
std
xor
mov
aas
sbb
pop
and
stc
ret
sub
sub
jg
xchg
adc
cmp
int3
jns
daa
stos
adc
cmp
lds
in
adc
cmpl
in
lds
les
wbinvd
push
cmp
mov
jge
stc
sub
jp
orb
cmc
jbe
fistpll
xchg
stc
out
and
mov
movb
xorl
enter
adc
js
and
movsl
lret
mov
pop
test
lods
iretw
imul
pop
sahf
or
out
jns
fs
out
mov
xor
das
shrl
addl
pushf
pop
aad
jo
sti
xlat
outsb
lret
loope
aaa
bound
sub
push
aam
dec
push
movl
mov
out
loope
sbb
xchg
test
mov
jnp
in
lahf
aaa
cmpsb
loopne
test
mov
shlb
and
xor
push
leave
lcall
cmp
jg
movsb
orl
stos
std
in
insl
loopne
mov
sub
add
cmp
mov
cmp
inc
mov
imul
lods
sbb
cltd
js
test
pop
movsl
int3
mov
lcall
xchg
cmpsl
push
sbb
inc
mov
int3
jbe
scas
mov
aad
push
xor
mov
xor
insl
sbb
add
lret
cs
lret
repnz
insl
ret
or
inc
mov
bound
cmp
outsb
add
pusha
cmp
repnz
or
jnp
adc
and
outsl
fidivs
rcr
xor
push
dec
stos
mov
xchg
dec
lret
jp
dec
addr16
loopne
ret
cmp
popf
sbb
inc
in
sti
dec
repnz
adc
gs
cmp
fsubp
clc
lods
push
jne
mov
cwtl
cwtl
test
in
clc
inc
xchg
push
push
insb
adc
mov
fiaddl
mov
int3
jns
adcb
jp
mov
add
dec
push
mov
lods
mov
inc
sarl
out
dec
loope
gs
popf
movl
inc
push
mov
lea
pop
cmp
pop
mov
test
fndisi(8087
inc
cli
add
and
ret
cmpsl
in
fbld
loopne
ja
bound
mov
outsb
add
adc
lahf
push
jg
mov
adc
addr16
test
bound
filds
mov
mov
stos
jb
hlt
and
or
data16
int
cmp
xchg
inc
lods
add
sub
fisubl
cmp
mov
sbb
repz
iret
xchg
cmp
outsb
cwtl
das
add
mov
pcmpgtd
sti
loopne
sbb
inc
add
pop
mov
add
cmpsl
loop
in
fiadds
jne
and
adc
out
or
je
push
out
outsl
push
int
ret
dec
or
pop
xor
test
mulb
outsl
daa
fdivs
dec
inc
and
nop
pop
inc
mov
or
test
sarl
cmp
clc
mov
xchg
vpand
popa
cwtl
lods
xchg
lds
mov
shrl
fstl
and
cmc
nop
sarb
jnp
mov
fcompl
adc
jmp
mov
in
lock
mov
rcll
xor
rcrb
sarb
pop
mov
repnz
shrl
sbb
sbb
insb
xchg
repnz
inc
je
dec
dec
xchg
or
push
sub
imul
jae
gs
push
ds
mov
fwait
stc
push
lock
dec
out
add
xor
and
pop
ret
pusha
insl
mov
push
fwait
mov
das
gs
mov
movsl
dec
hlt
mov
mov
sub
loop
xor
je
xchg
orb
pop
sbb
sbb
aas
dec
arpl
out
add
mov
mov
mov
sbb
push
cmp
mov
jp
xor
xchg
shll
notb
mov
jge
cmp
mov
sub
xchg
outsl
fstl
mull
ljmp
or
and
mov
mov
xchg
pusha
and
xchg
outsb
cmp
sbb
pop
loop
mov
xchg
ljmp
loop
xchg
in
mov
sbb
mov
sbbl
inc
fidivl
sub
imul
push
movsb
cltd
jp
jmp
cltd
push
jg
imul
lock
sti
mov
and
xor
pop
xor
push
adc
lods
cmp
dec
inc
ljmp
sti
and
push
lods
in
sbb
fsubl
jecxz
adc
aaa
lahf
out
out
mov
ficoml
mov
test
mov
sub
dec
fimuls
pop
fsubrs
xlat
sub
pop
mov
ja
or
leave
mov
jecxz
insl
lea
add
cmc
jmp
and
mov
aas
fcomp
das
inc
rep
cmpsb
jle
xor
or
mov
jmp
xlat
popa
jmp
rcrl
movsl
dec
add
int
sub
and
mov
xchg
jge
test
andb
pop
dec
dec
arpl
mov
lods
pop
pop
sahf
shrl
aas
movsl
dec
dec
lret
in
pop
or
rcrb
cmp
push
pop
cmpb
pop
push
inc
sbb
stos
fwait
addr16
push
xor
add
pop
rol
or
mov
mulb
loopne
mov
cmpsl
stc
fnstcw
push
es
fisttpl
xchg
test
xchg
pop
xchg
testb
bound
fs
jb
mov
or
es
rcrl
mov
xor
sbb
cmp
inc
add
or
push
xor
ficoms
orb
pop
inc
sub
add
roll
out
dec
xchg
cmp
push
in
xor
fnstenv
inc
sarb
xchg
mov
cld
push
out
stos
into
cmp
in
arpl
es
jae
clc
testb
xchg
imul
mov
add
lods
push
xor
fdivl
cmpsb
push
jnp
lea
pop
mov
bnd
loop
fisttpl
push
xchg
stos
and
inc
imul
fbld
clc
not
inc
leave
ret
xchg
push
shlb
cmpb
xchg
cmp
xor
pop
push
inc
inc
roll
mov
into
sub
adc
push
ljmp
inc
cmpsl
je
adc
outsb
repnz
inc
push
and
jo
in
sbb
dec
out
rorl
add
xorl
and
add
bound
sub
xlat
or
inc
rorb
in
push
shlb
ljmp
ljmp
testb
inc
xor
xchg
dec
test
jecxz
or
clc
adc
jbe
pop
jne
shlb
shl
rcrl
jo
arpl
jbe
lods
repz
pop
es
push
xor
loopne
arpl
jo
imul
lcall
ds
fcmovnbe
lcall
mov
cwtl
jg
ficompl
das
pusha
or
push
xchg
data16
xor
sbb
mov
stos
or
dec
pop
ror
sbb
arpl
dec
lods
jbe
or
sub
outsl
pop
iret
mov
cmp
stos
jo
pop
adc
aas
pop
jno
xchg
dec
dec
mov
mov
mov
call
inc
dec
daa
cmp
cld
jp
lahf
mov
data16
ja
ljmp
pop
loop
push
jl
ja
inc
sbb
pop
add
pop
mov
cwtl
aas
movsb
lds
xlat
popf
sbb
xchg
mov
jbe
pop
or
cmpl
push
sub
dec
std
or
insb
inc
mov
adc
scas
push
lahf
fsubl
mov
outsl
push
push
adc
scas
cmc
std
adc
cmp
push
pop
cwtl
arpl
inc
add
pop
nop
aam
and
adc
sub
mov
int
pop
sbb
cmc
mov
push
imul
loop
add
js
sub
xor
mov
or
adc
aas
lret
mov
rolb
pop
or
sub
dec
sbb
cmp
add
scas
add
test
leave
cwtl
push
daa
icebp
cmpsb
jl
mov
mov
pop
add
or
std
inc
mov
loopne
bound
cmp
std
xchg
xor
pushf
or
mov
out
loop
es
mov
sbb
ret
sub
lock
dec
mov
xchg
jmp
lret
negl
push
int3
cli
lea
outsb
sbb
sub
icebp
sarb
sub
pushf
call
je
and
in
jno
std
stc
push
dec
adc
jb
jmp
lahf
cmp
fstp
pop
cmp
push
sub
gs
pop
outsb
pop
int3
adc
inc
mov
fstpt
dec
inc
add
idivb
sbb
movsl
pop
inc
fwait
cmp
dec
push
mov
or
jge
cmp
sub
adc
push
mov
jns
pop
pop
mov
loope
loopne
fisubrs
mov
lahf
and
push
jl
lret
or
xor
add
mov
es
push
fcoms
imul
mov
inc
in
cmp
lods
jnp
cmpsb
sub
adc
jle
lahf
das
push
dec
movsl
adc
str
negl
mulb
es
xor
pop
nop
faddp
mov
in
out
pop
out
jbe
adc
push
sub
inc
mov
sbb
ret
aaa
stc
adc
cli
sub
mov
and
pop
fidivrl
dec
test
lea
leave
inc
jecxz
add
fstpt
enter
cmp
pushf
lret
sarb
jo
inc
jge
stos
mov
sub
movsb
mov
push
push
pushf
mov
stos
push
and
fsubrs
jmp
push
data16
push
pop
xchg
sub
aam
cmpsb
pop
push
sbb
sahf
adc
jmp
mov
std
in
dec
mov
das
push
or
lret
loope
sub
pop
icebp
pop
xchg
mov
xchg
clc
jb
push
xor
aam
imul
es
jno
mov
ret
cmp
adc
mov
push
je
lods
xchg
sbb
loop
xchg
in
pop
xchg
into
cmpsb
xchg
bound
cmp
clc
arpl
jne
loope
cwtl
xchg
mov
lock
loop
jge
pushf
das
mov
adc
enter
mov
ljmp
insl
jae
enter
pushf
jnp
xor
jge
repnz
out
xchg
nop
popf
and
loopne
push
adc
lcall
and
scas
mov
inc
jo
push
jecxz
adc
inc
ret
jle
pusha
jge
mov
cmp
adc
mov
jge
das
jmp
testb
aas
or
sub
push
sbbl
push
xchg
push
push
adc
xchg
jmp
pop
arpl
loopne
sub
inc
int
inc
pop
clc
xor
cs
ficoms
inc
shll
mov
punpcklwd
and
dec
testl
jl
mov
xchg
mov
pusha
int
cmpsl
scas
fistpll
das
rorb
or
ret
pop
jae
movsl
aad
bound
repz
add
pop
fxch
ljmp
add
jle
es
mov
mov
jle
push
hlt
sbb
les
leave
fld1
jo
fdivs
pop
sbb
pusha
pop
stos
mov
jmp
inc
popfw
scas
mov
dec
arpl
insl
and
imul
jle
leave
and
testl
push
dec
pop
nop
imul
mov
cmp
inc
mov
mov
sub
popa
mov
sub
or
lock
xor
pop
xor
xor
lods
fwait
out
xor
mov
jno
lahf
in
scas
andb
mov
lcall
out
dec
mov
push
pop
imul
out
cmp
cmp
mov
fcoml
xchg
bnd
rcrl
stc
pop
fldl
xchg
sub
xchg
popf
or
cld
mov
sbb
sti
sahf
push
test
lret
stos
rol
mov
push
lock
daa
add
mov
mov
aaa
xchg
push
xor
mov
mov
mov
outsl
adc
js
sbb
movsl
out
aas
es
xchg
push
jg
cmp
xor
or
cmp
mov
push
mov
outsb
push
mov
pop
out
xor
test
fucom
inc
std
mov
cld
test
adc
mov
sub
mov
fwait
cmpsl
jno
jb
movsl
adc
adc
push
push
lods
fstps
mov
icebp
cmp
fwait
and
daa
xor
sbb
cld
iret
add
and
pop
sbb
jae
stc
mull
out
mov
mov
dec
bound
inc
sbbb
mov
stos
lret
into
inc
xchg
mov
stos
leave
fnstenv
ljmp
xchg
mov
adc
loope
inc
push
in
pop
ret
ss
lods
dec
outsb
out
jle
dec
sub
outsl
ds
mov
xchg
cmp
cmpsl
fs
lods
dec
loopne
xlat
xor
and
jo
sbb
inc
and
xchg
es
adc
test
mov
nop
and
xor
cmc
adcb
and
movsl
outsb
add
repnz
mov
imul
jl
in
scas
mov
jmp
sbb
push
mov
not
sbb
add
icebp
jp
jne
xor
push
idivb
xor
icebp
jbe
jo
and
pop
int
in
push
sbb
sub
inc
sti
jne
jns
sbb
mov
inc
dec
daa
sbb
push
jo
fistpl
jmp
outsl
adcl
xor
cmp
mov
cmp
ljmp
ljmp
add
in
stos
pop
fidivl
cltd
and
xor
arpl
ffree
test
inc
cmp
dec
pop
lret
sti
test
repnz
xchg
sbb
push
movsb
pop
jnp
sbb
cs
cwtl
xor
imul
add
mov
lret
lods
movsb
test
push
adc
and
ret
je
out
mov
add
dec
inc
sbb
jne
nop
movsl
lcall
mov
scas
dec
inc
inc
jecxz
ds
dec
aad
sub
stos
sbb
mov
insb
cli
nop
mov
cltd
mov
ror
lock
mov
xlat
xor
mov
pusha
mov
idivb
pushf
adc
popf
jo
xchg
or
ljmp
inc
outsb
mov
mov
jl
sbb
jne
pop
popf
jle
push
jmp
jo
add
sti
fprem
xor
cs
out
filds
sbb
arpl
stos
in
std
adc
imul
aad
aas
inc
cmp
mov
sub
add
cmpsb
or
je
dec
dec
xchg
or
push
add
xlat
mov
int3
mov
mov
popf
push
out
inc
pop
push
scas
and
orl
js
andb
addl
js
pop
add
cs
mov
sti
sub
or
mov
mov
mov
test
lret
call
and
inc
sub
mov
and
inc
iret
shrl
push
mov
cs
in
in
arpl
push
jp
fldenv
es
cmc
mov
les
icebp
outsb
aam
mov
xor
dec
rcr
pop
pop
out
sbb
cmp
stos
jb
aad
addr16
ljmp
dec
mov
adcb
adc
mov
pop
test
js
sbb
cmpsb
popf
cmp
sub
cmp
sahf
cmp
ror
mov
lcall
mov
testb
jg
mov
insl
js
xor
cmc
or
stos
mov
js
stc
xchg
in
cmc
ds
or
ljmp
sub
subb
or
jo
cmp
lret
inc
add
insl
nop
cmp
jge
enter
ret
inc
mov
ds
or
mov
pop
lock
or
add
fistpll
push
dec
dec
push
xorl
aam
fistps
pop
addr16
addr16
fwait
xlat
lea
testl
lret
jno
sarl
push
cltd
mov
cld
cmpl
int
call
mov
add
or
sub
arpl
imul
pop
add
mov
cmp
pop
pop
sub
shl
jno
adc
add
or
bound
andl
xchg
dec
inc
cs
push
hlt
cwtl
cmovns
adc
ds
rcll
pushf
repnz
mov
xchg
test
add
arpl
xchg
stc
ja
xorl
sarl
test
jo
movsb
xchg
ret
mov
mov
lods
rcr
xchg
push
push
mov
or
inc
cld
jno
cmp
ss
cmp
inc
dec
sub
cmp
loope
add
in
ja
or
outsb
add
inc
fadd
add
data16
popf
push
fimull
add
in
cmp
mov
xor
pop
leave
dec
cmpsl
cmp
sbb
popa
jle
rcr
lret
add
push
dec
cmp
sbb
mov
jo
sub
in
sub
jae
push
int3
repnz
cmp
xor
cmp
sbb
or
aaa
mov
stos
sti
mov
or
mov
in
jbe
mov
mov
stos
je
push
mov
fnsave
ffreep
xor
sub
sub
lds
mov
mov
mov
dec
out
mov
inc
sub
aaa
dec
pusha
aam
rclb
jp
mov
fwait
int
inc
inc
faddl
xorl
inc
xor
test
cmpsl
adc
jo
fisttpl
dec
ljmp
add
sarb
sbbb
cwtl
sub
loopne
call
test
scas
gs
loop
sbb
push
sub
mov
fstpl
mov
inc
and
jo
sub
jae
pusha
lret
mov
fisttpl
iret
and
jnp
nop
push
mov
xlat
out
fs
ret
and
fcmove
test
push
lret
aam
clc
stos
jb
hlt
xchg
andl
sti
outsl
pop
into
movsb
jge
jl
cmp
sbb
out
lods
mov
sub
mov
in
mov
push
imul
push
fstpt
js
or
inc
push
xchg
pop
sub
mov
out
fildll
jge
orb
scas
pushf
lods
in
iret
hlt
push
inc
lds
popf
adc
fidivrs
popa
push
mov
stc
mov
and
loop
nop
ljmp
jg
lcall
dec
ret
loop
or
test
adc
or
shl
pop
or
mov
dec
mov
add
mov
lret
mov
mov
mov
lret
fldcw
fisubl
push
dec
int3
mov
sub
ret
add
cmp
in
fwait
mov
push
pop
imul
sub
into
jmp
into
mov
lahf
pop
cwtl
movsl
leave
addr16
adc
cld
xchg
insl
adc
dec
mov
orb
int3
shlb
add
shll
xor
lret
fildl
imul
out
cli
pop
cmp
test
das
inc
stos
imul
pop
xor
push
fidivrs
xchg
pushf
addr16
sub
pop
jecxz
inc
push
sbb
xchg
push
out
jp
cld
cmp
push
stc
push
fwait
mov
insb
cmp
shr
mov
push
rcll
or
inc
stos
push
scas
xor
pop
mov
xor
xchg
xchg
jle
inc
sub
dec
push
xchg
jo
fsubl
xchg
cmp
cmp
sub
fdivrs
adc
pop
cmp
out
enter
fldl
mov
roll
call
sub
pop
sbb
or
mov
je
adc
pop
iret
sbb
dec
xchg
fidivrs
arpl
mov
int3
into
js
mov
mov
xor
pop
and
cmp
in
js
out
mov
out
inc
xchg
notb
shlb
into
lahf
sbb
cmpl
sbb
js
or
fsubrp
insb
dec
fs
lods
fidivrl
scas
xor
mov
push
or
fwait
subl
jae
push
push
mov
fwait
scas
loope
jno
sarl
xchg
push
mov
push
and
mov
jp
faddl
lods
push
arpl
jo
inc
push
push
out
movsl
aam
mov
addr16
popa
in
inc
mov
outsb
lret
aad
outsl
adcb
cltd
mov
mov
dec
inc
lcall
xchg
jl
sahf
outsl
lret
add
hlt
insb
outsl
pop
rolb
ds
int3
add
jl
sti
imul
or
jle
dec
inc
enter
mov
sub
aaa
hlt
aaa
cmp
subb
int3
add
xchg
xor
xor
cmpsl
fisubs
sub
cmp
xchg
mov
or
xchg
xchg
inc
pop
bound
das
xor
xor
ds
lret
hlt
sarl
mov
mov
pop
negb
jmp
cli
shrl
lock
xchg
inc
lcall
mov
lds
pop
xchg
xor
imull
rcr
stc
in
cmc
and
imulb
mov
gs
movsl
aad
cmp
xchg
mov
mov
lock
push
or
push
xor
or
cld
cmp
mov
or
cmpl
add
pop
cmp
enter
mov
loopne
or
out
mov
lods
test
adc
xchg
loop
test
pop
jne
pop
dec
aaa
pop
and
out
imul
ljmp
loopne
xor
sbb
pop
out
and
test
inc
rcrl
adc
sahf
xchg
mov
sbb
mov
xchg
mov
xor
shll
sbb
sub
aaa
scas
push
test
mov
mov
movsl
push
stos
movsl
or
dec
cmp
jbe
jge
scas
push
rcl
pop
adc
dec
or
sub
sub
mov
mov
adc
xchg
jmp
xchg
fdivrl
cmpb
mov
mov
jecxz
jae
dec
mov
fimuls
cwtl
inc
pop
and
cs
pop
js
and
or
xor
fbld
adc
call
xchg
aam
dec
gs
int
dec
ds
icebp
dec
add
scas
pushf
pop
push
push
aaa
sbb
mov
sub
sub
fldenv
or
push
jne
or
sub
push
adc
mov
ret
lahf
mov
pop
mov
mov
icebp
leave
sbb
lcall
mov
imul
cs
jne
pop
lahf
std
and
enter
adc
ja
stos
std
nop
stc
pop
fisubrs
xchg
repz
jnp
scas
in
sbb
push
cltd
das
fdivs
loop
ss
sbb
and
push
pop
xor
jl
sti
dec
imul
test
dec
mov
std
xor
and
repz
mov
push
sbb
lods
mov
add
push
sbb
jnp
add
std
aaa
in
pop
mov
inc
popf
jmp
mov
pop
arpl
scas
lods
sub
mov
jne
push
and
mov
daa
jmp
sbb
mov
dec
and
jl
es
dec
mov
dec
outsl
mov
push
js
mov
sub
jno
rolb
fdivrl
adc
fdivs
and
hlt
adc
dec
lret
cwtl
pop
and
inc
jmp
add
mov
add
mov
mov
lret
aad
jle
arpl
sub
out
mov
jp
std
insb
dec
stos
xorl
aas
dec
or
push
rorl
loopne
icebp
xchg
push
pushf
movsl
in
loope
adc
sahf
xchg
xchg
fdivs
lock
jmp
xor
pop
loope
jle
pop
mov
out
enter
dec
js
cltd
clc
ret
mov
and
lods
or
dec
popf
popf
jmp
in
pop
in
fcmovbe
test
nop
je
lea
jp
ja
hlt
fsts
and
cmpsb
mov
test
subb
mov
adc
pusha
jge
in
into
pop
or
bound
lds
cmp
mov
rclb
and
sbb
not
inc
movsb
push
adc
dec
xor
cltd
dec
js
mov
shll
stos
inc
dec
int
dec
push
jg
dec
roll
sbb
and
xor
rolb
mov
addb
mov
xor
mov
adc
cmpsb
cwtl
and
xchg
sub
gs
lods
cltd
nop
clc
sub
jmp
cmp
imul
jo
jge
inc
int3
adc
lcall
xchg
jecxz
add
jbe
jne
cs
andb
orb
dec
das
ret
xchg
mov
xor
inc
or
les
inc
lock
movd
dec
mov
rol
movsl
es
cld
negb
dec
test
mov
sbb
jns
out
lods
in
push
or
pop
mov
lock
xchg
outsb
dec
mov
dec
aas
das
rclb
xor
jb
in
cli
cmp
int3
imul
orl
outsl
out
cltd
sbb
stc
mov
or
pop
pushf
testl
mov
jle
imul
sbb
xchg
shlb
test
cmp
adc
xor
ja
outsl
cld
push
imul
push
push
add
lods
or
in
and
add
xor
mov
inc
mov
mov
mov
xchg
mov
icebp
add
test
lods
mov
mov
bound
mov
push
mov
add
inc
jo
js
fs
dec
jg
fidivs
aaa
push
pushl
mov
aas
push
and
sub
aaa
jg
mov
aas
fldlg2
add
mov
inc
test
mov
inc
push
add
add
push
sahf
pusha
mov
es
rcl
pop
pop
pop
clc
xor
aas
mov
cmp
jno
ret
popl
adc
daa
and
xchg
push
xchg
inc
or
cmp
test
js
cmpsl
dec
sbb
mov
xchg
sbb
pop
cwtl
xchg
xchg
lods
sbb
fsubrs
mov
xor
sbb
cld
test
add
inc
out
in
jl
push
cmpsb
adc
sbb
unpckhps
movsb
lds
pop
add
adc
mov
imul
ficoml
outsb
in
xchg
int3
push
xor
jo
ss
push
adcl
dec
jae
addr16
or
xor
dec
pop
cmp
imul
clc
mov
cmp
push
int
mov
mov
aad
pop
and
jno
inc
mov
sbb
push
pusha
pop
imul
lock
and
pop
in
roll
jp
loop
scas
pop
movsl
or
test
xor
mov
shlb
cmp
add
inc
out
mov
enter
aaa
lcall
push
xchg
popf
inc
ss
mov
js
filds
pusha
and
xchg
xor
sbb
xlat
notb
adc
fistl
clc
mov
inc
push
into
hlt
sbbb
mov
mov
push
shl
jmp
scas
jns
enter
and
inc
loope
outsb
lock
xorb
cmp
test
popa
daa
mov
mov
xlat
ja
in
addr16
dec
shll
xor
and
add
int3
cmp
loope
mov
and
and
mov
test
push
aas
and
xchg
push
xor
cmp
jge
mov
lods
add
fadds
pop
fmulp
clc
ljmp
xor
xor
sti
inc
adc
int3
popa
lret
mov
call
sub
faddl
inc
mov
cltd
jecxz
andl
xchg
int3
stos
push
and
push
cmp
sbbl
add
loop
imul
pop
inc
stos
fists
push
pushf
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
pushl
pushl
call
cmpl
jb
movl
sbb
push
add
movl
xorl
mov
xorl
push
sbb
mov
orl
xor
adcl
push
mov
orl
add
andl
mov
mov
test
movl
je
mov
and
mov
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sbb
add
mov
mov
sub
mov
xor
and
add
mov
mov
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
add
movzbl
sub
mov
sub
mov
not
xor
add
sbb
mov
decl
sub
lea
sbbl
xor
addl
xor
cmp
movl
je
addl
mov
subl
xor
add
movl
cmp
movl
jne
pushl
subl
call
mov
sub
mov
and
mov
xor
subl
add
cmp
je
adcl
pushl
andl
pushl
andl
call
and
mov
movl
cmpl
je
cmpl
ja
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
addl
xor
subl
add
movl
cmp
movl
je
mov
mov
xorl
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
andl
mov
mov
decl
mov
andl
add
andl
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
mov
sbbl
add
movl
mov
jmp
mov
or
mov
mov
add
add
mov
mov
mov
xor
add
movl
cmp
je
movl
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
jmp
cwtl
mov
cmp
mov
dec
and
in
jnp
pushf
jnp
push
dec
in
or
or
lods
mov
cwtl
cli
xchg
adc
in
jmp
xchg
mov
rcrl
ret
pushf
orb
dec
fistl
or
push
push
adc
subb
sbbb
in
mov
xor
cmp
aaa
test
mov
andl
je
lock
jg
add
mov
cmpsl
mov
nop
jge
fwait
add
cwtl
jge
jnp
popa
push
xor
fwait
lods
jae
xor
clc
adc
mov
push
movsl
jecxz
stc
cmp
mov
hlt
and
out
insb
add
lcall
sti
add
xor
mov
je
xor
and
jno
lret
add
pop
jno
adc
dec
out
leave
inc
mov
stos
mov
inc
push
cwtl
sti
mov
pop
stos
sti
mov
push
imul
shl
imul
pop
xchg
or
test
ljmp
mov
adc
int
mov
inc
mov
mov
mov
sti
xchg
push
jl
out
xor
push
mov
adc
into
out
push
shll
jnp
jo
sbb
jmp
xchg
call
scas
test
jp
xorl
shll
int3
test
sbbl
lock
xor
jecxz
sub
rorl
push
or
push
add
into
pop
lcall
mov
jecxz
data16
and
xor
mov
aaa
lret
stc
pop
ret
or
xchg
mulb
xchg
xchg
int
mov
push
test
loop
xchg
push
fstl
dec
movsb
mov
test
mov
sti
push
inc
outsl
daa
mov
cmpsl
sub
mov
jecxz
jg
out
mov
pop
outsl
scas
xor
loop
push
sub
fistpl
pop
lcall
lea
jmp
lds
popa
or
inc
push
mov
sub
mov
or
sub
add
in
cmpsb
sti
or
ret
into
enter
into
sub
sub
mov
cltd
xchg
hlt
xor
cmp
bound
xchg
dec
xor
cwtl
addr16
loop
movhps
mov
enter
rclb
add
cmp
xchg
sub
mov
loop
mov
aas
int3
fwait
push
mov
adc
jle
jo
add
fisttpl
xchg
sbb
fisubrl
ljmp
das
or
lahf
je
inc
xchg
pop
dec
hlt
test
nop
out
loopne
testb
and
xchg
and
fwait
iret
je
movsb
jo
out
fistps
bound
test
out
jo
ret
stc
enter
sub
aaa
mov
or
test
xchg
aas
pop
pushf
mov
loopne
xchg
in
inc
pop
xchg
push
loope
mov
bound
hlt
ds
pop
out
xchg
or
dec
rclb
sub
sbb
test
pop
cmp
int3
inc
xchg
add
mov
pop
popf
fisubrs
mov
cmp
cli
or
dec
or
in
xchg
out
push
out
push
xchg
add
mov
fdivp
jle
hlt
push
pushf
ret
xor
push
les
arpl
cwtl
or
xchg
iret
push
aas
stc
mov
sub
rcrb
inc
pop
lret
mov
push
sub
add
cmpsl
jns
xor
pop
dec
adc
xchg
repnz
mov
movsl
fcoms
sbb
adcb
js
xor
mov
inc
fsub
shl
ljmp
movb
cmpl
into
mov
out
dec
clc
xchg
push
xchg
mov
mov
pushf
sahf
jle
and
push
outsb
sti
call
xor
mov
sbb
sbb
xchg
lods
pop
or
xchg
into
mov
addl
into
pop
cmpsl
pop
stos
test
or
pop
sbb
xor
jno
xor
loopne
mov
sbb
jmp
test
and
xor
mov
aas
cmp
mov
xor
or
aas
fldt
iret
xor
out
test
mov
pop
out
jnp
roll
aam
imul
sub
les
lea
scas
xorb
nop
test
sbb
xchg
inc
movsb
mov
test
jg
jmp
aad
inc
or
rorb
in
ljmp
aaa
enter
ficoml
xor
sbb
mov
sub
pop
call
sub
push
xor
mov
loopne
pusha
sbb
cmp
or
iret
inc
push
shlb
scas
sub
mov
stos
push
jns
push
mov
js
inc
dec
pop
adc
lods
test
test
fsubrs
or
fidivs
push
ret
xor
call
bound
aam
mov
sbb
mov
aas
ljmp
fidivs
iret
hlt
loopne
dec
lahf
ljmp
orl
ljmp
push
cmp
inc
adc
dec
cmp
outsl
xchg
les
inc
lods
jb
out
daa
cmp
pop
pop
out
xlat
push
stos
or
enter
out
jle
xchg
mov
ret
cwtl
inc
xchg
cs
or
rorl
addb
ret
lods
push
push
hlt
add
or
or
pop
dec
xchg
add
push
cmp
mov
sti
jno
dec
xor
clc
dec
in
je
arpl
mov
pop
add
and
mov
repz
int3
adc
movsb
imul
inc
out
add
xlat
mov
push
js
lods
inc
fstp
mov
int3
pop
inc
lods
ret
lds
mov
jmp
int
cmp
push
and
push
jb
mov
popf
mov
jge
push
int3
int
or
pop
mov
ds
je
nop
insl
daa
out
and
loope
repnz
jl
enter
jp,pt
scas
vcvttsd2si
lods
arpl
mov
lock
mov
jo
ret
dec
push
sbb
xchg
cmp
and
xor
cmp
sbb
pop
shll
call
shl
mov
ljmp
pop
scas
sub
xchg
push
cmp
mov
adc
xchg
xor
movsb
nop
push
fbstp
insl
jmp
shlb
stos
out
sbb
fs
rolb
loope
popf
mov
pop
jecxz
cmpsb
or
inc
push
pop
and
jb
les
imul
iret
and
in
and
js
stc
into
jg
push
lock
out
jp
repz
mov
in
or
cld
pop
popf
pop
inc
aad
or
shrb
add
sti
lret
daa
mov
sub
mov
add
sti
filds
sbb
dec
fistl
dec
dec
mov
sbb
xor
dec
adc
adc
sbb
push
dec
mov
or
out
pop
adc
into
and
out
shrl
and
dec
xchg
out
jle
xchg
xchg
xor
mov
insl
mov
dec
in
fnsave
xchg
adcl
cmp
lods
dec
mov
xchg
mov
xor
das
cmpsl
mov
and
sub
cltd
cmpsl
mov
add
and
jecxz
stc
loope
jecxz
pop
test
cmp
mov
fbstp
mov
xchg
adc
gs
push
jmp
mov
xor
fwait
xchg
mov
push
jmp
aad
xor
push
loopne
ss
inc
ret
xor
addr16
jno
shrb
add
jne
lds
cld
fnstcw
js
xor
arpl
rorb
mov
jae
stc
mov
repz
xchg
xchg
add
cmpsb
into
sbb
sub
cmpsb
or
inc
or
inc
je
scas
out
cvtps2pi
ret
jecxz
int
mov
jo
and
mov
xchg
xchg
in
adcl
out
sbb
mov
cmp
xchg
js
test
ret
pop
movsb
pop
jl
sbb
xor
jo
leave
loope
xor
je
xchg
push
roll
lods
push
pop
mov
add
mov
adc
subl
push
push
pop
outsl
jae
mov
shll
and
int
aam
leave
mov
hlt
mulb
xor
xchg
mov
or
imull
scas
aam
inc
jbe
mov
mov
sti
lea
daa
mov
sub
xchg
loopne
mov
jo
stos
sbb
push
jae
scas
arpl
inc
cmp
sub
mov
aaa
mov
popa
jle
cmp
arpl
push
orl
lock
pushf
jecxz
sbb
out
xor
test
out
add
sti
xor
out
inc
loop
enter
les
shr
pop
mov
popa
push
aad
xor
jmp
stc
int3
and
sub
add
pop
mov
rolb
push
inc
int
cli
mov
sbb
inc
pop
test
nop
add
sbb
push
and
xor
andl
loope
pop
jo
test
lds
and
xlat
cltd
mov
pop
lea
dec
pushf
sahf
mov
or
dec
ljmp
loop
jecxz
loop
dec
addps
pop
iret
nop
and
lock
les
aam
sti
stos
jg
stos
mov
pop
andl
ret
pop
cmp
adc
push
inc
adc
shr
cld
arpl
or
jbe
dec
imul
movsl
mov
movb
mov
push
mov
pop
add
rep
mov
jnp
mov
xchg
data16
aaa
loope
test
mov
stc
mov
fwait
cmp
rcrl
popa
jge
cs
or
cmp
sub
xchg
and
ljmp
jbe
cs
insb
addr16
add
out
xor
bound
mov
dec
repnz
inc
pop
mov
insl
push
add
mov
jle
adc
incl
icebp
dec
sti
cmp
or
sbb
stos
jp
fcmovu
gs
or
dec
mov
loopne
mov
dec
sti
pop
adc
dec
ret
mov
push
mov
adc
jl
ret
sbb
pop
jp
jg
adc
clc
mov
xor
cmp
pop
jbe
mov
sahf
push
cmp
xchg
test
jmp
sbb
addr16
cmp
mov
add
push
pop
or
test
lds
pop
and
jmp
in
out
mov
fldenv
and
cld
aad
call
das
or
arpl
lock
pop
mov
add
fcmovne
pop
cmc
inc
cmp
xlat
sahf
mov
je
rol
mov
in
imul
mov
shrl
sbb
xchg
mov
jle
jp
dec
mov
dec
movsb
inc
repnz
movsb
lahf
fwait
ja
iret
ds
inc
or
les
mov
outsl
cltd
mov
dec
mov
and
iret
popf
jnp
sbb
mov
push
data16
mov
xchg
pop
push
fimull
sbb
mov
rorb
mov
adc
insb
push
dec
xchg
push
and
je
decl
gs
cmp
iret
pop
cmp
iret
mov
inc
xor
cmp
mov
adc
or
adc
add
xchg
shlb
cs
testl
adc
mov
sbbb
mov
sbb
dec
pop
aaa
add
mov
std
fwait
mov
dec
lock
sti
repnz
out
ljmp
mov
test
adc
xorb
pop
dec
unpcklps
jg
xchg
mov
mov
mov
pop
pop
jnp
leave
mov
sbb
or
int3
ja
push
or
pop
idivl
push
out
stos
or
lods
hlt
dec
pop
push
hlt
jle
into
repnz
or
jmp
movsb
mov
lahf
or
out
xor
pop
jne
pop
jl
mov
xor
scas
sbb
or
imul
ret
or
call
fstp
lea
arpl
fmull
adc
in
push
fsub
push
sbb
repnz
or
sub
movsb
cmpsl
imul
outsb
bnd
je
jmp
paddusw
pop
popw
or
pop
mov
cmp
aad
pop
sub
add
pop
mov
test
gs
push
xchg
pop
stc
sbb
sub
fstpl
out
dec
push
pop
rcrb
jecxz
cltd
sbb
mov
cs
cli
xchg
sbb
mov
xor
jo
outsb
and
mov
push
cmp
inc
xor
rep
fstpt
lret
das
mov
mov
rclb
cmc
imul
scas
popf
dec
popa
fldl
icebp
popa
add
cmp
cmpsb
sbb
pop
and
ja
popa
vaddss
pop
mov
or
lods
les
push
call
mov
mov
jmp
push
rep
mov
dec
movsl
lret
addr16
outsb
pop
cld
xchg
cmp
sbb
fldcw
adc
lea
push
push
pop
shlb
int
addr16
pop
lcall
jg
cmpsb
pop
jmp
dec
outsb
mov
insb
mov
mov
int
dec
sti
cmp
test
outsb
push
xchg
mov
mov
fs
mov
stos
in
mov
and
cli
daa
in
mov
bnd
sub
fcmovu
dec
or
shr
lcall
xchg
jae
sub
mov
arpl
xchg
lock
fsubrs
fisubl
ss
outsl
shl
je
pusha
shl
loopne
pop
dec
push
loope
pop
pop
sarb
lret
cmp
cmc
mov
mov
notb
xchg
outsb
mov
mov
sbb
scas
js
jno
insb
repnz
insb
xchg
jae
out
mov
aas
dec
pop
adc
lcall
icebp
xor
mov
sbb
pop
add
addr16
or
stos
shll
movsb
mov
rol
insl
add
clc
call
inc
push
xchg
and
cli
cs
xchg
bswap
fwait
jmp
movsb
push
sub
inc
sub
jbe
lods
cmp
fisttpll
mov
or
div
imul
clc
insl
fisubs
jg
out
and
push
lahf
mov
add
jmp
xor
dec
dec
rclb
repz
add
sub
cmpsb
shlb
xchg
movsb
hlt
jbe
xor
cmc
ret
jg
and
das
scas
dec
shr
orl
xchg
adc
adc
pop
lret
arpl
mov
jne
inc
and
add
or
dec
mov
mov
std
jmp
rclb
addr16
ficomps
adc
push
adc
stc
outsl
jmp
je
fmull
lcall
mov
jge
ljmp
sbb
or
loope
inc
fistps
into
sbb
pop
daa
xor
bound
push
ret
pushf
push
clc
jge
js
mov
push
mov
rcrb
std
aam
fiaddl
sbb
inc
loop
lods
sahf
fistps
pavgw
jmp
divb
sbb
fidivrs
sbb
mov
cltd
push
push
imul
scas
and
clc
xchg
getsec
xor
clc
cs
mov
pop
imul
out
outsb
pop
add
adc
scas
scas
fisttpl
mov
cs
adc
sbb
dec
mov
out
cmp
jg
stos
jo
ret
sub
cwtl
xchg
into
jb
or
add
inc
pushf
stc
ficoml
mov
es
es
cs
lods
pop
aas
or
imul
cmpsl
push
mov
xor
subl
push
mov
jecxz
xchg
push
lret
jl
rorl
imul
jne
jbe
pop
and
mov
nop
dec
addr16
fadd
sbb
pop
orl
test
stc
inc
sub
fstps
inc
push
push
push
add
xor
jmp
cmp
or
fwait
inc
adc
mov
imul
cmp
scas
jbe
add
imul
fstp
test
jns
jae
leave
hlt
iret
xor
dec
jns
nop
es
sahf
push
pop
neg
push
mov
or
out
negb
loopne
sub
rcrl
and
mov
inc
mov
xor
and
mov
push
fadds
cmp
push
out
adc
fsubrs
imul
ljmp
jo
mov
into
hlt
pop
loopne
pop
je
lret
inc
popa
cwtl
repnz
out
push
cmp
mov
repnz
outsl
frstor
dec
mov
std
sar
and
into
sbb
add
cmp
mov
and
inc
jge
fcoml
repnz
into
cmpsb
loop
icebp
and
cmp
and
cs
adc
sub
int
lcall
shlb
call
xchg
dec
out
mov
insb
incl
inc
leave
push
pop
mov
sub
les
dec
xor
sahf
add
xchg
fwait
or
pop
push
sbb
scas
cs
mov
shl
or
nop
lods
enter
fwait
xchg
in
das
icebp
movsb
int
lret
test
dec
fsubrs
adc
test
test
imul
test
add
or
cmpl
iret
jle
pushf
or
xor
xchg
add
jno
or
dec
or
stos
mov
sub
addr16
sub
adc
clc
cmp
test
sbb
cs
mov
or
imul
xchg
jmp
int3
mov
ret
cmpsb
or
inc
ret
cmp
ss
rcl
inc
mov
or
cs
aam
movsl
adc
andl
adc
xor
into
enter
icebp
xchg
add
dec
jecxz
pop
call
xchg
mov
fndisi(8087
data16
pop
enter
jg
cmc
mov
arpl
jb
and
data16
mov
pop
sub
cmp
or
jo
xorb
jb,pt
test
push
in
xchg
cmpsl
pop
xchg
sbb
jl
pushf
ss
cmp
aam
mov
and
popf
icebp
shlb
add
out
adc
jae
mov
aad
int3
mov
jns
call
push
popf
shll
jns
mov
les
pop
cwtl
add
push
test
mov
popa
mov
xchg
push
dec
testl
dec
in
push
inc
jb
push
mov
lock
mov
mov
and
sub
and
xchg
inc
popf
dec
pop
incb
mov
mov
and
mov
mov
je
jae
arpl
mov
sbb
push
ret
xor
test
pop
mov
shrb
mov
xor
adc
pop
lods
lret
or
ret
je
pop
inc
sub
xor
inc
xchg
roll
in
neg
shrl
sbb
out
xor
jmp
jnp
iret
add
in
xchg
mov
into
aas
sarl
imul
inc
aam
ret
loop
dec
loope
out
bound
imul
repnz
add
js
sbb
inc
lcall
pop
scas
mov
imul
pop
adc
pop
hlt
sti
fcmovbe
or
sbb
mov
jno
ficoms
leave
add
test
push
mov
jo
arpl
mov
jne
jg
stos
mov
imul
mov
and
xchg
mov
xlat
xchg
push
arpl
mov
popf
cli
pop
xor
enter
xchg
les
pop
mov
mov
mov
lret
adc
fs
iret
or
test
icebp
xchg
sbb
loop
and
mov
cmp
xchg
data16
fisubs
dec
cmp
ja
fsubrs
mov
cmpsb
shlb
loopne
xor
or
or
and
orb
test
mov
cli
add
movsb
and
jmp
sbb
xor
jp
sbb
jnp
xor
xor
add
loopne
addr16
inc
xor
inc
fmul
inc
jl
ret
mov
jle
pushf
adc
cwtl
aam
pushf
dec
sub
nop
or
mov
bound
adc
loopne
dec
ror
sbb
out
push
jno
out
test
xchg
mov
rclb
xchg
push
push
inc
lods
mov
daa
sarb
daa
push
fdivrl
int3
andb
roll
into
mov
jl
fldt
cmp
int3
fmulp
jecxz
popf
xor
pop
aam
mov
mov
movl
fistpll
cltd
mov
dec
mov
xchg
jo
jg
lea
inc
int
inc
imul
sub
pop
nop
xor
stos
in
shrb
adc
mov
jno
dec
sbb
stc
fdivl
cmp
push
outsl
scas
cmpsl
adc
fldt
repnz
dec
subl
and
jp
xchg
xchg
push
mov
hlt
sbb
mov
sub
ljmp
sbbl
fwait
stos
cmp
pop
lea
int3
pop
popa
sbb
test
mov
cmp
bound
push
dec
push
out
repz
dec
adc
xchg
cmpsl
js
mov
rclb
rol
xchg
inc
mov
and
ds
aas
frstor
xchg
adc
push
adc
sbb
movsl
cld
fiadds
aad
imul
clc
sbb
sbbl
jle
mov
insb
pop
fisubl
in
mov
pop
lret
fdivrl
fdiv
scas
shlb
test
sub
push
cld
adc
push
xor
or
pop
ljmp
mov
call
xor
xchg
sub
shrb
fwait
push
mov
cltd
test
stos
and
fwait
push
mov
aam
mov
dec
ds
lret
add
or
movsb
shl
pop
pushf
arpl
mov
sbb
fldenv
sbb
jp
xor
int
ret
mov
pop
insl
in
xor
add
les
aas
insb
xchg
push
sbb
lods
stos
dec
cmp
pop
mov
cmpl
ret
sub
in
xor
xchg
xlat
xor
lods
dec
xchg
aaa
cmp
pop
daa
arpl
fcoms
aaa
inc
imul
jbe
jp
ds
mov
addr16
inc
mov
jbe
jg
inc
dec
push
imull
mov
outsb
pop
icebp
cli
xor
cltd
add
jecxz
push
fmuls
mov
jb
jbe
pop
aas
imul
cld
subb
xchg
sub
rcl
aam
xchg
cmp
sbb
cmp
pushw
adc
pop
outsl
add
jp
jno
imulb
and
out
cmc
fisubs
fcoms
stos
and
push
rorl
push
sahf
pusha
xchg
fldcw
aad
inc
add
lds
lods
mov
aad
in
das
add
pop
dec
jo
pusha
cmp
adc
imul
and
xor
pushf
inc
mov
pop
outsb
or
int3
mov
sub
push
test
sbb
insb
add
mov
pop
jnp
loop
mov
and
jnp
not
aam
cld
xor
cmpsl
stos
jecxz
mov
jno
ljmp
pushf
push
cli
sub
push
je
lods
mov
mov
into
inc
test
jo
xchg
and
dec
jns
jge
dec
ficomps
call
or
push
ret
pop
mov
lds
popa
out
push
dec
inc
push
or
dec
push
lods
push
scas
pop
xorb
mov
les
lods
fldl
repnz
add
inc
scas
outsb
les
mov
mov
in
xchg
mov
lods
pop
push
adc
xlat
mov
jle
sahf
inc
mov
jbe
test
pop
cwtl
iret
flds
and
xchg
lods
dec
mov
mov
pusha
or
mov
fidivs
mov
jl
inc
jno
scas
cmpsb
jae
cmpsl
mov
nop
aad
push
jno
js
in
jbe
clc
daa
lret
jnp
mov
es
jge
pop
fsubrs
es
xor
sbb
mov
and
cmp
push
sti
aas
lods
jno
sti
rcrl
inc
pop
inc
jno
jl
stos
in
mov
xor
outsl
pop
fs
adc
call
stc
insb
fsubrs
push
pop
fsubs
inc
mov
subb
lret
adc
inc
test
add
enter
push
adc
dec
in
sub
js
insl
aas
rep
cli
cmp
ss
int3
dec
mov
add
dec
leave
fs
inc
xchg
jp
loope
dec
pop
push
mov
jb
xchg
jecxz
les
jmp
inc
scas
pop
cmp
dec
and
sarl
and
adc
cmp
sbb
add
or
mov
aad
pmullw
sahf
clc
inc
aas
je
add
cwtl
shrl
lcall
cs
ljmp
sub
mov
call
jo
pop
outsl
mov
std
lea
loope
adc
aas
enter
hlt
or
js
add
loopne
mov
dec
dec
push
dec
in
adc
adc
nop
mov
xor
cmp
flds
mov
inc
sub
xchg
sbb
sub
sahf
xchg
mov
sub
je
jnp
sarb
shr
sub
into
cmpl
lods
mov
aad
clc
push
rcll
and
or
test
mov
inc
in
mov
mov
mov
movb
js
int
xchg
pop
icebp
push
rcrb
sub
aam
mov
fwait
mov
ss
mov
mov
fcomps
das
mov
add
sbb
pop
dec
insl
fsts
adc
test
lds
or
out
jg
pop
pop
icebp
ss
xchg
adc
xor
hlt
push
xchg
imul
ja
adc
inc
inc
cmpsl
mov
lret
sub
insb
xchg
hlt
fldln2
aad
inc
sahf
mov
fwait
imul
push
mov
cmpsl
fsubrs
push
es
cmc
sub
adc
adc
or
bound
push
into
jmp
ret
adc
in
or
or
lcall
or
cmp
das
mov
test
mov
inc
subl
push
shlb
repnz
xchg
int
je
dec
in
mov
sub
pop
inc
ret
mov
aam
fwait
mov
mov
xchg
fistpll
sub
sti
cli
stc
outsl
push
xor
pop
mov
dec
outsb
loope
xchg
std
aas
nop
pushf
cs
repnz
push
and
mov
jno
in
int3
cmp
jmp
dec
pop
vmovq
add
push
scas
cs
mov
pushfw
hlt
lods
addr16
ds
pop
nop
jmp
or
mov
push
pop
aam
jecxz
xor
test
push
scas
sub
sbb
xchg
popa
iret
dec
mov
push
dec
int3
fcmovnu
cmpsl
mov
inc
clc
popa
mov
cmp
and
adc
mov
add
xchg
push
stos
fidivrs
cmp
dec
adc
mov
dec
aad
pop
stc
pop
mov
scas
imul
fcom
cmp
fadd
scas
and
mov
test
xor
icebp
mov
xchg
push
cmpxchg
mov
inc
dec
push
and
or
test
dec
or
jmp
sub
adc
or
mov
jmp
xor
loopne
addr16
aas
dec
sti
int3
imul
cmp
das
pop
push
mov
pop
addr16
sub
repz
inc
and
mov
shl
dec
mov
sub
mov
popf
add
dec
and
cmp
jg
sub
jnp
pop
movsl
stos
test
inc
fdivl
xor
imul
and
stos
les
ja
subb
test
jg
pushf
mov
loopne
jle
xor
sub
sbb
lahf
leave
aaa
sarb
je
jp
test
xchg
nop
xchg
rol
js
insb
add
xor
adc
cli
dec
xchg
imul
es
xor
daa
mov
mov
sbb
mov
das
xchg
adc
jae
out
loopne
repnz
ret
inc
out
mov
shll
rcr
jle
dec
sub
lcall
mov
mov
je
ret
or
ficoms
and
mov
call
in
or
cmp
inc
sub
sub
jle
outsl
call
pop
in
mov
push
je
adc
mov
xor
pop
inc
out
push
xor
mov
push
sahf
sub
fld1
and
mov
or
xchg
add
cmp
pop
add
mov
fsubl
mov
push
pop
pop
dec
adc
sub
dec
or
push
test
das
imul
scas
js
icebp
stos
jge
aam
fidivrl
pusha
sbb
ret
das
jo
inc
lahf
sub
roll
bswap
mov
jmp
inc
in
cmp
dec
addr16
inc
xchg
pop
inc
push
flds
add
addr16
mov
les
xor
nop
jbe
fisttpll
cmp
gs
dec
mov
and
fisubs
add
inc
fisttps
sbb
inc
add
jb
out
jg
clc
movsb
fdivrl
xchg
in
stos
lods
and
cmc
out
inc
dec
mov
test
xor
arpl
test
das
lahf
and
jnp
outsb
fsubr
xchg
ss
pushf
mov
arpl
add
cli
enter
cmp
pop
movd
jge
mov
jg
leave
cwtl
rcl
popa
or
rcll
cmp
clc
in
cltd
fisubrl
add
test
add
add
cli
lret
or
clc
hlt
xor
adc
leave
sub
lea
outsb
push
mov
jne
push
xchg
pop
into
jbe
push
lea
repz
adc
dec
pushf
cs
rorb
xor
pmovmskb
scas
addl
inc
jl
je
fnstcw
idivl
pop
lret
lcall
dec
je
xor
add
outsl
rorb
mov
aam
mov
popf
mov
pop
cmp
xchg
lret
cmp
repnz
xor
xchg
int3
mov
popa
out
dec
inc
rclb
pushf
jg
stos
fcmovnb
and
loop
push
insb
ja
cmp
mov
adc
and
dec
push
sub
repz
fs
mov
popf
sbb
dec
out
mov
xchg
gs
ret
outsb
mov
shrb
push
push
outsb
mov
test
mov
test
in
sub
fwait
fs
xchg
dec
es
mov
aad
sbb
sub
mov
ret
jle
jle
rol
push
adc
in
sbb
aas
jge
push
mov
imul
fistps
inc
xlat
sbb
psrlw
jmp
inc
jmp
jo
repnz
and
mov
cli
loopne
mov
lcall
mov
popf
lahf
cmpsl
sub
adc
push
adc
test
divb
aas
push
lods
inc
cmp
jmp
push
dec
cld
aaa
jbe
fcmove
addr16
and
pop
sub
insl
movsb
mov
lret
fnsetpm(287
and
repz
mov
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
jmp
cmpsl
fisubrs
jbe
jbe
outsb
xchg
cmpsb
test
pushf
jnp
jo
rcr
dec
popa
xorl
fistpl
mov
pop
lcall
push
cld
jns
outsb
repz
lcall
lahf
aaa
xor
bound
sbb
mov
push
xchg
dec
nop
inc
gs
mov
divb
dec
loope
into
ror
cmp
add
pop
je
push
jle
sbb
xchg
cli
adc
sub
imul
fwait
test
arpl
sub
xchg
cli
sarb
lahf
sub
and
insb
push
sub
insl
popa
mov
pop
cltd
ds
imul
jmp
shlb
lods
stos
push
popa
cmp
mov
ja
xor
lods
loopne
cmp
ret
je
aaa
arpl
xor
push
or
mov
jle
jecxz
or
rclb
or
jl
inc
dec
sub
mov
out
or
fldt
sub
mov
inc
mov
xchg
aas
decb
or
cmpb
scas
jle
shll
jp
rcl
arpl
in
mov
dec
ret
divb
cli
cmpsb
pop
fstl
ret
movsb
out
stc
pop
outsl
push
stos
push
je
inc
out
nop
cmp
gs
or
scas
hlt
pop
xor
jge
pop
sbb
mov
push
mov
das
lret
xchg
imul
mov
lret
outsb
notb
or
push
idivl
lret
stos
aaa
les
es
sub
xchg
aaa
adc
adc
gs
push
jae
repnz
jae
out
loope
pop
adc
dec
stc
mov
sbb
fisubrs
mov
cs
setp
adc
mov
sbb
fwait
ljmp
imul
stos
cmovns
dec
pusha
jnp
cmpsb
mov
add
daa
aas
lret
ret
adc
jne
push
aam
int
sbb
loopne
xor
jns
adc
fstl
sbb
sbb
loopne
stos
out
stos
bound
or
dec
adc
js
dec
pop
into
fsubs
lock
pop
add
sahf
jmp
mov
in
push
push
cmc
inc
leave
das
xchg
movb
cmpsb
cltd
cli
shll
push
ljmp
mov
mov
xchg
and
jbe
fcomps
pop
in
ja
adc
inc
fiadds
inc
mov
pop
stos
add
push
stc
dec
mov
fidivl
dec
push
cmpsl
dec
cmc
add
out
stos
mov
mov
pop
frstpm(287
xor
loope
jnp
mov
lret
jl
in
mov
mov
or
sbb
dec
js
mov
adc
mov
dec
dec
xor
sub
push
sbb
adc
mov
or
aaa
sbb
into
loope
pop
insl
jg
mov
mov
inc
decb
cmpsl
inc
sbb
add
jg
out
jmp
xor
cmp
out
rcll
xchg
inc
pop
ljmp
and
xchg
fstpl
jp
bound
dec
or
xor
pop
push
xchg
loop
mov
addr16
lods
jne
cmp
ss
scas
xor
push
inc
pop
or
xor
pop
and
xchg
mov
dec
xchg
icebp
call
fcmovu
jnp
or
fildll
mov
and
pop
adc
adc
adc
xchg
lods
push
lea
int
xchg
es
jnp
jle
xchg
add
jae
or
imul
or
inc
in
push
mov
push
dec
mov
xor
adc
inc
in
xor
inc
fmul
and
mov
lcall
xor
movsl
push
mov
pusha
sbb
jg
cltd
cmp
shrl
pushf
in
outsl
mov
adc
scas
mov
dec
ja
mul
adc
xchg
or
lods
aas
adc
cwtl
pop
dec
jnp
jno
stc
sbb
dec
pushf
cmpsl
pop
dec
dec
repz
inc
pop
outsb
push
mov
dec
in
and
rcr
repnz
jo
ljmp
cmc
add
jecxz
fwait
xor
jmp
or
nopl
dec
arpl
iret
inc
cmp
insb
lret
mov
in
pop
mov
movsl
movsb
inc
testl
das
adc
mov
xor
in
cmp
mov
aaa
push
inc
hlt
bound
adc
in
sub
ljmp
jb
cmp
js
mov
fsubs
or
add
rorl
sbb
or
out
dec
dec
push
sub
push
insl
rcrb
pop
mov
inc
add
loop
nop
ret
add
jnp
into
leave
js
mov
jle
int
lds
stos
aas
call
xor
rcr
sub
sub
dec
mov
repnz
in
aad
scas
push
push
cltd
dec
aad
xor
inc
dec
inc
sahf
loope
movsl
mov
mov
mov
pusha
fsubrl
jecxz
orb
add
clc
mov
cmpl
inc
gs
mov
add
jnp
dec
mov
jmp
cld
push
loop
addr16
testl
in
mov
sbb
or
movsb
mov
push
lock
cs
mov
or
cs
sbb
out
nop
insb
inc
add
sub
pop
jnp
lods
cmp
jl
popf
sub
cmp
sbb
mov
leave
cmp
pop
iret
cmp
or
xchg
ja
es
jo
cmpb
push
jl
aam
jns
mov
in
loope
leave
out
lods
cwtl
nop
or
lds
movsl
inc
xor
rcrl
stos
xchg
fsubrs
jno
ljmp
out
fs
ss
out
ret
outsl
in
daa
stc
into
sbb
dec
mov
lods
xchg
jbe
rcll
lahf
cltd
icebp
dec
and
data16
imul
and
dec
push
fidivs
outsl
adc
and
jl
fwait
jg
jae
dec
inc
cs
push
mov
sub
jbe
jbe
fdivl
cmp
in
call
mov
inc
xchg
push
jb
and
dec
pop
out
gs
push
push
jb
stc
sub
out
nop
rorb
mov
cmc
push
xor
mov
dec
into
pusha
outsl
and
sbb
adc
add
pushf
xor
mov
insb
into
jmp
and
jno
mov
mov
jle
test
fstl
xor
sbbb
int
test
xor
jp
add
lea
loopne
push
rclb
test
jmp
pop
mov
out
rcrl
pushl
push
lcall
out
test
dec
xchg
ja
insl
lea
cmp
mov
movsb
xor
negl
lods
in
pop
movsl
in
inc
out
out
dec
xlat
xchg
xchg
pop
jle
popa
inc
xchg
jne
fsubs
push
cmp
cltd
sub
test
cli
adc
sbb
mov
shll
cmp
xor
aaa
adc
pop
daa
mov
clc
xchg
nop
inc
sub
mov
sub
push
jg
mov
mov
xor
lea
in
mov
pop
and
lea
add
cltd
lea
test
notl
jno
sbb
fcomps
sub
test
icebp
sahf
jnp
mov
mov
imull
loopne
fsubl
dec
push
ret
imul
cltd
ljmp
repz
mov
test
outsb
and
xchg
jmp
shll
fidivrs
push
icebp
lcall
popa
bound
shlb
mov
and
sub
mov
rolb
jge
mov
push
mov
orb
jmp
ret
xchg
ret
lret
movsl
iret
aad
dec
push
je
push
xor
arpl
mov
nop
lods
sub
rcl
dec
cmc
loope
jb
movsw
in
sahf
pop
jecxz
pushf
popf
shl
pop
out
dec
push
test
cltd
ret
or
std
loop
sub
stos
jbe
inc
dec
inc
push
sbb
repz
sub
pop
cmpsb
repnz
jecxz
jbe
gs
mov
and
mov
mov
push
mov
int
mov
jno
sar
pop
loopne
iret
out
sub
icebp
loop
mov
add
les
int
sub
movsb
jl
ss
lods
push
es
xor
pop
xchg
jge
jnp
inc
mov
xor
clc
sub
dec
cmp
lods
mov
lcall
dec
cmp
cmp
inc
adc
sbb
jg
and
movsb
xchg
cltd
xchg
xchg
jmp
lea
mov
adc
xor
push
jecxz
jp
add
out
pusha
ljmp
sbbb
pop
mov
inc
xchg
mov
xor
subb
jg
xor
mov
mov
lds
dec
addr16
pop
xchg
lahf
stc
sbb
cmpsl
pop
add
add
test
and
rclb
xchg
sbb
addr16
jbe
fadds
idiv
sbb
mov
movsl
jnp
add
mov
popa
mov
out
dec
fs
xchg
ret
ret
adc
adc
cwtl
push
mov
mov
es
pop
gs
icebp
fdivs
sbb
xor
pusha
inc
pop
push
das
movsb
or
push
mov
inc
push
clc
imul
mov
jle
and
or
lret
rclb
pop
jns
jo
pusha
out
cmp
sbb
das
sub
hlt
push
jl
sub
dec
push
insb
icebp
jmp
cmpsb
das
adc
xor
ret
or
pop
pop
xor
out
fcmovne
pop
test
jg
mov
dec
sub
jl
add
cmc
js
sbb
jns
daa
inc
push
js
cmp
outsl
sbb
inc
sub
mov
fimuls
fcomps
sub
mov
data16
bound
mov
mov
nop
pop
cmp
gs
fisubrs
je
xor
rorb
pushf
sbb
pop
js
out
mov
sbb
sbb
xor
sub
xchg
or
mov
clc
in
cwtl
xor
aam
mov
jmp
inc
aaa
std
sub
mov
int3
clc
mov
inc
frstor
inc
jp
arpl
xchg
lock
sub
into
fistps
out
idiv
int3
and
sbb
mov
and
mov
dec
push
std
push
dec
rolb
pop
ret
cld
pusha
mov
lret
jp
iret
ret
in
mov
test
test
or
sub
idivb
bnd
repnz
outsl
les
lahf
xlat
dec
popa
sbb
mov
callw
xchg
mov
cwtl
cwtl
das
adc
mov
push
xor
icebp
outsl
hlt
mov
push
sbb
mov
pushf
push
in
cmpsb
sahf
xchg
jns
clc
das
or
fidivs
sub
pop
xchg
and
mov
or
adc
pushfw
and
lret
or
mov
out
bound
ss
movsl
std
inc
fiadds
ret
jnp
and
loope
lds
popf
xor
bound
or
mov
dec
pop
test
push
inc
mov
xchg
ds
lods
xor
icebp
lea
adc
inc
aas
xchg
xlat
ret
fcmovne
dec
bound
mov
dec
das
jecxz
pop
jecxz
ret
sub
xor
pop
js
fstpl
jae
add
int
or
outsb
push
lods
jno
jge
out
mov
pop
jle
mov
in
adcl
out
push
mov
gs
sub
rcll
pop
add
fdivl
push
adc
xchg
push
or
cld
push
pop
fistpl
dec
pop
add
push
sub
fld
cld
jle
push
dec
mov
push
or
push
dec
inc
pushf
bnd
pop
mov
jl
mov
mov
cmp
cmp
jge
dec
js
roll
mov
and
pop
sbb
int
pushf
repnz
xchg
jb
mov
jo
dec
push
lods
nop
rolb
mov
mov
xchg
cli
daa
sarb
ficomps
push
add
push
lret
stc
jb
ss
push
ds
rclb
dec
pop
sbb
sub
mov
ret
push
popf
push
shl
push
mov
stos
push
push
pop
adc
cmpl
insb
ret
jne
and
hlt
dec
lods
hlt
imul
in
aad
inc
fcomps
jle
push
xor
adcl
loopne
cld
aas
cmp
cmp
jmp
imul
jl
mov
pop
aaa
enter
idivb
ret
cmp
mov
pushf
or
inc
pop
dec
test
lds
ljmp
sbbb
cs
mov
push
enter
lods
mov
pop
and
inc
pop
mov
xor
cli
mov
call
dec
fisubrs
push
dec
mov
lods
xor
jmp
gs
lahf
push
mov
or
jmp
add
or
ds
shl
jmp
mov
push
sbb
nop
out
push
insb
loope
leave
push
les
and
into
out
out
dec
push
fdivrl
lods
out
mov
mov
pop
dec
aam
pop
push
lods
aam
lea
xchg
cmpsl
mov
mov
inc
int3
mov
mov
or
xor
mov
pop
lret
maskmovq
idivl
and
test
xchg
mov
lds
in
lds
xchg
movsl
sub
xor
cwtl
sbb
adc
fs
orl
push
shrl
aam
cli
popa
xor
ss
dec
mov
sbb
mov
cmc
xor
imul
pop
fnstcw
adc
mov
jae
mov
scas
fcmovbe
rorl
cmp
fcmovnbe
es
rolb
aam
or
push
xchg
pop
nop
mov
push
data16
fldenv
ljmp
rcll
push
movsl
jbe
xorb
stos
lods
into
les
insl
sbb
add
or
mov
sbb
jbe
cltd
fstl
in
add
and
movsl
enter
ss
hlt
push
out
push
add
xorb
pop
mov
dec
xor
test
cmpsl
fwait
out
es
jae
and
push
cmpsb
or
movsl
xchg
adc
shlb
mov
xor
in
rolw
push
das
fisubrs
movsl
data16
fsubrp
loope
scas
jno
push
mov
enter
push
int3
loope
sub
dec
xlat
test
push
mov
pop
jne
imul
inc
das
and
es
xchg
xchg
mov
pop
pushf
add
and
test
ss
jg
mov
adc
loop
xchg
in
clc
mov
lahf
lret
imul
mov
cs
pop
es
lahf
popf
js
mov
xchg
push
aam
sbb
push
ss
xor
ds
fnsave
in
imul
dec
hlt
xchg
std
lcall
lret
ljmp
add
xchg
addr16
shl
icebp
test
loop
xchg
enter
and
mov
xchg
sbb
sbb
xchg
and
stos
or
shlb
lods
xor
push
mov
les
xor
sbb
inc
mov
sahf
xor
out
testl
dec
out
pusha
lods
pop
sub
push
enter
mov
lret
cmp
mov
test
cmp
or
loop
cmp
sub
push
xor
into
cmp
mov
popf
call
sbb
test
pop
jbe
and
std
fisttps
pop
out
mov
sbb
or
scas
inc
cmp
mov
sbb
add
in
inc
pop
push
icebp
push
popf
daa
mov
pop
ss
sub
pop
pinsrw
ss
test
inc
test
loopne
xor
dec
and
js
push
xchg
arpl
jecxz
ss
dec
faddl
out
xchg
or
xchg
int3
loopne
test
push
adc
inc
push
cmpsl
imul
aas
inc
jb
sbb
lcall
xor
pop
out
xor
and
push
sub
xchg
sub
lds
les
push
ucomiss
xchg
push
pop
or
jbe
stos
and
lods
adc
sahf
clc
and
rclb
sbb
aas
xchg
in
pop
bound
fs
lahf
repz
dec
sub
jl
test
and
pushf
xor
mov
scas
jge
xchg
clc
out
rolb
in
fdivl
test
mov
cmp
dec
cwtl
cmc
cmp
adcb
jne
add
adc
jno
sbb
icebp
xor
aad
pop
mov
mov
dec
movsl
ret
xor
jl
sbb
bswap
or
add
push
mov
cmp
ljmp
pop
shl
lcall
pop
sub
or
adc
push
jbe
add
movsb
popf
cmp
lahf
lock
and
sbb
mov
sbb
push
scas
ss
jmp
fstpl
xchg
adc
cmp
clc
scas
mov
lahf
push
imul
mov
pop
sbb
dec
jmp
inc
test
sbbl
mov
stos
rolb
xchg
aas
cli
ljmp
pop
and
mov
pop
sub
ret
js
xor
jb
js
sbb
mov
and
dec
adc
mov
pushf
repnz
ds
xchg
ljmp
mov
push
std
pop
inc
rcr
add
cmpsb
scas
inc
test
sbb
xor
in
pop
scas
mov
loopne
jnp
mov
lea
sub
xchg
add
or
push
pop
inc
aad
inc
loop
call
push
jmp
pop
imul
nop
ja
and
in
and
dec
jg
jno
cld
sub
mov
das
add
add
out
sbb
ja
loopne,pt
lods
test
sbb
sub
xchg
lahf
int
jns
jp
xchg
add
shl
xor
cmc
mov
out
dec
mov
call
pop
out
daa
test
pop
cmp
inc
pushw
pop
inc
pop
mov
mov
cmp
ds
call
mov
mov
push
push
fdivrs
mov
shrl
loop
mov
pop
or
ficoms
mull
ljmp
inc
mov
shlb
push
shrl
inc
cmc
mov
daa
in
and
cmpsl
cli
cmpsl
jl
outsl
mov
dec
and
stos
sub
and
xchg
jmp
jle
clc
shlb
inc
mov
xchg
repnz
push
iret
push
dec
fldcw
fistpl
test
je
in
lret
dec
cmp
cmc
adc
cmp
lret
adc
jo
pop
movsb
cmp
push
mov
ret
sbb
dec
les
jle
xorb
mov
or
pushf
add
fisttpl
lcall
mov
shrl
sar
movsl
xlat
cmpsl
inc
sbb
push
mov
jae
mov
clc
std
mov
lds
jmp
mov
mov
lea
lret
push
and
xor
jae
ror
xchg
mov
cltd
aaa
and
addr16
ja
subl
ja
inc
xchg
mov
mov
call
mov
lock
pop
and
dec
scas
push
hlt
cmc
sub
into
cs
mov
jge
cli
lret
or
mov
pop
sbb
outsb
int3
xchg
adc
add
fwait
pushf
bound
sub
pusha
rcrl
stc
push
incb
aad
stos
arpl
js
fsubrl
xchg
lahf
jnp
and
inc
out
pop
or
xor
jecxz
sbb
fdivs
nop
xchg
cld
cs
sub
movsb
jmp
adc
das
sub
sub
and
fistpll
int
aam
sbb
cld
cmp
cmp
add
mov
sub
leave
mov
in
out
loop
adc
jns
xchg
and
cld
test
mov
movsb
jecxz
bound
xchg
mov
jmp
dec
mov
sbb
jl
push
das
cld
mov
into
pop
movsbl
or
adc
inc
adc
outsb
in
pop
int
jge
cld
into
adc
imul
fisttpl
cld
pop
xor
mulb
js
mov
loope
sahf
popa
shll
pop
add
mov
push
and
pop
or
cmpb
je
xor
jecxz
bound
cmp
xchg
dec
imul
sub
scas
add
insb
add
mov
xchg
outsl
add
jge
aas
lock
stos
add
popf
insl
inc
leave
or
stos
dec
dec
mov
mov
lds
nop
adc
xorl
mov
adc
push
rcrb
bound
mov
into
mov
int3
movsl
sbb
or
xchg
mov
out
add
push
mov
stos
cld
pop
js
aam
inc
dec
lock
sbb
in
pop
mov
es
mov
xor
jg
pushf
inc
daa
pop
pushl
push
inc
inc
pop
orl
or
in
lods
pop
adc
adc
adc
jno
add
mov
leave
loope
int3
stos
inc
push
je
mov
cwtl
test
dec
xchg
or
and
dec
adc
popa
inc
mov
popa
pop
inc
lret
xchg
push
cld
incb
mov
mov
and
mov
lahf
or
xchg
dec
mov
push
das
rcll
fiadds
add
das
int3
out
sbb
cs
lgs
pop
jae
fwait
jb
imul
cmp
addr16
mov
cmp
jle
out
shlb
adc
jl
pop
icebp
lods
insb
xchg
mov
sbb
dec
jbe
cs
enter
pop
pop
mov
loopne
push
cmc
pop
mov
pop
adc
xor
mov
mov
cmp
lods
jmp
pop
lcall
dec
mov
setno
aam
insl
nop
fwait
mov
cld
scas
dec
mov
movsl
xchg
jg
xchg
xchg
mov
xchg
ret
sti
imul
outsb
aad
push
jmp
jnp
and
sub
mulb
xchg
push
out
jmp
test
aad
fcmovnu
addr16
inc
add
xchg
inc
jge
test
loope
lret
test
or
mov
or
loopne
pop
out
sti
mov
sbb
push
jmp
xchg
xor
xor
fcoms
lds
inc
mov
cmp
mov
sbb
pop
imul
lods
pop
xchg
xchg
push
pusha
cltd
mov
out
cltd
push
and
mov
dec
jnp
sub
mov
cmpsb
pop
lods
mov
sub
loope
push
mull
fisubs
pop
rcll
lahf
dec
or
cmp
add
xchg
inc
xor
nop
xchg
aaa
push
cli
inc
das
inc
fcompl
push
sbb
push
sub
sub
push
repnz
xchg
repz
dec
cmpsb
cmpsl
inc
xor
outsb
mov
mov
in
mov
xor
int3
lret
or
ret
cmpsl
pushf
dec
clc
fidivrl
inc
xchg
add
inc
imul
popf
lahf
aas
fsts
jg
aam
fidivrl
cmpsb
pusha
and
verr
inc
jnp
pxor
mov
add
xchg
xorb
pop
pop
add
xchg
repnz
mov
jmp
movsb
icebp
jbe
and
mull
mov
jge
mov
mov
scas
pop
add
xchg
and
mov
repz
jl
push
ds
push
lret
mov
addr16
jecxz
sbb
addr16
stos
test
divl
mov
xabort
sub
xor
mov
test
xor
icebp
xchg
dec
jge
adc
pop
fwait
xchg
fisttpl
push
mov
xor
pop
inc
cmc
mov
mov
test
mov
mov
mov
sub
mov
push
inc
add
and
aas
xor
insb
and
aam
lahf
test
fmulp
std
pop
mov
jge
cmp
mov
or
hlt
adc
popa
mov
insl
mov
pop
xchg
shlb
sarb
mov
jo
int3
in
xchg
jp
cmp
mov
push
dec
xchg
mov
sub
xor
adc
rol
pop
mov
data16
xchg
sub
pop
repz
dec
or
cmpsb
lret
ljmp
or
neg
leave
push
xor
mov
sbb
xchg
insb
jnp
and
sub
bound
xchg
pop
push
add
dec
daa
popf
jns
vprotb
nop
dec
add
add
push
push
mov
add
repnz
repnz
loope,pn
ret
xorb
data16
movsl
rdmsr
or
push
pop
lcall
mov
scas
xor
ljmp
or
fs
add
add
adc
sbb
ljmp
pop
fnsave
out
mov
es
pusha
mov
mov
add
daa
push
xor
hlt
mov
xor
ss
imul
movsl
lea
mov
fbstp
or
fsts
add
cmpsl
cld
or
fldenv
mov
psrlq
fwait
icebp
jg
mov
jno
aaa
cmp
dec
shrb
push
lock
bound
mov
fnsave
adc
pop
inc
fisttpll
dec
and
mov
jbe
ficomps
and
fs
inc
jl
jp
sub
cwtl
xchg
pop
mov
xchg
cmp
cmp
aas
movsl
pop
and
xchg
dec
stos
test
imul
outsl
cmpsb
pusha
and
mov
sub
test
ror
push
jp
ret
inc
sbb
dec
sarl
add
inc
aas
cmp
cmp
xchg
push
fimull
jp
outsl
in
scas
dec
das
xchg
movsb
xor
inc
loope
push
rcl
jno
adc
rorl
mov
sbb
sbb
std
out
test
mov
add
icebp
cwtl
push
imul
mov
cmpsb
mov
in
dec
push
jmp
lock
push
adcb
scas
lds
incb
cmp
jge
out
jno
or
xchg
or
iret
dec
push
movsb
inc
push
xor
lret
mov
les
inc
and
pop
inc
cs
cli
or
sub
nop
adc
aaa
fwait
mov
or
fsubrs
popf
stos
adc
lods
jnp
insb
int
xor
cli
fldl
mov
xor
jg
out
test
popa
mov
pop
dec
pop
lret
out
arpl
movsl
jns
inc
sub
leave
jno
iret
ljmp
aam
in
push
hlt
int3
aad
ss
popf
mov
and
push
ret
bound
push
xlat
in
xchg
es
pop
pop
cld
fidivrl
mov
adc
faddl
repnz
inc
push
adc
sub
test
mov
push
js
jb
cmp
outsl
add
ljmp
mov
lods
inc
cmp
popa
dec
daa
je
cmp
out
push
adc
sbb
mov
adcl
dec
or
scas
xchg
fs
jg
jnp
mov
inc
pushl
or
orb
adc
jl
dec
mov
cmp
pop
loop
pop
test
sbb
mov
adc
mov
mov
out
les
ljmp
jl
xor
push
outsl
leave
subb
mov
dec
xor
xor
push
scas
mov
cvtps2pi
filds
pop
sbb
clc
cmp
mov
mov
cmp
jns
xchg
out
movsl
jb
clc
sbb
test
rcl
pop
mov
fisubrl
pop
cmp
lcall
stc
dec
in
xor
add
adc
adc
mov
mov
and
push
int
or
sbb
sbb
cmovg
cli
ja
pop
sub
inc
mov
cmp
mov
or
stos
mov
adc
cld
add
add
cmp
sub
mov
mov
cld
xchg
mov
scas
and
addr16
scas
pop
in
mov
jne
popa
sub
enter
and
pop
xchg
inc
inc
xchg
push
ret
fisttpl
loope
call
cmp
loopne
insl
cmpsb
adc
sahf
add
xchg
pinsrw
sub
and
mov
sti
cmpsb
fdiv
int3
mov
pop
fwait
test
aam
imul
cmpsl
pmaddwd
jle
imul
mov
rol
mov
testl
call
mov
pop
add
subb
insl
inc
adc
pop
cmp
js
jmp
inc
and
add
imul
jmp
xor
pop
mov
std
mov
jge
repz
mov
mov
mov
jle
or
jbe
bound
das
adc
pop
cmp
mov
cmp
jl
scas
sbb
out
mov
cmp
xchg
lds
lret
enter
cltd
fwait
pop
jg
adc
insb
icebp
add
jp
test
mov
popa
jmp
adc
out
jns
mov
cmpsb
lahf
mov
imul
xor
dec
lcall
inc
push
mov
inc
inc
adc
movsl
outsb
out
leave
insl
lret
fmull
fisttpll
in
aaa
pusha
cmp
movsl
add
test
adc
push
jp
scas
outsb
call
sub
rclb
fnstsw
mov
cld
dec
push
push
ror
xchg
and
or
sbb
mov
incl
mov
mov
add
insl
call
lret
dec
jno
or
rorb
lret
add
inc
int
fisubl
imul
jbe
test
pop
repz
fstpt
lahf
dec
fs
xchg
arpl
ss
adcl
xchg
dec
fsubrl
clc
inc
push
pop
mov
xor
dec
or
push
xchg
jb
test
mov
fsubrs
mov
mov
mov
into
cmpsl
dec
push
out
jecxz
jl
pop
add
repz
clc
cmp
lds
fsubrl
or
cmp
add
jo
daa
inc
sub
shll
cmc
mov
cmp
xor
lea
loop
mov
mov
jge
sub
adc
jecxz
inc
faddl
rol
ss
xor
push
xchg
dec
cwtl
std
mov
data16
leave
les
inc
sbb
mov
repz
sbb
divb
stc
xor
fdivrs
push
movsl
pop
pusha
add
xchg
add
int
lret
mov
aad
add
js
fcoml
test
or
mov
ljmp
bound
inc
xor
pop
icebp
push
outsl
pushf
and
xchg
stc
out
out
pop
sbb
mov
mov
imul
sbb
cwtl
xor
out
jp
ja
movsb
push
and
xlat
push
adc
test
rcrb
jg
add
and
mov
sub
xchg
pop
and
rclb
arpl
pop
jge
mov
in
dec
dec
jnp
popfw
ret
mov
out
mov
test
je
movl
push
pop
push
sub
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
and
xor
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
orl
movl
movzbl
sub
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
call
mov
dec
mov
jmp
mov
xor
jmp
mov
hlt
mov
ja
out
je
mov
jnp
clc
pushf
jnp
test
inc
sub
xchg
pop
push
test
mov
das
aad
int3
dec
push
shrl
xor
enter
hlt
lret
outsb
add
jl
mov
pusha
pop
shll
cs
daa
or
sarb
mov
std
test
jmp
jl
lahf
pop
or
xchg
stc
or
cmp
add
xchg
sub
mov
lcall
mov
fs
mov
scas
dec
movsb
lcall
push
arpl
mov
in
imul
mov
mull
test
mov
adc
testl
sub
outsl
adcl
test
hlt
xor
movsb
insb
adc
ljmp
out
sbbl
xchg
lret
lods
das
dec
std
or
pop
mov
ret
xchg
sti
adc
filds
xor
fsubrs
push
lcall
dec
inc
jle
push
enter
dec
dec
into
pop
dec
push
xor
fwait
dec
mov
aas
or
sbb
cmp
xchg
lea
call
mov
sbb
jnp
nop
xchg
push
stc
adc
pop
jge
dec
call
sbb
lods
fdivs
pop
push
jno
sub
bound
daa
and
ljmp
jns
xchg
add
sub
add
xchg
cs
daa
insb
xor
aaa
inc
xchg
mov
push
xchg
pop
xor
jbe
out
sbb
repz
inc
sbb
inc
negb
adc
ss
jno
dec
sub
jb
or
push
push
sbb
and
shl
inc
adc
push
nop
xor
adc
jmp
lcall
jns
lcall
imul
out
xor
leave
js,pt
xchg
je
push
push
jl
jl
cmc
push
out
mov
push
add
sub
subb
nop
insl
repnz
mov
aam
fs
imul
insl
mov
decl
ss
push
mov
shrl
sbb
jno
cmp
or
pop
mov
fadd
leave
or
in
push
ret
jg
data16
cmpsb
and
ds
sahf
pop
in
sbb
stc
mov
dec
iret
in
xchg
push
pop
mov
lds
push
jae
in
and
insl
push
xor
cwtl
loopne
cmp
ret
addb
xchg
xchg
cmpsb
insl
jecxz
pop
rcl
adc
add
stos
inc
pusha
pushf
jg
out
or
movsb
out
ja
loop
roll
xchg
inc
bound
cli
jmp
imul
scas
pusha
pop
pop
int
push
push
xlat
xor
mov
cwtl
sub
dec
lds
out
fildl
and
mov
xor
and
cmc
int
push
sahf
pop
cmp
cmc
sarl
outsl
pushf
mov
lods
leave
and
aam
movsl
dec
cmp
rcrb
xchg
or
std
loope
jo
hlt
mov
xchg
mov
push
push
push
ret
aas
or
test
push
cmp
jns
mov
jns
rorb
std
outsb
jge
add
xchg
add
cs
cmp
and
stc
jo
xchg
popa
sbb
hlt
fwait
in
ficoml
push
and
roll
shlb
cmpsb
mov
or
les
push
in
or
adc
adcb
dec
jge
add
mov
imul
xchg
add
mov
dec
imul
lods
loop
test
clc
adc
or
out
xor
push
out
jl
ret
adc
clc
test
enter
sbb
mov
inc
mov
sbb
cs
add
xor
fstpt
sbb
popa
test
mov
mov
xchg
mov
adc
cmp
stos
mov
popa
mov
cmp
pop
sar
xor
ret
fmulp
push
out
lds
xlat
popa
mov
mov
int
in
jne
stos
idivw
sbb
subb
or
popa
and
stos
jb
in
mov
or
mov
xor
test
mov
xchg
or
jne
ffree
icebp
or
push
mov
aaa
mov
comiss
adc
cmp
adc
fmull
arpl
mov
add
sub
push
adc
leave
aaa
out
mov
or
pushf
pop
aam
in
fnsave
jne
cmpsl
les
push
insl
rorl
mov
aas
leave
pop
out
push
pop
cmp
dec
imull
nop
mov
lea
add
lea
push
in
repz
cwtl
ficompl
loopne
out
iret
aam
movsl
cli
sti
mov
scas
inc
pop
mov
and
jecxz
imul
or
inc
orl
nop
dec
shl
fsts
jmp
or
int
or
xor
mov
dec
pushl
pop
adc
out
xor
xor
test
pop
or
repnz
push
loopne
cmc
call
jne
push
ljmp
pop
clc
subb
lret
nop
cld
ret
jnp
push
iret
lret
jne
cmp
adc
imul
lret
fwait
dec
xchg
xchg
mov
push
cmpl
mov
daa
and
fmull
mov
jmp
ret
lret
sti
out
xchg
test
data16
xor
push
lret
test
xchg
aad
or
mov
stc
je
stos
sub
arpl
jmp
pop
xchg
jecxz
sub
in
push
sarb
enter
pop
insl
outsb
pop
aas
aas
test
rcll
xchg
mov
mov
stos
test
ljmp
fs
push
arpl
jmp
sbb
mov
dec
sahf
jbe
out
test
dec
call
ss
mov
push
dec
imul
xchg
out
mov
mov
es
mov
ljmp
push
adc
loop
pop
std
loop
inc
gs
push
fadds
imul
xchg
or
aaa
adc
add
mov
mov
xor
xor
je
inc
and
clc
push
jno
xlat
sub
sbb
jb
or
divl
add
lds
out
outsl
out
rorl
fisttpl
movsb
xor
sbb
stos
daa
pop
test
call
sub
ret
jb
and
insl
jp
imul
lods
jnp
cwtl
aam
sub
xchg
cmpsl
aam
ss
shrb
lods
orb
stos
push
pop
mov
inc
or
push
std
in
mov
mov
xchg
pusha
std
jp
jae
or
xchg
scas
scas
adc
hlt
dec
test
dec
and
jno
scas
xchg
ja
adc
mov
xor
push
adc
inc
adc
sar
and
jmp
push
addl
lret
loope
mov
ss
stos
stos
pushf
cmp
jecxz
movl
daa
into
movsl
mov
jae
insl
cli
out
imul
sub
dec
push
leave
popf
cmp
jle
jg
mov
xchg
pop
jae
addr16
xor
dec
stos
pop
push
mov
add
mov
cmc
arpl
imul
insl
sub
inc
push
xchg
xchg
push
or
stos
aaa
xor
fnstcw
nop
mul
mulb
cmc
mov
outsb
cmpsb
fwait
jnp
add
je
outsl
push
popa
loopne
test
lds
sub
pop
out
movsb
mov
mov
lea
pop
sbb
std
lods
test
stc
adc
lea
pop
faddl
rclb
xor
mov
push
add
inc
mov
sbb
cmpsl
in
iret
sbb
out
push
bound
mov
je
shl
jb
ljmp
and
and
or
sub
lea
cmpsl
pop
push
aam
loopne
das
push
jns
pop
push
dec
push
imul
in
ds
shrl
push
test
cmp
jmp
mov
xchg
jle
nop
cmp
mov
or
sub
subl
mov
lds
lret
pop
push
pop
ja
xchg
sub
aad
int
out
ret
daa
mov
mov
mov
fcompl
inc
push
inc
mov
sbb
jle
ja
sub
xchg
jmp
push
pop
pop
loop
pop
jge
inc
bound
dec
sbb
mov
mov
xchg
push
adc
outsl
xchg
push
mov
cmp
mov
mov
push
cmc
dec
int3
rorl
sahf
jae
cmp
mov
dec
cmp
lahf
dec
xlat
inc
push
xchg
jno,pn
or
daa
int
inc
ds
jbe
pop
jns
push
rcrl
shrb
mov
adc
mov
mov
pop
pop
xchg
inc
jg
gs
call
inc
xor
arpl
cli
sub
pusha
mov
shll
dec
mov
je
xchg
push
xchg
push
jne
mov
or
jp
fstpl
cmp
pop
in
rclb
or
inc
xor
lea
jl
ds
inc
cmpb
rcr
push
and
sbb
jne
mov
sub
xor
mov
and
mov
jb
mov
lret
push
cmp
fiadds
fnsave
lods
fstpt
adc
cmp
int
xor
push
jmp
es
movsl
push
adc
call
stc
cmpsb
test
loopne
dec
pop
scas
add
or
push
or
mov
loop
sub
gs
outsl
xchg
jne
scas
mov
adc
mov
rolb
shl
xlat
dec
xchg
in
repnz
cmp
sub
dec
in
adc
je
inc
mov
in
sbb
cli
scas
sub
and
push
push
mov
mov
push
lahf
push
shlb
jbe
in
out
orw
push
mov
xlat
test
push
mov
scas
add
pop
fiadds
adc
xor
stos
les
dec
mov
sub
test
jmp
lcall
test
dec
ret
stc
stos
movsl
in
mov
mov
cmpb
xchg
or
ja
dec
inc
movsl
mov
stos
xchg
cmpsl
dec
bound
xchg
mov
loopne
pop
aad
xlat
push
sub
negb
stos
loop
pusha
adc
xor
hlt
xchg
ds
fadds
scas
cmpsb
adc
jl
dec
sub
cmp
addb
call
mov
jecxz
jp
and
lds
sbb
ret
call
push
cmpsl
jmp
ss
fs
sbb
jno
arpl
ret
into
std
sbb
clc
push
sbb
xchg
ds
adc
adc
aaa
jp
ss
mov
lock
cmpl
push
xchg
sbb
mov
xor
loopne
dec
push
aad
sub
mov
sahf
jb
inc
jmp
fwait
lock
gs
addr16
mov
lret
in
mov
jne
sbbb
push
and
mov
pop
lret
xchg
xchg
pshufw
into
pop
pop
iret
les
mov
cmp
cmp
leave
xor
xchg
lret
jmp
push
stos
cld
pusha
hlt
outsb
loop
lret
fcmovnu
in
pop
jle
or
pop
mov
jb
aas
scas
in
push
ffreep
mov
fbstp
inc
cmp
or
xchg
in
xor
sbb
arpl
insl
cs
pop
in
add
xchg
push
cld
push
inc
inc
loope
mov
xor
sub
mov
enter
dec
dec
lea
stos
pop
mov
jmp
test
sbb
jbe
sub
sub
and
jle
fidivrs
jbe
lock
and
lods
out
lcallw
mov
into
jmp
popa
cmp
les
jbe
and
data16
add
xor
data16
xchg
pop
pop
icebp
sbb
push
jge
das
mov
mov
xor
mov
aas
push
jmp
shlb
jne
xor
or
jns
xchg
mov
enter
aaa
push
inc
hlt
lods
push
add
push
adc
arpl
mov
add
jo
jns
lret
sbb
add
test
jmp
insb
int3
xchg
pop
xchg
xchg
mov
sub
outsl
or
ret
inc
daa
mov
jle
and
or
cmpb
jno
sbb
dec
out
std
cmpsl
jmp
or
lock
mov
pop
and
or
mov
mov
jmp
mov
inc
adc
and
loope
mov
lahf
pop
es
add
sbb
mov
roll
dec
in
jp
lods
dec
xchg
aad
out
push
sbb
shrb
mov
or
push
jnp
or
mov
inc
gs
cli
mov
int3
lods
pop
mov
pushl
or
push
iret
pop
jle
shll
or
and
lds
jbe
pop
mov
dec
or
push
pop
jle
shrl
adc
jbe
daa
add
dec
pop
jno
cmpsl
bound
jp
and
cmp
xlat
push
mov
add
xor
ds
mov
xchg
push
fxch
out
jmp
cmp
jno
adc
les
fnstsw
stc
xchg
dec
push
mov
iret
inc
out
push
pop
testb
lcall
mov
aad
and
sbb
jecxz
cmpsl
out
jae,pn
cmp
faddp
lds
dec
dec
cs
and
fistl
inc
cmpsl
je
insb
andl
nop
outsl
xchg
jno
bound
sub
xor
and
push
cli
push
sub
iret
and
int
cmc
repz
faddl
addl
sub
inc
iret
mov
xchg
cmp
fildll
pop
in
test
and
movsb
mov
negb
mov
les
jo
add
sub
scas
mov
xchg
hlt
push
jo
xor
mov
pop
xchg
test
imul
mov
sub
cmp
sbb
push
pop
fistpll
sbb
fcomi
inc
sbb
and
mov
call
mov
xchg
inc
jb
lods
out
dec
adc
jmp
jb
sub
sbb
sti
cwtl
sarb
cs
sub
insb
push
xchg
cmovge
cwtl
outsb
cmpsl
jns
sbb
fisubrl
xchg
arpl
pop
jae
pop
mov
sbb
mov
nop
lret
xor
xchg
xor
or
mov
jno
xchg
scas
inc
jno
xor
mov
add
stos
aas
cmpsb
hlt
mov
negl
sbb
ss
stos
popa
mov
cmp
es
mov
sbb
lods
cmp
and
into
push
and
cld
push
movsb
or
test
jmp
je
inc
cmp
orl
xor
pop
sahf
in
shll
andl
xor
xor
xchg
outsb
std
cmc
or
or
push
sti
lret
insb
sahf
sbb
sarl
push
popa
out
loope
push
insb
sarl
cs
rol
sub
ret
in
or
rcrb
jo
mov
sub
imul
adc
imul
pop
xchg
push
xor
inc
mov
scas
push
pop
and
or
ljmp
adc
jg
into
outsb
mov
shrb
inc
push
mov
pop
cld
out
pop
les
ss
xchg
xchg
test
inc
push
mov
aas
pop
test
mov
fsubl
shrl
cli
inc
sub
lods
popa
in
jmp
push
fildl
sbb
mov
jl
test
roll
push
movsb
sub
jg
leave
xchg
mov
mov
pop
dec
xchg
testb
cmp
pushf
int3
inc
push
orl
cmp
cmpsl
repz
adc
sbbb
push
mov
mov
cmp
jl
loope
fdivl
ja
lods
pop
ret
dec
jge
clc
lea
sub
dec
adcb
inc
ja,pn
std
inc
jecxz
nop
divl
xor
pop
cmpsb
and
or
aas
outsl
xchg
and
and
fimull
cmp
stos
adc
mov
outsl
lret
lcall
xchg
adc
mov
js
aas
in
cmp
jns
stos
ret
lcall
cmp
jne
mov
push
lock
mov
or
pop
push
sahf
loop
sbb
in
or
test
orl
mov
outsb
shr
imul
and
fs
and
sub
repz
std
inc
jle,pn
xchg
sub
jnp
sbb
jg
roll
lods
stos
adc
cmp
bound
or
test
imul
and
mov
ss
in
mov
test
xor
lock
dec
jl
stc
ffree
in
xor
leave
sbb
aad
cs
jp
popf
dec
arpl
mov
mov
jg
shrl
jne
lcall
push
pop
xor
bound
pop
rcrl
arpl
xchg
cwtl
mov
pop
addl
ret
not
out
add
mov
insb
push
in
add
fsubrs
out
inc
mov
outsb
bound
sbb
movsb
loopne
jo
push
sahf
jl
mov
lcall
adc
sbb
jno
cld
dec
mov
fwait
xor
mov
clc
xor
cli
fbld
pop
je
aaa
out
imul
pop
and
cmpb
jne
addr16
test
loopne
dec
sub
cmc
pop
xchg
mov
sar
adc
fimull
add
mov
push
stos
ds
xchg
push
lret
jae
dec
cltd
cmp
mov
mov
shrl
mov
dec
lahf
out
dec
stos
fwait
and
push
pop
dec
repnz
ljmp
outsb
inc
jno
inc
mov
neg
stos
mov
add
bound
jo
jmp
lea
xchg
jb
popa
and
arpl
out
mov
xchg
int3
cmovg
inc
pushf
aam
lcall
add
cmp
lcall
and
push
xor
std
popa
and
loopne
xchg
lds
and
repnz
movsb
cmc
xor
dec
jne
inc
in
adc
nop
sub
sub
rcrb
dec
fsubl
dec
xchg
push
pop
fcmovu
pop
mov
fldt
filds
push
sbb
push
outsb
inc
pop
in
inc
int
data16
ja
imulb
pop
add
sbb
push
mov
stos
push
mov
sub
or
push
lret
push
bound
dec
into
jmp
ficompl
push
sub
jnp
mov
into
sbbl
mov
stos
rolb
in
mov
ss
addb
mov
outsb
mov
ss
jae
daa
outsb
jo
sub
fidivl
cmp
popa
lds
cmc
leave
dec
out
lret
push
test
outsb
aad
mov
pop
and
cmp
cld
rcr
pop
hlt
cmpsb
pop
scas
inc
xor
xrelease
insl
mov
sub
xchg
xchg
cmc
loopne
dec
add
popa
ret
adc
arpl
int3
xor
in
loopne
fsubrl
insl
repz
push
mov
insb
xchg
orb
push
jecxz
test
xchg
out
popf
lret
sub
out
pop
mov
cmpsb
mov
xchg
cmp
cmc
jne
mov
jle
cmpsb
push
pop
mov
clc
or
sbb
lcall
push
pop
jbe
rcll
mov
push
lock
repz
pop
out
jle
adc
add
mov
xor
xor
or
xorl
adc
xor
xchg
dec
cmp
mov
scas
arpl
mov
ficomps
data16
dec
inc
push
jecxz
lds
or
pop
out
mov
popa
nop
jno
sbb
lahf
stos
sub
ret
repz
addr16
jg
cmpl
bound
pop
xchg
das
push
sbb
xchg
gs
hlt
in
pushf
out
xchg
inc
sub
mov
and
mov
or
out
pop
imul
dec
add
pop
adc
fsubrs
aad
xchg
add
cld
jge
insl
push
fdivl
lods
xor
pop
rorl
adc
clc
insl
testb
xchg
scas
pop
push
rep
cmpsb
ret
imul
dec
xor
push
mov
jle
addb
sbb
adc
inc
std
cs
es
push
push
mov
pop
mov
sub
andb
mov
out
push
or
dec
test
mul
iret
fimuls
pop
xchg
repnz
lock
stos
mov
xchg
add
popa
in
int3
jge
sbb
jecxz
jne
pop
inc
mov
fdiv
repz
lahf
inc
lods
mov
sub
adc
add
rcrl
pop
jp
push
mov
js
fsubp
fisubs
aas
divl
push
ficoms
out
imul
cmp
mov
imul
inc
or
orb
push
pop
jnp
aaa
jl
cmc
and
xlat
push
and
ss
and
pop
in
and
sub
jp
mov
clc
mov
or
int
flds
pop
or
lea
pop
adcl
adc
pop
and
cmc
jnp
and
inc
jmp
mov
mov
fdivrl
jmp
pop
movsl
push
data16
fs
push
add
rorb
add
cmpsb
repz
xchg
xchg
pop
insl
jge
lods
push
test
sub
xor
out
js
mov
in
addb
xlat
std
loope
pop
enter
jmp
iret
xchg
mov
fnstsw
imul
test
insl
push
jo
mov
insb
rcll
jae
mov
test
pop
adc
in
ret
ja
fnstcw
sub
cmpsb
mov
test
mov
mov
mov
popf
rcrl
les
inc
push
fcompl
je
inc
andb
push
xchg
add
cmc
notl
add
add
xchg
add
xchg
aas
out
rclb
mov
jae
popf
xchg
testl
xchg
and
popa
shrb
sub
and
jle
sbb
dec
xorl
repz
jg
inc
pop
in
add
iret
mov
mov
mov
mov
icebp
or
incb
mov
ficomps
clc
fwait
push
jp
sbb
cmp
sbb
aad
and
or
push
insb
push
dec
lcall
inc
out
mov
cltd
sub
shrb
jmp
dec
aad
das
mov
stos
push
idivb
xchg
inc
stc
sbb
movsl
inc
lods
je
mov
cmp
ret
and
mov
sub
push
imul
stos
out
lea
mov
insb
xor
aad
ret
ds
mov
pop
mov
dec
mov
mov
hlt
push
scas
lret
jb,pt
cwtl
push
sbb
xchg
add
and
test
daa
fdivp
xor
sbbl
xchg
jbe
dec
ljmp
or
fistpl
stos
mov
scas
sarb
bound
lret
fidivl
arpl
push
xlat
and
sub
and
xor
jbe
sbb
inc
dec
lock
xor
ror
sarb
dec
xor
test
imul
add
std
gs
mov
popf
popa
add
pusha
loopne
cwtl
dec
xchg
jle
and
pusha
fcomp
push
xchg
cmp
inc
imulb
adcl
add
jne
xchg
lret
imul
jecxz
jecxz
insb
push
xchg
imull
imul
jecxz
inc
in
mov
cmc
loop
fbld
clc
inc
in
clc
fldl
cld
cmp
lea
aaa
xor
in
and
jp
sbb
pusha
cmp
js
inc
jecxz
mov
xor
test
jge
fxch
ret
or
jnp
jae
out
pop
and
in
cmc
cmp
fimull
inc
sbb
icebp
pop
jae
loope
mov
push
js
shr
push
cltd
inc
fcomp
push
or
je
push
pop
in
xchg
roll
cld
or
daa
fadd
mov
jmp
xchg
in
pop
and
push
push
js
into
out
nop
neg
stc
sub
pop
add
insl
sbb
mov
mov
adc
xor
aaa
adc
sbb
sub
in
inc
in
insb
push
nop
sub
inc
cmp
fistpl
add
icebp
adcb
mov
xchg
es
sti
cld
mov
mov
mov
push
cmc
adc
nop
xchg
sbb
sub
xlat
or
inc
gs
push
fisubrs
inc
scas
mov
xchg
xor
sbb
adc
mov
and
adc
sub
insl
mov
inc
push
ret
sub
scas
push
enter
lahf
adc
pop
and
push
push
pop
fimuls
xchg
stc
dec
sbb
mov
popf
pop
lcall
aad
cmp
out
rorl
mov
jge
popa
pop
and
sarl
cmp
pop
adc
and
xchg
repnz
mov
xor
push
outsl
lea
cmp
or
in
cld
test
iret
fs
jae
into
ret
and
mov
dec
push
pop
xor
test
je
call
xchg
xchg
xor
cli
ljmp
sbb
pop
inc
jne
and
cmp
and
fwait
inc
in
je
fdivrs
and
insl
xor
mov
mov
and
xlat
push
lods
add
cmp
mov
inc
pcmpeqd
mov
shlw
mov
ret
fs
cmpsb
scas
pop
leave
add
pop
call
mov
add
mov
cmpsl
js
jge
and
cli
sar
mov
lret
mov
or
pop
stos
inc
pop
mov
test
mov
nop
mov
outsb
addps
ret
js
jo
arpl
aad
adc
xchg
icebp
sbb
xor
in
in
psraw
insl
xchg
out
inc
xlat
xor
jbe
pop
clc
push
xchg
adc
dec
stos
int3
lret
dec
dec
xchg
mulb
adc
pushf
cli
push
clc
or
push
mov
cltd
sbb
orl
push
mov
jge
mov
jecxz
arpl
dec
sahf
mov
dec
adc
iret
lock
push
pop
orb
pop
add
xchg
or
negb
std
int
ret
test
xchg
dec
mov
jnp
movsl
out
jae
fsubrp
jo
xchg
and
fcmovu
cmp
insb
sub
dec
rorb
std
and
lods
bound
xor
sbb
fstsw
jmp
xchg
dec
ss
adc
clc
cmc
cmc
dec
cs
es
mov
scas
cmp
aaa
push
ljmp
test
push
push
push
push
pop
cmp
dec
push
mov
and
mov
mov
das
outsb
pop
insl
shl
dec
pop
lods
icebp
xchg
pop
mov
imul
sarl
js
xchg
or
aaa
or
imulb
or
mov
inc
push
out
add
std
pop
hlt
rcr
xor
inc
ja
movd
sub
popf
dec
jg
sbb
gs
xor
popf
cs
out
cmpl
movsl
daa
in
cmp
jle
filds
es
lret
and
in
lods
lret
or
mov
dec
mov
dec
push
pop
inc
ret
mov
dec
mov
xor
stos
xchg
inc
push
aam
mov
xchg
mov
push
test
jne
aaa
les
cltd
push
jb
in
push
xor
mov
mov
mov
popa
cli
pop
js
xchg
sarb
inc
mov
mov
and
cmpsb
outsb
nop
mov
test
ss
out
and
jl
pop
bound
cmp
cmpl
pop
inc
sbb
psubsw
cltd
int
push
jnp
sahf
fs
fwait
push
outsb
mov
jmp
adc
inc
mov
daa
xor
jecxz
jp
add
movsl
inc
in
je
cltd
das
push
pop
loope
inc
sub
sub
in
jg
cmc
test
fmul
and
addr16
in
adc
or
sub
jo
xlat
int3
movsl
sti
sub
mov
jns
mov
in
push
fcoml
dec
out
loop
inc
adc
andb
pop
xor
jnp
xchg
out
dec
rol
jne
pop
aaa
add
repz
ljmp
sbb
lock
scas
daa
stos
hlt
sbb
mov
hlt
mov
xor
inc
jo
xchg
mov
nop
loope
inc
int
adc
scas
bound
cmp
imul
leave
inc
dec
dec
ljmp
aas
je
or
pop
jmp
pop
add
inc
aad
test
or
incl
frstor
jg
push
cmpsb
cs
or
cli
clc
mov
out
push
and
js
shrl
xor
sbb
ficoms
in
or
sti
sbb
jle
aas
fisttpl
dec
jns
fistps
cwtl
int
into
ljmp
gs
push
inc
dec
mov
inc
aaa
repz
mov
cmp
jmp
push
call
ret
adc
adc
xchg
mov
fimull
jmp
enter
push
sbb
icebp
pop
pop
gs
xor
neg
arpl
jne
jle
mov
stc
icebp
pop
jle
jle
mov
inc
mov
xchg
fs
loopne
scas
scas
scas
in
aad
xchg
inc
bound
xorl
mov
xchg
inc
in
sub
fistl
jg
fsubr
fstl
mov
mov
clc
clc
dec
jb
insb
sub
and
dec
lock
and
xchg
minps
pop
inc
sbbb
and
movsb
addr16
pop
stos
jmp
leave
and
js
shl
dec
mov
pop
push
sti
fstpt
into
jg
adc
rolb
imul
and
xor
dec
lea
sub
mov
mov
jl
or
mov
fwait
cmpl
std
xor
cltd
dec
or
sub
ja
aam
inc
lods
shr
sbb
xchg
dec
sbb
mov
xor
sub
test
xchg
adc
mov
daa
nop
hlt
fstps
inc
ja
jle
lcall
mov
clc
sbb
in
rol
mov
push
aas
ljmp
mov
rolb
mov
push
mov
mov
pop
or
and
shr
jmp
and
aam
outsb
xor
sti
ret
call
leave
mov
pop
pop
mov
out
add
leave
lock
pop
sbb
int3
xchg
or
push
mov
pushf
inc
jl
mov
inc
jle
fisttpl
fistps
push
sub
inc
dec
test
pushf
int3
and
jl
pop
xor
test
inc
push
and
xchg
in
mov
insb
jge
pop
sbb
xor
das
jge
sbb
mov
push
pop
xor
orl
add
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
push
mov
mov
add
mov
mov
jmp
or
mov
xor
mov
fwait
dec
jnp
clc
pushf
jnp
outsl
insb
ljmp
sbb
loopne
insb
or
xchg
mov
xchg
pop
adc
popf
ret
push
imul
jmp
arpl
out
movsb
lods
or
dec
inc
mov
add
push
jno
push
jmp
xchg
std
in
lcall
cmpsb
inc
mov
fwait
push
push
lods
fsubl
jmp
mov
fbstp
pusha
jae
xchg
divl
pop
xchg
and
push
mov
call
pop
pop
jmp
test
inc
add
and
jo
rclb
inc
pop
mov
aam
into
lods
enter
adc
jne
xchg
mov
push
lcall
xchg
sub
mov
dec
in
scas
lds
or
addb
sbbl
push
loop
jo
add
cs
jne
fs
int3
jbe
or
in
ljmp
adc
jne
xor
popa
push
loope
xlat
pop
sbb
aad
and
insb
sbb
and
rcr
jecxz
push
jg
push
mov
push
and
push
adc
push
mov
nop
call
mov
fsub
and
mov
scas
pop
testb
addl
xor
pop
sbb
int
das
shrl
ficomps
out
cmc
mov
loope
adc
hlt
xor
jo
enter
popa
jp
mov
push
add
mov
lret
dec
jmp
sti
rcrb
jae
sbb
mov
and
cmp
ret
mov
jb
mov
movsl
repz
stos
loope
out
inc
jp
pop
dec
decl
ds
or
push
mov
push
in
cmp
or
mov
jno
call
mov
mov
xor
test
sub
cmp
dec
cmp
scas
cmpl
cmp
mov
scas
add
jbe
test
fdivrp
aas
or
or
repz
scas
cmc
lret
mov
xor
pop
adc
shl
lods
enter
push
ja
inc
stos
lahf
sbb
xor
cmp
aaa
fidivs
sub
loop
jb
and
lcall
mov
and
dec
dec
es
popf
pop
xor
stos
xor
xchg
dec
inc
fwait
shll
arpl
shll
ja
lock
das
in
jns
cli
sbb
push
mov
cli
jns
pop
add
mov
adc
cmc
and
inc
and
push
je
mov
sbb
ja
mov
mov
sbb
add
lea
inc
mov
dec
lahf
je
pusha
or
insl
cmp
mov
movsl
sub
xor
jecxz
jb
sti
out
fsubs
push
in
xchg
loope
adc
cmp
lock
js
lock
jne
aaa
pop
lock
xor
xchg
lret
cmp
sbb
iret
clc
push
daa
int3
xor
add
cmp
fs
ljmp
in
dec
xchg
mov
inc
xchg
enter
out
cli
mov
push
sbb
xchg
xchg
mov
pusha
mov
and
sti
push
dec
es
lahf
movsb
cmp
and
mov
test
push
mov
and
and
lods
adc
outsb
xchg
push
xor
int3
pop
add
shlb
scas
cwtl
xchg
and
hlt
jmp
push
fists
out
mov
and
inc
in
rcll
out
sbb
push
arpl
fsubr
xchg
jmp
stos
dec
mulb
repnz
scas
fisubrl
sub
jge
inc
in
xor
push
lds
in
nop
imul
jne
movsl
mulb
or
mov
ret
sbbl
in
idivl
jb
xchg
xchg
and
scas
jp
cmp
cmpsl
shrl
and
loope
out
mov
cmovle
cmp
lahf
lret
fcoml
fdivr
mov
fcomps
mov
in
fcmovne
mov
test
dec
shl
add
push
hlt
lret
test
xchg
add
dec
cld
test
dec
jp
mov
sbb
xchg
imul
dec
fxch
outsb
inc
pop
scas
ja
push
or
cmp
mov
ret
lret
mov
add
push
push
fwait
aas
std
cmc
push
pop
mov
pop
adc
into
leave
mov
cmpsl
adcl
je
pop
or
cmp
ja
mov
fadds
divl
cmp
jmp
xchg
ret
mov
mov
pop
jo
icebp
popa
mov
mov
pusha
sub
xor
mov
outsb
cld
sarb
push
xor
shl
pushl
add
jo
mov
mov
je
jecxz
sub
or
mov
lcall
sub
mov
xlat
imul
or
fwait
std
adc
fidivl
fistpl
icebp
or
mov
add
and
mov
gs
push
mov
mov
mov
out
cmpsb
xchg
imul
sbb
aas
sbb
cmp
loop
lahf
xchg
add
out
les
leave
push
jo
cmpsb
jne
cmpsl
js
movb
sahf
adc
inc
or
xchg
out
stc
jecxz
cmp
rcl
pushf
test
pop
fmull
loope
adc
fisttps
test
loopne
pop
dec
mov
adc
jmp
test
push
sub
pop
or
pop
jnp
scas
enter
div
xor
xchg
jae
mov
call
andl
ret
sti
shr
xor
verr
push
lret
pop
push
dec
insb
clc
or
hlt
lds
sub
and
das
mov
jb
daa
or
sbb
divb
in
or
or
mov
stc
test
and
loopne
pushf
jnp
fwait
xlat
sbb
jmp
jmp
mov
sbb
sbb
mov
sub
xchg
mov
xor
rorl
sbb
mov
mov
adc
lds
mov
pop
dec
pusha
int
sarb
pop
ljmp
test
pop
cmc
popa
insb
dec
jbe
flds
outsb
andl
lret
and
pop
imul
push
jo
xchg
and
movsl
sub
jmp
xchg
sbb
cmpl
pop
pusha
xor
loopne
cmp
inc
outsb
incl
mov
cmpsb
push
mov
rclb
stc
out
inc
fmull
gs
pop
jb
test
lods
pop
cld
pop
aas
inc
xchg
jbe
mov
push
ret
in
dec
xor
dec
xchg
jle
stos
push
jl
add
shll
cmpsb
cmp
adc
dec
movb
bound
inc
mov
popf
popf
xchg
inc
into
inc
cmp
daa
mov
push
mov
xchg
and
iret
daa
lods
dec
scas
push
imul
ss
je
dec
ffreep
aaa
iret
es
mov
xlat
adc
mov
ljmp
cmp
clc
dec
rclb
inc
loope
dec
or
ja
inc
cmp
adc
mov
mov
lret
cmp
and
enter
loop
int3
mov
or
sti
hlt
mov
mov
jmp
dec
mov
popa
dec
insb
pop
mov
add
mov
xchg
adc
mov
push
ljmp
sbb
lret
repz
lahf
not
sbb
hlt
cmpsl
leave
hlt
jo
test
icebp
jae
enter
fsubl
sub
push
xchg
in
inc
aam
jmp
loop
movl
ret
push
les
mov
pop
repz
ja
cmpb
adc
ror
inc
ror
add
stc
mov
push
add
mov
dec
loop
outsb
icebp
xchg
jno
and
push
xchg
mov
cld
cld
test
jl
jae
nop
movsl
stos
clc
hlt
std
xchg
lret
out
xchg
inc
xchg
adc
repnz
pop
stos
mov
faddl
leave
lea
adc
inc
sahf
jns
nop
inc
jle
out
push
mov
sbb
sbb
push
roll
and
cmp
adc
dec
mov
ljmp
mov
mov
dec
js
lahf
xchg
scas
dec
cmpb
daa
push
mov
les
lret
lret
cmp
subb
jne
leave
push
repz
mov
add
inc
cmpl
ret
movsb
push
mov
in
sbb
fildl
mov
dec
or
adc
scas
push
and
mov
dec
sbb
test
outsl
popa
test
fnstsw
xchg
jo
loopne
push
into
jne
roll
pusha
out
ficomps
adc
sbb
std
setb
sbb
popw
mov
out
aas
cmp
roll
adc
dec
push
pop
stos
mov
and
dec
jns
mov
xor
add
xor
pusha
pop
inc
cmpsl
aam
jae
stc
in
not
out
rcll
jne
out
test
es
xchg
filds
iret
xor
popl
mov
mov
cmp
inc
sub
insb
mov
popa
data16
rcr
fdiv
dec
test
mov
je
cmc
sub
cmp
mov
fdivs
jnp
cmp
jg
das
xchg
xchg
pushl
push
sub
sbb
mov
push
lods
mov
and
outsb
test
in
inc
int3
lock
sbbb
inc
mov
dec
or
inc
sbb
nop
lahf
ret
pusha
sbb
jge
mov
es
and
push
addl
fidivl
iret
orl
mov
jne
into
cwtl
ljmp
jl
mov
stc
pop
sbb
rdmsr
and
fs
pusha
jnp
jae
mov
sbb
lds
xchg
das
pop
adc
xchg
adc
jp
enter
sub
andl
dec
mov
pop
mov
lds
int3
loopne
stos
out
cmpsb
mov
jno
inc
sti
sbbl
lcall
jp
mov
into
inc
scas
jmp
pop
xchg
bound
mov
mulb
int3
loope
int
jns
jmp
xor
scas
js
adc
mov
stos
cmp
out
ficoms
sbb
xor
call
gs
adc
mov
jae
jle
notl
push
dec
inc
or
add
stos
adc
pop
es
adc
jl
int3
and
lods
push
add
mov
xor
rclb
lcall
sub
fwait
and
jmp
push
xchg
testb
loopne
add
xchg
sarb
loopne
sbb
popa
lahf
pop
dec
fs
loope
scas
push
and
pop
jge
sbbl
out
inc
insl
clc
mov
or
dec
subb
out
xchg
sub
mov
repz
aam
push
push
push
stos
jle
push
aam
shrl
test
sbb
push
lcall
test
aaa
sub
pop
xor
cmc
jnp
jne
mov
jae
pop
rclb
test
jecxz
fistps
shll
out
jp
push
and
imul
dec
mov
fwait
xchg
or
sbb
cmp
in
fisubrl
ret
add
insl
mov
pop
int3
dec
mov
lds
mov
lret
fildll
rorl
and
or
sbb
mov
sbb
sub
rcll
aaa
and
pushf
mov
pop
lret
loop
xchg
jb
xchg
sub
cmpsl
cmpl
jb
add
in
ret
xchg
out
cmp
mov
mov
aaa
or
jae
or
cmc
push
repz
bound
fnsave
test
rol
leave
lret
loopne
sub
ss
imul
xorb
jae
jmp
or
in
xchg
loopne
push
sbb
pushf
dec
sbb
or
xlat
dec
pushl
mov
sahf
add
divb
jmp
aaa
push
lods
sar
test
pop
add
push
pop
and
push
test
mov
loopne
add
jle
in
cltd
or
stos
cmp
arpl
cmp
xlat
xlat
scas
mov
lods
ss
es
pop
sbb
xor
sbbl
popf
adc
test
test
inc
mov
mov
mov
inc
dec
inc
fidivrl
cmpsb
jp
loopne
sbbl
rep
jae
ds
push
dec
push
cmp
cli
or
sbb
adc
inc
clc
mov
sub
lcall
cmc
sub
addr16
pushf
push
testb
loop
xlat
mov
mov
cli
inc
push
push
pop
xchg
xchg
dec
push
lds
jmp
push
mov
int3
ljmp
jmp
cmp
popf
mov
or
outsl
loop
ljmp
daa
xchg
popf
pusha
data16
mov
stc
fmull
test
mov
mov
das
mov
in
test
fs
lods
pop
pop
repz
loope
outsl
fbld
xchg
mov
sub
int
outsl
movsl
mov
dec
imul
jns
push
push
adc
decb
fists
cwtl
pop
inc
dec
data16
add
cltd
add
pop
cmp
stos
or
or
sub
ljmp
outsl
sahf
cmp
test
cs
mov
lret
icebp
dec
sub
cmpsb
pop
hlt
nop
fisubl
jno
lds
sarb
adc
mov
push
stc
mov
and
sbb
pushf
imul
loope
or
pop
pop
jge
daa
out
scas
scas
iret
fistpl
test
cwtl
mov
pop
mov
and
imul
inc
jnp
mov
pop
out
mov
mov
lahf
dec
and
or
jmp
dec
cmp
outsb
xorl
xor
scas
push
mov
jp
enter
inc
jl
mov
movsl
cmp
dec
xlat
adc
dec
aam
mov
in
mov
and
je
push
loop
in
jle
xor
pushf
or
sbb
out
push
scas
repz
lds
repnz
xor
pop
into
dec
mov
or
lahf
call
loop
cwtl
cmp
mov
pop
jg
pop
jno
sahf
movsb
mov
in
mov
mov
cltd
sarl
xchg
fwait
loop
ja
shlb
push
or
adc
sbb
jb
ret
dec
inc
pop
or
dec
fwait
add
mov
iret
adc
out
mov
inc
movsl
jno
insl
imul
jnp
std
lcall
fucom
and
push
inc
sti
call
xchg
jle
and
cmp
mov
mov
inc
xor
fs
addl
pop
in
dec
std
popa
sbb
enter
push
cmp
out
js
cwtl
mov
movsl
aad
cltd
and
mov
cwtl
icebp
popa
outsl
adc
xor
ficompl
gs
mov
imul
xchg
cmp
pop
gs
dec
stos
and
or
rcrb
loop
out
outsw
movsb
mov
imul
daa
insl
pop
mov
cmp
push
sub
adc
pop
ljmp
popf
pop
or
addr16
mov
insl
add
and
pop
into
loope
push
aaa
lds
cmp
mov
xor
jp
xchg
push
cli
xchg
aaa
add
int3
repz
mov
push
cmp
cmp
push
sbb
xchg
and
mov
mov
sbbb
in
mov
mov
shll
std
dec
cmp
out
mov
insl
push
jo
jle
xor
jge
and
and
mov
sub
je
cmpsb
lods
jecxz
mov
dec
into
xor
mov
jg
ror
std
add
xchg
out
inc
div
jg
outsl
sbb
jle
jns
popa
jp
inc
pop
ds
lds
mov
in
aam
ss
or
pop
mov
push
test
in
mov
iret
out
fwait
adcl
sbb
adc
leave
cmp
dec
flds
inc
cmpb
xlat
cmp
adc
mov
or
mov
pop
mov
popa
pop
cld
shll
scas
cmpsb
jg
mov
pusha
pop
xor
sub
mov
sub
and
icebp
dec
pop
xlat
lds
mov
dec
pop
xchg
rorl
sub
mov
les
jmp
subl
shrl
mov
adc
sbb
cmpsl
in
and
out
inc
movsb
or
rcr
popf
or
cmp
out
sub
pop
daa
adc
test
popa
out
lahf
orb
jns
scas
fists
sub
insb
mov
psraw
pop
das
cltd
inc
daa
jl
test
outsb
dec
push
push
dec
out
mov
jnp
sbb
jge
mov
jge
je
mov
lods
cs
cmp
lcall
push
xor
pop
xlat
test
cmpsb
lahf
stos
cmp
inc
push
fldt
inc
pop
popf
stos
loope
sbb
dec
in
dec
sbb
pop
push
test
xchg
jl
inc
cmpsb
pop
scas
fists
sbb
icebp
cmp
movsb
mov
call
in
movsb
or
stos
fdivl
pop
ror
aam
nop
and
arpl
popa
mov
sbb
dec
pop
or
rorl
addl
std
sbb
insl
scas
in
mov
and
add
and
jo
push
push
push
cmpsl
aam
movsl
gs
cmp
mov
add
pop
jae
fucomip
pop
ficomps
cmp
std
aaa
add
dec
cmc
sub
adc
jecxz
pop
push
cmp
shll
xchg
bound
sarl
inc
xor
sbb
jle
mov
fildll
and
out
jmp
je
stc
aam
pop
leave
adc
mov
sbb
sbb
ss
mov
xchg
push
push
sbbb
sbbl
icebp
cwtl
sbb
into
bound
mov
pusha
jecxz
lods
test
out
scas
mov
sbb
data16
addr16
jae
fdivrl
fsts
sbb
divl
add
int
fstps
mov
das
arpl
les
mov
fbld
stos
fisttpll
adc
pushl
orl
dec
fld
lcall
test
or
cmpsl
aaa
mov
lahf
sbb
sti
lods
jl
jo
mov
or
lea
fs
xchg
lods
js
test
sahf
pop
mov
int
js
adc
test
test
ret
sbb
adc
inc
ret
push
ret
sti
push
xchg
lcall
ret
add
or
cli
mov
add
jne
imul
gs
aad
and
sti
scas
test
jge
mov
cmc
cmpsl
inc
push
lds
xchg
push
xlat
scas
lds
adc
cmp
gs
sub
jmp
or
xchg
repnz
and
scas
shrl
cltd
or
rcl
add
inc
or
in
and
push
jb
inc
mov
inc
mov
loopne
pop
mov
xor
sbb
mov
outsb
ret
in
out
sti
xchg
lods
mov
mov
pop
or
cs
daa
shlb
stc
lock
jl
pop
pop
ja
or
cli
outsb
pop
rorb
pop
inc
push
insb
mov
and
mov
jbe
movsb
xchg
sti
mov
and
dec
mov
jp
xor
in
mov
add
lea
inc
push
or
rcr
sarb
push
jnp
ja
mov
jns
sbb
jg
mov
lret
sub
lgs
push
mov
or
sti
into
add
sub
mov
xchg
dec
push
adc
push
pop
xor
sbb
cltd
popa
mov
push
inc
jmp
aam
push
push
sahf
jmp
inc
dec
jno
and
fcomps
jl
mov
mov
incl
fmuls
sbbb
frstor
push
nop
sahf
test
adc
cmp
outsb
mov
imul
shrl
xor
test
push
movzwl
inc
lods
adc
jbe
sbb
dec
jl
push
ret
xchg
cmpsb
icebp
imul
xlat
jne
mov
push
add
pop
call
mov
std
sub
xor
mov
mov
cs
cmp
in
loopne
in
orl
dec
cwtl
pop
mov
call
mov
adc
popa
ret
lret
decl
pushf
hlt
mov
xlat
adc
lcall
hlt
shlb
xchg
shll
rorb
icebp
inc
clc
mov
xor
or
or
pop
pop
bound
push
pop
mov
fnstcw
leave
push
roll
int
dec
popf
mov
leave
add
mov
leave
lods
mov
add
fbld
fdivr
test
inc
add
push
push
jp
mov
xor
js
inc
xor
popf
shrb
ja
push
xor
data16
and
shr
xchg
mov
lahf
pop
adc
push
dec
mov
xchg
dec
or
xor
mov
pop
add
pop
dec
pop
aam
loop
pop
pop
mov
push
dec
aam
dec
xchg
jle
mov
sbb
sub
mov
mov
add
jne
lods
mov
sbb
lahf
scas
out
ret
dec
inc
dec
xor
pop
dec
sub
fchs
loop
insl
cmp
cmp
and
fld
mov
dec
inc
jmp
inc
inc
mov
imul
pop
mov
incl
bound
add
shlb
cmpsl
mov
aad
lods
xchg
into
mov
or
sti
fs
es
repnz
shl
ret
cmc
push
pushl
push
push
mov
jle
xchg
int3
push
test
xchg
mov
push
aad
lods
cmp
lods
lods
outsb
sahf
es
push
pop
fcmove
bound
addl
adc
ror
orl
repz
and
sbb
frstor
out
jp
jmp
mov
and
jp
out
xlat
fidivl
notb
cmp
stc
sub
aaa
mov
or
and
cld
mov
push
iret
rclb
xchg
jg
xchg
inc
xlat
idivl
inc
enter
or
scas
cwtl
sti
mov
push
cltd
adc
dec
pop
mov
scas
sti
fistps
jb
push
data16
fildll
jo
loop
mov
push
nop
inc
repnz
cmp
cli
call
lods
push
ret
mov
sbb
lret
lods
testb
add
xor
add
push
jb
cmc
lret
ret
mov
jne
mov
daa
pop
sub
xor
inc
in
stos
pop
xchg
incb
xor
movsl
cmp
adc
rcrb
inc
push
push
pop
add
push
sub
pop
jne
andl
dec
xchg
jmp
or
jo
and
sahf
std
cld
loopne
mov
push
mov
sbb
jnp
sub
mov
cmp
ljmp
jg
xchg
in
mov
adc
jae
mov
or
mov
ds
cmp
int3
cli
dec
sub
test
stos
mov
aam
repnz
loopne
es
aam
loop
testb
sbb
push
inc
pusha
cmc
add
gs
mov
mov
xlat
scas
rcll
test
push
pop
jno
cld
sarl
dec
push
pop
mov
adc
ss
stc
sbb
push
inc
push
jno
adc
push
adc
cmp
outsl
int3
jne
sub
out
jmp
mov
xor
rorb
mov
and
dec
xchg
dec
sbb
xchg
xor
out
mov
sbb
pop
push
lret
sub
imul
cmc
xchg
cmpsb
roll
flds
mov
sti
lods
loopne
mov
stos
push
mov
xchg
cmp
xor
mov
push
test
mov
lcall
mov
pop
jmp
cltd
gs
mov
mov
inc
call
jp
push
out
cli
inc
lock
lods
pop
js
aas
sub
lea
mov
or
dec
test
push
jb
mov
xor
jnp
icebp
test
xchg
in
inc
iret
adc
adc
add
loop
jle
sbb
mov
sub
push
outsl
loope
push
out
push
push
push
addr16
xor
and
add
lods
mov
xchg
mov
sub
ljmp
clc
outsl
xorb
arpl
addb
jo
stos
mov
fimuls
mov
jmp
inc
and
gs
inc
icebp
clc
mov
xchg
call
mov
jg
ja
push
aam
sbbb
sub
test
jae
push
sti
dec
xor
jae
adc
fsubp
popf
xor
pop
test
xchg
mov
inc
paddsb
cmp
outsl
push
mov
ret
sub
mov
int
std
add
dec
push
jns
jmp
mov
sarl
repz
aas
popa
orl
dec
and
mov
call
xor
inc
stos
out
loope
push
sub
sbb
gs
jl
push
stos
insl
add
inc
sbbb
shlb
call
cmp
loop
stos
or
pop
push
add
cmp
pop
jnp
imul
popa
in
push
stc
orb
and
popf
test
or
stos
pushf
sub
cmp
nop
sub
fnstenv
dec
rcl
repz
outsl
mov
xor
cld
and
or
lods
fidivl
add
aaa
push
repnz
jg
repz
out
dec
jne
movsb
jne
psubq
fucom
dec
cmc
arpl
and
lea
bound
test
and
add
pushf
in
setbe
sub
or
lahf
insl
cmp
adc
dec
jmp
jne
sbb
cltd
mov
mov
incl
or
mov
in
in
push
mov
dec
bound
arpl
test
lcall
adc
pop
loope
lret
add
ljmp
cmp
in
sub
int3
lods
push
fmul
mov
push
mov
jg
sti
pop
fldcw
das
cmp
out
scas
sub
aas
xchg
rclb
jecxz
rcr
pop
xchg
xchg
movsb
jle
xlat
mov
fildl
cmpsl
push
aam
subb
pop
inc
cmp
jns
mov
inc
mov
and
push
sbbl
sub
jg
xchg
hlt
cmp
xor
in
sub
cmc
cmpsl
cmp
lds
fistpl
sub
mov
mov
sbb
jmp
push
dec
fisttpl
cld
pop
push
popf
shlb
sbb
push
sbb
aad
rclb
adc
cmp
push
filds
cmpsb
imul
xor
outsb
inc
xchg
sub
jns
js
pop
stos
cmc
out
xor
insl
mov
rcrb
jmp
jl
xchg
xor
jg
fdivrs
cld
adc
dec
or
aad
pop
test
js
or
cmc
push
fldl
mov
cmp
aam
mov
hlt
mov
push
adc
mov
mov
aas
jb
mov
or
xlat
add
test
sub
lea
mov
xor
mov
idivl
ljmp
stc
or
or
pop
dec
rorb
clc
jecxz
ljmp
mov
or
or
icebp
jecxz
nop
xor
leave
mov
and
jmp
shlb
out
jnp
push
or
test
sbb
out
int
mov
mov
icebp
mov
outsb
dec
xorl
xor
scas
fs
ss
dec
jns
data16
jns
adc
mov
inc
sbb
fs
cmp
jecxz
es
loope
cwtl
call
sar
pushf
mov
fbld
jg
jns
fisttpll
xchg
mov
jmp
or
movsb
sub
ja
orb
add
dec
cli
fisttps
rcr
lods
mov
sub
push
inc
enter
jne
or
push
mov
adc
lahf
loopne
iret
dec
std
xchg
cmp
mov
lcall
push
cmp
mov
outsb
sub
pop
add
iret
mov
mov
ljmp
mov
out
rorb
add
adc
and
test
fisttps
arpl
out
and
mov
and
jnp
popa
jmp
stc
mov
inc
aad
arpl
loope
movsl
sahf
mov
and
xlat
sti
mov
adc
mov
lds
call
sub
mov
pop
push
das
and
push
or
addr16
stos
xor
mov
pusha
data16
loopne
dec
and
ja
imul
psadbw
mov
inc
sbb
mov
nop
fstpl
pop
and
hlt
lcall
das
shl
adcl
rorb
lret
sti
je
fisttps
cmp
adc
sbb
popa
repnz
mov
movsl
mov
xchg
stos
xchg
mov
pop
mov
sub
dec
mov
hlt
movb
jl
adc
sti
pop
pop
push
cmpsl
jg
test
inc
test
aaa
mov
mov
std
std
outsl
imul
mov
fstpl
push
mov
outsl
inc
negb
mov
es
jns
leave
sub
mov
dec
dec
xchg
out
or
jne
cmp
or
cmp
icebp
pop
adc
jbe
jno
aaa
shrb
jg
jg
bound
cmp
out
sub
faddl
dec
cmp
xchg
aas
push
daa
ljmp
xchg
mov
ljmp
imul
ss
subl
mov
mov
cmp
subl
mov
scas
outsl
fwait
ljmp
and
popa
out
pop
sbb
orb
sbb
or
push
adc
out
dec
adc
mov
adc
shr
jae
mov
sar
scas
xchg
xchg
xchg
cmp
pusha
sbb
fcmovnu
insl
pusha
jns
xchg
sub
mov
sbb
stos
into
lock
out
xchg
in
jg
xchg
jb
ffreep
outsb
test
jge,pn
jns
push
in
popa
push
xor
pop
jl
fstpt
hlt
aam
cwtl
mov
mov
and
mov
ror
out
fs
es
inc
push
adc
xor
mov
adc
leave
xchg
les
mov
and
test
lods
test
or
mov
insl
or
shlb
mov
xchg
orb
fcmovne
insb
mov
inc
aas
es
hlt
jg
aad
pusha
lahf
pop
loopne
mov
mov
dec
adc
and
or
mov
das
bnd
mov
jle
sahf
movb
sbb
or
mov
add
fcoml
movsl
mov
xchg
test
adc
jne
je
mov
adc
enter
ficompl
hlt
insl
rorb
aad
xchg
push
into
imul
aaa
mov
inc
js
push
es
pop
inc
sbb
cltd
xor
sahf
add
xor
mov
push
add
cltd
icebp
movsl
outsl
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
sbb
mov
adcl
xor
movl
cmpl
je
cmpl
jge
jmp
call
mov
dec
mov
jmp
mov
add
movl
cmpl
je
cmpl
jg
jmp
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
movzwl
mov
sub
mov
movb
lea
mov
mov
mov
xor
subl
add
subl
mov
and
movl
push
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
push
push
push
push
pushl
push
call
cmpl
jb
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
push
mov
xor
mov
push
add
jmp
notl
mov
movl
mov
inc
movl
cmp
movl
jb
subl
mov
xor
add
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
call
jmp
mov
addl
xor
mov
orl
add
movzwl
mov
mov
sub
mov
mov
orl
movzwl
adcl
xor
xorl
add
mov
movl
mov
inc
mov
mov
cmp
jne
sub
mov
xor
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
xor
movl
cmpl
je
cmpl
jg
jmp
push
push
call
mov
dec
mov
jmp
add
xor
mov
mov
xor
add
and
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
call
mov
dec
mov
jmp
movl
movl
cmpl
je
cmpl
ja
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
adc
movl
mov
adc
mov
movzbl
add
mov
mov
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
push
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
call
jmp
add
mov
mov
mov
movl
je
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
pushl
pushl
call
jmp
mov
mov
add
mov
mov
xor
sbbl
xor
addl
sub
sub
sbb
xor
mov
add
mov
mov
lea
mov
mov
xor
mov
andl
add
adcl
imul
orl
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movzwl
sub
mov
add
sbbl
and
mov
xor
or
adc
mov
andl
mov
andl
add
movl
or
andl
mov
and
mov
movl
cmpl
je
cmpl
jl
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sub
sbb
add
subl
mov
movl
cmpl
je
cmpl
jbe
jmp
push
pushl
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
mov
add
addl
xor
xorl
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jb
mov
xor
add
jne
jmp
mov
sub
xor
mov
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
push
pop
push
js
pop
imul
push
add
jae
jnp
pushf
jnp
mov
xor
ss
andb
ss
xor
imul
inc
or
jnp
mov
outsl
fcomi
add
pop
mov
lods
hlt
imul
sbb
add
or
inc
sbb
pop
mov
sbb
stos
inc
push
sub
dec
lods
inc
sub
xchg
in
movsl
push
mov
sbb
daa
cmp
popf
insb
pop
sub
es
dec
into
sti
pop
push
xchg
cmp
jbe
rorb
lret
jge
mov
scas
xor
dec
mov
out
outsl
test
or
arpl
leave
add
cmc
xor
inc
adc
add
addr16
test
inc
sub
mov
cmc
movsl
fwait
ja
pop
insl
movd
into
lcall
mov
sub
insl
in
pop
out
mov
adc
xchg
notb
loop
fdivrs
mov
mov
add
adc
mov
inc
sbb
sahf
fstps
dec
lods
inc
or
push
inc
in
test
or
enter
jno
xchg
or
jb
or
xchg
and
repnz
fwait
lods
sbb
cmpb
stos
mov
pop
inc
popf
scas
scas
mov
scas
xchg
mov
xchg
ffree
aad
sbb
mov
and
outsl
adc
xor
sti
xchg
stc
repz
mov
mov
lods
testb
aaa
repnz
cmp
sub
dec
shll
inc
add
xor
sub
leave
mov
cmpsl
cmp
dec
pushl
js
pop
mov
or
cmp
push
dec
xor
push
sub
mov
out
jb
dec
xor
shrd
push
fnstcw
fsubr
lea
scas
xor
into
mov
mov
push
mov
pop
iret
adc
rcl
pop
in
mov
ja
dec
out
daa
push
sbb
int
mov
mov
inc
sbb
adc
test
aaa
sbb
aas
lret
jne
fbstp
sub
mov
aas
jmp
xchg
push
xlat
mov
jae
std
sub
inc
mov
jle
ss
mov
sub
add
bnd
sub
aaa
popf
adc
inc
ret
jl
movb
ja
stos
mov
and
lods
xchg
and
loopne
add
mov
insl
mov
sbbl
xchg
push
and
outsb
sarl
cmp
div
aam
clc
push
mov
mov
mov
lock
mov
mov
push
push
sbbb
mov
mov
addb
mov
js
mov
outsb
hlt
popf
xchg
mov
lret
test
arpl
cld
dec
mov
adc
ss
addr16
jmp
cld
jns
mov
int
sub
lret
push
daa
out
jmp
fnstenv
in
cmp
cwtl
pop
and
mov
jo
inc
shll
mov
hlt
sub
das
push
pop
int
mov
and
addl
inc
sbb
lods
iret
mov
xchg
stos
cmpsb
jo
add
push
int
mov
mov
sbbb
push
mov
jns
mov
push
loope
rcrl
es
add
jb
mov
out
repnz
je
aad
adc
mov
call
ds
mov
in
sbb
dec
mov
aas
popf
and
movb
sub
pop
mov
insb
mov
in
adc
or
into
fiadds
mov
lods
in
lds
ret
and
daa
add
xchg
sbb
dec
mov
add
out
enter
aas
inc
sti
push
push
std
pop
pop
negl
cmp
lret
and
out
in
daa
ljmp
fs
mov
fadd
repnz
fadds
jg
xchg
jbe
ds
push
inc
add
dec
repz
call
sbb
pop
pop
lret
pop
out
jl
sahf
push
sti
lret
hlt
mov
lds
push
hlt
icebp
test
add
fs
mov
hlt
xchg
cmpl
out
movhps
mov
and
lcall
repz
test
scas
ljmp
pushf
mov
xchg
test
mov
negl
inc
mov
in
sbb
lods
push
lock
dec
push
gs
mov
cmp
aaa
je
lcall
inc
fidivrs
scas
stos
mov
cld
fwait
lahf
and
dec
and
add
cmc
push
sub
addb
cld
retw
sbb
add
push
shll
scas
mov
and
fsubs
in
mov
inc
jno
rcll
iret
pop
adc
cmp
mov
adc
rolb
loopne
lods
lcall
fwait
lock
cmp
iret
in
fstps
add
jns
mov
cmp
lods
mov
out
mov
ss
into
mov
jne
jae
pop
jmp
mov
xchg
stc
mov
enter
cmp
sbbb
or
push
and
dec
sti
and
sbb
rcrl
and
mov
gs
push
lcall
mov
and
mov
shlb
sub
xorl
and
bound
add
sbb
xor
jb
mov
sub
call
jbe
clc
cmp
lcall
sti
add
jmp
pushf
nop
xchg
loopne
jbe
sub
xlat
or
in
sbb
add
fcmovu
add
ljmp
add
out
arpl
jae
movsl
ret
js
arpl
fisttpl
scas
jne
ja
xor
jg
clc
pusha
dec
dec
repnz
out
rcll
pop
adc
sbb
push
vpxor
sti
test
dec
addr16
mov
leave
add
testb
mov
or
mov
mov
cmpsb
cld
movd
jmp
lock
push
fcomp
out
inc
pop
orl
sar
jae
out
call
cmp
pop
sub
mov
dec
cltd
dec
fs
push
loop
xor
cwtl
mov
rclb
push
add
sub
jl
mov
mov
cli
mov
lret
ds
in
lret
iret
cltd
cmc
xor
pushf
cltd
clc
out
ficoml
ss
cmp
pop
push
arpl
xor
popa
clc
jp
inc
mov
fmuls
mov
and
shlb
push
or
lret
dec
cwtl
adc
mov
sub
adcl
mov
inc
fcmovbe
xor
adc
adc
xchg
mov
cmpsb
xor
dec
dec
in
dec
rorl
xor
xchg
repz
stos
jp
fwait
pop
stos
fnsave
imul
push
sahf
stos
push
or
jg
adc
xor
push
js
ss
inc
lock
movsb
sbb
stc
dec
test
pop
or
cmp
mov
out
jecxz
add
and
inc
xchg
call
fwait
int3
xor
movb
adc
sub
sub
pop
adc
stc
in
and
cmp
sbb
dec
mov
push
mov
dec
dec
push
fsts
mov
stos
xchg
push
pop
xor
mov
pop
stos
addr16
orl
les
pop
sbb
push
loop
mov
jnp
shr
mov
inc
enter
xchg
je
hlt
insl
test
icebp
cmp
or
fistpll
xchg
insl
sub
push
dec
fiadds
or
mov
xchg
enter
bound
jo
ret
mov
pop
movsb
in
xchg
push
or
and
shrl
sti
xchg
stc
pusha
das
or
mov
leave
popa
jnp
cmpsb
out
call
loop
cmp
leave
loopne
xor
push
idivb
add
out
inc
out
fidivl
int3
repz
mov
movsb
mov
jecxz
or
lret
loope
pop
jne
cwtl
dec
aas
push
fucompp
push
sbb
adc
loop
sarl
ja,pn
cmp
mov
inc
inc
fisubs
push
xor
push
jle
inc
add
add
ffree
sub
int3
push
mov
xor
xor
cwtl
and
sbb
push
test
scas
jo
outsl
loopne
pop
mov
jne
pop
inc
push
scas
jae
fcom
adc
loope
movsl
stos
rorb
sbb
lret
push
shll
decl
mov
mov
push
test
or
fldt
cmp
pusha
sbb
pop
jae
cli
shrb
and
push
push
xchg
mov
xor
sbb
xor
push
jge
fcmovu
stos
nop
inc
sbb
out
leave
lahf
xchg
loop
cmp
cmp
push
or
das
pop
mov
mov
inc
je
mov
nop
int
cmp
and
fs
mov
jne
lea
jle
sarl
lahf
mov
jecxz
sub
ljmp
lods
jno
sbb
sub
out
mov
mov
cmp
xchg
ficoms
ss
push
ss
xchg
add
lahf
sar
fs
cltd
inc
bound
movsb
orl
rcl
inc
out
xor
int3
lcall
mov
push
filds
icebp
dec
mov
in
mov
push
adc
lock
ja
inc
pushl
les
dec
adc
mov
jne
cmpl
push
aaa
jae
mov
out
jmp
lods
enter
mov
popa
ljmp
adc
jno
pop
and
sbb
jmp
mov
ret
inc
je
mov
push
int
imul
dec
sub
push
adc
xchg
mov
rcr
cld
pop
push
xchg
testb
add
pop
iret
hlt
fisttps
xchg
std
or
mov
aam
push
and
lea
stc
xchg
pop
int3
fistpl
lock
xor
pop
pop
sub
mov
mov
pop
inc
pop
sub
sub
jno
mov
and
aad
dec
outsl
xchg
cmp
mov
dec
dec
pop
inc
sti
lcall
push
daa
mov
or
addr16
aad
adc
cld
mov
pop
or
cli
pop
les
add
daa
addr16
mov
sub
aas
push
mov
sbb
push
roll
push
lahf
aad
push
jecxz
mov
arpl
add
jg
and
pop
fwait
popa
test
pop
inc
test
cmp
scas
jae
daa
inc
pop
sbb
pop
sbb
aas
adc
imul
ss
fstps
xlat
xor
fwait
push
cmc
movsb
test
add
mov
jg
orl
push
outsb
inc
jecxz
pop
mov
leave
and
jb
test
cwtl
jbe
or
add
daa
scas
out
add
std
jns
xchg
scas
loop
or
add
cmp
or
jmpw
add
test
test
or
out
in
ds
movsb
shlb
push
mov
mov
jns
push
dec
sbb
pushf
push
mov
dec
test
stos
xor
xchg
jle
jbe
shlb
push
jecxz
push
pusha
and
outsb
and
sbb
sbb
test
adc
out
sbb
shlb
fisttpll
mov
inc
sub
jbe
jmp
jmp
jne
lods
rcrb
push
xor
add
inc
mov
lods
xchg
mov
int3
imul
negl
or
jne
push
or
adc
outsl
jge
clc
out
bound
movsb
outsl
dec
fstpt
out
pop
inc
inc
sti
push
aaa
sbb
inc
mov
jns
and
and
test
mov
jle
jmp
in
or
add
out
loope
xchg
or
xlat
out
jp
inc
int
mov
jmp
pop
xchg
mov
push
xor
cmp
jle
mov
cli
fmuls
sub
popf
sbb
subb
push
rclb
xor
pop
test
sub
sbb
push
push
fst
cmpsb
gs
in
clc
sahf
imul
pusha
and
add
xor
push
cmp
mov
nop
jge
ret
xor
pop
or
inc
push
dec
inc
je
sti
and
mov
push
test
adc
subl
pusha
repnz
dec
jg
mov
decb
je
inc
std
sbb
mov
aad
sbb
xchg
sbb
mov
mov
pop
lret
js
xchg
outsw
mov
jns
lods
sbb
pusha
push
idivb
jne
mov
inc
js
pop
in
shlb
xchg
dec
movsb
add
or
mull
mov
inc
dec
shrb
repz
fcompl
sbb
movl
stos
jg
aad
jnp
cli
mull
mov
sub
xchg
xlat
cmp
das
mov
push
mov
lret
or
int3
stc
push
outsb
mov
xchg
ret
in
add
push
and
xor
fidivrl
mov
scas
cmpsl
xchg
dec
scas
repz
cmc
and
mov
fcmovb
je
mov
cmpsb
pop
insb
and
sub
fsts
jne
xchg
cmp
mov
hlt
xchg
or
inc
pmullw
sbb
adc
push
lods
xor
call
test
movsl
lods
divl
lods
inc
enter
cmp
sbb
aam
fdiv
push
xchg
cmp
lock
fidivrs
lahf
out
rcrl
ret
and
loope
ret
lahf
adc
out
and
insl
int3
inc
xchg
into
shrl
aad
fcomp
push
sbb
stos
imulb
in
popf
mov
scas
enter
das
stc
outsb
ret
mov
out
mov
jo
jmp
push
pop
testl
bound
lock
dec
fildl
adc
add
nop
divb
out
push
mov
int
into
push
cwtl
mov
add
jg
sbb
out
sub
jnp
test
pop
ds
push
adc
insl
xorb
xchg
das
adc
shl
adc
or
sub
inc
sarl
sarl
or
pop
mov
popa
jo
jl
ljmp
int3
mov
js
rclb
inc
out
hlt
or
pop
mov
jg
repz
inc
repnz
stc
cmp
imull
xchg
push
jmp
sbb
aam
xor
mov
dec
enter
pusha
int
in
push
push
jmp
mov
or
sti
loop
mov
mov
mov
int
or
out
or
fidivs
jmp
cmp
push
jl
jge
or
push
push
inc
fs
adc
or
pop
xor
ret
andl
int3
mov
aas
mov
push
outsl
pop
jl
mov
inc
jle
jl
push
adc
inc
sbb
bound
mov
js
pusha
mov
adc
scas
jns
repz
addr16
adc
mov
mov
jb
xchg
jmp
in
aad
inc
jb
sub
inc
or
or
jae
lods
mov
sub
push
clc
and
adc
xlat
or
out
lods
adc
jae
loope
fnstsw
cltd
stos
mov
mov
sub
mov
push
pop
pop
pop
adcb
cmp
cmp
sbb
sbb
jecxz
scas
fwait
stos
mov
scas
out
inc
inc
xchg
test
pop
out
inc
clc
push
mov
add
fdivl
jl
dec
cmc
xor
fcmovu
incb
jl
jbe
in
sub
mov
mov
adc
test
dec
inc
scas
xchg
inc
pop
cmp
jle
jbe
jecxz
dec
lds
fdiv
adc
inc
mov
jne
xchg
pop
inc
adc
shlb
stos
hlt
fstcw
pop
sti
scas
in
pop
push
mov
enter
cmp
add
lea
inc
xor
sbb
add
mov
mov
pop
sub
ss
jb
stos
fistl
xchg
xor
sub
fisttpl
and
sbb
cmp
and
sub
ret
arpl
int3
mov
jno
in
popa
push
cs
mov
and
push
movb
mov
arpl
adc
rclb
mov
notl
test
fwait
xchg
pop
js
or
dec
adc
movsb
scas
fwait
sbb
or
jl
fdivrs
pusha
movl
push
cmp
out
and
rorl
mov
test
xorl
xor
or
nop
mov
aaa
cltd
out
push
sbb
xchg
push
push
lret
sbb
dec
scas
dec
popa
subl
stos
test
std
shld
push
cltd
xor
fucomip
mov
lods
or
add
dec
push
mov
fdivs
in
push
gs
pop
ja
orb
lock
inc
cmp
fstpl
xor
ja
enter
xor
jb
mov
sbb
outsb
xchg
aaa
add
lds
lods
jo
mov
loope
fistpll
sti
cltd
shll
push
jecxz
jnp
call
vpcomud
or
cmpsb
add
movsb
popf
jge
nop
jp
rcr
push
jbe
push
mov
std
test
fs
and
pusha
ds
xchg
xlat
xor
repnz
jae
or
lahf
faddp
sbb
fbstp
dec
jp
mov
lret
fiaddl
jns
push
add
shl
dec
mov
jge
jns
push
push
cltd
ja
mov
fbstp
popf
es
popf
movsl
imul
test
lods
out
mov
or
pop
daa
enter
jg
cmpsb
mov
pop
je
pop
stos
cltd
mov
mov
shlb
mov
ja
dec
stc
fwait
push
add
or
add
cmpsl
test
sbb
bound
fidivrs
js
icebp
popa
sbb
pop
dec
and
mov
xchg
push
mov
jnp
pop
and
inc
mov
fisttps
scas
call
lods
rcll
mov
xor
mov
cli
lret
mov
enter
xchg
subl
jo
subl
fstp
mov
icebp
jmp
dec
xor
push
ja
test
push
fwait
mov
jb
icebp
inc
stos
pop
xchg
mull
je
imul
inc
push
push
jg
in
sub
cmpsl
dec
dec
insl
jbe
inc
inc
stos
and
or
pusha
out
mov
jecxz
sub
mov
cmp
stos
jae
mov
sub
pop
dec
lods
mov
mov
repz
mov
and
fsubr
mov
sub
adc
scas
loopne
inc
xor
adc
insb
scas
lahf
sbb
mov
out
lret
xchg
sbb
inc
add
or
sbb
xlat
mov
in
xchg
sbb
shlb
mov
repz
stos
add
imul
mov
popa
push
pop
add
jae
sub
or
dec
or
and
jno
arpl
mov
xchg
in
popa
aaa
sub
xor
jno
dec
stos
inc
jp
xchg
or
mov
stos
mov
jb
bound
sub
pop
add
int3
loop
movsb
mov
cld
dec
cmp
inc
add
aad
fadds
xchg
pop
mov
mov
xor
inc
jns
fldt
xor
mov
and
add
xor
mov
sbb
fistpll
lahf
stos
sub
rorb
lods
dec
mov
bound
mov
inc
xor
rcll
push
mov
cmc
pop
imul
ss
xchg
inc
mov
push
lock
shll
sbb
jb
ficompl
fldenv
in
fisttpl
fiadds
dec
popl
cmc
add
aam
dec
sbb
movsb
shlb
cmpsb
cltd
add
hlt
lea
gs
inc
jnp
dec
into
cmp
dec
vpaddsw
adc
mov
repz
or
add
pop
mov
into
inc
mov
xchg
mov
dec
adc
pop
fwait
sub
cs
outsl
jbe
sbb
cmp
sbb
and
jmp
sub
in
stos
inc
into
pop
aam
popf
pop
icebp
cwtl
insb
enter
iret
add
xchg
cli
mov
bound
call
roll
loop
outsb
sbb
mov
lret
mov
xor
lds
sbb
pop
xor
cmp
test
outsl
inc
mov
inc
pop
insb
sbb
je
pushf
fsubl
add
fs
add
outsl
and
aas
in
pop
xor
jns
inc
sbb
call
stos
iret
pop
out
cltd
sbb
lcall
inc
pushf
xor
mov
cwtl
mov
pop
lods
lret
fs
enter
push
popf
push
or
xchg
mov
pusha
adc
shlb
cmc
leave
lods
inc
ss
ret
cltd
ljmp
xor
loop
fsts
shll
and
jg
cs
scas
sarl
das
mov
and
mov
clc
cmp
xor
mov
mov
xor
push
pop
xor
lods
out
sbb
mov
push
std
aad
inc
cltd
stc
add
xchg
and
out
sbb
jo
pusha
mov
daa
ret
inc
aas
aad
jl
push
dec
imul
mov
jle
pop
cld
adc
mov
xor
xor
mov
mov
and
pop
or
inc
outsb
andb
or
and
into
pusha
sbb
push
loop
shll
lods
andl
nop
sbb
inc
inc
fdivrs
das
addl
push
std
sbb
fimuls
mov
jo
ficoms
outsb
mov
nop
aas
aad
cmp
mul
sbb
ret
cmc
leave
add
mov
and
stos
lods
ds
and
add
push
mov
add
jno
test
mov
cmp
fstpt
repnz
mov
mov
call
xchg
adc
mov
push
add
imul
push
dec
or
dec
lahf
cmp
mov
in
jecxz
outsb
pop
test
add
or
adc
fiaddl
adc
fidivs
roll
fidivl
xor
jns
arpl
dec
movb
pushl
mov
rorl
mov
xchg
leave
sbb
dec
xchg
mov
mov
sbb
xor
inc
cmp
jae
outsl
xchg
mov
out
test
xor
xchg
mov
add
pop
dec
mov
inc
adc
dec
inc
imul
pop
jle
shll
fidivrl
push
mov
push
imul
push
xchg
adc
mov
mov
or
movsl
fstpl
out
and
lods
mov
int3
jbe
xor
insl
mov
pop
js
and
jl
stos
dec
addr16
jmp
ss
ds
jecxz
adc
stos
dec
mov
loope
out
es
jbe
or
insb
push
and
lahf
dec
push
fidivl
mov
xchg
jns
addr16
jno
icebp
pop
mov
scas
pop
imul
inc
andl
inc
jmp
lock
sub
mov
andb
stos
sarl
mov
shl
loopne
fistpll
pop
xchg
dec
icebp
lcall
outsl
ljmp
jg
jmp
xchg
je
xor
fstpt
shrb
mov
in
fbstp
mov
mov
lods
push
loop
fdivrs
add
call
push
pop
mov
cwtl
addr16
fnstcw
push
inc
lcall
and
fs
pop
outsb
enter
adc
sbb
inc
lea
fcomps
das
xlat
cmpsb
icebp
orl
cmpsl
push
inc
fstps
shll
inc
lock
cwtl
fs
push
sti
cbtw
jb
push
cmpsb
mov
mov
push
adc
push
push
and
pop
push
dec
adc
jp
scas
adc
sbb
fcoml
xlat
cmp
sub
sbb
pushf
into
add
jl
loop
aas
add
xchg
stc
shrl
call
add
stc
push
sahf
xchg
xor
xchg
cld
enter
mov
xchg
fdiv
or
pop
dec
pop
pop
mov
mov
call
stc
push
cli
in
lcall
cmp
je
jnp
andl
dec
div
loop
and
pop
out
mov
sub
mov
cwtl
popf
pop
mov
mov
and
ffreep
lea
cmp
xchg
jecxz
lcall
cmpsb
in
mov
xchg
cld
mul
imul
cmp
dec
xchg
arpl
outsl
js
xchg
mov
push
je
mov
add
gs
jbe
mov
add
xchg
ret
adc
js
int
ss
xchg
mov
and
push
leave
data16
inc
rol
sbb
data16
xor
pop
push
pop
popf
cltd
loope
stos
cltd
adc
xor
shr
imul
mov
lcall
pop
xorl
lahf
popa
jle
xlat
xchg
inc
in
xchg
xor
pusha
sbb
scas
dec
dec
dec
inc
sti
jmp
loope
dec
scas
mov
sbb
out
ljmp
outsl
jb
cmp
in
pop
mov
enter
cmc
leave
ret
aad
push
mov
add
mov
mov
mov
lahf
pop
cli
in
ror
push
or
xlat
mov
loope
shlb
or
add
mov
push
shlb
dec
dec
mov
insb
loopne
xor
inc
push
xor
inc
and
outsb
jnp,pn
lea
dec
dec
push
pop
sti
inc
xor
push
dec
cmpsl
lahf
lahf
mov
cli
inc
fsubr
adc
jb
aad
pop
movsb
sti
cmp
dec
adc
sbb
push
popa
and
ljmp
ss
xor
mov
aaa
das
jne
pop
sub
fwait
movntq
push
popa
cli
leave
icebp
scas
rcrl
faddp
mov
mov
pop
mov
mov
push
imul
call
sub
push
aad
mov
lahf
dec
xor
aam
push
push
sub
pusha
sub
adc
push
push
pop
inc
mov
sub
xchg
xchg
mov
je
bound
int3
fnsave
gs
in
mov
sbb
or
insl
sbb
les
leave
push
or
mov
cmp
push
add
movsb
cld
inc
jecxz
sub
cmp
inc
adc
sub
mov
inc
mov
dec
jae
xor
or
mov
in
data16
inc
cmp
clc
ret
repnz
in
mov
inc
data16
iret
dec
cmp
test
fdivl
cmp
js
cli
sbb
jecxz
dec
push
popf
repnz
loop,pt
es
fisttps
or
enter
enter
cmp
push
scas
call
lock
sbbl
inc
ljmp
mov
xor
cltd
mov
bound
or
movsl
mov
jns
jp
sbb
fmuls
push
add
mov
sarb
sub
adc
and
pop
dec
jo
push
cmpsb
adc
rcrl
in
rolb
fmull
ja
sub
xor
dec
data16
dec
pop
pop
cmp
jg
mov
adc
xchg
int
sbb
mov
push
hlt
sub
or
mov
imul
fisttpl
or
fdivrs
pop
adc
lods
lods
inc
pop
push
pop
dec
and
nop
stos
lcall
and
jp
call
mov
test
dec
or
aaa
fs
cltd
push
mov
adc
and
jp
xor
out
es
push
mov
dec
jecxz,pn
lret
cmp
jg
adc
js
push
ja
hlt
and
fcom
das
mov
repz
pop
in
imul
repnz
notb
or
cltd
mov
rclb
pop
cmc
mov
inc
fnstenv
mov
and
adc
movsl
data16
in
in
mov
xchg
cmp
push
mov
addb
dec
push
cmpsb
cmp
pop
add
pop
std
mov
mov
adc
dec
mov
mov
outsb
ja
into
jl
mov
push
jg
sub
data16
test
lods
xchg
sub
add
push
jo
mov
add
test
sbb
bnd
fcoml
cmp
scas
jb
mov
in
pop
lret
sbb
das
test
inc
xchg
stos
out
pushl
test
inc
lods
arpl
jecxz
lahf
push
into
xchg
out
cs
incb
push
xlat
arpl
es
jecxz
xor
xchg
stc
pop
mov
pop
lods
outsb
jno
push
dec
mov
inc
pop
std
xchg
cmp
mov
fcmovu
jecxz
jmp
pop
dec
rclb
fstp
lods
and
xor
test
outsb
ficoml
in
lret
dec
mov
aas
fnclex
sub
mov
rcrb
outsb
sbb
and
adc
inc
test
pop
add
fmuls
call
xor
or
pop
repz
test
je
data16
pop
mov
push
mov
movsb
mov
in
stos
mov
or
add
gs
xor
and
hlt
loopne
scas
call
frstor
jecxz
mov
mov
gs
pop
jmp
and
jns
push
pop
enter
and
arpl
in
mov
ret
out
inc
pop
cli
adc
shrl
out
or
or
jno
push
inc
arpl
icebp
ljmp
mov
xor
scas
sarl
mov
mov
cltd
sub
push
adc
rcr
cmp
adc
rcrl
mov
stc
xor
sub
sbb
out
idivl
call
mov
outsl
inc
jge
adc
mov
ljmp
mov
xchg
fcoms
fs
cmp
outsb
sbb
xchg
mov
or
mov
into
stos
mov
jecxz
xchg
cli
fwait
repnz
stos
dec
sbb
fwait
push
das
or
movsb
or
push
icebp
fisubl
mov
fcmovne
mov
ret
rep
inc
test
pop
mov
aad
cli
mul
je
arpl
idivl
push
insl
push
mov
popf
outsb
scas
lds
fistpll
cvtps2pi
adc
mov
push
xchg
inc
pop
xor
repz
shlw
adc
ret
insl
cmpsl
das
lea
add
scas
sbb
pop
adc
xor
sbb
hlt
pushf
fs
sub
sbb
ficomps
mov
push
mov
mov
roll
scas
ret
lods
xchg
addr16
lea
jle
test
mov
cmovs
and
popf
xor
sbb
loopne
xor
jns
sti
xchg
mov
add
aas
loop
in
push
hlt
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
jmp
outsl
sub
xchg
divb
daa
mov
mov
adc
jnp
pushf
jnp
insb
or
cmp
cs
fsubs
mov
adc
mov
push
mov
std
test
aaa
pop
cltd
push
out
push
je
sub
mov
aad
insl
int
sti
lds
pop
cmp
xlat
mov
ret
ffree
gs
or
jg
pop
mov
ss
xchg
lods
fwait
mov
incb
clc
repz
les
mov
out
mov
sub
cmp
out
movb
dec
jnp
mov
cs
js
pop
pop
jne
fwait
arpl
xchg
jle
pop
das
add
shll
or
sub
add
jl
loope
lret
stc
add
lea
push
pusha
iret
sub
aad
inc
inc
arpl
dec
daa
cmp
movsl
aam
aaa
xor
xor
cmpsb
mov
call
hlt
fld1
xchg
es
cmp
xlat
test
shlb
out
push
add
out
xchg
icebp
and
push
xchg
fidivrs
sbb
int3
sub
scas
mov
ss
cld
arpl
shrl
cmc
leave
stc
pop
lock
mov
mov
pop
in
jg
dec
xlat
das
dec
lea
fisubs
int3
inc
sub
jge
dec
repnz
mull
addb
popa
mov
cld
pop
mov
hlt
inc
ss
in
fistpl
imul
jno
sbb
fcoms
call
sarb
sbb
js
xchg
cmp
loope
mov
pop
pop
xchg
dec
sahf
inc
pop
imul
push
mov
sbb
andb
in
not
fstpl
popf
push
pop
les
cmp
mov
fbld
cwtl
scas
daa
ljmp
mov
sbb
and
sub
adc
jl
jo
xchg
pusha
and
inc
mov
jnp
jle
dec
xor
inc
push
or
es
xchg
sub
add
dec
pop
insb
inc
jae
sbb
inc
mov
fadd
push
sbb
imul
mov
les
and
das
scas
test
jmp
dec
or
scas
sarl
popa
cmpsb
jecxz
jae
mov
or
add
jl
test
popa
inc
inc
sbb
pop
scas
js
jp
add
cmp
or
sbb
mov
ror
dec
mov
out
int
imul
cmpb
cmpsb
std
inc
xor
repnz
jns
adc
xchg
lds
push
mov
lahf
into
ret
ljmp
cmovnp
mov
cmp
insl
mov
or
lret
insb
mov
or
clc
and
call
int
push
cmpsb
inc
jbe
mov
sub
ja
and
ja
bound
and
test
cmp
dec
inc
sbb
mov
lods
int
hlt
or
push
adc
cld
mov
mov
mov
pop
jmp
jecxz
std
jecxz
push
mov
adc
mov
test
and
adc
fstl
xlat
lea
pop
negl
push
adc
int
push
xor
xor
add
in
rol
in
aam
movsb
popa
fcoms
inc
mov
jp
dec
sahf
mov
stc
inc
fists
or
and
push
imul
adc
jnp
scas
sahf
cltd
push
xor
stos
test
xor
out
out
ret
test
imul
push
mov
cli
xlat
push
adc
xchg
or
ret
testl
mov
cmc
aam
mov
push
sub
aam
enter
sub
shr
and
xchg
inc
scas
loopne
sub
cli
outsl
daa
inc
neg
hlt
dec
xchg
pop
into
jp
sub
fcomps
jl
cmpsl
add
sbb
adc
ds
std
dec
mov
mov
into
pusha
sbb
push
mov
cmp
mov
mov
or
shlb
pop
inc
add
pop
sahf
lret
sub
cmp
in
push
push
mov
cmp
jbe
les
lods
je
repz
arpl
pusha
loop
pop
in
jle
ror
hlt
inc
mov
cltd
addr16
or
push
adc
repnz
insb
aad
test
mov
fwait
inc
mov
adc
bound
xorl
mov
mov
bound
shlb
add
stos
xchg
cmp
pop
lcall
sbb
test
jl
xor
ljmp
addr16
mov
pop
cli
mov
or
lcall
scas
repnz
mov
mov
xor
mov
push
gs
inc
xchg
inc
arpl
subb
mov
push
inc
fnstsw
fdivrl
jbe
xchg
and
dec
sti
or
hlt
lahf
je
fmul
mov
out
adc
sbbb
sti
jae
movsl
lea
xchg
rcrb
scas
negb
jo
inc
mov
arpl
push
xchg
xor
jle
cli
sbb
and
das
popf
sbbl
cmc
add
shrb
xchg
mov
jns
sbb
in
fisubl
fstp
pop
fisubrs
outsl
dec
sbb
cwtl
mov
pop
add
mov
call
int
mov
pop
inc
lock
dec
cmp
call
xchg
xchg
test
jle
sbb
aas
add
mov
pusha
inc
arpl
testl
out
data16
pop
mov
mov
inc
or
pusha
cmpsl
sbb
call
fstpt
sub
dec
dec
bswap
mov
orl
lds
or
jae
adc
mov
or
and
loop
or
xor
clc
adc
fdivrp
xor
sub
icebp
fucom
push
ficoms
orb
mov
xor
xchg
and
mov
cmp
pop
add
mov
dec
into
adc
imul
cmp
call
ljmp
movsl
xchg
xchg
arpl
mov
test
mov
bound
scas
mov
imul
pop
enter
pusha
push
stc
and
inc
lret
shll
xchg
incl
arpl
sbb
and
fstpt
mov
inc
call
pushf
fldcw
jns
fadd
roll
imul
and
mov
mov
sbb
das
cmp
fs
lcall
test
fstpt
ret
in
cmp
inc
mov
mov
or
jp
scas
stc
sub
xlat
jo
inc
rorb
lods
shll
dec
jb
pusha
movsb
lds
adc
into
push
xor
daa
repnz
testb
in
cltd
inc
sti
adc
je
cmp
xlat
cli
shlb
xlat
lods
dec
ret
push
jg
adc
push
call
inc
mov
pop
or
cmp
xchg
rcll
push
frstpm(287
mov
lcall
das
jp
js
xchg
aas
dec
xchg
push
add
and
sub
and
dec
insb
add
les
cmp
sub
cld
mov
jge
insb
mov
sub
jge
cmp
testb
fwait
pop
add
jl
iret
cmp
lds
scas
adc
gs
push
pusha
inc
xchg
pop
sub
outsl
in
sbb
sub
rolb
fwait
push
dec
lcall
pop
add
and
enter
jno
sub
or
and
stos
fsub
jns
jae,pt
in
imul
pop
cwtl
inc
out
mov
ss
out
dec
sbb
sub
lds
jbe
lock
cmp
sub
cmc
bound
mov
mov
js
mov
shl
in
lods
bound
out
push
pop
dec
mov
xor
adc
fld
and
mov
ds
adc
mov
mov
push
pop
sbb
jne
cs
outsb
mov
xchg
xor
jne
jle
xor
mov
stos
mov
cmp
push
ljmp
jo
loopne
cwtl
leave
cmp
shrl
repnz
ret
cs
add
pushf
pop
adc
call
mov
push
and
test
sub
add
inc
push
fimull
mov
mov
sbb
push
lea
jmp
push
dec
xchg
outsb
sbb
ret
mov
dec
adc
cwtl
and
test
mov
mov
aas
testl
sti
nop
aaa
mov
jp
and
rol
jo
push
add
sub
cmpsl
inc
jns
pop
xchg
push
pop
pop
pop
sub
fnsave
adc
and
fsubrl
inc
clc
mov
cmp
jg
loope
popf
xorb
mov
mov
cmp
fcoml
dec
push
xchg
and
loope
outsl
mov
inc
inc
lods
cmc
daa
push
and
inc
pop
jmp
xchg
pop
ret
imul
repnz
ret
outsb
aam
adc
adc
pop
pop
lods
push
jmp
jb
xchg
std
cmpsl
adc
xchg
push
sub
xchg
sbb
lcall
les
cmpsl
jbe
sbb
mov
jae
not
xlat
xor
xchg
int
jmp
ret
add
add
pop
mov
inc
mov
dec
outsb
adc
pop
adc
loope
stos
in
aam
out
and
cmp
push
pop
inc
sarl
lret
jl
repnz
sbb
mull
fst
inc
cmpsb
fwait
je
or
sbb
sub
test
mov
das
popf
add
mov
jmp
es
lock
jp
lret
cmp
outsl
loope
sahf
push
lods
or
out
push
jmp
lds
mov
je
jle
push
flds
outsl
fistpll
loop
cld
sub
mov
cmp
sub
jle
xchg
cmp
jg
push
xor
xor
mov
inc
sbb
out
movsl
cmp
mov
xor
lret
cltd
addr16
bound
dec
lahf
push
push
xchg
xchg
or
push
push
fsubp
imul
enter
les
xchg
adc
mov
movsb
mov
dec
enter
add
cwtl
dec
mov
loop
xchg
cmp
lcall
hlt
push
jg
cltd
push
jl
mov
aad
xchg
lret
fsubl
push
loopne
xchg
dec
mov
mov
jbe
ja
push
inc
ja
add
pop
in
mov
and
stc
mov
dec
dec
cmp
xlat
xor
mov
fiaddl
cmpsb
aam
gs
or
scas
mov
mov
lahf
rclb
das
mov
mov
aas
loop
stos
je
push
daa
sarb
out
popf
jle
cmc
clc
pop
push
ds
and
add
test
mov
hlt
pop
lds
repnz
mov
sbb
cld
fsubl
mov
pop
test
in
fiaddl
mov
dec
adc
jnp
ds
sbb
fwait
ljmp
jnp
dec
movb
int
add
jae
jne
dec
add
data16
sub
fiaddl
xchg
jo
add
movl
mov
adc
fisttpll
cmp
adc
movl
xor
fdivrl
cmp
test
inc
addr16
mov
cmp
push
push
insl
adc
je
mull
inc
sarb
rcll
push
xchg
add
mov
imul
push
pop
stos
pushf
rcl
and
cmp
aad
andl
cmp
imul
xchg
out
xor
shll
mov
adc
inc
outsl
ret
dec
js
les
inc
dec
sub
add
pop
ret
mov
cmc
mov
inc
xor
rcrl
xchg
ljmp
add
pop
imul
loope
add
mov
jnp
fnstsw
sbb
and
ljmp
push
fidivs
popf
inc
sbb
scas
int3
push
mov
xchg
adc
pop
mov
jnp,pt
mov
lock
add
dec
mov
lret
fst
cmp
sub
jecxz
push
into
jnp
aaa
lea
mov
outsb
jb
sub
push
jmp
test
cmpsl
add
fwait
mov
movsb
or
out
stos
push
pop
mov
sub
aad
sub
lds
in
fs
push
cmpb
pop
mov
bound
repz
lods
pop
shl
enter
dec
mov
xchg
or
test
or
lcall
clc
int3
cmc
sbb
cmp
adc
pop
into
jb
lahf
or
inc
mov
inc
lods
push
daa
sub
pop
ljmp
call
loope
dec
lods
cmpl
push
cmp
insb
lea
add
das
sbb
test
inc
sbb
rol
das
lcall
push
xchg
pop
mov
in
and
jg
sbb
inc
sbb
jb
aas
outsb
fidivrl
sub
fadd
call
sub
sbb
mov
pushf
push
jge
mov
leave
adc
mov
sbb
out
dec
jae
outsl
stos
frstor
cmp
aad
outsl
sbb
sub
out
and
add
mov
adc
sbb
iret
sbbl
push
push
mov
mov
or
push
out
pop
cmpsb
repnz
cmc
sahf
negb
repnz
sub
lcall
fsubrp
mov
lret
dec
xchg
shlb
popa
out
jno
xor
mul
jb
dec
add
cltd
sbb
push
mov
xor
cmp
sbb
push
xor
dec
out
sub
xorb
dec
ret
and
lret
add
add
pop
enter
addl
push
fs
das
pop
jg
push
cmp
pop
inc
and
mov
fstl
in
js
and
cmp
sbb
stos
mov
push
mov
inc
mov
lahf
lods
aas
mov
push
outsl
es
ss
stc
xchg
push
imul
pop
clc
mov
push
fsubp
sub
pop
add
addr16
imul
add
mov
sub
cmpsb
jg
test
jle
js
outsb
fidivrs
in
cmpsb
movsl
mov
cmpsl
mov
adc
das
inc
aad
jmp
cmp
jl
lods
mov
das
push
xor
mov
fsubs
mov
inc
push
mov
test
add
push
in
xor
sti
xor
pop
mov
repz
das
outsl
js
xor
sbb
ja
lock
pop
cmp
xor
push
movb
lret
cmp
dec
cmc
fnsave
movsb
jge
insl
stc
lahf
push
shrl
push
mov
xor
mov
fdivs
insb
ds
pop
and
or
scas
mov
xchg
and
dec
std
imul
inc
test
popf
lret
dec
mov
cmpsl
mov
loope
xlat
and
ds
cmp
add
jmp
pop
cli
or
notl
sbb
fwait
bt
and
mov
out
adc
mov
movsl
jbe
mov
adc
sbb
icebp
jne
push
lahf
insl
mov
pop
push
dec
xor
out
add
lods
push
out
dec
jno
inc
add
jo
or
cmp
jbe
cmc
stos
bound
lret
js
mov
sub
sti
je
mov
repz
xchg
sbb
push
push
mov
iret
iret
sahf
xchg
jmp
jno
pop
in
xchg
mov
stos
cwtl
rcrb
xchg
lret
inc
mov
cmp
cmp
cltd
xchg
adc
pop
sahf
in
inc
dec
add
ljmp
push
dec
mov
jbe
int
cmp
out
pop
dec
je
clc
lds
xchg
ret
mov
pop
and
push
jb,pt
mull
sub
jnp
test
pop
flds
add
jbe
outsb
mov
sbb
mov
xor
std
mov
js
mov
mov
pop
ds
adc
jno
div
pop
xor
ljmp
push
mov
aas
add
leave
cld
or
out
and
xchg
js
in
iret
inc
mov
jbe
sbb
insb
push
add
cmp
jmp
dec
fistps
xor
cmpb
adc
cli
push
ss
fsubl
jbe
xlat
mov
cwtl
and
outsl
jle
imul
inc
or
outsb
aaa
movsl
sti
fildl
ret
sub
xor
adc
and
mov
xchg
fnstenv
jne
xor
addr16
dec
cwtl
cmc
in
push
xor
repz
fsubp
xchg
shll
daa
shrb
int
mov
fdivr
sbb
lcall
fidivrl
mov
test
mov
push
lret
loopne
xchg
and
out
sbb
jg
shlb
jle
pop
sbb
cwtl
sti
or
push
cmc
out
sub
push
pushf
xchg
aaa
and
lods
shll
aas
scas
push
int3
inc
push
popa
sarl
mov
jp
xor
jecxz
ret
fsubp
inc
dec
daa
cwtl
lcall
pop
movsl
push
ja
mov
es
inc
in
sub
pop
xor
mov
pop
jmp
jle
sbb
pop
jb
pop
mov
adc
faddl
push
leave
cmp
cmc
add
insl
imul
and
lahf
loope
int3
dec
xchg
in
nop
inc
sub
mov
sub
rorb
xchg
je
xor
xchg
add
dec
fadds
xor
imul
jmp
sub
inc
fbstp
pusha
mov
data16
mov
ljmp
lods
lods
mov
and
xchg
outsb
jne
ja
pusha
mov
mov
dec
test
lcall
fcmovne
sbb
pop
mov
js
movsb
pop
jbe
inc
and
and
nop
xor
or
in
int3
adc
lods
mov
stc
loop
xchg
mov
pop
mov
add
movsb
popl
xchg
mov
push
lock
hlt
xchg
push
mov
in
rorb
in
and
pushf
mov
mov
call
sbb
ss
adc
push
cmp
pusha
dec
data16
push
pop
xor
lahf
in
lods
ja
add
pushf
psadbw
cmp
clc
mov
jg
xor
inc
mov
push
lods
aas
xlat
push
push
mov
mov
lcall
and
pop
adc
daa
jp
dec
leave
clc
pop
or
adc
add
add
mov
and
sub
notl
fcmovbe
mov
ffreep
jnp
xchg
add
out
inc
sub
xchg
stos
sbb
pop
mov
sub
cmp
push
mov
xor
dec
leave
jge
pop
mov
inc
push
jle
xor
popf
xor
test
in
pop
mov
je
aad
cmp
mov
lods
pop
push
movsl
push
jmp
sub
or
or
mov
cmpsb
add
daa
pop
addr16
mov
popa
adc
lret
repz
pushf
add
jp
in
rorb
aam
or
lahf
or
push
outsl
mov
lea
inc
scas
fdivrs
lock
addl
mov
inc
pop
loope
push
stc
mov
mov
stos
das
mov
cmpsl
pop
popf
xor
adc
mov
cwtl
leave
inc
mov
xchg
sub
ss
repz
xchg
and
sbb
lahf
or
sub
xchg
dec
sti
inc
ljmp
lcall
inc
jb
lahf
aam
mov
mov
movsl
mov
jmp
dec
cmp
in
into
ss
lret
mov
jnp
lods
loop
mov
faddl
popf
rcr
in
shlb
jae
hlt
inc
mov
mov
inc
aad
adc
mov
scas
mov
popf
mov
and
bound
sub
mov
lcall
rclb
sbbl
sub
clc
push
lret
dec
dec
imul
push
jbe
popf
pop
sbb
xchg
push
dec
jl
xchg
jbe
jbe
outsb
int3
xchg
inc
sbb
clc
add
lock
fisubl
jbe
xlat
jmp
jp
test
mov
lods
mov
jnp
xor
test
cmpsl
iret
dec
cmp
and
aam
cmp
jno
sub
rcrb
hlt
push
jnp
or
mov
jae
push
sub
pop
ret
jl
xor
loopne
sub
std
in
ret
dec
lret
mov
or
and
mov
dec
orb
cli
mov
dec
xor
movsw
cmp
and
rolb
and
adc
inc
inc
in
adc
inc
icebp
and
loope
hlt
xchg
cmpsl
or
rcrb
fbstp
pop
or
stos
rcll
and
rcrl
mov
mov
jae
lods
incl
cmpb
push
mov
sbb
sub
mov
sub
imul
mov
mov
sub
lea
fnstenv
jl
mov
rcll
in
add
outsl
xor
jge
push
ret
out
out
cmc
sub
je
shll
aas
adc
adc
and
dec
jp
movb
test
neg
cmpsb
cmpb
movsb
xchg
in
add
jp
xchg
push
sbb
dec
xor
decl
push
cmpsb
sbb
adc
jb
insl
out
or
cmpsl
pusha
lahf
imul
test
cmpsl
push
fsubrs
incb
push
call
jb
ret
mov
dec
mov
dec
xor
les
fcoms
or
lahf
xor
rcrl
xchg
pop
push
lcall
dec
into
mov
enter
mov
pop
push
mov
and
ja
in
xchg
cmc
notl
jle
into
push
fadds
fnstenv
push
add
fs
sub
test
ljmp
jnp
or
fcompp
fs
lock
or
fdivl
sub
jl
xor
cmp
pop
xorl
jo
cli
lret
jp
iret
pop
fstps
mov
pop
jb
popf
dec
loope
xchg
pop
fldl
inc
cwtl
add
mov
cmpsl
subl
push
dec
push
je
stos
sbb
lahf
adc
aaa
dec
lock
sarb
vcomisd
mov
cmpsl
push
js
dec
mov
jbe
mov
and
aad
cld
dec
dec
xor
fists
mov
out
jne,pt
mov
popa
inc
xor
adc
jno
cmp
leave
jl
shrl
int
mov
mov
movsl
dec
lods
sbbb
fstpt
sbb
sub
and
test
bound
scas
xor
jns
xor
sbb
icebp
pop
out
cmp
loope
push
add
rcr
dec
adc
xor
xor
fwait
iret
xor
bnd
pop
add
push
sbb
outsl
ds
enter
lods
pop
cmp
mov
stos
xchg
or
cmpsb
push
shr
xchg
xchg
xlat
pop
or
std
insb
add
dec
or
lods
and
inc
xchg
push
sub
test
jns
sbb
movsl
popa
ljmp
into
and
jg
push
in
push
mov
jl
and
loopne
lods
adc
shl
pop
stc
bound
lods
mov
das
and
adc
adc
inc
fisttpl
cwtl
lcall
mov
daa
in
adc
inc
ss
and
into
data16
mov
clc
mov
sbb
call
lahf
sahf
aaa
je
cmp
and
test
dec
inc
push
rcrl
add
pop
inc
testl
push
cmp
mov
sub
int3
push
pop
dec
pop
pop
xor
xchg
ja
ljmp
sti
test
cmp
jmp
cwtl
xchg
dec
xchg
inc
pop
loopne
scas
shlb
jno
int
or
mov
sub
jnp
mov
sarb
cld
loopne
jbe
inc
and
pop
inc
ljmp
inc
enter
pop
sbb
sahf
loopne
xchg
mov
stc
jb
std
dec
pop
jno
imul
test
mov
outsl
or
out
cmp
sti
lods
dec
clc
popf
out
out
sub
xchg
cmp
or
add
xchg
mov
xor
stos
push
je
add
fbstp
inc
loop
jno
mov
lahf
negb
or
stos
or
and
mov
inc
fisttpll
xchg
daa
frndint
movsb
fsub
jbe
cs
push
push
mov
mov
sbb
pop
rcl
lahf
sub
test
inc
inc
in
dec
imul
ja
shrb
je
jb
fcoml
mov
sahf
cmp
push
stos
jno
outsl
fists
je
pop
lods
inc
outsl
fcmovnu
ficoml
stos
xor
or
inc
outsb
xchg
out
mov
test
or
test
icebp
inc
lods
lock
push
sbb
notl
jne
popa
sbbl
mov
sarl
sbb
call
add
sub
stos
jns
cmp
loopne
mov
push
test
jmp
sbbl
jge
push
push
xchg
cmp
xchg
stos
pop
test
pusha
fimuls
inc
cmp
mov
in
xchg
aam
jbe
fwait
leave
loopne
stos
cmp
test
add
mov
xchg
push
in
insl
push
movl
add
xor
pop
mov
or
pop
sti
adc
push
dec
jnp
pop
jb
inc
rcrl
sub
or
shlb
adc
insb
test
test
inc
inc
fwait
xchg
mov
push
outsb
in
ret
cmp
gs
dec
jne
cld
sbb
xchg
xchg
cmp
sbb
fldln2
adc
cltd
fst
lods
in
push
cli
lea
inc
lret
inc
lahf
shll
push
lret
cld
dec
test
lcall
movsb
push
arpl
or
icebp
ret
inc
test
or
or
xchg
mov
inc
cmp
xchg
push
cmc
xchg
loop
sar
xchg
lds
int3
mov
dec
xor
jo
jle
and
push
jns
out
pop
add
aam
je
js
in
nop
pop
mov
sbb
fists
cmp
in
jmp
or
movl
push
into
shrl
cs
clc
sub
inc
inc
ds
les
mov
sahf
pop
add
pop
mov
jb
cwtl
push
cmp
rep
mov
adc
cmpsl
lods
sub
cmc
jae
popa
xchg
insl
sub
pop
bound
xor
js
mov
arpl
stc
mov
jbe
cs
les
pop
cs
jl
mov
jmp
and
adc
jp
out
mov
cwtl
adc
or
shr
adc
ds
inc
in
jae
mov
fdivp
les
stc
sub
jnp
sub
xchg
xchg
outsl
ud0
inc
mov
sub
int
push
inc
jbe
lock
and
cmpsb
mov
mov
inc
cmpl
push
out
mov
lret
aas
sub
add
jo
pop
mov
pop
and
inc
or
call
imul
dec
enter
jb
push
push
btr
inc
aas
pushf
rclb
inc
cmp
push
cmc
xor
and
push
sbbb
mov
mov
int3
icebp
push
xchg
insl
or
inc
jl
rcll
mov
gs
mov
xor
mov
rcl
iret
xchg
cmp
outsl
in
push
stos
shld
and
inc
xchg
or
add
test
test
out
mov
imul
push
sub
push
imul
call
mov
leave
mov
cltd
sub
popa
addl
pop
sub
mov
mov
mov
shll
add
push
inc
mov
fstps
ja
cmp
adc
or
dec
test
int3
jecxz
fisubrl
xchg
dec
jne
and
aam
adc
rorb
ret
xor
sbb
and
add
addr16
icebp
daa
or
loop
and
loopne
andb
pop
sbb
fwait
jbe,pt
inc
xor
out
adc
or
cs
mov
inc
aaa
cmc
pop
sbb
rcrl
and
mov
add
sub
pop
dec
pop
mov
pop
sub
mov
jno
into
dec
adc
sbb
ss
enter
test
mov
inc
mov
repz
mov
lret
push
push
cld
sbb
movsl
sub
cmovg
es
or
movsl
mov
or
ljmp
dec
fdivrp
mov
push
and
pop
push
push
fnstcw
loopne
xchg
rclb
mov
out
push
sub
jne
jge
in
hlt
shlb
or
adc
cwtl
jb
mov
aam
loope
push
add
mov
jge
fwait
out
idivl
pop
mov
adc
mov
mov
and
bound
and
fdivrl
test
idivb
fs
xchg
push
int3
dec
pushf
sbb
add
test
je
mov
lock
mov
ss
in
mov
push
cmc
add
or
push
test
sahf
push
jno
or
add
shll
lea
mov
dec
sub
jno
loop
stos
ret
and
fwait
arpl
inc
and
shl
mov
aaa
mov
adc
sub
mov
dec
je
pop
leave
nop
fst
imul
mov
in
cli
arpl
pop
mov
xchg
scas
mov
data16
add
mov
sbb
shrb
sbb
stc
jo
cs
mov
test
add
shlb
movsb
movsb
scas
insb
mov
sti
sub
fs
stos
jg
mov
cmpsb
cmpsb
outsb
ret
add
pusha
es
scas
scas
sbb
mov
sbb
lsl
mov
xchg
adc
sub
scas
fistpl
addl
fimull
pushw
clc
and
sub
mov
sti
pusha
xor
xchg
aam
xor
and
ja
xor
sbb
push
jecxz
movsb
xor
jae
or
ret
mov
pop
pop
mov
or
ja
aam
jbe
jo
pop
movsb
adc
enter
push
stos
jg
or
sbb
popa
ljmp
stos
inc
filds
lret
xchg
pop
out
xchg
push
inc
rcr
or
jns
in
pop
js
repnz
adc
icebp
sbb
mov
inc
out
xchg
add
push
icebp
out
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
addl
push
mov
mov
sub
imul
push
xor
or
mov
sbb
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sub
movl
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jg
jmp
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
mov
sub
mov
mov
and
mov
andl
xor
or
inc
mov
cmpl
ja
jmp
push
pushl
push
push
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xorl
mov
xor
mov
movl
cmpl
je
cmpl
jg
jmp
call
mov
dec
mov
jmp
mov
sbb
sub
mov
sbb
orl
mov
mov
adcl
sub
mov
orl
movl
cmpl
je
cmpl
jb
jmp
call
mov
dec
mov
jmp
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
movl
movl
mov
mov
pushl
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
neg
push
adc
push
push
xor
movl
mov
xor
xor
sub
add
lea
sub
mov
subl
movl
xor
lea
add
mov
xor
mov
or
mov
mov
mov
sub
imul
mov
andl
xor
add
inc
mov
cmpl
jle
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
xor
mov
add
xor
mov
mov
mov
mov
add
and
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
xor
mov
sbb
mov
mov
add
cmp
movl
je
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
pushl
push
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jl
jmp
call
jmp
mov
or
movl
cmp
movl
jne
movl
cmp
jne
movl
push
movl
push
movl
jmp
not
mov
mov
cmp
jne
movl
cmp
jne
movl
push
push
jmp
mov
mov
mov
movl
cmp
movl
jne
movl
cmp
movl
jne
push
movl
push
jmp
mov
mov
cmp
movl
jne
movl
cmp
movl
jne
push
push
movl
jmp
movzbl
mov
mov
mov
movl
cmp
movl
jne
movl
cmp
jne
sub
mov
movl
cmpl
je
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
jmp
mov
jae
jbe
cmp
add
sti
or
push
push
loop
mov
jnp
add
cmpsb
or
push
cmpsb
test
das
popf
xorl
pop
dec
and
iret
pusha
sahf
sti
lock
and
inc
or
pop
or
std
fiadds
cmp
out
mov
sbb
push
mov
test
push
nop
stos
xor
outsb
mov
aad
scas
add
lea
inc
and
mov
popa
and
xchg
psllw
sahf
push
sub
pop
inc
outsb
or
add
or
ret
test
pop
test
mov
jg
xlat
mov
xchg
xchg
inc
das
mov
add
std
and
scas
jns
insl
xchg
dec
imul
out
icebp
jno
or
add
rcrl
es
enter
dec
shlb
movsl
je
mov
incl
sti
les
pusha
sub
subb
jmp
adc
sbb
dec
xlat
insl
xor
add
inc
ror
and
pop
leave
in
mov
mov
sbb
inc
negl
inc
adcb
adc
jns
rcll
ss
lea
test
decl
scas
repnz
daa
out
scas
and
out
test
and
and
push
aaa
mov
mov
call
inc
cld
mov
mov
popa
rorb
in
ds
xchg
pushf
out
mov
sub
in
xor
push
or
and
mov
fisubrs
xchg
imull
cmp
push
stc
dec
jg
ret
stos
notb
pushf
shll
mov
mov
push
mov
or
ret
mov
shl
or
insl
lret
mov
xor
sbbb
sti
int3
cmp
int
fs
addr16
std
sahf
shrl
scas
sub
enter
enter
fcomip
push
xchg
rol
add
cwtl
rorb
js
int
ja
clc
pop
push
fs
popa
adc
ret
shll
jo
dec
aam
outsb
popf
imul
aaa
sub
pop
sbb
loopne
cmp
pop
jecxz
inc
dec
sub
aad
mov
inc
mov
sub
xor
outsl
stc
add
adc
ss
add
pop
mov
push
cld
inc
fidivrs
mov
or
add
xchg
rcr
cmpsb
sub
add
in
xchg
dec
jl
stc
adc
lcall
ds
mov
icebp
out
and
pushf
pop
lds
mov
dec
jle
rcrl
sub
pushf
outsb
pop
out
flds
inc
and
push
outsb
cmp
xchg
fwait
outsl
les
adc
mov
push
dec
sbb
cmpsl
xchg
idivl
pushf
ljmp
cmp
imul
pop
lods
adc
outsb
adc
imul
cmpsb
shlb
push
cmp
mov
cmp
call
mov
jl
test
lods
mov
hlt
shlb
in
les
lcall
jg
out
jmp
dec
insl
mov
sbb
fwait
aam
test
rorl
mov
sbb
pop
pop
xor
pop
or
inc
jmp
and
push
xchg
mov
push
pop
ljmp
push
push
xor
mov
push
xchg
jl
sub
scas
jge
iret
rorl
dec
pop
mov
cmp
cmc
cmp
and
data16
dec
ds
les
add
jp
mov
or
scas
add
jle
pop
xchg
pop
cmp
ja
jae
jns
mov
sub
les
aad
pop
fucomip
rorl
rcll
icebp
mov
jle
out
in
mov
out
or
cwtl
mov
add
mov
out
popa
cmp
les
mov
lret
out
lea
sub
fwait
stos
enter
dec
pushf
call
inc
pop
lods
push
icebp
cmp
pop
mov
dec
movsb
lcall
mov
out
popf
xor
cmpb
jecxz
fistpl
cld
arpl
mov
jno
or
inc
rolb
bound
jmp
jnp
mov
fstpl
loopne
stc
mov
jg
inc
mov
push
lock
and
and
stos
mov
push
mov
test
or
mov
add
in
gs
jae
push
jle
add
xchg
inc
dec
popf
dec
loope
outsb
inc
mov
loope
popf
mov
sbb
mov
mov
test
popf
mov
aad
jp
lods
ds
stos
sti
xchg
mov
push
std
in
mov
xor
xor
pop
mov
pop
xchg
aad
push
mov
repnz
int
je
jb
movsb
mov
add
testb
repz
and
pop
mov
sahf
xor
mov
or
add
or
xchg
test
xor
outsb
xchg
xor
es
or
in
ja
jecxz
push
fs
gs
dec
inc
push
dec
jmp
dec
cwtl
adc
dec
movsl
lahf
inc
repz
lock
sti
stos
inc
or
test
jmp
idivl
xor
in
cmp
loopne
xor
cmp
push
and
daa
and
xchg
adc
jge
stos
fiadds
pop
xor
mov
ljmp
push
sbb
mov
mov
push
outsl
aam
std
aas
pop
push
and
pop
dec
inc
sarb
dec
mov
fwait
jns
aaa
add
faddl
pop
mov
inc
js
mov
mov
ret
jne
mov
mov
mov
std
aas
cmp
cs
push
xlat
scas
xor
imul
incb
loope
loop
pop
mov
pushf
cmp
jl
leave
outsb
pop
adc
aad
mov
shl
scas
pushf
rclb
aam
mov
jmp
dec
or
push
pop
dec
into
and
mov
movsl
std
push
call
jne
cmp
fcoml
jno
fists
sbb
rol
leave
xchg
ficompl
jmp
sbb
sub
lret
add
cmp
xor
ret
sub
sub
stos
jmp
sbb
std
or
sub
inc
xchg
mov
dec
ja
sub
pop
mov
dec
mov
dec
dec
mov
and
jmp
mov
mov
inc
call
add
and
mov
mov
jo
add
cmc
shrl
dec
fidivrs
xchg
lds
cwtl
aam
dec
out
leave
pop
push
or
lea
lret
sets
out
lcall
lds
jmp
stos
jnp
lcall
sbb
sub
sub
inc
bnd
mov
or
pop
push
pop
movsb
loop
mov
jb
mov
inc
cmpxchg
jmp
inc
jmp
inc
jb
fisubs
push
jge
aaa
jbe
sbb
jle
icebp
jns
mov
repnz
xchg
xchg
push
mov
pop
repz
jmp
lods
lock
cmpsl
es
mov
push
scas
mov
repnz
xor
sbb
or
fmul
sbb
mov
add
dec
mov
push
mov
clc
insl
jle
jecxz
and
test
call
fisubl
mov
cmp
fmulp
mov
mov
fmul
sbb
fcompl
adc
pop
xor
lret
mov
sub
fldl2t
jb
sub
out
rolb
lret
dec
shlb
cltd
or
lcall
rcrl
das
pop
fstpl
jbe
cmpsl
dec
or
xchg
in
nop
or
mov
inc
cmpsl
lahf
pop
jecxz
leave
cmc
jl
es
out
mov
pop
xchg
inc
lcall
pop
mov
xlat
sbb
adcl
xchg
inc
pusha
imul
popa
jle
and
xor
push
sub
imul
mov
dec
gs
lods
mov
roll
pop
call
notl
faddl
call
movsb
ja
mov
data16
sub
xor
fisubrs
xor
aaa
xor
pop
mov
jnp
xor
inc
xchg
or
push
dec
das
test
test
sar
inc
aas
xor
xor
or
cltd
std
mov
cli
fidivs
orb
loope
mov
jmp
sti
sub
rcrb
pushf
sbb
hlt
sub
mov
adcl
mov
dec
ret
in
pop
jns
cmp
pop
into
cmpsb
mov
or
sbb
dec
std
mov
xor
not
cmp
pop
adcl
dec
xor
cmp
mov
ficoml
pop
mov
fxch
inc
sbb
pop
inc
sbb
mov
iret
inc
add
es
cwtl
lahf
push
jo
xor
pop
inc
mov
js
in
push
inc
xor
xor
lahf
rcrb
mov
pop
xchg
add
add
cli
fidivs
lret
mov
in
inc
mov
jb
push
pop
sbb
insl
jnp
sub
lret
pop
add
jl
cli
cmpsb
mov
fs
lock
lods
jmp
xchg
rcr
lcall
lret
and
lahf
inc
call
pop
shlb
jmp
enter
imul
cltd
nop
xlat
movl
and
adc
cmpsl
cmp
mov
push
or
dec
xchg
in
int3
inc
lret
pop
dec
dec
pop
add
mov
mov
xchg
test
addl
ljmp
cmpsl
out
je
enter
pop
test
push
add
fidivs
nop
std
scas
int3
stos
mov
loope
sub
outsb
or
mov
jmp
jne
addb
jmp
inc
add
std
fstl
push
gs
lods
insl
cld
add
test
cmpsl
or
add
mov
jg
in
stos
lret
das
aad
sbb
scas
aam
sub
or
adc
or
test
and
cmovnp
jge
shl
testb
lods
lods
insl
or
sub
push
lahf
fisttpl
sub
clc
arpl
lahf
sub
sti
xlat
inc
cmp
inc
mov
mov
mov
arpl
in
push
dec
lods
push
adc
aam
sub
pushf
pop
lcall
int3
xor
xor
xchg
repz
repz
pop
jg
mov
int3
pop
rcr
nop
aam
mov
aaa
pop
das
test
bound
pop
dec
dec
cmp
adc
jl
mov
or
push
adc
int
inc
or
or
xor
addr16
and
lods
inc
test
dec
test
lahf
popa
inc
and
adc
add
int3
mov
lock
cld
mov
pop
nop
lods
cmp
je
jne
mov
jb
mov
mov
out
dec
aaa
adc
pop
xor
push
subl
xchg
movsb
fidivrl
sub
orl
or
out
iret
jne
bound
cmpsl
push
xchg
sti
inc
inc
pop
dec
adc
jp
or
xchg
pop
cmc
jo
loopne
sbb
xorl
loopne
mov
fs
cmp
mov
leave
pop
in
and
dec
popl
sub
dec
stos
cld
inc
repz
or
or
mov
nop
jns
je
dec
decb
clc
cmpsb
mov
pop
xchg
add
in
in
std
xchg
fcompl
xor
fnsave
popf
adc
cltd
cli
mov
aam
test
leave
cmp
pushl
fadds
adc
arpl
adc
push
cmp
scas
in
lods
fimuls
sub
das
and
movups
scas
mov
mov
add
pop
rclb
push
push
pop
add
mov
das
cmp
test
incl
inc
lret
adc
stc
cmpsb
pop
and
nop
jg
jle
xchg
rorl
dec
mov
por
inc
xor
xor
jle
pop
push
cs
push
cmc
mov
mov
fisubs
sub
jae
cld
call
mov
aas
add
mov
movsb
in
pusha
jne
mov
sar
cmpb
mov
cs
lds
in
cwtl
arpl
out
mull
or
enter
inc
call
xchg
mov
ret
lret
lret
push
jp
mov
into
inc
lods
rorl
out
fsubrl
cli
add
or
inc
repnz
cmp
stos
sbb
jno
cmp
fstl
in
jo
mov
in
enter
push
push
push
iret
jae
outsb
mov
inc
xor
add
xchg
cltd
insl
jmp
rcrb
push
dec
les
and
mov
adc
cltd
sbb
inc
imul
outsb
sbb
call
fld
dec
cli
push
mov
mov
imul
lods
cld
in
cmp
arpl
pop
xchg
cli
ret
out
scas
inc
push
push
aaa
push
cmpsb
out
lret
cmc
xchg
mov
dec
std
mov
mov
adc
cmp
fidivl
mov
mov
adc
clc
cli
xchg
daa
xor
cmp
insl
add
fwait
in
pusha
mov
test
lods
jb
mov
adc
or
clc
mov
dec
sub
push
das
lds
je
ds
sub
pop
stos
jae
cld
mov
cmp
dec
push
shlb
jo
test
arpl
imul
jb
orl
mov
and
shl
fnsave
pop
adc
and
dec
test
push
mov
jbe
aam
pop
cli
inc
test
push
mov
mov
adc
enter
xor
dec
xchg
pop
data16
pop
xor
arpl
out
push
iret
jnp
xchg
xor
jne
cli
jmp
lret
stc
lods
cmpsb
imul
ss
jecxz
add
cmp
jg
xchg
movsl
or
sub
push
mov
mov
es
mov
cli
cmp
sbb
xchg
push
test
pop
js
mov
adc
loop
data16
mov
xchg
jo
inc
shlb
imul
vdivpd
loopne
mov
inc
and
inc
addr16
mov
or
dec
test
lods
mull
adc
cs
push
sahf
sub
ret
pop
loope
int3
mov
xchg
mov
adc
outsb
movsb
or
xchg
fwait
idivb
dec
adc
push
push
fdivl
and
push
push
fs
ror
add
adc
ss
inc
pop
repnz
movsb
jae
dec
jnp
imul
jl
inc
shl
pop
pop
int3
sub
dec
mov
fdiv
scas
push
xchg
and
stos
push
dec
jo
subl
lods
fcoms
push
cmp
xor
mull
rcr
fdivs
or
adc
sub
inc
or
icebp
repz
cmc
xchg
imul
jmp
inc
push
mov
lcall
xor
mov
es
mov
xchg
inc
push
adc
test
and
outsl
movsl
add
int3
jbe
cmp
mov
mov
ret
inc
int
mov
leave
js
jl
stos
scas
push
je
and
insw
das
mov
jne
jp
and
lret
and
das
mov
sub
in
pushf
sbb
push
popf
es
ja
ljmp
mov
stos
jmp
mov
lret
clc
mov
insb
aaa
or
rclb
fbstp
loope
rorl
inc
jmp
rcll
out
cmp
inc
ja
add
pop
pop
mov
mov
aam
push
insl
popa
imulb
ds
pop
or
int
shrb
mov
sbbl
negb
sub
xlat
shrb
xchg
in
xor
jp
mov
pop
int
xchg
and
popa
jae
gs
push
stc
lock
faddl
sub
outsb
pop
leave
sbb
mov
into
adc
hlt
or
lahf
mov
fistl
lret
dec
jno
cmpsl
insl
fdivrs
sti
outsl
insl
push
dec
dec
pop
or
sub
daa
stos
xchg
xchg
sbb
shl
call
ret
out
lea
arpl
les
pop
fnstsw
or
dec
mov
lahf
outsl
iret
jns
and
jb
andb
cld
andb
outsb
mov
ret
mov
xor
lcallw
jl
addr16
and
out
fs
inc
mov
dec
movntq
sbb
gs
faddl
in
jno
push
lret
or
jne
das
fisubs
xchg
fxch
mov
mov
insb
inc
in
push
dec
mov
sbbb
mov
push
shlb
sbb
test
lret
sbb
call
xchg
arpl
pop
pop
jp
and
mov
mov
adc
push
jnp
xchg
daa
inc
or
and
adc
xor
mov
jmp
popaw
notb
inc
push
dec
xchg
xchg
add
xchg
add
mov
inc
pop
in
inc
nop
decb
mov
xor
pusha
int
inc
rcr
dec
mov
pop
int3
mov
fildl
jmp
lds
dec
xor
rol
lea
enter
je
in
scas
shlb
jg
sarl
jb
add
scas
clc
dec
popa
xchg
shll
arpl
mov
aaa
xor
sub
jnp
dec
in
fidivrl
and
xchg
cmp
popl
fnstcw
push
insl
stc
mov
ja
pop
dec
adc
rep
cmp
inc
jmp
jbe
outsl
xlat
jle
movsl
sti
mov
call
testl
pop
cmc
scas
ljmp
dec
mov
out
ja
stos
push
or
add
fists
push
inc
outsb
dec
les
mov
movsb
cmp
sahf
and
sarl
iret
dec
or
xchg
and
stos
push
mov
mov
and
dec
fldenv
xchg
jbe
fcoml
mov
inc
mov
adc
xor
aas
lcall
popf
testb
jnp
ror
dec
test
icebp
dec
lret
divl
mov
frstor
xchg
and
aad
in
add
mov
gs
inc
movsb
loopne
adc
movsl
adc
nop
cmpsb
adc
sub
fstpl
xor
mov
stos
push
roll
outsl
xchg
out
cwtl
sar
mov
daa
pop
jg
jae
sub
add
add
xor
jo
ja
fisubl
lds
test
hlt
add
push
lcall
loop
sub
mov
sub
aaa
les
adc
rolb
repnz
push
orl
das
clc
cmpsl
je
mov
or
mov
mov
xlat
add
movsb
cvtpi2ps
cmp
inc
and
in
pushf
xchg
cmpb
popf
cmp
xchg
repnz
add
mov
inc
add
sti
cmp
mov
in
sub
sbb
xchg
insl
cmp
adc
dec
cmp
lret
sbb
push
cmp
add
into
aam
mov
lret
idiv
jno
out
popa
test
ljmp
pop
js
mov
dec
daa
sbb
addr16
sbb
dec
into
mov
xchg
push
sbb
repnz
lahf
mov
jge
xchg
push
cmp
mov
or
xor
push
and
pop
xchg
je
cld
ret
mov
mov
jbe
jb
add
and
adc
loope
outsb
data16
push
jmp
negb
ds
jecxz
mov
sbb
std
sti
and
test
test
int3
jnp
aas
push
or
adc
movsl
adc
repnz
cs
iret
jb
rcll
mov
call
ret
pop
add
pop
pop
jbe
xchg
fs
lds
dec
idiv
js
sbb
jnp
mov
fldt
cmp
and
insl
jne
imul
sbb
stos
mov
imul
dec
xchg
out
movsl
lret
xchg
cwtl
repz
fsubrl
mov
jo
dec
pop
push
jl
cmp
scas
movl
mov
sbb
mov
push
cli
inc
mov
ja
or
lods
sti
xchg
xchg
inc
mov
mov
std
fwait
std
cmp
inc
dec
push
dec
insl
or
outsl
cmpsl
out
repz
xchg
mov
test
xor
sbb
divps
and
sbb
fadds
cltd
into
sub
imul
jmp
loop
jnp
les
add
mov
mov
dec
aad
mov
add
fwait
pop
insl
lahf
movsb
out
in
leave
mov
push
sub
push
mov
fs
mov
das
dec
cmp
jp
out
adc
cltd
scas
out
lock
fs
mov
out
pop
mov
mov
adc
sbb
loop
or
mov
sub
dec
or
andb
repnz
mov
mov
movsb
jle
adc
into
and
outsb
shl
int
cmp
mov
pop
fwait
clc
iret
popl
jle
dec
lods
sti
sar
jns
sbb
gs
xchg
dec
sub
fstpl
fwait
fwait
stc
data16
or
mov
and
mov
mov
sti
sarb
mov
dec
xor
cs
pop
fucom
add
sbb
les
cwtl
jnp
mov
outsb
sbb
adc
xchg
int
xchg
aas
int
leave
mov
clc
push
imul
and
in
jnp
and
xchg
shlb
jb
int
addb
xchg
push
jg
add
xlat
inc
aaa
int3
lret
fnstenv
adc
test
mov
out
call
pusha
ds
cwtl
and
jle
xchg
ds
aam
pop
mov
inc
mov
pop
sub
xor
testb
adc
push
mov
call
dec
mov
pop
lea
xchg
cwtl
daa
rsm
push
fnstsw
push
mov
pop
out
dec
pop
int3
stc
sbbl
pop
mov
and
mov
push
jnp
xor
imul
xor
mov
push
mov
jb
push
out
fidivrs
daa
jb
aam
push
lock
imul
jns
les
lods
or
pushf
mov
mov
add
pop
ss
loope
push
lahf
iret
rsqrtps
and
sub
sub
andb
clc
loope
mov
and
mov
inc
or
xchg
jo
insl
push
xchg
fnstcw
repz
es
sbb
dec
lcall
inc
inc
push
mov
sar
fdivrl
bnd
mov
bound
popf
xlat
inc
cmp
stos
rclb
fwait
popf
fistpl
push
clc
fstps
or
xchg
fidivs
sub
mov
pop
pop
xor
adc
lock
lock
pop
mov
push
fdivr
leave
add
imul
fmull
cmp
aad
les
inc
popf
aaa
in
mov
xlat
mov
ret
xor
aaa
xor
orb
dec
mov
cmpsb
mov
dec
jg
pop
out
xchg
dec
scas
daa
jno
mov
pop
push
popa
popf
in
dec
cwtl
jmp
test
ret
push
pop
outsb
adc
gs
sbb
xor
loop
inc
inc
fimull
mov
das
push
push
mov
push
enter
push
test
test
test
rorb
addb
push
rcll
out
push
inc
test
shll
mov
call
inc
mov
mov
mov
cld
pop
and
pop
and
nop
cmp
add
xor
pop
add
mov
push
sbb
shr
test
insb
insb
es
mov
ds
xchg
xchg
mov
out
mov
int3
repnz
or
movsl
cwtl
mov
push
addr16
cmpsb
push
cltd
cmova
or
dec
inc
pop
es
xor
xor
cwtl
jne
outsl
repnz
inc
xchg
and
into
mov
jp
imul
adc
add
insb
fwait
pop
movsl
add
xor
das
test
data16
jns
in
fistps
mov
shlb
adc
push
mov
mov
inc
mov
mov
pushf
ss
cli
gs
cmp
lods
stos
and
cmpsb
enter
cmp
pop
mov
aad
lea
cltd
insb
mov
lcall
nop
push
in
es
inc
cmp
dec
xchg
mov
and
mov
stos
or
loopne
or
fistpll
aam
jle
push
mov
push
daa
xchg
fldcw
jl
ds
xor
enter
adc
lock
or
cltd
scas
pop
andb
cmc
ret
mov
popa
and
outsb
mov
mov
leave
or
inc
out
mov
fs
scas
xor
movb
jg
xchg
and
push
pop
ret
cwtl
lock
imul
pushf
aaa
adcl
sbb
jmp
in
pushf
test
scas
push
jl
xchg
es
out
mov
mov
call
loope
js
fdivl
mov
mov
inc
leave
insb
arpl
enter
or
sbb
sbb
pop
nop
in
in
pop
mov
inc
fcomp
push
daa
push
mov
outsb
jmp
xor
pop
stc
add
js
adc
cmp
pop
movsl
mov
std
pop
daa
and
lds
push
mov
sbb
pusha
stos
cltd
xor
sti
sbb
and
mov
call
or
test
xchg
aaa
jmp
and
jge
mov
hlt
cs
xchg
popf
dec
imul
cmp
or
out
add
cld
jns
hlt
xchg
jbe
imul
leave
pop
dec
jecxz
and
out
and
test
ror
imul
movsb
out
cmp
add
inc
or
pushf
push
jno
add
je
das
mov
bound
inc
enter
dec
adc
add
jecxz
fbld
popa
cmp
loopne
or
sbb
push
imul
scas
mov
cmp
cmc
mov
sub
push
in
jle
inc
push
push
pusha
rcrl
rorb
imul
pushf
pop
ret
ret
inc
orb
test
cmpsb
lret
imul
xor
inc
bound
roll
gs
out
in
ficomps
sub
es
fbld
imull
and
pop
nop
pop
rcrl
out
push
adc
loop
aad
jecxz
cmp
fiaddl
sbb
dec
sbb
add
mov
sub
adc
xchg
insb
pop
rclb
cmc
cs
lea
pop
sub
and
lods
popf
lods
fdivs
sub
xor
jg
jle
xlat
and
inc
cmp
jle
ljmp
mov
xchg
xchg
outsl
mov
mov
pop
pop
adc
mov
out
adc
test
das
lahf
test
xor
test
cmp
dec
je
push
inc
sbb
or
hlt
inc
das
mov
pusha
sar
pop
adc
xchg
mov
dec
jne
mov
mov
or
push
pxor
int
lods
fbstp
adc
ja
fs
xchg
or
addr16
fdivrs
sbb
push
ja
test
add
inc
popf
leave
jns
popa
cli
ficoml
jl
cmpsb
addr16
in
or
dec
ret
ja
sub
test
stos
clc
jb
ret
jle
xor
mov
leave
repnz
lods
xor
mov
dec
add
insb
shlb
xchg
fdivrs
int3
dec
out
int3
cmp
jo
or
and
push
mov
cmp
std
push
xchg
gs
fisubs
push
rcr
dec
pop
aad
popa
fwait
sbb
mov
pusha
shlb
cmc
cltd
jle
dec
cs
push
push
divb
mov
inc
pop
fcoml
sub
enter
push
push
and
fildl
pop
sahf
push
ja
insb
jnp
loope
outsb
stc
stos
xor
jne
add
sub
js
sub
orb
and
push
sahf
int
aaa
loopne
std
movsb
pop
mov
xor
inc
xchg
or
inc
jl
inc
jle
and
inc
dec
lods
or
add
cmp
fucomp
out
stos
js
xchg
popa
movsl
std
push
loop
mov
leave
stos
loopne
add
jae
cs
pop
push
xor
lock
sti
jge
lods
xchg
sahf
mov
inc
pop
push
push
jmp
bt
and
shl
dec
popf
test
scas
push
inc
pusha
popf
or
fisttpl
out
sbb
sbb
adc
nop
lods
notl
jns
cmc
cwtl
lahf
push
mov
or
dec
dec
test
idivl
add
mov
jae
enter
frstor
jg
pop
add
insl
fwait
pop
repz
rcr
cwtl
stos
out
sbb
jecxz
xchg
sti
in
mov
or
push
push
mov
arpl
lock
mov
jge
pop
push
cmpsl
ret
stos
outsl
sbb
xchg
rcr
lds
shlb
addb
ljmp
adc
push
jo
pop
sub
sbb
pop
out
dec
xor
xor
mov
sti
push
mov
sbb
adc
lods
sbb
lock
daa
and
shlb
sti
dec
sbb
leave
fnstsw
sub
cmpsb
leave
call
inc
lahf
scas
sub
xchg
adc
jne
adcl
mov
or
ljmp
rcll
lods
adcb
xor
sub
adc
pushf
sub
lret
jae
test
or
pop
inc
roll
fbld
jne
and
repnz
xchg
jle
outsl
pop
adc
jg
jnp
mov
mov
xchg
divb
jmp
jns
sbb
xor
dec
int3
test
inc
sarl
adcl
mov
xor
adc
cmp
int3
sti
lret
pop
jbe
shlb
and
mov
push
jg
or
mov
fsubr
sub
out
outsl
pop
int3
mov
jle
call
and
mov
cwtl
nop
adc
movl
pop
lock
xchg
gs
inc
add
or
into
lock
sub
pop
imul
es
sub
int3
sbb
sub
mov
fs
mov
cmp
xor
jecxz
pop
push
arpl
push
les
imull
sub
mov
push
scas
and
mov
xor
in
adc
sbb
jp
dec
push
push
add
insl
or
adc
mov
pop
xchg
adc
xchg
inc
call
loopne
popl
sub
sub
inc
ret
jp
fnstsw
mov
xlat
or
xchg
xchg
adcb
pusha
mov
dec
or
loope
pop
loope
adc
cltd
daa
and
fisttps
xor
cmp
or
or
loope
cmp
divb
xchg
rorb
fsubl
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
xor
jmp
dec
mov
imul
mov
fnstsw
call
pop
jle
sti
sti
rcll
adc
sub
jge
mov
ds
and
xor
xchg
dec
xchg
pop
mov
cmp
inc
icebp
out
rclb
xchg
aaa
adc
xchg
sti
and
add
cmp
mov
mov
sbb
test
xchg
lods
iret
das
mov
imul
ret
aas
hlt
ret
xor
xorl
ja
mov
sti
and
and
movsb
mov
in
dec
in
dec
jge
mov
cmp
outsb
push
add
push
ss
je
sub
adc
jb
shll
fcoml
adc
sti
mov
sub
cmp
je
xchg
arpl
fcomi
pop
inc
xchg
adc
inc
adc
pop
imul
sbb
shr
icebp
jecxz
push
adcb
inc
hlt
adc
std
iret
pop
push
push
inc
ss
or
inc
push
mov
inc
sub
or
push
lea
sti
dec
pop
ja
sub
mov
push
lods
inc
and
xchg
pushf
sbb
rcr
call
repnz
pusha
outsb
mov
inc
xor
adc
popf
in
sti
pop
cmp
xchg
jmp
mov
shlb
inc
sbb
sbb
mov
lock
fistpll
sub
or
jecxz
aam
aas
movsl
push
test
cmp
js
or
jmp
into
lock
ret
xchg
lret
test
int3
mov
ljmp
adc
outsb
mov
out
xchg
pop
out
mov
push
or
test
cld
cmp
dec
or
cmp
cmpsl
inc
or
notl
aas
out
in
add
loope
test
syscall
insb
add
les
pop
adc
xchg
xorl
push
jmp
push
aad
sbb
enter
push
mov
outsl
lcall
adc
adc
lcall
jne
fdivrl
out
repnz
jge
push
xchg
sub
mov
lods
mov
and
mov
add
in
fiadds
push
adc
int
insb
cmp
icebp
mov
or
test
lods
int
sub
in
or
mov
mov
aam
add
int3
push
aam
fs
cltd
sub
ss
sti
inc
push
mov
ljmp
aas
xor
test
fs
daa
pop
test
test
sub
sbb
enter
sub
cmp
jmp
xlat
and
xlat
cmp
mov
lea
xor
sbb
loope
sbb
pop
scas
repnz
insl
mov
shl
sarl
lahf
mov
sub
shll
or
and
mov
lret
mov
inc
enter
mov
xor
cli
arpl
cmpsb
je
or
mov
adc
gs
std
into
sti
in
add
mov
push
and
xor
add
dec
sahf
int3
in
scas
sbb
mov
mov
filds
out
adc
sub
xchg
sbb
insl
mov
mov
jle
cli
push
js
add
mov
xchg
std
pop
fdivl
add
mov
and
mov
add
sub
mov
add
add
pop
push
loopne
mov
jecxz
and
pop
cs
pop
repz
in
out
mov
lds
data16
cltd
pop
cmp
aas
dec
sbb
test
lea
stos
mov
outsb
sarb
mov
or
cmpsl
adc
pop
ljmp
lock
cli
data16
inc
std
roll
xchg
push
sub
pop
data16
aaa
jae
test
leave
cld
mov
pop
addr16
sti
dec
push
push
xchg
or
mov
jle
repnz
iret
jbe
xchg
mulb
loope
adc
and
push
shrb
sub
and
sub
mov
out
mov
lahf
dec
js
inc
jnp
arpl
je
test
dec
add
push
xchg
aam
int3
enter
iret
out
sbb
idivb
ljmp
xchg
lret
mov
sub
testl
loop
add
loope
js
xchg
cmp
in
sahf
mov
cmp
add
or
xor
xchg
call
repnz
js
and
bound
test
into
jl
stc
dec
adc
or
dec
pop
sbb
sarl
lods
sbb
push
frstor
lea
ficoml
ror
lea
dec
aam
sub
xchg
pop
mov
test
lcall
or
inc
and
dec
jecxz
arpl
lcall
sahf
and
test
push
nop
inc
jb
mov
and
mov
cmp
ja
xorb
je
lret
stos
cmpsl
pop
gs
int
xor
cmp
xor
clc
into
jae
out
push
subl
in
mov
enter
jbe
les
sbb
sbb
sbb
inc
jns
dec
outsb
bound
inc
xor
xchg
adcb
je
pop
rcrl
adc
xor
aad
mov
in
jp
aaa
fiadds
shll
mov
insl
inc
mov
mov
repnz
pushf
add
int3
sbb
imul
shlb
or
mov
mov
mov
orb
mov
xor
cli
leave
fdivrs
jmp
ficomps
sbb
div
and
stc
int
aam
ret
dec
pusha
mov
push
and
push
loop
outsl
out
cld
adc
inc
notl
sahf
add
dec
mov
movsb
push
jno
or
xor
les
mov
dec
cli
aam
outsl
out
sbb
sbb
popa
inc
mov
mov
nop
mov
mov
add
and
popf
and
test
sbb
xlat
js
out
jno
cmp
xor
aas
mov
lds
and
int
aad
bound
push
in
loope
clc
jl
add
scas
and
xor
dec
mov
pop
sub
inc
xchg
push
adc
dec
push
out
cs
pop
call
jmp
sub
pop
sbb
rorl
ror
mov
xor
fiaddl
dec
pop
rolb
mov
push
fdivrl
into
dec
push
mov
int
sub
and
xor
cmc
pop
mov
and
pop
test
xchg
test
test
cwtl
add
mov
cmpsb
jae
or
dec
adc
dec
xchg
add
in
dec
xchg
fsubl
fisttps
sarl
xchg
sbb
push
lea
pop
jecxz
pop
sub
xor
rorl
push
stc
jno
sbb
mov
aad
andb
ss
cmc
xchg
sahf
test
fiadds
mov
fld1
xchg
jp
mov
jo
out
rorl
push
aam
mov
dec
ror
icebp
xchg
movsb
test
enter
loopne
ss
fwait
lahf
mov
icebp
in
inc
mov
xor
push
inc
orb
or
pop
mov
enter
cmp
xor
xchg
dec
test
shr
mov
cwtl
lds
adc
push
in
insb
sub
cltd
cwtl
dec
xchg
add
mov
fs
sub
or
les
xchg
ficompl
les
dec
lcall
hlt
mov
xor
adc
or
inc
iret
fidivrl
ficoml
xlat
imul
dec
repz
nop
mov
in
cwtl
les
cli
mov
and
daa
mov
xor
movsl
aad
cwtl
and
pop
je
dec
dec
cmp
jmp
push
sub
sbb
aaa
pop
lods
popa
pop
dec
mov
push
sti
push
in
xor
sub
clc
add
sahf
cmpl
je
and
add
in
xchg
mov
push
xor
mov
inc
xchg
xchg
or
cs
pushf
mov
test
scas
mov
cltd
adcl
hlt
addr16
sbb
jno
cwtl
stos
pop
cmp
inc
add
cwtl
dec
dec
add
enter
sahf
mov
cwtl
adc
js
fidivl
and
jg
andl
sub
clc
sti
pop
ret
mov
jns
or
mov
fldl
lods
clc
mov
lea
adc
les
xchg
push
icebp
das
subb
mov
or
push
enter
inc
cmpsl
jmp
mov
sub
adc
lds
pop
fstl
arpl
mov
sbb
popa
lcall
and
pop
jmp
sub
or
inc
cmp
je
mov
add
pop
lea
shrb
cmp
shr
fsubrs
dec
mov
pop
mov
das
xchg
repnz
aaa
mov
scas
xor
and
xchg
shr
cwtl
xchg
stos
inc
pushf
in
ret
dec
adc
ret
mov
stos
cwtl
test
pop
bound
out
data16
cmp
jb
or
scas
or
mov
adc
xchg
jecxz
sub
mov
xchg
jae
adc
shll
stc
ss
in
fiadds
fcmove
cli
fcmovbe
mov
test
outsb
inc
scas
jae
or
dec
adc
adc
dec
mov
enter
ret
sbb
xor
mov
push
lock
dec
jl
push
loop
push
jne
clc
out
jle
mov
popl
aam
mov
xor
nop
stc
jl
adc
push
mov
scas
rorl
and
xchg
xchg
or
jb
lods
shlb
mov
sbb
push
add
jno
jb
fsubs
mov
nop
mov
mov
ret
xchg
loopne
subb
lret
mov
imul
jp
jp
inc
fisttpll
push
shl
imul
sub
int
sub
out
sbb
ffreep
mov
inc
or
js
js
les
dec
jno
mov
aaa
cmp
jecxz
daa
mov
xchg
loop
iret
daa
lock
mov
pop
inc
and
cmc
sbb
test
in
in
lcall
mov
icebp
fdivl
push
push
sbb
and
imul
xor
pop
insb
lahf
xchg
push
cmc
fisubrs
sbb
push
push
adc
mov
mov
mov
pop
push
mov
mov
xchg
cmc
cltd
xchg
outsl
enter
xchg
outsl
std
jb
pop
sbb
sbb
bound
or
lcall
sbb
lea
xchg
lea
loope
imul
mov
leave
repnz
in
adc
fs
int
stc
xor
lretw
into
fwait
dec
ljmp
or
adc
lock
leave
xchg
sbb
jns
mov
hlt
pop
shll
in
dec
lahf
mov
in
sub
popa
enter
add
test
jae
and
in
pop
adc
inc
cli
std
in
ret
xor
push
mov
sub
std
mov
cmp
xor
fdivr
in
inc
mov
les
add
xlat
jmp
adc
outsb
dec
lret
call
jno
push
sub
dec
clc
add
test
cmpsl
enter
mov
mov
sbb
fisubrs
xor
insl
or
int3
sbb
aaa
movsl
xchg
int3
stos
add
loope
pop
int
add
cwtl
test
in
shl
mov
mov
insl
int3
fwait
dec
adc
mov
jae
sbb
mov
dec
dec
into
xchg
cmc
enter
cs
mov
cmp
ds
jge
in
cwtl
ror
decl
sbbl
in
loop
ja
inc
es
gs
cmp
cs
xchg
xor
std
shr
xchg
psubd
gs
in
lahf
decb
lock
jns
insb
push
sub
gs
and
ljmp
test
aas
xlat
inc
push
cmp
scas
jecxz
rorl
call
aam
jge
nop
fldenv
xchg
cmpl
dec
mov
pop
inc
sbb
add
int3
add
pop
push
push
adc
in
insb
adc
or
jecxz
cli
jmp
pop
xchg
daa
xor
dec
test
mov
cmp
es
push
mov
aas
mov
icebp
pop
or
mov
ljmp
ljmp
sub
repnz
xlat
dec
inc
arpl
inc
cmpl
fxch
into
and
dec
xorl
outsl
mov
out
sti
aad
adc
jae
sti
shrl
pop
movsb
arpl
or
fildll
aam
pop
pop
fwait
pop
pop
inc
lahf
xchg
mov
xor
adc
dec
repz
subb
icebp
jge
mov
shrl
sub
add
xor
sbb
ljmp
pop
insl
ds
mov
xor
js
lcall
rol
push
cmp
cmp
push
mov
enter
push
add
xchg
sub
mov
fdivr
push
dec
test
pop
shlb
pop
in
or
xchg
xchg
mov
and
lret
std
or
rcll
fiadds
lds
or
add
push
add
xchg
lret
dec
xor
bound
cwtl
sbb
xchg
lahf
add
jl
test
popa
mov
in
pop
push
lods
jns
or
out
adc
les
xor
mov
mov
and
dec
stc
in
sbb
push
aaa
mov
cmp
sarb
cs
ret
aas
subl
sub
popa
imul
xchg
mov
rcll
retw
out
imul
in
loopne
shll
mov
xor
lock
mov
jle
cmp
addr16
xchg
in
int3
pushf
pop
movsb
push
and
sub
inc
add
pop
inc
sub
push
mov
mov
es
in
add
mov
loopne
data16
into
popf
scas
xchg
push
enter
jno
pop
ljmp
cmp
sti
sbb
jno
jmp
in
lcall
jbe
ljmp
subb
insl
test
xchg
je
sbb
dec
sti
ss
inc
jl
dec
sar
or
xor
es
mov
sub
pop
mov
add
mov
aaa
ljmp
and
cwtl
imul
mov
dec
jo
mov
ficoml
lea
test
jp
xor
lock
or
stc
ja
mov
inc
push
js
push
adc
xchg
inc
xchg
rorb
dec
rcrb
push
push
pop
or
cmp
fldcw
xchg
fstl
icebp
and
or
dec
add
fistpl
mov
cli
iret
xchg
fnstsw
into
icebp
iret
pop
cmp
ljmp
add
xor
jbe
bound
shr
stos
loopne
jo
out
xchg
aas
lds
dec
insb
call
inc
mov
scas
lds
add
scas
pusha
in
pop
sbb
mov
cwtl
or
sahf
xchg
lret
jne
mov
jl
repnz
mov
mov
aad
pop
push
enter
loop
daa
stos
icebp
shrb
lods
test
add
js
push
inc
mov
lea
dec
add
repnz
add
scas
add
cmpsl
sti
adc
push
or
ss
lret
stc
xlat
xlat
cmp
sub
xor
sub
std
insb
pop
jbe
xchg
ljmp
mov
stos
and
and
inc
leave
xor
ds
xor
sub
imul
popa
mov
dec
pcmpgtd
int3
ret
int
pushf
repnz
leave
mov
stos
inc
push
push
add
mov
std
mov
std
xor
xor
sub
mov
dec
mov
in
dec
mov
stos
insl
cld
fcoms
and
or
mov
pop
mov
lret
fbld
inc
aad
mov
sub
sub
xor
loopne
pop
sub
dec
sbb
and
dec
outsl
aam
popa
dec
push
xchg
cmpsb
leave
pop
xor
insb
dec
push
jae
repz
into
out
and
pushf
in
mov
push
fs
push
pusha
mov
in
idivl
jge
repnz
movsl
call
push
xchg
jae
push
cli
pop
cmc
push
outsl
stos
movsl
xor
test
push
je
jns
sub
mov
aam
adcl
mov
pop
stos
inc
nop
aam
scas
ror
test
dec
lahf
ret
call
mov
lods
pcmpeqd
pop
push
push
or
mov
ss
push
cmpsl
data16
mov
andb
inc
fs
inc
outsb
ja
fimull
leave
mov
add
xchg
dec
mov
mov
xor
adc
sbb
pop
dec
fidivrl
in
leave
js
fwait
jl
ja
into
cmp
adc
and
pop
xchg
jecxz
or
jge
sub
mov
cmp
pusha
int
pop
mov
je
addr16
jo
push
mov
and
jno
dec
add
inc
add
dec
sbb
int3
mov
pusha
mov
jge
xor
dec
ljmp
jmp
ret
xchg
out
lds
fcomps
fsubrs
inc
pop
mov
push
out
or
cmp
pop
or
cld
mov
or
or
lds
lods
cli
out
lods
jge
imul
fwait
icebp
ds
dec
push
pop
cmp
push
jp
adc
push
pop
cmp
hlt
sub
jecxz
sub
mov
rcll
into
and
sub
addr16
and
sub
sahf
fs
clc
fmul
cmp
aam
cwtl
pop
inc
xchg
movsb
ret
inc
ljmp
sub
rolb
aaa
mov
xor
hlt
or
sbb
andb
ja
add
in
jl
test
jae
cwtl
popf
lock
pop
sbb
dec
daa
in
jecxz
icebp
jns
aam
scas
fs
pop
arpl
push
std
jp
pop
fs
xchg
push
mov
inc
std
insl
hlt
sub
outsl
stos
fcoml
push
mov
lret
ja
sbb
aam
pop
aaa
or
cld
sub
pop
dec
adc
mov
and
subl
ds
lods
ret
add
mov
and
jecxz
jge
sbb
xchg
inc
lds
and
es
psubusb
data16
adc
cmc
std
popf
pop
xor
and
dec
int
iret
popa
sbb
mov
jg
add
mov
cli
or
jge
fs
push
mov
gs
add
cmp
add
inc
addr16
cltd
insb
rcr
aaa
movl
cmp
pop
out
push
mov
out
sbb
xchg
lock
cmp
cmp
jae
mov
outsb
mov
inc
sub
int
inc
jbe
lret
sarl
test
mov
push
dec
repnz
and
bound
or
add
into
fdiv
inc
pop
ljmp
jge
inc
jmp
or
mov
pusha
xchg
scas
push
out
jg
mov
jnp
sbb
inc
or
add
mov
ficomps
xchg
lret
add
xchg
xor
mov
dec
add
lock
sub
jge
lret
jns
cmp
orb
mov
xchg
fmuls
xchg
xor
mov
addr16
pop
lret
imul
adc
lea
inc
andl
cmpsb
fcmovnb
sbbl
dec
gs
push
adc
push
add
int
mov
dec
add
jle
test
dec
mov
int3
sbb
pop
adc
in
adc
xchg
dec
push
test
adc
ret
jecxz
sub
push
xor
jl
stos
pop
pop
int3
insl
imul
outsb
mov
aad
subb
and
pop
jno
cmpsb
icebp
ja,pt
mov
hlt
icebp
fwait
test
sahf
cmpsb
sub
ss
pop
addl
test
jmp
outsb
fdivrs
into
js
out
jno
xchg
addr16
adc
test
inc
mov
lahf
notl
inc
inc
pushf
fwait
cld
mov
fistpll
repz
js
fldenv
pop
stos
pop
and
cltd
cmp
pop
pop
sbb
subb
push
xor
lock
mov
movsl
jmp
mov
xchg
cld
add
ret
lea
hlt
cwtl
jnp
xchg
cmp
or
inc
mov
xchg
xor
xsaves
fmul
mov
js
loopne
call
fcompl
adc
and
sub
lea
push
push
loope
repz
pop
pop
das
pop
scas
loop
ja
cli
loop
popa
ja
xchg
shlb
pop
cmp
push
addr16
mov
push
and
mov
sub
inc
pop
sbb
out
xchg
and
int3
jg
sbb
cmp
jb,pt
mov
lods
mov
xor
dec
sub
idivb
imul
fs
sti
push
and
out
mov
push
test
adc
aad
pop
test
shll
mov
mov
aas
lahf
pop
sbb
push
cld
out
lock
mov
js
mov
fstl
xchg
outsl
repnz
ret
push
rcll
inc
lret
idivl
pop
sub
or
aad
ss
push
pop
add
mov
push
outsb
ficomps
mov
and
addl
mov
and
pop
js
mov
adc
push
iret
divl
mov
fadds
das
aam
sub
dec
mov
stc
lret
adc
and
mov
popa
lcall
fimuls
mov
js
pop
pop
sbb
lds
jmp
fwait
movsl
decl
in
push
mov
bound
std
xor
iret
dec
mov
inc
lcall
mov
ja
jo
sbb
nop
pop
rolb
fs
jno
sbbb
in
inc
jg
aad
jne
outsb
mov
imul
aam
test
mov
pusha
and
push
push
mov
xchg
inc
mov
out
dec
rcll
jnp
daa
pop
adc
inc
mov
sub
and
cld
jecxz
push
repnz
push
push
sub
aaa
jge
test
pop
idivb
ds
sub
push
cltd
jecxz
mov
test
mov
movsl
js
call
push
adc
movsl
imul
adcl
mov
jno
mov
xor
mov
rolb
fs
in
rcl
dec
lods
mov
cmpsl
and
mov
sbb
or
gs
iret
sbb
mov
pop
jl
xchg
jge
pop
daa
aad
pop
sub
push
inc
stos
inc
daa
xchg
cld
mov
pop
adc
mov
mov
and
jns
bound
in
sti
mov
addr16
in
daa
js
mov
jmp
sub
or
mov
stc
rolb
push
push
in
cmp
daa
xor
jae
mov
int3
pop
inc
cmp
xchg
repnz
mov
add
cmp
xor
js
shll
flds
je
add
mov
fwait
xor
lret
push
imul
jge
popa
fwait
arpl
test
and
dec
lea
mov
mov
jns
sub
js
test
add
aaa
data16
ret
mov
xor
cltd
jmp
xchg
adcl
add
inc
pop
xchg
add
outsl
push
jmp
and
sahf
lcall
test
ficoms
ds
mov
pop
leave
cs
add
aaa
xchg
mov
push
outsl
mov
add
call
cmp
stc
fdivrs
inc
stos
pop
jle
sahf
or
jae
cmc
add
cmp
mov
add
mov
cs
sub
imul
int3
leave
jo
mov
jmp
and
cmpsb
mov
inc
ficoms
inc
fcoml
lds
movsb
dec
lea
push
mov
jle
loop
es
imul
jo
fnstsw
sti
mov
add
je
ja
lcall
mov
dec
lret
sarb
lcall
mov
leave
popf
xor
pop
lret
pop
lcall
mov
movsb
cmc
or
and
loope
mov
sbb
adc
xchg
and
cs
aam
loop
clc
jno
daa
test
xor
mov
popa
bound
es
inc
inc
out
mov
sbb
aas
mov
clc
sbb
xor
jbe
clc
and
push
jns
sbb
jle
in
lods
mov
mov
fdiv
mov
cmp
iret
hlt
jnp
ret
jnp,pt
lret
mov
sbb
int
or
mov
cmpsb
mov
loope
adc
sbb
test
lret
lcall
dec
out
les
or
call
sbb
loop
ja
iret
or
cmpsl
cmp
inc
scas
sahf
leave
push
ret
mov
push
push
daa
sub
cmp
repz
inc
fnstcw
aam
cmpsl
fucomip
and
clc
scas
not
mov
jmp
repz
dec
cmp
movsl
push
movsb
out
xor
lods
mov
add
in
icebp
out
dec
hlt
xchg
pop
push
cld
inc
cmpl
gs
les
movsb
push
fisttps
js
mov
push
jmp
ret
mov
sub
push
in
mov
cmp
gs
inc
sub
cmp
lret
mov
sub
inc
fsts
dec
mov
das
fnstcw
lret
push
xchg
daa
mov
mov
add
add
or
jns
inc
dec
scas
jmp
cmp
pop
xchg
push
jne
and
jmp
aam
arpl
ror
xchg
jge
lock
bndstx
or
xchg
inc
loop
icebp
stos
sarb
jle
mov
push
jg
and
sub
pop
mov
popf
mov
mov
nop
cwtl
les
outsb
lret
jg
mov
lock
ljmp
pop
fisttps
negl
out
jp
push
push
cli
lcall
addr16
popa
fmull
pop
ds
mov
dec
jbe
mov
jmp
dec
out
xor
pop
mov
pop
adc
or
shl
and
nop
sbb
addr16
add
cmp
adc
pop
lods
cmp
xlat
inc
mov
pop
loopne
stos
dec
inc
lods
adc
sub
xchg
popf
fwait
xchg
sahf
sub
adc
std
push
dec
jmp
loop
outsl
or
jmp
sbb
fadds
mov
stc
sub
pusha
scas
divl
push
jae
lahf
jmp
sarb
into
push
mov
test
adc
mov
sti
insb
call
and
cmpsb
das
cmp
and
jne
std
fidivrl
mov
or
loopne
out
ficoml
adc
xchg
or
xchg
sbb
dec
push
lahf
rclb
nop
cmpl
pushl
add
jmp
lods
shll
mov
xchg
lock
daa
sub
adc
or
adc
cmpsb
cmc
lret
cmpsb
and
jbe
lret
sahf
mov
mov
clc
negb
aam
out
aas
sti
fistpll
inc
push
mov
mov
mov
inc
into
data16
mov
sbb
stos
mov
btr
shlb
daa
jnp
loop
icebp
daa
ja
imul
push
pop
icebp
pushf
mov
push
fcmovbe
ret
aad
mov
fbstp
fcmovnu
in
lods
lret
jo
scas
adc
lods
insb
subb
dec
inc
jle
push
test
mov
scas
push
aad
pop
insb
insl
mov
jo
cmpsb
jg
add
movsb
jge
inc
dec
aas
xor
shll
negb
add
cs
std
les
inc
js
pushf
xor
xor
jge
pop
mov
inc
iret
in
push
push
enter
mov
popa
loope
xor
out
jge
imul
idivb
jp
xchg
pop
or
inc
or
xor
data16
pop
sti
pop
push
loope
push
xlat
push
cs
out
xchg
cwtl
cwtl
or
dec
push
into
gs
cli
and
and
sub
loop
fwait
add
mov
cmp
fnsave
rcrl
negb
mov
dec
xlat
lret
cli
clc
test
es
xchg
add
enter
jnp
call
bound
in
pop
jbe
call
mov
xor
add
shrb
pop
js
mov
cs
jno
cmp
or
sbb
dec
inc
sbb
xchg
xchg
fisubs
mov
pop
inc
loope
popa
adc
adc
add
dec
fdivl
popa
dec
push
lea
stc
sbb
icebp
mov
popa
push
mov
push
lods
shr
pop
and
aad
movsb
mov
call
je
lret
scas
lods
bound
jmp
jmp
or
nop
lea
jecxz
pop
shll
out
in
lods
nop
push
loop
shrl
outsb
adc
stos
mov
stos
mov
movsb
je
xor
xchg
out
js
fldenv
xlat
xchg
and
lods
push
sub
rcr
xor
fistps
arpl
sbb
adc
gs
out
inc
jge
pushf
jp
or
inc
cs
js
xchg
xchg
push
fnstcw
insb
decb
sub
dec
add
gs
mov
push
rorb
adc
outsb
push
lea
push
adc
adcl
mov
adc
inc
sahf
mov
xchg
add
and
enter
xchg
push
rcl
jmp
loop
xor
or
sub
mov
push
adc
add
stos
in
les
dec
sub
push
movsb
ja
stc
daa
xor
enter
cld
inc
xlat
jns
scas
or
sbb
ljmp
shrl
xchg
cwtl
mov
jne
pop
out
add
les
mov
and
xlat
adc
xchg
mov
push
rolb
sbb
mov
test
mov
fwait
insb
sbb
xor
pusha
push
fcoml
cli
fs
jp
movsl
repnz
cmpsb
inc
dec
pushf
sbb
mov
ja
enter
ret
sbb
sub
ret
loope
lock
mov
iret
adc
je
cltd
mov
cld
inc
cmpsb
data16
stc
addl
es
dec
pop
stos
fsubs
pop
xor
pop
stc
das
cmp
xchg
aaa
mov
idiv
or
jne
aam
mov
cmp
cltd
or
pop
mov
pusha
outsl
xor
sub
mov
pop
pop
aam
cs
ss
cmp
into
jo
test
or
xchg
xchg
imull
cmpsb
into
cmp
int3
add
jecxz
mov
inc
out
cltd
and
gs
jns
mov
repnz
ficoms
stos
cwtl
fs
add
rorb
cmp
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
addl
mov
sub
movl
push
push
push
movl
cmp
movl
je
orl
xor
movl
jmp
mov
cmp
movl
jne
neg
mov
andl
push
sbbl
push
adcl
call
test
movl
je
push
andl
call
movl
mov
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
movl
lea
mov
mov
mov
sub
sub
lea
mov
subl
mov
mov
sbb
mov
movl
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
pushl
pushl
call
jmp
mov
andl
xor
mov
add
mov
movl
mov
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
mov
mov
addl
xor
adcl
add
andl
mov
mov
subl
xor
add
adcl
mov
mov
adcl
xor
add
subl
mov
mov
sbbl
mov
adcl
mov
sbbl
mov
adc
mov
mov
incl
mov
xorl
mov
mov
negl
mov
movzwl
sbb
mov
movl
sbbl
mov
xor
add
jmp
movl
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
jne
push
orl
push
call
test
movl
je
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
subl
push
push
call
sbbl
test
movl
je
andl
xor
xor
inc
mov
cmpl
ja
jmp
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
adc
mov
xor
lea
push
xor
mov
adcl
xor
sbbl
lea
xorl
push
xor
mov
adcl
pushl
adcl
call
mov
mov
xor
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
pushl
call
cmpl
jb
lea
mov
mov
xor
sbbl
xor
add
sbb
mov
adcl
xor
movl
lea
movl
mov
cmp
movl
jbe
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
call
jmp
mov
mov
mov
mov
sub
xor
mov
inc
mov
sbbl
sub
subl
xor
mov
movl
lea
movl
mov
movl
lea
movl
mov
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
subl
push
sbbl
push
sbbl
call
test
movl
je
mov
movl
cmp
movl
jne
mov
cmp
jne
push
addl
push
call
test
je
movl
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
jne
push
adcl
push
call
adcl
test
je
movl
mov
movl
cmp
movl
jne
mov
cmp
jne
xorl
push
push
call
test
je
movl
mov
movl
cmp
jne
mov
movl
cmp
movl
jne
addl
push
movl
push
xorl
call
test
movl
je
movl
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
adcl
push
push
call
movl
test
je
mov
movl
cmp
jne
movl
mov
movl
cmp
movl
jne
subl
push
addl
push
subl
call
adcl
test
je
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
sbbl
push
adcl
push
call
test
movl
je
movl
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
jne
push
push
call
xorl
test
movl
je
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
push
push
call
test
je
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
push
xorl
push
call
test
je
mov
movl
cmp
movl
jne
movl
mov
cmp
jne
push
subl
push
call
orl
test
je
movl
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
sub
add
mov
and
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
mov
sbb
mov
movl
cmpl
je
cmpl
jg
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
push
or
mov
mov
and
xor
xor
mov
push
xorl
mov
add
movl
cmp
je
mov
movzwl
add
mov
xor
xor
add
addl
add
movl
adc
andl
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jb
movl
negl
mov
or
movsbl
sub
jmp
ret
addb
inc
cmc
in
sub
jmp
jp
rcrl
and
xchg
cmp
sbb
jmp
andb
xchg
add
fucom
xchg
jg
mov
dec
and
mov
scas
inc
or
inc
out
loopne
dec
cmpsb
cmp
mov
out
in
sahf
flds
sub
inc
mov
jle
testb
jg
adc
mov
scas
pop
cwtl
insb
adc
pop
jo
sbb
push
fsubs
sbb
push
pop
jae
cmpsl
and
data16
fstps
push
sbb
insb
sahf
lret
xor
bnd
ret
cli
into
xchg
popf
cli
jl
push
push
push
in
mov
stc
jg
sbb
and
enter
call
pop
aam
sub
jmp
int
dec
adc
je
out
jp
orb
push
cmc
cmc
cmp
jl
fildll
jp
dec
cmpsb
jae
std
pop
outsl
jb
rorl
pop
rolb
inc
icebp
loopne
stos
xchg
jns
push
jmp
push
in
sub
popf
mov
jecxz
fsubr
xor
pop
andb
adc
sub
mov
cltd
xor
mov
push
fisubs
push
xor
in
inc
push
push
add
ret
push
mov
insb
lcall
test
xlat
imull
add
push
lahf
push
xor
arpl
les
dec
mov
add
xchg
sti
pop
inc
in
jle
cmc
sbb
xchg
sti
xor
push
shll
pop
jle
nop
rorl
sbb
jo
dec
and
repz
ja
into
movsl
xchg
sub
fists
hlt
movsb
ficoms
enter
cmpsb
fdiv
loope
int3
lahf
ret
and
or
cld
lock
cmp
fwait
push
mov
adc
dec
stos
push
arpl
pop
sub
mov
push
mov
ror
cmp
cmp
mov
out
or
sub
outsb
or
push
sbb
add
mov
mov
cmp
inc
nop
test
scas
in
cmpsb
or
xchg
xor
jmp
in
push
mov
jo
repnz
call
or
enter
pop
mov
cmp
movsl
adcb
pop
lret
mov
cs
ljmp
cmpsl
cwtl
dec
fbld
inc
loopne
sub
insb
test
dec
fcmovbe
inc
popa
xchg
fcoms
cmp
or
mov
pop
xor
cwtl
inc
call
pop
mov
mov
sar
and
fwait
push
hlt
lea
jb
out
fwait
test
insb
popf
mov
lret
clc
in
insl
enter
outsl
data16
scas
out
mov
pop
push
xor
icebp
mov
xchg
cmp
orb
ror
cs
sbb
jmp
adc
jne
fidivl
dec
jbe
push
imul
sbb
loopne
push
scas
adc
xor
jge
outsl
movl
lret
cld
repnz
add
cltd
in
cli
js
inc
jecxz
mov
dec
dec
mov
inc
cli
popf
pusha
or
jl
mov
je
test
sub
push
fs
fcompl
fsub
xchg
and
popa
jge
scas
test
inc
je
dec
jp
div
pop
fcmovbe
adc
cmp
js
enter
bnd
ljmp
sahf
mov
push
jl
mov
fldenv
mov
push
mov
xlat
jmp
imull
inc
pop
lds
sub
test
mov
gs
push
test
jl
and
add
movsl
jmp
pop
addb
bound
fsubrs
stos
mov
mov
jb
out
lret
xchg
xor
add
insb
inc
sbb
pop
shlb
inc
dec
out
aas
mov
setno
sbb
sbb
mov
into
push
sub
gs
sbb
test
push
xchg
jmp
gs
cmpb
or
aas
out
cmpsl
loop
or
stc
jecxz
fs
jmp
das
fidivrs
xchg
xchg
out
add
push
ret
sbb
loop
into
mov
push
es
mov
and
dec
add
mov
push
mov
dec
and
data16
es
sbb
jle
xlat
sbbb
ret
or
push
push
sub
pop
pop
lret
dec
pop
ljmp
fcomi
inc
add
mov
xchg
push
leave
jae
pop
dec
sub
rolb
adc
pop
push
test
pop
lcall
imul
jnp
sbb
hlt
divl
fiadds
jne
aaa
or
nop
jne
sbb
cmp
sbb
xchg
cli
sbb
sub
mov
mov
sub
fldenv
mov
mov
cwtl
and
jb
arpl
adc
aam
inc
sbb
subl
pop
xor
dec
lea
add
mov
jle
pop
jno
int3
dec
fwait
push
mov
lcall
add
xor
sarl
push
jmp
sub
sbb
scas
inc
fidivl
lea
or
mov
fistpl
and
in
loope
fildl
enter
sbb
arpl
xor
das
mov
ja
mov
push
ja
lods
adc
xlat
out
popf
mov
jge
jecxz
jno
lcall
inc
outsb
adc
fst
js
fsub
cli
pop
xlat
call
xor
push
mov
pop
scas
inc
test
fnstcw
jbe
dec
mov
sti
in
jecxz
sbb
test
fsubr
jnp
es
sub
test
cmp
dec
push
imul
mov
cli
dec
xlat
test
sub
push
mov
nop
fisubrs
inc
movsl
push
out
ss
call
outsl
pop
sbb
xchg
ret
das
mov
inc
xor
movsl
icebp
cmp
and
mov
in
and
arpl
jmp
pop
xlat
jecxz
xchg
xchg
daa
lock
out
pop
sti
pop
lods
je
cmc
xor
ret
sti
sub
mov
orl
xchg
mov
pop
adc
xor
mov
push
mov
ret
mov
jno
xor
inc
mov
inc
dec
sbb
add
lret
and
loop
mov
frstor
jg
orb
jae
aas
jge
cld
scas
sarl
pop
dec
jo
popf
jecxz
scas
add
mov
fs
test
add
pop
and
dec
sbb
lea
rcrl
inc
xchg
enter
lods
mov
adc
push
fistl
out
cmp
mov
cmp
xchg
dec
fimull
pop
ret
in
ljmp
loope
lahf
xchg
inc
filds
pusha
jno
loopne
xchg
ds
sbb
jp
add
rcrb
lds
and
rep
pop
or
sub
push
mov
test
add
stos
mov
and
jno
jle
cmp
scas
xlat
ljmp
add
xchg
add
xor
sub
mov
or
cs
fnstcw
lahf
mov
jo
cmp
dec
push
jb
std
jle
orb
mov
jno
lds
mov
ja
je
fs
mov
push
sbb
ret
mov
adc
dec
push
cltd
leave
push
shl
loop
aad
test
inc
fwait
and
xchg
and
shr
incb
and
xchg
loope
jecxz
xor
inc
xchg
xchg
movsb
jae
out
pop
cmc
push
insb
adc
leave
repz
and
hlt
add
mov
push
xor
mov
pop
xor
jne
push
mov
psadbw
xchg
pop
call
xchg
xor
jae
mov
inc
andl
stos
addr16
xchg
cmpsb
xor
jb
or
out
xchg
or
pop
les
subb
ss
fsubl
mov
fwait
sub
and
inc
cmp
rcll
test
enter
cmpsb
push
or
jne
push
sbb
sbb
inc
pop
push
ljmp
fsts
addb
dec
sbb
pop
push
es
pop
pop
in
mov
loopne
fcmovnu
jmp
out
orl
mov
mov
xchg
pushf
push
jb
es
sub
lock
mov
jae
sbb
xchg
mov
mov
mov
add
inc
fsubrl
add
test
jle
pop
insb
icebp
xor
mov
jno
dec
push
stos
div
fs
lret
dec
push
and
out
add
mov
push
sbbb
mov
negl
add
xchg
mov
sub
or
in
inc
mov
mov
dec
adc
movsl
add
mov
mov
push
filds
inc
popf
push
xchg
ret
movsb
pop
test
sub
dec
dec
jmp
mov
fistpll
out
nop
sub
sbb
int
jbe
mov
and
das
lods
mov
fldl
leave
push
insb
mov
dec
aas
inc
cltd
and
mov
addr16
mov
je
jle
andps
sub
aaa
cmp
mov
dec
loopne
xlat
mov
add
movsb
jg
cli
call
int3
pop
pop
cli
stc
push
stc
cltd
sbb
add
and
cmpsb
xchg
clc
xchg
adc
cmp
enter
call
push
inc
xorl
ret
fwait
aad
dec
xor
jae
jne
xchg
ja
sbb
lods
push
inc
fbstp
movsl
jae
or
mov
aad
ljmp
mov
aad
enter
jns
jb
push
ja
ficoms
ret
xchg
ret
aas
push
pop
jge
repz
add
fucom
dec
mov
sahf
out
xor
lcall
dec
dec
xor
in
adc
ds
ja
mov
fmull
hlt
int
pushf
stos
adc
pop
mov
mov
dec
inc
cmp
or
iret
add
mov
xchg
adc
stos
push
push
bound
adc
lcall
mov
mov
std
or
sub
inc
add
iret
inc
lods
fs
aad
push
mov
add
xchg
mov
dec
add
movsb
outsl
js
nop
call
xchg
je
sbb
pop
or
ds
scas
shll
dec
movsl
or
pop
xchg
sub
dec
adc
xchg
sti
test
sbb
adc
and
push
mov
and
in
xor
push
mov
outsb
mov
ljmp
pusha
or
add
cmp
loop
cltd
imul
repz
hlt
fbstp
pusha
jbe
enter
fisubs
aam
sub
add
out
mov
fs
mov
in
ficoms
pop
mov
and
pop
push
cmp
or
insb
adcl
dec
loopne
or
imul
mov
pop
in
and
test
ljmp
call
sub
cld
jns
push
mov
push
inc
pop
loop
and
rolb
filds
lods
push
xchg
adc
enter
loopne
xchg
mov
lcall
fsubs
bound
and
aas
lret
dec
mov
jmp
cmp
jbe
xchg
inc
xor
hlt
sbb
jl
hlt
std
pop
js
sub
sub
adc
xchg
andb
mov
pop
repz
and
pushl
shll
inc
jo
mov
fisubrs
cmp
icebp
mov
enter
lcall
inc
stos
mov
cld
mov
jns
out
nop
loopne
aas
inc
jmp
into
mov
out
jg
pop
cwtl
test
fcomps
xchg
hlt
pop
xor
jecxz
push
popa
jmp
sbb
shrl
sbb
mov
stc
sbb
add
ja
xor
pop
add
out
rcrl
ja
outsb
dec
lahf
push
loopne
mov
sbb
fwait
pop
jne
sub
push
pop
cmpsl
pop
insb
mov
sbb
pop
mov
jl
pop
dec
inc
insl
fsubs
icebp
movsl
xchg
ret
test
mov
xchg
fwait
dec
rcl
cli
stos
bound
jb
aad
cltd
mov
lcall
push
pop
pop
mov
sbb
pop
es
and
pminub
rcr
mov
fnstcw
mov
out
pop
jecxz
out
mov
jnp
mov
pushf
icebp
dec
mov
and
jae
mov
jmp
hlt
and
pop
dec
mov
mov
aad
push
dec
xor
or
or
mov
mov
push
cmp
cmp
inc
push
out
cmp
addr16
leave
outsb
js
push
inc
cmp
int3
mov
es
stc
push
mov
dec
xchg
lods
mov
mov
jnp
in
or
or
aas
sarl
add
lods
jl
mov
cli
ja
xor
stos
sbb
push
mov
push
rorl
xchg
repnz
cmp
push
lcall
push
jge
cmc
test
jecxz
sub
daa
mov
bound
cld
inc
add
or
rcrb
mov
enter
lahf
pop
and
loopne
in
fs
arpl
push
lret
mov
mov
or
adc
lret
mov
sub
aas
push
orb
dec
jne
sti
iret
mov
push
pop
push
xor
movsl
adc
mov
inc
ret
addb
sbb
aad
push
push
and
add
repz
imul
js
cs
in
add
aad
xchg
sbb
outsl
loop
sub
inc
mov
push
xchg
mov
push
divb
jmp
dec
jecxz
add
sub
xchg
in
mov
xor
jge
ja
fldt
fldenv
aaa
ljmp
sub
sub
pop
mov
inc
mov
es
mov
add
daa
lahf
out
mov
fcomi
stos
imul
jp
popa
fcoml
mov
mov
pop
dec
cmp
es
push
add
or
in
and
pop
adc
push
adc
cmp
pushf
push
xor
add
pusha
adcl
repnz
pop
lods
cli
movsl
jge
jmp
ret
dec
cmpsb
popf
push
shrb
jb
pop
rorb
jbe
cs
push
or
enter
inc
inc
loope
mov
xor
fldenv
cmpsb
xor
loopne
test
mov
jecxz
adc
rcr
cltd
dec
or
jbe
movlps
mov
push
mov
and
mov
sbb
in
sbbl
clc
aad
sub
iret
sbb
xor
scas
pop
stc
iret
in
lret
lds
lods
mov
aam
dec
inc
mov
xchg
or
pop
mov
inc
out
or
push
inc
dec
push
push
clc
sub
jne
mov
jae
fwait
cli
xor
cs
cmp
pop
pop
jg
push
mov
stos
repnz
aaa
loope
lock
mov
es
push
mov
mov
pop
xchg
sbb
pop
fwait
gs
and
addr16
inc
ds
pop
sub
in
add
imul
cmp
push
push
adcl
sub
aad
add
mov
fs
ds
sahf
or
sbb
mov
lds
dec
add
jo
pop
lds
stc
jne
sbb
dec
pop
cwtl
push
popa
pop
aas
cmp
or
push
lds
sbb
jae
jge
inc
xor
arpl
push
mov
ja
je
sub
scas
in
loopne
jnp
out
mov
adc
int
xchg
or
pusha
sub
scas
push
push
jmp
mov
cmp
out
jne
in
sub
les
cld
pusha
mov
cmc
sbb
insl
or
cmp
mov
push
mov
mov
outsl
lea
pop
cmp
cmp
and
test
call
lea
shrl
mov
fcompl
push
mov
bound
sahf
cs
lahf
jo
dec
inc
mov
xor
sub
or
xchg
fildll
ret
outsl
lds
sbb
aaa
xchg
pop
xor
popa
test
popf
out
iret
push
or
pop
ud0
adc
adc
dec
cmpsb
movsb
mov
inc
and
rorb
or
nop
jmp
fsubs
int3
cmp
mov
dec
dec
jbe
test
pop
outsl
push
inc
adc
pop
fcomp
xor
fdivr
cmp
out
clc
loope
sbb
sbb
in
es
add
jp
stos
or
xchg
mov
mov
mov
fistl
add
adc
adc
sub
movsl
enter
lret
jp
in
lcall
mov
add
fsubrl
lret
scas
ret
sbb
cmp
add
push
sahf
in
clc
hlt
jo
sbb
push
test
int
mov
std
sarl
jb
mov
ss
fwait
or
pop
sub
popa
stos
fcmovb
inc
out
shr
shr
mov
repz
xchg
stc
inc
out
xchg
jne
ds
loop
in
dec
int3
and
aam
std
push
mov
jb
pop
iret
lock
popf
insb
mov
dec
ss
in
dec
out
hlt
jecxz
and
push
push
mov
loopne
mov
add
mov
pop
push
or
lea
outsl
lcall
roll
js
insb
pop
sti
jl
lahf
popf
sbb
adc
push
test
sbb
jecxz
and
pop
je
adc
xchg
dec
jb
fsubrs
adc
orl
and
jmp
cmp
push
adc
popa
repnz
inc
movsl
push
sti
pop
nop
movsb
cmpsb
stc
js
and
mov
lea
aas
test
mov
aam
sub
cmpb
ljmp
mov
sbb
push
int
cmp
fiadds
std
stos
push
cmp
aaa
push
inc
xchg
insb
cwtl
inc
cmp
mov
xchg
shrb
std
lcall
ret
call
mov
iret
or
and
push
xchg
or
pop
fisubs
adc
and
sbb
popa
cmp
dec
in
aaa
or
or
xchg
add
or
push
or
js
pop
and
in
or
xchg
in
sub
lret
push
in
push
push
push
push
xchg
jne
and
xor
xchg
cld
repz
stos
out
xchg
xor
je
xchg
insl
xor
scas
outsb
push
push
pop
xor
outsl
sbb
mov
iret
inc
std
or
and
shll
sub
push
jno
push
fcompl
jl
inc
sub
inc
push
mov
xchg
hlt
mov
out
push
fwait
xor
clc
xorb
push
cld
ja
add
mov
notb
insb
aam
outsb
sbb
mov
jmp
xorb
rclb
jno
out
fnstcw
loopne
ds
int3
xchg
sahf
insl
sub
ret
iret
pop
sub
pusha
mov
js
dec
test
fisttpll
rcrl
jp
sbb
fsubrl
adcb
insl
and
mov
jp
and
mov
sbb
pop
mov
cmp
cld
push
addr16
mov
jo
cmpsl
cmp
cmpl
mov
cwtl
mov
hlt
or
pop
dec
iret
push
mov
call
sub
ss
filds
add
addr16
push
ss
popa
jbe
sub
mov
xor
mov
adc
mov
push
pop
scas
sarb
jnp
sahf
cmpl
pusha
push
repnz
loopne
aad
test
and
sahf
push
lret
add
jmp
jnp
lods
fidivrs
ss
testb
insb
or
jl
in
notb
test
mov
arpl
jecxz
or
popf
fadds
jl
gs
test
movsl
ljmp
and
adc
leave
ds
or
movsl
cli
mov
rolb
dec
arpl
pusha
xchg
push
negl
and
leave
mov
mov
cmpsl
rclb
cli
aam
fldcw
fmull
insl
jmp
xorb
cmp
cmpsl
jge
stc
addb
pop
xchg
int3
inc
sub
fsubr
sbbb
jle
inc
out
add
xor
ror
mov
dec
fisubrs
ret
sub
fcmovnu
sub
fcompl
cmpsb
stos
lret
fincstp
cli
xlat
sbb
popf
popa
test
mov
and
xchg
adc
es
jle
cmp
xor
aam
mov
inc
xor
mov
xor
movsl
and
jmp
lret
test
sub
mov
insl
jp
test
sarb
gs
inc
pop
sub
push
lcall
in
xor
test
sbb
mov
mov
mov
sbb
and
add
inc
std
sbb
out
mov
js
push
dec
cmp
aaa
xchg
repnz
jae
lods
sbb
mov
pop
mov
iret
sub
arpl
fmuls
fmulp
jle
aad
jo
pop
mov
cltd
push
pop
fwait
sub
nop
test
ret
xchg
or
inc
dec
or
and
jne
sub
push
subb
into
mov
fcomp
pop
imul
push
fsubl
into
mov
aad
in
add
lcall
mov
push
stos
popa
dec
loopne
les
jb
sub
mov
divb
mov
std
xchg
pop
xchg
xor
enter
xchg
jg
and
rolb
mull
lods
leave
mov
push
cmp
into
mov
xchg
mov
cld
mov
jno
sbb
sub
stos
and
aaa
push
inc
and
add
inc
shl
in
mov
loopne
fs
sub
jmp
rep
ret
arpl
sbb
sti
outsb
lret
das
xlat
dec
push
inc
movsb
orb
jns
int3
popa
jb
mov
cmpsl
pop
leave
push
je
pop
int
jns
adc
sbb
lods
mov
jne
int3
jb
push
and
sarl
xor
arpl
das
and
mov
dec
shlb
in
js
xchg
inc
imul
mov
mov
aas
into
scas
sub
arpl
outsl
cmpl
jb
and
mov
xor
xlat
inc
adc
xchg
shr
adcl
mull
rorb
mulb
loop
clc
insb
loope
nop
inc
pop
mov
mov
popa
enter
add
sub
ja
sbb
jb
jns
cmp
mull
cmp
fnstcw
mov
sbb
xchg
inc
lret
pop
imul
cmpl
jne
inc
push
push
aaa
lea
dec
mov
or
aam
dec
mov
pop
mov
in
iret
jge
cmc
out
adc
lods
cs
jne
shlb
insl
jns
dec
inc
loopne
mov
scas
outsb
push
inc
or
push
mov
test
mov
and
mov
xor
inc
push
call
jno
cmpl
cmp
jns
or
mov
mov
cmp
push
add
fldl
cmp
pop
xchg
fcoms
mov
outsb
or
push
dec
mov
dec
or
mov
mov
mov
xchg
mov
dec
add
xor
mov
pop
stc
icebp
fsubrl
movsb
mov
inc
aas
mov
gs
sbb
xor
mov
fiaddl
adc
mov
jl
jge
mov
sbb
sub
loopne
shll
jle
cmpsl
aaa
cli
jmp
mov
adc
stos
orb
sti
jle
mov
xchg
aad
cmpsl
mov
mov
out
call
stos
and
add
cmpsb
inc
jb
push
les
push
test
scas
mov
call
jl
nop
fists
lock
es
adc
mov
xchg
push
scas
xchg
dec
test
push
outsb
and
dec
jnp
jecxz
das
mov
sbb
pop
mov
mov
out
sti
xchg
idivl
stos
scas
jle
adc
dec
es
adc
fidivs
test
pop
das
stos
into
xor
xchg
xchg
lods
lock
out
push
je
cmp
mov
imul
in
addl
les
js
imulb
lods
add
cmc
dec
xor
adc
sti
imul
aam
ficoml
andl
andb
jns
jnp
test
lahf
xchg
push
jl
mov
imul
ja
ret
stc
push
jmp
or
mov
and
mov
ret
mov
mov
cld
int
jnp
cwtl
jl
mov
repnz
lahf
addb
inc
or
ljmp
movsb
mov
shr
push
push
cmpsb
rcll
rcrl
aad
mov
fildl
dec
add
adc
in
fidivs
fidivl
pop
stc
jp
xchg
mov
pop
jle
mov
mov
dec
jmp
fs
sbb
mov
inc
out
pop
repnz
add
aad
push
out
inc
hlt
and
int3
xchg
scas
pop
and
mov
fisttpll
mov
test
pop
mov
popf
lcall
mov
mov
xchg
and
jb
imul
ffree
ficomps
ja
push
xchg
dec
push
mov
push
xchg
outsl
sarl
in
xchg
mov
push
rolb
and
push
xchg
xchg
int3
es
dec
arpl
xchg
jnp
mov
test
lcall
sbb
and
add
push
enter
mov
push
sbb
js
cmc
adc
js
mov
add
push
jecxz
push
mov
xor
stos
or
mov
pop
loope
scas
adc
repnz
push
xor
mov
push
icebp
mov
sti
pop
add
lods
xchg
mov
xchg
cmp
or
push
sub
pusha
popa
aas
int
pushf
imul
jb
pop
repz
adc
je
ds
mov
test
out
or
outsb
push
or
fisubl
jae
sub
push
adc
mov
repnz
fsubl
mov
mov
and
popl
adc
adc
adc
xor
dec
push
into
xorb
xchg
mov
rclb
test
mul
aaa
add
adc
idivl
ds
popf
and
push
jge
adcl
jns
dec
and
adc
lock
cmp
call
and
xchg
cmp
push
push
pop
and
pop
rcr
xchg
push
jns
mov
stc
addl
xchg
inc
xchg
xchg
ffree
and
and
mov
xor
int3
cmp
push
and
xor
mov
mov
shll
incl
jae
fwait
dec
in
fs
or
add
dec
rolb
adc
add
xor
and
gs
push
cmpl
sub
push
clc
aas
insb
fisubrl
jne
sbb
divb
inc
mov
aaa
xchg
test
orb
out
fs
push
sbb
dec
shll
adcl
jecxz
rcrb
fldt
int3
sub
outsl
subl
jae
movsb
and
out
jno
ss
sbb
and
test
or
lret
sub
lock
cmp
xchg
mov
cmpsl
push
mov
mov
fst
pop
mov
add
xchg
in
ljmp
pop
mov
xor
dec
mov
cmp
xor
add
or
mov
cmp
lea
push
or
mov
pop
cld
jae
inc
popa
mov
fimull
push
shll
lret
sub
inc
pop
int3
cmpsl
stos
xor
mov
loope
push
repz
jp
outsl
push
sub
or
mov
rclb
xchg
sti
lea
dec
cltd
sbb
push
adc
jl
mov
inc
pop
push
mov
jne
xchg
mov
les
shll
cwtl
dec
hlt
hlt
ja
jg
mov
jg
mov
out
nop
xlat
xor
lret
inc
cmp
mov
rcl
xorb
jmp
shrl
stc
bound
stc
fwait
sbb
fcoms
test
inc
adc
cmp
mov
pusha
lds
add
out
stos
fidivl
and
add
xor
mov
mov
mov
test
lds
dec
xor
jo
dec
lcall
cmp
in
mov
sbbl
xchg
hlt
jb
ret
adc
ljmp
sbb
fisttpll
enter
aam
lock
iret
ja
sub
jge
dec
test
mov
mov
pushf
cmp
inc
pop
sub
popf
test
lea
loopne
sbb
lea
cmovne
icebp
jg
or
fdivrl
mov
lea
xor
call
out
push
mov
mov
les
adc
push
dec
mov
not
push
orb
jno
cmp
xchg
add
xorb
and
jns
push
mov
mov
jle
outsl
or
test
push
imul
xchg
lods
daa
and
and
mov
aad
rcrl
and
popa
leave
gs
fs
leave
inc
cwtl
cld
pop
lahf
call
rolb
mov
into
gs
mov
push
mov
lret
aad
jp
pop
call
hlt
aaa
aaa
stos
in
imul
sbb
inc
divb
out
mov
fsubr
shrb
mov
and
dec
pop
adc
adc
fcoms
push
popa
scas
decl
jns
dec
xor
leave
jl
pop
rcrb
iret
mov
xor
arpl
push
cmp
fwait
push
push
rcll
jl
icebp
cmp
ret
testl
loopne
push
inc
iret
push
xor
cmp
popf
cmp
lods
cld
sub
leave
inc
jg
cmpsb
pop
pop
cli
dec
clc
adc
xchg
xchg
aam
call
fdivrs
lds
int
gs
dec
shll
mov
into
repz
or
in
dec
js
icebp
ficoms
xchg
ss
scas
clc
dec
jae
int3
add
sbb
cmp
lcall
aad
jmp
jne
ja
js
sub
add
jmp
rcl
sub
add
subl
std
loop
mov
dec
jmp
fistl
loope
loopne
mov
mov
pop
cmc
sub
inc
dec
inc
daa
xchg
mov
cmpsb
push
add
data16
pushf
lret
scas
mov
outsb
xchg
push
ret
mov
push
add
imul
mov
sub
lods
ret
mov
lods
sub
push
cmp
or
sbb
lret
sub
jb
add
ret
mov
mov
push
pop
orl
xor
cmp
jne
mov
sbbl
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
mov
mov
sub
or
mov
adc
mov
movl
subl
mov
addl
push
mov
or
mov
sub
xor
andl
mov
inc
mov
cmpl
jle
jmp
call
cmpl
jb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
pop
sbb
add
add
add
add
add
mov
out
add
add
add
push
push
inc
push
mov
andb
sbb
je
add
add
pop
inc
outsl
insb
fs
outsl
data16
jb
imul
push
arpl
jb
push
arpl
jae
add
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
push
mov
mov
mov
push
lea
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
xor
add
push
lea
push
mov
mov
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
mov
mov
movb
mov
movb
mov
movb
mov
movb
mov
mov
movb
push
movb
mov
movb
movl
lea
pop
movzbl
xor
add
mov
inc
dec
jne
movl
lea
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
inc
mov
lea
mov
mov
mov
mov
movzwl
mov
xor
add
xor
mov
mov
xor
movzwl
add
xor
xor
mov
mov
mov
mov
lea
lea
movl
mov
call
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
lea
push
mov
push
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
stos
cmp
pusha
outsb
add
mov
mov
cs
xchg
cmp
mov
sarl
aaa
mov
cmp
mov
pop
sti
mov
sbb
or
pop
std
mov
mov
lods
fcompl
or
mov
mov
mov
mov
mov
lahf
and
rorb
mov
dec
and
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
add
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
