push
mov
sub
xor
jmp
into
rcr
aad
mov
sub
js
js
jle
js
xlat
cmp
fxch
pop
push
or
mov
bswap
and
sbb
inc
bound
mov
or
mov
and
lods
fadds
pusha
out
outsl
adc
sahf
add
dec
lods
pop
sub
mov
lds
adc
xchg
icebp
dec
loopne
dec
call
mov
sub
sbb
xchg
sub
repz
out
cli
in
xchg
cmp
jbe
xlat
sub
add
sbb
xor
adc
fisttpll
cmp
arpl
rclb
fistpl
and
inc
push
aaa
adc
fstpt
dec
repnz
cmpsb
test
shlb
mov
out
add
sub
les
out
lret
in
xchg
pop
psrad
fcompl
pushl
fcmove
adc
sbb
push
sbb
cmp
sti
sarl
sbb
add
cmp
in
mov
adc
andb
push
out
xor
outsb
or
addr16
jbe
mov
fcmovnb
es
push
fisttpll
in
lret
sub
xchg
sub
xor
pop
mov
cmpsl
cwtl
lahf
and
jb
lret
popf
add
mov
and
aad
es
pop
xchg
std
or
fwait
movsl
and
fisubrs
mov
lock
xchg
imul
jg
inc
inc
mov
fisubrl
adc
adc
cmp
sbbb
icebp
xchg
pop
vandps
mov
mov
jnp
sub
in
inc
lret
movsb
lods
imul
pop
rol
and
lret
dec
ja
inc
jmp
shrl
xchg
sti
jecxz
fwait
push
jnp
xor
sub
jb
mov
add
fs
push
inc
inc
sbb
mov
sub
fs
and
cmp
push
add
iret
fildl
ss
addr16
add
outsb
call
test
lcall
sub
movsb
mov
fmuls
sarb
jne
sbb
xor
jbe
mov
roll
xor
mov
mov
pushf
xchg
or
mov
xchg
les
rorl
cmpsb
cmp
mov
in
out
inc
call
and
xor
mov
mov
or
mov
movl
mov
mov
push
or
push
add
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adcl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
sub
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
jmp
leave
rol
leave
int
fimull
leave
rclb
or
inc
jle
js
jle
js
mov
out
jmp
cltd
jmp
cltd
xor
xchg
push
loop
jno
pop
add
rcl
sbb
ds
fwait
mov
and
push
cs
es
jne
into
jecxz
jmp
adc
push
push
mov
lds
shll
cmp
nop
push
rolb
push
add
push
dec
nop
cwtl
les
mov
mov
pop
fdivr
jecxz
xchg
arpl
mov
and
ja
sbb
shl
ret
mov
clc
lcall
and
or
mov
repz
push
mov
clc
daa
xchg
push
inc
dec
xor
aad
pop
adc
lea
fisttpl
std
out
jns
mov
outsl
mov
cli
cmpsl
sbb
test
mov
mov
xchg
pop
lretw
and
in
add
add
mov
jb
sub
cmp
sbb
mov
xchg
and
or
mov
xchg
sbb
inc
mov
sbb
jle
push
push
add
jbe
push
out
rol
ret
adc
orb
stos
icebp
inc
mov
cmp
fadds
cld
enter
or
pusha
call
das
insl
adc
xlat
fistpll
push
idivl
imul
inc
out
xchg
cmp
stc
push
xchg
cmpsb
loop
sarl
xlat
and
adc
cmp
mov
aad
push
mov
aam
cmc
pop
lahf
sub
je
rcrb
fcoms
sub
scas
pushf
push
lods
mov
push
rolb
mov
cmpsb
test
mov
insb
jne
or
dec
outsl
mov
nop
js
mov
out
outsb
out
cwtl
mov
push
mov
cwtl
or
sbb
jle
pop
das
pop
xchg
insb
xchg
sub
mov
xor
xor
imul
je
xchg
push
sahf
jmp
lret
loope
sahf
ds
arpl
cmp
cmp
lcall
mov
mov
push
mov
in
test
and
add
data16
loop
push
lret
std
mov
repz
inc
icebp
push
imulb
dec
xorb
push
cltd
stos
add
sub
xchg
jecxz
push
xchg
add
xorl
mov
adc
lea
orl
mov
xor
mov
neg
mov
xor
jmp
ret
ret
leave
lret
ret
out
repz
sbb
js
jle
js
pop
or
mov
xor
in
xor
add
add
es
cmp
xchg
mov
push
mov
insl
xchg
mov
testb
fcmovu
inc
test
scas
xchg
or
mov
mov
mov
movsb
int
dec
jbe
sbb
int
fidivrs
int3
dec
ret
push
addr16
negb
xor
cli
xchg
addr16
sub
xor
jns
fiaddl
mov
sbb
cltd
sub
outsb
addr16
inc
sahf
lcall
decb
fs
and
mov
lods
push
push
adc
pop
and
out
jmp
test
roll
aam
rcrl
fbld
jb
jp
cmp
div
pop
mov
jns
mov
or
notl
adc
test
out
inc
cmp
aas
into
inc
add
push
clc
ret
insl
push
shll
hlt
pop
cmp
push
fisubrl
sub
mov
xchg
ret
mov
xor
xchg
lret
inc
mov
iret
mov
inc
adc
xor
mov
jle
lret
pop
imul
sub
ds
dec
loope
pop
loopew
leave
call
stc
popa
in
or
sub
mov
dec
adc
jecxz
outsb
add
call
push
pop
arpl
repnz
in
mov
pop
fbstp
mov
repnz
xor
aad
and
out
cmp
inc
and
fldenv
adc
xchg
dec
push
iret
gs
push
and
repnz
sarl
das
add
xchg
in
cmp
xor
testb
sbb
js
loop
stos
xchg
aad
mov
sbb
mov
fs
push
xchg
mov
jmp
xor
mov
xor
shll
enter
jge
jg
pop
pushf
xor
insb
mov
adc
push
cmp
ljmp
pop
jle
inc
push
mov
ss
mov
mov
dec
jg
xor
fidivs
bt
inc
fs
adc
mov
cltd
popf
push
sbb
dec
xor
sub
jge
inc
int
push
cmp
out
sahf
in
jmp
inc
mov
scas
addr16
js
ljmp
leave
movl
lea
jmp
xlat
ret
ds
fcmovnu
loope
xchg
inc
int3
loop
addb
js
jle
js
sbb
jp,pn
push
ja
pop
mov
xor
addl
dec
dec
fisttpll
push
mov
jl
sub
daa
cmp
imul
inc
inc
lods
scas
push
das
sub
in
add
add
mov
rcrb
movsl
push
xchg
push
dec
mov
orps
fidivrl
dec
scas
fmul
imul
test
mov
loope
movsl
sub
mov
push
outsb
aad
jg
fidivs
sbb
aas
sub
nop
loop
jl
xchg
push
cmp
pushl
cmp
loope
inc
lods
sbb
gs
push
rclb
inc
mov
mov
mov
iret
jnp
cwtl
je
mov
inc
mov
popf
cmpsl
pop
pop
xlat
dec
dec
fildl
mov
xchg
and
add
mov
xchg
and
stos
add
jo
push
pop
stos
enter
jecxz
mov
imul
mov
mov
push
adc
xor
mov
inc
pop
sbb
cmp
push
pop
add
addr16
xor
xchg
sub
lods
pop
dec
fsubs
mov
outsl
push
push
xchg
pop
and
lahf
jns
or
xor
sub
sub
dec
cli
or
xor
jmp
mov
xor
sbb
push
aad
out
xchg
and
push
xor
or
inc
sub
rolb
add
pop
mov
aad
ret
stos
cmp
inc
sub
jbe
push
loope
xor
xchg
mov
lret
adc
dec
sub
lods
mov
pop
inc
ror
push
xchg
lock
xchg
hlt
adc
and
dec
cltd
addb
js
in
les
lahf
xchg
test
and
outsl
adc
or
mov
pop
cmp
movsl
xor
sbb
mov
lock
jle
lahf
mov
mov
mov
shrb
cmp
sub
or
fcomp
push
or
in
je
jmp
sub
enter
cmpsb
sub
sbb
and
jecxz
pop
pop
xchg
cs
cmovnp
ja
jecxz
dec
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
sbbl
mov
decl
xor
add
mov
movzwl
and
mov
mov
mov
adcl
mov
xorl
mov
mov
movzwl
jmp
lret
iret
cmp
aam
leave
fldcw
lret
or
cmp
push
js
jle
js
cmp
outsb
cli
add
xor
mov
or
nop
or
arpl
add
adc
ja
in
sub
push
icebp
mov
dec
jmp
stos
out
add
dec
pop
imul
sti
sub
icebp
cmp
mov
stos
in
rcr
ljmp
mov
xor
clc
jns
inc
xchg
push
xchg
and
leave
je
xlat
push
jo
mov
sub
xor
pusha
pop
mov
xor
lock
sub
mov
push
mov
and
xchg
dec
ret
xor
and
and
sahf
and
stc
pop
ret
push
ret
or
dec
add
cld
test
xchg
scas
hlt
sti
nop
and
mov
jns
cmpb
xchg
stos
insl
xlat
or
sub
in
mov
add
push
cs
sbb
push
sbb
xor
dec
push
push
shlb
dec
push
cmp
xor
inc
xor
adc
ret
stos
repz
jbe
xor
fidivrl
pop
in
shrb
inc
out
push
fcomps
mov
mov
stos
mov
or
sbb
mov
xor
stos
dec
sub
mov
stos
pop
stos
imul
ret
cwtl
cltd
or
insb
mov
stos
andl
js
sti
xchg
fidivrs
insb
fidivrl
and
xchg
test
out
mov
fistpll
cs
mov
leave
jecxz
pusha
aam
xchg
outsb
stc
push
push
mov
lret
insb
pop
mov
adc
jnp
aaa
bound
push
clc
jle
push
inc
in
call
stc
mov
push
imul
mov
sti
jo
cmpsb
jg
daa
xchg
loopne
xchg
int3
pushf
sub
jno
out
outsb
jp
std
popa
int
stos
jnp
pop
inc
jg
adc
jno
xchg
pop
mov
fcmovu
mov
int
fnstenv
inc
ds
jb
les
repnz
pop
push
push
push
sbb
xchg
xor
pop
in
ret
or
scas
lcall
inc
push
test
push
xchg
ret
cmpsl
mov
jne
shrb
nop
mov
and
adc
lods
out
pop
movb
xor
add
and
mov
mov
addl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
mov
jmp
rcl
ret
fld
aam
push
shl
cmp
mov
js
jle
js
scas
or
and
adc
push
sub
xchg
xor
push
fcmovne
out
sub
jo
or
shlb
ret
andb
negb
lret
sbb
inc
test
sub
popa
dec
test
jg
in
push
jecxz
vmxoff
orb
aad
in
movb
add
push
jb
lods
sbb
shr
xchg
ljmp
std
jmp
xchg
out
mov
aaa
push
sahf
and
mov
mov
fldcw
ret
sbbb
mov
pop
stc
sahf
test
iret
mov
out
sti
fistl
pop
rorl
mov
dec
add
adc
pop
jns
jmp
and
lahf
shl
lock
andb
add
mov
out
jae
hlt
repnz
mov
xchg
mov
scas
ret
cltd
sbb
adc
shll
or
fldl
mov
pop
mov
cmpsl
cltd
mov
test
mov
add
sti
data16
cmp
jg
leave
imul
cmp
inc
mov
aas
ss
xchg
jae
clc
cmp
in
stos
pop
dec
pop
mov
lods
inc
push
pop
ss
cmp
dec
mov
add
xchg
stc
outsb
in
nop
int
ret
jge
jle
sbb
pop
pushf
cli
ret
enter
sbb
ret
or
imul
dec
repz
add
nop
std
or
fisubs
sahf
das
add
cltd
jnp
inc
adc
clc
or
adc
lret
ja
lds
cmp
js
subl
out
xchg
mov
ss
dec
sub
inc
in
imulb
inc
xlat
xor
in
into
arpl
cmpsl
in
adcb
and
sahf
pop
ljmp
fs
fsts
pop
cmp
dec
shrb
std
loope
jb
bnd
mov
dec
mov
dec
fcoml
lods
sahf
in
mov
push
shll
mov
test
stos
jne
mov
adcl
aad
lods
sbb
mov
xor
cs
and
xor
xor
pop
xchg
jo
sbb
dec
test
push
mov
sbb
in
outsl
cs
repnz
jp
pop
xchg
cmp
mov
adc
movb
push
scas
inc
add
cmp
jne
mov
mov
sbbl
xor
add
jmp
xlat
cmp
fxch
mov
out
inc
or
or
jle
js
dec
adc
push
adc
and
loopne
mov
mov
shll
dec
lahf
mov
shrl
cmp
xchg
cmpb
mov
sbb
repz
jp
lcall
inc
push
sbb
pop
lods
testb
jp
mov
iret
dec
dec
in
pop
scas
out
mov
dec
sbb
fwait
ljmp
jnp
lret
xchg
stos
shll
popf
fmuls
xor
mov
fs
icebp
repnz
xchg
xor
sub
add
or
adc
call
popa
in
cmp
sti
mov
movsl
test
stc
xorl
cmpsb
movsb
ds
andb
cmp
nop
and
sub
out
gs
mov
cmp
mov
dec
mov
cs
inc
popf
mov
xlat
fcmovb
imul
adcb
addr16
xor
lds
sub
addr16
xorb
dec
cld
sbb
xchg
je
bound
test
push
pop
bound
rcrb
bound
lcall
fstps
xor
in
add
inc
or
fistpll
addb
ja
mov
fcoml
cli
cmp
call
jmp
mov
fdivr
mov
xor
cmpl
dec
outsl
cmp
lcall
pop
out
jns
jae
push
xor
into
repz
xlat
sub
js
inc
ljmp
push
fsubl
and
cmpsb
out
mull
sbb
andb
xor
cmp
push
mov
lds
sub
xlat
clc
mov
pop
outsl
mov
mov
xlat
push
or
mov
push
pop
sub
push
pop
fisubrs
dec
ja
ss
pop
xchg
or
sbb
add
pop
mov
push
idivb
into
lock
arpl
xchg
or
push
ficoms
lahf
mov
xchg
mov
lcall
int3
fisubrs
pop
dec
hlt
sti
or
dec
xchg
pop
push
mov
sub
and
jle
jnp
pop
xor
lock
out
aaa
push
mov
dec
rcrl
div
icebp
adc
out
mov
and
cmpsb
outsl
mov
add
test
or
add
mov
jmp
aas
lret
ret
aad
flds
inc
loope
mov
mov
js
jle
js
pop
and
mov
push
adc
mov
push
imul
shll
push
jmp
sbb
je
in
aaa
inc
aam
xchg
dec
shll
aaa
lods
jg
mov
add
mov
jo
sti
int
sbb
mov
jae
pop
test
xor
push
cli
add
xor
icebp
and
cmpl
jo
lock
fwait
push
or
inc
leave
int3
inc
pop
add
add
cmp
in
cs
aam
lods
data16
in
xchg
js
sbb
in
sti
mov
ljmp
movsl
sti
cld
sub
inc
pushf
jge
push
pushf
sbb
xor
shll
repz
enter
inc
loop
or
mov
sub
nop
dec
cmp
in
and
das
cs
inc
mov
mov
xchg
lahf
or
sarb
loope
out
lods
mov
out
or
jns
sub
mov
int3
mov
cwtl
cmpsl
push
dec
cli
pop
mov
sahf
fcompl
jns
rolb
sti
lods
int3
sti
pushf
outsl
inc
movsb
repnz
int
imul
sbb
ja
jl
xchg
hlt
cld
push
mov
xchg
loope
and
sub
or
dec
xchg
das
pop
push
outsl
dec
ja
and
outsl
aas
mov
ja
pop
dec
repnz
cmp
fmuls
xor
cmc
loope
dec
dec
mov
cwtl
inc
mov
and
mov
mov
and
jne
jo
inc
les
es
cmpl
sbb
loope
test
dec
in
rolb
sbbb
je
lock
cld
imul
xor
jle
xor
lahf
subl
fistl
adc
jp
fisubrs
into
jns
aad
sub
dec
gs
push
pop
mov
cmp
loopne
stos
xchg
push
xor
mov
out
rolb
cmp
loope
jbe
mov
and
lods
nop
pop
fists
stos
jg
inc
arpl
shll
xor
mov
mov
rcrb
outsb
loop
adc
mov
sahf
shrl
loopne
push
test
icebp
pushf
jbe
dec
xchg
cld
xchg
ds
adc
dec
add
cwtl
lahf
sub
adc
into
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
jmp
ret
ror
into
fcmovnbe
out
dec
stos
frstor
mov
js
jle
js
out
divps
imull
outsl
mov
adc
out
mov
fcmovnbe
push
add
xor
in
loope
jns
jle
jb
push
pop
out
pop
arpl
ret
dec
sub
stc
inc
lea
pop
clc
lahf
dec
fisttpll
iret
jbe
xchg
mov
and
and
scas
ds
shlb
imul
popa
arpl
fs
mov
xor
jo
push
jg
out
dec
add
mov
push
in
je
adc
loope
mov
add
minps
orl
jo
subb
sbb
inc
xchg
inc
add
jb
and
in
jbe
test
scas
data16
addr16
jl
movb
jl
movsb
inc
mov
adc
iret
repz
jg
and
call
jnp
dec
jo
jmp
inc
setno
fisubrs
fbstp
jns
hlt
pop
aad
ljmp
fcomps
cltd
mov
or
xchg
lcall
cmp
xchg
aam
adc
adc
jb
adc
mov
xor
shl
jns
sbb
ret
sub
sbb
imulb
xor
mov
jb
in
cmc
incb
xchg
fwait
fs
idiv
and
mov
loope
mov
sarb
cmpl
mov
inc
mov
adc
jecxz
pop
mov
lds
shlb
cli
call
jo
out
hlt
sbb
dec
test
dec
pop
xchg
test
stos
shll
xorl
mov
push
jb
jne
stc
jecxz
pop
dec
pop
cltd
or
sbb
sbb
jg
xchg
sahf
pop
and
xor
pop
mov
jp
rcrb
and
loopne
scas
out
pop
xchg
shr
cmp
cmp
aaa
dec
js
dec
sbb
xchg
fnsave
popf
das
mov
js
sbb
and
in
mov
cmp
scas
lds
jnp
pop
loop
inc
pushf
mov
mov
sahf
mul
in
xor
divb
jb
stos
jg
cmp
aam
clc
push
test
jbe
enter
add
ror
int
rcr
aad
bound
shll
mov
js
jle
js
pop
cmp
pop
pop
or
ja
dec
ljmp
mov
bound
xchg
shrb
jno
ud2
mov
cmp
sarb
adc
pop
push
dec
or
or
jmp
idivl
xchg
loop
sbb
push
push
outsb
icebp
sbb
cmp
cmp
ret
fsubrs
jo
in
jl
xlat
cmpl
dec
push
sarl
shl
inc
and
jo
or
ret
in
add
jno
mov
fstpt
data16
jbe
adc
lret
adc
movsl
insb
jmp
mov
mov
or
mov
cmp
in
ss
mov
pop
out
mov
test
or
or
lcall
lods
lds
ffreep
cld
xchg
aas
jns
add
mov
shll
pop
jo
mov
lret
cmc
jne
xorl
xorb
sbb
dec
fmul
dec
xor
ds
pop
pop
std
or
pop
loopne
dec
xchg
nopl
xchg
push
clc
xchg
shr
test
bound
enter
xchg
ds
xor
cwtl
mov
fidivrl
xlat
push
mov
pop
cli
jnp
sub
mov
in
adc
pop
sahf
insb
pop
sub
xlat
gs
sub
adc
inc
mov
movsl
pop
inc
je
jne
in
add
xlat
pop
sarb
sub
inc
xchg
mov
aas
xor
sub
lahf
test
dec
add
icebp
adc
lock
mov
shl
and
push
hlt
insb
popa
mov
je
pop
fdivrl
out
dec
mov
jae
js
lea
shlb
add
cltd
inc
mov
test
movq
aaa
mov
pop
jg
stos
hlt
mov
das
int
fidivs
xchg
test
int
aas
xchg
addl
push
icebp
xchg
dec
or
push
sub
in
movsb
mov
jmp
push
negb
mov
cmc
cmpsl
sti
lcall
mov
xor
mov
lods
repnz
aas
xor
pop
cmp
add
cli
sub
aaa
test
enter
pop
fstpt
push
pop
sub
lahf
mov
mov
loop
sub
mov
lods
andl
sti
lahf
dec
and
shll
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
jmp
leave
vpsubusw
leave
repnz
cld
outsb
add
js
jle
js
fstl
mov
sbb
ret
pushf
jnp
mov
cld
and
add
sub
dec
rolb
cvtdq2ps
mov
sbb
pop
adc
fbstp
mov
jecxz
or
inc
xchg
adc
je
bound
cmp
or
cmp
pop
imul
fcoms
mov
xor
jecxz
dec
les
fdivrs
jge
jns
nop
mov
es
addr16
ja
dec
add
xchg
fisubl
ljmp
into
jl
adc
mov
fisttps
push
cmp
sub
push
and
or
lods
pop
sbb
dec
dec
test
fsubr
nop
jnp
lock
mov
mov
aad
iret
pop
dec
sbb
cmp
pop
in
xchg
cmp
push
sub
std
xor
movsb
dec
lret
xchg
repz
and
inc
push
pop
and
sbb
leave
rolb
notb
std
out
lret
movsl
fnsave
addr16
adc
rolb
scas
pushf
popa
xchg
in
sub
sbb
jmp
or
dec
mov
pop
dec
dec
mov
add
rclb
not
notl
jp
ja
stc
dec
enter
xor
fldenv
mov
inc
lret
pushf
std
insb
aas
dec
xor
push
mov
sub
sub
push
out
dec
cli
sub
fs
jge
or
ret
xlat
addr16
pop
inc
sub
stos
incb
jmp
mov
aas
xor
sbb
mov
cs
addl
mov
mov
in
jns
fwait
push
rcll
jl
rorb
mov
loope
jno
scas
mov
add
adc
jmp
dec
lret
push
cltd
jno
clc
clc
fimull
cmpsl
sub
lahf
push
add
popa
in
movsb
popf
daa
mov
jle
xor
cltd
mov
mov
imul
insl
out
testl
loop
andb
dec
jns
jb
add
ret
cli
xchg
cmp
cmpsl
pusha
data16
push
ret
ja
jbe
jge
mov
ljmp
mov
mov
jmp
ror
ror
ror
test
xchg
push
movsl
xchg
aam
xchg
adc
js
clc
ret
and
push
xor
popa
xor
insb
addr16
les
adc
loope
arpl
psubd
sbb
xlat
and
aaa
ret
inc
sbb
adc
sub
sbb
cwtl
dec
jne
lret
inc
test
ret
ss
mov
inc
sub
cli
cmp
xor
add
mov
adc
push
pop
cmp
push
mov
adc
jge
adc
xor
negb
push
aad
hlt
std
fstl
inc
out
fxch
cmpb
cld
cmpsb
pop
or
out
pusha
cmp
xchg
push
jmp
mov
stos
shl
ljmp
rolb
les
outsl
jnp
jecxz
cmp
in
fnstsw
mov
psrlw
mov
jae
jg
stos
pop
adc
fwait
sbb
pop
ret
cmpb
data16
jbe
xchg
jnp
sbb
outsb
loopne
js
fcmovnb
pusha
hlt
sub
faddp
cld
leave
bound
sbb
pop
cmpsl
mov
and
test
add
adc
xchg
push
mov
dec
xchg
xchg
das
xchg
pop
adc
add
fs
std
daa
movsl
push
xor
cmp
int3
push
or
jno
xchg
pop
xchg
mov
mov
jg
add
loope
enter
out
outsb
push
lods
or
pop
dec
dec
or
push
cmpsl
add
xchg
cmp
mov
push
pushf
pushf
les
dec
cli
jg
filds
jmp
inc
inc
mov
add
dec
or
gs
movb
cltd
sub
dec
shll
mov
jne
lcall
inc
push
pop
cmp
push
mov
icebp
mov
jno
mov
in
lea
in
test
idivb
out
subb
gs
in
xlat
jecxz
xchg
fs
sub
iret
and
jl
jp
adc
mov
imul
dec
mov
or
in
cmp
jae
inc
push
xor
loop
mov
push
call
cmp
mov
add
js
shrb
push
adc
push
cli
outsl
ja
int
inc
dec
or
pop
xorl
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
cmp
cmp
rcr
fidivl
je
jg
sbb
jle
js
jp
cmc
adc
ljmp
roll
enter
ffreep
sahf
adcb
std
pusha
xchg
jnp
cmp
push
push
aas
push
lods
cmpb
ret
cltd
lret
dec
pop
xor
test
pop
dec
add
lret
sub
pop
add
data16
dec
jae
cld
cmpsl
xchg
ljmp
fldenv
cwtl
loop
mov
mov
test
mov
and
mov
mov
call
adc
test
outsl
pop
rcr
cmp
inc
mov
imul
cs
shrl
dec
pop
pop
cltd
cwtl
cmpsb
fs
imul
pop
aas
into
sti
loopne
insb
push
neg
aam
lock
cmp
jmp
or
rorl
test
lods
repz
sti
sbb
cs
xchg
enter
dec
je
fldenv
and
push
sti
sarb
lea
fistl
add
adcl
flds
pop
add
cmp
jmp
popf
add
pop
sahf
pop
daa
inc
mov
jle
sub
stos
in
mov
sub
sub
mov
xchg
loopne
cli
iret
push
je
cmp
loop
mov
mov
andb
loopne
data16
mov
inc
sub
inc
mov
xchg
fisubs
fwait
data16
mov
jmp
je
lds
xor
lods
xor
mov
sub
jae
jae
stc
jecxz
lret
ja
aas
adc
aaa
inc
mov
mov
out
in
dec
push
xchg
mov
cmc
inc
nop
into
jb
push
add
push
jecxz
xchg
xchg
mov
jne
pop
xchg
jne
jmp
in
or
addr16
push
add
and
jmp
in
out
jmp
inc
loopne
cmpsl
stos
add
jecxz
xor
mov
xchg
jecxz
mov
scas
push
sbb
sahf
sub
push
in
loopne
cmpb
scas
cltd
xchg
iret
mov
pop
lds
movsl
pop
je
or
xor
or
std
mov
imul
out
shll
sbb
int
test
clc
lret
cmp
int3
inc
cmp
push
adc
jae
inc
mov
ret
test
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
jmp
xlat
aas
mov
fwait
clc
movb
sbb
jle
js
and
and
ss
aas
popl
cmp
mov
in
mov
add
fadds
or
lods
sbb
push
jno
push
iret
jb
ret
pop
push
stos
cld
test
cmpsl
adc
dec
and
sahf
inc
inc
mov
jecxz
mov
icebp
pop
sub
cmp
icebp
pop
and
dec
xchg
xchg
ret
test
xchg
aaa
xchg
lcall
stc
or
out
insl
add
pop
int
mov
cmp
mov
inc
cmc
mov
mov
test
sbb
ljmp
jb
push
loopne
push
xchg
mov
and
add
std
mov
or
fxch
push
loop
popa
in
scas
mov
mov
dec
add
sarl
mov
fsubl
arpl
or
mov
fldt
subb
lea
adc
cmp
xor
and
xor
outsb
pop
inc
mov
andl
push
outsb
push
xor
cmpsb
mov
lods
adcl
xchg
mov
leave
inc
fidivs
mov
test
xchg
insl
xchg
cld
sub
sub
maskmovq
negl
shll
aaa
loope
xor
push
scas
sti
sub
int
in
dec
cmpsb
xor
lahf
popf
loop
dec
add
mov
stos
test
mov
mov
cltd
pop
cmp
sub
mov
arpl
and
pop
ljmp
rcrl
sbbb
push
mov
jge
fbld
nop
inc
add
xlat
cvtps2pd
aas
inc
stos
dec
add
in
dec
dec
fldt
sub
inc
in
pop
repnz
sbb
sub
or
fidivrl
jo
and
arpl
stos
adc
or
jns
lods
shll
fs
fnstsw
mov
and
in
xor
orl
arpl
jbe
xor
inc
lret
scas
or
sbb
jo
outsl
out
ret
dec
mov
mov
test
sub
popf
mov
inc
or
and
movsl
xor
push
jle
dec
inc
xor
in
mov
mov
xor
xchg
adc
imul
or
sub
lret
mov
mov
jmp
into
rol
ror
mov
add
sbb
js
les
shl
sub
lds
cmp
push
insl
leave
je
movsl
pop
je
mov
sbb
or
loop
mov
fsubs
scas
jne
inc
aad
cmp
ss
push
fdivrs
or
and
scas
repz
fs
scas
mov
aas
loope
or
xor
lcall
out
mov
gs
ror
cmp
pop
rcrb
repz
cmp
loope
mov
lret
cmpsl
and
inc
xchg
daa
xchg
push
pop
inc
dec
int
bound
and
xor
mov
pusha
sbb
and
xchg
faddl
or
mov
sbb
adc
mov
stos
mov
and
hlt
push
mov
mov
inc
popa
push
notb
dec
flds
jmp
outsl
and
filds
push
push
push
jbe
sub
outsb
jle
mov
pop
pop
add
ljmp
movsb
adc
or
aad
push
rcl
lods
lcall
dec
lahf
ds
xchg
fsubp
jl
push
mov
or
and
adc
sub
mov
xor
clc
adc
cmp
push
pop
lods
enter
mov
xchg
mov
sbb
jp
mull
mov
mov
lods
push
xchg
or
test
lock
pop
xor
push
mov
ja
fdivrp
dec
addr16
les
sbb
outsl
cs
nop
push
iret
sbb
jle
call
cmc
fists
pushf
lahf
xlat
jmp
push
sbbl
not
hlt
mov
test
mov
pop
lcall
mov
cli
movsl
inc
ret
fnstsw
pop
ss
add
xor
xor
mov
xchg
mov
push
ja
jp
mov
gs
pop
ret
sub
adc
jge
iret
mov
fimuls
inc
stos
xchg
jp
inc
mov
and
mov
pop
addr16
or
jp
and
push
jmp
das
sahf
add
and
fcomi
scas
jge
test
mov
xchg
fnsave
aas
insl
fsub
add
popl
sbb
cld
sub
out
mov
pop
jnp
xor
jle
push
outsl
push
mov
jae
clc
lret
cmp
cmp
je
jmp
leave
rol
rcr
rcr
ss
fwait
daa
adc
lcall
js
xchg
and
gs
shrl
in
pushf
jnp
lea
mov
call
push
inc
push
dec
adc
pusha
sahf
mov
jle
sub
jne
fwait
pop
mov
cltd
jbe
imul
add
jl
test
mov
stos
inc
sbb
scas
sarl
pop
pop
xchg
sahf
jmp
hlt
mov
pushf
or
cmpsb
add
cmp
loop
mov
sbb
nop
pusha
ficoms
dec
roll
test
aas
fidivl
and
dec
jb
or
out
test
dec
fsubp
sub
addb
mov
adc
sbb
icebp
pop
or
std
dec
rclb
aam
negb
call
idivb
pop
mov
jle
je
xchg
andl
adc
movsl
popa
sbb
je
loopne
mov
and
push
dec
sbb
cmp
mov
out
xor
dec
pop
pop
fs
push
ljmp
lods
xchg
ficomps
or
cmpb
mov
pop
loopne
xchg
add
inc
stc
ret
mov
test
jle
movsl
pop
xor
cmp
notl
movsb
loopne
pushl
mov
imul
daa
mov
int3
mov
mov
daa
or
add
jae
xor
jg
shl
mov
frstor
or
sbbb
popa
fs
jle
inc
cltd
jle
push
iret
loopne,pn
xor
inc
lahf
or
icebp
xchg
xor
test
andb
outsl
xor
add
lea
xor
js
lods
outsl
push
sbbb
xchg
jg
push
dec
mov
sub
insl
sub
test
push
xor
js
xor
test
fsubrl
mov
sbb
mov
mov
loop
mov
test
adc
adc
ret
scas
push
test
scas
adc
adc
pop
push
ficoms
add
mov
and
xchg
cmpb
lock
test
xchg
arpl
jne
lahf
inc
cmp
push
addb
notb
cmp
add
daa
movsl
popa
push
fists
xor
test
cmpsl
mov
jg
xor
push
mov
mov
xor
add
mov
jmp
jmp
ds
lret
fldenv
lret
dec
mov
and
jle
js
pop
fldenv
inc
sbb
leave
mov
insl
test
lcall
rolb
pop
jae
popf
cmp
nop
adc
xchg
stos
testl
dec
roll
ljmp
in
daa
hlt
mov
pop
inc
and
imul
fidivs
dec
fwait
cld
jmp
jg
inc
stos
push
outsl
xor
in
imul
adc
lods
xor
addb
push
mov
insl
jle
mull
dec
pop
pop
into
stos
jno
xor
jo
cmp
rcl
sbb
loop
rcr
lret
mov
sbb
add
or
aaa
and
xor
push
pop
sub
arpl
movsb
dec
cmp
lret
xchg
stos
xchg
or
sbb
call
stos
mov
jne
push
fldz
in
push
push
xor
pop
rcrb
inc
mov
xchg
fcoml
and
pop
xor
jb
pop
lds
sub
sti
pop
ja
push
inc
shll
movsl
ret
insl
insb
jnp
push
inc
mov
outsl
xor
xor
in
orb
mov
pop
in
inc
gs
mov
push
cltd
inc
ror
test
js
mov
orb
and
in
push
js
scas
into
push
jg
jae
xor
pushl
mov
xlat
jmp
aad
mov
andl
mov
xchg
dec
es
in
in
mov
movsb
les
add
std
rcll
and
jb
jnp
add
stos
sub
loope
jne
mov
inc
jge
mov
and
aaa
inc
std
sahf
or
pop
inc
pop
cmp
int3
xchg
push
or
out
xchg
mov
addr16
sbb
popf
dec
icebp
inc
in
sub
dec
or
jg
xlat
mov
push
jo
out
push
mov
jns
mov
jecxz
fxam
sub
hlt
daa
enter
mov
outsb
mov
cmpsb
jecxz
jae
fbld
add
dec
cmp
out
fwait
inc
push
push
cmp
scas
sbb
outsl
out
jo
xor
or
popf
cmpsb
jo
lea
iret
shll
fldt
adc
fcmove
xchg
mov
filds
pop
cmp
and
jo
mov
fs
mov
scas
and
fwait
lret
lret
loop
in
sbb
sbb
jne
mov
add
add
mov
mov
mov
jmp
aas
leave
enter
fxch
mov
vptestnmb
jle
js
mov
ret
imul
scas
sbb
testl
sbb
enter
mov
loopne
mov
test
arpl
sbb
or
sbb
inc
mov
loop
mov
adc
xor
cmp
in
cmp
cmp
fisubrs
ds
lods
mov
xor
in
aas
adc
pop
scas
jp
pop
mov
int3
div
les
arpl
mov
sti
int
outsl
es
enter
add
sbb
fsubr
inc
pop
sti
cwtl
sbb
int3
fucomi
fildll
adc
lret
mov
aam
imul
dec
jne
and
aad
test
ret
test
data16
sbb
cmc
pop
loope
sub
cmp
divl
loop,pt
xor
icebp
je
cmc
in
jne
hlt
in
mov
stos
out
jo
aas
adc
outsb
sub
daa
push
xor
jne
or
or
js
push
cli
jle
xchg
and
rcrb
pop
cmp
lock
ret
lods
push
mov
mov
add
sbb
testb
xchg
loop
mov
mov
mov
dec
dec
icebp
jg
adc
adc
cmc
dec
adc
xchg
nop
lret
xchg
mov
outsl
push
icebp
cmpps
mov
and
jg
stc
out
xchg
out
jns
out
cmp
rcrb
mov
pop
std
xor
add
ja
xchg
ljmp
das
shll
aad
mov
movsb
xlat
in
outsb
fiaddl
dec
inc
or
bound
push
mov
pop
lods
fadd
add
pop
jmp
movsb
arpl
push
mov
popf
les
pop
jns
cmc
popa
out
sbb
std
mov
int3
arpl
lods
scas
repz
dec
in
mov
xchg
jmp
mov
cmp
mov
fisttpll
aad
mov
xchg
xor
jno
sub
add
and
xchg
pop
inc
inc
mov
inc
sbb
nop
cmpl
cmpsb
xorb
sbb
int3
ror
push
pusha
shrl
mov
lahf
pop
or
mov
pop
mov
jmp
dec
mov
push
mov
mov
or
inc
or
jne
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
mov
add
push
xor
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
decl
movl
mov
not
jmp
rol
lret
leave
lret
leave
lds
dec
inc
insb
push
lret
std
sbb
js
dec
jle
js
aaa
popa
testb
cli
ror
pop
adc
mull
and
je
push
sarb
adc
inc
js
mov
push
or
mov
mov
orb
xor
dec
leave
fsubr
aam
ret
pop
divb
jle
mov
test
xchg
mov
fdivs
jle
loop
and
push
push
clc
and
xchg
cmpb
mov
int3
fcomp
mov
xor
loop
cmp
dec
in
fcoml
pop
cwtl
mov
pop
pop
pop
pop
adc
mulb
jge
adc
push
cs
stos
repz
int3
cs
xor
rcrl
lods
add
pop
push
roll
xor
adc
sbb
movd
adc
jns
dec
push
pop
mov
ret
les
push
sbb
or
cltd
ss
and
xor
call
xchg
gs
mov
mov
bound
inc
scas
or
sti
jle
mov
filds
enter
hlt
and
xchg
sar
dec
lea
mov
es
in
sub
push
push
adc
mov
lods
test
dec
lcall
mov
cmp
loopne
divl
inc
mov
pop
and
ja
or
fstps
add
xor
inc
test
stos
adc
mov
enter
push
call
xchg
outsb
enter
inc
xor
lret
adc
mov
inc
or
movhps
int
or
movsb
pop
pop
mov
and
addr16
inc
ja
rclb
mov
ja
iret
xlat
enter
cltd
mov
out
mov
jo
sub
jae
lock
xlat
rcrl
mov
sbb
bsf
mov
mulb
mov
hlt
les
jecxz
fildll
jecxz
and
xchg
mov
jge
sahf
pushf
out
inc
sub
jns
mov
mov
mov
lods
mov
call
push
in
sbb
stos
or
dec
lock
arpl
fsubs
in
push
xor
xor
test
sahf
mov
push
iret
xchg
mov
ret
pop
pushf
shr
out
jbe
pusha
bound
cmpsb
mov
mov
fs
dec
or
out
lret
adc
add
dec
jae
xchg
or
push
sahf
int
fwait
lods
pop
inc
dec
aam
dec
fisubs
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
push
push
push
call
jmp
xor
jmp
rol
int3
pop
test
scas
aad
sub
dec
jle
js
cmp
pop
cmp
adc
pusha
xor
sub
fsubp
and
jbe
inc
add
syscall
call
das
inc
inc
jbe
mov
dec
movsb
xorl
and
and
call
test
das
cmp
pop
imul
pop
push
cmp
int
fldt
je
js
mov
pop
lock
aas
jmp
stos
enter
icebp
add
jne
and
xchg
fcomps
sub
lahf
cs
add
and
and
lock
inc
hlt
negb
leave
fistpll
mov
push
mov
call
addr16
call
inc
cmp
sbb
lods
andb
sub
arpl
mov
ret
mov
cs
out
pop
cmpl
stc
insb
push
fs
mov
jp
icebp
enter
stos
adc
in
jecxz
rcl
ss
pop
ret
lds
out
leave
inc
inc
jo
lcall
loop
dec
inc
push
icebp
add
cli
or
dec
iret
jge
inc
fimuls
fs
daa
jno
in
popf
xchg
jno
sub
outsl
testb
ret
or
cmp
and
fnstenv
push
mov
xchg
std
inc
test
testb
cmp
stos
inc
fsubl
cmp
xchg
repz
call
mov
leave
jns
fists
aas
loop
sub
in
mov
bound
loop
adc
int3
das
jge
dec
shr
into
lcall
data16
jg
idiv
cmpsl
shrb
xor
sbb
xchg
push
push
push
notl
mov
mov
sbb
sbb
scas
gs
test
and
xchg
stc
lret
notl
ja
lahf
ljmp
or
mov
jecxz
fsubl
ds
pushl
pop
adc
push
add
js
mov
adc
movsl
inc
cmc
imul
call
rcrb
pop
xchg
add
sbb
adc
mov
loopne
and
sar
jnp
std
xlat
inc
and
cmc
rol
das
mov
pusha
test
pop
iret
sub
lods
inc
jb
lods
sub
lds
mov
xorl
cmc
test
xlat
mov
mov
in
iret
xchg
push
push
pushf
fsts
in
pop
popf
sub
out
out
out
pusha
loop
int3
mov
push
xchg
rol
rorl
sub
mov
pop
fcmovu
call
xor
sbb
rcr
sbb
mov
out
hlt
loope
mov
and
push
or
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
jmp
enter
aam
mov
int3
push
ja
add
inc
js,pn
dec
jle
js
push
cmp
mov
push
sbb
inc
stc
insl
and
inc
add
cmpsb
mov
xor
add
dec
mov
out
testl
lret
cmp
mov
sbb
xchg
lret
test
jb
pop
push
leave
cs
outsb
ds
test
mov
aad
int
add
xor
mov
adc
mov
xor
jge
ljmp
lds
fwait
cmpsl
std
mov
bndldx
daa
data16
push
xchg
je
clc
push
push
inc
in
mov
mov
test
test
xor
push
and
sub
xor
push
sub
in
outsl
pop
xor
mov
inc
mov
adc
xor
and
sub
lock
xorl
cmc
mov
lds
je
mov
fldcw
mov
mov
dec
pop
jnp
cmp
cmp
nop
dec
cld
mov
sub
pop
pop
jne
sub
xlat
xor
sub
js
mov
leave
ret
daa
inc
into
cld
fcmovbe
addr16
cmp
jo
fsubrl
mov
xchg
dec
ljmp
test
cmp
into
fwait
dec
cli
cli
mov
pop
ficoml
cltd
fscale
mov
and
clc
arpl
xchg
or
adc
ret
aad
addl
out
test
addr16
loope
push
cltd
test
fnstcw
mov
das
push
sub
insl
xor
test
out
adc
out
fiaddl
mov
inc
xor
fldcw
movsb
pop
lret
jecxz
das
cmp
sbb
hlt
adc
cmp
adc
mov
mov
aam
imul
xor
sub
sbb
movsl
mov
and
jno
lea
test
out
data16
enter
mov
stc
test
lahf
xlat
enter
adcb
lahf
xorb
cmpsl
cld
and
cmp
jmp
push
lods
adc
inc
add
daa
xchg
scas
jmp
push
vmwrite
cmp
mov
ficompl
jns
cmp
loope
lods
sahf
sub
shll
mov
adc
outsb
jno
xchg
ret
clc
lret
xor
cmp
jge
mov
adc
subl
jle
iret
jmp
les
cmp
xchg
jb
data16
mov
adc
cmp
je
mov
mov
xor
jmp
rcl
leave
aad
xor
adc
stos
or
xor
dec
jle
js
test
add
adc
push
pusha
xor
cmpsl
loope
xchg
mov
adc
pop
imul
mov
adc
mov
pop
lret
or
inc
addr16
popa
ficompl
pusha
movsl
dec
mov
mov
jge
addr16
or
mov
inc
xchg
inc
add
pop
add
sar
push
jae
dec
std
sbb
fstps
test
push
push
or
sub
add
ja
mov
sub
mov
sbb
add
inc
and
dec
dec
push
testl
cmpsb
adc
inc
inc
inc
push
stos
mov
adc
rolb
jecxz
sub
inc
pop
cmp
dec
outsb
inc
push
xlat
cwtl
stos
sbb
add
jbe
addr16
clc
mov
cmp
popf
pop
pop
lds
xor
jb
push
mov
mov
adc
inc
add
sbb
scas
add
mov
jo
into
jae
outsl
rcl
mov
out
hlt
cltd
repz
clc
xchg
bound
testb
mov
call
jecxz
mov
int3
pop
les
add
xlat
lods
jmp
and
cmp
into
or
jae
lods
rcll
rclb
mov
jp
inc
sub
clc
fcomps
cld
stos
sub
ret
lods
dec
jbe
in
cmpsb
mov
sbb
scas
add
nop
mov
push
inc
xchg
sub
xchg
sbb
add
xchg
adc
push
adc
sbb
mov
les
aam
in
mov
outsb
sub
xor
add
mov
aas
inc
cmpsl
mov
mov
std
ljmp
cmpsl
dec
add
push
fs
xor
push
rcrb
xchg
mov
push
pop
and
aaa
cmp
fbstp
aaa
xchg
aaa
mov
adc
arpl
inc
popa
inc
clc
lret
mov
cs
outsb
mov
imul
inc
out
cmc
lock
std
add
xlat
mov
cmpsl
lods
insl
inc
ss
clc
mov
sahf
cmp
mov
adc
jmp
aam
fldl
ret
inc
repnz
jecxz
outsb
fbld
loopne
lahf
dec
cltd
pop
pop
mov
dec
adc
fisubrl
orb
fldcw
fnstenv
or
out
in
mov
cmp
add
pop
or
mov
pop
pop
fstl
test
sti
pop
aad
inc
aam
jge
aaa
roll
test
push
sbb
popf
aaa
ljmp
xchg
sbb
dec
mov
pop
ss
or
jle
shll
cmp
jp
movsb
fwait
push
hlt
sub
sub
add
xor
add
cmp
ja
push
jmp
mov
jmp
aas
rol
int3
aad
dec
sub
cs
jle
js
pop
mov
clc
lahf
xor
and
jmp
stc
dec
mov
dec
push
inc
aad
mov
jmp
loopnew
mov
sbbb
mov
lcall
xorl
and
out
cmpsl
adc
mov
and
xchg
push
adc
ss
bound
sbb
dec
mov
jbe
jno
stc
cmc
fwait
adc
cli
std
pop
ljmp
mov
cmp
fsubrs
mov
pop
push
and
adc
jl
pop
cmp
movsl
int3
das
in
cmp
inc
insb
cmp
cmp
ret
shlb
pop
outsb
inc
sarl
mov
hlt
mov
iret
cs
jo
xor
and
and
push
std
xchg
jbe
int
lock
repnz
pushf
push
push
xchg
rcrl
filds
adc
mov
aad
mov
adc
cltd
in
popa
cmp
mov
mov
xor
jmp
mov
jecxz
and
lods
inc
mov
idivl
cmc
inc
cmpsl
pop
repnz
jne
cmpsl
popa
testb
mov
jbe
call
mov
mov
test
mov
rcll
sub
or
pusha
sub
sub
test
std
jnp
js
rcpps
into
sbb
dec
lea
decl
mov
sahf
out
decb
std
repnz
sub
push
aam
and
mov
add
insl
stc
dec
dec
cmp
xchg
aas
xlat
pop
adc
pop
insb
cmpsb
sahf
and
imull
cli
pop
cmp
adc
out
inc
lret
pop
mov
andl
cmp
icebp
sbb
push
aam
sti
jae
sub
mulb
ret
add
sbb
pop
jmp
cmpsb
push
push
adc
fwait
ja
xchg
insl
test
push
call
in
mov
jns
movsb
sbb
and
lret
fmull
cmp
or
out
pop
jmp
repnz
lock
ret
mov
mov
nop
xchg
into
mov
enter
fwait
adc
cli
inc
pushf
dec
sbb
fs
popf
mov
jp
insb
add
out
sub
sbb
test
aaa
in
xor
or
fistpll
jg
xor
ror
je
scas
mov
les
in
mov
or
gs
mov
sbb
push
jne
sbb
ds
divb
push
add
out
std
ds
sbb
loop
ret
loop
mov
mov
mov
jns
ror
mov
mov
and
push
pusha
xor
add
add
rcl
ror
aad
inc
jecxz
fcompl
mov
js
jle
js
fnstenv
movntq
mov
ret
inc
rcrb
sub
lea
push
pusha
repnz
daa
jns
call
xor
mov
pop
push
or
cmp
jb
cli
popa
imul
xor
lea
movsl
xor
xor
mov
mov
mov
add
cld
scas
cmpsb
testb
mov
lods
imul
dec
pop
xor
imulb
mov
mov
sbb
xchg
test
push
inc
dec
test
xchg
cmpsb
sub
xor
lds
notl
mov
push
jbe
sbb
dec
out
xchg
pop
ss
sbb
or
add
add
mov
nop
fmuls
cmp
jle
adc
mov
sbb
mov
adc
xchg
adc
cmpb
outsl
fwait
xorb
idiv
adc
out
cld
cmp
pop
clc
or
shll
push
sarl
data16
mov
xchg
or
fistl
cli
hlt
mov
lcall
pop
push
lret
pop
cld
pop
pushl
and
sub
in
xor
stos
sahf
imul
adc
mov
mov
stos
jp
push
repz
sub
sbb
inc
sbb
imul
cmpsb
jno
loope
in
and
call
test
mov
or
sar
imul
add
and
cmpsl
jg
xor
repnz
in
mov
sbb
sbb
arpl
js
xchg
push
outsb
loopne
aas
mov
push
or
pop
shl
sbb
or
jns
lret
js
cmp
push
cmpsl
ficompl
jg
mov
or
xchg
out
mov
push
sbb
insl
mov
push
xchg
xchg
adc
arpl
fisttpll
mov
mov
scas
jl
int3
jecxz
jbe
imul
pop
sbb
cli
fcoml
inc
cltd
in
out
incl
xor
push
lcall
adc
or
enter
mov
jno
sub
pushl
ljmp
stos
scas
in
xchg
cmp
into
mov
ffreep
loop
jns
xor
inc
pushf
mov
pop
push
sub
or
mov
xor
sbb
pop
adcb
int3
outsl
push
sbb
xchg
push
cmp
in
mov
pop
imul
lods
sbbb
pop
sub
repnz
xchg
cmp
jae
mov
or
cmpsb
pop
mov
cmp
scas
xchg
xchg
rep
jbe
and
fsubrp
orb
adc
sbb
xchg
clc
sub
ss
mov
ret
push
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
jmp
rol
lret
ret
shrl
insb
scas
push
lret
inc
adc
js
dec
jle
js
sub
jne
movsl
mov
sub
mov
jmp
sub
sbb
hlt
inc
dec
pop
cmpsb
mov
xchg
insl
adc
nop
inc
jb
sub
add
inc
in
es
ror
lret
jg
stc
adc
push
call
aam
cmp
imul
repz
and
mov
mov
call
fwait
pusha
xchg
not
imul
gs
scas
cmp
jle
ds
adc
inc
jbe
jbe
mov
in
rclb
inc
fwait
xchg
mov
das
lds
xor
and
jp,pn
lods
jle
aas
out
and
in
lea
pop
out
aam
pusha
loopne
lahf
adc
int3
aam
cltd
mov
test
imul
jmp
inc
sub
nop
push
xor
dec
cld
xlat
in
gs
add
fmull
pop
mov
ljmp
add
and
lret
mov
fs
mov
pop
fs
loope
sbb
insl
aad
ret
add
ret
cmpb
xchg
push
int
inc
les
jns
ficoml
mov
fstp
mov
pop
out
jae
call
or
sub
inc
lcall
pop
aas
xchg
ror
push
mov
and
sbb
pop
inc
push
sbb
fdivs
clc
scas
mov
dec
std
mov
inc
xlat
ss
in
dec
dec
aad
mov
testl
popf
push
xor
in
jmp
xchg
les
xor
es
sub
insb
sahf
rcr
mov
push
jb
fwait
outsb
pop
imul
roll
fwait
rcrb
mov
imul
push
mov
xchg
cmp
sahf
imulb
mov
bound
je
mov
inc
add
push
test
int3
jne
jmp
xor
adc
in
rorl
xchg
orb
testb
and
je
push
fistpll
out
loope
lret
adc
cmpsb
adc
jbe
push
loop
lahf
stos
dec
pop
test
addr16
dec
mov
ret
pop
jnp
shl
stos
pop
mov
into
inc
outsb
push
and
pop
and
test
or
pop
dec
daa
daa
inc
cmp
sbb
jns
into
rcr
inc
xor
jbe
cmpsb
inc
jno
out
int3
movb
outsl
sti
dec
inc
cltd
loop
rcrl
outsl
lea
push
lea
stc
inc
repnz
ret
jbe
aad
xchg
cmpsb
adc
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
jmp
cmp
fnstcw
jecxz
mov
nop
cmp
dec
jle
js
and
in
int3
sub
mov
ret
out
xchg
add
jae
es
fldt
push
pushf
jle
hlt
sub
leave
iret
sti
cwtl
adc
faddl
in
leave
out
hlt
cld
test
in
test
out
lods
popa
and
xor
dec
loop
sbb
xchg
pop
aaa
pop
jnp
jmp
mov
mov
and
mov
push
jp
ds
enter
push
inc
jmp
sub
mov
cmp
xchg
dec
stos
cmp
lea
sbb
out
or
cmp
fstpl
aad
or
call
das
fucomp
sub
dec
pop
enter
movsl
dec
fldl2t
shrb
jnp
pop
addr16
push
inc
cmp
es
lock
or
xor
mov
stos
mov
fadd
out
xchg
pop
repz
leave
xchg
sahf
fdivp
fidivs
and
xchg
cmp
sub
jno
sti
cltd
push
pop
mov
mov
lds
jae
pop
xchg
sub
and
test
mov
iret
add
jl
fnstsw
push
jmp
icebp
pop
lret
enter
dec
das
shl
push
fsubs
test
mov
xor
and
imul
test
repnz
push
lds
and
addr16
mov
mov
shr
into
movb
and
mov
mov
add
sub
sub
mov
push
scas
adcb
jnp
jmp
xchg
push
in
lcall
jnp
insb
out
push
roll
lahf
pop
xchg
rorl
mov
loope
aas
cmpsb
lea
or
jb
dec
push
adcb
fwait
xor
out
mov
jl
sbb
out
sub
dec
jns
inc
mov
pop
hlt
loope
adc
mov
jg
mov
cs
cmp
imul
cmp
int3
scas
rorb
adc
pop
add
add
mov
aaa
xchg
jecxz
cmp
sbb
adc
mov
das
cmpsb
pop
ret
push
mov
push
sub
dec
lods
out
push
ljmp
inc
fstps
xor
addr16
jp
and
in
ficomps
mov
aam
fldcw
cli
add
outsb
inc
jne
outsl
in
sub
jmp
rclb
loope
inc
pop
or
or
std
xchg
and
les
and
arpl
leave
fnstsw
jno
jg
add
test
subl
push
sub
pop
push
lret
lds
shll
jmp
rol
ror
leave
rcr
aaa
mov
iret
movsb
mov
js
dec
jle
js
pop
sbb
add
sbb
sbb
or
xchg
mov
cli
mov
adc
fwait
into
lret
repz
jbe
sbb
mov
mov
out
dec
xor
cmp
fwait
and
or
pop
pop
push
loopne
cmp
mov
mov
out
push
mov
mov
jae
jbe
pop
testb
rorb
or
lods
jg
cmc
mov
push
mov
cli
mov
lea
out
mov
push
outsb
ss
mov
in
push
ds
lds
mov
and
mov
lods
fs
cs
rclb
adc
mov
into
mov
in
aaa
inc
sti
fstps
sbb
push
aad
adc
mov
mov
adc
shr
jge
add
mov
push
lcall
jp
dec
xor
cmpsb
mov
popf
mov
jp
xchg
jecxz
jle
test
jns
mov
inc
std
rep
mov
flds
mov
rcrb
jbe
stc
or
dec
mov
sbb
adc
pop
jns
test
cmp
xchg
aas
dec
inc
add
sub
leave
shrb
cmpsl
out
jne
in
movsl
lea
and
push
cs
faddp
or
mov
outsb
les
pop
les
shll
jb
pusha
fdiv
fs
stos
xchg
ja
lock
repz
mov
aaa
in
fucom
pop
lods
add
dec
mov
out
jnp
mov
stc
sahf
sbb
in
push
push
es
arpl
scas
or
pop
jno
fidivs
lret
pop
mov
clc
iret
xchg
imul
gs
inc
jmp
pop
insb
loope
test
lods
add
popf
mov
fdivrl
inc
adc
or
test
jo
adc
mov
fidivs
sbb
out
pushf
mov
inc
push
mov
xchg
scas
pop
cli
test
popf
fcoml
pop
jle
jo
outsl
xor
push
in
repz
add
sbb
pushf
loop
es
xchg
fmull
ret
out
popl
mov
test
mov
cmp
popa
mov
fsubrl
jle
mov
ja
jne
add
out
stc
adc
loope
xor
and
stos
or
and
in
push
jl
cmpsb
jnp
mov
popa
mov
add
sub
xor
pop
data16
lods
shll
les
out
stc
aaa
push
fisubs
push
jno
fs
popf
in
sbb
push
xlat
mov
jmp
iret
rcl
lret
ror
xlat
lods
and
dec
dec
xlat
fisttpl
jle
js
and
xchg
push
dec
mov
mov
mov
pop
out
rolb
outsb
test
sbb
push
xor
pop
lret
push
aas
call
int
push
mov
pop
sbb
adc
into
movsb
inc
xchg
dec
roll
inc
rolb
cmpsl
subb
xchg
push
mov
xchg
mov
clc
stos
xchg
xchg
aam
leave
pop
lcall
push
pusha
iret
jbe
fists
sbb
push
movsl
add
push
repnz
and
in
cmp
or
adc
push
mov
aam
fs
js
jo
mov
clc
mov
sub
push
cmpsl
fisttpl
repnz
xor
ljmp
jg
or
dec
adc
ficomps
in
insl
push
cmpsl
inc
xchg
jb
les
ja
pop
mov
mov
cmp
xor
fcoms
scas
xadd
fs
adc
cmp
cltd
lds
leave
inc
or
into
aad
cmp
scas
pop
adc
pop
movsb
inc
mov
movsb
shl
popl
dec
mov
xchg
xchg
fists
xchg
loop
idivl
mov
xchg
xchg
dec
mov
movsb
pop
xchg
mov
fstpt
iret
repz
scas
aas
jno
push
iret
addb
nop
mov
test
add
add
mul
loopne
xor
gs
shl
mov
fwait
loope
imul
adc
pushf
mov
aad
shrb
push
shl
lea
mov
or
aam
add
mov
and
loopne
sahf
xlat
sbb
sbb
idivb
adcl
in
and
ljmp
or
pop
popf
jns
stos
mov
xor
lahf
xchg
jl
shlb
daa
xor
adc
jo
sub
repnz
mov
cld
stos
dec
roll
idivb
clc
ljmp
sti
cmc
jecxz
popf
mov
xchg
jp
mov
daa
inc
dec
stos
cmp
mov
stc
repz
inc
xchg
cli
xchg
jp
cmpsb
call
mov
insl
push
jae
arpl
clc
sub
push
fidivrs
aam
addr16
sub
pop
testl
test
pop
sub
add
push
ficomps
leave
add
fists
ja
cs
fstps
xorb
iret
cmp
jmp
lods
mov
out
and
inc
sahf
cmc
lods
andb
fnop
mov
fwait
adc
sub
insl
mov
cmpsb
test
testb
dec
ret
xchg
clc
cmp
in
div
mov
jmp
aas
ret
rol
sbbl
js
js
dec
jle
js
adc
jle
pushf
sbb
xchg
xorb
lcall
sbb
add
test
mov
sub
dec
mov
cli
cld
pop
imul
stos
xor
cld
inc
dec
pop
fsubr
in
mov
and
push
push
int3
and
push
xchg
lods
faddl
aaa
and
dec
xchg
ds
das
sbb
mov
jl
outsb
in
aam
test
loopne
cmp
and
mov
aad
add
mov
rorb
mov
cmp
add
jmp
adc
pop
addr16
arpl
inc
sbb
sub
lods
xchg
ret
push
sub
jns
add
or
ret
lret
jecxz
sahf
pusha
sbb
sub
mov
inc
insb
dec
loopne
shlb
mov
inc
pop
sbb
addl
mov
arpl
ss
mov
or
aam
mov
and
mov
mov
fidivrs
cmpl
sbb
sbb
adc
daa
scas
jecxz
dec
mov
les
xchg
or
xor
leave
test
xor
jne
ds
xor
lods
xchg
mov
xor
pop
or
mov
mov
push
push
xor
aad
sub
lcall
xchg
mov
outsb
and
cli
mov
sub
sub
mov
out
push
and
repz
add
jnp
add
test
out
push
mov
push
push
inc
push
jo
pop
sbb
out
fwait
cmp
stos
jg
int
xchg
mov
and
mov
incl
inc
mov
push
ret
imul
stc
xchg
jg
sub
or
leave
xchg
mov
ret
aaa
shrl
test
fldenv
adc
xchg
imul
cli
aad
aaa
mov
or
mov
sahf
aam
insl
xor
xchg
xor
jno
pop
xchg
sti
push
or
rorl
popf
push
stos
push
imul
xchg
lods
push
pop
inc
cmp
or
adc
xor
mov
sub
in
dec
xlat
cmpsl
out
lods
jnp
imul
icebp
pop
icebp
fsubp
pop
stc
mov
jmp
test
rorb
daa
add
xchg
push
out
inc
pop
and
mov
iret
aam
jns
inc
mov
pushf
xchg
sbb
arpl
aaa
push
sub
cmpsl
ret
popf
jne
mov
ret
sahf
out
pop
mov
mov
testb
ja
call
leave
mov
jmp
ds
cmp
mov
push
les
dec
jle
js
in
int3
sub
ja
test
sbb
mov
lcall
cmovo
aas
lret
test
xchg
push
dec
in
jge
nop
dec
pusha
in
xor
and
dec
sub
sahf
out
scas
mov
xchg
sbb
cmpb
in
sbb
cmp
in
test
inc
xor
cmp
mov
clc
dec
and
dec
dec
repz
mov
jecxz
fidivrs
dec
sub
xchg
xchg
jnp
in
pop
loopne
outsb
aam
adc
ljmp
add
out
xchg
cmp
sbb
insl
stc
mov
and
call
jp
imul
xor
imul
std
lret
mov
dec
sbb
daa
rorb
pop
cld
lret
cltd
push
cmp
xchg
xchg
je
mov
lahf
ret
mov
outsl
ja
sub
and
rol
jle
ljmp
fwait
mov
sbb
mov
nop
lret
push
sarb
test
inc
filds
out
push
add
inc
push
pop
jbe
mov
aaa
push
lret
out
pop
das
rclb
movsl
or
jae
rorl
pop
adc
enter
sbb
dec
daa
js
repz
and
inc
jmp
ficoms
and
jbe
dec
dec
nop
pop
jnp
std
pop
popa
adc
pop
stos
jg
mov
cmp
add
out
daa
cmp
out
inc
or
in
mov
push
push
push
imul
or
inc
popa
cmp
and
pop
int3
stos
mov
and
in
fwait
cmp
push
xlat
mov
jne
cmp
dec
adc
jmp
sbbl
mov
adc
dec
leave
ret
pop
inc
pushf
mov
fs
xor
mov
dec
xchg
cli
std
mov
cmc
push
mov
jb
jno
push
cwtl
dec
aad
data16
dec
push
fiadds
pop
pop
jmp
xchg
nop
sarl
sbb
cmp
idivl
hlt
aaa
push
hlt
cs
pop
sub
dec
and
pushf
mov
sub
clc
decl
sbb
jns
je
test
dec
mov
enter
pop
pop
mov
mov
out
ficoml
or
scas
movsb
or
mov
add
and
jl
cmp
movsl
or
xchg
ret
inc
cwtl
lock
mov
jg
fists
cltd
and
push
mov
sbb
push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
and
mov
jmp
int3
vpmovmskb
fcmovnu
leave
in
loop
out
sbb
js
fs
js
int3
loopne
sbb
and
or
mov
test
jnp
in
xor
push
sahf
or
jl,pn
cmp
add
push
gs
in
xchg
les
push
sarl
outsb
jb
mov
std
pop
sbb
pop
lods
adc
icebp
push
in
mov
mov
or
dec
jmp
mov
or
dec
mov
inc
andb
pop
inc
dec
pop
nop
sbb
mov
jne
xor
cltd
cmp
and
or
fldcw
out
ljmp
out
jo
test
lods
dec
pop
daa
test
mov
incb
pop
jmp
movsl
push
push
cwtl
aad
scas
pop
into
adcl
sti
aaa
insb
fs
xchg
add
data16
sbb
jo
add
lods
scas
and
cmp
jecxz
sbbb
jb
dec
outsb
fcompl
pusha
lcall
inc
push
outsb
popa
pop
sbb
mov
and
faddl
pushf
iret
vpxor
push
rcl
xor
sbb
in
cmpsb
mov
test
pop
lret
addl
jp
sbb
add
loope
jp
mov
stos
fsubr
notl
xchg
mov
es
arpl
push
pop
xor
xor
ljmp
outsb
popf
out
loop
in
add
mov
lds
adc
pop
div
mov
fmulp
sub
pop
add
and
cmp
dec
nop
stos
movsb
and
push
dec
inc
add
mov
or
gs
jge
das
push
adcb
xchg
pop
and
repz
or
mov
pop
xchg
push
jae
adc
mov
fwait
in
mov
fisubrs
rcll
push
stc
jne,pn
inc
daa
sbb
xorl
pop
dec
xchg
xchg
loopne
nop
sbb
ret
rclb
in
push
sbbb
jmp
pop
adc
fisubs
mov
mov
push
jecxz
dec
xor
mov
aam
mov
dec
pusha
cmp
mov
dec
test
fwait
sub
movsl
adc
mov
mov
mov
negb
pop
and
rolb
cmpsb
in
lret
mov
adc
ljmp
mov
imul
enter
sbbl
imul
xor
mov
inc
pop
les
fldl
mov
push
fstpl
nop
ret
xorl
add
mov
add
add
dec
add
xor
subl
mov
xorl
jmp
rol
cmp
aam
rol
mov
and
or
stc
insb
iret
js
fs
js
and
je
lea
dec
xlat
sbb
outsl
loope
fidivl
mov
cwtl
movsb
ds
pop
fs
int3
scas
data16
push
idivb
or
jno
mov
jmp
sub
in
int
lcall
and
jb
leave
inc
adc
jmp
pop
gs
aad
outsl
xor
or
icebp
inc
cltd
or
xor
inc
cmp
scas
xchg
mov
out
cs
sbb
std
sbb
bound
jge
pop
into
adc
lcall
adc
jge
add
cmc
repnz
pop
aam
popf
push
lret
push
shlb
es
jg
xchg
push
stc
sbb
lahf
adc
or
mov
into
jne
sbb
leave
mov
or
pop
cmp
popf
out
add
cmp
icebp
add
test
mov
xchg
repz
sub
rcll
ror
pop
or
out
xchg
add
mov
rclb
ds
push
in
xchg
lahf
lods
push
daa
inc
pop
out
push
mov
adc
enter
imul
pushf
xor
mov
into
mov
jb
shl
dec
addr16
jp
jle
fidivl
data16
out
int
push
or
mov
adc
shl
call
inc
add
das
mov
ljmp
sbb
inc
cltd
push
out
adc
in
les
aaa
in
in
inc
pop
cs
push
mov
outsb
cmp
adc
sub
test
das
dec
aad
fiaddl
push
jl
fs
fsubrp
aad
or
sub
fs
mov
xor
outsl
stc
aas
popf
in
subl
adc
sub
jl
sub
ret
pusha
inc
sub
pop
lods
and
pop
mov
out
jno
or
cmp
in
loop
pop
inc
dec
xor
pop
dec
sbb
mov
xlat
mov
in
and
xchg
inc
movsb
push
fucomip
mov
fnsave
mov
aas
lds
push
cld
or
xchg
stc
dec
fwait
jle
repnz
imul
fdivrl
pop
pop
mov
or
aad
xchg
sbb
pusha
je
repnz
xor
add
addr16
push
push
imul
mov
mov
add
sti
xchg
fidivrl
shll
out
sbb
cmp
mov
add
xor
fisttpll
push
insb
fmulp
scas
mov
mov
add
sahf
dec
pusha
inc
jne
dec
lock
xlat
in
scas
loopne
sbb
pop
mov
int3
out
xchg
mov
lods
add
sbb
movzwl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
adc
mov
xor
add
sub
jmp
cmp
rcl
rol
ficoml
out
divb
js
jle
js
lds
mov
cli
lret
sti
lahf
stos
xlat
dec
xchg
add
xor
xor
push
xlat
mov
in
lods
mov
mov
addr16
adc
jmp
fistpl
out
cli
imul
jl
leave
and
push
fldenv
call
jmp
cmp
cmp
push
test
pusha
jp
push
jne
out
outsl
adc
or
mov
popa
imul
jbe
negb
cmp
sarb
iret
cmp
movsb
dec
outsb
jg
scas
ja
outsl
and
mov
out
mov
dec
and
cmpl
out
pop
test
xor
cld
sahf
repz
pop
lods
mov
or
mov
arpl
jl
mov
iret
imul
add
aam
push
cmp
pop
dec
cli
mov
and
add
xor
out
sbb
fdivrl
aas
xchg
sub
enter
jp
mov
adc
jb
pop
mov
inc
mov
and
adc
insb
or
call
mov
xor
sbb
cmp
in
xor
xor
negb
loope
stos
movsl
cmp
ret
sbb
add
xor
cmc
lahf
arpl
cmp
mov
xor
mov
xor
insl
insl
jne
movsl
cmp
insl
test
loope
jp
test
push
repnz
test
sbb
dec
das
xorl
or
or
ret
icebp
jmp
sub
jp
out
lods
sbb
lock
or
or
adc
xchg
fsubr
and
xchg
mov
daa
nop
lods
enter
mov
jbe
std
push
repnz
out
imul
add
js
jecxz
jns
mov
xchg
push
push
fstpt
sbb
ds
mov
stos
and
aam
stos
add
daa
mov
dec
or
subl
sbb
movl
inc
cltd
fsubs
test
cmp
rclb
addr16
jp
xchg
dec
push
sbb
insl
sbb
stos
cmpsl
sub
push
scas
hlt
ror
jb
jnp
repnz
jp
adc
xchg
jmp
push
stos
test
ss
movsb
dec
jns
cmp
add
sbb
and
jmp
fs
fs
les
fisubrs
push
pop
imul
test
dec
cmpsl
or
mov
iret
cmp
or
xchg
add
xor
cmp
in
mov
pop
jmp
clc
aad
insl
testl
movsb
xchg
jmp
cli
push
test
mov
xchg
test
xor
mov
aam
lret
pop
cmc
loop
inc
jg
inc
incl
add
add
add
or
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
jmp
iret
lret
aad
in
mov
inc
sarl
fs
js
je
aaa
out
pop
mov
adc
mov
or
popa
fcoml
fs
inc
add
aas
adc
and
sbb
adc
adc
inc
shl
inc
in
fdivs
pop
hlt
pop
shr
das
dec
xchg
jae
sahf
scas
out
aad
call
hlt
fistpl
xchg
dec
roll
sbb
out
inc
mov
sbb
outsb
popf
lods
xchg
sub
xor
aam
popf
dec
adc
ja
pop
jge
stc
mov
mov
mov
add
jbe
or
addr16
arpl
pop
pushf
xor
xor
repnz
scas
xorl
lret
push
in
hlt
ret
mov
push
sbb
hlt
jge
pop
adc
sbb
pop
es
mov
or
test
insb
addl
inc
adc
out
xor
jl
scas
xor
fwait
sbb
jns
add
test
mov
mov
es
repnz
jg
push
in
mov
in
jg
adc
jbe
pop
bound
js
lods
pop
push
scas
push
xchg
pop
pop
rolb
arpl
dec
xlat
cmp
iret
imul
inc
cmp
out
jb
sub
xchg
add
and
lret
int
jge
sbb
outsb
test
cmp
stos
xchg
jp
leave
sbb
cmp
ret
xchg
out
push
add
mov
lea
and
cmp
xchg
cmp
lock
ds
jmp
in
dec
cmp
aad
lret
leave
dec
iret
loopne
inc
or
sbb
xor
and
adc
ljmp
sbb
fldenv
push
mov
xor
mov
imul
sub
cmp
stos
push
stos
ljmp
jp
adc
mov
or
sbb
pusha
test
dec
in
mov
jg
cmp
jns
dec
xchg
cmp
inc
jae
lahf
bound
loop
mov
mov
adc
jo
arpl
movsl
in
mov
lret
int3
inc
or
or
adc
xor
sub
push
mov
stc
xchg
cmp
pop
out
inc
icebp
mov
mov
outsl
sbb
sub
mov
lds
sbb
lret
icebp
adc
jge
test
ret
xor
leave
dec
pop
jmp
and
dec
sbb
rolb
ljmp
mov
jnp
adc
clc
iret
shl
xor
insl
insb
divl
lock
adc
mov
push
movsl
inc
out
divl
inc
loope
pop
sbb
mov
mov
inc
loop
pop
ds
mov
mov
orl
mov
xor
sub
sbbl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
mov
push
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
jmp
cmp
cmp
ret
shll
outsl
subb
js
fs
js
dec
fnstcw
testl
inc
push
lods
sbb
test
inc
pop
and
inc
shlb
in
sub
cmc
xor
mov
cwtl
in
mov
pop
push
imul
mov
pop
jbe
ret
test
sbb
adc
adc
mov
jmp
mov
mov
outsb
cli
xlat
lods
aas
test
shlb
cmpsb
mov
ret
jge
fbstp
js
xchg
jecxz
aas
sarb
cmp
pop
inc
cmp
nopl
mov
dec
in
adc
cmp
sahf
std
sub
arpl
sbb
cmc
movsl
mov
adc
mov
or
mov
mov
hlt
xor
adc
adc
sub
lods
jns
rcrl
inc
mov
mov
insb
in
jbe
jb
es
dec
sti
cmp
ljmp
aad
jmp
lods
in
sub
adc
or
shr
out
jmp
movsb
adc
push
xor
sbb
mov
repnz
jl
mov
test
cltd
xor
jb
push
xlat
lret
std
insb
push
push
data16
js
notl
lock
push
and
cli
mov
or
mov
aaa
push
xor
scas
sub
push
inc
stos
bound
bound
xchg
fsubl
lods
imul
mov
inc
mov
mov
adc
or
dec
test
into
fisubrl
inc
pop
and
dec
out
and
sub
and
or
rol
xchg
jg
lar
js
ret
lret
dec
jecxz
fxch
mov
jbe
mov
xchg
shl
mov
pop
mov
and
fiadds
idivl
arpl
lock
mov
lea
pop
mov
test
push
inc
ffreep
push
mov
pop
fistpl
insb
lret
dec
idivl
std
scas
jge
inc
inc
cltd
roll
add
call
add
sbb
push
xor
mov
sbb
and
push
and
data16
movb
lahf
mov
out
stos
pop
in
int
outsl
pop
mov
adc
mov
loope
iret
add
mov
mov
add
movsb
lea
and
lods
mov
lods
into
test
mov
cmpsl
sub
mov
pop
pop
lahf
pop
mov
lret
pop
das
dec
jecxz
xor
sub
xchg
outsl
dec
mov
xor
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
jmp
ror
lret
fcmove
rcl
adc
xchg
push
fstpt
fs
js
mov
movsl
pop
addl
mov
mov
push
mov
mov
lods
xchg
jo
xchg
loop
das
out
out
xor
mov
cld
cmp
nop
in
inc
jb
sbb
mov
add
enter
loope
jmp
das
in
push
inc
push
decb
cmpsl
icebp
inc
and
sub
movsb
sbb
xchg
fsin
leave
lret
loop
dec
push
into
test
in
testb
shll
and
clc
repz
outsl
pop
fstl
mov
push
loopne
pop
jmp
pop
inc
mov
mov
cli
maxps
add
popf
sbb
push
cwtl
jge
jae
lea
add
adc
push
push
out
nop
jp
cmp
test
push
sbb
push
inc
dec
xchg
sub
arpl
daa
inc
out
and
or
sub
jo
lret
cmp
test
xchg
out
aad
test
and
stos
repnz
out
or
xlat
decb
mov
inc
xor
aad
jae
mov
sub
das
cmp
inc
mov
bound
jge
inc
push
jb
push
pop
ss
es
dec
dec
ja
ljmp
adc
fucomip
sbb
lea
test
jmp
mov
popf
orl
mov
sahf
sarb
add
jb
or
paddusw
push
fdivs
sub
sub
lahf
lods
lret
jmp
inc
and
repz
inc
xchg
mov
rclb
leave
rcrb
stc
movsb
xchg
ret
and
lret
in
and
pop
lret
xor
fxtract
ljmp
clc
or
ficomps
lock
mov
ss
cmp
pop
dec
movsl
or
cli
cld
rclb
jp,pn
repz
push
pop
cltd
in
movsb
and
sub
add
test
dec
out
cmc
or
mov
in
push
mov
sbb
into
pop
push
jne
popf
or
rclb
in
push
iret
mov
js
jns
lahf
adc
shrl
inc
loopne
xchg
pop
stos
adc
ds
aaa
push
push
mov
xchg
push
and
dec
adcb
ss
add
outsl
aaa
fsubs
scas
shrb
sub
pusha
arpl
inc
test
mov
popf
pop
aas
in
jle
aad
or
xor
scas
fstpt
pop
into
rol
out
sbb
pop
fs
js
and
and
ret
mov
mov
push
xchg
nop
js
sub
ljmp
push
fldl2e
lods
rcll
dec
pusha
push
pop
adc
arpl
or
dec
adc
rorb
test
pop
mov
mov
jmp
lret
ret
fld
add
fsub
mov
js
fs
js
test
scas
cmp
fnstcw
scas
repnz
cmp
cmp
rcrl
sbb
test
in
inc
xor
mov
jg
jle
mov
pop
cmpsl
ja
mov
push
pop
mov
cmp
call
ja
test
or
repnz
inc
lock
ja
ret
mov
xor
cmc
inc
and
shll
and
leave
push
out
lret
mov
sarl
push
fs
xchg
jns
pushf
inc
xor
ss
data16
mov
cmp
jne
add
mov
sbb
xchg
xchg
adc
out
push
lock
je
fldl
pop
cwtl
test
inc
jae
pop
out
mov
cltd
test
jecxz
lds
pxor
jno
xor
lret
and
stos
bnd
xchg
pop
adc
sahf
or
and
xor
push
mov
mov
insb
cmp
movsl
cwtl
xchg
jb
add
movsl
pop
sub
inc
lods
cmp
sbb
lods
xchg
movsb
les
and
inc
xchg
jnp
aaa
stos
stc
insb
mov
cld
aam
scas
pushf
scas
cmp
ljmp
iret
adc
xchg
daa
inc
dec
jle
pop
cmp
mov
test
fdivrs
push
pop
ljmp
arpl
mov
xor
inc
test
sub
and
dec
or
lds
fs
out
jle
mov
cmc
cltd
xlat
out
mov
jp
lcall
ret
stos
and
popf
lcall
pop
inc
add
xchg
movsl
out
mov
mov
mov
sar
pop
or
pop
push
pop
imul
imul
or
dec
inc
data16
mov
leave
jecxz
ja
sub
lahf
in
ret
shll
std
sbb
push
pop
pop
adc
test
aam
xchg
fbstp
pop
push
xchg
add
pop
mov
lret
icebp
add
loopne
ljmp
xchg
sbb
sub
mov
je
lock
cmp
andb
inc
or
rclb
enter
test
stos
mov
negb
or
add
ljmp
pop
mov
and
loop
test
cmp
std
mov
scas
in
mov
lock
mov
fwait
jnp
pop
sbb
mov
into
xlat
into
icebp
sub
or
frstor
testb
dec
jb
inc
inc
stos
jg
sbb
lcall
mov
xorb
and
adc
pop
xor
repnz
rcr
cld
mov
dec
adc
jno
iret
xor
add
mov
mov
xor
add
mov
mov
jmp
ret
ror
rcr
rcl
push
add
inc
hlt
fnstsw
fs
js
xchg
scas
inc
shl
sti
lea
icebp
or
rcr
je
add
inc
lret
je
mov
jb
xchg
push
pop
and
imul
in
xor
enter
sub
or
jmp
rol
ss
sbb
adc
pop
inc
faddp
xchg
fisttps
mov
repz
dec
lods
mov
aaa
mov
cmp
pop
push
les
or
mov
sahf
pop
fists
push
mov
mov
adc
or
fnsave
xor
lret
sub
cmp
ret
jno
xchg
int3
xorl
add
dec
mov
shlb
popa
xchg
pop
imul
push
je
mov
popa
mov
mov
jbe
out
adc
push
mov
out
jecxz
mov
loopne
ret
aad
pusha
sbb
sub
xor
and
jnp
ljmp
cltd
push
lock
and
pop
ret
mov
lret
dec
lret
int3
fsubl
mov
xor
inc
lahf
in
inc
and
jno
pop
push
mov
push
div
xchg
sti
push
popa
and
fs
movswl
xchg
mov
push
cmp
andl
cli
es
xchg
jb
dec
xor
push
dec
rorl
out
push
repnz
push
xchg
test
sbb
dec
and
push
gs
xchg
pusha
incb
sbb
roll
mov
push
or
sub
or
icebp
jbe
fistps
leave
fildl
mov
pop
push
pop
js
xlat
dec
dec
inc
ljmp
and
pop
mov
xor
jge
js
mov
scas
push
ss
mul
mov
adc
mov
pushf
lods
popa
daa
xor
xchg
inc
sbb
cmp
xlat
ret
sbb
inc
test
mov
cltd
xchg
or
clc
dec
dec
movsb
das
jne
cmc
lea
out
lods
repz
add
arpl
push
test
mov
insb
pop
gs
inc
pop
pop
dec
fnstcw
sub
inc
dec
and
das
sbb
cli
call
jge
lods
cmp
cltd
jge
push
lcall
loopne
sarb
shlb
or
aas
fiadds
lods
inc
ljmp
xchg
cmp
mov
adc
sbb
sub
ret
std
insl
enter
cmp
xor
int3
and
sbb
movsl
dec
xchg
in
roll
aas
mov
lock
int3
std
add
sbb
mov
push
lods
xchg
in
push
xchg
push
and
cltd
sub
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
jmp
cmp
rcl
fcmovu
into
leave
xchg
loopne
js
fs
js
addl
adc
cmp
out
dec
scas
and
xor
std
pop
sub
push
mov
mov
scas
test
roll
cmp
dec
mov
das
push
or
stos
cmpb
sahf
lods
std
adc
je
mov
movsb
int
dec
pushf
cmp
out
call
fcmove
outsb
mov
xor
int3
push
test
pop
mov
repnz
rolb
aam
mov
sbb
imulb
imul
pop
lea
std
sub
test
ret
les
jmp
cmpb
cmp
outsb
xchg
dec
xchg
xor
shrb
dec
xor
xchg
mov
cmpsb
dec
mov
xor
jno
xchg
inc
ds
ljmp
adc
stos
nop
leave
mov
push
popf
jmp
push
adc
mov
and
in
push
sbb
mov
push
cmp
hlt
add
xor
addr16
dec
mov
push
adc
fs
loopne
mov
jecxz
test
add
pop
cmpsb
repz
push
stos
sbb
sbbb
inc
xor
rolb
or
sbb
arpl
sub
mov
mov
lret
in
jno
loop
pop
push
adc
mov
mov
mov
dec
add
loop
fcomp
in
adc
ret
lcall
sarl
outsb
cmp
push
or
mov
in
fsubl
ss
dec
cmp
jg
repz
cmpsb
mov
pop
aas
xchg
or
addr16
jl
popf
sbb
stos
sub
xor
pop
mov
insb
cmp
addr16
mov
clc
cmp
sbb
push
push
lahf
sub
mov
cmp
fstpl
inc
xor
inc
scas
and
xorb
notl
jp
cli
or
adc
scas
jmp
mov
iret
lret
pop
xchg
xchg
xchg
sti
sub
in
lret
or
jecxz
xchg
mov
pop
movsl
in
adc
mov
popa
mov
shrl
lcall
loope
in
mov
popa
not
clc
jmp
mov
in
enter
lahf
add
ret
in
mov
sub
sar
add
lock
mov
xchg
inc
pushf
inc
das
aaa
test
cmpsl
mov
or
call
imul
push
sbb
negb
cmp
hlt
repnz
imul
mov
loope
inc
or
push
mov
out
in
dec
fists
sarb
fstpt
mov
notb
sub
jecxz
cltd
sbb
lret
or
vcvtpd2dq
xchg
in
imul
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
jmp
aas
fld
add
sahf
mov
out
js
jle
js
xchg
inc
cmp
mov
jecxz
scas
mov
lods
cmp
add
cmpsl
gs
test
mov
scas
in
sub
ja
sub
push
iret
pop
adc
rclb
mov
push
inc
lods
add
mov
and
enter
mov
insl
hlt
sub
mov
push
jp
dec
je
push
iret
popa
shrl
loop
adc
imul
sub
divl
lret
add
mov
call
pop
fucomip
cmp
bound
push
and
mov
rcrb
adc
cltd
sbb
and
pop
push
negl
and
inc
cmp
ficoms
mov
fistps
mov
aaa
inc
fisubs
std
pushf
add
xchg
mov
adcl
mov
fbstp
test
cmp
inc
push
dec
fisttps
jns
push
mov
test
pop
cmp
shrl
cmp
jp
aam
push
aas
xchg
sbb
xor
jo
xchg
ret
out
out
xor
xchg
or
hlt
fdiv
cwtl
jae
mov
cli
adc
scas
push
cwtl
fiadds
dec
daa
jg
adc
xchg
sub
or
bound
xchg
push
cmp
fcomi
push
cmovbe
movsb
and
fwait
fwait
pop
xchg
dec
lods
js
stos
inc
cltd
and
or
add
xchg
in
sbb
pop
mov
movsl
add
ds
mov
mov
push
lods
xor
sub
popf
mov
subl
push
xchg
and
xchg
lahf
jno
xlat
negl
sbb
push
mov
cltd
or
mov
push
lods
movnti
sbb
iret
cmpsb
push
pop
imul
test
mov
mov
out
cmpl
cltd
dec
pushf
push
gs
int
fwait
dec
mov
repz
xchg
ret
inc
jl
jecxz
stos
inc
mov
push
sub
sbb
fs
loope
inc
lea
sbb
loopne
xorl
jmp
loopne
sbb
sbb
popa
and
cmp
mov
pop
mov
mov
mov
push
add
rorb
jmp
jbe
mov
cmp
outsl
mov
add
aad
push
sbb
and
icebp
sub
and
xchg
xor
pop
daa
inc
xchg
popa
mov
sub
add
test
mov
mov
loope
hlt
xchg
dec
mov
movsb
and
and
std
or
filds
mov
hlt
stc
fwait
mov
sub
cld
dec
jno
or
cli
outsb
pop
loop
adc
inc
add
lods
imul
mov
add
ret
push
mov
push
xor
push
jmp
cmp
aad
mov
adc
js
jle
js
test
push
cld
inc
ret
fwait
add
jl
jo
shll
sbb
sub
inc
dec
jb
dec
repnz
xchg
cli
push
loopne
out
cmp
mov
push
push
and
cmp
je
fwait
cmc
mov
mov
and
bound
loopne
outsl
mov
loope
sub
mov
mov
lahf
mov
add
jecxz
outsl
insl
test
fwait
stc
cmpsb
xor
fisttpl
aaa
mov
xchg
fidivl
cmp
scas
call
and
sub
nop
fwait
mov
cmp
call
xchg
iret
mov
mov
jle
stc
xor
sub
mov
iret
stos
cmp
sbb
jnp
xor
cmp
sub
xchg
push
std
movsl
dec
push
push
mov
fcoml
pop
in
adcb
test
ds
adc
xchg
daa
mov
dec
cli
sub
out
scas
jge
sub
ljmp
mov
mov
push
jno
mov
inc
cmp
cmp
or
xchg
adc
push
push
and
jb
adcb
mov
int
into
jb
mov
and
out
push
arpl
pop
pusha
mov
repz
jg
sbbl
and
or
pop
nop
std
cmc
jmp
clc
pop
adc
pop
mov
lahf
cmp
push
mov
mov
or
sub
inc
mov
xor
and
call
andb
popa
std
bsf
pop
jmp
push
adc
cmp
and
mov
pop
sti
jnp
addl
clc
cli
shlb
jmp
jl
cs
cs
push
imul
fdivs
sbb
aaa
cld
lods
mov
jp
jo
push
jne
jae
inc
push
clc
inc
mov
jl
aaa
inc
arpl
fs
sbb
mov
inc
sbb
das
jb
pusha
pop
cmp
ret
fcompl
imull
ja
fwait
dec
pop
mov
aaa
mov
ror
push
insb
js
dec
push
push
aad
or
pop
testb
adc
sbb
stos
or
out
xchg
mov
and
js
adc
jb
xchg
lret
call
push
lret
ja
and
cmp
push
mov
lods
push
pop
imul
sti
push
popf
inc
adc
clc
cmp
cld
cmp
cld
add
push
mov
mov
add
mov
mov
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
mov
orl
add
add
xorl
imul
mov
jmp
cmp
lret
stos
adcl
xchg
in
addr16
aam
adc
cmovne
fadd
xor
aas
insl
and
jno
adc
sahf
jmp
mov
repz
push
jmp
jns
push
aas
loop
adc
push
sub
push
addb
jne
adc
mov
fcomps
ja
push
or
pop
mov
aas
xchg
cmp
mov
sub
jge
loope
test
mov
and
scas
sub
jb
sub
push
stos
push
push
mov
sysexit
std
and
or
mov
jp
scas
push
das
sbb
andb
sub
ja
cltd
jb
and
jne
sub
jno
fidivrl
push
cmp
cli
xor
push
push
repnz
jne
push
cltd
sbb
psrld
scas
rcll
mov
orl
push
int3
test
inc
loope
es
dec
jo
xchg
negb
jp
inc
xchg
adc
xchg
fnstenv
or
adc
test
stos
inc
cwtl
ret
pop
or
jecxz
pop
rcll
jp
sub
mov
cwtl
or
pop
push
pop
sahf
pop
mov
dec
fwait
sbb
cmp
xor
daa
sarl
js
hlt
push
imul
sub
jnp
mov
or
inc
jge
jecxz
mov
fidivs
mov
add
mov
mov
ret
mov
mov
cmp
jae
cmpb
mov
out
mov
pop
stc
clc
mov
leave
mov
sbbb
and
jp
repz
or
pop
adc
add
test
sbb
mov
lods
negl
es
jmp
cmp
mov
push
inc
or
adc
std
pop
adc
jle
lcall
cmp
add
jl
push
jp
inc
jae
sbb
inc
cltd
insl
into
fstpl
dec
inc
ljmp
sarl
popf
push
das
sarl
aad
jg
lods
cmp
mov
push
cwtl
pop
imul
xor
push
push
orb
out
fs
fcomp
mov
ja
inc
or
cmp
ja
xor
js
test
ljmp
stc
mov
js
les
aad
inc
sub
sub
mov
stc
and
into
loop
data16
imul
mulb
or
ret
insb
int3
cmpl
movl
jne
jmp
lret
cmp
mov
ret
mov
js
cmpsl
jle
js
dec
pop
ljmp
inc
pop
int
in
mov
and
mov
sbb
pop
lea
std
ja
outsb
sub
lods
pusha
and
test
cmpsb
mov
sbb
dec
int3
pushf
jne
scas
push
pop
testl
pop
xor
add
xchg
rcrb
and
cwtl
addr16
sub
or
mov
jne
xchg
test
fsts
sub
hlt
pop
cmp
imul
stc
leave
push
pop
mov
push
jns
mov
jno
xor
cmp
pop
and
push
sbb
or
dec
add
push
add
shrl
popa
xor
stos
xchg
push
sbb
ljmp
aam
ret
and
in
out
cmp
dec
out
dec
jo
test
mov
mov
xchg
xlat
mov
ret
xor
sub
cmp
or
lods
xor
add
pop
mov
xor
xchg
cmp
int
subl
push
adc
add
pop
mov
mov
xor
or
sub
loop
xchg
pushf
lcall
test
pop
bound
ss
cwtl
mov
sub
cmpsl
adc
pop
xchg
mov
cltd
repnz
adc
push
adc
mov
cmp
inc
pop
and
pop
arpl
inc
xor
or
pusha
xchg
xchg
shrl
push
test
mov
movsb
mov
fwait
ret
repnz
rcll
mov
jb
int3
xchg
movsl
lret
xacquire
pop
es
sub
mov
addr16
dec
subl
dec
dec
adc
adc
lods
mov
sahf
test
mov
fdivl
andl
mov
aam
mov
test
aam
add
mov
jnp
mov
leave
and
mov
inc
jl
xchg
sbb
fstp
pop
jo
aas
pop
cld
daa
mov
test
xlat
data16
push
lahf
push
push
je
cmp
mov
mov
dec
mulb
push
push
insb
in
shlb
iret
and
enter
xor
arpl
xchg
cmp
sub
inc
xor
inc
in
mov
test
les
icebp
jmp
mov
addl
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
jmp
xlat
leave
lret
aad
leave
adc
mov
js
jle
js
add
or
cmpl
outsl
leave
push
jecxz
xchg
adc
sub
sti
push
lea
mov
cmp
leave
lods
jnp
imul
ficoms
and
sbb
call
inc
nop
les
jo
cmp
dec
inc
ficomps
sti
leave
rcll
insl
adc
sti
adc
shl
insb
mov
int3
clc
xchg
sbb
xor
imul
js
jb
dec
mov
xchg
push
pop
adc
xchg
and
out
or
and
add
jb
mov
adc
arpl
orb
ljmp
inc
aad
aad
sub
add
jle
sub
shrl
into
sbb
insb
in
lahf
ljmp
shlb
dec
ficoml
sub
adc
push
clc
push
mov
lret
ret
pop
sub
dec
jbe
inc
push
stos
xlat
cs
xor
xchg
or
cmpsl
gs
xor
cmpl
sub
add
cltd
stos
repnz
fs
sub
pop
mov
sub
xorb
inc
add
or
and
push
sbb
inc
mov
cmp
and
fcmove
clc
imul
dec
adc
cmp
add
jnp
int3
inc
test
vpmacssdqh
mov
mov
les
ja
cmp
sbb
dec
mov
sub
adc
fs
test
push
push
insb
sub
jecxz
lret
jmp
out
aad
or
popa
icebp
shlb
jne
cmc
imul
add
fidivs
xchg
jg
ja
add
lds
js
push
adc
and
xchg
add
mov
add
xlat
fwait
movsl
lods
paddsw
xor
inc
jl
add
sbb
mov
scas
push
pop
es
inc
fidivs
add
outsl
pop
roll
jnp
cmc
push
sahf
ja
hlt
popa
jecxz
and
fcmovb
mov
shrl
pusha
leave
or
or
ds
xor
shl
cmp
jmp
in
cmp
dec
ss
xor
cmp
mov
call
lcall
outsb
or
cmpsb
fisubl
jnp
rorl
mov
push
pop
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
jmp
leave
enter
xlat
enter
inc
in
pop
bnd
push
jle
js
dec
movsl
push
std
xlat
dec
fsubrs
ret
nop
jle
xchg
xchg
inc
xlat
ja
in
hlt
or
jg
shlb
jmp
sub
in
xor
pop
inc
jp
xor
outsl
in
jae
testl
push
sbb
mov
stos
and
jae
sub
es
push
cmp
imul
sbb
pop
incl
pop
imul
in
inc
or
stos
pop
add
and
in
aas
repz
cli
push
movsl
data16
lods
stos
lahf
dec
jno
sub
and
test
add
xor
cld
xchg
test
jmp
mov
mov
ss
mov
push
push
mov
adc
pop
lret
inc
mov
add
cld
shl
andb
and
xchg
cmpsb
mov
push
sub
lret
or
dec
adcb
xor
data16
sarl
lret
xor
pop
icebp
jo
and
fstp
push
cmpb
std
mov
mov
int
ss
sub
icebp
loop
adc
xor
stc
test
das
lcall
shll
push
or
xchg
push
into
out
adcb
inc
and
jo
push
mov
push
cmpsb
and
std
cmp
adc
js
pop
and
push
sbb
inc
mov
stos
sbb
test
sub
or
test
fnstcw
test
jp
pop
mov
aas
mov
scas
inc
adc
imul
jg
sbb
mov
in
mov
out
icebp
ret
shl
outsb
movd
jmp
push
call
inc
or
call
ds
cmc
xchg
daa
iret
adc
xchg
inc
pop
cltd
clc
mov
inc
xchg
xchg
test
adc
or
xchg
stc
adcl
js
fwait
xchg
dec
sub
mov
insb
mov
xchg
cmc
movsb
push
or
mov
sbb
add
mov
out
pop
dec
xchg
scas
jg
aaa
xchg
inc
or
lcall
xchg
inc
jnp
sbb
sub
loope
minps
pop
push
out
bound
lea
fdivl
xlat
mov
push
xor
inc
pop
or
sbbl
xchg
aam
popa
and
push
popf
pop
mov
fucom
loope
rcl
inc
cmp
ja
jo
daa
shll
jne
outsb
sub
outsl
inc
cltd
inc
int
popl
or
adc
fisubrl
loope
ret
sbb
push
mov
push
mov
movl
mov
mov
mov
movl
movl
cmp
jne
xor
jmp
lret
rcl
xlat
fxch
fsts
inc
in
adc
push
jle
js
cmp
test
mov
add
in
scas
and
mov
out
cmp
jne
mov
or
rorl
insl
js
xchg
push
enter
mov
mov
sbb
push
fcomi
gs
cwtl
push
int
lods
mov
jp
and
mov
mov
adc
leave
insb
inc
stos
hlt
adc
cltd
adc
arpl
xchg
xor
add
hlt
leave
jmp
dec
xchg
mov
out
mov
ret
add
aad
adc
mov
int3
dec
bound
stc
cwtl
jge
push
bound
lds
push
ret
not
jo
push
sub
fcomi
mov
shll
out
fbstp
test
sti
imul
movsl
out
stos
jecxz
inc
inc
test
gs
subb
or
stc
bound
sti
adc
jg
mov
adc
mov
xor
repz
add
mov
push
loop
testl
pop
push
jne
fsts
cmovs
cmp
das
cltd
or
mov
sub
mov
mov
dec
test
mov
pop
mov
pop
data16
in
mov
xchg
or
outsb
dec
imul
in
sub
lahf
pop
adc
fs
add
hlt
or
xor
xchg
xchg
mov
fmul
push
inc
sarb
jg
ficoms
fcmovu
or
std
adc
ret
or
shrl
pop
pop
inc
jmp
ljmp
push
es
int
push
lcall
mov
mov
lods
nop
sub
adc
lret
out
mov
jno
cmp
test
xor
outsl
jns
stos
sbb
aad
xchg
orb
loop
cmp
ds
js
pop
ja
mov
cwtl
or
or
jne
repz
adc
mov
or
cwtd
sarb
je
es
or
mov
lcall
rcr
sub
fnstsw
aaa
or
aam
fimull
sub
mov
cmpb
lock
mov
mov
fsubrl
mov
and
and
xchg
xor
sbb
call
pop
js
mov
mov
jecxz
bnd
filds
jnp
test
mov
cpuid
ret
xor
lods
fidivs
dec
popf
lahf
adc
sahf
dec
gs
test
jp
push
lods
jb
imul
push
fimuls
aam
test
ljmp
popa
mov
inc
test
and
and
out
cmp
sbbl
mov
xor
and
mov
add
neg
mov
orl
movzwl
sbbl
not
xorl
and
jmp
ret
int3
leave
rcr
sahf
inc
imul
hlt
js
push
jle
js
popf
fisubs
lea
xchg
lods
popf
inc
push
and
sub
sbb
and
cli
sub
js
mov
adcb
pop
cli
ret
stc
jle
cmp
in
adc
mov
mulb
xor
mov
pop
in
pop
jge
je
aad
ficomps
divl
push
and
lods
push
std
adc
mov
inc
and
xlat
sbb
outsb
mov
imul
jmp
lea
or
insb
pop
jbe
jnp
outsl
sub
cld
lret
into
inc
cld
cmp
ds
in
or
jle
stos
andb
cmpsl
push
sar
fldl
and
mov
push
ljmp
ret
loopne
and
movsb
sbb
scas
cs
push
ja
push
ret
adc
lret
push
jmp
adc
lods
mov
and
dec
imul
aam
imul
push
xchg
push
cmp
data16
js
sbb
adc
mov
mov
and
dec
mov
add
addr16
pop
lods
daa
fs
add
adc
adc
repz
test
stos
inc
push
adc
jg
adc
push
lds
pop
xorl
loope
pop
adc
and
xor
out
pop
adcl
arpl
or
jbe
std
mov
icebp
cld
call
outsl
into
cmp
adcb
in
arpl
cltd
mov
add
adc
add
jl
aas
dec
stos
xor
loop
sahf
scas
js
fmull
cmp
jmp
stos
add
jge
cmpsb
dec
arpl
mov
lods
out
cmpsb
stos
out
negb
int3
ds
into
xor
dec
daa
ds
push
out
nop
and
ret
push
mov
ljmp
mov
rolb
sub
push
mov
add
ja
push
jnp
sti
fildll
rcrb
xor
hlt
mov
dec
xchg
mov
outsb
ss
arpl
mov
pop
push
push
xor
rcr
es
jbe
pop
mov
sbbb
cs
push
jb
push
push
stc
pop
push
dec
fisubl
popa
into
mov
dec
ljmp
lcall
jle
frstor
or
jecxz
roll
mov
lret
jnp
mov
lock
cmp
push
imul
clc
aad
sbb
popf
wrmsr
enter
jo
mov
in
pop
push
xchg
pushf
mov
mov
jmp
xorl
mov
pushl
call
test
je
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
mov
sub
xor
movl
mov
xor
or
sub
imul
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
add
jmp
cmp
ret
ror
into
jge
enter
or
je
js
mov
sub
or
dec
sbb
pop
adc
enter
mov
daa
leave
les
xlat
mov
add
xchg
sbb
pop
imul
enter
xor
xchg
bound
insb
mov
cltd
xchg
leave
xor
mov
nop
cmp
jnp
lss
cmp
clc
mov
rclb
loope
hlt
loope
lods
pop
dec
jo
pop
xchg
mov
jnp
mov
dec
sbb
fwait
in
aam
stos
lcall
push
cmp
lods
add
call
mov
lret
sbb
call
test
push
out
inc
rorl
dec
sbbb
xor
push
leave
mov
ss
repz
sahf
or
cmp
jns
sub
arpl
mov
jo
dec
sub
imul
sub
lcall
in
shll
or
sbb
add
pop
outsl
rol
push
stc
in
jne
clc
lds
or
lahf
adc
inc
and
mov
push
mov
sti
and
add
fcmovu
push
dec
push
jecxz
hlt
fprem1
cmp
pop
clc
and
mov
mov
and
jae
xadd
fnsave
add
dec
or
adc
xor
sbb
mov
sbb
inc
push
stos
enter
add
orl
lods
test
push
dec
je
mov
and
aas
shll
lret
lods
mov
fisttpll
test
jno
xor
int
add
adcl
jne
mov
dec
data16
sbb
loop
cmc
ljmp
or
mov
insl
mov
adc
mov
dec
pop
pop
push
xchg
and
xor
push
cmpsb
int
ds
mov
inc
xchg
fs
inc
fcoml
sbb
lea
mov
jne
mov
sub
in
and
fiadds
push
mov
cmpb
call
jnp
xchg
enter
xor
lds
mov
mov
cltd
push
push
mov
ucomiss
icebp
sbb
jp
mov
mov
out
or
or
cltd
fs
orl
ret
repnz
jecxz
cwtl
xor
ja
jp
pop
inc
adc
lret
xchg
pop
push
icebp
xlat
jmp
fmuls
data16
lret
jno
jne
sarl
sbb
movsb
lock
mov
xchg
and
jmp
lcall
test
fmull
ljmp
sub
mov
or
xchg
icebp
arpl
jno
nop
cltd
lock
xchg
leave
das
cmp
jmp
subl
jbe
lea
andl
mov
subl
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
lea
mov
mov
sub
and
mov
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
push
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
mov
jmp
ror
int
dec
xor
sbbl
je
js
clc
adc
sub
decb
repz
add
rol
mov
and
mov
sbb
imul
adc
scas
fs
and
jmp
and
and
cmp
push
sbb
push
add
es
push
scas
mov
imul
scas
xchg
xlat
xchg
fwait
jnp
pop
int3
cld
inc
push
cli
ja
stos
mov
out
imul
jmp
cs
mov
and
stc
mov
lahf
js
lret
sub
push
mov
xchg
cmp
test
xchg
push
sub
dec
nop
imul
push
call
pop
stos
mov
cmp
int
adc
adc
or
or
push
mov
pop
je
pop
mov
loop
push
test
dec
push
sbb
data16
adc
test
jo
xchg
push
in
sub
or
push
dec
mov
dec
call
push
rcr
jne
xor
fsubrl
mov
mov
add
stos
mov
insb
outsl
ret
inc
cli
imul
out
inc
aas
out
lcall
out
jecxz
cmpb
xor
mov
stos
sub
imul
add
rcl
clc
lret
mov
stos
or
and
out
inc
fnstcw
pusha
jne
mov
cld
test
cmp
mov
or
push
add
jno
mov
jb
sbb
xchg
mov
cmp
cli
adc
jne
pop
add
and
jge
xor
mov
loopne
in
fdivp
push
add
in
aad
sbb
filds
and
or
push
inc
test
cmp
lret
sub
or
ja
sub
inc
jo
pusha
inc
pop
imul
lret
fsts
pushf
fadds
pop
xchg
mov
je
hlt
xor
jns
adc
dec
pop
cmp
mov
cmp
cmp
sub
jecxz
fbstp
xchg
push
mov
adc
fwait
sbb
pop
jle
xor
sub
adc
nop
lods
add
out
cmpsl
or
mov
sar
enter
xchg
sbb
fcomps
andb
out
adc
fsubs
cmpsl
lahf
les
pop
arpl
in
inc
mov
and
or
push
out
cltd
inc
pusha
rcrl
cwtl
add
xor
mov
push
mov
movsb
mov
xor
xchg
or
xchg
push
mov
or
shlb
sub
jb
scas
sub
push
dec
dec
inc
loopne
cmp
jb
sbb
dec
int3
inc
adc
shlb
imul
mov
mov
mov
xor
mov
jmp
xlat
rcl
aad
vmovapd
das
fiaddl
js
les
fisttps
and
lods
imul
repz
subb
cltd
flds
mov
pop
dec
movsb
and
outsb
mov
mov
adc
mov
repnz
test
js
rcr
xor
cs
sbb
movsb
stos
arpl
aad
and
div
mov
test
push
mov
pop
adc
mov
jb
je
test
cld
pop
movsl
scas
aad
aam
xchg
or
les
mov
inc
push
arpl
push
nop
jp
sti
cmc
js
mov
data16
in
lea
mov
clc
adc
push
sub
sub
imul
daa
xor
dec
jmp
je
test
js
std
mov
cmpb
les
and
or
es
xchg
dec
xor
call
and
lods
stos
and
mov
rcll
jp
inc
jl
out
clc
movsb
jg
addl
mov
inc
daa
stos
popa
jns
dec
addr16
cmp
ss
in
repz
outsb
dec
pop
sbb
addr16
lret
adc
ds
ret
sbb
pop
int
loopne
mov
cwtl
mov
mov
aad
insb
repnz
sbb
in
sahf
jp
dec
sbb
adc
inc
insl
sub
xchg
sbb
add
rcrb
mov
or
cmp
movsb
daa
lods
jg
sbb
pop
inc
lahf
incl
mov
inc
mov
les
lret
and
repnz
mov
push
fimuls
rclb
push
js
fidivrs
das
mov
mov
movsl
fsubrl
pop
and
andl
mov
aad
movsb
mov
mov
pop
dec
fiadds
xor
add
lret
jnp
ss
roll
sub
cmp
aas
imul
dec
jge
cmpsb
dec
pop
aas
push
mov
inc
sub
jge
push
lea
aam
jl
bnd
xchg
nop
test
jne
inc
ljmp
xchg
hlt
pop
sbb
hlt
ljmp
xchg
cmp
add
aas
mov
popf
inc
pop
test
mov
into
pop
cli
rclb
jbe
loopne
std
shlb
adc
sbb
fistpl
and
es
in
inc
lds
rorb
int
cmpb
mov
inc
std
push
mov
ja
inc
xchg
or
das
ljmp
ja
mov
andb
cwtl
xchg
lret
or
dec
cmp
daa
js
lods
jb
xchg
cmp
ss
cmpsl
dec
enter
les
pop
cmpsl
push
push
les
xor
xor
add
add
div
mov
movl
cmp
je
movl
lea
mov
mov
jmp
aas
aas
iret
iret
xlat
xlat
fists
push
pcmpgtb
and
js
jle
js
sbb
mov
add
mov
gs
adc
cld
mov
in
sti
lods
sub
mov
and
clc
std
les
inc
pop
lahf
lahf
or
movsl
aam
sahf
xchg
and
call
sbb
xchg
add
lds
push
xor
xor
mov
daa
mov
test
mov
in
enter
xor
insl
mov
push
mov
mov
mov
imul
int3
iret
or
jns
mov
lahf
popa
test
lods
mov
outsl
dec
or
sbb
bound
iret
xchg
cmp
arpl
shlb
push
sti
xchg
rcr
or
test
push
inc
mov
adc
sbbl
mov
shrl
das
ss
mov
xchg
fs
ja
xchg
pop
pop
scas
jns
push
imul
fisttps
xchg
push
out
in
addr16
in
xorb
js
sub
mov
mov
mov
lea
enter
adc
nop
ljmp
adc
addl
xor
sub
scas
out
pop
sub
push
and
sbb
ret
cmp
lret
cld
sbb
xor
push
sbb
and
in
dec
test
push
jmp
out
pusha
je
dec
fwait
push
jnp
jmp
test
mov
mov
mov
aaa
iret
imul
mov
js
out
clc
xor
pop
cmp
in
or
je
addr16
test
sub
pop
fnstenv
mov
subb
xor
add
mov
outsl
int
subb
popa
cmpsl
mov
mov
je
aad
pop
xchg
cmp
pop
insl
stos
mov
xchg
pop
push
fldl
leave
aas
xchg
mov
add
cmpsb
pusha
push
push
repnz
or
cmp
mov
cmp
cmp
mov
test
in
jae
pop
repz
imulb
inc
outsl
ret
ljmp
fisubrl
insl
xchg
scas
cmp
repnz
xor
dec
sub
mov
sub
jl
dec
bound
sbb
lret
adc
xchg
mov
and
cs
xchg
pop
xchg
jmp
filds
pop
mov
fistps
repz
sbb
shr
pop
jmp
sub
xchg
cmp
pushf
jns
cmp
push
repnz
sarb
sub
add
clc
sub
rcrl
pop
sub
call
push
push
out
inc
out
cmp
jnp
sbb
popf
mov
imul
mov
mov
jmp
sarl
fcmovne
mov
fsubr
push
data16
rolb
js
lret
push
cmp
pand
roll
push
mov
out
mov
pop
mov
dec
and
sti
test
fs
and
mov
push
mov
push
aam
cmp
inc
and
int
mov
outsl
shlb
dec
pop
dec
or
pop
js
fwait
mov
sub
dec
sbb
or
js
cmpsl
frstor
xchg
mov
addb
adc
icebp
lods
mov
hlt
mov
cmp
mov
pop
and
and
xor
pop
and
insl
dec
dec
jl
mov
adc
mov
ficoms
mov
aam
cmp
fnstsw
mov
ret
sub
pop
nop
push
dec
cmp
inc
jl
int3
lods
rolb
bound
ds
cwtl
aaa
push
xlat
ret
xchg
mov
or
cmp
mov
popa
jo
movb
lods
push
rcrl
jns
cltd
paddd
or
jne
sti
add
push
pop
inc
scas
fdivl
and
xor
sbb
dec
jo
sub
mov
push
xor
rol
or
adc
movsl
push
sbb
in
and
mov
popw
sti
or
in
pop
gs
cmp
add
outsl
sbb
mov
lret
and
fmuls
or
setl
outsb
cmp
jns
out
dec
adc
push
xor
mov
in
push
std
out
xorb
push
cli
adc
scas
push
loop
add
cmpsb
test
add
mov
pop
ljmp
or
repz
push
pop
sub
outsb
mov
push
xor
test
mov
inc
ss
or
mov
sub
and
sub
dec
pop
xlat
sbb
xor
bound
lahf
add
or
cmp
dec
adc
xchg
inc
push
shlb
xchg
ss
sbb
cmp
inc
cld
and
flds
jne
jbe
xchg
push
clc
lock
add
imul
xor
sub
xchg
fisttps
or
push
pop
xlat
push
imul
cmp
sbb
outsl
or
sub
or
rcll
push
adc
jmp
sub
mov
rol
xorl
mov
mov
mov
pop
ljmp
sub
call
add
mov
lea
cmp
xchg
icebp
outsb
daa
andl
repnz
pop
mov
sub
add
test
jmp
sbb
loope
adc
ljmp
jmp
rol
leave
fcmove
rcl
pop
mov
leave
jge
mov
je
js
das
inc
xchg
int3
cltd
or
aad
outsb
jno
add
jbe
lret
popa
pop
shl
stos
mov
jmp
mov
hlt
sub
lret
xor
dec
jb
ja
outsl
movsb
orb
mov
fs
sbb
insb
mov
in
lret
adc
adc
in
add
fidivs
iret
hlt
pop
mulb
jnp
cmp
mov
into
jne
fdivr
mov
aad
cltd
inc
bswap
lahf
cmpsb
out
shrb
push
addb
out
mov
or
or
dec
repnz
lods
out
popf
mov
lods
test
mov
pop
in
pop
or
cmpl
aas
adc
or
movsl
xchg
mov
mov
mov
inc
push
mov
pop
rolb
xor
add
repz
or
mov
mov
decb
lcall
in
in
std
jmp
xchg
daa
movsl
mull
jnp
idivl
mov
popa
mov
mov
mov
cmpsl
popa
sub
hlt
fmuls
daa
aad
les
cmpsl
xor
les
daa
les
xchg
fnstenv
sbb
sbb
add
and
jne
dec
in
and
jnp
ljmp
mov
loope
paddq
in
jmp
sbb
cld
push
mov
xor
in
jp
cltd
jl
mov
xor
or
mov
mov
lcall
notl
pop
push
pop
push
mov
jg
iret
lods
mov
mov
sbb
shll
cli
sub
mov
int
and
mov
popa
xor
push
sbb
push
push
fwait
ja
push
insl
in
and
push
lcall
ficompl
xchg
ficoml
popa
mov
cs
mov
dec
into
xchg
mull
int
shrb
pop
xor
jo
popa
push
fwait
mov
out
scas
scas
adc
mov
sbbl
xchg
cmpsl
xchg
jmp
leave
imul
bound
add
xchg
dec
mov
test
mov
sub
xor
popf
push
pop
jne
and
mov
cmp
nop
dec
outsl
adcb
cs
jae
inc
xchg
inc
pop
pushf
push
test
push
push
cmp
sbb
jg
pop
or
gs
cmp
std
insb
push
cwtl
jecxz
into
lret
inc
adc
je
dec
ds
rolb
jno
sbb
cmp
and
mov
lret
inc
or
xor
mov
arpl
mov
jmp
out
push
inc
arpl
fdivl
adc
jbe
repz
pop
adcl
fs
aas
sbb
adc
xchg
pop
push
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
jmp
leave
xlat
ret
rcl
leave
fldcw
push
fisttps
js
je
js
sbb
sub
or
lret
cltd
test
aad
cld
push
sbb
or
mov
add
lods
cs
adc
pop
pop
add
sbb
test
andl
inc
cmp
mov
xchg
shll
lds
push
adc
mov
xchg
xlat
inc
sarl
cmp
enter
push
and
inc
sub
cs
into
xlat
lahf
sbb
lods
jmp
loope
imul
dec
fisubl
or
cltd
sbb
jnp
popa
repz
aas
push
jl
mov
iret
jmp
mov
mov
sub
test
aaa
cmp
push
insl
rol
add
xor
cmpb
pop
insl
rclb
mov
pop
arpl
mov
push
cmp
mov
lock
jp
inc
flds
and
ds
mov
stos
mov
fwait
sbb
daa
cs
adc
cmp
dec
js
mov
mov
xor
jne
adc
fldl
and
sub
sti
out
jo
xor
rorb
std
xchg
aas
xor
ret
mov
rorl
mov
je
mov
jnp
loop
mov
jb
aas
lret
lcall
in
and
jge
mov
loope
lods
sarb
and
lahf
add
push
mov
sbb
aam
aaa
test
cmc
adc
xchg
dec
dec
out
cmp
cmc
test
add
or
cltd
add
bound
cmpsb
push
mov
cmp
out
push
lods
and
sub
xchg
int
mov
mov
pop
and
cmp
ja
fistpl
lret
dec
ret
popf
je
dec
inc
ds
cmpsl
lods
mov
in
mov
subl
das
outsb
mov
icebp
and
hlt
adc
pushf
insl
insl
inc
int3
xor
ss
sti
xchg
scas
insl
add
and
xchg
pusha
fistpl
nop
repnz
jb
lods
lret
adc
outsb
roll
iret
xor
cmp
cmp
jae
xor
ret
and
repnz
icebp
sbb
add
mov
notb
pop
insl
xor
mov
xor
jnp
push
cmc
mov
push
mov
pextrw
cmp
pop
inc
or
dec
sub
adc
sbb
subb
inc
dec
pop
sub
push
movsb
test
jge
sar
jno
les
sub
adc
lods
je
add
push
sub
inc
dec
jbe
movsb
insl
fs
jmp
adc
cmp
jnp
test
add
add
sbbb
jmp
into
aas
ds
rcl
add
stos
shrl
add
mov
je
js
test
ficoms
inc
jb
xchg
repz
aam
adc
dec
dec
bound
ret
outsl
jmp
in
subb
fdivrl
inc
adc
sub
mov
add
xor
stos
loope
pandn
jae
and
ret
in
sahf
out
cld
or
sbb
loop
sub
push
rcr
sbb
fincstp
mov
add
bound
and
test
mov
add
andl
pusha
in
xchg
ret
std
les
sbb
cmp
negl
cmp
bsf
push
push
fcomip
arpl
loope
mov
fsubrl
or
adc
movsb
cwtl
adc
movsb
cmp
scas
sub
or
movsl
push
in
mov
lret
les
mov
pop
out
sbb
int
stc
cmpsl
in
or
test
js
pusha
push
or
or
xor
outsl
xor
push
fisttpll
outsb
idivl
mov
and
rcr
jmp
testb
adc
out
mov
in
jae
pusha
clc
sti
mov
mov
jg
sbb
push
mov
les
adc
xor
test
cmp
inc
and
insl
aas
shrl
fisubrs
lret
add
dec
xor
ror
lcall
test
cld
inc
xlat
mov
xchg
cs
mov
stc
mov
push
cmpsl
rcrl
out
inc
inc
lods
lods
aaa
or
cmp
outsb
xchg
pop
adc
orl
inc
push
pop
fildll
repz
push
in
jg
push
push
dec
insb
out
mov
push
pop
sbb
jb
hlt
pop
dec
adc
xor
sbb
daa
mov
jmp
pop
sub
pop
or
xchg
cli
or
mov
int
mov
fsubs
adc
sub
dec
jnp
les
mov
outsb
sbb
nop
or
rcrb
lahf
and
pop
movsl
rcrb
inc
ret
mov
cwtl
aad
cs
sub
daa
and
xorl
mov
aas
jnp,pn
dec
xlat
mov
push
in
sub
notb
pcmpgtd
push
pop
sbb
test
lock
fbstp
inc
stos
popa
xor
or
sbb
out
dec
test
in
fs
cmpb
or
sub
adc
pop
sub
stos
mov
dec
pop
movsb
or
je
inc
xor
mov
sbb
outsb
pop
test
inc
movsb
jae
dec
js
lock
pop
push
push
lods
movb
cmp
mov
jp
fisubl
lret
xlat
in
adc
lea
mov
fcompp
lea
mov
jg
cmpsb
or
add
push
mov
mov
or
cmp
je
mov
xorl
jmp
mov
jmp
ds
ror
rcl
fisubrl
xchg
jge
stos
pushf
sbb
xchg
js
je
js
cmp
pop
lock
rclb
xchg
xchg
jle
aad
xor
or
pop
fwait
iret
xor
cmc
daa
int3
jmp
add
in
aad
dec
xchg
xorl
rorb
mov
or
or
imul
fsubs
popa
cltd
mov
xchg
inc
xchg
inc
in
fmull
stos
add
daa
std
loop
mov
xor
js
in
in
lcall
push
pop
add
nop
iret
pusha
add
movsb
pop
sbb
fs
pop
sub
cs
js
pop
fsubs
dec
sbb
lods
fiaddl
push
aaa
xlat
pop
or
mov
in
pop
cmp
shll
nop
lock
imulb
shll
std
xor
rorb
mov
fiadds
loopne
je
mov
pop
cmp
mov
sbb
cmp
testl
mov
jge
std
sbb
or
or
ret
roll
or
movsb
jp
loope
fucomp
dec
fldl
cmpsb
push
pop
cmpsb
push
pop
and
andl
cld
loop
pop
mov
jnp
pushf
pushf
add
jnp
add
rolb
adc
fmulp
insl
jge
das
jle
dec
jnp
and
jp
mov
popa
lahf
mov
cld
int
cwtl
stc
pop
or
jecxz
sub
loope
aaa
cmp
and
insb
add
lock
dec
cmpb
pop
shrb
jne
mov
jo
add
push
fdivs
mov
jns
pop
jle
in
dec
ficomps
jecxz
or
push
decl
imul
or
dec
or
testl
rol
leave
data16
pop
jmp
lahf
scas
outsb
inc
je
or
mov
scas
popa
dec
pop
cmpb
sub
mov
iret
insl
icebp
jae
fstps
sbb
mov
sub
jne
dec
inc
and
lret
mov
cmc
popa
pop
outsl
ret
ret
or
pop
xchg
adc
cmp
or
lret
mov
adc
addr16
cmc
jbe
addb
xchg
adc
jb
scas
push
orl
jno
rep
push
inc
pop
into
in
dec
inc
fsubr
add
sub
pop
xchg
dec
pop
stos
dec
xchg
dec
pop
in
pop
mov
lret
xor
es
int3
in
push
and
cmpsl
sub
dec
mov
loopne
addb
call
jmp
pop
pop
mov
cmpsl
cmp
int
inc
decb
movsb
movsl
mov
out
xor
lods
sbb
test
mov
pop
xchg
xchg
cmpsb
cmp
loopne
xchg
dec
xlat
sub
mull
icebp
mov
push
cmpsl
rorl
mov
add
ret
cmp
add
ret
pop
je
mov
xor
add
mov
jmp
int3
into
lret
ror
ficoml
cmc
pop
xchg
xchg
ds
js
je
js
adc
jmp
pop
mov
xor
jge
xchg
pop
jne
inc
pop
adc
mov
sbb
sarl
xor
mov
mov
jp
scas
dec
hlt
dec
repnz
or
movsl
nop
jmp
mov
addr16
ja
mov
inc
push
adc
and
sbb
mov
gs
mov
cmpsl
fwait
test
fbld
iret
mov
stos
out
or
int
out
push
addr16
xchg
xchg
xor
lock
icebp
or
mov
sbb
test
lcall
and
mov
leave
cmp
bound
pop
jg
dec
bound
xor
das
push
xchg
arpl
dec
add
lods
testl
xchg
mov
data16
imul
sub
daa
dec
outsl
mov
jmp
aas
jb
lret
cli
clc
sti
sub
cld
dec
xlat
and
mov
repz
push
xchg
ss
lcall
mov
dec
std
inc
mulb
xor
test
add
and
stc
jnp
int
cmpsl
into
cld
sarl
inc
fcomip
int3
push
inc
aaa
orb
inc
scas
sbb
mov
pop
mov
mov
push
or
stos
aam
out
sarb
jnp
inc
push
add
test
inc
adc
sbb
lea
dec
test
jmp
xor
push
inc
mov
sub
incl
xor
fdivrl
out
enter
cmp
sbb
dec
hlt
mov
and
out
mov
imul
sub
xlat
sahf
mov
xor
inc
cmp
fdiv
popa
ret
or
je
ds
jp
jl
mov
adc
mov
movsl
xchg
push
sub
lods
inc
sbbl
sub
ret
xor
pop
inc
outsb
xor
cli
enter
movsl
pop
sub
jno
fcomip
leave
jne
cltd
xor
aad
out
adc
dec
add
adc
lods
negb
js
lock
enter
movsb
lret
lock
sbb
and
mov
cmp
loope
mov
cmp
push
push
or
or
cmpsl
in
inc
and
div
and
call
stos
cmp
incb
test
push
std
pop
out
adc
mov
mov
dec
mov
rolb
leave
aas
cmp
jg
push
sub
and
out
lret
iret
or
popf
jns
or
xchg
insb
lock
mov
out
adc
adc
repz
xor
add
pop
lret
les
lea
cmp
in
mov
mov
mov
jmp
xlat
cmp
ds
js
adc
or
je
js
dec
mov
negb
pop
or
xchg
ljmp
inc
aaa
jne
fadds
mov
cs
cmovbe
or
js
in
xor
mov
sti
insb
adc
add
outsl
out
shll
jb
dec
aaa
dec
lcall
adc
dec
cmp
addr16
imul
cmp
cli
push
lahf
or
mov
adc
ds
movsb
mov
lods
hlt
pop
xchg
enter
inc
mov
cltd
in
repz
fcmovnb
or
mov
rcrb
movsb
xchg
test
add
xorl
push
clc
push
xor
pop
stc
add
xchg
cli
ja
pushf
pop
dec
xchg
sbb
mov
sub
shlb
gs
mov
xchg
lahf
add
scas
or
jb
mov
sarb
pop
mov
xchg
pop
cmc
stos
xor
addl
cltd
sbb
cmp
cmp
xlat
xchg
in
jns
push
xchg
ret
mov
xor
ds
lds
push
dec
out
enter
test
outsb
rcr
cmp
mov
add
cmpsb
xchg
jecxz
es
pusha
or
mov
adc
or
je
imul
sbb
xor
fimull
outsl
pop
and
out
lods
and
femms
mov
xchg
testl
je
or
scas
int3
cmp
ret
js
std
clc
iret
push
pop
sub
cmpb
jbe
daa
ret
dec
cmp
mov
sub
std
dec
fdivs
pusha
sbb
insl
sub
in
dec
cli
dec
fists
sub
or
dec
fwait
mov
sbbl
cli
aad
shl
push
mov
and
push
inc
add
dec
inc
scas
cmp
and
dec
into
popa
inc
fidivrs
cmp
rcr
push
cmp
inc
loop
mov
mov
call
pop
push
cmp
sbb
das
repnz
adc
iret
imul
movsb
lds
dec
add
sub
cmpsl
cs
cwtl
addl
mov
leave
sub
mov
mov
shrl
mov
xorb
or
jns
in
repz
clc
rol
es
push
clc
fdivl
jg
ljmp
push
test
pop
fsts
aaa
daa
adc
fstps
repz
push
adc
inc
test
xchg
call
sbb
and
lahf
in
movsl
and
inc
push
rolb
js
imul
pop
loopne
cmp
out
iret
or
pushf
sbb
sbb
adc
sbb
push
inc
orl
xor
mov
push
fwait
sub
xor
add
movzwl
mov
xor
lea
add
jmp
cmp
fcmove
std
sub
js
jle
js
incl
fs
in
mov
repz
je
pop
test
std
insl
jecxz
add
fs
sbbb
call
jp
xchg
add
xor
jl
int3
fldt
test
pop
ljmp
mov
sti
scas
jmp
shrl
mov
gs
scas
xor
mov
push
adc
inc
leave
data16
mov
lret
xchg
xchg
daa
push
inc
loopne
jle
scas
movb
sbb
lods
dec
mov
das
bound
out
insb
adc
mov
adc
ljmp
and
mov
or
dec
cmp
lret
mov
pop
mov
jnp
iret
mull
ret
mov
xchg
lret
ret
xor
jae
in
mov
pop
fisubrl
jmp
and
incl
add
dec
pop
sub
and
cmp
mov
jle
sarl
scas
xor
or
sti
add
ja
jne
dec
nop
loopne
sbb
jge
xchg
packuswb
mov
stos
aad
adc
inc
pop
scas
ljmp
lahf
shrb
shr
add
pop
in
cmp
hlt
lock
sbb
push
rolb
inc
xchg
aad
mov
flds
xchg
pusha
jno
lds
fstl
mov
in
shll
add
and
pop
and
dec
lcall
sbb
xchg
nop
out
cld
fidivl
outsb
popa
xor
cltd
xchg
fadds
jmp
gs
jmp
jle
insl
and
jp
add
push
movq
xchg
rol
mov
stos
mov
dec
fs
test
sub
lahf
push
test
rcrb
in
push
cmp
mov
pop
insl
test
shlb
mov
arpl
mov
xchg
shll
mov
jb
popf
xchg
out
inc
sub
sbb
notl
gs
sbb
mov
aaa
jbe
lds
pop
sbb
dec
xchg
cli
mov
pushf
subl
and
mov
neg
leave
mov
jne
les
inc
sub
pop
xlat
dec
out
and
cwtl
rol
stos
mov
pushf
daa
shlb
push
ljmp
jnp
cli
or
lahf
cmpsb
nop
mov
inc
cmpsb
mov
mov
cld
stos
xchg
or
insb
inc
ss
jg
popf
test
or
push
in
dec
cli
sub
dec
sti
jmp
leave
loop
imul
cld
fwait
nop
je
mov
ret
lret
inc
inc
nop
movl
movsb
push
adc
and
clc
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
jmp
rol
leave
rcr
mov
jmp
pop
xor
js
cmpsb
scas
mov
mov
mov
push
js
cmpsl
leave
jnp
cli
es
mov
lds
mov
movsl
sar
insl
es
stc
sub
dec
lcall
push
inc
mov
push
loopne
lock
repnz
push
mov
cs
clc
stos
jno
adc
test
fisttpl
jge
dec
cmp
or
sbb
mov
int
std
jecxz
cmp
xchg
out
and
loop
dec
or
xlat
daa
mov
mov
std
js
data16
mov
loope
jecxz
fnstsw
or
sub
inc
sbb
dec
outsl
inc
popf
xlat
mov
xor
adc
sub
lahf
inc
dec
pop
lcall
aad
les
mov
mov
lahf
sbb
loope
imul
cmc
call
bnd
cmp
jbe
dec
ficompl
add
add
dec
insl
cld
out
aas
fisttpll
insb
lret
dec
xchg
cwtl
lahf
repnz
mov
cmpsb
jmp
cmp
int3
in
xchg
push
xchg
push
into
ja
rcrl
pop
inc
js
push
add
aaa
fcomp
out
mov
inc
mov
jo
push
repz
jmp
cs
sbb
mov
movsb
rclb
pop
jns
daa
pop
cmp
xor
push
daa
mov
push
mov
mov
add
pop
test
cmp
pop
arpl
push
xchg
inc
xchg
cmpl
mov
outsl
aad
add
out
jo
lock
mov
or
jecxz
push
loope
and
jecxz
lods
pop
insb
sbb
ret
push
clc
or
repnz
mov
mov
fldl
arpl
adc
js
and
jo
in
fwait
out
dec
push
adc
pop
sub
mov
add
mov
test
xchg
in
pop
ror
cmp
jo
stos
pop
dec
push
xchg
inc
mov
mov
jge
cmp
push
lea
jg
pop
adc
pop
lret
and
test
jg
iret
int3
push
aaa
pop
cmp
addb
xchg
xchg
dec
push
and
add
imul
dec
sbb
lods
jge,pt
sub
xchg
jmp
stos
mov
xorb
les
adc
icebp
mov
cs
mov
mov
loopne
test
lahf
jnp
adc
adc
lret
insb
push
mov
adc
leave
fwait
test
push
mov
push
ds
jl
mov
outsb
clc
movsb
cmp
pop
out
or
add
sub
or
xlat
add
int3
jp
and
popl
mov
cmp
adc
add
rol
ror
aad
xchg
mov
aad
incb
mov
js
jmp
xor
mov
in
mov
push
loope
push
out
inc
or
xor
in
pop
and
pop
adc
or
jbe
arpl
es
in
lret
leave
fldl
fcmovb
test
xchg
jae
stos
dec
loope
es
push
in
cmp
pop
or
das
in
pop
mov
and
inc
mov
cmp
ss
fnsave
movl
sub
cld
dec
xchg
pop
cmp
rolb
push
push
inc
xchg
and
sbb
pushf
lock
shll
aaa
jle
shlb
int3
dec
dec
shll
pop
loop
sbb
addb
mov
in
dec
divl
mov
into
leave
in
mov
rcrb
xlat
int3
mov
inc
les
sub
mov
mov
aas
std
stc
add
cmp
jo
ja
nop
jo
loopne
inc
icebp
xchg
sti
push
mov
repz
pop
or
enter
sbb
and
in
dec
dec
jg
dec
lods
lahf
sub
jp
and
test
rcl
xlat
dec
out
inc
repz
mov
mov
hlt
rclb
jo
mov
lret
mov
testb
loope
mov
hlt
pop
mov
jb
xchg
xchg
insb
scas
xor
push
and
push
adc
jecxz
or
cmc
test
cmp
push
movsl
jl
cmp
mov
mov
xchg
sbb
pop
mov
sbb
cmp
and
xchg
sbb
xchg
inc
std
insb
dec
movb
sub
ficompl
jb
dec
add
xchg
icebp
outsl
popa
xor
cmp
mov
xchg
or
sub
mov
lock
lea
or
xchg
int
hlt
je
ror
movsl
inc
std
mov
mov
cmp
inc
sub
repz
aad
jecxz
add
push
loope
pushf
jl
mov
mov
pushf
pop
ret
jmp
jmp
push
jbe
dec
cwtl
add
push
mov
jae
fcomps
mov
notl
push
mov
icebp
pop
push
pop
ret
ds
orb
cs
mov
bound
push
add
shll
stos
adc
pop
shll
pusha
lcall
xchg
mov
pop
ret
cmpsb
je
ret
je
pusha
inc
mov
push
loope
out
adc
push
push
fisttpll
dec
xor
call
mov
xchg
cmpsb
repz
insb
xchg
cmc
lods
inc
jae
nopl
cmp
ljmp
addr16
lret
jmp
xor
xor
loope
mov
clc
testb
jle
je
mov
jmp
push
mov
sub
sbbl
mov
xorl
jmp
ror
mov
fcmovbe
push
aad
push
jns
shrb
cmpsl
js
xor
push
mov
cmp
sbb
negl
in
out
mov
aas
cli
jle
fcomip
lret
into
cmpsb
sti
cli
popf
outsb
lret
pushf
dec
cli
adc
jnp
sbb
mov
out
jl
dec
push
adc
lock
adc
push
xor
dec
ja
mov
ds
push
dec
repz
arpl
aas
mov
mov
push
add
jp
sbb
in
cmp
lcall
mov
nop
mov
enter
sbb
xchg
sbb
pop
imul
ret
sbb
pop
add
cmc
repnz
push
jp
pop
sub
das
fadds
and
adc
push
xchg
mov
popa
cmp
bound
sub
jge
and
pushl
or
mov
lcall
xlat
bound
in
or
sahf
mov
and
aas
aad
cmp
fisttps
cmp
lods
jnp
rol
ja
pop
shll
add
push
cmp
sti
mov
jle
or
jge
daa
or
shll
xor
mov
jge
mov
jae
adc
xor
iret
ret
xor
add
sbb
fadd
sti
inc
adc
jb
sub
add
inc
push
push
and
int
sub
adc
xchg
sbb
inc
sub
sbb
es
and
movsl
push
xchg
pop
ljmp
jg
icebp
fildll
and
leave
sbb
cltd
cmp
rcr
xchg
int
insl
sbb
cmp
orb
push
push
test
xor
arpl
cmp
shlb
mov
push
call
jae
push
sub
pop
stos
enter
xlat
pop
sub
cltd
je
mov
mov
rorb
data16
jmp
push
jmp
adc
xchg
data16
stc
arpl
fsubs
or
cmp
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
movzwl
xor
mov
xor
or
mov
adcl
add
subl
push
mov
adcl
mov
negl
xor
jmp
int
iret
lret
and
push
pusha
popf
dec
xor
js
jle
js
xchg
rcrl
sbb
insl
dec
fildll
adc
sbb
nop
xor
nop
outsl
mov
cmp
ret
enter
testl
adc
int
shl
arpl
mov
jo
and
std
inc
insb
sbb
mov
xor
xor
pop
mov
iret
mov
sub
aad
nop/reserved
inc
insb
gs
test
das
in
push
dec
stc
mov
repz
enter
mov
xchg
mov
pop
andb
xchg
pusha
jae
cmp
fnstcw
sbb
lea
nop
pop
xchg
cltd
outsb
mov
outsb
aam
pushf
mov
hlt
jmp
leave
nop
mov
jne
daa
xchg
leave
fisttpl
cmpsb
movl
push
fmul
clc
cltd
dec
mov
xlat
sbb
cmp
push
fcoml
dec
aaa
mov
shrl
sbb
xchg
decl
add
pop
pop
inc
inc
or
add
push
jge
icebp
call
stos
test
int
fbld
cld
pusha
jl
dec
les
and
sbb
movsl
cwtl
test
adc
push
pop
mov
mov
ss
fst
imul
push
push
mov
shll
iret
sbb
cmc
push
fs
fs
jno
cmp
idiv
cmpsl
es
dec
add
arpl
insb
and
and
xor
mov
int3
sbb
and
imul
testl
and
sub
sub
inc
iret
push
mov
xor
mov
jge
jno
mov
adc
or
xor
push
pop
cmp
or
aam
push
lock
arpl
jno
xor
xchg
out
je
nop
or
xchg
inc
idivb
jmp
fmul
stc
cmp
push
arpl
outsb
stos
aas
jno
sub
imul
subl
add
sbb
shr
push
call
cs
int3
loopne
push
fsubrs
and
inc
hlt
clc
test
xchg
inc
add
sti
jmp
cmp
jne
mov
mov
mov
mov
mov
movl
mov
mov
movl
jmp
movl
jmp
leave
ret
enter
fld
int
fdiv
mov
stos
js
xor
mov
cmp
jmp
loope
pop
mov
or
mov
sub
mov
aaa
sub
sub
cmpsl
inc
dec
in
inc
dec
mov
loopne
or
lods
test
sbb
imul
xchg
loop
pop
pop
cmp
add
in
and
aam
addr16
and
and
in
xchg
jmp
cmp
test
int3
xor
jge
hlt
std
cmpsl
mov
aaa
jns
jne
jb,pn
std
fldlg2
sti
mov
test
mov
xlat
icebp
hlt
mov
push
adc
stos
mov
or
filds
push
imul
sub
add
add
cltd
lret
mov
jno
in
das
enter
clc
jne
fstl
inc
out
xchg
pop
je
mov
loopne
mov
movsb
aaa
sbb
es
push
inc
cmp
lods
cmp
xchg
adc
movsl
sbb
dec
mov
icebp
enter
test
inc
cmpsb
cmp
aad
mov
into
pop
popa
in
repnz
pop
mov
addr16
movsb
enter
sbb
pop
adc
pusha
shrd
add
ss
jmp
sbb
idivb
pop
lcall
pop
push
xchg
dec
xchg
dec
sub
and
dec
sub
xchg
mov
push
push
xor
xchg
outsb
push
cmp
fstl
jmp
imul
pop
das
lods
aas
nop
add
scas
push
inc
dec
outsl
pusha
andb
insl
mov
push
dec
sbb
cmp
loope
inc
pop
stc
mov
and
negl
test
cmp
mov
and
push
xor
and
jnp
mov
fs
daa
int3
negl
sbb
dec
mov
fsub
xchg
lods
mov
add
loope
loop
add
dec
inc
addr16
pop
enter
sub
pop
lea
mov
mov
bnd
or
adc
fwait
lods
and
inc
mov
inc
into
cmp
adc
mov
push
sbb
jne
lcall
cwtl
popa
test
cmp
movl
jne
and
jmp
int
into
aad
lea
orl
js
jne
fsubrs
adc
cmp
add
xlat
cmpsb
outsl
call
dec
adc
sarb
das
subb
and
loope
mov
sub
dec
fwait
push
call
sbb
mov
jne
in
jle
fs
fstps
jo
and
jge
data16
scas
push
and
dec
insb
push
hlt
aam
data16
xchg
in
shl
fwait
inc
outsl
test
fucomip
cmp
dec
fs
jo
cmpb
push
idivb
mov
in
shl
stc
xchg
call
sub
pushf
outsb
xchg
mov
movsb
imul
cld
jp
sbb
imul
jge
lds
cltd
or
sti
and
xchg
out
into
jnp
aas
sub
inc
stc
cwtl
xchg
jmp
mov
fs
sub
mov
lods
jae
add
fdivrs
dec
pop
bound
lret
jb
sub
test
popa
flds
or
lret
sbb
lods
jl
jge
xchg
jne
gs
addl
loope
adc
adc
mov
and
loop
test
mov
pop
push
mov
int
push
movsb
ficompl
pop
fdivl
arpl
lds
jle
das
cmp
jmp
int
or
bound
fcmovbe
dec
adc
fnstenv
jb
inc
dec
mov
mov
outsl
cmp
repz
mov
es
in
ret
loope
shrb
mov
stc
jl
jge
filds
arpl
fistpll
hlt
xchg
in
xchg
adc
loopne
loopne
iret
push
xchg
aaa
rcl
rorb
decb
mov
arpl
mov
mov
bound
dec
sahf
ucomiss
sub
iret
fsubr
bound
or
out
push
xchg
xchg
push
arpl
xor
push
jb
push
arpl
lahf
push
sub
aam
pop
dec
in
mov
in
jo
imul
aad
mov
iret
outsb
dec
sar
mov
andl
mov
sbb
mov
mov
xorl
sub
orl
push
adcl
mov
jmp
enter
ret
push
in
pop
dec
bound
push
scas
js
xor
sub
adc
jb
mov
idiv
sub
fwait
mov
icebp
xor
jmp
test
mov
rorb
mov
imul
xchg
jo
sub
dec
mov
sub
push
mov
lea
mov
inc
push
int
hlt
mov
push
dec
cli
mov
inc
jp
jbe
fs
jl
std
push
xchg
imul
dec
in
or
dec
xor
pop
mov
sarb
fisubs
aad
insb
cmp
cmp
fs
push
ret
xchg
xchg
mov
and
mov
bound
dec
pop
dec
mov
sub
dec
shlb
test
ret
add
push
inc
mov
outsl
xchg
mov
lock
dec
pop
xor
jno
xchg
or
insl
xor
or
cld
addb
int
jl
imul
adc
pop
imul
faddl
push
mov
cmp
sbb
xor
loopne
xlat
cmp
dec
loope
inc
sub
mov
xchg
cmp
adcl
das
sarl
jb
push
and
ja
mov
les
shl
pop
aad
jge
xchg
addb
inc
lock
leave
push
adc
jp
mov
dec
shl
xlat
mov
or
mov
scas
insb
add
es
push
ficomps
mov
adc
mov
js
pop
sti
xchg
push
arpl
mov
sbb
data16
sub
aas
inc
jl
jg
dec
je
jae
icebp
jb
and
push
rclb
mov
enter
pop
fldcw
cmp
mov
lcall
in
mov
dec
mov
pop
push
and
call
mov
dec
and
mov
dec
sbb
xchg
cmp
imul
ss
ds
sub
cmp
inc
push
push
inc
sub
inc
or
add
add
push
adcl
call
movl
incl
cmpl
movl
jb
movl
jmp
cmp
jne
sbb
movl
mov
mov
mov
mov
movzwl
and
mov
adcl
xor
jmp
rol
leave
leave
leave
leave
rcrb
inc
mov
lods
js
xor
adc
cmc
arpl
les
dec
xchg
aad
scas
stos
sbb
and
sub
cmp
jmp
push
sti
jne
mov
outsb
push
mov
ficoml
pop
sub
xchg
mov
push
ss
dec
jns
fldt
mov
pop
pushf
clc
in
xchg
and
sbb
outsb
push
inc
ret
cwtl
je
and
lret
ret
inc
or
push
push
into
std
int
es
jl
pop
out
sub
sub
stos
xchg
push
out
test
popf
shr
jp
loopne
mov
fsubp
rcpps
sbb
aad
int3
mov
sub
orl
scas
mov
stos
mov
hlt
mov
or
add
test
dec
cs
add
mov
lahf
xorb
mov
pop
adc
or
popa
xor
pop
lahf
movsl
jnp
rcll
mov
jae
xchg
sbb
add
push
dec
pop
or
stc
stc
pop
fs
cmp
xchg
inc
in
pop
mov
hlt
mov
xor
jns
popf
pop
mov
ret
or
imul
fistl
push
cmp
repnz
rep
jge
std
out
aam
int
les
xor
jae
lea
inc
xor
cmpsl
rcl
in
push
xchg
adc
cmpsb
jge
sbb
sahf
je
nop
and
sahf
push
fidivrs
test
adc
pop
xchg
addr16
add
test
sub
in
stos
mov
dec
adc
mov
dec
mov
add
adc
ret
ljmp
sub
dec
aas
pop
push
fsub
subb
fwait
sbb
add
pop
cltd
jb
xchg
in
or
mov
rep
add
idivl
movsb
rorl
xlat
xlat
in
pop
cwtl
or
xchg
bound
mov
test
insb
aam
in
mov
out
push
orb
hlt
lcall
add
gs
stos
incl
stos
pop
in
push
sub
xor
cli
cmpsl
gs
add
mov
notl
lea
mov
mov
xor
add
mov
lea
push
mov
jmp
ds
roll
shlb
and
mov
js
jle
js
cld
sbb
sahf
mov
and
dec
inc
xchg
test
cmp
pop
mov
iret
mov
pop
cmp
xchg
icebp
cmp
enter
push
enter
xchg
negl
push
fwait
gs
jb
jle
aad
in
sbb
xor
outsl
jmp
mov
mov
xchg
inc
jl
pop
adc
jp
mov
push
in
cmpsl
jne
sub
pop
in
je
pop
lahf
push
mov
into
xor
adc
mov
push
and
cmp
mov
insl
outsb
movb
ljmp
or
dec
push
pop
jmp
out
dec
fdivr
jb
in
sarl
add
xor
cmp
add
add
les
cmp
or
testl
push
push
jmp
sub
inc
jl
jmp
out
in
cmp
or
add
pop
fld
pop
mov
lret
cmpb
stc
movsl
xchg
xchg
daa
xlat
cltd
add
cli
mov
arpl
adc
daa
xchg
jle
mov
mov
or
in
xchg
cmp
dec
jo
and
jl
and
jmp
das
or
dec
pop
xchg
push
imulb
mov
fcom
push
pop
ljmp
or
dec
enter
dec
les
out
xor
sbb
imul
outsb
sub
int
mov
sbb
fisttps
mov
nop
sub
sbb
cmp
adc
inc
subl
adc
cli
icebp
jbe
arpl
mov
mov
adc
ds
push
sub
stos
push
push
sbb
nop
and
iret
mov
dec
sbb
loop
dec
xchg
std
test
in
icebp
int
mov
jecxz
int
inc
jbe
xor
xchg
lea
jns
xchg
cmp
popl
int
hlt
xor
sub
lods
movsb
cs
in
insl
or
inc
lds
xor
add
push
jmp
xlat
lret
fcmovu
aas
cmp
push
inc
pop
xchg
jne
mov
js
jle
js
xor
jle
test
pop
fiaddl
addr16
mov
pushf
inc
mov
ja
add
in
loop
addr16
in
add
fimull
rorb
popf
xlat
push
jnp
subb
mov
adc
pop
and
and
lock
rclb
lgdtl
jno
es
xchg
xchg
cmp
mov
ljmp
into
push
dec
das
sahf
out
push
addl
je
mov
fwait
sti
xchg
dec
movsl
pop
call
pop
int
jl
into
popf
xchg
cltd
xor
data16
dec
inc
push
lcall
sub
out
push
test
sbb
test
mov
pushf
mov
mov
adc
loop
mov
sahf
mov
nop
push
sbb
dec
fistl
jmp
xchg
xor
mov
movhps
ret
jo
sti
in
sub
sub
push
adc
aaa
xor
sbb
xchg
inc
popf
xor
fimull
or
movsb
adc
sub
repnz
test
leave
popf
xor
and
scas
sub
fs
add
adc
mov
jnp
mov
popa
sub
pop
sbb
jmp
lahf
mov
mov
outsl
test
pop
and
mov
push
or
lea
mov
or
movsl
out
dec
jnp
or
jbe
adc
insb
cmp
out
test
imul
clc
add
pop
mov
or
jp
and
dec
dec
xchg
xchg
xlat
icebp
jnp
hlt
bound
sub
mov
add
arpl
or
push
push
mov
mov
xchg
in
sub
or
rorb
notl
jl
dec
push
inc
pushf
ja
insl
aad
inc
lahf
in
jo
push
mov
ret
movl
das
dec
inc
jae
or
test
je
mov
inc
inc
push
mov
rcll
mov
inc
add
ljmp
lods
add
jmp
cmp
jne
mov
jmp
sarl
ror
leave
dec
cmc
adc
mov
les
mov
js
jle
js
std
out
ror
shl
and
mov
idivl
test
cmp
xchg
ret
jno
lahf
aad
cltd
repz
or
mov
popa
mov
ljmp
movsb
aam
inc
fsubr
xchg
jp
sub
xchg
out
pop
mov
ds
jnp
push
rcll
loop
mov
mov
xor
jbe
mov
cmpsb
push
xor
pop
fwait
clc
pop
pop
lds
bound
and
jmp
pop
mov
xor
shrl
outsb
aas
sbb
mov
out
ljmp
inc
outsb
add
inc
incl
sbb
ss
cmpb
mov
cmpsl
dec
sbb
or
jle
or
inc
cmc
jmp
test
std
outsl
notb
xor
pusha
mov
pushf
push
pop
lods
jns
and
inc
xor
loop
cmp
loope
xchg
add
adc
adc
fs
lret
cld
test
fwait
pop
hlt
out
jp
inc
ficompl
aam
popf
mov
loope
mov
sub
xchg
jp
rol
stc
sub
stos
jge
sti
sti
js
xor
xchg
repnz
jmp
xchg
in
int
out
pop
f2xm1
add
pop
mull
jle
test
add
or
pop
ret
sbb
popa
jp
jno
pop
xchg
pop
adc
pushf
btcl
mov
sub
push
pop
xor
stos
int
repz
aaa
rol
pop
bound
cmp
cwtl
and
cmp
mov
andb
inc
test
cmpsl
inc
adc
imul
jecxz
pushf
test
sbb
jg
popf
mov
jecxz
mov
outsb
sub
mov
ret
cmp
out
adc
jl
test
int
inc
and
and
sti
movsl
jo
pop
mov
ret
test
lcall
adc
sbbl
scas
imul
fsubs
ret
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
jmp
leave
fcmovbe
sar
rcrl
popf
adc
ss
mov
js
jnp
mov
out
jae
lret
xchg
mov
mov
mov
cmp
sbb
fistpll
popa
addr16
rcr
mov
ljmp
out
js
xchg
rcrb
test
test
mov
sbb
xor
aas
lea
popf
sbb
popf
pushf
pop
inc
sub
sbb
jg
push
movsb
cmp
sbb
add
xchg
ss
nop
adc
cmp
adc
std
adc
xchg
xor
fnstsw
xchg
jnp
daa
gs
fistpl
and
or
push
dec
repnz
insl
pusha
hlt
inc
add
push
adc
inc
lock
mov
mov
inc
pop
inc
pop
popa
in
and
jmp
loopne
dec
mov
call
push
jns
sbb
sub
test
cmp
scas
and
lea
sbb
inc
mov
cmp
inc
fwait
les
dec
adc
cli
arpl
adc
stc
lret
dec
xlat
ljmp
xchg
int3
fs
cld
cld
sahf
pop
pushl
jae
adc
aam
push
xor
xor
movsl
dec
insb
mov
cmp
adc
sar
push
sbb
imul
and
mov
dec
shrl
jae
inc
xchg
inc
push
js
pop
push
pop
in
cwtl
pop
mov
or
imul
stos
push
xor
out
mov
decl
out
inc
ret
or
movsl
adc
add
enter
push
pop
pop
lods
aam
cmpsl
rcrb
pop
imul
jmp
ljmp
inc
pop
adc
push
add
jmp
cld
data16
mov
push
sbb
inc
xchg
mov
dec
sbb
and
inc
cmp
push
or
mov
div
lds
push
push
in
adc
fisttpl
scas
shll
xor
add
filds
pop
lock
int
insb
lret
pop
rcrl
imul
mov
mov
xor
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
sub
push
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
movl
jmp
cmp
aad
xlat
jecxz
ja
out
je
hlt
mov
js
rclb
adc
lock
aas
mov
xor
jo
imul
mov
popf
inc
pop
adc
lret
mov
loop
add
sbb
jno
adc
dec
jne
mov
cmp
mov
dec
and
push
iret
jb
sti
inc
push
loopne
shrb
push
push
mov
add
jmp
xorb
leave
nop
test
adc
lods
and
or
and
xor
mov
inc
xchg
inc
inc
push
in
imul
inc
ss
pop
xchg
push
jno
lods
mov
jg
nop
add
pop
bound
das
push
loopne
xor
cld
adc
push
stos
xorl
and
lret
movsl
pop
fcoml
sub
int
and
push
pop
xchg
cld
push
in
add
test
in
sub
out
mov
cmp
jb
js
pusha
adc
fsubr
lcall
enter
stos
mov
cmpsb
call
xchg
test
jo
dec
shrl
fmul
push
fsubrs
lds
mov
pop
sbb
mov
mov
aad
loop
adc
shll
xchg
stos
add
push
mov
into
and
aam
add
out
mov
lods
adc
sbb
push
mov
xor
sbb
cmp
xor
imul
adcb
test
nop
fs
jecxz
cmp
inc
jno
mov
bound
mov
sti
adc
shrl
jne
push
inc
movsb
and
mov
scas
inc
cltd
push
or
aaa
cmc
stc
pop
push
ret
jg
das
mov
dec
insb
xchg
gs
and
dec
test
push
sub
push
leave
in
cmpsb
mov
std
sbbb
fdivrl
mov
mov
xchg
mov
rcll
or
xor
and
xor
das
jno
scas
mov
and
loopne
xchg
mov
adc
mov
lcall
mov
lock
sub
orb
jp
xchg
push
pop
outsb
arpl
mov
mov
or
mov
mov
xor
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
add
mov
xor
jmp
lret
ror
leave
lret
push
xchg
fbld
js
in
js
adc
or
sarb
sub
inc
xchg
mov
pop
fistps
movsl
push
es
inc
jle
push
neg
data16
xlat
mov
push
jo
ljmp
daa
ret
mov
mov
cld
aam
cli
xor
cmp
xchg
in
jnp
pop
jg
fistps
sub
ja
iret
cmp
divl
inc
push
jo
xchg
mov
fadds
dec
lcall
data16
cmp
adc
out
cmp
cmp
mulb
pop
std
jecxz
pop
inc
or
std
xchg
sub
shll
inc
imul
xor
lock
sub
shrb
and
in
mov
fsubp
sbb
aas
push
pop
lret
mov
pop
pop
dec
popf
cmc
mov
sahf
xchg
and
inc
sbb
enter
push
add
rcll
dec
negb
or
mov
fsubr
mulb
ret
or
cltd
xlat
mov
pop
rorl
sbb
mov
mov
inc
les
xor
test
dec
inc
mov
subl
popf
jae
jp
adc
mov
dec
add
xchg
sub
movsl
stos
xchg
int3
insb
mov
lea
jmp
lods
cs
xchg
pop
popf
add
es
data16
inc
fnstenv
or
xchg
xchg
push
adc
mov
or
jbe
lock
inc
rorb
cmc
inc
lds
xchg
pop
pop
ja
push
mov
jg
inc
cltd
mov
lods
adc
rep
sbb
es
jp
push
ja
popa
jp
aaa
dec
pusha
push
or
andl
out
pop
icebp
mov
push
and
das
sbb
imul
pop
into
push
fcmovb
sbb
sti
mov
xchg
mov
mov
ss
aas
mov
xchg
pop
mov
mov
mov
xor
adc
xchg
lds
fs
xchg
cmpsb
xor
adcb
mov
pop
or
sbb
mov
push
push
cmp
cwtl
lahf
cld
pop
gs
jno,pn
inc
xor
adc
lock
shlb
pushf
mov
dec
add
lds
shll
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
andl
xor
jmp
enter
fcmovnb
aad
push
and
cmp
adc
xchg
mov
js
mov
jge
addl
mov
sbb
pop
jae
fldt
pushf
int3
jp
dec
inc
xorb
and
add
insl
push
call
addr16
cmp
mov
mov
or
and
lret
fadds
xor
or
ljmp
clc
mov
inc
sub
shll
adc
lea
jecxz
fdiv
test
mov
clc
in
bound
or
fsts
lock
or
add
mov
leave
sahf
dec
leave
sub
push
adc
pop
daa
cmp
les
imul
push
cmp
add
jmp
cmp
clc
cmp
ficoms
pavgw
xor
out
loop
add
insb
and
mov
add
stos
pop
push
mov
in
popf
jne
mov
push
xor
ret
fbstp
inc
push
pop
lods
adc
imul
les
daa
cmp
stos
cmc
mov
imul
addr16
int3
mov
sbbb
pop
sti
jo
add
pop
jns
mov
xor
fs
push
fiaddl
test
mov
xchg
stc
jle
cwtl
pop
push
adc
xchg
aaa
sub
or
fucom
xorb
pop
jbe
add
imul
xchg
stc
inc
push
mov
mov
sbb
mov
inc
mov
jmp
add
mov
sbb
int
out
xchg
popf
pop
push
in
xchg
mov
adc
inc
idiv
cltd
shl
ljmp
fisubs
mov
clc
cs
add
mov
push
test
xor
ljmp
ret
stos
xchg
shll
push
enter
dec
lock
xorb
je
mov
es
addr16
dec
gs
in
mov
sub
aad
cmc
je
les
push
pop
loope
jo
lock
push
cmpsb
adc
in
mov
push
testb
outsb
mov
dec
mov
repnz
mov
dec
aas
mov
mov
xor
out
lods
mov
hlt
repnz
shrb
mov
out
sub
sub
add
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
mov
xor
movl
or
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
and
movl
sub
movl
and
movl
orl
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
pushl
call
jmp
movl
mov
xor
movl
cmpl
je
cmpl
jne
push
push
push
push
call
xor
or
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
jmp
decl
mov
movl
jmp
ret
sarl
shl
iret
inc
mov
jle
js
aam
jnp
sub
pop
push
xchg
repnz
jle
xor
insl
sbb
lret
add
lcall
cmp
push
pop
jle
push
jp
mov
scas
xchg
fcoml
push
dec
fldcw
in
shr
pusha
cmp
add
ret
mov
add
loope
sub
pop
insb
mov
lods
push
stc
cltd
or
jo
sbb
repz
xchg
fs
fcomps
jns
cmp
push
push
decb
inc
fldenv
pushf
dec
mov
les
lods
mov
jp
mov
adcl
adc
iret
xor
loopne
cli
xchg
mov
mov
iret
cmc
notl
ljmp
add
jle
out
mov
cwtl
aad
xchg
daa
mov
fs
ss
mov
movsb
gs
clc
mov
frstor
mov
stos
dec
int
ds
movsl
loop
mov
pop
lock
out
mov
int
push
ja
fdivrs
pop
iret
lcall
jmp
xchg
adcb
cmp
sahf
dec
mov
add
mov
es
mov
dec
bound
push
outsb
jne
lock
xchg
mov
loopne
cwtl
rolb
imul
cmpsl
push
inc
test
add
cltd
xchg
xchg
inc
adc
test
jbe
in
bound
scas
fdivrl
mov
and
xor
pop
fucom
jge
addr16
mov
movsb
mov
mov
jnp
sbb
add
fsubl
fmuls
or
jle
ror
adc
dec
push
sbb
push
shl
add
mov
jne
rorb
pushf
movsb
and
gs
int
orb
mov
sub
jno
adc
into
dec
pop
mov
push
leave
ret
mov
dec
and
aaa
sahf
in
test
push
orw
push
nop
push
jmp
and
mov
insl
xor
orl
jmp
push
adc
mov
push
dec
loop
xor
sbb
adc
js
and
mov
sahf
imul
mov
mov
adc
add
cmp
movl
jmp
ret
ret
lret
test
sub
inc
js
in
js
xor
iret
add
cmc
xchg
lret
inc
mov
cmp
mov
xor
fiaddl
pop
and
mov
icebp
imul
movsl
daa
cmp
inc
and
sbb
loop
mov
ljmp
mov
push
adc
in
rol
cmp
repnz
aad
ret
or
mov
and
out
jnp
xor
movsl
jge
xor
cwtl
ss
fsub
test
pop
jne
push
or
add
ret
xor
fldt
mov
push
mov
ja
mov
fisubs
mov
jge
cmp
daa
scas
test
ds
push
ss
pop
int
and
mov
stos
sub
mov
addl
sbb
shlb
pop
jne
fnsave
mov
in
add
in
pushw
and
mov
xor
into
lcall
ret
lods
repz
jo
pop
xchg
clc
repz
mov
mov
jnp
and
jle
out
and
xor
inc
sbb
imul
jecxz
adc
cmp
lret
out
inc
roll
push
ret
xor
xchg
aaa
add
mov
push
je
mov
add
jp
lods
shl
mov
push
xor
inc
scas
mov
ret
cwtl
je
int3
ret
lahf
dec
mov
jne
push
leave
or
or
adc
xchg
cmp
aad
les
loop
negl
sbbb
in
bound
dec
xchg
dec
add
and
mov
decl
lea
rorb
xor
fisubrs
adc
mov
fs
and
cmc
pushf
xor
test
and
xor
mov
es
imul
sbb
rcrb
mov
adc
mov
xor
xor
dec
and
loopne
mov
ss
jecxz
pop
orb
call
rcrb
or
daa
mov
pop
test
pop
in
in
icebp
shll
mov
test
movl
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
jmp
cmp
fcmovnb
cmc
into
inc
jge
lods
enter
js
in
js
cmc
mov
es
movsl
shlb
jmp
fwait
cmp
inc
shll
clc
in
sbb
imul
int
aad
into
in
push
or
scas
xor
out
jmp
jmp
sbb
and
lods
push
inc
aas
loop
adc
test
roll
mov
xchg
aam
rcrb
push
lret
cld
out
movsl
mov
stc
jmp
movsl
stos
jp
cmp
in
sbb
mov
cmovo
push
fstpt
mov
out
fdivl
mov
in
mov
out
jmp
mov
add
dec
lret
lea
dec
mov
repz
add
pop
pop
fimuls
dec
movsl
in
sbb
jge
enter
push
loope
aas
movsl
or
or
gs
imul
lock
outsb
loope
lods
cmpsl
jb
fisubs
out
test
ficompl
mov
lods
push
or
ret
jo
or
mov
pop
in
lret
repz
mov
insb
call
ret
sbb
repz
mov
jbe
addl
inc
push
mov
mov
stos
jae
lcall
xchg
lock
push
cmp
mov
push
orb
int3
jge
loopne
xor
mov
push
test
lods
cs
xchg
aam
jmp
push
cmp
bound
rolb
into
xchg
add
cld
ja
mov
inc
xchg
jns
outsb
mov
stc
jmp
push
inc
mov
sub
sbb
jo
mov
push
mov
fwait
mov
sti
ret
or
push
call
cmpsb
add
pop
addb
leave
seta
inc
dec
pop
mov
cwtl
adc
cmp
enter
pop
test
dec
out
rcll
xor
les
mov
clc
jbe
pop
mov
sub
out
lods
enter
cld
pop
push
lret
movsl
rorl
shrb
in
jp
das
cld
div
cmp
pop
out
push
sub
fstpt
cmpsb
xchg
andb
sub
mov
xor
add
cmp
jb
mov
mov
xor
xor
add
add
imul
mov
jmp
mov
leave
dec
mov
std
stos
leave
pusha
jp
js
in
js
iret
cmc
rclb
pop
cmp
and
mov
sbb
arpl
xchg
aaa
xchg
push
bound
or
popa
lahf
addr16
adc
pop
sahf
and
mov
insl
mov
and
xchg
mov
mov
fisttps
xor
imul
int
pop
dec
push
mov
pop
imul
mov
mov
cmpsl
inc
rcrb
dec
call
ds
jnp
inc
inc
mov
dec
mov
sbb
stc
jge
ja
mov
imul
ret
shr
sbb
cmp
int3
jb
fdivr
addl
outsb
add
dec
fnstenv
lods
xor
adcb
sub
cld
mov
mov
mov
sbb
mov
sarl
jl
pop
loop
mov
mov
pushf
sub
xor
repnz
push
xchg
or
add
in
push
aad
lds
rol
xorb
daa
dec
or
gs
test
test
lock
jg
lret
aas
inc
int3
fsin
mov
dec
mov
cmpsl
pushf
mov
inc
lcall
mov
ljmp
push
andl
xchg
fstpt
xor
movsb
femms
ljmp
cmp
jo
sbb
push
es
or
pop
popf
sub
shl
lret
shll
and
and
mov
aam
fcoml
xchg
mov
sbb
inc
test
add
aam
cmc
xor
xor
inc
shll
cmpsl
mov
insb
das
mov
cmp
shrb
cmp
mov
insl
insl
fisttpll
test
fmulp
fldt
jb
jnp
mov
repnz
pop
cltd
jge
dec
pop
shr
cmp
and
mov
cld
cli
cmp
loope
test
lods
shl
or
pop
xchg
mov
dec
addb
fsubs
pop
jmp
jae
cmp
pop
pop
or
clc
push
xchg
or
jnp
jl
xchg
in
cmpsl
fldt
xchg
cwtl
in
notb
outsl
cld
js
je
aam
inc
mov
and
dec
jle
fsub
or
out
push
mov
into
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
jmp
sarl
int
ret
xchg
daa
leave
xor
js
jle
js
jnp
pop
mov
loopne
cmpsl
xor
cmp
pop
fbld
imul
ds
mov
aaa
cmc
in
push
add
push
lock
into
pop
into
xchg
call
xor
pop
mov
add
cli
aam
cs
inc
stc
cld
out
push
xchg
mov
jo
rolb
mov
jo
xchg
xchg
loope
mov
movb
mov
fidivrl
or
fnstsw
sbb
imulb
les
mov
pop
xchg
pop
in
loopne
lcall
les
cmp
mov
loopne
dec
cmpsl
xor
mov
jle
movsl
jmp
stos
xchg
sub
insl
cwtl
int
xchg
mov
es
xor
push
add
movsl
xchg
shll
mov
pushf
in
sbb
je
dec
sbb
xchg
jg
scas
ljmp
jne
clc
fisubs
rcrb
pop
or
add
push
adc
sub
call
insl
or
xor
insb
popf
popf
sbb
ds
cli
or
adc
pop
or
into
sub
cmp
adc
je
stos
fcompl
push
scas
cmpsb
insl
call
sarl
pop
fxch
dec
ret
lock
stos
xorb
aam
pop
andl
add
pop
lret
push
push
xor
stos
fcompl
adc
xor
test
lds
add
pop
jo
adc
add
ret
ja
adc
test
data16
stos
jnp
mov
iret
mov
js
sti
sub
mov
aam
sbb
xchg
call
mov
out
mov
mov
outsb
sub
lods
pop
dec
lods
call
dec
add
test
leave
cmp
pusha
inc
push
add
cmc
inc
fstps
sub
in
mov
sbb
ucomiss
cmp
jne
sbb
adc
fidivrl
enter
inc
jecxz
loopne
aad
and
fimull
dec
push
sti
pop
mov
insb
and
pop
lock
mov
mov
lret
aas
int
xchg
fs
lods
in
xlat
cmp
or
dec
jmp
aas
pop
mov
shrb
ja
xchg
es
icebp
data16
movb
jmp
ret
int
into
xchg
jle
push
dec
js
in
js
das
inc
jb
jnp
xor
fsubp
sarl
cmp
clc
fwait
outsl
lods
adc
fstl
pop
pop
cmpsl
roll
jno
cltd
jecxz
xorl
cltd
adc
adc
sbb
sbb
adc
mov
rcrl
stos
insb
and
rorl
mov
cs
mull
std
xchg
test
ljmp
mov
enter
pushf
mov
aad
pop
popf
sbb
add
push
mov
and
sub
add
rorb
movsb
mov
sub
aad
aas
adc
loop
mov
adc
pop
paddd
xor
xor
push
icebp
das
cmp
fsubs
push
ds
mov
pop
xor
js
dec
mov
fcmovnbe
jne
mov
out
mov
mov
dec
xor
mov
test
insb
sub
mov
fsubrp
xorl
and
inc
lret
jae
hlt
dec
xor
out
fcomps
fidivrs
push
aas
repnz
fstps
jns
or
mov
dec
divb
dec
call
mov
cld
out
ret
push
adc
or
outsb
int
iret
ds
std
add
cmp
pop
mov
add
mov
jno
or
mov
test
dec
inc
out
xchg
aas
scas
push
jnp
jno
push
movsl
ret
dec
add
jo
add
jle
cltd
dec
sub
adc
ret
es
pop
dec
and
int3
sti
pop
jne
arpl
decl
push
push
push
cltd
pop
pop
fcomps
cmpsl
sar
xchg
push
outsl
mov
or
inc
aaa
pop
xchg
imul
xchg
mov
xor
cmpsb
call
adc
das
rclb
ja
xchg
int3
and
mov
in
cmp
daa
jecxz
pop
jo
mov
mov
push
fcmovnu
sbb
or
popf
movsb
lea
inc
lret
sbb
fdivrp
mov
sti
clc
push
adc
inc
mov
test
mov
fisubs
insb
add
inc
mov
hlt
addl
xchg
mov
mov
jmp
in
fldt
popa
adc
mov
mov
mov
mov
push
adc
cmp
push
sub
stos
mov
ljmp
loop
imul
mov
mov
jmp
cmp
ret
fcmovnb
aad
pop
adc
xchg
mov
js
in
js
adc
adc
sti
rol
push
lock
fbstp
mov
shr
push
sbb
and
imul
xor
movsl
hlt
int
dec
sbb
xor
dec
or
je
xchg
jl
lock
jecxz
inc
aas
loope
xor
add
mov
inc
inc
es
rcll
into
sub
mov
jecxz,pn
insl
xor
cmp
lret
xchg
pop
cmp
pop
add
fcomip
sub
sub
lret
jmp
ror
jge
loopne
adc
dec
push
and
sub
adc
and
aaa
xchg
sbb
inc
fisubs
mov
cmp
in
xchg
cmpsb
idivl
es
and
jnp
movsb
or
rcrl
cltd
xchg
aaa
xchg
or
out
add
push
lahf
add
cmp
enter
dec
mov
xchg
cmp
arpl
xchg
pop
testl
dec
mov
mov
in
cmp
add
or
aam
imul
gs
and
mov
xor
shlb
pushf
and
loopne
lahf
movsb
and
sub
popa
jmp
test
push
jge
push
xchg
xchg
pop
bound
or
stc
ds
incl
inc
sub
ja
push
movb
in
test
push
mov
int3
loope
pop
test
dec
pop
mov
and
cmp
xlat
sbb
xchg
inc
ja
icebp
jns
mov
add
out
pop
out
mov
mov
cli
jp
mov
xor
lods
xchg
icebp
sbb
xor
jle
cli
and
sarb
jg
lds
in
idivb
pop
sub
mov
xchg
xchg
pop
mov
int3
and
mov
mov
cmp
xor
push
sbb
faddl
sbb
inc
add
loopne
pop
subb
jmp
dec
mov
lds
pusha
dec
sbb
arpl
mov
test
cs
iret
inc
inc
jg
mov
subl
repnz
mov
clc
or
mov
dec
push
push
les
or
jmp
into
ror
fcmovnbe
fld
ud0
pop
pop
xchg
sarl
js
in
js
jle
addb
dec
push
test
bnd
movsb
sub
rcrl
mov
mov
mov
or
movsb
cmp
xchg
lock
xlat
lock
push
mov
sub
outsb
lcall
inc
pop
mov
jns
int3
mov
mov
push
lods
cmp
sti
mov
cmpsl
insb
fcmove
mov
outsl
subl
repnz
mov
out
data16
adc
int3
xor
sub
es
pop
mov
push
sub
pop
dec
ffreep
push
or
sub
pop
enter
and
sub
add
pop
fwait
aad
shll
stos
or
pop
push
pop
or
stos
fwait
adc
testl
test
xor
mov
mov
andb
out
sbb
hlt
dec
dec
jbe
aas
nop
outsl
xorb
in
jge
jo
cli
insl
inc
pop
rolb
mov
xchg
mov
enter
icebp
scas
repnz
fidivl
mov
ds
xchg
adc
cs
mov
or
sub
ret
mov
and
insb
in
test
movsl
add
jecxz
dec
mov
sub
xchg
inc
add
mov
bound
push
and
adc
lock
sub
mov
adc
pop
xchg
adc
pop
insl
ret
sub
jo
daa
mov
stc
cs
mov
xchg
and
enter
lahf
fimuls
mov
dec
adcb
pusha
fisttpll
cld
mov
pop
inc
mov
xor
push
adc
out
lods
sbbb
cwtl
bnd
cmc
loopne
xorb
sbb
je
popf
mov
nop
ret
or
mov
call
aas
sbb
mov
adc
aaa
fwait
xchg
mov
xor
lret
sbb
mov
inc
cld
xor
inc
hlt
aaa
ret
mov
rcll
mov
mov
mov
out
jnp
rcll
int3
mov
shrb
jg
cltd
aaa
ret
mov
fidivrl
pusha
nop
sub
fldcw
mov
add
mov
jmp
mov
mov
xor
xor
jmp
aas
lret
iret
aad
jo
lods
mull
push
js
in
js
xor
mov
hlt
into
pop
mov
jo
xchg
pushf
movsl
jg
sti
movsb
mov
ret
or
mov
cwtl
xchg
fistps
clc
and
lcall
mov
ret
inc
movsl
iret
loopne
loop
or
dec
outsb
push
mov
and
dec
adcl
inc
inc
gs
enter
lods
stos
inc
stos
js
jne
hlt
movsb
sti
insb
imul
inc
insl
mov
sub
jmp
add
pop
lock
push
int3
dec
xor
xchg
fstl
jle
aas
jno
into
icebp
fcomps
enter
sub
mov
sbb
xchg
loopne
mov
or
jns
ret
jb
ret
loop
cmp
aas
pusha
nop
sbb
mov
movb
mov
ss
xchg
sbb
xor
in
mov
add
adc
repz
or
push
shll
cmp
gs
xchg
sbb
jl
outsl
fsubrs
shr
sub
call
lods
add
pop
stos
pop
mov
sub
rcrb
nop
sbb
lods
dec
enter
lret
rcr
jbe
fldenv
jle
lret
mov
jno
mov
xchg
xchg
fdivs
push
mov
mov
outsb
jmp
sub
xchg
sub
jecxz
dec
out
jle
rcr
or
xchg
cmp
add
stos
ljmp
push
cmp
fsubs
imul
xchg
jo
pop
rclb
adc
outsb
pop
mov
jg
aaa
jecxz
fwait
into
subl
mov
fs
cmp
fwait
pop
sti
pop
mov
ss
setnp
cld
sarl
push
out
in
in
pop
pusha
lcall
pop
adc
xchg
rcr
cmp
fbstp
mov
and
incb
negl
mov
mov
in
xor
xchg
jle
je
jnp
or
stos
test
xor
jmp
iret
jo
mov
add
mov
and
int3
cli
pushf
fistl
jno
je
movsb
push
xchg
cld
xchg
and
lea
int3
stos
push
adc
stc
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
jmp
lds
ds
fxch
adc
add
fs
clc
clc
push
js
in
js
icebp
adc
pop
pusha
xor
stos
mov
sub
or
pop
cmovo
leave
in
mov
xchg
jge
ret
push
sub
or
adc
push
enter
enter
jb
ret
cmp
ds
pop
pushf
xchg
add
test
mov
jg
and
push
jb
aad
cmp
aas
stos
sbb
cmp
sar
push
cmp
xchg
or
mov
ss
gs
loope
aaa
adc
lret
push
cmp
cmpsl
test
mov
pop
push
shll
xorb
mov
push
fneni(8087
iretw
inc
in
cmpsl
adcb
jnp
popf
cltd
scas
inc
fistps
movsb
cmp
notl
addb
add
cld
sahf
and
mov
push
ret
mov
or
push
scas
shlb
lds
movsl
rorl
icebp
add
pop
xlat
sub
mov
inc
lock
shl
rclb
sub
sbb
mov
jnp
insl
sar
pop
scas
add
lock
test
and
push
mov
or
inc
data16
inc
lods
stos
enter
aaa
jne
adc
or
pop
jmp
mov
mov
lock
movb
sbb
pop
iret
movsb
mov
ja
dec
and
add
adc
jnp
out
mov
testb
xor
lds
mov
push
pop
sbb
aas
negl
aaa
mov
mov
test
int3
adc
xor
inc
imul
sub
lock
adc
jge
push
adc
jnp
jnp
sub
icebp
gs
cmpl
stos
addr16
repz
lcall
cmp
lahf
aam
mov
ss
or
call
mov
push
jmp
or
mov
paddd
xchg
or
push
and
cli
pop
add
repz
xchg
dec
scas
mov
inc
lret
imul
xor
pop
stc
mov
push
iret
mov
cmp
movsl
ja
int
sahf
mov
inc
inc
add
stc
mov
add
jmp
int3
into
ror
rcl
into
jbe
inc
add
out
pop
js
in
js
sbb
inc
popf
cmc
rolb
or
dec
mov
shr
lds
inc
gs
in
lcall
pop
pop
jb
inc
int
mov
pop
sahf
shll
jl
push
jnp
inc
lret
test
xor
testl
mov
insb
outsb
xchg
jecxz
add
jmp
ret
mov
and
and
ficoml
jo
xor
in
cmp
cs
std
inc
mov
add
jns
mov
cmp
mov
mov
icebp
js
int
dec
and
mov
ret
cmpsl
mov
loopne
sahf
daa
or
gs
mov
xor
les
jg
lret
mov
mov
mov
hlt
fcomi
inc
ficoml
adc
jae
stc
mov
dec
hlt
add
lds
and
sub
les
mov
cmp
add
mov
aad
rcrb
xchg
fsubl
testb
inc
outsb
in
ds
sbb
add
pop
lahf
pop
cli
ljmp
inc
int
or
jg
mov
outsb
js
popa
or
mov
leave
scas
lea
mov
and
test
fstp
push
aaa
std
push
xchg
xor
adc
fbstp
xlat
rcl
jl
inc
inc
and
lds
jno
add
gs
pop
sahf
add
test
js
loope
cld
adc
ficompl
jle
int3
daa
insl
jp
cwtl
sub
lret
rcl
add
fistpl
fwait
add
dec
jns
cmpsl
lret
aaa
xchg
inc
inc
ja
cs
clc
add
divl
and
data16
repz
arpl
sub
aam
or
sbb
mov
add
push
cmp
jne
adc
mov
cmp
popf
and
out
mov
sub
mov
jne
xchg
test
xabort
iret
call
jns
xchg
shlb
push
mov
adc
jbe
push
ljmp
lds
pop
ret
ds
cs
mov
xor
jl
lods
leave
adc
xchg
in
xchg
mov
cli
icebp
adc
rorl
scas
xlat
jmp
aas
xlat
xlat
lret
xlat
lret
rcr
and
or
mov
js
in
js
xchg
inc
loop
cmp
sbb
mov
test
mov
out
jmp
sbb
pop
loopw,pn
out
jge
testb
into
fs
mov
dec
cmp
inc
jae
rcrl
js
adc
push
cmp
shlb
scas
sbb
int
adc
leave
or
and
insb
fstps
mov
imul
repnz
push
mov
jecxz
into
add
xor
rolb
mov
je
pop
movsl
ret
mov
xchg
mov
iret
shrd
cwtl
jle
or
inc
jo
mov
mov
dec
push
xor
loop
neg
shlb
das
sub
std
cmp
hlt
out
ror
mov
je
shll
xor
dec
pop
or
and
adc
mov
rclb
adc
cmp
ret
adc
add
sbb
in
shrb
lahf
rcll
sub
pop
sub
test
fbstp
inc
clc
enter
popf
pop
inc
and
jb
pop
aaa
inc
decl
mov
lds
mov
xchg
dec
push
or
mov
cmp
leave
sbb
imul
pop
cltd
push
adc
scas
lret
jno
mov
ret
hlt
scas
or
xor
loopne
sbb
int3
pop
rolb
aaa
jle
arpl
pop
mov
cmc
icebp
les
fisttpll
sbb
dec
lret
lock
sub
icebp
or
aad
push
sar
cmp
inc
repz
sbb
push
xchg
pushf
jo
dec
pop
xchg
dec
lcall
and
addb
pop
aas
jle
jmp
push
test
add
dec
fwait
ror
or
lods
sbb
adc
sbb
mov
xor
clc
ja
mov
cmp
xor
adc
adc
arpl
dec
push
shl
loop
out
mov
test
movaps
xchg
mov
xor
pop
notb
cmp
ret
testb
inc
sbb
or
sub
aad
jge
mov
sub
cmp
ja
jmp
rol
xor
iret
mov
mov
jle
js
mov
mov
or
dec
loope
ret
iret
pop
pop
lock
fucomip
std
xor
pop
popf
fs
incl
pop
in
in
insb
nop
scas
cmp
push
mov
xchg
orl
and
push
add
sub
and
addr16
fs
sbb
cmp
adc
leave
sbbl
sub
sbb
lods
jmp
push
push
pushf
jp
dec
add
outsl
dec
jge
adc
mov
pushaw
ret
and
rorl
les
nop
mov
add
imul
cmp
mov
stos
lret
clc
enter
subb
pop
push
in
dec
mov
sub
lret
imul
loop
xchg
scas
jbe
sarb
pop
cmpsl
dec
mov
ret
mov
sarb
and
push
iret
int3
cmc
mov
xchg
adc
sbb
aaa
xor
mov
xchg
int3
sbb
cwtl
stos
addl
sarb
pop
push
scas
test
mov
pushf
aaa
sbb
test
pop
icebp
movsb
inc
add
add
mov
push
and
xorl
cs
push
ret
push
lahf
and
mov
popf
add
fisubrs
add
sbb
or
or
xchg
clc
xor
or
ret
js
sub
aam
xchg
popa
pusha
cmpb
loop
dec
ds
cmp
int3
mov
push
addr16
mov
jg
hlt
ja
out
adc
xor
mov
cmp
mov
lods
add
in
sbb
insb
xlat
sub
inc
jne
addr16
sbb
stc
jbe
dec
adc
out
roll
push
fstps
imul
das
cld
sarb
dec
cmp
cmp
addr16
mov
mov
cmp
sbb
addl
push
add
jp
sbb
pop
ljmp
fnstsw
pop
leave
or
bound
cmp
adc
je
fwait
decl
in
lea
xor
xchg
call
push
popf
cmp
mov
sub
stos
add
xchg
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
iret
leave
into
xlat
fcmovu
aad
cli
je
sti
bnd
sub
bound
in
js
fcmovu
and
movb
outsl
imul
cli
nop
xchg
addr16
inc
ficoms
mov
loope
or
mov
test
mov
adc
imul
or
xchg
int
iret
sub
xchg
adc
dec
hlt
jo
popf
fucomip
jge
pop
repz
xchg
shl
adc
mov
fisttpl
test
pop
add
mov
cli
es
or
dec
sub
lret
xchg
daa
mull
jle
gs
testl
mov
arpl
pop
outsl
lcall
cmpsl
push
ja,pt
cmp
push
add
add
inc
push
daa
xor
sbb
lock
sbb
lahf
mov
inc
jp
shlb
xchg
movsl
jl
jns
incb
mov
mov
dec
mov
int3
addb
adc
shl
int3
lds
mov
mov
movsb
pop
fstps
xchg
stc
adc
or
lea
jmp
fistpl
ret
aam
mov
xor
cmpsb
in
mov
cld
and
push
mov
ds
sahf
fistpll
shll
scas
jge
sbb
sahf
jmp
push
sub
ja
mov
in
movsb
jge
repnz
jg
sub
shlb
xchg
and
jmp
sbb
int3
les
sbbb
inc
inc
fsubrl
xor
lds
cmpsb
cmpsl
pushf
xchg
iret
push
sub
sub
add
fistpll
xorb
adc
jge
sub
mov
in
neg
scas
mov
shll
fidivrs
dec
or
rcr
bound
es
xor
insb
not
fisubs
add
mov
add
testb
cmp
xor
xor
push
or
fidivs
jb
scas
sbb
cmpsb
dec
adc
add
out
outsl
aas
push
ficompl
add
mov
pop
enterw
pusha
pop
es
jle
aad
fwait
test
jg
lret
inc
and
in
in
pop
jmp
add
cmp
mov
xchg
push
arpl
inc
xor
lock
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
jmp
into
cmp
fxch
sub
mov
js
in
js
dec
mov
ficoml
inc
in
lods
mov
stc
rorl
in
into
cmc
inc
jmp
push
mov
jecxz
sbb
xor
insb
cs
mov
cmp
sbb
jp
repnz
test
mov
sbbb
mov
or
lret
xchg
adc
insl
jb
pop
aas
hlt
push
xorb
sbb
adc
xor
xor
xchg
add
enter
mov
xchg
mov
test
pop
dec
pushf
sbb
jp
adc
mov
les
cmp
xchg
mov
or
idiv
out
lods
push
mov
adc
shrl
lds
cmc
pop
xchg
cltd
jne
rorb
lds
xor
fstps
cmp
mov
xchg
or
ja
jne
fisttpll
out
insb
cmp
stos
hlt
push
dec
cmp
pusha
mov
inc
jnp
sub
and
pop
fisubs
push
fs
lock
mov
cmpsb
xchg
ljmp
in
jo
aas
mov
mov
or
mov
sub
push
mov
mov
jecxz
leave
jecxz
fsubl
ljmp
or
mov
stos
or
adc
sub
enter
or
cld
icebp
ds
std
adc
inc
jo
sub
jnp
mov
gs
outsl
inc
idivb
xchg
rcll
fstpt
data16
addr16
mov
xchg
dec
cmp
jecxz
ss
movsl
mov
aad
cmp
mov
cmp
movsl
mov
pop
lods
das
jle
gs
dec
movsb
mov
icebp
gs
jp
add
push
iret
loop
xchg
les
shrl
or
and
in
les
mov
dec
outsb
adc
in
push
mov
jbe
sub
lock
cltd
xor
mov
mov
out
jecxz
mov
jge
sbb
jmp
cmp
mov
ret
xchg
mov
dec
jmp
xchg
loopne
ss
insb
adc
jg
subb
rorb
outsb
das
sbb
int3
mov
add
jecxz
int
mov
pop
arpl
sub
lahf
popa
cs
mov
pusha
test
fwait
pop
popf
enter
mov
mov
mov
sub
cmp
mov
jbe
jmp
rol
ds
into
rcl
adc
pop
push
jle
js
in
js
push
repz
fst
adc
jae
push
or
mov
push
fs
sti
add
pushf
mov
dec
lcall
add
sbbb
mov
push
loopne
int
jno
jo
or
ljmp
mov
pop
and
jecxz
push
insb
pop
subb
sub
lcall
jmp
fwait
lods
mov
jne
or
je
jl
jmp
aas
and
aam
int
jl
inc
mov
dec
sahf
lds
mov
dec
nop
imul
in
ja
xor
or
mov
ss
fists
xchg
mov
xchg
jge
fcompl
aas
push
jmp
pop
fs
stc
sbb
cmc
xchg
add
leave
inc
dec
fstp
shlb
vmovdqa
mov
or
lods
sub
inc
mov
popa
xor
movsl
add
sbb
fsubrs
push
roll
jo
jnp
xlat
xchg
cmp
hlt
mov
in
sbb
jno
outsl
fbstp
loopne
repnz
cmpsl
pop
cmp
ss
sahf
es
test
jl
adc
adc
inc
test
orl
pop
pushf
sub
jp
paddsw
xor
test
or
div
hlt
scas
xor
das
pop
mov
stos
xchg
xchg
call
sbb
outsb
gs
ljmp
insb
int
mov
inc
xor
cmpsl
cmp
ror
adc
jle
mov
test
adc
cmpsb
cltd
outsb
push
aaa
xor
fnstenv
xchg
mov
jo
push
test
roll
sarl
xor
add
fsubrs
xchg
outsl
or
hlt
or
xchg
dec
jmp
test
nop
jl
xchg
cs
adc
rcrl
mov
push
hlt
xchg
data16
pop
cltd
sub
dec
dec
pop
leave
add
sbb
test
insb
cmp
loopne
jae,pn
dec
mull
lods
mov
out
mov
mov
repnz
int3
cmc
jno
ds
repz
mov
enter
mov
xor
xor
jmp
rol
enter
fcmovnu
xchg
add
inc
ja
std
and
in
js
dec
mov
or
mulb
sbb
xchg
add
test
dec
fdivl
push
clc
xorb
subl
in
fwait
mov
push
js
data16
pop
inc
pushf
pop
test
push
fildl
jg
and
int3
adc
lock
jp
ljmp
cli
dec
lds
and
es
adc
test
pop
push
test
or
arpl
lock
fbstp
loopne
movsl
in
scas
sub
or
mov
sub
cmp
notl
call
out
xchg
popf
cld
adc
pop
mov
int3
jmp
dec
add
leave
loop
or
or
in
cmpb
cltd
push
lock
mov
inc
mov
cmc
jbe
fwait
jl
cmp
divl
inc
xchg
xchg
dec
push
xor
repnz
xchg
outsb
inc
cmp
gs
dec
std
sbb
jo
arpl
mov
cmpsw
dec
mov
sahf
lahf
push
popf
pushf
sub
leave
fisubl
add
mov
mov
push
mov
mov
or
push
fists
popf
cmp
jbe
in
stos
jb
push
jnp
lods
push
mov
mov
sbb
in
xor
psrlq
push
jo
sbb
add
adc
pop
jbe
pop
cmp
xor
inc
repnz
sub
sbb
dec
mov
stos
movsl
mov
xchg
jne
xchg
push
cmp
cwtl
repz
adc
mov
dec
jge
jle
mov
loope
sub
or
adc
dec
test
popa
sti
sbb
test
inc
data16
jge
lods
add
test
mov
mov
jecxz
lods
sbb
or
icebp
mov
push
shr
xlat
sbb
aaa
xlat
push
mov
hlt
mov
or
xchg
jnp
ja
cmpsb
in
mov
inc
push
jp
mov
and
popa
fmull
notb
ret
cmp
jg
xchg
push
rcrl
adc
lea
lcall
dec
dec
jae
sti
add
cli
in
leave
out
or
mov
mov
inc
mov
ja
hlt
or
add
add
imul
mov
mov
mov
mov
add
movl
jmp
fcmovnu
shr
movsl
xchg
mov
or
js
in
js
ja
icebp
imul
sti
shl
in
and
arpl
pop
mov
adc
jae
inc
insl
mov
adc
scas
mov
push
testl
adc
inc
andl
lcall
inc
jo
addr16
sbb
lods
rolb
ja
push
cwtl
inc
lret
xchg
mov
sub
lea
push
mov
in
pop
repz
div
sub
xchg
pop
mov
jbe,pn
shlb
fs
repnz
jo
scas
sub
push
dec
or
fistpl
pop
rcr
lahf
ret
add
cli
pop
cmp
add
pusha
movsl
push
adc
xchg
cmp
pop
in
mov
cmpsb
and
dec
lret
fwait
mov
loopne
ds
js
cli
sbb
rorb
sbb
xchg
ja
sbb
sbb
test
jmp
test
sahf
ss
test
icebp
jno
insb
popf
or
xor
lods
jge
cld
xchg
or
flds
ss
fistpll
aam
xchg
aas
mov
xor
fnstenv
pop
pop
mov
cmp
or
or
dec
mov
jo
add
or
bound
cmpl
dec
fwait
popf
cmc
pusha
inc
sub
data16
lret
push
adc
and
xchg
inc
outsl
jecxz
or
stos
loopne
pop
clc
scas
ret
cmp
mov
out
push
iret
or
scas
cmp
ss
movsl
pop
add
xor
repnz
pop
mov
mov
inc
nop
adc
fisttps
clc
loop
xchg
add
cltd
push
pop
inc
jb
scas
inc
push
hlt
test
icebp
dec
cmp
nop
mov
sub
sub
ljmp
hlt
es
push
je
jg
bound
loop
dec
loope
xor
test
in
push
pop
dec
add
inc
std
xor
fsubrs
jno
rorb
mov
inc
mov
das
push
cwtl
int
push
pop
cmp
inc
mov
shrb
xchg
sub
mov
and
mov
mov
mov
or
cmc
cmp
mov
aam
es
daa
mov
mov
stc
test
cmp
mov
cmpsl
out
outsb
mov
jmp
iret
ret
rol
fcmovnu
mov
jbe
aaa
cmp
jle
js
cmp
pop
imul
jle
jns
pusha
cmp
cmp
ja
and
sub
cld
inc
sbb
mov
movsb
lods
jne
das
mov
sbb
mov
insb
jae
xchg
scas
sbb
dec
mov
es
pop
scas
fdivs
add
push
test
add
les
mov
mov
xchg
nop
push
cmp
int3
mov
lock
xor
jne
lods
sti
jns
mov
cmpsb
imul
std
mov
push
mov
mov
aas
add
ficompl
sub
in
fmull
lahf
sti
xchg
push
add
xchg
push
or
aad
cmp
mov
pop
sub
rcr
push
pusha
cltd
sub
loope
mov
loop
adc
fwait
dec
adc
xor
pop
adc
mov
hlt
or
daa
push
into
xlat
sti
xorl
lock
adc
jne
or
jecxz
andl
es
mov
inc
lcall
mov
imul
mov
out
mov
loopne
adc
dec
ds
loope
jge
std
shl
icebp
sti
loope
movsl
push
mov
xchg
push
dec
test
mov
jae
push
call
xchg
mov
adc
imul
stos
stos
push
movsb
sub
mov
mov
push
or
stc
js
jmp
idivl
dec
shlb
je
sub
fwait
add
aas
adc
mov
movsb
repz
mov
stos
xor
das
negb
aad
adc
push
sub
push
mov
lods
dec
test
or
insl
fadds
std
mov
pop
into
enter
les
aaa
sar
jo
je
and
xchg
pop
jle
cmp
cmp
sarb
insb
xor
xor
mov
xchg
mov
and
adc
dec
lahf
movsb
ds
lds
push
ret
xlat
push
fyl2x
cmp
sbb
push
adc
addl
xor
popa
in
and
sub
lea
movl
movl
jmp
int
ror
fcmove
leave
sub
test
or
insb
js
in
js
loop
cld
mov
xor
push
xchg
stos
lock
mov
sbb
jle
out
loopne
cwtl
mov
les
lret
pushf
test
jno
pop
mov
dec
jecxz
sarb
adc
lcall
movsb
mov
or
or
jne
in
dec
sub
mov
jb
jl
add
test
fdivl
imul
in
or
sub
imul
push
test
jae
ss
cld
xor
lret
iret
test
call
pop
fiaddl
fimuls
push
adc
sub
jp
and
in
rcrl
negl
fwait
aam
sarl
leave
int
loopne
movsl
imul
sub
jle
lock
in
inc
loope
inc
xchg
mov
xchg
sets
subl
xchg
repnz
pop
and
cmp
repz
popf
xchg
dec
push
lcall
xor
lret
push
cli
inc
adc
in
or
bound
jne
pop
adc
cmc
in
inc
fisttpl
out
test
pop
nop
pop
adc
cmp
xchg
add
pushf
dec
inc
aaa
movsl
insl
pop
dec
std
cmp
inc
cmp
pusha
adc
popf
sub
insl
jo
sub
divb
mov
or
push
loopne
lahf
je
cwtl
jne
test
cmp
mov
iret
push
push
mov
adc
mov
jmp
or
inc
insl
into
das
adc
fmuls
pop
fistpl
orl
xchg
xlat
jge
add
cmp
jo
xchg
and
aaa
rclb
scas
add
or
push
lods
add
dec
pusha
mov
movsb
adc
pop
sti
aam
fwait
enter
mov
pop
sbb
pop
and
cwtl
dec
into
imul
outsl
out
call
sarb
pop
clc
out
mov
sub
xchg
sbb
mov
xor
lret
dec
lods
daa
je
mov
in
fisubrl
mov
repnz
add
mov
adc
popa
sub
fs
pop
hlt
dec
and
mov
jae
add
fadds
push
hlt
add
mov
push
add
xor
push
call
jmp
mov
xor
add
jmp
ret
xlat
data16
andl
js
mov
out
out
nop
lret
jne
add
hlt
cs
test
int
adc
push
mov
aaa
xchg
mov
popf
dec
popf
mov
jbe
xlat
repz
sub
fwait
imul
inc
inc
jmp
mov
dec
roll
xor
mov
xchg
sar
mov
mov
mov
mov
or
mov
xor
dec
push
jnp
sbb
roll
jno
jb
sbb
std
loope
repz
imul
pushf
loope
jno
jo
std
sbb
cmp
jb
pushl
push
jae
mov
lea
leave
mov
mov
or
dec
ja
adc
sbb
aaa
sbb
xchg
lea
add
and
loope
xor
xchg
orb
inc
push
cmpsl
mov
imul
mov
push
pusha
iret
mov
ret
pushf
jmp
clc
adc
test
imul
jmp
jno
std
or
sbb
cmpsl
mov
xor
mov
loop
adc
pop
jge
xor
add
xor
mov
jecxz
inc
daa
rorl
push
fmuls
xor
mov
add
push
mov
fdivrs
mov
mov
and
jle
aaa
jnp
adc
inc
in
stc
iret
mov
rcl
fisubrl
fs
fdiv
andb
les
mov
ret
mov
mov
dec
inc
stc
lret
push
xchg
out
push
fwait
popa
cmp
es
movsb
or
jnp
test
fiaddl
push
sub
cmp
aas
enter
lock
cmp
or
mov
add
sbb
shlb
decl
jl
subl
dec
lcall
add
bound
dec
mov
mov
addr16
mov
loope
pusha
repz
sbb
cld
adc
pop
mov
mov
dec
xchg
movsl
mov
jb
imulb
adc
das
loop
das
jecxz
or
pop
sub
mov
mov
mov
add
mov
and
xchg
cmp
addl
add
int3
xlat
enter
shll
std
xchg
xchg
dec
inc
cld
ja
js
jle
js
pop
das
xor
mov
test
ja
pop
and
ret
divb
cmp
test
cwtl
xchg
scas
test
lahf
push
mov
push
push
jno
outsb
cli
leave
ja
and
outsl
imul
mov
lea
cmp
repnz
daa
xor
cli
jl
adc
int
mov
pop
push
mov
mov
nop
mov
cli
push
or
jnp
nop
sarb
xor
ja
xchg
pop
je
jne
push
scas
rdtsc
jl
out
cli
push
sub
into
icebp
icebp
add
jg
sarl
int
pop
jno
ret
mov
jle
dec
cmpsl
xchg
cmpb
mov
inc
jmp
in
mov
clc
and
pusha
adc
cmp
mov
aad
mov
mov
mov
cltd
repz
xor
pop
or
sbb
or
lea
xor
sub
add
jl
cmp
push
jo
mov
call
pop
fmul
iret
and
mov
mov
jecxz
pop
cmp
mov
cmp
bound
cmp
jmp
cltd
in
int
xchg
xor
and
mov
fwait
push
and
jns
inc
and
cmpsb
pop
lods
test
pushl
stos
jo
outsl
mov
pop
imul
mov
push
push
aaa
lods
shrl
rcrb
jg
pushf
adc
mov
test
pop
jo
repnz
lds
and
adc
cmp
ljmp
cld
icebp
mov
hlt
gs
mov
jnp
je
push
pop
subb
cmp
fdivrs
cs
fld
pop
sbb
out
insw
loope
rcrl
sbb
lock
je
cmp
xor
mov
mov
rclb
imull
and
fnstsw
lcall
pop
mov
ja
mov
sarl
dec
push
dec
mov
int
ret
cwtl
push
add
xchg
sbb
pop
addl
inc
pop
inc
rorb
mov
xchg
mov
add
lock
inc
pushf
mov
xor
jge
mov
call
push
hlt
xor
add
mov
mov
mov
mov
jmp
aas
cmp
cmp
sbb
adc
bound
js
in
js
imul
inc
cld
mov
int3
mov
mov
cmp
aas
imul
inc
ficomps
pop
ficomps
sub
ja
repz
jge
mov
das
ret
insb
mov
mov
cmc
les
mov
xchg
sub
movsl
cmpb
movsl
sub
les
je
add
rolb
inc
ficoml
jle
cs
movsl
mov
xchg
cmp
mov
or
clc
push
jl
mov
sbb
leave
stos
or
negb
stc
cmp
lret
or
sbb
push
addr16
and
dec
int3
or
idiv
or
loop
mov
jo
aaa
insl
arpl
mov
flds
and
dec
inc
xchg
or
dec
popa
mov
sbb
sar
mov
sbb
mov
adcl
cmc
mov
inc
jno
addr16
jae
fmul
pusha
mov
es
call
cli
or
test
adc
pop
pop
adc
icebp
mov
into
push
inc
dec
fsub
je
jae
insl
insl
bound
notb
repz
inc
cmp
lahf
or
rcr
lret
jb
popf
pop
fs
add
dec
mov
das
cld
xchg
mov
sahf
cmp
cmp
mov
aaa
jp
jg
clc
mov
in
xchg
popf
popa
cmp
lret
daa
cmc
int3
imulb
mov
pop
in
mov
push
mov
outsb
rorb
rclb
sub
popf
add
mov
sub
test
push
sbb
sbb
fiadds
fsubp
cmp
stc
imul
popa
add
pop
scas
cmpsb
loope
stos
mov
and
imulb
mov
clc
mov
mov
in
arpl
sbb
jno
lahf
cmp
dec
lcall
xor
xchg
pusha
mov
inc
adc
lea
jo
dec
adc
fcmove
nop
jbe
cmc
sbb
push
enter
ljmp
mov
aam
push
sbb
rorl
or
rolb
loopne
push
fwait
cwtl
cmpb
or
test
ret
aas
jmp
mov
xor
add
mov
mov
mov
mov
xor
jmp
cmp
pop
in
inc
xor
sahf
jp
js
jle
js
cld
lods
in
xchg
bound
lods
enter
and
or
cltd
je
inc
adc
cmpsl
or
dec
pop
add
mull
sahf
ja
sub
pop
dec
cs
jle
cltd
push
and
shlb
jmp
lret
addb
mov
test
xchg
sbb
mov
dec
daa
mulb
mov
jae
repnz
into
jmp
in
cs
pop
inc
push
popf
orl
xchg
mov
xchg
mov
pop
push
xchg
push
addr16
daa
and
push
ds
divb
cld
int
cmp
sbb
sub
js
lahf
in
out
add
xor
cmpsb
inc
rclb
flds
lock
xlat
je
aad
sbb
aas
pop
ljmp
rorl
dec
std
xchg
outsb
cmpsb
push
jge
xorb
xor
mov
xlat
sub
cli
sbb
scas
sti
fldl
mov
scas
int
xor
inc
cmpsb
mov
pushw
das
lret
lods
insb
cld
jnp
pusha
imul
dec
shlb
ljmp
xchg
pusha
sub
or
movsb
adc
jne
ds
lret
lods
mov
jns
lods
xchg
jae
shl
mov
add
cmc
mov
mov
add
add
sbb
lret
in
dec
mov
cmp
subb
push
sub
leave
hlt
or
sub
fnsave
mov
push
iret
pop
push
nop
sub
cmp
pop
enter
rcrl
and
mov
push
dec
xchg
xor
mov
cld
adc
jbe
inc
add
rcl
xchg
orl
add
dec
js
bound
bound
mov
enter
arpl
jge
jb
cld
outsl
inc
movsb
lahf
pop
mov
mov
scas
mov
push
repz
loope
jmp
pop
add
push
or
xor
lods
aaa
fmull
outsl
rclb
in
push
xchg
fdivs
ja
sub
mov
imul
inc
loopne
mov
inc
mov
mov
xor
xor
sub
pop
adc
daa
leave
adc
jge
mov
mov
jmp
enter
cld
imul
sahf
inc
js
js
jle
js
push
inc
cmpsb
and
shll
mov
les
call
sub
test
mov
pop
mov
mov
or
xlat
ds
int3
mov
out
pop
adc
andl
ss
or
mov
or
jl
mov
jns
inc
movl
addr16
dec
das
in
cli
ficompl
pop
push
cmp
sub
shll
ljmp
jmp
sti
in
push
or
jmp
cmpsl
out
sbb
test
pop
cmp
sub
cltd
adc
pop
mov
mov
repnz
clc
jo
mov
or
add
loope
cmpsl
pop
xchg
jl
test
pop
dec
loopne
in
sub
jnp
xchg
adc
cmpsl
push
sbb
sub
cmp
rorb
mov
mov
imul
dec
push
shrl
add
aam
ds
push
pop
gs
cwtl
popa
sbb
push
jnp
aaa
push
push
cmc
or
mov
dec
pop
or
mov
push
jo,pn
jae
ret
int
fwait
in
lret
push
push
mov
sub
dec
outsb
test
adc
int3
cmp
lahf
jne
enter
imul
pop
xor
cld
sbb
sub
popa
lea
jnp
lock
test
cmp
xor
or
scas
mov
mov
cltd
aas
or
nop
insl
sti
push
cli
mov
inc
jmp
pop
lea
out
or
pop
inc
add
out
pusha
dec
cmp
push
and
mov
cmp
xchg
shlb
mov
call
xchg
mov
aas
iret
arpl
pushf
loope
and
addr16
mov
jecxz
cs
jp
mov
cmp
pop
mov
out
and
pusha
cmp
push
int3
mov
int
adc
fwait
test
cmp
and
arpl
roll
or
and
lcall
push
sub
subl
rcll
jge
xor
xor
add
add
jmp
ror
ror
leave
leave
mov
stos
xchg
sub
js
jle
js
jge
adc
mov
mov
sub
jecxz
cmp
dec
popa
push
test
repz
cmp
xchg
xorb
adc
dec
roll
dec
or
daa
mov
pop
jno
shl
divb
cmp
ds
int3
ja
in
push
pop
fbstp
das
mov
jb
call
sub
lret
pop
sub
aas
cwtl
cmp
mov
inc
mov
ljmp
xchg
and
insb
call
ljmp
inc
pop
pushf
sarl
pop
sbb
mov
xlat
xor
fcmovu
sub
hlt
nop
pop
nop
clc
lods
push
icebp
adc
adc
mov
jl
test
sbbl
add
imul
aam
out
jecxz
pushf
sub
xchg
jecxz
imul
cmc
xchg
clc
push
in
fs
mov
mov
cwtl
jge
push
pop
rcll
ret
add
sarl
hlt
or
xchg
popa
addl
push
test
jmp
mov
push
add
mov
lock
sub
mov
sbb
mov
push
adc
test
sub
lret
imul
mov
dec
data16
jp
out
jg
lods
inc
jg
xchg
and
inc
sahf
in
imul
or
sub
bound
loopne
aad
out
sub
dec
mov
adc
fnstcw
outsl
xor
add
push
insb
cmpsl
push
les
outsl
movb
mov
inc
cmp
cmp
xchg
mov
pop
into
sti
pop
in
cli
pop
add
pop
js
rolb
insb
test
push
call
jns
iret
iret
into
pop
in
enter
sub
and
scas
je
xor
dec
fwait
sub
repz
sbb
mov
sub
std
sub
jae
sbb
push
ret
fstp
aas
xchg
ljmp
clc
jne
xor
xchg
jnp
pusha
stc
pop
int
adc
lock
icebp
rcrl
stos
lock
cmpsb
add
insl
loopne
add
cmp
jno
xchg
push
aaa
int3
push
mov
popa
out
push
imul
add
mov
mov
mov
xor
add
imul
mov
xor
jmp
enter
lret
fxch
flds
xchg
loope
das
xchg
sub
jle
js
and
inc
adc
cmp
add
scas
js
and
nop
dec
inc
imul
orb
pop
mov
cmp
mov
ja
andl
out
sub
adc
xor
fwait
adc
fstpt
inc
xchg
jbe
adc
mov
ss
jbe,pt
inc
out
stc
xorb
add
jae
jp
mov
mov
mov
repz
or
stos
pop
fcmove
jmp
imul
jbe
test
inc
jo
ficompl
out
mov
imul
pop
xor
add
add
pop
pop
push
mov
xchg
scas
scas
je
gs
call
lea
shll
adc
test
inc
mov
jns
or
in
pop
cmp
cld
fnsave
in
pop
xor
hlt
insb
mov
jg
xchg
jb
push
gs
adc
jo
xchg
adc
mov
mov
iret
ljmp
push
or
xor
call
pop
lcall
movsb
adc
fwait
push
lods
addl
sarl
xchg
mov
cld
push
sub
stos
sbb
pop
out
push
lea
jb
xchg
jo
aad
in
sub
ret
mov
xor
or
push
cmp
push
mov
jbe
pop
lcall
mov
movsl
jl
pusha
mov
out
in
ljmp
add
enter
test
fs
out
dec
jmp
cmp
ja
add
xchg
test
mov
xor
dec
add
lahf
sbb
or
push
test
xchg
test
and
out
ss
mov
pop
imul
cltd
loopne
hlt
cli
shll
mov
push
loopne
mov
mov
int
movl
das
cli
add
inc
clc
dec
or
xchg
mov
mov
outsl
xor
mov
sbb
push
inc
mov
loopne
and
imul
pop
adc
mov
and
cmp
pop
xlat
sub
push
inc
xorl
pop
aad
in
je
cmpl
in
xor
add
jmp
ror
iret
aam
insl
js
push
and
pop
add
jg
in
js
into
ret
int3
pop
ret
fnsave
mov
int
inc
fwait
xchg
out
adc
xor
test
xchg
aaa
mov
cli
cmp
dec
jne
pusha
and
insb
xchg
jo
push
cmp
out
xchg
push
cmc
jno
cwtl
lock
out
fwait
sub
loope
mov
add
jbe
movsl
fldl
xorb
cmp
push
jnp
mov
mov
adc
sub
sub
sub
cltd
sbb
loopne
loopne
and
in
adc
repnz
or
pop
icebp
aad
stc
cmp
mov
add
push
add
cvtpi2ps
imul
cmpsb
xor
leave
inc
cmc
push
sbb
jp
jns
cs
mov
pop
aam
outsl
mov
inc
and
jo
dec
repz
mov
pop
lods
xchg
aaa
es
lea
mov
jns
cmc
cmp
push
sub
incl
mov
notl
mov
xchg
xor
data16
inc
adc
mov
fmulp
insb
and
scas
je
push
dec
repnz
xchg
cmp
pushf
addr16
mov
inc
mov
mov
les
dec
add
xchg
mov
dec
hlt
ret
xor
cmpsl
xor
pop
fistl
js
negl
sbb
push
cmp
xor
inc
punpckhwd
fstpl
data16
bound
outsb
push
mov
movsb
int
or
int
push
push
mov
ss
insb
daa
jbe
ja
mov
jne
mov
inc
or
jmp
andb
xor
mov
push
repnz
imul
les
fistpl
adc
hlt
test
mull
mov
add
stos
sbb
xchg
xor
mov
cs
pop
sar
lods
aad
rorb
push
jg
xor
pop
add
or
jmp
pop
lds
xor
movsl
and
test
je
pop
sbb
aam
sbb
jne
gs
mov
pop
or
sbb
ret
sbb
lds
movsl
in
and
ret
ret
into
mov
fwait
addl
fcomps
lods
mull
imul
mov
jmp
rol
leave
rcr
rcr
enter
pop
leave
xchg
fucomp
push
jg
in
js
and
mov
mov
cmp
jg
bound
fstpt
pusha
outsl
ljmp
mov
jo
sub
or
ficoml
xchg
add
xchg
xor
lcall
adc
push
add
stc
push
mul
dec
jmp
dec
add
xchg
pushaw
lds
in
sbb
leave
mov
int
das
mov
inc
jge
pop
and
xchg
std
dec
repz
fs
call
mov
repnz
imul
jmp
jp
sbbl
jle
inc
pop
add
jecxz
daa
insl
call
jge
or
je
dec
stos
cs
aam
lock
inc
xchg
xchg
push
mov
cld
bound
lods
cmp
subb
xchg
and
aam
jb
add
rorl
mov
mov
repz
movsl
imul
pop
push
bound
jno
push
je
nop
out
xlat
inc
jmp
add
sarl
in
out
and
mov
stc
repnz
cs
int3
inc
dec
stc
call
mov
push
mov
aam
jne
inc
pop
jne
dec
xchg
jl
xor
dec
fistpl
inc
jle
jl
xchg
sbb
jb
enter
scas
test
and
lock
aaa
sbb
jmp
mov
data16
sti
rol
xchg
ret
pop
jge
mov
dec
pop
xchg
jp
test
frstor
mov
jecxz
adc
mov
sahf
adc
aad
test
lcall
adc
cld
adc
add
shll
rcll
repz
push
mov
lea
ficomps
mov
push
test
dec
cmc
jmp
xchg
xor
out
jnp
shll
std
cli
mov
shlb
cmp
cmp
cwtl
mov
clc
outsb
std
gs
bound
inc
insb
ret
sbb
pop
in
aas
sub
fsubs
push
pop
cmp
xor
xchg
fnstenv
mov
outsl
jle
mov
aas
push
xor
jbe
xor
push
xchg
mov
sbb
movsl
xchg
lret
cmpsl
and
dec
shl
dec
push
mov
sub
test
addl
add
aas
int
aam
mov
lods
bound
in
js
lods
ljmp
stc
jp
test
loope
jnp
imul
int
dec
mov
inc
dec
int
sar
scas
cli
mov
xlat
cwtl
aas
ds
xor
xchg
dec
cmp
jne
rsm
cmp
sbb
fcoml
clc
cs
adc
popa
jbe
enter
arpl
ss
fwait
xor
jb
or
andb
lods
fsubl
mov
gs
inc
xchg
and
scas
outsl
adc
sub
roll
mov
lods
adc
inc
push
lcall
jbe
or
inc
jae
sub
scas
jge
nop
lods
aad
inc
mov
sbb
push
mov
std
dec
ret
imul
xchg
mov
pop
mov
aam
loope
mov
mov
add
fnstsw
test
popf
mull
mov
iret
sub
sub
jne
mov
aaa
xchg
insl
sbb
mov
pop
outsb
inc
mov
nop
fldenv
push
cmp
mov
sub
cmp
rclw
call
push
pop
mov
jno
repz
sbb
pop
mov
xor
loop
lock
enter
out
repnz
jb
fistpll
jecxz
and
clc
call
mov
inc
dec
jp
ret
cmp
dec
out
imul
roll
adc
int3
testb
sub
inc
push
cmp
sbb
add
adcl
cmpsl
mov
mov
adc
mov
out
inc
dec
sub
cmp
inc
xchg
lea
adcl
mov
push
inc
jge
mov
scas
jns
or
or
in
xorb
rcr
xor
fiadds
sub
push
fdivs
repnz
imul
add
test
scas
in
addb
sub
push
inc
jae
icebp
jg
ror
jae
mov
sti
fimull
dec
push
into
fldl
enter
adc
cmc
mov
jno
cld
pop
or
jb
push
mov
push
out
xor
xlat
lret
aam
rorl
xor
cmp
jbe
mov
mov
xor
add
jmp
vpmovmskb
fcmovnu
addl
into
rorl
js
jle
js
mov
push
arpl
cmp
or
pop
cmp
adc
sbb
push
pop
fists
push
xchg
ss
cs
outsl
js
je
enter
dec
mov
pop
testb
imul
or
add
int
sub
ret
cmpsb
lret
iret
sbb
gs
mov
cli
sub
aad
mov
mov
out
sbb
push
and
jp
in
adc
add
addr16
lds
cli
push
jnp
jno
aas
xchg
mov
pop
mov
jo
push
decb
xlat
loope
mov
lcall
clc
push
mov
rcrl
in
cld
mov
mulb
inc
add
push
nop
or
jne
and
addr16
mov
cmp
in
imul
clc
sbb
sbb
xchg
pushf
mov
lret
or
jmp
inc
bound
and
testb
pop
inc
lcall
notb
leave
sub
lret
lods
mov
outsb
dec
jne
lret
ret
push
mov
movsl
loop
cld
adc
cltd
ja
xor
pushf
shrl
mov
sub
xchg
js
mov
addr16
mov
xor
leave
jge,pn
mov
lods
jnp
in
popf
in
fcomps
xor
xorl
inc
sahf
lret
mov
mov
or
call
cmp
cmp
push
flds
push
cmpsb
dec
cmp
mov
jge
lcall
inc
add
push
cmp
fwait
das
es
fldcw
sbb
lret
jmp
popf
mov
popf
dec
fstl
and
xor
jge
dec
je
jge
dec
inc
insl
pop
push
iret
punpckldq
aad
sar
cwtl
int
filds
xchg
push
lret
add
add
fisubrs
adc
xor
popl
mov
jmp
mov
xor
mov
push
sbb
arpl
jecxz
data16
mov
repz
inc
or
pop
test
mov
adc
out
push
jmp
ljmp
scas
xlat
mov
jmp
lret
ret
vpand
ret
sbbb
scas
movq
jle
js
and
or
out
pop
lds
mov
push
arpl
ret
mov
sub
mov
call
pop
dec
pop
fidivl
pop
dec
sbb
cmp
shll
fwait
dec
sub
mov
fdivs
and
lret
sub
popf
push
shl
mov
mov
dec
out
push
popa
sbb
fwait
sub
jmp
ja
sub
in
sub
mov
pop
jb
mov
jecxz
movsb
les
lret
das
sysenter
mov
jnp
cmp
mov
push
cwtl
scas
fadd
lret
inc
ja
sub
jge
cs
sub
loopne
ljmp
mov
mov
cmpsb
div
mov
mov
mov
mov
addr16
cmp
je
mov
sbb
xchg
mov
xchg
push
in
xor
dec
sbbb
dec
sub
out
in
popa
fildll
mov
iret
xchg
and
cmp
mov
adcb
fists
fwait
push
adc
mov
add
pop
in
arpl
popf
fnstcw
fadds
inc
add
mov
imul
jp
mov
in
subb
jae
push
jns
cld
mov
xor
mov
fdiv
push
or
mov
rclb
or
outsl
lret
js
jbe
push
mov
movsb
and
fucompp
loope
push
sub
enter
jp
fldt
js
jge
mov
ficoms
repnz
cmp
nop
jmp
rclb
mov
add
push
dec
or
cwtl
push
push
inc
push
adc
shrb
or
in
mov
iret
jnp
filds
dec
jg
mov
mov
jb
push
rclb
lods
jle
aad
push
add
in
mov
xchg
fisubs
jecxz
xlat
sar
stc
push
sub
stos
cmp
popa
lret
inc
mov
in
lods
sub
call
xchg
jo
or
dec
jb
aad
sbb
dec
add
fcom
cli
into
sahf
mov
iret
add
pop
lret
push
push
inc
cmpl
in
xchg
stc
rcrl
psubb
and
stc
lret
clc
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
jmp
rcl
aad
leave
je
push
sbb
js
jle
js
sbb
aad
ficoms
fnstcw
dec
gs
popf
pop
lods
cltd
mov
lcall
sbb
adc
pop
or
pop
xchg
je
icebp
xlat
outsb
sahf
pusha
stc
popf
loope
and
add
fdivrp
std
mov
push
jp
cli
mov
jo
or
sysret
sbb
inc
rol
enter
mov
jnp
in
add
ja
xor
or
xchg
mov
pop
mov
out
and
jg
jns
or
mov
ret
cwtl
aaa
sbb
cli
push
inc
mov
mov
daa
push
ds
in
data16
push
test
push
adc
mov
repz
push
out
divl
xor
mov
std
int
jno
fldl
in
pop
dec
mov
sub
mov
aaa
rdpmc
push
js
orb
aas
ljmp
xchg
addr16
out
pop
jb
and
mov
subb
adc
cs
mov
xor
xchg
pop
xor
xchg
into
psubq
inc
ds
stos
cmp
hlt
inc
adc
mov
rcr
ja
das
lahf
mov
add
fnstcw
dec
mov
push
out
in
aam
and
inc
mov
loop
pop
dec
test
shll
sub
inc
pop
add
pushf
ret
xor
jmp
iret
sub
loopne
fnstcw
jno
mov
stc
out
or
pop
cmc
test
sbb
dec
pop
push
add
repz
adc
cs
xor
xchg
inc
popa
mov
jge
push
mov
das
mov
xchg
lahf
push
and
loope
cmp
iret
sub
nop
iret
repz
push
nop
popa
dec
xchg
mov
or
sbb
adc
pop
adc
lock
xchg
lds
push
ljmp
sub
mov
push
loop
inc
in
add
out
hlt
js
scas
add
std
xchg
repz
jno
jp
adc
add
jbe
cmp
sarl
cli
dec
and
mov
push
push
mov
cmpsl
js
ljmp
adc
xchg
rorl
scas
sarl
xlat
jmp
int
cmp
int3
leave
aad
xchg
mov
dec
xor
cmpsb
sbb
in
js
jecxz
adc
xlat
mov
or
pop
repz
push
mov
jne
xor
not
pop
les
arpl
outsl
pop
pop
fisubrs
jbe
cwtl
xor
dec
pop
sub
or
jne
fcomps
jl
jge
shlb
rol
fwait
jne
hlt
inc
lret
add
icebp
pop
jl
xchg
xor
cmpb
mov
push
jnp
testl
lods
test
or
sbb
js
add
mov
lret
or
pop
sar
lds
xor
xchg
ret
xchg
lds
jnp
mov
sbb
lock
lahf
mov
sahf
sahf
shlb
rcll
pusha
stos
jo
into
pop
jno
cmp
pop
sahf
cmp
into
lret
fldenv
sub
mov
mov
inc
add
sahf
sar
clc
dec
icebp
add
mov
inc
adc
ss
addr16
ljmp
lcall
movsb
jge
outsb
dec
or
add
or
ret
ret
lods
sbb
or
mov
test
pop
push
mov
fisttpl
sub
and
pop
and
push
repz
ds
inc
inc
loopne
fs
hlt
xchg
outsb
or
push
fsubrl
adc
jg
dec
movsl
in
or
push
popf
out
inc
jae
sarb
mov
rcr
push
and
addl
enter
ret
add
lret
pop
mov
inc
add
sbb
imul
pop
dec
dec
jmp
filds
jno
addr16
lods
in
or
add
sar
js
outsl
and
or
movsl
mov
paddd
in
push
sti
cwtl
pop
test
shll
sbb
dec
popf
test
sub
jmp
push
das
cmp
mov
mov
mov
nop
xchg
addr16
jns
push
adcb
and
movsl
lcall
testb
mov
and
test
data16
add
pop
xchg
cmp
loop
mov
and
or
adc
pushf
fbstp
jbe
pop
pop
leave
ret
push
mov
sub
movzwl
xor
push
andl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
call
jmp
push
xor
add
push
push
xor
pop
or
xor
sub
mov
div
push
sbbl
call
movl
inc
movl
cmp
jb
movl
incl
movl
lea
inc
mov
andl
lea
xorl
mov
or
mov
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
andl
mov
xor
xor
xor
mov
sub
add
mov
mov
mov
movzbl
cmp
mov
mov
mov
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
or
mov
xor
xorl
add
addl
imul
movl
mov
movl
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
movzbl
xor
mov
xor
add
and
mov
negl
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
not
add
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
add
mov
mov
xor
xorl
add
movl
cmp
movl
jne
movl
push
subl
pushl
pushl
subl
call
mov
mov
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
jmp
or
mov
mov
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
adc
mov
movl
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
and
mov
mov
andl
mov
addl
xor
xorl
xor
add
mov
xor
orl
xor
add
lea
movl
mov
movl
cmp
ja
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
call
cmpl
jb
sbb
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
into
int
rol
shl
out
stc
inc
out
sbbb
adc
xchg
jle
js
enter
outsb
mov
clc
fmull
jb
cmpsl
lods
les
repz
lahf
mov
andl
gs
cmp
push
in
mov
scas
and
popa
imul
sbb
fsubr
je
stos
icebp
ret
dec
aam
cmpsb
adc
xor
ds
fisubs
add
decb
jge
arpl
or
shll
ret
cmp
jle
cmpl
dec
cmp
jecxz
xchg
clc
dec
adcl
adcb
loopne
jp
adc
and
mov
xchg
pusha
in
in
push
dec
or
lea
jns
jge
add
mov
jge
and
add
mov
loopne
nop
sarb
negb
inc
push
cmp
jl
sbb
or
jp
or
mov
lahf
or
dec
xchg
pop
ds
mov
push
mov
and
push
and
shlb
flds
out
jp
pop
ja
lea
enter
inc
testb
pinsrw
and
bound
cmp
stos
mov
loop
jecxz
rol
mov
mov
dec
xchg
sahf
lahf
mov
mov
fs
xor
cld
mov
call
loopne
jge
insl
jne
xor
jecxz
clc
das
mov
xor
pop
cmc
ffree
sub
add
aas
lret
imul
test
cwtl
rcl
sbb
pop
mov
cli
jmp
and
loop
fwait
mov
pop
adc
loop
cmp
jns
push
mov
dec
sbb
sub
xlat
fnsave
mov
cmpsb
jo,pn
icebp
jle
cmp
dec
sbb
cmpl
add
std
cmp
jns
pop
jb
jbe
mov
jp
adc
mov
push
or
fdiv
jmp
push
xchg
sub
aad
adc
ss
inc
mov
mov
mov
dec
pop
lahf
xor
push
mov
xor
fistl
lret
mov
imul
ret
std
mov
ds
popa
mov
outsl
push
cmp
pop
test
inc
sti
fcmovnb
sbb
cli
add
andb
ret
xchg
lcall
inc
push
push
movl
mov
movl
movl
mov
push
jmp
lret
xlat
fcmovnbe
lret
test
pop
addb
decb
jle
js
aam
les
dec
mov
pop
mov
outsb
pop
mov
mov
dec
cmp
mov
rcl
mov
xrelease
and
repnz
mov
xchg
inc
lods
xor
cld
sub
push
mov
mov
add
popf
repz
push
js
pop
push
in
sub
sti
xchg
push
outsb
xchg
test
or
nop
movsl
sahf
or
xor
dec
cmpl
mov
pop
lock
inc
das
outsl
jb
or
jle
push
mov
pop
orb
mov
jo
add
sbb
inc
add
in
daa
mov
cli
xchg
in
pushf
mov
fcmovnb
cmp
daa
inc
mov
cmp
pop
sub
sub
fdivl
lret
push
adc
ljmp
mov
cmp
nop
add
movsb
add
jbe
sbbb
shl
jmp
xor
and
push
sub
dec
mov
out
sarb
xchg
xor
fnstenv
ja
jl
int
xor
xor
sbb
icebp
icebp
ret
lods
add
and
insb
call
aam
xchg
adc
jae
pop
mov
mov
jmp
ret
jge
inc
mov
fisttps
call
clc
shrb
aam
jecxz
loope
jp
shlb
leave
scas
xchg
outsl
jae
pop
pop
add
rcll
and
cli
bound
dec
mov
xchg
sub
jnp
sub
enter
rolb
pop
dec
or
mov
out
mov
lahf
lcall
fstpt
mov
bound
dec
out
pop
or
mov
dec
cmc
mov
and
in
fildl
jne
adc
push
fcompl
push
notb
xchg
insb
jge
lds
inc
and
es
xor
jae
hlt
shll
out
xor
add
mov
repz
hlt
xchg
inc
mov
push
xor
pop
xlat
outsl
fcmovbe
loopne
stc
push
mov
test
fdivrl
jnp
test
sahf
and
jecxz
adc
out
mov
in
scas
mov
and
add
ss
xlat
mov
cmpsl
push
rcrl
test
cmp
cmpsb
mov
clc
movl
mov
mov
push
mov
mov
mov
cmp
movl
je
mov
mov
xor
subl
add
cmp
je
jmp
into
xlat
ror
aad
rcr
stos
imul
data16
adc
xchg
jle
js
cmp
or
rolb
test
gs
xor
mov
shrb
mov
jns,pn
mov
bound
fyl2x
and
adc
ret
sub
rorl
imul
call
test
pusha
aad
mov
lcall
lret
iret
inc
pop
mov
loop
enter
mov
cmpsb
add
mov
dec
loope
sarl
movsb
push
pop
lcall
sub
getsec
sti
ss
cmp
pop
jae
mov
and
and
dec
sub
jp
or
lods
fs
cmp
and
les
sbb
or
and
xchg
and
popa
jae
pop
xlat
inc
xor
insb
mov
pop
sub
push
lcall
call
sub
jp
stc
push
mov
inc
fidivs
imulb
scas
lcall
mov
sahf
out
ds
stos
or
sbb
xor
pop
push
mov
pushf
in
push
cmp
out
sbb
lea
xchg
fadds
jo
sti
jp
cmp
xor
add
out
imul
les
or
icebp
xor
lods
nop
mov
xchg
into
dec
xorl
lds
mov
lcall
mov
ret
insb
cmp
mov
repz
cmc
pop
or
pop
mov
jmp
lock
inc
icebp
push
pop
les
mov
dec
push
sahf
lods
in
rcrl
add
leave
mov
cmp
mov
loop
cmc
push
lods
push
cmp
shl
pop
xlat
jmp
mov
jnp
pop
inc
sub
hlt
or
stos
pop
inc
jmp
mov
lgs
pop
ret
adc
ror
test
pop
fs
and
div
mov
mov
xchg
mov
push
mov
pop
push
jbe
inc
cli
call
xchg
std
xor
fsubl
sub
ret
in
mov
mov
mov
testl
sub
gs
jp
xchg
sti
jb
jmp
sub
and
inc
lret
xchg
sahf
sbb
ret
nop
in
mov
sub
inc
stos
xor
push
jae
stos
test
lods
push
psubusw
jae
jge
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
push
pushl
pushl
mov
addl
jmp
ret
leave
leave
leave
lret
add
ss
jle
js
pop
lcall
and
xor
stc
das
outsl
jns
das
xor
jns
xchg
jg
cltd
xchg
loop
jg
rorl
pop
in
mov
int
dec
push
mov
nop
mov
sub
shrl
lret
pop
and
popa
pop
dec
outsb
fadds
lret
dec
ss
pusha
das
jne
shrb
enter
mov
xchg
es
add
in
dec
shl
mov
mov
lods
adc
jmp
mov
push
push
movsb
into
sbb
arpl
scas
movsb
out
cmp
cmp
adc
js
adc
loope
jbe
pop
movsb
cmp
test
pop
int3
dec
xchg
aas
mov
fildll
in
xchg
pop
sub
add
sti
pop
add
adc
or
push
stos
lcall
pop
xor
mov
or
jb
test
mov
test
stos
adc
std
dec
push
repz
rcrb
mov
and
xchg
ja
mov
ficoml
push
pop
arpl
and
and
addr16
in
ljmp
out
les
and
cmp
dec
je
jmp
cmpsb
and
or
ja
adcb
push
jge
cmp
jmp
stc
inc
hlt
lahf
scas
sub
out
lret
orb
pop
imul
sbb
loopne
xor
xchg
xor
mov
sbb
fwait
push
cli
movd
or
lret
pop
fisttpl
sbb
repz
cli
and
loopne
pop
pop
fisttps
test
jns
xchg
pop
les
lods
sub
stc
inc
xchg
mov
cld
push
and
mov
jg
testb
outsl
push
mov
pop
pop
pop
pop
adc
or
mov
pushf
xchg
outsl
and
mov
clc
popf
sti
push
push
jecxz
hlt
cmp
gs
cltd
ret
mov
mov
andl
sub
and
push
pop
mov
lds
sub
popl
jmp
std
lcall
ljmp
xchg
fmuls
test
jecxz
lock
xor
nop
add
jbe
xchg
push
xchg
and
mov
ss
ret
int3
or
into
and
aam
fs
mov
call
sti
dec
and
ret
pop
int
xor
mov
mov
out
call
mov
mov
jmp
ret
int3
int3
aad
leave
roll
cwtl
mov
fstps
js
add
cs
lret
stc
mov
sahf
sbb
xchg
into
lahf
mov
inc
repz
in
pop
dec
fsubrl
xor
adc
out
clc
cli
cmp
test
pop
rcll
jb
aam
mov
out
xor
cmp
fstpt
cmp
add
shrb
lcall
mov
je
fs
addr16
lds
xchg
push
pop
scas
outsl
loopne
pop
outsl
in
mov
rorl
dec
sub
lret
lock
inc
and
fwait
cmp
xor
cmova
mov
xlat
push
in
outsb
mov
xor
pop
inc
add
mov
push
dec
jo
and
gs
sbb
sub
or
or
sbb
push
jmp
cmp
repz
jae
out
pusha
sbb
dec
lock
bound
mov
add
fs
add
mov
mov
movsl
push
imul
nop
mov
je
insl
sub
out
stos
mov
repnz
les
mov
scas
jl
mov
jg
fbld
cmp
add
loope
in
mov
dec
mov
out
outsl
and
loopne
imul
jmp
popa
push
shrb
out
xchg
rclb
test
jecxz
sub
add
lret
pop
sbb
fimuls
popa
adcl
jns
push
mov
inc
fisubs
filds
xchg
out
rclb
jge
adc
lods
xor
sbb
adc
loope
cmpsb
sti
pop
cmp
nop
lcall
cmp
idivl
or
inc
lret
mov
out
sub
xchg
push
in
movlps
or
lcall
push
ljmp
and
jo
dec
movsb
movsl
xchg
pop
pusha
in
xchg
in
fwait
dec
add
loop
pop
fdivrl
insl
test
dec
into
out
xchg
insb
das
pop
inc
sub
cmp
jle
iret
mov
rcrl
pop
dec
roll
pop
cmp
push
lahf
das
adc
in
push
ja
in
or
js
jecxz
push
inc
xchg
pop
jmp
scas
mov
jnp
loop
les
jae
jmp
cmp
rorl
mov
jno
lds
lahf
xchg
lods
push
jl
lea
outsl
leave
mov
mov
jmp
jmp
ds
int3
lret
xchg
aam
push
daa
ljmp
jle
js
push
push
add
cmc
enter
mov
or
sbb
sarb
fildll
cltd
andb
aas
inc
push
xorb
imul
cmp
enter
dec
addr16
in
cwtl
lods
sbb
ja
shrb
mov
scas
cmpsb
mov
insl
dec
das
jmp
sbb
cld
pop
popa
pop
pop
imul
and
sbb
and
mov
mov
add
push
cli
pop
mov
test
xor
xchg
jae
xchg
shlb
mov
pusha
mov
pop
or
rclb
jmp
or
cmp
jge
mov
es
push
cltd
int
adc
insl
movsb
push
adc
sbb
sbbb
hlt
mov
scas
stc
lcall
les
nop
or
jecxz
jae
push
insl
popf
add
dec
mov
arpl
rolb
jns
jns
dec
mov
je
into
add
lcall
int3
add
fstpl
xorb
daa
dec
insb
mov
lcall
add
movsb
push
cmpsl
ss
lods
add
sbb
inc
aaa
dec
mov
pop
loop
pop
dec
nop
es
inc
mov
cld
add
xlat
outsl
xor
mov
js
fisubrs
mov
fldcw
stc
mov
stos
or
inc
and
xchg
sbb
lods
pop
movsl
fdivs
rolb
mov
fcmovbe
call
aad
clc
and
shlb
repnz
inc
jmp
and
adc
add
add
pop
mov
inc
in
dec
movsl
and
sub
fwait
in
into
inc
or
imul
imul
sahf
push
outsb
test
lods
shld
dec
daa
ror
subl
pop
ficoms
movsl
mov
cmp
add
dec
cmc
fstl
aam
pop
mov
lret
testb
adc
pop
inc
jge
cmp
cwtl
frstor
and
or
jns
stos
fsub
mov
push
xchg
mov
xchg
inc
pop
push
cmpsl
push
je
aam
jg
js
xor
repnz
jle
hlt
fisttpl
loopne
jl
mov
mov
call
push
repnz
std
andw
rorl
repnz
je
out
andl
shl
movsl
push
mov
or
or
and
sbb
xor
mov
mov
add
rol
iret
fcmovbe
fcmovne
mov
scas
rcrb
and
xchg
jle
js
dec
add
dec
das
pop
or
xor
mov
inc
icebp
dec
bound
pushf
adc
idivl
cmp
inc
or
sahf
add
xor
adc
mov
fistpl
lahf
cmp
or
dec
mov
adc
lret
sbb
lea
jne
adc
fildl
xchg
mov
adc
ret
cmpsl
xchg
mov
mov
lret
stos
outsl
icebp
addl
push
xchg
shrl
in
inc
lcall
mov
jecxz
mov
jg
ficoms
fcoml
cs
jge
sub
and
std
pop
sti
ss
adc
in
arpl
jns
js
adc
jle
aad
and
daa
push
mov
shll
jb
jl
mov
nop
mov
sbb
add
std
pop
or
pop
fcompp
rolb
dec
push
mov
mov
mov
cmpsl
lcall
jnp
inc
dec
jb
mov
push
vpaddd
adc
mov
inc
jl
xchg
addb
sbb
scas
loop
fdivl
sti
fs
jecxz
xor
adc
addr16
rcrb
stc
ret
fistpl
pop
inc
mov
scas
or
pop
add
es
push
push
inc
xorb
loope
fsubp
movl
jno
cmp
fistpl
or
jnp
pop
pop
mov
xor
inc
stos
aas
imul
mov
ret
or
or
loopne
stos
mov
pop
imull
mov
scas
mov
and
add
cmp
cmpb
and
mov
push
ret
xlat
xchg
sbb
cld
mov
sub
xlat
cli
inc
aam
aad
push
inc
pop
popf
cmpsb
cmpb
repz
inc
idiv
cltd
or
data16
js
jg
xor
dec
stos
lret
subb
lret
jmp
sub
out
sub
and
ud2
or
pop
inc
into
sbb
push
pop
add
test
push
mov
pop
mov
push
sbb
icebp
faddl
hlt
push
cwtl
or
or
pop
enter
aaa
lahf
stc
mov
dec
push
xor
data16
and
cmpsb
cli
push
ja
stos
sbb
in
pop
add
hlt
mov
inc
pop
ret
mov
add
cmp
jne
mov
xor
add
mov
mov
xor
jmp
xlat
cmp
fcmovne
push
lcall
sub
js
jno
inc
and
cmp
out
sbbb
jbe
and
aad
lods
push
movsb
xchg
xor
mov
xor
sbb
mov
lock
mov
sbb
inc
dec
push
pop
inc
mov
imul
push
or
mov
add
std
push
fsubl
popa
mov
test
pushf
dec
mov
mov
inc
ret
repz
xchg
mov
rcrb
cmp
aam
add
in
or
scas
in
inc
inc
lret
xor
xor
shl
fildl
adc
mov
mov
pop
adc
lret
cmp
mov
sub
push
dec
mov
push
push
aam
or
insl
shlb
clc
mov
jg
in
adc
adc
out
adc
dec
loope
push
jge
popf
adc
popf
repnz
pop
vunpcklpd
sbb
fisttpl
or
imul
repnz
shrb
adc
lods
fnstcw
cltd
mov
lret
push
xor
jns
jg
pop
fiadds
stos
mov
mov
jge
lcall
loope
sti
mov
mov
in
mov
jno
mov
sub
int
jecxz
rcrb
push
sbbb
out
sub
mov
dec
int3
insl
sbbb
sbb
gs
pop
repnz
mov
fistps
or
clc
cmpsl
shrl
outsb
inc
lods
pop
imul
lock
sub
add
mov
mov
or
mov
and
gs
mov
aas
mov
mov
aas
sbbb
lock
movl
stos
fstpt
mov
cmp
fisubrs
push
inc
lahf
inc
xchg
orl
in
or
addr16
fisttps
pushf
fisubs
xor
test
outsl
mov
xchg
dec
pop
cmpsl
dec
add
cld
and
call
inc
adc
pop
int3
test
shlb
ds
cmp
pop
into
jbe
fcmovb
fstps
cmpsb
cwtl
cmp
mov
and
mov
lahf
xchg
mov
es
int
iret
mov
cltd
daa
rolb
in
jb
cmp
lret
push
add
mov
jmp
ret
xlat
leave
rcr
rcr
xlat
cmp
outsl
inc
sub
xchg
jle
js
push
or
push
bsf
jmp
negl
inc
imul
sbb
push
push
fsubl
lret
nop
and
cmpsl
mov
sub
out
or
cld
pop
xlat
mov
push
xchg
dec
mov
shr
bnd
or
mov
mov
enter
jns
inc
xchg
gs
sub
push
push
cmp
daa
imul
lds
sbb
loope
adc
scas
fisttps
push
xor
aam
sbb
je
mov
rcrb
roll
pop
or
icebp
rol
loopne
push
loop
pop
loope
push
mov
rorl
adc
stos
jecxz
outsl
cmp
sbb
push
pop
pop
inc
mov
fists
push
imul
fadds
or
inc
dec
jp
scas
pop
push
shlb
dec
loope
cmpsl
xor
fiaddl
fldcw
cmp
cli
jl
fwait
or
jbe
pop
cmpsl
out
inc
es
push
push
loop
xchg
dec
cmp
int3
bound
pop
cmpsb
jns
mov
addps
adc
in
fildll
stos
rolb
sti
pushf
mov
shll
mov
dec
inc
aam
adcb
stc
lds
or
out
mov
ret
lret
mov
xor
lahf
scas
scas
mov
mov
shl
add
dec
aaa
or
idivl
mov
ljmp
xchg
fidivrs
mov
mov
mov
ret
ljmp
gs
lcall
test
mov
loop
divb
test
add
movsl
popf
out
in
gs
xchg
mov
mov
les
pop
mov
xchg
pop
cmp
inc
pop
push
sub
je
cmp
nop
hlt
movsb
sahf
leave
mov
mov
lea
or
ds
fldl
cld
cmp
sahf
push
pop
cltd
mov
stos
cmp
mov
jge
mov
fcmove
mov
rclb
xchg
pushf
mov
not
data16
test
jae
into
mov
insb
and
xchg
xchg
js
inc
push
sub
aaa
clc
icebp
lods
and
fstpt
sub
scas
mov
cmp
loopne
push
mov
out
das
imul
mov
repz
clc
dec
push
jae
jne
pushl
call
mov
xor
pop
jmp
rcl
rcl
rcl
and
rolb
rcll
loop
jg
xchg
jle
js
inc
jb
or
adc
mov
or
cli
in
cmpsb
ljmp
sbb
sub
add
daa
pop
inc
push
lret
pause
stos
jmp
cmpsb
jo
pushf
push
xor
and
mov
ret
jecxz
pushf
mov
adc
push
sbb
and
sti
lods
mov
mov
add
xor
orl
cwtl
xchg
or
mov
jo
sub
xchg
movsb
fisubrl
sub
scas
mov
mov
mov
and
sbb
mov
jg
ficomps
aas
mov
mov
ja
jae
inc
testl
jb
movsb
cmp
enter
xchg
inc
popf
pop
jbe,pt
xchg
aam
jmp
or
jae
add
into
test
in
std
pop
lds
popf
cmpsb
pop
inc
jb
lods
mov
sbb
cld
push
mov
push
xor
mov
and
movsl
cmp
ret
fsubrl
aad
addr16
out
jg
pop
pop
jg
test
in
ret
jno
addl
and
insb
and
add
shrw
ror
adc
push
mov
pop
leave
push
mov
je
mov
popa
sbb
imul
cmp
ss
inc
les
roll
es
xchg
into
xchg
pop
and
or
std
jns
sti
mov
adc
es
scas
dec
push
xor
mov
out
fsubrl
dec
mov
mov
sti
out
mov
jns
xchg
aaa
cltd
jge
jmp
std
cmp
sbb
xor
test
dec
int
mov
jne
scas
sub
push
push
fwait
outsb
divl
xor
push
sbb
xor
fistpl
jmp
push
aad
lcall
in
cltd
lret
imul
dec
ret
imul
aam
push
int
pop
in
lret
cli
inc
in
test
push
cmp
mov
and
mov
inc
adc
bound
idiv
imul
cmc
pop
mov
movsl
mov
push
sarb
ret
push
push
imul
sarl
in
lds
jecxz
adc
dec
movsl
out
push
pushf
dec
pushw
lret
mov
push
stos
dec
add
dec
cld
out
xlat
cmpsl
push
xor
jbe
sub
pop
mov
add
ret
mov
xor
scas
mov
or
pop
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
dec
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
mov
mov
add
xor
cmp
jne
mov
mov
jmp
ror
xlat
cmp
jns
sub
mov
sub
js
nop
add
xchg
and
cmp
ja
pop
xchg
lahf
adc
add
fwait
mov
pop
into
pop
push
scas
pop
xor
push
adc
sub
lods
aam
hlt
adc
ret
sbb
push
xchg
add
incl
push
imul
mov
mov
xor
sbb
ret
mov
setg
out
mov
test
scas
nop
and
aam
push
xchg
outsl
mov
inc
cmp
pop
push
mov
and
and
fisttps
mov
mov
pop
push
loopne
jg
and
movsl
push
jns
pop
out
ret
mov
or
or
add
das
dec
mov
mov
jbe
cmp
test
cmp
stos
mov
loop
cmova
movsb
stos
fiaddl
and
mov
sub
add
sbb
xchg
pop
mov
push
mov
pop
push
cld
xchg
lahf
pop
mov
mov
addl
mov
adc
mov
push
jp
dec
adc
fs
jle
dec
mov
adc
shll
xchg
xor
pop
fsubl
mov
dec
test
cmpsb
mov
or
mov
nop
xchg
outsb
loope
xchg
pushf
xchg
arpl
cltd
or
les
enter
lods
jmp
or
adc
in
lock
mov
xchg
data16
push
std
enter
clc
push
outsl
out
xchg
xchg
sub
fisubrl
aad
add
pushf
jg
sbb
xor
outsl
cmp
xchg
jp
outsb
not
inc
aad
das
mov
add
or
sbb
pop
jge
add
pusha
in
jle
lds
lods
jae
and
leave
mov
add
outsb
inc
fcompl
xchg
cmp
push
andl
xchg
out
imul
adc
jbe
inc
add
jmp
cmp
aad
aad
popa
adc
mov
in
add
jg
add
mov
leave
pop
sub
movsb
xchg
clc
push
aad
or
bound
inc
or
mov
scas
stos
jge
inc
outsl
cmp
sbb
icebp
scas
xchg
ja
inc
cmpsl
mov
dec
int3
in
add
popa
mov
in
jo
and
ja
adc
mov
leave
imul
insb
inc
pop
add
sbb
aas
jmp
rclb
jle
cmc
andb
shll
shr
ss
in
in
adc
mov
xor
loope
jl
push
imul
sahf
xchg
xor
pusha
mov
in
cmp
sub
sub
cwtl
fidivrs
mov
dec
out
inc
dec
xchg
and
fildll
xchg
mov
adc
outsl
sub
repz
fistpl
test
xchg
add
adc
movsb
loope
push
int
mov
xchg
push
mov
lods
push
dec
aas
mov
pop
cmpsb
scas
mov
jle
mov
mov
sti
mov
aas
clc
mov
sub
mov
sbb
xor
and
cmp
xchg
inc
stos
cmp
fwait
popa
xor
xchg
xchg
daa
push
adc
int3
pop
mov
mov
push
mov
inc
adc
fwait
arpl
jmp
dec
fsubrs
outsb
and
sub
cli
dec
xor
pusha
enter
lret
test
testl
cmp
js
test
and
xchg
outsb
cmp
or
test
sbb
dec
std
dec
pop
xchg
int
adc
or
fcomip
repnz
pop
pop
mov
xchg
jb
stc
adc
xchg
icebp
xchg
out
or
test
inc
ljmp
dec
add
inc
pop
sbb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
jmp
cmp
int3
leave
fnstenv
or
pop
adc
jg
add
and
test
lods
xor
ss
outsl
clc
sahf
lods
mov
test
out
jmp
and
aas
jnp
push
jo
int3
call
loope
rcr
add
inc
cld
push
add
xlat
inc
jns
andl
test
aaa
test
lods
mov
lods
call
stos
js
mov
xchg
lods
shl
ljmp
mov
cmc
cwtl
push
push
lret
gs
cs
push
jae
stc
shld
inc
cmp
jnp
add
sbb
mov
outsb
fsubrs
nop
inc
setle
fistl
loopne
jecxz
xor
loope
push
sar
jnp
cmp
mov
jns
popa
mov
inc
mov
sub
inc
aad
lahf
xchg
cmp
or
dec
pop
jnp
imul
nop
enterw
in
sahf
daa
dec
cld
pop
xchg
push
cmpsb
test
test
push
push
xor
xor
clc
ljmp
push
lret
mov
mov
sbb
data16
out
adc
mov
inc
mov
adc
inc
fbld
pop
jl
or
daa
cmp
mov
mov
into
mov
test
popa
mov
sbb
mov
aad
jge
sbb
aaa
sarl
pusha
jo
out
or
cmp
je
jnp
fistpl
add
add
mov
fcompl
mov
xchg
and
and
sub
daa
hlt
pop
push
add
leave
aas
xchg
add
inc
mov
xchg
int
mov
inc
add
pop
jecxz
lds
lret
inc
pop
cli
mov
jno
sbb
addr16
shlb
xchg
shrl
or
mov
add
xorb
jmp
ret
gs
push
pop
and
sahf
icebp
dec
int
ficoml
fnstenv
add
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
adc
mov
inc
mov
andl
xor
orl
add
movl
mov
not
movl
mov
movl
mov
mov
push
movl
mov
mov
cmp
movl
je
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
jmp
ret
ret
leave
lret
lcall
aaa
jg
jnp
js
sbb
add
cmpb
cmp
adc
mov
or
jmp
mov
jbe
mov
dec
and
dec
xchg
mov
into
dec
scas
stos
test
cmp
inc
je
xor
repnz
loope
aam
push
lods
int
sti
faddp
ss
add
add
add
mov
enter
int
shlb
add
adc
popf
test
fucomi
xchg
enter
in
sub
sbb
cmp
xchg
jge
jbe
cmpsl
sti
repnz
insb
loop
or
fcoml
push
repz
xor
gs
inc
cmpl
pop
xchg
lock
push
adc
jg
daa
push
stc
mov
pusha
inc
jne
shl
pop
cmpsl
xchg
fs
xchg
pop
xor
sbb
adc
outsl
loop
ljmp
inc
mov
stos
add
mov
cmp
push
cld
sub
inc
jne
int3
movsl
outsb
test
adc
jge
mov
dec
data16
jne
stc
add
pop
xchg
add
adcb
mov
jmp
or
shrl
jae
push
scas
rorl
dec
mov
sub
jne
insb
inc
add
pushw
pop
lods
fs
lret
pop
adc
es
pop
mov
jne
movsb
out
orl
jmp
enter
fcoms
test
test
dec
jno
and
cmp
inc
cld
lcall
inc
fidivs
xlat
mov
xchg
scas
pushf
or
mov
sub
sbb
daa
test
xor
add
push
cmp
sub
leave
add
or
cmp
loop
pop
out
in
jnp
xor
sub
mov
sbb
repnz
or
sub
mov
cmpl
cli
ret
dec
pop
inc
jp
sbb
mov
push
jl
in
mov
mov
push
shrb
adc
pop
pushf
mov
push
mov
mov
leave
xor
pop
in
orb
pop
push
push
jmp
adc
adc
inc
lods
hlt
add
xchg
cmp
das
or
sub
pop
mull
adcb
cld
inc
adc
std
jb
mov
inc
jno
cwtl
pop
mov
imul
adc
aas
dec
add
std
vmovaps
jo
lret
cmpsb
popa
lret
pop
ror
enter
adc
adc
test
adc
xchg
cmp
int3
fcompl
lds
add
jg
xchg
push
pop
repz
jne
adc
aad
add
add
mov
insb
stos
rclb
push
and
xorl
sbb
add
push
gs
push
out
dec
pop
imul
mov
xor
xor
lea
xor
jmp
sarb
xlat
xlat
loope
pop
mov
jns
sbb
js
jle
js
das
or
xchg
or
gs
mov
add
lock
sarl
jl
in
movsl
inc
inc
add
rorb
push
js
pop
sti
sbb
mov
loop
or
push
shl
sub
data16
das
sbb
and
imul
test
es
jg
push
jg
ficomps
mov
xchg
push
or
sbb
imul
jns
inc
imul
xchg
dec
xchg
mov
loope
icebp
lods
sub
xchg
fcmove
jg
mov
mov
ja
xor
and
cmpl
pop
test
aas
sub
inc
fdiv
add
sbb
aaa
dec
xor
jg
pop
int3
not
call
in
daa
aam
add
test
ret
pusha
and
cli
dec
mov
and
jmp
pop
insl
enter
sbb
dec
dec
cltd
push
dec
sub
cmp
or
imul
fldcw
push
popf
jle
mov
movsb
and
ficoms
inc
test
jo
push
imul
insl
mov
cs
sub
sub
cli
or
arpl
scas
cltd
pop
lock
push
mov
cmc
mov
jg
aam
jnp
jno
lods
inc
js
int
mov
inc
sahf
sbb
add
mov
add
lock
cmp
mov
fs
lcall
fsubl
movsl
into
ret
jl
inc
pop
inc
cmp
test
or
mov
out
sbb
sub
cmp
mov
pusha
icebp
jo
daa
ljmp
pop
inc
adc
and
stc
stc
dec
mov
dec
push
cli
sub
out
rol
pop
jp
xor
mov
sbb
andb
pop
icebp
dec
dec
ds
es
lret
adc
xor
mov
in
out
inc
xchg
sub
cld
and
sub
pop
inc
rorl
cmp
pop
sub
rcll
hlt
push
lcall
mov
and
pop
test
mov
pusha
pop
outsb
test
loop
mul
inc
ja
dec
pop
jae
mov
mov
in
cmpl
pusha
mov
loope
xchg
cmpl
std
ss
repz
push
into
cmpl
sarl
xorl
cmp
lock
enter
xchg
sahf
mov
jmp
arpl
mov
out
out
mov
sub
dec
adc
xchg
nop
stc
adc
sub
xchg
ret
mov
sahf
insl
ss
adc
and
add
and
mov
sti
mov
lods
stc
push
scas
pop
mov
shlb
sub
inc
stc
jmp
jmp
int3
les
aam
ror
mov
inc
fcmovu
adc
jg
jnp
js
pusha
rcrl
jle
xchg
shll
dec
sbbb
pop
push
mov
mov
xchg
daa
jae
insb
push
cli
mov
mov
lock
jo
shr
xchg
and
xchg
cmp
leave
push
in
adc
nop
enter
push
mov
scas
aaa
xor
sbb
fildl
adc
inc
push
dec
push
lock
cmp
jno
ret
dec
inc
and
ret
sub
popf
lods
pop
ffree
mov
sbb
lahf
push
inc
and
push
pop
jne
jle
pop
xor
cmp
aas
test
scas
jnp
jmp
pop
xor
dec
stos
dec
push
inc
std
cmp
mov
rcrb
ljmp
mov
push
xchg
lret
jne
pop
jns
bsr
cmp
inc
sbb
sub
pop
rclb
adc
pop
push
test
inc
pop
cs
outsb
and
xor
dec
push
daa
dec
loope
and
test
push
inc
lods
ljmpw
add
pop
or
mov
jnp
fwait
inc
out
push
adc
scas
mov
ja
icebp
enter
cs
lret
jb
lret
jmp
sbb
gs
lahf
xchg
int
mov
fwait
jae
push
lock
jp
or
xchg
mov
jne
movsl
mov
dec
scas
lock
in
adc
mov
dec
push
adc
outsl
aas
insb
les
ja
in
out
mov
cmp
or
dec
notl
dec
jl
adc
lret
nop
pop
and
popa
stc
pushf
lock
pushf
adc
fsts
sti
add
inc
lret
insb
sbb
mov
xchg
es
mov
mov
divl
push
fnsave
cld
in
fwait
pushf
pop
cli
shll
cli
mov
pop
adc
ljmp
mov
xchg
iret
jmp
jbe
sbb
sub
inc
js
xchg
nop
sub
clc
and
cltd
mov
test
xlat
or
mov
dec
pushf
inc
ljmp
jl
pusha
dec
out
xchg
or
xor
xlat
push
fsts
add
inc
sub
xchg
xorb
pop
mov
inc
fwait
ss
stos
lods
dec
cs
cmp
fsts
mov
xor
adc
dec
adc
push
lods
sbb
dec
push
out
rclb
lcall
mov
ss
xchg
and
mov
push
int
jnp
fwait
mov
adc
xchg
loopne
pop
pop
dec
xor
stos
cmp
cmp
inc
sub
push
pop
or
sub
outsb
cmp
mov
sub
pop
fildl
ds
loopne
int3
out
loopne
mov
imul
jno
shrl
decl
jne
mov
mov
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
jmp
cmp
rcl
fcmove
test
sti
inc
pop
jg,pt
jnp
js
cmc
outsl
pushf
int
pop
mov
pop
aaa
enter
shll
jg
add
inc
or
sbb
jne,pn
adc
shl
fisubs
icebp
adc
cs
imul
in
add
into
adc
add
icebp
mov
dec
mov
push
jmp
stc
cmp
pushf
or
mov
loope
inc
negl
out
pop
int
popf
push
xor
pop
lods
stos
xchg
int3
outsl
adc
cltd
cltd
into
adc
ret
cli
dec
aam
lret
and
in
or
mov
and
int3
testl
mov
ja
sub
mov
inc
inc
jnp
cmp
fs
xor
and
in
lea
cmpl
hlt
movsl
dec
dec
xor
loop
adc
rorl
insb
aam
outsb
call
orb
mov
push
in
out
cmp
cltd
and
in
pushf
pop
inc
lahf
fcoml
push
ret
dec
sub
mov
and
jmp
and
xchg
andb
lods
jge
pop
adc
addr16
pop
jecxz
out
fbstp
mov
xchg
fnsave
lcall
jmp
shl
sbb
jae
pusha
out
jecxz
lcall
dec
rcrl
imul
sub
or
adc
xor
stc
cmp
test
jge
xor
stc
mov
stos
xor
add
pop
fcoml
nop
lods
insb
enter
cs
mov
sub
pmaxub
xor
pop
pop
rcr
les
fistpll
test
jae
loop
test
mov
movsb
sbb
mov
mov
xchg
sarb
push
adc
jg
mov
sbb
push
aam
push
mov
mov
or
dec
inc
movsb
mov
or
add
add
lret
or
jp
sbb
lock
shrb
jno
loopne
clc
mov
loop
sub
test
in
sub
nop
into
fdivs
lcall
fsubs
ret
sbb
test
dec
add
and
ret
loopne
movsl
mov
mov
push
sub
loope
xor
loop
test
push
aad
sub
ret
test
in
cwtl
or
daa
add
pop
pop
add
or
jge
jae
std
stos
out
inc
movb
jno
lds
les
add
cwtl
mov
in
sbb
cmp
push
int3
push
cwtl
push
adc
fcomps
ss
mov
popa
push
mov
jecxz
pop
xchg
pop
movl
mov
xor
pushl
mov
jmp
lret
into
ret
ret
lret
xor
stos
push
repz
jg
jnp
js
leave
lahf
clc
lods
dec
orl
mov
lcall
insl
jnp
jle
daa
or
sub
mov
mov
clc
add
sub
and
jp
jl
rcl
shrl
inc
push
iret
fistps
iret
les
mov
cmp
xor
in
insl
aaa
cmpsb
and
inc
decl
and
cs
pop
pop
mov
cmp
sub
shr
mov
lea
and
insb
add
jecxz
test
or
pop
xchg
outsb
ja
cmc
aaa
out
add
ss
test
testb
insl
pop
lcall
lods
imul
adc
and
pop
scas
notb
stos
push
pusha
out
int3
mov
push
sub
setnp
jnp
testb
add
push
inc
jbe
xchg
add
loopne
or
cmp
imul
xchg
aam
jb
test
lret
xlat
mov
imul
ret
sti
out
xor
mov
fdivrl
and
or
xchg
vfrczpd
aad
jns
and
sub
jae
mov
sub
adc
ljmp
lret
out
and
cmp
sbb
adc
cli
addr16
popf
add
mov
cmp
jo
and
daa
jmp
xor
inc
int3
fst
adc
sub
push
pushf
shlb
jnp
pusha
sub
inc
int
push
mov
test
or
push
push
cmp
add
stos
pop
movsb
stos
insb
fwait
adc
pop
arpl
out
nop
movsb
jo
lahf
dec
repnz
shl
daa
and
push
lahf
shrl
roll
pop
jnp
mov
popa
and
pop
cmpsl
or
enter
loope
daa
sbb
lret
lret
daa
daa
inc
mov
mov
cltd
adc
jmp
cmpsl
pop
in
or
jge
jle
out
lret
jae
testl
sbb
adc
scas
pop
outsl
cmp
add
push
lcall
jb
fcompl
inc
aaa
mov
insb
push
pop
pusha
jmp
fsubrs
popf
mov
repnz
nop
pop
inc
xchg
shll
es
xor
fbld
out
jp
cmpsb
mov
add
out
sbb
lods
push
mov
movsl
mov
pop
lahf
fadd
mov
and
push
jns
in
push
or
mov
mov
mov
and
mov
jmp
add
shlb
or
rcrb
adc
cmpsb
jge
and
cmpsb
adc
pop
lock
xchg
aam
mov
pushl
mov
jmp
lret
rol
leave
shll
scas
int
mov
jnp
js
push
outsb
or
pause
int3
cltd
fsubl
jne
popf
gs
inc
icebp
dec
or
push
cli
mov
jo
push
jg
or
xchg
outsb
push
lcall
stos
scas
rcll
lods
and
cmp
mov
pop
fimull
icebp
push
insl
arpl
stos
rclb
pop
fsubrp
ljmp
xchg
mull
fmuls
lret
push
test
pushf
dec
xor
in
cmp
mov
mov
and
fdivrs
xchg
lahf
popf
xchg
out
xlat
test
movsb
int3
das
jne
out
xchg
cmp
notl
dec
mov
mov
adc
stc
inc
ds
sub
test
dec
push
push
in
scas
aaa
or
or
ret
outsl
pop
inc
jbe
xor
xor
xchg
mov
xchg
mov
push
mov
xchg
jns
and
dec
enter
in
cmp
add
xchg
ljmp
arpl
adc
cmp
push
pop
scas
fdivl
xchg
icebp
aam
bound
add
inc
push
xchg
or
pop
je
add
scas
adc
jnp
xor
fmulp
je
add
cmpsl
call
inc
into
inc
mov
je
lea
sarl
jecxz
ret
movsl
add
jmp
test
jg
into
mov
lock
imul
jg
sarb
jo
mov
out
xorb
fsubs
lret
fisubl
dec
mov
in
loope
dec
cmp
outsl
sbb
bound
stos
pop
outsb
ss
ret
pop
shll
arpl
jecxz
cmpsl
mov
adc
das
std
ss
mov
fwait
arpl
insb
mov
js
mov
xchg
fidivs
fbld
dec
xchg
xor
push
adc
in
mov
rolb
cmp
sbb
stos
das
inc
dec
jns
xchg
bound
sub
mov
cmc
out
or
in
or
dec
sub
inc
lods
icebp
sti
fistpl
xchg
movsb
in
inc
sub
dec
xchg
cld
enter
pushf
and
dec
loope
xchg
movsl
or
dec
and
mov
jb
addl
cmp
xchg
dec
cmp
stc
jp
in
and
ja
repnz
insb
icebp
fwait
xor
leave
sub
leave
adc
iret
incb
sub
inc
pop
call
xor
push
into
mov
cwtl
and
ds
test
mov
jle
imul
xchg
xchg
addb
jg
in
push
in
adc
test
cli
push
shll
data16
pop
xor
sub
pop
cmpsb
cld
testb
dec
aaa
outsb
loop
and
mov
inc
cmpl
pop
out
clc
mov
nop
icebp
arpl
outsb
mov
jg
push
cmpsb
mov
pusha
sbb
pop
adc
pop
sbb
call
jmp
mov
leave
ret
push
mov
sub
jmp
rcl
ret
into
rcl
daa
jle
mov
cwtl
in
or
jg
adc
js
push
mov
je
xchg
bound
push
mov
pop
cld
or
lahf
popa
pop
imulb
push
punpckhbw
insl
xlat
xchg
add
xor
movsb
mov
push
and
push
sbb
pop
dec
in
ffree
push
sub
push
fsubs
mov
inc
add
out
xor
lds
cmpsb
aam
mov
sub
out
add
xor
jecxz
push
xlat
push
jbe
sub
out
int
fstl
cmpsb
adc
cmp
push
mov
push
lret
cmpsb
js
add
xor
push
ds
insb
mov
out
cmc
mov
lret
adc
cmc
jg
rcrl
pop
fimuls
addl
loop
sub
push
mov
push
pop
mov
out
add
or
pushf
dec
lahf
add
mov
xor
data16
or
mov
lahf
sbb
mov
call
sahf
sub
add
inc
outsl
aad
jmp
lods
adc
enter
nop
pop
inc
mov
out
rolb
or
icebp
jle
sbb
jp
lods
or
aad
icebp
add
jbe
mov
mov
add
dec
fbstp
out
push
jge
adc
dec
push
fisttpl
mov
pop
mov
adc
pop
dec
scas
inc
das
rol
mov
fidivrs
data16
test
cwtl
xor
shll
arpl
xor
mov
imulb
inc
cwtl
jnp
mov
jbe
ret
adc
xor
clc
outsl
imul
or
adc
cmpsl
ds
outsb
loop
int
push
fbstp
lret
repz
leave
ljmp
test
mov
cs
in
or
aam
popa
fidivl
bnd
xchg
sahf
cmp
dec
mov
sub
popa
jnp
movl
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
adcl
movl
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
and
push
add
mov
and
xor
movzbl
adc
mov
adcl
add
incl
mov
mov
push
movl
push
test
movl
je
jmp
lret
fld
scas
inc
adc
mov
shll
lret
jg
adc
js
mov
stos
push
xor
cltd
negl
dec
fwait
mov
fiaddl
ficoml
cltd
out
jo
out
cmp
pusha
gs
popa
fldt
add
outsb
mov
repz
lret
inc
inc
mov
fs
das
lods
in
sub
cmc
lahf
xchg
sub
pop
jmp
adc
mov
hlt
sahf
mov
xor
and
aad
add
insl
test
xchg
dec
push
out
insl
and
add
negb
jmp
cltd
sbb
lcall
pop
adc
sub
cwtl
test
pop
xchg
cwtl
dec
mov
aaa
cwtl
dec
data16
das
lea
in
loopne
jle
mov
rolb
mov
push
or
lds
pop
mov
out
jbe
push
cmp
xor
or
cltd
outsb
dec
in
roll
cs
add
lods
bnd
jp
sbb
or
cmp
clc
dec
and
movsb
iret
inc
cmpsb
jb
testb
pop
inc
imul
cwtl
mov
pop
mov
fwait
sub
xchg
jp
sahf
xor
lea
filds
addb
pop
pushf
ret
ret
inc
cmp
dec
dec
or
sbb
xor
loop
popa
jl
pop
loopne
in
jmp
and
jmp
or
into
lret
dec
and
scas
inc
inc
xor
into
inc
icebp
lret
mov
push
mov
out
test
out
inc
or
outsb
jmp
lds
call
xor
scas
ljmp
cli
fisubl
lahf
je
pop
dec
in
jns
gs
insb
mov
dec
fadd
push
cwtl
arpl
cmp
mov
sub
add
jle
xor
push
pop
test
loop
jmp
rol
push
lods
xor
push
shl
lock
push
rcr
iret
push
adc
mov
mov
imul
xor
mov
add
sub
mov
mov
notl
xchg
addl
jmp
iret
iret
xlat
xlat
iret
xlat
cmpsb
call
out
push
adc
js
and
jne
fs
dec
sub
and
lock
mov
les
xchg
je
xor
push
lods
mov
push
aad
test
dec
inc
mov
mov
std
ret
lea
icebp
loop
cmp
mov
cli
xchg
and
mov
data16
adc
xor
enter
mov
add
pushl
sbb
mov
imul
scas
fstps
xor
daa
es
jl
stos
popa
dec
jbe
and
insl
jo
lret
sbb
pushf
sbb
aam
loop
mull
pmaxub
xchg
cli
xor
pop
in
and
ljmp
test
push
mov
es
stc
inc
push
sbb
test
imul
jnp
and
hlt
or
mov
sbb
out
aam
xchg
stc
mov
aam
inc
in
xchg
push
ss
pop
dec
push
push
ds
out
pop
pushf
sbb
fmull
xor
mov
int
xor
xchg
cmp
mov
popw
mov
es
xor
rcl
push
scas
or
push
je
pop
inc
xor
test
fs
mov
push
adc
fnsave
addr16
xlat
and
std
xchg
shll
sbb
sti
add
cmp
imul
imul
dec
jle
les
push
xchg
mov
call
jne
pop
sub
sbb
fdivr
call
mov
xor
jnp,pt
insl
ror
out
enter
xchg
sub
or
xor
int3
fsub
inc
adcb
scas
fnstsw
dec
mov
push
stos
jnp
ret
idiv
lcall
divb
dec
push
jmp
inc
int
aad
mov
in
xlat
adc
xor
xorl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
adc
mov
and
mov
add
mov
mov
adcl
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adc
add
mov
mov
jmp
cmp
fcmovbe
aad
xorl
insb
int3
push
adc
js
cmp
test
cmp
mov
push
out
add
add
sbb
xchg
push
fldt
mov
iret
inc
adc
jecxz
sub
push
push
and
rcll
dec
inc
test
cmp
inc
loopne
ficompl
subb
mul
pop
mov
gs
and
enter
mov
dec
ret
sbb
insb
add
frstor
lcall
stos
ljmp
adc
add
inc
or
rorl
push
and
ljmp
cmpsb
mov
stos
rol
sub
jno
negb
lock
leave
mov
icebp
fimuls
sbb
lds
inc
jne
push
mov
and
or
pop
jbe
sub
test
icebp
xor
cmp
lds
std
lret
lret
pushf
lock
test
sti
test
je
fcomps
and
mov
into
out
test
add
xor
mov
pop
imul
icebp
std
mov
xchg
cwtl
mov
lods
rol
imul
es
repz
cli
das
dec
mov
idivb
aad
ret
decb
push
mov
mov
negb
push
mov
or
cmp
movsl
outsl
lahf
orl
fstl
movsb
faddl
fmull
imul
sarb
mov
or
mulb
divb
je
sub
sbb
popa
enter
aas
add
pop
push
or
std
call
cmc
in
jne
stos
xchg
in
arpl
jmp
xchg
push
xchg
sbb
in
enter
push
popa
inc
imul
in
cmp
loopne
int3
mov
pushf
sbb
lods
rol
inc
insl
scas
daa
cmp
jmp
lock
xchg
ret
scas
gs
shlb
fiadds
mov
mov
je
inc
mov
xor
sbbl
add
movl
cmp
movl
jmp
into
ror
leave
push
or
inc
test
lcall
js
push
dec
push
loope
and
loopne
push
xlat
mov
scas
stc
xchg
aam
ljmp
inc
fcomps
push
shll
fsubl
cmpsb
sahf
sahf
mov
jg,pt
das
jns
jns
cmp
dec
cmc
sti
les
mov
or
jno
ftst
fdivs
loop,pn
cmc
cmp
mov
dec
das
jp
repnz
int3
sti
std
lods
mov
sbb
pop
shll
mov
call
mov
inc
jne
fucompp
test
sbb
xchg
xchg
iret
jnp
sbb
and
daa
pop
sbb
jg
add
adc
sarl
ds
imul
xor
mov
loop
mov
in
mov
dec
call
out
je
out
imul
insb
jge
faddl
popf
arpl
pop
pop
dec
pop
imul
js
ljmp
test
lret
dec
jmp
repz
int
cs
fcomps
outsb
inc
in
mov
stc
jmp
mov
sbb
stos
stc
ja
nop
and
xchg
mov
int
xor
pop
into
jo
pop
xchg
outsb
add
push
jle
clc
popf
xchg
mov
cld
sub
cmp
rorb
inc
mov
clc
sub
cwtl
je
jmp
dec
popf
shrb
inc
adc
out
mov
lock
nop
lcall
cmc
or
aaa
rol
popf
add
xor
pusha
pop
aad
jp
aam
push
out
outsb
mov
jb
jge
repz
jns
inc
insl
dec
clc
mov
ja
xchg
stos
jno
mov
leave
pop
or
push
push
jbe
stc
stc
mov
lods
cli
ljmp
jg
dec
fisubl
insl
xchg
mov
push
cs
mov
add
outsl
lcall
sub
enter
test
add
add
or
add
dec
add
call
and
mov
jmp
aas
into
leave
int
into
fwait
orb
ds
adc
js
repz
call
sbb
cmp
es
lea
sub
arpl
xor
or
cmp
bound
ret
cwtl
push
cmc
ds
frstor
lock
jne
out
push
test
sahf
lock
xor
call
std
ss
test
inc
fimull
sub
jp
or
push
cmp
movsb
movsb
shll
mov
pop
adc
xchg
jge
sbb
push
mov
pop
pusha
adc
js
das
mov
xchg
xor
test
push
pop
xchg
dec
sub
adc
xor
mov
push
cmp
inc
or
xchg
std
inc
pushaw
data16
incb
aas
nop
popa
dec
mov
xchg
mov
inc
out
push
push
cwtl
in
lea
sbb
hlt
and
xor
js
dec
adc
push
push
sti
shll
shrb
xor
cmp
cmpsl
test
ja
inc
dec
pop
cmpsl
outsb
sub
notl
push
push
cmpsb
jge
mov
mov
mov
sub
jb
xchg
add
or
push
push
loop
mov
mov
test
sahf
cltd
jecxz
jbe
inc
pop
pop
mov
adc
fwait
imul
test
cmpsb
or
jbe
or
mov
jg
outsb
std
mov
test
sbb
daa
jbe
xchg
push
jae
lcall
xchg
xor
cs
ficoms
lcall
enter
inc
add
inc
dec
mov
adc
out
mov
je
inc
fs
shlb
jge
mov
clc
fnsave
push
push
dec
cmpsl
mov
push
mov
adc
jnp
dec
mov
ret
jae,pn
cli
rcl
imul
aaa
repnz
gs
and
inc
xchg
push
push
push
movsb
cltd
xchg
sbb
loopne
add
sbb
add
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
mov
movl
xor
add
cmp
movl
je
pushl
subl
pushl
call
jmp
les
iret
rcr
leave
push
push
in
je
lcall
adc
js
xchg
fnstsw
jmp
int
cmpsl
insb
clc
dec
and
lods
cli
and
dec
out
es
mov
pop
hlt
mov
sahf
pusha
fimuls
push
out
mov
insl
daa
pop
jb
testl
pushf
add
push
xor
test
frstor
cwtl
pop
push
push
gs
pusha
mov
aam
popa
jg
xor
repnz
insb
andb
jne
repz
add
aas
rol
adc
add
pushl
mov
scas
sbb
cs
mov
roll
or
js
dec
sub
leave
data16
hlt
lret
and
mov
xchg
pop
fstps
imul
int
rolb
inc
orb
jbe
fimuls
mov
mov
add
mov
js
stos
es
mov
sbb
lods
dec
or
lahf
stos
inc
cmp
add
fnsetpm(287
xor
adc
negl
popa
in
push
mov
add
adc
popa
mov
xchg
lcall
pop
jb
popf
out
mov
xchg
inc
cmp
pop
dec
cld
roll
clc
fwait
pop
fs
mov
dec
mov
flds
ds
dec
notb
das
sbb
fldcw
adc
mov
ja
inc
inc
cld
into
sbb
push
dec
fisubrl
jo
xchg
ljmp
lds
sub
aaa
dec
les
idivb
aas
dec
rolb
inc
f2xm1
pusha
xchg
sbb
fdivrs
push
mov
test
xor
mov
in
es
pop
mov
bound
pushf
cmp
fs
xchg
xorb
xchg
cmc
sbb
rorl
insl
xchg
insb
clc
and
sub
sub
adc
sbb
rolb
xchg
fmuls
push
sub
add
sbb
add
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
jmp
lret
cmp
rcr
leave
mov
and
mov
xlat
jg
adc
js
sub
scas
sub
ret
and
mov
and
mov
inc
jo
dec
fwait
mov
sti
out
adc
inc
in
mov
call
add
xor
or
cmp
out
inc
fsubrl
pop
xchg
in
cld
ds
stos
rcrl
loop
lds
ret
pushf
xor
push
jl
test
imul
xchg
in
jge
push
mov
mov
out
sbb
jno
mov
lds
shrb
mov
push
adc
testb
test
es
arpl
mov
js
call
sub
rolb
jl
test
call
sbbl
mov
ror
sbb
fnstsw
inc
shld
fwait
mov
mov
loope
orb
push
fisubs
dec
comiss
pop
mov
das
or
cmp
movsb
push
setle
add
aaa
scas
pop
xchg
xchg
addr16
dec
ljmp
push
mov
xchg
test
jne
add
inc
xchg
mov
push
outsl
dec
rorl
fidivl
insl
call
popa
dec
push
int
mov
jle
jo
aas
or
add
adc
sbb
jne
cmp
ja
in
push
in
dec
scas
adc
mov
icebp
stos
xorl
into
cld
cmp
xor
or
pop
xchg
mov
cltd
push
out
frstor
pop
movsl
or
and
xchg
aad
xlat
sub
jmp
fs
xor
mov
push
insl
jle
dec
out
arpl
fimull
mov
or
cmc
fdivs
out
add
adc
test
cli
std
sbb
pop
ror
cmpsl
test
ret
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
rcl
xlat
int3
aad
fcmovnu
ss
inc
subl
fdivrl
dec
aad
js
jle
js
lret
push
test
cltd
shrb
cmpsl
test
mov
xor
sub
dec
mov
push
jmp
sbb
stos
xor
ret
cmp
lret
mov
or
mov
lret
mov
jl
ret
pop
mov
push
push
movsb
in
add
mov
lods
add
mov
pop
add
rorb
and
push
xchg
dec
add
lock
neg
mov
or
add
lds
mov
jecxz
imul
pop
mov
lods
and
shrb
imul
jbe
cmp
xchg
adc
in
rcrl
cld
repz
adc
cmp
xorl
in
idivl
sbb
pop
xor
add
sbb
sbb
cld
lret
inc
cmpsb
push
imul
push
and
leave
ss
and
dec
cmc
add
pop
jl
sub
push
pop
mulb
push
push
mov
hlt
mov
into
lret
mov
addr16
aas
addr16
pop
cld
das
loopne
in
xor
mov
xchg
repz
es
lods
enter
mov
into
jmp
cltd
inc
aam
fldl
jp
push
cmpsb
inc
stos
jp
xor
sub
hlt
push
hlt
inc
popf
sub
mov
adc
sbb
and
sarl
or
mov
xchg
fmull
insb
sarb
ss
cmp
gs
inc
jno,pn
int
push
or
xor
sub
mov
push
jge
pop
mov
scas
push
shr
repz
xchg
jb
stc
test
lods
mov
icebp
sub
shlb
int3
and
mov
movsb
iret
out
movsb
mov
fadds
cwtl
sbb
or
dec
sub
dec
pop
addr16
cmp
cmp
cwtl
dec
sbb
xchg
in
push
mov
sbb
dec
ja
jno
aas
cld
adc
hlt
pop
cmp
out
in
pop
push
dec
pop
jmp
rcl
aas
leave
cmp
pushf
mov
cmp
jg
adc
js
out
iret
clc
dec
aas
cmpl
dec
out
jmp
push
and
xchg
je
sub
jmp
mov
lea
pop
or
jnp
adc
pop
stos
pop
push
shll
jg
loope
add
addb
out
imul
inc
cmp
rcr
cwtl
hlt
fsub
inc
mov
dec
and
and
das
ror
inc
sub
andl
dec
sub
mov
cmp
sbb
jle
pop
pop
xchg
mov
insb
sti
mov
enter
mov
inc
fisubrs
mov
fiadds
movsb
jbe
loopne
adc
push
mov
push
jl
adc
jmp
jecxz
cwtl
mov
scas
jno
cltd
or
les
push
sub
mov
fcomps
dec
call
mov
dec
andl
movsb
lahf
out
aam
jecxz
jg
xor
jp
in
aas
jns
pop
scas
into
sti
andl
gs
add
jne
and
stos
push
dec
pop
and
out
test
sbb
stos
out
imul
loope
jnp
mov
lcall
jecxz
clc
dec
test
outsb
mov
or
add
in
addr16
mov
movsl
inc
std
and
xchg
rcrl
insb
cli
insb
add
adc
mov
push
shrl
mov
mov
mov
jmp
add
sub
jno
add
loope
enter
leave
rcrl
ja
inc
push
jo
xlat
jo
divb
rclb
add
shlb
dec
cmc
enter
inc
inc
test
push
pusha
and
pop
cltd
xchg
xorl
into
mov
push
and
push
xchg
cmp
inc
jl
mov
fbld
sub
pop
xchg
adc
or
add
push
cli
es
jmp
shll
js
pop
sub
xor
mov
negb
lret
sub
jmp
ret
aas
fxch
rcr
mov
scas
pushf
icebp
js
jg
adc
js
cs
mov
cmp
mov
addr16
js
pop
mov
aam
mov
dec
repnz
gs
std
or
cmp
es
or
movsl
sub
mov
mov
inc
sbb
xchg
lods
sub
lret
cwtl
imul
mov
xchg
bound
arpl
and
push
xchg
ds
lret
test
shrb
jo
out
jl
adcl
add
or
into
xor
sarl
pop
mulb
adc
and
in
jae
cmc
inc
leave
aam
mov
mov
dec
add
xor
fadds
pop
stos
pop
int3
shll
in
mov
int
dec
lahf
push
dec
mov
loope
addr16
and
add
outsl
add
jecxz
out
out
cmp
rclb
fnstcw
sbb
daa
xor
sub
cmpsl
mov
loope
xchg
pop
icebp
fmul
mov
addr16
add
add
and
scas
jo
aaa
movsb
nop
xchg
mov
outsb
call
jnp
cltd
push
add
cwtl
jle
out
loopne
cmpsl
cmp
stc
sbb
mov
inc
pop
push
push
jnp
adc
push
addr16
test
pop
inc
insb
pop
xchg
pop
pop
pop
cmpsb
or
pop
cmp
inc
mov
push
rcrl
push
aad
shl
lock
inc
fimuls
test
dec
xchg
rcr
add
inc
stc
jle
stc
movsb
adcb
sar
mov
ret
in
iret
add
clc
sub
add
mov
in
fsubrl
arpl
scas
adc
mov
mov
add
push
clc
lcall
mov
xchg
loope
fsubrs
lret
lret
jo
insb
sbb
hlt
mov
push
jg
dec
mov
loopne
mov
sbb
pop
in
test
inc
jbe
aad
ja
mov
ret
scas
and
int
inc
mov
push
lock
fisubrs
rolb
adcl
xor
sub
iret
xchg
xor
add
int
int
fnstcw
insb
jb
adc
jg
adc
js
movl
pop
or
enter
inc
mov
repnz
mulb
push
push
xchg
add
cmp
xchg
insl
sbb
cmp
jae
ja
pmulhw
lods
add
aam
mov
and
mov
imul
into
inc
std
mov
enter
xchg
adc
lcall
movsb
mov
or
xor
mov
das
push
out
pop
push
rol
pushf
loopne
and
push
aaa
out
scas
pusha
mov
add
jge
std
int3
stos
into
fistpll
sub
push
cmp
lret
insl
mov
inc
aad
sbb
cmp
dec
stos
test
es
hlt
dec
jg
leave
cmpsl
pop
fisubs
loope
ret
inc
imulb
add
lods
pop
cmp
or
pop
fs
movsb
test
sub
fisubrl
sbb
push
clc
add
cmp
push
add
out
cli
ret
lds
cli
ja
or
dec
aas
dec
xor
xor
fisubrl
cmp
push
inc
sbb
scas
scas
in
mov
fisttpl
cmpl
jb
stos
imul
push
ljmp
imul
mov
rcrb
incb
sahf
and
mov
mov
ret
imul
cmpsb
call
dec
inc
test
jle
mov
das
popa
mov
xchg
cs
sbb
imul
mov
pop
inc
fsub
movsb
fnstcw
jns
cmpb
clc
fsubl
xor
jmp
stc
sbbl
jnp
pop
push
sbb
lahf
inc
aas
pop
hlt
dec
jl
fdivrl
das
fldenv
jb
dec
ss
cli
out
lock
lds
mov
pop
imul
mov
and
and
xchg
lea
sti
or
xor
insb
mov
pop
jle
mov
jmp
iret
enter
fcmovnu
xlat
push
shlb
inc
sub
jg
adc
js
pop
jno
xchg
jmp
and
and
mov
dec
xor
mov
mov
push
sub
xchg
xchg
int
stos
cmp
lahf
fidivrl
mov
cli
jg
lods
sbb
jnp
stos
leave
sub
push
sahf
cmpsl
call
lods
pop
ss
pop
rolb
in
in
repz
mov
xor
test
and
push
lods
mov
and
in
mov
cmp
push
push
mov
not
test
das
ljmp
mov
movsl
inc
push
or
ficoms
jge
mov
pop
stos
push
clc
or
cmp
xlat
ss
call
stos
int
test
jb
push
inc
sub
flds
lock
sub
rorl
jge
push
stos
mov
push
or
dec
sub
imul
fdivrs
mov
mov
pop
xchg
cltd
fisubl
data16
inc
push
popa
gs
scas
or
movsb
imul
jnp
repz
cwtl
cmp
and
in
push
cmp
pop
rclb
dec
adc
pop
push
adc
dec
inc
jmp
call
or
xchg
or
inc
adc
sub
adc
lret
aam
inc
stos
xchg
add
sti
inc
fwait
push
decl
cmpsb
adc
stos
fcomp
dec
cmp
cmp
dec
sahf
adc
out
xor
call
pop
jg,pt
and
pop
mov
fisubs
ds
lcall
inc
push
xchg
punpckhwd
rol
pusha
xor
or
push
cmp
pop
scas
adc
xor
inc
jge
dec
inc
mov
sub
shrl
push
pop
enter
sbbb
es
jl
jae
or
xchg
cmpsl
xor
sar
cwtl
mov
mov
adc
clc
or
pop
test
lea
fs
fildll
repz
and
sub
jbe
pop
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
jmp
int3
lret
fxch
leave
mov
push
hlt
push
cmpsl
cwtl
cld
shl
js
jle
js
fiaddl
subb
xor
push
ret
mov
push
out
mov
mov
in
leave
push
push
mov
scas
dec
xchg
sub
push
test
lds
push
shll
call
adc
jp
jno
jae
lret
int
repnz
inc
push
lea
push
dec
mov
out
mov
cmpsb
add
pusha
add
jle
mov
adc
push
lcall
push
adc
clc
fs
sarl
stos
dec
imul
je
push
jb
imul
pusha
and
pop
pmulhuw
cmpsl
addl
or
mov
xchg
mov
mull
xor
lahf
adc
shlb
adc
xchg
jmp
push
adc
pop
loopne
sarb
ret
mov
rolb
or
mov
sbb
xchg
add
jge
je
ret
pusha
dec
push
fwait
daa
sub
shrb
xchg
cmp
add
mov
aaa
out
mov
adc
jg
movsb
dec
roll
aas
pop
mov
addr16
div
or
or
adc
adc
ficomps
mov
js
push
mov
sahf
jle
mov
mov
fimull
xchg
pushf
xor
popa
lods
fstps
stos
fdiv
movsl
movb
out
jp
xchg
in
test
xchg
mov
pop
test
pop
mov
mov
fldenv
inc
mov
sbb
call
out
aaa
xchg
push
jb
push
dec
xchg
push
pop
push
jmp
push
and
pusha
stos
aad
or
push
into
insb
js
adcl
lret
mov
mov
aaa
lds
push
mov
xchg
fnsave
ret
insb
jp
xor
mov
mov
and
test
or
adc
out
or
ja
jl
dec
filds
roll
jmp
int
int
rcl
int
cmp
mov
fsub
jg
adc
js
inc
ds
ljmp
mov
dec
pop
clc
mov
aas
cmp
cmp
mov
xchg
nop
bound
jno
lock
cmp
daa
subl
xor
mov
jnp
cmpsl
iret
ja
test
loop
dec
push
jns
outsb
xorl
enter
sub
mov
mov
repz
cltd
add
mov
popf
mov
mov
xor
mov
lds
adc
imul
mov
cmpsl
jmp
mov
movsl
lret
cmc
les
push
cmp
mov
lcall
out
inc
add
push
push
stos
int3
out
inc
mov
pop
test
cwtl
data16
cli
loope
sub
fistpll
jle
outsl
fsubrs
dec
push
leave
or
dec
jmp
push
add
les
mov
call
push
arpl
xorb
dec
xchg
add
pop
bound
xor
pop
mov
push
mov
andps
loope
cmpsb
in
add
dec
add
stc
mov
stos
jg
movsb
inc
inc
sub
fdivrs
mov
pop
push
dec
sub
jge
stc
or
add
out
out
xchg
rcrl
stc
adc
ljmp
and
ljmp
add
mov
pop
and
jg
test
imul
in
xchg
int
fs
das
push
dec
add
jp
adc
and
jnp
xchg
in
sbb
dec
jmp
xlat
pop
pop
fwait
mov
lret
inc
movsb
sbb
shll
cmpsb
testb
sub
sbb
mov
leave
xchg
xchg
or
addl
mov
popa
mov
and
cmpsb
mul
out
jbe
in
mov
aaa
imul
mov
jmp
lret
xlat
vpsubusw
lret
xor
rclb
out
js
jle
js
xor
and
xchg
dec
ja
sub
push
ss
clc
add
adc
and
xor
jae
in
sbb
movsb
xor
cmp
sbb
cmp
sub
ja
mov
or
scas
sub
mov
mov
or
int3
mov
cs
lods
cmpsl
pop
jbe
jge
mov
loopne
push
gs
xchg
cmp
repz
mov
xorb
xor
add
arpl
pop
pop
mov
std
das
icebp
sub
cmp
jge
jo
in
xor
sub
int3
loopne
inc
mov
repnz
mov
mov
sbb
adc
loopne
inc
stos
sti
jmp
cmp
push
out
cmpsl
ds
imul
pushf
cmp
outsl
adc
in
sub
xchg
mov
jnp
mov
lods
fisubl
std
out
lret
ss
mov
pop
sub
out
xchg
jns
test
jb
imul
inc
fwait
push
pop
jnp
push
sbb
push
lahf
or
xchg
jne
aaa
or
jo
iret
jecxz
adc
shlb
ret
adc
scas
pop
lds
pop
sbb
mov
dec
imul
int
fstpt
mov
fisubrl
in
xchg
push
cmp
lds
js
jecxz
mov
mov
xor
mov
pop
mov
dec
scas
mov
xor
mov
lods
cmp
and
inc
sbb
es
xchg
xor
mov
test
jb
jl
inc
in
dec
std
fwait
jmp
xchg
jb
or
test
fldenv
cmp
aad
je
inc
in
jmp
outsb
fcoms
ret
xlat
add
xchg
adc
push
loopne
jno
enter
mov
sub
cmc
xor
jmp
enter
iret
rcl
mov
xchg
js
jle
js
pop
aam
pop
fwait
shll
addb
lock
mov
xchg
stos
dec
cltd
ficoms
rclb
movsl
push
icebp
test
repz
or
sub
and
ffreep
push
int3
lock
daa
out
int3
stc
inc
cmp
push
add
dec
mov
mov
test
and
aas
in
iret
push
movsb
dec
or
jb
out
das
sti
pusha
add
mov
push
add
test
or
lcall
test
jle
sub
cmp
into
lcall
push
out
xchg
sub
or
add
adc
enter
ja
fimuls
lret
std
sub
daa
imul
stos
hlt
jge
negb
push
pop
adc
jge
mov
dec
roll
scas
pop
inc
rcr
mov
dec
and
xor
sar
or
mov
imul
out
incb
push
ljmp
cltd
pop
in
mov
cmp
jo
iret
lods
pop
pop
mov
jg
mov
jle
sahf
pop
jbe
xor
xchg
pop
xlat
cmc
lahf
mov
mov
mov
pop
jns
or
and
xor
cmp
mov
push
xrelease
sub
icebp
xor
mov
add
hlt
enter
fcmovu
jp
xor
jne
push
lods
imulb
cmp
std
pop
test
push
xor
jecxz
icebp
push
aas
inc
xchg
insb
flds
jo
and
sahf
push
jns
and
std
pop
sub
sti
ds
fadds
mov
call
gs
or
cmp
inc
sahf
xchg
mov
das
ljmp
jo
adc
in
or
mov
ds
inc
push
push
mov
inc
adc
cltd
in
loopne
cmp
mov
pop
ljmp
or
xchg
xchg
mov
jmp
into
leave
leave
rcr
fldcw
stc
push
fwait
adc
mov
jle
js
mov
jle
mov
xor
push
dec
stc
cwtl
jle
or
rcr
inc
stos
dec
add
std
add
mov
jp
dec
mov
jp
fwait
mov
add
inc
in
push
outsl
fldcw
jns
lcall
es
int3
adc
test
lahf
jne
arpl
icebp
leave
out
add
fisttpl
movsb
xchg
push
mov
leave
and
mov
mov
push
add
orb
int
popa
mov
cwtl
push
ret
pop
jl
mov
push
mov
fiaddl
pop
dec
and
aad
int
int3
and
rorl
leave
mov
ljmp
push
mov
test
pop
adc
les
jecxz
jmp
sub
pop
jae
or
add
jmp
enter
je
gs
call
lods
dec
cmp
out
fnstenv
sub
cmc
je
lods
adc
xchg
jle
dec
aad
push
test
xor
in
insb
mov
sub
rcrl
or
sahf
mov
dec
or
adcl
push
repz
aam
adcb
mov
clc
popa
lcall
adc
xor
idivl
aas
xchg
sub
lods
pop
push
cmpsb
and
ret
cmp
outsl
pop
xor
xor
adc
roll
push
es
cmp
jmp
fnstsw
xor
xchg
fstl
stos
xor
in
ret
mov
lock
lcall
inc
or
jl
xchg
or
int3
test
mov
sbb
jnp
mull
mov
pushf
in
sub
jns
pop
insl
in
or
xchg
pop
dec
mov
push
aaa
sbb
fstpt
push
xchg
add
add
xchg
dec
lea
cmp
jne
mov
jmp
mov
mov
jmp
mov
xlat
movsb
inc
or
call
js
adc
push
pusha
jl
mov
sahf
mov
addl
arpl
jg
je
xchg
gs
test
jle
out
push
sbb
and
push
mov
lret
gs
cld
cmp
xchg
jno
mov
rorl
or
xor
scas
aad
and
sbb
jno
jo
aaa
xchg
and
push
xor
lcall
or
dec
shrb
lods
and
icebp
sub
push
rorl
cmp
sbbb
sbb
pop
cmc
loopne
mov
ret
iret
or
or
push
sbb
js
xchg
fcomps
pop
cmp
push
inc
mov
stc
test
punpckhwd
cmp
push
int
pop
lcall
repnz
out
pop
sbb
fdiv
outsl
fiaddl
cmp
iret
jae
icebp
pop
sub
jl
add
rorb
stos
clc
cmpsl
in
test
pop
test
pop
ds
faddl
dec
mov
bound
sub
mov
mov
add
push
popl
jo
in
or
push
jmp
scas
jmp
push
or
cltd
iret
gs
adc
call
jmp
xchg
in
inc
pop
stc
push
pop
xor
push
sahf
mov
fistpll
pop
push
xchg
rcrl
pusha
mov
pushf
clc
mul
dec
xchg
cmpsl
mov
fsubl
and
bound
jbe
pop
sub
or
dec
cmpb
sbb
push
scas
pop
imul
dec
bound
cmp
sti
ret
cmc
out
sbb
mov
ret
xor
add
ja
mov
push
hlt
push
fldcw
xor
sub
insb
test
shl
lret
pop
dec
push
inc
add
les
cmpsl
sbb
cmp
sub
xchg
sar
or
fwait
fs
or
movb
out
int
in
jl
call
push
xor
add
jmp
cmp
rol
jb
dec
pop
xchg
cli
pop
ficoms
jg
adc
js
pop
push
clc
pop
in
gs
in
xor
dec
lods
sbb
movsb
push
and
das
mov
dec
xchg
mov
jl
sar
mov
xchg
jecxz
test
mov
and
cmpl
shll
ror
mov
inc
inc
mov
int3
out
fcoms
mov
mov
fnsave
out
jbe
js
sysexit
fsubl
lahf
dec
inc
jp
add
mov
sbb
jmp
fistpl
in
push
push
cmp
in
test
and
out
xor
push
mov
or
pop
mov
cmpl
xchg
pop
mov
mov
and
pop
lds
faddl
aaa
int3
sarl
loope
sbb
aad
and
mov
lods
xchg
sbb
into
mov
mov
cmp
jns
pusha
dec
pop
dec
mov
aas
lea
pop
push
adc
orl
testb
js
outsb
imull
imul
xchg
jnp
in
orb
adcb
enter
xor
mov
jge
lea
popa
or
xchg
xor
mov
ret
xor
or
mov
imul
lds
sbb
leave
repz
pusha
in
outsb
cmp
adcl
mov
fs
mov
cmc
add
popa
jb
sub
push
bound
xor
push
lahf
daa
inc
popf
shr
cmp
sbbb
test
push
fs
lods
pop
push
pop
mov
jbe
add
jno
push
mov
fiaddl
push
dec
dec
xchg
sub
cltd
nop
sub
fisttps
mov
arpl
xlat
mov
js
loop
mov
xchg
inc
and
add
jmp
pop
lret
pop
loopne
js
mov
adc
mov
xor
xchg
cmp
cmp
jl
test
xor
add
rol
enter
lret
pop
jp
pop
adc
push
jle
js
pushf
dec
mov
pop
xor
test
fadds
pop
mov
lret
dec
adc
mov
adc
jbe
in
rcrl
add
push
popf
pop
inc
das
dec
xor
dec
push
es
lret
jns
and
in
and
movl
stc
fst
hlt
add
sbb
jno
inc
xorb
dec
mov
mov
imul
dec
mov
lret
stos
dec
pusha
inc
sbb
je
or
mov
mov
repnz
pop
fwait
pop
jg
pop
pop
jp
adc
stos
inc
jecxz
pop
sbb
in
jae
cmp
jbe
sbb
pop
xor
sbb
ret
lret
push
fnstsw
es
mov
add
pop
cld
sub
je
leave
and
inc
cmpb
xor
inc
push
sub
lret
jecxz
in
adc
pop
sub
mov
add
leave
mov
in
adc
push
pop
sbbl
jge
jne
pop
jecxz
idiv
les
inc
and
rcr
sbb
je
fcmovnbe
and
xor
out
out
dec
xor
punpckldq
pop
call
imul
fs
cmpsb
mov
mov
add
mov
or
mov
jnp
or
push
into
imul
mov
xor
sub
nop
lock
pop
aaa
mov
and
data16
pop
clc
out
int
sub
stc
mov
cmp
sti
push
xor
shr
loopne
lret
sbb
add
lods
out
mov
movsb
xchg
insb
xchg
jg
fwait
out
sti
fcompl
faddl
push
xorl
pop
pop
mov
pop
adc
movl
mov
jo
mov
daa
sbb
nop
pop
imul
fbld
in
pushf
dec
scas
shll
shrl
pop
lret
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
mov
iret
leave
rcr
aad
mov
jbe
add
jg
adc
js
inc
and
fs
shl
and
mov
scas
adc
pop
dec
outsl
and
push
cltd
mov
rolb
jge
icebp
dec
push
or
dec
loop
sub
inc
add
shlb
ja
jg
and
mov
dec
fwait
les
xor
lret
inc
insb
sbb
cmp
and
clc
rorb
lret
int3
scas
mov
test
jbe
cmp
scas
sub
js
xchg
add
add
repz
xchg
aam
dec
xchg
sarl
mov
orl
mov
mov
or
adc
xchg
mov
movsl
xchg
in
dec
shlb
cld
jne
ret
xchg
mov
scas
lods
pop
in
hlt
push
das
andb
test
jno
jl
fidivrl
mov
ret
iret
jp
inc
or
movsl
mov
sbb
aad
loope
sub
dec
nop
xchg
inc
lods
mov
and
mov
adc
cmpsb
adc
cmc
repnz
push
test
jae
mov
cmp
or
dec
repz
int
pushf
mov
shrl
out
push
movsl
sub
add
popa
shll
daa
js
lock
xlat
sub
xor
fs
sahf
call
mov
and
or
outsl
pop
scas
jbe
dec
dec
jg
out
pop
dec
jl
stc
imul
fldl
fstps
lret
fwait
pop
loop
mov
mov
cmp
or
cmpsb
insl
mov
stos
orl
push
dec
or
inc
leave
sub
and
fadds
push
es
int3
dec
frstor
xchg
es
cs
pop
xchg
gs
orl
push
sub
aas
push
pop
mov
loop
xor
pop
test
fldenv
cltd
insb
mov
sbb
rolb
pop
hlt
pop
mov
pop
jmp
rcl
ret
ror
aad
andb
stos
popf
xor
sbb
jg
adc
js
std
test
imul
inc
jp
push
mov
or
notl
out
push
inc
push
les
rolb
mov
jg
mov
sti
bound
nop
and
mov
push
and
add
inc
stos
data16
mov
aad
push
push
call
sbb
dec
pop
fisubrl
jecxz
rorb
and
dec
addr16
std
jp
dec
fucomi
xor
push
adc
cld
out
or
mov
mov
inc
dec
int
mov
inc
and
push
jp
ss
cmpb
cmp
inc
pop
adc
jg
iret
in
lcall
inc
and
fs
or
je
xchg
mov
jle
shll
sbb
out
std
lea
bound
jp
adc
arpl
aam
shll
mov
sbb
jno
adc
mov
fldl
xor
cmc
int
push
rcll
inc
je
dec
paddw
xor
or
das
sbb
lret
xchg
pop
mov
gs
xor
sti
fsubrl
pushf
arpl
daa
out
push
adc
aas
lcall
movsb
aam
out
loopne
cmp
imulb
aaa
lods
imul
data16
in
andb
jne
test
dec
hlt
add
and
loopne
pushf
adc
inc
inc
pop
or
scas
jle
sbb
out
jmp
sbbb
and
testl
movsb
arpl
sbb
cmp
xor
ret
dec
orl
push
push
mov
test
push
xchg
and
cmc
pop
aaa
push
fiaddl
or
xchg
push
jb
mov
add
into
iret
into
ror
aad
aad
mov
or
xor
jg
adc
js
xor
or
cmpsl
shll
cmp
out
test
mov
sahf
idiv
in
dec
into
addr16
data16
or
inc
push
cmp
sub
and
dec
xchg
shll
nop
loop
out
inc
es
lahf
adc
add
lea
and
cmp
inc
sbb
fcoml
pop
mov
push
mov
ret
jecxz
loope
in
add
bound
dec
dec
and
dec
pop
inc
addb
out
icebp
icebp
and
cmp
fcoml
add
arpl
inc
outsl
enter
aam
cmp
mov
xor
sbb
jecxz
push
jne
je
andb
sub
cli
mov
mov
cmpsl
sbb
xchg
xchg
pop
xchg
jo
jmp
mov
test
mov
arpl
out
and
outsl
adc
mov
xor
add
pop
pop
es
cmpsl
sbb
and
clc
xchg
aaa
mov
sub
xchg
xlat
push
aaa
sti
and
sub
sbb
rcr
pop
cmp
mov
clc
jo
fsts
out
pop
fdivp
mov
push
fsubrs
in
movsl
cmpsl
cwtl
lock
push
imul
je
pushf
test
int
inc
fcomip
mov
sub
jle
or
loop
enter
into
ljmp
cmp
dec
jmp
mov
ja
loope
mov
add
mov
push
fwait
popf
push
pop
pop
outsl
mov
mov
loopne
hlt
sub
out
rclb
mov
fidivl
repnz
pushf
add
and
lret
mov
insl
add
stc
add
cmp
stos
sub
arpl
cli
jnp
or
add
mov
pop
pop
ja
xor
mov
xchg
mov
mov
sahf
jecxz
xlat
fmul
insb
out
rcrl
ret
sbb
add
flds
add
flds
add
flds
add
add
dec
flds
add
add
flds
add
add
add
sbb
add
flds
add
flds
add
add
rcr
add
loopne
add
ljmp
add
add
push
fiaddl
add
fiaddl
add
add
fiaddl
add
fiaddl
add
add
dec
fiaddl
add
add
fiaddl
add
add
js
add
xchg
add
mov
add
lcall
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
add
fildl
add
fildl
add
add
push
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
faddl
add
add
sub
add
cmp
add
dec
faddl
add
add
data16
add
add
mov
add
pushf
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
fldl
add
fldl
add
add
dec
fldl
add
add
pusha
fldl
add
add
test
add
mov
add
sahf
fldl
add
add
fcmovu
add
out
fldl
add
fldl
add
fiadds
add
fiadds
add
fiadds
add
add
pop
fiadds
add
add
fiadds
add
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
filds
add
filds
add
filds
add
filds
add
add
filds
add
add
mov
add
cwtl
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
loopne
add
add
sub
add
loopne,pt
add
add
data16
add
add
xchg
add
xchg
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
loope
add
add
push
loope
add
add
jb
add
test
add
mov
loope
add
loope
add
loope
add
add
add
loope
add
add
adc
add
and
add
xor
add
loop,pt
add
add
pusha
loop
add
add
xchg
add
cwtl
loop
add
add
int3
loop
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
add
xor
add
inc
jecxz
add
add
fs
add
add
mov
add
mov
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
in
add
add
dec
in
add
add
push
add
jl
add
mov
add
cwtl
in
add
in
add
in
add
in
add
in
add
in
add
add
ds
add
add
pop
in
add
add
jle
add
nop
in
add
add
mov
in
add
in
add
in
add
in
add
out
add
out
add
out
add
add
add
push
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
pop
out
add
add
jbe
add
xchg
add
cwtl
out
add
out
add
out
add
out
add
out
add
call
add
and
add
xor
add
dec
call
add
callw
jp
add
xchg
add
xchg
call
add
mov
add
call
add
in
add
lock
add
or
add
sbb
add
add
add
or
add
add
add
das
and
add
add
pop
add
add
mov
add
movsb
add
das
and
pop
aam
add
add
add
add
add
add
add
add
push
aam
add
add
xchg
inc
add
imul
add
add
xor
jp
jp
outsb
je
je
jo
aas
dec
imul
gs
jb
imul
inc
inc
dec
push
inc
dec
push
inc
inc
cmp
add
add
aad
add
fildl
add
rolb
add
aad
add
rolb
add
add
add
add
add
loope
add
xlat
add
ss
add
adc
add
inc
jmp
add
sbb
add
flds
add
flds
add
flds
add
add
dec
flds
add
add
flds
add
add
add
sbb
add
flds
add
flds
add
add
rcr
add
loopne
add
ljmp
add
add
push
fiaddl
add
fiaddl
add
add
fiaddl
add
fiaddl
add
add
dec
fiaddl
add
add
fiaddl
add
add
js
add
xchg
add
mov
add
lcall
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
add
fildl
add
fildl
add
add
push
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
faddl
add
add
sub
add
cmp
add
dec
faddl
add
add
data16
add
add
mov
add
pushf
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
fldl
add
fldl
add
add
dec
fldl
add
add
pusha
fldl
add
add
test
add
mov
add
sahf
fldl
add
add
fcmovu
add
out
fldl
add
fldl
add
fiadds
add
fiadds
add
fiadds
add
add
pop
fiadds
add
add
fiadds
add
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
filds
add
filds
add
filds
add
filds
add
add
filds
add
add
mov
add
cwtl
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
loopne
add
add
sub
add
loopne,pt
add
add
data16
add
add
xchg
add
xchg
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
loope
add
add
push
loope
add
add
jb
add
test
add
mov
loope
add
loope
add
loope
add
add
add
loope
add
add
adc
add
and
add
xor
add
loop,pt
add
add
pusha
loop
add
add
xchg
add
cwtl
loop
add
add
int3
loop
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
add
xor
add
inc
jecxz
add
add
fs
add
add
mov
add
mov
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
in
add
add
dec
in
add
add
push
add
jl
add
mov
add
cwtl
in
add
in
add
in
add
in
add
in
add
in
add
add
ds
add
add
pop
in
add
add
jle
add
nop
in
add
add
mov
in
add
in
add
in
add
in
add
out
add
out
add
out
add
add
add
push
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
pop
out
add
add
jbe
add
xchg
add
cwtl
out
add
out
add
out
add
out
add
out
add
call
add
and
add
xor
add
dec
call
add
callw
jp
add
xchg
add
xchg
call
add
mov
add
call
add
in
add
lock
add
or
add
sbb
add
add
add
or
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
add
jns
je
insl
add
fwait
add
jo
imul
je
insb
add
ljmp
jo
add
je
ja
jae
add
add
jb
outsl
insb
insb
add
add
imul
add
outsl
ja
outsl
ja
jb
add
add
imul
data16
add
gs
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
xchg
add
popa
insb
outsb
jne
add
add
jb
outsl
imul
sbb
ja
jae
popa
je
add
outsl
ja
add
fwait
add
jo
pop
arpl
insl
outsl
fs
loope
jae
arpl
data16
fildl
pop
popa
insl
jae
pop
gs
je
add
imul
add
je
push
add
popa
insb
je
insl
add
data16
add
or
gs
add
sub
arpl
arpl
add
add
outsb
add
sahf
add
jae
bound
gs
add
add
ja
arpl
data16
js
imul
ja
jae
arpl
add
jo
gs
push
add
arpl
inc
imul
pop
gs
je
sbb
jae
jo
imul
pop
arpl
imul
gs
jb
push
je
arpl
add
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
jb
pop
pop
addr16
popa
imul
pop
add
gs
jb
jb
add
and
arpl
jo
add
std
add
jb
outsl
jne
add
add
jb
outsl
jb
add
push
inc
push
push
cs
insb
add
inc
add
gs
outsb
push
gs
js
gs
imul
gs
ljmp
insb
gs
je
jb
bound
gs
js
add
pop
add
outsb
fs
imul
outsb
addr16
outsl
je
imul
outsl
outsb
push
add
mov
insb
dec
popa
insl
gs
imul
add
push
popa
insb
imul
add
inc
imul
inc
push
dec
outsl
je
imul
outsl
outsb
add
cmp
gs
push
inc
js
arpl
imul
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
add
outsb
fs
gs
inc
imul
popa
imul
je
jo
gs
bound
arpl
js
add
add
gs
popa
insl
gs
imul
insb
gs
je
je
add
add
je
popa
jae
inc
jb
outsl
jb
add
bound
inc
jb
add
or
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
js
push
gs
fs
imul
gs
push
dec
outsb
outsw
add
dec
popa
imul
outsw
add
add
je
outsl
arpl
gs
outsb
outsw
inc
add
push
add
fs
imul
js
add
outsl
add
je
imul
popa
je
add
incl
inc
gs
outsl
arpl
gs
outsb
outsw
push
add
rolb
je
arpl
push
add
repnz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
cmp
dec
jo
outsb
inc
imul
outsb
addr16
add
stc
add
inc
popa
fs
je
imul
add
add
gs
je
inc
jbe
outsb
je
add
insl
add
outsb
insb
outsl
arpl
imul
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
pop
add
insb
jae
gs
popa
insb
jne
add
jo
jb
popa
je
add
dec
add
insb
gs
jnp
inc
outsl
insb
fs
je
imul
push
gs
gs
outsl
outsb
imul
imul
add
imul
in
add
gs
je
push
push
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
mov
inc
outsl
insl
jo
jb
push
je
imul
add
imul
gs
arpl
add
out
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
inc
add
faddl
push
gs
jb
push
push
add
gs
dec
outsl
add
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
inc
add
je
je
jb
jne
dec
outsb
outsw
push
add
add
push
popa
insb
imul
addr16
jb
jne
add
in
push
gs
outsl
insl
insl
push
imul
add
push
jns
je
insl
push
imul
insb
gs
imul
dec
outsl
jbe
inc
imul
add
jae
jb
insl
jo
inc
add
inc
gs
je
imul
inc
js
add
fldl
inc
jb
popa
je
dec
jne
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
jno
inc
gs
dec
push
xor
mov
inc
push
je
dec
push
add
fldl
push
gs
dec
inc
imul
jne
inc
outsl
outsb
je
popa
insl
imul
add
gs
je
dec
inc
push
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
push
arpl
outsb
add
inc
gs
popa
jo
outsl
fs
lahf
add
gs
je
dec
popa
insb
data16
outsb
gs
popa
insb
gs
gs
add
je
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
inc
imul
bound
imul
inc
js
push
gs
dec
jne
push
add
push
gs
dec
jne
push
add
dec
add
je
outsl
outsb
je
popa
je
add
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
insb
imul
inc
gs
gs
inc
popa
arpl
add
jnp
inc
gs
gs
inc
insb
imul
inc
jb
popa
je
inc
jb
jae
dec
outsb
imul
add
je
imul
add
gs
popa
jns
jne
add
popa
je
push
outsl
insb
imul
add
add
jne
inc
outsl
outsb
je
popa
insl
imul
add
popa
je
inc
imul
imul
xchg
inc
jb
popa
je
inc
imul
add
gs
je
push
outsb
add
popa
je
inc
dec
inc
push
arpl
outsb
add
addl
imul
add
inc
gs
gs
jb
jae
push
popa
insb
gs
gs
outsb
fs
add
jo
add
push
gs
dec
gs
imul
push
gs
insb
imul
je
add
lar
jb
popa
insb
imul
arpl
add
je
gs
inc
outsl
insb
outsl
jb
add
inc
outsl
arpl
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
add
je
dec
inc
imul
imul
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
bound
je
jb
arpl
add
add
jae
jp
push
popa
insb
gs
add
push
imul
add
add
arpl
gs
insb
imul
xchg
add
gs
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
insl
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
popa
je
inc
inc
push
add
popa
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
mov
inc
gs
imul
dec
jb
inc
js
add
dec
xor
cs
insb
add
jb
jns
popa
jb
je
add
ja
outsl
arpl
push
arpl
add
fs
insl
popa
addr16
add
mov
je
gs
popa
add
gs
jb
jns
outsb
jne
stos
add
ja
outsb
imul
arpl
mov
inc
gs
insb
addr16
jb
arpl
add
inc
arpl
popa
je
dec
gs
outsl
popa
jb
dec
popa
jns
jne
add
data16
je
imul
add
je
imul
js
inc
add
and
fs
outsb
jo
je
mov
imul
outsl
ja
jo
popa
je
add
mov
push
popa
imul
jne
dec
fs
add
dec
add
je
outsb
jne
sub
inc
gs
outsb
jne
adc
push
imul
outsb
outsl
ja
gs
popa
addr16
add
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
jae
popa
addr16
outsl
js
js
add
imul
je
jo
popa
je
push
outsb
add
mov
dec
outsl
popa
fs
outsb
jne
add
add
jo
outsb
fs
outsb
jne
add
inc
jb
popa
je
dec
arpl
dec
outsb
imul
insb
add
je
imul
outsb
addr16
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
cmp
arpl
popa
imul
outsb
add
addb
outsb
data16
popa
je
push
arpl
add
arpl
outsl
jo
jo
outsb
jne
add
gs
jae
inc
inc
add
add
outsb
fs
gs
popa
addr16
add
fildl
dec
outsl
jbe
push
imul
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
stos
add
fs
jne
jae
jb
add
push
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
xor
push
gs
insb
popa
jae
dec
outsl
outsb
addr16
add
inc
jb
popa
je
push
imul
push
add
outsl
outsb
imul
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
add
data16
je
arpl
scas
add
fs
jne
jae
jb
add
add
push
jae
push
imul
arpl
add
js
inc
gs
imul
js
push
add
push
add
je
insb
addr16
je
insb
dec
inc
add
mov
outsl
ja
jb
insl
push
outsl
imul
outsb
jae
jb
dec
outsb
jne
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
add
je
outsb
jne
je
insl
inc
outsl
jne
je
add
gs
arpl
push
add
add
push
imul
popa
jae
inc
js
add
ret
add
fs
imul
add
outsl
jae
inc
gs
je
jo
add
imul
jae
popa
addr16
add
out
dec
jo
outsb
inc
gs
je
jo
add
and
push
arpl
insb
insb
push
imul
add
mov
imul
xor
jb
outsl
dec
gs
push
add
xor
push
gs
popa
jb
je
outsl
jae
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
imul
jae
addr16
add
push
push
imul
add
gs
je
inc
imul
jb
insl
push
add
je
push
gs
imul
js
push
add
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
cmc
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
inc
gs
imul
outsb
addr16
add
fldl
inc
jno
popa
insb
push
arpl
add
je
arpl
insb
insb
push
outsl
jae
add
imul
imul
add
insb
insb
push
imul
dec
outsb
push
outsb
fs
gs
popa
addr16
js
pop
add
gs
je
dec
arpl
inc
jb
insl
push
gs
jne
arpl
add
inc
outsl
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
push
imul
outsl
arpl
add
bound
jbe
outsb
je
faddl
inc
outsb
jne
push
imul
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
cwtl
add
je
outsl
jns
imul
add
popa
jb
jb
jbe
add
add
outsb
fs
gs
popa
addr16
add
mov
inc
gs
jb
insl
gs
jb
arpl
or
push
imul
je
gs
add
add
je
jne
jae
jb
push
inc
gs
imul
add
inc
insb
addr16
je
insl
dec
outsb
je
sbb
arpl
gs
imul
add
add
je
outsb
jne
je
insl
dec
inc
add
outsl
addr16
outsl
js
popa
jb
insl
inc
add
arpl
outsl
push
push
outsb
outsl
ja
add
inc
push
outsb
jne
popa
imul
add
add
jo
imul
arpl
add
dec
outsb
push
arpl
cltd
add
inc
insb
addr16
jne
je
outsb
inc
push
add
mov
jb
outsb
je
inc
add
inc
gs
jns
je
insl
dec
outsb
jne
add
push
imul
popa
jae
inc
js
add
pusha
add
gs
je
dec
outsb
jne
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
dec
outsb
jne
je
insl
dec
outsb
outsw
push
add
mov
fs
outsb
jne
add
inc
gs
outsl
jo
imul
dec
add
je
jb
jo
add
cmp
push
gs
jne
jae
jb
outsl
jae
add
add
jo
imul
gs
js
add
jp
push
push
jb
je
add
imul
popa
jae
push
add
scas
add
fs
arpl
inc
add
add
je
popa
jb
je
outsl
jae
jnp
push
push
jb
outsl
jb
add
inc
gs
jne
dec
outsb
jne
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
push
push
inc
push
xor
cs
insb
add
push
dec
inc
dec
dec
xor
cs
insb
add
push
dec
push
jne
jns
push
push
inc
insb
inc
inc
push
in
inc
add
in
inc
add
or
dec
addr16
xor
dec
cmp
jp
cmp
dec
es
jae
and
dec
push
push
pop
push
cmp
dec
addr16
xor
dec
cmp
jp
cmp
dec
es
insl
dec
and
dec
push
bound
arpl
dec
bound
dec
jae
cmp
dec
xor
dec
push
jb
jae
orl
nop
jge
aas
dec
dec
xor
dec
ds
inc
dec
cmp
dec
xor
dec
push
sbbb
setae
jl
jge
aas
dec
dec
xor
dec
ds
inc
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
mov
or
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
mov
mov
ret
or
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
ret
psrlq
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
popa
dec
xor
dec
xor
dec
ds
xor
dec
push
loop
jecxz
repz
jl
jge
jl
jge
ds
jg
xor
dec
xor
dec
ds
inc
dec
cmp
dec
cmp
add
add
adc
jl
jge
aas
dec
add
outsb
jmp
inc
add
inc
add
in
inc
add
in
inc
add
inc
add
inc
add
in
inc
add
test
pushf
clc
data16
add
inc
add
inc
add
inc
add
inc
add
jmp
inc
add
in
inc
add
test
jb
inc
add
or
inc
add
scas
inc
add
inc
inc
mov
jne
mov
incb
mov
jmp
add
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
and
pushf
clc
sub
add
jmp
inc
add
imul
pushf
clc
popf
jmp
add
pop
jmp
add
add
inc
add
mov
add
add
dec
add
add
add
dec
add
inc
add
insb
add
inc
add
add
add
push
add
dec
add
add
dec
add
inc
add
add
add
jmp
add
dec
pop
dec
inc
dec
inc
dec
pop
dec
inc
dec
add
dec
xor
add
pop
dec
pop
dec
add
dec
xor
dec
inc
dec
pop
dec
inc
dec
add
dec
xor
add
pop
dec
inc
dec
dec
dec
push
dec
inc
dec
pop
dec
xor
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jge
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
xlat
lds
ret
fidivs
into
mulb
push
sbb
jno
add
add
mov
das
shlb
rolb
inc
push
outsl
push
push
jmp
add
in
adc
jae
inc
jae
popa
push
pop
pop
outsb
jbe
jns
push
imul
je
jns
popa
push
push
push
dec
imul
popa
jp
arpl
push
imul
jp
jb
outsl
push
inc
inc
push
imul
push
jb
add
push
insb
pop
ja
je
bound
add
push
dec
je
push
jne
popa
jns
dec
push
dec
dec
pop
pop
dec
push
add
adc
push
jge
add
push
add
cmp
sahf
repnz
fs
adc
test
pop
mov
mov
ja
mov
xchg
jmp
ficoms
adc
add
and
cld
jp
es
clc
push
xor
ljmp
dec
dec
test
fs
into
jb
scas
sbb
mov
fildll
push
inc
idiv
ret
dec
jo
clc
and
aas
jmp
negb
inc
outsl
sbb
jle
lcall
fnstsw
stc
mulb
dec
cmp
mov
jmp
scas
xor
and
call
or
inc
call
into
sbb
mov
arpl
jl
xlat
ret
enter
pop
sub
mov
mov
cmc
cmpb
mov
sbb
jl
call
sbb
dec
jecxz
mov
enter
sbb
mov
je
mov
pop
repz
inc
and
aas
leave
repz
out
adcb
in
enter
fnstcw
cmp
cmpsl
add
mov
cmc
mov
int3
aas
dec
sub
mov
test
push
and
mov
inc
test
pop
xchg
xchg
push
js
cmp
pusha
fadd
push
cli
xor
fisubrs
aaa
test
mov
fs
shl
adc
jae
fidivrs
mov
shlb
pop
test
clc
lret
or
cmpl
push
subl
push
shl
pop
stc
inc
pop
pusha
inc
xor
mov
pop
int3
lcall
mov
aam
stos
push
mov
leave
fwait
std
into
int3
add
mov
dec
push
outsb
mov
sub
push
ret
loop
cmpsl
test
insb
dec
sub
mov
xchg
sbb
and
icebp
movsl
arpl
add
cs
xor
jle
dec
loop
sub
inc
outsb
rcl
and
cld
cltd
ret
inc
sbb
jl
xor
mov
push
std
cmp
dec
imul
adc
repnz
or
int3
lods
pop
lods
mov
and
jns
dec
repnz
aam
push
mov
mov
das
out
mov
js
mov
scas
orl
arpl
cmp
es
pop
sub
test
jns
push
pop
leave
popa
adc
iret
jb
add
test
mov
popf
ja
cmp
or
dec
and
aam
jnp
je
xchg
pop
jl
and
xor
shll
orb
mov
movl
cwtl
inc
cld
push
stos
pop
les
into
cli
addr16
xchg
or
inc
push
inc
pop
pop
lds
test
mov
sbb
daa
adc
mov
fwait
mov
ljmp
cs
data16
xchg
jae
imul
and
push
cmp
call
xchg
add
nop
fstps
stos
mov
or
repz
push
divb
add
or
xor
lds
lcall
xlat
or
or
sub
ss
and
int
or
test
call
mov
sahf
sub
or
cmp
outsb
fisubrs
dec
mov
iret
rorl
aas
cmp
and
nop
and
popa
mov
or
ret
push
adc
ja
aaa
js
jp
mov
and
sbb
lcall
pop
cs
dec
dec
call
mov
and
xchg
adc
repnz
mov
fcomps
jp
fs
js
jo
flds
add
data16
push
mov
insl
jle
and
test
sarl
mov
and
xchg
sbb
push
inc
addr16
dec
adc
xor
mov
out
pop
ja
pop
out
dec
cmp
push
fsubrs
jmp
jbe
imul
repz
add
pop
push
nop
xor
or
pop
jbe
inc
mov
sub
push
inc
leave
pop
add
add
cmpsb
jge
add
bound
mov
sbb
push
and
ss
pop
mov
out
rorl
mov
push
stos
loope
cld
inc
jno
aaa
or
jnp
ret
pop
fdivrs
jp
stos
ret
xchg
mov
pop
std
jle
inc
sub
clc
xchg
sbb
loopne
popa
loope
movsl
pop
mov
add
cmp
jno
inc
rclb
push
jbe
mov
shll
out
mov
shll
push
ljmp
pop
cmpsl
movb
mov
sub
call
leave
sbb
loopne
lds
je
mov
enter
fs
in
lock
adc
jle
push
fidivs
inc
and
mov
sbb
mov
or
sbb
push
mulb
insb
pushf
and
in
flds
sub
xor
or
xor
in
sub
mov
or
cmc
icebp
lods
daa
sub
addb
subb
add
push
bound
mov
lods
out
sahf
mov
add
and
shll
jecxz
daa
sbb
or
xchg
lock
sbb
ja
or
or
lahf
pushf
mov
xchg
std
notl
ja
xor
js
xchg
push
sbb
das
pop
daa
int3
loope
cld
test
fisttpl
aas
jp
shl
jmp
clc
aas
add
xchg
xchg
sbb
or
aas
bt
jne
pop
mov
enter
or
add
push
cmp
xchg
or
mov
int3
daa
ds
push
lea
ljmp
mov
out
lock
sbb
lds
pop
stos
inc
or
loop
jnp
test
outsl
and
test
imulb
cmp
xor
vpcomub
mov
and
mov
mov
stc
ds
inc
rorl
dec
movsb
xchg
cwtl
fs
mov
push
into
je
push
std
test
je
mov
mov
das
dec
sbb
add
dec
inc
pop
inc
pop
pop
shrb
frstor
jg
and
add
fnstenv
ljmp
cmp
pop
pop
pop
in
fcmovu
call
imul
xor
js
adc
cmc
lahf
xor
xor
fwait
cli
test
sub
fiadds
lods
push
inc
inc
ret
aad
mov
add
pop
filds
cmp
push
fiadds
push
cmpsl
aad
pushl
cmp
mov
push
fwait
dec
inc
dec
xor
jbe
dec
shrl
pop
jo
jp
lea
mov
cmp
in
popa
lret
std
arpl
mov
call
mov
into
sub
out
imull
das
lods
rol
arpl
cmpsl
inc
ja
shrb
sbb
pusha
data16
leave
and
pushf
dec
jl
adc
loope
rorl
push
nop
and
jg
mov
fs
std
ja
stc
cltd
xchg
add
mov
jne
ljmp
mov
int
dec
dec
mov
inc
les
cld
and
push
ret
cmpsb
push
mov
je
mov
popf
push
mov
cmpsb
repz
pop
mov
push
fwait
mov
fmul
pop
popa
repz
xchg
popa
sarb
push
idivl
lods
adc
and
aas
ret
test
andb
fsubrs
jbe
xchg
or
mov
jecxz
mov
movsl
push
jp
hlt
xchg
stos
mov
into
insl
ss
rclb
sahf
std
ss
into
mov
mov
call
dec
xchg
inc
adc
push
iret
sub
dec
clc
cmpsb
sbb
mov
iret
push
push
or
mov
shl
in
xor
std
inc
notb
es
ret
sbb
mov
fwait
dec
sbb
cmp
mov
clc
repnz
cltd
pop
loopne
es
mov
popa
push
mov
jb
out
popf
xchg
ret
inc
push
add
xor
pusha
mov
divb
mov
xor
inc
ret
fnstsw
sti
sbb
leave
mov
inc
sar
mov
adc
mov
cwtl
imull
and
into
adc
je
rorl
test
push
fists
push
cs
xor
xchg
sbb
lock
dec
outsb
aam
jne
mov
or
pop
mov
sbb
mov
mov
out
adc
or
cltd
icebp
and
mov
adc
xor
icebp
test
je,pt
pop
jge
aas
cmp
test
jbe
add
jmp
mov
pop
mov
sbb
iret
popa
call
push
rep
in
mov
push
clc
inc
dec
ds
mov
mov
je
add
aad
and
sbb
mov
popa
js
adc
pop
mov
adc
jg
xor
leave
loope
out
xlat
arpl
hlt
lods
add
out
lea
and
mov
loope
movsb
mov
ret
jmp
xchg
xor
cmp
add
mov
or
add
xchg
out
inc
lret
mov
and
sbb
test
mov
lcall
lods
xor
and
add
push
shufps
insl
add
add
adc
inc
jle
rep
dec
sub
shlb
dec
icebp
sub
lock
aad
pop
push
inc
push
push
adcb
push
mov
mov
xor
push
scas
inc
add
xor
jle
lret
xchg
out
mov
imul
and
fcompl
mov
xchg
lea
shr
loope
test
pop
jmp
cmp
pushf
gs
pusha
movsl
jnp
push
aam
push
outsb
mov
push
popf
dec
xchg
mov
cltd
enter
repnz
sbb
dec
xchg
bound
cs
and
sbb
sarl
pop
int3
inc
sub
xchg
sar
adc
inc
in
je
imul
cmc
adc
cmp
mov
ret
aam
sub
out
iret
nop
imul
pop
xlat
pop
jge
ret
and
mov
ja
jmp
cli
sub
mov
or
cmp
mov
mulb
and
mov
inc
cltd
dec
mov
ljmpw
xor
jo
add
mov
jae
and
mov
jp
xchg
cmp
jg
jle
push
cmp
fstpl
movsb
arpl
fcomp
hlt
pop
in
in
lcall
inc
scas
xchg
push
xor
js
test
in
lods
jg
ds
mov
cmc
jnp
mov
cmp
rorl
jle
outsb
adc
jbe
add
gs
in
jg
dec
pop
xor
fcoml
xor
push
fldt
and
aam
fwait
aaa
nop
mov
orl
xor
sbb
ds
add
lcall
popf
and
shlb
fdivrp
mov
mov
std
jno
fnstsw
mov
xchg
xor
xchg
jmp
add
subb
stc
loop
out
mov
sbb
mov
push
push
mov
outsl
push
loopne
test
push
pop
xor
mov
xchg
outsl
movsb
add
stc
mov
rclb
test
adc
es
daa
adc
mov
mov
out
ja
jne
inc
sub
aad
aaa
aaa
rolb
sub
mov
xchg
sbb
pop
push
aas
adc
sub
push
push
xor
xorl
dec
les
sub
mov
enter
mov
out
lret
add
out
push
xor
lods
mov
scas
lods
incb
out
push
sbb
repz
pop
mov
mov
mov
stos
xchg
jl
pop
gs
inc
dec
icebp
pop
ja
insb
cmc
std
sbb
outsl
test
stc
inc
cwtl
cli
divb
je
xchg
testb
mov
pop
pop
mov
test
mov
lock
popf
das
dec
push
lret
out
cmp
inc
mov
fcomps
mov
dec
jp
adc
cld
inc
inc
inc
and
push
test
arpl
fidivrs
mov
add
mov
dec
and
and
inc
inc
dec
das
out
mov
mov
iret
add
pop
dec
dec
push
pop
push
pop
dec
mov
dec
push
dec
pop
jae
hlt
mov
add
push
add
ficoml
add
pusha
cs
insb
or
inc
enter
loop
mov
or
imul
ficoms
mov
xor
pop
xor
mov
push
loop
std
sub
mov
mov
mov
popf
sbb
movsb
popa
pop
orb
mov
aaa
sub
push
sarl
leave
adc
inc
xor
cmp
inc
inc
rorb
loop
cmp
sub
jno
aam
icebp
add
test
fwait
outsb
in
mov
sub
lea
add
cld
inc
adc
leave
leave
xchg
outsl
repz
push
movsl
jge
lods
ja
adc
in
or
test
sub
inc
adc
inc
stos
addr16
mov
shlb
xor
pop
imul
sub
mov
loope
test
cld
daa
adc
dec
imul
loop
lret
mov
dec
subb
out
adcl
aam
stc
call
jno
mov
je
lahf
push
mov
in
jo
dec
mov
xlat
scas
cmp
add
cmp
sub
cmp
lret
mov
push
xchg
std
ficomps
sbb
sub
cmp
in
je
cs
dec
nop
push
jp
inc
sti
mov
test
jns
mov
xchg
and
push
insb
popa
loopne
lret
loopne
sbb
roll
mov
or
fsubl
sbb
add
fwait
adc
add
mov
mov
cwtl
jle
mov
insl
ja
jp
ja
adcb
fsts
fidivrs
inc
leave
hlt
mov
js
stc
out
call
loope
dec
xchg
hlt
sub
pop
xchg
mov
xchg
in
push
popf
call
loop
mov
jo
lods
mov
aas
sub
daa
or
push
cmp
jp
gs
ret
push
enter
in
dec
es
xor
into
nop
cs
jg
addr16
pop
andl
cltd
sbb
ja
fcmovnbe
mov
xlat
mov
mov
scas
mov
mov
sub
and
sbb
pusha
xchg
or
jge
dec
cwtl
sub
mov
dec
test
adc
pushf
std
ret
fsubs
lret
fcompl
jl
int
loope
jbe
and
in
and
outsl
loopne
push
jge
jnp
xchg
cmpsb
xor
sbb
lcall
cs
icebp
mov
outsb
imul
out
jmp
movsb
cmp
push
pop
bound
push
mov
nop
pop
mov
cmp
or
fmulp
mov
loopne
je
sub
jno
verr
ljmp
fsubr
lahf
pop
loope
push
mov
inc
dec
hlt
push
mov
ret
mov
push
fldt
addl
mov
int3
pop
pop
inc
jnp
jge
adc
mov
xor
mov
add
adc
adc
mov
outsl
cmp
mov
mov
ret
call
mov
pushf
cmp
cmpsb
push
pop
push
stc
inc
mov
std
fld1
jnp
stc
inc
scas
cmp
dec
test
fwait
sbb
or
fcompl
jo
arpl
daa
jnp
inc
rcrl
insb
je
xlat
push
sbb
pop
nop
insl
shlb
test
jno
repnz
xorb
jmp
clc
xlat
mov
mov
cwtl
mov
dec
pop
cmp
push
or
cmp
cli
mov
loop
dec
add
sbb
cwtl
aas
popf
inc
xor
push
push
pop
mov
jecxz
cli
add
daa
adc
jge
mov
jo
lock
lcall
push
push
lds
jl
ficoms
mov
imul
pop
push
xor
mov
aam
aaa
sbb
push
shlb
pop
cwtl
mov
pop
sbb
rcrl
addl
ljmp
push
inc
sbb
adc
fiadds
fldcw
dec
in
repnz
aaa
test
xchg
fdivl
pop
sbb
fbld
cmp
pop
cltd
jns
mov
loope
roll
repnz
ds
or
mov
pop
ds
and
mov
add
in
bound
nop
add
adc
push
popl
jbe
sub
lods
lret
setg
test
sub
mov
sahf
outsb
sub
stos
push
xor
insl
mov
div
or
mov
mov
xor
int3
or
rorb
ret
clc
in
inc
mov
xchg
inc
inc
repnz
fs
out
jge
xor
outsl
test
push
xchg
stos
jecxz
sub
lcall
leave
cwtl
cwtl
xor
out
mov
stc
stos
ja
xor
jne
sbb
iret
imul
lock
dec
push
cmovle
cs
movsl
mov
and
jne
xchg
dec
lea
jns
loope
jae
cmp
mov
pop
xor
xor
push
sub
jbe
cld
cwtl
arpl
inc
repnz
sub
xchg
xlat
cmpsl
fs
cwtl
roll
inc
outsl
inc
adc
or
dec
inc
inc
pop
push
in
idivl
movsl
cwtl
out
pushf
adc
clc
mov
lret
jbe
adc
out
xchg
arpl
fucom
inc
add
inc
adc
lret
mov
outsb
mov
and
jb
insb
sbb
popa
loop
ds
int3
sub
sahf
xchg
dec
std
lock
mov
jmpw
pop
ljmp
cmp
dec
mov
into
add
dec
arpl
lds
dec
scas
nop
push
jmp
out
lahf
add
int
add
and
jns
jge
mov
and
sbb
aaa
stc
xor
clc
xlat
xchg
pop
loope
fs
mov
imul
shlb
ljmp
inc
pop
push
sbb
scas
js
out
jb
incl
pop
repnz
push
in
adc
pop
mov
adcb
pop
pop
mov
dec
idivb
pusha
mov
inc
sbb
pushf
popa
shl
pslld
inc
popa
jmp
jecxz
ret
cmpsl
mov
pop
fisttps
cmpsb
cmp
in
mov
push
scas
lea
dec
movsl
decl
add
inc
dec
dec
pop
pop
push
sub
xchg
jecxz,pn
xchg
add
rolb
add
das
sahf
ljmp
adc
mov
mov
adc
cwtl
jns
sbbb
push
inc
fsubl
push
shrb
roll
sbb
cmpsb
or
jg
test
clc
sahf
ss
and
xchg
dec
movsb
shrl
punpcklwd
push
imul
adc
lea
and
mov
fmul
out
das
pusha
sbb
int
jmp
decb
sbb
push
in
xor
add
dec
into
xchg
das
or
stc
mov
stos
cmpsb
jecxz
outsl
push
mov
fildl
icebp
nop
push
mov
xchg
mov
jae
push
add
or
dec
jae
daa
lods
mov
pcmpeqw
or
fwait
xor
mov
out
push
inc
push
rorb
dec
sbb
jns
push
jge
fistl
jnp
lods
clc
inc
sub
push
lret
mov
loop
mov
lret
push
sbb
mov
or
xchg
fadds
int
adc
out
mov
jno
jno
test
scas
mov
mov
fstpl
jmp
sbb
call
jne
sub
push
push
cmp
rorb
bound
ds
pop
lock
lcall
repz
mov
adc
push
nop
ss
push
insl
cmp
leave
test
push
xchg
jne
aaa
or
sahf
dec
cmp
fcomps
test
insl
xchg
inc
adc
inc
and
mov
xchg
mov
cmpsl
xchg
mov
outsl
sbb
and
mov
fnstsw
mov
and
prefetchw
sub
lods
and
loopne
adc
and
stc
in
jmp
vpmulhuw
push
leave
pop
pop
push
das
jl
in
xor
mov
sub
or
mov
jns
repz
inc
insb
in
sub
mov
jmp
imul
dec
mov
fiadds
out
mov
inc
add
rcr
out
xor
cmp
not
sub
and
mov
repz
xchg
lret
or
xchg
mov
pop
xchg
std
ret
jb
mov
mov
pop
add
cmpsl
mov
or
aam
add
add
imul
lret
xor
pop
mov
fldcw
xchg
add
sbb
xchg
cmc
enter
mov
push
cld
sub
adc
mov
aad
mov
cmp
add
sbb
mov
sbb
inc
mov
mov
dec
inc
popf
pop
andb
push
jb
aam
cmp
popa
sub
push
xor
inc
loopne
psubq
sbb
outsl
push
adc
out
out
nop
cmp
pop
xchg
mov
lret
jmp
or
subl
fnstsw
mov
cmpsb
pop
push
inc
pop
sub
cmp
lahf
mov
dec
insb
mov
sbb
or
sub
int
mov
sbb
jnp
lock
hlt
cmp
xchg
sub
es
jp
push
insl
nop
mov
adc
imul
sbb
sub
lahf
mov
dec
mov
sub
and
adc
cmovg
das
dec
mov
aas
mull
inc
ret
dec
jae
adc
mov
jmp
lahf
outsb
loop
xchg
enter
inc
xor
lret
cmp
push
inc
cwtl
cli
popf
xchg
xchg
jnp
dec
mov
dec
add
das
mov
sbb
mov
adc
jne
cmp
inc
jge
pop
aad
adc
push
les
sbbb
repnz
hlt
mov
cmp
xor
dec
sub
xchg
push
popa
mov
mov
jb
outsb
cs
pop
fwait
aad
sub
inc
fisttpll
imul
push
cmpsl
jne
loopne
mov
es
hlt
testl
aad
loopne
sahf
mov
xor
incb
pop
mov
ja
ret
adc
fs
xchg
or
pushf
dec
stos
xchg
adc
and
pop
icebp
mov
out
clc
or
adc
out
roll
call
sub
dec
rclb
test
cmp
daa
sub
stos
pop
mov
in
or
sbb
cmp
ret
enter
jns
ja
aam
xor
dec
mov
movsb
clc
jno
and
xchg
cmp
inc
sub
pop
mov
or
lods
jmp
cmc
or
lds
bound
adc
mov
mov
push
dec
jmp
push
xchg
dec
push
pop
ljmp
xchg
out
push
push
and
stc
js
inc
aaa
test
stos
add
aad
pop
das
jb
lret
repz
jmp
lret
jo
movsb
addb
jns
into
or
adc
sti
adcl
arpl
lods
mov
fwait
std
lods
mov
pop
arpl
das
jmp
testb
sub
inc
hlt
pop
pop
dec
xor
iret
mov
xchg
testb
shll
mov
lods
outsl
pop
fsubrs
mov
movsb
add
sbb
scas
out
or
cmp
cmp
and
jmp
les
inc
xchg
rorb
movd
add
nop
test
je
mov
in
cmp
add
aam
xor
stc
sbb
pop
xorl
xchg
lcall
xchg
xchg
popf
mov
int
pop
adc
xchg
pop
es
sbb
das
popf
fdivrs
xchg
call
in
orb
gs
add
jle
or
mov
arpl
cmpsb
stc
aaa
out
inc
fisttps
mov
in
cltd
andw
cwtl
pop
xchg
scas
dec
pop
das
movsl
jns
dec
sti
xchg
pushf
mov
and
cmp
xchg
jp
push
cmpsb
jno
jg
pop
mov
xchg
pop
in
out
mov
or
jne
lcall
cs
pop
lcall
push
or
sub
sub
mov
shrb
add
scas
repnz
and
xchg
fs
sbb
add
dec
dec
dec
inc
dec
sub
test
add
rolb
add
or
ja
inc
sbb
enter
in
data16
mov
mov
or
adc
or
insl
in
out
mov
xchg
lahf
xchg
pop
jg
push
pop
in
sub
push
push
jae
mov
lahf
or
xor
pop
ss
mov
lcall
push
insb
sbb
inc
pop
fisttpl
jnp
mov
dec
jge
mov
loope
mov
js
push
push
sub
popf
sbb
inc
jg
fnstenv
mov
pop
pusha
adc
or
sub
daa
mov
push
add
fs
jbe
hlt
add
addsubps
cld
stc
mov
repz
or
xor
lret
and
fildll
and
sbb
add
ss
cwtl
xchg
rolb
insb
pop
icebp
jo
cmp
shrl
inc
ss
test
pusha
push
push
pop
sbb
call
sub
or
ret
fimull
iret
and
jo
adc
mov
ja
fisubl
cli
nop
inc
ret
stos
mov
call
cmpsl
hlt
mov
cmp
shr
lods
jae
xchg
or
xchg
adc
fcom
sub
and
repz
int3
mov
and
fmull
xor
ror
mov
mov
dec
enter
or
jp
andl
vcmppd
push
out
cld
dec
fcomi
mov
ds
movaps
mov
push
outsb
pusha
and
outsb
das
xchg
push
push
add
ficoms
test
test
hlt
mov
cmpsb
loopne
mov
xchg
mov
mov
mov
or
gs
add
mov
gs
andb
outsl
popa
repnz
mov
inc
dec
push
mov
scas
inc
pusha
ret
mov
movsl
mov
xchg
loopne
repz
mov
dec
add
sub
sbb
scas
cmpsb
and
sbb
dec
std
lock
lea
xchg
xor
mov
mov
mov
aam
cmp
lods
repnz
scas
mov
lock
mov
imul
cmpb
mov
xchg
push
xchg
leave
mov
cltd
cmp
push
test
or
or
call
mov
dec
adc
cs
jo
jle
jecxz
inc
cltd
and
inc
sub
sub
mov
stos
push
or
lcall
hlt
or
cli
int3
push
mov
xchg
adc
jbe
notl
mov
imul
cmp
out
cwtl
mov
call
fwait
mov
fadd
movl
sbb
mov
adc
xchg
xor
mov
pop
xchg
mov
mov
lret
gs
or
jl
jg
push
lcall
fisubrs
xor
mov
fisttps
sbbb
adc
push
lret
ret
imul
sysenter
es
test
in
jb
mov
lea
outsl
add
mov
xor
push
sti
ffree
pop
add
cmp
mov
test
mov
adcl
fcmovbe
js
xchg
test
xchg
loope
cwtl
dec
insl
mov
mov
adc
insl
pop
pushf
in
pop
rcll
shlb
lods
imul
pop
imul
dec
or
dec
testb
int3
mov
inc
bound
decb
ret
cmp
push
test
xchg
pop
roll
enter
sub
jl
pop
std
push
push
lods
jg
mov
and
out
leave
outsl
cmpsb
jbe
mov
rcrl
daa
cltd
jge
dec
sub
xchg
cmp
test
fdivrl
cmp
lock
pop
mov
jbe
adc
in
adc
sub
test
mov
dec
fdivl
adc
mov
add
jns
push
cmp
xchg
mov
mov
sub
popf
dec
push
les
sbb
arpl
inc
repz
or
lret
lret
stc
ljmp
dec
aas
mov
mov
mov
out
or
data16
int
xchg
fwait
mov
add
xlat
out
sti
mov
popa
into
lret
cmc
cmp
push
jns
loopne
imul
jns
push
iret
insl
hlt
scas
mov
add
and
mov
or
lods
shlb
push
lea
ucomiss
dec
cld
inc
scas
nop
pop
sub
daa
std
inc
in
arpl
adc
xor
outsb
xchg
lods
sub
dec
push
mov
mov
rcrb
mov
lcall
movsl
add
loop
mov
xchg
mov
idivb
pop
cmp
xchg
addb
sti
jle
in
in
aad
test
in
je
into
push
rclb
add
sbb
mov
xor
out
lods
je
hlt
cmc
jmp
lock
data16
xor
rcll
pushf
xchg
pop
cmpsb
pop
xor
pop
inc
gs
or
stos
push
pop
test
or
cmp
popf
mov
mov
mov
push
and
test
arpl
mov
int3
jp
mov
cld
iret
shlb
pop
jge
xor
and
jmp
nop
popl
xor
xchg
or
jmp
in
jae
sbb
xor
dec
mov
adc
xchg
sub
push
lcall
je
cltd
dec
pop
loop
push
jb
jmp
xchg
mov
add
fwait
mov
cmpb
adc
add
sbb
add
and
mov
or
push
push
das
mov
fs
pop
push
fadds
icebp
in
sahf
aas
cmp
xchg
imul
jl
out
loopne
inc
std
sub
jo
mov
ds
aam
adc
fstpl
mov
loope
push
cs
push
mov
adc
pop
int
pop
lods
les
add
push
dec
inc
push
pop
pop
push
dec
cmp
or
lahf
add
rolb
add
xlat
add
adc
movsl
call
push
scas
inc
sti
daa
in
mov
pop
push
int3
stos
inc
mov
aas
mov
lock
push
arpl
stos
repnz
dec
push
adc
jecxz
repnz
jl,pt
out
fs
jns
lcall
movsb
imul
cmpsb
push
out
lret
dec
mov
rcll
fwait
arpl
push
mov
jg
lods
mov
push
out
scas
loope
ja
xor
in
or
jno
xor
cmp
aam
test
and
or
outsl
cltd
mov
mov
hlt
les
jge
js
jecxz
cld
dec
xor
push
aad
lea
mov
ja
adc
cmp
inc
and
inc
jge
fsubs
pop
aam
pop
cld
inc
or
pop
lods
mov
and
and
decl
test
cmpsb
pop
dec
and
inc
scas
push
stos
mov
dec
pusha
mov
mov
cltd
sbb
adc
dec
aad
pop
pop
call
mov
adc
xchg
jns
inc
jle
inc
loope
mulb
xchg
inc
mov
sbb
or
or
xchg
xlat
nop
mov
stos
push
lds
outsb
and
and
sarl
inc
xchg
clc
loopne
outsl
ja
xchg
aam
jns
cmpl
cmp
movsl
dec
hlt
cmpsl
mov
sbb
aam
stos
pushf
in
mov
adc
xchg
lcall
or
mov
mov
mov
lcall
movsb
in
jae
pop
inc
xchg
outsl
jmp
pop
mov
pushf
dec
dec
mov
test
nop
out
mov
ja
sbb
cmp
dec
mov
scas
insb
sub
dec
aaa
jge
sbb
mov
and
push
sbb
ror
das
fdivl
ds
xchg
cltd
mov
push
stc
inc
jb
adc
dec
mov
inc
dec
lea
dec
mov
xchg
cld
jg
mov
pop
fisubl
jmp
outsb
cmp
ret
in
pop
add
repnz
mov
lret
cmc
push
test
js
sti
ja
push
mov
scas
sub
inc
call
hlt
nop
aam
fidivs
push
shld
add
pop
push
add
popa
fs
in
jae
mov
daa
sbb
dec
mov
pop
dec
jg
inc
leave
out
push
and
lods
lahf
outsl
std
lahf
or
pop
xor
add
bound
pop
sti
outsb
lcall
adc
sbb
mov
jne
fstl
push
movb
mov
mov
mov
cmpsl
aas
rorb
lods
xchg
aad
or
cmp
pop
push
and
add
cmpl
or
dec
push
ljmp
inc
sbb
add
hlt
dec
xchg
mov
fbld
push
pusha
jne
sub
cmp
push
or
adc
ljmp
xorb
lahf
jnp
and
scas
pop
adc
ret
repnz
pop
xchg
mov
mov
sub
mov
ss
xlat
ds
adc
arpl
mov
add
and
xor
and
lds
sbb
dec
inc
lahf
xor
shl
or
xchg
dec
mov
cmp
pop
cmp
dec
lcallw
std
inc
fucom
loope
test
inc
aam
aad
adc
mov
inc
orb
pop
in
adc
das
fistl
cld
hlt
adc
outsb
inc
push
adc
mov
mov
jmp
inc
fucomip
mov
jmp
pop
insb
add
fistl
cmp
sub
and
xchg
mov
add
into
insb
loop
or
xchg
sub
test
cmpsl
aam
xor
pop
jmp
ret
imul
mov
nop
pusha
cmpsl
mov
dec
enter
push
jge
add
adc
pop
xchg
outsb
aad
cmp
dec
sbb
sti
hlt
popl
mov
inc
push
pop
cli
inc
mov
sbb
data16
sti
lret
jg
cmp
push
aam
add
cmpsl
nop
sarl
mov
cmp
ds
inc
mov
mov
sbb
add
fcmovnu
out
mov
lea
aas
jp
xlat
mov
add
xchg
out
xor
hlt
cmp
dec
mov
or
pop
rclb
xlat
adc
and
sub
out
dec
insl
or
cmpb
pop
adc
pop
out
divb
jg
hlt
or
out
sbb
mov
lret
xor
push
lcall
xlat
xchg
setge
into
xor
ret
daa
inc
or
push
or
shll
jbe
xchg
lods
adcl
inc
gs
int3
sbb
jecxz
xchg
xor
add
jnp
jg
dec
or
mov
hlt
add
outsl
dec
stos
movsb
xchg
xchg
dec
mov
testl
fwait
stos
cmp
ret
mov
testl
cs
xor
into
adc
push
lods
and
sub
push
sub
mov
or
inc
out
pop
add
into
dec
test
xlat
pusha
cmp
inc
test
fdivp
movhps
stos
in
cli
xchg
push
push
lds
and
fucomi
call
adc
sub
push
cli
addr16
push
imul
jnp
cld
sbb
aaa
and
fidivrl
push
hlt
jne
loope
add
adc
mov
push
stos
pusha
fdivrp
pop
sahf
push
pop
pop
test
clc
jbe
dec
pop
or
push
inc
clc
xchg
add
and
sbb
testl
scas
hlt
mov
inc
repz
hlt
pop
ficomps
jae
jnp
xchg
mov
cltd
pop
rcrl
or
int3
daa
cmpsl
mov
jmp
pop
sbb
sub
jp
jne
mov
ljmp
and
pushl
add
and
dec
repnz
pop
mov
push
cltd
in
mov
pop
test
sub
test
aas
xor
add
push
inc
decb
imull
add
add
dec
inc
dec
push
pop
pop
push
inc
cmp
mov
rolb
add
and
adc
pop
mov
sahf
xchg
mov
mov
mov
sbb
into
adc
das
in
xchg
scas
imul
mov
or
jge
inc
cmpsb
clc
jne
fisubrl
sarl
xchg
mov
adc
je
enter
cmp
inc
inc
test
fistps
imull
mull
mov
ret
xorl
sub
adc
out
or
mov
stos
lods
stc
xor
sub
jmp
dec
push
shr
cltd
stos
sti
aas
in
outsl
ss
mov
popa
push
mov
lahf
sahf
mov
sub
cmp
or
jmp
sbb
mov
inc
xchg
scas
fisttpl
mov
add
pop
mov
and
lods
pop
aam
inc
aam
sbb
inc
pop
pop
sub
pop
stos
sbb
ljmp
sbb
push
inc
aad
cwtl
imul
inc
inc
jb
push
dec
jmp
lahf
xchg
gs
or
inc
add
fldcw
loope
stos
fildl
in
in
fcom
out
jp
mov
fcoml
sbb
add
sahf
fst
push
jecxz
insl
dec
push
cmpsb
mov
push
jo
sub
aas
repnz
and
adc
sub
pop
xor
lds
adc
inc
cmp
or
dec
xor
cmp
pop
sbb
adc
int3
dec
das
lret
loop
inc
xor
inc
es
mov
lds
sbb
sti
push
jne
shl
xchg
je
popf
ret
ret
fwait
test
out
cmp
addr16
pop
lock
nop
cli
sub
xchg
pusha
cli
rcll
jo
lahf
test
adcl
rcrl
mov
mov
je
ffree
fs
addr16
push
push
clc
dec
adc
push
daa
dec
ja
pop
sbb
jecxz
out
or
xor
cs
push
in
jne
xor
es
gs
scas
dec
mov
ljmp
mov
xlat
add
ret
insl
or
fiaddl
movlhps
vpshaw
sahf
in
fwait
inc
cmp
jmp
pop
fs
test
js
ss
sbb
mov
imul
ja
leave
sbb
fists
add
in
inc
fnstsw
mov
shl
jg
stos
dec
or
lea
or
push
push
and
loop
out
bound
int
fsubrl
iret
mov
add
movsl
rorb
mov
mov
mov
adc
adc
insb
mov
mov
in
xchg
cltd
rorl
sarb
dec
test
ret
dec
xchg
cli
dec
lret
fbld
out
add
push
mov
sub
ret
repz
insl
into
test
mov
sti
mov
inc
rclb
mov
out
sub
outsb
push
and
sub
mov
sub
dec
lock
icebp
aad
push
inc
cs
pushf
fiadds
jne
sahf
pushf
arpl
lds
sbb
cltd
adc
cmp
pop
xchg
pop
cltd
push
aaa
adcl
andl
mov
insb
int3
add
ret
sbb
ss
cmpsb
aad
shr
fcompl
jbe
mov
pop
sbb
xchg
sub
cmp
pop
stos
fstpl
jecxz
jge
fstpt
lret
or
cmp
push
sub
shl
gs
mov
ret
fwait
sbb
push
xchg
jg
call
ficoms
sbb
sarb
iret
pop
add
sbb
mov
pop
jnp
inc
jmp
xor
adc
mov
mov
in
push
mov
std
out
idivl
mov
jne
js
cmc
pop
bound
je
mov
sub
lods
scas
bound
pushf
sub
xlat
scas
jo
push
adc
fdivl
js
sbb
dec
lods
sub
repnz
xlat
lods
or
shll
into
shrl
push
sub
push
push
dec
add
and
movsb
nop
cmp
mov
mov
mov
adc
jl
jmp
cmp
inc
cmpsb
sbb
inc
adc
mov
lods
jae
mov
popf
insl
xchg
fcompl
jl
cmp
push
dec
js
cmp
jl
or
or
aas
cmp
jecxz
mov
xlat
cs
adc
and
inc
mov
xor
insl
or
insl
inc
push
addb
int3
fsubl
gs
test
mov
test
xorb
rorl
call
add
xchg
pop
dec
sarl
or
cmp
adc
pop
pop
or
outsb
jle,pn
xchg
outsl
push
lock
mov
cmc
xchg
add
sti
repz
movsb
adc
push
jge
xchg
jp
inc
mov
or
into
cmp
mov
push
mov
stc
xchg
data16
cmp
xchg
and
sub
cmpl
cs
push
mov
popa
fcom
repz
mov
cmp
in
and
les
popa
push
lea
insl
rolb
gs
xor
outsl
mov
les
xor
dec
sub
scas
xor
jge
sarl
mov
mov
mov
sti
sarb
movsb
cmc
bound
or
push
nop
out
push
adc
lods
ret
cmp
adc
dec
shlb
test
add
dec
movsb
in
mov
cmpsl
sti
scas
mov
fdivl
scas
mov
je
scas
cmp
repz
es
mov
test
rolb
ja
cli
ss
adc
push
sbb
push
mov
cmp
jnp
ret
out
data16
into
add
mov
push
add
xchg
add
mov
lea
mov
sbb
jmp
incb
sbb
cltd
push
xchg
cmc
fsubrs
ljmp
repz
ret
test
les
outsb
lea
nopl
adc
sbb
lcall
add
add
pop
pop
pop
pop
push
dec
mov
xchg
adc
lods
add
rolb
add
xor
jbe
jge
xchg
std
ret
insb
and
or
imul
je
in
movsl
sub
dec
adc
outsb
pop
adcl
lods
xor
and
sbb
sbb
enter
pop
adc
push
adc
push
sbb
out
xchg
mov
lods
repz
pop
leave
movsb
addl
ret
gs
out
fs
sub
mov
xorl
lods
cld
out
insb
adcl
sub
inc
fnstsw
pop
mov
popa
sub
clc
es
add
in
js
dec
and
xchg
xchg
mov
subb
scas
lods
dec
popa
adc
and
icebp
ret
mov
mov
lds
rcll
mov
cmpsl
inc
in
dec
inc
add
jne
lea
pop
pop
aam
out
jo
push
cwtl
push
xchg
inc
jno
lahf
fsubrs
mov
gs
rcl
cli
stc
add
rolb
ret
mov
xchg
dec
into
lds
inc
inc
pop
adc
sti
sub
pop
orb
mov
inc
pop
inc
adc
subl
je
push
and
pop
xlat
add
pusha
mov
fwait
jnp
cmpsl
sub
add
jge
stos
js
clc
mov
dec
imul
sub
dec
xchg
mov
jno
test
pop
sbbl
add
aas
sti
sub
jg
or
ds
loope
in
add
mov
mov
movsl
iret
call
in
push
push
mov
jp
inc
pushf
mov
mov
repnz
test
popf
inc
cmp
mov
mov
inc
xor
in
mov
jmp
cmp
jns
stos
and
cltd
pop
push
mov
clc
xchg
into
popf
cmpsl
inc
popf
mul
ret
sbbl
sub
or
mov
dec
xor
cld
pop
pop
xchg
out
out
push
cmp
std
stc
mov
test
push
shl
das
mov
sub
test
ret
dec
cmpsl
cli
mov
xor
test
sub
imul
push
aas
dec
sbb
mov
mov
or
hlt
pop
xor
inc
das
jo
adc
mov
cmpsl
pop
iret
adcl
push
imul
mov
mov
jnp
test
cmpsl
clc
cmp
xor
mov
mov
inc
ja
addl
cmpsl
sbb
and
push
ja
xchg
jno
bound
in
cld
cmp
jae
pop
frstor
and
sbb
xchg
jns
sbb
es
int3
inc
lods
arpl
std
shl
in
es
call
xchg
pop
jae
jnp
mov
ss
inc
js
sub
pop
mov
jae
negb
xchg
popa
push
xchg
cmpsl
jnp
outsl
mov
movsb
je
push
cmp
jmp
mov
popa
mov
stc
shl
dec
nop
stos
push
inc
sbb
inc
loope
rorl
lods
mov
pushf
xor
sub
shlb
aad
mov
xchg
mov
mov
pusha
fsubrl
inc
and
dec
xlat
bnd
jne
dec
mov
add
lods
imul
movsb
cs
in
jp
sahf
mov
loop
adc
sbb
sub
imul
insb
cmc
enter
add
movsb
add
and
and
push
adc
pop
test
out
aaa
test
loop
dec
xchg
and
mov
adc
dec
sub
fisubrs
pushf
pop
out
jnp
push
loope
in
lds
in
push
and
pushf
inc
xchg
repnz
adc
sbb
xorl
pop
outsb
xor
mov
jmp
lea
add
loope
adc
fwait
stc
dec
mov
rorb
push
rcrl
adc
mov
imul
push
test
lea
inc
dec
insb
jo
and
dec
pop
push
orb
ja
loop
mov
es
dec
inc
loop
jmp
hlt
or
pop
sub
cs
inc
sub
jnp
lea
xchg
nop
inc
scas
jge
int
insl
mov
xor
sub
xchg
adc
in
xchg
loope
sub
inc
inc
push
sbb
pop
and
dec
mov
cwtl
pop
pop
loopne
repz
test
and
mov
aad
pop
in
sbb
inc
mov
jmp
int
sub
sbb
cmc
mov
lea
pusha
int3
jmp
pop
popf
push
inc
push
daa
cwtl
cltd
iret
aad
adc
jl
outsb
jl
movsb
adc
add
pop
jbe
add
xchg
mov
ret
movsb
rorl
mov
outsl
push
dec
mov
or
sub
adc
ss
and
arpl
fstl
xchg
insl
mov
pop
ss
les
pop
xor
iret
imul
jbe
mov
cmp
xor
cltd
insl
sbb
mov
cmp
call
jmp
xor
mov
fbstp
sub
push
cli
cs
jle
sbb
jns
lods
adc
test
mov
pop
sarb
cltd
push
add
ret
push
mov
mov
int
sub
cld
lds
xor
inc
inc
call
rsm
cli
and
pushf
and
iret
push
pop
ud0
or
fs
cmp
pop
lcall
stc
xchg
or
leave
rcrb
ja
pop
addl
xlat
iret
sahf
addr16
push
into
int3
lods
lcall
out
repz
cmp
or
out
scas
inc
mov
jae
repnz
mov
adc
mov
fwait
cmc
adc
icebp
fisubl
jp
xchg
aad
mov
and
imul
sbb
fsubl
pop
fs
mov
stc
pop
mov
adc
push
popa
iret
addr16
dec
icebp
call
les
push
loopne
fimull
or
mov
pushf
or
sbbl
imull
out
and
push
and
add
inc
inc
inc
push
inc
push
push
push
outsl
pop
mov
sti
loopne
add
rolb
add
jo
test
lea
orl
adc
out
shrl
dec
jle
clc
testb
out
jo
add
stos
pop
idivb
add
ja
stos
test
sbb
xor
push
jae
or
mov
je
rcll
lret
hlt
cld
sbb
cmp
adc
ret
dec
cwtl
mov
and
es
pop
or
lcall
jnp
sbbl
int
fiadds
roll
lahf
push
bound
sti
mov
mov
dec
dec
test
adc
das
gs
int
test
dec
and
add
imul
andl
in
push
or
xor
ss
mov
decb
xor
lds
insl
sbb
repnz
pushf
jnp
stc
sub
or
xchg
add
xor
fwait
mov
inc
call
push
adc
mov
mov
dec
repz
push
pop
jne
jb
cld
mov
push
xchg
arpl
out
push
pop
je
loop
or
imul
push
mov
adc
mov
sub
scas
push
cld
mov
lock
cmp
sub
push
aam
cltd
xchg
cmp
pop
mov
aaa
adc
fadds
outsl
aaa
shrb
cs
cmpsl
mov
call
fucomip
jae
ret
dec
jb
stos
enter
mov
cvtps2pd
mov
mov
jb
notl
iret
inc
cmp
jno
sub
xor
push
ljmp
pop
cmp
mov
lcall
xchg
outsb
pushf
pop
mov
pop
fs
jle
dec
aas
inc
jne,pt
mov
sarl
or
jno
cmpsb
add
mul
popa
ss
cmpsb
adc
arpl
mov
cltd
or
jle
adc
outsb
sbb
or
mov
xchg
or
jb
jmp
mov
adc
sub
lds
pop
push
int3
aam
out
movsb
lds
in
mov
push
das
mov
push
sub
and
mov
ror
xor
mov
adc
mov
icebp
sub
mov
lods
out
or
pop
push
sbb
jb
push
push
imul
notl
mov
pop
je
mov
dec
ret
cs
pushf
outsb
cmp
push
push
cld
jmp
jae
cmc
sub
arpl
sub
aam
push
mul
sbb
mov
jns
in
push
subb
mov
ss
iret
pop
cs
rorb
test
dec
xor
dec
jg
movsl
push
or
jbe
imul
imul
xchg
cmpsb
std
loope
add
fcmovnu
pop
ja
and
lahf
rcll
mov
push
je
stc
dec
cmp
sarb
lret
lods
mov
shll
dec
xchg
cmp
test
sub
cltd
jae
repnz
aas
dec
rcll
outsb
and
ljmp
enter
inc
dec
pop
repz
pushf
cmp
bound
adc
dec
cmp
and
cwtl
loop
les
out
std
jecxz
xchg
mov
cmovle
xor
cs
outsl
add
xor
or
jns
add
push
hlt
ss
inc
sub
push
imul
loopne
lods
or
lahf
cwtl
mov
arpl
add
inc
icebp
or
adc
scas
jae
xor
ret
cmpsw
leave
das
mov
decl
jp
mov
inc
call
mov
xlat
pusha
add
leave
es
pop
cmp
mov
clc
out
inc
or
inc
and
inc
neg
mov
or
repnz
adc
je
sbb
push
inc
lock
pop
roll
rcrb
lds
loope
push
pop
sarl
sbb
push
lods
mov
push
fwait
and
mov
nop
shll
scas
cmp
ds
lds
movsw
hlt
dec
jge
mov
jbe
stos
sarl
mov
xor
clc
scas
loop
inc
fsub
xchg
test
mov
fwait
adc
addb
aad
jae
sub
or
xchg
sbb
cmp
stos
sub
fisttpll
sahf
mov
outsl
rcll
out
cmp
push
movsb
es
fstps
iret
jns
inc
btr
xor
fiaddl
sbb
add
sarl
sub
jmp
cmp
inc
jmp
mov
lcall
pop
push
mov
call
dec
imul
loop
scas
and
xor
movl
sub
nop
lcall
outsb
addr16
mov
test
stos
adc
outsl
jge
xchg
push
mov
cli
push
adc
leave
sahf
xchg
cld
jecxz
cmp
adc
or
or
mov
lds
lds
push
push
mov
cltd
test
mov
mov
inc
ds
adc
mov
mov
sbb
xchg
cmpsl
and
mov
in
add
jg
mov
pop
adc
jle
hlt
out
push
push
inc
outsl
xor
pop
imul
pop
xchg
add
sub
stos
cmpb
jecxz
in
test
or
dec
push
mov
cmp
aad
rcl
mov
xor
daa
mov
rcrl
aam
cmp
incb
or
fcomi
mov
jmp
jne
call
scas
sub
loop
push
stos
jo
xor
in
in
jb
pop
mov
rcrb
push
mov
pop
mov
cwtl
icebp
mov
sub
ret
roll
cs
je
fisubrs
fucomi
out
inc
xchg
adc
jae
cmp
and
jp
or
xchg
ret
jns
jno
imul
ljmp
test
stos
outsl
stos
dec
dec
shl
fcoml
push
push
out
lcall
gs
lock
das
jb
test
pushf
pusha
and
adc
dec
push
aam
sub
ja
popa
mov
add
push
dec
pop
dec
pop
push
stos
mov
stc
ljmp
add
push
add
xchg
xchg
push
jmp
and
pop
test
outsb
or
dec
push
int
xchg
iret
cmp
mov
inc
mov
xorb
or
add
fs
cwtl
aas
rolb
mov
bswap
cli
add
dec
int3
or
sub
or
inc
loopne
aas
fs
jl
mov
push
xchg
push
pop
pop
pop
cltd
sub
xor
sub
mov
push
dec
inc
pop
push
ret
movl
inc
out
inc
lcall
shlb
insb
test
sub
test
push
xchg
push
xchg
sub
test
insb
popa
or
sub
lahf
pusha
pop
pop
popa
imul
cmp
xor
cld
mov
add
call
lock
mov
loop
lret
into
sbbb
adc
adc
mov
ds
jns
iret
dec
icebp
xchg
adc
mov
mov
push
fwait
fwait
push
or
sbb
xchg
bound
cld
jnp
inc
cmpsb
cmp
fwait
lcall
das
mov
mov
dec
mov
inc
les
sbb
jb
ja
mov
push
or
shl
mov
xor
cmp
mov
cmp
lret
and
inc
lods
add
icebp
in
clc
mov
popf
js
sub
xchg
sub
ljmp
sarb
cmp
out
lock
lds
pop
sub
sbb
jl
sbb
pop
test
loope
jg
popa
lea
fnsave
dec
lds
insl
aas
imul
sti
cwtl
push
mov
test
and
cmp
cmp
mov
mov
movb
dec
jp
mov
xchg
mov
leave
adc
xchg
in
lret
mov
stc
inc
or
mov
dec
add
inc
or
sar
adc
jns
loop
lods
cmp
mov
mov
addl
and
ficomps
jge
mov
dec
mov
addb
sub
repz
pop
fcmovne
xchg
dec
cmp
add
adcl
ret
rcll
xchg
mov
sbb
pop
jp
or
leave
cli
pop
sub
pushf
ja
mov
rolb
cmp
adc
push
js
movb
cmp
jp
jecxz
jb
sub
jecxz
imul
std
inc
aaa
lds
jbe
or
mov
mov
sbbl
dec
cmp
jno
test
test
pop
lea
adc
sbb
rol
mov
jns
sahf
sbbl
sahf
and
pushf
test
out
jmp
adc
mov
test
pop
lret
xchg
sarb
xchg
xor
jp
inc
aas
sub
sti
cmc
jle
pop
push
pop
inc
aad
mov
mov
pop
in
dec
ljmp
sarl
pop
pop
js
lods
xlat
adc
sti
jae
icebp
enter
lods
cmpsl
int3
cwtl
ret
testb
out
cmp
dec
and
cltd
pop
out
jge
nop
fsts
orl
add
les
popf
sbb
cltd
and
cmc
lcall
cld
imul
add
loop
cmp
fs
pop
jnp
or
and
sbb
lret
and
out
stc
sar
dec
imul
stos
aaa
xor
sbb
inc
dec
in
aam
ffree
jmp
test
push
cs
push
dec
push
mov
outsb
aas
jns
aas
enter
lahf
lods
imul
sub
push
data16
xor
faddp
ret
jg
outsb
and
cli
pusha
sub
xchg
mov
fcompl
xchg
pushf
push
into
fildll
push
xor
and
insb
ss
bswap
xchg
movl
pushf
mov
mov
mov
sbb
int3
adc
movsb
jmp
sub
lods
lods
in
bound
mov
hlt
nop
aas
cmpsl
mov
call
ret
adc
mov
mov
cmc
les
cmp
cmpsb
push
dec
push
or
add
mov
out
jecxz
jl
cmp
loop
add
push
lock
rol
sbb
rorb
daa
stos
mov
shll
mov
sbb
jno
or
xor
mov
push
inc
jbe
sbb
icebp
test
adc
mov
sbb
dec
dec
and
adc
add
mov
pop
xchg
fldt
sbb
gs
lret
push
mov
adc
inc
xor
or
bound
ret
or
cwtl
jg
js
sbb
loop
pusha
jns
xor
adc
rclb
xchg
je
fdivp
mov
mov
jns
xchg
lcall
mulb
push
cmpsb
rolb
mov
add
les
leave
int3
dec
add
out
add
testl
sti
inc
or
or
icebp
fiadds
pushf
sbb
out
jns
cwtl
mov
adc
mov
lret
or
or
testb
lret
imul
pop
fstpt
jg
cmc
and
lods
jnp
std
cld
mov
ljmp
into
mov
aas
xchg
out
push
adc
mov
xor
xor
push
sub
js
and
fildll
lcall
push
mov
fs
int3
add
mov
pop
jnp
xchg
loopne
lret
inc
into
popf
mov
ret
sahf
sub
jmp
jge
pop
stos
je
call
cmp
push
lcall
scas
int3
cmpsb
adc
push
lret
jns
bound
test
ja
addr16
imul
and
xorb
mov
jo
cli
mov
xchg
popa
dec
or
ljmp
push
stc
insl
popa
leave
push
pop
addb
in
int
test
stc
mov
stos
pop
xor
jecxz
mov
js
push
pop
pushf
mov
data16
mov
dec
hlt
call
dec
xlat
imul
mov
add
add
dec
push
pop
push
pop
dec
idivb
jns
sti
push
add
push
add
or
xchg
fnstenv
scas
mov
sub
adc
movd
mov
and
and
pop
jecxz
jecxz
repz
data16
fcomp
mov
pop
negl
xchg
push
or
add
stos
adc
jmp
mov
push
inc
shll
mov
xchg
push
mulb
cmp
fld
movsl
pop
xchg
stos
inc
mov
jl
mov
sahf
cmp
mov
int
ja
push
mov
outsl
imul
mov
ffreep
repnz
mov
adc
insl
push
mov
and
setno
xchg
fcmovbe
cltd
jb
inc
fsubrs
int
mov
rcrl
xlat
mov
outsb
and
scas
pop
imul
cmp
out
xchg
mov
sbb
inc
push
subl
lret
ret
repnz
xchg
rcrb
dec
ds
pop
test
cmpsl
es
in
fdivrl
bound
or
popf
popw
dec
add
push
iret
mov
loope
dec
aas
mov
mov
lea
dec
dec
fwait
xchg
shlb
xchg
mov
decb
jbe
lret
outsl
xor
push
ret
lea
data16
out
xor
js
stos
in
test
aas
sub
pop
adc
fldt
cmp
push
scas
fstps
xchg
out
scas
xor
sub
dec
lea
mov
xchg
jp
inc
xchg
lea
in
and
movsb
mov
lea
fidivrl
dec
jo
pop
test
mov
inc
adc
scas
dec
mov
cmpsb
ja
cmc
pop
aam
xor
mov
shll
rcr
fldenv
cs
cmp
sbb
xchg
xchg
movsb
and
fisttpll
out
subb
xor
arpl
scas
repnz
outsl
fldt
sbb
mov
xchg
pop
inc
xchg
mov
or
sub
ja
mov
mov
sbb
and
out
xlat
adc
jl
cmpsl
cmp
dec
lret
bound
adc
xchg
and
push
mov
jge
push
ja
xorl
sub
xchg
add
repz
xchg
repnz
shlb
lcall
popf
popa
adc
pusha
push
mov
cwtl
inc
mov
pop
mov
pop
add
add
data16
inc
jnp
push
fcoms
lea
mov
movsb
and
xchg
pusha
outsl
cmp
ret
adc
xchg
ret
insb
popf
jnp
jecxz
push
mov
cmp
dec
mov
pop
imul
sub
hlt
xor
mov
out
sub
or
ja
add
les
sbb
xor
mov
je
jecxz
inc
ret
pusha
ds
jae
gs
call
iret
add
out
fcmove
insl
jp
in
and
inc
dec
jl
push
push
pop
test
es
xchg
fdivrs
sub
adc
imul
adc
xacquire
repz
jmp
cmp
pop
sbb
sbb
and
out
xchg
cmpsb
inc
jno
inc
sub
ret
lret
push
or
inc
mov
mov
sub
sahf
pop
fwait
loope
cmp
mov
std
pop
lret
repz
lods
pop
sbb
scas
aad
add
dec
xchg
ss
sub
sub
push
test
data16
inc
pop
inc
pop
pusha
push
scas
or
pop
lret
pop
mov
cmp
jo
inc
leave
jne
int
imul
pop
xchg
add
or
in
mov
mov
imul
mov
ss
sub
sti
or
inc
in
adc
sarl
and
gs
pop
mov
sub
mov
xor
sbb
mov
outsl
pop
xchg
adc
or
dec
xchg
psubb
or
adc
xchg
ja
in
fcompl
inc
mov
loopne
das
dec
sbb
push
rep
repnz
xchg
dec
or
xchg
xor
loop
jns
push
es
aas
popa
int
jmp
movsb
jle
inc
sbb
xchg
imul
sbb
xor
jl
subb
xchg
and
icebp
ret
je
inc
dec
daa
call
mov
in
scas
xlat
xchg
aas
mov
call
xor
orl
cmpsb
daa
xor
hlt
xor
scas
imul
add
rcrb
push
xchg
shrl
cmp
mov
dec
xor
mov
inc
cmp
mov
stc
mov
inc
fnstcw
pop
and
test
repnz
test
scas
mov
or
pop
adc
cmp
ret
dec
ficoml
cmpsl
lds
fcomps
test
push
arpl
mov
lea
cmp
sbb
add
aaa
jmp
flds
loopne
mulb
lds
cs
mov
es
dec
je
insl
cld
push
xchg
pop
sub
push
mov
inc
aas
out
pop
aam
sti
ja
inc
cltd
inc
jae
pop
jne
ret
lock
movsb
data16
fldl
sub
into
push
inc
push
add
mov
cmc
mov
sub
and
mov
inc
jp
sub
cmp
data16
int
mov
insl
cltd
jl
sub
lock
pop
add
adc
jnp
xlat
movsl
adc
les
subl
lcall
mov
and
pop
xchg
shlb
imul
stos
out
lret
das
repnz
cmp
adcl
mov
outsb
stos
nop
bound
mov
push
loop
aaa
imul
mov
movsb
mov
cmp
sbb
lret
adc
inc
loopne
dec
inc
je
mov
or
xor
clc
pop
pop
std
cmp
pushf
sarl
in
data16
mov
or
sbb
sbb
push
pop
lock
sub
mov
mov
jns
aaa
jg
push
negl
add
cltd
lcall
jmp
test
in
pop
arpl
lcall
sbb
jle
loope
arpl
int3
dec
jp
inc
popf
jnp
sub
add
pop
pop
dec
push
dec
push
pop
pop
mov
inc
xchg
rolb
add
adc
dec
loope
xchg
imull
test
jp
lea
jnp
fmul
and
jmp
push
imul
push
push
cmp
push
mov
xor
add
push
fidivrs
xchg
xor
sbb
or
test
xchg
push
lret
icebp
lret
ljmp
dec
aad
pop
je
sarb
sbb
mov
insl
pusha
test
sbb
sub
aad
fwait
outsb
outsl
mov
stc
sarl
cmp
sub
clc
leave
lea
push
loope
lds
mov
sub
mov
rol
mov
mov
mull
fsts
adc
mov
notl
stos
and
orl
xor
jle
cmp
sub
shrl
jle
sbb
adc
outsb
sbb
mov
ret
mov
push
movsl
xor
add
inc
mov
int
ljmp
cmpsb
lahf
lcall
adc
shl
jle
sbb
inc
bound
xchg
pop
mov
mov
aad
lock
pop
mov
mov
dec
es
mov
mov
mov
in
ret
shrb
rcr
mov
fadds
loope
jno
ljmp
out
sbb
sbb
out
int3
fistpll
test
sub
adc
push
repnz
dec
sub
je
test
paddsb
inc
cld
rcrl
decb
jp
sub
pop
lret
inc
sahf
cmp
push
pop
lahf
mov
das
lods
xchg
out
or
ds
addl
ds
mov
cmp
pop
lea
mov
leave
fs
sbb
je
ljmp
mov
pop
loope
lahf
rcl
sub
jo
sub
xor
sub
adc
pop
jno
sub
in
inc
push
nop
pop
mov
mov
pop
inc
lds
clc
pop
push
enter
sbb
loopne
mov
adc
jmp
rcrb
sub
or
push
scas
repnz
push
jno
xor
dec
jns
push
stos
jmp
cs
mov
sbbl
and
scas
lods
adc
pop
cmp
jnp
daa
jns
dec
and
int3
loop
arpl
sbb
fldenv
cs
mov
and
dec
lds
mov
jb
cwtl
das
or
shlb
mov
add
arpl
dec
lret
jo
mov
out
inc
scas
fdivrl
loop
jge
push
or
mov
or
inc
rorl
mov
sarl
iret
or
jge
popf
shrl
sub
xor
ljmp
push
jecxz
cmp
cmc
mov
inc
mov
test
pop
out
mov
les
jns
xor
jl
sub
and
xchg
xchg
aas
in
sbb
pop
cmpsl
and
dec
push
xchg
sar
rorl
lret
bound
aaa
sahf
mov
das
shrl
clc
inc
into
dec
mov
push
sbb
add
dec
out
ss
insl
loope
rcrb
loopne
jp
outsl
inc
sti
lret
orb
pusha
pop
test
sub
dec
movsb
push
call
pop
fdivrs
xor
aas
aaa
or
and
jg
pop
pop
jp
daa
adc
int3
shrb
in
fcoms
ljmp
imul
pop
fs
lcall
jle
mov
out
in
add
ja
mov
cs
xchg
mov
xor
stos
hlt
mov
pop
int
sub
xchg
adcb
cmp
nop
mov
cld
mov
lahf
push
pop
xchg
movsl
inc
xchg
sbb
sti
addl
sar
pop
mov
rcrb
pop
arpl
repnz
or
pop
insb
push
inc
ljmp
faddl
and
xchg
jae
jmp
and
cmpsb
sub
les
jbe
jb
jl
and
pop
adc
cmp
add
push
push
and
jae
cmp
jo
cmc
ret
rcr
cmp
and
ret
jmp
fidivrs
pop
cld
xchg
sbb
cmp
cmp
sbb
aad
cmp
adc
loopne
out
cltd
into
lret
mov
pop
pop
data16
jmp
popf
shl
add
pushf
dec
imul
nop
push
das
cltd
and
pusha
inc
inc
das
pop
add
gs
push
in
cmp
inc
imul
aaa
bound
jp
fmuls
das
jb
cmp
flds
scas
movsl
cmpsb
mulb
mov
cmp
loop
ret
nop
dec
das
or
movsb
mov
pop
in
push
cmc
xchg
aaa
imul
cmp
dec
int3
sub
into
xchg
mov
js
ljmp
adc
mov
in
rcrb
sub
adc
xchg
mov
pop
fistpll
dec
mov
mov
inc
daa
xchg
add
test
arpl
mov
xor
push
insb
scas
loope
jle
out
sti
mov
and
and
mov
pop
adc
lock
push
xchg
in
rorb
test
add
sti
cli
lock
pop
iret
lret
in
incb
mov
test
cmp
dec
decb
adc
xor
into
movsb
sbb
and
loopne
test
mov
cli
dec
adc
pop
nop
repnz
jle
mov
cmc
cmpl
jnp
mov
dec
and
push
and
lret
inc
push
mov
ficompl
sub
loopne
decl
in
hlt
cmc
stc
jae
cmp
dec
jb
inc
insl
adc
shl
mov
ja
push
cmp
sti
cmp
adc
jmp
scas
les
dec
outsl
sub
aas
aad
loopne
movsl
and
icebp
mov
ja
xor
push
or
adcb
imul
inc
pop
fdivs
out
rcr
add
shl
mov
gs
sub
nop
xlat
fstpt
dec
ficomps
inc
or
cmp
add
push
push
push
inc
push
test
dec
bound
iret
add
rolb
add
jg
orl
mov
outsl
fincstp
fcmove
mul
cmpsb
cmp
cmp
jno
pop
xor
mov
xchg
enter
mov
rcrb
les
loop
cmp
or
push
adc
sti
mov
outsb
push
fdiv
cmp
xor
loope
jecxz
sbbb
and
or
dec
mov
inc
mov
movsl
xchg
inc
imul
int
mov
fldenv
aam
in
add
sub
jne
loopne
loop
cmp
mov
push
ljmp
mov
mov
pop
mov
and
das
stos
add
fiadds
lret
pop
fimuls
outsl
cs
int3
in
stos
shll
mov
push
imulb
divb
sub
xor
fwait
stc
fsubl
shr
xor
adc
cli
outsl
jle
xchg
icebp
mov
add
dec
lret
movsl
lods
jl
test
arpl
mov
repz
stos
add
in
xor
js
int3
mov
sub
test
mov
mov
outsl
pop
inc
adc
ror
ja
enter
stc
mov
add
xor
ficomps
inc
cmpsb
sbb
mov
fsubrl
cmp
adc
dec
test
xchg
push
mov
push
sbb
enter
sbb
pop
cmp
push
adc
gs
insb
adc
xor
mov
mov
xor
out
inc
lods
jg
xor
lods
lret
mov
cmpsl
jb
mov
sub
movsl
jg
sub
leave
mov
and
test
bnd
popa
movsl
mov
pop
dec
fcmovne
ja
mov
js
add
jp
or
xchg
adc
add
xchg
xchg
cmpsb
iret
cmp
dec
sub
ret
sar
leave
xor
xchg
rorb
pop
mov
stos
pushf
jle
sbb
insb
dec
cld
xchg
push
and
push
mov
pop
mov
orb
lahf
pop
cs
mov
fwait
pop
out
pop
stos
fistps
dec
lret
insl
sub
fdivrl
jb
mov
mov
sti
sbb
imulb
outsl
or
fidivs
dec
sti
lret
mov
fbstp
jno
push
sub
pop
inc
xor
andb
ret
fistpll
adc
arpl
and
scas
and
add
xor
dec
jp
in
add
adc
inc
jbe
fwait
jge
leave
insl
jge
jp
pop
push
add
mov
mov
lock
push
jmp
adc
ljmp
pop
insb
out
ss
dec
jmp
jnp
and
pop
sbb
adc
mov
rolb
mov
mov
hlt
mov
push
or
mov
stc
mov
jecxz
jno
loop
mov
pop
insl
stos
pop
and
xchg
push
adc
xor
ja
mov
or
jle
repz
in
lods
push
inc
pop
add
inc
or
or
xchg
xchg
test
inc
ss
cmp
fimuls
fstpt
jl
call
adc
out
jecxz
rcr
xchg
mov
add
call
xchg
orl
lret
adc
jle
in
loop
clc
mov
pop
mov
mov
das
nop
jl
in
fdivrl
add
push
cld
out
in
in
dec
gs
mov
pop
dec
bound
mov
frstor
stos
ret
pop
jns
jmp
pop
add
out
jp
dec
mov
dec
das
mov
repz
mov
push
mov
jb
cli
daa
adc
int
filds
cltd
and
xchg
dec
out
and
sub
in
sub
scas
jecxz
mov
int3
cs
push
mov
repz
push
mov
xchg
mov
mov
loop
adc
ret
xchg
jno
testl
pop
test
push
repnz
adc
mov
mov
or
aad
sbb
push
out
xlat
loop
hlt
mov
out
or
dec
push
jo
and
rclb
cmp
loope
into
inc
inc
scas
dec
hlt
and
xchg
mov
or
inc
or
lock
xchg
push
movsb
xor
ret
xchg
mov
call
push
scas
sbb
repnz
test
leave
inc
mov
mov
inc
xlat
or
inc
test
inc
arpl
test
pop
jg
dec
dec
xchg
out
int3
ud1
test
add
stos
lahf
mov
decl
call
icebp
xor
jnp
bound
xlat
dec
jo
andl
repz
jo
clc
notb
cltd
mov
sti
enter
push
hlt
pop
xchg
and
sbb
sbb
dec
or
fistpll
pop
ret
jmp
add
adc
cmpsl
pop
lahf
repz
mov
mov
dec
push
inc
pop
mov
out
adc
aaa
cmp
shl
push
adc
add
ss
or
rolb
jo
cwtl
lods
scas
popf
xor
addr16
insl
lods
xor
add
cwtl
inc
pop
test
or
jae
inc
sub
add
mov
popf
cmp
aam
cmp
sbb
aaa
in
and
clc
pop
inc
shlb
pop
jbe
jp
or
sub
lea
ss
lds
and
cmpsl
pop
xor
mov
jmp
iret
lret
xchg
adc
in
pop
jge
cmp
insl
adc
call
sbb
scas
and
cmpsb
js
lods
cmovno
lcall
sbb
jo
inc
adc
inc
and
pop
adc
test
add
inc
int
andb
test
cmp
push
and
inc
mov
mov
sbb
adc
mov
jne
dec
mov
sbb
dec
lds
xchg
rcl
fisubs
mov
int
ss
lods
mov
mov
in
std
cmp
cmp
add
dec
inc
pop
dec
pop
pop
inc
cwtl
inc
loop
rolb
add
insb
clc
in
adc
cld
mov
pop
lea
sahf
or
aaa
jecxz
ficoml
imul
outsl
outsb
call
aam
roll
xor
pop
xor
es
call
jbe
cmpsb
cld
data16
dec
fldl
mov
mov
push
pop
pop
fs
jb
decl
mov
jp
inc
subl
andb
xchg
test
jnp
cs
cmp
out
js
sub
push
ljmp
xchg
adc
and
movsb
mov
sub
jnp
lock
clc
loope
icebp
and
push
cmpsl
jns
add
lds
cmp
pop
jae
dec
es
test
pop
in
enter
adc
movsl
and
inc
cwtl
mov
int3
and
jno
mov
mov
mov
inc
jnp
outsl
mov
loope
xchg
jp
push
mov
ret
pop
inc
or
sbb
add
xor
rorb
popa
andl
inc
scas
testb
and
fcomi
cwtl
mov
cli
hlt
les
jno
push
mov
jle
inc
mov
movsl
cmp
fsubs
adc
xchg
jmp
out
mov
fldcw
scas
pop
push
xchg
pop
jg
lods
add
movsb
xchg
mov
test
subb
dec
or
jns
into
push
daa
mov
jecxz
lret
pushf
loop,pt
out
xchg
pop
pop
gs
cmp
stos
cmp
int
dec
repnz
dec
aaa
cmp
xor
xchg
std
popa
pop
adc
repz
sub
rorb
sbb
add
loop
test
xor
arpl
pop
inc
dec
fdivs
jl,pn
xchg
and
movsl
push
scas
push
js
cmpsb
cmpsb
mov
fs
insl
push
cmc
xor
outsl
jb
cld
dec
in
lods
daa
adc
ss
repnz
jge
lcall
jecxz
xor
popa
es
jecxz
push
mov
fsubl
jl
pop
inc
dec
in
cmp
in
testb
imul
lahf
bound
icebp
sarl
sahf
jp
jne
dec
movsl
adcb
js
jp
loop
sbb
fdivr
add
or
jl
dec
fcoms
xchg
scas
jne
add
pop
int3
or
out
imul
inc
jb
aas
jmp
and
nop
test
xchg
adc
shlb
inc
clc
popf
lock
call
lcall
imul
mov
fs
xchg
cmc
sub
call
xor
fsubrl
mov
mov
mov
outsl
push
mov
repz
loope
sbb
movsb
fdivrs
mov
mov
mov
lahf
mov
movsl
iret
and
pop
fwait
dec
enter
and
push
gs
sub
sub
je
das
cs
xor
in
les
div
mov
aad
into
xchg
add
int
inc
pop
xchg
outsb
pop
jno
aad
sbb
inc
xor
dec
sub
stc
sbb
pop
pop
hlt
cmpsb
adc
push
mov
jge
xor
fs
and
clc
lret
pop
hlt
loopne
jbe
repz
ss
fidivs
adc
jg
xchg
insl
sbb
xchg
sbb
pop
mov
sar
test
xor
push
xchg
sbb
pop
push
push
movsl
xchg
popa
insb
clc
pop
andl
xchg
movsl
fwait
lods
mov
arpl
jbe
and
bound
arpl
movsb
push
fmull
cmpl
cltd
xor
dec
jmp
xchg
jno
test
jl
push
rorb
outsw
out
jl
fdivrl
mov
dec
cmpsb
pop
mov
addl
shlb
dec
sti
mov
cs
add
in
test
testl
out
leave
loop
pop
je
outsl
pop
xor
mov
outsl
dec
xchg
cmpsl
data16
gs
sub
stc
fsubrl
divl
mov
pop
and
sub
stc
inc
ret
cld
ss
jne
jne
xchg
mov
mov
loope
push
lods
sub
sbb
nop
jg
adc
and
pop
add
dec
adc
mov
and
bound
sbb
push
loop
mov
nop
out
mov
push
mov
push
out
cmovge
jbe
rcrl
xor
mov
movsb
insl
loop
pop
jnp
jne
call
jmp
fsts
sbbl
cmpsl
add
fs
dec
hlt
out
test
rcl
sub
jp
orb
lds
push
jl
fstpl
jne
cmpsb
xor
in
mov
ficoml
mov
and
and
xor
ret
js
push
mov
jae
inc
jle
loope
push
pop
adc
out
push
cmp
jns
mov
sub
rorb
mov
aas
mull
iret
xor
pushf
cmp
mov
sub
pop
aas
hlt
int3
dec
icebp
add
fstpl
lahf
bound
ficoms
das
jo
mov
xchg
mov
dec
rorl
fwait
mov
mov
jg
ja
sbb
lcall
andl
hlt
adc
aas
jge
rorb
inc
pop
cmp
jle
mov
cltd
int3
dec
subb
xchg
ja
pop
or
shl
in
jae
je
jmp
pop
cmp
test
outsl
inc
lods
loope
pop
jg
xchg
jg
mov
repz
and
mov
push
xor
cs
push
icebp
cmpsb
and
or
cmp
inc
fistpll
pop
dec
inc
adc
cmp
cmpl
lea
add
fsubrl
xchg
mov
sahf
lods
int
dec
mov
mov
or
sub
fcmovnb
fidivrl
lods
imul
jo
sub
lcall
and
leave
sub
dec
or
jne
xchg
int
repnz
aas
jg
or
inc
sbb
mov
loop
into
jb
scas
jge
mov
aas
insl
insb
ds
xlat
cld
sbb
mov
add
push
push
push
push
push
inc
rorl
popf
ret
adc
faddl
add
push
add
lret
push
push
popa
js
sub
adc
test
ret
movsl
xlat
gs
adc
cld
fwait
out
mov
xor
cmp
jmp
mov
rolb
xchg
pop
push
cmpsb
ljmp
mov
test
outsl
mov
cltd
cmp
push
mov
cmp
jne
jb
mov
dec
lcall
data16
xchg
push
dec
aas
std
push
and
mov
mov
stos
or
mov
mov
sarl
inc
add
mov
inc
fnstcw
lea
inc
mov
scas
push
xor
xchg
add
jge
loopne
and
mov
ret
sub
lret
mov
addr16
insb
adc
jnp
mov
ljmp
sub
push
bound
test
test
mov
mov
jbe
out
jmp
dec
nop
dec
test
rorl
sahf
data16
fcomp
daa
lea
stos
xor
jne
cmp
mov
loope
jno
repnz
lods
ds
inc
sub
xchg
in
int
lea
mov
jae
pusha
into
or
rcl
cmp
repnz
jge
stc
jmp
dec
mov
aas
push
mov
in
stc
repz
mov
leave
mov
andl
js
mov
add
pusha
iret
fs
xchg
and
add
add
xchg
es
jo
icebp
fimuls
movsl
mov
push
popa
mov
cmpsb
movsb
mov
cli
fs
or
sti
inc
jecxz
icebp
jno
inc
lock
insl
adc
pop
jae
jl
push
cmc
xchg
jmp
fidivl
int3
call
lods
mov
lret
xor
cld
jmp
mov
scas
aad
dec
icebp
test
push
add
dec
xchg
pusha
in
jnp
std
stos
cltd
out
sub
pop
inc
mov
push
dec
inc
out
cld
sbb
pop
aam
loop
add
push
dec
in
pop
out
lcall
mov
pop
push
pusha
outsl
popf
mov
add
jg
pop
test
aas
cmc
xchg
int3
test
ret
push
inc
cmpsl
jae
arpl
int
cltd
scas
lods
mov
and
cmp
nop
jecxz
mov
sahf
adc
fstl
xchg
inc
adcb
std
adc
pop
jle
pop
hlt
xchg
sbb
fidivrl
dec
adc
and
mov
in
leavew
test
and
or
mov
repz
jmp
jns
icebp
adc
je
inc
into
cs
daa
jecxz
push
ljmp
ds
push
fcmovne
lcall
push
cmpsl
xor
stos
cmp
push
insl
pop
loope
or
aad
scas
pop
mov
repz
cmp
mov
jp
jp
push
jo
clc
and
mov
roll
testb
mov
xchg
pop
pop
fidivl
jb
lahf
nop
imul
repnz
in
jg
out
or
xor
into
dec
or
dec
and
dec
call
clc
fdivrs
inc
inc
sub
push
lock
lds
imul
push
nop
out
mov
jnp
jo
adc
jg
and
add
sbb
pop
data16
xor
repnz
fisttps
fidivrs
lret
out
mov
sbb
and
mov
lock
test
xorl
sbb
jp
jecxz
cli
ds
pop
in
aad
cmc
loopne
aaa
adcb
push
mov
cmpsl
sti
ljmp
adc
jne
mov
push
stos
cld
xor
cltd
lods
jns
push
scas
mov
dec
adcl
outsb
push
add
dec
clc
ret
arpl
jnp
mov
inc
fsubl
dec
outsb
les
int3
mov
push
lods
mov
mov
ror
je
aad
flds
xchg
pop
mov
rcl
xor
sub
mov
in
mov
mov
push
cmpsb
rcrb
cwtl
call
sub
sti
xor
cltd
fstps
or
fists
aad
pop
mov
push
daa
insb
sbb
je
in
mov
cwtl
or
ret
xor
fiadds
sti
mov
mov
fistl
cmp
add
mov
push
outsl
xor
je
leave
jmp
cmpsb
rol
cli
jecxz
int3
push
sbb
and
mov
xor
adc
push
loope
nop
mov
sbbb
lret
pusha
mov
repz
xor
and
inc
push
xor
fcompl
cmp
int3
lahf
mov
mov
jnp
mov
fiaddl
adc
and
js
adc
dec
lret
je
movsb
xchg
flds
push
xchg
sub
push
pusha
jle
and
pop
int3
jmp
imul
push
dec
push
imul
inc
adc
fldenv
sbb
push
mov
aam
sub
inc
pop
fdivrl
push
add
pusha
out
in
int3
adc
dec
push
popa
outsb
mov
sub
push
ds
push
fcmovnu
push
sub
mov
in
ret
dec
hlt
inc
dec
fmul
outsb
jns
pusha
mov
mov
insl
test
xor
or
faddl
test
aas
out
add
adc
inc
jecxz
xchg
mov
xchg
jnp
sub
ss
in
aaa
mov
mov
cmp
test
mov
daa
mov
popf
loop
pop
xchg
stos
rol
test
xchg
mov
ljmp
enter
mov
jmp
insb
jnp
insl
cmpl
mov
mov
mov
mov
sbb
imulb
or
xchg
pop
out
adc
cmp
arpl
pop
inc
loop
pop
leave
xor
out
xlat
cmp
jbe
push
outsl
pop
shll
cmc
ficoms
stos
mov
fstp
cli
add
stos
repnz
add
fs
sub
push
dec
jmp
cmpsb
mov
sub
test
out
test
push
mov
adcl
and
stos
jl
mov
pop
out
jl
lock
adc
sbb
jns
aas
mov
popf
iret
into
and
int
stos
sti
and
xor
test
mov
sub
add
push
push
pop
push
pop
pop
xchg
stos
mov
mov
rolb
add
pop
jl
adc
xchg
bound
fidivrl
mov
js
sahf
cmp
repnz
jne
loop
mov
scas
inc
rclb
push
adc
inc
notl
mov
xchg
imul
jo
lret
aam
sti
loope
aas
mov
jno
nop
xlat
inc
je
scas
jle
xchg
pop
fwait
jnp
xchg
movsb
mov
stc
jno
in
and
movsb
pop
add
lea
mov
lds
xchg
add
lea
xchg
or
pop
adc
test
jnp
sbb
cli
push
lahf
sbb
test
dec
mov
ret
mov
mov
mov
addl
jnp
ret
sbb
cwtl
nop
test
jb
cwtl
mov
mov
lods
jno
pop
mov
lods
les
jp
out
cmp
int
mov
pop
and
int3
dec
jno
aam
and
mov
jle
mov
inc
mov
mov
xchg
out
mov
add
outsb
mov
push
js
sub
pop
in
inc
mov
int3
bound
add
and
in
push
out
fsubl
mov
or
loop
cmc
jge
mov
scas
fldcw
pop
jg
and
adc
xchg
pop
add
ljmp
fs
and
enter
jmp
fistl
cmp
das
sti
cwtl
add
fbld
sbb
sbb
jne
mov
int
cs
mull
xchg
mov
mov
dec
xor
jbe
add
cmpsl
inc
daa
pop
daa
push
int3
inc
movsb
cmpsb
or
sbb
lea
arpl
cmp
ja
outsl
pop
nop
jmp
jae
fdivrl
fwait
mov
push
xor
sub
shlb
pop
add
repnz
push
dec
je
jmp
pop
dec
dec
out
and
pushf
scas
fimull
pmaxsw
mov
push
mov
mov
insl
mov
arpl
inc
sbb
lret
inc
xchg
and
or
mov
mov
inc
mov
or
sbb
cli
in
fnsave
sub
int
mov
mov
xor
mov
push
inc
arpl
and
mov
pop
popf
adc
leave
mov
popa
in
lret
mov
sbb
loope
call
or
fxch
xlat
inc
out
mov
pmaddwd
mov
aaa
adc
dec
xchg
xor
call
and
mov
add
out
stc
mov
cmpsl
aas
loope
push
pop
pop
mov
out
popa
sub
daa
xchg
jnp
nop
adc
or
mov
ror
mov
lods
cmp
rcll
adc
adc
sti
cwtl
cmc
fs
cs
push
jne
pop
inc
jnp
cli
pop
mov
mov
jmp
insb
push
test
xor
inc
xor
dec
mov
cmp
and
push
stos
adc
in
xchg
lods
iret
xchg
jp
inc
outsb
fbld
sbbb
movsb
xor
insl
mov
mov
cs
mov
sbb
xor
std
jae
out
fbstp
lcall
jnp
push
jns
push
dec
aas
sahf
mov
and
dec
sbb
pop
inc
ja
mov
and
mov
lcall
jnp
scas
fs
xchg
iret
lea
data16
mov
scas
rorl
dec
les
inc
xor
icebp
mov
pop
mov
movsb
sub
sbb
push
xor
and
add
pop
xchg
cmp
adc
xchg
and
cmc
push
icebp
pushf
imul
jecxz
movq
add
mov
dec
adc
xchg
mov
andl
psubsb
pop
orl
jbe
fs
test
or
shlb
mov
repz
inc
xor
adc
sti
xchg
jecxz
jg
pop
pushl
jg
inc
sarl
fwait
movsl
pop
sub
iret
add
dec
lea
pop
cltd
pop
je
fsub
lret
add
aas
loopne
sbb
jae
clc
mov
ret
jmp
insb
lret
dec
filds
ficoms
outsl
jle
rcll
push
pop
popa
cmp
add
sbb
jns
adc
push
push
cmp
pop
lds
scas
icebp
or
shl
sbb
mov
ss
pop
sbbb
adc
lret
mov
jle
cmpsl
out
sahf
test
jae
aam
push
dec
call
fdiv
inc
dec
and
mov
push
and
mov
popf
popa
mov
fs
mov
mov
or
or
mov
in
and
pop
enter
dec
jecxz
xor
imul
jl
lea
mov
add
inc
sahf
sub
xor
dec
jle
inc
gs
or
pushf
add
add
mov
std
push
jb
mov
fidivs
sub
add
pop
dec
cmc
jmp
loope
jbe
mov
in
or
mov
ds
sub
mov
enter
cs
jns
sbb
and
xchg
add
mov
cs
lahf
inc
or
movsl
outsl
imul
mov
jmp
daa
inc
mov
dec
je
mov
sbb
mov
inc
iret
in
ds
xchg
call
sahf
fimull
movsb
lds
jnp
pop
ja
iret
mov
test
es
pushf
in
sbb
sbb
jmp
psraw
cmpsb
push
cmpsl
imul
aad
out
pop
add
push
fwait
or
fldl
in
jecxz
inc
int
cmpsb
shlb
stos
ficoms
es
repz
mov
pop
add
cwtl
adc
jmp
jge
dec
sub
mov
push
pop
lcall
add
dec
rorb
cmpl
push
adc
aam
adc
mov
push
ja,pn
jmp
and
or
int3
mov
test
xor
stos
and
jae
dec
push
lret
repnz
mov
pushf
adc
scas
cltd
sub
dec
inc
push
push
pop
push
dec
pop
idiv
pop
call
rolb
add
insb
subb
cmpsl
nop
ja
and
iret
imul
ret
scas
cmpsb
imul
inc
sub
into
jg
pop
outsl
adc
sbb
jae
or
jb
push
cli
mov
pushf
xlat
mov
aas
cwtl
cwtl
int3
stc
cmp
add
and
orb
xor
hlt
or
and
sbb
inc
data16
add
add
lret
ja
fadd
mov
jle
enter
inc
inc
or
jno
or
popa
mov
jle
popf
outsb
push
cmp
leave
aad
add
nop
mov
sub
pmulhuw
and
push
mov
mov
or
add
mov
in
mov
sbb
cld
xchg
dec
mov
adc
push
pushf
testb
dec
jo
outsb
push
mov
pushf
cld
mov
mov
pop
pushf
sub
sbb
cmp
cs
fdivrl
sahf
mov
push
out
cwtl
sub
call
stos
jp
mov
sub
lods
test
jnp
adc
mov
pop
mov
sub
loope
mov
sbb
std
ret
scas
sub
rclb
out
cmp
jne
clc
push
out
je
dec
cmp
subl
inc
in
pop
mov
push
fwait
scas
xor
test
and
pop
rcr
push
roll
mov
shrb
subl
adc
sbb
cld
jle
popw
je
fcmovnu
xor
loopne
pop
mov
pusha
ds
loope
repnz
outsb
ja
cmp
sub
arpl
cmp
mov
mov
mov
xchg
push
repnz
rorl
xlat
xor
int
inc
sarl
out
xlat
jb
push
lods
out
loope
leave
insb
jo
fwait
push
mov
or
mov
jo
and
sahf
mov
fs
dec
xorl
arpl
in
sbb
cmc
xchg
stos
fcmovu
dec
adc
add
cmp
rorl
lahf
sbb
inc
sub
inc
mov
and
pop
lret
xor
cmpsb
cmp
inc
or
inc
and
push
aas
pushf
adc
xchg
cltd
icebp
mov
in
cmp
push
int3
mov
jmp
mov
jb
test
cmp
xchg
xchg
xchg
jecxz
clc
in
rep
es
inc
mov
cmc
arpl
add
cmp
mov
pop
gs
pop
sbb
iret
in
or
cmp
push
je
cmp
dec
push
cs
shll
repz
incb
aam
clc
lret
cmp
push
ja
aas
xchg
sahf
mov
test
or
enter
mov
xchg
push
out
arpl
jmp
mov
repz
sub
adc
jb
outsb
fnstcw
mov
mov
sub
jns
mov
and
jmp
insb
cltd
adc
lahf
xorl
dec
pop
in
data16
fwait
sbb
inc
testl
fwait
cmp
int3
mov
jnp
or
int
lcall
shl
sbb
ja
push
cmp
iret
ror
std
int
clc
lock
cld
push
lock
cmp
insl
out
nop
adc
pop
sbb
mov
scas
lods
xor
fwait
pop
sahf
dec
cltd
mov
ret
add
psrlq
je
movsl
xor
push
sbb
xchg
aaa
or
ret
fwait
lods
fidivl
mov
ljmp
and
idivl
cmpsb
je
push
addr16
pusha
aam
stos
mov
jmp
in
adc
jecxz
xor
sbb
mov
add
xchg
andl
paddd
cmc
add
or
test
dec
or
scas
push
xor
leave
xorl
sub
cmp
movsl
mov
sbb
inc
in
mov
mov
addb
les
adc
xor
in
xor
in
mov
mov
test
shll
fwait
and
add
enter
mov
or
je
pop
in
mov
ret
ret
push
push
sbb
in
pop
and
das
lock
sahf
cmpsl
mov
iret
loopne
sti
and
stc
cmp
dec
int
fistpl
pop
mov
adc
scas
es
and
lods
adc
outsb
pop
fldenv
jae
add
mov
imul
movsb
cmp
repz
dec
push
cmp
hlt
in
sub
scas
movsl
test
fisttps
test
xor
lret
imul
inc
cmpsl
pop
push
iret
rcr
icebp
mov
sarb
jecxz
lahf
das
mov
aas
jle
adcb
xor
int3
outsl
movsl
xor
les
lret
out
mov
pop
push
mov
cmp
stc
pop
xor
ja
xor
cltd
pop
pop
stos
add
add
aam
daa
xlat
jnp
xor
mov
pop
test
inc
popf
ret
pop
les
jne
aam
in
dec
cmp
mov
scas
into
jg
xchg
sbb
cmp
add
cmc
scas
shll
sub
xchg
mov
test
sbb
xlat
shll
and
lods
or
xchg
or
sti
mov
add
and
xor
or
dec
sbb
mov
pop
or
mov
testb
cmp
test
sub
mov
in
mov
outsb
hlt
clc
test
test
lret
out
mov
mov
stos
jno
cmp
push
iret
pop
fidivl
rclb
sub
cmp
mov
rorb
push
dec
cmp
push
sub
push
xchg
int
popf
adc
cli
xor
lcall
ficomps
inc
jp
mov
xchg
stos
or
push
lds
sbb
into
out
das
aas
push
mov
push
ja
sahf
add
inc
xchg
sbb
mov
fwait
or
aaa
movsl
adc
pop
hlt
push
cld
mov
fildl
mov
mov
rolb
xchg
jle
jl
adc
jns
sahf
aaa
mov
fwait
add
inc
inc
inc
pop
inc
pop
pop
pop
mov
push
mov
insb
repz
inc
icebp
add
rolb
add
pop
outsb
mov
mov
pop
add
push
or
adc
adc
mov
ja
jae
jp
fstpt
jbe
jns
fwait
pop
xchg
mov
cmp
cmp
fdivrs
and
ret
jbe
push
xchg
sbb
jmp
dec
and
jg
stc
aam
js
lcall
adc
push
out
decl
es
mov
sbb
fwait
inc
push
xchg
sub
pop
cmp
xor
push
test
dec
dec
frstor
arpl
cmpsb
sbb
xchg
mov
inc
inc
ret
outsb
lods
stos
adc
lds
imul
adc
in
clc
or
outsb
fcmovne
sahf
mov
faddl
jl,pn
inc
pop
cmp
cmp
cwtl
sbb
and
cmp
lret
das
push
xor
xor
cmpsl
xchg
pushf
int
push
inc
repnz
js
mov
out
dec
jge
cmp
int
mov
aaa
nop
xchg
mov
loop
ror
insl
pop
hlt
addl
xor
xchg
in
jl
inc
out
sub
mov
cmovns
loope
rcr
xor
out
mov
movsl
jge
test
out
push
lock
pusha
popf
sbb
in
mov
je
pusha
adc
xchg
push
xor
xor
aas
xor
lcall
inc
sub
cmp
repnz
cwtl
sub
mov
insl
push
or
sbb
or
jmp
insb
roll
xchg
sbb
stos
fwait
jmp
mov
test
xor
mov
lea
mov
push
outsb
mov
mov
inc
aad
inc
cmp
fsubl
and
and
xor
idivl
push
adc
lds
shrl
cs
inc
test
cwtl
out
lods
jb
xchg
add
jmp
adc
dec
ret
dec
or
sbb
scas
jmp
sbb
push
xchg
imul
lahf
ror
mov
inc
cli
add
subb
clc
in
xor
lds
or
hlt
inc
push
fs
mov
inc
mov
cld
fcoms
push
pusha
xlat
mov
adc
iret
scas
int3
and
cmp
cmp
cmp
out
jae
enter
imul
rcrl
repnz
push
loop
dec
loop
xchg
and
pop
or
daa
into
lahf
xor
dec
jle
cmp
xchg
sti
cmp
mov
leave
dec
ror
jne
js
cmp
push
pop
pop
clc
pop
lret
pop
jg
sub
sub
xor
fildll
pop
and
mov
xchg
dec
or
movsb
dec
xor
sbbb
push
add
adc
jmp
pop
mov
xor
xor
es
shll
mov
in
jnp
stos
jle
out
aas
insb
mov
xor
adc
xchg
pop
daa
das
and
out
std
push
push
jbe
mov
outsl
into
lahf
out
mov
pop
sbb
xorb
loopne
xlat
test
cs
push
cmpl
push
inc
sahf
fcomps
or
stos
notb
test
repz
iret
sub
fistps
xchg
gs
mov
loope
jo
or
xor
jp
ret
jmp
sbb
push
roll
pop
pusha
push
cmpsb
imul
mov
aam
insb
push
fs
pusha
jge
push
pop
mov
lret
movsl
imul
add
adc
int3
dec
popf
jb
xchg
dec
shrb
push
pop
arpl
ror
cli
sub
push
jle
lcall
jp
xor
repz
aad
out
mov
shlb
and
jmp
out
pop
in
ret
cmp
mov
cmp
fcmovb
mov
dec
push
jmp
ret
xor
fs
dec
hlt
fsubl
insl
stc
fs
lods
popf
adc
jb
out
lds
ret
dec
sub
or
test
fadd
xchg
mov
out
sub
imul
mulps
fiaddl
mov
and
test
es
call
and
pop
cmpsl
shrl
jnp
adc
cmp
shlb
mov
out
test
cltd
scas
mov
repz
add
mov
mov
and
xor
and
and
xchg
adc
xor
inc
add
mov
popa
scas
scas
sahf
inc
xchg
lods
push
xlat
test
mov
mov
push
sub
test
mov
or
cmp
test
repz
sbb
dec
cmp
mov
or
stos
and
test
scas
loop
jno
popf
add
clc
in
cmpsb
jg
clc
and
push
loopne
stos
ror
mov
repz
loope
ffree
or
sbb
push
pushf
mov
jbe
cmpsl
aam
and
dec
shll
rcrl
call
cmpb
sub
mov
cmc
imul
lods
mov
cld
clc
imul
rcr
sub
cltd
repnz
fisttpll
xor
jns
test
outsl
scas
push
clc
xor
out
mov
rorb
rcrb
pushf
sbb
cli
in
lods
leave
cmp
mov
sub
rorb
add
mov
idivl
popf
xchg
inc
add
sti
pushf
addr16
dec
jns
sub
popf
mov
faddl
push
out
xor
arpl
in
ljmp
adc
mov
sbb
pop
dec
xchg
loopne
jb
mov
xor
les
mov
and
cs
lods
and
pop
cmc
sbb
dec
je
adc
mov
sahf
aas
fstl
inc
mov
or
push
xor
lock
inc
repz
mov
rcrl
or
aaa
fldl
int3
mov
dec
das
sub
jne
loopne
sbbl
imulb
mov
cmp
out
mov
lods
fidivs
adc
jno
sbb
cs
ret
sbb
in
jno
sub
cmpsb
jne
cmc
cld
out
xor
mov
jl
push
jnp
push
or
push
sbb
fiadds
add
inc
push
pop
push
pop
pop
ss
imulb
jnp
mov
add
push
add
rorl
sub
push
jp
loopne
cltd
add
push
push
daa
int3
mov
lea
dec
fbstp
and
lods
rorl
or
dec
or
jb
sbb
cmp
xor
cmp
mov
add
bound
fisttpl
call
rolb
xchg
push
jp
mov
cwtl
icebp
shll
icebp
pushf
inc
dec
lret
jo
push
roll
lret
and
or
fcmovnu
ds
mov
clc
xor
jl
mov
add
int
es
xchg
sub
jns
adc
xchg
jge
test
mov
dec
jp
ja
lds
pop
adc
popa
mov
repnz
aam
inc
pop
cmpsb
dec
mov
pop
or
cmp
xchg
jmp
dec
xchg
push
mov
loop
mov
mov
mov
lcall
sub
mov
and
cmp
in
lds
add
cmp
xchg
push
ror
lret
jns
mov
and
rorl
mov
ret
cmp
aad
lods
fs
mov
and
cmpsl
cmpsl
push
push
and
xchg
out
scas
push
rclb
lods
enter
int3
insb
aaa
in
or
jg
and
data16
call
mov
shr
sub
aam
cmp
shrl
push
mov
pop
xor
jns
inc
xchg
popa
out
imul
cmpsb
or
mov
pop
or
gs
xor
insl
mov
lods
adc
test
mov
imul
in
push
test
cmc
pop
mov
in
xchg
notb
mov
out
xchg
inc
test
inc
js
dec
test
ret
mov
pop
int
je
sub
mov
xchg
jle
push
lahf
rcrl
andb
xor
ss
aas
fnstcw
std
fdivs
jg
dec
jle
mov
testl
cmp
clc
shlb
hlt
pop
int3
push
outsb
fadds
and
cltd
push
fisttpll
mov
loop
jns
push
fadds
lods
shrl
push
pop
inc
jle
std
push
mov
jmp
jb
mov
lret
sbb
inc
lret
xchg
fimuls
scas
pop
jnp
inc
push
jp
mov
rorb
mov
scas
xor
jns
lahf
cli
or
repnz
shrb
bound
pop
mov
das
cld
xchg
psubw
out
cli
in
mov
fs
lahf
pusha
iret
jno
adc
push
jnp
cmp
lret
jno
adc
neg
iret
or
push
sub
push
ret
xchg
dec
pop
movsb
mov
xchg
add
push
test
insl
cltd
test
cltd
into
mov
les
cmp
neg
or
cmp
data16
or
lahf
pcmpeqb
aad
pop
cld
jo
sti
in
mov
in
mov
xor
push
rcr
dec
jne
ja
sbb
xchg
outsl
adc
sahf
cmp
jae
push
fst
xchg
dec
push
in
orl
or
mov
aaa
xorb
cmp
dec
popl
xor
pop
lret
inc
mov
dec
sub
cmp
loope
or
adc
jmp
cld
and
mov
push
aaa
test
mov
inc
test
stos
cmp
cmp
cmp
cltd
loop
stos
lahf
jns
mov
or
aaa
sbb
cmp
pop
adcb
push
test
cld
in
andl
sub
or
and
mov
pop
daa
outsb
mov
popf
dec
insb
pusha
je
repnz
or
ljmp
inc
test
stos
fsubrl
test
jb
adc
or
cmp
mov
jle
cmpsb
popf
cs
fcompl
adc
xchg
lret
pop
or
ret
aaa
aam
push
or
cltd
test
inc
out
jl
insb
rcrl
loope
fisttps
ja
dec
popa
push
push
ja
add
xchg
mov
lahf
ss
xor
out
lods
mov
or
add
dec
arpl
in
xchg
sbb
hlt
jae
mov
rcrl
pop
mov
xor
mov
inc
mov
push
pop
push
inc
mov
mov
nop
cs
sbb
xchg
add
cwtl
arpl
scas
xor
call
insb
imul
inc
push
sub
dec
les
lods
lret
in
sub
adc
scas
andb
mov
test
jo
add
sbb
mov
add
int
aaa
neg
mov
xor
out
cs
jle
adc
mov
cmpsb
push
sbb
jp
inc
movsb
cld
insl
dec
fs
setp
cmp
int
mov
dec
scas
mov
pushf
aam
inc
loop
in
mov
inc
lcall
mov
pop
daa
inc
dec
xor
or
adc
adc
inc
dec
insl
jge
sub
jnp
scas
pop
jl
out
xor
mov
shlb
fdivrs
popf
xchg
cwtl
xor
and
dec
movsl
insb
imul
push
add
lret
ljmp
or
sbb
js
cmp
test
jg
je
int3
js
push
cmp
in
test
add
pop
fs
mov
fcoml
out
scas
mov
xchg
out
dec
inc
add
movsl
push
lods
fcomps
push
adc
pop
xchg
mov
shlb
jns
xlat
sub
mov
fwait
mov
pop
cmc
xor
pop
mov
or
sti
xchg
rcrb
arpl
inc
sub
mov
insl
pop
and
dec
popf
dec
ret
fwait
mov
aaa
jmp
jnp
sub
daa
jecxz
sbb
ja
dec
pop
inc
mov
or
jne
sbb
mov
mov
mov
cwtl
jns
sbb
insb
adc
mov
push
fs
xchg
and
push
addr16
xchg
push
add
ret
imul
rol
js
and
mov
test
fisttpll
add
inc
push
dec
inc
pop
pop
dec
push
dec
push
enter
pop
inc
out
add
rolb
add
inc
in
div
pop
ret
ss
into
roll
dec
xchg
mov
fdivs
mov
jbe
xor
cmp
pusha
jns
inc
lds
jg
jae
test
mov
scas
push
mov
sbb
cmp
pop
mov
out
stos
aas
cmp
pop
mov
cmp
push
aad
xor
push
inc
fistpl
and
sub
fs
hlt
or
jns
jns
lea
jns
mov
enter
jmp
cld
nop
lahf
jmp
and
lcall
dec
lds
cmp
lahf
test
jbe
dec
xchg
jno
icebp
out
sbb
mov
push
or
push
test
jnp
xchg
mov
adc
adc
call
repnz
mov
cmp
add
inc
stos
xor
cmp
mov
lock
test
push
test
xor
aam
bound
fldt
jnp
test
inc
hlt
jns
in
imul
sub
or
outsb
fcomps
mov
lret
sbb
push
dec
xchg
add
add
jge
cmp
mov
sbb
mov
cli
mov
cltd
sub
inc
mov
aad
int
std
pop
pop
hlt
jmp
test
push
xor
das
jp
lret
fwait
dec
adc
pushf
inc
dec
or
popa
sti
dec
xchg
mull
insb
into
pop
fists
or
cld
popf
push
call
rcrl
pop
loopne
pushf
inc
inc
jns
sbb
mov
dec
jns
stos
xor
cmp
mov
pop
lret
jle
jns
clc
test
push
insl
test
test
out
fildl
fcoml
lock
bound
and
out
adc
xlat
xor
aaa
stos
push
mov
push
mov
or
ret
mov
mov
mov
stc
js
mov
outsl
sbb
fdivrl
mov
movsl
or
inc
sub
mull
insb
int
dec
std
xor
leave
xor
mov
icebp
out
bound
mov
xor
fcomp
and
push
xchg
mov
xor
les
js
adc
mov
inc
test
scas
xchg
pop
std
repnz
dec
repz
xchg
data16
sub
fadds
test
int
jp
mov
mov
lods
sbbb
stc
xchg
and
je
and
jl
vhsubpd
clc
popf
xor
xchg
mov
das
out
adc
fists
inc
mov
fidivrs
les
pop
mov
mov
xchg
xlat
push
pop
mov
aad
ret
cmp
cmpl
or
sahf
dec
imul
adc
dec
sub
push
adc
and
lret
jo
jns
sub
fnstsw
jo
or
xor
sub
aad
inc
xorl
xlat
mov
shrb
repz
scas
jo
dec
mov
mov
xchg
push
out
das
pop
mov
inc
lods
xchg
int3
dec
mov
mov
sub
call
cmp
ja
sbb
cli
orl
push
shrl
lock
hlt
and
inc
mov
sub
push
lea
and
cmp
inc
xchg
adc
lea
cmp
push
jle
imul
and
lcall
xchg
sahf
popa
test
jge
cmp
scas
ja
stos
test
call
mov
jb
sub
mov
mov
sub
les
adc
mov
or
fwait
imul
mov
jge
adc
push
movsb
frstor
ja
repnz
or
add
push
lahf
test
xor
sbb
lahf
sbb
hlt
mov
loopne
dec
sub
leave
std
ret
cwtl
clc
adc
fdivrs
adc
movsb
xchg
jno
inc
jge
lret
lcall
pop
inc
arpl
sub
out
pop
or
cmp
test
push
sbb
mov
and
mov
sahf
mov
subl
loop
cmp
adc
orl
pop
leave
cmp
filds
sub
popf
daa
rclb
xor
cmc
dec
dec
pop
loope
repnz
xchg
jbe
mov
inc
fsubrl
arpl
jbe
add
xlat
push
cmpsl
mov
sub
fldl
xchg
push
aas
lcall
fists
pushf
jae
in
xchg
aaa
mov
out
inc
out
xlat
mov
subl
in
pusha
lret
add
jmp
mov
xchg
lret
sbb
ret
mov
cmp
sbb
add
mov
std
add
imul
pop
mov
push
gs
push
mov
jle
xchg
push
mulb
xchg
sub
dec
dec
lods
mov
into
fstpl
adc
push
lods
out
sbb
lods
dec
lret
jl
pusha
xor
inc
xor
addb
int3
test
popa
xor
cld
dec
psubsb
es
test
jmp
imul
jecxz
lret
cmpsl
mov
int3
dec
mov
std
mov
hlt
and
jecxz
add
cmp
jns
fbld
mov
sbb
clc
add
push
rorb
data16
clc
adc
mov
mov
inc
cmp
enter
xchg
inc
in
sub
jl
mov
pop
sbb
jno,pt
cld
and
int3
push
pop
lock
xchg
mov
mov
add
aam
and
mov
pop
inc
jo
push
xchg
out
fstp
lcall
mov
xchg
push
cld
push
cmc
pop
mov
mov
out
loop
xchg
xchg
movsl
inc
mov
and
out
mov
in
aaa
jnp
mov
add
frstor
sbb
jge
inc
and
and
or
in
insl
sub
push
sub
test
jne
imul
mov
nop
push
or
fsts
adc
jl
push
fistpll
push
clc
jbe
cmp
or
sbb
jge
pop
cmp
add
pop
dec
dec
dec
pop
dec
pop
pop
in
fld
shlb
add
add
add
fstps
add
add
add
dec
push
mov
mov
or
dec
add
add
add
movl
cmp
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
cwtl
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
call
add
incl
out
aas
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
lea
pusha
push
incl
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
in
xor
add
movl
test
ljmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
js
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
cwtl
mov
or
rorl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
push
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
aaa
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
and
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
cmp
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
cwtl
clc
xor
inc
cmp
pushf
mov
test
clc
dec
inc
mov
pushf
rol
movsb
incb
inc
mov
test
clc
pushf
inc
decl
push
cld
jge
cmp
add
jmp
les
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
fmuls
test
test
cmp
pushf
xor
add
inc
dec
cmp
sarl
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
cwtl
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
cwtl
lret
xor
mov
lea
xor
add
inc
dec
mov
push
mov
or
dec
inc
xor
push
mov
add
inc
decl
add
inc
mov
cwtl
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
rolb
mov
xor
orb
dec
leave
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
cmp
shrb
clc
add
cmp
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
sar
shl
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
sbb
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
les
inc
push
aas
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
cmp
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
cmp
pushf
xor
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
cwtl
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
cwtl
cmp
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
xchg
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
std
mov
clc
test
je
mov
cld
add
add
faddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
in
add
push
and
incl
fmull
inc
nop
ljmp
lea
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
js
inc
inc
int
inc
sub
add
int3
mov
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
icebp
or
out
mov
pop
push
cmp
sar
incl
inc
ljmp
push
mov
and
inc
push
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
cmp
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
cmp
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
js
data16
idiv
inc
fadd
mov
andl
flds
pop
push
in
incl
loopne
inc
jmp
addl
mov
inc
call
outsb
inc
js
divb
mov
orl
jb
decl
mov
test
inc
rorb
adc
mov
mov
cmp
test
pushl
mov
add
jmp
pushf
decl
add
data16
add
add
test
dec
mov
mov
inc
cmpb
mov
add
push
mov
call
mov
data16
test
out
lea
test
inc
ljmp
decl
test
incl
test
rclb
test
inc
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
in
xchg
aam
call
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
cbtw
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
jmp
lea
faddl
xor
lea
test
decl
mov
dec
clc
call
lea
lea
test
popf
push
add
xor
cwtl
mov
incl
push
push
inc
shlb
lea
call
test
incl
clc
call
jmp
inc
jnp
add
mov
mov
data16
inc
lea
test
inc
dec
test
cmp
mov
pushl
lcall
incl
pop
mov
mov
decl
mov
mov
test
incb
incl
cmp
pushf
inc
mov
hlt
test
cmp
pushf
or
pop
lock
test
clc
mov
lahf
lret
mov
add
add
rorb
mov
incl
cld
mov
add
jge
test
sbb
xchg
call
push
inc
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
cmpl
pushf
xor
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
cld
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
cwtl
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
out
adc
jne
mov
fcomps
add
incl
mov
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
add
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
cmpl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
cmp
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
cwtl
pushf
xor
jne
mov
icebp
icebp
shl
mov
cmp
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
cmp
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
clc
add
dec
hlt
xor
mov
in
jge
mov
dec
cmp
xchg
mov
add
cmp
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
cmp
fdivl
test
push
add
cmp
sets
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
cld
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
or
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
ljmp
xchg
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
rol
out
add
add
and
fs
incl
js
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
cmp
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
idivb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
data16
pushf
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ss
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
cwtl
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
data16
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
orps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
cld
js
popa
data16
into
push
data16
pop
xor
add
cld
cld
add
ss
add
into
ret
pop
add
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
pop
mov
je
xor
mov
xor
pop
cmp
jne
mov
cld
push
pop
inc
stc
aaa
test
clc
test
xor
fs
or
cld
mov
push
push
lret
aaa
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
data16
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
cld
push
add
add
add
lret
lock
lret
cmp
pushf
jge
aaa
cld
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
xor
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
xor
add
data16
dec
fisttps
add
ret
lea
add
cmp
pushf
add
add
inc
test
xor
push
cwtl
push
xor
inc
cmp
jbe
mov
or
inc
test
cmp
in
hlt
push
push
push
push
mov
cwtl
cwtl
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
cmp
pushf
jb
add
inc
daa
inc
inc
xor
dec
cwtl
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
cmp
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
cmp
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
cmp
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
aas
add
push
add
mov
cld
inc
add
rcrl
mov
mov
or
xor
enterw
jmp
ret
inc
mov
add
rorl
icebp
or
inc
inc
mov
or
jne
mov
rolb
add
cld
ret
dec
mov
mov
jmp
mov
mov
sub
mov
in
test
add
add
cmovge
add
cld
mov
adc
mov
xor
cmp
jne
mov
adc
push
test
clc
xor
xor
dec
adc
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
cmp
pushf
push
movl
dec
inc
andb
pushf
push
xchg
fsubr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
cmp
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
cmp
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
add
xor
add
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
and
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
movsb
sar
enter
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fcomps
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
fdivr
testb
dec
clc
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
sarl
pushf
add
mov
xor
test
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
cwtl
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
fiadds
xor
jb
add
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
cwtl
mov
jge
decl
jl
adc
pop
cmp
add
adc
test
adc
jbe,pn
add
adc
clc
pusha
adc
jp
adc
mov
pop
adc
inc
adc
stc
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
cmp
add
xor
add
pop
adc
adc
in
adc
bound
adc
shlb
add
scas
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
adc
ds
adc
add
add
pop
adc
cltd
outsb
adc
ja
adc
jne
adc
arpl
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
add
adc
and
adc
ret
pop
adc
loopne
adc
add
aas
adc
shrl
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
sbb
adc
inc
bound
add
adc
jecxz
adc
pushf
xor
add
or
add
inc
adc
adc
inc
add
mov
add
mov
add
mov
add
xor
xor
push
xor
add
push
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
inc
ss
push
inc
dec
inc
add
inc
xor
dec
pop
cmp
cmp
push
pop
push
pop
dec
push
dec
dec
inc
pop
dec
xor
push
inc
pop
xor
add
push
pop
inc
push
dec
xor
pop
dec
xor
inc
inc
dec
pop
push
dec
xor
dec
ss
aaa
aaa
dec
dec
add
ss
inc
inc
xor
dec
ss
pop
dec
dec
inc
inc
dec
xor
xor
xor
xor
inc
dec
xor
add
xor
xor
pop
add
cmp
inc
dec
inc
xor
pop
inc
inc
add
dec
pop
dec
xor
dec
xor
dec
pop
push
dec
dec
cmp
xor
pop
inc
pop
push
pop
cmp
pop
dec
dec
pop
add
pop
pop
push
xor
xor
xor
push
push
add
dec
add
add
dec
add
inc
add
add
xor
pop
add
add
add
add
add
push
add
xor
pop
add
inc
add
add
push
add
add
xor
xor
xor
xor
pop
add
add
add
inc
add
add
dec
add
add
add
add
add
add
cmp
dec
add
add
pop
add
dec
add
add
dec
add
dec
add
add
inc
add
add
dec
add
pop
add
pop
add
add
dec
add
add
aaa
add
xor
inc
add
pop
add
add
inc
add
push
add
pop
add
xor
push
add
add
dec
add
add
inc
add
inc
add
add
add
cmp
push
add
pop
add
add
inc
add
add
push
add
add
add
add
add
xor
cmp
dec
add
dec
add
cmp
inc
add
add
inc
add
dec
add
pop
add
add
xor
add
inc
add
add
pop
add
cmp
push
add
pop
add
add
add
add
add
push
push
inc
push
adc
mov
dec
sbb
add
add
pop
outsl
push
js
jbe
arpl
popa
push
pop
outsl
insl
dec
inc
push
jbe
pop
push
js
insb
insb
dec
addr16
push
jb
push
insl
push
bound
push
arpl
pop
jo
dec
inc
push
insb
inc
dec
jne
jbe
jo,pn
bound
