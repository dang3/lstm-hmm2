push
mov
sub
mov
movl
mov
mov
movl
movl
movl
cmp
movl
jne
mov
push
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
movl
xor
addl
mov
xor
push
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
xor
add
addl
movzwl
add
not
or
and
movzwl
xor
mov
sub
mov
adc
mov
sbb
mov
sbbl
push
or
mov
dec
movzwl
mov
sub
mov
mov
xor
or
add
movl
movl
mov
orl
mov
movzbl
or
lea
mov
mov
mov
addl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
movl
mov
mov
andl
xor
xor
andl
xor
andl
add
movl
add
div
movl
mov
movl
cmp
movl
je
movl
lea
sbb
mov
mov
jmp
popa
xchg
mov
mov
mov
pop
jge
jo
jo
in
jo
rcl
aad
ror
rol
pop
push
add
push
add
xor
ret
adc
mov
add
mov
sbb
lods
sarb
or
sahf
jp
inc
lods
push
sub
mov
stos
js
roll
jmp
mov
dec
fcomps
pop
test
sub
mov
pusha
nop
mov
and
jmp
out
repnz
xchg
xor
jbe
xlat
and
add
adc
xor
or
fldl
xor
pop
push
or
pop
fstps
jno
mov
ja
sbb
xor
into
cmpsb
call
out
negb
jle
sbbb
mov
xor
sbb
inc
adc
push
cld
jle
repnz
ds
xchg
xchg
push
sbb
sti
sub
mov
clc
mov
mov
xchg
and
lret
pop
movsl
scas
ret
shlb
cmpsl
jno
das
sbb
dec
lock
cmp
or
sarl
sbb
bound
pop
ja
mov
in
jb
mov
adc
mov
inc
dec
sub
xor
bound
and
or
imul
pop
push
mov
shrb
cmp
and
loope
adc
push
packsswb
mov
adc
in
test
mov
cmp
jmp
push
fcmovnb
mov
xlat
les
test
xor
in
jo
in
jo
fdivs
movsl
test
stos
call
out
inc
pop
sti
mov
sub
and
jnp
jbe
sarb
cmp
jge
push
sub
mov
push
jle
or
mov
popf
jecxz
add
add
cmp
and
mov
or
push
int
stos
push
aad
xorl
in
pop
lcall
stos
in
dec
mov
icebp
dec
mov
jl
fs
jmp
mov
jmp
push
mov
xor
jge
addr16
lock
and
or
in
imul
inc
adc
dec
fidivrs
inc
fcmove
jo
les
mov
jb
lcall
adc
cmpsl
jge
pop
mov
push
and
and
xor
test
ds
push
xchg
sub
sub
dec
andl
sahf
scas
inc
mov
adc
jmp
movsl
les
lahf
mov
inc
lcall
jmp
jge
test
push
or
pop
jnp
les
popf
xchg
lea
pop
lods
or
cs
ljmp
push
inc
xchg
pushf
or
sarl
divl
push
or
cmp
inc
lcall
in
dec
sub
je
mov
orl
jmp
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
mov
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
mov
add
jmp
clc
repnz
icebp
pusha
xchg
rcll
dec
cmp
dec
jle
jo
jg
jo
lret
popa
or
cld
or
addl
in
out
fadds
subl
decl
popa
push
std
arpl
and
xchg
call
mov
into
sub
rcrl
aam
sbbl
sub
xchg
sbb
sub
pushl
in
jo
out
dec
mov
jl
jl
stc
sarl
sar
adc
pop
xlat
dec
pop
daa
cmc
push
test
mov
or
dec
mov
xchg
lods
clc
add
lods
cwtl
insl
mov
addr16
sbb
pop
out
pop
test
ret
daa
mov
outsl
cmpsl
xchg
js
xor
sti
aas
inc
mov
or
and
jl
jmp
fisttpl
xchg
outsb
push
fisubrs
or
xor
leave
lods
jl
jg
xchg
jns
lret
sub
mov
jp
les
sahf
insl
xchg
and
sub
fiadds
ror
aad
jge
push
mov
inc
dec
arpl
sub
out
sbbb
xor
cmp
pushf
fs
mov
out
add
leave
loopne
ret
pop
pop
inc
cmp
mov
gs
sub
inc
mov
movzbl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
jmp
pop
arpl
out
xchg
imul
jae
imul
jo
in
jo
and
mov
test
add
cmp
movsl
jbe
mov
inc
mov
xchg
mov
jo
cmp
jge
sub
rolb
adc
add
add
sarb
jg
imul
iret
shrl
arpl
push
mov
cmp
movsb
pop
test
or
pop
aad
stos
lcall
ja
xor
jl
adc
mov
mov
or
std
out
sarb
inc
inc
std
les
add
xor
es
pop
lret
sbb
jge
push
pop
dec
mov
cmp
call
fdecstp
iret
cmc
pop
mov
or
jno
sub
sbb
xor
jmp
add
in
push
inc
aad
cmp
sahf
xchg
cmc
mov
cmc
out
test
inc
jns
ljmp
jp
sahf
repnz
pusha
ljmp
sub
jl
xchg
aas
dec
sar
add
push
cmp
push
out
mov
popf
mov
dec
push
fs
ljmp
fsubl
cmpsb
inc
push
ret
pop
or
bound
arpl
clc
cmp
inc
dec
adc
mov
xor
inc
dec
dec
pop
xor
in
outsl
xor
std
pushf
mov
lods
scas
les
ret
or
add
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
addr16
movsl
insl
jne
out
cmp
xchg
mov
jo
xchg
jge
jo
mov
mov
xchg
int3
stos
adc
pop
push
lods
insb
and
mov
mov
jno
jle
adc
inc
pop
mov
ss
rclb
mov
sti
in
xchg
or
cwtl
fnstenv
out
mov
or
push
xor
sub
mov
outsl
pusha
cwtl
loopne
sbb
push
lods
inc
jmp
fdivl
insb
test
xlat
insb
xchg
adc
xlat
dec
jb
mov
stos
or
xchg
gs
test
xchg
movsb
cmp
aas
dec
lret
sti
int
repnz
xchg
shrl
loope
int3
push
int
lret
inc
adc
or
out
xchg
mov
adc
push
out
lahf
pop
push
push
aad
ds
pop
push
out
jl
lret
jg
lea
inc
sti
push
pop
std
fcom
xor
mov
cli
imul
stos
xor
jo
mov
arpl
daa
lcall
fs
scas
rorl
adc
icebp
aas
cltd
std
mov
push
xor
mov
mov
in
fstpl
test
daa
hlt
mov
inc
daa
pop
pop
rorb
inc
rorb
inc
sbbb
mov
imul
iret
dec
jecxz
inc
jo
push
call
inc
cmpsl
or
pop
add
adc
inc
cmp
pop
out
in
in
stc
loopne
push
int3
jp
lds
outsl
icebp
sahf
mov
jecxz
jno
cmpsb
aad
add
xchg
call
aaa
jge
add
inc
cwtl
movb
rcl
in
aam
jbe
xchg
shrl
inc
jns
stc
jo
stos
into
dec
push
pop
add
scas
push
in
add
ljmp
xchg
inc
jp
jg
es
jb
sbb
das
arpl
icebp
imul
movsb
clc
ret
insb
movsb
push
stos
or
jnp
pop
in
sub
loopne
repz
push
inc
push
dec
xor
cmpsl
jmp
sbb
and
rcrl
fmull
sbb
mov
jno
inc
mov
push
dec
adc
loop
in
mov
push
cmp
cs
xchg
jno
test
js
or
push
pop
cs
ja
mov
sti
or
push
add
fiadds
dec
out
add
sbb
cmp
loope
ljmp
xor
dec
mov
mov
and
iret
mulb
add
iret
ror
les
lea
push
stos
dec
inc
in
mov
inc
inc
sub
movsl
xor
mov
stos
cmp
out
pop
mov
in
sbb
test
int3
mov
call
mov
ret
cltd
pop
int3
ds
lret
pop
sti
sub
aad
mov
sti
fistpl
mov
inc
mov
mov
jmp
lret
xchg
or
fldl
insb
enter
pop
dec
jae
cmpsl
and
and
xchg
and
out
cli
mov
stos
mov
mov
push
pop
test
lahf
sbb
ja
sub
cmp
imul
int
lcall
pop
in
das
outsl
adc
lock
push
ficoml
gs
movsb
cmp
xlat
sahf
mov
xor
mov
sub
mov
sbbl
jmp
add
arpl
cs
jo
jge
jo
mov
mov
iret
xor
and
mov
adc
and
mov
pop
sahf
or
or
jns
xchg
es
dec
inc
cwtl
sbb
lahf
jmp
push
fistl
push
jg
mov
pop
jle
ljmp
repz
cmp
in
cmpsl
sub
inc
xchg
sbb
push
lcall
mov
mov
inc
mov
movsb
arpl
jns
insb
fadd
fwait
pop
ret
ja
inc
mov
fimull
paddusw
decl
pusha
add
or
push
ror
mov
adc
xorl
mov
in
cwtl
dec
adc
adc
mov
and
pop
mov
xchg
into
push
push
sbb
insl
iret
jns
stc
je
mov
pop
mov
and
push
shl
push
shrb
push
jecxz
sub
aas
cmp
loope
mov
mov
xchg
rcrb
xchg
mov
loop
push
and
nop
jecxz
pop
jb
xor
testb
mov
mov
popa
push
in
lcall
add
push
sbb
mov
aam
fistpll
mov
xor
pop
fbld
aas
jno
hlt
das
aad
fcmovnbe
mov
loope
outsl
adc
mov
mov
int3
pop
push
rolb
mov
lods
dec
mov
sbb
dec
fstpl
push
icebp
int
cli
xchg
cmp
cmc
inc
mov
int3
push
or
pop
aas
pop
and
mov
adc
iret
outsb
test
scas
into
aam
push
jae
pop
mov
dec
xlat
insb
lds
gs
xchg
jge
dec
mov
xchg
movsb
jno
mov
pop
std
jo
push
add
pushw
adc
adc
cmp
push
dec
xor
adc
pop
pop
cmp
and
add
and
test
add
add
pop
inc
pop
add
addl
outsl
lock
xor
jb
jge
or
arpl
mov
and
inc
push
jp
hlt
nop
out
inc
out
sbb
inc
jo
sbb
popf
xchg
sbb
imul
jno
in
arpl
xchg
hlt
inc
jecxz
cli
mov
push
push
data16
rorb
cmp
test
test
push
popf
test
inc
inc
and
fsubl
outsb
mov
push
ffree
mov
int3
xchg
pop
scas
insb
sahf
je
pop
add
fcmovnb
xor
jnp
ret
xorl
mov
pop
movsb
lcall
mov
leave
ret
in
sbb
inc
fbld
dec
xor
mov
jae
popa
dec
add
pop
jno
mov
xor
xor
cwtl
mov
pop
adcb
out
aad
xor
inc
test
xchg
insb
call
gs
adc
clc
jmp
adc
test
add
sbb
jle,pt
jns
adc
or
push
mov
pusha
lret
mov
rclb
fcomi
jg,pn
aam
pop
and
dec
fimuls
bound
mov
adc
aas
and
pop
arpl
mov
push
cmpsl
push
sub
inc
cld
xor
leave
inc
inc
add
daa
inc
add
mov
add
in
lock
mov
push
scas
int3
cmpsl
sub
add
push
add
jo
jge
jo
scas
push
jmp
subb
dec
push
mov
das
xor
stc
sbb
xlat
mov
adc
sbb
rol
fstl
bound
bound
cwtl
push
mov
sbb
xchg
sahf
dec
mov
lahf
jnp
gs
mov
mov
pop
mov
xchg
outsb
sarb
mov
clc
inc
imul
addr16
cmp
shlb
mov
cmp
aaa
jae,pt
lods
push
mov
roll
mov
pusha
gs
push
clc
pop
push
add
jb
popa
cmpsl
pop
es
arpl
shll
or
xchg
pop
mov
in
andb
or
lds
loopne
testb
jnp
hlt
push
or
call
scas
lods
lods
add
ret
fildl
dec
ljmp
ja
fidivrs
sub
sbb
cli
ja
mov
loope
push
stc
push
movsb
xor
icebp
aam
into
or
ret
sub
cmpsl
out
out
cmp
or
sbb
imul
je
add
push
push
loope
dec
cmc
mov
shll
mov
jb
mov
lds
dec
imul
or
push
movsl
xchg
mov
stc
popf
ljmp
and
hlt
xor
int
test
rol
mov
roll
push
lea
jns
push
push
mov
xor
icebp
addb
pop
pop
pushf
mov
loop
loope
shlb
loopne
inc
add
out
mov
sbb
int3
and
test
jp
sahf
fisubrl
fisttpl
and
jle
lods
inc
test
loop
mov
jbe
out
mov
pop
xchg
xorl
pop
in
xchg
jge
imulb
xor
jp
and
or
imul
sbb
shlb
call
and
mov
repnz
shufps
jl
aas
xchg
cmp
fmuls
dec
cli
xchg
ucomiss
adc
je
push
es
int
xor
dec
lret
roll
dec
jle
insb
cmp
cltd
sbb
lret
pop
mov
adc
push
jns
sti
jg
push
rorl
push
fdiv
ret
dec
into
cmpsl
rorl
movsb
mov
sbb
add
pop
dec
pop
mov
mov
enter
add
daa
jbe
xor
mov
mov
xchg
inc
add
lods
sub
mov
push
push
js
xlat
xorl
jp
clc
pop
add
stos
adc
mov
push
mov
shll
popa
std
mov
inc
test
cmp
sub
add
and
movsl
xchg
popa
jmp
loope
repnz
bound
cmc
or
out
ret
mov
inc
lahf
sub
dec
inc
push
and
lahf
push
mov
ljmp
in
jne
inc
add
cld
adc
or
sarb
daa
and
aas
shlb
repz
sahf
shll
loope
stos
addr16
xor
in
sub
loope
mov
popa
mov
dec
das
icebp
setno
inc
clc
xchg
mov
jle
out
jecxz
adc
movsbl
xchg
cmovp
mov
sub
push
add
mov
xor
and
mov
push
mov
addl
add
jmp
mov
cltd
or
or
inc
add
jo
xchg
jge
jo
pop
mov
imul
dec
ja
fldl2e
add
pop
fimuls
orb
dec
test
gs
xchg
pop
cmp
out
add
adc
nop
mov
xor
aaa
imul
sbbl
sbb
movsl
mov
lds
andb
and
scas
and
mov
sub
pushf
pop
dec
loopne
xchg
outsl
hlt
cmc
xor
ficompl
sub
jnp
xorb
outsb
aad
scas
aas
js
insl
sub
out
or
xchg
push
inc
jge
xor
cmp
mov
aas
addl
inc
cmpsl
into
cmp
pop
sub
sub
pop
lock
sbb
mov
fs
ljmp
jecxz
lret
daa
or
stos
cmpsl
xor
frstor
adc
mov
pop
adc
testl
xor
insl
movsl
xor
lahf
and
into
cld
mov
xlat
leave
jle
inc
and
and
ret
add
inc
jbe
ror
mov
dec
rcll
daa
test
loopne
fstl
pop
gs
and
jle
adc
xchg
xchg
and
rorl
jl
movsl
pushf
push
cmp
dec
insl
and
js
push
dec
lret
lret
mov
andb
push
push
pushf
aam
lcall
push
lods
push
lods
leave
mov
sub
xchg
dec
mov
insl
mov
lcall
dec
add
xlat
test
add
adc
mov
iret
dec
or
adc
dec
and
stc
fcomp
mov
pop
js
sbb
mov
add
xlat
pop
xor
pop
pop
test
cwtl
pop
stos
loopne
sub
cli
add
push
pusha
ror
dec
lret
jp
mov
cs
push
sbb
das
xchg
aam
iret
xchg
in
cwtl
inc
push
ret
test
push
dec
pop
in
mov
and
inc
and
adc
test
or
and
shlb
ret
sti
lea
xchg
lods
mov
add
and
lcall
lret
or
jne
xor
outsb
cmc
mov
mov
adcl
cmp
cwtl
data16
and
ds
sar
loopne
pushf
push
test
sbb
sahf
dec
pop
call
and
mov
mov
std
inc
fisubrs
mov
hlt
shlb
jbe
cmp
mov
into
fdivrp
ficoml
repnz
xchg
dec
popf
movsl
loop
add
scas
jb
cmc
jno
add
add
cmp
jno
leave
adc
pushl
mov
adc
or
icebp
adc
test
lods
pop
and
xchg
mov
je
nop
loop
ljmp
mov
sbb
xlat
push
sub
lock
sbb
rorl
ret
aas
fidivrl
popa
xchg
gs
xor
jns
inc
adc
jb
out
mov
mov
xor
test
data16
shll
xchg
mov
adc
pop
push
add
je
and
mov
sbbl
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
push
call
jmp
mov
sub
add
xor
adcl
add
movl
cmp
ja
push
jmp
mov
mov
jmp
mov
in
inc
sub
mov
jo
jge
jo
jl
mov
mov
cmp
insb
dec
pop
cmp
in
ficoms
inc
shr
pop
loopne
pushf
insl
jae
lea
dec
sub
cmpsb
notl
sbb
add
mov
in
and
loopne
imul
mov
or
mov
sub
sub
test
mov
add
and
decw
adc
scas
int3
scas
outsb
shrl
adc
cmp
pushf
popf
xchg
jle
add
xchg
inc
gs
lea
pop
mov
fsts
xchg
mov
andl
mov
mov
sbb
jg
popf
js
lahf
lods
dec
mov
in
xor
inc
pop
push
and
popa
pop
jns
mov
jbe
mov
xor
bound
scas
pop
es
xchg
mov
addr16
pop
xor
daa
jae
rolb
adc
leave
inc
inc
mov
mov
lahf
mov
ljmp
inc
sub
addb
cmp
je
jl
or
imul
push
scas
pop
clc
cld
int
sbb
or
add
and
lret
dec
std
in
mov
pop
sti
loop
push
lea
mov
scas
rorb
leave
dec
xchg
dec
enter
shl
repnz
shr
lret
in
sahf
push
add
insb
jmp
sbb
push
lahf
cli
mov
outsl
lock
dec
mov
in
inc
push
push
addb
mov
pop
test
insl
insl
xchg
dec
adc
fbstp
jmp
xchg
mov
mov
lcall
pop
pop
mov
sub
outsl
push
adc
shlb
inc
outsl
push
xchg
scas
cwtl
faddl
pop
pop
stc
lea
mov
les
dec
xlat
fldl
push
lea
sbb
into
adc
pop
insl
xlat
das
sbb
jo
mov
mov
sub
stc
test
adc
adc
dec
inc
adc
pop
pop
push
jne
iret
adc
insl
outsl
out
mov
mov
pop
push
movsl
sbb
outsl
and
push
or
insl
movsl
test
lcall
jp
adc
std
lods
sub
xor
mov
add
out
mov
loop
and
mov
lcall
push
xor
mov
leave
je
add
ss
sub
aaa
push
pop
lods
cmpsl
xchg
stc
test
pop
dec
sbbb
insl
xor
js
mov
cmp
push
hlt
or
je
outsb
shll
loopne
sbb
push
aas
pop
cmpsl
leave
dec
jne
test
push
repz
dec
sti
mov
inc
xlat
rorw
lea
cli
add
push
adc
sub
inc
popa
loopne
les
aaa
cmp
jbe
jbe
pop
subl
add
sbb
bound
xchg
int3
cs
cmp
sub
and
pop
loop
vminsd
inc
pop
mov
push
push
fldt
xchg
mov
mov
xlat
int
rcll
neg
sbb
testb
rclb
and
pop
les
cmp
divb
mov
lahf
adc
cmp
call
aam
cmpsb
cmp
pushf
and
sub
mov
stc
lods
mov
cmc
lock
dec
arpl
iret
cmc
daa
and
pop
jmp
cmp
jge
jmp
cs
loopne
in
jnp
jmp
rorb
cmpsl
or
xchg
jge
jo
sbb
test
jmp
mov
add
xor
fiadds
in
sbb
xor
imul
and
mov
cmpb
out
popa
add
rcrb
gs
stc
lock
sbb
andl
mov
test
jmp
inc
loopne
lods
xor
xor
repz
out
pushf
push
scas
andb
dec
add
and
xchg
dec
and
fisttpll
aas
adc
xlat
or
enter
call
test
pcmpgtd
fstpl
mov
rcrl
fs
addb
enter
testb
xor
movsb
hlt
out
add
fdivl
popf
cmpsl
js
scas
sub
mov
int3
adc
loop
subb
push
add
push
movsb
add
jle
movsl
sbb
bound
aaa
pop
pop
clc
ret
lods
in
loope
ret
sbb
inc
and
dec
or
and
push
cmpsb
add
mov
aam
jg
sahf
jo
jns
shrl
mov
mov
add
xchg
push
cmp
icebp
adc
mov
inc
mov
jg
ret
mov
cmpl
jae
mov
push
push
jnp
out
test
inc
into
in
in
stos
sbb
jae
std
or
orb
lret
xchg
pop
sbb
pop
fbld
mov
inc
push
mov
test
cltd
jbe
cwtl
pop
push
cwtl
push
push
mov
dec
jecxz
jb
addl
add
mov
push
gs
push
test
arpl
loop,pt
sub
cmc
imul
ljmp
mull
fs
xor
outsl
std
jg
rol
pop
xchg
jle
subl
xchg
fisubs
xlat
and
inc
xlat
cmp
popf
retw
adc
cmp
xorl
pop
cmp
mov
cmp
movsb
cmpsl
inc
sbb
xchg
jbe
scas
stos
aaa
les
sub
or
enter
sbb
imul
adc
xor
cmp
mov
mov
adc
mov
lahf
mov
push
pop
jo
dec
push
pushf
push
add
testl
push
fnstenv
fs
stc
out
daa
pusha
add
cmp
xor
call
fisubs
mov
cmp
mov
out
or
cltd
mov
cwtl
sub
mov
aaa
call
push
ret
adc
mov
cld
jl
jl
pop
mov
pop
sub
mov
xchg
inc
mov
inc
test
mov
arpl
xor
xorl
and
pop
pushf
push
aaa
cld
adc
xlat
stc
out
int3
sub
into
pop
ffree
lods
fisubs
pop
cmc
lock
flds
enter
sub
sub
int
or
cmc
jae
ror
mov
into
in
rorb
mov
rol
ficoms
push
mov
mov
inc
jo
jns
cmp
cld
aas
sbb
outsb
lret
cmpsl
pushf
outsl
push
stos
imull
icebp
cmpsb
cmp
add
cltd
mov
loop
stc
jmp
data16
in
int3
jne
popa
jno
imul
dec
ds
jo
lock
jmp
fdivrl
mov
jne
push
ds
mov
sahf
adc
sbb
mov
dec
repnz
int3
andl
rclb
pop
push
outsb
adc
scas
add
movsb
add
stc
divl
ret
jmp
xor
or
and
in
xor
iret
into
push
pop
xlat
push
repz
or
inc
icebp
movsl
adc
xor
or
repnz
aam
inc
pusha
xchg
xor
sbb
mov
xchg
cld
insb
mov
lcall
pop
jae
movsl
sbb
xchg
aas
adc
jge
fidivs
pop
fidivrs
pop
dec
jge
xchg
jg
adc
movsl
popa
jne
xchg
insb
jecxz
popl
dec
int3
jle
sub
push
insl
adc
inc
lret
jbe
stos
mov
ljmp
mov
out
xor
fcomi
bnd
mov
jle
sbb
jge
mov
testl
push
xchg
mov
sub
lcall
mov
iret
xor
fimuls
int3
add
dec
mov
xor
sbb
cmp
jnp
adc
call
jnp
xor
stc
pop
enter
push
mov
movsb
mov
orl
or
lret
jmp
pusha
sahf
mov
and
cs
dec
sub
in
mov
and
sbb
cmp
xchg
les
pop
and
inc
movsl
cmp
xchg
lcall
fldcw
mov
push
push
ja
aaa
dec
add
callw
fisttps
test
sub
cmp
fmuls
xor
push
hlt
nop
cli
pop
js
push
pop
cmp
roll
xchg
or
icebp
sbb
clc
sub
push
outsl
dec
adc
mov
sti
sar
bound
sub
mov
scas
add
popf
add
pop
cmp
fimull
cmp
mov
jae
mov
xor
push
jge
cmp
mov
dec
gs
ret
ret
orb
adc
daa
pop
jbe
lods
xor
adc
rolb
cmpsl
mov
in
arpl
out
fiadds
cmp
rcrb
sbb
or
sbb
fisttps
cmp
sub
aas
cmp
mov
and
mov
pop
enter
repnz
aaa
data16
arpl
das
push
sahf
jmp
ror
add
cmc
or
lds
mov
dec
imulb
jl
sbb
lcall
cmp
rolb
add
call
jle
fistpll
scas
xchg
cmpl
lret
mov
jae
dec
movsb
or
out
testl
sbbl
lock
pop
loopne
imul
cmp
push
ljmp
jo
add
ja
aam
loope
xchg
lret
pop
mov
jae
arpl
sbb
sub
std
outsb
inc
mov
stos
fldt
fwait
fimuls
and
dec
movsl
rcr
cmp
xchg
cmpsl
insl
stos
jo
pop
in
cmp
decb
cli
mov
jmp
jle
mov
xchg
icebp
repz
adc
jo
jge
jo
xchg
stc
hlt
xchg
hlt
ja
cli
sub
mov
mov
inc
scas
pop
jecxz
mov
ss
enter
sbb
pop
and
sbb
or
jmp
repnz
lods
lea
sti
es
cltd
popa
or
leave
add
xlat
fistpl
sbb
repnz
or
xor
sub
scas
ret
and
sbb
fmull
sub
pusha
or
lods
mov
inc
mov
or
stc
shrb
pop
daa
fwait
xor
sbb
adc
fs
shr
inc
insb
lea
mov
xchg
pop
rcl
pop
repnz
cmp
ftst
xchg
add
xor
ret
add
outsl
das
add
stc
dec
add
cmp
inc
insl
dec
mov
lds
pop
xor
pop
add
or
or
and
add
mov
scas
loopne
mov
or
push
adc
and
ljmp
pop
cld
push
scas
mov
nop
cld
paddsb
loopne
test
xor
and
mov
fisttpll
dec
push
lret
push
clc
push
repnz
mov
mov
in
lock
push
or
jg
clc
repnz
and
dec
jno
fisttpll
sbb
mov
repnz
xchg
mov
jns
pushf
repnz
scas
aam
aad
sbb
outsb
int
mov
shl
mov
lock
in
popa
call
ja
data16
mov
inc
jmp
les
pop
enter
std
cmp
sub
popa
pop
xchg
xchg
mov
mov
bound
jecxz
lea
dec
in
adc
jge
sub
daa
addl
adc
data16
movsl
dec
test
loopne
imul
sahf
pushf
fisttpl
add
sub
jno
add
leave
es
mov
jae
or
sub
nop
ficompl
fs
in
mov
sub
and
shll
enter
insl
mov
sbb
les
push
xchg
xchg
add
push
jb
add
fsub
push
orl
aad
xor
dec
das
sub
mov
call
cmpsl
hlt
inc
pop
lahf
sbb
push
shlb
gs
mov
jle
insb
loop
add
sbb
or
or
xchg
insb
into
lea
jno
mov
enter
mov
rolb
jg
xlat
hlt
sub
mov
shrl
cmp
push
mov
in
or
pop
ja
pusha
xor
mov
cmp
jno
ret
jp
ja
je
lea
ffreep
push
jp
push
ljmp
mov
sahf
cmpsb
pop
out
je
out
mov
fistl
pop
insb
xor
inc
or
es
aas
cwtl
out
mov
dec
and
mov
fldenv
jbe
arpl
call
arpl
stos
mov
dec
sarb
dec
mov
out
sub
addr16
scas
add
fwait
loope
lret
sahf
mov
cmpl
hlt
push
mov
sub
jmp
jmp
fadds
jl
lods
dec
adc
int3
xor
ja
xchg
in
nop
push
sbb
mov
roll
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
mov
add
mov
xor
mov
adcl
add
movzbl
sub
movzwl
adc
mov
and
movb
xor
or
xor
mov
lea
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
call
mov
dec
mov
jmp
mov
mov
adc
mov
xor
sub
andl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
and
movl
movl
add
mov
or
mov
jmp
and
pop
icebp
jae
lods
imul
mov
jns
push
jo
sbb
jo
popa
js
pop
data16
jmp
jecxz
adc
test
aas
shll
jecxz
das
pusha
adc
push
push
dec
lret
addr16
fdivp
cmp
aad
shrl
daa
aam
jmp
iret
andb
xchg
or
adc
mov
add
jns
mov
lock
or
fildll
xchg
into
bnd
mov
jo
cmpsb
inc
and
outsl
lods
pop
aad
mov
jecxz
mov
jnp
and
lret
push
lret
dec
in
fwait
sbb
xchg
aad
pop
not
test
stos
and
sbb
xor
fndisi(8087
xor
pusha
mov
mov
xchg
pop
pop
sub
loop
dec
stc
int
rol
inc
in
mov
repnz
dec
loopne
jnp
clc
add
mov
cmp
push
sub
js
fld
lcall
test
fs
daa
repz
pop
xchg
stos
iret
loopne
xchg
dec
jnp
outsb
inc
imul
pop
xor
imul
iret
or
call
repnz
fsubl
adc
dec
sub
xor
mov
sbbl
add
movl
jmp
movl
mov
mov
inc
cmp
jmp
sbb
movsb
scas
xchg
sub
cmpsl
je
addr16
sbb
jo
int3
outsb
jbe
or
jecxz
fimuls
add
xor
testl
xlat
das
and
inc
fstpt
jg
jmp
push
xchg
sbb
push
nop
cltd
jecxz
xor
jns
and
mov
pushf
nop
mov
sub
mov
ret
orb
adc
mov
fstl
pop
movl
scas
jbe
insb
jo
inc
push
cltd
inc
mov
fcompl
mov
jp
jo
mov
mov
cltd
cmp
mov
sbb
mov
test
jno
in
lock
sti
cmp
push
xlat
dec
and
nop
xchg
inc
rorb
sbb
lcall
dec
cmp
mov
inc
mov
pop
rclb
test
into
bound
das
jl
push
mov
and
pop
jp
add
int3
push
mov
lcall
repz
lds
jmp
fidivs
mov
pop
es
leave
and
loope
jnp
pop
lods
icebp
stos
sbb
jb
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
add
cmp
jmp
inc
sub
xorb
jmp
inc
mov
jp
mov
mov
jg
jo
stos
fwait
sbb
jb
pop
jecxz
and
stos
int
bound
jp
stc
mov
and
fisubl
movsl
or
stos
mov
lret
inc
push
pop
sbb
dec
sbb
mov
lods
xor
xchg
or
js
dec
popf
stos
sahf
enter
sbb
jnp
pop
inc
jge
inc
or
fldenv
jecxz
cld
mov
pop
sarb
dec
inc
inc
sysexit
jns
xchg
inc
jbe
jb
add
or
mov
jnp
notl
mov
mov
add
out
pop
xlat
imul
or
add
push
adc
fistpll
mov
push
xor
lds
jne
loop
subl
mov
cmc
inc
mov
imul
in
jmp
xchg
pop
pop
pop
lret
sahf
push
bound
or
and
ljmp
pop
jmp
mov
push
or
jno
repnz
inc
mov
sbb
imul
and
lcall
fs
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
jmp
cmpsb
fisubrl
jmp
call
sbb
sbb
jo
xor
cmp
and
mov
add
add
movsl
cltd
adc
pop
inc
xchg
lea
ja
sub
fstpl
hlt
dec
cmp
pop
insb
out
scas
sub
jmp
mov
push
sub
dec
pushf
sbb
ror
outsb
popf
mov
stos
adc
repnz
push
and
add
fstp
sbb
mov
xchg
fwait
icebp
scas
cmpsb
or
dec
mov
push
push
xor
jl
adc
in
xor
call
insb
jbe
push
outsb
aas
adc
stos
or
xchg
sarb
and
fwait
insl
sub
or
fildll
in
rcrb
cmp
xor
imul
mov
mov
inc
inc
mov
pop
push
lock
mov
xchg
repnz
popa
daa
xor
or
jae
pop
sub
stc
cli
enter
jnp
aaa
test
scas
push
je
xchg
and
pop
pop
mov
push
inc
push
ret
ljmp
and
fldcw
or
shl
test
orb
mov
mov
mov
jmp
aaa
insl
pop
int3
push
jb
jno
pop
imul
sbb
sbb
jo
xchg
inc
jnp
leave
add
dec
xchg
mov
jne
in
pop
jb
ds
mov
cmpsb
into
adc
test
mov
rep
xchg
or
pop
in
xor
jp
rorl
cmpsl
bound
mov
sub
push
lahf
stos
mov
sbb
mov
mov
imul
outsb
mov
loopne
enter
test
stc
mov
jle
cmp
jmp
loope
xchg
jge
mov
add
or
and
push
fldcw
add
outsb
and
or
jp
inc
pusha
sub
test
repnz
xorl
ja
inc
stos
bound
mov
pop
xlat
pop
lret
je
jno
gs
mov
lcall
or
mov
pop
push
push
adc
add
xchg
xchg
jecxz
dec
movsb
stos
bnd
decb
imul
inc
jp
mov
cmp
mov
and
add
mov
mov
xor
add
jmp
ffree
adcb
mov
cmpsl
xor
jo
sbb
jo
add
xor
jecxz
push
outsb
mov
loope
push
sub
into
movsb
fwait
rorb
push
or
loop
and
xchg
testl
mov
scas
jle
cmp
outsl
roll
pusha
xchg
addl
sti
cs
add
jecxz
dec
push
aas
arpl
outsb
jne
out
add
loope
imul
fstps
jb
les
inc
movb
xchg
dec
mov
and
sti
inc
xchg
mov
adc
and
mov
fisttps
jmp
jnp
jl
xor
icebp
cwtl
dec
cld
or
sub
adc
fidivrs
or
mov
aaa
js
add
adc
sub
cwtl
cmpl
mov
or
jo
imul
mov
cmpsb
adc
in
imul
push
imul
call
rorl
adc
lods
sub
lea
faddl
js
cmp
xrelease
mov
mov
mov
cmp
je
mov
mov
jmp
scas
or
repz
test
shrl
daa
jo
sbb
jo
adc
pop
dec
jns
cmp
addb
movsl
add
scas
pushf
sub
in
sarl
clc
into
or
mov
pop
insb
inc
sub
mov
popa
mov
sbb
xor
mov
pop
dec
loopne
das
mov
dec
fcompl
jns
loopne
pop
mov
nop
cmp
insb
xchg
cmp
sub
add
popf
icebp
ljmp
in
loopne
fsubrl
sub
xchg
lret
filds
fisttps
cli
fdivp
add
ds
inc
ss
inc
and
mov
pop
push
sbb
lret
aaa
sub
mov
insb
mov
in
inc
stos
jnp
sub
xchg
js
and
fistpl
fldcw
cmp
lea
mov
mov
loopne
cmpsl
push
push
ror
inc
mov
out
jl
jb
cwtl
test
popa
sub
fbld
and
xor
addr16
out
js
imul
or
add
test
pop
add
mov
jmp
dec
push
test
xor
popa
jns
mov
push
test
jo
sbb
jo
js
inc
popf
cltd
inc
xchg
mov
push
ficompl
pop
mov
push
pop
xchg
mov
mov
mov
fisttps
scas
dec
push
idivb
mull
pop
push
adc
mov
or
inc
rcrb
cwtl
imul
add
icebp
leave
adc
push
rorl
mov
add
mov
jo
add
int3
sbbl
pushf
push
jnp
ds
in
mov
sbb
jp
jge
aas
cmp
stc
lret
fs
adc
je
sbb
and
sbb
mov
mov
cvtps2pi
xor
repz
mov
repz
rolb
aam
dec
pop
mov
scas
lods
inc
sub
dec
movsb
imul
mov
gs
flds
pusha
shll
inc
cltd
jmp
mov
pushf
mov
jb
cwtl
loope
lcall
mov
int
mov
cmp
mov
lods
ficomps
push
mov
adc
roll
cmp
jmp
mov
gs
nop
sbb
inc
shrl
jo
xchg
mov
out
stos
push
test
jl
lret
sti
mov
mov
jns
andl
sub
mov
adc
add
sub
or
test
dec
insl
in
or
stos
jmp
mov
cld
jge
mov
pop
js
fwait
loope
xchg
cltd
mov
data16
xor
mov
xchg
stos
in
pop
sti
test
push
adc
das
hlt
das
pop
jg
pop
sbb
aam
cmc
mov
mov
div
out
imul
mov
sub
xrelease
icebp
dec
pop
mov
subb
mov
imul
mov
fdivr
loopne
dec
int
out
je
ljmp
fnstsw
cmpb
aam
cli
adc
inc
leave
out
inc
je
aas
xchg
in
popf
hlt
cmpl
jle
jb
and
xchg
vpor
cmp
pop
add
and
cmpsl
cmpsb
add
call
mov
jmp
mov
pusha
into
int
mov
stos
jne
inc
je
movl
jmp
aaa
dec
rcrl
jno
repz
enter
xor
push
and
jo
jg
jo
addb
push
insl
or
push
fstl
add
xor
sbb
adc
dec
mov
push
out
xor
push
aaa
xchg
out
gs
insl
adc
jmp
cmp
out
popa
scas
andb
add
dec
shl
mov
xor
jno
inc
inc
fs
mov
rorb
lret
mov
push
jg
push
dec
lea
add
push
cmp
sbb
mov
lock
mov
adc
inc
fcmovne
roll
js
nop
aad
mov
pop
add
andl
adcl
pop
ja
xor
cmc
cld
mov
mov
inc
ficoml
inc
push
push
fs
cmpsl
or
dec
adc
cmpb
dec
sbb
adc
push
cmp
cs
or
sub
xchg
push
xchg
mov
jo
shr
mov
and
test
movsb
jne
xchg
mov
fdivs
in
and
pop
aad
fdiv
pop
fnstcw
lods
hlt
int3
mov
cli
push
leave
into
pcmpeqd
mov
mov
addl
mov
mov
xor
lea
mov
jmp
mov
addl
jecxz
or
jl
jo
sbb
jo
cld
add
mov
inc
into
cmovp
add
stos
mov
outsl
push
mov
xchg
xchg
jp
inc
adcb
cmp
sbb
pushf
scas
outsb
sbb
insb
sti
dec
sub
in
jmp
dec
pop
lea
cmp
sbb
mov
jne
jae
repz
and
fsin
mov
mov
repnz
mov
pushf
xchg
mov
pop
dec
test
sub
ficoms
mov
jp
jne
pop
or
xchg
dec
jl
arpl
jne
arpl
mov
add
call
ljmp
cmc
sbb
mov
push
inc
daa
xchg
or
xor
fwait
add
lds
xchg
cs
adc
xor
lcall
dec
fdivs
mov
push
stos
test
xor
jle
in
inc
call
insb
dec
gs
call
pop
mov
lds
ja
ljmp
das
adc
push
incl
jmp
jmp
cmp
xor
sarl
cld
call
and
sbb
jo
jnp
gs
add
mov
jns
push
frstor
sub
xlat
push
pop
pop
cmp
loop
mov
call
fisttpl
dec
aam
ss
jl
fstpl
int
imul
jg
hlt
mov
hlt
dec
and
or
ss
jmp
sahf
loopne
mov
add
push
xor
arpl
mov
push
sbb
pusha
mov
xchg
incl
push
sbb
mov
mov
push
xchg
xor
push
add
mov
xchg
test
dec
lods
mov
sub
pop
jbe
ss
mov
pop
add
jle
out
jecxz
cmp
pop
fnsave
mov
mov
sbb
cmp
pop
test
xchg
and
pop
ljmp
icebp
jmp
ret
test
sub
xor
and
fnstcw
sbb
pop
or
out
enter
sbbl
scas
nop
xor
ret
clc
mov
mov
xor
mov
add
jmp
pop
adc
mov
es
xor
int3
and
sbb
jo
nop
jb
cmp
and
xchg
xchg
adc
lahf
push
sbb
shlb
pop
push
scas
xor
enter
outsl
in
dec
stos
in
fdivrl
call
cmp
mov
jae
mov
mov
add
push
inc
pop
rclb
pop
jae
xchg
ss
cmp
es
jge
xchg
cwtl
out
jecxz
cmpsl
movsb
cmp
or
lds
inc
out
cmp
inc
sahf
xor
sbb
in
sahf
iret
xor
into
andps
mov
leave
mov
sub
lahf
lods
testl
loope
xchg
arpl
push
stos
les
push
mov
xlat
dec
sub
and
xor
xor
icebp
dec
in
sbbl
inc
sub
repnz
jne
adc
paddsw
in
lret
es
pop
push
and
cmp
push
loopne
fsubp
jecxz
or
sbb
mov
sub
jb
adc
movsb
fsubrl
sub
add
jl
and
lea
leave
ret
push
mov
push
push
subl
movl
movl
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
push
push
pushl
pushl
push
push
push
pushl
call
cmpl
jb
neg
mov
push
xor
mov
mov
xor
xor
mov
adcl
jmp
popa
sahf
cmpsl
mov
jno
mov
imul
hlt
das
jo
fnstcw
jo
mov
or
loop
insl
sub
mov
inc
inc
movb
push
pop
scas
push
dec
sbb
and
inc
mov
incl
loop,pt
cmpsb
es
mov
sub
cmp
aaa
std
loopne
xor
rorl
adc
lods
or
jecxz
fwait
cmp
jb
in
push
push
cmpb
hlt
add
mov
scas
xchg
fcoml
push
sbb
sub
pop
into
xchg
scas
mov
sub
leave
mov
mov
jb
or
insb
xor
rcrl
into
mov
jecxz
ret
pop
mov
insl
test
idiv
dec
daa
jl
rcrl
jle
mov
in
ret
loope
xor
popa
xlat
and
shrb
push
inc
and
add
mov
and
pop
cmp
and
xor
push
fs
popa
and
adc
lods
hlt
mov
sbb
sbb
cwtl
aad
sbbb
test
lods
mov
int
stc
int
push
push
aas
mov
gs
push
push
mov
lods
scas
pop
mov
or
add
mov
int
jle
pop
scas
idivl
xchg
rcrl
adc
movsb
fistl
inc
stos
cmp
test
pushf
ud2
and
sub
lea
movsl
insl
xchg
cmp
daa
aaa
sub
lret
add
lahf
cmp
rolb
daa
inc
push
jg
pop
imul
mov
in
mov
xchg
enter
lods
xor
mov
add
mov
or
fdivrs
imul
lds
mov
xlat
mov
aaa
pop
xor
jp
and
and
aam
jle
jecxz
mov
xchg
sahf
mov
mov
inc
lods
std
insl
push
or
sbb
into
movsb
xchg
pop
lods
ljmp
mov
pop
cmp
fldl
jl
imul
leave
rorl
adc
les
add
jl
sub
dec
add
enter
cwtl
sub
dec
cmc
mov
fnstsw
sahf
stos
xor
mov
sub
jle
push
in
stc
push
or
xor
pusha
add
add
rorl
mov
or
push
add
mov
movl
cmp
movl
jne
mov
mov
xor
jmp
test
cmp
push
popa
andl
adc
dec
ret
sub
jo
dec
int
gs
mov
fs
stos
xchg
xchg
outsb
cmp
cli
xchg
insl
dec
add
loope
pop
movsl
in
or
mov
xor
mov
pop
mov
jl
sbb
scas
sbb
push
push
je
add
mull
mov
ja
cmpsl
push
pop
mov
lea
cld
and
in
cmp
int
jle
xchg
std
adc
iret
lods
and
xor
jle
leavew
sub
mov
cli
sbb
jnp
mov
inc
clc
fcmovne
adc
xor
mov
push
dec
mov
icebp
push
inc
xchg
add
mov
sub
lods
ss
out
and
icebp
mov
jne
fidivl
popa
scas
stc
cmp
mov
xchg
cli
imul
les
add
add
sarw
inc
out
lock
decl
mov
sbb
fmul
je
push
sahf
add
cmpsl
mov
into
fisttpll
in
ss
inc
cmp
adc
xlat
sub
pusha
and
jns
adc
movsb
in
pop
cld
pop
call
add
push
cmp
je
mov
mov
or
cmp
add
pop
scas
xor
add
inc
push
or
xor
xor
cltd
mov
pop
jb
sti
dec
idiv
cmc
jp
jo
clc
leave
sub
push
daa
fwait
jp
cltd
cmpsl
rclb
and
dec
clc
fwait
add
and
lds
js
lcall
mov
test
push
in
repnz
rcrl
in
mov
ja
adc
fisubl
xor
jge
fbstp
push
pop
lds
mov
push
mov
js
mov
xor
in
pop
pop
jns
pop
push
or
rorb
dec
movsl
stos
jle
movsl
or
mov
call
cmp
dec
int3
mov
bound
and
lret
shll
mov
test
xchg
push
fsubl
or
jo
or
fadd
shrl
stos
ret
push
sbb
sti
mov
sub
push
ffreep
fwait
dec
popf
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
jmp
shll
add
ret
loope
and
and
sub
fnstcw
jo
push
nop
mov
or
xor
pop
pop
xlat
enter
push
aam
pop
rorl
aas
mov
ljmp
out
out
out
call
xchg
jbe
mov
daa
pushl
xor
fsubs
nop
jmp
bound
dec
enter
and
ret
loop
pop
jl
imul
jge
cs
test
mov
hlt
es
pop
out
insb
mov
das
jmp
jl
imul
push
jns
pop
mov
mov
inc
mov
add
dec
insb
mov
fsts
mov
rcr
sbb
ja
mov
mov
cmp
mov
pop
enter
jge
loop
xor
hlt
in
xor
adc
out
shll
push
aaa
mov
push
fstps
sbb
insb
inc
out
adc
in
cmp
xchg
movups
les
fadds
and
loope
or
popa
fistps
push
stos
or
push
inc
loope
jo
mov
xor
sbb
das
adc
icebp
xor
fucomp
inc
pop
xor
cmp
clc
mov
clc
int
mov
mov
loope
in
add
lret
les
clc
cmp
and
les
add
int
add
pop
cmp
loopne
mov
decb
into
sub
and
jae
and
pushf
inc
dec
push
inc
ja
dec
lods
mov
arpl
jl
dec
and
ja
push
lahf
jge
and
sbb
sbb
stos
dec
in
xchg
mov
mov
xchg
and
pop
std
or
ja
mov
adc
mov
or
jecxz
add
mov
ja
add
xor
ret
adc
pushf
jo
ficomps
cwtl
dec
mov
adc
mov
inc
vpaddd
daa
sbb
enter
lds
pop
xlat
sub
cmpsb
scas
push
xor
mov
es
cmpsb
outsl
or
xchg
dec
cmp
shll
lock
fidivrs
jge
inc
fcmovu
sbb
push
push
xor
or
mov
xchg
xchg
test
stos
movupd
mov
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
movl
mov
mov
mov
adcl
xor
add
andl
mov
mov
mov
sub
xor
mov
dec
xor
dec
jmp
loope
xchg
fdivs
jno
addl
adc
sub
les
jo
mov
loope
jb
xchg
push
test
outsl
inc
push
xorl
clc
stos
das
mov
push
push
xor
lahf
jge
adc
call
popa
rcrl
ds
jo
dec
in
and
add
and
and
push
or
push
and
cmp
shrb
and
xor
loope
fcomps
fldcw
sub
add
outsb
pop
push
arpl
push
mov
fcompl
pushf
movsl
fsubl
pop
jno
sbb
sbb
mov
aad
jns
inc
aas
insb
insb
mov
inc
in
cwtl
mov
shll
out
dec
mov
push
push
adc
into
in
loop
inc
xchg
push
sbb
push
fwait
adc
lahf
xorl
stos
or
xchg
pop
aad
pop
test
pusha
fs
add
pop
das
add
mov
ss
jne
into
push
arpl
dec
stos
jae
xor
lods
xor
popa
mov
daa
mov
in
std
std
xor
jl
sub
sahf
adc
shrl
bound
ja
subl
cmp
pop
mov
ljmp
js
lods
in
popf
and
fwait
push
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
mov
adcl
add
mov
movzbl
and
mov
mov
movl
mov
xorl
mov
mov
mov
mov
mov
mov
mov
mov
jmp
hlt
and
arpl
jno
scas
mov
sbbl
les
jo
cld
gs
push
fisttpl
inc
pop
sub
test
mov
sub
dec
out
addr16
in
push
dec
push
aaa
inc
imul
in
les
or
cmp
insb
scas
rolb
jp
in
hlt
xchg
jnp
adc
jb
cs
lcall
aaa
iret
jp
ss
push
movsl
movsl
jo
push
jg
jecxz
loop
sub
sti
sbb
inc
enter
pop
out
data16
les
pop
movsb
roll
dec
push
popf
cmp
jle
adc
inc
shrl
sbbl
xor
aas
loopne
xchg
fsubrl
fcmovnb
out
add
lea
sub
inc
sbb
or
dec
cmp
out
lock
push
and
popa
movsl
xchg
insb
xchg
mov
sub
pop
test
inc
call
dec
out
mov
rcrl
xchg
xlat
mov
inc
and
jge
movsl
xchg
xchg
pop
cmp
xor
xchg
outsl
jb
xor
fsubs
data16
dec
mov
iret
pop
std
rol
cmp
int
icebp
adc
sbb
cmc
lods
pusha
mov
inc
lock
scas
jo
aam
inc
or
roll
pop
leave
ret
push
mov
mov
xor
jmp
cmpsl
sub
mov
mov
sti
xor
jo
les
lret
jne
push
outsb
in
dec
sub
mov
roll
insb
sub
inc
push
cmpsb
push
sbb
adc
adc
inc
retw
sarb
xchg
adc
jle
cwtl
das
fisubs
xor
into
dec
dec
dec
das
mov
jbe
hlt
mov
shll
dec
xchg
imulb
sub
movsl
fsubs
and
pop
inc
dec
mov
test
je
push
mov
and
add
outsb
sub
lods
sbb
mov
lahf
pop
insb
pop
mov
jae
inc
fiaddl
ret
add
and
cmp
pop
push
xchg
push
jge,pt
jg
repnz
stos
xor
jle
test
xlat
push
cmp
sarb
add
add
loopne
cmp
mov
fmull
inc
and
mov
jmp
aas
jne
inc
getsec
mov
xchg
or
push
les
add
andb
and
fs
mov
aam
jle
xor
inc
pop
or
xor
mov
push
mov
enter
sbb
sub
test
icebp
mov
and
or
mov
pop
ret
push
mov
push
movl
add
mov
mov
mov
mov
add
mov
xor
subl
add
xorl
mov
incl
mov
subl
mov
mov
mov
mov
adcl
mov
mov
mov
subl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
add
mov
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adcl
mov
mov
mov
adc
movl
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
push
push
pushl
push
push
push
push
push
call
jmp
sbbl
mov
push
sbbl
push
push
mov
andl
jmp
mov
jmp
sub
xchg
or
push
xor
jo
jge
jo
insl
pminub
in
jb
sbb
push
shlb
out
jno
cwtl
mov
push
xor
fs
cwtl
icebp
xchg
in
loope
int
adc
adc
shrb
out
add
pop
sahf
pushf
ss
xchg
dec
adc
rcll
push
sti
sbb
jecxz
dec
dec
in
icebp
jae
lds
push
out
ja
ficoml
and
loop
iret
std
sbb
mov
filds
aam
repnz
mov
and
cmpsl
stc
aaa
ret
mov
xchg
enter
cmp
lods
addr16
jmp
pop
jne
fwait
dec
fidivs
cld
adc
jbe
mov
dec
inc
sub
or
lods
dec
sbb
popl
stc
lea
pop
bound
shl
je
test
and
dec
dec
xchg
sub
mov
lock
call
or
hlt
lret
shlb
iret
or
sbb
popf
pop
das
insb
pusha
sbb
adc
xor
hlt
pop
mov
push
adc
shrb
push
btr
fnstcw
jmp
stc
shlb
repz
pop
fs
inc
push
xchg
pushf
loop
shl
xlat
shll
movsb
and
push
jle
not
popa
xchg
outsl
ficomps
xchg
enter
adc
mov
or
dec
cmpsb
mov
pop
cmp
adc
into
inc
pop
add
or
repz
push
inc
aad
inc
mov
out
jbe
jg
cmp
ret
outsl
loop
pop
mov
cmpsl
ror
sbb
inc
in
dec
adc
sbb
inc
sbbb
dec
pop
ret
shlb
cmp
mov
pop
mov
jmp
je
and
or
adc
mov
cwtl
dec
mov
pusha
je
xor
add
mov
inc
push
sbb
pop
and
dec
and
push
push
ljmp
pop
add
stos
movsb
mov
pop
and
mov
mov
imul
cmp
dec
js
jb
mov
les
or
fildl
stos
sbb
xor
or
leave
mov
push
mov
hlt
clc
int
shr
and
mov
out
loope
rcll
imul
cmp
pop
jp
push
pop
xor
pushf
movsb
shll
test
js
pop
push
mov
jae
jl
in
adc
leave
xor
and
add
add
cmpl
out
mov
push
iret
adc
sahf
in
outsl
pop
int3
jbe
das
orl
fisttpll
pop
mov
shrb
push
stos
das
add
fisubl
pop
lret
fcmovbe
jge
call
mov
xchg
movsb
sub
iret
mov
aas
and
ds
add
add
arpl
in
jg
or
scas
xor
xchg
cmp
add
or
xor
mov
getsec
add
jge
test
cmpl
movb
ds
add
andl
add
jmp
xchg
test
xchg
jno
xchg
js
sahf
dec
pop
insb
mov
jge
jo
fnop
xchg
sti
pusha
mov
adc
fidivl
mov
mov
test
test
fs
es
add
outsl
ljmp
add
jns
inc
sbb
div
jae
stos
xor
movsb
add
test
in
test
dec
iret
in
ret
rcrb
sbb
andb
lds
addb
movsl
xlat
mov
sbbb
add
mov
sbb
inc
icebp
mov
daa
lret
sbb
cmp
cmp
jne
pushf
lret
repnz
jmp
aad
push
int3
ljmp
xchg
mov
mov
mov
jne
inc
jbe
call
or
jg
mov
jnp
lret
and
and
or
mov
lcall
clc
xor
leave
inc
inc
imul
decl
jb
mov
xchg
scas
sbb
faddp
mov
cmp
sahf
sti
negl
incb
lret
test
roll
jmp
sbb
in
cmpsb
push
inc
mov
mov
fadd
fdivs
lods
out
sub
daa
popf
push
pusha
out
shl
enter
popa
cvtps2pd
sti
out
fsubrl
adc
loop
out
je
aaa
mov
cmc
mov
lods
add
sbb
scas
pop
test
test
ja
sbb
lahf
cmp
ja
xchg
sbb
test
xor
add
mov
pop
mov
inc
mov
mov
rol
ret
sbb
xlat
js
jecxz
xchg
sub
add
jecxz
divb
pop
and
lret
push
roll
push
aaa
push
mov
dec
int3
sbb
lds
sub
mov
imul
insb
loope
dec
pop
jne
out
aad
mov
data16
inc
sub
cs
cmp
cmovg
jmp
jge
adc
les
xor
popf
jns
mov
nop
repz
push
inc
or
loopne
push
addr16
jmp
cmc
inc
stos
aas
sub
nop
lods
mov
call
add
mov
or
sub
push
ss
mov
mov
inc
pop
push
jle
or
leave
pop
mov
sbb
or
leave
movsb
lods
outsb
mov
call
fs
outsl
adc
sahf
mov
or
xchg
push
cld
cmpsl
idivl
pop
and
les
and
adc
dec
lahf
mov
xchg
mov
rorl
push
and
pop
inc
sbb
pop
out
popf
fs
cs
mov
pop
ret
jg
ss
add
push
gs
lock
sbb
add
test
push
push
in
insl
pop
or
jp
cmpsl
setle
push
mov
dec
and
push
add
add
cmc
push
movsl
int3
sahf
daa
sub
and
inc
jnp
jge
shlb
inc
movsb
insb
mov
cmp
jmp
aas
stos
pop
add
fwait
cld
orb
popf
mov
es
subl
mov
xorl
movl
movl
movl
xor
movl
xor
mov
subl
xor
addl
add
adcl
mov
movl
sbb
movb
or
mov
xor
add
mov
neg
mov
sbbl
xor
add
subl
push
sbb
mov
subl
xor
adcl
add
push
add
mov
addl
xor
add
addl
push
lea
push
pushl
adcl
pushl
call
subl
jmp
test
xor
mov
test
push
fcmovb
fbld
in
subl
jo
jge
jo
pusha
mov
and
pop
loope
mov
arpl
xlat
gs
js
adc
in
jge
fldcw
mov
jle
push
jnp
xchg
outsb
test
je
icebp
or
stc
add
push
notb
dec
call
mov
in
aaa
scas
es
mov
cwtl
insb
mov
sbb
mov
mov
imul
mov
xchg
xchg
sti
cmc
sets
ds
pusha
ret
xchg
adc
ret
xchg
sarl
cwtl
inc
or
shrl
sub
cmpsl
or
stc
es
xchg
cmpsl
rcrb
push
ljmp
inc
cmp
or
in
ret
adcl
mov
jnp
data16
xlat
test
mov
mov
inc
add
ret
add
popf
push
stos
inc
call
out
insl
pusha
ror
ret
dec
cli
jp
dec
stc
mulb
repnz
mov
lds
out
rol
xchg
inc
insl
negb
orb
or
jnp
push
in
and
lds
cmp
and
inc
out
mov
mov
stc
sub
inc
mov
sbb
jmp
aas
incl
pop
xchg
mov
adc
sub
add
les
arpl
lcall
pop
lret
lds
incl
cltd
imul
arpl
lea
fildll
sub
loopne
jl
arpl
jbe
mov
test
mov
lcall
insb
ss
sub
cli
std
decb
fs
dec
add
push
inc
mov
ja
ja
into
and
andb
fadds
out
inc
cmpsb
mov
mov
push
sub
mov
xchg
call
ret
fmull
push
dec
adc
pop
xor
cpuid
xchg
sub
and
int
mov
outsl
aam
scas
dec
mov
fwait
test
jp
adc
cmp
add
movsb
sbb
dec
loope
out
mov
js
outsl
fldt
mov
jns
out
aas
mov
hlt
jecxz
sbb
push
xchg
sub
push
push
out
push
xor
push
push
cmp
sbb
aaa
push
mov
out
sbb
and
es
incb
jmp
pop
fsts
fwait
mov
push
jo
sub
pmulhuw
xlat
or
call
and
pop
adc
push
aam
in
push
push
stc
or
xlat
aaa
mov
or
jecxz
cmp
dec
stos
mov
lods
xchg
mov
lret
dec
and
iret
inc
add
fimuls
test
push
push
jbe
imul
inc
pop
stos
aaa
ret
xor
xor
or
clc
jb
insb
xor
fildll
test
push
imul
cltd
pop
mov
stos
mov
inc
mov
pop
push
add
rol
movsl
inc
inc
add
add
je
lea
sbbl
push
sbbl
mov
andl
xor
add
push
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
jmp
mov
add
mov
aaa
sbb
cmp
and
jo
ficompl
int
cld
out
inc
fcoml
sbb
mov
lahf
or
jl
xchg
cmp
inc
push
mov
mov
pop
imul
jbe
push
and
pop
jne
ja
loope
and
je
fld
jle
mov
lahf
out
sarb
lods
jb
stc
sbb
test
pop
dec
mov
mov
and
imul
cmc
mov
repz
inc
jl
pop
inc
sbb
sub
jno
fistl
cmpsl
cs
pusha
sbb
push
and
add
mov
sbb
xchg
and
and
lahf
test
add
xchg
pop
sbb
out
pushf
and
pusha
int3
adc
xor
xor
rol
and
inc
push
fdivp
xor
jbe
add
loopne
pop
rclb
xor
bound
lds
xchg
lods
push
lcall
add
decb
xchg
leave
test
aad
orb
xchg
mov
test
test
mov
leave
test
pusha
call
add
pop
pop
mov
sbbl
lods
push
leave
jl
negb
lahf
scas
cwtl
pop
fsub
shrb
lahf
jae
lahf
jp
mov
cmp
jge
les
movsbl
or
inc
add
jnp
orb
test
lods
mov
jecxz
push
push
inc
fwait
sub
ja
pop
lret
sbb
or
int
push
cld
and
cltd
dec
es
jno
cs
sbb
xlat
or
push
mov
sbb
inc
cwtl
pop
pop
sub
dec
and
cmp
dec
repnz
inc
mov
sarb
sub
fdivr
pop
push
inc
aaa
fisubrl
jmp
xchg
lcall
jne
sbb
sub
sti
ja
clc
jb
cld
jl
mov
mov
push
mov
mov
xor
mov
loope
psadbw
hlt
mov
stos
mov
and
test
jmp
jns
sub
sbb
inc
les
int3
xchg
inc
testb
xor
outsb
lahf
mov
push
fidivrl
lret
mov
rorl
jnp
scas
lcall
out
in
jge
push
sbb
sarl
int
or
test
repz
mov
mov
mov
icebp
insl
mov
sub
or
clc
jb
push
jmp
loopne
jae
mov
push
push
shll
xor
push
jb
jge
mov
test
xor
icebp
jecxz
clc
jno
dec
inc
mov
in
mov
ret
cmpsl
or
inc
xor
cmp
or
ss
add
sbb
adcl
stos
sbb
sbb
jo
lret
jg
mov
mov
lds
lret
imul
pushl
call
test
je
lea
jmp
enter
outsb
bound
adc
loopne
lret
jo
and
jo
inc
bound
sahf
push
sti
inc
mov
jecxz
jbe
jmp
push
pushf
in
lods
pop
imul
pop
sti
jmp
dec
js
negl
cmpsb
mov
or
mov
lock
in
add
sbb
pusha
push
mov
mov
jecxz
or
cs
lock
fs
lret
mov
call
cmpsb
jo
jecxz
fnstcw
sbb
test
popa
cld
pop
bound
pop
pop
push
sarl
mov
xor
cmp
test
push
pop
cmpsl
xor
loopne
outsb
mov
cmpsb
jae
lods
mov
movsl
sub
imul
lods
cli
fmull
push
mov
mov
sbb
jle
out
mov
mov
rol
int3
xor
stc
and
mov
out
hlt
mov
xorb
pop
add
mov
fstpt
xlat
out
mov
popa
cmpsl
adc
out
xor
ja,pn
in
cmp
xchg
scas
sbb
scas
inc
xchg
cs
push
into
jl
xor
pop
dec
sub
aad
sbb
ljmp
jge
sub
adcb
mov
jb
fldenv
test
push
sbb
xchg
fstpt
push
dec
aaa
mov
dec
hlt
mov
sbb
pushf
inc
test
lds
jae
ror
sbb
sar
jb
or
xchg
cwtd
in
add
out
jns
or
outsl
mov
xchg
xchg
sti
xchg
sbb
cmpsl
das
dec
sub
int
sbb
or
rclb
sub
ret
vmwrite
inc
mov
jno
dec
sbb
popa
mov
insl
cltd
push
mov
cmp
jb
or
push
insl
rolb
xor
fcoms
mov
mov
test
add
xor
outsl
xor
xor
sub
fcmovbe
popa
jg
adc
jge
inc
rcr
out
out
jmp
jp
clc
test
adc
mov
jnp
mov
out
fstp
bound
or
push
add
xchg
jge
shrl
mov
lret
repnz
pop
mov
mov
mov
aaa
and
push
jg
sub
jp
outsl
repnz
in
int
pop
mov
xchg
adc
pop
dec
stc
sbb
jl
inc
jecxz
mov
add
pop
or
jns
xchg
or
pop
test
jmp
pop
leave
inc
test
sub
fwait
push
inc
shlb
ljmp
add
cmpsb
mov
or
add
test
jb
jb
shl
inc
dec
das
cltd
lds
in
adc
xchg
orl
mov
jne
test
sahf
pop
cld
clc
sbb
xchg
mov
lods
mov
pop
shlb
xor
fprem1
adc
test
out
cs
fnstenv
dec
movsb
mull
shlb
push
pop
push
cmp
inc
in
xor
add
push
mov
add
push
mov
jmp
inc
jmp
cwtl
loope
inc
pop
mov
mov
sti
les
and
jo
mov
fldt
fcomi
jle
fdivl
or
popa
fcmovnb
xchg
nop
jl
push
in
xchg
outsl
insb
dec
or
jg
xchg
iret
shlb
lahf
push
sub
push
xor
cmp
xchg
pop
jbe
cmp
xchg
adc
pop
arpl
ja
repnz
fistpll
lcall
cmp
adc
adc
jne
adc
xchg
push
js
pusha
xchg
lods
jns
test
mov
in
and
xchg
movsl
ja
jne
movsl
pop
mov
pusha
test
sbb
dec
push
cmp
repnz
enter
and
add
test
sub
jg
pusha
inc
arpl
dec
lahf
mov
stc
mov
repnz
push
jmp
xor
xor
jmp
xchg
insb
mov
add
mov
pushf
lret
lahf
dec
sub
frstor
js
imul
fsubrl
jae
mov
sub
add
push
inc
fwait
loopne
in
xor
out
fxch
cmp
mov
lahf
inc
std
lcall
jb
inc
push
push
scas
sub
imull
icebp
cli
push
sbb
clc
pop
cld
xchg
push
lea
mov
test
mov
daa
sar
scas
jle
jp
sub
cmp
jns
scas
test
repz
cltd
sbb
fnstenv
call
testl
mov
fldenv
or
xchg
mov
jmp
test
push
nop
setl
rcrl
sub
jo
inc
aas
popf
in
movsl
mov
mov
adc
test
into
sub
add
mov
out
add
jno
outsl
mov
xchg
stc
push
stc
mov
loope
mov
adcl
daa
loope
add
clc
push
mov
hlt
inc
cmp
data16
mov
mov
xchg
insb
jg
push
jge
jo
das
les
push
xor
cmp
sahf
jmp
push
imulb
shl
and
icebp
scas
mov
es
jecxz
loopne
cs
push
pop
add
scas
push
jne
cmp
sahf
cltd
inc
lea
lds
xchg
lahf
adc
xor
popf
dec
rol
jo
xchg
cld
lods
mov
repz
testb
mov
adc
movsl
fnsave
bound
fistps
faddp
cmp
lcall
clts
call
xor
les
or
fistpll
adc
adc
or
xchg
int3
xchg
mov
and
push
imul
fs
into
mov
sbb
loopne
shll
lahf
mov
inc
jae
jbe
mov
mov
jmp
rorl
mov
xchg
cwtl
jns
jno
lcall
mul
jb
pop
fbld
cmpl
inc
mov
testb
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
jmp
sub
cs
cs
mov
sbb
into
sub
shll
jge
jo
push
fwait
sti
fsubs
dec
notb
mov
mov
pop
repz
out
push
fdivrl
shll
and
nop
push
mov
xchg
sub
in
sbb
add
xlat
insl
lcall
ss
pop
mov
sbb
xor
add
mov
xlat
lcall
mov
pushf
push
pushf
push
push
mov
push
and
mov
and
jno
xor
ficoms
xchg
jb
dec
rolb
inc
mov
mov
stos
or
movsl
dec
test
mov
mov
sub
mov
add
push
jle
nop
jl
subl
mov
pop
dec
push
in
les
adc
out
clc
mov
mov
jecxz
fidivrs
es
sub
jp
xchg
xchg
pop
mov
stc
ret
sbb
sbb
ss
push
jge
test
es
dec
mov
and
aaa
lods
adc
popa
adc
and
and
fwait
add
shl
sahf
imul
pop
roll
addl
daa
xor
adc
jmp
adc
test
test
aas
cmp
shl
leave
ret
push
repnz
ljmp
fsubs
mov
ficoml
jecxz
or
dec
stc
mov
sbb
mov
mov
inc
outsl
jbe
outsl
mov
subl
xor
ja
rcll
lock
test
and
gs
stc
sbb
jne
cmp
adc
sbb
fisttps
aam
pop
test
sbb
cmp
sub
shl
out
popf
jne
or
xor
cwtl
dec
outsb
test
lahf
rclb
dec
lods
xchg
aam
cli
lock
loop
movsl
mov
sbb
push
sub
xorb
es
push
test
xchg
insb
int
inc
xchg
mov
xchg
in
cmpsl
pop
cli
pop
push
jne
js
idivb
mov
leave
jb
sbb
inc
push
inc
jge
dec
sbb
cmp
push
test
mov
pop
sub
sub
mov
adc
xchg
insl
jecxz
pop
push
adc
int
es
insl
test
mov
movsb
mov
mov
insb
stc
testl
cltd
add
push
ret
repnz
jno
stc
stos
sub
stos
insb
fcmovu
test
push
sbb
sub
int3
xchg
push
dec
outsl
std
add
dec
jle
lcall
dec
inc
pop
test
fwait
mov
rcll
movsl
mov
lret
cmp
xlat
rcrb
sbb
jle
in
mov
outsb
push
test
mov
push
mov
imul
mov
xchg
and
pop
mov
mov
mov
push
push
mov
out
push
mov
jo
repz
or
jne
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
mov
add
pop
pop
pop
leave
ret
push
mov
sub
push
sbb
mov
mov
mov
sub
xor
mov
adc
mov
movl
sub
movl
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
or
xor
mov
adc
add
mov
or
mov
adc
mov
sbbl
xor
add
mov
or
mov
mov
inc
movl
movl
cmpl
je
cmpl
jne
call
xor
add
dec
mov
jmp
mov
mov
sub
add
jmp
fldcw
cs
mov
jae
shll
inc
push
hlt
rcrb
jo
jg
jo
xchg
sbb
pop
fidivl
das
outsb
adc
jb
adc
pushf
lahf
sub
mov
fs
or
jns
icebp
loopne
in
mov
iret
cli
dec
les
jo
ret
dec
sbb
xchg
mull
rcrl
inc
lahf
pop
lock
or
xchg
dec
daa
je
xor
stc
push
cld
dec
imul
jge
insb
xchg
sbb
in
and
loopne,pn
fbstp
fcmovb
mov
push
mulb
sub
shll
fidivrs
lcall
lret
push
xor
xchg
and
sti
xor
iret
cmpsl
rorb
inc
aaa
dec
sub
sub
loope
xor
sub
jmp
int
xor
and
push
jle
dec
dec
jp
add
dec
mull
xlat
dec
or
mov
rcr
pop
test
sub
push
pop
or
js
daa
xor
xor
sub
mov
cmpsb
in
in
mov
add
and
pop
scas
in
inc
dec
sub
mov
push
stc
mov
es
adc
sti
out
mov
mov
aad
fwait
dec
adc
mov
sti
mov
sti
mov
adc
lret
push
sub
in
inc
mov
lock
xlat
popa
mov
sub
call
lret
in
add
jp
push
jno
insb
call
add
jg
into
fisttps
pushf
data16
jno
fs
imul
bound
lods
in
xchg
push
ja
mov
out
jnp
push
mov
or
adcl
shl
jmp
xchg
je
inc
hlt
das
push
sub
dec
sub
lock
jp
add
in
inc
fdivs
test
inc
add
inc
aam
test
inc
add
cmp
movl
movl
and
movl
jmp
lods
mov
jno
fidivl
rorb
imul
pushf
jmp
aam
scas
pusha
cmp
dec
or
sbb
pusha
insl
add
cld
push
cld
loopne
arpl
push
test
pop
inc
test
adc
jnp
test
orb
lret
and
aad
jle
pop
cwtl
outsb
pop
inc
sti
push
ret
pop
imul
mov
mov
xchg
or
movsb
hlt
fists
das
imul
jle
mov
push
xchg
sbb
leave
mov
fcmovb
popa
pop
adc
dec
iret
pmulhw
mov
sbb
insl
inc
xchg
push
sub
push
popa
or
xchg
fsubs
adc
and
sub
imul
iret
mov
lods
aam
fs
test
jl
or
adc
aam
dec
ds
or
mov
adc
sahf
jo
inc
imulb
and
cmc
dec
sub
insb
sti
insl
mov
push
inc
mov
pmaddwd
mov
push
xor
jecxz,pt
push
sub
pop
pop
push
xor
xchg
fisttpl
add
xor
je
in
push
test
in
sahf
add
cmp
rolb
and
in
cld
mov
push
fstps
pop
sahf
mov
insb
shlb
out
mov
outsl
int3
inc
push
imul
push
push
jge
xor
mov
ret
leave
leave
cmpsb
jbe
in
pop
std
mov
rol
dec
push
out
lahf
mov
sbb
sub
data16
adc
xchg
mov
call
sti
cmc
sub
lods
mov
sbb
cmpsb
pusha
aam
cmp
lret
orl
xor
out
fisttpll
mov
inc
and
call
enter
mov
xor
mov
dec
out
arpl
xor
les
test
inc
add
add
add
add
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
xor
sbb
mov
add
cmp
jmp
mov
jae
xchg
xor
xchg
pop
mov
imul
xor
jbe
into
mov
push
push
cmp
sbb
sub
adc
jg
in
or
jecxz
or
mov
and
jp
jnp
jecxz
or
sub
ljmp
lea
inc
jp
gs
insl
mov
adc
sti
xchg
ja
hlt
mov
lds
in
sbb
data16
sbb
fwait
imul
hlt
sub
lods
or
in
xchg
mov
jbe
and
outsb
stos
pop
sbb
sti
mov
and
shll
adc
adc
cmp
scas
out
or
mov
call
push
jl
mov
push
loope
testb
mov
dec
out
inc
pop
mov
jmp
cli
adc
push
jmp
mov
fsubp
jl
cltd
push
adc
cwtl
arpl
xlat
sbb
pop
mov
leave
jge
pop
xchg
push
rcll
xor
mov
mov
movsb
repz
lea
shl
and
iret
add
push
pop
mov
fdivs
or
cmpsb
mov
test
or
bnd
mov
xlat
enter
and
pop
addr16
xchg
sbb
sub
xor
adc
ret
xor
fisubs
sub
or
push
sbb
sahf
in
adc
push
pop
cltd
pushl
pop
mov
in
cmpsb
ss
movsb
fisttpll
xor
pusha
iret
push
xor
pop
xchg
repnz
sub
xchg
adc
shll
xor
popf
push
adc
xor
int
xchg
call
sahf
mov
fnsave
or
inc
inc
mov
sbb
jecxz
jmp
je
imul
pop
cwtl
xor
out
mov
jge
mov
sub
lret
jmp
inc
sub
or
jae
mov
adc
ret
jle
test
add
push
movl
jmp
movl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
jmp
jmp
adc
inc
jno
pushf
jo
push
in
test
imul
xchg
mov
ret
dec
jl
stos
dec
jg
out
xlat
push
xchg
and
andl
fbstp
jbe
push
jbe
sti
repz
adc
gs
xchg
dec
xchg
rcrl
inc
scas
out
roll
jle
mov
sti
add
or
or
cmpsb
push
sub
sarl
sarb
aad
pop
xchg
incl
xchg
notl
jecxz,pn
push
inc
xor
xor
pop
clc
stos
repz
adc
bound
dec
leave
dec
mov
fistpll
je
bound
mov
fs
xchg
outsl
gs
stc
pop
xor
pop
sub
pop
fistps
into
outsl
jecxz
cmc
movsl
mov
leave
scas
and
sbb
jge
ds
movsl
mov
aam
adc
movsl
test
mov
inc
in
add
insb
xor
push
sbb
sbb
daa
and
dec
sub
cmp
xchg
xchg
fistpll
sbb
out
mov
repz
sub
int3
popa
outsl
ds
repz
aas
push
xchg
pusha
cld
mov
sub
cmc
loop
jle
out
out
dec
test
leave
movsl
je
jmp
stos
xchg
in
nop
movsb
push
pop
mov
xchg
xchg
fildll
mov
xor
xchg
xchg
xchg
mov
pop
orb
mov
cmp
sub
bound
pusha
jecxz
pop
jmp
les
lock
push
add
xchg
scas
js
in
jp
sub
push
movb
sub
push
push
loope
dec
lcall
push
mov
pop
or
push
sti
int3
dec
add
loop
addr16
pop
lock
push
fldcw
stc
outsl
lock
adc
sti
push
lahf
push
inc
add
add
mov
adc
jmp
imul
pop
mov
loope
cli
mov
xor
sbbl
add
movl
cmp
movl
jmp
sbb
pop
mov
loope
push
inc
test
and
jo
jg
jo
icebp
sbb
movsb
divb
out
mov
dec
push
add
icebp
pop
popf
and
lret
dec
or
push
ss
test
sbb
shll
and
insb
adc
insb
mov
push
stos
jp
hlt
imul
mov
pop
insb
cwtl
sbbb
jmp
cmpsb
xor
jmp
mov
cli
or
js
ja
dec
push
jb
stos
mov
sbb
cmc
pop
sarb
pusha
and
lods
das
xor
cmc
and
adc
cld
or
bnd
cmpsl
js
pop
xlat
push
arpl
aas
push
fmull
mov
je
cmp
fistl
add
mov
addb
test
jl
cli
dec
adc
andb
add
add
mov
fidivrs
cld
stos
out
cmp
dec
dec
pushf
out
and
mov
xorb
aas
popf
mov
jmp
aad
xchg
jp
shlb
xchg
add
mov
mov
inc
cmpsb
rorl
cld
adcb
insb
loopne
shlb
scas
out
xchg
imul
mov
clc
dec
mov
outsb
sahf
imul
adc
cld
cli
call
cltd
cmp
jne
cmp
inc
rcr
cmc
test
adc
filds
dec
mov
jb
push
mov
shrb
ss
xor
jmp
xchg
or
or
cmpsb
cmp
cmpsb
xchg
lret
lcall
pushf
adc
mov
mov
push
das
push
pop
ljmp
jg
sbb
bound
add
movsb
insb
jne
aad
xchg
pop
addr16
mov
into
data16
das
mov
lods
pushf
inc
mov
sbb
add
lds
add
push
cs
add
rolb
add
add
add
sldt
add
sbb
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
add
mov
add
add
add
imul
mov
mov
or
mov
sub
cmp
movl
ja
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adcl
jmp
rcrl
popf
push
stos
arpl
add
jo
imul
inc
fnstcw
jb
ljmp
mov
lock
mov
test
lea
mov
add
mov
clc
das
nop
jae
lock
or
in
mov
fdivrs
sti
pminsw
leave
fcomps
stos
movsb
adc
out
cmp
add
add
cmpsb
ret
sbb
mov
shll
inc
mov
or
pop
jecxz
lcall
push
cmpb
add
jge
outsl
sub
cmp
pop
mov
xchg
xchg
push
xrelease
push
adc
mov
mov
dec
push
imul
xchg
aad
jge
rolb
mov
xor
sbb
adc
fmull
inc
sub
daa
dec
xchg
pop
pop
xor
int3
pop
loope
adc
xchg
testl
dec
or
pop
loopne
es
test
jns
rcl
insl
jg
sarb
leave
cs
push
mov
es
shr
jae
out
ret
lods
push
sahf
call
jge
cmpsb
call
xchg
pop
loop
jge
test
in
fwait
std
ss
adc
jle
enter
mov
pop
push
fs
pop
in
sub
fwait
sbb
scas
icebp
or
mov
jnp
jnp
or
cmpb
sub
xchg
in
lods
jb
ficoms
sub
bound
aam
mov
or
andl
pop
sbb
cmc
into
push
pop
pop
mov
cmp
jle
dec
std
mov
adc
fstpl
imul
xlat
filds
int3
cli
sub
lcall
out
adc
shll
inc
lahf
sbb
sub
push
fildll
pop
dec
jns
fsts
mov
inc
imul
jbe
rolb
jno
mov
xor
add
movl
jmp
and
mov
or
mov
xor
not
xor
subl
add
or
add
or
imul
adc
mov
sub
mov
andl
sub
cmp
movl
ja
mov
movl
jmp
mov
mov
xor
xor
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
jmp
imul
jb
adc
pop
mov
jg
jo
lea
and
add
lds
jne
and
cld
xchg
and
jbe
jge
in
js
pop
shlb
xorb
outsl
jl
and
out
adc
les
mov
push
lods
fistpl
ds
xchg
mov
cmp
divl
pop
data16
out
push
hlt
js
sbb
es
xor
dec
ret
xor
test
int3
mov
jecxz
jo
inc
push
pop
pop
jno
aad
mov
xlat
jmp
cs
cmp
dec
cld
mov
xchg
cmp
mov
push
mov
or
jb
pop
stos
std
call
cld
add
xlat
cmpsb
inc
nop
sub
das
xchg
test
pop
push
shlb
sbb
xchg
enter
cmpl
sub
es
dec
incl
pop
enter
flds
mov
pop
jecxz
inc
push
les
inc
sub
add
mov
xchg
daa
jae
push
push
jnp
das
jnp
inc
mov
lret
xchg
cld
dec
rcl
in
inc
int3
adc
shl
in
mov
roll
adc
mov
es
dec
nop
insl
xor
int3
xchg
pop
dec
sub
pusha
adc
std
repz
testb
in
loop
mov
rorb
and
ret
inc
fldenv
sub
fidivrl
and
or
mov
xchg
sbb
push
dec
scas
mov
dec
jo
pop
mov
cld
dec
ds
push
fmuls
mov
cmpb
mov
rcrb
mov
popl
test
fistps
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
jmp
arpl
push
out
jnp
pusha
sub
sahf
lcall
jo
nop
add
bound
inc
and
sub
mov
sub
subb
add
int3
lea
jle
or
aam
jne
es
fiadds
mov
sub
lret
xorb
test
adc
int
out
mov
cld
dec
mov
mov
jl
jmp
loopne
push
loop
ret
imull
dec
pop
lret
sub
mov
std
mov
adc
xchg
cmpsb
xchg
data16
aaa
push
cli
mov
mov
jbe
in
xchg
out
mov
shlb
insb
push
xchg
jae
mov
test
enter
or
pop
pop
dec
jl
pop
incl
cmp
insb
dec
lea
pop
push
fnsave
or
in
dec
imul
arpl
pushf
sbb
jl
sbb
das
es
mov
xchg
dec
dec
dec
adc
out
push
push
rorl
aad
aaa
hlt
push
fldcw
out
imul
inc
cmc
sub
sbb
mov
mov
push
in
add
dec
jecxz
and
xchg
pop
xchg
cs
fsubs
dec
lea
or
lret
in
cmp
jl
int
push
in
std
test
add
in
push
jb
loop
loop
dec
bnd
ds
sar
aad
cmp
rolb
jne
fisttpl
test
cmp
out
inc
xor
enter
stc
jo
roll
cltd
sbb
lock
sahf
mov
aam
and
outsl
xchg
mov
loop
in
in
and
popf
sbb
xchg
or
jge
shr
out
mov
repnz
scas
dec
cwtl
adc
fbstp
mov
shlb
rolb
push
in
mov
mov
mov
jmp
bound
popf
cmc
mov
cltd
insb
add
adc
jo
jg
jo
movsb
sub
dec
mov
adc
test
clc
loop
jmp
sbb
aam
rcrl
xlat
mov
shll
into
inc
in
xchg
and
gs
pop
mov
mov
jb
hlt
xchg
push
xchg
lret
pop
stos
sub
xchg
xor
insb
lret
in
jle
and
cmpsb
dec
test
cwtl
outsl
add
jnp
and
xor
mov
jo
les
xchg
xchg
aam
loope
push
push
add
xchg
in
or
addr16
jae,pn
sarb
hlt
ja
xor
mov
jmp
mov
arpl
pop
lods
mul
sbb
out
iret
lods
sarl
fwait
scas
sbb
mov
sbb
jl
sbbb
aam
inc
dec
cltd
push
and
hlt
in
inc
out
in
adc
jno
sti
mov
push
imul
bound
cld
clc
mov
aas
enter
daa
repnz
cmc
add
and
push
aam
inc
loopne
sbbl
lret
mov
or
mov
mov
xor
int3
jnp
add
mov
fidivrs
call
test
movsb
jne
push
mov
scas
adc
hlt
lods
cmp
lods
mov
rcrl
lahf
aam
adc
push
or
mov
lods
and
std
mov
stos
jb
xor
xor
loop
lret
shll
sarl
popf
xchg
ljmp
repz
mov
lret
pop
adc
sbb
dec
push
pop
out
push
pop
xchg
mov
xabort
in
ljmp
mov
in
repnz
push
sbb
lret
xor
mov
adc
ret
pop
dec
decl
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
or
das
mov
push
test
into
xchg
and
or
fdivl
imul
xor
gs
xor
jno
insl
mov
lea
cmp
push
je
adc
dec
and
cs
sbb
imul
jle
repnz
sahf
jb
add
les
ja
inc
fldl
and
xchg
popf
jno
cwtl
and
push
sbb
sub
imul
bound
dec
lea
hlt
inc
mov
jl
mov
adc
lea
dec
mov
movsl
jb
inc
aaa
pop
mov
jp
cmp
jno
call
sahf
jmp
arpl
inc
sbb
pop
out
mov
ret
xor
xchg
adc
inc
jae
jae
and
daa
in
mov
subb
sub
jne
adc
push
pusha
mov
xor
xchg
stc
sbb
and
daa
stc
repnz
xchg
pop
cmpsb
mov
or
and
aam
push
jnp,pt
xchg
fldl
push
mov
pusha
data16
xchg
adc
in
sub
dec
in
into
cmpsb
mov
sub
add
shr
cmpsl
imul
push
sub
aaa
inc
push
dec
push
and
adcb
xchg
jno
push
xchg
jne
dec
xor
addr16
pop
mov
adc
add
push
sub
xchg
call
jmp
jae
in
roll
push
adc
jp
imul
pop
incl
mov
imul
pop
aad
shlb
in
mov
int
pop
inc
pop
xor
popf
sbb
ds
xchg
dec
jae
xor
push
mov
xor
pusha
sbb
mov
jno
adc
lahf
fists
xchg
and
jecxz
in
add
and
mov
mov
pop
pop
add
jmp
sbbb
cltd
js
mov
lock
jo
jg
jo
mov
es
cltd
push
arpl
iret
scas
mov
insb
push
jnp
fisttps
sbb
push
loop
bound
inc
mov
adc
int
mov
int
mov
sarb
push
pop
std
sub
hlt
cmpsb
mov
pop
xchg
mov
inc
cs
test
or
add
mov
push
rolb
aad
mov
shlb
sub
sbb
push
or
lahf
xor
bound
mov
add
push
mov
repnz
pop
pop
add
clc
sub
inc
pop
shrb
es
arpl
add
pop
lret
mov
pop
xchg
mov
xlat
pusha
jle
pop
xchg
xlat
repz
repz
lea
inc
aam
jb
push
hlt
pop
ljmp
lods
pop
mov
push
xor
sub
icebp
imulb
sub
div
pusha
xor
sti
cmp
fldcw
loop
xorl
outsb
movsl
dec
push
repz
push
cmp
xor
push
mov
scas
out
loop
mov
scas
out
gs
loopne
jp
jno
lds
jge
jo
sub
lret
push
push
push
fmull
cmp
xchg
js
into
fcoms
dec
aaa
mov
dec
fildl
inc
xor
adc
jecxz
aad
mov
aam
push
sub
or
movsl
mov
imul
nop
xchg
iret
cmpsb
leave
aam
jne
popa
inc
popa
inc
pop
lods
subb
das
movsl
outsl
dec
call
cmc
jg
push
xchg
jns
add
mov
mov
jmp
add
xchg
push
adc
dec
aam
and
pop
pushf
bound
call
in
lods
pop
out
xchg
push
sub
lods
or
jbe
cmp
cmc
sub
xchg
xchg
jmp
pop
repnz
scas
xlat
jmp
clc
icebp
mov
icebp
ficompl
cs
fdivs
imul
cmpsb
add
pop
lret
stos
ljmp
push
lods
pop
add
and
arpl
cmc
jle
push
cld
adc
js
add
xchg
inc
pop
xchg
fwait
cmp
insl
repz
sbb
jge
inc
mov
sub
jmp
sbb
mov
or
pop
xor
lods
call
adc
mov
movsl
mov
bound
es
xor
inc
js
out
push
pop
or
decl
mov
adc
arpl
dec
pop
insl
and
push
mov
xorl
sub
inc
cmpsb
es
loope
inc
inc
cmc
repnz
push
and
rorb
hlt
xchg
cmp
xor
daa
gs
push
aad
inc
icebp
xchg
adc
push
mov
cmc
mov
addb
and
mov
dec
xor
fstl
cltd
add
mov
mov
movsl
inc
lret
dec
inc
pushf
and
mov
xchg
movsb
shlb
sbb
dec
jle
pop
jne
mov
pop
sbb
add
gs
je
prefetch
popa
dec
mov
subl
in
mov
fwait
jb
or
into
js
cmp
or
ret
addb
jp
loope
mov
mov
xchg
popa
jp
pusha
test
mov
nop
gs
test
xchg
imul
push
adc
sbb
fnstcw
clc
xchg
faddl
jle
rorl
add
mov
pop
notb
fldcw
jne
push
pop
in
mov
mov
pop
shrl
and
jg
xchg
jb
jge
out
adc
sti
mov
push
xor
inc
push
pop
mov
and
dec
mov
pop
lods
lods
mov
and
pusha
mov
push
in
mov
mov
xor
jmp
dec
iret
lods
dec
lods
imul
cmp
notb
out
jo
jg
jo
adc
jb
mov
nop
jae
scas
call
sub
aaa
xlat
fnsave
mov
inc
pusha
mov
in
addr16
mov
pop
xchg
jae
loop
arpl
mov
lods
aaa
mov
mov
sbb
cmp
mov
pinsrw
rcll
xor
push
mov
testl
jecxz
pushf
push
lea
cli
int
inc
cmp
dec
addr16
xchg
notl
test
push
lret
mov
fists
sbb
adc
clc
or
jmp
jmp
sub
sarl
movsb
fsts
gs
adc
aam
adc
pop
push
mov
adc
sub
xchg
push
add
cmc
cs
jl
into
add
mov
xchg
out
mov
dec
xor
cmp
lods
cmp
sub
ficoml
sbb
js
dec
cld
xchg
mov
or
out
xchg
jae
sahf
inc
nop
mov
scas
xchg
iret
push
and
mov
cli
add
cmpsb
imul
add
inc
jecxz
rcrb
xchg
cmp
fisubl
pop
sbb
xor
mov
pop
xor
adc
cwtl
mov
mov
or
xlat
lret
shrb
cmpsb
in
adc
sbb
mov
fldt
mov
xor
popa
cs
push
divl
mov
xchg
lahf
repnz
xorb
shll
push
mov
jge
arpl
mov
dec
xlat
jb
jb
and
sarl
call
sarb
xor
sbb
fiadds
rorl
scas
xlat
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
jmp
int3
sub
push
mov
stc
jge
loopne
jo
imul
push
and
adc
fidivs
out
daa
cli
lahf
loope
fsubrs
mov
in
pop
insl
mov
mov
out
out
mov
jno
outsl
mov
arpl
ret
test
push
adc
xchg
add
fadds
inc
outsl
xchg
das
cmp
les
fisttps
vhsubpd
lock
or
cs
inc
xor
sbb
sbb
iret
jg
das
push
mov
out
test
adc
sub
loope
fnstenv
cmp
in
pusha
in
ja
jae
out
add
push
in
loope
dec
jge
inc
imul
jae
cltd
fsubr
jae
dec
cmp
add
aaa
ftst
into
add
clc
test
loope
ret
mov
shlb
mov
mov
sbb
sub
in
adc
mov
inc
mov
adc
push
xor
inc
pop
psubd
mov
jle
sub
xchg
out
xchg
mov
or
pushf
sahf
lds
loopne
inc
push
sti
jno
addr16
dec
sub
addr16
sub
xchg
jno
movsb
push
sbb
push
popa
rcrl
add
lods
ljmp
add
inc
mov
movsl
loope
pop
aaa
cmc
jl
mov
pusha
mov
mov
jbe
xchg
pop
add
pop
rcrl
cld
or
jbe
pop
scas
adc
jl
insl
sub
xchg
cmc
js
filds
je
clc
mov
and
sub
cs
xor
push
push
fxch
jns
add
addl
pop
out
cs
jle
flds
mov
out
push
push
jp
jge
xor
add
imul
mov
xor
add
mov
lea
mov
mov
jmp
popa
ja
add
xorl
adc
mov
loope
adc
loop
jo
jg
jo
enter
sub
push
fisubl
dec
fmulp
test
xor
mov
pop
mov
dec
or
inc
test
stos
xor
movsl
xlat
cmp
lods
repnz
and
and
sahf
aad
mov
insb
lret
or
addl
imul
cmp
std
xchg
ret
xchg
jno
cmp
rcll
pop
adc
insw
push
mov
sub
idivb
repnz
xchg
rcll
mov
xchg
xor
cltd
lods
cld
xchg
cmp
or
shl
stc
push
or
adc
popf
adc
inc
cmp
cmpsl
mov
daa
lahf
mov
aas
addl
cmp
movsb
aad
rorl
push
adc
divl
inc
sbb
stos
mov
mov
test
fmull
cmc
into
dec
push
mov
insl
in
sbbb
cmp
repz
fwait
mov
nop
jbe
cs
imul
mov
int
gs
movsb
sub
sti
rcll
xchg
fistpl
mull
jl
aad
push
xchg
bnd
mov
or
add
ret
add
dec
ja
aaa
ret
out
js
push
jno
fsubrl
aad
inc
add
jmp
shlb
loopne
sub
stos
mov
inc
out
push
call
jno
adc
inc
pop
negl
out
add
lret
out
lods
jbe
pop
dec
aas
push
mov
jo
cmp
mov
sub
rcr
lret
arpl
iret
mov
sub
or
dec
jge
add
imul
dec
cli
pop
out
dec
pop
add
or
cmp
ljmp
adc
nop
mov
sub
repnz
xchg
test
xor
mov
lret
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
xorl
push
call
test
jne
addl
xor
jmp
call
cltd
movl
cmp
jne
cmp
je
push
subl
call
addl
test
movl
jne
subl
push
xor
mov
or
mov
xorl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
lea
subl
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
xor
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
pushl
call
jmp
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
call
mov
dec
mov
jmp
mov
xor
mov
mov
addl
push
mov
sbbl
xor
sbbl
push
xor
mov
adcl
add
mov
mov
movl
cmp
mov
je
mov
xor
subl
add
addl
imul
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
mov
sbb
mov
sbb
xor
not
add
mov
mov
mov
subl
xor
add
movl
cmp
jne
xorl
pushl
subl
pushl
call
mov
mov
xor
mov
sbb
mov
inc
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
mov
movl
mov
and
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
xor
or
sub
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
sub
mov
xor
add
and
mov
mov
mov
subl
push
adc
push
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
jmp
cmp
inc
mov
negl
jmp
inc
rcl
jo
xchg
jg
jo
mov
push
push
dec
fcoms
outsl
add
js
adc
mov
sbb
jae
roll
out
fwait
loope
std
mov
pop
xor
push
cmp
imul
and
out
sahf
mov
push
push
movsl
cltd
inc
aad
mov
loopne
sub
xchg
dec
pop
fdivr
mov
lods
push
arpl
scas
cmp
ret
rcrb
ja
pop
ror
scas
punpcklwd
rcr
mov
sbb
sahf
std
lret
cmp
and
ds
leave
pusha
xchg
stos
cs
cmpsb
lret
jae
ss
xor
mov
cmp
mov
pop
mov
sub
fidivrs
cmp
push
movsl
int3
or
mov
push
xor
idiv
push
outsb
out
fwait
int
jbe
xlat
xchg
js
push
call
pop
mov
sti
imul
sbb
pop
nop
inc
test
push
in
out
xchg
pop
cmp
and
add
xchg
int3
ficomps
or
bound
lret
fwait
pop
imul
ss
jb
or
dec
mov
pushl
jae
leave
adc
xor
push
sti
loop
imul
mov
push
xchg
leave
fldl
data16
cmp
imul
test
dec
sbb
test
inc
and
imul
outsb
test
inc
xor
ficompl
push
out
ja
test
mov
add
mov
jae
jno
mov
hlt
or
addb
xchg
jg
jo
dec
xchg
push
sub
fnstenv
add
inc
into
fstpt
push
mov
fmul
sub
and
cwtl
les
mov
cmc
or
stc
in
cwtl
cli
sub
sbb
and
fiaddl
inc
xor
xor
call
and
in
popl
fldl
inc
cmc
push
mov
sub
xchg
mov
mov
mov
aad
fsubp
mov
sti
add
sbb
or
or
sbb
pop
mov
icebp
push
out
psadbw
sahf
and
cmp
jge
xchg
rcll
or
das
xchg
cmp
mov
push
mov
push
dec
mov
xorb
and
out
inc
lret
inc
cmpsb
mov
pop
jne
lds
sub
out
adc
cli
sub
push
pop
add
gs
xor
push
inc
push
xchg
int
nop
adc
lcall
enter
pop
sub
add
adc
adc
movsl
movsl
mov
push
push
pop
or
hlt
hlt
clc
mov
out
data16
js
imul
dec
fwait
in
adc
adc
inc
and
pop
lds
dec
imul
arpl
push
sbb
pop
or
stos
cmp
jg
xor
fwait
pusha
xor
pop
mov
sbbb
cmpb
cmp
inc
mov
xor
adc
add
sbb
mov
notl
lea
xor
mov
mov
add
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
movl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
and
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
addl
mov
sub
xor
add
add
neg
mov
mov
movzwl
sbb
mov
movl
mov
mov
orl
mov
addl
movzwl
add
movl
mov
jmp
jbe
dec
sahf
jb
jbe
xor
popa
and
mov
jo
xchg
jg
jo
push
scas
leave
mov
mov
inc
pop
or
push
cmp
or
cld
sub
gs
daa
pop
xchg
cmc
sbb
xchg
xor
stos
imul
mov
lods
arpl
outsb
mov
push
in
shlb
pop
stos
in
test
sarb
fs
xchg
es
push
adc
lret
iret
push
push
mov
sub
inc
in
outsl
je
jg
sub
icebp
mov
push
xchg
lods
cmp
mov
repz
nop
std
and
adc
in
das
adc
cmp
aam
mov
mov
xor
popf
xor
and
inc
clc
movsb
loop
insl
cmp
or
shlb
mov
lret
addr16
sbbl
dec
fadd
lahf
shll
xchg
push
jle
xlat
mov
xchg
movsb
rolb
pop
dec
mov
fdivl
arpl
leave
cmp
jecxz
adc
fmull
xor
add
push
push
add
sub
or
inc
rorb
ljmp
std
adc
or
inc
cmp
mov
mov
mov
fincstp
push
fidivl
jno
scas
adc
or
fs
mov
jl
aam
cmp
push
jns
scas
fstl
cmp
jp
adc
sbb
pcmpgtb
or
add
xchg
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
jmp
and
repnz
inc
std
int3
lcall
xchg
jg
jo
cs
les
inc
xchg
dec
movlps
or
jmp
loop
testb
les
mov
jb
xor
nop
clc
dec
outsl
icebp
cmpb
insb
xchg
and
mov
pop
cltd
loope
add
iret
cli
dec
jno
push
inc
adc
into
fwait
ds
dec
inc
imul
push
sub
ror
xor
bnd
inc
push
ja
dec
dec
test
jp
out
xchg
mov
jno
nop
jnp
in
mov
jle
and
xor
lea
adc
out
fsubrl
cmc
dec
push
arpl
andb
cmp
cmpsb
dec
push
ljmp
cmp
mov
mov
and
or
hlt
add
mov
push
rorb
pop
adc
or
das
or
jae
push
ljmp
sbb
mov
sub
or
xchg
add
adc
mov
mov
mov
pop
jno
loopne
xchg
imul
and
jge
adc
rcrb
push
loopne
insl
dec
pusha
inc
sub
hlt
stos
in
or
inc
mov
hlt
sub
sub
and
sub
pop
cmp
jne
decb
jg
mov
icebp
jmp
cmpsl
cwtl
xchg
je
or
jle
aam
aaa
dec
push
shr
push
sbb
inc
dec
shll
mov
pop
pmaxsw
push
data16
xchg
and
push
out
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
jmp
icebp
in
popf
adc
xchg
cld
insl
mov
fisubrl
inc
ljmp
jo
jecxz
sahf
movsb
xchg
and
push
sub
pop
lahf
mov
fldcw
jg
testl
xor
pop
ljmp
mov
or
mov
push
sbb
xchg
mov
imul
sub
lea
jp
pop
andl
add
mov
std
test
mov
cmp
into
push
cwtl
xlat
lret
pop
mov
jne
sbb
aaa
call
in
lods
js
xor
push
sbb
or
fsts
mov
insb
mov
dec
cmpsb
push
push
xor
jmp
pop
add
xchg
popf
jle
or
jb
enter
jno
out
push
das
push
xor
jno
scas
dec
and
pop
mov
movsb
iret
lret
adcl
ret
mov
inc
scas
add
ret
mov
or
in
test
lcall
fs
push
rcr
add
mov
sbb
imul
roll
data16
lods
cmp
push
mov
mov
sub
or
pop
fucom
not
jns
push
fisttps
cmpb
cmp
fmul
movb
mov
push
inc
cmp
sarl
inc
sbb
mov
jnp
sub
shlb
cwtl
inc
popa
int
fdivrp
mov
mov
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
jmp
iret
dec
mov
mov
icebp
dec
dec
int
dec
or
jo
xchg
jg
jo
popf
xor
mov
dec
sub
fs
les
sbb
cmp
dec
or
lcall
lahf
sub
outsl
sbb
mov
lea
inc
pop
stos
push
pushf
bound
fwait
add
sub
jne
pop
insl
dec
jmp
lock
lea
sbb
pushf
sub
jmp
out
cmpsl
jo
cli
mov
dec
xor
cmc
push
sbb
fsts
inc
arpl
testl
pop
sub
mov
cmp
mov
pop
call
movsl
push
dec
call
loop
ret
or
sahf
inc
gs
mov
sub
fisubl
call
mov
test
fsubrp
xor
ret
push
aad
mov
inc
aad
js
inc
xchg
out
in
adc
divl
ds
stos
xor
std
and
frstor
mov
sbb
mov
mov
arpl
jl
in
frstor
scas
mov
push
mov
xor
dec
rcll
repz
jns
xchg
ret
pop
mov
dec
sbb
aas
xchg
lea
jnp
movsb
xor
iret
mov
mov
jns
dec
pop
adcl
ljmp
jo
popf
fisttpll
pop
and
xor
inc
push
imulb
ret
jnp
pop
cmpsb
jp
inc
sub
push
fs
scas
pop
outsl
pop
pop
insl
ret
adc
int3
cmp
test
fsubr
mov
add
mov
icebp
in
icebp
mov
push
inc
ds
jo
jo
xchg
jg
jo
jl
clc
mov
pop
scas
les
xchg
xchg
xor
out
xchg
push
int
inc
shlb
mov
and
aas
dec
lods
out
adc
dec
add
and
adc
dec
push
xchg
dec
sub
lea
bswap
xchg
sbb
jecxz
stos
cmp
mov
mov
inc
leave
add
sbb
test
test
push
sahf
dec
pminub
ljmp
rorb
pop
loopne
push
out
mov
sahf
repz
sbb
sbb
sub
es
sti
lcall
int3
sti
xchg
ljmp
mov
jno
jne
jp
out
and
aaa
and
mov
xor
pop
cmc
cld
in
push
cs
mov
jmp
fsubs
in
sti
jbe
or
andl
cli
xchg
loopne
lods
add
inc
sub
pop
push
popa
pop
es
mov
repnz
lock
jg
mov
push
jb
scas
mov
sub
out
rcrb
add
pusha
loop
je
lods
pop
mov
stos
xchg
xchg
sahf
orb
fsubrs
mov
stc
sbb
adc
addr16
and
mov
xor
cmp
mov
ficompl
pop
ret
inc
mov
add
sbb
sub
xchg
mov
cmp
int3
jl
and
inc
outsl
lds
and
pop
clc
int
roll
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
jmp
dec
push
sub
imul
mov
jo
jg
jo
pusha
adc
int3
sub
xchg
lret
lods
icebp
into
mov
adc
xchg
mov
adc
aaa
pop
xchg
sarl
xor
in
lods
lods
cmp
imul
mov
aas
into
aaa
test
lds
cli
hlt
bound
rcll
jmp
adc
mov
lock
iret
add
popf
jb
dec
push
roll
popa
add
add
loopne
or
movsl
adc
lock
push
pop
cmp
sahf
mov
jo
aam
adc
push
cmpsl
pusha
loop
sub
cld
sahf
or
mov
mov
hlt
sbb
outsb
pop
scas
shll
jmp
jl
mov
lods
jne
cli
push
add
sbbl
mov
push
rolb
aad
scas
xlat
cmp
ds
jne
jo
pop
jle
xchg
outsb
inc
icebp
or
movsb
xor
decl
and
push
jo
sub
test
and
arpl
cmp
sbb
add
pop
mov
mov
jge
pushf
sbb
adc
inc
push
push
sub
jmp
inc
outsl
stos
sbb
jp
aad
mov
lock
cmp
fadds
mov
loop
fs
sbb
jp
mov
pop
into
add
cmpsl
rorb
std
sub
pop
pop
add
fwait
je
jno
sub
test
adc
and
rol
cmp
sbb
push
push
cld
cmpsl
pop
or
lds
popf
shll
loop
pushf
rorb
mov
jmp
frndint
std
imul
mov
xor
and
jo
jg
jo
jo
es
mov
add
mov
std
add
out
lods
pop
in
xchg
pop
push
or
clc
mov
hlt
fidivl
cmpsb
inc
fidivrs
scas
push
dec
push
lea
push
sub
mov
pop
mov
push
out
and
push
rorl
dec
cmp
shrb
push
or
repnz
jmp
mov
xchg
loop
call
fnstcw
or
hlt
mov
fistl
mov
inc
in
imul
xchg
popa
scas
int
movsb
andb
das
adc
cld
push
adc
mov
fnstcw
cmp
xchg
aas
test
add
cltd
out
cmp
cwtl
jecxz
xchg
daa
cld
inc
or
iret
xchg
rcl
cmp
daa
jbe
xor
ret
mov
in
mov
nop
mov
repz
mov
xor
rol
cmp
sbb
icebp
enter
jg
fs
mov
cmpsb
adcb
inc
mov
dec
push
js
mov
adc
mov
fdivr
xor
stos
inc
rclb
sub
in
mov
push
xchg
or
shrl
dec
test
ja
mov
fcoml
bound
out
and
ret
ljmp
adc
mov
scas
into
mov
out
inc
or
test
adc
cltd
js
stos
mov
cmp
mov
add
loop
mov
decb
aad
add
in
loop
add
jmp
hlt
sbb
rep
cmp
aaa
sbb
xchg
jg
jo
lea
les
aas
std
push
or
outsb
xor
loopne
xorb
xor
jnp
fbld
xchg
cmp
test
jae
xchg
nop
pop
mov
mov
mov
lods
add
mov
xchg
out
mov
pushf
popf
test
add
push
aam
mov
jge
mov
fisubl
out
cmpsl
mov
sbb
sub
adc
popa
jge
jns
xchg
popa
mov
push
ss
sub
mov
addr16
sarb
arpl
push
mov
or
mov
rclb
sbb
jns
fstpl
xchg
push
test
ja
mov
aad
stc
andl
out
lods
shlb
dec
pop
int3
pushf
push
push
adc
insb
sub
fisttpl
mov
cmp
data16
pusha
cmpsl
out
fldt
push
mov
xchg
les
and
decl
jnp
mov
pop
lret
inc
lods
filds
ds
and
dec
and
test
cmp
cmp
ljmp
in
lock
mov
iret
sbb
dec
test
jne
mov
loope
addl
outsl
cltd
xor
je
xchg
std
cmp
loope
mov
dec
es
stos
jns
ficoms
sbb
mov
or
sub
mov
sub
iret
mulb
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
jmp
lret
icebp
dec
cmp
adc
lock
xchg
jg
jo
sarl
push
inc
insb
xchg
loop
mov
push
and
pop
scas
pop
ss
xchg
pop
adc
mov
and
mov
iret
out
ds
aad
mov
xor
movsb
xchg
xor
pusha
ljmp
or
xlat
add
mov
sbb
xchg
fidivl
and
cmc
xchg
inc
mov
or
std
adc
sub
insb
fldt
or
or
fidivl
loopne
les
movsl
jns
icebp
push
adc
push
and
je
leave
pusha
xlat
fisubrs
mov
test
cmpsl
jnp
fimull
ficompl
outsb
sbb
mov
pop
push
clc
mov
movsb
movsb
sbb
dec
enter
sti
pop
mov
into
leave
cmp
xchg
and
and
pushf
subl
mov
popf
ljmp
xorl
push
outsl
add
pop
ljmp
pop
mov
aad
push
cmp
mov
test
das
ret
mov
filds
pop
scas
mov
lahf
lock
cmc
jmp
rcrb
in
mov
ss
jecxz
insl
arpl
mov
and
fildll
xor
and
add
out
jge
ljmp
cwtl
mov
imul
cmp
shll
jnp
mov
cmpsb
andb
imul
enter
inc
or
jne
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
push
sbb
movl
sbb
mov
orl
jmp
push
mov
xor
je
stos
aas
lods
and
jns
jo
jb
jo
adc
int
push
push
sbb
pop
and
add
es
sub
add
jg
popf
aas
mov
adc
mov
cli
fs
sahf
mov
sub
lret
xchg
hlt
dec
adc
pop
push
cmp
stos
xchg
daa
test
adcl
cmp
popf
into
dec
popf
aad
ret
js
out
cwtl
test
movb
pop
aad
repz
jmp
cmc
aam
imul
bound
adc
jbe
scas
insb
aas
push
sbb
pop
cmpsl
std
out
daa
inc
jnp
jns
sbb
mov
lret
out
pop
jbe
lret
int
movsl
pop
sub
cmp
push
sti
stc
repnz
sub
add
adc
sub
sbb
xchg
in
or
jmp
xchg
xchg
sub
mov
aas
jmp
out
cmp
mov
leave
mov
movsb
std
test
sbb
adc
mov
pop
add
inc
fdivr
daa
nop
jbe
inc
adc
cmp
mul
addr16
addr16
cmp
enter
mov
rorb
push
pusha
ja
adc
enter
hlt
xor
stos
xor
mov
ror
addl
dec
lods
subb
xchg
xor
and
add
fidivrl
xchg
cmpsl
bound
jns
into
push
jo
xor
mov
or
aad
repz
into
popf
mov
jnp
shll
aam
orl
adc
in
jo
xorb
push
and
push
mov
mov
inc
into
push
push
xchg
ss
cmp
pop
mov
sbb
cmp
sarl
push
or
mov
add
andl
xor
cmp
movl
jne
mov
mov
movzbl
xor
mov
add
xor
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
call
cmpl
jb
xor
push
jmp
je
test
pop
pop
or
add
jo
jb
jo
stos
insl
arpl
sbb
push
call
enter
sarl
push
test
push
iret
loop
ds
pushf
xchg
or
out
das
mov
xor
and
arpl
jne
fwait
divl
lods
xchg
popf
push
and
xor
cmpsb
mov
xor
les
out
adc
lods
push
outsl
fistpll
ds
rcrl
mov
mov
pop
lods
loop
sbbl
mov
loop
cmc
push
or
mov
aam
ds
scas
cmc
dec
lcall
xchg
sti
jl
test
rorl
sub
and
xchg
mov
loopne
je
adc
mov
push
pop
hlt
xchg
test
movsl
jmp
out
std
ss
lods
mov
imull
stc
daa
pushf
sub
popf
sub
in
mov
push
inc
sahf
and
insb
test
mov
mov
jecxz
add
call
or
jb
test
je
adc
stc
out
mov
adc
rorb
push
pusha
adc
aad
mov
sub
jmp
inc
dec
cmp
xchg
sti
out
mov
out
fwait
push
jmp
mov
xchg
stos
mov
cli
jne
dec
push
dec
cmp
lcall
push
movsl
stos
lret
daa
loopne
xchg
jge
mov
sbb
test
pop
pop
lret
outsb
idivb
pop
push
sbb
pop
aaa
or
jbe
xor
inc
xor
mov
mov
adc
push
xor
lds
inc
push
mov
enter
mov
or
test
jns
sub
rclb
mov
cwtl
mov
jb
add
shr
add
add
cmpsl
push
in
gs
arpl
dec
mov
jb
jo
mov
jmp
sbb
mov
adc
jbe
lahf
cltd
cli
sarb
jl
out
in
mov
or
jle
fnstenv
popa
or
or
out
pop
inc
mov
mov
pop
jp
into
data16
mov
sub
imul
xchg
arpl
out
xlat
imul
xchg
dec
mov
enter
xchg
and
add
jns
aaa
lock
mov
test
mov
push
xchg
mov
gs
xlat
jl
mov
scas
movsb
mov
jg
mov
aam
mov
mov
mov
mov
dec
and
stos
es
jg
pushl
jge
add
xchg
add
xor
jecxz
aad
and
inc
push
ret
outsb
pushf
inc
repz
je
cmp
aam
andb
mov
jbe
add
mov
xor
xchg
shll
into
dec
ret
adc
adc
out
mov
xor
pop
push
xchg
mov
jp
push
movsl
sbb
cmp
imull
and
pop
inc
pop
clc
mov
incl
sbb
addr16
add
mov
xchg
dec
mov
fidivl
mov
neg
popf
in
push
sbb
jo
push
fwait
mov
out
out
xchg
push
out
xchg
dec
jp
sarl
lock
xor
dec
mov
sub
jns
icebp
data16
mov
mov
movsl
push
loope
bound
test
or
dec
xchg
fs
in
ret
nop
sub
sbb
mov
movb
sbb
jcxz
pusha
fnstsw
mov
sub
sbb
push
jp,pt
inc
jns
sbb
stc
and
push
jp
pop
stc
repz
stos
dec
xchg
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
jmp
or
scas
shll
jb
loop
and
jo
jg
jo
mov
sbb
inc
and
stos
ret
in
sbb
decl
push
lret
ret
arpl
cmc
cmpsl
das
jmp
iret
ljmp
fnsave
popa
test
push
cld
leave
xor
loopne
jg
jnp
clc
mov
lret
out
outsl
xchg
xchg
bnd
sub
popf
cli
in
dec
repz
lret
leave
mov
shll
and
dec
mul
inc
mov
ret
xlat
xchg
loope
jne
inc
lret
inc
push
cmp
xchg
cmp
into
lahf
clc
or
out
fnstenv
mov
in
cmp
ja
sbb
push
jmp
push
subb
and
clc
jle
pop
mov
std
rcrb
outsl
mov
push
inc
add
test
adcl
mov
into
icebp
sbb
gs
inc
pop
adc
imul
out
jl
pop
or
pop
mov
das
imul
mov
jle
lret
jo
in
cmpl
nop
sahf
fdivs
sar
adc
jns
cmpsb
jo
ja
mov
cwtl
lcall
fwait
lret
test
test
dec
mov
nop
mov
push
cmp
inc
icebp
xlat
or
xchg
rcrl
das
xor
cmp
fildl
adcl
add
inc
xchg
out
pop
mov
fimuls
lcall
jb
sti
pop
decl
push
rcrl
mov
sub
jle
out
mov
jg
inc
test
push
adc
cmpsb
pop
adc
push
aam
mov
push
pusha
sub
mov
outsl
and
fisttpll
xchg
imul
dec
test
dec
xchg
mov
arpl
fdivrs
mov
lret
jo
mov
mov
js
dec
gs
enter
call
add
mov
repnz
jmp
jnp
xchg
les
sub
pushf
cmpsl
lret
push
jno
jo
jb
jo
sbbb
push
jmp
loopne
xor
mov
push
cs
dec
enter
test
test
ret
aad
adc
push
sub
aaa
jno
imul
jmp
jmp
int
mov
loopne
nop
sub
xor
dec
scas
xchg
fisubs
mov
rorb
sub
jb
dec
and
imul
sub
mov
arpl
inc
cwtl
cmc
and
int
fldl
or
push
in
aaa
orb
add
add
in
lock
cmc
jp
ljmp
lock
xorl
pop
sub
pop
nop
or
movsl
pop
jmp
movsb
adc
xchg
xchg
xchg
pop
or
data16
repz
dec
or
lea
inc
arpl
push
arpl
sub
jnp
mov
xchg
xor
push
jecxz
loopne
outsb
lods
dec
add
mov
fsubs
inc
imul
sahf
mov
xlat
mov
cmp
mov
in
xchg
or
loope
mov
mov
scas
flds
es
pop
push
adc
std
xchg
inc
pop
lcall
js
es
lds
add
xor
cmpsl
das
loope
dec
shl
out
shll
sub
cmp
mov
push
push
pop
mov
arpl
inc
pop
imull
pop
or
add
ds
test
stos
xlat
lcall
mov
push
adc
into
out
leave
jle
stc
faddp
mov
iret
sub
popa
pushf
sbb
xchg
sbb
and
int3
in
xor
push
cmpsb
mov
fstps
mov
xchg
xor
mov
mov
add
ret
push
mov
mov
mov
and
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
push
mov
xor
cmp
je
mov
mov
sub
xor
jmp
xchg
roll
icebp
lods
add
shll
jb
test
leave
jle
jo
jg
test
jl
imul
jg
insl
fcoml
and
pop
int3
enter
stos
push
sub
sub
inc
stos
out
shll
dec
aam
fisttpl
push
mov
or
jns
and
fdivl
inc
int
and
add
cli
jmp
dec
mov
inc
pop
test
jecxz
mov
xor
mov
int3
out
gs
stos
or
push
lcall
push
cli
es
cmp
xor
inc
addr16
cmpsb
rorb
ljmp
fst
sbb
mov
lock
jp
sbb
jecxz
lds
add
stc
add
lret
jle
xor
sbb
jae
pop
or
sub
push
cli
pop
stos
jnp
jnp
jnp
stos
movq
dec
add
repz
cmp
roll
int
aam
outsb
sub
movsb
jno
sbb
add
xor
data16
movsl
orl
sub
push
xchg
pusha
shll
adc
jns
es
mov
sub
dec
lods
das
sub
add
inc
inc
fidivrl
pop
push
mov
mov
imul
lret
or
clc
lock
in
stc
scas
mov
fwait
pop
mov
imul
imul
test
clc
pop
sbb
sti
leave
jge
push
cmpsb
mov
fwait
inc
addr16
cmc
sbb
icebp
data16
into
cmp
ret
push
adc
inc
test
jne
fldz
xchg
leave
sti
cltd
adc
out
movsb
fistpll
adc
test
xorb
mov
sbb
rcrl
cli
ret
push
push
out
pop
cs
call
in
fnstenv
mov
cmp
or
mov
pop
inc
das
xchg
pop
cmp
in
repz
mov
fisubl
sbb
mov
nop
fistps
and
mov
dec
add
cmp
outsb
jg
adc
rorl
adc
xchg
mov
incb
mov
or
pop
jb
cmp
push
lret
std
aaa
xor
jne
mov
add
jmp
mov
xor
jmp
pop
scas
sbb
push
pop
mov
pop
and
movsl
int3
xorb
jle
jo
imul
insb
pop
inc
and
out
outsb
addb
inc
mov
adc
adc
xchg
add
int
jns
fisttpll
add
dec
out
push
push
daa
mov
hlt
jbe
inc
es
and
or
insl
popa
xlat
mov
cld
shr
cmp
sbb
push
xchg
adc
loopne
mov
or
stos
out
in
jecxz
mov
xor
sub
test
pop
fdivr
and
cmp
out
lea
je
fisubrl
mov
xchg
push
xchg
mov
int3
mov
out
outsb
iret
out
xchg
sti
mov
dec
repz
data16
aaa
mov
je
icebp
movsb
cmpsl
mov
adc
mov
movsl
aas
cmp
or
out
push
lahf
add
insl
pop
sahf
jno
dec
mov
inc
and
cmc
adc
push
add
xchg
cmpsl
movsl
fdivrs
adc
shrl
std
pop
fcoms
popf
enter
fisttps
xchg
inc
in
shrl
in
ret
outsl
test
mov
out
repnz
stc
cli
jae
pop
cld
xor
int3
push
call
gs
sahf
loopne
pop
xchg
repz
adc
mov
pop
add
arpl
popa
mov
xchg
push
mov
jp
imul
push
jl
push
fcmovnu
push
xchg
pop
push
stc
std
and
dec
jp
lret
mov
cs
add
dec
nop
sbb
jle
jl
addb
sub
icebp
fs
fidivrs
fcmove
jl
jecxz
xor
sbb
adc
cmc
sub
xchg
stos
aad
in
jg
pop
movsl
mov
sbb
loop
xor
out
jl
xor
js
sub
inc
mov
and
adc
sbb
gs
repnz
andb
mov
jae
es
icebp
pusha
dec
fistpll
dec
and
mov
lods
js
lret
dec
lods
hlt
and
scas
int3
faddl
sbb
addr16
lea
out
fistpl
clc
adc
add
sub
jmp
ja
and
dec
xchg
das
dec
movsl
xorb
jle
jo
inc
data16
push
mov
lods
pop
negb
jecxz
mov
ss
shl
bound
dec
in
mov
sbb
cmp
test
or
push
add
iret
out
add
fsubl
icebp
popa
xor
outsl
and
mov
dec
add
outsb
cmp
enter
jns
mov
jns
std
jo
jnp
inc
or
pop
mov
mov
subl
or
pop
out
push
add
sbb
or
sarb
mov
pop
cmp
sbb
xchg
sub
xor
adc
inc
adcb
xor
aam
sub
sbb
jbe
cld
sbb
stos
mov
cmovbe
xlat
test
imul
mov
imul
stos
es
lcall
addr16
xorps
xchg
out
and
jmp
jge
cmp
xchg
clc
bound
xor
jb
push
cmp
push
cmp
scas
out
mov
jae
fiadds
cmpl
arpl
ja
push
ja
mov
xor
lods
pusha
xchg
fdivl
xchg
repnz
jne
ficompl
mov
jno
dec
daa
mov
sbb
hlt
sbb
jl
popf
fst
adc
pop
jp
es
mov
mov
add
dec
cmp
out
add
jmp
pop
xor
push
std
imul
aaa
xchg
lahf
out
ds
cmp
nop
push
xor
mov
push
sti
pushw
rcrb
jae
xchg
xchg
leave
ret
or
sub
xchg
xchg
fsubl
out
mov
pusha
ja
je
pusha
movsl
pop
test
add
divb
or
or
mov
inc
test
mov
into
fisttps
mov
pop
mov
push
xchg
mov
cmp
xlat
ljmp
decb
push
fdivs
lock
fsubr
nop
fisttps
cmp
mov
inc
xchg
outsb
add
xor
sub
jp
add
cld
insb
scas
mov
mov
mov
rorl
dec
or
daa
inc
mov
call
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
movl
mov
mov
sub
and
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
xor
xor
xor
add
sub
imul
mov
addl
push
mov
sbb
xor
sbb
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
sub
mov
mov
sbbl
push
adcl
push
adcl
test
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
pushl
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
notl
mov
neg
mov
movzwl
add
mov
imul
jmp
xchg
imul
push
outsb
jle
jo
dec
jge
jo
imul
lcall
jp
std
mov
xlat
movsl
mov
movsb
imul
or
mov
pop
mov
fiadds
decl
je
inc
popf
xlat
lret
xor
aaa
out
in
xor
fstl
imul
add
repnz
cmpsl
inc
aas
sub
push
add
repz
push
mov
fisubrs
cmpsl
dec
pop
push
es
addr16
lret
inc
ficomps
pop
add
pop
push
test
xchg
in
mov
sbb
sub
jmp
pop
imul
insb
in
jae
sub
sub
shrl
es
in
push
cmp
xlat
loop
inc
pop
cmp
rcrb
in
jae
adc
je
push
daa
pop
pop
int
fstps
jbe
stos
std
leave
mov
mov
xchg
cmp
aad
bound
lds
loopne
rorl
sbb
mov
fsubs
or
clc
lods
in
in
shll
fistpll
sbb
xchg
fstl
mov
pop
and
subl
mov
push
lcall
jge
xor
mov
inc
push
jnp
adc
ds
repz
je
pop
jecxz
push
je
mov
inc
push
rol
sarl
mov
sarl
je
or
jns
mov
lret
aaa
out
xchg
loopne
scas
pop
enter
push
mov
xor
mov
xchg
scas
fdivs
mov
xchg
popa
icebp
je
pop
inc
out
inc
inc
push
xchg
add
add
data16
test
jo
outsb
push
js
scas
std
clc
arpl
into
inc
jg
jns
sbbb
inc
mov
push
test
int3
fimuls
cmp
fstl
andl
divl
add
jmp
fisubrl
pusha
movb
jb
or
icebp
push
jle
add
sbb
jb
lahf
fiaddl
pop
mov
insl
xchg
lods
popa
sub
loop
mov
fcompl
lret
sbb
scas
cmp
inc
jae
pop
ret
popf
sub
pop
cmp
mov
cltd
cld
sub
mov
mov
pop
in
rcl
mov
jg
mov
xchg
repz
cmp
mov
cmc
paddsw
adc
dec
jl
ja
or
aam
and
jo
aaa
in
cli
pop
insb
sub
imul
lahf
xorb
sub
add
jae
mov
fwait
dec
not
inc
pop
jmp
js
mov
mov
cmp
jnp
sbb
out
adc
sbb
out
imull
cmc
cmpsl
sub
sbb
les
pop
sub
mov
sbb
aam
cmp
inc
cmp
cmc
shl
test
scas
lcall
das
sti
xchg
shlb
inc
jbe
or
out
movsl
xchg
cld
jg
inc
push
inc
jp
xlat
hlt
pop
or
psrlq
dec
cmpsb
dec
mul
or
dec
jmp
mov
jb
push
mov
ret
out
test
xor
rolb
jns
adc
adc
pop
pop
jecxz
jge
sbb
add
or
pop
adc
mov
dec
add
xchg
ret
inc
push
mov
lods
sub
pop
insb
testl
pop
pop
sub
fisttps
cmp
add
test
pop
push
ss
addr16
inc
pop
test
loope
xchg
rol
popf
inc
inc
insl
jge
mov
inc
pop
repz
jae
add
add
not
mov
or
mov
subl
xchg
sub
xorl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
orl
mov
adcl
jmp
addr16
ss
ja
or
in
out
sub
push
mov
dec
jge
jo
inc
pusha
data16
mov
mov
aad
pop
jae
add
jg
jnp
and
out
js
push
adcl
pop
ss
fstp
mov
mov
pop
fdivrl
cld
insb
xor
push
lahf
inc
adc
outsl
push
push
pop
bound
rclb
enter
jmp
cwtl
xor
adc
in
and
cmpsl
push
and
in
test
pop
push
and
shlb
mov
in
push
jns
lret
mov
sub
push
les
out
scas
jno
xchg
sub
xchg
cli
int
setb
loope
cmp
adc
jnp
std
add
inc
xchg
fwait
in
loope
inc
hlt
ja
adc
enter
mov
adc
pop
mov
les
xchg
lods
rcrl
inc
sbb
out
jmpw
or
pushw
out
int
repz
and
rcrl
dec
stos
xchg
xorb
movsl
push
mov
add
shlb
filds
out
out
bound
add
sub
push
aas
push
les
scas
inc
mov
add
xchg
shll
jge
aad
idivb
enter
loop
mov
sbb
push
ss
or
repz
adc
xor
pusha
pusha
inc
push
cmpsl
jbe
test
adc
ljmp
iret
inc
jmp
das
sahf
push
scas
pop
lret
loopne
in
sbb
pop
xchg
inc
jge
stc
ja
enter
mov
xchg
mov
pop
mov
mov
popf
scas
push
and
inc
popa
inc
jne
push
jbe
fstpt
and
fnstsw
sbb
gs
fisubs
pop
pmaxsw
out
lcall
lock
inc
mov
sbb
xchg
int3
in
and
cmp
fucom
xlat
xlat
sbb
fucomp
imull
out
or
push
inc
pop
mov
add
cmp
push
xor
sub
cmp
mov
push
mov
push
inc
adc
mov
lret
lods
cmpsb
mov
nop
andl
loope
js
dec
and
inc
add
inc
shll
cmc
fidivrs
imul
mov
dec
call
mov
mov
mov
xchg
xchg
cmp
rorl
and
xchg
add
mov
imul
push
xchg
fmull
inc
idivb
jge
jecxz
cmpsb
jmp
mov
dec
and
mov
xor
call
adc
dec
js
ljmp
inc
adc
pop
sahf
pushf
imul
lods
les
arpl
pop
icebp
das
mov
add
jge
lahf
add
sbb
jne
aaa
gs
aas
mov
sbb
gs
pusha
loope
jl
test
hlt
mov
mov
mov
push
gs
imul
lahf
push
mov
pop
lret
mov
mov
lcall
cmp
lret
cwtl
out
in
popa
pop
dec
add
mov
cmp
mov
mov
into
sub
jno
sub
or
js
std
jle
jns
adc
mov
xchg
xor
sbb
outsl
imul
pop
nop
mov
mov
inc
out
sbb
push
dec
jg
cmpsb
icebp
scas
sti
loop
xchg
jle
xor
sbb
daa
aaa
lock
cmpsl
pusha
jnp
repz
jl
sbb
mov
cmp
mov
daa
das
or
mov
mov
and
mov
andl
xor
jmp
mov
iret
mov
out
fs
addr16
mov
jge
jo
adc
mov
cmc
push
dec
loope
jg
iret
nop
aad
loop
cmp
or
mov
pop
xchg
fnstsw
jg
repz
inc
mov
and
subl
imul
shr
cld
lods
jl
mov
mov
stos
mov
mov
jmp
and
and
lock
mov
filds
cmpsb
pop
push
push
push
jge
movsb
push
imul
jmp
out
xchg
insb
scas
xlat
lahf
fwait
xor
outsb
mov
cmp
push
adc
cs
enter
xchg
test
mov
pop
xchg
pop
xchg
pushf
adc
push
xchg
enter
sbbb
sbbl
dec
mov
jbe
movsb
mov
leave
and
rcrb
adc
ljmp
xlat
or
popf
into
add
jg
scas
push
or
test
xchg
pushf
shr
imul
jae
cmp
sbb
push
sub
xchg
jo
push
xor
xor
leave
les
psrad
xor
jo
aad
pop
ja
outsb
cmp
lret
in
inc
xor
fadd
ja
adc
bound
xchg
stos
aam
pop
pushf
lahf
mov
ret
enter
pushf
adc
sub
das
jp
push
xchg
mov
push
pop
sbb
adc
sub
fmull
call
loop
imul
scas
pushf
rolb
jb
lret
mov
jb
movsb
outsl
pop
out
inc
pop
or
out
and
out
pop
mov
in
ds
gs
or
and
sbb
sar
push
push
mov
es
xchg
test
movsl
aaa
repnz
lods
dec
adc
call
push
pop
xchg
subl
ss
insb
mov
fdivl
bound
data16
rorb
cltd
sti
sbb
out
nop
fwait
inc
mov
sbbb
mov
pop
fnstenv
fucom
xor
mov
pop
orl
mov
xchg
or
mov
jo
sub
test
adc
and
or
pop
add
sub
scas
test
shll
mov
sbbb
mov
getsec
andps
mov
sbb
adc
popa
dec
add
out
stos
rcll
es
cmp
aam
notb
rcll
orl
cmp
loopne
jne
mov
jno
ret
das
push
or
fs
sub
mov
push
arpl
xchg
jl
inc
dec
or
sti
mov
movsl
pop
xchg
and
mul
aad
xor
jne
dec
and
addr16
mov
movups
dec
fs
std
cld
or
xchg
cmp
inc
sbb
call
add
jg,pn
and
cmpsl
fwait
mov
pop
push
push
xchg
cwtl
push
movsl
xchg
imul
lret
hlt
lea
enter
xor
stos
pop
push
push
add
add
push
inc
gs
rorl
out
and
mov
jb
mov
aam
mov
xchg
mov
adc
and
cmpsb
xchg
inc
cmp
inc
push
gs
mov
sarl
mov
dec
arpl
adc
pop
lcall
push
jno
mov
dec
std
hlt
push
sbb
lcall
stos
shll
fs
mov
xchg
or
lds
xchg
pop
and
jae
xor
add
mov
mov
mov
jmp
xlat
frstor
pop
testl
sahf
mov
xchg
jo
dec
jge
jo
movsb
xor
dec
aam
adc
mov
pop
inc
fisttpll
or
pusha
ss
cmp
jl
inc
xchg
invd
mov
aas
xchg
test
cwtl
out
nop
imul
sub
mov
mov
mov
out
lea
cmpsl
test
mov
mov
outsl
sahf
dec
pop
fdivr
fimull
push
mov
cmpsl
pop
dec
xor
dec
push
sub
push
push
push
icebp
add
cs
cmp
rorb
or
fsubrl
push
jno
mov
jo
xchg
mov
jl
shlb
mov
out
push
icebp
loop
lret
sub
mov
inc
daa
iret
enter
sub
jmp
ret
hlt
orb
cmc
adcb
push
outsl
adc
div
push
dec
adc
pop
jae
ljmp
cmc
add
xchg
inc
cmp
pop
movl
pop
cmp
lock
int3
mov
loop
shl
lret
xor
mov
imul
insb
pop
cli
push
inc
add
xchg
dec
sbb
xchg
jno
jo
adc
les
shr
mov
lret
pusha
outsl
ljmp
or
jmp
sbb
xlat
jp
jb
mov
xor
lret
add
pop
repnz
call
shl
popf
dec
popa
lods
loopne
je
pop
xchg
outsl
sbb
daa
fsubrl
mov
sbbb
stc
ret
int
xchg
std
sub
es
pop
inc
adc
movsb
and
popf
bound
jns
fdivr
ja
jmp
mov
jge
outsb
mov
adc
jle
push
inc
sbb
sub
cltd
jl
adc
test
mov
ss
xchg
mov
imull
or
ljmp
lea
xchg
xor
adc
xchg
pop
movsb
aas
adc
in
add
jmp
sti
dec
test
int3
xchg
mov
movsb
lock
cmp
push
out
jb
shlb
cmp
mov
cmp
int
push
xchg
fistpl
inc
fmuls
mov
in
test
cmpsb
lret
add
out
inc
out
add
sbb
mov
ret
scas
lret
jns
leave
sbb
pop
xor
jo
xchg
std
push
push
rorl
mov
or
or
notl
pop
les
xor
adc
push
stos
jo
dec
and
cmovne
std
pop
sbb
std
dec
xchg
xchg
movsl
aaa
dec
inc
xchg
mov
sub
mov
mov
lea
mov
or
xlat
jmp
fcoml
fisubrl
enter
push
cwtl
jbe
xchg
mov
fsubr
xor
inc
mov
mov
les
clc
sbb
push
lds
fisttpl
sbb
add
jno
jp
lcall
xchg
pop
subb
jo
cmp
scas
pop
shlb
rclb
imul
repz
fs
sbb
ss
dec
ss
push
cmp
jb
lahf
scas
sub
sub
fnsave
mov
std
cmc
and
sti
negb
lahf
xchg
mov
hlt
inc
xor
cld
inc
out
jp
pusha
inc
adc
leave
sub
andl
xchg
cmp
pop
xor
xchg
mov
push
jo
es
mov
mov
push
inc
and
cs
xchg
movsb
jl
in
nop
sub
test
sbb
add
mov
add
add
mov
orl
xor
add
movl
cmp
jne
pushl
adcl
call
mov
add
mov
jmp
fs
movsl
sbb
popa
push
negb
call
sahf
jo
dec
jge
jo
subb
dec
xchg
push
xor
out
mov
popa
mov
leave
pop
repnz
or
cmp
test
jbe
push
fninit
push
lret
loope
sbbb
arpl
test
cld
sbb
adc
outsl
sub
push
xchg
pop
insl
jns
es
pop
pop
sahf
pop
jmp
push
cs
in
repnz
cltd
fildll
aam
xlat
lahf
mov
xor
sti
aam
xchg
or
dec
jg
and
cs
fcomi
sbb
shll
cwtl
jl
or
mov
bound
pushf
mov
inc
cmp
xchg
insl
loope
xor
sbb
in
test
rcl
les
bound
jb
dec
ror
xchg
or
sbb
mov
je
movsl
loop
movsb
adc
add
jmp
lahf
xchg
stos
mov
add
adc
les
stc
add
or
push
js
pusha
jmp
sub
repnz
sbb
pop
and
sti
iret
xchg
or
pop
pushf
sbb
decb
dec
inc
insl
and
sahf
in
test
cli
cmp
loopne
loope
cli
jl
inc
push
das
xor
mov
imul
pop
aam
scas
jbe
pop
or
pop
cwtl
mov
add
adc
into
push
jmp
ja
dec
jnp
scas
sbb
dec
xlat
push
hlt
lret
pop
inc
shl
popa
mov
mov
mov
ss
push
stc
xchg
add
dec
insl
mov
test
mov
packssdw
sbb
out
mov
mov
sub
cwtl
clc
dec
add
lcall
inc
aam
fildl
fwait
add
lods
inc
std
inc
lods
pop
std
outsl
mov
cmpsb
mov
pop
fsubr
cld
mov
mov
cmp
or
jp
dec
push
stos
lods
dec
movsl
push
cmp
in
ret
ds
pushf
sub
and
cmp
mov
out
inc
dec
sub
push
cli
in
jo
nop
dec
and
loopne
movl
xchg
arpl
jl
inc
xchg
ret
sahf
push
dec
sub
mov
test
mov
les
inc
pop
lahf
xchg
or
cltd
sbb
inc
xchg
xor
clc
pop
sub
das
sub
hlt
pop
in
lock
adc
sub
fs
cmp
stos
aam
insl
sbb
sbb
ljmp
dec
cmp
pop
sub
std
gs
in
xlat
jmp
addb
and
imul
test
cmc
scas
pop
mov
das
je
fildl
dec
xchg
jecxz
inc
mov
inc
cs
mov
mov
cmpsb
fdivrs
movsb
and
and
je
pop
add
fsubrs
push
push
je
sbb
addb
push
jno
imul
pop
mov
dec
pop
nop
in
lret
mov
xor
insb
loope
mov
rcrb
inc
addr16
aam
faddl
adc
daa
or
adc
mov
push
cmp
pushf
dec
adcb
into
mov
daa
sbb
lcall
mov
cwtl
xchg
pop
inc
and
dec
fnstenv
xchg
fdivl
mov
jmp
push
mov
popa
inc
dec
inc
sub
cmp
enter
scas
xor
std
test
jae
mov
arpl
mov
jae
mov
mov
mov
sbb
daa
mov
mov
mov
mov
xor
mov
xorl
xor
add
movl
cmp
movl
je
pushl
adcl
pushl
call
jmp
ret
rcrb
popa
cltd
ret
xorw
fidivl
lcall
xchg
outsb
mov
imul
jecxz
mov
mov
scas
dec
gs
addb
mov
push
test
lret
js
xor
pop
inc
mov
loop
ss
adc
xor
push
repnz
adc
loopne
push
push
push
add
fcom
or
lret
inc
int
mov
jae
pop
stos
repz
mov
in
xorb
cmp
xchg
sahf
cmp
sbb
jmp
jmp
add
loop
mov
fcmovnb
dec
mov
pop
jo
mov
in
cli
out
mov
adc
sbb
pop
fcomip
fwait
push
sbb
jle
lods
dec
loopne
push
or
adc
mov
pop
push
sub
push
inc
xor
jge
mov
testb
jno
sbb
xchg
jmp
cmc
mov
dec
in
popa
or
push
es
je
pop
mov
xor
das
fcomps
daa
lods
and
lea
mov
call
std
shlb
js
xchg
jecxz
arpl
add
dec
pop
jnp
ret
jmp
xor
clc
cli
rorb
cltd
popf
fsub
push
adc
mov
sbb
in
or
push
cmc
sbb
mov
mov
mov
test
loop
or
xchg
mov
ljmp
push
lods
outsb
xchg
sub
xor
aam
pushf
gs
push
pop
jnp
jnp
mov
push
adc
and
cli
lods
adc
jbe
push
mov
sub
dec
lea
xor
sbb
jo
sbbb
les
scas
jg
mov
push
loope
not
dec
popa
mov
repz
cmp
iret
jge
rolb
jl
jg
aaa
mov
stos
pop
push
xlat
mov
pop
mov
xcrypt-ofb
cmpsl
imul
push
in
mov
mov
and
pop
cmp
std
push
in
fisttps
jg
cs
push
or
push
and
cmpsb
test
dec
and
sti
cmp
lds
push
rolb
in
ret
fwait
jno
loopne
lock
addr16
ret
loop
push
and
mov
inc
sub
insl
xchg
push
into
faddl
mov
aam
cmp
mov
push
cmp
mov
inc
lret
fadd
stos
cwtl
jle
dec
mov
sbb
adc
out
push
scas
data16
mov
jns
cmpsl
andl
fwait
lcall
call
ljmp
and
jae
lcall
jmp
pop
jge
mov
es
out
popa
aad
fidivs
fsubr
stos
push
push
cmp
mov
fdivrs
test
mov
aaa
and
dec
jecxz
adc
insl
lret
addr16
xor
lock
stos
pop
jge
push
and
stos
add
pop
cs
mov
sbb
inc
shl
fwait
aas
pop
inc
push
ljmp
xchg
fisttps
in
popf
jnp
fcom
xchg
adc
adc
hlt
cmpsl
stos
js
rclb
arpl
lock
mov
rcrl
mov
fadds
lret
stos
jg
ret
pusha
pushl
mov
sub
pop
test
pop
aaa
rcl
xchg
fidivs
jb
sbbl
mov
adc
cmp
add
aaa
xor
fs
xchg
out
fidivs
dec
lock
fildll
jo
lea
bound
jae
jb
add
and
ret
and
pop
sub
xor
movsb
ja
mov
inc
in
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
jmp
loopne
or
xor
in
rorb
cmp
inc
add
jo
dec
jge
jo
sahf
push
push
jae
cltd
jno
fcmovnu
add
out
fcom
int
mov
jecxz
insb
test
adc
add
clc
adc
push
fstps
std
cmp
sti
fwait
adc
dec
imul
mov
inc
xor
pop
mov
push
popf
fidivrs
shll
mov
add
sbb
mov
sub
hlt
push
sub
push
push
add
push
mov
loope
je
mov
enter
comiss
scas
testl
inc
xchg
jae
pop
sub
sbb
fsubs
mov
push
and
cmp
das
cltd
nop
clc
mov
hlt
push
xor
sbb
out
inc
and
adc
cmp
into
mov
ds
mov
cs
sbb
test
fsubrl
imul
pop
test
sub
jne
jmp
cli
in
das
imul
in
hlt
or
cmp
adc
mov
push
sub
cmpsl
ja
pop
push
dec
fdiv
push
xchg
push
pop
xchg
mov
loop
aaa
rcll
cmpsb
mov
fbstp
dec
xchg
shl
adc
sub
jne
sbb
mov
pop
sbb
sub
sbb
xchg
scas
imul
xchg
repnz
bnd
inc
shll
xchg
in
cs
in
dec
imul
dec
mov
jbe
arpl
jnp
mov
ret
cmp
clc
ret
movsb
into
or
mov
sub
sub
dec
jns
test
sahf
pop
sbb
mulb
aaa
cltd
adc
push
add
cli
xor
pop
daa
testb
repz
aaa
ds
mov
icebp
adc
arpl
inc
nop
pop
std
jge
idiv
in
mov
push
push
ret
in
shrb
in
add
inc
mov
xchg
xor
mov
mov
arpl
outsb
rcrb
shrl
push
lahf
int
jle
xchg
daa
xor
lods
xchg
outsl
mov
mov
pop
mov
xchg
inc
pop
xchg
mov
dec
loope
lcall
out
mov
sub
dec
cmp
dec
jo
xor
push
add
adc
add
cli
jb
xor
mov
cwtl
xor
loop
jae
jl
jne
jmp
pop
out
imul
jns
in
dec
aam
dec
xchg
adc
or
lds
int
push
test
or
pop
inc
xchg
mov
rcll
iret
scas
std
mov
mov
ss
and
jno
cmc
dec
inc
mov
xor
adc
shlb
cmp
cld
out
mov
lock
incl
jnp
mov
xchg
gs
dec
int3
test
ljmp
xor
shlb
inc
int
mov
fst
aad
add
out
shl
out
outsl
jecxz
push
cwtl
inc
cmc
mov
or
outsb
lods
cmp
sbb
mov
cmp
mov
mov
daa
pop
jae
shll
bound
cmp
sarb
sub
imul
or
cmc
aas
scas
movsl
jne
fisubrs
test
cmpsl
or
push
mov
cmpsl
mov
ja
push
aam
xchg
das
cwtl
add
fdivr
lret
jo
sbb
mov
sub
jno
enter
cmpsb
and
fcmovne
mov
push
shrl
call
and
dec
aam
inc
in
mov
add
jmp
inc
jae
pop
sub
jae
and
mov
mov
sbb
dec
jge
jo
sbb
and
inc
pusha
adc
dec
inc
xor
xchg
sub
rolb
cli
push
clc
adc
cs
ret
lret
repnz
enter
xchg
push
pop
mov
and
sub
push
mov
or
and
fistps
in
jle
lods
mov
imul
inc
into
std
popf
stos
mov
jae
inc
out
jp
mov
sub
sbb
sub
outsb
fwait
mov
in
mov
adc
sbb
mov
or
xchg
mov
dec
jae
jge
mov
loop
mov
insl
sbbb
sub
mov
add
gs
mov
ljmp
xor
xchg
pop
pushf
xchg
lods
mov
cmp
push
push
sub
inc
fstpl
pop
jbe
mov
test
lret
pusha
dec
dec
jl
cltd
fidivrl
add
cmp
jge
xchg
push
ja
add
cmp
push
movb
call
mov
sti
jno
cmpsl
jne
clc
jns
int
xchg
lcall
mov
cmc
sub
jge
jl
pop
or
leave
add
sbb
jge
mov
jle
or
adc
xchg
testb
lods
out
or
mov
iret
mov
rcrb
mov
out
mov
pop
jno
cmp
xor
lret
int3
dec
scas
rcll
mov
pop
fsts
negb
jg
push
ror
test
dec
dec
mov
jb
test
jo
mov
cwtl
outsl
sbb
icebp
outsl
call
inc
outsb
inc
idiv
xchg
dec
jmp
mov
cmp
push
cs
adc
pop
mov
leave
jnp
in
in
or
xlat
imul
and
sub
mov
xchg
lods
jle
call
ds
xchg
rcrl
jle
jg
mov
lcall
out
or
jge
int3
loop
aas
xchg
sub
inc
push
nop
xor
inc
insl
jmp
inc
mov
lcall
dec
dec
jbe
push
xchg
xchg
sahf
pop
lret
adc
ljmp
and
jecxz
inc
loop
dec
lods
mov
add
and
test
into
int3
loopne
subb
adc
subl
fwait
test
pop
adc
nop
test
aas
xchg
push
push
push
mov
test
mov
sbb
xchg
das
aam
push
out
sbb
stos
jg
adc
and
ljmp
adc
jmp
pop
dec
mov
jbe
imul
int
jno
add
and
cltd
mov
and
xor
jnp
test
or
jle
inc
mov
sarl
push
pop
mov
pop
xchg
dec
mov
sbb
mov
shl
cwtl
mov
jo
mov
mov
stc
cltd
loopne
sahf
add
sahf
push
adc
cmp
out
inc
adc
mov
int
mov
std
test
jmp
repz
fldlg2
jecxz
repnz
stos
ret
out
mov
and
fstl
lcall
pop
adc
add
mov
sbb
fs
push
jg
mov
pushf
jg
cmp
out
pop
sub
lret
shlb
aaa
das
mov
pop
rorl
aam
add
leave
repz
xor
sbb
jmp
cmp
lods
jnp
xor
xor
mov
mov
jmp
sbb
sarl
lahf
popa
sti
arpl
scas
jo
dec
jge
jo
mov
xor
lret
sarb
and
ffree
or
add
jae
inc
test
ja
and
dec
mov
or
and
scas
mov
es
push
popf
push
loop
mov
test
mov
popf
jbe
xchg
adc
aas
jmp
sub
scas
inc
mov
shl
dec
jle
push
lock
dec
or
lret
data16
jo
xacquire
push
aam
xchg
mov
pop
or
jmp
pop
cmp
mov
cmp
scas
pop
mov
xor
mov
xchg
rolb
cmpsb
and
inc
push
scas
xchg
mov
lods
mov
adc
push
pop
lock
xchg
sbb
in
sub
outsb
lock
lea
mov
mov
outsl
testb
imul
fwait
cltd
sbb
sbb
popa
jge
mov
mov
pop
cmc
test
in
imul
mov
cmp
dec
shll
sub
shl
or
mov
add
mov
out
sbb
adc
ret
jno
cltd
movsb
lods
xlat
jne
int3
mov
push
dec
cmp
sbb
pop
ficoml
pop
and
jge
pushf
adc
arpl
push
dec
adc
cltd
sti
icebp
rorb
sub
mov
cmp
jae
pop
pop
pop
sub
dec
sbb
cmp
int
pop
shlb
sar
inc
lock
dec
sub
cmpsb
aaa
sbb
sbb
faddp
test
imul
mov
add
dec
sbb
xlat
or
stos
xchg
pop
addr16
int
loopne
int
mov
movsl
test
fisttpll
push
in
in
and
jp
push
sub
mov
dec
outsb
or
adc
xchg
xchg
mov
pop
adc
jbe
aas
mov
std
es
jne
fisubl
jae
les
push
cmp
loopne
jle
in
xlat
int
call
pop
fidivrs
xor
inc
mov
mov
dec
pop
dec
or
jnp
push
and
add
mul
enter
cmp
sub
add
std
dec
xchg
xchg
ja
inc
sub
adc
sti
pop
mov
test
and
jb
or
dec
das
mov
std
xor
push
test
icebp
pop
sbb
and
add
lock
ja
lcall
adc
vmptrst
mov
arpl
cmc
in
ja
xor
inc
outsb
cltd
xor
add
icebp
pop
jge
adc
pop
dec
mov
xchg
shrb
sbb
jno
push
es
sbb
dec
or
or
in
cmp
jmp
insl
lret
mov
lock
and
jbe
dec
popa
gs
aad
sbb
dec
jno
mov
mov
pop
call
push
adc
sbbb
push
mov
add
outsb
enter
std
arpl
fildll
in
mov
mov
dec
movsb
pop
push
jbe
test
leave
push
mov
imull
lret
popf
and
imul
fs
pop
xchg
jae
shrl
mov
or
cmc
shr
jl
lcall
inc
push
sub
adc
lcall
adc
or
inc
adc
add
pop
cmpsb
dec
sub
popa
mov
mov
mov
nop
fs
lcall
or
dec
or
or
lea
mov
push
pushl
pushl
call
mov
mov
jmp
or
rcl
cmp
pop
jns
popa
enter
stos
jo
dec
jge
jo
fwait
mov
leave
mov
es
sbb
add
test
int
mov
add
and
loop
dec
push
adc
and
jne
imulb
sbb
jae
sti
sbb
out
std
hlt
pushf
mov
push
iret
rcr
clc
jbe
xchg
clc
js
mov
mov
shll
add
inc
jnp
imul
aaa
sbb
xchg
or
repnz
cltd
pop
repz
fsubrl
pop
in
iret
fisubl
cmp
lea
call
js
push
xor
ljmp
stc
or
aad
call
mov
jns
or
xchg
mov
jbe
mov
lds
imul
sbb
push
shrl
add
push
xchg
cmp
push
ret
lcall
dec
stc
or
adc
dec
sbb
int3
enter
dec
pusha
js
shlb
outsl
dec
jns
add
jns
lcall
sub
cs
scas
add
clc
addr16
and
add
push
or
sub
pusha
xchg
pop
cli
or
jp
out
jbe
data16
and
cli
popa
sbb
and
ret
fst
mov
cmp
mov
lock
ja
mov
scas
sbb
fstl
rolb
clc
cmp
dec
mov
push
mov
mov
jns
sub
mov
sub
xor
loope
sub
cmpsl
and
clc
xlat
mov
push
cwtl
aad
les
add
lods
fsubrs
push
jl
js
xchg
pop
aaa
jns
cmp
push
and
and
or
out
mov
int
jne
mov
stos
push
cltd
das
bound
adc
lods
push
push
mov
cmp
fdivl
sarl
pop
xor
shll
int
call
adc
sub
bound
incl
jo
xor
push
push
push
mov
jp
push
insl
mov
in
jmp
loope
pop
lock
faddl
hlt
mov
and
sub
loope
lcall
popa
add
xchg
pop
cld
mov
stos
fldcw
dec
es
rcl
jge
stc
dec
cmp
mov
enter
ds
mov
or
xchg
movd
icebp
mov
mov
jne
add
add
scas
loop
fnstenv
sti
push
dec
mov
popaw
pop
fs
cltd
sub
ljmp
int3
mov
xchg
dec
jne
dec
adc
jnp
loopne
icebp
sub
add
add
in
push
xchg
int3
push
nop
xor
test
out
dec
xlat
mov
mov
iret
lret
ret
mov
push
adc
cmp
xchg
push
pop
jnp
movsb
pop
add
test
and
dec
xlat
add
js
lahf
cwtl
and
dec
movl
cmp
dec
popa
mov
mov
push
jae
and
sbb
lret
xchg
addr16
push
shr
mov
popa
push
sbbl
int
xchg
stc
clc
scas
nop
aam
nop
lods
inc
add
les
and
cmpsb
ror
lea
adc
inc
sbb
ret
rol
cmp
mov
inc
cmp
lods
movsb
pop
and
xor
clc
mov
or
xchg
or
sub
push
daa
fs
or
mov
lret
in
setbe
fwait
pop
testb
lret
in
pop
loopne
lret
pop
sbb
jp
push
or
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
jmp
xlat
and
insb
push
aaa
pop
push
push
sahf
std
jbe
mov
mov
jo
jge
jo
add
mov
cmpsl
psrad
fwait
ljmp
dec
and
dec
jge
mov
movsb
imul
lock
xchg
cltd
push
ds
imul
and
mov
xor
cltd
cmp
jne
lds
es
sub
lret
dec
push
jp
in
cmp
fsubrl
mov
mov
cvtps2pd
jg
imul
gs
into
mov
mov
sbb
xchg
and
mov
dec
iret
rorl
dec
adc
testl
add
ja
add
test
loope
and
sub
shll
push
sbb
push
mov
mov
ret
or
sub
test
popa
repnz
imul
sub
and
xor
mov
xlat
hlt
test
mov
xchg
flds
and
movsb
cmp
xchg
int3
jmp
push
ja
jmp
push
adc
mov
cmp
loope
dec
push
les
xlat
mov
sbbb
cmc
rcr
movsb
bound
sub
cmp
enter
in
ret
cmpsb
xchg
cmp
push
inc
dec
jo
push
push
rcll
push
lods
mov
fisubrs
xor
jo
imull
xchg
aam
out
add
ret
adc
test
sub
shrl
adc
dec
dec
lock
mov
test
mov
gs
mov
idivl
mov
jp
lock
loope
inc
push
inc
sbb
cmc
push
cmp
into
mov
push
or
out
add
mov
xor
clc
fcmovnbe
pop
ljmp
lods
add
push
dec
jae
mov
inc
aas
jno,pt
sbb
loopne
inc
xor
ret
xlat
test
and
add
add
ret
sub
fisttpl
jne
popf
mov
xchg
dec
movsl
aad
mov
mov
pop
movsl
leave
lahf
lret
aaa
push
int3
pop
test
mov
or
in
jne
pop
and
cmp
push
jg
or
in
dec
mov
xchg
mov
inc
adc
and
lret
xchg
push
sar
fs
dec
mov
push
jecxz
outsl
aad
sub
shrb
add
int
sbbb
dec
outsl
repz
out
icebp
mov
and
mov
inc
fwait
jmp
je
mov
mov
dec
sahf
icebp
out
inc
mov
sbb
adc
mov
arpl
pop
inc
dec
fisubrs
add
mov
push
add
je
mov
shl
xchg
sbb
adc
mov
jge
mov
pop
enter
inc
xchg
or
push
xlat
mov
clc
mov
pop
sarl
inc
mov
xchg
mov
push
pop
test
and
daa
es
iret
rorl
enter
push
xor
mov
push
sub
shlb
cmpsb
lret
pop
sarb
mov
cli
add
sbb
jecxz
enter
push
mov
repz
mov
repz
rcrl
test
sub
fmuls
insb
adc
ljmp
aad
std
ljmp
pop
out
lret
mov
or
int3
xchg
xlat
pusha
xor
lods
icebp
js
cmp
ja
std
jnp
push
ja
lea
loope
mov
cmp
js
mov
sub
pop
sub
movsl
lret
fs
pop
daa
cmp
jne
mov
xor
jmp
mov
add
mov
mov
jmp
sahf
das
or
mov
mov
pop
mov
mov
mov
jo
jge
jo
loope
in
dec
push
xchg
push
mov
loop
dec
xor
lea
les
mov
dec
lea
ret
jbe
and
pop
lods
orl
mov
push
arpl
orl
ljmp
or
ja
fwait
js
sub
add
mov
addr16
mov
int3
mov
pmaxub
xor
aaa
add
repnz
dec
push
test
jmp
inc
lret
rcrb
movsb
stos
xchg
push
add
jnp
push
add
jp
into
jno
mov
sbb
pusha
popf
push
and
in
xchg
xor
pop
dec
push
notl
cwtl
cmp
int
loopne
lods
mov
aam
xor
mov
add
mov
aam
movsl
adc
mov
call
aas
push
sahf
push
jnp
and
xor
xor
or
mov
fs
pop
jne
push
or
jb
sti
movsl
movsb
mov
pop
stos
insl
and
inc
cltd
push
clc
xchg
jo
add
dec
jnp
push
pop
test
stc
outsb
sbb
fnsave
sti
mov
and
mov
adc
pop
mov
mov
inc
pushf
jae
and
arpl
pop
add
xchg
dec
jmp
xchg
lret
addr16
scas
les
pop
jge
and
pusha
fcom
push
inc
cmovbe
fptan
xor
iret
ljmp
pop
imul
test
and
or
fcompl
inc
sub
int3
test
xchg
sub
lds
out
std
addr16
lds
je
cli
pop
add
popa
xor
in
icebp
push
loop
and
inc
mov
dec
inc
adc
mov
into
sub
dec
fstl
icebp
xchg
mov
sbbb
out
repnz
mov
popa
inc
cmp
movsb
ss
shll
jecxz
fstps
and
hlt
xchg
add
jae
sti
test
adc
std
filds
pop
mov
sub
int3
out
lea
ret
lods
xor
cli
call
ds
xor
or
in
mov
xchg
cld
or
inc
inc
mov
jo
ljmp
mov
pushf
add
pop
add
push
pusha
stos
sbb
and
push
in
xor
mov
mov
and
insl
add
rdtsc
jae
inc
out
xor
mov
and
divl
xchg
mov
or
fidivl
fwait
inc
or
pop
dec
aam
sub
xor
loopne
movsb
ret
sbb
ljmp
inc
xor
shrl
cmpb
push
and
push
and
sub
rcrl
insl
sbb
sbb
insl
lret
xor
outsl
and
inc
xor
xchg
data16
aaa
add
cmpsb
mov
xor
out
jb
mov
pop
inc
jg
decl
xorl
cs
in
es
orb
clc
mov
in
test
sub
lock
das
xor
mov
inc
shlb
cltd
or
andb
mov
pusha
insb
or
pop
adc
inc
iret
dec
sti
je
faddp
fs
adc
lret
je
test
mov
mov
fcomps
mov
push
cwtl
push
lock
push
shlb
in
std
sub
or
or
xor
divb
outsl
push
xchg
dec
sbb
je
push
mov
push
jp
test
jmp
fidivl
scas
sahf
testb
add
mov
jmp
in
outsl
pop
outsl
jne
data16
test
pushf
jecxz
cmp
jge
jo
xor
out
add
jbe
mov
shl
pop
xor
xchg
jp
fisubs
das
push
movsb
sbb
xchg
inc
sub
xchg
lcall
lock
cmp
push
movb
jns
mov
lods
cmpsl
loopne
aaa
sbb
loopne
add
test
push
or
mov
mov
out
adc
mov
mov
icebp
or
repz
stos
or
mull
pop
jnp
pop
sbb
lds
mov
hlt
int
xor
push
inc
movsl
repz
cmp
repnz
cmpsl
sbb
mov
fstl
sub
jno
mov
ljmp
sbb
mov
stos
in
out
or
mov
jo
lea
daa
mov
test
or
mov
movsl
mov
xchg
adc
cltd
mov
test
mov
std
pop
or
loop
mov
cmp
or
std
ffree
int
into
mov
int3
xorb
sub
popf
push
cmc
jno
sub
dec
fidivl
mov
pop
cmpsl
out
lods
sbb
pop
loop
adc
popf
inc
mov
pop
icebp
jnp
enter
push
ret
in
popa
test
dec
setle
jge
test
insb
orl
jle
push
into
dec
jnp
bound
fwait
loopne
sbb
int3
leave
movsb
sub
mov
in
sub
shlb
add
in
jne
call
cli
cmp
and
enter
ds
xor
aam
pop
pusha
aaa
ljmp
enter
jo
dec
aaa
or
xchg
push
andl
mov
hlt
xlat
dec
rorl
add
sub
leave
dec
fcoml
push
or
sbb
sub
pop
mov
add
inc
push
movb
xor
mov
sbb
mov
ss
out
push
pop
jno
push
lret
pushl
push
int
das
and
dec
lret
adc
pop
adc
add
insl
sbb
mov
sbb
adc
bound
dec
pop
mov
ffree
loope
jge
in
iret
xchg
cmp
lods
jp
fwait
inc
mov
pop
test
imul
outsl
pop
movsl
orb
icebp
lods
sbb
cwtl
sbb
outsb
shl
aaa
int
dec
dec
mov
sahf
cmc
repz
ffree
cmc
mov
mov
lock
jno
pop
jp
adc
test
pop
jo
cld
or
pop
or
jecxz
jmp
and
and
cpuid
out
adc
dec
inc
add
leave
sti
jns
js
mov
push
push
mov
pusha
int
mov
dec
jnp
insb
mov
xchg
xchg
mov
sti
xchg
ret
sub
cli
jecxz
call
xchg
cwtl
jb
repnz
cmp
cmp
add
adc
xor
fisttpl
xchg
pop
add
test
sbbl
filds
sbbl
roll
sbb
mov
rcll
pushf
ljmp
sbb
add
arpl
fwait
dec
dec
movsl
pop
sub
fimull
inc
pop
popa
dec
sub
icebp
dec
loope
lods
sti
sub
push
mov
cld
lcall
mov
dec
adc
or
sub
sbb
mov
mov
cmp
rclb
mov
das
call
out
push
mov
xchg
imul
stc
sbb
mov
cld
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
jmp
ja
mov
mov
filds
jo
dec
jge
jo
pop
scas
scas
repnz
je
ss
in
aas
lret
push
mov
pop
fdivp
aaa
icebp
sti
cs
test
fbstp
xchg
fistpll
push
cmp
jno
loop
mov
push
fmuls
movsl
mov
rcl
xchg
xorl
shll
lods
add
sbb
mov
loope
in
and
in
ja
inc
push
xlat
rcrl
sub
mov
lahf
mov
neg
sbb
push
das
adc
sbb
dec
sbb
cmpsl
inc
dec
add
pop
or
outsb
lock
pop
xchg
add
xor
daa
js
in
adc
jp
fwait
jo
or
cli
mov
pop
jle
aad
and
aas
shl
into
rcll
into
inc
mov
mov
and
dec
pusha
mov
movsl
fcmovnu
nop
jae
mov
mov
sub
imul
out
cmpl
or
int
push
lods
orl
adc
mov
pop
sahf
flds
fsubp
mov
cmp
jb
inc
pop
sbb
out
imul
int3
jb
mov
pop
inc
cwtl
push
adc
gs
mov
mov
dec
out
sbb
push
dec
mov
xchg
xlat
mov
pushf
jl
jge
xor
aam
push
push
hlt
inc
and
movsb
lea
scas
cmp
jo
pop
add
jae
and
std
jg
dec
mov
sub
sahf
xchg
ficoml
xor
xchg
into
jg
cmp
shll
jno
inc
movsb
pop
or
jge
add
dec
inc
adc
cmp
fs
pop
mov
inc
add
jns
test
xchg
ret
push
not
push
lahf
hlt
loop
xor
into
xlat
pusha
cltd
inc
cltd
jns
mov
stos
inc
jb
rorb
insb
cld
mov
pop
fiaddl
cmp
sub
icebp
fwait
xchg
cmpsb
cmp
mov
fucomp
and
shlb
or
leave
and
test
dec
insb
lods
popf
lret
ud0
cli
dec
xor
dec
insl
fisubs
jmp
fbld
jo
and
fcoml
jp
adcb
mov
addl
pop
or
push
adc
sub
cmp
fimuls
sub
mov
mov
pop
mov
nop
push
sbb
and
add
sbb
scas
xrelease
push
push
xchg
out
add
lret
xchg
in
sub
les
mov
push
insl
pop
mov
imul
ss
fwait
jne
jns
pop
hlt
jmp
es
scas
stc
fildl
cltd
fnsave
mov
or
int3
shrl
mov
xchg
jb
jecxz
or
lahf
fwait
sahf
aad
mov
xchg
in
iret
xor
and
push
ljmp
xor
mov
jnp
rcrl
std
lock
sbb
inc
inc
popf
cmpsl
popf
mov
xchg
pop
sti
adc
pop
xor
jno
xchg
and
sti
mov
shlb
nop
test
fadd
mov
jge
test
test
and
mov
mov
dec
jecxz
shl
mov
dec
or
pop
aas
insl
xchg
outsl
out
dec
cltd
cmpsb
dec
fistpl
jle
adc
xchg
aaa
fmull
arpl
pop
add
push
cmp
and
cmpl
repnz
mov
out
adc
cmpb
js
je
xor
jb
jbe
sbb
jmp
inc
cli
fisttpl
jp
xchg
mov
mov
jge
jo
push
cmp
cmp
hlt
das
js
mov
jecxz
mov
fiaddl
mov
pushf
cmp
dec
and
in
imul
pop
sub
clc
scas
sbb
dec
imul
flds
out
or
push
inc
mov
mov
adc
xchg
arpl
test
cmp
sbb
pop
dec
ret
bound
mov
or
jnp
stos
mov
cwtl
in
mov
mov
inc
push
popf
rcr
aad
mov
push
sub
dec
test
and
fsubl
mov
or
push
aad
dec
jno
in
test
cmp
rorl
mov
or
dec
sahf
and
xchg
ret
hlt
pop
pushf
cli
pop
cmp
sbb
mov
and
lods
mov
mov
mov
push
xchg
mov
mov
xchg
jne
mov
mov
cmp
or
cli
xlat
popa
fwait
and
ret
pushf
sbb
cmc
leave
lock
jb
imul
fildl
pop
hlt
mov
jo
push
lods
cmp
movsl
inc
mov
lods
mov
rcll
inc
cld
loop
mov
push
daa
aaa
push
int3
std
push
or
lahf
inc
push
test
mov
subb
mov
push
lret
dec
popa
mov
inc
mov
into
lods
lods
repnz
mov
loope
decb
in
shlb
mov
xchg
or
pop
shll
in
out
loope
movsb
ja
fwait
xchg
aam
sub
scas
mov
shr
push
mov
jns
add
xchg
and
loopne
cmp
dec
jmp
inc
adc
fsubs
adc
pop
jo
lret
pop
ror
shlb
icebp
or
nop
sub
and
push
xor
popa
mov
mov
popf
fnstcw
imul
cmp
sbb
dec
out
popa
cmp
add
push
lcall
push
addb
mov
cmp
mov
sub
out
arpl
cmp
xchg
sti
dec
inc
adc
shlb
inc
cmp
enter
mov
cld
test
push
cmp
pop
jmp
mov
mov
int
lods
mov
js
aas
xchg
mov
mov
fists
ja
je
ja
cmpl
das
mov
shr
divl
inc
scas
or
hlt
popa
iret
mov
xor
insl
ror
aad
mov
les
fnstcw
mov
pushf
ja
sbbl
in
out
adc
das
stc
aaa
in
fdivrl
ja
jae
mov
adc
and
aaa
fnstsw
lahf
js
mov
loop
cwtl
fbld
mov
sbbl
and
lcall
pop
add
xchg
orb
loop
sub
or
xchg
pop
mov
mov
lret
std
addb
lret
pop
adc
fnstsw
push
push
and
jmp
imul
divl
out
sbb
loopne
push
cmp
testb
mov
js
cmp
std
jno
xchg
cmp
into
push
mov
xchg
std
mov
in
insb
sbb
or
leave
sarl
add
and
add
push
and
fistpl
dec
js
shrl
sub
xchg
cmpsl
out
push
jne
loop
into
mov
in
out
jns
jo
jle
jmp
lret
jo
es
loope
sub
adc
adc
aam
frstpm(287
jnp
call
test
pushf
jb
add
call
add
jae
roll
lods
data16
dec
jge
jo
icebp
nop
adc
inc
jmp
test
fstpl
mov
ret
and
or
in
adc
push
mov
and
cmpsl
adc
push
rcrl
and
inc
pushf
cmp
imul
mov
insb
adc
jb
scas
inc
xchg
jno
mov
js
cmp
icebp
mov
pop
aaa
fistl
sub
int
xchg
test
stc
popa
xchg
xor
jno
bound
mov
ljmp
xchg
std
adc
add
outsl
dec
and
insb
mov
pop
and
jmp
inc
in
out
mov
sub
bound
fiaddl
test
sbb
cltd
push
popa
lods
xchg
call
xor
inc
incb
adc
es
das
mov
jnp
sbb
aas
enter
jp
outsb
cmpl
pop
add
fistpll
mov
je
test
adcb
adc
adc
xchg
mov
adc
dec
push
sub
arpl
push
subl
cmpsb
cld
test
movsl
sub
out
xchg
pop
mov
mov
xor
inc
sub
sbb
adc
loop
sar
mov
enter
xchg
xor
jmp
xchg
jmp
jmp
dec
mov
in
test
adc
pop
jmp
test
icebp
rcr
rcll
jbe
dec
outsl
in
mov
cld
dec
ds
or
push
and
stc
jle
inc
imul
ds
ds
movsl
sub
xor
int3
addb
mov
je
mov
sbb
xor
pop
out
lret
sub
adc
push
fimuls
imul
shrl
fldt
addr16
lea
xor
dec
dec
or
xchg
jb
cwtl
in
icebp
nop
push
push
adc
in
pop
dec
outsl
pusha
lods
int
cmp
cwtl
push
jo
inc
imul
push
adc
sar
mov
cli
xchg
pusha
jecxz
stc
lahf
or
int3
xchg
scas
loope
xor
and
orb
inc
push
aad
out
cmp
adc
dec
outsb
mov
hlt
jo
add
inc
mov
push
movsb
cmp
jbe
test
stos
xor
mov
inc
push
dec
mov
bound
cs
mov
dec
mov
add
mov
repz
movsw
sbb
out
cs
sbb
sbb
repnz
ficompl
test
jmp
scas
xchg
cmp
movsb
ret
scas
test
pop
dec
mov
xchg
and
ja
iret
bnd
outsb
sbb
nop
in
mov
stos
and
lods
add
mov
xlat
cld
push
jae
data16
std
sbb
fdivrl
test
push
ret
inc
push
cmpsb
jp
inc
mov
mov
iret
test
imul
repnz
push
sbb
jle
mov
inc
xchg
or
fdivrl
push
or
xor
pop
aad
ss
addr16
fcmovnu
inc
mov
dec
push
sbb
es
or
xchg
ret
fcmovu
dec
notb
sbb
lcall
dec
jno
dec
int
imul
mov
dec
fwait
ja
fnstsw
jae
inc
lock
loope
push
fdivr
push
imul
and
cmpsb
jp
hlt
int
out
and
sbb
push
or
sahf
mov
jne
mov
xor
add
imul
mov
xor
mov
lea
cmp
jmp
mov
push
mov
bound
inc
jo
dec
jge
jo
sub
sbb
cmpsb
jb
loop
inc
xor
loope
enter
mov
mov
repz
cltd
push
out
pop
ret
cmpsl
jmp
cmc
stos
and
cmp
sbb
jle
cmp
cmp
lock
adc
mov
imul
mov
pop
call
shrl
jb
push
scas
lcall
fwait
bound
or
add
lods
adcl
add
lods
fwait
push
mov
add
stc
sub
daa
xchg
mov
pop
adc
test
arpl
imul
rcll
jle
mov
sti
xchg
popf
jne
fcoms
cs
add
aam
stos
ss
xor
mov
cs
push
push
shrb
loopne,pn
adc
jecxz
add
fs
sub
sbb
pop
loop
js
xorl
mulb
mov
sub
xchg
mov
or
push
jmp
add
xchg
push
sub
inc
es
mov
jb
sbb
fimull
sahf
xor
mov
in
mov
pop
int3
sbb
push
outsl
xchg
dec
bound
es
xchg
and
shlb
scas
sbb
out
popf
aaa
fdiv
ret
xchg
and
push
icebp
push
and
sarl
stos
and
je
sub
dec
mov
fs
insb
std
xchg
pop
adc
movsb
xor
dec
cmp
jnp
testb
mov
imul
xchg
scas
mov
cmpb
mov
push
jl
xorb
pop
out
js
xchg
lahf
cmp
leave
cmp
xchg
xorb
pop
es
dec
adc
call
test
add
jmp
xchg
cli
xlat
push
sbbb
int3
push
loopne
or
fmulp
ret
xor
outsl
cmp
xchg
in
xor
je
jp
lods
out
mov
sub
xchg
jno
jns
adc
push
dec
inc
cmp
xchg
sbb
ficoms
push
dec
xor
arpl
mov
add
in
fldenv
push
lcall
xchg
pop
pop
push
mov
fwait
fs
mov
xor
loop
push
std
mov
sahf
ljmp
xchg
mov
inc
cwtl
push
xor
pop
jmp
jne
cld
jnp
lret
mov
hlt
stc
stos
jns
add
cmpsb
jmp
sti
add
dec
outsl
or
inc
into
mov
imul
std
subl
pop
in
inc
je
jle
dec
gs
aad
fidivl
fmuls
cmpl
pop
movl
sar
lcall
adc
cwtl
dec
jl
sub
mov
dec
lcall
enter
jp
mov
lea
sub
stc
add
xchg
xlat
int
jnp
mov
mov
jl
scas
and
jp
sub
nop
jmp
dec
cmpsb
idivl
dec
out
sahf
mov
push
add
pop
movsb
cmp
imul
cmc
test
pop
lahf
add
inc
cmp
xor
jns
push
xor
pop
dec
adc
cltd
psadbw
in
fstl
jle
roll
sar
loopne
mov
sbb
icebp
unpcklps
cmp
push
or
or
sbb
jns
mov
pop
pop
in
and
enter
dec
pop
decl
mov
xchg
xor
push
cmovbe
inc
inc
inc
push
xor
out
decl
add
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
jmp
inc
orl
push
ds
xchg
dec
jo
dec
jge
jo
mov
ljmp
inc
and
pop
pop
sbb
and
sbb
clc
mov
add
test
cld
shrb
int3
out
jnp
repnz
sub
push
xor
and
jnp
add
jno
cmpsl
test
stos
jns
mov
dec
in
sarb
adc
inc
pushf
loop
mov
sub
pop
sti
cltd
cmp
in
mov
cli
mov
jo
cli
adc
add
pop
lods
fdivrl
jbe
sbb
mov
dec
ret
popf
or
dec
jb
mov
gs
cmp
push
mov
jne
add
or
in
out
mov
xchg
xor
sti
push
aaa
cltd
xlat
lcall
mov
push
jbe
push
and
push
leave
leave
and
push
or
inc
or
add
ds
and
ja
lahf
insl
xchg
push
out
sbb
mov
xor
stos
xchg
jge
dec
jmp
sahf
adc
test
add
mov
xor
push
rcrb
repnz
pop
movsb
pop
pushf
cmp
lock
test
adc
mov
cli
lods
fcoms
shll
mov
clc
aas
pop
filds
orb
scas
pop
push
fnstsw
lods
lock
push
push
pushl
push
aas
out
cmp
add
xlat
leave
inc
add
jnp
jmp
add
fs
mov
out
je
into
push
sub
lods
pop
mov
mov
jmp
or
in
ss
mov
xchg
out
out
into
ret
xchg
jp
push
arpl
xor
jecxz
sahf
jp
loope
mov
mov
cmp
push
or
add
add
pop
cmc
ret
out
push
repz
cli
lret
out
inc
dec
fdivrs
in
mov
pusha
shrb
xlat
mov
pop
aad
pop
mov
repnz
es
inc
xchg
push
cmp
xchg
pop
jo
push
or
push
sahf
cmc
test
pop
mov
fisttpll
xor
pop
cmp
push
add
nop
cli
or
jle
mov
ret
jle
mov
inc
aam
nop
mov
es
stc
in
repz
repz
jbe
movsb
lcall
lcall
or
loopne
les
outsb
push
inc
cmpb
push
fildll
icebp
mov
ss
in
cltd
jle
sti
cmp
pop
xchg
int
push
or
lods
lods
xchg
subb
dec
loop
dec
insb
jmp
add
mov
adc
push
hlt
pop
arpl
inc
jb
ljmp
ret
lods
enter
push
mov
out
pop
and
andl
push
add
jmp
cwtl
inc
lahf
sub
shl
std
dec
scas
or
int3
jle
mov
sub
and
nop
aam
mov
dec
mov
push
les
push
dec
sbb
or
xchg
xor
fidivrs
repnz
push
push
nop
xor
push
push
pop
mov
stos
mov
cmpsl
push
xchg
sti
pop
movsl
shlb
add
jns
out
xor
mov
cmpsl
clc
mov
jnp
jo
mov
pop
rorb
sbb
xchg
xlat
push
loope
mov
test
jae
dec
rolb
movsl
xchg
mov
hlt
sbb
mov
ret
es
data16
ja
or
rorb
jge
xorl
ficompl
sub
jnp
dec
repz
inc
cmpl
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
jmp
jp
jb
jb
adc
sub
cmc
repz
adc
jo
jge
jo
scas
mov
loop
sbb
test
ljmp
insb
and
pop
and
dec
sub
or
cwtl
jb
and
pop
std
jno
or
adc
xchg
sbb
add
adc
outsl
cmp
xor
imul
sahf
inc
out
mov
in
sub
push
movsl
aas
and
lahf
loopne
dec
imul
jne
fbstp
jge
pop
sub
sahf
lret
add
leave
aad
jecxz
aaa
xor
cld
lcallw
add
mov
mov
sub
add
repz
mov
das
jae
int3
pop
std
cmp
push
inc
jmp
shrb
frstor
inc
sbb
insl
dec
add
jp
or
sahf
or
aaa
frstor
pop
sbb
mov
or
or
xor
jne
lcall
mov
shlb
bnd
fisttpll
testl
mov
scas
fadds
cld
ljmp
mov
push
andl
aaa
jb
push
mov
sub
das
ja
fwait
jle
andl
aam
int
mov
cmpsb
in
pop
cmpsb
push
mov
lahf
imul
sbbl
adc
stos
adc
dec
push
insl
sti
gs
sti
inc
shll
sbb
xor
and
jb
xchg
dec
aam
sub
popa
jmp
test
xchg
pop
mov
xchg
cmp
push
cmp
push
xor
mov
mov
scas
pop
sahf
out
imul
mov
dec
into
ret
nop
pusha
dec
shrb
in
mov
jbe
push
gs
int
lahf
jb
bound
mov
popf
jnp
mov
fsubl
cmpsl
xor
lahf
xchg
and
cmp
ss
xchg
orl
or
fsubl
repz
sarb
add
mov
sub
cli
lea
mov
xchg
add
and
into
push
movsb
test
sti
jne
adc
push
in
push
les
sub
pop
xchg
dec
add
fwait
xchg
xor
in
push
dec
pop
shll
xchg
add
push
adcb
mov
inc
stos
xchg
loop
jl
into
mov
inc
loope
imul
push
loopne
sub
mov
loopne
cmp
rcr
cmp
rcrl
mov
int
or
roll
cmp
lret
aad
jmp
outsl
xor
repnz
or
jnp
test
shl
aad
sub
mov
mov
cmpb
stc
in
inc
mov
imul
push
mov
movsl
flds
mov
and
ljmp
cmp
lret
neg
push
fisubrl
pop
push
das
mov
in
das
push
adc
mov
jo
data16
adc
xlat
mov
dec
mov
fisubrs
or
jo
call
and
leave
jb
das
xchg
loope
pop
das
pop
stos
add
pop
je
add
std
pop
mov
push
cld
ret
shlb
cltd
cmp
test
xor
jbe
les
ja
adc
cmp
pop
ds
cmp
pop
pop
sub
les
cmpb
inc
sahf
mov
and
fstps
add
dec
xchg
or
loope
out
in
mov
mov
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
jmp
fisttps
jecxz
out
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
in
in
cld
jge
mov
fsub
add
mov
add
add
mov
inc
push
fisttps
test
fadds
jmp
fildl
inc
jo
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
ret
cld
incl
out
xor
mov
cld
jo
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
pushf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
cmp
pushf
or
enter
xor
pushf
inc
ds
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
pushf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
pushf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
bswap
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
les
mov
mov
cmp
mov
add
xor
pushf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
fs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
xor
pop
lods
incl
mov
pushf
jo
cmpl
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
pushf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
pushf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
fdivr
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
faddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jo
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
int3
jne
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
and
jo
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
pushf
inc
xor
pop
inc
shl
inc
sub
inc
add
add
loopne
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
leave
inc
add
rdpmc
sbb
mov
cmovne
jmp
inc
mov
sbb
mov
add
out
add
sub
add
jo
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
into
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
ljmp
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
pushl
lcall
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
wrmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
pushf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
or
inc
xor
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
call
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
pushf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pop
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
pop
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setl
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
add
add
enter
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
add
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
incl
jo
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
jno
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ds
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
pushf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
icebp
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
add
into
fs
mov
ret
add
add
add
ds
add
into
ret
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
cmp
fs
or
add
add
push
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
xor
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
add
add
lret
lock
clc
inc
lret
cmp
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
pushf
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
pushf
pushf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
pushf
add
clc
cmp
or
add
xor
or
lea
or
enter
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
mov
adc
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
add
pushfw
add
add
mov
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
aaa
inc
pop
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
pushf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
mov
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
in
into
inc
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
xor
fmuls
test
cld
or
dec
ret
push
inc
dec
mov
mov
push
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
pushl
in
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
push
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
cld
mov
xor
add
dec
jnp
mov
xor
add
mov
mov
xor
rorl
jb
add
ja
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
pushf
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
mov
mov
cmpb
add
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
xor
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
pushf
mov
jge
decl
