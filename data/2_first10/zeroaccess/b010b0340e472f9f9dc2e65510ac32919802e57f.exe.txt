push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
add
mov
mov
mov
mov
mov
sbbl
push
sbb
jmp
ret
aas
ret
aad
aad
mov
dec
jle
jle
or
jle
fld
fcom
enter
leave
cld
icebp
fmulp
iret
clc
sar
rcl
mov
nop
fsub
nop
cld
jmp
leave
ss
xor
neg
aad
int
fnsetpm(287
lock
in
cli
sti
jmp
xchg
in
cli
fxch
out
leave
icebp
idiv
iret
ds
lock
repz
enter
out
fildl
ret
sub
shl
xlat
fdiv
stc
aas
adc
call
fmuls
repz
mul
ret
into
jmp
loopne
iret
lock
in
repnz
into
sub
sti
ljmp
int
into
out
rorb
fimull
div
aam
hlt
cmc
aad
ss
int3
rcl
rol
idivb
icebp
les
out
sti
xchg
ljmp
cmp
loopne
out
xor
loopne
cld
out
out
fldl
jmp
int
imul
jmp
fsub
jecxz
ss
rcr
xchg
call
call
xchg
hlt
xor
int
xlat
ljmp
shl
aad
cli
hlt
stc
aas
and
orl
in
aad
xlat
aam
ret
mov
fucomi
call
fistl
shlb
aaa
cld
ror
rcr
std
fdiv
adc
sti
aam
cli
out
filds
lock
in
in
sub
xor
into
cmp
cmc
ljmp
aad
fcmovnu
loop
out
out
mov
jmp
enter
lock
out
mov
cmp
xchg
aad
ss
hlt
cmp
idivb
ds
aaa
fld
jecxz,pt
out
xlat
or
flds
ret
xor
int
xor
fdivs
into
in
loop
repnz
fdivr
clc
in
stc
out
xor
shr
int3
xor
int3
cmp
clc
stc
cmc
cmp
fsubrp
add
add
rcr
fcmovnu
mov
push
stc
arpl
jle
or
jle
aad
cli
jmp
in
cld
jmp
mov
aaa
loop
fdivs
cmc
lret
aaa
fldl
cli
call
xchg
hlt
xchg
jmp
cmp
ss
aam
rcl
testl
dec
fadds
fimuls
ret
int3
xor
cmp
fdivr
loope
shl
jmp
mov
xchg
repz
xor
in
iret
lds
cmpl
test
in
mov
rorb
in
das
out
cmc
xor
hlt
out
into
cmp
in
idiv
ret
loopne
test
orl
xchg
shl
leave
aaa
clc
out
test
std
loope
icebp
xor
cmp
out
icebp
adc
xchg
cs
sti
das
lock
cld
fnstcw
xor
lock
and
mov
loopne
shr
rorb
into
fcomi
div
stc
hlt
in
fprem1
lock
jecxz
in
into
test
loop
ljmp
div
fidivrl
rcr
test
cmp
fcmovu
cli
jecxz
rorb
cmc
ljmp
ljmp
out
cmp
loope
std
fdiv
call
mul
rcl
in
cli
leave
into
fsub
cmp
sarl
in
shl
in
aas
mov
jmp
xchg
test
in
cmp
fdivrl
cmp
ffree
cmp
xchg
cld
fcompp
fadds
iret
out
shr
cmc
cmp
cli
ss
into
loop
jecxz
cmp
shl
sar
sbb
out
leave
in
cld
aaa
call
xlat
shl
fcmovbe
loope
in
out
sbb
jmp
testl
sar
xor
cmp
idivb
ret
jecxz
fcmovu
rcl
cld
orl
jmp
in
das
idiv
aaa
aaa
shl
sti
fcomip
ret
aas
loope
fiaddl
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
xor
jmp
ret
leave
aad
fcmovnu
sub
test
sbb
add
or
jle
int3
int
xchg
xor
jmp
int
repnz
out
ret
aas
int
repz
xchg
int3
in
nop
and
repz
fcomi
cmp
rcl
neg
fcmovnu
fiadds
std
nop
clc
ljmp
aaa
in
ret
aaa
shl
sti
clc
sarl
out
iret
shll
fiadds
ret
out
addb
in
xor
xor
cmp
cmpl
out
addl
mov
repz
xor
out
enter
fsub
test
shl
aad
into
mov
int3
test
mov
out
lret
shl
fidivrl
jmp
cmp
hlt
fcmovu
idiv
in
aas
fadds
xchg
out
mov
repz
out
iret
hlt
xor
mov
enter
out
ret
out
in
xchg
loope
stc
enter
cmp
fistpll
lret
fsubp
in
call
lret
ret
mov
enter
out
ljmp
int3
incl
and
nop
rorb
xlat
aaa
out
fdivp
lock
cmc
out
test
cmp
sti
xlat
shl
test
test
icebp
xchg
sar
lds
fld
std
jmp
repnz
lock
add
add
ljmp
cmc
shlb
fld1
stc
cmp
idiv
in
cmp
cmp
xchg
ret
xlat
fmul
test
jmp
ss
cmp
leave
cld
ds
int3
xlat
ror
loope
fmull
out
test
and
out
ret
hlt
out
cmp
filds
hlt
mul
rolb
sub
mov
shl
stc
fdivr
repnz
fldl
in
aad
cmpb
xchg
in
xchg
aad
ljmp
xlat
aad
in
out
hlt
cld
test
mov
decb
in
xchg
clc
out
not
aaa
jmp
add
mov
sub
add
andl
mov
sub
jmp
vaddsubpd
rcr
pop
push
xchg
fucomi
jbe
aaa
sub
jle
add
adc
xlat
addb
in
cld
xchg
ffreep
shll
fnstcw
jmp
repz
cmp
loopne
in
cmc
fmull
repnz
icebp
out
xor
shr
xlat
ljmp
iret
loop
testb
fistl
xor
out
in
test
idiv
fildl
mov
leave
repnz
fucomi
jmp
aad
loope
rcr
repnz
out
hlt
fucomip
cmp
lds
fld
rcr
in
lock
enter
xlat
into
ds
or
fdivr
orb
in
mov
fcom
xchg
mov
mov
iret
jecxz
clc
call
iret
cmc
icebp
aas
xlat
orb
faddl
xchg
loop
lret
in
into
out
ror
ret
loop
loop
test
cli
enter
ljmp
ror
rcl
fcmovu
ds
in
cmc
cmp
fsubrp
loope
fucom
lret
jmp
adc
aam
cmp
lret
fidivrl
cmp
cmc
into
xchg
aam
lret
call
int
mov
mov
lret
xor
shr
cld
xlat
hlt
stc
ds
ror
hlt
out
rol
sti
frstpm(287
nop
out
cli
fstl
sub
repnz
icebp
into
fdivp
std
aas
idivl
loopne
repz
fdivrp
loope
fcmovnu
test
aad
stc
out
cli
rcl
lock
fcomp
cmp
incb
out
mov
int
out
in
test
ljmp
fst
repz
cmp
sti
enter
clc
cmp
fucom
shl
das
hlt
loop
shr
lret
aad
ret
in
jecxz
lock
stc
stc
mov
test
jmp
lret
out
stc
aam
rcr
aas
fistpll
rol
iret
mov
out
incb
xchg
xchg
mov
fists
out
xor
repz
cmp
xlat
out
mov
fxch
lea
sbb
mov
jmp
rcl
fcom
fcom
fstp
outsb
push
mov
lcall
jle
add
cld
call
adcb
cli
into
cmp
idiv
into
in
div
loope
xlat
cmc
enter
leave
test
ror
fcmovne
out
clc
fdiv
std
fsub
fdivrl
xchg
lret
in
orl
test
stc
xor
aad
leave
sti
idiv
cmp
aad
in
hlt
stc
les
in
out
cli
fsubrp
out
ljmp
cmc
cli
in
loop
not
fcmovbe
cld
repnz
lea
iret
xlat
xor
lret
lret
hlt
in
ret
icebp
cmp
imul
leave
sbb
sub
nop
test
cmp
cmp
sti
stc
les
ret
addl
in
loop
into
lds
repnz
cmc
iret
hlt
leave
shl
sarl
sbb
mov
leave
rorl
jmp
out
into
repz
stc
cmc
sti
xchg
repnz
mov
out
jmp
mov
fstl
aam
lret
xor
fcom
ror
cld
cmc
fiadds
mov
nop
repz
loopne
out
rcl
int
fdivr
loop
int3
ss
repnz
mov
std
clc
test
rclb
ljmp
cli
cli
jmp
xchg
enter
hlt
adc
test
out
fmull
iret
jecxz
rol
fdiv
cmp
rol
ret
repz
sti
sti
fisttpll
in
shlb
fcmovnbe
fidivrl
fdiv
stc
clc
cmp
hlt
shl
fcmovu
out
int
mov
out
loope
test
out
out
aas
fucom
iret
sti
adc
rcr
repnz
leave
idiv
mov
int
icebp
popl
in
iret
out
cli
lock
int
ret
fmull
mov
ror
hlt
mov
enter
cli
call
ds
stc
xchg
repnz
out
lds
adcb
fcmovnbe
lock
xor
orl
add
xor
add
mov
add
mov
movl
mov
xor
mov
lea
and
mov
mov
mov
or
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
sub
mov
mov
and
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
add
add
jmp
ret
fstp
ret
frstor
mov
fistl
or
jle
idivb
cmp
mul
ret
cmp
fadd
movl
ret
rcl
icebp
in
icebp
into
fadds
in
xchg
filds
fsub
int
into
shr
xlat
cmp
cmp
icebp
cmp
out
fdivr
aam
out
orb
in
and
xor
aaa
shl
incl
loope
clc
loop
ljmp
mov
ror
into
stc
das
repnz
cmp
cmc
ror
clc
aad
out
idiv
addb
loop
xchg
in
mov
aam
aad
sar
fcmovnbe
fcos
cli
loopne
sub
mov
shl
loopne
int3
aam
jecxz
ss
idivl
xor
clc
ret
fcompp
clc
jmp
addb
mul
lock
cli
into
xor
ss
into
rcl
shl
aam
jmp
in
mov
iret
icebp
fidivrl
fidivrs
imul
loopne
ds
aas
lret
mov
loopne
test
int
cmp
fcmovnb
das
xlat
rcl
cmp
loopne
adc
cli
cli
enter
mov
call
int
out
das
test
test
cmp
fdivr
ffreep
mov
xchg
repz
cmc
divl
ss
lret
fidivrl
cmp
ret
aas
sti
mov
int3
loope
loop
shl
out
icebp
int3
repz
int3
xlat
xor
aad
cmp
ljmp
rolb
xchg
leave
xor
shr
fcomi
ror
hlt
in
rol
std
cld
test
int3
mov
jmp
repnz
les
div
ljmp
sti
stc
sti
loope
out
loopne
lock
call
stc
sti
ljmp
in
xlat
adc
jmp
enter
jmp
out
into
call
sbb
mov
ljmp
inc
add
add
mov
mov
mov
mov
adcl
movzwl
andl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
and
mov
and
mov
mov
xor
add
jmp
aam
fistl
jae
rorb
jle
or
jle
lret
addb
call
jmp
out
div
hlt
aam
ror
rcr
out
in
mov
out
rcr
mov
mov
sub
cmp
sarl
push
clc
loopne
in
sarb
stc
loop
mov
mov
les
out
in
cmp
cmp
xlat
lock
repz
idivl
cmp
out
std
lret
cli
adc
sti
fmul
std
repz
jmp
ret
test
and
sub
out
hlt
shrl
shl
xlat
out
ss
fdivrp
enter
lret
loope
ljmp
xlat
aad
cmc
repnz
int
jecxz
std
ret
sti
filds
loope
xchg
adc
xor
sti
aaa
roll
cmc
xlat
loopne
xlat
ret
fmull
jmp
out
hlt
cs
cld
xlat
rcl
int3
hlt
iret
in
aam
test
loopne
int3
jmp
imul
cmc
fdiv
enter
out
shl
addb
loope
test
out
fcmovnbe
mov
repnz
int
ret
ret
out
out
int3
clc
cmp
ss
aad
test
addb
jecxz
repz
jmp
in
leave
xor
in
repz
into
int
in
call
mov
out
cli
cli
hlt
iret
call
jmp
std
xor
aam
cmc
loope
jmp
fucomp
mov
rcl
shr
in
shl
ret
xor
enter
aas
cli
out
fldl2e
out
mov
cmp
cmp
fnstcw
fucomi
out
cmc
loope
fmuls
inc
repz
cli
repnz
fdivs
aaa
iret
ds
stc
loopne
rcr
shl
sti
mov
in
mov
jmp
lock
not
in
in
in
ret
fdivr
aad
loop
frstpm(287
in
out
rorl
cmp
jmp
fstp
je
xchg
or
loopne
jle
or
jle
out
cmp
in
cld
int
repnz
clc
iret
incb
lret
fisttpl
xchg
loopne
jmp
ss
sarb
test
mov
out
fucomip
fucom
mov
call
in
aaa
aam
cmp
cmc
std
aas
cmc
hlt
repz
aam
mul
in
loopne
std
out
repz
dec
fsubrp
lock
aam
in
jmp
enter
repz
std
repz
cmc
shl
jmp
leave
cli
cmp
icebp
adc
rcl
in
fadd
sub
mov
call
jecxz
hlt
icebp
lret
int3
loop
xor
jecxz
enter
test
fmul
rcr
adcb
ror
shl
cli
leave
into
shl
test
std
sti
mov
fdivrp
iret
repz
loopne
ret
ror
jmp
fcmove
int
fmul
cmp
idivl
aas
jecxz
cli
cli
addb
mov
xor
leave
fcmovu
fxch
rcr
lock
mov
int3
loope
in
shl
xchg
cmc
fld
out
xor
fucomip
int
int3
rol
and
mov
lret
in
lock
into
cld
out
ljmp
xlat
rorb
iret
lret
mov
lock
cmp
lret
std
sti
xor
in
xlat
jecxz
fscale
out
xchg
out
fimull
jmp
clc
cld
call
hlt
cmp
loop
mov
aam
aas
jmp
jmp
neg
int3
ss
int3
hlt
fidivs
cmp
fldl
mov
mov
xchg
repz
xor
call
in
xor
test
ffreep
loope
cld
loope
ljmp
xor
loopne
shr
int
hlt
cli
neg
lret
call
aad
std
cmp
leave
rolb
rorl
test
push
add
mov
mov
xor
add
cmp
jne
mov
mov
jmp
int
rol
fst
lcall
add
push
jle
or
jle
out
adc
int
out
cld
loop
aaa
icebp
repz
fdivrl
icebp
cmp
cmp
mov
repz
std
aam
icebp
in
out
out
fcmovu
shl
fcmovu
fcom
sar
test
ljmp
int3
rcl
aad
int3
ror
out
in
sub
loop
loop
inc
mov
lock
icebp
rcl
mov
loope
ss
xlat
ss
fcom
jecxz
aam
test
addl
shlb
out
aaa
faddp
cmp
sti
repz
ljmp
fists
in
xor
hlt
idivb
fidivl
fdecstp
aam
aas
jecxz
xchg
in
jecxz
jmp
mov
lret
ror
ljmp
div
loopne
fcmovbe
cmc
sti
testl
std
out
into
repnz
xor
enter
fst
clc
rcr
sbb
test
xlat
ret
jmp
call
fisttps
repnz
fmulp
ds
ds
xlat
fld
loop
out
mov
mov
in
xchg
test
lret
clc
call
stc
lock
repz
fsub
xlat
in
jmp
repnz
cmp
fmul
repnz
into
into
in
ror
rolb
sti
and
test
out
cld
jecxz
out
aaa
call
aaa
out
cmp
in
icebp
fidivrs
div
fcom
mul
int3
leave
lret
roll
out
sar
ljmp
aam
into
test
lock
bnd
jmp
std
rolb
in
xor
hlt
hlt
aad
cld
cmp
jmp
int3
lret
mov
leave
shrb
ljmp
or
xchg
xchg
test
mov
xchg
cli
in
aas
lock
stc
sar
lock
sti
in
loope
xchg
in
mov
mov
mov
mov
jmp
leave
ret
int
int
mov
stos
sub
cld
adc
or
jle
lret
enter
ret
out
cli
shr
not
sub
cli
cmp
cmc
mov
fucom
std
nop
addb
enter
icebp
clc
cmp
cmp
aad
rol
call
test
mov
addl
out
sti
cmc
ds
fdivr
out
fdivrl
out
mov
fcomp
fmulp
iret
xchg
and
int
in
shll
cmp
lock
shl
jecxz
and
inc
cmp
lret
xchg
repnz
sub
cmp
int
testb
ds
addb
in
test
vpaddsw
shl
out
clc
hlt
cmp
shl
addb
fsubr
mov
mov
fsubp
jecxz
call
cli
sti
flds
loop
call
loopne
in
and
fucomip
enter
in
aam
lret
shl
loope
test
loopne
stc
fisttpll
out
adcl
hlt
or
fucomi
fldz
fxam
fildl
out
int
mov
ret
stc
ss
aam
lret
cmp
fdivr
not
jmp
fisttps
jecxz
out
in
int
lret
rcl
in
cld
xchg
incl
dec
les
shl
lock
fldpi
mul
fadds
hlt
jmp
lret
jmp
mov
lock
leave
idiv
loopne
in
aad
xchg
adc
mov
sti
shl
xchg
hlt
repz
cmc
into
ljmp
repnz
cli
fldl
mov
in
xor
lret
cmc
out
clc
cli
xor
enter
leave
fprem
lock
test
xor
stc
repz
iret
mov
lret
cli
fcmove
icebp
out
loop
shl
cmp
fsub
xchg
lea
ret
cmc
cmp
cmc
shll
into
jmp
aam
mov
xor
mov
jle
or
jle
cmp
fmul
cmc
loopne
loope
lret
in
mov
ss
leave
lret
fstpt
in
jmp
int
loop
sti
jmp
mov
clc
iret
out
lock
int
leave
loopne
ljmp
aaa
aam
ds
out
sti
lret
rcr
out
lret
jecxz
cmc
jmp
aam
ss
fdivr
out
fsubr
repz
sti
rcr
neg
clc
fsubp
mov
out
out
out
cmp
out
fidivrl
cmp
xor
flds
test
cld
jecxz
lock
int
repz
fcomi
cmp
rcr
cmp
vshufps
mov
std
in
mov
call
sarl
incl
sti
std
in
loop
int
mov
and
out
loop
xor
out
leave
xor
aad
jecxz
loop
out
fcom
cmp
ds
mov
loop
in
rcr
xchg
jmp
in
in
jmp
cmp
xor
lock
fdivrs
aad
hlt
fmuls
fcmovnbe
lea
aaa
cli
sar
leave
fcmovbe
ljmp
xchg
xchg
int3
repnz
iret
in
fnstsw
std
std
ror
sti
inc
icebp
xchg
loop
lds
out
xchg
mov
lret
jecxz
cmc
in
ror
xlat
sti
cmp
ss
sar
and
cmc
jmp
jmp
into
out
loope
lret
out
shl
int
call
loop
std
mov
in
leave
in
jmp
lock
lock
dec
xlat
cmp
loope
rol
in
clc
fisttps
out
loope
jmp
cmp
cmp
fsubr
cmp
cli
xlat
cmp
mov
mov
sti
fdivrp
sti
cmc
mov
xor
enter
shl
in
in
sti
int3
lock
filds
mov
fsub
fildll
fdivr
repnz
lock
shl
icebp
loopne
addl
out
mov
sub
add
mov
mov
jmp
xlat
rol
xlat
enter
push
ret
lret
cwtl
adc
jle
add
stc
leave
leave
xchg
in
iret
xor
fmul
in
aad
out
iret
cmp
loope
loopne,pt
mov
mov
cld
mov
hlt
addb
cmp
cmc
and
fldl
in
stc
int
int3
aad
xor
xor
lret
in
cmp
not
test
shr
mov
out
xchg
in
out
out
cmc
cmp
lret
cld
fsubr
loope
ds
stc
xchg
sti
add
mov
loop
mov
iret
shl
test
xor
lds
icebp
xor
in
clc
out
lds
std
shl
adc
shrb
ss
jmp
cmp
idivl
sarb
aas
hlt
out
loopne
fldl
incl
shl
shr
sar
ljmp
test
aad
test
fisttpl
xchg
in
aam
in
in
shr
clc
in
cmp
repnz
aaa
std
loopne
xchg
fcmovu
xchg
int
sub
fists
enter
test
cmp
cmp
cli
xchg
fadd
cli
test
mov
mov
shll
leave
sti
cmp
in
enter
clc
addb
call
nop
into
in
in
lock
xor
out
not
aad
jmp
out
xchg
cli
cli
test
jmp
shl
lret
xor
in
sti
fdivr
loop
addb
roll
cld
jmp
bnd
loop
out
lret
aad
fdivr
xchg
repz
or
jmp
xlat
int
aam
iret
neg
cld
cld
cmp
cld
cld
cmc
fisttpll
fmulp
fisttpl
out
into
sti
lret
fcompp
loope
fstp
test
loopne
addl
cli
ror
fdivrp
neg
lock
cmc
call
out
test
int
xchg
shl
icebp
out
lds
cmp
dec
cld
jmp
into
ror
fxch
fst
cmc
mov
mov
cmpsb
push
jle
or
jle
cmp
cmp
clc
sarb
fsub
clc
in
sti
jmp
mov
shl
xor
ss
fdivp
cmp
std
ret
fpatan
sar
cmp
lret
mov
int3
enter
out
aaa
repz
in
cmp
aad
sbb
shl
icebp
testl
loope
div
in
cmc
ss
in
enter
and
ret
test
ljmp
xor
xor
xor
cmp
fcomi
leave
cmp
sti
xchg
aas
xchg
clc
test
sar
iret
repnz
cli
ret
fucomp
rcl
cmp
cli
ds
out
enter
xlat
or
test
shr
out
in
in
ss
div
sar
xlat
shr
fdivrp
shl
aad
loopne
mov
test
aas
shlb
xlat
aas
cmp
test
out
fptan
fldl
fucomip
in
leave
loop
jmp
sub
shl
call
iret
cli
cmp
aas
idiv
test
fdivp
out
out
rorb
sar
repz
cmp
fdivp
cmp
add
cmp
fdiv
movb
fdivr
int3
cld
xchg
out
jmp
jmp
lret
out
lret
jmp
fldz
and
cli
in
out
loop
xchg
fsqrt
mov
fsubrp
int
loop
xor
fcmovu
cmp
add
loop
fsubrp
mov
nop
mov
xchg
rorl
loop
xlat
lret
enter
fcmovne
int3
fadds
stc
xlat
loopne
leave
ljmp
xlat
out
leave
lret
into
aaa
lret
aaa
lret
aaa
xlat
out
fprem
dec
out
sub
orl
cmp
xor
int
test
aad
fmuls
enter
rcr
sti
cli
fdivrl
loopne
aam
cli
sub
out
sti
leave
clc
in
ljmp
rcl
cmp
sarb
fdivr
cmp
aam
fimull
mov
add
mov
jmp
ret
rol
rcl
rcl
sar
and
adc
xorl
sbb
or
jle
movl
test
cmp
xlat
ror
rcr
fst
out
aam
movb
xchg
ljmp
int
out
fdivrl
int3
and
mov
std
cmc
fmulp
out
xchg
test
shll
lret
sar
cmp
fcmovnb
aam
out
nop
out
mov
imul
icebp
out
in
leave
repnz
jmp
ds
cli
fxch
xchg
sti
lret
loope
out
in
lock
lret
imul
jmp
icebp
ffreep
xlat
mov
fld1
vpavgb
in
int
ljmp
into
ffree
ror
rcl
std
shl
cmc
jecxz
fsub
in
sti
mov
int
int3
not
fnstcw
cmp
or
into
test
lret
stc
mov
xchg
into
fcmovnu
rcl
idiv
lret
xor
int
cmp
fucomp
lds
clc
test
fcmovnb
loop
in
loop
lret
mov
int
xor
xlat
iret
cmp
out
aas
out
sti
icebp
in
ds
out
fdivp
dec
lret
dec
jecxz
loope
ret
cli
xor
aam
cmpl
mov
loope
fmul
mov
test
repz
lret
out
cmp
loop
mul
fldl
fdivrp
in
fildl
xor
out
int3
sti
shlb
in
fucomip
loop
icebp
icebp
jecxz
cmp
testl
loop
divb
call
aaa
cmp
loope
fdivrp
and
std
out
xchg
icebp
repnz
in
out
int3
xor
cli
aam
iret
aas
std
sbb
mul
movb
sti
hlt
adcl
into
ds
ds
fsub
fdivrs
flds
iret
int
in
xchg
loop
out
lock
sar
stc
fnstsw
xor
ror
iret
repnz
call
cmp
out
mov
rorb
test
inc
or
dec
or
movb
jmp
rcl
rcl
fstp
rcr
cld
cmp
jmp
adc
sbb
or
jle
fdiv
cli
lret
cld
lret
jmp
out
cmp
fld
stc
in
cli
leave
test
int3
loopne
loope
cs
out
cmp
out
cmc
cmp
inc
ffreep
ret
lea
lock
int
leave
icebp
div
loopne
cmp
xlat
out
repnz
shr
loope
cld
in
testl
das
shr
xor
cmp
loope
addb
inc
fcomp
xor
xchg
out
hlt
aam
ljmp
aam
idiv
rorb
test
mov
shll
out
xor
fstp
rcr
iret
int
cmp
mov
loope
testl
loope
div
hlt
int
ds
xor
repnz
mov
mov
test
icebp
lock
out
out
int3
into
fninit
aad
sub
hlt
enter
sti
fcmovne
in
sti
int
lock
loope
lds
call
fcom
stc
fsub
fincstp
fxch
ljmp
int
aad
fnstcw
lret
xor
ss
out
std
repz
mov
xchg
sbb
cli
clc
in
xor
std
out
cmp
cmp
in
icebp
iret
vpmuludq
test
mov
out
iret
out
ret
shl
lock
cmp
loopne
cld
in
rcr
out
test
mov
mov
in
ret
ds
xlat
fisttps
fdiv
cld
fcmovu
jecxz
leave
call
out
cs
out
lock
ror
call
aad
mov
xchg
in
jmp
jmp
jmp
loopne
rol
iret
int3
xlat
sar
repz
test
cld
test
xchg
filds
incb
mov
loop
cmp
cmp
fucomp
icebp
ljmp
cli
aam
addl
repz
fyl2x
fscale
repz
icebp
int3
repz
cmc
addl
inc
cld
jmp
int3
enter
lret
int
stos
test
add
jle
add
in
ret
fsubr
fsubr
mov
and
call
lds
into
lret
shr
loope
ret
icebp
cmc
out
cld
rcl
fsub
xchg
lret
cld
out
fimuls
int3
aam
std
sti
shr
sar
sar
fcomp
cmc
call
sti
jecxz
in
in
call
xor
xlat
icebp
out
leave
fdivrp
cmp
cmp
stc
aad
mov
sti
shl
loop
test
xchg
xlat
out
xor
repz
cmp
ds
icebp
xchg
orl
xor
fisubrl
xlat
fmul
cmpb
cli
ret
xlat
xlat
cmp
cld
enter
ror
jmp
clc
jecxz
out
fsubr
cmp
clc
ret
sar
out
loope
adc
faddl
out
ljmp
cmp
fcmovbe
fcomp
clc
into
repz
stc
xlat
in
out
loopne
xchg
aam
in
rcl
cli
clc
divl
fcmovu
loop
in
std
clc
ret
cli
leave
mul
out
int
out
shl
nop
and
xor
fistpll
xor
int
int3
stc
in
fmull
enter
shl
sar
imul
jmp
cmp
int
in
icebp
frstpm(287
icebp
fdiv
mov
imul
repnz
lret
repnz
fdiv
out
xor
int3
icebp
sarb
aas
idiv
decl
icebp
jmp
and
xor
out
out
rcr
lret
ret
cmp
test
mov
mov
enter
rcl
jmp
xor
ss
jmp
fadds
rol
fcmovnbe
lret
int
in
sar
cli
leave
call
cmp
icebp
aad
cmc
incb
out
lock
jmp
cmc
into
repz
into
in
loopne
repz
out
ret
aam
aad
fnstsw
test
int
out
std
xor
loopne
aaa
into
out
shll
cmp
cmp
lock
int3
fdivrp
iret
idiv
jmp
out
loopne
and
or
jmp
iret
cmp
mov
movzwl
jg
xor
jmp
int
rcl
fcmovu
int
xchg
daa
ljmp
push
jle
or
jle
shl
out
cmp
cmp
jmp
aam
in
idiv
test
fdivr
fcmovne
hlt
jmp
clc
in
ret
stc
cmc
test
inc
test
aam
fsubp
fadds
out
jecxz
xchg
out
clc
jmp
les
repnz
idivl
std
lret
cmp
cmp
fdivr
test
jmp
xchg
cli
jmp
movb
call
int
rol
aad
flds
mov
in
xchg
mov
push
in
xor
aam
lock
std
fdiv
and
sti
fmul
out
fxch
incb
shrb
lret
repnz
lock
rol
stc
cld
clc
mov
mov
fmull
xchg
sub
std
iret
in
fmul
out
stc
addl
int
fsubr
stc
xchg
in
xorl
fsub
cmp
in
repz
aas
hlt
ret
hlt
stc
fildl
loope
test
orl
xor
shr
ljmp
repz
cld
loop
aas
out
loop
leave
test
divb
std
call
fcmovnbe
ds
std
cli
xlat
fst
std
leave
mov
out
mov
jmp
lret
mov
shll
in
xor
loope
aad
addl
leave
inc
jecxz
ret
ljmp
jmp
repz
ljmp
fimuls
loopne
ror
lret
shl
ljmp
sti
hlt
fxch
sbb
test
call
mov
or
mov
enter
cli
xor
fincstp
xor
aam
cli
lret
sbb
in
fiaddl
mov
aam
xor
loope
aam
int3
repnz
fadd
cli
mov
loop
leave
jecxz
repnz
repz
call
sarb
shl
cmc
fiadds
sti
in
cmc
faddp
fcom
test
out
shr
rol
repz
idiv
xlat
fcmovnb
stc
sub
sub
mov
jmp
xor
jmp
mov
fst
fxch
jg
lods
loop
lahf
and
or
jle
testl
nop
ret
repnz
int
xor
cmp
sar
sti
stc
cmp
fdiv
stc
out
out
jmp
lret
addl
aaa
shll
sti
aad
loopne
fidivrl
in
hlt
test
out
fsincos
clc
loope
icebp
loop
fucom
jmp
into
ss
lret
rol
and
cmp
test
sbb
fisttpll
rcl
das
jmp
lret
jecxz
repnz
lock
fildl
cmc
mul
ret
aas
loop
clc
mov
jecxz
jecxz
cmc
stc
ret
xor
aam
fstpt
fildl
roll
out
xchg
lret
loope
fcom
fyl2x
aaa
aad
leave
in
fcmove
jmp
test
fcmove
enter
mov
sti
ljmp
leave
out
out
into
imul
ljmp
roll
ljmp
and
inc
stc
shr
cmc
shrl
fcmove
into
fdivrp
ret
rol
fiaddl
out
fnsetpm(287
xor
call
leave
repnz
cli
dec
neg
rol
cli
loope
loop
test
enter
mov
out
aas
aad
call
fsubrp
sbb
cli
repnz
enter
ret
loopne
jmp
hlt
xchg
int3
cmc
jecxz
cmc
fabs
fcomp
xor
cld
fsubp
lret
mov
mov
iret
out
lock
xabort
out
lock
cmp
shl
loopne
ret
loopne
test
hlt
test
mov
call
lret
in
das
int3
call
iret
lock
ds
les
out
leave
loope
mov
in
sub
fcmovne
cs
ret
lock
loop
ret
sub
nop
sbb
jecxz
cli
aaa
cmp
out
cld
cli
cmp
call
cli
test
cmp
xchg
fsubr
iret
rorl
cmc
enter
fnstenv
aad
add
neg
in
sti
aam
mov
fcmovbe
mov
xor
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
jmp
rol
lret
aad
mov
mov
and
or
jle
call
out
vpsrlq
shr
jmp
cmp
mul
sub
fimuls
in
fdivrs
in
cld
cmp
cmp
not
shl
cld
cmp
out
test
fdivr
in
fisttpl
xor
aam
fucom
adc
cmc
xchg
cli
jmp
fucomip
out
incl
clc
fadd
ljmp
std
cmp
cmp
rcr
lret
sti
repnz
out
icebp
test
rol
cmp
lret
dec
cmc
aad
filds
adc
lret
in
loop
into
out
cmc
int
int3
cli
aad
cli
xlat
fucomp
sti
fcomip
cmp
addl
loop
ljmp
ror
fmulp
fcmove
stc
icebp
loop
cmc
cmc
ffreep
xlat
loop
in
ljmp
icebp
jmp
cmp
fnstenv
aas
cmp
addl
lret
mov
cmp
out
jmp
out
cli
in
in
adc
repz
jmp
ljmp
loope
loopne
jecxz
lret
xor
lret
ds
or
out
orb
in
leave
xor
out
aad
aad
rcl
call
repnz
out
fmull
in
jmp
xlat
int3
xor
int
std
aad
lret
cli
cmp
mov
addl
addb
cld
out
cld
int3
roll
rcr
in
aas
lea
ficoms
int3
fmul
shll
cmp
cmp
fdivr
clc
ffreep
fmull
popl
loope
das
out
repz
xor
fcomi
lock
ret
sti
jmp
mov
jmp
xchg
repz
aaa
rcl
stc
fsubrp
idiv
fdivp
iret
and
cli
fcomp
and
mov
aad
out
int3
hlt
xor
test
adc
add
add
add
ror
aad
fldt
sbb
or
jle
cmc
cmc
clc
test
ret
fldl
xchg
jmp
xchg
fisttps
jecxz
leave
out
sti
in
xor
idiv
repz
ret
mov
jecxz
aad
ror
cli
div
into
std
hlt
xor
loop
fucom
call
fmul
ror
icebp
xchg
loopne
repz
xorl
clc
neg
ffree
out
iret
jecxz
int3
or
aam
aam
ss
ds
aad
sti
ds
out
fucomp
std
into
mov
lret
fdivrs
cmc
cmp
out
aas
aas
jecxz
out
testl
iret
jecxz
jmp
enter
loop
lret
jecxz
stc
out
and
cld
mov
out
loopne
ljmp
int3
cmc
into
in
fsub
cli
fcmovnbe
fcmovnu
xchg
xchg
fdiv
cli
leave
lret
icebp
xchg
clc
loop
lret
fcom
cmp
ds
in
jmp
test
stc
jecxz
hlt
mov
out
in
xor
aaa
lock
cmp
fdivr
lock
cmp
orl
ror
fdivrl
int
int3
stc
fcmovnbe
mul
adc
ljmp
out
out
hlt
cmp
stc
fcmovnu
repnz
jmp
aam
fucomip
incb
mov
mov
call
aam
xor
rcr
repz
stc
out
fcomi
jmp
std
fsub
cld
test
loop
int3
cli
aad
fcmovnu
cmpb
add
addl
std
out
sti
xrelease
cmc
jmp
std
fcmovne
adc
rcl
mov
jmp
leave
fnsetpm(287
in
mov
repnz
repnz
das
fdiv
in
jmp
lds
and
test
rolb
xor
int
test
into
cmp
into
fadd
fadds
clc
mov
mov
jmp
aam
iret
int3
fst
outsl
fmull
xchg
mov
push
daa
jle
or
jle
in
mov
loope
loop
enter
xor
xlat
aam
loop
fscale
les
leave
mov
loopne
in
lret
shl
sub
hlt
in
div
into
clc
sbb
testl
mov
fcmove
sub
aas
ljmp
clc
in
idiv
icebp
xor
icebp
jecxz
repz
enter
loop
in
mov
xor
out
loopne
out
loope
cmp
xor
leave
leave
fdivr
lret
std
mov
icebp
cmc
test
out
xlat
ss
cmp
fcmovnu
fmul
rolb
call
cld
icebp
int3
rolb
xor
into
stc
shr
std
ljmp
aas
out
add
mov
xchg
dec
rorl
sub
icebp
sar
repnz
loop
loopne
loop
aam
fprem
loopne
nop
xchg
aad
xor
into
ret
lret
cmp
cmp
loop
repz
stc
lret
leave
xchg
in
bnd
cmp
in
lret
repnz
cmp
into
test
cli
leave
ret
fildl
rclb
lret
shrb
fdivl
cmp
out
std
imul
sbb
in
fsubp
repz
in
clc
movl
bnd
loopne
xchg
leave
mov
rcl
icebp
in
out
iret
filds
shl
xchg
enter
lret
shl
mov
hlt
rol
sti
aad
cmp
cmp
ror
adc
fsub
loop
std
mov
rcr
mov
jmp
cld
in
loopne
clc
rcr
fdiv
rorl
and
notb
xor
cmp
fcmovbe
out
not
jecxz
loope
std
mov
lret
repz
iret
cmp
jmp
cmp
out
in
cli
leave
incl
iret
xchg
int3
repz
in
add
add
add
leave
xlat
int
fstp
cltd
sbb
andb
jle
add
std
dec
cld
aas
std
in
cmc
stc
cld
fcmovb
fdivr
fcmovnb
in
leave
out
leave
cli
iret
into
sub
cmp
sti
xlat
xor
out
adc
out
jmp
enter
mov
aaa
stc
in
hlt
cmp
cmp
xchg
jmp
fiadds
rcr
call
lret
idiv
xor
repnz
incb
in
fucomi
stc
lret
icebp
fsubr
icebp
iret
stc
cmp
call
in
repnz
cmc
add
sti
repz
jecxz
orl
call
ljmp
iret
sar
cld
test
and
orl
adc
not
lock
cmp
out
ljmp
bnd
lret
in
iret
ljmp
test
into
aad
fcmovnbe
ljmp
clc
cli
hlt
incl
icebp
shl
loop
in
sarl
xlat
fsubrp
fiadds
loop
fadd
hlt
out
out
int3
mov
faddp
into
lret
shl
sarl
cmc
sub
into
neg
shl
and
test
out
in
shl
idivl
cli
aaa
not
fdiv
aas
repz
out
mov
fcomip
out
cmc
loop
lret
lret
out
in
aaa
fucomip
into
aam
lds
mov
adcl
out
xor
xor
leave
sar
hlt
std
f2xm1
jecxz
clc
out
jecxz
jmp
mov
out
ljmp
repz
ror
idiv
ljmp
xchg
mov
enter
in
lret
xchg
stc
into
xor
hlt
cmc
iret
aam
cld
jecxz
hlt
cmp
int3
jmp
in
subl
fadds
add
loop
mov
xchg
out
xchg
lret
lret
cmc
test
rol
rol
mov
testl
mov
mov
mov
jmp
rol
xlat
int
arpl
mov
inc
jp
or
sub
or
jle
fucomi
mov
lret
lock
nop
nop
shl
shl
divb
repz
cmp
ret
xchg
xchg
test
shr
out
in
movb
in
fmul
fadds
cmp
lock
cld
decb
mov
repz
fcmovnu
std
leave
test
cmp
fcmovnbe
mov
enter
jmp
out
out
cs
repz
cmc
lret
fadd
shl
fld1
leave
mov
out
shl
xchg
das
jecxz
iret
out
out
cmp
lret
xlat
shr
and
test
repz
nop
loop
aaa
cmp
ss
cmc
aam
push
sbb
lock
ret
out
nop
leave
fsubp
hlt
loopne
enter
in
fsubp
ljmp
cmp
faddl
cli
mov
cli
ss
div
hlt
sti
xlat
aas
lock
fstpt
idivb
fcomp
in
into
in
cmp
ffreep
jecxz
ljmp
shl
loopne
sti
neg
in
cld
loopne
fucomip
std
decl
mov
int
loope
out
fmulp
cmp
cld
shl
xlat
add
mov
mov
sti
cld
repnz
in
sub
repnz
fdiv
std
roll
test
fstl
clc
aam
xor
lret
cmpb
xor
xlat
call
lock
out
loop
hlt
in
cmp
out
int3
cmp
hlt
cmp
icebp
cmp
sti
call
out
jmp
mov
in
repnz
cmp
aad
aad
cli
rol
cmp
cli
rcr
loop
jmp
hlt
das
loope
aaa
in
out
iret
jmp
ds
rcl
test
in
xlat
fdivr
std
ljmp
ret
lret
xor
repz
out
repnz
sar
xlat
test
mov
mov
int
neg
mov
jmp
enter
ret
xorb
data16
jle
out
jecxz
not
adc
icebp
rcr
out
repz
hlt
orb
jecxz
test
icebp
lret
mov
cmp
aad
cmc
aam
cli
out
xchg
repnz
shl
iret
fdivrs
clc
jmp
shl
in
cmp
xor
test
int3
add
push
mov
out
loop
ret
sti
fstpt
xor
in
and
ret
sti
test
mov
aas
ror
mov
lea
loope
icebp
int
fdivrl
neg
aad
ret
xor
in
rol
jmp
shr
cmp
aas
xor
iret
repnz
fprem1
mov
shr
test
int3
aad
fidivs
repz
idiv
sar
loop
cmp
aad
test
leave
in
enter
lock
icebp
vmaskmovdqu
cmp
loope
int
out
cmp
aas
cli
fcomp
sub
rol
mov
shl
jmp
mul
out
ljmp
cli
ret
lock
sar
mov
in
in
mov
jecxz
in
leave
sub
fadd
fnstsw
neg
cld
lock
rol
vpaddusw
jmp
fmulp
les
hlt
imul
fsub
hlt
stc
idiv
in
out
repnz
in
ffree
test
ffreep
jecxz
ffreep
lock
loopne
in
out
xor
in
aad
jmp
cmp
sti
ret
shr
jmp
xchg
out
sti
in
jmp
aas
hlt
rcr
cmp
flds
cld
test
faddp
fstp
leave
in
stc
jmp
cmp
in
sti
into
icebp
mov
fsub
cli
rorl
shll
shlb
out
cmp
rcr
cmp
div
repz
aam
cmp
out
fcmove
test
cmp
hlt
ss
cmp
roll
shl
test
repz
lret
out
sti
lret
dec
xchg
das
loop
xor
div
fcom
aas
lret
ds
mov
xor
jmp
leave
xchg
aaa
cmp
loopne
das
jle
or
jle
sti
test
jmp
sar
mov
test
call
jecxz
fcmovbe
aas
iret
cli
lock
icebp
xchg
jmp
loopne
mov
nop
repz
aam
xor
aad
lret
adc
cli
rcr
fcomip
ljmp
lret
iret
sub
clc
into
out
xor
ljmp
cli
test
in
int3
shr
lret
nop
jecxz
xor
fcmovbe
fadd
cmp
ds
aad
div
flds
xchg
mov
fcmovnbe
into
cmp
repnz
lret
fcmovnb
aam
fdiv
fmull
repnz
rcl
fxch
call
aad
roll
out
fdiv
test
jmp
loop
mov
lret
xlat
icebp
cmc
fprem1
in
cmp
lret
hlt
aas
out
cmp
lock
aam
repz
fcompp
into
test
xchg
jecxz
repz
stc
int
faddp
mov
clc
fucomi
out
test
jecxz
std
pop
fbstp
out
cli
ret
cmp
cmp
rcl
lock
idiv
fcmovnb
test
sub
shr
mov
das
int3
out
jmp
ljmp
iret
push
jmp
xchg
lret
xchg
and
loop
fdivr
fsincos
cmp
lock
loope
out
in
enter
in
enter
fucom
jmp
jecxz
neg
aam
xor
cmc
in
test
rcr
test
cli
out
rcll
les
cmp
fxch
cmp
loop
sti
fincstp
xlat
jmp
out
cli
loope
aam
xchg
ss
call
out
into
test
in
aad
rolb
loopne
shl
mov
ror
out
lret
repz
std
fsub
fld
sar
cli
xor
leave
stc
loope
into
lret
aam
mul
xor
leave
in
into
repz
rcl
lret
enter
fildl
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
jmp
into
lret
fcmovne
into
fistpl
adcl
fdivl
jle
or
jle
in
hlt
hlt
shl
xor
lret
cmp
hlt
cmp
rol
std
movl
xor
out
out
rcr
fidivrl
flds
out
orl
mov
ret
xor
aaa
loopne
fsin
shlb
faddl
jmp
nop
fxch
repz
aaa
cmp
rcr
fldl
jmp
lret
icebp
jmp
xchg
test
test
lret
leave
int
in
fcmovu
std
aad
loope
testl
shlb
int3
lock
sti
cli
sti
faddp
shr
loope
cli
jmp
into
mov
hlt
fiadds
hlt
fcmovb
aad
shl
loop
loopne
repz
testb
filds
out
jmp
cmc
ds
aaa
rcr
cmp
call
loopne
les
test
lea
out
out
cmc
enter
cld
int
std
out
bnd
test
iret
call
xchg
lret
hlt
aaa
cmp
sarb
cli
loopne
aas
repnz
mov
stc
test
cli
incl
clc
lret
int
repnz
imul
fdivrs
cmc
rcr
fmul
call
test
mov
xchg
test
rol
call
lock
stc
hlt
cmc
xchg
fisttps
ret
loope
int3
enter
aam
sar
fadds
neg
fsubp
out
int3
ljmp
call
stc
sar
fdiv
ds
aas
loopne
neg
mov
mov
shl
rorl
out
stc
int
cld
xlat
sar
test
out
cmpl
addb
in
add
int3
aam
icebp
cld
fdivrs
in
aaa
loopne
jecxz
cmc
adc
mov
hlt
orl
cmp
stc
ror
mov
mov
add
jmp
ret
enter
int
aas
icebp
jg
insb
fcompl
xor
or
jle
out
xlat
fiaddl
sti
aad
leave
in
repnz
xchg
enter
ret
xlat
cli
repz
aam
shl
adc
hlt
ljmp
xor
mov
lock
out
lock
sti
enter
loope
cld
cmc
testb
lret
orl
xor
cli
idiv
cmc
int3
cmp
cld
cmp
add
out
or
lret
lret
lea
ror
jmp
in
lret
leave
cli
xor
in
aam
idivl
call
addb
out
in
iret
xor
lret
in
cld
repnz
into
stc
fdivrl
loope
sti
fdivrp
hlt
lret
stc
call
aam
out
in
cld
hlt
fcmovnu
out
clc
cmp
fistpll
ret
hlt
loopne
ret
iret
out
in
mov
in
shr
and
cmc
fcomip
repz
cli
out
out
ror
xchg
rcl
enter
das
idivl
fadd
div
aaa
lock
rol
ljmp
loop
ffreep
test
aad
hlt
into
ss
in
in
cmc
cli
test
sti
xlat
loop
call
jmp
mov
enter
iret
aam
cmp
rcr
std
and
jmp
sti
lret
and
iret
notb
stc
clc
jmp
loop
add
roll
imul
clc
enter
xchg
xchg
aaa
mov
out
cmp
std
xlat
in
out
test
inc
enter
xchg
cld
rcll
cmp
aaa
fnstcw
aaa
loopne
xor
sar
aad
mov
leave
hlt
fstp
test
std
in
lret
fnclex
cmp
loope
aam
stc
mov
out
orl
cmp
sti
in
ss
cmp
cmc
mov
jecxz
xchg
std
inc
aam
xor
lds
out
lock
rcr
cmp
aas
aad
cli
cmp
xchg
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
jmp
rcl
rcl
rcl
aad
xchg
stos
gs
xlat
scas
clc
xor
jle
icebp
fmull
aad
leave
xor
icebp
int
cmp
in
aas
aas
loope
fdivrp
out
leave
enter
in
roll
icebp
ret
stc
out
lock
fdivp
fdiv
loopne
fcmovu
test
xlat
xchg
iret
xchg
loop
int
ss
out
out
repnz
int3
stc
fdiv
into
aad
hlt
fsub
lret
sub
call
aam
shl
in
fsub
rcl
aaa
adc
imul
test
cmc
loope
fisttps
xchg
cli
stc
enter
push
fadds
xlat
cld
mov
lock
into
shll
xor
out
das
xor
jmp
loop
call
sub
clc
jmp
xor
xor
enter
imul
cmp
fucom
in
sar
in
cmp
fcomp
out
inc
xchg
shl
shr
cs
cli
in
icebp
xlat
into
cmp
cmp
clc
sti
mov
out
mov
nop
jmp
shr
repnz
xor
cmp
out
cmp
test
std
loopne
ror
repnz
stc
into
fcomi
cmp
call
clc
out
cli
cli
cmp
enter
cmp
repz
imul
int
rcl
xor
cmp
in
aam
call
fsub
in
sti
shr
shr
mov
leave
xor
cmp
fscale
or
iret
aad
cld
fcomp
int3
enter
nop
and
ror
aam
fst
repz
ds
fsubr
test
add
cld
mov
stc
mov
loope
xchg
fbstp
imul
int3
ss
into
loopne
lret
cmc
cmp
aad
mov
div
jmp
mov
fcmovnu
test
sub
xlat
into
out
test
ret
xlat
fsub
loopne
aas
xchg
jecxz
sub
lock
out
lret
int
jmp
xlat
xor
div
loop
rolb
mov
enter
call
or
mov
pushl
call
mov
jmp
enter
int
int
repz
xchg
jle
or
jle
ss
jmp
cli
ret
jecxz
call
loop
test
jmp
aad
in
cmp
rcl
cmp
rcl
flds
loope
lret
cmc
aam
call
lret
xor
fldln2
roll
test
in
repnz
rcr
iret
sub
cmc
rol
loopne
in
cld
ret
aam
add
flds
iret
xchg
fadd
into
aam
cmc
xlat
in
fnstcw
stc
call
stc
jecxz
in
fsubr
xchg
sti
xchg
loope
lret
xor
cmp
int3
loop
aam
ret
fcmovbe
std
cmc
out
enter
shl
mov
into
out
shrl
ror
iret
hlt
loopne
cmc
jecxz
cld
hlt
in
stc
xchg
in
loope
fsubrp
nop
xchg
orl
fidivrs
idiv
fdiv
sar
rcl
sti
fsincos
loopne
cld
fsubrp
lea
cld
cli
das
fstp
int3
cmp
sar
into
xchg
stc
repnz
lret
int3
faddl
mul
fcmovnbe
xor
aas
sti
loop
rol
flds
in
ljmp
in
mov
lds
cmp
sarb
rcl
repz
fcomp
fadd
sbb
in
ret
test
jmp
into
fcom
xor
aam
icebp
in
xlat
add
rol
call
xchg
out
clc
leave
enter
sar
iret
cmp
test
in
fcmovne
xchg
aam
idiv
lret
out
in
in
call
shr
in
testb
sarl
in
loope
in
leave
jmp
in
fucomip
in
repz
cmc
out
int3
ror
in
sub
ret
aas
mov
test
ror
out
enter
ss
icebp
std
fdivr
sti
out
icebp
xor
in
loop
int3
loop
idiv
lret
icebp
rcl
fcomip
iret
sar
aas
inc
call
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
mov
movl
mov
movzwl
xor
mov
jmp
aad
aas
fst
int3
aad
adc
mov
cmp
cmp
jle
cmc
out
int3
xor
ror
out
cmp
filds
in
stc
in
enter
cmc
cld
loop
shr
repnz
in
xor
out
repz
xor
aad
repnz
iret
enter
jecxz
out
or
shll
leave
loope
int3
lret
sti
cmc
cld
fcomi
lock
rolb
neg
loope
int3
in
enter
nop
xor
xor
in
lret
rol
out
cli
loop
enter
fcmovbe
cli
orb
lock
in
ljmp
fcomp
into
lock
mov
in
shr
xchg
out
shr
aad
cli
rcl
mul
loopne
aad
xchg
out
loope
xchg
frstpm(287
ljmp
clc
call
inc
inc
iret
adc
fsubrp
std
loopne
test
fucom
mov
repnz
repnz
idiv
lret
loop
repz
orl
mov
mov
jmp
jecxz
int3
xor
xlat
imul
fdiv
aas
aas
cmp
fmulp
jecxz
mov
enter
nop
int
ljmp
ss
aam
test
cmp
shr
call
std
lds
in
enter
cmp
xor
in
sti
xchg
icebp
xchg
fcmovu
clc
xchg
loope
decb
enter
in
ds
into
div
rol
or
jmp
xchg
test
lock
lret
cmp
fidivrl
ljmp
stc
leave
ljmp
loop
out
out
iret
lret
aaa
int
lret
shr
icebp
cmp
enter
std
cli
mov
out
aas
loopne
stc
in
lock
ljmp
hlt
cmp
fsub
jecxz
ljmp
ljmp
cmp
std
sti
cmp
fcmovu
fxch
cmp
sti
ffree
mov
mov
xchg
fsubrs
das
fld
iret
out
cmp
out
cmp
ret
aas
in
leave
fnclex
out
leave
test
int3
call
divl
dec
jmp
sar
cmp
aad
xchg
shrl
ret
or
xorl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
xorl
xor
cmp
je
mov
mov
sub
add
mov
andl
mov
sub
andl
xor
jmp
into
int
fstp
aam
or
mov
jle
add
jecxz
fcmovnu
lret
orb
call
enter
rcl
std
cli
in
sar
xchg
fcmovu
addl
cmp
aaa
shlb
std
out
sti
aad
into
incl
std
in
adc
mov
shr
call
int3
cmp
xorb
cmp
sar
cmc
aad
loop
sbb
ljmp
fstpt
imul
shr
lret
jmp
rol
test
icebp
fucom
mov
test
fucomip
test
rcr
stc
into
jmp
cmp
jmp
mul
fimuls
cmc
loope
jecxz
leave
out
fcmove
out
hlt
cmp
loop
cmp
std
hlt
add
cli
leave
xlat
xchg
cli
loopne
nop
aad
cmc
loope
repnz
idiv
loope
ret
enter
in
loope
mov
out
jecxz
out
repz
ljmp
jecxz,pt
aad
mov
filds
test
loop
les
xor
sarb
fcomi
stc
adc
adc
mov
out
push
loop
mov
iret
icebp
ss
jecxz
hlt
call
in
mov
lret
in
test
enter
jmp
xor
frndint
aad
jmp
jmp
idivl
sti
mov
rolb
ljmp
clc
sbb
loop
out
fcmovb
lret
cli
call
rolb
lret
out
cs
and
cld
xchg
clc
lret
filds
rorb
ret
cmp
fistpll
cmc
neg
cld
iret
out
aas
sar
xchg
fldl
repz
in
loopne
in
sti
jmp
lock
sti
repz
loopne
xor
in
in
std
lock
leave
cmp
ljmp
xlat
stc
rol
sti
out
loope
in
in
xchg
in
divl
cmp
ror
jmp
ds
icebp
cmp
in
sti
call
jecxz
int
into
xor
repz
in
fdivrl
mov
inc
ja
add
test
add
mov
subl
jmp
leave
rol
ret
int
cwtl
stos
cltd
fs
in
pop
xchg
adc
jle
cmp
jle
enter
xor
rorl
shr
aaa
call
aad
idivb
ds
test
popl
repnz
in
lret
sti
lock
std
cmp
out
or
icebp
icebp
rclb
repz
ss
cld
icebp
in
stc
test
imul
mov
int3
fsubp
flds
into
loopne
div
fdivrl
cmp
ds
in
xlat
shl
call
mov
lret
loop
nop
in
loop
shr
aaa
in
ljmp
fcmovne
neg
mov
xchg
lock
addl
fdivr
xor
loope
xchg
clc
sbb
repz
fmull
loopne
repz
aaa
xor
idiv
fsubr
lret
in
fdivrs
addb
shl
neg
lret
loope
nop
mov
sub
hlt
enter
in
cmp
cmp
in
aam
add
icebp
jmp
xor
fyl2x
lret
cmp
fdivl
les
mov
mov
out
lret
fcmovnb
out
int
repz
hlt
mov
fptan
xlat
jmp
lret
test
xchg
xchg
out
cld
enter
cmp
fndisi(8087
icebp
cmp
xchg
enter
ljmp
cmp
xor
lock
cmp
fcmovb
lock
stc
aad
in
addl
repnz
fidivl
int3
xlat
fdiv
ret
xchg
leave
call
repz
rcll
jmp
les
lock
leave
addb
sub
and
fsub
fcmovnu
hlt
mov
cmp
int3
rcr
aam
fnstcw
out
in
in
out
ffreep
enter
lret
mov
or
mov
and
sti
cmc
in
enter
int3
sarl
fdivrp
rorb
mov
jecxz
lock
loopne
lock
cmp
cmp
loopne
roll
jmp
ljmp
xor
shl
loop
xlat
xor
sti
cmp
cmc
out
test
lock
movl
jmp
mov
incl
xor
jmp
into
into
rol
rol
rcl
mov
or
imul
jle
add
fsubp
aad
aam
fadd
sub
xchg
mov
loope
fcmovnbe
xor
cmp
cmp
cmc
ds
test
lret
lret
mov
in
shl
sti
xor
test
out
int
iret
fsub
add
ffreep
ljmp
int
lock
xor
ds
aam
in
jecxz
stc
aam
not
aam
out
out
in
ljmp
xor
xor
iret
shl
aas
ret
loopne
mov
repnz
and
rol
clc
cmp
in
sar
jmp
ljmp
out
test
aad
iret
xlat
cmp
aam
out
out
std
cmc
ret
out
out
lret
ljmp
xor
out
int
clc
cld
ret
out
lret
inc
loope
out
in
rcl
ret
sti
in
xorb
loop
call
shl
ret
cmp
and
orl
in
aam
ss
in
sar
aad
sti
stc
cld
ret
mov
enter
mov
jmp
shr
icebp
shl
bnd
fchs
in
ljmp
xchg
mov
aad
leave
lret
ror
filds
repz
out
clc
sti
shr
lret
aam
xchg
icebp
iret
lret
hlt
in
hlt
dec
sarb
xlat
rcr
orl
icebp
xchg
rol
jmp
cmp
cli
aas
stc
ror
in
iret
fstp
fadd
fsubp
jmp
in
mov
cmc
cmp
xlat
repnz
loopne
imul
fnstsw
sar
movl
test
ljmp
fucomip
xor
loop
cmp
sti
shl
test
aad
loope
and
xor
cmc
aaa
aaa
aaa
idiv
jmp
icebp
faddl
mov
sbb
test
in
xor
aaa
std
cmp
hlt
cli
loopne
ret
sar
ret
leave
fucom
lds
shr
div
ss
lock
out
out
lret
loopne
loopne
ret
cld
inc
add
push
add
add
leave
lret
aad
flds
test
lods
mov
jle
cmp
jle
ffreep
cmp
xchg
into
cli
out
xchg
cmc
aad
out
into
out
stc
xor
adc
xlat
out
decb
rclb
ss
cmp
addb
repz
fmulp
xchg
vpsadbw
lret
ss
ljmp
out
ret
testl
hlt
rol
lret
fpatan
icebp
fabs
int3
rcl
sti
and
stc
rcl
cld
jmp
in
aad
aas
rol
in
aad
aaa
cld
test
out
loope
loope
movb
repz
repnz
ret
cmp
call
xlat
int
out
sub
movb
sub
loop
jmp
ss
jmp
imul
stc
testb
mov
test
mov
cli
test
mov
xchg
lret
lret
sti
rcl
fnstcw
loopne
aad
xchg
leave
sar
mov
lock
jecxz
lret
out
ljmp
mov
cld
test
xchg
loopne
mov
jmp
fstpt
cld
clc
xor
icebp
in
rorb
in
cli
lret
cmc
xor
rcr
xor
cmc
cmp
rolb
mul
rcr
fxam
aam
enter
repnz
idiv
std
push
lock
shr
cmp
rolb
out
sti
decl
test
repz
cmp
shl
fcmovbe
sub
test
ljmp
clc
repnz
lret
ret
sti
stc
repz
int3
xor
out
ret
test
jecxz
fldln2
orb
rcl
xor
mov
ss
clc
rcr
hlt
testb
int3
jmp
nop
xchg
jmp
hlt
cmp
ss
in
jmp
icebp
loope
test
sti
jecxz
cld
shl
fdiv
lds
iret
int
call
in
sti
fcmovnbe
idivb
aam
fiadds
ljmp
out
and
ret
jmp
repnz
mov
jmp
iret
fmul
aad
clc
sub
mov
dec
les
cmp
jle
xor
not
decb
out
fisttpl
xchg
icebp
int
cmc
stc
in
out
lret
icebp
jmp
xor
fsubp
adc
loope
out
mov
xor
cli
shl
clc
jmp
dec
loop
or
mul
into
leave
test
into
ss
fmul
in
ds
ror
cmp
div
out
test
enter
rcll
repnz
shl
into
int3
in
fdivrs
loop
cld
and
mov
test
shl
hlt
ret
iret
enter
aad
jmp
cmc
in
shr
loope
jmp
in
out
enter
into
cmp
in
out
ds
aam
fdiv
sbb
repz
mov
in
cs
lock
stc
aad
cmp
loopne
loop
cmp
enter
cld
lret
fcmovne
rcl
rcr
ret
test
enter
stc
xor
shl
fimull
xchg
fsubp
jecxz
xor
imul
aam
lock
sarb
aad
ret
sti
stc
fucomp
jmp
and
inc
fucomp
leave
xor
loope
rcl
out
ljmp
in
repz
idiv
stc
shr
test
out
sub
in
sar
xor
cmc
out
clc
iret
fidivrs
shl
sub
enter
leave
hlt
out
loop
lret
jmp
xor
leave
into
ds
repz
cmp
aad
fiadds
in
mov
fcmovne
cmc
ror
aad
xor
sarb
not
test
fmul
xchg
repnz
cld
shl
hlt
loopne
cmp
fcomip
sar
test
mov
icebp
fstl
out
das
aaa
cmp
leave
ds
in
cmp
loope,pt
imul
iret
loope
in
xchg
in
sub
icebp
jmp
sarl
sar
cmp
into
test
xchg
test
mov
in
jmp
cmc
call
addb
out
fst
fimull
fdivr
fst
repz
aaa
out
cmp
xor
add
mov
jmp
mov
mov
jmp
rcl
xlat
fcmovnu
rcr
in
repnz
insl
jnp
push
sub
jle
cmp
jle
call
aad
loope
fsin
shl
orb
xchg
repnz
sub
enter
cmp
clc
fcmovbe
rcr
out
addl
jmp
std
popl
ret
cs
rolb
rcr
xchg
ret
fmull
addl
aam
cli
fcom
jmp
ret
aas
inc
xlat
cmp
std
in
ljmp
jecxz
into
cmp
sti
idiv
sti
lock
loop
out
fdivp
ret
fimull
test
xchg
out
cmp
fcom
jmp
stc
aam
aad
mov
leave
out
out
repnz
test
cld
int
fdiv
imul
std
icebp
repnz
jecxz
jecxz
mov
filds
jmp
int
xor
xor
hlt
cli
shr
aad
stc
aas
xlat
lret
cmc
sbb
fucomi
in
sub
ror
cmp
ret
fld
fcmovu
addl
xor
in
xor
sarl
leave
xlat
in
jmp
fcmovnu
out
jmp
jmp
in
test
in
shl
fucomi
hlt
cmp
cmp
cmp
cmpl
mov
orl
xor
repnz
aam
cli
cmp
int3
rcr
cmp
fiaddl
add
fucomip
xchg
into
xchg
mov
in
enter
cmp
ror
cmp
mov
std
fcmovne
icebp
repnz
hlt
hlt
out
xor
icebp
fnstcw
cmp
testl
enter
in
out
shr
loope
out
ret
aad
lret
jmp
in
int3
fucomi
aas
add
lret
mov
loope
int3
in
in
loope
rcl
shl
fcomi
fcmovnbe
cmp
xor
repnz
test
fsubrp
ljmp
repz
into
rol
lock
std
ljmp
jecxz
mov
sar
lret
ljmp
imul
sarb
into
ror
repz
fcomip
out
loop
repz
cmp
iret
mov
repnz
int3
mov
xor
repz
aad
rorb
jmp
enter
fcmovnbe
fcomp
insb
jae
fisubrs
and
jle
add
aaa
in
cmp
xor
xor
aad
cli
iret
mov
sti
xchg
loope
into
hlt
aad
ljmp
cmp
cmc
div
xchg
call
in
mov
leave
sub
cli
out
repz
cld
ret
fimuls
leave
rclb
jecxz
xor
in
xor
int3
std
cli
fnstcw
sbb
test
not
shll
ds
add
idivl
std
enter
loop
nop
int
loope
jmp
xor
repz
ljmp
in
out
cmc
fildl
mov
enter
in
nop
sub
neg
enter
rcr
loope
hlt
testb
jecxz
enter
int3
rol
jmp
int3
rcr
jmp
sbb
std
movl
orl
in
cmp
fdivrs
cmp
aas
cli
clc
enter
in
sti
in
mov
xor
jmp
cmp
std
xchg
rcl
fadds
xchg
leave
lret
fsubrp
loopne
xlat
fldl2t
fcmovnu
fprem
cmp
lret
sbb
mov
mov
in
sti
out
mov
in
mov
call
iret
into
icebp
fstp
fidivrl
sti
fdivrl
fiaddl
aam
clc
int3
fucomp
mov
ret
shl
in
cmp
jmp
sub
xor
idiv
test
cli
mov
call
out
out
xor
cmp
cld
cmc
sub
loop
les
xlat
mov
lret
rcl
in
xchg
xchg
xor
ljmp
cmp
loop
test
xlat
aad
stc
jmp
out
ljmp
ret
lret
idiv
fcmovnbe
std
sarb
std
shl
cmp
loope
xchg
rol
fldln2
xor
repnz
in
hlt
mov
cld
mov
sti
mov
mov
rol
mov
enter
fcmovu
fcomi
icebp
fsub
cli
int3
mov
sti
test
out
xchg
xchg
int
iret
jmp
cmp
add
or
push
add
add
lret
ror
lahf
jmp
imul
add
out
aaa
leave
aad
roll
stc
test
hlt
fldl
in
or
shr
repnz
out
aas
in
ret
out
rolb
in
xchg
in
or
in
jmp
out
sti
in
int3
out
ror
fmulp
int
loope
rcr
and
xor
ret
mov
test
test
loop
enter
int3
fcmovbe
in
repz
vshufps
xchg
in
ret
in
lret
xor
in
fcomp
shr
loopne
out
xchg
loope
out
in
fiadds
aaa
lock
shl
lret
jmp
rol
out
repz
mov
lret
jmp
out
lock
rcr
lret
cmp
hlt
rol
xor
cmp
sti
sar
int
stc
test
icebp
repnz
hlt
shl
cmc
lock
cli
shl
loopne
hlt
loop
aad
mov
aad
lret
jmp
xor
hlt
cmp
aam
loop,pt
test
xchg
jmp
fsubr
aad
in
call
fucom
fcmovbe
fsubp
fdivp
ror
xchg
in
enter
mov
sub
cmc
ds
cmp
iret
test
fcmovnb
sbb
sti
ret
cld
lock
ret
lret
shl
hlt
or
cmp
in
leave
enter
fxch
mov
in
test
test
xor
fmul
repnz
fucomip
fmul
les
test
in
call
incl
enter
cmp
shl
incl
ret
clc
jmp
loop
ljmp
lret
cmp
repz
aam
shl
sarl
hlt
hlt
enter
mov
xchg
cs
das
call
idivb
aad
int
idiv
xor
stc
cmp
test
out
mov
xor
cmp
ss
aas
lock
in
sti
shl
xrelease
test
leave
in
rclb
out
stc
shlb
cmp
aas
add
cmp
clc
enter
out
mov
xchg
cmc
xchg
sub
call
push
mov
mov
xor
mov
jmp
ror
aas
fstp
int3
fisttpl
dec
shrl
inc
int
jle
add
call
addb
test
out
in
sub
in
fmul
cmp
call
iret
testb
test
cld
lret
sbb
hlt
leave
into
cmp
stc
ss
aam
clc
aam
fucom
out
loopne
rcl
jecxz
fucom
lock
mov
enter
fdivr
out
sbb
cmp
rcr
mov
cld
mov
shl
loop
nop
int3
lret
loop
hlt
stc
cmc
std
cmp
out
rcr
neg
clc
cmp
jecxz
test
xchg
addb
fucomi
hlt
std
cld
add
fsubrp
lock
cld
ret
loop
lret
iret
call
shl
jmp
aaa
div
jecxz
imul
mov
jmp
nop
mov
xchg
shl
sbb
xor
into
in
aaa
cmc
hlt
fcom
cmpb
addb
int3
xlat
in
hlt
int3
xchg
ljmp
cmc
lret
iret
add
incb
std
orl
leave
enter
ss
leave
loope
shl
fcos
test
rol
jmp
int
mov
cld
int3
shl
sti
cld
cmc
leave
cmc
out
cmp
icebp
loop
add
int3
leave
mov
in
or
lret
xor
fld
cli
ss
out
fidivrl
aam
aas
xlat
addl
in
in
test
ss
sarl
in
aaa
icebp
aad
shl
roll
loope
mov
clc
jmp
and
mov
hlt
in
mul
lds
std
out
fpatan
lret
stc
aaa
aad
ret
sti
rorl
loope
int
std
mov
aaa
xor
out
cmp
cmp
std
cmp
shl
cld
loope
call
mov
xlat
fsub
xor
jmp
rcr
add
out
out
test
test
xchg
repz
leave
aad
fdiv
hlt
ljmp
incb
mov
lret
cli
cld
shl
loope
xlat
out
xor
std
cmc
cli
rcl
fsubp
mov
incl
in
out
xorl
div
mov
and
or
jmp
ret
ret
rcl
aad
sbb
inc
add
jle
cmp
jle
rol
xor
cmp
fucomip
ffreep
rol
cmp
ljmp
jecxz
in
test
test
neg
aaa
out
cmp
sti
fidivl
fcmove
cli
ljmp
in
jmp
jmp
iret
lret
clc
cmp
cmp
test
jecxz
out
filds
xchg
enter
ss
ror
dec
fdivrs
loop
rol
in
clc
loopne
mov
mov
lret
out
sarb
fcomp
in
stc
cmp
iret
fcomp
cmp
shl
inc
jecxz
mov
xor
test
ljmp
xor
jmp
cli
stc
add
std
test
int3
in
mov
mov
out
xor
cmc
or
repz
cmp
lds
mov
mov
adcl
fsub
idivl
imul
sarl
mul
repz
loopne
in
clc
neg
enter
xchg
fcmovbe
cmp
repnz
aad
cmp
in
clc
xlat
jmp
fucomp
shl
das
shl
in
fsubrp
std
loope
cld
sti
cmc
sbb
shl
fmuls
ret
enter
in
xor
rcr
divb
jecxz
loop
out
repnz
stc
loope
lock
mov
lock
hlt
icebp
cs
repnz
xor
hlt
in
roll
lret
loop
lret
sbb
cmp
in
out
not
out
jmp
shl
hlt
fcmovbe
out
sbb
jmp
in
nop
enter
jmp
idiv
cmp
lret
fiadds
cli
ret
addb
orl
leave
std
cmc
fstp
leave
aas
clc
cmp
fst
repnz
int3
mov
iret
repz
rcl
shl
fucom
call
xlat
std
testl
aam
ret
ror
xor
cmp
ret
cmc
sti
int3
xchg
xchg
repnz
xchg
jmp
ss
in
aaa
div
loopne
fldpi
stc
iret
loope
loope
mov
out
clc
mov
enter
ffree
enter
ret
push
mov
jmp
lret
aad
int
ss
shrl
aaa
jns
sarb
adc
jle
enter
not
fcomp
cli
repz
aam
jecxz
loope
orl
icebp
sub
sar
int3
sarl
jmp
iret
repnz
shl
cmc
leave
mov
int
shl
std
jmp
int
aam
out
sti
fadd
fsubr
fdiv
fcomp
in
stc
in
mov
in
test
addl
into
xlat
cmp
xor
idivl
jecxz
out
test
repnz
fimull
cmc
hlt
in
ror
out
jmp
cli
aad
cli
out
hlt
loope
mov
in
int
rol
cs
rcr
std
xorb
fsubr
fcmove
cmc
sti
fiadds
mov
in
mov
xchg
cmp
repnz
out
aas
shl
ds
out
ffreep
test
fsub
jmp
out
jmp
lock
aas
iret
fcmovbe
cmp
cld
cmp
rol
xchg
cld
ljmp
mov
ljmp
in
fdivp
call
loopne
sbb
icebp
fisttps
in
aad
jmp
leave
shr
cmc
fidivrl
hlt
out
fdivrl
xor
and
int3
in
dec
in
rcl
xor
out
stc
aad
ss
neg
loope
clc
repnz
test
mov
loop
in
lret
repz
clc
out
cld
lret
hlt
fnstcw
loope
lret
ffree
adc
testl
icebp
hlt
into
out
in
lock
xlat
in
enter
repz
rol
cmp
orl
icebp
out
in
out
aam
in
int
aad
hlt
push
stc
jecxz
out
loopne
test
leave
fsubr
jmp
in
orl
xlat
xor
icebp
cld
in
repz
lock
div
ret
lds
stc
int
xchg
in
hlt
cmc
loopne
iret
int
iret
aaa
out
aaa
aad
shl
and
fadd
cmc
ds
cld
mov
jmp
cmp
jmp
in
xor
jecxz
cmp
sub
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbbl
jmp
ret
ror
int
outsb
xor
rcl
jle
adc
jle
out
fldz
leave
cmp
nop
int
xor
cmp
jmp
test
in
or
in
cmp
fsubr
fstp
out
fcmovne
loop
vaddsubps
shr
rol
call
test
rcl
xchg
xchg
xlat
out
cli
int
loopne
adc
lret
xor
leave
fprem
cmp
fcmovnb
fcom
sti
enter
out
out
adc
adc
das
out
repz
call
rcl
fcomi
xchg
mov
fisttps
out
in
iret
mov
ret
out
fidivl
cld
out
lock
test
fstp
out
lret
loop
test
out
out
cli
enter
test
cmpl
enter
loope
loopne
repz
leave
jmp
out
shl
xor
sarb
fiadds
adc
in
stc
enter
jmp
out
jecxz
cmc
test
ret
lock
idiv
addl
out
fcmove
std
into
into
rcl
xor
sub
rcl
repz
fsub
rcr
hlt
mov
imul
in
std
mov
repz
fnstsw
aad
test
imul
movb
fdivr
iret
lret
loop
shl
sub
fcomp
cmp
int3
cmp
icebp
sar
rcr
xlat
iret
rolb
jecxz
enter
leave
hlt
ds
jecxz
ffree
hlt
test
out
mov
stc
mov
std
mov
cs
jecxz
lock
icebp
std
cmp
aad
cmc
sbb
out
rorb
ljmp
icebp
cmp
in
cmc
flds
std
into
fcom
jecxz
call
enter
leave
cli
sti
iret
fstpt
sti
rol
out
in
clc
fcmovnb
mov
ret
int
out
cmp
rcr
enter
in
mov
out
fcomi
mov
mul
aas
shl
jmp
ss
adcl
xor
mov
adcl
add
jmp
fcom
xlat
push
xlat
outsb
shlb
sub
adc
jle
xbegin
fucom
repz
stc
repz
cmc
mov
xchg
int
or
jecxz
cmp
xor
aad
out
mov
out
mov
lock
mov
stc
jmp
xlat
fdivp
icebp
idivb
testb
lock
lret
repz
repnz
lds
cmp
jmp
clc
ds
fisttpl
mov
out
fucom
in
mov
icebp
test
cmc
leave
ljmp
rolb
sbb
icebp
test
sub
test
lock
ljmp
repz
fadd
int3
xlat
ret
enter
in
out
cli
in
incb
lret
cli
jmp
in
adc
sti
cld
mov
in
into
xchg
mov
orl
cmc
aas
cmp
cmp
not
and
ljmp
jmp
int3
in
repnz
sarb
in
clc
in
fmul
fcmovnbe
fsub
mov
test
xor
loope
loope
mov
hlt
jmp
fst
lock
lret
aas
cmp
xchg
out
fcmovu
cmp
cmp
shl
mov
ss
xor
in
lock
ret
cmp
cld
test
ljmp
loope
xchg
xor
hlt
rcl
xlat
in
repz
in
out
in
div
adc
xchg
ljmp
xchg
loopne
out
fcmovne
ss
add
cmc
fyl2xp1
jecxz
fdivrp
mov
mov
xchg
mov
repz
in
cld
out
out
repz
loope
repnz
hlt
xchg
lret
jmp
jecxz
orl
loopne
sarl
lret
xlat
idivb
sti
jecxz
test
hlt
xor
loop
xchg
out
incb
jmp
into
ss
iret
hlt
cmp
sti
repz
fdiv
sbb
lret
ror
nop
xor
aaa
ljmp
cli
int
test
rol
icebp
aas
sti
cld
fcmovu
out
movzwl
mov
and
movb
lea
mov
jmp
rcl
rol
rol
rcl
mov
push
xchg
shl
jle
adc
jle
mov
mov
enter
in
fucomi
stc
into
repz
cmc
aam
fcmovnb
shl
lret
jecxz
test
lret
jmp
xor
ret
fsubp
mov
test
into
test
jmp
test
loopne
lret
jmp
xlat
cli
cld
int3
loope
fcmovnu
in
inc
ret
call
int
in
test
shlb
call
icebp
std
fst
testl
mov
xor
rcl
sarb
clc
out
out
std
lock
repz
in
mov
loope
shr
clc
in
shll
shl
xor
repz
repnz
fcmovnu
mov
nop
repz
xchg
xor
vshufps
lret
push
aas
rcl
fxtract
jmp
neg
int
fdivrp
jmp
std
shlb
ss
int
cmp
int3
lret
test
fstpt
mov
cld
rolb
cmc
int3
cmc
in
enter
repz
lret
stc
rol
mul
sub
leave
mov
push
call
jecxz
icebp
into
out
sti
leave
cmp
jecxz
neg
mov
ret
jmp
std
aaa
out
ret
xor
icebp
cmp
idiv
clc
test
fcom
clc
fsqrt
aad
leave
adc
mov
xchg
into
xlat
repnz
cmp
cmp
cmp
cli
imul
icebp
sub
lret
out
mul
mov
repz
jecxz
not
aad
aam
into
shl
hlt
cli
push
cmp
loope
filds
enter
xor
fdivrs
std
clc
out
sti
lock
iret
mov
and
test
jmp
xchg
shr
hlt
ror
aaa
fcmovnbe
cmp
cmc
loopne
fcmovnbe
cld
clc
aad
shl
stc
into
mov
xchg
cli
lock
xor
jecxz
out
ljmp
add
icebp
clc
testl
mov
ror
xchg
out
div
shll
xor
ds
cmpb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
push
push
push
push
call
jmp
mov
movl
xor
addl
sub
mov
sbb
movl
not
movl
andl
mov
mov
push
jmp
into
mov
fmul
iret
fucomp
sub
inc
and
lds
add
cmc
test
xor
mov
leave
fcmovu
cli
in
sar
repnz
in
xor
fdivs
clc
call
stc
hlt
loop
ds
jmp
stc
in
ret
incb
out
out
xlat
aam
cmp
fsubrp
shl
cld
lock
loop
clc
jecxz
leave
fimuls
loopne
xor
out
sar
repnz
sub
ret
cld
fyl2x
ret
xchg
ds
leave
fdivr
out
xchg
jmp
xor
repnz
in
shll
leave
int3
sti
fsubp
fprem
rcr
call
leave
cli
decl
subb
cli
out
mul
idivl
sar
adc
rcl
aam
loopne
out
stc
iret
mov
xchg
xchg
xchg
fcomp
lret
aad
fst
fcmovb
hlt
decb
mov
leave
jmp
in
in
addl
std
fdivrs
cmp
in
iret
out
flds
int
icebp
xchg
and
xor
xlat
neg
lock
test
imul
int3
cld
out
xchg
jmp
out
clc
in
sti
cmp
int
fstp
out
fcmovbe
aas
out
into
hlt
shl
lret
loope
sarl
xor
aad
std
cmp
aam
loopne
jecxz
cli
test
cmc
lret
out
int
lret
fucom
iret
loope
ret
hlt
dec
cmpb
aas
rolb
mov
xlat
inc
movb
in
hlt
int3
fadd
aad
in
cmp
hlt
std
jecxz
iret
sar
mov
les
cld
ljmp
ljmp
sti
in
inc
fiadds
mov
fucom
neg
loope
lock
int
aad
ss
in
ror
leave
xlat
cmp
loopne
hlt
iret
cmp
loop
out
fsub
in
repnz
in
not
out
sbb
fstpt
rorl
idiv
out
stc
mov
lret
xor
int3
xlat
xlat
fdivrs
cmp
idiv
sarl
fiadds
xlat
shl
loope
mov
or
mov
movl
add
jmp
movl
mov
mov
movl
inc
jmp
ret
xlat
rcl
lret
xchg
into
fists
cmp
adc
jle
add
cmp
hlt
in
cmc
out
imul
loope
cld
aad
ljmp
into
icebp
std
mov
loop
xor
fcomp
xor
cmp
ret
aas
loopne
jmp
cld
cli
hlt
fstl
cmc
shl
fucomi
jmp
cld
jecxz
rol
cld
loopne
test
lret
mov
xchg
shlb
jmp
jecxz
fildl
mov
iret
out
in
int3
loop
cs
leave
ljmp
aaa
loop
fiaddl
in
lret
fildl
xchg
int
in
aad
fsubr
iret
sti
clc
int3
clc
clc
sar
fcom
ret
out
xlat
in
out
loopne
mov
shrl
cmc
out
fucomp
lock
iret
roll
decl
leave
lock
iret
icebp
in
icebp
mov
ljmp
hlt
std
loop
fadd
ret
fucomip
mov
mov
mov
in
repz
faddl
in
clc
clc
ret
hlt
call
in
nop
std
out
aad
in
xor
cs
cli
std
std
out
jmp
aaa
fcomp
stc
mov
clc
imul
jmp
call
jmp
xchg
out
leave
shr
cmc
enter
div
iret
fsub
rol
ret
roll
or
cld
sti
mov
mov
lds
fidivl
aaa
div
sti
lret
adc
fiadds
std
iret
mov
jmp
jmp
not
xlat
sarl
aas
xlat
and
in
cmc
ljmp
mov
icebp
cmc
fadd
out
cld
ljmp
jecxz
adc
rorb
subb
cmp
in
cmc
icebp
xor
xor
cmpl
in
aam
in
enter
in
shl
cs
stc
jmp
std
std
sar
fcmovnbe
fnclex
cmp
xlat
mov
jmp
lock
ljmp
out
icebp
fstpt
lret
clc
rolb
addl
add
jmp
add
jb
dec
jmp
aam
fadd
fstp
pusha
shl
mov
insl
mov
jle
adc
jle
aam
loope
int3
sti
fdivp
rol
sub
aaa
das
repz
shl
xor
aad
fld
call
fadds
call
xchg
loopne
in
ret
rcl
xor
ljmp
sti
jecxz
orb
std
call
cmc
in
cs
imul
xor
out
int3
neg
cmp
test
xlat
loope
in
mov
mov
loope
in
xor
ss
fdivrl
cmp
cmp
decl
xchg
in
loopne
out
jmp
stc
xlat
cmp
testb
roll
lock
hlt
repnz
in
out
addl
cmp
fxch
int3
into
int
sub
xor
out
xlat
leave
ljmp
cmp
lret
mov
xchg
aam
sub
shl
std
sar
out
cmp
ret
loope
fcomip
incl
mov
mov
cmc
fxch
cmp
out
xor
clc
cmpb
cld
rolb
test
mov
cmpl
iret
divb
testl
incl
fstp
loopne
xchg
xchg
aaa
shlb
fadds
ds
cmpl
jmp
xor
idiv
fdiv
jmp
loope
aad
cmp
loopne
fcomp
stc
cld
test
out
cmc
xchg
loop
cmc
aam
shl
lret
ss
loopne
jmp
in
in
lret
int
out
in
sub
xor
lock
in
incl
idiv
in
flds
rcr
cmp
into
repnz
imul
ds
fadd
cli
stc
test
mov
in
mov
rorl
repnz
fcmovne
std
aaa
cmc
filds
in
repz
fxch
ficoms
xlat
clc
aam
rorb
je
inc
add
inc
hlt
addl
jmp
fcomp
fistps
je
pusha
adcl
add
cmc
stc
lock
in
ffreep
into
shl
test
idiv
sti
lret
xchg
xor
bnd
xor
lret
fadd
fnstcw
ss
xlat
or
int
sub
fisttps
bnd
leave
shl
clc
xor
in
loopne
cld
or
into
into
nop
cs
cmp
divb
in
rcl
jecxz
out
cmp
roll
ret
test
ror
hlt
sti
into
sub
cmp
repz
repnz
or
int3
xchg
xchg
div
imul
cmp
into
cmp
cli
loopne
cmp
aad
sti
mov
int3
iret
lock
stc
div
out
xor
cmp
call
xlat
in
lock
mul
jmp
loopne
iret
xchg
in
lds
in
lock
out
loope
cmp
int
sti
loopne
ljmp
fmuls
ljmp
jmp
xor
aam
cmc
cmp
cli
fdiv
mov
in
ror
cmp
out
sti
sbb
rcr
ds
ds
fcmovu
std
int3
int
popl
lret
rol
cmp
int3
aam
fdivrs
call
jecxz
aad
fcmovnu
jmp
sti
fstl
enter
fldl2t
xor
cmp
icebp
std
out
out
sar
out
ret
rol
fst
leave
xchg
jmp
int
int3
icebp
leave
xor
cmp
aas
cli
fdivrp
ret
ds
stc
ret
cld
xlat
jmp
lock
add
rol
iret
lock
shl
shr
test
ret
xchg
aad
test
cmc
mov
fnstenv
repz
das
ror
jmp
idiv
sti
repnz
mov
aas
loop
not
xor
not
ret
clc
cmp
fcmovbe
std
aam
cli
mov
out
and
mov
test
clc
div
aaa
cmp
stc
in
jecxz
in
movb
roll
movl
cmp
movl
jmp
iret
aas
aas
ror
rcl
ret
pushf
mov
andl
jle
adc
jle
rorb
add
int3
imul
cli
sar
testl
lret
aad
addb
ror
into
hlt
in
out
fcomi
cmp
cmp
cmp
ds
mov
call
into
mov
mov
test
jmp
neg
ret
jmp
icebp
shl
cmc
loop
std
rolb
in
in
idiv
jecxz
out
jmp
repnz
rcl
loopne
cld
loopne
idiv
loopne
testb
out
hlt
fidivs
fadd
cmp
cmc
shl
cld
cld
mov
call
repz
std
aad
loopne
test
out
jmp
fnstsw
cmp
fmulp
icebp
jmp
jmp
jmp
jecxz
int
leave
cli
leave
clc
cmp
shl
cmc
testl
in
iret
shr
test
icebp
int3
enter
lock
fnstsw
sar
fadds
loope
mov
call
filds
fincstp
hlt
sti
cmp
sbb
cmp
fcmovu
ret
lret
mov
std
xchg
int3
orb
dec
shl
sar
and
not
fcmovne
faddl
int
sbb
xor
fdiv
repnz
call
jecxz
rcl
xabort
xlat
mov
lret
roll
xor
int
rcl
lock
fsubrp
fcomp
lret
fcomp
lds
in
hlt
iret
jecxz
loop
repnz
iret
ret
stc
ds
fsub
aad
fucom
jmp
xchg
cs
xor
int3
xor
xlat
sub
iret
icebp
sarl
out
fdivr
loopne
cld
in
xlat
jmp
loopne
repnz
add
in
cmp
stc
div
cld
xlat
cmp
shl
stc
addb
cmp
xchg
test
fdivr
out
idivl
cmp
decb
in
sti
lret
test
int3
repnz
cli
fcomi
clc
je
adc
jmp
int3
rol
aad
pop
pop
movsb
or
in
jle
add
mul
cmc
sar
shl
mov
xchg
sti
rolb
icebp
xor
xor
in
rcl
iret
rcl
ret
test
leave
fcmovnbe
test
mov
mov
into
das
shl
xor
stc
int
fmul
into
vpavgb
imul
lret
fcmove
fcmove
sti
fmul
in
xchg
cmp
cmc
out
clc
fcmove
in
in
ret
iret
test
cmp
orl
incb
clc
jmp
leave
out
stc
xor
cmp
fcom
addl
xlat
in
cmp
int3
mov
lock
aaa
cli
repnz
lret
imul
xor
rcr
adc
xchg
repnz
vphaddubq
ror
in
ss
leave
cmc
int3
sbb
iret
sbb
rorl
mov
out
repz
jecxz
not
out
into
repz
cmp
cmp
icebp
aad
ret
div
std
orb
xchg
enter
call
cmp
fcomp
xor
fucomip
loope
repnz
stc
stc
out
aad
cli
mov
ror
in
xor
cmp
in
call
out
decb
cli
xchg
loope
call
xor
in
cmp
jmp
ds
fcom
xchg
out
out
enter
repz
jecxz
in
loope
in
repnz
out
cli
clc
ds
hlt
fadds
sti
faddl
mov
into
sub
int3
cmp
into
xor
xchg
xlat
mul
xchg
cmp
fucom
rclb
aaa
xlat
aaa
clc
out
repz
not
int
ss
jecxz
aas
xchg
fucom
out
mov
filds
stc
jecxz
fsubr
lret
in
ljmp
mov
orl
loopne
dec
out
ss
hlt
clc
repz
fsubr
loope
cli
aas
or
loope
xchg
jecxz
ret
f2xm1
test
jmp
ljmp
out
out
cmp
jecxz
iret
sarb
mov
in
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
mov
mov
jmp
ret
into
sarl
rol
rcl
ja
cs
push
pop
jecxz
out
jle
add
in
sub
lret
neg
shl
leave
loope
cmp
xchg
not
fchs
xlat
ret
loope
sar
sti
in
fucom
divl
xor
shl
lret
f2xm1
aaa
call
aas
cmc
sbb
mov
out
fdivr
mov
call
shl
xor
shl
ds
shll
test
stc
loopne
or
leave
rcll
in
cmp
call
repz
adc
loopne
and
fiadds
xchg
jmp
out
xor
imul
lret
aad
lret
icebp
rcr
lock
in
test
icebp
out
addl
cmp
aaa
int3
cmpl
fdivr
std
std
jmp
fisttpll
std
repnz
in
imul
xor
repz
rcr
int
clc
fildl
xlat
mul
into
fimuls
in
enter
fmul
in
not
jmp
xlat
repz
in
repz
mov
out
int3
fcmove
in
mov
xor
iret
in
ljmp
iret
aam
mov
lret
int3
lret
fsub
repnz
repnz
cmc
cmp
jmp
xor
roll
cli
mov
jecxz
std
mov
xor
lret
ss
ffree
flds
fcomip
lret
orl
cmp
clc
in
fcmovnbe
xor
in
xchg
clc
ds
xchg
lret
xchg
xor
lret
int3
out
into
jmp
xlat
sbb
iret
repz
rcl
mov
enter
xchg
sub
xor
lret
shl
into
aas
into
cmp
icebp
fxch
cmc
fisttpll
adcl
cmp
fld1
jmp
aas
loopne
jecxz
test
in
mov
xlat
fsubr
std
test
lock
xor
aad
ror
incl
fcmovnbe
hlt
test
call
fildl
xchg
xbegin
aaa
fsubrp
aas
jecxz
cmpb
fisubs
inc
xchg
add
add
movzwl
mov
jmp
leave
aad
movsb
inc
jb
je
xchg
jmp
jle
ret
out
clc
fcmovnu
mov
xchg
jmp
lock
aaa
stc
ljmp
std
cmp
sbb
dec
out
enter
xchg
movl
into
fcmovnbe
aam
rcl
fcmovu
loope
in
ret
cli
shr
test
in
loop
lret
call
repz
aam
repnz
test
loop
in
rcll
hlt
aaa
cmp
lret
xlat
rcr
cmc
xchg
loopne
mov
mov
in
out
int
sarb
fdivl
cmp
int3
lret
loop
jecxz
loop
ret
std
mov
sbb
test
lea
leave
out
lret
out
lret
xor
roll
ret
cmp
mov
test
in
mov
xlat
jecxz
in
bnd
lret
into
stc
xchg
aad
sar
test
out
enter
orl
repz
ror
fcmovnu
xlat
clc
shl
fcomp
xchg
dec
loope
lock
out
xchg
and
out
out
cmp
std
ss
fxch
flds
rcr
or
call
lret
xor
leave
iret
test
ror
test
hlt
clc
jmp
int
in
aam
shl
hlt
aaa
clc
in
enter
cmpb
sar
dec
cld
mov
fcomi
and
sub
out
stc
cmp
shll
cmc
icebp
fildl
testl
ljmp
cmp
std
cmc
cli
cld
loopne
cli
cld
cli
hlt
mov
addb
fcom
out
enter
int
in
xor
and
testl
out
shl
in
ss
fprem
hlt
roll
jecxz
loope
mov
fxch
fimuls
mov
aad
aad
repnz
aaa
not
stc
fidivrl
repnz
in
in
aam
mov
movzwl
xor
add
jmp
ret
into
aam
aad
fst
stc
hlt
stos
xchg
test
jns
and
jle
adc
jle
lret
sar
repz
fdivp
cmp
fisttpll
in
loop
or
hlt
cmc
mov
cld
out
stc
aaa
out
loop
ret
orb
call
decl
xor
leave
int
ss
in
aad
lret
fmul
out
hlt
jecxz
int3
aad
fcmovnbe
hlt
loop
int3
fcmovu
cld
rcr
loopne
fisttps
in
jmp
out
mul
repz
cmp
lock
cmp
xor
shl
jmp
in
out
mov
clc
shrb
ret
lret
enter
int
test
aas
cmc
mov
std
test
test
mov
ret
repz
ss
neg
lret
int
fsub
hlt
in
in
mov
lock
mov
jecxz
out
aad
cmp
cmc
cmp
fstpt
call
idiv
inc
sti
in
std
loope
out
aaa
out
cmp
hlt
call
int
aad
out
sar
mov
lret
lret
icebp
lds
repz
xor
aad
aam
cmp
cli
sar
cmc
fsubrp
xchg
out
fsubp
loope
call
ds
out
shl
rcl
mov
test
filds
mov
int3
xlat
loope
in
jmp
clc
lret
cmpl
ds
hlt
cmp
aad
jmp
jecxz
xchg
xchg
out
ret
into
out
repz
shl
icebp
shl
cmpb
ret
enter
stc
mov
sar
int3
int3
fidivrl
ss
repnz
repz
stc
clc
rorl
out
in
int3
in
xor
xor
in
aad
cli
aam
int
loop
loope
clc
loopne
cmc
loop
xchg
int3
in
xchg
xchg
rol
xor
lret
in
repnz
cmp
sub
fst
out
jmp
fdivrp
mov
call
xor
ret
shlb
shr
rcr
mov
in
jge
mov
jmp
aam
aad
fstp
movsb
ficomps
xchg
xor
add
cld
leave
mov
mov
ret
cmc
fdivrs
fmul
fsqrt
ret
shr
fabs
out
mov
cmp
fiaddl
test
fsub
aam
jmp
lret
aaa
cmc
shl
ret
fcomip
cld
in
xchg
jmp
idiv
xor
out
jmp
shl
out
std
aad
fdivr
call
sbb
lret
jecxz
aad
xlat
rcl
xor
rol
fadd
ret
inc
cmp
in
in
in
aam
iret
icebp
xlat
lret
xor
in
in
loop
xchg
in
std
clc
lock
jecxz
xchg
mov
cmp
shl
cli
iret
in
out
fdivrp
fdivr
iret
jecxz
lret
jmp
out
out
in
xchg
loopne
loop
xor
ljmp
fucomi
lret
in
in
add
or
int3
stc
ljmp
xchg
ror
les
aam
repnz
aas
test
aad
cmc
hlt
aad
out
enter
mov
rol
cmc
ljmp
fiadds
fcmovnb
repnz
out
in
lret
lret
jmp
xchg
aad
loop
xlat
xor
aas
sar
shl
test
and
in
test
loopne
cmc
int
xor
out
rcl
cmp
xchg
lret
std
call
out
lock
clc
aaa
aaa
test
ret
cmpb
repz
int3
fsub
in
fninit
rolb
sti
fdivrs
aad
test
addl
lret
fisttps
test
out
lock
stc
cmp
lret
cld
jecxz
xlat
shl
in
call
std
xchg
xchg
call
repnz
lret
aaa
aas
in
clc
aas
std
fdivrp
shl
out
clc
mov
or
repz
cmp
out
hlt
icebp
imul
loope
aas
cmp
xlat
loop
enter
clc
sarl
lret
ror
mov
jmp
ret
lret
enter
int
cltd
movsb
imul
jle
xchg
enter
adc
jle
icebp
in
cmp
rcr
and
in
in
cld
les
cmc
lret
int
fxch
roll
aad
mov
jmp
out
cli
test
lret
iret
out
aaa
hlt
shll
out
shl
loopne
push
into
int
not
fcmovb
in
out
out
fdivr
enter
enter
rcl
call
hlt
cmp
test
mov
fdivr
movb
jecxz
xor
in
cmp
ljmp
div
xchg
test
nop
mov
ljmp
rcr
out
aaa
idiv
sti
cli
lock
lock
out
int3
out
mov
jmp
imul
lret
jmp
fst
into
hlt
int
neg
test
cmc
clc
loop
loopne
std
cld
int
in
repnz
call
aas
aas
jmp
ljmp
cmc
int
int
in
repz
aam
out
fidivrl
shl
jmp
lret
xchg
mov
out
sar
aaa
std
int3
jmp
test
test
and
out
mov
jmp
in
cli
rcl
iret
iret
loopne
int
cli
adc
std
fchs
aam
lret
xchg
decb
mov
in
out
into
cmp
fldl
call
roll
jecxz
in
in
lock
aad
cli
lret
cmp
fdivr
mov
sti
ffreep
int
test
xchg
xchg
shr
cmp
in
xlat
in
loop
addb
clc
fcmovne
jmp
jmp
xchg
jmp
cld
jmp
xlat
in
fdiv
aam
test
out
call
nop
jecxz
loop
out
ret
xor
repz
icebp
sti
test
testb
std
fildl
fcmovnb
out
das
xor
out
xlat
cmp
filds
xchg
xchg
xchg
inc
jmp
iret
ror
fcmovnu
out
mov
fcomi
jle
adc
jle
aam
test
xlat
ror
lret
sti
ljmp
ret
out
and
fninit
mov
mov
xchg
out
fsubp
aam
lock
fxch
cli
jmp
xlat
or
mov
jmp
in
shr
clc
in
out
repnz
cli
cmpl
cmp
cmc
mov
lret
xchg
xor
mov
jecxz
ror
das
iret
div
ror
lock
jecxz
jmp
call
mov
std
incb
hlt
ror
fistpll
shl
out
cli
aad
call
neg
jmp
call
jmp
das
jmp
out
and
mov
xchg
sti
out
rclb
iret
cmp
xor
ffree
ret
mul
loope
enter
repz
bnd
in
call
in
fsubp
fdivrs
clc
jmp
enter
lret
loope
loop
rol
cmp
cld
sti
cmp
loop
hlt
cmp
in
lret
xchg
mov
out
hlt
xor
fcmovnb
fsubrp
stc
in
hlt
loopne
cmp
xchg
fst
sti
fldl
loopne
out
clc
rol
out
cmp
aas
sar
les
xlat
aad
test
loope
int
mov
rol
lret
aad
faddp
cmp
lock
loop
test
repz
aam
enter
in
int3
iret
shr
icebp
ljmp
icebp
xlat
out
fdivrl
xlat
cld
into
icebp
ret
fucomp
ret
jmp
jmp
lock
xor
in
cli
ret
repnz
xlat
out
aam
cli
ret
cmp
xchg
jmp
int3
lret
xchg
xchg
cli
rorl
shr
jmp
aas
aad
jecxz
iret
icebp
cmpb
hlt
jmp
xchg
jmp
repz
das
lret
sub
cli
cmp
cmp
jmp
nop
out
fistl
jmp
ror
xorl
cmp
movsb
repnz
lcall
sub
add
int3
into
fmul
fsubrl
in
jecxz
jg
outsl
scas
out
repz
adc
jle
sbb
mov
xchg
mov
out
lock
xor
cli
in
repnz
inc
xlat
leave
ret
xchg
xchg
int
loope
out
stc
int3
fidivrs
rcr
fucomip
repz
std
in
out
inc
cld
std
lret
divl
out
in
out
iret
cmp
clc
repz
ds
loope
aam
jmp
mov
xchg
in
repnz
das
enter
shl
jmp
incb
sbb
loopne
lea
in
iret
lret
int3
cmc
fsub
vpaddsb
in
in
aas
hlt
ds
repnz
out
xchg
jmp
shl
out
fcmove
cld
in
cmp
int3
fsub
cmp
aaa
shl
clc
jmp
leave
in
loopne
mov
xchg
xor
clc
cmp
cmp
call
std
int3
call
imul
leave
test
out
in
ffree
aam
mov
into
jecxz
incl
lret
in
lret
xor
adc
fisttpll
in
leave
mov
fcomip
loopne
rcl
into
cmp
xlat
rolb
loopne
mov
in
test
jmp
xchg
shll
aam
mul
jmp
ret
rcr
not
mul
mov
mov
int
int3
stc
loop
jmp
shl
cli
in
repz
sar
repnz
test
int3
leave
std
leave
leave
lret
lock
in
lock
jecxz
out
cmp
int
shr
repz
test
div
int
jmp
fcmovbe
in
decb
lret
lret
repnz
ss
out
aas
cmp
icebp
loopne
sti
in
call
mov
hlt
shll
cmc
cmp
fstpt
jmp
std
into
ret
lock
sbb
fcom
ret
jmp
enter
rcl
out
jmp
xor
fsub
repnz
rol
lock
out
xchg
shl
xchg
int3
xor
jmp
ret
ror
aam
mov
or
adc
jle
repz
in
clc
hlt
jmp
in
loopne
xlat
xchg
xchg
fcmovnbe
fsts
xchg
out
das
stc
xor
aam
aaa
sarb
aas
ljmp
aas
out
in
fcomp
in
mov
mov
rolb
call
call
out
xor
cld
fdivr
add
mov
fdivp
aad
rcr
shl
stc
fndisi(8087
repz
out
jecxz
in
ret
lret
push
lock
ret
in
icebp
fcmovbe
cmp
fdivp
cmp
shl
fcmovnu
enter
fucomip
mov
out
stc
fnstcw
leave
clc
loopne
sbb
cmp
ret
enter
and
ljmp
jmp
idivl
ljmp
aas
jecxz
fucomi
testb
loopne
xchg
ret
leave
mul
xlat
jmp
aad
xor
out
and
imul
into
nop
fdivr
enter
nop
in
cmc
jmp
aam
hlt
fcom
cmp
loop
in
clc
in
in
enter
enter
ffreep
loop
ror
out
fstpt
lock
aam
cld
ljmp
in
ljmp
lret
cli
sar
into
cld
jmp
repnz
rol
mov
lea
les
fdecstp
repnz
cmp
fucomi
cmp
cli
mov
leave
mov
repz
fsubrp
or
sarb
repz
cli
cmc
jmp
icebp
push
icebp
fst
orl
lret
ljmp
cmc
ljmp
fnstcw
fiaddl
xlat
lds
hlt
xchg
loope
enter
xor
fiadds
loop
hlt
mov
std
nop
or
shlb
aaa
cli
cmp
hlt
roll
repnz
ret
cld
mul
neg
fsubr
out
out
addb
aam
cli
cmc
cmp
cli
fst
cmpl
faddp
sti
in
mov
mov
jmp
xlat
lret
aad
aad
int
jle
and
xchg
idivl
adc
jle
in
orl
enter
hlt
fidivrs
lret
cmp
rcl
mov
loopne
loope
stc
sar
lret
test
lds
xor
cmp
fdivrl
in
lret
loope
ljmp
iret
ret
ror
pushl
cli
clc
fdivr
adc
fptan
in
mov
out
fcmove
fildl
int
sub
aam
into
cld
cli
hlt
shl
mov
add
sti
mov
jmp
out
xor
repnz
iret
fxtract
cmp
jmp
enter
iret
lock
xchg
mov
cmp
div
leave
int3
xlat
out
repz
out
rcl
addl
les
lock
hlt
jmp
cmp
repnz
fxch
loopne
loop
fsubp
mul
call
in
cmp
and
aam
repnz
in
mov
std
jmp
test
call
iret
aad
fildl
xchg
repz
ret
repz
aaa
cmp
divl
inc
loopne
mov
icebp
xchg
cld
fxch
call
cmc
rol
hlt
aam
jecxz
fdivr
ds
sti
faddl
call
stc
out
ljmp
ljmp
jmp
cli
icebp
addl
stc
test
cld
in
in
sub
in
ret
stc
hlt
int
in
aad
int3
cmc
sar
xlat
cmp
fimull
rorb
out
aad
stc
rol
xlat
fdivr
int3
in
cli
aas
repz
fdivr
clc
std
mov
jecxz
lock
jecxz
icebp
xor
jmp
repz
sar
sar
div
testb
xchg
shl
div
cmc
shll
ret
into
enter
fcmovbe
int
shl
out
aas
in
test
in
out
out
aam
xor
in
xor
cli
repnz
add
mov
mov
xor
add
jmp
lret
rcr
aad
fsubr
xor
adc
add
cmp
jecxz
cli
div
fidivrl
in
loop
ljmp
mov
loop
rcr
aam
loopne
lret
loop
int
ret
out
ljmp
pop
jmp
lret
sub
in
neg
cmp
cmc
in
cmp
xlat
test
enter
loop
call
rorb
xor
in
xlat
idivb
not
xor
xor
rorb
fucomip
lret
rol
idiv
fcmovne
icebp
lret
cli
out
in
xchg
cmc
in
loopne
cli
repz
rcr
lret
clc
ss
lock
cmp
hlt
out
rcl
test
call
enter
call
sub
out
out
sti
lret
in
clc
neg
aam
rcr
not
xlat
jecxz
fimull
mov
xlat
sub
stc
sarb
sar
int3
cld
fnstcw
cmp
fstpt
rolb
mov
icebp
xor
loopne
lock
idivb
lret
fadds
add
out
int3
in
call
int3
into
sub
fucompp
clc
ret
repz
cli
mov
sar
mov
xchg
sbb
out
test
lock
repz
fdivrs
in
addl
xchg
stc
nop
lret
fcmovne
mov
out
in
lret
rcr
xor
aam
jecxz
ds
roll
mov
loopne
jmp
repnz
ljmp
xor
cmc
aam
out
sar
mov
in
into
test
cli
lea
int
repnz
iret
int3
aam
in
repnz
jmp
mov
loope
repz
out
not
cmp
int3
enter
rol
cmc
dec
in
cmp
stc
icebp
int
cmc
int
das
shr
out
hlt
ds
idiv
cmp
out
sti
leave
ljmp
shl
ret
shl
clc
loope
shl
ret
call
ljmp
or
add
add
iret
enter
int
xchg
cmpsb
push
ja
inc
addr16
mov
add
in
out
std
xchg
in
lret
enter
call
div
cmpb
loopne
fcmovbe
test
icebp
in
rcl
xchg
mov
ss
ss
fmulp
cmp
div
ffreep
shl
sbb
hlt
call
out
lret
xchg
aas
xor
not
imul
ror
incb
rol
xchg
rcr
idiv
xchg
mov
loope
jmp
fcmovne
cs
shl
in
fildl
ret
std
lret
enter
out
out
or
loope
shr
leave
fnstenv
aas
jmp
aad
jecxz
xor
jecxz
std
in
cli
xchg
rolb
enter
std
iret
ds
clc
cmp
repnz
jmp
int
jmp
int
mov
jmp
ss
in
fdivrs
std
aad
cmp
jecxz
xchg
fadds
icebp
and
jecxz
repnz
xlat
jmp
aaa
loopne
loopne
test
aad
call
mov
cmp
cli
fsubr
out
cmc
fcompp
aas
into
in
sti
xchg
ljmp
decb
xor
lret
shr
and
cmpb
fcomi
jmp
orl
in
cmp
hlt
fsub
into
jmp
hlt
xlat
not
fcmovnb
out
in
mov
nop
and
icebp
enter
cmp
xor
int
hlt
aad
cld
rcr
clc
mov
fsub
fsubr
nop
repz
ret
fdivs
fdivrl
into
in
xor
aas
aam
cli
in
cmc
hlt
loop
lret
jmp
out
lock
in
xor
hlt
jmp
cmp
loope
repnz
jmp
cmp
into
fucomip
aam
lret
fsubr
in
call
xor
ror
fdivp
enter
sbb
out
call
out
enter
repnz
xlat
out
out
icebp
ds
out
ljmp
shr
rol
xlat
ljmp
ds
xlat
push
mov
mov
cmp
jmp
lret
fst
int
test
cmp
dec
std
jle
adc
jle
xchg
testl
in
xchg
call
xor
xor
xor
shl
fdivl
sar
shl
aas
ret
fsubr
aam
vpxor
in
fstp
mov
in
out
jmp
div
int
or
mul
out
lret
int
jecxz
xchg
loop
xor
stc
jmp
into
clc
std
in
hlt
std
cli
ror
xchg
test
mov
iret
out
cmc
or
imul
fidivrl
enter
jmp
clc
cld
test
hlt
fmulp
out
inc
fdiv
jmp
xchg
loope
das
in
cmp
not
ljmp
int
test
test
xchg
hlt
fcoml
mov
repz
out
rcr
cli
fcmovnbe
in
in
repz
rcr
shl
out
cli
lea
xchg
mul
into
cmp
xor
xlat
push
int3
repz
fcmovbe
shl
enter
test
in
call
cs
leave
enter
ds
cmp
shl
roll
vpsubsb
incb
cmp
repz
sti
hlt
stc
dec
addl
in
fucomi
or
leave
xrelease
cmp
cmp
lret
cld
sarb
jecxz
rolb
in
fcmovne
lret
in
xor
test
leave
cmp
jecxz
test
jmp
fisttps
xchg
loopne
ret
out
shll
cmp
loop
jecxz
aas
ffree
out
lret
iret
into
out
ljmp
iret
in
aam
sarl
ret
mov
fimull
mov
out
adcb
cmp
cmp
neg
fdivr
lock
jecxz
call
loopne
cmp
std
fidivs
cmp
stc
out
in
sti
aam
cmpl
fiadds
test
out
xchg
cs
iret
repz
lret
cmc
std
cmc
out
lret
and
aam
decb
ret
sti
out
call
test
inc
or
push
or
sub
add
xlat
into
rcl
aad
fadd
mov
adc
inc
push
pusha
jle
adc
jle
icebp
xor
fsubr
cmp
cmp
test
cli
incl
out
cld
std
out
ljmp
aad
xor
in
in
cld
dec
repnz
shl
repz
jmp
cld
adcl
in
shll
repz
cmp
loop
fcomip
fcmovu
repz
in
into
cld
jmp
cmc
in
ret
cmp
lock
into
ljmp
int
xchg
fcom
fcmovnb
mul
jmp
adcl
shll
lret
in
cli
rcr
shl
test
mov
hlt
nop
iret
aad
das
sub
clc
iret
rcr
xlat
cmc
int
hlt
aam
out
mov
lret
mov
mov
ret
shr
enter
stc
in
cld
stc
out
shl
fcmovnb
aad
xlat
cmp
out
int3
int
cmc
aaa
out
cli
cmp
cld
lret
ret
iret
or
call
int
faddl
test
mul
fxch
xor
fucomi
ret
rol
fdivr
std
mov
xchg
xchg
xlat
ljmp
ljmp
xlat
aad
lret
in
incl
das
out
fdivr
lock
idiv
stc
ror
idivl
adc
repz
cli
int3
stc
xchg
cld
xchg
ror
rcl
ret
xor
mul
test
loop
loopne
mov
flds
lret
jmp
in
in
neg
repnz
aam
enter
hlt
cmc
call
aam
xlat
aad
lret
fnsetpm(287
std
test
hlt
out
in
xlat
cmp
aad
shr
stc
shll
lret
repz
sti
cmp
lret
in
test
xchg
test
xchg
nop
jecxz
shll
jmp
jmp
hlt
out
neg
fsub
loope,pt
cmp
jmp
call
int3
icebp
ret
lret
out
fsubr
ds
loopne
faddp
ds
rcr
lret
stc
out
leave
in
ficoms
loop
xor
aad
cmp
lret
aaa
in
aad
cmp
jmp
ror
enter
lret
add
jmp
adc
jle
test
testl
shl
xlat
out
leave
fmul
lret
sub
cmp
repnz
mov
in
loopne
lret
out
lock
loope
lds
repnz
cld
xor
clc
ret
sti
repnz
in
sti
out
addl
xchg
clc
in
in
xor
in
iret
and
fld
roll
in
ljmp
out
fucomip
lock
leave
sti
sti
hlt
cmp
cmp
out
in
loope
mov
stc
in
les
in
int3
lret
ljmp
aad
fdivrp
neg
fabs
int
repz
fcmovbe
fsubr
fnstcw
xor
hlt
ffreep
clc
sar
ret
add
cld
rol
std
fisttpll
out
in
lret
out
fstpt
fprem1
test
stc
addb
test
fisttpll
jmp
not
ljmp
xchg
cmp
fimuls
rcll
cmp
cmp
enter
fcmovu
sub
and
fsub
fcmovnu
jmp
out
or
out
clc
shr
fcmovu
icebp
xlat
in
loopne
icebp
repnz
cmp
out
shl
mov
aad
ret
cli
aam
in
lret
sti
aad
std
aad
rcl
repnz
aam
fcom
mul
in
xchg
mov
jecxz
shll
aam
aad
xor
stc
loopne
into
xlat
shl
out
loop
enter
fcmovnu
into
lock
ss
fidivrs
cmp
jmp
cld
int3
cld
in
hlt
shr
jmp
lock
out
call
aam
lret
into
fdivrl
ds
iret
fdivp
repz
mov
and
lret
mov
divl
ss
loopne
repz
mul
loopne
out
xor
filds
in
xor
ret
aam
cmc
cmp
sbb
loope
icebp
fimull
iret
sub
filds
jmp
test
or
add
or
mov
jmp
int3
enter
into
push
mov
scas
push
jle
adc
jle
sti
xor
repz
cmc
xchg
stc
hlt
loop
fdiv
cli
addl
jecxz
xor
cmp
fsubrp
cmp
loope
iret
cmp
int3
fimull
icebp
mov
mov
into
ss
cmp
out
aaa
lret
in
out
cmp
out
fst
mov
loopne
lret
into
xchg
ljmp
xor
cmp
ds
aas
in
adc
div
neg
faddl
fiaddl
sub
stc
fmulp
cmp
cmc
cmp
test
loope
cmc
cli
ljmp
iret
in
int
iret
rol
cmp
rcr
loopne
ljmp
xchg
sbb
test
jmp
test
enter
repnz
shl
jmp
cmp
out
out
xor
aaa
aaa
lret
cmp
fcomp
sar
mov
loopne
clc
lret
in
xchg
adcl
cmp
fnstcw
xchg
in
lret
out
std
fucomip
addb
xlat
aaa
cmp
neg
fidivrl
hlt
ret
ret
test
rcr
aam
repnz
xchg
in
test
aad
fucomp
fsubrp
icebp
aam
icebp
cmp
cmp
stc
cli
aas
addl
xchg
out
loop
hlt
cmp
std
ds
shl
and
aas
aam
ret
test
mov
loope
test
int3
out
in
cmc
out
jmp
int
ds
idivl
div
jecxz
icebp
rorl
xor
fadd
stc
xlat
fdivs
clc
loopne
fcmovnbe
fucom
sti
lret
lock
lea
aam
cmp
fmul
loope
icebp
in
rcl
xlat
sti
in
in
jmp
int
jmp
ljmp
cmp
clc
or
clc
cmc
out
ret
test
orb
jmp
stc
cmp
ss
fnstsw
rcl
ret
and
loop
and
mov
rolb
add
inc
call
lea
jmp
sarl
aam
aam
fcmovne
inc
cwtl
sbb
sbb
jle
icebp
cld
hlt
iret
clc
lds
les
int3
cmp
int3
cmp
enter
fst
imul
fisttpl
call
cld
lock
int3
lret
int
lock
repnz
lock
orb
stc
icebp
into
ror
add
out
das
sar
cmp
repnz
xchg
jmp
fsubr
cld
into
fucompp
in
in
iret
xor
sti
call
loop
out
fildl
fiadds
iret
xchg
mov
icebp
ror
mov
ror
sarb
xor
int
test
call
jmp
xchg
lds
das
out
in
xor
and
sbb
jecxz
and
in
ljmp
xor
enter
fcmovbe
loopne
loopne
ret
lds
test
cmc
orl
int
aam
ret
loop
in
aam
shl
cmp
test
sti
cmp
addl
sub
ljmp
xor
mov
sar
rolb
in
call
lea
test
hlt
fcmovbe
shl
neg
jmp
cmp
sar
lock
std
test
xlat
mov
jmp
in
xchg
xchg
loopne
loopne
in
cmp
in
repnz
leave
stc
out
xlat
aas
test
lret
int
ljmp
xlat
cmp
not
fidivrs
cmp
aad
fcmovnu
sti
xchg
out
stc
fcmovu
xchg
mov
out
cmp
cmp
lret
clc
cli
cld
out
xlat
mov
std
test
out
lock
int3
aam
das
fdivrp
imul
fdiv
lock
xchg
loop
cmp
out
call
mov
xchg
jecxz
loope
cmp
iret
cmp
into
cmp
shl
push
out
in
jecxz
in
lock
xchg
int
ljmp
fucom
cmp
test
roll
test
lret
xchg
enter
rol
xor
fdivrp
cmp
out
mov
mov
addl
jmp
int
fcmove
fstp
adc
js
and
adc
jle
adc
jle
stc
cld
fld
sti
not
mov
sti
fstp
xor
aad
out
in
xor
ss
fst
shl
lds
ret
fmuls
repnz
in
aam
iret
fldlg2
lock
call
out
out
fdiv
aas
cmp
call
sti
lret
aas
rcr
shl
xor
sarl
icebp
shl
fcmovnb
loopne
fldlg2
cmc
mov
lret
xchg
fucomi
popl
cli
in
ds
repz
int
aas
out
div
cmp
fcompp
in
xchg
xchg
lock
xchg
xabort
ret
aad
icebp
lret
test
out
shl
in
out
xchg
rcr
hlt
ror
lret
call
loopne
cmpb
call
sti
dec
fdivrp
test
xchg
xchg
xchg
shr
jecxz
ror
lock
lret
into
cmp
and
push
call
jmp
sub
loope
ss
cmp
aam
hlt
bnd
ret
cmp
enter
fdiv
in
repz
xchg
jecxz
aad
cmc
clc
jmp
icebp
ret
fdivr
aas
fld1
xlat
cld
fadd
shl
int
hlt
cmp
fcmovu
loopne
stc
shl
iret
sti
jmp
int3
cli
movb
std
imul
ss
xor
fcmovu
imul
cli
repz
fsub
mov
lret
lret
std
into
jecxz
ljmp
fucomi
jmp
sbb
cmp
xlat
fucomi
sub
lock
xor
out
out
ror
adc
sti
shr
repz
mov
fmul
out
addb
xor
aad
fcmovnu
lock
jecxz
fmul
fcmovnu
mov
xor
repz
into
fcmovnu
div
in
addb
mov
orl
shl
call
ds
cmp
shl
aad
adc
fdivrp
sub
mov
fucomip
int3
testb
push
or
rorl
add
sub
add
into
aam
enter
fsubl
dec
pop
add
jle
adc
jle
xlat
ret
out
lret
aam
into
fmul
fadd
ds
in
aam
lret
sti
jmp
out
xchg
jmp
lret
lock
jmp
out
ljmp
stc
rcl
in
fisttpll
dec
icebp
aaa
loope
in
out
hlt
lret
repnz
rcl
roll
test
loopne
lock
subl
fdivrl
lret
iret
rcr
ret
and
loop
hlt
loope
rol
xchg
jmp
mov
in
loop
xlat
std
clc
xor
cmp
cmp
xchg
hlt
xlat
rol
mov
leave
in
out
fld
leave
out
xor
aas
lock
loop
test
aad
add
in
int
xchg
repz
icebp
xlat
shl
hlt
out
cld
cmp
fmulp
into
clc
rcr
fimull
fiadds
xchg
rcr
out
sub
loope
fsubrp
cld
stc
std
repz
ljmp
out
in
dec
shr
xor
stc
fnstenv
rol
test
cld
cmc
sar
sti
test
xchg
mov
loope
int3
lret
enter
out
cmp
loop
aas
ds
xlat
xlat
out
loopne
mov
addl
test
test
aad
loope
loop
cld
in
mov
addb
int
stc
xor
call
cmp
stc
in
mov
fdivrp
lret
ljmp
icebp
idivl
div
ror
cld
out
loop
ret
call
mov
in
xchg
fsubp
lock
repnz
icebp
in
out
in
aad
shl
xlat
test
stc
call
fld1
and
shl
lock
into
das
xor
clc
jmp
loope
into
loope
ret
fldl
mov
out
call
aaa
aad
xor
hlt
repz
clc
cmc
ljmp
mov
or
xor
test
out
fdivr
cld
sti
out
inc
or
inc
or
pop
out
decl
mov
add
mov
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
push
jmp
int3
rol
xlat
fstp
fst
mov
xchg
rorb
jle
xchg
loop
out
stc
nop
jmp
ljmp
call
loope
in
xor
icebp
aam
xchg
lock
cld
out
in
xorl
test
fidivrs
fcom
ret
iret
in
fildl
std
fimull
xor
cmp
cmp
lret
rcl
xlat
fmul
repz
mov
mov
ror
repz
hlt
stc
aam
sti
ss
lock
rcr
std
shl
testl
test
into
jecxz
xor
hlt
sarb
leave
xlat
faddp
aad
repz
clc
jecxz
call
enter
int3
xchg
out
xlat
stc
icebp
fnstsw
neg
jecxz
shll
aad
cmc
cli
fdivrp
test
fsubp
shl
test
das
in
ljmp
xor
ret
fiaddl
lret
out
fdivr
loope
jmp
xor
fidivrl
lret
in
std
cmp
sbb
ret
faddl
jmp
jmp
out
xlat
mov
cmp
lret
or
xchg
out
orl
in
test
cmc
cmp
ljmp
fiaddl
xlat
sti
loopne
iret
ljmp
xor
fcmovnbe
iret
xor
enter
in
cld
ret
enter
lret
mov
jmp
xchg
shlb
xor
sub
loope
ds
cmp
test
fsub
les
xchg
jmp
jmp
aad
call
shr
icebp
ret
enter
in
fsub
into
loopne
iret
test
sarl
clc
icebp
into
cmp
ss
loop
aad
jecxz
ds
rorb
int
in
jmp
sarl
xor
leave
repz
fadd
xchg
lock
in
jmp
xor
lret
iret
leave
repnz
jecxz
idivl
out
int3
repz
imul
fscale
idivb
sti
cmc
cmc
mov
rcr
out
jmp
cmp
in
sarl
in
cmp
stc
aad
in
mov
in
fsubrp
out
in
int3
shl
int
call
repz
in
lock
jmp
out
fcmovu
loop
jecxz
aam
ss
stc
rcl
cmp
in
cmp
filds
mov
test
mov
jecxz
out
icebp
jmp
test
jecxz
jecxz
fucomip
loope
leave
clc
in
into
fcomip
int3
out
int3
in
not
clc
cmp
aam
out
sti
not
sub
out
in
lea
aam
ss
aaa
int3
cmp
int
cld
mov
movl
add
jmp
rol
rcr
fld
pop
into
shll
adc
jle
test
aad
enter
iret
out
xchg
mov
divl
cmc
fcmovu
lret
cmp
fsub
xlat
cld
or
fcoml
stc
enter
call
jecxz
std
lock
decb
out
fldl
rol
aaa
jmp
aam
shl
out
sar
loope
fptan
cld
leave
fcomp
in
loopne
neg
repnz
int
jmp
out
rcl
fst
stc
shr
les
movb
aam
aas
loop
xor
xor
cld
rcl
fabs
aam
fisttpll
out
into
jmp
out
enter
icebp
out
aaa
enter
lock
xchg
jmp
lret
ljmp
pushl
sub
aad
std
leave
fistpll
ror
shl
cli
shr
out
lret
in
shl
out
clc
lret
repz
fldl2e
neg
ds
cli
faddp
filds
stc
in
jecxz
iret
iret
lret
xchg
call
out
cmp
dec
cld
div
ret
ret
hlt
adc
faddl
in
xor
aad
out
int3
sar
hlt
cmp
jecxz
not
shr
jmp
jmp
add
out
mov
into
neg
iret
stc
roll
jmp
nop
iret
ficoms
leave
int
jmp
test
clc
ret
sbb
cmc
sar
loopne
mov
xchg
shlb
aam
xor
repnz
jmp
xor
iret
cmp
repz
out
sar
rcr
rorl
int
cmp
out
ds
ret
xlat
ljmp
std
xchg
cli
mov
sub
icebp
cmp
in
loope
jmp
nop
jmp
xchg
nop
loope
ffreep
das
icebp
iret
cli
int3
cmp
shr
cld
loope
aas
jmp
enter
lret
loopne
cli
xchg
mov
xor
icebp
jmp
cmp
enter
fdivrp
les
hlt
out
leave
nop
icebp
loopne
in
into
xchg
shl
cmc
shl
vmovq
cmc
jmp
int3
in
decb
in
fiaddl
into
loop
fcmovnu
cmp
cmp
addb
cli
loop
loopne
or
adcl
shr
in
xor
fnstsw
rol
fdiv
or
leave
in
mov
rcr
stc
fcmovnb
int
cmp
cmp
test
lock
int
repz
loope
xlat
test
in
cmp
shr
out
fdivr
out
clc
hlt
fld
inc
cld
daa
test
inc
add
add
add
rolb
and
add
and
add
add
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
and
mov
jmp
aas
sarl
fcmovnbe
fcmovb
loope
add
cld
mov
jle
mov
shl
call
fildl
fsubrp
xor
in
jmp
lret
cmp
in
jecxz
ret
sub
call
loopne
aam
in
into
xlat
enter
jmp
hlt
sarl
hlt
sti
sar
loop
loopne
int3
lock
leave
adcb
jmp
aam
cmp
shl
cmp
xchg
jecxz
into
sti
fcmovu
hlt
out
xchg
shlb
out
xor
sarl
repnz
aam
loopne
loopne
stc
cmp
rcr
cmc
jecxz
sti
adc
shll
fdivs
cmpb
fadds
test
jecxz
lret
mov
rolb
loope
fdiv
repz
icebp
fdiv
fdivrp
into
xchg
in
jecxz
sti
xchg
call
fsubr
out
jmp
rcr
cmp
cmc
ror
loop
sti
mov
std
leave
call
out
call
jmp
std
fiadds
in
out
testl
xor
stc
sti
xor
ds
fidivrs
icebp
ds
mov
fcmovne
or
loope
jmp
out
cmp
repnz
hlt
xlat
shr
idivl
cmc
cmp
roll
addb
jecxz
into
nop
in
jmp
shr
out
into
out
fidivrs
fisttps
jmp
loopne
fcom
not
in
xor
repnz
icebp
jecxz
shr
fldl
orl
rol
icebp
xlat
fdiv
fdivl
ljmp
xchg
addl
cli
aam
call
clc
repnz
sti
hlt
fdivrs
loop
or
lret
jecxz
shll
clc
jecxz
lock
cmc
lret
fdivp
sarl
sti
icebp
aas
mov
fiadds
rol
rol
test
hlt
sub
jmp
test
xlat
mov
in
sti
in
call
incl
call
jmp
stc
cmp
cmp
jmp
fmulp
in
out
xchg
lret
out
aaa
les
fst
fdiv
xor
sti
cmp
test
fcmove
aam
int3
jmp
sti
iret
cld
cld
mov
cmp
cmp
cmp
in
rcr
aas
into
fnstsw
loopne
enter
shr
aam
in
repnz
in
lret
lret
or
faddp
out
hlt
or
and
ficoms
lret
mul
ss
lret
and
cld
testl
ljmp
out
cmp
cmp
xlat
int
icebp
mov
mov
adc
push
inc
mov
movl
jmp
into
aas
ror
rcl
sarl
xchg
lods
mov
mov
jle
xor
les
std
in
hlt
call
fcom
fucompp
sar
into
ds
hlt
xlat
mul
rol
sti
mov
orb
int
xabort
hlt
xor
int
lret
frndint
jmp
aam
orl
mov
fsubr
in
mov
ret
fdivrs
cmp
cld
in
cmp
fiaddl
int
in
int
icebp
xor
lret
rcl
cld
cmp
ds
clc
ds
add
div
aas
rorb
jmp
aam
ds
out
cmp
ret
repz
test
xchg
test
mov
aas
shl
in
fxch
std
sub
fadds
mov
cmp
loop
jecxz
fsubr
fdivrp
fcomi
sar
cmp
cmp
fcmovnbe
and
fldl
aam
int
out
neg
ljmp
stc
lock
jmp
enter
call
div
clc
lret
not
jmp
int3
sar
testl
loopne
loopne
ljmp
leave
cmc
fstpt
lret
stc
cmp
std
in
add
shl
hlt
call
icebp
cld
mov
xchg
loop
fxch
repnz
out
enter
and
cmc
test
hlt
aad
out
in
ljmp
aad
xor
cmp
cmp
cld
test
aas
lret
fcmovnu
shl
std
aam
hlt
xor
out
int3
xor
cmpl
flds
lock
fstp
int3
xor
divb
call
repz
call
icebp
rolb
mov
ret
ljmp
leave
in
hlt
cmc
out
sar
ret
cmpl
in
int3
int
hlt
xlat
cmc
aam
lret
cmc
loope
cli
not
fcmovbe
in
sar
aad
shl
loop
xchg
jecxz
fisubrl
sti
int
enter
sti
ret
mov
fscale
in
ret
test
fisttpll
in
cmc
cmp
sar
loop
lock
test
xlat
jmp
int
loope
hlt
mov
xchg
xor
lock
fcom
aam
fmulp
shr
in
cmc
cli
movl
loop
rorb
stc
jmp
aad
fstp
cmp
loopne
std
xchg
cmc
sub
testl
lret
fcmove
hlt
clc
in
jmp
std
fnstsw
testl
in
in
xchg
icebp
out
mul
rcl
shr
test
mov
jmp
rcl
aad
aad
shll
lcall
mov
cmp
out
shl
out
faddl
loop
xchg
aad
enter
int3
enter
cld
ss
shr
rcr
ds
mov
and
lret
out
in
rol
xlat
repz
aam
cmp
loopne
sar
xlat
xlat
fldl
iret
adcb
aaa
xor
fsubrp
fucomi
rol
iret
out
cli
mov
fcmovne
in
shr
out
loopne
shll
hlt
fdivl
out
lret
shl
aam
cmp
out
stc
repnz
lock
xor
xor
fcompp
ret
mov
mov
ljmp
lret
cmp
cmp
cmp
shl
out
sarl
fcmovbe
in
mov
lret
loope
nop
ss
lret
ss
cmp
shl
fdivr
cmp
shl
ret
xlat
lea
out
xor
out
cmc
fstpt
cmp
jmp
cli
out
hlt
jmp
lret
nop
loop
sar
rol
clc
xlat
rcr
test
shl
ret
out
repnz
shl
out
mov
enter
xchg
fstl
aaa
iret
cmp
cld
clc
sti
fdivr
loopne
faddl
stc
jmp
test
xchg
incb
aad
idiv
cmp
out
rolb
hlt
fstp
addb
loope
xchg
xchg
imul
cmp
out
cmp
stc
cmp
ds
out
cld
mov
loope
ljmp
vcvtpd2dq
in
aam
sar
lock
addl
mov
call
ljmp
jmp
repnz
ds
hlt
jmp
in
ljmp
imul
rol
clc
ljmp
out
in
mov
out
cld
loope
loope
out
clc
stc
hlt
ss
in
cmc
cmp
fdiv
ret
vpmaddwd
jmp
fsubrp
fmul
rol
cmp
cld
jmp
in
out
rcr
mov
clc
lds
fists
ror
xlat
das
idiv
aam
fcmovbe
iret
mul
in
ljmp
xchg
cld
faddl
out
ljmp
fcmove
fincstp
cmp
stc
aas
icebp
mov
out
ljmp
jmp
sub
ror
stc
xor
iret
xor
ret
decl
rcl
iret
jmp
out
iret
cmp
das
shr
icebp
loope
xlat
cmpl
repz
ljmp
xchg
ljmp
int
cmp
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
xor
mov
add
add
imul
mov
cmp
jmp
int3
rol
aad
aad
fpatan
int3
and
dec
mov
or
jle
fcomip
jmp
repnz
std
rcr
repz
rcl
out
enter
lock
ljmp
sti
sti
test
test
xlat
incb
das
rcl
leave
sar
int
sti
int3
ljmp
fildl
sbb
xchg
dec
mov
icebp
divl
lock
cmp
lret
rcl
sti
out
leave
cld
test
cld
fsubr
test
lock
aam
lret
lret
rcr
loop
repz
sti
out
lret
int3
out
out
leave
nop
enter
into
out
xor
xor
call
fucomp
fdivrp
bnd
test
testl
mov
lock
fsubr
cmp
in
jmp
fst
in
enter
or
test
test
sarb
jmp
fldpi
clc
repz
repz
int3
mov
mov
into
cmp
cmp
cmp
fsubr
lret
icebp
out
bnd
fldl2e
in
stc
aad
xchg
fmull
shrl
xor
iret
xor
fstp
fucomip
lock
int
stc
lds
mov
in
fisttps
icebp
in
icebp
xor
cmp
fcmovnb
hlt
in
aam
xlat
leave
fsubp
vpsubq
mov
repnz
out
out
fstpt
rcl
sti
repnz
iret
test
ret
fxch
jecxz
stc
icebp
loopne
jmp
jmp
cmp
cli
int3
cmp
xchg
loopne
call
test
roll
enter
out
out
call
shl
in
repnz
lret
lret
std
mov
xchg
leave
jmp
neg
rol
repz
loopne
in
add
out
cli
mov
jmp
into
in
ror
jmp
fdivp
jmp
roll
sub
test
shr
int3
das
shrb
sti
xor
out
cmp
clc
fbstp
incb
cld
sti
addb
shl
aad
fcom
or
sub
fcmovnu
orb
mov
lret
ror
leave
mov
aas
ljmp
aam
cmp
lret
mov
in
mov
into
aaa
shl
lret
cmp
cmp
fdivrs
shl
enter
lret
faddl
into
ror
in
fincstp
cmp
lret
clc
std
aaa
sar
xchg
sar
test
clc
mov
xchg
lea
xor
stc
repz
fidivrl
sti
std
shl
cmp
in
enter
out
mov
mov
bnd
iret
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
jmp
into
rol
fcomp
fcomps
xor
inc
pushf
jle
mov
aas
xor
rcr
in
movl
std
lock
out
xor
xor
div
cld
jecxz
mov
loopne
out
call
xchg
shlb
aaa
ror
test
aad
cli
out
cld
xchg
mov
out
fimuls
stc
xor
cli
into
iret
int
fsubr
ret
cmc
out
les
rol
call
fdivr
ss
rcl
int
shll
loope
rcr
jmp
std
nop
repz
fdivrp
aaa
cmp
out
lret
inc
cmp
loope
hlt
testb
mov
jmp
fcomip
repnz
xor
fnstsw
out
cld
out
test
ret
neg
sti
out
lret
jmp
jmp
rol
xor
leave
hlt
fneni(8087
loopne
in
ds
ljmp
fsubp
shrl
repnz
enter
xlat
sti
rcl
inc
sar
icebp
hlt
cmp
xchg
in
int
nop
sar
rolb
ljmp
fcmovbe
and
sar
cmc
inc
xchg
xlat
jmp
iret
xchg
out
out
jmp
ffreep
out
lret
leave
in
fiaddl
cli
in
in
cli
les
mov
xchg
aas
call
rcr
fcomp
shl
xor
shl
movl
nop
out
out
leave
vpaddsb
into
int3
sti
cmc
out
in
leave
mov
mov
into
fmul
fldl
aaa
fsubr
xor
clc
cmp
adc
ret
cli
testb
lret
dec
orb
ljmp
xlat
mul
adc
ret
in
in
into
lock
in
in
iret
xor
int3
iret
cmc
aas
cmp
fcmovnbe
stc
shl
shl
testb
jmp
in
lock
lock
lret
cmp
hlt
stc
cld
in
call
fimull
out
xchg
loopne
ljmp
in
fsubr
cmp
aas
fst
cmc
sti
fnsetpm(287
jmp
mov
rol
call
ror
lret
test
into
in
cli
test
repnz
std
leave
clc
xchg
cld
xlat
filds
jmp
icebp
fcomi
int
clc
lock
fsubp
loopne
flds
cld
jmp
rorl
cmp
xor
sar
rolb
fsubrp
fiadds
out
xchg
icebp
loop
clc
sti
idivb
ds
fnstcw
out
ds
std
cmc
in
in
in
mov
xor
xor
inc
cld
mov
jmp
rcl
rcr
fstp
aam
cmp
lods
sarb
addl
jle
icebp
clc
div
out
cmp
test
add
inc
add
xchg
fcoml
loope
int
les
cmp
out
out
test
inc
addl
jmp
int3
in
in
repnz
clc
into
loope
aad
shr
enter
clc
in
out
rorl
ror
sar
cmp
sbb
sti
call
lret
jmp
cli
jecxz
decl
shl
cli
lock
fcom
cli
fdiv
loopne
fildl
imul
lret
xchg
xchg
xchg
shlb
out
iret
aaa
cmp
clc
shl
repnz
aad
add
loopne
lret
sbb
fnstsw
call
loope
cmp
xlat
fsqrt
cmc
push
rolb
mul
mov
std
lock
jmp
xor
fcmovb
ror
fcmovbe
xor
fst
icebp
mul
test
filds
std
sti
in
jmp
aaa
lret
sub
shll
fcmovu
cli
std
fsubrp
out
aaa
hlt
sti
xor
loope
mov
fcmovu
sti
mov
ror
rol
sub
cmp
cli
int
loopne
sub
ror
enter
clc
xchg
xchg
lea
les
ljmp
cmp
aas
jmp
div
aas
stc
in
clc
mov
loop
or
xchg
xor
xor
fcmovu
cmp
lock
ret
out
lock
test
imul
rcr
rcr
in
cmc
cmp
cmp
and
out
ffree
into
ror
out
int3
icebp
shlb
sti
out
cmp
cmp
ror
cli
jmp
sbb
lock
jmp
cmp
fstp
loopne
repz
in
std
fmulp
mov
jmp
mov
loop
rcl
out
into
cmc
int
int3
aad
sti
shr
xchg
ret
flds
lret
into
iret
in
xlat
call
ds
idiv
fdivrs
imul
enter
enter
icebp
lret
xchg
rorl
call
cld
ljmp
addb
mov
test
icebp
out
in
lock
stc
ffree
fisttps
loope
fisttps
mov
std
int
into
into
aam
out
out
cmc
mov
mov
jmp
lock
sub
in
out
sar
jmp
flds
clc
lret
jmp
mov
hlt
std
test
in
ret
neg
lret
cmc
in
cmp
cmp
ds
ret
cmp
out
test
int3
xchg
call
loop
int3
int3
in
ret
add
add
imul
jmp
sarl
ret
ffree
in
jns
pusha
and
mov
jle
add
into
cmp
out
cmc
fdivr
fldl
aam
repz
ljmp
popl
aad
in
rcl
in
ds
clc
hlt
call
xchg
icebp
int3
adc
std
rol
in
cmp
cli
aad
into
fidivrl
aam
cmc
in
sarb
out
jmp
iret
jmp
jmp
stc
xor
int3
shlb
sarl
mul
repnz
addl
nop
mov
out
fadd
aam
aaa
out
hlt
iret
iret
out
sarb
cmp
stc
fdivrp
adc
fsub
adc
mov
loopne
xor
cmc
ret
icebp
ror
ret
loop
not
xchg
xchg
lret
call
rcr
xor
out
sar
xor
cmp
jecxz,pt
in
repnz
stc
decl
mov
out
mov
fists
aaa
div
in
cmp
and
mov
ret
in
filds
adcl
ret
int3
in
sarb
sarl
fsubrp
repz
sbb
or
out
fmul
in
xor
repz
xlat
jmp
int3
sbb
leave
enter
stc
cld
nop
decb
ljmp
cmpl
orl
leave
stc
in
mov
xor
xor
stc
into
cld
cmp
hlt
addb
fsubp
loope
out
loopne
enter
ljmp
fcmovnb
movl
mov
ror
iret
repz
ror
cmp
in
cli
cmp
aam
ror
shl
fxch
jecxz
enter
loope
leave
rcr
in
aad
iret
cld
fdiv
mul
xor
mov
loope
iret
sar
xchg
mov
fsubr
fadd
aas
loope
loopne
test
hlt
ret
loopne
aam
mov
test
aas
lock
in
aaa
shr
lret
cmp
cmp
fstp
idiv
fcomp
sub
iret
xor
in
ror
icebp
loopne
cmp
test
ror
mov
ljmp
rol
into
int
xor
call
cmc
loop
cmp
stc
sti
sti
push
and
fsin
jecxz
jmp
in
cmp
aad
fucom
cmp
clc
fst
rcr
cli
loop
mov
enter
fsub
mov
jmp
xor
lret
clc
sar
cmp
std
testb
mov
loopne
cli
xchg
xor
std
into
fucomp
rcl
cmp
loopne
xchg
out
ljmp
loope
mov
xor
jne
cmp
jmp
rcl
aad
rcrl
lcall
add
fcmove
in
cmc
enter
in
filds
hlt
clc
clc
out
test
fdivrp
enter
ret
ss
shl
clc
out
fiaddl
orb
sub
lret
stc
std
aad
in
fidivrl
aam
jmp
int3
decb
loope
in
xor
in
fnstsw
testl
sti
fcmovnu
mov
lret
rorb
test
lock
cli
xor
leave
loope
fsubr
shl
cmp
xchg
fcos
out
fucomi
into
mov
ret
aad
cmp
leave
aas
ror
xchg
ret
div
fimull
out
imul
shl
sub
sti
aad
leave
lock
int3
neg
ret
loopne
xchg
rcl
pause
xchg
xchg
xor
sar
idivl
lret
std
faddp
in
ret
xor
lret
sti
rol
les
icebp
aad
fadd
sar
shl
sarb
shr
loope
sti
in
lret
loop
call
xchg
cmp
ret
iret
lock
lret
loope
flds
loopne
test
mov
mov
clc
in
aam
xor
idivb
cld
repz
add
mov
fcmovnb
in
xchg
jmp
loope
loop
in
out
loopne
ror
hlt
fdivl
ljmp
repnz
xlat
fmulp
in
lret
mov
rorb
sarb
fnstsw
in
into
cmp
int
aaa
cld
shl
out
ret
fld
fadds
lret
xchg
leave
test
ret
xor
out
sar
cmp
faddp
aad
stc
mov
lret
lret
jmp
out
in
in
jmp
fcmovbe
xor
std
call
lock
lock
loope
loopne
aad
fucom
movb
int3
in
xchg
xchg
testb
shl
xor
aaa
rcr
clc
out
jecxz
imul
in
int
in
out
out
xchg
repz
sub
call
cmp
std
cmp
aam
out
fcmovnu
leave
lock
adc
in
iret
in
xor
fdivs
cmp
sti
clc
sarl
test
loop
int
test
sbb
ret
cld
repz
call
out
cmp
decl
in
leave
out
repnz
call
iret
iret
xor
loop
in
fsubp
cmp
leave
xchg
jmp
nop
mov
out
in
cmp
leave
sarl
fcmovnu
cmp
aad
fld
or
sti
out
and
test
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
push
mov
mov
mov
not
jmp
leave
xlat
rcr
mov
cwtl
push
push
cmp
daa
mov
add
lret
repz
std
xlat
cmp
rcl
fiaddl
lret
mov
lea
in
fdivrs
aad
das
in
hlt
iret
into
fxtract
xor
loope
mov
test
cld
in
cmc
call
ljmp
jmp
in
jecxz
hlt
ret
mov
in
lret
loope
in
fst
xchg
lock
loop
leave
cmp
cmp
lock
into
lock
in
call
enter
fchs
decl
cmp
sti
frndint
aad
repz
lret
sarl
testb
loope
nop
in
test
leave
ljmp
ds
std
cld
cli
test
ror
out
aad
xor
fidivrs
fxtract
fcomip
loop
rclb
out
ss
shl
loopne
aaa
sti
cld
aad
clc
fldl2t
iret
jecxz
jecxz
repnz
jmp
leave
or
fcmovnu
ljmp
std
rorb
rol
call
repnz
loopne
in
fcomp
cmc
mov
add
xchg
xchg
test
lret
fildll
sub
out
fcom
out
xor
stc
rcl
test
std
mov
hlt
mov
loope
cld
leave
xchg
xor
xor
into
xor
rcl
shl
xlat
leave
out
sub
ret
out
xor
int3
aad
hlt
neg
cmp
ret
icebp
icebp
xchg
rorl
fsubr
out
fucom
fmul
test
ss
int3
xor
jmp
cmp
xor
and
sti
in
in
jecxz
iret
mov
loop
sbb
ret
cmp
fdivr
lret
in
test
fcomip
fcmovnb
vpsubsb
in
out
rol
fyl2x
aaa
cmp
jmp
cmp
fsubrp
aad
inc
out
in
mov
icebp
int
ljmp
aad
in
ret
adc
cmc
ljmp
jecxz
dec
cld
movl
movl
cmp
movl
jmp
mov
fstp
enter
imul
clc
mov
sbb
jle
iret
aad
out
out
cmp
fucom
aaa
and
inc
test
lds
testb
cmc
cld
cmp
xor
sarl
ret
repz
out
xchg
xchg
call
jmp
lock
fdiv
fsub
iret
cmp
cmp
xchg
orb
int
leave
xlat
vpaddusb
fcmove
filds
out
enter
mov
xchg
orl
out
ds
aam
ds
ret
aam
test
test
int3
ljmp
cmp
aam
clc
ljmp
fstp
int3
int3
std
fdivp
loope
xor
repz
call
clc
cmp
loop
ds
shl
mov
fdiv
mov
in
jecxz
mov
ret
shl
xlat
sbb
iret
int
loop
shr
clc
ret
out
sub
int3
mov
mov
enter
iret
aaa
sar
hlt
sbb
neg
mov
fimull
mov
xchg
out
mov
stc
int
leave
std
cli
rcr
cmp
loopne
loop
loop
aas
ret
loopne
stc
lock
ficoms
ror
lret
rcl
cmp
loopne
clc
iret
out
rcr
xlat
int
fisttpl
xchg
dec
shlb
rcl
in
hlt
std
sbb
lret
loope
repnz
ret
hlt
mov
into
lret
out
lret
iret
xchg
mov
in
rol
out
int3
fcomip
fucomip
fnstsw
icebp
repz
ret
sti
test
sub
lret
out
sub
in
lret
leave
fdiv
jmp
cmp
int
xchg
repz
mov
test
adcb
call
fdivr
cli
sarl
ror
std
clc
test
mov
cli
mov
mov
not
jecxz
out
xchg
das
out
shl
in
cmc
repz
fiaddl
lret
movl
in
call
stc
shr
out
cli
out
hlt
fadds
loope
fmull
test
or
add
add
push
add
jmp
lret
aas
fst
fcmove
fidivrs
mov
jp
jle
sbb
jle
std
mov
mov
iret
lret
std
xor
out
sti
test
idiv
in
ljmp
out
fimull
repnz
stc
out
fdivr
repz
fcomi
faddp
out
not
jecxz
test
test
repnz
ljmp
dec
fbstp
int
aas
ret
ret
cmp
std
int
fstl
ret
aam
in
leave
fdivp
cmp
fdiv
aam
cld
sti
out
out
loope
into
cld
xchg
mov
lock
out
aam
cli
std
aam
into
clc
ss
incb
out
jmp
or
orl
call
icebp
in
ret
enter
enter
into
ljmp
out
std
xor
std
ret
fadd
aad
stc
loope
lea
into
test
out
out
stc
xlat
fmul
fcmovbe
cli
cli
stc
adc
out
xchg
in
out
fdivr
sar
in
repnz
loopne
hlt
xor
cli
out
jmp
sub
aas
lock
fsub
mov
cli
xchg
nop
call
cmc
sub
cli
out
cli
cmp
xlat
fucomip
shr
cmc
xlat
aam
ret
test
in
out
xchg
fadd
iret
jmp
iret
out
loopne
cmc
cmp
ljmp
xor
in
stc
adc
ljmp
roll
sub
into
std
fdivp
std
fmul
int
sar
sti
enter
int3
out
xchg
xchg
loop
stc
in
into
cld
in
std
xlat
jmp
sti
lock
icebp
sti
imul
mov
cld
fsubr
mov
loopne
out
in
std
not
in
repnz
fld
idivb
cmp
mov
std
out
sar
fucomp
aam
aaa
ret
xor
lock
fdivrs
repz
aad
in
stc
ljmp
out
ljmp
ret
std
iret
icebp
fcmove
div
stc
aam
call
div
mov
xchg
iret
rorl
rcl
into
sar
cmp
std
repz
loop
std
fsubrp
xchg
inc
clc
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
jmp
aam
aas
ret
lret
fst
fnstenv
lods
pop
inc
dec
xor
cmp
scas
jle
sbb
jle
int3
in
shl
into
test
neg
ss
div
ds
clc
fdivrp
aad
aam
jmp
out
mov
xor
jecxz
div
clc
shr
cmp
out
rorl
sbb
lock
iret
lret
jmp
cmp
aas
loop
in
fucom
stc
test
clc
lret
imul
enter
fcmovne
nop
xchg
ret
call
rcr
cmc
xor
lock
cmp
ret
mov
loopne
xor
xchg
xor
int3
not
shr
aas
in
repnz
mov
mov
sti
out
in
xor
out
call
divb
sti
rol
in
fsubp
rol
jecxz
mov
out
loop
shr
lret
ret
cld
xor
incb
in
hlt
mov
stc
lret
loope
int
in
out
lock
ret
fcmovu
call
in
cli
out
loopne
in
cli
filds
out
into
test
fidivl
leave
fucomi
out
xlat
fdivrl
test
cmp
mov
loope
repnz
aam
xor
fptan
fdivr
ljmp
xchg
fldl
cmc
call
cmp
fsubr
in
cmp
les
nop
fdivr
rolb
fdivs
divb
vpsubusb
shl
std
sbb
in
cli
jmp
xchg
test
rol
repz
cmp
icebp
cli
cmp
jmp
aaa
in
call
test
sti
in
out
lea
imul
into
xor
cli
cmc
rcr
loopne
test
and
test
xchg
out
cmc
rol
fstp
ss
repz
repz
sarl
out
stc
in
out
in
out
hlt
jmp
fxtract
aam
clc
bnd
hlt
aam
shl
lret
mov
lret
or
lret
vcmpsd
leave
cmp
into
int3
fsubr
test
stc
shl
fiadds
in
xor
sarl
add
mov
movzwl
jmp
rcl
xlat
fcom
push
outsl
popa
scas
cmp
mov
jle
add
fmuls
aad
xor
shr
jecxz
aad
out
xor
icebp
repz
mov
xlat
mov
in
int
loopne
lret
test
shl
repnz
cmp
xor
aas
into
cli
fimuls
test
lret
ljmp
lock
xor
lock
cmp
test
fisttpl
std
rorb
cmc
in
call
int3
ss
std
stc
in
repz
xchg
ljmp
repnz
ljmp
repnz
int
test
fdivr
addl
mov
in
imul
icebp
in
out
cmp
fnstcw
fdiv
cmc
mov
xlat
lret
lock
test
hlt
into
lock
shr
testl
aad
not
and
hlt
xor
sti
idiv
aad
lret
repnz
cli
not
stc
xlat
mul
ljmp
mov
ljmp
faddl
clc
loop
cmpl
loope
mov
mov
test
adcl
xor
xor
aam
cmp
aas
ret
out
rol
fmul
cmc
out
loopne
jecxz
loope
shl
iret
out
cmp
xor
out
loopne
not
cmp
loopne
ret
fiadds
nop
lock
in
xor
in
call
int
loop
loop
fcmovnu
ljmp
test
xchg
div
xor
lret
fcos
adc
mul
fcmovne
xchg
in
call
loope
sar
xor
out
out
xor
ret
out
fstp
cmc
jmp
ret
std
mov
in
in
repz
shlb
test
shl
lock
vpminub
test
addb
cmp
aam
out
out
repz
aas
xor
add
sbb
rorl
lock
nop
test
shl
div
loope
in
fcomip
aad
cli
idiv
not
and
jmp
aam
enter
aad
cmp
and
aad
ret
jle
sbb
jle
lret
int3
in
rcr
xchg
call
xor
fld
repz
xchg
enter
in
loopne
in
fucomip
ror
hlt
loop
neg
int3
leave
std
lret
cmp
cmp
not
fcmovb
out
jmp
jecxz
xchg
xchg
jmp
int
lret
cmp
cmp
repnz
orb
call
xor
fcomi
ds
out
std
rol
ljmp
xchg
fldln2
aam
lock
shl
test
loopne
loop
in
loopne
out
in
hlt
shlb
cmp
jmp
rcr
sar
ret
test
test
rcr
adcl
loope
div
in
loopne
in
loop
shr
test
int
nop
leave
lret
fcoml
sti
repz
icebp
cmp
filds
lock
addb
in
fiadds
ljmp
out
out
aam
cmc
xlat
std
fxam
out
jecxz
loope
xor
sti
into
ds
repnz
cmp
sti
idivb
out
out
test
nop
fmul
mov
hlt
orl
fcmovbe
aam
hlt
repz
loope
loopne
mov
out
jmp
xor
fprem1
loope
loopne
ds
test
xlat
out
faddl
in
in
test
repz
cmp
frstpm(287
stc
loop
test
loope
mov
lret
jecxz
xlat
int3
ss
xor
loop
fcmovu
mov
idiv
enter
repz
into
clc
clc
jmp
aam
cmp
repz
enter
faddl
popl
leave
cmp
icebp
into
iret
xor
addl
inc
mov
repnz
xchg
xchg
in
jmp
clc
aaa
cmp
out
idiv
rcl
out
repz
pop
add
add
adc
mov
jmp
rcl
enter
fcmovne
fdivl
mov
jle
add
loope
jecxz
out
int3
orb
in
icebp
fcmovne
cmp
in
cld
fcmovnbe
in
cmp
roll
mov
mov
test
jmp
out
repnz
sar
in
enter
std
fmul
or
in
test
hlt
das
in
mul
lret
aad
idivl
cmp
cmpl
loop
mov
fchs
out
test
fyl2x
int
fnstcw
fcomip
rcr
jecxz
cmp
clc
cld
sbb
into
cli
mov
bnd
lock
out
loopne
fidivrl
not
fadd
cmp
enter
or
hlt
loopne
shl
cmp
stc
xlat
aaa
cmp
ret
out
cld
lock
xchg
xlat
loope
lds
xchg
hlt
loope
aaa
stc
cmp
leave
out
int
loope
cmp
roll
aad
mov
loope
icebp
rol
lock
shr
jmp
loope
out
sti
ret
cmp
aam
fisttps
or
out
xor
lret
out
fchs
shl
rol
icebp
std
call
and
sti
addb
xor
xlat
loopne
icebp
sti
out
vcmpps
repnz
mov
test
xlat
out
in
leave
cmp
cmp
rcr
test
mov
mov
orl
loop
out
int
cmp
shl
repnz
in
out
shr
xchg
lock
iret
ss
sub
les
cli
out
jmp
cmp
sarb
ffree
jmp
lret
sub
sti
fsubr
call
cli
xor
int
xor
aad
fdivrp
filds
ror
cld
mov
out
ret
lock
repz
fcom
rcl
sarb
lret
and
repz
xchg
repz
fidivrl
xor
jmp
in
fpatan
neg
std
out
sti
ret
loope
mov
repz
xor
xor
into
cmp
cmp
repnz
in
rcr
sar
or
or
add
test
je
leave
ret
push
mov
sub
movl
movl
incl
mov
add
jmp
leave
ror
xlat
fstp
fst
pop
push
inc
dec
pop
out
out
push
nop
mov
jle
add
ffreep
mov
jecxz
mov
out
xchg
lret
ljmp
sarb
cmp
ret
loope
aas
les
test
xchg
repz
leave
shr
fsub
rcr
xor
fidivrs
iret
stc
loope
out
std
fsubr
fcmovnbe
test
shr
jmp
adcb
aad
fst
hlt
out
fcmovbe
into
std
decl
jecxz
out
incl
cs
jmp
lret
int
out
loopne
cli
ret
in
testl
into
lret
aad
das
stc
xor
xor
das
out
repz
int3
cld
cmp
loop
sbb
vpsubq
jecxz
repnz
mov
fcom
lock
jmp
aam
aam
roll
mov
lret
sbb
test
int
iret
aad
aad
cmp
aas
test
rolb
test
out
loope
std
int
in
ss
clc
imul
test
cmc
cld
movl
ror
mov
jecxz
cmp
clc
cmp
neg
jmp
rolb
fisttps
in
icebp
in
in
ret
ljmp
call
ds
loopne
rol
mov
fsincos
out
call
hlt
lret
xlat
out
hlt
fucomi
clc
out
loop
cmc
call
int
fsin
fists
ret
cmc
std
fcmovnu
clc
dec
dec
loopne
hlt
loope
into
loope
test
fcomip
not
in
lret
cmp
shr
rcl
idivl
sbb
sarb
stc
aam
cld
dec
in
int3
in
icebp
into
aam
hlt
call
jmp
test
adc
rcr
fmuls
icebp
repnz
aam
cmc
in
out
icebp
in
xor
sub
shr
xchg
stc
in
into
mov
xchg
in
xlat
jmp
repnz
xor
cmp
not
fdivrl
fcomi
leave
loop
loop
int3
mul
leave
out
into
ljmp
aad
fstp
test
shl
ret
lret
cli
jecxz
rorb
enter
clc
cmp
shl
hlt
neg
jecxz
jecxz
clc
add
leave
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
adc
lea
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
push
lea
and
jmp
mov
into
lret
rcr
xlat
nop
aaa
dec
out
mov
push
mov
jle
fsincos
mov
fists
not
repnz
stc
loop
aad
repz
ljmp
lds
fisubrl
clc
fldz
ret
aam
in
movb
out
cmp
sti
out
in
std
fcom
incl
cmp
mul
ret
out
or
imul
shl
ror
icebp
fmul
cmp
jmp
in
repz
mov
enter
in
test
jmp
aaa
stc
cmc
repnz
into
aam
iret
addl
call
ljmp
icebp
in
iret
ss
shr
cmc
shl
iret
test
cmp
ret
addb
sub
test
iret
shl
cmc
out
into
int
ds
loope
test
sti
test
mov
xchg
jecxz
shll
rcl
cmp
xor
in
cmp
bnd
xlat
test
incl
jecxz
loopne
xchg
hlt
cld
mov
hlt
sarb
leave
jecxz
ss
lret
xlat
jmp
cmp
mov
icebp
cmp
fsubr
iret
cli
mov
int
mov
fdiv
xor
sti
xor
cmp
std
shlb
iret
loope
idiv
sti
sti
jmp
int3
lock
orl
xor
cli
fidivrl
fptan
div
stc
in
enter
cmp
shrb
int3
shl
in
iret
idiv
fucomp
cmp
ret
aas
out
clc
lret
cli
mov
out
aam
call
aaa
divb
testl
fcoms
mov
not
xor
xor
rcl
iret
cmp
aas
aam
call
out
int
loope
icebp
ljmp
xor
clc
call
shl
icebp
ret
rolb
and
vprotd
hlt
out
rcr
leave
aad
shl
xlat
in
faddp
fildl
test
into
out
ret
in
in
div
cmp
fcmovnu
into
std
test
test
fisttps
iret
lret
aam
out
xor
cmp
icebp
in
std
cmp
loopne
cmp
mov
mov
push
adc
push
mov
mov
mov
sbb
jmp
rol
rcl
aad
addr16
sbb
jle
out
mov
cmc
test
aaa
fidivrs
aaa
sar
sti
sti
jmp
mov
fucomi
jmp
out
mov
test
stc
fadds
mov
xchg
test
orl
incb
sub
in
lock
cmp
ret
loop
stc
fisttpll
fstl
jmp
iret
out
faddl
xchg
and
jecxz
repz
mov
repnz
enter
aaa
fldl2t
cmp
sti
loop
mov
out
int3
mov
mov
sub
repnz
cmp
cmp
idivb
rcr
or
loop
cli
jecxz
out
and
sub
cmp
aaa
cli
cmp
cmp
or
cmp
mul
mov
fnstsw
int
out
in
repz
iret
ljmp
repz
aas
divb
in
repnz
cmc
ret
test
in
in
hlt
cs
aam
loope
cmp
shr
cmp
mov
orl
mov
in
fdivr
cmp
neg
out
rcl
fucom
cld
mov
cli
xlat
in
mov
fcmovu
fisttpll
xor
lret
lock
jecxz
xchg
rol
mov
mov
jmp
decl
xlat
shl
leave
enter
out
fptan
loope
in
xlat
rorb
icebp
repnz
shl
mov
in
fnsave
enter
loopne
aas
in
jecxz
idiv
ljmp
out
pushl
cmp
in
int
aad
imul
mul
ret
roll
in
call
xchg
lock
rcl
std
cmp
repnz
ds
lret
std
xchg
repnz
xor
neg
ljmp
cmc
sar
fildl
fndisi(8087
nop
addl
lock
repnz
cmp
cmp
aas
neg
cli
fcmovnb
cmp
call
xchg
icebp
fdivrp
out
clc
out
lock
cli
std
xor
not
jecxz
sar
icebp
shl
jmp
sbb
sar
test
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jb
mov
or
mov
jmp
ror
into
fcmovne
out
je
push
stos
cltd
adc
mov
jle
out
loopne
out
xor
repnz
xor
enter
loope
sti
fcmovb
ljmp
loop
fucomip
mov
shrb
xor
loop
in
cmp
aad
xlat
hlt
test
test
loop
stc
xlat
int
loop
fsub
repz
rcr
out
into
shll
into
clc
neg
ficoml
push
lret
idivl
aaa
cli
stc
repz
fcmove
into
repnz
sti
sbb
out
xlat
mov
loop
int
das
fmul
hlt
ss
fxch
out
xlat
out
ret
mov
and
cli
call
out
rol
cmp
jmp
iret
fnstsw
fadds
leave
xchg
lret
jecxz
and
rcr
in
xor
cmp
xor
cmp
shl
fsub
rol
test
std
loop
xchg
xor
icebp
in
stc
int
into
fnstcw
xlat
hlt
fldl2t
call
lea
xchg
les
sar
leave
sar
in
iret
cmp
in
ds
sti
in
int
mov
loopne
loopne
into
call
in
jmp
flds
cmp
ret
rorb
rcl
iret
div
cmp
cmp
repnz
loope
cli
in
mov
cmp
int
mov
hlt
in
in
cmp
icebp
cmp
adc
fmuls
call
mov
iret
xchg
repnz
cli
fcmovnu
jmp
push
cmp
in
mov
int
loop
mov
mov
xor
in
ds
jmp
fsubr
rolb
ds
fsubr
fdivrp
ficoms
clc
leave
mov
ds
fcmovnbe
cmp
fst
mov
sti
jecxz
fcmovne
fisttps
vpmulhuw
into
cmc
cmp
cmp
fnstsw
iret
in
aad
mov
decb
fsubr
sub
repnz
mul
fmul
loope
roll
loop
mov
adcb
cmp
into
sarl
in
stc
add
fcmovnbe
test
int
xchg
ror
xchg
icebp
cs
mov
adcl
xor
adcl
xor
adcl
add
add
div
mov
movl
cmp
jmp
lret
leave
aas
int3
leave
stos
jb
push
xchg
jo
mov
add
cmc
div
int
lret
div
cmc
aas
stc
out
testb
lock
out
fmul
clc
repnz
std
loopne
into
fnstsw
cmp
imul
xor
sti
out
jmp
fcomi
xor
jecxz
loopne
repnz
out
cmp
rcl
xor
fld
stc
test
std
fdivp
nop
orl
out
out
jmp
sbb
cld
loop
fptan
in
leave
lock
leave
out
in
in
xor
stc
out
out
fsubr
aaa
fistpll
mov
fsqrt
in
lret
lret
xchg
into
rcl
leave
out
shl
xlat
in
int3
aad
repz
jecxz
test
in
ret
leave
lea
loope
out
xor
lret
mov
shr
hlt
sti
xor
out
sti
and
sar
loop
std
div
aam
idiv
lret
in
sar
loopne
ffreep
xlat
cld
ret
in
fyl2xp1
mov
int
clc
clc
xor
cld
int3
fucomip
roll
xlat
idiv
std
in
mov
mov
loopne
aad
into
int3
idiv
out
jecxz
out
cmp
addb
fucomp
incb
int
repz
xlat
out
sar
lret
roll
in
test
in
ret
lock
hlt
leave
cmp
sar
loopne
sub
fdivp
ljmp
and
mov
repz
out
call
jmp
lret
clc
loopne
sbb
addb
int
call
lock
into
out
cmp
in
cmp
stc
repz
loope
mov
int3
ljmp
fcmovnu
lret
leave
jmp
ror
cmc
cmp
in
std
cmc
out
lea
mov
in
out
imul
repz
aas
lret
testl
jmp
stc
mov
cli
and
in
divb
repz
xor
lock
shlb
out
sbb
fdivr
test
std
aam
testb
xchg
roll
jmp
cli
xlat
and
loope
repz
cmc
lret
jmp
jmp
cmc
jecxz
shr
fnstenv
int3
je
movl
lea
jmp
iret
iret
ror
ror
xlat
fstps
pop
jno
push
cmp
jle
add
repz
jmp
fld
shl
testb
leave
lret
or
shl
xchg
out
shl
xor
ss
icebp
sub
xor
clc
aad
mov
xchg
shll
xor
into
repz
icebp
loope
shl
xlat
test
rcl
fildl
adcb
cli
int3
iret
in
test
ror
inc
adc
repnz
mov
cmp
mov
xor
int3
fdivrp
cmp
shl
repz
xor
lret
icebp
lret
fisttpl
loope
into
out
sti
hlt
fdiv
fcmovne
roll
in
mov
enter
fucomip
decb
les
cmc
lret
in
sti
rol
int
in
incl
mov
fucomp
out
shl
stc
clc
cmp
sarb
ret
xchg
cli
cmp
fimull
ljmp
cmp
cmp
cmp
xlat
ret
cld
in
xchg
and
dec
lock
out
clc
aad
stc
repz
sarl
lret
adc
hlt
cmp
orl
xchg
mov
shr
iret
das
enter
out
jmp
cmp
test
cli
cli
xchg
int3
std
loopne
jmp
xor
cmp
stc
xorl
cmp
and
fsin
enter
ror
ret
shlb
out
lret
cmp
fdivp
repnz
clc
aas
shl
cld
out
std
xchg
mov
mov
lret
int
call
lret
lret
aas
lock
xlat
loope
std
loopne
lret
incb
out
shr
faddp
xor
xor
cmp
imul
repnz
loopne
int
jmp
out
int3
clc
xor
iret
fdiv
iret
in
loope
ret
aad
mov
fsubr
loopne
xchg
rcll
in
rol
rcl
out
shr
out
shl
aam
fildl
std
mov
lret
xchg
loop
in
in
out
pushl
repnz
test
in
faddp
jecxz
call
jecxz
sub
xor
in
testl
pop
add
add
int
lret
in
aad
sbb
inc
jle
ret
jle
cli
fsubrp
out
addl
aas
in
lock
lret
xchg
xchg
shll
out
icebp
lret
aaa
hlt
lock
out
sti
aas
in
xchg
loop
in
repz
loop
in
lock
ljmp
test
cmc
int3
mov
ror
iret
iret
in
aad
sarl
cmp
aas
loopne
sti
clc
out
call
aas
fimuls
loop
hlt
imulb
aam
xor
fdivr
rcl
clc
int3
ffreep
lock
mov
test
mov
sti
cmp
into
rcr
ss
vpandn
call
mov
hlt
hlt
cmc
mov
ljmp
int3
in
stc
shll
adc
out
dec
test
out
fsub
in
aad
into
divl
cmp
jmp
cmp
fucom
div
rol
clc
ret
lret
mov
loopne
out
shl
in
or
out
aam
clc
cmp
rcr
loopne
cmp
cmp
xchg
xchg
jecxz
in
shlb
leave
aad
into
fxch
fcmovnu
std
xchg
addb
or
xor
aad
cmp
or
iret
div
mul
testl
cmp
out
jmp
repz
cmp
aam
icebp
repz
shr
hlt
lret
loope
lret
mov
ljmp
xor
lock
jmp
sarl
out
fcmovbe
ljmp
jmp
loope
xor
cmp
out
leave
leave
icebp
cmp
lock
in
fsubp
loopne
jecxz
cmp
test
xchg
call
repnz
imul
lret
rcr
clc
lock
div
jmp
leave
testl
lds
clc
jmp
cmp
ret
les
out
neg
cld
in
lret
cmp
fisttps
out
fidivl
cli
xor
test
jmp
mov
loope
fucomp
out
sub
cmp
in
cmp
out
leave
fcomip
iret
rol
call
fcmovnb
leave
iret
fcmove
nop
in
shl
clc
xor
xor
out
les
mov
mov
cmp
je
jmp
rcl
mov
aad
sti
adc
in
inc
jle
ret
jle
hlt
test
test
std
call
mov
xchg
xchg
iret
xor
aas
cmp
ffree
icebp
ret
loop,pt
jecxz
mov
xlat
fadd
sti
fxam
sti
nop
repnz
clc
jmp
test
cmp
sar
rcl
and
test
jmp
mov
sub
into
fdiv
cmp
stc
fsubr
repnz
fld
icebp
std
clc
addl
iret
mov
xor
cld
das
leave
sarb
clc
in
aam
mov
mov
orl
aad
aam
sub
cmp
fdivrp
into
cmp
iret
jecxz
xlat
loop
loopne
in
loopne
out
fst
hlt
into
ss
aad
shl
cmp
fyl2xp1
into
clc
div
div
stc
ret
flds
not
ret
stc
das
in
cmp
ror
call
inc
xor
jmp
loop
fucomp
leave
xchg
in
repnz
ret
divb
cmp
idiv
cmp
ret
std
test
jmp
lea
loope
ret
aam
cmp
xor
in
sarb
mov
sbb
mov
xchg
into
xor
ror
aaa
sub
hlt
xor
aad
ret
std
in
aad
fld
ljmp
sar
xchg
xlat
xlat
out
repz
xor
repz
test
adc
loopne
aam
testb
icebp
jmp
icebp
int
cmp
sti
cmp
sbb
mov
leave
call
cmp
cmp
fyl2x
rcl
cld
rol
test
in
mov
fisttpl
in
shll
loop
xor
repz
out
cmp
iret
lock
out
cld
std
lds
cli
mov
iret
xchg
shl
cmc
xor
jmp
jmp
rcr
testb
sti
sti
mov
loopne
rolb
jmp
jmp
ds
fnclex
movl
iret
and
sub
jecxz
repz
das
fcmovne
loopne
jmp
stc
sti
aam
sti
stc
jmp
test
xchg
dec
jmp
out
lret
xor
lock
fwait
sbb
pusha
mov
xor
add
jmp
rol
lret
fstp
aad
dec
jns
inc
rcrl
mov
jle
ret
jle
mov
jmp
cld
loopne
fsts
icebp
cmp
int3
int3
cmc
out
lock
sub
into
sar
faddp
stc
std
in
aad
out
sti
lock
jmp
xor
neg
repz
lock
shr
ret
cld
fst
out
enter
out
jecxz
loope
fcomp
enter
cmp
out
ds
out
sar
out
loope
xchg
in
loopne
xchg
jmp
fdivr
in
icebp
sar
xlat
lret
in
sti
xor
ret
and
xchg
loop
out
cld
cmp
out
xor
fildl
sti
std
sar
mov
call
repnz
std
jmp
aas
ss
lret
stc
in
stc
std
cmp
in
repnz
sar
fmul
xchg
sti
out
std
repz
xlat
fcmovbe
aad
fdiv
xor
int3
xor
stc
xchg
ret
aam
fadd
cmp
jmp
iret
out
xor
jmp
rol
ret
sti
cld
clc
dec
fsub
fdivp
out
fildl
aad
fmul
in
xlat
cmp
mul
std
cmc
in
clc
ljmp
enter
jecxz
xor
cmp
cmp
cmp
shr
test
call
into
stc
mov
fistpll
aaa
leave
lock
inc
aam
leave
imul
ljmp
mov
rcl
mul
xor
rcl
aas
testb
xchg
lret
rcr
adcl
aaa
xor
sti
loope
rcr
inc
mov
std
cld
aad
into
int3
cmp
xchg
xchg
xchg
shrb
out
iret
shl
icebp
xlat
repnz
cmp
jmp
ljmp
in
out
xor
fcmovbe
jmp
test
out
clc
in
aad
leave
leave
shr
int
adcb
repz
in
ss
fdivs
aam
addl
cmp
jecxz
sub
out
xor
xor
frndint
cmc
aad
fldl2t
clc
orb
mov
xlat
ss
icebp
shl
sti
sti
addl
aad
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
jmp
fmul
into
ror
fstp
int
dec
je
mov
mov
jle
add
sbb
int
decl
stc
into
jmp
ds
cmpl
icebp
cmp
fcmovu
jecxz
jecxz
xchg
sar
std
lret
idivb
cmc
loop
hlt
cld
cmc
sti
xchg
shr
shl
int
cmp
divb
ds
ds
sti
cmp
xchg
out
jmp
iret
fucomip
rolb
repnz
xor
ss
out
clc
std
out
fxam
cmp
loop
xlat
rol
in
repz
jmp
in
lock
fcmovnu
in
cmp
rol
ljmp
into
call
into
sti
xor
cmp
ds
cmp
cmp
out
int
shrb
stc
test
ss
int3
in
ret
hlt
xchg
cli
jecxz
fsub
fcmovne
xlat
clc
cld
jmp
in
jecxz
out
xor
ds
aas
sti
jecxz
out
cld
xchg
mov
sti
cld
shr
shr
in
shr
in
in
hlt
shl
loope
loope
xchg
xchg
aam
fdivr
clc
jmp
jmp
int3
jecxz
shl
lret
call
shl
in
cmpl
lock
movl
xchg
xor
aaa
cmp
sar
ds
out
les
test
fsubp
fucomp
mov
clc
call
ss
cmc
xor
ret
in
loopne
mov
leave
fimull
shr
into
aam
hlt
lret
ss
aam
lret
int3
xlat
aam
int
test
call
in
in
ljmp
in
xor
fidivs
test
xlat
sti
cld
fld
mov
xchg
ficoms
out
repz
sti
in
rcr
aam
repz
hlt
cmc
stc
lock
ret
ret
jmp
mov
ljmp
ljmp
cmp
or
repz
leave
addb
les
sub
cmp
jmp
cld
cli
out
cmp
incb
ret
clc
vcvttpd2dqx
enter
cmc
xor
fcmovnbe
fincstp
cmp
aas
addl
aas
jmp
rol
rcr
and
and
cmp
jle
add
jmp
lret
rcl
int
int3
in
iret
jmp
fucomp
cmp
icebp
sub
lret
xchg
mov
int3
cmp
lret
in
cmp
lret
sarl
ds
cmp
mov
call
fcomip
xchg
mov
hlt
icebp
fnop
stc
cli
cmp
sti
in
std
rcl
aad
leave
lret
fimull
mov
in
repnz
in
fcmovnb
cmp
out
lret
icebp
jecxz
mov
in
int3
mov
lret
in
lret
call
rol
in
fidivs
xor
out
icebp
ffree
stc
iret
flds
sub
ljmp
fincstp
in
in
sti
cmp
fcmovnbe
icebp
fdivp
shl
stc
addb
lea
out
xlat
loop
ret
xor
call
repz
cmp
out
aam
and
mov
cli
nop
std
mov
xchg
loope
iret
shl
int
cmp
test
fst
ret
sar
test
int
xchg
repz
mov
rol
fnstsw
repnz
ljmp
loope
jmp
ret
ret
jecxz
cmp
clc
cmpl
call
lret
xchg
addb
in
cmp
shl
fcomi
test
stc
shl
clc
ljmp
test
into
xchg
iret
xchg
xor
lret
lret
shl
lret
cmc
int3
cld
out
ds
enter
int3
jmp
lret
out
ret
in
cmp
sti
rol
ds
cmp
add
out
in
icebp
jmp
out
clc
rol
ss
in
lret
cmp
cmp
loopne
fsubp
test
aad
into
addb
sub
loop
sti
jmp
cld
cmp
jecxz
ret
xchg
test
int3
test
loop
iret
aad
aam
call
xor
ds
not
clc
fstpt
test
fcmove
in
loop
stc
fildl
in
ss
xor
fucomp
cmp
sti
fidivrl
hlt
xlat
xchg
call
out
jecxz
lret
mov
das
ret
xor
fcmovnbe
out
lret
fidivrl
loopne
iret
test
fnstcw
call
xchg
cld
fcmovu
repz
jmp
xor
add
add
rcl
fstp
aad
mov
cmp
xor
aas
cld
dec
jle
ret
jle
loopne
div
ljmp
leave
jmp
repz
test
ret
lock
loopne
ss
int3
xor
clc
shr
aam
fadd
cmc
fstp
lret
fcmovb
loopne
xchg
rcl
jecxz
ret
repz
rcl
into
xor
fstpt
mov
xchg
sti
xchg
ljmp
cs
int3
jmp
cmpl
iret
mul
neg
loope
loopne
xchg
into
sti
xchg
xchg
rol
xor
lds
icebp
leave
ljmp
xlat
aas
hlt
loop
cmc
in
test
ret
xchg
jmp
xor
shr
sarl
repnz
mov
hlt
int3
mov
clc
lret
xchg
int3
repnz
in
ffreep
not
lret
fcmovne
icebp
sarl
sti
fsubrp
out
shr
call
out
nop
popl
hlt
int
jmp
iret
int3
in
in
ret
icebp
enter
stc
fisttpl
not
leave
cmp
shr
hlt
fsin
lock
clc
test
mov
out
out
mov
ror
xor
lret
leave
fcmovne
aam
aam
xor
jmp
int3
test
and
mov
sub
sarb
leave
ret
ret
testl
jecxz
xchg
mov
out
loope
xor
aaa
xor
icebp
sar
ret
roll
out
int
fcomip
in
out
fabs
into
ret
cmc
std
aad
aas
lock
cmc
movb
xlat
out
out
in
orl
cmp
lret
filds
cmp
loope
call
cld
mov
lock
out
lret
repz
aam
out
sti
add
filds
roll
cmp
cmp
shl
cmp
add
repnz
int
or
and
into
mov
in
stc
xor
out
rcl
loop
rcl
aad
and
inc
loope
fsubr
fnstsw
fiadds
sti
enter
fcmove
lret
out
cmc
jecxz
fcmovnu
cli
fcmove
test
orb
out
int3
xor
mov
add
cmp
je
mov
xor
jmp
ror
ror
mov
cmp
ja
push
jle
ret
jle
int
lds
fcom
ljmp
test
leave
lret
sti
add
in
out
decb
stc
cmp
call
jecxz
cmp
stc
fmull
out
rorl
shrl
xor
cli
idiv
cmp
ror
icebp
ret
ret
fdiv
mov
out
mov
sub
hlt
out
sti
iret
xlat
int
aad
ds
aad
ljmp
mov
in
xor
in
out
cmp
lret
cmp
not
fcmovu
adc
ljmp
out
xor
jmp
lock
loopne
hlt
shl
cld
rcr
cmc
loope
aam
jmp
mov
test
jmp
xor
enter
fmul
shr
ror
out
jecxz
fmuls
ljmp
in
cmc
shl
int
rcl
cmp
shr
int
ret
xchg
ret
fisttpl
xchg
icebp
repnz
loope
jmp
leave
ds
clc
neg
cmp
in
lret
xchg
fiadds
cs
hlt
xlat
xor
std
cmp
in
fst
incb
lret
int3
loopne
in
sub
cmp
into
aad
fnstcw
hlt
loope
cmp
jmp
lret
out
test
bnd
loop
ret
cmp
cmp
ror
repz
clc
repnz
loope
mov
fiadds
xchg
stc
shl
out
into
rcr
in
inc
fcom
mov
jmp
ret
in
in
xchg
nop
iret
in
xor
shl
imul
cmp
ror
into
ds
sar
int3
movl
in
shl
repz
jmp
repz
in
testb
enter
mov
imull
loopne
aaa
xor
aaa
and
fcomi
mov
lret
cli
mov
cli
rcl
hlt
fcomip
xchg
in
enter
xor
loopne
into
cmp
aad
repz
out
jmp
xchg
int3
std
xor
cli
cmp
xor
std
cmp
and
clc
xchg
cld
call
popl
int
in
add
jmp
xlat
into
ror
fxch
flds
jp
pop
shlb
leave
add
jle
ret
jle
out
clc
sti
fdivrs
icebp
adc
sar
idiv
mov
nop
adc
loopne
mov
shr
leave
icebp
jmp
out
hlt
repz
in
ret
ret
xlat
jmp
int3
fcmovu
out
cld
adcb
clc
loop
call
ljmp
sarb
stc
cld
in
vshufps
leave
in
in
hlt
into
in
xor
in
cmpl
out
xchg
ret
mov
into
test
xor
stc
cld
aam
fucom
bnd
out
jecxz
in
in
jmp
sti
in
int
enter
into
cmp
ss
clc
lock
mov
fsub
leave
fucomi
orb
in
aam
clc
hlt
repnz
lds
rcr
in
clc
std
orl
les
in
fidivrl
lret
div
icebp
clc
hlt
test
sti
fmulp
xchg
hlt
int3
lret
repnz
in
jmp
fcmovnbe
std
fdivr
fmuls
jmp
out
out
jmp
sub
lret
cmc
repnz
aaa
int
adc
or
loope
ret
fiadds
icebp
mov
test
icebp
lret
out
pushl
cmp
repnz
xchg
incl
nop
and
aam
sti
jecxz
ljmp
add
in
aas
fldl2t
fdivr
test
rcr
xor
jmp
sti
cli
lock
std
out
jecxz
out
fldl
fldl
xor
std
imul
shl
test
shl
fucomp
mov
xchg
fdivrp
icebp
lret
jecxz
int
leave
xor
sarl
ret
out
ljmp
into
rolb
hlt
test
lret
ds
std
fdivrs
mov
out
jmp
decb
repz
jmp
call
fdivp
and
in
leave
sti
mov
out
mov
icebp
lea
into
clc
sti
std
ffree
aad
cmp
in
fiaddl
mov
fsub
loope
in
cmp
shl
fcmovnb
div
repnz
jmp
lret
leave
int3
aam
aad
fnstcw
ficompl
decl
add
push
jle
ret
jle
cmp
jecxz
xchg
stc
fmul
icebp
lret
repnz
rcl
iret
fmul
int
ljmp
stc
test
out
cmpl
lock
rorb
lock
div
repz
rcl
int
cmp
mov
shr
cld
rolb
in
aad
out
jmp
icebp
mov
aas
testb
ljmp
ror
lock
faddp
cmp
lock
cld
mov
loopne
fdiv
out
xor
hlt
cmp
repnz
loop
rcl
fadd
in
out
xor
shlb
repz
repnz
lret
cmp
mov
in
stc
out
nop
mov
lret
fbstp
xlat
shl
lret
call
test
ret
sbb
iret
test
call
stc
ljmp
fld
sarl
clc
mov
ljmp
aad
repnz
into
repz
std
hlt
hlt
ret
fucomi
fisttps
jmp
cmp
lock
test
lock
out
call
loopne
nop
aam
sar
icebp
shl
cld
fidivrl
faddp
clc
in
cmp
call
aam
leave
loop
sar
std
jmp
cmc
aaa
sub
cmc
aad
shl
cmp
cmp
std
fadds
lea
rcll
in
iret
fcomi
cmp
fdecstp
rol
out
cld
loopne
rcr
ljmp
int
xchg
shrb
out
call
ret
sti
fistpll
fcmovb
loopne
ljmp
mov
xchg
ss
out
shl
int
out
cmp
out
iret
iret
out
test
jecxz
in
mov
test
jmp
in
fstpt
aad
lret
fdiv
icebp
les
fsub
loope
nop
fimull
out
shl
enter
xlat
int3
cld
shl
in
adc
loopne
cmc
lret
aad
loop
fld
fst
out
repz
out
enter
ss
aam
lret
cmp
iret
mov
jmp
rol
int3
fmul
aad
mov
ja
in
pop
jle
ret
jle
ret
rol
in
idiv
fucom
ficoms
aam
jmp
aaa
out
out
fdivr
std
xchg
movb
in
out
xchg
out
out
aam
cmp
jmp
cmpb
cmp
fsubp
xlat
jmp
idiv
in
rcr
repnz
mov
in
out
ljmp
xor
mov
cmp
jmp
into
repz
xchg
icebp
cmp
sti
shr
lock
shr
mov
iret
mov
faddp
aam
into
repnz
out
xlat
sti
out
test
test
loop
repz
into
out
lret
in
lea
lret
leave
fnstcw
jmp
fsub
testb
fildl
fiadds
int3
call
loope
out
cld
fsubp
rcl
xchg
jecxz
hlt
repz
out
shr
in
mul
ret
fcomp
rcl
ljmp
dec
roll
in
in
cld
ljmp
sar
in
jmp
mov
lret
jmp
in
repnz
fdivrl
out
repz
sti
sub
cli
clc
ljmp
in
aam
int
xor
cmpb
cli
ret
rcl
aam
loope
cmc
in
out
out
fdivr
repz
cmp
leave
sub
sarl
xor
cmp
cli
lret
faddp
xchg
out
repz
repz
loope
rcl
sti
ret
cmc
icebp
mov
add
xchg
iret
fdiv
jmp
cmc
cmpb
les
sar
mov
test
out
jmp
rcl
xchg
in
stc
lret
int3
cli
fsubp
repz
testb
leave
jmp
iret
ss
repz
xor
lock
fcmove
not
cld
aas
mov
std
nop
in
mov
int3
out
mov
fmul
jmp
cmp
call
std
idiv
cld
lock
out
in
test
cmp
fcomip
lock
clc
xlat
lock
lret
cld
out
aam
xchg
jge
mov
xor
add
movzwl
mov
xor
lea
add
mov
jmp
aas
into
iret
ror
rol
shr
movsb
lock
add
pop
jle
ret
jle
aad
testb
xchg
rcll
cmc
in
ds
out
shl
jmp
out
hlt
not
out
mov
lret
nop
out
int3
fsubp
xchg
jecxz
xor
into
std
aad
cli
fadd
hlt
ds
test
fimuls
mov
mov
mov
icebp
jmp
out
jmp
rcr
std
ret
mov
orl
aam
lret
call
addb
xchg
jecxz
xlat
sti
int3
decl
fsubr
cmc
cmp
jmp
fcomp
jmp
aam
ffree
inc
ljmp
lds
int
shl
fmulp
ljmp
fstp
loop
jmp
mov
ljmp
out
out
jmp
cmp
dec
decb
iret
in
addb
clc
ss
xor
int3
ds
sti
fildl
xlat
mov
xchg
in
xlat
lds
std
sti
ss
hlt
sbb
fmull
leave
out
sti
stc
out
std
iret
call
ret
fnstcw
repz
repnz
loopne
in
cmc
ret
xlat
call
iret
les
cmp
jecxz
aam
call
icebp
std
fcmovnu
jecxz
test
loop
lock
int
aam
rcl
repz
lock
rol
fldl
cli
clc
in
orb
into
icebp
into
cmp
cmp
aam
out
div
testl
and
jmp
lret
repnz
adc
not
cmc
vpmullw
rcl
mov
lret
ret
fsubrp
lret
call
icebp
int3
stc
roll
sub
icebp
jecxz
iret
out
shr
xor
in
repz
jmp
cmc
ss
in
std
loop
testl
into
out
cmc
jecxz
repz
clc
cld
ss
cmp
aad
out
add
mov
int
out
loopne
rol
out
mov
leave
aad
fcmovnu
ret
rcr
ret
in
in
push
clc
mov
jmp
into
aad
vpaddusw
aad
js
jg
mov
jle
ret
jle
cli
loope
lock
in
ljmp
aas
fildl
out
aad
fcmove
cld
jecxz
xchg
xchg
in
out
aam
ret
in
fyl2x
out
clc
fdiv
fsubr
aam
flds
ljmp
in
call
aam
imul
repnz
cld
clc
fcmovnu
ret
test
clc
fucomi
in
ljmp
sub
aad
cmc
div
aam
roll
sar
jecxz
fcmovu
std
fcmovnu
test
lret
xchg
jmp
xlat
repz
lock
into
test
xchg
xchg
in
sti
out
xchg
mov
enter
sar
aam
rcl
in
fdivp
incb
jmp
popl
cmp
fdivrl
test
push
sti
cmp
fcmovu
in
lea
les
xor
out
xlat
call
cmp
ret
mov
sub
icebp
shl
repnz
aam
out
fucomi
jmp
int
in
mov
xchg
leave
call
xchg
fcmovne
jecxz
in
repnz
in
fdiv
aam
fidivrl
dec
sarl
out
cli
xchg
iret
sub
bnd
fcmove
cmp
in
shl
hlt
test
xor
enter
out
int
into
test
out
xor
ljmp
out
iret
cld
not
neg
fcmovnb
xchg
out
in
xor
cmp
jecxz
icebp
fdivl
ret
cli
addl
xlat
out
out
vpaddsw
jmp
shl
aas
cmp
shl
filds
incl
mov
int3
jecxz
in
enter
out
fabs
aas
std
sbb
mul
fmull
cmc
out
leave
cli
xor
cmpb
fadd
hlt
std
hlt
xchg
mov
int3
lret
out
mov
xchg
xchg
cmc
aad
jmp
repz
repz
repnz
fdivrl
fucomp
in
in
out
in
loop
hlt
iret
out
int3
aad
aaa
fucomi
leave
loope
out
repnz
call
loopne
in
xchg
roll
imul
sub
jmp
aad
int3
fmul
fnstsw
mov
jle
ret
jle
std
xchg
loope
ror
stc
cmc
sti
lret
sti
aam
into
cld
fucom
ret
fld
cld
clc
out
rorb
ror
fildll
in
clc
rcr
ror
cmp
sarl
lock
cmc
fadds
into
rcl
ljmp
int
xor
cmp
hlt
inc
imul
fdiv
test
shr
stc
repz
cs
cmp
icebp
int3
mul
aam
sti
mul
rcl
ljmp
mov
xor
xlat
incb
out
rcr
orl
lock
iret
out
clc
lret
in
sti
iret
xor
lock
xchg
in
loop
enter
enter
aad
cmp
call
ljmp
out
out
loope
sti
mov
rcr
loope
in
shr
int
cmp
add
repz
in
out
fsqrt
ficoml
lock
loop
loope
add
vcmpsd
mov
jmp
xor
cmp
aas
call
addl
call
cmp
int3
out
aas
icebp
out
fdivr
cmp
incb
enter
in
out
in
out
out
cmp
fdiv
cmp
fcom
sarb
shl
jecxz
aam
out
fsubr
mov
test
out
loopne
fcmovnb
cmp
jmp
xlat
rol
clc
loope
fiaddl
aam
xchg
aaa
clc
bnd
xor
jmp
in
loope
cli
std
aad
sti
xor
xchg
jecxz
leave
das
xor
icebp
xlat
icebp
xor
cli
int
cmp
in
ffreep
xchg
ret
lea
cli
sub
sti
call
call
aad
ret
cmpl
les
mov
lds
lret
enter
loop
stc
shl
loope
mov
cmc
loopne
fcompp
jmp
shll
icebp
int3
repnz
aad
out
shl
loope
sbb
sbb
sti
std
mov
in
inc
in
jmp
mov
mov
jmp
int
iret
rcl
fcmovne
fnstcw
insl
sbb
jle
add
xchg
cmpb
neg
shr
call
cmp
fdivrp
fld
clc
loopne
fadd
loopne
loopne
repnz
orb
cmp
fbstp
jmp
out
fadd
rolb
fmul
sti
in
jmp
shl
call
shr
icebp
cmp
les
roll
mov
xchg
and
aad
cmc
out
shr
xor
call
les
bnd
out
sar
rorb
jecxz
repz
ds
cmp
cld
repz
fisttpll
out
int3
mov
cmc
int3
in
fnstenv
cmp
cmp
lret
sarl
and
cld
stc
loopne
in
xchg
loope
int
ror
xlat
fidivs
aas
xor
cli
fcmovbe
add
fldl
out
lret
loopne
filds
ror
fsubr
fstp
aaa
fcmovnbe
int3
incb
leave
fsubrp
lret
in
in
call
in
xor
cmc
aam
out
fadds
fdivr
faddp
aad
stc
fsubr
in
adc
out
rcr
leave
std
out
cmp
repnz
lock
in
testb
ljmp
cmc
fucomi
hlt
hlt
xor
rcr
fcomip
stc
sti
fiadds
flds
int
hlt
xlat
ss
imul
icebp
fnop
xlat
fiadds
lds
rclb
iret
out
cmp
test
lret
sti
or
ret
mov
int3
jecxz
fldl
xlat
shr
jmp
leave
xlat
icebp
idiv
cli
int
sti
fdivr
cmp
cmp
xchg
mov
mov
rcl
call
adc
lock
hlt
cmp
lret
fincstp
jmp
icebp
and
in
int3
aaa
lret
int
rol
not
stc
xchg
cld
std
mov
clc
repz
clc
cmp
das
cmc
iret
ffreep
stc
cmp
sar
out
fst
lret
call
xchg
hlt
xchg
icebp
rcr
xor
hlt
icebp
lret
hlt
shl
aas
aam
leave
out
and
idiv
mov
iret
xchg
push
fstpt
sti
jmp
int
int3
int
cmc
inc
cwtl
cwtl
mov
jle
ret
jle
jecxz
lock
shr
xor
into
fcmovbe
repnz
ret
jecxz
enter
std
mov
xchg
lret
jmp
call
std
in
fdiv
sti
iret
ds
xchg
ljmp
icebp
out
xor
iret
stc
sti
cmp
ds
addl
mul
in
cli
xlat
iret
popl
in
sub
aaa
xor
cmp
cld
aam
shl
cmp
lret
jmp
int3
xchg
nop
rorb
leave
divl
xbegin
repnz
fadd
push
aam
out
lock
ret
xor
stc
lret
in
test
sti
ret
ret
ret
mov
lret
lret
mov
in
int
fidivrl
cmp
ret
sar
sti
cld
lea
jmp
jecxz
call
in
call
aad
into
into
jecxz
enter
inc
fimull
in
xchg
cs
cmp
out
out
ljmp
xchg
stc
roll
xor
cli
in
out
in
fcmove
in
std
xorb
iret
shr
neg
int3
cli
jecxz
std
lret
int
jmp
sub
cli
int
ss
lret
cmp
xlat
in
jmp
jecxz
into
cmc
ror
iret
out
jmp
fsubrp
clc
cmp
aad
aad
jmp
out
loopne
out
xchg
loope
vpmaxsw
cmp
fsubrp
fdivs
sti
jecxz
rcr
rol
loopne
cmc
loopne
out
mov
out
aam
hlt
fdivrp
in
imul
std
loope
cmc
test
jmp
roll
jecxz
xlat
out
sti
xor
test
xchg
xlat
rcr
mov
out
mov
loop
not
enter
iret
cmp
clc
dec
aam
cld
fdivrl
aad
clc
xlat
jecxz
fucomip
test
mov
shr
jmp
hlt
enter
loop
out
fdivrp
testl
in
shl
out
repz
in
in
aas
shll
repnz
std
aad
addl
loopne
icebp
cld
test
out
test
decl
add
add
rol
int
fcmovnbe
mov
or
and
jle
ret
jle
out
cmp
sti
aad
ret
ret
icebp
cld
in
into
int3
int3
mov
xchg
loope
xchg
out
divl
xlat
stc
cmp
aad
clc
shl
cli
fiaddl
fdivr
fcomp
sti
lea
ret
xor
in
jmp
jecxz
shl
xchg
mov
adc
adc
xor
fst
lret
cld
loopne
int
cmp
test
xlat
test
fdivp
loop
jecxz
leave
jmp
loopne
aas
out
clc
cmc
jecxz
jmp
mov
sub
aas
enter
cli
fdivs
xor
shl
cli
cli
out
in
fmull
orl
clc
cmc
cmp
sti
jmp
mov
ljmp
xchg
lret
leave
cmp
sarb
shr
cmp
and
aas
jmp
int
fucomp
jmp
aad
in
into
sti
imull
call
lret
loopne
repnz
mov
out
test
decl
cmc
cs
cmp
cmp
int3
cmp
shr
fdivr
fcomp
and
in
xlat
into
loopne
lock
repnz
xor
aaa
aas
xlat
cmp
ret
fsub
xchg
stc
fdivr
icebp
out
xchg
loope
in
out
out
loop
fcom
rcr
aam
ds
mul
repnz
mov
mov
std
test
xchg
ficoms
mul
cli
ljmp
sti
hlt
ds
fdiv
fninit
clc
mov
jmp
shl
ss
fdivp
shr
stc
cli
flds
jecxz
out
enter
enter
iret
stc
iret
jmp
jecxz
in
sar
loop
vpsraw
jmp
loop,pn
in
xor
fsubp
fldz
loope
sar
xlat
sar
repz
cld
in
test
shl
or
xor
cmc
sarl
int3
ljmp
aas
stc
testb
clc
test
icebp
jmp
in
ror
cmp
int
aad
fucom
aam
rcl
lret
loopne
enter
in
lock
aaa
xor
enter
add
xor
decl
add
add
rol
int
fstl
mov
call
jle
add
fistpll
out
icebp
rol
cmc
bnd
fcomp
enter
fld1
xchg
call
not
lret
rcl
fcom
loop
lock
xchg
loopne
mov
ljmp
in
iret
nop
mov
in
mul
out
out
ss
cmp
cmp
roll
aam
fcmovb
fsts
in
xor
hlt
fadd
cmp
div
std
clc
cld
aad
loope
fxch
leave
fstl
shl
xor
shl
jmp
aam
clc
aam
rolb
and
out
ror
lret
repz
cs
fdivl
int
shl
test
inc
fdivp
ret
vpxor
loope
addb
xor
jmp
xor
fxch
rcr
sar
fildl
loope
cmc
imul
nop
cli
sub
loope
out
out
sar
aad
sarl
loope
jecxz
fnstcw
adc
int
shl
xchg
idivl
out
cli
xor
cld
adc
fst
xchg
xlat
sarl
jmp
nop
jecxz
mov
sar
shlb
in
call
sti
shl
filds
jmp
xchg
xchg
lret
xor
fadd
enter
stc
aas
sarl
std
test
loope
icebp
test
ds
decb
mov
hlt
cld
ror
faddp
iret
in
ljmp
sbb
int3
xchg
in
stc
out
in
icebp
ljmp
cli
out
sub
lret
lds
dec
shl
fcmovbe
bnd
xor
aas
icebp
icebp
testb
fxam
xchg
ljmp
cmc
jmp
out
cmp
addb
out
cld
or
enter
enter
int3
sti
out
aam
xor
repnz
cmp
icebp
shr
mov
mov
in
mov
hlt
out
shll
cmp
repnz
cld
fdecstp
clc
call
loop
lock
xchg
mov
out
in
iret
fld
aad
repz
loopne
cmp
out
aam
fcmovbe
test
mov
jmp
in
lret
cmp
rolb
test
jmp
int3
ret
int
mov
pusha
das
sar
int
lods
push
jle
add
aad
incl
jmp
loopne
into
hlt
out
das
repz
fcomi
iret
fcmovnbe
leave
ret
fcmovb
ret
loope
test
test
xchg
cmp
iret
fistpll
leave
std
cmp
fcomp
in
in
jmp
movl
int
cli
cld
in
in
aas
in
not
out
loop
fucomip
xchg
ret
jmp
cmp
loope
jecxz
into
rcr
aad
loopne
aas
into
mov
xchg
lock
xor
leave
sar
ds
div
xlat
out
std
into
jecxz
hlt
leave
jmp
mov
repnz
loopne
repnz
cld
cmp
cmp
les
neg
jecxz
int
int
std
or
icebp
sarb
enter
xor
in
loopne
out
test
fmull
dec
xchg
int3
loope
jecxz
xor
int
int3
out
lock
hlt
repz
xor
imul
stc
les
fadd
mov
enter
cmp
lret
int
ret
sbb
fiadds
fsub
mov
call
cmp
jmp
into
ret
jmp
jmp
sbb
rcl
ljmp
aad
lret
iret
fcmovu
repnz
dec
jmp
lret
clc
fiaddl
repz
shl
lock
xor
shl
lock
loop
in
mov
jecxz
loope
lock
cmc
lret
idivl
hlt
int
ror
cmp
lock
fsin
stc
ljmp
repnz
lret
ss
rcl
jecxz
std
test
leave
jmp
rclb
out
lret
xor
jmp
out
std
loope
mul
fld
cli
leave
fstl
mov
jmp
cmp
test
or
cli
jecxz
xchg
stc
std
mov
cli
loope
loop
xor
xor
into
ss
out
not
leave
ret
into
out
fdivrl
fimull
in
movl
aaa
in
stc
jmp
shl
fdivrp
roll
sub
call
in
jmp
aad
iret
aas
rol
aad
push
inc
push
pop
pop
fldl
insb
jle
test
jle
xlat
jecxz
mov
out
lret
mov
lret
out
das
into
iret
fsub
sbb
fstp
rorl
mov
fnclex
int
lock
clc
jecxz
clc
int3
in
int3
cmp
cmc
shl
fiaddl
loopne
in
xor
jecxz
xor
rcl
clc
clc
cmp
cmp
fld
lret
std
std
xchg
shl
hlt
clc
into
xor
ljmp
cmpl
div
cld
idiv
out
test
repz
mov
xor
iret
stc
ljmp
fsub
fidivrl
sbb
jecxz
jmp
test
int
rcr
lock
out
xor
sarl
xlat
fcom
std
mov
sub
fucomip
mov
jecxz
int3
ror
cld
out
fcmovne
cld
repnz
cmp
lds
loope
lret
in
xchg
call
repnz
cmc
icebp
jmp
adc
std
addb
fsubr
xchg
sar
call
ror
int3
idivb
sti
out
shl
test
out
rcl
mov
test
loop
rcl
loopne
xor
call
fst
ror
hlt
fcmovnbe
call
clc
sti
xchg
jmp
mov
out
call
int
fsubp
sbb
ret
cli
into
mul
xchg
mov
hlt
in
ror
loope
int3
shl
cmp
cld
rolb
aam
mov
int3
movl
cmc
clc
cmp
or
fildl
xchg
test
loopne
lock
xlat
sti
lret
leave
in
int3
lret
and
and
in
shl
sti
fmulp
call
ljmp
cmp
xlat
fadd
int
cmp
into
adc
fmul
ljmp
repnz
out
loope
int
fdiv
hlt
iret
shl
shl
out
rcl
shl
jecxz
aas
mov
shl
ljmp
enter
repnz
push
aas
loopne
ret
out
test
call
adc
rcr
ljmp
in
repz
xchg
or
mov
loope
xor
xor
xor
int3
fcomi
icebp
in
shr
ds
ffree
cli
fucomp
cld
stc
int3
in
xchg
xor
shr
repz
fdiv
inc
clc
clc
in
clc
cmp
mov
nop
cld
mov
xchg
out
lock
xor
shl
loopne
cmp
repnz
repz
mov
sub
jmp
aas
into
lret
leave
aam
dec
jo
mov
outsl
jle
test
jle
int3
fisttpll
cli
xor
shr
idiv
vpmulhuw
loop
in
aad
out
fcomip
shr
ljmp
fldlg2
fnstenv
in
iret
stc
shr
div
enter
xlat
int
into
loop
cmc
out
sar
rcr
in
sarl
loop
xchg
hlt
repnz
call
fsubrp
mov
call
in
in
clc
cmp
sub
in
fcmovbe
rcr
sti
jmp
lds
jecxz
mov
mov
int
cld
jmp
cmp
sti
div
xlat
int
cmp
out
in
cmc
jecxz
in
aas
cmp
xor
mul
into
mov
or
test
call
cs
cmp
call
out
and
fstpt
out
loope
xchg
xchg
xchg
ret
cmp
cli
test
fstpt
icebp
fdiv
fidivrl
fldl
loope
jmp
and
cs
xor
aaa
loop
aam
into
and
add
mov
mov
stc
cli
std
ds
aad
cmc
aad
aas
icebp
xor
int3
out
addl
in
in
xor
cmp
xlat
repnz
rolb
icebp
lock
into
orb
test
cmc
loopne
cmc
int3
loopne
sar
fnclex
mov
testb
loopne
in
xor
sti
idivl
sar
xor
jmp
std
cmc
std
xchg
enter
lock
into
out
in
cli
enter
neg
fdivs
fadds
or
rorb
aam
xor
ss
faddl
fisttpll
xchg
loop
idivl
lock
fmul
in
fdiv
into
fsincos
shl
repnz
or
fiaddl
hlt
aam
ss
cmp
icebp
call
flds
mov
loop
add
cmp
repz
xor
xor
repz
loopne
ljmp
ljmp
xor
rol
call
cmc
in
jecxz
repnz
test
sbb
flds
shrl
lret
loope
stc
out
leave
fnstcw
aas
cmp
sar
jmp
sti
mov
xor
rol
cmp
repnz
shr
jmp
in
cmp
loope
int3
enter
leave
test
xchg
rcl
sub
fmuls
push
jmp
int3
ret
int3
int3
sahf
pushf
comiss
jle
test
jle
sti
shr
cmp
hlt
ds
into
cld
cmp
out
cli
vpor
popl
loope
lret
call
fldz
shl
xlat
sbb
lret
movb
xchg
xchg
in
xor
cmp
int3
cld
cmp
cmp
test
icebp
loopne
aam
mov
test
fiadds
xor
ror
xor
icebp
loop
cmc
loope
out
neg
cmp
out
loopne
loopne
in
subb
out
jmp
cmp
hlt
aas
ret
test
sti
addb
in
cmc
sti
lret
ds
jecxz
icebp
ffreep
jmp
loopne
mov
int3
icebp
out
mov
call
in
cmp
not
ret
aam
loopne
imul
call
xchg
repnz
in
xor
std
std
icebp
leave
loop
cmp
hlt
aas
mov
faddl
out
in
ret
in
repz
hlt
lret
fdivr
cmp
idiv
call
loopne
into
lret
fiadds
repz
fldlg2
not
fadd
ret
in
int
call
fcom
ljmp
mov
int
das
repz
sti
fcmovnu
bnd
rolb
test
in
mov
loope
neg
int3
aam
aad
cmp
xchg
loop
mov
out
lock
jmp
into
rcr
out
movl
cld
ffree
xlat
lret
sbb
xchg
out
into
xor
cmp
shr
ds
in
in
fadd
cli
mov
lock
fucomp
test
iret
iret
neg
into
cli
in
std
imul
loope
int3
fsubrp
test
cmc
mov
int3
loopne
enter
lock
in
aad
cmp
fcmovnu
lret
ss
cmp
test
in
iret
ljmp
loop
in
ds
clc
fnstsw
out
cmp
fdivr
rol
addb
xchg
rcl
nop
jmp
cmp
int
ss
repnz
out
icebp
cmp
jmp
fimull
bnd
ror
xor
into
call
aas
fucom
fdivrs
roll
iret
out
jecxz
fsubrp
xor
cmp
xlat
xlat
out
jecxz
shl
xchg
addb
test
sar
fcomi
roll
xor
cmp
out
sarl
jecxz
hlt
faddp
mov
mov
ffreep
lock
std
lds
out
repz
call
cmp
dec
or
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
pushl
pushl
pushl
call
jmp
adc
jmp
lret
into
fst
fstp
bound
jb
je
jle
add
not
sbb
fcmovnu
leave
out
fisttps
call
fcmovbe
dec
fidivrl
test
sti
rol
fsubp
idiv
mov
rcr
xor
xor
iret
ss
icebp
xlat
aad
clc
sar
stc
jmp
into
in
add
out
incb
lret
fnstsw
stc
icebp
roll
xchg
fld
ljmp
jmp
xor
ss
not
fdivp
repnz
in
fninit
clc
jmp
out
clc
mov
mov
loop
in
out
call
rcl
inc
aam
div
ret
ret
mov
xchg
addb
fidivrl
jmp
repnz
cmp
ds
in
xchg
icebp
fmul
addb
sar
enter
inc
ret
shl
sbb
into
cld
nop
leave
cld
cld
lea
stc
aam
repnz
jmp
aaa
cmp
lret
cmp
in
cmc
out
imull
ret
cmp
iret
ffree
lds
out
in
into
out
mov
out
addb
in
fucomp
clc
shl
faddl
test
out
in
out
iret
aaa
sarl
aad
idiv
fsqrt
shl
std
fidivrs
cmp
loop
test
in
in
nop
in
in
out
out
xor
fmul
loop
out
xlat
rolb
fucom
mov
out
iret
xchg
rolb
shr
push
cmp
shl
stc
hlt
xchg
loope
lret
ret
jmp
out
loope
xchg
cmc
adc
fsubrs
xor
int3
shll
out
out
sti
cmc
and
jmp
in
stc
in
call
leave
sar
in
imul
cmp
cmp
fld
sar
xlat
loop
mov
ret
fisttps
hlt
cli
sub
int3
cmc
cmp
fadds
int
in
lret
hlt
aaa
xor
lock
int3
fdiv
shl
shr
sti
in
fcmovne
test
out
mov
in
lret
icebp
aad
cld
jecxz
enter
mov
out
lret
in
xchg
out
xor
lret
les
idivl
rcl
fucomp
iret
int
cmp
fsubr
addb
out
xchg
in
lret
xor
fsubr
cli
sar
out
into
loopne,pt
cmc
fld
jecxz
in
loopne
mov
xchg
out
repz
ds
cli
out
xlat
cmc
hlt
fmuls
fsubr
xor
jmp
int
iret
rcl
aad
inc
xor
test
cwtl
fcomps
add
sti
fstl
in
aad
idivl
fnstsw
hlt
out
test
int
cmp
cmp
mov
leave
ljmp
jecxz
in
cli
cli
fstpt
sti
cld
cld
sarb
std
out
addb
out
loope
test
jmp
jmp
cmp
push
repz
aas
sbb
mov
call
jmp
decb
iret
mov
out
cli
ljmp
ljmp
fsincos
jmp
xchg
jecxz
jmp
fcmovnbe
iret
fdivp
fsubp
clc
rcr
sarl
loopne
addl
or
in
xor
in
cli
call
cmp
into
aad
mov
cld
fucomp
lret
out
xchg
rclb
ror
test
shr
jmp
jmp
xor
out
ret
icebp
enter
ljmp
faddp
in
jmp
lret
into
addl
clc
shrb
jmp
iret
jmp
idivl
shr
sar
in
fsubp
ljmp
xchg
nop
sti
in
int3
xchg
out
fdivs
aam
cmp
cmp
lret
aas
rcr
std
orl
jecxz
int3
mov
aad
ror
out
cld
out
fsubrp
stc
cli
adc
loopne
test
jmp
out
icebp
repnz
call
fcmovbe
out
rcr
out
icebp
fucomp
xchg
int3
lock
loope
shl
bnd
in
cmc
aas
shr
shl
out
rcl
rcr
and
fadd
loop
lock
repnz
loop
cmp
aad
sti
in
stc
addl
ljmp
mov
cmp
cmp
aad
stc
idivb
out
test
xchg
into
xchg
aam
jecxz
xor
cld
lock
enter
shr
cmp
fcmovb
fucomip
fucom
decb
lds
inc
fmul
cmp
aad
cmp
fdivr
rol
ret
fucomip
in
stc
mov
shl
aaa
ffree
cmp
loopne
clc
in
ret
aas
ljmp
fcomip
das
jmp
loop
xor
fsubr
cmp
test
iret
fdivrp
or
sbb
out
sar
loopne
jmp
icebp
shl
ror
fdiv
cli
xor
test
cld
xchg
xchg
xchg
ljmp
cli
into
cmp
cli
aad
xlat
flds
jecxz
dec
jecxz
rol
aam
mov
adcl
add
jmp
mov
fcmovnu
or
sub
fucomp
mov
test
jle
into
in
fmulp
in
int
ljmp
leave
stc
addl
in
fsub
xor
rcr
shr
icebp
aaa
into
repnz
loopne
not
cmp
loope
call
loopne
int3
ss
repz
cli
lret
std
cmc
iret
sar
cld
neg
neg
loopne
lds
loope
out
loop
xor
aam
out
iret
int3
faddp
jecxz
fstp
shl
call
test
stc
int3
iret
mov
aam
out
xlat
xor
iret
xchg
loopne
call
mov
rcl
fdivrl
repz
int
ds
aad
test
fdivp
stc
test
lret
ror
xor
out
stc
cmpl
roll
lret
in
leave
xor
xor
enter
ljmp
rol
sar
fcomp
mov
cli
mov
xchg
loope
xlat
icebp
cmc
jmp
out
div
sti
fcmove
aad
hlt
test
fiaddl
clc
call
incl
jmp
fcmovbe
out
lret
hlt
int
jecxz
loop
lret
out
mov
fdivr
dec
hlt
mov
into
lret
in
xor
aaa
fxch
ret
xlat
test
cmp
mov
sti
xor
repnz
fistpll
fnclex
test
in
idiv
movb
cld
loopne
out
hlt
xchg
in
xlat
aaa
icebp
into
std
cmp
cmp
aad
fadd
cmp
call
fldz
cld
out
cmc
ret
cmp
xor
in
lret
fcmovne
fcmovb
xlat
ds
shl
icebp
ret
clc
xlat
jecxz
xchg
adc
call
xor
idivb
enter
aam
std
push
add
fmuls
mov
xchg
mov
ss
cmp
in
fucomp
lock
idiv
loop
cmp
orl
lret
xlat
out
lret
aaa
cmp
addb
repz
loope
repz
xchg
mov
in
cmp
std
cmc
jmp
roll
int3
mov
out
shrb
loop
xor
xor
repz
aaa
cmc
jmp
in
testb
in
icebp
mov
xchg
loopne
in
jecxz
xor
cmp
fxch
addb
icebp
incl
jmp
xlat
ss
cmp
test
loope
fdivrp
in
repz
mov
in
loope
xchg
xchg
xchg
xor
lock
int3
std
cmp
clc
notb
xlat
mov
xor
mov
adcl
xor
movl
jmp
iret
lret
rcr
aad
int
jge
ja
cmc
fldcw
jle
add
fcmovnu
incl
fcmove
popl
jmp
xor
fnstcw
icebp
loop
loopne
cmc
test
xchg
fsubrp
xchg
out
aad
xor
repnz
into
neg
fstp
fst
rcl
sbb
sub
mov
xchg
out
icebp
shr
fstpt
aas
xor
imul
cmp
cli
cmp
mul
int
in
cmc
mov
fcomi
xor
out
int
xlat
lock
std
hlt
test
xchg
in
icebp
mov
icebp
icebp
cmp
cmp
ljmp
ret
adc
cli
mov
mov
xor
int
shr
cmp
shl
adc
sar
mov
loop
std
out
in
fcmovnb
mov
call
clc
out
not
aad
lock
out
loopne
xor
fdivp
fsubp
mov
mov
jmp
hlt
addb
test
repz
testb
iret
shr
in
iret
lret
hlt
sub
rcl
repnz
clc
lret
xchg
aas
cmp
enter
jecxz
loope
std
leave
in
jmp
lret
out
fdivrl
in
xchg
cli
idiv
cli
jecxz
mov
out
jmp
shl
clc
fdiv
cli
into
xor
in
iret
mov
cli
in
jecxz
fdivp
mov
fsubr
rclb
leave
in
ss
cmp
ret
ss
ret
ret
lds
jmp
aam
divl
aam
cmp
in
aas
jmp
lock
repz
fsubr
mov
loope
xor
enter
call
icebp
iret
roll
fstp
loop
fisttpl
in
mov
out
fsin
sti
fistpll
loop
icebp
fdivr
icebp
shl
ljmp
cli
cmp
jecxz
shl
icebp
in
xor
lret
leave
aas
cmp
addl
std
jmp
out
fucomi
sar
lock
cmp
call
cmc
cld
out
fldl
clc
int3
lret
ror
xchg
in
out
loop
xor
xor
out
cmp
jmp
mov
mov
call
aad
enter
repz
rcr
rcr
sar
cli
in
cli
xchg
icebp
mov
pushl
fadd
int3
sarb
xor
shl
cli
sti
cmp
cld
shl
mov
decl
xchg
xor
int
cmp
lret
test
cmp
addl
add
pushf
clc
add
movl
jmp
jmp
enter
int
int3
lret
xlat
ja
lea
jg
jle
add
xchg
loop
mov
lea
cmp
jmp
sti
cmp
lock
loope
cli
cmp
mov
test
out
fmulp
mov
std
iret
icebp
jmp
xor
enter
fdiv
out
into
clc
jecxz
repz
ret
jmp
fmul
fists
ror
int
enter
std
fucomi
repnz
loop
enter
jecxz
shl
xchg
incl
icebp
aam
lret
aaa
repnz
aas
fiaddl
lret
mov
mov
mov
lret
xchg
jmp
cmp
fidivs
sbb
stc
aas
test
cmp
xlat
out
ret
mov
lds
shr
fcomi
xor
xlat
ss
vpaddb
loope
cld
jmp
shl
in
sar
xor
int3
cmp
out
stc
cmc
xor
rcr
addb
enter
int
xchg
test
sti
shr
lret
out
clc
rcr
fucom
fcom
xlat
cld
std
neg
mov
enter
mov
fucomip
call
in
repnz
add
int3
loop
loope
leave
mov
lock
ret
lret
div
call
cmpl
out
mov
loop
addl
jmp
not
leave
fcomp
cmp
into
lock
jecxz
fmul
call
in
ficoms
xor
enter
aad
out
fcmovnb
aas
aad
xlat
repz
fsub
cld
repz
sar
cmp
idivb
hlt
sar
ret
inc
in
mov
stc
cld
mov
cli
bnd
aam
fadd
iret
cmp
out
hlt
shr
std
test
cmp
stc
repz
incl
loope
mov
shl
fadd
sti
aaa
cmp
repnz
mov
ffreep
loope
cld
orb
divl
lret
icebp
std
in
fcmovb
sarb
std
roll
cli
int3
cld
in
jecxz
mov
rol
in
jmp
cmp
hlt
stc
in
int3
sarl
repnz
aad
test
fimuls
lret
icebp
xor
aam
sti
fxch
icebp
fnsave
fsubp
notrack
ds
call
jecxz
xchg
out
ljmp
hlt
fcmove
std
repz
in
out
loop
hlt
xlat
fcmovb
out
orl
xor
leave
jmp
fsubr
jmp
fcmovnb
cli
fucomp
sar
cld
out
nop
int3
out
shl
lock
sar
aam
mul
fcmovnu
or
icebp
sti
stc
cmc
fucomi
mov
in
loopne
aam
hlt
cmp
jne
mov
mov
mov
movl
mov
mov
mov
mov
notl
jmp
rol
lret
ffree
aam
mov
mov
jg
rol
add
test
jle
cli
int
call
cmp
fcmovbe
rorl
decl
std
lret
in
aam
xlat
enter
cmp
ret
loop
test
ffreep
cli
icebp
mov
jmp
aaa
int
cmp
shl
fiaddl
mov
in
in
hlt
out
out
lret
lret
xor
out
ss
rcl
cmp
ds
fimull
cld
div
loop
fucomip
sbb
lock
jmp
repnz
fildl
fmul
into
std
mov
enter
clc
fdecstp
hlt
cmp
icebp
fcmove
out
loop
sar
leave
or
sti
and
in
or
iret
das
in
loopne
fst
into
aam
repnz
fldl
int
call
call
fcmove
fcomip
shl
in
ds
cmp
in
sbb
call
xchg
int
repz
sar
icebp
fsub
int3
rcl
lock
test
cld
aam
cli
out
stc
test
call
ror
enter
shll
cmc
int
xlat
aam
ret
fcmovnbe
test
repnz
cmp
cld
cmp
repnz
out
cli
cmp
fidivrs
testb
nop
loopne
iret
lret
hlt
xchg
fbstp
aaa
idiv
fcmovbe
cmp
shl
cmc
fnsetpm(287
cli
sar
ret
in
fiaddl
sar
in
cmp
shl
call
or
fnstsw
repnz
nop
in
mov
out
call
lock
repnz
repnz
hlt
call
rorl
shl
ljmp
iret
aam
lret
jecxz
fsubrp
filds
out
in
ret
cmp
out
aam
lret
aam
out
ss
stc
addb
cld
sti
icebp
xor
icebp
mov
out
ret
hlt
ljmp
icebp
rol
shl
xchg
ljmp
rorl
jmp
test
std
cmc
cmp
repz
les
xchg
lret
cmp
repnz
int
repnz
cmp
addb
leave
in
xchg
mov
in
idiv
loopne
ret
cmp
fsub
ret
call
xchg
repnz
xchg
sub
aad
sbb
fmul
aam
fimull
sti
cli
clc
jmp
in
jmp
call
inc
call
add
add
ret
add
int
xlat
mov
jg
test
jle
xor
hlt
fmuls
xchg
in
fucomp
shl
repnz
out
sub
in
fcmove
cmp
aam
rcl
cmp
test
test
lock
into
jmp
icebp
int
in
aaa
clc
hlt
testl
clc
xor
out
into
cld
int3
in
xchg
lret
ljmp
dec
rcl
out
lret
cld
lock
cmp
stc
stc
enter
iret
orb
out
fdiv
cli
fnstcw
div
shl
fdivp
sarb
int3
lret
popl
enter
shr
fcomip
rcl
iret
fcomi
or
ret
stc
cmp
in
xchg
xchg
xlat
loopne
sti
ljmp
loop
hlt
cld
loop
aad
rorb
out
loope
int3
ljmp
in
enter
fdivr
xlat
in
fcmovbe
incl
out
xchg
xchg
test
int
xor
das
aam
cmc
ljmp
rol
shl
test
loop
repz
ss
in
fidivrs
iret
loope
ret
mov
xchg
roll
loop
repz
std
cmp
or
lret
aad
fcomip
loope
cmp
fndisi(8087
mov
xor
int3
iret
lret
int3
imul
fmul
int3
shl
sar
aas
sar
jecxz
call
in
sub
das
repz
aaa
sarl
lock
sub
mov
cmc
stc
test
iret
shl
iret
int
std
xor
loope
ret
loop
mov
rolb
jecxz
jecxz
orl
fsub
repnz
call
aad
clc
hlt
testl
mov
mov
int3
fldz
in
sti
ljmp
xchg
loopne
and
leave
mul
in
mov
mov
hlt
cmp
hlt
rcl
hlt
loope
int3
faddp
cmp
repnz
out
fcoml
in
enter
div
rolb
mov
loope
fiaddl
call
fnstenv
cmp
std
addl
jmp
in
enter
jmp
xor
sti
loop
lds
sar
jecxz
lock
loopne
rclb
xbegin
xor
std
std
iret
shl
out
loopne
ret
cmp
call
icebp
std
lret
loopne
jmp
jmp
cmp
loope
in
jne
sbb
andl
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
call
cmpl
jb
xorl
jmp
ret
int3
int
ret
leave
pop
cs
xchg
pop
jg
test
jle
fxch
xchg
loopne
icebp
out
rcl
cmp
aaa
fcmovu
test
cmp
cli
loop
fxch
fdivrp
stc
lret
int3
mov
hlt
xlat
shr
call
addl
in
call
lret
sub
aad
aaa
icebp
testb
mov
loop
fdivr
ret
jecxz
adc
shll
int3
call
aad
adc
repz
jecxz
mov
int3
xchg
fsubr
xchg
clc
cmp
hlt
shl
aad
fst
shl
out
std
cmc
in
call
mov
in
mov
ror
in
test
leave
cmp
fdivr
shl
fsub
std
cmc
out
icebp
mov
cs
lret
ljmp
cli
ret
fstp
clc
out
ljmp
jecxz
out
int
iret
lret
vpsllq
aad
lret
in
lock
test
clc
lret
ds
out
fisttpl
orb
rol
neg
fcmovnb
call
in
xchg
les
out
sar
mov
out
icebp
xor
jecxz
stc
jmp
xor
rol
faddp
xlat
aam
xchg
mov
popl
in
iret
ret
cmp
jmp
cli
or
rcr
cli
repz
in
mov
out
mov
addl
out
sarb
hlt
fcomi
mov
icebp
aam
mov
loope
xchg
xchg
lret
out
loop
in
std
cmp
in
cmp
out
xlat
aas
aad
cld
loope
lock
xor
cmc
repnz
cmp
ljmp
idivb
incl
call
jmp
enter
iret
shr
xor
lock
lock
xlat
sti
call
lock
test
jmp
cmc
xlat
call
fcmovu
mov
out
add
test
into
call
out
sub
stc
cmc
ret
fcomp
jecxz
cmp
bnd
xor
into
call
std
into
rol
clc
cmc
aas
shl
call
lock
mov
repz
mov
out
shr
leave
clc
call
cmp
fsub
add
fsubr
xchg
out
ret
leave
loop
xchg
xor
repz
lret
cmc
call
iret
lock
incb
in
shr
lret
test
out
out
aaa
repnz
xlat
lock
iret
fdivrp
aad
out
shl
cmp
incl
xchg
call
xchg
rorl
xorb
mov
add
inc
or
or
pushf
ja
add
ret
add
int3
ror
fcomp
aam
aas
idivb
jbe
or
test
jle
das
iret
f2xm1
stc
in
std
lock
cmp
xor
repnz
hlt
loope
enter
int3
fcmovnu
out
push
test
jmp
cli
ds
test
ret
fsub
ret
mov
xchg
out
repz
sub
xor
neg
loop
aam
test
stc
fdivr
mov
aam
call
in
xchg
not
aam
into
lock
ss
enter
into
std
cmc
loopne
xor
mov
lret
in
mov
cmc
lock
fst
cmp
ret
mul
hlt
mov
jmp
loopne
mov
cld
mov
icebp
mov
fdivr
xor
leave
int3
sarb
in
in
rcr
out
xchg
hlt
xchg
mov
mov
xchg
mov
out
das
cmp
flds
not
fucomi
jmp
call
orb
cmp
clc
stc
idivl
rcl
rcl
lock
adc
xchg
call
mov
jmp
ret
xor
cmp
or
shl
testb
jecxz
mov
ljmp
ret
xlat
ror
sti
stc
xor
cld
sar
cmc
sub
repnz
loopne
in
push
lret
shl
cmp
rcr
cld
lret
int
addb
cli
testb
cld
out
repnz
in
xor
enter
out
ds
jmp
lret
test
cld
mov
icebp
ss
xor
fdivs
sbb
incl
int
movl
ljmp
int
jmp
cmp
ror
std
fisttps
out
xchg
shr
mov
int3
ss
jmp
cmc
ds
fcmovb
lds
call
in
mov
in
hlt
jecxz
jecxz
lret
aaa
icebp
aas
xchg
fcmovb
lret
into
into
mov
jmp
jmp
out
sti
xlat
fdivr
int3
cmp
rcl
ret
sarb
mov
ret
sti
mov
enter
fsub
loop
xor
ljmp
rcl
in
roll
aam
in
inc
ret
xchg
xchg
into
rcl
lret
jmp
sti
aad
rcr
adc
inc
roll
cld
test
leave
fdivr
cmp
rcl
clc
shr
test
loope
jmp
jmp
fucomi
rorb
out
cmc
shl
sub
aaa
aaa
repnz
cmp
cmp
repz
mov
loopne
loopne
in
out
loope
mov
into
in
cmc
fnstenv
clc
clc
aad
inc
cld
sbbl
add
push
call
incl
jmp
ret
rcl
aam
ret
sarl
and
push
add
out
fcmovne
repnz
mov
test
lret
jmp
enter
dec
hlt
jmp
xor
xor
aad
addl
out
in
mov
out
xor
bnd
icebp
cmp
repnz
cmp
in
test
xchg
testb
cli
xchg
call
aaa
xor
in
out
fcomi
shll
jecxz
loop
xchg
aad
mov
icebp
call
xor
cmp
xor
aam
fdivr
into
cmp
fcmovbe
test
fcmove
decb
orl
sub
aas
sarl
faddp
jmp
jmp
and
fldl
repz
std
xor
into
aam
in
rorl
out
xchg
lret
sti
hlt
iret
out
cmp
xor
repz
hlt
loope
sti
int3
sar
mov
in
in
sub
loop
not
out
cmp
int
aaa
enter
icebp
cli
iret
in
test
xchg
or
fmull
int3
enter
fcmovnbe
aam
loop
int3
addl
rcl
out
jmp
int
xlat
xor
cmc
sarb
addb
loope
test
leave
addb
ss
xor
cmp
fdivrs
in
out
in
ret
sar
mov
cli
lret
test
call
xlat
aam
aad
fildl
test
neg
cmp
jmp
lock
repz
fmulp
iret
into
xor
sti
ret
fsqrt
in
jecxz
ficoms
shll
enter
ljmp
test
stc
cld
cli
ffree
sbb
ljmp
xor
stc
fdivrl
hlt
test
rcr
sar
test
jmp
out
jmp
cli
call
fdiv
clc
ffreep
ret
mov
int3
int3
rcr
div
in
test
out
ss
into
in
cmp
fisttpll
leave
fdivrp
loopne
mov
leave
int
cld
test
stc
aas
aam
call
fcmovb
loope
out
loopne
hlt
out
out
test
aas
lock
ret
fcmovnb
out
xchg
nop
clc
stc
mov
out
aaa
xor
in
iret
fdivp
cli
shl
mov
stc
jmp
shl
rcr
xlat
test
shl
icebp
rol
jecxz
jge
push
jb
jmp
cmp
jne
movl
mov
mov
mov
mov
mov
jmp
sarb
ret
enter
fldl
jge
int
sbb
movq
add
cli
fcomip
leave
jecxz
fimull
shlb
xor
std
fucom
std
clc
lret
cli
cld
cli
call
mov
enter
sub
nop
out
jecxz
clc
ljmp
stc
xlat
movl
cli
decb
xor
xlat
sar
cli
iret
jecxz
add
cli
std
div
jmp
icebp
nop
int3
xchg
xor
cmp
hlt
sti
stc
xor
xlat
jecxz
jmp
mov
repnz
xchg
not
xor
stc
call
fcmovb
in
not
sarl
les
sar
hlt
aad
cmc
repz
int3
vpsllw
icebp
aas
in
ret
cmp
test
sbb
test
xor
sti
in
fdivrs
sarl
sbb
rol
ret
cmc
cmc
rcl
mov
fcomp
sti
xchg
xchg
out
jmp
out
hlt
out
fcomi
loopne
push
iret
aam
jmp
test
or
adc
in
loope
int
leave
in
xlat
cmp
rcl
cli
aam
loope
test
sub
fsubrp
lret
in
xor
out
cld
iret
int3
xor
repz
out
fiaddl
mov
int
cld
int3
out
sub
cmc
std
cmp
clc
fsubr
aam
xchg
ret
leave
leave
mov
int3
repz
shl
jecxz
div
aas
jmp
adc
mov
orl
jmp
rcr
iret
cmc
cmp
fdivr
f2xm1
into
mov
ror
mov
out
xor
call
ljmp
fcomp
aad
aad
int3
sti
loop
out
orl
imul
icebp
iret
das
call
fstpt
clc
in
loop
enter
out
icebp
icebp
lret
jecxz
repz
jmp
sbb
test
cmc
in
repz
nop
enter
mov
aam
divb
neg
ror
aad
shr
sar
cmp
out
fucomi
mov
out
out
mov
xchg
shl
rol
cld
cmp
cmp
cmp
fnstcw
loope
in
lret
mov
out
rclb
out
repnz
cmc
xor
ror
adc
icebp
cmp
loopne
fucomi
in
test
ljmp
cmp
rol
cld
clc
fildl
fcmovnb
cld
nop
int3
into
das
jmp
aaa
dec
roll
out
repz
cli
xor
mov
ljmp
add
mov
lea
mov
mov
xor
add
jmp
ror
fmul
fcomp
fcmovnb
aad
jp
fisttpl
jle
add
testb
clc
aaa
pushl
sarb
rolb
hlt
loopne
loop
fiadds
out
vcmpsd
in
ror
jmp
cmp
sti
in
fimuls
fsub
rclb
aaa
jmp
testb
out
lock
in
ret
fmull
lea
int
shl
cmp
ss
fld
fmulp
lock
loope
out
jmp
in
xchg
in
lock
divb
into
lock
fcmovbe
sti
aas
into
in
loop
fcmovu
aas
loopne
jecxz
std
fstp
fmull
in
stc
rcr
das
in
cmp
xorb
addb
fsubp
fdivr
in
in
loope
notb
fcmovnu
call
hlt
hlt
in
repz
loope
into
and
repz
xor
leave
call
ret
aas
flds
in
loopne
fsubp
xlat
xlat
hlt
sti
bnd
icebp
test
cmp
cld
vpsraw
lret
dec
sub
cld
incb
into
in
hlt
enter
repz
out
loop
fninit
ffreep
iret
lock
lock
hlt
shl
jmp
cmp
stc
cmp
cmc
loopne
ffree
aad
jmp
fsubrp
incl
jmp
loope
cmc
int
cmp
out
fdivrp
lock
fnop
in
mov
fisttpl
in
xor
out
shl
ror
cmp
loope
fdivrl
jmp
out
fdivrp
leave
out
nop
loopne
shl
enter
cmp
rcr
faddp
fucom
test
aad
fldl
lock
out
cmc
cmc
enter
cmp
jmp
loop
sbb
aas
fiadds
cmp
iret
fsubrp
aam
out
xor
cmc
ss
fstp
fucom
ret
icebp
fld1
out
incl
std
loopne
mov
fdivrl
out
out
cli
cli
into
cmc
aas
icebp
ret
add
mov
leave
mov
xchg
in
shlb
fcomp
idivl
xor
idiv
loop
xchg
sar
fucomp
dec
jecxz
into
std
jmp
xor
fcomi
xor
in
test
cmp
int3
test
loope
repnz
repnz
mul
f2xm1
aaa
in
idivl
loopne
out
repz
aam
leave
out
test
enter
xor
shr
fldl
out
hlt
ds
mov
loopne
sti
mov
loop
xchg
out
aad
out
cld
mov
lea
push
mov
xor
jmp
int3
int
fstp
cmp
pop
pushf
lods
and
jg
test
jle
ljmp
repnz
leave
hlt
dec
out
xrelease
xor
enter
lret
ror
rol
sar
mov
in
stc
in
fcmove
sti
shl
call
out
fnstenv
fdivrl
add
enter
fldl
enter
shl
aad
idivl
cli
loop
jecxz
out
stc
iret
in
xchg
jecxz
lret
clc
sar
xor
in
fadd
rorb
testl
xlat
repnz
in
cmp
frndint
iret
aas
clc
rcl
loope
addl
jmp
repnz
fcom
clc
ljmp
icebp
cmp
cmc
aad
addb
xchg
into
mov
xor
rcr
lock
int3
leave
idiv
shr
adc
test
test
in
repz
ret
cmp
into
xlat
loope
shr
sar
faddp
std
loope
enter
xchg
loop
shl
hlt
xchg
in
ret
ret
jmp
idiv
fcom
fadd
sti
ret
lret
nop
mov
mov
call
fsqrt
ror
lret
call
clc
fnclex
idivb
icebp
shl
mov
jecxz
in
rcl
loope
repz
in
xor
loopne
int3
cli
ffreep
std
faddl
enter
xchg
out
cmc
sti
call
icebp
fadd
std
in
repz
lock
mov
mov
jecxz
icebp
stc
imul
testl
fucomi
and
cld
lock
ss
loop
cmp
fmul
out
sti
loop
loopne
in
test
stc
fsub
mov
int
out
hlt
xchg
loop
sti
fucompp
fcmovbe
icebp
icebp
int3
jmp
test
loope
cmp
repnz
out
mov
cmc
xor
int
hlt
in
out
aam
into
ror
cmc
clc
and
repz
jmp
add
aam
das
rcr
repnz
into
out
out
repnz
fdiv
std
out
repnz
loop
fadds
xchg
rcl
aad
call
cmp
aas
cmp
test
test
fdivr
leave
std
int3
fsubrp
cmc
loope
stc
shl
fcmovnb
repnz
jmp
sti
sti
fcmovu
mov
rolb
jmp
int
xlat
repz
aam
cmp
div
mov
push
loope
in
fldl
aad
xor
ds
cmp
repz
les
ret
add
xlat
rcl
rcr
lret
push
cmp
aad
fisubl
jle
add
test
in
cli
incb
ss
int
fucomi
fucomp
xlat
addb
shl
in
loop
orl
xchg
into
idivb
xor
shll
leave
hlt
stc
cmp
fsubp
xchg
std
test
xchg
jmp
repz
leave
in
xor
stc
sarl
aam
xor
int3
ds
fdivr
cli
inc
enter
leave
loop
out
into
aas
shlb
stc
cli
ror
shl
out
sarl
rcr
mov
lret
in
fisttpll
xor
leave
sti
in
jmp
out
repz
in
cli
in
ljmp
mov
ljmp
ljmp
mov
aam
mov
sti
rcr
orb
ret
lret
xlat
cmp
iret
cli
sti
cli
jecxz
fcmove
rcl
mov
in
into
loopne
ss
xor
cmc
aas
cld
rcl
cmc
in
fsubr
in
jecxz
jmp
in
jmp
loopne
in
stc
clc
clc
sar
fbstp
or
cld
cmc
aad
hlt
sub
jecxz
enter
cld
in
xchg
out
xor
aad
std
jmp
icebp
sar
aam
into
cmp
cmc
repnz
imul
call
xor
cmc
lret
sti
test
clc
mov
out
xchg
fildl
lret
hlt
aam
sti
std
repz
out
out
leave
hlt
or
fmulp
fucomip
into
int
xor
ret
xlat
aad
repnz
addb
fildl
xchg
enter
hlt
sar
aad
out
lock
div
in
repnz
cmc
fdivr
mov
test
into
cmc
out
rol
cmp
fmul
fadd
fdivr
std
loopne
les
cli
cld
out
in
lea
in
xor
fbstp
repz
fdiv
add
orb
xchg
lret
in
aam
xor
cmp
rcl
loopne
aam
test
into
out
jecxz
dec
out
aaa
leave
sti
fdivr
shl
leave
rcr
loopne
rol
stc
roll
ret
xchg
nop
enter
sub
into
jmp
aam
loop
cld
jecxz
movl
fcomip
lret
out
aaa
int3
stc
loopne
stc
repz
test
stc
mov
out
call
lret
fidivl
div
aas
rcl
jmp
lds
xor
test
and
lea
push
pushl
call
jmp
jmp
rol
into
xlat
rcr
fcmovne
lret
pop
xlat
adc
rcl
lcall
jle
sub
repnz
out
ljmp
fcomp
mov
fildl
call
out
xor
xor
out
cmp
fmulp
cld
stc
loope
xlat
fcmovnbe
in
out
fcomp
test
xor
lret
fcmovbe
call
stc
sub
loope
call
cli
loopne
icebp
ljmp
into
fnstsw
cmp
stc
cmp
out
aad
fld
lock
cli
testb
addb
out
aaa
leave
into
fyl2x
fnop
repnz
sbb
fcmovnu
ljmp
dec
mov
mov
xor
lret
cld
jmp
int
fcmovbe
loopne
icebp
ret
test
clc
jmp
lea
xor
repz
call
cmp
sarl
loope
stc
testb
repz
jmp
in
cmp
loope
clc
in
shl
icebp
jecxz
fadds
into
out
sub
clc
out
in
in
aaa
aas
std
fcmovu
clc
clc
cmc
cli
call
rcr
xchg
adc
aaa
cmc
test
xor
xlat
xlat
test
hlt
jecxz,pt
cmc
jecxz
aad
fldln2
int3
and
lret
jmp
icebp
fdivp
cmp
ret
fisttpl
jmp
int
mov
enter
int
cld
aam
std
into
hlt
cld
ret
iret
hlt
xlat
rolb
out
sbb
mov
xor
aam
iret
jmp
rolb
fsub
xchg
lret
mov
das
xor
int
not
movb
cli
fldl2t
xchg
xchg
adcl
std
or
vpslld
idiv
fmulp
out
ficoml
test
cld
lret
cmp
out
icebp
icebp
testl
in
in
xchg
ret
xor
stc
aad
lock
sar
repz
faddp
in
jmp
enter
jmp
int
iret
xor
ret
in
fcmovb
enter
out
sti
or
ret
in
into
mov
call
mov
shl
fnstenv
jmp
aas
int
test
ret
test
mov
fchs
test
xchg
int3
xlat
das
xor
out
leave
loopne
xor
inc
cld
out
out
xchg
test
xor
jmp
cmp
cmp
aad
repnz
mul
lock
div
mov
rcl
mov
and
lret
out
cmp
jne
jmp
enter
rcr
adc
lock
xor
fs
jle
add
in
rcl
aaa
aam
idiv
in
stc
leave
xchg
in
lret
out
cli
call
lret
in
cld
clc
cld
cmp
fdivrs
in
fnstsw
out
loop
in
lock
shr
call
lret
icebp
xor
fcmovbe
jecxz
in
cld
sti
mul
test
mov
in
xchg
loopne
call
cld
in
icebp
fstp
loop
cmc
fsub
cmp
xlat
popl
shl
int3
int
xlat
out
int
icebp
cld
shr
in
aam
call
int3
mov
mov
loop
jmp
int3
ljmp
cmp
cmp
loop
xlat
fucom
xchg
mov
cld
repz
nop
repnz
into
icebp
xor
fadds
in
shl
push
out
loopne
sti
fildl
cs
out
not
out
int
iret
cmp
cli
in
aam
shl
out
int3
fcmovnbe
int3
imulb
ror
cld
cmp
cmp
lret
ffreep
mov
xchg
sbb
int
aad
jmp
cmc
icebp
ss
int3
hlt
repnz
fsubr
repz
shl
fdivr
jmp
out
lret
adc
les
enter
idivb
std
rol
loop
iret
lock
fadd
ljmp
mov
jmp
rcr
fcos
stc
lock
rol
aad
decl
mov
mov
fisttpll
clc
aam
lret
enter
faddp
icebp
std
sarb
mul
cli
in
jecxz
fadd
repnz
aam
cmp
cmp
aam
shr
out
sar
xlat
and
iret
sti
mov
jmp
ljmp
lret
call
int3
test
fst
fyl2xp1
aas
mov
int3
decl
fmulp
shr
fcom
icebp
aaa
cmp
fdivs
in
xlat
fdecstp
repz
rolb
mov
jmp
ret
in
loop
fmulp
ljmp
xor
std
aas
sbb
aad
mov
mov
repnz
ror
lret
repnz
lock
call
std
in
mov
out
int
ret
int3
not
rcr
shlb
leave
cmc
shr
fcmovnu
not
addl
int
xchg
repnz
lock
divl
xor
out
cmp
neg
fadds
addb
xchg
jecxz
rcll
jmp
rcl
loop
out
stc
jecxz
test
fmull
xchg
adcl
ljmp
cmp
mov
xor
add
jmp
rcl
rcl
aad
mov
ficompl
pop
jg
test
jle
out
enter
jmp
clc
or
xchg
in
jecxz
pop
clc
fmul
aad
stc
jmp
out
jmp
fmulp
ljmp
mov
test
cmp
into
aam
cmc
ds
in
in
cmc
iret
jmp
int
out
xchg
shr
into
div
cmp
shll
ljmp
sarl
dec
stc
adc
leave
mov
div
ror
int
iret
xor
fcmovbe
cmp
aas
rcr
in
test
loope
int3
test
cmc
out
enter
cmp
jmp
into
xlat
aaa
in
xlat
fdivr
cld
cli
in
f2xm1
xchg
lea
in
cmp
ljmp
out
aam
rcl
fildl
aam
ror
stc
fdivrs
cmp
aam
fsubr
iret
hlt
or
fimull
jecxz
mov
sub
repnz
ror
jecxz
ret
call
mov
fcmovnb
fucomi
out
in
xchg
icebp
iret
das
test
fdiv
aam
cmp
iret
fdivp
cmp
out
leave
jecxz
ror
xchg
ror
fdiv
cmp
roll
into
cmp
jmp
fdivr
clc
fdivrp
in
sti
call
fdiv
cmp
into
icebp
ds
ds
repnz
aad
mov
aam
not
ror
repz
jmp
in
int
aad
in
test
inc
std
mov
loope
cmc
leave
stc
fcmove
jecxz
in
shl
ror
aam
leave
stc
sarb
stc
lock
fstp
idivb
stc
cmp
int3
filds
ss
lret
aad
sar
into
clc
aad
fcomi
fcomi
cmc
in
or
int
sti
in
test
jmp
leave
xor
in
lock
fcomip
ret
in
ret
orb
out
xchg
int3
rol
cmp
aad
std
cmc
cmp
loop
mov
xchg
jmp
xorl
cmp
in
cmp
ret
repz
loopne
repz
jecxz
sub
nop
loop
jecxz
rorl
aaa
xor
fcomip
std
cmpb
fcmovbe
test
loop
incl
mov
xchg
loopne
xlat
jecxz
shlb
rcr
icebp
fucomi
icebp
icebp
in
sti
loop
ret
in
dec
sti
shr
into
xor
icebp
fsubr
rcr
fdiv
int
out
in
fisttps
xchg
mov
cmp
xor
ljmp
roll
in
sti
jecxz
inc
or
ret
add
xlat
int
fstp
rcr
ficoms
cmp
jg
test
jle
loopne
xchg
xchg
xchg
int
in
xor
fsubp
ss
cld
idiv
jecxz
repz
lret
fsub
out
mov
mov
xchg
test
jmp
sti
fnstcw
shr
cmp
ret
xchg
ret
rol
test
fcmovb
cld
rolb
out
aaa
loop
in
cmp
lret
in
repz
mov
testl
int
xor
fdivr
out
stc
repnz
rol
loopne
out
fmull
mov
cmp
leave
cmp
out
fnstsw
cld
cmp
icebp
repz
aad
out
cmc
or
lret
jecxz
int
int3
in
xlat
div
fnstsw
repz
loop
ret
testl
leave
std
nop
out
clc
in
out
aaa
xor
cli
rol
xchg
call
in
loop
out
nop
ret
hlt
aad
rcr
into
shr
shr
int
incl
stc
jmp
loopne
loop
out
iret
rclb
fdiv
out
cmc
shl
fldl
call
fldl
fcmovne
test
test
shr
out
fsubr
cmp
icebp
ret
clc
filds
int
call
xlat
jmp
shr
fnsave
cmp
loopne
in
fdivp
ret
loop
jmp
in
leave
in
fiadds
into
enter
icebp
std
lret
shl
rcl
stc
in
test
iret
in
lds
iret
fidivl
hlt
sarb
out
lret
sar
clc
vcvtdq2pd
fstp
fcmove
in
or
xchg
in
lret
shr
cmp
clc
rcr
cmp
int3
and
rol
aad
loope
fdiv
in
add
rcl
xor
out
icebp
cmc
lret
fcomi
sbb
shr
cld
hlt
in
int
out
sub
shl
leave
ljmp
aas
aas
frstpm(287
idivl
jmp
out
loope
loop
test
fucomip
in
int3
stc
fxch
fucomip
cmp
lret
stc
out
hlt
rcl
enter
leave
add
out
loope
nop
enter
jmp
cmp
aad
loope
orl
iret
fmull
rcl
cmc
in
lret
lret
hlt
xlat
fcmovnbe
sub
sar
test
fmul
fmull
in
fdivr
rcr
icebp
xor
fcmovnbe
jecxz
fsub
repnz
ret
call
into
hlt
lds
xor
fxch
mul
fadd
rcl
test
sti
test
jecxz
nop
xor
sti
inc
add
in
mov
mov
push
jmp
leave
ror
rcl
jecxz
in
push
push
inc
bound
jle
add
aaa
lret
sti
ljmp
rcr
fcom
aam
mov
fcmovbe
cld
out
cmc
xor
call
loopne
fcmovu
aaa
aad
out
cld
aam
orb
repz
fxch
jmp
icebp
xorb
cmp
aad
roll
mov
mov
cmp
mov
into
clc
jecxz
cmp
ljmp
test
test
cld
cmc
ffree
fmul
loope
in
xchg
test
test
fsubr
bnd
cmc
fadds
in
out
cmp
test
fcmovbe
ljmp
std
xor
fadds
jmp
lock
out
fcomip
iret
int3
stc
lret
cli
ljmp
hlt
idiv
call
addb
test
ljmp
call
iret
imul
rcl
shl
fcos
clc
mov
nop
out
fsubr
aad
lret
enter
int
fcomi
xor
enter
mov
in
in
int3
in
rcl
xor
hlt
sti
shrb
rcr
aad
ror
in
into
std
cmc
adc
lret
shl
leave
leave
loop
enter
sti
shl
jmp
rcl
fdivp
jmp
cli
mov
xchg
mov
out
shr
loopne
in
rol
icebp
in
in
xlat
fcmovnb
clc
repz
dec
in
int
decb
out
into
shlb
aaa
adc
cld
iret
sar
sti
sbb
jmp
and
xlat
in
cs
cmp
fucomi
cmp
fadds
jecxz
lret
lret
repz
mov
leave
cmp
int
xor
ret
xchg
sbb
ret
imul
orb
jmp
xor
aam
std
in
jmp
lock
ds
fcmovnb
xlat
aad
int3
ljmp
xchg
mov
int
fcmovnb
in
out
enter
lock
lock
fmul
xchg
int
rorl
xor
cmp
fnstcw
clc
loopne
fld
sar
xor
mov
fildl
out
loope
jecxz
ljmp
fucomip
fnstsw
clc
xlat
addb
mov
xchg
mov
clc
das
aad
cmp
repz
fst
cmp
std
cli
div
fcmove
out
into
movl
xlat
out
into
icebp
repnz
cli
sti
cmp
fcmovne
xlat
loopne
aad
test
xchg
into
out
enter
fcomi
loope
pop
jmp
into
iret
xlat
xlat
into
xlat
fwait
in
mov
daa
jg
test
jle
lock
aam
enter
enter
sti
test
sar
stc
aad
add
int3
xlat
out
adc
sar
cli
lea
xchg
out
leave
ret
leave
sti
cmp
div
jecxz
fsubr
ret
xchg
mov
fmulp
xchg
cli
mov
icebp
xor
aad
enter
fyl2xp1
in
or
div
xlat
inc
sbb
mov
mov
cld
out
mov
ret
cli
ret
ss
xor
cld
std
stc
rcl
int3
cmc
cmp
ret
lds
loop
mov
fldl
idivb
lret
aad
cmp
xor
in
xor
cli
fcompp
loopne
adc
loope
jmp
shr
in
lds
fstpt
xor
xchg
xchg
imul
mov
jecxz
fxam
loop
in
in
rcl
out
lds
cmp
sar
stc
cmp
cld
mov
loopne
std
xchg
fsubp
out
shl
xchg
add
xor
iret
loopne
aas
rcr
sarb
jecxz
cld
mov
add
xchg
mov
jmp
xor
fprem
ljmp
fldl
mov
cld
enter
sti
nop
mov
xlat
repz
aam
fcmovnbe
ljmp
out
fcmovb
clc
mov
jmp
out
xchg
icebp
int3
jmp
xor
in
in
ljmp
iret
repz
cld
roll
test
test
repnz
cmc
clc
ret
lock
adc
aam
leave
les
xchg
xchg
das
lock
out
sti
fdiv
sarb
rcl
jecxz
jmp
in
addl
and
shl
aad
ss
and
xlat
aam
test
call
xlat
cmc
into
cmp
aaa
shr
cmp
cli
rcl
sti
test
out
fcmove
in
or
call
xorb
xor
in
cmp
lock
aam
repz
ret
clc
shl
xor
loopne
lret
int
aad
in
out
cmp
out
cld
repz
shl
addl
ljmp
mov
cs
out
out
aam
fidivrl
cmp
cmp
flds
lret
rcl
aam
lret
ljmp
int3
loopne
loope
rol
testl
dec
loop
sub
repz
int3
fdivrl
lock
roll
ret
jecxz
addb
into
aam
in
ljmp
ljmp
hlt
fsub
ljmp
enter
mov
mov
xor
lea
jmp
leave
aad
xlat
fcmovnu
ret
pop
lock
sub
sub
test
jle
int3
rcl
sub
loopne
into
call
shl
iret
in
hlt
out
fcmovnu
and
fcmovne
nop
nop
int3
imul
cmp
cmp
in
iret
repnz
loopne
icebp
enter
test
sti
jecxz
leave
jecxz
mov
xor
xor
sti
icebp
cld
shr
aad
cmp
fadd
faddl
test
lock
int3
out
repnz
lret
out
stc
fcomi
ror
hlt
std
roll
call
in
fisttps
call
int3
aam
cli
fsubr
incb
and
cld
loopne
rcl
int
xor
jmp
rcl
sarb
int3
in
ret
mov
mov
out
clc
cli
lock
out
or
in
call
icebp
aas
sarl
fcompp
aaa
fiaddl
fdiv
xchg
out
loop
int
hlt
div
das
cmp
jmp
aaa
jmp
aam
addb
xchg
jecxz
xchg
icebp
ret
repnz
rcl
cmp
lock
sti
in
loop
clc
loopne
fisttps
xchg
out
in
int
ror
fsubr
cmp
fdivrs
fcmovnu
clc
loop
sti
mov
shr
hlt
loope
out
call
out
cmp
xlat
neg
test
mov
fsubr
iret
int3
xchg
mov
cmp
fidivrl
loope
jmp
loopne
loop
test
test
jmp
loope
in
lock
rol
ret
aam
cmp
rcr
fcomi
aad
ret
xchg
in
lea
jmp
lret
iret
in
fcomi
fiaddl
mov
xchg
lret
fsubrp
test
xchg
ss
in
fsubr
ljmp
out
sti
test
loop
in
fmulp
fildl
adcb
lret
out
out
sub
fld
aam
jecxz
loope
in
in
std
into
sbb
xor
shr
call
aaa
fucom
out
cli
std
out
xlat
out
mov
cld
fimull
faddl
cli
sub
cmp
fcmovnb
faddl
testb
incb
repnz
iret
ss
cli
sbb
cmp
icebp
not
call
in
test
in
ror
aad
out
test
ror
fcomip
test
and
xchg
loopne
ss
clc
idivl
out
cmp
repnz
in
hlt
xlat
neg
xlat
cmc
cld
std
ror
sub
out
in
in
out
repz
cmp
jne
mov
pop
jmp
ror
ret
int
movsb
inc
push
mov
bound
jg
test
jle
divl
xor
loope
out
fldl
loopne
cmp
fcoml
leave
sub
out
xlat
hlt
fidivl
cmp
faddl
sti
out
in
divb
vpxor
stc
fdivr
faddl
xchg
sti
mov
or
out
xchg
adc
xor
ss
xlat
test
iret
add
call
ljmp
cmc
lock
sar
das
into
ljmp
cmc
inc
mov
leave
cld
loopne
cld
loope
mov
fisttpll
icebp
fidivrl
aad
cmc
loop
aad
rcl
hlt
aad
out
lret
int
test
ror
xchg
in
clc
xor
lock
aad
fucomip
int
fucomip
ret
xchg
out
loop
call
fucomp
ficoms
icebp
fyl2x
aad
fcomp
mul
fdiv
sarl
loopne
out
rorb
rclb
cld
clc
enter
cmp
add
in
cmc
jmp
test
mov
out
shr
cld
hlt
rcl
clc
loope
xor
icebp
fcomip
aad
mov
out
repz
repnz
loopne
sub
sar
stc
call
sti
addl
aam
mov
clc
out
iret
cld
xchg
jecxz
cs
aam
sub
xchg
mul
or
loope
ffreep
rorl
aas
jecxz
ss
into
icebp
icebp
cmp
cmpb
hlt
shr
mov
mov
or
iret
lret
fmul
repnz
in
test
mov
ror
out
int
xor
cmp
ss
icebp
jmp
testl
jmp
loope
and
xor
leave
stc
xor
fnstcw
std
sarl
out
in
clc
idiv
jmp
das
xlat
fadd
xor
jmp
repnz
in
std
enter
loopne
icebp
sar
xchg
xchg
out
cmp
ror
lret
jmp
aad
cmc
xor
std
ffreep
fdivr
fcomp
jmp
loope
out
shl
xor
sub
in
ds
repnz
and
fdivrp
lret
mov
out
enter
cld
xchg
fmul
out
std
out
cmpl
or
loopne
in
loop
xchg
loope
ret
cli
lret
aaa
xor
enter
fucomi
mov
jmp
out
xor
xor
call
jmp
ret
int3
rcl
ret
fldl
mov
mov
jg
test
jle
neg
sarb
std
cmp
lret
xlat
sub
cli
mov
hlt
in
ror
ror
icebp
fdiv
clc
fdecstp
ffree
loope
repz
xchg
mov
loope
rol
shl
xor
aam
shl
cmp
cmp
rol
icebp
cmc
cmc
jmp
or
ret
hlt
enter
stc
adc
adc
fisttpll
xor
in
leave
shlb
cmp
lret
hlt
cmp
adc
ret
mov
test
cld
in
enter
in
roll
jecxz
ds
nop
out
fmul
xchg
orl
jmp
cmp
ret
loop
aad
sub
lret
mov
xchg
shl
ljmp
sarb
rcl
out
in
fld1
fcmove
std
cld
sub
aaa
in
cmp
repnz
loope
cmp
leave
jecxz
out
fmuls
out
mov
leave
das
in
jecxz
stc
aad
rcl
add
std
mov
cli
test
mov
xor
xor
aas
ror
std
fbstp
out
xchg
xchg
test
sti
fucomp
fildl
int3
ror
repnz
fsub
cmp
xlat
clc
in
test
in
in
int3
xchg
cld
shr
sub
stc
hlt
out
std
xor
clc
inc
fiadds
loope
clc
clc
sbb
leave
shl
push
ljmp
aam
cmp
cld
and
fsin
ljmp
mov
shl
xlat
jmp
cmp
repnz
loopne
repz
cld
cmc
adc
out
mov
sti
xchg
and
xchg
rcr
sub
in
jmp
jmp
call
aad
ret
call
xchg
jmp
iret
rcll
aam
iret
aad
aad
fstpt
fdiv
fdivp
sbb
clc
mov
call
iret
int
jecxz
stc
hlt
jmp
xlat
neg
cld
out
in
cmp
ds
cmp
xchg
ret
test
lock
shrl
sar
xor
iret
loopne
rcr
hlt
icebp
rcr
hlt
faddp
sti
test
iret
hlt
mov
iret
lret
cmc
xlat
in
fdivp
hlt
in
sti
cmp
ret
rol
mov
in
into
in
clc
cli
in
cmp
rcl
fnstcw
into
not
aad
div
icebp
shl
fimuls
lock
das
ror
lock
rcr
icebp
rcr
icebp
cmp
in
in
pop
add
jmp
fadd
aam
fst
fcoms
sbb
jg
add
xor
jg
test
jle
xlat
out
stc
jmp
mov
int3
iret
idivb
xor
sar
int3
test
iret
xchg
addl
cld
ljmp
call
rcr
ffree
cli
aaa
icebp
shl
cmp
int3
sti
test
out
xchg
sbb
cmp
lret
aam
stc
rolb
sbb
fdivr
std
test
xchg
out
hlt
cmpl
repnz
cmp
cmp
cmp
jecxz
repz
out
ffree
stc
jmp
jmp
lock
shr
xor
cmp
xor
rol
cli
repz
xchg
fucomip
xlat
stc
lret
into
fiaddl
ror
iret
call
icebp
fdivrl
icebp
stc
vpsubusb
xchg
test
loope
repz
xor
cmp
rcr
lock
cmp
aad
loop
roll
cmc
in
fiaddl
test
stc
loope
lret
fst
cmp
call
out
cld
lock
lock
int
out
enter
sar
cmc
cmp
imul
fadd
fsub
rcr
out
cld
jmp
icebp
leave
xor
cmp
xor
cld
repnz
repz
enter
shl
out
adcb
div
fcmovnu
shl
neg
jecxz
ret
fdivp
jecxz
or
fyl2xp1
dec
out
xor
ss
xor
shl
rolb
leave
xchg
sbb
repnz
lea
sti
xor
aad
sarb
aam
xchg
loop
orl
in
xchg
jecxz
sub
ror
xor
int
icebp
inc
clc
faddl
sti
xchg
mov
iret
loopne
xor
bnd
lret
loopne
test
sti
cmc
addl
mov
clc
xor
jecxz
out
out
into
repz
loope
loop
ret
fimuls
in
in
sub
lret
xor
cmc
out
icebp
icebp
aad
repz
rcr
cld
leave
out
out
mov
frstpm(287
in
repz
in
cmp
neg
icebp
in
lret
out
out
cmc
xabort
leave
enter
call
xchg
in
into
stc
lock
in
in
leave
icebp
fdiv
ret
xabort
loope
cli
fdivrp
xchg
in
std
iret
div
iret
in
iret
jmp
std
sar
xlat
rol
shr
jmp
mov
xchg
loop
icebp
cmp
jmp
or
ret
shr
cld
incb
lret
xchg
icebp
mov
in
pop
leave
ret
push
mov
sub
xorl
jmp
int
int
leave
push
hlt
cltd
loope
pushf
mov
pop
xor
jle
add
aas
loop
stc
stc
out
int3
lock
fnstcw
div
les
ret
movl
xchg
ret
icebp
cmp
xor
int3
aad
fcmovnbe
cli
in
sti
lock
ret
mov
mov
jmp
fstpt
std
in
cli
xchg
xlat
and
aad
add
sti
test
out
call
xor
dec
lret
out
adc
aam
loop
or
sti
out
cld
xchg
addl
int3
aaa
repz
xchg
cli
sar
jmp
loopne
incb
mov
xlat
rol
fmul
in
shl
fnstsw
xor
fcomi
shl
xlat
not
lds
out
adcb
aam
xor
repnz
fdiv
cmp
fcomi
leave
fcomp
xchg
mov
icebp
test
mov
cmc
into
aas
cmc
shl
lock
stc
lret
fldl
hlt
ljmp
jmp
xchg
loop
xor
sub
rcr
lret
repnz
cmp
int
jecxz
fdivr
loopne
testl
test
shrb
lret
sar
fstpt
in
into
sti
icebp
fsubr
jmp
mov
clc
test
fisttpl
loop
xor
idiv
sar
cmp
repnz
cmp
cli
mov
out
mov
loopne
shr
rorl
sar
ljmp
out
iret
rcr
xlat
mov
les
shl
mov
loope
fcmovu
fdiv
ss
iret
cmp
repnz
shl
cmc
test
in
sti
xchg
mov
int
loop
shl
cmp
fdivr
aaa
rcl
aam
idivl
call
loope
addl
in
int3
ljmp
ss
cmp
into
fsub
fildl
fdivr
fcmovu
test
loopne
lret
cmp
aad
xor
loop
cmp
test
cmc
icebp
testb
test
out
sub
jmp
test
sarl
cli
neg
faddp
in
cli
ret
repz
into
not
shl
filds
xchg
lock
xchg
ss
shr
shl
loopne
sbb
into
vpandn
loope
fstl
sbb
mov
add
mov
mov
incl
jmp
int
ret
rol
fcmovnu
jecxz,pn
out
cmpsb
sub
cmp
jg
fiaddl
jle
out
jmp
call
cmp
iret
faddl
test
enter
ljmp
icebp
ror
xor
out
jmp
std
jmp
shl
fdivrp
stc
out
mov
cmc
xchg
loope
jmp
lret
in
iret
cmp
cmp
repnz
shl
loope
fmulp
in
fucomi
xchg
into
cld
sub
das
das
aaa
sarl
lret
idivb
std
stc
test
jecxz
fidivrs
jmp
ljmp
repz
lret
aaa
icebp
out
xor
test
mul
in
loop
jecxz
imul
fcmovbe
out
repz
cmp
shlb
xlat
cmp
in
cmp
cmp
test
fldl
fcom
ret
in
out
int3
hlt
enter
int
stc
repnz
adc
clc
loope
fisttpl
in
fsubp
icebp
xor
enter
xor
out
repnz
fscale
cli
iret
fcomi
iret
mov
out
jecxz
into
jmp
lds
xbegin
fsubrp
out
jecxz
cmp
xor
loop
lret
into
out
addl
ret
xor
aaa
int3
std
fsubp
in
in
aas
adc
int3
out
mov
nop
loop
loope
fidivl
jecxz
int3
fistpll
ffree
call
mov
in
into
orl
leave
cmp
shl
test
rcr
repnz
in
in
loop
into
in
loopne
mov
aaa
fcmovnu
sti
sti
cmp
sti
sti
repz
in
jmp
fcmovb
enter
lock
vpaddsw
cmp
iret
out
aaa
cld
in
not
cmc
incl
xchg
jecxz
lret
test
cli
fstpt
ljmp
jecxz
rcr
ljmp
int3
aaa
xor
lock
iret
inc
rcr
addl
in
std
xchg
xchg
out
loopne
loope
int3
cli
fdivr
fcomi
std
stc
cld
add
loop
stc
xchg
xchg
sub
iret
cmc
cs
stc
repz
xor
cmp
cmp
cmpb
aad
ror
jmp
repz
testb
fdiv
iret
iret
int
jecxz
adc
decl
in
mov
inc
or
test
test
inc
add
add
cli
xor
mov
add
jmp
int
ret
aam
fstp
fstl
fmull
lahf
mov
cmp
fiaddl
jle
sti
faddp
out
adcb
rcl
cli
lock
jecxz
iret
cmp
rcl
xlat
lret
and
sub
into
iret
in
jmp
xor
clc
ss
ret
cld
std
sti
jmp
fsub
call
rcr
out
xor
fnsave
clc
clc
cmp
add
ds
and
orl
fmul
sarl
xlat
rcl
aas
sbb
xlat
call
int
out
mov
out
ljmp
int3
cmp
cmp
fiadds
sub
mov
xchg
xor
xor
in
shr
cmp
cli
cmp
repz
xchg
lret
mov
ljmp
in
fadd
out
aas
ror
fst
sar
fisttps
xchg
or
out
shl
aad
out
xor
cmp
loope
addb
fsubrp
sub
xchg
aam
ss
enter
shl
cmp
rol
lret
lret
xchg
in
out
test
in
cmc
aad
out
in
cmc
xlat
cmp
rol
adc
out
stc
leave
cli
nop
cmc
xchg
in
mul
cmp
out
jmp
in
in
stc
in
in
iret
shl
vpsubsb
nop
xchg
mov
aaa
fdivs
lock
mul
xlat
out
xor
cmp
cmp
ret
loope
in
sti
out
mov
fcomip
rol
cmp
fcomi
out
cmp
cli
lock
xor
add
out
int
test
xchg
jmp
cs
jmp
test
sar
roll
out
fildl
lret
nop
shr
xor
into
aad
jmp
shr
repnz
loop
test
lock
cmp
mov
in
into
repz
shl
into
jmp
fdiv
xor
cmpb
neg
incl
clc
enter
jecxz
aam
leave
in
int
ret
xor
aad
or
add
fsub
fsub
mov
loop
xchg
sub
xlat
cmp
jmp
repnz
cli
mov
les
cld
xchg
icebp
in
xor
fdivrs
int
lret
in
adc
hlt
rcl
mov
movzwl
or
mov
xor
mov
movzwl
or
mov
add
mov
mov
decl
xor
add
sub
mov
xor
add
adc
jmp
rcl
rcl
dec
mov
test
in
jb
jg
fiaddl
jle
xchg
mov
icebp
loope
loop
icebp
ret
jmp
int3
stc
leave
aam
fstpt
xor
ret
fdiv
hlt
xchg
lret
mov
stc
in
in
hlt
aaa
stc
jmp
out
repnz
in
sar
stc
leave
mov
jecxz
out
call
ret
out
xor
fnsave
fxtract
idivl
loope
rcl
fsub
ljmp
cli
mov
das
sub
in
cmp
cli
cmp
faddp
int3
cli
sarl
shl
shl
loope
clc
adcl
aam
jmp
icebp
shlb
loope
loopne
xlat
mul
cli
cmc
lret
and
mov
icebp
xor
sub
ror
out
ljmp
aaa
cmp
or
mov
xor
xor
lret
div
cmp
jecxz
idiv
fcmovu
loopne
aad
test
in
into
call
cmp
out
out
loop
sarl
xabort
sti
repnz
int3
out
dec
orb
leave
sti
repnz
shl
xor
repz
bnd
fucomip
cld
ljmp
rcl
xor
rcl
sti
lock
fadd
inc
mov
out
test
mov
aad
les
repnz
out
out
aad
in
mov
out
aam
icebp
rcr
hlt
out
aad
loop
ret
iret
rcl
ret
mov
mov
lds
int
loopne
enter
cli
cmp
leave
aam
idiv
iret
xchg
jmp
icebp
nop
rorb
into
cmp
fucomip
int
ret
fpatan
fsub
jecxz
jmp
fucomip
fisttpl
test
iret
rol
jmp
into
stc
ljmp
ret
rcr
decb
ret
aam
into
lret
icebp
iret
cmp
repnz
fmull
call
mov
lock
int
call
xor
aad
icebp
ret
test
test
ljmp
xchg
aaa
aaa
shll
in
cmp
iret
sarl
jecxz
fdivrs
cld
mov
ljmp
adc
mov
das
xor
clc
jmp
lock
sti
clc
movl
xor
or
sub
jmp
ror
rcr
ror
js
cmp
fstpl
dec
into
jg,pt
fiaddl
jle
cmc
lock
std
aam
in
xchg
mov
test
int
dec
into
jmp
fdivrs
into
stc
repnz
out
lret
std
clc
xchg
fcoml
in
repnz
cmp
repz
rcr
out
stc
loopne
shr
xchg
fadd
out
std
mov
mov
vpsrad
aam
shr
aas
out
cli
aam
rcr
xlat
lock
xlat
lret
dec
call
iret
xchg
shlb
jmp
jmp
cmp
loope
cmpl
out
aam
mov
jmp
out
in
xor
std
cmp
leave
int3
ret
xchg
loop
leave
loop
out
xchg
fcom
fdiv
cli
cmp
xor
sub
fadds
incl
lock
loop
out
das
stc
in
xor
cmpl
aad
ret
ret
incb
lock
roll
shlb
out
sarl
cld
repz
cmp
aam
fsub
out
xlat
loop
mov
xchg
xor
icebp
add
aad
fcmovu
mov
aas
fisttpl
jecxz
xchg
in
mov
std
repz
xchg
or
test
cld
fdivr
shl
int3
out
shl
sar
int3
xor
rolb
aam
aad
cld
out
and
ficoms
out
out
in
vcvtdq2pd
cmp
cmc
loope
mov
fdivrp
movl
repz
idivb
ror
aad
fadds
cld
test
into
mov
jecxz
test
loope
out
loope
lret
sar
fcmovnu
ret
aam
stc
test
not
lret
jmp
lea
repnz
cmp
rcr
loope
ret
fcmovnb
clc
fadd
rolb
out
jmp
out
hlt
cmp
lret
xlat
mul
call
cmp
out
fdivrp
mov
fld
fisttpl
out
xchg
shrl
in
cmp
rol
ljmp
cmc
fstp
jmp
sub
in
sub
xorb
xor
repz
ljmp
fneni(8087
cmp
loop
out
iret
jmp
mov
shl
hlt
aam
iret
fucomi
jmp
out
lret
movl
or
movl
movzbl
xor
movl
mov
add
mov
movl
movl
movl
adcl
mov
mov
sub
xor
mov
addl
jmp
lret
aas
ret
aad
fldenv
and
shrl
jle
rolb
orb
icebp
xchg
enter
repnz
aam
jecxz
dec
sti
jmp
lock
in
ss
xor
shll
adc
rcl
jecxz
aam
fadd
fucom
in
or
lea
aam
call
into
sar
shl
xchg
ljmp
jmp
cmp
jecxz
clc
hlt
xor
fcos
test
sti
fcom
mov
fsub
jmp
nop
mov
call
in
cmp
int
repnz
loop
ret
shl
cld
fcoms
test
repz
aaa
cmp
in
lret
addl
call
xor
test
rcr
shll
sub
sar
sar
mov
in
mov
shl
hlt
cli
in
in
out
ds
cmp
fcmovbe
add
aas
fninit
loope
test
out
sti
out
out
call
cli
int
xor
cmp
xchg
xchg
mov
fisttpl
xlat
xor
out
aad
fcompp
loope
stc
out
roll
fcom
xlat
mov
xchg
filds
lret
int
shl
fdiv
loopne
idiv
xor
sar
jecxz
xlat
loopne
int3
iret
xchg
in
repnz
shr
fstp
sarl
ss
ret
std
out
rolb
in
test
cli
cmp
xlat
fsin
test
clc
xlat
fnstcw
icebp
enter
enter
out
mov
clc
xor
ss
shr
jecxz
in
aam
in
fcomi
clc
test
in
ffree
fcmovnb
aam
shl
stc
das
ret
cld
cmp
xor
sar
neg
ds
jmp
in
xchg
loopne
xchg
adc
call
lock
in
jecxz
fucom
cmp
cmc
ljmp
lock
test
into
jecxz
call
loopne
fdiv
xlat
ret
jecxz
fsub
mov
lret
cld
jmp
lret
ficoms
in
xor
aad
cmp
fdivrl
cld
fdivp
xchg
call
ljmp
fsub
ret
das
xor
rol
add
push
sbb
add
cli
movl
je
push
movl
jmp
mov
mov
andl
sub
orl
mov
xor
add
jmp
rcl
lret
fcmovnbe
lods
pop
mov
cmp
ret
jg
fiaddl
jle
loopne
shl
ds
cli
std
inc
xlat
testl
hlt
cmc
out
xor
cmp
test
idiv
hlt
cmp
out
fnstsw
fdiv
and
sub
cmc
ss
in
into
enter
fcmovu
xor
fucompp
xchg
in
test
loope
xchg
lret
shl
aad
jmp
sti
iret
ret
loopne
hlt
out
jecxz
jecxz
lret
in
std
mov
fsub
fdiv
icebp
cmp
cmp
std
shl
out
fdiv
addb
mov
fmulp
loopne
out
in
xlat
fmulp
aad
xchg
ret
mov
fcmovnb
lret
mov
out
mov
int
cmc
leave
fcmovne
xlat
ds
sar
ret
fdivr
test
mov
mov
lret
lock
icebp
idivl
fcmovne
xor
out
repnz
loopne
cli
test
filds
enter
xlat
repz
aaa
in
idiv
ljmp
out
in
jmp
mov
into
jmp
sti
repnz
shl
jecxz
clc
test
fcomip
jmp
into
fcmovu
fucomip
lret
out
shl
into
out
cmp
cmp
roll
test
loopne
mov
xchg
mul
leave
stc
shlb
test
aas
ret
aad
hlt
ffree
ljmp
test
iret
icebp
aam
in
xlat
cmc
shr
cld
fidivrl
adc
clc
ret
imul
xchg
in
mov
mov
call
test
call
clc
std
faddl
ret
aad
testl
in
rcr
cmp
sti
fsubrp
stc
stc
shl
cld
into
aad
repz
clc
jmp
ljmp
xor
enter
sarb
in
lret
loop
out
rcr
cld
cli
in
xchg
shl
in
out
xor
cmp
in
cmp
into
in
loopne
fst
call
mul
aas
xchg
loopne
shr
out
test
ret
fnstenv
xor
lret
iret
icebp
loopne
fcomip
std
ret
out
leave
ret
cmp
mov
sti
icebp
and
xor
xor
cmp
cli
sti
cmp
fcmovnb
aam
ret
int3
mov
nop
std
xchg
in
iret
icebp
aaa
jmp
cli
jmp
fcom
rcr
fstp
fnstsw
fmull
xlat
mov
jg
fiaddl
jle
repnz
xor
cmc
cli
icebp
cmc
lock
icebp
xlat
cli
into
mov
mov
lea
das
clc
ss
aaa
stc
repz
xor
add
incl
mov
xchg
out
ljmp
xor
sar
rcr
flds
mov
fcom
test
shl
cmp
hlt
fsubr
call
hlt
cli
sar
neg
leave
orl
out
out
xor
iret
aad
cmp
shr
aam
ds
stc
in
in
fcmovnu
jmp
int3
out
int
iret
enter
ss
ljmp
out
repz
rorb
jmp
jmp
xlat
enter
xlat
jmp
cld
fcmovnu
sbb
mov
jmp
loopne
in
into
xlat
lock
repz
aaa
in
in
div
mov
xlat
leave
shl
test
mov
xor
fcomi
rcr
std
ret
incl
fcmovnu
aad
in
xchg
out
lret
out
int3
xor
clc
int3
cmp
enter
cmp
repz
std
fcomp
loope
adc
repnz
ret
lock
cmp
aam
shr
lds
in
ljmp
out
ljmp
repz
jmp
in
cmp
icebp
rcr
xchg
test
loope
sti
lret
mov
aaa
xor
loopne
cmp
incb
std
cld
mov
mov
in
testb
cmp
enter
xlat
ss
xlat
cmp
xchg
xchg
cmc
stc
xbegin
fucomip
loopne
loopne
hlt
mov
sbb
out
xchg
mov
xor
into
out
out
lret
hlt
xor
lock
rcr
aaa
xlat
fcmovnu
cli
mov
lock
test
ss
cmp
jmp
xlat
jecxz
aad
aad
test
fsub
mov
sti
jecxz
cmp
cmp
rcr
int
ds
loope
mov
loopne
leave
ret
ljmp
out
out
sti
push
in
cld
ds
faddp
testb
lock
out
jb
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
jmp
ror
aam
frstor
rcll
xchg
adc
jle
add
cmc
repz
cmp
ljmp
sbb
frndint
testl
int3
aam
cmp
out
loopne
cld
out
adc
adc
aad
ret
lret
ret
out
into
fildl
out
leave
int
aad
fcmovnbe
stc
enter
clc
cmp
stc
aad
test
ljmp
in
div
icebp
fcom
aaa
out
cli
fiaddl
xchg
test
jmp
out
in
in
ror
icebp
stc
fdiv
hlt
cmp
into
repnz
ret
sub
jecxz
cmp
lret
lock
lock
ds
sti
test
test
out
ljmp
clc
fucom
cli
push
hlt
iret
fcmove
cmp
sti
cld
fcomp
mov
stc
std
incl
in
aam
sti
out
cmp
cmp
ds
in
aad
fld
sbb
in
lret
std
addl
vcvtpd2dq
int3
cmpl
cld
adc
iret
call
xchg
cmp
clc
xor
cmp
iret
std
aam
loope
mov
lds
in
iret
roll
out
aad
aaa
ds
ret
loope
loope
fxch
orl
mul
fmul
in
int3
clc
leave
fidivrl
into
aad
aad
std
sar
jmp
xlat
in
fldl
xchg
xchg
test
sti
out
in
repz
fcmovb
shl
stc
aas
rol
fdiv
cli
in
int
lds
cmc
out
leave
in
jmp
aam
cld
stc
shl
test
rcr
loopne
cmp
mov
ret
xor
cli
aam
in
shl
cmp
hlt
cmp
cli
test
mov
mov
int3
in
in
jmp
repnz
fcmove
out
mov
sti
mov
loopne
out
loope
mov
mov
loop
xor
fcmovne
loopne
aad
testl
lock
int3
mov
jmp
lds
out
fdecstp
in
xlat
ss
test
iret
cmp
jmp
in
xchg
xchg
int3
xchg
ror
leave
ljmp
repnz
test
call
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
xor
xor
add
adcl
add
imul
mov
or
mov
sbb
mov
jmp
rol
aam
aad
aad
xchg
mov
or
lret
fiaddl
jle
in
rcll
lret
ds
cmp
aad
shl
in
test
ljmp
aaa
xor
shr
out
leave
fsubr
iret
ror
stc
rcl
test
add
fdivr
fptan
xchg
repz
out
clc
in
call
hlt
aas
fdiv
loop
hlt
in
xchg
int
test
shl
out
out
ss
jmp
icebp
int
ds
lock
repz
cld
xchg
call
int3
iret
rol
enter
repz
aad
std
aad
aam
cli
jecxz
in
jecxz
nop
xchg
icebp
iret
cmp
out
out
rcl
sti
xlat
cmp
rol
rcl
test
std
int3
mov
mov
icebp
mov
loop
leave
in
cli
fnsave
icebp
sbb
loope
clc
mov
in
test
in
fucomi
xchg
ret
int3
int3
int3
lret
xor
fcomip
movb
stc
jmp
mov
rorb
xor
icebp
sti
ds
xor
fldl
clc
fimuls
call
stc
loop
repnz
lret
jecxz
clc
fst
repz
ljmp
lock
aaa
ds
lret
aas
lds
jecxz
std
cmp
lock
lock
cmc
lds
sub
cmp
das
cld
add
aad
jmp
out
in
int3
iret
std
xchg
jecxz
ljmp
aam
sti
ds
in
cmc
out
xchg
xchg
call
lret
int3
out
xor
in
aaa
rolb
lock
aad
int3
addl
shrl
fdivs
xor
into
into
addl
in
lock
in
xchg
xchg
shr
in
xor
into
xor
cmp
xlat
int
shl
inc
in
cmp
repnz
lea
xor
in
repz
aad
xlat
out
loope
flds
fiaddl
xchg
xchg
ss
aam
cli
fdivrp
cmp
ret
loope
clc
cmp
fadd
mov
hlt
sar
iret
into
fcmovu
lock
into
clc
hlt
and
enter
stc
sub
cmp
movl
jmp
rcl
ret
fucomp
insb
fstps
sbb
int3
jg
fiaddl
jle
fdivr
ljmp
clc
ljmp
jmp
inc
loope
xchg
aas
rcl
mov
xchg
mov
fucomi
test
repz
ss
cli
cli
out
cmp
repnz
fcmovbe
iret
aaa
into
repnz
mov
xchg
out
in
shll
int
fdivr
aaa
jmp
ffree
out
hlt
fdivr
in
in
int
loop
jmp
rcl
xor
int
ffree
fcmovnbe
cmp
into
cmp
cli
loop
xchg
in
in
out
jmp
int
aam
clc
call
test
fdivrp
in
cmc
ljmp
aad
int3
sub
ljmp
int3
ds
hlt
mov
icebp
repnz
in
loop
ror
out
xlat
cld
pushl
aad
fsincos
sbb
aad
stc
ljmp
sti
mov
xchg
xlat
out
ljmp
rcl
int
std
fcmovnbe
mov
cld
jecxz
in
aam
out
lock
cld
out
ret
in
ret
shr
cld
idiv
int
out
test
loopne
xor
ds
fnstcw
call
clc
mov
jmp
call
repnz
nop
xor
out
cmp
cmp
jmp
sar
clc
cmp
loopne
ret
neg
fchs
clc
mov
xchg
xor
cmp
out
rol
repz
fcmovnb
loope
fmulp
leave
loop
repnz
xchg
mov
int
in
fscale
std
shll
sarl
int
fsub
fsincos
xchg
call
in
ljmp
out
in
call
xlat
aam
and
idiv
loop
out
or
repz
int
aad
fcmovnb
aam
shl
cmp
mov
mov
enter
xchg
xchg
iret
out
out
stc
fidivrl
fdecstp
cmp
cli
jmp
into
jecxz
call
jmp
stc
cmp
iret
dec
call
addl
in
mov
cmp
stc
das
leave
cmp
xlat
test
incb
loope
test
shr
in
cmp
cs
jmp
stc
loop
std
ret
aad
ja
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
orl
xor
add
movl
jmp
mov
notl
mov
xor
xor
add
add
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
sub
add
add
imul
jmp
into
ret
rcl
aad
aad
push
pop
movsl
and
push
into
jg
fiaddl
jle
clc
leave
sti
jmp
loop
repz
in
shr
xor
repnz
in
loop
fyl2xp1
ret
test
loop
lret
mov
xor
cli
lds
cmp
stc
aad
aas
aam
vaddsubps
ror
in
enter
std
adcb
shl
cmp
idivb
stc
faddl
hlt
movb
mov
test
divl
fcmovnu
les
call
std
repnz
loope
fcom
xchg
orb
aam
repz
in
sti
into
repz
imul
test
aad
fldl
in
aaa
shl
lret
div
cmp
sar
lock
repnz
cmc
out
into
stc
cmp
in
xor
aad
ret
iret
enter
jmp
fcmovnb
and
cld
lret
fstp
rcr
in
out
iret
lret
jecxz
clc
out
icebp
bnd
stc
add
stc
sarl
out
in
out
cmc
sub
test
aad
xor
shl
test
shl
out
cli
enter
std
aad
int3
das
das
repz
div
int3
call
add
xlat
neg
mov
test
jmp
ffree
xor
ror
out
in
loop
clc
cmp
in
mov
into
in
lret
jmp
fmul
sar
ljmp
out
call
shll
icebp
int
fcmovnbe
fucomi
int
iret
filds
addb
out
jmp
call
ljmp
shl
sub
rol
out
test
rcl
aam
xor
cmc
cs
cmp
lret
and
xlat
hlt
decb
and
in
out
mov
hlt
ret
out
aam
aaa
cld
cmc
cmpb
xchg
repnz
rcr
mov
test
jecxz
out
repnz
rol
ss
call
iret
faddp
rol
test
mov
cld
int
test
xor
sar
repz
iret
iret
in
cmp
xchg
out
xchg
hlt
lret
enter
out
std
cmp
cld
fiaddl
mov
add
jmp
rcl
aad
loop
pop
sbb
cmc
and
sarl
fiaddl
jle
fdiv
stc
ret
cli
fucomi
jecxz
mov
aam
leave
cli
lret
ds
loopne
aas
ds
loopne
in
stc
in
ret
sti
xchg
jmp
ret
iret
cmc
fcomip
addb
loopne
fld
std
sar
in
icebp
aad
lock
cmp
cmp
out
xorb
shl
fcmovbe
in
fimull
movl
out
cmp
fmul
idivb
in
in
cld
sub
leave
fsubrp
iret
ljmp
rcl
lret
fcmovu
cmc
leave
ds
sar
call
mov
xchg
test
rcl
hlt
in
cmp
out
add
sti
cli
out
in
repz
fmuls
rclb
lret
lret
sarb
enter
add
xchg
xchg
lock
hlt
xchg
repz
div
fcomp
lret
repz
aad
loopne
xlat
out
mov
in
in
orb
das
int3
out
std
ljmp
aad
fdivp
ret
leave
addb
shl
aad
stc
lret
aaa
xor
cli
fistpll
aad
div
testb
ret
cmp
cld
jmp
int
das
cmp
lock
sti
test
cmpl
ds
ljmp
leave
aaa
loope
rcr
xor
fsub
flds
sar
push
test
imul
loop
icebp
in
cmc
icebp
jmp
rcr
out
fistpll
jmp
into
out
leave
in
fmul
rcr
rcll
jmp
into
cli
clc
in
loope
int
jecxz
in
cli
faddp
imul
mov
loopne
xchg
std
mov
aad
lock
fstp
in
cmp
neg
rcl
sarb
test
stc
mov
aad
leave
not
cmp
in
loopne
repz
rcr
fstpt
sbb
out
orb
aam
in
ljmp
shl
out
lock
enter
mov
orl
vpsubsw
iret
std
in
repz
lock
test
aad
out
jmp
in
in
loope
std
shl
jmp
in
cmp
fprem1
cld
mov
negl
jmp
enter
fstp
int
inc
dec
xorl
jg
fiaddl
jle
filds
adc
out
xchg
mov
cmp
jmp
ret
aas
repnz
mov
loope
out
xchg
add
mov
loopne
iret
out
shr
shr
cmp
sbb
lret
stc
xlat
addl
lret
divb
shl
clc
fnstcw
fdivp
stc
std
std
jecxz
cmp
rolb
lret
les
loope
int3
out
ss
into
fdivrp
in
repz
loope
cmc
repz
mov
xchg
lea
ss
ss
ss
ret
in
xlat
xchg
test
out
loop
xchg
int
sub
ret
iret
repz
ljmp
flds
fst
mov
shl
aam
iret
jmp
fsubr
xor
in
sar
fucomi
cld
addb
enter
fiaddl
jmp
div
aad
repnz
clc
call
jmp
test
xchg
xor
fld1
shr
jmp
shll
std
ror
enter
xor
out
ret
in
into
rcl
fcmovne
fcmovbe
cmc
fcmovnu
jmp
test
xchg
push
int3
mov
stc
cmc
cmp
call
fcmove
rcr
jmp
out
int3
ljmp
jecxz
lock
icebp
xor
out
adc
or
loopne
std
out
xlat
out
lret
xchg
jmp
loopne
fsubr
sarl
stc
cmp
cmc
iret
out
cmp
rcr
icebp
jmp
test
out
xor
shl
cld
sti
sti
xlat
not
xor
lock
leave
out
loope
leave
iret
iret
sub
into
out
in
fidivs
cmp
ljmp
faddp
mov
mov
xor
call
hlt
test
into
clc
stc
hlt
icebp
cld
ror
in
xchg
out
mov
ror
stc
cs
aam
iret
hlt
fprem1
incl
out
mov
icebp
mov
leave
repnz
fidivrl
not
cmp
icebp
int
repnz
int
std
jecxz
call
repz
out
out
aad
fistpll
fcmovb
add
sti
jbe
add
xchg
add
add
add
sahf
add
fsubr
rcrl
add
add
adc
mov
mov
movl
jmp
aas
mov
fnstcw
jae
inc
and
aad
jle
add
jmp
rcr
aas
repz
mul
ret
fsubr
into
xchg
iret
xchg
lret
cli
test
fdivrl
repnz
cmp
ret
cld
and
nop
addb
ret
call
cmp
in
mov
shl
out
mov
xchg
shlb
loope
call
cmp
cmp
fdivrp
cmc
shl
leave
addb
loope
xchg
xchg
enter
out
shr
cmp
leave
test
jecxz
xchg
ret
xor
or
lock
cmp
leave
fnsave
jecxz
clc
iret
hlt
fstp
ret
out
fsubp
jmp
ljmp
stc
cmp
out
in
int
aam
fdivp
aad
rol
mov
aas
in
int3
mov
in
loop
xchg
xchg
ror
stc
out
jmp
fildl
xchg
cmp
loopne
add
in
xchg
aad
in
jecxz
icebp
into
fdiv
cld
loopne
shll
shl
fsub
and
in
mov
mov
call
aas
cmp
clc
xor
rcr
add
call
shr
clc
in
sub
aad
in
xor
std
fmulp
ds
idivb
mov
int3
out
int
shl
repnz
fst
hlt
out
int
out
fdivp
fsubp
orb
iret
mov
nop
lock
iret
ljmp
neg
orb
mov
sub
xchg
xor
loop
out
fldl2t
cmp
xlat
clc
xchg
shl
cld
out
int
xchg
mov
xor
repz
fdivrs
shl
in
rcr
enter
repz
xlat
icebp
in
int3
aam
ss
cmp
sti
cmp
fiaddl
cmc
mov
rcll
out
xor
out
fxch
fcom
cmp
cmp
fidivrl
mov
ds
out
clc
out
icebp
aam
xor
lret
icebp
ror
cmp
ret
sti
aam
leave
cmp
jmp
repz
in
ss
in
ss
cmp
int3
sti
loope
test
cld
decb
mov
adc
ss
ret
xorl
xor
jmp
aam
mov
int
rol
repnz
fdivs
inc
ret
jle
add
leave
out
into
lock
aad
cmp
rolb
out
in
loope
xchg
int3
out
clc
icebp
ret
xor
cmp
out
fstp
sti
cmp
cli
fucomp
mov
mov
cli
in
leave
lret
repz
enter
out
aam
aam
rcl
lock
and
fisttpl
mov
jmp
sar
hlt
stc
into
jmp
lock
sub
fcmovbe
aam
in
test
mov
mov
ror
fdiv
rcl
leave
icebp
lret
jmp
out
testl
call
icebp
xor
shr
cmp
ds
cli
hlt
loop
rol
shl
cmc
lret
loopne
xor
jecxz
int3
out
out
into
ror
ds
testl
repnz
in
rol
in
fnstsw
fld
mov
aad
fcmovnbe
mov
mov
cmp
std
ljmp
sbb
mov
aad
orb
xchg
vcmppd
hlt
fdivp
fcmovnbe
rol
hlt
cmp
xchg
mov
call
cmc
aam
ss
iret
das
aas
lock
loopne
icebp
test
call
fptan
mov
in
out
lret
aam
out
fdivrs
stc
out
sarl
repnz
out
enter
into
xor
xor
aam
aad
enter
int3
rol
aas
enter
test
sub
iret
xor
fdivrs
ror
iret
std
ljmp
out
rcl
leave
aam
loopne
xlat
in
sbb
lock
xor
std
rcl
cmpl
clc
aad
in
mov
repnz
out
repnz
sti
fdivrs
adc
aas
aam
shl
and
testl
aad
leave
jmp
xor
repz
std
rcl
fcomip
div
repz
lret
call
shl
std
xchg
xor
jmp
lock
shr
cmp
std
icebp
aam
xchg
jecxz
out
mov
lret
mov
sub
rol
xor
loopne
or
in
fprem1
mov
leave
fcmovnu
mov
hlt
add
xor
or
sub
add
mov
or
imul
mov
mov
sub
cmp
movl
ja
mov
jmp
xor
jmp
ror
iret
leave
fstp
popa
test
jmp
test
jle
add
shl
xor
fadd
int3
cmc
hlt
fiadds
cmp
shl
and
in
xlat
out
ljmp
sar
sar
in
jmp
mov
into
cmc
call
xor
xor
ds
jecxz
loopne
aas
cli
out
jmp
xchg
int
ret
xor
enter
lock
ljmp
test
fdivr
nop
mov
mov
shlb
jmp
jmp
not
rcl
shl
repz
mov
xchg
rclb
ret
in
fcomi
into
icebp
shl
sar
xchg
out
clc
mov
and
mov
jmp
lock
xor
rcr
icebp
shr
loop
lds
fcmovne
test
call
int3
xchg
shl
test
cmp
fnstenv
ror
jmp
cli
incl
call
in
vpsrlw
out
cmp
repz
ds
fldl
sar
shl
ficoms
xor
jmp
call
int
int
out
repnz
aad
idiv
int3
int3
leave
ljmp
ret
ret
ss
cmp
div
cmp
loop
cmp
shr
ljmp
xor
cld
sar
aad
icebp
sar
repnz
aad
aas
ret
mov
testl
clc
cmc
test
in
rcr
fcomp
test
loope
repz
addl
xor
cmc
call
fildl
and
xchg
fadds
mov
jecxz
repz
repnz
cmp
shr
lock
fcmovbe
xlat
sub
out
aaa
lret
fsubr
cmp
ljmp
rorb
ljmp
repnz
icebp
mul
int3
stc
out
cmp
out
cmc
fidivrs
repz
vpsubb
xlat
leave
icebp
jmp
aad
cmc
out
cmp
repz
sar
shl
in
mul
flds
sti
lret
jmp
das
cmp
out
int3
aam
stc
aam
cmp
rcl
fmul
sti
stc
orl
dec
ja
add
sbb
mov
xor
xor
jmp
rcl
into
aad
fcmovu
add
pop
repnz
into
aam
fdivrl
fiaddl
jle
rcl
mov
repnz
rcr
loope,pt
mul
std
cld
cmp
icebp
call
in
fsubp
ret
mov
loope
add
leave
aaa
in
ljmp
cmc
ret
lock
fadd
mov
ret
xchg
iret
ljmp
aaa
ljmp
test
cmp
out
repz
xchg
jmp
ss
sub
hlt
sar
rcr
neg
fdivp
mov
fcmove
cmc
nop
ret
mov
sub
jmp
leave
in
out
xor
cmc
clc
jecxz
aam
lock
repz
std
adcb
aam
xor
xorb
sbb
in
cli
repz
xor
loop
nop
out
out
nop
out
cmc
loope
aad
clc
call
clc
cmp
leave
fstp
fstl
sarb
shl
call
cmc
in
xchg
test
fadd
jmp
xchg
loope
xchg
aas
leave
rcl
call
leave
jmp
sbb
loop
jmp
aad
loope
xchg
nop
repz
aad
aam
ljmp
fcmovnu
sbb
clc
repz
xchg
out
sub
int3
rorb
jmp
sarb
hlt
loope
fcmovnbe
and
lds
or
xchg
jmp
in
lock
jmp
icebp
testb
call
loop
xchg
test
xchg
sub
hlt
shll
stc
cli
clc
sti
in
addl
flds
xor
cmc
fyl2xp1
lret
cli
cld
clc
test
aad
jecxz
mov
loopne
loope
int
lret
rclb
jecxz
call
cmp
stc
xor
loop
aad
mov
in
fdivr
nop
shr
mov
aam
ss
cmp
cmp
cld
fstp
mov
jmp
int
hlt
xchg
xor
in
call
fdivrl
ret
sarl
repz
xchg
sar
xor
aad
cmp
ror
lret
ffreep
out
in
aad
rcr
jmp
leave
lea
out
out
xor
xor
xor
icebp
rcl
in
in
ffreep
in
jecxz
add
adc
add
jmp
aad
ret
int
fistpl
in
push
fistpll
fiaddl
jle
clc
ljmp
jmp
in
in
aad
stc
xor
xlat
std
out
in
cld
jecxz
fimuls
int3
out
hlt
hlt
shl
sti
sarb
loope
fcmovu
sar
stc
rorl
jmp
xor
xchg
sar
xor
sti
cmp
shl
aam
mov
fsub
ljmp
jmp
xor
idiv
idivl
shl
jmp
fcmovu
fucomp
rcr
enter
ljmp
nop
xor
out
clc
les
lret
aad
test
rol
add
les
repz
loope
ror
in
out
jmp
fucomi
cmc
xlat
out
fcmovbe
cmc
rol
jmp
std
loope
ljmp
in
div
in
idiv
cmpb
add
call
out
std
icebp
fsub
out
repnz
in
shl
lret
std
into
rol
aam
cld
in
fnstcw
enter
mov
rcl
xor
lret
cmc
movl
ljmp
out
out
xchg
in
ljmp
aam
hlt
lret
cld
fcmovu
aas
aad
in
in
lock
in
mov
mov
cmp
cmp
lock
xor
jmp
call
out
lret
xchg
jmp
ljmp
fstpt
loopne
in
lret
jmp
test
cld
cmp
repz
cld
out
ds
ret
flds
test
lea
xchg
sar
jmp
call
cmp
cld
in
lock
cmp
hlt
cmp
in
mov
jmp
ljmp
enter
mov
icebp
repnz
shl
ffreep
shl
cld
filds
xchg
loopne
mov
in
out
shl
fdivr
in
lret
in
test
sbb
out
fucomi
out
sti
fildl
jmp
in
repnz
cmp
out
ffreep
fdivp
jmp
push
out
lret
xchg
in
loopne
ljmp
stc
or
add
loopne
in
cli
lock
shr
repnz
divl
int
cli
roll
xlat
xor
xor
sub
mov
mov
jmp
rcl
rcr
aam
fstp
lods
pushf
inc
outsb
shl
mov
mov
jg
fiaddl
jle
fdivr
lret
fdivr
lret
stc
fstp
loopne
in
in
icebp
cmp
stc
cmp
stc
shl
in
cli
test
loopne
fdivr
iret
into
icebp
xchg
mov
out
mul
out
hlt
out
repz
adc
adc
sbb
lret
fsub
enter
nop
lock
aam
test
int
clc
cmc
repnz
in
ret
xlat
xchg
loope
out
faddl
std
shl
out
test
clc
shr
int3
loop
rol
fnstsw
loope
test
mov
lret
out
enter
nop
cmc
lret
repnz
iret
xor
aaa
xlat
clc
repz
loope
ret
incb
out
mov
shll
in
xor
fmul
std
test
enter
addb
int
int
das
fstp
aas
sarb
xchg
ret
sub
in
xchg
cld
rcl
repnz
stc
xor
cmp
cld
fcmovu
aam
xlat
cmp
and
sti
test
loopne
out
in
aam
loope
cmp
int3
xor
sarb
repz
fcmovu
cmp
ljmp
int
sub
into
ljmp
rcr
cmp
ret
incb
aad
ljmp
lock
call
cli
in
jmp
test
shl
clc
loop
int
loopne
rorl
shll
cmp
cmp
fdivp
aam
int
cmc
addl
icebp
fisttpl
int3
aaa
lret
in
int3
fcmovbe
iret
ss
into
aas
cmp
cmp
cld
call
out
aad
aaa
out
in
icebp
lret
cld
test
ffreep
rol
mov
hlt
lret
out
enter
loopne
mov
call
xor
rcl
cmp
shr
aam
rol
ret
in
ljmp
sub
ljmp
stc
rcr
clc
into
shl
cli
std
aad
enter
xchg
jmp
in
out
lret
sub
out
icebp
sar
ds
in
cmp
orl
mov
out
xchg
xor
das
xor
cld
lret
fucomip
aas
std
xlat
xlat
iret
cmp
jecxz
loopne
fucomip
movb
iret
ret
rcl
in
shr
fcomip
shr
cmp
loopne
mov
sub
cmp
jmp
sarl
rol
js
pusha
mov
push
in
jle
add
aad
repz
ljmp
shll
ret
xor
repnz
lock
loopne
repz
stc
fisttps
mov
mov
out
out
cmp
clc
fcmovne
sarl
xlat
cmc
out
mov
loope
int
loopne
jmp
aaa
xor
clc
cmp
int
ror
cmp
out
jmp
or
ljmp
out
hlt
aad
cmp
movb
sbb
int
xchg
loopne
loope
fcmovb
aam
repz
sti
ds
cmp
clc
ds
dec
mov
fadd
in
orb
cmp
ret
out
leave
aam
xor
cmc
ret
mov
mov
ljmp
loope
pushl
icebp
shl
jmp
cmp
ror
cmp
cmc
cmp
fldl2e
test
mov
rclb
hlt
lock
test
iret
fiadds
out
fdivr
mov
mov
repz
into
xchg
ret
cmp
loop
cmp
repz
lret
ret
fcomp
fxam
fcmovnbe
jmp
xchg
sti
test
lret
xor
out
fadds
mov
out
fdiv
lret
adc
jecxz
ljmp
iret
repz
rcr
test
call
in
loopne
int
ss
lock
div
fsub
cmp
sbb
aas
loopne
vpaddusw
int
xchg
out
ret
rcl
xor
repz
fldln2
cmp
in
fiadds
jmp
jmp
lea
fmul
fcom
ljmp
cli
sar
incb
mov
xchg
in
jmp
ss
lret
jmp
hlt
fidivrl
test
pop
lret
lock
int3
int3
in
sub
repz
stc
xlat
call
frstpm(287
out
roll
add
mov
sub
cmc
out
icebp
sarb
cmp
sti
roll
aam
ljmp
shr
idivb
in
in
cmp
sti
sti
rcr
loope
fmulp
aad
fimull
out
bnd
call
ss
in
cmp
cmpl
add
add
or
add
cld
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
jmp
fcom
rol
fcom
add
dec
xlat
mov
out
jle
add
cmp
xlat
sti
cmp
aad
call
sub
lock
leave
in
cmp
ds
stc
testb
fsin
jmp
out
ret
into
in
fpatan
cli
repnz
jecxz
ret
fadd
lret
into
lea
xor
in
in
clc
das
hlt
and
sar
cli
test
dec
int3
lret
fisttps
jmp
stc
icebp
cld
neg
cmp
loopne
sar
mov
decl
int
call
into
clc
xor
out
stc
into
fld
cmp
loop
clc
mov
sti
leave
sti
fiadds
into
xor
fidivl
cmp
loop
or
fucomi
std
call
xor
aad
xor
sti
fadds
xchg
test
xchg
lret
xor
jmp
shr
sarb
cmc
ds
fcmovnb
cmc
ljmp
mov
xchg
xlat
out
out
xor
ljmp
fdiv
repz
aad
jmp
decb
xchg
int
rcr
fdiv
out
idiv
idivb
addb
loopne
mov
loopne
sbb
xchg
xchg
ss
ljmp
into
fadd
aad
shl
xor
orb
xchg
mov
mov
in
aam
cmp
int
sar
addb
mov
jmp
jecxz
jmp
repnz
shl
aam
cld
leave
icebp
lret
leave
lret
out
test
not
jecxz
fadd
in
in
jmp
loopne
fbstp
leave
test
ss
into
add
jmp
xchg
aad
xor
rcl
aad
lret
cmp
loopne
xchg
mov
out
in
out
mov
jmp
ljmp
sbb
cmp
mov
int
loope
in
aad
lock
repz
iret
xchg
stc
out
iret
jecxz
adc
loope
hlt
ror
sarb
stc
cmp
idivb
cmp
jecxz
xchg
cld
test
cld
int
enter
sti
xlat
iret
int
shlb
clc
add
jmp
int3
int
loope
sub
jbe
inc
call
jle
fnstsw
loopne
aam
shr
cmc
xor
ret
in
nop
fucomip
iret
test
int
hlt
in
ljmp
xlat
std
rcr
sti
shl
fdivrl
clc
jmp
addl
cld
jecxz
cmc
loop
in
out
cli
int3
int
fdivs
fsub
cld
fsub
mov
into
fucomip
in
adcb
leave
into
ds
ds
loopne
test
mov
fsubp
jmp
xchg
shl
xor
lock
cmp
cli
repz
fdivrs
test
loopne
fmuls
loopne
lret
in
out
into
stc
icebp
sti
xor
lock
loop
ror
cld
fcom
cli
loope
fdivrp
shl
out
out
out
iret
clc
cmp
fcmovnbe
fmul
shll
cmp
cld
loop
les
in
repz
sub
cli
clc
cmp
rcl
lret
cmc
xchg
clc
idiv
cmp
jecxz
jmp
cmc
int3
in
cmp
xor
loope
rol
repnz
in
out
mov
shr
int3
repnz
shlb
in
repz
fcmovne
fptan
jmp
sti
hlt
test
rcr
int
loope
loope
lret
fistpll
in
icebp
int
clc
cmp
sar
ds
loop
jmp
lret
test
out
fnstsw
xlat
shl
sub
in
int3
jmp
into
ret
ffreep
sbb
loop
fcoml
aad
shl
ljmp
jmp
jmp
sti
repnz
ret
xchg
jmp
loopne
mov
into
repnz
ret
into
xor
rcr
aam
xchg
mul
loopne
sti
fsub
in
mov
rcl
out
aad
call
out
ds
out
fucomip
enter
mov
cld
jmp
sub
in
sub
leave
fdivrp
aas
xor
in
cli
in
xchg
mov
decl
mov
in
das
int3
aaa
xor
icebp
cmp
xor
out
lock
loop
hlt
fucomip
xlat
stc
shl
out
jmp
xor
xor
xor
int3
ds
fldz
cmp
leave
fdecstp
in
mov
loopne
cld
in
shl
hlt
lock
lret
ljmp
fadd
in
cmp
lea
fistl
repnz
add
jmp
enter
fstp
int3
shl
scas
imul
daa
adc
and
jg
fiaddl
jle
lret
lret
cmc
xlat
clc
stc
rol
repz
rcr
mov
jmp
sub
rcl
clc
int3
int
ds
xor
sar
cmp
lret
mov
loope
mov
jmp
jmp
out
cld
cmp
shll
clc
loop
not
xlat
fucom
aam
lret
xchg
xorl
repnz
in
xlat
leave
lret
int3
clc
ret
jecxz
add
mov
int3
int
shr
test
iret
lret
xlat
idiv
cmp
ss
in
stc
clc
loop
lock
mov
in
mov
sbb
mov
int
lret
aad
into
leave
call
sub
clc
loop
mov
mov
out
cli
vpsraw
jecxz
fcom
int3
cli
not
int
fdivrl
hlt
jmp
cli
addb
in
aam
out
in
neg
hlt
int3
fdivrp
sarl
iret
mov
ret
ror
enter
jmp
iret
repz
aaa
cli
out
rol
cld
in
lock
cmc
cmp
fidivrl
mov
ret
jecxz
ffreep
leave
in
in
xchg
in
loopne
shr
jmp
repz
out
cmp
out
aas
fmulp
mov
ret
cli
std
jecxz
out
iret
out
nop
loop
fnstenv
ljmp
ss
hlt
faddl
xlat
mov
int3
fucom
mov
div
enter
test
fidivrl
stc
in
icebp
cmpl
fcompp
loopne
jecxz
test
cmp
fst
cld
fucomip
stc
out
ret
repnz
cli
call
and
aad
loope
out
std
cmp
ret
cmp
shl
lret
ffree
test
loop
lock
xor
div
int
icebp
out
out
lret
xor
in
std
aam
loopne
iret
test
incb
repz
in
rcr
xor
jmp
cmp
hlt
ds
hlt
shl
cmp
ret
loop
loop
in
ljmp
cmp
ss
cmp
in
in
std
std
fdecstp
mul
frstpm(287
or
dec
out
jmp
loope
cmp
shl
out
std
int3
cmc
aas
stc
clc
ret
cli
xchg
xchg
icebp
out
cmc
ror
vpavgw
leave
out
cli
addb
ret
out
loope
mov
jecxz
nop
jmp
fdivp
imul
jmp
lret
ror
aas
ffree
fcmovnu
out
jmp
sub
in
jg
fiaddl
jle
repnz
sub
cmp
fdivrs
out
leave
lret
aaa
lock
rcl
loopne
mov
test
std
xchg
hlt
repnz
repz
out
enter
in
add
jecxz
mov
std
xchg
xchg
test
rol
rcl
icebp
bnd
ds
stc
ret
xchg
cli
jmp
lret
call
xor
cmc
out
fucomp
int3
stc
fiaddl
xchg
mov
not
xlat
cld
shl
shl
fists
int
xor
cmp
incl
loope
neg
filds
out
out
into
shr
out
shl
int
sti
idivl
int3
adc
shl
movb
mov
xor
sub
cli
std
hlt
lret
hlt
loope
fcmovnu
cli
in
aad
std
faddl
test
jmp
fsubr
out
stc
shl
rol
cmc
cmc
shl
ror
cli
mov
shr
aad
xor
in
aam
jmp
stc
rcr
std
add
cmp
lret
mov
and
xor
xlat
jmp
lret
fcmovbe
fst
sar
in
rcl
testl
vpsubusw
xor
fidivrs
icebp
loop
cmp
fxam
out
repz
aaa
in
cli
out
imul
rcr
repnz
in
jmp
fdivr
nop
fldl
ror
jmp
aaa
sbb
testl
test
leave
les
das
shl
xor
in
call
sti
cmp
cli
sbb
mov
stc
out
lock
fldl
in
xor
cmp
fcmovu
in
lock
loop
cld
fldlg2
loope
lret
iret
enter
inc
jmp
sarl
fcmovnu
sarl
test
or
in
repnz
fmulp
iret
fisttps
in
cmp
lret
cmpl
repnz
fucom
lret
mov
clc
jmp
ljmp
into
cmp
cmc
xchg
call
aam
cmp
dec
loopne
xchg
repz
fchs
shl
rcr
stc
loopne
aas
fisttpl
mov
in
mov
mov
sub
cmp
mov
jbe
jmp
lret
ret
in
call
popa
int3
daa
fcomps
jg
fiaddl
jle
jecxz
out
aaa
rol
xor
call
rol
int
fdiv
cld
repz
ret
sbb
aaa
xor
fidivs
out
icebp
lock
out
fcmovnbe
rolb
rol
fcmovu
call
jecxz
cmc
xor
repz
ds
sub
ret
dec
cli
shl
enter
loop
cmc
xor
rcr
lret
lret
shr
faddp
cli
sub
xlat
fcmovu
cmp
xchg
xor
cli
aad
jmp
clc
repz
enter
in
cld
int3
out
lret
rcl
ret
int
repz
lret
ror
xor
and
loop
out
out
enter
xchg
call
lock
imul
fxch
aas
rcl
cmc
rcr
cli
hlt
fdivrp
std
enter
loopne
jmp
cmc
in
stc
jmp
sub
clc
call
lock
loopne
cld
loopne
ljmp
fucomp
fsubrp
lock
ror
sti
sbb
ret
xlat
iret
movl
test
fld
repz
in
loopne
adc
in
add
xchg
int3
test
lea
lret
jmp
in
fsubr
fucomi
cmp
fldlg2
test
sbb
fucomp
mov
mov
out
test
in
push
into
aaa
fcmovbe
rcr
and
test
fsubrp
lds
test
repnz
rol
jmp
cmp
int3
loopne
cld
sarl
out
hlt
jecxz
mov
int
call
mov
rol
xor
stc
in
cmp
std
fdivrl
in
xchg
orl
repnz
fdivp
leave
repnz
jmp
idiv
loope
aam
cmp
hlt
jmp
out
lret
shr
int3
iret
lock
stc
fdivrl
aas
cmp
cmp
lret
lds
and
cld
xor
out
xor
cld
xlat
ret
std
xchg
xchg
int
test
loopne
in
mov
icebp
jmp
rcr
aam
xor
xor
ss
aam
enter
add
std
repnz
stc
cmp
cmp
iret
std
cmp
lock
incl
cmp
push
les
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
jmp
ret
rcl
rol
rorl
pop
push
int
bnd
fiaddl
jle
jmp
repz
in
cli
loop
xor
int
cmc
repz
rorb
out
out
fmul
lret
in
out
xor
fdivp
int
aas
ret
out
lock
cmp
in
loopne
out
loopne
out
int3
xor
sti
aaa
stc
loopne
cmp
sub
repz
ret
xlat
mov
fcmovnu
out
mov
xchg
xor
xor
clc
cmp
hlt
sarb
lock
ret
inc
fiaddl
int3
lock
loopne
jmp
aad
cmp
cld
sti
iret
cmp
jecxz
shr
loope
in
xchg
std
sbb
in
das
lock
xor
flds
rcr
sarl
lret
aam
xchg
iret
hlt
leave
clc
in
into
into
call
cmp
mov
test
test
mov
sub
in
shr
cmp
fucomi
icebp
lock
std
jecxz
out
in
clc
repnz
xchg
enter
call
lock
in
ret
sti
les
mov
test
sub
test
icebp
out
stc
ret
cmc
fucomp
cmp
clc
rcl
fcmovbe
rcl
jmp
adc
out
loope
xchg
rolb
repz
into
sti
clc
repnz
cmp
loope
mov
mov
fucomip
loope
lret
das
shlb
cmp
loopne
std
stc
incb
test
std
int3
jmp
test
fsubr
ss
test
cmp
in
aad
add
repnz
ljmp
shrl
repnz
fidivrl
ljmp
rcl
ljmp
xchg
stc
out
cld
repz
repnz
out
std
mov
sub
shr
lock
in
fdivrs
aaa
aam
xor
in
jecxz
sar
test
mul
mov
loopne
in
out
loopne
xlat
les
icebp
ss
xlat
aas
icebp
imul
sarb
icebp
cld
ret
call
out
lret
lds
sub
into
in
out
loopne
lret
sar
rol
shl
out
out
into
out
mov
sbb
xchg
in
xor
icebp
rcl
int
cmp
sarb
call
call
add
xlat
mov
rcr
xlat
sub
scas
mov
hlt
jg
fiaddl
jle
xchg
xchg
les
ljmp
sbb
fdivr
loopne
cmp
std
out
jmp
fists
fsubr
cmp
cmp
aam
out
into
fucomip
loope
imul
mov
mov
xchg
test
int3
fcmove
jmp
clc
filds
loop
loop
in
xchg
int3
int3
in
rcll
icebp
cmp
icebp
cmp
repnz
in
lock
testb
xchg
lds
call
clc
jmp
rolb
fdivr
cld
jecxz
leave
fucomp
int
shl
aam
in
leave
stc
cli
sti
sti
int3
shl
iret
incb
int3
mov
repnz
mov
xlat
cmp
icebp
fucomi
xlat
div
fcomp
aam
sar
cld
aad
fdivr
fsubr
int3
fiaddl
aad
xor
xor
aam
addb
mov
out
mov
in
mov
int3
lret
ffree
jmp
std
cmp
out
dec
mul
stc
call
mov
fbstp
cmp
enter
call
int3
push
iret
xchg
mov
loop
popl
ss
fcmovnbe
cmp
jmp
xchg
ret
into
in
in
test
aam
out
rcl
cmp
cmp
ds
jecxz
std
sub
loopne
std
loope
nop
loop
xor
out
idivl
iret
jecxz
ljmp
mov
aas
shl
in
out
cld
into
jmp
rolb
fcmovu
lea
xor
shl
xlat
out
jmp
int
xlat
cmc
out
add
mov
leave
vpavgw
loop
loopne
stc
cli
shr
int
hlt
icebp
clc
sti
cmp
loopne
in
hlt
clc
int3
std
lret
and
int
in
cli
neg
cmp
cli
icebp
into
cmpb
xchg
aam
mov
jmp
repnz
icebp
cmc
sub
repz
xor
stc
repnz
cmp
jmp
jmp
incl
ss
cmc
int3
out
ds
idivb
xor
jmp
lret
xlat
aas
rcr
int
in
push
pop
mov
jg
fiaddl
jle
cmp
hlt
out
mov
call
loope
lret
shll
out
leave
out
int
xlat
out
jmp
aad
loope
xchg
cld
and
cli
lock
xor
out
sar
ss
xor
div
ffreep
not
rol
cmc
loopne
ljmp
icebp
call
hlt
jmp
stc
leave
call
clc
hlt
loope
std
fcom
int3
jecxz
xchg
in
cmc
xor
out
rcl
xor
call
loope
cmc
ret
mov
lret
and
call
rol
cmc
jmp
sbb
shl
sar
xchg
ljmp
mov
rcl
fdivr
cli
div
ret
test
roll
mov
fsubp
cld
repz
ljmp
leave
cmp
faddp
sub
jmp
and
out
roll
rol
cmp
enter
fsubr
shl
aas
cmp
or
mov
jmp
mov
ljmp
clc
lock
xorl
aas
xchg
faddp
in
fld
in
out
mov
out
int
xor
cld
idiv
xor
rcr
fxch
clc
xor
enter
loope
repnz
imul
ss
repnz
fidivrs
xchg
out
loope
int
mov
shr
clc
iret
lret
sar
cmp
aas
repz
out
hlt
jmp
leave
out
loope
xchg
loope
xchg
icebp
ss
test
into
std
ret
aam
repnz
out
lret
int
fdivrp
not
xor
clc
in
in
sarl
fprem1
out
fldl
add
or
jecxz
in
xor
clc
jmp
cmp
iret
sarb
repnz
aam
fsin
stc
fucom
enter
rcr
mov
rcr
in
int3
iret
les
fxch
int
repz
fistpll
loop
filds
ret
xchg
in
out
xor
out
jmp
std
cli
cmp
adc
stc
ret
jmp
cli
xchg
cld
int3
ret
mov
test
out
ror
int3
aam
int3
cmp
loopne
sbb
fdivr
faddl
loop
out
jmp
fldl
out
xlat
hlt
aam
shr
test
je
add
lret
fst
mov
addr16
rclb
jg
fiaddl
jle
ret
out
sti
fxtract
stc
mov
lret
loope
repz
call
in
into
jecxz,pt
jecxz
xlat
loope
ds
iret
shr
loope
fucomip
rcl
test
fptan
call
aad
out
mov
in
mov
lea
sub
xor
repnz
cmp
cmp
xor
jmp
in
cli
in
leave
out
in
xchg
out
in
cmp
adc
shl
icebp
or
fisttpl
rcl
divb
hlt
in
xor
out
in
aaa
loopne
sti
fdiv
test
sti
testb
iret
xchg
rol
aaa
jmp
out
cmp
fcmovbe
fiadds
xchg
leave
fildl
in
fsubrp
les
jmp
cli
out
fidivrl
shl
fcom
in
cmp
icebp
mov
loop
in
out
fdivr
xchg
sar
xlat
loope
jmp
cli
xor
fxch
fbstp
loope
out
std
test
mov
int
into
loop
jmp
xor
mul
out
loope
in
ds
out
rolb
decb
in
out
ret
cli
xor
int
out
jecxz
in
fcomi
fcmove
jmp
fcmovbe
in
shr
ds
enter
fsubr
sti
cli
lea
xchg
lret
iret
cmc
cmp
shr
call
out
cli
roll
mov
fcmove
xrelease
iret
cmp
int
iret
div
xor
stc
call
mov
out
xchg
xor
cmp
aaa
fdivr
fdivrp
rcl
aad
out
stc
and
mov
mov
shr
xor
stc
fdivp
cmp
test
in
movb
loope
loopne
hlt
xlat
xor
hlt
out
lock
cmp
test
out
aam
incb
incb
loopne
xor
fld
ds
loopne
in
into
int3
rol
and
mov
cli
out
leave
out
cmc
shl
shl
fcmovnbe
enter
adc
ffree
stc
leave
mov
int3
xchg
cli
out
repz
lret
out
iret
lock
lock
lock
cmp
add
mov
mov
mov
mov
xor
add
jmp
aam
ret
aam
push
and
mov
jle
add
cmc
loopne
ror
out
addl
lock
shl
mov
out
jecxz
ret
cmp
xlat
fsub
cmp
rcr
enter
enter
lea
jmp
std
xor
lret
aas
icebp
xor
stc
in
cmc
fsubp
cli
mov
sub
lret
enter
enter
ret
int3
ljmp
hlt
sarl
not
filds
fstl
xchg
rcl
cmp
sti
cmp
lret
aaa
fmulp
cmp
loope
sti
fadd
xlat
loopne
mov
shlb
idivb
xor
loope
into
test
stc
in
lret
leave
sti
lock
out
lret
xor
cmp
aaa
rcr
clc
sti
cmc
fistpll
lock
lret
fsubp
test
fucomp
in
test
out
cmc
enter
cmp
mov
lock
fisttpl
in
int
leave
iret
repz
jecxz
ss
repz
xbegin
loope
test
jecxz
repz
ret
jmp
incb
fcmovb
rcr
test
into
xchg
loopne
out
ret
call
fsub
aas
rol
shl
loop
jecxz
lock
test
aam
cmp
xor
shr
test
out
fsubp
aam
mov
jecxz
mov
loopne
divb
fstpt
div
inc
out
f2xm1
adc
cmc
test
xchg
decb
ror
fucomp
ret
aad
in
cmp
out
aam
repz
fcomp
orb
xchg
lret
out
int3
fcmovne
out
out
clc
stc
rcr
fcos
xchg
loopne
lret
loopne
fmulp
xchg
in
into
mov
idivl
icebp
sti
cmpb
roll
std
ror
out
mov
out
sub
iret
in
cmp
iret
fxch
cli
aam
out
ret
aad
stc
rol
leave
xchg
loop
out
fisttps
ret
in
iret
cmp
fldlg2
add
orl
mov
repz
shrb
ljmp
clc
and
call
in
jmp
mov
mov
mov
mov
jmp
lret
ret
fcmovu
fucomi
pop
test
jbe
cmpsb
fildl
jg
fiaddl
jle
hlt
repz
inc
loope
jmp
ret
clc
out
fcmove
lock
imulb
cmp
jecxz
clc
repnz
faddp
out
fucomi
sti
nop
shl
xchg
out
stc
rol
repz
das
icebp
jmp
cld
std
in
rol
test
loop
ffree
in
out
ficoms
fucomi
out
cmc
hlt
cmp
out
cmpl
cld
out
xlat
jecxz
jmp
jmp
loopne
loope
shr
fldl
loop
fcom
lock
fucomp
in
repnz
cli
cli
addl
xchg
cmpb
jmp
cmp
in
cld
enter
and
mov
lret
in
leave
jmp
aad
lock
hlt
rol
in
fdivrl
aam
into
or
std
fsubr
cld
rol
cld
mov
std
sti
jmp
enter
ljmp
fcmovb
aam
addl
loope
call
xor
fidivrl
hlt
out
lret
cmc
sbb
out
rolb
in
cld
mov
jecxz
iret
into
jecxz
out
fmul
fucomp
int3
shl
clc
in
testb
fsubrp
int3
std
loope
mov
decl
xlat
jmp
cli
rcr
shlb
loope
rol
hlt
xbegin
jmp
dec
in
xchg
repnz
shlb
cli
sarl
clc
lock
imul
std
xchg
adcl
ret
lret
int
clc
imul
in
aam
cli
lret
mov
or
in
incb
into
iret
in
xor
hlt
loopne
icebp
ffree
out
jmp
in
out
out
test
rcr
xchg
iret
int3
cmp
stc
ljmp
fcmovnu
jecxz
div
hlt
decl
mov
iret
in
int
fnstenv
ljmp
cmpb
std
fcomp
out
ljmp
jmp
nop
xchg
out
loop
enter
xor
cmpb
cmpb
shl
test
addb
call
lock
lret
fcmovu
repz
ret
fdivr
or
into
sti
dec
xchg
out
iret
loope
cli
call
lock
fadd
test
out
orb
out
shl
mov
in
push
jnp
add
add
aas
ret
vpcmpeqw
mov
test
fiadds
jle
sub
frndint
fsub
into
loop
fcomi
ret
ret
cli
lret
adcl
loop
xor
out
sarl
repz
xlat
mov
loope
repnz
cmp
fcomp
fcmovnbe
lock
in
stc
les
out
sub
icebp
cmc
enter
cmp
in
cmc
xor
out
stc
xchg
lds
jmp
fsubr
in
shr
sarb
out
sarl
fsub
loop
shl
sbb
int
stc
cli
out
cmp
loop
int3
cmp
xor
int3
cmp
int3
ror
loopne
cmp
stc
testl
xor
out
repnz
out
icebp
idiv
xchg
aad
mov
iret
xchg
jmp
xor
in
fdiv
lock
aaa
adc
xlat
aam
cmp
int3
mov
mov
mov
jmp
aam
ret
lock
aad
sti
jmp
cmp
aad
fsub
jecxz
sti
hlt
fadd
loopne
in
std
test
jmp
shl
xor
fidivrs
std
ror
jecxz
lock
mov
lret
int3
fimuls
loope
jecxz
aad
lret
repz
sarl
jmp
xchg
aam
in
fldlg2
cmp
xor
in
fdiv
cmp
out
loopne
sar
mov
int3
call
aad
into
ror
xlat
xlat
divb
jmp
aad
cli
cld
filds
aad
test
xchg
mov
in
aaa
cld
rcl
lret
aas
stc
int3
aas
cld
out
add
sti
rol
mov
test
repz
aam
cmc
int
out
movl
xchg
fucomp
out
lret
stc
fcom
ss
sar
loopne
cld
fcmovnu
repz
adcb
fbstp
out
repnz
iret
lock
sbb
xchg
ljmp
icebp
mov
xchg
loop
ljmp
repnz
repnz
fst
mul
aad
movb
fdivp
rcl
in
in
xchg
shr
xor
repz
bnd
hlt
test
mov
loop
test
jmp
int3
ret
lret
ret
int
int3
int
adc
jmp
mov
add
jecxz
loopne
leave
lock
aam
cmp
loopne
jmp
flds
dec
lret
xchg
xchg
ljmp
shl
clc
int
rol
adc
stc
testl
not
leave
fcmove
fdivrl
icebp
icebp
jecxz
aaa
fcmovb
shl
xchg
int3
loopne
mov
hlt
out
lret
out
aas
loopne
cmp
test
clc
les
sbb
mov
cld
xchg
std
out
test
sti
shr
ds
cmp
ret
vpaddusw
jecxz
shll
in
in
fidivl
add
sti
lds
xchg
int
mov
repz
shl
xor
fcmovbe
ds
xlat
cmc
cli
in
cld
stc
in
xor
mov
cli
aam
out
aas
ljmp
loopne
ret
test
into
loope
out
rcr
xchg
xchg
xlat
aam
lret
lock
repnz
lock
ret
out
loopne
out
nop
and
aam
int3
ret
sti
clc
xor
lret
lock
and
call
leave
call
in
ftst
shrl
iret
icebp
std
int
loop
cli
lock
aad
cmpb
int
icebp
enter
repnz
ljmp
aad
xor
cmp
stc
cmp
out
and
rorb
fmul
out
ffreep
xlat
int3
sar
test
xlat
mov
fimuls
shl
loop
hlt
lret
rcr
in
in
aas
rol
cmp
ljmp
cli
xchg
test
in
xchg
sub
in
cld
xor
jmp
testl
fscale
fiadds
stc
clc
xor
cmp
sbb
test
aam
icebp
loope
ret
call
out
in
aam
out
sti
shlb
clc
int3
aad
in
cld
icebp
iret
clc
clc
jecxz
fdiv
sub
sti
mov
int3
shr
cmc
repz
ret
in
aaa
fcmovu
stc
cmp
fcomi
xlat
decb
loope
iret
mov
sti
fidivrl
repnz
repnz
jmp
add
mov
jmp
ror
aas
roll
ljmp
test
fiaddl
jle
leave
nop
std
orl
iret
call
roll
leave
ljmp
rolb
lds
in
sti
out
int
fistpll
ljmp
hlt
aad
orl
sbb
clc
leave
lret
idivl
ljmp
ds
cld
rcr
xchg
xlat
loop
in
fucom
iret
test
fucom
jecxz
in
cmp
jmp
cmp
icebp
in
icebp
enter
fldl
faddl
ret
xor
leave
hlt
fdivrl
jmp
in
test
xlat
test
out
mov
cmc
aad
lret
sti
fcomi
cmp
repz
cmp
fucom
lock
hlt
in
neg
lock
mov
mov
in
repnz
aaa
xlat
leave
cld
xor
lock
fcomip
test
vcmpsd
test
jmp
out
lds
rcl
aaa
fldcw
cmp
out
ret
out
neg
cmp
clc
iret
call
out
das
ret
repnz
loope
repz
repnz
aas
flds
jmp
lock
in
xor
out
leave
fidivrs
iret
test
ret
fdivp
call
jmp
fdivr
cmc
aaa
shll
cmp
jmp
cmp
fdivp
sti
roll
xchg
cmc
neg
mov
loopne
rol
mov
in
leave
cmc
out
lret
in
cmp
test
out
loop
fisttps
sti
lret
nop
call
icebp
ss
std
in
hlt
rcr
xlat
loop
clc
cli
rorl
rolb
in
loop
lret
cmp
std
stc
out
int
sti
push
out
mov
in
fsub
fmul
hlt
ljmp
cmp
aam
loop
fidivrs
mov
fcomip
sti
cld
adc
aad
out
in
fdiv
cld
icebp
sti
fnstenv
std
aam
repnz
fst
ret
lret
stc
mov
loopne
mov
fadd
in
shr
cmp
ds
in
loopne
call
call
fmuls
shl
xor
clc
in
jecxz
iret
iret
aas
aad
xor
out
sbb
enter
in
sti
xchg
mov
int
shl
xor
iret
ljmp
fdivp
ffreep
leave
test
xor
mov
mov
jmp
into
aam
fmul
dec
cmp
xchg
xacquire
fiaddl
jle
addl
lret
out
xor
ret
xor
repnz
fcmovu
ret
shl
out
repz
sbb
rcll
div
int
sti
cmp
fcom
repz
fdivp
out
stc
std
ljmp
hlt
aam
aam
shlb
lock
shr
iret
into
ds
testl
leave
cli
test
jecxz
jmp
repnz
fcmovnu
rol
f2xm1
inc
sbb
clc
fmull
rcl
xor
fsubr
lock
std
loopne
repnz
enter
clc
addl
repnz
lret
cmp
aaa
enter
sbb
cmp
stc
loop
mov
lret
test
xchg
shr
shl
shl
stc
hlt
xlat
xor
test
xchg
cmp
xchg
xchg
roll
jmp
aaa
shl
clc
jecxz
ror
in
testl
out
loop
jmp
lock
sti
cmp
out
clc
rcr
cli
adc
loope
loop
mul
leave
call
int3
sub
hlt
cli
clc
aaa
fdivrp
iret
fiadds
repnz
fnclex
addb
test
int3
xchg
jecxz
into
in
ljmp
jecxz
in
repnz
mov
in
jecxz
jecxz
fiaddl
aad
sti
into
jmp
cmp
clc
std
cld
add
repnz
call
stc
in
out
cmp
in
out
rol
out
test
stc
out
lret
nop
call
aad
in
jmp
lret
call
aas
aam
test
cmc
cli
incl
mov
enter
out
aaa
repnz
addb
cmc
repnz
fucomp
mov
leave
aam
xor
not
aam
out
aam
in
cli
loop
filds
in
xchg
out
sub
loop
xor
hlt
lock
fsubrp
hlt
addb
xlat
mov
std
ljmp
hlt
shl
aam
cmp
jmp
out
idiv
cld
cmp
mov
xchg
out
shl
in
clc
loop
idiv
aad
ds
cmp
cmp
clc
add
mov
mov
mov
mov
xor
xor
add
add
imul
jmp
lret
enter
int3
rorb
mov
mov
fiaddl
jle
jmp
repz
fsub
incb
mov
mov
das
sarl
lock
mul
in
jmp
cmp
rolb
out
in
decb
shr
stc
repz
ljmp
not
mov
cli
mov
leave
out
cli
ror
loope
test
int3
sub
xor
call
fiadds
jmp
in
cld
stc
ficoms
lret
fcmovnbe
shr
sar
sarl
decb
loope
in
iret
loop
mul
xbegin
into
ror
loopne
loope
sti
rol
addb
mov
ljmp
rol
ss
fdivs
cmp
rcl
testl
lret
sti
enter
movl
aas
flds
rol
hlt
rcr
out
leave
in
in
std
dec
ss
ror
xor
ret
out
aam
fldln2
xchg
xchg
iret
lret
ret
stc
repz
aam
fiadds
sti
jmp
loop
std
fimuls
in
xor
fidivrs
cmp
repnz
aam
rcl
fisttps
enter
aam
xchg
enter
shll
out
hlt
out
ljmp
shl
sbb
loop
fucomp
jecxz
stc
in
in
out
call
xchg
adc
hlt
stc
cld
fisttps
in
ljmp
rcr
cmp
clc
fdiv
aam
cmp
clc
into
out
nop
xchg
mov
out
aam
out
fdivrs
in
loopne
repz
fucom
repz
incb
lea
clc
cs
iret
sti
ret
test
fsin
out
mov
mov
sub
iret
call
loope
fcomip
shl
cmp
enter
lds
decl
xlat
in
xor
sti
bnd
cli
fadd
fadd
hlt
cli
div
mov
adc
shll
enter
cmp
out
xor
out
stc
mov
out
aad
and
lret
shll
shr
out
into
into
enter
in
add
jmp
ror
rcl
stos
sub
insl
and
adc
mov
fiaddl
jle
fadd
cmp
std
in
in
xchg
in
xchg
lds
test
clc
enter
fscale
addb
call
ljmp
stc
sarb
xor
rcr
cmp
rolb
out
clc
in
sti
faddl
out
lock
ds
hlt
idivl
xchg
xlat
mov
decl
iret
ljmp
sbb
fcomi
rcl
loope
in
loopne
enter
shl
out
loopne
jmp
sti
cmp
out
xorl
aad
out
aad
std
enter
shl
out
jecxz
enter
xor
repnz
fdiv
ret
in
call
into
icebp
nop
ljmp
enter
aaa
rolb
xlat
add
test
fcmove
in
nop
shlb
repz
div
out
clc
std
test
shl
loopne
cmp
cld
in
fstp
out
xchg
dec
in
xor
lret
cmp
not
sar
cmc
aad
xlat
cld
and
loope
xchg
loope
xchg
sub
div
lock
in
jmp
loopne
fadd
loope
fcomi
out
out
test
iret
xor
test
fdiv
out
leave
fdivp
jmp
lock
stc
aam
mov
fmull
shr
in
fxch
call
fsub
lock
ret
std
jecxz
fsub
out
test
enter
fstp
fldz
ljmp
clc
loop
leave
ret
loopne
into
out
out
mov
fcom
iret
rcl
fcmovnu
repnz
loop
aas
addl
and
lea
divl
jmp
fidivs
sar
adc
sti
repz
mov
in
in
in
out
cld
repz
test
aam
leave
icebp
cmp
aad
ljmp
hlt
mov
xlat
aam
test
xchg
cmp
cli
leave
lock
loop
rcl
xor
cmc
xlat
in
fisttpl
aad
xor
xor
cli
stc
in
aaa
aas
xor
cmp
cmp
leave
out
fisttpl
fsub
jmp
shl
ss
aad
mov
mov
mov
xor
add
jmp
aam
lret
rcr
scas
cld
cmp
xchg
jle
loopne
aas
sarb
ret
out
mov
fcmovne
sbb
mov
in
xor
lret
lret
xor
cld
int3
cmp
aas
loopne
jecxz
loopne
jmp
cmc
neg
fcmovne
lret
orl
jmp
cmp
aas
loopne
addb
ljmp
in
mov
hlt
repz
out
cmp
pushl
in
xlat
shlb
repz
cld
mov
fildl
int3
hlt
test
hlt
cmc
lock
out
jmp
fdivr
test
loopne
loop
aam
dec
lds
in
iret
das
rcl
out
std
ss
into
fcmovnbe
rol
sbb
test
test
loop
jecxz
xchg
xchg
loopne
aad
xor
cmp
enter
xlat
fucomi
aam
rolb
mov
add
cmp
in
sbb
lock
cli
adc
xor
loopne
flds
xchg
aad
jecxz
ret
cmp
ror
iret
cmp
sar
xlat
adc
sti
fiadds
rolb
in
jmp
jecxz
in
ftst
sub
call
test
iret
iret
in
ret
xlat
repz
cmp
int3
shl
fdivp
xchg
neg
in
orl
lock
aam
out
iret
in
lret
xlat
repz
loop
out
ret
rol
sti
testl
rol
cmc
cmp
cmp
rcr
in
jecxz
cmc
idivl
sar
clc
fucomi
test
mov
out
sub
fcmovnu
cmp
clc
adc
cld
fsubr
and
sti
out
loop
test
ss
cmc
test
leave
in
out
cli
repz
and
mov
xchg
cmc
lock
ret
fsubr
cmp
fidivl
aam
std
fiaddl
mov
out
in
out
int3
ljmp
sti
cmp
in
repz
jecxz
xlat
fstp
mov
in
into
loop
sub
std
hlt
cmp
jecxz
push
call
ljmp
rcl
adcb
enter
aaa
in
xor
xlat
filds
cmp
out
call
out
xor
imul
mov
xor
sub
mov
mov
jmp
ret
enter
int
leave
mov
sub
int
nop
jg
fiaddl
jle
fsub
lret
int3
out
fst
stc
loopne
les
stc
nop
mov
sti
xchg
fidivs
fcomp
idivb
stc
jmp
xchg
xor
mov
into
ret
fcmovne
icebp
in
das
stc
out
xor
sar
lret
loope
repnz
fcmovnb
loope
ret
in
clc
mov
in
int
out
and
lret
bnd
ss
sbb
icebp
or
jecxz
mov
mov
test
movl
stc
iret
iret
sbb
ds
ror
int3
mov
lret
fcomip
ljmp
shlb
repz
leave
fcom
cmp
repz
ret
rcl
xlat
call
dec
out
sub
xlat
out
into
std
xlat
cmp
cmp
faddl
cli
std
cli
loop
jmp
test
lock
cmc
enter
idiv
lret
ss
loope
cli
mov
ret
repz
fmull
int3
call
iret
out
cmp
lret
cmp
fdivs
neg
out
and
lret
sbb
cld
push
lret
aad
loop
ret
xor
rcl
out
std
loopne
out
aas
cmp
iret
mov
std
in
out
fdivp
cs
call
aaa
cmp
fcmovnu
addb
jmp
out
ljmp
ss
adc
aas
idiv
cmpl
cmc
loopne
mov
std
lret
orb
jmp
call
jmp
iret
fidivrs
cmp
aad
in
sti
rorb
xchg
hlt
jmp
out
test
cmc
aam
repnz
out
cmc
xbegin
dec
repz
aad
leave
sub
aad
jmp
aad
xlat
icebp
stc
test
call
into
mov
fcomip
shr
shl
aad
aad
int
lret
fcomip
cmp
test
int
jecxz
mov
aad
jmp
fcomp
std
std
int3
fadd
hlt
sti
rolb
cld
stc
loop
ljmp
hlt
leave
lock
fcomip
jecxz
ror
fstp
fcmovu
in
mov
xchg
and
stc
int
jecxz
test
cmc
rcr
cmp
shr
call
test
hlt
cmc
test
clc
jmp
enter
fcmovne
fst
or
pop
push
cmpsl
mov
ds
jg
fiaddl
jle
xor
out
cli
in
ljmp
cld
cmc
leave
fpatan
mov
sti
int
out
mov
shl
cmp
in
cli
cmp
aas
xlat
sbb
lea
or
jmp
sub
leave
ljmp
rcr
repnz
xchg
fcmovnb
mov
loopne
out
mov
in
xlat
das
leave
aam
shl
jmp
lret
lock
aad
xlat
sbb
fmul
imulb
test
xor
aam
lret
clc
iret
in
rorb
fnstsw
fisttps
jmp
std
fsqrt
out
fyl2xp1
std
cmp
jecxz
out
fxch
in
movl
cli
sar
in
lret
int3
jmp
rol
clc
xlat
mov
xlat
test
cmc
out
in
sti
loope
mov
out
repz
fcmovnb
stc
xlat
int
clc
aad
into
shl
mov
and
in
test
addl
das
in
xlat
jmp
iret
shl
div
cli
cmp
xchg
mov
out
mov
test
call
sti
ljmp
les
sti
fsubr
lret
enter
in
xor
cmp
std
fdivp
aam
lock
movb
sti
out
xchg
into
out
int
stc
shl
leave
aam
loopne
leave
push
loop,pt
shl
lret
fldl
call
ljmp
cld
aam
jecxz
rcl
lock
rol
ret
int
mov
jmp
cmp
shll
out
test
aad
in
out
test
in
lret
int3
aad
fidivrl
icebp
cmp
cli
xchg
fmulp
fmull
repz
aas
shr
call
cmp
lret
ds
shl
mov
lea
nop
jmp
out
fcmovu
int3
hlt
hlt
enter
xlat
sti
rcl
rcr
fcmovnbe
ret
decl
out
in
or
icebp
xor
out
xor
out
into
fdivp
faddl
aas
in
hlt
loope
leave
cld
int3
xchg
out
aad
shr
cmp
fsubr
loop
add
fadd
fsubp
fimuls
sti
mov
xor
sub
jmp
ret
fmul
ret
int
dec
filds
cmpsl
lcall
jle
aam
ror
xor
hlt
jmp
out
aam
cmp
rcr
xchg
enter
jecxz
mov
loop
faddp
or
into
into
jmp
sti
xlat
fstp
fdivrl
xlat
stc
std
cmp
fstp
mov
mov
test
icebp
ljmp
icebp
aaa
sar
icebp
rcr
ds
cmp
mov
sub
in
nop
hlt
enter
lret
aaa
shr
loop
stc
cmc
fxch
out
jmp
dec
ljmp
divb
cmc
cmc
xor
fsubrp
add
shl
mov
and
mov
sub
mov
cmp
sti
int
fdivp
fildl
loopne
fsubp
jmp
out
in
jecxz
in
in
ret
xlat
aad
idivb
out
rcl
cmp
into
loop
sarb
lret
mov
lret
out
mov
std
repz
xor
out
hlt
int3
jmp
std
ret
aad
sar
mov
flds
adc
out
jmp
jmp
lock
out
jecxz
repnz
mov
out
xlat
fucomp
xchg
fsubrp
lret
div
jmp
icebp
ljmp
sar
jmp
xlat
in
mov
aad
iret
fcmovne
div
repnz
aam
test
ds
mov
mov
in
call
jmp
fucomi
in
cmp
cli
fucom
loop
xchg
leave
and
in
cli
mov
int3
addb
leave
cld
xor
enter
shl
sar
cmp
xchg
int3
int3
jmp
in
addb
out
aad
aas
stc
clc
out
loopne
adc
enter
enter
aam
hlt
into
shlb
repnz
out
ds
shl
sub
lock
jmp
nop
ljmp
aam
repnz
sar
neg
cli
out
xor
xor
call
incb
loope
jecxz
call
xor
in
aaa
sar
aad
jecxz
icebp
repz
cld
into
loope
lock
fisttpll
ret
std
das
int
cmp
sbb
xlat
fidivrs
leave
out
mov
icebp
ret
cmp
fdivrp
icebp
repnz
in
fldl
clc
lea
cmp
jbe
mov
mov
jmp
rcl
into
test
mov
cwtl
repnz
jbe
jg
fiaddl
jle
test
lock
ret
int
shl
aam
in
fucom
fstpt
aad
adc
loop
fucomi
mov
enter
repz
fucomip
icebp
rcr
test
jmp
mov
xchg
loopne
fst
loop
aad
aam
in
lock
imul
loope
aam
aas
fadds
mov
out
test
lret
in
les
fdivr
cmp
aaa
cmp
cmc
aam
aas
out
push
repnz
mul
fiadds
iret
addl
xlat
into
ss
rolb
sbb
stc
mov
faddp
repnz
lret
out
loopne
out
repnz
aam
std
mov
fucomi
std
cli
fadd
std
lock
xlat
sub
ss
rcr
cmp
ds
aad
test
xchg
out
test
xchg
out
aad
leave
cli
ss
fdivr
in
fstp
idivl
into
lock
fninit
aad
lock
adcb
clc
call
out
aas
rcl
into
repnz
loopne
enter
ret
cli
out
lret
loop
in
shl
xor
out
ss
jecxz
fiadds
std
sar
loopne
enter
rolb
cmp
lret
lret
xor
cld
idivl
cmp
iret
fld
cmp
sti
or
leave
xchg
loope
ror
stc
into
not
ljmp
cmp
stc
aas
mov
rorb
nop
lea
repz
xor
loopne
hlt
adc
cld
repnz
loop
ret
jmp
xchg
xchg
addl
lret
fsubr
fdivp
jmp
cmp
cmc
in
fincstp
stc
loope
enter
hlt
repnz
in
les
fcmove
neg
loopne
shr
aad
rcr
sti
ljmp
in
int
idivl
cmc
xor
cmp
fxch
ror
int3
not
ret
aad
xlat
jmp
lret
rclb
out
test
out
xor
int3
aas
cmp
lock
icebp
aam
roll
lret
cld
test
xor
xor
hlt
ljmp
cld
cmc
mov
xlat
les
in
xchg
xlat
lock
aad
addl
rolb
rorl
scas
xlat
mov
xor
jmp
rcl
leave
int
aad
or
out
jecxz
ret
lcall
leave
xchg
call
std
ljmp
xlat
aam
enter
xlat
cmp
jecxz
ret
mov
xchg
jmp
out
lock
ret
in
xlat
iret
shl
cmp
cmc
leave
jmp
mov
jmp
fucomip
lret
imul
fsincos
fstp
out
cmp
cmp
loope
in
mov
xchg
xchg
lret
out
lock
ljmp
aas
test
call
std
jecxz
loope
repz
in
in
jmp
xor
cmp
lret
cmp
loope
rol
fsubr
jmp
int
hlt
in
ret
out
stc
lds
xor
clc
stc
in
ret
loop
clc
hlt
fdivr
mov
and
rcl
div
not
jmp
lock
std
cmp
shl
cmc
aad
loop
in
into
iret
cli
std
int3
iret
ror
rcr
ss
fcmove
lret
ds
cld
rcl
mov
int
jmp
aad
jecxz
aad
shl
idiv
cmpb
into
aaa
fdecstp
xor
jmp
mov
repnz
lret
aad
xor
xor
aaa
cmp
cmc
shr
in
vcmppd
test
out
fucomp
into
loopne
out
aam
xlat
shl
cld
int3
lret
xchg
roll
xchg
fmul
loopne
lret
call
enter
fmul
sar
std
not
shr
repnz
in
std
test
into
jecxz
in
cmc
clc
lock
std
xorb
fcmovnu
clc
in
les
mov
jmp
sar
repnz
in
ret
xchg
test
lds
fcmovu
test
adc
das
out
out
enter
cmp
into
sar
rolb
testl
div
xor
enter
mul
loope
rolb
addl
xchg
loop
leave
icebp
lret
ljmp
jecxz
in
rol
out
fcmovne
ljmp
xor
jmp
out
xor
fdiv
cmc
in
loope
cli
call
in
in
in
loop
test
divb
idivb
repz
fadds
xlat
mov
lea
mov
mov
jmp
rcl
iret
aad
cmp
loop
push
xor
add
rcr
clc
shl
mov
clc
loope
out
roll
lret
rcl
cmpb
loope
cmp
cmp
addb
xchg
cld
not
ret
stc
testl
mov
cmp
fisttpll
in
jmp
lret
lock
cmp
call
ret
hlt
cld
out
out
or
iret
out
in
iret
xor
std
icebp
ljmp
rol
repz
xlat
enter
mov
xchg
das
hlt
lret
lret
rcl
lret
loopne
fcmovnbe
mul
fcmovnb
loopne
aam
xchg
fisttps
aam
lock
in
shl
in
in
xlat
lret
int3
out
testl
out
xchg
rorl
icebp
xor
div
ljmp
aas
out
call
xchg
in
call
xor
ss
aam
jmp
fidivrl
repnz
fcmovb
vpsubw
int3
sbb
aas
out
rcr
shr
ss
lock
shr
fisttps
in
lret
cli
fisttps
sub
cmp
cmp
aad
shl
aam
shl
aad
cld
mul
stc
lock
dec
nop
xor
xor
jmp
into
hlt
into
aad
int
in
sti
call
loope
ljmp
nop
test
iret
in
icebp
xor
jmp
xor
repnz
aad
jmp
sti
iret
in
repnz
int3
in
xchg
lret
in
rol
cld
hlt
std
iret
int
lret
adc
lock
out
out
int3
leave
mov
xchg
into
loope
shl
jmp
jmp
icebp
int
loopne
mov
ret
loop
std
int3
movl
jecxz
repz
repz
ret
test
in
lock
jmp
xchg
not
in
shl
stc
cmp
cli
aam
aad
test
jecxz
imul
xchg
lret
out
mov
xchg
shr
ljmp
clc
push
in
jecxz
icebp
ffreep
cmp
out
addb
mov
xchg
xor
std
ror
out
fptan
sbb
sbb
loop
ret
mov
jmp
icebp
into
mov
xlat
shll
out
ss
fucomi
repnz
xor
jmp
iret
ret
rcr
fxch
in
incl
dec
dec
or
jle
cmp
clc
repnz
in
std
aad
xchg
leave
rorl
jmp
neg
call
int3
out
xor
fdiv
mov
leave
std
jecxz
test
xor
f2xm1
xor
ror
cli
enter
loop,pt
mov
jmp
call
out
rcl
shll
cmc
cmp
jmp
out
cld
out
fiadds
mov
orl
in
hlt
icebp
cli
test
ds
shl
leave
fildl
loop
int
shl
hlt
sub
xor
cmp
icebp
fcmovnbe
into
cli
sti
cmc
vpmaddwd
test
cmc
out
cmp
frndint
int3
lock
aas
aam
shl
out
cld
sti
in
xchg
out
lret
in
mov
call
repz
ds
shl
cmp
repz
filds
fcmovu
int3
call
xor
repnz
fdiv
fidivrs
neg
fldl
call
loope
out
out
mov
call
int
std
ds
test
in
fsin
mov
sti
xchg
mov
lret
ljmp
adc
testl
jmp
idiv
xor
call
test
aam
sbb
stc
jecxz
loopne
shr
aad
int
not
lock
repz
cmp
loopne
rorl
mov
nop
xchg
xchg
icebp
xor
out
vpmuludq
int3
out
shr
cmpl
iret
aas
fdiv
xor
in
xchg
jecxz
das
sar
cmp
leave
neg
idiv
rcl
clc
iret
ret
orb
jmp
mov
aaa
repz
ss
aad
sbb
neg
lock
ficoms
lret
loope
ljmp
shl
in
fstpt
fsubr
test
fmul
int
in
xchg
lret
shr
icebp
cli
cmp
repnz
neg
cmp
test
std
loop
xlat
jecxz
sti
loope
fld
out
mov
sti
out
fdivrl
repz
stc
std
in
cld
fmul
loop
decb
out
jmp
into
cmp
mov
jmp
aam
fstp
fcmovnbe
push
cltd
sahf
mov
out
jg
fiaddl
jle
lret
sar
cli
ret
ret
out
leave
out
out
lret
mov
xor
iret
cli
sti
in
cmp
shl
loopne
in
lds
ljmp
out
sarb
fdivp
sbb
in
addl
rcl
lret
out
fcmovnu
repnz
int3
idiv
in
loopne
aam
fcmovb
lret
test
mov
in
xchg
loop
int3
xlat
out
enter
aas
aam
cli
jecxz
cmc
mov
mov
out
cli
out
hlt
xchg
xchg
aas
enter
xor
hlt
into
xor
in
fdiv
enter
loopne
jecxz,pn
not
in
iret
fucomi
in
shr
rorb
jmp
cli
out
sti
repnz
into
jmp
in
leave
in
lock
aaa
rolb
sar
cld
mov
lock
shl
clc
cmp
iret
lret
call
in
sbb
int
add
adc
cld
iret
mov
cmc
fcomip
aam
sti
sti
cmc
call
int3
fistpll
out
cli
xor
enter
repz
addl
hlt
ss
ljmp
cmp
vpmulhw
iret
test
cmc
jmp
xor
icebp
cmp
mov
jmp
int
xchg
hlt
xlat
shl
out
cmp
out
jmp
ret
fldl
mov
xchg
and
in
xchg
int
iret
out
repz
out
lock
jmp
clc
out
fcmovnu
cmp
out
fiadds
lea
sti
icebp
cli
out
cmp
fdivrl
icebp
fadd
ror
mov
xchg
rcll
leave
out
iret
repz
ror
rcr
fdivrl
loop
enter
flds
mov
into
loop
sarb
leave
sti
and
fdivrp
loop
ret
clc
loope
in
cld
enter
test
shl
xor
cmp
in
out
clc
shl
cli
in
iret
stc
rcl
int3
fsubr
std
lret
call
aas
hlt
fdivp
clc
fsubr
loope
fdivr
out
xchg
xchg
lock
jmp
cli
jmp
leave
rcr
fcomp
cmc
pop
fildl
movsl
sub
jg
fiaddl
jle
int
fdivrp
aad
lret
in
shl
aam
mov
hlt
leave
mov
shl
jmp
fnstenv
rcr
out
xor
sti
sti
clc
ror
rol
incl
addb
mov
repnz
rcr
leave
clc
int3
in
leave
ds
test
aam
in
out
int3
in
mov
out
cmp
ss
loope
shl
cmp
test
cmc
xchg
clc
mov
xchg
lock
xor
in
in
divl
loope
and
fcom
fucom
xchg
nop
incl
les
int
aam
shl
les
fcomp
mov
lret
xchg
xchg
call
iret
ljmp
rcr
ror
test
sar
imul
mov
sti
leave
mov
xchg
repz
cmp
jmp
sti
fdivrs
ds
ret
in
aam
mov
orl
xchg
add
in
aaa
shlb
aad
std
iret
enter
in
out
in
test
repnz
cli
hlt
into
out
fcmove
fld
ret
rcr
loope
stc
in
mov
fdivr
fcmovnu
loop
in
out
into
xlat
rcl
std
repz
vcmppd
fisttps
repz
lret
cmpb
ret
enter
xor
cld
aam
cmp
hlt
xlat
hlt
fucomp
fmul
int3
cli
out
std
out
in
in
xor
int3
fsubp
jmp
xchg
filds
in
loop
lock
out
rol
in
out
into
ljmp
test
aam
movb
loopne
repnz
repz
div
rcr
shll
rol
aam
cli
jecxz
cli
adcl
ffreep
xor
call
int3
sar
in
into
sbb
std
mov
cld
xlat
fildl
mov
fcom
stc
xor
cmc
loopne
fadd
shl
xchg
fildl
out
xchg
out
rcl
loop
sti
cmp
std
loope
hlt
clc
mov
loop
mov
rcl
aam
in
cmp
jmp
hlt
icebp
aad
jecxz
rolb
lret
adcl
jge
jmp
rcl
iret
aam
aad
sarl
cmp
dec
push
cmpsb
jg
fiaddl
jle
out
bnd
cmp
test
loope
ret
loope
out
out
repz
rcl
repz
xor
shl
fcmovbe
fadd
xlat
leave
out
decl
faddl
aad
lret
cmp
aad
std
inc
repz
aas
loope
mov
mov
lret
xor
into
out
std
iret
cmp
int3
fidivrl
test
test
test
addl
les
xor
loop
fcmovne
int
repnz
int
jecxz
test
ljmp
rol
repz
cli
cmp
fnstsw
ss
int
or
loopne
repz
sti
iret
loopne
or
xor
xor
out
ljmp
adc
aam
jecxz
ljmp
mov
in
fcmovne
fcmovbe
out
in
lret
in
aad
aas
cmp
sub
loopne
repnz
xorb
repz
hlt
cmc
sarb
repz
aas
shl
stc
aas
xchg
neg
test
jmp
loopne
leave
addl
shl
das
fcmovbe
call
fldl
roll
xchg
enter
in
sti
faddp
lret
shl
cmp
shr
fld
jmp
lock
iret
in
rol
cmp
xor
loopne
adc
fidivrs
call
shl
xchg
mov
xor
stc
aam
cmp
cmp
sarb
enter
into
jmp
ret
jmp
sarl
aad
out
cmp
aad
sti
ljmp
mov
call
fcomp
aaa
lock
ds
cmp
call
lret
cld
roll
xlat
int3
xor
fdivrl
not
stc
loop
aas
int
xor
sti
call
in
iret
loope
fcmove
fdiv
in
cmp
in
rol
loope
fld
decl
lret
jmp
in
repz
in
std
aad
aaa
aad
iret
shl
filds
xchg
fucomp
test
fisttps
repnz
enter
cmp
in
cmp
loope
cli
std
fiaddl
fsubrp
int3
mov
mov
xor
add
jmp
rcl
aad
aad
fstp
aam
xor
sub
and
jle
add
jmp
out
rcr
cmp
out
xchg
in
sub
mov
jecxz
in
int3
in
xchg
fisttps
ss
std
icebp
cmc
adc
clc
sar
leave
lds
xchg
hlt
loop
jmp
jmp
sti
out
xlat
idivl
lock
idiv
loope
fcmove
fstp
jmp
test
sub
fmul
loope
fld
and
out
xor
imul
jmp
xchg
ror
das
lret
stc
stc
fcomp
ror
ret
les
loopne
in
int3
mov
sbb
cmp
ss
xor
cli
sar
loope
loop
leave
test
loop
incb
leave
int
repnz
aaa
aad
fcomi
stc
shl
ret
ret
orb
ror
call
repnz
int3
repz
fnsave
jmp
jecxz
shl
loope
mov
or
fmull
xlat
in
lret
cmp
xlat
in
sti
clc
ljmp
decb
int
stc
cmp
in
aaa
neg
in
ror
cmpl
cli
fcmovb
mov
out
into
fucomp
xchg
out
ss
fcmovbe
out
aaa
rcr
fidivl
std
repz
repz
in
fucomip
in
lock
mov
in
xchg
jmp
repz
lret
stc
sti
int
in
rcr
loope
jmp
xchg
in
shl
not
into
ljmp
sarb
sar
test
roll
out
lret
mov
mov
out
not
repnz
aaa
jmp
lock
out
loop
aam
orl
aaa
ret
imull
sti
cld
ds
fsubr
jecxz
into
stc
xor
call
sti
sti
in
xor
fstp
out
loopne
out
sar
fcomp
cmp
ljmp
adc
out
flds
cmc
iret
cmp
int
cmc
in
sarl
ror
test
shl
adc
mov
leave
loop
xchg
shl
cli
stc
cmp
cmp
hlt
ret
sti
aam
ds
fisttps
iret
in
fucomip
adc
icebp
mul
cmp
aad
ljmp
out
out
icebp
clc
out
cli
jmp
scas
shr
je
add
rol
lret
ror
int
aam
cltd
fldt
into
push
stos
jg
fiaddl
jle
fsubrp
int3
rcr
xor
ret
out
iret
lret
int
aad
ror
aad
mov
jmp
xchg
loop
xor
fistpll
icebp
fiadds
xchg
sub
mov
call
in
out
xor
fmul
ljmp
in
sar
vpaddq
fcmove
std
filds
lret
idiv
fnstsw
lock
mov
enter
test
in
out
jmp
leave
call
cmp
in
fucom
ftst
in
loope
into
ret
mov
out
mov
shl
out
divb
aad
fidivl
lock
filds
lret
in
int
mov
lock
and
hlt
icebp
clc
xlat
jmp
fdiv
iret
cmp
mov
out
cmc
jecxz
fmull
in
mov
out
xor
ss
dec
xchg
call
xlat
fdivp
iret
shl
out
iret
aam
fadd
hlt
sti
iret
iret
aam
aad
vpaddusb
fstpt
in
fimuls
iret
repz
xor
in
aas
jmp
fst
repnz
out
loop
testb
loopne
enter
sub
fnclex
sbb
shl
test
hlt
jecxz
mov
leave
sub
into
out
xchg
xlat
shrb
fcmovbe
out
out
rcr
into
cmp
loope
call
jmp
sti
shl
xchg
int
clc
repz
icebp
iret
into
rcl
in
clc
ret
adc
fildl
call
shlb
xor
std
fsqrt
fidivrl
std
shr
std
orb
rol
aad
stc
cmp
fdivrl
cmp
and
cmc
loope
mov
leave
xor
repz
into
out
in
ror
fsub
xchg
icebp
aam
xlat
mov
lret
xchg
cs
aam
neg
xor
cld
fildl
testb
nop
ljmp
test
rcl
std
ffree
in
aad
rorl
jmp
hlt
out
mov
stc
enter
xor
repz
ds
repnz
ret
lret
jbe
jmp
int
lret
lret
int
mov
inc
mov
lods
jg
fiaddl
jle
cld
out
out
sti
lret
loope
cmc
into
out
shr
int
repnz
out
test
rcr
mov
ljmp
out
cmc
shl
aam
out
fldpi
fstpt
fidivrs
shl
rolb
loope
loop
mov
leave
jecxz
aam
call
cmc
fdivrl
loope
fcmovnu
fdivrp
jmp
fld
iret
shl
cmp
idivb
ljmp
in
vpmullw
enter
lret
test
test
lock
in
bnd
out
ret
stc
xchg
xlat
xchg
test
int3
jecxz
out
aad
out
fnstcw
cmp
lret
rcl
ret
sbb
ror
int3
loop
in
mul
xor
std
hlt
icebp
enter
icebp
fnstsw
call
loopne
mov
fists
ss
ljmp
rcl
cmp
fildl
xchg
faddl
not
in
ror
enter
hlt
ds
rcr
test
fadd
into
loop
sub
loop,pn
idivl
cmp
neg
jecxz
roll
sub
orl
jecxz
lret
shl
adc
loope
shl
call
test
test
out
lret
ljmp
iret
fnstcw
sarb
test
and
sub
ljmp
ret
in
out
cmp
int3
shr
stc
shl
repnz
cli
cld
cli
mov
xchg
mov
iret
lret
out
xor
fsubr
into
fcmovne
out
lock
aam
repnz
jecxz
cld
sar
fmulp
xchg
sub
in
shl
cmp
fdiv
test
aas
cli
xchg
test
out
leave
call
xchg
dec
ss
xor
fcmovu
enter
shl
cld
repnz
lock
fdivr
ljmp
push
call
jmp
std
enter
aam
sti
shl
mov
add
iret
cmp
das
xor
lret
rcl
leave
xor
adc
idiv
aad
xchg
adc
faddl
aaa
xor
lret
fcom
jmp
lock
vcvttps2dq
je
add
ror
ror
aad
inc
push
mov
fiaddl
jle
ds
jmp
jmp
xchg
hlt
xchg
repz
ljmp
clc
cmp
ret
neg
xlat
loope
loop
fmuls
mov
lock
int3
jmp
leave
xor
std
sti
fidivrl
leave
in
fcmovne
cld
out
ljmp
cmc
cmp
repnz
enter
aad
aaa
out
xchg
test
cmc
fdiv
loop
jmp
cld
mul
xlat
jmp
or
stc
rol
sti
hlt
ret
orb
lds
fdivrl
fdivp
cmp
loopne
bnd
decb
hlt
out
hlt
cmp
xor
fdivrs
repnz
out
ret
addl
or
aam
out
lret
fld
jmp
ds
test
iret
cmc
mov
sti
mov
lock
ret
xor
xor
fnstsw
ds
loopne
neg
cld
xlat
sar
hlt
jmp
int3
jmp
lret
jmp
xlat
xor
ljmp
xor
test
orl
repnz
sub
icebp
repnz
in
sti
std
aas
jecxz
lret
jecxz
cli
faddp
xchg
loope
loopne
or
lret
stc
fcom
xlat
ror
fdivr
test
xchg
ret
in
cld
div
call
nop
xor
jmp
cmp
adc
in
sbb
fdivrs
xchg
clc
in
std
sti
leave
ljmp
leave
sti
cld
into
out
cld
rcl
ds
repnz
cmc
mov
xchg
xchg
jmp
ret
fcomi
cmp
ror
cli
cli
jmp
xlat
testl
clc
int3
fisttpl
out
call
lret
sar
aas
ret
shl
icebp
aam
xchg
jecxz
rcl
xchg
out
in
sarl
std
sar
out
xor
cld
sti
ss
add
out
jmp
iret
sub
out
xor
repz
leave
cmp
shr
icebp
rol
xchg
out
cmp
into
out
lret
hlt
adc
fdivs
stc
shl
fsubr
int
cmp
out
mov
stc
fsub
xchg
in
cmc
enter
xor
cmp
ret
push
mov
sub
addl
push
andl
push
addl
push
push
addl
push
call
mov
andl
test
movl
je
andl
lea
push
andl
push
xorl
call
addl
push
addl
call
mov
test
je
movl
mov
jmp
mov
movl
jmp
push
push
push
movl
call
movl
mov
mov
movl
cmp
movl
jne
pushl
push
adcl
push
push
orl
call
inc
movl
cmp
jb
movl
inc
movl
cmp
jb
sbbl
push
call
orl
movl
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
xor
xor
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
sub
sub
movl
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
lea
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
add
lea
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
inc
mov
xor
xor
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
pushl
push
call
cmpl
jb
add
mov
movl
mov
cmp
movl
mov
mov
movl
je
mov
xorl
xor
subl
add
imul
movl
mov
movl
jmp
mov
adc
xor
and
add
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
push
call
cmpl
jb
mov
add
xor
add
add
movzbl
and
mov
orl
mov
xor
mov
adcl
xor
xorl
add
cmp
jne
subl
push
orl
pushl
andl
pushl
call
xorl
mov
notl
mov
mov
negl
mov
mov
or
mov
mov
sub
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
mov
orl
xor
add
jmp
sbb
mov
xor
sbb
lea
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movzwl
xor
lea
mov
mov
neg
mov
add
movl
adc
mov
sbb
movl
or
mov
dec
mov
xor
orl
add
movl
cmp
movl
je
xor
mov
xor
add
sub
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sub
mov
sub
add
movl
mov
cmp
ja
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
je
mov
jmp
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
fmul
ret
ror
fst
repz
imul
jg
pop
add
iret
into
rcl
flds
mov
jmp
in
loop
aad
repnz
loopne
xor
adc
xchg
fxch
rol
sti
loop
iret
lock
in
mov
lret
das
aam
bnd
cmp
fdiv
ret
in
mov
call
lret
in
iret
xchg
lret
ss
div
icebp
rol
flds
in
test
fcmovu
loopne
xchg
clc
in
out
cld
test
out
stc
imul
cli
ror
aas
fistpll
test
test
nop
out
iret
jecxz
shl
aaa
out
testl
cmc
lret
out
ror
shl
xchg
in
xor
das
in
jmp
int3
stc
sti
in
cmp
test
loop
in
jmp
jecxz
xchg
lea
cli
out
out
bnd
out
fcmovnbe
repnz
loop
xchg
xchg
xrelease
in
out
cmc
ss
loopne
roll
in
hlt
loope
test
call
mul
xor
lret
lds
icebp
in
loop
aam
aas
les
fsubp
les
iret
rolb
repz
clc
xlat
aas
int
out
clc
call
xchg
int3
cmp
test
mov
mul
aad
in
fcmovnbe
int3
jmp
ret
fstpt
shl
xchg
lock
mov
int3
shr
loop
xor
sti
div
lock
into
fidivrl
clc
fadds
jmp
loop
in
in
ret
leave
rcr
fiaddl
addl
xchg
int
xchg
out
hlt
in
mov
xor
ret
sub
fld
xor
int
ds
cld
jecxz
cmc
xlat
out
std
mov
jmp
rol
enter
cli
out
repz
repz
loop
in
movl
xor
icebp
cmp
jmp
cmp
fstp
roll
jecxz
in
in
test
out
xor
xor
icebp
enter
cld
fcmovne
xlat
lock
mov
std
out
leave
lret
iret
in
in
loop
in
nop
int
lret
int
enter
fsubrp
iret
loop
sti
loop
cmp
jmp
ljmp
jmp
out
fmul
rcl
fcom
clc
cld
in
test
test
cli
mov
out
fmuls
xchg
shll
lret
lock
fsub
cmp
cmp
aas
aad
ret
in
aad
cli
loop
xchg
out
in
loop
jecxz
in
sti
fucomi
hlt
ljmp
cmp
testl
xchg
xchg
in
jecxz
xor
in
leave
ljmp
into
mov
mov
fmul
nop
xor
mov
out
lret
cld
lret
push
push
mov
movl
mov
push
jmp
rcl
leave
leave
fst
fsubrl
std
sub
int
xchg
sbb
jg
pop
add
enter
frstpm(287
icebp
roll
leave
int
jecxz
lock
jecxz
xor
into
in
shr
fsubr
cmpl
cld
in
fndisi(8087
div
enter
out
fdivrp
mov
rcr
jmp
int
ret
std
mov
in
sbb
fdivp
in
xor
idivb
repz
loope
stc
add
cmp
inc
mov
sub
xchg
xchg
neg
clc
int
jmp
std
jmp
rcr
std
xor
std
repz
loope
mov
clc
std
iret
aaa
cmpb
hlt
incl
clc
fdivrp
fsubr
sti
mov
shr
divb
lret
cld
cli
jmp
stc
into
repnz
lds
out
les
rcl
repz
cmc
jmp
ror
in
cld
in
faddp
cli
std
fcompp
in
jmp
into
jmp
jecxz
in
cmp
cmpl
fcomip
lock
in
mov
jmp
cld
int
lret
aam
ret
in
cmp
test
mov
mov
addl
out
jmp
jmp
std
cmp
std
rol
repz
mov
ljmp
loopne
aam
iret
xor
ss
aam
cld
test
aad
rcr
in
cld
out
lret
lea
int3
leave
ss
cld
repnz
repz
ljmp
clc
cli
loop
enter
sti
rorl
xor
xor
cmp
fmul
aas
clc
mov
out
fucomip
cmp
and
rol
aam
out
in
rcr
shl
stc
and
mov
loop
mov
call
in
ror
xor
hlt
into
std
in
mov
test
enter
lock
mov
flds
xchg
fsubp
int
loopne
leave
xchg
jecxz
xchg
in
fdivs
cmp
ret
sti
rcr
cmp
fiaddl
fucomp
int3
mov
int
aad
ret
xor
xor
lret
aas
cmp
hlt
aam
clc
aad
repnz
in
std
mov
lock
rorl
cmc
out
fstp
out
xlat
loope
repnz
std
lret
test
out
lret
mov
lock
out
shr
in
stc
aas
jmp
fprem1
aam
testb
in
fstl
in
xor
xor
int
roll
repnz
sti
jmp
rcl
in
idivb
jmp
sarl
xor
fcom
idiv
in
stc
sub
leave
xchg
in
fmulp
aaa
shl
in
out
mov
jmp
int3
iret
xlat
ffree
fst
loope
sub
insb
xlat
ja
movsb
mov
jle
add
shr
fmulp
aaa
sar
std
test
xlat
std
repz
stc
loop
decb
in
cmp
sti
hlt
add
test
ds
leave
in
lret
faddl
loope
xor
in
lret
clc
cmpl
enter
loop
ljmp
lock
dec
adc
fadds
stc
jmp
jmp
sti
mov
in
out
repnz
xor
fxch
fisttpll
enter
into
std
mov
ljmp
aaa
lret
call
jecxz
neg
ljmp
lret
aam
xor
jmp
enter
lret
cmp
out
cli
in
int
mov
lret
int
out
in
stc
rcr
aas
fcmovu
ds
loop
xlat
ret
not
fisttpl
std
mov
ret
shl
int
lret
cmp
ds
cld
ret
les
lret
enter
aaa
ret
divb
iret
cmp
iret
in
fidivrs
sar
clc
xlat
mov
stc
xchg
loopne
iret
xlat
sub
cmc
cmp
lret
aad
jmp
ds
cmp
std
or
lea
div
in
lret
not
jecxz
fildl
hlt
call
mov
sti
mov
xchg
fisubrs
xor
out
in
cmp
sti
cmp
fistpll
sti
aaa
lock
xchg
leave
xchg
clc
roll
in
ret
leave
cmc
repz
mul
ds
out
leave
leave
out
ljmp
cmc
hlt
lret
out
in
xor
rcl
fadds
fildl
loop
lea
sti
cmp
cli
sti
int
xlat
in
xlat
loop
cmc
out
int3
loopne
test
jmp
ret
ss
hlt
cmp
ss
repz
stc
rcl
in
std
loope
cli
stc
ffree
rcr
int3
repnz
cmp
cli
cmp
bnd
out
cli
fucomip
aam
les
mov
shr
mov
int3
loope
shll
in
iret
fstpt
fcmovu
mov
decl
in
in
icebp
icebp
jmp
out
xor
aas
call
rolb
out
repnz
lret
out
cmp
ljmp
adc
xchg
int
in
iret
ss
in
ss
xor
lret
in
rcl
fmulp
stc
out
loope
orb
ret
enter
shr
cmp
jecxz,pt
shl
std
test
enter
int3
jecxz
mov
shl
dec
or
jmp
ret
ror
aad
and
stos
xor
pop
add
shrb
cmp
std
loopne
rcl
fcom
std
cld
idiv
fld
in
popl
das
ret
cli
in
cmc
cmp
sti
sbb
test
cmc
fst
mov
mul
out
sti
lock
iret
in
hlt
leave
icebp
cmc
fcmove
cli
test
ftst
aad
aad
or
out
out
iret
jmp
aas
fdivrp
out
stc
fcmovne
rol
clc
clc
call
orl
xor
sti
cmp
out
lock
std
cli
call
xlat
sti
xchg
enter
in
loopne
xor
int
out
xbegin
shr
ds
loopne
in
jecxz
jmp
fdiv
in
lret
loope
out
imul
shl
int
leave
int3
sar
aam
shl
adc
out
sti
popl
leave
fld1
sti
lret
filds
aam
out
testl
into
into
icebp
xor
out
out
std
fiaddl
leave
clc
sti
in
in
fdiv
int3
cld
nop
aad
shr
rcl
clc
lret
icebp
rcl
shr
sbb
lock
call
int3
popl
loope
rol
ret
aam
ss
cmp
loope
repz
rcr
fdivrp
in
cld
sti
mov
call
cmc
leave
into
push
sbb
call
jmp
repz
mov
jecxz
frstpm(287
aad
repnz
rcr
icebp
repz
ret
leave
mov
lret
ret
in
fildl
in
sub
ror
cmp
int
dec
rcl
lret
std
jecxz
shl
rol
mov
sub
and
sub
lock
fabs
repz
test
ret
cmp
call
loopne
decl
lret
jmp
sti
enter
out
in
into
cli
hlt
shr
cli
addl
sub
in
std
out
out
hlt
ds
icebp
out
lock
div
mov
mov
sti
stc
test
lret
fyl2xp1
cmp
fdivrp
ljmp
lock
mov
out
repz
mov
sub
out
cmp
in
sbb
cmp
mul
mov
mov
in
mov
xchg
les
lock
lret
cmp
fsub
cmp
jecxz
decb
addb
xchg
iret
adc
lret
cli
xor
cmp
lds
repz
mov
shlb
lret
xlat
jmp
loop
hlt
ret
add
orb
mov
das
out
divb
aaa
cmp
out
cmp
fucom
in
fsub
sti
mov
mov
movl
mov
jmp
leave
int3
rcl
aad
int
mov
xchg
inc
sub
sbb
mov
jle
ret
in
loop
xor
lret
out
xlat
ret
test
cmp
mov
lret
out
xchg
lret
sub
ljmp
rol
cmp
not
loop
in
out
xchg
filds
ret
xor
in
jmp
loopne
loope
std
out
cmc
cmc
std
in
enter
fdivr
aad
rcl
in
xor
out
std
icebp
std
shl
fcmovnb
loop
ds
fsubp
stc
leave
call
xchg
shr
out
ret
aad
out
call
cmp
faddp
ljmp
call
xor
lock
lock
int
iret
ds
sbb
loopne
jmp
fiadds
mov
repz
aad
iret
repz
div
out
add
xchg
xchg
in
test
loope
aam
mov
jmp
loop
ljmp
cmpb
cmp
rolb
lret
ljmp
out
repz
xor
cmc
cmp
hlt
sti
cli
sub
ljmp
shl
shl
hlt
out
call
cmp
sar
jecxz
aad
in
and
cld
test
ljmp
iret
cld
int
hlt
sti
fcomi
xchg
lock
aad
fucomi
neg
fistl
xor
fxch
fdiv
int
cld
jecxz
repz
in
loopne
fdivrp
lea
in
in
icebp
cli
out
in
in
xor
ret
jecxz
out
les
mov
fsubr
repnz
test
divb
leave
cli
repz
out
into
cmp
leave
mov
mov
xchg
ficoms
enter
out
idivb
cmc
add
ret
icebp
incl
fmul
call
test
in
cmp
cmp
sti
in
std
out
test
cmc
loopne
cmp
in
testl
test
cmp
cmp
fidivrs
mov
cli
call
lock
call
lret
xor
std
mov
flds
fcomip
test
xchg
in
sub
in
repz
lock
repnz
cmp
ljmp
ret
not
aaa
cmp
sarl
std
addl
lret
int3
out
mov
lret
cmp
std
cmp
repnz
loopne
ds
fsub
ret
idiv
jmp
mov
div
ljmp
clc
addb
adc
cld
les
iret
out
loop
hlt
aad
cmp
lret
stc
iret
jecxz
loope
add
xchg
cmp
movl
jmp
aas
aam
aas
aad
iret
aam
adc
mov
fld
adc
inc
jg
pop
add
decl
into
into
shr
iret
repnz
clc
loopne
aas
and
sti
call
fucomp
out
jecxz
call
cmp
fidivl
stc
sarl
ret
cli
loope
flds
mov
cli
fxch
jmp
out
fcmove
ljmp
repnz
test
out
ret
rorb
jmp
lock
sar
icebp
aad
cmp
ret
cmp
in
fdivr
in
mov
aad
call
cs
shr
loop
fildl
filds
xchg
hlt
out
clc
test
fcmovnbe
repz
loopne
stc
in
fldl
loope
repnz
xchg
hlt
ret
idiv
out
sarl
lock
repz
idiv
sbb
in
jmp
in
cld
in
jecxz
repz
sti
sarb
xlat
out
ror
cmp
fildl
rcr
xchg
fisttps
cmc
xor
stc
in
sti
cmp
loop
shl
addb
hlt
xchg
std
mov
fisttps
lock
in
xor
rcl
cmp
in
mov
loope
loope
cmc
cmp
jecxz
into
fcomi
int
mul
ret
repnz
hlt
decl
out
xchg
jecxz
out
xor
xor
sar
int3
ljmp
in
jecxz
fadd
sti
sti
mov
mov
loopne
xor
enter
stc
fxch
loope
cmp
or
stc
fmulp
enter
ficoms
rcl
rcr
cmp
in
iret
ds
fcmovne
in
in
fsubp
in
mov
in
ret
int3
out
cmp
in
call
in
repz
loope
jecxz
lea
icebp
xor
shr
leave
fsub
test
cmp
fsub
loopne
leave
xlat
cld
test
ror
das
repz
xlat
cmp
repz
out
in
sti
std
jmp
xlat
test
rcl
repz
cmp
cld
sarl
fsubp
aam
fdecstp
cmp
rcr
cld
xchg
mov
out
fnstenv
in
jmp
xor
test
std
addb
nop
loope
icebp
into
loope
xchg
rol
cmp
stc
cmp
hlt
sti
stc
sub
stc
icebp
aad
ror
fiaddl
iret
lret
xchg
int
icebp
iret
cmp
fdiv
out
rcr
lret
fiadds
xchg
loope
out
xor
repz
cmp
xlat
shll
ds
lds
aam
in
out
mov
xchg
add
repnz
aam
cmp
cmp
cmp
out
cld
orb
mov
inc
cld
mov
incl
xor
add
movl
cmp
movl
je
jmp
lret
rcr
fstp
fisttpll
inc
mov
sbb
jle
add
mov
fsubr
adc
fmul
ret
xlat
repz
fnstenv
lret
lret
loopne
rol
ljmp
jmp
cmc
pushl
ror
shlb
enter
cld
fidivrs
cmc
sti
icebp
jmp
nop
incl
nop
xor
lock
shl
icebp
sti
cmp
stc
aam
test
clc
fcmove
test
call
mov
xor
fcmovb
aaa
jmp
sti
fdivrp
mov
loop
loope
jecxz
rol
ret
ljmp
lock
hlt
cld
in
repz
aas
jecxz
or
in
nop
aam
cmp
icebp
cmp
repnz
fadds
ljmp
iret
ror
xor
enter
fstp
fucom
cmp
repnz
iret
loope
rol
fsubrp
in
in
xchg
icebp
int
int
lret
shlb
in
fdivrp
sarl
sbb
loop
stc
mov
test
int3
ret
int
std
xchg
in
xor
int
jmp
cmp
jmp
jmp
jecxz
mov
lock
loopne
fsub
rol
aad
fprem
aad
shl
in
cmp
faddp
and
fldz
cld
enter
xchg
out
shl
xor
jmp
cmc
icebp
roll
lea
in
into
xchg
aaa
int3
fcmove
not
int3
ljmp
test
xor
jecxz
mov
loop
in
xchg
imul
shl
out
fnstsw
aaa
leave
ljmp
flds
jmp
repnz
sti
in
iret
mov
shll
cmp
out
in
repz
out
ds
in
lret
addl
mov
leave
in
lret
jmp
not
fldlg2
in
loope
in
shl
idiv
mov
test
cmp
xchg
jecxz
icebp
jecxz
out
int
int3
shr
lret
cmp
cmp
xchg
fucomi
addl
loope
lret
xor
in
into
ss
xlat
cmp
ret
les
loop
lret
in
out
lret
xchg
nop
cmc
xchg
cmp
lock
aad
xor
cld
call
aad
stc
mov
adc
mov
idiv
lock
fidivrl
fdivp
out
stc
xchg
enter
faddl
jmp
iret
rol
das
out
icebp
fadds
call
stc
ljmp
xchg
xchg
in
cmp
fmul
xor
int3
shl
int
adc
mov
fisttps
cmc
or
aaa
lret
cmp
fdivp
cmp
rcr
loopne
mov
call
mov
std
ror
fcomi
out
filds
hlt
sar
ret
rolb
cld
sub
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
add
add
orl
push
xor
jmp
rcl
aad
aad
fstp
jns
fwait
mov
jne
jg
pop
add
loop
cli
mov
aaa
out
out
clc
leave
cmp
stc
cmp
vpaddd
std
fsubrp
leave
mov
shr
das
xor
sti
repz
aas
icebp
ret
xchg
test
int3
cmp
mov
mov
xor
not
cmp
loope
cmc
mov
out
xchg
in
call
shl
in
rcl
cmc
cld
jecxz
and
loopne
ret
rcl
in
fmull
mov
loope
cmp
in
int
iret
fdivrp
jmp
cli
rcr
idiv
cld
aad
mov
lea
jmp
out
loope
call
repz
shr
adc
fcmovnu
in
ds
fdivrp
fdivr
adcl
sub
aas
rcr
jmp
icebp
sti
loopne
std
out
imul
out
repz
aaa
shl
out
cmp
fsubrp
loope
lock
movl
loope
mov
loopne
fnstenv
cmp
std
out
sar
rcr
stc
ror
test
loope,pt
xchg
add
cli
in
fisttps
lret
fcmovnu
icebp
imul
sar
repnz
mul
leave
xchg
mov
jecxz
aam
fcomp
fdivs
aaa
in
repz
fdivr
aas
rolb
hlt
add
mul
xchg
in
fsubp
lret
in
hlt
ss
ds
cmp
xor
out
in
mov
jecxz
lret
fists
fld
sti
cmp
into
lock
mov
jmp
shr
std
iret
xchg
clc
cmc
call
leave
int
repnz
cmp
loope
sar
jecxz
std
fsts
shll
in
in
lret
sbb
adc
jmp
mov
lret
icebp
test
enter
aam
xor
inc
fidivrs
loopne
or
test
enter
xor
leave
fucom
loopne
not
in
in
call
leave
call
pause
int
rcl
rcr
xor
cmp
into
hlt
stc
ds
test
call
leave
mov
loop
in
out
aam
lret
into
out
sar
loopne
int
fcomp
repz
faddp
std
out
fcomip
out
rorb
mul
aam
neg
aaa
rcr
loopne
aad
fcmovnbe
cmc
call
cli
imul
mov
ljmp
fcomp
into
cmp
cli
call
xor
jecxz
fld
lret
in
fmull
div
lret
fdiv
leave
fst
into
cld
icebp
roll
out
fcmove
fucom
call
fnstenv
fmul
leave
aaa
rcl
cmp
test
in
flds
pushl
mov
jmp
rcl
int3
lret
fst
fstl
test
pop
add
mov
fucomp
int3
jmp
repnz
test
faddp
call
out
shll
jmp
ljmp
iret
aam
testl
nop
int
loope
not
cmp
cmp
xlat
repz
loope
int
test
les
fdivrp
bnd
xchg
xchg
ljmp
xor
mul
out
sar
jmp
test
repz
div
ret
cmp
ljmp
aad
aam
in
ret
jecxz
sti
in
xchg
iret
call
sub
aaa
iret
iret
iret
fld
ljmp
call
out
test
nop
shl
int
out
into
xor
idiv
rcl
leave
xlat
int3
cmp
fucomip
les
leave
lret
xchg
icebp
ljmp
rol
fcmovu
std
imul
xor
fucomip
or
jmp
incb
in
out
xor
xor
shl
idivl
iret
in
fidivrs
in
and
loope
int
shr
xchg
fcom
fcmovnu
cmp
mul
test
cmpl
ljmp
in
xchg
rcr
lret
aaa
cmp
stc
cmp
cmp
shl
aam
shl
fildl
out
fcmovne
leave
in
in
jmp
xlat
cmp
in
call
xchg
out
and
clc
out
icebp
call
test
repz
loop
fiadds
std
lret
icebp
in
aad
not
cmp
std
iret
jmp
fiadds
jecxz
ret
loop
xchg
icebp
test
out
ds
xor
call
fmul
cmp
in
jmp
and
in
aaa
cmp
xor
ds
in
loopne
shr
orl
xchg
iret
in
int3
out
mul
aaa
cmp
cmc
clc
repnz
fcomp
out
loope
out
in
xchg
fisttpll
loope
fcmovnbe
aam
xorl
clc
test
jmp
in
loop
shr
aam
lock
rcl
shr
lock
lret
ret
roll
rcr
jmp
das
cmc
cli
aad
cmc
rcr
in
cmp
cmp
sar
fcmovbe
mov
jecxz
icebp
lret
in
lock
xor
aam
into
repnz
aaa
cmp
test
loopne
xchg
ffreep
leave
stc
std
xchg
in
in
les
imul
cmpb
loop
test
loopne
call
inc
repz
shlb
aam
out
enter
clc
test
in
shr
daa
add
jmp
aad
fnstsw
repz
int3
loopne
scas
dec
jg
pop
add
fmull
call
xchg
in
mov
out
icebp
fdivrp
out
aad
fsin
ret
xchg
shl
int3
int3
out
lret
rolb
out
xor
clc
aad
int
fcomp
cld
fadd
aas
cli
int
nop
iret
or
out
lret
repnz
fadd
fcomi
int3
xor
in
clc
sti
ds
mov
test
mov
and
leave
int
mov
enter
rcl
in
cmc
leave
in
cmc
out
int3
rcl
in
aad
int3
fcmovu
mov
in
lock
ret
shl
cmp
loop
repz
fld
xlat
jecxz
vpandn
mov
and
clc
shr
ss
movl
shl
xchg
xchg
out
xchg
in
iret
vpsubsb
repnz
leave
cmp
int
ret
loopne
in
out
fsubr
fldl
iret
xor
test
clc
lret
loope
into
loope
test
xlat
out
ret
in
jmp
in
xor
div
shl
fcmovne
std
inc
fiadds
decl
hlt
jmp
repnz
out
cmp
rol
fistpll
repz
stc
fsub
cmpb
movb
call
lret
lret
fbstp
shl
lret
fdivp
fcomi
addb
mov
int
faddl
shr
hlt
repnz
ljmp
sbb
clc
loopne
in
jecxz
int3
out
xorl
xor
leave
clc
enter
int3
or
rcr
in
in
in
icebp
xchg
mov
test
das
aas
aas
aas
ds
xchg
xlat
cmc
call
mov
sub
rcl
int3
out
cmp
ss
std
rol
aam
sbb
jecxz
hlt
enter
loope
lret
aad
loop
leave
ljmp
ds
ds
jecxz
clc
leave
sti
xchg
sub
int3
out
stc
cmp
jmp
icebp
dec
jmp
repz
aam
fdivr
loope
in
sti
jmp
adc
sub
in
icebp
out
lret
test
cli
mul
xchg
or
in
iret
xchg
cld
fndisi(8087
out
ret
cs
in
in
enter
stc
rcr
fcomi
in
loopne
out
ljmp
xchg
out
xor
std
cli
rcl
jmp
cmp
in
shl
cld
repz
xchg
ss
fsub
fcomi
ljmp
out
lds
roll
lret
in
cld
out
aaa
shr
fdivl
clc
rol
lret
cli
loop
in
in
xor
loopne
fldl
iret
repz
loop
rol
lret
fstpt
aas
aam
or
jmp
iret
aam
aas
aad
iret
aam
ljmp
insl
popa
xchg
mov
dec
jg
pop
add
iret
fninit
ret
in
lret
test
stc
lret
orl
out
ss
leave
xlat
jmp
cli
ret
test
mov
out
sar
fucom
iret
repnz
cmp
repz
iret
fnstcw
cli
call
mov
iret
mov
mov
div
std
icebp
fidivrs
in
in
cmc
test
loope
vpsubsw
xchg
xor
aaa
ror
neg
shr
enter
cmp
fnstsw
imul
leave
stc
stc
xor
loope
loopne
stc
enter
in
cmc
fdiv
jecxz
cmc
out
ret
rcr
out
movl
aam
div
call
fdivrs
into
jecxz
out
icebp
cmp
rol
flds
faddl
rol
loopne
shl
aam
enter
cld
test
std
aad
enter
mov
xchg
lock
lret
in
jmp
rcr
ffreep
in
loop
fsincos
loope
imul
clc
fisttpl
rcl
xor
in
out
cmp
cld
xor
ds
rcl
cmc
in
in
int3
loop
lret
out
shl
rcll
lret
out
cld
icebp
rcl
add
cmp
xlat
mov
xchg
mov
or
lret
shl
lock
hlt
xor
cld
aas
xlat
out
test
cld
mov
ljmp
hlt
xchg
xchg
ljmp
out
leave
lock
out
xlat
jmp
lock
fucomip
into
mov
int3
out
fcmovne
xlat
jmp
cli
neg
xchg
xchg
fcmovnb
orb
rol
out
fcomp
cli
sti
not
mul
jmp
ds
cmp
enter
fdivrp
sub
repz
out
icebp
fsubrs
out
cmp
loopne
int
cmp
test
mov
call
in
jmp
xchg
jmp
jmp
sub
aam
clc
jmp
fidivrl
std
jecxz
int
jecxz
out
call
cmp
hlt
repz
sti
ret
movl
decb
xor
shr
in
stc
fidivrl
test
repz
out
and
int
xor
in
out
cli
cmp
ljmp
fsubr
shl
lret
fucomi
loope
shr
loope
shl
into
xor
repnz
in
stc
leave
faddp
cli
rcr
cld
adc
sub
nop
in
hlt
mov
shl
fdivr
cmp
cmp
out
ss
test
sti
fadd
jecxz
jecxz
iret
loopne
mov
shr
int
lret
lret
xor
aam
xor
fdivr
ds
out
mov
fisttpl
fdivrp
xchg
xchg
leave
call
clc
ror
fmulp
mov
mov
mov
jmp
mov
jmp
fmul
aas
xlat
aad
fmul
ss
loope
add
mov
push
jg
pop
add
fsub
roll
mov
orl
das
in
fincstp
std
ds
shl
stc
xchg
ret
inc
xlat
iret
mov
mov
xchg
loopne
xor
jmp
shl
std
push
in
aam
loop
in
cli
and
mov
iret
call
enter
lock
in
lock
cld
testb
ret
out
loopne
test
shl
shlb
call
out
jmp
into
loop,pt
jmp
mov
filds
xor
xor
neg
rcl
out
fcmovbe
lock
inc
in
shl
fcmovnbe
loope
out
enter
ljmp
enter
testb
enter
ret
orl
aam
lret
iret
xor
ret
in
rcr
sti
lret
fdivrl
in
lret
jmp
xor
aam
idivb
ljmp
orl
in
jmp
in
fdiv
sub
xor
in
aas
leave
loop
cli
in
fadds
aas
cld
fsub
into
in
loope
test
xor
int
clc
repz
cmpl
hlt
jecxz
test
cmc
rolb
int3
loop
divl
xor
repnz
hlt
out
fadds
les
cmp
enter
icebp
out
cs
ror
int3
enter
push
ss
cmc
and
or
clc
sti
in
out
int3
cmc
in
icebp
cmc
shl
lret
stc
iret
xor
sti
clc
cmp
testb
in
int
cld
stc
sub
int3
xchg
xchg
lret
int
fdivrs
in
sti
out
rcr
sti
jecxz
loop
filds
mov
in
xchg
stc
xor
fdivr
cmp
repnz
fstp
shl
cld
xchg
dec
jmp
test
divb
out
call
iret
cmp
inc
loop
test
orl
xchg
iret
hlt
in
call
aad
cmp
cmp
les
loope
loope
mov
jmp
in
repnz
repnz
aad
sti
aad
rcr
aaa
into
cli
sar
std
aam
enter
fildl
loope
mov
fstpt
lret
div
loop
in
ret
aad
movl
xchg
iret
xor
sub
in
sar
cmp
sarl
loope
jmp
ljmp
lret
cld
out
fsin
hlt
xor
in
loop
cli
jmp
in
lea
xor
into
ljmp
cli
repnz
enter
add
icebp
xchg
ljmp
repz
out
mov
jmp
int3
ror
fst
mov
sti
xor
push
jg
pop
add
cmp
stc
fidivrs
cld
fiadds
faddp
cli
in
nop
in
mov
in
test
xor
in
cmp
xor
fcomp
aas
cmp
lock
mul
addl
iret
nop
xchg
repnz
into
call
cmp
sar
cmp
xchg
enter
loop
in
in
fsubr
out
icebp
xor
idivl
shl
call
cli
fcmovnbe
jecxz
icebp
jecxz
jmp
sar
int3
xchg
mov
xchg
das
xor
int
xlat
enter
out
add
cmc
aam
call
mov
in
mov
fcomi
filds
cmp
jmp
iret
stc
stc
fstp
shl
fiaddl
icebp
in
mov
mov
xor
xor
in
hlt
ss
idivb
cmp
fcomp
cld
mov
xor
in
clc
cmp
test
fchs
rol
xchg
jmp
mov
lock
lret
clc
sarl
aam
lret
addl
ret
cld
icebp
fiadds
out
stc
xor
rcl
icebp
fdivr
iret
lock
aaa
test
mov
xchg
in
fiaddl
hlt
rcl
aad
out
cmc
ljmp
fcomi
cmp
mov
faddl
jmp
out
into
lret
out
lock
loope
loope
rcl
test
loopne
orb
aad
in
jmp
ret
div
jmp
ljmp
idiv
jmp
sti
sti
decl
aas
into
idiv
in
shll
icebp
test
repz
adc
hlt
sbb
enter
repnz
sub
ret
iret
int3
clc
sti
fcomp
testl
out
or
mov
ret
clc
sti
aas
sar
fldz
cmp
shl
ret
lret
jmp
faddl
shlb
icebp
cmp
ds
fcomip
sar
loopne
fpatan
rorl
enter
lea
repz
fiaddl
cmp
std
out
xor
sti
jmp
icebp
fisttpll
clc
xor
out
out
in
cmc
out
out
int3
out
shr
icebp
rol
test
out
mov
stc
loop
adcl
shl
sbb
aas
std
fcmovnbe
cmc
and
mov
into
test
cmc
shl
xor
lret
test
aas
roll
xchg
xchg
decl
or
out
xor
icebp
aaa
in
shr
out
jmp
out
and
cmp
out
loopne
int
rolb
into
out
cmp
aas
int3
faddl
shr
or
orl
aam
out
iret
aaa
xor
add
cmp
jne
jmp
leave
aad
aad
int
jge
in
and
push
jg
pop
add
out
std
cmc
jmp
out
in
in
shl
repnz
cli
mov
sti
leave
and
into
shll
in
lret
fld
cld
out
xlat
cmp
cmc
fucomp
std
addb
into
out
in
aam
stc
iret
fistpll
lock
fsub
mov
in
imul
stc
ljmp
jmp
cld
ror
iret
out
cmp
aam
aam
idiv
faddl
lock
int3
jecxz
clc
ss
lret
cmp
cmp
cmp
fadds
stc
mul
xchg
rcll
ljmp
rolb
std
clc
mov
idiv
jmp
out
shl
stc
ror
xor
sti
std
neg
cmp
std
aad
aam
jecxz
icebp
shr
mov
repz
fidivrs
imul
out
test
fsub
aam
roll
rcll
clc
call
aad
repz
repz
fadds
out
sub
in
xchg
jecxz
enter
loopne
repz
loope
fadds
std
lds
xchg
xchg
jmp
loop
fcmove
stc
int3
ljmp
aaa
idiv
std
sti
mov
fmulp
enter
lret
jmp
cli
xlat
sarl
aad
cmp
fst
aad
addl
std
xor
shl
lret
repz
into
cmc
shl
into
int
add
test
cmp
mov
ljmp
int3
ret
roll
cld
imul
icebp
orl
in
clc
out
lret
iret
lret
fnsave
int3
ret
leave
movb
int
into
xchg
hlt
leave
into
cli
cmp
aaa
lock
into
shl
fsub
sti
mov
mov
mov
loopne
rorb
cmc
cmp
test
repnz
mov
enter
shr
test
in
cli
int
loope
fcomp
repnz
sti
cli
mov
aam
ret
in
fdivr
iret
mov
repnz
stc
xlat
fcmovbe
cmp
rol
push
aam
clc
cmp
clc
xchg
sub
in
out
lock
stc
aad
loope
fdivr
cmp
cmp
std
cmp
jmp
test
int
loop
enter
cmc
aam
cmc
testl
std
in
mov
call
in
cmp
faddp
cmp
jmp
cmp
test
addl
leave
orl
ror
fldpi
icebp
repz
jmp
cmp
cmp
neg
std
jecxz
fstl
mov
xor
jmp
ret
les
je
push
call
pop
jg
pop
add
jecxz
xor
out
not
rcl
mov
stc
cmp
call
sar
movb
repz
int3
repz
cli
shr
xlat
test
rcl
in
ljmp
incb
not
into
in
push
call
in
aas
call
lret
int3
mov
in
out
mov
in
xor
out
into
adc
repnz
ds
call
in
cld
rcl
mov
ljmp
hlt
cmp
cmpb
test
ds
cmp
cmc
jecxz
jecxz
test
mov
test
fdivr
aam
shl
loop
repnz
cmc
ret
cmp
inc
xlat
test
cld
jmp
div
leave
das
xor
cmp
sti
xor
fcmovbe
loop
fucom
rcr
clc
shr
hlt
fsubp
fcmovb
clc
xchg
loope
in
xor
cmc
lock
std
inc
out
loop
loopne
ret
fldl
int3
leave
adcl
into
aad
aad
cld
fadd
adc
cmp
stc
mov
xor
mov
into
into
shl
out
into
aas
ffreep
fcomip
aas
ror
mov
lret
dec
in
xchg
in
mov
xor
jecxz
rcr
add
out
repz
xchg
movl
mov
in
iret
jecxz
lock
aam
in
sti
aam
repz
repz
or
mov
cmc
clc
into
fcmovnu
cmp
rcr
roll
jmp
in
enter
xchg
rorb
xor
ljmp
in
sbb
fcmovnb
loope
mov
lret
mov
in
aam
clc
out
in
repz
jmp
fld
fsub
sbb
xlat
jmp
out
popl
out
les
cmp
cmp
lock
idiv
repz
icebp
ljmp
fcoml
aam
leave
aaa
jecxz
out
fucomi
int
into
rcl
out
filds
cmp
xchg
in
int3
nop
repnz
sar
in
xabort
out
cmp
jmp
imul
out
in
testb
fsubr
lock
addl
hlt
shlb
dec
cmc
icebp
lock
aam
in
cmc
fldl2t
imul
mov
addl
ljmp
shlb
cli
stc
into
lock
repnz
test
xlat
filds
mov
mov
shlb
aaa
ret
leave
xlat
repnz
ffree
inc
out
test
ret
repz
sar
out
lret
mov
icebp
cs
enter
fistpll
not
cmc
jecxz
cmp
xor
sub
fldl
in
rol
lock
sti
adc
fdivp
fld
add
fst
xchg
add
mov
mov
jmp
rol
rol
rcl
aad
add
out
add
jg
pop
add
lock
lret
sti
jmp
cld
sar
xlat
fdivr
leave
jmp
out
int
jecxz
test
cmc
xchg
clc
cmp
sti
int3
in
out
in
cmp
out
idiv
ds
cli
testl
fsub
jmp
jecxz
jmp
cmp
cmp
cmp
fcmovb
cmp
mov
test
int3
loope
repnz
in
xchg
out
loope
lret
out
ljmp
cmc
out
sar
xchg
sti
loope
fdivp
fsub
xchg
call
not
lret
cld
rcl
neg
cmc
in
cmc
mov
testl
icebp
xor
aad
fdivl
int
bnd
fincstp
icebp
fmul
hlt
jmp
int
fmul
mov
shlb
fnstenv
cmp
icebp
rcl
cli
cmp
test
mov
clc
lret
in
in
into
call
int3
lock
sti
clc
fdivrp
xlat
in
fistpll
hlt
ret
loope
icebp
xchg
fisttpl
clc
xchg
cld
repnz
xchg
jmp
xor
shr
in
cmp
shl
ret
xchg
out
orl
ljmp
cmp
cmp
cld
dec
rol
fstpt
ret
stc
mov
out
lret
mov
out
in
fmul
idiv
repz
fdivrl
rol
call
enter
fst
xchg
in
in
loopne
int3
cld
out
int
cli
out
cmp
repnz
cmp
jmp
into
std
mov
ret
icebp
repnz
out
sbb
repz
out
not
int
jmp
lret
leave
mov
lock
into
cmp
clc
in
in
iret
hlt
int3
in
faddp
cld
out
stc
jmp
fstl
out
lock
repz
out
stc
xlat
lock
fdiv
fsub
test
aad
addb
rolb
loop
aaa
ds
into
cmc
cmc
aad
enter
in
ret
sti
jecxz
jmp
aam
enter
into
fdivr
aaa
aad
loope
std
add
bnd
shl
iret
mov
loope
xor
stc
xor
xlat
hlt
cmp
or
fst
shl
or
cld
std
lret
in
jmp
adcl
xor
test
loop
aad
leave
out
sub
fisttpll
not
cmc
aam
aas
fdiv
cmp
rolb
icebp
jmp
jecxz
loopne
loop
jecxz
out
xor
cmp
xor
fdivrl
loopne
ret
icebp
aas
sub
std
in
out
loop
loopne
in
ss
xor
int
cmp
stc
in
jmp
add
sar
fmulp
fmuls
sti
mov
leave
repz
rcr
fdivr
ds
mul
shl
std
shl
fildl
in
xor
add
mov
pushl
pushl
call
mov
jmp
leave
ret
int
leave
iret
ror
shlb
jg
pop
add
lock
xor
in
lock
cmp
fmul
ret
cmp
jmp
xlat
fsubr
nop
fcom
ret
cmp
cld
fdiv
sarl
lds
xlat
rcl
repz
out
test
xchg
xchg
loopne
hlt
sub
cld
loop
in
rcr
cmp
aam
mov
cmc
shl
in
jmp
ljmp
loop
clc
rorb
jmp
orl
divl
fadd
jmp
clc
ror
test
xchg
fadds
adcl
das
ss
cmp
in
jecxz
shr
lret
xlat
in
fdivrp
rorl
loop
lret
rol
cmp
loopne
std
inc
filds
int
mov
incl
in
xor
cmc
lock
cmp
ret
rol
xlat
ffreep
jmp
jmp
lea
leave
aam
lret
shl
roll
jmp
jmp
loope
into
clc
xlat
jmp
cmp
jmp
fiaddl
stc
in
ljmp
out
loop
out
aad
iret
repz
hlt
xlat
int
aad
fsubp
lret
in
xlat
mov
jmp
xor
call
fsubr
ret
repnz
std
jecxz
aam
fildl
xchg
loop
ss
xor
xor
fcom
iret
xlat
sti
cmp
test
into
inc
out
idiv
cli
mov
sbb
lret
sub
call
shr
hlt
lds
lock
aad
ret
repnz
das
cmp
cmc
call
xlat
loop
in
aad
ret
bnd
fsubr
cmc
sti
aas
rcr
into
sar
fdivrl
xchg
jmp
mov
lea
rol
enter
xor
sarb
cli
sti
test
hlt
repnz
lret
sbb
ljmp
repz
jmp
aam
aam
filds
idiv
imul
clc
int
in
repz
iret
mov
ret
out
fcom
jmp
repz
iret
iret
add
not
incb
out
repnz
lret
shr
hlt
fidivl
repnz
ret
aam
test
xor
mov
in
loope
fstl
out
cmp
fcomi
repnz
rolb
incb
xchg
repz
ljmp
test
mov
fcmovu
ffree
sub
aam
in
cmc
enter
xlat
imul
in
aad
sar
loop
mul
testl
xlat
ror
fld
and
test
mov
bound
pop
add
std
loope
in
mov
aad
aam
jmp
cmpb
fdivr
loope
jecxz
stc
leave
in
std
les
in
in
idivl
loopne
cmp
shl
cld
ljmp
xor
mov
iret
jmp
jecxz
aas
std
cli
mov
decb
divl
call
clc
cmp
cmp
repz
fildl
cmc
std
in
leave
xchg
icebp
loop
ss
repz
fidivrl
lret
cmp
cli
test
jecxz
in
mov
popl
shl
ss
cld
ss
leave
std
ret
std
cmp
mov
fcmovb
mov
fimull
loope
cmp
cmp
lock
hlt
cld
repz
jmp
mov
jmp
in
loopne
nop
out
xor
repz
enter
in
aaa
out
fsubp
loop
in
cli
call
mov
rorb
rcr
lock
xlat
jmp
sti
test
xlat
test
loopne
lds
out
xchg
int
cmp
icebp
jmp
repz
shl
sbb
hlt
out
mov
lret
orb
fcmovne
cs
ljmp
xlat
fcmovb
jecxz
sbb
faddp
loop
mov
rcr
repnz
loop
jmp
xlat
cmp
hlt
ret
loopne
xchg
sti
int
test
in
sub
sub
xor
fcmovbe
sarb
iret
imul
icebp
xor
cmp
aad
fcmovne
fmull
adcb
enter
ss
ljmp
mul
fsub
lret
or
std
ljmp
in
cli
clc
aad
cmp
test
cmp
aas
jecxz
leave
mov
loop
test
out
xchg
rcl
in
xor
ds
sti
loopne
xor
loopne
cmc
fiaddl
mov
into
not
divb
repnz
fcomi
sar
rcr
repz
cmc
ret
std
loopne
leave
xor
int3
repnz
fsqrt
imul
xlat
out
clc
out
repnz
ror
ljmp
lock
cmp
lret
ljmp
ds
loopne
rcl
jmp
jmp
fst
shr
lock
stc
in
lret
std
repnz
sti
ds
fsqrt
orl
sti
in
lea
out
enter
int3
cmp
loope
lock
loopne
xlat
xchg
mov
out
jmp
hlt
aad
enter
stc
xor
out
loopne
test
fdivr
mov
ljmp
in
test
repz
out
sarb
in
aad
add
jmp
fcom
xlat
fstp
int3
fstpl
sbbb
sbb
repnz
gs
pop
add
mov
orb
in
sarb
shlb
rcl
fld
out
jmp
mov
out
iret
lock
cmp
aad
sarl
mov
shr
out
loop
loop
sti
std
in
mov
aam
sti
sub
cmp
cld
fnstsw
fildl
fcmovu
xor
iret
loop
xchg
and
out
fsubr
lret
int
aas
ds
clc
cmc
shl
adc
adcb
mov
lret
jecxz
out
shl
adc
xlat
adc
test
test
cmp
jmp
out
aaa
rcl
into
xor
fucomip
in
out
addl
fcompp
rorb
cmc
lret
int3
call
rolb
xlat
and
jmp
out
mov
ljmp
clc
xor
cmp
ds
in
push
icebp
jecxz
fmul
xlat
in
cli
loop
xchg
out
mov
rol
repnz
loopne
adc
out
imul
fiadds
out
xchg
mov
xlat
int3
cmp
fucomi
repnz
jmp
fcmovnu
stc
shl
cld
cmc
loopne
loope
imul
in
xchg
xchg
in
rcl
jmp
fidivrs
loopne
lret
out
cmp
fcomp
stc
xchg
fisttpl
aam
in
icebp
lret
ret
leave
rcl
in
fcom
xlat
fdivrs
aad
cli
icebp
cld
fimull
out
ror
loop
xor
ret
xor
loope,pt
fidivrs
aam
enter
ficoml
shlb
iret
out
xor
inc
hlt
cmp
cli
fadd
aas
in
int3
fcomp
mov
call
cmp
cmp
cmp
cmc
test
lock
loop
xlat
loop
ljmp
jecxz
xor
fcmovne
cmp
lock
loop
fld
loope
call
orb
nop
in
out
xor
leave
sar
fcmovnbe
iret
ds
loopne
ljmp
repz
xor
repnz
fstp
xlat
cmp
int3
aad
loope
repz
out
cli
int
jmp
cmc
ljmp
fdivs
stc
icebp
ret
test
in
cli
mov
cli
std
nop
rcr
ss
cmp
vpxor
cmp
cmp
out
leave
enter
mov
xchg
rol
loop
int
repz
fst
fxch
iret
xchg
out
xchg
in
fcomp
mov
jmp
cs
lret
rcr
lock
fsubr
loop
repnz
jecxz
test
leave
out
test
xchg
sub
fsub
fadd
cmp
divl
clc
cmp
ret
push
mov
push
movl
mov
mov
add
orl
xor
movl
jmp
rol
int3
rcr
fxch
ss
insl
sub
cmp
shrl
jle
add
testl
call
lret
jmp
sar
ljmp
cmp
fstp
out
repz
shr
rorl
xor
shlb
in
enter
cmp
cmp
shl
xchg
loop
loopne
rcl
cmp
lret
leave
das
cmp
xor
call
fcmove
cmp
sti
mov
ljmp
rcl
lret
int
fprem
repz
sti
in
ret
div
out
sti
fadd
rol
std
fisttps
icebp
ror
int
jmp
in
fdivrl
sti
incl
test
jmp
hlt
mov
add
stc
out
int
int
fxch
lock
repz
clc
xchg
ret
jmp
out
xchg
rcll
int
xor
repz
xlat
ret
test
shl
mov
lock
shr
xor
xor
out
jmp
sub
clc
icebp
rol
cmc
leave
out
out
out
sub
xchg
in
ffreep
mul
cmp
iret
cmp
cld
or
cmc
lock
in
call
xchg
icebp
clc
rol
neg
int
shl
fdivrp
fninit
aad
sbb
ffreep
ds
lret
in
repz
xor
aam
sti
fdivrl
lret
iret
cmp
clc
cmc
ds
fcom
in
enter
nop
mov
icebp
lock
ret
repz
cli
cmp
faddl
loop
mov
test
lret
lret
ljmp
test
fsubp
int3
in
mov
xchg
sub
xor
call
into
in
vpmuludq
repz
mov
out
xchg
mov
aad
xor
std
cmp
cmp
rcr
fucomp
leave
push
in
mov
rorl
aaa
in
cmp
cmp
bnd
bnd
mov
enter
faddl
shl
in
xor
lret
add
in
lret
movl
jne
mov
mov
mov
add
add
sbb
mov
add
mov
jmp
ror
ret
fcmovnu
fisttpl
mov
adc
push
jle
add
aam
call
lret
jecxz
repz
adc
into
mov
cmp
clc
fptan
lock
in
out
mov
loop
adc
sub
clc
call
xlat
clc
repnz
out
std
test
cmp
iret
sti
loope
mov
ss
stc
loopne
cmp
loopne
testl
in
test
call
lret
cmp
jmp
xor
cli
cmp
sti
clc
mov
call
roll
sti
xor
xor
sti
out
ljmp
neg
in
faddl
and
icebp
out
out
aaa
repnz
in
call
neg
rcl
lock
vshufps
fimull
out
repnz
lret
lret
ljmp
sti
cli
iret
aam
leave
sti
loope
ljmp
ljmp
idiv
rcr
cmc
std
faddp
mov
std
clc
stc
out
lea
repz
xor
cmc
cmp
in
cmc
ror
ret
sbb
leave
xlat
xchg
mov
loop
shl
fdivr
fcom
cmc
cmc
cmp
cmc
in
cmp
fcmove
clc
out
mov
out
jmp
int
into
loop
in
shr
rcr
cmp
or
loope
shl
xlat
cli
mov
mov
xor
lock
lock
das
xor
iret
cmp
loop
test
lret
decl
iret
out
out
cmc
cmp
in
aas
aad
cmp
jecxz
hlt
rolb
sti
lret
cmp
fdivr
ljmp
shl
xchg
loope
in
into
mov
xchg
sub
loopne
xor
call
jecxz
roll
lea
orb
xor
out
into
cld
out
int3
sar
icebp
int
xchg
and
or
jmp
rcl
int
in
cmc
divl
divb
aas
mov
xor
xorl
push
or
mov
mov
add
movl
cmp
pop
movl
je
mov
jmp
jmp
lret
xlat
lret
rcr
rcr
xlat
test
inc
sub
inc
orl
fcmove
fcmovnbe
lock
jmp
vphaddbq
in
lock
cld
fst
fdivrp
icebp
in
cmc
lock
loopne
loope
test
in
xchg
fcomip
in
mul
stc
lret
cmc
cmp
hlt
addl
repz
rol
int
repnz
fldl2e
not
shl
stc
lock
mov
out
loope
decb
call
xor
xor
rcl
sarl
loop
dec
aad
clc
aam
call
mov
faddp
in
cli
stc
in
stc
ds
loop
fidivl
lock
test
fadds
in
adcl
cmp
ss
in
loop
test
xchg
out
shl
adcl
fidivrl
sti
jmp
iret
cmp
adc
loope
jmp
adc
xchg
cs
enter
ror
incl
int
shl
ret
in
enter
nop
fsubp
xchg
repnz
into
fstpt
into
cli
sti
cmp
sbb
out
out
test
test
out
hlt
leave
cmp
fldcw
lock
out
loope
repz
in
std
out
xchg
lock
hlt
into
lret
out
call
inc
in
neg
hlt
loopne
mov
int
fistl
loope
aam
sti
cs
out
int3
rolb
cli
fdivr
hlt
cld
jmp
into
in
and
xor
icebp
leave
jmp
repz
rcr
hlt
loopne
ljmp
jmp
sub
int
shr
loopne
aam
fcmovu
aam
enter
in
fmuls
iret
aam
int3
repz
ds
in
fcmovu
fprem
aas
fdiv
ffreep
enter
mov
xchg
roll
aam
xor
stc
sarb
ds
repz
sti
test
aad
cli
loop
and
cmp
std
jmp
lock
vpaddsb
add
add
int
aas
int
int
jbe
repnz
fwait
das
movsl
outsb
jg
sbb
jle
cmp
loop
out
rolb
in
in
rorb
shl
cmp
fsubrp
in
loope
out
into
hlt
xchg
lret
sti
loop
repnz
cld
out
into
out
aam
lret
cmp
lock
cmp
sub
fcmovu
cld
clc
mov
mov
or
ret
loop
shll
xor
aad
rcr
cmc
repz
test
out
xchg
std
in
loope
int3
aaa
xor
int3
cmp
icebp
int3
leave
in
jmp
test
jecxz
movb
sbb
int
int
int
in
aad
lret
xlat
clc
int3
fdivrs
neg
aam
aad
test
jecxz
mov
repnz
clc
xor
out
imul
aas
fstp
loop
loopne
stc
iret
loope
aad
int
xlat
lea
lock
aaa
xor
ror
loopne
incb
xlat
out
stc
xchg
xchg
mov
icebp
rcl
rol
fstp
lock
cld
cli
xor
enter
into
fldln2
leave
rolb
int
sti
fdivl
lret
ss
jmp
lock
cmp
cli
leave
loopne
loop
hlt
int
ss
aam
std
std
iret
repz
sar
sti
aad
roll
nop
orl
call
cli
fcomp
icebp
clc
sar
hlt
testl
cld
xchg
ret
int3
call
aas
rcl
xchg
aas
mov
sub
in
mov
xchg
test
std
xor
rcr
repz
in
std
jmp
xchg
loope
cld
xchg
out
in
sub
stc
std
fsubr
aam
xor
fsubrp
in
mul
cmp
idiv
fcomp
fisttps
xorl
sbb
aad
aad
rcl
ret
fsubrp
mov
shl
or
iret
xchg
hlt
loop
iret
xlat
cmp
cmp
clc
repz
ret
test
and
in
int
mov
int3
in
sub
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
or
jmp
ret
ret
fst
int3
xlat
fs
test
inc
jo
jle
add
repz
int3
cmp
aaa
fdivr
cmp
cli
out
clc
loope
mov
std
lret
nop
shl
xchg
mov
rcr
aaa
lret
shl
lret
ret
ret
addb
addl
lds
div
ljmp
inc
stc
cmc
cli
test
in
jmp
aam
cmp
in
std
cmp
repz
fcomip
cmp
jecxz
mov
xchg
shr
xchg
lret
stc
fmul
int
iret
ret
icebp
loope
test
ret
ret
into
jmp
xchg
xchg
lret
cmp
clc
cmc
repnz
out
cmp
std
cmp
cmp
jmp
lock
fidivs
jecxz
shl
rcr
into
cmc
in
repz
in
aam
mov
lock
lock
neg
int3
in
jmp
out
fyl2x
std
fadd
shl
ret
cmp
and
leave
out
test
jecxz
hlt
int3
cmp
idivl
fildl
aad
loopne
int
lret
cli
xchg
fdiv
into
rorl
clc
leave
idiv
call
aaa
les
cmpl
fdivp
mov
out
fcmove
sub
cmp
fninit
in
cmc
loop
faddp
out
nop
icebp
lea
out
out
enter
aas
int
ds
xorb
std
repz
enter
fld
shl
xchg
call
leave
jmp
fbstp
cmp
rol
in
fadd
fldl
lret
aam
shl
icebp
iret
rcl
fcmove
out
xlat
fcmovb
icebp
cmp
aad
ftst
std
sub
jecxz
movb
out
cmc
shr
lock
loopne
out
cmp
test
int
xchg
iret
test
jmp
sub
ret
lock
out
sarb
lret
rolb
in
movl
xor
into
frstpm(287
xor
cld
fcomi
lret
cmp
fstpt
fisttpll
repnz
lock
in
into
cli
cmp
in
int3
aad
repz
in
repnz
loop
neg
in
dec
ror
lret
rcl
xor
in
into
call
cmp
fmulp
out
enter
fcmovu
in
roll
int3
aam
iret
aam
xlat
cmp
fcomip
xor
aad
in
xchg
xchg
mov
int3
shll
out
iret
cmp
aad
repnz
add
ljmp
int
and
icebp
xor
ljmp
idivl
stc
out
sti
int
repnz
mov
xor
sbbl
add
movl
mov
movl
movl
movl
movl
mov
movl
push
movl
movl
mov
cmp
movl
jmp
rcl
enter
fsubl
pop
mov
jle
add
aam
idiv
leave
loop
enter
hlt
call
ret
fcomi
xor
jmp
aam
ret
incb
jmp
leave
lret
xchg
xchg
enter
int3
ljmp
in
leave
aad
mov
in
fucomp
repz
jmp
lret
repnz
fnstsw
cmp
xchg
ljmp
rol
shrl
cmp
xlat
stc
clc
cld
idiv
fdivrp
and
out
loopne
cmp
icebp
test
ret
xor
out
ss
in
int3
fistpll
test
shl
leave
faddl
int3
in
xor
cmp
cmp
out
cli
int
repnz
ret
xor
leave
sti
sbb
in
loope
xor
out
cmp
fcmovnbe
and
fcomp
mov
test
test
xchg
xchg
int3
cmc
sbb
cmp
lret
sti
std
sti
out
roll
out
xlat
jmp
xchg
repnz
xor
int
aas
in
incb
aas
cmc
enter
out
out
sub
int
neg
div
div
fmulp
aaa
loop
hlt
or
cld
xchg
in
xor
aam
in
cmp
fucomi
aam
in
jecxz
call
jmp
call
test
jmp
fdivrp
les
loopne
out
out
in
in
hlt
xchg
imul
ljmp
cmp
aam
shl
icebp
test
mov
out
in
ljmp
iret
xlat
test
cli
repnz
imul
ret
incb
mov
in
jmp
xlat
lock
sti
ret
fcomp
lret
jmp
fucom
fists
xor
imul
out
out
fidivrs
and
fdiv
fldpi
fcmovne
mov
call
sub
leave
stc
fldl
std
cli
idivl
cmp
mov
loopne
neg
ret
out
repnz
sub
ljmp
xlat
aad
out
int3
iret
loopne
stc
aam
fcmovnu
loopne
in
lock
hlt
fsub
sub
xor
cmp
aas
sti
ret
fucomi
stc
xchg
out
xchg
fsubrp
repz
fmul
in
cmp
xlat
out
enter
xlat
clc
aad
cmc
decl
jecxz
fadd
or
in
in
clc
xlat
ss
repz
in
fiadds
mul
test
out
lock
jmp
loop
je
or
mov
xor
jmp
aas
leave
fmul
fcom
fld
cli
jae
scas
xchg
sub
pop
jbe
jle
add
rcr
mov
shll
int3
fxch
cmp
fdiv
filds
jmp
sub
xchg
adcb
f2xm1
out
into
cmp
clc
xchg
fstp
mov
loop
jecxz
into
fcmovnu
xchg
mov
icebp
aam
clc
xor
fdivr
cld
icebp
ret
jecxz
ljmp
test
in
out
clc
jmp
aam
sar
test
lret
test
sti
call
ror
das
jmp
jmp
shl
stc
mov
fcompp
enter
in
xchg
addb
into
xor
rcl
out
cmp
xlat
ror
test
hlt
cmp
jmp
cmp
subb
ljmp
jmp
fstpt
fdiv
and
aad
int
jmp
loop
icebp
mov
idiv
cmp
xlat
xor
fsubp
test
ds
jmp
lret
fists
out
call
clc
sti
fnstcw
inc
cmp
addb
mov
xor
repnz
in
jmp
repnz
fcomp
lock
out
repnz
repnz
call
loope
mov
enter
fcmovnu
out
shr
ljmp
call
idiv
in
cld
out
mov
mov
jmp
xor
icebp
ret
faddp
xchg
jecxz
mov
iret
lret
ffree
xchg
repnz
ss
div
out
cmp
mul
test
repnz
jmp
loopne
mov
out
xor
icebp
xor
into
out
in
ljmp
ret
cmc
test
xlat
lock
std
into
in
out
das
repz
aam
stc
fst
shr
fstp
rcr
icebp
out
sbb
cli
int
call
clc
neg
into
fsubr
cli
stc
jmp
lret
fdiv
sti
loop
shl
xchg
cli
in
out
out
lock
test
cmc
cmp
hlt
ret
jecxz
inc
cli
rorl
in
int
iret
xorl
sar
jmp
cmp
xchg
lret
sbb
ror
jmp
lret
rcl
cld
cmp
jmp
mov
enter
divl
lds
cmp
mul
call
ds
testl
int
jmp
lret
cmp
cmp
fsub
les
shr
ljmp
out
int3
in
fidivrs
stc
shl
xor
jmp
lret
aam
aam
call
jg
lods
add
stc
jmp
ljmp
jmp
xor
xor
in
fcmovnbe
shl
std
into
repz
clc
loope
mov
loopne
sub
repnz
loopne
xchg
xchg
ror
icebp
rcl
int3
cmp
incb
out
rcl
leave
sti
jmp
decb
int
out
out
sti
in
int3
ds
stc
ffree
div
aam
aad
in
loopne
ffree
xchg
rorb
jecxz
rcr
enter
cld
int
sti
out
repnz
enter
fdivr
mov
aam
int
das
fcomp
into
ss
cmp
cmp
in
shl
fidivrl
fsubrp
jmp
in
in
rcr
fcmovbe
std
hlt
cmp
lret
in
rcr
shr
ffree
ljmp
nop
int3
cmc
in
leave
test
lret
cmp
rcr
or
stc
jmp
icebp
xor
cmc
sarl
icebp
fucom
fcom
fabs
loopne
fldz
jecxz
lret
sti
sti
mov
ss
not
int3
call
in
rorb
xchg
out
xchg
out
int
in
xchg
loope
xor
xlat
sar
idivb
repz
loopne
aas
cld
loope
jmp
fsubr
fcomi
jmp
in
iret
in
sarl
lret
loopne
ret
loope
xor
test
xchg
fisttpl
out
in
xor
fdivrs
lds
mov
mov
loop
xchg
into
aam
icebp
lock
in
fldz
cli
cmp
xlat
jmp
testl
mov
cmp
lret
fcmovu
int
int3
lock
fcmovnb
fidivrs
mov
xchg
in
cli
call
fxtract
xor
cld
adc
add
orl
cld
lds
xchg
xor
jmp
out
out
ljmp
stc
fildl
sbb
loope
mov
call
leave
enter
lret
aas
rcl
loop
rol
stc
std
lret
sti
in
loopne
mov
decl
shl
ljmp
cmc
dec
aam
ds
xchg
mov
jecxz
xchg
aam
xor
ss
cmp
stc
int3
fcomi
orl
xchg
iret
in
ret
fldz
int
cmp
xlat
shl
rol
loop
mov
sbb
mov
filds
out
clc
aam
xor
fdivr
out
fdiv
shl
out
aad
xchg
in
ret
mul
test
and
push
xchg
jb
add
add
add
add
movl
enter
int
lds
outsb
test
lods
add
loop
hlt
int
clc
jmp
aas
iret
ss
xor
rorb
orb
adc
test
sti
out
icebp
in
in
xchg
aas
rcl
in
out
jmp
sarl
jmp
shr
cmp
ret
loopne
movb
xlat
ljmp
icebp
icebp
shrb
enter
ss
addl
out
hlt
int3
testl
in
int3
shlb
cmp
out
cli
cmp
in
lock
fcmovnb
fiadds
addl
xchg
int
xor
into
cmp
shl
loop
ret
not
cmp
enter
loope
in
rorb
xlat
loope
call
cmc
loope
xor
bnd
jmp
test
mov
jmp
mov
ss
int
xor
aam
std
adc
adc
shl
hlt
in
in
or
out
xchg
in
aas
jmp
lret
aaa
lret
ss
roll
enter
lret
int3
orb
ret
out
stc
std
in
jmp
loope
and
shr
cmp
sti
fcompp
leave
adcb
rcr
cmp
shr
fsin
sti
fdivl
loope
add
xlat
rcr
ds
stc
and
iret
enter
out
aaa
aam
shl
cmp
xor
shr
sti
in
out
stc
loopne
leave
in
jmp
cmp
in
loopne
loope
stc
ret
in
faddl
mov
lret
sti
loop
and
jecxz
aaa
ljmp
repnz
loope
fdiv
mov
stc
fldl2t
ret
and
call
cmc
xor
cmc
ss
lret
loope
fcmovb
cld
rcr
xlat
and
lret
mov
ffreep
out
xchg
mov
lock
into
out
in
std
int
cmp
repnz
rcl
decb
loop
lret
xchg
ljmp
aad
cmp
lret
bnd
ds
aad
cli
loop
fadds
int3
loop
mov
cmp
leave
aad
xlat
clc
out
std
sub
loop
ljmp
std
aam
jecxz
jmp
lret
cmp
fidivs
shr
in
shl
loope
lock
fildl
shr
out
xor
in
lret
lock
out
aas
jecxz
sti
aam
movl
shr
cld
jmp
in
shll
out
fnstsw
fmul
into
cmc
std
xor
fadd
cli
les
lock
rol
ret
into
out
fmul
fsub
cli
loope
xor
cmp
jne
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
add
mov
jmp
ror
vpsrld
jl
push
push
pop
pop
sbb
lods
add
out
loope
neg
sti
ret
test
xchg
and
rcl
xor
sarl
int
cmp
rcl
aam
in
addb
cmc
lret
test
in
icebp
out
stc
stc
xlat
out
cmp
jecxz
ds
sti
cli
sarb
icebp
lret
out
fdivp
xlat
ret
xlat
fidivl
sar
sti
loopne
sti
repnz
stc
lret
adcl
enter
out
icebp
loopne
iret
cld
cmp
cmp
jmp
repz
int3
jmp
cli
fabs
sbb
in
leave
into
loope
rclb
rol
in
leave
hlt
int
cmpl
in
ret
fcmovnb
or
fisttps
loope
in
jmp
out
int3
in
stc
hlt
cmp
ds
cld
jmp
les
in
cmc
call
out
aad
stc
cmp
cli
loope
ret
enter
ljmp
jmp
icebp
test
hlt
aas
adc
std
cmp
out
in
in
int
out
xchg
lock
and
in
cmp
fmul
lret
lock
clc
sti
test
icebp
cld
mov
int3
mov
int3
mov
iret
std
fsubr
jmp
sub
xor
cmc
in
cmp
div
cmp
cmc
idivl
xchg
mov
movl
sti
icebp
cmc
aam
lock
addl
fstp
call
hlt
int3
neg
repz
into
aad
rcr
cld
cmp
ret
jmp
ret
out
repz
ret
out
icebp
cmp
ss
cld
out
rorb
fisttpl
subl
out
xor
stc
loopne
sti
rolb
fxch
mov
loope
cmc
div
ret
xor
xor
cld
cmp
loope
aad
lret
call
iret
into
in
cs
cmc
out
cmp
rolb
test
test
stc
fimuls
cld
int3
repz
fidivl
shr
aam
xor
hlt
cmp
inc
not
ret
loope
addb
out
sar
clc
clc
out
clc
cmp
xor
int
in
xchg
fadd
call
xchg
shl
addb
ror
fnsave
clc
addb
mov
repnz
xchg
loopne
lret
cli
stc
int3
out
fldpi
enter
ret
test
in
test
mov
int
xchg
lock
aad
lret
enter
fcmovnu
push
icebp
ret
sub
lods
add
nop
mov
int3
jecxz
cmp
fidivrl
shr
cli
fstpt
clc
cmp
ror
ljmp
int
imul
call
jmp
sub
clc
sti
xchg
testl
hlt
call
out
ljmp
std
push
loope
mov
fisttps
cmc
xchg
ret
fdiv
icebp
call
icebp
idivl
shl
clc
jecxz
aad
mov
vpsubusw
icebp
loop
int
loope
repnz
clc
xor
int
xor
fiaddl
repz
cli
sti
loopne
cld
out
out
out
shl
shl
cmp
lock
aam
sar
shl
loop
addb
in
fdiv
mov
ret
repz
leave
aaa
aaa
cld
leave
repz
fnstcw
std
in
xor
loop
in
iret
xchg
mov
aad
lock
cmp
out
sar
ror
les
mov
iret
iret
int3
out
jmp
out
fdiv
cmp
sar
repz
repnz
int3
hlt
cs
jmp
xor
aam
roll
xor
mov
jmp
test
in
ljmp
ss
ss
cmp
add
rol
aam
aam
lret
into
jmp
cli
mov
testb
out
out
stc
out
test
xchg
fmulp
iret
test
in
cmc
cmp
cmp
cmp
in
ret
cli
xchg
lock
iret
xorb
rol
cli
hlt
cli
lret
enter
xlat
test
lock
aam
call
jecxz
xchg
shr
out
ljmp
xor
testb
mov
mov
out
call
mov
jmp
aaa
std
jmp
shr
cmp
mov
in
ffreep
ljmp
cmc
call
xor
int3
xor
cmp
lock
idiv
clc
out
sti
test
int3
mov
rol
lock
int
fcmovbe
loop
testl
loope
hlt
hlt
icebp
fnstenv
out
ror
xlat
iret
sti
enter
icebp
out
mov
cld
cmp
enter
xchg
loopne
out
in
xor
cmp
shl
call
lock
rcr
leave
loopne
fucomp
fiaddl
mov
enter
fdivr
out
cmp
std
in
div
call
hlt
sti
test
out
fmulp
clc
icebp
out
xchg
ljmp
aaa
fnstcw
in
and
add
mov
mov
xor
jmp
enter
int
enter
push
add
loope
add
jle
add
cmp
out
add
fcmovu
lret
out
dec
out
mov
in
cli
jecxz
xor
fnstsw
in
div
loopne
xacquire
sbb
fmulp
xchg
lock
int
xor
out
call
shl
repz
loopne
fdivr
rcll
mov
jecxz
sar
cmp
ss
div
int
cmp
mov
out
iret
int
xor
test
ret
clc
icebp
iret
not
shr
ret
fdivr
out
rcr
icebp
not
lret
test
xchg
into
repnz
xor
cmp
lock
cmc
xchg
test
sti
fadd
in
in
fisttpll
in
jecxz
out
out
int
std
fadd
in
fpatan
lock
sti
clc
jecxz
fildl
fmulp
repnz
cs
and
repz
rcll
lret
hlt
clc
aaa
cmp
cli
loopne
incl
stc
fisttpll
iret
test
xor
sarl
cmp
not
div
out
sub
cmc
mov
fptan
iret
lock
out
shl
jecxz
jmp
leave
cmc
shr
jecxz
loope
mul
ljmp
mov
cli
in
mov
ljmp
cmp
lret
rcl
std
repnz
roll
in
ljmp
lock
clc
aam
enter
addb
rolb
sti
dec
lea
aaa
icebp
in
int
cli
icebp
int
loop
lock
rolb
faddl
repnz
int
ljmp
ret
out
xchg
jmp
mov
adcb
lock
leave
fyl2x
std
aad
in
shr
fmulp
fnclex
iret
fnstsw
lret
mov
out
in
xchg
xchg
enter
in
int
aam
stc
aas
cmp
cld
fsub
std
ret
jecxz
int
xchg
loope
rcll
cmp
shl
cmp
out
mul
sti
fldl
out
in
lret
out
xor
xor
leave
out
out
loope
addl
cmc
fimuls
rcr
call
loope
enter
cmc
lret
jecxz
repz
flds
test
xchg
shlb
jmp
out
iret
cmp
xor
stc
in
int3
not
rolb
loopne
xchg
int3
xchg
xor
cli
sti
int3
into
std
rcr
out
loop
in
in
cld
xor
jmp
aas
lret
fcmovnu
xlat
aad
jno
sub
cmp
add
add
out
in
ror
cmp
in
clc
jmp
fsubr
test
xlat
loope
leave
ret
jmp
xchg
fcomi
ljmp
aaa
in
xor
lret
ret
std
in
fsub
xchg
loop
out
cld
into
loopne
shl
xlat
fsubr
leave
cmp
lret
sarl
hlt
rcr
stc
std
sbb
mov
out
mov
leave
aaa
cmp
fucomp
xor
xlat
fcmovne
xor
jmp
test
orl
xor
xor
cmp
icebp
xlat
loopne
sti
out
std
testl
int
ljmp
dec
fiaddl
call
movb
aaa
jmp
das
lret
lock
repnz
clc
loopne
int3
xchg
out
jmp
lret
fst
fcmovne
cmc
sbb
stc
std
les
lock
iret
shrl
ret
ror
vpandn
call
push
idivl
out
mov
mov
loop
call
ror
lock
out
hlt
std
aas
cmp
mov
lds
lea
aaa
call
lret
out
into
test
rcl
fxch
std
std
into
mov
ror
fldl
call
in
int3
cmp
and
fstp
jmp
fmull
mov
ret
shlb
clc
in
div
cmp
int
testb
in
in
fstp
cld
fldl
repz
sti
hlt
cmpb
and
loopne
lret
bnd
mov
icebp
xor
repz
in
cmp
idivb
ret
fsubr
mov
enter
sti
fmulp
test
shl
int3
out
fucomp
leave
cli
test
cmp
stc
loopne
mov
xchg
int3
sbb
cmc
in
out
xlat
cmp
clc
in
cmp
sti
fstp
mov
and
rol
in
call
ljmp
xor
sbb
jmp
leave
flds
pop
cs
fnstenv
shl
ret
addb
in
clc
loopne
repz
lock
fcmovu
icebp
out
loopne,pt
idiv
out
in
fsubr
fstpt
out
mov
fcomp
divl
in
xor
int3
cmp
into
icebp
vpsrad
out
fcmovu
leave
leave
stc
test
sub
out
fadd
int3
out
ljmp
add
add
into
enter
int3
fwait
outsb
mov
push
gs
and
add
add
sti
shr
fadds
lret
in
cld
fldl
xor
aad
aaa
cmp
cmp
cld
ss
aad
fmuls
fimull
xchg
mov
vpsubq
cs
out
sti
sti
into
cmp
ret
aad
ffree
leave
leave
loop
jecxz
sti
jmp
xor
ret
int3
xor
in
aas
fldl
ffreep
out
clc
enter
rcl
icebp
xchg
out
lds
rcr
shr
sarb
fcom
sar
cmp
addb
std
mov
shr
test
lret
shlb
ss
into
cmp
fcmovnu
fdiv
fldl
test
loope
in
repnz
les
out
cmp
in
jecxz
out
in
cmp
call
test
lret
xchg
xor
hlt
iret
cmp
loope
repnz
aas
clc
fiadds
lret
in
fldl
cmp
fnstsw
leave
int
fndisi(8087
std
aas
hlt
in
fcom
fsub
xchg
bnd
jecxz
repnz
ljmp
ffreep
fcmovne
addb
shlb
das
repnz
shl
aad
cmp
ds
sar
sti
jmp
dec
out
iret
ror
in
into
fincstp
aad
shl
neg
in
hlt
test
test
fdivr
addb
lock
out
ss
loop
cmc
rcr
aas
or
jmp
in
xchg
xor
repz
leave
repz
loopne,pt
xlat
loop,pt
jecxz
xchg
out
rorl
ljmp
out
push
fst
aam
repnz
aam
lret
loop
ret
loop
mov
sub
lret
ljmp
not
icebp
fimull
decl
xchg
rcll
jmp
sti
fldl
sub
fdivrl
leave
out
hlt
xlat
loop
cmp
test
fsubr
leave
xor
fsub
fcmovnbe
ror
aas
cli
sar
ds
nop
hlt
iret
enter
test
out
ret
ror
xlat
call
lret
decb
in
jmp
fcmovne
xor
int3
shr
repnz
in
test
cli
fimuls
jmp
shrl
cmp
lret
iret
aad
aad
sti
std
cld
in
sar
mov
sub
in
hlt
test
loop
loop
out
xor
fidivrs
lock
loop
hlt
cmp
movb
jmp
leave
iret
int3
into
fstp
pushf
mov
dec
icebp
xchg
or
jle
add
sub
int
aam
shr
icebp
clc
std
shr
fdivr
ds
sti
repnz
xchg
rcr
lock
lret
out
cli
jmp
leave
jmp
lock
or
testb
sbb
call
aaa
in
xor
xor
stc
loopne
lret
not
cmc
sarb
clc
rol
dec
roll
xor
les
out
repnz
idiv
shl
inc
cld
mov
idiv
fsub
shr
in
shll
out
clc
ss
cmp
div
sbb
fcomi
rcr
test
in
or
in
out
out
in
icebp
cmp
icebp
sti
cmp
in
sti
hlt
mov
repz
xlat
std
lret
int3
int3
in
lret
xor
stc
hlt
aas
repz
loope
out
ret
cld
std
cli
cld
nop
jmp
out
cmp
hlt
push
out
iret
idiv
in
ret
into
loop
nop
into
loop
hlt
out
jmp
enter
ss
std
sbb
aam
std
stc
ret
out
ljmp
lret
hlt
lret
ss
xlat
ljmp
testb
jecxz
mov
xchg
xchg
sub
sarl
sti
cmc
out
loop
loopne
call
xchg
leave
fmul
in
in
addl
jmp
icebp
sti
cmp
ds
lock
addb
xchg
lret
jecxz
leave
ss
cmpb
xor
sti
xchg
sbb
mov
sti
enter
fimuls
cmp
lock
in
lock
out
sar
test
jmp
fnclex
mov
mov
call
aad
jmp
ljmp
neg
fdivr
rcr
movb
lret
lea
icebp
into
in
xor
cmp
xchg
test
mov
mov
leave
not
lret
cmp
rcl
cmp
ds
lock
cmc
xor
xchg
fistl
aam
icebp
out
cmp
ljmp
fiadds
clc
out
mov
iret
xor
fcmovnu
cmp
out
repz
lock
out
mov
clc
std
ror
icebp
into
call
leave
xor
out
sti
icebp
out
ret
stc
test
ds
clc
movl
xchg
xor
cmp
leave
sti
fdivp
sar
in
in
test
cmp
in
jmp
loopne
div
repz
aaa
xor
inc
or
add
mov
mov
jmp
rcr
int3
ror
fcmovnu
arpl
ja
push
add
add
fucomi
hlt
iret
aas
mul
addl
in
sbb
lret
stc
icebp
repz
ds
fadds
icebp
out
out
sti
mov
xchg
in
in
lret
aaa
int
into
loopne
xor
sarl
loop
loopne
in
dec
and
orl
rcl
lock
in
shl
fprem1
mov
xchg
loope
xor
loopne
cmc
repnz
int3
iret
lret
sarl
aad
rol
std
test
mov
test
out
shll
sar
divl
iret
out
cmp
aas
lret
out
sti
fldl
enter
out
xchg
jmp
ljmp
loopne
leave
not
cmc
mov
mul
out
jecxz
out
repnz
rcl
sarl
aad
std
mov
enter
in
mov
xchg
and
lret
into
ror
cmp
ljmp
test
div
jmp
mov
fstp
mov
lret
aad
aad
out
icebp
in
clc
loopne
ror
repz
hlt
mov
sti
xchg
movl
jmp
std
sarl
rolb
mov
clc
mov
fucomp
jmp
loope
int3
in
aaa
into
aam
shr
cld
fincstp
fdivrp
rolb
out
test
loope
lret
call
rol
xor
sub
into
jmp
rol
test
ffree
cmc
ljmp
xchg
imul
fdivr
loopne
std
mov
cmp
lret
loope
int
fucomip
loop
ror
sub
jmp
clc
rolb
jmp
jecxz
fmul
fsubr
aam
stc
cmc
shl
cmp
mov
enter
xchg
jecxz
or
aad
lret
leave
shll
shr
fdiv
fstp
shr
test
xlat
cli
ret
shl
aam
sub
iret
in
sti
clc
imul
test
hlt
cmp
not
mov
out
loop
xchg
out
jmp
in
divl
rolb
loop
out
out
out
fndisi(8087
xchg
xlat
lret
cmp
enter
fidivrs
fxch
test
out
test
test
nop
mov
ror
in
shr
xor
ljmp
sbb
in
out
into
mov
xchg
xchg
xchg
out
xlat
hlt
neg
cmp
out
repz
fidivrl
iret
cmc
stc
movb
movl
iret
into
aad
leave
fnsave
cmp
and
adc
jle
add
ljmp
repz
out
enter
ss
cmp
jmp
cmp
clc
fstl
xchg
mul
leave
repnz
lock
rol
out
hlt
fidivrs
cld
ljmp
mov
jecxz
hlt
xchg
jecxz
rcl
aad
cld
int3
sarb
rcr
ret
icebp
aam
decb
mov
xor
idivb
fdivp
cmp
repz
or
orb
call
out
shl
jmp
aaa
loope
stc
rorl
mov
repz
xchg
loope
div
xor
ror
testb
enter
vcvtpd2dq
xchg
std
nop
and
repnz
clc
test
test
std
loope
in
loopne
push
test
icebp
fdiv
shr
aad
out
divl
shl
stc
aad
ljmp
int3
decb
shl
sub
xlat
cld
call
into
repnz
test
cmp
mov
mov
fsubp
in
loop
ret
lret
enter
xor
sti
rcl
ds
jmp
lret
leave
fsubr
out
in
shr
divb
enter
div
lret
aam
sbb
neg
inc
test
ficoms
cmc
loope
xor
cmp
in
jecxz
cmp
loope
int3
mov
out
xchg
fiadds
stc
in
shl
leave
sar
aas
cmc
clc
fisttpll
out
enter
test
lds
ss
cld
lock
addb
int3
mov
shl
xchg
nop
xchg
xchg
ret
iret
aad
cmc
ljmp
fsubp
loopne
rcr
fsub
sbb
loope
std
out
loopne
mov
leave
hlt
xor
into
out
xor
cmp
fiaddl
loop
xchg
jmp
not
ftst
in
cmp
stc
shr
stc
out
cli
jecxz
loopne
sti
stc
loope
jecxz
in
loope
cld
out
nop
ror
xor
xlat
fucomi
in
cli
cmp
out
cli
fdiv
icebp
shl
stc
lret
aas
out
jmp
cmc
rcr
shl
out
rcl
into
out
cmc
rcl
fcmovbe
test
ljmp
mov
mov
sub
shr
cmp
ffree
ljmp
lock
ret
lret
sbb
repz
aad
das
aad
jmp
call
iret
out
rol
addl
fisttps
sub
xor
iret
pop
test
je
jmp
mov
int
sub
movsb
adc
jle
add
out
iret
lock
aam
fcmovb
stc
cmc
rolb
mov
aaa
not
fdiv
std
ds
jmp
rcr
in
xor
hlt
xlat
cmc
mov
icebp
test
out
loopne
xchg
jecxz
xor
cmp
std
hlt
into
out
aad
add
faddl
repnz
int
xor
out
rcl
lret
loopne
aam
aad
shl
cli
cld
xchg
mov
leave
sub
xor
jmp
test
sbb
fiadds
mov
int
in
out
loope
hlt
int
cli
cld
shl
jmp
call
int3
shl
adc
out
xlat
in
ljmp
repz
xchg
mov
fmulp
lret
out
mov
aaa
rcl
xor
repz
repz
loopne
shl
rcl
cmc
shl
orl
shl
loopne
ret
cmp
fcmovb
fdivp
cli
lock
sbb
in
loop
ror
out
in
loope
leave
xor
xlat
cmp
fmul
cmp
shl
cmp
ret
int3
lret
int3
cld
repnz
mul
call
out
icebp
rol
iret
sbb
sar
mov
xchg
cld
int3
orb
int
hlt
xor
shl
fstpt
sti
in
incb
call
enter
loope
out
in
loop
cmc
out
not
int
shr
ss
enter
fiadds
test
in
cli
nop
dec
loop
mov
hlt
xor
stc
xor
jmp
aad
icebp
cmc
sbb
loopne
out
repz
repz
fcmovbe
cld
test
std
cmp
stc
test
icebp
repz
jmp
mov
loopne
aaa
call
cmp
idiv
fmul
out
icebp
cmp
xor
mov
xchg
jmp
cmp
into
cmp
jmp
iret
rol
aam
clc
leave
loope
iret
out
loopne
hlt
call
cmc
in
repnz
rcr
loop
fabs
ret
repnz
repz
movl
ss
in
sar
int
lret
fldlg2
in
in
enter
inc
enter
jmp
loope
aam
xlat
lock
clc
fcom
clc
ret
fsub
cld
sub
nop
int3
shl
std
jmp
not
aaa
aad
rcr
repnz
xlat
aad
fiadds
fmull
xchg
out
ljmp
std
call
test
in
stc
xchg
xor
pushl
mov
pushl
mov
call
jmp
jmp
lret
rcr
lret
fstpl
add
rcll
add
add
fsubr
and
out
call
xor
xlat
shlb
clc
enter
sub
loop
call
fsubr
loop
lret
xchg
aad
xor
cli
sti
sti
or
fnstsw
fdivr
idiv
in
out
fldpi
out
mov
out
fdivp
int3
int
repnz
shl
and
ds
xlat
and
test
fildl
ljmp
hlt
hlt
cmp
testb
xlat
in
out
sar
lret
xchg
loop
les
loop
iret
repz
loope
out
cmp
jecxz
cmp
sub
in
loop
fcomi
loope
into
cmc
int3
in
xor
jmp
cli
clc
std
fiaddl
cli
xbegin
in
jmp
sub
int
call
cmp
loop
xor
aam
leave
clc
cld
lret
decb
ret
icebp
enter
std
icebp
sti
fdivp
xchg
and
test
ljmp
jecxz
xor
repz
cmp
fdiv
fdiv
fcmovb
out
clc
repnz
mov
aad
repz
shr
xchg
rol
movb
fucomip
add
stc
rcr
mul
mul
shr
shl
xlat
hlt
loopne
hlt
fmulp
out
xchg
fsub
fmull
cmc
xlat
int
ds
cmp
sarb
cli
cmp
icebp
loope
std
sub
in
hlt
xor
xor
xor
faddp
aad
loopne
ret
cmp
jecxz
ds
decl
mov
incb
aam
shl
xlat
repz
iret
stc
fucomip
test
loope
addl
nop
test
xchg
mov
xor
repz
lret
fnstcw
out
call
test
aas
call
lock
hlt
shr
out
fldlg2
icebp
rcl
int
in
loop
loopne
or
leave
cmc
jmp
mov
mov
lret
sti
std
ljmp
and
clc
call
ljmp
xchg
int
repnz
out
cmp
in
repnz
leave
mov
fldlg2
xchg
int
test
enter
in
aad
cmp
not
aad
int
out
shl
xchg
flds
loope
mov
shl
xchg
out
fsub
sti
repz
call
jecxz
in
and
cld
jmp
loopne
repz
xchg
icebp
aaa
hlt
out
fdecstp
out
aad
std
fcmovnb
jmp
imul
out
mov
repnz
xlat
mov
leave
ret
push
mov
sub
decl
movl
adc
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbb
jmp
leave
aad
fst
leave
fldl
cli
sbb
dec
or
sbb
jle
add
lock
aas
repz
cmc
fcos
decb
and
ljmp
in
jmp
in
shl
xor
popl
out
test
loope
into
aaa
xor
cmp
icebp
sar
ds
cmp
test
fcmovu
clc
int
lret
loopne
out
aaa
out
cmp
aaa
int3
fld
cli
cmp
aad
test
out
test
aam
clc
shl
sarl
rcl
iret
fptan
repnz
out
lea
out
hlt
aad
not
cmp
repnz
test
sti
and
int
xchg
in
jmp
lret
fmul
cmp
repz
aad
addb
lock
sbb
xchg
enter
iret
lret
idiv
in
in
iret
sar
and
ret
clc
incl
jmp
ss
iret
cmp
ds
lret
rcl
sbb
roll
mov
test
int
rcl
cmp
xor
clc
test
xchg
test
rolb
repz
rcl
icebp
repz
cld
out
loop
fimull
mov
rcr
loope
shl
xor
cmp
fucomip
inc
hlt
lock
addl
in
addl
cli
jmp
aaa
fcmove
xor
aam
xchg
std
test
std
in
in
call
repz
cmp
shr
add
out
repz
out
fsin
nop
mov
ljmp
out
fsubrp
rcr
aam
loopne
imul
sar
sti
xchg
fucomp
in
loop
jmp
out
hlt
out
iret
in
out
xor
out
hlt
in
cmp
addl
fdivr
leave
xchg
xor
aam
out
int
inc
hlt
cli
sar
sbb
mov
fisttpll
shl
cmc
out
int
fdivs
ljmp
cmp
sarl
ret
test
adcl
sub
test
add
push
add
add
aam
enter
fldl
push
xchg
push
lcall
cmp
jle
xchg
pop
out
repnz
int
out
leave
cmp
jecxz
ret
loope
enter
repz
aad
lret
jmp
sar
in
shl
into
sti
sti
in
loop
neg
test
icebp
aad
out
lret
fnstcw
cld
cld
sub
sti
testb
lret
lret
out
rorb
xlat
xor
icebp
into
aad
xor
sti
ret
div
fcmovu
in
call
xchg
in
mov
ret
xor
cmp
ljmp
xor
xlat
fdivrp
out
enter
out
call
xor
hlt
aas
rcr
jecxz
fadds
ret
fcmovu
in
out
icebp
jecxz
out
in
lds
aad
fdivrl
fld
loope
in
into
test
enter
xchg
in
aad
xlat
out
idiv
sti
hlt
loope
incb
cld
ljmp
lock
int
stc
cmp
aas
sar
cmc
shl
in
dec
out
rolb
xor
sti
leave
xlat
std
out
sti
in
mul
sbb
cld
shr
cld
fsubrp
int
loope
out
enter
jmp
icebp
ror
cmp
repnz
test
aam
in
xchg
mov
aas
fxam
xor
enter
fdiv
int3
in
ss
lret
loopne
rcll
shl
leave
ret
in
ds
out
cli
repz
rol
cmp
cld
repz
filds
orl
cli
lds
ss
out
lock
loope
rcl
frstpm(287
in
loop
loopne
mov
xor
jmp
xor
ljmp
cmpb
fisttps
int
xchg
shr
in
out
aaa
fmul
aaa
dec
ljmp
in
cmpl
adcb
aaa
out
cld
enter
int3
in
roll
orb
in
loop
out
fdivs
cmp
imul
lret
idiv
faddp
icebp
mov
mov
xor
adc
mov
andl
add
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
push
pushl
call
jmp
adc
mov
push
addl
push
test
je
mov
mov
xor
mov
sbb
jmp
xlat
aad
ror
cmpsb
xchg
jg
and
xor
negb
jle
mov
or
out
fstpt
idiv
neg
cmp
neg
test
test
shl
addb
fsubp
shl
addl
repz
in
enter
in
in
sarl
cmc
sti
jmp
jmp
fisttpl
stc
cmp
clc
in
xlat
cld
cmp
xor
cmp
jmp
mov
fucomp
out
out
jmp
stc
lret
aam
cmp
int3
clc
aas
cmp
out
fcomi
mov
jmp
mov
lock
fdivr
clc
sti
jmp
xlat
sub
ds
mov
mov
ljmp
in
cmp
in
idiv
jecxz
sub
int
loope
out
icebp
lock
sar
repz
cmp
aas
cmp
cmp
out
stc
mov
shrb
aam
jmp
fcmovbe
fcmovnbe
in
cmp
in
cld
orl
ljmp
lret
into
cli
loope
loope
loope
mov
stc
out
mov
in
jmp
aad
aaa
fucomi
cmc
hlt
cmp
icebp
cmp
int3
loopne
mov
int3
in
jmp
out
test
stc
cmp
xlat
out
shl
loope
idivl
cmc
out
in
in
jecxz
nop
std
shr
mov
aad
out
xor
in
clc
sarl
fistpll
fdiv
int
ds
ljmp
xchg
in
into
mov
icebp
icebp
call
fucomp
cmp
repnz
in
call
out
mov
shr
mov
int3
not
int
f2xm1
rcl
into
aas
test
sti
iret
orb
std
addb
div
jmp
sub
jmp
test
cld
fdivr
in
out
mov
repnz
in
test
imul
fcmovnbe
out
xor
xor
loope
clc
loop
in
lret
in
loope
hlt
divb
ror
aam
cmp
loopne
repnz
call
test
fxch
int
in
aam
lret
fxch
out
int3
repnz
aas
icebp
lock
out
ret
or
imul
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jb
sub
mov
add
add
sbb
jmp
int3
fstp
int
ficoml
fstps
mov
add
add
sbb
fdivr
xlat
out
mov
mul
ret
cmc
lret
ljmp
aas
iret
out
mov
jmp
test
call
xor
out
test
in
cmp
addb
enter
jmp
out
cmc
out
das
in
lret
cli
jmp
test
cmc
shl
mov
xlat
fadd
loopne
xchg
lret
jmp
lret
in
into
fsubr
jmp
int
cmp
ret
lds
std
fcomp
test
lock
jmp
int3
filds
neg
test
ret
fstl
out
in
xor
clc
cmc
repz
sarb
icebp
ret
cmc
aas
enter
cli
in
fucomi
fld1
xchg
nop
out
in
xor
jmp
idivb
loop
faddl
jmp
xchg
aam
or
jecxz
aam
cmc
shl
jmp
cli
out
filds
loopne
in
mov
cmc
jmp
ror
sti
aad
fmul
fcmovnbe
in
cld
rcr
in
mov
jmp
in
test
test
fcomi
lock
lret
shr
fucom
loope
loop
jecxz
fimull
in
ror
test
xor
aam
fucomi
int
rcl
lock
roll
in
out
out
mov
hlt
sub
iret
jecxz
xlat
bnd
loop
fadd
mov
test
mov
aad
in
cmp
in
cmp
xlat
out
repnz
std
aam
test
aam
cmp
icebp
fcomip
xor
cmp
in
in
xlat
xor
ds
ret
out
test
xchg
rcr
out
das
xor
hlt
aaa
adc
cmp
adc
mov
orl
cld
int
cmp
jecxz
repz
out
sti
aad
lea
mov
cmp
int
xor
fidivrs
jmp
sar
cli
rcr
repz
xchg
xchg
out
loope
out
xor
xor
ss
fdivr
sbb
add
mov
sbb
jmp
rol
xlat
lret
rcr
push
adc
cmc
and
pusha
push
add
add
stc
in
jecxz
ljmp
lock
cmc
loope
repnz
xor
divl
fmulp
lret
in
xor
cmc
cld
addl
icebp
mov
ret
xor
shl
sti
add
iret
cmp
and
in
orb
subb
loope
sub
sti
loopne
fcmovu
shl
loope
leave
dec
in
int3
fcmovnb
loopne
fsubp
out
fdivs
iret
stc
not
stc
out
cmpl
call
sub
xrelease
repz
out
xlat
fidivrl
aas
in
repz
ret
nop
loopne
icebp
cmp
repz
iret
xor
jmp
repz
add
fcmovne
in
sbb
in
shl
call
in
aaa
in
cmp
call
ds
out
dec
mov
lds
and
call
fyl2xp1
test
hlt
xlat
ret
fidivrl
jecxz
in
cld
cli
out
xchg
imul
iret
repz
hlt
int3
aam
ljmp
mov
ljmp
test
in
jmp
ljmp
jmp
shr
addb
out
nop
fmulp
mov
loopne
ror
leave
fsubr
fistpll
rcr
repz
lret
loop
xchg
aam
xor
int3
std
cld
xor
cmp
rol
xchg
mov
xlat
int
out
repnz
out
xor
enter
aaa
out
out
in
aam
aas
out
repnz
std
fsubr
loopne
mov
mov
xchg
repz
jmp
leave
enter
cmp
sbb
and
fsubp
fcomp
in
loop
sti
mov
movl
xor
inc
loope
out
repnz
in
mov
std
xchg
in
enter
jmp
sub
fcmovnu
neg
loopne
shl
fucompp
cmp
ds
into
or
test
in
divb
sarl
enter
repz
fincstp
stc
repz
fld1
xchg
std
enter
xor
out
mov
xchg
adc
sub
xor
sbbl
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
movzwl
add
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
mov
mov
xorl
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
jmp
iret
lret
rcr
aad
enter
mov
and
add
add
into
dec
repnz
repz
fcmovu
ret
fcmovnu
enter
jecxz
fucom
into
shr
xchg
leave
lock
rcl
jmp
cld
in
loopne
aaa
sti
out
jecxz
call
into
in
test
aaa
fcom
out
clc
lock
cli
xor
lock
cli
addl
fdivr
int3
test
xor
iret
shr
out
ljmp
aas
loopne
sub
orb
ror
shr
shll
jmp
out
clc
iret
cmp
cmp
adc
ljmp
lret
xchg
rcl
in
sub
cli
aas
into
div
int3
sti
repnz
cmp
idivb
mov
or
iret
in
ss
loope
ljmp
rcl
xchg
testl
hlt
xor
sti
fldln2
repnz
int
lret
aad
xchg
fcmovnu
clc
ret
loop
fucomip
cmc
int3
out
in
repz
out
fldl2e
stc
jmp
in
sar
xlat
repz
fmul
jmp
jecxz
into
in
stc
ret
icebp
out
icebp
leave
icebp
shl
sti
out
cmp
rolb
lea
lret
loope
xchg
ljmp
fld
out
in
cld
xor
rcr
out
fdivr
idiv
ror
nop
mov
adcl
cmc
jmp
loop
aas
test
mov
call
int
xchg
lock
idiv
xor
cmc
iret
int
hlt
std
rolb
rol
fldln2
ret
out
clc
ficoms
into
cmp
rcr
cmp
fidivrs
loope
jmp
mov
clc
filds
in
in
sub
out
in
ljmp
cmp
hlt
mov
std
loop
mov
rcll
in
icebp
repz
cli
xlat
in
aam
in
jmp
in
out
cmp
jmp
xor
jmp
ljmp
clc
cld
xchg
shl
jmp
aas
lea
repz
loop
div
out
cmp
inc
aas
std
test
cmp
fimull
test
stc
lret
mov
add
mov
mov
movl
je
movl
cmpl
je
cmpl
jne
pushl
push
call
xor
add
dec
mov
jmp
adcl
mov
xor
decl
jmp
rol
xlat
aad
fstp
lds
fimuls
sbb
add
add
int3
in
mul
fcomp
int3
ss
loopne
sti
mov
loope
xlat
xchg
int
popl
jecxz
ljmp
xor
clc
ds
lds
leave
repnz
shl
aam
ret
in
cmp
std
loopne
repz
aad
loopne
clc
lret
cmp
ljmp
int
clc
cmp
iret
stc
xor
fprem
shl
repz
shr
cli
test
loope
ljmp
enter
out
cmp
rcr
in
fucom
cli
fdivr
mov
fdivr
pop
fxch
ljmp
cmp
in
ds
lock
jecxz
cli
rcl
ljmp
add
add
repz
repz
cmp
sti
shl
fnstsw
loopne
aam
idiv
lret
out
call
sub
cmp
jmp
cli
out
jmp
iret
sti
jmp
stc
int
int3
out
repnz
sub
repnz
cmc
sar
icebp
cmp
rcl
std
loope
div
les
cli
out
frndint
fdivp
out
xchg
loope
ljmp
xor
jmp
sbb
jmp
leave
loop
addb
in
shlb
cmp
rcl
lock
fildl
mov
sub
out
and
jmp
rcl
loopne
cmp
fcmovb
test
loope
out
mov
cmc
orb
int3
in
fnstcw
jmp
icebp
cmp
cmp
lret
in
in
std
int
loope
bnd
out
fsubr
iret
xlat
int
out
push
jecxz
ret
fucomi
out
loope
xchg
enter
fmul
lock
fmulp
fcmovu
aam
mov
loope
iret
lock
cld
mov
in
out
lret
icebp
out
lock
cmp
idiv
hlt
jmp
jecxz
ljmp
in
xor
imul
hlt
shl
cmp
cmp
loopne
leave
ljmp
out
in
icebp
xor
hlt
lret
ljmp
inc
movb
fdivr
add
movl
cmp
movl
jne
andl
pushl
xorl
call
mov
xor
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
xor
add
cmp
je
pushl
pushl
call
jmp
aam
fadd
fst
aam
add
jle
nop
adc
lret
add
add
xchg
fmull
jmp
repz
ljmp
fdiv
jecxz
in
mov
ret
cld
mov
div
xor
cmp
xlat
fst
cmp
in
aas
stc
ret
out
in
orb
sub
in
rcl
loopne
adc
test
clc
fucom
sti
orl
vpsubsb
fadd
cmc
ljmp
xchg
jecxz
out
fdivr
mov
adcb
int3
fcom
out
out
ss
sarb
cli
mov
and
out
in
mov
out
std
test
in
fldl
lret
cmp
test
xor
cmp
out
call
hlt
fptan
jmp
jecxz
leave
leave
loope
jmp
xchg
repz
repnz
repnz
out
iret
int3
out
int3
cmp
fadd
ljmp
iret
cld
adcl
cld
ds
out
into
in
out
cmp
lret
les
repnz
into
iret
int3
int
ret
out
stc
cmp
int
xor
jmp
int3
in
fdivr
into
loopne
out
mov
jmp
lret
jmp
fnstsw
lock
std
shr
enter
int
lret
int
std
xchg
jecxz
cmp
out
imul
ds
loope
cmp
ffree
cmp
test
xchg
icebp
hlt
cmc
cmp
cmp
xor
sarb
sti
lock
aam
jecxz
leave
loope
lret
in
aam
repnz
stc
stc
not
ret
lds
test
leave
out
fiaddl
ljmp
out
faddl
xchg
stc
test
call
enter
jecxz
call
in
aaa
lret
loope
aas
loopne
jecxz
out
mov
movl
sti
xlat
cmp
int
test
rcl
rcl
cld
loope
leave
loop
int3
jmp
out
les
in
int3
ror
incb
inc
mov
mov
mov
xor
add
jmp
rcl
int
ffree
fstpl
inc
stos
mov
sub
jle
add
xchg
in
jecxz
out
shr
repnz
rcl
rcr
in
repnz
mov
jmp
fdivr
xchg
shl
iret
int3
in
cmp
cmp
lock
xor
out
into
shl
test
rolb
in
in
in
lret
xchg
shl
hlt
cld
cmc
rcl
lock
aam
in
aam
xchg
aas
int
iret
rorl
ret
clc
fcmove
xor
repz
repnz
faddl
int
sar
vpslld
repz
not
cmp
in
stc
mul
loope
idiv
cmp
out
bnd
jmp
test
xor
xor
jmp
in
cli
fucom
not
rcr
mov
cld
leave
loop
in
incl
leave
cmp
imul
ljmp
cmpb
idiv
jmp
jmp
mov
orl
cld
clc
leave
out
repnz
in
loop
into
loopne
add
out
std
test
out
out
roll
out
ss
fcmovbe
call
loope
test
mov
test
cld
mov
roll
ss
cmp
enter
addl
enter
fldl
jmp
lret
out
xor
fsub
jecxz
lock
fldl
jmp
adcb
lock
into
or
loop
loope
out
into
sarl
cmp
cmc
in
std
rol
aam
xor
std
call
leave
stc
mov
stc
xchg
cld
mov
shl
in
ljmp
cmp
aam
std
jmp
jmp
out
lock
ljmp
std
stc
loope
call
lret
fadd
lret
ljmp
out
enter
xlat
cmc
cmp
in
aam
aam
ljmp
repnz
addl
fsubrp
fldz
loop
jecxz
pdep
mov
ljmp
xor
stc
xor
cmp
jmp
enter
adc
in
mov
jmp
int3
aas
rol
fst
fadd
ljmp
pop
or
add
add
fadd
ret
ljmp
iret
iret
lock
aaa
cmc
xor
idivl
shlb
clc
cli
clc
stc
loopne
loop
clc
int
in
enter
div
cmc
in
cli
in
aam
fdiv
ds
into
iret
cmp
div
frndint
jmp
and
nop
std
orb
xor
in
repnz
enter
cmp
xlat
fcmovu
xchg
cld
lret
xchg
mov
loope
or
sti
aaa
sti
cmp
shl
clc
cld
mov
ret
in
jecxz
lret
jmp
fdivs
div
ds
cmp
jecxz
loope
hlt
aad
lret
fxch
sti
out
call
icebp
int3
cmc
fcomi
int3
lret
out
fnstsw
inc
hlt
mov
filds
roll
ffreep
jmp
out
fsubr
div
ds
not
div
ret
fcmovbe
int
cld
xchg
mov
shr
hlt
loopne
lret
lret
enter
loope
and
hlt
jecxz
fisttps
call
clc
call
into
stc
cmp
rol
iret
lret
roll
sub
repz
lret
fsubr
sar
fadd
aam
std
in
in
out
in
xor
sub
cli
xor
sti
lret
cmp
ret
rol
fdiv
xchg
xchg
fcmovb
addb
aam
jmp
xlat
idivl
leave
sti
xchg
rorb
ss
cmp
cmp
icebp
rcl
loopne
loop
test
lret
loopne
aam
nop
out
icebp
aam
iret
out
hlt
fsubrp
xchg
xlat
test
ret
roll
xor
repz
aad
in
hlt
lret
ror
ds
sbb
mov
idiv
fyl2x
xchg
ljmp
jecxz
jmp
xor
cmpb
ret
idivl
repnz
aas
ljmp
rcl
jecxz
sarb
iret
cmp
out
test
aad
hlt
test
fcmove
xchg
jecxz
xchg
xlat
cmp
jmp
inc
loopne
inc
in
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
jmp
aas
ror
fcomp
fnstcw
dec
int
out
xor
das
add
add
in
lret
xor
fcmovb
loopne
incb
sti
loope
xchg
aad
hlt
cmp
in
loopne
loop
add
loopne
leave
fimuls
and
out
shl
fmul
into
test
loope
ret
aam
mov
fists
xchg
in
xor
aaa
jmp
das
out
neg
fdiv
sbb
repz
repz
leave
mov
out
mov
jmp
repnz
iret
shr
div
aad
cmp
sarb
cld
out
jecxz
and
fsubrp
xchg
out
jecxz
lock
cmp
xlat
loope
clc
ror
cmc
aam
sti
fucomi
jmp
mov
sti
repnz
nop
in
into
jmp
out
fnclex
hlt
repz
cld
fadds
fcmove
in
cmc
mov
xor
jmp
into
aaa
cmp
aas
aad
sbb
aam
jmp
add
sti
xchg
mov
mul
out
out
xor
ds
filds
repz
clc
fucomp
out
enter
call
jmp
ror
cld
hlt
fpatan
fucom
addb
in
jmp
xchg
test
xor
xor
into
ror
lret
xlat
aaa
jecxz
cmp
mov
loopne
mov
nop
loope
call
ljmp
xor
jecxz
fstp
out
out
jmp
call
hlt
in
div
sub
cli
into
rol
hlt
jecxz
stc
rorb
fxch
orb
leave
jmp
xlat
enter
shll
std
aas
icebp
shl
cld
enter
movl
rol
fcmovu
into
clc
repnz
loop
fdivr
ljmp
fdivrp
loope
in
cli
xor
int
sarl
loope
loop
out
aas
testb
cli
test
out
ljmp
out
cmc
out
into
divl
int3
loopne
in
test
aam
cmc
ljmp
test
test
cmc
leave
shl
in
leave
ljmp
fstpt
fdivr
sar
orl
hlt
xor
mov
mov
jmp
aas
xlat
xlat
rcl
ror
fld
cs
and
or
add
add
xor
cmp
ljmp
and
fsub
fimuls
in
out
xchg
cs
ret
hlt
cmp
ljmp
fsubrp
cld
enter
sbb
int
cmp
lock
int
in
ljmp
loope
ret
sti
ds
loopne
test
sbb
into
xchg
in
cli
out
in
aas
cld
loop
lock
in
out
ret
adc
fabs
fcmovnu
call
int3
jecxz
neg
stc
lret
lock
fcmovu
loope
jmp
filds
rorl
vpsrlq
cmp
in
hlt
test
clc
shl
in
mov
std
fdivrp
test
hlt
aam
xor
in
in
int
fdivrl
cmp
iret
repz
loop
lret
xchg
loope
int
rcl
xor
lret
lret
ror
ljmp
rol
adc
in
orb
xchg
shl
clc
ljmp
test
out
mul
loop
lock
test
xor
ss
cmc
aad
lret
fdivr
fcomip
xor
in
stc
stc
clc
leave
fcmovne
loop
int3
cld
mov
xor
xor
xlat
fcmovnu
in
fdivrl
ret
jecxz
hlt
hlt
test
ret
mov
out
loopne
mov
int
jmp
rcl
test
iret
roll
fcomi
ljmp
jmp
test
loope
shl
iret
xor
lock
int
cmc
jmp
cmp
xor
fcomip
mov
call
in
shl
out
jmp
ror
int
aam
fdivrs
sar
faddl
fadd
in
iret
fsubp
xor
fcom
shll
xlat
idiv
aam
aam
not
shl
mov
call
xor
cmp
shl
clc
cld
int3
fidivrl
sbb
mov
mov
roll
xor
xlat
in
idivl
fcomi
loope
into
test
icebp
mov
mov
idivb
aaa
stc
cmp
leave
neg
cmp
push
int
ret
stc
in
xchg
fldl
or
jmp
into
aam
xlat
int3
fcmovnbe
frstor
nop
jmp
cmpsl
mov
add
mov
repz
xor
shl
xlat
xor
shr
idivb
ds
cli
mov
rorl
rolb
int3
xlat
cli
shll
xor
cmp
cmp
fimuls
fmul
nop
out
in
stc
sti
ror
imul
ror
aam
in
clc
mov
fadds
repnz
shr
iret
into
dec
shr
int
hlt
iret
test
sti
out
std
ret
out
xchg
and
xor
out
ss
movl
int
incb
clc
out
cmp
into
iret
cmp
adc
in
in
loopne
ret
filds
loop
enter
int3
std
int
cmp
orl
mov
cs
into
out
in
cmp
out
cmp
repnz
out
lock
testb
fstl
out
hlt
out
xor
iret
int
ret
xchg
fisttpll
mov
fucomip
repnz
fsqrt
out
call
lock
stc
stc
xchg
xchg
out
or
int
in
jmp
stc
rcr
sti
hlt
addb
vmovq
enter
lret
out
cli
repz
sbb
stc
rorb
loope
mov
xchg
loope
shl
lret
ret
xor
clc
repnz
iret
shl
jmp
loop
mov
flds
loop
xor
icebp
ret
clc
xor
xor
int
cli
loope
shl
faddp
call
jmp
icebp
ljmp
stc
ss
aam
out
rol
cmp
fprem
stc
clc
jmp
fucomi
ret
repz
aad
ror
in
aam
loope
sub
cmp
fcompp
fiaddl
mov
sub
ror
clc
int
lret
aaa
repz
xor
cmc
cmc
loopne
lret
shr
jmp
ljmp
int
aaa
aas
repnz
out
fmuls
orl
sar
jne
call
jmp
lret
rcl
fstp
xchg
sti
inc
in
dec
sub
pcmpeqb
jle
xlat
loope
int
in
iret
xchg
rcl
loope
rol
mul
xor
shl
fcomp
les
mov
decb
aad
int3
int
cmc
cmc
in
notrack
jecxz
sti
jmp
jecxz
test
in
lret
jmp
rcl
sub
test
sub
jmp
sbb
in
xlat
mov
addb
jmp
loop
in
in
sti
ljmp
test
lret
jmp
xchg
test
loope
int3
into
ss
fildl
adc
jecxz
mov
in
in
sar
jmp
adcl
stc
cmp
add
aas
lds
enter
adc
xchg
aam
xor
icebp
jmp
int
aam
call
fdivrs
rcr
out
out
in
cmp
jmp
xor
int3
in
repz
iret
int3
shl
sti
loope
jecxz
xlat
mov
sti
into
stc
std
cld
xchg
xor
repnz
xor
loope
and
aas
loope
loop
xchg
lea
roll
sti
repnz
loopne
shr
sub
faddl
jecxz
icebp
loopne
ljmp
icebp
out
ss
xlat
aas
jecxz
shr
int
rolb
aam
int
shl
fucomp
rcl
fsub
filds
dec
orl
loopne
cmp
xlat
call
shr
lock
xlat
xchg
aas
mov
jecxz
in
iret
call
ret
int3
out
lret
fdivr
cmp
lock
in
jmp
int3
in
jmp
lock
in
aad
cmp
cmc
adc
rcl
repz
cli
loopne
sub
mov
leave
sti
orb
rcr
xor
in
int3
aam
fildl
aad
call
loop
loopne
in
xor
fcmovu
ds
int
adc
std
test
fadds
sti
out
iret
sar
faddl
cmp
jmp
out
std
repnz
iret
mov
jmp
vshufpd
ror
adc
push
jge
pop
clc
cmp
jle
add
in
hlt
fmuls
stc
test
sti
ljmp
fcmove
in
cmp
cmp
fcomi
repz
loop
ret
clc
dec
or
lret
icebp
loope
xlat
ss
cli
lret
cld
xlat
fcom
addb
fimull
mov
mov
xchg
imul
aad
int
cmp
cmp
lret
in
xchg
cld
ret
clc
shl
xchg
jecxz
in
jecxz
rcl
xor
into
cmp
ffree
aad
testb
loopne
lock
xchg
lock
sarb
in
int3
into
out
cmp
fcmovb
cld
test
testb
mov
lock
xlat
aaa
cmp
fmul
repnz
shr
cld
ds
cld
shl
rol
in
mov
lock
in
xor
enter
in
aad
fstp
repnz
cmc
and
fisttpll
shl
lock
rcl
not
fucomi
in
cmpb
rol
ffree
neg
loope
hlt
out
int3
fcmovne
lret
in
xchg
rol
lret
fucomip
hlt
cld
lret
shlb
fpatan
rol
jecxz
xlat
sbb
xchg
xor
xor
rcl
out
jmp
fcom
xlat
call
ljmp
xchg
out
aas
test
xlat
fstpt
cmp
out
faddl
lret
jmp
iret
mov
divb
out
jecxz
repnz
sub
cmp
ret
rcr
loope
test
xchg
out
xchg
cld
in
iret
rorb
shl
cmp
fdiv
leave
mul
out
fiaddl
xlat
std
std
mov
loopne
sub
in
cmp
repnz
roll
jmp
fadd
xchg
div
shr
in
in
ss
aas
rcl
cli
loopne
rolb
ljmp
mov
in
jmp
lock
shr
cmp
lret
bnd
neg
test
icebp
out
mov
out
nop
rorl
out
repnz
fmul
lret
repnz
aas
incb
xor
loopne
call
in
xor
leave
cmp
repnz
mov
xor
jmp
int3
aas
ret
sbb
roll
add
jle
add
repz
in
stc
mul
repz
jecxz
call
mov
jmp
call
ror
leave
aam
cmp
xlat
jmp
mov
repnz
in
in
ret
aaa
jmp
lret
clc
clc
cmp
stc
les
cmc
test
mov
xchg
mov
jecxz
xchg
call
xor
loopne
fldl
rol
mov
jmp
mov
iret
hlt
in
in
in
std
hlt
in
div
int
aas
add
out
testb
loopne
ljmp
shl
int
clc
out
shl
lret
cmp
out
cmc
in
xchg
jmp
lock
std
popl
icebp
lret
fdivrs
xlat
cld
call
xchg
jmp
enter
in
mov
call
xlat
xlat
shl
call
stc
roll
aam
cld
fdivr
stc
out
loope
lds
das
icebp
stc
icebp
cmp
int3
div
sti
cmp
xchg
mov
lock
aaa
divb
lret
aam
std
hlt
stc
cmp
fsubr
shl
testb
in
push
out
in
xor
lret
jmp
lock
mul
movb
stc
jecxz
filds
ret
out
cs
in
fldl
loopne
mov
sar
aad
leave
orb
not
jmp
cmp
hlt
in
jmp
adc
aad
or
test
jmp
rcl
jmp
iret
call
bnd
fneni(8087
rol
shl
out
mov
testl
leave
in
fsubr
cld
push
cmp
loopne
out
ror
cli
repz
aad
loop
xchg
aad
fcom
jmp
std
aaa
cld
repz
shl
rol
fcomp
sti
and
orl
clc
out
in
jmp
loope
in
neg
out
xlat
test
lret
out
lret
in
jmp
cmp
out
ljmp
sti
stc
cli
call
xchg
mov
xchg
and
enter
enter
add
rol
rcl
rol
aad
sahf
xor
icebp
mov
shll
add
cli
hlt
enter
aad
adc
hlt
call
orb
xchg
shr
iret
aad
aad
aad
push
sti
aas
stc
fcom
inc
rcl
out
out
stc
sub
mov
aaa
aaa
enter
iret
hlt
hlt
lret
repnz
in
adc
std
fisttpl
out
test
cld
nop
shl
stc
cmp
aaa
lds
lret
iret
out
jecxz
fdiv
hlt
cmp
lret
fsubp
lock
call
sub
in
cmp
out
icebp
hlt
lock
iret
cmp
idiv
and
xchg
ljmp
lret
ss
out
imul
fdivrl
cli
jmp
fmul
jecxz
jecxz
jmp
lret
xchg
in
repz
fdivrs
jmp
cmp
add
stc
xabort
loop
cmc
in
xor
das
stc
ror
int3
cmc
lret
cli
xlat
cmp
iret
sbb
ret
mov
faddp
test
mov
faddl
icebp
leave
rcr
neg
shr
repnz
lock
loopne
jmp
mov
xor
xor
fcmovnb
fistpll
and
loope
out
loope
lret
call
leave
out
icebp
fdivr
cmp
lret
into
clc
sar
hlt
lret
out
sbb
xchg
cld
sub
loop
neg
les
int
cmp
loopne
fsubp
fmuls
loop
mov
jmp
fdiv
jmp
adc
addb
hlt
cmp
lret
xchg
jecxz
in
shr
repnz
sarb
aam
cli
xor
and
repz
fiaddl
in
ljmp
rcl
cli
stc
cmp
sti
out
cmp
fldl
addb
aad
xor
ss
sarb
in
xor
fimuls
lret
fstl
ss
rcr
cmp
cmp
stc
adc
orb
xchg
aas
hlt
aad
out
fucomi
sarl
leave
pushl
repz
call
loopne
jne
jmp
aad
mov
mov
ljmp
cmp
jle
fsubp
enter
cld
xor
stc
loop
shl
icebp
icebp
jmp
mov
xchg
call
out
call
in
cmp
xlat
jmp
cmp
aad
ret
jmp
mov
xor
out
ljmp
fdivp
std
aam
in
movl
xor
aad
out
fucomp
cmp
xchg
mov
mov
xchg
sar
fcmovu
repz
cli
sti
cmc
fiadds
cli
cmp
lret
out
hlt
test
xor
ss
aad
fdiv
sti
hlt
shr
loope
addl
mul
iret
sbb
loopne
in
ss
shl
cmc
lret
lret
cld
out
ret
ret
repz
out
enter
in
int
repz
rcl
sar
int3
loopne
cmpb
cmp
loop
cld
enter
out
into
out
xor
cmp
std
in
ds
lret
in
xor
cmp
aam
stc
hlt
decl
dec
xchg
xchg
xlat
stc
int3
in
repnz
icebp
stc
repz
lock
out
hlt
hlt
repz
ret
jmp
ror
xorb
repz
cli
lret
aad
aad
sarl
std
mov
leave
mov
call
loopne
out
into
jmp
cli
shl
aaa
rcr
cmc
ret
cmp
rol
loope
fucomp
sbb
in
mov
mov
in
int3
jmp
das
lret
xor
cmp
loopne
test
sti
ds
ffreep
in
stc
sti
out
xchg
cmp
cmp
cmp
aad
cmp
sar
icebp
not
hlt
std
clc
hlt
test
xchg
int
iret
repnz
icebp
cli
icebp
icebp
fnstcw
leave
neg
repnz
out
in
fscale
test
call
jmp
xchg
nop
out
aam
in
aad
sar
cmp
test
fdivrp
cld
mov
ret
aad
leave
leave
in
ljmp
clc
xor
in
lock
imul
cld
cli
loopne
add
clc
out
in
in
into
incl
fdivrp
int3
cmc
ss
aaa
cmp
shl
fildl
enter
loopne
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
jmp
leave
aam
aad
int
fisttpll
scas
xchg
add
add
incb
filds
out
enter
not
loope
cmc
cli
jmp
leave
loope
lock
lock
cli
xor
cld
repnz
clc
cli
loope
cli
xlat
lret
xchg
jecxz
in
in
fucomi
divl
icebp
icebp
jecxz
loop
xor
shr
decl
jecxz
mov
aam
in
hlt
repnz
aam
ret
rcr
aam
fadd
mov
sbb
out
cmc
xor
loop
fdiv
jecxz
iret
sar
hlt
loopne
lret
test
sar
filds
out
in
ret
xlat
int
sti
jmp
rcr
aad
not
jmp
lock
jecxz
lret
shl
clc
repz
div
ds
mov
out
test
xchg
cld
jecxz
xor
stc
cmp
shl
jecxz
icebp
xor
in
out
test
dec
rorb
shll
jmp
out
cmp
fcmovbe
icebp
aam
aad
out
stc
stc
fcmove
xchg
xchg
in
out
div
xor
icebp
std
hlt
call
stc
cmp
xlat
stc
lock
xchg
xchg
loope
loope
clc
lret
cld
leave
out
lock
std
cmp
ss
out
clc
div
lret
lock
fstl
iret
jmp
cmc
shl
cmp
fdivp
out
out
std
jecxz
leave
lea
test
int3
cmc
xor
xor
cmc
in
iret
fidivrl
rcr
les
stc
in
xchg
ror
cmp
test
aad
in
fcom
ret
mov
mov
call
mov
enter
ret
in
xor
iret
in
xor
cmp
orl
out
ret
fidivl
sarb
shr
loopne
fdivr
int
mov
sti
loop
fcomp
out
leave
test
int3
xor
aam
cld
fcmovbe
in
in
rcl
sar
out
int
jmp
jmp
loope
jmp
sti
ret
sti
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
jmp
enter
fcmovu
int3
aam
in
add
adc
rol
add
add
movb
mov
cld
out
lret
cmc
xchg
int
ss
ror
repz
hlt
faddl
fdivr
ljmp
loop
mov
out
das
xlat
loop
leave
cmp
cmp
clc
cmp
stc
out
into
ret
mov
sti
cli
fdiv
lret
xchg
popl
in
in
xor
icebp
xor
cmp
cmp
xchg
fisttpll
icebp
fiaddl
rcl
fcom
fcmovnu
in
repnz
xlat
ret
cmp
int3
ret
mov
leave
in
into
mov
mov
cs
loop
shl
hlt
jmp
repnz
jecxz
adc
mov
mov
out
int3
rcl
loopne
in
jmp
xlat
dec
aad
in
into
out
faddp
ror
out
lock
out
out
xchg
mov
int
xor
cmc
icebp
cld
int3
loop
repnz
shl
stc
icebp
cld
std
mov
xchg
fucomi
mov
fcomi
test
xor
div
cmp
cmp
call
sarl
aam
aad
xchg
sub
cli
loopne
in
xchg
into
xlat
ss
sub
enter
aad
shl
rcl
leave
loopne
call
out
mov
in
xlat
sti
xor
out
xor
adc
xlat
fisttpl
call
shrb
in
ret
repz
aas
lret
iret
sbb
xchg
out
loopne
sti
cli
rcll
fxch
sub
icebp
cmp
aam
cmp
sti
out
leave
mov
into
int
call
in
lret
lock
jmp
sbb
jmp
out
sbb
mov
int
idiv
icebp
clc
out
iret
repz
fxam
repnz
shr
aas
addb
lock
clc
shr
fdivr
std
testb
fchs
out
lret
fcmovne
xchg
repnz
aam
out
hlt
leave
cli
cmc
cld
xlat
idiv
fnstsw
clc
rcr
aad
cld
test
ret
std
in
mov
xchg
int3
sub
out
hlt
ljmp
test
lret
out
ror
lret
into
in
loop
iret
shl
cli
ss
not
ficompl
lret
jmp
aas
int3
mov
std
int
pushf
pusha
dec
push
push
lds
jle
add
cld
into
fdivrp
fptan
or
test
int
sbb
lret
fdiv
clc
vpsubusw
jecxz
test
mov
jmp
fiadds
into
in
jmp
stc
repz
or
call
out
in
leave
repnz
call
sti
icebp
rcl
out
ret
cld
repnz
xchg
xchg
mov
in
std
sbb
int3
aam
lock
fnstcw
aaa
aad
cmc
out
fnstsw
leave
fdivr
loope
xchg
roll
xor
rcr
in
cli
icebp
stc
fcom
xchg
into
xor
not
ss
cmp
rcl
fsubrp
cmc
in
stc
jmp
loope
addl
cmp
in
lock
iret
lret
xlat
loope
out
jmp
xlat
cld
les
icebp
ljmp
in
in
cld
fsubrp
fcmovnbe
repz
aam
test
int
nop
sti
out
int
xor
fdivs
test
aad
fdivp
repnz
cmp
fmul
ljmp
hlt
out
in
aad
xor
shr
xlat
cmc
loop
mov
std
loop
test
or
sub
aad
enter
idivl
shlb
loopne
test
jmp
mov
jecxz
fucomp
adc
in
imul
lret
in
lret
leave
ds
sarb
loopne
fldl
loopne
mov
iret
jmp
repz
cmp
iret
icebp
cmp
clc
sti
fisttpl
adcb
repz
aam
in
out
idivb
in
fmull
stc
loop
xchg
xor
ss
ds
jmp
test
test
test
xchg
dec
xchg
jmp
imul
lret
stc
div
sarb
call
mov
mov
iret
xchg
lret
xchg
out
rcl
ljmp
addb
icebp
fsubrp
mov
loopne
rcr
fdivs
fmul
enter
xchg
dec
jmp
lret
int3
fcmovnu
mov
out
mov
add
add
sti
out
in
xor
loopne
xlat
adc
vpsadbw
nop
hlt
xchg
sub
ror
out
int
int
fdiv
repz
loope
fxch
mov
out
mov
test
cmp
call
clc
test
testb
leave
mov
fimull
in
loop
out
cld
int3
sti
cmp
ds
icebp
fcomip
repz
call
clc
mov
rorl
lret
into
aaa
ds
int
aam
hlt
not
sbb
in
fmul
cld
in
icebp
iret
icebp
not
in
xor
cli
sti
xor
jmp
shr
cld
orb
loop
int
hlt
enter
in
cli
fcmovne
fdiv
aas
repnz
sar
rcr
repz
leave
out
std
lret
in
cmc
mul
lret
aam
cli
ss
test
cmc
sti
in
xchg
fsubrp
rcr
jecxz
mov
cli
out
fucomip
shl
fsin
cmp
mul
ret
leave
mul
sub
and
in
out
ljmp
in
clc
jmp
in
clc
lock
std
xchg
out
mov
loopne
fadd
cmp
icebp
in
call
cmp
rcr
ret
lds
leave
mov
div
shl
fsubr
sti
ss
out
hlt
cmp
fcmovnbe
mov
xchg
out
loopne
cmp
fsub
aad
xlat
int
cmp
aas
ds
cld
sub
fsubrp
lock
repz
sub
xor
cmp
in
test
test
mov
repnz
shl
enter
into
jmp
out
out
enter
nop
dec
repnz
cld
std
in
int
repnz
aad
cmp
fld
fcom
ret
cli
in
fmulp
stc
out
cld
fists
ss
shll
cmp
fdiv
repz
fiaddl
in
sti
call
repz
stc
lret
fcomp
loopne
inc
lock
fcmovb
out
in
idiv
test
xor
fisttps
shrl
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
mov
rcl
ror
fnstcw
lret
inc
out
inc
inc
jle
add
add
ret
loope
cmc
fdiv
iret
clc
aad
in
int
ds
sub
int3
out
xchg
shl
into
cmp
ret
hlt
fprem
cld
cmp
sti
cmc
aam
aad
std
loop
jecxz
fiadds
repnz
nop
jecxz
xor
in
fadd
cmp
fcmovne
cmp
jmp
filds
clc
cmpb
test
icebp
shl
out
jmp
lret
lret
jmp
std
sti
stc
test
fcmovne
mov
std
call
fcmovnu
aad
cmp
lock
div
loope
jmp
loop
vpor
loope
jecxz
rol
fdivs
out
fnstenv
cmp
int3
rcr
xchg
cli
loopne
int
in
xchg
iret
ror
cmp
dec
cmp
std
std
aaa
xchg
xchg
movl
shr
out
cmp
shr
aad
icebp
icebp
fcmovbe
jecxz
decb
loopne
mov
sti
mov
in
repz
ret
jmp
xor
imul
cmc
aam
jecxz
in
hlt
out
mov
jmp
and
ret
aam
enter
int
icebp
cli
shl
mul
leave
clc
out
lret
nop
icebp
test
icebp
out
nop
sub
aam
aas
cmp
in
movb
icebp
sti
xchg
adc
jecxz
repnz
xlat
hlt
lret
jecxz
stc
out
sub
jecxz
jmp
add
in
int3
iret
repz
aaa
repz
fiaddl
hlt
lock
xor
fisttps
or
shl
loop
fidivl
sarl
fstpt
cmp
xchg
mov
fcmove
fmull
idivl
aam
shl
xor
repnz
in
repnz
test
hlt
ljmp
mov
out
out
ret
sarb
xlat
repz
aas
int
hlt
fistpll
enter
cli
icebp
leave
xchg
imul
int
fcom
xlat
stc
fcmovu
into
cli
ret
fcmovnu
shl
std
shl
cld
mov
mov
repnz
lds
aad
xor
aas
in
lock
cmc
rcr
hlt
loop
ljmp
mov
jmp
aam
int
int
aam
xchg
inc
lret
cmc
inc
cmp
add
add
loope
iret
lret
aad
lock
fprem
lock
leave
repz
aas
and
xlat
sub
enter
mov
shlb
iret
bnd
ret
sar
sti
ljmp
lock
cmp
test
shl
rcr
ljmp
jecxz
xchg
test
out
ret
out
call
repnz
int
xor
xchg
sti
out
repnz
repnz
out
ss
jmp
fdivrs
int3
leave
clc
jmp
decb
fcmovb
sti
lock
nop
mov
les
xor
sub
sti
lret
lock
out
leave
jmp
xchg
cli
addb
call
cmp
cmp
aam
into
rcr
repz
xlat
repz
ffreep
in
mov
adc
xor
repnz
xor
sti
stc
fcos
fidivrl
mul
loopne
addb
nop
icebp
xchg
aad
aaa
ret
ss
call
in
loop
repz
out
jecxz
lret
xchg
aaa
out
iret
lret
out
cmp
enter
icebp
loope
cmp
in
in
testl
xor
cld
iret
fcmovnu
fdivr
in
fadd
jecxz
mov
enter
int
cmp
fildll
aam
xor
clc
cmc
ds
loopne
repnz
incb
test
mov
into
ljmp
leave
xor
cli
repnz
lock
loop
fcom
fsubp
out
ret
mov
sub
loop
xchg
mov
hlt
out
enter
xor
ljmp
repnz
lret
ljmp
fisttps
jmp
cmp
int3
cmp
xor
lock
ljmp
cli
lret
fxch
shl
out
filds
les
in
mov
in
mov
sar
out
ret
lret
repz
fcmovne
cld
ret
repz
fcmovnbe
in
xor
out
cli
std
xchg
in
int
in
int3
div
cmp
roll
aam
xor
mov
lea
jmp
rcr
int
stos
outsl
int3
nop
xchg
repnz
add
add
aad
xchg
fildl
in
xchg
out
in
not
shr
lock
out
aaa
ds
rcr
loope
in
clc
out
std
out
xchg
adc
jmp
std
not
sarl
into
xor
loopne
flds
in
xor
xchg
aaa
in
fcomi
sti
leave
fucomip
ds
fcmovnu
jecxz
fcomip
ljmp
lret
orl
repz
rcl
fsubr
aad
cli
jmp
nop
xchg
iret
repnz
mov
loope
jmp
in
fucomip
neg
in
shl
neg
test
leave
hlt
not
pop
nop
ljmp
aam
icebp
out
repz
aam
fmul
cmc
fmull
fdivp
call
jmp
xlat
aam
leave
icebp
fcmovnbe
sbb
cld
fcomp
jmp
roll
imul
ss
cli
fcmovu
jmp
aas
ljmp
and
sub
in
xor
xor
shr
rcr
stc
rcl
rol
add
out
test
out
ljmp
enter
ljmp
inc
cmp
jecxz
cmp
mov
fists
xor
cmp
shl
div
testl
out
fmull
call
fsubr
leave
shr
lock
cld
lock
jmp
clc
cli
mov
or
icebp
ret
ror
cld
out
cld
fcmovnu
aad
ret
orb
rclb
fadd
sar
repz
enter
cmp
jecxz
fdivr
aam
enter
sti
into
fldl
repz
xor
cmp
loopne
test
fcom
repnz
rolb
std
fcomp
into
call
lret
rcl
cmc
leave
aas
loopne
rcl
aaa
repnz
filds
lret
leave
lret
jecxz
enter
out
lret
fnstsw
shl
idiv
test
adc
loope
repnz
cmc
repz
iret
cmp
jmp
ret
xlat
fmul
fmul
rcr
test
mov
add
add
std
rcr
xchg
mov
fimuls
aad
xor
mov
icebp
lret
not
iret
fcomi
xchg
aam
mov
in
shl
out
aam
in
fidivl
aam
ror
idiv
out
not
fcom
frndint
xchg
aam
test
out
fdivr
cmp
idivb
clc
stc
aam
ret
div
shl
cmp
nop
or
xchg
neg
sub
aaa
ljmp
ret
aaa
repz
enter
lret
clc
add
loope
into
ljmp
lret
fxch
ret
aas
fiadds
fmulp
out
fisttps
in
cmp
aas
cmp
stc
ret
stc
lock
in
filds
call
aaa
hlt
jmp
xlat
ljmp
out
incb
fsts
enter
clc
xor
fidivrs
fldl2e
incb
std
incl
rol
ret
aaa
xlat
xor
fidivrs
addb
ljmp
shr
xor
jmp
call
xlat
rolb
std
mov
out
sub
aad
out
iret
xor
out
xlat
fucomp
cmp
ror
faddl
and
fiaddl
addb
ss
fcmovnu
shl
cmp
out
jmp
out
sti
fcmovu
xlat
ljmp
loope
xchg
fsub
ljmp
stc
cmp
jmp
loopne
stc
mov
mov
lret
fadd
fistl
sub
aam
in
jmp
cmp
ret
test
fidivrl
add
jmp
in
enter
test
jmp
fcomi
stc
std
rcl
repz
fsubp
loope
orl
iret
or
xor
xor
enter
iret
shl
add
mov
faddl
addb
int
int
cld
cmp
int3
loope
fldl
loope
mov
hlt
aad
cmc
int3
fincstp
sti
fdiv
je
mov
jmp
rcl
leave
int3
leave
fldt
outsb
jns
rolb
jle
add
leave
into
lock
jecxz
rol
add
ljmp
out
filds
out
out
imul
ss
cmp
add
mov
testb
aam
in
out
aad
xor
neg
aad
std
cmc
shr
fld
ljmp
fmull
fcmovbe
jmp
sti
fst
xlat
in
repnz
ret
out
int3
lea
xor
sarb
lret
cmp
test
xchg
fimull
xchg
int3
sti
jmp
lock
cld
repz
movl
sbb
xor
rcr
ret
in
out
int3
fildl
cld
aas
ds
fmuls
in
rolb
rcl
sub
xor
enter
ds
filds
fprem
and
mov
xchg
fcom
lret
xlat
aad
cmp
cmp
in
rcl
adc
std
mov
call
in
mov
icebp
stc
in
xor
sarl
sbb
rcl
xchg
jecxz
mov
bnd
out
aam
out
in
cmp
aaa
fucomip
cli
repz
loopne
ret
clc
leave
int3
xchg
into
addl
lock
in
ss
shl
sarl
test
cli
lret
rcr
sti
xor
lret
out
ds
lret
mul
rol
aad
loop
in
xchg
xor
xor
cld
enter
ds
std
enter
mov
fucomi
in
mov
xor
xor
aad
fcmovne
xlat
icebp
cld
bnd
bnd
cmp
mov
into
mov
into
test
sub
xor
int3
stc
cmp
filds
in
jecxz
orb
out
loopne
ret
fnstsw
ljmp
aam
aam
cld
orb
hlt
xchg
not
lret
out
clc
jmp
shl
in
cld
hlt
test
incl
out
lret
shl
call
push
adc
inc
addb
add
add
ror
fstp
ffree
pop
fiadds
xchg
and
add
add
fcmovnbe
ror
sti
ror
into
int
fdiv
lret
ljmp
jecxz
shr
jmp
xlat
fidivrs
iret
ret
neg
ffreep
cld
cli
nop
into
out
sti
iret
xchg
icebp
lret
clc
clc
cmp
cmp
rolb
test
test
fildl
call
ljmp
sar
stc
not
call
or
jmp
shr
xor
out
xor
idivb
out
cmpl
xchg
fimuls
ljmp
lock
in
hlt
fmul
out
fmulp
aad
clc
lock
loop
in
lock
mov
xchg
mul
fdivrs
ror
stc
aaa
std
stc
cmp
xlat
rol
std
movl
xchg
call
neg
cmc
fiadds
test
xor
in
loop
or
repnz
fmull
cmp
xor
cli
cmc
iret
out
into
std
lock
ret
test
fdivr
lret
xchg
sbb
out
iret
loopne
icebp
xor
cmp
repnz
int
aas
ds
xchg
fisttps
loopne
xorb
mov
jmp
ljmp
call
inc
addl
out
fadd
xor
into
int
lock
shl
jecxz
cld
fdivr
into
in
leave
repz
cld
addb
sti
sar
clc
mul
fsin
cmp
in
hlt
fcmove
and
test
aam
xor
hlt
fistpll
aad
les
stc
clc
testb
xchg
mov
jecxz
fdivrl
cmp
shr
loopne
out
fxam
ret
mov
fcmovb
fucom
repz
fidivs
out
xor
lret
repz
fstp
neg
aam
in
in
leave
mov
shl
int3
loope
out
out
lret
lret
xor
int3
cmp
shr
fdiv
ret
leave
out
clc
test
fdivrp
int3
loopne
in
xor
jmp
into
cmp
add
repz
cmc
out
out
test
fsts
push
pop
jmp
enter
int3
aam
pop
adc
test
into
scas
fcmovbe
add
add
int3
xchg
icebp
aas
loop
sub
lret
cmc
lock
iret
fidivrs
aam
enter
clc
in
ljmp
ljmp
shl
sar
cli
iret
shl
in
out
jecxz
lret
in
call
aam
ror
ljmp
lret
rcl
roll
xor
leave
lret
lret
loop
xchg
into
out
cli
aam
xor
fcmovbe
repnz
loope
fiaddl
lret
test
hlt
loop
xor
loop
cld
xor
fidivrl
sar
stc
in
repz
loop
shr
in
int
shlb
cmp
cmc
out
in
fdivr
jecxz
out
cmc
jmp
in
mov
xchg
xor
fidivl
aam
fld
cmp
cmp
out
fldl2e
stc
in
std
testl
in
not
cmp
ror
aad
ror
test
adc
ret
jecxz
fldpi
fucom
mov
jecxz
fnstsw
int
lret
repnz
jmp
jmp
jmp
mov
repnz
out
cmp
int
cli
ds
cli
idiv
cmp
out
cli
int
xchg
xchg
xor
ljmp
jmp
clc
lret
aam
xlat
sbb
cmc
lret
test
mov
xchg
ljmp
cmp
int
aas
cmp
loop
roll
enter
xchg
ss
in
cld
leave
sti
neg
fstp
out
iret
into
repz
and
std
ljmp
stc
lret
out
in
enter
into
cmp
sti
loopne
xlat
ret
ljmp
repnz
out
out
xor
not
clc
ljmp
rcr
fmull
call
incl
out
lret
sar
iret
ss
ret
std
leave
filds
lret
out
out
xchg
xchg
loop
cmp
rcr
cmp
jmp
test
fcomp
icebp
fdivrp
cmp
flds
test
aad
aam
sar
aaa
cmp
sbb
repz
sti
mov
xor
jmp
rol
enter
jp
fimuls
xchg
flds
jle
add
std
lds
nop
int
repnz
cs
out
into
int3
cmp
aad
cmc
mov
cmc
fdecstp
loopne
test
lock
jecxz
repz
cmc
into
repnz
fcmovu
icebp
shl
test
xlat
rorl
enter
out
aam
ror
lret
cmc
lret
aad
into
rcr
iret
std
loopne
fdiv
mov
in
out
jmp
leave
divb
ljmp
aas
in
fdivrp
fadds
fiaddl
sub
repz
ret
jmp
fnstenv
int3
not
std
aam
mov
jecxz
xchg
int3
shl
cmp
jmp
testb
test
out
jecxz
out
in
shl
xchg
out
xor
into
cmp
std
sti
ljmp
std
into
xchg
xor
rol
jecxz
ljmp
cmp
out
cmc
rol
cmp
out
iret
sub
rol
enter
int
cmc
ljmp
loopne
xchg
call
mul
ffreep
cmc
xor
sti
hlt
cmp
rcr
lock
shl
enter
xchg
lock
orb
into
cmc
jmp
div
std
hlt
sti
and
out
fisttpl
jmp
clc
call
sub
repnz
rol
std
leave
in
mov
jmp
icebp
rolb
in
cmp
iret
out
icebp
out
hlt
out
stc
ds
clc
ret
lock
xchg
faddl
jecxz
out
fcmovu
jmp
fcos
ret
rcr
mov
filds
xchg
mov
repz
cmp
lret
rcl
sti
test
loope
std
in
in
cli
xlat
jmp
loop
cmc
fucomip
jmp
clc
in
repz
shl
in
xor
aad
clc
test
fsubr
adc
jmp
loope
iret
cmc
jmp
hlt
lret
clc
imul
cmp
mov
fmul
xchg
fdivrp
xchg
xlat
shll
xor
into
out
sar
ds
xor
mov
add
jmp
aas
push
mov
adc
ret
inc
mov
cmp
jle
add
jmp
add
out
jmp
jmp
lock
das
clc
repz
cmp
fst
or
loopne
call
in
out
std
cli
int3
mov
lock
rcr
test
repz
out
rolb
lret
out
jecxz
incb
aad
sti
icebp
call
loope
roll
std
add
fsub
loope
int
cmc
into
xor
fldlg2
in
aad
rcr
fucomp
in
test
loope
mov
fldl
fdiv
into
xor
fdivl
fdiv
icebp
cli
aad
fcmovbe
sar
fmull
mov
lret
ljmp
mov
call
in
lock
ss
mov
cld
out
ficoml
in
xlat
out
out
call
sti
adc
cmp
out
ret
idiv
fimuls
fisttps
cmp
in
out
xor
cli
in
std
mul
xchg
out
mov
loop
out
cli
ljmp
fldz
in
icebp
test
std
lret
mov
hlt
xchg
xchg
aam
in
shl
out
ss
cli
cli
test
xchg
shl
jmp
aad
xor
fptan
cmp
cmc
rcl
add
in
loopne
stc
out
mov
mov
decb
clc
cmp
iret
fidivrl
ret
ret
fmulp
call
lret
int3
xchg
in
shl
int3
iret
in
aam
flds
xchg
loope
out
out
lret
in
in
in
fcmovbe
cmp
in
lret
cmp
cmp
mov
cmp
fsubr
lret
rcl
out
cmc
fxch
xor
shl
fdivp
shl
cmp
mov
xlat
out
ljmp
ss
aam
out
enter
out
rcl
fldl
cmc
fucomip
cli
lret
shl
shl
aad
int
aaa
out
out
xor
icebp
in
fcmovnbe
fsub
sbb
mov
xlat
mov
adcb
out
int
lock
shl
fst
hlt
div
mov
jmp
enter
lret
jno
sbb
shll
or
add
add
xor
clc
loopne
mov
out
fdivrp
loopne
rcr
xchg
into
loope
xor
xor
lret
into
shlb
xor
ror
test
lock
xlat
aad
lret
mov
sti
in
repnz
out
xchg
lds
cmp
xor
xor
f2xm1
fucom
add
cmp
cmpl
loopne
and
hlt
int
aad
int3
lock
sub
rolb
lret
into
in
loopne
iret
xchg
in
sub
out
int3
in
stc
lret
in
fdivr
ffree
ljmp
out
xchg
in
xchg
aaa
int3
repnz
xor
loopne
out
in
ret
enter
mov
jmp
in
fsubp
out
in
rcl
xor
aas
aad
stc
sar
fisttpll
fcmove
jecxz
in
in
ret
jmp
leave
cmc
fucomp
repnz
loope
out
hlt
test
lret
into
out
or
jecxz
out
shrl
ss
xor
xor
cli
ret
cli
cmp
xchg
push
in
testb
call
in
repnz
fdivrp
cld
loopne
cmc
rolb
ffreep
fcmove
flds
in
out
bnd
shl
idivb
aaa
dec
cmp
aas
enter
enter
adc
lock
cmp
fstp
lret
aam
sarb
cmc
and
in
cmp
xchg
icebp
xlat
fstp
sti
cmp
ds
rcr
jmp
fmul
loope
fists
fnsetpm(287
in
fcomi
stc
jmp
aad
clc
mov
test
fnstenv
fnstenv
in
icebp
cmp
cld
repnz
fprem1
ljmp
jmp
xor
std
cli
leave
sti
cmp
test
loopne
aam
mov
fcomp
mov
iret
fsincos
addl
xbegin
xor
shl
mov
mov
cld
cmc
and
in
test
into
call
cs
cmp
into
lock
lock
cmc
leave
in
out
cld
dec
xchg
cmc
ljmp
jmp
int
rol
fcmovu
fstps
outsl
inc
fldt
add
add
add
out
xlat
call
xor
sti
sti
out
mov
fucomi
fimuls
int3
test
ror
ret
xor
leave
xor
shl
aad
cmp
cmc
cld
ljmp
ror
into
std
imul
imul
in
enter
fld1
repz
jmp
addb
enter
iret
call
and
stc
in
cmp
ds
clc
out
fdiv
clc
jecxz
aad
lret
jecxz
out
fcomi
shl
xor
in
sub
into
iret
loop
repz
mov
mov
flds
orl
lret
lock
sti
into
shl
hlt
inc
cmc
sarb
ret
test
leave
mov
aaa
jmp
call
loope
jmp
lock
lock
stc
ljmp
repz
iret
rcr
loop
in
xor
repz
xlat
aam
ret
cmp
and
mov
or
aad
shr
aad
faddl
cmp
rol
out
ret
int3
call
mov
loope
cmc
aam
in
fnstsw
cli
sarb
xacquire
stc
mov
enter
iret
enter
stc
int
ret
filds
incl
mov
xor
lret
not
cli
ljmp
into
aas
xchg
out
out
into
jmp
out
loope
ret
out
xor
hlt
lock
clc
ss
cmp
ret
loope
enter
jmp
test
leave
xchg
xchg
nop
imulb
lret
cmp
cmp
rol
jmp
les
aad
lea
mov
out
jmp
iret
out
fsubr
into
ret
out
sar
in
filds
out
xchg
jmp
cld
int3
ds
aad
fprem
xchg
loop
fld
lret
clc
lret
icebp
repnz
repz
cmp
leave
icebp
not
jmp
in
cmp
loop
xlat
int
int3
clc
flds
fsubr
shr
enter
clc
lock
sar
sar
ror
rorl
rol
fisttpll
xor
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
lret
ret
rcl
fcmovbe
lret
shll
in
push
fdivrs
add
add
incl
repz
sbb
out
lock
rcr
call
sub
ljmp
xor
clc
aaa
out
rcl
cmp
lret
aas
cmp
xlat
in
loopne
call
cmc
ror
out
jmp
jecxz
lock
int
roll
ret
out
loopne
jecxz
int
shl
in
mov
rcl
cmp
call
leave
shr
fiaddl
shl
mov
testl
sarl
int3
cmp
shll
stc
icebp
loope
cmpl
xchg
test
stc
out
ror
xchg
mov
aad
lret
xor
fdivrp
shl
loope
sti
fcomi
adc
out
in
lds
int
into
aaa
cli
in
clc
stc
fstp
cmp
sar
sti
icebp
enter
jecxz
decl
loopne
in
shl
cmp
cmc
int3
repz
stc
fnstcw
ds
ds
std
in
cld
xchg
stc
out
out
xchg
test
loope
sub
cmp
stc
rcr
mov
loop
out
fcmovnu
ljmp
icebp
repnz
cmp
int
aas
int3
cmp
ret
call
xlat
dec
std
lret
in
aad
jecxz
shr
iret
fildl
jmp
fldl
mov
in
mov
call
into
iret
xor
int3
int
iret
repnz
in
sbb
icebp
xchg
call
cmp
cmp
aam
into
ret
fcmovb
jecxz
idiv
lds
sub
out
lock
iret
out
cmc
ljmp
adc
loope
in
mov
iret
xchg
int3
out
in
xor
aam
hlt
jmp
test
cmc
aam
sar
cld
fiadds
xchg
test
repz
cld
sti
enter
repz
stc
out
testl
mov
mov
ret
iret
aad
int
out
loopne
cli
cli
aad
aas
std
mov
ds
stc
jecxz
orl
xor
in
out
jmp
xlat
leave
loope
std
fcmovnu
stc
shl
jmp
mov
jmp
mov
aam
fstp
fcoml
dec
cmp
in
jle
add
movb
rol
int3
cli
int3
in
int
rcr
sarb
rolb
faddl
cld
repz
icebp
ljmp
shl
cli
xor
repz
ret
aam
dec
mov
enter
fldl
out
neg
ljmp
idiv
out
fcmovne
lret
call
test
test
adc
cmp
fdiv
cmc
aad
fndisi(8087
repnz
aas
rcl
orl
mov
enter
sub
lock
cmc
xor
out
jmp
xchg
iret
mov
les
lret
icebp
cmp
lock
in
sarl
cmp
fcmovnb
iret
in
enter
mov
repnz
aaa
loope
int3
repnz
stc
sar
rcr
cmp
cld
rcl
mov
out
cld
mov
ror
xchg
call
out
cmc
ret
iret
cmp
sar
cmp
cmp
mov
mov
xchg
mov
lret
jmp
in
out
call
call
repz
in
addb
clc
xchg
aam
divl
aaa
aas
cmc
xor
neg
cli
shl
leave
loope
loopne
enter
mov
out
rol
lret
xor
out
cmp
into
in
aad
fsubr
jecxz
cmp
stc
out
nop
fsubp
ror
das
out
icebp
into
xor
ror
and
mul
adc
ljmp
cld
mov
das
repnz
enter
ds
test
loopne
out
jmp
test
xchg
out
ljmp
sbb
cmp
fscale
lock
aam
repz
xchg
adc
loop
in
int
fidivl
fsubr
aaa
cmp
ljmp
xchg
mov
xlat
loope
in
adcb
repnz
enter
test
loopne
shl
test
xchg
test
call
int3
lock
sti
aam
cmp
into
stc
cmpb
incl
mov
nop
call
cmc
ret
in
repz
aam
in
imul
xor
add
jmp
ret
enter
int3
or
test
jo
add
add
stc
clc
cmp
into
mov
lret
enter
idiv
jmp
push
fildl
sti
fcomp
cld
into
cli
int3
lock
mov
rcl
iret
aad
in
ss
imul
aas
div
cli
cmp
std
mov
xchg
out
in
in
out
xchg
mov
divb
jmp
repz
fucom
sbb
repz
fcmovu
shr
in
aam
out
out
in
imul
out
repz
cmc
fcos
lret
aam
cmp
xlat
ds
out
jmp
loop
mov
idiv
leave
in
sarb
sti
repnz
sti
int
loopne
faddl
loop
test
int3
jecxz
test
popl
jecxz
idivl
shl
sar
into
fcmovu
decl
out
int
in
icebp
int
aam
xor
loop
cld
in
xor
aad
cli
cmp
loope
vpand
cld
int
into
enter
aad
xor
in
fucomp
out
cmp
iret
out
rcr
call
sbb
in
loopne
out
out
enter
ss
cmp
loope
aad
test
cld
aad
leave
stc
in
xchg
xchg
cmp
cmp
idivl
out
cmp
out
jecxz
in
ret
xchg
xrelease
sarl
in
hlt
test
xchg
std
cld
jmp
ror
out
out
out
xor
hlt
leave
repz
aam
cmp
aad
fcomp
stc
stc
decb
ljmp
aad
fiadds
sti
jmp
fimuls
mov
out
mov
jmp
xor
int3
cmc
lock
hlt
xlat
out
aad
jmp
sti
imul
fdivs
iret
cmp
cmp
lock
shr
ret
call
call
mov
xchg
xor
clc
shr
lret
jmp
shll
aad
int
fnstcw
jmp
loopne
int3
adcb
das
xor
fsubr
cmp
fstp
aaa
cld
cli
adc
lret
fcmovnbe
cld
rolb
cli
clc
int3
div
fdivrp
hlt
decb
scas
add
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
jmp
rcl
ret
int
fstp
fnsave
mov
sbb
inc
sub
add
add
fdecstp
fdiv
call
in
xchg
loopne
xchg
xchg
xchg
repz
jmp
fcmove
cmp
int3
rol
idiv
std
xchg
sti
call
out
ljmp
xlat
sub
repz
fdiv
shl
test
sar
ds
out
enter
int3
xrelease
into
cmp
repnz
ds
stc
loopne
ds
fdivr
ljmp
out
std
test
jmp
out
sub
test
rolb
sti
stc
int3
in
iret
mov
xor
ror
out
leave
loope
icebp
ret
mov
cli
lret
enter
int3
in
mov
xchg
xor
loop
cld
out
aad
cld
std
fdivr
out
leave
addl
xchg
sar
clc
cmp
cmp
sar
fnstcw
mov
ljmp
sub
jmp
clc
lret
aad
clc
idiv
neg
int
xchg
cld
loope
lock
out
jmp
repz
icebp
stc
in
out
cmp
sar
icebp
shl
fcomip
aad
lret
out
mov
xchg
cs
ljmp
loope
in
rol
loope
rolb
fdivrp
leave
lret
dec
loopne
shr
repnz
clc
xor
iret
in
fcmovnu
fcompp
in
cli
fsqrt
xchg
adcl
cmp
roll
mov
loopne
leave
test
cmc
test
cmc
test
int3
cld
cmp
ret
cli
cld
ret
jmp
fcmove
int
mov
jmp
fnop
in
ss
xor
dec
loopne
in
clc
std
out
jmp
test
xchg
into
aas
jecxz
out
hlt
clc
stc
sarl
cmp
in
ds
jmp
sar
out
jecxz
xchg
faddp
xor
repz
fdivp
cmp
xlat
xor
cmp
hlt
ret
leave
mov
jmp
out
out
fmull
shll
clc
xor
xor
cmp
clc
std
add
in
iret
leave
jmp
cmc
call
call
fisttpl
call
xor
inc
cmp
je
xchg
push
pop
push
jmp
xlat
aas
lret
fcmovne
sbb
dec
mov
in
add
add
sarb
int3
and
adc
ret
std
sti
out
orb
int
shll
xor
stc
cld
aas
lret
lock
sbb
xabort
hlt
or
mov
fstl
mov
cmp
aad
aam
sub
rcl
fnstsw
mov
fst
test
out
enter
xchg
mov
faddp
not
int
cmp
fdivp
xor
ret
shr
fsub
sti
fsub
test
clc
fmul
repz
cmc
not
les
in
lret
ss
leave
loop
cmp
lock
enter
int3
sbb
in
test
aaa
in
cld
idiv
jmp
loope
aad
enter
cld
mov
mov
shl
fildl
iret
xor
cli
enter
shl
jecxz
fcom
std
fcmovb
or
lret
cld
mov
call
cmc
xor
xor
leave
shr
fsubr
lret
fcmove
shl
or
xchg
repz
ljmp
xor
xor
ds
and
loope
incl
test
lock
hlt
jecxz
in
xor
repz
call
repz
cmp
sarb
aam
jmp
or
mov
test
fcomp
fmul
std
cmp
rol
cmp
mov
test
hlt
in
xor
iret
lret
into
cli
icebp
fstpt
fstpt
cmpb
fstp
lret
test
sti
in
xchg
and
int3
sub
ret
out
fsub
out
int
lock
mov
adcb
in
ljmp
cmp
idivl
hlt
aam
call
out
icebp
loope
mov
int
xlat
ss
hlt
cmp
xor
idiv
fiaddl
mul
cld
iret
out
std
fmul
shr
shl
out
lret
bnd
int
fidivrl
shl
fcmove
fsubp
out
in
orl
iret
out
jmp
cld
aas
fsubr
mov
fiaddl
iret
xchg
int
mov
jecxz
out
jmp
shlb
xlat
in
cmp
loope
repz
in
jmp
out
xchg
shl
pop
inc
xchg
sub
jmp
rcl
iret
aad
aad
pop
aaa
jp
fsubl
sahf
in
add
add
cmc
jmp
cmp
sti
jmp
out
test
test
fstp
test
mov
xor
cmp
lret
sarl
cld
xchg
lret
in
cli
test
in
repz
fdivrp
jmp
int
ret
aas
stc
incl
test
fucom
jmp
fucomip
test
cmp
cmp
out
aaa
jmp
test
out
icebp
addb
stc
lret
addb
std
out
idivl
ret
lock
out
in
and
cli
loop
jmp
loope
jmp
lock
fnstcw
push
cli
in
filds
xlat
jmp
mov
in
cmc
icebp
shr
lret
neg
loopne
hlt
in
out
les
lret
nop
test
xchg
xchg
lock
sarb
cmp
cli
clc
icebp
neg
aas
stc
test
rol
and
cld
cld
orl
xor
cmp
fcom
xchg
loop
sti
out
loopne
xchg
xchg
mov
icebp
shl
icebp
fdivrs
clc
cmp
sarb
xchg
rorb
mov
jecxz
rorl
loop
shr
out
neg
leave
lret
aas
repz
add
mov
mov
lock
xchg
hlt
xchg
fcomip
aaa
in
xlat
stc
lock
sti
in
ds
rcl
loopne
mov
clc
test
out
test
lret
fsubp
xchg
rcr
cld
rcr
out
mov
out
jmp
lock
ss
in
jmp
iret
ret
test
ljmp
out
out
mov
aam
shll
out
ljmp
loope
sar
jecxz
sar
lret
out
fnstsw
icebp
fildll
loopne
test
idivl
xor
aas
cld
iret
lock
loope
lret
enter
aam
shr
out
int3
neg
xor
icebp
addl
in
xabort
iret
iret
and
lret
in
into
fnstsw
cmp
loope
iret
loopne
clc
cli
mov
jmp
iret
rcl
fcomp
aad
mov
inc
sbb
cmp
jle
fsubrp
in
mov
repz
clc
iret
sti
cmp
out
jmp
ds
rol
rol
incb
out
loop
lds
fidivl
cld
cli
leave
ds
loop
xor
loope
ret
addl
xchg
xorl
jmp
fidivs
shl
addl
into
out
test
fdiv
not
call
sti
divl
out
shl
call
aad
in
mov
loopne
fsubrp
movb
fdivl
rol
ds
call
in
ror
cmp
mov
icebp
enter
stc
hlt
out
stc
cmp
int3
ds
fld
add
ljmp
jmp
aam
fdecstp
sti
iret
idiv
lock
cmp
icebp
out
cld
rorl
out
stc
mov
in
ljmp
aad
hlt
aad
repnz
mov
fiadds
std
push
clc
bnd
div
int
cmp
cmc
jmp
mov
test
test
fcmovne
cmp
rcl
iret
in
fdivr
cmp
icebp
test
loopne
jecxz
stc
call
test
rcl
shl
ss
xor
repz
idiv
fld
enter
mul
mov
nop
mov
icebp
clc
in
in
enter
in
sarl
jmp
ffreep
repnz
jmp
into
aaa
loope
xor
ljmp
cmc
loop
in
sar
test
idiv
loope
loope
leave
xchg
std
or
xor
iret
repnz
fstpt
in
icebp
cmp
in
hlt
jmp
add
lock
xchg
clc
xor
leave
int3
call
fmul
shl
sarl
call
fcmovnu
or
lock
clc
cmp
loope
repnz
sar
ret
loope
into
fabs
incl
in
icebp
cmp
fdiv
div
shr
cmp
xchg
ret
clc
sbb
jmp
lret
lret
xor
xlat
test
out
cmp
iret
cmc
xchg
cld
sbb
imul
add
xchg
jmp
int
int
fstp
fst
das
dec
fwait
lahf
addps
adc
add
add
shl
fsub
mov
mov
xchg
test
int3
xor
jmp
ss
into
jecxz
aam
aam
call
in
into
xchg
xchg
xchg
out
iret
aaa
ret
clc
lock
int3
shr
cmp
loopne
icebp
ret
test
out
clc
in
mov
out
xor
imul
cmp
out
ljmp
rcr
sbb
lret
mov
out
hlt
loope
xor
in
ss
in
enter
ror
add
icebp
rcr
or
xchg
out
in
jmp
cmc
lret
shl
cmp
fcomi
aaa
cmp
shl
not
ljmp
enter
mov
icebp
cs
ds
repnz
ss
idivb
fdiv
cmp
nop
cli
jmp
in
in
int
in
aam
clc
ss
lock
neg
out
enter
aas
fmuls
xor
sub
clc
not
in
repz
repnz
rolb
test
in
xchg
mov
mov
lds
enter
std
fcmovnu
into
fdivrp
stc
fcmovne
cmp
in
ljmp
xor
cmp
ss
fdivrp
fdiv
add
sti
mov
enter
call
lret
out
hlt
fcomi
repz
repz
cmp
aam
xor
roll
into
int
rorl
lds
test
fcmovnu
out
iret
in
aad
repnz
out
mov
xchg
mov
sbb
out
out
shl
jmp
clc
sar
xchg
idivl
roll
loopne
cld
repz
hlt
ret
jmp
fnstsw
cmp
in
fcmovbe
cmp
vpminub
out
cld
sbb
rorb
ret
iret
fcmove
fsubrp
int
ret
call
mov
call
nop
xchg
jecxz
cmp
in
test
iret
sti
int
xlat
cmc
fmull
out
call
repnz
out
into
fcmovbe
out
fcmovnu
rolb
call
in
out
ljmp
cmp
div
shll
cld
jecxz
xor
mov
dec
inc
add
dec
jmp
int
ret
lret
aad
int
jmp
cmc
cmp
cmp
jle
idiv
mov
clc
jecxz
xlat
leave
mov
popl
in
int
xor
cmc
out
shr
jecxz
out
in
xchg
out
cld
enter
xchg
jecxz
jmp
ret
stc
cli
adc
stc
loopne
fcomi
enter
call
cmc
ret
xor
aam
stc
sarb
fdivrp
add
in
sti
lret
leave
out
sub
xor
leave
into
cmp
dec
cmc
cmp
rolb
xchg
ret
rorb
in
shlb
repnz
xor
icebp
into
cmp
shr
into
in
fucom
aas
enter
jmp
fiaddl
nop
hlt
fcomip
aad
in
cld
repz
in
cmp
cmp
fsqrt
xchg
cld
test
cmp
jmp
icebp
out
out
iret
fdivrl
jmp
in
out
in
fcoml
aad
cmp
shlb
icebp
cmp
out
aam
testl
adc
das
clc
lock
icebp
sarb
sarl
ds
lret
loope
mov
sti
out
test
in
lret
xor
fdiv
sti
test
in
repnz
clc
clc
loopne
rclb
in
int3
ss
leave
jmp
cmp
std
cmp
testl
fisttpl
out
aaa
div
jmp
cmc
hlt
cmp
cmpl
fmulp
xchg
in
icebp
fisttps
cmc
cld
xor
xor
cmp
xor
fadd
xchg
mov
xchg
loope
xchg
in
xor
neg
int
int3
icebp
rcl
roll
repnz
in
in
out
out
mov
fucomp
shr
xor
lock
call
fcmovu
sti
ret
ret
into
out
fcmovnb
decb
xlat
in
in
repz
int
lret
testb
fmuls
fxch
adc
imulb
in
ret
cmp
stc
lret
cmp
lock
out
loope
lds
in
or
in
xchg
loop
lock
xor
add
pop
mov
pop
pop
pop
leave
ret
