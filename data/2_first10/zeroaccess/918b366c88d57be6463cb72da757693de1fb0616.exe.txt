push
mov
sub
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
subl
mov
sub
mov
xor
movl
add
movl
sbb
mov
push
movzbl
sbb
mov
push
mov
xor
push
or
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
mov
sub
add
movl
movl
movl
orl
movl
mov
subl
xor
add
mov
sbbl
movl
movb
mov
xorl
xor
add
jmp
jb
fsubs
lock
push
in
or
lret
lret
mov
cli
jg
jle
xlat
cmp
rol
pop
add
add
rdpmc
xadd
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
add
cmpsl
jmp
cmp
adc
dec
faddl
and
sti
push
sbb
xor
xor
std
adc
call
mov
stc
xor
xchg
fst
mov
mov
adc
jae
ljmp
and
adc
xor
js
sti
mov
pusha
inc
mul
neg
jb
popf
xor
adc
decb
jbe
cmp
jmp
sub
push
pop
call
jb
test
test
pusha
lods
and
or
pushf
cltd
adc
rorb
push
andl
ja
or
int
cmp
mov
rcl
push
cltd
lcall
in
add
or
xchg
xchg
lods
imulb
sub
iret
test
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
orl
jmp
dec
push
push
push
rorb
jle
cli
jg
jle
jg
jle
sbb
mov
test
mov
shl
inc
mov
lret
fwait
push
stos
lods
test
mov
insb
push
into
and
stc
sbb
xor
mov
sti
xchg
xor
adc
movsl
call
push
fucomp
sbb
enter
popa
shlb
cmpsl
or
mov
lret
mov
add
mov
lcall
push
insb
mov
dec
xor
into
mov
mov
and
xchg
lahf
cmp
pop
xor
out
or
ljmp
xchg
xchg
les
pusha
jg
xchg
fsubl
stc
adc
ss
inc
push
shlb
mov
lcall
and
pop
out
nop
jo
or
inc
js
sub
or
addr16
push
and
gs
or
add
in
xchg
xchg
jo
xlat
imul
push
mov
in
xchg
mov
xor
lock
sarb
pop
fstpt
inc
adc
loopne
fcomps
sbb
pop
cld
adc
bound
inc
mov
cmp
inc
mov
stos
inc
cltd
jnp
push
inc
cmpsb
xor
xor
pop
cmp
insl
and
and
sbb
mov
stos
aas
adc
jl
and
cmp
cmp
call
mov
sbb
push
inc
int3
dec
mov
xor
xor
neg
jmp
cli
fcompl
jno
cmp
xor
jge
jle
jg
jle
sub
mov
jp
leave
test
mov
or
je
rol
and
mov
cwtl
pop
push
pop
jno
adc
ja
mov
mov
shr
sbb
add
rcl
pop
mov
jbe
sbb
add
repnz
in
jbe
mov
inc
or
mov
and
pop
rsqrtps
jmp
dec
jge
mov
sub
mov
xor
dec
iret
jle
dec
mov
xor
shll
out
add
mov
jne
bound
add
mov
push
or
inc
fs
stos
jmp
cmpsl
test
punpckhbw
sbb
add
dec
repnz
push
xlat
test
jmp
mov
into
jg
loop
shl
adc
rolb
in
data16
out
mov
sbb
dec
inc
std
js
add
adc
outsb
xchg
clc
mov
push
xchg
cmp
and
roll
fcmovnu
repz
sbb
mov
xchg
xor
xor
in
ret
mov
repnz
and
data16
cmp
fucom
pop
jecxz
mov
repz
mov
inc
sbb
inc
inc
inc
leavew
adcl
cmpsl
xor
jb
push
mov
loopne
aas
in
adc
adc
cwtl
movsb
popf
shl
loop
iret
and
in
pop
aaa
outsb
pop
add
mov
mov
xor
sbb
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
xor
sbbl
add
decl
mov
lea
mov
movzwl
and
mov
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xor
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
or
out
jecxz
icebp
int
add
movsl
stos
cmpb
cli
jg
jle
mov
mov
ret
dec
jno
fsubl
pushf
inc
pushf
pop
lea
loope
mov
out
shll
lock
outsb
cmpsl
sbbl
aam
out
clc
xchg
addb
cmpsl
xor
leave
popa
lods
jge
jecxz
jns
aam
xchg
lods
mul
mov
ret
sahf
fistpl
mov
ds
adc
insb
mov
jno
xor
je
vandnps
jbe
stos
addr16
test
mov
adc
sbbb
sub
sbb
loop
cld
mov
sbb
xor
enter
jecxz
dec
das
and
pusha
ds
mov
add
outsl
loope
test
add
mov
enterw
dec
xor
push
and
dec
cmp
call
jnp
lcall
xor
rclb
add
mov
test
icebp
ja
gs
pop
fwait
and
punpckhwd
adc
adc
dec
cmc
popf
xor
push
mov
fsubrs
aaa
pop
cmp
sub
sub
and
test
mov
inc
push
sbb
aas
inc
cmpsb
mov
fldenv
push
push
lods
push
call
adc
xchg
mov
adc
sub
stos
cmp
xchg
mov
sbbb
mov
sub
xor
stos
cltd
dec
mov
mov
pushf
add
add
jmp
push
dec
pushf
jle
sbb
js
jle
jg
jle
sub
inc
jo
or
xlat
mov
sub
shlb
iret
jmp
cmp
add
inc
or
pop
mov
jbe
es
outsl
lods
int3
fcomps
insb
mov
or
mov
repnz
call
sbb
enter
dec
sub
dec
xchg
mov
sbb
mov
call
in
or
mov
nop
lcall
outsl
pop
adc
pop
mov
ret
mov
out
cwtl
pop
mov
out
dec
test
inc
mov
shrb
mov
pop
fsubr
shll
jbe
inc
jge
xchg
outsb
int3
repnz
push
or
into
mov
dec
shll
das
mov
mov
jp
push
shrl
lods
es
paddsw
rcrl
xchg
pusha
aaa
inc
mov
jp
icebp
cmpb
std
leave
shlb
cmp
out
fisttpll
fwait
mov
loopne
cmp
mov
shlb
data16
in
clc
je
sbbb
js
out
mov
push
sbb
ja
gs
and
sbb
mov
jb
push
jbe
mov
out
jg
pop
push
clc
int3
iret
repz
inc
cwtl
push
pop
lods
addl
ljmp
or
xchg
mov
push
push
push
pop
xor
fwait
sbb
shl
adc
mov
sti
push
negb
leave
stos
xchg
ret
ret
hlt
xor
xor
or
movsl
es
sub
mov
xor
add
mov
mov
mov
xor
jmp
pop
xor
mov
mov
mov
lahf
cmc
xchg
imul
jle
fwait
sbb
or
cmp
push
rclb
xor
sbb
cli
movl
aas
mov
mov
xchg
loop
push
icebp
and
pop
frstor
xlat
cld
inc
loope
sbb
testb
push
add
add
sbb
and
out
je
aam
sub
imul
mov
insl
jg
imulb
daa
pushf
sti
test
push
jbe
bnd
pop
fsubrl
adc
pop
xchg
mov
add
adc
cmp
mov
xor
or
sbb
in
jbe
xchg
rcrb
lret
xlat
dec
push
arpl
or
add
popa
mov
mov
xchg
lahf
fbld
loope
fmuls
cltd
jl
push
jecxz
gs
mov
jno
and
push
cltd
movsb
or
pop
jb
fs
lret
pop
in
in
imull
sub
mov
adc
pop
and
and
mov
fdiv
in
movsl
jne
rcll
sub
push
add
cmp
lcall
add
test
nop
cmp
pop
jp
mov
or
pop
push
mov
adc
dec
daa
ljmp
leave
push
ds
in
stos
mov
jns
xchg
sub
push
es
fwait
cwtl
les
movsb
iret
mov
iret
adc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
mov
les
loopne
mov
xor
ficoms
pop
jle
cli
jg
jle
sbb
jns
frstor
inc
sub
into
mov
push
sub
sub
xchg
mov
sti
xor
ficomps
adc
pop
into
decl
push
cmp
in
scas
popf
jl
movsb
test
inc
aam
pushf
es
mov
inc
inc
in
xor
loopne
ficompl
les
mov
in
test
lock
test
das
mov
lahf
adc
in
mov
sub
and
cwtl
lods
cltd
ret
cmp
out
leave
rol
sub
rclb
ret
mov
std
movaps
add
lret
or
xor
sbb
enter
pop
in
xor
mov
mov
sbb
in
mov
adc
and
pop
push
stc
nop
inc
jg
pop
jmp
fs
in
jbe
ljmp
jp
scas
or
rcl
add
lahf
or
in
mov
outsl
mov
bound
adc
sbb
jns
xor
rcll
push
shll
hlt
in
loopne
roll
inc
or
xchg
jp
loope
cld
and
mov
rcll
mov
xchg
sbb
decl
lods
xor
jmp
sbb
cmp
adc
popf
dec
fdiv
push
idivl
fwait
insl
jle
jmp
out
jne
je
lea
push
mov
xor
add
jmp
pop
and
aas
jno
imul
xchg
add
jle
jg
jle
pop
ret
adc
imull
repz
aad
adc
fstps
fs
insl
sbb
clc
mov
or
sub
insb
push
mov
movsl
add
pushf
fistpl
mov
andl
call
test
mov
subl
mov
inc
inc
mov
stc
popf
sub
cwtl
mov
xor
mov
out
jmp
stc
lret
std
imul
cmp
add
leave
push
pop
mov
lds
xchg
xor
pop
fnstcw
lods
ret
ja
inc
xchg
cmpsb
mov
lods
insl
hlt
cld
or
mov
add
and
push
rcl
pop
xor
daa
dec
push
cli
mov
fs
out
ds
add
xchg
jg
sarb
stc
mov
dec
lret
mov
movsl
sahf
dec
out
sub
jl
and
jbe
push
nop
pop
and
xlat
insb
xlat
lret
xchg
push
cld
imul
les
inc
mov
adc
jb
cmp
sub
leave
fists
in
or
das
cmp
inc
jl
negl
fsubs
in
cltd
xchg
ror
and
aad
outsl
je
mov
fwait
int3
iret
inc
push
aaa
dec
call
mov
je
cwtl
leave
lret
push
mov
inc
call
add
pushf
add
add
dec
and
jno
push
mov
push
mov
jle
cli
jg
jle
bound
and
push
nop
adc
stc
imul
cmp
add
lock
enter
fiaddl
pop
test
mov
push
xor
push
rolb
mov
mov
xchg
jg
xor
fstpl
dec
lea
mov
sub
clc
xor
dec
lcall
mov
inc
aaa
popf
jo
mov
pop
pop
pop
mov
adc
dec
xchg
in
lahf
sbb
addr16
dec
mov
jecxz
out
mov
or
std
mov
mov
syscall
push
cmp
pop
int
adc
jmp
pop
pop
outsl
test
mov
xchg
xor
mov
cmc
jle
iret
ljmp
aas
mov
and
cmp
push
insb
jmp
xor
and
cmp
pop
fstpt
sub
add
mov
push
push
xor
pop
xchg
loop
rolb
dec
push
xor
dec
pop
cmp
add
push
fsts
repz
arpl
inc
ss
repnz
push
sbb
xchg
repnz
jbe
jnp
repnz
add
jno
shll
jo
insl
notb
inc
xchg
repz
pop
pop
jl
cmp
push
imul
out
push
addr16
sbb
inc
adc
sub
adc
jl
in
cmc
lock
arpl
jge
outsl
and
jge
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
jmp
mov
bound
fadds
lods
mov
das
lcall
jle
lret
mov
es
jb
adc
xlat
push
jl
out
fs
pop
lahf
inc
out
pop
push
insb
das
ficomps
scas
mov
jmp
ss
sub
loopne
ret
dec
lods
push
ret
popf
add
cwtl
leave
jbe
dec
shll
lahf
mov
lods
cli
jns
xlat
scas
inc
inc
sub
loopne
pop
loop
jns
add
stc
fs
test
xchg
imul
jo
fstpl
fwait
fstpl
sbb
jecxz
push
pop
mov
xor
jg
loope
divl
adcb
jne
into
mov
mov
pop
dec
mov
push
mov
ficomps
mov
xorl
insb
mov
imul
loopne
push
not
and
mov
lret
jl,pt
fdivrl
pop
mov
test
sbb
mov
int3
xor
push
mov
dec
aam
lret
mov
test
inc
cmc
aas
inc
cli
bound
mov
mov
xor
mov
shrl
push
and
cmpsb
lahf
repz
lods
stc
ret
lods
and
cmp
dec
rolb
idiv
bound
in
mov
in
xchg
mov
xchg
jge
push
test
xchg
repz
adc
xchg
adc
hlt
xchg
add
adc
xchg
popa
pop
mov
inc
lods
roll
fildl
scas
add
lock
mov
mov
mov
mov
jmp
push
shlb
push
stos
rol
xacquire
jle
jg
jle
cmpsl
and
into
outsl
mov
hlt
xchg
out
dec
dec
jmp
enter
lods
in
aas
sahf
mov
and
cld
xchg
jb
inc
cld
mov
push
add
fcoml
arpl
push
testl
ret
pop
stos
add
xchg
mov
and
sub
rcrb
pop
sub
mov
mov
xlat
in
cmpsl
fcoml
adc
cmc
shll
ret
jecxz
xchg
shll
pop
sar
arpl
jl
sbb
pop
roll
popa
lret
arpl
in
add
mov
mov
cmp
test
data16
sbb
imul
and
repnz
test
subl
xchg
cld
outsb
jns
jno
push
imul
cltd
xchg
scas
loopne
bound
jno
test
xchg
out
fidivl
outsl
pop
shrl
cs
push
lds
jmp
insb
outsl
es
fsts
and
in
sbb
or
shlb
stos
int
filds
in
pop
inc
mov
dec
jg
push
lea
and
cmp
movsl
xchg
xchg
xor
xchg
xor
arpl
jmp
ja
cmpsb
cmp
cli
mov
mov
cmp
mov
scas
in
leave
imul
iret
or
ljmp
push
xchg
je
movb
add
clc
mov
mov
mov
mov
mov
mov
mov
jmp
les
rorl
daa
mov
cli
jg
jle
rorl
xchg
cmp
xchg
leave
cmpsl
mov
and
imul
subb
je
in
mov
and
dec
mov
clc
xchg
cmpsb
jmp
subb
in
loopne
cmp
movsl
push
jnp
rorb
sbb
imul
ret
in
out
mov
shll
push
pop
ficomps
jmp
mov
rorb
dec
ja
jae
cmpsl
js
in
jbe
push
cmp
add
lcall
jg
lea
stos
adcb
mov
scas
addr16
push
push
jbe
push
inc
fcmovne
push
inc
adc
adc
sbb
push
pop
xor
es
xor
shrl
mov
fdivl
add
xlat
add
pop
gs
inc
jbe
aaa
pop
out
sub
sub
stc
mov
sbb
jge
imul
hlt
inc
repnz
movsb
mov
jp
rolb
mov
scas
fists
jecxz
popa
dec
ficompl
icebp
sarl
bound
cmp
mov
xchg
pop
dec
jp
pop
add
clc
pop
push
cs
jb
dec
jns
mov
xchg
mov
cmp
icebp
mov
sbb
jle
pop
add
insl
lds
jg
dec
mov
jbe
pop
push
je
mov
pop
test
mov
repz
rorb
mov
mov
mov
test
jmp
inc
push
jnp
or
push
adc
nop
dec
sar
int
or
jle
jg
jle
into
jecxz
fimuls
sbb
mov
aam
loopne
mov
adc
daa
imul
shl
aas
aaa
pushf
or
xchg
in
cmp
frstor
ret
dec
add
das
dec
sarl
add
jecxz
or
movsb
cmp
arpl
pop
mov
test
idiv
mov
cmpsb
mov
popa
inc
test
adc
outsl
out
or
out
pop
shll
in
es
or
cmp
dec
adc
aas
fidivrs
addr16
or
enter
pop
push
mov
add
imul
cs
xor
repnz
jne
sbb
jno
xchg
push
cmp
push
mov
outsl
jecxz
jecxz
mov
pop
dec
call
ret
cs
xor
iret
xchg
stos
mov
imul
cs
mov
inc
mov
stos
cmp
test
lea
or
jbe
jae
sti
sbb
sbb
in
sub
mov
in
push
mov
or
mov
xor
iret
lods
adc
js
bound
or
push
leave
adc
pop
cmp
inc
push
inc
daa
xor
jp
pop
adc
add
push
imul
add
inc
mov
jne
mov
xor
add
jmp
or
lret
jecxz
jecxz
icebp
loop
mov
pop
push
les
or
jle
shlb
movb
cmpsl
insb
inc
int3
mov
xor
push
mov
mov
popa
sub
jnp
mov
sub
add
push
xor
add
popa
mov
adc
lahf
mov
daa
inc
rcrb
cld
cmc
add
or
outsb
adc
mov
popf
fwait
or
jg
sbb
popa
pop
jb
sar
dec
ror
fistl
in
or
das
and
add
orl
sub
pop
imul
addb
add
or
sbb
sbb
or
int3
dec
inc
outsl
inc
sub
insb
out
out
xchg
or
js
lods
cmpsl
add
nop
popa
add
jae
jmp
pop
hlt
insb
mov
mov
ljmp
mov
arpl
xor
mov
mov
mov
sarb
push
into
fs
call
add
fstps
pushf
pusha
outsl
rorb
jns
jbe
sbb
aas
ljmp
iret
xchg
aad
ljmp
leave
idiv
fs
lds
orb
xor
es
mov
bound
lret
fldenv
mov
cmc
xor
jge
xchg
lods
stc
iret
repnz
imul
rcrl
aad
sbb
loope
xchg
lret
lret
and
fs
adc
and
mov
sbb
cmpsl
into
cmpsl
imul
add
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
jmp
add
inc
dec
aas
cmp
out
jmp
or
cli
jg
jle
push
and
data16
out
ja
lods
sub
dec
mov
jge
xchg
pop
and
hlt
dec
scas
pop
pop
ret
dec
in
xor
xchg
loop
sbb
pop
test
mov
inc
lods
repz
jle
dec
pop
sbb
fsts
jae
into
in
lret
mov
push
sub
leave
mov
lods
adcb
pop
pop
std
aas
push
mov
push
out
repnz
sub
mov
pop
enter
mov
scas
or
lret
xchg
adc
pop
movsl
inc
mov
xchg
and
stos
fstl
scas
sbb
ss
pop
fistps
jno
aaa
dec
fidivrs
push
mov
mov
stc
je
add
in
nop
shrb
imul
inc
mul
out
stos
std
fcmovnu
imul
shrl
add
int3
shr
jmp
jle
cld
stos
adc
jl
mov
mov
and
insl
lahf
test
stc
movsb
cltd
add
xchg
loop
jb
mov
shrb
loope
sbbl
mov
lock
movsb
sbb
fdivr
imul
bound
in
repnz
pop
jne
sub
and
roll
jmp
push
inc
ret
fcoml
and
sbb
pusha
lcall
push
dec
jno
sbb
fistpl
mov
mov
or
or
aam
fisubrl
inc
cld
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
jmp
jmp
xchg
push
arpl
nop
push
rorb
add
cli
jg
jle
jmp
andl
adc
decb
xor
xor
shlb
jns
or
jbe
aas
popf
cltd
mov
leave
sub
push
pop
int
leave
adc
xor
ret
jne
sarb
rcr
mov
push
push
icebp
scas
dec
cmpsb
andb
jecxz
mov
mov
icebp
loope
sbb
mov
in
adc
iret
loope
sub
lret
mov
stc
add
loopne
and
sub
push
out
movsb
or
clc
push
xchg
jns
ljmp
mov
jns
or
mov
pop
ljmp
cmp
xor
lds
fldt
mov
xor
pop
cmp
cmovl
stc
out
pop
add
and
jmp
add
ljmp
lds
mov
jb
arpl
shl
ss
movsl
inc
repz
sub
mov
scas
in
fwait
sub
dec
cmp
loope
popf
mov
pop
mov
adc
cmpsl
leave
popa
clc
xorl
mov
xchg
mov
xchg
lods
test
jecxz
sbb
cld
mov
stc
lahf
addb
adcb
arpl
xchg
out
fidivs
scas
or
xor
jne
mov
mov
les
jmp
add
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
push
pop
jmp
cmc
mov
icebp
insl
sbb
mov
ds
jle
cli
jg
jle
call
xchg
scas
dec
jno
dec
xor
stos
xchg
js
pop
stos
es
fwait
andb
mov
xchg
and
pop
xlat
ret
lret
sbb
jl
movsl
sub
stos
lahf
mov
jmp
fsubs
aas
mov
inc
movups
pop
int3
mov
sub
mov
out
add
mov
push
int
jg
inc
shll
sub
int
sub
cmpsb
mov
inc
fistpll
rcr
loopne
cmp
mov
cmc
in
daa
pop
ja
cmp
jmp
jo
movsl
mov
imul
cmp
cmovne
jb
sahf
rep
leave
mov
test
inc
xor
fisttpl
mov
jmp
jp
scas
cmp
cmp
jo
push
iret
dec
mov
lods
xchg
into
xor
mov
xchg
mov
aaa
nop
inc
pop
ja
loopne
imul
pop
push
pop
clc
or
or
jle
mov
sub
std
imul
mov
sbb
sbb
inc
sub
adc
cmp
stos
inc
out
push
stos
push
sbb
xchg
xor
les
or
ret
mov
jg
cwtl
out
iret
jl
arpl
mov
sub
jo
mov
rol
adc
es
pushf
jnp
loop
fidivs
popf
jo
aas
vfnmsub231ps
je
sarl
call
mov
mov
add
pop
jmp
add
mov
adcb
fidivrs
jg
jle
out
test
add
loop
add
dec
and
call
dec
mov
lds
fwait
dec
popa
stos
cld
movsb
std
sbb
xor
mov
pop
lea
mov
sub
or
mov
mov
jp
test
out
in
push
mov
movsb
sub
cmp
outsb
lcall
and
push
push
int
mov
pusha
ljmp
mov
clc
nop
pop
push
pop
push
call
or
out
xchg
arpl
sbb
mov
or
push
mov
fdivl
test
jp
mov
repz
mov
scas
add
sub
dec
test
add
adc
mov
jge,pn
sub
pop
and
dec
dec
xchg
pop
rorl
or
shl
ret
imul
ret
test
fistl
and
fldl
loopne
or
jns
push
sbb
xchg
fisubrl
test
jnp
test
mov
pop
xchg
in
push
lock
pushf
jg
sti
daa
or
lea
aas
xchg
mov
aaa
test
ljmp
cli
mov
mov
mov
adc
mov
mov
je
add
or
iret
inc
jo
adc
dec
daa
adc
add
movsl
adc
adc
pop
cmp
cmpsl
imull
sub
loop
dec
sub
push
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
sub
push
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
not
mov
xorl
mov
sbbl
movl
mov
add
movl
xor
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
decl
mov
xor
mov
mov
sub
imul
mov
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
and
mov
mov
sbbl
xor
add
not
mov
not
movl
movl
mov
adc
movl
adc
movl
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
and
jmp
sbb
add
lock
icebp
mov
fstpl
jle
pop
jl
jle
xchg
cmpsb
loope
dec
fdivl
jnp
pop
repz
mov
pop
hlt
mov
jp
jecxz
push
xor
push
insb
sti
mov
nop
push
das
js
jno
mov
les
in
les
outsl
orl
rcll
mov
add
imul
xchg
dec
xor
cmc
icebp
jo
pop
stos
out
xchg
fstps
sub
xchg
inc
scas
addr16
enter
fnstcw
lret
jmp
adcb
mov
jg
stos
fldenv
fnstenv
xor
push
std
xchg
daa
into
dec
mov
xchg
jbe
xchg
aaa
shrl
in
and
sbb
movsl
push
push
mov
mov
fidivrs
imul
pop
popa
mov
push
xor
std
xor
sbb
xor
repz
dec
dec
lock
inc
sub
and
jo
mov
inc
imul
pushf
xchg
lods
dec
notb
mov
out
cwtl
xchg
cmp
sbb
loopne
or
aas
stos
xchg
mov
xor
push
mov
jnp
adc
xchg
jmp
aas
es
pop
dec
or
jle
arpl
cld
pop
add
lods
gs
mov
pop
popf
outsl
push
pushl
inc
inc
add
pop
pop
sbb
bound
in
dec
cmp
and
and
mov
out
ds
ds
mov
int3
mov
push
mulb
sbb
ret
int3
push
cmp
lcall
loop
test
and
inc
mov
push
cmp
jbe
and
xor
push
leave
js
adc
pop
out
lds
dec
push
movsb
cmpl
jnp
mov
jecxz
and
scas
cmpsl
fwait
ret
push
inc
add
fcoms
cmp
and
aas
push
jae
add
sbb
push
jb
mov
dec
movsb
dec
xchg
sbb
adc
push
jnp
adc
adc
sub
jo
sbb
adcl
popa
push
mov
in
pusha
gs
cmpsl
pop
dec
divb
mov
in
ret
mov
movsl
sbb
push
insb
aam
fs
repz
fwait
xor
in
adc
sub
add
ret
add
or
xor
scas
and
icebp
shlb
push
inc
or
gs
add
rcrl
mov
idiv
sub
mov
jle
call
dec
mov
xchg
shrl
pop
sub
xchg
jbe
cltd
testb
insb
and
gs
and
inc
aas
xchg
sbb
addr16
cli
or
movl
sbb
mov
sbb
xor
andl
xor
add
inc
mov
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
subl
add
movl
cmp
movl
je
movl
push
jmp
xorl
mov
sub
mov
sub
xor
mov
xorl
xor
movl
add
cmp
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
mov
sub
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
negl
xor
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
add
add
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
imul
mov
and
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
pop
cli
mov
jno
gs
or
scas
loopne
lret
mov
adc
pop
jl
jle
xor
std
xchg
int
es
push
lahf
scas
aam
sbb
int3
mov
cmp
ret
sub
sbb
nop
push
test
cltd
xchg
cmp
shrl
xor
fisttpll
mov
out
mov
jmp
test
push
iret
push
add
or
cmp
movsb
aas
hlt
dec
xchg
les
fldenv
loop
loopne
data16
fidivrl
in
adc
mov
pusha
and
mov
pushf
outsl
fcom
dec
movsl
loope
dec
sbb
and
xchg
jge
popf
lock
popf
cmp
xor
ret
inc
cmp
push
fs
shlb
add
into
mov
push
mov
cmp
adc
hlt
daa
test
and
mov
xchg
outsb
les
dec
in
pop
sub
shrl
xor
test
cld
jp
mov
test
sbb
push
mov
std
sbb
icebp
mov
mov
popa
xor
jb
fs
sahf
xor
inc
aam
xor
repnz
nop
add
dec
cmp
jb
mov
cmpsl
fidivs
ljmp
out
mov
outsb
dec
mov
fnstsw
jmp
jg
jbe
imul
daa
bswap
mov
pop
or
jp
add
sbb
jge
jb
xchg
stos
data16
repz
fwait
hlt
sub
push
lcall
lcall
mov
nop
jmp
test
ljmp
sub
dec
cmp
out
adc
ret
mov
insl
push
jnp
clc
dec
fbld
xchg
fistpll
ror
ss
xor
adc
popf
addr16
cmpsl
stos
xchg
arpl
iret
sub
filds
inc
cmp
xchg
cmp
inc
sub
repnz
xchg
and
sub
ljmp
insl
out
es
sbb
inc
xor
pop
mov
pop
imul
sahf
fdivrl
dec
sub
mov
sbb
ror
cmpl
and
lods
xor
rcr
dec
mov
je
mov
out
ret
aaa
add
xchg
mov
in
nop
lahf
mov
sub
popf
in
scas
aas
cmp
cmp
repz
inc
sub
dec
add
mov
mov
sbb
add
dec
cmp
fiadds
and
mov
jl
stos
or
mov
inc
cmc
inc
aad
cmpsl
mov
add
cmp
jne
fstl
pop
sbb
jge
popa
insl
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
mov
xchg
xorb
jno
cs
jle
mov
pop
jle
pop
jl
jle
mov
jns
inc
sbb
cld
int
int
sub
arpl
jns
jae
push
sbbl
dec
out
lret
clc
insb
test
pop
xor
inc
loopne
push
sub
sub
test
jne
mov
mov
push
insb
add
sbb
inc
test
jge
xor
lock
out
sub
insb
pop
dec
movsb
mov
mov
lret
fmuls
pop
icebp
pop
cmp
pop
rcl
dec
int
xlat
cltd
inc
aaa
xchg
loope
and
xchg
arpl
adc
jae
int
rolb
int3
jle
cld
arpl
jp
test
jmp
iret
mov
dec
adc
sbb
cltd
inc
or
test
jno
sahf
add
or
and
test
xchg
inc
push
or
cmp
pop
push
das
nop
rcll
das
notl
mov
mov
sbb
shlb
mov
jb
les
add
mov
ret
cmp
jb
add
lret
dec
sub
jmp
or
scas
add
sbb
push
lea
xor
xchg
xchg
ret
sbb
arpl
insl
mov
cmpsb
add
lds
fs
pushf
je
pop
int3
les
push
and
ss
sti
cs
ja
push
scas
cmpsb
pushf
pop
lods
mov
lods
jae
xor
push
inc
jb
dec
in
cltd
pop
insb
sub
cmp
mov
adc
stos
dec
push
and
jge
pop
and
test
in
ljmp
or
cwtl
pop
aad
add
rcl
adc
pusha
mov
sbb
jle
mov
lret
clc
pop
hlt
ret
daa
in
sub
pop
int
and
clc
pop
outsb
testb
mov
jne
push
into
mov
mov
xor
add
cmp
xor
sub
inc
dec
cmpsb
sbbl
lahf
je
mov
mov
push
repnz
imul
jp,pn
aas
hlt
mov
sub
mov
in
inc
push
xor
adc
mov
pop
cmpsb
loope
add
mov
push
mov
xor
js
icebp
xor
cmpsl
js
arpl
push
popf
aas
jne
popf
add
ds
jno
mov
mov
movsb
xor
sbb
ljmp
int
outsb
mov
xchg
and
xchg
inc
scas
cmp
add
cmp
lcall
push
repnz
sub
dec
and
push
push
mov
adc
adc
test
or
mov
loopne
jp
pusha
in
and
dec
push
call
or
test
mov
jbe
mov
mov
jmp
mov
aaa
or
mov
subl
xor
loop
je
jle
pop
jl
jle
sub
or
fdivp
push
sub
jge
sbb
dec
lods
popa
mov
mov
add
jmp
mov
dec
lea
push
push
push
add
cltd
add
pop
xchg
les
out
push
and
inc
sub
mov
rclb
outsb
sub
cmp
addl
addr16
call
cld
push
pusha
dec
sub
gs
outsb
mov
mov
out
xor
adc
movsl
ss
add
cli
xchg
jecxz
mov
dec
std
orl
aaa
loope
imul
das
aad
test
add
mov
lods
arpl
notl
adc
dec
mov
or
or
dec
jne
insl
cli
pop
add
dec
mov
movsb
sub
pushf
jmp
pop
jmp
divb
iret
movb
sub
push
and
fs
push
jg,pt
mov
jns
inc
mov
jb
inc
pop
jle
adc
dec
repnz
mov
sub
outsl
pushf
rorb
pop
mov
loop
dec
vpcmpeqb
icebp
test
and
push
in
sub
sub
dec
outsb
andl
daa
es
inc
mov
or
mov
jecxz
mov
shlb
cmp
push
es
pop
dec
lods
adcb
mov
add
and
iret
out
ljmp
cmp
cmp
fcmovnu
add
roll
js
mov
ret
stc
sub
or
adc
fisttps
iret
repz
popf
jl
ret
xor
adc
jmp
dec
aas
add
insl
sti
push
popf
outsb
jns
int
movsl
mov
xor
mov
mov
xchg
cmp
dec
add
sti
add
imul
scas
inc
fidivl
push
jae
add
cmp
sub
push
mov
test
sub
xlat
enter
jecxz
mov
cmpsl
call
cmpsl
mov
out
lods
pop
loopne
scas
or
in
xchg
imul
enter
cmpb
mov
les
mov
js
stos
push
mov
inc
out
jo
iret
test
mov
sahf
xchg
mov
mov
outsl
xchg
sbb
sbb
mov
iret
dec
jnp
scas
push
cmp
out
cs
mov
subb
or
or
sbb
icebp
ret
or
mov
iret
fldenv
pop
adc
lds
jnp
pusha
mov
sbb
inc
or
in
loopne
aas
jns
loopne
mov
push
mov
lea
scas
sbb
insl
sbb
popf
sub
cmp
clc
jmp
add
dec
popa
jno
jne
xor
jle
lret
sbb
pop
sbb
pop
jl
jle
jnp
outsl
scas
mov
jb
sbb
cmc
inc
stc
inc
ja
aas
fsubr
dec
mov
add
push
jne
mov
stos
scas
mov
shr
jo
out
dec
bound
lea
xchg
aaa
sbb
mov
cmp
sbb
mov
push
cmp
dec
in
cmp
loop
mov
hlt
test
in
pop
sbb
js
mov
popf
lea
loope
dec
sbb
xchg
sub
and
and
xchg
jl
pushf
or
inc
add
inc
push
pop
repnz
notb
scas
sub
fnstcw
lahf
push
cs
jns
mov
xor
mov
andl
mov
fnsave
sub
fnstcw
cmp
js
jnp
lahf
and
mov
mov
ljmp
mov
inc
adc
adcl
test
inc
xor
push
aas
lahf
xchg
frndint
mov
into
cmp
xor
inc
pop
je
in
sbb
in
lods
out
pop
sub
inc
nop
jns
lea
push
add
aad
sbbb
stos
cmp
and
stos
adc
rcll
or
jo
mov
xchg
pushf
mov
insb
xchg
lods
rorb
sub
cmpsl
inc
jg
or
out
frstor
mov
leave
stc
inc
adc
inc
xchg
add
dec
and
adc
mov
sub
cmpb
fwait
cmp
pop
push
iret
int
mov
leave
mov
lods
mov
push
mov
pop
bound
xchg
notl
incb
lods
add
pop
imull
insb
popa
pop
jae
ds
jg
cmp
jne
mov
inc
inc
xor
loopne
lods
pushf
lock
lods
push
inc
xchg
or
pop
jo
xchg
cs
mov
les
dec
xchg
pop
fildl
push
stos
add
fs
mov
or
ss
gs
testl
mov
cmp
inc
insb
loopne
ja
lds
out
ljmp
xor
lcall
xchg
dec
push
lret
pop
out
add
fs
mov
mov
fmul
mov
adc
adc
push
ja
mov
aaa
mov
jb
cld
pop
mov
loop
in
jmp
dec
shrd
out
outsl
xchg
mov
sti
xchg
adc
aas
lock
mov
lods
mov
and
pushw
pop
mov
adc
iret
lahf
mov
les
mov
mov
mov
ds
xor
add
sbb
stc
add
imul
mov
mov
mov
mov
add
movl
mov
jmp
sub
test
out
into
and
pop
jl
jle
push
xchg
cwtl
rol
int3
or
xor
loop
mov
add
rol
das
jg
mov
xchg
sbb
push
hlt
xor
jae
cld
mov
pusha
outsb
push
cmpb
push
insb
jo
jecxz
inc
xchg
lock
push
push
mov
movsb
sbb
shrl
and
pusha
xlat
hlt
lods
dec
shrl
mov
mov
enter
pop
outsl
xchg
or
xorb
xchg
in
stos
in
lret
and
inc
adc
cltd
mov
jnp
sub
in
lods
loop
adc
ljmp
loope
enter
lock
and
sbb
movd
int3
bound
dec
adc
cmc
aam
sub
dec
push
lds
loop
add
insl
inc
and
dec
lcall
inc
sti
arpl
inc
divb
aas
fwait
dec
jle
dec
or
adc
fldcw
inc
fisubs
adc
insb
jae
push
fstpt
orb
cwtl
mull
std
mov
repnz
adc
cli
loopne
lea
clc
mov
jbe
iret
imul
mov
jmp
cmp
roll
jno
adc
push
inc
aaa
lret
inc
cmpsb
dec
cli
pushf
mov
jns
add
sti
pop
mov
sub
pop
scas
sti
cmp
mov
daa
xor
sbb
es
es
lods
jns
lods
add
adc
pop
data16
xor
cld
or
stos
repnz
stc
and
icebp
std
and
fstp
add
mov
add
daa
mov
dec
jl
inc
into
lea
leave
adc
gs
xlat
aam
aaa
inc
push
frstor
testb
ljmp
pop
mov
jo
stc
sahf
mov
lods
inc
pop
scas
and
pop
dec
add
lock
push
movsl
bound
pop
push
in
mov
jmp
xor
mov
xor
clc
mov
mov
scas
xchg
add
inc
add
inc
outsl
dec
xor
mov
aam
jnp
cmp
push
out
cltd
dec
or
xchg
stos
lock
lock
iret
add
sbb
adc
test
xchg
out
adc
inc
mull
lret
outsb
out
add
dec
mov
dec
ss
mov
cli
pop
push
xchg
into
mov
mov
pop
mov
jnp
pushf
loope
cmc
mov
loopne
sbb
enter
jo
mov
xor
xchg
dec
sbb
cmp
add
inc
pop
and
inc
inc
pushf
xchg
push
xlat
sbb
ficompl
mov
jae
dec
cwtl
push
and
jl
cmpsb
push
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
xor
adc
shl
icebp
repz
stc
cmc
cmc
mov
jl
jle
jle
hlt
lods
push
jo
mov
mov
mov
inc
aas
cwtl
mov
ret
subl
imul
cltd
jp
out
iret
xor
push
cmp
test
push
and
mov
fwait
sarb
outsb
sub
jnp
cmpsl
cmpsb
sbb
mov
jle
lea
sti
add
jns
and
aad
pop
cmp
icebp
nop
adc
cmp
sbb
mov
test
scas
fs
adc
pop
pushf
and
hlt
adc
push
inc
add
inc
jo
std
aas
jne
int
fwait
xor
inc
insl
xchg
aam
pop
cmpl
xchg
jnp
jge
rol
xchg
divb
cmp
out
inc
xchg
ss
inc
dec
negl
out
loope
call
insb
xchg
das
xlat
nop
push
stos
push
or
xchg
push
push
imul
xchg
mov
adc
add
mov
cmpsb
cmp
push
mov
out
push
in
hlt
roll
test
adc
or
inc
mov
pushf
iret
je
int3
psubsw
mov
push
xchg
mov
roll
sub
jecxz
mov
mov
lret
negl
shll
and
or
scas
scas
ror
loop
stos
mov
mov
cmp
aas
mov
ja
fldt
mov
cmp
push
pop
lcall
cmp
mov
roll
arpl
stos
pop
inc
mov
mov
mov
adc
cmp
mov
lret
cmp
pop
push
cmp
cmp
mov
repz
xchg
adc
fwait
cmpsl
and
fwait
sbb
in
or
pop
adc
add
pop
jbe
cmpsb
and
cmp
daa
cmpsb
adc
sbbb
mov
xchg
pop
mov
cmp
in
jl
lret
or
pop
mov
jecxz
sub
xchg
xlat
leave
cmpsb
insl
cli
xor
and
inc
or
sbb
imul
jge
add
dec
insl
insl
lret
dec
mov
rol
jnp
cmp
mov
lcall
fucomip
inc
sbb
jne
orl
ljmp
sbb
push
loop
jno
scas
fnstsw
enter
loop
xchg
mov
imul
test
xchg
popa
data16
xorb
cmp
push
sbb
les
jmp
or
dec
orb
cmp
cmp
mov
enter
rorl
cmp
and
jmp
fwait
mov
dec
std
sbb
test
enter
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
jmp
xlat
pop
mov
jno
stc
hlt
jb
aam
push
mov
jle
pop
jl
jle
ret
jb
aad
dec
xchg
pop
xchg
test
push
icebp
sbb
and
ficompl
jbe
cmp
sti
int3
jmp
cmc
sub
imul
out
fs
popf
test
loope
adc
mov
sbbl
push
push
push
in
push
sub
js
cmpb
and
fldl
mov
lds
push
cmpl
js
icebp
fwait
stos
aad
in
sub
mov
cmp
aas
jge
jg
and
pop
inc
testl
mov
sti
cmc
int3
jo
inc
push
xchg
dec
call
xchg
mov
sub
xchg
fsubrs
arpl
outsb
test
enter
loop
mov
jns
add
shlb
dec
insb
adc
mov
sbb
pop
mov
aaa
rcrl
push
pop
pop
rcrb
lahf
int3
in
inc
dec
int3
fisubrs
mov
sbb
pop
lods
or
lods
testb
in
test
or
popf
fisttpll
lods
mov
lret
and
sar
test
out
fidivrl
lock
out
dec
cmc
pop
and
das
push
xor
inc
push
addr16
inc
das
mov
sbb
in
jmp
mov
xchg
shrb
roll
enter
mov
xchg
stos
clc
mov
cmp
ret
inc
jne
inc
lock
xchg
loop
pop
lods
lods
jb
xchg
or
cmp
sbb
cwtl
xor
and
jnp
hlt
gs
daa
imul
and
inc
dec
test
das
jae
jg
mov
inc
push
mov
fwait
jne
shrl
add
shlb
aaa
and
mov
xor
outsl
or
jge
push
rcrl
or
pop
xchg
out
fstl
outsl
push
jno
xor
outsw
and
fdivrl
sbb
xlat
xchg
int3
mov
xor
fbld
rol
sbb
lahf
imul
arpl
mov
jae
sub
mov
pushf
in
dec
mov
xchg
pushf
fstps
push
jo
test
jp
xchg
test
lret
mov
mov
mov
mov
loopne
shl
pusha
cmp
sahf
mov
stos
xor
out
outsb
xchg
inc
pop
push
fmulp
mov
in
cli
push
insl
ficoml
dec
outsl
mov
or
xchg
inc
mov
fildl
clc
test
cmpsl
icebp
jecxz
add
stos
lret
push
xor
cmpsl
jno
mov
call
fsubrs
mov
mov
out
push
scas
jns
fdivrl
mov
stc
mov
ret
repnz
rclb
pop
call
lea
jmp
pusha
das
sti
pop
push
push
out
xor
jle
jl
jle
iret
xchg
mov
sbb
lahf
push
cmc
sbbl
iret
adc
or
aad
adcl
jecxz
in
cmp
jno
arpl
repz
test
mov
inc
cs
pop
sbb
or
add
jp
lods
sub
mov
icebp
mov
adc
jp
mov
into
test
jle
fnstenv
inc
mov
cmp
lock
or
cmp
dec
mov
pusha
jnp
pop
lock
pop
insb
dec
mov
adc
jmp
cwtl
mov
loope
rcll
inc
push
xorl
add
mov
jns
inc
sbb
fistpll
outsl
ror
js
lcall
mov
repz
jb
shr
imul
cmc
cmpsl
sbb
mov
dec
sub
jge
cld
das
in
aas
cmp
xorb
push
lds
inc
push
sbb
jae
sub
mov
aam
test
add
adc
cmc
js
insl
stos
movsb
outsl
mov
repnz
push
mov
cld
fstps
test
and
jne
subb
mov
cmp
hlt
or
inc
mov
outsb
fstpl
jmp
lock
push
js
scas
orb
pusha
mov
inc
shrl
adc
add
lock
adc
fidivs
ror
pop
add
nop
xor
cmc
fldenv
stos
cs
sbb
dec
and
xchg
and
add
into
stos
int3
scas
addr16
push
movnti
mov
adc
mov
sbb
jae
mov
shlb
sub
enter
enter
and
jne
fs
or
cli
aad
jo
jmp
out
add
pop
iret
xchg
jae
push
ss
sbb
inc
sbb
clc
js
dec
out
outsb
ret
cmc
fucomip
imul
cmc
ljmp
cmp
push
sub
scas
rcll
or
iret
inc
xlat
xchg
mov
mov
xor
xchg
testb
xor
sahf
xorb
ror
mov
mov
push
fwait
sbbl
or
sub
adc
ret
cltd
movsb
inc
pop
insl
jge
inc
mov
fsubrl
sti
push
aaa
adc
cmpsb
test
xchg
movsb
arpl
lea
loopne
push
xorl
mov
rclb
push
push
jns
fsubrl
mov
mov
or
cli
jbe
mov
mov
jmp
outsl
fisttpll
pop
fmull
inc
rcl
jle
pop
jl
jle
push
movsb
gs
xchg
call
jnp
inc
ss
jg
adc
je
sbb
dec
xor
pop
pop
mov
scas
out
push
add
mov
dec
mov
jb
stos
cmp
stos
add
nop
inc
lods
pop
push
fcom
pop
xor
mov
std
loopne
repz
sub
repz
scas
imull
sbb
inc
cli
pop
mov
mov
das
pop
fcomps
dec
jae
lret
pop
mov
adc
adc
js
dec
pop
stc
cwtl
scas
cwtl
fsubl
pop
loop
mov
pop
add
xchg
imul
repz
cmpsl
es
out
and
adc
pop
cmp
add
inc
jecxz
mov
loop
sahf
pop
sbb
mov
xor
iret
test
stos
call
cmp
test
xor
pop
or
ss
test
ds
jl
fimull
sbb
mov
icebp
cmp
mov
push
mov
push
and
mov
jle
push
jb
pop
mov
jl
xor
gs
mov
jmp
cmp
jns
or
mov
shrb
stos
mov
cmc
pop
xchg
repnz
inc
sub
mov
test
outsl
pop
lods
test
mov
or
daa
lock
cmpl
arpl
mov
outsl
mov
sahf
rorb
orl
inc
out
lret
fildl
mov
mov
adc
xchg
and
xchg
daa
xchg
and
fsubr
stc
xchg
adc
inc
iret
out
push
bound
push
jmp
cmp
jnp
jg
jne
inc
sub
pop
les
les
jae
jmp
push
cmp
cmc
cwtl
ret
xor
cmpsl
inc
pop
shrl
insl
dec
sbbl
repz
call
pop
daa
push
imul
or
sbb
push
and
mov
hlt
xchg
cmc
stc
dec
sub
xor
inc
mov
lcall
test
aas
pop
pushf
aam
in
inc
xchg
fsts
imul
mov
xor
lcall
pop
xchg
test
or
scas
add
jns
mov
popf
cmc
cld
je
cli
cmp
pop
add
mov
adc
bound
or
ljmp
ret
dec
andl
rcl
pushf
sar
jbe
hlt
push
movb
pop
xchg
test
push
or
mov
mov
pop
rol
fmull
out
jmp
lret
mov
or
pop
shrb
inc
push
lahf
scas
jae
add
je
dec
loopne
fs
pop
and
or
fdivl
rolb
rorl
scas
xlat
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
and
mov
xorl
xor
notl
add
jmp
scas
incb
jne
lods
jbe
loopne
mov
fsubl
cmp
jle
sub
jle
push
sarb
pop
mov
jge
pop
cwtl
add
cmp
fstpt
sub
aaa
popa
pop
jnp
add
testl
jg
std
shll
popf
nop
repz
jb
cmp
in
sbb
mov
call
test
push
loop
xor
ss
iret
jo
int3
xor
inc
cmp
xor
loopne
out
lcall
test
cmp
out
cmpsb
sahf
sarb
sub
add
es
xor
dec
push
scas
mov
push
stc
je
cld
insl
test
pop
xor
stc
movsl
mov
popf
lcall
nop
mov
xlat
repnz
mov
loop
aas
adc
cmc
pop
gs
mov
adc
sbb
cltd
movsl
jae
lods
aaa
push
data16
ja
jg
mov
adc
cmp
cmp
jecxz
jg
aaa
sbb
mov
ljmp
push
jns
std
pop
movsl
push
enter
jmp
mov
cmpb
add
mov
cmc
sbb
add
xchg
or
push
sbb
in
mov
pop
xor
scas
daa
mov
pusha
imul
fstpt
sub
jl
and
pushf
mov
ss
adc
sub
mov
popa
sahf
mov
xchg
imull
cmp
adc
mov
scas
xchg
xchg
sub
fdiv
jns
pop
inc
jmp
movsl
daa
adc
fld
scas
sti
fldl
int
hlt
lods
push
push
aas
dec
push
dec
xor
out
imul
mov
jg
mov
dec
xchg
inc
mov
and
push
sti
cli
mov
xor
dec
aam
clc
bound
xchg
sbb
lcall
loopw
mov
xchg
and
in
xchg
push
xchg
push
clc
loop
sub
adc
aas
call
es
sbb
in
sub
in
cmp
js
in
stos
cmovnp
mov
mov
pop
enter
mov
mov
sub
xchg
jg
add
stos
adc
mov
fs
enter
cmovno
data16
aam
mov
pop
lods
loop
cmovbe
xor
sbb
vunpckhps
sub
into
arpl
mov
je
jne
nop
mov
cmp
and
dec
cs
std
push
push
mov
mov
fiadds
fld
xor
gs
cmpsb
out
pop
mov
push
and
fs
mov
mov
or
cmp
movsb
mov
push
rcrl
fisubrs
jl
outsl
gs
lret
mov
mov
push
dec
push
mov
imul
test
aam
shl
dec
sti
enter
mov
dec
int3
insl
insb
pushf
xor
cmp
mov
xlat
xor
mov
mov
movl
movl
mov
push
mov
movl
mov
cmp
je
mov
xor
xorl
xor
lea
xor
cmp
jne
movl
jmp
add
mov
xor
add
movl
mov
mov
movl
jmp
jmp
fldcw
les
adc
call
jge
jle
cs
rcrl
adcb
dec
fsubl
data16
jb
popf
addr16
out
call
shll
mov
in
jl
arpl
jnp
lods
xchg
lock
aaa
addr16
mov
mov
dec
push
jbe
xor
xor
sbb
inc
push
mov
sti
fbld
add
xchg
ficompl
mov
das
aas
mov
push
aas
push
cli
movsb
push
add
push
pushf
mov
xchg
xor
xor
cmc
fsub
enter
shrb
mov
dec
cwtl
mov
push
mov
in
lds
rcrl
jne
fimuls
and
pop
in
scas
or
xchg
dec
push
out
xchg
sahf
mov
idivl
cli
fistl
imul
mov
addb
lahf
hlt
imul
sbb
aaa
scas
enter
enter
or
mov
sub
or
fwait
repnz
and
dec
leave
and
pop
mov
dec
testl
mov
je
in
jmp
mov
incl
xchg
in
dec
sbb
add
fcomps
cld
popf
xlat
or
cmc
xor
cmc
mov
mov
xchg
cmp
mov
pop
adc
test
xchg
cmpsl
outsl
jg
jnp
mov
jb
push
xor
fwait
and
test
popa
lret
pusha
das
pushf
pop
mov
shrb
jg
pushf
in
or
or
mov
jmp
movsb
data16
xchg
add
push
and
aas
leavew
lret
aaa
pop
enter
scas
xchg
push
or
add
loope
inc
cmpsb
and
test
outsl
pop
sahf
pop
rorl
lahf
push
movsb
lcall
lods
fadds
and
xchg
or
inc
fadds
add
leave
mov
test
xor
xor
stos
jecxz
and
or
mov
pop
dec
dec
imulb
hlt
sbb
int
ja
jg
movsl
pop
jb
out
in
icebp
inc
xor
adc
jle
dec
and
jge
int
and
enter
push
dec
xchg
ja
sahf
pop
fildll
xor
adcb
jo
push
mov
lods
add
pop
insl
cwtl
jo
cmp
fs
and
insb
outsl
into
nop
push
xor
into
nop
dec
cli
jge
mov
repz
jmp
stc
and
xchg
xchg
aaa
dec
inc
int
lahf
push
and
mov
dec
jl
rcll
divb
pop
dec
jbe
mov
xor
mov
push
lcall
adc
outsl
call
cmpsb
add
push
cmp
test
pop
loopne
jecxz
jg
cmp
mov
iret
test
pop
test
popf
in
add
in
jbe
shr
dec
mov
dec
dec
in
leave
loop
cmpsl
mov
scas
dec
mov
icebp
neg
jmp
jne
sub
test
test
mov
or
jge
jle
xlat
repz
pop
and
ret
sahf
push
pop
outsb
sbb
inc
or
mov
add
jecxz
xchg
jecxz,pn
cmp
mov
and
mov
and
mov
imul
cmp
stos
dec
movsl
and
outsl
shrb
adc
ja
lahf
adc
rcrb
ret
push
push
test
xor
add
adc
inc
in
imul
mov
enter
sti
dec
into
inc
lods
push
sub
push
movsb
or
clc
mov
xchg
push
ja
fstpl
mov
sti
sti
shl
fchs
imul
leave
daa
mov
fmuls
fnstenv
push
movsl
call
rorb
inc
call
imull
shll
mov
mov
nop
jae
fldcw
stos
jo
dec
imul
sbb
jne
flds
jg
mov
jo
push
out
insl
pop
push
in
xchg
stos
pushf
xchg
xchg
int3
nop
lret
cmp
or
mov
sub
or
sub
jle
lret
imul
outsb
jbe
sbb
imul
pop
cwtl
je
pop
inc
mov
or
cmp
push
loop
popa
mov
imul
cwtl
xor
scas
cmpsl
xchg
and
pop
adc
jae
addl
mov
jl
cltd
scas
sbb
jnp
inc
xchg
mov
dec
or
in
or
push
and
sub
adc
ds
jmp
jns
mov
ja
cli
inc
jne
push
scas
gs
fidivrl
mov
xchg
les
cmp
add
das
dec
leave
cmp
inc
out
mov
sbb
test
inc
inc
mov
xchg
cli
or
add
push
mov
fsubs
jne
outsb
rolb
aas
leave
lret
aaa
xchg
test
cmp
mov
xor
test
inc
stos
clc
xchg
movsb
jp
pop
in
jb
dec
jnp
adc
or
shl
mov
or
jb
sub
mov
hlt
mov
xchg
jle
adc
imul
cmpsb
loop
jge
add
xchg
mov
cli
lret
sbb
insb
es
adc
mov
push
nop
xchg
xchg
dec
adc
xchg
mov
add
clc
and
cwtl
fbstp
ret
dec
mov
cmp
xchg
insl
push
dec
js
adc
adc
movsb
fists
repnz
leave
add
adc
pop
outsb
add
jmp
das
push
mov
ret
adc
iret
xor
lcall
xor
jnp
mov
mov
hlt
xchg
loop
jle
arpl
ljmp
psllq
repz
ja
pop
xor
or
jmp
inc
and
lahf
pop
mov
xchg
cs
ret
adc
inc
loope
sub
inc
stos
add
lret
push
pop
insl
inc
inc
mov
pusha
fisttpll
fwait
jb
inc
ret
inc
jno
lock
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
jmp
lahf
cmp
push
pop
fcomps
cmc
leave
xchg
or
jge
jle
mov
ret
test
inc
mov
inc
jle
shl
popa
mov
loopne
adc
push
or
xor
xchg
push
jmp
popa
add
inc
xchg
mov
mov
xchg
lahf
dec
outsl
push
jmp
cmp
leave
sti
mov
adc
leave
mov
rcrl
ja
aaa
or
mov
jmp
dec
scas
mov
rorl
shrb
xchg
inc
stc
jle
int
fldl
pushl
cmp
inc
dec
adc
pop
test
mov
cmp
mov
jnp
aad
dec
stos
daa
shll
mov
pop
fwait
dec
inc
insl
lahf
push
and
push
mov
sarb
orb
push
mov
sub
pop
clc
jmp
xor
and
repz
push
xor
test
fsubrl
and
push
xchg
fs
adc
mov
pop
cmp
jmp
shlb
daa
ss
or
push
mov
xor
cmc
sub
jb
push
push
rcr
aaa
mov
add
cmovg
insb
mov
xchg
out
sub
aad
push
psllw
xor
push
jp
cs
xchg
sti
push
fwait
dec
inc
mov
inc
sahf
pop
hlt
repz
mov
and
push
fs
mov
movsb
out
je
or
mov
push
lock
and
stos
shl
test
pop
cmp
fst
out
dec
hlt
or
insb
nop
pop
pop
or
pop
add
mov
mov
mov
sbb
jno
addr16
or
stc
sarl
hlt
mov
mov
cltd
pushf
xchg
xor
sbb
mov
sahf
stos
sbb
lret
push
add
jne
mov
inc
sbbb
or
and
lret
mov
mov
mov
icebp
mov
or
xchg
sbb
ja
out
dec
in
movsl
sbb
pushf
in
or
insb
push
mov
subl
daa
cmp
xor
mov
or
sub
int3
sar
mov
cmp
lods
sbb
and
rorl
shrl
mov
mov
add
lods
xchg
add
mov
sub
or
mov
adc
loop
push
xchg
and
test
mov
push
inc
dec
roll
rclb
add
imul
stos
push
xchg
sbb
lds
and
aam
cmp
jp
push
out
in
fadd
lret
out
out
rcrl
xlat
enter
mov
pop
mov
sub
movsb
ficoms
jmp
dec
adc
adc
ret
repnz
pop
jno
dec
cwtl
push
inc
and
out
outsl
dec
mov
scas
sbb
xchg
out
mov
ljmp
mov
and
sub
jp
test
mov
jmp
mov
call
jmp
mov
leave
ret
push
mov
sub
push
call
movl
cmpw
jne
push
call
movl
cmpb
movl
jne
movl
movl
lea
mov
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movzwl
and
mov
mov
adc
mov
sbb
mov
mov
sub
mov
push
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
mov
subl
xor
adcl
push
mov
add
mov
mov
mov
cmp
mov
mov
je
or
mov
sbbl
xor
add
sbbl
imul
mov
movl
jmp
or
xor
and
add
xor
add
and
mov
mov
or
mov
addl
xor
and
add
mov
sub
mov
sbb
mov
and
mov
sbbl
xor
adcl
add
cmp
movl
jne
subl
push
orl
pushl
pushl
call
mov
mov
andl
mov
mov
mov
orl
mov
subl
mov
subl
movl
andl
mov
decl
movl
mov
adcl
xor
add
jmp
notl
mov
xor
lea
push
mov
xor
lea
push
adcl
mov
xorl
pushl
call
mov
add
xor
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
adc
mov
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
jmp
push
call
xor
leave
ret
push
mov
push
movl
push
mov
mov
mov
mov
movl
movl
movl
cmp
jne
or
mov
sbb
mov
movl
jmp
cwtl
sahf
inc
mov
ja
mov
movl
cmp
mov
mov
leave
pop
js
mov
push
out
loope
adc
lock
cli
cli
or
cmp
cmp
lret
mov
inc
sti
stc
inc
pushf
rolb
inc
sub
jnp
jp
ret
aas
mov
lock
cltd
sbb
lret
push
sbb
pop
fstpt
in
arpl
loop
inc
or
push
jb
lahf
inc
jbe
loop
jno
sbb
gs
in
pop
or
add
movsb
fists
add
test
mov
lahf
aaa
cltd
jae
popa
outsb
data16
sahf
aaa
xchg
inc
sbb
mov
pop
cmp
lods
fnstcw
das
push
or
mov
loop
or
xchg
mov
mov
jno
leave
out
ficoms
push
je
stos
and
and
movsl
mov
mov
fidivrs
insl
nop
mov
insb
mov
lods
mov
fistpll
mov
ds
mov
mov
adc
out
ljmp
push
scas
cs
add
jae
push
lods
adc
dec
xor
xchg
cs
mov
cmpb
add
pop
cmpsb
ja
xor
mov
rolb
jae
push
dec
inc
push
std
xchg
data16
loopne
xor
sbb
jmp
out
pushf
lods
pusha
or
rcl
dec
mov
jae
je
movsb
dec
jp
sbb
xchg
xlat
loop
or
push
xor
lret
lret
add
jnp
into
pop
mov
je
addl
stos
or
dec
or
jo
insl
sbb
fucom
loop
pop
cmp
mov
pop
and
notl
scas
push
iret
dec
inc
jl
pop
push
bound
xor
mov
sbbl
add
addl
mov
movzwl
sbbl
jmp
cmp
es
repz
movsl
pop
xor
dec
dec
cmovo
jle
mov
ret
test
cmpsb
sbb
mov
fiadds
ret
test
cmp
aaa
data16
cwtl
adc
mov
jb
jge
dec
adc
jns
add
test
out
pusha
xor
call
xlat
sbb
popf
ss
mov
sbb
pusha
cld
xor
lcall
push
pop
scas
icebp
outsl
imul
push
pextrw
scas
mov
add
test
faddl
xchg
aaa
popf
add
push
insb
popa
or
xchg
les
mov
sub
dec
lcall
xchg
push
sbb
hlt
std
jo
xchg
xchg
mov
lods
sbb
sub
incl
jg
jmp
scas
push
mov
mov
inc
mov
and
lods
jb
adc
ljmp
inc
inc
shr
aas
dec
ret
out
movsl
inc
or
rcrb
cmp
mov
xchg
scas
into
add
xor
aad
icebp
ss
or
in
or
sbbb
xor
push
add
mul
lds
imul
arpl
sti
add
add
sarl
fldcw
shr
push
fstpt
int3
push
inc
lcall
test
adc
mov
sbb
xor
rcr
adc
add
xor
xor
lods
insb
cmp
and
or
sub
xor
xor
inc
cmp
sub
push
inc
pop
addr16
call
out
nop
push
repnz
fs
mov
call
adc
cmp
insl
add
and
xchg
xchg
aaa
pusha
mov
mov
aaa
inc
add
aaa
inc
add
add
jmp
xorl
mov
jmp
dec
rcrb
mov
push
loope
sahf
adc
mov
jle
mov
jmp
jnp
popf
xchg
cmpsl
fcmovb
pop
mov
dec
scas
sarb
data16
and
cmp
outsb
pop
or
sub
mov
loopne
mov
push
pop
jmp
cli
pop
adc
sub
sub
fmul
insl
pushf
cmpsb
ja
cltd
xchg
cmc
fisttpl
insl
xchg
shr
pop
arpl
xor
pop
cmpsl
insb
cmpsb
jb
cmp
and
mov
adc
iret
mov
pop
scas
mov
mov
adc
inc
or
test
inc
aas
or
jecxz
xor
sti
or
dec
xlat
aad
add
outsb
idivl
pop
mov
and
push
lcall
xlat
loopne
test
sbb
cmpsl
mov
and
pop
shrb
and
dec
sub
outsb
test
sub
mov
or
ret
ja
fbstp
out
pop
nop
mov
fbstp
das
es
daa
cwtl
fwait
push
or
das
dec
test
inc
lcall
sbb
jnp
add
dec
mov
stos
or
ret
cmp
add
loop
sbb
fnstenv
cwtl
cmp
insb
sub
lods
push
in
or
fisubrl
shll
test
mov
push
jae
xchg
test
cwtl
test
in
jl
test
pop
pop
lcall
je
pop
call
faddp
and
jecxz
stos
inc
xchg
dec
mov
dec
lea
pusha
add
xchg
inc
pop
mov
hlt
mov
jnp
or
mov
mov
xchg
mov
jne
call
test
jmp
and
in
popa
push
lret
xchg
cmp
jle
jg
jle
mov
push
daa
repnz
daa
sub
sub
pop
cs
pop
sub
out
loopne
outsb
mov
push
xchg
js
pop
xor
icebp
pop
xor
repnz
rcrl
adc
in
inc
cmpsb
sbbb
mov
ret
in
fadd
dec
jle
rorl
cmp
cmpsb
mov
movsb
push
xor
out
sub
xchg
out
jno
divl
in
add
jne
xchg
mov
inc
cmc
dec
pop
scas
push
arpl
bswap
lds
ja
xchg
mov
jp
popf
xlat
xor
push
cmpsl
imul
xor
test
movl
jb
out
dec
and
mov
cltd
jmp
dec
sbb
add
cli
sub
mov
es
cmp
insb
adc
ret
mov
mov
jb
sbb
mov
mov
mov
and
mov
lret
inc
inc
outsb
das
pop
adc
mov
shll
ret
jnp
lret
push
xor
lret
fwait
ret
cli
mov
add
div
adc
push
cmp
sbb
mov
mov
arpl
jns
jnp
loope
loope
push
mov
idiv
in
hlt
adc
pop
xchg
cld
inc
in
aam
push
xchg
push
jno
jge
or
mov
aam
std
or
data16
lock
push
adc
and
mov
and
sbb
shrb
push
add
int
mov
mov
stos
outsb
scas
fxch
adcb
mov
add
xchg
pop
push
xlat
jge
add
mov
jae
xchg
test
cld
dec
ret
push
mov
sub
andl
movl
mov
or
jmp
pop
cmp
inc
pop
arpl
js
push
loope
jns
scas
or
jle
add
cmp
rcr
inc
dec
jnp
mov
jl
mov
sbb
inc
sti
push
idiv
movsl
outsl
in
imul
fdivl
ficoms
pop
mov
inc
mov
pop
mov
xor
mov
or
xchg
sbb
push
inc
stos
xor
push
xchg
cmp
or
aas
repz
sub
xor
or
shll
mov
arpl
add
adc
push
jg
xor
aam
pop
xchg
jge
sub
orb
ret
mov
lds
pop
mov
nop
xchg
int
mov
mov
mov
pop
push
ja
sub
fisubs
inc
mov
dec
incb
out
pop
and
xor
jge
and
insl
cmp
int3
test
jbe
pop
xor
sbb
dec
pop
cmpsb
daa
xchg
fidivs
push
arpl
imul
and
adc
movsb
sub
sub
rcrb
jno
cld
push
jb
call
mov
aas
lea
mov
movl
xchg
sub
gs
jns
shll
jmp
adc
pop
pop
ret
xor
xchg
dec
movsl
mov
xchg
fwait
cmpsl
adc
xchg
pop
jnp
mov
fstl
xor
cltd
sbb
js
add
insl
fdiv
popf
pop
fdivs
push
push
and
xchg
in
movsb
lods
mulb
in
mov
xor
test
and
in
dec
rcrb
push
fdivrl
repz
aad
mov
aas
mov
negb
out
or
aad
je
jmp
pop
jl
pop
pushf
push
fsubl
sub
test
in
and
loopne
and
pop
clc
sbb
add
pusha
xchg
ret
mov
pushf
movsb
push
sub
or
icebp
gs
xor
mov
out
cmp
pop
and
push
mov
in
xor
add
xchg
add
mov
sub
mov
and
lea
sub
mov
mov
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
pushl
call
jmp
xor
push
lea
mov
mov
jmp
aad
shlb
dec
js
js
jge
je
adc
jle
add
xchg
add
push
mov
adc
jg
nop
sub
idiv
movsl
sbb
aaa
cmpl
sbb
test
mov
test
xchg
mov
push
xchg
sub
xchg
mov
lcall
dec
and
jg
adcb
dec
fwait
mov
dec
sarl
scas
stc
or
es
addps
jno
int
mov
mov
dec
icebp
pop
loop
gs
les
stos
pop
pop
mov
sub
mov
mov
movsl
repnz
pop
jnp
add
add
and
xor
cmp
add
lret
mov
cmp
test
adcl
lods
push
fwait
clc
ja
in
fists
fs
and
jle
push
jp
jno
dec
fs
jno
xor
pop
sar
lods
dec
out
xchg
cmpsb
mov
inc
or
icebp
icebp
xor
mov
sbb
xchg
lcall
jb
sbb
pop
ret
fwait
mov
loopne
mov
adc
pusha
gs
ret
mov
push
lret
test
and
out
aam
jno
cmp
mov
rorb
cs
imul
loop
inc
mov
push
nop
test
scas
movsl
pcmpeqb
fcompl
enter
xchg
cmp
inc
aam
dec
fcoml
sarl
and
pop
rcrb
lahf
dec
rcll
sub
pop
or
ss
and
mov
or
or
aam
test
xchg
mov
dec
test
outsl
jne
mov
fisubrs
push
movsb
imul
sbb
cmp
inc
xorb
mov
into
push
mov
xorl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
neg
jmp
loopne
test
cmp
pop
out
mov
jle
add
popa
jns
addr16
pop
push
dec
sub
mov
popf
cmp
outsl
xchg
notb
inc
jne
adc
mull
push
sub
adc
ret
lret
mov
cmp
xor
call
out
sub
lods
ss
xchg
aaa
lret
faddl
mov
jbe
leave
cltd
loope
push
cmp
cmpsb
popw
adc
fldt
out
or
dec
sub
sbb
pop
inc
stos
test
cmp
inc
int3
sbb
test
sarb
loopne
outsl
push
ret
sub
cmp
and
in
xor
inc
out
ret
push
into
stos
js
mov
push
out
mov
shll
imul
out
dec
xchg
inc
add
jmp
inc
sub
mov
in
and
pushf
add
in
ret
mov
sahf
iret
fsubrl
mov
push
push
add
ljmp
out
test
sbb
inc
dec
add
cwtl
inc
repz
cli
out
stc
dec
mov
push
xchg
mov
loope
mov
jb
jae
xor
jns
fs
js
add
repz
in
or
repnz
cli
mov
jge
shl
xor
add
dec
enter
mov
mov
mov
js
les
adc
or
xchg
ficompl
aad
popf
adc
shll
push
bound
add
es
cwtl
xchg
sub
std
and
or
pop
xchg
jecxz
fadd
and
mov
mov
cmp
cmp
sub
mov
enter
sbb
fdivrs
fiadds
rcrb
xorl
lret
dec
inc
hlt
sub
cwtl
or
sarb
insb
arpl
cmpsb
xchg
push
add
jno
movsb
mov
mov
loop
sbb
sti
popa
sti
inc
fiadds
xor
adcl
mov
movl
xor
addl
xor
andl
add
negl
add
incl
div
mov
movl
movl
movl
cmp
je
movl
movl
andl
lea
xor
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
imul
jmp
and
out
je
inc
adc
sbb
sbb
out
subb
jle
add
mov
in
cmp
shrl
fcoms
jns
xchg
popf
insb
xlat
rolb
pop
loopne
and
adc
adc
mov
mov
dec
iret
inc
mov
cli
xlat
je
sbb
enter
sub
push
xor
out
xor
out
and
xor
mov
sarb
lret
cmp
cmc
lret
nop
and
pop
enter
jp
dec
rolb
sub
mov
aam
fs
mov
xchg
loope
and
test
test
adcl
mov
xor
aaa
aam
xor
arpl
mov
shl
ja
out
xor
add
loope
dec
cmp
lods
in
sub
dec
jp
std
and
frstor
aam
xchg
xor
in
fbld
push
add
lret
scas
mov
in
sahf
jnp
inc
cmpsb
out
test
sbb
in
test
cli
and
and
cmpsl
push
mov
inc
cli
cmc
insb
or
dec
dec
add
mov
jle
push
enter
ljmp
divl
sub
and
dec
fstpt
pushf
lea
int
das
or
sub
adc
mov
sahf
test
bound
dec
mov
or
cltd
idivb
ds
xor
sarl
mov
push
repz
repz
xchg
mov
xlat
push
inc
cmp
pop
imul
push
mov
test
clc
inc
aad
outsb
add
jp
jnp
hlt
cmpsl
xor
xchg
es
cmp
mov
outsl
jmp
push
bnd
out
cmpsb
orl
dec
fsubrl
jecxz
xchg
xor
sub
jno
push
push
out
gs
xchg
mov
test
cwtl
ret
fists
inc
mov
sbb
mov
cmp
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
adc
mov
mov
movzbl
or
mov
orl
mov
mov
orl
push
xor
xor
sub
push
mov
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
sub
add
mov
addl
lea
not
mov
mov
mov
and
mov
andl
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
lea
jmp
ss
lods
jmp
push
mov
xchg
ds
and
jle
jae
jg
aad
fwait
movsl
mov
and
outsl
popa
sbb
popa
cmp
or
popf
mov
daa
and
test
in
push
add
mov
pop
push
test
or
add
roll
cwtl
rcl
aad
es
mov
and
stos
ja
push
and
xchg
nop
pop
adc
jp
push
sbb
and
sbb
and
xchg
mov
enter
push
sbb
in
ljmp
enter
and
pop
cmpl
mov
popa
lea
xor
das
fwait
xchg
or
mov
test
xchg
data16
dec
test
stos
sub
and
sub
mov
in
sbb
mov
inc
out
lcall
insl
pop
cmp
xchg
dec
in
add
iret
xchg
mov
push
stos
sti
jge,pn
jle
pop
jl
std
fnstenv
mov
adc
dec
cltd
push
std
xchg
scas
popa
and
lcall
xchg
sbb
jmp
or
test
xchg
add
or
hlt
out
sub
lret
xor
lcall
test
shll
and
incl
shl
subb
sysenter
sub
adc
and
scas
xchg
pop
mov
cmp
adc
rcr
ss
rclb
mov
jo
call
xchg
mov
lret
mov
push
fadds
add
es
cmp
dec
jp
xchg
inc
push
xchg
mov
push
jnp,pn
loope
inc
pop
mov
loopne
or
xlat
lahf
push
rcll
pop
sarb
pop
and
jl
dec
ret
test
push
pop
push
movsb
cltd
aaa
or
jo
nop
dec
mov
push
xchg
xorl
je
ds
pop
lcall
outsb
mov
fldt
rcll
bound
insl
sbb
test
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
inc
mov
orl
mov
xor
xor
add
add
xor
mov
mov
adc
jmp
xchg
inc
in
mov
das
dec
pop
scas
stc
in
jle
and
jle
arpl
or
xor
cli
nop
ret
imul
fidivl
mov
out
outsb
mov
add
jnp
lods
insl
andb
xchg
mov
popa
into
mov
rol
popa
cmp
or
mov
mov
xchg
call
movsb
or
push
rolb
idivb
dec
rolb
push
movsl
aam
out
pop
divl
or
pop
mov
std
ret
mov
pop
push
leave
daa
fsubl
dec
cmp
call
dec
push
in
cmp
mov
mov
inc
xchg
jno
inc
mov
jno
cmp
arpl
test
sub
mull
ss
out
fsts
add
pop
jmp
bound
mov
xor
lock
xor
je
loope
mov
dec
cld
mov
fimull
jae
push
scas
or
or
sub
mulb
loope
push
and
add
aam
rcrb
fsubrl
repz
sbb
in
lods
movsl
add
jne
jae
lods
mov
insb
test
subb
xchg
test
shll
xlat
add
cmp
sti
inc
cmp
pusha
and
xchg
popa
mov
or
imul
call
add
pop
std
jno
call
and
cwtl
add
xlat
or
add
loop
nop
addr16
inc
mov
aaa
rolb
push
xor
cmp
pop
mov
sub
inc
das
sbb
sub
push
push
sti
icebp
xchg
ret
es
pop
mov
stc
or
neg
or
pop
scas
xchg
mov
insl
pop
push
inc
or
clc
pop
sbb
inc
test
outsl
mov
jg
add
dec
imul
adc
in
stc
pop
fstpt
mov
sarl
cmpsb
sub
xchg
lea
idivl
adcl
mov
sbbl
jmp
pop
push
jg
xor
add
sahf
mov
jle
and
jle
popa
jle
imull
test
and
pop
lods
sub
idivb
cli
mov
xchg
fistpl
push
je
xchg
cmp
cmpl
movsl
idivl
in
in
dec
shlb
rolb
stc
xchg
into
ret
adc
cmp
in
call
push
pop
lock
outsb
pop
inc
push
jne
sahf
lret
sub
xor
or
adc
test
mov
nop
les
ret
inc
ljmp
out
scas
lcall
imull
lea
jmp
mov
jecxz
stos
xchg
inc
test
jle
push
imul
fwait
subb
pop
push
lods
fnstenv
inc
inc
jbe
stos
mov
cmp
ljmp
mov
into
jmp
push
lcall
push
xchg
xchg
mov
mov
pop
mov
scas
or
stc
dec
fisubs
test
ds
es
xor
xchg
cwtl
into
lcall
sbb
ret
pop
dec
add
aad
pusha
loop
scas
clc
sahf
mov
mov
cmc
mov
loopew
jge
sub
mov
arpl
shr
out
push
mov
add
rclb
pop
test
inc
js
std
mov
push
cwtl
jns
dec
orl
push
add
add
cwtl
push
addb
mov
sbb
xchg
jno
inc
test
imul
or
mov
mov
iret
jmp
mov
mov
movsl
int
xchg
push
shll
enter
and
dec
in
movsb
movsl
je
outsl
mov
leave
add
add
andb
rolb
adc
adc
ss
sub
das
gs
mov
out
icebp
sahf
sti
xchg
icebp
mov
mov
dec
clc
mov
fcmovu
mov
repnz
gs
add
scas
jno
rorl
jne
outsl
xor
fwait
mov
int3
fldlg2
std
cmp
pop
mov
xorl
mov
adcl
movzwl
xorl
add
notl
mov
mov
or
mov
xor
add
cmp
jne
dec
mov
mov
xor
add
cmp
jmp
stos
adc
inc
jno
stos
icebp
jl
and
cmp
jl
jle
fmuls
add
mov
inc
clc
loope
out
adc
bound
inc
scas
aam
out
cmp
push
adc
pop
sbb
and
out
jae
cmp
cmpsb
int
pop
jmp
inc
adc
outsb
imull
and
fmull
pop
and
test
mov
hlt
xchg
out
imul
std
cmp
adc
xchg
mov
mov
in
insl
add
push
xlat
fdivrl
cmp
int3
fwait
inc
adc
push
inc
push
mov
scas
inc
jl
stc
or
adcb
sti
xchg
and
sbb
loop
mov
fisubrs
fsubrs
adc
in
or
xorb
into
addr16
test
clc
and
inc
ljmp
test
sub
mov
push
adc
pusha
repz
jmp
push
fmul
enter
div
fxch
hlt
rol
insb
mov
ss
mov
jb
xchg
jbe
inc
enter
push
ret
int
iret
add
add
mov
mov
fisubs
cmp
in
lds
dec
mov
in
into
inc
sub
inc
pushf
and
push
mov
jg
stos
iret
cs
fsubrl
mov
ds
repz
enter
int
popa
js
int
popa
repnz
xchg
test
pop
mov
jns
out
sbb
nop
and
mov
nop
xchg
sub
out
jae
push
dec
sub
cmp
sub
scas
add
std
add
jbe
mov
jne
mov
into
js
aad
scas
cmpsl
xchg
arpl
xchg
dec
negl
push
dec
ljmp
push
das
pop
into
inc
mov
add
xchg
dec
adc
pop
pop
push
jne
pusha
inc
stos
imul
push
pushf
mov
pop
stos
into
adc
imul
jnp
negl
xchg
and
pop
mov
add
mov
mov
xor
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
jmp
xchg
or
jmp
mov
sarb
and
jle
daa
mov
inc
pop
bnd
dec
cmp
imulb
shlb
push
cmp
mov
pushf
out
adc
js
pop
in
add
pop
into
sbb
sbb
pop
adc
xor
mov
idivb
mulb
lret
aam
loopne
aad
loope
ret
xor
adc
add
jge
mov
aaa
inc
dec
jmp
loopne
cmp
fsubl
adc
stos
xor
aas
mov
dec
pushf
sbb
cli
lahf
xchg
repz
xlat
cld
sub
xchg
lock
mov
inc
loope
jl
imul
in
mov
jno
arpl
sub
pushf
mov
xchg
and
and
cli
inc
inc
stc
ret
sar
and
repz
insb
ja
jecxz
fdivr
out
je
cmp
inc
loope
out
mov
mov
enter
mov
xchg
and
pop
xor
test
test
out
ja
bound
imul
jp
adc
lea
dec
rcrb
lods
test
mov
repz
mov
xchg
push
outsb
push
xchg
stos
push
and
and
mov
cld
cltd
pop
hlt
imul
outsb
mulb
lods
mov
inc
push
incl
fs
ljmp
mov
mov
cmc
push
cmp
push
fwait
imul
push
cli
push
lock
das
fcomp
xchg
popf
or
or
mov
or
ss
loop
or
jno
push
push
pusha
mov
inc
in
mov
and
outsl
and
jno
fneni(8087
aad
push
inc
sub
push
shr
shrl
xor
sub
daa
jno
sub
xchg
sub
imul
cld
cmp
dec
sti
jb
data16
stc
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
jmp
sbb
aam
je
and
adc
or
jle
and
jle
add
xchg
outsb
roll
outsl
into
fldcw
add
mov
jo
cmpsl
rcrl
push
dec
roll
cltd
std
lahf
sbb
adc
push
cli
mov
test
mov
add
xchg
sub
scas
sub
repnz
cmp
test
jl
mov
add
lahf
out
xchg
stos
mov
add
pop
adc
mov
xlat
push
mov
stc
mov
jns
sbb
jae
dec
dec
push
das
cld
mov
push
and
cmp
sub
nop
dec
shlb
aas
xchg
fldt
cmp
push
testb
popf
add
cmpsb
mov
push
lret
rcl
push
sbb
push
loop
push
addr16
loop
sbb
insb
inc
lea
loopne
xor
into
or
sub
inc
div
xchg
add
addr16
scas
into
xor
adc
adc
xchg
movsl
js
dec
jb
xor
pop
cs
dec
fisttps
xor
push
out
stos
or
push
push
sbb
test
mov
pop
loope
add
movsb
pop
aas
mov
pop
in
jp
lret
jae
fbld
xchg
ficompl
int
mov
int
clc
gs
xchg
xchg
fiaddl
push
xor
fcoml
jmp
and
dec
fbstp
ret
sub
pop
mov
jnp
loope
stos
jmp
jbe
adcb
sarl
into
faddl
jae
cmp
inc
inc
sub
imul
adc
sbb
mov
mov
lods
adc
movsb
sbb
sbb
lods
jbe
dec
push
mov
cmp
lret
out
mov
cs
repnz
fcmovbe
inc
xorl
fwait
loopne
push
mov
sti
mov
je
or
sbb
rcrl
adc
xchg
clc
sbb
push
pop
jbe
mov
pop
fists
push
cmpsl
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
jmp
sbb
outsl
jno
out
jne
mov
stc
lret
fistpll
and
jle
or
insb
push
pushf
scas
mul
rcrb
xchg
fists
and
and
shl
movsb
ja
push
lret
push
nop
stc
dec
arpl
loopne
jecxz
push
adc
es
test
dec
cmpsl
fadds
enter
mov
mov
cmp
repnz
fiadds
add
push
lea
jmp
cmc
xchg
push
mov
imull
add
inc
les
insb
ret
and
lods
cld
adc
loop
pop
ss
loop
repnz
adc
and
cs
xorb
xchg
test
mov
rorl
popa
imul
sarl
pop
xchg
mov
cmp
sbb
push
or
xor
add
mov
jne
xor
int
pop
push
in
mov
dec
mov
fcmovne
xchg
cmp
lds
lahf
xchg
mov
inc
sti
xor
fcoms
lock
push
cmc
mov
jnp
pop
push
mov
in
mov
addr16
push
xor
or
cltd
es
sub
popa
cld
xchg
add
or
cmpsl
mov
sub
pushf
out
xchg
shrb
lret
push
and
and
sahf
insl
movsl
xchg
ret
stc
adc
inc
xlat
stos
pop
xchg
cli
adc
cwtl
or
and
sub
push
mov
rolb
incb
adc
test
xchg
push
fsubl
dec
js
insb
and
inc
and
fcomps
aam
int
addl
rcr
jmp
sahf
mov
mov
faddp
adc
sub
jmp
pop
mov
sub
jb
jg
adc
inc
xchg
add
jg
pop
cli
jecxz
sbb
lock
stc
push
mov
jnp
sbbl
ja
inc
dec
adc
mov
cmp
push
push
xor
out
dec
inc
aam
push
js
cli
mov
or
mov
mov
pushl
jmp
lods
mov
outsb
xorl
pop
xchg
repnz
data16
jle
and
jle
adc
and
outsl
lcall
mov
jecxz
add
add
lahf
daa
cmp
sbb
pop
dec
in
jo
or
scas
cmp
adc
cmp
dec
xchg
fsubl
popf
dec
js
lods
cltd
xchg
test
dec
mov
sbb
lods
bswap
cli
and
push
ljmp
jne
xchg
mov
andb
jl
adc
sbb
xchg
fwait
clc
xlat
pop
jbe
pop
xchg
adc
xor
mov
add
cmpsb
scas
add
rcrb
repz
jns
pusha
sub
out
pushf
add
enter
lock
fstl
lcall
cmp
aas
xchg
sbb
add
inc
jns
jg
xor
movsb
adc
add
xchg
fstpl
xchg
das
xchg
xlat
ss
mov
fs
dec
pop
nop
push
adc
xor
dec
xchg
xor
dec
sbb
in
orl
mov
lea
inc
bound
fidivs
xchg
outsl
pop
sahf
pop
scas
or
jnp
pop
out
xchg
addl
test
push
pop
mov
mov
lahf
push
lock
clc
adc
and
jae
mov
push
rcll
aas
cli
mov
push
mov
popa
sub
mov
and
cmp
lcall
sub
loope
and
sti
adc
fcomps
jmp
fwait
aas
ret
les
in
movsl
aas
and
test
mov
fs
lock
div
mov
xchg
dec
xor
xchg
xlat
pop
lahf
push
add
cmp
lret
aam
dec
lcall
cmp
gs
jo
inc
cmc
or
mov
das
or
sub
lods
dec
test
mov
lds
lock
es
fs
fs
xchg
in
ret
cmovns
mov
and
sub
mov
stos
or
cmp
sbb
jmp
loope
ljmp
clc
ljmp
fstpt
and
jle
push
xor
rolb
sbb
mov
mov
outsb
out
sti
push
setge
ret
push
inc
xor
into
xor
push
xor
ret
xchg
mov
push
mov
rcrl
sub
movsb
hlt
cld
sahf
lcall
enter
cmpsl
addr16
cmpxchg
repz
out
cmp
enter
mov
scas
or
xchg
outsl
or
cmc
insl
int
out
or
sbb
xorb
xor
scas
enter
xchg
jne
sub
jae
and
push
mov
sub
jns
sarb
xor
add
stos
out
sub
push
je
gs
adc
lcall
stos
out
std
mov
pop
jle
das
sarl
imul
sub
cmc
sbb
dec
ret
setnp
jnp
notl
jbe
push
ja
lods
test
ds
sub
loope
sbb
mov
mov
fmull
loop
xchg
mov
fisubrl
jns
add
cmpsb
or
jecxz
shlb
mov
xor
lods
dec
leave
jb
push
inc
sub
push
int
mov
pop
clc
js
dec
push
dec
inc
rorb
mov
or
mov
dec
xchg
xor
test
mov
inc
loopne
iret
test
call
and
push
cmp
in
mov
iret
f2xm1
dec
mov
jae
pop
fidivrl
inc
into
pop
mov
cli
xlat
inc
sbb
ljmp
push
frstor
movsl
lea
jp
xchg
jo
shr
in
out
inc
lods
in
loopne
fistpl
push
and
jns
mov
aaa
ljmp
mov
xor
mov
add
insb
dec
jecxz
pop
test
adc
roll
mov
push
cmp
add
orl
jno
ficomps
mov
getsec
xchg
ss
inc
hlt
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
add
movl
xor
xor
xor
mov
push
sub
mov
addl
xor
mov
add
orl
mov
mov
sub
mov
jmp
shrl
stos
fadd
cwtl
pushf
enter
mov
jle
cmp
lock
cmc
or
add
ftst
data16
rcrb
sub
xchg
mov
lret
je
jbe
cmp
xor
xor
inc
sbb
mov
pop
cmp
rcr
int3
test
imul
pop
push
adc
subl
dec
lret
or
jecxz
inc
or
stos
neg
jno
enter
mov
inc
ljmp
call
dec
and
aad
clc
push
xchg
push
lods
nop
or
call
ficoms
add
adc
mov
cmp
jno
test
lock
cmp
xchg
dec
loopne
sub
push
scas
mov
ljmp
jno
mov
cwtl
inc
pop
sub
lds
mov
adc
sbb
lret
je
cmp
mov
jno
repnz
cmp
push
xor
adc
imul
nop
incb
cmp
test
std
sbb
ja
and
dec
leave
dec
jnp
push
movsl
jbe
lret
sarl
or
lahf
jge
sbb
push
sub
push
pop
adc
pop
adc
ljmp
add
adcb
dec
xchg
xchg
xor
out
cli
xor
jno
push
xorl
fsts
mov
stos
push
loope
xor
push
jle
aam
pusha
in
dec
lea
mov
rcr
shll
adc
insb
push
jl
pop
sub
andl
fcoms
out
xchg
push
lds
cs
jp
pop
cwtl
dec
or
mov
mov
mov
repnz
add
push
jne
dec
mov
rorl
or
cmp
fcmovu
in
jns
mov
jbe
fcmovu
lret
cmp
movb
xchg
rcrb
into
in
push
inc
rcrl
movsb
push
repz
jb
adc
shlb
nop
test
cmp
add
push
psadbw
xchg
cmp
out
push
sbbl
jmp
lds
popa
mov
fisttpll
movsl
jle
jle
cmp
shll
push
push
jns
inc
sbb
dec
insl
nop
xchg
mov
jecxz
rcrl
je
sbb
test
jle
loopne
sar
adc
mov
in
cli
mov
push
loope
cmp
jne
mov
inc
sbb
cmp
pop
ret
fs
int
sti
cmc
jecxz
mov
inc
pop
mov
fstl
jmp
inc
or
xchg
fistpll
cmp
in
pushf
pop
jle
shl
cmp
mov
lods
cmp
cmpsb
jcxz
inc
sbb
out
into
popa
fxch
pop
xor
mov
cmp
mov
sbb
enter
xor
pop
into
inc
loope
mov
jp
and
fisubrs
lahf
gs
arpl
push
pop
scas
sbb
cs
pop
and
loop
aad
inc
cs
mov
push
mov
and
adc
mov
std
enter
xorb
imul
les
sbb
xchg
aaa
outsl
jne
jg
leave
loop
push
out
inc
stos
dec
pop
rorl
dec
pop
cwtl
ljmp
dec
leave
insl
add
sub
cmp
pop
jb
fwait
or
loopne
push
aad
jae
mov
rolw
cmp
jmp
lcall
xor
addr16
jnp
mov
sub
shr
jmp
orl
dec
pop
pop
adc
mov
mov
push
sub
les
cltd
lock
dec
mov
pop
rcll
or
push
pusha
sub
mov
add
or
xchg
movsl
inc
pop
addl
mov
add
loopne
out
mov
aaa
push
push
adc
scas
adc
xor
lret
shrb
loope
into
xchg
ficoml
lcall
in
sbb
or
xchg
sbb
icebp
rolb
or
or
fisubrl
rorl
mov
mov
sbb
or
leave
movl
je
mov
mov
sub
mov
mov
or
jmp
push
lcall
cmpsl
or
inc
pop
cld
xchg
jle
jl
jle
testl
pop
hlt
xor
mov
sub
dec
scas
jne
les
and
hlt
jnp
cmc
outsl
dec
and
das
scas
pop
push
sbb
add
int
stos
pusha
leave
sbb
fsts
push
inc
and
or
in
jnp
sub
test
jo
mov
test
mul
cld
insb
js
mov
xlat
andl
cltd
es
std
add
xchg
mull
rclb
pop
loope
mov
std
leave
call
clc
jo
cmpsl
outsb
mov
cmc
xorl
in
test
insl
sbb
sub
cmp
mov
inc
add
dec
mov
test
mov
repnz
cmpsb
adc
loope
and
addr16
add
or
pop
call
mov
jns
popa
xchg
test
push
pop
pop
sub
call
push
lods
cwtl
or
or
cld
js
cmp
xchg
mov
hlt
xchg
inc
jb
icebp
mov
adc
xchg
shlb
enter
into
std
outsl
cld
imul
inc
test
js
and
in
call
add
int
out
aaa
xchg
jge
cmp
pop
cld
mov
dec
cli
in
xlat
out
popa
xor
je
xchg
cs
clc
cli
jecxz
pop
pop
insb
popf
pop
mov
xlat
ja
std
dec
cwtl
movsb
lods
in
push
or
xor
push
push
loopne
push
fucomi
cmp
mov
sbb
push
das
decb
aas
cmpsb
pop
lock
lea
decl
inc
call
sbb
push
mulb
and
mov
add
out
fisttpll
sbb
push
mov
repnz
add
into
mov
out
cmp
in
push
aaa
enter
mov
in
out
add
add
add
or
mov
aad
insb
xchg
cmp
ja
lahf
and
movsl
sbb
add
inc
insb
xor
in
ss
xchg
out
lods
and
sbb
and
fdivp
push
or
inc
call
xchg
into
mov
shll
into
jge
xlat
popa
ror
xchg
mov
mov
mov
sbb
add
mov
mov
xchg
adc
sub
and
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
sub
mov
mov
orl
mov
jmp
mov
data16
gs
jmp
sub
and
jl
jle
repnz
jae
jecxz
push
out
cld
cmc
fidivrl
adc
mov
hlt
adc
jno
repnz
inc
sub
sub
repz
and
enter
add
inc
or
mov
or
lock
mov
lock
inc
pop
mov
lds
mov
xchg
cmp
dec
xchg
cmp
les
pop
ljmp
fdivr
fisttpll
pop
stc
pop
pop
repnz
dec
movsb
push
or
mov
mov
pop
les
outsb
sbb
pop
inc
jge
je
mov
push
xchg
jg
fildl
cmp
sbb
imul
sti
rclb
lret
div
lods
cmp
fmulp
push
push
int
test
ja
addr16
pop
clc
push
enter
sub
push
mov
pop
outsb
vpmovsxbd
movsl
or
mov
sahf
inc
mov
cltd
inc
leave
add
divl
jge
ljmp
dec
mov
inc
dec
mov
out
mov
sbb
dec
stos
add
andl
push
cmp
popf
lret
mov
icebp
les
dec
sbb
add
fiaddl
jnp
fwait
dec
adc
and
sub
test
pop
into
cmpsb
in
sbb
lods
fimull
in
mov
mov
leave
aaa
mov
ss
fwait
test
sub
ds
out
cli
xchg
daa
or
arpl
lock
rcr
and
dec
pop
movsl
dec
xchg
jge
les
mov
pop
dec
repz
test
inc
mov
push
jmp
inc
mov
insl
or
jg
into
xlat
mov
mov
call
repz
mov
iret
jg
leave
mov
push
test
fwait
enter
hlt
movsb
mov
and
shl
icebp
loope
jp
aaa
mov
mov
jp
cmp
xchg
jle
mov
xchg
mov
popl
mov
mov
xor
movsb
pushf
add
and
int3
lds
adc
mov
mov
pop
in
out
mov
rep
mov
into
cmc
sti
ja
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
push
push
call
jmp
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
add
movl
mov
mov
mov
je
mov
xor
sbbl
add
movl
jmp
imul
jno
dec
test
pusha
sub
out
jle
cmp
std
hlt
rorb
jge
mov
out
push
pop
ljmp
loope
xor
addr16
in
inc
mov
scas
adc
add
imul
mov
sub
push
push
adc
mov
add
lcall
decl
jge
jp
mov
into
rorb
negl
aam
pop
add
add
lock
push
test
pushl
aaa
xchg
xchg
test
fwait
loope
sub
popa
cmp
mull
and
jl
xor
in
out
pop
mov
mov
add
pusha
jle
push
inc
fiadds
inc
pop
xchg
jp
adc
xor
pop
lock
inc
rorl
mov
mov
push
aas
arpl
cmpsb
adc
outsb
inc
push
sub
fnstenv
shlb
fsubs
cwtl
pop
cmp
movsl
mov
mov
das
inc
xor
inc
ds
sub
icebp
pop
aad
ror
jbe
pop
fucomi
add
rclb
push
xchg
pop
inc
decb
mov
sub
insl
mov
jne
add
inc
mov
int3
sbb
or
idiv
adc
sbbl
cmp
int3
push
cmpsb
add
xchg
hlt
mov
repnz
adc
lods
pop
ss
xor
bound
add
mov
into
cmp
sbb
cmpsl
push
pop
pop
mov
mov
push
mov
insl
sbb
enter
xchg
mov
cmova
cli
pop
mov
cmc
pop
dec
fs
shrb
dec
std
mov
pop
js
pop
ret
not
mov
ja
out
or
and
stc
adcl
mov
fsubr
adc
adc
xchg
jnp
movsl
cs
rolb
adc
push
jmp
sbb
cmc
lods
pusha
lea
pusha
lret
gs
out
icebp
loop
cmp
ss
push
rorl
or
shll
add
xor
cmc
add
mov
int3
sub
jmp
inc
add
test
or
xlat
aaa
inc
add
or
add
jne
addl
call
sbb
mov
mov
xor
xor
or
mov
mov
xor
addl
add
movl
cmp
movl
je
addl
pushl
xorl
pushl
decl
call
movzwl
sub
jmp
or
and
loopne
shl
sti
and
and
push
in
jle
cmp
cmpsb
and
sub
les
ds
ds
mov
dec
fcmovnbe
jno
in
ja
push
pop
inc
or
xchg
sub
pop
xchg
and
or
inc
xlat
sub
cmpsb
push
test
jns
or
sub
loop
cmp
dec
xchg
mov
mov
loope
daa
daa
or
xchg
sub
mov
nop
xor
xor
sub
loopne
repnz
out
mov
loopne
pop
iret
repnz
hlt
lods
dec
mov
mov
and
adc
in
jo
mov
jmp
inc
loop
sbb
loopne
rorl
jmp
stos
int3
enter
aas
mov
adcb
arpl
mov
dec
push
out
mov
mov
lea
pop
sarb
fwait
sbb
pop
or
insb
pop
cmp
xchg
inc
data16
fs
cmp
dec
cmp
test
pushf
leave
cmp
mov
add
fldl
or
popa
or
push
or
lock
and
lods
and
cli
xchg
pop
sarl
pop
push
mov
mov
xor
jae
push
push
dec
lock
in
imul
mov
cltd
cwtl
mov
add
ljmp
sub
xchg
adc
cltd
sbb
push
jmp
or
push
xchg
cmp
mov
push
out
loope
cs
dec
or
ja
shll
jmp
cmp
xchg
push
dec
or
push
push
clc
in
ja
dec
arpl
jmp
xor
lock
xchg
fists
dec
int3
xchg
mov
cwtl
in
sbbl
ret
popa
int3
out
xor
sub
mov
jmp
xor
and
int3
fcomi
mov
outsb
push
ja
pushf
push
add
cmp
pop
push
scas
int
cs
dec
lret
imul
push
push
lahf
sub
dec
fists
jnp
jmp
in
inc
dec
and
xchg
sub
repz
outsb
in
jb
cmp
jmp
mov
xor
mov
xor
adcl
add
movl
jmp
dec
ret
xchg
push
nop
push
dec
ret
mov
push
jo
ret
jle
cmp
hlt
pop
mov
inc
in
add
inc
loopne
sbb
push
in
pop
mov
xchg
cld
loopne
cmp
ret
in
ljmp
arpl
popf
in
cmp
xchg
adc
dec
arpl
in
dec
fidivs
xchg
lods
mov
and
pop
jp
in
cwtl
ss
add
mov
test
dec
imul
insl
insl
adc
sub
and
xor
cmpsb
addr16
and
xchg
jno
sahf
aam
dec
sub
and
fsub
in
push
mov
push
xchg
xchg
insl
mov
loop
jo
xor
or
lods
dec
xor
in
mov
lods
movsb
out
stos
or
push
add
aas
sbb
enter
dec
jo
cmp
sbb
xor
pop
cmp
mov
inc
lock
negl
stos
insb
loope
pop
adc
ret
xchg
in
andl
jp
cwtl
and
popa
xlat
inc
cmp
xchg
lcall
in
and
and
into
in
scas
out
adc
sub
mov
movsl
cli
push
imul
fadds
adc
jge
jo
pop
jns
push
xchg
sti
mov
lds
adc
shll
jae,pt
jno
rolb
mov
mov
stc
lds
xchg
loope
sbb
adc
jecxz
scas
lds
inc
push
icebp
ret
loopne
pop
lcall
sub
xor
xchg
sub
inc
sti
repz
or
repnz
push
pop
rorb
inc
imul
cltd
mov
mov
out
mov
xchg
lds
and
in
outsl
in
add
movsl
mov
cmc
je
adc
fdivp
mov
gs
les
jl
aaa
lret
mov
test
sub
and
andl
push
pop
sub
leave
sub
push
hlt
movsb
push
lahf
jnp
cwtl
xor
mov
xor
jmp
dec
sbb
pop
scas
inc
cmp
pushf
mov
jecxz
mov
repz
push
cmpb
je
sbbl
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
adcl
jmp
stos
adc
imul
adc
lcall
jle
pop
sbb
cld
pop
and
fcoms
cltd
xor
mov
adc
push
xchg
cmp
in
push
xor
nop
test
imulb
sub
mov
adc
sub
scas
sub
idivb
sbb
xlat
mov
fldt
into
lods
ja
xchg
cmp
sbb
mov
or
cmpsl
mov
pop
lds
aam
in
stos
sarb
orps
inc
stc
sbb
dec
leave
aaa
or
inc
shrl
pop
data16
cmp
jo
cmp
pop
mov
jmp
sub
add
adc
dec
mov
push
mov
ds
enter
cmpsl
fcmovnb
std
mov
xchg
add
xor
outsl
out
loop
dec
jmp
aas
cs
aam
xor
xchg
loope
sbb
jbe
leave
pop
loope
rorl
dec
dec
adc
inc
addl
sub
xor
dec
ja
sbb
lret
loop
fs
cmp
in
sahf
loop
adc
fistl
jo
xor
fsubl
out
ljmp
sbb
dec
dec
lcall
js
rolb
push
jmp
jge
out
rcl
mov
imul
sbb
ss
or
movsb
repnz
and
inc
mov
sbb
lds
je
test
fsubrs
dec
or
int
test
jl
pop
cltd
pop
jg
shrl
sbb
sbb
sub
mov
cmp
jge
pop
je
jbe
and
dec
mov
jmp
mov
ss
mov
out
and
mov
mov
lret
out
cmp
pop
xorl
jmp
sub
jmp
pop
cmpsl
pop
test
icebp
inc
mov
test
mov
adc
fcomps
adc
xchg
sbb
mov
fsubrp
mov
push
sbb
cmp
ficompl
ret
sbb
pop
push
jae
add
les
das
mov
or
mov
mov
mov
notl
add
movzbl
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xorl
jmp
push
fsubrs
push
mov
adc
cmp
ret
pop
dec
scas
mov
fnstenv
outsb
jne
cltd
std
subb
mov
pop
adc
insb
xor
add
loope
and
ljmp
neg
pop
es
mov
xchg
sub
jmp
pop
mov
ficomps
roll
adc
pop
fiaddl
jne
jnp
push
leave
insl
add
pop
movsl
cmp
jne
cmpsl
push
and
lcall
push
das
bound
lcall
test
push
pop
flds
pushf
filds
inc
cltd
cmp
push
cmc
and
mov
adc
out
or
rcrb
or
pop
loop
loopne
xchg
lea
loope
cmp
dec
hlt
mov
jge
mov
xor
inc
jmp
mov
xchg
sbb
sbb
or
fs
pop
or
aas
mov
movsb
or
sbb
mov
sub
pop
fildll
faddl
subl
or
out
lcall
cmp
mov
in
pop
pop
inc
aas
loopne
subb
enter
pop
fs
fidivl
in
lret
sub
or
jne
pushf
lahf
inc
sti
ja
sbb
sbb
pop
mov
xor
aas
icebp
add
push
pop
push
lds
in
inc
mov
ljmp
mov
pop
mov
xor
imul
or
mov
sbb
add
mov
jns
sbb
mov
jmp
lret
ss
cld
adc
lret
fcom
dec
icebp
mov
mov
adc
leave
mov
mov
das
nop
cmp
cmc
clc
jo
pop
sahf
jne
out
cmp
mov
and
inc
je
outsl
add
movsb
adc
out
or
xchg
in
incl
pop
xor
lods
or
shll
lret
fmull
pop
sub
lods
pop
and
and
xchg
add
inc
pop
or
sar
or
shll
in
jecxz
jle
mov
inc
in
mov
add
jmp
jno
push
clc
jno
jno
pop
repz
push
sub
add
cmp
test
fwait
sbbl
out
sbb
mov
hlt
cmp
push
adc
adc
xor
mov
aad
inc
popf
mov
fwait
and
insb
mov
loop
add
mov
ja
xchg
pop
ficompl
pop
sbb
xor
adc
jge
lods
rcl
pop
fcom
stos
jg
hlt
jmp
cmp
pop
adc
dec
shll
aad
popf
cmp
dec
stos
roll
das
inc
ret
push
lock
cmc
mov
sbb
adc
stos
mov
jne
imul
mov
jns
sbb
mov
popf
jg
fs
dec
xchg
or
mov
cwtl
cmpsl
loope
int
ss
fisubs
cli
mov
popa
movsl
push
ror
mov
ret
loop
dec
sbb
mov
shll
aam
or
cmp
cmp
mull
rol
add
clc
xchg
cld
imull
mov
lea
out
ss
aaa
into
loopne
popa
outsl
or
lcall
lahf
inc
adc
adc
sahf
in
popa
cli
fs
xorl
test
jno
or
adc
sub
inc
xchg
orl
sub
std
inc
pushf
push
xor
repnz
xchg
ret
pop
bnd
and
xchg
inc
cli
xchg
daa
call
aas
leave
mov
adc
push
jge
add
lock
dec
mov
xorl
lea
je
push
and
aaa
xor
movsb
inc
popa
fwait
nop
cltd
xchg
fmuls
pop
lret
mov
int
repnz
cmpl
xchg
sbb
dec
pop
aad
out
inc
pop
les
cmp
daa
lret
inc
aam
pop
mov
out
mov
fnstcw
xor
mov
inc
negb
push
cmp
sbb
gs
shl
dec
dec
cwtl
xor
sub
and
in
scas
mov
movl
popl
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
jmp
pop
pop
sub
imul
mov
lock
cmp
dec
mov
mov
sub
fsubrs
inc
inc
mov
into
insl
cmovl
iret
xchg
clc
adc
hlt
xchg
test
or
das
in
sub
lret
loop
dec
xchg
xchg
sbb
inc
arpl
xchg
sub
loope
cld
xor
inc
jge
sbb
jge
inc
mov
popf
push
out
dec
sbbl
pop
mov
arpl
in
shll
clc
rcrl
ja
push
xchg
test
adcb
outsb
jnp
in
jb
repz
jbe
test
pop
xor
movsl
pop
insb
popa
pusha
jp
push
jle
dec
cmp
mov
pop
fstpt
ret
sbb
mov
fiaddl
mov
sub
jne
stos
test
daa
inc
nop
daa
jne
xchg
out
push
dec
das
rcrl
shl
pop
ja
xor
and
inc
push
call
cmp
or
shrl
scas
out
inc
jge
or
xchg
rclb
sub
dec
inc
add
iret
fldenv
loope
inc
imul
stc
fs
out
xor
test
xchg
pop
int3
or
lret
cmp
sbb
cmp
outsl
add
mov
lds
inc
out
jl
pop
imul
test
sbb
adc
insl
ljmp
decb
xor
insb
sbb
in
jp
add
stos
adc
int
mov
xor
add
dec
jb
cmc
inc
popf
lods
mov
mov
dec
xchg
cmp
mov
xchg
div
fcomps
xchg
xchg
inc
stos
jmp
xor
fisttps
ss
lcall
xor
mov
xchg
iret
fsubl
mov
fwait
xlat
fiadds
stc
cmp
cmp
aad
or
and
dec
loop
xchg
cmp
pop
mov
mov
loope
in
cltd
mov
push
lock
scas
sahf
rcll
inc
jb
add
mulb
jo
cltd
fistpl
pop
sub
and
push
ds
cmp
insl
push
add
inc
cmp
ficomps
and
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
jmp
mov
jo
das
pushf
dec
je
xchg
icebp
mov
jle
jl
jle
sbb
pop
xchg
mov
sub
insb
cmc
icebp
mulb
mov
push
inc
rorb
cwtl
int3
inc
mov
sbb
test
dec
aaa
push
mov
inc
xor
and
xchg
lds
mov
xchg
xor
mov
arpl
sbb
adc
cmpsl
subl
xor
and
std
cmp
mov
ljmp
xchg
leave
inc
je
push
pop
push
add
mov
sti
dec
add
stc
adc
gs
or
out
push
test
dec
cs
pop
mov
das
xchg
and
sar
jl
mov
xchg
push
mov
dec
pop
loop
flds
sbb
mov
adc
or
clc
or
pop
mov
out
fcomi
xor
out
lret
inc
fdiv
notb
push
lret
dec
das
adc
inc
xchg
and
aad
repnz
int3
sbb
outsb
nop
lods
mov
sahf
xchg
pop
dec
mov
adc
jmp
jno
cmp
out
test
pop
xor
or
je
pop
jl
sbb
cmp
jle
fdivp
adc
dec
out
jns
jmp
lods
inc
dec
das
mov
lret
add
xlat
mov
jb
mov
orb
xlat
xor
hlt
sbb
fimuls
jnp
mov
adc
loopne
push
fldcw
mulb
and
lcall
jo
in
fwait
inc
xor
mov
stos
ret
jl
xchg
adc
pop
pusha
xchg
or
pop
xchg
cltd
imul
cld
imul
mov
ret
fsubrp
dec
add
arpl
sar
in
inc
aaa
lahf
jg
xor
outsb
cli
in
push
mov
mov
cmpsb
mov
adc
cmp
lods
add
sub
or
jbe
call
mov
pop
movsl
mov
loopne
xor
leave
loop
in
xor
mov
aaa
inc
sbb
int
adc
xor
jge
stos
mov
mov
outsl
inc
in
add
inc
loopne
cmp
jb
jmp
mov
xor
add
jmp
mov
jmp
test
popa
lahf
jno
inc
xor
fs
jl
jle
cmp
cwtl
imul
test
pusha
xchg
fsubr
dec
rclb
popa
push
sub
fwait
test
jg
push
test
fsubl
dec
fabs
pusha
cmp
push
cmpsb
test
mov
jp
rcll
cltd
aad
repz
stos
bnd
loop
jg
mov
movsl
dec
cmpsb
add
mov
movsb
stc
in
fucomi
mov
movsl
test
adc
jge
xor
jnp
imul
pop
test
and
push
push
sbb
inc
jo
xor
movsb
enter
adc
or
test
pop
fmuls
aad
xchg
iret
test
fdivrl
push
cli
inc
mov
data16
test
ds
push
xchg
fs
iret
add
sub
rorl
pop
jno
addr16
mov
mov
and
xchg
pop
sbb
or
aam
ss
jecxz
or
or
mov
and
movsb
lcall
sub
lret
xchg
in
pusha
icebp
movsb
jbe
pop
outsl
imul
pop
mov
mov
gs
outsb
ljmp
xchg
cli
pop
fldt
cmp
loope
insb
xchg
xor
push
mov
push
dec
mov
mov
shrl
fstps
dec
push
sub
xchg
popa
xchg
pusha
dec
mov
aas
mov
pop
pop
shld
mov
jbe
repz
repnz
cltd
into
or
pop
aaa
and
in
or
sbb
cmp
jbe
addr16
insb
mov
mov
into
aam
lods
outsl
scas
and
mov
andb
aaa
bnd
les
dec
cli
icebp
sub
mov
test
jl
iret
and
cmp
xor
aad
popf
fisubl
mov
adc
inc
mov
test
cmp
aas
dec
sbb
xor
out
js
stos
icebp
cmp
setle
test
mov
push
sti
xchg
lds
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
jmp
into
mov
shlb
stos
mov
mov
sti
jle
cmp
sti
aad
pop
test
xor
sbb
cmp
mov
ret
xorb
dec
and
sub
ret
iret
pop
and
cmp
enter
push
into
in
mulb
xchg
scas
adc
insl
sbb
xchg
movsl
mov
stc
insl
pop
pop
mov
outsl
xor
adcb
and
sub
js
sub
sbb
push
mov
mov
int3
daa
jecxz
shlb
test
dec
xchg
sti
pop
ret
imul
rcrl
mull
push
inc
les
cld
inc
aaa
lock
cmpsb
push
mov
sub
imul
or
push
dec
push
fdivs
sub
or
ret
cmp
outsb
lret
les
sub
adc
push
sbb
mov
lcall
cwtl
sub
imul
inc
repnz
cmp
sbb
es
outsb
mov
mov
sbb
inc
jp
xor
push
test
lea
imul
push
cmp
loope
std
ja
sub
test
pop
sarl
shll
pop
sbb
cmp
imul
orl
push
rcll
clc
cmp
mov
sbb
mov
ss
push
or
push
repnz
js
data16
push
ret
push
pusha
aaa
ror
pop
jnp
sbb
fwait
loope
mov
xchg
mov
mov
mov
xor
mov
sbb
jge
mov
hlt
xchg
inc
dec
xchg
test
mov
aam
insb
cmpb
mov
call
repz
clc
or
lret
sub
xlat
scas
es
cmp
loopne
dec
mov
out
sbb
int3
aad
or
in
repz
sub
jne
sub
out
test
push
test
lock
subl
int
xchg
int
call
dec
add
and
sahf
out
mov
aad
rorb
add
lods
jp
sbb
add
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
jmp
pop
jbe
push
scas
or
xor
jl
jle
jp
lret
xlat
je
fisttpl
outsl
test
adc
pop
pusha
pop
cltd
cmp
es
xor
pop
lods
outsb
popf
adc
rcll
lahf
jne
xchg
cmp
cmp
loopne
mov
pop
dec
xchg
push
arpl
xor
add
dec
adc
sbb
inc
inc
dec
xor
dec
jge
or
push
mov
sbb
out
push
imul
aaa
out
push
xchg
js
insb
add
add
dec
mov
iret
xor
repz
jp
dec
pushf
stos
lret
sbb
out
shr
inc
push
add
dec
aam
stos
fstps
jmp
xor
hlt
incl
lods
lock
dec
inc
into
jb
xor
and
inc
loop
cmp
mov
addl
imulb
loope
nop
cli
ror
data16
roll
and
mov
inc
inc
fcmovnbe
iret
test
loope
and
cli
jne
loopne
add
adc
imul
pop
cmpsl
sub
push
cmp
into
sbb
inc
js
add
jmp
push
daa
or
ds
lock
ja
aaa
mov
xchg
sbb
xchg
lods
out
lahf
je
outsb
pop
inc
fs
lahf
popf
sub
xchg
mov
addb
xchg
or
lret
fnsave
pop
dec
mov
shrl
jne
outsb
movsl
add
xchg
ret
movsl
push
andl
clc
cmp
fldcw
aam
push
jo
mov
dec
fbstp
jbe
push
scas
ret
jg
sti
fidivrl
in
das
rclb
or
insb
add
insb
xchg
jnp
nop
xchg
jmp
cmc
xor
ljmp
test
fsts
jle
ret
and
cmpsl
lods
xchg
dec
js
sahf
testl
fwait
cmp
jg
cmp
lret
ds
rorb
pop
mov
lret
xor
mov
mov
dec
lods
xor
addl
jmp
push
imul
mov
lret
cmp
stos
decb
xchg
dec
mov
imul
sub
mov
jmp
dec
loop
lds
push
jo
mov
sub
inc
int
dec
xchg
cmp
push
iret
jle
lcall
loope
jne
sub
leave
mov
mov
sbb
or
jmp
push
test
push
lods
iret
dec
add
xchg
dec
mov
mov
sbb
fisubrs
loop
xlat
js
xchg
loope
or
mov
cmpsl
sahf
adc
cmp
clc
add
add
dec
and
push
scas
cmpsb
or
loop
add
int3
xor
jecxz
outsb
jbe
inc
push
push
jnp
mov
jnp
xchg
stc
cld
mov
pop
negl
push
insl
push
bnd
and
mov
sub
add
dec
loop
mov
ficompl
pop
push
out
sub
mulb
push
adc
idiv
mov
xor
and
dec
in
and
int3
insb
xchg
and
mov
jns
sbb
mov
adc
fmull
lock
ret
cmpsl
ret
adc
xor
jp
mov
push
js
mov
xchg
pop
mov
ss
into
arpl
xchg
lret
add
dec
xor
stos
jbe
nop
xchg
aas
sub
lcall
popf
sar
ljmp
clc
dec
mov
add
mov
dec
mov
xchg
sarl
test
push
push
dec
pushf
cs
stos
scas
xor
test
dec
shr
jns
pop
mov
je
sub
or
push
push
dec
sbb
inc
sbb
int
je
ret
jbe
popa
or
movsl
push
cltd
xchg
stos
or
sarl
push
pop
sbb
mov
imul
jmp
int
mov
push
push
jae
dec
xchg
xchg
mov
or
or
imul
cmp
xor
push
push
sti
xchg
add
pop
enter
mov
sbb
movsb
or
cs
mov
cmp
fs
sbb
jno
mov
cltd
cmp
inc
pop
xor
ss
sbb
cmpsb
adc
mov
dec
mov
dec
mov
fwait
ss
shll
imul
xor
shrb
stos
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
dec
scas
push
pop
cmc
arpl
pop
clc
push
sarl
pop
cmp
cmp
lret
lret
add
cmp
mov
xchg
mov
push
insb
pushf
add
cli
pop
shl
mov
jo
mov
mov
or
jae
fildll
dec
pop
sub
jne
ror
decl
loope
mov
stos
andb
sbb
sub
mov
sub
xchg
mov
jno
in
xchg
lock
ds
leave
rcl
loopne
xor
jle
xchg
je
xchg
imul
mov
repz
cmp
push
mov
nop
inc
dec
or
and
test
xchg
cmp
and
xor
adc
mov
inc
lret
in
jo
cmpl
or
add
xchg
out
xchg
loopne
push
fists
mov
inc
es
stc
lods
cli
cmovno
adc
icebp
fmull
stos
jp
add
sarl
xchg
push
add
mov
dec
jae
pop
negb
out
add
stos
mov
adc
aam
or
add
mov
xor
mov
loopne
and
movb
lahf
xlat
jmp
dec
sbb
insl
andb
fwait
adc
sbb
or
dec
and
jno
in
movsl
xchg
lods
pop
mov
gs
dec
mov
sub
xor
adc
xor
stos
xchg
jmp
sbbl
lods
das
pop
icebp
pop
pusha
push
dec
jno
arpl
mov
sbb
xchg
cmp
jge
push
push
stos
movsl
sarl
inc
and
repnz
call
test
cltd
lret
loope
jecxz
or
mov
imul
xor
inc
pop
cli
pop
cmc
mov
rorl
jnp
hlt
jmp
cli
pop
push
test
mov
jmp
pop
ss
mov
cmpsb
cmp
scas
fidivrs
sub
sbb
sbb
rcr
mov
adc
fisttps
in
xor
icebp
pop
les
push
mov
jo
test
fbld
or
int
nop
push
lret
or
es
adc
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
leave
adc
cmp
xor
sti
cmc
fiadds
jle
cmp
pop
dec
in
iret
mov
aam
stos
push
popa
leave
or
adc
shlb
ljmp
adcl
repz
lods
std
dec
cmp
das
test
clc
addr16
jp
jno
cmp
iret
xchg
inc
ja
dec
aas
in
movsl
and
popa
popa
and
mov
outsl
xor
fcmovne
cltd
es
mov
call
enter
cmpsb
lcall
sbb
adc
lods
shr
mov
sti
into
in
out
sbb
in
int3
movsl
in
xchg
push
outsl
jg
inc
repz
mov
push
adc
cwtl
xchg
loope
jmp
testl
ror
les
dec
adc
fldenv
loope
inc
xchg
fwait
lea
or
loope
stc
inc
jle
pop
push
ret
js
ret
mov
pop
negb
jmp
js
enter
add
call
pop
mov
cmc
sbb
fsubrs
call
cmpsl
mov
je
imul
dec
mov
fldl
xchg
mov
jae
faddl
outsb
mov
cld
adc
jle
mov
add
lods
out
rcrb
int3
das
es
arpl
psrlq
int
pop
cs
jns
push
in
test
insl
daa
ret
push
in
pop
or
test
pop
nopl
sahf
cli
rcr
xor
cmp
call
mov
or
sbb
cmp
adc
jbe
rcrb
inc
adc
xor
test
jnp
jo
dec
sub
sub
imulb
pop
dec
out
pop
sub
add
mov
dec
dec
into
xchg
das
mov
pusha
lret
inc
dec
dec
dec
bound
push
testl
and
aaa
fs
negl
xchg
das
stos
mov
in
inc
lret
testl
cmpsl
cs
cmp
cmp
cltd
sti
cld
rorb
xor
and
mov
xor
jmp
pop
mov
cwtl
mov
mov
cmp
mov
cmp
cltd
jmp
sarb
xchg
pushf
inc
cld
dec
pop
jmp
dec
movsl
pop
lods
jecxz
pop
sub
loop
add
hlt
aaa
rorl
icebp
ja
pop
pop
pop
mull
leave
insl
fwait
cld
popa
repz
jle
popf
mov
or
dec
mov
jle
xor
outsl
lret
cmp
sub
cwtl
jne
mov
imul
sub
jmp
lcall
addr16
mov
pop
sahf
shl
into
mov
movsl
cmp
sbb
inc
lds
push
fisubrs
jmp
in
fcmovb
sbb
cmp
inc
push
jns
mov
dec
jne
push
add
jns
mov
adc
andl
push
imul
cmp
xchg
jne
jb
and
std
das
pushf
xchg
dec
cld
push
lods
inc
mov
mov
in
fistps
push
and
stc
mul
mov
lcall
scas
dec
add
adc
sub
add
push
cli
and
popa
iret
or
mov
push
mov
dec
push
cmc
movsl
xchg
xchg
jb
mov
dec
pop
cmpsb
fs
jl
in
xchg
mov
xor
lods
or
xor
enter
movsb
mov
aaa
movsl
add
int3
mov
lret
xchg
ljmp
push
loop
pop
or
lcall
pop
cmpl
bound
add
fsubp
pop
or
call
aam
pop
pop
lret
nop
xor
lds
addr16
div
shl
jne
xchg
mov
andb
cltd
lods
xor
lods
inc
lds
es
push
fadds
out
pushf
xchg
push
pop
dec
scas
cmc
insl
or
arpl
enter
cltd
pusha
cmp
shl
fadd
cmp
or
repnz
mov
cltd
je
push
pushf
andb
xchg
add
fisubs
jae
mov
mov
xchg
fbstp
sbb
adc
sbb
stos
fld1
jno
insl
out
pushf
fidivrl
in
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
jmp
imul
push
int3
xor
addr16
lods
bound
jle
arpl
daa
incl
mov
xchg
mov
and
xor
mov
aam
sbb
aaa
mov
enter
loopne
and
fsts
mov
inc
jae
ljmp
arpl
ficomps
fwait
in
les
cmp
ss
cmpsb
pop
jl
div
sub
imul
push
sbb
movsb
sub
aas
lcall
arpl
int
sbb
aam
stos
mov
imul
cvtps2pd
sahf
std
xor
sbb
movsb
mov
add
add
scas
xor
dec
jecxz
and
push
sub
lcall
ss
jo
pop
mov
xchg
mov
mov
cmp
push
ljmp
pop
leave
dec
cmpsb
mov
push
cld
dec
cwtl
jne
fs
jp
andl
adc
mov
sahf
push
xchg
and
mov
add
ds
and
and
cmc
and
ljmp
push
fstpl
movsl
inc
clc
cwtl
mov
xchg
aaa
repnz
gs
idiv
pop
clc
mull
pop
ja
je
mov
loopne
sbbl
xchg
lods
push
call
and
dec
or
in
inc
mov
adc
imul
clc
popa
pop
pop
bnd
add
pop
mov
add
inc
mov
rol
test
aas
std
push
adc
fildl
cmp
in
or
pop
daa
loopne
mov
leave
jae
cmp
add
push
adc
and
lock
out
rcll
movsl
jg
jmp
jae
std
sub
mov
xor
cmp
pusha
daa
rcll
stc
or
outsl
incl
push
xchg
je
notl
or
xor
hlt
loop
jmp
cmp
lea
sarl
xchg
jecxz
lahf
dec
cmp
sti
fdivrl
adc
xchg
jmp
push
std
dec
sahf
push
push
add
cs
jl
sub
jle
cmp
inc
add
stos
dec
pop
popf
and
dec
fwait
fimull
hlt
pop
cmp
jno
idivb
adc
push
mov
pusha
call
push
shlb
mov
inc
jmp
bound
dec
out
mov
adc
sbb
push
insb
xor
inc
mov
add
and
pushf
xchg
jbe
insl
loopne,pt
or
mov
xor
and
movsl
mov
ret
into
push
stc
or
dec
add
jb
mov
ss
js
in
adc
int
fs
sbb
cmp
shr
jp
outsl
sbb
js
in
pop
jmp
int3
aas
push
fdivrl
and
arpl
xchg
mov
and
and
cmpsl
add
call
cmpsb
fisubl
mov
pop
mov
mov
mov
enter
enter
cs
cmc
out
insl
jae
shrl
shr
dec
mov
sbb
adc
inc
xchg
popf
lret
push
movsl
dec
cmp
mov
iret
inc
lock
cltd
push
sub
add
shl
jge
outsb
loop
push
pop
add
adc
push
enter
dec
jns
adc
popa
dec
xchg
xchg
int
or
mov
test
gs
in
cmpsl
pop
mov
xchg
adc
sarb
pop
jb
dec
sub
bound
lds
push
js
mov
mov
test
push
pop
scas
mov
imul
add
cmpsb
or
mov
test
mov
fnstenv
push
or
mov
push
xchg
dec
leave
sbb
xchg
stos
mov
xor
gs
scas
lds
add
loopne
xchg
jmp
add
and
bound
mov
imul
xor
repz
inc
ret
mov
into
in
push
sti
scas
psubw
arpl
lahf
inc
pop
inc
pop
jns
push
sub
xor
add
imul
add
xchg
jmp
sahf
testb
push
repz
jae
ficoms
mov
insl
pop
testb
jle
addr16
into
mov
pop
push
sbb
cmp
and
dec
loopne
inc
xchg
dec
add
out
lea
inc
add
lock
nop
insl
mov
push
sub
xor
xchg
cltd
mov
imul
sbb
mov
sbb
popf
test
and
xor
mov
sbb
jbe
inc
add
cwtl
daa
cmpsb
push
mov
mov
adc
adc
or
xor
testb
add
filds
cltd
mov
push
and
enter
hlt
aam
cs
arpl
jo
cwtl
add
rorb
cltd
and
clc
lahf
pushf
jmp
ss
les
repz
gs
dec
jno
lods
sbb
add
icebp
or
in
movsb
sub
add
push
mov
sub
scas
sti
es
das
dec
cwtl
jb
mov
mov
cwtl
mov
test
and
add
sbb
or
xchg
push
popa
xchg
lods
mov
and
xchg
jae
mov
push
dec
andl
inc
lret
aad
iret
mov
arpl
mov
xchg
mov
popf
out
push
movsb
cs
inc
repz
inc
inc
jbe
int
xor
mov
test
popa
sti
mov
mov
inc
jo
sub
shl
add
inc
fwait
mov
jo
cmp
cmp
xchg
dec
mov
mov
aas
mov
inc
insl
push
mov
and
pushf
jg
or
scas
rorl
adc
movsl
dec
lret
mov
xor
inc
or
enter
and
sub
xchg
jns
mov
addr16
pop
sbb
scas
mov
inc
sbb
loopne
mov
push
xchg
mov
add
xorl
andb
cmp
add
adc
rol
adc
sti
lcall
xor
dec
fdivrs
add
arpl
cld
scas
mov
movsb
insb
jno
jecxz
ja
jo
xor
adc
in
shll
mov
dec
jmp
fwait
push
mov
mov
mov
pop
bswap
lds
cmp
stos
pusha
addb
mov
loopne
mov
roll
jne
pop
push
fists
mov
sub
sbb
popf
stos
dec
out
in
or
int3
xor
dec
pusha
dec
pop
je
repnz
clc
add
dec
shrb
lock
sarb
int
pop
adc
lret
ret
add
addl
loope
stos
jmp
lds
pop
jb
jecxz
js
add
mov
mov
push
pop
andl
and
inc
sbb
stos
insb
lods
push
inc
xor
lret
enter
call
push
dec
xchg
loop
cmp
mov
data16
lret
xchg
and
sarl
pushf
fcoms
mov
out
leave
sub
subb
adc
icebp
inc
or
dec
pop
shrl
xorl
loope
lahf
adc
push
and
std
pop
fnstenv
cmpsl
mov
or
inc
or
cmp
ds
out
and
dec
cmp
lods
mov
fisttpl
sti
jbe
mov
adc
sbb
mov
enter
jns
mov
movsl
add
int3
xchg
scas
or
push
jle
jne
hlt
push
mov
int3
fistps
cli
das
adc
sti
mov
cmpsb
aad
ljmp
push
test
inc
mov
and
and
add
loop
jne
stos
pop
call
and
aas
repz
xor
fidivrl
lea
or
jae
adc
push
pop
pusha
lods
mov
jae
xor
mov
and
andb
mov
dec
fwait
dec
lods
jno
dec
fcomi
int
aaa
xor
es
dec
fadd
mov
fstl
pop
inc
or
inc
or
mov
into
fstpt
sbb
cwtl
test
jb
loope
dec
rcrl
fdivs
xlat
nop
and
shrl
icebp
inc
cld
and
leave
loopne
bound
adcl
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
not
push
mov
mov
movl
mov
push
movl
mov
movl
mov
push
not
mov
notl
mov
movl
cmp
movl
je
mov
mov
subl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
movzbl
add
mov
mov
xor
add
push
pushl
pushl
mov
call
mov
mov
jmp
mov
jo
adc
sub
push
xchg
jle
jl,pt
jle
repnz
subb
enter
jae
int3
aam
and
dec
mov
adc
mov
cmc
mov
dec
cmp
shrb
pop
add
nop
out
add
cmp
xchg
mov
insl
jle
mov
pop
lea
repz
fsubrs
ret
push
loope
xor
imul
lock
shrl
stc
arpl
fldl
scas
lcall
mov
xchg
push
sbbl
mov
lods
mov
adc
pop
fcmovne
push
pop
jecxz
scas
das
xor
js
scas
rorb
fsubrl
sbb
push
sub
std
mov
jle
stos
pop
pop
out
inc
ss
sub
mov
push
push
add
dec
adc
mov
mull
xchg
rolb
rclb
flds
inc
jmp
mov
mov
mov
fistpll
stc
or
or
sbb
mov
xchg
add
cmpb
stc
dec
icebp
ss
cmp
test
btl
test
xor
jp
ret
sbb
inc
in
scas
lds
pop
or
pop
add
push
cmp
sbbl
inc
and
lds
pop
pop
dec
imul
jge
jmp
aad
rcll
cmc
mov
push
mov
adc
fwait
mov
or
ret
cmp
mov
sahf
adcl
mov
pop
and
mov
mov
xor
out
and
lods
pop
or
cmpsl
shll
push
and
cmp
call
lahf
loop
ljmp
stos
jg
pop
dec
mov
clc
mull
jl
lds
mov
test
cmp
into
push
sub
aam
cmpsb
xor
lea
in
in
cmp
fildl
inc
cld
fstpt
mov
cmpsl
jne
jno
jp
leave
mov
test
js
inc
sbb
aaa
divl
cld
adc
retw
mov
mov
jmp
mov
mov
xor
add
jmp
orl
imul
inc
push
mov
jl,pt
jle
sahf
int
xchg
push
hlt
clc
pop
movsb
jns
popa
pop
adc
scas
mov
pop
ljmp
dec
adcb
leave
stos
cmp
mov
mov
push
std
fidivrs
push
jp
or
imul
cs
data16
dec
js
pop
repnz
sbb
sbb
pop
mov
mov
adc
cmp
cs
cmp
scas
mov
jmp
sub
sti
jmp
lods
fldcw
cmp
sub
inc
icebp
pop
mov
adc
in
negb
mov
mov
cmpb
cli
in
idivb
lcall
pop
sarb
into
xchg
jb
inc
mov
enter
lret
cmp
outsl
mov
lret
testl
cs
push
add
daa
fidivrl
sub
loope
jnp
test
inc
pushf
adc
scas
sahf
adc
pop
jp
add
inc
push
jl
inc
je
int3
mov
shrb
inc
sti
fsubr
mov
pop
shlb
rol
int
and
sub
outsl
xor
dec
test
and
aad
repnz
ret
in
lcall
pop
movsb
xchg
cmp
cmp
add
sbb
adc
sti
mov
or
lahf
iret
cs
dec
bound
clc
jo
sbb
xchg
clc
inc
add
movsl
xor
pusha
pop
cmp
das
sbbb
or
mov
pop
xchg
scas
or
pusha
repnz
cmp
pop
xchg
xor
pop
imul
adc
xchg
sub
test
jo
jbe
sarb
jle
pushf
or
addr16
sbb
fwait
sbb
jmp
in
adc
or
lds
and
leave
call
dec
lcall
scas
jmp
lods
popf
xchg
shlb
stos
daa
daa
scas
jae
mov
loopne
fdivrs
enter
imul
fs
push
mov
scas
mov
or
repz
add
mov
sub
add
imul
cmp
jne
mov
xor
jmp
mov
loopne
adcl
sahf
jle
jl,pt
jle
lahf
jo
ss
push
sbbb
shlb
cmp
adcb
lods
fdivl
or
jle
or
inc
fcomip
inc
aaa
cmp
or
insl
inc
aaa
lcall
xlat
or
push
stos
movsb
lods
lcall
jecxz
loop
data16
xchg
mov
aam
lret
inc
inc
inc
jmp
pop
outsb
mov
pop
out
or
push
mov
fcomi
int
lds
pusha
pop
in
mov
xchg
cmp
bound
dec
jmp
mov
mov
jno
call
pop
shll
insb
sbb
cwtl
and
jle
into
lock
in
inc
out
inc
xchg
xchg
cmp
mov
push
jg
add
jp
inc
jmp
test
iret
adc
add
jmp
scas
dec
mov
xchg
ficoml
rol
enter
pop
push
inc
mov
sub
lret
mov
dec
sbb
push
arpl
jp
dec
jg
push
stc
arpl
jmp
cmp
roll
inc
test
fwait
pop
and
sbb
aas
pop
push
int3
outsl
xchg
mov
add
outsb
int
add
dec
pop
xor
std
xorb
jnp
or
fiadds
into
dec
scas
cmp
push
mov
addr16
in
into
dec
or
cmp
mov
push
das
test
lock
pop
xor
xor
mov
out
jne
jo
and
insb
mov
sbbl
and
push
sbb
push
inc
push
xchg
bound
mov
sbb
or
imul
push
int3
mov
adc
mov
push
lods
mov
test
mov
sbb
sub
call
lea
or
imulb
je
lret
rcll
sti
cs
add
adc
inc
in
fistpll
pop
bound
or
cmpsl
rclb
sti
and
jmp
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xorl
jmp
push
inc
jb
jb
icebp
fisubrs
into
test
pushf
jle
adc
jle
cltd
xor
cmpsl
insb
push
mov
in
lea
ficoml
stos
jno
aaa
mov
repz
in
push
sbb
cmp
sub
ds
and
xor
or
xchg
std
lods
shlb
jnp
xchg
leave
sub
mov
scas
roll
inc
xor
shl
sub
movsb
inc
cmc
mov
shll
sub
push
gs
mov
dec
int
std
stc
xor
cmp
gs
idiv
movsl
mov
or
cmp
bound
inc
rcll
ljmp
sbb
mov
stos
push
in
and
icebp
and
inc
add
in
add
dec
xchg
jbe
xchg
sbb
cld
lret
cwtl
gs
or
loop
scas
pop
mov
pop
mov
push
fwait
push
xor
jle
cmp
movsb
enter
pminsw
fisubrl
in
sbb
mov
jmp
dec
sub
cwtl
scas
mov
sub
sub
inc
mov
aas
bound
pop
xchg
mov
cmc
addr16
into
mov
subl
push
subl
push
or
mov
jmp
cmp
shll
xor
stos
repnz
pop
popf
jle
adc
jle
xlat
call
lret
fisttps
sub
divl
in
daa
push
and
and
out
or
adc
shlb
frstor
test
es
mov
inc
ficoml
xchg
imul
mov
out
out
test
fnop
mov
inc
fistl
mov
cltd
sbb
test
test
mov
lret
jp
loop
orb
or
or
leave
shll
roll
cmp
ror
mov
imul
mov
and
push
push
test
fnstcw
pop
or
mov
inc
into
push
test
sahf
adc
mov
cwtl
scas
push
add
imul
in
sbb
hlt
push
push
mov
mov
and
mov
in
xchg
movsl
fwait
repz
mov
rclb
inc
lock
adc
divb
mov
xor
sub
pop
xchg
movb
xchg
and
add
xorl
add
push
jmp
pop
jecxz
call
and
out
aad
dec
dec
jb
jle
adc
jle
pushf
cmp
dec
out
or
jbe
inc
stos
xchg
iret
loope
cwtl
pop
push
add
ret
movb
sets
mov
loope
mov
add
pop
dec
adc
xor
adc
mov
aam
in
andl
lock
lea
mov
movsb
jo
cmp
push
push
pushf
adc
mov
aas
sub
ret
insl
and
inc
dec
es
add
data16
into
iret
out
fldl
adc
ret
or
and
xchg
lret
aas
inc
out
cmc
cmpl
pop
cmp
adc
dec
sub
lcall
hlt
pushf
mov
mov
shll
mov
popa
push
inc
lods
mov
cld
popf
sub
out
pop
mov
cmpsb
scas
lcall
cltd
mov
inc
jns
fildl
rcrb
inc
jnp
jb
shll
push
jp
outsl
xchg
dec
repz
or
xchg
mov
inc
call
add
xor
addl
movl
movl
decl
add
movl
jmp
cmp
jne
movzbl
mov
mov
movl
mov
movl
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
xorl
andl
mov
addl
sub
xorl
push
sbbl
mov
movl
add
push
call
movl
incl
cmpl
movl
jb
movl
jmp
movl
cmp
movl
jne
movzbl
and
movl
addl
mov
mov
mov
mov
and
jmp
test
test
mov
jo
stc
ret
jbe
data16
jle
adc
jle
out
mov
xchg
sub
out
bound
mov
jns
add
js
das
sti
lret
mov
and
xchg
aaa
jb
call
js
xor
repz
or
push
add
or
daa
and
mov
daa
outsb
dec
mov
dec
inc
mov
aam
sub
in
push
push
cmp
sysexit
pushf
cmpsl
push
test
mov
gs
mov
sbb
mov
xchg
add
mov
into
in
or
pop
lcall
mov
shrb
pop
mov
push
and
sbb
iret
int3
xchg
xchg
xchg
addr16
std
daa
xor
in
mov
lods
inc
fisubrl
jne
pusha
inc
test
bound
testl
test
shll
xor
and
inc
imul
outsb
rcrl
out
push
sbb
and
inc
add
inc
add
movb
sbbl
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
jmp
shlb
sub
inc
adc
sub
jle
ret
and
lods
push
jl
inc
add
std
sub
addl
add
push
int3
jnp
or
mov
repnz
xorb
sbb
inc
fdivl
xchg
dec
mov
jae
pop
mov
fld
adc
fcoms
cpuid
adc
in
in
repz
icebp
lods
pop
add
or
aam
or
add
scas
stos
fcmovne
pop
mov
xor
lcall
ret
push
xchg
leavew
xchg
mov
jo
sbb
sub
mov
mov
loopne
ljmp
test
cmpsb
out
lret
lock
sbb
pop
xor
add
jmp
cli
aad
xchg
enter
push
shrl
push
xchg
xchg
and
lcall
mov
mov
mov
dec
leave
scas
push
mov
repz
ljmp
lcall
mov
mov
flds
dec
lret
cltd
xchg
inc
mov
mov
mov
jmp
jb
lods
ljmp
mov
into
cmpsb
jle
adc
jle
xor
subb
lods
ljmp
orb
dec
jecxz
jg
test
sub
outsb
sahf
jnp
mov
aam
mov
mov
xor
stos
mov
pop
out
add
fcoms
out
xor
dec
loope
sub
cmp
sub
idivl
popf
cmp
cmp
int3
push
enter
enter
inc
jl
mov
mov
or
xor
add
adc
or
outsb
xchg
insb
xchg
lahf
cmp
push
int
scas
mov
dec
cli
test
scas
xor
outsb
xor
mov
je
push
and
cltd
xor
fadd
push
and
mov
imul
aad
psadbw
test
mov
mov
or
jne
hlt
lea
mov
insb
sbb
dec
inc
rcl
mov
sbb
lea
sbb
leave
in
adc
and
ret
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jmp
xor
xchg
das
push
jne
loope
jecxz
loope
jg
pop
loop
jle
adc
jle
int3
mov
lahf
push
sbb
dec
sub
jecxz
repz
jb
or
add
insl
gs
stos
inc
mov
mov
ret
cmpl
and
lods
hlt
jns
mov
in
pop
push
pop
mov
outsb
jno
mov
cmp
test
jo
pop
flds
jae
test
jg
test
pop
ss
add
or
imul
xchg
push
pop
inc
int3
jl
ss
xchg
ficompl
xor
mov
fs
dec
jmp
inc
pop
repnz
mov
cltd
fiaddl
dec
bnd
sub
scas
cmp
jecxz
push
push
ja
out
dec
xchg
std
stos
out
pop
in
add
sub
ljmp
jae
sub
imul
add
cld
int3
enter
in
cli
mov
ds
adc
enter
cmpsl
cmpsl
or
mov
xor
loop
jecxz
dec
stos
idivb
enter
leave
push
ljmp
shll
decl
pop
jmp
movsl
sbb
loope
icebp
mov
jns
add
dec
xchg
jle
mov
lret
aaa
in
xor
outsl
mov
jno
and
fdiv
cmp
xor
cld
cmp
ret
jno
sub
mov
lea
mov
jg
xor
testl
cmp
daa
mov
mov
outsl
scas
sahf
pusha
test
mov
mov
mov
cmp
fisubrs
mov
xchg
dec
vpunpcklbw
movsb
mov
add
addr16
fidivrl
add
testl
ficoml
ljmp
inc
jle
pop
divl
jge
jle
xchg
ret
jge
push
aad
adc
dec
or
xor
sub
rcrl
aam
sub
cmp
push
pop
filds
push
push
inc
int3
push
push
mov
outsb
rcr
pop
shlb
bnd
fwait
mov
lcall
insl
xor
jnp
and
mov
test
stos
inc
sbb
divl
inc
testl
sarb
ret
pop
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
push
movl
sbb
movl
mov
push
add
mov
adc
mov
jmp
imul
mov
jecxz
sbb
movsl
jle
push
jg
jle
jle
rorb
add
out
sbb
dec
rcll
popa
cmpsb
sub
xchg
mov
rorb
push
adc
stc
aam
enter
out
mov
pop
lret
shlb
aad
loope
ja
adc
sub
cwtl
mov
jbe
ret
fidivl
sbb
roll
adc
push
xchg
sub
not
pop
mov
fisttps
inc
mov
sahf
lcall
mov
add
mov
adc
push
in
push
jl
mov
scas
dec
xor
xchg
pop
sub
sbb
sub
jno
repz
ret
add
sahf
jne
je
dec
cmpsl
mov
mov
test
or
or
pop
mov
insb
data16
test
add
dec
arpl
das
push
mov
jbe
rorl
lea
je
cmp
jno
cli
push
insb
jns
repz
xor
adcl
mov
or
ret
pop
repz
enter
jnp
imul
lea
in
bnd
mov
out
shlb
mov
lea
xchg
insl
sub
rorl
mov
xchg
jg
push
fnstsw
incb
outsl
mov
cmp
dec
sbb
mov
and
and
shlb
loope
add
nop
ds
in
cwtl
jecxz
cmp
mov
jae
mov
jb
insl
popa
test
movsb
adc
jb
in
dec
mov
adc
gs
mov
hlt
mov
shll
jo
push
pop
or
popa
in
and
or
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
call
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
jmp
mov
push
jno
mov
ja
sbb
lock
jle
out
test
pop
pop
pop
cwtl
inc
das
out
sbb
mov
mov
cmp
pushf
cs
mov
pop
fadd
lret
ljmp
mov
fadds
and
inc
jmp
outsl
jnp
rorl
lret
sub
mov
mov
push
movsl
push
aam
jb
mov
outsl
sahf
mov
fnstenv
cmpsb
jo
fldt
mov
adc
dec
pusha
or
test
mov
aaa
call
jg
hlt
mov
cmpsb
pop
sub
push
jno
fsts
out
mov
lret
sub
xchg
push
xlat
mov
dec
adc
push
ret
lea
sub
mov
dec
out
jmp
push
mov
and
pop
notb
and
push
sub
and
add
xchg
insb
push
insl
insb
incl
push
or
iret
dec
push
mov
mov
mov
fs
inc
cmp
and
outsl
adc
es
adc
mov
dec
scas
push
sbb
lds
xor
loope
xlat
pop
cmp
jbe
xchg
or
inc
jno
lods
fwait
inc
adc
flds
iret
sub
jne
and
mov
sbbl
mov
sub
pop
mov
add
add
or
and
popa
mov
cld
arpl
mov
jo
and
jb
mov
ljmp
mov
popf
loope
sub
movsl
pusha
dec
sub
pusha
popa
frstor
and
icebp
daa
push
es
and
rorb
or
test
je
jecxz
pop
xchg
jg
icebp
fcompl
hlt
orb
or
push
mov
push
push
incl
jmp
inc
iret
scas
mov
jno
sub
sbb
mov
jle
jp
xorl
aaa
nop
jne
stos
ror
popa
dec
or
xchg
pop
jg
xchg
mov
mov
mov
leave
jmp
rcr
orb
out
mov
push
sbb
jl
out
cltd
fistpll
orl
shlb
ja
mov
divl
fwait
mov
ljmp
fucomi
jmp
sub
mov
int3
jmp
add
outsb
and
sub
inc
push
mov
jl
mov
cs
dec
lods
jmp
pop
jnp
push
inc
inc
sbb
cmp
dec
call
xchg
pop
mov
xchg
xchg
push
gs
push
push
int
push
jbe
mov
jae
xchg
aad
push
std
ja
ljmp
les
adcb
cmp
filds
decl
or
or
adc
dec
jo
or
stos
and
adcb
dec
test
out
aam
les
test
pusha
fidivs
in
shlb
scas
rolb
pop
adc
pop
xor
xor
mov
jne
lcall
lods
mov
add
inc
or
scas
ja
js
add
add
pop
ss
mov
nop
xchg
xchg
ret
aas
cmp
xlat
pop
mov
pop
cmp
inc
xchg
add
int
xchg
lcall
xchg
mov
lods
je
mov
in
mov
sbb
jae
fdivp
shll
std
mov
ret
push
mov
adc
std
and
jno
xor
jae
inc
dec
xchg
cmp
les
inc
fwait
in
cmp
lahf
jno
sub
and
jnp
ret
nop
scas
loope
mov
sbb
mov
jae
testl
out
jns
mov
loopne
inc
ret
dec
outsb
frstpm(287
mov
xchg
imul
je
and
cmpsb
mov
loopne
mov
out
jo
lret
je
test
mov
add
js
leave
hlt
aaa
mov
sbb
popa
mov
testl
push
test
loopne
outsb
je
rcl
movsl
rcll
and
movsl
scas
fcmovb
notb
adc
cs
int
aaa
adc
inc
frstor
mov
pop
xlat
inc
mov
sub
int
dec
jecxz
aad
jno
mov
arpl
jb
adc
jp
and
jle
add
xor
fnstsw
jecxz
mov
cmp
adc
pop
pusha
pop
jno
or
push
out
xor
or
aas
mov
sbb
pshufw
xlat
xor
add
jns
xlat
xchg
jae
movsl
fisubl
mov
pop
inc
xchg
clc
sub
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sub
sub
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
mov
adc
movl
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
and
sbb
push
jo
dec
add
fs
jle
jl
jle
add
sahf
inc
test
inc
and
ljmp
fs
imul
outsb
add
out
lock
push
std
mov
adc
insl
sbb
pop
sub
cs
push
push
inc
xor
shrl
shll
xchg
jne
out
adc
in
push
cmp
sti
mov
jmp
jae
push
sbb
in
pop
mov
pusha
xchg
addr16
or
fstpt
push
test
frstor
rcl
push
jb
into
xor
shl
sarl
mov
mov
fimull
sub
push
outsb
or
xchg
mov
adc
xor
ss
inc
and
xor
adc
cmp
mov
pop
add
ja
cs
dec
in
or
jno
jp
mov
mov
xor
sbb
jnp
test
sub
call
cli
dec
jp
mov
mov
js
inc
fistps
mov
sbb
arpl
jge
outsl
ret
enter
mov
pop
mov
cmp
mov
shll
add
mov
cmpsb
in
iret
adc
mov
jge
mov
mov
pop
mov
fwait
push
ss
jo
dec
dec
scas
add
mov
cmp
xor
imul
dec
pop
lret
mov
xchg
je
xchg
lahf
cmpsl
dec
inc
push
mov
arpl
adc
cmp
mov
aas
std
cmp
push
mov
iret
jnp
mov
or
into
mov
roll
setg
hlt
xchg
cwtl
mov
and
jg
pop
inc
xchg
push
stos
mov
xchg
adc
sbb
mov
lods
pushf
cmp
add
push
cmp
mov
shl
stos
pop
and
mov
rorl
push
inc
ss
push
dec
cmp
hlt
mov
test
cmp
es
hlt
sub
lret
dec
pop
push
xor
int
add
pop
int3
add
in
pop
xchg
out
mov
sbb
mov
and
push
sub
out
scas
add
pop
jmp
sbbl
sbb
adc
and
push
dec
push
fldpi
nop
sahf
inc
mov
and
sahf
mov
movsb
push
add
lahf
fwait
or
pushf
and
mov
movsb
jmp
pop
jle
bound
bound
jl
shrl
ljmp
and
jnp
out
adc
leave
int
jb
test
enter
rcl
js
pop
sub
cmc
mov
ljmp
jno
cmpsb
into
mov
sbbb
loope
mov
nopl
pop
and
pusha
aaa
out
rcrl
push
fcoms
mov
stc
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
andb
in
loope
arpl
adc
cmp
stos
jle
jl
jle
test
ds
mov
xlat
outsb
jne
in
rorb
push
adc
jns
je
jo
push
ljmp
jb
arpl
xor
aam
push
jle
cmp
ljmp
aam
gs
sbb
dec
imul
aam
pop
mov
pop
add
loope
jno
daa
fstpl
scas
pushf
testb
movsl
sbb
lock
negb
push
mov
mov
jnp
rclb
lods
sub
cwtl
into
fstpt
or
lret
aas
ja
in
push
and
dec
leave
xchg
mov
jo
sub
pop
ss
stc
mov
js
inc
or
rorb
push
adc
cmpb
dec
ss
popa
xor
scas
repnz
lea
subl
inc
mov
mov
icebp
mov
jle
jne
std
mov
test
aaa
cmc
lahf
aam
or
nop
loope
test
insb
mov
sbb
dec
repz
push
repnz
inc
inc
addb
scas
sub
aam
push
lea
jns
xchg
adc
test
jno
sbb
inc
rorb
mov
jnp
je
mov
add
xor
ljmp
sbb
push
adc
inc
push
adc
cmp
push
clc
fcomi
mov
movsb
lods
std
repz
or
insb
es
je
nop
lret
ret
in
fiaddl
and
cmp
mov
dec
add
xor
push
das
enter
dec
dec
adc
faddl
out
outsb
xchg
push
xchg
daa
into
cmp
movsl
jnp
scas
pop
mov
cmp
push
gs
dec
mov
add
adc
xchg
fidivl
mov
xlat
sbb
pop
sbb
into
shll
xor
mov
scas
dec
in
lahf
aad
ss
out
cld
dec
mov
pop
dec
xchg
dec
daa
and
mov
cmp
pop
dec
fnstcw
nop
adc
cmp
pushw
rolb
out
out
inc
test
out
daa
adcl
ds
repnz
pop
cwtl
fmulp
push
fsubrl
mov
pop
outsb
and
imul
shll
jecxz
daa
xlat
pop
ficomps
ljmp
pop
pop
popl
inc
inc
lock
subb
testl
dec
add
xchg
aam
pusha
and
mov
jo
jl
adc
hlt
filds
xor
test
cmc
pop
sti
xchg
dec
ljmp
xchg
mov
popf
xor
push
mov
out
out
aam
movsl
push
pushf
mov
inc
push
mov
out
aaa
ja
mov
push
mov
ds
je
sub
in
out
adc
mov
adc
mov
jg
ljmp
jmp
pop
imul
xor
into
pop
out
or
and
xchg
lcall
xor
leave
ret
push
mov
jmp
shll
jno
aad
xor
sbb
jle
jge
jle
mov
add
insl
sub
stos
cltd
xchg
psubw
shlb
or
cli
xor
inc
test
push
lds
mull
add
out
mov
mov
hlt
subl
lret
scas
in
clc
pop
push
sbb
adc
cmp
inc
arpl
and
sbb
aam
orb
mov
call
push
imul
dec
lea
xchg
test
inc
mov
loop
leave
mov
lods
and
hlt
sbb
dec
inc
out
lret
jmp
xchg
jg
mov
inc
jg
nop
fucomi
inc
mov
jg
pop
mov
push
xor
cmp
xlat
test
dec
jl
imul
iret
xchg
in
leave
dec
in
jmp
push
lock
cmp
mov
add
shll
xchg
inc
lret
dec
std
imul
xor
xchg
cmp
sbb
pop
push
ja
inc
int
filds
aas
scas
push
xor
push
dec
ja
jne
inc
and
mov
xchg
dec
add
or
loop
mov
push
pop
call
call
mov
movsb
xchg
mov
mov
int3
cmpsl
mov
ffreep
or
jecxz
pop
cmp
sub
pop
and
jle
xchg
cmp
adc
mov
out
loopne
mov
push
and
stos
out
test
mov
lods
fcmovb
and
pop
outsb
inc
shll
sti
imul
jae
jbe
mull
xchg
or
nop
sarb
or
jecxz
adc
xorl
jno
mov
mov
cmp
enter
ja
sar
popw
lret
pop
jl,pt
mov
icebp
jo
mov
and
sbb
pushf
add
adc
iret
mov
adc
jne
sbb
inc
sbb
fcmovne
mov
push
and
xchg
push
mov
lcall
xchg
xchg
cli
lcall
cmp
and
mov
push
sahf
pop
les
push
push
sub
mov
popa
xchg
icebp
add
int
arpl
push
sti
push
movsb
imul
mov
push
push
and
jne
imul
daa
loopne
jg
aad
cli
xor
pushl
enter
mov
btl
shrb
cli
insl
ja
shr
mov
mov
pop
int3
dec
int
nop
bound
push
pop
pop
inc
push
les
push
push
cmp
push
add
xor
nop
icebp
aad
mov
sahf
dec
lock
mov
pop
mov
xchg
inc
jp
or
and
in
add
jg
out
pop
jns
in
ljmp
or
pop
add
in
ss
sti
insl
outsb
pop
cmp
mov
xchg
sbbb
mov
rclb
sarb
jmp
or
pop
jno
xchg
add
pop
jp
mov
jle
jge
jle
ja
aad
xchg
inc
add
notl
xchg
cltd
movsl
sahf
loope
adc
les
fcoms
jbe
mov
in
xchg
ja
jbe
out
sub
dec
std
xorl
cmp
sahf
mov
mov
add
or
aaa
mov
out
sub
mov
arpl
dec
dec
sbb
inc
cmpsb
fld
popa
lret
arpl
xchg
jge
add
popf
xorb
jne
and
jecxz
fsubrp
lods
sub
jae
rcrb
add
mov
es
lock
dec
js
dec
ret
mov
push
or
bswap
movsb
or
cmp
enter
dec
xlat
flds
insb
loope
sub
sbb
adc
jbe
cld
pop
dec
push
xchg
dec
mov
cwtl
cld
addr16
insl
popf
add
add
mov
pop
jle
push
adc
push
inc
sarl
dec
popa
pop
add
xchg
rcll
xchg
jae
sbb
adc
fisubl
in
add
mov
jmp
jmp
sbb
xchg
pop
pop
bound
push
jmp
in
not
adc
mov
das
inc
mov
mov
ret
mov
in
lcall
movsb
xchg
fistpl
outsb
mov
jns
mov
and
sub
xor
fisttps
leave
dec
adc
push
inc
xchg
pop
popf
lret
and
call
sub
in
outsl
ret
ljmp
jns,pn
aas
repz
into
adc
jae
enter
rcrb
ja
xor
decl
or
xorb
dec
push
inc
xchg
jl
xchg
xchg
scas
loopne
icebp
movzwl
not
lret
les
mov
xor
or
push
jmp
jno
push
cltd
add
xchg
cwtl
ja
dec
jb
or
rol
imul
fldl
lahf
imulb
enter
and
das
out
popf
xchg
pop
mov
sub
imul
or
aad
into
int3
mov
xor
lock
jnp
aaa
mov
ret
cmp
mov
test
popa
call
inc
push
dec
sub
mov
mov
loop
ljmp
movsb
push
das
insl
pop
fs
call
mov
mov
add
cld
dec
xchg
into
sub
push
or
jb
fsub
adc
imul
push
mov
rol
fnstcw
pusha
out
add
test
mov
insb
addr16
push
push
cmp
sbb
call
repnz
imul
or
div
mov
and
or
mov
pop
ret
push
mov
sub
mov
adc
mov
and
mov
xor
sub
mov
orl
add
xorl
movzwl
and
mov
xor
xor
or
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
sbb
lea
mov
mov
mov
subl
xor
xorl
sub
mov
movzwl
sub
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
sub
mov
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
jmp
cltd
outsb
mov
outsl
or
push
out
lds
rcr
jle
scas
jl
jle
andl
mov
mov
in
aad
loopne
cmp
roll
loop
aam
das
cld
add
in
int3
mov
mov
mov
pop
negl
fadd
sbb
ja
cwtl
cmp
out
jnp
pop
orb
jbe
push
xor
jp
scas
mov
sub
mov
int3
mov
cmp
repnz
pusha
adc
sub
imul
push
jae
popa
and
and
enter
inc
push
shrl
mov
jg
sub
dec
pop
jle
lods
xor
les
lea
dec
mov
enter
lret
int
push
xor
aad
fsubs
fcomps
inc
cwtl
sti
out
shlb
fbld
std
inc
xlat
pop
cltd
sub
popa
push
lea
xchg
lods
dec
lea
mov
xor
pop
mov
or
jg
outsl
push
das
insb
stc
insb
insb
mov
xor
call
pop
push
push
in
hlt
aas
lret
mov
aaa
rorl
ljmp
stos
xchg
mov
out
leave
es
hlt
pusha
or
push
mov
fadd
and
test
jg
bound
xor
and
push
cltd
adc
lea
xor
push
jne
xlat
sarl
nop
stc
daa
ret
pop
add
and
mov
mov
xchg
imul
adc
subb
mov
inc
adc
jl
add
test
cmpsb
push
aam
mov
aas
xchg
nop
int
ret
and
dec
and
mov
adc
cmp
add
push
jmp
outsl
sub
mov
xor
sub
cmpsl
into
aaa
dec
rcr
xchg
cli
in
sbb
dec
and
sub
test
lret
add
mov
dec
sarb
adc
dec
fdivrs
lcall
inc
bnd
push
push
sbb
sbb
or
aad
and
gs
nop
push
mov
add
jmp
adc
aaa
mov
insl
aam
ljmp
in
outsb
or
add
shrb
sarb
mov
mov
jne
ds
call
lds
out
movsl
push
pusha
push
inc
jnp
out
faddl
dec
jno
cmpsl
adc
mov
hlt
inc
cmp
jne
pop
pop
mov
mov
xor
jmp
mov
icebp
mov
and
or
jl
jle
xchg
push
into
cmpsb
insb
and
and
dec
mov
inc
mov
jbe
xchg
scas
cmp
jb
add
shrb
or
arpl
mov
mov
rcl
fimuls
mov
std
cmp
mov
popa
addr16
fistps
dec
xchg
fiaddl
add
std
ss
aas
mov
insb
cmpsl
xchg
pop
inc
in
fstpl
mov
sbb
push
cmpb
inc
cmp
lds
or
mov
fmulp
pop
adc
xor
test
inc
inc
in
mov
inc
xor
and
subb
dec
rcll
fadds
push
dec
jae
adc
mov
test
cltd
inc
pop
movsb
sbb
push
cli
scas
out
add
push
xorl
rcrb
mov
dec
fisubrl
push
cmp
mov
das
push
into
fiadds
mov
jl
and
adc
cmp
jno
jp
cs
mov
jge
je
jb
lret
es
lods
jmp
stc
out
mov
movsl
clc
lock
pushl
pop
xchg
jmp
cwtl
out
push
jo
xchg
xor
fwait
mov
js
fisubl
testb
les
jl
inc
mov
shlb
xchg
push
push
dec
add
in
add
les
lods
sti
jae
cmp
insl
add
iret
xchg
out
jo
xlat
enter
mov
xchg
jns
shl
push
mov
add
mov
out
aaa
mov
stos
mov
repz
cmp
xor
pop
insl
xor
sbb
stc
mov
push
out
mov
leave
aam
pusha
ds
add
cmp
push
jno
repnz
jnp
gs
sbb
xor
pop
ds
add
pusha
movsl
testb
mov
mov
mov
movsl
pop
or
cs
pop
jnp
dec
cltd
out
xor
pop
insb
xor
outsb
mov
sbb
repz
add
inc
mov
push
loop
sbb
popfw
call
lock
mov
aam
sahf
pop
jo
push
adc
inc
inc
mov
inc
sti
adc
or
mov
fnstenv
and
stos
jns
ret
aad
pop
adc
cs
fdiv
mov
adc
inc
or
pop
dec
stos
scas
xor
addr16
jle
mov
fdiv
and
addl
out
dec
push
sbb
add
add
xor
push
xchg
pop
cld
ficompl
insb
mov
jl
jle
inc
sbb
in
push
aad
popa
sub
andb
inc
sub
rorl
hlt
sbb
adc
adc
and
xchg
leave
ret
insb
sub
mov
pop
push
ret
jle
seto
andb
ficoml
ret
cmp
jne
mov
xchg
fstl
das
andps
dec
je
shll
add
jo
and
hlt
int
adc
lret
pop
xor
int
mov
pusha
inc
ja
mov
in
stos
mov
loop
imul
jne
mov
sbb
mov
dec
jmp
data16
and
popa
cmpsb
imul
inc
fs
push
mov
push
ljmp
sarl
jmp
aam
das
dec
push
adc
arpl
mov
adc
xor
pop
mov
or
imul
fildl
outsl
xchg
sbb
mov
mov
mov
xchg
sar
outsb
dec
xchg
jl
inc
add
push
jmp
push
roll
adc
mov
gs
xor
jnp
xchg
hlt
or
decl
in
fs
lret
icebp
daa
std
mov
testb
ret
cmp
pop
sub
mov
mov
pushf
mov
xchg
mov
add
fsts
inc
mov
mov
jbe
loope
xchg
mov
xchg
pop
cmc
ret
mov
sub
aad
lcall
cs
arpl
lea
mov
xchg
pop
test
inc
push
aam
in
push
mov
test
arpl
xor
mov
pop
inc
mov
outsl
mov
test
jl
jns
call
jg
sbbl
and
rclb
mov
sbb
cmp
mov
mov
loopne
je,pt
push
pusha
dec
jo
dec
out
inc
ds
cmp
pop
es
jo
aam
loop
int3
bound
mov
std
mov
mov
or
adc
enter
adc
into
cmp
clc
mov
ror
nop
cmp
cli
xlat
adc
lds
fidivrs
addr16
mov
or
lret
or
jmp
pusha
ret
sahf
push
xchg
cmp
push
icebp
fs
pop
mov
mov
repnz
mov
mov
dec
lds
push
push
ds
out
xlat
movb
inc
mov
mov
jmp
je
push
push
lock
outsb
dec
mov
outsb
jmp
jle
scas
jl
jle
mov
pop
icebp
fsts
iret
pop
pop
pusha
sub
out
stos
sub
mov
cli
mov
rcll
dec
repnz
in
dec
mov
dec
inc
push
cmp
pop
testl
shlb
repz
fisubrs
aaa
dec
mov
adc
fwait
push
ljmp
and
pop
or
scas
xor
xor
adc
lcall
fs
scas
insl
sub
cli
arpl
push
and
insb
xor
divb
jmp
sbb
lods
push
cs
pop
jecxz
sbb
inc
cmpb
bound
fsub
loop
outsl
or
jle
xchg
test
mov
inc
cmpsl
icebp
pop
inc
xchg
cmp
dec
jbe
je
fwait
push
xor
or
and
and
inc
in
in
xchg
iret
pushf
pop
mov
movb
inc
das
ljmp
dec
pop
cmp
cmpsb
stc
xchg
pushf
adc
test
jle
xor
xchg
out
pop
jno
imul
or
test
mov
xchg
pop
cmp
aas
pusha
outsl
mov
fs
push
loopne
gs
es
stos
xchg
std
fwait
cmp
in
icebp
inc
outsb
inc
mov
adc
nop
cmp
push
xchg
pop
and
fcoms
shll
int
adc
pop
push
xchg
fcomps
into
jmp
pop
pop
insb
pop
ror
or
cld
jbe
jo
sub
lea
int3
pop
daa
ja
mov
ret
rcll
scas
adc
jno
jns
iret
lock
adc
insb
jp
add
dec
mov
clc
pop
ror
inc
push
push
push
jae
xchg
xor
aam
in
cmp
xlat
paddsw
pop
dec
adc
lahf
aas
xchg
sub
aad
es
out
xlat
or
jecxz
adc
scas
test
ljmp
adc
test
mov
sahf
frstor
rclb
subb
int
test
ficoml
inc
arpl
mov
test
xchg
jne
fsubrs
or
outsb
stc
js
loop
pop
inc
adc
sub
lods
fstpt
shll
out
divb
int
mov
inc
in
jmp
in
fsubs
ja
cmp
outsl
jl
lock
cltd
div
out
lock
insb
es
push
mov
ss
sar
dec
ror
lret
mov
dec
inc
iret
inc
nop
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
jmp
jmp
push
dec
push
imul
and
loope
pop
pop
loopne
inc
jle
scas
jl
jle
mov
lods
jmp
rorb
call
xchg
push
aad
sahf
std
hlt
cmpb
sub
shrl
cli
lret
sub
das
sbb
aad
mov
dec
dec
clc
xchg
sbb
adc
mov
hlt
mov
add
stc
jbe
jns
movsl
iret
pop
sbb
into
addr16
shrl
out
lods
outsl
cli
xor
imul
shlb
sub
mov
fnstenv
push
cwtl
pop
repnz
xor
sbb
pop
push
and
repz
aas
or
lret
fists
mov
ret
jge
inc
sar
pop
jnp
adc
mov
cmpsl
mov
jae
cmp
dec
or
outsb
pop
pop
mov
outsb
cmovp
xchg
push
mov
cmp
test
pop
test
out
cli
adc
pop
xor
and
popa
push
mov
adc
loope
pop
fcomip
ljmp
or
lcall
ss
adc
jnp
out
fwait
iret
add
and
sbb
dec
push
outsl
push
add
aas
aam
sub
xlat
das
xchg
cmp
pop
sbb
add
ret
ror
jecxz
lods
fcoms
jg
push
mov
test
repnz
dec
subl
mov
mov
ret
stos
cmp
insb
gs
xchg
mov
push
outsl
mov
test
cmpsl
test
dec
inc
cmp
jecxz
sahf
pop
sub
push
pop
data16
call
rclb
adc
jnp
fnstsw
imul
lods
ja
xchg
sub
fs
pusha
cmp
shrl
adc
shl
add
addl
pop
push
pop
adc
inc
pop
negb
mov
pushf
mov
test
sbb
es
mov
mov
enter
pop
mov
xor
popf
into
jecxz
sbb
jl
ljmp
cmp
subb
pusha
sti
inc
cmp
or
xor
cmc
nop
stos
shll
mov
sbb
adc
sbb
rcrb
cld
mov
in
adcl
jbe
mov
jb
stc
hlt
dec
dec
outsl
push
inc
div
jge
mov
sarl
push
lea
jp
cmp
dec
sub
fistps
sbbb
cld
or
mov
je
movl
lea
mov
mov
addl
mov
jmp
sub
or
lock
inc
mov
mul
iret
dec
inc
jle
scas
jl
jle
fsts
mov
jl,pn
push
pop
arpl
out
lods
push
rol
push
fsubrl
and
test
int3
push
outsl
lcall
add
jno
lods
mov
ret
mov
mov
rcrb
pop
xchg
mov
fisttpl
iret
cli
out
sub
lea
cmp
sbb
mov
jne,pt
mov
dec
inc
das
data16
add
sbb
fwait
pusha
fistps
mov
mov
fisubl
cmp
inc
cwtl
xor
dec
fldlg2
shr
aaa
jo
mov
xchg
adc
cli
popa
repnz
hlt
out
jg
pop
xchg
cltd
push
mov
loope
sbb
jbe
lret
and
sti
mov
in
push
mov
dec
not
pop
clc
pop
jns
sbb
imul
xor
push
scas
sub
cmp
popf
enter
jno
xchg
dec
dec
dec
inc
pushf
test
or
mov
lret
mov
addr16
jle
pop
lods
lcall
sarl
inc
xchg
insb
adc
mov
popa
cld
add
lea
imul
test
pop
mov
cmp
js
push
in
mov
mov
xor
cmp
lahf
rorb
dec
mov
mov
or
push
sub
imul
sbb
lahf
lds
mov
sbb
jecxz
int
mov
sub
popf
sbb
rclb
in
jnp
xlat
lods
adc
mov
dec
aam
rcll
mov
dec
fs
insl
mov
and
stc
or
jl
sub
sub
fisubrs
sbb
xchg
cmpsl
ss
nop
fcoml
test
xor
inc
sarb
lods
imul
sub
lret
sub
mov
sbb
dec
xchg
ret
ja
shlb
sbb
loopne
iret
movsb
mov
fstpt
mov
rorb
cmp
push
lcall
cltd
call
xlat
repnz
jb
sbb
repnz
mov
pop
sbb
pop
daa
cmp
mov
cmc
fadds
and
pop
dec
pop
int
adc
in
shl
test
loop
xor
dec
mov
inc
inc
ljmp
mov
mov
stc
stos
cmp
loope
mov
stos
xchg
sti
pop
jp
lods
stos
mov
dec
push
add
sbb
inc
jmp
in
sub
shlb
in
mov
jno
cmove
orb
test
fwait
jb
add
or
sti
stc
decl
mov
add
mov
pop
leave
ret
push
mov
push
movl
jmp
mov
xor
in
leave
outsl
inc
or
xchg
jle
jg
jle
push
dec
in
out
sbb
scas
mov
les
mov
jne
data16
into
movsb
js
popa
pop
lock
int3
nop
loope
scas
or
dec
rep
mov
push
mov
imul
add
fimuls
mov
bound
mov
sarl
pop
sub
jns
mov
std
fidivl
and
xchg
data16
rolb
pop
push
mov
xchg
cmp
aas
mov
inc
imul
lods
sub
and
stc
xor
mov
inc
mov
cmp
scas
xor
js
pushf
icebp
xchg
popa
cmp
pop
bound
repz
xor
mov
push
popf
cld
ss
push
sub
ljmp
cs
inc
push
repnz
pop
sahf
es
ss
dec
icebp
add
je
iret
leave
dec
push
sbb
mov
adc
inc
jb
shl
push
in
in
and
fisttpl
mov
inc
es
shlb
fldenv
sub
popf
xchg
xor
enter
pop
sub
orl
scas
mov
cmp
mov
cmp
out
xchg
adc
in
xor
adcl
xchg
mov
out
stos
fwait
jge
cwtl
jbe
shrl
add
push
or
xchg
sbb
mov
lret
inc
lods
sahf
cmp
out
repz
int
cmp
aas
dec
pop
adc
pop
in
shr
arpl
add
cmp
add
add
add
add
xorl
xor
movl
cmp
jne
and
mov
mov
add
andl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
pushl
pushl
pushl
push
pushl
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
jmp
mov
gs
stos
push
js
sub
jle
movsb
jg
jle
dec
lahf
enter
xchg
add
pop
mov
push
mov
xchg
rolb
mov
inc
jle
xor
sub
or
push
lret
xorb
adc
lcall
add
iret
dec
mov
in
in
cmovs
mov
push
sbb
test
adc
aad
les
arpl
xor
jge
lds
and
dec
test
inc
mov
pusha
push
out
inc
and
pop
pop
adcb
lret
xchg
sub
fsubr
inc
fs
add
addl
adc
jbe
add
out
sub
or
adc
adc
mov
add
xor
lods
or
bound
xchg
jb
dec
mov
push
int3
test
add
mov
test
jb
fcoml
faddl
pmullw
mov
repnz
push
push
or
adc
mov
inc
mov
das
sbb
cmp
dec
push
push
pop
inc
divl
std
pop
adc
ret
frstor
cmp
pop
push
xor
js
cs
in
sahf
pop
cmpsb
fwait
stos
leave
loopne
adc
mov
inc
jae
sahf
or
jo
cli
sub
in
mov
sub
xchg
pop
mov
inc
loope
fwait
cmp
scas
hlt
mov
xlat
and
xor
push
jnp
out
cmp
xor
dec
into
pop
std
mov
mov
jnp
xor
jecxz
rclb
addr16
adc
dec
loopne
inc
out
shr
add
add
or
add
leave
ret
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
popf
dec
dec
add
add
add
add
inc
add
add
cmp
add
sub
add
add
add
add
add
add
add
add
add
add
pop
and
add
add
add
lock
add
add
add
outsb
push
popa
addr16
push
js
outsl
ss
je
jo
aas
inc
outsb
gs
je
push
gs
push
inc
inc
pop
inc
push
inc
dec
pop
dec
cmp
add
add
sbb
add
adc
add
add
add
shlb
add
add
add
and
add
mov
add
test
add
scas
xor
add
add
mov
add
add
add
add
and
add
add
add
cmp
add
and
add
mov
add
add
add
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
xchg
add
imul
ja
jae
insl
jo
add
add
outsl
outsb
je
outsl
insb
data16
add
outsb
jbe
add
jb
push
jae
jb
arpl
add
add
jb
jo
add
mov
pop
pop
jae
je
popa
jo
pop
je
jo
add
lds
jo
imul
add
outsl
jb
add
data16
outsl
outsl
jb
lods
add
js
imul
add
jo
pop
insw
outsl
fs
xor
je
insb
add
or
je
ja
jo
gs
add
add
jb
arpl
add
pop
pop
arpl
insl
outsl
fs
push
add
imul
addr16
add
xor
arpl
outsl
imul
test
jae
popa
arpl
add
js
imul
pop
popa
insl
jae
pop
gs
je
add
add
arpl
jo
add
xchg
pop
imul
insl
add
outsb
jne
add
add
jb
bound
add
insl
bound
gs
add
sbb
jae
jo
imul
data16
add
pop
pop
arpl
inc
imul
ja
jae
arpl
add
add
js
je
imul
jae
add
call
js
je
add
add
je
add
fadds
jae
je
outsl
arpl
add
gs
jae
jb
popa
je
gs
add
mov
data16
imul
gs
outsl
jb
add
popa
je
insb
add
jb
pop
pop
addr16
popa
imul
sub
arpl
arpl
add
add
insl
outsl
jbe
add
dec
push
push
inc
push
push
cs
insb
add
mov
imul
outsl
ja
jo
popa
je
add
nop
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jne
jae
jb
mov
imul
popa
bound
add
outsb
fs
gs
popa
addr16
js
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
mov
imul
jae
bound
mov
dec
outsl
popa
fs
arpl
push
add
bound
jbe
outsb
je
test
fs
imul
add
je
arpl
add
outsb
fs
imul
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
fs
outsb
jo
je
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
jb
outsb
je
inc
add
imul
je
insb
popa
jae
dec
outsl
outsb
addr16
add
outsl
outsb
imul
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
ja
arpl
add
jmp
outsb
dec
outsb
jo
je
gs
je
jo
add
add
je
insb
imul
jb
movsb
add
pop
outsl
outsl
insl
gs
roll
outsb
popa
bound
imul
sub
inc
push
ja
jb
jne
push
add
inc
add
imul
arpl
outsb
add
add
inc
fs
jae
push
imul
arpl
add
icebp
add
jae
dec
gs
popa
addr16
add
out
add
imul
jae
addr16
add
dec
add
je
jb
jo
add
inc
add
outsl
jae
inc
gs
je
jo
add
add
jo
imul
imul
push
imul
popa
jae
inc
add
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
dec
outsl
popa
fs
insl
popa
addr16
add
sahf
add
push
arpl
jo
jns
mov
push
outsl
push
outsb
imul
add
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
gs
popa
jb
outsb
je
bound
inc
jb
popa
je
push
imul
inc
add
popa
insb
imul
je
add
push
gs
imul
outsb
addr16
add
adc
gs
jae
inc
inc
add
inc
push
dec
outsb
jne
add
add
arpl
outsb
jne
je
insl
add
add
outsb
dec
arpl
add
mov
imul
imul
add
jae
popa
addr16
outsl
js
add
ja
outsb
jne
popa
jb
inc
add
je
outsl
jb
addr16
jne
fs
imul
add
jae
jb
outsb
je
push
add
mov
imul
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
je
jae
outsb
arpl
jns
je
je
add
or
inc
imul
jae
push
outsb
imul
jo
popa
je
push
imul
or
inc
gs
inc
inc
js
stos
add
fs
jne
jae
jb
add
gs
arpl
insb
insb
push
popa
outsb
add
cmp
inc
push
jo
jb
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
push
add
je
arpl
insb
insb
push
popa
outsb
add
insl
add
je
imul
outsb
addr16
add
addb
outsb
data16
popa
je
push
arpl
add
insl
outsl
jbe
dec
outsb
jne
add
ja
outsb
imul
arpl
das
add
je
arpl
gs
imul
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
popa
insl
gs
arpl
add
inc
imul
jae
popa
addr16
add
xor
inc
push
gs
add
inc
outsl
jb
addr16
jne
fs
imul
add
imul
jne
dec
fs
add
push
add
je
jb
jo
add
dec
add
je
outsb
jne
scas
add
fs
jne
jae
jb
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
imul
outsl
arpl
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
push
add
je
popa
jb
outsb
je
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
gs
imul
sub
inc
push
ja
jb
add
out
add
imul
jae
addr16
add
jne
inc
gs
imul
js
inc
add
add
je
gs
popa
addr16
add
jb
gs
push
add
push
je
imul
push
push
outsb
outsl
ja
jae
outsb
arpl
add
popa
jb
jo
gs
add
sti
add
dec
outsb
push
arpl
sbb
inc
popa
insb
insb
push
imul
outsl
arpl
lahf
add
jo
je
push
popa
addr16
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
sub
push
outsb
fs
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
ja
je
je
push
add
sub
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
fs
je
imul
push
gs
arpl
jo
jns
add
inc
jb
popa
je
inc
imul
imul
jb
insl
push
add
cmp
inc
push
jo
jb
jne
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
xor
jb
outsl
dec
gs
push
add
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
push
push
inc
push
xor
cs
insb
add
push
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
je
add
dec
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
ja
add
add
gs
je
push
jb
jo
jb
jns
push
popa
addr16
add
pop
add
outsl
jo
jb
jns
push
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
mov
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
add
gs
je
push
popa
insb
gs
add
gs
arpl
imul
into
add
insb
arpl
push
arpl
jp
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
popa
je
inc
jb
jae
dec
outsb
imul
add
je
popa
jo
outsl
fs
pop
add
je
popa
jns
jne
add
add
je
imul
add
jbe
inc
inc
add
pop
add
je
popa
jo
outsl
fs
mov
popa
je
dec
inc
push
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
gs
je
inc
outsl
outsb
je
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
out
add
je
popa
insb
gs
gs
outsb
je
imul
gs
imul
outsb
jae
outsl
outsb
inc
js
add
add
jb
je
push
add
je
inc
imul
bound
imul
inc
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
gs
outsl
add
clc
add
je
gs
inc
insb
imul
push
popa
je
insb
je
add
inc
imul
test
inc
jb
popa
je
push
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
aam
push
gs
imul
outsl
jb
add
add
je
dec
push
xor
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
push
gs
imul
addr16
js
add
popa
je
push
outsb
add
push
imul
dec
jb
inc
js
add
add
arpl
add
mov
push
outsl
insb
jns
outsl
outsb
add
popa
je
push
arpl
outsb
add
gs
inc
js
outsb
je
outsl
imul
jo
inc
fs
outsl
outsb
je
gs
jne
arpl
add
inc
add
je
gs
arpl
popa
jo
add
inc
gs
imul
add
je
gs
dec
jne
push
add
popa
je
push
popa
je
gs
inc
jb
jae
add
into
add
arpl
gs
insb
imul
lds
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
inc
dec
xor
cs
insb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
sbb
dec
popa
outsb
fs
gs
outsl
jne
je
add
add
outsb
inc
imul
jb
popa
je
push
popa
imul
insl
gs
add
and
dec
popa
jo
imul
insb
add
push
gs
push
push
jb
outsl
jb
je
add
bound
inc
gs
je
insl
dec
popa
insl
gs
add
lret
add
inc
popa
fs
gs
fs
je
add
or
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
imul
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
inc
add
outsb
fs
gs
inc
push
dec
outsl
je
imul
outsl
outsb
add
xor
push
push
inc
data16
dec
popa
jae
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
imul
add
lret
add
je
jne
jb
outsb
je
imul
jns
add
mov
inc
jb
inc
imul
dec
push
dec
add
dec
popa
imul
outsw
add
add
gs
je
inc
jbe
outsb
je
add
outsb
add
outsb
fs
gs
jne
arpl
js
add
push
gs
fs
imul
gs
gs
jo
popa
je
inc
add
mov
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
bound
inc
gs
gs
jo
popa
je
push
add
rolb
inc
jb
popa
je
inc
imul
gs
push
dec
outsl
arpl
add
add
jne
push
gs
jne
arpl
popa
insl
gs
add
repz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
push
add
insb
gs
imul
jae
gs
push
imul
inc
jb
popa
je
push
gs
outsl
je
push
push
add
jns
inc
gs
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
outsl
fs
gs
imul
add
dec
add
jne
jo
outsb
fs
push
add
add
jae
jb
jo
outsb
push
add
add
je
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
or
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
inc
gs
push
inc
outsl
outsb
je
js
add
ret
add
insb
push
outsb
ja
outsb
add
je
insl
dec
popa
insl
gs
add
ljmp
insb
gs
je
jb
bound
gs
js
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
add
popa
jb
push
inc
add
push
gs
imul
jne
push
imul
add
insl
outsl
jbe
inc
imul
jns
add
ret
add
jae
jb
insl
jo
add
dec
add
insb
gs
imul
arpl
inc
imul
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
dec
inc
push
dec
inc
dec
xor
cs
insb
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
inc
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
push
add
push
dec
dec
push
inc
push
dec
cs
insb
add
addr16
pop
dec
popa
jns
push
imul
je
inc
push
insb
pop
add
add
or
inc
add
inc
add
cmp
call
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
mov
cmp
mov
ds
add
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
inc
add
inc
add
cmp
mov
cmp
add
cmp
sbb
inc
add
test
sarb
add
or
inc
add
fnsave
inc
add
inc
inc
cli
jne
in
incb
mov
cmp
xor
pushf
clc
xor
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
hlt
add
pop
dec
imul
pushf
clc
sahf
jmp
add
lods
cmp
pushf
or
addr16
add
inc
add
add
add
add
outsl
add
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
add
dec
add
imul
add
dec
add
add
insb
add
insb
add
add
dec
add
inc
add
imul
push
add
imul
add
add
imul
add
imul
add
add
dec
inc
dec
dec
push
fs
dec
dec
imul
push
inc
outsl
imul
data16
push
imul
add
add
add
add
inc
add
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
add
add
or
add
shll
and
inc
push
outsl
push
mov
cmp
add
add
add
popa
push
push
push
dec
je
push
jne
popa
jns
pop
je
push
jp
jp
js
imul
push
dec
dec
outsb
push
pop
dec
dec
dec
dec
je
add
add
insl
push
dec
jne
outsb
imul
pop
outsb
jbe
jns
dec
je
bound
push
arpl
push
imul
add
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
insb
jb
inc
push
push
inc
insb
inc
inc
jae
dec
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
dec
imul
inc
jp
pop
inc
jae
dec
dec
gs
jne
add
cmc
jnp
jnp
cmc
lcall
and
lahf
movsl
cmpsl
fcmovu
roll
add
add
les
pop
adc
and
lea
ljmp
xchg
dec
icebp
insb
and
pop
inc
or
add
icebp
jbe
mov
lahf
add
adc
arpl
imul
test
movsb
xchg
nop
jno
clc
stos
xlat
mov
test
lcall
scas
and
call
xchg
add
push
daa
push
xchg
mov
or
mov
adc
and
iret
mov
pushl
call
fildl
sub
fbstp
pushw
jbe
lea
pop
sbb
mov
outsl
ja
xor
f2xm1
adc
fldl
mov
and
sbb
shrl
cmp
shl
fsubl
lods
sbb
inc
xchg
frstpm(287
iret
imul
push
xchg
and
in
xor
dec
negb
add
push
pusha
in
jle
lcall
push
loopne
add
add
add
enter
cli
outsl
popa
mov
jbe
lahf
iret
out
mov
cwtl
lds
les
sub
cmp
push
clc
inc
js
sbb
and
sbb
jae
cmp
pause
loop
sti
sbb
jecxz
shll
or
push
out
jp
cli
icebp
in
in
daa
clc
nop
aam
lea
cmp
sub
dec
jbe
xor
out
mov
outsb
adc
or
push
and
jb
cld
aad
scas
sahf
lds
insl
pop
cmpsb
ficoms
pop
mov
and
js
push
adc
mov
fsubl
jmp
xchg
mov
xchg
shll
mov
hlt
add
pop
imul
jmp
mov
mov
add
pop
sbb
dec
mov
push
mov
mov
sbb
cli
xchg
sub
add
add
mov
push
mov
roll
add
add
int
xor
cmc
js
jo
insl
icebp
cmc
lahf
xor
aas
cmc
popf
sahf
inc
rcl
mov
sbb
inc
call
ret
adc
stos
pop
xor
pushf
cwtl
popf
mov
popf
scas
push
call
push
les
enter
rcll
xor
sarb
in
lds
clc
cli
pop
xor
sub
out
aad
mov
stc
imul
mov
push
adc
mov
lret
mov
and
sahf
stos
mov
lret
into
mov
inc
adc
mov
sar
fisttpll
xchg
sub
xchg
jle
push
xchg
adc
addr16
cwtl
pop
jg
and
push
das
pop
adc
in
mov
into
mov
negb
lock
imul
mov
xchg
lret
xchg
pop
mov
mov
in
mov
fimuls
xchg
push
inc
xlat
aam
xchg
xchg
pop
mov
xchg
lret
jne
lds
icebp
fs
sub
fists
jnp
dec
cmp
sbb
add
add
subl
roll
jl
js
call
add
add
inc
pop
ss
push
aad
push
pop
pop
mov
mov
dec
dec
out
popf
insl
out
aaa
sbb
cmc
push
pop
ds
test
cwtl
in
repnz
popa
mov
add
and
sti
fs
in
jno
or
into
or
popf
xchg
popf
cmp
cmp
inc
dec
icebp
xorb
data16
stos
out
mov
notl
and
rcrl
out
jecxz
inc
mov
bound
pop
pop
adc
push
aam
scas
daa
sbb
mov
inc
push
cli
mov
jp
ljmp
mov
aam
sub
shrl
push
push
mov
sub
jecxz
jae
imul
jmp
in
data16
mov
ror
mov
in
outsb
stc
pusha
fs
pushf
addr16
jnp
pop
mov
adc
add
push
test
xor
pop
jae
or
pop
dec
or
lock
popa
in
aad
add
add
xchg
mov
subl
pop
movsl
sbb
sbb
dec
je
jmp
mov
mov
sub
push
mov
loopne
fadds
mov
xchg
push
ja
fisubrl
inc
fbstp
aaa
jl
in
lret
shrb
icebp
mov
int3
into
xor
mov
inc
testb
int
push
sbb
cmp
lcall
and
icebp
call
pop
push
mov
int3
dec
mov
bound
add
pop
mov
and
fsubrl
loop
xor
mov
cmp
inc
and
jmp
add
jbe
xor
push
popf
leave
cld
push
pop
std
shll
cmc
push
lcall
and
pop
pop
ret
jnp
icebp
jge,pn
jo
imul
dec
pop
mov
fwait
add
add
add
cmc
insl
cmc
out
lcall
enter
clc
xor
lock
add
add
add
inc
js
in
add
inc
sbb
scas
cld
pop
and
mov
push
cltd
test
or
sub
int
gs
lret
test
adc
jge
push
dec
mov
stos
call
mov
repnz
out
rolb
cltd
sub
and
and
dec
bound
cmp
adc
or
xchg
mov
mov
std
icebp
sub
cmc
out
xor
xchg
mov
jecxz
jl
das
cmp
push
stc
cmp
mov
stos
adc
cmp
push
adc
jnp
sar
rcr
push
enter
insb
sbb
and
pop
jp
ljmp
jno
div
push
jnp
subl
xchg
sti
and
call
ljmp
cwtl
es
mov
stos
fistl
pop
shr
int3
mov
mov
and
sbb
add
add
add
outsl
jle
aas
mov
cmp
hlt
xlat
add
add
add
aas
push
cld
je
or
sbb
lds
cmp
outsb
dec
hlt
popf
mov
gs
xchg
dec
adc
fmull
aad
mov
fdivs
xlat
dec
pop
dec
popl
mov
jno
sub
aam
adc
mov
adcl
xchg
cmp
repz
xor
and
rclb
sub
aas
popf
js
outsb
aam
sbb
insb
inc
cld
iret
std
orl
mov
in
aam
shlb
fstps
pop
pop
sub
jo
mov
in
pop
in
push
lock
cmp
idiv
insb
sub
xor
repz
mov
fdivrl
mov
xor
jb
subb
sbb
push
cmc
adc
dec
inc
pop
leave
fdivrp
mov
xchg
repz
js
adc
sbb
stos
or
jge
jp
or
and
scas
sti
jle
pop
push
pop
loopne
xchg
mov
add
add
push
loope
repz
add
loopne
adc
and
jae
cmpsb
fdivs
adc
mov
cld
mov
xchg
testb
cmp
int3
cmpsl
lcall
shrl
int3
cmpsl
cmp
pusha
dec
mov
nop
lret
sbb
je
js
sub
movsl
insl
popf
out
mov
mov
add
insb
aas
ja
stos
scas
cmp
mov
mov
dec
push
inc
icebp
inc
and
mov
jb
jp
out
sbb
pop
fidivl
pop
adc
sbb
insl
jecxz
adc
lcall
xor
aaa
xchg
lods
das
jmp
stc
mov
addr16
pop
xchg
mov
jl
inc
mov
cli
call
pushf
nop
fcmovu
ljmp
push
mov
push
ret
xor
sub
inc
cltd
mov
icebp
mov
jle
add
mov
push
cmpsl
or
add
add
negl
arpl
lea
cld
flds
add
add
pop
imul
sub
and
int3
subl
stc
out
cmpsb
sahf
sbb
out
scas
inc
jl
jp
or
int
jo
ja
sub
loop
jle
jmp
sub
mov
stos
bswap
aaa
push
xchg
fldenv
mov
ds
enter
mov
mov
flds
mov
sub
or
je
xchg
dec
je
cmp
lcall
jo
daa
and
mov
hlt
xor
inc
hlt
mov
scas
das
fdivrl
ficoml
mov
lds
xlat
ret
and
fldcw
in
repnz
leave
mov
call
loopne
jge
mov
divb
push
pop
sub
je
sub
pop
push
pop
sub
and
mov
cmpl
ljmp
push
ds
dec
imul
stos
and
dec
push
cmp
aaa
hlt
inc
lea
push
shrl
loop
xchg
js
int
add
add
push
jl
jle
insb
out
adc
es
add
add
add
rcll
xchg
ljmp
and
test
adc
mov
mov
jbe
push
imul
test
ror
pop
test
sti
jmp
ja
fdivrs
out
mov
in
aaa
mov
mov
add
in
test
ljmp
aas
sbb
es
push
nop
and
xchg
shrl
adc
mov
hlt
or
sbb
add
mov
add
add
das
sbb
lret
outsb
lahf
pop
pop
mov
fs
add
stos
push
mov
shlb
out
mov
iret
pushf
movsb
div
lcall
lahf
mov
aad
add
mov
push
mov
fs
jg
mov
xor
scas
scas
pop
or
repz
ret
mov
xchg
arpl
jo
cmp
adc
xchg
stos
mov
dec
bound
add
mov
adc
in
xor
adc
add
add
add
add
pop
aas
cmp
pop
and
jae
pop
xlat
xor
addr16
popa
fcomps
mov
mov
or
pusha
push
std
fistpll
call
cli
call
fsubs
mov
psubusb
mov
into
decl
dec
push
sub
mov
xlat
cmp
add
sbb
jno
cmp
pop
test
insb
ds
sbb
push
add
leave
stos
rcrl
scas
call
movsl
lret
xor
cs
hlt
packssdw
mov
in
mov
imul
and
pop
inc
pop
decl
or
cmp
stos
mov
xor
cmp
test
outsb
cmp
jo
repz
js
mov
push
in
loope
mov
jge
inc
mov
test
cmp
adc
rcrb
mov
js
les
in
mov
inc
lea
sti
or
cmp
in
inc
inc
aaa
data16
jne
mov
lcall
add
add
add
pop
xor
rorl
inc
ret
sbb
xchg
fiadds
imul
pop
mov
or
mov
push
cmp
cmp
in
enter
mov
jl
add
mov
inc
and
fnstcw
sbb
pop
and
outsl
push
inc
xor
dec
cli
fnsave
scas
jo
dec
cmp
push
jmp
push
scas
cltd
scas
pop
mov
sti
ja
sub
mov
mov
aam
pop
pop
sbb
dec
xor
xor
jg
stos
push
dec
loope
pusha
roll
sub
or
mov
add
popf
cmp
cmp
repz
daa
leave
cmpsb
fwait
rcrl
clc
and
aad
cmp
xchg
fdivs
jg
cwtl
mov
or
mov
arpl
inc
jb
push
adc
or
pop
cmp
or
jbe
jnp
add
jnp
sti
xchg
lahf
mov
repz
fiadds
add
add
mov
cmpsb
popf
add
sub
in
adc
outsb
ds
push
scas
movsb
sub
loopne
arpl
popa
fucomip
and
scas
push
sarl
lock
jo
dec
sbb
add
and
adc
pop
pop
sbb
jmp
xchg
xchg
mov
std
fadd
sub
dec
stc
inc
cmc
cmp
adc
or
xchg
aad
mull
lods
das
movsl
into
mov
gs
fs
outsl
aad
iret
xchg
fsubs
roll
fwait
pop
cltd
sbb
jp
mov
push
shll
pop
mov
fs
xchg
scas
int
xor
sbb
lret
jp
arpl
pop
push
orb
pop
fwait
lcall
mov
dec
mov
jl
outsb
pop
out
and
mov
push
scas
jno
xor
repz
lock
jge
or
add
add
pop
sarl
mov
pop
adc
add
add
add
stos
shlb
sbbl
iret
sarb
lods
inc
dec
loope
das
loopne
lahf
xchg
xor
mov
mov
sarl
mov
sbb
add
xor
xor
jae
sahf
mov
dec
mov
jle
dec
stos
arpl
add
gs
adc
lods
inc
and
enter
or
sbb
and
mov
mov
insl
lcall
push
arpl
or
sbb
sti
lcall
or
sub
lock
jnp
mov
movsb
or
sub
out
outsb
xchg
add
test
add
cmc
lret
mov
jecxz
pop
je
mov
in
or
sahf
jl
jbe
xchg
inc
scas
scas
into
iret
push
or
fists
fistl
rorb
adc
aam
and
add
and
movntps
push
jge
out
in
jae
add
add
repz
std
repz
fimuls
adc
add
add
add
push
xchg
aam
jbe
mov
mov
or
stos
lock
insl
es
test
test
pop
xor
jle
inc
hlt
outsb
mov
mov
push
imull
mov
loopne
and
inc
mov
aam
or
fldt
mov
xchg
lock
jl
lea
xchg
hlt
mov
into
mov
sub
pushf
mov
fidivrl
outsb
dec
sub
repnz
pusha
das
out
stc
cmpsb
and
xor
lret
xlat
mov
fnstenv
mov
or
dec
push
inc
jns
xor
ja
jg
lds
outsb
sub
pop
fiaddl
daa
push
int
pop
mov
jns
dec
in
iret
push
gs
inc
mov
jge
adc
nop
mov
xchg
in
and
stos
or
filds
push
sbb
cmp
add
add
lock
cmp
arpl
je
test
add
add
add
outsl
and
jbe
or
pop
push
sub
and
mov
shr
pop
xor
aaa
lock
jo
and
lds
leave
xlat
xchg
mov
js
xor
in
jp
sbb
xor
xchg
rcll
adc
cld
mov
adc
dec
mov
jno,pn
imul
cli
ds
scas
mov
add
or
add
or
rcrb
xor
div
out
jg
stos
mov
test
outsb
pop
pop
add
adc
jmp
daa
and
lret
scas
icebp
xchg
cmpsl
push
xchg
jno
test
in
pop
pop
bound
inc
xchg
rcl
stos
jecxz
add
sub
push
jmp
fwait
cmpsl
rcrl
mov
mov
dec
iret
fimull
sbbl
push
pop
push
sub
rcrl
push
sbb
test
xor
add
add
mov
mov
jae
stc
push
sbb
add
add
add
sub
mov
int3
pushf
addr16
frstor
mov
mov
int3
call
or
mov
icebp
out
dec
jno
mov
add
sub
jl
jne
and
enter
or
mov
loope
repnz
inc
cmpsl
inc
out
in
pop
mov
mov
jmp
mov
mov
xchg
pop
or
inc
jg
sub
xlat
std
pop
ret
iret
adc
sub
push
push
out
xchg
pop
ss
mov
mov
adc
adc
mov
pop
sub
scas
mov
fisubs
or
jno
jl
xor
cwtl
nop
adc
fstpl
jg
insl
jl
and
enter
jg
ds
js
or
pushf
push
outsb
pushl
push
jl
mov
mov
repnz
inc
pop
lods
lods
or
inc
sbb
sbb
std
add
imul
add
add
xchg
in
mov
incl
rcll
dec
and
and
add
add
add
test
insb
sub
sahf
adc
pop
jbe
jae
gs
inc
mov
fisubl
push
leave
aaa
lcall
jb
mov
movsb
nop
jbe
das
stos
mov
mov
nop
xchg
xor
cwtl
iret
pop
mov
fmull
rcl
mov
aam
push
sahf
inc
xchg
mov
notl
dec
jne
hlt
das
ror
add
cs
or
fidivl
add
xor
fwait
add
bound
pop
fs
jp
gs
pop
push
mov
gs
mov
movsl
xor
push
inc
outsb
xor
fistpll
jp
inc
mov
nop
fildll
scas
repnz
icebp
jbe
bound
ds
std
jno
cmpl
pop
add
sbb
jb
mov
pop
sbb
add
movsb
nop
mov
lcall
addr16
pop
fstpt
mov
in
test
pop
inc
mov
in
negl
sub
movsb
out
out
mov
add
add
pop
lcall
ficoml
jecxz
push
xchg
dec
mull
push
in
std
lret
sbb
mov
sbb
in
inc
ja
fld
inc
pop
sub
adc
hlt
ficoms
jns
in
pop
leave
or
popa
cmp
sti
insl
sbb
jno
stos
mov
outsb
xor
xchg
jne
xlat
push
lds
movsl
gs
daa
inc
sub
shrl
mov
xchg
bound
and
roll
xchg
xor
inc
mov
int3
mov
adc
mov
ret
and
movsb
cmpl
and
hlt
push
insb
popa
sahf
in
push
jle
jne
es
cmpsb
fsubl
mov
js
jb
cld
push
xchg
mov
mov
mov
cmp
in
jbe
fs
cmp
outsl
enter
inc
lock
mov
mov
sub
xor
push
cmp
lcall
add
add
mov
stc
dec
push
fcoml
in
add
add
in
iret
xchg
rorl
mov
enter
popa
mov
jb
test
mov
push
add
add
loopne
scas
fwait
mov
ljmp
push
incb
sbb
in
loopne
fs
sbb
mov
testl
mov
nopl
mov
dec
mov
or
mov
jge
addr16
popaw
fadds
fs
insb
jge
and
cmp
mov
dec
shlb
sti
cwtl
pop
ja
lret
cs
movsb
cmp
std
add
sti
cs
aam
and
lock
jecxz
add
lret
in
dec
pop
sub
jnp
or
mov
mov
mov
or
sub
cltd
xchg
push
out
pop
push
push
call
xlat
sub
loop
daa
es
pushf
pushf
sub
orl
fmull
fnstsw
push
ljmp
add
add
adc
push
push
push
mov
dec
sub
add
add
add
push
popa
cmp
mov
subps
fisubs
fmuls
pop
lahf
call
jp
jmp
pop
test
mov
xlat
outsb
repz
cmc
pop
sub
divb
push
xlat
mov
adc
pop
addr16
xor
xor
popf
cmpsb
pop
sub
jl
mov
sbb
sbb
sbb
cli
aam
adc
movsb
lahf
mov
sbb
call
dec
lods
ja
cmpsl
dec
adc
sti
adc
int
in
mov
mov
cltd
int
inc
fisubrs
and
testb
bound
iret
adc
lods
jbe
and
inc
or
int
xlat
push
fistpll
dec
faddl
jns
call
dec
incb
adc
dec
dec
adc
xchg
inc
outsl
jg
test
es
add
loope
inc
adc
jns
repz
and
push
adc
out
repnz
add
pop
lcall
les
loop
lret
add
add
add
add
ds
daa
cld
dec
out
test
cmp
adc
stc
pop
insl
jmp
neg
movsb
pop
in
inc
dec
fdiv
inc
dec
inc
pop
add
shrl
adc
shll
in
pop
out
add
sub
setno
pop
adc
jb
xchg
and
jno
jl
repnz
jae
push
pushf
cmc
lret
aam
jno
rolb
xor
push
xchg
jne
inc
dec
into
pop
pop
loopw
add
stos
call
pop
inc
push
orb
sub
and
cmpsl
mov
js
or
push
xchg
imul
adc
xchg
mov
add
test
add
repnz
jb
inc
loop
pop
cmp
xchg
sub
xchg
mov
mov
sub
push
xor
jnp
sub
cld
arpl
je
mov
std
out
cmc
ljmp
cmpb
negb
xlat
xlat
xchg
data16
pop
mov
push
decl
jecxz
push
sysenter
call
add
fldenv
pop
xchg
mov
sbb
inc
adc
insb
mov
mov
adc
mov
cmpsl
and
scas
sbb
stc
or
aam
jbe
decl
nop
mov
cmp
mov
mov
sbb
fwait
sub
daa
and
or
push
or
orb
push
lock
fnstsw
push
mov
shrb
jg
add
les
pop
push
fwait
xchg
sti
and
mov
pop
mov
iret
dec
xchg
pop
insl
cmp
testl
clc
test
add
jmp
sbb
jbe
mov
cmp
js
jl
dec
pop
fsubrs
fistl
scas
out
xchg
sbb
or
fmuls
and
jbe
test
cmp
jmp
xchg
leave
mov
or
inc
scas
mov
add
add
jmp
in
push
sub
push
jmp
add
int
lret
loope
pushf
imulb
pmaxsw
inc
push
push
imul
jno
xor
push
push
sub
fwait
loope
jecxz
or
sbb
mov
lret
add
imul
cmp
push
sarb
js
test
pop
xchg
call
push
jne
xor
enter
xchg
or
push
imul
pop
roll
sub
or
lock
inc
jno
pusha
mulb
mov
int3
xchg
jmp
adc
add
add
sti
icebp
in
call
mov
rcll
pop
hlt
mov
pop
jp
or
lock
push
xchg
andl
or
in
lea
lea
call
lods
xchg
adc
bound
hlt
mov
sti
dec
xchg
das
sub
sub
sahf
ficomps
pop
bound
std
shrl
add
add
outsb
xor
mov
lcall
ljmp
rclb
jg
pop
pop
lds
add
xor
push
loopne
xchg
sbb
test
jns
and
sub
push
insb
andl
dec
imul
pop
xor
xchg
pop
mov
mov
pop
outsl
rcrb
in
push
lea
mov
cmpsw
jl
inc
ret
and
int
jecxz
or
repz
mov
loopne
push
shl
lock
sub
out
lret
cld
cmpsb
mov
std
mov
jne
divl
sbb
ret
cmc
or
imulb
shrl
das
movsb
add
push
pop
jmp
pop
and
pop
cmp
ljmp
jb
mov
bnd
icebp
xchg
pop
jl
insb
inc
pop
movsb
dec
ficoml
mov
insb
outsl
cli
or
mov
sbb
rdtsc
movsb
push
sti
mov
repz
ror
lock
jnp
xor
xchg
jg
add
inc
jmp
add
add
aam
fiaddl
pop
inc
dec
cmp
push
dec
ret
push
das
repz
jo
arpl
ds
jns
fdivr
cmp
stos
mov
mov
push
push
ds
cli
mov
or
ja
inc
inc
std
les
cmp
rcrl
aaa
movsl
pop
xor
mov
mov
dec
mov
push
je
hlt
mov
fsubrl
cmp
fidivs
scas
insb
dec
push
out
adc
inc
ja
xchg
loope
jns
mov
mov
push
cmp
xchg
stos
inc
inc
dec
sti
sub
xchg
push
js
lahf
mov
xchg
pop
pusha
sti
pop
clc
je
pop
mov
movsl
aaa
clc
jge
mov
or
cmc
push
outsl
cmc
in
cmpsl
mov
push
jns
test
xchg
clc
and
jle
xchg
inc
push
add
popf
inc
push
xor
out
xchg
gs
xchg
add
cmc
stos
push
outsl
insl
lcall
movsb
add
add
add
repz
fisubs
insb
push
cltd
inc
in
add
add
add
mov
addl
push
inc
into
push
popf
jge
in
pop
jl
aad
mov
sbb
mov
pop
insl
lcall
cmp
in
out
int
in
cmp
dec
cli
or
cmp
div
mov
insb
outsl
nop
push
dec
out
arpl
out
lcall
adcb
or
xchg
sub
cmc
mov
int3
jl
out
in
repz
sbb
lods
ret
cmp
xor
jmp
sbb
mov
sbb
out
int3
jl
inc
mov
pop
xor
sbb
scas
dec
mov
data16
inc
or
pop
movsl
dec
push
and
cmp
out
aam
fsts
mov
cmp
jne
call
adc
mov
cmpsl
jbe
daa
mov
mov
and
mov
or
push
xchg
es
icebp
mov
cmpsl
out
sbb
xor
in
add
add
add
idivl
arpl
cmp
aas
push
in
xchg
mov
inc
mov
lcall
ret
sbb
stos
pop
shl
test
xor
dec
pusha
rcll
pop
sub
lods
les
cmp
xor
xchg
pushf
dec
push
adc
lea
and
lcall
push
lea
stc
mov
and
xor
icebp
daa
adc
adc
pop
cmpsl
in
pop
rcl
enter
inc
dec
loopne
fwait
cmp
push
int3
clc
ja
jl
dec
lock
mov
sbb
int
sbb
stc
pop
or
mov
jnp
hlt
mov
hlt
out
xchg
orl
pop
add
sbb
jl
push
jge
sbb
loop
mov
sub
jge
aad
sbb
lcall
mov
dec
shr
adc
shrl
cmc
scas
sub
mov
dec
out
add
add
add
cmp
in
inc
lea
lods
or
or
dec
movsb
js
mov
outsb
jo
arpl
mov
cmpsl
pop
mov
jl
es
es
xchg
lret
outsb
mov
and
mov
push
add
mov
nop
out
insl
outsb
pop
inc
xchg
or
out
dec
sub
cld
sbbl
inc
in
xlat
decl
std
adc
dec
pop
gs
jne
shlb
roll
incl
cwtl
scas
pop
es
jb
imul
ja
lret
frstor
iret
or
fidivs
in
jl
cmp
inc
gs
inc
push
incl
in
jb
pop
sahf
lods
cmpsb
scas
lret
adc
sub
mov
out
add
movsb
adcb
xchg
mov
sbb
gs
addr16
jp
xchg
scas
shr
cmp
dec
mov
sub
repnz
jl
pushf
movsl
enter
lret
pusha
rorb
cmpsb
mov
loopnew
out
add
add
add
inc
mov
jbe
test
inc
js
inc
js
push
or
dec
rcl
dec
xor
mov
dec
insb
scas
outsb
stos
imul
mov
jmp
inc
daa
cwtl
sti
add
sbbb
call
xor
push
mov
ficoms
mov
mov
es
mov
out
dec
movl
popa
push
mov
pop
stos
sub
mov
cmp
ret
stos
pop
test
into
cmc
sti
sbb
add
into
bound
rclb
xlat
pop
add
in
fildll
jg
in
sarb
outsb
add
or
lds
mov
dec
fnstenv
push
push
add
sub
lahf
scas
sti
nop
sbb
pop
rolb
sbb
ret
js
adc
mov
mov
in
pop
and
std
int
inc
rcr
jne
adc
jmp
jecxz
push
testl
std
cld
sbb
add
add
ja
mov
mov
loope
cmpsl
mov
movsb
imul
jle
out
cs
sti
addb
jmp
ljmp
mov
stc
add
icebp
xchg
aas
jbe
jle
push
in
ret
stos
xor
in
mov
cmp
cld
inc
inc
stos
cwtl
jle
std
mov
lods
mov
icebp
lret
enter
mov
and
cld
xchg
cmp
xchg
mov
cs
xchg
jecxz
push
fiadds
pop
lds
pop
fstpl
rorb
mov
cmp
or
adc
mov
gs
inc
and
xor
or
loopne
imul
dec
nop
adc
adc
adc
push
test
push
outsl
cld
ss
fidivl
gs
inc
mov
dec
sbb
scas
or
lds
dec
lds
insl
push
aaa
rorb
insl
int3
adc
and
les
es
add
add
xchg
mov
mov
pop
das
test
jle
pop
icebp
add
add
add
rolb
inc
mov
mov
rol
lock
pusha
hlt
jae
dec
mov
jb
inc
lahf
adc
das
xchg
fstpt
out
std
fs
fisttpl
sbb
stos
in
inc
clc
fistpl
in
test
push
xor
sub
clc
fmul
pop
sbb
dec
cmp
les
lcall
jbe
fisubrl
or
fbstp
idivb
ss
scas
xor
dec
addr16
mov
dec
das
mov
fnstenv
std
push
xchg
test
dec
fstps
adc
out
aam
js
pop
test
inc
mov
xlat
cmc
or
sbb
std
pop
jbe
sub
adc
in
or
loope
out
shl
notl
fldl
xchg
push
mov
iret
lret
test
adcl
inc
pushf
scas
cmp
mov
stos
mov
dec
and
lods
fdivs
insb
in
add
les
fists
rolb
add
add
fucomi
xor
adc
add
add
dec
in
test
cmp
mov
inc
jns
sbb
mov
stos
fcmove
adc
xchg
iret
sub
or
and
and
inc
cmpsl
pop
fdivp
cld
sahf
sub
negl
fs
xchg
jg
or
cwtl
jb
xchg
sub
outsb
leave
mov
or
mov
jo
xchg
rorb
pop
xchg
cmp
xor
loope
or
adc
repz
mov
push
rcl
divl
push
jg
popa
lea
fmull
js
popf
lret
loope
sahf
sbb
lods
push
dec
push
subb
jne
popf
hlt
inc
xchg
inc
adc
inc
xor
les
fisubl
fnstenv
scas
loope
mov
mov
stc
pop
outsl
or
cwtl
sahf
int3
sahf
loop
stos
add
and
in
xor
sahf
addb
push
movsl
xchg
cltd
mov
dec
aas
jbe
push
inc
pop
jns
aas
loopne
sub
inc
lret
ja
repz
add
add
sbb
push
adc
adc
push
or
dec
cmp
push
insl
pop
sahf
push
ret
or
and
iret
lret
mov
lods
ljmp
lods
mov
cmc
mov
add
mov
lods
loopne
xchg
push
mov
inc
jae
and
cwtl
inc
push
adcb
rcrl
fsts
jp
push
arpl
lods
orb
test
shl
jo
idiv
sarl
sub
push
fildll
xor
pop
sub
xchg
addr16
popf
je
mov
push
jne
dec
push
dec
pop
pop
mulb
lcall
clc
jge
fs
dec
call
out
subl
cmp
cmp
fsubrs
cmp
mov
adc
or
pop
bswap
mul
in
xor
mov
or
mov
xchg
mov
jmp
les
add
cmpsb
sbb
jnp
mov
pusha
or
lahf
fs
add
add
add
lock
push
shll
push
ret
mov
bound
xlat
in
jbe
xor
rclb
adc
std
cmp
push
ljmp
jle
jecxz
sub
fdivs
or
xor
arpl
loop
and
mov
inc
mov
dec
popa
pop
xchg
popf
loope
pop
jge
divl
stos
sbb
in
dec
scas
mov
sub
adc
in
ljmp
pop
iret
into
push
cmp
rcrl
rcrl
lcall
imul
pop
testl
dec
int3
pop
stos
xor
enter
imul
in
fnstcw
push
xchg
decb
imul
test
test
pop
xor
mov
xchg
cmc
das
leave
and
popf
and
arpl
jle
jp
psllq
add
movsl
imul
gs
movsl
mov
add
add
add
lods
pop
xchg
adc
mov
jmp
lcall
inc
lret
icebp
test
add
push
jmp
addb
mov
into
sub
and
jno
cld
cli
vmptrst
mov
in
cmp
stos
lods
push
dec
push
adc
cmpl
inc
stc
cmpsb
in
test
adcl
xor
mov
loope
mov
xchg
xor
movsb
adc
cwtl
mov
mov
adc
decb
ror
cmp
mov
and
clc
pop
xlat
inc
mov
xchg
in
sbb
or
dec
out
lret
add
xlat
cmc
clc
imul
xchg
into
imul
pop
push
dec
shl
or
push
cmp
in
mov
outsl
in
mov
sbb
repnz
cld
xchg
mov
idivl
test
in
insb
testb
add
add
outsl
loopne
in
mov
pop
or
test
icebp
bound
cmp
jnp
popa
adcb
add
dec
imul
xor
outsl
sub
es
repnz
jp
push
mov
dec
push
popa
inc
addl
test
push
pop
popf
push
push
push
shlb
test
mov
dec
call
xlat
add
mov
divb
int
jo
fiadds
mov
sbbb
dec
fcoms
sub
ljmp
out
and
pop
mov
and
jb
push
out
popa
in
xor
outsl
in
add
leave
cmp
insb
imul
shl
xlat
adc
fsubs
and
and
rcpps
cld
mov
pop
push
sbb
xchg
push
icebp
mov
push
notb
xor
nop
lods
cmp
push
adc
push
mov
or
add
add
mov
fimull
std
stos
xorl
add
jp
xchg
repnz
int3
sub
pusha
mov
xchg
xchg
lret
pop
push
jle
out
pop
into
push
pop
lret
popa
push
or
xchg
pop
mov
pop
mov
and
mov
push
cli
cld
add
es
push
enter
fnstenv
ficomps
not
mov
sub
ds
cwtl
ficompl
shl
aam
jmp
aam
aad
dec
out
clc
adc
js
xchg
push
mov
jne
stos
sub
dec
inc
cmp
or
pop
ret
sahf
stos
lret
push
inc
xor
mov
cwtl
push
cmp
push
test
cmpsl
aaa
sub
shrl
insb
jbe
or
fsubrp
mov
add
xchg
mov
std
clc
jge
inc
sub
push
lds
dec
fcompl
xor
shlb
pushf
data16
jnp
aas
sub
in
adc
je
mov
lods
dec
dec
jb
or
les
jns
pause
aam
push
popf
dec
jmp
imul
lahf
repnz
or
dec
repz
add
add
add
hlt
or
jbe
mov
lea
sub
imul
mov
loope
mov
jmp
decb
clc
in
call
xlat
ret
sub
sarl
dec
enter
inc
xchg
aad
pop
outsb
ljmp
int3
pop
mov
dec
mov
mov
mov
fimuls
jp
cmp
add
mov
inc
jle
cmp
mov
scas
push
popa
sub
xchg
int
call
xchg
lahf
or
xchg
pop
cmpl
imul
or
sti
push
jmp
dec
pop
xchg
push
push
xor
mov
movsl
pop
icebp
out
imulb
mov
jne
xchg
inc
jge
out
sbb
push
lret
push
movsb
daa
ret
test
adc
out
mov
jo
xchg
jge
mov
push
pop
das
mov
xor
cltd
gs
add
push
stos
out
into
pop
inc
pop
lods
pop
cli
cmc
cmpsb
lret
jae
repz
add
add
add
lods
out
mov
nop
or
jg
repz
clc
push
push
sub
sub
or
push
xchg
pop
js
jmp
inc
cmp
or
test
pusha
dec
push
add
cmp
jno
in
in
mov
mov
cs
out
sbb
popf
or
xor
xchg
stos
addr16
iret
push
or
mov
mov
mov
push
out
mov
data16
sub
sahf
shrb
xor
sbb
aam
test
out
fimuls
pop
mov
bound
add
pop
imul
adc
pop
xchg
push
add
xchg
incb
add
popl
cmp
je
into
fidivrs
jle
movsl
std
ja
stos
mulb
push
stc
jne
and
jae
add
test
jmp
call
mov
mov
mov
mov
sub
jae
add
add
stos
cltd
inc
popf
jae
out
xor
jl
add
add
add
and
mov
iret
and
inc
dec
dec
cli
mov
insl
outsb
into
test
mov
sbb
adc
pop
jle
jo
loop
cmpsb
jo
jns
cli
jecxz
cmp
insb
ja
shlb
adc
mov
push
fcoms
inc
adc
mov
out
xor
loope
sub
jp
mov
mov
fst
sub
dec
mov
mov
in
or
adc
lock
mov
mov
mov
out
fidivrs
aad
cltd
faddp
xor
sbb
lds
mov
inc
popf
pop
xlat
out
or
ljmp
xor
and
test
cltd
cmp
scas
shrb
or
sub
push
sahf
es
pop
xchg
enter
add
iret
jns
clc
mov
or
mov
call
mov
sbb
xchg
lock
mov
out
dec
in
popa
mov
nop
test
aam
int
aaa
das
aam
fstpl
test
add
add
mov
push
bound
or
sti
jmp
dec
test
adc
lret
test
arpl
add
rcr
cmp
cmp
andb
jne
in
mov
incb
ficoms
jg
xor
stos
or
cmp
repz
in
lahf
scas
sub
adc
xchg
in
repz
test
test
negl
inc
jnp
loop
push
add
and
mov
mov
dec
dec
les
lret
rcrb
js
mov
cmpl
pop
push
push
mov
cmp
stc
inc
add
xor
enter
cmc
notl
jg
loop
int
jne
xor
cld
aaa
push
mov
jo
xor
mov
push
mov
ljmp
jb
fnsave
or
and
pop
arpl
addr16
sub
lcall
add
add
add
fcmovnbe
out
pop
jle
sahf
add
in
lods
outsb
aaa
fistps
in
mov
mov
push
getsec
mov
and
mov
leave
cmpsb
push
jecxz
and
jl
ror
rcrb
fbld
pop
ret
push
test
dec
xor
push
imul
dec
enter
scas
ret
out
stc
jb
data16
loope
fistpll
xchg
mov
daa
js
das
cmp
mov
outsb
cmp
jecxz
pusha
and
int
cmovge
js
dec
fimull
cmpsb
adc
pop
sbb
jge
xchg
mov
pcmpeqb
sub
sbb
cmp
stc
dec
popa
inc
aad
in
pusha
xor
sbb
jne
push
or
push
add
fs
ja
add
adc
stos
mov
mov
add
ret
sarl
inc
cmp
sub
add
add
out
out
pushl
xchg
xor
je
rorl
add
add
aaa
mov
sbb
jl
add
sbb
dec
ja
mov
xchg
jb
mov
ret
cltd
push
cmpsb
scas
inc
mov
dec
jmp
aad
in
mov
inc
xor
adc
jmp
mov
testb
js
sub
mov
add
int3
sub
sar
sarl
push
cmpl
into
pop
dec
xchg
push
push
and
sahf
jg
into
pop
cmp
push
les
shl
xchg
xchg
xchg
outsl
lods
cmpsb
jge
xchg
mulb
and
mov
stos
je
mov
ds
jb
xchg
pop
lea
xor
push
mov
in
out
push
popa
push
std
mov
xlat
push
cmp
shlb
sbb
js
push
lcall
and
aad
outsl
push
jge
repnz
push
jae
or
adc
aas
xchg
sub
sbb
sbb
or
dec
shr
add
add
push
scas
mov
icebp
out
mov
add
add
add
sub
push
mov
fidivs
mov
pop
outsb
arpl
mov
inc
xlat
popa
adc
imul
fdivrs
aas
in
les
lahf
add
xlat
ret
or
cmp
pop
loope
jmp
add
pop
rolb
insl
sub
cmp
sbb
add
call
movsb
hlt
movsl
outsb
dec
mov
popf
cli
loope
icebp
pop
xor
push
rclb
or
xchg
pop
nop
aaa
adc
jecxz
push
shll
jo
fmuls
mov
pop
add
pinsrw
lea
jbe
les
aad
shl
inc
je
add
sbb
outsl
xor
icebp
pusha
mov
fidivl
mov
cmp
in
mov
fdiv
mov
cmpsl
dec
cmp
jp
hlt
jg
inc
fisubl
mov
call
add
add
add
xchg
and
movsl
mov
mov
mov
push
scas
nop
incl
add
add
ds
loopne
mov
jbe
ror
lret
sub
shll
xchg
cmpsb
into
or
push
fcoms
aaa
test
or
pop
outsl
fimull
inc
aaa
jnp
iret
pop
in
sub
mov
stos
pushf
mov
mov
pusha
in
pop
push
out
push
pop
mov
sbb
mov
popa
mov
nop
lahf
mov
xor
jo
das
in
xchg
pusha
pop
push
lcall
imul
add
les
or
and
pop
inc
sub
push
push
xchg
rorb
test
aaa
test
lds
mov
mov
imul
mov
pop
xchg
xor
mov
subb
jo
and
ljmp
mov
cld
sub
pop
sub
adc
test
mov
dec
scas
adc
ret
mov
xchg
cltd
scas
out
and
fdivl
mov
cld
flds
add
add
add
sahf
xchg
mov
test
les
or
icebp
jl
into
and
sub
adc
outsb
lret
push
notb
dec
lcall
jno
rorl
or
push
movsb
push
jno
adc
mov
jg
sti
add
loopne
mov
in
sub
aam
loope
andl
fwait
sbb
cld
xchg
mov
sti
enter
sbb
pop
popa
pop
or
stc
inc
repz
ja
test
push
popa
pop
or
and
sub
bound
xchg
xor
inc
sti
test
out
ljmp
jae
add
es
rcrb
cmc
scas
out
cmp
loopne
and
and
test
mov
xchg
int3
mov
adc
pop
ss
lret
dec
das
rorb
xchg
xor
xor
jmp
popf
addr16
decb
adc
add
notb
inc
stc
mov
mov
lods
imul
in
inc
xchg
cwtl
add
add
add
mov
addr16
push
lret
insb
fldenv
mov
call
gs
xor
xorb
inc
push
testb
xor
mov
mov
insb
aad
push
ljmp
rol
popa
outsl
pop
inc
add
mov
adc
stos
sub
aad
out
push
fnstenv
sub
pop
fldt
js
nop
subl
je
or
je
lea
pop
push
add
daa
ficoml
xchg
xor
xor
loope
and
jne
mov
outsb
cmpsb
cli
in
sbb
fcoms
adc
jne
dec
sbb
ret
pop
add
sti
xlat
push
jl
push
push
mov
out
imul
stc
std
mov
fisttps
aam
pop
mov
dec
push
xchg
mov
cmp
repnz
pop
push
jmp
mov
add
xchg
sub
scas
or
cmp
inc
push
xchg
pushf
add
add
add
pop
lock
jno
push
mov
data16
push
mov
inc
sub
inc
xchg
xchg
jno,pt
mov
bound
pcmpgtw
cmovns
adc
inc
cmp
in
and
lret
pushf
popf
rdtsc
mov
cwtl
and
dec
lahf
mov
push
hlt
imul
lock
movsb
sahf
imul
jg
mov
xchg
popf
roll
stos
lret
es
xor
cmc
adc
sbb
mov
jg
adc
jp
nop
jns
or
movb
repnz
mov
lock
jmp
fnsave
sbb
xor
xchg
add
leave
outsb
addr16
shrl
jp
push
pop
test
das
xchg
xor
in
nop
int3
pop
psubw
fdivrs
add
adc
pop
push
xchg
ja
push
or
cmp
fisttpl
addr16
and
mov
aaa
sub
jo
jge
push
add
adcl
jl
xchg
enter
push
fbld
gs
mov
add
add
or
or
mov
loope
iret
adc
stc
push
pop
mov
xchg
dec
add
test
mov
clc
popa
jge
sbbl
push
add
sbb
les
jae
xchg
pop
mov
mov
push
xchg
cmp
xor
adcb
cmpsb
push
loop,pt
scas
addl
imul
adc
inc
jno
push
mov
mov
mov
out
js
lret
and
dec
cmpsl
lahf
pop
sbb
mov
xchg
jmp
testb
mov
mov
xor
rol
dec
loopne
in
pop
mov
ljmp
pop
scas
aad
cmc
dec
dec
dec
jmp
xchg
cs
fadd
xchg
cwtl
push
fmul
pop
ds
mov
arpl
repz
push
hlt
adc
shl
fadds
adcb
loop
out
lret
jg
daa
lock
mov
mov
into
fwait
add
mov
jge
add
add
add
jle
mov
fisttps
xor
outsl
xor
shll
sbb
jg
fldcw
movsb
mov
push
jmp
adc
out
dec
lret
jb
mov
or
lods
out
push
enter
cli
lret
xor
push
push
aaa
sbb
dec
popa
enter
cmpsb
leave
je
push
movsl
push
push
pushl
push
xchg
pushf
pushf
jmp
sub
mov
nop
sub
repz
pop
out
push
mov
cs
test
cmpsl
pop
out
jns
fsubs
cwtl
inc
je
sbb
add
adc
fcmove
shl
shl
les
and
mov
in
or
test
pop
sti
xor
sarl
in
imulb
dec
xchg
mov
sbb
outsb
mov
lret
or
out
repz
testb
inc
ret
and
add
add
xor
mov
pop
sarb
in
inc
jnp
test
add
add
add
je
andb
loope
or
outsl
aaa
sbb
cli
fstpl
xchg
mov
xor
lret
dec
ljmp
fwait
movsl
or
rorb
push
cmpsb
in
mov
lret
mov
push
divl
and
inc
mov
pop
cld
out
testb
cmp
sbb
mov
insl
mov
shufps
jae
add
mov
add
cwtl
cmc
cld
fcomp
aaa
xor
jge
inc
mov
dec
test
mov
aam
ss
add
mov
adc
int
div
rorl
add
shl
push
out
lahf
mov
sub
mov
fsubr
sti
xor
push
idivl
je
sub
aad
mov
stc
xchg
jle
outsb
lods
iret
pop
or
mov
push
mov
stc
pop
js
jecxz
popa
adc
ja
aas
cmp
cmp
sti
mov
in
inc
cmp
lds
add
add
inc
out
aas
mov
shl
pop
xchg
dec
lods
push
add
add
add
mov
dec
je
or
push
or
push
popf
cltd
dec
pop
arpl
fmull
dec
dec
xchg
into
sub
aad
mov
fdivr
cmp
xor
orl
repnz
outsl
cmpsb
stc
loopne
popf
jge
iret
xchg
xor
call
jle
and
mov
xchg
leave
sbb
shll
outsl
xchg
add
push
jge
xor
orb
ret
mov
and
orb
rorl
fmull
adc
rorb
jmp
dec
mov
insb
lret
mov
lcall
int3
push
mov
or
in
pop
ret
movsl
lahf
bound
shlb
fs
in
stc
mov
mov
ffree
lock
mov
mov
mov
js
mov
and
sbb
aam
shlb
fs
stos
daa
outsl
sub
fists
stos
mov
ret
add
add
bnd
dec
leave
and
in
xorl
addb
test
lcall
push
rcrl
dec
inc
xor
cmpsb
adc
cli
pushf
add
add
lods
dec
sbb
dec
in
mov
jp
cli
arpl
fistl
jecxz
popa
xchg
sarl
pop
sahf
lods
stc
fstps
je
cmpsb
xor
inc
pushf
mov
pop
mov
aam
cs
outsb
imul
pop
clc
and
jecxz
lret
sti
repz
add
loopne
sbb
andb
scas
mov
mov
mov
call
clc
ss
pop
or
ret
sbb
sub
mov
ss
push
or
jecxz
dec
lds
inc
jno
clc
mov
int3
adc
or
cli
scas
inc
movsb
cltd
ret
daa
ljmp
int3
aam
test
call
cmpl
ds
mov
mov
sti
sbb
in
out
ja
filds
aaa
adc
or
add
add
cwtl
hlt
imulb
aam
cmpsb
push
int
or
test
js
add
and
inc
or
push
ret
lret
test
xlat
repnz
fisttpl
arpl
ret
fldenv
pop
inc
sub
add
lods
aam
ss
xchg
mov
cmpb
push
bound
or
cwtl
insb
scas
icebp
ljmp
fsubr
jg
repnz
lret
imul
sub
xor
push
mov
jbe
xor
repz
fadds
ret
mov
xor
mov
js
or
rcr
in
ret
xor
xlat
outsl
rcll
sub
out
pop
push
sub
jb
imul
cmp
xchg
loop
xchg
jae
push
jbe
jmp
add
mov
sbb
rcrb
andl
mov
sub
mov
das
pusha
or
aas
sahf
hlt
clc
jp
psubb
add
add
pop
in
inc
push
or
mov
mov
add
add
mov
fmuls
repz
push
lcall
mov
fsubs
std
add
and
jns
inc
inc
addl
sub
divl
dec
arpl
andb
adc
pop
push
inc
jb
jnp
jl
xchg
jge
mov
mov
pop
fs
fwait
mov
stos
pop
aad
fwait
movsb
mov
test
dec
ljmp
daa
cmp
mov
jno
les
xor
aad
jae
sub
sar
pushf
cld
push
mov
jo
loopne
fisttps
fidivrl
sti
pusha
fs
inc
mov
lods
mov
int
cmp
insb
sti
push
jmp
cltd
popa
push
leave
out
push
stos
bound
gs
les
fidivrs
repz
mov
lret
xor
mov
cmpsl
mov
xor
mov
jb
stc
sbb
pop
subl
fdivp
xor
mov
jg
neg
pop
daa
inc
mov
add
add
add
inc
add
mov
push
push
push
sub
mov
pop
pop
cmpb
xchg
and
jl
jo
mov
xchg
scas
sub
mov
in
jmp
mov
jo
mov
mov
xor
mov
paddsb
les
push
ljmp
push
push
mov
cmpb
sbb
sahf
xor
ficompl
pop
frstor
iret
mov
jae
aam
dec
pop
mov
pop
jle
lret
sarb
add
loope
mov
aas
hlt
sti
shlb
xchg
daa
int3
add
sub
fwait
and
mov
pop
negb
mov
jl
xor
cmp
stos
sub
insl
das
pop
pop
movsb
dec
add
pushf
aas
xchg
orl
jne
cld
in
pop
cmp
dec
leave
cmp
and
iret
in
mov
sbbb
or
dec
inc
mov
add
add
sti
jg
cmp
je
xchg
pop
add
or
add
add
pop
mov
cmpsb
mov
cmpsb
shr
loope
adc
aaa
aad
std
pop
test
enter
adc
dec
mov
jecxz
sub
ds
and
call
push
mov
rorb
fsubrp
jl
jbe
das
and
push
jb
stos
xor
pop
cmp
ljmp
mov
push
mov
mov
scas
push
bswap
cmp
jno
mov
iret
sub
mov
imul
or
push
adc
push
icebp
lods
pop
xchg
int3
arpl
rcll
addr16
pop
dec
insl
pop
leave
mov
adc
and
lock
sahf
mov
pop
jp
pop
add
stos
dec
cmp
pop
out
outsl
sub
xor
push
sarl
popa
pop
push
shlb
mov
mov
or
dec
add
aad
sbb
dec
je
xchg
in
sbb
ret
insb
scas
aam
jnp
fstp
fcompl
cli
fisttpl
jg
or
add
add
in
and
mov
xlat
mov
jle
xchg
xor
bound
stc
or
inc
loop
xor
pop
insb
pop
popl
loopne
fnstenv
and
ljmp
inc
repnz
decl
dec
sub
jle
rcrb
or
flds
add
xor
and
jle
dec
mov
push
push
push
pop
mov
jmp
jmp
in
cmp
and
mov
das
mov
mov
jecxz
mov
gs
insl
xchg
inc
stos
mov
test
hlt
push
popf
push
ds
ret
icebp
test
adc
push
dec
andl
push
mov
mov
sbb
xchg
fwait
scas
add
push
pop
pop
mov
js
das
inc
jle
test
daa
adc
pop
cmp
mov
mov
inc
loopne
jb
out
mov
icebp
cmc
mov
push
fldenv
dec
mov
rorl
add
mov
jno
std
outsl
mov
add
das
clc
push
enter
add
add
cs
push
iret
adc
iret
ret
inc
daa
mov
push
inc
cmp
stos
pusha
imul
das
mov
xor
out
popf
push
mov
push
ret
adc
xchg
inc
enter
outsb
push
xor
mov
test
hlt
push
int
movsb
jno
or
xor
pushf
adc
out
mov
sub
das
dec
add
std
bound
pop
sbb
mov
dec
adc
xchg
in
mov
mov
in
dec
xor
fcomps
mov
hlt
or
jmp
lcall
xchg
mov
mov
lods
dec
jne
sbb
fildl
jl
mull
mov
idivl
add
inc
test
and
pop
mov
insb
inc
out
cmpsl
jmp
fcmovnu
push
mov
inc
and
test
xorl
sbbb
loope
jmp
fisttpll
jg
int3
push
add
add
add
daa
adc
dec
sub
fdivs
jae
das
nop
dec
cmp
lea
jmp
jmp
jge
push
add
add
unpckhps
cmpsb
stos
inc
sub
popf
mov
or
pop
mov
int3
xor
subl
xor
push
mov
or
mul
adc
pop
popa
and
popa
dec
push
inc
scas
cmp
dec
jns
rcl
and
imul
fsubr
out
mov
and
and
jecxz
outsl
mov
dec
xlat
and
loope
mov
and
scas
dec
dec
sub
mov
mov
dec
cmc
pop
sub
mov
inc
pop
sub
and
jne
sub
xchg
dec
cmpsb
lea
and
push
out
and
cwtl
mov
add
push
adc
and
lea
xor
xchg
lds
rcll
cmp
sgdtl
add
add
or
jbe
xchg
outsl
inc
orb
mov
add
jb
cwtl
fstl
ret
ljmp
sbb
xchg
stc
jae
fisttpll
sti
xchg
insb
jnp
data16
push
fisubrs
pop
cmp
pop
sub
add
lcall
in
int3
sub
dec
lret
xchg
or
jb
adc
inc
mov
lock
and
jns
dec
xlat
daa
repz
cmp
out
shlb
test
or
sar
je
lret
push
add
lcall
sub
nop
mov
adc
pushf
lcall
jb
clc
sbb
inc
dec
sbb
cmp
pop
clc
xchg
in
ja
adc
and
repz
gs
mov
fsubrl
pop
mov
aad
or
sbb
lods
repz
daa
and
sbbl
mov
test
leave
daa
repnz
fdivr
cmp
dec
cmp
and
and
dec
dec
mov
add
cli
inc
jg
int
xchg
lods
or
icebp
jbe
aam
add
add
add
ljmp
and
out
push
sbb
jb
loopne
hlt
sub
scas
and
push
inc
notb
xchg
xor
xchg
out
sti
shrb
mov
shrl
insl
lods
into
jb
arpl
enter
rcrl
dec
jmp
jl
sbb
mov
mov
shll
cld
daa
push
ret
inc
push
ret
mov
cmp
subb
rcrb
ficomps
lock
lods
pop
inc
sub
repz
cmovne
xchg
outsl
inc
mov
arpl
adc
fs
pop
add
push
mov
add
pop
adc
sub
enter
iret
mov
lock
enter
inc
sahf
test
cmc
jl
cwtl
lahf
jno
sbb
lods
sbb
cli
xor
push
les
adc
sbb
xor
mov
std
iret
or
int
sub
into
mov
adc
bound
incb
add
add
xchg
std
cmp
jle
fistpll
fidivrl
shrl
add
add
fldcw
cmp
jl
push
test
lret
rclb
inc
pop
mov
push
inc
fistpl
xchg
mov
mov
jge
outsl
mov
js
add
xorl
jne
inc
push
mov
xchg
mov
lock
pop
push
xchg
cmp
mov
repz
andl
stos
jo
xor
sbb
std
insl
das
pop
sbb
adc
sbbl
rcl
xchg
ret
xchg
jl
scas
addl
aaa
mov
sbb
push
mov
add
mov
popa
pop
jae
lods
pushl
out
xchg
add
incl
repnz
lds
imul
dec
mov
xor
mov
mov
in
lock
dec
cmp
sbb
mov
cmpsl
imul
jo
fstl
sbbl
add
add
iret
xlat
ficompl
inc
pop
pop
orb
add
add
add
cs
ret
pop
mov
loopne
jb
shlb
into
jl
pusha
scas
test
jge
mov
jl
shlb
xchg
addb
or
pop
cmpsb
push
adc
arpl
call
stos
je
outsl
mov
jg
pop
fldcw
mov
in
fisubrs
sub
mov
loopne
add
cmpsb
xor
in
sbb
xchg
scas
pop
sbb
repnz
hlt
inc
sbb
or
sub
int
daa
repz
lret
mov
xor
mov
rcrb
cmp
outsb
andb
in
xor
or
mov
fstps
sub
fmulp
fbstp
outsb
cmpsl
push
mov
outsb
xchg
mov
pop
push
add
cmc
insb
rcll
or
nop
lret
or
aaa
cmp
lds
sub
push
mov
lcall
push
inc
iret
rorb
adc
mov
dec
jmp
dec
scas
iret
outsb
jmp
push
test
call
add
add
add
cmp
pop
jne
das
pop
mov
iret
mov
dec
xor
stos
test
jne
aaa
cmpl
jmp
dec
dec
jmp
dec
into
out
mov
push
in
out
clc
mov
pop
and
dec
dec
jns
mov
cmp
pop
shlb
jns
pop
fdivs
data16
sub
call
cmp
mov
aas
call
pop
xor
out
pop
test
ret
jecxz
test
fcmovb
xchg
push
stc
out
lock
xor
mov
inc
add
lock
push
out
mov
loope
inc
repz
out
pop
sarl
pop
add
addr16
fbstp
cmp
and
test
dec
pop
fdivr
daa
mov
fwait
lock
dec
out
adc
push
xor
jo
add
hlt
sbb
and
jne
cmp
lret
or
add
add
std
sbb
stc
cld
or
mov
pop
or
adc
add
add
pop
outsb
insl
cld
mov
cmpsl
push
xchg
test
jg
push
sub
dec
fadd
lods
xor
add
xchg
out
fnstenv
adc
bound
leave
sbb
test
loope
mov
push
test
lock
ret
inc
mov
push
mov
mov
xor
popa
mov
aaa
fidivl
jmp
mov
lret
imul
or
adc
mov
lcall
sub
cli
jmp
hlt
popa
daa
push
push
or
mov
je
inc
sub
es
push
vxorps
stc
daa
inc
outsl
lret
lcall
ds
and
movsl
pop
or
cmp
fnstenv
lahf
lahf
adc
xchg
pop
cmpb
mov
push
mov
cmp
adc
or
enter
dec
jl
in
movsl
mov
negl
adc
pop
xchg
cmpsb
mov
add
add
add
ljmp
std
ss
loope
imul
es
cli
ficoms
cld
mov
stc
dec
dec
loope
jmp
cmpl
and
adc
call
in
add
fidivl
jb
push
or
mov
lret
ds
push
dec
cmpsb
imul
cmp
in
call
lock
movsl
imul
iret
xchg
and
mov
pop
sbb
cltd
cmp
daa
xchg
inc
lret
mov
movsb
or
dec
jecxz
jg
roll
sub
addr16
ss
lds
adc
pop
xor
push
lods
pusha
pop
rclb
push
shrl
mov
jl
sahf
mov
mov
cmp
ja
jmp
into
jno
adc
pop
jo
das
in
in
xchg
mov
aas
and
dec
or
or
mov
loop
xor
jle
add
add
dec
pushl
ss
jge
push
add
add
add
notb
xor
adc
jecxz
lret
xor
ja
cli
je
in
iret
push
aam
xor
js
cmp
sub
xor
xor
in
inc
sbb
inc
ss
je
stc
adc
shl
pop
adc
cwtl
lock
test
insb
push
jge
and
dec
pop
sub
xchg
jns
fdiv
add
dec
daa
push
jle
dec
and
lret
out
dec
scas
cli
xchg
cmpsb
xchg
ss
push
dec
sub
fsub
dec
push
cmc
jp
mov
mov
cmpsb
lret
ljmp
pop
push
add
adc
mov
jp
xlat
jne
mov
dec
push
or
stc
fistpl
repz
fcmove
sbb
add
jnp
xor
loopne
fxch
mov
and
xchg
inc
loop
lcall
rol
xor
dec
xchg
dec
xchg
xor
pop
sub
inc
ja
pop
aas
dec
push
shl
lock
add
add
add
push
movsb
and
fsubp
pop
mov
lea
mov
mov
stos
ss
loop
jae
and
or
jb
adc
jne
and
mov
cwtl
sub
jge
ss
dec
clc
rcll
ud0
inc
cmp
mov
xor
stos
rcrl
mov
sub
and
iret
mov
arpl
cltd
xor
jbe
mov
jae
shll
inc
add
lds
xchg
fmull
arpl
jbe
jl
jns
and
jge
push
ja
arpl
pop
gs
sbb
adc
xchg
xor
push
xor
add
pop
popf
xor
pop
dec
fildll
jne
mov
cmp
repz
xchg
dec
notb
add
push
push
inc
outsb
pop
dec
push
cmpb
cmp
ret
ss
mov
sub
out
add
lock
add
push
gs
or
repz
jae
ja
div
mov
aam
xchg
hlt
sbb
add
add
loopne
in
repnz
iret
shrb
or
add
xchg
push
shr
cmova
lods
lret
push
xchg
fsubl
fwait
pushf
cltd
mov
roll
cmp
shll
ret
xor
cmpl
mov
dec
testb
jle
imul
nop
mov
cmp
test
loop
add
cmp
sbb
push
shrl
cmp
stos
insl
cld
lcall
movsl
jae
jmp
inc
cli
adc
xchg
sbb
in
mov
into
or
inc
out
dec
mov
dec
dec
cmp
add
xchg
cmp
cmpsl
cmpsb
lds
adc
or
jno
or
cs
lcall
cmc
andb
pop
xchg
cmp
ljmp
xchg
push
insb
roll
and
xchg
add
xchg
orl
adc
xor
cli
std
jg
push
pushf
dec
inc
mov
add
add
add
es
or
scas
sti
mov
jle
ds
and
cs
andb
mov
enter
lods
mov
dec
andl
addb
push
jns
cmp
sbb
fcmovne
sbb
cmp
add
inc
adc
push
je
inc
cmp
mov
jo
nop
add
mov
push
fcomi
xchg
fwait
sub
push
xchg
jge
fwait
add
mov
je
push
xor
out
sub
xor
mov
jp
shll
pop
loopne
xor
and
add
mov
push
enter
aad
cli
mov
mov
sbb
inc
push
sbb
jecxz
cmp
jp
pushf
je
xchg
movsb
fstpt
repnz
int
pop
notb
xorl
cwtl
mov
dec
pushw
loop
or
loop
mov
aam
mov
dec
add
scas
iret
lcall
push
pop
push
xor
testl
incl
sbb
xor
sbb
add
add
add
adc
jle
sub
repnz
sub
fidivrs
pop
xor
cmp
push
fnstsw
jl
insb
loope
push
pop
xor
cmp
ja
mov
fidivrs
jb
pop
je
addl
out
mov
or
aaa
jb
jae
sub
xchg
orl
mov
inc
aas
cmpsl
jg
jae
adc
cmp
dec
sbb
sub
mov
ja
imul
and
fcmovnbe
ret
xchg
jnp
cmpsb
pop
in
push
js
subl
ds
daa
cwtl
xchg
and
pop
enter
pop
scas
sub
mov
cmp
repnz
aam
test
cli
pop
dec
xchg
mov
daa
sub
lcall
push
mov
xor
js
sub
ret
jnp
leave
orl
inc
test
jo
outsl
fmul
cmp
gs
les
add
add
es
jg
pop
or
xor
icebp
stc
add
add
add
push
xchg
in
mov
jbe
xchg
das
push
aam
js
int3
sub
push
ja
in
mov
mov
dec
les
cmp
out
ja
jmp
pop
mov
push
sbb
in
js
jge
mov
mov
in
stc
leave
adc
fistps
xchg
mov
movsb
insl
xor
test
mov
arpl
dec
daa
pop
iret
ret
lock
cltd
rolb
jno
sbb
xchg
or
or
pop
enter
fisttpll
cmpsb
dec
mov
in
rcrb
xlat
lret
lret
movsl
xchg
imul
jbe
je
jns
and
xchg
ret
jge
sbb
push
sub
sar
int
jns
sbbl
gs
xor
jl
xchg
aaa
mov
out
adc
fimull
cmc
dec
test
loop
mov
in
cmc
mov
mov
insl
add
stos
lsl
pop
aam
mov
push
clc
or
dec
push
cmp
sbb
add
push
xchg
call
push
xlat
push
adc
pop
and
sbb
and
pop
adc
dec
cwtl
in
jg
xor
test
sbb
and
test
jb
adc
aas
pop
push
mov
adc
sub
je
lods
ret
in
jne
inc
dec
pop
dec
cmp
sbb
adc
mov
and
adc
insl
les
das
push
sub
sahf
sbb
cmpsb
mull
inc
push
jb
movsl
adc
pop
lret
mov
sbb
and
sub
stos
lcall
fistps
mov
movsb
xchg
mov
add
push
xor
xchg
fildl
and
movb
push
imul
mov
push
jecxz
fsubl
out
nop
test
jno
fucom
fsubl
push
ret
adc
in
lcall
xor
mov
adc
or
add
add
add
ret
stc
gs
sub
loope
and
mov
sahf
repz
jg
jne
mov
mov
cmpsl
ja
cld
mov
addr16
mov
lea
ret
dec
je
call
test
dec
fildll
loop
sbb
adc
mov
stos
fwait
ds
dec
stos
jns
stc
xlat
cmp
pop
arpl
add
cli
enter
fs
mov
adc
mov
gs
xlat
dec
cmpsl
mov
push
rorl
push
fldl
adc
pop
mov
bound
jmp
lahf
fsubr
and
mov
movsl
mov
nop
pop
push
aaa
orl
clc
fisttpl
adc
movsl
pusha
lods
mov
shrb
fcmovne
mov
les
test
and
clc
pop
push
ljmp
lods
int3
cmp
pop
ret
mov
add
add
ficoms
stos
sbb
call
mov
or
add
add
add
sbb
mov
out
jle
andb
ss
cwtl
jne
dec
jecxz
adc
push
pop
mov
push
jl
notl
repz
fistpll
cmpsl
dec
jle
movsl
mov
mov
sbb
out
inc
push
loope
pop
or
pop
xor
xlat
jnp
cmc
xor
outsb
cwtl
mov
push
pop
mov
fsin
mov
xchg
jge
mov
push
push
out
adc
add
adc
adc
fwait
jne
cmp
daa
shr
shrl
xor
into
add
addr16
cmp
xor
xor
sbb
mov
sub
fs
push
cmp
xchg
sub
xor
stos
jmp
jmp
sub
push
mov
sahf
int3
adc
xor
call
sbb
mov
ret
sti
outsb
and
xor
mov
mov
out
stos
jge
or
and
add
add
pop
lock
mov
push
fmuls
rcll
inc
adc
loop
xchg
test
push
mov
mov
jg
jg
stos
jle
mov
daa
lods
cmp
xor
add
push
cmp
fwait
sahf
pop
jns
seta
push
int3
sub
xchg
jo
and
add
lods
lcall
add
pop
test
decl
adc
das
movsl
sbb
aad
xchg
xchg
or
lods
xchg
push
mov
adc
loop
add
add
mov
xchg
out
xchg
dec
xor
jg
sbb
adc
inc
jne
int
lcall
or
in
aaa
mov
or
or
mov
jnp
cld
jle
mov
arpl
in
mov
push
aaa
xchg
lods
out
mov
sbb
sbbb
dec
or
out
xchg
iret
push
aas
sub
xchg
and
add
add
add
push
xor
push
out
xchg
dec
and
pop
aad
test
mov
cwtl
fisubrl
arpl
push
pusha
xchg
pop
movsb
std
pop
lret
xor
push
xchg
ret
jne
addl
sub
in
adc
daa
mov
mov
xor
pop
mov
lcall
push
pop
or
in
imul
lcall
sub
and
or
xor
or
fimuls
scas
lret
cmpsl
aaa
dec
cmp
mov
sbb
push
lds
and
fwait
push
mov
mov
decb
gs
repz
hlt
mov
cmpsb
jo
fldt
mov
pusha
iret
das
mov
mov
aaa
cli
xchg
sarb
xchg
jecxz
jp
xlat
push
jmp
leave
fistps
notb
sbb
dec
in
arpl
dec
push
inc
aam
add
cmp
out
loope
jns
inc
mov
add
add
daa
in
push
in
out
je
lods
pop
jmp
in
jl
shl
aam
add
dec
pop
lods
or
pop
or
push
aas
lret
mov
js
out
pop
pop
sbb
rcr
mov
push
out
sbb
repnz
inc
cmp
daa
jo
gs
jge
shll
lret
adc
jg
pop
and
xchg
mov
testb
push
or
idivl
stc
lds
pop
cmpsl
ljmp
fisubl
or
es
sbb
push
adc
test
push
jecxz
xchg
fs
sub
mov
xchg
sbb
ret
add
push
cmp
cwtl
ljmp
sub
xchg
aaa
push
mov
pop
mov
push
js
cltd
xchg
mov
loope
lcall
addr16
rcrl
add
add
lods
jg
push
mov
push
and
add
add
mov
das
add
dec
out
inc
add
repnz
push
adc
add
xchg
xorl
push
jl
shrb
daa
cmp
mov
mov
and
sub
push
mov
rorl
and
out
xor
mov
call
movsl
mov
repz
aaa
divb
cmp
loope
pop
pop
push
test
add
pop
stos
sub
sub
sbb
mov
hlt
mov
sbb
int3
jl
stos
or
dec
rcrl
jp
enter
add
aas
sub
inc
lock
push
adcb
movsb
inc
cwtl
jmp
filds
xchg
mov
fsts
mov
xorb
scas
and
outsb
lahf
out
push
fisubl
push
bound
xchg
pop
xlat
movsb
mov
dec
idivl
cld
ret
add
mov
add
add
add
or
add
sub
cwtl
adc
fstps
je
and
push
pop
daa
jp
jl
std
jp
out
mov
es
pop
xchg
mov
mov
mov
aaa
icebp
add
rolb
je
mov
insb
and
sub
rclb
gs
fwait
mov
cmp
shl
mul
repz
sar
mov
out
and
xchg
or
cmp
out
lret
push
jmp
stc
sub
iret
xchg
cmp
inc
in
dec
ja
arpl
mov
cmc
xor
cmp
ret
sub
mov
xchg
roll
lods
arpl
lods
jnp
movsb
dec
pop
out
lret
mov
addr16
fsts
jno
in
xchg
cmp
out
rorl
mov
lcall
sbb
ret
mov
iret
mov
adc
mov
and
add
add
add
imul
dec
mov
dec
rclb
mov
popf
out
adcl
jle
lds
aas
divb
cmpl
shl
outsl
mov
xor
adc
sbb
gs
inc
test
loope
inc
stos
push
cmpsl
and
out
je
cmp
xor
popa
jbe
addr16
and
adc
jl
jnp
jle
or
outsb
xor
dec
in
cmpsb
xor
leave
xchg
movsb
add
mov
ja
test
mov
call
sub
imul
or
jnp
xchg
sbbb
mov
sub
xchg
dec
nop
xor
xchg
jecxz
dec
call
mov
cmc
ds
imul
inc
popa
push
mov
sbb
rolb
mov
xorb
xchg
imul
aam
aaa
js
outsl
cmp
daa
xchg
mov
xor
mov
or
jg
arpl
push
adc
sub
add
add
add
fs
mov
cmc
cwtl
xchg
push
imul
xor
push
and
add
das
int
sahf
int
xchg
cmovbe
sub
je
jo
shr
cld
jne
outsb
pop
jge
cmpl
in
and
xor
rcl
dec
inc
mov
lahf
pop
sti
fidivrs
ss
dec
cmp
pop
and
dec
and
cli
daa
imul
sub
pushf
adc
sbb
std
add
std
sbb
pop
nop
and
daa
loopne
push
add
ljmp
loop
mov
rorb
cmp
dec
mov
mov
adc
sbb
xor
loop
or
mov
xor
mov
rclb
mov
push
popf
sahf
mov
int
cmpsb
lock
mov
push
push
xchg
inc
fimull
lock
mov
mov
negl
shlb
cli
clc
cli
clc
sarb
sti
mov
xchg
arpl
add
add
add
bound
jnp
lret
xchg
insl
fidivrs
pop
dec
rcrl
push
sub
in
or
sbb
loopne
nop
push
outsb
or
xchg
push
mov
mov
mov
inc
imul
inc
adc
js
insl
and
sbb
xchg
popf
pop
jmp
or
bound
sbb
jg
pop
dec
and
leave
inc
xchg
xor
inc
mov
add
sub
ja
cmpsb
mov
sub
out
decl
dec
push
inc
xor
mov
push
out
cmpsl
xchg
icebp
dec
sub
xchg
pop
mov
mov
add
xchg
mov
cwtl
sbb
jne
jmp
movsb
je
cmc
mov
jge
in
push
mov
mov
mov
pop
dec
das
or
dec
push
xchg
pop
adc
pop
shll
xchg
xrelease
sar
mov
outsb
divb
add
test
imul
mov
cmp
add
add
es
scas
sub
pop
inc
push
sbb
mov
sub
cmp
addr16
mov
stos
xor
jp
imulb
jne
pop
ror
cmp
mov
push
fsubrs
mov
fldenv
notl
cmpsl
or
daa
imul
dec
add
sbb
or
jle
and
mov
dec
mov
imul
pop
loopne
jp
daa
mov
xor
imul
in
in
mov
and
push
pop
mov
stc
pop
xchg
jo
lods
sub
test
inc
add
and
mov
or
addr16
iret
pop
mov
pop
addl
insb
cmp
jmp
xchg
unpckhps
or
jg
push
imul
cmpsb
pop
lret
rol
jnp
inc
mov
fs
es
data16
insb
daa
mov
jmp
push
xchg
xor
add
add
add
daa
lahf
inc
negl
lods
add
stos
ja
xchg
mov
push
mov
xor
cmpl
mov
call
pop
pop
push
loope
mov
pop
mov
mov
sub
cld
test
add
xchg
jmp
filds
and
mov
push
mov
pop
mov
pop
xchg
add
add
lds
dec
adc
je
sub
dec
jg
insl
mov
idivb
sbb
jl
or
xchg
xor
and
pop
inc
lods
bound
cmp
mov
sti
mov
mov
inc
outsl
imul
xchg
cltd
inc
inc
and
jno
pminsw
xchg
xchg
ss
sti
fisttps
mov
scas
out
ja
sbb
movsb
bound
add
dec
mov
ljmp
cld
push
jge
push
and
lds
std
clc
mov
fldcw
add
movsb
cmp
add
add
add
insl
cmp
idivb
outsb
in
mov
addb
jg
push
les
lods
test
ret
xor
jl
ret
jns
out
push
mov
cld
cmpsl
xlat
mov
out
xchg
fsubs
enter
pop
scas
ret
std
gs
jge
adc
and
mov
push
add
push
in
pop
inc
mov
push
movsl
dec
pop
jb
inc
les
adc
mov
dec
pop
push
or
mov
int3
jge
icebp
push
jb
out
adc
or
or
fldl
cmp
cmc
jns
sbb
adc
popf
cmpsb
add
add
dec
es
stos
lret
shlb
ds
enter
mov
jne
fwait
push
push
or
and
lds
or
les
fisttpl
mov
js
mov
movsl
int
jl
sub
xchg
add
add
and
push
sti
cmpsl
enter
pusha
insl
in
cmp
add
add
add
fwait
sbb
popa
sti
bound
sub
inc
jmp
loope
inc
cmp
sbb
mov
in
pop
enter
icebp
js
and
jle
adc
xchg
repnz
fsubr
stc
sub
aam
lcall
scas
pop
sbb
in
cmpsl
jmp
sbb
imul
pop
es
aas
mov
mov
loopnew
popa
fsubl
aas
repz
scas
and
lods
xor
push
pop
shlb
cmp
push
ret
hlt
fwait
cmova
sbbl
divl
push
push
mov
jecxz
inc
scas
sbb
pop
add
pinsrw
jg
jnp
push
scas
nop
adc
jae
ror
adc
psubsw
cli
repz
rcrl
aam
adc
lods
mov
loope
shlb
test
adc
sub
mov
cld
add
in
out
stc
ds
lods
cmc
stos
mov
sbb
sbb
xor
push
imul
add
mov
std
mov
dec
push
dec
push
mov
add
add
mov
mov
ja
sub
test
insl
cmp
adc
push
lods
fwait
push
jno
cld
mov
pushf
scas
jmp
scas
or
push
push
pop
pop
push
popf
or
xor
leave
mov
mov
adc
ret
into
and
jle
out
jl
in
inc
and
inc
cmp
or
adc
sbb
daa
mov
xor
mov
mov
add
rolb
inc
arpl
insb
xchg
jb
decb
js
popa
movsl
lods
mov
loop
sbb
and
scas
mov
pop
fsubl
sbb
out
daa
xor
xor
push
cltd
ljmp
sub
lds
scas
cmp
shll
adc
shrb
push
stos
shll
jmp
mov
jg
xchg
daa
repnz
sbb
and
add
lds
xchg
and
inc
and
lcall
add
add
add
mov
ja
dec
mov
ficoms
jg
sub
jl
loope
adc
cld
cmp
jmp
mov
xor
inc
push
mov
pop
or
popa
inc
lahf
and
inc
inc
jmp
sub
and
sub
dec
popa
mov
movsb
push
sarb
aad
fistps
and
push
shlb
in
aas
fsubr
pop
cld
out
and
in
enter
mov
jae
push
and
sbb
xor
inc
jo
popa
mov
cltd
fldenv
imul
outsb
orb
or
leave
pop
xchg
shrl
cmpsb
and
pop
lret
or
adc
add
adc
cmc
jle
pop
cltd
mov
cmp
push
fisubrl
in
and
mov
test
divb
cld
mov
mov
cmpb
fiaddl
ret
ficomps
cmp
lahf
mov
dec
dec
add
add
add
and
cmp
adc
fidivs
pop
fdivs
cmp
mov
addr16
jg
cmp
imul
cmp
test
jmp
loop
mov
imull
insb
or
and
inc
sub
mov
jg
jl
sbb
js
cld
pop
cmp
leave
rcll
popa
add
xchg
cmpsl
in
cli
push
push
fwait
test
gs
add
fcomp
mov
mov
daa
andb
cmp
arpl
jno
xchg
dec
pushf
sbb
push
adc
dec
mov
cmp
cmp
les
jecxz
push
inc
sub
adc
xchg
fbld
les
push
sbb
sub
xorl
outsl
mov
je
push
leave
loopne
inc
outsb
imul
push
js
imul
les
mov
aas
dec
in
sub
add
add
lods
xor
mov
cmp
xchg
imul
add
add
pop
and
push
int3
xlat
incb
scas
adc
fisubrl
scas
sub
and
mov
mov
push
cli
mov
mov
push
mov
aad
push
loopne
pop
xor
insb
add
rclb
sub
out
fists
pop
js
aam
call
cli
sub
sub
xchg
in
cwtl
jnp
icebp
mov
mov
div
push
ljmp
adc
mov
stos
xlat
je
dec
lcall
cwtl
incb
or
xor
fwait
cli
and
inc
pusha
or
xchg
sub
jns
das
pop
adc
dec
inc
mov
pop
add
inc
cmp
mov
xor
lret
icebp
imull
ficompl
outsl
mov
xor
xchg
jle
fs
pop
lods
arpl
sub
sub
shll
add
add
lret
mov
or
out
cmp
add
add
xchg
jnp
sbb
push
dec
push
and
std
inc
lods
and
push
pop
std
adc
dec
mov
out
aas
mov
out
cltd
divb
gs
aam
nop
sbb
out
fbstp
incb
psubd
or
sbb
mov
and
scas
adc
and
sbb
cmp
test
sar
mov
in
add
cmp
fdivrp
flds
jbe
repz
mov
xchg
call
loopne
push
mov
mov
sub
xchg
fwait
inc
or
and
pop
pop
ja
jae
lods
mov
call
mov
inc
jl
ficompl
pop
cmp
push
push
xor
cmc
lea
adc
out
push
test
mov
pop
jge
cmp
cmp
xchg
push
or
xchg
mov
cwtl
jge
mov
mov
sbb
add
sti
pop
jge
neg
hlt
add
inc
push
xor
add
add
dec
push
pop
stc
das
dec
mov
cmc
ror
ret
test
scas
lea
mov
mov
sbb
rorl
mov
mov
imul
xchg
mov
out
sub
rcr
pop
or
cmp
push
cmp
popa
gs
hlt
rorl
jmp
imul
fs
push
push
jns
pop
js
dec
in
cmp
dec
add
push
fildll
xchg
fidivrs
push
dec
xor
stos
xor
xchg
xchg
xchg
mov
imul
or
adc
push
insl
cmp
inc
int3
in
fwait
mov
pop
pop
mov
je
jo
mov
aad
push
aam
xchg
cmp
mov
sti
fcoml
fwait
es
cmpsb
inc
gs
inc
mov
cmp
jnp
mov
loopne
xor
das
sub
pusha
cltd
fsub
std
in
popf
in
stc
jmp
repz
in
xor
add
add
jnp
dec
negb
xor
cmp
adc
ja
cmp
out
sub
or
lock
dec
fs
clc
lahf
dec
mov
add
or
lret
mov
sub
outsb
jl
adc
mov
inc
outsl
push
shll
inc
test
sub
sbb
pop
cltd
and
test
daa
cmpsb
mov
fadds
filds
push
xor
fcom
sbb
lret
push
jge
inc
jne
sbb
insl
add
adc
mov
fistpl
arpl
inc
sub
ret
xor
enter
pop
ret
mov
and
ret
fstps
xchg
pop
out
sub
or
movsl
cmp
ror
pop
data16
pusha
aaa
fsubl
xor
mov
push
jmp
repz
pop
out
rcrb
fs
xor
sbb
xchg
pusha
mull
add
jp
jnp
sti
xchg
jle
jp
lods
adc
cmp
add
add
outsl
rcl
mov
push
test
add
xchg
jmp
lahf
and
inc
scas
jne
int3
pop
sahf
inc
jns
rcll
jns
out
and
push
mov
es
aaa
out
or
xchg
xor
jnp
ror
popf
outsl
inc
xor
mov
lret
adc
roll
or
inc
mov
divb
dec
or
in
inc
cmc
push
push
mov
sub
fcmovne
push
adcl
popf
jae
scas
adc
adc
dec
mov
push
loopne
bound
xlat
dec
cmpl
mov
push
push
call
fs
daa
jp
idivb
mov
repz
gs
arpl
add
pusha
inc
sub
inc
jecxz
das
push
mov
sub
push
loope
xchg
push
mov
enter
fs
andb
inc
xchg
cmpb
in
dec
cmp
mov
push
sti
decb
mov
add
add
add
add
xchg
ds
mov
sub
mov
ret
sub
xchg
dec
sub
in
push
loop
jp
insb
dec
push
mov
mov
subb
or
push
or
and
xorb
sahf
lahf
je
and
cwtl
lods
out
mov
out
add
push
in
mov
stc
push
jno
sub
xor
jne
fst
or
jae
stos
arpl
push
push
hlt
mov
sbb
popf
adc
jmp
inc
push
daa
add
xchg
dec
mov
mov
dec
repz
add
fs
jle
in
addr16
aas
out
push
popf
dec
or
sbb
and
cli
sti
xchg
sbb
jmp
jp
mov
mov
subb
pop
fists
mov
push
inc
xlat
loope
xchg
cmp
push
pop
aaa
insb
push
and
sbb
mov
jns
pop
mov
push
ret
cmp
xor
hlt
jge
sub
add
add
les
jg
lock
xlat
into
jae
jle
std
xor
fistl
es
push
add
add
divl
push
adc
xchg
jb
push
test
test
push
out
pop
cmpsl
push
iret
cmp
adc
mov
inc
mov
ljmp
int
data16
xor
loope
sahf
aad
mov
mov
jmp
mov
movsl
stos
and
lock
insb
inc
pop
das
xchg
negl
daa
insb
jecxz
cli
fisubrl
mov
imul
mov
jg
ret
adc
jo
lret
loope
int
lds
mov
mov
add
pop
rorb
or
pop
xchg
jo
or
push
mov
sub
leave
and
lods
add
or
mov
outsl
mov
dec
mov
fnstcw
test
add
incb
ljmp
mov
add
add
add
lret
out
xor
mov
aad
out
lret
out
fcompl
sub
repnz
popf
and
leave
out
or
jnp
pop
jle
mov
xchg
push
imul
lret
or
xchg
sar
pop
iret
push
mov
mov
out
inc
pop
ja
jecxz
das
xor
mov
pushf
xor
lea
push
xchg
rclb
push
adc
mov
scas
data16
pushf
xor
fisttpll
jp
mov
mov
test
aaa
sub
jns
inc
out
jbe
push
sbb
xchg
fisubrs
test
mov
cwtl
stos
fildl
cmpb
push
out
hlt
lods
jns
in
sub
dec
cmp
add
stos
negl
adc
jbe
push
ja
xlat
dec
sbb
add
push
inc
mov
jp
mov
nop
fstpl
lcall
mov
cld
sarb
into
loop
inc
add
jmp
sbb
push
pushf
leave
shlb
jnp
cltd
test
pop
divb
rclb
nop
lcall
aaa
add
add
add
mov
inc
mov
sbb
push
cmpsl
outsb
jae
fs
mov
bswap
out
dec
seta
pop
ja
lea
xor
sub
imul
outsb
mov
sub
fimull
and
scas
xor
xchg
xchg
in
mov
out
inc
sbb
fs
mov
mov
xchg
sbb
leave
cmp
fcomi
inc
and
rclb
lea
pop
iret
lock
jo
mov
notb
mov
pop
fcom
int3
in
mov
fwait
xor
cmp
js
cmpsb
xchg
ret
and
gs
push
mov
pusha
int
adc
ljmp
push
cmp
push
mov
jge
cmp
inc
out
loopne
stos
int3
fdivrp
xchg
xchg
call
or
roll
std
fwait
gs
inc
cmp
imulb
shlb
imul
xchg
push
mov
mov
cmpsb
and
nop
mov
add
add
jbe
idivl
or
jecxz
sub
add
add
pop
fildl
pop
xchg
pop
or
mov
dec
adc
jmp
lret
dec
lods
les
movsb
cmpsb
out
jnp
lea
stos
cmp
sbb
incb
pop
into
mov
sbb
push
pop
dec
jb
lahf
in
test
pushf
add
fs
lret
stos
mov
loope
jp
or
jbe
cmp
test
mov
or
inc
and
push
add
dec
jmp
jmp
mov
sbb
push
jmp
push
pop
insb
or
pop
mov
orl
cmp
xorb
push
pop
xlat
ret
sub
clc
sbb
icebp
call
cmp
add
push
movsb
mov
pop
mov
ja
inc
rol
mov
mov
xchg
inc
ljmp
add
outsb
sub
stos
fs
jmp
leave
aas
pop
push
ss
je
add
add
add
jno
aas
lds
lods
push
and
les
outsb
mov
negb
rcrb
xchg
xor
or
movsb
mov
rcrb
or
aad
add
and
ret
fistps
insb
out
out
mov
inc
xchg
or
add
pop
les
shll
ret
fisubrs
int
lret
sarb
enter
rcll
movsl
xor
ret
cmp
lods
pop
cmp
ss
add
out
xchg
cmp
data16
mov
inc
push
or
mov
scas
add
loop
pop
push
jb
mov
gs
pushf
sub
or
and
mov
mov
push
imul
inc
rolb
push
movsb
xchg
add
rol
and
jmp
mov
mov
jle
or
pusha
mov
shlb
les
scas
fistpll
outsl
gs
outsl
jge
cmp
add
add
add
test
sub
cmc
pop
iret
mov
sarl
int
jge
mov
mov
in
jl
es
or
in
das
outsb
lds
pop
sbb
es
aas
aas
lock
pushf
inc
dec
pop
stos
ret
jae
cmpsb
push
pop
addl
lds
adc
mov
icebp
gs
lock
out
lods
dec
jge
xchg
dec
pop
jbe
push
sbb
adc
push
sbb
ljmp
cmp
jno
xchg
fldcw
loop
xor
cmpsl
xchg
mov
inc
mov
xchg
icebp
adc
xor
addr16
mov
fistpll
pop
jo
subb
in
mov
fwait
mov
lods
ss
xor
mov
or
shll
push
push
cli
loope
aam
cmp
pusha
or
out
and
add
add
cmp
movsb
push
sbb
cltd
test
jl
add
add
add
stos
mov
xchg
jns
in
std
sahf
mov
adcl
inc
sbb
push
adc
jle
jmp
jp
cmp
sahf
in
jecxz
movl
out
jle
or
loop
mov
cmp
add
stos
lds
fidivrl
movb
jne
push
jno
dec
mov
dec
dec
sub
adc
int
cmp
cmc
ds
jp
dec
pop
sbb
mov
xchg
or
sqrtps
push
cmp
addl
sbb
out
adc
jo
in
cltd
sbb
test
or
mov
stos
fstl
pop
sbb
in
xorl
xor
roll
insl
and
out
cwtl
jl
mov
xor
push
int3
icebp
jmp
leave
dec
mov
jg
add
in
mov
test
imul
in
es
in
adcl
incl
add
add
adc
jmp
subl
add
add
add
push
int
and
shlb
js
cmp
mov
sub
xchg
outsb
mov
lret
adc
in
dec
loope
add
pop
dec
push
adc
repz
push
daa
xchg
pop
cmp
cmp
sbb
jg
push
imul
into
sbb
mov
xor
lods
stos
frstor
and
pop
and
pop
mov
outsb
outsb
int3
push
xchg
fnstenv
jae
jge
bound
cmp
arpl
out
adc
popf
fldenv
es
mov
rolb
sti
adc
das
addb
stos
filds
in
dec
mov
adcl
test
mov
stos
testl
mov
push
inc
adc
sbb
xchg
aad
xchg
sbb
shlb
into
fwait
sahf
inc
cltd
dec
testb
fimull
fistpll
adc
and
das
cmp
lods
repz
mov
xorb
test
add
sbb
jnp
cltd
loop
sarl
push
inc
add
inc
sub
ss
and
int3
jg
and
mov
jnp
jbe
int3
test
or
shll
mov
icebp
jne
add
sbb
cmp
int
jg
inc
and
and
xor
sbb
or
fadd
mov
mov
pop
or
inc
icebp
and
sbb
pop
movsb
mov
cmc
sbb
push
sarb
xor
imul
jg
xor
imul
push
jne
out
and
stos
or
mov
arpl
pop
or
lcall
in
jecxz
mov
lcall
jae
lcall
push
ljmp
or
dec
or
mov
and
sub
xor
jno
gs
leave
dec
test
push
mov
add
sarl
aas
daa
push
cld
push
std
jmp
dec
push
out
jp
add
add
add
fsubl
xchg
into
jb
addr16
cmp
outsl
mov
rolb
icebp
ja
call
popf
mov
dec
inc
lea
inc
sub
push
cmp
jp
std
jae
movsl
sbb
sub
je
pop
loop
mov
and
cmp
xor
int3
ss
loopne,pt
lods
lret
popa
push
and
ret
outsl
scas
pop
insb
iret
pusha
jns
insb
inc
xchg
dec
js
cmc
icebp
out
inc
fisubrl
pushf
dec
and
cltd
adc
div
lods
mov
jno
out
shrb
cmp
xchg
dec
test
jecxz
pop
and
insb
ljmp
pushf
stos
dec
sbb
push
ret
repz
or
fwait
dec
rolb
sub
adc
pusha
bnd
pushf
scas
andl
mov
scas
daa
and
sbb
add
xchg
add
add
add
sbb
dec
push
out
aad
push
test
mov
add
add
add
fwait
mov
mov
jo
lods
inc
dec
movb
lahf
les
aad
mov
jl
push
jne
xor
pop
push
inc
mov
loop
ds
lods
mov
loope
lods
sahf
mov
push
xorb
xchg
adc
cmp
xor
pop
mov
mov
and
push
xchg
out
mov
cmp
adc
jmp
push
pop
inc
and
dec
push
fists
pop
or
orl
xchg
xor
fisubs
insl
xchg
mov
aaa
test
jp
enter
inc
out
adc
or
stos
lea
push
inc
dec
test
dec
in
jg
subb
les
clc
jg
sbb
lds
jg
aaa
dec
adc
jns
push
inc
or
addr16
xor
aad
testb
pop
sub
hlt
subb
ja
mov
sbb
out
sub
int
jge
in
inc
xchg
lea
stos
add
push
mov
or
push
dec
nop
inc
add
add
add
or
repnz
mov
popf
insb
xor
push
and
jae
jae
adc
js
lahf
push
out
dec
scas
jmp
stos
cwtl
add
jbe
add
aam
and
jle
sar
shll
ret
sbb
fildl
aad
mov
adc
call
xchg
jo
mov
jmp
and
nop
addb
jle
enter
mov
fwait
sbb
faddl
insb
dec
out
sub
jl
lods
outsb
popa
shrl
sbb
mov
sub
je
or
adc
mov
mov
adc
jno
cmp
cmp
int
sbb
mov
ret
cld
xchg
fst
mov
aad
cmpsb
sbb
icebp
mov
bts
rorl
mov
loopne
mov
sbb
sub
std
xchg
rclb
pop
lods
push
imul
add
mov
ja
jg
xchg
orl
adc
inc
add
add
add
filds
cmp
push
pop
push
movsl
fsubrp
sub
and
iret
xchg
cmpsl
xor
sub
in
mov
in
pop
sub
cltd
jmp
scas
dec
loop
js
clc
imul
adc
or
push
out
je
lcall
aad
xor
sbb
or
inc
bound
stc
rcrb
in
es
jp
inc
pop
cmp
or
test
popa
in
push
push
out
mov
mov
lcall
enter
mov
jmp
ljmp
adc
sbb
add
js
xor
mov
movsb
push
shll
mov
test
rorl
mov
jecxz
mov
pop
fidivrl
pop
into
adcb
jb
movsl
in
fwait
lods
pop
lret
mov
mov
cwtl
popf
push
dec
push
mov
insb
mov
pop
rcrb
add
push
dec
lret
jmp
imul
aaa
je
or
jno
inc
add
add
add
mov
jae
mov
xchg
mov
pop
ror
loop
inc
sti
cmp
nop
cmp
cwtl
int
jecxz
cmpsb
sbb
pop
or
push
les
inc
sub
fistpll
and
lahf
aad
imul
ss
lea
daa
mov
push
inc
adc
loopne
notb
mov
loop
movsb
in
fidivrs
cmp
jmp
xlat
push
push
jle
mov
in
add
or
or
xchg
aad
sbb
mov
sbb
pop
ret
pop
pop
pushf
inc
xor
add
jmp
lret
enter
xchg
adc
and
leave
mov
pop
int
pop
pop
dec
mov
sbb
cmpsl
push
push
mov
mov
jbe
pop
cmp
sbb
cmp
enter
lds
cmc
cwtl
xchg
push
sub
mov
pushf
inc
add
add
add
xorl
outsl
sbb
adc
hlt
lret
jno
adc
lret
bound
data16
adc
mov
or
cmp
outsl
xchg
jns
mov
cmc
addr16
test
movsl
cmp
mov
push
adc
mov
lea
cltd
pop
sarb
push
xchg
cmpsb
and
push
lods
mov
cli
insl
adc
xor
xor
sbb
dec
adc
repz
fstl
adc
das
nop
sbb
clc
xor
pop
push
outsb
or
jno
divl
stos
rolb
adc
or
cmc
das
pop
ds
jmp
xor
cs
adc
rcrl
mov
cli
and
cmc
cmpsb
pop
daa
cmp
cmp
cmp
imul
mov
adc
dec
pop
pop
and
outsb
sbb
mov
adc
adc
cltd
mov
xchg
lods
inc
movsb
aad
sub
jns
xor
jg
add
mov
add
add
lock
xor
mov
mov
nop
pop
jno
mov
lret
jo
dec
jns
cld
pushf
test
das
jmp
lods
xchg
push
dec
or
mov
inc
ret
push
subps
mov
or
xlat
xchg
shlb
outsl
cmp
pop
inc
mov
leave
daa
mov
push
movsl
imul
cmp
sbb
adc
mov
xor
into
test
stos
push
mov
faddl
add
lret
mov
adc
bound
push
sub
push
jne
adc
mov
mov
lret
inc
xchg
out
inc
mov
dec
cli
sub
les
scas
pop
cld
or
and
lea
and
xchg
int
sub
in
in
enter
mov
scas
rcl
popa
icebp
cltd
mov
jne
adc
adc
sar
ljmp
or
jbe
pop
js
ret
jg
decl
rol
dec
fidivrs
cltd
movsb
inc
add
add
add
in
mov
pusha
frstor
push
mov
cmp
lods
js
push
add
aam
jnp
pop
ljmp
dec
cmp
rclb
or
mov
jmp
sub
mov
push
push
repz
in
int3
cs
jae
or
sub
xchg
mov
rep
xor
add
in
xor
mov
pusha
or
hlt
andb
mov
repz
movsb
xchg
cmp
loopne
cmp
xchg
xorb
jle
sbb
loopne
test
bound
mov
xchg
adc
adc
lock
pop
fsts
lcall
mov
scas
lret
add
aas
fbld
daa
shr
cmp
idivb
xor
sub
dec
ds
jle
cmp
or
mov
cmp
push
and
add
gs
xchg
xchg
stc
mov
scas
ja
xor
add
adc
mov
out
aad
xor
add
add
add
dec
cmp
leave
es
in
sbb
pop
aas
std
test
cmc
mov
sbb
jle
repnz
sub
adc
dec
cmp
lock
sub
pop
push
or
test
add
test
add
imul
dec
jmp
xor
xor
lods
das
mov
mov
inc
mov
mov
mov
sti
cmpb
negb
lahf
pop
imulb
inc
insl
dec
mov
mov
stos
and
cmc
adc
mov
out
lock
loope
push
jge
mov
lea
push
add
adc
dec
outsl
cmp
daa
ja
stc
cltd
gs
sahf
out
mov
jno
shl
aam
xchg
jmp
lret
lods
pushf
dec
adc
movsb
adc
fisttps
test
lds
imul
cmp
idivb
pusha
push
inc
icebp
leave
dec
cmp
add
add
hlt
gs
dec
adc
hlt
add
inc
add
add
add
pushf
adc
jmp
cwtl
push
aaa
daa
mov
es
imul
andb
dec
push
mov
test
nop
cli
sbb
jg
jge
out
repnz
xor
inc
fsts
push
lcall
into
inc
loopne
repnz
popf
inc
xchg
scas
stos
popa
push
or
lock
mov
lcall
stc
in
out
jg
test
mov
popf
clc
jb
bound
xchg
mov
pushf
stos
dec
pop
test
xchg
pop
mov
in
fcmovnbe
jns
jmp
fcomps
pop
ljmp
jbe
daa
outsl
mov
leave
das
jbe
mov
rcll
pushf
aam
add
shll
adc
lea
cmp
stc
fsubs
add
lret
rorl
inc
loopne
nop
loop
pop
fs
and
loopne
sub
ja,pt
inc
nop
or
test
add
add
aas
gs
pop
repnz
dec
add
add
add
mov
sub
inc
scas
outsb
pop
out
xchg
dec
dec
mov
roll
ds
add
lods
jns
loopne
push
push
out
jbe
jnp
test
xor
cs
adc
and
mov
inc
rorb
pop
mov
jge
push
shlb
jge
xchg
in
jmp
push
push
int
lcall
inc
inc
mov
mov
daa
lcall
addl
fnstenv
lcall
mov
cmp
movsb
push
mov
pop
push
and
notl
dec
mov
jbe
shlb
imul
jl
in
icebp
sub
jae
test
std
mov
test
sub
or
jo
jns
fisubrl
mov
adc
vpshufd
nop
test
pop
mov
cmpb
imul
mov
pop
or
add
add
mov
out
fisttpll
lock
mov
add
add
popa
xchg
adc
call
sahf
cmc
out
les
push
ficoms
test
add
mov
mov
mov
icebp
or
pop
dec
test
mov
arpl
mov
mov
pop
cmp
test
out
cmpl
lcall
xlat
test
push
movsl
rclb
pop
insb
scas
and
es
adc
cmp
sbb
shlb
inc
jb
jns
lds
inc
imull
lahf
xchg
into
push
lcall
fmull
shlb
sub
lods
jae
or
clc
push
add
enter
adc
outsl
ret
and
jl
out
mov
pop
in
addl
je
and
push
gs
out
inc
mov
mov
fildll
mov
ljmp
add
add
add
lods
pop
invd
data16
ret
dec
jp
cs
fs
jo
pop
dec
or
jae
push
hlt
pusha
sub
sub
pop
adc
cmp
repnz
mov
enter
aam
addr16
xor
push
outsl
push
inc
repnz
pop
xchg
sahf
cmc
dec
xlat
dec
and
sub
outsb
add
les
fs
pop
jo
or
int3
mov
mov
or
enter
jnp
iret
in
jb
xchg
dec
dec
sub
push
sub
cvtpi2ps
push
pop
sub
dec
std
push
dec
pop
sbb
mov
add
bound
js
push
movsl
out
pop
jo
sub
fnstsw
xchg
xchg
daa
jb
jae
nop
into
pop
adc
xchg
mov
les
mov
andb
ret
cltd
cmpsl
mov
insl
loop
sahf
push
xlat
fsubl
cmpsb
mov
lods
and
jle
ss
in
in
rcll
or
scas
adc
cld
add
push
sbb
jmpw
fnstcw
jo
sahf
jb
lcall
add
add
xchg
into
insl
insb
fdivs
mov
insl
sub
or
rcrb
fisttpll
ret
subb
inc
xchg
stc
int3
cmpsb
add
ljmp
fdivr
mov
lret
filds
imul
insl
mov
mov
cwtl
dec
mov
and
in
je
pop
jg
outsb
lods
pop
cmp
cwtl
in
addr16
mov
pop
mov
push
into
sbb
dec
and
bound
fisubrl
push
sbb
mov
insl
mov
mov
out
xorb
dec
jne
dec
sbb
sbb
push
pop
xlat
pop
std
push
add
jp
test
jbe
fwait
cwtl
pop
cltd
fiadds
and
mov
mov
pop
add
cmp
pop
in
lods
jnp
jns
pop
frstor
mov
testl
fs
frstor
dec
fwait
lahf
mov
cmp
fnsave
fiaddl
add
add
imul
out
mov
mov
rorl
rorb
add
add
mov
dec
xchg
mov
dec
mov
movsl
loope
movsb
shlb
rorl
insl
repz
jg
scas
sbb
testl
mov
or
into
sahf
and
jecxz
and
xchg
insb
xor
cmp
ljmp
inc
loopne
fmull
jne
lahf
jmp
out
sahf
push
cmp
rcrl
or
mov
xchg
dec
das
int
dec
cwtl
sti
or
jle
fistl
jge
in
mulps
jl
rsm
ljmp
push
mov
dec
fsubs
nopl
pop
cli
int3
loope
fmuls
mov
mov
mov
out
jo
pop
or
mov
xor
inc
mov
mov
ss
push
mov
push
loope
rcrb
pop
stos
sahf
shl
mov
lret
divl
loopne
mov
add
add
add
dec
stc
mov
ljmp
les
add
add
lea
adc
test
add
ja
mov
mov
adc
sahf
pop
mov
enter
xor
mov
fdivr
out
aad
out
cmc
mov
insl
adc
jns
cmpsl
arpl
mov
ljmp
mov
mov
stos
enter
imul
mov
fidivl
je
loopne
dec
lahf
add
dec
inc
rorb
cmpsb
mov
add
lock
pop
and
pop
fs
enter
pop
out
dec
fwait
in
ficomps
shrl
imul
push
sbb
dec
hlt
dec
xchg
sub
add
or
fwait
lock
test
fwait
movsb
dec
repnz
movsl
mov
or
ret
push
aas
ljmp
mov
scas
ret
pop
lcall
add
pop
cmpsl
add
add
add
sbb
mov
outsl
subb
xchg
test
xchg
cmp
jle
jg
cld
lcall
push
enter
add
add
insl
les
adc
mov
or
mov
imul
fst
mov
clc
and
mov
hlt
inc
cmp
cld
test
jg
inc
ss
fsubs
push
cmpsl
cmp
add
sbb
in
lret
scas
gs
std
and
mov
loopne
mov
and
test
inc
cmp
in
cwtl
imul
or
adc
jae
sbb
dec
in
mov
icebp
cmp
fcmovnbe
xor
cmpsl
mov
je
fucomi
stc
or
jge
inc
cmp
stos
pop
dec
lods
sbb
xchg
push
pop
mov
test
lcall
push
adc
std
sahf
mov
loopne
mov
cmp
mov
jmp
sbbl
rcl
gs
scas
push
mov
mov
inc
in
mov
adc
xchg
fwait
mov
xchg
aaa
dec
sbb
add
add
xchg
mov
pop
daa
ja
int3
dec
add
add
add
push
hlt
in
movups
dec
dec
nopl
aad
xor
mov
fldenv
arpl
jo
sbb
leave
sub
mov
dec
lods
scas
cmp
cmp
sub
stos
dec
test
adc
xchg
cmp
mov
xchg
out
jp
jae
arpl
jle
or
call
lock
push
sub
aam
push
jno
sbb
sub
cs
jg
jmp
sub
int
lret
fildl
aaa
inc
shll
mov
jg
adc
push
ret
xchg
mov
xor
idivb
out
fcomps
push
and
jl
jae
divb
mov
sub
or
int3
xor
cmc
sub
ficoml
jg
inc
addr16
in
sub
test
jp
pop
sbb
dec
jns
filds
nop
xor
sub
xchg
or
mov
and
adc
rclb
add
add
mov
shlb
mov
fimull
stos
jno
addr16
clc
lret
add
jge
cltd
xchg
push
mov
lahf
cmpsl
gs
popa
and
fistl
mov
add
inc
fnsave
lock
pop
subl
cltd
hlt
jmp
sbb
stos
cli
mov
into
movb
in
pop
movsb
and
jge
jno
inc
mov
clc
jno
push
call
push
inc
arpl
adc
js
sub
and
notl
movsb
insl
dec
mov
dec
andl
jnp
xchg
dec
push
jns
mov
lcall
int3
sahf
rcrl
nop
and
orl
push
dec
pop
adc
cmp
mov
cltd
into
jno
and
stos
std
xchg
mov
data16
push
mov
mov
ja
stos
fsubrp
adc
movsb
sbb
xchg
xchg
test
add
add
sub
cmp
ret
or
inc
dec
dec
mov
add
add
icebp
test
pop
sbb
in
andb
mov
popf
cmp
xchg
mov
loope
xchg
sub
pushf
in
push
ss
stc
sub
mov
lods
jmp
mov
push
cmp
add
xchg
jo
dec
scas
mov
sbb
repnz
in
adc
mov
lock
ja
into
or
sbb
or
enter
cwtl
clc
addb
hlt
cmp
scas
in
jle
adcl
inc
fucomp
aam
cmpl
orl
mov
outsl
addr16
jmp
shll
xlat
das
add
mulb
cmp
mov
movb
mov
bound
imul
mov
jle
dec
cpuid
shlb
loope
imul
mov
jg
xor
sbb
dec
stos
sub
jo
loopne
sysexit
imul
out
cmpsb
xor
add
push
shll
out
pop
pop
pushf
push
xor
add
add
jnp
jno
dec
out
mov
sbb
lods
cltd
outsb
loop
jmp
in
fists
fs
adc
or
fcompl
jb
insb
pushf
movsb
in
and
ffreep
mov
lahf
dec
fsts
jle
scas
dec
loopne
mov
cmpsl
xchg
cmp
dec
ret
pop
or
sbb
cltd
mov
cmp
gs
ljmp
cmpsb
andl
lods
cmpsl
data16
sar
popf
jo
outsl
stos
xchg
xchg
les
fsubs
xchg
mov
mov
jecxz
enter
stos
or
jge
lds
in
inc
jle
arpl
nop
call
ljmp
ret
lods
repz
sub
in
je
movsl
push
dec
cmp
hlt
arpl
movsb
xor
pop
sbb
leave
jne
ljmp
outsb
push
jp
adc
jl
inc
les
lock
xor
out
pushf
ret
stos
push
lcall
hlt
mov
ret
fcoml
add
add
out
fdivl
jns
loop
sbb
cmc
loopne
xor
repz
lds
in
cwtl
inc
add
popa
out
jmp
dec
ret
mov
rorb
inc
push
out
xchg
clc
mov
xlat
xor
pusha
jne
sbb
sbb
cmp
dec
cmp
lods
sbb
outsb
or
jo
adcb
leave
push
sub
pop
popa
cs
dec
fstpt
cmpsb
ja
jl
push
or
or
dec
dec
test
adc
or
sub
scas
xor
ds
and
inc
and
iret
imul
call
insb
das
dec
xchg
add
mov
cmpsl
scas
insl
cld
or
popf
popf
jp
mov
mov
hlt
out
push
jp
sbb
lea
test
testb
adc
jmp
lds
jne
pop
push
out
dec
shll
sub
add
add
jbe
idiv
imul
add
and
add
add
outsl
insl
js
cli
dec
xor
repnz
jmp
es
jle,pn
pop
testl
adc
or
andl
pusha
mov
mov
stos
cmpsb
sub
mov
pop
push
insb
push
xchg
dec
insb
lods
push
stc
enter
adcl
add
sbbb
mov
or
dec
or
push
std
movd
popa
or
pop
and
in
jno
hlt
ret
fcomp
imul
mov
sti
lods
xlat
and
dec
repnz
lock
add
mov
mov
inc
ror
cmovp
inc
iret
push
mov
into
xor
inc
adc
ss
pusha
push
inc
stos
aas
mov
or
aas
push
sub
or
ja
lods
cld
cmp
ljmp
push
pop
pop
ret
jae
mov
cmc
test
test
scas
les
cmp
add
add
fwait
cmp
stos
sarb
in
add
add
add
imul
outsb
push
or
aad
mov
movsl
adcb
imul
ljmp
mov
outsl
and
push
out
jp
iret
sarb
mov
out
ds
ja
fdiv
stos
inc
adc
in
mov
clc
test
push
adc
fbstp
sahf
outsl
mov
loop
sub
sub
push
aam
loop
add
inc
dec
push
xchg
dec
mov
lods
sub
out
push
pop
xor
daa
dec
and
dec
pop
push
cmc
mov
out
dec
mov
mov
hlt
lahf
cmc
xor
nop
fistpl
push
inc
jecxz
inc
neg
shl
add
pop
sbb
cmp
out
cmp
bound
inc
cmpsl
dec
sbb
imul
xchg
fdivrl
or
mov
sar
leave
orl
cmp
dec
cli
and
cltd
sbb
negb
in
pop
cmp
sti
push
jle
jbe
clc
movsl
sub
inc
push
clc
mov
and
hlt
jg
inc
lret
add
add
add
jg
or
dec
lret
ret
adc
ds
xchg
mov
jbe
mov
mov
sub
ds
cmp
cmp
cwtl
mov
jmp
push
pop
pop
leave
ja
ljmp
pop
adc
or
cmp
fs
imull
sbb
pop
dec
ds
out
es
inc
cmp
push
test
outsb
jno
mov
lds
aam
insb
cmp
fwait
jns
out
adc
mov
cmp
daa
mov
jb
mov
test
cmp
fldt
cmc
adc
inc
mov
sbb
aam
nop
call
es
inc
std
call
mov
xchg
adc
mov
xchg
cld
cmp
call
gs
movsl
mov
inc
cmp
int
test
imul
out
outsb
pop
scas
xchg
push
adc
out
mov
mov
push
add
add
add
std
cmp
mov
mov
aad
in
sti
addr16
into
dec
mov
rcll
fs
xchg
sarb
sub
loop
pop
push
push
cwtl
fcoms
jl
cmp
sbb
int
pop
sub
shrb
jns
sub
jp
push
xor
mov
sbb
call
loopne
add
add
mov
and
repnz
lds
cmp
fs
imul
pop
sarl
lea
push
mov
nop
ljmp
iret
dec
push
adc
sarl
adc
adc
daa
loope
jbe
xchg
pop
cs
fxch
inc
adc
rorb
insl
leave
sub
cmp
neg
mov
xor
dec
lock
push
rcrl
cmp
adc
or
adc
and
inc
cmc
xchg
cmpsb
imul
outsb
test
push
ja
add
add
mov
lds
aad
mov
addr16
pop
add
add
add
pusha
sub
test
mov
dec
inc
xor
pop
xor
in
popf
mov
loope
insb
icebp
xchg
dec
jge
repz
push
push
out
cmpsb
test
ja
push
in
sbb
fadds
push
mov
mov
in
pop
pop
xorb
adc
pop
add
and
ljmp
mov
sub
or
loopne
repz
jb
imul
dec
lcall
mov
cld
mov
int
rcrl
mov
jp
pop
ficoms
in
shlb
xlat
clc
cmpsl
pop
pop
popf
and
mov
mov
push
mov
xor
push
pop
dec
rolb
lret
dec
fcompl
enter
lcall
push
push
je
and
jns
test
lret
mov
int3
outsl
sbb
jae
in
repnz
das
xchg
outsb
mov
dec
xchg
mov
das
add
add
add
mov
pusha
in
ss
test
add
add
pushf
lret
xor
push
ret
ret
inc
cli
jmp
fidivl
mov
jno
jae
mov
sbbb
int
shr
cmc
aam
sarl
mov
push
mov
xlat
mov
xchg
xchg
int
in
int3
ret
inc
test
dec
xor
dec
shlb
sub
repz
adc
mov
and
push
adcb
popf
fistps
jmp
sub
clc
inc
int3
jno
jmp
cwtl
in
mov
push
mov
adc
pushl
push
sahf
outsl
clc
jge
sbb
pop
rol
push
mov
dec
iret
cmpb
sti
repnz
cmp
je
popa
bound
fs
mov
and
mov
sbb
pop
inc
fistl
out
pop
notb
pop
lcall
pop
mov
lods
cltd
jg
popl
xchg
movsl
aas
clc
mov
fiadds
add
add
movsb
jae
jnp
mov
ja
mov
movsl
in
psubb
add
add
jg
imul
jle
lret
std
in
outsb
shll
push
fcompl
cld
cmp
insl
xchg
lods
adc
mov
jae
xchg
std
stos
enter
jnp
arpl
mov
fistpll
pslld
jmp
mov
and
mov
xchg
in
push
xor
aaa
lahf
lret
add
in
dec
cmpsl
and
fwait
aas
test
mov
mov
dec
sub
popf
mov
ja
outsl
out
xchg
sub
mov
jo
inc
out
and
or
pop
incl
add
pop
testl
mov
jl
sbb
xchg
cmp
nop
sub
icebp
dec
jle
add
arpl
mov
xlat
enter
inc
enter
mov
inc
stos
cmpsl
outsl
or
lods
jmp
and
mov
push
lea
xor
mov
adc
add
add
xor
xlat
out
cld
je
jg
cld
pop
add
add
add
aas
or
clc
ret
and
ret
push
jecxz
bound
mov
and
lret
rcll
insl
dec
test
int3
int3
xchg
test
inc
loope
imul
jno
dec
sti
mov
fisubrl
jbe
xchg
xchg
aaa
dec
jae
stos
shlb
fidivrs
adc
aad
inc
mov
int3
xor
adc
les
stos
and
add
inc
fnstsw
nop
add
mov
inc
jnp,pn
ds
pop
out
add
push
pop
xor
iret
cwtl
push
xor
push
cmc
mov
imul
pop
dec
and
fdivrp
movsl
push
ret
out
mov
add
int
push
mov
jmp
lahf
mov
sbb
sbb
mov
data16
scas
sub
cmp
dec
sahf
lock
sub
bound
test
aaa
loope
inc
inc
mov
add
add
mov
add
movsb
dec
ds
add
add
add
pop
shlb
in
fsubrs
hlt
mov
sub
loop
stos
mov
xchg
sbb
mov
ret
cwtl
ja
scas
stc
andl
xor
or
roll
mov
jge
inc
popa
adc
push
pop
xlat
arpl
enter
adc
stos
fisubl
movsb
std
jle
mov
fxrstor
cmpsl
jge
sti
inc
das
or
shr
jge
dec
pop
xchg
imul
addr16
sub
je
add
mov
mov
std
roll
fiadds
adc
pop
add
and
dec
sbb
inc
fimuls
rcll
mov
xor
mov
jle
pop
mov
xorb
sbb
mov
jge
lret
mov
xchg
loop
fwait
clc
cmp
xor
adc
jns
cltd
jle
aad
xchg
mov
jle
add
pop
in
lahf
into
popf
sbb
loop
out
into
push
push
inc
lahf
mov
add
add
add
add
out
and
arpl
and
cvtps2pd
push
lcall
or
pop
xlat
outsl
popa
loopne
popa
jns
outsl
push
cmp
icebp
subb
mov
jecxz
mov
leave
jae
movsl
pop
jp
repnz
mov
jecxz
test
mov
adc
mov
pop
mov
insl
jp
push
mov
addr16
pop
clc
popa
mov
mov
shrl
push
addr16
mov
pop
hlt
xchg
repnz
jbe
or
stos
mov
sbb
cmpsl
jg
inc
sub
push
and
xchg
push
jmp
in
in
xor
ret
or
mov
mov
lds
mov
mov
insb
mov
sbb
in
divb
sub
mov
stos
loop
add
add
xchg
inc
shl
xlat
mov
jg
or
or
add
add
push
shrb
mov
adc
mov
jno
mov
lcall
in
imul
adc
add
out
hlt
and
pop
dec
jle
push
in
mov
mov
lea
mov
pusha
pusha
insl
mov
xor
sti
dec
js
stc
lods
and
xchg
repnz
and
ja
sbb
scas
push
or
jecxz
ret
pop
sub
aaa
mov
scas
mov
mov
inc
inc
int
inc
lret
mov
xor
mov
inc
mov
jbe
fwait
ror
es
sub
jae
mov
aam
sub
adc
pop
and
call
nop
movsb
lret
shrl
push
and
push
ret
orb
outsl
sbb
enter
shrl
psadbw
xor
in
mov
dec
fildl
add
add
lahf
pop
cmpsl
jne
mov
repz
add
add
add
or
inc
int3
shl
xor
xlat
stos
xchg
jl
jbe
dec
mov
scas
das
sbb
dec
shlb
push
mov
add
pand
cmp
inc
imul
aaa
loope
icebp
add
ja
mov
mov
out
push
loope
dec
inc
pop
mov
sub
add
jns
xchg
adc
xlat
dec
mov
icebp
push
enter
pop
jno
push
mov
mov
mov
or
pop
mov
addl
jno
push
test
xor
xchg
bound
mov
cmp
xchg
xor
gs
mov
repnz
adc
cmc
lock
pop
xchg
inc
sub
test
push
loopne
sbb
push
xlat
inc
jg
out
in
adc
ret
sbb
fistpll
je
ret
push
aam
push
adc
xor
sahf
pop
testl
mov
adc
add
add
popa
outsb
cmp
shrb
mov
shlb
repnz
jne
sarb
outsb
fdivrl
popf
js
in
xorb
sbb
adc
cmp
sub
pop
pop
repnz
les
movsl
nop
popf
shlb
or
dec
push
adc
push
pop
inc
jbe
mov
jae
xchg
mov
lods
jg
adc
xlat
mov
add
dec
movsb
fstpl
mov
jno
popa
pop
adc
dec
xchg
test
push
sub
js
inc
xchg
ja
aad
push
das
sbb
fwait
popf
cli
leave
mov
mov
ss
out
jl
out
rcrb
mov
add
aam
ja
pop
jbe
aam
jae
mov
mov
mov
cmp
hlt
cmc
adc
icebp
test
outsl
lret
sbb
test
inc
insb
popf
inc
aaa
jne
lret
push
outsb
push
popl
arpl
jl
add
add
pop
mov
fstps
fs
bound
add
add
xchg
dec
push
and
inc
add
sub
mov
adc
fs
mov
hlt
lahf
and
cmpsl
cmpsl
xchg
repnz
add
pop
dec
fisttpll
sub
js
xor
cmc
lret
xorl
sub
ret
fsts
ja
jmp
int
mov
push
inc
shl
ret
int
faddl
js
scas
je
ss
sub
rcll
jns
mov
mov
and
rorl
lahf
adc
mov
dec
mov
mov
int3
in
inc
mov
mov
ret
test
inc
pop
fs
jb
sahf
icebp
lods
pushf
ss
push
jne
int3
add
inc
dec
lcall
sbb
aas
test
das
dec
pop
jae
sarb
pop
sti
out
scas
imul
cwtl
mov
cwtl
mov
arpl
cmp
xchg
int
pop
repnz
movsb
jle
arpl
pop
ret
add
add
add
mov
in
jge
repnz
mov
shlb
mov
mov
mov
data16
push
mov
push
in
mov
lds
aas
adc
mov
popf
dec
xchg
cmp
push
test
cmp
dec
mov
inc
mov
push
mov
test
jo
lret
add
push
pop
dec
out
mov
imul
clc
stc
fstl
jmp
call
jmp
push
addr16
mov
pop
sub
out
ret
fwait
sub
std
sahf
or
stos
xor
jno
in
icebp
inc
mov
xchg
xor
cmp
adc
jns
push
loope
cli
xor
shrb
lea
add
test
out
cmp
insl
cmp
clc
jecxz
fmull
test
xchg
adc
jge
icebp
sub
sub
xchg
ljmp
sbb
imul
insb
jp
aaa
pusha
adc
stos
sub
stos
out
jmp
sub
cli
push
lds
add
add
add
insb
mov
std
mov
add
fisttpll
jno
adc
cmp
xchg
bound
lret
ja
mov
das
or
call
leave
stos
loope
int3
dec
movsl
out
insl
das
out
movsb
dec
retw
mov
xor
cli
dec
in
dec
in
repnz
fsubs
enter
sbb
dec
sub
loop
jae
and
in
and
push
sbb
fldl
insb
mov
fsts
push
mov
xor
and
shll
testl
inc
jg
mov
adc
lds
fst
sbb
adc
rcl
lods
addr16
pop
stos
cmpl
jge
push
mov
sub
arpl
movsl
clc
xor
not
out
imul
or
xor
cmp
jecxz
icebp
mov
ret
pop
les
adc
or
sbb
loope
lds
cmp
sub
and
sbb
jo
push
jae
in
lahf
shll
fnstenv
test
add
add
xor
les
adc
jo
adc
mov
js
aaa
mov
pushl
loope
cwtl
xchg
and
jg
inc
sbb
push
das
mov
icebp
imul
and
mov
imul
cltd
jb
push
rclb
pop
aad
insb
mov
xchg
fimull
xlat
cmp
cmp
xchg
or
ljmp
hlt
sub
add
jno
jnp
out
sbbb
cld
cwtl
or
enter
xchg
xchg
mov
inc
mov
xor
fisubrs
aam
xchg
rcrl
out
cwtl
inc
jo
jne
add
cmp
or
je
or
movsb
sti
push
scas
inc
jle
in
cmp
loopne
loopne
inc
out
lock
mov
mov
insl
in
das
mov
sbb
test
and
int3
xchg
je
cld
je
jbe
jns
sbb
stos
stos
and
and
add
add
add
mov
and
cmpsl
ljmp
dec
jb
scas
aaa
mov
sarb
in
jb
ljmp
add
mov
sub
or
decb
sbb
ja
sbb
aad
shr
cld
pop
loopne
gs
adc
jle
aas
daa
xchg
xchg
repz
inc
push
mov
adc
shrb
iret
daa
shlb
adc
cli
lcall
push
mov
cmpsl
scas
rclb
xchg
xchg
dec
testl
jo
xchg
sbb
inc
pop
ljmp
adc
jle
cmp
rclb
jl
or
sub
lret
loopne
jmp
loopne
cmpsb
and
push
lods
or
flds
xchg
push
subps
out
aaa
mov
or
stos
sarb
mov
div
fxtract
call
jnp
ret
std
mov
cs
cmp
add
add
cltd
jmp
fildl
or
mov
add
add
add
test
mov
add
cmpsb
sbb
leave
in
dec
pop
xchg
xchg
sub
dec
add
cmp
mov
inc
iret
or
jb
or
mov
lcall
push
fistpl
insb
negl
nop
push
insb
out
orb
adc
test
jb
mov
cld
push
mov
lods
jle
adc
xchg
es
push
pop
rorb
and
or
sub
cli
cmc
out
mov
xor
inc
dec
fldenv
ret
cmpsl
dec
xchg
mov
adc
lcall
shl
inc
mov
sar
in
sub
jne
mov
pop
insb
aas
clc
fidivrl
lds
sti
fdivrp
rorl
pop
movl
jo
lods
movsb
mov
mov
jmp
jecxz
sub
add
into
xlat
roll
xor
movsl
sbb
mov
mov
push
fildl
mov
add
push
jg
dec
xchg
dec
dec
xor
push
add
push
inc
push
xchg
mov
hlt
adc
lahf
xchg
dec
mov
pop
and
xchg
jnp
testl
adc
stos
bound
into
cli
dec
jb
cmp
pop
sti
nop
mov
loopne
sarb
pop
mov
push
flds
push
xor
push
jns
lcall
sbb
pop
iret
in
jp
push
sbb
fbstp
add
jae
cmpsb
ret
mov
push
imul
mov
push
imul
popl
mov
jmp
or
xor
in
push
in
scas
push
xchg
gs
xchg
lds
push
mov
mov
xchg
push
ret
cmpsb
inc
jno
fildll
sbb
mov
and
xchg
push
xchg
in
clc
stos
and
xchg
mov
dec
mov
sbb
clc
or
jbe
inc
sub
sarl
sbb
call
icebp
btc
cmpsl
jnp
iret
mov
fucomip
push
insb
xor
fcomps
or
imul
add
movb
mov
mov
into
xor
jg
das
sbb
cli
xlat
fidivl
insb
orl
inc
mov
dec
inc
mov
dec
andb
inc
int
das
fsts
adc
aas
out
gs
cmp
sahf
jge
rorl
push
or
dec
mov
inc
sarl
mov
jmp
stc
pop
sub
or
push
inc
call
lret
ror
mov
push
push
in
scas
movsl
xchg
push
in
int
out
dec
and
cmp
push
add
xor
dec
sbb
ljmp
mov
dec
aaa
xor
inc
out
into
lahf
stc
loope
mov
loopne
xor
cltd
dec
sbb
mov
inc
push
cmp
inc
lret
dec
in
jl
cli
sub
adc
mov
or
xlat
cmpsb
ds
mov
pop
jge
jle
add
add
dec
out
iret
jmp
aas
in
push
popaw
dec
and
xor
add
add
add
add
push
or
addl
test
les
int
popl
outsl
dec
mov
adc
pushf
inc
xchg
inc
dec
xchg
aad
daa
xor
pop
adc
dec
or
cs
cs
mov
cmpps
mov
iret
or
or
out
jno
loope
iret
inc
fidivrl
movsb
rcl
xchg
pop
mov
push
out
inc
test
rcrl
hlt
inc
cli
push
push
and
out
cmc
popf
ss
add
mov
adc
in
movsl
jo
jo
dec
adc
push
xor
cli
inc
iret
mov
jb
pusha
mov
mov
cmp
mov
jns
es
int
mov
adc
fwait
add
inc
add
andl
adc
loop
ljmp
ret
mov
in
jg
inc
cmpsb
jb
sbb
shr
lahf
add
test
add
add
std
cmpsb
pop
dec
sub
sub
or
add
add
and
and
dec
lods
cmp
add
mov
gs
mov
jae
jle
sahf
pop
cmc
pop
mov
inc
xchg
mov
cli
sbb
stc
jmp
cmp
inc
test
lods
cwtl
imul
and
ds
mov
dec
push
sub
add
enter
add
pushf
adc
xlat
int
sar
adc
sbb
mov
shlb
add
mov
push
jae
cmp
lret
fsubrl
mov
dec
jae
pop
cli
movsl
adc
cwtl
test
daa
inc
repnz
in
push
stc
movsb
fcom
aas
sbb
mov
pushf
pop
dec
cmp
pop
pop
jbe
cmp
cs
mov
mov
or
xor
add
jno
pop
sbb
mov
push
faddl
call
ss
mov
xor
movsl
cltd
jecxz
inc
ss
out
xchg
leave
xchg
fdivp
aaa
repz
out
add
add
neg
std
sub
dec
in
push
das
fnstsw
add
add
add
fs
imul
leave
cmp
lcall
dec
lcall
mov
mov
fnsave
and
int
adc
pop
subb
or
out
add
jmp
test
mov
mov
add
ficoms
sub
stos
dec
scas
clc
mov
push
inc
je
fwait
mov
iret
lods
or
adc
setnp
jg
cltd
add
lods
add
jl
aam
sahf
test
sub
sub
or
sbb
jp
addr16
movsb
test
inc
push
out
cmp
test
call
sub
xor
mov
and
mov
scas
shrl
jl
gs
mov
dec
lea
and
test
pop
push
rorb
cld
mov
movsl
inc
pop
cli
stos
inc
adc
arpl
xor
mov
repz
inc
cld
add
pop
clc
jmp
push
subb
in
push
mov
test
cmp
inc
insl
add
add
add
scas
push
out
adc
cmp
pop
push
stos
fisubs
sub
or
lcall
into
ret
cmp
xchg
aad
dec
push
sbb
and
inc
cmp
out
pop
lods
stos
sub
scas
mov
sub
jo
out
stos
and
mov
pusha
cmp
ret
inc
or
stos
fadds
cmp
mov
push
pop
xor
mov
subl
pop
stos
mov
dec
fwait
xor
mov
mov
inc
mov
fisubs
mov
sbb
or
xor
add
outsb
into
popf
aad
mov
xchg
jno
movsl
xor
es
push
fstp
mov
scas
enter
jl
leave
ret
fnsave
out
adc
dec
xlat
stos
call
hlt
xchg
sbb
aam
mov
inc
in
jle
repnz
lret
mov
lcall
out
sbb
testb
add
add
push
aaa
and
ret
cmp
outsl
arpl
or
sbb
add
cs
mov
popf
fidivl
xchg
rolb
fidivrs
ret
addr16
bound
in
jo
pop
pop
mov
or
jo
outsb
mov
add
sub
lods
call
mov
stos
mov
popf
dec
pop
shll
pop
aad
pop
xor
int3
ret
arpl
add
adc
icebp
cmpsb
push
fadds
adc
inc
aas
fdivrl
and
mov
addr16
inc
jle
push
push
aaa
cmpsb
pop
pop
cmpsb
sahf
daa
sbb
sahf
addb
cmpsb
add
daa
pop
sbb
popf
fucomp
fldt
push
dec
out
in
fldt
push
inc
fs
xchg
pop
inc
push
jp
fldln2
iret
jno
push
pop
mov
mov
sbb
aad
push
sub
cmp
jne
lds
push
in
adc
daa
sub
ja
mov
enter
outsl
add
add
add
fldenv
loop
cmpl
mov
mov
les
xor
mov
pop
jecxz
ret
xor
das
add
subl
cld
jb
or
push
into
incb
gs
int3
repz
jns
mov
pop
sub
jl
test
dec
jno
sbb
ficompl
jg
loope
xchg
mov
pop
or
adc
or
push
sub
jae
mov
fs
add
inc
jno
push
inc
cmp
cmp
push
or
or
ljmp
dec
or
push
xchg
mov
sbb
movsl
xchg
mov
cltd
pop
cmp
cmp
iret
xor
imul
mov
fidivs
xor
adc
fs
push
in
je
adc
jle
and
rorb
mov
xor
cltd
aad
cmpsl
mov
dec
insl
aam
int
mov
jnp
outsl
cmpsb
loopne
aad
ds
jo
add
add
ficompl
daa
mov
fs
adc
mov
jle
mov
adc
mov
push
shll
lock
stos
data16
dec
mov
sbb
out
pop
adc
push
xorl
cmp
sub
pop
mov
sub
mov
jg
add
mov
pop
jo
lods
cmp
fstpt
jg
jle
addr16
lods
and
sbb
andl
pop
imul
nop
sub
xchg
add
cmp
icebp
loopne
cmpb
push
mov
loopne
pop
xchg
mov
daa
es
in
int
cmpsl
pop
daa
aaa
ja
insl
stos
sub
rol
ret
sahf
add
aad
in
ss
in
enter
pop
push
inc
popf
mov
xchg
jmp
mov
push
dec
xor
test
sarb
repz
push
xchg
mov
add
add
cli
xchg
jle
push
je
cs
xchg
notb
add
add
add
sbb
repz
mov
jo
stos
popa
sbb
add
sub
or
xchg
pop
xchg
push
cmp
pop
in
and
jns
inc
insb
dec
int
mov
xor
inc
cld
mov
out
jp
inc
sarb
pop
daa
sub
loope
cmp
nop
mov
xor
or
jns
mov
cmp
push
ret
mov
sub
je
negb
pop
fnsave
mov
fcmovnbe
and
ret
jae
repz
push
call
fwait
js
jmp
sub
lahf
add
jne,pn
jg
imul
sbb
mov
xlat
xor
xchg
jae
repz
ja
stos
rorl
mov
mov
jge
dec
or
imul
lods
mov
and
add
add
fwait
jnp
aad
sbb
or
jb
add
add
fstpt
sarb
xchg
ret
push
ret
jp
cld
xchg
out
mov
lcall
xor
or
and
movsl
and
shl
je
mov
cld
adcl
ljmp
gs
loop
sbb
ror
loope
cmc
add
mov
out
xchg
loop
xchg
inc
mov
scas
ret
rorb
inc
jecxz
push
jle
mov
push
jg
xor
jmp
mov
add
xor
adc
cmpsl
jge
or
pop
jno
lock
jae
and
mov
mov
in
fistps
sbbb
sbb
lock
xor
jae
mov
xchg
lret
xchg
mov
inc
nop
xchg
or
mov
and
mov
inc
cmp
pop
mov
rcrl
pop
cs
or
ss
jg
lret
xchg
add
mov
scas
or
mov
std
mov
sub
jae
add
add
ss
adc
dec
ja
addl
gs
in
xchg
sub
adc
push
fs
sbb
int3
xor
and
mov
lret
clc
xor
or
outsl
out
pop
dec
fnstcw
mov
fidivs
xchg
orl
daa
sbb
ret
lret
loope
cmp
andl
xchg
xor
push
fisubl
test
out
lcall
pop
std
into
ror
pop
jecxz
loopne
add
push
imul
shll
inc
sbbb
push
pop
lret
sub
ljmp
add
ss
ret
mov
arpl
sub
sti
leave
in
mov
sub
mov
inc
fildll
xchg
and
inc
push
sub
or
lcall
pushf
insb
or
outsb
fldcw
arpl
call
ja
cmp
adcl
xchg
fisttps
mov
scas
mov
je
add
add
add
jp
fsts
ret
shll
pop
pop
in
shlb
in
adcb
mov
xchg
repz
ror
pop
scas
lods
fisttpll
test
sub
repz
pop
insb
mov
stos
ret
xchg
mov
ljmp
cmp
inc
loopne
insb
in
rcrl
aas
sub
cli
lret
fsubrl
mov
in
inc
insl
and
xchg
sub
and
adc
enter
pop
adc
in
push
or
dec
rclb
or
add
sbb
add
xchg
adc
mov
mov
mov
nop
fsubrs
jnp
ja
xchg
add
inc
sub
arpl
sbb
pushf
jg
inc
cwtl
jno
ljmp
popa
inc
pop
dec
lods
or
and
jb
adc
andl
or
inc
in
mov
mov
out
sub
sbb
jne
add
add
outsb
adc
cli
in
aas
popf
loop
sbb
popf
test
les
in
nop
mov
shrl
pop
fstp
add
andl
idiv
jge
mov
push
je
stos
lcall
sub
stos
sbb
repz
inc
sahf
aad
push
adc
loopne
pop
into
loop
pop
sub
sub
test
rcrl
push
jg
test
aaa
out
icebp
sub
cli
pop
fs
sub
push
mov
or
imul
jo
rcrl
ror
inc
or
lds
lahf
sub
adc
outsl
mov
cmp
jmp
test
in
leave
mov
out
int
xchg
icebp
popa
dec
pop
loopne
pop
insl
rorl
test
bound
push
lock
xchg
and
in
dec
pop
dec
cwtl
push
pop
icebp
pop
lds
nop
pop
and
push
pop
add
sub
xchg
cmpsb
repnz
add
jns
divl
in
sub
fs
add
add
xor
inc
cmovbe
loopne
mov
sbb
adc
int3
adc
push
xchg
dec
das
insl
lea
push
test
scas
repz
jne
mov
fnstcw
mov
test
shrl
sub
mov
inc
jp
icebp
scas
xor
mov
sub
loop
outsb
dec
call
adc
out
lcall
dec
and
stc
fsub
test
shlb
in
imul
test
xchg
test
lods
arpl
or
jle
push
xchg
in
test
cmp
addl
les
test
inc
xchg
add
mov
pop
xchg
repz
adc
insl
dec
dec
dec
out
sub
lods
xchg
outsl
dec
repnz
sub
xchg
stc
fstpt
jp
addl
sbb
push
push
inc
add
std
jecxz
jbe
add
fldenv
les
imulb
or
add
fisubs
mov
mov
push
add
add
jne
inc
lea
scas
inc
stos
cmp
test
aam
inc
push
fcomps
enter
imulb
cmpsl
mov
jo
inc
jb
popf
adc
push
mov
cmp
dec
pop
test
dec
and
enter
fdivrl
lds
push
add
sbb
iret
imul
sbb
jmp
int3
lret
stos
in
popf
add
lods
popa
or
ret
mov
lea
pop
and
or
lret
xchg
ja
push
nop
lret
pushf
insb
and
jl
push
arpl
inc
lret
shll
sahf
push
mov
dec
in
sub
xchg
add
das
pop
xchg
jmp
lea
jge
mov
pop
outsb
lret
push
inc
ret
cwtl
mov
fcmovu
pop
repz
pop
add
push
jg
mov
scas
bound
xor
xor
in
out
dec
cmp
lock
in
shlb
mov
xor
movsb
insb
js
add
add
dec
add
shlb
hlt
gs
jnp
mov
lea
in
pop
mov
imul
rcl
lods
jg
jle
ficoms
test
outsb
dec
cmp
cmpsb
dec
cmp
icebp
push
dec
and
pop
jl
aaa
push
dec
fistpl
cmp
add
fisubs
pop
les
insb
pop
adc
jg
inc
lea
mov
sbb
es
push
push
xchg
pop
push
loop
xchg
das
pop
jmp
xchg
push
sbb
je
iret
rcll
fwait
jne
jns
push
mov
jb
les
jno
clc
mov
push
insb
gs
add
imul
loop
cld
insb
add
and
adc
cs
or
mov
sub
stc
pop
leave
loopne
cmp
fs
scas
xchg
cld
and
add
mov
aad
sbb
jp
movsb
in
push
and
dec
push
dec
jge
nop
inc
dec
filds
add
orb
ljmp
jl
cmp
add
add
js
or
inc
sbb
jae
pop
and
and
adc
fistl
mov
bound
mov
mov
je
int
les
shl
xchg
and
fwait
outsb
out
mov
add
add
xlat
cmpsl
add
sbb
mov
push
leave
cmp
inc
mov
push
add
mov
mov
adc
std
lret
cmpsb
rcll
out
addr16
or
push
add
stc
pop
rcrl
mov
fiaddl
xchg
xchg
jl
add
insb
inc
dec
iret
xor
push
jbe
push
in
push
dec
shrb
lahf
mov
ret
idiv
and
cmp
mov
les
xchg
cmpsl
sbb
jnp
cwtl
icebp
jb
loopne
xchg
push
or
jb
test
lods
add
push
loop
pop
cmp
add
adc
dec
sarl
xor
jo
ja
std
stos
sbb
ljmp
add
add
add
jge
cltd
scas
lcall
and
enter
scas
and
fsubl
daa
ret
sub
xchg
pop
outsl
ficoms
pushl
add
int
punpckhwd
dec
mov
pop
pop
and
mov
into
sbb
lods
sbbl
mov
in
or
lds
sbb
je
jl
js
push
jmp
inc
ja
pop
lahf
shl
repnz
es
stos
lea
pushf
xchg
mov
and
mov
pop
sub
lock
fcoms
dec
xchg
nop
inc
mov
hlt
push
pop
fstl
jae
xlat
ret
loope
in
cli
and
rclb
hlt
ja
std
cltd
pop
xchg
push
and
dec
call
mov
cltd
imul
pop
xchg
jno
bound
cmp
popa
shrb
and
outsb
pop
xchg
sti
test
dec
stos
test
std
addr16
cmp
xchg
sti
push
loope
and
faddl
add
add
cmpsb
push
sbb
popf
xor
jnp
add
add
or
rcrb
jne
data16
out
inc
mov
mov
data16
xor
push
loopne
cmp
mov
or
push
jbe
adc
xchg
fcmovb
aam
add
dec
sbb
ret
stc
pushf
scas
or
push
cmp
ljmp
jl
jp
loope
and
sbb
nop
sbb
fiadds
call
xor
rclb
push
jae
jge
or
inc
and
scas
push
and
sub
jmp
inc
sahf
xchg
ja
cmpb
fistl
jbe
imul
dec
divb
pop
fwait
out
jae
jbe
push
or
jge
into
mov
data16
mov
mov
pop
inc
pop
mov
xchg
sbbl
sbbb
jbe
sbb
stos
sarl
insb
push
sbb
enter
mov
mov
js
arpl
xorb
fidivl
ret
inc
xor
add
cmp
cli
mov
stos
xor
lods
jl
add
add
add
or
mov
sbb
and
icebp
icebp
cltd
cmpl
jo
test
push
call
stos
aaa
js
jne
ds
mov
pop
jae
adc
xchg
rcr
inc
test
xchg
jno
xchg
or
adc
sub
ja
fwait
push
sub
sti
inc
shl
in
adc
fildl
pop
mov
mov
jb
xor
xlat
mov
mov
test
cld
push
xchg
adc
cs
call
mov
inc
or
mov
repz
push
sub
mov
fisttps
push
iret
je
or
cmp
sbb
adc
push
mov
das
inc
fdivrs
insb
scas
pop
lcall
jns
repnz
push
xchg
push
or
xor
sbb
jge
mov
scas
movsb
jle
hlt
and
xlat
mov
dec
pushf
test
std
test
lcall
xor
loop
jge
add
add
mov
lods
jl
das
cmp
lret
jg
call
cmpsb
xlat
or
xchg
push
sbb
pop
cmc
sub
aam
dec
mov
ljmp
leave
mov
sub
inc
repz
test
dec
gs
fmuls
pop
pushf
scas
repz
cmp
and
xchg
mulb
js
adc
lods
sahf
push
and
js
test
fiadds
push
out
push
mov
mov
cs
enter
loop
stos
shlb
lods
cmp
decl
jp
shl
sti
xchg
outsb
add
repz
jb
pop
mov
ljmp
ljmp
or
ret
fsubrs
dec
mov
xchg
cltd
movsb
add
xchg
outsb
inc
xchg
sbbb
lds
lock
repz
dec
dec
ret
cmpsb
mov
inc
loope
and
add
testb
daa
mov
cmp
add
add
lret
jb
xor
test
lahf
cmp
fcomps
lahf
xchg
add
push
jae
icebp
or
xchg
jg
leave
push
andb
dec
fisubrl
pop
ss
js
movsb
sub
lods
jb
cwtl
push
rcrl
jecxz
inc
loopne
popa
sbb
xchg
jo
fs
adc
lea
push
mov
mov
ds
push
mov
mov
movsb
jb
add
dec
push
cmp
pushf
jg
data16
inc
dec
mov
je
test
adc
pop
push
test
incl
repnz
jmp
adc
addr16
and
out
jmp
or
lcall
sub
inc
mov
mov
adc
xchg
and
icebp
pop
inc
mov
and
aad
gs
clc
mov
inc
ret
lock
into
push
data16
add
shrl
mov
inc
clc
xchg
pusha
sub
mov
push
sub
add
add
lcall
repz
xchg
add
add
insb
fs
cmpsb
add
inc
mov
mov
rclb
xchg
push
psllq
mov
mov
leave
xchg
call
frstor
xor
fimull
and
lahf
out
xchg
mov
test
inc
sub
ret
xor
rcrl
in
out
inc
pop
and
fcmovnbe
pop
out
sarb
inc
dec
mov
cmp
mov
movsl
xor
aad
in
sub
fsubrl
mov
xchg
sbb
adc
pusha
cmp
jbe
xchg
es
push
incl
gs
xlat
cmpl
imul
repnz
sub
adc
inc
jno
aam
inc
inc
sbb
cmpsb
or
and
xor
clc
push
outsl
mov
mov
loop
leave
mov
add
or
adc
cs
jl
cs
idiv
jne
iret
sbb
push
mov
add
mov
aad
pop
pop
mov
outsb
sub
les
ljmp
xchg
push
scas
xchg
jo,pt
cwtl
and
mov
imul
and
out
mov
or
sti
inc
cwtl
leave
popa
int
xchg
test
leave
jne
xor
scas
mov
xchg
lret
fistpl
scas
rcrb
mov
testl
push
xor
push
pop
inc
int
mov
pushf
loope
pop
stos
mov
test
stos
mov
pop
mov
sub
inc
xor
or
sub
test
insb
push
lea
push
rorb
cltd
and
in
stos
jmp
push
icebp
out
test
cmp
jb
pop
fstl
fdivrl
insl
dec
adc
lcall
mov
cwtl
lock
sar
ljmp
adc
cltd
sbb
add
xchg
pushl
sub
daa
xchg
data16
add
dec
shl
repz
adc
es
lock
sub
jecxz
loope
or
inc
push
les
loope
sbb
mov
stos
pop
mov
mov
mov
cmp
mov
std
dec
leave
sbb
push
push
out
mov
mov
pop
mov
rol
pop
in
dec
jbe
push
test
mov
xchg
insl
mov
and
jb
shl
adc
clc
cld
mov
xchg
mov
jle
pushf
sbb
int3
lret
ret
fldcw
inc
inc
call
and
sbb
adc
add
and
leave
mov
pop
movl
push
jmp
lock
daa
mov
sbbb
add
nop
lret
imul
aam
dec
fs
adc
adc
cld
add
scas
lock
mov
mov
jge
std
sti
iret
ss
push
jno
sahf
into
add
add
mov
les
aad
lods
mov
sub
mov
hlt
in
pop
or
add
push
fs
sahf
cmc
stos
pop
out
lods
lock
or
scas
in
add
cmc
cmp
jno
mov
adc
cmp
jne
orb
xchg
mov
aam
adc
adc
and
push
adc
aam
push
and
sbb
imul
xchg
fcmovne
iret
js
adc
pop
lcall
rcrb
or
jle
ffreep
test
imul
mov
cld
xor
movsb
mov
enter
adc
inc
push
lea
push
push
fsubl
pop
add
ficoms
int
push
mov
jb
add
stc
push
mov
dec
or
adc
xchg
push
into
cmp
and
pusha
add
out
fwait
mov
aas
repnz
mov
cmp
jns
cmp
push
loopne
xchg
inc
lahf
sti
hlt
out
dec
roll
clc
dec
mov
add
add
dec
fisubrl
mov
dec
add
and
push
or
subb
jmp
movsl
push
insl
test
xor
mov
std
cmp
inc
mov
sbb
outsb
mov
cli
out
jg
int3
sbb
das
ljmp
pop
jns
adc
jmp
adc
pop
sub
test
add
loope
jge
sbb
pop
call
outsl
push
xchg
cmp
ds
mov
xor
or
mov
lret
pop
mov
loope
adc
push
iret
or
mov
cmp
xchg
sub
adc
jne
imul
idivb
push
xchg
pop
fisubl
int
shll
sub
lods
mov
stc
mov
pop
inc
cli
jo
mov
lds
ret
arpl
xchg
push
test
jge
inc
fwait
xor
add
mov
mov
mov
stc
cmpsl
imul
add
std
imul
adc
js
cmc
ffreep
imul
or
scas
out
je
xchg
add
cmpb
aam
cld
sub
add
dec
decl
add
mov
aas
and
cmp
push
inc
cmp
inc
inc
das
icebp
xor
fsub
push
jecxz
in
push
in
js
pusha
sbb
cmpsl
sbb
enter
ljmp
mov
cld
aad
jns
aam
inc
sub
adc
adc
stos
jae
sbb
movsb
add
push
mov
ret
bound
stos
fs
imul
cmp
bound
ds
daa
cltd
inc
outsb
sbb
loope
inc
imul
push
lahf
add
jno
cltd
jle
add
aad
push
aad
fmuls
mov
xor
xchg
and
mov
add
add
pop
test
ljmp
lock
xchg
rcrb
daa
mov
add
add
dec
cs
mov
xchg
push
callw
mov
inc
xchg
jge
rcl
loop
fcom
sbb
mov
xor
fcoms
jo
cld
addb
iret
ret
add
cmc
fsubrl
push
call
mov
scas
mov
fstps
ljmp
rcl
inc
pop
jns
jmp
pop
adc
lods
add
push
cmpl
pop
sbb
mov
cld
sub
loop
gs
loope
push
cli
lock
push
iret
mov
jbe
add
icebp
adc
mov
dec
jecxz
cmp
fldl
jp
into
fmulp
pushf
test
add
imul
ljmp
pminub
xlat
xchg
inc
mov
or
jbe
lahf
idiv
ljmp
mov
mov
jge
lahf
and
addr16
mov
mov
xor
imul
push
jnp
sbb
push
xor
cmp
movsb
xchg
add
add
cmp
xchg
add
test
lods
mov
repnz
out
sahf
xor
in
hlt
cmp
jge
mov
out
xchg
mov
add
push
testl
inc
inc
cwtl
pushf
add
mov
inc
mov
and
inc
stc
jae
shr
cmpb
psllw
xor
fstpt
add
push
pop
mov
sub
cmp
cmpl
cli
hlt
sbb
out
es
mov
sarb
addr16
jbe
or
add
loopne
not
and
dec
subb
jle
push
and
scas
repz
fs
lock
sarl
adc
mov
sbb
xchg
mov
iret
inc
in
jnp
xor
movsb
rorl
stos
repnz
xchg
mov
jg
mov
pushf
pop
sbb
or
ss
scas
int
and
push
sub
or
inc
sarl
stos
or
outsl
add
rep
adc
push
aas
or
mov
mov
xchg
add
add
test
jl
jno
mov
in
fdivp
dec
push
jecxz
cmp
add
imul
jnp,pn
data16
dec
insl
mov
enter
pop
dec
pop
mov
psubw
mov
push
cltd
jge
out
cs
out
leave
popf
mov
inc
lret
mov
mov
or
cmp
adc
cli
in
int3
inc
adc
and
je
pop
push
add
imul
add
fwait
pop
divl
aad
jb
int
xchg
adc
cmp
add
jmp
sbb
into
sub
sub
stc
shr
xchg
inc
xor
dec
pop
in
fldl
dec
pop
inc
gs
dec
or
xor
cmc
in
or
lea
jmp
lret
jb
jbe
ret
pop
enter
jbe
ljmp
xchg
push
inc
sbb
sbb
dec
insb
fidivl
bound
clc
lods
mov
add
add
loopne
lcall
std
xchg
or
rcr
xchg
sbb
cs
and
mov
test
loop
and
hlt
inc
sahf
out
and
mov
fsubrp
fadds
test
jle
lcall
jb
fucomip
dec
in
js
sbb
sub
inc
ja
dec
imul
mov
mov
mov
aam
adc
sub
sbb
out
pop
divb
add
aam
xor
add
jmp
movsb
mov
out
ss
and
cltd
mov
jne
xor
push
in
jecxz
xor
ljmp
push
andl
cwtl
arpl
out
call
sub
in
lds
pop
mov
xchg
out
inc
ljmp
adc
andb
cmpsl
mov
dec
add
imul
mov
fstl
add
add
mov
jns
push
scas
mov
add
add
add
jnp
int
xchg
pop
ljmp
mov
push
mov
mov
adc
popa
cmp
or
scas
pop
pop
clc
sarb
and
sar
xor
fimuls
xor
ret
ds
sbb
mov
hlt
mov
and
xor
jge
push
push
mov
dec
nopl
jl
imul
add
add
lret
int3
mov
sub
out
pop
fucomi
add
inc
aas
out
in
call
and
aad
pop
ret
inc
jae
pop
jbe
jnp
out
ja
mov
push
leave
jns
pop
pushf
out
and
mov
in
jmp
movsb
andb
mov
dec
push
ret
popf
mov
adc
xlat
add
mov
and
dec
mov
adc
jo
mov
mov
testl
push
mov
in
inc
loop
sub
xor
xor
js
add
add
int
fstp
iret
push
cmpsb
fadd
dec
idiv
dec
or
add
jne
and
mov
sub
out
adc
push
sbb
subb
jbe
lock
ret
repnz
scas
lods
ljmp
cli
fs
xor
ds
push
dec
lock
dec
lods
mov
mov
xchg
jmp
pop
cmp
push
or
cmpb
not
lret
and
inc
inc
inc
push
shll
add
out
sub
shlb
js
adc
push
hlt
sub
loopne
dec
jns
mov
push
or
mov
inc
cmp
fwait
jb
jo
lods
and
in
xor
mov
push
mov
call
mov
and
mov
jle
fstpl
ds
je
out
out
popf
dec
jns
jl
mov
xor
jae
pop
jo
rolb
cmc
xor
mov
xchg
mov
ficoms
lahf
and
scas
std
out
ljmp
mov
add
add
jno
cli
fdivs
insl
xor
sub
or
dec
push
sti
aad
fadds
insl
add
mov
in
mov
sbb
dec
cmp
or
aas
mov
out
add
aam
inc
lret
lret
pop
popf
xor
inc
mov
add
or
cltd
hlt
fldcw
add
gs
aam
cld
das
mov
aaa
inc
fstl
add
sets
jle
call
add
cwtl
imul
aas
nop
or
sti
aam
push
push
dec
cmp
movsl
fs
movsl
jb
testb
ds
fimuls
movsb
fwait
dec
pop
rol
ficoml
test
insl
lcall
leave
add
pop
mov
mov
mov
imul
pop
mov
stc
mov
xor
xor
lds
sbb
lods
movq
lahf
push
rcl
sbb
fs
adc
jle
add
add
mov
icebp
push
mov
add
add
push
fbstp
and
xlat
add
and
out
dec
xchg
lock
mov
mov
repz
cli
loop
bound
les
iret
pop
fsub
adc
dec
leave
scas
ret
stos
bound
js
cmpsl
jo,pn
xor
sbb
orb
fistps
cmp
mov
frstor
sbb
mov
mov
pop
adc
pop
subl
lcall
cwtl
mov
fisttpl
mov
lds
jmp
adc
sub
xor
jns
cmc
xchg
jno
mov
or
add
mov
dec
dec
jp
and
pop
repz
cmpsb
clc
aam
mov
rolb
stos
jae
inc
mov
clc
pop
outsb
les
ret
cld
adc
cmp
jno
mov
pusha
clc
ds
js
arpl
or
jno
sbb
bnd
cmpsb
push
in
imul
jl
or
mov
inc
or
test
fcomps
add
sbb
add
add
in
mov
shr
jae
movsb
gs
outsb
lahf
inc
push
lcall
stos
xchg
outsl
xchg
fildl
popl
pushf
mov
rdtsc
cmpsb
cmp
xchg
dec
jno
xor
sub
loopne
fld
push
mov
mov
mov
icebp
jns
cmp
xchg
int
xor
xor
push
jmp
in
cli
push
mov
dec
xlat
jle
inc
push
aad
mov
lahf
sarb
cwtl
outsl
pop
lret
sarb
jl
mov
and
mov
test
add
inc
jle
mov
pop
in
ret
push
mov
pop
mov
fisttpll
bound
shr
incl
imul
mov
int
icebp
xor
loopne
mov
push
stc
cmc
inc
sub
jecxz
mov
sbb
push
adc
xchg
outsb
cmp
mov
push
xchg
lea
jo
adc
push
fistps
dec
sub
lret
stos
add
add
add
ljmp
dec
mov
mov
les
add
dec
pop
pop
mov
filds
pop
cmp
aam
cs
pop
gs
pop
pop
push
add
jge
jo
adc
jp
push
js
addr16
inc
sbb
incb
loopne
je
in
icebp
pushf
or
and
cwtl
fdivrp
les
outsb
mov
mov
mov
jno
in
movsb
movsb
mov
cld
in
and
mov
xchg
popa
es
dec
cli
bound
addb
aas
inc
xchg
loopne
add
mov
push
in
dec
push
in
int3
loope
inc
hlt
pushf
sub
lock
adc
movl
daa
dec
testb
inc
lods
push
jne
aam
ljmp
stos
test
rclb
sbb
cltd
mov
shrd
movsl
xchg
fmull
mov
fcompl
and
push
mov
repz
sbb
mov
push
and
jbe,pn
and
add
add
aaa
shlb
cmc
div
testl
pop
enter
add
add
mov
mov
cs
inc
or
imul
sub
mov
lahf
in
dec
sub
or
push
out
pop
jge
and
popa
stos
and
notb
pop
jns
iret
dec
adc
sub
lods
enter
out
lea
xchg
mov
pop
repnz
sbb
jmp
pushl
movsb
mov
xor
lret
ljmp
fdivs
dec
nop
xchg
xchg
notb
inc
pop
cmpsl
out
es
pop
arpl
lea
mov
out
and
cmovb
ss
fistpl
xor
cmpsl
fisttpl
in
dec
xchg
lret
std
jmp
and
mov
and
push
loope
mov
movsb
xorl
pop
ja
dec
pop
mov
addr16
fcoms
push
fsubrp
popf
cs
dec
fs
pop
and
sbb
imul
pop
push
nop
push
sahf
rcr
pop
adcb
iret
pop
mov
int3
nop
add
add
add
cld
xor
imul
pop
sbb
cs
fstpl
test
mov
call
inc
xor
decb
jmp
scas
daa
jae
mov
push
push
loopne
add
pop
gs
cmp
cs
push
in
int
out
daa
push
in
testb
and
in
out
in
mov
test
push
add
negb
lahf
push
shl
pop
add
add
adc
mov
repnz
imulb
cmp
push
push
test
cmp
push
in
div
mov
pop
mov
imul
add
sbb
loope
cmpb
out
dec
xchg
add
push
stc
fs
inc
iret
stos
mov
push
gs
adc
jae
add
cmp
push
ds
sbbb
mov
clc
adc
fmuls
mov
out
gs
add
roll
insl
shrb
add
add
arpl
cmpsb
jcxz
fimull
rclb
add
pop
inc
pop
mul
lea
in
xor
mov
dec
scas
aam
stc
push
mov
or
inc
sub
push
mov
pop
xlat
lods
je
rcl
movsb
outsb
jno
dec
or
stos
test
in
pushf
jmp
insl
mov
mov
hlt
sub
int3
lahf
inc
hlt
push
adc
inc
ja
or
push
lods
leave
outsl
cmp
hlt
push
lods
cli
mov
xor
bound
out
iret
xor
pop
and
cmc
jb
cmp
xchg
or
mov
aad
sbb
cmpsl
cmp
imulb
push
fcoml
push
adc
push
pop
mov
dec
inc
divl
or
or
fwait
pop
mov
mov
test
pusha
rorl
loope
xchg
cmp
lcall
push
call
pushf
mov
nop
jns
pushf
test
mov
add
clc
jnp
jg
in
cli
enter
inc
jo
xor
xchg
add
add
add
cmpsb
loopne
inc
je
xorl
out
test
mov
xchg
mov
mov
adc
dec
sysexit
or
leave
stos
lds
sub
mov
pusha
pop
roll
cmp
cmpsl
pop
bound
cmpsl
push
aaa
mov
pusha
outsl
sbb
sub
gs
and
inc
mov
dec
andb
mov
lods
test
in
and
arpl
out
xor
mov
daa
jge
loop
dec
sbb
insb
inc
sahf
not
call
sub
popa
shrl
push
or
cmp
jle
mov
mov
cmpps
lds
push
mov
cs
sub
mov
das
mov
test
push
and
pop
xor
mov
push
shr
jae
jp
pop
jbe
cltd
mov
adc
insl
hlt
mov
add
lods
faddl
fbstp
cld
gs
mov
fcoms
add
pop
sbb
test
add
lock
imull
mov
push
loopne
or
mov
cmp
insl
stc
mov
push
mov
inc
mov
adc
jnp
sbb
fs
fmull
push
pop
shlb
cmp
jg
add
in
xchg
std
ficoml
rorl
inc
xor
mov
push
icebp
mov
stc
xchg
xlat
lods
ja
repz
bound
jbe
push
lock
inc
or
xor
popa
stos
mov
inc
mov
lds
mov
gs
sub
or
sub
insl
inc
fs
pop
pop
fiadds
lcall
cmp
sar
mov
push
lahf
mov
cmp
push
aas
insl
aaa
cmp
dec
push
add
inc
stos
aaa
xor
or
mov
add
imul
stos
inc
jl
sar
std
jle
pop
popf
scas
fldcw
sbb
add
add
add
cmp
cmp
scas
rorb
notl
lods
faddl
push
sub
mov
out
mov
cmpsb
cmp
out
lods
xchg
push
fldenv
xchg
sub
or
in
rolb
cld
mov
pop
stc
mov
push
and
testb
sbb
push
sar
pop
int3
aaa
push
ss
adc
movsl
aas
imul
das
push
hlt
rcrl
stos
mov
push
xor
and
mov
jle
dec
mov
dec
and
fmull
add
int
aaa
orl
pop
rcrb
dec
into
xchg
fistpll
dec
aam
lea
pop
sbb
mov
inc
frstor
adc
sbb
movb
xor
cmpsb
add
popf
stc
mov
ret
out
notb
lcall
inc
in
dec
or
mov
push
jnp
ljmp
jno
aas
push
iret
arpl
cmp
jns
mov
xchg
lock
je
out
cmp
les
aad
mov
cmp
cmp
in
add
xchg
add
add
add
sbb
stos
sar
mov
test
fisubrs
stos
pop
cmpb
es
das
mov
les
les
pop
xor
mov
je
pop
lea
sbb
insb
ret
or
cmp
les
mov
icebp
jbe
jnp
pop
mov
dec
inc
push
adc
leave
sub
cltd
test
mov
dec
xor
jl
cmp
hlt
ret
int3
in
add
ret
push
push
jle
sub
push
mov
mov
jge
shrb
mov
jo
fnstenv
sahf
pop
call
pop
pop
mov
or
inc
lock
mov
sbb
push
push
loopne
test
icebp
insl
cltd
lea
xchg
neg
push
out
cltd
ret
and
adc
mov
into
mov
adc
ret
insb
push
jnp
jl
lret
jl
dec
sbb
cmp
fwait
and
popa
mov
xorl
in
add
add
add
push
inc
adc
mov
stos
adc
mov
cltd
cmp
js
dec
inc
test
ret
lock
addr16
push
icebp
cli
sub
adc
add
cmpl
je
imul
adc
xchg
jbe
sub
loop
dec
lods
cmp
scas
out
imul
or
hlt
and
leave
popa
fs
xor
mov
into
cmp
fistps
mov
inc
popf
and
cmp
push
outsl
bound
in
stos
lods
cli
cmp
pop
mov
cmc
jns
inc
mov
and
in
jno
daa
xchg
add
push
ss
dec
push
xchg
aam
ret
imul
sti
xchg
in
pop
pop
das
ss
leave
or
jbe
pushf
ja
lret
add
or
ljmp
inc
xor
daa
push
or
dec
movsl
sarl
filds
out
imul
pop
out
jb
and
mov
mov
adcl
add
dec
std
out
xlat
aas
dec
sbb
or
call
add
add
dec
test
or
pop
push
xchg
sub
jno
js
int3
sbb
cmp
cmp
cmp
push
decb
call
xchg
inc
outsb
sub
mov
push
shlb
imul
ficoml
adcb
push
xchg
jmp
xchg
not
inc
sbb
imul
movsb
sub
rol
inc
into
dec
push
sbb
xlat
nop
jns
scas
cmc
insl
mov
xchg
arpl
jg
xchg
dec
adc
mov
xchg
adc
enter
stc
sbb
aas
sar
or
repnz
push
mov
xor
mov
lret
xchg
inc
sub
out
fcompl
cwtl
outsb
cltd
push
mov
nop
and
into
push
xorb
mov
mov
loope
es
gs
js
mov
xlat
push
or
insb
dec
pop
push
mov
mov
xchg
imul
outsl
vmwrite
in
cwtl
add
add
add
mull
or
test
or
js
mov
fcompl
cld
mov
adc
cmpsb
xchg
in
filds
inc
push
movsl
push
mov
inc
cmc
push
mov
js
inc
add
and
and
pop
inc
cmpsl
cmp
scas
or
lods
aas
in
shll
push
out
jnp
clc
mov
cltd
sub
inc
mov
xchg
jne
and
adc
js
inc
adc
aad
inc
inc
add
fdivrp
testb
sbb
fldt
pop
aam
xchg
stos
and
mov
stos
inc
rolb
roll
sub
xchg
pop
cmpsl
mov
ret
mov
mov
arpl
cltd
or
and
push
pop
arpl
adc
jg
dec
inc
mov
mov
aad
ja
mov
popf
adc
mov
adc
pop
call
add
add
lret
sbbl
popl
movsb
lahf
lock
add
add
add
xor
jl
mov
mov
stc
pop
or
pop
leave
test
leave
and
adc
sbb
cmpsl
mov
mull
cwtl
push
or
nop
popa
mov
shlb
movsl
mov
fnstenv
mov
push
pop
mov
lcall
ret
inc
jb
xor
jmp
lods
aam
adc
mull
dec
sahf
xchg
fiadds
sbb
jno
das
adc
pop
lahf
fwait
movsl
mov
jno
pop
les
or
sbb
xor
mov
mov
das
das
cmpl
or
jae
inc
push
shrb
jmp
push
add
jae
addr16
sub
stos
mov
insl
jl
sar
mov
mov
es
shlb
outsb
and
pusha
dec
orb
cmp
xchg
mov
mov
adc
fsincos
sub
inc
stos
aaa
call
add
imul
movsb
and
fldl
outsl
hlt
lcall
aad
call
jecxz
xchg
sub
ljmp
mov
cmp
xor
xchg
ja
shll
lret
data16
sub
inc
mov
mov
add
fcoml
aam
ds
add
add
dec
add
mov
icebp
jae
jp
clc
sbb
lahf
mov
imul
arpl
add
mov
stos
add
push
fbld
int3
movsb
push
bound
add
aas
repnz
pop
xchg
lahf
push
xchg
rolb
les
inc
fwait
icebp
pop
ret
or
call
mov
lock
fdivrl
push
stc
mov
pop
loopne
fnstsw
shll
inc
mov
push
lods
adc
mov
rcrl
dec
or
xchg
push
xor
cli
push
fmull
jge
add
je
mov
jge
jg
ljmp
in
lahf
mov
cltd
mov
add
add
js
lcall
icebp
in
pop
lret
in
cmp
aaa
scas
cltd
xchg
xchg
dec
dec
fidivl
adc
adc
jecxz
dec
je
inc
add
fs
sub
fnsave
pop
movsl
sub
push
outsb
mov
jp
xchg
lcall
scas
dec
ret
das
jbe
and
pop
and
xor
sub
push
cmc
and
in
cltd
add
mov
and
sbb
fadd
inc
shll
push
mov
xchg
inc
cmp
lods
xchg
push
icebp
insb
mov
loopne
jge
push
int3
sub
sti
aaa
loope
pop
into
andl
idivl
mov
or
or
jb
js
ja
cmp
daa
pop
sbb
movsb
push
xchg
xchg
jno
bound
xor
aam
inc
int
mov
cmp
mov
ss
data16
insl
cltd
test
sub
xor
xor
std
adc
add
add
ja
out
inc
sub
or
imul
cld
pushf
add
add
add
jbe
fnstenv
sub
rolb
into
pop
paddq
adc
fisubrl
stos
cmp
push
sti
adc
mov
mov
iret
cmpsl
sahf
in
jno
jno
imul
dec
adc
fmuls
or
popa
addr16
incl
fsts
sub
add
jmp
pop
movsl
stos
std
iret
jp
dec
or
fwait
ficoms
xchg
popa
loopne
imul
mov
push
jle
xlat
iret
mov
push
adc
xchg
fsubs
das
les
ror
and
mov
sbb
jno
dec
sbb
daa
js
ficompl
push
xchg
and
gs
pop
scas
pop
jg
jae
out
or
push
mov
jl
cmpsl
xchg
cmp
xchg
in
mov
mov
scas
mov
xorb
mov
fwait
out
cmp
jno
cmc
fcmovu
and
mov
mov
mov
mov
loop
test
mov
cld
mov
add
add
pop
leave
lock
lcall
sbb
or
dec
and
enter
jg
add
jnp
sub
je
aam
out
lahf
stc
push
sub
push
adc
jne
icebp
inc
xchg
or
mov
sub
add
xlat
jge
std
inc
out
int
mov
sbb
in
adc
and
sub
out
aad
push
lock
mov
cmp
scas
mov
or
into
sbb
mov
icebp
jl
mov
cmc
ss
pop
pop
btc
repz
push
sti
push
inc
dec
addl
popf
xchg
stos
lea
mov
mov
sbb
int3
jb
cmpsl
inc
cmp
aad
sti
cmp
daa
lahf
cmp
adc
cli
out
cmpsb
scas
sub
aad
adc
mov
mov
call
sub
cmp
push
or
lcall
fildl
add
add
jl
scas
cld
mov
inc
push
mov
shrl
sbb
sbb
jge
outsb
push
ss
cmpsl
call
cmovnp
je
pop
int
fucomip
sbb
rcll
push
shrl
jl
outsl
mov
lahf
dec
and
sbb
add
pop
mov
jno
les
pop
mov
jle
add
pop
pop
mov
pop
incb
nop
sbbl
pusha
cltd
clc
pop
dec
jl
es
mov
inc
mov
sbb
out
xor
pop
jl
push
jg
push
dec
lea
inc
sub
out
cld
shl
inc
ss
ss
jecxz
inc
mov
pushf
cmc
cmc
pop
cltd
adc
lahf
jg
xor
sbb
imul
mov
mov
adc
mov
xchg
mov
xchg
push
arpl
inc
mov
sub
add
add
mov
inc
inc
add
mov
add
cmp
pop
pusha
dec
mov
sub
jb
jnp
add
mov
jle
and
mov
out
dec
jmp
pop
ret
xor
push
dec
fidivrl
popa
daa
jecxz
loope
aam
and
xor
jecxz
pop
mov
inc
repnz
mov
fs
and
cmp
mov
mov
stos
sub
push
adc
cmpsb
out
and
lret
dec
add
mov
loop
mov
fistps
mov
rclb
jns
mov
lcall
ss
mov
mov
shrd
or
cmpb
inc
add
xor
lds
xor
es
loopne
add
add
jecxz
les
repz
ds
xor
add
rolb
mov
loopne
clc
cli
push
sar
test
icebp
lret
cmp
add
or
sbb
inc
mov
sbb
add
add
int3
scas
pop
mov
jl
gs
dec
rorb
in
inc
jns
xorb
dec
lods
lret
adc
or
jg
cmp
lahf
add
and
xlat
mov
xor
add
sub
jl
dec
sub
push
pop
or
mov
inc
add
xchg
scas
xchg
and
mov
movb
in
ss
xor
loope
push
das
iret
notb
leave
cmp
and
fcmovnb
mov
jle
adc
rcrl
inc
add
inc
mov
fsub
xor
mov
enter
sbb
scas
test
mov
mov
add
mov
xchg
ret
mov
mov
setle
das
dec
cltd
in
add
sub
lods
mov
sbb
mov
aas
insl
add
lret
mov
icebp
or
jp
roll
jns
add
add
inc
fdivl
push
dec
mov
adc
add
cli
xchg
cmp
adc
movsb
stos
hlt
mov
out
jnp
inc
jbe
fidivrs
xchg
mov
sub
inc
aaa
aam
in
enter
and
inc
push
sbb
jo
jl
sub
push
shlb
ret
jo
lahf
and
mov
movsb
pop
mov
test
call
fwait
cld
push
jl
sbb
pop
dec
xor
add
inc
sbb
loop
aaa
cmp
scas
loop
dec
jle
ret
movsl
orl
roll
or
sti
movsb
mov
pushf
pop
jle
popa
dec
pop
popf
je
cmp
popf
sti
shll
push
fwait
pop
imul
aaa
sahf
xchg
sar
jne
loopne
cmc
outsb
cmp
cmp
push
push
popa
icebp
jg
jne
cs
mov
push
push
xchg
xor
das
sbb
gs
add
lock
mov
bound
jge
mov
mov
roll
add
adc
mov
sbb
xor
adc
add
add
add
dec
clc
in
mov
dec
sub
cmp
orb
lods
inc
pop
int3
ljmp
sub
test
mov
data16
inc
mov
adc
dec
ja
adcl
dec
ljmp
mov
mov
pop
orl
xor
scas
jp
lods
jbe
sbb
and
mov
push
push
jle
out
sarl
xor
pop
dec
mov
add
mov
mov
dec
dec
xchg
mov
sbb
pop
fildl
mov
icebp
or
aaa
and
push
mov
mov
xchg
or
add
ja
aas
dec
pop
cs
and
stos
mov
stos
lret
imul
mov
jo
add
mov
hlt
pop
pop
xor
lcall
sub
or
or
push
repz
fsubl
and
push
imul
inc
pop
test
stos
hlt
jmp
cmp
jbe
sub
or
sbb
add
or
pop
jnp
dec
test
in
xlat
loop
mov
mov
out
out
cld
jg
mov
pop
mov
dec
fnstenv
push
arpl
jns
pusha
out
mov
mov
repz
jne
xchg
xchg
stc
mov
orb
fcmovne
cmp
fsubrl
sub
xchg
and
inc
or
lahf
test
cmp
pushf
mov
dec
enter
sahf
xchg
aad
xchg
sub
loop
icebp
push
jnp
mov
iret
test
push
jl
call
leave
jle
imul
add
inc
outsl
cmp
pop
subb
pop
mov
stos
jle
mov
mov
pop
sub
in
push
ficoms
in
xor
push
xor
push
pop
fwait
in
jecxz
lds
fwait
mov
adc
sbbl
cmc
inc
adc
jo
js
arpl
or
nop
pop
adc
add
out
xlat
out
jg
in
xor
frndint
jl
jno
movsl
add
add
add
leave
mov
outsb
or
movsb
cwtl
sub
cmpsb
inc
enter
xchg
aad
ret
sbb
dec
xchg
enter
bound
filds
pop
sahf
stc
lret
mov
cmp
in
and
add
pushf
mov
lods
imul
mov
rcl
and
mov
inc
jmp
ficomps
subl
cmpsl
es
push
fnsave
lret
lret
mov
jo
imul
adc
inc
out
repnz
out
dec
pushf
and
inc
mov
neg
rcrb
test
loope
xchg
push
pusha
add
pop
sub
popa
push
faddp
dec
jae
aam
cmp
inc
push
lcall
cmp
aaa
jne
pop
loope
inc
cwtl
cmp
and
lea
mov
mov
andl
hlt
repz
pop
sbb
jb
dec
mov
jo
jmp
outsl
lea
inc
mov
add
add
mov
inc
fwait
lds
jo
fldl2e
sahf
jle
and
add
mov
or
sbb
outsb
mov
mov
push
lods
push
repnz
scas
enter
jnp
push
outsl
inc
push
shrl
inc
lret
jmp
xchg
jge
sub
xor
loopne
dec
xchg
cmpsl
sub
jge
ds
stos
cmp
mov
push
fcompl
cmpsl
sub
lds
scas
pop
scas
loop
pop
insb
fldenv
jnp
cli
xor
insb
xchg
inc
hlt
add
mov
pop
cli
dec
sbbb
rcl
mov
mov
jno
pop
xchg
stc
mov
scas
mov
pop
pushf
inc
inc
aaa
sub
sub
outsb
pop
mov
mov
popf
movsb
xor
in
jne
mov
rcrl
dec
js
and
pop
xchg
jge
cmp
not
xor
sahf
pushf
cld
mov
inc
sbb
pop
dec
pusha
popf
mov
push
xchg
and
xchg
sub
add
xor
scas
outsb
ja
cmpsb
or
rcrb
push
cmp
dec
outsl
lcall
std
inc
jne
subl
dec
and
add
add
add
add
xor
inc
adc
insb
stos
sub
and
ficoml
arpl
and
push
push
imul
in
xchg
jb
push
mov
sub
adc
jle
test
or
cli
push
fimull
sti
mov
mov
cltd
lret
and
lahf
jne
leave
xor
adc
jecxz
lahf
cmp
loop
adc
bound
scas
mov
mov
adc
call
inc
and
repnz
pushf
iret
mov
cwtl
sub
jae
cwtl
fisttps
stos
ljmp
xlat
lcall
sub
dec
mov
das
mov
lret
icebp
into
xor
or
movsl
mov
inc
inc
pop
dec
dec
jecxz
aas
add
jno
push
je
repnz
cmp
int
mov
mov
mov
in
test
ret
push
mov
clc
cli
out
cmpsl
add
mov
mov
jmp
add
push
int
sub
fdivs
mov
inc
pushf
dec
cwtl
and
cmp
lods
push
add
add
mov
push
sti
jmp
push
mov
notb
test
add
add
shrl
add
add
std
sbbl
and
push
xor
sub
xchg
or
jmp
stos
inc
mov
adc
adc
adc
push
fwait
sub
leave
dec
fwait
test
mull
sti
mov
sbb
jb
mov
sbb
cmp
mov
lock
xchg
inc
sbb
add
sub
std
ret
cmpsb
cmp
inc
mov
int3
jbe
lss
fnstcw
adcb
push
in
push
movsl
mov
orl
xchg
lock
fsts
sbb
dec
addr16
pop
cmp
into
add
adc
int
mov
pop
subl
and
sbb
aam
dec
loopne
fidivs
out
sub
stc
mov
cs
sbbl
push
jp
jb
mov
jecxz
lock
pop
push
sub
add
add
add
enter
lret
push
dec
in
sbb
mov
mov
xor
leave
cmc
mov
sahf
mov
cmp
mov
in
int
mov
roll
sar
mov
imul
sti
pop
jb
lcall
out
push
inc
pop
mov
sbb
mov
sbb
ljmp
imul
sub
addb
les
xor
xor
test
push
test
test
ja
das
stos
hlt
mov
jmp
sbb
sub
cli
mov
mov
add
test
hlt
popa
cld
ficoml
pop
lods
mov
jbe
mov
roll
out
sbb
movsb
sahf
subl
mov
pop
inc
rorl
xor
mov
mov
mov
nop
pop
inc
leave
mov
add
cld
mov
leave
pop
jg
xor
stos
add
add
add
xchg
pop
pop
nop
xchg
out
in
mov
mov
mov
fcmovb
pop
jmp
sub
scas
xlat
in
jp
sbb
pop
push
hlt
ljmp
les
dec
mov
jno
and
aam
push
mov
sbb
sbb
inc
dec
jne
mov
inc
add
cmp
ds
jo
pop
adc
jmp
mov
andb
das
mov
outsb
std
aaa
pop
ret
push
or
ret
mov
jo
test
pop
out
in
or
add
aam
sub
cmpsl
fcompl
jae
mov
jae
cld
imul
add
xorl
jmp
in
adc
mov
lds
jb
adc
ror
pop
call
in
add
nop
movsl
mov
jl
test
lret
lods
lcall
mov
jb
xor
xor
mov
dec
das
pop
out
cmc
mov
testl
add
iret
adcb
push
cmp
decb
pop
cltd
or
loope
push
es
dec
sub
mov
push
shl
movsl
dec
dec
lock
cmc
inc
sub
out
into
scas
imull
cld
mov
jmp
insl
or
xchg
xchg
add
movsb
stos
mov
lods
mov
inc
jns
aas
pop
sub
cwtl
xchg
jmp
xor
bound
mov
roll
in
or
mov
mov
je
jge
sbb
sti
mov
stos
adc
pop
jecxz
scas
or
ja
adcb
icebp
dec
mov
dec
jmp
loop
pop
adc
in
jbe
ss
mov
sbb
movsb
lock
testl
scas
pop
mov
loopne
adcl
das
mov
jp
adc
fcomps
jge
lret
jmp
jae
push
popa
sub
add
add
fucomip
std
dec
std
pop
lcall
xchg
pop
push
aad
sub
lods
add
add
add
mov
test
aas
cmp
inc
cmpsb
repz
aad
push
mov
outsl
loop
inc
xchg
dec
mov
aaa
mov
call
pop
and
cli
mov
mov
push
fsubl
enter
mov
pushf
aad
lret
xchg
movsl
or
shll
or
popf
repnz
mov
dec
insl
fs
insl
xchg
inc
lahf
repnz
cltd
loopne
push
mov
sbb
lock
add
cmp
pusha
mov
enter
and
add
inc
push
fs
inc
in
imul
lret
or
sub
out
mov
pop
sub
test
mov
sbb
push
mov
cwtl
push
sti
mov
icebp
data16
cmp
xlat
addr16
cltd
lods
pushf
jl
jbe
dec
enter
fisttpl
movsl
sbb
xchg
into
movsl
imul
fwait
shll
adc
sbb
jbe
popf
jle
loop
pop
jp
and
shll
add
add
fidivs
loop
ljmp
lahf
and
add
add
addr16
mov
mov
test
mov
sbb
adc
mov
lods
mov
push
idivl
dec
fstp
jns
aaa
das
or
in
popf
movsl
scas
mov
pop
sub
rolb
mov
ficompl
scas
or
mov
push
fbstp
cmp
sahf
scas
cmpsl
cmpsb
pop
popa
lret
call
dec
stos
jg
imul
sub
lcall
loope
jo
jo
and
pop
cli
sub
data16
or
push
fnstcw
cmp
pop
sub
icebp
mov
mov
clc
jge
fwait
jb
ja
loopne
mov
aas
push
ds
sbb
fisubrs
scas
cld
adc
insb
in
mov
fildll
xor
mov
mov
cmp
dec
std
push
push
xlat
lret
push
inc
aaa
pop
and
imulb
inc
jg
dec
fs
inc
hlt
test
push
sarl
sub
jnp
sub
push
xchg
jg
jmp
std
mov
pop
mov
add
add
push
pop
icebp
jge
adc
cmpb
xchg
and
or
mov
jmp
into
ljmp
ret
jge
dec
sub
lods
mov
hlt
lret
mov
jbe
lahf
popa
push
add
jg
lods
pusha
testl
pmulhuw
xor
and
xor
sub
cmp
mov
cmpsl
test
sub
mov
outsb
fsubl
jecxz
data16
or
cmpsl
out
arpl
aam
mov
mov
mov
or
bound
aas
jne
push
dec
loop
shr
test
add
jle
cmpl
mov
roll
and
in
lahf
jnp
add
ljmp
out
jbe
or
lret
sahf
mov
in
xor
pop
test
pushf
int3
inc
in
and
out
and
in
test
aam
xor
xchg
lcall
dec
jne
mov
fcomi
mov
add
xor
inc
mov
cmp
scas
add
add
add
lahf
inc
xchg
cmp
or
ljmp
ficoms
adc
or
mov
fs
cld
push
pop
and
shll
in
xchg
in
arpl
cmc
fidivrl
out
jl
adc
sub
pop
jg
mov
ficoml
sbb
loop
push
outsl
push
fs
out
sahf
xchg
jge
lods
mov
data16
xor
enter
push
xlat
int3
lahf
int3
or
gs
xor
jns
dec
dec
out
mov
gs
fimull
into
pop
push
adc
mov
adc
imul
sbb
std
andb
imul
pop
and
jae
adc
cld
test
cmc
sbb
jle
xor
repz
pop
in
ret
jecxz
inc
out
push
xchg
dec
scas
sbb
int3
sbb
scas
inc
testb
movsl
mov
sub
pushf
cmp
add
push
pop
xor
cmp
inc
call
sbb
add
add
add
add
sbb
test
push
jle
mov
jb
popa
sbb
pop
pop
or
mov
aaa
cltd
dec
in
or
rcl
dec
inc
sub
scas
xlat
lods
bound
mov
or
outsb
out
call
xchg
fisttpll
outsl
fnstcw
out
pop
xor
sub
int
ret
dec
push
test
fwait
jne
jp
test
mov
aad
sbb
scas
out
push
in
xchg
add
sahf
jne
in
shlb
add
mov
in
xor
lds
lods
xchg
icebp
popa
cmp
jbe
frstor
mov
xor
mov
pop
flds
arpl
xchg
out
fwait
bnd
mov
cmpsb
mov
rolb
and
mov
pop
mov
dec
mul
stos
adc
push
dec
int3
pop
ljmp
imul
cmc
icebp
mov
jne
sahf
sbb
or
repnz
sub
add
add
jp
les
mov
arpl
jo
dec
mov
add
add
and
xchg
adc
test
es
flds
jp
pop
pop
sbb
dec
dec
and
lret
in
jle
mov
jmp
xchg
bound
adc
repnz
adc
test
lahf
push
sbb
lea
inc
data16
sbb
js
fsub
mov
or
mov
subl
cmp
inc
push
in
push
cmp
call
cld
jb
popf
int
movswl
inc
cmp
stc
dec
push
addr16
mov
jle
in
cwtl
sbb
nop
roll
insl
cmc
mov
lcall
cmp
iret
stc
pop
pop
add
push
adc
scas
cmp
jno,pn
ja
sub
jp
fcomps
sbb
aaa
call
negl
xchg
in
mov
iret
jp
filds
mov
inc
fimuls
ror
and
cmovno
mov
arpl
lds
sti
mov
add
add
clc
pop
stc
out
push
pop
bound
cltd
push
mov
add
add
adc
sub
icebp
add
test
das
loope
lret
push
int
rcrb
inc
scas
cwtl
xor
sub
int3
js
hlt
cmpsl
jns
imul
testb
scas
add
push
or
push
adc
fiadds
and
jns
or
xchg
inc
sti
fstpt
jl
stc
xchg
jl
mov
push
mov
iret
sub
rcrl
in
jle
xor
cld
cmpsb
xchg
fiaddl
dec
pop
jae
mov
adc
push
jle
jmp
mov
inc
push
jecxz
loop
and
andb
xor
lds
mov
or
lahf
test
sbb
es
sub
test
cmp
xchg
xchg
sahf
fs
mov
jb
fsubrl
and
pop
popa
inc
push
aad
bound
rcrb
scas
clc
sub
xor
stc
adc
cmp
jg
in
add
add
push
mov
lcall
push
push
mov
add
add
cs
xor
push
sbb
pop
stos
ja
getsec
or
sub
sbb
nop
popa
pop
arpl
adc
fs
jb
xor
jo
cmp
das
cmp
rol
fwait
pusha
imul
scas
arpl
int
cwtl
push
repnz
lcall
push
cmp
in
testb
pop
cltd
cmpb
cmp
sub
adc
jo
mov
into
cmc
leave
cltd
outsb
or
stos
test
inc
adc
push
or
lods
iret
xor
test
leave
out
push
inc
out
push
arpl
jb
aaa
mov
xchg
adc
subl
inc
int
cmp
and
stos
pushf
in
cmp
mov
jae
repnz
mov
xor
or
jae
sbb
cli
pop
in
dec
sub
rorb
push
mov
sarl
cmp
out
mov
leave
test
cld
les
dec
add
ja
push
push
stos
jl
mov
xorl
insb
lret
xor
mov
add
add
pop
mov
neg
ja
out
hlt
fimull
popf
jmp
mov
mov
jmp
xor
bound
sbb
add
lock
aas
jecxz
call
fnsave
pop
dec
out
and
jle
pop
popf
mov
jns
movsb
insl
xchg
aad
or
xor
jns
ss
mov
scas
popa
sbb
push
in
pop
popa
jl
and
xchg
in
push
lret
fcomps
idivb
sbb
testl
mov
cmpl
jbe
in
pop
mov
in
enter
sbb
lods
and
movsl
xor
xor
in
jno
insl
js
cli
stc
pop
xchg
cmp
jne
sub
lea
lret
in
dec
idivb
pop
fmull
aaa
pop
push
je
xor
xchg
sub
mov
cmp
pop
adc
cmp
sbb
add
dec
pop
pop
sbbl
fstp
rorl
lods
push
lcall
add
add
scas
cli
aad
lds
roll
js
in
lahf
mov
jb
inc
rcr
ret
pop
mov
sbb
ret
movsb
xor
sub
negb
mov
adc
sub
sarb
add
clc
cld
jo
mov
adc
imul
shrb
in
loopne
mov
dec
dec
lds
aaa
sub
shrl
movsbl
push
add
mov
out
xlat
sti
xchg
gs
push
adc
rcrb
inc
jns
jno
dec
aaa
dec
leave
and
and
lahf
ror
sbb
pop
dec
or
add
stos
pop
fildll
jp
int3
test
xor
leave
inc
inc
add
cmp
lea
stc
xchg
dec
jl
xchg
int3
and
nop
push
dec
mov
jmp
call
mov
ljmp
lock
mov
jl
cs
add
add
in
mov
jecxz
out
mov
jmp
add
add
add
sbb
std
mov
lock
lock
notl
test
push
xchg
cmp
and
lea
mov
jmp
push
cmpsl
jg
adc
cmpsl
movsb
stos
cmp
js
xchg
mov
adc
mov
je
je
rorb
cmp
mov
dec
pop
inc
shlb
loope
pop
push
insl
test
sbb
sub
ss
lock
adc
iret
push
popf
jecxz
fdivr
pop
push
ret
xor
xor
aad
mov
inc
xor
pop
cmp
or
xchg
shll
xchg
jo
xchg
orb
mov
into
gs
cmpsl
or
xchg
push
pop
push
stos
jo
jb
imull
fadds
mov
dec
test
cld
pop
mov
and
add
xor
jl
jo
ss
insl
lahf
pushf
mov
mov
mov
or
dec
and
add
adc
fwait
sub
push
xchg
test
jg
into
lret
orl
add
add
ss
movsl
lcall
xor
jnp
sub
mov
das
cs
xor
mov
jno
cmp
mov
pusha
shll
xchg
aad
sub
cs
push
xchg
add
pop
pop
push
repnz
pop
add
or
je
clc
cmpsl
xchg
ret
fmuls
gs
inc
std
fsubp
sbb
push
mov
jae
in
int
ret
test
hlt
rcrl
test
mov
cld
mov
sahf
aas
jne
popf
mov
sub
stos
icebp
lock
jmp
std
fdivrs
cld
inc
pushf
scas
xchg
cmp
and
in
push
dec
jns
dec
xchg
pushf
scas
in
push
mov
in
js
fucomip
es
pop
sub
pop
insl
add
mov
cmc
cmp
sub
fldt
xchg
jae
mov
push
xlat
jecxz
testl
adcl
sub
mov
test
cld
mov
lock
in
lcall
jae
dec
mov
sbb
add
add
cltd
dec
outsb
test
mov
mov
inc
iret
mov
adcb
push
ud2
es
jbe
test
jg
adc
adc
dec
cmpsl
jg
xor
lea
aaa
push
sub
fdivr
lods
movsb
inc
icebp
add
mov
pop
add
in
ret
in
mov
gs
mov
cli
icebp
shlb
xorb
rcll
sub
xlat
insl
imul
adc
adc
mov
cmpb
gs
and
inc
ss
sbb
mov
pop
jbe
test
sub
jnp
mov
es
xchg
sti
scas
repnz
out
pop
xor
out
fstps
leave
push
jle
pop
xor
sub
test
pop
roll
fsubrl
jp
mov
fisubrs
xor
cmpsb
outsl
mov
outsb
and
cmp
jne
sbb
fiaddl
add
add
sub
jg,pt
dec
arpl
mov
add
add
sbb
popa
out
push
cmpsb
mov
cli
repz
mov
loope
lret
pop
mov
jo
push
xor
add
or
cmpsb
aam
inc
push
jae
xor
scas
mov
cld
std
jne
outsl
mov
sub
sahf
test
or
jmp
pop
lds
xor
iret
mov
test
leave
adc
out
cmc
lea
push
loop
filds
mov
test
movsl
dec
fdivs
shll
mov
rol
sub
push
ret
xorl
xor
cmp
or
test
je
mov
cmpsl
xchg
jecxz
jp
cmpb
fidivs
aas
mov
mov
jg
pop
iret
cmpsw
in
sub
dec
mov
ja
popf
mov
outsl
sbb
pop
and
repz
bound
mov
jmp
mov
pop
lods
fstps
mov
test
mov
insl
sbb
outsl
mov
bound
fidivl
add
add
add
cmp
test
aad
sbb
aad
jae
das
iret
and
mov
pop
wrmsr
lcall
inc
lahf
mov
loope
stc
and
in
enter
lea
pop
fwait
sar
xchg
fst
ss
lret
sbb
pop
inc
xchg
xchg
pusha
inc
pushf
adcl
and
mov
testl
repnz
push
adc
add
notl
outsl
addb
and
jl
hlt
nop
insb
mov
mov
pop
jle
mov
in
push
test
out
lret
div
hlt
push
jmp
sar
ljmp
out
and
mov
xor
xor
mov
xor
adc
dec
adc
mov
loope
rorb
sub
push
lds
push
fs
mov
cwtl
add
repz
aam
jo
aaa
scas
xor
mov
pop
adc
jle
je
add
add
add
mov
cwtl
ret
mov
mov
adc
sbb
pop
cli
push
and
add
sbbl
rorl
stos
loopne
adc
pop
jmp
loopne
add
fstps
and
jp
fnstenv
sub
pop
pop
sub
push
faddl
xchg
arpl
ret
repz
into
repnz
pop
mov
je
jmp
jno
mov
into
es
and
and
inc
clc
jl
add
mov
daa
inc
lret
sarb
jp
and
out
aas
ljmp
les
int3
adc
xchg
addr16
adc
lds
cmp
mov
out
roll
fwait
pop
xor
mov
xchg
shl
jp
mov
jp
lea
inc
ds
fdivrs
out
jno
inc
mov
insb
jo
xchg
outsb
jae
scas
in
ja
enter
fmuls
cltd
stos
adc
popa
popf
shrb
xchg
add
add
fistpll
call
fisttpl
mov
add
add
mov
mov
xchg
sbb
push
std
push
adc
shrb
and
adc
stos
nop
mov
xlat
mov
jl
out
mov
je
int
stos
cmp
xor
xor
pusha
gs
jge
inc
dec
xor
push
je
adc
mov
loop
aaa
inc
ja
repz
dec
arpl
sub
mov
sbb
jecxz
imul
jle
add
cmp
or
ds
jmp
xchg
rcrl
push
sub
dec
cld
sbb
adc
mov
ja
rorb
addr16
sti
mov
push
xchg
push
adc
sbb
xchg
dec
fs
sysret
adc
cmpsl
shll
std
ficoms
cmp
int3
cmp
pop
mov
adc
add
jmp
xchg
stc
out
or
xor
cmp
daa
inc
out
sub
aam
add
add
std
sti
leave
sti
iret
jmp
sub
add
add
mov
push
jne
ljmp
adc
xor
ja
jno
xor
mov
cmp
into
jns
arpl
pop
in
jno
rcrl
mov
xchg
cmc
adc
leave
dec
or
imul
out
adc
cmp
pop
stos
mov
cmp
adc
or
imul
insb
and
mov
stos
in
lcall
cmp
insb
jne
lock
mov
sub
or
jne
repnz
fsubrl
mov
mov
or
mov
push
mov
mov
movsl
push
stos
xchg
scas
in
stc
pop
test
add
push
roll
inc
and
lret
mov
pop
lret
xor
cmp
test
xchg
mov
push
cmp
cld
in
mov
stos
aaa
aam
out
mov
mov
xor
push
push
cmpb
add
mov
inc
jle
ret
js
xor
cmp
xchg
hlt
pop
pop
mov
fwait
jg
test
loop
jnp
inc
pushf
jne
outsl
int3
and
mov
test
lret
add
loope
aaa
jae
dec
call
pop
xor
mov
mov
mov
push
jl
pushf
scas
jecxz
jb
imul
jmp
jmp
je
les
cwtl
adc
jg
jmp
das
hlt
mov
sub
sbb
scas
ja
cmpsl
fs
mov
scas
icebp
jo
add
ret
movsl
mov
movsb
xor
dec
test
mov
sub
adc
add
mov
inc
outsl
xor
pop
aas
ja
repnz
cmp
stos
inc
cld
inc
imul
je
bound
ffreep
int3
inc
sbb
xchg
shlb
adc
sub
mov
fwait
mov
or
jg
mov
sahf
loop
adc
movsb
test
add
mov
addr16
push
adc
es
fsub
adc
stos
pop
and
lahf
add
in
mov
ds
jmp
sub
les
or
mov
inc
in
add
and
jp
pop
cmpsl
mov
dec
lods
add
test
nop
call
push
aas
andl
cltd
sbb
pop
jae
int3
xchg
adc
push
mov
shl
std
mov
addr16
jae
sbb
sbb
test
in
pop
xor
jmp
hlt
mov
pop
xlat
pop
dec
jb
xor
cmc
rcrb
or
sbb
clc
mov
pop
cmp
xchg
sub
jo
icebp
mov
xor
dec
je
jecxz
adc
fidivrs
shrl
lahf
divb
and
in
inc
lret
mov
stos
mov
dec
dec
in
pop
loope
add
leave
les
jmp
outsl
xor
mov
add
xor
push
cld
pushl
cld
sbb
mov
add
add
add
mov
pop
jg
sub
jle
enter
sub
add
push
push
or
mov
imul
rorb
mov
sarl
daa
or
cli
jnp
mov
rcrb
sub
andb
aas
sar
test
ret
enter
je
icebp
xchg
clc
aaa
xor
sti
push
dec
mov
rcr
cwtl
add
jl
ret
out
push
mov
push
mov
pop
jecxz
cmp
lcall
stos
hlt
ljmp
movsl
lcall
shlb
cmp
mov
loopne
inc
mov
sub
mov
jne
inc
insl
std
or
mov
mov
lahf
lock
and
inc
scas
loop
aas
pop
aad
inc
inc
push
or
dec
add
std
mov
lods
xor
add
insl
sub
fiadds
add
add
pushf
shrb
lcall
sbb
sbb
add
add
out
mov
mov
rcll
jg
das
aad
mov
stc
or
sbb
rcrl
cwtl
addr16
mov
sbb
xchg
inc
inc
jmp
push
shll
push
dec
xor
insl
into
push
pop
inc
pop
mov
insb
mov
xor
or
sub
add
mul
sbb
mov
cwtl
cs
loop,pt
scas
es
dec
enter
cmp
push
jbe
shrl
pop
xor
fsubr
lcall
mov
cli
mov
sub
pop
enter
inc
shll
cmpb
sub
pop
xchg
adc
in
sbb
lea
pop
fisttps
bound
cmp
cmp
enter
sub
or
loope
clc
enter
lahf
xor
sub
into
xor
imul
inc
std
mov
xchg
nop
push
cli
jne
jb
or
popf
inc
xlat
push
xor
or
sub
scas
mov
aas
scas
movsl
stc
nop
ret
add
add
mov
pop
or
movsl
sbb
leave
jle
push
adc
sbb
sbbb
inc
sarb
test
cmp
pusha
mov
inc
mov
js
mov
insl
or
sbbl
in
xor
mov
adc
into
lcall
push
pop
or
fs
into
es
sbb
das
sbb
jb
arpl
mov
and
or
mov
shrb
cmp
insl
push
out
imul
jmp
insl
cli
cmp
xchg
xchg
aad
pop
pop
clc
sbb
icebp
clc
pop
push
mov
mov
jge
mov
push
mov
xchg
scas
or
xor
or
sahf
pop
jl
inc
adc
aaa
lods
out
fnstcw
cmp
shll
cmp
jmp
mov
pop
js
mov
pop
sbb
in
cmc
cmp
stc
pop
mov
aas
jg
jne
jne
jg
loop
mov
fists
add
cltd
in
notl
and
pushl
lahf
mov
ret
out
mov
dec
aad
mov
and
iret
push
lea
and
ja
sbb
fldenv
loope
mul
mov
ljmp
inc
push
jne
push
aam
push
add
pushf
out
jge
sub
mov
mov
pop
mov
mov
je
dec
sbb
inc
lahf
addr16
ss
stc
pusha
jge
xchg
sti
mov
loopne
hlt
inc
out
adc
fcmovnbe
jne
es
and
jae,pt
add
movsb
sbb
dec
push
sbb
mov
mov
dec
push
add
cld
mov
or
in
jmp
push
jg
mov
aas
xchg
xor
fiadds
popa
jmp
jae
out
push
inc
movsb
insb
out
xor
and
sub
dec
imull
sbb
mov
cmc
mov
addr16
les
add
add
inc
and
decl
sub
adc
cmp
jmp
inc
mov
fwait
stos
xchg
nop
pinsrw
out
and
iret
fcomi
cmpsb
cmpsl
and
inc
cmc
mov
gs
adc
inc
sub
dec
mov
enter
mov
dec
popa
dec
xchg
pop
hlt
addl
lret
jle
dec
stos
jo
bound
xor
loope
pop
fnstsw
adc
sub
push
dec
in
jmp
test
lret
mov
dec
mov
push
jge
in
cmp
bound
xchg
mov
jbe
cld
inc
jae
xor
mov
mov
clc
and
push
xor
sbb
flds
pop
xlat
dec
or
insb
lods
mov
xchg
lods
aaa
adc
lds
mov
jge
cmpsb
cmpsb
sbb
pop
add
and
into
pop
push
add
rorl
je
ss
push
pop
cmc
in
add
add
outsb
jle
lods
testl
lds
add
add
sub
pop
pop
movsl
jl
pushl
dec
xor
je
adc
lea
das
dec
xor
fsubs
lea
jecxz
movsl
aas
cmp
jmp
pop
in
js
adc
shl
mov
sub
jge
mov
insb
pop
push
loopne
fcoms
popf
pop
xor
cld
rclb
jno
ffreep
outsb
or
and
sarl
aam
xor
adc
dec
push
push
xchg
pop
jb
fs
jmp
jle
arpl
mov
mov
dec
pop
dec
xchg
fmull
xadd
nop
mov
movsb
cmpsb
in
and
jbe
xor
popf
or
fsubs
es
sub
cmpsl
nop
arpl
cmp
and
test
ret
xchg
lods
notb
add
mov
sbb
ret
xor
adcl
pop
ljmp
lds
or
sbb
pushf
lea
jne
lcall
test
test
mov
mov
add
adc
mov
add
add
insb
std
mov
xchg
mov
fwait
dec
outsl
inc
rcl
loopne
jne
repz
mov
add
enter
sbb
rclb
jp
leave
inc
popf
ja
adc
outsl
jns
mov
incl
es
call
push
loop
test
jmp
popa
pop
xchg
enter
cmp
lds
jno
push
adc
mov
addb
jb
xlat
sub
test
add
cltd
xchg
out
out
je
sarb
jns
xor
stos
fisubrl
rdtsc
cld
mov
popa
push
add
push
xchg
faddl
add
out
xor
add
jnp
repnz
stos
mov
sbbl
xlat
push
test
clc
in
aaa
mov
das
lds
aaa
cmp
and
iret
es
repz
add
daa
dec
cmc
je
gs
mov
lods
rcrl
add
test
sbb
xlat
in
aad
and
sub
movl
add
imul
inc
inc
loop
jl
sahf
out
bound
cli
mov
dec
nop
cwtl
pop
js
gs
pop
mov
mov
inc
sahf
pop
stos
rol
mov
or
sub
aad
inc
repnz
push
inc
mov
xor
jb
jle
lods
inc
jo
mov
push
dec
sub
hlt
inc
mov
leave
cmpsb
xchg
mov
scas
shr
xor
mov
add
pop
lock
inc
cmpsl
xor
inc
sub
and
cli
call
mov
sahf
cmp
adc
and
push
insb
cli
outsl
inc
stc
jp
fnstenv
aas
or
mov
push
and
add
add
xorl
adc
lret
xchg
mov
jecxz
and
movhps
xor
test
sub
test
fildll
sarb
in
movsb
cmpsl
adc
pop
inc
pop
dec
pop
pop
call
add
ds
sub
cmp
jg
and
mov
aad
rcl
test
add
add
add
jno
inc
in
jno
inc
jae
test
push
imul
add
repz
fnsave
jle
adc
mov
mov
cwtl
or
test
lret
xchg
iretw
scas
sub
mov
aad
jbe
cmp
xor
pop
mov
push
sub
jno
movsb
ljmp
sub
sub
lahf
or
fstl
push
xlat
shr
mov
push
scas
sub
clc
inc
adc
inc
pop
mov
insl
add
and
negb
pushf
inc
mov
add
xor
push
sbb
pop
bound
jnp
cmp
sbb
in
sub
sub
push
cmp
cmp
adc
mulb
sub
xchg
pop
push
mov
sub
pop
push
faddp
dec
xchg
insb
lret
mov
outsl
and
inc
push
push
ds
push
jmp
xchg
imul
push
cmpb
cmp
add
add
xor
fistpll
out
repz
fcoms
in
loope
adc
add
jb
xchg
xchg
dec
lds
push
sub
loope
lcall
jnp
inc
xchg
loope
pop
sbb
rcrb
xchg
hlt
pop
and
jp
test
in
js
jge
pop
cld
mov
inc
jb
or
mov
lock
pop
dec
negl
loopne
int3
out
pop
sahf
fmull
inc
dec
shll
es
arpl
ljmp
repnz
lods
sub
sub
or
push
sbb
add
fs
test
cld
xchg
enter
inc
adc
cmp
movsl
mov
test
pop
push
stos
leave
popf
jnp
stos
sub
sub
testl
dec
xchg
sbb
sti
cmp
mov
and
mov
mov
pop
mov
popa
inc
adc
std
mov
jae
mov
mov
cltd
and
cs
add
mov
mov
sub
xchg
inc
xchg
jmp
mov
mov
mov
lahf
fstpt
add
add
gs
sub
push
fsubs
inc
lret
push
push
jp
fbld
out
inc
jge
mov
mov
fcoml
push
dec
pop
mov
jb
cwtl
mov
push
cmp
adc
scas
or
repz
mov
mov
mov
push
into
jecxz
stc
insl
aad
insl
sub
dec
das
ficompl
addb
test
mov
pop
and
push
xchg
mov
dec
push
xlat
jno
dec
popw
aam
dec
jo
aad
ljmp
and
inc
inc
popf
xchg
sub
jne
jg
pop
into
les
inc
jbe
push
dec
lcall
push
bnd
adc
imul
dec
mov
scas
cltd
mov
sbb
inc
out
icebp
stos
out
lret
arpl
test
loopne
int
clc
pop
adc
shrb
rcr
jg
leave
or
sbb
or
jecxz
mov
sub
stc
enter
in
sbb
push
inc
in
test
push
add
add
adc
xchg
mov
lcall
fdivrs
fldcw
pop
sub
cld
cli
hlt
out
xchg
sti
in
dec
jg
lock
xchg
inc
sbbl
insb
mov
xchg
notl
add
clc
mov
pop
or
jbe
jl
clc
jne
mov
push
pop
cwtl
aad
sbb
jae
cmpb
cmp
out
shl
mov
aaa
cltd
popf
ret
pop
mov
dec
mov
or
xor
or
push
adc
test
movsl
jge
call
mov
imul
cmpsb
lret
jg
imul
xor
inc
int3
mov
sbb
cltd
movsl
adc
xlat
jb
add
mov
and
adc
jne
cmp
iret
cmp
sbb
mov
ffree
lahf
sbb
push
adcb
adc
xor
shl
aam
dec
xchg
stos
loop
sarl
xchg
imul
add
imul
cmc
call
inc
push
popa
adc
mov
add
add
inc
arpl
loopne
xor
je,pn
mov
dec
add
pop
bnd
dec
dec
and
stc
jne
int3
xchg
test
sarl
dec
pop
out
aaa
sub
sub
inc
jge
jno
dec
adc
pop
sbb
fstpt
in
lret
pop
cmp
fwait
or
mov
out
cmpsb
in
push
jp
aam
daa
out
outsb
dec
pop
in
sbb
icebp
jmp
pop
cmp
das
pop
sub
cmp
mov
push
xchg
fildll
cmpsl
pop
push
scas
pop
jbe
lea
mov
sub
cmpsl
fsubl
and
mov
loop
xchg
push
subl
lahf
cmpsb
stos
or
or
inc
clc
cmp
ret
fs
daa
fdivs
dec
popw
mov
pop
sbb
dec
push
fdivrl
iret
filds
xchg
dec
sub
adc
loope
xor
dec
movsl
mov
iret
sub
pop
sub
mov
add
add
mov
daa
test
inc
hlt
popa
cmp
add
nop
loopne
push
rcr
in
xchg
jno
hlt
dec
enter
inc
ds
les
inc
in
aad
data16
imul
filds
inc
adc
in
fdivl
outsl
jge
clc
xchg
jecxz
jg
leave
mov
sbbl
daa
imul
in
fwait
int
sbb
mov
and
adc
cli
iret
ret
xchg
ret
inc
fdivrl
dec
and
loop
sbb
jae
xchg
xlat
mov
xor
inc
push
cli
and
mov
test
lcall
pop
jge
cmp
dec
inc
xor
pop
sahf
jo
int
push
enter
lods
enter
mov
adc
sbb
imul
into
add
jl
test
mov
rcl
sbbl
mov
out
out
out
into
gs
cld
test
sti
cmp
into
add
add
add
pop
push
fs
adc
xchg
xchg
cmc
mov
and
xchg
dec
sub
and
sbb
clc
or
faddp
std
fdivl
add
sub
sub
mov
sub
aad
push
jno
mov
int3
dec
or
add
test
out
dec
pop
mov
rol
add
xor
lock
call
pop
ds
pushf
jno
cmp
leave
mov
into
cmp
cmpb
iret
je
lret
and
inc
mov
sub
jb
fisttpll
scas
and
loope
xor
movsl
or
popf
ds
fistpl
jno
movsl
inc
fucomi
ja
or
adc
out
sub
xchg
stc
int
lcall
pop
mov
es
fidivrs
push
sbb
xor
scas
and
in
popa
jp
in
fucomi
insl
rolb
or
adc
cmp
sbb
jb
add
add
xchg
and
je
out
mov
movsb
mov
add
add
add
shl
sahf
shr
mov
mov
or
mov
xchg
movb
cmp
sbb
out
jecxz
jmp
std
jmp
sub
xchg
sti
insb
inc
ja
shrb
add
sahf
fucomi
add
cmpb
lcall
test
adc
mov
ffreep
mov
push
adc
jecxz
add
fldl
je
jae
lock
in
and
and
je
mov
pushl
ss
mov
inc
sub
sti
inc
jb
pop
dec
sub
and
xorl
hlt
push
xor
push
dec
iret
pop
lods
lahf
out
jne
sahf
jp
xchg
adc
mov
sbb
arpl
mov
jle
pushf
lods
push
out
pop
repz
jp
shll
ss
and
outsb
xchg
cmp
mov
adc
mov
mov
inc
mov
add
add
dec
daa
dec
das
outsb
imul
push
xchg
in
enter
add
add
mov
addr16
pusha
mov
pop
pop
jl
pop
pop
insb
repz
rolb
fdivrl
mov
subb
mov
jmp
std
add
dec
mov
push
rclb
and
inc
mov
cs
dec
sub
xchg
lock
xor
push
xchg
jnp
mov
mov
lret
test
jecxz
imul
mov
jae
call
add
rclb
and
aad
push
scas
loop
jns
or
pop
imul
stos
adc
hlt
push
sbb
popf
and
mov
mov
int3
pop
arpl
sub
jecxz
cmpsb
or
pushf
mov
int
sub
outsb
ret
mov
fwait
xchg
xchg
fldl
shl
sub
adc
fcomp
lods
lcall
nop
enter
mov
call
out
lahf
ret
or
aam
inc
int3
roll
add
add
xor
dec
push
inc
adc
fstp
inc
fs
test
or
rcll
xchg
lds
cmp
jbe
fimuls
repz
aad
fisubl
xchg
gs
xchg
dec
lret
dec
sahf
push
ror
adc
imul
fcompl
mov
scas
test
loope
in
jnp
not
sti
mov
loopne
mov
sub
fstpl
push
and
bound
stos
jmp
lods
xchg
mov
sbb
or
mov
cmp
add
jbe
out
jmp
mov
divb
shl
mov
sbb
or
ljmp
in
or
sub
or
fdivrs
mov
scas
cmpsb
xchg
inc
aam
mov
scas
mov
jb
or
or
push
andl
in
mulb
xchg
push
dec
push
and
mov
mov
mov
pop
xchg
or
rolb
add
add
stc
sahf
and
cwtl
sub
sbb
pusha
fsubl
or
dec
hlt
mov
cmp
movsl
int
xchg
sbb
aad
mov
orb
push
xor
repnz
fisubs
lods
mov
sub
pop
dec
mov
cmpsl
jne
fldenv
lock
data16
add
pop
sbb
or
int3
cltd
push
mov
movsl
popf
imul
test
mov
insb
jb
inc
sub
and
rolb
mov
cli
divb
das
fistpl
jae
mov
lods
ljmp
add
aam
pop
into
rorb
stos
xchg
shrl
and
in
xchg
popa
repz
add
mov
stc
xchg
sbb
ret
adc
cmp
stos
sbb
mov
stc
bound
push
or
adc
xor
add
sbb
sub
dec
and
roll
add
add
push
int
popa
addr16
ror
fld
cltd
inc
addl
icebp
pusha
mov
testl
mov
and
jge
fsubr
sub
out
xchg
std
inc
sbb
scas
pop
stc
ds
int3
push
mov
xchg
jb
fildll
imul
xchg
or
push
mov
jmp
test
rol
xchg
testb
andb
mov
leave
push
test
fstps
mov
je
mov
jns
or
mov
pop
fs
decl
imul
repz
mov
inc
bound
xor
mov
pop
sbb
and
js
pop
jnp
add
testb
dec
xchg
and
std
out
and
andl
mov
xchg
or
das
jp
cmp
inc
jmp
or
mov
popa
stos
sbb
int
inc
mov
add
ds
jae
jns
cwtl
fcom
add
add
add
cmp
negb
fadd
cltd
jg
mov
aas
xor
outsb
in
dec
jnp
aaa
sub
push
jno
enter
cmpsb
movsb
in
loope
dec
repnz
cs
jmp
sbb
mov
mov
and
fnstsw
fstpt
testb
push
jmp
fcmovu
repz
push
mov
or
xor
and
daa
enter
xchg
pop
pusha
cmp
mov
dec
divl
test
adc
lahf
and
and
cmp
xor
enter
fwait
arpl
pusha
pop
scas
or
push
mov
push
cmpsb
adc
mov
jle
add
pop
jge
popf
mov
lahf
int3
outsl
stc
or
mov
mov
lods
inc
jle
shl
cmc
das
cmp
test
out
xchg
ss
inc
movsb
nop
xchg
xchg
iret
push
aad
dec
inc
or
sub
mov
jae
cld
dec
inc
sbb
xchg
add
add
lcall
jnp
xor
add
add
adc
cs
aaa
pop
mov
fildll
cmpsl
sub
lret
out
fbstp
repz
and
pop
adc
data16
push
and
and
ja
stc
mov
call
scas
jns
in
push
int3
or
shl
ds
and
insb
into
mov
andl
in
sbbl
cmp
cmp
imul
dec
gs
or
loopne
inc
cmp
sahf
bound
rorb
push
xlat
ss
mov
je
jmp
leave
add
pushf
lret
mov
xchg
add
cmp
or
dec
adcb
ret
mov
mov
ds
sbb
les
add
mov
push
shlb
test
iret
mov
mov
les
out
jo
pop
das
mov
dec
xor
orl
dec
shrb
add
add
xchg
ja
push
jg
leave
or
xlat
addr16
loopne
add
add
add
lahf
inc
cmpsl
jns
dec
push
cmp
stc
inc
fcmovnb
mov
stc
or
jns
cltd
and
mov
mov
xor
hlt
stc
shll
in
cltd
xlat
xor
cmp
push
daa
pop
jnp
dec
rorb
andl
or
sbb
int
test
sub
mov
push
xchg
inc
inc
cmp
cmp
adc
repz
mov
push
aam
test
pop
cmp
push
ret
add
inc
sbb
push
pop
mov
jns
mov
add
xchg
call
xor
nop
dec
imul
ja
jl
sti
stos
jge
mov
nop
les
sbb
sub
cld
cmp
loop
pop
inc
push
aas
or
dec
pop
add
mov
rcll
ljmp
dec
movsl
sub
std
test
pop
jae
nop
inc
fnstsw
mov
xchg
clc
mov
adc
mov
imul
xchg
movsb
popf
cmpsl
in
add
add
add
or
mov
scas
cmp
nop
push
dec
cmp
cmp
mov
push
pushf
and
and
ficoml
sub
add
push
and
jns
cmp
cmpsl
stos
notl
cltd
mov
adc
xchg
mov
pop
xchg
pop
jns
sbb
or
iret
jnp
lea
or
jge
ss
int3
push
push
loope
jmp
xchg
and
clc
dec
jb
fld
jp
mov
into
rolb
cltd
jbe
mov
push
push
fadd
dec
mov
and
jae
movsl
lds
pop
test
lea
and
jb
fists
repnz
leave
lods
xchg
sbb
int
daa
jne,pt
add
iret
ret
push
adc
lods
sbb
mov
loope
je
push
aad
xchg
and
outsb
fs
ret
call
cmp
mov
xor
inc
outsb
imul
in
ficoms
andb
out
fldcw
push
in
sub
jp
fadds
add
add
add
std
pop
xchg
jae
xchg
sbb
push
gs
or
sbb
xchg
jno
in
cmpsl
jmp
imul
jo
lahf
push
rcl
mov
frstor
xchg
mov
clc
int
ljmp
cmp
jae
cmpsl
pop
ja
mul
pop
sti
sub
cld
aam
cmpl
or
cld
lock
pop
push
cmp
mov
dec
or
fcomps
pushf
mov
hlt
into
and
rcrb
pop
insb
ja
push
add
lock
cmp
sub
xchg
ja
mov
pop
xchg
pop
mov
pop
js
dec
stos
cmpsb
out
fisubs
ljmp
pop
or
insb
in
push
ret
mov
into
adc
sub
adcb
adc
aad
les
movaps
mov
hlt
and
outsb
lretw
in
pusha
cmp
sahf
mov
or
out
out
push
lret
xchg
subb
add
in
sbb
sahf
cmc
fsubrp
jnp
sti
enter
dec
ret
add
add
add
sbb
add
fmul
cmp
mov
dec
lahf
xor
lret
rcrl
cs
dec
lea
movsl
shl
jp
xor
push
push
push
mov
std
inc
stos
rcr
ljmp
cltd
ja
push
xor
fs
xchg
nop
pop
stos
data16
pop
scas
sti
das
mov
dec
shl
xor
sbb
adc
inc
std
sbb
ja
add
push
out
dec
lret
fldt
out
jle
and
sahf
adc
lea
es
lret
pushf
mov
sbb
fdivrp
and
sub
jne
mov
fnstcw
lahf
js
sbb
lret
scas
ret
push
mov
xchg
pop
testl
dec
dec
jecxz
add
mov
push
push
es
xchg
scas
xchg
sbb
and
sbb
mull
xchg
jne
cmpb
clc
jnp
dec
int3
out
add
jg
add
pop
dec
jle
jg
std
fstpt
loopne
shl
fiaddl
add
add
pop
mov
negb
mov
or
ficoml
shrl
test
in
jae
fdivs
dec
add
pop
int3
xorb
pop
bound
mov
pop
mov
or
xor
inc
lods
jp
pop
or
call
xchg
add
outsl
scas
sbbb
inc
mov
push
cs
push
aad
das
xchg
xchg
out
test
nop
or
fdivrl
scas
inc
adc
push
lock
inc
jp
jne
cmc
cmp
mov
ja,pt
loopne
lret
lock
scas
mov
test
fisubrl
push
push
pop
divb
imul
cltd
jecxz
cltd
loop
loop
pop
jle
mov
pop
or
xor
int
sub
testl
and
xor
dec
shll
enter
outsb
and
push
daa
fmul
sarb
and
lcall
les
xor
mov
add
add
mov
sti
idiv
lods
pop
sbb
fs
hlt
fildl
add
add
mov
mov
lds
xlat
je
sti
test
nop
loopne
and
repz
push
les
fwait
push
mov
test
cmp
fistpl
jl
out
inc
mov
dec
mov
pusha
nop
push
xor
icebp
cs
adc
jg
xchg
les
aam
test
push
loop
add
push
and
push
mov
mov
adc
sub
pop
push
jae
cld
xlat
pop
icebp
or
mov
xor
sub
jp
push
fimuls
popf
es
push
leave
xlat
repz
dec
cmp
dec
ja
or
pushf
pop
xor
xchg
pop
or
cmpsb
pop
or
push
ljmp
loop
cmp
inc
std
cmp
inc
jecxz
mov
jae
mov
shlb
lods
das
xor
mov
pop
adc
jl
fmull
das
cmpl
add
adc
leave
jmp
scas
inc
call
clc
faddl
add
add
mov
sbb
dec
pop
or
int3
popf
or
dec
add
and
mov
adc
vpsubw
and
imul
pop
addr16
dec
adc
add
inc
mov
jmp
push
aam
bound
clc
iret
or
daa
in
scas
in
add
jnp
adc
inc
mov
sub
dec
insl
mov
xchg
and
dec
leave
mov
lds
or
jecxz
push
adc
xor
jmp
mov
jne
xor
jl
cmp
xchg
mov
jne
fistpl
and
loop
jmp
movsl
mov
aad
mov
std
ja
mov
jle
test
shrb
imul
xor
repnz
popa
in
mov
fnsave
push
stc
add
xchg
mov
shl
lcall
pop
gs
cmp
cmpsl
fimull
faddl
es
add
add
into
rcll
icebp
loop
xor
lret
xchg
sbb
push
lods
sub
cmp
mov
dec
xchg
das
int
push
dec
fdivrp
sbb
inc
xlat
sub
cli
sarl
inc
test
cld
add
jne
nop
mov
mov
fnsave
fldt
fwait
pop
cli
mov
cmp
adc
cmp
adc
push
lahf
sub
in
scas
subl
mov
clc
mov
mov
stc
mov
mov
loope
scas
insl
movsl
shr
lret
sbb
jl
nop
mov
mov
clc
lods
xchg
ja
std
push
xor
rcrb
stos
jno
orl
int
lret
mov
mov
hlt
push
rcrl
inc
cmc
mov
popa
xchg
subl
mov
adc
sbb
insb
push
jno
dec
add
pop
or
popa
sti
fildl
dec
jl
push
pop
lret
aam
leave
into
mov
add
add
mov
lcall
fisttps
or
add
add
add
add
add
push
mov
xchg
popf
or
popf
jns
xchg
jne
aam
pop
dec
push
jae
dec
sahf
push
icebp
push
pushl
pop
add
ret
insb
in
sahf
pop
push
ljmp
ret
mov
mov
jae
mov
enter
pushf
or
out
cld
scas
mov
mov
pop
ljmp
pop
or
dec
push
lds
xchg
sbb
xchg
cld
pop
aad
adc
mov
mov
lods
outsl
inc
mov
mov
mov
sub
imul
insb
bound
stc
or
rcr
pop
xchg
iret
xchg
out
adc
fisttps
cmpsl
loopne
pop
jmp
and
cmp
ss
dec
outsb
xchg
enter
ror
or
mov
xchg
inc
dec
dec
pop
movsb
push
pop
imulb
or
aas
adc
stos
std
fyl2xp1
xlat
lahf
lods
xor
sbb
add
sbb
jns
xchg
xchg
mov
bound
imul
add
add
pop
xlat
cmp
sub
push
inc
stos
hlt
xlat
dec
push
pop
rcrl
testb
inc
insb
xor
adc
inc
arpl
mov
aaa
popf
mov
sbb
pop
notb
mov
mov
and
sub
jns
popf
and
jnp
jo
mov
ret
mov
repz
cmp
add
mov
repnz
dec
inc
enter
mov
mov
out
fistpl
dec
fistpl
add
and
mov
aad
out
aam
push
push
in
ja
divb
or
sbb
cmp
mov
js
sbb
inc
xor
adc
xchg
sahf
adc
push
inc
mov
jp
or
xor
jecxz
out
or
insl
lea
scas
paddd
pop
mov
pop
es
and
inc
scas
fldcw
insl
sbb
add
jae
fadd
fsubp
jnp
or
cld
les
inc
xchg
or
add
add
add
mov
sbb
or
sti
add
sbbl
mov
pop
cmp
pop
push
mov
mov
call
push
and
sbb
mov
sub
sbb
mov
adc
cmp
xchg
pop
push
dec
fnstenv
ds
pop
or
jp
pop
xor
sbb
mov
or
das
lcall
popa
and
movl
sbb
adc
ficomps
pop
jbe
pop
cmp
xlat
mov
scas
sarb
pop
dec
lahf
add
jae
lds
aas
and
mov
xchg
test
add
out
mov
scas
sub
mov
dec
jmp
aas
insb
stos
fiaddl
xor
cmp
jmp
push
faddl
ffreep
pop
jg
cmp
mov
adc
mov
stos
mov
das
and
mulb
push
xchg
jecxz
iret
out
outsb
orl
push
dec
add
add
push
cmp
sub
cld
cli
jle
dec
nop
xor
cld
or
add
add
add
adc
pop
mov
push
ds
fwait
shl
cmp
push
fdivrs
stc
aas
mov
int
stc
mov
or
jg
cwtl
pop
insl
cmp
out
sub
lret
jns
xor
insb
fs
jae
pop
mov
jmp
add
fnstcw
xchg
inc
sbb
push
pop
jmp
rol
mov
lahf
in
mov
adc
dec
cmp
mov
aad
dec
pop
notb
mov
push
jl
pop
mov
or
and
mov
iret
xor
incb
int3
lahf
loopne
inc
sub
adc
xchg
incb
jnp
fnstsw
cmc
xor
dec
cmp
in
push
or
fsubl
or
test
in
xchg
adc
push
out
cwtd
push
das
sub
inc
mov
les
add
cs
pushf
repnz
icebp
leave
test
or
adc
hlt
add
push
shrl
mov
xchg
lret
fadds
lea
pop
jbe
ja
sti
aaa
out
ja
fisttpl
daa
adc
add
add
add
imul
mov
jmp
imul
aas
and
enter
aad
out
or
cli
jge
lret
mov
dec
dec
nop
push
mov
inc
insl
jl
cmp
pushf
xor
sbb
pop
pop
fyl2xp1
nop
mov
or
cmpsb
cmp
cmp
lret
inc
subl
inc
or
xchg
pop
xor
xchg
sub
push
sbb
bound
or
sti
xchg
push
insb
xlat
push
mov
fwait
add
pop
and
rcr
sub
xchg
or
push
push
xlat
jle
cli
mov
jge
leave
push
mov
out
dec
cmpsb
jne
sub
cmp
insb
fsubrs
daa
loop
jno
pop
cltd
sub
adc
movsl
lret
add
or
mov
push
mov
ljmp
mulb
mov
out
sub
push
fisttps
add
into
arpl
pop
xchg
aaa
pushf
enter
adc
add
add
add
sbb
fisttps
stos
addl
das
mov
popf
and
cmp
cmpsb
xchg
out
jb
fcomp
shrl
cmpsb
cltd
sub
jecxz
mov
push
xchg
subl
subl
add
or
filds
add
jecxz
add
insl
loop
dec
xor
mov
outsl
enter
lods
mov
clc
fstl
lret
enter
lds
or
repz
dec
and
or
fdivrl
add
movsb
js
stos
pop
sbb
fimuls
sahf
cmp
in
pop
push
and
dec
into
or
repnz
jns
ret
int3
push
lock
sahf
ds
aaa
dec
imul
insb
mov
xchg
cmpsl
fsubl
pop
andl
andb
cmp
fcomps
xchg
das
stc
push
pop
ds
xor
sldt
add
cltd
cmc
adcb
fcos
pop
mov
sub
in
add
add
test
idivl
cmpsb
sub
xchg
loopne
out
cmp
cmp
jle
inc
pop
sarb
daa
pop
add
out
jbe
repnz
cmc
adc
ja
lock
mov
jmp
xchg
sahf
push
ret
out
imul
inc
mov
imul
cmpb
aas
sbb
test
xor
fldt
add
sti
jns
addr16
and
cltd
int3
iret
dec
mov
decl
fcomp
sub
nop
push
in
sub
stc
cmp
push
scas
mov
dec
cmp
adc
mov
aaa
xchg
mov
ret
stos
jo
inc
es
loop
hlt
push
cmp
ficoml
or
jle
arpl
es
push
hlt
out
nop
insb
ja
frstor
cmc
xchg
jg
ret
mov
out
cwtl
insl
repz
lock
jg
in
and
sub
sbb
add
add
add
aas
incb
int
push
mov
add
mov
or
std
jno
addb
pop
icebp
cmp
adc
jge
lds
pop
fsubs
test
cmp
push
test
test
sahf
inc
aas
shlb
jl
inc
lods
test
je
dec
cmp
mov
xchg
pop
outsb
mov
mov
sub
repnz
enter
iret
aam
inc
cmp
adc
int3
cmp
clc
mov
fildll
addr16
push
fisubrs
add
mov
pop
push
jbe
sub
rorl
adc
xor
dec
and
fcmovnb
push
jo
cwtl
mov
mov
mov
mov
dec
or
adc
into
and
cmc
fldcw
add
rcrb
pop
stos
cmp
cmpl
xchg
fwait
cwtl
pop
popf
pop
xlat
fistpl
and
cld
and
add
add
add
mov
push
dec
pop
push
add
sti
pop
mov
and
ja
push
enter
aad
mov
in
sbb
push
cmp
sbbl
loop
inc
jo
pop
mov
cmp
dec
adc
xor
or
adc
cli
xor
loope
pop
or
enter
repnz
mov
mov
stos
repnz
mov
aaa
bound
insl
shl
sbb
jle
mov
sbb
sub
cmp
jbe
fwait
inc
xchg
xchg
xchg
mov
pop
mov
test
ret
rcll
fiaddl
push
xchg
sub
dec
insb
test
imul
xchg
dec
popw
mov
xchg
out
lock
sbb
cli
sub
ror
push
cmp
pop
jle
mov
fs
enter
sbb
iret
pop
scas
adc
sub
pop
jle
jno
pop
das
xchg
testl
add
add
mov
dec
js
stc
mov
dec
int
mov
mov
add
add
xor
inc
push
dec
jmp
das
adc
push
icebp
pop
inc
outsb
xchg
mov
and
jb
or
or
dec
push
ja
dec
mov
push
jne
insb
push
out
adc
cmc
jge
stos
mov
push
inc
out
daa
xchg
dec
andl
mov
push
sbb
mov
pop
mov
push
outsb
clc
ja
cli
ljmp
mov
cmp
popf
sub
int
mov
adcl
fistpll
jmp
mov
faddl
arpl
jb
cmp
lds
add
xlat
sub
add
data16
shrl
into
pop
sbb
incl
aas
mov
out
outsb
enter
test
out
jecxz
mov
rolb
sub
ja
inc
mov
pop
std
jb
add
insb
shll
loopne
jge
and
pop
pop
xchg
or
add
add
insl
repz
fwait
jns
jns
sub
je
jmp
add
jnp
out
xchg
xor
or
test
ljmp
xchg
xchg
loopne
inc
iret
cld
dec
das
pop
dec
dec
mov
jne
mov
outsb
adc
lcall
shrb
fisubrs
mov
stc
shrl
jbe
xchg
test
sbb
aaa
test
insb
dec
cmpsl
js
icebp
out
add
iret
in
mov
pop
clc
cltd
add
shr
jg
pop
xchg
pop
repz
inc
out
cmp
jbe
jmp
xor
sahf
fisubl
test
jne
ss
gs
ljmp
inc
xchg
cld
movsb
xor
jbe
imul
hlt
bound
pop
pushf
ror
aad
sbb
inc
jmp
mov
jo
sub
ret
orb
jb
icebp
call
sti
ficomps
jg
pop
jl
sub
sub
int
push
js
xor
mov
movsl
pop
mov
lods
test
fisttpll
add
add
mov
pxor
jnp
adc
jne
dec
orl
add
add
arpl
xor
cmp
popa
scas
mov
fiadds
xlat
mov
daa
ffreep
xchg
push
mov
fimull
xchg
outsb
push
das
inc
push
push
mov
je
in
cmp
loopne
mov
cwtl
mov
jp
out
inc
xor
push
iret
cld
jo
test
ja
ret
dec
or
or
loopne
vpmullw
xchg
fimuls
and
and
mov
xlat
xchg
cmp
ljmp
sub
arpl
lahf
std
xchg
or
orl
sub
sub
add
mov
fmull
cltd
jp
hlt
insb
fistl
faddl
sarl
push
cli
push
loopne
jb
fldenv
and
xchg
mov
test
cmpsl
xchg
add
sbb
xor
arpl
insl
xor
cmp
insl
test
iret
loopne
sahf
cmpsb
jae
cmc
sldt
add
out
lods
xor
aas
xlat
fistl
das
adc
mov
xor
add
add
add
outsb
and
xchg
loopne
loope
xchg
xor
inc
inc
inc
arpl
out
inc
mov
xchg
xchg
sub
inc
stos
dec
mov
add
and
jecxz
adc
pop
cmp
mov
test
jmp
mov
push
pop
sbb
mov
cmpsb
addr16
repnz
jmp
mov
stos
les
out
push
sbb
sub
pop
cmp
nop
daa
pop
lods
ljmp
mov
cli
sahf
out
out
xchg
mov
mov
test
dec
push
inc
arpl
mov
test
push
xor
pop
lcall
push
bnd
xchg
dec
jmp
sti
sti
mov
in
pop
clc
sub
add
add
xchg
mov
and
and
adc
cmp
aam
mov
xchg
loope
add
insb
mov
mov
add
sub
ljmpw
add
add
jb
scas
decb
fisttps
test
mov
in
add
add
add
adc
je,pn
cmpsl
cmpsl
sub
xlat
iret
jb
cmp
and
fisttpll
loopne
pop
nop
js
mov
fstps
cmp
movsl
jne
ret
jecxz
jno
and
int3
and
mov
inc
or
sbb
daa
addb
div
xchg
jo
push
push
lcall
inc
test
pop
push
xlat
lods
mov
or
fidivrl
add
out
shll
adc
insb
scas
mov
or
fiaddl
repnz
xchg
mov
shlb
dec
and
rcrl
arpl
fistpl
sub
cwtl
sub
shlb
ret
or
lcall
sarl
add
mov
test
jne
fldenv
out
shlb
or
daa
sahf
mov
inc
lea
mov
test
add
xlat
mov
xchg
insl
dec
popa
pop
cmp
add
add
add
adc
jae
dec
inc
pop
cmpb
fs
push
xchg
mov
and
jle
out
repz
test
add
outsb
and
mov
mov
xchg
das
outsb
stos
inc
sub
test
adc
lcall
scas
xchg
sbb
sub
pop
mov
gs
ficomps
popf
add
xlat
ficoms
lret
adc
scas
xchg
adc
cld
dec
push
jns
jmp
mov
es
dec
and
mov
jmp
sbb
jmp
mov
shl
mov
mov
stos
pop
fwait
sub
and
mov
mov
sub
add
in
mov
push
mov
lods
mov
test
sub
ss
xor
xor
xchg
dec
scas
xchg
xchg
pop
out
les
jne
dec
mov
push
mov
in
loopne
bound
push
leave
jp
inc
jecxz
cmp
xchg
jp
lods
cmp
lods
aas
mov
aad
cmp
add
add
add
and
jno
jp
ds
dec
filds
es
or
inc
imulb
stc
imull
jno
xor
insl
cmp
or
negl
or
jecxz
shlb
mov
sub
imul
test
sbbb
sbb
es
cmc
sbb
jae
fistpl
mov
jnp
jp
fdivrl
out
mov
jge
gs
sub
xchg
test
out
mov
jmp
neg
test
add
inc
aad
dec
add
adc
and
mov
mov
add
clc
fimuls
test
xchg
ja
arpl
push
xchg
xchg
jbe
out
lock
lock
cwtl
pop
mov
mov
loopne
es
loopne
mov
xchg
out
test
cmp
rorl
mov
fwait
out
add
sar
mov
add
mov
sti
mov
in
push
addl
add
jge
in
ficoms
inc
mov
push
add
stc
inc
orb
xor
push
push
ds
out
adcl
or
sbb
xchg
out
test
and
shl
or
push
pop
dec
cmp
into
and
lds
lock
add
dec
dec
xchg
lock
pop
jmp
inc
add
xlat
xchg
das
clc
xchg
movsl
jne
xor
loop
js
jns
add
sub
incb
xor
movsb
jge
inc
and
sub
mov
push
push
push
mov
jnp
xor
or
inc
push
push
test
push
jecxz
inc
push
pop
das
stc
mov
shlb
movsl
xor
cmp
add
inc
mov
inc
ret
cltd
jecxz
adc
or
push
mov
dec
or
call
mov
jo
cmp
sahf
outsl
xor
fsts
shl
sbb
add
push
cmp
adc
neg
jge
xchg
jns
adc
mov
lock
add
add
jl
insb
dec
ret
inc
push
aad
sbb
dec
arpl
dec
outsl
cwtl
repz
xor
xor
inc
clc
outsl
mov
push
jecxz
inc
inc
or
mull
lods
stos
movsl
sbb
imul
pop
jg
mov
jbe
push
adc
xor
stos
adc
inc
mov
dec
iret
test
fsubrl
cwtl
push
jno
inc
jbe
xorb
and
mov
add
mov
xorb
out
sbbw
addr16
dec
inc
sub
add
jmp
imul
pop
mov
es
lods
mov
leave
in
lods
push
cmp
xlat
sub
xor
xor
cmp
out
shlb
out
jnp
pop
and
insb
mov
pop
xchg
sub
pop
aaa
stc
adc
ljmp
and
hlt
jg
mov
int3
xchg
cmp
xor
mov
cld
popf
addl
add
pop
cmp
outsl
jg
jg
sub
fidivrl
icebp
add
add
add
xor
fwait
test
sub
sub
int3
jmp
insb
push
mov
push
in
sbb
mov
sbb
mov
sahf
cmp
dec
and
inc
add
pop
jo
cs
lea
push
movsb
sub
mov
sti
mov
and
mov
inc
pop
inc
mov
sbb
lods
imull
call
repnz
mov
mov
lea
xor
cmp
sti
cmp
push
out
loopne
js
pop
jl
cmpsl
cli
mov
gs
push
inc
pop
sub
jo
cmp
inc
test
jbe
out
imul
mov
popf
add
xor
sub
lods
push
push
pop
mov
scas
imul
cmpsl
cmp
xchg
ss
mov
sahf
insb
or
les
pop
jecxz
loopnew
add
pushf
add
jo
dec
and
ret
ja
and
aaa
divl
lods
or
dec
repnz
add
add
mov
ds
nop
mov
out
add
nop
xor
movsl
jo
lods
jg
adc
mov
xchg
popa
mov
cmp
mov
jp
iret
test
inc
shl
fisttps
add
stos
fiaddl
push
adc
push
dec
cli
inc
iret
and
mov
jle
mov
sbb
adc
les
mov
jge
mov
outsb
inc
and
fisttpll
arpl
pop
test
inc
in
aad
jnp
pusha
mov
push
xlat
pop
pusha
sbb
dec
fadd
cwtl
inc
mov
xor
mov
fwait
adcb
lcall
test
jg
mov
lea
daa
ljmp
out
test
mov
adc
hlt
push
pop
jmp
fidivl
idivl
aam
dec
xor
stos
jb
cmp
mov
mov
pop
ja
xlat
adc
or
mov
ret
rcrb
cli
insb
daa
mov
jae
add
add
mov
cmc
mov
imul
add
add
hlt
xchg
ja
cmp
mov
xor
scas
and
add
cmp
mov
test
stos
cmpl
push
pusha
js
sub
push
and
test
dec
clc
imul
shrl
loop
sti
and
xor
in
xchg
or
inc
ret
leave
clc
lahf
dec
rorl
ja
or
cmpl
fiadds
jnp
xchg
stc
fildl
or
je
aaa
xor
mov
inc
pop
sub
xchg
xlat
popf
jnp
add
stos
fsubrl
mov
std
decb
sti
ja
gs
inc
or
stos
mov
jae
push
sbb
dec
mov
sahf
inc
sti
sub
sub
and
xor
jns
xchg
aam
mov
or
xchg
push
pop
sbb
bound
stc
adc
sub
lret
add
add
jne
pusha
popf
pop
orl
hlt
add
add
add
jb
pushf
and
jl
mov
in
pop
mov
call
fldl
xor
sub
adc
push
in
call
lock
adc
xor
xchg
enter
das
outsl
bound
adc
mov
and
in
sahf
lods
shll
inc
lret
in
out
cld
in
repnz
lds
setns
mov
inc
push
inc
rol
aaa
mov
cmpsl
outsb
xchg
test
mov
repz
idivl
mov
into
mov
ret
add
push
inc
push
fs
andl
push
in
and
loope
sti
mov
es
je
dec
cltd
add
lds
movsb
outsl
ja
inc
fcoms
xor
fs
xchg
pusha
push
loop
int3
xchg
or
jg
jg
push
inc
fidivs
lahf
lcall
cwtl
dec
pop
test
add
add
imulb
mul
xor
iret
pop
cmc
add
add
add
leave
incl
and
fldenv
arpl
xor
mov
ja
push
fsubrl
cmc
push
inc
ret
push
jl
or
push
mov
mov
enter
mov
or
lods
rcrl
push
outsl
mov
jecxz
jns
mov
push
xchg
pop
dec
push
inc
repnz
es
ret
sub
cwtl
add
inc
pop
int
add
cmp
jns
fwait
push
mov
lahf
xor
mov
rcll
in
mov
in
std
repnz
imul
fcmovb
mov
mov
gs
or
sub
ret
movsb
stc
xor
cmp
js
add
in
lret
dec
cmp
scas
adc
mov
push
dec
push
aam
mov
imul
add
and
dec
or
mov
test
add
xchg
lcall
pop
iret
inc
cmp
ret
add
xor
jb
jae
movsl
push
cmp
pop
testb
add
add
push
hlt
es
xchg
enter
ss
gs
push
into
ljmp
aad
inc
test
pop
insl
or
pop
mov
cmp
imul
lahf
sbbb
mov
add
stc
arpl
pop
lods
mov
ljmp
xchg
sub
and
mov
xchg
imul
call
icebp
sub
aam
and
test
jmp
sub
test
jmp
aas
arpl
mov
xchg
push
aaa
mov
int
mov
ja
cmp
pop
sbb
mov
ret
mov
cli
cli
cmp
call
cli
mov
divb
jno
pop
inc
in
test
and
push
xor
cld
sub
mull
cltd
mov
loope
mov
fadd
dec
mov
jg
les
outsl
dec
je
jp
test
sub
pop
mov
loop
ss
pusha
cmp
ljmp
add
adc
int
in
idivl
js
mov
inc
in
cmp
add
add
add
clc
rclb
mov
std
jb
stc
negl
add
or
aam
push
inc
jnp
adc
rcl
lds
mov
ret
gs
jae
mov
negl
imul
out
aaa
mov
push
aaa
cmp
dec
adc
jmp
fildll
push
lds
adc
mov
loope
or
fbld
push
sahf
fstpt
push
and
mov
lds
cltd
xor
inc
dec
ja
xchg
imul
stc
neg
dec
ljmp
xchg
sbb
loopne
add
dec
xchg
insl
scas
lods
into
jns
int3
jo
cmp
xchg
sbb
shl
fs
inc
popf
pusha
shrl
aam
sti
jle
pop
xchg
int
xor
xor
and
sub
cld
shrl
sti
rol
into
push
and
and
lret
adc
push
gs
pop
es
inc
cli
aas
into
lret
cmp
add
add
push
out
mov
ficoml
sbb
sbb
jno
pop
mov
ret
test
int
pop
xchg
sub
xor
lods
pop
rep
xorb
addr16
mov
int3
xchg
cmp
testb
cmp
sub
orl
dec
inc
inc
and
push
repz
add
in
pusha
xchg
or
popa
insb
dec
faddl
das
mov
cmp
outsb
stc
dec
xchg
mov
icebp
movsl
jnp
rcr
cmpsl
aad
stos
sbb
inc
imul
mov
adc
rcrb
pop
add
push
jne
in
cmp
dec
and
loop
sbb
inc
push
aam
and
ss
push
dec
xor
and
xchg
mov
test
rcrb
ficoms
sbb
test
rcrl
fistpl
xor
inc
and
cwtl
insb
mov
lcall
dec
imul
add
sar
dec
pop
mov
mov
pop
cmp
orl
cmp
jmp
cwtl
sub
repnz
outsl
mov
lods
mov
outsb
xchg
lret
test
scas
inc
loopne
jnp
lahf
aam
pop
jecxz
dec
daa
data16
dec
or
and
mov
push
mov
lds
stos
aad
clc
sub
jno
sbb
sbb
insl
movsb
rorl
call
and
aam
jge
lds
int3
or
clc
mov
push
jne
lods
rorb
push
fsubrl
sbb
mov
sbb
inc
stos
push
lret
push
adcb
decb
lcall
fisubrs
pop
push
lret
jb
roll
cwtl
xchg
loope
mov
in
fnstsw
mov
and
das
push
pop
popa
push
aam
lcall
subl
or
testl
add
add
jae
cltd
dec
mov
jno
insl
jnp
xor
cli
add
add
add
je
in
les
xchg
shl
test
pop
out
fsubr
fimuls
or
fdivr
fcomip
rorl
aas
or
dec
fisubl
sti
xor
inc
xchg
xchg
add
or
leave
mov
xchg
jb
imul
aas
inc
cmp
int3
insb
add
inc
out
lret
dec
push
push
scas
push
push
cmp
or
pop
pop
movsl
pop
xor
xchg
pop
cmp
jno
xor
jb
or
mov
xchg
dec
jne
cmpsb
cmp
adc
out
push
icebp
inc
push
stos
sti
sbb
xchg
lods
out
leave
repz
xor
dec
inc
and
mov
jno
fs
fistps
fdivr
loop
out
lea
and
rol
dec
mov
push
xor
loope
aaa
mov
push
pushf
jnp
push
cmp
mov
cltd
lcall
repnz
ljmp
aam
add
jle
cmp
das
enter
jle
add
ds
into
nop
out
cwtl
jle
push
sub
dec
push
jae
xor
add
add
add
daa
sub
cmp
xchg
add
es
lods
sbb
dec
inc
imul
loop
pop
mov
imul
lret
sub
pop
popa
cmc
ret
xchg
xchg
sahf
call
stc
sbb
pop
imul
sahf
lea
mov
sbb
xchg
and
push
or
cmpsb
add
ret
add
xlat
addl
pop
pusha
jns
push
push
cmp
mov
repz
popa
dec
inc
cs
adc
mov
add
xor
lcall
lods
hlt
mov
push
orb
aad
pop
add
repz
mov
mov
jns
pop
fs
fisubrs
lock
cli
das
addr16
pushf
nop
mov
inc
push
or
xor
dec
jl
pop
sub
lds
sti
mov
jno
test
jg
push
pop
push
mov
je
add
add
add
mov
dec
cmp
mov
xchg
push
sbb
jmp
cs
int
lcall
push
jno
test
mov
jbe
sbb
xor
mov
insb
jmp
sub
and
jge
xchg
xor
xchg
imul
scas
fsubs
inc
lcall
mov
add
xor
cmpsb
xchg
sbb
stc
ja
jmp
fisubl
mov
subb
xchg
imul
movsl
xchg
sub
jge
pop
clc
jmp
in
loope
pop
and
cmp
aaa
sub
mov
cmp
mov
add
test
cmp
jnp
repnz
lea
xor
cld
adc
push
lcall
cmp
jno
or
sbb
mov
xor
and
fwait
cld
inc
test
inc
int
push
ja
sbb
repz
and
pop
aas
cwtl
inc
pop
loope
daa
xchg
rclb
adc
movsb
push
in
cmc
jne
sbb
js
cmc
mov
add
add
sbb
movsl
xchg
sub
mov
ret
cmpsl
pop
jns
fiaddl
addr16
dec
mov
jnp
adc
jbe
pop
cwtl
xor
dec
dec
lds
inc
jmp
cwtl
xor
jge
xchg
or
shlb
or
fbstp
sbb
cmp
shlb
or
ja
sbb
out
pop
and
and
pop
enter
pop
loop
fwait
adc
dec
cltd
inc
test
inc
lret
data16
movsl
xor
xchg
sub
out
sbb
clc
inc
cli
add
popf
std
jg
adc
sti
mov
out
push
jbe
mov
jl
fstpt
das
out
leave
aam
inc
inc
into
fadds
sahf
mov
sysexit
clc
mov
out
or
adc
pop
mov
jg
icebp
nop
adc
movsb
add
ljmp
lcall
movsb
and
add
push
aad
imul
insl
add
add
add
out
shlb
aas
out
int3
mov
shll
adc
add
add
mov
outsb
jnp
push
test
push
ficomps
insb
or
daa
stos
mov
loopne
sbb
inc
sti
shll
push
adc
add
dec
inc
ljmp
mov
push
rorb
das
mov
jle
das
pop
xchg
out
xorl
pop
and
push
sbb
add
adc
pop
jp
imul
jle
jbe
sti
dec
mov
sub
psubusw
sbb
xchg
and
mov
cmp
or
lods
shl
sbb
andl
fstps
aaa
xchg
mov
cmp
xchg
sub
repz
jp
out
and
gs
pop
add
pop
pushl
mov
jb
inc
lods
lcall
dec
insb
add
mov
lret
xchg
test
mov
and
out
push
jb
hlt
test
or
mov
and
daa
cmp
add
add
mov
cmp
arpl
das
pop
jno
or
cmp
mov
dec
clc
xchg
jae
jmp
xchg
leave
dec
xchg
jge
aaa
sub
ret
xchg
inc
scas
vandps
cwtl
nop
mov
xchg
stos
add
dec
pop
cmp
mov
xor
xor
jecxz
sbb
jmp
lea
hlt
mov
or
and
and
mov
or
add
pop
out
sub
sbb
pop
ret
cmp
andnps
xor
xchg
jmp
loopne
invd
add
or
cmp
dec
insl
or
test
aad
nop
adc
repnz
push
je
add
lahf
sbb
add
xor
addr16
cmpsb
inc
mov
lcall
clc
call
pop
jnp
in
pop
rcrb
dec
rol
lret
clc
cmc
inc
stos
repz
and
xor
add
add
mov
cs
jb
cmpsl
mov
add
dec
fs
xor
out
or
jnp
test
push
cmpsb
and
sti
push
fld1
xlat
jmp
sbb
sahf
mov
mov
and
jp
lret
jb
sti
out
cmpsb
sub
mov
mov
mov
jae
and
inc
scas
pop
and
loopne
ret
cs
loop
cwtl
lods
ljmp
out
inc
mov
cwtl
sub
sahf
xor
mov
daa
push
mov
fcomp
rcl
popf
or
jp
push
and
in
stos
xchg
push
pop
sub
pushf
icebp
mov
pop
sbb
push
push
dec
pop
inc
push
xor
loopne
sbb
pop
ss
or
aad
push
shlb
mov
ja
lea
ds
sbb
add
mov
imul
xor
dec
jmp
add
std
aaa
mov
shll
ljmp
add
jp
shll
out
imul
or
cmc
dec
leave
loopne
adc
test
inc
call
or
fnstsw
add
lret
adc
sbb
roll
rcll
jge
ss
sarl
or
mov
inc
test
and
adc
sti
xlat
int
adc
push
lods
cltd
jl
js
daa
hlt
cmp
inc
shl
adc
jns
int3
push
gs
lret
pop
jae
les
call
mov
xor
cmp
pop
clc
popf
xor
repz
or
dec
pop
xor
in
sbb
cmp
sbb
mov
sbb
inc
jno
inc
push
fiaddl
pushf
mull
rcrb
jnp
adc
pop
les
and
cltd
add
enter
xor
movsl
cmp
mov
mov
adc
sub
add
add
insl
aam
mov
scas
add
andl
add
add
add
sbb
and
pop
and
imul
repnz
out
sub
xchg
lcall
sahf
test
and
add
in
dec
push
mov
dec
sbb
inc
cmp
adc
inc
pop
in
fs
test
jmp
inc
jns
dec
mov
jp
imul
imul
and
or
add
add
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
lret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
call
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
push
decl
mov
test
add
xor
add
mov
or
inc
mov
arpl
sub
incl
lea
or
incl
mov
cld
add
xchg
fdivr
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
add
push
decl
push
mov
call
mov
cld
add
test
loop
ljmp
fsub
add
mov
add
add
adc
add
push
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
call
out
test
in
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
add
add
inc
inc
mov
decl
add
inc
fmull
inc
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
fsub
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
jb
add
push
fildl
mov
inc
add
or
inc
call
jge
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
enter
mov
xor
add
xchg
call
mov
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
loopne
sub
int
sub
inc
push
cmp
movaps
cld
faddl
jne
push
loopne
inc
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
daa
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
int3
inc
inc
add
add
xor
pushf
lea
add
inc
mov
xor
add
mov
fmull
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
add
xor
cmovge
add
jmp
jb
add
xor
xor
add
clc
int3
add
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
enter
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
in
scas
inc
mov
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
in
jge
sub
mov
mov
mov
mov
in
ror
push
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoms
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
enter
mov
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
int3
pushf
add
add
add
clc
int3
inc
add
push
pushf
mov
enter
aas
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
enter
clc
incl
cmp
pushf
pop
lods
incl
mov
rcrb
test
sbb
add
push
loopne
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
loopne
test
xor
mov
rolb
inc
add
clc
inc
lret
mov
loopne
lret
into
into
scas
dec
mov
sub
cmp
mov
enter
add
xor
xor
lret
mov
inc
add
mov
xor
mov
in
add
bswap
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoml
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
jmp
ror
or
add
not
adc
inc
push
mov
push
mov
in
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
add
push
clc
xor
add
hlt
or
mov
hlt
dec
add
mov
add
leave
push
push
mov
fcoml
inc
xor
iret
cld
lret
loopne
mov
mov
mov
cld
jne
movb
add
test
inc
incl
mov
cld
add
leave
xor
in
mov
inc
add
int3
cld
jne
call
mov
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
and
call
in
jmp
je
call
and
call
and
push
or
pop
mov
and
mov
and
mov
jne
test
decl
sbb
jl
adc
dec
mov
mov
and
xor
or
add
clc
jmp
adc
inc
je
and
je
mov
decl
sbb
add
add
adc
mov
adc
add
add
adc
sub
add
imul
add
aaa
inc
add
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
adc
add
jo
add
pop
adc
push
adc
add
insb
adc
jb
adc
shll
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
jge
add
or
add
sub
add
insb
adc
addr16
add
adc
lds
add
cmp
pop
cmp
sbb
inc
add
cmp
and
inc
add
cmp
sub
inc
add
cmp
cmp
adc
clc
cmp
add
pop
adc
mov
adc
add
adc
cmp
shll
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
adc
fwait
pop
adc
jnp
adc
pop
adc
popf
jno
add
inc
adc
sbb
add
cmp
xchg
cmp
fwait
cmp
lahf
cmp
mov
cmp
stos
cmp
scas
cmp
push
xor
aaa
pop
inc
dec
xor
push
add
xor
pop
inc
push
pop
dec
xor
push
add
cmp
xor
xor
pop
inc
add
dec
cmp
xor
pop
pop
xor
inc
add
inc
pop
cmp
push
inc
xor
xor
inc
inc
inc
cmp
dec
inc
add
push
xor
push
aaa
dec
pop
xor
dec
add
inc
xor
push
pop
push
inc
add
xor
cmp
push
push
push
pop
inc
push
push
add
inc
pop
pop
push
inc
pop
inc
add
cmp
inc
xor
pop
pop
cmp
inc
xor
dec
add
pop
cmp
xor
cmp
dec
dec
cmp
pop
dec
xor
xor
pop
inc
push
inc
inc
add
cmp
push
inc
xor
pop
dec
dec
ss
pop
push
cmp
pop
push
dec
add
inc
cmp
dec
xor
inc
xor
xor
push
add
xor
push
cmp
ss
pop
push
inc
xor
dec
inc
xor
dec
pop
push
add
inc
add
pop
add
add
add
xor
add
add
push
add
xor
add
inc
add
xor
pop
add
add
xor
add
xor
add
push
add
dec
add
push
add
push
add
pop
add
dec
add
push
add
pop
add
add
dec
add
cmp
pop
add
add
add
add
add
push
add
cmp
add
add
push
add
add
add
inc
add
inc
add
push
add
dec
add
add
dec
add
inc
add
dec
add
add
add
push
add
add
push
add
add
pop
add
add
inc
add
add
push
add
add
push
add
dec
add
add
aaa
add
add
pop
add
inc
add
xor
push
add
push
add
add
push
add
add
add
inc
push
xchg
bound
aam
mov
sbb
add
push
cmp
addr16
bound
outsb
pop
je
ja
imul
js
jp
jns
jp
je
jp
jo,pn
bound
