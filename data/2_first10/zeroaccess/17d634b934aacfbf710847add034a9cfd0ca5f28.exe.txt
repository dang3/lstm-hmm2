add
add
call
add
add
add
add
add
add
add
add
mov
mov
or
dec
add
add
add
movl
cmp
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
pushl
mov
mov
cld
ljmp
mov
add
incl
xlat
lea
inc
ljmp
incl
aaa
add
test
pandn
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
rorl
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
add
test
ljmp
mov
fcom
add
mov
add
add
addr16
add
push
inc
push
fisttps
test
add
jecxz
roll
inc
jle
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
enter
incl
in
xor
mov
cld
jle
mov
add
mov
decl
add
inc
das
mov
cld
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
lds
add
push
cs
add
mov
test
add
incl
jmp
faddl
jge
adc
mov
lahf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
inc
ret
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
jp
add
mov
inc
lret
inc
iret
jb
mov
enter
cmp
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
fadds
xor
mov
clc
enter
mov
test
clc
incl
aas
mov
test
clc
pushf
inc
pushl
cld
pushf
inc
mov
insl
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
cmp
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
lahf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
lahf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
lahf
shll
lret
or
add
in
push
mov
popa
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
lahf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
cmp
rolb
clc
popa
jb
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
cmp
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
popa
xor
mov
popa
xor
orl
fsubs
int3
lea
push
cmp
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
cmp
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
lahf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
lahf
shll
lret
or
add
in
push
mov
popa
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
pop
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
lahf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
sar
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
adc
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jle
inc
xchg
mov
mov
or
inc
inc
mov
cld
loop
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
loope
push
push
incl
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
ret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
jmp
inc
jmp
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
xlat
ss
aas
loope
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
cmp
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
andl
lret
mov
add
lret
pushf
and
pop
rcr
test
clc
add
cmp
pushf
add
add
inc
push
rcrl
inc
fsts
mov
nop
rolb
mov
add
pop
add
or
mov
add
call
add
add
push
inc
orb
leave
dec
dec
add
call
clc
inc
inc
mov
enter
mov
xor
xor
or
sbbb
int3
test
clc
inc
mov
fmuls
sub
add
leave
cmp
pushf
mov
jl
add
add
or
test
clc
or
cmp
sbb
mov
xchg
pop
add
mov
add
mov
mov
mov
xor
add
inc
jge
mov
xor
add
push
jne
mov
decl
add
cmp
push
inc
inc
add
add
mov
mov
mov
sbb
inc
add
push
clc
add
mov
jne
mov
add
add
lea
lea
xor
ret
mov
add
push
inc
inc
add
test
jne
mov
mov
push
pop
inc
decl
rclb
xor
addl
mov
push
jbe
mov
ret
dec
inc
jmp
mov
cld
push
mov
add
push
push
inc
jmp
add
add
inc
ret
mov
mov
sub
mov
mov
rolb
inc
add
inc
add
clc
inc
ljmp
xor
add
mov
mov
inc
fdivs
loop
add
add
ljmp
add
add
add
mov
dec
incl
test
sbb
add
mov
add
and
dec
mov
dec
call
inc
add
cmp
inc
add
jb
mov
cmp
lret
mov
test
andnps
decl
inc
add
mov
inc
hlt
mov
xchg
add
xor
add
mov
mov
mov
push
push
inc
mov
call
inc
adc
decl
aam
push
add
xor
lcall
cmp
test
clc
inc
and
mov
cmp
je
mov
add
sbb
dec
dec
mov
mov
add
add
jne
mov
cmp
jb
mov
mov
mov
inc
je
push
add
push
mov
in
shlb
test
call
inc
inc
rorb
jmp
mov
mov
loopne
sbb
inc
inc
push
lea
lea
or
js
mov
incl
call
inc
add
decl
test
mov
add
add
incl
data16
push
rorb
incl
inc
add
decl
mov
add
add
xor
cmp
jbe
lea
mov
jae
mov
decl
add
call
add
mov
jb
incl
mov
sbb
push
je
incl
data16
test
lea
cmpsl
movw
mov
lea
js
incl
mov
pop
jmp
add
out
pusha
out
call
jmp
inc
add
in
mov
addl
mov
data16
addl
push
in
dec
inc
add
mov
in
incl
sub
incl
jle
leave
add
test
push
addl
outsl
in
add
test
ljmp
data16
inc
inc
xlat
cmp
jle
leave
icebp
inc
add
mov
fdivp
mov
in
test
inc
inc
mov
cld
inc
out
rclb
inc
mov
mov
sub
jne
movl
int3
inc
add
lea
xor
add
inc
adc
test
add
movb
jl
add
mov
mov
sbb
add
loopne
adc
or
inc
loop
xor
or
jle
inc
add
adc
repnz
xorb
adc
dec
repnz
mov
adc
call
adc
inc
push
flds
mov
fcmovnb
xor
sbb
addl
inc
mov
sbb
xorb
add
decl
add
incl
mov
lret
enter
inc
jne
mov
mov
mov
mov
ud2
xchg
xor
dec
mov
sbb
cmp
push
pop
adc
andb
mov
push
mov
adc
loope
inc
inc
fildll
mov
inc
subb
ljmp
lea
xor
mov
stos
mov
push
test
mov
push
ret
mov
sbb
rcl
inc
inc
int3
mov
cwtl
movl
ljmp
jmp
inc
or
rol
dec
adc
incl
add
push
push
add
test
or
jmp
pushl
add
push
loope
jae
jmp
andl
mov
sbb
addb
mov
incl
push
pop
clc
mov
orb
mov
lea
inc
ljmp
pop
inc
mov
mov
rclb
incw
lea
stos
add
mov
adc
pushl
decl
dec
push
loop
adc
call
mov
sbb
loopne
cmp
dec
mov
sub
inc
mov
xor
test
decl
add
push
add
mov
jbe
test
inc
push
addl
pop
add
ret
decl
mov
mov
cwtl
mov
test
rorb
lea
mov
push
decl
pushl
call
lea
mov
mov
mov
inc
dec
mov
xor
decl
call
lea
incw
cmp
decl
jmp
inc
jmp
dec
lea
jge
mov
lock
mov
mov
roll
push
str
xor
add
add
inc
rdpmc
mov
dec
inc
add
mov
data16
jne
push
adc
jne
ljmp
call
or
mov
mov
addl
mov
add
push
xor
dec
mov
mov
jl
push
mov
rcl
mov
mov
push
ret
push
pop
leavew
inc
sbb
in
xchg
push
shl
addl
mov
cwtl
or
setl
inc
add
test
xor
add
xor
mov
test
movb
adc
add
roll
mov
incl
ljmp
adc
jne
call
mov
push
sbb
inc
test
dec
add
dec
inc
mov
add
add
adc
and
jp
sysret
pop
add
cmp
sub
dec
mov
ret
clc
mov
addl
jnp
pop
add
xorl
adc
jge
mov
cld
test
add
add
negb
add
pop
add
add
inc
test
mov
fisttpl
mov
push
add
test
add
add
mov
add
add
mov
call
or
dec
or
inc
dec
addl
scas
dec
add
lock
mov
call
rclb
xor
adc
mov
mov
nop
rolb
mov
push
or
xor
sti
cmp
dec
test
or
ret
or
pop
add
xor
inc
mov
push
inc
mov
or
sti
dec
sub
cld
mov
mov
add
jne
cmp
jns
pop
jge
cmp
cld
inc
iret
or
jae
xor
jmp
mov
lea
mov
in
testb
jge
add
mov
cmp
hlt
adc
jl
clc
js
pushl
mov
clc
add
mov
call
inc
popa
jge
cmp
xor
rcrb
push
or
push
sub
in
add
fistl
sbb
test
inc
mov
cld
je
cmp
rorb
adc
mov
sbb
push
inc
mov
add
or
cld
mov
jge
xor
mov
hlt
iret
pop
inc
jbe
cmp
adc
push
add
dec
divl
sbb
mov
test
je
mov
or
cmp
jbe
mov
or
jg
add
dec
add
je
mov
mov
mov
adc
jmp
xor
pop
rcrb
ret
cmp
push
cmp
cld
xor
cmp
pushf
or
add
pop
mov
push
add
push
adc
push
xor
mov
in
dec
add
nop
iret
add
push
dec
lahf
mov
add
add
cmp
je
add
mov
pop
mov
lahf
fbstp
add
pop
pushf
mov
xor
ud0
add
add
or
dec
inc
mov
xor
mov
mov
fdivs
push
or
inc
imul
loopne
sbb
jg
inc
jne
mov
adc
fiadds
jne
mov
clc
test
xor
xor
mov
cld
jb
add
adc
rcr
add
add
pmaxub
dec
decl
xor
add
cmp
hlt
mov
faddl
xor
add
cmp
clts
jp
decl
xor
add
jne
mov
xor
lea
jb
add
add
add
add
adc
pop
mov
hlt
add
jmp
incl
xor
in
push
inc
mov
hlt
add
orl
mov
fcompl
enter
add
mov
in
and
mov
mov
cld
pushf
dec
lahf
xor
add
mov
cld
add
xor
pop
mov
cld
sbb
dec
mov
jne
mov
fadds
mov
push
fdivs
decl
lcall
inc
inc
xor
add
cmp
mov
fadds
mov
test
lahf
push
xor
out
mov
or
in
sbb
add
jne
mov
mov
cld
test
lahf
fbstp
ret
call
xor
add
mov
cld
dec
mov
cltd
inc
inc
mov
cld
lea
xor
add
inc
je
mov
cwtl
movb
add
sub
lock
mov
aam
ljmp
mov
in
inc
mov
cld
jmp
rorl
mov
fadds
add
xor
add
pop
hlt
pop
push
ret
mov
mov
cmp
fadd
test
jne
decl
mov
xor
add
clc
jne
add
xor
lea
add
jb
add
inc
jne
add
or
inc
scas
aas
mov
jne
mov
or
icebp
lahf
shll
mov
lsl
cmp
cltd
mov
add
mov
call
jge
sub
xor
jge
xor
add
mov
xor
add
jne
xor
jmp
mov
cld
mov
clc
leave
xchg
or
push
mov
cld
in
icebp
jnp
add
jae
sub
inc
call
pop
call
xor
add
ret
xor
inc
loopne
jne
mov
push
jge
xor
in
test
add
mov
xor
xor
add
cmp
mov
xor
add
cmp
mov
add
add
or
ja
mov
cld
pop
stc
mov
in
jge
mov
or
icebp
add
jae
add
push
jne
mov
repnz
cmp
xor
clc
pop
repnz
out
pop
testl
pop
add
pop
jge
xor
add
cmp
fdiv
test
clc
mov
rcll
stc
or
mov
in
lahf
jne
mov
or
lahf
xor
add
mov
mov
lock
push
inc
jne
mov
in
mov
clc
repnz
decb
mov
cmpl
clc
call
hlt
add
clc
inc
jne
mov
clc
test
xor
mov
in
xchg
roll
sbb
cld
clc
pop
add
add
mov
mov
or
add
test
add
mov
sbb
rclb
add
add
mov
and
cmp
pushf
or
rcrl
xor
mov
add
inc
inc
mov
add
cmp
inc
push
mov
mov
lock
xor
mov
cmp
cmp
clc
ret
dec
inc
xor
inc
add
add
dec
mov
cld
mov
cmp
pushf
dec
mov
xor
mov
cmp
push
mov
add
incl
mov
in
inc
or
rclb
add
push
inc
call
leave
push
add
mov
or
jo
cmp
add
add
mov
or
mov
cmp
roll
mov
dec
dec
sbb
cld
mov
test
cmovne
test
add
into
xor
add
mov
faddl
mov
nop
into
add
mov
mov
invd
mov
mov
mov
push
push
cmp
fmuls
call
rcl
rcl
call
inc
jne
jmp
sbb
dec
or
mov
sbb
dec
and
push
add
cmp
je
push
and
add
or
inc
adc
inc
and
push
push
sub
push
mov
sbb
dec
mov
add
jge
add
mov
mov
cmovne
xor
xor
or
roll
dec
add
dec
jbe
mov
cld
mov
bswap
push
lret
xor
mov
and
or
daa
xchg
push
push
adcl
push
xor
add
decl
sbb
rolb
and
mov
enter
mov
push
add
add
addl
mov
rorl
mov
inc
dec
mov
inc
mov
call
or
mov
inc
push
mov
into
mov
mov
lea
mov
push
xor
mov
sub
mov
loopne
lret
push
dec
mov
lods
xor
add
mov
xlat
dec
sarb
jne
mov
fsub
add
xor
in
mov
hlt
mov
mov
in
jb
push
inc
push
jle
leave
cmove
lods
add
mov
or
xor
mov
orl
into
in
lret
xchg
gs
add
mov
fsubs
inc
lea
push
lea
fadds
mov
inc
add
mov
fmul
rorb
add
inc
inc
je
mov
sbb
add
add
jmpw
or
lret
jne
mov
in
add
lret
mov
sbb
inc
call
and
and
inc
test
add
rorb
data16
call
ret
test
inc
orb
sub
stc
test
mov
lea
call
pop
add
xchg
add
add
push
cmp
fdivs
add
lea
test
je
mov
decl
push
add
inc
sbb
push
or
mov
cmp
mov
inc
pop
add
add
push
decl
or
adcl
push
jno
add
push
clc
sar
xchg
add
jne
mov
mov
sub
rolb
loopne
dec
mov
mov
call
add
add
add
add
jmp
xor
pop
lcall
ret
mov
mov
add
push
and
adc
add
dec
or
sbb
cmp
pop
push
add
mov
and
xchg
add
add
cli
loope
shlb
dec
ret
sub
pushf
inc
mov
or
test
clc
incl
cmp
pushf
jb
add
add
mov
hlt
inc
data16
mov
jmp
mov
or
inc
add
mov
mov
mov
add
sbb
jne
sub
lahf
mov
and
add
lock
test
add
push
inc
in
mov
ret
push
test
add
inc
shlb
pop
add
loopne
inc
pop
xor
mov
fdivrp
pop
mov
hlt
addl
cmp
lock
add
add
push
or
add
data16
lock
jge
mov
test
data16
add
andl
mov
jne
mov
inc
or
lock
mov
mov
in
or
mov
call
sbb
push
mov
lock
pop
jne
mov
retw
minpd
str
jne
xor
mov
cld
add
add
sar
mov
mov
lock
es
mov
clc
jne
jge
mov
or
add
push
xor
add
add
mov
or
mov
add
mov
mov
or
fisttps
clc
ja
mov
or
lahf
sti
add
add
fbld
pop
mov
or
mov
hlt
add
mov
or
mov
or
mov
mov
adc
stc
mov
mov
or
mov
or
add
cmp
mov
xor
mov
add
jge
mov
pop
clc
cmp
data16
mov
xor
pop
jge
mov
lock
jge
ltr
add
hsubpd
data16
jge
mov
dec
xor
minpd
data16
jmp
mov
sarw
mov
jb
add
pop
mov
clc
jne
data16
jnp
pop
inc
add
data16
data16
add
pop
icebp
sbb
jne
mov
call
mov
in
data16
repnz
xor
inc
mov
call
add
ret
jge
mov
mov
add
data16
mov
add
mov
add
data16
pop
test
pushf
add
into
fistps
push
mov
mov
mov
push
repnz
lock
jne
mov
cld
mov
xor
mov
mov
push
sub
mov
mov
add
dec
cmp
jne
mov
mov
stc
jge
data16
xor
data16
lock
inc
data16
pop
add
rorb
inc
mov
in
sarl
pop
or
push
mov
mov
or
cmp
je
mov
mov
add
push
mov
mov
pushf
sub
add
xor
dec
str
cmp
int
mov
xor
mov
xor
lret
push
add
push
add
cmp
sti
mov
mov
cld
add
data16
roll
mov
lret
in
add
pop
lret
ret
enter
pop
movl
pushf
call
add
in
add
mov
clc
xor
mov
cmp
je
push
pop
sysenter
leave
dec
popa
jle
popa
mov
int
mov
lret
add
jne
lea
add
ret
inc
xlat
add
add
or
ret
add
jne
lea
add
lret
mov
add
mov
cmp
repz
xorb
inc
inc
add
cmp
pushf
push
je
xor
mov
andl
add
in
push
mov
add
mov
clc
mov
or
ret
or
or
lret
add
mov
adc
iret
mov
add
dec
push
mov
add
rcrb
add
ret
jne
mov
xor
mov
test
clc
fs
mov
pop
sub
add
xor
xor
add
cmp
jne
cmp
clc
pushf
pop
mov
push
xor
mov
psubsb
icebp
lea
testb
sarl
xor
mov
adcl
add
inc
sub
mov
addl
orl
cmp
mov
decl
dec
mov
mov
mov
xor
mov
push
leave
mov
push
test
lahf
in
xor
mov
clc
test
cmp
pushf
dec
mov
in
mov
push
icebp
add
roll
add
roll
cmp
pushf
dec
movl
clc
or
xor
pop
dec
dec
lea
add
dec
inc
sub
orl
cld
adc
scas
or
pop
xadd
jb
add
inc
sub
mov
lock
icebp
add
clc
pop
mov
data16
add
xor
add
lea
add
add
inc
adc
dec
mov
mov
mov
lea
add
inc
in
incl
leave
add
push
roll
sbbl
sarb
jbe
mov
or
push
mov
mov
jne
jmp
mov
push
pop
mov
add
xor
sub
mov
inc
inc
mov
dec
lahf
xorl
orl
leave
jbe
mov
in
inc
in
mov
or
dec
inc
data16
pushf
mov
mov
cld
test
push
inc
mov
lahf
pop
xor
mov
inc
or
sar
dec
lea
in
decl
mov
cld
inc
inc
inc
mov
jmp
mov
mov
push
lahf
xor
add
inc
cmp
pushf
std
xor
inc
fadds
inc
mov
inc
lahf
xorl
cmp
mov
clc
sub
inc
call
pop
inc
lahf
pushl
adc
std
dec
decl
inc
push
call
add
xor
add
add
inc
cld
add
mov
orl
test
clc
inc
inc
mov
mov
inc
or
shlb
jne
xor
pop
add
ret
je
push
mov
mov
mov
in
inc
orl
pop
test
xor
mov
add
add
mov
or
add
xor
inc
inc
add
xor
add
mov
sub
lret
mov
jae
lea
xor
jne
or
or
pushw
jne
cmpxchg8b
mov
add
data16
call
cmovge
xor
add
sub
or
add
inc
cmp
mov
subl
enterw
shlb
pop
or
mov
dec
inc
data16
push
jb
jmp
incl
mov
or
jo
test
jmp
incl
mov
pop
lock
push
dec
mov
dec
ror
rolb
dec
lock
pop
in
cmp
clc
xchg
cmp
jne
xor
jmp
mov
jne
call
mov
add
inc
jne
mov
mov
mov
add
stos
add
mov
les
xchg
iret
add
inc
jle
out
cld
add
xchg
add
push
pop
add
paddq
xchg
add
adc
test
incl
incl
rorb
decl
inc
inc
incl
data16
rclb
mov
lock
jle
mov
mov
jge
mov
adc
enter
dec
or
mov
lods
ja
mov
pop
lea
inc
clc
inc
outsb
lea
push
inc
mov
pop
mov
jae
cmp
adc
pop
inc
sbb
mov
or
cmp
mov
cld
xchg
add
add
lea
adc
or
faddl
push
add
push
inc
add
push
adc
mov
fdivr
cli
dec
add
add
add
xor
cmp
mov
lock
rcl
pop
add
pop
dec
cmp
mov
add
push
dec
in
mov
push
pop
mov
add
add
add
inc
mov
hlt
push
decl
push
add
pop
or
jns
ret
jmp
mov
in
jge
sysexit
cmp
cmp
sbb
pop
add
jae
mov
lcall
mov
mov
fdivs
xor
movl
add
push
ret
mov
jne
mov
faddl
xor
push
or
icebp
incl
rolb
inc
stc
mov
lock
add
dec
add
mov
call
sbb
mov
pop
jge
lea
add
or
leave
fadds
dec
add
xchg
add
mov
mov
or
dec
pop
mov
ljmp
add
inc
or
dec
add
test
push
ret
lea
pushl
mov
sub
add
clc
mov
add
dec
push
xor
xor
in
add
inc
jmp
xor
mov
adc
xor
jne
mov
mov
hlt
pop
add
in
push
in
dec
push
xor
pop
pushf
dec
mov
mov
in
dec
addb
add
mov
test
dec
push
mov
mov
clc
into
dec
lret
lock
test
push
jge
push
enter
dec
cld
jmp
pushf
inc
mov
sub
int
mov
mov
adc
enter
jmp
xor
mov
or
call
ds
or
rorb
push
inc
in
mov
or
lock
test
clc
rolb
cmp
add
mov
xor
xor
sub
jmp
mov
lock
mov
push
icebp
xor
mov
enter
add
cld
scas
add
dec
mov
xor
xor
add
add
test
mov
adc
je
xor
xor
add
add
rorl
enter
icebp
or
lock
enter
lret
or
mov
cld
bswap
pop
mov
in
hlt
pop
jne
xor
xor
jbe
mov
clc
pop
mov
mov
clc
mov
adcl
inc
in
cmp
add
inc
cld
cmp
hlt
inc
test
clc
hlt
inc
test
clc
pushf
push
push
inc
inc
fdivrs
xlat
pushf
mov
mov
xor
mov
xor
add
pavgb
test
dec
inc
mov
cld
xlat
enter
lret
add
leave
jne
mov
enter
lret
scas
out
jmp
mov
cld
add
xor
jmp
xor
add
rorl
dec
mov
cld
lea
mov
mov
xor
enter
stc
add
call
pop
xor
sub
enter
inc
in
xor
clc
cmp
cmp
pushf
call
mov
loopne
inc
test
clc
add
push
mov
push
inc
push
mov
mov
mov
xor
mov
sbb
ljmp
mov
mov
xor
xor
mov
hlt
bswap
roll
xor
mov
xor
call
enter
mov
lock
inc
mov
inc
inc
enter
inc
mov
mov
roll
add
push
into
in
movb
dec
or
xorb
add
add
in
push
inc
mov
adc
push
xchg
popa
iret
dec
lahf
mov
clc
add
cmp
jne
addl
or
or
push
dec
jnp
dec
xlat
mov
call
lsl
cld
sti
lahf
mov
mov
clc
iret
dec
lret
xor
lea
dec
inc
mov
mov
int
sub
lock
mov
in
cmp
xor
jne
mov
in
dec
mov
nop
add
pop
mov
mov
ret
mov
mov
mov
dec
add
jo
push
inc
jne
mov
push
pop
ret
push
inc
xor
add
jnp
jg
ljmp
inc
mov
push
cmp
dec
xor
cmp
jne
orl
jmp
mov
push
add
add
add
cmp
mov
sbb
mov
xor
mov
cmp
cmp
adc
test
cmp
pushf
sbb
add
add
dec
jnp
mov
rolb
iret
or
cmp
xor
or
xor
add
mov
inc
inc
mov
mov
mov
cmp
dec
decl
inc
mov
or
sbb
inc
inc
mov
or
dec
push
dec
inc
rclb
push
inc
decl
rolb
inc
inc
mov
sbb
inc
push
xor
lea
cmc
xor
add
mov
inc
inc
mov
ret
inc
add
adc
test
clc
inc
inc
mov
push
adc
test
mov
sbb
dec
ret
sub
add
xor
lea
lods
jb
add
sar
cmp
pushf
add
add
mov
test
clc
inc
inc
cmp
mov
or
bound
clc
lea
xor
lea
mov
or
dec
imul
incl
inc
add
pavgb
movl
clc
iret
inc
lock
lret
fmull
mov
test
mov
loopne
inc
loopne
inc
loopne
xbegin
adc
jb
mov
inc
inc
push
mov
incl
mov
loopne
rol
test
dec
push
decl
push
mov
add
cmp
add
call
clc
test
cmp
pushf
mov
or
iret
test
mov
in
pop
dec
add
add
dec
mov
in
dec
or
iret
add
testl
test
add
add
mov
or
add
cmp
add
mov
mov
lock
dec
test
dec
add
cmp
or
mov
dec
push
lea
lods
mov
clc
cli
or
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
clc
rorb
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
in
add
add
mov
in
mov
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
cli
or
cmp
je
mov
ret
or
lock
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
lock
rorl
jb
add
ja
sbb
xchg
enter
inc
decl
loopne
jb
add
dec
adc
add
inc
rcll
mov
xor
jb
add
jne
decl
add
repnz
inc
mov
mov
shll
mov
movsb
add
push
adc
inc
pushl
mov
add
mov
test
inc
mov
lret
mov
sbb
inc
mov
xor
enter
inc
add
cld
test
lahf
jne
mov
fsubrs
decl
hlt
xor
sbb
call
pop
or
dec
adc
push
add
cmp
je
mov
or
pushf
ret
mov
lea
clc
or
push
inc
or
pop
call
test
jne
mov
movsb
xlat
inc
push
push
or
push
decl
dec
adc
roll
sbb
dec
je
push
call
test
inc
iret
add
clc
jmp
mov
test
or
add
inc
mov
mov
and
push
mov
rolb
iret
orl
push
clc
jmp
add
mov
jmp
addl
pop
inc
pop
sbb
inc
add
clc
and
mov
and
mov
and
mov
and
xor
pop
mov
xor
mov
mov
mov
push
add
mov
cmp
mov
dec
add
push
adc
push
cmp
and
mov
and
xor
jb
add
inc
and
lea
and
push
jmp
cli
and
clc
and
call
jmp
dec
ds
cmp
bswap
mov
add
and
mov
mov
or
inc
jmp
addl
push
inc
sbb
dec
test
movb
aas
add
aas
add
jne
incl
clc
add
inc
jne
call
fadds
mov
add
add
add
incl
push
and
roll
inc
adcl
inc
adc
inc
lcall
je
sbb
lea
je
sub
je
and
mov
clc
and
and
add
and
add
cmp
or
pop
push
mov
sub
xor
mov
mov
mov
orl
mov
movl
mov
and
movl
mov
xorl
push
push
andl
push
mov
xor
addl
mov
orl
add
mov
movzwl
and
movl
dec
movl
movl
add
jmp
xlat
mov
and
mov
test
jle
jle
fidivrl
jle
cmp
fld
ja
or
push
or
cmp
enter
pop
mov
or
rol
or
dec
add
push
in
outsl
add
pushf
jo
dec
mov
cmp
xorb
jbe
fisttpl
jecxz
and
xchg
dec
incl
mov
sub
jae
lret
lcall
mov
loop
cmp
fs
sub
or
sbb
and
add
fisttpll
popl
shll
movb
pop
rcll
jns
mov
daa
add
fstpt
dec
loopne
xchg
pop
inc
jbe
dec
and
pop
lahf
mov
adc
sahf
inc
inc
xor
pop
fimuls
les
cltd
mov
push
aam
or
mov
sbb
sub
add
lds
xor
mov
scas
add
cmpsl
add
inc
in
push
xor
repz
jge
lcall
adc
cs
fucom
mov
mov
fcmovnu
jae
pop
mov
cld
xchg
push
mov
stc
push
sbbb
add
jo
mov
dec
inc
hlt
mov
ja
cs
adc
dec
rol
pop
jb
jnp
repz
movl
mov
sbbl
xor
subl
jmp
fstl
cltd
loope
jns
and
scas
pop
addr16
aad
aaa
fidivrl
jle
jg
jle
scas
jne
shlb
movsb
or
insb
fisubs
insl
les
std
vfrczps
jmp
pushf
inc
cs
das
push
rep
inc
outsl
addr16
in
mov
mov
cltd
andb
outsl
or
jmp
add
adcl
mov
push
sahf
loopne
lock
mov
sub
sti
jae
pusha
jno
mov
ficoms
cmp
mov
pushl
adc
test
mov
andb
das
dec
or
negb
or
push
movsl
pop
out
mov
push
loop
push
lds
push
lret
out
sub
cmp
or
or
xchg
jmp
adc
fnsave
je
rcrl
mov
divl
loopne
repz
cmpsb
ss
imul
adc
call
jmp
sub
mov
pop
pop
cltd
out
jge
sbb
fwait
in
fsubl
push
mov
arpl
je
data16
ret
daa
push
std
inc
hlt
subb
xchg
push
xchg
notl
jl
mov
mov
lret
inc
ret
out
lret
pop
outsl
hlt
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
subl
movl
movb
sub
mov
xor
andl
add
mov
mov
xor
adcl
add
andl
push
dec
mov
xor
andl
add
xorl
push
andl
mov
jmp
push
mov
xchg
push
mov
aaa
in
mov
cmpsb
jl
jle
jg
jle
addl
or
ja
add
sarl
dec
xor
dec
enter
pop
adc
jp
leave
out
cwtl
aaa
cvtpi2ps
xor
jl
and
cmp
xchg
sbb
pop
push
fdivl
lret
mov
rolb
cs
push
in
jp
push
adc
arpl
and
loope
xor
pop
inc
mov
sahf
and
mov
push
out
and
movsl
add
cwtl
mov
cmpsl
jno
decl
orl
or
xor
add
sbb
outsb
sbb
movsb
loop
clc
nop
xorb
call
inc
xchg
icebp
mov
icebp
inc
add
test
xchg
scas
movsl
mov
test
inc
in
jp
je
xor
scas
stc
push
ds
insl
lods
js
arpl
je
bound
fidivrl
mov
out
mov
lret
in
xchg
mov
out
mov
dec
xor
cld
icebp
xor
decl
aam
jnp
mov
scas
dec
and
or
popa
shl
test
subl
movsl
add
js
jo
aam
dec
add
jae
fsubr
adc
lret
data16
xor
setae
add
lods
add
inc
xor
negl
add
xorl
push
lea
push
movl
pushl
subl
pushl
subl
call
incl
test
movl
je
subl
lea
negl
push
add
mov
andl
xor
add
andl
push
mov
add
push
andl
mov
subl
mov
pushl
addl
call
movl
mov
movl
cmpl
notl
lea
mov
je
lea
jmp
ja
je
je
test
push
outsl
jne
imul
add
jle
jg
jle
sbb
cmp
fisubrs
mov
pop
xchg
into
test
dec
cwtl
sub
int3
fcmovu
push
jno
add
aaa
push
into
xorl
sub
push
push
xor
lock
or
cmp
jbe
xchg
inc
es
and
ss
jnp
out
lods
adc
repnz
les
sar
mov
xor
out
jno
pop
clc
xlat
add
aaa
push
jbe
lea
xchg
pusha
push
pop
inc
cmp
daa
or
loope
pop
pusha
test
test
nop
xor
or
cmp
neg
jb
xor
mov
cltd
rcrb
push
push
out
outsb
or
lea
popf
sbb
mov
fldl
or
mulb
jb
inc
add
pop
test
pop
icebp
adc
rorl
mov
in
dec
sub
dec
mov
jo
push
in
jnp
sahf
clc
int
aad
xchg
cs
push
sub
mov
in
sbb
cmp
mov
scas
mov
pushf
add
test
sub
adc
adc
add
add
in
push
fs
cmp
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
inc
mov
adcl
xor
add
andl
jmp
adc
imull
mov
and
out
jae
jle
jg
jle
mov
fimull
incb
out
cmp
pop
jo
xor
and
jne
cli
ds
movsl
in
in
pop
xchg
mov
js
lea
sbb
mov
test
cmp
jle
cmp
aaa
loope
popf
mov
lea
mov
adc
lds
out
arpl
bound
lret
inc
mov
mov
pop
add
adc
rolb
mov
and
pop
cmp
ss
call
out
sub
dec
sbb
cwtl
sub
mov
xchg
adc
xchg
imulb
or
cmp
cmp
sbb
ja
xchg
mov
jbe
cltd
cltd
xchg
in
xchg
lcall
jp
xchg
loope
jecxz
das
lahf
pop
fbstp
pop
movsl
movsb
adc
movsl
jns
inc
inc
shll
lahf
cwtl
dec
pushf
or
sbb
inc
loopne
test
sbb
filds
cmpsb
leave
xor
mov
divl
rol
xchg
xchg
jo
mov
call
popa
pop
or
lcall
inc
mov
pop
lcall
pop
pop
rorl
aas
pop
cmp
in
movsl
out
cmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
jmp
sbb
clc
and
fldcw
sub
dec
jo
jle
jg
jle
push
mov
mov
and
mov
jb
dec
sub
pusha
test
sub
mov
out
xor
sbb
add
popa
in
adc
lock
loope
out
imul
xor
dec
aaa
rol
out
inc
inc
mov
pop
repz
xchg
push
jmp
lret
inc
mov
push
jno
mov
pop
dec
in
jecxz
mov
imul
int
add
popa
scas
pop
fsts
test
aas
sarl
adc
movsl
push
mov
lea
mov
ljmp
ja
cmp
cltd
mov
fisttps
rcr
adc
int3
inc
add
int3
in
ljmp
mov
lods
mov
xor
push
outsb
or
insb
fadd
jns
push
fwait
in
in
sarb
push
in
push
addl
jmp
mov
cmp
pop
imul
mov
sub
mov
pushf
push
inc
add
fnsave
push
sbb
test
xchg
loope
aaa
incl
pop
sbb
mov
fwait
data16
adc
imul
adc
lods
add
xor
pusha
sbb
push
pushl
lea
push
pushl
pushl
jmp
loop
cli
cs
cli
cli
ret
cmpsb
push
adc
fs
jbe
jle
jg
jle
adc
sti
pop
xchg
scas
loop
dec
push
loop
xchg
adc
hlt
mov
and
dec
mov
gs
mov
add
cltd
mov
jno
imul
dec
cltd
xor
dec
adc
daa
push
mov
arpl
sub
cmpsb
sub
mov
incb
mov
push
mov
movsb
aas
or
icebp
jge,pt
leave
aad
sar
push
cmp
rcl
sub
sub
shrb
subl
xchg
push
adc
mov
sub
add
dec
scas
or
and
pop
rorb
lds
add
subb
aas
cld
adc
and
xchg
je
lret
jo
mov
push
fdivrs
sub
test
jne
in
mov
mov
fidivl
xor
outsl
es
push
repz
in
enter
inc
cs
pop
xor
sub
loop
std
repz
xchg
dec
in
xlat
adc
imul
push
insl
cld
cmp
lods
mov
in
test
stos
inc
mov
ds
jl
int3
pusha
xor
sahf
sub
stc
mov
fldenv
mov
in
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
jmp
lahf
icebp
shll
icebp
addl
leave
adc
fidivrl
jle
dec
mov
push
das
push
mov
ss
ret
pop
ret
mov
sbb
xchg
adc
jne
dec
inc
or
lods
xchg
sub
mov
push
sub
jmp
das
and
push
lods
ret
xchg
popf
adc
mov
jg,pt
in
sub
out
test
mov
xchg
hlt
mov
mov
roll
stos
mov
int
mov
adc
mov
nop
dec
dec
inc
dec
push
jno
push
fildll
and
movsb
scas
por
bound
jg
mov
and
inc
jecxz
daa
push
mov
or
push
mov
sti
out
push
scas
xchg
sub
pop
xchg
or
jg
adc
mov
daa
fwait
dec
rorl
xchg
inc
ja
cwtl
dec
dec
popa
sub
outsb
push
in
xorl
lret
push
cmp
hlt
xchg
arpl
xchg
adc
xchg
ds
push
in
mulb
or
mov
sbbl
dec
mov
iret
sbb
fnsave
fs
xchg
xor
pop
andb
popf
dec
sub
dec
cmp
add
test
shl
ret
insl
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
jmp
mov
in
stc
andb
cmp
mov
je
jle
jg
jle
inc
mov
lds
dec
sbb
jecxz
adcb
cmpsb
lock
sbb
cmc
fcomps
jnp
popf
test
rcrl
sbb
fildl
scas
jbe
insl
inc
lds
mov
inc
add
stc
mov
mov
and
add
jmp
sbb
jo
lods
cwtl
pop
sbb
cmp
xor
inc
je
mov
sub
imul
imul
pop
hlt
rcrb
test
jge
mov
inc
mov
mov
aaa
js
cwtl
aas
addl
and
popf
xor
and
fs
or
or
mov
dec
lods
outsb
cli
sub
out
lahf
mov
sub
adc
movsl
arpl
shl
iret
fsubl
in
jcxz
cmp
mov
push
enter
sbb
push
xor
pop
inc
fistpll
push
inc
jp
cmp
add
idiv
pop
inc
xor
fs
cmp
fsubl
out
in
call
movhps
lock
push
orl
fs
repz
mov
les
jae
loope
movb
lea
or
lock
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
jmp
mov
fidivl
or
leave
dec
imul
jg
jle
repz
push
data16
add
jb
inc
sarb
jle
insl
popf
mov
jge
jne
fwait
in
jnp
movsl
lods
inc
mov
sub
cmp
or
xor
push
pop
mov
xchg
imul
es
cmp
fbstp
add
out
loopne
push
repnz
jmp
add
outsw
repz
cli
and
jge
bound
adc
and
push
scas
jbe
cmp
insb
test
xor
xor
dec
insl
adc
scas
mov
shrl
push
inc
pop
jns
sbb
pushl
push
sbb
mov
mov
rorb
push
loope
fwait
pop
std
inc
xchg
mov
sbb
test
xor
add
outsl
daa
mov
enter
int3
cmp
and
pop
xchg
outsl
xlat
mov
adcl
scas
int
push
xorl
mov
jnp
fcomip
insb
in
xchg
repz
ret
add
jo
into
push
mov
mov
or
nop
ds
xchg
test
insb
sahf
add
jl
adc
sti
popa
arpl
idivl
xchg
les
outsl
add
cmp
movsb
fmull
cld
xor
or
cld
test
dec
inc
add
or
pop
leave
ret
push
mov
sub
push
sub
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
orl
movl
xor
add
and
movl
mov
mov
mov
xor
adc
mov
movzwl
sbb
add
addl
mov
jmp
mov
cmp
ds
jle
and
jle
mov
jmp
jb
push
decb
add
sbb
into
scas
pop
scas
xor
inc
repnz
mov
leave
stc
xchg
loopne
lcall
dec
aas
fwait
xchg
inc
addr16
push
mov
jmp
sbb
jbe
push
and
insl
jecxz
mov
lods
clc
sbb
insl
and
sbb
pusha
pop
sub
jae
and
sub
and
cmpsl
xchg
and
cwtl
dec
push
xchg
cld
stc
mov
xchg
popf
push
sahf
add
nop
test
mov
push
mov
ja
adc
cmp
into
or
lret
cmc
dec
jmp
sbb
push
push
pop
pop
sub
push
lds
xchg
xlat
adc
or
mov
sub
rcr
mov
xor
cmp
cwtl
rcl
add
xlat
notb
imul
imul
enter
cli
andb
repnz
mov
cmp
inc
mov
xor
push
imul
stos
das
sbb
mov
xor
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
xor
add
jmp
xchg
lcall
pop
jb
jne
imul
and
jle
xor
jne
xchg
mov
xorl
xchg
xor
cvtdq2ps
scas
divl
imul
and
and
fdivs
jl
dec
jae
aam
dec
shlb
cli
scas
lods
sbb
push
dec
fnstenv
scas
lods
mov
jecxz
cmpsl
pop
movhlps
cmp
xor
mov
fists
mov
cltd
jl
out
sbb
js
sbb
add
dec
push
jno
dec
jbe
in
and
stos
dec
int3
or
ret
pusha
dec
inc
pop
jb
stos
mov
pop
mov
mov
push
enter
xor
push
adc
gs
sub
jns
dec
je
sti
and
adcl
sbbl
cmpsl
shrl
roll
out
repz
mov
int
and
sbb
xchg
pop
js
fcmovnb
pop
fdivs
jns
mov
arpl
cmc
paddusb
aaa
arpl
xor
idivb
dec
cs
push
adc
and
ficompl
outsl
icebp
in
cld
mov
sub
aad
push
or
jmp
or
mov
or
cmpsb
lcall
and
jle
movsl
and
aas
pop
dec
or
mov
clc
in
pop
rcrl
ljmp
mov
jecxz
je
mov
jns
sbb
inc
mov
jns
cmp
or
add
sahf
jmp
xorb
out
je
add
inc
pop
and
jge
je
sub
sbb
loopne
dec
xchg
cltd
iret
cmp
subl
pop
movsb
and
sbb
lahf
testl
rcl
loope
add
into
out
push
mov
adc
sbb
pop
iret
call
je
mov
mov
arpl
fstpt
mov
sbb
jo
or
loope
mov
mov
outsl
fistpll
push
mov
cli
sbb
inc
fisubrl
push
mov
hlt
fcmovnbe
push
mov
and
mov
out
jmp
mov
and
mov
into
cmpsl
pushf
cmp
aam
ss
jns
mov
mov
shrl
loope
lods
jmp
mov
lret
call
scas
test
mov
or
dec
pushf
movl
xor
xor
adc
mov
movl
movl
adc
movl
or
movl
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movl
andl
movl
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
sub
xor
mov
add
cmp
movl
je
movl
jmp
lock
jns
mov
xchg
dec
cmp
movd
jg
jle
and
mov
dec
rcll
cmpsb
bound
xchg
jno
int3
add
xchg
mov
test
or
sbb
nop
sti
mov
movw
pop
sub
scas
aas
pop
and
aam
in
or
shll
push
notb
sbbl
in
gs
inc
jo
add
inc
xor
adc
mov
xchg
cmc
inc
fisttps
xchg
cli
std
pop
push
inc
jg
add
mov
test
pop
bound
ret
clc
aas
ljmp
ja
in
jmp
test
mov
loop
shr
xchg
lock
scas
ret
test
push
push
pushf
mov
loopne
jb
out
xor
xlat
mov
scas
fs
shr
cmp
push
adc
xchg
and
clc
fcoms
jmp
scas
xchg
nop
fmul
sub
push
push
testb
repz
and
and
leave
cld
into
jmp
cld
xchg
mov
or
jne
jmp
data16
xchg
movsl
pushf
stc
mov
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
mov
dec
mov
jmp
mov
orl
sub
adc
mov
adcl
xor
sbbl
add
movl
cmp
movl
jb
mov
sbb
mov
mov
or
xor
xor
movl
add
dec
add
dec
imul
sbbl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
sbb
mov
incl
sub
movl
cmp
movl
ja
mov
movl
xor
addl
add
movl
jmp
mov
sbbl
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
jmp
add
mov
inc
popf
imul
ljmp
jle
or
pushf
inc
xchg
sub
xor
jge
movsl
push
xor
jae
cmc
cltd
xor
pushf
fstl
xchg
addr16
mov
les
daa
jne
dec
add
inc
mov
push
lods
lea
fsubrs
insl
mov
scas
inc
mov
int
cmp
ror
dec
rolb
jo
mov
jb
pop
lret
sub
push
loop
in
outsl
sahf
lret
cmp
mov
in
pop
roll
adc
fucom
decb
add
dec
fbld
jnp
xchg
jl
or
out
in
adc
lods
repz
jmp
mov
mov
jecxz
stc
and
fisubs
in
aad
cmpsl
popf
ja,pt
xchg
fs
cmpsl
mov
aas
mov
xlat
adc
pop
das
jl
xor
dec
aad
cmp
cmp
gs
mov
push
roll
movsl
pusha
lcall
jp
dec
push
gs
mov
sahf
in
mov
jnp
and
popa
pop
adc
movsl
mov
fdivrs
daa
fdivrs
arpl
sub
cmp
test
dec
repnz
cmp
stc
add
imul
mov
jmp
jbe
xchg
call
adc
push
xor
jg
jle
imul
sahf
out
out
and
scas
xchg
mov
add
out
cmc
cmpsb
sbb
sbb
xlat
test
mov
cmp
sbb
xchg
and
pop
mov
mov
inc
lds
adc
mov
ret
mov
sbb
imul
mov
sub
ja
dec
stc
nop
lret
inc
test
data16
jmp
ficomps
jp
inc
imul
cmpsb
mov
test
or
jae
jnp
push
popf
iret
movsb
pop
shrl
adc
and
popf
inc
jp
and
cs
xchg
jecxz
cmp
inc
push
inc
xor
inc
subl
cmp
test
pop
jl
rorb
cmp
enter
in
shll
sub
femms
aaa
les
movsb
pop
arpl
mov
cmc
nop
fidivl
je
enter
xchg
and
add
jp
jnp
inc
cmp
les
jmp
push
rorl
ret
addb
lahf
cmp
sub
pop
xchg
pop
pop
push
in
push
adc
dec
aad
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
jmp
lock
xchg
mov
and
idiv
mov
jle
jg
jle
pop
adcl
push
sbb
out
jmp
lock
or
out
adcb
add
push
stos
in
test
lds
sarb
shlb
bound
dec
je
mov
jle
adc
mov
mov
scas
and
lret
fwait
popa
iret
or
lods
daa
jg
pop
xchg
adc
add
ret
out
xor
addr16
jp
cmpsw
test
push
xor
ss
frstor
out
je
push
fmulp
cs
pop
mov
pop
sahf
or
cs
stos
add
or
test
fucom
popa
push
mov
popl
and
sbb
and
or
imul
pop
enter
push
mov
scas
sahf
dec
lock
mov
scas
cli
lock
and
stos
xchg
imul
adc
xchg
imul
sti
push
adc
dec
scas
mov
repz
jp
mov
push
dec
and
orl
mov
mov
movsb
xor
xchg
mov
rorb
push
rol
call
mov
movl
movl
mov
jmp
daa
mov
in
dec
push
push
cmp
or
jle
jg
jle
loop
xor
mov
insl
sbb
lret
adc
ror
jne
sbb
std
pop
and
lret
or
push
jp
test
pop
mov
sbb
ljmp
out
push
jg
xchg
hlt
js
loop
add
mov
xor
and
or
adc
pop
and
imul
scas
filds
push
cltd
mov
loopne
js
xchg
or
mov
fwait
stos
pop
nop
add
aad
mov
dec
mov
mov
mov
or
push
dec
in
dec
sbb
or
or
adcl
loope
adc
mov
xchg
pushf
test
jg
push
jecxz,pn
inc
push
xchg
clc
mov
loope
sub
lods
rcrl
cmpsb
mov
or
imul
add
push
or
inc
lret
xchg
xor
pop
arpl
push
in
rcrl
scas
jl
adc
cmp
repnz
lea
out
or
dec
add
imul
adc
cmp
xor
jmp
int
mov
stc
repnz
or
add
and
jle
push
push
or
jo
ja
movsl
aad
mov
dec
cmp
mov
mov
mov
add
loopne
xchg
or
mov
cs
cmpsl
lock
movsb
mov
hlt
icebp
iret
ret
lods
fidivrl
push
or
or
das
call
aad
std
ljmp
fcoms
cmpsl
push
adc
sub
inc
jo
jb
ss
cwtl
adc
icebp
movsb
pop
inc
sbb
pop
push
push
xor
lahf
ds
loope
fwait
add
mov
ljmp
icebp
rolb
jnp
andb
rcrb
push
push
insb
repnz
rcl
sbb
jl
out
adc
pop
push
mov
scas
cmpsl
mov
sub
adc
jbe
xchg
hlt
out
int3
xor
idiv
ficoml
adc
jb
adc
and
and
or
pop
mov
popf
divb
cltd
and
and
xor
enter
mov
jle
cmp
push
jns
lahf
stos
subb
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
jmp
mov
scas
pop
popa
cmp
xor
jecxz
jle
and
jle
push
add
mov
cmp
outsl
outsl
fisttpll
int3
sbb
mov
aas
or
jo
push
sub
das
clc
or
hlt
jmp
leave
jecxz
lock
jl
test
push
adc
flds
out
cld
out
lret
in
or
push
mov
cmp
lds
inc
lahf
loopne
rclb
sahf
retw
test
das
lds
and
lock
jae
aas
outsl
add
mov
mov
xor
xchg
js
push
je
fidivrl
jns
gs
xchg
or
xor
jg
xchg
bound
sbb
push
mov
mov
or
lcall
mov
adc
cmpsb
adc
lahf
sbb
jae
pop
cmp
outsb
inc
xchg
enter
add
sarb
inc
inc
mov
sub
mov
int3
lock
xchg
push
xchg
mov
in
rcrb
jne
shll
xor
jp
idivb
jnp
movsb
std
mov
mov
mov
mov
mov
xor
add
mov
jmp
stos
out
pop
sbb
test
leave
ss
pop
jle
and
jle
sbb
pushf
cmp
out
inc
outsb
jmp
test
fs
addr16
pop
or
add
rorb
fwait
or
inc
lret
cmpsl
add
mov
xchg
stos
jmp
shrb
add
jbe
jmp
inc
fcos
dec
pop
jne
sub
movsb
add
push
mov
push
fisttps
popa
mov
xor
lea
insl
cmp
mul
adc
mov
loop
push
add
cmp
movsl
add
mov
push
or
mov
mov
aaa
adc
iret
lock
cli
popa
lock
in
mov
fidivrl
ljmp
lret
sbb
out
lds
pop
sub
aaa
out
enter
out
dec
xchg
xor
xor
in
mov
xlat
push
mov
xor
hlt
push
pop
and
pop
sub
mov
sub
dec
or
rcr
movsb
jnp
jecxz
mov
lods
mov
fdiv
enter
inc
jb
pop
push
adc
xchg
bound
aas
mov
sub
test
and
mov
mov
jmp
jns
mov
dec
js
movsl
mov
lods
jbe
rclb
jle
and
jle
push
outsl
pop
in
adc
hlt
jbe
gs
add
movsb
push
xchg
or
mov
hlt
jecxz
xor
in
shlb
jg
pop
les
out
cmp
out
rep
mov
push
adc
test
mov
pop
repnz
sub
mov
jb
sarl
jnp
gs
pop
cli
iret
cmovs
sbb
inc
sbb
pusha
out
fisttpl
push
call
add
sbb
fnstcw
orl
dec
scas
sbb
enter
or
pop
outsl
sub
inc
cs
ret
xchg
mov
loopne
and
addr16
lahf
xchg
push
adc
mov
xor
cmp
and
clc
adc
sbb
mov
mov
jae
pop
dec
fmul
je
ds
scas
mov
pusha
test
sbb
mov
je
bound
clc
cwtl
add
sbb
notb
aam
mov
pushl
and
mov
jo
pusha
xchg
inc
jl
or
aam
push
or
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
jmp
hlt
jae
pop
mov
pushf
sbb
add
lret
sbb
and
jle
push
mov
dec
mul
xchg
movsl
push
fstpt
stc
dec
fnstcw
psubsw
mov
cltd
xor
faddl
mov
mov
dec
pop
pushf
lock
jl,pn
mov
xor
inc
or
xchg
mov
js
push
mov
pop
cmpsb
pop
dec
in
xchg
cs
add
and
jae
add
sub
fs
inc
mov
and
mov
sti
push
lret
fs
push
cmp
dec
xchg
fisubl
xchg
xor
sub
es
inc
mov
insl
repz
xlat
mov
lods
leave
inc
cmc
icebp
cmc
cmp
pusha
sub
out
rcl
push
insb
popf
mov
push
test
ja
jg
out
imul
push
fsubrs
iret
fistpll
out
ret
and
les
adc
leave
xorl
subl
sub
imul
sub
add
aad
adc
lock
jecxz
ss
or
sbb
imul
clc
in
cmp
xchg
mov
lea
mov
mov
xor
mov
sub
add
jmp
sub
jmp
sub
xorl
and
jle
cltd
fs
dec
bound
hlt
xor
cmp
xchg
or
in
xchg
cmp
pop
cmp
push
push
or
sub
movsl
add
jb
popa
xchg
sub
jmp
loop
shr
sub
xchg
jle
out
fnstenv
stos
adc
mov
icebp
fbld
adc
outsb
or
add
push
mov
out
adc
pop
xor
xchg
sub
add
insl
xchg
test
pushf
repz
test
scas
adc
mov
xchg
push
cli
fs
xchg
push
sub
jne
mov
repz
loope
cltd
aam
pop
pusha
jge
xor
addl
jno
out
xlat
adcb
and
push
xchg
xor
dec
jb
xchg
push
icebp
xchg
push
hlt
in
cmpl
pop
fwait
mov
push
shl
pop
mov
int
lret
or
xchg
dec
loope
repz
mov
es
xchg
out
in
and
repz
xlat
add
bound
mov
mov
xor
add
imul
cmp
jbe
pop
jmp
push
cld
dec
or
jp
adc
cli
clc
sbb
and
jle
pop
xor
es
iret
adc
dec
fs
lods
cmp
xorl
ja
das
pop
jb
ja
mov
and
pusha
in
xchg
mov
pop
and
mov
inc
xchg
adc
mov
fcompl
cwtl
xor
xchg
outsb
mov
ja
mov
es
loopne
cltd
mov
xor
cs
cmp
jmp
fcompl
lea
call
cltd
in
test
push
js
mov
loop
cltd
xchg
lock
cmp
adc
les
loop
sbb
xlat
mov
fldt
mov
mov
int3
lcall
imul
and
je
sub
xor
repnz
xchg
rorl
popl
pop
mov
das
pop
ss
stos
push
mov
pop
popa
sbb
movsb
fneni(8087
lods
jns
lds
stc
mov
pop
sbb
sbb
enter
mov
cld
jge
push
sti
jge
repz
sub
ss
dec
nop
into
pop
sub
jno
adc
add
in
jmp
jb
test
adc
call
jle
jg
jle
sub
xchg
ret
xchg
jo
adc
out
dec
mov
cli
or
sar
pushf
incl
jbe
mov
xchg
mov
shrb
xor
aad
xor
mov
sarb
insb
out
xchg
stos
nop
inc
pop
std
imul
push
push
jge
mov
jns
sub
fwait
push
cmp
sub
and
rorl
jmp
cmp
aaa
inc
dec
dec
xchg
imul
cwtl
fcomps
mov
jmp
push
or
adcb
push
mov
scas
push
pop
xor
xor
jae
adc
icebp
pop
roll
jb
ret
ret
xchg
pop
scas
or
pusha
rcl
cmp
mov
xlat
leave
in
cmp
cmpl
mov
cmpsl
iret
dec
sbb
pop
mov
add
mov
adc
aam
mov
inc
mov
pop
xchg
mov
outsl
popa
ss
xchg
out
pop
push
sbb
hlt
mov
imul
addr16
xchg
sbb
jno
xchg
xor
xchg
fnstenv
aad
loop
cmp
sbb
or
sarl
shll
adc
rcrl
adcb
ret
fsubs
cmpb
adc
adc
sbb
subb
adc
adc
mov
test
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
call
jmp
xorl
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movl
mov
push
adc
mov
xor
mov
push
mov
add
cmp
jmp
iret
in
push
adc
jns
int
les
xlat
mov
jle
jg
jle
mov
js
fidivrl
xchg
lahf
and
sub
xor
call
mov
pop
push
push
push
mov
stc
dec
cld
xor
inc
lret
inc
es
loop
pop
mov
loop
xchg
push
or
mov
push
mov
push
mov
sub
mov
push
inc
pop
or
push
repnz
pop
jecxz
test
data16
lea
cmp
aad
jne
je
add
cmp
imul
lret
movsl
iret
cs
sbb
sbb
dec
mov
xchg
gs
mov
lock
fs
push
shlb
in
movsl
int
or
fnstenv
es
pop
xor
mov
fdivs
in
aaa
cmp
jbe
push
lods
rorb
pop
ret
mov
dec
adcb
arpl
push
lret
inc
sbb
repnz
lock
mov
js
icebp
and
dec
or
std
mov
sahf
pop
jnp
outsl
daa
push
cs
inc
ret
add
ret
lret
sub
insl
enter
sti
xchg
pop
add
cs
repz
insl
mov
cmp
xor
pop
jge
outsl
outsb
cmpsb
adcb
aam
mov
lcall
call
mov
repz
push
filds
push
movsb
pop
bound
sbb
in
adc
test
xchg
add
in
pop
jg
cmpsl
insl
in
imul
sbb
jle
jg
jle
imul
add
or
lods
push
pop
sbb
xor
cmp
movb
shl
pop
lret
pop
imul
ljmp
fsts
and
lods
in
in
rcrb
sbb
test
adc
and
xchg
shrb
ljmp
jg
pop
dec
sub
adc
jl
aaa
sub
and
jbe
pop
xorb
and
mov
inc
add
mov
adc
dec
mov
jmp
cmpsl
inc
xor
popf
cltd
shrb
push
jmp
push
sub
into
gs
cmp
imul
daa
sub
lods
mov
movb
pop
push
cmpsb
rcrl
pop
push
test
cmp
int3
and
add
cmp
jno
icebp
mov
mov
jp
xor
sub
and
inc
lcall
or
sti
xchg
lret
ficomps
mov
mov
call
mov
movsl
hlt
inc
data16
jp
je
jns
mov
pop
sbb
lret
xchg
enter
jbe
add
lods
pop
mov
ficoml
jne
repz
mov
pushf
pop
insl
dec
xchg
jmp
adcl
mov
test
mov
mov
xor
mov
sub
jmp
les
add
gs
dec
hlt
sbbb
cmc
sarb
jle
jmp
std
jne
fwait
dec
jns,pt
pop
mov
lds
cmpsl
ds
call
fwait
scas
dec
xchg
movsl
pop
jns
pop
in
loop
push
daa
daa
fwait
iret
push
fwait
aas
imull
movb
lods
add
ja
enter
mov
aas
dec
xor
insl
add
loope
jb
inc
xchg
pop
dec
adc
mov
jg
ljmp
shll
lock
out
pop
je
lds
or
stos
scas
aaa
fistpll
dec
call
cld
fistps
lea
mov
mov
iret
or
pop
push
inc
mull
add
sbb
enter
add
inc
xor
push
sub
mov
scas
clc
pop
and
jmp
arpl
ret
jae
aad
cmp
les
sub
inc
out
or
fisttps
or
ja
xor
xchg
xchg
jae
xchg
daa
mov
push
sub
repz
adc
adc
das
lock
mov
mov
dec
pop
lcall
lcall
daa
data16
test
sub
or
shlb
rol
insl
jb
sbb
and
mov
ja
daa
test
dec
add
fcmovnb
cmp
jo
mov
jge
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
sub
mov
andl
push
andl
pushl
pop
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
xor
mov
xor
jmp
xchg
bound
pusha
ljmp
mov
adc
fdivrl
jle
sti
mov
mov
mov
insl
cmp
cmpsl
shll
pop
fidivs
leave
fiaddl
xchg
cmpsb
xorl
pop
out
movsl
out
sub
fucompp
lock
out
mov
sbb
jo
or
popf
jmp
or
js
stc
aas
popf
xchg
jns
inc
jp
call
test
adc
mov
stos
stos
cmp
adc
or
pop
not
daa
or
mov
push
xor
xor
fiadds
dec
clc
test
sti
jg
mov
jle
rcr
fdivrl
cmp
rolb
xchg
cmp
psraw
or
test
add
mov
inc
incl
pusha
mov
jnp
fistpl
lret
dec
clc
fnstenv
adc
jmp
inc
or
add
mov
adc
les
dec
cmp
dec
cmp
and
ljmp
out
push
repz
orl
fcomi
dec
sbb
jo
and
outsb
pop
and
adc
pop
or
ljmp
aaa
add
jae
push
jg
jl
xchg
xor
jae
mov
mov
xchg
rcll
jg
jp
dec
xchg
xor
mov
shl
mov
vpmaxub
movsb
dec
cmp
movl
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
jmp
icebp
mov
mov
cmp
fmuls
xchg
dec
adc
fdivrl
jle
out
add
dec
inc
adc
mov
or
jmp
mov
jae
push
ljmp
jnp
adc
inc
mov
and
inc
mov
xor
movsb
cmp
scas
push
jno
out
mov
cmp
les
shl
xchg
lahf
mov
iret
sbb
and
ss
pop
int
popa
mov
inc
dec
ret
sub
into
aaa
bound
fisubs
push
lods
shll
mov
stos
inc
sbb
xlat
inc
push
in
loopne
jp
and
and
pop
mov
aaa
or
sbb
xor
inc
std
aas
lret
push
cltd
mov
xor
iret
cmp
ds
sbb
enter
cmpsl
jns,pt
sub
cmp
jb
add
jg
sbbl
rolb
lahf
lea
icebp
scas
loope
and
and
lock
loopne
gs
xor
xor
cmp
negl
es
shlb
decl
mov
lahf
push
adc
jnp
ret
push
push
sbb
xchg
out
inc
cmp
mov
in
mov
or
mov
roll
mov
mov
jmp
and
pop
xchg
adc
arpl
cmp
jmp
jle
jg
jle
push
mov
cmp
cmpsb
cmp
xchg
jge
mov
inc
sahf
dec
xchg
pop
adc
iret
dec
stc
test
bnd
cld
mov
jae
ja
fdivl
std
icebp
dec
mov
add
scas
test
loopne
jne
or
into
dec
xchg
scas
stos
testb
in
add
outsl
popa
sbb
pusha
mov
mov
pusha
hlt
dec
flds
pop
mov
push
or
out
pop
aaa
mov
xlat
subl
inc
rolb
daa
lahf
xchg
jbe
sarb
push
rorl
jnp
shrb
cmp
fs
inc
push
ds
mov
and
jecxz
push
ljmp
fisubrs
or
negb
cmp
icebp
test
push
xor
jbe
shlb
pop
test
leave
sub
test
sub
jg
hlt
jg
inc
push
xchg
je
ss
lret
xchg
sbb
es
cmp
ds
cld
aam
and
and
xchg
xor
dec
pop
dec
and
inc
mov
hlt
aas
sbb
mov
test
push
mov
xchg
and
cmp
push
fisubs
out
pop
sub
int3
jns
shlb
xchg
jge
push
xchg
push
pop
dec
inc
xchg
negb
repz
add
mov
jmp
mov
jmp
push
gs
movsb
es
sub
jle
jg
jle
push
inc
stc
jne
dec
bound
out
push
cld
aam
test
mov
loope
insl
and
arpl
fneni(8087
fstpt
dec
clc
add
mov
push
in
lcall
cmpb
test
test
fwait
mov
loop
xchg
sub
dec
repnz
push
sub
dec
push
sti
xor
dec
lods
ja
test
mov
pop
mov
or
jmp
pop
or
xchg
mov
push
ret
lret
ljmp
test
mov
sbb
pop
adc
test
xchg
sbb
daa
lahf
mov
out
dec
repz
int
mov
insl
ljmp
or
pop
mov
in
and
cmpsl
jo
sbb
sub
aaa
mov
mov
mov
sbb
pop
jns
xchg
dec
inc
jp
push
dec
stos
daa
adc
orl
testb
std
nop
mov
pop
movl
mov
mov
shr
adc
das
push
xor
aas
jns
dec
decl
cmpsb
add
mov
inc
sbb
jge
pop
and
test
dec
cs
pusha
pop
iret
dec
pop
mov
pop
aam
retw
shlb
lahf
in
xchg
mov
shrl
dec
inc
add
mov
add
pop
pop
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
incl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sub
mov
subl
jmp
dec
pushf
push
in
imul
mov
adc
jle
jg
jle
xor
adc
repnz
in
cmp
call
pop
add
mov
test
xchg
scas
jno
xor
mov
bound
out
mov
and
mov
inc
mov
pop
nop
ret
jl
xchg
test
rcrb
addr16
jg
mov
pop
in
je
or
and
int
pop
frstor
push
cmpsb
push
insb
mov
ljmp
inc
mov
push
push
ret
xor
jg
mov
test
and
cmp
dec
dec
push
repz
insb
sub
pop
inc
stc
lea
inc
xchg
lods
xchg
into
adc
mull
sub
rcr
into
push
mul
push
mov
jmp
movsl
inc
pop
into
adc
jle
jo
xchg
push
jo
jle
lret
xor
mov
dec
push
fistpll
push
cmpsl
push
hlt
fsubrp
test
stc
add
ds
mov
into
pop
call
jo
daa
xor
mov
notl
add
mov
or
mov
jmp
sub
xchg
jns
jns
or
push
nop
jge
jle
or
jle
cmc
pop
mov
dec
xor
xchg
inc
insb
sub
mov
lods
mov
adc
or
jg
aas
es
jmp
mov
push
add
pop
aad
das
enter
cmp
push
mov
push
push
and
movsb
sti
inc
jmp
aam
pusha
dec
cltd
stos
sahf
dec
mov
fcompl
bound
adc
dec
and
mov
inc
mov
push
loopne
or
jns
std
pop
rcl
sti
int3
out
pop
int3
out
out
sub
gs
xchg
loope
subl
pop
sub
inc
jge
dec
xchg
push
mov
mov
pop
adc
jge
push
call
lods
xchg
mov
pop
in
cmp
and
mov
adc
cmp
lock
loope
inc
in
jbe
ds
mov
dec
pop
out
ljmp
insl
leave
pop
dec
add
movsl
and
int
fldenv
jne
movsl
repnz
cs
fldcw
sbb
dec
pop
movzwl
add
mov
movb
lea
and
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
neg
mov
xor
orl
sub
mov
xor
jmp
adc
fs
jmp
fcmovbe
aad
orl
jle
or
jle
int
mov
push
and
mov
sti
loop,pt
cmp
insl
out
push
lret
hlt
stc
mov
ss
in
inc
sbb
adc
add
inc
push
cwtl
inc
out
sbb
daa
js
faddp
mov
bound
dec
mov
rcrl
or
data16
loop
jmp
mov
sbb
xor
out
cmp
sub
sub
cmp
mov
mov
xor
dec
add
fdivl
ja
out
add
ret
stos
sbb
pop
push
loop
mov
sbb
xor
push
ljmp
sbb
jae
bound
sti
cwtl
lret
imulb
sub
das
gs
fisubl
xor
int3
fdivl
in
inc
insb
mov
inc
cmp
fsubr
mov
adc
pop
iret
push
push
pop
dec
dec
pop
xchg
cmpsb
ret
ljmp
popf
push
cmp
pop
push
xchg
fcmovnbe
mov
shlb
popa
add
inc
clc
cmp
jo
inc
add
inc
lock
clc
xor
add
sbb
mov
addl
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
jmp
sub
fwait
and
out
adc
jg
jle
bound
mov
push
push
pop
mov
jl
jp
xor
dec
xchg
adc
ds
ja
loope
inc
cltd
mov
sbb
movsl
inc
jecxz
jb
mov
ja
out
jecxz
xor
lods
and
add
jo
xchg
jmp
mov
and
clc
fdiv
lcall
add
sbbl
pop
sub
shl
aas
lock
pop
cwtl
sbbl
xor
scas
call
ja
jp
push
ret
and
cs
aaa
jo
out
jno
xor
push
pusha
jnp
shlb
adc
inc
mov
cmp
shrb
cmp
ds
lds
and
and
mov
add
movsb
sbb
stos
push
mov
jmp
fs
push
pushf
sbbl
lcall
in
inc
adc
leavew
testl
pusha
pop
in
in
fistpl
addr16
add
cmp
je
jmp
xor
cltd
js
popa
cmp
stos
outsb
xchg
mov
sub
or
jle
mov
sub
out
into
mov
popf
jge
fildl
add
inc
add
sub
test
mov
test
sub
xor
dec
cmp
and
rcr
mov
push
jle
out
ret
add
andb
mov
mov
cwtl
outsb
mov
movsb
adc
into
cs
mov
mov
mov
push
xor
xchg
xchg
push
xlat
insl
lret
sbb
sub
sti
rcr
pusha
stos
nop
or
mov
repz
lret
lods
dec
rcrb
and
sbb
mov
js
mov
popa
aam
daa
pop
xlat
aad
mov
dec
sbb
imul
push
in
mov
scas
scas
jle
mov
dec
push
fstpl
bswap
out
cmpsl
dec
sbb
xor
mov
dec
and
add
jnp
rcrl
xchg
dec
call
lahf
dec
fisubs
jno
mov
push
mov
mov
xor
mov
add
movzwl
mov
mov
jmp
fcoms
sub
clc
fcomps
mov
jle
or
jle
pop
out
out
aam
out
mov
loope
sub
testl
push
adc
xor
lret
frstor
into
mov
dec
dec
addr16
lods
xor
sub
xor
andl
lock
lret
and
jns
mov
jo
insb
jmp
insl
fs
sub
cltd
stos
sub
xor
testb
push
xchg
xor
popa
pop
inc
cmpb
mov
mov
movsb
or
inc
rcrb
sti
xchg
mov
sub
leave
das
test
xchg
pop
adc
mul
sub
xchg
es
fdivl
repnz
xor
jmp
adc
in
loopne
or
call
add
aad
sub
loopne
insb
ja
mov
aaa
imul
insl
insl
dec
cmpsl
ds
mov
mov
cmp
mov
outsb
pop
mov
leave
ret
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
jmp
inc
jno
icebp
stc
js
xchg
insb
lret
jb
and
das
jle
or
jle
sbb
push
rcrb
mov
dec
xlat
stos
sub
in
push
shr
mov
pop
addr16
sub
cmp
dec
and
cmpl
xor
movsb
hlt
inc
outsl
arpl
outsb
fs
add
loopne
movsb
xor
es
cmp
mov
jle
imul
and
mov
es
ret
inc
jne
test
lods
test
cmp
sbb
stos
bound
ja
xor
iret
daa
sbb
rol
stos
mov
test
pop
ss
mov
mov
add
xchg
pop
push
es
mov
mov
lods
sbb
fistpll
adc
push
cltd
cmpsb
aas
and
push
adc
pop
jne
jbe
push
mov
in
pop
push
sarl
sub
adc
mov
mov
movsl
scas
cltd
pop
test
dec
and
mov
jmp
dec
sub
lock
push
inc
xor
jg
jle
xor
xor
inc
rcrl
mov
repz
mov
mov
cli
add
xor
aam
push
mov
fsubs
cltd
jae
push
das
inc
or
xchg
add
mov
mov
sbb
cmp
cld
mov
rclb
int
shlb
dec
or
add
inc
stos
pushl
in
push
repz
fdivp
dec
stos
sbb
arpl
xor
sbb
dec
cmp
testb
mov
pop
gs
pop
xchg
and
in
push
addl
inc
jp
loopne
sbb
fnstenv
jne
pop
dec
popl
lock
xor
pop
nop
inc
cmp
push
dec
or
jae
hlt
mov
daa
jae
mov
jle
lds
sarl
jecxz
dec
dec
scas
rcll
out
movb
adc
mov
jmp
fnstenv
lahf
cmp
das
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
jmp
jmp
loopne
mov
jmp
xor
jle
jg
jle
mov
xchg
insb
das
fcomp
mov
sub
dec
es
in
fnstenv
je
into
mov
dec
nop
xchg
inc
xchg
pop
jl
je
sbb
insl
cmpl
inc
add
push
fnstcw
rcll
sbb
aam
test
jo
jb
push
fucomip
ret
xor
insl
insb
mov
cld
xchg
push
fidivrl
xlat
inc
cltd
mov
jno
xor
fimull
mov
sub
or
es
divl
mov
cltd
in
inc
mov
push
pop
sbb
mov
je
mov
adc
sbb
ja
lds
mov
lret
jnp
xchg
cmc
insb
sub
in
movsl
xor
mov
iret
int3
sti
in
xchg
pop
lahf
ret
xor
and
test
xor
ffreep
adc
add
or
mov
pop
negb
add
xlat
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
jmp
lods
lock
sbb
daa
call
and
or
jle
cwtl
les
iret
mov
push
pusha
mov
pop
dec
insb
mov
fs
jl
hlt
jmp
push
out
outsl
push
insb
fbld
lock
adc
adc
fnsave
xchg
inc
fwait
cli
mov
lea
fisubs
and
cmp
fwait
ljmp
rcrl
add
and
add
adc
dec
sti
cmp
push
xchg
mov
push
pop
mov
sub
scas
mov
mov
and
aaa
and
fdivs
lods
cmp
add
repnz
jp
sub
enter
rcrl
out
clc
sub
incb
pop
stos
out
mov
ss
sti
push
das
adc
sbb
out
aaa
adc
cmpl
mull
fcompl
mov
popf
xor
push
int3
clc
int
out
mov
inc
sub
push
stos
jmp
aas
sbb
mov
mov
xor
lea
mov
incl
jmp
mov
xor
jmp
or
stc
cwtl
push
adc
and
or
jle
rclb
lods
dec
fbstp
out
xor
mov
rcl
clc
mov
or
pop
sbb
adc
sbb
mov
inc
rcl
xchg
int
push
sti
jp
out
mov
int3
cmp
call
gs
test
pop
push
and
fcmovbe
push
push
in
pop
or
jo
dec
pop
cmp
push
lods
nop
in
jmp
sbb
jae
mov
xchg
push
sarb
loop
ds
jo
jg
xlat
mov
adc
cmp
cli
fs
mov
or
out
xchg
jbe
pop
lahf
mov
add
add
mov
inc
ret
dec
fsub
ret
int3
and
mov
stos
sub
lret
cli
push
jnp
push
sbb
mov
adc
or
inc
cmpb
push
rcll
std
pop
in
mull
insb
push
fiaddl
adc
dec
or
jno
orl
add
ret
push
mov
push
not
movl
mov
mov
add
mov
adcl
xor
add
andl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sub
xor
adc
push
add
mov
mov
add
xorl
mov
mov
mov
sub
xor
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
mov
mov
mov
jmp
andb
xchg
xchg
mov
xchg
xor
in
jle
cmpb
or
mov
adc
inc
jnp
push
mov
xorl
in
je
bound
or
pop
fdivl
int3
push
mov
adc
inc
repz
mov
and
dec
inc
cltd
fisubrl
push
aaa
out
push
inc
push
in
ret
xlat
and
cld
lods
push
jg
dec
mov
sahf
imul
adc
imul
sbb
das
adc
shll
and
faddl
icebp
pop
lods
cmpl
ds
cltd
cmpsl
in
dec
push
jb
stc
mov
mov
mov
mov
jmp
es
mov
les
xor
loope
or
jle
cmpb
faddl
in
out
cmp
xor
sahf
icebp
out
int3
and
mov
loopne
lods
lea
jno
mov
ds
call
cs
leave
xchg
push
sbb
std
or
cld
jo
and
jmp
movsl
or
das
sbb
loop
dec
jg
addr16
cmp
mov
jnp
and
inc
daa
sahf
mov
cmp
sub
fidivs
sub
pop
bound
ss
jecxz
repz
mov
inc
scas
xor
add
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
jmp
test
pusha
test
cmp
jo
outsb
popf
and
push
jg
jle
stos
cmc
ret
out
xchg
popf
sti
in
jmp
mov
sbb
sbb
out
lds
ss
rcr
sbbb
xchg
test
movsb
xor
xchg
push
mov
add
test
int3
sbb
daa
ficoms
sbb
es
jg
push
dec
jge
pusha
cmp
or
sub
inc
inc
inc
cmp
mov
cmp
fidivl
inc
mov
add
push
mov
dec
test
gs
xor
sbb
xchg
push
popa
pushl
hlt
sbb
cmp
out
fldl
into
into
jns
sub
pop
inc
outsl
dec
cmp
push
shl
pusha
insl
scas
popf
fcomip
dec
and
lcall
pop
aaa
and
imul
mov
xchg
fdivrp
daa
add
sub
add
test
insl
fwait
dec
mov
xchg
and
mov
pminsw
push
pop
inc
cld
pop
sub
add
ljmp
sbb
sti
add
mov
inc
adc
je
jae
std
jl
lods
push
sbb
movl
or
mov
orl
mov
movzwl
adc
mov
subl
xor
adcl
add
movl
mov
xor
jmp
push
xlat
lcall
jl
add
dec
inc
mov
jle
push
jg
jle
ljmp
mov
jle
lods
and
add
cmp
adc
movsl
imul
or
cs
mov
fldl
aad
xor
or
popaw
push
loopne
mov
fwait
clc
dec
sub
push
sahf
cmp
mov
repz
leave
push
das
shl
lret
xchg
shll
add
lret
xchg
rol
test
bnd
int3
jae
add
fisubs
mov
jmp
sbb
mov
stos
xor
add
imul
sub
inc
in
xor
inc
pop
mov
stos
cmp
sbb
in
push
xchg
and
pop
or
mov
xchg
mov
mov
movsl
daa
je
inc
or
nop
sti
shlb
js
xchg
or
pop
jge
jmp
out
jmp
out
jp
cmp
sarl
push
push
outsl
enter
adc
pop
sub
jp,pt
jl
pop
xchg
arpl
mov
jb
mov
data16
cltd
sbb
inc
rclb
repnz
jl
stc
mov
dec
xor
lods
outsl
sbb
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
mov
jmp
add
cmp
jns
gs
movsb
or
aaa
insl
daa
jle
push
jg
jle
or
shrl
ljmp
fdivr
and
adc
pop
jb
in
movsb
hlt
sub
pushf
or
dec
mov
fbstp
inc
int
andb
xchg
sarb
rcr
or
into
xchg
outsl
repnz
movsb
cs
pop
xor
aaa
scas
aas
xchg
ss
js
jne
test
or
xor
aas
scas
adcb
pop
daa
cmp
jb
sbb
adc
lods
pushf
mov
pop
jecxz
dec
dec
imul
es
pop
sbb
int
rcll
shll
popa
push
jp
sub
mov
fcmovnb
insl
adc
mov
lock
push
fadds
ss
out
outsb
ds
inc
xchg
xor
cld
adc
sti
jb
cmp
adc
mov
pusha
ficomps
mov
loopne
mov
sub
mov
lcall
fists
jb
and
mov
mov
scas
add
aam
pop
pusha
rcll
cmp
into
fwait
cmp
int
push
bound
mov
inc
or
adc
and
adc
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
orl
push
incl
push
mov
subl
push
push
xor
adcl
push
adcl
mov
xorl
call
cmp
je
xor
jmp
push
mov
mov
push
adcl
push
andl
push
andl
lea
mov
andl
push
negl
call
adcl
mov
mov
test
movl
je
notl
pushl
adcl
call
addl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
xor
shll
and
inc
mov
imul
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
add
or
mov
movl
mov
cmp
movl
jne
movl
inc
movl
cmp
jb
andl
push
subl
call
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
shll
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
and
mov
inc
imul
mov
mov
xor
mov
or
movl
mov
mov
mov
cmp
jne
inc
movl
cmp
jb
xor
sbb
shll
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
xor
imul
mov
sub
mov
and
or
mov
mov
movl
cmp
jne
movl
inc
cmp
movl
jb
xor
andl
xor
add
inc
mov
cmpl
jne
pushl
call
cmpl
jb
addl
shll
and
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
push
push
push
call
jmp
mov
imul
mov
or
mov
mov
movl
cmp
movl
jne
inc
cmp
movl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
push
call
mov
dec
mov
jmp
mov
mov
sub
imul
xor
shll
and
or
mov
xor
imul
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adcl
mov
or
or
mov
mov
mov
movl
cmp
jne
movl
inc
movl
cmp
jb
xor
orl
shll
and
and
mov
adcl
imul
adc
mov
xor
or
xor
or
mov
mov
movl
cmp
jne
movl
inc
movl
cmp
movl
jb
sbb
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
shll
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
neg
and
mov
neg
imul
xor
mov
adc
or
mov
mov
mov
movl
cmp
movl
jne
inc
cmp
movl
jb
xor
shll
and
mov
imul
mov
or
mov
mov
cmp
jne
inc
cmp
jb
inc
cmp
jb
mov
mov
movl
lea
mov
lea
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
cmp
mov
je
mov
xor
add
imul
mov
jmp
xor
jmp
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
or
movl
add
mov
mov
addl
add
sbbl
xor
cmp
movl
jne
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sub
push
sub
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
sub
movl
jmp
jmp
aam
push
pop
jnp
fwait
jne
repnz
loope
and
jle
jl
pop
sub
mov
stos
xor
jo
mov
sbb
jp
scas
push
pop
cmp
pop
push
shl
popa
aaa
or
rcll
xchg
mov
push
test
out
cs
mov
mov
pop
jmp
stos
hlt
in
xchg
and
lcall
pop
mov
dec
test
lods
ret
popf
xchg
sbb
adc
dec
loop
or
cmp
add
loop
push
push
test
mov
rcrl
and
ss
or
hlt
xchg
mov
jecxz
push
dec
enter
add
ret
lahf
adc
out
incb
inc
or
mov
and
mov
test
jbe
loope
pusha
cwtl
shlb
into
fwait
mov
jle
push
push
test
hlt
push
out
das
mov
xorl
cmpsl
ret
mov
xlat
out
dec
sbb
inc
das
dec
cmpsb
mov
loop
xchg
stos
into
shll
push
hlt
icebp
push
xchg
repz
in
ss
xor
dec
popa
mov
test
mov
jae
pop
adc
mov
cmc
xchg
pop
sbb
push
jno
aas
movl
or
jmp
je
repz
aas
inc
scas
jo
or
les
cld
push
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
mov
xor
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
jmp
addr16
mov
jl
arpl
fisttpl
jle
lds
jle
dec
mov
icebp
pop
loop
aas
push
pop
mov
fdivrs
xchg
insl
sbb
mov
icebp
jne
and
mov
movb
adc
arpl
push
jg
mov
data16
mov
addr16
cmp
flds
sub
pop
loope
jg,pt
subps
rcrl
pop
jp
aam
push
int
cmpsb
into
inc
ljmp
pushf
push
roll
ja
and
jnp
sbb
dec
andl
mov
lahf
sbb
stos
roll
cmpsb
and
test
aam
sahf
xor
stos
dec
out
test
push
xchg
sub
shlb
inc
pop
int3
insl
xchg
mov
jp
sbb
xchg
cmp
loope,pt
sbb
movsl
rcrw
sbb
les
sub
loop
loop
adc
pop
sub
or
or
jg
cmp
mov
ficoml
mov
adc
jb
jl
movsl
mov
add
xor
xor
mov
xor
fwait
in
in
testl
cmp
xchg
lret
sbb
xor
sub
or
jo
aam
push
cmp
ret
add
jmp
jg
add
jns
cmp
jne
dec
cmp
lds
jle
ljmp
stos
mov
je
call
pop
mov
mov
or
push
insb
std
sahf
mov
nop
jp
icebp
aas
xchg
cld
push
mov
inc
arpl
adc
mov
mov
rorl
shrl
sub
cmc
jp
out
push
test
push
les
and
mov
je
sub
dec
stos
cltd
jmp
xchg
and
mov
cmovp
inc
adc
daa
pop
leave
in
mov
add
mov
inc
cwtl
adc
lret
bound
push
push
hlt
popa
xchg
xor
mov
addr16
std
lcall
adc
mov
push
out
out
adc
xor
rcll
cs
add
mulb
std
adc
outsb
xor
out
mov
adc
leave
lret
imul
ds
and
addl
mov
jmp
cmp
inc
xor
nop
jns
dec
pop
leave
stos
lds
and
shl
xor
or
xchg
pop
pop
jbe
mov
cmc
hlt
or
xlat
or
add
adc
cmp
and
insb
push
adc
mov
cs
mov
xchg
dec
in
loope
dec
or
in
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
jmp
push
mov
sub
cmc
sub
adc
sub
jle
lds
jle
xor
sub
movsb
pop
sti
mov
pop
jmp
mov
add
fwait
rolb
not
sub
dec
ret
sbbb
mov
lods
test
fildll
mov
inc
cmp
xchg
adc
pop
in
xchg
and
ret
cmpsb
gs
jnp
pop
dec
std
jbe
xchg
dec
pop
clc
out
repnz
je
xchg
mov
mov
mov
inc
lds
jl
cltd
inc
je
jecxz
mov
add
in
aad
xor
push
inc
out
sub
int3
aad
sub
mov
lret
arpl
pusha
into
aas
lret
dec
lahf
mov
xor
xor
and
adc
mov
lock
sub
inc
mov
mov
adc
sub
hlt
icebp
out
add
out
rolb
xchg
xor
xor
push
sbb
sbb
fmul
jmp
in
sbb
xchg
popa
mov
out
mov
add
xchg
loope
push
push
xchg
in
mov
and
mov
fdivrs
aam
data16
jno
call
test
fisttpll
div
ds
lret
and
or
ja
lds
imul
xchg
xchg
push
scas
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
addl
movl
movl
decl
mov
push
mov
xor
xor
jmp
je
jg
addr16
test
xchg
mov
jle
cltd
jecxz
xor
push
pop
hlt
jo
dec
and
rorl
jne
or
cmpb
dec
data16
jbe
test
mov
lea
pop
jle
ljmp
jle
pop
jo
fsubr
adc
cs
push
ret
sahf
imul
pushf
orl
clc
pop
inc
sub
jae
cmp
push
xor
in
outsb
ret
pop
mov
or
jo
scas
mov
out
out
out
xor
cmp
andl
test
sub
pusha
sub
js
mov
pop
lcall
dec
in
cmc
push
dec
push
add
pop
push
mov
out
aam
test
jb
add
lret
andl
mov
movl
mov
addl
push
push
orl
test
je
mov
mov
mov
movzbl
and
imul
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
or
mov
mov
movl
xchg
mov
mov
or
sub
and
xor
adc
mov
mov
add
mov
and
jmp
scas
mov
imul
pop
pusha
fisttps
mov
into
leave
aas
jle
mov
jle
sub
shr
lret
les
mov
mov
es
loop
mov
or
inc
movsb
outsl
int3
gs
pop
cli
aam
or
out
pop
mov
pop
iret
sub
ljmp
mov
push
fs
pop
in
fildll
jp
fcoml
pop
testb
add
sub
mov
aam
xchg
pop
hlt
in
and
fisubrl
xchg
xchg
pop
sbb
shr
data16
add
jb
out
scas
iret
imul
inc
push
shrb
and
adc
in
mov
sbb
jge
mov
insl
jmp
shl
xor
test
rcrl
imul
jne
movzbl
and
jmp
mov
stos
popa
jns
in
mov
nop
pop
xchg
add
jle
jle
jle
pushf
inc
sub
nop
mov
xchg
push
lret
cmpsb
and
and
sub
xchg
xor
mov
clc
outsb
xor
mov
pushf
mov
fbld
mov
cltd
sub
jg
xor
jae
sbb
push
scas
sbb
loop
push
or
dec
movl
dec
pop
sub
loop,pt
dec
lods
mov
movsl
aaa
iret
xor
sub
nop
aam
or
ss
jnp
jmp
adc
jno
ficompl
sbb
stc
sbb
in
push
out
mov
iret
sbb
or
sbb
loop
pop
aam
repz
aaa
mov
fidivrs
sub
outsb
sahf
inc
ss
aas
gs
call
inc
add
stos
inc
add
enter
cmp
add
not
mov
mov
je
mov
xor
mov
xor
andl
add
movl
cmp
jmp
push
pop
popf
aam
fs
test
sti
push
jg
cmp
jle
jle
jle
lahf
movsl
push
cwtl
sbbb
and
into
jle
rolb
lock
fistl
clc
mov
adc
test
and
mov
out
fsub
mov
adc
inc
arpl
cwtl
cmp
inc
out
cmp
fstpt
push
adc
jle
bnd
inc
jns
xorb
push
mov
aaa
jmp
sbb
scas
sub
fcoml
sahf
fimull
pop
xlat
fs
jo
das
lods
int
outsl
sarl
and
sbb
leave
aas
fiaddl
imul
loopne
std
aad
fxch
pop
icebp
add
into
fnsave
and
pop
ja
jbe
and
add
mov
test
jne
movl
call
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
mov
not
mov
xor
subl
add
cmp
jmp
add
or
in
loope
js
dec
inc
std
insb
orb
cmp
jle
mov
mov
sbb
mov
shlb
xchg
and
leave
loope
push
xor
xor
mov
movsb
push
or
push
sub
rorl
movsl
push
ret
ss
mov
pop
pop
or
fildl
adcl
or
lahf
push
sbb
in
push
xchg
and
mov
push
push
jle
cmp
test
or
push
inc
fildl
adc
ret
mov
xchg
dec
cmp
sbb
add
mov
ret
or
jle
xchg
sub
sub
push
add
fisubrl
out
pop
lret
gs
cmc
loope
icebp
loop
sti
and
mov
sub
or
daa
or
insb
jno
inc
and
je
sbbl
pushl
jmp
sti
loopne
lock
cltd
sti
jns
cmpsb
pop
out
pusha
jae
jmp
jle
jle
mov
or
cmpsl
dec
push
shrb
ffreep
jne
addl
mov
sbb
or
adc
mov
insl
sti
ret
fcoms
mov
xchg
fstl
jae
add
shr
lret
cmc
sub
cmc
les
leave
lret
or
js
filds
push
sub
mov
outsb
ljmp
mov
mov
fdivrl
lahf
inc
cs
inc
mov
iret
push
hlt
int
ss
in
xor
test
lea
aas
loope
jo
psubusb
sub
mov
hlt
pop
aas
jecxz
das
jg
orb
stos
or
cwtl
cmp
in
jne
aas
addl
mov
cmp
mov
mov
adc
mov
adcl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
push
call
cmpl
jb
mov
mov
movzbl
sbb
mov
xor
or
xor
xor
sub
sub
mov
subl
mov
addl
add
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
jmp
mov
or
pop
pop
aas
mov
xchg
and
jle
mov
jle
imul
adc
pushf
adc
dec
mov
mov
les
xchg
jae
push
xlat
pop
xchg
jbe
add
adc
xchg
cmpl
push
leave
iret
mov
adc
insb
ret
out
arpl
in
outsb
mov
mov
push
pop
xor
dec
rolb
fldl
and
cwtl
cmp
add
int
jp
jns
pop
adc
call
mov
cmp
cltd
sub
adc
dec
mov
pop
jecxz
mov
pop
fs
sub
cltd
mov
leave
pusha
sbb
xor
lea
imul
jmp
cmp
mov
or
lock
or
mov
mov
mov
add
xor
mov
mov
mov
add
jmp
pop
pusha
pop
movsb
jns
out
cmpsb
push
jg
ss
fstpt
jle
mov
jle
mov
orl
push
sbb
sub
inc
pop
or
std
inc
and
pushf
fstpl
nop
lods
stc
lods
xor
xchg
dec
lock
out
es
rcll
push
fistps
cmp
aad
adc
aam
xor
pop
in
scas
add
dec
les
add
lret
jnp
inc
lret
inc
ficomps
push
sub
push
mov
hlt
in
int
cmp
sbb
out
out
xor
int
jl
or
mov
or
xor
inc
push
sbb
add
icebp
repz
inc
arpl
notl
stos
out
mov
jle
and
mov
xchg
stc
mov
daa
sti
cmp
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
jmp
test
scas
pop
cmpsb
jns
and
lock
xor
mov
jle
clc
mov
adc
in
pop
bound
mov
xchg
dec
or
lods
jb
mov
adc
fs
movsl
xchg
outsb
jmp
stos
xchg
in
mov
add
std
aad
mov
imul
popa
dec
out
pop
pushf
loop
fwait
test
out
mov
out
ja
out
int
test
mov
loopne
bound
push
icebp
stos
xchg
add
outsl
loopne
cs
jecxz
xor
fsubrs
sbb
cltd
out
mov
jp
adc
mov
dec
daa
popf
clc
dec
nop
popa
pop
jnp
mov
sub
lods
cmp
push
gs
or
xchg
and
pop
pop
mov
push
adcb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
jmp
pop
imul
mov
jnp
push
pop
and
iret
insb
imul
xor
mov
jle
dec
sub
lret
sbb
les
mov
arpl
xlat
ds
xchg
test
sub
cltd
loope
add
subb
loop
test
cmp
daa
ss
cmpsb
lret
iret
xor
and
movzwl
cld
das
inc
xchg
pop
out
mov
test
imul
fnstcw
cmp
or
cmpsb
jle
pop
jo
cmp
xor
aam
sbb
mov
lds
jbe
add
ret
ds
mov
cmp
cmpb
imul
lret
mov
aam
xor
mov
xchg
nop
xchg
int3
push
das
enter
inc
jg
and
and
and
jl
jne
pop
mov
jnp
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
xchg
adcl
mov
insl
bound
mov
ss
mov
jle
mov
cmp
or
jl
dec
jg
and
jbe
dec
push
jecxz
dec
jle
out
jb
inc
ret
mov
or
cld
pop
scas
test
add
inc
gs
jns
popf
cmpsb
add
rep
sbb
shlb
or
iret
arpl
push
mov
imul
data16
and
cmpsl
adc
cld
cmp
stc
movb
push
xchg
cmp
mov
xchg
xchg
test
cmp
loopne
daa
in
hlt
pop
jnp
pop
and
xor
dec
lds
les
push
aaa
cmp
scas
and
sbb
test
outsl
push
fmuls
cmp
dec
adc
jno
icebp
jle
fsubrl
lret
mov
add
mov
mov
xor
add
mov
jmp
decl
xchg
push
enter
aaa
jle
mov
jle
lds
xchg
call
mov
fstl
cwtl
cmp
cmp
les
pop
mov
pusha
ret
fldt
sbb
xorl
jl
sbb
fidivs
jmp
mov
les
push
movaps
push
repz
shl
pop
sbb
enter
lret
jne
inc
dec
xor
lds
ret
xchg
hlt
inc
rolb
outsl
fistpll
xor
pop
fwait
rcll
push
in
dec
dec
outsb
dec
int3
out
in
and
jns
adc
dec
and
mov
xor
aad
xchg
sub
rol
je,pn
pop
mov
sarb
pop
pushf
and
sub
mov
push
lods
push
loopne
add
inc
loop
xchg
imul
xchg
push
aaa
jle
mov
jle
mov
adc
out
mov
jo
sub
jb
inc
pop
repnz
stos
out
ret
hlt
jb
dec
push
jmp
xchg
inc
sbb
jns
pop
imul
adc
lret
dec
stos
rcr
bt
pop
mov
pusha
leave
jge
stos
into
lock
mov
or
inc
jl
popa
addr16
fcom
push
imul
cmp
cwtl
mov
repnz
jbe
or
jl
sbb
sub
jl
sbb
jge
inc
in
jns
sbb
add
mov
xchg
jnp
xchg
sub
jne
fadd
lea
lret
out
in
in
sbb
inc
xchg
lods
cmp
aam
sub
in
xor
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
jmp
pop
sub
sub
jne
stos
push
add
jle
jle
jle
add
pop
inc
out
sbb
andl
jb
sbb
or
xchg
inc
mov
fdivrs
repnz
leave
or
pop
lock
mov
jb
je
xchg
pushf
mov
imul
add
loope
lret
dec
addb
mov
cmp
int3
lret
cmp
xchg
pusha
adc
pop
jle
lods
fsubl
fbstp
imul
jno
pop
pop
sub
sub
push
nop
fisubrl
sub
adc
push
pop
lods
dec
xchg
aaa
jns
jl
mov
repnz
ss
cwtl
popa
jnp
shrb
inc
pusha
adc
adc
movsl
cltd
push
jno
inc
rorl
pop
push
mov
adc
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
jmp
mov
pop
mov
xchg
mov
xor
jle
shrd
and
mov
int3
mov
popf
lcall
lods
xchg
in
pop
daa
push
mov
test
cmovo
dec
xchg
test
cmp
mov
cwtl
loope
out
or
sbbb
popa
xchg
sbb
push
mov
dec
add
jb
mov
test
leave
and
add
mov
cltd
adc
dec
test
lock
lods
repz
xchg
lcall
insl
fistpll
jbe
fnsave
xlat
xor
ds
xchg
or
pop
mov
insb
push
lahf
mov
jo
jno
orb
and
push
push
scas
push
mov
int
scas
daa
psadbw
lea
cmp
jne
mov
jmp
mov
jmp
mov
or
leave
jns
or
cmp
jle
mov
jle
jecxz
push
je
xlat
inc
iret
je
adc
cs
loopne
notl
in
mov
inc
mov
mov
ljmp
cmp
popa
loop
mov
jbe
and
rorb
andb
fwait
push
mov
dec
cmp
add
pop
xor
xchg
inc
adc
lret
je
push
xor
out
imul
cmp
cmp
jl
mulb
push
mov
movsb
nop
pop
push
mov
dec
mov
xchg
loopne
loope
nop
lret
xchg
repnz
lds
mov
cmp
pop
jb
jg
iret
std
fs
rcrb
fbld
add
adc
or
pop
pop
add
lods
jbe
jns
xchg
xor
add
mov
xor
lea
add
jmp
sbb
cmp
pop
inc
and
gs
outsl
loope
pop
jno
jle
mov
jle
ljmp
mov
cmp
std
loop
push
or
mov
das
int3
movsl
xor
adc
cld
xchg
shll
mov
in
xchg
push
mov
out
gs
push
cli
je
dec
dec
daa
ret
push
add
and
push
add
nop
insb
add
jp
cmp
cmpl
inc
push
decl
cmp
mov
test
mov
inc
push
pop
or
and
xchg
sbb
jmp
stos
and
dec
aad
mov
xchg
jecxz
jmp
cmp
fucomp
and
repz
pop
cmc
test
insb
inc
push
lret
mov
sahf
lock
dec
hlt
pop
popa
xor
daa
dec
andnps
jmp
popa
jno
jnp
jnp
or
pushf
outsb
inc
dec
lret
jle
mov
jle
dec
mov
mov
fcmovb
inc
dec
ud1
xchg
outsb
imul
ret
out
push
xchg
mov
xchg
inc
or
pop
pop
fwait
push
mov
rcrb
mov
stos
insb
push
pusha
aas
xor
ret
jbe
test
push
xor
mov
push
lret
inc
or
and
mov
js
or
pop
shrb
cmpsb
aas
xchg
aad
movsl
pop
mov
lcall
mov
mov
fnstsw
test
test
repz
int
lods
add
cli
push
mov
inc
mov
jmp
fdivs
and
xor
movsl
in
and
out
subb
pop
jnp
pop
gs
xorl
jb
cmp
jmp
test
xchg
push
stos
push
push
gs
aam
or
jle
and
pop
push
pop
pop
mov
cmp
test
pmovmskb
gs
sub
adc
adc
loop
out
jmp
xchg
js
lcall
and
enter
lahf
jecxz
mov
data16
fdivrl
sbb
int
sbb
adc
pop
jnp
cmp
jl
xlat
jmp
mov
and
das
xor
pop
test
out
pop
popa
add
pusha
or
pop
mov
mov
xlat
loop
and
cmc
add
and
jg
cli
sbb
xchg
call
test
fldcw
xchg
push
dec
mov
and
sbb
movsl
ss
cli
mov
dec
mov
mov
test
add
add
add
inc
xchg
sub
xchg
jmp
xchg
out
jnp
jns
add
call
fxch
jle
mov
jle
inc
mov
pop
out
enter
adc
sub
int
sbb
sub
outsb
fcmovnu
loope
aam
push
jmp
in
jg
jmp
jbe
in
sbb
push
test
popf
inc
test
call
dec
movsl
mov
outsl
pop
push
rorl
cmp
jmp
arpl
cmpsb
iret
jbe
adc
push
jne
push
hlt
jle
stos
jns
lds
push
push
dec
fwait
out
pushf
out
out
xor
daa
ffree
es
sbb
jae
mov
imul
ret
mov
sbb
add
iret
mov
xor
lret
xchg
push
mov
and
xor
mov
dec
pop
sbb
push
clc
jge
xchg
popa
xor
cmp
inc
or
inc
in
scas
roll
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
