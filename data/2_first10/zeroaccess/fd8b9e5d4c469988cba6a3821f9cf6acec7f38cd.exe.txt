push
mov
sub
mov
mov
inc
mov
sbbl
sub
push
mov
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jge
push
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
mov
movl
jmp
movl
jle
push
call
xor
sub
and
movl
movl
mov
add
add
add
mov
add
mov
adcl
sub
mov
sbb
xorl
mov
orl
andl
orl
jmp
loop
jns
cmp
lcall
cmp
adc
adc
int
adc
loop
test
fisttpl
lds
lods
or
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
sarb
idivl
in
enter
out
imul
fmull
sbb
cmp
sub
inc
adc
int
rclb
or
jle
xorl
cmc
cmp
push
dec
pusha
es
jl
movsb
mov
mov
xlat
mov
sbb
adcl
mov
mov
mov
push
outsl
xchg
push
lods
mov
or
test
cmpsl
aam
and
sarb
push
out
mov
sub
aaa
mov
adc
dec
pop
imul
mov
sub
fwait
cmp
jno
push
in
lods
mov
mov
test
xor
test
daa
dec
push
xor
xchg
mov
inc
xchg
xlat
pop
leave
ja
mov
sbb
negl
mov
pop
rcll
lods
shlb
xor
push
scas
jns
sti
std
add
jae
lcall
pop
test
add
test
loope
mov
sbb
scas
out
jmp
fisubrs
inc
or
push
ret
mov
aas
pushf
xlat
pop
xor
mov
and
jge
imul
lods
out
and
loop
in
mov
aam
dec
jp
sbb
insb
test
cltd
xchg
inc
sbb
addr16
mov
pop
mov
push
mulb
sbb
std
fists
int
mov
xchg
stos
pop
jbe
cmp
mov
xchg
jno
sahf
cmpsb
sete
jp
notl
in
dec
sbb
movsb
inc
insb
xor
xor
inc
orl
adc
in
push
mov
loope
push
inc
xor
cmp
aam
popa
jns
mov
gs
imul
cmpsb
inc
adc
dec
pop
push
cmp
xchg
test
sub
push
outsb
test
fldenv
stc
jp
push
xchg
fdivl
mov
lock
jg
cmp
ds
jne
icebp
mov
or
sti
loop
and
mov
test
push
pop
insb
xchg
rorb
sahf
jg
aas
sub
pop
mov
int3
adc
xlat
repz
jecxz
mov
adcb
jmp
dec
daa
jb
pop
and
sbb
gs
clc
movsl
jge
insb
lea
lahf
loopne
loop
inc
dec
jbe
dec
or
pop
jl
ljmp
loope
sti
aaa
xor
cmpsl
enter
pop
popa
jecxz
pusha
push
cmc
push
jbe
mov
jle
insl
push
adc
movsb
sub
pop
ja
and
ss
push
lret
or
repz
hlt
xchg
pmaxub
cmp
int3
lahf
fisttpll
or
cmpsl
jl
repnz
mov
and
test
mov
mov
movl
mov
jmp
mov
mov
jne
pushl
push
push
call
and
adcl
andl
xor
or
mov
movzwl
and
mov
and
mov
add
movzbl
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jb
pushl
call
movzbl
adc
and
sbb
movzbl
xor
mov
or
sbbl
mov
cmpl
movl
movl
jmp
mov
mov
jg
push
push
pushl
pushl
call
sbb
dec
xor
sub
or
mov
sub
mov
add
shrd
shr
and
mov
mov
sub
mov
subl
xor
orl
xor
movl
or
xor
jmp
ljmp
cltd
daa
mov
push
cmpsl
xor
int
adc
pop
mov
notl
xor
movsl
cwtl
enter
addr16
lods
add
imul
sbb
das
sub
sbb
pslld
fmuls
mov
or
inc
push
imul
xchg
rcrb
in
stc
cmpl
icebp
jns
lahf
orb
js
cli
pop
test
scas
mov
imull
pop
ret
lahf
insl
push
ret
rcll
aam
lea
inc
mov
sbb
push
jp
insl
fnstcw
in
push
test
inc
test
enter
cmp
repz
outsl
arpl
out
mov
cmpb
icebp
jbe
adc
mov
orb
fdivl
jecxz
test
push
lds
in
stos
leave
jmp
cmp
enter
push
cmp
sub
xchg
sub
loopne
sbb
sub
sub
push
mov
mov
outsl
loop
shlb
std
pop
jp
cmp
push
cs
jmp
fnstcw
fwait
loopne
sub
mov
gs
cmc
out
repnz
mov
bound
inc
iret
cmc
and
xchg
loopne
in
push
push
mov
mov
repnz
addr16
cs
or
adc
hlt
sti
aas
jmp
xchg
mov
jo
sarb
pop
mov
lret
loopne
in
outsb
cs
sahf
jo
aad
xchg
aam
push
cld
xorb
fstps
sub
adc
push
push
in
dec
int
hlt
ret
pop
lds
mov
mov
sub
and
cmc
dec
add
cmp
stc
daa
fnstcw
cmc
mov
sub
xchg
imul
lea
mov
pop
cmpb
mov
push
icebp
mov
dec
mov
aad
xchg
fcompl
mov
xor
lret
push
inc
lret
mov
scas
adc
imul
ja
add
mov
in
nopl
gs
push
xchg
hlt
push
adc
cmp
nop
jmp
cld
push
out
ljmp
adc
mov
mov
xor
jecxz
push
std
sbb
add
sub
negb
test
dec
push
jecxz
in
leave
enter
jno
into
fmuls
shlb
into
jmp
push
pop
in
pop
jmp
mov
lea
cmc
adc
jl
insb
xor
xchg
aad
jmp
cltd
rcrl
arpl
aas
test
inc
and
shrb
popa
inc
je
aad
setle
add
mov
outsl
imul
leave
call
stc
call
stc
xor
mov
xchg
pop
inc
mov
dec
sti
pop
jge
jae
in
mov
xchg
mov
stos
mov
fdiv
fists
cmp
inc
loop
xlat
pop
test
cld
inc
ret
inc
subb
sbb
xchg
cmp
iret
in
xchg
xchg
mov
jb
cmpsl
int3
inc
in
andb
xchg
inc
dec
rcrb
aad
ret
push
sbb
jmp
and
inc
frstor
mov
or
mov
or
pop
addl
mov
inc
test
dec
pop
or
lret
xchg
and
out
adc
mov
cmpl
notl
movl
movl
movl
jmp
mov
jle
pushl
push
pushl
pushl
push
call
sbb
addl
add
xorl
add
movl
sbbl
movl
sub
movl
xor
xor
and
movl
sub
movl
sub
movl
sbb
movl
sub
movl
cmpl
movl
movl
jmp
movl
mov
jb
pushl
pushl
push
pushl
push
call
andl
notl
andl
orl
addl
sbbl
movl
sbbl
movl
xorl
movl
xor
movl
movl
cmpl
movl
movl
movl
jmp
mov
jbe
push
push
push
push
call
subl
adcl
movl
adcl
sbbl
adcl
movl
sub
movl
movl
adcl
movl
negl
movl
cmpl
movl
movl
jmp
movl
jbe
push
pushl
pushl
call
adc
addl
orl
sbbl
notl
adcl
xor
movl
movzbl
xor
movl
cmpl
movl
mov
mov
jmp
mov
je
push
push
push
push
call
xorl
negl
xorl
subl
andl
adc
sbb
movl
inc
movl
mov
xor
mov
xorl
shl
mov
or
mov
mov
subl
push
xorl
push
adcl
push
subl
push
adcl
call
and
mov
sbb
mov
adc
xor
xor
or
add
mov
mov
xor
sub
mov
adcl
jmp
into
mov
and
adc
mov
adc
adc
adc
imul
lcall
les
mov
cmpsl
paddusw
mov
jp
sahf
sub
popa
push
jl
adc
or
popf
in
in
mov
inc
ja
xchg
sbb
dec
mov
xchg
mov
add
jnp
cmp
add
mov
aas
pushf
test
sbb
ljmp
movsl
ret
ljmp
pop
mov
mov
cmp
cmpsl
out
push
xlat
push
in
inc
xchg
adc
les
mov
lea
pushf
dec
cmc
inc
or
mov
popf
xor
out
in
inc
xor
fstps
pop
mov
or
mov
or
mov
dec
mov
loope
ljmp
cs
outsb
jbe
sbb
stc
pop
mov
push
lods
sahf
cmc
xchg
push
out
out
test
out
push
and
dec
fidivs
jge
mov
mov
jns
lds
outsl
sbb
push
sub
call
orl
orb
push
test
sub
movsl
aad
arpl
pop
ret
sub
fildl
xchg
test
enter
stos
mov
sub
ss
jnp
xchg
out
add
pop
outsb
sarl
push
cmp
into
ret
lods
and
jne
adc
out
sbb
jmp
push
out
sub
pop
clc
sbb
in
and
mov
or
jl
cltd
mov
mov
mov
and
call
mov
dec
pop
orb
decl
sub
stos
sahf
push
add
mov
inc
pushl
or
jle
jmp
inc
test
mov
mov
add
mov
jne
into
pop
lret
lahf
lahf
push
sti
push
addr16
cltd
inc
fdivrl
adc
wbinvd
lock
xchg
mov
pop
into
and
in
dec
mov
mov
insl
sub
out
es
add
roll
fldcw
loopne
xlat
enter
nop
mov
shrl
lret
inc
iret
daa
out
xchg
mov
mulb
lret
andb
jnp
mov
xchg
hlt
mov
or
mov
cmp
pop
dec
nop
enter
pop
fisubl
test
lahf
shrl
icebp
or
xchg
or
repnz
xor
es
xor
xchg
push
jnp
int3
shr
mov
xlat
cmp
add
dec
mov
xor
das
incl
inc
les
leave
or
je
nop
nop
arpl
pop
or
sti
and
lods
and
sbbl
arpl
or
jbe
pop
mov
ja
pop
mov
jle
shr
movsl
mov
popa
push
inc
fwait
or
pusha
or
add
fwait
roll
sbb
push
imul
lcall
or
and
mov
cwtl
xchg
lods
in
lods
addr16
outsl
sub
pushf
lret
push
sub
lods
pusha
outsl
and
push
int3
xchg
xchg
fdivr
sub
cmpsb
lahf
inc
lcall
pushf
mov
ss
faddl
mov
pop
mov
cmp
roll
mov
sbb
pushf
cmpsb
cmpsb
shrb
lret
scas
negl
fldenv
jno
dec
movsl
cs
push
fstl
loop
lret
mov
movsl
movsb
lahf
sbbb
sub
test
cs
decl
xor
inc
add
add
mov
or
and
xor
mov
or
andl
xor
movl
cmp
jmp
xlat
test
push
xlat
popa
dec
lcall
cmp
adc
int
adc
xchg
xchg
in
fistps
push
jno
ds
cld
out
push
pop
jg
movsl
or
xor
mov
mov
mov
mov
push
addr16
xchg
push
mov
scas
scas
push
push
lods
dec
sbbl
xlat
in
loopne
gs
mov
push
and
inc
dec
and
mov
mov
loopne
mov
std
pop
out
rcr
push
test
orl
sbb
leave
cmp
add
out
push
and
pop
push
mov
in
push
call
inc
enter
divl
sub
mov
pop
popa
sub
pop
dec
mov
mov
imul
pushf
test
ss
icebp
cltd
std
out
movsb
shlb
jecxz
xchg
pop
sahf
jb
sbb
sub
daa
push
xchg
xchg
stos
or
rorb
sub
mov
dec
push
inc
sub
or
hlt
xchg
hlt
lahf
inc
out
dec
repz
repnz
stos
loope
icebp
stos
xor
ja
dec
xchg
daa
ss
pop
dec
lcall
movsb
inc
mov
jl
test
imul
push
sahf
and
mov
sub
jns
dec
cmp
mov
addl
js
inc
dec
mov
movsl
lea
jg
push
mul
loopne
push
mov
lret
mov
dec
lret
add
lahf
psrad
lcall
jmp
pop
sbb
mov
imul
in
cmpsl
adc
lock
icebp
adc
or
mov
rol
test
cmp
mov
aaa
stos
inc
jno
mov
lcall
out
loop
inc
pop
mov
bound
mov
jmp
sbb
push
pushf
sti
xchg
sbb
popf
lret
pop
les
and
xor
rcll
insb
test
push
stc
mov
loope
pop
repz
test
mov
test
jnp
mov
jno
jno
sub
mov
mov
dec
in
cmp
add
lret
xor
repnz
test
xlat
idivl
sbb
sti
mov
xor
pop
popf
xchg
mov
pop
and
cmpsl
jae
iret
cmp
or
scas
ficoms
sbb
scas
into
lds
mov
or
cli
pop
add
stos
ret
lock
stc
pop
and
dec
push
subl
jo
in
cmp
mov
fiadds
pop
dec
mov
xchg
jge
xchg
xor
sub
or
jb
in
jbe
sub
and
outsb
test
daa
xor
push
fists
jg
mov
sub
test
ret
inc
aaa
shrb
mov
outsb
xor
mov
sbb
mov
addr16
inc
and
rorb
lret
pusha
dec
lcall
pop
push
inc
gs
dec
data16
decl
out
dec
js
sub
pop
mov
lret
in
out
mov
lock
push
or
inc
loope
push
xchg
jno
dec
xchg
push
jp
ljmp
dec
adc
mov
inc
and
xor
pop
xchg
add
dec
or
loop
mov
cmpsb
push
pop
xor
clc
jne
adc
aad
push
xchg
push
jge
fsts
mov
movl
add
add
mov
mov
cmpl
mov
movl
movzbl
jmp
movl
jae
push
push
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
shrd
shr
add
mov
mov
andl
shl
xor
addl
xor
or
mov
mov
movl
cmp
jne
mov
cmpl
not
mov
movl
jmp
movl
movl
je
push
pushl
push
push
call
adc
xor
or
mov
adc
not
decl
xorl
sub
and
mov
sub
cmpl
mov
movzwl
mov
jmp
movl
movl
jle
pushl
pushl
call
sbb
adc
add
sbb
sbb
movl
mov
xor
mov
mov
sub
mov
shrd
xorl
jmp
lcall
add
js
bound
push
notl
adc
adc
adc
xor
sbb
cmp
not
out
jb
dec
and
adc
push
lret
gs
popf
xor
sar
xor
jmp
sub
pop
leave
sub
repnz
aad
fstp
int3
jbe
mov
inc
mov
out
outsl
xchg
xchg
sarb
adc
mov
shll
daa
adc
fistps
adc
and
fldcw
xchg
mov
loopne
push
icebp
sahf
mov
dec
into
mov
scas
in
fisubl
cli
test
mov
shlb
xlat
jle
in
sbb
les
jo
out
fcompl
mov
fldenv
xor
push
cltd
sarl
jns
mulb
sbb
dec
mov
and
xchg
icebp
data16
jns
adc
pop
sbb
cmp
push
push
push
mov
add
xchg
scas
xor
pop
lods
lea
xor
mov
or
sbb
xchg
ss
in
jmp
call
lcall
mov
imul
push
in
call
dec
fildll
sbbb
mov
ds
ljmp
in
and
cld
test
mov
icebp
push
jbe
cmp
mov
loop
xor
aad
xorb
hlt
ret
xor
dec
jne
and
push
inc
std
mov
or
mov
push
test
mov
mov
jno
push
push
sub
fidivl
in
push
pop
imul
and
inc
lods
ljmp
lods
lret
popa
mov
inc
cmp
adc
or
popa
or
add
or
jbe
aam
out
and
sbb
add
jmp
fsub
fcmovne
imul
bound
xchg
xor
mov
out
lods
or
xchg
push
sub
jne
pop
mov
out
jg
ret
or
add
cmp
push
fdivl
jno
xor
clc
fsts
and
std
cmp
ss
push
sub
sub
xchg
fucomi
pop
repnz
loope
ror
adc
inc
neg
adc
test
pop
xor
int3
jbe
gs
inc
xor
push
ret
movsb
add
sbbl
stos
mov
jns
aaa
lret
aad
push
lods
scas
out
mov
mov
dec
ljmp
and
lcall
or
pop
sbb
push
inc
shlb
and
lret
mov
fiaddl
mov
adc
fcompl
cwtl
dec
daa
cmpsb
pushf
mov
icebp
rclb
shll
mov
out
pop
repnz
pop
add
pop
js
ss
nopl
mov
sub
xor
push
push
sahf
test
adc
int3
jne
mov
pop
push
lods
jo
add
inc
adc
adc
push
rcr
or
std
cli
call
ficomps
ds
mov
stc
inc
cmc
inc
dec
pop
insl
cmp
jle
inc
cltd
lahf
call
cmpb
fs
imul
push
outsb
clc
xchg
lret
xor
je
sti
sbb
enter
dec
in
pop
pop
push
les
pop
jmp
adc
mov
jmp
movl
jle
pushl
pushl
call
sub
add
notl
sbb
xor
dec
sub
mov
xor
orl
shr
sbbl
mov
adcl
xor
andl
or
shl
cmpl
mov
mov
movl
jmp
movl
movl
je
pushl
pushl
call
notl
and
sub
and
not
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
jle
push
pushl
pushl
call
sbbl
adcl
movzbl
sbb
mov
movzbl
and
mov
movzbl
sbb
mov
add
add
mov
mov
mov
shrd
or
shr
cmpl
movl
mov
movl
mov
jmp
mov
je
pushl
call
and
and
sub
or
mov
mov
or
sub
and
mov
mov
xor
shl
adcl
xor
or
xor
mov
mov
shrd
shr
mov
sbb
mov
cmpl
movl
movl
mov
jmp
movl
not
ja
pushl
push
call
mov
xor
or
sub
add
mov
sbb
inc
mov
mov
sub
add
or
mov
sbb
mov
xor
xor
or
andl
shl
lea
subl
mov
mov
andl
shrd
subl
shr
cmpl
mov
movzwl
mov
movl
jmp
mov
movl
jb
pushl
push
push
pushl
call
xorl
neg
or
movzbl
sbb
movzbl
xor
mov
xor
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
je
pushl
call
movzwl
add
mov
add
movzbl
and
or
subl
neg
mov
cmpl
mov
movl
movl
jmp
mov
jge
pushl
call
sbb
xor
inc
mov
sub
mov
adc
adc
cmpl
movzbl
mov
jmp
mov
mov
jl
push
call
movzwl
and
movl
add
sbb
movzbl
sub
sub
xor
mov
xor
subl
or
orl
shl
xor
imul
mov
and
mov
mov
andl
shrd
andl
mov
mov
xorl
xor
shr
subl
mov
mov
sub
mov
xor
adcl
or
sbbl
shl
sub
mov
cmp
mov
mov
movl
jg
or
mov
sub
mov
movl
shrd
mov
xor
mov
sbbl
xor
movl
shl
xor
adcl
or
shr
or
mov
mov
adc
mov
mov
mov
addl
mov
sbbl
shrd
shr
adcl
mov
mov
movzbl
sbb
mov
addl
xor
xor
or
shl
addl
imul
andl
sub
movl
jmp
mov
adcl
mov
notl
shrd
mov
add
mov
addl
xor
movl
shl
xor
or
xorl
shr
xorl
mov
mov
mov
cmpl
mov
mov
not
jmp
movl
mov
jg
push
pushl
push
push
call
xor
xor
xor
sbb
addl
orl
neg
xorl
and
cmpl
movl
movl
jmp
movl
jle
pushl
call
xor
xor
mov
sbb
dec
not
mov
adc
cmpl
mov
mov
mov
jmp
movl
movl
jg
pushl
push
push
push
call
xor
add
or
mov
movzbl
and
notl
adc
or
adcl
sub
mov
shrd
shr
mov
mov
jmp
xchg
icebp
mov
icebp
out
loopne
dec
repz
out
adc
int
adc
mulps
loope
cmp
mov
aam
push
loope
sub
sbb
sbb
push
pop
cld
push
ljmp
imull
xchg
stc
push
jo
jl
or
pop
jns
gs
jp
cmpsl
cmpb
testb
out
xchg
add
dec
lret
mov
inc
out
mov
sub
and
mov
roll
inc
iret
imulb
mov
xor
mov
mov
ficompl
lods
pop
divl
repnz
and
pop
jmp
dec
scas
int
add
lahf
mov
jecxz
fcomi
das
xor
jmp
and
mov
test
cmpsb
cmp
testb
push
jne
shrb
and
dec
push
lret
aaa
out
xlat
xchg
push
xlat
cltd
fwait
push
ss
sbb
lock
pop
js
lret
xchg
xchg
out
popa
sbb
icebp
jmp
jge
mov
lret
xchg
mov
adc
jo
push
mov
push
jmp
lods
sub
push
sbb
loope
shrl
or
add
testl
daa
sbbl
inc
xlat
test
cmp
iret
iret
repz
int3
movsb
out
cld
adcb
ret
fisubrs
adc
mov
mov
iret
jne
push
mov
leave
fwait
insl
jle
xor
add
or
xor
popa
fs
inc
pusha
jmp
cmp
mov
dec
xchg
shll
stos
fadds
cld
add
or
dec
lods
popa
ficompl
rolb
js
pop
shlb
xchg
or
xor
in
mov
lcall
xchg
les
mov
cld
lret
cwtl
scas
mov
in
ret
or
mov
ljmp
add
nop
inc
cmp
jmp
push
cmpsl
dec
xor
fsubs
jnp
jmp
jnp
mov
push
in
addr16
movsl
xor
stc
in
sbb
std
clc
pushf
mov
push
cmp
jle
sbb
data16
fidivl
pop
inc
pop
into
adc
sbb
imul
fstps
data16
sarb
xchg
xor
jnp
mov
fiaddl
sbb
lahf
in
lcall
sub
dec
jno
nop
pop
pop
fdivl
or
stos
pop
pop
lea
and
mov
incl
les
test
hlt
fdivs
ja
mov
outsb
ja
addr16
outsl
or
push
inc
inc
pop
stos
xor
mov
in
and
idivl
sub
pop
cltd
aaa
int3
mov
stc
mov
popa
sbbb
ljmp
fistps
mov
mov
jmp
mov
xchg
roll
push
dec
push
fwait
lret
cmp
repz
pusha
pop
add
xchg
pop
add
lret
popf
pop
mov
out
push
aam
push
or
mov
out
push
roll
xchg
fldl
xor
aad
mov
mov
xor
ljmp
das
lret
inc
jcxz
push
imul
inc
or
push
add
stos
push
fcmove
mov
pop
sub
xchg
or
fs
dec
jecxz
repz
jnp
incl
lods
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
jmp
lret
lea
push
push
and
xor
adc
mov
int
adc
xlat
call
sub
cmc
sub
lahf
pop
test
lds
sub
cs
cmp
das
jmp
iret
inc
ret
gs
jle
xor
das
sub
cmc
cmp
outsb
stos
out
jbe
push
mov
push
lea
pusha
mov
mov
mov
cmp
sub
add
test
fidivrs
cmpsb
sysret
adc
pop
sub
mov
sbb
stc
xor
push
sahf
aas
int
fisttps
mov
fbstp
mov
je
jb
pusha
addr16
es
mov
cld
cmp
scas
adc
clc
xchg
sub
pusha
pop
fincstp
dec
cli
xor
test
push
xor
insl
je
sti
or
sub
jno
mov
nop
jmp
mov
sbb
jnp
dec
xchg
arpl
add
je
negb
cmp
scas
addb
repz
push
aad
mov
inc
mov
call
sahf
xor
add
iret
xor
or
orb
jmp
stc
mov
fdivs
sbb
test
repnz
sub
imul
lret
popa
sub
cmp
rolb
aas
insb
out
xchg
push
int3
adc
mov
add
arpl
popa
insl
pusha
sub
mov
push
dec
cmp
incl
xor
mov
add
shll
rorl
fcoms
jae
pop
sub
push
dec
push
cltd
push
test
fsubl
shlb
and
pop
push
sbb
inc
pop
push
adc
out
cs
data16
mov
dec
add
jg
jge
push
jp
fsub
bound
jmp
stc
mov
mov
dec
inc
jp
or
hlt
push
nop
subb
test
jne
xor
mov
lret
mov
test
scas
mov
aas
adc
int
in
cmovp
clc
int
xchg
addr16
xor
xor
mov
adc
aaa
jmp
and
jle
jne
aaa
mov
std
psrad
movsb
scas
into
fcmovnu
cli
xchg
dec
adc
adcl
test
das
in
dec
xchg
mov
leave
test
jnp
cmp
imul
int3
dec
mov
pop
push
and
push
cwtl
mov
inc
pop
mov
push
xor
hlt
cmp
fdivs
inc
push
inc
push
add
xlat
or
and
pushf
mov
cli
sbb
icebp
cmpsb
stos
sbb
sbb
or
and
push
test
xlat
mov
or
hlt
ss
addr16
fsts
sbb
outsb
dec
xchg
pop
or
pushf
test
jae
lock
jns
ds
bound
icebp
fistl
pop
adc
lcall
mov
xchg
jne
push
inc
std
loop
adc
pop
pop
scas
insl
xlat
mov
mov
sbb
xchg
or
adc
leave
aam
mov
fcompl
ret
dec
pop
add
push
mov
adc
xchg
push
mov
cli
and
addr16
jge
ljmp
call
mov
movsl
mov
sbb
loop
ret
shll
xor
aam
mov
mov
ss
xchg
in
cmpsl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
jmp
fsubrs
fldenv
xor
out
adc
adc
adc
in
sbb
nop
std
scas
aas
mov
in
push
pop
enter
lods
jp
mov
adc
mov
adcb
mov
insb
adc
test
xchg
leave
or
jl
xchg
lods
cmp
sbb
xchg
dec
leave
sbb
mov
in
movsl
ret
xor
ret
jmp
inc
iret
adc
and
dec
or
pop
fcmovne
mov
jns
adc
xor
mov
xchg
lds
add
add
adc
sahf
sbb
dec
imul
fwait
sub
sbb
xchg
jns
adc
mov
lock
jnp
pop
loope
cmpsb
or
hlt
mov
mov
daa
cmp
enter
leave
loopne
mov
push
mov
movsb
inc
dec
das
xor
js
xchg
test
shr
insl
enter
pop
mov
sarl
sub
pushf
mov
and
sbb
sbb
lcall
loop
std
xchg
das
mov
scas
fs
add
mov
dec
sub
jb
mov
pop
sub
jle
sub
cltd
and
sub
cltd
or
shll
popa
cld
or
mov
test
out
cmp
enter
add
xor
shr
xchg
movsb
mov
out
movsb
dec
fldenv
fwait
mov
sub
xchg
popf
out
scas
bound
out
lds
push
nop
loope
fidivs
and
in
xchg
adc
xchg
rcl
mov
dec
push
or
sub
or
jno
rcrb
aas
dec
lock
fcomps
lahf
cld
add
aad
int3
mov
int3
ja
pusha
lods
adc
xchg
xor
das
ret
sbb
int
outsl
leave
mov
mov
popa
jg
out
push
arpl
out
inc
ss
xchg
adc
out
lods
arpl
lret
out
in
std
push
sbb
xchg
sbb
dec
adc
mov
lret
scas
pop
pop
mov
imul
cmpsl
xchg
psrlw
xor
sub
cmc
mov
int
mov
cmp
add
in
jmp
push
sub
mov
lcall
xchg
addb
mov
cld
jo
and
pop
es
bound
mov
in
jnp
ljmp
in
xchg
mov
adc
or
dec
inc
dec
call
lods
rolb
inc
sahf
cmp
iret
vfrczps
mov
pushf
aam
dec
sti
loope
loope
mov
cmc
dec
mov
adc
sbb
inc
or
movswl
das
sub
divb
mov
pusha
xor
mov
push
push
jmp
imul
das
or
and
xchg
cwtl
scas
jne
mov
inc
dec
sarl
in
jno
mov
inc
or
orl
cwtl
repnz
pop
in
test
jp
xchg
add
sub
pusha
sbb
repnz
andb
sub
sti
test
mov
xchg
data16
pusha
lea
ret
movsl
stos
leave
mov
dec
push
fsubl
dec
adc
inc
lcall
lods
movsl
call
enter
xchg
lcall
filds
aaa
cmp
decl
pop
mov
xlat
in
dec
sbb
mov
mov
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
jmp
orb
mov
out
insb
insb
ficoms
adc
adc
adc
repz
frstor
inc
pushf
popa
or
inc
bound
pop
fbld
out
daa
cmp
repnz
inc
hlt
sbb
movsl
test
xor
ret
push
cmp
orl
jns
fistps
push
cmp
mov
mov
and
in
inc
fs
mov
xchg
adc
aaa
mov
cmp
sahf
fsubs
push
ret
sbb
and
add
mov
cmp
cmp
das
lcall
and
adc
shll
lods
jge
fwait
popa
call
stos
inc
aad
popa
arpl
adc
lock
push
jb
inc
sub
jg
push
mov
jecxz
ss
sbb
out
mov
fiadds
xchg
roll
pop
jl
iret
cs
jecxz
icebp
ljmp
jg
or
adc
inc
test
push
lock
cmp
imul
fimull
xchg
jmp
mov
enter
adc
jo
mov
ds
inc
arpl
loope
mov
js
data16
push
or
lahf
inc
sar
lea
mov
das
pusha
fcomps
icebp
inc
std
sbb
and
icebp
jo
jp
push
inc
dec
add
stc
mov
insl
mov
arpl
ljmp
dec
jae
ljmp
dec
mov
cmpsl
into
enter
push
push
stos
xor
adc
imul
ror
mov
imul
sar
xor
out
lret
pop
pop
adc
loopne
add
dec
loope
jne
aas
inc
stos
ljmp
mov
pop
add
mov
mov
mov
xchg
fld
stos
add
daa
mov
pop
xorb
lods
aad
in
push
sbb
call
lcall
mov
dec
xor
scas
and
mov
lock
negb
and
aad
cmpb
mov
shrl
ficomps
pusha
out
insb
xor
dec
adcl
sahf
cwtl
mov
stos
sub
fs
mov
imul
push
jbe
shrb
jno
jne
data16
cmp
divb
cmp
ds
pop
xor
and
aas
clc
xor
in
data16
shl
test
aam
xchg
jmp
into
js
ss
push
pop
cmp
ror
jge,pt
cmp
dec
mov
repz
aad
mov
or
mov
cltd
mov
popa
in
iret
sbb
mov
jnp
or
sub
sahf
hlt
cmpsb
int
sbbl
std
stos
xlat
pop
mov
ljmp
sub
push
xchg
pop
push
inc
xchg
sbbl
pop
pop
or
sbb
push
cmc
es
lret
rol
jp
mov
jnp
shlb
xchg
mov
dec
mov
jmp
enter
sub
fcoms
shld
mov
and
fcoml
adcl
jecxz
sbb
inc
sub
stos
mov
pop
insb
xchg
mov
push
or
or
jns
stos
xchg
pop
adc
push
or
push
pop
popf
in
or
dec
cs
ret
sub
add
daa
mov
sbb
leave
cmc
cli
mov
sub
imull
out
fdivrl
xchg
jge
lods
inc
cmpsb
shr
mov
mov
shl
jmp
fmuls
sbb
xor
push
adc
adc
adc
mov
pop
insb
lcall
jo
fdivs
push
sahf
fidivs
xor
into
mov
popa
jge
rcrb
mov
cmpsb
repnz
pop
fnsave
adc
cmp
cmp
icebp
sbb
xchg
insb
les
push
outsl
cmpl
jbe
push
dec
lret
pop
lods
out
outsb
nop
iret
inc
push
loop
dec
push
stc
xchg
clc
pop
mov
mov
mov
adc
mov
loope
in
dec
push
lahf
dec
or
fldl
and
add
push
out
lar
add
js
orl
sahf
and
push
or
outsb
xchg
popa
xor
ja
out
int3
jo
inc
icebp
ret
repnz
pop
sahf
js
es
cwtl
add
outsl
jmp
cmp
in
mov
fbld
mov
push
fwait
pusha
sub
inc
push
shl
mov
and
or
cmp
jb
repz
in
xchg
sbb
js
shlb
roll
movsl
fsubl
out
jne
jg,pt
movsb
out
stos
loope
xor
pop
fwait
cmpsl
xor
pop
movsb
gs
adc
loop
repnz
mov
sarb
mov
inc
js
xchg
addb
pop
movsl
je
pop
push
in
or
fsubp
jmp
sarb
dec
jg
xor
jg,pn
aas
push
nop
mov
sbb
cmc
fwait
and
cmp
add
mov
pop
mov
mov
fucomip
popf
ss
es
dec
clc
jne
stos
lds
lods
je
sbb
add
or
ljmp
shl
sti
pop
stos
cmc
and
mov
movsl
xlat
lock
shlb
push
insb
cmpsb
fldt
adc
sbb
pop
jl
push
cld
test
mov
lahf
pop
mov
in
ljmp
popf
add
inc
xor
mov
add
negb
mov
fldenv
pmaxub
cs
shrl
or
fisttps
ja
xchg
cmpsl
mov
xor
lret
push
sub
pusha
mov
shl
ss
jno
xlat
repnz
data16
fmull
xor
cmp
cld
cmp
in
dec
xchg
icebp
stos
popf
push
inc
ja
inc
out
call
add
lcall
mov
xchg
dec
xlat
sbb
out
frstor
ret
fistps
adc
or
shl
or
push
xchg
cwtl
pop
outsb
test
data16
sub
int3
test
xchg
subb
jge
add
roll
cld
jle
add
jg
push
jns
enter
aam
xor
inc
jbe
and
push
lret
in
inc
lds
mov
push
push
lcall
xchg
xchg
and
das
mov
xchg
sub
imul
ja
xchg
je
mov
clc
adc
cmpsl
pusha
sahf
mov
scas
push
enter
mov
xchg
cmpsb
mov
cwtl
mov
push
xor
testb
xchg
insl
mov
mov
xor
popf
pop
mov
out
mov
mov
les
outsl
inc
lea
adc
cli
dec
and
cmp
sbb
xchg
xchg
sub
int3
lret
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
dec
or
push
sub
loopne
fdivl
adc
int
adc
aaa
enter
mov
push
mov
inc
lds
in
lods
dec
dec
cmp
ja
xor
dec
nop
add
outsb
xor
mov
dec
cli
and
in
jmp
xlat
pop
pop
cmp
mov
insl
icebp
sbbl
mov
pop
xchg
or
cwtl
pop
mov
or
test
int3
gs
rcll
adc
lods
loopne
inc
bound
js
movsl
push
sub
rclb
pop
ret
xor
mov
or
add
xchg
xlat
xorb
stos
dec
pushf
lods
xor
pop
imul
fwait
movsb
pop
or
xchg
mov
inc
ja
popf
popa
sarl
test
repz
push
hlt
scas
add
pop
xchg
mov
testb
inc
outsb
jge
dec
or
lea
mov
sbb
lods
shrb
clc
je
xor
out
testl
and
or
pop
cltd
jl
pop
iret
jmp
adc
jg
cmpsb
rcrl
insl
es
fdivrs
or
cmp
mov
xor
ja
xlat
push
cmp
sub
sbb
sbb
jmp
sbb
add
movsl
push
inc
pop
popf
dec
add
jbe
xor
test
push
lds
in
inc
nop
hlt
or
daa
mov
test
arpl
add
fdiv
or
pushf
mov
xchg
xchg
jle
je
mov
add
add
hlt
or
xchg
aad
cs
sub
pushf
repz
dec
sar
mov
stos
filds
shrl
imul
test
insl
dec
xchg
rcl
xchg
cld
out
mov
scas
in
rolb
mov
pop
clc
jp
push
out
inc
mov
push
inc
dec
cmpb
scas
mov
push
popa
sbb
lds
push
test
adc
icebp
jecxz
shll
push
sbb
cmp
xchg
xchg
cs
adc
les
imul
imul
mov
popf
sub
sub
cld
pop
mov
mov
dec
pop
dec
jo
ret
scas
stos
in
pop
push
scas
ljmp
or
push
out
mov
jnp
push
cmp
inc
mov
cli
test
lret
das
add
sbb
into
add
leavew
push
or
add
es
cmp
mov
loope
or
jl
cmpsl
fcom
repz
sub
jg
xorb
in
push
push
fmul
mov
lcall
mov
jne
push
xor
stos
cmpsb
inc
jne
stc
test
cli
dec
push
xor
push
fsubl
jno
lock
xchg
pop
xlat
das
enter
add
cmp
scas
or
dec
pop
test
jnp
dec
insl
es
or
ss
add
daa
rolb
ds
icebp
mov
decl
sub
and
mov
lock
test
and
ss
icebp
sbb
lret
push
add
test
cld
rcl
leave
clc
jae
loope
add
mov
nop
loop
les
adc
rol
cmpsb
xchg
mov
shlb
cwtl
std
insl
mov
dec
insb
mov
vphadduwq
sbbl
dec
imul
cld
stc
xchg
js
jnp
lods
sub
sbb
cmp
push
shr
mov
mov
xor
mov
xor
or
mov
dec
not
jmp
adc
push
inc
daa
sbb
lods
insb
push
mov
stos
ljmp
adc
adc
stc
ret
cmpsb
and
push
aas
sbb
and
jecxz
sbb
mov
jb
sbb
stos
pop
aas
jns
mov
dec
pop
pusha
jae
cmp
inc
cld
jae
mov
int3
sub
sbb
fcmovb
cli
sbb
dec
pop
inc
lcall
inc
mov
cltd
cmp
dec
rcll
cvtpi2ps
test
outsl
and
cld
jecxz
sub
xchg
pop
add
popa
xor
icebp
sbbl
repnz
scas
scas
dec
mov
stos
push
ljmp
popa
or
bound
mov
fstpt
push
push
loopne
data16
popf
mov
pushf
sbb
jge
stc
pop
js
inc
lds
cs
mov
xchg
xchg
and
lret
js
fwait
rclb
out
cli
or
popf
jb
popf
pop
leave
or
mov
xchg
mov
inc
aad
nop
jge
fldl
xchg
pop
mov
hlt
adc
stc
loopne
insb
pop
mov
sbb
push
jns
fildll
je
push
test
dec
fs
jbe
xchg
add
mov
pop
and
lods
mov
cli
and
and
dec
sbb
push
jle
inc
aad
jno
dec
rorb
jno
jae
cmp
cmp
fildl
stos
popa
cmpsb
mov
xchg
icebp
js
inc
outsb
add
out
cmp
pop
mov
sti
aas
decb
adc
aaa
pop
sub
or
cld
lods
lea
pop
push
pop
pop
add
jae
push
xor
andl
mov
insl
sbb
movsb
pop
cmp
inc
mov
or
push
repnz
test
in
xchg
sbb
or
push
cli
adc
cmp
jb
les
xor
xor
mov
sbb
mov
fsubr
pop
sbb
popf
mov
or
repnz
test
pop
sahf
pop
sub
mov
mov
mov
mov
lods
test
test
js
pop
stos
dec
mov
mov
inc
mov
jns
or
leave
out
xrelease
xlat
xchg
lret
jl
inc
and
aad
jmp
xchg
aam
xor
mov
fsubs
xchg
movzwl
push
or
outsb
gs
mov
lods
stc
mov
pminsw
pop
stos
outsb
sbb
notb
fiaddl
mov
push
frstor
dec
dec
popa
add
mov
lds
jmp
cmpsl
sti
mov
insb
mov
pop
jecxz
jmp
jle
out
mov
ljmp
fldenv
cwtl
mov
xchg
fidivs
fcoml
aam
int
lcall
inc
fcmovb
fld
int3
dec
xchg
in
dec
mov
shrb
in
ljmp
mov
xlat
xchg
flds
gs
mov
lods
test
mov
out
jb
mov
jne
sarl
inc
pop
scas
loop
sbb
fcompl
mov
jo
das
inc
jle
shl
movsl
mov
cmp
add
mov
movsb
scas
rcr
cmpsb
fldt
popa
mov
insb
or
shl
mov
mov
dec
call
mov
jle
jne
lods
xchg
sub
les
rclb
push
fstpl
and
out
jge
cmp
ljmp
xchg
or
ret
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
jmp
jp
lds
sub
movsl
xchg
push
fwait
ret
int
adc
and
shrl
xor
dec
ljmp
rcll
xor
inc
rcrb
sbbb
push
mov
mov
ret
pop
cmp
sub
mov
mov
push
jmp
outsl
adc
cmpsl
jnp
push
loop
aam
aaa
loop
pop
mov
mov
daa
push
mov
fldt
bound
ljmp
sbb
cmp
inc
and
mov
pop
scas
cmp
sub
sub
decl
jo
sub
in
test
inc
add
mov
test
mov
test
jnp
sbb
pop
fidivrs
fwait
pop
sbb
pushf
and
popa
cltd
cwtl
jmp
fs
or
mov
scas
dec
xchg
int3
cmpl
mov
ficoml
loopne
xchg
dec
push
push
cmp
cmp
jae
xchg
xor
xchg
dec
lret
jb
xchg
jo
jo
outsl
or
imul
fs
and
movb
out
cmpsb
faddp
in
push
jp
daa
or
inc
mov
add
fsubs
xchg
inc
sub
xor
outsl
and
jne
mov
mov
push
addr16
bound
pop
dec
ror
lock
add
das
jne
out
pop
std
pop
mov
push
test
test
es
call
in
mov
xchg
test
pusha
push
mov
mov
stos
dec
adc
lods
xchg
int3
das
push
cmpsl
gs
cmp
add
adc
push
mov
jle
mov
clc
nop
in
pop
mov
or
jb
mov
mov
xchg
sbb
sbb
xorb
mov
cmp
mov
add
jne
repnz
aam
push
mov
cmpl
or
cmp
cmpsb
add
mov
in
lods
pop
lds
dec
pop
lret
push
adc
or
pop
fs
pop
push
mov
orb
xor
cmp
rol
mov
fcoms
adc
xchg
fisubl
loopne
aad
xchg
dec
loopne
pushf
mov
cld
push
adc
and
xchg
dec
scas
xor
pop
xor
add
pop
xor
jo
shrl
pop
inc
mov
mov
xor
fdivl
xor
test
mov
jo
enter
mov
lds
or
in
sub
dec
push
xchg
mov
xchg
ljmp
xor
sahf
push
fdivrl
popa
lret
stc
cmp
fs
inc
test
dec
add
pop
pop
lahf
pop
cli
xor
bound
movsb
aaa
cmp
lahf
popa
mov
push
sti
inc
sahf
ljmp
xchg
lahf
mov
mov
hlt
clc
mov
cmp
call
test
dec
aas
jmp
mov
pop
lds
cltd
pop
dec
js
in
adc
pusha
scas
inc
push
add
repz
ja
jno
cmpsl
push
jnp
pop
mov
loop
fistps
mov
jbe
xchg
sub
insl
mov
fs
ja
jnp
mov
or
testl
popf
adc
cli
notl
push
rclb
bound
mov
mov
cmp
hlt
cltd
rcrb
cmpsl
push
aas
xor
into
add
inc
adc
inc
cmp
jl
sub
fs
outsb
insb
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
jmp
imul
sbb
fsubrs
mov
adc
pop
dec
das
push
mov
mov
cwtl
enter
pop
xchg
jle
push
mov
stos
rcr
mov
push
dec
imul
ds
mov
ljmp
js
sub
cmc
mov
rcrb
pop
je
subb
sbb
js
dec
insb
aaa
cmpsb
bound
in
pop
add
adc
lcall
mov
pop
xchg
rclb
imul
adc
lret
cld
aaa
inc
les
pop
lcall
dec
and
imul
sbb
fisubl
mov
addr16
inc
sbb
and
pop
and
jp
cmp
mov
jp
shll
push
mov
push
push
mov
rcrb
hlt
pop
inc
fs
mov
dec
lea
push
mov
and
out
scas
icebp
dec
std
or
cmc
rorb
push
fistl
or
or
lods
cmp
sti
and
shrl
mov
add
nop
fsub
enter
xchg
jge
push
pop
outsl
movsb
push
and
mov
inc
pop
dec
adc
cltd
cltd
test
cmp
xchg
xchg
fbld
cltd
sti
jle
out
sbbl
cs
and
mov
sbb
push
add
stc
sbbl
pusha
aas
stc
lcall
lea
insb
cltd
int3
lea
inc
mov
mov
sbb
js
or
push
inc
mov
daa
iret
ljmp
jp
and
dec
sub
push
cmpsl
fwait
repz
subb
inc
push
sahf
pop
jns
push
bound
push
jno,pn
pop
xlat
fcoms
dec
sbb
dec
add
std
call
daa
mov
scas
and
cli
push
stos
rcrl
pop
cwtl
or
or
push
push
iret
inc
std
dec
lahf
aaa
lcall
mov
jae
outsb
sar
or
les
ss
cmp
pusha
test
and
outsl
xchg
mov
adc
rcrb
fildll
add
pop
rcr
sbb
fs
inc
and
clc
push
mov
xor
test
inc
mov
sti
cmp
push
jae
loopne
push
shrb
rclb
fimuls
rolb
hlt
fs
push
and
out
inc
jns
loope
push
push
jl
sahf
int
imul
jae
mov
add
add
and
pop
imul
push
add
xlat
xchg
imul
cmp
lret
fldenv
outsl
xchg
icebp
xchg
or
sbb
adc
shl
jno
movsb
jmp
scas
push
js
adc
pop
xor
fildll
adc
dec
add
mov
test
lock
xchg
imul
mov
xchg
ja
mov
flds
adc
stos
pop
and
pop
shl
das
xchg
lock
test
adc
aam
mov
push
leave
lcall
or
shlb
outsl
add
sub
inc
mov
or
jmp
pop
pop
stc
loope
outsb
sbb
dec
xchg
pminub
push
divl
sbb
pop
push
pop
mov
jmp
xor
stc
fsubrs
xor
mov
loope
dec
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
jmp
repz
mov
pop
pop
lods
jle
jmp
pop
mov
adc
adc
adc
loop
jmp
popa
shrl
stos
imul
dec
lock
and
cmpsl
xchg
ror
imul
std
and
xchg
sub
repnz
sub
dec
ret
pop
adc
xor
insb
cs
imul
jnp
sbbb
cli
neg
jne
and
cmp
dec
push
iret
lahf
push
lds
jne
jnp
fwait
xchg
dec
popa
mov
les
dec
or
cmp
orb
loop
icebp
movsl
pop
mov
cmpsb
add
ret
inc
out
push
inc
cmc
jle
stos
jbe
adc
or
and
mov
stos
inc
scas
ss
icebp
es
sbb
fisttps
movsb
pop
adcl
sbb
pop
mov
loopne
prefetchwt1
pop
jmp
ret
lock
repz
andb
cli
fwait
push
jge
mov
stos
pop
and
arpl
adcl
jno
andl
outsl
jnp
inc
icebp
dec
ds
vcvtsd2si
jle
insb
dec
push
pusha
cmpb
xor
and
and
jg
sbb
mov
mov
shlb
jge
stc
cmp
push
test
mov
xchg
cmpsb
add
outsb
mov
jmp
in
add
jp
fsubs
stos
cmp
jle
xor
repnz
test
sub
test
lcall
dec
sbb
mov
mov
inc
push
aad
jge
mov
shll
mov
dec
sub
arpl
cli
out
inc
pusha
mov
mov
pop
pop
lods
cmp
arpl
push
or
aad
lock
xchg
xchg
add
xchg
ret
inc
inc
lcall
in
js
jno
pop
dec
xchg
xchg
mov
lahf
dec
xchg
je
or
add
cmp
out
xchg
adc
repnz
jmp
lock
das
in
ficompl
pop
inc
or
outsl
daa
ret
lock
dec
dec
mov
int3
mov
iret
mov
mov
or
out
ja
add
aaa
and
subl
ficoml
clc
in
aad
push
dec
shrl
cmove
mov
mov
mov
dec
dec
adc
mov
jb
mov
adc
add
lock
jg
mov
adc
sti
dec
fs
xor
sbb
mov
push
dec
clc
cmp
xchg
into
cmp
rcrl
int
and
jb
pop
sbb
inc
outsb
xchg
cmp
jnp
div
loope
rolb
cmp
cmp
std
jmp
xchg
push
adc
xchg
aaa
lods
inc
adc
dec
outsb
add
loop
movsb
js
push
xchg
ds
adc
scas
sbb
fs
lcall
repnz
or
sbb
das
push
addl
mov
shrb
jae
sbb
sarb
mov
loopne
iret
ret
xor
stos
mov
or
in
xchg
sub
mov
imul
cmpsl
aam
pushf
xchg
jp
lea
test
fldcw
sbb
pop
leave
jge
sub
loope
sbb
mov
leave
orb
out
jbe
ljmp
gs
pop
in
nop
fwait
clc
loop
push
cs
test
int3
lods
nop
or
or
pop
lods
xchg
inc
cwtl
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
jmp
mov
push
jle,pt
sbb
mov
int
adc
test
stc
call
je
dec
mov
adc
and
sbb
cmp
pop
sub
pop
dec
scas
mov
push
je
pusha
fldenv
lret
and
fistpl
pushf
push
push
aam
std
stc
xchg
xor
cmp
and
test
push
sbb
mov
push
adc
xor
xor
xchg
adc
inc
jo
jg
adc
mov
xchg
pop
popa
out
in
xchg
pop
movsl
cli
test
fbld
cmp
pop
xor
jne
fldt
mov
mov
sbb
adc
lea
shlb
and
leave
pop
dec
push
rcrl
and
push
adcl
scas
mov
jmp
pop
mov
outsb
push
ret
and
push
fcmove
ret
fwait
pop
or
inc
mov
cmp
notl
push
call
in
adc
pop
mov
lcall
jno
mov
sbb
ljmp
pop
scas
dec
xor
loopne
or
data16
iret
pusha
das
push
into
not
mov
xchg
push
push
shll
xchg
pop
aaa
jbe
mov
add
or
adc
mov
ds
jb
in
jb
dec
cmp
mov
iret
repz
push
icebp
add
adc
push
addr16
lahf
idivb
aad
lret
push
sbb
adc
jp
div
popf
outsl
lock
dec
dec
mov
into
sub
xlat
mov
cli
add
mov
pop
and
add
xchg
xchg
imul
pop
rclb
aaa
divps
jae
sbb
iret
lea
pop
fs
ss
xor
jl
push
jl
cmp
pusha
xlat
pop
adc
ret
clc
orl
shll
xlat
dec
cltd
xchg
mov
add
popf
jge
movsb
or
pop
mov
cmp
cmpb
fadds
mov
or
mov
dec
add
and
addr16
pushf
popa
rcr
sahf
sub
jbe
insl
inc
arpl
mov
pop
dec
pop
pop
scas
push
or
dec
cmp
mov
jg
add
cmp
jg
sti
push
or
mov
into
pusha
jp
and
mov
lock
mov
and
loopne
pop
jge
std
dec
outsl
push
test
xor
sahf
and
repz
pushf
inc
aas
sti
or
pusha
mov
inc
js
fsts
arpl
daa
imul
in
repz
mov
fimull
cmp
int
sbb
push
xlat
adc
xchg
push
repnz
out
jno
mov
jne
sbb
aam
xchg
in
pop
dec
loop
mov
and
and
push
rcr
xchg
stc
js
push
dec
int3
adc
outsl
sub
dec
sub
cli
jae
sub
pop
mov
imul
sub
adc
movsb
pop
subb
imul
repnz
shlb
add
popf
fcmove
sub
and
mov
pusha
and
inc
jle
sbb
jae
inc
xor
fsubrs
and
xor
fadds
push
mov
call
xchg
js
push
or
outsb
or
imul
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
sbb
sbb
out
stos
sbb
inc
stos
je
adc
int
adc
dec
repnz
sbb
outsl
gs
movsb
xchg
add
xchg
cmc
incl
iret
lret
mov
xchg
jnp
test
jle
or
xor
mov
jo
imul
xchg
bound
aam
add
push
js
test
or
out
mov
loopne
int3
pusha
jbe
cmc
lds
movsb
sbb
ljmp
shrb
lea
cmp
or
shlb
fildll
dec
cwtl
jnp
jbe
mov
jo
cltd
imull
sbb
dec
add
loopne
adc
jae
cmpsb
enter
clc
dec
push
push
mov
mov
stc
inc
les
jb
hlt
sub
sub
lock
dec
repz
push
mov
pop
xchg
call
sub
mov
mov
lahf
dec
jbe
iret
stc
xchg
xchg
and
ret
cmp
je
mov
rolb
hlt
xlat
dec
push
das
stc
mov
adc
call
or
xor
push
mov
enter
dec
mov
popa
mov
adc
mov
mov
loop
imul
mov
imul
mov
movsl
adc
xorb
andl
ret
inc
cmp
ret
jp
jp
mov
xchg
outsb
lods
in
sarb
mov
lcall
cmp
int
aam
aad
sub
int3
jb
xchg
mov
ret
orl
add
imul
adc
leave
hlt
jmp
add
inc
add
or
sbb
mov
es
mov
iret
movsb
pop
and
sub
pop
out
cmp
add
jge
pop
incl
loop
add
mov
outsl
jle
cmp
or
nop
or
sbb
xchg
lcall
dec
lea
pushf
xchg
jmp
add
xor
adc
nop
mov
sbb
cmc
out
or
imul
adc
mov
xchg
rcll
or
push
mov
shr
cmp
insb
add
push
jbe
mov
out
jb
xor
mov
sub
jp
adc
bound
pop
inc
loopne
ret
xchg
jg
inc
jne
pop
mov
ljmp
mov
push
sbb
or
jb
clc
gs
pop
pop
aas
adc
and
lret
aaa
xor
out
push
pushf
mov
pop
testl
enter
nop
insl
xor
adc
jb
adc
jo
sti
loop
mov
sbb
orb
ja
mov
lret
insl
sub
aam
push
adc
decl
fcomps
fwait
andl
int3
inc
rcl
test
mov
dec
nop
add
cwtl
pop
imul
xor
add
or
std
repz
cmpsl
push
push
push
jb
rcrb
addr16
inc
pop
xor
xor
mov
insb
fistpl
inc
imul
mov
cltd
inc
rclb
or
shl
mov
std
xlat
mov
mov
jecxz
leave
popa
pop
push
mov
sbb
push
mov
push
out
adc
push
iret
stos
je
insb
ljmp
aaa
ljmp
mov
push
cmp
ja
inc
jge
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
jmp
adc
jmp
repnz
ret
push
or
int
adc
out
out
ljmp
pop
inc
or
stos
adc
jbe
ret
jg
cwtl
cmp
jmp
inc
lods
cmpsl
out
data16
cmp
jns
stc
test
or
scas
pushf
inc
or
jmp
cmp
ret
xor
shrl
in
outsb
mov
xchg
push
leave
jmp
imul
inc
loop
mov
hlt
cwtl
fdivs
iret
pop
fstpl
push
movsl
cmovp
test
cmp
stc
leave
xchg
out
aaa
mov
pop
hlt
inc
scas
xor
pop
subl
bswap
sub
int3
leave
stos
push
add
adc
ja
icebp
cmp
pop
lods
xchg
sbb
xor
std
mov
clc
aad
outsb
jmp
shll
mov
sbb
jbe
sbb
scas
adcl
xor
int
adcb
aam
std
mov
pop
lret
imul
push
shll
nop
jle
outsb
lret
dec
xor
and
mov
call
sub
xor
lock
mov
lea
jge
and
js
pop
dec
mov
popf
imul
ja
jb
xchg
jmp
out
fwait
aam
cmp
fwait
push
lock
lret
fisubl
imul
stc
push
push
mov
mov
adc
xor
popf
mov
mov
fisubrs
pop
ja
stos
and
ljmp
pop
lcall
in
dec
pop
cmpl
sbb
pop
repnz
lds
test
loope
add
dec
push
mov
mov
jne
pushf
inc
pop
or
lods
sbb
push
pop
jbe
pop
ret
xor
xchg
js
lret
fwait
sub
icebp
cs
jmp
stc
es
mov
jle
stos
int
iret
add
pushl
jmp
aam
ljmp
push
lcall
subb
shl
into
jmp
add
xor
sti
sub
nop
and
shrl
sbb
cwtl
movsb
lods
call
in
dec
xlat
movsb
push
call
aam
adc
push
xor
ret
xchg
push
push
inc
jl
cwtl
xchg
push
stos
dec
xchg
lock
mov
aaa
stos
xchg
push
nop
adc
leave
imul
xorb
addr16
adcl
jle
inc
and
dec
out
push
lock
xor
lret
mov
rolb
sahf
add
movsb
xchg
lret
push
lea
jo
push
adc
mov
ja
cmp
out
and
mov
repz
lock
xor
xor
shll
lds
dec
lods
jle
gs
and
cmp
mov
push
andl
sarb
aad
enter
pop
sub
cmp
pushf
sbb
ljmp
pmaxub
inc
dec
das
out
repz
inc
jg
inc
sub
adc
mov
pop
and
mov
stos
mov
out
jp
jle
das
lcall
jbe
jp
aam
inc
mov
out
out
test
mov
movsb
pop
sub
cwtl
in
repnz
shrl
insb
mov
mov
xor
xor
mov
mov
jmp
mov
jmp
or
jge
pop
push
dec
cltd
cmc
leave
lcall
xchg
adc
int
adc
adc
pop
sbb
inc
repz
mov
sub
fucomip
push
add
xor
lcall
hlt
pop
sbb
cmpsb
jno
daa
outsl
jnp
jecxz
xlat
add
sub
loope
xchg
xchg
dec
sbb
push
in
out
jle
cld
shlb
fistpl
and
adc
pop
push
push
mov
lods
idivb
mov
mov
inc
and
mov
loope
sahf
fdivrl
repz
sbb
cmpsb
or
push
dec
pop
push
dec
push
xor
lcall
or
mov
jns
in
add
sub
add
or
call
add
sti
fcoml
jne
ror
sbb
lahf
mov
in
out
cld
fs
cmp
and
mov
addr16
sbb
jmp
sub
into
push
cmp
sub
pop
xor
and
int
pop
pop
xchg
adc
leave
jne
xchg
shl
pop
push
mov
xlat
pop
xchg
aaa
aad
sbb
inc
fs
fs
jl
inc
enter
shlb
adc
clc
ds
loope
scas
rorl
pop
aaa
aaa
rorb
pop
lret
in
shrb
leave
mov
push
test
mov
cmp
negl
push
dec
ret
loopne
roll
push
add
cmp
int3
mov
push
fwait
lret
movsb
adc
sbb
fcoms
popa
cltd
inc
mov
iret
mov
jecxz
mov
repnz
adc
dec
and
lods
cwtl
stos
lahf
dec
andl
outsl
jmp
test
jo
xchg
cmp
add
push
xlat
xchg
mov
shll
in
outsl
lods
out
pop
dec
fisttpll
push
fldcw
mov
mov
pop
outsb
mov
dec
xlat
adc
adc
add
cmp
fidivrl
add
xor
jge
push
xor
jg
inc
je
mov
mov
and
negb
mov
pop
ret
and
cmpb
adc
cmpsl
xor
or
pop
out
and
ret
mov
incb
mov
mov
or
cwtl
cmp
sbb
enter
and
in
and
mov
insl
and
dec
pop
loop
ljmp
lcall
xor
lea
pop
ret
pop
hlt
inc
rclb
int
cltd
sbb
mov
push
lock
dec
dec
mov
repnz
jo
cmpsb
lret
push
jmp
aam
push
sbb
add
mov
fldl
test
dec
fimull
enter
push
scas
fistl
popa
ja
cs
jecxz
cmp
pop
and
mov
lds
mov
mov
pusha
pushf
push
addr16
imul
fidivl
call
adc
xchg
dec
int3
shl
sarb
fwait
fwait
aas
mov
daa
cmpsb
mov
nop
push
dec
mov
pop
sbb
popf
sub
cmp
enter
and
mov
in
enter
lea
movsl
mov
push
mov
mul
ja
stos
xchg
add
hlt
mov
notb
or
push
je
lret
data16
add
inc
fmuls
cld
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
jmp
stc
sub
xor
pop
lods
lcall
adc
mov
xor
cmpb
fisubl
outsb
pop
adc
xchg
xor
sbb
xor
inc
inc
shlb
mov
pop
lret
xor
lock
cli
xchg
mov
test
cmp
in
cli
lea
jg
aaa
dec
adc
pushf
addr16
pop
mov
outsb
in
rolb
in
sbb
repz
es
push
jp
sbb
sub
cld
je
jb
xor
mov
ret
cltd
mov
andl
xor
cmp
xchg
jae
jge
jnp
add
inc
idiv
pop
mov
mov
loop
mov
lods
testb
out
pop
fistpll
shlb
jne
fldenv
inc
fadds
repnz
xchg
ficomps
test
ja
inc
inc
mulb
push
scas
sub
in
scas
cmp
dec
inc
js
mov
cmp
shl
leave
lahf
lods
cmpsl
sarb
cltd
push
fsubrl
arpl
cmp
hlt
out
lea
in
lret
test
xchg
inc
mov
addl
jns
outsl
cmp
orb
in
push
mov
sub
inc
jns
cmc
das
das
add
pop
cmc
push
adc
and
jp
sub
or
xor
cmp
cmpsl
mov
cmp
ja
pop
icebp
mov
adc
hlt
leave
dec
ds
std
out
jge
sbb
mov
xlat
pop
leave
add
cwtl
jl
pop
xor
xorb
cmpsb
inc
out
dec
lea
int
mov
xchg
mov
movsl
or
fwait
jo
in
loopne
sbbb
outsb
int3
push
cs
int3
out
mov
sahf
lret
mov
xor
fiadds
xor
push
mov
aas
xchg
shrb
mov
arpl
outsl
sarl
out
sub
mov
shll
jb
dec
xor
mov
fmuls
dec
faddl
ja
cltd
jg
imulb
lods
in
fnstcw
dec
adc
fistpll
lods
and
ljmp
dec
lret
xor
scas
xor
mov
lods
es
and
nop
out
aas
test
data16
pop
adc
mov
shll
mull
es
mov
dec
lret
hlt
sbb
loopne
lds
xor
push
fwait
mov
cmp
pop
sub
lods
push
adc
int3
lret
push
dec
xor
sub
xor
pop
mov
push
pop
jbe
aad
push
shr
sub
xor
inc
lret
and
mov
ret
jne
add
xor
repnz
pop
lcall
cmpsl
cmp
pop
mov
and
lret
inc
in
jg
pop
fsubr
push
iret
jecxz
mov
decl
out
arpl
dec
mov
xchg
mov
push
int3
fwait
repz
arpl
lret
movsl
repnz
xchg
ds
fists
jb
popa
lds
mov
pop
sbb
inc
mov
mov
inc
jl
push
mov
sbb
pop
cmpb
sub
and
dec
je
sub
adcl
pop
xchg
cld
inc
lcall
addb
arpl
out
sub
inc
or
enter
add
or
mov
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
jmp
dec
popf
shll
pop
das
popf
ffreep
mov
sti
mov
adc
int
adc
mov
loopne
imul
into
jmp
jmp
repnz
stos
mov
jb
jge
idivb
aam
pop
ds
mov
iret
jle
ss
jae
mov
jae
jmp
test
jp
stc
in
jne
push
scas
sbb
mov
cmp
mov
mov
dec
push
lods
push
lea
xchg
pop
dec
jge
pop
js
sub
cmpsb
lahf
dec
mov
cltd
addr16
lds
rcrl
mov
adc
pushf
mov
xor
and
insl
and
dec
cld
sub
jg
lock
negl
lock
jns
mov
divb
fistpl
jle
inc
popa
push
ret
xor
movsb
pop
cmp
outsl
jnp
ja
cmp
leave
adc
lock
mov
or
sbb
daa
stc
push
dec
stos
fdivs
es
fsubp
pop
dec
and
call
test
pop
lret
iret
shl
inc
jl
mov
and
test
sub
mov
clc
mov
cwtl
std
pop
push
xlat
in
rorb
insb
cmpsl
mov
ss
cltd
mov
mov
add
cmp
xchg
pop
or
lret
or
inc
cmpsb
cwtl
imul
icebp
cwtl
sub
jns
xor
pop
insl
shl
insb
sbb
in
popa
les
push
push
sti
aaa
push
lds
into
xor
out
out
out
test
dec
xchg
jp
mov
mov
mov
xor
aas
xchg
outsl
add
outsl
loope
or
jle
or
lods
ss
outsl
out
xchg
jge
push
ja
nop
and
jb
je
popa
out
fidivrl
jle
mov
std
filds
mov
pop
jno
fisubrl
ljmp
mov
xchg
cmpsl
adc
xchg
out
dec
mov
xchg
lds
sub
mov
xchg
test
mov
fcmovnb
jp
inc
addb
xchg
andb
clc
xor
jbe
xor
incb
add
aas
dec
mov
push
stos
lock
call
je
cmp
xchg
fcoml
loope
xlat
sub
pop
out
lea
xor
stos
dec
sub
outsl
mov
lret
mov
push
pop
inc
dec
gs
hlt
lods
jl
xor
pop
movsl
in
pop
xor
jle
xor
js
push
mov
pop
mov
jnp
ds
je
rorb
ss
dec
xchg
inc
mov
mov
lahf
insb
clc
pop
xor
and
push
cmp
filds
cmp
andb
stos
addr16
xchg
pop
pop
mov
sbb
mov
aas
out
or
add
add
mov
push
jnp
mov
lock
addr16
fstpt
shrb
aad
xor
mov
mov
xchg
inc
fsubrs
push
mov
dec
sub
inc
push
pop
sbb
mov
pop
mov
mov
pop
lahf
mov
mov
int
gs
out
adc
out
mov
int
adc
mov
popa
pop
movsl
bound
outsb
int3
fisubrs
add
cmpsl
inc
addl
xor
dec
dec
inc
inc
sub
das
jecxz
pop
ss
xchg
lea
or
movsb
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
imul
imul
adc
sti
jle
jl
adc
adc
adc
add
cltd
aas
mul
adc
mov
repz
pop
psubb
gs
cld
movsl
cmp
xchg
das
adc
gs
jmp
pushf
cmp
insl
push
jp
jns
jle
insl
lock
pop
lret
push
stos
jae
sbb
in
xchg
mov
adc
into
add
dec
mov
in
scas
mov
or
lods
adcl
mov
aad
push
int3
inc
stos
mov
push
or
cmp
mov
iret
lock
fidivrl
in
out
adc
cmpl
loopne
sub
pop
mov
daa
sbb
jb
adc
sbbb
sarl
xchg
mov
in
jle
in
test
push
mov
xchg
lock
cmpsl
sub
push
cmpsb
mov
call
nop
aas
test
xchg
enter
lahf
adc
repz
notl
cli
xlat
inc
inc
cmp
dec
imul
add
cmp
in
mov
insb
roll
dec
push
mov
negb
add
into
inc
sahf
pop
xchg
inc
add
or
imull
mov
fcomps
dec
daa
jbe
sbb
xchg
das
sbb
dec
push
push
mulps
dec
mov
icebp
orb
bound
mov
dec
ljmp
js
out
addr16
int
push
sahf
fldcw
push
sub
insl
sub
out
test
mov
or
sbb
pop
cmpsl
mov
mov
cli
sub
cmp
xchg
mov
imul
push
push
xor
stc
add
and
xlat
pop
outsl
push
les
add
pop
push
push
xor
sub
and
jae
lcall
adc
xchg
xchg
jecxz
sub
or
or
inc
xor
int
cli
cmp
jl
adc
dec
subb
mov
lahf
mov
test
adc
pop
push
jge
dec
aas
jmp
inc
shld
mov
pop
cmp
int
ret
mov
lock
sub
add
repnz
add
jo
or
lds
int3
sub
push
insl
mov
mov
aad
out
push
int3
jae
adc
xchg
cli
mov
sub
mov
int
and
mov
xchg
push
xchg
sub
stc
sub
mov
and
insb
sarl
shrl
ret
daa
sub
mov
mov
pop
jo
cli
jbe
fadds
jne
call
adc
pop
xchg
stc
in
or
lret
xchg
pop
cltd
xchg
push
or
inc
gs
adc
lods
pop
repnz
jge
sbb
push
mov
mov
rorl
fisttpl
push
mov
jmp
jmp
sub
into
outsl
les
repz
push
xchg
loope
or
mov
nop
add
xchg
xchg
cmp
sbbl
inc
pop
mov
out
sti
jmp
mov
or
sub
jg
out
xor
add
je
insl
repnz
sbb
pop
cs
xchg
arpl
out
cmp
add
je
outsb
inc
in
stos
and
xchg
insb
push
in
mov
push
pushl
push
push
call
mov
jmp
xor
sbb
stos
int3
pop
cmpb
adc
adc
daa
gs
loopne
dec
aas
int3
fisubrl
fs
xchg
jle
das
gs
jl
loope
outsl
int3
jo
movsl
out
cmp
xor
jmp
imul
add
mov
push
mov
pushf
ljmp
popa
mov
mov
loop
in
sbb
add
mov
aad
mov
rorb
cmp
cwtl
leave
dec
pop
repnz
sub
push
repnz
mov
mov
insl
mov
xor
ss
popa
lods
aad
jno
divb
dec
stc
pushf
jb
dec
and
jl
lcall
je
ljmp
cmpsb
adc
roll
sub
in
push
or
out
mov
jecxz
es
fwait
inc
outsl
ret
inc
test
jno
scas
jg
rclb
jmp
mov
mov
pop
pop
cmp
cmpsb
aas
fwait
cltd
and
js
dec
add
movsl
inc
stc
pop
push
cmp
mov
cmp
pop
and
mov
dec
xor
push
inc
shlb
hlt
movsb
outsl
add
xor
sub
mov
dec
int
inc
cmp
inc
and
push
or
jmp
movsl
cld
pop
sub
xchg
out
imul
addl
pushf
inc
sbb
mov
scas
pushf
out
jno
push
or
loopne
jmp
sub
xor
dec
test
shlb
xor
and
cld
cs
mov
jge
pop
out
sbb
mov
out
push
xor
or
push
xchg
mov
movsb
pop
mov
mov
dec
push
decb
mov
pop
std
fucomip
pop
inc
pop
push
ja
jo
popa
jmp
das
outsl
data16
jb
imul
cmp
mov
push
lea
dec
xor
iret
orl
sub
or
mov
mov
mov
arpl
shr
fistpll
sub
lods
stos
in
push
loop
xor
jle
cmpsl
mov
adc
outsb
into
add
lahf
mov
pop
fnstcw
push
pop
jmp
xor
dec
testl
int3
push
repz
pushf
incb
xor
hlt
mov
bound
clc
inc
and
inc
insl
pop
sub
and
adc
rclb
cmc
or
mov
sub
cmp
negl
dec
cmp
out
add
cmpl
outsl
scas
jb
scas
sub
adc
movsl
jmp
cmp
xchg
push
sbb
and
fcmovne
lds
ret
dec
out
jg
pop
adc
dec
push
xchg
dec
leave
aad
inc
movsl
jmp
pop
and
pop
leave
int
sub
jecxz
out
es
mov
cmp
icebp
adc
out
ficompl
in
push
cld
clc
mov
dec
adc
add
mov
insl
sub
or
sarl
dec
push
std
pop
insb
mov
mov
aam
loope
inc
mov
ss
and
pop
mov
sub
in
jle
dec
jmp
xchg
pop
and
or
insl
cli
jne
pop
lock
outsb
inc
loopne
mov
adc
mov
push
aaa
sub
pop
cmp
mov
push
je
fbstp
dec
add
gs
shrd
jmp
ja
jle
sub
xchg
mov
js
sub
jno
adc
int
adc
leave
mov
pop
dec
int3
daa
dec
cltd
dec
inc
outsb
mov
les
adc
leave
lret
dec
sbb
xorl
scas
push
jg
test
push
arpl
push
mov
sub
xchg
outsl
js
mov
jnp
cld
ss
pop
or
mov
aaa
inc
incl
mov
jns
xor
adc
cwtl
and
adc
xchg
aas
nop
lds
or
mov
push
xchg
aam
mov
std
aaa
push
mov
mov
std
iret
jmp
mov
fs
aas
mov
ljmp
ret
jno
pop
mov
jge
js
mov
add
shlb
jne
push
dec
xchg
or
out
inc
call
repz
adc
aam
aam
in
lret
dec
push
iret
adc
sbb
mov
test
ja
ret
test
dec
or
adc
inc
popa
add
pop
fistl
sbb
xchg
loope
repz
adc
arpl
cmp
xchg
adc
push
lahf
jnp
sahf
push
jns
into
aam
sbb
fwait
test
fadd
repnz
sbb
pop
dec
and
lock
into
sar
fisttpl
ret
out
and
cmp
arpl
insl
mov
andb
les
jnp
jle
cltd
in
dec
popf
mov
insb
icebp
adc
xor
into
movsl
aam
inc
loopne
es
pushf
mov
jg
pop
adc
mov
mov
mov
hlt
mov
repz
or
and
dec
sbb
scas
ja
pop
or
sub
add
or
or
and
pop
sbb
add
divl
sahf
push
loop
mov
cmpsb
inc
jnp
dec
cmp
out
insb
dec
shrl
pop
fdivrs
and
or
sbb
cli
and
jb
jne
ret
repnz
stos
enter
fcmovbe
xchg
jl
push
js
lahf
or
push
and
out
cmpsb
cltd
jns
imul
pushf
add
mov
out
aad
scas
cmp
sti
rcl
cmp
dec
or
movsb
jae
add
div
ficoml
sahf
repnz
mov
push
es
jle
mov
pop
dec
sub
inc
daa
xchg
pop
jnp
ror
cmpsb
mov
ret
repnz
lcall
or
xor
inc
adc
fs
add
add
ja
adc
fucom
shll
lahf
sti
fistps
negb
jb
lods
ss
imul
in
push
jno
pop
mov
xchg
sub
add
dec
push
xchg
or
jmp
ficompl
shr
fists
mov
push
fdivrs
xchg
jle
pop
or
pop
jno
mov
ss
inc
add
mov
jo
jl
sahf
mov
fs
jns
rorl
out
cmp
pop
ja
lods
sub
lock
push
scas
test
adc
mov
out
scas
imull
arpl
adc
es
aas
mov
sti
mov
push
jecxz
push
cli
lods
sbb
xchg
insl
clc
adc
cmp
push
adc
xchg
dec
cmc
sbb
or
inc
inc
push
pusha
in
sbb
xchg
cmp
cmpl
gs
mov
jo
mov
cltd
loopne
fdiv
mov
mov
xchg
sbb
imul
mov
jmp
xor
push
xor
mov
mov
mov
push
jmp
bnd
test
jp
ljmp
int
adc
iret
ljmp
xor
cmp
outsw
in
adc
sbb
shl
es
jl
mov
sub
test
mov
int
push
inc
mull
add
or
and
aas
rcl
loopne
imul
pop
out
mov
xchg
subb
jge
inc
ss
jbe
es
adc
mov
divb
pop
sub
cld
add
hlt
inc
out
mov
aaa
rcrl
pop
call
pop
adc
pop
adc
mov
aam
inc
cwtl
dec
jecxz
push
cmc
cs
or
sbb
jae
mov
ret
push
jnp
jno
iret
xchg
addl
movsb
push
int
xor
bound
pop
popf
out
into
and
push
sti
movsb
mov
mov
inc
jmp
push
adc
and
loopne
pop
lea
sub
and
fs
cmpsl
xchg
sub
push
or
mov
call
lods
xor
sahf
cmp
mov
cmp
insb
mov
push
insl
xor
mov
jns
subl
jnp
outsl
stos
pop
xchg
xchg
xchg
mov
test
jecxz
je
and
xchg
notb
mov
negl
mov
repnz
pop
push
hlt
xor
dec
es
push
lea
adc
pop
test
das
sti
mov
add
adc
and
sahf
fisubl
adc
fcoml
mov
push
cli
in
dec
inc
sub
rsm
ljmp
loop
pop
mov
icebp
xor
movsl
or
pop
inc
inc
mov
in
xchg
dec
push
jnp
adc
mov
test
mov
xchg
out
rorb
push
inc
addr16
jns
mov
xor
ret
mov
ret
int
cltd
fucomip
add
push
gs
sbb
xchg
adc
cli
js
jno
jg
fwait
adc
jnp
pop
xor
xchg
int
rorl
movsb
and
aaa
jge
sbb
inc
shlb
in
rcl
sbb
cmc
jb
sub
lahf
out
test
std
fs
xchg
inc
clc
ljmp
ds
sub
mov
rorl
cmp
subb
dec
dec
in
aas
ss
dec
lret
inc
xchg
fistpl
pop
jo
sbb
out
or
scas
mov
jbe
and
inc
dec
xor
in
mov
lea
and
and
cmp
testb
mov
and
lods
scas
inc
sub
or
sbbl
mov
inc
clc
push
dec
inc
cwtl
gs
mov
cld
adc
sub
add
lods
cs
shll
and
dec
pop
cmp
cli
pop
outsl
je
lret
jp
xor
jno
sub
lods
fisubs
push
mov
mov
and
xlat
sbb
cmp
mov
int
js
loop
test
sbb
bound
pop
or
mov
lret
inc
test
popa
loop
mov
cli
push
push
lods
dec
xlat
enter
add
push
cmp
jl
leave
sahf
sub
test
or
inc
sbb
push
pop
pusha
mov
test
icebp
cmpsl
push
lea
push
lretw
in
fiadds
push
jmp
cmpsl
jp
stos
aaa
xlat
inc
or
test
js
ja
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
sbbl
jmp
test
sub
sub
int3
inc
stos
insb
fisubs
adc
adc
stc
test
xor
xchg
lods
jge
int
xor
aam
hlt
jae
lahf
loopne
aad
and
rol
dec
jmp
add
jo
xor
sbb
mov
mov
sar
sbb
inc
imull
mov
inc
lods
inc
loopne
mov
ss
push
mov
cmpsb
or
sbbl
jge
xchg
dec
fadds
shrl
mov
insl
add
inc
and
iret
insl
adc
inc
cmp
and
iret
in
imul
cli
xchg
std
adc
add
jmp
jg
fistl
pop
mov
dec
dec
jle
push
js
mov
dec
ret
nop
aad
test
lret
pushf
sub
mov
outsb
xchg
testb
fimull
xor
mov
and
dec
sbb
add
sbb
int3
jne
jl
aam
adc
loope
xchg
push
popf
or
jp
inc
lret
les
loop
jg
mov
popa
sub
test
fs
movsl
int
movsb
and
mov
sbb
sub
add
daa
inc
jl
cli
ja
push
push
lea
dec
test
and
into
xor
fs
or
add
daa
call
in
sarl
ret
fistl
jle
xorl
lahf
adc
incl
test
iret
ficoml
jae
insl
lods
sub
mov
push
movsl
xchg
add
pop
dec
mov
test
jmp
int
stos
push
inc
test
xor
push
inc
test
out
shl
cmpsl
pop
jmp
popa
jae
push
lret
jne
daa
ret
jg
cmp
cmpsl
in
enter
xchg
ljmp
pop
jge
jmp
cmp
mov
sub
xchg
and
ss
jbe
scas
add
jns
cmp
pusha
or
iret
mov
ficoms
int3
adc
xchg
or
push
sbb
xchg
jp
idivb
aad
mov
lahf
or
sub
roll
push
jae
xor
and
cld
xor
mov
mov
mov
mov
mov
and
pop
dec
imulb
inc
dec
or
sub
in
ret
mov
sbb
cmpsl
mov
cltd
popa
xor
or
pop
jmp
aam
leave
pusha
lds
mulb
add
loop
aas
lods
pop
or
outsb
and
scas
cmpsb
ficoml
aas
cmpsl
rcrb
idivl
es
push
mov
loopne
adc
push
xchg
mov
xor
or
das
pop
sti
je
mov
and
pop
mov
sbb
xchg
mov
divb
push
mov
inc
inc
push
call
cmp
xchg
mov
inc
dec
mov
cmp
xchg
cmpsl
sbb
jle
lock
jno
sarb
test
fsubl
xchg
fcomip
adc
pop
mov
shlb
sub
dec
in
out
neg
nop
jecxz
mov
bound
mov
out
repnz
or
dec
xchg
sub
in
dec
dec
cwtl
push
and
js
or
pop
ljmp
leave
sbb
arpl
outsb
cmpsl
xchg
and
movsl
orb
jns
ror
push
adc
fisubrl
push
loop
rclb
mov
xchg
lea
je
pusha
push
or
loopne
mov
scas
sub
rcl
sbb
cli
cmpl
mov
dec
std
push
loopne
push
insb
xor
cmpsl
push
mov
loopne
pop
or
arpl
push
shrd
movl
shr
ret
movzwl
sub
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
add
movl
or
mov
mov
cmpl
mov
mov
mov
movl
jmp
movl
movl
ja
pushl
push
push
pushl
push
pushl
pushl
call
xor
adc
andl
adc
sub
add
addl
movl
cmpl
mov
mov
movl
jmp
movl
mov
jne
call
or
movzbl
sub
mov
and
or
mov
or
xor
mov
or
movl
adc
movl
sub
movl
push
movl
xorl
movl
and
push
sub
movl
sbb
mov
andl
mov
push
push
addl
push
call
xor
mov
mov
movl
push
movl
or
adcl
push
or
xor
xor
push
andl
push
call
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
not
je
push
pushl
push
pushl
push
pushl
pushl
pushl
push
pushl
push
push
pushl
call
orl
notl
adc
mov
sbb
add
and
inc
mov
addl
push
orl
push
addl
push
push
decl
call
cmpl
movl
mov
mov
jmp
movl
jne
pushl
push
call
add
add
adc
mov
xor
add
sub
or
mov
and
mov
mov
or
cmpl
movzwl
movl
movl
jmp
movl
movl
jae
pushl
call
adc
xor
xor
adc
orl
add
mov
add
mov
subl
movl
mov
xor
movl
mov
xor
add
sub
and
movl
adcl
movl
jmp
fcmovne
mov
test
repnz
pushf
lods
adc
adc
adc
adc
or
in
mulb
fnstenv
movsl
negl
or
data16
cmpsl
es
bound
insb
sub
aas
jb
rorl
pop
in
pop
xor
std
sbb
jle
add
les
cmp
js
ret
adc
shll
cltd
das
and
cmp
fcmovbe
popf
jp,pn
xchg
out
cmp
ljmp
out
pop
push
mov
xorl
mov
int
test
push
xchg
bnd
mov
sub
ror
std
and
inc
in
cmp
fmull
in
mov
mov
jns
out
stos
test
cmc
stc
aaa
cmp
mov
sarl
mov
inc
cmp
xor
jb
pop
sub
lahf
or
in
imul
dec
and
test
mov
lods
dec
add
push
ljmp
aad
mov
cli
fists
lret
xorb
cmp
cltd
hlt
lock
fcompl
cmp
adc
or
mov
je
adc
mov
shl
iret
ret
mov
popa
inc
daa
adc
add
and
insb
in
or
mov
shll
inc
cmpsb
lcall
das
mov
add
or
fidivs
sub
lahf
mov
mov
rorl
je
in
mov
test
or
xor
addr16
sti
mov
aam
mov
inc
add
pushf
adc
mov
push
scas
lods
aad
dec
add
mov
test
test
mov
jp
filds
test
movsl
ret
clc
mov
sarb
jecxz
adc
fcmovb
clc
jge
mov
dec
mov
xchg
jae
test
adc
pop
ljmp
arpl
sbbl
jmp
mov
pop
or
fimuls
xchg
lds
xchg
in
xchg
mov
cmpsb
or
lcall
sbb
out
or
push
testl
fcmovu
data16
or
insb
pop
imul
jns
sbb
addl
inc
xor
pop
fldt
jns
pop
push
or
out
cmp
dec
jb
insl
mov
fbstp
mov
aas
fidivrl
std
jns
idiv
sbb
dec
add
or
dec
xchg
movsb
adc
cmp
pop
jno
xchg
and
jecxz
mov
rolb
push
clc
xor
mov
mov
mov
mov
xchg
jns
pusha
xor
adc
pushf
rorl
lods
fldt
sub
out
jl
pop
mov
dec
xlat
or
or
leave
fyl2xp1
fdivrp
mov
mov
movsb
jecxz
push
sbb
push
fwait
pop
gs
ficoml
sbb
lret
inc
xor
mov
adc
insl
repz
jbe
clc
stos
sub
loopne
pop
imul
pop
mov
dec
mov
dec
outsl
nop
mov
sbb
lods
xchg
mov
aaa
cli
jecxz
test
pushf
xchg
cmp
dec
aam
sbb
pop
mov
insb
mov
lret
mov
movsl
mov
nop
mov
movsb
cmp
push
push
mov
push
repnz
outsl
movsl
xchg
inc
lock
push
sub
cmpsl
cli
faddp
lahf
xchg
or
insb
inc
dec
inc
mov
frstor
ret
std
sbb
push
fldl
sbb
or
mov
in
cs
repz
cmpsl
lds
test
aas
lods
out
pop
out
movsl
lock
push
xor
xorb
mov
int
movl
cmpl
not
mov
mov
movl
jmp
movl
mov
jg
pushl
pushl
call
add
orl
sub
adc
movzwl
add
mov
mov
sbb
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
jmp
in
mov
sbb
sub
jle
lahf
cmp
push
adc
xor
adc
stc
cs
mov
fcompl
sbb
ljmp
sahf
dec
fbld
loopne
mov
sub
mov
scas
outsl
stos
cmp
stc
cmp
jno
int3
xchg
mov
in
sub
inc
cmpsl
int3
es
cmp
sahf
hlt
jge
adc
aam
fdivrs
out
xchg
aaa
ret
cltd
bound
or
out
jge
sbb
add
sbb
ret
int
mov
mov
dec
insl
dec
and
into
notb
repnz
mov
xor
pop
sub
sbb
rcll
fwait
sub
add
sub
mov
jle
adc
aaa
shrb
int3
mov
xor
jmp
inc
or
insb
mov
in
sub
lock
add
out
or
xchg
jmp
inc
and
in
or
jb
pop
mov
xor
or
movsl
or
bnd
add
ss
xchg
in
lret
push
add
fildll
jecxz
aad
out
outsl
arpl
dec
repnz
mov
and
mov
iret
mov
xor
xlat
add
testb
stc
les
mov
sub
dec
icebp
sbb
ja
jbe
negb
push
cmp
mov
sub
test
imul
adc
dec
dec
mov
into
dec
popf
loope
xchg
je
js
cmp
stc
in
roll
xor
mov
dec
ret
pop
daa
add
cltd
lock
jno
mov
xchg
add
in
icebp
mov
into
sub
add
xchg
mov
test
test
sbb
scas
or
in
inc
push
lret
or
sub
pop
jns
xchg
mov
jp
mov
cmp
subb
jbe
mov
push
popa
mov
adc
or
pop
pop
adc
sbb
sbbl
ljmp
dec
dec
popa
push
lcall
xchg
lret
dec
out
inc
and
push
mov
or
sub
xchg
xchg
xor
mov
mov
pop
rcll
push
add
push
xchg
adc
loop
add
and
xchg
scas
push
js
jle
inc
xchg
repz
adc
mov
out
imul
mov
push
lcall
xorl
cmp
pop
ja
stc
je
repnz
aaa
stc
lahf
inc
dec
scas
fistpl
lea
xchg
gs
push
jno
inc
pop
dec
mov
and
ja
fcoml
ljmp
mov
xlat
out
je
fcoms
and
outsl
aam
push
pop
mov
popf
aas
adc
xor
xor
xor
pop
xor
xor
jl
test
pop
push
mov
ficomps
and
xchg
xlat
mov
dec
imul
loope
lret
movsl
mov
push
pop
jl
aam
or
imul
jb
mov
add
mov
xchg
inc
lahf
mov
dec
lds
adc
xchg
jp
sbb
movl
xchg
cmp
out
fldenv
loop
sub
mov
add
cmpsb
inc
test
cmp
out
inc
adc
clc
hlt
insb
and
xor
loope
lods
cmc
sahf
sub
lods
leave
insl
push
or
dec
addr16
or
inc
shll
fwait
mov
test
add
xor
fstpt
ja
and
adc
mov
pop
frstor
add
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
jmp
enter
pop
xor
push
push
fistpl
adc
adc
adc
add
sbb
mov
or
push
lds
add
sub
add
imul
inc
gs
shr
bound
test
pop
out
xor
fsubl
jne
and
xchg
cmp
jg
pop
ret
aas
mov
mov
pop
loope
jp
lds
jno
test
jg
add
ret
cmc
push
cmp
xor
decl
push
in
cmpsl
mov
outsl
cltd
mov
lds
and
pusha
ja
aas
inc
in
scas
pop
cmp
xchg
pop
inc
sbb
jnp
xor
sti
outsl
data16
dec
imul
push
mov
sbb
or
ljmp
std
gs
aaa
xchg
sti
sub
jg
cltd
mov
mov
inc
orb
lods
or
fidivl
cmp
in
in
sbb
adc
xor
outsl
jb
cmp
sub
loopne
and
mov
and
stc
idivl
xor
add
inc
xchg
and
sbb
fucomi
jns,pt
and
shr
shlb
pop
mov
cli
mov
je
cmc
in
iret
mov
mov
jo
das
cmp
sahf
enter
addr16
stos
popf
fcomps
mov
or
sbbl
fistpll
testl
or
ja
sti
sbb
ret
lahf
icebp
ret
mov
xchg
mov
lea
loope
psrlq
subb
inc
sbb
lods
dec
popa
jae
adc
fimull
dec
dec
repnz
xchg
in
push
aaa
adc
jg
dec
mov
mov
fsubl
popf
cmp
out
pop
mov
rol
popa
xchg
sbb
lret
fnstcw
inc
jb
repz
adc
mov
pop
mov
mov
pop
popf
stos
lods
rorl
and
imul
out
in
popa
cmc
jbe
pop
popf
cwtl
aas
pushf
sub
jbe
adc
scas
push
xchg
cltd
pop
mov
sti
mov
push
inc
fwait
pop
out
fsqrt
mov
lock
movsb
pushf
or
lods
addr16
cltd
shr
mov
movsb
push
dec
lahf
nop
gs
mov
or
pop
xchg
mov
int3
add
imul
sub
dec
mov
add
nop
lret
sub
xchg
fsubrs
sbb
pop
dec
je
push
jb
jno
movsb
push
jle
popa
bound
cmpsb
aaa
xchg
adcl
xor
add
xchg
cmp
mov
dec
push
aas
fcomip
loope
xchg
sahf
sbb
lods
jb
pusha
mov
lret
dec
adc
lock
bound
jl
sbb
fistl
jle
pop
loopne
push
jmp
xchg
sti
sub
inc
aad
cmp
push
movsl
sbb
stos
push
mov
and
test
dec
xchg
sbb
movsb
cmp
scas
dec
inc
movsl
scas
add
aaa
jo
subl
pop
bound
sarb
jbe
test
and
add
cmpsb
xchg
sub
cltd
adc
stos
xchg
lret
xchg
xor
cli
pop
cmp
int
xor
bound
fs
or
xor
js
push
pop
xchg
inc
mov
mov
push
xchg
scas
cmp
out
test
imul
xor
cmpsb
xchg
repnz
adc
stos
mov
out
push
daa
out
mov
and
and
sub
jnp
nop
lock
test
mov
aas
scas
and
dec
sbb
jae
jne
inc
jo
or
cmp
lds
xor
in
jo
mov
fwait
dec
sub
js
repnz
mov
mov
cmp
rolb
mov
cltd
pushf
add
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
jmp
pushl
and
push
mov
gs
adc
xor
adc
xor
xor
popf
imul
pop
cmpsb
shlb
rcrl
in
mov
lret
das
adc
push
sti
sbb
inc
cli
cld
cli
insl
out
cmp
sub
dec
cmp
pop
jb
sahf
mov
dec
push
cmpsb
imul
cmp
add
pop
lret
mov
les
mulb
add
in
push
jnp
mov
pop
scas
mov
xchg
into
mov
adcb
dec
push
lods
and
mov
dec
int3
mov
test
lds
sub
push
rorl
data16
jae
repz
xchg
add
mov
inc
idiv
cmp
gs
call
push
popa
leave
dec
lcall
and
cs
faddl
cmp
stos
test
push
add
dec
outsl
loope
jnp
sbb
adc
sbb
xchg
mov
cmp
pop
testl
imul
movsl
or
jle
int
addr16
mov
sbb
push
xor
xchg
and
or
test
mov
roll
jge
dec
sbb
dec
xchg
andb
sbb
jnp
jbe
cld
mov
mov
or
inc
scas
mov
and
rcl
ror
push
iret
adc
push
popa
and
or
adc
lret
lods
nop
rol
mov
xor
sbb
out
pushf
pop
testl
adc
jecxz
imul
fisubl
inc
and
jbe
nop
ds
adc
and
jb
scas
pop
xor
mov
out
js
dec
jnp
sbb
lcall
mov
xor
xchg
xchg
jae
dec
ficoms
xor
push
es
outsl
xor
xchg
je
leave
es
sub
jae
sub
lock
mov
mov
dec
sbb
dec
sahf
dec
rcrl
push
leave
add
cltd
xchg
dec
pop
popa
cmp
sbb
xchg
mov
test
fsubrs
cmp
sahf
out
sbbb
add
lods
or
mov
jno
stc
aam
cmp
mov
icebp
jne
fwait
sbb
rcl
mov
rorb
pop
pop
rorb
cli
sbbl
cmpsb
lock
icebp
insb
es
jo
negb
cltd
das
xrelease
aaa
jecxz
and
cmp
xor
arpl
arpl
dec
aas
xor
and
insb
mov
pop
push
call
cmpsb
dec
dec
mov
arpl
imul
add
test
jo
or
loope
out
sti
add
adc
int3
xchg
sub
inc
sub
cmp
jnp
mov
cmpsl
lea
dec
stos
int
mov
xchg
add
fimuls
clc
out
inc
cmc
ljmp
pop
push
fsubl
out
arpl
push
xchg
into
loope
in
push
add
jb
or
xchg
mov
dec
push
sbb
arpl
dec
add
xlat
mov
xor
das
inc
jl
lret
pusha
inc
subb
aas
push
xchg
mov
pop
fcmovbe
fcoms
cli
sahf
outsl
mov
icebp
and
loope
dec
aam
cs
adc
xor
push
jmp
repnz
lret
movsb
ret
pop
loope
sub
push
cmp
add
adc
insl
xchg
add
xchg
aas
pushf
pop
fcomi
inc
sub
pop
cld
cmp
mov
mov
iret
lods
xchg
cmpsb
fadd
jg
shrl
cld
or
cld
xor
or
jbe
pop
fidivrl
ljmp
sbb
jne
inc
incb
mov
mov
mov
ljmp
in
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
jmp
adcl
dec
in
enter
es
cmp
adc
adc
adc
cmp
pop
test
shrb
mov
mov
adc
je
cmp
shll
std
aas
test
mov
jg
movsb
nop
pop
out
lret
out
daa
jne
mov
lds
cmp
and
mov
adc
mov
xchg
mov
push
jmp
or
imul
ss
xchg
mov
daa
jo
and
leave
pop
xorb
push
or
sysret
adc
inc
cmpsb
inc
frstor
or
ret
aaa
loop
ud1
mov
add
lods
addr16
inc
negb
mov
aaa
mov
nop
rorl
dec
clc
cmp
xor
pop
data16
xchg
fstps
xchg
mov
and
movsl
scas
cs
add
push
cmpsl
push
add
cmpl
scas
addr16
stc
nop
lret
lea
cmpb
xchg
push
inc
jne
fiadds
inc
xchg
pop
lahf
mov
sahf
gs
jnp
mov
loop
sbb
sub
mov
bound
out
fisubrs
push
xlat
inc
lret
popa
cmp
sbb
lahf
filds
les
jno
sub
pop
sahf
popf
fstps
int
vpcmpeqb
rdmsr
mov
pop
add
or
loope
ja
xchg
int3
pop
cs
mov
dec
sub
out
push
and
insb
add
into
push
jecxz
or
adc
fs
push
ja
mov
add
sbb
daa
mov
xchg
std
arpl
aaa
push
or
xchg
call
lods
add
imul
xchg
and
cltd
movsl
cmp
cwtl
mov
mov
add
ss
movsb
dec
adc
or
sub
and
orl
fbstp
std
and
mov
ret
das
pop
and
aam
xchg
sbb
xor
inc
fwait
mov
cmp
movsl
data16
clc
xchg
call
or
xchg
jp
sub
ja
dec
sahf
inc
stc
or
out
jg
adcl
in
sbb
push
addr16
jne
insl
das
stc
inc
pusha
ret
cmpb
pop
jl
test
dec
xchg
test
sbb
add
ret
inc
test
xor
mov
lcall
xchg
fldenv
dec
pop
sbb
rolb
mov
loop
ret
test
and
fimuls
add
jg
add
stos
ss
cmp
arpl
les
pop
adc
xlat
aad
sbb
add
sbbl
cwtl
inc
into
imul
mov
push
and
inc
xor
mov
lcall
icebp
addl
or
repnz
sbb
push
pop
aad
mov
push
pusha
lods
or
movl
push
xor
fadd
mov
in
std
mov
cli
ret
call
das
dec
insb
dec
scas
popa
xchg
cmpsb
mov
jbe
or
inc
mul
ljmp
mulb
push
sti
mov
jle
roll
clc
mov
jbe
ret
and
in
inc
sahf
and
add
xchg
stc
or
rorl
pop
pop
xchg
stos
mov
push
inc
insb
subb
jle
dec
movsb
pop
fistpll
icebp
pop
sub
call
cs
mov
adc
jae
call
inc
dec
fstl
xchg
mov
rorb
es
dec
mov
scas
mov
dec
mov
jbe
repnz
or
mov
leave
jae
jno
mov
decb
mov
or
mov
add
cmp
jae
mov
jmp
js
jb
sub
cmp
mov
mov
xor
adc
adc
adc
or
sbb
jns
int
pop
xchg
pop
or
ret
outsb
cmp
xor
jo
sub
jb
mov
fmuls
scas
test
lods
adc
inc
ja
lret
mov
and
mov
scas
mov
shlb
iret
daa
repnz
mull
push
daa
ficoms
dec
fcoms
out
cmpsl
push
inc
dec
pop
pop
fdivs
xor
dec
shl
adc
pusha
stc
pop
fs
sub
push
mov
or
dec
push
lods
push
add
lea
divl
mov
cmpsl
add
push
mov
push
loopne
stos
movsl
cmp
sub
je
out
sbb
fbld
mov
mov
sub
out
sbb
sahf
lock
pop
faddl
or
sbb
sub
loope
jnp
add
or
inc
dec
jecxz
lds
and
rclb
out
sub
lcall
xchg
lock
jne
cmpsb
push
and
aas
add
lret
add
cmp
add
sbb
inc
pop
fsubrs
adc
sub
fmulp
js
test
rcrl
sbb
inc
adc
ljmp
out
jnp
mov
inc
repnz
dec
mov
mov
pop
mov
sti
adc
cmp
cmpsl
aas
out
pop
push
xchg
sbb
mov
stos
and
cs
mov
jg
sub
push
xchg
cwtl
and
lahf
dec
jg
xor
aad
mov
cmp
xchg
lock
gs
add
int3
daa
jg
pop
ja
cmpsb
mov
inc
pop
fdivs
pusha
jge
cmpsb
sbb
cmp
out
sbb
jns
xlat
mov
test
and
cmp
addb
ret
lea
pusha
or
sub
push
cli
add
pop
push
cmp
mov
pop
add
and
pushf
out
and
jg
repnz
sbbb
inc
pop
sbb
insb
out
inc
cmpsb
shll
sahf
xor
pop
cwtl
add
jle
add
stos
pushl
and
mov
std
jae
inc
cmc
and
lahf
aad
adc
lods
cmpsb
and
adc
shll
stos
pop
std
daa
push
inc
mov
test
adc
inc
cmp
dec
call
add
sbb
jae
mov
inc
jns
pop
repnz
jae
icebp
or
imull
mov
cmp
test
pop
lcall
pop
rol
mov
pop
outsl
pop
mov
dec
push
push
popf
push
sub
jecxz
adc
fstpl
and
and
adc
js,pt
jecxz
lods
or
std
dec
mov
adcl
sub
mov
clc
bnd
dec
jecxz
cmp
inc
mov
ljmp
shrb
ss
xchg
loop
push
xor
stc
lock
sub
cwtl
mov
jno
aad
fldt
and
fcmovnu
jg
sub
dec
cmp
cmp
xchg
mov
insl
pop
mov
stos
pop
xor
and
mov
mov
pop
or
lds
adc
or
add
ja
mov
insb
and
push
pop
and
inc
icebp
jmp
dec
xor
mov
addl
mov
rclb
ja
popa
mov
xchg
pop
xor
mov
mov
inc
idiv
push
mov
cmpsl
ret
jecxz
dec
rcll
mov
jno
scas
sbb
ja
cmp
rolb
xor
jmp
mov
popa
lcall
mov
adc
xor
adc
sbb
inc
sub
stos
inc
sub
sub
mov
xor
sbb
inc
push
jbe
sar
mov
and
mov
int3
push
pop
lds
inc
pop
test
add
push
fst
jle
scas
push
fwait
in
cmp
sbb
or
out
enter
stc
stos
mov
mov
ja
add
sahf
xor
mov
fsubl
jb
lock
cmc
add
or
iret
dec
out
into
addr16
in
lds
fs
and
xchg
inc
flds
fists
outsl
inc
or
shll
repz
imul
das
stos
lods
movb
and
aam
shl
cs
mov
sub
les
push
popa
fcoml
xor
jp
ds
movsb
fildll
iret
rcrl
sub
cmp
enter
scas
inc
lods
idivb
and
cli
lret
inc
sarl
pop
cmp
or
adc
stos
mov
jecxz
mov
sahf
stc
xchg
icebp
xchg
inc
add
sub
inc
nop
sbb
fisubl
lea
pop
xchg
pusha
imulb
in
mov
pop
xchg
push
inc
fists
ret
stos
mov
ds
add
insb
inc
lret
stc
lcall
pop
gs
cwtl
testb
pop
mov
mov
std
dec
dec
adc
dec
mulb
jae
mov
xchg
push
movsl
fwait
xlat
inc
dec
std
inc
pop
imul
cmp
sub
in
dec
push
dec
xchg
jge
push
adc
mov
inc
adc
or
push
jne
pop
dec
enter
cmpsl
push
sub
mov
xchg
mov
adc
loopne
lods
xor
inc
jns
jp
rorb
leave
mov
sahf
outsl
inc
gs
aam
jbe
xor
addr16
aaa
insb
aas
xor
ror
inc
mov
stc
jl
add
mov
scas
aaa
jecxz
loopne
arpl
cmpsb
daa
add
mov
pushf
push
aaa
push
mov
push
mov
out
fdivl
push
mov
jp
push
mov
push
xchg
bound
inc
push
sbb
mov
push
test
adc
decb
jle
jb
adc
aaa
test
loopne
add
push
add
movl
and
movsb
sub
lcall
ja
jno
mov
adc
out
push
xchg
rorb
pop
add
mull
xchg
arpl
repnz
and
repz
jecxz
insb
cmp
ja
mov
push
sbb
sub
or
mov
xor
inc
nop
jg
into
push
adc
cmp
cli
out
add
add
out
or
mov
xchg
adc
cs
cmp
dec
jle
in
lahf
pop
hlt
inc
loopne
sar
cli
hlt
jecxz
cmp
xchg
push
insb
sbb
sbb
lods
mov
xchg
out
in
inc
inc
rcll
icebp
into
push
or
mov
pop
inc
dec
mov
adc
pop
mov
gs
or
xorl
inc
adc
mov
ja
inc
js
xor
dec
stc
daa
add
push
aam
lret
out
mov
dec
stos
xchg
push
popf
adcb
cmp
aam
pop
dec
leave
ret
les
mov
jle
and
jae
cmp
shr
in
ja
xor
in
fs
dec
sbb
add
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
test
sbbl
pop
sbb
jle
flds
adc
movlps
jo
pop
loopne
xchg
cmp
dec
call
and
jae
mov
std
sahf
mov
loope
xchg
inc
lods
add
into
mov
sbb
iret
and
xchg
rorb
xor
sub
push
test
sbb
jbe
add
into
out
jo
pop
aam
cld
outsl
int3
data16
mov
mov
jl
xor
inc
jg
push
jecxz
mov
mull
dec
cmpsl
adc
jl
mov
insb
mov
lret
jo
inc
fists
push
dec
adc
hlt
aam
pop
dec
xor
sub
ja
mov
mov
cli
add
je
inc
shrb
out
repnz
sub
inc
rclb
insb
cltd
mov
dec
jne
xor
cld
int
call
sbb
rcll
test
mov
mov
sub
and
jnp
test
mov
and
adc
mov
cmpl
push
mov
nop
push
pop
test
test
add
scas
fisttpl
stos
aas
aam
ret
test
adc
add
pushf
fldcw
cltd
sbb
jnp
cld
jb
popa
mov
push
mov
fists
mov
mov
jl
cld
sub
test
outsl
in
popa
mov
movsb
daa
or
push
push
sbb
ret
fcmovu
in
adc
loope
sbb
les
pop
bound
cmc
xchg
jb
mov
popf
jne
dec
xchg
repz
out
xor
dec
daa
jb
cmc
mov
dec
lahf
xor
repz
sub
out
std
mov
lret
notl
xchg
cmp
imul
jne
inc
sub
mov
jmp
push
adc
outsl
mov
rclb
testb
leave
out
fwait
sbb
add
mov
imul
orl
cld
es
add
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
jmp
xchg
add
cmp
scas
insb
insl
pop
mov
adc
movlps
cmpl
out
inc
cmc
and
mov
jae
cmp
jb
dec
subb
mov
stos
gs
imul
adc
jg
cmp
rcrb
adc
and
fcoml
adc
xchg
shll
push
cmp
sbb
outsl
or
mov
cmpsl
mov
jmp
int3
in
ds
push
test
hlt
jg
fnstcw
aad
sub
xchg
xor
leave
icebp
out
xchg
fadds
or
ret
cld
mov
ljmp
popf
mov
imull
icebp
clc
das
shl
jle
mov
outsb
mov
scas
adc
xor
idivl
sbbb
out
arpl
das
or
andl
ljmp
xchg
pop
test
scas
dec
mov
call
repnz
and
out
in
dec
push
push
sub
rcl
fisubl
xchg
pop
sub
test
es
vmwrite
adc
cltd
int
push
roll
inc
aam
sahf
push
fisubs
cmc
xor
lahf
int
das
sahf
mov
popf
xchg
pop
jo
mov
add
lea
push
bound
xchg
mov
jnp
xor
stc
xchg
jns
js
scas
mov
push
mov
push
test
aaa
in
leave
lods
pop
ss
js
les
jmp
xor
xchg
cmp
xor
fisttpll
int3
sbb
xchg
lods
jne
pop
jb
fdivl
out
insb
mov
out
int3
in
dec
cld
insl
mov
inc
add
cld
mov
add
subb
notb
sub
in
push
add
and
push
out
test
add
mov
xchg
ljmp
mov
add
ss
sub
enter
bound
sahf
push
in
loope
ss
pop
cli
xchg
mov
iret
jne
jo
shlb
movl
movl
movl
movl
mov
jmp
outsl
or
or
popa
imul
nop
js
in
stos
pop
sbb
adc
movlps
mov
mov
mov
dec
or
pop
enter
rclb
or
in
lock
add
jne
cvtpi2ps
std
dec
push
push
fsin
dec
enter
nop
pop
loopne
dec
cmp
rcll
ss
cs
cmc
dec
pop
pusha
inc
pop
inc
insl
or
jno
lods
movsl
xlat
fildl
scas
pop
je
sahf
cmp
ret
cld
shl
xor
push
pop
cmc
mov
push
cmp
mov
xor
mov
mov
or
mov
xchg
test
mov
xchg
mov
ret
and
in
mov
jp
test
daa
sub
gs
or
popa
lock
pop
add
or
test
push
lods
sbb
sub
pusha
fistps
sarb
notb
sbb
fs
inc
movsb
jnp
sbb
add
fistpl
lods
xlat
jle
push
add
or
or
sub
adc
rcll
push
stc
test
push
cmp
clc
pusha
in
movsl
jp
lods
je
push
fildll
aas
cld
add
add
xor
jnp
movsl
mov
fidivl
popa
pusha
inc
adc
and
inc
jl
mov
popf
pop
leave
and
rclb
push
inc
add
add
popf
inc
cltd
mov
adc
cmpsb
push
dec
daa
cltd
xchg
and
fucomi
adc
js
cmp
pop
pop
sbb
push
jg
ss
mov
adc
cmpsb
mov
pop
in
mov
jle
sbb
dec
into
cmp
jmp
jecxz
call
repz
jle
or
sbb
add
mov
in
std
xchg
xchg
push
mov
repz
andl
add
ss
inc
mov
movb
hlt
push
xchg
add
mov
jae
sub
adc
ja
xchg
jg
mov
push
add
fistpll
or
loopne
fs
xor
push
shr
adc
add
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
jmp
and
cmp
aaa
sbb
bound
sarb
and
jle
adc
adc
movlps
or
mov
out
sub
roll
jb
ja
xchg
ja
pop
mov
and
int
inc
add
cli
jl
ret
lahf
ret
rol
scas
adc
adc
dec
jmp
cmp
push
mov
leave
mov
mov
push
xchg
call
push
out
icebp
adc
and
insb
bound
push
std
popf
lock
ljmp
shll
sti
or
mov
in
imul
fiadds
sar
outsl
in
jne
mov
inc
and
adc
pop
push
in
xchg
xchg
dec
jno
negb
mov
ret
outsl
jl
xchg
lock
sub
mov
jle
iret
jnp
pop
add
inc
dec
dec
mov
out
icebp
sbb
sbb
or
dec
jbe
mov
or
imul
xlat
pop
lock
jecxz
int3
cmp
aaa
call
inc
xor
and
cmc
repnz
lahf
pop
sub
mov
mov
out
or
stc
push
sarb
mov
pop
rcrl
sub
mov
hlt
lds
cltd
orb
inc
xchg
fldl
inc
add
mov
mov
or
mov
xchg
sbb
test
push
cmp
daa
pop
dec
xchg
fadd
test
cmp
mov
mov
xor
add
std
sub
dec
insl
jbe
lods
stos
shlb
test
inc
out
cmp
push
repz
push
xchg
push
mov
mov
push
outsb
mov
push
push
pop
imul
inc
or
je
mov
sub
jp
imul
or
mov
mov
repnz
and
sahf
jge
imul
mov
push
add
roll
in
mov
jp
jbe
cwtl
and
repz
leave
inc
popl
mov
mov
out
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
jmp
mov
xor
jns
fldln2
jle
lds
adc
adc
movlps
and
lds
adc
outsb
repnz
fisttpll
cli
pop
nop
mov
enter
fsubr
xchg
inc
mov
enter
fmull
mov
cmp
sbbb
loopne
movsb
icebp
test
les
jle
sub
cld
mov
sub
loopne
sbb
pop
std
push
jmp
icebp
repnz
popf
cmp
jle
cld
stos
sub
cmc
mov
in
sbb
jmp
fsubrp
mov
mov
mov
mov
popl
dec
xor
dec
dec
test
addr16
adc
adc
ret
int3
xor
ret
mov
dec
xor
pop
lahf
push
into
inc
push
push
cmova
mov
incb
imul
test
jg
test
cmc
daa
sub
dec
jne
inc
add
push
inc
inc
ljmp
lcall
data16
sbb
or
shrl
repnz
aaa
shlb
imul
jns
insb
test
ja
pop
lds
xchg
jl
movsb
rorb
adc
std
fisttps
add
test
cmp
mov
addr16
shl
sti
aaa
mov
cmpsb
jae
and
add
cmp
pop
aas
daa
into
mov
pop
pop
mov
xor
ds
jae
pop
pop
sub
xlat
pop
push
int
push
dec
insb
out
xor
jbe
sbb
push
add
jns
rcll
loop
outsb
pop
les
cmpb
jb
out
fnstcw
inc
mov
jg
insl
repz
hlt
in
and
mov
aas
cmp
sbb
sbb
push
jbe
movsl
mov
inc
fdivrs
dec
por
dec
and
les
push
shl
scas
enter
frstor
iret
mov
insb
mov
rorb
shr
rclw
jns
lea
mov
lea
jno
cmp
jp
pop
test
sahf
mov
dec
in
cmp
add
roll
mov
cs
dec
jae
mov
mov
adc
fmull
adc
jp
enter
lock
and
icebp
pushf
and
lret
cmp
xor
jge
add
mov
cld
fwait
or
sbb
ds
xor
imul
in
jg
rol
add
aam
push
stc
jns
pop
cmpsb
jae
jge
cmc
mov
sbb
jno
or
add
je
mov
fisubs
mov
and
xchg
fstps
dec
test
cmpsl
shrb
cwtl
push
filds
test
xchg
add
cmpps
or
pop
mov
dec
out
push
mov
xor
pop
aad
inc
test
mov
gs
mov
sar
mov
cmp
movsb
cmp
ficoms
jno
jno
ficomps
or
mov
inc
into
xor
dec
mov
add
xor
leave
in
sub
jmp
xchg
ss
imul
and
sbb
sbb
cmp
fstl
cmp
or
test
or
mov
mov
jae
stc
fnstenv
shrb
inc
mov
push
xor
add
pusha
sub
aad
test
shrb
or
rorb
in
mov
loop
mov
daa
fsts
js
or
and
aas
test
mov
lds
and
pop
sub
js
mov
pop
xor
sbb
sbb
push
inc
jg
icebp
inc
or
test
shll
repz
xchg
or
pop
dec
pop
pop
lock
pusha
cwtl
jmp
fsin
cmp
jmp
dec
outsl
xor
xor
les
or
push
pop
mov
cmpsl
sbb
mov
mov
dec
jp
fsin
popf
or
jmp
stos
cmp
or
dec
pusha
pop
or
rcrb
jecxz
fucomp
mov
mov
test
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jmp
mov
aaa
cmpsl
sbb
test
push
stc
jle
or
adc
movlps
and
sub
xlat
add
mov
fstpt
popf
stc
xor
jb
pushf
and
push
adcb
stc
jp
mov
imulb
mov
lahf
and
jae
jp
fs
dec
push
adc
lds
cmp
fisttps
icebp
pop
xor
scas
aas
sbb
adc
push
mov
adc
stc
je
shlb
in
sbb
xchg
js
adcl
inc
or
push
inc
xor
adc
mov
inc
sahf
xchg
ds
sahf
mov
or
icebp
ja
es
out
aaa
xor
sub
arpl
andb
pop
sub
rorb
ds
pusha
jg
ret
sti
xchg
jne
pop
push
stc
jb
xor
sahf
movsb
out
in
sub
cltd
outsb
jg
imul
test
push
insb
mov
cmp
or
cmp
dec
mov
adc
cwtl
xlat
mov
mov
push
test
cld
or
adc
lret
loopne
inc
lahf
push
aas
jnp
ficomps
int
std
xorl
sbb
pop
xchg
gs
test
into
stos
add
dec
shlb
xor
push
adc
or
in
cmp
dec
test
js
mov
push
stos
sti
call
push
loop
aam
sbb
jl
sbb
mov
inc
and
pusha
jne
jecxz
scas
test
clc
loope
ja
rorl
aas
xor
repnz
jp
hlt
cwtl
mov
ss
in
cmc
sub
jae
cmpsb
push
xor
lret
xor
inc
imull
je
mov
scas
adc
or
in
rcrb
xchg
repz
nop
ljmp
repnz
lods
cmc
insb
lods
mov
cmp
jle
dec
lcall
inc
mov
aas
lods
pop
xchg
in
rcl
and
pushf
nop
out
mov
jns
jmp
dec
test
cwtl
rorl
in
add
xorl
in
sub
loopne
cmp
add
inc
fdivrl
cmp
add
inc
in
int
add
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
jmp
popa
pop
fimull
dec
sbb
dec
neg
mov
inc
push
adc
fmull
adc
push
mov
jne
loopne
cmp
enter
gs
lcall
jno
push
in
std
movb
jae
pusha
sub
mov
xor
xchg
or
repz
repnz
rcll
scas
clc
cmpsl
or
sysexit
xor
push
add
mov
popf
add
mov
dec
or
clc
jecxz
sub
push
jge
out
fs
stos
or
mov
dec
or
enter
jo
push
ror
les
loopne
xchg
mov
lock
push
and
mov
adc
imul
cmp
inc
js
cmp
adcl
mov
xor
xor
ljmp
adc
mov
sub
out
pop
add
cld
and
fs
xor
cld
sti
jns
jecxz
ja
jno
test
or
xchg
mov
cmp
aam
mov
shlb
int
sarb
add
lods
or
xchg
xchg
in
mov
loopne
test
sbb
add
push
sbb
aas
add
in
push
in
insl
das
pop
mov
mov
push
frstor
push
loope
mov
out
pop
mov
add
inc
movsl
cwtl
popf
push
stc
push
pushf
inc
jo
mov
stc
inc
sub
dec
cmpsb
jg
adc
push
mov
fwait
dec
xchg
scas
add
repnz
inc
imul
into
add
sahf
lds
cmc
sub
mov
dec
nop
cmp
push
lahf
aaa
fst
notl
sub
mov
pop
adc
mov
adc
roll
sbb
enter
and
cmp
cmp
dec
sbb
out
push
stos
xchg
jp
stc
les
xlat
outsb
lret
or
repz
cmp
jb
jmp
add
cmpsb
pop
sahf
aaa
xor
mov
mov
push
add
adc
movlps
fimull
xor
mov
int
repnz
std
lret
mov
xor
mov
or
adc
arpl
jno
xchg
cmpsb
push
icebp
sub
fsubrl
cmp
int
imul
or
sub
mov
mov
pushf
int3
lea
inc
lods
cmc
inc
les
mov
jae
xor
rorl
jle
mov
sub
loop
lret
ret
push
push
mov
inc
inc
xor
add
dec
add
ja
daa
ss
inc
push
std
in
jae
ret
cmp
mov
lods
sub
jl
imul
sub
add
mov
insl
inc
xchg
arpl
hlt
aam
dec
inc
fistpll
adc
loop
aas
jne
add
hlt
cmc
sub
xchg
mov
js
mov
pop
in
imull
and
mov
in
xor
xchg
outsb
int3
or
inc
pop
cwtl
jle
mov
push
xchg
xor
lahf
inc
cmp
ja
and
test
push
movsl
push
ret
mov
sarb
add
inc
stos
imul
inc
fmul
dec
ss
push
lahf
mov
popa
xor
mov
cltd
iret
sub
mov
jmp
push
lret
xor
rcrb
aas
sti
test
sub
sub
mov
fstpt
cmp
sarb
inc
pop
jbe
pop
test
adc
out
pop
pop
sbb
push
aad
mov
add
pusha
ret
add
jmp
mov
addr16
dec
dec
mov
xor
insb
push
fcompl
mov
fimull
lds
mov
sub
idivl
or
xor
push
jmp
or
cld
push
test
ficoms
test
xchg
repnz
out
mov
addr16
push
sbb
jp
push
mov
stos
addr16
cmpsb
aas
dec
adc
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
jmp
ja
fistps
pop
ja
outsl
popa
ss
jbe
ljmp
fmull
adc
pop
and
sub
nop
js
fadd
scas
stc
das
sub
inc
xor
aad
dec
mov
je
dec
enter
and
push
dec
inc
fiaddl
jae
cmpl
xlat
pop
in
out
scas
push
add
outsl
outsl
cli
or
adc
xor
sbb
cmp
add
or
xchg
lods
cltd
shrl
pop
xchg
xchg
sub
movsb
mov
cmp
xchg
add
je
jb
jns
mov
dec
ja
push
push
pusha
ret
ror
pop
enter
fcoms
jne
dec
xor
outsl
stos
dec
out
lea
pop
jmp
cwtl
push
sbb
icebp
je
mov
mov
enter
jnp
inc
dec
lahf
pxor
pop
xlat
mov
fldt
lods
adc
jge
nop
add
push
aad
mov
dec
pop
scas
repz
inc
mov
call
test
les
pushf
sbb
or
les
mov
aam
hlt
lahf
push
inc
jb
mov
cmpsb
fiaddl
sbb
and
add
adc
enter
fildl
cld
jbe
push
sub
jae
xchg
insl
out
xchg
hlt
push
jmp
test
arpl
seto
out
and
loopne
push
in
mov
out
and
push
xchg
stc
shll
cs
adc
sub
les
pop
add
int
in
cmpl
mov
mov
mov
fstps
data16
or
ss
push
scas
in
les
aas
push
sbb
cmp
cmp
push
testl
cltd
dec
adc
mov
push
pop
enter
lcall
mov
lods
mov
or
jnp
fimuls
pop
test
shll
cmp
inc
mov
xchg
or
arpl
push
and
imul
lds
sub
xchg
shl
inc
mov
and
and
ds
dec
stos
and
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
jmp
lock
clc
test
inc
imul
paddw
jle
cli
adc
fmull
adc
jmp
mov
rcll
imul
jge
fistl
stos
outsb
mov
mov
cmp
je
push
jne
rolb
or
cwtl
out
orl
lret
movsl
mov
ljmp
pop
icebp
or
jle,pn
dec
inc
insb
sbb
xor
sub
fwait
shr
dec
adcl
jns
cmp
popf
outsl
xlat
and
cs
jp
jmp
and
in
idivw
cmp
rorl
sub
les
push
and
cmp
les
shlb
cli
gs
call
push
dec
pop
cmp
inc
cmp
rclb
gs
andb
lret
pop
dec
pusha
inc
cmc
inc
sub
bound
jg
jg
jae
or
stos
sub
jno
jg
mov
mov
jmp
addr16
cmp
sub
push
or
mov
in
mov
mov
sbb
pop
cmpsb
inc
or
add
outsb
int3
push
inc
test
sbb
push
outsb
test
daa
aam
push
push
sub
mov
out
shll
mov
xchg
mov
fsubrp
loope
xchg
jp
pushf
lret
scas
into
orb
roll
inc
push
or
mov
push
cmp
xchg
fdiv
push
xchg
push
pandn
inc
arpl
je
jle
cmp
cli
sbb
add
outsb
cs
jl
or
loope
or
test
outsl
sbb
fstpt
lods
roll
movsb
or
cmpsb
mov
dec
gs
cmp
iret
ds
nop
mov
insl
mov
out
push
sub
sti
cwtl
jmp
push
mov
fcoml
adc
icebp
in
outsb
into
adc
pusha
out
xlat
aam
jg
add
xlat
outsl
sti
dec
mov
mov
sub
jecxz
mov
pusha
sbb
cmpl
jmp
sub
adc
aad
push
inc
mov
xchg
insb
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
jmp
mov
pop
mov
insb
mov
notb
adc
movlps
enter
add
pop
inc
push
jb
mov
std
ret
sbb
int3
cmp
push
pop
aaa
mov
movsb
mov
shll
mov
push
push
xor
mov
cli
fisubrs
ja
cmc
hlt
hlt
lcall
xchg
add
dec
jecxz
shrl
inc
push
out
decb
pusha
jno
cltd
push
stos
jno
int
leave
lea
aas
out
lds
ja
data16
add
lods
and
cmp
jecxz
jecxz
add
mov
jbe
arpl
add
jl
popf
ret
mov
and
xor
mov
int
pushf
cmp
loop
inc
inc
inc
test
sti
stos
cmpsb
cwtl
mov
mov
cltd
lds
leave
xor
in
mov
fs
es
push
arpl
xor
cmc
mov
in
fxch
sbb
mov
mov
and
inc
adc
movsb
or
add
daa
outsl
cli
lea
mov
add
in
mov
xor
jne
inc
test
inc
gs
sub
movsb
add
fisubs
jecxz
or
addr16
imul
daa
lods
pop
add
aad
cmpsb
adc
pop
popf
lock
mov
pop
out
mov
lcall
dec
sarb
mov
repnz
mov
or
int
std
jg
ljmp
jecxz
fisubl
and
mov
in
sub
jae
pop
dec
bound
xor
and
sbb
xor
in
mov
and
sbb
mov
gs
jge
movsb
dec
nop
stos
jb
aas
cli
push
inc
lods
orl
out
inc
cltd
int
loope
mov
sbb
xor
enter
xor
mov
or
dec
push
add
into
mov
test
dec
xor
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
jmp
push
jb
adc
mov
xor
cmpsb
dec
mov
sub
adc
adc
popf
jge
not
data16
aaa
jae
push
sahf
rcrb
clc
lock
sub
inc
and
jp
imul
push
cmpsl
repnz
mov
mov
jecxz
inc
adc
mov
sbb
mov
mov
repz
cmp
push
addb
jmp
mov
int3
pop
je
mov
mov
ja
push
sbb
scas
push
mov
pop
scas
outsw
or
das
adc
sub
mov
jle
mov
cmc
and
in
mov
mov
sbb
sbb
dec
adc
push
lahf
jo
and
vmovsd
push
add
mov
push
cwtl
jb
push
push
cwtl
into
push
lock
shrb
push
sarb
bound
mov
test
jbe
inc
mull
mov
jp
or
mov
adc
lret
ficoml
jae
les
fiaddl
cltd
das
adc
add
lock
push
xor
pop
push
ficomps
cmpsl
sub
pop
fistpl
dec
loope
jecxz
dec
movsb
push
movsl
fdivs
sub
add
mov
mov
ror
nop
inc
push
inc
ficomps
push
cmpsb
push
leave
pop
cli
cmpl
aam
mov
aaa
mov
daa
pusha
pusha
add
push
loope
notb
ffreep
sub
add
enter
outsl
in
sub
ljmp
jmp
pusha
in
scas
fistps
jmp
mov
and
ljmp
in
cwtl
std
mov
lds
arpl
arpl
iret
fsts
and
adc
outsb
mov
push
sub
daa
pop
outsb
add
orl
lret
dec
loopne
aas
xchg
movsl
add
js
in
sbb
call
out
fstl
loopne
outsl
sbb
pop
incb
dec
pop
push
out
stos
mov
lcall
les
fiaddl
pushf
mov
rcll
mov
data16
jl
fsubl
cli
rcl
xchg
insl
pop
dec
es
dec
bound
insb
jge
pop
out
mov
jl
lods
mov
je
in
mov
leave
dec
enter
cwtl
mov
inc
dec
inc
repz
stos
mov
or
pop
jecxz
push
jns
jecxz
aad
push
jl
sbb
mov
cmpsb
roll
and
jnp
fldenv
and
aad
push
ret
xchg
sub
pop
pop
sub
pop
mov
or
sbb
in
ficoms
lret
aaa
outsb
gs
xlat
mov
stos
pop
fucom
divl
mov
sub
in
outsl
clc
pop
mov
push
hlt
pop
add
or
int3
outsl
pop
sub
dec
add
xor
push
add
pop
movsl
lea
imul
and
jcxz
xchg
sahf
and
std
adc
jmp
adc
stc
arpl
inc
popl
je
scas
push
stos
dec
xor
push
aas
cmp
jb
rcll
add
sarl
enter
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
jmp
imul
in
push
pop
loop
xchg
js
cli
sub
jmp
adc
add
out
jnp
jl
stos
xor
inc
add
mov
add
movsl
fcom
push
inc
ss
or
pop
xor
jmp
leave
loopne
aam
pop
mov
push
leave
aas
mov
cmp
andl
sbb
push
mov
cmp
sub
in
rorl
push
loopne
pop
stc
ss
adc
nop
and
mov
aad
inc
cld
xor
pushf
mov
add
xor
cs
cmp
or
movsb
mov
loopne
leave
sub
fcmovu
rcr
or
call
adc
dec
and
sbb
jae
repz
fabs
or
repnz
and
cwtl
shlb
inc
test
popf
mov
inc
fs
mov
push
pop
cmp
hlt
int3
fistl
mov
adc
pop
or
jae
sbb
data16
push
out
xchg
stos
std
mov
outsl
es
inc
pusha
mov
push
jle
stos
adc
sub
aad
adc
aam
pop
sbb
push
cwtl
xchg
jmp
in
xor
outsl
mov
clc
mov
call
pop
popa
or
adc
jecxz
je
mov
hlt
adc
iret
and
clc
xor
cmp
xor
test
cmpsb
aas
add
fstl
bound
cltd
sub
cltd
scas
loop
mov
fs
movb
or
mov
jge
addb
out
icebp
sub
cmc
push
pop
hlt
xor
daa
adc
mov
imul
jno
and
rcrl
in
xchg
test
pushf
cltd
movsl
push
dec
hlt
and
lds
jp
push
scas
jmp
cmpsl
mov
push
pop
sarb
shrl
adc
pushf
mov
mov
loopne
fisubl
outsl
and
jns
clc
xor
xchg
rolb
fs
xchg
clc
movb
sbb
ss
lds
xorl
into
loopne
roll
repz
inc
add
mov
js
pop
dec
xchg
in
or
lret
inc
mov
sti
loopne
pop
or
and
lahf
sahf
push
adcb
leave
pmullw
loope
sbb
add
inc
cmp
pop
pushf
ja
int3
adc
repnz
sbb
push
mov
pusha
lea
xchg
cld
xchg
aaa
xor
sbb
out
js
fs
mov
arpl
lea
pop
data16
fiadds
jg
adc
jae
aaa
js
fs
lods
es
incl
lods
rcrl
jle
sbb
pop
out
arpl
pop
dec
mov
outsb
mov
out
cld
icebp
xor
cs
mov
sub
pop
or
cli
movsb
push
es
pop
cmp
xchg
jmp
xor
add
adc
loop
xchg
add
jg
xlat
fwait
push
push
loope
test
lcall
xor
jns
les
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
jmp
mov
jo
pusha
popf
sbb
mov
fildll
in
adc
jo
adc
subb
clc
std
and
scas
gs
mov
push
ds
cli
jne
cmp
jae
scas
add
jmp
mov
pop
daa
fdiv
jb
stos
push
dec
cmp
push
out
mov
fistpll
std
push
insl
dec
addl
iret
loop
pop
cmp
xchg
hlt
and
in
mov
mov
scas
out
lret
mov
adc
mov
ret
fiaddl
mov
data16
sbb
rclb
dec
xor
addb
xchg
rclb
cld
mov
pop
and
out
jo
add
daa
mov
pop
and
mov
fmull
das
mov
aad
add
xchg
fisubs
les
shll
rcrl
and
xor
lods
sbb
sbb
adc
into
and
inc
mov
xchg
int3
sbb
hlt
jns
sbb
mov
mov
dec
mov
test
sbb
int
sub
js
rcrl
inc
cmpsb
outsl
iret
hlt
sub
orl
jle
inc
lock
fsubr
es
and
jmp
lret
divl
mov
pop
xor
lahf
mov
push
or
cwtl
ficomps
push
scas
aam
xlat
push
mov
cmp
add
jl
pop
test
mov
cmp
test
arpl
fcoms
gs
and
addl
push
fwait
mov
mov
nop
hlt
xor
cmp
and
idivl
sbb
je
xchg
add
sub
xchg
dec
push
pop
sub
push
cmp
mov
outsb
jne
inc
pop
mov
cmp
scas
test
fwait
push
cmp
daa
dec
lret
imul
loope
adc
sarb
test
push
and
lea
repz
out
cli
cli
mov
mov
out
inc
jge
push
jns
inc
test
shlb
jl
jne
lahf
out
sbb
mov
and
xor
mov
scas
outsl
nop
popf
lds
bound
shr
subl
into
inc
pop
push
push
push
out
xchg
pusha
pusha
inc
push
scas
cmc
pop
ja
addb
popa
adc
daa
pop
xchg
filds
ja
lahf
popa
sub
nop
and
cmp
rolb
jle
in
mov
faddl
mov
fsubrl
stos
fcoms
and
in
mov
xor
jo
pop
jns
mov
inc
test
mov
stos
dec
dec
icebp
or
jb
fidivrs
cli
hlt
ret
enter
fsts
cmp
inc
test
mov
or
mov
ja
hlt
pop
pop
std
cltd
add
sbb
rolb
inc
fwait
jecxz
push
leave
mov
roll
or
fcmovnbe
ret
pop
ret
in
lock
daa
push
mov
add
sbb
sub
imul
ja
insb
push
sbb
pop
mov
stos
stos
in
scas
pushl
int
cmp
pop
push
cli
adcb
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
sbb
or
jmp
bnd
in
sub
fstl
adc
adc
loop
shl
not
inc
ret
addr16
mov
hlt
or
push
inc
or
push
popf
cmpsl
int
cmp
sub
popa
popf
out
loopne
sahf
pop
lahf
mov
cltd
cltd
repz
xor
jns
arpl
xlat
icebp
sub
push
push
fnsave
js
mov
mov
adc
fists
add
dec
fwait
and
imul
out
adc
lds
mov
inc
xchg
jl
push
dec
and
pop
inc
sbb
mov
ja
addr16
inc
cs
sub
shlb
or
pop
dec
dec
fdivl
cmpsl
pusha
add
jae
daa
mov
or
or
ja
imul
rcll
dec
or
mov
je
mov
lods
fnstsw
push
push
imulb
and
xor
adc
jne
shrb
andl
adcb
imul
data16
mov
pop
mov
jmp
mov
xchg
jae
ds
pop
aaa
mov
push
repz
mov
retw
mov
mov
jmp
xor
mov
in
cmp
sub
dec
shlb
js
call
mov
lock
pushf
out
es
inc
cmp
jb
scas
into
repz
nop
aaa
add
pusha
ret
adc
add
pop
pop
cmpsl
jecxz
mov
int3
idiv
push
sbb
cmp
inc
and
jmp
dec
dec
loope
inc
push
mov
dec
or
dec
leave
pop
loop
pop
stos
imull
es
fcompl
and
or
mov
das
dec
xchg
ljmp
push
add
insl
sahf
sub
std
mov
push
loope
scas
imul
repz
xchg
iret
aad
cwtl
push
nop
dec
dec
push
dec
adc
adcb
mov
call
popf
loop
je
mov
pop
dec
pop
loop,pt
in
loopne
mov
sub
popf
in
scas
adc
cmp
push
fdivrl
sbb
scas
icebp
rcrb
push
pushf
loop
repnz
aad
sarl
aam
ljmp
push
inc
push
insl
cmp
cmp
out
push
mov
push
sub
mov
xor
jo
in
sti
aas
cmp
addr16
xchg
and
aaa
cwtl
xor
and
add
cltd
imul
sbb
jl
cs
cmp
dec
insl
hlt
ror
dec
stc
jge
jmp
adc
sahf
ret
push
mov
dec
repnz
movsb
jp
movsb
jmp
rcrl
out
in
fs
mov
bound
mov
cmp
clc
or
and
int
jno
imul
rcrl
and
sti
cli
pop
dec
stos
xchg
sti
cmp
dec
xchg
mov
lds
imull
aaa
mov
cmp
xor
cmp
mov
xchg
mov
out
pusha
mov
xlat
ret
out
xchg
xor
iret
xor
or
pop
jle
xchg
and
jno
add
in
outsb
add
add
inc
dec
and
cwtl
lods
sbb
out
sahf
aad
adc
adc
cmp
hlt
sbb
sbb
dec
pop
jns
fistpll
cmpsb
movl
fimull
adc
jecxz
out
sbb
outsl
pop
gs
cmp
out
mov
mov
ja
xlat
aam
enter
repz
jbe
mov
push
pusha
inc
sub
push
repz
inc
mov
fldt
xchg
jle
sahf
or
movsl
push
pop
shrl
fiadds
cmp
adc
icebp
call
call
pop
mov
add
mov
xor
xchg
push
dec
aaa
xchg
callw
pop
cmp
push
cmp
loop
test
repz
and
and
sub
mov
mov
xor
ljmp
test
mov
movb
popa
xchg
pop
nop
cltd
push
insb
outsl
and
fmul
fstpl
js
fldt
out
popf
das
shrl
adc
cmpsl
shl
insb
or
adc
pop
fwait
sahf
jnp
mov
inc
push
inc
add
mov
ficomps
stos
jb
mov
sbb
hlt
push
pop
push
push
push
push
data16
push
adc
dec
cli
add
pop
sub
test
ljmp
icebp
mov
shr
dec
xchg
imul
adc
add
fwait
push
add
jne
call
dec
and
rcr
adc
mov
mov
jge
int3
push
in
xchg
adc
orl
popa
xor
fwait
mov
into
test
push
push
dec
cmp
push
loop
cmp
xchg
jb
xor
push
pop
test
adc
inc
jecxz
inc
out
and
xor
bound
subl
fwait
cmp
xor
fs
xchg
dec
je
jno
jnp
add
push
loopne
stos
repnz
shlb
sbb
sub
fistpl
cmp
int3
iret
movsb
movsb
jno
push
and
mov
mulb
xchg
push
lahf
sub
pop
cld
movsb
enter
enter
xor
jle
mov
test
pop
ror
nop
mov
imul
mov
adc
cli
push
outsb
mov
add
inc
cs
out
add
mov
in
leave
cmp
outsl
das
xchg
pop
jl
dec
out
pop
mov
sti
sahf
push
or
push
aas
or
inc
cmp
pop
outsb
iret
pop
xchg
sub
imul
xchg
adc
pop
into
or
cwtl
jae
xor
sarb
fcmove
pop
test
lds
outsb
lcall
leave
cmp
stc
fmuls
inc
cmpsb
push
push
xor
and
jo
enter
dec
jle
outsl
mov
inc
ss
inc
ret
pop
push
out
pop
or
add
or
cmc
into
rolb
test
sbb
sub
or
jb
lds
pop
neg
adc
call
add
add
jp
pusha
or
insb
xchg
outsl
stc
out
dec
ret
rcrb
jecxz
dec
jmp
mov
mov
add
adc
or
mov
or
jmp
xchg
decl
cmp
adc
stos
mov
lret
adc
jo
adc
xor
adc
das
pop
aaa
lock
or
xchg
aad
inc
pop
loop
ret
xchg
out
fnstcw
das
mov
inc
mov
mov
icebp
or
mov
push
and
pop
add
loope
pop
mov
cmp
xchg
pop
push
mov
mov
in
jl
jo
dec
sub
js
roll
pop
add
jmp
xlat
fistl
add
inc
lret
mov
mov
dec
xor
popf
jecxz
push
repz
out
push
cli
gs
push
data16
fs
inc
jns
mov
dec
xor
outsl
outsl
sahf
mov
pop
ja
dec
or
cwtl
int3
bound
pop
and
into
pusha
stc
out
pop
hlt
mov
fwait
lcall
push
adc
jne
or
adc
int3
aam
add
lret
adcl
pop
dec
fildll
incl
loopne
popa
hlt
ret
cli
ja
test
xchg
pusha
sbb
add
xchg
fisubs
addl
and
jge
negb
imul
inc
leave
outsl
jle
or
aas
lods
inc
cwtl
cmpsb
fdivrs
in
and
cld
pop
aad
and
mov
jg
add
adc
fimull
pop
mov
sarl
fistpl
or
sbb
sahf
sub
incb
addr16
inc
push
xchg
repnz
mov
jb
push
lahf
les
jae
aas
cmp
mov
xchg
add
outsl
aas
add
idivl
jns
mov
sbbl
inc
testb
jp
sbb
lahf
repz
jg
das
mov
cmpsb
enter
aad
xchg
adc
into
push
test
and
std
jo
and
push
jge
push
push
in
mov
gs
dec
aaa
test
sbb
insl
in
mov
or
pop
lods
dec
aaa
jle
push
xchg
sbb
xchg
jns
pop
leave
stc
int
push
mov
lret
xchg
call
push
pushf
or
sarl
cs
mov
cmp
and
in
jl
add
sti
rcll
and
cmc
movlps
xor
clc
test
test
sub
xor
and
mov
push
dec
popf
or
mov
test
js
jecxz
mov
sub
movsl
mov
pop
outsb
ret
stos
ds
mov
dec
mov
out
pushf
xchg
jp
adc
leave
push
popf
dec
pop
fnstcw
cli
push
cmp
pop
scas
xchg
or
pop
cmp
pop
add
pop
jl
std
sub
push
mov
or
add
sub
shrl
inc
push
in
add
fildll
push
mov
aaa
fs
add
add
ret
jne
sbb
adc
mov
int3
pusha
or
xor
and
int
xchg
pusha
outsb
sbb
out
mov
or
and
mov
xor
aam
or
paddsw
inc
jg
rorl
enter
pop
int3
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
jmp
sub
cmp
mov
push
leave
adc
jo
adc
loope
fcoms
jmp
mov
loop
es
inc
test
xchg
mov
fmulp
filds
testl
repz
adc
xchg
pop
xchg
mov
lock
cmp
inc
add
std
mov
movb
xchg
push
int3
sbb
sub
ret
sbb
lcall
pop
push
lea
in
inc
std
lret
mov
enter
test
mov
or
mov
mov
push
inc
push
adc
and
shrb
or
cmp
sbb
mov
cli
pushf
sahf
or
mov
icebp
jno
aas
cmpsl
adc
pop
cli
cmp
inc
sbb
cmp
inc
dec
jmp
test
pop
jns
cld
dec
es
mov
out
addb
enter
inc
cmpsb
sbb
lahf
jbe
int3
addr16
and
scas
sub
test
lret
test
test
xchg
insl
mov
inc
pop
pop
stos
das
jp
jp
push
in
xor
and
fsubrs
in
mov
popa
xchg
mov
sbb
mulb
mov
imul
int3
mov
pop
test
cmpl
jb
repnz
xor
add
rclb
cmp
adc
sub
inc
je
dec
add
push
rcll
jp
and
inc
add
mov
mov
xchg
dec
dec
add
les
rcrl
adc
shrl
js
cmpsl
lahf
xor
sbb
lds
sbb
fwait
nop
insb
mul
movsl
insl
leave
cmp
pushf
cld
dec
push
fsubl
call
nop
xor
shl
push
xor
mov
push
pop
imul
push
out
outsb
out
pusha
lods
sub
test
fdivl
mov
imul
xor
lcall
in
pop
mov
orl
ds
int
pop
xchg
mov
andl
push
xchg
lret
notb
mov
mov
pop
mov
inc
stos
dec
ret
or
and
shrl
jmp
out
movsb
adc
sbb
mov
ds
sub
push
adc
mov
mov
imul
daa
outsl
cmp
addr16
or
loope
push
dec
mov
add
stos
jnp
inc
or
lea
imul
xor
hlt
jl
out
dec
lods
xchg
pop
dec
out
sti
imul
jno
dec
pop
jns
pop
sbb
jno
jmp
push
dec
icebp
imul
and
jb
mov
sub
cmp
rorb
xchg
sub
repz
add
sub
jbe
jnp
sub
loop
leave
cld
rcrl
mov
jp
movsl
xor
jns
inc
sub
outsb
roll
pushf
and
sub
popf
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
jmp
xchg
xorb
daa
cltd
sbb
adcl
adc
jo
adc
scas
dec
or
push
push
and
mov
pop
mov
sub
jle
sarb
adc
mov
lret
xor
add
xchg
lds
int
cmpsb
dec
leave
mov
and
and
int
pop
lods
scas
gs
xor
aas
push
sub
jns
test
add
add
popa
iret
inc
adc
dec
inc
dec
jl
ja
mov
sahf
pop
in
in
repz
outsb
stc
push
mov
cmp
das
xor
adc
dec
push
jnp
jo
and
and
std
movsb
das
cmpsl
xor
out
pushf
shll
add
fmuls
jge
arpl
dec
mov
xor
mov
pop
push
jb
test
fcomp
push
inc
push
jnp
or
ret
stos
test
nop
cwtl
pcmpgtb
sbb
int
in
sbb
sub
ss
lcall
add
arpl
jns
add
jne
fstl
in
mov
push
ret
and
inc
stos
das
repnz
xchg
jb
adc
into
push
or
mov
or
les
inc
cmp
js
ror
pop
xlat
xor
ret
fwait
in
aam
stos
push
shrd
sub
mov
std
jae
daa
push
mov
sti
andb
cmp
mov
ret
sbb
push
shll
nop
or
lcall
mov
pushf
cltd
push
aad
or
pop
mov
les
out
and
inc
push
pop
fwait
mov
mov
sarl
mov
icebp
fadds
pushw
adc
pop
adc
stc
les
dec
fcom
jnp
sbb
push
and
popa
fwait
jns
mov
push
cmpsl
mov
jae
mov
loop
mov
push
or
jmp
popf
loop
cmp
mov
repnz
jae
or
mov
or
mov
sub
cmp
fwait
test
dec
inc
pop
lods
inc
push
mov
mov
fldenv
xchg
or
cltd
xchg
mov
pop
fsub
ss
add
push
add
pop
mov
insl
fcom
movb
push
sub
jle,pt
pop
add
and
stc
ds
rcrb
cli
test
xchg
sbb
das
into
data16
jae
lcall
push
mov
shll
cltd
cmp
cmp
sbb
mov
inc
movsb
inc
movsb
into
lock
sub
mov
popf
mov
xchg
cltd
stos
sub
bound
stc
xor
out
dec
xchg
pop
hlt
cld
cmc
sub
fisttps
jo
jecxz
ljmp
adc
push
sbb
lret
mov
test
shrl
rorb
push
push
mov
push
xchg
clc
orl
mov
aad
mov
xchg
mov
and
sbb
sub
mov
adc
adc
xlat
dec
mov
push
cmp
popf
xchg
sti
shrl
imul
inc
gs
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
jmp
jmp
dec
test
lods
aam
into
lods
push
mov
adc
adc
fcom
push
xor
fucomi
jmp
pop
test
out
jno
scas
fnstsw
jno
inc
in
into
mov
mov
decb
inc
add
test
push
and
cmp
test
int3
pop
dec
add
xor
xchg
jne
push
lods
jp
jecxz
int
lods
imul
jmp
sbb
or
inc
xchg
out
dec
cmp
push
nop
out
pop
aaa
stos
stc
scas
je
sti
add
outsl
push
lret
pop
out
lock
cmp
jg
rcl
push
or
sub
jecxz
pop
sub
mov
inc
negb
aaa
sbb
mov
jmp
push
mov
lcall
scas
push
or
es
pop
mov
pop
imul
cmpsl
adc
repnz
dec
test
mov
or
inc
cmpsl
cmp
pop
pop
dec
or
sub
dec
inc
insb
lods
lret
fidivrl
dec
int3
xlat
mov
notb
nop
or
incl
mov
shll
adc
pop
mov
push
rolb
add
jecxz
lea
jb
dec
jo
fs
sub
sbb
rorb
cmp
out
cmpsb
and
inc
movsb
mov
mov
ja
pop
jns
ret
in
addl
imul
pop
outsb
sbb
lret
dec
push
cltd
adc
popa
pop
fisttpll
xor
cwtl
in
cmp
sub
jnp
pop
inc
pop
outsl
cmpsb
jns
in
pop
out
insl
rolb
inc
mov
scas
mov
repz
jno
jae
jnp
daa
pushf
add
ficompl
ljmp
push
xchg
loopne
sbb
jg
xchg
push
adc
xor
pop
cld
rcl
fwait
jg
bound
mov
adc
mov
add
icebp
pop
test
shl
jecxz
inc
in
in
xchg
aad
pause
ret
mov
jbe
ss
or
in
dec
xor
xchg
lods
test
fbld
sbbb
rcr
clc
xlat
pop
jns
mov
ret
mov
jp
pushf
jno
jno
xchg
jmp
and
inc
lods
mov
and
ljmp
fsubp
add
lcall
in
imul
cmc
xchg
jmp
shlb
push
pop
jg
push
push
mov
dec
outsb
mov
pop
dec
ret
rolb
divb
jecxz
sahf
pop
testl
push
fisttps
lret
je
aam
ljmp
and
imul
mov
mov
inc
mov
mov
inc
sbb
push
jnp
rclb
or
mov
adc
dec
mov
divb
jg
ud1
lahf
cmp
lret
mov
xor
inc
dec
out
in
pop
mov
or
int3
call
test
cmc
inc
fwait
bound
cmp
pop
fdivr
outsb
jge
outsb
pop
adc
aas
dec
mov
out
movsb
andb
mov
orl
push
and
mulb
outsb
add
scas
ret
es
movsb
hlt
fists
movsb
pop
inc
rcll
test
xor
push
lret
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
jmp
dec
pop
divb
inc
and
mov
imul
inc
call
int3
jge
ficompl
ficompl
mov
inc
inc
lret
mov
js
aam
adc
cld
shlb
cwtl
mov
xlat
into
mov
lcall
pop
pop
lahf
cs
out
rolb
push
scas
add
sub
mov
test
adc
xchg
xor
adc
dec
sbbb
dec
cmp
dec
sub
aaa
pop
test
xchg
xchg
rorl
xlat
out
mov
ljmp
pop
xchg
mov
add
out
or
xchg
push
and
std
pop
sbb
mov
pop
dec
sbb
es
cltd
sbb
out
test
imul
dec
sub
jae
push
outsl
add
mov
shrb
fs
ret
and
push
xor
roll
jl
mov
xchg
lods
jmp
fwait
decb
or
lahf
xchg
or
cs
outsl
mov
lcall
outsl
aam
ficoms
call
mov
shl
mov
lret
add
mov
mov
in
testb
push
jge
inc
xor
adc
cmp
jge
gs
mov
popa
lahf
add
mov
mov
jg
jecxz
dec
mov
sti
mov
or
cwtl
int
rolb
dec
fs
orb
push
movsl
sub
cmp
dec
push
xlat
adc
or
or
rdmsr
mov
pushf
negb
in
inc
push
test
aam
cltd
lcall
mov
pusha
shrb
add
lock
sahf
sbb
xchg
movsl
mov
das
insb
out
add
or
iret
xor
repz
mov
test
cltd
cmpsb
xchg
push
push
pushf
xlat
add
xchg
das
add
mov
ja
push
js
xchg
xor
xchg
xchg
gs
xor
cli
or
push
sti
push
and
rcrb
and
jno
push
push
call
mov
mov
or
or
push
add
push
jmp
push
pop
push
js
bound
stos
imull
adc
or
imul
sbbb
push
xchg
shrl
xchg
mov
negl
fwait
stc
sahf
sbb
pop
sub
lcall
hlt
push
xchg
jno
ret
aad
xchg
add
sub
lods
es
dec
adc
mov
mov
mov
jae
dec
sub
shr
add
imul
hlt
ljmp
inc
jbe
fisubs
ret
sub
and
sbb
pop
push
jp
jb
stos
scas
nop
xchg
xchg
inc
cmp
mov
mov
mov
or
sub
shll
loopne
sti
push
nop
bound
push
push
and
lret
int3
mov
add
lahf
jo
pmulhw
inc
loope
inc
ret
xchg
push
sbb
fwait
lock
and
jecxz
rolb
mov
mov
or
fistpll
push
mov
movsb
push
jns
xor
adcb
or
dec
pushf
or
sbb
sbb
scas
dec
ja
fisttpl
xor
push
fnstenv
fistl
mov
in
popa
xchg
sahf
cs
pusha
movsb
popa
push
sarl
sti
lret
cmp
cmp
sahf
cmp
lock
and
adcb
movsl
test
fidivrs
or
je
pushf
movsb
stc
xchg
ret
mov
outsl
jbe
inc
pusha
std
mov
lods
movsl
inc
in
repz
notl
push
cmp
sbb
xor
dec
xchg
or
cmp
inc
andb
lods
add
addb
push
xchg
xor
lds
sbb
or
int
pop
xchg
sbbb
pop
lods
daa
lds
outsb
jle
fcoms
ficoml
inc
mov
sbb
lods
mov
and
and
xchg
adc
int3
sahf
dec
js
cmc
mov
les
pop
dec
push
out
sub
mov
fmull
mov
mov
xor
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
jmp
cltd
sbb
sbb
cltd
sbb
xchg
bound
dec
jle,pn
cmpsl
adc
stos
movlps
dec
call
out
mov
jnp
mov
hlt
sub
movl
mov
jo
mov
add
add
xor
lock
inc
sub
int3
mov
lcall
loop
mov
stc
shll
add
es
mov
sti
adc
dec
xchg
out
sbb
add
mov
fidivrl
mov
or
mov
adc
dec
fimuls
int
lahf
mov
dec
pop
dec
adc
adc
adc
cltd
out
insb
mov
das
mov
xorb
aas
js
cli
mov
frstor
stc
out
sbb
ret
push
jae
ljmp
test
add
das
xor
fs
mov
sub
jge
push
rcll
xor
shrl
cmp
push
ja
cs
shll
outsl
ret
repnz
ljmp
test
in
mov
and
xor
mov
aad
mov
xchg
sub
inc
push
iret
aaa
jmp
testl
xor
clc
jg
jg
jae
lret
mov
mov
push
and
xor
mov
les
sub
les
jbe
pop
andb
imul
sbb
icebp
scas
subl
jecxz
xlat
fs
call
xchg
cld
sbb
incb
xor
push
push
cmp
test
sbb
sbb
xor
pop
mov
mov
sbb
cmovae
and
xlat
pop
cmc
ljmp
jecxz
das
mov
mov
adc
push
xor
jne
sbb
push
sub
inc
fcmovnu
fnstenv
or
fwait
dec
outsb
arpl
push
mov
hlt
jo
stc
mov
or
mov
adc
mov
adc
inc
or
and
or
inc
in
mov
and
lea
mov
mov
mov
movl
jmp
pop
mov
pop
mov
mov
mov
adc
ret
sbb
addr16
sub
aam
mov
pusha
push
movsl
cwtl
add
or
addr16
lock
shll
xchg
das
sub
ret
mov
dec
pop
lret
fildl
xor
inc
mov
mov
xor
or
adc
insl
dec
or
rcrb
mov
sbbl
mov
sbb
and
pusha
mov
popf
in
mov
insb
add
jbe
and
dec
std
test
call
mov
push
pop
inc
lods
imul
outsb
xlat
lahf
dec
popa
cmpsb
or
pop
sbb
xor
cmp
jecxz
aas
add
stos
inc
dec
jg
outsl
dec
push
sbb
jge
insl
xor
fistl
pop
out
dec
pop
or
fdivrl
stos
int
adc
adc
dec
fsub
push
sub
addr16
mov
std
fnstenv
rcr
hlt
test
lds
lcall
mov
test
cmp
test
xor
loope
jg
pop
mov
shl
cmc
stos
push
mov
and
insb
pop
pop
fbld
iret
nop
mov
call
push
mov
fmull
testb
test
mov
cmp
je
pop
adc
dec
test
pop
ret
sub
and
xor
xchg
jl
mov
shll
test
iret
xchg
mov
push
sbb
dec
loope
mov
pop
fldenv
jns
out
imul
push
in
stos
push
fidivl
sub
jecxz
hlt
dec
jmp
shll
mov
jno
ljmp
adc
loope
ror
inc
insl
jne
adc
repnz
ja
arpl
xor
mov
rcll
sbb
mov
sub
movsl
call
cs
inc
nop
cmc
faddl
addr16
das
sbb
mov
cmpsl
movsl
stos
pop
and
jae
outsl
lret
xlat
arpl
inc
dec
movsb
movsb
imul
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
xchg
sub
subl
jb
push
push
lahf
adc
stos
movlps
jno
sbb
mov
mov
push
push
mov
push
ret
ljmp
cmp
lock
shr
lret
andb
ret
ret
mov
bound
mov
lods
adc
add
add
xorb
iret
mov
aas
popf
fwait
mov
stos
shrb
mov
push
add
ficoms
inc
jp
and
sub
cltd
push
adcl
insl
lods
add
or
fldcw
cmc
int
inc
arpl
cwtl
mov
sarl
xchg
adc
scas
arpl
dec
pop
sbb
outsl
mov
and
inc
sub
mov
adc
sbb
nop
cld
xor
mov
sti
sahf
sar
pusha
fisttps
add
mov
jecxz
adc
lahf
andl
push
and
add
in
aad
fcoml
mov
test
adc
shll
adc
sub
andl
push
dec
sub
and
jo
fisubl
icebp
stc
jecxz
xor
cmpsl
xor
jno
pop
stos
or
sbb
xchg
rcrb
movsl
sub
gs
mov
mov
in
mov
fiadds
xchg
cmp
and
mov
out
in
dec
push
not
hlt
inc
std
cmp
mov
js
clc
mov
insl
mov
rolb
vpmovzxdq
jle
fisttpl
popa
cmp
xor
dec
pusha
pop
sti
push
xorb
cli
jecxz
xor
xchg
movsb
mov
xchg
xchg
push
pop
sbb
sahf
lods
in
add
iret
fs
mov
inc
push
sub
inc
and
mov
adc
jb
mov
enter
sarb
pop
fildll
scas
rorb
rcl
sub
cmpsb
sahf
and
repnz
fwait
ja
and
mov
xor
push
test
insl
mov
and
xchg
in
and
decl
or
fisubs
or
movl
mov
mov
and
sub
or
mov
imul
mov
jmp
loope
mov
and
les
aas
fwait
adc
stos
movlps
out
data16
test
into
mov
dec
jmp
cmp
test
call
test
out
imul
inc
fsts
or
test
mov
jle
outsl
jno
fst
dec
inc
cli
and
movsl
mov
mov
and
cmp
xchg
call
andps
sub
dec
sub
pop
and
in
jnp
jmp
cli
adc
lock
adc
fstl
inc
jb
add
lods
test
pop
cmp
cmp
lods
lock
push
push
les
in
stc
sbb
lds
xor
mov
adc
int
into
icebp
stos
imul
mov
ja
mov
pop
das
movq
loopne
add
sub
pop
cmp
mov
sbb
lret
ss
aam
cmp
adc
xchg
cld
flds
add
push
xchg
fdivrs
or
in
cmp
cmp
adcl
sub
lea
cmc
jns
inc
aaa
xor
int3
mov
sub
leave
pop
cmp
movsl
dec
pushf
sahf
xchg
mov
xlat
addr16
and
and
xchg
or
inc
mov
or
add
adc
ds
cmp
mov
cmp
xchg
lods
dec
rorl
fldcw
rcll
mov
pop
adcl
xor
or
or
in
loop
adc
ret
loop
aaa
push
cltd
jns
adc
mov
negb
inc
jnp
ljmp
sub
popf
stc
pop
les
fs
out
negl
popl
out
adc
stos
imul
jnp
push
sub
das
add
out
int3
push
sarb
pop
lock
pop
int3
insl
push
into
data16
popa
mov
dec
les
cmp
movsl
jne
inc
dec
xchg
fsubrs
mov
test
invd
rcrb
sub
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
jmp
inc
or
pushf
ds
fdivrs
cltd
adc
pop
adc
adc
aam
jmp
push
sub
pop
jo
fisubrl
inc
dec
jmp
shlb
in
outsl
test
stc
mov
push
or
push
cld
lds
xor
cmpsl
push
xchg
lds
adc
or
jno
sbb
shl
mov
notl
cld
mov
push
ficomps
scas
or
es
inc
or
dec
shlb
pusha
fadds
mov
cmp
push
cmp
subl
push
inc
mov
dec
cmpsl
fildl
nop
and
mov
addr16
stos
daa
ljmp
push
xchg
cmpsl
mov
mov
mov
std
ficoms
ret
lahf
hlt
jle
fsts
movsb
hlt
sub
in
ret
cmpsl
sub
lods
mov
sub
mov
cmpsl
and
dec
pop
cltd
incb
inc
add
inc
push
movsb
arpl
jg
push
call
push
repz
or
mov
mov
lahf
xor
inc
scas
sahf
pop
jp
adcb
ja
or
mov
inc
mov
pop
popl
pop
push
pop
imul
data16
jl
mov
nop
in
js
enter
mov
mov
lret
lret
mov
mov
adc
adc
faddl
rcrl
mov
sbb
mov
aam
xor
xor
in
jmp
jbe
fwait
cmp
fldt
fisubrl
mov
pop
fsubrl
dec
mov
pop
aas
or
add
adc
inc
inc
mov
ficompl
ja
pop
add
cmp
rorl
ljmp
cmp
lds
movsb
gs
loope
pop
mov
dec
sub
jb
xchg
cmc
js
ret
mov
js
cmp
lahf
inc
sbb
sub
cwtl
pop
xor
sti
add
aaa
cmpsl
mov
mov
inc
xchg
popa
sbb
jecxz
sub
cmp
fcoms
inc
aam
jmp
ror
or
sti
pop
dec
inc
or
mov
sahf
add
add
inc
mov
xor
mov
loope
and
pushf
ds
mov
sub
pop
jmp
mov
push
jp
nop
add
cmp
icebp
cmp
aad
test
ss
outsl
icebp
fwait
dec
mov
cs
dec
adc
and
movsl
mov
jg
cmp
xor
jnp
mull
mov
dec
mov
add
xor
mov
loop
and
cmp
cmp
and
mov
or
fisubl
inc
rcr
push
xor
ret
iret
add
xchg
stos
fwait
and
sub
rcrb
repnz
jl
in
dec
fnstcw
nop
ja
cmp
inc
imul
mov
pop
pushf
mov
in
outsb
call
dec
add
cmpsl
addb
adc
out
fdivl
cmp
movsl
call
inc
out
ror
out
mov
mov
sbb
adc
lock
xor
or
push
arpl
push
sbb
push
shll
add
cs
cs
sbb
mov
mov
jbe
mov
xchg
dec
add
push
or
pusha
dec
xor
sub
lret
adc
jp
loopne
inc
sub
jmp
cwtl
les
push
dec
ljmp
dec
mov
lea
mov
xor
dec
in
movsl
rolb
mov
cmp
ret
xchg
in
push
pop
pop
mov
scas
push
lret
sahf
loop
sub
shrl
imul
setnp
loopne
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
jmp
pop
pop
scas
outsb
scas
pop
sbb
cmp
push
push
jp
lods
loop
adc
pop
adc
adc
stos
sub
pop
cs
gs
mov
movsb
in
gs
stos
jg
pop
cmc
jbe
xchg
inc
fs
and
js
addr16
sbb
xchg
jg
scas
jo
sbb
inc
jmp
icebp
and
fs
popa
mov
jle
pop
mov
lods
or
mov
xchg
lds
ljmp
lcall
test
inc
pop
mov
bound
aam
xchg
bound
mov
pop
int3
pop
cmp
outsl
loope
cltd
rol
repz
jecxz
xchg
cli
sub
mov
mov
cmp
sub
jo
sbb
pop
repnz
stc
add
xchg
pop
xor
dec
mov
divl
sbb
dec
int3
push
push
insl
shr
imul
iret
cmpsl
xchg
rorl
mov
and
pop
or
faddl
push
xchg
dec
or
fwait
dec
cmpl
jbe
cmpsl
clc
xchg
cmp
cmpb
addr16
aas
icebp
push
jne
cmp
mov
int
into
cmpsb
xchg
sub
je
addr16
dec
filds
pop
lods
push
sbb
cmp
mov
dec
sub
or
jbe
xor
pop
aam
loope
push
jle
and
lea
test
push
adc
movsb
jl
xlat
lock
mov
stos
imull
imulb
xchg
cmp
mov
sahf
dec
loopne
add
mov
sbb
in
sub
xchg
or
outsl
mov
orb
ret
daa
dec
shl
mov
mov
shrb
sahf
and
push
cmc
bound
mov
mov
int
outsl
push
outsb
xor
cld
push
outsb
push
out
inc
lods
dec
iret
jle
fucomip
jmp
mov
add
pop
aam
fst
mov
dec
jo
int3
icebp
cli
xor
outsb
lcall
sub
dec
out
or
ficomps
stc
in
outsb
and
shlb
fidivrs
inc
and
xor
cmp
jge
movl
push
loop
pop
sarb
xchg
shll
push
fwait
cmp
arpl
iret
cmp
outsb
fisubrs
adc
adc
pop
gs
roll
add
inc
loope
cmp
jge
sub
sbb
aas
mov
roll
iret
fidivrs
mov
mov
adc
jns
ret
and
or
xorl
les
loopne
fisubs
xchg
mov
lods
dec
mov
lods
or
enter
out
mov
fs
gs
and
push
jmp
outsl
cmp
cmp
add
push
inc
sbb
pop
jo
jnp
nop
adc
and
dec
cli
imul
stos
cmp
dec
shll
mov
data16
lds
mov
lahf
and
sub
aam
dec
push
cmpsb
add
mov
mov
push
test
andb
mov
cmc
dec
pop
xor
test
xchg
pusha
mov
mov
outsl
push
pop
jne
dec
sar
insl
shl
xchg
jle
xchg
push
sbb
jb
repnz
xchg
mov
inc
je
pushf
aam
orb
andb
and
sub
or
lods
ljmp
imul
sub
fwait
add
into
repnz
xor
mov
out
lcall
jo
fisubl
pop
push
gs
outsl
call
std
cmc
or
sub
lcall
inc
and
icebp
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
ret
loopne
icebp
xchg
stos
mov
stos
cmp
adc
and
adc
shlb
mov
push
adc
sbb
jo
jnp
addb
xor
push
arpl
out
bound
add
xor
popa
push
scas
push
out
mov
leave
xchg
dec
mov
mov
mov
cltd
into
je
sbb
sub
xchg
lock
cmp
push
cmc
inc
jl
daa
out
push
dec
mov
pop
out
inc
lock
addl
outsl
adc
in
push
jbe
cmp
jg
repz
jb
mov
stos
mov
pop
fsubp
mov
loope
and
dec
lock
dec
cli
shll
sub
dec
movsl
outsb
cli
sahf
dec
jecxz
jnp
fwait
adcb
arpl
popf
mov
pop
popa
and
mov
mov
ja
push
add
movsl
insb
aam
jecxz
mov
ret
add
or
iret
push
bnd
sub
and
xor
mov
mov
ror
xor
xor
les
mov
fwait
jp
in
sbbl
cld
js
inc
pop
push
dec
dec
jno
push
mov
jmp
push
rclb
outsl
mov
dec
scas
es
mov
hlt
out
push
je
jmp
mov
xor
cmp
rcrb
xchg
mov
ret
dec
cmpsb
dec
pop
popa
je
and
les
pop
test
xchg
fimuls
insl
aam
int
sub
pop
fldcw
gs
adcl
idivb
daa
in
inc
cmc
cmpsl
xchg
push
cmp
jle
test
and
nop
or
into
cmp
and
lretw
pop
pop
mov
or
sti
pop
jle
call
mov
sbb
cwtl
and
inc
dec
and
lcall
xchg
jl
aas
hlt
orl
or
mov
xor
int
jb
xchg
mov
insl
sahf
and
mov
les
mov
push
and
xchg
mov
nop
into
mov
out
jle
or
popf
mov
adc
xchg
jl
imul
lahf
pop
cmp
or
shrb
sub
or
data16
mov
shrl
fistl
xlat
add
lahf
add
stos
ficomps
dec
and
mov
jmp
pop
in
mov
in
jb
cmp
enter
add
icebp
sub
or
push
cs
outsb
and
ljmp
fimuls
ret
push
aam
xor
add
lods
and
sbb
pop
mov
movlhps
popf
popa
cmp
pushf
outsl
adc
enter
xchg
pop
outsl
jno
dec
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
jmp
cmp
iret
sbb
pop
push
lret
test
repz
adc
movlps
popa
xchg
jmp
out
xchg
or
adcb
aaa
sbb
rcll
jb
xchg
inc
shlb
push
popf
mov
pop
xor
out
cltd
hlt
leave
movsb
fwait
add
and
stc
enter
into
es
push
loope
push
les
je
inc
dec
repnz
aad
jecxz
lcall
push
mov
mov
pop
rclb
cwtl
and
cmp
icebp
jnp
ds
mov
mov
into
dec
std
push
test
xchg
cmp
mov
dec
imul
lea
sbb
dec
test
mov
jns
std
push
lds
mov
sbb
pop
push
pop
andl
and
sub
loop
das
adc
hlt
xor
dec
jl
jge
pop
jle
adc
lds
push
lds
js
stc
pushf
mov
in
xchg
cli
sti
lods
sub
mov
stos
in
dec
aaa
xchg
dec
push
mov
popf
jnp
push
xchg
push
xor
cmpsl
or
aas
int
outsl
icebp
je
ljmp
mov
jg
add
cmp
jl
mov
sub
shlb
mov
cmp
dec
dec
mov
insl
jns
out
inc
and
loop
fdivs
pop
or
pop
xor
sbb
sub
decb
jnp
hlt
xor
stos
ret
add
neg
test
sbb
lea
ss
xchg
xchg
icebp
push
loope
negb
cmpsl
sub
push
fwait
mov
sahf
int3
lret
fwait
out
dec
dec
pushf
push
xor
ss
mov
jb
sub
inc
adc
push
stc
movsl
inc
insb
arpl
xchg
jb
fidivrl
dec
int
ret
jg
jp
lods
insl
shrb
add
insb
sub
mov
fldt
xchg
xor
insb
push
push
push
dec
clc
fadds
shrl
mov
dec
jecxz
sbb
dec
test
sti
cli
dec
dec
pop
pop
sbb
mov
in
or
sub
pop
imul
scas
lock
jns
push
mov
imul
lods
jp
xor
cwtl
test
dec
dec
xor
and
and
add
pop
fwait
popf
mov
xchg
xchg
mov
repz
mov
and
sbb
sbb
jmp
mov
fldenv
lcall
lods
dec
jmp
push
aas
fstl
stos
and
addr16
lds
into
adc
push
addr16
sub
push
add
inc
sbb
ja
mov
push
cmp
cmp
inc
xchg
pop
mov
out
cmp
mov
push
adc
xor
test
sub
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
jmp
inc
in
sbb
sbb
fisttpl
lret
jge
adc
movlps
call
lret
lods
xchg
into
and
cmc
adc
jne
in
pop
ja
out
jns
clc
inc
mov
mov
xchg
jbe
or
mov
sub
jl
ss
mov
xor
mov
imul
rcr
arpl
cmp
pop
cld
popf
inc
outsl
sub
adc
popa
xchg
mov
xor
gs
int
int
jle
dec
xchg
push
shrb
nop
jae
std
inc
mov
adc
idiv
mulb
sbbl
loope
inc
sub
xchg
hlt
push
jnp
cmpsb
or
stos
gs
adc
aad
mov
sahf
inc
icebp
adc
fs
jge
pand
punpckhbw
faddl
add
pop
dec
and
sbb
dec
insl
movsl
pop
mov
arpl
aas
lds
jno
push
xchg
cmp
mov
or
and
enter
les
xchg
cld
mov
push
inc
adc
loopne
and
sbb
fcompl
cmp
cmpsb
pop
dec
xor
jp
stc
insl
test
pop
or
pop
dec
sbb
xchg
loope
pop
gs
pop
hlt
rclb
jnp
mov
jne
adc
ret
int
push
xor
add
jb
fwait
ud1
nop
dec
or
push
push
jnp
or
movsb
fnstenv
push
scas
cmp
adcb
xchg
dec
sub
outsb
cmc
sub
leave
frstor
fistpll
je
shrl
sbb
test
or
lret
add
fisubs
test
and
ja
pushf
xchg
cmp
or
movsl
out
mov
ret
clc
pop
inc
sbb
pop
sbb
or
imul
jg
std
xlat
pop
mov
nop
aam
sub
popa
clc
cmp
lock
and
pop
jnp
enter
sbb
pop
in
scas
inc
jmp
test
je
scas
xor
std
rcr
cwtl
push
and
outsb
sub
mov
push
clc
in
in
sub
jne
mov
in
jae
bound
lock
add
scas
mov
mov
jp
testl
lds
cs
or
add
lret
jae
cmpsl
jno
ljmp
jbe
unpcklps
lods
testl
sti
adc
mov
xor
push
mov
xorb
dec
movsl
out
xlat
dec
lock
xor
jbe
jbe
pop
popf
mov
push
rcl
call
icebp
call
ret
jnp
scas
or
js
jg
xchg
iret
pop
and
orl
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
jmp
and
sbb
loope
stos
into
xor
jae
adc
pop
lea
or
xchg
cmc
inc
sbb
insb
fldenv
adc
adc
lret
into
lods
pop
ss
pushl
cmp
cwtl
rcrb
cmp
jp
pop
fst
xchg
add
xchg
sbb
adcb
xchg
lcall
pop
mov
loop
xor
or
mov
jbe
mov
pushf
or
incl
mov
xor
lods
inc
int3
xchg
pop
and
test
sub
xlat
or
pop
add
std
xor
pop
stos
pushf
faddl
hlt
jecxz
cmc
add
mov
repnz
pop
mov
pop
sub
cmp
popa
mov
ds
add
fmull
sub
sti
or
sti
mov
out
dec
cs
ljmp
inc
sub
pusha
push
lds
add
mov
dec
xor
sbb
sbb
daa
push
jne
popf
gs
push
es
shlb
xchg
cmpb
imul
xchg
sbb
xlat
loope
lcall
in
int
aaa
clc
jp
shrb
arpl
add
jnp
je
call
dec
dec
subl
pusha
jno
dec
jmp
jmp
mov
aaa
push
sbb
andl
cmc
ret
push
popa
scas
shrl
and
ret
pop
pop
pusha
test
popa
xchg
xchg
sub
sbb
sbb
jno
sti
nop
jle
and
or
je
dec
xchg
stc
push
inc
push
and
sbb
add
outsb
subl
lcall
sub
cmp
mov
shll
and
mov
jle
xlat
test
daa
aad
dec
in
je
movsb
aam
jl
cmp
xchg
push
fildl
cld
mov
movsb
fnstenv
shlb
icebp
lcall
dec
xchg
dec
stos
pop
mov
mov
test
pop
jle
mov
push
jnp
loope
inc
hlt
inc
sbb
mov
add
push
xor
mov
cltd
cmp
xor
inc
jg
adc
xor
jmp
popa
scas
test
adc
lret
add
mov
push
mov
sbbb
sbb
inc
push
ja
push
sub
ljmp
add
cs
xchg
fisubrs
out
out
mov
addb
or
fisubl
xor
cmpb
cwtl
pop
repz
ljmp
scas
and
dec
ja
and
fistps
xlat
mov
fldt
and
push
adc
and
jmp
cmp
dec
xchg
rclb
stos
cmp
xorb
jmp
adc
pavgb
push
fwait
nop
fs
pop
dec
aaa
adc
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
jmp
push
daa
sahf
xchg
sbb
add
lahf
mov
mov
add
adc
mov
paddb
sbb
xor
dec
xchg
pop
iret
sarl
f2xm1
mov
xor
test
insb
adcb
mov
inc
gs
stc
out
lock
pusha
aas
cmp
in
fcoml
push
add
fcoml
lret
rcll
dec
test
xchg
push
test
lock
jge
adc
inc
imul
lea
adc
dec
mulb
xor
fstps
lret
mov
mov
ret
and
jecxz
cmp
sahf
ret
bound
mov
je
std
ret
scas
cwtl
leave
mov
popa
jae
jne
lret
inc
int3
test
movsb
cs
and
data16
inc
rcrl
rcrl
daa
mov
enter
pop
mov
cmp
cli
adc
jnp
adc
jnp
subb
xchg
mov
push
jle
and
mov
scas
cmpsb
lods
out
inc
negb
mov
notb
jge
daa
jge
xor
pusha
jle
sbb
sbb
cmp
or
daa
adc
ss
lds
mov
outsb
add
fdivrs
rdmsr
aad
stos
pop
mov
loope
loop
jns
push
or
or
lock
ljmp
arpl
sbb
in
jg
and
mov
or
pop
xchg
jnp
dec
push
jmp
inc
jae
mov
xchg
inc
sbb
xchg
mov
leave
iret
cmp
pop
inc
mov
fs
cmpsl
xchg
fstpl
cmp
adc
mov
in
mov
je
push
cli
ja,pn
das
inc
mov
rolb
lret
pop
fsubrl
add
dec
cld
sahf
jmp
inc
inc
push
test
mov
push
shll
repz
add
in
leave
ljmp
pop
push
es
sbb
mov
scas
push
pop
scas
shll
dec
inc
scas
mov
movsb
jno
sbb
mov
dec
mov
add
mov
mov
cmovnp
mov
imul
xor
mov
stos
movsb
xchg
int
cmp
dec
movsl
jae
xor
addr16
pop
ds
xchg
mov
ret
jmp
jp
cmpl
pop
push
inc
das
lods
mov
aam
dec
push
jbe
inc
xorb
lret
iret
ret
push
pop
pop
jae
mov
int
movsl
jp
rcrb
xchg
pop
call
test
outsb
jns
sub
subb
pop
popf
leave
out
lock
mov
mov
lahf
cwtl
mov
idivl
adc
sldt
adc
popf
xlat
adc
ficomps
or
inc
mov
popf
addb
fnstenv
int3
mov
mov
roll
sbb
in
pop
jmp
dec
push
xor
and
cld
pop
adc
adc
in
subb
icebp
dec
loopne
push
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
jmp
pop
mov
sbb
sbb
mov
hlt
jl
mov
inc
stos
repz
or
sbb
sbb
push
loop
lds
adc
cmc
xchg
inc
sub
fs
dec
ret
in
push
mov
sbb
mov
xor
pusha
push
jecxz
ret
loopne
ljmp
ja
cmpsl
es
stos
sub
sbb
test
inc
inc
mov
nop
adc
jecxz
out
and
sbb
test
cmp
cmc
jecxz
push
add
xchg
repz
or
and
lahf
cli
rorb
add
sahf
lods
fsubl
sub
sub
push
pop
incl
sbb
sbb
push
lahf
or
scas
fstpt
pop
out
repz
fisubrs
pop
cmpb
clc
jo
adc
adc
mov
ds
lret
pop
daa
mov
les
pop
das
cmp
movsb
fildl
fsubr
inc
sbb
hlt
in
pop
shl
popf
cmc
add
pop
sbb
cmpsb
scas
sub
mov
lahf
inc
and
xchg
pop
push
stos
push
imul
sbb
lods
test
jbe
and
mov
dec
fcoml
aas
cmp
push
inc
mov
sbb
push
sub
push
or
mov
sti
fstpt
icebp
lcall
addr16
sub
dec
popf
lods
pop
add
in
aas
js
and
mov
jecxz
pop
cmpsl
mov
or
or
mov
fcmovnbe
push
jne
out
sahf
sub
call
and
mov
mov
xchg
cwtl
inc
fstpt
dec
mov
jg
mov
inc
add
nop
jb
repz
xchg
inc
xchg
jle
xchg
data16
mov
xor
das
pusha
xchg
sbb
jne
movsl
xchg
dec
xor
jo
nop
lds
sbb
into
jne
scas
or
fstpl
push
push
sub
sbb
sub
lret
mov
and
enter
das
out
dec
sub
shll
jl
xor
js
ret
dec
jnp
cmpsl
add
mov
imul
in
ret
hlt
xor
cmp
dec
adc
mov
hlt
aaa
test
jb
push
xlat
adc
sti
aad
dec
mov
cmpb
loopne
or
inc
movsb
jb
sarb
cmp
add
scas
pop
mov
jae
mov
popf
mov
adc
adc
pop
data16
shr
dec
or
lcall
aas
and
pop
mov
mov
gs
mov
pushf
jno
add
dec
lcall
mov
mov
out
lds
and
es
mov
out
pop
dec
stos
mov
push
cmp
inc
mov
inc
xchg
sbb
adc
gs
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
jmp
xchg
mov
ret
sub
lcall
adc
jb
adc
xor
mov
sub
fdivrp
aad
sahf
out
bound
les
pop
shl
movsb
hlt
jg
adc
popf
cli
cltd
in
arpl
enter
xchg
xchg
adc
test
and
mov
cld
roll
fs
fsubs
cmpsl
jl
mov
jae
jbe
cmc
imul
adc
jp
sbb
sub
xchg
pop
bound
sub
lods
pusha
xchg
cli
lret
gs
xor
pushf
ss
xchg
xchg
adc
loope
shl
std
pop
sbb
mov
cli
imul
cmp
pop
iret
stos
push
dec
test
es
lods
movlhps
ret
pop
xchg
sub
iret
fadds
or
test
adc
xchg
mov
popa
pop
pop
mov
xchg
movsb
xchg
inc
sub
scas
test
mov
aas
scas
mov
adc
aas
inc
movsb
mov
and
shlb
fdivrs
mov
data16
shll
jl
leave
cmpsl
cs
call
pop
hlt
loop
test
add
aad
push
cli
mov
mov
and
cmp
pop
sub
and
pop
mov
dec
aas
dec
ja
sbb
sbb
dec
out
mov
fsqrt
push
imul
stc
sbb
loopne
or
cmp
pop
cmp
in
xor
adc
sub
popa
addb
sub
xchg
fcoml
pop
lret
ljmp
or
rcl
fistps
sbbb
mov
push
je
mov
test
cmc
mov
popa
sahf
test
dec
or
lea
adc
stos
jg
fisubl
mov
call
jg
hlt
jp
inc
orl
cld
test
dec
adc
mov
or
fwait
leave
shlb
adc
hlt
out
xchg
leave
cmp
mov
mov
inc
xor
lcall
mov
movsl
dec
adc
js
mov
push
mov
or
fs
test
daa
fcoml
les
inc
mov
fcmovnbe
iret
shl
addb
xchg
test
fs
addl
sarb
lock
mov
xor
jecxz
lods
sub
cmc
push
mov
jle
xor
mov
xlat
mov
mov
xchg
add
inc
xor
or
ss
xchg
push
cwtl
fwait
cmpsl
ds
imul
sub
lret
subl
cli
fstpl
xchg
lods
adcb
rorl
fildll
xchg
push
inc
adc
jecxz
xor
dec
xorb
xchg
sarb
add
jmp
movsb
cmp
jae
popa
lret
and
leave
std
std
sub
cmpsb
mov
daa
scas
pop
push
nop
incb
pop
mov
add
push
pop
out
push
or
xchg
leave
dec
mov
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
jmp
movsb
pop
rclb
push
cmpb
or
mov
adc
adc
adc
loop
xchg
mov
mov
xlat
fisttpl
mov
loopne
inc
into
and
shrl
sub
into
mov
mov
cmc
inc
mov
xlat
scas
out
mov
push
les
jge
jns
mov
repz
sub
test
js
dec
mov
xchg
fistps
rcrb
add
movsl
xchg
xor
sub
popa
shl
clc
mov
fisubrs
sub
ret
mov
in
das
lret
dec
ss
mov
mov
push
test
push
jne
dec
mov
xor
mov
loopne
icebp
nop
mov
adc
insb
inc
andb
xor
xchg
mov
jg
push
int3
xchg
mov
add
jmp
and
popf
xor
dec
fs
jle
outsb
imul
cwtl
nop
div
out
aaa
sti
imul
dec
dec
neg
mov
or
push
lcall
insb
sub
lcall
inc
add
push
mov
cmp
cmp
and
data16
pop
hlt
push
add
insb
dec
mov
adc
jle
lods
es
cmc
mov
js
into
xchg
int
enter
xchg
cwtl
movsb
mov
in
sbb
shrl
mov
cmpsb
outsl
sahf
gs
or
fmull
dec
mov
jge
jb
mov
sbb
jb
or
and
push
fs
pop
jne
out
push
in
loope
jle
or
cmp
mov
lods
and
in
sbb
mov
adc
mov
push
outsl
lock
mov
mov
add
test
fs
outsl
call
mov
cmc
mov
inc
sub
pop
xchg
lock
pop
mov
test
push
fisubs
repz
sbb
jl
pop
jle
mov
dec
adc
sbb
repz
mov
sub
mov
mov
lods
mull
fimuls
movsb
fwait
adc
xor
stos
loop
mov
inc
pop
enter
mov
push
pushf
sbb
shrl
pop
aad
movsb
add
test
pusha
repnz
jg
je
arpl
pop
xor
popf
sti
stos
push
cmpsl
mov
getsec
push
iret
nop
push
xor
add
jmp
cmpsb
fdivl
out
adc
push
xorl
xchg
push
adc
outsl
sbb
jae
xor
aam
jne
jne
sahf
cli
mov
fs
mov
testb
repnz
shl
sarb
mov
cltd
jo
xchg
fs
shrb
xchg
xor
aam
jp
leave
dec
das
dec
das
jle
pop
sbb
test
xchg
xor
scas
aaa
xor
sub
adc
sbb
jmp
stc
pop
xchg
jns
jmp
pop
repz
push
sub
popf
call
xchg
sbb
fnsave
jle
cld
mov
push
test
ret
mov
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
jecxz
in
bound
pop
jne
inc
stos
fsubs
jp
adc
and
loope
xchg
iret
push
cmp
pop
mov
jge
clc
mov
and
test
jb
fcoml
push
pop
aaa
push
sarb
xor
out
jb
out
push
pop
push
sti
add
sub
stos
cmp
in
fisubrl
sub
jbe
xor
mov
stos
mov
inc
aam
mov
in
mov
js
fwait
js
mov
aam
jecxz
sbb
cld
inc
mov
vunpcklps
sub
test
xchg
add
lea
fmull
or
shll
arpl
out
lcall
sub
subl
lret
les
lahf
dec
dec
ja
sbb
lret
dec
xor
int3
mov
push
pop
pop
sbb
mov
mov
mov
fsubl
gs
or
int3
fidivl
movsl
jne
arpl
ljmp
inc
sbb
imul
mov
push
in
outsl
lea
cmpsl
je
pop
dec
fistps
pop
jl
movsb
jg
push
and
ret
out
mov
idivb
or
cli
pop
push
xchg
repnz
and
adc
test
int3
ss
push
adc
mov
or
dec
mov
and
mov
test
push
jp
sbb
sub
sti
dec
xor
scas
in
mov
enter
arpl
stos
add
dec
arpl
lods
jge,pt
dec
ljmp
loope
mov
pushf
sub
fdiv
cmp
imul
adc
or
mov
push
mov
mov
sbb
push
mov
adc
pop
xlat
push
inc
add
pop
push
popf
mov
xchg
pop
out
adc
inc
popf
mov
sub
dec
mov
mov
jecxz
xchg
sbb
popf
adc
cmp
mov
xchg
xchg
mov
pop
and
jle
idivl
dec
jl
and
pop
ljmp
ss
or
add
insl
jmp
fmuls
aam
dec
mov
fisubl
fldcw
inc
enter
inc
fcompl
sbb
or
inc
imul
in
imul
jp
mov
mov
adc
lret
push
enter
bound
cmp
into
mov
negl
mov
mov
push
bound
repz
out
leave
add
dec
cmp
scas
sub
xlat
js
or
in
push
mov
or
fsubrs
sar
leave
inc
test
mov
cmp
cmp
bound
sbb
sahf
out
push
stc
call
outsl
sar
cmp
adc
imull
sbb
popf
pop
fdiv
stos
jmp
aaa
ror
enter
addr16
fwait
sbb
pop
xlat
imul
pop
shrl
cmc
xchg
imul
inc
sub
and
mov
ret
mov
jno
sbb
xchg
pop
lock
mov
and
lea
mov
shr
or
mov
jmp
pop
pop
mov
push
fisttpll
je
pop
push
adc
jp
adc
nop
push
loopne
lahf
insb
cmp
aaa
loopne
cmp
or
lods
dec
push
pop
cmp
adc
lock
enter
or
leave
xor
je
into
add
jns
push
xchg
and
mov
mov
leave
in
mov
jmp
popa
fucomp
outsb
jmp
or
mov
mov
orl
dec
push
test
sub
insl
jnp
mul
pusha
outsl
inc
lods
sbb
dec
mov
jg
xor
mov
adc
xlat
or
jo
cs
sbb
add
popa
mov
mov
ja
cld
xchg
fnsave
sub
sti
cmpsb
add
jecxz
fucom
lods
cmp
mov
lret
arpl
sub
jp
mov
sbb
or
movsb
test
bound
inc
aas
pop
jbe
stc
pop
inc
mov
sub
lret
add
ljmp
pop
push
loope
pop
scas
or
add
fidivrl
sar
inc
imul
test
outsb
sbb
or
cmpsl
call
int3
xchg
lock
or
std
into
hlt
mov
and
lods
movsb
nop
fnstenv
shlb
sub
mov
test
fidivrl
jno
and
ficomps
idivb
jbe
insl
inc
push
or
push
loope
addr16
jecxz
cmpsl
dec
mov
lds
shrb
pop
test
das
nop
cmp
xor
push
sub
inc
pop
lds
addb
lret
adc
mov
rcrl
movsb
jg
bts
dec
fidivrs
enter
cld
out
in
xchg
sarb
pop
int
jle
pop
mov
xor
or
in
jl
push
add
ljmp
xor
push
or
loop
fistpll
push
or
int
das
fistl
pop
fnstenv
and
pop
das
stos
mov
fidivrl
mov
mov
leave
stos
mov
dec
es
mov
sti
in
ret
sbb
inc
fcmove
cmp
xchg
mov
in
jl
idivl
iret
dec
push
jp
lcall
push
out
mov
jne
fdivr
mov
or
stc
arpl
jl
stos
xor
ds
nop
add
mov
xor
jecxz
aam
loop
mov
data16
ds
and
and
mov
scas
lahf
xor
fmul
pop
repnz
pop
clc
test
push
clc
iret
pop
mov
ljmp
jecxz
mov
and
jmp
mov
mov
stos
push
jne
scas
sub
xor
adc
xlat
arpl
jmp
mov
push
xchg
jo
sahf
mov
lock
sub
xor
or
pop
jb
lret
outsl
rorl
sti
inc
clc
je
insl
adc
out
jp
and
pop
roll
push
stos
in
xor
mov
ds
push
nop
js
out
pop
cmpsb
in
fisttpll
sub
pop
pop
fcmovu
scas
jle
lds
imull
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
mov
add
push
push
add
push
or
mov
sbb
mov
shrd
cmpl
movzbl
movl
mov
jmp
mov
mov
jne
push
push
push
pushl
push
pushl
call
orl
and
mov
mov
sbb
sub
negl
shr
cmpl
movl
mov
jmp
movzwl
jg
push
push
pushl
call
add
movzbl
adc
mov
adc
movzbl
sbb
xor
xor
xor
mov
sub
sub
mov
adc
mov
movzwl
or
mov
mov
movzbl
xor
xor
xor
mov
xor
mov
or
neg
mov
mov
sbb
shl
mov
sbb
shrd
sub
xor
adc
shr
xor
or
add
mov
jmp
jnp
add
mov
ficoms
push
orl
inc
adc
lea
adc
mov
ds
jno
xchg
ljmp
adc
and
cmp
or
inc
icebp
adc
adc
mov
and
mov
jle
cmp
aaa
sbb
mov
dec
mov
std
mov
cmp
mov
mov
or
push
lret
cmp
inc
pop
cwtd
push
cli
js
pop
roll
jne
cmp
rcrb
push
arpl
es
cmp
sbb
hlt
sbb
mov
xchg
sahf
icebp
ror
popf
xchg
jp
cmp
mov
mov
or
outsb
jge
add
mov
mov
push
mov
or
jp
clc
dec
popa
pop
pop
or
adc
add
mov
in
out
leave
xlat
popf
outsl
dec
xchg
icebp
rcr
push
lods
xchg
insb
cmc
inc
in
push
xor
inc
leave
adc
push
cwtl
lods
mov
cmpsb
mov
mov
rolb
pusha
test
sbb
loopne
jmp
cmc
pop
mov
and
call
daa
fcos
jle
dec
icebp
mov
jmp
adc
int3
sub
add
std
sub
sub
sbb
int3
xchg
mov
pop
ret
pop
push
aaa
shrl
and
push
add
pop
int
repz
mov
mov
cltd
cli
inc
insb
int3
mov
mov
rorb
mov
xchg
or
jp
sbb
xor
inc
cmpl
inc
jb
sbb
push
add
xor
xlat
repnz
imul
inc
adc
push
xor
sbb
lret
and
push
jle
imul
or
add
or
sub
shlb
call
bound
subb
mov
out
lea
sbb
or
sarl
out
js
push
stos
cmpsl
divl
fcomi
lahf
sbb
ret
cmc
jne
jge
pusha
fsubrl
mov
sbb
sbb
cs
sbb
xor
adc
and
loop
insb
dec
cld
pop
lahf
xorb
hlt
push
and
mov
jo
xchg
aad
xor
sbb
fildll
jne
add
cs
jecxz
cmp
ror
jge
sub
test
lods
test
out
imul
inc
push
xor
sbb
int
aas
inc
jnp
stos
out
jne
add
adc
insl
xchg
push
push
pop
jl
or
rorl
enter
mov
stos
outsb
dec
mov
out
sub
xchg
or
aaa
inc
push
testb
insl
aas
push
mov
adc
jmp
xchg
mov
sub
les
loopne
adc
lea
adc
loope
ss
into
adc
notb
inc
xchg
lds
shll
pminub
adc
lea
inc
and
out
fimuls
sbb
fbld
scas
xor
je
or
dec
lock
int
int3
or
mov
mov
pop
ret
mov
stos
icebp
add
mov
push
stos
out
push
sti
mov
lcall
or
in
sbb
stos
ds
adc
cld
or
je
push
cmpsb
and
or
js
sbb
movsb
pop
sbbl
jb
dec
cmp
mov
pop
mov
adc
mov
das
pop
cli
popa
rcrb
out
fidivrs
ss
jbe
push
add
repz
push
addr16
mov
xchg
faddl
jnp
std
mov
cwtl
dec
mov
mov
aaa
cltd
loopne
jns
xor
push
lcall
mov
xor
stc
push
mov
fisubl
mov
cmc
push
popf
out
mov
inc
push
cli
dec
fiadds
adc
movsb
inc
adc
mov
test
shll
push
es
xor
xchg
xor
add
jle
cwtl
out
xor
arpl
test
pushl
mov
sub
outsl
mov
mov
pop
mov
stos
popa
fbld
mov
jo
and
cs
or
add
sbb
dec
int3
adc
or
loop
subb
add
shlb
aas
add
insl
mov
lods
mov
push
add
imul
hlt
loope
lret
ds
jo
xor
je
jnp
lods
ds
rclb
sub
in
call
jb
inc
js
sub
cmp
les
pop
dec
inc
lret
iret
fidivrs
js
xor
xchg
xlat
je
sub
movzbl
mov
cmp
pop
hlt
xchg
mov
push
sub
mov
mov
mov
leave
or
les
insl
inc
imul
and
jbe
mov
aas
pop
pop
or
pop
lock
ljmp
movsl
nop
push
xor
cmc
inc
pusha
fmuls
sbb
int3
test
bound
jmp
sub
or
fwait
enter
pop
ljmp
iret
call
push
inc
cs
add
imul
rcll
in
jb
cmp
lea
push
add
xor
in
cs
in
adcl
or
cmp
add
add
mov
xlat
mov
jmp
mov
jg
push
push
push
call
sbbl
adc
andl
mov
mov
xor
xor
or
mov
adc
adcl
neg
xor
or
mov
mov
sub
or
mov
mov
xor
or
mov
sub
sub
mov
xorl
mov
or
mov
xor
mov
movzwl
sub
mov
cmpl
mov
mov
mov
jmp
mov
jle
push
call
sub
and
subl
or
or
adc
mov
mov
cmpl
movzbl
mov
jmp
mov
jb
push
push
call
mov
xor
xor
sub
or
xorl
adc
sub
sbb
mov
shl
mov
sub
xor
or
xor
sbb
mov
xor
adcl
shld
shl
mov
mov
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
xor
xor
add
sbb
xor
xor
mov
cmpl
mov
mov
mov
mov
jmp
movl
movl
jg
push
call
movl
and
sub
subl
movl
mov
shld
movl
shl
cmp
movl
jne
movl
cmp
je
and
mov
xor
or
and
mov
push
movl
pop
or
xor
shl
mov
addl
xor
adcl
shr
addl
or
mov
or
mov
mov
mov
mov
cmpl
movzbl
mov
jmp
mov
mov
jl
pushl
push
pushl
push
call
mov
add
inc
mov
and
sub
mov
jmp
add
int3
sub
inc
les
pop
inc
adc
lea
adc
push
sbb
ds
add
mov
cmpb
les
in
rcrb
mov
imul
cmp
test
mov
sbb
js
push
aaa
inc
shrb
loop
xor
cmpsb
cmc
lods
pop
xchg
mov
insb
je
aam
in
and
mov
hlt
mov
orb
push
int
lret
sub
pop
ja
push
xchg
outsb
je
fistpl
loop
pusha
or
scas
gs
int3
repnz
repnz
inc
mov
mov
fcomp
inc
cmp
fs
sub
shl
dec
inc
into
cmp
shll
inc
stos
js
xchg
clc
leave
pop
ds
fwait
and
dec
xor
ret
stos
incb
mov
or
jmp
adc
lock
jp
push
push
lahf
outsl
sub
xor
fnsave
mov
push
jmp
not
dec
mov
ds
mov
add
neg
rcrb
xchg
shll
pop
jno
ret
sahf
jae
add
push
stc
dec
andb
cli
dec
mov
mov
mov
je
inc
lods
add
pop
jnp
fildl
gs
ret
mov
insb
jmp
fs
clc
push
or
add
std
loop
filds
dec
xor
add
push
leave
lret
cltd
es
mov
mov
sbb
repnz
cld
shlb
scas
cli
test
inc
sbbl
rclb
pop
out
pop
or
sti
lods
test
inc
out
adc
scas
mov
lods
mov
cmpsl
aam
testb
jno
dec
xor
aaa
jl
int3
pop
sarl
add
sbb
aam
adc
jecxz
fistpl
xchg
scas
lgs
stc
ljmp
and
dec
in
into
insb
or
adc
jb
jge
jne
mov
and
jo
sar
push
xchg
xchg
mov
daa
jmp
push
and
adc
xchg
push
sub
pushf
push
rol
enter
test
xor
bound
push
or
sub
push
add
xchg
push
stc
push
rorl
or
movsl
sbb
jb
adc
mov
es
sub
sub
in
movsl
das
scas
into
pushl
mov
inc
cmp
out
mov
push
or
inc
mov
jne
gs
adcb
mov
dec
ret
in
xchg
jecxz
xor
add
sub
mov
subl
add
mov
cmpl
movzwl
movzbl
mov
mov
jmp
movl
movl
ja
pushl
call
or
and
or
xor
mov
adc
adc
mov
xor
mov
lea
andl
mov
addl
mov
xor
mov
xor
xorl
xor
addl
shr
subl
shl
or
mov
movl
add
mov
mov
xor
xor
andl
shr
addl
shl
sbbl
or
subl
push
lea
push
subl
lea
push
call
cmpl
mov
mov
jmp
mov
movzwl
ja
pushl
push
push
call
adc
movzbl
sub
and
mov
xor
adc
or
sub
xor
xor
mov
and
mov
cmpl
movl
mov
mov
jmp
movl
movl
jae
push
pushl
pushl
pushl
call
sbb
sub
adcl
or
sbb
xor
add
mov
sub
and
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
mov
pop
cmp
shlb
mov
aaa
adc
lea
adc
lret
das
movsb
test
mov
xlat
fnstcw
scas
adc
dec
lock
call
lock
repz
add
aaa
repz
outsl
test
xchg
cmp
aad
movsl
movsb
sbb
out
cwtl
outsl
mov
jnp
mov
hlt
add
mov
adc
dec
mov
mov
add
mov
movsl
rcrb
mov
xchg
cvtpi2ps
divl
pop
fcmovnbe
paddusb
pop
xor
cwtl
mov
mov
out
and
mov
inc
in
sbb
add
popl
mov
orb
movl
mov
in
mov
jecxz
inc
push
shll
fcoms
add
push
dec
mov
sbb
gs
mov
mov
fsubs
sti
jo
mov
aam
mov
xchg
popf
sub
inc
sub
push
xchg
popf
es
aas
addl
sbb
subb
cmp
sti
out
loope
nop
push
outsb
dec
js
inc
mov
fidivs
loope
cmp
mov
push
cmp
outsb
cli
aas
jmp
jne
leave
data16
mov
aaa
push
scas
add
jno
and
or
push
xchg
adcl
es
or
jmp
rcrb
mov
cmovno
jo
pop
hlt
and
jnp
push
push
push
xor
fstps
das
lods
sub
pop
in
scas
jmp
inc
xchg
mov
dec
lods
orb
lret
popa
mov
out
xlat
fbld
lock
lahf
nop
das
repz
push
int
jns
test
mov
popf
cmpsb
in
shll
inc
fwait
xlat
ljmp
mov
loopne
inc
loopne
aaa
xor
and
pop
dec
lahf
cmp
sbb
js
nop
pop
fcom
lret
imul
in
cmp
mov
inc
inc
xchg
and
xor
xchg
cmp
mov
sbb
or
inc
cmp
out
push
int
dec
or
stc
mov
pop
xchg
mov
jnp
dec
or
pop
mov
insl
sti
xchg
cmp
xchg
imul
sbb
fdivrp
xor
dec
push
mov
push
in
call
scas
mov
fxam
iret
pop
sub
add
xchg
pop
test
sub
push
or
dec
mov
push
mov
sbb
xorb
out
jg
push
mov
sbb
adc
adc
out
pushf
mov
inc
iret
std
ret
aad
leave
sbb
dec
adc
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
jmp
xchg
sbb
sbb
adc
adc
lea
adc
sub
daa
fistps
repz
adc
leave
mov
imul
int
cmpsl
jae
rcrb
insl
scas
xor
inc
movsl
outsl
jae
dec
into
idiv
ret
adc
negl
test
insl
push
dec
mov
adc
dec
sub
bound
dec
int3
cmpsb
lcall
lret
outsb
mov
sub
push
pop
cmp
cmp
jno
in
aas
mov
mov
inc
rol
fildll
jle
test
dec
out
inc
push
popa
out
loop
leave
ja
jle
pop
fwait
aas
mov
fidivs
xor
sub
int
ficoms
test
push
adc
mov
in
idiv
sub
out
jmp
leave
enter
pop
or
xchg
mov
mov
mov
int3
mov
std
dec
in
adc
out
mov
aad
lahf
loope
cmp
and
test
ficomps
mov
ret
xchg
mov
pop
in
mov
imull
mov
hlt
push
hlt
push
loope
lcall
aam
dec
fdivrl
ja
outsl
aam
dec
iret
add
stc
idivl
lods
mov
lcall
cmp
lar
cmpsb
pop
cmp
sub
xchg
popf
mov
push
cmc
loope
xchg
shll
pop
jmp
movsl
test
jns
fistl
dec
rolb
int
cmp
sbbb
js
sbb
loope
ret
lods
adc
mov
icebp
mov
xor
mov
dec
outsb
xchg
adcl
jmp
dec
adc
ret
test
sti
jnp
pop
adc
cmovns
or
aad
out
pop
jg
hlt
or
pop
into
xchg
fisttps
test
scas
xor
push
dec
xor
ds
fnstenv
mov
cmpsb
or
jmp
jl
insb
mov
jb
xchg
pop
xchg
sub
and
xor
adc
inc
test
std
outsl
arpl
inc
jo
mov
push
aad
mov
shlb
dec
jmp
xchg
je
ficomps
sub
test
ds
adc
mov
cmpsl
mov
sbb
out
mov
jo
ret
test
or
aas
sbb
adc
inc
adc
push
fndisi(8087
cs
sbb
push
in
mov
pop
dec
pop
xlat
xchg
mov
aas
mov
repz
lahf
jmp
stos
adc
adc
enter
add
adc
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
jmp
mov
add
sub
jle
sub
jle
js
sub
adc
ret
jmp
xchg
push
lds
xchg
and
aad
xor
dec
mov
stos
push
add
sbb
inc
fxtract
jno
jne
cmpsb
jle
shr
jo
aam
xchg
xor
cs
xor
pop
shl
cltd
add
addl
and
icebp
sarb
xor
stos
stos
nop
add
jo
les
add
movsl
aaa
sub
sbb
adc
xor
cmp
mov
push
add
fmuls
sahf
mov
pop
stos
sahf
js
sub
or
subb
pop
add
jp
insb
aas
into
shl
and
addb
dec
push
fidivs
call
insb
pop
adc
dec
sbb
movsb
sahf
adc
test
lock
jle
lods
push
in
insb
cs
mov
xor
out
daa
subl
push
scas
aaa
jl
or
xor
mov
ljmp
cltd
imul
imul
leave
lcall
sbb
dec
dec
xlat
aas
xchg
xor
xchg
pop
sbb
sbb
adc
pop
jl
mov
push
xlat
mov
mov
sub
jns
push
neg
pushf
leave
lds
dec
add
mov
mov
daa
inc
cmp
mov
divl
inc
cmpsl
movl
test
dec
sub
stos
adc
push
fdivr
and
mov
shl
sbb
inc
xchg
xchg
cltd
xor
pop
repz
aaa
ja
mov
xor
mov
mov
xchg
push
bound
mov
xor
in
cmc
or
pusha
in
test
fimull
movsl
fistps
das
mov
rclb
sub
sub
push
sbb
repnz
loop
idivb
mov
sub
pop
sbb
xor
xor
cmp
cmpsl
cmp
xchg
xor
inc
sub
jnp
xchg
popa
les
aam
cli
outsl
adc
lahf
add
arpl
lods
orl
test
pop
pop
in
js
inc
jp
pusha
outsl
inc
push
and
push
and
lcall
loopne
repnz
xchg
cmp
mov
data16
cmpsl
dec
lods
sti
popw
test
pusha
and
mov
sbb
mov
call
loop
js
bound
inc
xor
sahf
insl
jle
bound
aam
imul
mov
lds
cmp
lcall
fdivrp
scas
rorl
or
xor
or
push
add
jmp
and
lods
and
js
pushl
stos
xor
adc
lea
adc
pop
stos
mov
push
push
mov
sahf
jno
rol
fwait
xchg
js
lret
into
imul
scas
fcomp
inc
in
fbld
mov
jbe
xchg
in
stc
cmp
into
push
sbb
push
xchg
repz
add
dec
mov
inc
neg
xlat
cmp
orb
mov
stos
sub
fdivl
stc
fcoml
mov
sbb
add
inc
lods
and
push
ljmp
cmc
sar
add
push
dec
xchg
adcl
je
sti
sub
add
int
adc
and
hlt
push
repz
adc
imul
pop
or
jecxz
sti
sti
or
adc
test
lods
inc
mov
enter
repz
mov
xchg
popa
idivb
ret
mov
lods
iret
mov
pcmpgtb
ja
xchg
stos
sbb
mov
arpl
test
and
cmp
sbb
mov
mov
aam
mov
inc
pop
pop
inc
arpl
mov
xchg
movsb
push
xchg
and
call
pop
jecxz
pop
cmp
loop
pop
adc
or
xor
jne
sbb
pop
mov
push
xor
lock
xor
shll
aaa
xchg
dec
aam
xchg
xchg
lcall
and
push
enter
shlb
push
jnp
jge
les
pop
sub
sbb
push
cmp
jbe
mov
dec
arpl
and
jg
xlat
test
fsub
in
ds
scas
subb
xor
addr16
mov
fs
sti
inc
lret
nop
div
push
sub
xlat
fisttps
pop
enter
in
lock
nop
xor
sahf
cmp
ret
mov
push
ficomps
jmp
cmc
add
lock
mov
bound
push
fldl
lret
mov
inc
scas
push
inc
outsl
sbb
mov
mov
out
mov
std
cs
shrb
mov
sbb
mov
jno
add
scas
xor
xchg
and
insl
hlt
push
add
aaa
fsubrl
pop
xor
xor
cmp
inc
inc
pop
or
fistl
cmpsl
xor
scas
ss
aad
bound
jl
subb
xlat
das
in
pop
in
mov
sbb
sub
sahf
inc
or
test
cwtl
cmp
fldcw
int3
pop
idiv
fistl
inc
pop
loop
pop
mov
rcl
cmpsb
lds
stos
or
les
inc
push
shl
call
jmp
outsl
xchg
pop
test
add
mov
movlps
shll
leave
cmc
sub
push
clc
and
sbb
loope
mov
in
dec
sub
into
push
enter
loopne
test
sbb
push
xor
mov
mov
cs
mov
js
xlat
adcl
ss
pop
xchg
psraw
xchg
jno
mov
fimuls
ja
scas
repnz
dec
inc
inc
mov
adc
xchg
mov
lahf
jb,pt
jb
dec
or
mov
push
add
mov
in
sub
in
cmp
jbe
imul
xor
push
or
pushf
ret
pop
test
cmp
test
sub
mov
jne
jae
cmp
in
dec
sbb
inc
inc
xchg
test
push
out
or
lds
es
push
push
es
push
push
mov
pop
insl
inc
push
xchg
sbb
push
fs
push
insb
inc
int
shlb
mov
mov
loopne
ret
je
pop
orl
pop
pop
cmp
ds
jge
in
xchg
dec
add
inc
jbe
out
dec
cmpsl
pop
pusha
inc
pop
add
jns
mov
or
adc
or
test
push
sbb
sbb
ficomps
inc
or
jnp
fsubr
cmc
sbb
sub
cmpb
inc
das
or
inc
cmp
data16
xchg
mov
cli
insl
pop
inc
shlb
out
mov
mov
push
xor
nop
xchg
aam
pop
xor
xor
push
mov
addl
lods
repz
into
and
xchg
outsl
sahf
add
sbb
add
hlt
cmp
cmpsl
or
std
mov
stc
jl
loope
push
inc
sbb
jne
xlat
push
dec
fstps
lret
push
xchg
shrb
mov
xor
enter
test
mov
pop
adc
mov
add
push
sti
data16
dec
in
lcall
data16
push
dec
mov
fndisi(8087
icebp
cltd
pushf
and
jae
fisubs
roll
push
pop
cld
out
test
cmp
je
and
push
jmp
movsb
nop
pop
enter
stc
xor
or
stos
add
mov
pop
dec
movsb
cmp
mov
fstpl
in
inc
sti
stc
jge
jns
fcomip
cmpsl
mov
sub
mov
sub
and
adc
cmp
loop
in
fwait
dec
sbb
push
ljmp
mov
repz
mov
cs
push
sub
mov
dec
adc
lods
enter
add
adc
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
jmp
jge
jbe
jne
jge
das
adc
ss
push
sbb
adc
mov
and
push
pop
stos
push
or
and
push
andl
cmp
lret
mov
jmp
inc
outsb
or
push
jb
push
fwait
inc
fildll
ds
xchg
test
andl
pop
push
push
iret
add
cmpsb
ss
outsl
push
mov
sbb
mov
inc
xor
leave
mov
mov
rcrl
push
in
int
sbb
aam
xlat
push
sbb
lret
pop
sub
out
repz
subb
aaa
push
js
imul
pop
adc
data16
add
cmp
add
sbb
sub
in
mov
stos
or
or
inc
pop
sbb
or
sbb
lea
jmp
and
outsb
mov
cmpsb
loopne
mov
lcall
or
sub
xchg
adc
xor
inc
aaa
lea
arpl
ret
inc
jecxz
mov
push
daa
pop
pop
adc
outsb
sub
cmp
inc
ficoms
sbb
mov
insl
dec
stos
pop
mov
hlt
mov
and
push
sti
mov
mov
sbb
push
jle
push
pusha
xor
jbe
enter
pop
roll
in
mov
dec
jne
sbb
insl
testb
xlat
mov
and
inc
shrl
outsb
xchg
xchg
xchg
sbb
mov
dec
or
pop
mov
xor
push
inc
jmp
mov
je
inc
mov
jo
push
ds
leave
test
xlat
pop
lea
pusha
sbb
add
int
jns
or
test
jns
iret
xor
mov
out
or
add
xor
daa
int
add
pop
push
mov
cmp
xchg
mov
mov
dec
inc
mov
sub
cmp
sub
lret
inc
insl
icebp
test
push
dec
mov
loope
mov
xor
inc
mov
enter
xchg
xchg
cmp
aad
sbbl
loopne
jo
xchg
nop
sub
mov
sarl
outsl
jbe
mov
jge
push
mov
popa
pop
dec
mov
out
mov
jno
push
adc
fimuls
fsubp
pop
dec
sbb
rcrl
inc
in
mov
xor
inc
sub
leave
out
movsl
mulb
out
xchg
jbe
mov
aas
push
pop
jecxz
sti
mulb
push
inc
hlt
xlat
leave
jmp
mov
popf
or
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
adcl
or
mov
mov
jne
cmpl
movl
movl
movl
jmp
mov
mov
jne
push
pushl
pushl
push
call
adcl
sbbl
add
orl
xorl
subl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
fs
push
stos
sbb
dec
loop
into
mov
stos
nop
sbb
adc
enter
push
cmc
imul
or
sbb
in
jno
ret
push
xchg
sahf
aad
stos
mov
leave
in
xchg
sub
push
orl
adc
call
push
cmp
or
dec
xor
in
hlt
mov
int3
in
mov
jnp
push
or
dec
sbb
jnp
adc
add
testl
lods
call
jns
jl
in
stos
js
aam
dec
dec
xchg
cmpsb
js
fisubrs
insb
test
and
outsl
lods
pop
subl
fisubrl
jl
xlat
daa
cmp
and
rolb
jmp
fcmovnbe
pushl
inc
cmp
add
ja
out
cmpsl
cmp
popa
xchg
inc
jmp
and
shrb
dec
mov
jbe
fdivrp
std
add
jno
xor
pop
rorb
sub
mov
pop
sbb
movsl
aad
out
movsb
adc
fildl
mov
pop
jnp
adc
mov
fmul
or
push
push
sub
push
xor
mov
lock
ret
cmp
inc
or
dec
movsb
ret
cli
aad
lods
arpl
clc
adc
xor
jecxz
addr16
mov
dec
cmp
pop
ds
hlt
lret
pop
cs
lahf
jb
xchg
shlb
movsl
cs
cwtl
lcall
jp
and
out
call
jecxz
xor
arpl
adc
movsb
rcll
and
lahf
mov
push
cli
xchg
adc
adc
inc
dec
or
leave
dec
subb
sbb
adc
int3
or
add
push
mov
test
enter
pop
in
inc
dec
push
leave
fstl
dec
in
cld
adc
scas
pop
loope
sbb
or
incl
leave
mov
incl
test
xor
je
ds
data16
popf
or
cmp
jp
dec
push
add
xchg
mov
cmp
sbb
push
sbb
push
sbbb
inc
mov
mov
das
push
adc
mov
sbb
xchg
dec
jl
push
lcall
gs
xchg
sub
idivb
ss
or
pop
mov
mov
pop
cmpb
out
jbe
xchg
lock
js
sub
inc
scas
loop
cli
aaa
inc
out
mov
aam
dec
lret
inc
xchg
movsl
lock
push
inc
icebp
cmp
mov
pop
and
mov
rcrl
ja
pop
or
inc
push
stos
clc
jnp
iret
icebp
jnp
mov
mov
sub
icebp
frndint
mov
add
cmp
or
out
mov
jmp
mov
pop
rclb
xchg
inc
adc
stos
cli
or
lret
add
insl
fwait
cmp
out
and
jg
push
jl
inc
xchg
cmp
cmp
mov
or
and
xchg
sbb
enter
xchg
test
push
frstor
in
push
es
mov
icebp
add
roll
and
cmpsb
mov
jae
scas
cmpsb
lcall
sub
bound
in
inc
pushf
mov
push
jb
dec
pushl
push
mov
xchg
jne
outsb
pop
sbb
cmpsb
sbb
cmc
decl
or
add
inc
mov
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
jmp
imul
scas
std
dec
and
fwait
pop
lods
aaa
unpckhps
mov
cmp
cmp
out
and
and
fiaddl
js
pop
cld
push
pand
or
dec
jle
stc
jns
cli
xchg
cltd
mov
imul
and
adc
lock
popf
cmp
int
add
mov
ljmp
dec
add
xchg
fistpl
mov
test
inc
cli
sbb
shll
push
popf
dec
inc
in
shrb
das
ljmp
mov
lods
xchg
int3
or
test
add
pop
dec
mov
in
stos
pusha
dec
jl
jg
fcom
pop
sbb
movsb
loope
jbe
shlb
out
pop
adc
push
dec
das
mov
push
repnz
mov
jae
and
jmp
cmp
inc
mov
je
les
sbb
mov
ficoms
push
loopne
cmp
pop
cmp
pop
loope
pop
test
es
xchg
jbe
mov
jmp
pop
sub
mov
jb
push
int
into
out
xorl
jl
outsl
jle
ss
mov
ret
dec
mov
inc
mov
repnz
mov
aad
rcll
lods
inc
enter
hlt
push
sbb
rsqrtps
sbb
add
pop
ret
mov
xor
pop
repnz
nop
mov
or
lds
and
inc
mov
repz
movsb
or
call
rcrl
dec
pop
xor
mov
or
mov
push
std
or
inc
fisubs
lock
mov
loope
popf
call
pusha
std
jmp
pop
cmp
int3
fisttps
push
lods
sub
pop
jb
fdivp
lods
push
jae
jge
fsubr
pop
mov
cs
pop
mov
insl
shlb
shlb
mov
lods
pop
lahf
push
das
cli
xchg
xor
mov
fisttps
mov
sbb
je
insb
jne
push
push
pop
lock
into
sub
push
cmp
and
pmaxsw
ds
jg
push
mov
xchg
cmp
sbb
sahf
sbb
mov
xor
out
aad
mov
dec
xor
std
fldl
mov
mov
rorl
add
cmp
sbb
mov
xchg
xor
lds
fcompl
scas
jns
jnp
icebp
cmpsl
popa
xor
arpl
xchg
fwait
pushf
stos
sub
jae
mov
push
insl
add
lret
out
mov
dec
ljmp
not
jnp
xor
mov
push
or
mov
xlat
sbb
jmp
xor
xchg
or
int
notl
lea
test
int
cmp
xchg
push
cltd
nopl
cmpsl
cmp
pop
orb
pop
mov
fisubrl
jp
addl
cmp
fcmovnb
loope
int3
dec
push
pusha
pusha
mov
aaa
lods
in
inc
rclb
add
pop
movsl
gs
sbb
jae
inc
xlat
test
adc
and
pop
adc
aad
mov
pushl
cwtd
dec
repnz
cmc
bound
inc
adc
mov
jmp
jno
xor
icebp
repnz
scas
cltd
inc
sub
cld
iret
ret
sub
push
je
inc
in
fisubs
push
dec
or
addr16
mov
popa
enter
inc
sbb
inc
cmpsb
test
outsb
test
mov
push
jg
pushf
clc
xchg
in
push
lret
bound
cmp
cltd
lods
lret
and
loopne
or
or
leave
jnp
add
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
jmp
lret
lahf
push
pop
sbb
leave
pop
jmp
call
push
pop
adc
adc
pop
sbb
add
or
out
push
and
fimuls
jp
aaa
push
pop
pop
push
test
xchg
sbb
sbb
sbb
dec
mov
mov
icebp
fldt
mov
sti
sahf
mov
mulb
mov
dec
addr16
bound
push
lea
ret
jle
or
xor
mov
jl
mov
out
pushf
fs
loopne
mov
lea
aaa
cmpsb
dec
mov
sbb
sbb
out
test
lcall
sahf
xchg
cmp
sarb
inc
inc
pusha
das
pusha
rorl
jo
cltd
aam
sub
or
cli
push
test
out
cmp
sub
jae
arpl
sti
push
push
jae
mov
and
mov
aaa
ds
mov
jp
cmpsb
mov
xchg
sub
dec
mov
out
mov
sub
shrl
adc
mov
push
or
sub
add
adc
sti
aas
scas
xchg
cltd
sbb
in
adc
stos
mov
mov
fxch
sub
pop
dec
out
bnd
mov
test
jbe
clc
lock
int
out
stc
xor
push
xchg
lea
push
mov
push
jo
push
popa
mov
jbe
add
push
in
pop
mov
or
dec
enter
adc
andb
push
mov
or
lds
pop
lret
inc
repnz
sub
pushf
inc
or
hlt
mov
daa
sti
sbbb
sub
mov
push
jl
insb
jne
cmp
push
jmp
mov
add
mov
nop
add
push
inc
popf
pop
mov
cmp
ret
add
and
dec
inc
ss
mov
xchg
aaa
sbb
xchg
mov
or
unpckhps
jno
out
fisttpll
jae
lret
mov
stos
mov
cmp
sbb
inc
imul
inc
mov
dec
adc
jg
mov
cmpsl
cmp
call
mov
add
in
jae
movsl
lret
fildl
jmp
push
test
push
jo
bound
stc
push
cmp
movsl
faddl
mov
add
mov
pop
mov
movsl
adc
stos
pop
push
adcb
std
push
rcrl
xchg
es
imul
or
mov
in
lods
mov
pop
addl
mov
xchg
mov
sbb
push
aad
mov
fwait
cld
pop
pop
scas
cwtl
std
aam
mov
push
notb
repnz
insl
sbb
mov
repz
int
out
movsb
cmp
scas
aas
pushl
dec
lcall
je
dec
push
sub
ja
mov
mov
lea
dec
xor
pop
inc
inc
jnp
sti
cli
lret
adc
jecxz
push
dec
jns
inc
sbb
mov
sub
ja
rclb
mov
cmp
inc
test
repnz
cltd
cmc
pusha
push
sbb
and
inc
sbb
addr16
sub
xor
cmpl
mov
ds
hlt
xchg
arpl
arpl
lds
out
pop
leave
xchg
mov
jb
or
fst
mov
or
xor
pop
shll
sbb
sahf
sub
mov
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
call
mov
movzbl
push
call
test
jne
xor
jmp
adc
mov
cmpl
movl
movl
movl
jmp
movzbl
jbe
pushl
call
orl
addl
adc
sbbl
andl
mov
xor
mov
jmp
xor
push
or
cli
sbb
pop
mov
xchg
movlps
dec
adc
xor
cmp
sub
out
scas
or
aaa
cld
in
jno
xor
xchg
repnz
movsb
hlt
sbb
xor
inc
jmp
push
mov
xor
out
daa
stc
fchs
stos
jle
filds
inc
shrb
ror
sbb
popa
dec
mov
jecxz
sub
lret
xor
mov
aad
movsb
or
pop
or
popa
arpl
les
jb
mov
and
push
ss
ficompl
sbb
sbb
ret
push
orb
add
sbb
stc
imul
lret
jmp
int
and
notl
fs
sbb
mov
int
cltd
push
pop
pop
lods
js
xlat
jge
inc
imul
imul
xchg
pop
repnz
mov
std
xchg
sbb
or
cmp
sub
push
iret
mov
shrb
cmp
sbb
xchg
dec
fbstp
cld
mov
lret
test
xchg
fstpl
push
jl
push
push
or
bound
xchg
aaa
fs
inc
lcall
dec
out
push
lods
or
jmp
inc
lds
loope
pusha
pop
mov
dec
xor
fwait
pop
nop
std
inc
out
pop
xor
test
cwtl
fistpll
into
sub
and
dec
push
aaa
bound
pop
cmpsl
jne
adc
mov
shll
fistl
xor
xlat
xor
pop
cs
push
jb
jb
jb
test
dec
fcmove
jb
insl
std
xor
outsl
test
cmpsb
push
cltd
adc
or
lods
mov
jle
pop
sub
test
mov
mov
add
mov
mov
push
inc
lret
push
out
add
sub
mov
in
loop
aaa
orl
mov
xlat
xor
xlat
pop
mov
mov
into
sbb
mov
mov
fdivrl
hlt
adc
loop
mov
lretw
pop
push
jle
sbb
add
nop
jbe
js
jns
ret
fnsave
push
mov
cli
repnz
mov
adc
push
cld
ret
pusha
pop
adc
out
push
clc
cs
data16
xchg
or
xchg
outsl
scas
movsb
mov
inc
fmuls
push
loop
mov
bnd
repnz
ret
fwait
sbb
mov
clc
stos
loop
inc
mov
je
jae
out
jecxz
in
jle
dec
out
dec
add
push
mov
mov
or
mov
cmpl
movl
movl
jmp
movl
mov
je
push
call
addl
subl
and
andl
movl
orl
movl
adcl
push
mov
add
pop
mov
cmpl
movl
movl
movl
movl
jmp
not
movl
jl
pushl
push
push
push
push
push
push
push
call
subl
subl
addl
adcl
andl
neg
mov
xorl
mov
movl
mov
movl
mov
andl
movzwl
or
cltd
movzwl
xorl
idiv
cmpl
mov
movl
mov
mov
jmp
movl
movl
jne
pushl
push
push
call
xor
xor
mov
and
or
mov
mov
sbb
movzwl
sub
sbbl
movzbl
sub
mov
sub
mov
movzwl
addl
or
mov
or
mov
cmpl
movl
mov
mov
mov
jmp
movl
movl
jae
push
pushl
push
pushl
call
sub
sub
adcl
mov
or
addl
mov
mov
mov
movl
mov
mov
adc
mov
sbbl
sub
sbbl
mov
andl
xor
sbb
jmp
mov
sbb
push
mov
mov
xchg
movlps
clc
pop
adc
xchg
repz
xchg
mov
sahf
out
std
inc
adc
in
push
jo
push
cld
xor
mov
or
push
cmp
or
loopne
push
push
icebp
repz
andl
xchg
mov
inc
push
push
enter
punpckhdq
and
lods
pop
mov
jecxz
cmpsb
jnp
adcl
mov
in
mov
divb
filds
sub
xchg
cmpsl
lcall
adc
mov
movsl
ljmp
xor
xorl
mov
and
sub
mov
mov
pop
mov
test
mov
push
fmuls
cltd
mov
mov
mov
fnstcw
xchg
sarb
cli
or
js
pop
cld
fistpl
inc
jne
jo
shll
pop
test
pop
loopne
arpl
dec
mov
cmc
xor
lds
cmpsb
sub
pop
fwait
or
mov
imul
sub
mov
mov
mov
out
scas
aaa
shlb
mov
sbb
cmp
xor
fsubl
js
cli
jno
cmp
out
lds
or
sbb
mov
cmpsl
iret
clc
push
and
pop
stc
xor
pusha
sbb
adcb
sbb
jp
test
xchg
adc
comiss
xor
pop
ds
dec
frstor
and
inc
sub
adc
xchg
push
sub
jae
add
cwtl
add
mov
mov
out
movsl
pop
push
adc
cmp
jno
mov
sar
outsb
sub
and
adc
das
add
int
cmc
or
push
cmpsl
in
mov
les
xor
lahf
inc
mov
pop
imul
xor
adc
mov
xchg
or
inc
lods
mov
popl
popa
js
pop
pop
int
cmp
jp
cmpsb
ret
dec
imul
sbb
lods
lret
ljmp
jl
ret
cmc
inc
jmp
in
ljmp
ret
shll
mov
scas
add
mov
shlb
mov
data16
outsb
lret
mov
xchg
or
add
js
xchg
in
imul
push
inc
add
mov
adcb
out
pop
push
add
and
mov
add
rol
movsl
ljmp
mov
movl
cmp
movl
jb
sbb
movl
movl
movl
cmpl
movzbl
mov
jmp
movl
mov
jbe
pushl
call
sbb
mov
sub
mov
and
inc
movl
and
mov
cmpl
mov
movl
movl
mov
jmp
mov
jb
pushl
pushl
push
push
call
andl
sbbl
mov
sbb
movzbl
or
xor
xor
xor
xor
orl
add
mov
orl
xor
sbbl
div
mov
add
sbbl
and
pushl
pushl
call
movl
movl
mov
adc
movl
cmpl
movl
mov
mov
jmp
movl
movl
je
push
push
call
adc
xor
xor
mov
sbb
xorl
or
mov
xorl
mov
adcl
and
addl
or
mov
subl
and
xor
adcl
pushl
pushl
addl
call
not
pushl
dec
movl
movl
xor
movl
subl
movl
or
movl
cmpl
mov
mov
not
mov
jmp
movl
mov
jl
pushl
push
push
push
push
call
xor
and
sbb
adcl
movzwl
or
movl
movl
xor
movl
mov
dec
mov
andl
sub
sbb
mov
or
orl
and
xor
jmp
or
ja
mov
jle
lea
xchg
movlps
push
add
ja
mov
pop
and
sub
push
xlat
mov
mov
mov
mov
sbb
or
jbe
in
xlat
push
pop
ss
push
out
scas
aas
dec
stos
pusha
jmp
mov
xor
push
shll
bound
inc
mov
xor
cmp
sub
sbb
rcr
incl
sarb
dec
xor
xchg
cld
fwait
cld
jb
xchg
stos
repnz
and
pop
cmp
mov
mov
dec
out
fadds
jecxz
popa
sub
sub
cmp
sbb
sub
clc
loope
test
xor
scas
jns
cmp
sarb
xor
xor
insl
ja
in
cmpsb
test
inc
in
mov
stos
icebp
mov
jecxz
andb
inc
cmpsb
imul
cmp
xlat
and
cmpsl
mov
jge
xchg
repz
jbe
sbb
outsb
dec
push
mov
lock
add
or
mov
iret
add
scas
cmp
incb
dec
dec
add
mov
nop
inc
insl
inc
inc
and
adc
adc
imul
jge
sub
xchg
mov
enter
xor
ss
mov
sbb
cmp
arpl
push
sahf
lea
hlt
data16
xchg
jne
xlat
cmp
pusha
sahf
dec
cmp
xor
pusha
sub
push
adc
adc
inc
fcmove
mov
push
lret
pmulhw
adc
repz
cmp
cmc
lea
xchg
out
stc
mov
mov
jge
cs
outsl
movsl
mov
inc
js
addl
push
dec
test
xor
xchg
pop
lods
add
aaa
flds
adc
stc
test
and
pop
cli
mov
push
adc
lret
adc
pushf
aaa
fnstcw
cwtl
jl
pusha
cld
pop
lods
cmpsl
js
jo
pop
pop
lahf
inc
pop
mov
insb
push
inc
adc
outsb
jno
into
mov
add
cmove
jbe
pop
in
dec
ret
repz
pop
push
aad
mov
gs
or
mov
adc
adc
jge
adc
pushf
pop
push
ror
insb
roll
aaa
jns
mov
cmpsl
pop
insl
mov
lcall
stos
jae
outsl
or
stc
or
xchg
mov
mov
sbb
jo
and
and
jmp
or
sbb
daa
adc
iret
inc
js
ret
xor
std
dec
cmp
mov
addl
sub
movl
pushl
xor
mov
mov
andl
add
xorl
and
cmpl
mov
movl
jmp
movl
je
call
or
or
not
or
mov
sub
mov
xor
and
pushl
sub
mov
mov
andl
imul
xor
or
mov
movl
sub
pushl
sbbl
call
adcl
dec
movl
jne
movl
cmpl
mov
movl
mov
mov
jmp
movl
movl
je
pushl
push
call
or
xor
mov
and
mov
sbb
mov
add
movl
mov
mov
movl
mov
xorl
call
lea
mov
cmpl
movzwl
mov
mov
movzbl
jmp
movl
not
jb
call
and
xor
or
sbb
neg
orl
mov
mov
sub
and
neg
lea
mov
mov
mov
sub
mov
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
call
add
xor
neg
xor
add
mov
adc
xor
xor
xor
add
sub
sub
xor
xor
mov
sub
xor
sub
cmpl
mov
mov
jmp
movzwl
movl
jbe
push
push
call
sbb
sub
mov
mov
add
adc
addl
xorl
xor
sbb
xor
add
shl
shr
or
and
mov
dec
mov
orl
mov
mov
sub
mov
xor
mov
mov
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
adc
sbb
sub
adc
movl
mov
adc
mov
mov
xor
orl
xor
or
and
mov
addl
push
xorl
pushl
addl
lea
adcl
push
subl
shl
call
addl
lea
andl
push
mov
subl
mov
lea
push
andl
mov
movl
lea
sbbl
mov
xorl
mov
mov
adcl
push
call
orl
push
sbbl
push
pushl
sbbl
call
and
mov
xor
mov
inc
mov
mov
add
shr
cmpl
not
movl
movl
movl
jmp
movl
jg
push
call
inc
sbb
adc
add
sbb
cmpl
mov
mov
jmp
mov
ja
push
call
and
adc
sbb
sbb
mov
xor
add
sub
or
shl
cmpl
mov
mov
mov
mov
jmp
movl
jne
push
call
add
mov
sbb
adc
sbbl
sbbl
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
jle
pushl
push
pushl
pushl
pushl
call
adc
xor
xor
add
xor
or
sub
xor
mov
sub
xor
add
adc
and
or
xor
mov
sub
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
jmp
incb
dec
dec
cmp
or
dec
mov
push
out
adc
adc
movzbl
xorb
add
mov
sub
movsb
fisttpll
and
xchg
shll
sbb
ljmp
shrl
ret
add
data16
or
sbb
dec
pop
cld
shll
fisttpl
pusha
hlt
out
addr16
pusha
xchg
clc
push
mov
shrb
std
xchg
fisubrs
insl
ds
sub
std
adc
push
ficoml
lds
sahf
adc
mov
bound
cltd
xor
dec
cmpsb
negb
sahf
out
pop
xor
rclb
loop
lods
jbe
ja
adcl
sti
xchg
or
lret
or
xchg
js
fwait
jmp
insb
mov
sarb
addr16
nop
shrb
hlt
add
divl
push
cmp
imul
nop
pop
sbbb
dec
jl
call
test
push
ja
add
mov
mov
mov
cmp
lea
fst
bnd
push
inc
addr16
inc
rorl
cmp
stc
ljmp
and
pushf
add
aaa
je
dec
fucomp
gs
jge
add
mov
cwtl
mov
mov
clc
dec
imul
cmp
flds
or
xchg
jo
xchg
iret
test
dec
aam
pop
sti
xor
xorb
std
jecxz
cmpsl
rolb
fisubs
dec
jp
wrmsr
add
mov
adc
and
mov
je
push
add
mov
xor
lret
loopne
movsl
popf
cmp
lea
sbb
int
ficomps
into
mov
jge
test
dec
int3
dec
push
fsubrp
sbb
stc
or
jbe
fwait
pushf
cmp
loop
ret
popa
cmp
movsb
jle
ja
xchg
and
pop
lea
pop
cmpl
sub
lcall
mov
gs
push
jmp
mov
out
data16
inc
mov
mov
ficoml
pop
leave
lock
int3
lds
mov
mov
int3
or
or
cmp
cmc
inc
xchg
mov
outsl
jl
xchg
pop
movsb
mov
jns
jnp
icebp
lcall
mov
cs
push
scas
orl
insl
push
push
adc
xor
jno
sbb
and
adc
pop
inc
in
mov
imul
sbb
stos
mov
cmpsb
loop
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
ss
adc
sub
xchg
mov
pop
pop
dec
mov
xchg
movlps
dec
dec
inc
call
sbb
mov
incl
lret
fs
mov
inc
adc
sbbb
neg
mov
fildl
adc
clc
cltd
clc
xlat
ljmp
hlt
pop
lods
test
mov
xor
xchg
inc
popf
clc
daa
mov
mov
cmp
push
push
or
lahf
movsl
in
pop
jae
sbb
inc
lock
scas
mov
dec
mov
imull
xor
test
xchg
push
jb
ljmp
decb
push
mov
and
xchg
mov
sub
cmp
ret
jnp
repz
push
mov
lods
fstl
lret
mov
sbb
jmp
lidtl
xchg
xchg
cmpsl
push
hlt
test
aaa
push
movsb
pop
negb
clc
adc
fiaddl
push
jns
adc
cmp
dec
xor
mov
push
or
push
sub
xchg
aad
sahf
std
insl
sub
gs
push
dec
cmp
push
in
or
sbb
jno
out
ret
xor
pop
mov
bswap
jns
es
fsqrt
pop
loopne
mov
pop
repnz
popa
pushf
inc
data16
dec
out
inc
addb
lret
outsl
and
adc
jb
andl
test
sub
dec
push
sbb
push
je
mov
jge
mull
inc
cmp
lods
and
dec
cmp
sub
add
mov
inc
movsb
arpl
lcall
mov
xchg
dec
sbb
mov
adc
repnz
sub
push
cmpsl
out
mov
mov
loop
push
lahf
cmp
test
or
push
fisubs
push
push
inc
insb
inc
clc
jle
sbb
call
repnz
or
sub
jecxz
mov
push
stos
test
sarb
sbb
imul
loope
dec
dec
or
pop
outsb
adc
and
cmp
fwait
and
scas
add
add
popf
mov
and
xchg
pop
fmul
out
or
xor
je
out
sub
inc
gs
or
out
or
add
imul
cmpsl
push
pop
add
cmp
mov
cld
aam
jo
nop
jecxz
jge
cmp
shll
clc
mov
sub
arpl
ja
lret
push
lcall
dec
stos
pop
shl
in
int3
push
or
pop
pop
cli
xor
jle
mov
push
sbbb
rcr
adc
mov
pop
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
jmp
cmpsb
xchg
mov
jns,pt
sahf
lods
dec
inc
fdivrl
xchg
movlps
prefetchw
ljmp
push
call
outsl
mov
or
test
popa
inc
push
into
sub
flds
inc
jle
repz
pop
rolb
jle
cmc
ret
nop
dec
ss
outsl
clc
pusha
and
aaa
imul
dec
cwtl
fsubrl
push
je
inc
es
pop
sbb
repz
xor
loope,pn
adc
xchg
rcl
xor
loopne
insl
cli
scas
dec
icebp
mov
shlb
in
lods
jo
jno
fmul
fiadds
add
jb
xor
pop
aaa
sbb
xchg
sub
push
pusha
jg
push
jge
mov
loopne
outsl
out
fisttpl
and
faddl
loope
cmc
shll
sub
leave
stos
lahf
push
mov
js
lahf
test
xchg
cmpsl
icebp
lahf
imul
ds
dec
cmp
push
inc
sbb
mov
lret
enter
xchg
mov
icebp
add
std
sbb
add
add
loope
pop
sbb
loop
xchg
ja
sti
push
sbb
in
pop
sub
xlat
cmp
mov
rorl
ret
dec
movdqu
aas
or
sub
pop
outsl
cmp
psllq
sbb
and
cmc
nopl
imul
rorl
stos
in
dec
outsb
sti
dec
enter
inc
mov
js
ficompl
shlb
sti
sub
es
in
cmp
fldl
nop
fcomps
loop
mov
sbb
fsubs
mov
clc
dec
inc
and
xchg
sub
mov
dec
jmp
call
out
dec
loop
pop
lahf
movsb
cmpsl
mov
push
test
pusha
pushf
rcrb
pop
je
ss
mov
lret
icebp
xlat
paddsb
mov
outsl
sub
mov
xchg
pop
addl
inc
cmpsb
adc
jmp
stos
inc
pop
ja
push
inc
adc
xchg
addr16
pop
int
ret
xchg
xlat
shlb
push
sbb
das
sahf
dec
fisttps
test
cmpsl
subb
cltd
add
and
mov
lahf
push
cmp
jbe
add
jge
addb
xchg
cmp
cmpsl
sub
push
cwtl
or
idivl
leave
push
shrb
daa
push
and
pop
imul
inc
inc
sbb
clc
mov
fwait
lret
push
sub
popf
pusha
stos
outsl
cli
jbe
adc
out
lahf
push
lods
movsb
inc
push
aad
lret
push
sbb
or
dec
popa
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
jmp
cltd
add
cltd
fstp
jmp
lods
scas
xorl
jnp
adc
adc
mov
mov
or
xchg
jo
dec
in
or
or
test
mov
jecxz
out
gs
sbb
xchg
inc
or
push
xchg
aaa
mov
pop
orb
shlb
loope
movsl
inc
sbb
leave
std
lret
movsb
mov
xor
jns
aas
fidivrl
jo
pop
lea
mov
push
out
clc
adc
lret
cld
dec
out
mov
in
xor
push
cs
nop
mov
test
leave
and
add
push
mov
imul
mov
pop
push
lock
je
sub
pop
and
and
ficompl
sbb
lods
mov
nop
mov
push
lahf
sti
neg
mov
cmp
shr
cwtl
push
faddp
fwait
mov
sub
jae
stos
test
aad
mov
outsb
sbb
sub
cmp
xor
movsb
push
int
ljmp
fists
test
icebp
jbe
or
add
std
ror
mov
adc
leave
loopne
push
mov
push
fwait
addr16
cld
aaa
or
jge
mov
cmp
pop
out
cli
fdivrp
or
movsl
fnstsw
out
stos
push
mov
fnstsw
outsl
push
mov
sbb
push
outsb
jmp
fsubrs
xchg
and
xchg
mov
fisttps
cmpsb
cmp
push
xor
fnstcw
outsl
mov
lods
out
icebp
or
fcoms
cs
sub
rcrl
jp
addr16
sbb
mov
clc
push
inc
mov
pop
mov
and
out
enter
in
mov
daa
hlt
xchg
div
adc
roll
cmpsb
push
das
fnstsw
and
in
cmp
adcl
jge
mov
mov
dec
adc
jg
jecxz
jmp
mov
mov
loope
and
decb
das
cwtl
dec
mov
jae
enter
mov
fwait
out
cli
cmpsb
pop
pushf
mov
xlat
sbb
testl
push
mov
fcmovu
sarl
decb
add
sbb
int3
cs
cmp
xorl
dec
mov
mov
das
add
test
lea
and
outsb
pop
sti
jl
outsl
sarb
pop
es
call
test
push
push
loope
mov
stos
push
wbinvd
out
fldt
cmp
data16
inc
xchg
add
aaa
dec
inc
sub
test
cmp
std
vaddpd
cmp
lods
mul
and
push
stos
xchg
lahf
mov
fcompl
add
loopne
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
jmp
cmp
cltd
fistps
sbb
js
ficoms
adc
sti
mov
xor
cli
fcmovu
xlat
jo
xchg
push
sub
ja
dec
out
fsubl
sub
xor
mov
mov
xchg
push
fisubl
inc
xor
data16
pop
pop
add
lret
jge
jb
pusha
movsl
mov
jle
in
xor
push
data16
xchg
push
jne
lods
into
adc
nop
push
loopne
comiss
xchg
and
pop
scas
pushf
aaa
hlt
xchg
scas
je
mov
dec
test
adc
pop
mov
mov
jge
add
xchg
lret
fisubs
add
mov
out
cmp
gs
jg
mov
ret
fstpt
xchg
ja
or
inc
xchg
pop
fwait
xchg
aas
mov
rcrb
xchg
cmp
or
pop
push
xor
mov
inc
mov
mov
push
mov
adc
mov
xor
pop
and
mov
sbbl
push
popa
fsubs
loope
or
lret
jbe
fcmovnbe
pop
fcmove
inc
mov
imul
lret
pop
jmp
jb
cld
sbb
add
mov
cmpsb
ss
jnp
mov
js
dec
insl
jbe
cltd
jp
mov
push
jp
and
and
xchg
cmp
lret
xchg
das
scas
int3
push
je,pt
add
pop
sub
push
fdivr
incl
fcmovnbe
cli
inc
imul
cmp
test
sbb
mov
inc
sub
sub
mov
or
push
rcl
mov
test
lea
or
rcr
mov
inc
mov
sahf
pop
out
test
xchg
jmp
mov
ret
les
mov
mov
ret
mov
and
xchg
xlat
push
fs
and
les
stc
sbb
orl
ds
pop
xchg
or
mov
test
xchg
rcrl
outsb
scas
push
inc
jno
sbb
icebp
lret
movsl
imul
push
xor
sbb
test
inc
out
mov
dec
xchg
sarb
sbb
and
cmp
or
and
int3
stc
nop
mov
fstl
sub
lods
je
and
dec
mov
jle
or
pop
xchg
dec
hlt
lock
push
sub
cmpsl
xchg
lods
shl
mov
fwait
mov
mov
jb
bnd
insb
icebp
imul
ret
movsb
adc
dec
outsl
not
mov
sub
in
xchg
mov
nop
push
mov
andl
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
pop
xor
jge
cmp
loopne
dec
pop
cmp
js
adc
adc
inc
mov
mov
or
repnz
pop
pop
pop
xchg
fwait
dec
aad
sbbw
std
sbb
and
js
jp
dec
ficoms
lea
cli
and
fwait
push
fucom
dec
sbb
loop
inc
std
into
std
sbb
rolb
jns
pop
imul
lret
std
jae
loope
pusha
xor
outsb
or
adc
add
mov
je
call
jb
push
sbb
pushf
in
stos
dec
es
testb
sbb
inc
mov
sub
movsl
test
mov
cmp
sahf
pop
roll
das
test
cmpsl
sbb
pop
icebp
movsb
fcmovnbe
bound
arpl
stos
outsb
pop
call
shlb
les
jecxz
pop
adc
js
lahf
push
lods
into
repnz
jl
push
dec
call
bound
pop
movsl
pop
xchg
inc
xchg
mov
mov
jb
shlb
inc
pushf
sub
pop
pop
lcall
int3
aaa
shll
mov
ja
nop
pop
jns
mov
push
repz
fcoms
fisttpl
jmp
orl
jnp
cltd
pop
mov
mov
dec
or
pop
push
cltd
sbb
dec
mov
fs
test
mov
outsl
jae
into
xor
cltd
mov
cmp
mov
test
pop
pushf
jno
loop
fdivrs
xchg
sbb
inc
mov
popf
aam
mov
sub
ret
scas
pop
icebp
fsubrl
jno
aam
inc
repz
cs
inc
stc
lods
jns
add
fdivrs
cmp
out
imulb
imul
inc
scas
popf
aad
mov
lret
inc
das
xchg
stos
xchg
lock
fisttps
dec
roll
sub
cmp
cltd
cmpl
mov
pusha
mov
loope
xor
sub
fisttpll
fwait
lahf
or
scas
or
sbb
bound
andl
inc
push
jne
adc
or
xor
xchg
mov
xchg
out
sub
pusha
jo
add
mov
dec
mov
movl
inc
or
outsl
mov
mov
cmp
mov
scas
sub
adc
dec
out
dec
adc
data16
loop
mov
push
add
cmp
sbb
and
jbe
imul
mov
cmp
push
iret
testb
and
subl
mov
dec
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
movl
push
mov
mov
and
push
sbb
push
movl
movl
sub
movl
or
mov
movl
mov
xor
andl
div
imul
sbbl
mov
xorl
xor
and
mov
mov
sbb
mov
xor
orl
div
add
sub
mov
movl
cmpl
movl
not
mov
mov
jmp
mov
mov
jbe
push
call
adc
movzbl
sbb
mov
mov
or
and
mov
mov
sub
or
inc
sub
movl
cmpl
mov
mov
mov
jmp
movzwl
ja
call
adc
sub
sbb
inc
xor
movl
mov
orl
add
xor
cmpl
mov
movl
movzwl
jmp
movl
notl
jae
pushl
pushl
pushl
push
push
push
call
or
and
or
incl
mov
mov
and
and
xor
sbb
imul
addl
mov
and
sub
mov
mov
mov
and
movl
orl
movl
adcl
movl
movl
mov
sub
imul
mov
andl
imul
cmpl
mov
movl
mov
jmp
movl
movl
je
push
push
call
orl
xorl
xor
or
mov
or
mov
xor
xor
sbb
mov
jmp
pop
sahf
and
out
scas
sarb
rclb
adc
adc
outsl
xchg
pop
cmpsb
test
cli
xchg
mov
xchg
add
lea
mov
cmp
mov
sub
dec
sub
and
xchg
into
jns
push
pop
out
mov
or
in
loopne
scas
dec
or
jmp
push
and
mov
pop
pop
test
ljmp
fisubl
jge
das
mov
shll
pop
push
dec
mov
xor
xor
push
add
adc
and
loop
push
mov
cmp
test
nop
arpl
jl
pop
pop
pop
das
push
add
cltd
xchg
ja
or
iret
sbb
fwait
les
call
ljmp
dec
add
add
dec
mov
stos
scas
or
js
mov
push
mov
loopne
inc
pusha
mov
inc
andl
arpl
ret
jnp
sbbb
call
sub
gs
sub
outsb
add
call
lret
or
mov
out
add
in
in
inc
test
rolb
ss
inc
sbb
repz
lea
in
popf
fistpl
or
pop
loope
sahf
xchg
subl
cmp
cmp
gs
lea
scas
mov
adc
je
add
xchg
dec
popa
into
sbb
mov
insb
notl
insl
mov
aad
fisubrl
cmc
daa
das
int
data16
std
lods
mov
and
adc
xor
dec
fcompl
mov
loope
nop
cli
in
add
mov
jno
mov
inc
data16
cwtl
call
and
stos
push
cwtl
popf
cld
mov
out
inc
shll
xor
xor
test
mov
pop
into
jmp
rcr
and
cmpsb
push
imul
mov
subl
and
dec
or
xor
mov
subl
xor
cmpl
movzwl
mov
mov
jmp
mov
mov
jg
push
pushl
call
add
adcl
adcl
add
and
mov
add
orl
mov
mov
sbbl
lea
mov
or
movl
movl
sbb
movl
mov
or
xor
cmpl
notl
movl
not
jmp
movl
movl
jbe
pushl
call
or
xor
andl
movl
add
adc
mov
orl
or
and
add
cmpl
movl
mov
mov
jmp
movl
mov
jbe
push
call
and
add
xor
subl
and
add
xor
cmpl
mov
mov
mov
jmp
movl
jb
push
call
add
xor
add
sub
sub
xor
add
mov
add
subl
or
xor
mov
or
add
cmpl
movl
mov
movl
mov
jmp
mov
mov
jge
pushl
pushl
call
andl
sbbl
andl
movzbl
sub
add
adcl
xor
mov
movl
orl
movl
adc
movl
mov
and
add
cmpl
movl
mov
mov
mov
jmp
movl
movl
jle
push
call
xorl
xor
and
orl
orl
inc
mov
sub
mov
subl
lea
movzbl
sbb
mov
or
sub
xor
or
or
mov
mov
movl
movl
mov
or
add
xorl
imul
mov
imul
xor
movl
mov
div
sub
movzbl
or
mov
xorl
movl
sbbl
movl
movl
mov
mov
addl
xor
movl
div
sub
imul
adc
add
mov
orl
xor
xor
sbb
mov
div
xor
mov
movl
cmpl
movzwl
movl
jmp
mov
jge
pushl
call
not
or
adcl
adc
dec
add
movl
and
movl
cmpl
movzwl
mov
jmp
mov
movzwl
ja
push
push
push
push
call
adcl
adc
and
and
addl
mov
mov
sub
movzbl
xor
shr
and
sub
and
mov
imul
mov
subl
and
mov
adcl
jmp
cltd
adc
xor
sbb
js
pop
fdivrl
enter
popl
ljmp
fiaddl
push
stos
aam
and
fstpt
in
ja
rcrl
push
xor
add
les
lahf
push
int3
fwait
push
mov
cmp
in
lods
or
imul
sub
movsb
fwait
mov
add
mov
call
mov
adc
imul
sbb
fs
int3
push
jmp
rdpmc
ds
into
aas
pop
rcrl
int
and
into
les
sub
inc
inc
xchg
mov
or
out
cmp
fnstcw
inc
mov
pop
pop
inc
js
xchg
outsb
push
xor
add
mov
cwtl
inc
stos
xchg
in
mov
iret
icebp
mov
lea
cld
repnz
push
iret
jnp
lcall
in
mov
or
mov
add
das
cmp
adc
push
xchg
push
outsb
cltd
pusha
dec
cmp
push
push
lea
in
outsl
arpl
out
in
sub
pop
cmpsl
int3
in
mov
and
lock
les
adc
adc
inc
leave
dec
cmp
xlat
ds
pop
or
jne
ljmp
fsubrs
jbe,pn
outsl
sbb
test
ficoms
pusha
leave
cmpsl
loop
pop
outsl
mov
mov
sub
lock
sarb
icebp
data16
pop
mov
push
sti
and
inc
dec
mov
jne
lds
andb
or
std
jle
enter
mov
cli
and
lock
out
jns
pop
ret
push
loopne
push
cmp
mov
mov
adc
mov
cmp
mov
and
dec
cmp
push
sahf
sub
ds
in
das
pop
shll
jmp
inc
push
xlat
mov
test
sbb
iret
push
jmp
mov
out
syscall
shrl
add
std
sbb
scas
fnstcw
out
sub
lcall
or
mov
or
movl
cmpl
mov
mov
mov
mov
jmp
mov
jne
pushl
call
notl
addl
orl
andl
and
movl
mov
sbb
or
mov
or
sub
adcl
mov
cmpl
mov
movl
movzwl
jmp
movl
mov
jg
pushl
pushl
push
push
call
add
sub
adc
movzbl
sbb
adcl
and
or
movl
mov
sbb
movl
addl
movl
cmpl
movl
movl
jmp
notl
jne
push
push
call
sub
xor
xor
mov
adc
or
orl
adc
andl
adc
mov
adc
movl
adc
movl
xor
xor
add
movl
movl
mov
add
or
mov
movl
sub
xor
mov
addl
imul
add
imul
or
mov
or
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
push
push
pushl
push
call
or
or
xorl
sbb
xor
xor
subl
mov
lea
addl
push
call
and
mov
mov
jmp
test
mov
jbe
mov
push
push
lret
enter
int3
sbb
fmuls
push
das
push
adc
sarb
push
adc
mov
inc
jae
xchg
into
fs
in
push
jmp
arpl
fimuls
mov
adc
cmp
lds
stos
call
stos
jo
int
xor
push
xor
scas
fidivl
out
jg
xor
sub
jge
xchg
aaa
dec
sahf
add
mov
pop
inc
sbb
or
jnp
shll
arpl
cmovb
dec
cmp
fnstsw
jmp
push
mov
orl
imulb
call
xchg
in
clc
ja
sbb
dec
arpl
mov
repnz
scas
adc
daa
sbb
push
cmpl
inc
xor
and
jnp
push
fwait
pop
push
mov
cmpsb
popf
outsl
cmp
stos
jne
cmp
push
jns
in
mov
stc
sub
cmp
rcll
sbb
sub
je
gs
sub
xchg
mov
aaa
dec
nop
cli
test
jg
jae
cmp
add
xchg
popa
lods
pusha
dec
sub
imul
aam
cli
inc
jns
cs
pop
movsl
cli
xor
or
cld
orl
and
xor
ficomps
inc
push
stos
mov
stos
das
sbb
jae
inc
movsb
jnp
jne
adc
xchg
lods
add
outsl
dec
cmp
aam
mov
push
or
insb
add
pop
test
lcall
decl
push
lds
xchg
inc
dec
mov
stc
jg
popa
ljmp
cmpsb
repz
xor
push
pop
adc
aam
adc
push
add
pushf
into
or
cmc
xchg
aad
or
ja
dec
mov
jbe
orl
mov
mov
add
add
cmpl
mov
mov
jmp
movl
movl
ja
push
call
add
add
dec
orl
addl
adc
and
cmpl
notl
mov
movl
jmp
movl
je
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
sub
xor
xor
mov
xorl
div
cmpl
movzwl
movl
jmp
mov
jbe
push
push
push
pushl
call
adc
movl
orl
sbb
adcl
xor
mov
mov
sbb
add
xorl
jmp
pop
and
and
cmpsb
js
adc
push
adc
adc
in
fwait
loopne
and
enter
stos
inc
stos
sub
imul
inc
pop
jb
daa
aaa
pop
or
fnstcw
std
push
mov
fstpt
or
fmuls
cmp
insb
ljmp
cli
pop
xchg
push
sbb
lods
aam
scas
arpl
ficoml
js
shr
test
dec
add
repnz
pop
jg
add
outsl
or
dec
stc
cmpsl
repz
and
ljmp
xchg
mov
jb
add
inc
and
mov
pop
in
mov
imul
cmp
test
cmp
daa
ljmp
cwtl
cmp
loop
xchg
push
pushl
sub
pop
pop
aas
out
inc
lock
inc
bound
cmpsb
cmpsb
call
jbe
pushf
es
jp
dec
imul
jne
lods
push
aas
cmpsb
push
adc
out
call
jb
daa
lret
dec
cmpsb
xchg
mov
fwait
popa
lret
jno
out
popf
push
imul
and
mov
adc
idivb
or
fbld
cmpsl
loop
jg
scas
pop
inc
push
pushl
ljmp
ljmp
cld
jmp
inc
sti
popf
cmpsl
imul
dec
mov
cli
inc
pop
inc
jns
clc
es
mov
mov
fsubp
imul
add
mov
jl
cmp
imul
push
addr16
cltd
addr16
stc
adc
mov
sbb
ret
push
repz
sbb
mov
fisttps
adc
mov
repnz
dec
out
ret
shll
mov
xchg
xor
outsb
jg
mov
xor
rorb
mov
push
subl
imul
adc
movsl
das
addl
test
pushf
jno
out
ds
pop
push
adc
in
xorb
pop
jb
xor
and
call
xchg
mov
neg
movl
movl
movl
movl
adc
movl
or
movl
xor
movl
movl
xor
add
sbb
mov
movl
cmpl
movl
not
jmp
not
jbe
push
push
call
xorl
or
subl
add
adc
sub
addl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
call
mov
or
xor
sbbl
neg
mov
or
movl
movl
add
mov
cmpl
movl
mov
jmp
movl
mov
jae
push
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
add
mov
movzbl
or
and
movzbl
sub
mov
sub
sub
jmp
xor
es
and
jmp
js
and
leave
ret
enter
popa
sub
fsubs
fdivs
xor
enter
fdivs
imul
cmpsl
sbb
mov
cmpsb
xchg
lock
xchg
ret
add
and
pop
pop
mov
aas
in
daa
jp
out
push
pushf
pop
jbe
jge
js
cmpsl
loop
sbb
insb
sbb
sub
xchg
jbe
push
mov
ja
out
ds
in
fsubrs
push
out
loop
jmp
adc
mov
ss
lods
add
sbb
xchg
push
imul
aaa
ja
das
daa
lock
call
pop
loopne
cs
xor
andb
clc
out
pusha
fs
into
dec
sbb
push
sub
inc
sub
daa
inc
sub
aas
or
or
cltd
cmp
aas
insl
shr
inc
xor
arpl
scas
mov
pop
je
sub
mov
jecxz
adc
fisubl
add
jle
idivb
mov
enter
mov
cmpsb
push
mov
cwtl
cwtl
sub
les
ss
mov
aas
sub
jmp
or
movsl
jle
loope
sarl
fnstenv
xor
jecxz
cwtl
cli
test
movsb
mov
push
addb
mov
out
push
push
push
mov
outsb
jecxz
ja
sub
inc
loope
insl
and
int
test
mov
sbb
push
or
test
dec
iret
jl
cpuid
dec
jmp
pusha
cmp
mov
fsts
sub
mov
adc
and
inc
arpl
cld
jbe
cwtl
adc
out
fbstp
xor
sbb
scas
lret
outsl
xor
push
xchg
push
out
jnp
cmpsl
adc
sub
sbbb
std
pusha
ds
adc
push
push
push
jg
xor
fs
xchg
out
adcb
sub
dec
adc
push
add
jp
ficoms
jae
sbb
or
lods
sub
add
add
mov
mov
movl
jmp
movl
jle
push
call
and
subl
adcl
movzwl
adc
xor
sub
cmpl
movl
mov
mov
movl
jmp
movl
jb
pushl
push
push
call
sub
and
adc
adc
imul
xor
jmp
nop
push
push
sub
sbb
jle
pop
dec
mov
enter
loopne
ds
sbb
jno
lahf
lahf
ljmp
xchg
decl
jno
cld
rcrb
xor
sahf
sbb
cmc
mov
lock
push
xor
sbb
push
lret
jg
jns
lcall
cmp
test
aam
lahf
xchg
sbb
add
mov
in
inc
jl
movsl
cltd
mov
lods
das
popf
xchg
fwait
cli
sbb
mov
xchg
gs
pop
sub
fwait
outsl
pop
mov
insl
js
xchg
in
push
insb
es
addl
and
jecxz
jne
arpl
push
lret
and
mov
popa
xor
inc
mov
outsb
push
in
gs
mov
iret
notl
mov
je
pop
iret
mov
and
js
xor
cwtl
xchg
cli
js
shll
negb
dec
add
add
icebp
pushf
jecxz
jnp
out
fiadds
jo
xchg
jmp
sbb
add
das
cmpsb
and
addb
jg
pop
pop
fwait
pushf
je
xchg
pop
das
pop
dec
pop
addl
roll
push
nop
sub
ud1
sub
rorb
fdivrs
sbb
mov
mov
dec
cmpsb
pop
lret
and
mov
mov
les
cmpl
inc
jno
or
or
stos
sbb
cs
push
imul
aam
push
push
mov
nop
loop
ss
dec
dec
add
mov
dec
jnp
test
out
add
adc
mov
mov
fmul
add
push
push
sub
fdivl
jmp
adc
mov
scas
sbb
and
sbb
mov
rclb
jo
xor
incl
dec
stos
mov
inc
adc
mov
in
jno
repnz
sub
add
fbstp
movsl
push
push
sub
mov
lods
ss
movsl
in
rcr
jns
push
rep
and
test
and
dec
gs
test
pusha
mov
add
lea
mov
and
mov
cmpl
notl
not
jmp
movl
je
push
call
movzbl
adc
mov
sbb
sbb
xor
subl
mov
mov
sub
or
or
mov
jmp
loop
out
cmpsl
inc
sbb
inc
mov
push
push
mov
adc
inc
mov
and
pop
aaa
fnsave
addr16
stos
aad
push
es
and
fwait
std
push
mov
push
daa
out
dec
jns
pop
adc
jecxz
and
pop
dec
std
pushf
jl
sbb
lcall
dec
mov
xchg
adc
std
stos
mov
mov
and
push
test
test
cmp
fs
or
xor
mov
out
push
xchg
ljmp
pop
push
add
mov
xchg
adc
sub
out
movsl
aaa
roll
int3
call
rorl
inc
push
cmp
add
sub
pop
jmp
test
in
cmp
pop
add
in
cmp
ficoms
enter
xchg
addl
lret
sti
mov
or
push
sti
fistpll
int
iret
popa
lret
mov
test
mov
in
jge
sub
xchg
xlat
mov
sbb
xchg
or
mov
xor
out
xlat
cmpl
inc
push
xchg
imul
mov
std
sbb
push
cmpsl
xor
imul
sarl
rcll
cmp
divl
in
pop
scas
jp
push
leave
xor
mov
xor
aaa
imul
or
imul
jl
mov
cmp
mov
stos
in
aas
cmp
ss
sahf
aam
lods
add
lock
rclb
shr
or
outsl
call
mov
and
cmpsl
push
inc
out
rol
xchg
push
add
push
aam
outsb
sahf
fdivr
pop
dec
add
ret
test
xor
cwtl
and
xlat
pop
fmull
inc
pop
enter
and
add
inc
and
mov
popf
xchg
data16
jnp
mov
stc
dec
out
test
jp
shrl
loopne
cmp
mov
and
addr16
pusha
int3
fsubrl
push
lock
xor
or
add
xor
or
mov
sub
sub
mov
adc
lea
andl
and
movzbl
add
mov
mov
sub
add
mov
movl
adc
movl
cmpl
mov
notl
jmp
mov
jg
push
push
call
sbb
or
or
add
inc
sub
subl
movl
andl
movl
mov
cmpl
movl
movzwl
mov
jmp
mov
jge
pushl
pushl
call
add
xor
xor
and
and
movl
sbb
mov
mov
adcl
xor
andl
xor
xorl
mov
call
mov
mov
decl
mov
addl
mov
addl
xor
xor
adcl
mov
subl
call
decl
or
dec
or
add
mov
sbb
mov
xorl
xor
xor
mov
call
cmpl
mov
movl
mov
mov
jmp
mov
ja
pushl
push
push
push
push
call
subl
mov
or
or
and
mov
xor
or
mov
mov
decl
mov
add
mov
xor
andl
xor
subl
mov
cmpl
movl
movl
mov
jmp
mov
movzwl
jne
push
push
pushl
push
pushl
push
call
andl
subl
addl
subl
sbbl
subl
movl
mov
sbb
mov
notl
mov
mov
addl
call
adc
mov
adcl
or
sbb
mov
addl
or
incl
push
sbbl
push
sbbl
push
andl
push
call
mov
cmp
jne
sub
mov
mov
subl
xor
andl
xor
andl
mov
movl
call
sbb
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
inc
adc
cmp
pop
pusha
js
inc
cwtl
lods
out
adc
adc
mov
xor
daa
lds
xchg
stos
mov
rclb
sub
sti
scas
test
outsb
jne
insl
dec
and
pusha
in
sbb
jg
pusha
popa
ss
push
sub
push
mov
pop
sbbl
jge
int
push
and
xchg
cli
nop
fnstenv
int3
in
cmp
cmpsl
mov
arpl
dec
mov
mov
imul
out
push
push
xlat
test
add
add
and
stos
fsin
pop
add
divl
mov
push
insl
repnz
xchg
cmp
inc
bound
mov
or
or
inc
xor
or
rorl
outsb
into
outsl
arpl
pushf
fisubrl
int
mov
pop
daa
mov
out
mov
pop
scas
outsb
or
or
dec
icebp
ss
push
test
fbstp
fucomip
cltd
call
and
stc
add
lods
loop
popf
or
or
xchg
cld
mov
mov
cmp
mov
in
pushf
ds
pop
mov
dec
fisttpll
negl
stc
push
add
add
mov
rol
icebp
mov
aaa
js
fistl
das
sub
and
out
adc
cmp
mov
pop
adc
or
insl
movsl
ret
xor
mov
outsb
jno
inc
call
lea
add
std
cli
xchg
jmp
sub
sub
or
fdivl
mov
aad
test
add
call
push
push
mov
test
add
inc
inc
ret
loopne
outsb
mov
jnp
xor
sbb
mov
inc
popa
and
push
aaa
jle
cmp
and
repz
stos
pusha
and
ret
mov
mov
jno
cmp
test
mov
fnsave
shl
mov
xor
scas
jg
ja
sub
mov
pushf
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
jmp
leave
out
loope
pop
sub
sub
lcall
adc
sarl
sub
into
loope
xor
mov
add
dec
hlt
push
xchg
push
aad
sbb
or
sbb
mov
outsl
pop
dec
and
mov
mov
mov
sub
call
call
nop
xchg
js
cld
gs
adc
fildl
pop
out
pop
or
and
fwait
cmc
incb
in
push
and
dec
cwtl
sbb
pushf
fptan
xchg
lcall
and
lock
jne
arpl
cltd
ret
lret
shr
aad
push
pop
mov
loopne
mov
jge
mov
cmp
pop
and
lret
pop
test
inc
pop
jmp
cmp
divb
push
cli
dec
fs
arpl
test
out
jg
daa
test
mov
mov
int
cmpsb
jae
mov
or
mov
in
xchg
pop
cs
data16
sub
int
xor
add
insl
sbb
sub
pop
pop
test
add
xor
adc
repz
out
xor
fwait
pusha
sbb
push
push
push
fmuls
mov
fs
faddl
mov
sbb
hlt
xchg
cmp
ds
fndisi(8087
shlb
stos
aad
out
popa
fsubl
xchg
retw
sahf
sub
popa
scas
add
mov
pop
verw
dec
or
dec
mov
rorb
push
orl
add
mov
or
mov
cmp
sub
sbb
repnz
and
xchg
sub
push
nop
push
pop
cmc
mov
dec
cmpsl
sub
push
cmp
dec
pushf
mov
pushaw
push
fdivrs
pop
icebp
adc
cwtl
push
stc
inc
or
out
xlat
jmp
add
popa
scas
push
sbb
lds
bound
xor
shl
out
aad
jecxz
lds
xchg
cmp
xchg
das
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
jmp
mov
popa
sahf
sbb
lods
insb
and
test
adc
movlps
and
jl
add
cmp
xlat
cli
jmp
or
inc
loopne
xlat
mov
add
push
int
xchg
or
jmp
cld
mov
out
xchg
test
adc
sub
stos
adc
inc
sahf
or
adc
mov
jno
clc
mov
into
xlat
dec
lahf
mov
mov
decl
js
sub
adc
mov
xchg
or
arpl
push
inc
jb
and
push
add
cmp
in
inc
adc
dec
inc
mov
aaa
js
mov
jecxz
dec
mov
push
mov
or
rcl
add
add
add
mov
inc
sub
jns
hlt
ret
or
out
scas
jo
push
mov
sbb
sahf
mov
dec
outsb
jp
negb
mov
add
pop
mov
jae
adc
scas
sub
mov
adc
add
mov
push
jmp
cmpsl
mov
pop
iret
xchg
out
mov
mov
jg
ljmp
add
lret
mov
sbb
xorb
daa
pop
push
jae
jbe
sbb
cmpsl
cmp
jb
cltd
lods
mov
lahf
inc
es
dec
out
int3
sbb
and
or
fistpll
lahf
outsl
adc
jbe
pop
cli
or
cmpl
stos
cmp
jecxz
stos
ljmpw
lock
pop
inc
mov
in
out
mov
cmpb
pop
jo
daa
fbstp
sbb
mov
in
lret
push
push
push
mov
jp
xor
mov
pop
leave
ljmp
pop
push
jmp
das
stos
es
jmp
xor
mov
nop
pop
push
sbbl
inc
and
mov
loop
testb
xchg
push
mov
pop
mov
in
lahf
push
mov
inc
cs
sub
decl
decl
decl
incl
lret
fmuls
aam
decl
sar
pushl
add
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
jmp
add
xor
and
aas
loope
xor
js
cmpsb
ss
add
adc
and
adc
divb
int3
sti
icebp
push
vmovaps
xchg
call
addr16
xor
movups
stos
and
clc
inc
mov
push
lock
bound
push
bound
pusha
stc
adc
aas
add
into
jb
negb
sti
jg
cmp
rorb
mov
jmp
push
sub
and
push
cli
out
jbe
xchg
and
cltd
mov
add
mov
popf
dec
cltd
fld
inc
jbe
mov
aam
push
sti
sbb
popf
jno
out
mov
int
pop
pusha
iret
sub
hlt
xchg
xchg
mov
cs
in
pop
sbb
push
jmp
xchg
mov
ret
fsub
negb
jle
fnstsw
cmpsl
adc
popf
orl
or
stos
xor
pop
pusha
in
orb
stos
push
adc
leave
repz
arpl
lods
aas
iret
jl
cwtl
mov
pushf
mov
sub
out
sub
mov
adc
int
lret
pop
loop
jl
xchg
dec
test
add
cmp
sti
cmc
dec
out
inc
pusha
push
ja
push
and
nop
in
jbe
dec
daa
fsubr
lretw
stos
lcall
mov
stos
and
jnp
test
mov
jbe
inc
adc
or
loopne
loopne
sahf
ds
push
push
cwtl
push
sub
in
xor
push
loop
jp
daa
pop
cld
mov
imul
xor
sub
jmp
rol
repz
sbb
and
outsb
adc
movsl
ja
stos
and
xchg
cmp
mov
pop
mov
out
xchg
mov
ja
dec
fdivr
cmc
loope
pop
cwtl
adc
enter
pushf
jle
leave
dec
decb
mov
lock
fnstcw
xchg
lcall
and
call
ljmp
out
dec
add
les
pop
sbb
xchg
iret
out
mov
inc
jl
fs
enter
pushl
mov
mov
pushf
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
jmp
insl
xor
jb
push
sub
jg
stos
mov
adc
adc
subl
rclb
mov
std
pop
bswap
jo
add
lret
lock
dec
cmpsb
sbb
test
cwtl
lret
sub
mov
std
lret
and
lret
clc
sub
pusha
cmc
cmp
loopne
push
in
xchg
hlt
je
iret
stos
mov
pop
je
ljmp
popf
inc
push
pop
adc
xor
insb
adc
addr16
jp
adc
mov
faddl
inc
daa
loopne
dec
stc
inc
in
les
push
pop
das
mov
push
xor
sbb
jg
pop
adc
add
dec
cmp
scas
dec
push
call
fldt
lods
xchg
dec
or
jae
stos
movsb
out
sub
push
ja
fs
sub
repz
out
push
push
jmp
adc
push
nop
mov
fidivrl
out
bnd
sbb
dec
dec
aaa
leave
mov
xor
dec
lret
out
call
js
loope
jne
sahf
push
scas
ja
or
into
pop
adc
mov
fbstp
js
sti
lcall
fs
imul
out
bound
xchg
jns
pop
incb
subl
sbb
adc
mov
adc
pop
fwait
leave
sbb
sub
js
push
gs
mov
insb
fadd
das
lret
xlat
out
mov
fcmovnu
jmp
sub
mov
add
gs
cmp
mov
sahf
adc
push
sub
cmpsb
aas
inc
xor
out
in
fdivp
lock
mov
or
arpl
shrb
faddp
and
adc
in
enter
xchg
push
icebp
notl
mov
out
addr16
mov
ja
adc
jmp
sti
xor
lahf
cmp
fcompl
jecxz
mov
push
inc
mov
mov
pop
adc
repz
daa
add
xlat
push
cmp
and
decl
test
mov
pushl
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
jmp
pop
cli
xchg
ret
xchg
lods
imul
xor
dec
push
pop
push
adc
mov
or
into
sub
inc
and
xor
ja
fstl
clc
jg
fdivs
dec
xchg
mov
lea
call
pushf
cli
mov
inc
ljmp
add
cmp
in
jge
pushf
inc
or
adc
and
dec
add
mov
push
or
adc
adc
negb
aad
jmp
call
or
sub
sti
and
neg
addr16
and
lods
scas
mov
iret
popf
fucomip
dec
in
lock
push
pop
lods
jnp
or
mov
push
stc
adc
inc
inc
insb
mov
jne
int
cmp
pop
inc
cld
insl
outsb
xor
shl
sbb
dec
and
push
push
adc
aam
enter
or
and
dec
dec
xchg
ljmp
adc
out
loopne
je
cmc
dec
divb
fwait
sahf
in
rorb
xor
mov
xchg
cmp
outsl
lret
sahf
popf
popf
fbstp
shrl
xor
cmp
sar
lahf
stos
pop
dec
pop
pop
sahf
and
lahf
or
and
test
mov
lds
pop
inc
test
add
sub
ja
push
out
or
maxps
mov
test
fwait
aad
jmp
jno
jbe
mov
jecxz
lds
xchg
les
jmp
mov
pop
sbb
jno
scas
adc
sub
xlat
jle
aas
jecxz
sarl
mov
cmpsb
xor
in
mov
dec
pop
xor
and
mov
rcrb
fwait
lret
incb
into
rcrl
movsb
jge
scas
dec
push
loopne
mov
rcll
addr16
mul
icebp
js
lods
push
rorl
pushf
std
xorl
leave
jmp
inc
pushf
out
clc
shlb
cld
dec
pop
pop
mov
cmp
mov
jg
adc
leave
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
jmp
stos
cmpl
and
sahf
sarb
xor
lods
sbb
movlps
das
pop
or
push
sti
mov
cs
outsl
add
push
push
mov
push
cmp
push
adc
sub
adc
popf
fbstp
cmpsb
cmc
ret
inc
pop
sbb
or
out
jg
push
jle
jns
mov
inc
loopne
sahf
or
stos
ret
incl
and
adc
push
addl
scas
nop
cwtl
xor
jae
xor
dec
int
popl
xchg
push
sbb
ljmp
xor
or
fldcw
mov
jle
mov
repz
jg
gs
mov
push
add
cli
into
jno
adc
dec
movsb
mov
sub
pop
lret
ret
mov
sbb
in
xchg
pop
push
fnstcw
in
les
cmp
sub
mov
xor
add
js
sbb
push
pop
add
sbb
xor
or
mov
or
inc
arpl
sub
mov
mov
push
push
xchg
leave
add
shll
cwtl
pop
jecxz
sub
mov
xchg
cli
cmpsb
out
jmp
inc
addl
addr16
fcmovbe
fldl
add
imul
popa
adc
aam
in
pop
in
int3
fwait
mov
add
ret
fisubrl
pop
testb
or
adc
out
mov
mov
cmp
dec
push
mov
testb
mov
adc
jecxz
sub
sub
fwait
cmp
push
out
fsts
inc
je
add
or
pop
mov
les
shrb
cmpsb
imul
movsb
xor
sbb
outsl
add
mov
jmp
hlt
pop
scas
xchg
adc
stc
in
fldl
cmc
test
xor
push
mov
iret
pop
cmc
xchg
idiv
add
push
sub
enter
out
popf
insb
jle
fcomps
adc
imul
scas
fimuls
push
les
add
decl
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
jmp
and
lret
sbbl
js
orl
adc
movlps
xchg
mov
ljmp
pop
leave
imul
mov
cmpsl
and
xchg
push
pop
loop
in
sub
and
enter
mov
scas
xor
aad
pop
repnz
xlat
mov
out
xchg
scas
sub
fucom
fsts
push
movsl
push
fcoml
or
movsl
cmp
sti
ljmp
addr16
cmp
cmpsb
push
lret
push
outsb
mov
sbb
cmp
mov
dec
sub
xchg
add
stos
mov
fwait
and
xchg
aaa
fmuls
sub
mov
adc
dec
ret
aam
ficoms
push
pop
notl
add
dec
adc
sbb
shrb
std
addr16
xchg
loopne
lahf
scas
dec
jnp
sbb
pop
cld
push
dec
jl
scas
dec
xor
ficomps
xorl
sti
jae
cmc
in
call
jo
into
test
dec
sbb
xchg
push
cmpl
fldt
mov
pop
dec
cld
jecxz
repnz
andl
pop
dec
fldl
sub
je
roll
sbb
call
inc
cmpsl
adc
cli
fimull
sub
mov
iret
mov
cmc
inc
fisttpll
pop
mov
pcmpeqw
cmpsl
es
adc
pusha
xor
sahf
xor
cmp
add
mov
mov
add
out
add
jno
push
push
jp
imul
popa
test
xor
add
lds
cmp
and
cmp
pop
mov
fs
sbb
cmp
xor
call
lret
repnz
jecxz
sub
icebp
hlt
inc
cmc
daa
push
mov
pusha
faddl
stos
int3
pcmpeqw
cmp
xchg
daa
stos
xchg
arpl
push
frstor
inc
repnz
repnz
pop
dec
and
hlt
out
mov
mov
outsl
gs
jp
scas
or
movl
movl
movl
movl
lea
mov
mov
movzwl
jmp
pop
pop
lods
mov
and
pop
mov
add
mov
enter
pusha
cltd
psubsb
out
orb
outsb
pop
dec
pop
push
or
pop
daa
aad
scas
pusha
mov
jg
lahf
fs
adc
movsl
lret
jbe
jg
fisubrl
fiadds
add
iret
jns
fldt
adc
add
and
ds
gs
fcmovbe
lods
lods
adc
cmpsb
iret
out
push
je
mov
test
cmp
push
xchg
movsl
and
xchg
xor
xorl
shlb
xchg
loope
in
les
mov
fnsave
stc
push
jae
jg
mov
imul
adc
xor
adc
stos
inc
mov
enter
mov
into
fmuls
pop
rcrb
fbld
repnz
mov
sub
sub
lock
jecxz
stc
fdiv
cmc
pusha
jne
fstp
ja
out
rcll
test
addr16
and
or
dec
fldcw
shlb
xchg
mov
rclb
inc
mov
hlt
call
xlat
enter
mov
fcoms
aad
push
cmp
jae
adc
push
cmp
mov
inc
add
sbb
test
loop
movsl
add
in
das
cwtl
mov
cmp
jg
int3
nop
jle
sub
cmpsb
jns
cwtl
jmp
repz
mov
jo
pushf
arpl
movsl
cmc
cmp
push
iret
pop
stos
fistpl
xor
insl
inc
cmpsl
pop
cmp
and
insl
xchg
mulb
sti
cmp
ffree
and
inc
insl
lds
mov
and
aad
clc
cmpsb
add
jns
xchg
add
into
sbb
jo
in
ret
decl
mov
sbb
divl
pop
bound
sahf
pop
mull
mov
jo
pop
mov
les
mov
add
mov
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
jmp
dec
sbb
sbb
sbb
sbb
scas
sbb
and
mov
adc
ds
out
or
jo
inc
or
loop
ja
arpl
fldl
sbb
nop
clc
pop
adc
les
jne
mov
fmul
in
ficomps
inc
adc
outsl
cmpb
or
pop
mov
mov
rclb
out
scas
xor
loop
add
leave
cli
mov
cmp
dec
mov
sub
lahf
xchg
pop
pop
scas
xchg
jb
pop
jns
mov
pop
outsb
stos
pop
sti
imul
add
int3
test
sbb
sub
or
movsb
shrl
adc
pusha
hlt
clc
xchg
add
sbb
xchg
pushf
mov
inc
mov
mov
cs
jp
mov
add
pop
or
mov
or
mov
or
jae
pop
bndstx
and
lds
repnz
stos
pushf
loopne
add
in
mov
sbb
cltd
dec
repz
ret
and
js
loopne
mov
dec
aad
or
imul
and
or
movsb
movsl
xchg
ds
and
imul
jbe
and
fcmovne
add
int
ss
push
xor
cld
mov
or
loop
fs
pop
add
add
sbb
dec
add
loopne
pop
rorl
dec
jnp
aas
jmp
loop
inc
pop
or
and
mov
adc
fcom
hlt
nop
ja
or
jmp
push
mov
adc
sub
addr16
xor
fsubl
push
mov
dec
adc
and
or
xchg
shrb
push
in
mov
out
stc
popf
test
fists
or
out
push
cmpsb
sub
sub
inc
faddl
xor
dec
hlt
bswap
aas
xchg
leave
loopne
or
mov
mov
lret
push
or
xor
data16
and
or
mov
pop
mov
cmp
xor
dec
jne
xor
pop
outsl
and
jl
arpl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
jmp
push
pop
inc
ficomps
clc
les
out
mov
adc
inc
call
lods
loopne
scas
sbb
xchg
mov
in
repz
mov
mov
lds
fisttpl
or
inc
jp
xor
add
xchg
mulb
mov
jb
cmpsl
sub
jo
adc
jmp
mov
lret
outsb
fxch
pop
cli
fidivrs
lods
xlat
jo
and
decb
sarl
mov
decl
pop
inc
sahf
xor
adc
into
cmp
push
cli
repnz
stos
pop
mov
or
xchg
add
adc
jmp
ss
test
or
dec
mov
mov
sarb
xchg
addr16
jns
or
out
cwtl
xchg
into
mov
sub
xchg
sub
rcr
mov
sbb
in
sti
dec
adc
inc
sub
pop
adc
aaa
mov
ret
jmp
cmpsb
lret
cmp
mov
in
cmp
or
sub
and
dec
mov
pop
pop
out
or
nop
cmp
xorb
cmp
imul
mov
fldz
push
xor
jne
adc
mov
mov
xchg
mov
jbe
daa
cld
cli
fwait
loop
aas
push
call
out
xor
decb
lret
ss
rol
mov
insb
push
sub
cmp
sub
xor
mov
andb
sbb
icebp
stos
repz
cmp
dec
push
pop
mov
ficoms
push
pop
sbb
lret
lock
out
pop
popa
jmp
xlat
pop
sahf
and
xor
cmpsb
mov
sub
pop
sbb
xchg
or
mov
xchg
pusha
gs
mov
sub
mov
jae
push
les
punpckhwd
push
adc
push
push
rolb
or
in
pop
outsb
jg
dec
notl
outsl
out
jns
es
sbb
inc
or
cli
mov
or
add
rolb
je
imul
or
add
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
out
add
popa
cmpsl
aad
stos
mov
xchg
adc
mov
out
rcr
stos
push
mov
jg
roll
xor
cmp
mov
xchg
cmp
or
pop
xor
cs
test
daa
daa
rcl
xor
movsb
es
vmovntps
sti
fwait
inc
push
sahf
popa
das
into
fstpl
xor
sub
cld
xchg
jge
sub
dec
and
clc
jno
lods
les
cltd
lcall
jb
outsl
in
cltd
jno
lds
into
in
pop
insl
mov
push
pop
sub
bound
scas
sub
sbb
data16
sti
into
and
mov
add
sub
rcll
popf
and
lahf
inc
in
into
push
adc
fwait
xor
test
addr16
lds
dec
push
mov
fucomip
inc
and
push
adc
adc
sbb
sbb
inc
enter
fidivl
mov
sub
fwait
ror
push
inc
adcl
jae
clc
or
jle
test
mov
adc
adc
pop
jno
push
popf
push
cmp
or
pop
and
xchg
cli
push
or
mov
sbb
dec
nop
in
in
inc
cli
mov
enter
fldcw
test
call
adc
insb
stos
mov
jb
in
sar
jge,pn
inc
or
inc
jl
sub
inc
mov
sbb
shlb
sahf
sbb
mov
les
cmpsb
sub
repnz
mov
add
loop
mov
push
stos
lock
sbb
cmp
pop
ss
data16
aaa
mov
jno
aad
addr16
push
mov
hlt
movsl
xor
or
push
or
sahf
add
fsubs
pop
push
push
ljmp
sbb
sti
mov
xchg
out
aas
mov
pop
mov
jg
mov
mov
and
or
and
decl
pushl
xor
mov
call
or
jmp
mov
or
mov
push
push
sarb
adcb
mov
sbb
mov
inc
or
add
mov
xor
xchg
xchg
in
mov
sbbl
inc
enter
sub
dec
cwtl
mov
iret
cmp
mov
in
test
mov
pop
fisubs
xchg
mov
push
push
iret
mov
adc
mov
imul
call
repz
push
int3
sbb
sahf
pop
adc
or
sbb
pusha
loope
inc
sti
rclb
push
dec
arpl
xchg
inc
jnp
int
movsl
insl
neg
in
nop
loope
loopne
sarl
sbb
xchg
cld
push
mov
mov
mov
lcall
add
in
test
cs
sbb
int3
sahf
idivb
mov
lea
jg
pop
sbb
add
popf
push
dec
fcoms
add
sbb
cmc
xor
mov
push
xchg
cmc
leave
jge
mov
shr
cs
lods
movl
test
jbe
adc
pop
pop
cli
inc
lods
push
decb
mov
mov
outsb
or
sti
insb
push
lods
mov
fiaddl
xchg
cld
sbb
push
sahf
aas
aad
imul
jp
xlat
arpl
test
push
pop
inc
gs
and
sahf
dec
into
lods
push
push
data16
cs
mov
lcall
cld
in
mov
addr16
cmp
mov
stos
add
xor
iret
pop
jnp
imul
adc
inc
out
es
sbb
fmuls
and
ds
push
cmovl
lods
ret
adc
bound
fisttpl
mov
fnsave
sub
mov
jb
into
iret
inc
cmp
sbb
push
imul
stc
mov
mov
or
push
or
aas
js
sub
imul
in
fsubp
mov
mov
andl
xor
mov
push
shrl
in
add
mov
decl
decl
cmp
jmp
stos
js
pop
and
mov
les
adc
adc
cmpb
pop
adc
lcall
xor
jne
push
push
sahf
dec
rcrl
imul
sbb
push
fwait
push
push
test
inc
jo
xchg
xchg
mov
xor
inc
jmp
push
or
mov
fisttpll
fadd
fcompl
dec
xchg
pop
sbb
mov
lret
rcll
add
pop
push
sub
call
insb
and
mov
sbb
sahf
cs
cmpsb
mov
inc
mov
cltd
jecxz
cmp
push
sbb
lds
fildl
mov
adc
or
inc
fsts
inc
loop
jmp
sqrtps
test
loop
outsb
insb
mov
je
mov
inc
or
pop
xor
popa
shlb
push
xchg
mov
sub
adc
sbbl
dec
shrb
ja
push
test
fistl
stc
sub
in
in
add
out
ja
dec
jbe
cmc
fnstsw
insl
pop
cmc
dec
mov
js
jne
insb
cmp
dec
adc
push
movzwl
test
xchg
xchg
mov
pushf
mov
pop
mov
push
rcrb
and
cmp
jae
daa
mov
jl
pop
jl
cmp
test
mov
std
pop
icebp
fisttpl
pop
lahf
cmp
jmp
push
testl
rcrb
add
pop
push
jl
and
repz
addr16
nop
mov
rcrl
aaa
lea
jno
mov
mov
add
stos
jl
lcall
xlat
in
nop
push
push
pop
ret
scas
fldt
icebp
in
call
lock
xor
movsb
push
imul
jne
data16
popf
aaa
mov
repz
cmp
mov
popa
sub
dec
jmp
sub
repz
cwtl
add
add
add
cs
bound
or
and
cmp
pop
mov
arpl
inc
in
jnp
rorl
test
add
add
decl
decl
mov
addl
add
mov
sar
jmp
ds
in
mov
xchg
js
push
pop
lods
mov
movlps
pmaddwd
xor
js
insl
xchg
sub
xor
cmp
fists
das
lret
xchg
or
sub
and
sqrtps
push
mov
push
stc
cld
mov
popf
push
loopne
movb
push
int3
dec
pusha
sub
psrlw
shr
insl
xchg
les
adc
and
and
push
stc
xchg
frstor
mov
add
mov
pushf
adc
xchg
cmp
jnp
jl
in
pop
popf
adc
inc
ss
and
out
cmpsl
popa
mov
jp
mov
push
stos
mov
in
les
movsb
dec
icebp
bound
fdivr
in
xchg
push
add
xchg
xchg
and
lds
sbb
jno
cmp
out
inc
stc
arpl
adc
in
or
lds
dec
test
dec
mov
jo
dec
hlt
rcll
fnstenv
xchg
cwtl
and
jo
ret
arpl
adc
push
lods
std
fwait
cwtl
xchg
or
adc
mov
daa
xor
dec
push
pop
out
xor
xor
rorb
fwait
or
stos
xchg
add
lret
divl
or
adc
mov
xor
cmpsl
mov
cwtl
cmp
cs
cmp
inc
pop
insl
shrb
jle
lcall
mov
sub
pop
mov
inc
add
adcl
shll
sbb
lods
jmp
xchg
dec
mov
sti
arpl
push
jp
movsl
dec
aad
add
roll
sub
pavgw
aad
in
shlb
xor
dec
cltd
inc
stc
shl
ja
pop
mov
js
cwtl
and
pop
imul
inc
push
xorl
ret
out
jl,pn
cmp
lods
and
sbb
xchg
popf
add
cmpsl
in
imul
fsubrp
jne
cmpsl
add
xor
aaa
mov
je
push
mov
fimull
xchg
jmp
xchg
xchg
nop
pop
clc
repz
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
jmp
jns,pn
xchg
pop
subl
js
pop
or
adc
movlps
dec
cmp
out
dec
add
lcall
insl
jbe
cld
lds
ret
push
sbb
pop
jl
xchg
add
mov
fstps
push
into
xbegin
jp
cli
cmp
mov
sbb
mov
pop
out
mov
test
aam
sbb
inc
sbb
push
inc
sub
imul
aad
fwait
inc
xchg
sub
ret
cmpsb
sub
push
mov
lret
pop
jno
aam
push
sub
cwtl
fistl
dec
test
xor
aad
adc
movsl
pop
cmp
shrb
adc
mov
or
ljmp
sbb
and
xor
jmp
adc
sbb
dec
loope
inc
lds
ljmp
mov
lcall
ds
push
sti
iret
rorb
test
and
mov
dec
hlt
ds
xchg
mov
imul
sahf
mov
push
jge
inc
dec
rcll
inc
mov
or
sub
int
xchg
dec
outsl
cmpsl
adc
inc
and
mov
imul
pop
xchg
and
rorb
mov
mov
js
cwtl
stos
add
push
sub
fsubs
out
or
mov
push
fwait
add
arpl
inc
add
repnz
subl
or
add
push
push
xchg
adc
loop
ss
sbb
ficoms
lcall
imul
add
hlt
push
gs
adc
or
push
cld
and
mov
xchg
mov
out
cmp
daa
into
sbb
jo
subb
jnp
and
movups
lea
dec
shrb
mov
movsl
out
jno
jmp
hlt
int3
mov
shlb
in
mov
movsb
push
or
mov
mov
imul
loope
jg
test
mov
and
sbb
adc
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
jmp
arpl
or
push
jb
data16
insb
adc
adc
repnz
cmc
bound
loop
fstl
outsb
xor
out
xchg
imul
pusha
addr16
ja
pop
call
push
and
xor
dec
sub
loop
adc
pop
sub
xor
jne
pop
in
push
push
std
jbe
add
shl
pop
push
adc
loope
shrl
ja
xchg
in
add
fldcw
out
mov
insb
mov
mov
xor
insl
dec
je
clc
mov
inc
or
mov
and
and
imul
push
mov
es
adc
loopne
inc
sub
cmp
sahf
ja
rorl
ret
inc
test
out
das
jno
insb
outsb
push
icebp
stos
lods
in
jmp
sar
ret
bound
push
xchg
jecxz
jns
stos
mov
mov
das
and
mov
imul
in
test
push
xor
stos
cwtl
add
mov
fcmovne
cmp
add
cmp
mov
ret
pushf
shlb
fisubs
jnp
cmp
lahf
xor
cwtl
das
mov
decl
divb
aam
pop
push
imul
pusha
gs
inc
mov
daa
xor
iret
xchg
cmp
mov
add
mov
mov
cli
lock
pop
and
push
loopne
dec
lods
mov
fmulp
ds
imul
shr
push
pop
shl
sub
pop
add
mov
ds
cli
xchg
mov
sbb
jns
iret
dec
or
bound
adc
add
outsb
and
cmpsb
lods
daa
sbb
xchg
push
lret
sub
daa
mov
rolb
pavgw
jb
icebp
cwtl
mov
movsl
addr16
push
stc
inc
movsb
fists
loopne
pop
adc
out
inc
pusha
test
sub
ficoml
fistps
and
setbe
and
dec
mov
loope
pop
xchg
pop
dec
fnstenv
das
mov
fs
dec
mov
fmuls
decl
pushl
xor
mov
call
or
or
movsbl
cmp
je
jmp
xorl
jns
sbb
pop
lods
lcall
adc
movlps
push
js
loopne
fucomp
icebp
pop
fucomi
and
scas
out
mulb
xchg
enter
add
clc
ds
fistpl
icebp
mov
pmaxub
add
push
xchg
inc
pop
and
mov
xchg
sbb
insl
rclb
xor
fadds
adc
jnp
xor
gs
mov
icebp
test
scas
ror
in
xchg
cmpsl
xlat
ror
int3
ds
push
xchg
mov
popa
push
orb
scas
pop
rclb
lret
mov
add
and
or
shl
aam
rorl
lret
out
mov
fcoms
inc
pop
add
xchg
sub
fsubrl
cli
fnstcw
mov
and
pop
testl
nop
inc
outsl
out
mov
and
pop
push
pop
test
cmpsl
adc
adc
xchg
cmpsl
int3
pop
mov
pop
or
mul
push
push
in
lods
imul
sub
xchg
aam
incb
lret
hlt
inc
pop
loopne
movsl
mov
sbb
dec
fistpl
int3
adc
roll
aaa
xor
push
imul
lcall
clc
inc
mov
mov
push
jae
mov
paddb
xor
add
dec
sarb
mov
popa
ss
mov
lret
dec
jp
pop
xor
inc
xchg
orb
sub
pop
mov
insl
dec
mov
packuswb
popa
inc
out
in
int3
out
aas
loope
int
loope
ja
pop
and
clts
mov
mov
xchg
inc
sbb
cmc
xchg
xor
into
lcall
ljmp
or
jbe
dec
mov
repnz
outsb
xchg
sbb
sbb
dec
jo
pop
mov
js
pop
push
or
mov
mov
in
sbb
daa
sarl
mov
add
test
push
xor
inc
push
mov
xchg
sbb
decl
mov
decl
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
jmp
adc
fldl
out
cli
pop
push
and
lea
enter
cmp
call
cmpsl
stos
mov
pop
xor
adc
mov
push
call
or
or
outsl
mov
pop
cltd
push
mov
jne
cmp
idivl
sub
mov
add
push
je
imulb
add
push
pop
sub
aas
ja
jne
fildl
add
sbb
cmp
adc
xor
cld
mov
xchg
popf
xchg
cld
pop
clc
in
inc
inc
xor
cmpsb
insb
rorl
out
lret
sub
mov
xor
js
adc
jp
leave
pop
stc
mov
sub
ret
repnz
call
cltd
xlat
out
lcall
lcall
xchg
mov
sbb
pop
cmc
imul
iret
arpl
mov
lock
stc
outsl
xchg
push
mov
push
xor
fcmovu
add
or
cld
adc
iret
negl
stc
lret
pop
cwtl
mov
movsl
into
and
cmp
notl
or
repnz
push
mov
mov
jbe
sub
cmp
rep
pop
mov
insl
aam
pop
cltd
or
adc
fisubs
mov
movb
or
cwtl
pop
aam
scas
loope
stos
xor
mov
adc
dec
outsl
xor
push
sub
pop
testl
sbb
cmp
xchg
dec
clc
xlat
xchg
roll
push
shll
and
mov
jg
stos
ret
cltd
leave
cmc
pushf
in
mov
add
bound
testb
dec
sbbl
mov
cmc
push
andl
push
add
stos
insl
nop
adc
mov
movsb
int3
rcrb
sbb
mov
fsts
ret
in
stc
inc
imul
pop
imul
inc
test
std
in
addr16
cwtl
mov
sub
dec
lcall
dec
dec
jnp
roll
cltd
and
or
push
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
jmp
out
in
in
mov
mov
inc
pusha
adc
adc
stos
jae
sbb
rcll
pop
xchg
adc
cmpb
addl
jo
dec
mov
dec
inc
es
scas
fisttpl
nop
inc
xchg
scas
add
rep
aas
pop
cmp
pop
jmp
cmc
das
mov
sahf
cmp
jnp
add
mov
mov
mov
fcomip
je
in
in
das
mov
cs
xchg
xchg
je
jmp
dec
push
es
daa
fcoml
gs
orl
inc
out
push
les
mov
jb
cmp
mov
pop
sbb
lret
adc
inc
pusha
aad
push
mov
sti
cmp
sbb
sahf
fsubr
xor
sub
xrelease
repnz
js
mov
jmp
sub
mov
pushf
mov
ret
flds
push
add
test
jno
sti
jg
add
mov
data16
hlt
mov
xchg
sub
jnp
aas
insl
in
push
lcall
dec
cmp
xor
ja
in
jecxz
and
mov
add
outsb
loope
bound
xchg
test
mov
popa
ret
push
incb
jp
xor
daa
or
fldenv
pop
mov
in
fistpl
cmpl
or
popa
jmp
sbb
mov
xor
sbb
hlt
cmp
cmp
lret
aaa
or
jb
inc
in
cmp
push
push
pop
dec
xchg
sbb
mov
mov
in
mov
cmp
arpl
test
cmpsl
push
mov
mov
loop
lcall
enter
or
inc
push
in
fisubl
fimull
jecxz
xchg
cmp
lahf
out
repz
mov
jecxz
mov
test
into
push
mov
mov
pop
jne
and
fistl
incl
add
add
mov
inc
test
add
add
inc
add
add
jbe
add
jnp
bound
ss
popf
sbb
enter
inc
push
imul
or
pop
inc
cs
icebp
pop
dec
mov
mov
jo
fnstenv
fcmovbe
mov
movsb
int3
push
add
inc
or
imul
and
cmpsl
ljmp
fucomi
iret
sbb
cmp
and
push
in
jge
rolb
cmpsl
pop
mov
outsb
sbb
ljmp
push
jne
ss
sbb
enter
push
loopne
fisubrl
fisubl
xlat
cltd
out
sbb
fnstcw
mov
in
push
xor
pop
add
in
push
and
mov
ret
xchg
in
mov
xchg
xor
jmp
ficompl
cmpsl
jbe
out
mov
aam
mov
mov
mov
daa
push
rcrl
xor
imul
sbb
add
mov
movsl
sti
mov
pop
je
insl
adc
and
shlb
cs
lds
addr16
sti
sarl
arpl
fists
cltd
sbb
jp
adc
imul
mov
ret
push
ds
push
enter
add
inc
test
test
add
bound
ljmp
fstps
xchg
jg
mov
scas
add
cmc
xlat
les
mov
and
mov
scas
es
dec
pop
mov
xchg
xor
ds
dec
js
push
aaa
mov
jl
or
mov
sahf
int
ds
test
cmp
xor
pop
pop
aam
mov
icebp
mov
cmp
inc
data16
mov
inc
into
push
sub
and
js
cmp
xlat
loop
ljmp
adc
adc
ret
vrcpps
and
imull
repz
fwait
js
sub
xchg
mov
test
or
mov
cmp
and
adc
xor
data16
pop
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
jmp
or
addl
leave
pop
pop
cwtl
cmp
pushf
mov
adc
adc
xor
loope
hlt
das
xchg
insb
lea
addr16
gs
add
std
fstpt
test
xchg
and
out
adc
mov
push
fimuls
jge
aas
pop
xor
xor
push
ja
mov
adc
xor
and
test
adc
or
or
push
cmpsb
cmpsl
push
inc
aam
and
fs
xchg
iret
scas
dec
out
jecxz
mov
jge
mov
mov
loopne
arpl
mov
mov
mov
xadd
daa
push
sub
mov
into
repnz
test
and
push
incb
mov
fucomip
inc
jno
fsubr
or
int
mov
mov
sub
out
adcb
fidivl
or
ficomps
leave
xor
into
cmpsl
xor
mov
aaa
ret
scas
and
subl
cmpsb
int3
je
push
sub
sbb
jns
inc
push
dec
add
fstps
add
xor
je
in
mov
mov
aaa
fadd
fbld
xor
loope
push
outsb
out
mov
dec
aas
jmp
xchg
dec
loop
push
stos
adcl
pop
inc
jmp
rcll
cmc
lea
stos
xchg
jnp
adc
cmp
ja
dec
insl
push
or
add
cli
mov
dec
stos
mov
push
mov
pusha
mov
fwait
enter
xorb
icebp
lds
push
adc
sub
xchg
aad
bound
xor
ljmp
mov
xor
test
xchg
xor
and
sub
pop
leave
sbb
inc
sbb
jo
dec
or
icebp
mov
jns
xchg
cwtl
add
out
dec
xchg
inc
mov
lret
out
iret
nop
push
int
dec
sbb
pop
nop
push
jl
shrl
loopne
cld
sub
mov
std
pop
movsb
test
dec
scas
out
enter
rcrb
pop
stc
stc
std
stos
int3
sti
mov
mov
scas
jle
mov
fnstcw
pop
jmp
cltd
cld
js
and
scas
cmpsb
mov
cmp
mov
push
xchg
ljmp
cmp
test
imul
and
mov
cmpsl
out
orb
xchg
mov
pop
pop
jne
into
ret
dec
xchg
xchg
fimull
inc
jg
xchg
in
sub
pop
adc
aaa
adc
scas
mov
sub
int3
dec
sahf
ljmp
fucom
mov
and
push
mov
xor
push
repnz
xor
imul
popf
sbb
xor
or
xchg
imul
pop
cmp
cs
repz
pop
add
rep
cmc
mov
add
xor
and
add
sub
and
and
lods
push
mov
or
movl
jne
mov
xor
mov
sbb
xor
movzbl
adc
div
xor
xor
sub
mov
mov
movzwl
sub
mov
xorl
div
mov
mov
movl
jmp
sbb
mov
xor
mov
mov
add
mov
adcl
shr
movl
rcr
shr
movl
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
movl
cmpl
je
add
jmp
fwait
mov
xchg
sbb
push
lods
push
adc
adc
cld
xor
and
js
pushf
je
and
push
arpl
push
test
pop
scas
test
lret
mov
repz
dec
daa
push
movsb
cli
cmp
sub
addb
in
lds
aas
iret
xchg
cmp
pop
in
adc
and
xchg
scas
xor
pop
aaa
and
mov
cld
add
out
jmp
mov
test
mov
inc
or
cmp
xchg
popf
dec
inc
iret
loopne
dec
addr16
std
mov
jne
fidivrl
fwait
mov
add
nop
or
es
pop
add
cmc
add
jne
ret
ror
jno
in
loopne
nop
ljmp
inc
loopne
dec
lods
aam
dec
mov
and
inc
xchg
jmp
push
jl
adc
movaps
mov
cmp
jmp
ja
mov
mov
or
lret
andb
popf
mov
xor
cmp
inc
mov
stos
cmp
iret
sar
mov
or
xchg
orl
mov
xchg
xor
xor
cmpsl
push
xchg
insb
jecxz
and
cmc
mov
jo
hlt
push
or
cmpsl
iret
inc
inc
inc
rcrb
push
ret
xor
movsb
ret
mov
mov
cld
pop
or
and
pop
or
enter
add
gs
or
outsb
mov
mov
mov
out
dec
push
test
leave
adc
adc
pop
and
fadd
jmp
cmp
fldl
mov
fstpt
es
mov
popa
dec
out
popf
cmpsb
jge
lahf
cmp
inc
mov
lods
mov
lret
cld
outsl
jne
mov
mov
call
push
xorl
not
jns
add
jae
jns
mov
lock
push
shl
test
cmp
inc
or
pop
data16
pop
sub
hlt
dec
dec
push
sub
and
xchg
arpl
push
ret
nop
mov
push
int
outsb
push
out
push
stos
sub
xor
iret
adc
pop
xchg
insb
lods
test
mov
je
clc
fsubs
mov
repz
out
stos
std
add
xor
mov
test
xchg
add
pop
sbb
and
test
push
add
fnstsw
push
dec
outsl
and
rorb
and
into
cmpsb
das
inc
adc
pop
popa
and
lods
test
daa
movq
int
mov
inc
jle
arpl
mov
mov
aad
movsl
push
push
and
adc
push
push
mov
sub
loope
fdivr
pop
sub
scas
pop
push
test
fbld
pop
mov
jns
cmp
imul
cwtl
insl
fcoml
dec
pop
loopne
rorb
stc
push
cld
pop
or
fstpl
pop
fsubrs
dec
jne
jns
xchg
xchg
popa
mov
xchg
mov
not
cmpsl
adc
push
mov
cld
fsub
scas
test
inc
popa
ds
cmp
xor
or
dec
movsb
mov
push
inc
fcompl
loope
shll
addr16
sub
data16
cmp
jp
dec
hlt
rcl
aas
and
mov
xchg
add
mul
aaa
mov
fs
push
rorb
lcall
add
cmp
add
leave
ret
movl
cmp
jae
movl
cmp
jae
sbbl
shld
shl
ret
mov
orl
xor
adcl
and
shl
ret
xor
xor
ret
