push
mov
sub
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
push
andl
xor
or
inc
mov
cmpl
ja
jmp
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
push
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
decl
add
add
mov
mov
xorl
mov
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xorl
mov
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
movl
mov
xor
xor
add
or
mov
adc
mov
xorl
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
push
orl
pop
andl
sub
dec
add
movl
adcl
mov
movl
orl
mov
xorl
mov
adc
mov
andl
mov
xor
mov
adcl
xor
add
addl
mov
andl
lea
mov
add
mov
xor
subl
add
mov
incl
lea
addl
push
sub
mov
andl
xor
add
push
and
mov
subl
push
andl
pushl
call
mov
add
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
or
movl
subl
mov
sbbl
mov
sub
lea
adc
mov
inc
movl
or
mov
mov
xor
xor
sub
sub
mov
xor
xor
sub
mov
sbbl
sub
mov
movl
mov
movl
mov
movl
cmp
movl
je
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
pushl
call
jmp
mov
adcl
xor
xor
orl
lea
mov
xor
mov
xor
xorl
div
mov
sub
mov
xor
addl
xor
sub
movl
cmp
movl
jne
mov
xor
mov
mov
addl
mov
orl
xor
addl
xor
orl
add
adcl
add
mov
cmp
jae
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
lea
adcl
mov
mov
xor
addl
add
lea
movl
mov
mov
cmp
movl
jbe
addl
movl
jmp
addl
sbbl
mov
xorl
xor
xorl
inc
incl
adcl
add
cmp
jb
movl
cmpl
je
cmpl
jl
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
jmp
mov
dec
and
adc
push
ret
in
addl
subl
es
cmp
js,pn
je
out
jo
jo
fsub
cld
insl
push
jb
bound
pusha
push
cmp
push
jle
lea
xor
ja
add
pop
lock
rol
lock
sub
xchg
xor
fs
flds
jo
sbb
lsl
and
jne
scas
sub
hlt
push
xor
and
test
mov
or
jecxz
imul
xchg
xor
int
rcll
push
adc
or
mov
shll
add
mov
pop
and
mov
repz
lret
scas
and
adc
add
and
mov
push
push
test
mov
leave
popf
call
xchg
cmc
int
daa
fimull
push
lcall
push
lods
push
add
in
jle
nop
sub
dec
mov
push
adc
movsb
xchg
outsl
dec
enter
ret
mov
sbb
inc
pop
xchg
arpl
pop
fdivl
pop
fimull
pop
inc
mov
addl
leave
cmp
fldl
clc
dec
add
fisubl
and
repnz
lret
dec
xorl
jo
adc
data16
push
push
jbe
addl
andl
dec
xor
das
cltd
xor
mov
aas
dec
xor
mov
call
in
jmp
mov
add
pop
add
adc
mov
dec
add
rcl
adc
cmp
cltd
dec
bound
sub
sti
shlb
movl
fs
lcall
arpl
into
dec
mov
lret
fwait
add
mov
sbb
sub
rolb
cmp
pop
and
inc
cli
cmc
xchg
mov
popa
xor
stos
xor
psubd
ret
sub
sbb
cmp
shlb
std
pop
in
xlat
fistpll
sbbl
jns
push
cmp
imul
ds
loope
imul
xor
sbb
or
popf
ror
push
ljmp
outsb
rorb
in
test
iret
ret
js
jae
int
lods
jl
xor
dec
out
insl
push
cmc
xchg
mov
mov
sbb
add
mov
add
jo
inc
adc
in
xor
lea
shlb
int
xlat
mov
rcll
popf
daa
out
in
push
mov
push
cmpl
push
add
mov
shrl
ret
xchg
jb
orb
enter
sbb
in
in
sub
inc
adc
imul
fisttps
xor
mov
mov
clc
push
mov
ja
or
sarb
test
insl
and
mov
lea
pop
outsb
int3
jge
mov
iret
mov
inc
jno
in
imul
mov
or
cmpsb
stos
rolb
fildll
les
jno
cmpsl
stos
mov
icebp
pop
jae
fcomi
mov
jo
fldenv
dec
outsl
or
fistpl
inc
mov
cmp
mov
stc
loope
dec
jo
jb
push
dec
aaa
pop
jl
pop
pushf
addr16
adc
adc
adc
or
scas
xchg
or
hlt
fs
and
testb
xchg
xchg
dec
pop
mov
jne
fidivs
sahf
sub
mov
je
inc
inc
xchg
test
inc
or
lret
add
add
xchg
push
cmp
jle
stos
or
push
push
movsb
or
push
sbb
mov
movsl
sub
sub
cmp
cmpsl
xor
adc
out
xor
mov
push
jo
pop
lea
xor
push
out
mov
push
hlt
push
cmpsl
movsb
shll
xchg
mov
aas
aaa
inc
addr16
aas
adc
andl
pop
adc
imul
fyl2xp1
rcl
mov
stos
call
test
out
adc
sub
xchg
dec
rcr
ljmp
nop
mov
add
mov
and
adc
ds
fwait
pop
xor
ret
sbb
loope
inc
jo
bound
mov
mov
dec
push
pusha
add
inc
sub
pop
jecxz
pop
xchg
inc
xchg
jnp
in
ret
es
sub
fucomi
push
cmp
arpl
and
std
pop
fisubl
push
hlt
add
lock
dec
jb
dec
rcr
inc
lahf
pop
cs
mov
in
bound
out
mov
in
mov
cmp
add
lods
inc
imul
jbe
mov
or
push
jb
and
into
inc
sub
xor
mov
mov
push
in
pop
xchg
cmp
jmp
data16
sub
or
mov
sarb
sub
enter
pop
cs
sub
fdivr
cli
mov
or
fdivrl
pop
repz
in
aas
enter
or
xchg
mov
mov
xlat
adc
push
cmp
jge
xchg
insb
dec
pushl
cmp
shrb
sub
jmp
mov
addr16
repz
inc
out
add
pusha
mov
push
jne
mov
mov
call
add
inc
fsubl
movsl
out
cwtl
push
xchg
outsb
mov
test
add
das
iret
mov
int
and
add
mov
cli
lea
loope
mov
shrb
repz
loop
out
test
pushf
out
and
jb
fidivl
and
mov
sbb
mov
inc
lea
stos
repz
cmp
push
dec
push
movsb
loopne
loopne
lcall
add
loop
mov
loopne
adc
leave
adc
xor
jae
add
push
mov
out
pop
aam
enter
mov
mov
lcall
ljmp
std
shl
mov
xor
push
mov
mov
push
repnz
jne
js
lahf
jae
cmp
insl
adc
mov
cs
bound
test
lretw
shl
push
lret
sbb
outsl
daa
popl
mov
sbb
in
inc
iret
pusha
in
push
clc
mov
in
xorl
inc
cli
cmp
add
cmp
pop
leave
xchg
fisubrs
je
adc
scas
dec
out
cmp
xor
add
insl
stos
xor
xlat
dec
outsb
imul
int
inc
inc
mov
enter
mov
stos
int3
loop
cmp
cmpsl
jbe
sbb
cli
jp
rclb
mov
sti
scas
cli
jl
cltd
xlat
dec
pop
cmc
stc
inc
sbb
xchg
pop
add
lock
cmp
jmp
dec
jmp
loop
mov
xor
dec
fisttps
outsl
or
mov
mov
push
sub
jns
xor
dec
or
mov
or
xor
pop
lcall
dec
sbb
ja
movsb
xchg
adc
xor
sarl
repnz
xor
add
xchg
clc
bound
mov
sub
cmp
sbb
mov
cltd
adc
mov
mov
sti
roll
inc
arpl
add
xchg
addr16
subb
roll
js
jle
jmp
jbe
pusha
cmp
pop
scas
pushl
dec
xchg
outsb
lret
and
or
lahf
add
fcmovnb
cltd
jecxz
adc
pop
fcom
fwait
mov
push
mov
gs
in
sub
leave
xlat
push
jg
pop
mov
mov
sbb
aam
sub
bound
cmc
notl
pop
cmp
pushl
adc
sbb
das
lahf
jmp
das
aam
jae
sti
or
inc
or
stc
sbb
mov
stos
imul
jg
dec
icebp
inc
stc
lret
xchg
mov
mov
bound
filds
popf
cmp
cmp
pop
push
inc
jbe
inc
out
dec
and
add
sbb
in
lret
sub
in
dec
inc
scas
pcmpgtb
xchg
outsl
xchg
adcl
fisttps
dec
push
pusha
inc
test
orl
test
inc
clc
pop
rclb
pushf
pop
mov
adc
into
aam
out
outsb
sbb
mov
jno
add
add
repz
rcrl
and
mov
loope
in
ret
xlat
cmpsl
ret
test
test
les
test
mov
inc
scas
addr16
leave
call
cmpsl
les
push
in
stos
sbbl
dec
adc
fwait
cld
fnstsw
xor
mov
call
addr16
sub
out
mov
movsb
xchg
lds
in
ja
inc
in
xorb
inc
mov
es
stos
jmp
mov
adcl
lods
out
cmp
push
mov
andb
push
pop
rcll
lea
shll
ljmp
lods
idivb
ljmp
cmp
xchg
xchg
jg
pop
add
or
fucomi
sub
inc
sti
lret
in
outsl
push
add
int
dec
scas
cmpsb
cwtl
loope
and
out
mov
pop
out
dec
sub
mov
decb
cmpsb
mov
xchg
sub
outsl
xchg
cmp
sahf
ret
fwait
add
filds
dec
push
enter
loope
jl
sbb
lds
adcb
mov
addl
cwtl
mov
cwtl
or
jno
inc
mov
pop
pushf
or
in
dec
mov
adc
int
inc
loopne
lea
mov
das
cmp
or
mov
leave
cld
dec
or
jns
jmp
shl
push
fidivrs
or
frstor
pusha
jno,pt
int
or
inc
push
dec
fwait
ret
shlb
xor
push
jg
and
call
stc
sahf
out
jo
aad
or
xor
ja
mov
lcall
pop
fs
lock
jle
add
cmp
daa
sbb
add
jae
leave
mov
cmp
adc
or
and
icebp
jno
sahf
xchg
mov
imul
dec
lock
lret
pop
idivb
lods
mov
cmc
add
mov
add
push
mov
inc
sti
loope
lea
mov
je
movsl
sbb
and
push
mov
test
ja
scas
mov
adc
ret
and
mov
mov
sub
sbb
iret
imul
lret
sub
cmpsb
mov
insb
adc
insl
arpl
pop
leave
xorb
adc
jl
in
push
mov
cmp
in
add
orl
outsl
fldenv
jmp
add
inc
hlt
in
cmpsb
fbstp
dec
ja
xchg
cwtl
sar
mov
xor
xchg
adc
ficoml
fmull
mov
mov
mov
add
mov
or
lods
or
outsb
mov
stos
cld
bound
xchg
ffreep
cmp
sbb
cmp
pop
negb
cltd
dec
cmp
jo
and
xor
fildll
call
lods
lods
gs
add
into
ficoml
gs
test
das
dec
or
lahf
ficompl
loop
fbstp
cmpsl
sbb
mov
fstp
xor
dec
es
pusha
in
int3
xchg
lea
xchg
add
insl
insb
add
stc
mov
mov
dec
in
mov
mov
aam
stos
xor
sahf
xchg
lahf
jl
sti
sti
jg
icebp
sub
inc
add
rolb
xchg
shrb
scas
pusha
jno
ret
std
jnp
add
adc
mov
pop
sbb
movsb
sbb
mov
or
dec
cmc
orl
sbb
add
jp
jge
jns
and
pop
nop
aas
pop
cmpsl
sahf
mov
scas
xchg
and
mov
fdivl
lahf
xor
js
cmp
xchg
imul
adc
js
movsl
adc
insl
out
sub
pop
sbb
int
movsb
in
pop
mov
xchg
sbb
insb
pop
and
fnstcw
mov
push
fwait
sub
xor
insb
inc
fdivrl
push
ret
std
aam
pop
cmpsb
outsl
pop
cltd
inc
imul
cmpsl
rcr
pop
lds
push
scas
sub
lret
adc
loopne
pop
scas
sub
test
into
push
adc
or
jnp
lret
pop
inc
mov
sbb
testb
movsb
xor
insl
out
imul
xchg
add
outsb
xor
cmp
jo
push
and
arpl
cmpsb
cmp
inc
roll
popf
mov
pop
jae
adcl
decl
push
enter
push
or
push
movsl
sarl
loope
cmpb
fwait
sub
ret
lret
mov
mov
mov
lret
movsb
lret
in
cmpsl
enter
jbe
jg
xchg
lret
sub
imul
cltd
xlat
sbb
mov
cmpsl
aaa
or
xchg
jecxz
jb
getsec
insb
inc
test
jl
pop
test
cmp
sub
push
inc
ret
jmp
dec
cmpsb
pop
call
add
movsl
jnp
xor
sahf
fwait
jne
jb
leave
fnstenv
push
rolb
add
aaa
mov
lods
out
cmpb
lock
sub
stc
xchg
adc
adc
push
push
mov
mov
mov
and
xchg
pop
icebp
add
les
inc
mov
mov
lock
push
test
das
and
mov
push
jl
pop
mov
aad
cmp
fmulp
xor
jg
idivb
js
adc
mov
nop
jmp
std
push
clc
push
out
cmpl
cmp
lods
cli
hlt
leave
daa
mov
mov
lods
mov
mov
out
icebp
leave
icebp
jns
sub
or
pusha
das
jp
pop
loopne
mov
xor
dec
mov
cmpsb
les
adcl
aam
divb
or
dec
addb
outsb
lahf
cmp
ss
pcmpeqw
jmp
rcr
mov
cltd
adc
sti
pop
mov
fnstsw
mov
push
movaps
pop
ret
sahf
xlat
notb
mov
push
in
lret
mov
jae
mov
daa
in
push
or
jg
fsubrl
inc
out
daa
mov
dec
xlat
inc
das
mov
pop
mov
mov
push
mov
out
mov
daa
mov
lock
mov
mov
decb
xor
sbb
inc
pop
or
std
iret
mov
orb
cwtl
repnz
lret
xor
in
gs
rcll
lods
sub
and
xchg
cltd
add
xchg
sahf
jp
mov
xchg
lea
loope
push
lahf
jb
xor
push
xrelease
jb
mov
and
jecxz
push
sub
decl
mull
xor
sub
test
jns
jne
jne
or
int
jns
pushf
dec
cld
out
and
jg
xlat
cmp
sarl
or
xor
je
pop
outsl
insl
jge
xchg
sbb
jg
push
jb
jbe
pop
adc
cmp
sub
xor
push
xor
ss
jle
add
dec
jne
dec
fisttpll
add
pusha
pop
mov
int
xor
add
mov
mov
add
ljmp
pop
pop
aad
je
in
mov
ret
loopne
push
scas
push
std
adc
sahf
pushf
fwait
ljmp
inc
cmp
ss
scas
aam
ljmp
aam
jo
hlt
and
pop
push
lods
test
inc
sub
andb
push
add
sub
pop
pop
ficoml
push
push
stc
shl
jo
fwait
add
add
incb
xor
jnp
lds
mov
es
lret
je
cmpsb
mov
repnz
dec
dec
xor
into
jae
ja
out
les
test
add
cs
mov
add
jne
repz
lret
cld
jecxz
add
mulb
push
mov
aad
pusha
call
lret
cmpb
pop
adcb
mov
pop
inc
scas
mov
mov
mov
aas
std
or
lods
or
addr16
movsb
cmp
or
jle
lods
aaa
stos
je
cmp
insl
in
int3
test
test
ret
fistl
ja
fildl
sbb
stc
mov
scas
pop
push
movsl
dec
fbld
leave
pop
lcall
imul
jb
xchg
aam
adc
push
lret
adcl
fldt
xlat
dec
shr
mov
dec
cld
outsl
mov
idivb
push
cmp
hlt
dec
inc
lahf
outsl
push
dec
xchg
inc
enter
xchg
in
in
mov
imul
sbb
sarl
lcall
mov
jecxz
mov
sub
mov
jp
cmc
out
push
iret
xchg
mov
lcall
dec
cli
xchg
lret
movb
cld
sub
mov
mov
popf
dec
dec
std
push
xchg
xor
sbb
movsl
pop
mov
xor
and
fsubrl
fwait
test
xor
nop
adc
fbstp
inc
adc
inc
inc
cmp
or
stos
pop
inc
xchg
add
cmp
fnsave
xor
adc
mov
pop
jmp
movl
xchg
xor
test
int3
mov
mull
and
add
data16
pop
ljmp
add
std
sub
add
mov
cld
das
sub
mov
xorl
push
xchg
push
mov
dec
adcb
out
sbb
rorl
sbb
out
push
mov
sub
sub
pop
push
lea
rcrl
js
aad
push
mov
add
fiadds
jnp
outsb
icebp
pop
push
mov
fwait
clc
jge
jle
xchg
lods
icebp
or
pop
negl
mov
aas
jne
mov
ret
call
call
rorb
std
or
jno
cmp
mov
sub
and
xor
sbb
popf
pop
lods
xlat
test
popa
xor
cli
cli
push
jge
sub
mov
cmp
addr16
dec
and
gs
out
push
jge
ror
jg
je,pt
outsb
test
pushw
cmp
jae
subb
loopne
es
cmp
int
pushl
clc
sbb
cmpsb
or
lock
push
mov
rolb
subl
orb
add
imul
jp
out
lea
push
mov
bound
test
xchg
jecxz
jecxz
arpl
popf
not
jge
cltd
out
imul
or
jmp
mov
popf
mov
pop
jmp
push
les
inc
push
inc
fsubrs
pop
sub
or
sub
repz
mov
push
rolb
jns
and
out
les
or
pushf
aad
sbb
mov
hlt
enter
and
push
adcb
sahf
sbbl
cwtl
xor
bound
ret
sbb
cs
pop
ds
popa
ds
xor
adc
sub
bnd
subl
mov
adc
add
stos
pop
cmc
fadd
int
out
mov
fcoml
fcoms
mov
or
jp
xor
in
insl
pop
cltd
fstpl
and
xchg
stc
push
fisubs
xchg
push
xchg
popa
push
inc
movsl
stos
std
outsl
jns
xor
mov
ret
fwait
nop
outsl
es
cli
inc
mov
jle
pop
xlat
testb
lea
scas
ret
mov
add
int3
les
fcmovu
pop
xor
cmp
in
mov
and
inc
push
mov
loope
stc
aaa
push
pop
or
sub
push
jle
fdivs
movsl
inc
jmp
jne
gs
jecxz
call
popa
push
jo
push
clc
jmp
outsb
mov
in
xlat
pop
jl
test
push
add
jle
xor
jo
xchg
fisttpll
sbb
ficomps
int
xchg
dec
cmp
test
movsb
push
stc
aaa
popa
add
xchg
jg
out
lret
aad
cmp
sti
sbb
outsb
pushf
jo
xor
push
mov
push
enter
push
mov
hlt
sub
dec
jbe
sub
jle
pop
fisubrl
cmp
push
xchg
inc
pop
test
add
sbb
mov
roll
xchg
test
fsts
mov
push
lds
add
icebp
sbbl
sbb
mov
xchg
cld
outsb
testb
popf
sub
jecxz
add
std
push
dec
scas
mov
lahf
lods
sub
mov
ror
mov
hlt
pop
add
shrl
jbe
adc
xchg
or
mov
mov
movsb
std
enter
adc
ljmp
or
jl
sbb
xor
nop
jo
lds
fs
or
sub
pusha
pop
mov
xor
adc
divl
mov
mulb
es
shlb
das
jg
cmp
xchg
and
push
cld
jno
inc
mov
push
xor
push
frstor
aad
aaa
jle
lods
pop
inc
xchg
pop
lods
imul
or
leave
lahf
pop
sbb
lds
std
cmc
pop
and
sub
inc
add
adc
and
pop
pop
insb
mov
iret
data16
push
pop
hlt
sbb
fwait
ret
mov
imul
mov
mov
xor
es
gs
and
std
cmp
in
cld
mov
cmp
sbbl
push
mov
mov
cmc
jl
pop
mov
xchg
push
inc
sarl
add
xchg
adc
subl
sbb
fcompl
loopne
js
and
test
xchg
push
push
stos
push
or
push
pop
pop
mov
loop
iret
sbb
and
aam
data16
shll
in
sahf
pop
lahf
jg
xlat
cld
ret
outsb
outsb
addl
aad
lods
inc
test
mov
add
or
mov
fiadds
pop
push
sbb
cmp
fmulp
mov
mov
and
mov
das
add
fcompl
push
ljmp
mov
sub
sub
xor
movsl
sub
cwtl
inc
jb
leave
shl
mov
add
stos
addr16
enter
sub
rep
aas
insb
xor
daa
add
sarb
inc
leave
xchg
bswap
in
cmp
sahf
jo
cmc
cmpsb
xchg
pusha
outsl
xor
xchg
or
dec
imull
sbb
aaa
xlat
popf
pop
mov
scas
repnz
jb
xchg
addl
aad
aaa
mov
cmovle
test
repz
push
push
xchg
lods
push
or
mov
add
dec
jge
jno
clc
push
sub
sbb
jne
ffree
das
leave
add
sbb
cli
sbb
cmpsl
push
jg
bound
add
cli
cmp
push
pop
insl
mov
dec
jecxz
push
inc
stos
inc
outsl
push
mov
stos
sti
in
push
idiv
stos
test
inc
push
push
inc
loop
lret
xor
nop
bound
cmp
aad
pop
jbe
adc
push
add
fs
ficoms
inc
jnp
lret
rcl
jbe
ljmp
pop
add
pop
neg
cmpsb
mov
jp
imul
cmc
inc
sahf
sbb
movsb
pop
jp
jae
sbb
gs
ss
mov
xor
mov
popa
mov
jo
lea
jne
push
push
xchg
xor
sti
fcoms
test
roll
jb
mov
es
push
or
push
mov
cmp
xor
iret
xor
push
aaa
andb
inc
or
inc
int3
hlt
lahf
cld
movsb
dec
mov
je
pop
or
push
jb
fmull
stos
pop
fcompl
xor
je
inc
push
xor
testl
aam
xchg
pop
js
and
sub
xor
push
ret
std
repnz
fcompl
lret
jge
popl
dec
rol
ret
outsl
dec
xor
sbb
xor
jne
jl
pop
pop
dec
shlb
cmpsl
cmp
out
fsub
insb
arpl
add
sbb
pop
dec
push
movsb
dec
inc
loopne
insl
add
lret
out
ss
mov
pop
test
xchg
popf
jl
pop
xlat
sbb
jo
xor
pop
mov
sub
xor
rcll
pop
mov
ret
inc
imul
jns
mov
cs
jbe
std
stos
inc
inc
das
dec
pop
into
mov
adc
sub
pop
push
fdiv
andl
mov
fcmovbe
jmp
aam
les
sbb
mov
in
mov
fsubr
push
sub
fdivrs
into
mov
sub
mov
out
notb
bound
in
jae
shl
in
mov
pop
int
leave
int
stos
lret
out
ja
inc
in
jge
into
out
mov
fwait
push
nop
pop
inc
jecxz
mov
sbb
adc
insl
jmp
adc
mov
loope
mov
jb
repz
mov
addl
sbb
outsb
cmp
jmp
cs
nop
ljmp
push
je
xchg
pushf
bound
pushf
into
aam
aam
daa
adc
mov
ret
lea
dec
mov
push
cmp
xchg
pop
lret
cmp
lock
mov
and
loope
mov
mov
movsl
or
push
stc
jo
or
mov
push
ss
and
push
jecxz
cmp
add
push
pop
je
xor
xchg
jno,pt
or
push
push
test
fstpt
jl
or
sbb
ljmp
es
mov
repnz
sti
mov
lcall
cmp
dec
dec
lods
cmp
jecxz
mov
sub
add
lods
inc
inc
mov
outsb
mov
lahf
cmp
popf
outsb
pop
xor
jbe
xor
push
sub
sbb
insb
mov
or
mov
add
and
and
aaa
inc
mov
cli
or
mov
push
ljmp
das
adc
pop
cs
xor
scas
mov
std
jo
mov
outsb
iret
imul
pop
dec
cmp
xor
push
adc
bound
xor
out
loop
aam
ds
xor
push
adc
pop
mov
mov
lods
sub
or
test
inc
push
push
sbb
jp
fisttpll
fucomip
xchg
lock
adc
out
das
push
addl
outsl
mov
mov
in
and
inc
aad
mov
mov
mov
les
mov
hlt
jecxz
ret
mov
ljmp
iret
mov
sub
push
pushw
and
hlt
test
in
shrb
in
int3
lahf
addr16
push
or
icebp
mov
je
movsl
inc
xor
insb
or
xchg
icebp
dec
push
daa
addb
fisttpll
shr
gs
adc
ljmp
pop
pop
insb
fwait
mov
push
pop
sub
dec
add
inc
sbb
inc
imul
icebp
jae
sbb
cmp
pop
dec
and
pop
push
and
cli
lea
dec
jp
fbld
adc
in
dec
js
mov
xor
jl
shlb
and
adc
and
xor
ret
push
sbb
fmul
popa
jne
mov
push
ja
xchg
or
rorb
shr
lcall
mov
shl
test
xchg
xchg
mov
pop
add
rol
and
inc
add
xchg
push
pop
outsb
out
jg
pushf
jnp
inc
xchg
or
jb
repnz
ret
inc
test
dec
adc
pop
test
jge
sub
lret
pop
int
mov
push
shrb
sub
test
outsl
xor
mov
cmp
sub
push
push
fcmovbe
push
mov
test
mulb
bound
sub
cmc
sub
ret
or
sub
pop
mov
inc
cltd
pop
sub
mov
inc
insl
sub
insb
into
add
jge
mov
jne
scas
inc
inc
loope
ret
dec
test
fsubl
inc
jae
hlt
xchg
clc
scas
mov
stos
add
push
jmp
test
jbe
iret
push
dec
loope
xor
xor
or
imul
pop
jecxz
pop
mov
pushf
push
lods
xorb
jo
gs
fstl
into
subl
loope
inc
push
jae
out
or
dec
jmp
push
inc
xor
shrb
push
pop
pop
addr16
jns
insb
imul
sbb
inc
lahf
sbbl
fisubrs
fsubrl
or
pop
fcmove
fistl
pop
xlat
clc
sub
clc
pushf
sub
cltd
inc
cmp
xchg
inc
push
ljmp
pop
cli
add
jnp
mov
xlat
lahf
pop
sbb
rcrl
dec
adc
mov
mov
or
mov
xor
pusha
stc
or
mov
in
or
cmc
hlt
mov
in
or
xchg
mov
popf
dec
push
outsl
pop
jecxz
es
in
push
sub
ret
dec
mov
mov
xchg
mov
push
push
sub
inc
mov
ds
cmp
pop
dec
mov
pop
insb
adc
mov
js
pop
dec
shlb
lsl
call
mov
loope
test
ret
mov
xor
cmp
je
in
or
mov
test
dec
jae
add
pop
xchg
jo
pop
cmp
push
inc
subb
cmp
push
jne
xchg
mov
pop
cwtl
xchg
inc
pop
bound
pushf
xchg
mov
mov
insl
je
xchg
pop
daa
jae
mov
inc
dec
in
pmaxub
mov
push
js
jg
adc
jnp
pusha
inc
jb
pop
dec
sub
aam
sub
cmp
cwtl
add
mov
jnp
jmp
xor
xor
cmp
stos
je
stc
jg
cmp
nop
out
cmp
fstps
loopne
dec
xchg
sub
mov
pop
mov
aam
fwait
push
jmp
cli
adc
push
and
sbb
jecxz
xor
in
sar
test
sahf
fldt
xor
ja
paddsw
pop
pop
cmp
jecxz
jmp
sbb
jne
dec
pop
push
mov
rcrl
dec
mov
or
sub
or
adc
rol
arpl
out
jge
imul
mov
push
movsl
pop
sar
sarb
xor
sbb
push
nop
sbb
pop
loope
lcall
mov
inc
xor
lds
out
adc
insl
push
xchg
mov
sbb
pop
sub
imul
in
lock
mov
stos
pop
mov
daa
lock
mov
fbld
or
pusha
mov
rclb
lods
outsb
ja
pop
imul
clc
cltd
addr16
push
stos
sbb
inc
push
pusha
mov
and
outsl
int
lret
mov
push
scas
es
lcall
cwtl
push
orb
inc
mov
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
jmp
dec
inc
sub
scas
push
dec
xchg
pop
addl
push
xchg
jb
and
sub
fwait
mov
adc
xor
pop
fldt
lret
sbbb
pusha
cmp
adcl
dec
mov
xor
cmp
sbb
jne
mov
test
xor
pushf
movsl
dec
inc
and
lahf
testb
pushf
jmp
cmp
adc
rolb
and
repnz
loop
enter
clc
jge
sbb
in
mov
mov
mov
loop
sbb
stos
rclb
sbb
dec
stos
lods
inc
loop
stos
mov
mov
jmp
hlt
cltd
in
pop
cmpsl
int
lahf
sbb
data16
iret
jne
sbb
cs
push
lahf
adc
pop
cwtl
push
mov
jle
daa
lcall
mov
mov
lahf
adc
xchg
movsb
test
mov
loope
ja
mov
mov
idivl
mov
jbe
inc
rcrb
xchg
rolb
pop
out
fmul
or
pop
inc
jo
mov
cmpsl
jle
outsb
xchg
and
fisubrs
xorl
xchg
jecxz
push
dec
and
adc
es
mov
aas
or
inc
insb
pop
rcrl
out
inc
sti
push
sahf
insw
cmpb
sbb
xchg
aaa
sbb
mov
push
sub
loop
mov
aas
rcrl
adc
es
add
adc
icebp
loop
dec
push
jge
mov
cmpsb
scas
and
mov
or
pop
ja
iret
arpl
mov
sbb
dec
xor
lods
repnz
addr16
jo
imul
pop
cltd
add
aam
cmpsb
xchg
idiv
and
mov
and
js
inc
sar
loope
push
add
in
enter
and
ret
push
cli
and
jle
jo
frstor
mov
pop
popf
rorl
dec
xchg
test
pop
push
push
mov
push
jp
hlt
sub
sbb
insl
les
add
and
jmp
push
aad
flds
mov
ficoms
xchg
inc
repnz
pop
cmp
fdivrs
sahf
dec
pop
stos
push
leave
xchg
xchg
push
sub
mov
lock
or
pop
mov
fsub
xchg
inc
mov
cmp
insl
sub
or
sub
cmp
mov
xchg
push
mov
call
jns
leave
add
xor
add
cmpsb
xor
pop
or
stos
mov
mov
iret
loop
addr16
xorl
xor
adc
test
inc
pop
fwait
lds
aaa
cmpxchg
push
mov
mov
cld
xchg
jle
sub
je
adc
dec
hlt
movsl
faddl
jge
push
cmp
ret
int3
shll
hlt
out
cltd
or
cmpsl
jmp
pop
repz
lret
push
loope
cmpb
xor
push
out
imul
sub
sbb
dec
adc
arpl
dec
pop
clc
cmpsb
add
cwtl
les
or
push
sub
xchg
insb
mov
pop
je
dec
dec
pop
sub
movl
push
mov
int
or
mov
ja
out
or
add
arpl
push
int
outsl
gs
es
pop
or
loopne
inc
inc
aas
inc
aad
or
pop
jbe
insl
sub
adcb
lahf
lods
xor
pop
stos
pop
jb
adc
js
fs
pushf
jb
dec
fimull
pop
imul
dec
mov
mov
icebp
fildl
jl
movsb
cmpxchg
rclb
aaa
xor
jl
xor
pop
sub
cmp
pop
xorl
push
mov
inc
push
test
xor
lahf
ret
std
mov
xchg
cmpxchg
cmp
cli
jb
mov
jne
pop
arpl
pop
fwait
outsl
icebp
dec
xchg
jl
popf
dec
fdivl
mov
daa
fstps
enter
inc
and
mov
mov
fsubs
cmp
int
test
mov
bound
mov
adc
lds
cmp
loopne
rcrb
xor
mov
jle
out
test
mov
cltd
xchg
outsl
roll
sub
ret
push
iret
dec
ljmp
sarb
mov
sbb
pusha
and
adc
cmp
ljmp
sub
dec
mov
mov
test
clc
lcall
dec
ja
xchg
fdivp
pop
sub
in
clc
add
ja
add
enter
xchg
pop
pop
test
jmp
or
add
jo
repnz
dec
ja
negb
outsl
cmp
inc
out
mov
mov
insb
fwait
cmp
shll
jnp
outsl
nop
mov
push
fisttps
fwait
aam
popa
repnz
xchg
mov
fsubrl
ja
mov
inc
fidivl
je
push
pop
lods
or
bound
nop
sub
dec
adc
movsb
xchg
or
push
sbb
xchg
hlt
mov
pop
push
mov
ret
mov
xchg
jecxz
sbb
push
fbld
shl
push
dec
xchg
lret
add
jbe
repz
sbb
test
lods
push
addr16
mov
sbb
cmp
data16
add
inc
pop
mov
lea
lret
ljmp
inc
outsb
jecxz
inc
shrb
sub
mov
mov
or
in
in
dec
jnp
add
xor
sub
pop
mov
and
xchg
and
push
pop
xchg
jbe
cltd
mov
lahf
lock
and
cld
jecxz
inc
and
sahf
in
jo
jb
js
mov
or
js
ljmp
mov
dec
push
and
cwtl
add
arpl
push
shlb
insb
xchg
adcb
inc
jae
in
in
in
insb
adc
sub
stos
pop
ss
push
add
pop
out
loopne
cmp
xchg
test
pop
stos
dec
sub
add
stos
push
cmpsl
out
xlat
mov
call
pop
mov
xchg
out
xchg
mov
inc
cmpsl
mov
out
inc
jnp
jle
xchg
imul
adc
imul
dec
test
loope
xor
sub
mov
jg
xorl
movsl
pop
aaa
mov
mov
jmp
fisttpll
stos
repz
push
push
xor
xor
fidivl
pop
cli
dec
popf
xor
insl
xchg
xor
xor
xchg
adc
mov
fsubs
negb
dec
mov
cmpsl
ficoms
fisttpl
or
sbb
sub
aam
add
arpl
stos
sub
testl
leave
lret
jmp
fwait
popf
ljmp
outsl
mov
push
jb
ljmp
jp
sub
nop
sbb
mov
add
mov
stc
sbb
xor
ds
dec
fldcw
sbb
push
push
cmp
aam
jmp
imul
std
and
jno
lahf
xor
shll
and
fisubs
lods
mov
sub
scas
dec
jp
cltd
fsubrl
mov
cmovl
into
rclb
in
mov
subl
xor
scas
scas
fcompl
loope
jae
es
mov
or
scas
push
add
xor
jge
sbb
mov
mov
or
cmp
lods
jae
sbb
rolb
pop
jg
sub
clc
adc
loope
cmpsb
lret
repz
out
and
inc
repnz
xchg
lds
mov
js
inc
aam
fisubs
test
and
lret
std
sbb
pop
and
test
sub
insb
adcl
stc
jecxz
mov
daa
ficompl
insl
push
addr16
mov
xchg
movsb
mov
cmovno
mov
xchg
cmp
push
pusha
jle
mov
add
inc
and
bound
ret
jmp
cmp
sbb
aas
mov
cmp
lea
jb
or
push
or
test
std
cli
sub
lock
sbb
cld
nop
xor
push
inc
xor
dec
pop
repnz
push
cwtl
pop
mov
and
rol
push
and
jle
cltd
push
and
dec
fsubrl
or
outsl
xchg
adc
dec
in
lods
outsb
clc
inc
push
sub
dec
jge
arpl
xchg
mov
sbb
push
fs
stos
push
stc
call
outsb
mov
lods
js
cmc
insl
sub
addl
dec
add
icebp
adc
mov
repz
pop
mov
sbb
fistps
push
scas
in
cmp
lock
mov
mov
rclb
call
mov
sub
out
adcl
xor
xorb
loope
mov
or
dec
sti
clc
mov
js
xlat
dec
or
js
xchg
repz
cmp
daa
mov
out
push
icebp
aas
xchg
sbb
inc
mov
jbe
addr16
jle
pop
or
cmp
data16
sbb
cmp
mov
cmpsb
or
xor
sar
repz
lods
cmp
mov
test
popa
jle
mov
lea
jge
mov
scas
jle
jno
data16
daa
sub
jl
loopne
pop
outsb
push
push
in
jl
addr16
xor
sbb
or
fadds
dec
jecxz
je
xor
loope
xchg
enter
push
dec
pop
lahf
loope
stc
push
mov
daa
ja
fxam
dec
mov
mov
lret
inc
push
inc
mov
pop
xchg
ror
add
mov
push
lea
mov
lock
cwtl
mov
mov
das
adc
outsb
insb
xchg
xchg
cmp
fstl
mov
stos
rorb
mov
dec
ret
inc
pop
fldenv
xor
push
xor
fnsave
mov
cltd
jbe
pop
sub
mov
mov
push
inc
mov
mov
out
call
inc
mov
jb
jnp
pop
ret
aaa
dec
lods
dec
pop
lds
jl
xchg
adc
jg
les
rcll
pop
add
call
jp
insl
xchg
es
fdivrs
sbb
test
mulb
inc
dec
xchg
lcall
inc
push
lahf
xor
add
stc
xor
cmpsl
xchg
cmp
daa
xchg
xor
enter
fidivl
push
jb
jne
sbb
enter
je
xchg
adc
xor
adc
lret
loopne
push
pop
mov
je
pushl
sahf
scas
jl
mov
scas
jbe
jecxz
mov
xchg
adc
push
arpl
sub
rcl
int3
jne
xor
pushf
dec
jle
mov
mov
push
xor
fdiv
lock
andl
sub
stc
jecxz
xchg
push
daa
add
cs
lret
cmp
xchg
cmp
xlat
daa
sbb
nop
xchg
or
fisubl
and
inc
sbb
adc
jnp
loop
int
hlt
addr16
dec
ds
aad
push
push
fidivrl
lock
jecxz
clc
dec
push
or
test
pusha
loopne
xchg
pop
inc
dec
adc
jb
fcompl
rcrb
fcomps
and
and
shlb
pop
and
cmp
stos
xchg
insl
dec
and
jne
sbb
push
repz
dec
rcr
out
mov
xor
pop
jns
add
inc
dec
pushl
xchg
xchg
iret
mov
jo
dec
and
sbbl
scas
cmp
enter
ss
imul
cmp
xchg
push
inc
out
stos
pop
insl
pusha
push
jae
push
jmp
ret
ret
adc
push
jb
add
ss
ljmp
xor
cmp
shll
push
pop
push
mov
push
push
aam
popa
enter
iret
jae
sbb
and
xchg
mov
movsl
jecxz
mov
into
cmp
jne
adc
lods
or
scas
mov
je
jp
jmp
sub
or
jmp
inc
jmp
xor
fsubrs
cmp
hlt
adc
icebp
pop
xor
pop
mov
add
insb
test
dec
test
sbb
sbb
push
mov
dec
dec
rclb
sbb
or
aam
inc
enter
andb
xchg
dec
jecxz
push
inc
stc
cwtl
jne
loop
or
std
push
mov
inc
flds
insl
sub
jmp
std
scas
mov
out
mov
lea
clc
sbb
dec
mov
ret
loopne
nop
das
xlat
aam
dec
rcrb
or
mov
fstl
cmp
andl
or
dec
or
scas
adc
dec
sahf
gs
or
lods
sahf
mov
dec
sub
and
loop
adcl
scas
push
dec
mov
sbb
stos
mov
les
arpl
sbb
mov
hlt
ret
nop
ficoml
sub
and
shl
dec
xchg
mov
andl
test
mov
cmp
je
fidivs
sub
jecxz
pop
shll
cmc
pop
jbe
dec
mov
mov
jge
clc
jl
test
ret
inc
push
lret
dec
das
xchg
sbb
add
and
xlat
pop
leave
repz
jno
mov
insl
jno
or
xchg
sbb
push
push
call
jmp
push
pop
xchg
test
sub
jne
sub
je
add
jg
jge
jb
jmp
push
cmp
cld
nop
push
sti
inc
stos
sarl
out
mov
rorb
fs
icebp
mov
iret
scas
aad
push
push
cmp
test
push
int3
push
ret
sub
or
push
ret
shr
subb
ret
mov
sub
outsl
dec
mov
mov
or
mov
dec
add
mov
insl
xchg
dec
sbb
pop
ret
aam
lods
sub
dec
int
mov
push
adc
mov
add
sbb
addl
xlat
xor
sub
test
or
lret
jns
mov
fisubs
jae
ss
and
pop
adc
cmp
out
jecxz
neg
into
fbld
pop
xchg
daa
mov
ljmp
mov
pop
cltd
xor
gs
enter
adc
ret
add
jbe
dec
pop
push
popf
icebp
cltd
and
adcl
pminsw
sub
inc
xor
insb
stos
mov
outsb
into
sbb
xor
inc
mov
fbstp
sbbb
cmp
mov
mov
insb
into
ret
sahf
mov
cmp
inc
daa
sbb
xchg
cmpsw
jns
xchg
inc
sbb
imul
aas
and
fprem1
leave
push
and
pop
shlb
movsb
jne
pop
add
push
movb
sbb
adc
popf
ss
lea
ret
cmp
test
rcr
fucomip
add
stos
leave
sub
sbb
xor
pop
pop
or
sub
cli
scas
mov
in
dec
pop
pop
and
push
inc
xchg
ds
cs
push
pop
add
fnstsw
cs
iret
jb
sub
mov
push
pop
lretw
mov
andb
cmpsb
fldcw
fcmovnbe
scas
movsb
sub
sub
nop
xchg
cld
aam
cmp
fisubrs
and
push
xor
imul
rcll
jmp
lods
ret
js
in
lahf
imul
mov
lods
mov
mov
pop
sub
adc
ja
pop
testl
sub
fldenv
dec
stc
in
add
leave
ret
fsubrs
stos
fcompl
mov
shrl
adc
push
sbb
int
enter
int3
icebp
xchg
pop
popf
xor
xor
dec
int
fcoml
ja
jle
in
movl
movsb
outsb
and
push
stos
add
jle
pop
mov
in
mov
mov
mov
test
xchg
lahf
sti
push
push
mov
mov
sbbb
adc
xor
sub
adc
cli
into
dec
ljmp
xchg
jmp
adc
shll
es
popf
arpl
mov
sub
pop
cmpsb
imul
fs
sti
dec
add
or
adc
push
insl
dec
pop
sub
std
bound
push
xchg
push
xchg
loopne
mov
and
xchg
inc
or
or
jp
mov
cwtl
jecxz
rcrl
repz
insl
inc
inc
out
xor
sbb
daa
cltd
fmull
popa
enter
icebp
cmpsb
dec
scas
dec
mov
iret
add
mov
sub
pop
sub
test
inc
jne
or
out
rcll
int3
dec
lds
xlat
push
lods
mov
add
subl
shlb
es
mov
dec
jmp
enter
in
mov
adc
andb
jmp
cwtl
arpl
lret
mov
into
mov
mov
adc
stc
pop
gs
mov
dec
fstpl
sub
std
dec
imul
mulb
or
sbb
test
jge
pop
sbb
std
pusha
cld
and
jnp
ficompl
inc
test
sub
es
imul
insl
mov
lret
fnsave
pop
mov
mov
or
jb
push
adc
push
xchg
dec
into
cmp
jg
pop
push
rcrl
call
jno
xor
push
les
and
in
pop
push
sahf
lret
xchg
iret
aas
stos
sahf
jmp
fisttpll
jl
jo
cld
jmp
jmp
aas
mov
fcoml
movsl
xchg
popf
cmp
dec
xchg
fucom
aam
xor
xor
sbb
lods
ret
mov
pop
rorb
xchg
aaa
push
push
std
pop
jle
inc
add
sub
das
jmp
dec
xor
push
jge
outsb
mov
or
mov
and
sub
popa
sub
sbb
shrl
xor
inc
cmp
insb
sbb
cmp
rclb
fdivrs
cmp
or
aad
mov
stc
xlat
mov
call
test
and
pop
leave
inc
mov
ret
jmp
adc
jecxz
mov
jmp
push
mov
addr16
sbb
popa
data16
jo
xchg
daa
mov
ss
pop
dec
pushf
fcompl
popa
xor
inc
jg
ret
inc
jg
cmp
and
cmp
out
push
xor
xor
adc
or
test
sbb
fs
test
pop
push
mov
pop
inc
pop
je
fisubl
outsl
xchg
pop
sbb
adc
xlat
cmp
insl
sbb
add
ret
repnz
jge
out
es
mov
ja
add
pop
xchg
test
mov
or
outsb
jb
jmp
adc
out
cmp
and
mov
mov
negl
insl
inc
dec
pop
dec
push
insl
pop
mov
and
add
mov
jbe
sbb
adc
movsb
test
cmc
scas
stos
add
add
rcrl
ljmp
pop
iret
scas
adc
repz
ljmp
daa
lods
jb
jns
add
and
pop
cmp
inc
push
and
push
in
dec
addr16
lahf
or
or
jo
jns
pop
xlat
pop
jb
add
popa
lret
sbb
jno
cmc
dec
and
clc
jmp
and
outsb
or
outsl
push
sub
loope
lds
popf
bound
jne
cli
mov
repnz
cs
incl
cwtl
push
xchg
std
dec
dec
mov
movl
arpl
repz
cs
fwait
jecxz
jmp
add
push
sub
jns
inc
fidivrl
cmp
add
lods
xlat
js
and
cmc
push
or
pusha
mov
cmp
popf
jnp
jg
or
addl
loopne
pop
jle
les
ja
push
jge
mov
mov
jb
jmp
dec
pop
inc
sub
inc
jns
jnp
lret
cmc
pop
insl
or
pop
lock
jne
and
rcr
imul
out
xchg
push
and
add
test
iret
push
cltd
in
adc
xchg
daa
dec
fstps
sbbl
cs
jecxz
stos
daa
cmpb
push
in
jmp
jmp
and
push
xchg
lcall
ljmp
add
mov
push
sbb
popf
ret
cmpsl
into
in
push
adc
cmp
pop
adc
mov
jo
test
mov
les
into
out
push
ret
rorl
test
addr16
mov
cwtl
cmp
enter
pop
sbbb
cli
mov
inc
icebp
add
push
pop
add
loop
and
add
mov
mov
or
push
outsb
call
jp
jg
mov
lods
repnz
shrl
jge
insb
mov
inc
repnz
mov
stos
lret
adc
mov
clc
aam
xor
adc
aas
gs
repz
inc
xor
mov
sub
push
sar
mov
cmp
lret
push
fcmovbe
mov
into
dec
aaa
movsb
mov
ss
fcomi
add
loop
ljmp
lret
dec
xlat
sub
les
adc
pop
fldl
jb
es
xor
cld
or
je
adc
jl
add
iret
mov
mov
popa
jmp
and
adc
mov
nop
push
push
cs
nop
sub
push
jo
addr16
negl
mov
ja
lahf
xor
jae
mov
xor
or
xor
into
jle
push
mov
in
cs
cli
xchg
adc
mov
int
sbb
dec
cmc
mov
mov
fistps
pop
inc
mov
fmul
imul
mov
dec
or
mov
inc
sub
adc
cwtl
inc
jo
add
inc
xchg
cmp
ror
pop
adc
mov
imul
mov
test
data16
and
aad
cmp
or
push
mov
mov
jne
adc
xlat
fcmovbe
imul
or
rolb
cmpsl
mov
or
xabort
mov
loopne
mov
and
jno
mov
dec
inc
adc
test
sar
mov
dec
mov
lret
shl
gs
addr16
daa
mov
scas
pop
cmc
scas
xchg
cmp
pop
popa
out
ja
cmpsb
push
shr
push
test
jb
loopne
out
pop
xor
cmpl
in
cli
adc
cs
push
or
mov
dec
cmpsb
adc
bswap
jb,pn
pop
push
cltd
mov
jge
jno
mov
add
sbb
sub
inc
cld
push
xor
push
mov
jne
pop
iret
jmp
mov
jae
sbb
test
movsb
cmp
mov
out
pop
std
jl
nop
aam
nop
fimuls
in
pop
xor
and
sub
pop
sbb
push
push
int
fldcw
mov
out
pop
push
jo
lahf
lcall
into
jmp
xor
push
int
cmp
sbb
sbb
xchg
jnp
xchg
mov
sub
xorl
jbe
cmpsl
sub
adc
or
shl
xchg
xchg
pop
lods
int
inc
or
jne
dec
pop
xchg
mov
push
sti
das
pop
inc
dec
ja
pop
stos
dec
movsb
lahf
nop
pop
pop
push
mov
add
adc
sti
fmul
test
je
lcall
into
ljmp
sbb
mov
adc
sub
arpl
push
mov
jecxz
dec
insb
pop
lods
dec
jmp
pop
int3
push
pushf
stc
test
inc
dec
loopne
cli
movl
jl
das
sub
sub
iret
xor
add
shlb
mov
test
push
mov
mov
je
xchg
mov
sub
sahf
iret
ljmp
stc
aam
xchg
dec
mov
cmpb
nop
add
sbb
mov
das
xor
enter
aam
jmp
cltd
shll
pop
das
cmp
sub
dec
jno
and
outsl
cmp
fisubl
xor
dec
std
or
mov
lods
icebp
adc
adc
jno
repz
jecxz
test
jmp
mov
lea
insb
xor
test
testb
test
imul
icebp
enter
in
mov
and
ds
jo
clc
mov
cmpsl
pop
mov
out
lea
sahf
cmpsb
iret
lcall
xor
sbb
sbb
rcrb
mov
pusha
gs
lret
shll
cmp
jp
jnp
test
push
fs
stos
fsubrl
popa
jmp
ret
xor
pushf
rolb
negb
jle
in
xchg
test
adc
cwtl
shrd
ss
or
adc
cmpsb
mov
add
out
ljmp
xor
jbe
dec
rol
cs
out
adcb
cmpsl
in
pop
inc
out
adc
pop
jns
xchg
adc
enter
clc
push
sbb
ljmp
mov
arpl
sub
bound
and
sub
mov
push
mov
test
nop
xchg
jp
lret
stos
xchg
stc
lock
mov
push
clc
popf
adc
lods
cmove
jle
je
clc
cmp
arpl
sbb
inc
iret
fs
jne
icebp
fbld
mov
ljmp
sub
mov
cmp
mov
push
insl
add
add
jo
jns
mov
orb
push
xchg
mov
testl
out
pop
lock
xor
jp
mov
mov
mov
adc
add
cmp
gs
shrb
pushf
js
xchg
cli
sub
jae
test
push
inc
das
pop
icebp
sbb
rcl
dec
inc
enter
sub
adc
sbb
lods
or
sub
xchg
xchg
jmp
popf
aas
add
mov
cmp
pop
les
lret
in
in
push
xchg
cmpsl
jnp
lea
sub
dec
xlat
jp
mov
ljmp
iret
pop
xchg
cltd
scas
add
cmp
mov
push
lret
aaa
sbb
sbb
cmpsl
out
push
call
fnstsw
dec
xchg
cmp
icebp
and
pop
mov
lods
sti
sbb
in
cmpsb
jl
xchg
popa
ret
ja
testb
and
gs
xor
in
stos
mov
cmpb
test
cmp
gs
xlat
mov
call
add
mov
pop
lock
mov
repnz
andb
aaa
sbbw
sub
sbb
dec
movl
cmc
sub
ljmp
data16
inc
mov
push
pop
gs
repnz
and
outsl
and
test
sub
inc
sub
mov
push
fnstcw
sub
or
jbe
in
lea
mov
sarl
mov
xchg
rolb
pop
stos
hlt
pop
inc
inc
sbb
add
push
jecxz
addr16
cmp
ds
pop
add
sbb
mov
stos
orb
mov
int
or
push
popf
test
sub
inc
jl
mov
mov
jb
cltd
dec
mov
sub
adc
push
icebp
mov
pop
mov
fsubl
sbb
mov
test
lea
and
mov
push
repnz
daa
in
mov
clc
and
jg
and
shll
jbe
inc
sbb
loop
fdivrs
mov
pop
data16
xchg
sbb
and
cmpsl
icebp
pop
fs
test
arpl
sbb
ja
lock
or
pop
inc
addl
add
outsb
ljmp
mov
arpl
outsb
in
sbb
cli
jbe
mov
add
mov
mulb
mov
or
lcall
push
pop
jmp
mov
xchg
shl
pop
mov
mov
lods
mov
jns
pop
call
sbb
pushf
mov
test
test
outsb
fisubrl
or
ja
scas
or
loope
sbb
enter
mov
adcb
icebp
fisttps
imul
je
cmpsb
in
jmp
xchg
sbb
pop
stos
mov
xor
mov
pop
test
sub
dec
pop
jo
xchg
call
or
xchg
or
and
pop
xchg
sbb
add
dec
jbe
xor
mov
sub
push
dec
jns
in
dec
cmp
push
pop
push
mov
push
mov
sbb
shrb
addb
icebp
jne
push
ds
inc
dec
xor
xchg
stc
test
rorb
fisttpll
bound
cmp
and
jg
clc
lods
les
sub
popf
mov
sahf
xor
nop
cltd
shlb
addr16
adc
mov
jb
test
pop
les
es
push
sbb
mov
testb
fisttpl
sub
inc
push
hlt
mov
pop
sbb
xor
ss
dec
jge
xlat
sub
dec
mov
sub
dec
fisttps
aas
mov
lds
clc
imul
push
repnz
dec
xchg
inc
jmp
mov
movsb
nop
arpl
mov
add
mov
inc
push
jns
rolb
mov
adc
imul
xrelease
aas
sub
inc
add
loop
xchg
ss
leave
addb
out
sbb
andb
xchg
cmp
rolb
mov
fwait
push
scas
mov
popf
fnstenv
sahf
out
insb
mov
and
popf
lds
dec
mov
ret
xchg
in
es
icebp
fistl
push
pop
add
pop
mov
cmp
fcoms
mov
or
cmp
jmp
xchg
xor
fisubl
daa
cld
ljmp
adc
push
cmc
ret
push
jnp
ret
clc
mov
mov
cltd
mov
xchg
jmp
ret
xchg
stc
jge
xchg
inc
dec
xchg
addr16
in
jne
lret
in
lret
mov
dec
push
test
push
adc
divl
mov
in
mov
aas
push
stc
mov
hlt
out
mov
dec
testb
sub
and
jg
mov
inc
and
fisttpl
add
ret
in
push
clc
mov
pop
jb
out
sub
int
aam
jnp
mov
daa
out
lock
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
sbbl
xor
sbbl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jb
movl
push
movl
mov
push
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
orl
xor
subl
push
addl
mov
andl
add
mov
mov
addl
test
je
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbb
mov
mov
and
mov
xor
movl
cmpl
je
cmpl
jg
jmp
push
push
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
add
mov
sub
mov
add
xor
adc
add
add
mov
mov
add
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
push
push
call
jmp
add
mov
movzbl
add
mov
mov
xor
mov
or
add
andl
mov
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jb
mov
andl
sub
subl
lea
xorl
xor
adcl
xor
cmp
je
mov
sbb
mov
mov
xor
add
movl
cmp
movl
jne
xorl
pushl
call
xor
mov
mov
mov
sbb
mov
sbb
mov
xor
add
movl
cmp
je
pushl
pushl
movl
call
mov
adc
mov
adc
mov
subl
xor
adcl
add
cmp
movl
je
xor
add
and
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
adc
mov
mov
orl
add
and
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
adcl
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
jmp
mov
mov
pop
fildll
adc
addl
mov
pop
jmp
aaa
jg
cmp
lcall
and
rclb
fnsave
jge
sub
inc
cmp
mov
jno
add
fildl
and
mov
jb
lret
push
aas
push
sbb
bound
jne
push
mov
push
add
cmpsl
out
jmp
inc
jmp
cmp
mov
inc
cmp
mov
mov
pop
xchg
stos
cmp
adc
mov
cltd
jbe
lahf
sbb
dec
loop
mov
push
cmp
rorl
ja
mov
popl
sahf
in
out
arpl
cmc
inc
insl
cmp
add
lds
jp
sub
int3
aad
pop
xlat
nop
icebp
mov
int
adc
hlt
cmpsb
inc
cld
inc
jae
mov
adc
lock
jnp
icebp
mov
sti
push
scas
cld
ret
call
pop
xor
movsb
mov
sub
jne
shr
nop
enter
inc
push
jp
sbb
in
or
mov
or
push
outsb
js
idiv
pop
mov
insb
xlat
sub
mov
data16
or
data16
imul
push
out
in
movsb
testb
mov
fwait
shlb
rcrl
gs
jle
das
jecxz
pushf
in
dec
ljmp
cmc
bound
mulb
shrb
dec
je
movsb
or
adc
out
bound
leave
scas
cmpsl
adc
dec
mov
mov
out
add
xor
std
push
add
push
scas
int3
push
clc
popa
test
xchg
cmp
cltd
mov
jno
xlat
dec
lea
roll
push
xlat
cmc
push
fnsave
mov
xlat
jb
into
or
push
lret
mov
std
in
inc
into
mov
call
add
sbb
inc
dec
sub
scas
mov
cmpsl
or
inc
xlat
sub
iret
mov
pop
push
and
adc
mov
cltd
inc
push
pop
fildl
in
mov
and
repnz
mov
xor
push
lods
js
fcmovbe
test
iret
jle
jg
insb
movsl
lea
adc
js
mov
xchg
imul
int
mov
mov
adc
mov
adc
jmp
dec
lods
imul
imul
out
or
int3
leave
sbb
popf
mov
cli
jo
loop
pop
out
mov
push
sete
push
cmc
cltd
bound
push
inc
cltd
adc
sbb
or
adc
add
jmp
mov
xchg
insl
xchg
xor
ss
push
lret
cmp
adc
sarl
jno
loopne
inc
aas
test
pop
xor
mov
inc
jne
sar
jp
pop
das
js
in
mov
test
and
or
movsl
ror
imul
jns
ret
cmp
adc
ja
mov
jp
and
ss
cltd
mov
sub
in
add
icebp
fstps
sbb
pop
mov
ja
inc
cmp
ljmp
lret
cmp
addr16
sbb
fwait
inc
mov
pop
adc
dec
into
xor
ljmp
jp
push
les
loopne
pop
daa
lock
cmp
shll
inc
dec
movsb
pop
mov
pop
shlb
in
cli
or
test
sbb
bound
or
sbb
mov
fdiv
test
pop
clc
jg
fistpl
inc
aas
xchg
and
push
and
push
jmp
fldt
xor
dec
and
lds
xor
push
jb
sarb
fistl
jecxz
xlat
ds
mov
jne,pt
sub
loope
pop
in
mov
mov
out
fsubrp
add
xchg
roll
ror
jbe
xchg
sub
gs
mov
addb
dec
dec
loopew
pop
sub
dec
test
cmp
mov
push
std
les
push
popf
inc
or
lret
sbb
xchg
lods
pop
cmp
push
xchg
cs
mov
ficoms
arpl
fisubs
negl
int3
fstl
cld
scas
mov
mov
jmp
jo
inc
das
mov
bsr
insl
imul
dec
leave
ljmp
jo
shrb
js
lret
and
icebp
jmp
out
pop
out
std
xchg
xchg
jnp
scas
js
jb
fisttps
ss
jbe
gs
mov
fildll
sub
push
jo
push
outsl
dec
pop
jg
js
shlb
mov
test
sahf
sarb
mov
inc
cmp
inc
jp
in
loope
decl
cmp
imul
add
xlat
push
or
imul
xchg
add
xor
test
xor
push
js
test
mov
add
pop
sar
fwait
lock
es
inc
cmp
flds
sarb
clc
pusha
jge
call
aad
sbb
mov
cmp
mov
xor
lock
mov
sub
sub
shl
js
mov
cmp
mov
mov
and
sbb
call
mov
push
mov
jp
jbe
popa
xchg
lahf
lds
imul
jb
add
nop
inc
and
push
sbb
mov
mov
and
mov
ret
rolb
fsubs
stc
cs
sbb
std
jp
and
and
xchg
ja
sbb
sbb
movnti
mov
xchg
adc
xchg
mov
xchg
shrl
add
stc
xor
push
pusha
ljmp
mov
pop
mov
stc
adc
and
inc
cltd
adc
xchg
clc
jnp
das
sbb
adc
roll
nop
adc
pushf
sbb
cmp
pop
jnp
sub
cmc
mov
repnz
add
ret
adcl
jns
mov
and
mov
xchg
cmp
movb
cli
mov
ret
fdivrl
add
push
add
and
lock
xchg
xor
pop
pop
xchg
rcll
push
sub
or
fwait
and
jo
fsubl
repz
aam
fdivrl
xor
test
push
mov
xchg
fsts
add
sbb
xchg
cmc
test
xor
push
xchg
flds
and
dec
cmp
call
imul
imul
out
mov
clc
push
xlat
daa
adc
inc
xlat
xchg
add
adc
jmp
sbb
mov
leave
leave
or
mov
or
fsubrs
cli
sbb
aam
fnstenv
loop
xlat
lock
sbb
test
cwtl
scas
pop
jge
pop
and
pop
mulb
lds
jg
rcrl
insb
ljmp
mov
xchg
popf
fs
inc
lret
popf
or
xor
and
mov
adc
cmc
icebp
mov
inc
test
or
imul
iret
call
mov
push
push
jecxz
das
arpl
loope
jae
push
mov
int
or
inc
repnz
dec
lret
adc
aaa
shlb
cld
and
add
and
push
jno
sbb
push
add
cmpsb
je
ja
int3
cmpsb
clc
or
je
fcoms
xor
cwtl
ljmp
aam
mov
sbb
inc
add
adc
clc
mov
test
cmp
lahf
in
add
add
out
fsubrl
ds
mov
sub
adc
out
push
sbb
and
or
sub
pusha
ja
stos
xchg
and
test
mov
scas
ljmp
or
mov
pushf
mov
fldl
cld
push
call
jbe
sub
das
xchg
adc
and
adc
pop
addr16
xchg
insl
mov
inc
add
cwtl
fdivs
movsl
xchg
sub
sbb
frstor
mov
jne
xchg
xor
xchg
jle
lds
sti
and
nop
out
add
jp
stos
arpl
sti
addr16
add
or
dec
outsb
insb
mov
ss
clc
insl
mov
test
pop
subl
orl
in
fsub
sub
ficomps
lcall
xor
dec
fsts
add
mov
inc
loope
pop
dec
cld
clc
jle
add
fildll
shlb
jnp
cld
xchg
sbb
dec
mov
jne
stc
rolb
arpl
jne
aad
std
dec
lret
outsl
xor
lock
std
in
xchg
cmp
mov
mov
lret
lret
inc
mov
sbb
add
ret
aas
in
mov
xchg
shlb
loope
inc
and
push
push
repnz
lcall
xor
adc
stos
sbb
in
fisubl
imul
xchg
xor
inc
and
and
sbb
jae
inc
dec
xchg
push
cmp
dec
sbb
dec
iret
pop
pop
jl
mov
lods
adc
in
js
shlb
mov
in
out
in
jmp
mov
pop
inc
out
iret
cmp
lods
dec
clc
mov
xor
or
fdivs
repnz
out
xchg
in
adc
cmpsl
gs
sub
mov
adc
incl
or
adc
stos
inc
lret
add
pop
into
imul
add
jge
lods
lcall
cld
std
sbbb
sub
dec
scas
hlt
and
fwait
dec
loope
mov
lods
testb
les
ljmp
pop
mov
enter
adc
aaa
aas
inc
sub
jo
mov
aas
mov
lahf
sbb
xchg
adc
push
dec
xchg
fs
mov
dec
call
roll
aam
pop
es
jle
cmp
mov
scas
int3
or
mov
xor
out
pop
out
cwtl
push
xor
loope
push
fistps
xor
out
dec
sub
xchg
pop
adc
je
and
sbb
xchg
adc
lea
cmpsb
in
mov
mov
lods
lret
xchg
xchg
out
add
sub
cmp
enter
jnp
out
cmp
jge
sub
sbb
push
mov
jp
lea
popa
nop
mov
mov
xor
aas
xchg
int3
das
mov
stc
adc
dec
decb
push
jg
int
fbld
add
mov
xlat
movsl
lods
scas
mov
inc
xchg
push
or
std
lods
fs
inc
js
or
stos
add
clc
xor
push
push
adc
push
out
sbb
jnp
rolb
out
jg
int3
outsl
in
rolb
lahf
and
pop
fcmovb
lds
cmp
hlt
shll
movsl
rcl
dec
sub
add
sub
or
daa
push
and
sbb
xchg
cmc
lcall
mov
sbb
push
imul
adc
or
inc
or
out
jne
mov
mov
insl
stos
movsl
xor
mov
gs
pop
int3
mov
push
mov
lahf
scas
outsb
mov
push
outsl
or
and
icebp
adc
fbld
dec
lock
dec
mov
pop
jns
or
stc
cmp
dec
dec
mov
inc
mov
push
jp
cwtl
cld
sbb
mov
out
aam
fucomp
popf
mov
xchg
cmp
inc
mov
and
idivw
mov
sarl
pusha
nop
movb
orb
into
insb
xchg
xchg
movl
fdivrs
stos
cs
inc
daa
mov
xor
out
mulb
aas
cld
lcall
icebp
mov
lods
dec
ret
ljmp
movsb
lret
jp
iret
das
mov
jg
imul
mov
out
jns
ret
adc
bound
test
sbb
cmp
test
cld
sub
sbb
std
in
loopne
mov
pushf
mov
imul
cltd
icebp
jnp
addr16
cmp
jb
je
or
loop
or
mov
sti
dec
mov
and
sbb
inc
xor
fwait
jns
pusha
cmp
dec
pop
int
mov
xchg
cli
sub
push
jg
mov
or
xchg
out
cmp
aad
or
mov
aad
cmp
xor
movsb
iret
jae
jae
clc
stc
movsb
orl
xchg
adcb
je
adc
mov
jae
test
jns
mov
sbb
insb
lcall
subb
and
cli
pop
mov
in
std
icebp
pusha
mov
adc
xchg
stos
push
dec
arpl
shl
mov
aas
ljmp
mov
cmpsb
inc
inc
cmp
adc
out
and
das
flds
sbb
jbe
mov
mov
pop
jmp
fdivl
iret
and
std
push
pop
push
pop
andl
orb
pusha
add
mov
mov
add
out
push
push
jg
fcomip
stos
fsubr
inc
in
stos
xchg
mov
repz
mov
push
inc
mov
push
mov
fcomps
and
pushf
out
fdivrl
xor
jmp
repz
in
cltd
mov
pushf
or
push
jecxz
jp
jno
mov
and
adc
out
js
scas
xor
sbb
fs
ds
fimull
sti
cmp
roll
xor
push
icebp
xlat
mov
sub
aam
sub
loope
int
stos
inc
sti
sti
ret
jmp
sbb
inc
adc
cmp
enter
adc
rolb
mov
mov
daa
dec
ja
movups
ret
xor
sarl
into
xchg
add
and
ja
stos
dec
repz
and
cmp
mov
jns
fdivl
lret
push
in
int
adc
fimull
outsl
jg
sub
in
pusha
pop
aas
daa
dec
call
repz
mov
daa
sbb
push
out
shr
cmp
mov
adc
sub
jecxz
mov
mov
in
inc
or
jne
xorl
stos
cmp
or
push
mov
cld
adc
jne
or
mov
cmp
dec
inc
pop
mov
jmp
ficoms
inc
and
sbb
push
sub
and
leave
in
pushf
hlt
inc
mov
mov
loop
xchg
les
mov
lret
data16
add
or
mov
int3
pop
js
cmp
aaa
lock
aas
cltd
mov
add
call
xor
push
pop
inc
inc
push
xchg
jge
lahf
cld
sbb
mov
xchg
ja
jecxz
decb
jns
sub
stos
shl
call
inc
lret
std
inc
pusha
sbb
add
cli
stos
mov
popf
ds
cmpl
push
sub
out
lcall
jg
dec
mov
mov
or
push
push
cmp
ret
inc
loope
mov
mov
test
push
xchg
inc
jle
ljmp
xorb
xchg
call
jns
nop
pop
aaa
loope
xor
add
and
jo
jge
xchg
fstps
dec
mov
xor
std
dec
pushf
sbb
push
adc
fidivl
add
test
xchg
xchg
leave
xchg
bnd
mov
xchg
or
cli
aad
rol
fadds
pop
repz
lret
or
fmull
push
pushf
sbb
adc
push
lcall
adc
lcall
inc
dec
pop
lods
andb
arpl
daa
jge
cmp
xor
cmp
mov
subb
push
jnp
divb
mov
loope
popf
push
daa
cli
das
jle
mov
xor
adc
test
ds
xlat
cltd
inc
and
imul
pop
or
cs
mov
shrb
jmp
je
mov
dec
push
adc
inc
pusha
lds
leave
scas
jne
pop
mov
inc
mov
cwtl
dec
add
and
subl
notb
popa
scas
outsb
daa
inc
insb
jb
sbb
outsl
jmp
mov
inc
xchg
jnp
fstp
loopne
scas
mov
mov
mov
cltd
pop
into
loopne
lock
xchg
or
pop
std
mov
jle
into
sbb
mov
cli
lahf
inc
stos
add
ja
or
repz
nop
push
mov
fisttpl
fmull
popf
aas
xlat
ficompl
cmpsl
das
stc
out
mov
jge
test
pop
xorb
adc
int3
rol
dec
xchg
push
push
push
orl
pushf
mov
lods
aaa
push
pop
lahf
stos
dec
jno
pop
dec
xor
js
xor
out
jp
lret
pop
jg
adc
pmullw
ret
mov
in
pop
cmp
repz
inc
inc
and
xchg
dec
jno
jae
mulb
les
pushf
in
cmpsb
fcmovu
sub
adc
loopne
out
jae
mov
cmp
push
xor
push
or
rorl
xlat
insb
fstp
in
rcll
ret
or
fistps
xchg
push
cmp
jl
mov
orb
inc
cmp
mov
insl
test
cmp
fs
push
dec
nop
or
ds
xor
stc
inc
push
scas
jmp
inc
xchg
cmp
mov
sbb
pop
and
test
xor
stos
mov
sbb
sub
addr16
inc
dec
cli
pop
jge
dec
popf
xor
call
jg
jbe
movb
cmp
xchg
stos
das
lods
loope
cmpl
cwtl
notl
pop
pop
cltd
imul
jle
or
fcomi
add
pop
mov
outsl
xchg
pop
lock
sub
aam
lret
mov
sbb
icebp
cmp
push
shll
sbb
hlt
inc
cwtl
mov
shll
push
out
cld
xor
pusha
mov
dec
and
xlat
dec
push
rorl
mov
pop
xor
or
xchg
mov
shll
mov
xor
iret
dec
and
xchg
lods
and
dec
mov
in
xor
sub
and
inc
popa
hlt
sbb
xchg
or
inc
enter
leave
in
je
inc
fwait
dec
int3
ficoms
lret
and
push
cmc
dec
cmp
inc
xchg
pusha
and
dec
jl
mov
das
pop
mov
lods
mov
mov
cmp
stc
mov
imul
push
sar
push
cmp
xor
fwait
mov
gs
adc
enter
inc
imul
push
inc
sub
out
mov
push
subl
mov
icebp
mov
ss
add
fiaddl
lock
test
cmpb
pop
fs
sbb
lret
jle
jle
mov
jmp
fwait
adc
add
inc
mov
incl
jl
enter
add
loop
add
cwtl
in
cli
sahf
dec
ret
cmp
loopne
aas
pop
inc
mov
cmp
mov
aas
jb
and
in
outsb
repnz
add
addr16
mov
sub
pop
push
out
andl
push
pop
stos
fucomp
lds
pushf
adc
inc
add
xor
sub
outsl
jle
xchg
xor
mov
out
and
adc
lock
sub
iret
cli
jge
add
dec
fnstsw
jge
inc
cmpsl
aaa
pop
stos
sahf
aad
inc
pop
mov
pop
cmpsl
cmp
xchg
sarl
xor
jmp
mov
insb
inc
lcall
lds
cmpsl
mov
aas
rcrl
test
inc
sub
pop
inc
leave
pop
stos
jge
cmc
lods
dec
dec
rcrb
shll
and
ja
push
xchg
mov
cmpsb
loopne
in
xchg
cmp
js
les
stos
add
and
adc
stos
cld
sbb
push
mov
aas
popa
ss
inc
cli
arpl
pop
pop
ljmp
push
xor
xchg
movsl
mov
jp
loope
or
pop
add
jmp
fadd
dec
test
lahf
std
pop
mov
and
lods
jb
aam
mov
lea
fstps
jmp
inc
dec
sub
out
int
push
jnp
xchg
push
out
adc
test
pop
adc
out
or
clc
out
out
pop
jmp
cltd
dec
cmp
jb
pushf
cmp
aas
push
mov
push
mov
add
test
enter
sbb
cwtl
data16
leave
js
outsb
xor
inc
lds
lret
inc
outsb
push
sbb
ja
mov
aad
inc
or
fwait
mull
aaa
inc
xchg
pop
lds
add
test
add
mov
leave
jmp
idivl
pop
cmp
xor
cli
ljmp
lret
aaa
fsubp
push
dec
mov
cmp
mov
and
pop
jge
out
mov
xor
cmp
stos
mov
and
mov
mov
shll
xor
sub
or
sahf
mov
pop
aas
arpl
int
outsb
inc
mov
sbb
jmp
inc
enter
in
and
pop
fwait
adc
sar
mov
mul
cltd
mov
les
or
add
jecxz
add
divb
dec
les
sbb
js
jp
addr16
clc
pop
mov
pusha
fsubrs
je
mov
or
inc
scas
andl
stc
fisttpl
fldt
jae
mov
pop
aaa
jnp
scas
movl
xchg
add
test
xchg
loop
xor
or
pop
or
stc
daa
ror
scas
xor
mov
outsb
jmp
ret
dec
stc
ja
rcrl
test
pop
iret
push
or
dec
jne
jne
ret
popa
mov
mov
push
push
cmc
or
sub
mov
fsubl
inc
add
sarl
in
mov
movsb
sub
test
or
cld
push
and
sbb
movb
push
cli
adc
lods
sub
pop
cld
mov
jl
mov
shr
in
sbb
sub
mov
popa
ljmp
int3
mov
pushf
movsb
xchg
dec
movsl
xchg
or
pop
lea
pop
jp
daa
mov
xchg
sbb
mov
fldcw
bound
cs
test
inc
shrl
shll
je
xor
cmp
push
hlt
adc
jne
cmp
adc
jae
rol
pop
ds
in
lea
adc
icebp
loopne
outsb
or
xchg
outsb
stc
lcall
cmpl
ds
mov
inc
test
in
push
or
add
push
jmp
pop
or
addr16
dec
adc
sub
mov
outsb
in
fnsave
cmp
and
mov
sub
std
das
roll
jle
sbb
xchg
sub
push
push
sbb
jns
adc
xlat
fdivrl
xor
push
fbstp
pop
stc
lods
cmp
adc
inc
or
out
das
aad
into
int
out
xlat
mov
mov
shlb
popa
mov
dec
out
std
adc
or
push
mov
stos
or
movsb
insl
fisttpl
pop
nop
pop
sar
xchg
mov
inc
add
mov
sub
lods
lock
sbb
mov
iret
ds
mov
ret
scas
jnp
jb
iret
int3
push
mov
ja
jmp
lahf
fnstsw
adc
sub
adc
push
ja
dec
push
adc
mov
jae
pop
mov
cmp
push
aas
icebp
adc
scas
insb
pop
mov
aas
repnz
cmp
push
cs
jne
and
push
mov
or
sub
ret
dec
nop
push
nop
cmc
push
popf
jns,pn
lahf
fsts
pop
hlt
mov
mov
notl
dec
sub
in
out
or
es
ja
pop
inc
fbstp
dec
sbb
bound
pushf
adc
mov
adc
sub
lret
lock
iret
mov
mov
sbb
adc
push
adc
push
fdivrs
jle
mov
inc
sub
lods
sbb
scas
subb
sub
rorl
inc
jle
fnstenv
pop
and
inc
lret
sti
inc
inc
loope
xchg
mov
out
push
xchg
pop
sahf
dec
xor
int3
jne
das
xor
sub
mov
sbb
decb
or
jge
jbe
jae
xlat
push
cltd
sbb
rcll
lcall
jg
icebp
scas
aam
push
push
test
mov
mov
enter
inc
nop
cmp
push
cmp
sbb
ret
inc
lret
inc
insb
xor
sub
in
push
push
pop
mov
int3
inc
and
mov
dec
dec
out
mov
jmp
fadd
js
fistpll
addr16
pop
cmp
and
cmp
fsubrs
push
aaa
fwait
sbb
sbb
xor
aaa
mov
lods
pop
push
rcll
jmp
xchg
mov
jecxz
sub
push
jns
lods
not
outsb
mov
add
sbb
icebp
cltd
imul
inc
fiadds
inc
das
loop
or
mov
or
test
fwait
in
lea
lcall
jl
enter
cmc
mov
dec
aad
mov
mov
cmp
pop
lcall
clc
and
sarb
mov
pop
test
push
icebp
or
in
inc
iret
cmp
or
pop
sub
mov
ds
jnp
imul
xchg
and
stos
push
jno
test
mov
xor
or
mov
mov
mov
aam
sbb
pop
imul
aam
jnp
jnp
pusha
dec
dec
cmp
jmp
xor
int3
gs
shll
xchg
sub
mov
sub
call
cli
cmp
sahf
add
inc
xchg
mov
pop
frstor
icebp
test
inc
data16
pushf
call
and
nop
pushf
stos
dec
mov
cmp
shrl
pop
adc
add
xchg
addb
mov
rolb
push
clc
loop
das
and
xchg
jb
pop
mov
repz
ret
hlt
das
pmaxsw
push
and
mov
ss
sbb
xor
lds
repz
shrb
pop
clc
inc
pop
adc
dec
mov
sbb
call
fdivrl
fldcw
lods
rolb
insb
mov
enter
arpl
mulb
bound
pop
pop
notl
pop
aam
scas
out
mov
mov
clc
fs
inc
movsb
or
sti
xchg
in
and
mov
cmc
fcmovne
int3
fldt
push
fisttpl
in
fldcw
sti
aad
xor
mov
icebp
jp
outsl
lds
scas
pushl
ss
or
dec
xor
cltd
inc
mov
adc
ljmp
mov
aaa
pop
adc
xor
pop
popa
fs
push
mov
popf
push
pop
iret
add
shrb
mov
fs
jle
fldenv
cmp
in
mov
mov
mov
ss
mov
pop
inc
lea
popf
add
and
xor
sarl
xchg
les
daa
dec
sub
clc
pushl
inc
js
xchg
jecxz
adc
movsl
fmuls
idiv
imul
dec
adc
mov
push
sti
and
jmp
das
mov
lcall
adc
add
outsl
push
lods
mul
dec
shll
int
lret
clc
lock
out
adc
loopne
add
and
sub
sbb
cmpsb
test
pop
leave
lea
cltd
xor
cmpsl
push
int3
pop
adc
cli
pop
lahf
out
pop
je
pop
add
jae
scas
mov
fwait
adc
jl
or
int3
test
mov
std
fidivs
cmp
and
sub
push
jle
lds
test
dec
and
aad
shrb
and
sbb
xchg
jge
loopne
shl
xor
mov
cltd
ljmp
bound
push
lea
lock
sub
sbbl
jp
sbb
inc
movsl
movsb
addr16
inc
push
xchg
cmp
stos
ss
mov
xorb
inc
stos
xchg
mov
adcb
daa
sub
sbb
frstor
xchg
dec
push
clc
iret
fyl2xp1
js
pop
nop
imull
jge
leave
add
cmp
das
repz
jp
dec
imul
scas
mov
test
aas
jnp
pop
aas
cmp
inc
and
sub
mov
mov
gs
inc
jmp
mov
insl
mov
es
jbe
xor
push
cmp
ret
cmpsb
call
test
push
mov
xchg
loopne
ret
decl
cs
roll
rorb
dec
mov
in
in
mov
dec
inc
jecxz
adc
jne
out
pop
mov
jbe
cmp
or
insb
jp
or
or
mov
xchg
mov
mov
std
sbbb
fsubl
int
push
sub
ficomps
cmpsb
push
pop
xor
mov
push
shlb
flds
dec
sub
inc
cmpsl
seta
mov
xor
pop
ljmp
xchg
and
bound
out
leave
adc
loope
sub
ja
enter
cld
jg
imul
arpl
popf
mov
xchg
cmpsb
sbb
sub
inc
hlt
push
sub
orb
xchg
pop
or
fwait
je
adc
sbb
es
push
mov
loopne
mov
xor
pusha
out
or
sahf
mov
std
fidivl
mov
es
lret
pushf
je
ret
mov
or
out
in
das
bound
jle
mov
adc
cmp
or
mov
mov
add
jno
outsb
mov
fistl
into
inc
or
mov
xchg
xchg
pop
shll
adc
movsb
adc
inc
lret
adc
jnp
ljmp
imul
pushf
cmpl
test
fistpll
sti
das
outsl
inc
add
fisttps
cs
insl
lea
lods
sub
xor
mov
inc
insb
cs
mov
imul
enter
sub
in
or
ret
push
lahf
and
add
stos
cmp
push
push
adc
and
mov
push
xor
shrb
xchg
cmpsb
mov
xor
lock
xorb
test
add
cs
mov
add
test
lcall
mov
mov
add
jmp
cmp
inc
or
xchg
aaa
jge
filds
daa
push
xchg
scas
cld
in
test
outsb
and
sbb
or
outsb
not
clc
cmp
and
idivl
and
jno
ret
test
fdivl
and
push
or
test
cmc
jb
add
hlt
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
jmp
or
mov
into
and
and
push
pushf
sbb
andl
or
stos
pop
out
inc
out
repz
fsubr
dec
dec
or
in
mov
pop
cmpsb
mov
pusha
aam
mov
rcr
mov
data16
jno
idivl
arpl
mov
fidivrl
popf
sbb
lcall
pop
inc
pop
mov
jg
mov
lret
leave
dec
jle
iret
nop
subl
push
cld
lock
das
mov
aam
lods
icebp
ss
lcall
insb
jecxz
cli
cltd
out
jle
mov
xchg
daa
fisubs
inc
repz
daa
lods
outsl
stc
movsl
ret
xchg
stc
scas
pop
push
movsl
lods
cmp
idiv
es
sbb
imul
inc
fldenv
fwait
push
icebp
adc
cmp
lock
out
shl
aad
mov
aaa
hlt
dec
les
ljmp
jmp
mov
or
aad
loop
in
xchg
out
test
icebp
adc
or
mov
inc
or
mov
dec
ss
es
sub
xchg
ret
rol
repnz
inc
fcomp
std
and
push
icebp
cmpsb
pop
das
addr16
pop
out
mov
dec
jb
push
add
add
fcmovnb
pop
dec
inc
stos
leave
pop
jp
pusha
mov
add
cmp
iret
out
leave
mov
push
imul
test
loope
push
adc
inc
sahf
cmpl
xor
lock
sub
in
jne
insb
cmp
push
mov
adc
insl
dec
leave
imul
hlt
outsl
sub
mov
imull
mov
in
xor
insb
rcr
test
icebp
sub
inc
mov
stos
pop
inc
inc
pop
test
loope
subl
aaa
cmpsb
mov
in
scas
je
data16
lods
and
in
push
xchg
adc
int3
insl
sub
adc
push
jno
insl
loopne
xchg
daa
inc
imul
xchg
or
pushf
cs
xor
iret
subb
je
nop
xchg
push
xchg
xorl
loop
push
push
adc
fldt
pop
sbb
jb
or
lock
cli
clc
outsb
or
jne
cmp
jp
mov
inc
rcrl
mov
in
cmp
or
in
cmp
sub
aam
pop
jge
daa
aam
jae
scas
mov
dec
and
in
push
das
cmp
mulb
imul
int3
std
push
mov
out
and
dec
fistl
inc
push
test
popa
cmc
shlb
ja
jo
adc
inc
xor
adc
sti
es
mov
dec
das
mov
lahf
sbb
daa
xor
loop
rcll
out
fwait
loop
inc
outsb
insl
lock
mov
mov
repnz
mov
insl
push
lahf
dec
dec
fmuls
dec
int
xchg
call
jbe
mov
pusha
and
mov
mov
mov
outsb
xor
addr16
movsl
popa
stc
dec
adc
push
aaa
out
out
mov
xchg
xacquire
ja
imul
jmp
pop
and
xlat
lock
pop
xchg
into
xchg
inc
adc
lcall
js
icebp
and
cmp
add
and
cmp
mov
xchg
cmpsl
lahf
call
push
daa
mov
stos
push
sub
les
idivb
sub
mov
push
sub
pop
xchg
pop
jb
sbb
or
out
push
or
mov
xchg
or
outsl
or
mov
cmc
cs
lods
sbb
clc
leave
outsb
js
pop
lods
cmp
adcl
pop
test
orb
jp
fcoml
clc
lahf
mov
std
xor
adc
aam
stos
adc
sbb
lods
xor
fimull
sub
out
cmc
ror
xor
scas
bound
dec
dec
test
dec
inc
sbb
aaa
adc
sub
dec
hlt
mov
arpl
not
scas
mov
out
dec
cmpsb
xor
xorl
pusha
mov
das
pop
nop
aam
jl
repnz
push
xorb
rorb
add
or
idivl
int
clc
push
lret
lods
xor
cmp
pop
ljmp
mov
dec
and
jno
punpckhdq
mov
dec
nop
lds
in
insl
dec
mov
xchg
jns
test
pop
cmp
xor
aaa
ljmp
pop
test
inc
mov
mov
inc
jae
inc
jecxz
in
lock
xor
xor
dec
js
lods
and
das
dec
push
stc
xchg
mov
jne
pop
fisttpll
std
cs
ja
adc
cmp
dec
stos
test
xor
and
fadd
ret
jbe
cmp
movzwl
and
test
xchg
xchg
sbb
lret
out
pop
dec
jp
lods
fdiv
fldl
jmp
test
test
push
aam
movsl
lret
mov
xor
testb
mov
mov
aam
sbb
arpl
push
dec
or
cmp
sar
dec
jmp
lea
enter
divl
fildl
roll
imul
add
fisubl
mov
dec
imul
pushf
repz
xor
bound
pop
or
fdivs
cmp
cmp
daa
subb
popa
test
arpl
xchg
jl
pop
andl
cmpsb
dec
adc
cmpsb
test
int3
adc
mov
sbb
mov
test
push
xchg
fimull
sbb
jne
sbb
pop
sub
pop
nop
push
fldcw
xor
or
jp
in
xchg
sbb
fldl
data16
shll
inc
ss
xchg
and
jge
lds
into
pushf
repz
mov
mov
js
data16
lock
mov
loopne
lcall
fdivl
add
es
add
loope
mov
fnsave
insb
push
leave
xchg
or
mov
pop
sub
jnp
mov
icebp
sub
mov
mov
sbb
lret
imul
fcoms
inc
sbb
lcall
jge
mov
cmp
lock
xchg
in
out
push
and
movsb
mov
into
inc
dec
ret
pop
jg
ret
pop
loop
push
sub
popa
mov
lcall
cwtl
out
call
lahf
mov
dec
out
pop
sbb
scas
mov
cltd
insb
sbb
into
lea
mov
xor
out
fcomps
push
xchg
pusha
pop
and
pop
stos
cld
bnd
mov
xor
add
lret
and
cmc
jb
js
inc
cwtl
rclb
add
clc
xchg
je
dec
mov
jmp
shll
pop
xchg
shl
xchg
add
jb
rorl
push
mov
dec
pop
or
dec
cmp
ret
xor
or
and
jae
je
and
mov
imul
or
or
pop
incl
ljmp
sbb
push
mov
add
ljmp
jae
clc
enter
scas
hlt
rol
mov
loopne
dec
jp
mov
adc
jl
test
movd
add
ja
mov
ss
call
out
leave
xor
jbe
or
push
jl
push
mov
lock
imul
xor
lock
mov
pop
jl
int
or
in
ljmp
sub
loope
xlat
mov
sbb
xchg
cmp
jle
xchg
mov
dec
push
jbe
xor
cmc
jge
dec
pop
imul
out
pop
insl
jecxz
fwait
dec
xor
das
cmp
jle
pop
pop
rcll
aad
lret
fmuls
shlb
imul
xchg
es
in
inc
lcall
cmpb
gs
mov
stos
movsl
les
pop
aam
push
out
test
stc
out
add
es
lcall
or
adcb
movl
jae
sbb
and
jne
outsl
insb
push
dec
mov
dec
popa
call
insb
push
into
sbb
pop
inc
lahf
sub
decb
in
iret
or
in
push
cmp
adc
in
xchg
dec
push
jo
jg
jecxz
std
subb
cwtl
test
adc
mov
sahf
cld
cltd
pop
mov
and
push
xchg
fdivs
xchg
add
jo
cmc
cmpsb
adc
adc
aam
movsl
insb
mov
push
and
add
dec
jl
xor
cmpb
stos
rcrb
mov
femms
daa
fidivrl
add
flds
lahf
xchg
cld
rcr
cmp
outsb
aas
inc
lock
inc
in
adc
xchg
adc
add
cld
lcall
mov
ljmp
mov
imul
cmp
cmpsl
add
icebp
mov
mov
sbb
fstpt
dec
pop
pop
add
stc
std
xchg
out
push
xchg
inc
mov
es
sahf
ja
sub
fst
fwait
xchg
push
in
aas
cmp
ja
push
loop
call
push
cwtl
sub
das
popa
mov
add
mov
insb
lret
aas
ja
mov
aam
xor
aas
cmp
imul
push
mov
cmp
shl
gs
lods
pop
lds
xchg
mov
insb
add
ds
jo
dec
inc
push
push
aas
push
mov
mov
adc
lds
adc
sub
and
inc
mov
push
ficoms
in
fdivrs
and
sbb
cmc
jne
pop
das
xor
test
arpl
gs
xchg
sub
cltd
sbb
mov
add
enter
pop
rolb
mov
push
mov
aaa
mov
lods
cmp
popl
xchg
in
adcl
sub
test
push
mov
mov
mov
pop
mov
out
jl
xchg
clc
mulb
mov
dec
add
shll
loopne
and
leave
nop
and
lods
sub
inc
jo
push
shr
out
out
test
lcall
ret
scas
and
loopne
cmp
mov
addr16
xlat
into
loopne
push
pop
jle
adc
xchg
adc
aad
push
cltd
jmp
cmp
ret
je
fldenv
test
repz
in
dec
jno
push
mov
je
pop
in
in
xchg
add
aaa
bnd
outsl
mov
das
mov
bound
divb
cs
push
add
fidivrs
dec
dec
jp
daa
pop
outsb
sbb
dec
stos
xchg
cld
das
mov
ss
push
into
loopne
mov
adc
add
jnp
and
dec
mov
sbb
dec
push
pop
loop
insl
xchg
aam
outsl
jmp
cltd
fstl
add
fidivs
testl
sti
dec
insb
mov
aas
mov
or
mov
add
sbb
pop
dec
adcl
les
pop
sahf
sub
push
pop
cwtl
push
movb
cmc
cmp
mov
xchg
data16
mov
decb
jae
mov
lret
mov
fldcw
dec
inc
fstpl
mov
and
ret
test
push
mov
lcall
xor
mov
daa
inc
jg
mov
mov
movl
sub
addl
pop
jle
stos
and
inc
fadd
xchg
jecxz
inc
loopne
negl
rcrl
add
push
adc
subb
stos
rolb
xor
jg
jl
mov
lahf
mov
shrl
orb
inc
rorb
mov
inc
xor
bound
test
pop
loope
clc
push
xchg
xor
fstp
mov
insb
cmpsl
addl
mov
mov
js
aad
cmp
dec
lea
ljmp
movsl
sub
lcall
les
lahf
lds
mov
jb
xor
cmp
test
insl
xchg
mov
jnp
sub
iret
mov
imul
lock
cmc
pop
cmp
mov
outsb
bound
lock
cmp
mov
pop
xor
ja
fnstsw
rolb
adc
push
pop
cmp
sbb
subb
aas
loop
pop
inc
cmp
movsb
mov
mov
test
cmp
xchg
mov
mov
popa
hlt
jnp
xchg
loopne
fwait
push
add
mov
jmp
inc
or
dec
pop
xor
lret
mov
cwtl
imul
pop
sahf
jo
arpl
adc
aam
xchg
sub
je
jmp
sub
push
dec
scas
stc
pop
lret
xor
xorb
mov
pop
and
add
adc
call
jmp
in
sbb
sub
stc
in
pop
push
pop
xchg
in
stc
icebp
inc
jg
mov
pop
rcrb
and
pop
sar
xchg
sub
cs
or
insl
sub
xchg
mov
arpl
cmpsl
fstpl
in
add
or
inc
push
dec
jnp
popa
fs
sub
push
fnstenv
repz
xchg
aad
into
sti
add
lea
or
sbb
add
pop
test
iret
push
mov
test
mov
sbb
mov
fld
cmp
adc
mov
shl
adc
jbe
dec
aad
sbb
or
bound
dec
fwait
push
int
xchg
xorl
mov
fs
shlb
mov
lret
std
int3
cmp
jl
inc
loop
inc
lcall
inc
das
push
xor
imul
xchg
mov
mov
inc
fadds
int
clc
pop
cmp
das
es
psllw
dec
int
negb
jge
jle
popf
xchg
inc
sub
pop
sbb
insl
cmpsl
ret
pop
xor
stos
mov
fdivp
push
fcomps
fimull
in
ljmp
popf
fdivr
in
pop
jl
xor
iret
pop
fmull
jnp
stc
sub
inc
lods
and
scas
pushf
or
cwtl
int3
pop
xor
ja
dec
inc
cmpsl
scas
ret
aas
sub
mov
ja
jp
push
push
fisttps
jne
mov
pop
mov
xchg
mov
gs
adc
sub
aad
and
inc
jo
insl
xor
aam
jg
movsb
push
sbb
and
in
jbe
ds
leave
push
repnz
dec
add
icebp
cmp
jne
inc
ret
fwait
rcrb
mov
or
cmp
repz
mov
insb
sub
jmp
es
in
mov
inc
inc
cli
fwait
imul
jle
je
push
ja
xor
mov
je
outsl
mov
dec
rorl
adc
and
mov
aaa
and
and
ljmp
enter
or
jp
test
cmp
push
inc
ret
mov
mov
push
jl
inc
js
cmpsb
fs
ljmp
push
lods
push
lock
clc
or
add
cltd
dec
sbbl
add
cli
sahf
xchg
scas
push
mov
iret
xor
addr16
in
pop
lods
repnz
and
xor
push
test
dec
dec
cmp
enter
jnp
vpunpckhqdq
pop
fstl
xor
adc
and
mov
call
js
sbb
jg
push
xor
in
xchg
ljmp
es
sarl
cmpsl
pop
es
jp
call
inc
xlat
lods
test
inc
pop
sub
add
add
push
jns
insl
jmp
daa
lcall
test
icebp
mov
shlb
sbb
pop
jnp
loope
jno
cmpsb
hlt
xchg
cmp
negb
cmp
in
subb
hlt
dec
imul
clc
sahf
imul
movsb
jecxz
add
fists
mov
mov
mov
jo
inc
data16
push
add
out
fstpl
push
stos
out
rcl
loope
add
inc
je
loop
jno
aam
or
cmp
mov
xchg
xchg
ret
cmpsb
inc
sub
mov
adc
fucom
mov
aaa
mov
std
jmp
aaa
jmp
push
ficoml
stos
inc
fists
jg
cmp
lea
jns
mov
jb
fcoml
xor
push
adc
daa
inc
push
dec
out
call
jo
inc
jb
sbb
jo
push
sbb
pop
mov
sti
out
push
ret
jecxz
mov
mov
pop
mov
sbb
leave
pushf
test
or
rol
rorb
xchg
mov
xlat
dec
push
xchg
xlat
xorb
inc
rcll
cmp
div
push
sub
or
daa
shll
andb
mov
pop
iret
add
ret
xchg
jmp
cmc
jo
movsb
mov
xlat
addr16
out
mov
jnp
or
mov
jnp
pop
lret
mov
jno
mov
je
sbb
mov
or
and
mov
pop
cmp
or
outsl
out
jp
das
inc
xlat
lea
mov
mov
repz
or
dec
pop
test
pushf
pop
pop
push
leave
shlb
lahf
movsl
mov
mov
xor
xchg
nop
push
jbe
inc
jb
int
inc
mov
icebp
xor
or
repz
mov
sti
ljmp
add
xchg
hlt
pop
movnti
add
mov
sbb
cmp
xchg
repz
sbb
aas
cmp
adc
aas
imul
mov
leave
adc
int
aad
rorb
lahf
in
mov
pop
pop
insb
jecxz
int
hlt
inc
enter
inc
push
jne
int3
adc
fcomp
inc
push
mov
mov
jno
or
out
jle
pusha
add
shlb
inc
add
jmp
je
xor
lods
imul
aaa
xchg
inc
les
lcall
insl
clc
inc
sub
clc
out
adc
mov
fdivs
mov
cwtl
fldcw
test
xchg
pop
dec
dec
pop
lret
sub
sub
push
lcall
inc
sub
lock
sub
sub
adc
rorl
fsubl
push
aaa
mov
enter
test
mov
nop
push
cmpsb
mov
inc
movsb
testb
push
fwait
ret
lods
mov
pop
cmp
pop
adcb
je
inc
ss
add
bound
scas
outsl
or
lret
fwait
pop
mov
jmp
pop
mov
sysexit
in
repz
icebp
test
xchg
ljmp
outsl
and
xchg
mov
loopne
mov
xor
in
shlb
fnstenv
cmp
and
jmp
xor
mov
jne
nop
sti
out
pop
aad
imulb
cld
sti
shlb
add
clc
pushf
in
xor
lods
test
out
dec
shll
repz
nop
xchg
popf
jecxz
femms
inc
xor
inc
add
out
dec
js
loopne
mov
sarb
outsl
fsts
das
out
xchg
push
in
stos
scas
push
mov
data16
jbe
cmp
or
scas
shll
inc
hlt
jmp
arpl
cld
adc
push
std
push
mov
test
mov
test
or
xlat
cmp
sbb
fs
scas
cmp
push
xlat
in
pusha
fildll
cmpb
sbb
loopw
mov
lock
pop
movsb
mov
sub
jmp
mov
sbb
lcall
inc
pusha
imul
in
mov
jp
bound
sbbb
cld
cwtl
test
fsubrl
lret
and
dec
je
dec
push
xor
jecxz
fldcw
push
mov
fists
and
add
and
add
sbb
mov
arpl
into
fdivrl
mov
cmovne
movsl
mov
fsubs
out
mov
loop
xchg
shlb
jg
stos
outsl
mov
mov
pop
mov
pop
lds
and
add
cs
insl
lods
rcr
jno
jecxz
mov
stos
add
pushf
cltd
or
add
sbb
cmp
aam
inc
adc
iret
in
je
mov
mov
or
fwait
in
cmp
jmp
cmp
mov
mov
mov
data16
xor
xchg
movsb
out
xchg
pop
jmp
fsubrl
jecxz
and
mov
jne
xchg
clc
sbb
jg
das
pop
xchg
xchg
push
arpl
and
dec
xchg
inc
push
xor
in
sbb
cld
cmp
mov
test
out
cltd
int
mov
movsb
cwtl
xchg
and
fadd
cli
mov
imulb
add
test
and
cmp
fs
out
das
sbb
mov
jns
fldenv
pop
sarb
loope
rolb
mov
push
push
stc
inc
mov
fmulp
jno
sbb
addr16
lods
xchg
scas
or
popa
push
int3
imul
mov
mov
ret
loope
in
int
es
fsubl
add
push
sub
mov
mov
jl
hlt
fstpt
jle
ljmp
les
aaa
pop
fadds
jae
fwait
out
pop
pop
jmp
aas
sub
mov
rol
cmp
std
sahf
cwtl
xlat
sub
inc
mov
cmp
cmp
xchg
pusha
lods
popf
fbstp
and
sbb
jno
ss
and
sub
xor
mov
mov
xchg
mov
test
xchg
loop
in
es
cmp
dec
mov
xchg
xor
test
ljmp
xchg
xor
ss
xchg
jo
push
sbbb
dec
sub
cmp
mov
mov
jp
rolb
pop
and
xor
rclb
push
lahf
mov
jne
mov
and
push
fiaddl
push
push
rorb
xchg
add
mov
xor
mov
arpl
rorl
inc
pushf
cld
rcrl
push
inc
fs
lds
lahf
dec
or
add
pop
ret
cmpsb
movsl
sete
pop
and
inc
push
push
scas
push
cmp
fimuls
ss
cltd
mov
stos
loop
in
sub
add
dec
movsb
stos
add
mov
or
icebp
out
outsl
or
inc
and
jmp
inc
push
inc
insb
and
fdiv
sub
push
cmp
sbbl
jle
or
mov
add
jecxz
dec
xor
xor
pushf
pop
cwtl
adc
xlat
add
popa
push
and
pop
pop
rcl
cld
fstps
fstpl
popf
mov
xchg
shlb
popa
out
jmp
mov
fwait
cwtl
add
sub
push
jle
outsb
stc
testl
lods
inc
aad
add
dec
cwtl
xor
aam
inc
loop
ja
pop
push
cmc
icebp
mov
push
adcl
test
push
insb
jg
outsb
pop
sbb
daa
sbb
fisttpll
xchg
movb
jmp
xchg
inc
push
loope
fsubrs
loope
dec
push
push
pop
mov
jo
in
and
out
mov
sbb
fimuls
push
xchg
std
ss
outsl
sar
aas
call
rcrb
fisttpl
inc
dec
enter
stos
pop
aas
push
adc
outsb
pop
xchg
mov
daa
sbb
push
mov
adc
cmpsl
jnp
push
xchg
dec
and
sti
stc
mov
icebp
jae
sbbb
mov
xor
sub
call
test
stos
lods
das
mul
cmpsl
in
outsl
sbbl
and
cs
subb
in
pop
mov
add
inc
sbb
insb
mov
bound
ss
mov
push
sub
bound
icebp
dec
push
jge
push
xchg
imulb
and
lret
mov
sbb
sub
out
sbb
aaa
lock
jno
andb
mov
xchg
pushl
push
sub
mov
jo
mov
inc
dec
daa
repz
js
jbe
push
inc
dec
and
sub
test
sub
insb
pop
sbb
mov
pop
mov
enter
cmpsb
dec
outsl
adc
mov
fs
inc
lods
stc
mov
mov
mov
addb
subb
dec
fcoms
andl
popa
jo
iret
jl
push
pop
into
stos
inc
in
cmp
inc
in
push
outsb
in
xor
cli
lock
stos
inc
test
pop
in
outsb
pop
add
push
jge
adc
mov
dec
xor
and
xlat
cli
and
test
je
xor
out
das
loope
gs
jp
mov
sub
lods
jp
ds
push
js
std
inc
mov
lods
hlt
stos
xor
mov
add
je
sub
xlat
aas
lret
iret
mov
lea
xor
addb
test
mov
mov
imul
dec
clc
shl
adc
cli
cmp
xchg
bound
jecxz
fldl
or
outsl
arpl
jge
adcl
inc
pop
jbe
lret
push
mov
xor
popa
mov
out
lock
shrl
xchg
push
aas
push
push
adc
movsb
jmp
test
mov
mov
leave
and
mov
ss
imul
cmp
xchg
insl
mov
lret
iret
aas
ja
out
mov
push
mov
mov
cltd
fildll
sbb
or
push
in
mov
sahf
out
rcrb
test
rorl
add
pop
or
sbbl
and
jne
push
push
out
orl
push
rclb
push
inc
adc
push
aam
dec
and
push
sbb
data16
mov
sub
inc
cs
jnp
dec
je
jns
adc
xchg
pushf
push
and
and
pop
ficoms
repnz
mov
xchg
lock
std
dec
lea
sahf
xorl
inc
ret
cmp
and
repnz
cmp
test
out
xchg
rol
pop
scas
sbb
or
and
jecxz
mov
ss
aaa
test
js
repnz
pusha
jl
adc
sahf
out
mov
loop
sbb
dec
mov
repz
outsl
inc
adc
pop
subl
in
leave
mov
lds
cmp
add
popa
mov
mov
daa
mov
cmp
mov
divb
push
mov
push
sub
jge
shlb
push
mov
arpl
and
rolb
push
rcrl
mov
lea
es
push
or
adc
push
dec
cmp
sub
loopne
stc
inc
inc
pushl
pop
pushf
test
or
cmpsb
andl
adc
int3
out
jae
lock
icebp
fst
js
test
sbb
xchg
int
sub
outsl
loop
jle
leave
mov
data16
clc
test
lcall
icebp
int3
cmpsb
pop
mov
pushf
call
js
hlt
push
pop
add
rcrb
or
add
add
fcom
mov
pop
pop
dec
jb
adc
or
in
push
lea
xor
pop
and
gs
adc
xor
and
mov
xchg
cmp
or
inc
into
jns
xchg
imul
mov
decb
js
and
call
lret
push
inc
jnp
hlt
loopne
inc
lds
xchg
mov
dec
into
int
addr16
stos
mov
pop
cmpsl
cmpb
push
ror
adc
in
fdivs
das
jecxz
cld
ror
in
insl
popf
mov
jle
jnp
andl
popf
adc
mov
rcr
dec
test
mov
sub
inc
lock
fdivr
mov
aam
cmp
push
jge
fsub
and
movsl
xchg
insb
mov
pop
jp
mov
cmp
out
adc
fcomps
pop
leave
in
or
pop
in
push
mov
xchg
int3
in
lea
cmp
test
test
adc
mov
push
daa
into
shl
cmp
push
sbb
jecxz
mov
xchg
outsb
rcl
push
arpl
xchg
or
mov
and
subb
insl
jmp
adc
or
sbb
pop
adc
push
pop
testb
xchg
push
add
jno
in
scas
mov
fs
lret
mov
jmp
dec
sbb
mov
notl
adc
je
in
mov
scas
lods
sti
jb
daa
data16
repz
mov
les
jecxz
popa
adc
dec
jo
pusha
scas
push
push
inc
jmp
fidivrs
stos
pop
imul
loop
leave
inc
dec
xor
push
mov
adc
in
mov
int3
aad
mov
mov
xchg
sbb
or
faddl
lds
or
sbb
shlb
imul
dec
xor
dec
xor
stos
push
movsl
sub
mov
dec
cs
cmpsl
imul
and
jnp
mov
mov
scas
cmpsb
jbe
arpl
mov
xchg
inc
adc
outsl
ja
std
and
cmp
pushf
in
pop
mov
xchg
pop
sbb
outsl
ss
mov
outsb
cmpsb
pusha
shrl
outsb
mulb
and
call
call
xor
jae
lcall
or
loope
lret
and
dec
and
push
rclb
cmp
mov
jg
js
mov
push
and
aas
mov
sub
sti
cmp
ds
xor
repnz
roll
repnz
sbb
xor
push
mov
cld
repnz
dec
push
push
pop
fcompl
cltd
jne
mov
cmpsb
mov
xor
jne
cmp
mov
roll
add
xchg
mov
adc
leave
mov
fbstp
or
cwtl
mov
insb
repnz
js
lds
or
or
outsb
cmp
sub
sbb
dec
loop
stos
sbb
addb
pop
enter
add
push
hlt
pop
rcr
daa
xchg
std
push
push
mov
sti
push
sub
cwtl
mov
sub
inc
cld
ret
pop
mov
ret
das
xchg
mov
pop
jmp
fisttpl
fisttps
sbbl
cmp
in
sbb
push
stos
pop
ss
scas
xchg
xor
sti
es
xor
cmp
cld
or
xor
jmp
bound
sub
dec
lret
jo
and
or
dec
stc
jmp
push
mov
pop
lds
lret
xor
or
shrl
jg
les
push
test
push
push
shrb
xorl
and
pop
pop
aas
pop
sbb
gs
out
fimuls
mov
or
arpl
sbb
inc
out
jb
sbb
lcall
push
mov
xor
jg
lock
cli
or
jo
in
mov
cs
push
mov
xchg
movsb
sub
xchg
std
bound
jg
jmp
jmp
enter
or
aaa
into
xchg
jecxz
clc
pop
xchg
mov
fisubrs
sbbb
rcr
sbb
adc
rcrb
sub
andl
fstpl
jecxz
sbb
div
dec
inc
adc
adc
push
shrd
or
sbb
add
pop
xchg
pop
inc
sbb
repz
aas
mov
or
xchg
mov
and
sbb
sbb
dec
cmp
or
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
jmp
cli
mov
addb
cmp
sub
addl
fs
dec
jg
aad
insb
lahf
stos
mov
adc
dec
or
or
call
bnd
ret
and
adc
sti
imul
adc
and
jo
cld
popa
mov
in
jb
cmp
mov
push
cld
dec
cli
aas
icebp
and
cmp
push
lock
cmp
and
mov
fsubrs
push
inc
or
cmc
mov
jae
test
cmp
push
inc
adc
mov
dec
sub
or
js
dec
ds
jge
ljmp
jae
repz
dec
scas
pop
aad
std
and
pop
mov
insb
mov
lds
mov
fsubr
jl
add
in
aad
xor
outsb
mov
push
pop
or
mov
inc
and
and
xchg
and
iret
mov
xchg
mov
cmp
add
dec
xor
test
ficomps
pop
push
sbb
pop
mov
sti
fisubrl
mov
push
mov
lods
xor
xor
rcrb
in
add
add
das
inc
adc
das
lock
aas
or
cmp
adc
out
add
sbb
insb
inc
roll
cmc
sahf
arpl
or
sbb
mov
add
sahf
sub
lret
jge
iret
in
or
aam
idivl
lret
rcrb
in
xchg
dec
add
pop
push
dec
and
pop
pop
dec
mov
mov
into
gs
movsl
push
xchg
repnz
lea
popf
xor
nop
inc
imul
jno
or
pushf
cli
push
and
cmp
sbb
fbld
sbb
dec
nop
jbe
cli
ljmp
dec
ds
inc
sbb
inc
lahf
cltd
xchg
cmc
pop
xor
fimuls
lea
or
in
push
inc
out
lea
rolb
out
fs
in
aas
pop
inc
lods
jo
insb
fisubl
insl
std
repnz
test
loop
jge
icebp
mov
jle
mov
ret
outsb
push
dec
inc
ret
andl
cli
pop
and
aad
out
loope
push
aam
inc
aam
daa
jle
mov
aad
push
nop
mov
jmp
and
sbb
cmp
mov
mov
mov
clc
std
dec
lock
shll
push
ret
inc
rcrl
out
xchg
sahf
sbb
or
mov
push
je
stos
dec
or
mov
loope
dec
dec
jmp
sub
mov
sub
mov
cmp
out
in
rcll
xor
cmc
shl
jno
pop
lcall
mov
jmp
sub
mov
movl
push
add
das
jno
push
adc
pop
in
add
mov
pop
xchg
pushl
mov
ja
repz
sbbb
mov
jl
push
ds
shrb
rcll
popf
adc
mov
es
inc
inc
test
mov
sbb
or
mov
add
mov
add
sbb
enter
push
movsb
jae
hlt
push
or
dec
pop
mov
out
or
push
add
psrld
xor
dec
mov
fimuls
testb
aaa
mov
adc
sbb
rorl
lcall
rorb
stos
push
test
sub
sarb
inc
cld
inc
dec
mov
js
pop
pop
dec
dec
sbb
stos
fnstenv
jae
inc
lea
or
daa
xor
xchg
das
leave
adc
inc
push
sbb
out
jo
fists
movl
mov
test
xor
sbb
lock
pop
push
pop
inc
adc
stc
cmp
into
jns
sti
loop
out
mov
fwait
or
and
mov
inc
adc
mov
gs
cld
pop
in
int3
and
jnp
out
sub
dec
popf
push
push
push
cmpsb
inc
dec
adc
push
es
mov
lahf
ja
das
aaa
clc
rorl
leave
dec
aaa
fsub
rorl
nop
add
sbb
test
fidivrl
sti
fbld
inc
xor
lret
out
jl
movsl
ret
lock
mov
inc
xor
cmc
loopne
or
and
inc
popa
repnz
hlt
aas
hlt
ret
popf
xchg
leave
imul
push
jbe
orb
iret
cmp
mov
push
mov
ret
fstpl
inc
ds
add
stos
or
and
push
sub
push
jns
mov
faddl
adc
out
pop
fwait
xor
lods
cld
inc
or
nop
mov
xor
jns
data16
ficoml
in
clc
add
xchg
ret
mov
add
out
sub
fistps
daa
ss
fldl
dec
lea
dec
inc
in
int
dec
xchg
add
xchg
mov
stos
or
shll
push
xor
pop
push
repz
jo
lea
in
xchg
sbb
fwait
test
jecxz
and
xchg
jp
ror
hlt
inc
ljmp
jmp
popf
shlb
ljmp
mov
jge
inc
repnz
sub
push
data16
mov
inc
xor
sub
insb
pop
pop
dec
movsb
inc
adc
loope
out
fcmovnbe
mov
mov
popl
mov
icebp
and
push
adc
fstpt
and
aam
jle
jle
mov
add
sub
icebp
fcmove
jbe
mov
mov
xchg
mov
imul
add
pop
enter
into
les
int
sbb
sub
dec
lret
mov
ficoml
push
mov
fwait
and
lret
pop
out
fsubs
mov
pop
sbb
mov
std
add
xchg
aaa
dec
mov
call
sbb
idivb
andl
inc
notl
inc
popf
iret
inc
mov
fidivrs
mov
mov
pop
cmp
daa
lret
int
mov
mov
in
lret
sahf
int
sub
addb
cmp
jp
mov
stos
sarb
popf
push
stos
mov
or
loopne
sub
pop
pop
and
mov
ja
and
inc
pop
mov
fs
movsl
repz
push
stos
repnz
daa
test
fistps
outsb
das
cmp
lcall
jnp
aas
shlb
or
jno
pop
mov
lret
inc
idiv
into
or
out
data16
mov
fdivrl
inc
lret
insl
jle
das
mov
or
adc
cmc
pop
sub
xchg
lahf
fwait
cmp
jle
mov
lds
lea
stc
add
jae
hlt
xor
das
xchg
mov
sub
mov
pop
xchg
lock
or
xlat
xchg
add
in
cwtl
fucom
or
jno
daa
fildll
cmpsl
pop
lcall
dec
iret
xor
push
jp
pop
or
sbb
scas
sbb
push
jle
mov
out
fcompl
push
adc
fmuls
jno
lahf
sahf
fs
cmp
and
xor
movsb
data16
dec
andb
mov
fcomp
fwait
jne
imul
push
add
lock
das
sub
and
icebp
dec
movsb
inc
cmp
rolb
dec
mov
test
scas
enter
iret
stos
xor
lock
jecxz
sub
lret
sub
pop
call
cmpsl
lcall
push
ds
pop
or
lcall
mov
arpl
mov
repz
stos
cmp
pop
inc
ret
lahf
loop
pop
sub
mov
or
mov
mov
hlt
out
lcall
push
xchg
add
bound
jb
popf
sarb
sub
mov
xor
push
mov
sub
aas
je
inc
sbb
push
out
mov
mov
mull
and
mov
xchg
jecxz
paddusb
or
ret
pop
adc
mov
xchg
pop
dec
fisubrs
pop
inc
push
or
addr16
outsb
enter
shll
xor
mov
add
push
mov
mov
ds
fiadds
adc
jno
adc
cmpsl
or
mov
sbb
dec
push
mov
rorb
divb
push
icebp
pop
popf
xchg
movsb
or
mov
adc
leave
xchg
jl
pop
adc
cmp
aam
mov
stos
xor
adc
dec
mov
adcb
sbb
mov
sub
sbb
jno
faddp
xorb
clc
or
jmp
repnz
aam
call
idivl
pop
xor
sub
cmp
aaa
xchg
xor
loope
pop
dec
test
roll
ret
test
scas
adc
movsl
xor
call
push
js
cmp
subb
jbe
stos
mov
push
jb
pop
mov
pushf
pop
imul
les
push
imul
xchg
pop
lahf
icebp
jmp
push
pusha
lea
or
lods
adc
icebp
mov
pop
stc
xor
sbb
xchg
sbb
popa
add
shlb
test
cwtl
pop
cmp
cld
pop
cwtl
mov
ret
push
push
pop
push
xor
mov
ds
push
fwait
testb
addb
cmp
out
jge
jae
stos
sbb
faddp
out
adc
mov
out
js
arpl
push
or
ljmp
faddl
xchg
jmp
cli
mov
add
inc
and
and
mov
js
mov
cmp
push
not
lea
inc
stc
sub
or
and
fs
arpl
cmp
loopne
sbb
push
push
lret
xor
inc
and
push
ja
xchg
mov
xor
das
data16
add
lods
dec
loopne
sahf
xchg
mov
xor
repnz
lds
out
int
sahf
inc
lcall
fmull
lahf
ror
xor
ss
std
add
sbb
fldt
pop
jmp
mov
xchg
pop
cmp
cli
push
mov
sbb
push
jns
add
adcl
repnz
std
shll
enter
dec
dec
push
jp
fcoms
jno
push
cmpl
test
and
jg
insl
jbe
and
push
add
lret
xchg
in
push
push
data16
cmpsl
xor
sub
mov
add
cmpsb
mov
cmp
stos
ficoml
out
jb
mov
imul
sarl
js
jg
xor
lret
pop
rcrb
std
mov
subl
push
test
lret
mov
popa
xlat
pop
mov
dec
enter
cld
daa
add
incl
call
repz
addr16
push
inc
push
jp
push
aam
push
mov
outsl
inc
push
adc
lcall
imul
addr16
sub
lock
stos
test
leave
push
ja
cmp
call
dec
mov
pop
mov
mov
fisttpll
jne
movsl
cmpsb
ret
add
pop
fildl
mov
hlt
mov
out
cmp
stos
pop
inc
popa
shlb
cmp
sti
enter
sahf
jae
rcl
out
sti
cmp
scas
mov
pop
mov
stc
xchg
icebp
cmp
movsl
mov
mov
push
fsts
mov
pushf
leave
std
ds
cmpsb
push
ljmp
rcrb
adc
nop
addr16
ds
pop
mov
jnp
push
push
mov
inc
mov
dec
pop
ficoml
in
dec
add
adc
ljmp
xchg
sarl
lods
out
nop
xchg
pop
mov
outsl
push
call
mov
fidivrl
mov
dec
sbb
lea
pop
adc
out
test
jp
mov
cmp
mov
push
push
push
js
pop
pop
push
inc
jmp
sahf
stc
dec
dec
inc
loop
adc
or
inc
hlt
ja
or
iret
mov
and
dec
aad
xor
jne
inc
test
fdivs
popf
int3
jle
sbb
xor
stos
ljmp
cs
insl
and
cs
push
adcl
fstpt
push
sub
xor
inc
mov
and
inc
je
testb
aaa
fidivl
hlt
xchg
lock
add
jno
fsubr
sahf
pop
imulb
test
cmp
sbb
jp
jge
ljmp
sub
pop
sbb
push
xor
ffreep
jb
pop
or
jg
xchg
inc
inc
sub
pop
dec
std
mov
imul
sub
imul
mov
pusha
in
jge
push
mov
cmpb
fnstenv
push
loopne
outsb
pushl
clc
pop
fisubs
movsb
cmc
mov
push
push
in
jno
call
out
divb
add
xor
jns
dec
mov
into
mov
js
ret
mov
popa
icebp
mov
adc
mov
cs
imul
pop
rcll
pop
cs
aas
jl
dec
mov
aad
and
ja
dec
orl
popa
adc
int3
adc
adc
adc
cmpsl
dec
cmp
in
and
lcall
andb
dec
orl
leave
lcall
hlt
mov
mov
ss
cmpsb
sub
fwait
pop
lahf
dec
repz
xor
lret
ss
xorb
popl
pop
mov
daa
adc
rorb
out
fs
pop
dec
pop
sbb
jle
icebp
mov
iret
aaa
cwtl
or
mov
mov
in
aas
test
xor
sbb
outsb
inc
xlat
or
fsubs
test
adc
pop
lret
les
pusha
inc
inc
inc
push
xchg
dec
insb
xchg
lock
and
pop
outsl
mov
dec
out
in
cld
call
jb
lods
xor
lret
jle
jge
call
adc
and
add
sub
inc
cmp
pop
ss
test
xor
loopne
test
rorb
clc
je
lea
sahf
cmp
push
mov
imul
mov
jp
movsb
in
mov
adc
ja
test
sub
push
inc
call
stc
adc
mov
cmp
xor
rorl
mov
sub
pop
push
ret
mov
lret
cmp
lds
call
push
das
sub
imull
push
mov
mov
jbe
shrb
call
daa
mov
incb
add
stc
jl
jbe
rcrb
and
push
sub
cmp
fistps
pop
xchg
mov
adc
and
in
xchg
dec
sbb
cmp
popf
inc
push
pushf
test
mov
cmc
test
pop
cld
jecxz
sub
pushf
inc
cltd
scas
inc
and
je
or
sbb
mov
cmp
inc
add
pop
cltd
and
cmp
adc
aas
fwait
add
dec
and
sahf
pop
ds
ja
jl
cmpsb
jmp
pop
xor
xchg
sahf
repz
scas
push
add
loope
aam
xor
gs
fs
push
or
mov
cmp
loop
dec
add
inc
lahf
and
xlat
ret
cmp
test
mov
ret
mov
pushl
pushf
mov
into
xchg
push
sahf
arpl
into
rcrb
mov
insl
cmc
ret
sbb
rorl
and
xor
pop
out
sub
outsb
scas
aad
lcall
xchg
fadds
and
mov
jg
jge
cmp
sbb
cmp
subb
push
sub
sahf
iret
in
add
or
push
xchg
arpl
add
or
mov
lock
cltd
or
mov
icebp
adcl
leave
lods
iret
xorl
xlat
into
mov
jle
hlt
adc
push
jmp
mov
xchg
in
jmp
mov
lods
and
repnz
and
mov
loope
out
jo
jmp
aad
cmp
ja
outsb
push
loopne
jge
repz
xchg
xor
push
imul
pop
std
pop
in
dec
dec
rolb
addl
mov
ficoml
xor
add
sub
inc
jbe
inc
push
shld
es
and
sub
xchg
and
je
mov
aas
jne
xlat
testb
add
cmp
push
sub
add
jmp
fidivl
das
jno
jge
fs
xchg
mov
shrl
mov
dec
mov
xchg
pushf
dec
test
test
mov
add
gs
mov
jne
and
mov
int
dec
roll
je
xchg
clc
adc
setl
adc
push
jne
shrl
or
inc
inc
mov
xor
test
ret
push
mov
movsl
mov
js
jae
or
pop
ucomiss
aad
mov
lcall
dec
loop
jg
aad
loopne
jno
sbb
push
jg
fstl
in
adc
outsl
mov
iret
nop
add
and
adc
movsl
jnp
pop
cli
cmc
sub
cltd
mov
pop
aaa
jbe
cmp
adc
lret
arpl
iret
call
add
xor
and
xchg
sub
mov
imul
into
into
arpl
addr16
stos
push
rcrl
xchg
mov
sub
fisubrl
mov
andb
cmp
out
mov
inc
mov
imul
pop
fidivrs
mov
testb
pop
jmp
test
icebp
pop
mov
push
and
dec
addr16
mov
das
inc
mov
push
cmpsb
lods
lds
mov
imulb
imul
repz
scas
lret
or
jmp
lods
sub
aas
inc
mov
dec
xchg
out
xor
stos
push
adc
js
inc
int
mov
lods
addb
fs
cltd
or
cmpsb
dec
xor
mov
mov
popa
mov
sahf
cmpsb
xchg
sub
ret
jge
pop
popa
mulb
mov
outsb
xchg
add
les
dec
xor
sub
pushf
fimuls
fldcw
or
std
jmp
pop
adc
jbe
test
sub
xorl
add
aam
stos
cmc
mov
xchg
sbb
xor
bound
push
test
add
adc
lahf
loop
rcrb
cli
inc
test
cs
push
aad
cld
pop
fldt
or
xchg
push
add
cmp
push
enter
cld
push
pop
and
inc
dec
pop
xlat
jbe
mulb
adc
lret
inc
mov
in
mov
imul
xchg
mov
repnz
ljmp
lock
xchg
fs
push
mov
push
adc
fisubrl
pop
xor
lahf
daa
inc
pop
adc
dec
pop
test
mov
mov
pusha
adcb
sbb
inc
and
jns
ficompl
xchg
cmpsl
and
push
and
xchg
push
dec
adc
mov
loopne
mov
jno
stos
xor
cmp
jo
mov
mov
add
fidivrs
ds
mov
jecxz
leave
iret
push
and
adc
in
pop
push
fsubl
add
ret
ficoml
loopne
sbb
jmp
mov
push
nop
inc
mov
ja
fwait
lods
insl
cmp
inc
stc
aas
pop
in
push
mov
sub
add
sub
jmp
rorl
mov
enter
enter
pop
das
mov
lahf
and
push
outsb
inc
push
add
add
dec
jbe
lods
mov
cmp
test
dec
lret
cmp
cmpsl
ljmp
lret
dec
loop
pushf
adc
sbb
stos
cs
hlt
dec
push
sbb
gs
inc
sbb
enter
cmc
dec
dec
sub
xchg
fmull
in
xchg
mov
mov
add
jbe
pop
pop
clc
and
sbb
push
mov
aad
mov
cs
dec
scas
mov
sbb
add
cmp
insb
leave
push
lcall
pop
dec
ffreep
inc
lcall
adc
pop
sbb
mov
mov
enter
sbb
clc
stc
mov
jbe
inc
mov
cwtl
xchg
in
dec
les
xor
popf
clc
dec
or
xor
push
adcb
mov
icebp
cmp
in
std
xor
mov
and
jge
xor
movsl
dec
inc
push
fldcw
xor
or
scas
xchg
std
mov
jg
ret
icebp
jns
dec
add
sbb
in
push
pusha
test
or
scas
clc
fimull
pushf
gs
imul
jl
push
dec
fmulp
push
and
mov
xchg
enter
mov
xor
fwait
loop
cmp
pop
sbb
xchg
mov
bound
add
rcl
lods
xor
arpl
and
dec
das
insb
pop
scas
cmp
mov
cmp
inc
push
fstps
xchg
cmp
xchg
sub
and
das
cmp
in
adc
push
in
inc
mov
jno
aam
incl
lea
xchg
pop
push
test
lods
sub
testb
pop
xlat
stc
mov
sahf
jl
js
aaa
push
call
or
sbb
jg
pushf
xchg
data16
adc
push
xchg
data16
das
dec
loope
fidivrl
or
mov
dec
ficoml
sbb
cmp
imul
mov
add
xor
dec
scas
imul
mov
inc
aad
jbe
and
jecxz
sarb
ja
push
and
inc
aad
mov
lret
add
scas
push
pop
push
mov
mov
notl
cld
aaa
lods
cmc
pop
pop
das
inc
xchg
sti
pop
loopne
pusha
pop
testl
or
leave
cmp
sub
push
inc
stos
dec
inc
xor
into
inc
or
stc
fisttps
rorl
mov
insl
popf
xchg
jbe
fcmovnb
sbbb
shr
mov
stos
loop
push
test
out
add
mov
jb
push
or
loopne
and
dec
and
out
inc
inc
sub
scas
mov
ds
ljmp
lods
adc
pop
js
jmp
aad
rclb
stos
gs
clc
pusha
adc
xchg
sbb
jg
test
inc
jae
mov
cmc
and
inc
cltd
inc
mov
into
sub
sub
adc
push
cld
iret
cmp
loope
xchg
pusha
jl
cmovge
movsl
xorl
mov
loop
iret
sbb
fisttpll
inc
cmp
jbe
dec
insl
ljmp
aaa
fucomip
sub
xor
pop
bound
pop
cwtl
int
and
or
inc
sub
pop
push
sub
icebp
dec
cmpsl
xchg
and
loopne
fdivrl
test
fdivs
pop
in
cli
cmp
lret
pop
int3
hlt
sbbl
sbb
daa
addr16
ret
out
rolb
or
jmp
cwtl
sub
inc
rep
mov
pop
das
xlat
mov
inc
ds
mov
popa
loopne
movsb
jbe
push
mov
in
cmp
test
fldcw
mulb
in
cmp
out
mov
push
clc
mov
push
out
and
in
movsl
fbstp
fstps
clc
pusha
cmp
sbb
scas
mov
popf
xchg
jl
push
ljmp
testl
add
clc
rcl
jle
inc
add
mov
nop
addl
aaa
ret
cs
stc
xchg
mov
jmp
lock
jb
outsl
sub
outsb
xor
cs
mov
bound
negb
pop
push
test
pop
sahf
out
dec
rcrl
jmp
cmpsb
xor
or
dec
test
in
imul
and
int
addb
pcmpeqd
scas
push
int
dec
in
or
out
gs
push
out
popa
xchg
loope
or
push
mov
cmpsl
sbb
lock
out
icebp
jns
mov
xor
sbb
jl
pop
pop
dec
lret
xchg
test
rclb
out
xor
cmp
repnz
adc
in
jo
dec
xchg
or
int3
dec
lahf
in
cs
mov
stc
add
adc
jnp
out
push
sar
add
sub
add
and
push
adc
test
push
or
push
insb
and
mov
or
or
or
jg
adc
aaa
jle
aam
pop
dec
jnp
xabort
testb
insb
cmc
shrl
cmp
es
fldenv
xchg
inc
lret
mov
mov
mov
in
lahf
sub
push
icebp
dec
icebp
sub
mov
push
repnz
mov
xchg
icebp
pop
lahf
push
stos
sbb
ret
xchg
movsl
dec
or
pusha
test
inc
popa
fsubrs
pushf
add
es
cmc
jmp
clc
pushf
mov
xchg
jnp
jns
imul
sbb
loope
pop
ficomps
fcomps
mov
inc
setnp
sbb
fwait
mov
inc
stc
ds
mov
insl
and
inc
mov
cltd
sbb
push
mov
loop
dec
outsl
push
repz
cmp
push
scas
pop
inc
xor
jno
shrl
or
icebp
inc
out
adc
cmpsl
cmp
clc
hlt
mov
into
shl
push
in
push
in
aad
push
inc
scas
scas
fisubs
cld
lds
or
push
sbb
aaa
xchg
pusha
jecxz
push
out
mov
sarl
scas
mov
push
sbb
mov
out
adcl
ljmp
adc
dec
jnp
out
sbb
dec
pop
in
mov
lock
int3
sub
arpl
xchg
adc
add
mov
pop
popl
push
cwtl
push
in
mov
cmp
adc
push
push
mov
jno
pop
cmp
lea
and
outsb
sub
sbb
insl
stos
das
mov
mov
or
and
and
das
cmp
push
arpl
add
cmp
dec
pop
addb
into
addr16
mov
and
mov
push
mov
xor
insl
push
xchg
adc
mov
push
jne
decl
mov
repz
push
aam
rorl
popf
pop
jo
out
lret
jo
loope
scas
fmull
jns
cmpsl
add
pop
ljmp
pushf
dec
andl
pop
aam
test
dec
xlat
addr16
push
aas
jns
push
sahf
or
data16
fldcw
fs
outsl
loop
mov
and
mov
pop
into
jle
mov
and
jbe
pop
sbb
shll
lods
into
dec
fwait
lods
xlat
pop
jnp
mov
shll
imul
fcomip
mov
insl
in
hlt
add
jne
pop
fisttpl
sub
aaa
mov
mov
mov
pop
pop
inc
and
xor
daa
lds
ret
into
lahf
int3
or
cmp
cmc
xlat
out
insb
inc
lret
cmp
add
push
lahf
iret
push
mov
mov
mov
adc
pop
rolb
jmp
call
rorb
mov
in
imul
arpl
pmaxub
mov
xchg
cmpb
inc
mov
sbb
mov
lods
notb
cmp
push
or
sub
or
stos
clc
lret
xor
or
jo
jecxz
stc
push
cmpsl
mov
xor
popa
add
cmp
sbb
pop
dec
scas
dec
sub
mov
movq
mov
movsl
imul
dec
ja
rol
and
hlt
scas
sub
repnz
repnz
sub
lcall
push
push
in
mov
shlb
inc
jg
and
adc
jecxz
jb
sub
and
shl
fidivs
dec
sbb
shll
or
in
jns
fsts
mov
and
outsl
rorb
je
inc
push
mov
fldl
and
fwait
cmpsb
loop
jge
xor
rolb
sbb
cld
cmp
dec
or
sti
rcr
stos
pop
mov
je
aaa
insl
repnz
mov
sub
or
aas
add
push
adc
pop
push
lea
hlt
pop
jo
push
fcmovnb
fstpt
shrl
dec
jl
jle
rorb
adc
lret
popa
scas
pusha
xchg
inc
jmp
lock
cmp
lods
leave
cmp
sub
inc
pop
xor
xor
push
xchg
fs
sbb
fwait
xchg
pop
dec
out
js
xchg
dec
cmpsb
inc
sti
mov
lock
mov
push
dec
push
stos
mov
addr16
orb
pop
sbb
cmpsb
lahf
xchg
or
fs
rcrb
cmp
daa
stos
mov
mov
jbe
xchg
popf
mov
mov
out
out
sbb
out
xchg
test
inc
js
hlt
add
sbb
shr
sbb
pop
iret
push
insb
xchg
imul
movsb
pand
lcall
inc
into
xchg
mov
sub
data16
js
insb
mov
out
inc
out
inc
pop
add
iret
stc
fwait
mov
and
cwtl
mov
out
sub
push
out
inc
mov
xor
mov
arpl
cmp
or
bound
shlb
mov
scas
out
hlt
in
sub
inc
pop
out
clc
in
loop
jge
xchg
jmp
rol
jo
inc
dec
mov
cmpsl
enter
imul
add
std
lock
out
cld
fcomip
lahf
stc
xchg
xor
add
cmp
insb
pushf
sbb
push
into
jns
sub
add
in
pushf
sub
jg
xchg
mov
das
inc
sbb
testl
xchg
xor
xchg
push
push
frstor
mov
xchg
inc
cld
jmp
or
push
mov
xor
jae
pop
pop
ja
or
push
ljmp
imul
cmp
pop
faddl
test
or
cld
repz
test
aad
movsl
enter
loop,pt
rcrl
push
xchg
mov
xchg
inc
push
inc
pusha
into
mov
ss
dec
ret
inc
pop
jbe
int
lds
push
lds
cmp
sbb
dec
incl
cmp
xchg
push
pop
cmpl
xor
xor
mov
mov
fnsave
inc
sub
scas
out
mov
xor
jl
jge
mov
je
nop
mov
xor
cmp
in
cli
add
dec
mov
pop
sub
jle
fldcw
add
push
push
jo
int
repnz
xor
mov
xchg
rcrb
mov
andb
loop
test
inc
fdivr
outsb
popa
push
add
cmpsl
push
jnp
jmp
dec
pop
adc
jecxz
in
iret
xchg
push
idivb
int
ljmp
adc
fidivrl
pushf
xchg
adc
sbb
jp
inc
shlb
mov
int3
stos
or
loopne
psrlw
out
jmp
jnp
cmpsl
fstps
in
xchg
pop
pop
xor
test
or
xlat
or
stos
inc
cmp
cmp
in
daa
sbb
jnp
sahf
lds
mov
adc
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
jmp
inc
sbb
push
mov
aad
les
addl
lods
or
add
and
cmpsl
mov
and
daa
andb
cltd
aad
lds
xchg
call
icebp
xchg
mov
xor
cmovbe
dec
jmp
ja
int3
xchg
lock
fucomi
jnp
cmpsl
xlat
popf
dec
adc
inc
or
mov
push
push
nop
insl
test
jno
out
mov
xchg
or
mov
rolb
movsl
in
dec
push
lret
xor
data16
or
repnz
roll
das
mov
pop
loopne
jle
dec
and
pop
rorb
movsl
cwtl
loop
jge
jo
mov
mov
xor
fsubl
addb
xchg
lds
sbb
outsl
jl
ja
xor
cmp
ja
imul
sti
loop
out
mov
fstp
rclb
jecxz
icebp
je
mov
add
add
pop
je
mov
outsl
aas
insl
fdivrs
and
cli
fisubrs
ret
call
dec
fiaddl
xchg
xor
frstor
mov
xor
addr16
es
sarb
xor
addr16
and
mov
subb
pop
or
jns
adc
xor
dec
xchg
ja
gs
rcl
sbb
lret
arpl
and
stc
fnstsw
pop
mov
addl
mov
jmp
pusha
pop
lods
or
dec
arpl
fadds
cltd
push
aam
loopne
insb
jmp
das
xlat
mov
mov
dec
dec
in
nop
lea
movsb
xor
adc
cmp
loopne
jo
cwtl
imul
in
std
xchg
fcompl
cmp
imul
push
outsb
sbb
shl
dec
mov
test
jbe
or
jle
loope
lods
enter
rcrb
fs
ds
aad
cmp
mov
aam
orb
mov
es
addr16
and
lods
lret
jae
sub
mov
jecxz
and
pop
fsubrl
cmp
adc
test
push
inc
push
or
sbb
and
sbb
ja
repz
imul
cltd
push
adc
xchg
inc
push
push
aas
loop
mov
es
mov
lods
call
or
mov
enter
fucom
lcall
xchg
popa
push
hlt
scas
shrb
dec
popf
arpl
addb
sbb
or
mov
and
dec
out
inc
je
sbb
sub
out
mov
jo
adc
das
mov
xor
pop
mov
pop
push
sbb
sbb
js
fbstp
jno
sbb
sbb
sbb
rclb
dec
add
add
es
in
mov
dec
mov
push
in
mov
sbb
in
cvtdq2ps
leave
in
fwait
or
push
fnsave
je
inc
jecxz
lret
adc
mov
lea
divb
add
shlb
xchg
adc
xor
cmp
or
jmp
inc
std
test
sub
bnd
outsb
cli
pop
and
divl
mov
adc
out
sahf
sbb
fistps
imul
xor
cmpsl
pop
xor
push
mov
in
orb
mov
xchg
inc
je
into
jns
push
xchg
stos
fidivs
movsb
out
mov
mov
gs
xor
mov
sub
wrmsr
mov
and
lahf
fwait
mov
lret
fwait
pop
movsl
je
dec
lret
ljmp
mov
push
inc
jns
mov
loope
or
push
lock
adc
test
iret
sbb
inc
jnp
in
push
sub
testl
mov
sbb
sbb
pop
clc
jo
stos
inc
pop
ja
jo
xchg
dec
push
and
jmp
sbb
enter
mov
lret
xchg
adc
or
add
stc
faddp
xor
add
das
hlt
ljmp
idivb
mov
adc
sub
imul
mov
xor
mov
push
filds
test
cmp
cmpsl
mov
mov
ret
stos
test
cld
aaa
outsl
push
adc
or
push
rcrl
popa
imul
add
dec
fstl
push
mov
imul
pop
cli
fildll
out
shl
rcll
inc
lret
dec
adc
jns
or
sbb
jbe
sub
mov
jge
sahf
inc
iret
sub
icebp
pop
dec
inc
jne
dec
inc
fmull
xchg
stc
jp
fnstenv
and
hlt
test
adc
push
mov
addb
inc
adc
in
and
bound
inc
fs
adc
in
dec
mov
jmp
cld
adc
rcrl
out
mov
data16
jp
add
testl
sti
cwtl
cmp
lahf
push
xor
fiadds
sbb
enter
xlat
pop
test
imul
adc
lret
pushf
pop
repz
or
pop
mov
std
shll
cwtl
mov
aas
pop
mov
into
cwtl
insl
inc
shll
cmp
std
add
cs
lock
out
bound
xchg
idivl
mov
jb
mov
pop
and
popl
inc
int3
das
rcll
cld
jg
jbe
mov
and
xchg
pushf
jno
cltd
inc
mov
out
add
outsb
cmc
in
pop
sbb
jmp
loop
cmpsl
leave
mov
add
dec
movsl
mov
add
mov
lret
jb
add
addr16
loop
clc
mov
lods
adc
cmp
sahf
sti
clc
fnsave
fisttpll
pop
xor
adc
mov
inc
cmp
push
push
outsb
inc
loope
xchg
sahf
loope
sbb
iret
cmp
leave
repz
dec
mov
xor
lock
fldenv
add
negb
repz
lahf
lock
pop
repz
rcr
dec
push
jbe
push
test
fs
rorl
push
xchg
push
mov
mov
sahf
pop
lock
jp
mov
scas
or
push
pop
leave
sub
jg,pn
inc
test
jl
and
adc
mov
in
add
add
add
adc
aad
mov
std
xchg
lds
repz
enter
hlt
mov
cmpb
fidivl
in
dec
add
and
pop
mov
nop
ret
dec
sbb
cmp
mov
aad
insl
in
in
lods
loopne
outsb
and
jmp
std
jmp
jg
jmp
lret
or
js
jp
test
xchg
das
rol
roll
mov
mov
loop
int3
xor
mov
in
stc
push
mov
fnstsw
dec
cmp
add
push
mov
cli
shrl
mov
lahf
rcrl
loop
clc
add
cld
fstp
cmp
sarb
inc
int3
xor
push
aam
test
mov
mov
out
or
aam
jae
je
or
jle
push
es
sub
mov
jge
sbb
xchg
int3
lea
cltd
or
aaa
jnp
jp
dec
mov
fisubrl
and
cmp
adc
cmp
push
imul
int
repz
sbb
jbe
sub
add
push
lods
dec
and
add
xchg
dec
xchg
outsb
xor
pop
in
cld
movsl
mov
xchg
or
ret
mov
xor
add
xchg
dec
or
iret
jp
cmp
mov
insb
mov
stc
je
mov
add
std
lods
test
rclb
push
push
lret
arpl
pop
repz
lahf
jmp
aad
pushf
aad
ljmp
cmp
add
xchg
mov
cmp
dec
pop
mov
ret
sbb
rorb
cmp
mov
pop
dec
out
and
adc
sub
lret
push
xor
add
mov
es
mov
sti
mov
fld1
inc
les
pop
sti
jg
jg
and
adc
or
test
gs
mov
push
outsb
xchg
loopne
je
adc
cwtl
mov
cmpsl
jns
xchg
stc
loopne
push
push
dec
lahf
stos
pushf
lock
sbb
xchg
jge
mov
add
cwtl
in
arpl
jns
jmp
cmc
pop
xchg
cmp
add
mov
mull
test
mov
push
mov
push
loope
js,pt
mov
loop
stos
cmp
fsts
cwtl
adc
push
push
dec
xlat
jnp
jae
in
int
ret
pop
clc
jnp
add
scas
ljmp
xor
mov
adc
test
pusha
inc
mov
hlt
test
rcrb
adc
xor
fmuls
out
mov
xor
stos
fidivs
push
mov
rcll
xor
mov
or
stos
push
sub
jle
lods
aad
mov
mov
fsubl
lods
xor
sbb
and
sbb
fdivrp
test
xor
lcall
shrl
loopne
mov
inc
cmc
pop
aad
xchg
push
inc
out
shll
lods
lds
push
sbb
mov
cld
push
mov
dec
ja
inc
or
test
push
dec
xor
add
push
jns
stos
push
test
dec
mov
hlt
cmpsl
adc
popf
stos
mov
lret
shrd
lea
or
stos
pushf
mov
jnp
and
test
xor
jbe
cmpsb
dec
jno
xor
lods
or
mov
bound
fwait
jl
roll
loop
addr16
mov
jp
jns
std
dec
jns
movsl
into
mov
popa
outsb
inc
cli
jnp
pop
aam
fidivrl
out
stc
inc
push
ljmp
popf
dec
jno
aas
pop
mov
repnz
mov
sbb
rcrb
jbe
sub
push
lea
push
sbb
loope
in
jecxz
ds
lret
andl
xchg
add
pop
mov
popf
lcall
insl
cltd
fadd
adc
fxam
cwtl
cli
sbb
mov
jge
xchg
test
or
fstl
xchg
repz
mov
sbbl
lods
push
mov
push
push
ret
dec
pop
xchg
xchg
inc
das
jg
xchg
addr16
out
popa
jle
clc
popf
jg
mov
sub
xchg
push
inc
ss
sbb
popa
in
test
adc
sarb
andl
cmpsl
dec
fcoms
js
or
mov
ret
xchg
cmp
fmuls
or
dec
add
rcll
mov
or
notl
gs
sbb
jp
cmc
pand
pop
push
mov
sub
insl
in
daa
in
mov
shll
cmc
int3
push
xchg
or
test
roll
push
loopne
rcl
test
es
ljmp
fisttpll
aad
inc
sti
push
xchg
push
out
jnp
mov
dec
dec
pop
fs
jl
xchg
xor
xchg
sti
xchg
js
jne
xchg
cmp
mov
cmpsl
or
add
shlb
jno
fcmove
sbb
adc
jno
mov
test
lea
adc
mov
xor
cmp
mov
pop
sbb
dec
lods
jmp
sbb
fldl
xchg
adc
loop
je
cmp
popf
out
test
xchg
repnz
lods
jo
jae
mov
add
or
jns
inc
pop
repz
inc
xchg
or
mov
xor
aad
mov
sub
pop
mov
into
cmp
xchg
xor
add
mov
xor
jo
loopne
cltd
sahf
cmp
mov
lret
or
cmp
repnz
out
cmpb
jne
popf
push
sub
cmpsl
aad
and
dec
int
sti
adc
or
fisubl
mov
jle
lods
cwtl
insb
dec
or
or
pop
add
es
add
pop
inc
cld
inc
out
andb
nop
cmp
or
xchg
les
add
fisubl
stc
mov
lea
dec
adc
jne
inc
pop
std
or
call
adcb
out
pushf
imul
pop
xchg
ja
xor
sbb
adc
out
loope
iret
mov
push
pop
add
pop
lcall
push
and
movl
fists
fadds
or
cmp
dec
push
add
shr
mov
inc
adc
jb
mov
adc
sub
xchg
push
ficompl
mov
in
movsl
andl
in
lahf
push
xor
ficomps
jle
mov
add
inc
out
insl
lea
aam
sub
in
jo
popa
rcl
sub
push
xchg
jae
adc
pop
out
jp
jb
loope
pop
mov
xchg
scas
cmp
cmc
lcall
aaa
test
and
xor
add
xchg
xor
or
jbe
dec
fcomip
int3
jns
aaa
call
mov
fbstp
popf
mov
hlt
aas
ret
mov
mov
sbb
shlb
push
push
ficomps
xor
or
or
sbb
pop
add
fcompl
iret
xor
dec
push
ds
adc
and
dec
sbb
imul
xor
cmp
outsb
mov
add
lcall
xchg
cltd
les
test
movsl
stos
dec
cmp
mov
sbb
in
scas
or
mov
ljmp
in
or
adc
jmp
sbb
jmp
xchg
add
fidivl
aad
inc
shlb
mov
clc
out
bound
addl
not
sbb
or
fadd
sbb
xor
dec
cwtl
jne
fldcw
cs
cmp
pop
dec
or
add
mov
push
xor
iret
jmp
inc
pop
jns
iret
aas
sahf
insl
jecxz
out
imul
cli
lret
loop
int3
mov
fdivl
mov
into
push
rclb
shrl
out
mov
test
mov
inc
pusha
call
lret
bswap
sbb
mov
xor
mov
ljmp
mov
pusha
out
js
jg
lret
pop
shll
std
stc
je
xchg
gs
or
push
cwtl
inc
mov
add
cmp
mov
loop
jg
and
adc
cs
mov
pop
pop
adc
adc
pop
xchg
mov
xchg
push
aam
push
es
leave
jb
dec
xlat
jne
insl
fdiv
movb
push
in
call
cmp
cmp
movsb
insl
clc
xor
stos
ret
jl
pop
fcoms
jge
jno
fimull
xchg
imul
aaa
inc
dec
or
jne
nop
loopne
add
repnz
xor
mov
aam
mov
xchg
add
scas
in
in
dec
mov
jecxz
call
dec
mov
rcl
sub
movsl
push
stos
pop
xchg
sbb
jle
push
std
xchg
into
out
mov
mov
std
jo
ss
icebp
movb
jno
add
jp
jno,pn
leave
lret
insb
sub
add
cmp
push
inc
mov
xchg
jnp
pop
or
mov
negl
push
dec
cmp
sub
jg
jle
insl
test
out
sbb
push
out
push
lea
push
test
ret
in
sbb
int
dec
fiaddl
push
daa
sbb
adc
jge
enter
cli
inc
mov
sti
mov
mov
ficompl
in
test
repz
push
lods
ss
xchg
popf
cmpsl
or
mov
push
aad
loop
lret
cmp
push
addb
cltd
cmp
sub
mov
daa
sbb
insl
cmp
fnstenv
mov
stc
dec
mov
jmp
outsb
and
cmpsl
jb
xor
loope
jbe
sarl
xchg
das
das
adc
cmp
sub
pop
jmp
enter
mov
sahf
dec
out
pop
xlat
xor
xchg
lret
test
mov
fadds
enter
jne
pushf
and
test
ja
out
dec
shlb
mov
jmp
xchg
frstor
lods
dec
hlt
pmuludq
popf
sbb
adc
xor
movsb
cmpsl
sub
push
das
adc
popf
in
add
jecxz
inc
sbb
icebp
dec
mov
test
mov
adc
lock
in
hlt
test
adc
mov
les
add
lock
sub
icebp
and
orb
mov
cli
and
shlb
mov
ret
lock
out
daa
pop
xchg
aam
shrb
jae
cmp
test
adc
cmp
mov
hlt
in
jge
enter
push
fs
stos
int3
sbb
out
dec
lret
outsl
pop
sbb
inc
fildl
xchg
lret
sti
adc
pop
mov
jne
sub
int3
icebp
lods
or
aas
testb
addl
inc
jo
add
pop
mov
addb
jns
popa
and
push
or
scas
sub
adc
sarb
cmc
and
out
ret
popa
xchg
stos
lods
out
ffreep
clc
mov
arpl
mov
daa
cwtl
testb
add
fisubs
pop
fsubp
sbbb
pop
popa
scas
lock
into
ror
jns
in
inc
push
push
jno
push
xor
int3
int
fsubrl
and
bound
adc
sbb
push
adc
push
pusha
movsl
sbb
cmp
lret
mov
jg
lret
add
pusha
push
pop
hlt
ja
loope
mov
pusha
cltd
push
jno
mov
inc
sub
dec
pop
dec
mov
push
xchg
jnp
dec
cli
push
inc
aad
in
pop
std
add
xchg
pop
scas
cli
inc
push
bound
xchg
scas
aad
in
pop
pop
data16
pop
inc
sbb
fwait
ret
xchg
jp
adc
xchg
and
mov
pop
test
inc
ret
das
cli
cmp
and
ja
mov
test
adc
jbe
mov
pop
scas
ficomps
mov
mov
aam
jmp
jp
int3
mov
sbb
add
imul
jmp
pop
adc
cld
icebp
jo
shlb
addr16
frstor
sub
shll
or
pop
lea
arpl
hlt
out
int
int3
sub
push
adc
stc
xchg
jns
loopne
ret
sub
adc
mov
stos
cmp
ficoml
or
mov
xor
pop
ficomps
jl
popl
pop
add
fs
ret
xchg
xchg
sub
loopne
loope
cmp
stc
das
xorl
cmp
xor
push
add
cmc
cli
fidivs
pusha
out
lea
dec
inc
dec
and
dec
dec
mov
mov
insl
imull
xor
aas
cmpsb
xor
pusha
adc
sub
adc
rcrb
push
xor
rolb
lea
and
mov
lret
enter
push
stc
lock
int
mov
mov
adc
and
popa
je
out
sahf
pop
incb
test
aas
or
jge
dec
gs
jle
int
hlt
fbstp
sub
dec
imul
out
repz
pop
push
xor
adc
or
outsb
jp
and
into
push
insb
and
divb
mull
add
jno
add
pop
jmp
sbbl
clc
mov
in
rorb
into
test
inc
in
sub
mov
jns
cld
data16
fst
pop
call
lahf
sahf
out
cwtl
push
jae
xchg
xlat
lret
xorb
inc
xchg
push
jnp
or
into
test
movsl
push
or
jp
pop
fbld
sub
sbb
xor
inc
pop
clc
mov
sub
movswl
mov
mov
repnz
imul
sub
dec
mov
sbb
and
out
mov
fisubrs
mov
mov
lret
xor
aam
in
fisubrl
mov
cltd
out
jle
and
leave
jbe
or
dec
adc
lock
scas
scas
imul
popf
adc
mov
lods
arpl
mov
rcrb
jae
xchg
pop
pop
or
xchg
mov
inc
aad
mov
jmp
push
push
jl
out
sbb
cmpsl
push
xor
aam
shl
out
xchg
dec
or
ljmp
dec
xor
xor
xchg
pop
int
imul
pop
repz
aad
sub
mov
and
fwait
shl
jns
jp
icebp
add
outsl
and
clc
xchg
fs
mov
out
ljmp
dec
iret
mov
sbb
jge
pop
sti
and
daa
inc
mov
adc
pop
movl
dec
inc
ret
xor
mov
movsl
mov
fucomp
pop
verr
in
xchg
test
pop
sub
fsubl
es
cmp
pop
xor
sbb
and
mov
sub
shrb
aam
ds
and
mov
push
push
lcall
sbb
dec
fadd
out
push
push
lcall
stos
xor
push
ror
push
imul
in
push
insl
sbb
adc
sub
repnz
sti
sti
mov
pusha
mov
dec
jl
movsl
sahf
fdivl
dec
mov
add
in
fnstenv
adc
dec
dec
xchg
cltd
dec
jne
push
jp
and
jae
dec
push
outsb
or
fsubl
in
mov
sbb
and
dec
mov
stc
xchg
adc
or
sub
add
mov
mov
jne
lret
add
add
cmp
clc
adc
sarl
js
mov
jae
orl
pop
fcmovb
or
xor
and
cld
inc
push
xor
sbb
frstor
jle
inc
and
mov
lret
ja
ss
cwtl
loope
aaa
add
out
pop
stc
dec
jmp
lds
scas
fidivrs
lea
imul
mov
inc
fdivp
enter
in
and
mov
mov
xchg
push
dec
loope
popa
ljmp
cmpb
fdivs
adc
fistps
loop
inc
or
push
clc
lock
mov
add
xchg
nop
jne
inc
insl
pusha
cmp
and
fxch
test
xchg
sub
sti
xlat
dec
mov
scas
leave
dec
lock
mov
mov
das
fildl
out
and
pushf
fnsave
sbbl
negb
mov
out
nop
sub
or
inc
movsb
cmp
int3
mov
addr16
dec
adc
out
dec
pop
loope
xor
mov
outsl
out
mov
sub
dec
out
mov
int
pop
jb
push
in
adc
addb
xchg
mov
in
iret
mov
je
mov
push
daa
and
xor
scas
test
fstp
sbb
mov
jmp
ds
sbb
add
and
fsubrs
pop
call
jle
jp
cwtl
push
push
les
cmpsb
inc
outsb
loope
bound
mov
xorl
mov
jno
test
cwtl
scas
sbb
jnp
rcll
or
mov
pop
scas
aam
or
fisttpll
mov
dec
pusha
pop
cld
sub
fwait
dec
xchg
dec
and
or
lock
sbb
addl
push
test
fs
sub
lcall
imul
in
fxch
ret
popf
and
sub
andl
hlt
push
mov
insl
leave
adc
lods
jg
sbb
push
pop
sti
mov
loope
inc
pop
cmp
mov
push
ficompl
or
rcrl
ss
and
cmp
sub
cld
add
mov
pop
xchg
test
xchg
sti
pop
out
outsb
adc
lret
cmp
and
push
iret
loopne
dec
call
popa
ljmp
iret
mov
sarb
push
pop
pop
push
sub
dec
xchg
int
test
cmp
movsb
loop
imul
push
dec
aas
leave
fsubl
test
es
mov
in
addr16
les
pop
cmp
dec
test
jae
xchg
push
outsl
sbb
fidivs
int3
stos
adc
or
xchg
pop
je
popf
mov
sar
outsb
imul
popf
cmp
lds
or
scas
xchg
andb
jae
push
push
out
inc
cwtl
bound
les
dec
ret
mov
and
fsts
xor
dec
jno
jmp
and
popf
js
mov
mov
or
xor
lods
inc
das
out
push
faddl
aam
aam
mov
adc
inc
mov
int3
adc
jnp
jbe
lock
add
or
xchg
lock
mov
nop
stos
dec
rorb
int
jle
sbb
int3
sub
xor
push
mov
js
adc
adc
xchg
xor
mov
out
pop
icebp
inc
add
sub
ret
stos
mov
rcrb
mov
ret
mov
test
and
jo
jle
push
xchg
inc
mov
jecxz
adc
mov
cmp
xchg
jbe
xchg
in
ljmp
push
cld
pushf
adc
push
pop
jp
or
push
push
inc
orl
adc
push
mov
dec
ret
jbe
mov
dec
ja
ja
nop
arpl
mov
fldenv
mov
lds
inc
mov
and
nop
xchg
inc
pop
xchg
scas
test
stc
push
sub
sub
loope
pop
jmp
lret
sti
rorb
repnz
fcomip
push
and
scas
sub
repnz
pushf
fmull
mov
rcll
cld
cmpsl
test
mov
mov
cmp
testl
push
sarl
adc
fbld
xchg
and
lret
xor
push
cmp
pop
sub
lret
pusha
mov
or
pusha
push
xlat
mov
lret
add
ds
loope
sub
ds
popl
jno
std
jp
lea
fdivrl
pop
adc
movsl
or
popf
and
xchg
out
mov
xchg
add
mov
jo
cmp
ret
add
mov
iret
push
cmp
push
pop
in
movsb
lret
push
jmp
mov
sub
arpl
ja
inc
pushl
repz
push
aad
cmpsb
icebp
js
fcompl
ret
and
cltd
pop
ja
push
inc
pop
adc
dec
pushf
call
test
fcmove
pop
repz
push
rcll
and
fiaddl
in
xor
sbb
mov
add
xchg
ds
sub
adc
xor
jbe
les
in
push
test
jle
inc
mov
in
shll
mov
stc
je
fiaddl
hlt
ljmp
dec
sbb
imul
mov
mov
lret
mov
jl
gs
add
mov
jbe
or
xchg
inc
out
push
jecxz
cmp
push
fmull
or
cmp
sbb
ret
adc
cs
stos
or
mov
paddd
pushf
add
orb
inc
sbb
push
filds
adc
out
cmpsb
jo
pop
pop
add
enter
cmp
lods
fcompl
movsb
or
and
ficomps
xor
pusha
aam
xchg
test
loop
out
mov
pop
xchg
insl
vpsubsb
mov
pop
test
out
test
and
sbb
repz
bound
pop
stc
int
scas
testl
leave
sub
jbe
enter
les
push
mov
push
les
and
and
mov
jge
or
cmp
mov
in
popf
sub
stos
or
lcall
inc
in
or
pop
fiadds
or
loop
fcmovnbe
push
sub
fdivs
or
dec
or
in
addr16
cmp
xchg
repnz
mov
jno
adc
scas
and
push
xor
js
add
and
repnz
push
mov
sbbl
mov
dec
push
pop
clc
outsl
xchg
jl
add
fildl
or
sbb
dec
mov
sub
cmp
and
pop
popf
dec
out
cmpb
aam
icebp
dec
and
inc
push
int3
int3
and
sub
js
sbb
push
lds
and
cmc
lret
in
dec
stos
push
ljmp
inc
ljmp
inc
jbe
pop
loop
or
push
xor
cld
xor
lahf
fildl
ret
xor
dec
inc
jge
or
stc
shll
push
mov
add
fsubl
mov
pop
pop
sbb
mov
sub
sub
pusha
in
or
xor
shlb
or
add
jge
pop
lret
add
fs
fistpll
and
add
adc
pop
xchg
in
popf
pop
cwtl
fadd
dec
jno
scas
aad
mov
sbb
arpl
inc
mov
imul
add
jecxz
mov
pop
pop
dec
test
mov
add
test
cmp
pop
mov
les
bound
xchg
add
rcr
dec
out
movsb
cmp
jl
int
mov
inc
std
nop
xor
out
push
xlat
mov
and
cmp
xchg
mov
xchg
add
mov
mov
fld
nop
negb
xchg
cmp
and
mov
mov
mov
pop
das
jbe
ljmp
and
icebp
enter
dec
gs
fistpl
data16
adc
shlb
and
clc
mov
jl
rcll
movsb
sub
sbbb
mov
fistl
and
cld
rorb
insl
mov
in
hlt
nop
jge,pn
sarb
adc
sub
mov
xor
into
pushf
lods
pushf
jo
in
xlat
inc
mov
repnz
out
sarl
and
pop
inc
mov
loop
push
mov
push
xchg
push
sbb
mov
jne
fwait
test
pop
jmp
mov
cld
lods
jge
cld
gs
rcrl
subl
push
jb
scas
xchg
mov
sbb
ds
mov
aad
push
lds
lahf
popw
mov
sub
mov
inc
push
pop
test
jns
nopl
dec
mov
mov
repz
or
mov
scas
mov
int
scas
sub
dec
out
lea
rolb
xchg
jg
mov
add
pop
loopne
roll
pop
jmp
xor
jne
mov
scas
sar
sub
fwait
fwait
adc
ret
rolb
pop
in
push
mov
rcl
in
cmp
jne
add
and
clc
cmp
xor
stos
add
push
xchg
sbb
adc
sub
dec
nop
int3
shlb
stc
ffree
sbb
cmp
dec
aam
fisubl
xor
xlat
cmc
mov
push
ss
mov
iret
inc
aas
mov
int3
and
xchg
xchg
xor
je
cs
mov
test
cmp
dec
cwtl
lcall
fisttpl
sbb
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sub
xor
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
addl
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
ja
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
mov
xor
xor
mov
adcl
add
andl
mov
inc
mov
cmpl
jge
jmp
pushl
call
cmpl
jb
movzwl
or
mov
andl
movb
mov
sub
lea
movl
cmpl
je
cmpl
ja
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
xorl
mov
xor
add
andl
mov
sbb
movl
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
subl
push
dec
mov
andl
xor
or
mov
adcl
push
andl
add
movl
jmp
movl
mov
movl
mov
movl
inc
movl
cmp
jb
sbb
mov
adcl
xor
subl
add
jmp
mov
mov
sbbl
xor
adc
mov
xorl
add
adcl
movzwl
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
jmp
mov
addl
movzwl
xor
add
mov
mov
inc
mov
mov
cmp
jne
movl
cmpl
je
cmpl
jle
jmp
push
call
xor
add
dec
mov
jmp
mov
and
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
push
pushl
push
pushl
call
cmpl
jb
xor
inc
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
xor
mov
andl
xor
xor
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
xor
and
add
orl
mov
adc
movl
or
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
mov
mov
mov
xor
xor
or
add
mov
mov
je
addl
mov
mov
and
mov
mov
xor
xor
xorl
sub
sub
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
call
mov
dec
mov
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
add
imul
orl
mov
sub
jmp
add
cld
shl
mov
xchg
lret
jmp
cmpl
addl
xchg
std
mul
or
aaa
cmpsb
mov
mov
push
jae
sub
ljmp
aas
nop
shlb
sti
cltd
rcrb
fsubl
jno
daa
add
jp
inc
rcll
js
push
lcall
dec
dec
push
add
rolb
es
sub
xchg
pushf
ja
add
push
mov
push
jno
sub
scas
and
cli
push
sbb
pop
xor
dec
nop
rcrl
out
sbbl
or
cmc
popf
add
push
icebp
push
pop
outsb
cmp
mov
xor
cmp
stos
aad
xor
push
mov
or
jbe
pop
xor
adc
mov
insl
test
leave
clc
imul
dec
adc
ficoml
loopne
lods
adc
and
mov
push
push
xchg
add
cli
pop
or
aaa
fucomip
cltd
cmp
mov
ret
push
mov
dec
inc
cmp
cld
jne
insb
sbb
insb
push
ds
xchg
mov
jge
aaa
xor
lcall
mov
mov
pop
jge
lock
mov
shlb
xor
push
cmp
enter
sub
add
adc
mov
pop
fisubs
mov
sahf
sub
nop
stc
imul
cmp
insb
mov
in
xchg
daa
repz
xor
dec
xlat
push
test
fcomps
lods
xchg
mov
addl
sub
stc
lcall
in
in
mov
jb
stc
xor
push
jp
insl
ror
ret
add
in
mov
sub
decl
fcomps
push
mov
mov
outsl
sub
leave
mov
addr16
sbbb
das
por
pop
add
mov
jb
mov
mov
dec
mov
push
pop
jae
scas
sahf
mov
hlt
mov
lahf
nop
and
imul
fs
jle
insl
insb
je
xchg
lds
in
pop
arpl
js
xor
lea
in
scas
jle
test
out
lret
xor
mov
test
push
push
fsub
mov
mov
sbb
push
cld
jbe
mov
lods
out
les
mov
inc
stos
jo
int
sub
xorl
rcrb
sbb
jnp
push
lods
dec
and
rcrb
je
lods
jmp
mov
xor
jno
lahf
fcompl
ret
mov
bound
push
add
jb
sbb
faddl
js
insl
addr16
or
mov
in
or
adc
sub
cli
adc
mov
outsb
pushl
ljmp
in
iret
loope
dec
mov
ret
dec
xlat
lret
add
xchg
mov
iret
and
and
mov
push
cld
insb
fadds
imul
add
xor
lea
or
and
mov
aad
jns
dec
js
mov
popa
mov
nop
lcall
cli
cmpsl
fidivrs
int3
push
filds
out
movsl
jecxz
mov
adc
push
clc
xlat
adc
or
outsb
test
xor
dec
and
movsb
xchg
push
rcl
fsts
vpmullw
or
adc
hlt
cwtl
repz
fwait
push
xchg
aam
xchg
inc
outsl
adcl
jb
jp
sti
push
pop
and
mov
xchg
push
sbbb
adc
pop
push
add
mov
lcall
bound
mov
lret
sub
push
mov
repnz
test
rcrb
cwtl
adc
cs
jnp
xlat
sub
cmp
xchg
add
cli
mov
addr16
test
mov
inc
jae
std
sub
pop
adc
ds
idiv
inc
cwtl
xchg
inc
mov
iret
fidivrs
mov
fs
jl
mov
test
stos
push
movsl
jno
xchg
mov
xor
pusha
pop
lods
push
adc
out
fcmovbe
popa
add
xorb
jecxz
add
dec
mov
ss
lock
xor
cld
push
add
imull
jo
fldenv
inc
int
add
mov
stc
cmp
mov
push
insb
outsl
inc
push
mov
jo
int
adcb
pop
bound
jge
lock
bound
adc
sub
je
lods
out
mov
imul
cld
cld
sub
enter
cld
mov
fstps
fwait
and
aad
out
lods
test
adc
and
and
aas
inc
sbb
call
sub
push
sbb
inc
idivb
leave
xchg
loope
aam
sti
inc
or
cmp
mov
insb
inc
fsts
cmp
popf
addr16
movsl
gs
aad
mov
cmovge
fsubrp
jl
pop
shll
push
push
jp
mov
scas
cmp
lods
or
ljmp
push
pop
xchg
psubsb
in
or
sub
mov
push
int
or
add
cld
jnp
or
inc
dec
fprem
xchg
jns
icebp
call
sub
fstps
sar
lds
insb
inc
add
jb
push
int3
cs
sub
adc
xchg
sbb
sub
add
or
mov
pop
daa
adc
in
mov
dec
cmpsl
xchg
cwtl
js
mov
dec
pop
mov
iret
pop
xchg
dec
mov
mov
mov
fldl
mov
sub
jecxz
in
fwait
sbb
sti
sub
mov
or
fadds
pop
xlat
lret
test
arpl
add
adc
sub
mov
cmpb
rcrb
into
out
dec
mov
mull
sbb
scas
test
aas
jo
repz
sbb
addr16
or
movsl
and
xchg
cmpsb
popa
sahf
dec
int
imul
ret
adc
pop
cmp
dec
lahf
push
fisubl
push
data16
aaa
dec
or
fildl
dec
das
jmp
jecxz
dec
or
push
pusha
test
sub
sti
lret
pop
or
pop
stc
jl
rorb
sub
popa
js
lds
jp
add
cmp
lds
pop
paddsb
mov
xorl
xor
fstl
push
iret
jb
cmp
mov
push
mov
ds
sub
test
pop
lcall
xor
out
lock
jns
push
cmp
orl
into
inc
imul
pop
sub
push
mov
mov
push
sbb
adc
xchg
dec
insb
int3
dec
subb
pop
jecxz
cmp
sub
mov
das
sbb
test
js
add
ja
mov
add
pushf
cmp
leave
inc
pop
inc
add
sbb
sbb
call
rcr
dec
fcmovb
adc
pop
jbe
orb
cmc
pop
inc
popa
and
in
sub
cmp
test
test
mov
xor
lcall
cld
pushf
outsb
jmp
std
les
sar
arpl
fsincos
xchg
adc
jb
mov
fists
or
lret
mov
icebp
pop
loope
mov
mov
add
test
add
pop
push
sub
js
fistpll
data16
mov
in
hlt
adc
sub
scas
inc
fdiv
les
add
sub
fwait
pop
jne
add
imul
xchg
dec
adc
lods
mov
imul
cmp
sub
out
sub
cmp
jp
inc
pusha
pop
outsl
movsb
adc
jmp
jo
sbbb
shrl
mov
jno
ljmp
paddusb
shlb
mov
into
and
push
and
jb
push
mov
hlt
and
pusha
gs
push
cli
repz
jnp
xchg
sti
test
xchg
push
mov
lds
mov
cmc
jo
adc
ja
insb
xor
xlat
sub
idivb
ds
push
jb
outsl
xlat
inc
cmc
and
and
xchg
fidivrl
insb
in
add
ja
pop
push
add
push
cmp
push
out
gs
push
jge
add
dec
fwait
pop
adc
call
das
cmp
sbb
sbb
push
es
jg
lcall
or
icebp
and
clc
xor
dec
ret
adc
jp
repnz
add
mov
dec
arpl
adc
dec
xor
sub
and
xchg
push
add
mov
js
pop
mov
xchg
sub
add
out
stc
je
movsl
and
pop
and
pop
or
iret
out
sub
mov
sarl
cmp
add
xor
mull
roll
xchg
dec
xchg
cmpsl
push
dec
or
lcall
stc
pop
das
subl
pop
sub
adc
icebp
cwtl
add
stos
enter
or
push
mov
pop
mov
das
add
in
int
jbe
add
add
xchg
push
js
pop
andb
in
sub
jb
cmp
rclb
stc
and
shll
fisubl
add
fmuls
loope
cs
mov
inc
out
lods
jae
push
push
xchg
stc
mov
pushf
push
insl
mov
push
pushf
cld
pop
xchg
xor
sbb
addb
paddd
adc
out
fs
stos
js
dec
cmc
out
push
movsb
icebp
mov
dec
ja
jge
or
aaa
lods
insb
movsb
movsb
testb
push
enter
dec
jmp
stc
fbld
xchg
pop
negb
jmp
xchg
imul
loopne
fwait
push
sbb
push
pushl
xchg
daa
sbb
xor
mov
sbb
lods
test
in
cli
aad
pop
stos
mov
cmp
mov
ret
lods
in
fdivp
mov
push
clc
gs
mov
test
enter
scas
insb
test
pop
jnp
cli
ret
insb
arpl
imul
push
mov
push
dec
jno
inc
lea
ljmp
and
shrb
dec
out
pop
and
add
add
sub
mov
das
and
xor
jp
ficompl
insb
enter
fisubl
loope
mov
inc
add
pusha
not
jns
lahf
jb
mov
lds
divl
mov
xchg
push
mov
dec
sbb
insl
scas
fwait
imul
pusha
clc
mov
mov
xor
cli
push
or
ja
mov
push
test
push
add
lds
icebp
xor
and
icebp
cmc
or
mov
int3
ds
xchg
mov
stos
jb
xchg
sbbb
add
test
loopne
ds
cmp
push
push
popf
ja
adc
frstor
cmp
sarb
inc
sub
inc
jg
mov
cmpsb
out
es
es
push
es
add
int3
mov
imul
adc
cmp
movsl
dec
cmp
mov
jne
aam
leave
mov
mov
mov
icebp
rclb
sbb
leave
popf
and
popa
enter
mov
inc
jb
or
and
clc
jnp
iret
ja
mov
add
inc
arpl
mov
arpl
xchg
pop
sbb
cmp
lock
push
push
mov
mov
fsubl
adc
dec
push
fdivrs
jns
in
std
push
pop
push
cmp
mov
sbb
dec
dec
adc
xchg
psraw
dec
mov
movsb
xor
popa
hlt
pop
cmp
rorb
xlat
mov
mov
scas
lcall
and
push
orb
idivl
jmp
sbb
gs
pop
dec
data16
das
adc
dec
push
sub
xchg
mov
xchg
cs
jbe
mov
adc
mov
push
dec
jg
xor
jp
pop
lds
pop
dec
and
dec
dec
sub
push
pusha
test
add
pop
pop
mov
sbb
adc
repz
and
and
and
dec
bound
adc
dec
sahf
ds
bound
and
push
lret
sub
pop
aam
add
push
pop
mov
add
enter
push
jge
mov
popf
les
mov
enter
and
in
fs
mov
add
mull
test
cmpsb
sti
popa
pop
out
xchg
jge
sub
inc
add
inc
adc
or
in
cmp
inc
pop
sahf
in
outsl
add
je
lcall
cmp
loop
sub
xchg
mov
jae
mov
sbb
pop
pop
xchg
outsl
mov
push
dec
js
iret
jae
xor
sub
dec
add
push
stc
push
lock
push
mov
mov
cs
mov
or
adc
cmp
mov
and
dec
mov
jb
dec
pop
mov
jno
or
popa
mov
bound
nop
cmp
pop
mov
xor
inc
pop
int3
test
enter
movsb
add
jmp
mov
leave
cmp
and
cmpsl
fistpl
cmp
push
cs
mov
cwtl
push
adc
mov
inc
xor
sbb
or
mov
xchg
in
xor
mov
stos
jp
daa
sbbl
dec
sbb
push
arpl
shr
jns,pt
sbb
shrb
pop
sub
xor
stos
inc
lock
mov
or
mov
fdivrs
cmp
or
rclb
or
pop
push
movsb
lds
aad
insb
mov
xor
adc
inc
aad
das
adc
movsb
mov
mov
lret
fildll
jb
insb
fmull
dec
jecxz
and
push
rsqrtps
data16
sub
loope
jbe
lods
lods
or
xor
jbe
jne
popa
jno
adc
xchg
jl
xchg
out
into
xchg
adc
mov
or
mov
fdivrl
iret
stc
jo
test
ret
jl
xchg
bound
insl
mov
push
je
mov
into
insl
jae
sub
add
loope
jno
pusha
mov
pop
cmp
mov
mov
and
and
lea
mov
cs
mov
inc
loope
pop
jp
hlt
jno
call
jae
jns
nop
add
lahf
insl
pusha
clc
jb
sbb
gs
jno
dec
or
ficoms
adc
ja
aas
scas
xchg
fwait
cmpsl
adc
stos
dec
pop
or
adc
dec
sbb
fidivl
es
int
or
push
cmpb
data16
lcall
arpl
mov
cld
arpl
shrb
sbb
push
pop
dec
bswap
push
xchg
push
scas
xchg
out
movsl
adc
jg
repnz
mov
adc
test
stos
shrb
cmp
divl
add
or
inc
and
add
outsl
jp
mov
or
push
ret
mul
pop
icebp
xchg
int
xor
repz
sub
jle
or
ss
sub
sub
popa
jne
daa
push
lods
or
push
add
mov
cmp
push
nop
xchg
push
mov
in
std
push
sbb
and
shlb
imul
stos
xorb
ds
je
sub
repz
cmc
movsb
jbe
lahf
add
dec
shll
fnstenv
mov
and
xchg
pop
gs
adc
lds
loop
mov
decl
inc
cmp
cmp
xchg
and
aas
jmp
push
popf
ja
test
pop
push
sbb
mov
outsl
lods
leave
in
out
iret
pusha
adc
cltd
nop
sbb
in
adc
sbb
fcoms
sub
fimuls
lods
into
jns
inc
sbb
test
idivb
inc
xor
lds
movsl
adc
dec
or
test
cvtps2pi
xchg
leave
movsl
xchg
lret
arpl
ss
push
les
loope
xor
mov
or
cmp
add
fisubs
sbb
xchg
sub
xchg
add
lea
fsubrs
outsl
jg
mov
cli
test
popa
es
sub
push
scas
push
xchg
lret
push
gs
popa
test
and
std
mov
xor
dec
add
pushf
dec
test
or
xchg
scas
int3
adc
outsl
cli
dec
std
lods
cmp
cwtl
subl
gs
pop
push
sub
jp
jecxz
imul
cli
push
fcompl
gs
inc
cli
repz
aas
sahf
sub
inc
mov
sub
int
repz
fcom
ljmp
pop
clc
aaa
xchg
insl
gs
in
pop
mov
inc
or
sbb
push
mov
jne
jge
mov
mov
dec
jp
cmpsb
or
das
jecxz
jl
mov
add
outsb
inc
mov
cmpsl
dec
jg
mov
popa
push
es
mov
mov
adc
mov
sbbb
jp
mov
dec
dec
or
stos
les
incb
cld
xor
in
jne
lret
mov
jne
adc
mov
imul
cmp
and
mov
out
and
loop
xor
xor
inc
mov
jne
decl
out
pop
xor
mov
or
adc
jo
lock
popa
mov
pop
push
or
sahf
aas
mov
push
int
inc
les
imul
fisubs
cwtl
adc
inc
sahf
mov
test
xchg
loope
fwait
push
cmp
ljmp
add
insl
fdivrs
or
mov
xchg
sbb
sub
pop
mov
mov
adc
in
or
add
in
idivb
clc
lds
sub
mov
test
jg
in
jge
xorb
outsb
dec
pop
xchg
bound
adc
leave
adc
ret
mov
jb
mov
movsl
jo
cwtl
jns
or
les
out
je
cmp
out
shlb
add
cld
test
push
test
push
mov
lret
adc
lds
in
movsl
and
das
negb
aas
fisubrs
mov
fsub
scas
push
xchg
cmp
inc
mov
popa
sub
add
popa
cmpl
out
dec
sahf
sbb
jbe
and
jne
std
mov
adc
aad
cmc
add
dec
dec
adc
lea
xor
int
daa
push
jne
dec
int
jb
adc
sbb
xlat
arpl
icebp
notb
sub
add
aas
push
fstl
mov
jl
pop
movsl
loopne
cmp
inc
mov
adc
iret
gs
adc
jl
mov
in
xchg
pop
sbb
shrb
or
je
outsl
cli
cmp
pop
fsubrl
cmp
mov
inc
mov
cmp
sar
outsl
clc
pop
data16
stos
jnp
dec
popa
cmp
mov
pop
or
in
outsl
cltd
xchg
cmc
xor
stc
dec
add
leave
scas
xor
pop
inc
cmpsl
cmp
mov
xor
and
movsl
daa
sbb
adc
xor
in
inc
iret
out
aam
and
inc
inc
mov
ficomps
pop
mov
xor
int
xorl
in
and
aad
bound
sub
sbb
adc
push
lret
dec
adc
cmp
test
lret
mov
les
jmp
push
pop
adc
loopne
ret
or
ret
xchg
mov
pop
in
out
cli
jno
push
lahf
es
mov
jnp
pop
xor
lods
xchg
xchg
andb
sub
or
shrb
dec
fsub
mov
shrb
xor
pop
push
insl
and
add
mov
nop
pop
cli
or
mov
mov
rcll
arpl
push
aas
push
pop
adc
je
jbe
jno
fistpl
sub
adc
jb
add
inc
ljmp
popa
jmp
les
scas
dec
xor
repz
or
inc
push
push
cmpsl
out
sbb
sarb
add
inc
shl
lods
dec
xchg
push
xchg
sub
cmpsb
std
ja
dec
jbe
mov
adc
pop
adc
fmull
loope
jge
jge
push
shll
cmpb
pusha
out
xor
fisubrs
repz
push
inc
pop
and
mov
test
jg
fwait
dec
bound
fdivp
or
and
fs
xchg
pop
push
jne
or
test
dec
jle
and
mov
mov
imul
lock
jbe
repnz
aam
in
ret
xor
out
mov
inc
jecxz
mov
and
pop
push
inc
jg
cmp
xor
add
popf
xchg
add
add
mov
cli
ret
lods
push
sub
loopne
mov
push
jae
gs
loope
sbb
aaa
dec
xor
std
xor
push
imul
sbb
jmp
ljmp
popa
xchg
dec
mov
mov
sbb
jecxz,pt
sarl
nop
adc
add
je
mov
and
pop
mov
fimull
je
jnp
mov
std
mov
lock
push
call
cmp
aad
imul
idivb
aad
inc
inc
inc
int
ficoms
mov
in
jecxz
jl
dec
lock
rorl
sbbb
sub
out
sub
sbbl
pop
nop
ja
and
mov
repz
in
daa
fisttpl
sbb
xchg
mov
repz
or
ret
mov
mov
cmp
dec
cmp
pop
pop
loop
into
and
fs
add
jl
stc
call
sbb
lcall
pop
mov
add
push
push
mov
xchg
sub
pop
pop
out
mov
jecxz
jp
sub
loope
xchg
popa
mov
clc
repz
or
sub
sbb
icebp
fsubs
push
fwait
mov
push
int
daa
xchg
imul
dec
cmp
and
cmpsl
xor
movsb
dec
xchg
cmp
mov
gs
mov
xchg
out
mov
les
pop
bound
shll
mov
call
enter
sub
jb
imul
icebp
fcomps
pop
pushf
mov
and
push
or
jno
push
in
lock
loope
inc
repnz
lock
xchg
adc
sbb
cld
dec
jns
adc
jno
fsubrs
mov
cwtl
leave
cmpsl
mov
sub
mov
dec
jecxz
es
sub
lahf
int
jo
sbb
xor
daa
lret
xor
sbb
jae
xchg
mov
imul
out
loope
lret
cmpsb
inc
sbb
out
push
mov
cmpsb
cwtl
es
mov
sbb
loope
jne
dec
rcrl
lret
sbb
cli
mov
loop
xchg
in
popa
mov
mov
mov
fwait
lret
push
sub
inc
cltd
xchg
pop
vmwrite
addr16
loopne
fnstcw
xor
test
xor
rcrl
jae
sbb
lret
xor
push
xchg
ret
push
jge
pop
push
jge
mov
jmp
into
mov
xor
iret
mov
dec
push
gs
adc
dec
inc
push
pop
popf
sbb
pushf
lods
push
bound
inc
xchg
push
clc
jnp
fcoms
negb
lahf
repnz
add
push
icebp
mov
inc
or
jmp
das
inc
je
push
notl
sub
mov
or
jno
fsubp
mov
out
push
int
xchg
pushf
and
call
js
add
scas
rcrl
stos
mov
testb
jae
loop
pop
mov
push
shll
pop
popa
pop
lcall
aam
push
jge
lods
xchg
push
mov
push
mov
outsb
and
adc
dec
and
mov
std
jbe
and
cld
fiaddl
inc
out
ret
gs
inc
mov
lds
mov
loope
nop
pop
out
jo
mov
jo
aaa
lds
xlat
mov
xchg
mov
mov
and
push
jmp
cli
lahf
inc
cmp
aas
rolb
mov
sti
mov
mov
xchg
imul
out
xchg
icebp
dec
or
fisubs
and
push
cwtl
leave
push
mov
pop
gs
xlat
mov
pop
test
xchg
fimuls
jnp
test
sbb
es
idivb
pop
jmp
stos
rol
cwtl
jl
inc
jmp
loop
jbe
cwtl
aad
bound
xlat
dec
mov
dec
jb
jns
popf
lods
test
and
ret
arpl
pop
mov
push
add
mov
adc
loopne
cmp
adc
and
or
dec
subl
fs
idiv
loope
shrl
in
xchg
xor
imull
dec
jne
repnz
mulb
enter
insl
pusha
jg
mov
fdiv
add
and
movsb
addr16
xor
pushf
pop
xchg
cwtl
ret
out
int
nop
popf
pop
adc
data16
or
int
and
negb
jp
and
loop
xor
fimull
fidivs
xchg
in
loope
fsubl
lsl
dec
jb
jne
push
pop
sbb
sar
push
xchg
mov
scas
orl
nop
sbb
sar
jnp
test
pop
jle
movups
lret
leave
out
adc
pop
mov
ds
fists
das
fwait
adc
call
inc
leave
pop
js
push
insl
adc
cmc
jge
into
fsubrp
mov
xor
jg
stc
pop
icebp
aam
push
mov
stos
les
aaa
pop
inc
loope
pop
mov
sub
mov
shlb
lods
imul
cmpsb
aam
push
mov
test
mov
js
xchg
ret
fmuls
je
hlt
pop
rorb
dec
xchg
cmc
out
sub
aad
in
inc
jno
pop
xchg
outsl
push
add
in
movsb
push
mov
int
movb
xor
cmp
mov
cmpsl
mov
aaa
mov
xorl
cmp
mov
or
movsb
dec
dec
sub
stos
mov
test
test
xchg
popf
lcall
outsb
adc
js
pop
mov
or
in
cmc
jmp
cmc
movsl
jecxz
iret
out
stos
push
add
cmp
cwtl
add
mov
or
xchg
and
mov
je
adc
jne
pop
xchg
mov
psrld
mov
mov
jmp
imul
out
xchg
add
lods
xchg
xchg
pop
and
fs
inc
mov
dec
lahf
pop
dec
les
test
sub
pop
mov
xchg
in
xor
mov
lock
repz
push
xchg
sbb
inc
pushf
bound
cli
arpl
aad
adc
in
xchg
loopne
mov
rcrl
stos
out
mov
or
movsl
data16
pop
int3
sub
aaa
enter
jg
sahf
cmp
clc
aaa
jmp
lds
clc
pop
add
xlat
ds
fistpll
or
es
lea
mov
adc
cmpsb
lahf
leave
push
and
mov
ret
jne
test
aas
push
jns
mov
adc
sub
lcall
gs
faddl
aam
sbb
mov
repnz
ja
jae
rclb
imul
jl
mov
mov
hlt
in
sub
in
and
or
mov
addl
pop
jl
scas
data16
cmp
and
push
loope
xor
insb
fisttpll
xor
mov
cs
adc
pop
imul
xchg
sarb
sub
lea
orb
xor
test
lods
cs
lea
insb
test
mov
arpl
in
hlt
repz
mov
cmpsb
sub
cld
aad
push
cmpsl
pop
aas
add
cmpb
dec
xor
int
jg
or
dec
jno
push
bound
shrb
pop
arpl
xchg
test
pop
test
jmp
mov
js
sub
cwtl
std
sub
cmp
in
mov
push
movsl
enter
mov
aad
mov
out
inc
lds
cwtl
adc
hlt
negl
test
push
cmp
mov
add
inc
xchg
pop
xor
mov
mov
pop
mov
fnop
cmc
into
lahf
fistl
sahf
mov
or
iret
xchg
pop
adc
popf
pusha
repnz
fwait
lods
jnp
sbb
lret
ja
pandn
mov
push
rorb
add
push
cmpsb
or
mov
jl
outsl
inc
cli
sahf
jmp
push
ffreep
roll
imul
add
pop
scas
lcall
aas
cmp
dec
test
popa
push
mov
dec
loope
dec
mov
ret
mov
mov
movsb
pop
in
imul
mov
push
out
gs
std
push
pop
movsl
push
js
daa
das
sub
xchg
ror
xchg
add
add
push
dec
mov
lret
movsb
jl
mov
dec
nop
push
out
lods
add
mov
rolb
pop
mov
ret
mov
dec
push
sbb
lds
je
dec
xchg
imul
mov
nop
xchg
sbb
xor
in
fimull
outsl
jns
enter
test
and
mov
mov
cmp
aas
int
mov
xor
xor
xchg
test
sub
fistl
imul
xchg
or
mov
xchg
lahf
jnp
jecxz
outsb
adc
ret
aaa
in
mov
push
pop
mov
mov
jo
cld
ljmp
bnd
lods
cmp
xchg
stos
pushf
push
rcpps
arpl
jb
aaa
das
mov
adcl
out
lret
sbb
sti
and
in
add
into
dec
cmp
sbb
xchg
mov
lahf
mov
and
call
pop
bt
js
int3
mov
loop
jne
jp
mov
js
icebp
xchg
std
ss
aam
cmc
ret
aas
lret
jb
andb
cld
jno
lret
push
jb
out
sbb
push
leave
xor
jo
scas
xor
lods
aaa
jp
pop
push
dec
push
lret
jo
int3
lcall
jne
cld
or
inc
ds
mov
test
popa
jb
cmc
nop
dec
add
fdiv
out
clc
andl
fdivr
inc
shl
mov
mov
fs
fmul
sahf
or
jg
out
or
int3
lods
ja
enter
aad
push
dec
mov
fs
dec
fbstp
and
addb
xlat
mov
stos
dec
and
inc
shl
data16
jne
dec
sub
pushl
add
xor
sub
movsl
push
mov
mov
mov
ss
mov
mov
or
mov
or
loope
aam
lahf
mov
or
cmovle
clc
add
and
add
add
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
add
or
mov
mov
xor
mov
andl
add
sbbl
xor
mov
movl
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
and
mov
add
mov
addl
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
sub
xor
mov
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
jmp
xlat
push
xchg
repz
addb
testb
push
cli
mov
add
fistl
xor
push
or
mov
leave
out
outsb
movsb
dec
lea
push
sbb
pop
bound
test
lcall
xchg
fstpt
aaa
movsl
movsl
out
movsb
movsl
bound
cmp
aas
vrsqrtps
push
in
bound
testl
outsb
lds
push
cmp
outsb
fimull
test
cmp
loopne
mov
das
iret
stos
scas
insb
icebp
ds
mov
pop
and
sub
test
lcallw
mov
addr16
inc
shll
insl
stc
cmp
inc
xchg
hlt
inc
push
mov
cmp
pop
je
and
pop
out
pop
mov
std
jae
loopne
ret
add
xor
mov
addl
das
or
ja
jbe
idivb
int
mov
sbb
hlt
and
lcall
in
mov
in
cltd
dec
push
pop
stos
movsb
insl
in
mov
mov
rcrb
scas
inc
dec
and
shl
fisubrl
dec
es
jb
test
push
test
sbb
mov
dec
repnz
mov
data16
sbb
aas
add
jb
cwtl
cli
adc
rolb
outsl
pop
aam
inc
dec
push
xor
inc
data16
xchg
sarl
fmul
in
jecxz
ret
nop
int
cmp
mov
inc
xchg
cmp
rcrb
int
lods
pop
adc
mov
stos
mov
mov
iret
push
mov
movb
mov
bnd
dec
test
gs
cmpsb
adc
fiadds
cmpsb
sub
fdivrl
int
out
gs
jns
sub
cmp
pushf
push
arpl
xor
popa
ss
aaa
mov
dec
fiadds
and
lds
pushl
mov
mov
sti
push
mov
psubw
popa
cltd
inc
in
das
gs
xor
inc
mov
pop
cli
addr16
xorb
adc
test
mov
or
mov
xor
stos
and
push
int
adc
out
xchg
sahf
dec
leave
jmp
fcoml
pop
xor
push
jo
out
mov
jb
movsl
sbb
in
xchg
mov
mov
mov
lahf
inc
dec
rorl
wrfsbase
sar
add
mov
popa
int
mov
adc
popa
jae
cld
imul
pop
out
jnp
jmp
mov
mov
jge
push
pop
stos
cmp
maxps
mov
aad
mov
outsl
dec
dec
hlt
imul
add
aaa
pusha
sahf
lods
stc
push
xchg
enter
push
or
stc
jno
lahf
lds
cmp
fbstp
or
adcb
push
dec
mov
lds
mov
cmova
lret
mov
sub
mov
xor
ret
push
lret
add
insw
rcll
xchg
xchg
xchg
pop
push
jno
sub
aam
je
ds
mov
xchg
imul
sbb
and
jae
adc
mov
imul
and
cmpsl
stos
sbb
sbb
orl
pop
sbbl
xor
stos
adc
dec
mov
loope
add
aad
out
mov
push
jb
ret
lcall
xchg
sub
ret
dec
fcompl
aad
pop
ljmp
mov
cmp
adc
xor
inc
into
loopne
imul
fldl
clc
dec
dec
or
lret
rcrb
xor
mov
fcmovnbe
mov
push
bound
loop
stc
ljmp
pusha
loop
and
xor
mov
icebp
adc
popf
insb
sbb
mov
adc
or
repz
stos
xchg
leave
ljmp
mov
xchg
movsl
cmc
ljmp
mov
cmp
jg
xchg
mov
shll
ret
dec
sbb
cli
and
push
xor
sti
add
loope
dec
mov
and
cltd
out
fs
adc
push
out
setp
pop
aaa
and
mov
dec
mov
je
mov
xor
adc
jnp
jns
mov
movsl
dec
cmc
stc
jbe
adc
stc
test
fimull
icebp
pop
push
mov
cmpsb
xor
gs
xchg
lahf
inc
das
xchg
cli
movsb
out
sbb
clc
xor
sub
cltd
mov
inc
test
mov
cltd
add
into
aam
es
or
adc
mov
mov
or
or
addb
mov
adc
dec
shr
test
adc
imul
cmp
stos
dec
loop
test
push
jmp
or
stos
cltd
scas
repz
mov
cmp
pusha
test
xchg
mov
fildl
shrl
rcll
pop
push
pop
out
adc
mov
cmp
in
xchg
mov
jnp
cmpsb
inc
pop
mov
sub
xchg
cmpsl
adc
fcompl
js
call
in
mov
cltd
icebp
outsb
jg
sbb
loope
sbb
cli
inc
das
xor
adc
into
and
and
js
js
mov
jb
lods
popa
arpl
pusha
adc
std
mov
fwait
sti
lock
and
jo
daa
sarb
mov
cmp
pop
std
dec
lock
js
std
mov
adc
mov
mull
ffree
notl
je
xor
jg
xchg
adc
leave
mov
shll
dec
adc
ja
inc
dec
ss
or
sub
cmp
mov
loop
cmp
cwtl
adc
dec
in
push
dec
cwtl
jns
outsb
jg
dec
lds
lods
dec
and
mov
inc
jmp
pop
sbb
imul
mov
scas
aaa
and
fists
push
stos
cwtl
data16
mov
cmpsb
cld
mul
sbb
insl
jp
inc
mov
rsqrtps
in
push
adc
je
lahf
imul
sub
lahf
xor
mov
sub
jp
mov
mov
jmp
out
stc
and
sub
clc
mov
add
mov
movsb
mov
or
int3
mov
mov
push
or
xor
test
dec
sub
inc
cmp
out
lret
ljmp
ds
shll
dec
mov
mov
mov
rclb
xor
push
iret
fmull
push
sub
nop
mov
scas
inc
out
dec
adc
pop
cwtl
or
addl
and
mov
daa
ss
mov
add
bound
cmp
adcl
mov
and
pop
lret
jg
dec
xor
lahf
mov
popa
xor
pop
rcl
ret
jo
pop
inc
and
scas
jnp
mov
ficoms
jp
imul
dec
xchg
pop
daa
sub
mov
mov
orl
mov
ds
popa
sub
push
popf
dec
sbb
pushf
or
in
mov
popf
mov
pushf
stos
aas
sub
rcr
cmp
or
jno
ficompl
dec
ljmp
dec
out
stc
mov
outsb
and
aam
out
cmp
testb
add
leave
outsl
inc
outsb
pusha
jl
and
ror
in
xchg
arpl
dec
lahf
cmpsb
xchg
jg
mov
sub
jge
mov
cmpsl
or
inc
push
push
adc
push
mov
mov
or
jp
call
adc
lret
pop
cmpsb
dec
movsb
xchg
ret
stos
aam
jbe
jle
in
add
mov
pop
xorl
mov
out
mov
rcll
ja
dec
lret
dec
mov
inc
les
rcl
cmp
out
mov
sub
push
cwtl
test
inc
sub
or
mov
loope
cmp
out
outsl
iret
shlb
imul
in
decl
push
jmp
clc
in
mov
iret
xor
sbb
pop
ja
xor
aam
jo
arpl
iret
je
and
mov
in
or
mov
int3
mul
xchg
je
xchg
sub
clc
inc
dec
and
mov
int
ret
inc
jecxz
into
push
subl
popf
out
aaa
repz
out
clc
add
lret
push
xor
dec
sub
push
inc
jns
testl
xchg
pop
pop
nop
push
test
sahf
sahf
add
aad
ffreep
pop
jg
jnp
sbb
xchg
mov
fstl
cs
xchg
or
lret
lret
ljmp
sahf
mov
lock
in
xor
sbb
test
cmc
and
xchg
mov
cld
xchg
leave
lret
scas
push
xchg
jae
imul
daa
cli
dec
call
push
sub
pop
jmp
insb
xor
push
mov
push
jg
test
lods
adc
sbb
adc
sbb
imul
mov
call
rcl
lret
pop
stc
jns
xchg
lret
adc
pop
push
sbb
or
movsb
rolb
pop
stos
push
dec
jp
cmpsl
test
or
jne
popa
cs
lcall
push
jne
les
outsb
sbb
xchg
sbb
fsubp
arpl
xor
cld
pop
and
jbe
dec
ja
add
cmp
lock
jge
insl
test
lods
adc
int
dec
in
aam
xchg
jmp
xor
pushf
inc
xchg
inc
and
ficoml
popa
icebp
js
mov
scas
dec
in
orb
fnsave
bound
std
das
lods
push
pop
ljmp
into
js
ljmp
xchg
repnz
pusha
push
out
sub
add
rcll
data16
cmp
mov
clc
sbb
xor
stos
sbb
cwtl
mov
outsl
xchg
hlt
movsl
dec
dec
sbb
stos
adc
cmp
sti
jle
jmp
fisubl
call
jno
adc
sbb
push
push
sarb
cs
cmp
addr16
dec
push
imul
xor
outsb
push
or
pop
sti
pop
or
push
hlt
out
mov
mov
shlb
imul
das
sarl
shll
push
inc
xlat
inc
push
add
popa
outsb
lret
sbb
inc
movsb
pop
rcrb
mov
sbb
mov
pop
mov
mov
imul
imull
fisubs
jo
ja
addr16
out
loop
or
and
cltd
mov
ret
aaa
das
mov
push
sub
inc
repnz
or
fnsave
cmc
xchg
rcr
and
dec
dec
jp
mov
xchg
lret
lods
cmp
fsubrl
test
xchg
lret
dec
pop
cmp
ror
xchg
roll
scas
rcrb
add
cld
xor
add
lret
loope
mov
adc
cmp
rol
or
mov
xchg
insb
sbb
ja
lahf
movsl
cs
cli
push
mov
loope
xor
jl
mov
orb
ds
pusha
pusha
inc
xchg
xor
sub
mov
and
mov
dec
adc
pop
outsl
xchg
xchg
pop
inc
xlat
insl
mov
rcll
jb
cmp
inc
jbe
lret
xchg
je
dec
dec
mov
mov
fs
adc
ret
xchg
fdivrl
aam
fstl
sbb
fwait
xchg
out
xchg
lahf
dec
adc
in
add
xchg
pop
mov
adc
jnp
cmp
movsb
fcoml
sahf
lea
sbb
pop
sbb
iret
bound
in
cwtl
and
push
dec
fmuls
daa
dec
repz
cmp
sbb
pop
add
das
es
repnz
dec
or
dec
fisttpll
xchg
dec
jb
inc
rcr
sbb
add
xchg
xor
scas
cmp
mov
inc
xchg
ret
pop
and
cmc
in
lea
sub
test
arpl
in
insl
cmpsl
lock
jno
outsl
dec
cli
jl
jmp
addr16
mov
scas
daa
or
push
insl
push
jle
test
nop
sahf
pop
sbb
jle
lcall
clc
cmpl
jne
stos
out
mov
xchg
sbb
jmp
xor
stc
test
fninit
and
sbb
jnp
arpl
enter
xor
insl
mov
cmpsl
mov
add
cmpsl
jns
push
sbb
sbb
inc
aad
xor
iret
je
mov
adc
sub
movsl
repnz
adc
sub
je
mov
sbbb
ds
adc
lahf
pop
fdivrl
pop
into
jle
xchg
inc
sub
inc
pop
nop
push
pop
xchg
sarl
mov
add
or
leave
dec
jge
lret
push
and
cmp
adc
pop
or
cltd
pop
into
add
sub
mov
clc
leave
cs
mov
mov
gs
mov
jne
pop
loopne
test
lea
mov
jmp
dec
insb
sbb
mov
jg
sub
rcrb
fdivp
movsb
pop
loopne
fisubl
shl
lock
mov
sbb
in
pop
add
xchg
jnp
jnp
sub
outsl
adc
in
lret
mov
mov
imul
jecxz
cmp
xchg
dec
test
and
xor
push
repnz
dec
push
sbb
mov
cmp
mov
inc
outsb
xor
imul
scas
mov
mov
fisubs
aad
int3
cmpsb
jnp
mov
pop
sub
je
test
sub
fsub
aad
mov
push
int
popf
repnz
insb
imul
stc
jnp
call
outsb
push
xorb
pop
lretw
sub
add
cmp
aaa
addr16
fmull
stc
mov
iret
sbb
push
inc
inc
in
add
inc
test
inc
mov
push
lock
repnz
fwait
cli
rolb
scas
pusha
adc
divl
cmp
pop
gs
es
xchg
imul
push
xor
jmp
mov
and
adc
add
jge
jle
test
decb
pop
scas
and
sub
inc
adc
fwait
xor
nop
test
pushl
jnp
jo
cmp
pop
test
adc
pop
outsl
cld
push
adc
jne
and
push
test
mov
mov
lahf
stos
icebp
mov
xchg
push
mov
or
loop
cmovg
mov
or
fcom
stos
movsb
ret
adc
fwait
jo
inc
sbb
repnz
mov
mov
ss
out
popf
pop
xchg
int3
sbb
mov
ja
in
ret
fnstenv
int
mov
push
lahf
lcall
jo
cmpb
mov
in
aad
mov
xchg
cs
push
dec
jecxz
xchg
cmp
dec
pop
jo
cltd
sbb
mov
mov
or
mov
push
pop
pop
xorl
fwait
pop
test
mov
xor
cmpsb
orb
or
push
mov
adc
outsl
cmp
add
cmp
dec
and
lods
imulb
cmp
stc
lahf
mov
mov
les
scas
pop
hlt
jmp
orb
out
xchg
jno
js
dec
sub
mov
aas
dec
adc
push
xor
cltd
push
pushf
sub
into
jle
or
imul
xchg
in
cmpb
cwtl
mov
dec
outsb
mov
sarl
pop
outsb
cmp
or
mov
add
cmp
pop
jns
mov
outsl
bound
shlb
xchg
out
js
mov
cld
dec
dec
mov
push
int
sbb
pushf
and
dec
bound
ret
out
sub
inc
pop
into
lret
adcl
mov
xor
cmp
jmp
ret
lcall
adc
jl
test
test
movsl
mov
call
xor
int
jno
in
arpl
in
stos
call
pusha
cwtl
add
imul
sbb
lret
jl
push
push
test
ror
xchg
push
idivl
cmpsl
loopne
sbb
pop
dec
in
int3
ljmp
add
jp
jnp
stc
sub
push
fildl
leave
stos
scas
jae
push
xor
push
in
je
mov
xor
in
mov
imul
imul
movsl
xchg
inc
sub
adc
popa
outsb
pop
dec
stos
addb
addb
push
sti
mov
out
outsl
add
jmp
shl
sbbl
and
fdivrl
das
shll
insb
lods
stos
cld
mov
jne
cwtl
lods
jle
xorb
cs
mov
mov
xor
fs
cmc
mov
or
and
sub
add
fsubrs
arpl
pop
xchg
outsb
jp
in
push
push
cmp
fmul
ficompl
out
mov
sub
fstps
push
ret
imul
mov
leave
inc
mov
jmp
stc
scas
xor
cmpsb
movsl
sub
jo
clc
add
cmp
add
mov
dec
testl
aaa
cmp
cmp
sbb
xor
int
in
scas
mov
cmp
inc
jo
ds
adc
mov
outsl
pop
xor
stc
arpl
shll
enter
xchg
or
push
inc
aaa
xor
adc
mov
mov
ljmp
jmp
lds
call
mov
mov
loop
add
fs
lret
inc
lods
jmp
jecxz
cld
outsb
mov
xchg
call
sbb
negb
fwait
xchg
std
xlat
or
repz
lods
pusha
adc
mov
cmp
lahf
sahf
lods
mov
mov
or
jae
lahf
cltd
ss
inc
push
or
xor
mov
enter
push
fistps
iret
push
and
daa
cwtl
int
nop
sub
insb
dec
mov
das
mov
cmp
pop
xor
jno
outsl
push
std
xor
mov
lcall
push
xchg
jmp
lods
pop
pop
push
xchg
mov
lods
mov
fisttpl
add
dec
cmp
jno
fidivs
cwtl
clc
xor
dec
stos
mov
mov
aam
jg
jg
lods
es
pop
add
lret
sbb
xchg
cmp
arpl
aam
insl
notl
jns
push
loop
fadds
dec
lahf
adc
pop
shl
aam
or
push
xor
mov
add
jbe
push
push
sbb
inc
out
xchg
dec
stc
mov
cld
out
in
xlat
mov
fcmovnb
sbb
push
lret
dec
add
jo
data16
inc
push
stos
sbb
dec
fsts
lcall
sub
add
cmp
cmp
adc
aad
inc
das
mov
xchg
mov
inc
cmp
std
in
cli
or
fs
mov
pop
push
clc
sub
mov
jg
into
out
lret
xor
shrl
or
inc
pop
mov
cmc
cld
adc
jns
jno
pop
divb
sbb
fidivs
sbb
addr16
inc
mov
adc
cmp
mov
mov
fs
hlt
push
mov
cmovs
popf
in
enter
mov
xor
ret
adc
adc
pop
inc
xchg
hlt
enter
pop
fistpll
pop
add
mov
adc
repnz
in
push
xchg
les
add
cli
pop
or
pop
ds
or
scas
fwait
inc
lods
mov
adc
mov
rorb
outsl
jle
jmp
fnsave
mov
adc
cs
std
mov
addr16
sub
scas
fstpt
dec
or
pop
inc
cld
add
clc
cmp
inc
loope
mov
call
cmp
mov
mov
and
push
mov
add
loope
pop
icebp
in
lret
vcvtdq2pd
xchg
js
pop
pushf
dec
mov
add
jmp
mov
sbb
push
jb
or
push
jecxz
mov
mov
test
imulb
loopne
cmp
out
dec
hlt
aad
in
movsb
cmp
pop
add
cli
stos
outsl
cs
into
negl
lds
es
fcompl
mov
and
or
push
inc
inc
cmpsl
mov
popa
jp
cld
fdivr
mov
push
pop
mov
enter
dec
xor
mov
push
test
cmp
adc
cmp
xchg
pop
sub
fcoms
stos
adc
push
jnp
lret
shrl
jmp
mov
cmp
cltd
test
mov
adc
jnp
dec
pop
icebp
test
stos
scas
dec
adc
push
sahf
bound
orl
loop
dec
add
push
mov
out
xor
pop
and
jmp
xchg
cmp
idivl
sbb
out
dec
mov
iret
repz
sbb
call
cmpsb
mov
inc
mov
cmp
fbstp
adc
hlt
pusha
inc
pop
jmp
test
mov
notb
dec
xor
mov
aaa
sbb
xor
movsb
dec
shlb
testl
xor
sub
das
lahf
ljmp
sub
mov
inc
xor
pop
mov
add
sub
xchg
dec
jb
hlt
xchg
int
mov
icebp
add
inc
ljmp
mov
xor
adc
out
cmp
xchg
mov
xchg
inc
cwtl
sbb
dec
cmp
pop
das
hlt
cmp
and
stc
adc
pop
repz
pop
mov
imul
xchg
mov
and
fidivrl
mov
or
icebp
popf
jnp
add
and
sbb
into
pusha
fwait
mov
fldenv
ret
xorl
mov
xor
xchg
adc
and
in
lock
mov
push
and
mov
sub
xchg
cld
xchg
xchg
add
aam
xchg
and
popf
sub
and
xchg
xchg
aaa
fcomi
inc
add
imul
xchg
inc
ret
jl
fadds
xlat
stos
roll
xor
cs
inc
divl
clc
pop
mov
daa
daa
sub
inc
pop
imul
aaa
daa
adc
jo
inc
push
inc
std
pmaxsw
add
cmp
out
dec
icebp
int
xchg
iret
mov
inc
mov
adc
daa
push
mov
pop
inc
jb
mov
cli
cld
clc
iret
cmpsl
cmpsb
sub
or
cltd
enter
mov
cmp
fldcw
fcmovne
clc
dec
sbb
std
das
stc
outsl
in
jno
movsl
sub
mov
scas
dec
or
sbb
jo
aaa
jl
mov
sahf
push
jno
aad
mov
cmp
adc
fldt
es
icebp
in
jb
pop
xchg
sub
sub
pusha
shll
data16
cmp
add
dec
lods
dec
fldcw
mov
xor
jmp
add
xchg
in
jns
push
sbb
fldcw
xchg
out
dec
ror
add
and
sbb
ret
aad
inc
mov
sbb
push
cwtl
cwtl
shl
in
adcb
mov
cmp
push
inc
icebp
mov
popa
add
cmp
sti
andl
sbb
dec
rorb
sub
sub
loopne
cmp
fstps
and
fldcw
out
sub
loopne
std
lret
pushf
pop
movzbl
fistps
fbstp
jns
jle
add
lret
cmp
mov
sbb
add
fwait
sahf
jmp
insb
cmp
sub
cld
adc
inc
je
flds
or
push
add
xchg
inc
stos
or
add
dec
pop
call
stc
cwtl
repz
or
and
mov
cmp
sub
sbb
mov
pop
push
lods
call
mov
outsb
rcl
es
int
pop
push
adcb
into
out
xlat
das
xchg
decl
lods
pop
push
mov
fucomi
jns
sbbb
xchg
clc
and
xor
loope
scas
xor
mulb
stos
into
mov
movsl
xchg
or
jle
mov
add
sbb
inc
push
scas
and
inc
ja
jno
or
and
sbb
aaa
scas
das
add
fsubrp
xchg
xor
xor
inc
push
repnz
stos
enter
pop
or
pop
mov
mov
daa
ss
cmc
pop
daa
addr16
adc
dec
in
xor
push
adc
sbb
jb
push
xor
inc
icebp
sub
int
mov
xchg
sbb
dec
mov
inc
out
mov
pop
hlt
insl
mov
mov
xor
push
jecxz
mov
jae
push
arpl
inc
aam
mov
insb
xor
ljmp
fidivrl
pop
insb
mov
lods
inc
dec
fistps
sub
cld
jmp
mov
push
std
and
ljmp
icebp
inc
xchg
xchg
sahf
mov
cmpsb
cmc
addr16
xchg
stos
popf
lahf
arpl
mov
fwait
out
setp
and
cmp
dec
mov
sbb
out
fucomi
xor
dec
fimuls
ljmp
fistpll
pop
addr16
sti
cmp
pop
ret
and
mov
jne
fsubl
xchg
sti
out
push
divb
pop
ja
xchg
push
lods
cmpsb
fnstsw
and
adc
push
repz
jl
ficoml
and
add
cmp
out
scas
mov
repnz
pusha
nop
xchg
cld
jae
mov
push
or
add
xor
cltd
xor
inc
lods
and
or
cmp
lods
jl
push
loope
xor
xchg
lahf
int
arpl
sub
daa
push
jno
test
sti
scas
xchg
mov
sub
inc
cmc
mov
push
addr16
lahf
fmul
pop
dec
into
mov
jl
dec
pop
ljmp
enter
xchg
hlt
outsb
mov
rolb
pop
imul
mov
jle
push
add
mov
decl
xchg
adc
shll
jmp
push
inc
sub
sbb
sahf
pop
and
hlt
out
lahf
imul
cmp
sbb
out
in
rorb
sub
mov
xchg
mov
xor
or
pop
mov
dec
mov
fadds
push
clc
dec
je
mov
push
gs
adc
insl
push
rolb
mov
jbe
test
cmp
sahf
movsb
ss
shlb
ljmp
mov
mov
out
cmp
jae
mov
sbb
lret
into
push
xor
sti
jecxz
shl
data16
fldl
or
xchg
xor
dec
inc
mov
and
xor
pop
or
lcall
leave
filds
cmp
xor
or
lock
add
mov
cmp
shr
or
xchg
mov
push
rcr
mov
jb
icebp
gs
fldt
cmp
mov
jno
scas
sub
stc
das
cli
addr16
stos
jno
and
mov
hlt
cmp
inc
lds
iret
popa
and
mov
call
mov
fsubrl
or
out
icebp
std
div
aam
clc
mov
icebp
mov
mov
push
mov
push
cwtl
adc
cmp
push
sub
stos
jno
xor
jl
stos
and
push
aaa
mov
jbe
push
pop
cmp
cmpl
mov
daa
sahf
add
dec
push
xor
mov
mulb
int
inc
fisubl
jb
lods
mov
popa
test
in
cmp
push
mov
sbb
dec
push
repz
aam
addr16
sbb
iret
add
mov
clc
inc
jle
dec
cmpsb
xor
sub
cmp
cmc
push
push
pop
push
out
lods
nop
sbbl
jp
paddb
jg
pop
sub
lret
jl
push
cs
jge
push
or
push
les
mov
jmp
adc
cmc
lods
pop
and
xchg
push
and
adcb
fbld
xchg
mov
mov
fcomip
mov
xchg
pop
jnp
call
outsb
adc
in
mov
cmpsl
add
push
mov
mov
add
inc
inc
fwait
cli
adc
push
add
aas
pop
fsubrl
in
scas
or
sub
aaa
insb
mov
mov
mov
shl
leave
fisubrs
es
cmp
addr16
div
cltd
mull
xlat
sub
or
push
cmc
shl
loope
loopne
int
ficompl
stc
mov
pop
push
add
sub
push
push
mov
in
loopne
iret
pop
and
cli
sbb
sub
mov
push
imul
xor
push
outsl
lret
xlat
les
aad
iret
bnd
arpl
insl
add
jae
xchg
or
ja
mov
movsb
lcall
cli
fldt
icebp
out
adc
and
inc
nop
outsb
mov
in
and
sub
fidivl
jle
dec
jb
bswap
lahf
sbb
pop
xor
gs
adc
outsl
repz
std
add
lret
adc
dec
popf
cmp
inc
ss
or
bound
adc
dec
not
movsl
pushf
enter
dec
popa
mov
push
cmpl
dec
add
adc
mov
adc
jo
leave
es
divb
sbb
jmp
cmp
inc
push
dec
in
outsl
jecxz
testb
pop
repnz
adc
add
sbb
xchg
rorb
or
mov
and
pushf
xchg
lods
push
fisttps
sbb
cwtl
enter
sub
rcll
popa
test
pusha
sub
xor
mov
addr16
cmp
mov
cmp
xor
xchg
loop
das
pop
xchg
ljmp
or
call
into
shl
and
adc
and
lea
mov
xchg
jle
push
rcl
lret
sbb
mov
loop
cmpsl
cltd
mov
xchg
sub
mov
jae
dec
push
inc
shl
mov
ret
addr16
test
bound
test
pop
out
mov
push
mov
pop
stos
push
push
mov
testl
xchg
or
or
xchg
cmp
ljmp
cmp
push
pop
stos
clc
jno
jne
fbstp
mov
insl
push
cmc
dec
ja
out
or
data16
push
jo
adc
test
imul
mov
or
sub
fstpl
xchg
push
mov
sub
push
pop
mov
adc
push
xchg
loop
stc
js
inc
pop
and
in
daa
cmp
aaa
mov
notb
rorl
sbbl
nop
xchg
fcmove
cmp
clc
repnz
mov
adc
dec
mov
cli
xor
adcb
pop
mov
popf
pop
mov
adc
pop
add
or
ljmp
push
or
rolb
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
jmp
jo
cmc
dec
orb
sub
mov
pop
addl
adc
and
pop
pop
das
test
rol
fdivrp
stos
popf
aaa
lock
jnp
jg
dec
js
inc
repz
jmp
xchg
mov
mov
xor
in
insl
ds
pop
jnp
mov
mov
mov
jge
mov
xchg
mov
out
jnp
inc
xchg
lret
ss
xor
aad
and
pop
sbb
push
mov
dec
xor
iret
scas
jo
cltd
ljmp
mov
mov
xchg
shlb
out
test
lods
inc
xor
cs
shl
push
xlat
mov
pop
pop
mov
push
jp
inc
loope
cld
push
outsl
sub
pushl
pop
jo
xchg
mov
add
scas
sahf
mov
iret
push
xor
movsb
sbb
out
ja
add
repz
imul
push
insl
push
jo
adc
push
dec
mov
jge
xor
insl
mov
sub
xchg
aad
scas
sub
xchg
mov
or
test
test
popa
xchg
jmp
test
or
mov
leave
push
dec
jp
mov
jne
xchg
mov
decl
sbbl
imul
cmp
mov
rclb
lahf
and
adc
pop
mov
aaa
jmp
mov
imul
jbe
and
mov
sub
cmp
mov
aam
or
pop
lcall
mov
call
daa
and
sub
mov
repz
pop
iret
jecxz
and
lret
push
iret
xor
push
dec
out
inc
sub
repz
lret
rcrl
push
lret
sub
xchg
fisubrs
or
push
jns
xchg
mov
sub
add
cli
push
andb
or
mov
or
iret
outsl
orb
rcrb
push
sti
cs
imul
xchg
rep
push
sahf
mov
jbe
sbbb
cmp
sar
inc
inc
loope
cmp
adc
mov
mov
lock
xchg
insb
ss
sbb
call
adc
jno
inc
dec
in
aad
in
scas
ja
adc
stos
mov
dec
sbbb
lret
int
cmc
repnz
stos
mov
stos
push
pusha
fwait
aam
mov
lret
sub
fucomip
sahf
and
push
cli
xor
addl
pop
int
mov
adc
and
pop
or
stos
jne
daa
sub
and
cmp
cmpsl
cmpsb
insb
xchg
shrb
imul
test
push
pop
cwtl
inc
bound
jle
xchg
push
add
aam
jo,pt
mov
jmp
cltd
inc
ja
cmp
mov
cmp
lcall
dec
lods
sub
inc
mov
xor
scas
jge
mov
out
repnz
cmpsb
dec
dec
mov
outsb
cli
movb
push
sub
dec
js
push
ret
push
pushf
int3
pop
push
xlat
adc
fimull
push
ljmp
mov
jl
mov
jno
xchg
lock
sbb
jae
into
add
lock
sub
cmp
mov
sbb
lods
adc
xchg
inc
or
out
pop
sahf
xchg
pusha
pop
sub
insb
pop
push
mov
sbb
and
pop
pop
mov
xchg
lahf
sub
xchg
movsl
or
cltd
add
mov
mov
cltd
xchg
adc
call
shlb
pop
call
inc
popa
bnd
pop
fadds
inc
push
pmaxsw
jmp
pop
popa
into
xor
jo
aam
andb
aad
and
and
xlat
pop
sub
lcall
mov
mov
mov
cmpsl
aas
jbe
xchg
pushf
sub
and
cmp
mov
repz
repnz
mov
rclb
test
loope
pop
ljmp
push
in
mov
sub
mov
mov
jmp
ffree
xchg
scas
cmp
xchg
out
ss
sahf
sub
outsl
clc
xchg
sahf
enter
jp
cmpsl
in
dec
mov
ja
jns
push
adc
bound
in
in
push
ja
sti
popa
inc
adc
xchg
sbb
data16
nop
cmc
jo
repnz
sub
cmc
icebp
cmp
xor
lock
sub
icebp
inc
xchg
dec
mov
sbb
mov
popf
cwtl
nop
imulb
xchg
pushf
xchg
sub
pop
add
cld
cmp
cmp
scas
les
mov
js
inc
pop
dec
mov
faddl
sahf
and
shlb
into
inc
mov
push
pop
push
sbb
mov
loopne
lret
lock
xchg
push
xchg
or
and
lds
and
push
inc
mull
data16
mov
pop
in
or
and
mov
jo
scas
in
xchg
shl
mov
xor
add
subl
movl
in
iret
cld
cmp
scas
xor
adc
mov
push
hlt
mov
pop
sub
mov
sub
enter
repnz
jecxz
arpl
pop
mov
repnz
inc
icebp
clc
push
mov
or
or
mov
push
fcompl
or
push
mov
les
pop
jmp
les
dec
mov
mov
gs
das
push
lahf
inc
insl
xchg
jp
dec
xchg
cli
stos
ret
adc
pop
enter
fchs
jno
dec
push
into
mov
fdivrl
daa
sub
aaa
scas
popa
jl
cwtl
mov
xchg
adc
sub
out
dec
mov
lret
lea
test
lcall
lret
fsubl
push
dec
sbb
sbb
sbb
mov
sbb
or
jnp
sub
sbb
shlb
cmp
jnp
cmc
test
pop
dec
mov
cmpsb
in
push
adcb
inc
add
mov
ret
or
add
jae
insb
push
mov
cmpsb
sbb
fistpl
in
loop
out
es
fildll
and
pushf
or
sub
pop
xlat
and
stos
je
sub
or
lock
mov
mov
fwait
jg
cli
jecxz
les
add
mov
insl
dec
sbb
pop
sub
fs
push
mov
into
ljmp
cmp
rcrb
and
fabs
es
es
add
sahf
int
into
xchg
sarb
lock
inc
xchg
or
mov
lret
repnz
scas
fisubl
inc
dec
jl
jne
loop
pop
mov
xchg
fnstenv
add
jnp
sbb
jnp
test
sub
dec
add
push
loopne
loope
pop
sahf
xor
sbbb
int3
std
cmp
mov
ret
test
sbb
mov
mov
push
push
dec
dec
or
repnz
test
rol
sbb
mov
orb
stos
pop
push
test
imul
bswap
mov
add
push
sub
mov
dec
rorl
adc
sbb
dec
aam
loop
mov
cltd
sti
into
push
xor
div
pusha
mov
dec
in
mov
add
dec
rorb
shll
bound
loopne
stc
and
xor
je
push
xor
mov
shll
loopne
repz
ja
sbb
xchg
jo
xchg
mov
loop
nop
lret
cmp
ja
lods
aam
and
sbb
cmp
std
xchg
or
add
push
loopne
adc
inc
xchg
xchg
sbb
jb
jg
popa
daa
push
or
mov
add
sub
lcall
addr16
icebp
pop
mov
inc
outsb
jg
sbb
push
dec
jne
inc
jecxz
or
sub
insl
imul
add
dec
or
cld
daa
cmpsb
jns
push
in
adc
mov
flds
clc
mov
ret
mov
addl
movsb
scas
adc
out
xor
imul
sub
cs
push
cmp
out
sbb
dec
mov
std
lods
adc
and
push
je
std
sub
cmp
xchg
sbb
ret
stc
fsubr
popf
cltd
xor
pushl
lock
arpl
cmp
push
jns
sbb
jmp
mov
pop
jne
xchg
jmp
push
sub
dec
icebp
int3
jl
inc
sahf
cmp
mov
mov
shll
inc
or
dec
mov
dec
pop
and
jg
insb
sahf
mov
xchg
adc
in
dec
jb
sbb
adc
aaa
jno
mov
mov
jl
sub
repz
rol
sbb
lds
addr16
jle
mov
xor
aaa
pop
popf
lahf
mov
mov
mov
out
js
ss
cmpb
addr16
sub
movsb
mov
mov
insl
jbe
adc
inc
cmpsl
es
into
data16
in
repz
in
stos
xor
adc
jb
ss
in
int
clc
adc
imul
xor
cltd
movsl
pop
jecxz
leave
xorl
cmpsl
mov
in
testb
cmp
cmp
push
loope
sub
inc
dec
sbb
adc
lods
gs
and
lea
insb
scas
jl
jb
add
pop
mov
dec
jae
jae
dec
mov
in
xchg
bound
adc
shll
and
push
lahf
inc
mov
lock
testl
daa
insl
mov
inc
inc
jp
iret
int3
outsl
ret
push
cmp
loope
andl
lods
test
cmp
or
push
sub
sbb
sub
or
fimuls
mov
mov
adc
cmpsb
test
mov
xchg
sbb
dec
cmp
ret
into
add
xchg
loopne
cmp
jmp
jle
insb
xor
ror
xor
push
mov
fdivs
enter
out
push
sbb
clc
mov
test
sti
sub
or
mov
mov
jnp
fcmovb
lcall
jne
fs
jge
mov
call
cmp
xchg
pop
or
subb
adcb
mov
cmp
jecxz
fimull
mov
cltd
adc
push
gs
and
fiaddl
gs
sbb
popa
lods
inc
jge
sbb
out
push
idiv
inc
mov
lea
lds
in
and
or
push
adc
mov
push
push
xchg
jl
xor
stos
mov
push
sbb
mov
jae
cltd
mov
or
popf
pop
adc
mov
jg
sub
mov
jns
mov
shrb
pop
jmp
das
into
cmp
jge
push
popf
clc
pop
loope
jmp
xor
movb
pop
jp
sahf
mov
enter
inc
repz
faddp
ficoms
pop
negb
je
divl
leave
cld
imull
jl
lret
jmp
inc
or
repnz
and
jle
ss
mov
call
jo
mov
insw
inc
dec
ja
loopne
jnp
daa
adc
inc
idivb
fidivrl
das
or
pop
inc
shl
popa
xchg
loopne
and
adc
mov
xchg
ds
das
in
xor
sub
scas
pusha
xor
pop
jns
testl
xor
jmp
xor
fucomp
f2xm1
ja
mov
jl
mov
mov
out
adc
jae
mov
das
xor
call
pusha
or
jge
push
or
dec
std
inc
ljmp
xchg
cli
xlat
rcrl
push
mov
imul
jb
les
xor
repnz
shlb
loop
sahf
mov
daa
add
add
fidivs
jmp
filds
sahf
enter
and
shll
into
data16
mov
jmp
lods
mov
add
sub
adc
cmp
repz
mov
mov
cmpsb
lock
cmp
inc
or
pop
jns
mull
and
int
xchg
adc
inc
in
lea
mov
jecxz
mov
mov
inc
xchg
jnp
mov
jae
sbb
stos
mov
mov
jl
inc
idivb
mov
sub
es
cwtl
push
ljmp
cmp
mov
inc
fcomps
dec
xchg
mov
fidivrs
fisubrl
xchg
and
fidivrl
js
stc
clc
sbbl
push
mov
sub
push
jae
fdivs
push
add
pop
imul
pop
bound
pop
ret
jp
adc
lock
sbb
stos
shll
sbb
lods
sbb
dec
jb
xor
sbb
xchg
xchg
cld
paddusw
and
mov
sub
insl
ljmp
stos
dec
jmp
push
inc
jecxz
mov
xchg
sbb
ficomps
aam
les
pop
in
mov
inc
jns
addr16
sti
mov
sbb
fiadds
in
mov
pop
jae
mov
xor
stos
push
cmp
fisubl
out
mov
in
sub
xchg
fiadds
int3
ret
rcl
xchg
mov
pusha
popa
inc
daa
stos
rcrb
aad
or
divb
insb
cmp
xor
scas
cmpsl
cld
mov
cltd
push
shr
inc
push
lods
pop
stc
push
jbe
int3
adc
lea
inc
js
outsb
mov
add
leave
cltd
data16
inc
jp
cld
and
fwait
imul
lock
or
mov
pop
adc
mov
mov
cmpsl
cmpsl
adc
data16
and
out
cmc
cld
xchg
and
mov
stos
xor
mov
pop
sbb
mov
mov
das
mov
jae
cmpsl
xchg
xorl
mov
sbb
mov
sub
xor
enter
lahf
insl
or
out
pop
push
pop
xor
dec
jae
sbb
sbb
push
lock
mov
sti
dec
or
xchg
push
xor
test
je
insb
mov
aas
popf
out
fs
jle
xchg
out
mov
adc
xor
sub
daa
jmp
aad
addr16
mov
frstor
push
jge
mov
mov
outsb
push
mov
jmp
and
pop
xchg
je
add
jb
jecxz
lret
roll
jge
cmp
test
or
sarl
mov
sub
movsl
les
sub
sti
xor
rolb
lret
std
ss
sbb
cli
data16
sahf
adc
adc
fld
popf
mov
js
push
mov
shll
shrb
jle
mov
mov
xor
jne
adc
call
inc
xor
xlat
pop
cli
in
sbb
pop
insb
std
mov
cmc
mov
cmp
repz
adc
jbe
mov
xchg
dec
jns
cwtl
iret
xchg
cmpsb
loope
jmp
push
or
push
mov
add
and
aaa
fldenv
aaa
mov
mov
test
test
test
mov
lds
push
inc
xchg
jge
cld
in
addr16
repz
imul
dec
loope
lock
add
lcall
inc
mov
xchg
and
cmp
inc
je
push
push
sub
lret
cltd
push
insb
mov
lcall
ljmp
sbb
sbb
push
add
jo
mov
push
mov
adc
sub
leave
jnp
and
les
call
sub
test
and
mov
arpl
inc
fld1
mov
fidivrl
dec
fwait
lea
xchg
cmp
pop
push
js
mov
ljmp
jnp
aaa
fisubs
and
mov
push
cmp
lods
popf
lock
adc
popa
daa
sbb
cmp
and
aad
cmpsb
adc
outsb
xchg
loop
pop
arpl
test
mov
out
mov
pushl
dec
cld
pop
or
jecxz
xor
js
insl
push
lret
jge
or
in
in
push
test
pop
jp
fistpll
call
repz
adc
cwtl
mov
or
test
jl
mov
pop
mov
dec
dec
push
fstpt
add
sub
mov
jbe
fwait
addr16
aam
fadd
daa
rcr
je
ret
mov
les
jmp
fs
icebp
bound
dec
ja
daa
add
mov
add
mov
lods
lock
xor
fwait
sar
xchg
cmpl
lret
lods
orb
dec
push
jo
jne
cmp
out
fmul
in
mov
mov
ljmp
jge,pt
cli
jecxz
xchg
bound
mov
test
pop
xchg
imul
out
insb
fisubl
test
or
int
push
pop
addr16
es
ret
mov
sbb
lahf
fcomip
mov
lds
mov
cmpsl
dec
xor
inc
or
data16
scas
enter
lret
jge
sbb
push
xlat
jmp
insl
es
pop
mov
mov
sbb
call
pop
mov
jnp
insb
mov
sahf
and
ljmp
cmc
out
negb
push
add
mov
in
push
in
jnp
dec
push
push
push
jecxz
jg
clc
or
cmp
jle
jp
xorl
fisubl
dec
sub
sub
fidivrs
lcall
aad
jmp
loop
pushf
cmp
push
addr16
push
enter
inc
int3
dec
jnp
xchg
nop
jge
pop
xchg
push
dec
xchg
cltd
xchg
cmpsl
xchg
gs
add
addr16
sub
ret
test
xchg
jo
loop
repz
and
or
mov
sub
aaa
cmp
inc
sbb
jl
aam
jae
push
mov
pminsw
pop
repz
cmp
xor
loopne
psllw
repnz
xchg
scas
enter
sbb
out
call
mov
cld
xchg
lds
xor
daa
or
bound
outsb
fsubrs
mov
adcl
jg
flds
mov
ficoml
and
out
jnp
popa
sub
sub
xchg
in
cli
jg
inc
arpl
sub
sbb
cmp
jmp
sub
cmp
pop
or
sti
pop
int
add
pop
sbb
add
loopne
add
hlt
in
movsl
push
pushf
es
xor
cmc
loopne
mov
jl
shl
jmp
mov
cmpsb
push
jecxz
jge
sbb
lock
dec
and
outsl
mov
push
pop
or
rcll
mov
xor
or
lds
inc
test
add
dec
jmp
fiadds
pop
cmp
xor
push
push
rcrl
icebp
sbb
xor
or
repnz
push
mov
hlt
mov
sub
gs
adc
pop
cmp
cld
scas
cmovl
and
daa
movsl
cmp
xchg
dec
aaa
test
addl
lahf
and
push
rcll
adc
pusha
push
adc
xchg
push
mov
cmp
incb
insb
pushfw
enter
fbld
fisttpl
pop
ss
shrb
out
or
pop
repnz
mov
cmp
nop
adc
or
stos
pusha
mov
lcall
xchg
js
cmp
mov
push
sub
outsb
lods
aaa
loope
call
lahf
cli
mov
bound
out
ficoms
or
popa
push
dec
ljmp
repnz
sbb
fistpl
loopne
js
mov
shlb
xor
ds
setbe
jmp
mov
sbb
cmp
fnsave
jae
es
rcll
sarb
outsl
xor
jmp
sbb
sti
sub
push
mov
movsb
loop
sbb
movb
push
imul
fldl
rclb
xor
lahf
mov
push
push
popf
cmp
fcoml
xchg
push
push
and
jo
divb
dec
mov
jno
add
pop
adc
push
pusha
mov
sub
jl
mov
fisubl
fsts
imul
cmp
loop
inc
gs
mov
or
je
sbb
out
shlb
mov
pop
adc
jne
xor
outsl
fs
stc
scas
ret
je
push
xor
movsb
lock
data16
xorl
cmp
adc
xchg
hlt
adc
pop
es
imul
xchg
filds
dec
es
cwtl
andb
test
push
or
adc
sub
inc
loopne
xor
cmp
mov
mov
lods
les
inc
push
cmp
and
dec
xchg
xlat
pop
imul
mov
jle
dec
fnstsw
mov
js
push
in
fnsave
mov
out
sar
pop
out
inc
std
dec
push
dec
test
and
rolb
xor
cwtl
mov
aam
or
jl
jbe
xor
xorl
jb
push
cmp
fistl
mov
loope
lea
mov
adc
pop
clc
enter
stos
ja
cmp
ljmp
mov
sbb
lds
xchg
cmp
add
mov
nop
aas
sbb
mov
adc
scas
ja
andb
and
cmpsl
add
scas
icebp
out
popf
dec
sub
pop
nop
jmp
ja
out
sbb
insl
and
inc
rcr
add
hlt
and
push
jnp
out
xchg
push
add
sub
inc
adc
insl
pop
sarb
cli
hlt
and
data16
test
imul
mov
jnp
cmpl
inc
sbb
sbb
bswap
fcomi
mov
mov
mov
sti
insl
push
sti
rol
and
movsb
roll
fisttpl
insl
fwait
in
movl
mov
arpl
mov
nop
xchg
and
adc
dec
xchg
dec
xor
pop
in
sarb
out
push
in
fstpt
std
mov
pop
pop
bound
mull
les
adc
mov
adc
pop
sahf
call
je
aas
sub
jg
mov
and
lcall
into
mov
fs
gs
pop
imul
subl
xor
inc
push
cwtl
jmp
imul
or
in
sbb
add
daa
and
int3
inc
jne
cmpsb
subl
cmp
push
outsl
mov
mov
cmp
push
sbbl
or
lret
sub
bound
cmp
jne
in
push
pop
or
pop
sbb
mov
add
adc
push
or
mov
add
les
sbb
ss
xor
cltd
push
nop
inc
fstp
push
scas
out
inc
outsl
movsl
in
inc
mov
jp
test
xchg
adc
mov
push
and
sbb
or
xchg
test
adc
aaa
ret
inc
mov
sub
insb
mov
sub
jno
nop
mov
and
pop
aad
ret
or
enter
sub
push
hlt
int3
rcrb
int
jmp
push
popa
enter
fisttps
jb
orb
or
xchg
inc
shl
imul
or
dec
add
cmp
and
mov
mov
cmp
or
pop
and
fstpt
nop
dec
fisubrl
loop
mov
jl
in
and
stos
jmp
jg
cs
or
adc
fsubrp
negb
mov
inc
inc
lret
negb
pop
add
mov
mov
addr16
and
cld
dec
dec
xchg
mov
subl
lret
mov
aam
rorl
enter
push
ljmp
clc
push
sarb
mov
loopne
testl
jno
aas
pop
xlat
cmp
clc
xchg
ja
movsb
testl
adc
cmpsb
cltd
cld
pop
iret
popa
lahf
jge
add
push
and
cmpsb
insb
mov
pop
cli
dec
std
sub
or
xor
xchg
pop
jle
lret
aam
jle
aam
pop
and
and
sbb
mov
cmpl
push
sub
repz
add
repnz
bound
xchg
aad
hlt
das
mov
stos
stos
call
fldenv
and
xor
inc
jmp
test
adc
push
fildll
pop
adc
cmpsl
and
pop
pop
push
or
cmp
and
pop
ds
mov
je
roll
dec
pop
fcomps
and
push
test
lahf
sarb
fadds
xor
ds
nop
arpl
iret
dec
push
fbld
cmp
ljmp
jecxz
inc
lock
or
icebp
loop
lods
adc
test
pushf
or
xor
ljmp
fstpt
push
sahf
inc
mov
push
sub
xor
in
inc
stos
and
repz
sbb
push
repnz
out
stc
dec
jne
jns
mov
push
adc
inc
dec
sbb
adc
nop
add
xor
cltd
push
outsb
movsb
or
xchg
add
movsb
leave
popa
pop
sub
push
xorb
and
sbb
inc
aad
ss
or
arpl
ss
jle
push
mov
mov
lahf
icebp
and
xor
leave
jns
inc
xchg
adc
jae
ret
dec
lret
lret
imul
leave
pop
outsl
push
sub
insb
xor
nop
or
dec
xor
dec
mov
popa
jo
stos
mov
sub
xchg
hlt
push
aas
out
sub
cmc
inc
inc
cmp
imul
scas
test
out
popf
test
lahf
adc
call
js
in
loop
loop
js
sub
mov
ret
stc
sti
mov
jae
jne
inc
ja
inc
mov
pop
clc
outsb
sub
int
jp
sbb
fnsave
repz
mov
ret
xchg
std
les
mov
push
insb
test
adc
xchg
outsb
mov
loopne
adc
scas
sub
cmp
int
mov
imul
lcall
inc
pushf
and
loop
push
and
es
sub
scas
and
push
xlat
imul
js
and
mov
repz
je
xchg
repnz
mov
mov
fisubs
mov
mov
or
movsb
jge
push
sub
xor
repz
push
fcomps
mov
outsb
mov
aas
dec
xlat
dec
gs
inc
lret
pop
es
lret
dec
stos
scas
xor
rcll
or
popf
les
jl
jae
xchg
push
sub
mov
loope
out
outsl
and
sahf
cld
movsl
add
lret
mov
fs
xor
hlt
mov
sub
jb
or
lret
pop
ret
pop
repz
mov
lcall
pop
push
mov
pop
xor
pop
jo
xchg
push
lock
int
rcrl
nop
lods
mov
daa
jmp
mov
mov
jmp
into
dec
imul
add
cmc
add
lods
loopne
and
xor
sub
stos
stc
rolb
mov
ds
or
out
mov
xchg
pop
lcall
adc
ds
pop
adcb
sub
es
sub
inc
mov
xlat
pop
lret
icebp
xchg
addr16
iret
sbb
enter
pop
pop
and
push
inc
popf
lods
mov
es
loop
xor
or
adc
adc
int3
jae
clc
or
cmp
xor
pop
arpl
ret
xor
xchg
popa
sbb
adc
mov
mov
pop
std
xchg
sbb
daa
jae
pushl
xchg
add
insl
insb
out
mov
dec
adc
push
cltd
mov
pop
stc
in
sbbb
leave
arpl
and
ret
jno
or
cmp
mov
ljmp
and
mov
leave
aaa
mull
int3
mov
xor
ss
mov
ja
aas
movsl
fsin
mov
xorl
pop
in
data16
loopne
xchg
jp
rorl
sub
lock
andb
cld
jmp
aam
insb
push
jo
mov
dec
push
insb
shll
imul
or
arpl
or
adc
cmpsb
add
mov
mov
scas
or
and
cmp
imul
jge
fcompl
mov
pop
xchg
and
pop
mov
loopne
jmp
call
aaa
mov
gs
pop
mov
fldenv
test
faddl
in
lcall
ficomps
mov
das
out
sbb
push
mov
daa
negl
mov
xchg
ficoms
sbb
xor
pop
inc
push
sbbl
cld
push
sub
mov
out
fdiv
fmull
add
jbe
enter
scas
mov
adc
lret
push
mov
cmp
test
gs
jnp
add
in
adc
or
aam
lretw
les
lock
xchg
pop
nop
sub
sarl
aam
nop
mov
lahf
sahf
jge
cli
mov
imul
jns
shrb
stos
cmp
push
test
mov
les
dec
sbb
jae
dec
test
aaa
add
mov
popf
sbb
jmp
mov
add
loop
movsb
sbb
popa
loope
call
jnp
dec
hlt
cwtl
adc
sahf
cld
loope
mov
cmp
xlat
arpl
and
add
idiv
mov
lea
subb
mov
pop
je
push
cli
dec
adc
rcpps
mov
and
frstor
outsl
mov
scas
movsb
call
into
fadds
xor
push
lahf
sbb
sbb
psubusw
mov
dec
inc
clc
gs
pop
and
mov
cmp
add
pop
xchg
outsb
add
out
iret
sahf
adc
mov
jp
push
jmp
ds
add
jnp
mov
sub
ljmp
xchg
xor
push
cmp
fisttps
sub
pop
cmpb
sbb
arpl
je
vaddss
add
inc
lock
jle
gs
pushf
xor
iret
rclb
cld
xchg
dec
cmc
ss
test
jae
and
addr16
lock
and
push
inc
xchg
inc
cld
dec
adc
xchg
pushf
push
out
andb
inc
inc
push
jl
and
jne
dec
cmp
cmp
pushf
movl
stos
mov
and
or
adc
lods
mov
ret
out
rcl
pop
jp
pop
rol
or
jp
mov
mov
mov
repz
sbb
mov
xchg
insl
adc
jnp
lret
sbb
jge
loopne
push
sub
shrl
or
dec
inc
pop
scas
rclb
or
push
push
imul
mov
inc
xchg
or
rcrl
outsb
pop
pop
and
or
pop
adc
test
xchg
pop
xor
iret
aaa
adc
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
jmp
adc
xchg
add
rorb
ds
addl
sub
push
jne
xchg
adc
xor
push
in
mov
sbb
pop
filds
stos
inc
push
jae
outsb
mov
mov
dec
cmp
sbb
inc
cwtl
scas
inc
xchg
dec
out
mov
mov
cld
popf
pop
insl
push
stos
mov
xor
fimull
int3
data16
xor
xor
orl
push
inc
stos
arpl
mov
cmp
popf
shrl
lcall
iret
daa
jae
xchg
int
xor
jp
xchg
jnp
cmpb
insl
std
aam
mov
cs
addr16
neg
sub
mov
int3
jo
xchg
or
lods
repnz
test
popf
pop
mov
jno
mov
cmp
dec
push
add
fnstcw
jmp
adc
xchg
ljmp
in
mov
mov
testl
stc
in
jb
pop
stc
aas
sti
cmp
imul
jp
push
mov
inc
xor
mov
mov
insl
test
mov
mov
scas
nop
dec
xor
push
push
xor
inc
sbb
rolb
add
cmp
jns
cmpsb
pop
dec
cmp
rcl
sub
leave
mov
adc
out
pop
xchg
xchg
repz
inc
pop
fistpll
xor
push
dec
xchg
push
fwait
lret
jae
mov
lds
mov
jbe
sub
push
in
sub
inc
fcoml
jmp
adc
pop
xor
pop
jge
repnz
fwait
jge
xchg
push
js
shr
in
jae
xchg
lock
inc
mov
adc
sub
jmp
lahf
notl
testw
imul
ja
in
test
pop
je
jno
outsb
into
push
cs
push
dec
roll
mov
iret
paddw
mov
push
lahf
mov
mov
mov
pop
fs
out
adc
jnp
jnp
or
mov
xlat
fstp
or
callw
mov
xchg
test
dec
xor
and
xor
pushf
gs
std
gs
loope
lret
test
jnp
dec
in
or
push
cmp
ss
aaa
cltd
not
sti
aam
mov
ja
cmp
out
pushf
jecxz
mov
lcall
popf
shl
stc
dec
cmp
aad
rclb
add
or
jns
dec
mov
push
jg
mov
sbb
movsl
insl
rcll
fists
xchg
aad
sbb
xor
dec
mov
mull
stc
jo
mov
mov
fistl
or
es
enter
mov
cs
push
push
or
enter
popf
test
iret
popf
decb
or
xor
rolb
lahf
cs
mov
cmp
and
jns
and
mov
and
cwtl
lahf
and
fstl
jnp
inc
push
add
mov
test
xor
inc
pop
push
xor
pushf
and
test
lds
pop
inc
popa
xor
push
sub
sub
fwait
push
fwait
insb
xor
cmp
or
mov
mov
add
xor
fs
cld
mov
inc
sub
inc
push
nop
out
fwait
xchg
iret
stc
dec
in
out
in
outsb
bound
roll
ror
inc
or
or
mov
jae
mov
add
ds
xor
scas
jl
cwtl
movsl
adc
mov
lods
lret
lods
push
pop
fcmovnbe
adc
xchg
test
jo
lcall
loop
inc
sub
js
inc
or
xlat
and
mov
xchg
adc
mov
es
cmp
xchg
sahf
pop
mov
mov
pusha
test
out
or
jno
inc
out
dec
xchg
push
add
stos
mov
jne
mov
xchg
fistl
scas
mov
mov
dec
xor
cmp
test
int3
stos
mov
jl
xchg
sub
cwtl
test
ror
mov
fdivr
push
int3
dec
mov
out
inc
mov
add
push
stc
gs
call
jge
cmp
mov
popl
je
loop
imul
and
aam
call
outsl
outsl
adc
or
ja,pn
or
repnz
pop
loopne
enter
add
push
xor
or
rclb
pop
cmp
test
mov
movsl
and
pop
in
mov
dec
int3
imul
xchg
lahf
iret
pop
add
jge
icebp
mov
imul
or
jle
inc
xor
jg
imul
les
push
pop
mov
dec
fs
xchg
lahf
push
lcall
xchg
popf
xor
mov
pushf
fimuls
rcl
or
push
cmp
lret
pop
movsb
inc
in
iret
mov
out
repnz
dec
pop
sbb
rorl
push
pop
sbb
and
scas
pop
pop
jbe
into
xor
and
jl
adc
rorl
frndint
mov
xchg
mov
add
fwait
shll
dec
push
xchg
stos
imul
imul
into
pop
or
in
pop
test
inc
mov
popa
cltd
dec
bound
lods
add
ds
jge
xchg
cmp
dec
pop
out
das
subl
dec
pop
gs
mov
cwtl
jl
adc
in
sti
pop
scas
xlat
aad
in
pop
mov
mov
and
push
xor
fwait
mov
dec
pop
in
lahf
fdiv
cmp
shrb
sbb
sbb
push
mov
inc
js
aad
push
sub
mov
or
jbe
push
shlb
adc
adc
js
movsb
mov
mov
idivb
jno
popf
popa
sbb
fwait
stc
sbb
out
mov
mov
mul
adc
jle
inc
mov
pop
xchg
outsl
pop
adc
ja
sub
aas
or
sub
out
out
dec
es
sub
repnz
adc
mov
test
ret
jl
int
pusha
pop
push
aam
pop
xor
or
addb
mov
pop
xchg
movsl
scas
push
xorb
mov
add
cli
cmp
lea
mov
stos
xchg
ds
lods
inc
aas
cmp
mov
mov
das
pop
or
lcall
addb
ss
xlat
insl
push
xchg
les
dec
sar
subl
push
loopne
inc
mov
mov
push
shlb
cmc
cmp
dec
aas
lods
subb
pop
cwtl
or
jecxz
jl
stos
sub
insl
sub
outsb
xor
mov
dec
pop
mov
lds
sbb
imull
jp
sbb
or
test
cmpsb
mov
jns
es
lea
inc
ljmp
and
test
push
icebp
scas
push
xor
xchg
decl
jle
dec
sti
sbb
jno,pn
xor
icebp
jl
dec
out
test
cmp
test
add
dec
aaa
aaa
or
jne
cmp
icebp
shl
xchg
xchg
mov
inc
pop
push
pop
mov
mov
int
loop
xor
inc
add
add
or
pusha
cwtl
xchg
inc
ret
mov
fstps
xchg
or
call
add
adc
xchg
or
repz
lret
sub
sub
xchg
insl
ja
ds
clc
insl
jae
add
inc
cmp
aad
test
test
rolb
jmp
mov
rcll
mov
pop
aas
sbb
lds
ret
push
mov
ficomps
and
jbe
mov
loopne
aas
in
push
test
cld
addb
sbb
push
out
ret
jns
pop
test
outsl
pop
jl
jae
lea
mov
out
nop
jg
aam
mov
and
arpl
push
xchg
notl
push
cmpb
stc
jo
or
outsb
cmc
icebp
cmpsb
dec
fnstenv
loopne
push
xchg
cmp
xchg
into
int3
dec
cld
cmpsb
fucomip
push
mov
mov
mov
sbb
popf
rclb
inc
ror
sbb
mov
dec
xor
pop
lret
sub
push
ds
inc
pusha
fsubl
arpl
out
repz
scas
js
jge
fldpi
inc
sahf
xchg
pop
cmp
xchg
jns
lock
rcl
imul
push
bnd
sub
shr
rcr
lret
cmc
mov
jmp
scas
xchg
mov
push
popa
jns
cmpb
rol
inc
jg
and
sbb
push
int
mov
or
aam
xor
pusha
jns
mov
or
sahf
inc
test
test
jl
mov
leave
int3
stc
bound
out
subl
hlt
aas
mov
loop
out
fisttps
mov
push
hlt
call
mov
stos
xor
push
push
daa
daa
popa
cli
lahf
adc
inc
imul
xchg
fcomp
loopne
xchg
std
mov
adc
add
out
mov
or
sbb
fidivl
and
adc
pop
cmp
jp
jbe
adc
push
lods
mov
fstpt
insb
je
stc
sub
cmpb
testb
mov
adcl
and
pop
icebp
pushw
mov
pop
xchg
ffree
sti
shrb
xor
ds
testb
push
sub
xchg
jnp
inc
inc
mov
xchg
lahf
push
mov
dec
mov
in
cmp
aad
inc
testl
dec
call
cli
jge
and
leave
pop
sub
jo
pushf
leave
pop
mov
lahf
and
cmp
or
xchg
add
and
add
loope
iret
or
cmp
xchg
int3
sub
mov
sbb
inc
in
xchg
mov
scas
inc
mov
pop
call
pop
and
ret
add
xor
out
push
inc
outsl
jl
or
jnp
mov
icebp
inc
xchg
sub
inc
clc
inc
pop
dec
jl
jmp
xchg
add
sub
addr16
test
fwait
dec
mov
int3
rcl
rcl
mov
jmp
in
mov
rorb
gs
aad
insb
shll
aad
xchg
cmp
xchg
js
ja
cmp
outsl
pusha
ficomps
pop
repnz
lods
fdivrs
xchg
sbb
inc
fbstp
push
imul
xchg
jb
imull
push
sub
and
push
dec
mov
mov
aaa
jl
inc
inc
mov
pusha
ret
add
dec
mov
outsb
fdivs
lock
or
or
xchg
outsb
fisubs
ja
mov
lcall
subl
insb
scas
fs
mov
mov
mov
fcom
sbb
dec
push
or
stos
jnp
scas
outsb
sbb
rorl
ja
les
icebp
incb
mov
stos
hlt
imull
mov
jl
daa
inc
shlb
fwait
pop
out
push
sbb
lods
jbe
fsts
push
mov
sbb
push
repz
movsl
sbbl
xchg
add
push
std
das
xchg
pushf
lahf
add
clc
aaa
loope
sbb
out
outsb
jmp
push
je
mov
inc
lret
cmpxchg8b
inc
dec
xor
fsubl
cmp
inc
cltd
mov
scas
sub
icebp
dec
imul
addr16
and
or
test
sarb
push
pop
inc
int
push
sub
mov
pop
ja
arpl
mov
cvtps2pd
test
push
lahf
leave
jmp
daa
sub
mov
or
call
lea
ja
cmp
fsubrl
sbb
addr16
rcr
addr16
or
mov
frstor
fimuls
addb
cs
daa
loopne
jo
pop
outsl
sbb
mov
jecxz
repnz
scas
push
lret
push
xchg
mov
call
cmp
loopne
xchg
pop
movsb
xchg
dec
add
and
les
outsb
jg
sbb
push
das
std
das
or
pushf
cmp
inc
cli
fisubl
mov
or
mov
sbb
or
lods
mov
or
add
lock
mov
les
sbbl
mov
pop
test
xchg
and
jne
pop
pop
jae
mov
dec
mov
mov
insb
or
inc
insl
cvtdq2ps
hlt
fs
pushf
movsl
sbb
inc
inc
pop
in
push
data16
leave
insb
inc
sub
outsb
push
out
sbbl
adcl
pop
dec
adc
push
xchg
push
punpcklbw
xor
addr16
repz
lds
add
mov
or
jmp
inc
icebp
subb
add
aam
sbbl
out
cmpb
daa
add
sbb
fcoml
dec
lock
add
unpcklps
pop
and
pop
inc
add
nop
mov
ficompl
mov
out
sub
and
fisttpl
daa
add
fwait
push
data16
pop
roll
cld
stc
bound
dec
ret
jnp
in
fildl
cmp
xchg
in
push
pop
test
addl
je
dec
and
push
add
mov
xchg
pop
cmp
stos
mov
or
cmp
inc
xchg
sbb
inc
loope
jecxz
or
inc
xor
imul
lods
sbb
jg
cmp
mov
mov
outsl
or
je
decb
jl
js
jg
dec
mov
addr16
scas
jp
pusha
js
xchg
and
enter
call
mov
push
ss
mov
pop
adc
orl
fwait
clc
shlb
jecxz
cmp
push
frstor
dec
shlw
dec
sahf
xchg
jbe
bound
enter
lret
and
ja
cmp
cltd
cmp
ss
inc
dec
test
pop
xchg
xchg
mov
loopne
xchg
fs
ja
mov
cmpsb
dec
cmp
hlt
push
cmc
and
pop
pop
and
ljmp
rcl
aad
sbb
cmp
pop
mov
add
in
inc
inc
xchg
fsub
jle
jmp
xchg
mov
js
fs
push
ss
xlat
cmp
pop
cmp
push
pop
lahf
les
mov
loope
lods
jge
dec
adc
lret
call
cwtl
test
mov
push
mov
adcb
cmp
sbb
xor
add
ss
popl
sbb
jno
call
xor
lods
or
pop
or
in
stos
sbb
int3
mov
aad
sub
out
bound
mov
mov
cmp
hlt
sub
fbld
jp
xchg
mov
sbb
cltd
xchg
xchg
inc
pusha
inc
or
mov
insl
dec
mov
pop
fdivrs
push
mov
pop
xchg
shrl
sbb
dec
pop
lahf
jp
and
jmp
push
mov
sub
xchg
pop
add
dec
mov
popf
mov
add
aam
cmp
bound
mov
imul
pop
push
push
int3
fs
leave
mov
cmp
inc
mov
out
lds
push
mov
insl
loopne
fs
or
aam
add
add
mov
ja
push
xor
lret
mov
push
sub
shll
int3
xchg
cmp
add
dec
xor
dec
xlat
sub
sbb
add
lcall
ret
lods
jae
sbb
lret
jmp
push
mov
shll
dec
cmc
jecxz
jnp
fsubrp
jecxz
out
repz
js
call
mov
insl
mov
jecxz
ficoml
fwait
scas
daa
and
xor
out
dec
and
xor
pop
movsb
mov
sbbb
inc
pop
cwtl
mov
shlb
hlt
or
sbb
jne
inc
out
out
push
jb
into
adc
add
std
mov
arpl
add
and
test
and
aam
ror
push
jns
inc
sub
cmp
push
int3
cmpsl
fbstp
jmp
jne
loope
cmp
in
adc
xchg
outsb
cltd
js
and
nop
xor
cmc
mov
shr
mov
push
data16
enter
cli
mov
repz
popf
sahf
xor
hlt
dec
jp
stos
fsubrl
in
test
sbb
sti
roll
jmp
mov
stc
push
mov
pop
jle
and
sub
mov
or
icebp
mov
into
out
das
je
jg
mov
sub
push
or
in
gs
mov
test
aad
cmp
cmc
ljmp
out
xlat
andb
fwait
or
sub
adc
xchg
xchg
ret
gs
outsb
sub
rep
push
add
push
rsm
dec
lods
or
xchg
ss
mov
jnp
mov
jb
mov
dec
or
nop
inc
add
xor
cmp
das
in
pop
xchg
xor
scas
mov
push
pop
icebp
aad
or
push
add
push
ret
dec
dec
mov
test
mov
xor
rol
dec
xchg
add
rol
mov
movsl
xchg
js
dec
push
imul
in
adc
adc
mov
sbb
and
lods
lods
jno
loopne
insl
test
sub
jns
dec
adc
and
rcr
das
jmp
jg
or
in
cmp
aam
test
push
int
xchg
sub
cld
lods
mov
xor
outsb
pop
dec
es
jge,pt
inc
les
sbb
out
ret
lea
addr16
push
sub
adc
int
cmc
std
call
mov
out
test
or
mov
addr16
in
loope
mov
sbb
dec
adc
mov
mov
clc
aaa
xchg
movsl
sub
xor
sbbb
leave
jle
aam
pop
mov
rclb
sar
jg
outsl
mov
fidivs
scas
dec
hlt
cld
addr16
in
cld
imul
clc
cwtl
es
sub
sarl
push
loope
mov
pop
movsl
sbb
int
cmp
cli
cmp
adc
nop
rsm
loope
sub
lds
insl
and
rcrb
push
sub
sbb
shrb
cmp
dec
mov
xchg
or
daa
cmp
fmull
lods
movsb
inc
jg
lods
cli
rolb
and
jb
mulb
xchg
mov
pop
data16
mov
fidivrl
ficompl
daa
lods
dec
cltd
push
test
outsb
addr16
hlt
inc
in
sti
repnz
inc
mov
cmp
loope
fldl
push
scas
xor
mov
insb
mov
cmpsl
xchg
dec
inc
sbb
sbb
xchg
das
test
pusha
fs
bound
iret
inc
inc
jnp
jp
test
add
mov
inc
mov
mov
mov
jp
sub
lods
inc
jle
pop
imul
mul
dec
cmpsb
mov
out
cmp
lea
fidivs
xchg
add
sti
push
dec
or
and
aam
jp
xor
sbb
and
dec
mulb
xchg
std
ficoms
xchg
je
cmp
add
jo
and
push
icebp
and
xor
inc
lock
adc
in
push
push
xorl
pop
sbb
push
outsb
xchg
cmpsl
push
mov
rcl
enter
push
movsl
mov
jg
cmp
jmp
insb
aam
jne
cmp
mov
jnp
jmp
insl
pop
nop
cs
or
flds
loopne
aad
fldenv
xor
cmpl
scas
mov
ja
andb
xorl
bound
cltd
sbb
clc
jb
outsl
push
in
pop
inc
popf
adc
das
es
push
pop
out
sub
inc
cmpsb
jl
jbe
push
outsl
ret
mov
inc
dec
shrl
es
jmp
cmp
cld
sti
cmpsb
fisttps
mov
or
add
xchg
sti
mov
insl
mov
stc
or
lods
in
jb
xchg
aaa
fnstsw
mov
push
stos
call
mov
push
adc
add
jle
jg
pop
cmp
xlat
scas
movsb
sub
sub
fwait
mov
push
add
andl
int
cmp
mov
mov
in
add
mov
mov
mov
in
movsl
sbbb
push
lea
in
ret
outsl
inc
popl
decl
xor
push
push
fistpll
jae
fisttps
fstl
psubq
std
or
xchg
jbe
lret
adc
push
ja
stos
ljmp
ret
notl
fsts
sbb
mov
inc
mov
push
filds
jns
test
imul
push
jg
pop
mov
xchg
mov
lds
sbb
mov
jae
mov
popf
fidivs
jmp
jl
cmp
mov
lret
cmpsb
cld
mov
in
cld
mov
adcl
adc
mov
or
roll
add
dec
lods
shlb
jmp
pop
cld
lret
or
jp
imul
test
pop
mov
mov
divl
loop
jmp
dec
lods
adc
movsb
shlb
adc
mov
dec
das
cmpsb
xor
push
pop
inc
or
sahf
and
call
mov
pop
loop
outsb
add
adc
daa
les
mov
jecxz
and
icebp
test
xchg
fnstsw
adc
ss
jnp,pn
js
xchg
mov
fwait
and
insl
push
call
lahf
mov
mov
movsb
scas
lcall
aad
pop
push
fwait
cmpsb
std
hlt
pop
mov
push
mov
fwait
or
sbb
in
cmc
or
push
inc
mov
stos
mov
aaa
daa
mov
pop
xor
xor
dec
add
adc
idivb
out
mov
mov
mov
rorl
cmp
in
adc
fsubrl
clc
idiv
lret
and
jns
cwtl
push
test
adc
adc
fadds
mov
mov
jnp
jle
insb
pop
mov
mov
sub
adc
push
aaa
and
fists
scas
push
jmp
bound
mov
testb
int
daa
mov
cwtl
ja
adc
arpl
sbb
dec
mov
dec
mov
pop
xchg
out
aaa
test
lcall
jae
outsl
xor
pop
sarl
mov
xor
imul
lret
rorb
jl
pusha
and
cmc
cmp
shr
cwtl
pop
xchg
insb
cmpsb
xor
mov
out
adc
daa
fimuls
je
push
mov
dec
mov
jg
filds
roll
jnp
mov
repz
icebp
adc
xchg
cmp
lods
shrd
es
fcoml
jecxz
mov
pop
loopne
xchg
fwait
pop
icebp
fcoms
xor
mov
movsb
rep
xchg
loope
xor
call
hlt
sbb
or
xchg
dec
insb
bound
xor
enter
outsl
xor
sbb
pop
xor
xchg
mov
std
jo
out
xor
inc
mov
push
or
dec
inc
nop
mov
and
mov
lea
and
ret
int
jge
rolb
pop
jbe
popa
fsubl
stos
sub
mov
and
imul
dec
lds
mov
push
jae
dec
ds
fsubs
cmp
ja
xchg
js
aam
out
negl
in
sbb
inc
mov
mov
scas
test
mov
jmp
xchg
or
dec
cli
mov
mov
xor
icebp
push
test
adc
dec
outsb
add
inc
loop
cmpl
push
xor
ljmp
xlat
inc
aaa
jl
cmp
mov
xchg
clc
sbb
xchg
push
pop
fwait
inc
push
sbb
cmp
fstpl
jle
test
hlt
roll
leave
dec
lods
dec
das
ret
push
sbbl
arpl
pop
negb
push
mov
aad
xor
jno
pop
sti
inc
enter
out
adc
imul
mov
inc
cmp
adc
mov
push
and
xchg
es
leave
cld
cmpsb
sbb
xlat
and
pushl
cwtl
pop
shrb
aad
inc
inc
int
aam
mov
icebp
subl
push
and
push
sub
inc
movsb
stos
jp
iret
std
adc
sbb
test
in
das
pminub
stos
arpl
hlt
adc
ss
or
aam
test
daa
jp
inc
mov
mov
fwait
and
enter
mov
pop
loop
adc
lret
sar
lods
dec
gs
cmp
iret
jge
sub
mov
adc
lds
testl
and
mov
mov
imulb
jg
mov
ret
sub
mov
cli
nop
xorl
mov
shrb
add
dec
mov
or
add
jle
leave
in
pop
mov
in
mov
sbb
jno
daa
xor
or
jne
stc
push
mov
cli
and
or
dec
sbb
push
adc
or
pop
pop
sbb
insl
push
popa
jo
lcall
inc
xchg
jle
pop
lea
add
insb
push
call
jl
xchg
imul
lods
mov
pop
popl
adc
push
repz
mov
bound
pop
jecxz
jg
pushf
add
xor
mov
movsl
ja
pop
enter
mov
add
xchg
xchg
fcomip
push
in
xchg
mov
cmp
lds
mov
inc
repz
push
xchg
loopne
fcomi
aam
mov
stos
aas
ds
int
pop
bnd
mov
lods
lcall
loopne
cmc
pop
jge
outsl
push
shlb
xchg
push
pop
popf
jle
test
divb
imul
jecxz
mov
xchg
shlb
pop
push
test
ss
scas
sub
inc
jecxz
pop
dec
jmp
pop
inc
cmpsl
roll
jbe
js
dec
adc
mov
mov
or
push
pusha
cltd
xlat
rcrl
data16
pop
sti
pop
test
xor
jecxz
xchg
xor
ror
add
sbb
fdivr
addr16
addr16
pop
push
mov
pushf
and
adc
fsubs
fdivl
push
mov
mov
and
mov
xor
or
or
mov
add
mov
mov
arpl
movsb
test
ja
aas
cmp
cmp
sub
and
or
out
xchg
lret
daa
mov
mov
jnp
nop
add
cmp
cmp
and
call
push
cmp
push
and
add
or
xlat
hlt
jl
dec
jg
dec
test
sbb
mov
jne
out
sub
lds
push
into
sub
fs
and
mov
jae
ror
das
inc
cmp
in
lea
orl
orl
cli
cmp
adc
mov
xchg
ja
cmp
pop
xchg
adc
add
pop
shrb
cs
test
gs
mov
push
cmp
cmp
xchg
or
cmpsl
mov
mov
cmpsl
sbb
add
loop
aad
add
mov
outsl
push
dec
mov
repnz
sbb
pop
fimuls
mov
imul
leave
outsb
sbb
lret
xor
or
js
divb
shll
lods
gs
mov
loope
fstps
sbb
push
xchg
mov
int3
cmpsb
push
gs
jno
pop
decl
out
out
int3
mov
push
cmp
push
out
hlt
imul
mov
aas
cltd
aam
ss
mov
inc
out
leave
mov
jle
stos
xchg
inc
sbb
mov
ret
cmpsb
shrb
adc
leave
outsb
test
inc
push
stos
mov
mov
xor
cmp
repz
xor
jbe
in
in
push
push
lret
xor
pop
mov
js
mov
popa
sbb
sbb
xchg
adc
out
mov
pushf
fwait
arpl
adc
mov
or
dec
cld
cmp
lea
lods
fucomi
pusha
add
pop
sub
mov
repnz
loopne
ljmp
dec
dec
sub
jne
jecxz
sbb
lds
es
push
mov
jge
mov
in
movsl
arpl
cmpl
fidivrs
loop
cmp
aas
dec
or
xorb
ja
xchg
xor
adc
stos
mov
and
or
and
hlt
orl
sub
dec
rorb
jmp
repnz
or
jb
mov
add
sub
mov
cli
push
push
cmp
xorl
cld
mov
and
int3
rcrl
sar
sub
or
icebp
push
mov
jg
aam
sahf
sub
jmp
jae
cmpsb
aam
xor
xlat
mov
xor
jle
jg
adc
or
ret
mov
lock
xchg
rolb
mov
cmp
jg
pop
loope
mov
out
into
inc
or
dec
fiadds
mov
sahf
add
mov
test
xchg
jns
sub
cwtl
pop
push
shlb
dec
jmp
notl
lldt
mov
out
pop
fists
loop
clc
leave
jns
jb
fldenv
add
stos
les
call
push
loop
rcl
jge
mov
inc
ret
cld
or
pushf
mov
insb
scas
and
lea
dec
subl
insb
mov
adc
mov
mov
push
dec
sub
hlt
or
outsb
test
push
sti
test
dec
add
cmp
fdecstp
xchg
sbb
mov
xor
push
xchg
dec
aaa
aas
pop
xor
js
xchg
stc
sub
leave
cmp
add
scas
sub
or
rolb
push
pop
ss
mov
adc
pop
movsb
int3
insl
imul
aaa
sub
mov
sarb
sub
mov
pushf
movsl
xchg
dec
pop
and
cmc
or
and
xchg
repnz
push
popa
mov
and
mov
fcompl
xor
mov
sbb
push
jmp
sti
lods
cmpsl
in
fstps
cmpsb
xchg
sbb
push
xorb
xor
cmc
out
dec
adc
popf
and
mov
gs
inc
int3
push
fmull
insl
push
cwtl
sarb
test
test
mov
out
dec
dec
mov
iret
adc
mov
test
dec
jecxz
or
cmp
mov
pop
stc
rclb
lahf
xor
lock
mov
fs
cmp
xor
push
leave
pop
jae
mov
jbe
xor
in
loop
sub
lcall
lds
fildl
sub
sbb
scas
pop
mov
lcall
pop
push
jo
call
insb
subb
idivl
std
mov
cmp
or
pop
ds
movsb
lods
dec
aas
mov
pop
dec
ret
fsubrs
jg
pop
push
add
paddusb
movsb
fldl
push
or
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
jmp
pop
cmp
inc
xchg
test
and
fists
cmpl
addl
mov
popa
push
push
pop
clc
leave
jo
push
add
cmc
mov
pop
fnsave
std
push
ss
jp
lds
fstps
inc
adc
mov
sbb
mov
loopne
xor
andb
flds
cmc
insb
sub
ds
cmpsb
xor
ds
xor
rorb
mov
sbb
aam
sub
aas
jbe
mov
push
or
cwtl
mov
cmp
out
xor
shrl
cltd
sti
popf
loope
pop
cmpsb
push
lds
in
pop
xchg
xchg
pop
mov
fs
into
rcrb
cmp
lods
ret
mov
cmp
push
xor
daa
std
push
jo
test
out
cmpsb
lret
push
pushf
cld
lods
pcmpeqw
jb
and
jno
cmpsl
mov
add
ret
mov
mov
pop
imull
insb
dec
jp
mov
dec
xchg
mov
xor
xor
rcll
pop
add
lock
mov
jne
scas
jbe
dec
mov
pop
out
movsl
sbb
nop
and
inc
rcll
mov
outsl
mov
arpl
leave
das
daa
stc
loopne
or
inc
aam
je
pop
inc
jnp
cmpb
pop
push
cmp
xchg
test
add
mov
sub
outsl
cs
hlt
adc
inc
popa
xor
xlat
push
fcomi
and
add
lcall
mov
outsl
loop
pop
call
jmp
inc
int3
sbb
leave
outsb
stos
fisttpll
iret
stos
loope
and
test
xchg
popf
int
fldt
cmp
xchg
leave
sbb
inc
fwait
add
xchg
sbb
mov
mov
push
outsb
xor
mov
or
mov
adc
sub
xchg
in
fwait
sbb
lds
dec
inc
rcr
fnstenv
mov
lret
arpl
cld
dec
loop
adc
insb
aad
popf
insb
jp
fistpl
jl
cld
dec
data16
mov
cmp
outsl
fisubl
lds
adc
xchg
bound
int3
pop
sarl
shll
test
outsb
sahf
add
mov
ret
into
or
fsubrs
push
cs
fcomi
divl
cmp
inc
sub
or
pop
add
das
iret
test
ror
mov
sub
fdivrs
repz
or
sub
aam
push
imul
pop
ss
mov
ljmp
lret
cmp
cmp
dec
test
testb
mov
cmp
push
movsb
inc
aad
outsb
or
xor
in
xor
ffreep
sub
lahf
cmc
dec
ret
jbe
mov
jns
adc
les
scas
pop
icebp
mov
icebp
paddd
loop
loop
or
pop
inc
dec
push
std
int3
inc
dec
addr16
mov
dec
in
pop
lret
daa
stc
add
jne
jmp
jb
pop
mov
adc
icebp
sub
insl
jmp
inc
jo
aam
jge
shrl
popf
lods
mov
fidivl
or
inc
push
gs
addl
cld
jno
inc
xchg
sbb
outsb
loope
xor
or
loopne
fldt
xchg
mov
popf
test
inc
pushf
xor
cmp
xor
push
xlat
xchg
daa
das
jle
mov
and
ja
ja
ret
pushf
ret
lods
addr16
call
outsb
jl
stc
push
push
or
mov
jge
mov
icebp
pop
es
mov
jle
es
mov
test
pop
lods
arpl
cmp
xadd
ds
or
sarl
jb
int3
call
mov
mov
insb
xchg
sub
subb
pop
stos
jnp
and
idivb
fnstcw
outsl
xchg
iret
rorl
cmpsl
sbb
in
add
cmp
pop
bound
shr
pop
or
outsb
inc
test
adc
add
rcrb
das
mov
jb
push
bound
xlat
adc
xor
inc
cmp
shlb
push
int3
gs
mov
pop
in
adcb
or
sbb
jecxz
cltd
aaa
cld
in
mov
and
addr16
sahf
pop
dec
loopne
mov
dec
aam
mov
mov
inc
adc
and
dec
push
mov
rcll
negb
jbe
mov
pop
jnp
add
jle
lods
push
shlb
in
cmp
arpl
dec
sub
mov
jl
mov
fisttps
shlb
mov
mov
pusha
clc
and
ret
jne
out
jg
jbe
repz
imul
gs
push
mov
mov
push
sti
sti
sti
insb
jecxz
out
mov
xlat
push
repz
mov
sbb
lock
das
mov
sti
mov
or
mov
movsl
push
or
std
imul
or
inc
mov
push
in
aam
data16
stc
pop
decb
cmp
arpl
mov
cmpl
popf
adc
mulb
inc
popa
inc
leave
push
xchg
lcall
cwtl
xchg
push
int
pop
imul
imul
push
fcmovnu
cwtl
faddl
mov
push
bound
push
imul
loop
sbb
pop
outsb
jmp
sbb
inc
push
adc
cmpsl
movsl
orb
lahf
mov
ret
mov
xorl
mov
and
push
sbb
pop
shlb
xor
push
mov
fisubl
js
lea
pushf
mov
add
into
and
das
dec
and
popa
pop
xchg
mov
pop
mov
push
enter
icebp
into
testl
mov
enter
lret
add
mov
movsb
out
repz
mov
mov
mov
pop
pop
fwait
dec
sub
or
popa
aam
sub
addr16
sbb
mov
xor
pop
int3
movsl
push
push
push
cmp
dec
out
dec
fsts
mov
cmp
mov
or
insb
jge
in
stc
fcomi
xchg
cwtl
mov
push
add
sub
rorb
lods
jnp
iret
fsubrs
push
inc
nop
sub
add
fcom
mov
outsb
xorb
pop
pop
mov
ja
je
mov
imulb
push
pop
dec
in
mov
adc
pop
inc
dec
sbb
sbb
in
jae
ret
cmpsl
dec
inc
fildll
scas
and
lds
repnz
mov
xlat
sub
or
inc
jle
loope
mov
icebp
cltd
data16
shl
repnz
jp
flds
jbe
mov
pop
mov
loopne
cmp
cwtl
fwait
add
sbb
outsb
cmp
sub
sbb
pop
mov
mov
outsb
xor
cmp
dec
call
rolb
push
int3
pop
pop
jl
rorl
bswap
add
leave
sbb
call
nop
lea
dec
push
pop
sub
push
iret
movsl
and
repnz
xchg
adc
sbb
fwait
aaa
outsb
divps
mov
mov
cli
mov
roll
filds
sbb
pop
mov
fcomi
pop
sbb
xlat
inc
mov
or
rorl
neg
inc
adc
leave
lahf
pop
in
inc
mov
adc
dec
xchg
dec
xchg
or
jmp
negl
in
mov
and
in
in
dec
lcall
sub
sbb
add
cmp
movsb
xchg
test
sub
jecxz,pt
pop
vpaddusw
adc
mov
sub
ss
and
gs
ljmp
jl
sub
inc
and
dec
pushf
mov
xor
insl
cmpsl
adc
es
into
das
in
mov
jmp
std
mov
pop
and
push
mov
testl
cmp
lea
scas
sete
push
push
jge
push
shrl
adc
mov
ret
jge
mov
sti
iret
mov
notl
jmp
jecxz
in
repz
je
out
adc
stos
fucomip
mov
fdivrp
mov
insb
out
push
mov
xor
mov
add
push
jnp
clc
jo
dec
xchg
aaa
sbb
sti
push
jmp
push
loope
ja
cmc
lea
xchg
shll
xchg
xor
lretw
lods
popf
or
les
jbe
inc
outsl
xchg
es
xchg
or
icebp
adc
cmp
mov
cmp
or
xor
pop
or
aad
dec
mov
outsl
mov
dec
and
pop
aam
sbb
sbb
add
test
pop
sti
xor
into
mov
mov
cmpsl
dec
cld
out
ret
xchg
xchg
mov
fldcw
xchg
jecxz
aaa
lahf
sbb
sub
lret
mov
mov
xor
out
lea
les
test
lcall
sbb
rcrl
shlb
xchg
int
xchg
adc
mov
dec
xchg
dec
dec
insb
lock
mov
std
test
add
pop
sub
scas
jl
adc
add
push
sbb
pop
gs
pop
enter
cmp
cmp
push
lock
ja
out
xlat
jo
test
or
dec
out
xchg
lcall
dec
fistl
and
mov
push
sub
ret
cmp
in
in
stos
js
in
repz
and
enter
leave
ja
inc
adc
sarb
test
shlb
stc
dec
std
sbb
pop
jmp
lret
or
icebp
nop
dec
cltd
sahf
in
jle
or
xchg
sub
cmp
pusha
je
cli
cs
shr
sub
jle
inc
inc
mov
shll
scas
divb
or
data16
pop
or
add
jno
dec
std
es
out
xchg
loop
fbld
xchg
xor
int
lods
fiadds
stos
das
fildl
cmp
inc
sbb
xor
dec
and
jg
inc
sub
mov
sub
dec
rorl
ror
cltd
mov
or
pop
dec
and
mov
mov
push
push
roll
push
fidivrl
es
lock
push
cmpsb
repnz
dec
cmp
pop
cmove
std
xchg
lods
lahf
and
sahf
push
sti
dec
push
cmp
mov
push
or
ja
sub
out
jns
into
add
scas
dec
and
lods
nop
int3
pop
call
fwait
mov
pop
jne
xchg
call
fldcw
cwtl
jnp
cmp
sbb
xchg
lret
mov
sub
sub
add
in
in
scas
bnd
js
lcall
and
in
mov
popa
mov
cmpsl
addr16
xor
je
addr16
sub
push
xor
push
orl
test
sarl
or
xchg
faddl
inc
fsts
outsl
adc
hlt
cs
sti
cmc
xchg
and
jnp
shll
pushf
push
adc
fsubl
xchg
mov
insl
and
scas
jl
loopne
push
sbb
jecxz
cmpsl
orl
mov
ljmp
pop
repnz
inc
lcall
inc
fs
pop
mov
sbb
add
test
dec
das
rcrb
pop
sub
cli
movsb
mov
out
imul
mov
std
popa
ds
adc
cmpl
dec
cmp
mov
mov
popl
cmp
add
or
stos
pop
sub
push
fcmovnb
ja
push
cmpsb
cmp
testb
insb
jecxz
xor
lret
xchg
inc
fcmove
xor
lret
lcall
inc
out
xor
scas
js
jae
sbbb
mov
inc
xor
sub
gs
std
test
xor
push
enter
inc
jne
call
into
ret
inc
and
xorl
lcall
out
inc
mov
imull
lods
lahf
sbb
mov
or
mov
xchg
push
in
fnstenv
clc
xchg
pop
mov
ret
sub
enter
int
xor
push
outsb
push
out
inc
ret
int
sbb
pop
insl
xchg
cmp
cmpsl
mov
sub
fs
push
pop
mov
imul
cs
fldt
jo
enter
adc
test
in
pop
repnz
in
lret
into
or
inc
add
ds
cmpsl
ud2
xchg
stc
mov
sahf
mov
pop
lea
call
xor
and
or
mov
lds
adc
repz
dec
je
adc
test
bnd
or
add
outsl
dec
or
andb
push
neg
mov
sub
inc
fnstenv
das
fdivp
xchg
mov
out
lret
sbb
push
iret
jns
leave
pop
stos
jl
mov
push
shlb
inc
jne
js
sbb
or
adc
fscale
jns
cmpsl
jbe
pop
xlat
stos
xchg
addl
inc
mov
mov
mov
xchg
rclb
jb
rcl
cmp
es
es
jmp
sahf
push
xor
aas
push
jge
push
adc
cli
dec
pop
pop
loopne
sub
faddl
addr16
out
xor
pop
leave
jo
add
cmp
into
dec
gs
popa
jl
mov
arpl
mov
pop
pop
mov
arpl
ss
out
ljmp
jns
mov
pop
addr16
sub
int3
fdivl
roll
into
mov
cltd
lods
xchg
push
mov
inc
mov
call
jp
cli
dec
pop
aad
cmpsb
jl
sub
fwait
inc
xor
adc
sub
jmp
out
into
inc
sub
lods
xor
adc
xor
loope
out
cmpsl
xchg
inc
mov
inc
les
dec
jne
jp
fxch
mov
movl
icebp
test
pop
mov
lods
sti
sbb
jle
je
xchg
mov
testb
call
mov
push
ret
aaa
scas
inc
lock
pop
imul
out
sar
pop
and
loop
ret
push
mov
cmpsb
ja
fisubrs
fists
loop
mov
fnstenv
popf
push
data16
mov
mov
cmpsb
insl
lods
scas
mov
outsl
mov
mov
sub
and
push
fldl
mov
int
lods
fs
add
int3
mov
sub
or
mov
jl
ficoms
jo
mov
and
add
ret
call
or
sbb
add
lret
dec
adc
and
testb
in
mov
and
pop
jne
fimuls
outsb
iret
orl
outsb
scas
pop
and
push
push
jle
sahf
inc
into
jg
lods
test
ds
movsl
xor
adc
rcrb
insl
xchg
xchg
int
mov
stos
stos
dec
and
push
and
test
xchg
sti
push
pop
icebp
call
or
jbe
loop
dec
cmpsb
dec
ss
add
push
ja
rorl
dec
cltd
xlat
daa
mov
data16
mov
inc
loope
testb
mov
xor
pushf
lret
mov
pop
mov
mov
mov
int
pop
lods
xchg
jb
mov
mov
popf
jo
dec
xchg
dec
mov
jle
jge
cli
je
jecxz
aad
xlat
cmpsl
jle
jg
ss
in
mov
pop
jmp
cs
ja
shrb
loopne
sub
fidivs
mov
mov
lret
and
das
scas
mov
jge
xor
test
fidivs
mov
fwait
stc
pop
addl
ss
jmp
mov
and
or
into
jl
roll
xor
dec
ljmp
add
sbb
inc
and
jge
push
fwait
jp
and
pop
push
jl
pop
js
sub
clc
ss
cmp
push
mov
cmp
outsl
pop
loopne
push
sub
jno
push
insb
insb
sub
shl
and
push
xlat
sbb
dec
dec
and
jge
fstps
insl
ror
je
in
pushf
orb
pop
adc
js
in
jge
and
outsl
scas
jmp
cmp
add
sbbl
cmp
bsr
push
sbb
adc
imul
push
aaa
ja
push
popf
mov
inc
stc
push
sub
cltd
sbb
xchg
jno
sbb
jg
ds
jbe
pushf
jae
sahf
push
xchg
dec
out
out
push
clc
sub
pop
adc
mov
add
mov
xor
rclb
sub
jne
nop
dec
leave
loopne
mov
or
xlat
sub
dec
out
adc
pop
add
mov
and
push
ss
nop
fistpll
das
xlat
cld
lret
push
push
adc
lcall
mov
rcrb
sbb
dec
mov
sbb
mov
add
int3
push
shlb
aad
in
rol
push
mov
cmp
jl
fcomps
adc
dec
push
add
stos
lock
leave
jge
mov
jl
lods
cmp
sub
sbb
or
mov
mov
pop
cld
movsl
inc
scas
fincstp
stos
cld
ss
mov
test
mov
aad
roll
pop
dec
repz
ljmp
out
mov
int
repz
mov
les
test
ror
push
sahf
loopne
notl
or
mov
sbb
mov
pusha
jno
popf
cmpsl
xor
scas
mov
jo
jmp
es
inc
in
mov
sbb
adc
xorb
and
inc
push
mov
or
cmpsl
into
aad
shrb
dec
cwtl
inc
dec
test
dec
loope
jne
mov
sbb
movsb
xor
mov
out
cmp
pop
xor
push
dec
call
mov
mov
push
out
jg
xchg
ret
jge
mov
ja
mov
mov
das
enter
jle
fisubrl
dec
mov
adcl
fs
mov
daa
inc
jecxz
out
ret
pop
xchg
addr16
aaa
ss
in
xchg
jb
popf
sub
pop
fisttpl
dec
sbb
mov
jl
push
mov
pop
testl
xchg
imul
and
cs
and
add
sub
mov
sub
sub
mov
test
dec
dec
loope
in
scas
add
jle
stc
in
adc
pop
shll
sbb
jp
dec
pusha
std
jmp
mov
shrb
cmp
ret
aam
inc
xchg
fwait
push
in
sahf
divl
out
jno
insb
dec
pop
loop
xchg
xchg
mov
push
mov
xor
push
mov
xchg
sahf
rcrl
leave
and
dec
fistpl
pop
inc
sub
mov
arpl
push
xchg
cmp
pusha
pop
andl
pop
inc
pop
pop
dec
das
inc
sbb
aas
out
arpl
scas
call
xlat
xlat
pop
pop
ret
xchg
and
sar
gs
or
sub
jnp
cli
cmpsb
test
xor
mov
xtest
out
sub
stos
dec
push
inc
mov
outsb
jge
or
or
in
sbb
xor
enter
mov
adc
ljmp
sbb
arpl
cmp
pushf
out
add
mov
jo
and
adc
iret
jecxz
out
loop
hlt
data16
push
mov
cmp
adc
push
imulb
jns
add
xchg
pusha
push
lahf
jns
mov
stos
xchg
jmp
repz
dec
push
sbb
and
xchg
fwait
sbb
sbb
jg
sbb
xor
push
dec
les
cmp
imul
jecxz
cmpb
rcrl
jne
rcrl
pop
repz
sysenter
sarb
inc
cmp
xchg
jmp
cwtl
mov
xchg
jg
lahf
loopne
fcmovnu
sbb
sbb
mov
nop
push
push
push
loop
push
lahf
push
jmp
pop
xchg
arpl
or
outsb
sbb
loopne
jo
or
inc
dec
add
xor
js
mov
adc
pop
ja
les
test
cmp
mov
dec
das
pop
int3
outsb
push
jne
lahf
das
loop
or
xchg
xchg
or
mov
icebp
inc
dec
dec
data16
repnz
call
ja
mov
pop
push
mov
and
push
out
mov
mov
inc
scas
gs
add
mov
shr
fnstenv
mov
mov
push
sbb
ficompl
cwtl
pop
aam
rcll
adc
test
sahf
js
mov
jbe
fisttps
xchg
sub
ds
push
mov
icebp
add
shlb
fisttpl
mov
daa
loope
push
mov
inc
outsl
iret
pusha
xor
shrl
add
lods
out
pop
mov
mov
daa
fstps
cld
sub
iret
push
push
bound
and
xchg
in
orl
pop
fimuls
or
push
xchg
ret
loop
dec
ret
pop
in
les
pop
arpl
pop
mov
pop
mov
mov
jp
mov
and
fwait
inc
or
add
sub
outsb
scas
push
fistpl
movsl
iret
in
insl
or
mov
sbb
int
fstp
loopne
cltd
addl
push
jmp
sti
pop
cmp
inc
or
cltd
pop
cmpsl
fildll
fst
mov
cltd
fdivr
nop
adc
xor
stos
ljmp
pop
call
inc
push
push
cwtl
mov
cmc
cltd
sub
lods
hlt
sbb
pop
xchg
xor
inc
in
jle
cmp
call
iret
sub
imul
mov
and
test
mov
add
mov
and
in
out
divl
xor
sarb
roll
push
dec
daa
push
pop
bound
daa
push
cli
int3
fs
jle
or
and
outsl
cmpsb
sbb
dec
push
ret
push
mull
subb
ja
mov
jbe
cmp
mov
shl
idivb
sbb
cmp
add
movsb
mov
pop
xchg
mov
mov
cmp
mov
movsb
jl
adc
inc
pop
sar
add
aam
inc
rcrb
enter
or
out
adc
insb
outsb
mov
mov
and
pop
mov
pop
sbb
mov
int
push
jle
cmp
jg
xchg
pop
mov
sub
xor
stos
xor
filds
outsl
sti
daa
xlat
dec
sbb
pop
hlt
in
sbb
mov
repnz
mov
add
shll
jle
js
pop
shrl
cmp
adc
mov
mov
dec
aad
mov
jp
int3
scas
jns
and
fisubrs
mov
sbb
xor
sub
push
test
dec
rcl
sub
test
pop
out
or
sbb
idivb
add
rolb
add
hlt
inc
or
pop
push
fsub
in
jle
int3
mov
repnz
scas
imul
outsb
adc
lret
or
inc
clc
mov
int3
jbe
pusha
hlt
leave
out
les
ljmp
xor
out
pop
insl
jmp
ret
cli
mov
rcr
aaa
mov
ret
add
jecxz
push
jmp
xchg
mov
sahf
in
xor
lock
sbb
gs
jae
mov
jb
jecxz
or
imul
pop
cmp
adc
jne
lds
mov
sub
imul
mov
inc
push
or
jl
je
ja
outsl
dec
mov
adc
negl
xor
add
lret
mov
sti
inc
pop
lock
movsl
sub
ret
movsl
sub
ret
xor
sti
add
cmpsl
cmp
leave
sub
inc
push
mov
xor
enter
frndint
test
gs
test
push
dec
jo
or
xchg
cmpsl
insl
ja
pop
add
mov
jnp
jge
dec
adc
mov
add
outsb
enter
jmp
fnsave
cmp
sbb
jo
stc
mov
loope
push
testb
jge
cld
fisttpll
adc
jmp
aam
push
or
test
mov
dec
les
jecxz
xor
stos
cs
or
jmp
add
sub
nop
inc
jg
jb
mov
mov
dec
pusha
insb
loopne
xor
int
xor
pushf
mov
adc
sbb
pop
test
jb
cltd
pushf
mov
cld
ss
and
popa
dec
sbb
aad
pop
ja
je
pop
icebp
mov
sub
call
div
xor
xchg
or
dec
push
adc
dec
dec
shl
ja
cmpsl
cmp
mov
inc
add
xchg
pop
or
add
and
mov
loope
iret
fstps
cmpsb
pop
sbb
cmovs
inc
sarb
dec
sub
xchg
das
push
test
xchg
cmp
and
cli
call
out
sti
fcomps
and
cmpsb
fisttpl
dec
sar
inc
stc
lea
jge
imul
div
outsl
popf
mov
repz
cmp
repnz
into
pop
decb
adc
pop
adc
push
lods
push
fsubrl
orl
adc
sbb
jno
aaa
je
lahf
adc
fildll
inc
inc
pop
or
lahf
mov
test
pop
pop
ja
jmp
leave
mov
stos
pusha
lret
icebp
fistps
clc
stos
outsl
clc
out
inc
dec
inc
out
stos
push
jmp
dec
mov
cmpsb
push
cld
add
xchg
and
sbb
mov
mov
sbb
stos
repnz
cwtl
pop
prefetch
cli
sbb
jbe
add
jo
cmp
scas
sbb
push
stc
mov
cmp
xor
push
fucom
or
adc
mov
add
cmpsb
rcl
imul
aas
inc
push
lret
cltd
or
pop
jne
mov
std
xchg
in
mov
sbb
rcrb
lret
pop
adc
mov
cmc
mov
xor
mov
mov
inc
test
xrelease
in
mov
pop
std
test
push
add
in
xlat
adc
fs
pop
ss
aam
int
pop
xchg
es
lods
in
mov
iret
mov
repnz
xchg
adc
aas
loop
xor
and
ljmp
push
add
mov
jle
inc
int3
dec
xchg
jl
lcall
or
inc
mov
fs
sbb
inc
stos
ret
pop
push
icebp
mov
pop
push
imul
jle
jl
dec
and
sbb
pusha
ds
or
loope
cli
xchg
int
arpl
adc
xchg
jecxz
aaa
jle
sbb
inc
jp
fisubrl
lds
nop
add
ficompl
adc
movsl
andb
sbb
mov
jo
adc
or
aam
daa
and
das
adc
xchg
dec
enter
add
icebp
push
repz
fisubs
jl
mov
int
or
push
js
xor
leave
jmp
xor
les
jmp
mov
call
xchg
xchg
push
xor
fwait
add
es
dec
mov
sub
pusha
ja,pt
fsubrs
clc
outsb
adc
jb
bound
test
sub
mov
fs
add
push
and
in
repz
popa
push
mov
imul
xchg
jmp
fcoml
in
pop
gs
mov
fcmovu
out
sub
or
cmp
sbb
insb
push
mov
adc
mov
mov
addr16
leave
sbb
jl
and
cmpsl
push
cwtl
xor
inc
add
mov
xor
xor
lret
test
and
into
dec
pop
imul
inc
pop
mov
sbbl
mov
test
xchg
in
jg
out
jle
arpl
sti
push
stos
test
cmpsl
lock
movsb
add
jo
call
stc
cmp
aas
sub
ja
sbb
call
xor
pop
ljmp
mov
pop
pop
adc
mov
cmp
add
mov
push
popf
push
or
push
scas
pushf
sbb
inc
push
ja
push
mov
psubd
cmova
cld
icebp
stc
mov
scas
cmpsl
jl
push
jo
call
lcall
mov
int
sub
insl
jbe
inc
add
push
lcall
aam
mov
je
aas
pop
mov
add
bound
cmp
mov
push
push
xchg
cmp
xchg
adc
imul
xchg
add
mov
xchg
dec
jp
xchg
adc
popa
clc
int3
ss
mov
mov
loopne
xchg
scas
pop
sbbb
xchg
cli
pushl
lret
scas
fimuls
in
in
pop
in
cwtl
and
dec
xchg
and
roll
pop
roll
xor
mov
inc
mov
mov
xrelease
es
pop
fdiv
pop
int3
popa
jl
hlt
and
in
icebp
cs
shll
push
addr16
xchg
and
push
xchg
scas
xchg
jae
cmpsl
pusha
mov
lods
mov
inc
fidivs
loope
nop
ja
xchg
mov
in
scas
daa
push
fsub
ret
jle
js
arpl
fs
cld
push
out
jb,pn
xchg
xor
jno
adcb
sub
stos
lret
loope
jns
and
insl
stc
cmpsl
mov
pop
mov
mov
adc
fwait
in
xchg
mov
mov
sub
lcall
movb
xor
scas
ljmp
mov
ds
cltd
push
or
jg
cmc
cltd
pop
push
push
jmp
sbb
stos
lret
xchg
jge
pop
jge
jle
pop
and
mov
jmp
sub
dec
mov
mov
pop
jno,pt
and
out
or
jp
out
dec
in
inc
cmp
les
loopne
movsb
mov
int
push
ja
xchg
imul
push
mov
mov
std
cmp
inc
rol
pop
mov
and
and
lret
data16
pusha
mov
repz
jbe
shl
imul
addr16
outsl
outsb
in
mov
fildl
ss
add
adc
in
fidivs
jb
jae
cld
mov
xchg
sbb
inc
mov
dec
sarl
movsl
pop
push
xor
push
rol
ss
xor
xor
mov
cmp
scas
push
and
cmp
or
mov
inc
cwtl
xor
mov
mov
icebp
sahf
inc
ret
jns
js
mov
lods
notb
sbb
push
andl
lds
das
lret
pop
mov
cmpsb
shl
inc
in
subb
fbstp
imul
mov
fwait
xlat
out
inc
pop
dec
jae
mov
decb
bound
dec
mov
inc
cmp
inc
cmc
bound
leave
mov
dec
push
cmp
dec
or
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
push
movl
cmpl
je
cmpl
jle
jmp
push
push
push
push
call
mov
dec
mov
jmp
push
subl
mov
xor
xor
add
mov
mov
and
mov
mov
mov
xor
mov
movl
cmpl
je
cmpl
ja
jmp
push
call
xor
xor
dec
mov
jmp
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
movl
or
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
pushl
push
push
pushl
call
jmp
mov
movl
cmpl
je
cmpl
jle
jmp
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sub
and
jmp
xchg
fdiv
test
xchg
inc
jl
jmp
incl
addl
xor
stos
inc
xchg
into
aas
mov
mov
sbb
xchg
xchg
addl
out
aam
mov
test
push
inc
mov
lock
xchg
sti
js
jno
sbb
fcmovu
mov
lcall
out
mov
pop
jnp
mov
cmp
jo
xchg
sahf
js
sub
ljmp
lcall
cs
out
js
int3
in
lods
or
push
je
repnz
inc
orl
jno
repnz
jbe
ret
jg
out
pop
aam
sbb
mov
rclb
inc
mov
outsb
push
fwait
subl
xchg
out
jmp
pusha
push
xchg
mov
outsb
jge
lret
mov
scas
pop
cmc
pop
sbb
cmp
call
or
jns
in
mov
pop
popl
cltd
scas
cmpsb
out
or
add
add
xchg
dec
iret
xchg
das
and
mov
mov
pop
cs
xchg
ja
jle
call
out
adc
lea
cmp
xchg
mov
mov
subb
adc
out
icebp
xchg
mov
mov
push
hlt
icebp
lods
push
jno
cmc
push
arpl
fldpi
push
aad
sub
call
shrb
adc
imul
rclb
leave
mov
xor
cs
scas
test
sub
push
rclb
add
xchg
inc
xchg
inc
pusha
pop
mov
push
push
lods
popa
lret
cs
fiaddl
ret
sbb
cltd
sbb
cmpsl
sub
fwait
mov
insb
sbb
outsb
bswap
movsb
xlat
jb
xchg
adc
sub
pop
jae
mov
dec
sbb
in
gs
fldenv
pop
ret
and
fcmovnu
outsl
and
test
js
ljmp
in
xor
pop
push
mov
xchg
pop
sbb
test
popf
test
adc
insl
nop
jmp
sbb
push
lea
jno
xor
push
add
and
sti
js
aaa
ret
sbb
imul
ret
sub
mov
aam
sahf
insb
mov
out
setns
iret
sbb
and
mov
mov
push
inc
stc
test
cmp
orb
sub
stos
push
fsubr
or
test
aam
add
mov
and
leave
jne
sub
clc
imul
or
sahf
loop
pop
sti
add
sahf
ror
ds
jbe
sub
cmp
enter
stos
dec
ljmp
lret
jge
xlat
bound
push
lret
add
je
test
rol
xchg
xor
cmp
cmp
mov
mov
mov
hlt
xchg
xor
cmp
adc
sub
fcmovne
add
inc
cltd
and
loope
mov
dec
popf
sub
sar
popf
ss
mov
test
push
mov
xchg
and
push
pop
sbb
pop
ljmp
pop
cmpsl
je
ds
aam
mov
dec
push
push
fucom
addr16
dec
out
fisttpll
adc
popf
mov
fsts
pop
and
dec
xchg
pop
mov
sbb
out
xor
lock
jne
xor
repz
pop
cmp
xlat
dec
cmc
push
addr16
nop
jmp
xchg
sbb
and
push
xchg
movsb
pop
in
in
push
fsubs
pop
fimull
repnz
adc
cmp
bound
mov
pushf
add
stos
push
lds
and
stos
test
cmp
imul
sub
jecxz
xchg
or
add
jmp
test
call
xor
clc
cmpsl
cli
and
shrl
repz
cli
shlb
cmpsb
mov
addl
cmc
mov
inc
xchg
loop
inc
mov
in
xchg
andb
test
jp
loopne
sbb
mov
sub
dec
mov
xor
xchg
xor
sarl
pusha
cmp
mov
cmp
pop
in
divl
dec
sbb
xor
cmp
and
lret
cmpsb
xor
ret
loope
je
sub
adc
cmp
cltd
jnp
mov
sahf
adcl
sbb
pop
sub
and
in
dec
sub
adc
and
lahf
xor
dec
push
movsl
popa
adc
arpl
sbb
adc
mov
pushf
pop
call
fistpll
jle
cmp
mov
popa
std
xchg
jns
repz
inc
push
mov
ljmp
lea
fwait
mov
decl
sbb
test
leave
pop
pop
jb
xor
insl
fcoms
lret
or
inc
subl
movsl
imul
mov
xor
or
js
pop
add
in
clc
adc
test
into
mov
add
mov
and
scas
loopne
cmp
cmc
call
rolb
and
dec
push
into
stc
sti
mov
mov
sahf
mov
pop
fwait
lods
mov
cld
jnp
stos
or
hlt
in
das
mov
rcr
lahf
bound
fidivrs
pop
in
and
dec
push
icebp
out
or
movsl
mov
adc
inc
sub
dec
sub
xor
jecxz
cmp
sub
leave
addr16
roll
lahf
jmp
and
push
jge
fxch
adc
mov
scas
popf
mov
mov
push
aas
iret
push
dec
nop
daa
jo
pusha
xchg
push
insb
push
cld
out
add
test
or
daa
pop
fdivrl
xchg
sub
pop
outsl
jns
or
xchg
or
test
ja
lret
ret
inc
nop
pop
pop
sub
add
jmp
mov
push
sbb
mov
int
mov
adc
loop
pusha
pop
sub
hlt
pop
cmp
xchg
test
das
cmp
xchg
add
loope
ja
lock
mov
mov
pop
ret
adc
negl
adc
mul
roll
jl
push
mov
mov
mov
xchg
inc
mov
leave
std
ds
shl
insl
out
ss
out
sahf
shll
jnp
jmp
shll
or
or
pop
push
enter
sub
cmpsb
pop
jae
mov
ret
adc
sbb
movsb
cli
cmpsb
rorb
mov
data16
jbe
mov
pushf
scas
adc
jge
or
mov
mov
lea
adcb
es
cmpsb
js
push
dec
cmc
mov
das
fstpt
mov
mov
push
mov
lods
hlt
or
or
or
daa
bound
xor
pop
test
adc
pop
adc
inc
dec
shrl
add
pop
mov
and
les
aas
cmp
pushf
inc
shl
cmp
pop
testb
jecxz
call
xlat
dec
movsl
call
jns
cwtl
popf
or
or
xchg
ret
test
xchg
jge
mov
sub
mov
les
outsb
add
inc
sbb
sbb
movl
add
push
test
sub
enter
ret
lcall
dec
outsb
stc
or
dec
mov
insl
pop
clc
cwtl
negb
scas
sub
sbb
mov
idivl
sbb
pop
jmp
cli
inc
mov
adc
add
mov
fmulp
rcrb
jo
aad
xchg
dec
or
inc
stos
add
or
inc
mov
fcmovu
aam
lods
sbbl
lahf
ret
in
aaa
in
xlat
push
sub
ret
dec
mov
pop
sbb
dec
cmpsb
adc
es
je
clc
push
outsb
pop
stos
mov
jns
roll
pushf
pushf
lret
in
adc
and
mov
jbe
jp
jge
test
insb
std
fistpl
enter
mov
es
mov
rolb
sti
push
add
mov
fmull
lea
out
push
in
jle
inc
ret
and
loop
test
es
cmp
push
jns
cmp
imul
lahf
or
mov
shrb
aas
ds
outsb
inc
ss
adc
jns
movsl
push
ss
mov
aad
jb
xchg
or
inc
scas
ljmp
jp
xchg
ljmp
pop
in
mov
inc
lds
in
xchg
bound
mov
sub
and
jo
fs
mov
test
sti
rorl
imul
shl
stos
ss
lahf
mov
cmp
push
pushf
mov
out
or
push
pop
push
pusha
gs
inc
sahf
in
lods
sub
nop
mov
jg
mov
sar
insl
lock
shlb
sti
inc
and
adc
ds
pop
aaa
daa
sub
sub
arpl
jp
pop
inc
push
push
pop
adc
dec
gs
insb
js
mov
cmp
inc
movb
add
data16
or
divb
pop
mov
pop
jo
movsl
pop
pushf
pop
sbb
je
sbb
or
or
jb
sub
testl
mov
xchg
fistpl
xchg
call
es
pop
cmp
mov
stos
cmp
insb
insl
mov
shrl
sahf
jno
or
mov
jge
mov
or
rclb
cmpl
xor
fadds
int
add
test
pusha
jns
int3
jbe
mov
insb
mov
add
insb
std
ss
shll
and
pushw
add
or
in
jb
mov
rclb
sbb
sub
test
mov
dec
jl
lock
adc
cs
aaa
lret
or
add
adc
push
scas
shr
dec
jae
dec
add
out
ja
jne
xlat
leave
popa
js
inc
shl
shrl
dec
jl
sub
adc
aaa
mov
sbb
aad
push
xchg
push
int
sub
leave
adc
fdivrs
mov
or
daa
das
inc
rcrl
add
ljmp
fistps
push
pop
xchg
test
mov
jae
outsb
push
xchg
jne
pop
es
pop
push
cli
mov
push
mov
and
loope
xor
pop
xor
inc
sub
pop
mov
scas
push
inc
scas
test
jne
pop
and
mov
mov
inc
aad
pop
jne
cmp
dec
and
ja
mov
adc
or
test
xchg
adc
push
lret
es
jmp
adcl
out
pop
add
fbld
in
jo
imul
iret
sbbb
dec
in
add
xchg
shl
mov
repz
sbb
movsb
daa
add
jns
fsts
subb
cmp
dec
xchg
mov
das
cld
leave
sar
aad
das
in
fs
ficoms
sbb
test
cli
cli
mov
pop
dec
addr16
jns
sbb
pandn
outsl
call
leave
push
cmpsl
out
outsb
fimull
xchg
addr16
adc
xor
movsb
lods
mov
mov
pop
pusha
outsl
leave
loop
jecxz
divb
jg
sub
push
enter
jl
inc
mov
push
jb
je
incb
xor
ljmp
into
data16
ret
jl
inc
jb
jg
arpl
negb
outsb
dec
sti
hlt
jnp
jmp
stos
cmp
jecxz
or
iret
ret
push
mov
sti
sar
mov
jnp
call
inc
sbb
shl
push
or
pop
add
or
je
cs
pushf
push
hlt
inc
lea
aad
aas
xchg
sbb
into
scas
sahf
xchg
push
dec
lea
dec
jmp
dec
and
mov
dec
das
mov
inc
popa
cmpsl
mov
push
lahf
movd
push
repz
push
sti
cmp
loopne
mov
pop
sbb
jnp
pop
shl
pop
xlat
clc
arpl
xchg
aam
pop
and
scas
fs
mov
mov
cwtl
jne
fs
mov
or
and
push
cmpsl
sub
test
ds
jl
mov
mov
repz
cmp
bnd
sbb
lahf
faddp
adc
mov
leave
fcompl
adc
xchg
loopne
ss
xor
jbe
scas
gs
dec
jg
test
ljmp
repz
fimull
mov
sti
xchg
imul
add
and
jmp
sbb
cmp
bound
clc
insl
jge
push
bound
aad
xor
mov
push
test
int
xor
dec
mov
lock
pop
hlt
lds
or
inc
stc
ret
push
push
nop
mov
push
int
stos
xlat
dec
or
ficompl
sub
jecxz
lcall
jnp
outsb
test
ret
inc
scas
popa
mov
pop
mov
cmpsb
int3
mov
and
xor
icebp
sbb
lea
loop
movsb
inc
push
test
xchg
sbb
fwait
mov
push
cmpsl
enter
or
mov
imul
aas
push
sub
lods
nop
and
ja
cwtl
loop
pop
mov
movsb
push
rorb
fstpt
xor
xor
lcall
mov
add
jne
pusha
out
popf
adc
subb
in
fdivl
ret
push
cmp
dec
insl
jae
pop
push
pop
add
xchg
add
incb
je
add
ljmp
std
or
sbb
mov
mov
hlt
insl
stc
shlb
inc
jg
push
ret
sbb
cld
xchg
xor
arpl
stos
jecxz
xchg
jns
xchg
test
fmuls
pop
lahf
inc
jecxz
std
sbb
scas
imul
lret
cmp
xchg
inc
lods
dec
adc
dec
mov
mov
adc
or
cmp
or
insl
sub
mov
pusha
jne
and
jb
and
jns
mov
pusha
rolb
imul
cmp
mov
jecxz
rorb
cmp
in
je
push
push
mov
imul
stos
lret
aad
imul
enter
and
pop
sbb
rcrl
aad
aas
add
jns
pushf
cmpsb
loope
cli
hlt
adc
mov
xchg
dec
rorb
mov
std
and
jbe
push
mov
xor
push
daa
sbb
nop
mov
dec
sbb
leave
xchg
mov
dec
ret
add
sbb
cmp
jge
fwait
adc
in
rcrb
je
dec
scas
jb
inc
ret
mov
and
sub
shrl
pop
dec
lea
outsb
int
popa
test
in
mov
mov
stos
push
mov
and
cmc
xor
daa
out
cmpsb
mov
xlat
flds
mov
adc
push
and
mov
add
hlt
mov
push
sub
lock
pop
pop
jb
push
repz
mov
jo
pop
sarl
outsb
cmpsb
mov
data16
repz
test
adc
mov
sbb
dec
and
repz
mov
push
xor
cmp
shrb
xor
gs
idivl
rol
movsb
cltd
xchg
pusha
aad
sbb
xchg
iret
stos
xlat
fdivrl
mov
rolb
xchg
mov
lcall
fucom
js
pop
scas
or
loop
in
in
fldcw
repnz
shrl
aas
int3
push
lock
cli
jge
popf
xor
push
lock
fisubrl
out
pop
cmc
push
rolb
add
pop
jmp
insl
scas
mov
pop
sub
int3
test
ljmp
mov
jle
xlat
bound
movb
dec
mov
out
add
and
cwtl
pop
mov
in
mov
and
ror
repz
inc
push
pop
in
out
aam
push
sub
adc
inc
mov
fs
test
lods
lret
jb
mov
stc
testl
popa
sahf
ds
xor
mov
add
addb
aad
mov
or
push
push
pop
das
xor
cmp
rorb
or
inc
jbe
mov
cmp
xchg
or
stc
into
jmp
mov
and
cmp
xorl
lahf
add
dec
push
stos
ret
in
leave
movw
cmp
fs
jb
push
cmpsb
mov
ret
stc
push
ret
lret
sbb
rcll
cmpsb
movsl
push
pop
xor
xlat
mov
push
subl
or
xchg
pop
pop
das
jge
imul
push
lds
out
adc
dec
add
sbb
fdivs
js
inc
xchg
jge
test
jnp
jae
push
mov
cmp
rcl
add
jae
scas
in
in
iret
inc
push
fs
ficoml
div
jno
lahf
loope
adc
enter
cltd
pop
xchg
call
cmp
add
xchg
lock
jno
xchg
ret
lods
pop
xchg
push
popa
loope
rclb
gs
repz
scas
movsl
ja
add
and
and
inc
ret
xor
pop
outsb
cmp
scas
mov
fldln2
mov
shll
jle
sbb
fsubrs
icebp
mov
and
shll
faddl
ss
jns
push
pop
pop
imul
roll
mov
test
movsb
shlb
loop
loope
insl
clc
adc
add
mov
test
outsb
dec
xor
insb
lret
adc
push
mov
mov
jmp
es
cmp
out
jno
adc
adcb
iret
sub
cmpsb
pop
sub
fst
or
jp
add
lea
movaps
mov
and
hlt
push
xor
push
jp
inc
xor
sbbl
mov
xorb
in
sbb
mov
and
insl
test
adc
popl
mov
push
xchg
in
fidivrl
int3
std
bound
insb
or
mov
push
aas
dec
popf
in
jb
repz
xlat
fwait
mov
add
adc
test
push
lods
sub
push
xlat
pop
in
dec
in
pop
mov
lahf
aaa
aam
bsr
xor
cwtl
cmp
imul
or
out
xor
mov
je
pop
sbb
jecxz
flds
xor
cli
and
dec
leave
xor
call
push
fstps
out
aad
cwtl
pop
mov
stos
sbb
stos
sbb
mov
cli
sbb
cmp
popa
mov
sti
into
sahf
aas
push
sbb
push
imulb
cmp
aam
fs
cmp
aaa
les
out
sbb
ljmp
xchg
mov
add
pushf
lcall
das
add
lods
xchg
jle
xor
ftst
aad
add
sub
xor
sbb
push
loop
sub
imul
bound
icebp
and
adc
dec
pop
pushf
jecxz
cmp
jo
cmp
aad
push
cs
xchg
jae
insl
pop
add
and
dec
cwtl
inc
dec
and
mov
lods
fstpt
inc
mov
jb
cmc
int3
sub
sbb
scas
sub
pop
sbb
int3
repnz
cmpsb
mov
or
jnp
roll
sbb
mov
jmp
push
cli
adc
xchg
and
rcrb
repz
scas
xor
xchg
sti
mov
jnp
cmc
cmpsl
dec
mov
stos
jbe
pop
je
mov
jg
mov
lret
bnd
or
stos
xor
in
inc
xor
pop
fcomps
ja
int3
sbb
fidivl
pusha
inc
pop
mov
shl
jmp
pop
dec
jae
out
jb
pop
js
movb
push
fdivs
mov
outsl
xlat
aas
divb
jge
insb
cmp
daa
mov
mov
sbb
imul
sub
mull
addl
sti
scas
cmpsl
jne
push
insl
dec
mov
or
in
bound
or
call
xor
cli
in
stos
cmpsb
pop
movsl
addb
imul
into
in
or
outsb
xor
sbb
and
cmp
je
mov
push
pop
pusha
push
sti
and
or
jno
xlat
jmp
das
push
xchg
mov
leave
sbb
mov
scas
cmp
jbe
outsb
jg
mov
mov
sub
and
jle
mov
xor
imul
lret
insl
movsl
cmp
push
jbe
pop
test
pushf
aad
adc
mov
test
and
push
adc
fldcw
cmp
repz
sbb
js
ds
and
xchg
pop
icebp
pop
sbb
push
out
insb
movsb
cmpsl
xlat
outsl
lret
adcl
sub
xor
scas
mov
mov
xchg
sub
push
out
gs
imulb
push
and
sbb
push
pop
and
fadds
aas
jg
jp
clc
lds
idivb
movntq
ss
idivb
pop
pop
dec
andb
bound
ljmp
jmp
repnz
mov
dec
lods
and
jg
pusha
xchg
add
sub
lahf
push
fsubrl
mov
mov
cmp
loop
pop
push
sub
xor
out
ljmp
pop
call
or
outsl
fs
or
outsl
jae
pop
rcl
mov
sbb
fstpt
div
in
fistl
sub
pop
pop
lret
mov
dec
push
lock
mov
pop
sbb
js,pt
sub
or
xor
mov
mov
fnstsw
lcall
int
push
into
cld
lods
sbb
dec
aam
loop
pop
cld
or
scas
dec
jnp
into
inc
inc
adc
xor
mov
gs
aad
lret
sbb
decl
js
and
xchg
sub
stos
xchg
ss
push
std
xchg
int
pcmpgtw
and
fs
fiaddl
push
jecxz
icebp
mov
mov
les
ss
xchg
push
call
fnstcw
arpl
fst
inc
iret
mov
ja
or
sub
out
rcr
xchg
jbe
into
jmp
lock
fldt
rcrb
cwtl
adc
ljmp
adcb
shrl
cmp
sbb
mov
adc
and
xchg
push
mov
test
and
mov
xchg
sub
xchg
xor
sbb
push
push
lret
sysret
adc
data16
mov
ficompl
out
mov
cmp
jecxz
add
xchg
adc
std
inc
cli
in
pop
scas
sti
out
add
icebp
sarl
push
sub
iret
push
jle
xor
int
aaa
mov
xor
sbb
mov
lahf
pop
bt
out
xchg
xchg
jmp
or
pop
sbb
fdivp
dec
test
cmpsl
cmp
push
xor
lret
mov
stos
jb
in
lret
jg
shll
rclb
xor
lret
cmp
ja
or
aam
scas
add
fwait
insl
lret
sbb
xlat
and
adc
mov
pop
sbb
rorl
stc
mov
cs
jbe
movb
cli
jnp
lods
inc
mov
call
mov
in
loop
dec
ret
xchg
or
out
in
adc
and
dec
pushf
mov
fnstenv
jns
adcl
jle
bound
pop
sub
fadds
pop
clc
push
sbb
fstpt
ret
or
popf
cwtl
pop
fs
dec
cmpb
or
add
or
xor
mov
push
sbb
ljmp
adc
fisubrs
mov
or
idivb
lcall
repz
pop
mov
xor
sbbl
push
jbe
mov
inc
and
and
inc
jae
int3
and
cmp
push
out
mov
dec
arpl
loopne
sahf
mov
jae
int
cmp
xchg
sub
inc
dec
or
sbb
cmpl
dec
or
sub
inc
mov
jmp
call
fwait
cmc
push
and
push
ljmp
arpl
repz
dec
xchg
out
mov
js
js
jno
int
es
jmp
push
insb
jnp
mov
aad
and
faddl
outsb
jl
pusha
mov
mov
inc
sbb
mov
scas
xor
cmp
xor
mov
cmp
addl
dec
xchg
lock
pop
cmpsl
xor
daa
cmp
mov
mov
inc
mov
cmpb
into
popf
mov
push
lods
cmc
ja
sti
xchg
int
jo
push
cmpsb
out
xchg
divb
and
mulb
dec
sub
bound
scas
hlt
negl
mov
fiaddl
andl
popf
jno
outsl
add
push
sar
pop
ret
aam
hlt
fucomip
dec
cmc
and
sbb
aas
insl
mov
je
xorl
jle
repz
sbb
mov
or
add
sbb
cmp
mov
cltd
test
inc
mov
fst
je
flds
mov
fistps
es
inc
add
mov
dec
inc
movsb
mov
notl
aam
or
jbe
push
shl
sbbb
popf
inc
cmp
jns
test
lods
lock
inc
jnp
rolb
and
das
sarb
mov
mov
adcl
fistpll
pop
hlt
lea
jp
push
call
fiadds
xchg
cld
push
inc
mov
xchg
jmp
adc
daa
scas
mov
mov
repnz
add
pop
ds
fstl
shrb
xor
movl
inc
testl
add
call
stos
and
shl
and
cmc
adc
sub
insb
sahf
out
outsl
adc
int
cli
cld
in
adc
mov
xlat
rcll
sbbb
out
mov
or
xor
push
mov
imul
fdivl
les
xchg
loope
int3
and
bound
jg
flds
cmp
out
pop
bound
test
insb
lret
test
into
pop
stc
aaa
lds
dec
mov
jae
into
mov
jmpw
cmp
jmp
mov
xchg
sbb
test
sub
jg
je
cs
or
lahf
loope
data16
lea
xchg
call
into
or
sti
insb
push
enter
adc
insl
push
test
push
aam
sbb
test
loope
push
cmp
loope
pop
and
pop
andl
fsubrl
fistpll
dec
cmp
repnz
adc
sti
sbb
mov
pop
jl
test
std
cltd
push
jae
jmp
dec
sub
and
inc
das
fdivr
mov
divb
shr
loope
mov
adc
sub
mov
mov
push
into
cltd
add
fcomps
mov
dec
or
mov
jne
cmp
jns
and
jbe
ss
imul
mov
adc
dec
call
or
ss
ret
imul
jns
xlat
mov
dec
jecxz
cltd
stc
sbb
sbb
push
and
and
pusha
dec
and
insl
xor
cwtl
push
add
cwtl
jecxz
mov
dec
pop
push
push
adc
mov
jno
pop
fstl
je
out
in
fwait
xor
jo
icebp
and
add
das
inc
jge
add
cmp
shll
push
cmpsl
fcmovbe
jne
pop
cmp
clc
mov
std
push
mov
sbb
push
sub
add
xlat
rcll
adc
dec
mov
mov
jo
lahf
jl
jmp
stc
pop
pop
fildl
insl
push
or
mov
ficoms
mov
jae
sbb
pop
stc
push
loop
cmc
or
xor
dec
mov
jns
shr
int
pushl
jnp
sub
dec
cmp
cmp
repnz
mov
daa
mov
sbb
daa
leave
sbb
sub
aaa
mov
adc
inc
mov
mov
outsb
or
pop
rolb
xorb
in
inc
push
fbstp
mov
imul
cmc
bsr
out
xchg
adc
mov
mov
clc
sahf
cmpsl
cmp
arpl
out
mov
fildl
pushf
outsl
fistpl
outsb
adc
push
dec
or
cmc
insl
mov
mov
sbb
out
jae
pop
shl
icebp
xchg
jmp
enter
fsts
shlb
push
leave
push
repnz
add
pop
xor
rorl
or
loop
adcl
and
mov
aad
sar
and
stos
adc
xorl
icebp
xor
data16
repz
ljmp
mov
popa
movsl
mov
push
fstps
and
or
outsb
js
dec
pop
push
pusha
roll
jnp
mov
cmc
pop
insb
ss
ret
and
xlat
aaa
cmp
fdiv
inc
push
je
xor
and
jbe
orl
loope
sub
jno
loopne
cmpsb
cmp
jg
mov
dec
aas
jmp
xchg
xor
cmpsb
decl
dec
mov
into
push
jmp
add
and
jns
frstor
cmpsb
sbb
jmp
inc
jo
mov
adc
adc
adc
sbb
xor
in
pop
xor
mov
cmp
add
or
xchg
xor
mov
incb
jge
xlat
ja
ret
sbb
mov
repz
js
movsl
mov
mov
jae
sub
ja
xchg
sarl
cmp
mov
mov
sti
lods
sbb
add
fcompl
mov
das
mov
jne
cmpsb
je
data16
into
out
sbb
dec
cmp
jbe
stc
popf
fcom
lcall
in
mov
js
jle
addr16
push
icebp
pop
clc
adc
push
or
sti
xchg
pop
stos
enter
dec
sbb
arpl
pop
lret
mov
mov
movsb
jo
lea
and
sub
jp
gs
jg
ret
lock
mov
shr
movsb
lods
stc
jnp
test
loopne
push
xor
jecxz
lahf
push
ret
std
jbe
insl
inc
int
jl
mov
sub
aam
push
ret
inc
imul
in
pusha
inc
addb
ror
movsb
mov
xor
cmpsb
push
ret
mov
rcr
cmp
out
rcll
jl
pusha
aad
jns
out
jecxz
push
xchg
and
es
mov
test
ds
mov
ret
arpl
orl
mov
ss
inc
inc
divl
push
lods
in
fists
aaa
add
pop
jno
inc
mov
sbb
out
push
rcr
out
pop
or
std
adc
xor
push
mov
xchg
int
mov
repnz
pop
mov
lods
ret
or
out
mov
repz
xorl
sti
das
rcrl
mov
mov
stos
adc
pop
sti
aam
cltd
jbe
scas
sti
push
mov
sbb
inc
xchg
jl
aaa
cmp
cmc
adc
fidivs
adc
lock
mov
clc
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
jmp
push
movb
movsl
mov
cs
js
test
addb
jne
mov
and
mov
ja
inc
ret
cmp
xor
add
jmp
or
mov
cmp
push
int
dec
cli
sti
daa
mov
pop
pop
in
mov
pop
lds
adc
xorl
int
out
xchg
lret
jecxz
out
or
ljmp
repz
mov
fmull
int
out
je
in
jmp
mov
sahf
cmp
pop
lods
fwait
dec
pop
aam
iret
push
les
xor
enter
dec
out
inc
xlat
sub
cs
inc
lret
fdivrl
add
pop
push
mov
movsl
insl
xor
repnz
addl
in
inc
test
pop
and
xchg
mov
xor
mov
sbbb
and
xor
mov
fs
inc
sbb
mov
mov
xor
jae
pusha
sbb
das
scas
jns
stos
incl
mov
out
rcll
ds
xlat
repz
loopne
lods
pop
pop
in
xchg
xchg
orb
pop
js
pusha
push
int3
jno
outsl
mov
icebp
aaa
push
cmp
int
sub
mov
or
testb
mov
xchg
pop
faddl
ljmp
xor
ja
sub
nop
lret
shl
loopne
int3
pushw
adc
mov
jbe
shr
aam
mov
imul
mov
fidivl
xchg
jo
sbb
xor
pop
call
nop
mov
xchg
pop
xchg
flds
les
or
rolb
les
lods
dec
cmp
push
mov
jp
cmp
jg
out
popa
push
popf
mov
cltd
es
aaa
inc
cmp
xchg
jle
xchg
and
arpl
stos
roll
insl
add
rorb
pop
mov
push
adc
fnstcw
in
or
mov
and
dec
inc
inc
mov
les
xor
pop
shl
mov
stos
add
adc
cli
xchg
lea
xor
ja
jno
jmp
lds
or
or
ss
movsl
and
sub
xchg
sub
xchg
xchg
mov
xor
xchg
sbbl
inc
pusha
add
mov
or
movsl
inc
ja
testl
inc
lret
or
ljmp
push
cmp
lock
fwait
mov
sbb
push
mov
xor
int
xchg
cs
sbb
pop
jmp
sub
clc
mov
shlb
dec
push
jmp
dec
add
sbb
lds
xlat
into
rcrb
mov
push
mov
daa
inc
ret
mov
add
fldl
mov
xlat
adc
xor
shll
jg
flds
movsl
into
test
dec
mov
jae
fs
lea
outsb
lret
jbe
fwait
push
add
add
lret
sub
xor
in
sbb
xchg
add
ss
jns
mov
add
ja
shrb
xchg
iret
or
inc
inc
mov
cmpsb
loope
push
jg
inc
mov
enter
cmp
inc
dec
call
dec
sbb
sub
sub
fiadds
daa
adc
jle
jo
fisubs
inc
or
or
push
aas
fs
pop
std
add
leave
icebp
pop
cmpsl
xor
adc
dec
jmp
sti
sbb
xchg
xchg
jns
outsb
fcmovnb
mov
shll
fwait
cltd
test
arpl
rorb
push
inc
enter
shrl
arpl
jmp
data16
mov
adc
arpl
push
ret
test
xchg
test
add
xchg
jge
fcompl
fldl
cmpb
lcall
in
inc
ss
fs
lods
sub
sbb
sub
adc
dec
adc
lcall
dec
sbb
xlat
outsl
pop
mov
xor
inc
pop
push
sub
mov
sub
push
shrb
arpl
jno
popa
push
test
dec
daa
clc
test
jnp
sbb
outsl
xor
push
iret
mov
mov
cmp
mov
adc
dec
jb
mov
adc
mov
bound
mov
or
stos
push
loop
scas
in
fbstp
lret
test
loopne
fs
loope
in
dec
xor
push
fnstenv
ror
punpckhbw
or
rolb
mov
ret
es
push
ss
push
sbb
mov
inc
loope
mov
xor
xor
and
mov
daa
jle
jge
fidivs
xor
cmp
ja
sahf
jno
int3
lods
je
mov
sbb
fucomi
mov
clc
test
mov
lea
in
mov
cltd
data16
xor
stc
jne
push
sar
mov
jmp
or
aad
dec
adc
push
xchg
jns
and
lock
fcompl
xor
fs
xchg
push
lahf
cli
push
or
aad
stos
xlat
pusha
xchg
fsubrp
push
imul
push
jg
call
pop
cmp
jb
mov
std
mov
call
addr16
lods
lods
xor
xlat
icebp
divl
mov
push
jle
and
sub
cs
adc
jecxz
fcomps
cltd
scas
xchg
sets
xor
mov
sbbl
out
cmp
mov
loopne
fcmovu
jmp
in
out
mov
out
dec
sbb
frstor
sbb
inc
sti
push
popl
fdivrs
rcll
stos
stc
pop
in
ljmp
jno
fwait
in
dec
insb
push
mov
loopne
fidivrl
imul
mov
pop
mulps
inc
dec
xor
sbb
mov
cmpsl
test
fildll
gs
dec
dec
pushf
dec
inc
scas
jo
or
loopne
mov
dec
jmp
mov
mov
jno
imul
call
bound
in
lea
mov
hlt
sub
iret
mov
pop
pop
repnz
out
test
std
std
inc
mov
repnz
out
adc
jp
sbb
ss
insb
hlt
ds
dec
test
incl
bound
imul
imul
bound
shll
mov
bnd
movsb
xor
ret
cmp
sub
fwait
xchg
imul
push
sbb
test
dec
pop
dec
dec
push
cmp
les
pop
add
into
insl
test
jmp
sbb
mov
hlt
jmp
test
fwait
cltd
xchg
test
lcall
adc
int
mov
shlb
jge
mov
or
pop
inc
fisubrs
mov
cmp
mov
ret
or
xor
jg
jge
repnz
add
sbb
in
push
shlb
idivb
add
out
xchg
push
push
mov
push
rorl
cwtl
mov
xorl
cs
je
scas
mov
lds
sbb
fsubrl
pusha
rol
or
sarb
popf
loope
mov
fbstp
sti
mov
mov
data16
stos
adc
add
inc
or
push
jns
cs
test
mov
lods
adc
outsb
stos
push
in
pop
inc
sbb
inc
repz
adc
js
popf
jmp
and
pop
sbb
sarb
movsb
enter
ror
shll
mov
or
dec
hlt
mov
insb
fiadds
sahf
bound
imul
inc
cli
popa
dec
insb
or
dec
inc
mov
lea
mov
mov
fimull
pop
ja
in
cmp
mov
aas
iret
inc
dec
cmpsl
sbb
aad
test
mov
ja
mov
pop
fstl
jne
fcmove
mov
rcrb
popf
mov
jp
cmp
incb
mov
mov
int
inc
inc
out
or
mov
in
jnp
les
dec
cmpl
dec
sbb
inc
mov
in
xor
outsl
push
nop
mov
cli
or
push
popf
addr16
lahf
mov
loop
jl
adc
popa
sbb
add
jle
ret
mov
pop
fstps
addr16
add
inc
cmpsb
dec
out
push
lods
sub
cmpsl
mov
and
jae
aam
mov
sbb
pusha
sub
sar
cli
lcall
xor
popf
mov
sbb
mov
test
jnp
add
pop
and
mov
mov
je
repz
mov
outsl
notb
arpl
xchg
dec
test
sbb
mov
and
test
test
dec
push
je
push
add
movsb
ljmp
mov
test
int3
repz
or
mov
sbb
data16
add
or
sbb
cmovno
mov
pushf
data16
push
jns
fldcw
pop
nop
adc
lcall
je
lea
mov
stos
lds
dec
mov
je
add
xor
sub
mov
mov
cmp
sbb
push
add
adc
imul
sub
jl
jbe
addr16
sub
mov
aas
mov
xchg
sub
and
mov
lcall
cld
popf
movsb
sub
rcrl
mov
mov
aas
roll
cmp
imul
add
js
loopne
jl
push
mov
addr16
adc
inc
lahf
sbb
test
jle
jno
clc
call
cmpb
xor
mov
or
dec
mov
and
adc
inc
inc
or
enter
mov
scas
inc
popa
cmp
push
dec
loop
lock
or
das
data16
sub
xor
mov
mov
jmp
neg
sbb
lret
into
sub
mov
push
pushl
in
sub
mov
cltd
fidivrs
add
in
in
xchg
out
add
pop
pop
and
mov
add
lods
arpl
out
das
jge
inc
fadd
dec
push
push
out
dec
es
pop
inc
push
ss
rcrb
jo
and
shrl
inc
mov
inc
mov
xchg
shr
aam
xchg
sbb
mov
inc
lret
push
cmp
mov
dec
mov
pop
adc
sub
fs
xchg
arpl
add
or
push
repz
add
and
bound
sti
add
xchg
fnstenv
popa
mov
dec
iret
call
sbb
out
icebp
addr16
dec
add
test
sbbb
bound
ja
push
push
out
dec
jge
andb
icebp
imull
pop
sbb
addl
mov
in
push
add
mov
pusha
in
and
mov
inc
jbe
js
scas
mov
outsl
pop
lds
shll
and
enter
mov
daa
pop
js
imul
xchg
fisubrs
int
xchg
aaa
lret
mov
mov
mov
mov
and
fs
les
pop
outsl
inc
lods
int3
aam
pop
xlat
dec
cmp
inc
cmc
xchg
or
and
insb
dec
sbb
lock
cltd
arpl
push
shr
and
leave
ds
out
jns
clc
and
pop
adc
pop
incb
pop
inc
sahf
jl
dec
mov
movsb
jns
mov
xchg
push
jle
pop
mov
rorb
mov
std
mov
and
mov
inc
rsqrtps
mov
imul
push
push
cmp
mov
aaa
mov
mov
les
pop
mov
cmp
or
cmp
sti
or
aam
pop
cltd
push
inc
inc
or
femms
xlat
clc
xor
inc
or
stos
xchg
and
jo
mov
sbb
hlt
loopne
imul
jmp
and
cmp
push
scas
loopne
jae
dec
repnz
jb
adc
sarl
sub
enterw
jge
lret
data16
pop
lret
cs
loope
jb
mov
push
or
mov
in
shrl
xchg
bound
mov
push
int3
ja
mov
dec
jne
sbb
shll
and
outsb
inc
and
xchg
mov
insb
mov
sbb
jp
mov
jmp
scas
dec
xchg
mov
xchg
mov
cmpl
mov
mov
xchg
mov
outsb
jb
data16
popa
lahf
and
mov
xchg
movsb
sarl
pop
push
pop
cmp
test
lcall
int3
push
and
fwait
pop
xchg
or
push
xchg
inc
test
cltd
lods
ss
jmp
repz
inc
fs
fldl
ret
cmp
aad
pop
pop
xchg
xchg
jns
arpl
add
leave
dec
popa
adc
fbstp
push
ror
out
cli
sahf
mov
sub
add
dec
inc
or
pusha
scas
rolb
std
cmpsl
test
pop
push
ret
aaa
scas
es
fldenv
cmp
jecxz
lods
lods
repz
loope
jbe
dec
pop
push
xchg
push
cmpsb
leave
jle
clc
fidivrl
mov
rclb
or
xchg
mov
inc
sbb
pop
xor
shl
fwait
ficomps
outsl
enter
stos
lret
les
push
dec
call
lods
mov
ljmp
ret
adcl
ja
loope
jl
dec
sar
and
in
cmp
bound
stc
jo
loopne
loop
repz
repnz
mov
ja
push
inc
cli
pop
push
into
xchg
lahf
pop
mov
call
push
or
stos
leave
rcr
pop
lds
mov
jno
mov
add
cmp
sar
push
pop
pop
and
insb
leave
push
cmp
and
aaa
sbb
cmp
repnz
je
pop
adc
fwait
imul
js
adcl
std
sub
jnp
mov
out
pop
adc
sbb
jb
xchg
add
pushf
push
ret
inc
lds
mov
sar
or
or
loop
mov
or
add
in
pop
loope
push
pop
cmpsb
lds
pop
ja
mov
jns
negb
das
lcall
test
int3
xchg
fstl
js
es
jns
incl
jno
ljmp
cwtl
mov
xchg
add
pusha
push
scas
mov
outsb
icebp
inc
cmp
mov
pop
add
pop
push
adc
mov
pop
cmpsl
daa
xchg
enter
addr16
jecxz
repz
cmpsl
test
test
or
std
push
sbb
xchg
pop
stc
fidivrl
jle
sbb
in
dec
pop
push
jb
fidivl
out
jp
imul
jo
cmp
push
repnz
aad
shlb
and
pushf
and
cld
jne
adc
jp
add
in
call
repz
popf
fildl
fisubl
mov
hlt
and
cmp
mov
or
adc
and
ja
pop
mov
inc
in
iret
aad
xchg
mov
pop
test
push
insl
sub
nop
mov
push
in
sub
jb
dec
in
mov
inc
repnz
movsb
es
push
add
cmpsb
mov
in
in
js
int
xchg
push
push
and
xchg
cmp
loopne
dec
jnp
icebp
cwtl
pushf
pop
xchg
xor
inc
mov
and
add
movsb
sub
jbe
jl
movsl
icebp
ret
jns
xor
lcall
fdivl
inc
jle
pop
cli
pushf
add
movb
subl
fst
rcl
add
test
xor
jo
clc
pop
and
push
xor
test
mov
sbb
aad
je
or
ret
cmp
pop
xor
mov
jbe
data16
cs
shl
xchg
push
sbb
les
shrb
xchg
cli
mov
repnz
sti
sbb
in
adc
adc
cmp
cmp
movsb
aad
sbb
push
loopne
jg
fidivl
rolb
ljmp
mov
adc
ret
dec
mov
cmp
out
adc
pop
jg
sbb
hlt
testb
inc
xor
xor
lret
fwait
sbb
push
xor
and
out
sbb
jmp
in
sub
sbb
push
pop
pop
adc
adc
iret
add
fisttpl
repnz
out
cmp
test
mov
nop
dec
xchg
pop
mov
cmpsl
pop
lea
xor
jmp
repz
xor
in
pusha
int3
sbb
inc
mov
cltd
xchg
filds
hlt
pop
adc
xchg
mov
loope
dec
hlt
xchg
xor
push
loope,pn
dec
shll
ud2
sbb
pop
out
pop
vdivss
adc
or
sbb
mov
jge
or
cld
jg
es
test
add
cmpsb
or
cld
mov
xchg
sti
punpckhbw
stos
pop
movsb
cld
lret
sbb
mov
insl
adc
pop
jg
jg
jge
inc
xchg
clc
movsb
xchg
pop
outsb
stos
push
xchg
cmp
pop
in
testb
out
ds
subb
insl
mov
std
imul
add
sub
inc
outsb
mov
cwtl
nop
mov
xchg
mov
push
fsubr
dec
les
jno
into
jmp
jae
dec
dec
shrl
mov
pop
jns
loope
dec
popa
push
xchg
jg
and
sarl
xlat
xchg
xor
fldt
fs
xor
or
mulb
cld
jnp
mov
jmp
mov
cli
aad
movsb
dec
inc
sbb
call
icebp
std
jge
rorl
inc
out
lock
in
pop
jne
and
shlb
sub
cmp
dec
add
ja
stos
xor
jp
out
lods
inc
mov
outsb
aad
fistps
fildll
arpl
test
cwtl
push
jmp
test
bound
sbbb
scas
fmulp
xchg
push
adc
cmp
movsl
popf
xchg
xor
push
push
pop
pop
inc
fdivs
imul
sti
sbbb
jmp
dec
mov
push
test
cmp
sahf
sbb
jae
out
lods
inc
fs
jle
les
lock
mov
test
sti
out
xlat
mov
and
mov
sub
mov
orl
xor
fwait
xchg
mov
lock
push
scas
sub
gs
in
pop
in
add
push
cmpsl
icebp
pop
xor
pop
stos
rorb
add
pop
inc
daa
dec
inc
xchg
mov
xchg
jbe
test
pop
xchg
push
sbb
les
mov
inc
cmp
push
incl
xchg
loope
test
out
and
fdivrs
subl
jmp
shll
dec
push
push
dec
pop
daa
rcrl
pop
mov
adc
jo
sub
test
mov
popa
in
lahf
loopne
adcl
testl
enter
sub
loop
clc
outsb
sub
aad
out
mov
inc
adc
jns
xorl
and
dec
mov
sahf
xor
adc
xlat
mov
lea
bound
ret
popa
mov
ljmp
cmp
sub
roll
or
fsubs
dec
mov
add
sub
jle
scas
out
pop
daa
xor
xor
xchg
mov
es
icebp
adc
mov
or
arpl
add
and
cmpsb
into
mov
xchg
xor
dec
in
adc
mov
movsl
push
loope
test
js
push
aas
test
rcrl
stos
aad
pop
icebp
mov
bound
add
imul
fdivp
out
out
std
xchg
xor
pop
mov
cli
xor
or
out
sbb
mov
push
cwtl
icebp
cwtl
or
jne
jno
inc
jle
push
and
sub
test
in
add
iret
push
in
or
fcoml
and
mov
fadd
sub
or
cmpsl
jmp
int3
cmpsl
mov
aas
and
loope
out
jns
scas
imul
mul
mov
daa
arpl
fwait
rclb
je
dec
fsubrl
out
sub
lods
lods
xor
fbld
sub
icebp
pop
inc
sub
push
mov
inc
popa
mov
cmp
jg
sti
or
jno
xor
add
pop
repnz
test
cwtl
sub
idivb
cltd
fimuls
push
fisubl
scas
mov
setle
in
ret
xor
inc
div
mov
ja
jmp
sub
int3
xchg
pop
pushf
pop
or
mov
pop
inc
fmull
cmp
adc
push
out
stos
xorl
mov
cmp
or
shr
nop
inc
out
enter
mov
jmp
mov
rcr
inc
in
mov
pusha
mov
xor
test
cwtl
push
lahf
test
xchg
add
testb
scas
stos
icebp
mov
js
jge
inc
adc
and
or
mov
test
mov
imul
lahf
stc
cmp
and
dec
sub
sub
mov
into
push
push
int
and
leave
push
push
fstpt
popf
xchg
je
ud1
inc
daa
xchg
out
mov
popf
mov
js
push
push
mov
xchg
pop
mov
sarb
popa
mov
jmp
sti
cmpsl
lahf
add
inc
lock
hlt
int
dec
fwait
jg
pop
int3
xor
test
int
sti
cmp
push
cmp
decl
and
jb
dec
add
sarl
sti
xlat
jmp
nop
es
mov
add
pop
scas
les
andl
inc
in
pusha
and
xchg
outsl
dec
loop
or
stos
jmp
lret
mov
out
das
idiv
aas
mov
cltd
loop
cmpsl
or
dec
inc
pop
xchg
xor
mov
add
sbb
loopne
imul
or
xchg
mov
outsl
pushf
xor
in
xchg
sbb
imul
hlt
jmp
adc
mov
shrl
js
pusha
adc
pusha
xlat
push
adc
fdiv
sub
or
pop
lds
js
sar
into
decb
fwait
add
mov
fcomi
sbb
inc
push
mov
mov
and
adc
xor
inc
add
pusha
hlt
jle
lret
sbb
popa
xlat
sbb
mov
test
out
xor
imul
fistps
mov
pop
sub
stc
mov
adc
or
stc
lods
arpl
sub
mov
repz
push
cmp
test
dec
adc
push
lret
and
subb
icebp
lahf
scas
cmc
cmp
dec
xor
cmp
repz
mov
outsb
add
sbb
pop
or
sti
mov
push
shlb
mov
outsb
cmp
xor
cmp
add
push
or
xor
jne
pop
ror
lds
scas
ficomps
insl
jp
mov
or
dec
arpl
xchg
pusha
mov
outsb
icebp
std
jbe
push
or
push
clc
in
dec
sub
xor
xor
mov
xchg
push
testb
xchg
adc
mov
mov
js
or
sbb
inc
insl
test
inc
mov
add
filds
outsb
jb
or
int3
pop
fdivs
hlt
ljmp
xor
pushf
test
or
xor
mov
xchg
pop
clc
aad
nop
xor
push
xor
sub
rcrb
mov
addr16
push
ss
lcall
sub
subb
xlat
xor
push
loope
add
add
mov
cmp
and
pop
outsl
in
mov
dec
arpl
inc
sti
nop
push
pop
adc
add
lds
jg
mov
push
pop
sahf
xor
sbb
inc
dec
mov
outsl
fstl
jbe
cmp
inc
push
lods
mov
mov
jns
inc
inc
daa
test
movsb
lret
loopne
leave
adc
into
out
shlb
mov
sbb
scas
inc
mov
xor
imul
popa
mov
lock
cltd
mov
adc
push
fbstp
xor
je
dec
mov
and
imul
adc
xor
jne
data16
leave
and
repnz
repz
adc
inc
ss
iret
test
loopne
arpl
jnp
sub
sub
dec
mov
sub
inc
iret
outsb
data16
or
test
fcoml
scas
es
lea
mov
fisttpl
pop
mov
lahf
fidivl
sahf
js
xchg
or
cmpsl
dec
mov
cmp
ss
idiv
arpl
dec
adc
dec
add
and
add
addr16
repz
aaa
hlt
ds
xor
out
sbb
jns
dec
inc
xchg
mov
mov
addr16
into
cltd
dec
aas
das
mov
nop
jb
pusha
cmc
sub
inc
repnz
in
pop
inc
jmp
outsl
nop
xchg
jmp
inc
arpl
pop
mov
loop
ss
fdivrs
inc
xor
push
adc
jle
es
jno
pop
cli
aad
inc
int3
xor
mov
sub
shrl
inc
push
mov
push
in
lcall
push
or
les
cmp
xchg
sar
pop
or
xchg
add
jo
mov
test
les
ror
xor
inc
jle
jne
sub
dec
insb
inc
popf
inc
fmul
ljmp
mov
pop
pop
dec
pop
pushf
adc
cmpb
cmc
hlt
jg
call
dec
mov
and
std
icebp
es
push
orb
imul
cmpsb
jbe
inc
sti
jg
and
pop
sbb
xor
adc
stos
xor
dec
insb
scas
adc
push
jne
add
les
mov
pop
xor
pushl
repz
jle
ret
mov
mov
lods
jp
popf
jbe
lea
ja
lret
xchg
xchg
arpl
xor
cmpb
cmc
xor
sbb
push
jo
testl
inc
fwait
lods
in
xchg
sbb
add
and
dec
gs
fdiv
ljmp
fldl
pop
mov
sti
xchg
out
inc
push
sub
push
cmpsb
inc
cmc
flds
lods
add
xor
in
inc
jb
push
test
js
inc
sbb
cmpsl
jp
inc
jg
jmp
sub
xor
repz
push
bound
cwtl
push
je
inc
das
test
aaa
or
jno
mov
or
fstpl
out
lcall
fmull
stos
mov
add
mov
sub
icebp
and
outsb
sbb
mov
xchg
inc
repnz
shll
push
inc
cs
xor
aam
push
dec
jg
shlb
fildl
pop
push
arpl
pop
inc
hlt
ret
mov
stos
pop
xor
sbb
push
aam
and
dec
xor
xor
nop
jno
mov
mov
inc
subl
pop
cmp
push
push
dec
jb
jo
push
sub
dec
orl
xchg
jp
out
mov
mov
insl
cld
imul
inc
sbb
sub
inc
push
scas
and
xchg
xor
mov
xor
lret
lock
cli
shld
stc
shrb
inc
xor
int
mov
push
add
lds
mov
inc
popf
cmp
sub
sub
roll
xlat
adc
jae
sbb
in
push
dec
shr
jmp
call
add
cmpsb
and
dec
or
clc
push
add
pop
jnp
aaa
cltd
push
ret
mov
leave
jmp
fdiv
mov
xlat
add
sbb
cmp
gs
test
outsl
push
in
out
dec
repnz
add
arpl
push
jecxz
lods
and
popf
pop
arpl
mov
pop
popa
in
popa
cmp
jae
stos
mov
stc
lods
jns
sub
mov
shrb
addr16
pop
dec
stos
mov
adc
fists
push
xor
mov
xor
xchg
aad
mov
sub
push
das
xchg
xchg
push
push
cli
js
xor
std
daa
mov
xchg
mov
out
mov
int
jge
or
ret
inc
mov
ror
push
lcall
and
xor
jecxz
mov
mov
loope
pop
loopne
pop
dec
dec
and
out
cmp
lds
jno
jns
sub
dec
in
cmp
cmp
movsl
scas
lahf
fstl
rolb
fisttpll
and
xchg
xor
xchg
jmp
or
sarb
and
fs
sbb
dec
xchg
es
pop
ljmp
fidivrs
bound
inc
jp
hlt
ficompl
pop
test
icebp
adc
testl
lods
pop
jbe
popa
cmp
mov
sub
stos
vdivsd
adc
mov
in
imul
clc
jg
and
data16
sahf
lock
fwait
mov
repnz
xor
incl
dec
cmc
cmp
xchg
inc
inc
inc
addb
repnz
cli
push
mov
test
xor
into
aas
imul
in
inc
test
xchg
adc
scas
adc
dec
or
ret
fldenv
jg
das
mov
inc
and
rcr
or
mov
cmp
jnp
int3
jnp
sub
loope
mov
out
sbb
test
adc
cmp
ds
imul
lret
ljmp
adc
push
dec
sbb
add
iret
push
out
jae
xchg
lret
mov
mov
push
pushf
sbb
sbb
and
ds
lock
sbb
push
dec
imul
ret
pop
out
cmp
sub
xchg
mov
or
sbb
sbb
les
loope
mov
je
stos
xchg
mov
xchg
leave
orl
ss
rcl
fwait
mov
xchg
mov
mov
pop
adc
rorb
xor
inc
adc
inc
xlat
xchg
jmp
jbe
sub
lcall
clc
xchg
leave
fdivr
mov
inc
repnz
test
jp
lret
adc
scas
mov
mov
mov
inc
incb
movsl
mov
xlat
pop
xchg
sub
inc
inc
push
add
xchg
insb
das
mov
mov
lcall
movsb
lea
and
outsl
in
mov
jg
popa
pop
adcb
aad
rolb
out
pop
xchg
mov
cltd
jne
ss
inc
ds
repnz
or
mov
inc
inc
imul
pop
lods
mov
push
es
push
or
sbbb
js
test
aaa
in
jo
mov
jmp
push
pop
cld
xchg
cmpl
inc
out
dec
mov
dec
cmp
mov
lahf
jmp
and
leave
popl
jo
in
and
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
jmp
adc
incb
cmpsb
xchg
or
lahf
cmp
inc
push
mov
orl
addl
push
xchg
jo
es
pop
adc
pop
add
jp
dec
icebp
movsl
xor
add
addr16
das
in
jg
xchg
out
std
leave
xchg
add
daa
or
adc
jno
or
and
gs
mov
in
popa
mov
aas
out
adc
jmp
jnp
cmpsb
out
adc
xchg
cltd
push
and
ret
pop
jns
mov
mov
ljmp
dec
ret
inc
pop
sbb
push
js
jbe
nop
inc
daa
les
sbb
out
pop
js
shl
bound
dec
mov
pop
pop
jg
dec
gs
sbb
mov
scas
pop
xor
ret
test
sbb
push
pop
cwtl
jno
add
sub
aad
push
js
and
lret
out
mov
in
push
cli
test
cltd
cld
jg
ja
out
push
fnstsw
stc
mov
jp
sbb
pop
and
or
cmp
sti
or
xchg
addr16
fisttps
xchg
jo
incl
pop
mov
mov
fmuls
xchg
xor
mov
repnz
in
pop
ds
pop
idivl
or
cwtl
in
cmpsl
ja
hlt
ret
rcl
xor
add
mov
insl
pop
mov
inc
cmp
das
sub
or
in
inc
scas
sbb
test
jge
fstpt
dec
iret
imul
xor
mov
adc
pop
mov
xor
rorb
xor
fldl
pop
adc
shll
or
repz
jns
cmp
mov
mov
subl
idivb
sbb
insl
cltd
in
inc
adc
dec
sub
ret
loope
cmp
fincstp
jno
pusha
ret
add
fidivrs
outsl
arpl
rcrl
jge
dec
imul
xchg
push
jbe
shll
jp
jecxz
gs
jmp
nop
xor
xorb
inc
and
andl
jle
je
fistpll
mov
and
repnz
mov
add
testb
out
mov
cmp
mov
dec
sbb
xchg
fisttpll
mov
push
sub
or
sbb
sub
in
repz
mov
in
imul
lods
dec
jno
imul
jecxz
jmp
xor
push
ret
jp
xchg
xchg
xchg
gs
jl
xor
inc
pop
ret
pop
xchg
int3
inc
das
cwtl
mov
mov
mov
dec
js
iret
popa
push
mov
push
push
pushf
test
rcll
inc
arpl
mov
js
addb
loopne
jns
mov
dec
jge,pt
test
push
iret
cmp
imul
push
int
xor
sbb
adc
mov
mov
ficoml
inc
jp
pop
jecxz
jge
popa
pushw
jmp
xlat
jne
jbe
mov
jmp
sbb
pop
cmp
pop
xor
push
lahf
outsb
cmpb
mov
dec
repnz
cltd
and
sub
inc
pop
dec
sbb
sbb
sub
and
or
lret
cmp
ljmp
sbb
rorb
push
jmp
loopne
cli
gs
cwtl
pop
scas
test
sbbb
pushf
adc
sub
inc
jns
mov
jl
movsb
in
xor
insl
cmpsl
ret
sahf
mov
cmpsl
ret
jp
mov
fistl
xor
mov
add
das
bound
les
push
cli
adc
loope
mov
adc
inc
fistps
mov
ret
int
mov
dec
mov
sub
mov
mov
lcall
out
loop
sub
ljmp
sub
outsl
cld
jae
out
fldl
mov
cmp
and
notl
pop
or
pop
jmp
ret
jmp
push
addr16
js
mov
inc
nop
cmp
cmpsb
mov
xchg
lock
push
mov
pop
or
out
into
cli
movsl
das
adc
dec
adc
das
inc
xor
test
test
les
push
jo
aas
add
mov
xlat
pop
cltd
outsb
xor
lea
aam
pop
clc
fdivl
adc
dec
jmp
jl
loop
sahf
fmul
adc
jne
sbb
test
xor
jl
mov
sub
mov
stos
sbb
sub
jg
mov
lcall
jae
inc
sbb
shrb
xchg
mov
add
fildl
in
clc
fisttps
xchg
inc
out
imul
mov
push
repnz
loope
mov
pop
cmpsl
mov
aad
jo
inc
inc
jge
push
std
and
fidivrl
ss
jae,pt
sub
movsl
jb
xchg
pop
inc
xchg
sbbl
sub
inc
xchg
xchg
mulb
in
dec
out
lock
mov
push
push
fcoml
adc
imul
testl
mov
fnstenv
mov
or
rclb
add
mov
pop
push
test
push
and
xor
push
add
jmp
adc
jecxz
mov
movsl
call
ds
pop
xchg
jp
out
sub
pop
mov
ret
inc
or
repnz
scas
add
lret
xor
jl
out
outsl
sbbl
insl
xchg
cmp
fs
out
and
pop
cmp
jl
push
sti
push
and
add
jb
mov
pop
dec
fldl
cli
outsb
dec
jae
pop
jbe
mov
mov
inc
jge
jns
push
sti
xchg
mov
mov
jb
xor
push
xchg
xor
int
out
pushl
iret
lret
cmc
mov
jae
test
pop
mov
and
lea
cmpsl
pop
test
cltd
mov
imul
jg
test
and
mov
xor
sarl
ret
test
push
mov
sub
hlt
pop
push
mov
cmp
pop
ret
adc
push
repnz
mov
repnz
xor
sbb
sbb
scas
insb
adc
fisttpl
lahf
lock
pusha
in
jp
gs
das
add
mov
fldl
pop
sbb
pop
insl
and
sub
rep
add
mov
imul
fstl
mov
iret
dec
decl
jecxz
cmp
jbe
push
and
adc
decb
pop
das
mov
rcrl
test
lcall
test
xor
pop
fistl
das
adc
jle
sub
dec
fbstp
cmp
into
sbb
into
sbb
add
insb
enter
sub
mov
and
xor
or
std
jmp
mov
fcoml
shll
inc
push
inc
adc
lahf
dec
mov
lcall
jmp
test
out
in
mov
fmuls
adcl
not
imul
stos
test
into
call
dec
cmp
pop
cmp
jo
lret
scas
outsl
repnz
inc
cs
clc
push
call
fwait
inc
into
sbb
dec
xor
sbb
jbe
into
stos
cs
outsb
xchg
mov
and
sub
pop
inc
add
dec
loope
mov
pop
adc
dec
leave
sbb
mov
repz
sarb
mov
out
sub
insb
mov
and
out
xor
loopne
add
and
inc
push
stos
mov
push
in
fisttpl
push
cmp
popf
lahf
insb
lret
xchg
cmp
popf
cmp
add
push
add
jl
mov
decw
icebp
roll
pop
imul
or
jl
add
les
or
jmp
jno
or
aad
mov
inc
pop
xchg
cmc
cli
adc
cs
jns
std
cmc
pop
or
mov
xor
push
dec
std
mov
out
mov
and
movsb
inc
mov
mov
cmp
mov
xor
mov
xor
sub
in
add
sarb
rcrl
push
std
adc
sub
shlb
mov
loopne
or
mov
insl
popf
test
int
mov
sbb
je
in
roll
ret
sub
xchg
or
ret
pusha
ja
push
dec
or
mov
push
jo
sti
mov
push
fs
mov
cmp
pushf
cmpsl
out
lods
jg
mov
push
dec
mov
pop
jecxz
rolb
sub
hlt
cpuid
jne
and
pop
push
xor
int
cld
inc
sub
xor
arpl
lods
jecxz
or
rolb
sbb
push
dec
dec
scas
imul
jbe
je
cmp
jbe
push
sbbl
repnz
push
shlb
pop
lock
push
xor
mov
imulb
dec
in
jge
mov
or
jp
inc
push
push
inc
push
cli
leave
jg
cmpsb
xlat
push
ret
bound
clc
pop
push
sub
adcb
rorb
push
lods
imul
add
adc
jo
mov
pop
ror
jmp
inc
jge
inc
negl
mov
or
and
mov
test
inc
lahf
add
mov
jbe
aas
dec
addr16
int3
lods
into
jo
dec
jns
inc
jns
loopne
pop
rcrl
lds
jne
rcll
sub
mov
stos
data16
loop
xchg
add
mov
mov
push
out
xchg
jp
rolb
fsub
mov
jg
ja
add
stos
sbb
push
mov
mov
xor
mov
mov
daa
repz
adcb
mov
dec
xchg
sub
fimuls
movsl
adc
test
nop
outsl
aaa
out
fisubl
call
fmulp
mov
xor
mov
cmp
jmp
outsb
or
adc
push
cmpb
pop
and
pop
pop
fsubr
or
arpl
sti
divl
cmc
sbb
xor
out
mov
inc
dec
stos
mov
mov
je
pop
cli
mov
imul
int
or
inc
mov
xchg
shll
jecxz
add
lret
xor
loopne
xor
lea
jo
cmp
loope
pop
out
jmp
jo
clc
lea
sbb
stc
sahf
icebp
stos
adc
mov
jbe
xor
addl
jmp
ja
sub
aad
cwtl
loope
push
loopne
sub
pop
add
stc
sbb
cli
test
inc
or
mov
sub
outsb
adc
clc
andb
push
mov
xchg
or
outsl
out
aas
and
adc
dec
mov
mov
add
adc
and
xchg
push
leave
sub
in
dec
add
mov
out
test
test
out
idivl
out
fwait
lcall
cmp
sbb
mov
push
leave
stos
test
test
pushf
sbb
int3
jle
pop
dec
movsl
negl
pop
std
out
jge
stc
cmp
inc
and
adc
adc
sbb
clc
xor
aaa
loope
xchg
test
in
or
jecxz
lcall
jmp
mov
lock
pop
xchg
outsl
xchg
loopne
sbb
mov
andl
insl
shl
sbb
or
sub
sti
loop
cmp
sbb
ffree
cld
scas
xor
divb
rorb
jmp
lock
add
call
imul
adc
addb
pop
imull
adc
in
ja
sub
mov
jl
dec
cs
inc
icebp
mov
push
or
push
cmp
sbb
mov
mov
sub
leave
rolb
popa
call
out
idivb
lahf
pushf
dec
aas
addb
dec
xchg
enter
sbb
or
xchg
dec
push
les
sarl
out
jge
sbb
or
clc
adc
cmpb
jns
push
xchg
cltd
movsl
cmp
nop
pop
mov
call
ds
mov
lcall
cltd
mov
hlt
add
scas
inc
sub
or
push
push
cmpsb
hlt
jl
lret
mov
sub
call
out
adc
pop
pop
jnp
stos
mov
int3
jmp
pusha
mov
inc
lods
imul
aaa
jb
sub
cmp
mov
aam
leave
jno
xchg
stc
jl
jbe
sbbl
mov
xor
pop
push
imul
pop
je
push
iret
fsubrl
scas
shlb
pop
push
and
dec
insl
pop
je
sarl
sbb
adc
xchg
sbb
ja
inc
jne
cli
mov
xchg
xor
adc
pop
pop
mov
repz
sahf
sub
mov
sub
jle
or
repnz
xlat
jle
cli
xchg
add
add
mov
fwait
push
inc
sbb
pop
stos
sbb
add
in
test
rcrl
mov
aad
insl
notl
das
jmp
or
int
test
cmp
jno
xchg
in
ret
out
mov
sub
mov
add
push
cwtl
adc
cs
clc
jge
bnd
mov
adc
loop
jne
mov
fucomip
adc
jle
mov
repnz
into
dec
inc
dec
and
test
cld
cmp
jb
pop
sub
subb
adc
pop
ljmp
lock
fcompl
clc
pop
jmp
pop
xor
inc
pushf
dec
and
mov
rcl
xchg
pushf
aaa
sub
test
sub
and
jecxz
ja
pusha
lret
out
xor
cmp
and
into
xor
xchg
pop
adc
inc
gs
cmp
push
sub
fs
daa
mov
repnz
jge
lock
jecxz
jb
cmp
xchg
rorl
repnz
sub
pop
or
shl
xchg
push
inc
cmp
mov
pop
int3
sub
mov
cbtw
xchg
sbb
jg
adc
insb
bound
xchg
pop
lea
std
inc
push
mov
jnp
std
sbb
cli
idivl
adcb
loop
orb
jnp
add
iret
sahf
sbb
dec
push
mov
call
ret
jne
lock
pop
mov
js
into
js
out
add
aad
std
pusha
clc
loopne
sbb
lock
and
xor
xchg
adc
rorb
int3
js
js
sub
mov
lods
mov
enter
leave
mov
stc
mov
dec
fbstp
dec
or
jmp
out
xor
mov
testb
arpl
inc
or
xchg
push
test
adc
lods
add
push
pusha
int3
ror
inc
pop
xchg
cmp
mov
into
xchg
cltd
sub
mov
mov
jne
outsb
adc
or
enter
dec
aad
pop
out
jge
sarb
les
push
xchg
decb
aam
inc
dec
fildl
mov
push
add
xchg
sar
aad
cmp
popa
lods
mov
sbb
imul
jp
add
dec
rol
xlat
inc
inc
in
jg
pop
jnp
adc
vorps
out
and
dec
daa
push
jb
push
inc
pusha
fbstp
pop
push
xlat
lods
xchg
cmp
pop
xchg
scas
es
mov
inc
mov
jo
push
xchg
imul
jge
scas
into
cmpsl
adc
adc
lods
sub
in
dec
gs
ret
sub
mov
pop
and
pop
inc
cmp
cmpsl
adc
jmp
add
adc
push
enter
sbb
adc
cmp
sbb
adc
push
nop
sbb
xchg
pop
cmp
mov
rolb
test
jg
jno
or
sbb
lret
test
cmp
adc
push
addb
xchg
pusha
sbb
outsl
lea
mov
call
jnp
mov
cwtl
addl
jmp
sub
ret
push
inc
gs
dec
test
jge
adc
das
roll
sbb
ds
sub
mov
mov
cmp
shll
inc
mov
mov
xchg
in
sti
mov
sahf
jp
xlat
cmp
adc
mov
js
pop
dec
rol
push
sbb
push
testl
stos
mov
sub
or
loop
xor
pop
stc
mov
push
sbbb
sub
aam
dec
mov
xchg
jo
sbb
sub
repz
and
push
mov
push
pop
pushl
daa
pop
push
jns
loope
pop
cmp
sub
or
gs
pop
ss
out
xor
pop
jmp
pop
fimuls
jg
push
jg
add
xchg
jns
inc
jecxz
lret
jl
addr16
jnp
jg
xchg
xor
inc
lods
lret
shrb
inc
ffreep
adc
mov
adc
fbstp
and
xchg
xchg
hlt
mov
data16
jg
testb
sub
repz
and
arpl
add
sbb
push
fcmovb
push
jno
repz
sbb
lret
sub
jbe
addb
movsb
lahf
add
and
addr16
mov
lods
jbe
sbb
lret
push
xor
loope
and
jle
mov
lods
pop
rol
inc
mov
dec
mov
push
cmpsl
pop
push
fsubl
mov
inc
jno
imul
sbb
loope
pop
sahf
loope
ds
mov
cli
lds
and
sub
popl
loopne
negb
loopne
fiaddl
sub
rclb
lods
rcrb
sub
daa
mov
push
push
test
mov
cmp
lret
mov
or
cli
xor
aas
xchg
rolb
in
xchg
lods
out
scas
jns
jg
movsl
pop
push
adc
mov
popa
pop
push
adc
loop
lcall
pop
loop
cmpsb
mov
dec
stos
addr16
pop
out
scas
jb
in
out
pop
ja
je
out
jge
pusha
push
sti
sub
push
cmp
hlt
jmp
enter
mov
jb
loope
pop
mov
jno
pusha
stc
negl
ja
push
pop
push
sti
and
popf
xchg
icebp
fistpll
jns
dec
stc
sub
jbe
orl
pop
inc
movsb
mov
fldcw
push
pavgb
out
and
std
and
and
adc
fs
test
adc
in
cmp
pop
scas
fiaddl
xor
xlat
test
sbb
dec
xor
sbb
xchg
mov
movsl
int3
push
stos
push
fstpl
xchg
test
imul
fs
scas
mov
push
aas
iret
pop
hlt
insl
adc
cmp
repz
pushf
repnz
or
cmp
lcall
pushl
leave
adc
popa
push
das
popf
shll
xchg
lahf
repnz
dec
sahf
dec
push
cmpb
push
and
inc
pop
mov
std
stos
test
xchg
mov
ret
rclb
je
lahf
cli
lods
mov
pop
out
stc
or
push
jmp
jmp
out
imul
outsb
jne
sub
and
sub
jl
pop
mov
testl
xchg
in
inc
pop
lea
icebp
push
aaa
sbb
inc
mov
mov
pop
sar
dec
lea
ja
sbb
mov
jmp
pop
mov
sbb
sbb
fdivrs
push
iret
stos
xchg
je
dec
aaa
adcl
pop
pop
mov
add
in
pop
into
cmp
repz
loope
bound
outsb
fstpt
stc
mov
jne
push
push
subl
and
mov
repz
add
shll
and
push
popa
push
sub
ret
lea
xor
lret
jne
pop
stc
lea
xchg
xchg
jno
repz
pop
repnz
sub
icebp
insb
lea
xchg
inc
add
loop
pop
aaa
inc
not
pop
test
add
pop
mov
mov
mov
fildll
mov
cmp
add
xor
xor
lahf
cmp
incl
dec
xchg
or
mov
in
push
bswap
sub
sub
out
ficoml
dec
xor
and
or
insl
aam
jg
movsl
out
ret
push
or
pop
sub
mov
jmp
inc
and
popf
or
push
inc
scas
and
mov
push
mov
mov
push
mov
lahf
int
lea
nop
imul
mov
bound
mov
nop
push
icebp
addb
or
scas
in
inc
dec
inc
addb
fidivs
jns
xchg
in
sbb
in
dec
mov
add
dec
pop
jne
lcall
sub
ret
inc
xchg
push
cmpl
int
js
push
lods
in
add
sbb
stos
jg
out
sub
xor
push
jmp
xchg
mov
and
push
lcall
mov
fadd
push
sub
inc
fiaddl
mov
testl
pop
adc
lcall
stc
pop
sbb
inc
pop
mov
jg
xor
jb
lea
repnz
cmp
sub
rolb
mov
fwait
icebp
arpl
jne
out
imul
or
cmp
pop
div
pop
adcl
jns
mov
mov
roll
sbb
movsb
mov
stos
stos
pop
xchg
mov
lock
arpl
andb
nop
push
mov
dec
jp
inc
decb
andl
fwait
pop
into
enter
cmp
stos
inc
lock
mov
or
and
mov
stos
dec
js
ljmp
adc
lea
xchg
pushl
imul
into
xchg
ljmp
adc
inc
cli
sbb
xchg
lret
xchg
inc
fucomp
out
lods
cmpl
and
ds
and
inc
sub
ljmp
sahf
out
push
push
push
sahf
pushf
sbb
ret
test
sbb
loopne
sbb
sti
mov
into
popa
pop
je
lret
lds
popf
mov
jge
enter
push
inc
jmp
in
testb
xchg
adc
or
call
es
dec
mov
and
sbb
and
or
clc
adc
xchg
or
mov
popf
int3
and
push
push
pop
cmp
xchg
push
jnp
fcmovb
xor
andl
pop
jl
cltd
xchg
adc
call
jmp
jecxz
adc
jne
outsl
push
fsubp
mov
add
xor
test
shrl
loope
out
ja
push
jo
fnstenv
push
cmpsl
rolb
test
mov
imull
push
dec
sub
out
imul
into
out
jb
pop
mov
push
test
iret
fs
ss
loopne
clc
mov
mov
fwait
dec
scas
sbb
push
or
mov
xchg
stos
cmp
dec
mov
aaa
mov
sub
pop
add
adc
testb
lods
imul
xor
outsb
mov
jbe
out
sub
inc
push
sub
or
mov
insb
push
shlb
int3
sub
in
mov
idiv
lods
imul
je
lock
stc
inc
sbbb
mov
and
pop
adc
lahf
mov
insl
mov
dec
mov
mov
add
pop
push
rcrb
fs
lds
roll
lock
mov
mov
and
std
out
rcll
scas
addl
adc
mov
mov
lahf
lock
insb
sub
inc
ja
jae
fsubl
sahf
adc
aas
in
mov
sbb
test
adc
sub
cmp
sti
jl
sbb
jmp
add
mov
push
out
pop
aaa
xor
das
popa
stos
iret
and
outsl
lret
push
push
imul
push
xchg
jo
movsb
sbb
push
movsb
xchg
rcll
arpl
sub
in
mov
lods
pop
scas
test
fists
cli
mov
push
pop
stos
repnz
sbb
outsl
mov
cmp
push
mov
adc
and
mov
lds
call
test
sub
mov
xor
lock
sub
inc
pop
pusha
cmpsl
lcall
daa
mov
mov
popf
repnz
add
mov
push
repnz
jns
les
cmpsb
mov
jl
pop
inc
pop
xor
int3
lcall
btr
repnz
sbb
mov
out
mov
dec
popa
data16
push
lock
jo
mov
adc
jmp
mov
inc
clc
js
push
mov
out
mov
je
pop
popf
jp
push
cmp
mov
cmp
adc
fcompl
out
mov
mov
inc
rorl
adc
add
adc
cmp
cs
popa
dec
cmp
cmc
jnp
mov
mov
push
popf
lock
test
not
dec
jge
fisubs
jns
mov
cmp
fsubl
bnd
jecxz
dec
rol
mov
jmp
pop
sbb
sbbb
mov
push
lahf
add
push
inc
inc
movsb
cmpsb
push
bound
inc
lock
lds
sbb
push
hlt
push
popf
push
inc
pushl
sbb
mov
shll
stos
nop
loopne
jle
pop
outsl
faddl
adc
xchg
cld
scas
icebp
in
sahf
test
add
inc
pushf
push
testl
js
leave
in
test
jl
jo
fistpll
aas
int3
scas
jl
pusha
in
dec
jne
or
inc
dec
and
shll
push
mov
lods
aam
inc
mov
sbb
in
stc
aas
cmc
scas
int3
in
jo
subl
inc
aam
adc
fsts
jle
in
adc
out
dec
fidivrl
addl
rol
or
xchg
ds
or
insl
repnz
sbb
adc
mov
sbb
dec
cld
pop
dec
lods
add
mov
aad
pop
outsl
mov
pop
nop
jp
mov
loopne
inc
rol
nop
sbb
fdivs
cli
fs
iret
xor
xorl
mov
neg
movsl
pop
pop
int3
in
jecxz
and
stos
les
ds
or
cmp
adc
adc
ret
loop
jb
lret
push
sbb
sbb
jge
les
sub
cwtl
loopne
inc
and
int3
scas
dec
shl
jmp
xchg
scas
xchg
dec
fs
push
jp
lcall
add
pop
aaa
mov
inc
and
lods
jno
rcr
cmp
pop
adc
ss
xor
andb
adc
insl
stos
push
and
jne
jl
and
push
xchg
imul
xchg
jge
pop
xlat
adcl
push
push
pop
loop
sbb
jmp
hlt
das
sub
mov
int3
adc
dec
mov
leave
cmp
gs
das
pushf
cmpsb
cltd
xchg
in
outsl
std
xor
or
gs
xor
fmull
cmpsl
and
mov
rep
inc
ret
adc
insb
or
jne
xchg
or
jo
into
stos
jmp
or
dec
jb
xchg
mov
xchg
test
rcrl
push
mulb
mov
push
lods
xor
shll
sbb
insb
movsl
xor
lods
xlat
fsubrl
decb
mov
pop
fisubl
mov
mov
add
ja
cmpsb
ljmp
push
xchg
insl
and
in
push
sub
imul
sbb
loop
pop
inc
mov
negb
mov
aam
daa
xor
imul
cwtl
in
mov
or
dec
in
xor
clc
and
test
xchg
call
adc
call
std
es
negl
pop
xchg
mov
sbb
pop
pushf
imul
dec
xchg
in
mov
lods
adc
mov
jle
es
push
push
fsubl
in
cmp
mov
popf
jmp
jb
jae
mov
pop
mov
mov
cmp
sub
add
and
push
ja
ss
xor
aam
fwait
stos
dec
into
loope
in
cld
lret
aas
push
sub
movsb
jno
cli
sub
and
mov
int
mov
mov
cmp
inc
mov
pop
adc
out
dec
xchg
inc
cltd
cmp
ret
cmpsl
push
inc
roll
jl
mov
fwait
jno
or
jp
fstpt
std
push
cmp
stos
cs
mov
subl
gs
les
and
xchg
inc
cmp
push
loope
out
fistl
pop
or
xchg
cmpsb
sbb
or
sub
leave
adc
and
sbb
cmp
stos
popa
jnp
out
add
fs
or
fiaddl
dec
dec
push
add
iret
je
mov
cmpsl
daa
fstpl
test
shll
bound
aad
gs
xchg
adc
add
cmova
sub
or
out
aaa
loop
xor
adc
imul
pop
jle
jmp
jl
stos
iret
add
not
mov
shll
lds
jnp
nop
push
mov
or
sbb
jb
outsl
pop
or
cltd
ja
jae
mov
pop
xor
dec
insl
xchg
inc
iret
imul
inc
test
in
or
pop
fwait
xchg
dec
lock
push
inc
jbe
rorl
mov
mov
dec
xor
dec
xchg
push
inc
mov
sub
sub
adc
cmpsl
out
adc
mov
ret
ljmp
aas
lret
fcomi
in
xchg
adc
pop
cld
cmp
popf
jg
leave
mov
pop
test
inc
lds
ljmp
popa
sbb
pop
adc
jmp
loope
popf
sbb
adc
nop
add
repz
in
mov
xlat
cmp
bound
sahf
and
xor
cmp
out
ljmp
mov
dec
cmp
pop
add
dec
sub
pop
test
rol
fcmove
cmpsl
or
incl
movsb
jle
cltd
pop
or
cmp
loopne
sbb
rorb
fwait
jmp
push
pushf
mov
mov
jmp
lret
pop
and
cli
dec
outsl
sbb
inc
fcompl
leave
inc
js
jle
mov
fstps
ret
dec
movsl
jp
rol
mov
push
ret
test
adc
ret
pop
pop
mov
adc
mov
mov
adc
pop
rcrb
push
mov
mov
mov
fs
xchg
jne
sub
push
iret
cmp
mov
lds
pop
inc
push
int3
push
mov
sub
push
outsl
shr
add
mov
xor
pop
adcb
pop
jl
xchg
add
decl
mov
mov
pop
addl
cmp
push
cmp
adc
xchg
push
popa
xchg
repnz
insb
xor
mov
push
lret
lahf
mov
push
dec
rclb
dec
add
inc
xchg
notl
mov
mov
test
hlt
adc
stc
pushf
push
sbb
xchg
sub
mov
imul
xchg
or
jecxz
pop
and
fadds
shll
jne
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
push
adc
push
movzbl
sbb
push
movl
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
lea
mov
movl
lea
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
mov
sbb
xor
add
mov
xor
or
mov
and
mov
mov
movzbl
adc
mov
add
and
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
call
mov
dec
mov
jmp
mov
movzwl
xor
mov
xor
andl
mov
addl
add
movl
cmp
je
mov
movl
jmp
mov
mov
adc
mov
or
movl
cmp
movl
jne
movl
cmp
movl
jne
movl
push
push
movl
jmp
mov
mov
movl
cmp
jne
movl
cmp
movl
jne
push
push
jmp
mov
mov
cmp
jne
movl
cmp
jne
push
push
jmp
mov
movl
mov
cmp
movl
jne
cmp
jne
movl
push
movl
push
movl
jmp
mov
mov
mov
mov
mov
movl
cmp
movl
jne
cmp
movl
jne
sbbl
mov
or
xor
sbb
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
mov
mov
and
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
xor
mov
add
cmp
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
sub
orl
push
xorl
push
push
orl
lea
push
subl
push
call
movl
cmp
movl
je
subl
push
adcl
push
adcl
call
movl
jmp
andl
mov
addl
push
lea
push
push
push
movl
push
addl
call
imul
cmp
movl
je
xor
movl
jmp
addl
lea
orl
push
addl
push
xorl
call
test
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
push
call
cmpl
jb
mov
mov
mov
sub
add
movl
mov
xor
or
sub
and
lea
or
mov
adcl
lea
andl
mov
inc
mov
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
mov
sub
add
mov
mov
mov
adc
mov
xor
mov
adc
xor
mov
sbb
mov
mov
add
movl
mov
mov
cmp
jne
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
mov
sbbl
xor
add
subl
mov
sbb
mov
xor
addl
add
orl
mov
mov
xor
adcl
add
sbbl
mov
sub
mov
adcl
mov
adcl
mov
orl
mov
not
mov
sbbl
mov
mov
sbbl
mov
mov
subl
mov
movl
andl
mov
addl
xor
add
jmp
orl
lea
push
push
call
movl
cmp
movl
jne
xorl
push
subl
lea
push
push
push
addl
push
decl
call
imul
cmp
jne
sbbl
lea
push
orl
push
addl
call
xorl
test
movl
jne
mov
mov
orl
xor
andl
lea
push
sub
mov
xor
lea
addl
push
adc
mov
pushl
andl
call
mov
neg
mov
xor
lea
adc
mov
add
mov
andl
xor
xor
notl
add
mov
and
mov
xor
movl
lea
movl
mov
cmp
jbe
xor
mov
adc
mov
mov
adc
mov
inc
mov
mov
and
mov
sub
sbbl
xor
xorl
mov
subl
lea
mov
lea
sbbl
mov
lea
push
xorl
push
movl
call
cmp
jne
push
lea
subl
push
orl
push
push
sbbl
push
xorl
call
imul
movl
cmp
movl
jne
lea
push
push
andl
call
sbbl
test
movl
jne
subl
lea
sbbl
push
push
adcl
call
movl
cmp
jne
adcl
push
lea
orl
push
push
decl
push
push
subl
call
imul
movl
cmp
movl
jne
lea
andl
push
addl
push
andl
call
movl
test
jne
andl
lea
push
addl
push
call
movl
cmp
jne
sbbl
push
subl
lea
push
push
push
push
call
andl
imul
cmp
movl
jne
lea
push
negl
push
call
sbbl
test
movl
jne
orl
lea
push
push
sbbl
call
cmp
movl
jne
push
orl
lea
push
push
xorl
push
subl
push
addl
call
addl
imul
movl
cmp
movl
jne
adcl
lea
orl
push
push
call
andl
test
movl
jne
decl
lea
decl
push
orl
push
addl
call
cmp
movl
jne
push
addl
lea
xorl
push
push
subl
push
push
orl
call
andl
imul
movl
cmp
jne
addl
lea
subl
push
sbbl
push
adcl
call
orl
test
jne
andl
lea
xorl
push
push
call
movl
cmp
movl
jne
subl
push
adcl
lea
andl
push
push
subl
push
movl
push
call
incl
imul
cmp
movl
jne
orl
lea
movl
push
adcl
push
andl
call
sbbl
test
movl
jne
subl
lea
addl
push
andl
push
sbbl
call
movl
cmp
movl
jne
orl
push
lea
orl
push
push
push
push
addl
call
xorl
imul
movl
cmp
jne
lea
xorl
push
push
call
test
jne
addl
lea
push
adcl
push
orl
call
movl
cmp
movl
jne
addl
push
lea
xorl
push
push
addl
push
push
xorl
call
xorl
imul
movl
cmp
movl
jne
orl
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
or
mov
mov
not
push
and
mov
xor
adc
mov
andl
push
adc
mov
xorl
add
movl
cmp
movl
je
xor
mov
sbbl
mov
subl
xor
xor
xorl
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
movl
andl
xor
xor
inc
mov
cmpl
jle
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movsbl
mov
sub
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
push
andl
xor
or
inc
mov
cmpl
jl
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
orl
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
push
mov
mov
mov
mov
xor
xor
mov
add
add
imul
mov
jmp
jge
jnp
mov
mov
jmp
lret
xchg
xchg
xchg
addb
addr16
mov
sub
fstps
movsb
jne
repnz
stc
cmp
inc
mov
popa
jb
fdivl
in
cli
mov
mov
and
xchg
xchg
sub
hlt
cwtl
aaa
mov
in
stos
test
sub
jb
lods
movsl
jns
push
mov
int3
mov
cwtl
fsqrt
lods
or
cmc
outsb
in
test
hlt
xchg
jnp
sbbl
and
out
stos
jmp
mov
movb
pop
aam
xor
fimuls
or
andb
xchg
pop
out
cltd
pushf
jo
aam
int3
into
adc
jne
sbbb
insb
sub
scas
fdivr
lcall
lret
js
push
mov
ljmp
loopne
adc
or
pop
cmc
mov
or
nop
and
cmp
xchg
mov
xchg
fs
ds
push
test
mov
int
cs
rcl
jnp
lret
out
in
inc
out
sti
mov
push
push
cmp
adc
rcll
xor
dec
xchg
jl
cmp
mov
clc
fs
bound
roll
sub
in
add
push
xchg
repz
out
sahf
cmp
loop
cmpsl
ljmp
jae
mov
cld
jb
adc
je
xor
imul
jmp
mov
idivl
mov
pop
xlat
orl
sub
dec
pushf
cmp
jnp
push
gs
pop
or
aam
loopne
int3
call
dec
sbb
pop
jb
popa
and
outsb
es
push
sub
adc
inc
pushf
mov
sub
sbb
jae
sbb
or
aam
sti
adc
insl
mov
jne
idiv
xor
shl
stc
jae
test
sarb
int
pop
push
cwtl
arpl
mov
dec
mov
or
cld
dec
roll
sti
lcall
mov
ret
dec
shlb
les
sub
subl
dec
ss
mov
xlat
push
je
dec
aas
in
mov
dec
outsb
push
mov
fists
shlb
or
cmc
mov
jno
cmp
mov
or
icebp
insb
imul
shlb
mov
mull
push
not
fstl
push
mov
pop
and
daa
arpl
or
xor
int
popf
cmp
mov
sub
pop
pop
jae
xchg
push
push
sbb
xchg
popa
push
mov
sbb
mov
jl
dec
ret
add
mov
int3
rcr
xchg
cltd
popa
push
inc
cmp
mov
stos
xchg
subl
xchg
jmp
jge
imul
dec
mov
subl
inc
cld
pop
ss
dec
mov
sbb
jo
push
or
filds
loope
std
sbb
dec
addb
addr16
sbb
mov
pusha
cmp
outsl
mov
xchg
sahf
mov
pop
jno
push
in
shll
xor
push
jnp
enter
push
adc
ror
or
mov
pop
adc
xorl
test
adc
ss
mov
push
lods
xchg
lcall
test
pop
subl
sahf
cltd
jmp
cmpsl
or
jns
pop
mov
ljmp
lahf
cltd
imul
jmp
roll
das
dec
lock
aad
mov
mov
push
push
jl
inc
movsl
cmp
repnz
sbb
jns
repnz
adc
fcmovnbe
pop
fcomi
pop
lret
sub
sub
in
push
outsb
sbb
and
mov
xchg
insb
aad
inc
fistpll
aad
je
lret
in
pop
push
test
icebp
cs
aas
dec
repz
dec
cltd
dec
mov
or
xor
xorb
fstpt
out
cwtl
ror
int3
icebp
fistps
loop
stc
push
les
test
xchg
mov
xor
inc
scas
lret
adc
push
pop
adc
into
jne
mov
mov
pop
inc
ret
dec
sbb
fcmovu
add
call
arpl
mov
xor
mov
pop
sti
fs
out
ja
fwait
out
add
mov
inc
dec
pop
mov
mov
fistps
inc
sarb
les
js
sub
jge
push
cmc
imul
sub
fdivs
mov
push
ja
lods
loope
leave
gs
push
sbb
xchg
mov
loop
lret
cmp
and
jne
into
fdivl
fcmovu
jb
cld
ds
dec
fiadds
sbb
popa
xchg
imul
xchg
jnp
and
lahf
mov
dec
leave
push
adc
cltd
lret
shrb
and
cltd
aam
dec
scas
push
arpl
dec
pop
sarb
xchg
or
stc
inc
sub
xor
lock
or
fwait
cltd
xor
and
adc
sbb
outsl
imul
addl
or
cmp
pop
jno
dec
jne
mov
xchg
shl
dec
fdivl
mov
pop
idivl
fs
lret
push
xor
and
adc
jp
in
mov
or
cmc
mov
js
xor
sbb
in
loopne
arpl
aad
mov
xor
push
inc
lret
mov
adc
and
xchg
pop
adc
fisttpl
mov
jge
out
xlat
jl
add
push
popf
xor
push
pop
leave
mov
in
loope
movsl
mul
jne
xchg
jb
push
jl
stc
inc
mov
and
test
push
add
leave
dec
pop
cmpl
repnz
mov
jge
sub
jmp
lahf
fidivrs
fsubrs
lods
or
dec
in
mov
mov
mov
xchg
sbb
push
icebp
mov
cs
xchg
mov
imul
push
and
cmc
xchg
add
ror
cmpl
addb
pop
cmp
jmp
jnp
fisttpll
push
jo
lcall
cmp
rclb
lods
loopne
add
cmpsl
dec
clc
jnp
enter
jne
dec
inc
jae
popa
add
mov
jne
cli
and
sbb
jmp
push
andb
stos
enter
push
mov
mov
cmp
sahf
out
and
leave
nop
push
int3
pop
aas
mov
test
mov
mov
sbb
leave
push
mov
push
incl
scas
pop
pop
and
rorl
lahf
pop
push
pop
mov
aaa
inc
cmp
dec
fisttpl
mov
and
xor
sbb
jmp
movsl
bound
cmp
push
jg
rolb
sbbb
sbb
dec
sub
adc
add
cli
mov
mov
jmp
ret
stc
mov
xlat
ds
jne
cmpsl
je
jecxz
cmp
inc
outsb
push
mov
std
push
lock
xchg
sar
iret
test
cmp
fdivrs
lret
out
push
push
xchg
mov
mov
pop
sbb
fnstsw
cmpsb
cs
mov
movsl
sti
mov
or
repnz
fwait
pushf
adc
xchg
xor
leave
push
sbb
adc
sbb
mov
aam
add
push
aad
iret
add
or
push
push
test
bound
repz
ror
push
jns
pop
dec
daa
fsubl
lock
xlat
jne,pt
sbb
xor
jp
push
cs
inc
xchg
mov
jecxz
add
jbe
jg
rol
or
xchg
test
mov
in
push
sub
jg
or
loop
or
cmpsb
cwtl
ljmp
cmp
cwtl
inc
inc
inc
aad
call
xor
das
dec
lock
in
pusha
sarl
jne
repnz
pop
pop
sbb
jmp
out
cmp
mov
ja
mov
lret
fwait
push
push
push
loopne
ret
aam
loop
adc
jp
sti
call
addr16
jo
mov
dec
dec
divb
add
and
clc
stos
dec
stos
push
and
shrl
lahf
xchg
dec
push
adc
stos
jmp
push
jno
and
mov
inc
push
test
jb
repz
jbe
pop
das
inc
imul
or
xor
stc
cmpsb
mov
cmpsb
jne
aaa
repz
xchg
repnz
adc
cltd
push
dec
adc
mov
pop
sub
jno
lret
rcrl
movsl
cmp
flds
ja
sbb
scas
ficompl
adc
add
movsl
sbb
sbb
mov
fldenv
ja
jecxz
mov
pop
jle
hlt
xchg
dec
sub
xor
sub
xchg
xlat
and
imul
inc
dec
cs
mov
add
rcrl
sub
addr16
push
fsts
ficompl
lock
add
adc
ret
push
rcr
outsb
stos
dec
mov
nop
xor
sbb
fsubr
leave
pop
xchg
push
dec
xor
jle
scas
movsb
or
gs
pop
outsl
hlt
cmc
push
push
push
cmp
cmc
mov
cmp
enter
mov
std
adc
xchg
das
in
stc
sbb
mov
xchg
gs
jnp
fs
in
add
push
es
push
sbb
jecxz
fstpt
in
mov
cmp
cwtl
mov
mov
dec
push
stos
iret
pusha
pop
daa
dec
xchg
sbb
adc
fdivl
inc
cmp
add
xor
repz
stc
popa
inc
out
outsb
dec
sar
dec
arpl
mov
adc
mov
jge
xor
add
arpl
bound
rolb
mov
xacquire
xor
dec
sbb
inc
sbb
push
ja
sbb
pop
int3
and
push
xchg
xchg
outsl
movsl
addr16
xchg
leave
xrelease
jg
pushf
outsl
sub
jne
cmp
movsl
in
jecxz
dec
xchg
rol
jb
mov
mov
add
pop
mov
mov
es
jmp
pop
ljmp
xor
adc
jns
cmp
sbb
adcb
js
fstl
or
mov
pushf
add
cld
inc
push
adcb
inc
jmp
push
ja
xchg
add
cmpsl
bnd
mov
pop
lods
stc
imul
and
aam
lods
cmp
pop
aad
aam
mov
into
fiaddl
jbe
adc
pop
lcall
cld
xchg
jp
dec
incl
cmp
mov
clc
cmp
daa
lar
or
imul
xor
dec
jnp
add
ret
imul
pop
xchg
mov
adc
or
dec
push
pop
dec
xlat
and
sbb
adc
dec
fsubl
jb
cltd
nop
mov
fistl
and
jae
dec
out
jg
imul
xor
inc
pop
movsb
and
out
inc
jbe
add
roll
sbb
mov
mov
shll
rorl
faddl
mov
movsl
gs
loopne
dec
mov
xor
mov
add
mov
jg
scas
int
mov
push
xchg
imul
xor
ss
out
jl
rorb
xor
dec
jge
mov
add
test
rcrl
xchg
cmpsb
test
xor
xchg
addr16
daa
mov
scas
int3
adc
push
mov
je
mov
fwait
out
mov
aas
mov
xchg
int
ss
sti
fcmovne
icebp
jle
das
aaa
jo
pop
mov
jmp
ljmp
clc
dec
xchg
xchg
xchg
sbb
aad
ret
test
dec
pop
pop
mov
insl
repz
std
lock
pop
dec
jb
pop
push
mov
lahf
repnz
push
inc
sbb
push
pop
outsb
mov
inc
sbb
push
push
lea
repnz
xor
add
pop
adc
daa
je
xor
fiadds
or
pop
and
divl
mov
push
arpl
push
pushf
adc
std
out
pop
cmp
shrl
js
bound
or
jp
das
cs
pop
sahf
fstl
cld
jge
inc
mov
sub
clc
push
sub
jecxz
dec
fmul
test
sbb
jg
out
loopne
mov
mov
hlt
imul
xchg
push
and
roll
mov
adc
mov
mov
shll
jb
aas
push
mov
or
inc
stos
or
cli
jbe
jp
inc
pop
hlt
scas
aaa
inc
je
sub
or
ljmp
or
add
pop
jp
pop
sub
pop
push
adc
fstpt
enter
jp
bound
in
inc
test
adc
xor
pop
inc
bound
mov
or
adc
xor
xchg
add
jp
fnsave
pop
xor
mov
fdivrp
in
cld
aas
pop
dec
nop
push
push
lea
cmpsb
in
mov
movsl
dec
mov
mov
das
or
int
xchg
or
jbe
add
dec
mov
xchg
das
std
out
std
enter
loopne
xor
jno
jns
xor
or
enter
pop
loope
aad
inc
cmp
mov
iret
sbb
push
gs
lret
and
xor
mov
insl
xchg
mov
popf
pop
mov
popa
outsb
test
das
shrb
inc
ret
cltd
lds
fwait
cmp
scas
jmp
jno
or
mov
inc
mov
in
test
fwait
or
pop
mov
pslld
rorl
orb
jo
jle
pop
sbb
pop
fst
mov
xchg
xorl
push
mov
pop
fwait
les
add
sbb
test
cmp
hlt
fdivl
xor
outsb
xchg
lea
imul
aaa
mov
cmpb
rcrb
jbe
inc
in
mov
out
out
mov
and
adcl
imul
popa
push
cmp
test
xchg
dec
mov
or
loop
inc
dec
fcoml
frstor
adc
insl
pop
xchg
aam
jbe
arpl
cmp
push
lock
xchg
inc
in
add
push
arpl
repz
push
mov
push
xchg
adc
mov
add
jns
jne
andl
sbbb
lds
mov
pop
push
fcoml
loope
sti
push
loop
push
addr16
inc
and
mov
outsb
jno
bound
scas
pop
daa
lea
mov
jmp
or
je
add
shrb
and
inc
pop
rcrb
push
push
aad
or
pop
shlb
aaa
mov
or
mov
ljmp
clc
cmpsb
pusha
jne
stos
into
dec
and
mov
stos
push
neg
in
dec
cs
xchg
repnz
pop
movsl
mov
test
mov
fst
jl
test
int3
ret
shll
ja
sbb
call
xlat
adc
adc
xor
xor
insl
rcll
jl
in
cs
or
lods
divl
adc
fidivl
pop
imulb
or
aas
pop
data16
mov
pop
push
add
or
aam
sub
xor
add
add
rorl
cmp
dec
or
inc
push
ja
icebp
cmpsb
add
es
pop
sarl
cmp
dec
or
in
outsb
and
cs
cmp
dec
jns
push
mov
out
ja
xchg
idivb
lret
lea
popf
inc
pop
fdiv
ss
test
adc
cltd
jg
js
cmp
sbb
adc
dec
pop
inc
lea
and
clc
dec
gs
in
movsb
popa
mov
or
jns
cmpsb
adc
ljmp
fisttps
int
dec
scas
outsl
fsubr
adc
in
rcrl
sti
imulb
push
ficomps
mov
push
sub
decl
addr16
arpl
icebp
inc
pop
fimull
pushf
fmul
loope
frstor
sbb
mov
mov
cld
add
mov
addr16
cld
aaa
icebp
and
loop
push
or
ljmp
in
sub
mov
or
push
or
cmp
dec
jbe
mov
jl
loopne
adc
xchg
imulb
fdivs
insl
fisttpll
jo
dec
push
mov
sbbl
cli
and
fs
xor
aam
jnp
enter
int
push
xchg
int3
shrb
pop
mov
dec
or
add
mov
test
push
in
pop
imul
ss
cmp
in
aas
test
pop
dec
ss
sub
jge
mov
mov
pusha
fsub
jge
push
cmpsl
mov
cmp
xor
add
lods
mov
xor
inc
inc
mov
jle
js
mov
push
movsl
shlb
mov
rcr
inc
add
clc
or
jne
dec
fisttpll
lcall
dec
call
or
cltd
xchg
imul
sbb
jns
sub
push
mov
in
loope
mov
iret
sub
insl
int
cwtl
push
rcrb
cmp
or
cld
dec
sarl
push
mov
out
js
sbb
push
fwait
and
or
pusha
xchg
dec
xchg
xchg
jnp
test
test
test
rep
push
push
inc
fsubrl
mov
and
fs
push
fucomi
adcb
ja
and
cmpsl
aas
inc
and
mov
cs
and
mov
enter
leave
fbld
in
inc
das
inc
jl
mov
xchg
mov
adc
cmp
sahf
mov
arpl
jbe
jp
rorl
sub
cld
push
enter
pushf
sub
dec
enter
xor
fisubrs
sbb
mov
lea
mov
mov
popf
or
sbb
notb
lock
inc
adc
mov
jg
or
sbb
mov
mov
push
inc
fstpl
fadds
dec
loop
inc
mov
pop
or
mulb
cmpb
insb
sbb
popf
popf
jl
ret
lock
div
mov
loopne
adc
dec
add
or
fwait
bound
test
lock
mov
into
xlat
push
sub
push
iret
pusha
mov
es
mov
cmp
mov
xor
jb
xchg
inc
xor
push
shlb
fsubp
add
sbb
fcomip
fstpt
int
shll
in
daa
cmpsl
and
arpl
jbe,pt
sub
adc
addr16
pop
std
inc
rcll
jl
imul
imul
rclb
inc
in
pop
iret
mov
dec
jecxz
pop
inc
jl
mov
fmuls
aad
test
push
lea
sbb
les
mov
insl
and
mov
imul
frstor
jmp
ja
add
mov
xchg
test
xor
mov
xchg
xor
xchg
push
cmpb
sbb
test
lea
cmp
dec
bound
dec
std
pop
cld
mov
adcl
icebp
in
cmp
fcmovbe
push
dec
jnp
lea
push
bound
clc
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
int3
cmp
dec
add
add
add
add
add
add
pop
add
and
add
add
add
inc
push
movsl
sbb
inc
mov
mov
add
inc
cmp
jae
inc
imul
inc
imul
outsb
jae
fs
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
add
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
cmp
sbb
add
jmp
jmp
ja
mov
pop
test
mov
imul
sbb
test
scas
popf
or
mov
fwait
les
sets
mov
popf
fwait
mov
stos
mov
mov
ja
mov
mov
sbb
test
mov
mov
xchg
test
push
and
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
add
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
