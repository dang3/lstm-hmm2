push
mov
sub
sbb
mov
push
mov
adc
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
call
jmp
mov
movl
cmpl
je
cmpl
ja
jmp
pushl
push
push
push
call
mov
dec
mov
jmp
xor
sbbl
mov
andl
add
mov
sbb
mov
mov
movl
cmpl
je
cmpl
jb
jmp
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
xor
or
mov
sbb
mov
sub
mov
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
push
push
push
call
jmp
mov
sub
movl
movl
mov
dec
xor
xorl
add
addl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jle
jmp
call
jmp
mov
mov
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
push
pushl
call
mov
dec
mov
jmp
mov
sub
mov
push
xor
xor
xor
pop
orl
sub
addl
add
movzbl
xor
movl
mov
movl
addl
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
pushl
pushl
call
jmp
mov
xorl
mov
mov
sbbl
xor
add
mov
orl
lea
mov
mov
incl
xor
sbbl
add
orl
mov
subl
lea
push
neg
mov
subl
xor
add
push
mov
push
movl
pushl
call
xor
add
and
mov
mov
mov
mov
mov
sub
sub
movl
mov
mov
xorl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
movzwl
sbb
movl
mov
mov
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
sub
not
mov
movl
movl
mov
mov
movl
mov
movl
cmp
movl
je
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
xor
xor
orl
lea
xor
mov
xor
div
sub
mov
mov
sbbl
xor
xor
sub
cmp
movl
jne
add
mov
add
mov
mov
xorl
mov
addl
xor
xor
add
xorl
add
mov
cmp
jae
lea
movl
cmpl
je
cmpl
jg
jmp
pushl
push
call
mov
dec
mov
jmp
mov
xor
mov
xor
add
movl
lea
movl
mov
not
mov
movl
cmp
movl
jbe
addl
addl
movl
jmp
addl
addl
sub
mov
xorl
xor
decl
inc
sbbl
incl
addl
add
cmp
movl
jb
notl
mov
xor
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
jmp
and
daa
lea
repz
incb
pop
jp
and
daa
cmp
jno
jne
pushl
push
inc
rcr
std
insb
push
imul
jl
gs
pop
dec
cmp
cli
xchg
xchg
jg
mov
sub
jbe
cli
arpl
jmp
xchg
and
mov
rolb
imul
ss
or
imul
pop
adc
addb
add
jae
movsb
pop
mov
add
fisubrl
bound
iret
mov
xchg
insl
lock
bound
add
test
fcoml
data16
bound
add
sbb
ret
or
dec
xor
out
movsb
pop
push
sub
push
adc
push
adc
loopne
adc
loopne
mov
cltd
mov
lds
pop
inc
in
testl
mov
inc
fistl
cmpsb
mov
lods
arpl
into
sbb
push
push
mov
push
jp
cmp
cmp
bound
inc
pop
jne
push
jp
loope,pn
inc
adc
push
inc
jno
jne
sbb
shr
and
sbb
js
mov
out
cli
imul
test
mov
lcall
xchg
into
push
jle
in
push
push
jp
mov
and
xchg
aad
mov
and
inc
cwtl
xchg
sub
add
inc
int
inc
fldcw
mov
xor
insb
fiaddl
xor
arpl
addr16
out
pop
inc
rorb
add
and
add
inc
pop
sbbb
es
insb
inc
cmp
outsb
sbb
jmp
ffree
jne
mov
das
mov
rclb
adc
jno
xchg
pop
testb
adc
in
xor
pop
push
out
int
jb
icebp
xlat
xor
movsl
pop
daa
push
repz
sahf
ret
sti
mov
xor
repz
mov
jb
outsl
lods
ret
fs
push
int3
roll
jb
pop
xor
icebp
out
sub
jb
mov
pop
divl
test
cld
push
aaa
mov
xchg
mov
lods
dec
inc
int3
cltd
ljmp
lods
push
cmp
popl
pop
push
arpl
mov
outsl
or
xor
xlat
pop
ret
cltd
xchg
xor
aad
pop
fs
sub
bound
enter
add
push
mov
xor
sbb
and
adc
rcr
jo
sub
pop
inc
jl
inc
leave
loop
dec
adc
or
mov
xor
dec
dec
mov
mov
lret
out
lock
data16
loope
xor
xor
mov
adc
push
push
inc
pop
jge
cld
fcomi
je
fst
pop
xor
mov
mov
in
rcrl
mov
loope
mov
rol
fcompl
push
dec
cltd
inc
push
sub
adc
and
fdivr
adc
ss
or
sub
daa
popf
dec
jnp
pop
rcrb
push
loop
xor
adc
dec
dec
lret
subb
mov
adc
je
test
adcl
pop
out
leave
ljmp
xchg
push
out
xchg
mov
imul
gs
sub
jl
lcall
fisttps
jno
shlb
shld
mov
push
pop
jmp
out
scas
jnp
cld
ljmp
xor
or
ficoml
and
mov
mov
xchg
cmp
aas
jno
add
or
adc
repnz
lret
pop
sub
push
sub
ds
andb
adc
dec
scas
mov
or
jbe
dec
sbb
in
mov
inc
inc
fidivs
stos
mov
stos
lds
inc
mov
mov
mov
adc
push
mov
inc
mull
andb
push
inc
xlat
hlt
pop
push
adc
fsubrl
jno
aaa
jnp,pn
xor
lret
fadds
enter
imul
les
sub
in
push
jne
outsl
dec
lea
push
xchg
addr16
nop
dec
jae
push
fdivrs
or
lods
imul
mov
js
xor
lcall
xor
es
jno
inc
and
andl
and
jp
aam
jp
ret
or
shlb
lret
mov
sbb
out
xchg
xchg
sbb
mov
daa
xor
mov
movsb
cmpsl
lea
loope
es
nop
fs
jmp
and
xchg
and
inc
mov
sbb
js
fs
jns
jl
daa
or
aas
rcll
mov
push
lock
fdivs
pusha
add
mov
jl
arpl
pop
mov
loop
in
std
push
pop
rclb
push
sub
imul
movb
jb
jl
mov
fisttpl
cmc
cmpb
add
adcl
add
test
jecxz
mov
dec
jmp
dec
xchg
jnp
push
mov
call
andl
mov
jge
fwait
imul
js
or
sbb
cmpsb
push
sub
push
push
push
xchg
scas
in
out
mov
mov
test
or
imul
xor
push
jae
adc
push
lcall
stos
mov
cltd
bound
add
or
divb
inc
pop
add
icebp
add
outsb
jbe
icebp
xchg
icebp
out
nop
mov
pop
xor
mov
int3
je
mov
dec
into
adc
test
addr16
mov
mov
push
ret
sbb
push
xchg
pop
fldenv
mov
mov
adc
mov
mov
cltd
inc
jbe
outsl
fdivl
sbb
inc
enter
pusha
cltd
and
repnz
mov
cwtl
out
daa
jnp
jbe
lret
or
mov
pop
pop
sbb
rorb
in
fdivs
sti
lea
adc
int3
test
push
dec
pop
jbe
sub
loope
adc
jl
xchg
into
dec
xchg
add
dec
nop
scas
push
loopne
cmp
push
dec
add
jne
lods
out
sub
adc
sbb
and
test
add
lock
push
movsb
aaa
mov
out
js
fdivl
mov
mov
sub
add
sub
sbb
lea
jo
mov
test
lods
adc
leave
lret
incb
sti
leave
outsb
das
jl
push
dec
in
inc
cmpsl
ds
lds
aam
ret
inc
push
sub
and
adc
mov
and
scas
lock
arpl
imulb
add
sub
xchg
imulb
cmp
push
pop
mov
sub
dec
loopne
xchg
adc
loopne
idivb
cmp
sar
jg
outsb
cmp
xchg
aad
inc
aam
in
sub
cmc
divb
imul
or
scas
and
xchg
and
rcll
sub
xor
xchg
iret
inc
test
cmp
mov
mov
sub
pop
pop
push
lahf
inc
and
lcall
and
faddl
jge
pop
outsb
dec
dec
cltd
add
ret
sub
push
cltd
outsb
jge
cmc
add
loope
adc
stos
adc
je
push
xor
jge
jae
insl
frstor
cmove
je
xor
insb
mov
jp
inc
pop
jmp
adc
and
push
addr16
pop
das
cli
xchg
test
push
rcr
movsl
mov
sbb
stc
mov
andb
stos
jno
inc
daa
fnstenv
push
lcall
fucomp
je
test
adc
inc
in
dec
dec
xchg
jbe
gs
push
pop
inc
das
test
ljmp
insb
outsl
cmp
or
jle
cmp
rolb
mov
jecxz
imul
popa
ja
add
outsb
mov
mov
rolb
ret
sbb
fwait
add
mov
add
pop
add
mov
fisubl
out
sub
dec
jg
insb
popa
xor
sub
int3
sbbb
pop
lods
push
pop
je
xorb
dec
or
pop
femms
bound
or
loope
add
arpl
xchg
cld
mov
mov
pop
sbb
dec
or
gs
das
pop
push
adc
mov
nop
adc
cltd
addr16
mov
adc
aam
addl
push
int3
jl
push
cmc
push
inc
lods
mov
inc
shrl
cmp
inc
dec
and
jp
push
je
fisubrs
enter
jp
ror
adc
cmp
sbb
imul
sbb
adc
test
or
test
jl
gs
adc
push
or
repnz
jmp
scas
or
sbb
cli
dec
cwtl
cmc
mov
fstpl
movsb
repz
xchg
or
cmpsb
dec
pushf
mov
movsl
mov
sub
xchg
and
cld
and
neg
jmp
jle
sub
adc
test
lret
incl
jnp
xor
push
sbb
mov
or
dec
mov
cmp
inc
arpl
and
test
std
adc
popa
sbb
insl
shr
out
aaa
dec
xchg
out
and
cs
leave
dec
mov
rcll
mov
mov
sbb
mov
sbb
bswap
jbe
movl
add
cmp
mov
bnd
jmp
sub
data16
dec
jne
sub
in
jg
sbb
pop
popa
or
sbb
fistl
int3
pop
dec
push
mov
jp
call
cmp
div
lds
pop
and
mov
mov
fdivp
jle
cmp
je
mov
jg
jbe
or
xor
call
and
test
jg
jns
jp
cmpsl
out
repnz
mov
and
mov
pop
in
xchg
mov
add
jp
sar
repnz
lea
push
psubd
insb
fs
pop
add
cmp
add
adc
cmpsl
mov
pop
out
insb
mov
popl
negl
mov
jge
lods
push
jo
jl
cmp
cmp
push
cwtl
mov
lods
out
test
xor
jns
movsl
cld
dec
lock
lock
jne
push
mov
xchg
or
mov
add
fsub
pop
orb
out
aas
imul
or
mov
inc
ret
xchg
fisttpll
xchg
mov
jne
je
faddp
repnz
push
mov
pop
in
fbld
dec
adcl
out
push
sahf
data16
call
loopne
dec
xchg
jmp
push
xchg
test
pop
mov
fs
enter
jg
lcall
cmp
mov
cltd
das
push
and
push
cwtl
add
dec
clc
mov
push
cmp
sbb
xchg
lods
lods
int3
sbb
push
cltd
cwtl
stc
mov
push
mov
insb
push
imul
int
mov
out
in
cltd
push
lea
pop
je
jmp
hlt
ret
in
daa
sbb
subb
loopne
lret
bound
push
movsb
popa
mov
push
mov
jnp
call
xchg
sbb
leave
or
jge
pop
cmp
jno
div
jp
jae
pop
data16
jae
sub
mov
mov
xor
and
cs
jp
push
lret
pop
cs
and
push
ret
dec
out
cmpsl
jne
sbb
lds
pop
jp
hlt
mov
loopne
imul
xor
hlt
addr16
mov
cmp
andb
xor
ja
mov
mov
sbb
and
test
and
outsl
xchg
or
jmp
or
jle
popa
jl
ss
pop
cmp
add
mov
pop
mov
or
hlt
xchg
pusha
int3
je
push
cmpsb
test
push
mov
repz
aas
stos
sarl
mov
add
sub
je
lret
pop
mov
sbbl
ja
out
sbb
pop
sbb
push
sub
mov
out
mov
cmp
mul
in
lods
stos
ret
push
stc
sub
repz
mov
push
sbb
jg
call
popf
sbb
enter
in
in
jo
clc
push
in
movsb
xor
mov
cs
mov
sub
xchg
outsb
sbb
ds
sbb
ficomps
adc
leave
inc
aas
xchg
push
inc
xchg
cmpsb
in
jp
adc
inc
int
fnstcw
mov
push
lcall
pop
popf
andb
lea
push
adc
mov
cmp
xchg
cmp
fimuls
int3
addr16
xchg
xchg
insl
jbe
pop
pop
cmp
sbbl
inc
xchg
js
outsl
cwtl
pop
and
mov
mov
out
int
add
idivl
mov
pop
xor
adc
push
iret
jae
dec
mov
pop
movsb
subl
xchg
lcall
xchg
lahf
xchg
mov
ljmp
test
ja
in
mov
pushf
ljmp
fcmovnb
gs
das
arpl
test
pop
in
nop
dec
mov
bound
xor
cmp
cmpb
and
pop
rorb
mov
stos
xor
mov
nop
dec
pop
pop
mov
jp
and
outsb
jns
pop
dec
out
jge
int3
es
in
lret
mov
push
cli
test
lret
div
xchg
push
xchg
push
add
jmp
sbb
gs
shr
cmp
fdivrl
cmpb
pop
xlat
fs
jae
es
out
mov
sbb
push
inc
dec
xor
aas
lcall
ret
or
stos
nop
idiv
xor
and
lds
add
ds
enter
sbb
test
pushl
mov
jmp
incl
xor
test
inc
loop
cwtl
sub
pop
jne
mov
fwait
outsl
bound
push
mov
dec
fs
dec
or
lret
ja
test
neg
mov
push
xlat
sub
cmp
addb
emms
subb
xor
fsubrl
adc
xchg
movsl
mov
enter
iret
ds
mov
daa
mov
mov
es
pop
cmp
mov
push
jns
fwait
lods
lret
add
or
xchg
ret
stos
sbb
and
mul
mov
pop
adc
lock
push
and
dec
mov
ljmp
xor
lods
dec
sub
in
jns
loopne
shlb
cmpsb
xchg
cmp
mov
gs
dec
leave
mov
sahf
add
mov
inc
dec
xchg
push
pop
addl
add
test
dec
sub
or
pop
mov
call
std
mov
shlb
jne
or
cmc
lods
mov
mov
clc
orl
dec
xor
jle
add
sub
inc
loopne
pop
cli
imul
jl
js
idiv
pop
cmpsl
pop
jp
mov
fsts
popa
addr16
mov
insb
sub
lcall
fwait
dec
into
mov
mov
pop
cs
loop
rcrb
neg
stos
or
push
imul
pop
shll
mov
mov
insb
cs
ss
sub
add
mov
dec
sbb
adc
add
mov
and
cmp
std
les
pusha
fdivl
es
fdivr
inc
xchg
nop
mov
mov
pop
aaa
ljmp
inc
les
inc
sbb
mov
sbb
mov
push
push
or
jae
add
sub
inc
stos
fsubrs
sub
mov
out
lods
adc
mov
popa
ss
and
loopne
and
mov
inc
and
and
adc
pusha
sub
fmull
jnp
mov
mov
mov
in
in
stos
ss
pop
gs
cmp
inc
pusha
sti
dec
xor
sub
imul
lahf
je
call
or
inc
adc
lea
stc
fstpt
jo
mov
testb
xchg
push
adc
sbb
add
adc
popf
lahf
arpl
fistpll
cltd
adc
mov
sbb
cltd
sbb
push
sub
scas
mov
or
pop
dec
fsubrl
dec
or
sahf
sbb
lcall
push
cmc
mov
dec
xchg
push
test
shlb
jo
imul
jl
inc
inc
loope
mov
mov
xor
inc
stos
jbe
mov
push
stos
cld
inc
sbb
faddl
test
and
or
jnp
mov
jne
add
and
out
sbb
xchg
fmuls
lock
movsl
jno
loope
retw
imull
mov
in
push
mov
or
mov
imul
lahf
adc
push
xchg
inc
sub
mov
jecxz
scas
push
dec
cmp
mov
mov
push
add
mov
imul
into
out
ljmp
dec
push
push
outsb
cmpsl
sub
mov
mov
incb
xor
movsb
out
inc
fwait
loopne
or
pop
mov
xchg
test
sbb
xchg
xchg
mov
test
inc
ret
mov
jg
scas
std
or
clc
int
test
push
dec
insl
out
sbbl
jbe
mov
push
or
mov
scas
mov
push
pop
inc
inc
sti
lret
mov
jnp
pop
xchg
insb
dec
or
cwtl
cmp
cmpsb
lahf
cltd
fdivs
cli
add
push
andl
fmull
or
or
push
inc
std
cmp
push
jo
sahf
orl
scas
add
sub
ljmp
sub
insb
pop
push
nop
or
inc
fldenv
or
and
xor
in
push
pop
loopne
adc
xor
inc
cmpsl
outsl
sti
add
dec
sbb
std
outsb
adc
pusha
push
adc
fidivrl
in
scas
dec
pushf
std
fdivrp
fwait
mov
es
aad
xchg
pop
fs
call
sbb
and
outsl
xlat
adc
jp
enter
pushf
sub
lea
stos
idivl
sti
mov
aas
sbb
loope
mov
fsub
negl
sbb
out
inc
mov
fidivrs
cwtl
cmp
ss
jne
or
pushf
rcr
jecxz
fwait
mov
sbb
lods
add
push
xchg
js
ret
insl
sbb
ss
push
jbe
adc
nop
dec
daa
or
outsb
cmp
inc
pop
jbe
enter
lds
jae
stos
rcrl
push
inc
pop
jmp
push
mov
mov
mov
or
stos
push
mov
ds
ret
jno
aam
out
rcll
mov
fs
mov
out
jbe
aam
jne
jne
xchg
or
daa
cwtl
pop
and
xchg
bound
xchg
pop
arpl
lret
int
push
sub
jmp
mov
xchg
push
cmp
inc
jg
loopne
push
in
pop
mov
push
mov
repnz
cs
jo
dec
lret
add
not
mov
mov
movsb
xchg
xor
mov
jno
lea
imul
adc
push
ret
push
sbb
push
dec
test
xor
mov
and
test
dec
jb
jp
aam
pop
xor
cmp
jae
lahf
popf
push
negb
loope
adc
ret
pop
repz
mov
int3
xor
pop
cmpsb
sbb
adc
js
dec
add
mov
xchg
inc
mov
imul
sbb
clc
movsl
pop
cmp
jge
cwtl
mov
mov
iret
lock
mov
mov
aaa
xchg
clc
push
imul
into
retw
mov
sti
ret
mov
push
xor
xor
in
cmp
movsb
adc
jmp
dec
lahf
jae
imul
push
adc
addr16
ret
outsb
push
imul
loop
or
sbb
test
ret
dec
mov
sahf
test
sbb
xor
mov
loop
sub
out
pusha
jnp
xor
in
mov
arpl
rep
xchg
mov
movsl
mov
cwtl
jns
shrl
int3
jb
xorl
inc
popf
std
in
push
add
push
jecxz
out
push
aas
jbe
mov
jl
jo
cmp
mov
fsubrs
pop
mov
mov
sub
cltd
fwait
adc
mov
mov
xor
shlb
cmp
dec
cmp
cmp
or
cmpsl
cmp
leave
cmp
mov
or
xchg
add
sbb
call
scas
cs
mov
jmp
std
jp
mov
lds
push
js
or
mov
jmp
or
pop
les
push
lret
xchg
jne
icebp
push
clc
pop
dec
jne
movsl
push
mov
leave
lods
adc
pop
leave
sbb
daa
lret
addr16
push
cmpsb
mov
arpl
in
sahf
push
push
mov
ret
xchg
into
lods
mov
rorb
push
mov
in
xchg
xor
and
outsb
dec
leave
jecxz
xlat
lds
mov
mov
push
sbb
dec
mov
rorl
jp
pushf
imul
sbb
test
aas
mov
fiadds
push
and
repnz
fwait
adc
cmp
inc
imul
and
in
sti
ret
jnp
mov
jl
or
xchg
ret
dec
sub
xor
sbb
adc
sti
in
pop
pop
scas
mov
loope
or
mov
sbb
mov
sbbb
insl
movsl
push
lahf
add
in
sub
adc
adc
icebp
sbb
cmp
sbb
mov
test
pop
xchg
cs
mov
aas
ss
in
fsubs
dec
lods
mov
aas
insl
mov
jo
xor
stos
inc
push
inc
add
aas
nop
or
sbb
lock
in
std
pop
adcl
daa
xor
mov
sub
dec
sbb
shr
mov
fldcw
ja
std
pusha
inc
psraw
ss
movsb
pusha
fwait
adc
or
inc
in
popf
mov
sub
fisubs
fiaddl
inc
sub
adc
mov
clc
test
mov
sbb
push
dec
stc
ljmp
test
or
out
xor
divb
sub
inc
pushf
mov
and
mov
mov
test
sub
and
int3
inc
xchg
imul
pop
stos
gs
insl
sub
fcmovnbe
add
mov
arpl
int3
cmc
add
fmull
add
push
cltd
ss
mov
xor
push
mov
lahf
out
in
pop
aaa
ss
sub
lret
inc
jae
jp
fisubs
lret
aam
fsubr
lcall
ss
mov
int3
pop
xchg
popa
lock
daa
or
mov
out
xlat
fs
stc
mov
push
testb
imul
cmovb
outsb
imul
or
pusha
and
ret
cld
repnz
aas
mov
pop
xchg
lea
frstor
jne
adc
push
adc
mov
jecxz
outsb
adc
test
dec
pop
push
cs
pop
add
or
lret
call
cmpsb
test
popl
xchg
add
xchg
into
pop
sbb
push
sbb
scas
je
pop
add
jae
hlt
jb
enter
jle
in
jg
int3
pop
lcall
sahf
aad
cwtl
mov
repz
xor
fst
cld
ds
ror
fdivr
mov
popa
and
mov
test
out
mov
pushf
stc
sbb
cltd
mov
imul
fcomps
pop
inc
popa
stos
inc
test
pushf
push
and
int3
je
scas
cmp
jbe
cld
cmp
dec
lods
mov
sti
int
cmp
hlt
hlt
push
mov
push
call
add
loope
in
and
neg
in
add
and
subb
mov
cli
and
sbbb
test
enter
jge
sbb
std
xor
movsl
pop
imul
scas
ja
mov
in
aad
add
test
mov
es
arpl
sbb
sbb
push
mov
dec
push
sbb
cwtl
mov
inc
arpl
mov
jo
push
popf
into
sub
cmp
push
in
loope,pt
mov
js
cmpsl
and
scas
adc
pop
xor
outsl
dec
inc
test
mov
sub
stos
int3
xchg
jbe
out
xchg
xor
sbb
mov
add
inc
aaa
jl
sahf
jb
inc
mov
aas
sub
mov
push
enter
mov
jb
adc
popf
shr
fsubrl
movsl
push
in
cli
push
push
in
mov
repz
inc
xor
jp
xchg
jns
sub
in
jmp
daa
int3
push
outsl
and
sbb
sbb
dec
cmp
xor
or
xchg
jle
stos
and
fcoms
rcr
add
mov
xor
mov
cmp
dec
sub
jl
pop
adc
sbb
xchg
repz
fsubrp
rcrb
or
sahf
dec
pop
lret
push
mov
imul
sub
cli
clc
push
sub
adc
cmp
or
xchg
jno
jae
pop
jae
out
scas
aaa
rorl
addr16
pop
cltd
lea
fstl
pop
lahf
nop
das
push
repz
jb
cmp
ljmp
inc
push
adc
les
mov
pop
jg
pop
add
dec
xlat
rorl
mov
sub
jg
mov
mov
decl
idivl
repz
aaa
sbb
jmp
sbb
iret
xchg
push
and
push
dec
imul
mov
cmp
mov
jo
jge
loopne
jne
push
mov
addr16
insb
jne
or
imul
jecxz
scas
push
mov
mov
jmp
js
daa
icebp
or
int3
push
xor
cmp
movsb
fisttpll
es
cwtl
leave
int3
sub
dec
ljmp
and
insl
add
fld
pop
mov
jne
mov
aaa
push
decl
shll
out
add
pop
imul
and
mov
push
xchg
push
xchg
xchg
jecxz
mov
testb
inc
dec
or
pusha
divb
jmp
adcl
pop
adc
mov
ficompl
xor
or
sbb
add
jge
xchg
add
xor
psubq
push
dec
mov
insl
mov
xchg
and
pop
in
in
add
add
mov
das
inc
pop
nop
xchg
scas
pushf
add
inc
leave
pop
mov
jno
out
cltd
imul
ficoms
sub
add
pop
push
xchg
pushf
pop
cwtl
ret
std
cmp
lds
push
sbb
jnp
add
or
pop
ret
ss
xchg
sub
testb
cmpsb
push
call
jecxz
rcr
mov
mov
imul
push
sub
xchg
mov
xchg
mov
outsl
dec
xchg
xor
cld
dec
or
jecxz
stos
shll
cmp
dec
aas
pop
push
fs
fs
fisttps
xor
sarb
icebp
push
popa
push
scas
jo
sbb
out
test
cltd
lret
and
or
fstpt
mov
mov
in
test
jle
cmp
rcrl
jb
add
mov
jg
jecxz
jge
test
cmp
mov
ja
loop
test
lods
jecxz
mov
bound
lods
pushf
add
pop
insl
xchg
inc
dec
adc
pop
bnd
bound
addr16
aaa
mov
cs
cmp
mov
icebp
daa
sub
mov
mov
xor
add
or
mov
test
xchg
loope
jg
jns
insb
jmp
push
xchg
mov
sub
or
movsl
int3
loope
xchg
inc
xchg
and
mov
pop
out
dec
and
mov
nop
or
pop
sub
jl
loop
push
mov
adc
je
sbb
pop
or
loop
mov
js
and
jns
notb
jl
adc
jae
mov
jg
sbb
jae
mov
in
sub
cmc
ljmp
pop
loopne
test
mov
ja
fwait
push
scas
ret
int
add
call
les
mov
repz
int3
call
jecxz
sub
filds
fimuls
add
push
add
aam
mov
xor
dec
lahf
mov
inc
es
ret
jecxz
stc
pop
inc
ret
test
aaa
fstpt
stc
ja
sub
sbb
mov
aas
adc
push
or
mov
cs
movl
xchg
mov
rorl
loopne
jb
adc
nop
and
lds
stc
adc
add
add
ds
repnz
gs
icebp
test
addr16
mov
loope
fwait
adc
insb
mov
or
mov
stos
ffree
outsb
testb
xor
add
inc
mov
test
mov
lcall
add
rcr
pop
push
adc
movsl
js
dec
adc
stc
add
adc
mov
pusha
popf
mov
bound
dec
and
cmp
dec
pop
roll
xchg
xchg
push
xlat
inc
daa
xor
lret
push
dec
sbb
xor
shlb
popf
je
nop
pop
sub
divb
jmp
mov
push
loop
mov
jmp
xor
fwait
js
int3
push
pop
push
sbb
scas
or
popa
stc
mov
mov
sub
out
out
add
rolb
sahf
test
test
mov
clc
push
mov
leave
in
push
pop
xchg
bound
pop
insb
lock
sahf
mov
inc
in
cmpsl
gs
xchg
test
add
jbe
xor
jp
mov
loop
cmp
daa
xchg
xlat
lret
shlb
mov
sbb
push
pushf
loopne
fcompl
inc
mov
out
cld
test
xchg
xchg
dec
mov
sbb
mov
enter
insl
in
adc
not
inc
dec
adc
cmp
test
inc
loop
enter
jne
sti
inc
cli
add
test
cmpsb
xchg
xor
mov
stos
sub
ret
std
push
jle
lret
movl
add
xchg
mov
push
add
jns
push
mov
or
mov
outsl
aad
push
xchg
mov
xor
and
pushf
out
arpl
mov
adc
test
cli
mov
fisubrs
mov
dec
jecxz
jb
inc
cs
add
push
or
cmp
adc
cmp
jmp
adc
andb
add
pop
rcr
or
jmp
lret
or
pop
insl
test
iret
lahf
outsl
pop
add
dec
loopne
mov
lea
pop
mov
stc
and
pop
clc
mov
mov
mov
xor
add
jmp
scas
pushf
and
add
test
rcll
das
pop
jp
das
pop
jp
mov
pop
movsl
and
inc
sbb
cs
jp
jl
lods
add
popf
mov
xchg
cmp
xor
and
jmp
lock
movsl
inc
dec
adc
in
pop
ds
pushf
js
pop
lret
cmpl
and
inc
mov
aam
fst
mov
cmpsb
mov
xchg
repz
push
xor
nop
mov
mov
xor
std
inc
lea
subb
sahf
cmp
gs
jl
insl
hlt
cmp
sub
push
out
dec
rol
add
xor
push
or
jmp
push
mov
in
data16
add
jmp
ret
testl
out
mov
mov
dec
movsl
pop
mov
mov
mov
dec
psubsw
adc
nop
mov
inc
int3
sub
mov
fidivrl
xchg
sub
add
cmp
inc
pop
movsb
dec
cld
jmp
pushf
fcmovnu
adc
clc
mov
cmp
mov
les
dec
int3
movsb
mov
mov
add
dec
insl
mov
in
inc
fnstenv
jb
push
iret
outsl
cmp
mov
jl
imul
inc
and
ret
out
out
mov
loopne
sub
dec
ljmp
insb
add
jecxz
xchg
cs
icebp
addr16
push
xor
xchg
jp
ds
loopne
xor
fwait
adc
out
daa
cwtl
sbb
sbb
xchg
or
inc
xchg
xchg
sub
jp
nop
aam
arpl
adc
dec
inc
and
sarb
jnp
xchg
cmp
dec
insb
and
or
inc
xchg
add
loope
stos
insb
decb
and
fiadds
aas
pop
or
aad
push
mov
mov
adc
sbb
cld
mov
jmp
scas
mov
test
inc
lcall
mov
xchg
les
shl
sahf
dec
shl
paddusw
cmpb
lds
or
jge
mov
or
dec
loope
mov
xor
cmpb
and
adc
cltd
mov
aaa
sbbl
mov
insb
mov
inc
mov
mov
or
and
std
mov
dec
addr16
lahf
xchg
push
sbb
mov
lret
add
sub
sub
js
and
int3
xchg
sbbl
cwtl
xor
xchg
mov
insl
xor
iret
jle
cmc
addr16
jecxz
ret
mov
mov
jmp
pop
mov
scas
adc
jns
xor
cli
mov
mov
lahf
dec
scas
or
fwait
jmp
and
or
clc
dec
fcoms
jecxz
or
movsl
popa
adc
pusha
mov
loopne
ja
and
lods
cmp
cmp
xchg
popf
ss
loopne
cmp
shrb
mov
outsl
lods
or
lahf
aam
mov
lods
int3
movsl
mov
stc
xchg
xchg
lods
gs
inc
mov
and
cld
icebp
fwait
push
inc
mov
inc
add
and
xchg
mov
stos
out
mov
jecxz
imul
push
xchg
ss
pusha
arpl
cltd
jae
add
xchg
out
test
stos
push
push
enter
cmp
or
pop
add
sbb
adc
xchg
and
ret
or
push
xchg
push
test
loope
pop
shll
xchg
dec
out
pushf
clc
enter
out
into
inc
mov
dec
insb
xchg
ret
ss
popf
and
test
xor
rcll
arpl
dec
dec
adc
mov
jno
mov
popf
aas
cld
popa
faddl
js
sub
and
pop
mov
mov
jg
dec
xor
cmp
xor
dec
mov
icebp
out
mov
pop
sbb
negb
adc
test
mov
inc
mov
mov
loope
shll
pop
cmpsb
and
outsb
arpl
ss
push
jnp
ds
in
icebp
inc
inc
jno
fstl
incb
js
mov
push
push
out
dec
out
cld
lds
fadds
push
aas
mov
sub
pop
outsl
dec
xchg
push
xchg
adc
sub
repnz
lods
or
mov
les
fdivs
daa
cmp
push
push
popw
inc
cld
jg
xchg
enter
xchg
loopne
dec
repz
and
xchg
mov
sti
int
mov
adcb
test
jae
cmpsb
jle
adc
mov
jne
lret
push
int
cmpsl
es
lods
and
js
lea
jmp
mov
jae
mov
mov
negb
mov
sub
popf
jp
dec
testl
pop
and
adc
out
jge
sub
sub
mov
adc
lods
cmpsb
adc
add
ret
xor
xchg
sbb
pop
aaa
xchg
shrl
adc
jo
xorb
mov
test
popf
adcb
ficoml
jge
or
jge
rorb
inc
nop
push
dec
sbb
mov
rcrb
lcall
pop
jg
sbb
xor
xchg
rcrb
cmp
lahf
mov
fucomi
je
sub
pushw
pop
out
test
lret
xchg
pop
rcrl
jmp
cwtl
mov
dec
data16
fistl
sbb
adc
push
lea
mov
in
negb
push
lods
pop
ss
sbb
outsl
jecxz
std
or
ss
gs
imul
negl
mov
stos
mov
sbb
fmull
jo
mov
ret
sarl
pusha
push
or
inc
adc
inc
add
jnp
js
nop
cmp
subl
adc
loope
mov
or
test
mov
iret
cltd
inc
and
adc
cmpsl
out
cld
rcrl
and
test
and
hlt
scas
call
add
sub
xchg
hlt
dec
movb
adc
xor
sbb
ja
sub
add
xchg
inc
js
mov
mov
inc
cmp
test
sub
imul
movsl
mov
int3
insl
inc
mov
mov
in
vmulps
movsb
xchg
jnp
and
cmp
xlat
jbe
addl
mov
lods
mov
sub
and
sarb
pop
shll
ret
mov
aam
and
orl
push
mov
cmp
xor
xchg
mov
insb
jg
bound
mov
pop
cmp
stc
inc
ds
mov
sub
psrld
nop
cmpsb
je
leave
fabs
mov
ret
and
out
repz
scas
push
nop
mov
mov
adc
int3
lcall
dec
push
je
dec
pop
mov
xlat
rcrl
inc
stos
repnz
adc
les
fsubs
stc
insl
sub
int
inc
xchg
dec
fwait
push
push
fstl
jmp
call
push
ljmp
subb
inc
sbb
cmp
cltd
and
fwait
jg
xchg
push
push
outsl
sbb
jecxz
imul
rolb
pop
call
pushf
dec
pop
add
lods
xor
scas
jge
mov
pop
mov
jecxz
mov
daa
jno
enter
mov
inc
xchg
pop
cli
add
into
fs
pop
jnp
fucom
call
int
sub
jbe
cmp
into
jns
xchg
push
jl
mov
push
int3
cmp
clc
pusha
push
movsl
outsb
mov
clc
adc
pop
sbbl
mov
cmc
sarb
aam
cwtl
ljmp
mov
xchg
adc
out
or
fildll
mov
scas
lahf
test
dec
daa
and
inc
add
push
shll
mov
cld
xchg
into
mov
ds
dec
out
mov
mov
aas
sub
daa
jbe
sbb
jae
inc
out
push
dec
xor
add
mov
add
jg
sbb
popa
divb
into
sbb
stos
rolb
rcrb
arpl
mov
mov
negb
mov
in
push
and
insb
push
pusha
jmp
cmp
mov
sub
adc
es
jle
dec
push
pushf
jge
jle
jb
mov
and
cmp
add
ret
or
xchg
add
test
mov
mov
int
xor
or
pop
add
ss
stos
lahf
inc
xchg
push
jp
cmp
cmp
mov
push
or
test
lods
aad
jae
jne
xchg
pusha
out
sbb
xchg
fwait
aam
pop
ljmp
imul
mov
addr16
dec
dec
insl
mov
add
addb
xchg
insl
orl
gs
daa
xor
and
inc
xorb
ficomps
bound
dec
iret
repnz
pop
lret
mov
and
loopne
inc
xchg
addr16
mov
dec
pop
lods
sbbl
les
lea
fwait
divl
or
add
cmpsl
xchg
arpl
add
iret
xor
repz
out
pop
nop
xchg
adc
jo
mov
bound
or
fidivrs
pop
cmp
or
push
aas
int
lret
fiaddl
sbb
mov
or
add
push
xchg
pop
mov
or
movsl
ja
cwtl
fdivrl
fstpl
enter
and
js
xchg
push
fisubs
arpl
test
lock
dec
adc
push
sub
in
sti
leave
add
loopne
pop
jne
bound
imul
and
xor
push
js
sbb
inc
adc
sbb
xor
xchg
xchg
jle
mov
out
rcrb
int
outsl
jb
cwtl
rclb
out
bound
mov
gs
shll
cmpsb
mov
imul
xchg
sub
inc
nop
jmp
popf
outsb
inc
fcmovbe
fmull
cmpsl
imul
bswap
ret
lock
sbb
dec
or
and
pop
inc
rolw
jp
aaa
xchg
lret
push
fwait
dec
fisubs
dec
inc
fisttpl
dec
out
xor
rorb
adc
sub
scas
je
sbb
sbb
or
lret
lods
notl
movsl
mov
das
movsb
sub
enter
repz
dec
jge
mov
jno
loope
nop
inc
add
mov
add
loope
mov
and
cmpsb
gs
in
ficompl
imul
popf
in
ret
inc
mov
repnz
cmpsb
mov
int3
pop
scas
pop
jecxz
mov
inc
mov
outsl
mov
lcall
push
ret
jecxz
into
inc
fwait
and
xor
imul
ja
mov
outsl
fldcw
adc
aad
jle
popa
sbb
outsb
pop
int3
push
xchg
cli
call
xchg
pop
repz
lds
fistl
xor
pop
clc
push
jno
data16
jl
cmpsb
lds
loopne
addr16
stc
xor
cltd
push
fistl
push
adc
aas
subb
inc
ja
out
int3
lahf
pop
inc
xchg
out
sbb
push
mov
xorb
rcll
xchg
rorl
xchg
jbe
pushf
enter
loope
arpl
sub
dec
in
mov
orb
xchg
push
insl
mov
lods
or
loopne
mov
xchg
push
loope
jmp
xor
xchg
add
clc
jmp
aad
loope
mov
sarb
enter
add
pop
sbb
mov
mov
sub
cmp
fisubrl
dec
pop
xlat
ud1
push
xchg
loop
jne
mov
in
mov
test
cltd
out
sub
adc
loop
inc
ljmp
inc
scas
inc
adc
cmpsb
adc
insb
pusha
push
sti
or
jnp
dec
xor
sar
stc
enter
ss
xchg
lcall
push
stc
stc
sti
fisubl
rolb
mov
sub
cs
sbb
in
std
repnz
stos
aas
add
adc
mov
loop
pop
and
mov
inc
mov
jnp
dec
or
leave
xchg
mov
imul
cmp
xchg
cmc
test
inc
adc
sbb
pusha
or
push
xchg
or
wrmsr
je
cmpsb
aad
arpl
mov
sbb
jbe
jns
or
dec
push
jl
jecxz
idivl
hlt
lods
mov
xchg
repnz
enter
sub
inc
xor
mov
sbb
xor
iret
add
dec
push
jp
or
lds
fs
in
or
insb
mov
xor
push
sub
jb
push
and
pop
cs
jns
jb
enter
mov
rcll
das
cmp
xor
loop
push
xchg
fsubrp
inc
xlat
jno
push
sub
std
add
and
sarb
data16
jl
loopne
xchg
test
into
jecxz
sbb
mov
pop
or
jmp
aas
add
sbb
test
jge
popa
fwait
xchg
imul
jb
sub
jo
xchg
pop
inc
out
pop
pop
ficoml
insb
sub
clc
sub
cmp
popa
jle
adcb
stos
inc
xor
andb
mov
fcom
and
pusha
adc
xlat
subb
xchg
dec
jp
jg
pop
lods
loop
inc
xorb
add
and
inc
andb
cmpsl
pop
sbb
sub
and
shlb
xchg
fstpl
cwtl
mov
popa
shll
bound
addr16
mull
cmpsl
xor
or
mov
sbb
fs
mov
adc
xchg
inc
and
fcmovb
sub
sbb
dec
fsts
ss
fsubrl
adc
adc
ljmp
dec
cmp
movsb
lcall
outsl
dec
out
add
push
lret
out
fs
mov
lahf
cmp
jne
in
xchg
xorb
sarb
jb
and
popa
lea
int
imul
orb
xor
mov
mov
mov
icebp
mov
pop
jmp
pusha
faddl
mov
data16
jg
out
xchg
jecxz
jecxz
dec
push
lods
repnz
adc
insl
ds
or
push
cwtl
pop
mov
mov
test
test
sub
addl
pop
or
mov
insl
nop
addr16
sbb
or
lds
and
cmpsb
in
mov
lret
xchg
dec
lret
in
stc
iret
stos
mov
mov
lds
push
jmp
cmp
aaa
and
clc
aaa
in
xchg
testl
out
rorl
mov
sbb
inc
jbe
enter
arpl
cmp
pop
xor
adc
add
push
add
xchg
addr16
rclb
addr16
inc
pop
pop
push
testb
cmp
and
xor
imul
adc
cmpsl
ja
sub
jg
xor
gs
mov
shlb
subl
jnp
fcmovne
test
jecxz
jmp
dec
cld
mov
mov
mov
or
xchg
cmc
jl
pop
jb
push
mov
xchg
add
push
inc
subl
add
xor
fstpl
adc
aas
sbb
inc
sbb
aam
jmp
imul
push
inc
mov
add
stc
pop
test
mov
fwait
sub
sbb
xor
and
push
jno
mov
lret
fdivl
movsl
or
push
mov
xor
cmp
sub
rolb
or
subb
jb
mov
es
mov
dec
mov
pop
mov
xchg
ss
hlt
rorl
sbb
cmp
push
cmp
jmp
sahf
iret
int3
add
imul
stc
popf
mov
mov
shl
repnz
cmp
add
es
mov
pop
movsb
scas
pop
jne
mov
nop
and
adc
arpl
shrb
or
test
jle
mov
pop
lea
lret
movsb
mov
dec
jae
inc
mov
cli
jg
push
fcoms
outsl
push
mov
jnp
int
cld
stc
and
dec
and
aas
mov
filds
xorb
lret
shll
decl
push
adc
xchg
fisubl
or
pop
cmp
into
repnz
rclb
rorl
mov
into
xorl
pop
fwait
xlat
xchg
add
push
fldt
cmp
cltd
jp
push
mov
xchg
pop
pop
pop
or
and
or
call
setb
popf
jne
inc
mov
das
sbb
mov
fstpt
push
push
inc
add
sbb
and
inc
int
pop
into
ret
in
mov
push
jmp
add
jp
adc
pop
nop
sub
sub
push
sbb
push
call
fists
jp
xchg
out
jne
out
int3
mov
mov
outsl
les
add
rol
push
scas
lds
daa
shlb
and
hlt
sbb
jle
adc
jbe
popf
jg
int
sbb
loope
cmpsl
test
out
cld
sub
cmp
cmpsl
or
inc
adc
aaa
js
adc
pop
and
cmp
pop
imul
mov
and
jmp
mov
nop
push
mov
cmp
adc
movsl
pop
repnz
sbb
fbld
mov
adc
lock
jmp
add
xor
mov
xchg
gs
gs
dec
adc
icebp
clc
and
sbb
add
mov
dec
ficoml
lcall
add
lock
imul
or
pusha
pop
sbb
clc
push
bound
lret
jp
pop
fstps
mov
mov
mov
cmpsl
pop
mov
ds
and
pop
ret
arpl
dec
xchg
pop
xor
sub
call
out
inc
adc
icebp
jg
push
imul
mov
push
lods
and
scas
or
add
ljmp
fwait
repz
out
pop
cmpsl
pop
push
add
test
pop
mov
pop
sbb
dec
pop
dec
iret
int3
cmpsl
and
pushl
data16
out
add
or
add
dec
in
jge
inc
enter
insb
mov
loopne
mov
mov
icebp
mov
or
pop
mov
push
scas
pop
pop
mov
mov
xchg
mov
jle
mov
lahf
pop
or
xor
out
jbe
filds
jo
stos
fadds
add
mov
xor
pop
jmp
sbb
mulb
pusha
cmp
inc
lds
ja
cmpsl
jl
and
dec
pop
mov
in
in
aam
jecxz
dec
rclb
mov
lahf
sbb
cmc
or
jge
ja
leave
xchg
jae
pop
pop
push
cli
dec
xor
es
test
and
rorl
ret
mov
imul
inc
sbb
dec
lahf
popf
fcoms
aaa
or
sub
insl
dec
leavew
push
jo
enter
decb
clc
fnstcw
xchg
idivl
push
dec
mov
mov
cmp
xor
jl
mov
cmpsl
movsb
mov
inc
stc
js
mov
sub
popf
iret
mov
lea
popf
shl
sti
movsb
cvtdq2ps
inc
jae
lods
lea
dec
fisttps
sub
aam
clc
jmp
add
push
jge
mov
in
popa
push
mov
jmp
in
pop
out
mov
mov
out
imul
test
xchg
arpl
mov
cmpsb
inc
jg
les
cmp
ds
fcmovnb
cli
les
arpl
lock
xorb
jnp
cmp
adcl
iret
scas
scas
jge
xorb
aaa
cli
cmp
arpl
xor
movsb
repz
enter
cwtl
test
mov
fs
inc
pop
dec
andb
dec
add
adc
iret
sbb
sub
push
add
mov
or
loope
lock
mov
cltd
mov
xor
insb
stc
adc
push
outsb
test
mov
sbbl
fsubrs
mov
test
cmpl
mulb
push
inc
scas
sbb
pop
jns
jmp
es
mov
vmread
leave
leave
push
jp
js
inc
roll
les
fisttps
mov
lock
imul
cmp
add
insl
mov
push
mov
imul
mov
int3
leave
pusha
jne
and
aas
mov
adc
push
loopnew
mov
imul
cli
xor
hlt
mov
jg
arpl
xchg
out
push
mov
enter
mov
bound
sbb
sub
mov
jns
fdivrl
cwtl
xor
jl
xorl
push
sarl
xchg
xchg
or
xchg
lret
mov
movsl
lss
xchg
mov
movsb
push
jbe
push
adc
sahf
sahf
and
dec
ret
add
popf
push
add
shlb
pop
mov
neg
add
push
insl
sub
orl
lcall
mulb
sbb
test
xor
shl
or
jnp
jno
dec
push
xor
mov
push
push
mov
test
add
push
stos
push
xor
roll
dec
adc
ss
push
push
push
imul
sbb
sub
test
adc
mov
cmp
shll
ret
add
xchg
dec
movsb
push
xchg
lea
pop
outsl
arpl
lock
xchg
fstp
mov
fs
ljmp
in
and
push
xor
inc
pusha
dec
xor
sahf
pop
jno
add
xchg
sub
or
orl
or
inc
leave
jb
scas
xor
pop
gs
aam
cmp
in
ljmp
or
jp
daa
cmpsb
pop
add
aam
and
inc
scas
or
les
mov
dec
xchg
dec
jge
fyl2xp1
out
lret
ljmp
xchg
mov
and
lret
jno
js
arpl
fidivl
adc
dec
pushf
fstpl
add
mov
inc
arpl
jae
out
pusha
mov
sub
or
and
shll
mov
rorb
or
fistpl
push
cmc
dec
aad
or
das
sbbl
mov
stos
out
cmp
fisubs
fwait
sarl
sub
mov
arpl
pop
add
pop
rorb
xchg
cs
pop
cmpsb
push
cmp
mov
pop
nop
cld
dec
sub
xor
add
pop
test
je
loop
insl
inc
aad
cmp
xchg
push
rcrl
ret
pop
jge
mov
jmp
xor
fcoms
adc
test
mov
xor
sbb
in
xlat
shll
and
sbb
adc
fsubrl
testb
sub
imul
enter
adc
sbb
jne
push
or
fcoml
push
in
cmpsl
rorl
ficompl
in
in
inc
movsb
cmpsb
adcl
js
mov
pop
push
push
pop
scas
jae
out
in
add
ret
outsb
and
inc
subl
ficoml
pop
xchg
pop
fdivrs
push
dec
shrl
in
pusha
mov
stc
or
mov
jbe
mov
mov
rcrb
adc
pop
mov
push
push
aas
call
sti
scas
inc
es
push
ss
or
jo
cmp
xchg
jne
aad
lcall
call
arpl
fsts
sti
cli
out
dec
aad
andb
xor
mov
lods
movsb
xchg
in
pop
jnp
dec
dec
into
push
jbe
add
data16
jno,pn
jae
decb
in
sub
mov
add
dec
adc
shrl
test
and
or
subb
loop
lret
mov
aas
data16
push
xchg
cltd
dec
mov
push
adcb
inc
adc
ss
cmpsb
add
lods
icebp
pop
cmp
jle
xor
xchg
pop
push
test
xchg
jae
out
jns
jge
divb
stos
mov
rolb
pop
sub
pop
pop
inc
mov
mov
xchg
test
and
mov
aam
fwait
push
shr
cmpsl
hlt
adc
pop
jp
aas
inc
fnsave
add
jnp
ret
cltd
scas
cli
sbb
mov
clc
aam
cmc
inc
loop
or
cmp
fs
or
mul
mov
xor
nop
stos
stc
push
in
xchg
jbe
cmp
cltd
jg
push
pushf
mov
mov
inc
cs
pop
daa
insb
jle
jl
jne
outsb
popf
xor
pop
lock
cld
sub
fwait
fstpl
adc
or
and
xor
cmp
xor
dec
adc
sbb
and
sahf
mov
push
dec
mov
jbe
mov
loopne
push
sti
shl
repnz
jo
jno
add
sub
mov
leave
cld
xchg
pop
cmp
clc
sbb
push
inc
movsl
je
sbb
dec
cmp
bsr
cmp
outsb
dec
cmp
orb
lahf
lcall
add
pop
cld
nop
add
repz
push
cmpb
dec
movsb
cld
push
xor
fs
add
sbbl
leave
enter
out
xorb
lret
mov
and
adc
aas
scas
clc
xchg
les
stos
mov
push
xlat
xchg
lea
cld
iret
rclb
jns
or
mov
mov
pushf
dec
push
mov
add
ja
mov
loopne
push
mov
movb
gs
rclb
mov
inc
jo
lret
int
fsub
and
or
inc
addl
ss
std
inc
jns
cmp
iret
ret
xor
xor
shrb
stos
aas
bound
cmp
out
ret
xchg
out
mov
mov
inc
fwait
and
lock
xchg
mov
push
fimull
inc
inc
enter
pop
push
push
int3
mov
sub
sbb
in
test
cmp
jle
xor
imul
icebp
movsl
in
rcr
mov
pop
in
dec
stos
jne
loop
mul
and
into
add
fsub
mov
aaa
jnp
aam
insb
rolb
dec
ljmp
sbb
loop
test
testb
stos
mov
pushf
jb
aam
call
add
loope
scas
jecxz
incb
imul
sti
xchg
dec
insb
das
sbb
xlat
push
stos
enter
sarl
mov
push
movsl
outsb
arpl
in
mov
inc
adc
setae
iret
xchg
and
xor
out
leave
sub
pop
mov
jl
inc
scas
push
push
pop
mov
jle
adc
pop
lret
and
dec
out
xor
push
add
adc
addb
adc
and
xor
or
arpl
adc
test
pop
xor
adc
push
into
and
lret
push
popa
shrl
outsl
mov
outsl
cmp
jge
mov
inc
jno
push
cld
xchg
sub
or
pushw
or
int
pop
in
adc
arpl
jns
cmp
movsb
xchg
sti
dec
divl
xor
fwait
xchg
dec
fadds
xor
hlt
sti
and
lds
mov
jo
mov
sti
mov
mov
insl
dec
pop
xchg
mov
divb
push
add
sarb
inc
sbb
mov
sbb
in
adc
mov
pop
inc
adc
sti
movsl
sub
subb
shlb
punpckhdq
mov
int3
push
push
cli
xchg
out
std
lret
das
or
in
mov
ja
push
imul
fstpt
jmp
imul
push
les
or
mov
lret
xchg
cmp
or
and
enter
jecxz
mov
jg
push
sub
ljmp
andb
arpl
rcrl
idivb
jb
mov
push
lods
push
fisubs
cmc
push
push
push
inc
loop
push
pop
mov
in
push
add
test
movsb
test
mov
push
ficoml
test
call
inc
mov
xchg
mov
sub
aad
clc
in
mov
insl
outsb
push
mov
movsl
xchg
in
or
stos
add
xchg
aaa
pop
cwtl
xchg
mov
lds
sbb
out
sar
jae
lods
in
rcl
aad
push
xor
clc
jp
lcall
sbb
mov
ljmp
jae
cmp
mov
dec
xchg
loop
insb
inc
aas
bound
jno
pushf
cmp
adc
jmp
icebp
clc
jle
or
mov
ja
loopne
mov
pop
in
sbb
sub
push
push
fdivrl
mov
fidivrl
dec
jb
pop
es
int
ds
add
mov
push
cmp
sbb
imul
lea
pusha
xor
outsl
ret
aaa
fstpt
xor
mov
xchg
and
mov
addr16
add
movsl
imul
jl
out
cmp
lods
xchg
adc
aad
mov
les
sub
call
push
adc
fildll
mov
lods
je
push
inc
les
ja
sbb
mov
cld
ljmp
mov
lock
scas
arpl
negl
fucomp
hlt
cmp
or
ljmp
sub
or
sbb
xor
mov
cwtl
xor
mov
test
icebp
xchg
inc
push
mov
fcompl
mov
hlt
movsb
pop
mov
insb
jo
add
jp
dec
mov
ret
bound
bound
sub
mov
adc
xlat
and
lods
xlat
mov
or
sub
mov
adc
outsb
mov
subb
mov
sub
push
adc
str
lods
jge
repnz
sarb
jecxz
add
push
push
sbb
in
cmp
subl
pop
push
cmpl
mov
clc
lret
push
movsl
adc
icebp
sub
sbb
jnp
sti
sbb
adc
jo
stos
mov
add
cmp
sbb
int3
xorl
filds
lret
sbb
scas
cmpsb
dec
add
ret
add
enter
jmp
call
cwtl
loope
dec
xchg
or
fisubrs
imulb
xchg
mov
std
pusha
nop
jb
cmc
enter
adc
sub
jo
jge
jmp
insl
pop
lods
xchg
push
jnp
mov
movsb
loope
lcall
ds
or
adc
repz
adc
or
lcall
rcrl
pop
xor
add
js
mov
daa
cs
lock
inc
push
sti
dec
push
xlat
dec
pop
int
sti
adc
incl
jb
or
add
repz
inc
pop
int3
dec
test
xor
shlb
xchg
std
lods
push
in
rclb
mov
inc
fdivs
jnp
xchg
mov
pop
sbb
jge
stos
insl
int
icebp
mov
scas
in
ljmp
mov
push
popa
imul
jge
mov
or
inc
je
ret
push
out
jmp
mov
inc
and
jae
jne
mov
or
xlat
in
cmp
jbe
mov
aas
movsl
cld
or
dec
push
sub
push
cmpsl
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
jmp
daa
add
in
cmp
push
jl
rcrl
das
pop
jp
mov
jge
mov
mov
jbe
jae
push
sbb
mov
loopne
jne
inc
cmp
cltd
mov
inc
in
push
mov
pop
cmpsl
cld
inc
nop
stc
inc
imul
xor
leave
jno
sbb
pop
jmp
addl
push
fwait
repnz
push
mov
adc
ds
jnp
popf
test
adc
outsb
movsb
into
pop
leave
stc
push
out
xor
or
call
sub
stos
inc
cmpsb
fadd
les
xor
add
xor
xchg
sub
out
pop
add
loop
cs
cli
and
sarb
and
push
in
and
jl
shrb
repz
push
xor
sbb
movl
cmp
or
sbb
inc
xchg
insl
in
pop
cmp
fcoms
sti
out
push
int3
mov
aaa
ljmp
mov
enter
idiv
and
jo
jp
dec
or
stos
ljmp
inc
mov
push
sbb
cld
dec
jge
adc
into
pusha
dec
int
mov
xor
push
pop
hlt
jbe
xor
arpl
aaa
mov
scas
sub
pop
push
pop
add
or
outsb
cmp
mov
add
add
bound
scas
rolb
aas
mov
mov
insl
pop
lea
test
adc
mov
ljmp
jb
sub
cmpsb
test
rcrl
pop
jecxz
fistl
addr16
inc
out
pushf
data16
cmc
add
repnz
jl
lahf
dec
call
xchg
scas
xor
nop
xchg
jne
sbb
div
xor
adc
es
into
filds
insl
aad
mov
push
jo
mov
stc
lods
ja
cli
jecxz
scas
sbb
in
pop
stos
popf
mov
sub
pop
sub
les
xor
add
dec
fbld
push
mov
push
movsl
sbb
je
xchg
leave
enter
fsubrl
outsl
outsl
es
inc
int3
test
leave
in
mov
in
xchg
aas
cmp
xor
or
dec
out
daa
std
daa
or
rclb
inc
enter
in
mov
and
xchg
cmp
mov
rcll
pop
push
pushf
insb
test
ljmp
das
jnp
xchg
jmp
inc
inc
xor
sbb
dec
xor
cmp
cld
das
test
les
jmp
xchg
icebp
rol
cmp
ret
frstor
ret
repz
or
popf
lds
cmp
jg
push
fstpl
loope
sub
xchg
mov
and
mov
mov
fdivr
push
sub
aaa
into
jg
jl
scas
add
adcl
popf
int3
ja
aaa
inc
fsts
repz
js
and
or
cmc
loope
addl
and
mov
or
outsb
push
int3
jae
data16
cmp
xor
adc
sbb
addr16
push
ss
push
into
movsb
mov
cmp
notl
pop
stos
push
mov
sbb
test
cwtl
jae
mov
adc
loope
or
dec
push
jle
xor
scas
pop
fsts
icebp
int3
jae
push
jg
aam
jp
call
pushl
nop
cmc
data16
fs
jno
lods
jg
ljmp
jbe
adc
lret
std
test
sbb
leave
js
enter
clc
jo,pt
enter
push
mov
xor
and
leave
mov
pop
in
sub
lcall
dec
jae
dec
jne
pop
ss
cmpsl
sbb
jl
iret
es
pop
pop
ret
fists
push
out
sti
pushf
xchg
push
mov
fbld
loop
mov
pop
pop
inc
inc
xor
movsb
and
jmp
incl
sti
cmp
into
xor
in
adc
fdiv
leave
test
lret
and
inc
je
sti
shlb
dec
ds
or
js
adcb
push
xchg
mov
ror
jmp
pop
insb
mov
pop
mov
pop
cmc
scas
xchg
xor
popf
jp
out
stc
fptan
or
add
jae
or
loope
push
fdiv
push
fstps
ficoms
sub
sub
cs
mov
aam
jno
loop
add
mov
jns
std
jnp
incb
xchg
mov
dec
leave
jl
pop
cmp
inc
push
xchg
xor
xchg
xchg
test
and
pushf
daa
mov
outsl
jbe
sbbb
in
xlat
dec
mov
lock
jno
sbb
mov
loope
add
adc
sahf
mov
dec
lret
nop
mov
dec
outsl
or
add
incb
jg
in
idivl
mov
es
pop
aam
aad
push
sbb
loope,pn
dec
insb
mov
push
cmp
mov
jmp
rolb
iret
rcrb
iret
adc
into
ret
mov
push
and
mov
and
fnstenv
mov
out
dec
jmp
cmp
rsqrtps
pop
inc
pop
mov
cli
jne
pop
inc
mov
out
or
rcrb
mov
je
mov
mov
mov
subl
imul
and
scas
lds
jnp
ja
mov
and
jle
cwtl
sbb
add
jl
sahf
pop
fdiv
sub
insl
push
mov
jbe
xchg
jo
jo
pop
or
incb
push
decb
test
mov
popa
adc
sbb
add
call
push
cmp
iret
pop
xchg
outsl
cmp
sbb
sbbl
mov
std
divb
jno
ja
add
pushf
out
into
jp
jb
popa
xor
xchg
call
adc
pop
jge
test
lcall
jl
jmp
int
imul
dec
dec
daa
xor
mov
sub
insl
push
ljmp
out
pop
sbb
xchg
hlt
aam
xchg
jl
mov
aam
cld
inc
xorb
sbb
add
mov
arpl
xor
aam
cmpsl
stc
or
test
mov
addb
sub
sub
mov
mov
xchg
insl
into
mov
jmp
call
sub
push
mov
movsl
negl
lcall
lahf
mov
mov
outsl
push
xor
push
rclb
mov
aaa
add
inc
sub
xor
mov
std
dec
inc
jae
jae
in
daa
xor
addb
ljmp
shr
into
je
ljmp
jge
lahf
xchg
ficoml
js
loop
es
jb
mov
push
pusha
std
out
lds
leave
fsubs
xchg
push
push
and
dec
aaa
imul
loop
fdivr
sub
sub
lock
popa
mov
ljmp
adc
pop
fmuls
and
sub
in
mov
push
jno
fdivrp
movsl
nop
ds
rcrb
roll
dec
inc
sub
das
push
mov
in
or
pop
push
into
push
fs
mov
mov
jmp
add
or
cs
mov
in
xchg
mov
mov
std
pop
jp
sub
mov
add
fld
xchg
enter
movsl
xor
inc
out
aaa
mov
xchg
aas
out
pop
jg
jnp
scas
repz
push
cmp
scas
or
xchg
mov
inc
push
js
add
test
int3
filds
fsubr
xor
or
xchg
andl
mov
mov
jmp
nop
or
stos
jl
loop
xor
aas
or
or
dec
outsl
sbb
clc
xchg
cltd
jbe
push
rol
rcr
in
fcmovb
xor
mov
les
ds
sbb
scas
and
fs
push
scas
or
movsl
jl
icebp
jb
sbb
xchg
test
sbb
cmpps
push
loopne
and
outsb
test
aas
sbb
lock
dec
fidivl
mov
add
daa
mov
testl
stc
ficoms
mov
stc
sub
pushf
fucomip
stos
cmp
pusha
movups
inc
movsb
adc
clc
jbe
rcrb
add
leave
xor
fcompl
pushf
pop
sub
ja
jns
sub
and
pop
fwait
pop
lret
mov
gs
sbb
scas
lret
cmp
cld
xor
test
add
lods
outsl
repz
out
mov
sbb
push
jae
mov
or
stc
ds
mov
mov
int3
pop
decb
frstor
pop
scas
mov
pop
mov
lods
icebp
xor
in
mov
hlt
call
cmp
sub
int
xchg
jo
adcb
pop
fisttps
fimuls
xchg
pop
lds
shlb
popf
cmp
push
mov
sahf
hlt
pop
push
or
insb
xor
hlt
insl
ret
adc
cmp
sbb
cltd
sbb
das
cltd
scas
mov
lret
das
xor
dec
movsl
sub
add
ss
sub
ret
sub
lods
dec
mov
mov
stc
xchg
mov
xor
aas
mov
pop
or
jp
outsl
lret
sbb
jns
jge
fnstenv
nop
rol
iret
popf
xor
sbb
repnz
adc
stos
lock
dec
mov
inc
add
movsl
cmc
aad
or
addr16
out
adc
daa
and
in
aaa
mov
in
xchg
data16
out
dec
loope
outsb
xor
dec
pop
pushf
pushf
or
dec
add
mov
adc
add
movsl
test
cmc
mov
dec
jge
add
movsb
or
out
sub
jp
lods
jne
cmc
mov
arpl
popf
stos
pop
and
jl
cmp
cmp
xor
mov
test
mov
fsubl
call
aas
cld
inc
jg
mov
stc
out
popl
inc
add
dec
cltd
pop
scas
sysenter
mov
inc
out
xchg
mov
loope
pop
iret
scas
mov
dec
adc
mov
outsl
out
pop
fiadds
popf
inc
test
mov
and
or
sbb
cmp
jo
adc
mov
outsl
cmp
mov
cs
das
ret
cmp
push
popa
jecxz,pn
sar
inc
lods
cwtl
mov
xlat
test
cmp
push
push
xchg
into
jns
dec
push
lret
rolb
adc
fnstenv
mov
mov
sahf
outsl
adc
ja
inc
int
mov
rorb
jmp
out
sarb
inc
cmp
cmp
out
lret
push
mov
outsl
loopne
and
jno
lds
xchg
dec
testl
cltd
mov
sub
jp
and
push
inc
sub
mov
lods
inc
add
and
or
mov
or
mov
mov
clc
mov
stos
jns
sub
and
pop
mov
movsb
xor
push
scas
ficoms
or
or
xchg
adc
imul
xor
jne
push
xchg
or
adc
and
cmpsl
daa
in
inc
imul
mov
dec
jae
or
push
fisttpll
pop
daa
push
or
mov
mov
or
inc
cmp
test
mov
inc
loop
les
inc
insb
push
mov
cmp
mov
mov
add
sbb
sahf
enter
dec
cmp
nop
mov
mov
mov
sub
arpl
inc
mov
pop
cmp
mov
int3
jmp
test
xchg
dec
cmp
xor
mov
cmp
jae
in
xor
xlat
inc
mov
adc
jno
popf
nop
vpcmpb
stos
out
xchg
push
xchg
orb
hlt
mov
add
jns
fstpt
loop
lds
pop
sbb
adc
jmp
or
lods
add
pop
test
sub
sbb
addr16
lods
mov
jno
adc
add
jl
ret
xchg
das
sub
ror
cmp
adc
in
notl
push
dec
lcall
jp
and
mov
push
int
in
push
std
int3
test
bound
mov
clc
xchg
lahf
sbb
je
mov
mov
xchg
jmp
movsb
divb
pusha
pop
cmp
add
jle
lret
aam
rcrb
jp
xchg
inc
push
jno
pop
dec
xchg
js
push
das
jge
pop
imulb
jge
cltd
js
xor
or
or
js
push
jno
xor
or
int
push
es
adc
mov
test
dec
jp
iret
sahf
and
mov
cmp
flds
stos
ret
lea
dec
es
pop
pushw
inc
orb
icebp
jecxz
jge
sub
mov
enter
cmc
push
lock
nop
jne
mov
enter
data16
add
pop
arpl
movsl
add
lock
or
dec
or
and
jb
call
and
mov
into
shlb
fucomp
call
push
and
sub
mov
mov
dec
outsl
push
mov
mov
xchg
out
int
out
xchg
cmpsl
jmp
pop
fcmovne
dec
pop
icebp
xor
sahf
mov
cmp
or
and
adc
mov
and
dec
mov
lock
push
lods
mov
cmpsb
ja
push
or
jecxz
decb
xchg
xchg
mov
cmp
xchg
push
stos
or
inc
mov
mov
int3
imul
add
push
rclb
mov
ja
in
add
int
mov
jnp
xor
cmpsl
jecxz
das
iret
mov
push
addb
jbe
pop
jmp
ljmp
jno
jle
sahf
xchg
jne
sbb
sbb
pop
lea
clc
pop
push
scas
mov
lock
sub
outsb
jnp
push
ret
mov
jb
push
push
lea
inc
int
and
cli
fstl
cwtl
addb
inc
xchg
adc
and
into
lods
mov
push
or
out
stos
mov
mov
fcompl
push
in
ret
xor
sbb
out
jnp
mov
and
popa
sub
scas
jmp
cwtl
clc
pop
movsb
push
aad
stos
pop
insl
mov
jb
mov
mov
int
subl
loope
xchg
jge
bound
jnp
cwtl
jo
imul
or
xchg
popf
cwtl
hlt
cltd
ss
cmpsl
jg
jl
pop
or
sub
cmp
fcompl
lea
repnz
cs
loopne
push
xchg
divb
cwtl
fldl
hlt
jl
mov
cmc
dec
jo
mov
push
idivl
inc
xchg
push
sub
or
divb
xor
mov
insb
rcll
pop
mov
out
mov
arpl
sbb
sub
mov
mov
aas
loopne
lds
mov
cli
imul
in
imul
push
xor
fcomip
in
je
std
lea
adc
insl
push
outsb
push
adc
lds
jo
mov
jo
dec
mov
out
push
jb
xchg
mov
push
mov
inc
pop
addr16
outsl
sub
and
lds
lcall
push
push
add
or
adcb
je
jge
ficoms
push
mov
or
pop
sahf
mov
ljmp
xchg
or
inc
rorl
stos
add
mov
adc
xchg
and
mov
push
dec
imul
sub
jg
cmp
dec
push
xchg
gs
out
adc
mov
iret
popa
in
movsl
data16
pop
sub
xor
insb
leave
inc
shll
popf
ja
sub
pop
push
dec
in
xchg
int
and
inc
pop
xchg
mov
adc
clc
mov
mov
mov
xchg
jp
mov
jl
push
push
add
imul
adc
jle
lret
cmp
arpl
es
mov
gs
adc
les
cld
push
sar
sbb
add
lret
faddl
xchg
enter
sub
pop
imulb
dec
mov
in
lret
cwtl
mov
add
mulb
mov
add
aad
ja
fsubr
push
inc
push
scas
mov
adc
jmp
xor
lods
shlb
pop
push
push
das
mov
lods
outsb
shll
add
sbb
mov
sbb
pop
test
fmull
ljmp
xchg
adc
ret
ja
stos
sti
push
dec
insl
lods
add
inc
sub
dec
ja
lahf
imul
dec
dec
subb
orl
pusha
das
pop
mov
jnp
enter
xchg
adc
sbb
out
jno
jge
jl
jns
mov
jp
mov
sahf
xchg
stos
jp
or
notl
dec
fldenv
xor
or
negb
push
adc
repnz
inc
repz
pop
mov
imul
loop
lret
adc
hlt
in
dec
gs
sub
jne
cmpsl
mov
jbe
imull
int3
je
neg
scas
stos
sti
xor
call
es
scas
xchg
loope
mov
in
sub
mov
mov
push
in
sub
cltd
jne
int
das
sbb
sbb
or
mov
pop
push
das
mov
shl
jns
sub
pop
clc
add
incl
or
and
out
icebp
xlat
popf
xchg
dec
scas
aam
and
add
or
cs
adc
and
cmp
popf
sbb
push
test
enter
mov
dec
test
in
jle
ficoms
xor
lea
xchg
popa
jbe
push
push
pop
mov
es
and
loopne
in
inc
jne
mov
mov
scas
mov
loop
scas
adc
push
or
pop
push
aas
or
dec
dec
ds
les
lcall
jg
jno
cs
aam
inc
mov
xchg
rep
add
xor
loopne
mov
cmp
mov
jo
imul
mov
xor
mov
pop
and
sub
das
inc
int
das
das
and
jno
mov
fstpt
lcall
out
ret
clc
pop
xlat
push
aaa
inc
and
ds
push
in
ja
mov
icebp
fdivr
ja
nop
lret
arpl
or
add
pop
fstpl
xchg
loop
ret
in
inc
jns
mov
fistpl
jbe
cs
sub
bound
xor
inc
rolb
mov
jae
and
pop
mov
in
pop
call
gs
lock
loopne
or
or
divl
sub
fmull
fdivl
test
or
loope
sub
pop
sub
dec
lods
jle
ja
dec
xlat
push
pop
mov
mov
les
enter
leave
es
inc
dec
cltd
mov
cmpl
jle
xchg
lret
lret
insl
sub
mov
push
bound
cmpl
test
mov
pop
jb
xchg
jecxz
jno
sub
mov
or
push
ljmp
cmc
inc
xlat
repnz
mov
flds
adc
pop
aam
cmpl
lret
sbb
mov
jbe
dec
adc
jns
cmovne
jns
leave
add
lahf
sbb
pop
push
pop
insb
push
sub
push
shll
fs
test
in
imul
jl
xchg
push
negb
inc
fdivrs
and
out
push
sbb
addr16
sbb
jne
call
leave
adc
xor
and
outsb
pop
xor
jecxz
in
in
xchg
adc
sbb
and
iret
adc
jge
inc
iret
clc
repz
data16
pop
pop
jl
mov
cld
fbld
pop
xlat
es
push
divl
ja
out
loop
jne
mov
pop
or
push
jne
cmp
or
mov
fwait
outsb
aam
repz
fsts
fistps
lock
adc
push
in
and
inc
push
add
mov
lahf
out
mov
sbb
out
adcb
push
jae
loopne
push
aas
mov
and
sbb
cmp
xor
ss
call
das
mov
inc
lret
nop
push
add
push
push
ret
pop
pop
dec
cmpsb
jmp
mov
cmp
mov
fisubs
adc
xchg
idivl
or
cmp
leave
daa
pop
jae
lds
pop
sbb
pop
adcl
decb
push
les
cmp
stos
fsts
test
dec
idiv
cmp
mov
mov
mov
jne
cmp
cld
add
rclb
cs
test
lret
push
push
push
lahf
roll
sub
in
es
outsl
fstl
adc
inc
mov
xchg
mov
adc
pusha
hlt
adc
mov
int3
pushf
ficoml
push
clc
jb
rclb
adc
sub
sbb
jl
loope
sub
aam
pop
ret
xchg
inc
push
into
mov
jbe
sbb
stos
jb
push
das
insl
lret
pushf
push
test
sbb
mov
fmul
xor
pop
es
mov
mov
push
test
rorl
jnp
fwait
mov
jmp
cmpsl
jmp
dec
or
xor
xor
scas
or
cld
shll
xor
xchg
jns
push
inc
jb
jmp
mov
scas
ror
or
pop
add
jecxz
mov
mov
push
fistps
test
jle
cld
je
insb
push
rorb
jle
out
xor
orb
test
adc
xor
sub
test
repnz
adc
sbb
sar
dec
cmp
jnp
mov
movsb
add
adc
negb
or
in
iret
xchg
sbb
adc
mov
outsl
pmulhuw
clc
fcmovbe
jno
and
iret
nop
jp
cmp
lret
test
push
push
and
pop
xchg
dec
mov
or
insl
fiadds
add
popf
mov
int3
out
xchg
xchg
jo
ja
sar
fwait
adc
mov
mov
mov
adc
out
mov
divb
push
shlb
push
test
cwtl
imul
das
dec
xor
movsl
push
xor
or
jnp
inc
sub
sub
loopne
nop
inc
xchg
aas
sti
or
les
push
stos
jp
test
leave
xchg
and
incl
test
fstpt
rcll
and
and
push
jbe
cmp
push
sbb
ja
push
lahf
shrl
popf
jnp
mov
loop
xchg
sub
stos
push
shrl
push
jmp
xor
jl
addr16
out
popl
cli
rorl
dec
out
xchg
divl
lcall
cmp
arpl
mov
addr16
jbe
into
pop
mov
in
push
adc
stc
loope
jns
dec
mov
movsl
push
xchg
mov
lds
sti
gs
sub
xlat
mov
arpl
xor
in
mov
loope
xchg
sbb
adc
jb
push
mov
pop
dec
push
pusha
subb
adc
pop
adc
das
jb
xchg
mov
mov
pop
jge
sbb
test
inc
enter
test
mov
xor
stos
sub
jb
sub
outsb
dec
test
mov
jecxz
ljmp
aad
dec
out
out
cmp
push
gs
or
push
loope
push
mov
lods
call
cmp
test
xor
sub
cmp
xor
arpl
movsl
pop
inc
fdivrl
leave
out
mov
insl
dec
push
leave
jmp
adc
insl
out
pop
mov
idivb
push
or
mov
mov
adc
out
xchg
push
or
les
lret
xor
cli
dec
mov
popa
aaa
jle
sahf
lods
xchg
notb
cli
xchg
movsl
sbb
push
inc
mov
mov
outsl
mov
mov
rolb
mov
and
mov
and
ljmp
mov
push
cld
lods
pop
add
jb
enter
jmp
lahf
push
out
mov
xchg
xchg
aas
inc
add
push
dec
jg
or
cltd
add
xchg
mov
xchg
ds
mov
mov
inc
in
repz
sub
sub
adc
fwait
or
mov
sub
das
inc
es
shl
sub
arpl
insb
movsb
pop
or
int
push
in
or
js
dec
dec
mov
pop
inc
subb
dec
dec
jl
mov
loopne
add
loopne
sahf
push
sub
aaa
movsl
push
push
adc
dec
adc
push
xchg
das
xchg
xchg
test
in
std
mov
xlat
sub
lcall
pop
xor
int3
xchg
jno
jo
or
or
inc
add
mov
and
push
or
cmp
sub
cltd
out
dec
rorb
bound
iret
nop
cmp
ljmp
sbb
and
addr16
mov
mov
jne
mov
mov
push
mov
stos
xor
dec
outsb
mov
jp
jecxz
xchg
xchg
pushf
push
add
mov
imul
mov
enter
adc
hlt
or
fmul
ds
cwtl
subb
daa
mov
adc
xor
xlat
js
fiadds
mov
pop
mov
stos
push
inc
test
push
lods
push
ljmp
xchg
sahf
adc
cmp
push
int
sub
xchg
outsl
mov
lret
push
pop
pop
mov
mov
lea
jmp
or
sbb
jecxz
push
in
lds
cmp
and
ds
xor
inc
sti
outsl
xor
dec
pop
ja
pop
adc
lea
into
or
add
cmp
adc
jo
pop
jb
scas
in
fldcw
dec
out
inc
mov
int
inc
and
inc
hlt
adc
push
jmp
jne
pop
mov
jbe
adc
les
push
int3
adcl
inc
push
inc
sbb
stos
xchg
mov
add
sub
inc
sete
adc
in
push
std
fldl
dec
adc
sbb
jns
inc
pushf
stos
jno
jbe
fcomps
fiadds
mov
or
pushf
sbb
or
and
or
xchg
sub
stos
sbb
adc
cs
shl
into
sub
push
mov
inc
sbb
mov
repz
into
sbb
shlb
and
fnstenv
into
bound
out
imul
int3
gs
mov
enter
test
mov
mov
jp
mov
outsl
cld
mov
pop
sti
rorb
push
out
das
fdivs
sti
xchg
xor
mov
or
and
aam
add
add
repnz
add
cmc
inc
enter
add
mov
ljmp
mov
cs
and
out
insl
loop
or
sub
mov
add
add
push
into
notb
cmp
jnp
adc
xlat
add
mov
shlb
push
mov
mov
mov
xchg
sar
or
sbb
cmpsb
cmp
je
inc
mov
jb
add
jns
xchg
mov
mov
ljmp
cltd
test
or
insl
iret
sbb
mov
sbb
rcrb
or
cli
and
les
ficoms
push
or
lds
jno
clc
lret
out
mov
movsl
push
std
leave
popf
les
inc
pop
xchg
bound
in
sub
push
sbb
and
cmp
clc
cltd
sbb
xchg
pop
or
mov
or
sbb
call
addr16
xchg
mov
into
mov
push
pop
lods
inc
inc
aam
pop
jmp
cli
mov
fstps
jl
mov
subb
pop
inc
dec
fnstenv
adc
push
out
mov
mov
testb
lods
push
mov
xor
in
daa
inc
pop
jno
jae
cld
xchg
jmp
jmp
icebp
mov
add
sbbl
mov
lahf
bnd
add
cld
gs
sub
outsl
repz
inc
das
rorl
xor
cld
and
in
lds
mov
movsl
sbb
scas
sub
aam
jno
mov
push
inc
sbb
xor
push
ljmp
aam
jp
in
sub
inc
mov
mov
sar
das
dec
stc
push
fstl
xor
cmpsb
cmc
push
cwtl
dec
push
or
cmpsb
ja
in
int3
sbb
mov
push
sub
cli
insb
xchg
and
test
test
cmc
jno
push
nop
push
aaa
adc
cmp
xchg
or
sahf
push
jne
inc
lahf
mov
loop
xchg
add
insl
cmp
cmp
sbb
jae
xchg
and
std
mov
mov
and
pop
and
push
in
arpl
pop
push
xchg
das
hlt
test
sti
cmp
lods
or
rolb
repz
aaa
xchg
lret
xchg
popf
lcall
pop
sbbl
xor
dec
pop
rclb
and
pop
xchg
cmp
adcb
mov
xchg
xor
fnstenv
pop
jns
xchg
mov
lock
dec
inc
fwait
pop
out
or
inc
dec
push
addr16
mov
mov
mov
fidivs
dec
sti
leave
mov
sbb
es
shlb
nop
cmp
in
rep
mov
fcmovb
add
xchg
mov
sub
lcall
lcall
push
jb
cmp
sarb
adc
adc
js
mov
mov
jne
pop
xchg
inc
mov
adc
or
adc
rclb
imul
sbb
shlb
daa
call
mov
jno
adc
xchg
fildll
mov
fildl
xchg
and
scas
ret
adc
dec
and
lds
xor
stc
xlat
cli
test
cmp
xchg
lcall
jns
out
add
dec
dec
lret
or
push
dec
cmp
jnp
shl
dec
add
testl
pop
vmwrite
push
adc
mov
dec
popl
add
jno
inc
xor
out
mov
fs
lds
mov
ret
testl
dec
mov
fs
inc
out
test
sbb
jbe
or
sbb
mov
arpl
adc
outsb
adc
xchg
stos
mov
loop
sbb
es
mov
mov
dec
outsb
cmp
add
out
mov
adc
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
jmp
mov
in
jnp
mov
pop
xchg
int
incb
pop
jp
test
call
cmp
adc
sbb
lret
out
pop
imul
xchg
and
and
push
loopne
mov
or
mov
jo
in
push
aam
dec
inc
xchg
jne
mov
aaa
sub
xor
mov
push
add
dec
or
out
loopne
push
das
dec
inc
bound
jno
sub
and
pop
repnz
int3
lea
push
ffree
sub
fiadds
call
mov
sti
xchg
sub
movsl
lret
and
pop
fiaddl
xchg
or
loop
in
pop
or
inc
sub
pop
ja
jmp
in
add
adc
sub
cmp
jle
push
cmp
repnz
dec
push
repnz
or
loop
add
mov
add
xchg
aaa
scas
jmp
fisttpll
lods
sbb
push
insb
fsts
imul
push
inc
cmp
mov
fwait
pop
and
inc
in
jg
mov
mov
ret
or
mov
jl
and
add
inc
mov
and
repnz
outsl
push
fdivp
lcall
mov
fstp
movsb
dec
inc
cmp
negl
andl
in
cmc
loope
mov
xor
orl
xchg
cmp
cmp
pop
cmp
in
ffreep
shll
fs
icebp
jl
push
xlat
sahf
xchg
cmp
testl
in
pop
push
pop
pusha
mov
sub
and
adc
add
push
inc
fnsave
sub
hlt
repnz
cmp
out
cmc
inc
cmp
sbb
inc
pop
jns
shlb
mov
sub
in
push
mov
mov
mov
call
cmp
cmp
pop
aad
or
leave
out
mov
sub
mov
mov
sub
jg
dec
ret
mov
aad
aas
jp
out
dec
adc
aam
adc
mov
dec
push
repz
pop
bound
jae
test
cmc
sbb
repz
mov
mov
or
and
or
clc
jb
jp
push
dec
imul
repnz
dec
mov
sub
push
out
mov
cmpsl
xorl
cli
xchg
inc
fwait
orb
and
adc
repz
fdivrs
into
dec
and
lahf
sahf
xlat
jg
mov
sbb
cld
xchg
pusha
data16
or
lahf
dec
mov
dec
xchg
xchg
hlt
dec
pushf
sub
orb
shlb
jno
into
aas
aad
nop
lahf
or
or
orb
adc
mov
jnp
ds
data16
cmp
dec
sbb
mov
xchg
lods
adc
sub
ret
or
adc
jle
or
jle
push
decl
shlb
xor
xchg
adc
test
pop
inc
push
clc
popf
sub
ja
rorb
cmp
xchg
lret
aas
int3
push
test
iret
mov
cmc
fnstsw
or
lock
insl
sbb
inc
je
mov
xor
add
pusha
lret
mov
xchg
popa
mov
aaa
jl
std
les
inc
imul
sub
sbb
cwtl
mov
das
or
outsl
mov
adc
adc
jle
cmc
pop
mov
loope
mov
cmp
out
xchg
jecxz
idiv
sti
sub
inc
add
sbb
jne
lds
stos
popl
div
dec
in
test
mov
inc
adcb
sbb
xchg
subl
pop
xchg
dec
mov
pop
push
xlat
sub
mov
out
cmc
ja
popf
call
lock
aad
fwait
jp
jbe
push
pusha
out
lods
mov
cmp
iret
or
je
nop
cmp
sub
cld
adc
gs
mov
adc
mov
in
jnp
int
enter
dec
subb
jnp
popf
shl
add
daa
ss
repz
inc
repz
or
call
repnz
jne
inc
sub
lret
dec
push
popa
cmp
add
outsb
adcb
adc
ficoms
mov
sub
push
mov
xlat
cmp
mov
and
add
and
mov
jle
xor
and
adc
call
pop
lea
xor
jmp
aas
cs
dec
popf
out
or
scas
inc
push
sbb
pop
imul
data16
imul
xchg
pop
and
lods
xor
cmp
fnstcw
jl
jne
in
pop
jo
sbb
jl
aam
sahf
mov
out
cmpsb
fsubs
xchg
lods
fists
ror
out
shll
and
hlt
mov
and
mov
fs
ror
out
fdivrl
int3
jp
or
xor
or
ljmp
xlat
js
int
adc
xor
cmp
dec
je
sub
nop
add
in
outsb
or
or
dec
jmp
out
subb
inc
ljmp
and
jge
iret
cmp
push
xchg
and
jne
subb
pop
outsb
mov
mov
loopne
popf
xorb
push
mov
cmpsl
inc
cmp
sbb
sub
in
outsl
cmp
das
fdivrp
cs
imul
mov
outsl
or
sbbb
test
fmuls
add
pop
into
push
dec
out
push
ret
das
push
mov
ljmp
shll
andl
std
pop
loop
adc
fwait
adc
push
mov
ja
pop
movsl
leave
and
push
inc
sub
push
sub
xchg
daa
movzwl
or
sub
icebp
shll
pop
mov
xchg
ret
fldt
arpl
out
push
lcall
inc
jmp
negl
adc
cmp
sub
jnp
xor
xor
rcll
cmp
pop
test
push
fdivp
push
pop
hlt
gs
idivb
test
or
iret
mov
adc
sub
adc
jg
cli
mov
std
mov
jp
inc
aam
pop
inc
shlb
std
cmp
in
insl
mov
add
in
arpl
ret
loop
and
imul
int
outsb
loop
xchg
dec
cmpsl
xor
aas
subl
stos
sahf
jno
je
je
fildll
neg
shr
and
sbbl
and
sub
xor
repz
es
add
loope
pop
sub
cmp
mov
adc
mov
test
sar
mov
loop
das
push
test
loop
cld
adc
add
jne
mov
jne
addr16
mov
lock
sahf
push
inc
aad
mov
push
sbb
mov
mov
adc
mov
cmc
mov
es
icebp
ficoms
jge
add
ds
adc
pop
pop
push
sti
xchg
scas
loope
xchg
jmp
movsb
enter
or
ds
inc
lods
std
or
or
lcall
pop
adc
add
adc
mov
in
xor
fisubrs
lods
inc
or
or
aam
sbb
hlt
add
jecxz
das
xchg
pop
cwtl
inc
and
gs
ja
mov
imul
mov
aaa
and
dec
or
jo
ror
xchg
in
push
test
lcall
ret
mov
cmp
dec
es
ficompl
fidivrs
iret
loopne
sbb
movsl
in
lret
addr16
cmp
rcrb
xchg
lods
out
loop
addr16
ficompl
lock
lock
stos
insl
push
popf
mov
jo
mov
or
into
pushaw
clc
xor
mov
xchg
push
imulb
pop
ret
sbb
sbb
or
negb
stc
fst
clc
adc
add
loop
or
lret
and
cmp
mov
outsb
jae
daa
popf
xchg
mov
pop
sub
adc
sahf
xor
out
jl
or
mov
std
aad
adc
insb
xor
imul
loop
pop
in
cmpsb
cmpsl
call
sbb
cmp
fmuls
test
dec
testb
int
cmpsb
fdivrs
sub
in
xor
mov
add
inc
out
push
out
xor
out
sbb
ror
cmp
std
pusha
mov
adcb
adc
cmpsl
push
mov
xorb
addr16
jp
gs
and
fstpt
xor
repnz
test
lret
das
or
xchg
or
imull
pop
xchg
jge
data16
jecxz
stos
dec
fs
push
or
shll
push
enter
mov
mov
cmp
pop
sbb
js
jp
mov
cmp
es
lods
out
and
movsl
mov
push
mov
cmp
je
cmp
mov
jecxz
call
leave
add
xorb
push
aam
jp
jae
xchg
push
fimuls
sub
fnsave
and
adc
subb
mov
sbb
cmc
ljmp
or
adc
imul
dec
mov
add
pop
sti
sub
pop
xchg
inc
jmp
push
mov
fcmove
sub
pop
movsl
cli
or
sub
sbb
mov
inc
out
ficoml
xchg
push
in
cmp
pop
push
mov
fnclex
mov
jne
push
push
bound
push
fmull
jle
mov
shll
jns,pt
lret
jno
mov
scas
std
xchg
out
inc
mov
into
shr
pop
cmp
leave
icebp
pop
addr16
int3
or
xchg
scas
stos
arpl
mov
sub
test
inc
ror
inc
push
enter
ljmp
repnz
xor
mov
pusha
lds
jp
insl
ds
ret
push
jae
mov
or
pop
mov
fnstenv
cmp
inc
push
or
arpl
sbb
int3
sbb
fadds
fcomps
cmp
pop
mov
sub
ljmp
mov
in
pop
adc
setnp
sub
adc
push
pop
in
clc
xchg
ja
dec
clc
jle
insb
dec
loopne
adc
out
xor
xor
and
out
cmp
sahf
arpl
aas
out
aaa
inc
repnz
cld
popf
push
fsubrl
push
lret
lcall
or
out
xchg
aam
ss
mov
ljmp
pop
out
inc
scas
int
xchg
mov
cld
add
popf
cli
int3
roll
mov
out
loope
jb
or
mov
or
mov
icebp
pop
and
jecxz
lds
aaa
mov
cmp
add
test
lods
imul
test
scas
jae
in
lods
xor
cmpsb
std
push
sub
inc
add
mov
push
fldt
ljmp
fdivrl
aas
adc
std
les
es
test
sbb
adc
adc
lahf
mov
mov
push
popf
xor
cld
lahf
add
inc
repz
mov
xor
mov
or
push
cmc
mov
out
mov
std
daa
mov
lods
movsb
int
mov
ss
lock
fsts
cmp
push
xor
push
mov
test
cmpsl
add
outsl
stos
mov
cli
nop
out
push
cmp
cmp
pop
das
mov
daa
ja
cmc
inc
cwtl
xor
inc
lcall
mov
jae
and
clc
mov
js
jmp
popf
jns
rolb
jle
js
loop
cmp
sub
in
mov
ss
mov
jno
ss
dec
add
iret
daa
cmp
cmc
rorb
jmp
inc
add
sti
cmp
scas
sbbl
mov
push
stc
xchg
jle
clc
outsl
sbb
xchg
mov
push
ss
adc
push
mov
push
cmp
jno
pop
xchg
outsl
adc
ja
cmp
xchg
jae
mov
std
les
ds
enter
sbb
and
in
dec
sub
xchg
cltd
dec
push
inc
inc
aad
xchg
scas
xor
xor
dec
insb
mov
lret
mov
bound
aad
and
insl
mov
int3
ret
push
ret
xchg
dec
cmpsb
clc
push
inc
in
js
dec
xchg
stc
popa
outsl
mov
or
push
or
popf
inc
mov
pop
or
gs
xor
and
ret
stos
push
dec
xor
lea
popf
and
pop
into
mov
or
out
negb
stos
pop
sub
cmp
fidivl
mov
dec
mov
jmp
icebp
idivl
js
pusha
fld
xor
jae
xchg
bound
mov
add
je
inc
clc
rolb
push
jb
repnz
insb
popf
mov
aam
jg
xchg
add
pop
mov
mov
sbb
in
sub
jle
and
scas
outsb
lds
mov
data16
popa
add
push
mov
cli
push
cmc
imul
xor
ja
sub
rorl
gs
int
sub
enter
arpl
mov
loopne
aaa
jo
fiaddl
inc
pop
mov
pop
cli
mov
stos
cli
mov
sbb
xchg
pop
mov
leave
jne
int3
dec
push
cmpsb
rcrl
jb
fnstenv
mov
lcall
or
leave
movsl
sbb
into
test
sub
sbb
mov
imul
cmp
push
or
pop
mov
aam
out
clc
jb
or
cmc
mov
shlb
in
cwtl
add
addr16
gs
jnp
sub
push
pop
cwtl
add
ret
jl
les
into
fucomi
cmp
cli
roll
sbb
mov
sub
pop
shl
lds
mov
mov
call
mov
testb
jle
daa
push
cld
push
dec
add
adc
rorb
popf
cmp
xor
bound
repz
or
movsl
pop
inc
push
in
lahf
out
push
mov
dec
fidivrs
xchg
cld
add
call
xchg
aaa
xor
adc
cmp
roll
loop
add
xlat
lock
mov
cwtl
cmp
cmp
fnsave
xchg
and
jg
xor
repz
insl
xchg
clc
xor
cli
fimull
sbb
jecxz
jbe
call
bound
cmpsb
cli
aam
fistpl
lods
or
dec
in
push
push
cli
in
xchg
mov
shlb
lods
xor
jb
orl
addr16
jp
into
mov
cmpsb
sub
xlat
jnp
test
mov
and
scas
mov
das
dec
sub
pop
sub
lock
push
fnstenv
loopne
xor
xor
hlt
dec
addr16
jecxz
jns
adc
add
test
or
inc
or
pop
std
jg
mov
loop
scas
jno
pop
add
ficompl
jnp
mov
adc
out
movsl
daa
ja
movsb
pop
pushf
loope
dec
pop
stos
dec
adc
push
pop
inc
scas
rol
mov
cmp
mov
adc
movsb
add
push
movsb
mov
outsl
sahf
cltd
sub
notb
icebp
cwtl
bound
cmp
lahf
dec
enter
ret
icebp
mov
jmp
mov
das
xchg
rcr
imul
lahf
sbb
std
ret
push
mov
push
xor
outsb
cmp
clc
cltd
daa
pop
inc
ljmp
push
xchg
xor
xchg
jbe
fimuls
inc
cli
dec
lret
add
sub
in
subl
std
push
stos
jnp
xlat
repnz
jle
cmpsb
jae
fiaddl
out
fstps
mov
pop
cmp
shr
xor
repnz
inc
call
faddp
xchg
lods
mov
dec
and
scas
ss
ss
arpl
test
lcall
dec
mov
lcall
mov
lcall
lret
ja
xor
mov
into
inc
insb
dec
stc
add
push
mov
in
and
nop
jecxz
jae
mov
imul
jecxz
es
scas
iret
sarl
in
fisttpl
xchg
xchg
inc
or
push
xchg
out
leave
pushf
sbb
or
inc
mov
mov
pop
add
cli
ja
mov
mov
scas
mov
cmp
inc
roll
in
dec
aam
roll
or
mov
dec
mov
std
adc
dec
fs
mov
jnp
into
sub
dec
mov
jl
icebp
sbb
or
mov
mov
sarl
cmpsb
inc
jmp
push
mov
cld
sbb
lods
ss
cmp
push
and
out
xchg
or
sub
jne
xor
cs
xchg
xor
insl
adcl
pushf
icebp
inc
mov
fs
test
push
divb
push
jle
test
shr
shrl
ret
dec
loope
xchg
mul
cmc
cmp
and
clc
gs
iret
mov
out
cmp
mov
mov
lods
or
pop
push
adc
cmc
dec
push
out
push
inc
jo
push
out
scas
xlat
ret
js
pushf
test
mov
popa
pop
out
cmp
mov
sub
or
rolb
cmp
inc
jmp
aad
mov
xchg
push
mov
test
cmpsl
arpl
call
nop
dec
jns
pop
jnp
in
push
es
cwtl
inc
je
dec
jecxz
cwtl
cmp
fmull
cmp
shll
inc
adc
pop
repz
frstor
fbld
dec
je
sbb
mov
add
cmp
xchg
inc
dec
ds
push
daa
sahf
pop
dec
mov
dec
adc
ja
sub
cmpsl
jle
xchg
pop
lock
ret
inc
jbe
lret
shlb
push
mov
jno
add
test
inc
in
daa
nop
xor
lods
xchg
rcrb
lods
shr
cli
mov
push
lret
lcall
pusha
out
loop
lock
or
push
adc
shll
jl
sub
jns
insb
pop
cmp
out
cmc
push
call
aam
mov
dec
adc
fldcw
negb
xor
mov
mov
sbb
pop
mov
xchg
cmp
adc
cwtl
loop,pn
loop
repnz
mov
inc
xchg
imull
cmp
cmp
aaa
loopne
leave
imulb
lods
mov
push
or
outsl
pop
sub
and
iret
and
lods
pushf
jle
xorl
mov
in
push
add
jns
insl
cmp
mov
jg
js
mov
lcall
dec
push
mov
rcrb
or
mov
pop
sub
inc
lret
data16
into
add
ud1
psubq
xchg
xchg
mov
out
es
pop
fcom
jnp
cld
fidivrs
sahf
adc
and
sub
dec
add
fdivl
fsubs
pop
and
lods
jp
into
insl
loopne
popa
leave
or
int
sarb
push
jns
ja
cmc
negb
mov
les
int3
jno
pop
fcompl
xor
nop
sbb
daa
jo
cltd
add
mov
fnstsw
inc
or
lcall
pushf
jp
inc
mov
push
rorb
ja
or
pushf
mov
insb
mov
xchg
imul
test
push
inc
in
mov
cmp
push
enter
mov
mov
jp
pop
sbb
cli
stc
iret
mov
pushf
cmc
mov
mov
adc
test
or
cmp
fistpl
sbbl
into
mov
ret
mov
push
xor
cltd
sbbb
inc
adc
inc
cmp
ficompl
adcb
jg
in
in
cwtl
stos
mov
dec
push
dec
pusha
dec
shlb
in
mov
cli
or
lea
and
insb
jp
cmp
pop
or
jb
lret
pop
mov
pop
and
aas
insb
in
stc
push
fldenv
clc
pushf
cmp
mov
mov
push
es
push
les
push
push
mov
pop
mov
dec
adc
mov
push
push
ret
xchg
imul
stos
shrl
mov
sub
fimuls
repz
xorb
cltd
test
sahf
adc
les
ret
cmpb
xchg
mov
adc
pushf
push
insb
mov
dec
xchg
stos
out
or
div
dec
gs
popa
into
andb
xor
cmp
je
lods
cwtl
into
in
mov
pop
aad
dec
jo
outsb
out
dec
add
les
adcl
rolb
jne
cmc
mov
xor
sub
mov
fdiv
adcl
int3
leave
fstl
dec
xchg
and
jne
xor
inc
jg
imul
xchg
push
sahf
pop
inc
push
dec
jne
jle
or
add
ret
inc
and
mov
ljmp
jbe
push
fadds
out
into
jns
ret
sub
xchg
jge
aaa
sar
adc
mov
addl
aam
xor
in
in
inc
add
xor
imul
sar
test
test
push
mov
pop
mov
clc
jb
inc
sbb
mov
push
jl
ret
mov
popf
pop
cli
xchg
out
push
pop
ficoms
dec
cld
xlat
shll
inc
mov
outsl
adc
jl
cld
bound
mov
cmp
jl
jmp
xchg
rcr
addr16
rcl
pop
dec
inc
xchg
mov
fwait
dec
cmp
inc
andb
hlt
ss
es
mov
adc
pusha
stc
jle
loope
repnz
xor
popf
insb
sbb
sbb
lcall
or
aad
js
pop
pusha
and
jmp
loop
add
dec
repz
jecxz
stos
mov
mov
mov
ljmp
mov
cmp
lret
xor
addr16
int
subb
mov
into
adc
mov
pop
loop
stos
insl
xor
and
jmp
jge
adc
rcrl
inc
and
xor
mov
pop
pop
sahf
mov
shlb
fistpl
push
pop
and
orl
push
clc
andl
sarb
or
neg
sub
xor
dec
shrl
inc
jp
mov
or
push
imul
sub
jmp
pop
iret
and
loop
test
cmp
adc
test
addr16
pop
cli
jle
jge
sub
in
mov
xor
push
movl
popa
cli
popa
loope
add
dec
fdivl
mov
sbb
dec
pop
sub
adc
and
jmp
dec
ret
pushf
test
rcrl
call
cmp
mov
jle
adc
or
jle
cs
xchg
popa
aam
lds
lods
jne
jns
sbb
xor
sbb
arpl
or
inc
jb
cmp
dec
mov
fistpll
aad
fsubr
mov
repnz
mov
aam
sub
mov
cmpl
loopne
add
pop
aaa
fidivrl
cwtl
sbb
jbe
and
xor
cltd
mov
icebp
inc
mov
leave
stc
adc
or
ljmp
add
push
in
jle
or
push
jp
daa
shrb
push
add
adc
add
cmp
jnp
shr
jl
cmpsb
dec
addr16
mov
data16
cltd
add
stos
js
push
popf
lock
xlat
jge
lret
addr16
stos
cmp
and
iret
sti
fwait
loop
push
pop
sub
sub
fisubrl
popa
jbe
in
mov
mov
inc
sub
vrangesd
mov
rep
mov
mov
in
mov
and
jo
and
xor
aaa
cmp
pushf
lods
adc
test
std
pop
sbb
enter
mov
adc
jmp
lock
pop
mov
pop
lds
shl
jne
cltd
lcall
mov
sub
jno
mov
mov
jnp
sti
xchg
sahf
cmp
lret
inc
xchg
enter
dec
inc
jne
sahf
mov
out
mov
mov
sbb
xchg
outsl
test
repz
jne
cmp
sub
mov
bound
xor
shr
dec
imul
xor
add
orl
push
test
sub
and
int3
aam
jle
cli
in
test
rorb
or
ss
aaa
sub
test
fs
enter
sub
dec
sub
mov
xchg
imul
and
jb
outsb
inc
add
shl
push
add
bound
add
mov
adc
sub
rorb
fidivs
dec
shlb
mov
aas
ljmp
sbb
scas
cld
jno
aad
sub
xchg
mov
xchg
out
mov
dec
xchg
loope
repnz
test
sbb
lods
mov
clc
mov
cs
lods
rorb
stc
in
inc
cmp
mov
jnp
sub
cmpsb
or
rol
mov
movsb
mov
scas
lret
xchg
cld
jp
cmp
lret
sbb
andl
pop
ljmp
dec
jecxz
imul
sahf
pop
mov
imulb
mov
xchg
adc
ret
adcb
mov
push
ds
jno
fwait
clc
idivb
push
out
jge
mov
push
inc
insl
insb
das
add
xchg
fcmove
or
mov
inc
pop
xor
adc
add
pop
or
xchg
lahf
sub
sbb
insb
fidivrs
jbe
adc
xchg
pushf
mov
sbb
pop
xchg
int3
sbb
shll
mov
ja
hlt
sbb
ljmp
pushf
aas
or
cmpsb
mov
jl
mov
loope
cmpsb
cmp
ljmp
bound
pusha
pop
cmp
in
psllq
push
mov
xchg
ret
js
cs
call
filds
adc
outsl
clc
adc
inc
jg
adc
mov
movsb
inc
insb
pop
popf
jno,pn
xchg
jecxz
repz
fadds
or
and
sub
push
or
pop
roll
xchg
int
cwtl
movsl
cltd
push
icebp
imul
stos
daa
jge
adc
fidivrl
xlat
or
sti
jp
ficomps
aam
fcomp
sub
adc
mov
stos
into
cmp
test
cmp
mov
jmp
add
aas
mov
pop
mov
loop
sbb
dec
bound
mov
dec
arpl
jmp
jns
inc
inc
jbe
adc
lods
inc
divl
xchg
sbb
xor
arpl
stos
lods
out
push
out
jle
fidivrs
inc
call
movsw
push
fstl
ja
sysenter
sbb
sbb
call
mov
imul
inc
stc
cmp
pusha
data16
stos
cltd
adc
clc
dec
icebp
adc
lods
cltd
cmc
in
add
pop
repnz
xor
sti
mov
mov
addr16
out
add
push
xlat
push
jmp
arpl
shll
mov
jge
jns
das
into
dec
add
out
repz
leave
mov
jbe
pop
aam
or
jns
nop
xchg
lds
aad
cmp
lods
or
or
or
dec
push
jl
xor
mov
hlt
leave
xchg
sub
push
fistl
sar
dec
sub
cmp
lret
lahf
stc
push
mov
or
lret
aaa
xor
mov
inc
lret
mov
mov
rolb
and
inc
dec
mov
je
je
or
xchg
icebp
lret
testl
and
add
inc
test
sub
adcb
cmp
sarb
xlat
iret
decb
mov
arpl
leave
lahf
aad
pop
xchg
cmp
add
cltd
push
sub
repnz
fcmovb
fistpl
pop
in
rolb
cmc
bound
jp
sbb
clc
sbb
jecxz
xchg
jecxz,pt
iret
daa
fcomps
fmull
call
cli
repz
lahf
aad
js
push
enter
fbstp
mov
and
sub
xor
push
inc
testb
inc
sub
adc
mov
cs
or
sbb
mov
jno
jg
in
es
fldt
lds
jle
int3
xlat
jmp
std
jae
arpl
inc
sub
cmp
xlat
jg
or
sub
and
jno
loope
adc
xchg
lcall
cli
insb
lea
mov
lcall
iret
jns
jae
or
mov
out
pop
cli
adc
xchg
cli
xchg
mov
aad
mov
sbb
mov
and
jno
scas
mov
and
sbb
sbb
shlb
icebp
xchg
out
mov
push
movsb
addl
inc
sti
sub
clc
add
outsb
cmp
in
mov
inc
and
or
mov
test
adc
xchg
fisubl
daa
and
push
cmpsb
sar
into
cmc
jl
dec
vorps
shrl
outsb
push
push
adcb
out
push
mov
xchg
lret
in
test
aad
shlb
push
or
mov
iret
subl
add
daa
or
jmp
stos
add
adc
ret
shll
stos
push
add
xor
mov
xor
mov
ljmp
xchg
leave
push
pop
cmp
popf
mov
adc
mov
sarb
cmp
stos
out
sahf
sahf
inc
fabs
mov
lahf
mov
lahf
scas
es
daa
pushf
nop
adc
add
popf
mov
sbb
mov
mov
les
mov
ss
jne
sbb
fcomp
loop
js
sbb
enter
adc
fcoml
insl
sbb
std
jno
adc
jecxz
mov
jl
jo
dec
mov
loop
sbbl
sarb
lods
and
sbb
mov
ja
scas
jmp
mov
pop
dec
leave
mov
lret
xor
jo
push
in
scas
fisubs
and
sub
inc
or
jbe
sbb
sub
sti
jae
push
loopne
bnd
xor
sub
aaa
xor
sbb
in
scas
std
add
mov
imul
call
fidivrs
arpl
leave
mov
repz
mov
lock
test
lods
std
movb
xor
jno
and
pop
xchg
cld
mov
sbb
pop
dec
pop
xor
sub
xchg
cmc
dec
dec
push
cs
dec
enter
dec
sbb
mov
jmp
xchg
jp
outsl
leave
movsb
lds
inc
cmp
dec
in
mov
cmc
je
dec
cmp
sbb
ja
call
inc
loopne
push
lock
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
movl
xor
xorl
inc
ret
push
mov
sub
movl
push
movl
add
mov
push
adcl
mov
xor
andl
push
mov
or
mov
add
subl
mov
movl
cmpl
je
cmpl
jle
jmp
push
push
call
mov
dec
mov
jmp
mov
test
movl
je
movl
cmpl
je
cmpl
jb
jmp
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
xorl
mov
mov
decl
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
xor
mov
movl
cmpl
je
cmpl
jbe
jmp
call
mov
dec
mov
jmp
xor
movzbl
adc
mov
add
movl
cmpl
je
cmpl
jbe
jmp
pushl
push
push
push
call
xor
add
dec
mov
jmp
mov
subl
mov
xor
negl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
movl
cmpl
je
cmpl
jg
jmp
call
mov
dec
mov
jmp
mov
orl
sub
subl
lea
xor
xor
movl
cmp
je
orl
mov
xor
addl
add
cmp
movl
jne
xorl
pushl
notl
call
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sub
mov
xorl
xor
subl
add
movl
cmp
movl
je
subl
pushl
addl
pushl
call
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jl
jmp
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
mov
and
mov
orl
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
mov
adcl
add
movzwl
movl
cmpl
je
cmpl
ja
jmp
pushl
call
mov
dec
mov
jmp
mov
jmp
inc
pop
cmp
and
dec
pop
mov
cld
sbb
cmc
jp
adc
jp
xchg
cmpb
in
adc
inc
mov
bound
fdivl
movsb
leave
sbb
int
stc
push
and
das
pop
popf
jb
pop
int
pop
pop
popa
stos
mov
lods
inc
sub
cs
movsb
sub
xor
jae
xor
pop
loope
jmp
inc
imul
cwtl
push
aad
or
mov
xchg
shr
icebp
and
or
bound
sbb
insb
jge
adcl
xchg
pusha
mov
lahf
push
decb
std
repz
pop
int3
dec
or
ja
sahf
int
loopne
mov
xlat
pop
stc
inc
cmpsb
sub
scas
push
xchg
mov
xchg
test
cmp
bnd
lods
out
push
loopne
pop
push
gs
cld
pop
sbb
sub
pushf
jb
ds
in
cmpsb
jo
cmp
jbe
out
xchg
aam
leave
hlt
inc
cmp
cmpsl
xchg
cmc
and
in
push
add
jne
sbb
das
cmpsl
sbb
cmp
cmc
mov
fstpt
imul
lock
sub
movl
pop
dec
or
pop
jg
mov
mov
and
or
sub
outsb
idiv
xchg
sbb
push
out
cli
andb
inc
mov
sub
jge
orb
add
or
push
sbb
clc
fistpl
mov
push
imul
mov
fs
mov
push
in
pop
push
push
stos
jl
sub
jne
and
imul
aas
xchg
and
hlt
pushf
pop
and
mov
sete
pop
cmp
jmp
mov
out
pop
mov
repnz
ljmp
or
out
dec
cmp
xchg
popf
add
xchg
sbb
ret
pop
or
test
adc
insl
mov
xchg
stos
daa
test
fcomip
cmpsl
sub
in
dec
jno
movsl
subl
adc
add
mov
call
add
inc
jb
fstpt
int3
testb
inc
cmpsb
pusha
fimull
js
xchg
push
nop
aas
add
jecxz
dec
in
jae
js
rorb
adc
jbe
stos
or
mov
mov
jecxz
dec
adc
stos
xor
inc
insl
sbb
push
pop
mov
loope
test
mov
dec
rol
sub
or
pop
mov
push
push
push
cmp
xchg
add
and
fwait
rcrb
mov
inc
jo
jecxz
pusha
jb
pop
lds
fwait
jns
mov
sub
push
jle
fdivs
push
lcall
les
repz
fldcw
mov
out
sub
leave
sti
inc
and
cmc
xchg
insb
mov
cmc
xchg
jb
jns
pop
jg
cmp
jae
lcall
mov
loope
lods
aas
sbb
sbb
shlb
inc
jo
in
bound
fsubrs
sub
lds
xchg
lret
out
xchg
pop
sbb
mov
push
adc
xor
call
adc
inc
movsl
out
mov
xchg
adc
jmp
jno
lret
stos
push
jmp
push
push
and
jnp
sbb
int
mov
or
push
ds
icebp
adc
fnstcw
in
cmp
dec
repnz
xchg
cmc
insl
mov
jb
or
or
inc
dec
lods
mov
daa
push
xchg
mov
jns
hlt
dec
sbb
mov
mov
icebp
lret
cmpsb
dec
xchg
in
xchg
jnp
mov
mov
push
popa
daa
cli
cs
and
xchg
sbb
ss
in
arpl
xor
jmp
popa
adc
jns,pn
and
xchg
adc
cmp
mov
add
pop
rclb
out
popf
mov
inc
pop
mul
divb
and
into
mov
adc
cltd
mov
hlt
push
lahf
aad
fucomip
jg
es
mov
in
in
sub
mov
xor
push
push
scas
repnz
das
push
fbstp
push
xor
pop
bound
stc
mov
sbb
int3
add
repnz
adc
cld
ja
push
xchg
mov
sahf
mov
inc
daa
pop
mov
inc
adc
inc
pop
ss
jge
imul
cmc
gs
inc
movsb
cwtl
xlat
xchg
ret
call
outsl
lcall
test
adc
ljmp
jmp
mov
dec
adc
sub
pop
rcr
xchg
add
pushf
inc
cli
adc
imull
add
xor
adc
xchg
push
insb
shlb
cwtl
adc
cmp
cmp
js
cwtl
jbe
jns
fimuls
lret
movsb
fisubs
scas
lcall
push
aaa
adc
pop
mov
fs
ds
and
pop
pop
sbb
rclb
or
repz
dec
hlt
xlat
xlat
xchg
mov
add
sub
adc
ss
lcall
daa
cmp
mov
repnz
lds
fwait
cmp
ficompl
mov
xor
pop
mov
or
mov
push
pop
push
int
nop
nop
lret
sahf
outsb
imul
pop
daa
jmp
enter
test
dec
int3
inc
push
int3
or
adc
cmp
loope
cs
shlb
sti
incb
mov
pop
fisubrl
xlat
xchg
cmpl
in
adcb
lock
loope
push
mov
sbb
sub
ret
insl
dec
dec
loope
aad
cli
cmp
mull
lret
gs
mov
loope
test
lcall
insl
subb
pop
xor
outsb
inc
jno
sbb
pop
leave
into
mov
pop
mov
cmp
test
fwait
dec
inc
loopne
mov
mov
loopne
xlat
lcall
in
fcmovbe
fsts
test
jae
js
mov
add
xor
cwtl
mov
jle
xchg
adc
xchg
push
imul
mov
rclb
rcrb
pushf
cltd
xchg
jno
lahf
popa
add
cmp
inc
dec
mov
jne
ficompl
mov
shl
filds
pop
sub
add
pmaxsw
idivb
cli
jb
xchg
out
aad
outsl
xor
xchg
dec
xchg
fwait
out
mov
inc
test
sahf
pop
cmpsl
fidivl
sbb
cmp
inc
mov
icebp
jp
mov
pop
lods
fiadds
stc
add
cld
jg
add
pop
xchg
in
inc
cmpsl
sbb
dec
cmpsb
mov
mov
cmp
popf
lea
out
std
mov
pop
scas
jle
push
xchg
add
lods
imul
mov
les
jle
fstl
mov
ficompl
clc
pop
movb
cmp
pop
xor
dec
clc
fsubrl
stc
adcl
daa
mov
lret
mov
ret
push
jnp
cmp
sti
nop
iret
lock
cmp
add
push
mov
mov
jg
cmp
insb
push
cs
push
dec
imulb
or
and
jmp
insl
lods
jae
sbb
mov
mov
enter
cmp
xchg
dec
inc
xchg
lds
dec
adc
sbb
pop
in
movsl
gs
xor
lret
cltd
repnz
adc
push
adc
cld
icebp
je
cmp
lds
test
lds
or
inc
xchg
mov
dec
test
fsubs
jno
push
dec
mov
cmp
push
jp
popa
push
fcomip
push
and
fidivrs
xchg
or
xchg
pop
mov
inc
sbb
jae
test
sahf
lret
syscall
lock
and
imul
mov
jb
fcoms
pop
pop
jnp
jbe
std
adc
rorl
xorl
mov
dec
insl
subl
sub
icebp
test
divb
pop
jmp
jg
push
loope
in
scas
dec
add
fiadds
xchg
repz
out
insb
fsts
out
stc
add
test
push
in
or
mov
sub
gs
xchg
push
lock
js
adc
and
aam
aad
stos
stos
cmp
repz
inc
fs
adc
jae
push
push
bound
cmp
pop
push
push
xchg
fisubrl
insl
fs
sbb
addr16
cli
js
lret
push
jb
sti
mov
add
pusha
and
pop
xlat
add
push
fwait
int
push
xor
add
xchg
pusha
fiaddl
jb
or
xor
jb
and
mov
pop
repnz
sub
shll
orb
pop
outsl
and
mov
lods
xchg
lds
and
das
fistl
pop
cli
lcall
in
inc
out
pop
push
test
outsb
test
ja
repz
ret
sbb
cmp
fs
stc
add
les
cs
mov
pop
clc
inc
mov
inc
cmp
lds
or
mov
fldenv
call
rcrb
stos
call
popa
lcall
std
jb,pt
int
out
movsb
add
fcoml
dec
mov
arpl
and
jle
arpl
cmp
aam
add
in
popa
sbb
adc
adc
pushf
fidivrl
mov
xchg
scas
pop
mov
dec
push
jge
and
sti
pop
fistpl
mov
fiadds
mov
jo
sub
daa
cli
mov
sbb
sub
pop
adc
and
xchg
out
sbb
mov
cmpsl
test
xchg
inc
sbb
cmp
fsub
cmp
mov
bnd
adc
inc
cltd
pop
rcrb
sbb
cli
add
or
out
fisubs
adc
pop
ret
inc
cmp
fs
pop
in
or
enter
mov
cmp
mov
lea
call
das
jle
push
push
adc
shrb
jne
pop
dec
xlat
stc
in
scas
cmc
lea
mov
sbb
int
je
add
or
les
decb
insl
outsl
int3
jno
dec
imul
mov
push
shl
adc
fucom
addr16
adc
mov
out
shlb
adc
aaa
cmp
jnp
imul
int3
mov
or
mov
add
fistl
push
adc
add
pop
mov
jecxz
dec
cld
mov
adc
sub
iret
pop
and
lock
shlb
adc
dec
int3
pop
sub
test
stc
fisttpl
xchg
or
mov
inc
daa
adc
add
cmpsl
repnz
mov
fnstcw
test
scas
mov
lds
mov
inc
cmp
cli
mov
and
and
call
mov
inc
repz
ret
bound
sarb
fadd
sti
pop
sub
jb
popf
sbb
addb
push
add
rcll
pop
divb
mov
scas
loop
xor
ds
pop
movsb
loope
mov
sahf
jp
cmpsb
push
into
sti
scas
push
pusha
xor
mov
dec
lret
xchg
jo
add
jbe
pop
icebp
clc
push
gs
xor
inc
lret
cli
mov
mov
xchg
inc
in
ss
push
push
movsb
aam
out
adc
ret
das
loop
popa
push
cmpsb
mov
rclb
in
dec
cs
dec
pop
nop
push
fimuls
jmp
inc
in
jae
or
push
or
jae
je
xor
in
pushl
lds
popf
push
leave
lea
jns
sub
fdivrs
adc
or
aaa
mov
ja
test
adc
test
subl
and
bound
jno
aaa
incb
test
mov
jno
and
call
or
popa
sub
cmp
stos
lcall
cltd
shrl
ret
sahf
and
sub
mov
inc
mov
xchg
sbb
jns
sub
xlat
dec
fisubl
lret
mov
dec
mov
dec
cltd
cltd
jns
xchg
cmc
jecxz
mov
repz
adc
pop
negb
repnz
imul
in
addr16
stc
cmp
adc
xchg
insl
pop
jno
adc
ror
push
into
adcb
fs
pushf
jns
sub
and
sbb
fs
push
or
cltd
in
mov
cmp
cmp
gs
sbb
sbb
lds
fcoml
ss
cwtl
pop
mov
shr
shrb
bound
lds
cmp
insb
push
pop
in
mov
or
xlat
incb
sub
jge
sahf
mov
fsubl
sbb
cmp
dec
std
lret
shrl
add
add
es
imul
call
cmp
jb
xlat
mov
loop
cmpsl
cmp
sub
xor
int
mov
xor
inc
mov
mov
test
xchg
std
and
int
jl
adc
dec
ret
or
pop
icebp
aaa
mov
cmp
adc
adc
sbb
sub
xor
ret
dec
inc
jge
fildl
inc
int
mov
push
das
aas
out
insl
and
pop
inc
cmp
xor
push
mov
loope
mov
xchg
jb
pusha
jbe
mov
dec
jmp
es
xchg
mov
pop
and
xor
rorb
cmp
pop
gs
inc
mov
test
pushf
cmp
jb
popa
jmp
xchg
faddp
pop
inc
inc
xchg
test
sub
add
jecxz
lea
mov
jno
mov
scas
ja
lahf
or
mov
aam
test
mov
mov
inc
or
ja
fstp
cmp
push
xchg
inc
inc
aas
into
or
dec
stc
mov
cmp
jno
sbbl
pop
inc
pop
loopne
push
pop
mov
dec
push
lcall
adc
fs
cmp
into
shl
jb
ret
mov
out
dec
inc
sarl
mov
mov
je
out
mov
loope
and
push
scas
adc
sub
inc
dec
adc
outsl
ja
std
out
push
sbb
mov
cmp
cmpsl
push
lods
iret
mov
xor
in
cmp
xor
xor
push
ljmp
and
and
loope
imul
es
xchg
sub
gs
ja
cld
cld
adc
dec
and
inc
aaa
in
aas
cwtl
rcl
gs
in
jmp
xchg
in
loop
push
jo
leave
add
and
add
sub
mov
mov
scas
xchg
inc
sbb
jmp
sti
outsb
lock
push
sbb
inc
dec
jns
dec
xor
fists
xor
imul
data16
mov
jbe
andl
mov
movsb
xchg
shrl
xor
int
mov
jg
mov
dec
nop
inc
scas
insl
xchg
test
in
scas
jl
movsb
lahf
mov
nop
std
iret
popf
stc
pop
or
cmp
cmp
stos
popf
sbb
loope
mov
xor
rcl
push
int3
roll
insl
sub
jp
push
add
aas
sahf
inc
adc
scas
add
mov
adc
mov
jecxz
js
sub
sbb
out
scas
int3
dec
mov
mov
cld
inc
or
out
repz
imul
inc
mov
mov
sbb
sub
adc
pop
pop
mov
push
push
jo
xor
rol
and
mov
lds
mov
lods
add
mov
rcr
std
rol
inc
lcall
lods
imul
mov
pop
orl
test
flds
test
inc
pop
idivl
aad
sbb
fucomp
jg
cltd
lahf
cmc
mov
push
cmpl
dec
xchg
mov
push
outsl
mov
in
mov
jmp
mov
lret
mov
mov
fiadds
sub
xor
sub
cmp
sahf
repnz
and
mov
adc
das
in
js
and
cmp
dec
test
ret
mov
jmp
lahf
mov
jae
lds
sti
xchg
jl
in
lock
adc
lret
out
aaa
dec
data16
ret
pop
or
pop
addb
fstpl
or
clc
mov
push
arpl
stos
jecxz
cmp
das
add
dec
xlat
add
cmp
jnp
outsl
or
int
fstps
insl
xchg
inc
repz
adc
push
xor
enter
shlb
daa
lods
aaa
out
add
imul
dec
mov
pop
sub
sarb
imul
nop
pop
aam
cwtl
clc
lret
xchg
add
movsl
test
mov
push
ficoms
dec
pop
ljmp
stos
cli
or
push
gs
lods
arpl
sub
jns
ss
repnz
ja
mov
sarl
fs
mov
push
or
xchg
xor
pop
pop
adc
addr16
adcl
or
pop
adc
jo
inc
cmp
call
rorb
mov
ds
mov
ret
pusha
jmp
sbb
push
pop
movsb
add
cmp
push
ljmp
loop
stc
sub
ljmp
sub
inc
mov
stos
int3
out
cld
jg
push
pop
test
add
je
xor
mov
addr16
push
inc
ret
pop
xchg
ret
imul
xchg
jmp
nop
bound
dec
lcallw
cmp
push
and
cmp
sub
ss
jge
dec
insl
ret
pop
in
cmpsb
mov
sbb
call
stos
mov
idivl
and
push
mov
push
mov
lock
sub
ljmp
scas
cmp
out
pop
pop
nop
sub
in
fcmovb
ja
xor
pop
adc
mov
nop
jno
scas
les
scas
sbb
in
ficomps
cmpsl
sbb
or
sbb
aas
inc
and
jae
das
inc
push
lea
popa
stos
lcall
cmp
test
mov
sbbb
fstl
sub
push
add
cmp
and
mov
push
mov
adcl
push
sub
lock
add
xchg
gs
cltd
add
test
push
xchg
xlat
inc
repz
arpl
outsb
mov
pop
pop
inc
and
xor
pop
pop
xchg
ds
ss
push
les
testl
inc
sbb
repnz
bound
push
aas
push
jmp
lods
mov
cmc
dec
or
cmpsl
or
push
outsb
lods
pop
fisttpll
or
sub
mov
mov
mov
sahf
xlat
push
mov
cmp
dec
dec
fsubr
xchg
and
mov
push
mov
mov
add
cmp
das
addr16
fisubl
jae
jle
aas
je
mov
sbb
loopne
xor
push
fmulp
ret
dec
jmp
nop
mov
xor
outsl
adc
xlat
nop
inc
add
cwtl
lcall
push
xchg
jecxz,pt
mov
imul
cwtl
jns
popf
into
lods
out
flds
lods
cmp
ja
lods
fnstcw
ljmp
and
xchg
movsl
mov
jo
inc
int3
loope
jns
arpl
inc
fldl
mov
fcom
or
adc
sbb
push
xchg
sub
int3
cmp
test
dec
and
shlb
mov
movsb
shlb
fdivs
fldenv
leave
ret
inc
dec
iret
and
mov
push
sbb
icebp
ficompl
jge
orl
adc
cmp
jae
imul
out
in
call
ja
and
out
push
movsb
sahf
je
mov
fsubrs
add
jb
jmp
fdivrl
push
jp
sbb
push
pop
jno
xchg
ljmp
cmp
lcall
mov
insl
cmp
inc
sarl
jecxz
sub
out
in
test
sub
jecxz
or
ret
data16
fidivl
jno
test
fcomps
xchg
mov
addr16
xor
fbstp
sbb
push
jno
sub
out
add
loopne
sbb
je
scas
lods
mov
les
sbb
xchg
jle
andb
mov
jns
xchg
xchg
add
jno
mov
push
jecxz
sub
cli
push
xchg
pop
inc
jb
aam
mov
or
pop
mov
xor
insb
cmp
sbb
clc
gs
mov
nop
je
pop
sbb
and
test
mov
sub
xchg
pop
mov
sbb
es
repnz
sbb
push
ret
or
aam
jne
mov
inc
jmp
sbb
lahf
adc
xor
adc
push
jg
mov
add
cmc
imul
outsb
push
cli
push
andb
out
loop
das
scas
addl
jae
mulb
sub
jne
dec
dec
addr16
push
in
add
dec
and
jae
mov
push
ja
imul
xchg
pop
negl
out
cmp
ficoml
push
das
mov
mov
and
test
pusha
and
lret
xor
popf
stos
popa
out
cli
sub
cli
sti
jb
decb
lods
lahf
mov
sub
adc
movsb
mov
dec
cld
data16
add
pop
fnstcw
add
xchg
or
jmp
mov
adcl
icebp
adc
fcompl
jns
xor
mov
push
jo
sub
sbb
jl
out
xor
add
pop
jmp
fildl
push
pop
out
stc
out
pop
mov
test
aas
in
xchg
or
pushf
cmp
or
add
jns
inc
xchg
xor
xchg
mov
fidivrl
push
jo
cs
in
lret
push
inc
sbb
dec
add
lds
xchg
mov
or
aam
xor
cmc
dec
mov
test
sbb
iret
outsl
les
mov
cmc
sti
negb
push
lret
mov
pop
push
jnp
or
repnz
loopne
mov
das
mov
dec
mov
mov
arpl
lret
cmp
add
lcall
xor
rcrl
loope
push
push
lods
popl
lcall
and
loopne
mov
push
iret
fwait
rcl
add
pop
cwtl
inc
adc
add
aam
adc
push
cld
add
subb
inc
push
repnz
clc
pop
fidivrs
or
mov
cmpsb
xor
rclb
jle
add
cmp
or
popa
dec
pusha
scas
cmpxchg
sbb
lock
xchg
clc
jae
mov
or
test
cmp
xchg
inc
mov
push
in
sub
xchg
sub
xor
and
addl
xchg
xorb
mov
je
pop
into
ds
rolb
pop
pop
scas
and
icebp
icebp
mov
and
addl
fcoms
sbb
pop
sub
sarb
push
aas
enter
jg
pop
je
into
lods
mov
cld
or
add
popf
or
js
inc
test
add
and
fwait
mov
ret
mov
cmp
mov
pop
bound
xchg
pushf
inc
add
testl
icebp
xor
mov
pusha
inc
rolb
lcall
adc
and
adcb
arpl
cmp
mov
or
insl
dec
fnstsw
xor
inc
movsb
pop
leave
pop
jmp
jp
sub
test
popf
pop
es
dec
cmp
outsb
popf
aas
add
stos
fists
or
cltd
test
aad
mov
mov
ja
ss
push
add
test
aas
test
jne
jbe
mov
jl
push
mov
mov
jnp
and
jbe
jns
pop
aaa
xchg
pop
loop
xor
or
scas
lcall
jo
inc
aaa
loopne
pop
aas
push
sbb
push
sub
jecxz
lods
and
pop
addr16
imul
xchg
mov
fdivrl
inc
xchg
cmp
addl
addr16
push
das
cmp
or
inc
sub
mov
or
adc
lcall
mov
std
es
aaa
push
lds
lock
sbb
or
pop
cmpsb
stc
jle
ds
jae
jns
leave
mov
jno
dec
sbb
les
lds
loop
cmp
mov
xor
pusha
adc
xor
xor
aas
call
and
imul
add
jne
test
inc
imul
orps
popa
jns
loopne
adc
pop
mov
les
dec
mov
jno
js
stos
les
pop
push
scas
cmp
out
fcomps
pop
mov
add
push
pop
xor
loop
cmpb
sub
sub
mov
dec
sahf
ficompl
loop
mov
jo
filds
dec
aad
imul
call
out
ds
jmp
shrl
jge
mov
mov
dec
cmp
adcl
inc
pop
sub
jl
fucomp
cmp
call
mov
jg
push
cmp
mov
xrelease
lods
outsl
sbb
mov
clc
or
or
out
jne
bound
pop
js
out
pop
xor
jo
adc
inc
mov
dec
popa
mov
and
sub
mov
sbb
sbb
mov
fldl
mov
add
jo
nop
popf
sbb
ss
int
sahf
mov
or
filds
std
xchg
jecxz
clc
out
dec
adc
outsb
adc
cmpsb
iret
pushl
add
and
inc
std
mov
mov
dec
adc
jnp
mov
rcrb
jecxz
jp
pop
pop
inc
lcall
jae
insl
out
test
push
xchg
dec
dec
mov
jae
cltd
out
das
add
xor
loope
addr16
ja
add
imul
pop
mov
mov
loop
pop
daa
add
stos
jnp
sbb
mov
mov
push
aas
pushw
pop
int3
cltd
arpl
andb
lcall
adc
cmp
sbb
sub
xchg
mov
repz
xchg
adc
add
int
mov
mov
mov
mov
adc
xchg
into
pop
sub
shll
dec
lods
sahf
push
icebp
cmp
sahf
adc
cmp
mov
movsl
lods
outsb
inc
xor
add
or
leave
lret
jnp
inc
cmp
dec
movsl
jmp
cltd
mov
xor
adc
sub
pop
xor
pop
cwtl
daa
jbe
aam
xchg
sahf
and
adc
mov
pusha
sbb
dec
pop
add
in
test
cltd
cmp
in
pop
shrb
xchg
mov
sbb
scas
ss
push
cmp
fmul
lods
or
mov
mov
sub
and
faddl
or
mov
dec
es
and
mov
xor
push
push
mov
out
lds
lret
xchg
imul
dec
add
fsub
imul
jg
pushf
popa
xor
jl
call
xor
addb
bound
add
aam
cmpsl
addr16
mov
jmp
push
scas
into
mov
iret
and
xchg
push
cmp
lret
xchg
repnz
and
fcompl
xchg
xchg
xchg
out
xchg
dec
push
in
mov
xor
pop
mov
inc
sbb
pop
dec
jae
scas
outsb
or
pop
imul
ret
inc
fsubrl
jo
cmp
mov
mov
repnz
test
movb
fistl
lret
or
cltd
clc
fcmovu
movsb
sbb
sub
shr
shrl
jmp
aas
or
dec
or
jle
addl
sbb
std
les
in
and
fsubl
mov
pop
ds
jo
pushw
lods
cmp
mov
dec
mov
sbb
xchg
cs
mov
mov
pop
ss
push
add
mov
outsb
icebp
out
xchg
mov
bound
xchg
aam
incl
dec
jmp
mov
adc
sbb
jns
pop
mov
mov
fildll
int3
cwtl
sahf
aas
or
mov
add
int3
mov
mov
jb
in
push
pusha
mov
adc
mov
stc
push
enter
cmpl
mulb
ljmp
jb
add
ficomps
mov
rcll
push
pop
ret
mov
cs
ret
dec
in
jge
mov
add
loopne
inc
mov
bound
subl
loop
xlat
js
push
add
scas
nop
dec
shll
popf
or
nop
push
lahf
xor
cwtl
mov
in
inc
ljmp
loopne
push
mov
bound
outsb
xor
push
test
popa
sbb
add
fs
ds
cmp
push
jecxz
push
lock
xor
pop
test
hlt
inc
loop
jb
lahf
adc
jecxz
ds
mov
fildll
and
fmull
imul
xor
sarl
ds
inc
das
mov
jo
cmp
incl
xchg
mov
scas
push
sub
je
roll
lret
inc
mov
cld
nop
fs
push
cld
je
inc
and
add
mov
sub
mov
movhlps
pop
pop
and
jecxz
dec
xchg
stc
cmp
arpl
pushf
push
int
jno
in
data16
andl
pusha
mov
test
mov
pop
sub
push
cmp
dec
ljmp
std
les
push
jg
adc
and
repnz
movsb
sbb
sbb
mov
int3
sti
daa
scas
mov
pusha
xchg
subl
and
lock
sbb
or
pop
cltd
cltd
sbb
cmp
insl
sbb
sbb
add
mov
jo
outsl
mov
jne
mov
mov
lahf
add
test
inc
cmp
fs
ficoml
or
movsb
xor
push
xchg
mov
stos
out
sub
or
mov
imul
cmp
adc
stos
xchg
mov
adc
sub
out
ss
inc
stos
add
xchg
dec
nop
sub
movsb
arpl
pop
cmpsb
or
mov
or
movsl
std
ret
lods
fsubrs
pop
dec
mov
movsl
xchg
jecxz
push
or
lret
gs
dec
ret
push
repz
ds
cltd
push
cmovb
rcll
lcall
push
mov
sbb
test
jl
ljmp
jmp
icebp
hlt
fwait
add
mov
flds
cmp
gs
xor
push
cmpsl
dec
ja
jle
xchg
cmp
syscall
scas
cmp
jmp
xchg
xchg
int3
lods
movsb
lods
cmp
cmp
push
mov
mov
xor
or
ret
mov
adc
lcall
dec
mov
dec
pop
je
clc
hlt
ret
mov
push
or
sbb
jge
imul
jno
outsb
leave
movsb
xchg
xor
ljmp
shll
jne
add
fwait
mov
hlt
mov
sbb
mov
xor
dec
addl
mov
dec
movl
push
mov
xor
xor
sub
sub
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
call
jmp
mov
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
call
jmp
mov
sub
xor
mov
push
sbbl
add
movl
jmp
mov
mov
inc
movl
cmp
jb
movl
cmpl
je
cmpl
jb
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
xor
adcl
add
movl
jmp
mov
xorl
mov
andl
xor
sbbl
mov
xorl
add
movzwl
sbbl
mov
xor
jmp
popa
sbbl
test
push
pop
pop
popa
movsb
or
adc
jp
sub
dec
jbe
mov
pop
add
aam
lods
xor
mov
dec
arpl
sbb
hlt
fs
dec
dec
aad
xor
pop
cs
ret
pop
jae
icebp
xchg
test
test
push
pop
data16
testl
jge
cld
dec
bound
dec
inc
push
in
and
adc
or
jecxz
sub
sbb
pop
mov
sarb
add
sbb
aam
lods
in
js
xor
xchg
adc
in
xor
frstor
adc
out
add
nop
call
xchg
fiaddl
jp
out
push
mov
std
loopne
loope
ret
inc
mov
add
adc
cmpsb
out
repz
pop
mov
and
pusha
sub
les
mov
adc
scas
push
loope
push
cmovbe
je
test
xor
push
and
cmova
pop
pusha
sub
ljmp
jecxz
xchg
aad
and
jnp
bound
mov
orb
jae
dec
movsb
iret
cmp
mov
inc
push
scas
jecxz
cmpsl
lcall
loopne
xchg
jne
mov
popa
in
sbb
clc
pop
int3
mov
pop
xchg
aaa
cli
out
jle
stc
adc
in
cmpsb
adc
pop
outsb
stos
sub
into
iret
aaa
jmp
icebp
add
pop
ror
mov
mov
je
mov
dec
dec
ljmp
pop
ds
scas
movsl
fbstp
mov
lds
lds
mov
push
sti
mov
jnp
xchg
mov
aaa
roll
jb
mov
add
xor
sub
adc
test
cmc
arpl
mov
in
adc
jp
mov
jle
addr16
enter
and
adc
inc
in
add
push
pop
fwait
sarl
inc
movsl
xor
inc
push
fisttps
ret
scas
cld
adc
mov
movsb
rcrb
adc
add
add
lock
popf
or
fwait
das
sub
jno
inc
leave
sbb
cli
inc
gs
lcall
js
daa
pop
in
fidivrl
mov
add
sbb
std
pushf
push
test
xchg
pop
lods
shll
jno
push
xchg
cwtl
pop
outsb
nop
sub
pusha
into
enter
xchg
jno
imul
sbb
ret
sbb
andb
push
mov
xchg
xchg
pop
push
mov
sbb
mov
jnp
push
std
scas
jb
leave
or
jle
je
popf
lcall
adc
or
mov
rorl
int
sub
fidivrl
imul
sbb
xor
arpl
jge
add
lock
jns
arpl
xchg
jne
fimull
lock
add
std
pop
mov
cmp
dec
jmp
rclb
hlt
adc
jae
xchg
mov
mov
cmp
xchg
mov
fnstcw
adc
cmp
jmp
scas
insl
call
inc
daa
adc
push
xchg
jle
js
jp
dec
int
loope
mov
dec
nop
mov
aas
jo
mov
and
ss
xor
jo
push
mov
sub
pop
mov
int3
sti
xor
dec
rcrb
fisubrl
jmp
push
dec
jmp
arpl
push
clc
pop
ja
adc
adc
xor
leave
mov
ret
inc
inc
jno
fs
push
icebp
jno
add
lea
iret
inc
fstpl
addr16
loope
add
ret
dec
test
outsl
jp
fwait
outsb
je
push
pop
mov
fimull
inc
enter
or
xchg
push
sub
jbe
in
loope
sarb
sbb
scas
and
xchg
mov
sbb
mov
popf
push
dec
adc
mov
test
add
frstor
hlt
jecxz
mov
das
data16
insb
std
rorb
or
inc
xor
push
hlt
jp
push
sub
or
mov
jg
lods
and
hlt
xchg
cmp
outsl
inc
dec
out
push
scas
sbb
mov
or
push
sahf
popa
lret
dec
orb
dec
outsb
fisubrs
lret
mov
orl
bound
in
xor
xor
repnz
mov
xchg
xor
xchg
ds
dec
movsl
xor
cmp
add
jp
iret
and
fisttpll
xchg
lods
jmp
inc
inc
pop
adc
xlat
aad
test
xchg
xchg
jmp
mov
jl
mov
xor
dec
pushf
push
scas
ss
rcll
or
add
popa
ja
lock
push
sti
sbb
je,pt
data16
jmp
xor
push
xor
mov
sbb
cld
mov
pop
imul
test
xlat
jge
insl
movsl
repz
mov
lds
and
jnp
push
gs
adc
or
shrl
mov
lahf
jbe
push
adc
xor
pop
push
push
add
out
fiaddl
sub
xor
test
pop
punpckhdq
xchg
mov
out
push
xchg
jb
jp
out
cltd
xchg
jo
pushf
mov
cmp
xchg
mov
xchg
mov
pop
testl
imul
pop
push
mov
lods
mov
cmpsl
ss
punpckhdq
cmp
jo
lds
insb
lock
fwait
xchg
addr16
outsl
dec
fsubrl
inc
dec
ret
nop
push
mov
mov
gs
idivb
mov
sub
fidivl
out
dec
aaa
negl
mov
and
imulb
ret
sub
pusha
out
loop
jp
mov
jne
and
push
jle
jnp
or
xor
mov
test
mov
ror
sub
mov
add
lret
movb
xor
dec
cs
dec
or
mov
fwait
and
sbb
call
popa
pop
gs
xorl
cmpsl
imul
popf
sbb
je
cmp
xor
sarb
leave
cmpsl
cs
push
sahf
inc
mov
jle
adc
push
scas
pop
repz
mov
repnz
and
xor
popa
inc
add
lcall
add
pop
mov
ljmp
repnz
mov
std
push
sbb
xor
clc
and
in
or
cmp
sahf
dec
dec
jno
decb
or
mov
pop
adc
icebp
call
nop
repz
sbb
loopne
xor
insb
or
mov
mov
flds
mov
jge
add
sub
ds
mov
cwtl
loop
xor
mov
xchg
mov
sub
iret
insb
pop
pop
lret
ja
sub
int3
sti
inc
shlb
pusha
mov
bound
xchg
add
dec
mov
xchg
inc
xchg
xor
fbld
inc
es
pop
and
and
ret
xor
call
inc
icebp
or
xor
pop
imul
cmp
or
add
jbe
mov
jmp
dec
jbe
xchg
sub
cmp
xor
mov
lahf
insb
and
pop
mov
int
pop
or
ret
jg
dec
pusha
ret
in
xor
sub
je
jle
pop
movsl
pop
pop
mov
xchg
cmpsl
add
adc
clc
lds
fildll
or
xlat
mov
popa
sub
mov
add
mov
loopne
insl
insb
and
fwait
xchg
mov
inc
or
ss
repz
cmp
push
mov
icebp
push
stc
jmp
mov
cmc
pop
stos
inc
std
mov
adc
mov
cmp
lea
jmp
int
daa
je
jo
push
jo
shl
stc
mov
daa
sbb
xor
push
pop
adc
xor
stos
jno
mov
xor
add
dec
or
cmp
or
call
ret
enter
ljmp
mov
hlt
pop
push
or
ss
mov
incb
das
add
dec
popf
pop
xchg
sub
add
jae
sahf
lods
push
mov
ljmp
cltd
mov
sub
test
jbe
xchg
push
movl
sbb
aaa
lret
sbb
loop
inc
cs
lock
push
mov
jmp
mov
mov
jb
movsl
dec
dec
mov
test
cvtdq2ps
imulb
xchg
out
or
inc
mov
popf
cmovo
add
mov
stos
sbb
xchg
pop
pop
mov
or
adc
mov
jp
adc
mov
lds
xchg
sub
lcall
hlt
dec
pop
aaa
xchg
sbb
cmp
aaa
in
mov
icebp
mov
mov
dec
mov
aad
fbstp
pushl
push
cmpsl
xlat
add
cld
in
dec
out
cwtl
ds
pop
sub
rolb
pop
dec
push
xchg
fdivrl
inc
mov
ror
in
jl
in
ret
js
sbb
jge
popf
adc
inc
push
arpl
pop
lahf
xchg
sub
gs
imul
rcrb
ficoms
shl
or
jo
push
repz
out
sbb
mov
xchg
test
jge
jne
adc
gs
pop
dec
fimull
mov
nop
popf
push
mov
into
or
imul
repnz
adc
lea
mov
mov
repz
fstl
cld
push
dec
push
fabs
imul
int
cmpl
ficomps
jmp
jbe
iret
cmp
lret
push
dec
jg
mov
ja
ficoms
push
rcll
jmp
push
and
mov
or
push
imul
je
lahf
or
or
cli
push
inc
stc
imul
out
into
imul
aam
loopne
lods
movsb
adc
dec
sbb
movsl
adc
test
popl
ljmp
mov
add
lods
push
lcall
test
mov
das
gs
cmpsb
out
xchg
std
pop
scas
jb
mov
sub
in
ficompl
stos
shlb
hlt
sahf
fstpl
movq
test
pop
sbb
cs
les
add
mov
push
aaa
and
inc
add
and
cmpsl
sbb
test
out
cmpb
or
je
xchg
shlb
cmpsl
scas
jecxz
jmp
and
xor
movsb
std
adc
dec
jno
push
dec
ret
mov
fbld
roll
inc
inc
int
adc
clc
or
mov
jl
pop
xchg
stc
jle
pop
cli
push
push
test
add
cwtl
jns
ja
mov
sbb
nop
fcoms
dec
pushf
mov
stos
xchg
mov
pop
aad
js
mov
mov
adc
xlat
and
mov
mov
cmp
in
cmp
out
mov
data16
adc
adc
clc
ljmp
or
stc
inc
jnp
and
xlat
cmpl
in
pop
in
xor
pop
xchg
stos
xchg
pavgw
push
pop
ja
daa
adc
jle
adc
cmpsl
loopne
test
jnp
mov
and
stc
mov
cltd
movsb
jecxz
inc
mov
mov
inc
pop
pop
jp
sub
pop
repz
enter
lahf
jmp
lcall
mov
imull
arpl
enter
clc
or
sahf
add
xchg
mov
jmp
cmpsb
xchg
sbb
and
xchg
out
lods
jecxz
sbb
stos
negb
pop
dec
rcl
pop
int3
sub
mov
lar
stos
dec
bound
pop
into
jle
xor
test
xchg
mov
idivl
jp
dec
lock
inc
out
xor
mov
xchg
jns
aam
dec
aaa
sub
push
jno
mov
sarb
fnstenv
daa
add
jns
mov
jg
jmp
mov
jp
jmp
mov
inc
cmp
xchg
dec
push
clc
cmp
jae
pop
xlat
sub
inc
daa
jb
std
je
inc
mov
cltd
xadd
dec
xchg
rclb
adcb
and
enter
icebp
push
ret
or
sbb
pop
jg
push
xor
add
aad
aad
jg
jle
stos
jg
mov
adc
push
stos
mov
sbb
ss
hlt
jge
call
mov
mov
cld
lods
cmpsb
enter
or
movsl
add
or
and
insb
sbb
or
insb
mov
dec
int
inc
movsb
fadds
loopne
jo
pcmpgtw
neg
call
or
mov
mov
stc
imul
daa
inc
mov
test
jb
sbb
repz
scas
inc
push
pop
imul
nop
cmp
dec
add
in
adc
sbb
js
jns
faddl
sub
out
pop
stos
push
movsl
dec
sub
mov
push
sub
jbe
unpckhps
sub
adc
andb
xor
outsl
rcr
loope
negb
out
loopne
fdivrs
xor
sub
sbb
pop
cmpsb
rcrl
mov
ljmp
and
fsubl
jne
mov
xchg
je
mov
jg
adc
js
clc
dec
cli
sti
xorb
ja
insb
jbe
mov
js
inc
fsub
pushf
pop
pop
and
outsb
testl
xchg
sarb
fiaddl
jge
or
inc
fs
stos
jge
jae
sti
dec
xchg
shrb
mov
mov
data16
outsl
inc
sub
out
push
movsl
cltd
mov
or
das
pop
dec
mov
mov
clc
and
sbb
add
divb
mov
push
lret
mov
add
inc
jmp
stc
pop
or
cmp
add
sub
rcrb
cmp
push
addr16
dec
mov
mov
sub
scas
fisubl
inc
xchg
xchg
mov
dec
push
je
mov
mov
leave
inc
out
xchg
mov
mov
ret
mov
mov
cs
sub
mov
xor
hlt
sti
mov
jmp
push
dec
and
xchg
icebp
push
push
sub
test
into
call
mov
stos
push
negb
mov
xchg
cmpsb
cmp
cmp
movsb
jne
inc
pop
sbbl
fiadds
adc
outsb
jnp
jb
mov
jae
and
push
jg
mov
xchg
psubsw
dec
fadds
shr
mov
and
jmp
cmp
orl
mov
stos
cltd
cltd
bound
ucomiss
push
cld
mov
cld
test
repnz
cmc
ret
xor
je
jae
and
out
cld
leave
sub
push
inc
ja
xlat
gs
rcr
jb
jmp
pop
xor
sub
into
loopne
and
test
or
mov
cwtl
mov
das
or
jbe
and
xchg
ret
movsb
push
mov
aas
sub
sub
mov
imul
or
pusha
aaa
rclb
and
dec
addl
sub
cmp
push
adc
in
or
push
int3
xchg
xor
es
test
jmp
xchg
adc
add
out
push
mov
sub
sbb
mov
fwait
pop
xlat
mov
insl
xchg
mov
and
or
add
mov
std
arpl
repnz
fcomps
mov
add
mov
cmp
int
mov
and
dec
jle
out
push
out
cmpsb
xchg
les
test
jg
pop
xor
cld
cmp
idivb
xlat
lock
movaps
jns
push
fbstp
xlat
xor
mov
xchg
add
hlt
daa
mov
test
mov
push
or
out
xchg
cmp
lahf
push
sbb
jmp
in
movsl
pop
inc
or
mov
in
cmp
lcall
push
inc
xor
cli
lods
push
pop
mov
sub
cltd
pusha
mov
mov
cmc
rcll
faddl
xor
aas
and
cmp
xor
aam
cmc
pop
or
pop
imul
arpl
out
sub
out
testl
cmpsl
cmpsb
or
pop
xor
mov
cs
and
pop
push
mov
das
stos
jns
sbb
dec
orb
pusha
pop
cmp
scas
cmp
or
jns
icebp
pop
movsl
lahf
mov
mov
mov
loop
jns
loope
pop
rcr
das
int3
scas
mov
or
mov
es
jmp
movsl
xchg
and
xchg
jp
in
es
mov
repz
loop
fisubs
cmp
sbb
clc
loope
lods
cmp
bound
stc
aaa
jns
sahf
push
jns
shl
js
in
xchg
cld
push
xchg
ss
es
ss
cmp
nop
xor
adcb
int3
cmpsl
or
sub
dec
xor
or
pop
mov
jg
cmpb
or
ret
aaa
cmp
push
jbe
ficoml
push
rcl
jp
push
and
in
arpl
orl
mov
jnp
rorl
mov
and
outsb
jno
xor
mov
sbb
das
inc
cwtl
mov
and
cmpl
cmpsl
pop
sbb
cmp
sub
pop
test
andb
std
call
daa
nop
xor
mov
push
mov
mov
fldl
fs
cmp
test
into
xor
add
cmp
inc
jmp
aad
cmp
ss
pop
roll
pop
sbb
inc
fcmovu
xchg
ss
add
jge
dec
xor
push
sub
jbe
push
into
bound
imul
add
push
pop
movsb
jne
dec
out
adc
dec
fimull
dec
int
out
sbb
mov
pop
lcall
and
popa
fcmovne
pop
jo
and
mov
ret
xchg
scas
outsl
cltd
mov
add
adc
mov
in
xchg
and
mov
pop
jecxz
addb
ljmp
mov
xor
shlb
fdiv
lcall
fsubs
enter
mov
adc
mov
in
jg
inc
push
or
lret
jmp
aas
int
scas
push
inc
dec
cmp
cmp
xor
divl
or
les
mov
cmpsb
mov
adc
bound
push
out
mov
pop
push
sbb
imull
dec
pop
es
fimull
xor
test
scas
icebp
xchg
mov
addb
mov
sub
in
insl
lods
cmp
mov
ljmp
lods
mov
cs
getsec
lret
adc
gs
pop
aaa
mov
ffreep
mov
iret
or
sti
movsb
repnz
rcll
ds
sub
int
xor
movsb
xchg
int3
icebp
out
decb
es
mov
mov
pop
rorb
mull
mov
and
cmp
mov
push
add
test
movsl
cmpsb
fsubs
inc
xchg
adc
jo
enter
xor
xor
inc
into
inc
push
dec
mov
lds
jle
fldenv
repz
xlat
std
stos
inc
pop
aam
push
aaa
repnz
push
je
adc
dec
pop
jns
pop
push
pop
hlt
int3
dec
pop
shl
mov
aaa
rorl
in
pop
in
outsb
inc
xor
rol
sub
ret
sbb
jne
and
loope
and
movsl
pop
fadd
lahf
or
xorb
ds
sub
xchg
movsb
ljmp
scas
repz
push
add
clc
aaa
aad
xorb
insb
cmp
gs
jae
add
xchg
decb
repz
and
push
fwait
shlb
sbb
inc
sti
push
sbb
ljmp
pop
dec
dec
jo
xor
lods
dec
dec
shrl
xor
push
or
jle
imul
or
notl
pusha
nop
add
dec
jmpw
pop
push
andb
xor
pusha
or
loopne
iret
and
fbstp
push
or
in
mov
xchg
cltd
cs
cmp
mov
push
les
xchg
stos
add
push
std
ljmp
pop
cmpsb
fmull
add
shll
jg
outsl
inc
in
andb
stos
mov
daa
xchg
and
xchg
jo
insl
cmpb
mov
pusha
les
in
std
popf
lods
fbstp
sub
movsl
dec
xchg
in
push
sti
lret
mov
cwtl
fisttpll
cmp
fidivrl
sbb
adc
xchg
popf
push
das
xchg
mov
inc
cld
cwtl
mov
gs
jo
fimuls
test
andb
mov
mov
lods
adc
mov
mov
lret
inc
adc
je
adc
adc
cmp
mov
sub
clc
into
test
sbb
loope
gs
outsl
jbe
xchg
push
pop
stos
movsb
sahf
lock
pop
dec
adc
sbb
repz
sbb
mov
scas
das
pop
mov
hlt
pop
pop
xlat
jg
jae
sbb
popa
ljmp
repz
adc
mov
xlat
sub
xor
std
fistpl
orb
add
jp
nop
xor
loope
in
cld
jb
cmpb
xchg
xchg
aam
cld
jmp
pop
or
insl
push
in
cmp
pop
std
outsb
ljmp
jle
pop
adc
jl
cs
jge
lcall
xor
loopne
xor
test
orl
popa
aaa
or
je
inc
pop
mov
mov
lcall
mov
rcrb
imul
repz
aad
mov
push
push
jl
sbb
movsb
mov
pop
je
or
xchg
fiadds
cmp
out
push
in
adc
pop
repz
out
jge
lcall
pusha
xchg
lds
ja
add
sub
ja
ficomps
push
mov
out
lods
jmp
js
or
jo
mov
imul
push
fwait
cmp
jmp
ret
pusha
inc
inc
mov
imul
test
out
mov
or
rclb
lods
push
sbb
push
js
xchg
sub
daa
sbb
xchg
cmp
lea
dec
dec
inc
insb
imul
cmp
leave
sub
popf
pop
xchg
push
lods
int3
xchg
mov
cmp
push
xchg
inc
xchg
fwait
rorl
mov
andb
or
dec
daa
dec
add
in
outsb
xchg
jp
into
or
imul
lret
cs
mov
push
and
mov
out
mov
jb
int3
aad
idivl
or
pushf
mov
scas
out
pop
and
add
fsubr
push
scas
mov
test
insb
out
les
mov
push
push
lock
outsb
pop
shl
sub
pop
enter
das
cmpsl
cld
mov
stc
xchg
push
data16
rcrb
mov
cmp
adc
inc
lds
imul
mov
mov
lcall
adc
xchg
jnp
test
xchg
mov
sub
cmp
mov
push
fwait
aaa
out
negb
fisubrl
cmp
out
or
nop
or
imul
sbb
divps
inc
fs
sahf
es
jbe
cld
mov
hlt
sbb
mov
call
insb
pusha
shr
pop
adc
mov
mov
mov
aad
sahf
imul
mov
lret
xchg
jae
rolb
xor
subb
ss
jle
ficompl
xor
sub
icebp
jcxz
stos
pop
sbb
mov
mov
inc
fdivrs
rol
leave
ds
aad
and
mov
push
lods
xchg
pop
xchg
pop
jae
jmp
xor
js
push
cmpsb
leave
int3
push
pop
fdivp
jge
in
inc
hlt
inc
decb
mov
cltd
fucomp
pop
adc
inc
popl
xor
mov
mov
adc
push
jge
jb
call
inc
insl
sahf
inc
test
fcoml
push
icebp
jp
dec
in
jl
push
jg
scas
imul
add
fisttps
lods
cltd
fisubl
jge
pop
int3
scas
xchg
cmp
repz
sub
faddl
sub
xchg
mov
repz
mul
xchg
hlt
js
inc
into
mov
dec
xchg
fmull
icebp
sub
cmp
in
xchg
ret
pop
scas
jbe
sbb
pusha
push
lret
imul
sub
cmpsl
lock
dec
jle
dec
mov
mov
or
jo
push
es
push
pop
cmp
and
add
lret
push
xchg
mov
sub
xchg
dec
ret
decb
sti
mov
repnz
adc
cltd
divb
or
xchg
jge
mov
xchg
adc
mov
jle
fwait
mov
mov
aas
and
jnp
lahf
lcall
cmp
stos
mov
cli
movsl
cmp
idivl
ja
imul
push
popf
and
add
fldcw
push
push
add
cmp
inc
fildl
mul
mov
mov
int3
push
les
sbb
neg
mov
sub
pop
and
stos
fistps
lock
inc
mov
mov
out
xor
pop
cmc
xchg
push
pop
fs
daa
mov
mov
aad
sarl
ds
movsl
les
mov
cmp
mov
sub
xorb
lea
fbld
stc
mov
jne
inc
and
mov
and
xor
adc
pop
xchg
xchg
dec
movsb
stos
jo
or
ljmp
cwtl
pop
nop
int
ret
out
xchg
mov
adc
cmc
or
push
add
cwtl
add
ljmp
push
push
aam
sarl
nop
sbb
cli
jne
iret
sti
popa
call
xchg
stos
syscall
icebp
mov
sbb
xor
mov
cmp
sar
sub
adc
push
xor
loopne
in
jmp
dec
lcall
sub
cld
clc
nop
pop
aad
popa
bound
cmpsb
icebp
fs
xchg
mov
mov
inc
outsl
dec
or
daa
xchg
push
loope
fcomps
add
jl
testb
dec
sub
lds
stos
mov
ud1
fdivl
jae
dec
fwait
shlb
mov
dec
popf
fmulp
jns
xchg
sub
xor
shll
ja
and
sub
xor
and
es
add
xor
stos
inc
gs
mov
sti
nop
xchg
and
mov
lods
pop
lahf
cmp
in
dec
popa
sub
popf
fdivl
das
pop
pop
dec
xchg
aaa
mov
imul
adc
out
scas
mov
imul
std
mov
loop
pusha
aaa
dec
push
xchg
aaa
je
loop
pop
loop
cmp
test
loope
popa
test
pop
mov
add
pop
faddp
jbe
leave
adc
cltd
lea
mov
out
fbld
insl
mov
cmp
and
dec
mov
push
mov
imul
dec
sub
and
enter
cmp
jnp
test
nop
loop
fstps
push
imul
fisttps
cld
mov
xor
les
or
movsl
enter
jmp
mov
xchg
jge
xchg
lret
push
or
mov
data16
mov
dec
fwait
sti
shlb
fmuls
imul
and
cmp
add
sub
adc
push
jecxz
xchg
sbb
push
sahf
xor
cli
pop
leave
push
jecxz
mov
xor
rol
jp
addr16
jbe
das
pop
pop
into
xor
push
fcom
cltd
fldl
jmp
inc
rclb
movsb
pop
cltd
jbe
or
mov
test
cwtl
insb
cmp
jle
lock
jecxz
jecxz
add
out
xchg
fs
fidivs
push
fadd
call
rorb
test
aam
mov
mov
push
gs
sub
outsb
xchg
xchg
push
dec
outsl
filds
xchg
mulb
pop
sahf
mov
pop
inc
lret
fucompp
mov
stc
mov
ljmp
pusha
movsb
xchg
cmp
int
arpl
pop
arpl
test
int3
clc
call
xor
fstpl
mov
jne
out
adc
push
pop
push
pop
and
mov
outsb
mov
pop
shr
loopne
mov
mov
or
frstor
scas
xor
sub
mov
xchg
or
pop
mov
add
lret
lret
sub
lahf
adc
and
fs
xchg
cltd
ret
out
jo
dec
or
or
adc
arpl
push
xor
call
adc
or
push
mov
push
ljmp
pop
fstpt
push
icebp
addr16
dec
pop
or
mov
mov
mov
mov
mov
aad
mov
dec
stos
clc
ficompl
pop
orl
mov
scas
push
mull
sub
push
les
add
jge
cli
pop
test
out
adc
outsb
xor
add
xor
shrd
xor
pop
jno
inc
imul
jg
jno
push
mov
xchg
sbb
das
lds
xacquire
insb
sub
or
lods
jb
cmp
cli
mov
dec
dec
mov
subb
add
push
jge
mov
add
mov
mov
movsl
push
nop
xor
into
imul
push
cmp
xchg
xchg
push
imul
and
popf
fwait
setb
jle
jmp
int
movntq
out
or
xor
aas
aaa
dec
mov
cmpsl
xlat
mov
jns
fists
pop
mov
sub
aas
mov
hlt
sar
jo
int
push
mov
cli
into
aaa
shll
lret
dec
pop
es
and
ficomps
and
mov
out
push
repnz
and
dec
jno
out
dec
divl
jo
mov
mov
sub
dec
add
inc
mov
push
sbb
shll
inc
lods
jnp
mov
je
jmp
loop
clc
xor
xchg
movsb
out
stc
inc
imul
xor
mov
xor
std
pop
push
out
fwait
cmp
pop
push
push
add
sbb
iret
sti
jbe
pop
movsl
jns
mov
adc
jge
sbb
xchg
cmp
or
ret
inc
out
data16
fwait
cwtl
jo
sub
push
inc
mov
sahf
and
mov
test
incb
cmp
pop
and
pop
pop
lret
push
jecxz
je
aad
cmpb
sbb
leave
push
iret
inc
fwait
adc
das
ret
jge
push
decl
movsb
imul
or
add
xchg
push
jge
inc
jae
loopne
xor
xor
test
stos
cmpsl
sbb
shrb
pop
fists
and
push
push
inc
loopne
xor
hlt
cmp
xchg
mov
cmp
mov
xchg
xorl
xor
subl
add
mov
mov
incl
mov
inc
mov
movl
cmp
jne
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
pushl
call
jmp
mov
or
xor
add
mov
adcl
mov
and
xor
add
mov
movl
mov
xor
mov
movl
and
movl
andl
mov
inc
mov
cmpl
jbe
jmp
call
cmpl
jb
mov
sbb
mov
and
mov
adc
xor
xor
add
mov
mov
mov
movl
je
movzwl
or
mov
or
mov
adcl
xor
movl
xor
sub
neg
sub
adc
xor
xor
or
sub
mov
mov
and
mov
subl
add
subl
imul
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
movl
cmpl
je
cmpl
jb
jmp
call
mov
dec
mov
jmp
mov
xorl
mov
sbbl
add
or
movzwl
sbb
mov
mov
andl
xor
xor
inc
mov
cmpl
jge
jmp
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
adcl
xor
andl
mov
andl
mov
mov
sbbl
add
and
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
call
jmp
mov
mov
notl
lea
add
mov
movl
mov
mov
sub
movl
cmpl
je
cmpl
jge
jmp
push
push
push
call
xor
or
dec
mov
jmp
add
mov
mov
adcl
xor
adcl
add
jne
movl
jmp
mov
adc
sub
xor
or
or
mov
xor
mov
mov
sbbl
mov
subl
xor
xor
movl
sub
andl
sub
xor
movl
mov
mov
mov
jmp
mov
mov
xorl
xor
adcl
xor
sbbl
sub
or
sub
andl
xor
xor
inc
mov
cmpl
jbe
jmp
pushl
pushl
push
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
andl
xor
or
inc
mov
cmpl
jbe
jmp
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
or
jns
mov
test
mov
jp
adc
jp
in
outsl
mov
shrb
mov
sbb
xor
hlt
pop
push
insl
jnp
scas
in
mov
and
cmp
lds
xor
out
push
sbb
add
cmpsb
or
in
sbb
mov
loopne
cwtl
mov
aam
mov
sbb
sbb
mov
lret
mov
mov
adc
sub
pop
jno
push
test
lahf
jecxz
xchg
xor
inc
lea
sti
js
out
mov
imul
dec
and
jae
jp
push
or
add
addb
dec
and
pop
add
nop
hlt
mov
ljmp
mov
out
push
push
add
xor
push
xchg
lea
ljmp
push
mov
dec
push
jp
shrl
ds
test
loop
dec
movsb
aas
sti
repz
add
fmull
push
sbb
adc
add
fcoms
jnp
mov
adc
xlat
mov
stos
ds
scas
mov
cli
push
enter
cmp
jne
xchg
xchg
dec
cmpsl
adc
popa
lods
push
popf
in
insl
sub
lods
ss
test
mulb
mov
mov
xchg
mov
mov
iret
dec
jno
jb
test
inc
cld
cmp
aas
std
jns
xor
pop
inc
xchg
lods
push
test
mov
mov
cltd
je
repnz
push
add
out
out
sti
xor
pop
and
xor
pop
and
test
lahf
jb
cmp
inc
cmp
lea
xor
out
mov
jge
shlb
nop
mov
fildll
mov
xchg
fdivrs
jl
jmp
jb
sti
test
lret
leave
jns
adc
jb
test
std
sahf
sbb
xor
pop
fldl
fsubrl
xchg
outsl
or
push
inc
or
xor
mov
call
pop
mov
sbb
js
jne
inc
inc
gs
sti
movsl
lret
xrelease
mov
push
pop
pop
push
ret
add
jp
insl
xor
cltd
cld
hlt
in
call
aad
mov
lds
sub
imul
or
rcll
outsb
inc
sbb
aam
hlt
sub
jmp
mov
mov
sets
or
mov
xchg
sub
pop
pop
add
sub
or
mov
shrl
sub
imulb
idivl
out
sbb
cmp
iret
in
insl
mov
sub
bound
in
stos
in
mov
and
add
push
inc
cmp
push
pop
out
lret
fbld
adc
lahf
mov
cmpsl
mov
push
lret
mov
popf
push
int3
mov
jb
inc
mov
sti
inc
sbb
xchg
mov
cltd
and
inc
and
jne
shrb
daa
shrd
push
jb
mov
aam
add
push
cmp
rol
testb
or
movsb
jnp
cmp
stc
xchg
xor
cmp
pcmpgtd
inc
enter
aam
in
xchg
mov
adc
mov
inc
cs
and
test
cmp
push
and
test
xor
adc
inc
test
ja
jbe
mov
ja
leave
fimuls
movsl
les
cmc
cwtl
shll
lret
daa
out
call
jl
pop
daa
lods
or
sub
cmp
dec
ljmp
sbb
mov
or
into
inc
xor
and
and
sbb
inc
in
lock
xchg
es
adc
pop
mov
ja
inc
outsl
mov
adc
and
das
mov
adc
fldl
dec
ret
add
sbb
jae
int3
inc
pop
add
adc
inc
cmp
mov
xlat
mov
aaa
inc
pushf
mov
xchg
mov
pop
rolb
and
xor
add
dec
dec
fcom
insb
pminsw
sbb
mov
arpl
shrl
mov
cmp
ret
addr16
jmp
push
sbb
and
test
data16
add
inc
push
loopne
imul
pop
cmc
adc
sahf
iret
push
mov
push
loope
mov
mov
inc
cmp
cmp
cld
jb
out
jge
ret
out
cli
dec
aaa
xchg
fbld
push
call
dec
pushf
dec
pushl
ljmp
jns
shrb
pop
pusha
test
in
call
ret
out
outsl
push
into
clc
push
in
dec
pop
add
fidivs
inc
call
adc
push
cmpl
jge
subb
xor
pop
push
mov
jp
cld
out
cmp
lods
inc
cmc
lock
nop
testb
xchg
popf
js
daa
xor
in
inc
pop
mov
out
push
shll
repnz
and
icebp
jle
lahf
mov
pop
or
dec
mov
and
push
imul
or
jmp
sbbb
mov
adcb
sbb
add
adc
push
test
cs
lahf
jle
mov
mov
pop
lret
jg
popl
out
lret
iret
pop
lods
leave
ss
loop
hlt
xchg
push
out
cmp
pop
push
mov
stos
das
mov
sub
dec
adc
mov
popf
jnp
hlt
add
imul
es
jl
and
out
ret
scas
xchg
cmpsb
sbb
scas
xchg
dec
stos
and
mov
loop
xor
arpl
pop
mov
cs
hlt
mov
mov
mov
mov
or
sbb
adc
mov
or
sub
stc
ret
mov
int3
pop
mov
adc
sarb
or
stos
push
mov
jno
pand
in
mov
test
dec
pop
cmp
nop
in
ds
sub
icebp
icebp
lods
cltd
mov
out
lcall
out
jae
xchg
push
scas
lock
push
cmp
xor
jo
pushf
inc
mov
push
mov
cli
leave
ret
pop
push
leave
cmp
stc
les
push
aad
fcmovb
enter
mov
data16
push
push
movsb
daa
out
jno
je
or
pop
popa
sbb
lret
and
jno
jge
dec
mov
test
mov
ret
out
out
fs
pop
dec
les
adcb
cli
fdivl
sbb
push
or
jge
mov
push
pop
pause
xchg
mov
mov
dec
push
dec
icebp
jbe
or
je
gs
add
inc
in
shlb
cmp
or
jne
or
test
xchg
out
ljmp
mull
add
jb
loop
xchg
cmp
popa
pop
in
xorb
adc
adc
or
fdivrl
or
xor
daa
aaa
std
pop
xchg
aaa
fdiv
scas
push
loop
push
fidivs
stos
in
add
hlt
push
aaa
insl
jo
fldl
xorl
cmp
mov
pop
lahf
jno
inc
arpl
loopne
jle
jne
pop
mov
push
lock
cs
insl
in
push
xchg
mov
cltd
jg
and
movsl
ret
cwtl
adc
pop
xchg
dec
inc
cltd
es
cmpsb
rcrb
cmp
aad
jbe
cmpsl
inc
push
das
xor
cmpsl
pop
into
in
pusha
je
and
insb
nop
xchg
cmpsb
mov
aam
cmp
push
cmpsb
and
aaa
push
je
or
cli
xchg
or
push
fisttpl
xchg
addr16
adc
xchg
sub
leave
sbb
aaa
popf
std
decl
mov
mov
notl
sbb
mov
mov
add
pushf
add
push
addl
mov
movsl
xchg
cli
outsl
jbe
and
adc
mov
lods
jno
sub
mov
and
inc
call
cmp
push
lods
sbb
lret
loope
jne
std
push
inc
inc
mov
jbe
inc
xor
pop
pop
rorb
xchg
mov
repz
mov
jae
imul
add
jnp
push
movsb
push
xchg
out
and
mov
pushf
pop
sbb
inc
inc
fstl
and
sbb
daa
aad
lahf
jno
or
int3
jg
dec
dec
xor
push
out
xlat
mov
xchg
jae
addr16
mov
sub
sbb
in
frstor
fsubs
sub
pusha
gs
enter
imul
insb
pop
lds
cmp
sbb
and
mov
and
xchg
xchg
mov
and
push
push
push
mov
imul
cmp
lret
ds
xchg
mov
out
push
jmp
fiaddl
mov
or
mov
xchg
sub
pop
sbb
mov
faddl
rcll
popa
fidivrs
inc
xor
jmp
std
and
cli
push
movsl
add
scas
jb
xor
outsb
andl
or
mov
xchg
aaa
dec
add
push
cli
test
int3
xor
pop
xchg
push
push
insl
aam
stos
mov
sbb
jns
or
adc
push
adc
sub
int3
push
or
add
mov
mov
ficoms
xchg
cmpsb
stc
addr16
ja
dec
rclb
adc
imul
cmp
call
inc
or
or
fmuls
inc
ja
or
arpl
hlt
test
xchg
pusha
mov
push
lods
and
cld
sbb
dec
xor
xchg
cmp
sbb
cmpsb
sbb
pop
addr16
out
aas
jne
sbb
cmpsb
into
cmp
fldl
push
sbb
sbb
sbb
mov
adc
xchg
xor
cmc
int
pusha
adc
cmp
nop
xor
cli
gs
and
cltd
sub
icebp
mov
sbb
jecxz
mov
mov
pop
xchg
les
inc
add
std
imul
test
lods
daa
mov
dec
pop
mov
xchg
iret
adc
es
sub
loopne
dec
shlb
add
cli
mov
cmc
sub
dec
mov
jae
sub
stc
inc
pop
dec
jne
rolb
cmp
dec
mov
fs
insb
pushf
popa
cmp
jae
mov
push
pushw
rcll
out
or
xor
sbb
mov
push
and
add
lock
mov
loop
dec
lea
and
mov
mov
sbb
lods
sbb
mov
pop
aaa
aad
std
aaa
lret
call
mov
ffreep
les
push
adc
out
bound
sub
mov
pop
lock
aam
jnp
cmp
cmp
iret
jecxz
pop
mov
movsb
mov
jne
adc
in
jb
sbb
loop
jge
dec
ret
shl
jo
lcall
cmpsb
or
xchg
xor
jmp
addl
jns
rorl
push
lods
xchg
fistl
push
add
inc
cmpsl
sub
frstor
mov
mov
cli
cltd
fwait
les
rorb
sahf
outsb
jb
add
rclb
aad
push
mov
mov
jle
mov
sarl
xlat
daa
popf
cld
rclb
pop
mov
pop
pop
aaa
cmp
mov
dec
test
inc
mov
mov
fwait
arpl
cmc
mov
cmc
cmp
jae
lods
dec
sbb
repz
sub
cmp
icebp
je
mov
sbb
daa
mov
out
jle
int3
dec
sbb
pushf
push
push
push
pop
mov
daa
stc
rcll
ja
sbb
js
ds
enter
mov
cwtl
jne
push
cmc
scas
and
fisubl
jo
test
and
fs
push
pop
add
pop
pop
push
mov
out
bound
jge
iret
dec
mov
pop
push
ret
pop
fstl
ljmp
rcl
rol
xor
xchg
loopne
test
add
rorb
inc
push
enter
xor
xor
cwtl
sub
js
sbbl
mov
inc
and
aad
jl
adc
rcll
lods
mov
sbb
xchg
pop
int
lret
addb
mulw
cld
inc
in
cmp
ss
inc
cmc
mov
std
test
pop
out
inc
addr16
subl
popf
hlt
sbb
jmp
les
daa
lcall
inc
adc
pop
push
stc
adc
fadd
aaa
push
mov
lret
push
repz
sbb
xchg
lock
sbb
cwtl
es
fwait
pop
lcall
adc
into
fmul
xchg
lahf
push
call
add
clc
lods
mov
lods
aas
sub
mov
fs
or
inc
or
mov
cli
cs
loope
and
pop
adc
inc
xor
enter
dec
sub
rclb
adc
in
dec
adc
jge
mov
pop
sub
mov
pop
fistl
sbb
mov
roll
loop
adc
push
mov
mov
leave
movsl
jns
stos
push
jne
call
clc
pop
add
pop
inc
push
and
sub
aad
adc
inc
inc
mov
ret
xchg
cltd
and
into
inc
frstor
jno
in
in
mov
insl
lret
mov
aam
fidivrl
mov
scas
adc
mov
xchg
mov
out
icebp
insb
xchg
cmp
or
cld
adc
andb
sarb
inc
idiv
fs
mov
pop
inc
pop
js
loopne
fisttpl
imul
xchg
xchg
fs
jle
fidivrs
pop
sbb
les
add
mov
xchg
popa
mov
adc
sbb
out
mov
fiaddl
xchg
push
iret
ljmp
pop
xchg
fmull
stc
and
jns
ljmp
mov
js
scas
jb
push
les
mov
push
sub
pop
enter
mov
int3
jae
or
xor
push
dec
jmp
cmp
push
pop
fidivl
push
fcoml
sbb
adc
add
int
mov
sbb
cld
sahf
mov
sbb
xor
mov
pop
and
test
mov
neg
lret
popa
fcmovbe
adc
jo
cmp
adc
stc
dec
fisttpl
movsl
push
lock
cmp
dec
add
shlb
fs
jg
je
sahf
aad
mov
pop
rcr
cmp
stos
je
ror
rcl
sti
iret
sbb
cltd
rcll
dec
jp
lea
testl
gs
jo
fnstsw
mov
mov
pushf
addr16
jb
jbe
xor
fs
add
push
shlb
inc
ja
adc
out
sbb
repnz
inc
hlt
xchg
sub
shr
jne
cli
aas
test
mov
pop
jne
stos
mov
or
adc
fwait
or
dec
addr16
sbb
mov
ja
ss
jb
sbb
mov
pop
mov
enter
pop
mov
nop
push
pop
pop
xchg
in
add
scas
lahf
rcrl
add
sti
arpl
dec
push
repz
sbb
xchg
xchg
loope
pop
jne
fs
or
or
add
xor
mov
jle
inc
mov
jmp
rorb
out
xorl
sub
pop
es
dec
repnz
xchg
pusha
std
lret
xor
mov
js
mov
lret
in
ss
insl
rcl
cld
pushf
mov
ja
push
jbe
cmpsl
lcall
xlat
loop
xor
popl
cwtl
pop
ja
cld
jp
adcb
jle
fwait
mov
mov
adcb
and
mov
sbb
mov
sbb
or
pop
mov
sbb
xor
mov
rcl
mov
nop
mov
adc
pop
xor
insb
mov
daa
cwtl
pop
mov
and
mov
mov
sbb
add
mov
insl
add
mov
sbb
xorb
and
in
dec
mov
std
and
add
imul
mov
mov
fs
push
push
les
push
cmp
pop
mov
test
adc
lahf
xlat
add
scas
scas
cltd
rolb
loope
add
gs
idivb
mov
push
in
mov
sub
aaa
pop
sub
inc
jb
repnz
mov
adc
pop
add
notb
mov
cwtl
insl
gs
jae
out
add
movb
std
jbe
sarl
jne
push
dec
jbe
aaa
rorl
imul
aas
test
jl
nop
sbb
cmpsl
sahf
push
and
pushf
cmp
mov
popf
push
pusha
add
psubsw
mov
lds
fnstenv
not
inc
mov
sbb
or
out
popf
and
add
lods
xor
xor
and
in
add
outsl
enter
xchg
fwait
mov
xchg
je
stos
enter
mov
call
loop
aad
nop
and
xor
jnp
xor
mov
sub
in
dec
add
jecxz
aas
push
js
jno
mov
xlat
insl
and
push
xor
movsb
pop
mov
and
enter
add
mov
sbb
fcoml
dec
or
mov
add
pop
outsl
mov
mov
outsb
push
xor
or
out
in
add
leave
pop
and
and
sarl
ret
enter
pusha
xchg
je
fsubl
push
std
lahf
stos
leave
sub
repnz
jle
lret
gs
sub
inc
stos
js
lret
xchg
mov
popf
jns
cmp
imul
fwait
add
push
popf
inc
or
pop
and
cmp
dec
dec
jp
cltd
ss
into
cmc
nop
inc
cli
dec
or
pop
jle
test
jnp
dec
cmp
cmc
lods
js
mov
xor
fucomi
mov
sarb
mov
btc
gs
push
loopne
sub
add
jb
mov
and
aaa
mov
loopne
popf
enter
xchg
mov
pop
jl
jbe
dec
fildl
incb
push
fisubs
push
jl
pop
adc
flds
push
mov
pusha
loop
xor
jno
lea
or
and
adc
mov
in
and
or
push
dec
fldcw
shl
test
insb
lods
scas
push
and
sbb
outsb
leave
mov
or
and
xchg
mov
loopne
orb
shrl
pop
clc
aas
out
sbb
push
cmc
mov
shrl
sahf
js
xor
jo
inc
rclb
aaa
insl
and
sbb
push
push
bound
and
repz
imul
mov
inc
lsl
cltd
iret
inc
mov
js
adc
rcrl
sub
inc
aaa
or
stos
jecxz
movsl
pop
xchg
mov
add
cmp
lret
repz
popf
pop
lods
dec
ljmp
shr
pop
lods
add
pop
out
inc
insb
pop
aad
dec
lods
arpl
rcrb
ficompl
movsl
mov
dec
jge
dec
cmp
sahf
and
mov
cwtl
std
les
push
fldenv
lcall
xchg
or
dec
ffree
scas
lret
mov
jecxz
jns
inc
cmc
inc
rorl
and
jg
fimull
inc
dec
or
xor
xlat
jnp
pop
cmp
pushf
cmp
xchg
insl
daa
sbb
lods
push
and
cli
push
int
mov
sbb
or
cltd
scas
stc
enter
fmul
xor
fs
frstor
inc
nop
sub
or
sti
and
jmp
push
popa
xor
and
mov
mov
or
jae
mov
push
popa
jae
jecxz
test
adc
cmp
ss
xchg
or
adc
sbb
or
clc
pop
insl
push
dec
das
xor
jbe
jbe
sub
add
dec
test
and
fdiv
movsb
enter
xchg
pop
pop
pop
and
mov
and
jae
les
rcrb
data16
dec
fsub
lods
sbb
flds
pop
pop
ds
jmp
add
push
cmc
dec
mov
out
sub
lock
xlat
cmpsb
icebp
outsb
out
cltd
dec
aad
mov
jae
push
adc
cmc
mov
movsl
out
or
call
cmp
adc
xor
adc
mov
dec
loope
cmp
sbb
bound
les
and
jno
insb
sahf
mov
fstpl
cmp
fwait
push
sbb
rcl
sub
cmpsb
sar
mov
int3
add
jge
and
adc
rorb
and
int3
inc
xlat
jbe
dec
insb
jb
or
mov
jo
pop
mov
and
andb
mov
mov
popl
rol
addr16
jne
outsl
mov
hlt
nopl
dec
sub
mov
scas
gs
decb
inc
sub
popf
xchg
pop
out
adc
sbb
test
pop
aad
add
insb
ljmp
mov
lock
aas
repnz
and
jp
adc
sub
stos
and
lea
nop
adc
daa
adcl
xchg
incb
pop
loop
int3
push
mov
dec
data16
lea
add
fs
cmc
sar
xchg
mov
pop
sbb
inc
inc
rep
cmpsb
or
pop
dec
jmp
jbe
shl
add
cld
sub
and
es
add
sbb
push
movsb
lret
sbb
xchg
rol
sub
sub
add
imull
inc
cmp
sub
cmpl
mov
cs
dec
mov
pop
adc
scas
cltd
lret
fwait
inc
pushf
jg
dec
rclb
cmp
mov
mov
cwtl
sti
in
push
scas
fstpl
sahf
adc
dec
pop
jno
xor
rcrl
pop
popf
iret
fcompp
sub
or
lods
out
sbb
or
xor
subb
mov
in
dec
dec
pop
in
and
imul
popf
jmpw
fs
cld
mov
adc
ljmp
mov
push
outsb
cli
fsin
outsl
shrb
xchg
xor
out
fiadds
add
xor
ds
jo
mov
out
pop
pop
dec
or
sbb
pop
push
and
rcrb
sbb
and
push
out
pushf
out
xchg
mov
loopne
cmc
rcrb
xchg
jns
mov
dec
insl
fucomip
jae
insl
int
mov
int
inc
mov
mov
pop
iret
mov
aaa
pop
fstpt
in
jp
lret
xchg
fwait
insb
jp
sbb
out
sbb
sub
jg
ljmp
insl
popa
xchg
clc
lcall
mov
xchg
mov
call
fldcw
loopne
mov
int
cmp
pop
repz
cld
mov
add
xchg
icebp
loope
add
mov
sub
imul
stc
sub
jbe
pop
add
cltd
xchg
push
rolb
das
gs
sub
xor
or
xchg
out
aam
push
or
push
inc
jle
icebp
mov
ja
adc
sbb
dec
xchg
pop
sbb
add
or
mov
imul
pushf
and
push
es
jns
and
mov
pop
cld
push
aaa
mov
pop
xchg
shr
mov
outsl
sub
xchg
cmp
lahf
out
pop
clc
sbb
xchg
push
sarl
ret
jno
lret
xchg
lods
sub
out
jecxz
mov
std
pop
sbb
inc
out
pop
aas
insb
sbb
xlat
push
jnp
rorb
pop
jecxz
gs
add
roll
popa
cmp
push
push
pop
ds
in
push
pusha
sub
fs
cwtl
jne
nop
in
lods
xchg
ss
ds
cmpsl
push
mov
ds
xchg
ret
pop
xlat
fimuls
or
or
and
and
push
sub
mov
mov
call
lds
in
mov
mov
push
mov
repnz
mov
mov
aas
sti
fwait
cmpsb
repz
cli
loop
mov
pushf
mov
adc
outsb
add
push
dec
push
fiaddl
or
jle
sub
pop
into
sbb
inc
mov
jbe
addr16
andl
mov
push
sbb
sbb
pop
or
notb
mov
cmc
sub
jle
fwait
adc
lret
ds
xor
inc
pop
mov
enter
mov
outsb
clc
push
mov
stos
cmp
mov
pop
out
xchg
rcrl
jmp
cwtl
xorl
cmp
xor
aad
mov
inc
mov
push
pop
pop
mov
in
test
dec
fwait
ja
arpl
inc
clc
lock
cltd
add
inc
out
mov
stos
pop
mov
repnz
xor
push
shlb
mov
insl
jae
lret
movl
mov
dec
outsl
mov
and
mov
push
mov
cmp
sub
pop
inc
std
pop
fcompl
inc
cs
iret
pop
sbb
in
pop
mov
push
push
imul
imul
sbb
add
mov
dec
push
push
sbb
sbb
fcmovb
mov
xchg
adc
cmp
imul
fistpll
dec
xor
mov
jae
fs
xchg
lea
ret
nop
jge
pop
lock
jg
cmp
xor
movsb
or
fwait
jns
sub
jb
clc
adc
jecxz
xchg
loop
pop
push
lret
jno
aas
icebp
pop
je
cmc
and
push
add
and
adc
dec
fucomip
mov
push
subl
and
dec
mov
xor
cmp
call
cmp
ja
fstl
and
fldt
hlt
call
mov
ja
pop
lcall
lods
push
mov
lcall
sbbl
push
ret
push
add
jnp
dec
movsb
mov
pop
mov
lea
fs
data16
mov
insl
mov
and
mov
negl
mov
lahf
adc
popa
dec
addr16
push
test
filds
or
xor
repnz
push
in
xor
mov
jmp
ljmp
pop
mov
and
fs
mov
mov
mov
je
xor
jp
mov
dec
pop
fbstp
jl
ret
stos
xor
sub
mov
mov
shrd
pop
jle
inc
sti
fstpt
fs
jle
sub
sbb
cmp
and
vpsubw
cli
test
mov
inc
inc
push
clc
enter
mov
test
xchg
push
in
push
cmpsl
push
cmp
faddl
cmp
call
loop
add
add
shrb
mov
leave
cwtl
xchg
movsb
add
mov
xchg
jbe
add
pop
xor
scas
xchg
ficompl
scas
or
add
fstps
mov
push
hlt
out
xchg
push
testl
and
cmp
call
fldenv
and
call
cld
mov
rclb
cmp
int
xor
shrb
pop
pop
mov
xchg
push
fs
cmp
jb,pn
xor
push
movsb
insb
mov
push
mov
xchg
pop
lods
enter
xchg
inc
insb
test
insl
popf
sbb
mov
jns
je
sub
xchg
jne
out
test
shlb
jns
das
or
in
dec
fsts
cmpsb
insb
in
xor
pop
sbb
out
cmc
sub
adc
inc
or
mov
mov
jle
mov
loope
mov
dec
mov
sub
mov
fstl
add
sub
xor
adc
xchg
add
getsec
sub
push
xor
popa
and
scas
push
scas
movsb
xlat
sub
stc
fildll
mov
hlt
push
test
inc
jmp
and
out
loope
int
and
mov
lret
sub
jne
mov
ffree
add
add
jo
dec
int3
cltd
pop
ret
push
sbb
push
ja
dec
and
out
cmp
scas
add
ret
iret
pusha
and
pop
xchg
mov
mov
add
sbb
jbe
stc
mov
mov
jne
clc
xchg
enter
cmpsb
ret
xlat
jg
lods
pop
cmp
addl
jmp
jae
xor
cmp
addl
adc
xchg
lods
insb
pop
adc
popa
in
inc
gs
lret
dec
popa
pop
and
scas
repz
jle
mov
cmp
xor
xor
movsl
pop
scas
add
xchg
and
insl
jns
mov
lret
jmp
mov
sub
test
out
xor
adc
mov
mov
pop
jl
rclb
dec
adc
fsubl
out
mov
imul
pop
push
pushf
or
andl
notl
test
int
xor
imul
arpl
dec
cmp
int
mov
mov
adc
ljmp
test
lahf
leave
in
fwait
add
mov
sbb
leave
cli
sbb
push
adc
imul
xor
clc
or
mov
xchg
ret
aam
pop
daa
fistl
cmp
dec
enter
or
rcll
and
push
les
mov
mov
fnsave
cmp
jmp
repnz
mov
pop
ljmp
mov
aam
cwtl
sbb
sub
jmp
pop
insb
jb
outsl
dec
inc
es
adc
pop
pop
insl
push
add
xor
xor
aam
or
and
cli
mov
pushf
mov
divb
xchg
xchg
out
pinsrw
sbbb
dec
sub
jle
inc
aas
push
inc
xchg
orb
mov
fimuls
and
in
pop
ljmp
pop
pushf
cmp
mov
divb
aas
into
mov
aam
loopne
mov
mov
lahf
xchg
add
sub
enter
jo
xor
inc
xor
mov
lods
inc
into
pop
popf
std
inc
sub
mov
mov
xor
xor
sub
mov
inc
mov
in
ficoml
das
scas
stc
push
inc
daa
in
jbe
loopne
into
lahf
inc
mov
xor
push
cwtl
xor
push
aaa
and
shlb
ljmp
mov
aam
das
insl
lret
mov
dec
mov
or
push
and
jo
pop
aas
out
sub
dec
dec
inc
and
lret
rorb
fnop
fmuls
jecxz
jbe
call
inc
js
push
fidivl
arpl
cld
ret
std
mov
popf
mov
mov
inc
je
iret
cmp
or
xchg
movsb
mov
dec
cmc
in
mov
mov
push
pop
xchg
scas
add
in
sub
xlat
imul
sar
cmp
pop
je
jae,pt
loopne
movsl
mov
pop
lret
out
and
xor
cmpsb
call
in
xchg
dec
ljmp
pop
lds
xor
fnstcw
cs
mov
bnd
mov
adc
adc
and
fists
test
fcom
mov
push
or
test
ret
push
add
scas
rorl
or
pushf
clc
add
rorl
or
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
jmp
lods
xor
out
fwait
fwait
sub
fnstcw
jp
pop
jp
xchg
shlb
rclb
gs
in
add
sub
mov
arpl
sbbl
mov
frstor
stc
cmp
and
pop
in
and
and
in
inc
mov
sti
or
test
pop
test
mov
mov
out
rcrb
pop
push
push
xor
adc
pop
inc
iret
stos
mov
test
iret
sub
lock
push
out
data16
addr16
sub
adc
js
xchg
testb
idivb
cmp
leave
arpl
sub
aad
mov
jnp
sbb
stos
aad
fcmovnb
cmc
lret
aad
or
sahf
jmp
xor
movsl
test
add
popa
je
xor
enter
xchg
mov
mov
stc
inc
xor
jo
aam
fisttpll
dec
push
insl
xchg
pop
and
call
push
pop
pusha
iret
rcrb
inc
cs
mov
cmpsl
sbb
decl
jle
cmp
jns
sub
or
js
xchg
aaa
mov
mov
add
adc
xor
dec
out
dec
mov
nop
jne
mov
test
imul
mov
shrl
add
and
filds
enter
mov
dec
loopne
mov
loopne
xor
mov
dec
adc
shl
pusha
fucomp
push
outsl
in
stos
mov
mov
push
pop
in
mov
add
ljmp
gs
pop
fcoml
inc
add
lret
jb
gs
inc
xchg
mov
cmpsl
mov
test
cmpsl
jl
xor
pop
mov
mov
xchg
in
sub
mov
or
or
mov
mov
push
mov
push
push
sub
mov
lret
clc
jle
imul
shrb
mov
lahf
cwtl
mov
fs
dec
movsb
les
popa
test
rol
data16
cmp
test
aaa
pop
stos
fildll
rcrb
lahf
jbe
and
addb
test
jle
push
sbb
fwait
cli
mov
leave
mov
std
movsl
dec
ret
sub
dec
movsl
rclb
fbld
jp
xorb
and
cltd
loop
and
psubb
inc
mov
fsubrs
mov
push
test
jbe
jno
loop
push
jae
stos
out
sbb
pop
mov
xchg
fwait
pop
shll
repnz
mov
gs
push
xor
lds
insl
fnsave
mov
fdivrs
div
and
movsl
pop
ljmp
mov
leave
jle
sub
inc
mulb
sub
iret
les
lods
dec
cmp
adc
pusha
js
ja
jne
cwtl
stc
lods
cmp
clc
mov
and
xchg
fwait
dec
fsubs
lcall
jno
into
jl
mov
insl
aad
adc
mov
outsb
aam
mov
push
loopne
test
outsl
push
adc
push
add
mov
loop
cmc
lods
in
pop
sbb
ds
xor
xchg
xor
jecxz
xchg
ss
xchg
and
fmuls
in
sbbl
std
jl
and
cmc
dec
push
aam
aaa
jbe
fs
je
mov
lcall
leave
sbb
test
aad
rorb
ss
insl
cpuid
mov
pop
notb
pop
imul
sbb
adc
sbb
jns
test
std
mov
pushf
addr16
sbb
fcmovu
jno
das
bnd
pop
lods
cmp
out
push
aad
adc
xchg
mov
adc
xor
lret
mov
and
or
or
pop
inc
lods
mov
jne
psadbw
inc
or
cld
and
in
stos
insb
ss
les
push
and
in
mul
movsl
or
xor
out
push
dec
ror
cli
inc
mov
jb
movsl
cmp
shlb
mov
push
sahf
sbb
scas
aas
xor
scas
ds
mulps
xor
sub
and
fadds
sbb
mov
and
in
push
lods
push
fsubrl
sbb
loope
imul
mov
mov
cmp
jo
or
in
arpl
cli
ret
mov
sub
xchg
sahf
dec
dec
add
loope
andb
sub
mov
arpl
jbe
and
imul
pop
scas
jnp
mov
push
mov
and
dec
das
and
mov
push
mov
sub
inc
push
add
sbb
ljmp
xor
daa
mov
ljmp
xchg
sub
adc
iret
push
pop
mov
lahf
mov
cltd
pusha
popf
adc
sub
push
push
add
cmp
loope
and
sbbl
cmp
sarb
inc
push
cmp
xorl
lods
pop
xchg
pop
and
insl
and
cli
idivb
cmc
sub
cld
adc
xorb
pop
push
mov
mov
adc
xor
ret
mov
xchg
fmul
ss
nop
stos
ficomps
push
or
mov
dec
pop
dec
push
lea
insb
push
inc
addr16
xor
and
test
mov
shlb
cmp
test
lret
fs
gs
push
jb
enter
movsb
and
dec
mov
lahf
jp
xchg
stos
mov
push
loopne
adc
pop
mov
lods
or
imul
test
shrb
rclb
fstps
ror
dec
cmpsl
xlat
cmp
call
aas
cmpsb
mov
mov
xchg
icebp
push
cmp
push
sbb
fnstenv
ss
lods
add
nop
into
add
loope
lods
xchg
ss
cmpl
test
pop
cld
mov
fisubrl
push
xor
lods
sub
aaa
pop
ljmp
pusha
jnp
push
sub
stos
imull
cli
aad
and
adc
jns
lods
push
out
pop
cmp
xor
dec
xchg
add
sub
arpl
inc
push
pop
xchg
fs
lock
xor
cld
pusha
pop
je
in
pop
push
sub
adc
leave
inc
push
fcomi
js
xchg
xorl
adc
rcrl
ja
and
dec
xor
dec
cmp
cmpsl
cli
pop
mov
psrld
mov
in
ret
xchg
loope
xchg
aas
aam
or
pop
cmpl
outsb
test
adc
out
mov
in
adc
xor
mov
stos
pushf
sbb
dec
stc
push
inc
ss
push
push
jecxz
mov
out
insb
or
mov
jne
into
xchg
sbb
push
arpl
inc
in
divb
xchg
or
les
lea
xchg
mov
lds
inc
repnz
or
incl
push
mov
inc
xchg
mov
out
sub
adc
outsb
lahf
rclb
push
leave
inc
jl
xor
push
mov
jae
aas
or
popf
mov
outsb
roll
rcr
adc
push
sbb
cmpsl
daa
sbb
scas
xchg
je
mov
adc
sarb
jge
cwtl
rorb
out
inc
sahf
lds
jle
mul
into
das
les
aam
jo
repnz
cmp
es
in
repz
adc
xchg
xchg
std
or
push
sbb
sti
dec
mov
pop
adc
xchg
fidivs
xchg
push
jne
push
js
movl
ds
les
xchg
cmp
lcall
lret
mov
push
int3
sub
repnz
xor
sbb
push
adc
mov
mov
add
xor
jg
fisttpll
or
mov
lret
scas
rorb
add
jns,pn
pushf
xchg
hlt
mov
cwtl
aas
mov
sahf
stc
cld
rcrl
inc
jle
cmp
mov
or
dec
nop
pop
mov
fidivl
shll
clc
outsb
xlat
in
fisubl
in
inc
push
or
sbb
or
jae
ja
mov
cmp
cmp
pop
lock
pop
loope
pop
inc
sbb
adcb
add
icebp
dec
mov
jg
pop
mov
lds
push
sub
inc
ret
xchg
sbb
popa
push
ss
outsb
xchg
test
ficoml
sbb
mov
dec
cmp
cmp
add
inc
jbe
rcll
clc
mov
sbbb
jne
mov
pop
popa
xor
and
xchg
pusha
or
mov
pop
loope
sub
pop
sub
nop
mov
jnp
sub
dec
xor
mov
mov
cltd
pop
shl
das
jne
loop
lcall
fsubs
fisttpll
cltd
inc
push
fisttps
pop
leave
cld
inc
jo
ror
or
push
xor
cmp
arpl
cltd
test
negb
mov
jge
in
jae
add
cli
lock
push
lret
adc
pop
fcomps
xor
daa
mov
es
sti
cmp
sbb
mov
test
mov
push
jg
pushf
insl
xchg
rorl
xor
xchg
cmp
fstl
push
popa
mov
xchg
das
inc
or
stos
adc
test
sub
or
ljmp
cmp
pop
jns
test
ret
mov
frstor
iret
inc
sub
or
roll
mov
push
les
loop
mov
test
jbe
push
imul
mov
xlat
mov
or
pop
xchg
bound
inc
jo
mov
or
cmpsb
or
jp
fmull
nop
pop
xchg
cltd
test
lock
sbb
clc
pop
ds
js
dec
sti
adcb
mov
inc
jecxz
jp
ss
clc
int3
xlat
add
fists
stos
stc
sbb
lods
and
pop
mov
clc
pusha
test
push
or
fcmovbe
negl
clc
and
jecxz
vrcpss
xchg
jo
jnp
push
test
cmp
aas
loopne
xor
and
rcrb
mov
xchg
rclb
cmp
push
mov
push
jno
lock
loop
and
inc
pop
popa
mov
and
popf
xor
xchg
aaa
pop
loopne
mov
sub
addr16
sub
je
inc
mov
xchg
pop
out
jno
and
pusha
pop
lods
mov
int
jo
je
call
pushf
scas
in
xor
ljmp
sbbl
pop
jl
mull
push
sbb
jo
das
loopne
push
cmpb
adc
in
sub
or
out
jno
mov
jnp
outsb
mov
mov
icebp
fs
imul
scas
hlt
lret
mov
and
ja
cli
loop
bound
aas
scas
iret
sbb
cmp
jb
jbe
and
dec
xchg
call
int3
cmpb
cmp
mov
mov
inc
push
cld
fucomp
cmp
xchg
outsl
or
out
cmp
jno
mov
pop
fists
ret
aam
adc
jae
test
xor
jmp
sbb
inc
xchg
jo
aam
dec
sbb
mov
dec
shrb
loopne
mov
aas
nop
lcall
adc
push
sbb
call
mov
adc
xor
in
imul
shlb
pop
sub
inc
mov
adc
js
jmp
fcoml
enter
mov
jmp
out
xchg
push
xor
adc
cmp
jge
adc
sub
jle
test
and
mov
pop
mov
xchg
inc
dec
test
adcb
add
xchg
test
es
push
jge
nop
andl
inc
adc
dec
imull
pmullw
call
orb
mov
ret
inc
sbb
ljmp
push
adc
popf
add
jbe
loopne
ficoml
mov
arpl
cmpsl
loop
mov
sti
or
ds
sub
pop
or
mov
jne
sahf
test
jbe
xchg
test
incb
out
into
adc
shlb
jmp
inc
or
xchg
stos
jmp
cmp
inc
insb
dec
cld
andl
loop
idivl
xor
stos
cltd
lods
lret
lods
push
xchg
sti
pusha
shlb
mov
aam
lea
stos
inc
push
mov
daa
or
inc
test
push
cmpsl
in
sbb
out
bound
ds
xchg
ljmp
xor
aam
rolb
sub
pop
jns
out
mov
xor
shll
mov
push
icebp
fimull
int3
jp
lods
call
and
imul
insl
pop
outsl
dec
jb
roll
xor
xchg
mov
int
ret
loope
mov
pop
imul
mov
iret
push
add
clc
and
xchg
xor
cmp
jb
or
ljmp
xchg
jnp,pt
andb
test
mov
outsb
daa
inc
pop
pop
scas
ds
mov
mov
enter
in
es
mov
inc
repnz
sbb
xor
rolb
out
adc
in
fsub
int
push
das
ucomiss
inc
push
or
add
push
stos
xchg
outsb
cs
inc
rorb
test
jo
adc
cmp
dec
data16
shlb
imul
jns
jecxz
add
inc
push
cltd
sub
pop
add
cmp
cli
mov
dec
cmp
int
clc
sub
mov
cmc
ss
cs
pop
dec
mov
mov
mov
xor
test
lea
outsb
movb
mov
or
cld
decb
jmp
adc
pop
insl
aam
push
mov
or
push
and
inc
daa
repz
xor
inc
cmpsl
dec
scas
int3
mov
mov
pop
jmp
cmp
addr16
scas
pop
add
inc
fs
popf
daa
aad
into
cmp
imul
sbbl
adc
hlt
fidivrl
add
push
jmp
jo
sahf
jle
cmp
hlt
mov
lcall
cld
loop
loope
push
sbb
mov
sub
adc
les
out
lret
fiadds
or
cld
push
pmulhw
xor
xor
insb
cmp
or
pop
outsb
test
clc
and
cmc
lock
sahf
stos
pop
add
xlat
and
daa
mov
push
inc
jbe
mov
add
sub
mov
fidivrs
mov
cli
mov
in
pusha
or
push
pop
cmp
push
arpl
aas
jae
or
sbb
out
sub
fadds
dec
stc
jnp
inc
shll
bound
jle
inc
ds
in
jp
mov
jl
stc
inc
mov
push
cmp
mov
xor
rclb
xchg
je
sbb
lods
stos
ret
mov
out
dec
adc
stos
jb
pop
js
leave
mull
xlat
dec
cs
test
or
sti
iret
mov
inc
jg
fistpl
xchg
adc
push
sar
icebp
and
add
mov
and
inc
outsl
pop
sahf
push
push
inc
mov
cs
in
lret
jg
ljmp
pop
insl
sbb
stos
add
fbstp
sbb
and
dec
call
test
cltd
sbb
pop
dec
dec
mov
test
fisttpll
movsb
jb
sti
cmc
sbb
inc
mov
sub
stos
and
lea
push
push
and
add
mov
test
pop
inc
loopne
cs
dec
adc
jge
push
out
ret
in
fwait
xchg
push
or
cmp
lock
sahf
cmp
mov
jns
cs
in
ret
test
pop
mov
lods
pop
idivl
rorb
pop
xor
cwtl
xor
sbb
out
neg
fisubs
push
dec
xchg
adc
mov
xchg
xchg
hlt
pop
insl
lret
out
jmp
sbb
pop
inc
outsl
mov
mov
and
mov
mov
jb
mov
adc
out
mov
mov
ja
mov
dec
lret
ja
sbb
mov
in
loopne
ffreep
jbe
ret
dec
pop
push
iret
push
xchg
sub
iret
fisttpl
loopne
dec
sub
addr16
aas
push
push
adc
add
adc
das
and
lods
hlt
subl
jne
mov
fimull
inc
cmpl
pop
jno
dec
push
mov
cmp
sub
lock
mov
adc
icebp
shll
rcll
mov
inc
daa
xor
dec
pushf
mov
outsl
shl
mov
or
pusha
xchg
sub
or
orb
lds
jg
adc
push
pusha
stc
fstl
cmp
ja
adc
stos
bound
pop
cmpsl
xchg
arpl
stc
aaa
aad
fs
out
iret
pop
leave
sti
ret
dec
das
scas
ficompl
mov
cmp
pop
lods
mov
data16
shlb
add
rclb
insl
fstpl
lahf
mov
sub
int
sti
mov
lret
mov
sbb
aam
lret
out
xor
push
add
movl
popa
mov
imull
or
jmp
imul
inc
adc
dec
add
outsb
mov
and
jp
mov
xchg
scas
iret
xor
in
mov
pusha
js
xchg
divl
insb
adc
mov
xlat
shrl
dec
test
insb
dec
and
adc
fcoml
pusha
scas
pushf
mov
inc
pop
in
xor
sub
mov
fldcw
cmp
mov
or
mov
mov
push
adc
es
out
ret
test
cmpsb
insl
inc
es
test
adc
jp
and
mov
adc
add
jg
pop
stos
ret
das
and
aam
mov
fildl
ficomps
sbb
pop
xor
int3
adc
sub
mov
test
pusha
aad
mov
rcr
es
call
lahf
int3
jno
adc
and
jns
inc
inc
ret
sbb
sbbl
ficoms
jmp
xchg
shrb
cmp
lods
mov
movsl
pop
adc
add
xor
jmp
or
ljmp
inc
int
into
paddw
mov
jo
add
adc
push
xchg
ljmp
fsubs
subb
mov
test
jne
or
sbb
aad
fdivrl
push
hlt
mov
daa
into
push
xchg
test
test
pop
inc
xor
adc
jl
fsubl
test
xchg
frstor
test
dec
lock
or
nop
cmp
test
or
mov
enter
scas
sub
filds
stos
cmp
push
aad
mov
push
adc
and
cld
sahf
push
or
js
xchg
push
or
ret
mov
mov
sbb
jbe
sahf
adc
imulb
cmp
pop
pop
sarl
sbb
decb
iret
inc
scas
jle
push
jb
lcall
in
pusha
mov
mov
cmp
lcall
sub
push
cltd
add
pop
test
xchg
les
inc
or
mov
sbb
stos
push
xor
pushf
loop
pop
mov
dec
or
je
pusha
pop
lods
outsl
mov
and
jecxz
and
pop
cmpsl
push
jnp
mov
or
mov
lret
fwait
and
test
enter
add
push
and
inc
and
mov
push
and
sti
test
pop
or
cwtl
iret
push
sti
sub
filds
dec
adc
iret
push
test
jne
lds
cwtl
fisubs
pushf
aas
add
sahf
imul
leave
cld
fildll
rcr
xor
les
cmpsb
cltd
call
xor
sbb
adc
insb
lret
int
adc
lock
imul
mov
aam
popa
dec
lahf
mov
insb
subl
ret
dec
hlt
pop
jnp
jmp
jle
gs
add
cmp
dec
inc
movsl
mov
loop
mov
adc
mov
jns
fisubs
scas
and
les
push
aas
cmpsb
and
cld
add
ss
popa
sbb
add
in
popl
int3
adc
daa
jp
mov
stc
adc
push
mov
mov
xor
and
and
xchg
es
test
add
mov
outsl
mov
lret
jnp
imul
push
into
lock
push
cmp
pop
xchg
sub
adc
bound
add
mov
sbb
jns
fcmove
mov
repnz
xchg
inc
icebp
popa
or
call
fidivl
jg
cmp
insb
adc
mov
lret
imul
or
sbb
cmp
push
mov
mov
idiv
cli
pop
flds
leave
outsb
xlat
push
sbbb
cld
push
das
pop
xor
cwtl
lods
sub
lret
lahf
ja
ljmp
jbe
dec
out
push
incl
insb
mov
adc
inc
sarl
jmp
adcb
andl
xchg
mov
aad
pop
xor
inc
adc
subl
and
rolb
inc
sbb
lods
mov
repz
fisubs
add
mov
repz
imul
rorl
sub
test
iret
fucomi
xchg
out
and
rcr
je
inc
jmp
sbb
sub
mov
aad
add
dec
aam
ror
jmp
jo
icebp
insb
sub
insb
je
mov
mov
adc
jno
inc
lret
pop
sbb
int
inc
out
push
mov
xchg
inc
adc
xchg
mov
dec
punpcklbw
xchg
mov
push
adc
adc
nop
rcrb
cmc
push
mov
cmp
adc
xchg
cmp
mov
push
inc
test
sbb
add
lahf
xchg
adc
repz
rol
cwtl
or
or
sbb
out
rol
dec
aad
das
sub
sub
lahf
mov
xor
bound
xor
pop
push
or
sub
cld
shrb
scas
test
mov
push
xchg
ss
insb
filds
lods
scas
push
mov
js
scas
in
pushf
cmpsb
dec
xchg
jb
mov
xchg
jne
jg
push
jp
cmpl
lcall
pop
outsb
mov
and
mov
pop
or
stc
mov
pop
lret
mov
imul
push
cmp
xor
outsb
mov
inc
js
cmpsl
daa
dec
sub
mov
test
aam
clc
xlat
cmpsl
sarl
add
xchg
push
or
sub
or
sbb
pop
aaa
add
enter
shlb
sarl
lret
insb
xchg
dec
aaa
xor
or
cmp
ret
es
dec
push
or
sbb
mov
cs
lods
jmp
mov
dec
mov
sbb
ror
gs
fsubrl
xor
cli
sar
adc
mov
ja
pop
push
jbe
into
mov
add
lds
mov
pop
movb
add
pusha
mov
fs
fcomps
stos
xchg
in
add
outsb
imul
fwait
or
adc
jmp
loope
adcb
mov
or
in
push
aad
stc
in
test
mov
shlb
out
shl
and
cmp
jmp
fsubl
cmp
jnp
rol
add
mov
popf
jmp
out
pushf
jl
lea
mov
mov
xchg
inc
cwtl
mov
loopne
mov
adcl
jecxz
mov
add
or
mov
push
adc
fstpl
andb
push
add
or
sahf
lret
cmp
adc
mov
gs
inc
cmp
add
lea
int3
sub
xlat
and
pop
mov
sar
sbbl
push
insl
cmpsb
push
iret
cli
or
into
inc
into
jno
push
ffreep
inc
lret
mov
frstor
sarl
push
aas
lea
push
js
pop
je
insl
sti
test
cmp
pop
cmc
decl
fwait
scas
test
add
sbb
dec
std
loope
popa
icebp
xchg
popf
rolb
call
cmp
mov
insl
int
add
sub
nop
sub
daa
push
add
movsl
fstpt
pop
or
xchg
push
ffree
sbb
pop
add
cmp
lds
cmp
mov
imul
jp
sbb
dec
mov
lcall
pop
jmp
or
push
into
pop
jno
push
add
jl
mov
xor
add
cltd
stos
or
sti
aaa
push
into
dec
movsb
mov
push
int
pushf
les
inc
sti
insb
pushf
call
mov
data16
xor
mov
push
in
push
inc
jne
mov
in
imul
out
push
mov
xchg
cmp
shlb
sahf
nop
bound
ret
dec
outsb
scas
xor
stc
push
mov
lret
jae
push
mov
sahf
lock
push
stos
fs
jae
dec
stos
test
jo
aam
outsb
jmp
sub
xchg
adc
repz
dec
cmp
lock
out
insl
aaa
jle
stos
cmp
loope
fstpl
das
imul
loope
pop
jns
pop
jne
hlt
scas
cmpsb
lret
or
add
inc
scas
pop
lea
out
sub
and
leave
add
dec
lods
mov
inc
jecxz
stc
xchg
stos
pop
pop
enter
popa
mov
jle
inc
pop
cmp
stos
sbb
mov
inc
test
es
fbld
stos
js
mov
loope
sub
and
icebp
ret
lods
push
aaa
push
pop
xor
push
mov
shlb
or
dec
mov
sub
and
sbb
mov
sub
mov
sbb
je
push
ds
fimuls
push
icebp
inc
inc
pop
pop
ret
enter
test
inc
mov
cmp
dec
sbb
insl
dec
sar
pop
test
enter
adc
add
pop
pusha
filds
fbstp
or
ss
cmpsb
add
nop
sti
or
rcll
lahf
pop
cmc
pop
sbb
or
mov
mov
or
add
mov
or
pop
push
jae
inc
dec
lahf
push
popf
imul
sbb
in
mov
mov
sub
rcrl
insb
ss
inc
adc
xor
cmp
mov
xchg
iret
lods
mov
cwtl
adc
adc
jp
pop
sbb
mov
mov
mov
leave
jp
jl
xchg
dec
aaa
out
js
cld
xor
movsb
mov
inc
mov
dec
mov
dec
inc
xchg
mov
fnstcw
add
mov
mov
sbb
gs
adc
mov
sub
dec
mov
jo
add
jnp
sub
je
aas
cltd
xor
into
rcl
xor
pusha
adc
xor
ds
clc
pop
loope
shl
inc
stos
rclb
sarb
mov
jns
stos
mov
add
xchg
das
add
shlb
movsb
and
cmp
addr16
xor
push
cmpsl
shlb
cs
mov
xor
cwtl
in
or
fsubr
add
out
les
bound
rcrb
or
dec
dec
xor
in
push
sbb
clc
shrl
cmpsb
into
mov
rcrl
push
pop
jbe
pop
ja
repnz
dec
push
aam
push
pop
icebp
xor
outsb
xor
test
jns
dec
fs
sbb
add
mov
mov
fildl
pop
mov
and
push
inc
stos
sub
mov
in
inc
pop
push
cs
imul
xchg
fs
push
dec
cmp
lock
and
mov
dec
push
or
lds
clc
ret
inc
movsl
sbbb
ljmp
aam
daa
inc
push
imul
sub
xchg
mov
or
add
sub
cmp
xor
xchg
repz
lods
cmp
cmp
sub
push
jne
dec
cmpsl
sbb
fs
ret
aas
jg
jg
mov
mov
mov
cmp
scas
outsb
add
test
clc
pusha
pusha
dec
mov
push
pop
test
sub
sti
outsb
push
cltd
push
jge
aas
xchg
jae
inc
loopne
inc
inc
lea
jge
jo
lea
lahf
lds
jbe
fsubrl
lret
mov
dec
and
mov
aas
sub
sti
push
es
adc
mov
aaa
fwait
and
inc
sub
xor
adc
pop
jo
data16
xor
or
std
imulb
dec
sbb
insb
add
xor
nop
insb
data16
push
popa
je
mov
inc
cltd
mov
push
ret
out
sti
out
loope
mov
fbld
and
xor
push
scas
or
mov
pop
jae
mov
mov
jmp
dec
mov
push
jo
push
sbb
xchg
scas
insb
xchg
jl
subl
in
je
mov
cwtl
push
xchg
adc
es
je
aam
cmp
cwtl
mov
xchg
ljmp
in
out
mov
outsb
lahf
imul
push
imul
cmc
lods
cmp
popf
dec
jecxz
ss
xor
das
or
mov
inc
mov
scas
jae
push
ret
xor
in
leave
adc
mov
std
out
cmpsl
pop
dec
xchg
pop
lods
xchg
push
jle
or
mov
pop
cmp
popa
out
cltd
push
fsubrl
pop
jle
ret
xchg
adc
int
fndisi(8087
ret
cltd
mov
sub
insl
add
shlb
lahf
iret
into
mov
test
adc
or
jb
call
mov
and
decl
xor
xchg
or
pushf
mov
inc
sub
mov
fdivrs
sbb
push
pop
dec
pop
insl
mov
cmp
push
inc
sbb
jns
jg
ret
mov
push
add
hlt
xchg
jp
push
push
and
jo
divl
dec
pushf
inc
loope
adc
or
lret
out
jmp
out
cmp
mov
lock
push
or
xor
repz
mov
adc
out
test
inc
inc
aas
cmpsb
hlt
cmp
shrl
mov
outsb
mov
inc
rclb
call
push
mov
push
gs
fnstsw
mov
cmpsl
mov
xorb
sahf
sub
sbb
daa
fldl
mov
jbe
fdivs
push
js
cmp
and
dec
js
jb
pop
roll
pop
stos
in
xlat
cmp
roll
xchg
out
xor
mov
xchg
ja
lret
inc
mov
pop
push
les
pop
int3
cmp
xor
enter
test
andl
sub
cmpsb
ds
test
mov
nop
leave
fsubl
pop
jne
sbb
push
inc
sti
push
xor
add
mov
je
jmp
cwtl
add
or
test
pusha
mov
mov
xor
pusha
jns
adc
jp
xor
fwait
pop
lock
cmp
arpl
push
sbb
sub
imul
push
jbe
xchg
sbb
lahf
inc
pop
pusha
mov
pop
push
mov
xor
movsb
lret
aas
lcall
test
cmp
orb
outsl
test
mov
xchg
or
push
aaa
lods
inc
lahf
xor
inc
mov
xor
adc
jl
pop
aad
lods
add
inc
aam
lret
lcall
in
adc
mov
push
in
rolb
int3
mov
mov
dec
in
orb
hlt
sbb
push
lds
and
sub
popa
mov
or
testl
clc
fmuls
test
movsl
aam
xorl
xchg
test
nop
imul
push
mov
rorl
sub
sub
mov
out
fsubrs
add
js
inc
rcrb
movsb
lret
inc
mov
cmp
fwait
gs
jno
js
cmc
jno
es
sahf
sahf
mov
pop
std
sbb
add
cmp
repnz
sbb
push
xchg
out
inc
dec
push
js
push
out
bound
sbb
gs
mov
pop
ja
mov
pop
scas
push
cmpsb
adc
test
movsb
push
mov
enter
ret
out
mov
push
push
xchg
mov
mov
sarl
push
dec
dec
fstpl
lods
outsb
or
and
add
cmp
adc
jg
lret
aam
fistl
pop
adc
sahf
inc
pop
test
repz
mov
std
fnstcw
repz
and
stos
fcoms
inc
jnp
jno
test
insb
ret
iret
outsl
jg
subps
dec
ss
fcomps
cmp
roll
jo
faddl
sbb
push
cmp
ficoml
sarb
sbb
jb
cmp
orb
adc
jne
adc
shll
in
xor
push
push
pop
dec
pop
sub
shll
les
and
mov
and
imul
gs
out
or
sbb
sub
or
int
popa
dec
cwtl
lea
jge
clc
adc
pop
shlb
xchg
gs
adc
inc
mov
cld
jns
mov
push
add
xchg
sub
rclb
in
mov
xor
inc
int
or
mov
mov
push
mov
cli
mov
fdiv
push
pop
mov
inc
mov
sbb
adc
or
int
dec
fimull
in
lret
inc
fldl
jb
pcmpeqb
cmp
repz
lods
repz
sarl
dec
or
push
push
pusha
mov
add
pop
fbstp
inc
add
aad
mov
aaa
cli
mov
insl
rcl
ss
xchg
dec
scas
or
push
movsb
sbb
stos
inc
std
popf
add
xor
lds
jae
shl
out
adcb
fstps
xor
inc
or
mov
mov
xchg
and
hlt
or
ljmp
dec
in
inc
xchg
scas
mov
in
push
je
inc
jae
popa
aad
dec
and
add
bound
mov
sbb
sbb
stc
adc
jno
movsl
jg
lret
ss
mov
jae
pop
into
mov
adc
lods
enter
out
lahf
je
jns
out
loopne
and
test
lahf
adc
jae
dec
je
sub
inc
int3
adc
dec
xchg
movsb
pop
mov
std
jo
dec
adc
mov
dec
cmpl
mov
loope
loope
fadds
jne
add
xlat
add
lds
aad
pop
shlb
fwait
cmp
or
adcl
sahf
lock
jnp
xchg
lahf
pop
mov
stos
mov
into
pop
and
push
pop
test
adc
mov
in
in
shlb
jmp
aaa
shrl
push
dec
jne
xchg
repz
decb
mov
or
repnz
enter
mov
sub
dec
roll
mov
add
out
xorl
dec
dec
test
sbb
arpl
dec
inc
dec
xlat
xor
xchg
or
test
mov
sete
xchg
xchg
mov
jle
pop
mov
mov
xor
pop
push
fs
xlat
or
fnstenv
in
es
or
inc
inc
ret
cmp
popf
es
pop
test
cltd
pcmpeqb
jno
push
movsbl
mov
mov
fwait
or
movsl
hlt
or
faddl
fsubl
cmp
addr16
ds
roll
mov
out
pusha
out
les
aas
lret
or
xchg
mov
dec
std
addr16
ficomps
lods
cwtl
and
push
sbb
mov
ret
insb
mov
cmpsl
push
add
or
stos
jg
sub
adc
cmp
dec
push
pushf
call
cwtl
jecxz
lock
sti
or
test
lds
and
mov
das
mov
and
fwait
in
adc
daa
sub
xchg
sub
data16
out
push
sbb
std
lret
inc
push
push
flds
mov
lret
testb
mov
movsb
and
cmp
pop
add
inc
mov
mov
adc
into
jb
sub
pop
pop
ret
daa
lret
test
mov
clc
add
scas
aam
test
push
push
push
dec
rcll
dec
ror
ss
aam
lret
shrb
daa
test
call
pop
cmc
jb
and
cmc
sub
dec
jae
mov
aas
daa
fsub
insb
push
orl
inc
roll
mov
xchg
pop
push
insl
xor
decl
cmpsb
lcall
xchg
jbe
stos
icebp
leave
and
outsb
std
std
mov
out
inc
sbb
ljmp
fwait
adc
sub
inc
addr16
inc
ret
lea
mov
test
ljmp
jle
push
scas
mov
pop
push
out
out
popl
jmp
jnp
dec
xor
lea
push
mov
imul
shr
fistpl
inc
bound
outsl
jno
lock
mov
adc
les
push
hlt
les
jge
cld
cmp
sahf
pop
xor
lds
cmp
pop
aas
stos
out
mov
rcr
jmp
cmp
jns
rcl
dec
sbb
sbb
sub
into
sti
xchg
sbb
mov
and
push
aam
js
dec
daa
lahf
or
scas
lret
push
sub
in
in
lahf
aad
and
ret
lcall
inc
jo
repnz
xchg
dec
push
arpl
js
mov
jle
mov
and
mov
pop
dec
and
lahf
add
or
push
mov
cmpsb
ss
out
lods
mov
or
xor
stos
mov
and
cmp
mov
push
movsb
or
clc
lock
and
pop
add
push
pushf
iret
and
in
sub
mov
fimuls
ja
mov
iret
hlt
fcmovb
je
pushf
ss
push
and
sbb
xchg
mov
int3
add
aad
out
or
pop
push
cmc
sub
js
sub
ja
mov
in
jmp
push
add
lret
inc
outsl
iret
add
dec
out
movsb
adc
sarb
xor
dec
cmpsl
stos
mov
add
dec
cmpsl
test
loopne
call
cmp
xchg
jne
mov
cmp
pushf
sbb
or
pop
lock
adc
lret
arpl
inc
call
test
das
mov
jne
or
in
and
adc
inc
jo
sub
inc
and
xchg
jg
imul
mov
xor
xor
lock
jp
push
jmp
cli
or
inc
xor
xchg
test
mov
shl
lret
xchg
sub
cmp
adc
subl
cmp
int
inc
movb
ret
push
push
xor
and
lret
call
sti
jb
jns
mov
mov
enter
pmaddwd
mull
and
push
or
addr16
cmp
jo
xchg
xor
ret
stos
gs
dec
mov
sub
jno
sar
ja
cld
jbe
mov
and
insb
aas
mov
and
jno
cmp
mov
nop
xor
nop
jae
out
push
pusha
loop
cltd
xchg
lds
mov
lea
cmp
pop
pop
stos
mov
or
bound
aas
outsb
test
push
cwtl
cli
and
bound
cld
jne
mov
push
sbb
cmpsb
imul
cwtl
adc
hlt
insl
dec
inc
mov
in
or
xchg
iret
fiaddl
call
test
inc
mov
or
mov
add
sahf
into
xchg
inc
inc
loope
sbb
cli
mov
pop
push
mov
or
push
cmpsb
add
icebp
out
cmpsl
pushf
outsl
stc
xchg
out
fwait
repnz
pop
dec
in
jns
and
dec
insb
mov
js
aam
sbb
in
mov
test
dec
xchg
push
les
stos
loopne
mov
movsl
pop
xchg
test
mov
dec
sbb
in
call
enter
mov
fidivrl
cmp
mov
je
movsl
imul
dec
inc
push
mov
pop
daa
cmp
jl
aaa
jg
sub
cmc
ret
push
pop
and
xor
pop
fdivr
data16
mov
xchg
icebp
dec
loopne
jl
cmp
mov
or
cmp
in
and
repz
mov
into
pop
mov
cmp
scas
push
mov
add
xor
dec
adc
xchg
push
fistps
adc
insl
cmp
lds
add
scas
insl
mov
clc
mov
dec
jge
js
jmp
mov
or
movsb
push
pop
inc
aas
frstor
xor
inc
mov
jp
inc
shlb
cwtl
mov
lea
cmp
dec
xchg
inc
jb
cmp
adc
loope
and
cmp
cmp
scas
hlt
dec
jge
test
iret
jne
test
sbb
dec
jo
xchg
bound
mov
mov
lcall
subb
pop
xor
loopne
add
cmp
pusha
mov
inc
cmc
shlb
adc
mov
and
jo
pop
test
aaa
xor
sbb
sbb
dec
sbb
test
fadds
leave
xchg
addr16
lods
and
movsl
push
daa
or
mov
inc
add
pop
xchg
xchg
jg
jle
into
pop
fisubrl
mov
push
dec
adc
pop
or
insl
paddw
das
ja
pop
sbb
stos
mov
cmp
pop
in
mov
clc
js
dec
mov
pushf
inc
xchg
nop
sbb
mov
sub
hlt
loop
xchg
fsubp
or
movb
xor
lret
test
sub
xchg
xor
lea
in
fwait
inc
in
or
fwait
das
dec
leave
movsl
daa
mov
loope
dec
pop
xchg
aam
iret
mov
clc
lret
xchg
and
pop
add
lahf
xchg
ficoml
xchg
loop
stos
xor
add
mov
xchg
mov
jecxz
test
lret
outsl
cld
sub
add
std
add
mov
les
in
pop
aaa
inc
sub
incb
jbe
mov
pop
cmpsl
xor
dec
or
nop
adc
roll
movsb
mov
imul
pop
xor
movsb
jp
xor
mov
xlat
mov
dec
ret
cmp
jmp
cmpsb
rcrb
inc
jae
cmp
int
ficompl
js
std
mov
sbb
xor
and
test
movsl
in
popf
lret
pop
mov
dec
jns
das
jne
into
push
xchg
inc
or
adc
inc
in
jle
xor
xchg
sub
es
in
cld
call
or
sar
sbb
test
jbe
popf
leave
mov
adc
mov
fidivrl
out
cmp
sub
sub
loop
fbstp
sbb
lret
icebp
mov
jb
pop
and
fs
push
cs
jmp
dec
mov
pop
or
sbb
test
jle
and
push
mov
xor
ret
cld
mov
sbb
loopne
in
mov
ret
cmp
push
les
and
push
sbb
jbe
scas
in
fs
mov
lahf
std
iret
in
adc
call
xor
cld
jnp
repnz
pop
mov
addr16
xor
es
addr16
fsubl
xchg
data16
adc
push
inc
push
push
jl
dec
fwait
rcr
mov
push
fisttps
test
and
ficompl
add
shrb
sarl
emms
loopne
fwait
daa
fcmovnb
mov
xchg
mov
pop
popf
and
in
ret
adc
cmp
in
loopne
scas
pop
cltd
cmp
jnp
aad
xor
fnsave
in
xor
ljmp
mov
loope
push
inc
sbb
popa
sub
movsl
sub
out
mov
push
cmp
mov
bound
jae
jmp
push
or
adc
mov
xchg
loopne
outsl
or
mov
rcr
mov
test
mov
dec
inc
sbb
jnp
inc
adc
pop
mov
outsl
aaa
cmpsb
loopne,pt
loop
dec
pop
stos
dec
insl
inc
lret
mov
cmp
insl
xchg
mov
test
fstl
or
mov
add
sub
dec
cmp
sub
lods
decl
mov
mov
les
aad
push
sbb
jmp
jno
idivb
stc
mov
adc
pop
std
addr16
dec
test
inc
sub
pop
hlt
clc
jnp
in
sub
inc
in
adc
sbb
aas
out
xchg
mov
xor
mov
adc
sub
nop
div
xor
stos
test
jae
sub
cmp
ret
gs
inc
xor
loopne
push
sarl
jns
or
pop
in
jo
add
push
popa
sbb
icebp
and
add
out
aaa
xchg
repnz
outsb
xchg
push
dec
test
and
lock
dec
jns
inc
mov
ficomps
sahf
iret
push
ret
stc
out
or
sbb
out
jbe
insb
loopne
lods
or
call
mov
out
gs
inc
xor
ficompl
movsl
jae
aam
push
gs
lods
inc
fisubs
cmc
mov
loop
pop
int
shll
mov
int
lods
and
shll
pushf
mov
hlt
out
jae
std
adc
mov
sub
push
fadd
out
mov
mov
mov
inc
mov
push
fs
and
js
add
pusha
xchg
push
jg
scas
xor
xchg
adc
sbb
sub
cmp
xlat
notb
push
out
xor
or
dec
lods
push
fsubrs
out
arpl
mov
pushl
lods
popf
add
ss
jp
push
ja
lret
mov
mov
mov
mov
cmp
or
cmp
jl
mov
pop
xchg
std
jp
add
xchg
mov
ds
dec
jp
jae
and
pop
aam
sti
or
and
popa
pusha
in
cmpsb
sub
in
mov
push
add
les
psrlq
inc
pop
xor
in
sub
pop
mov
mov
es
mov
jae
arpl
ds
call
mov
mov
lahf
leave
ja
popa
test
add
pop
mov
pop
fstpl
jmp
mov
enter
sbb
or
mov
in
movsb
jecxz
push
xchg
lea
movsb
out
pop
cmp
xor
inc
loopne
call
dec
xlat
or
xor
repz
ret
inc
shr
push
fs
ljmp
into
insl
jecxz
stos
jle
pop
inc
lods
repz
mov
je
cmp
repnz
add
or
xor
lds
inc
push
inc
cmp
outsl
data16
outsl
popl
cmp
fnstenv
adc
pop
sbb
sbb
and
and
loop
scas
ja
rorb
jl
adc
pusha
mov
fwait
jge
cmp
push
or
scas
enter
jmp
jns
std
sbb
call
imul
adc
mov
rorl
pushf
adc
sarl
lods
ficoml
inc
stos
push
and
jg
out
fwait
mov
stc
mov
jno
mov
in
movsl
mov
cmp
jmp
pop
ss
fldlg2
pop
fisubrs
mov
cltd
sbb
xor
fimull
sbb
leave
ret
jecxz
cmp
xchg
xor
enter
pop
pop
insb
inc
fprem1
cmp
add
lahf
mov
and
test
xor
xchg
mov
je
repnz
in
push
cltd
fdiv
pop
pushf
sbbl
lds
or
xchg
jbe
cld
mov
fs
pusha
aam
mov
lea
aam
lcall
iret
mov
mov
and
adc
sub
out
inc
add
aaa
mov
adc
jle
daa
stos
fsub
xchg
jg
push
and
or
ja
jmp
rcrb
iret
popf
xchg
cmp
cltd
fists
add
add
je
add
xor
not
dec
insl
loope
fdivs
add
pop
mov
push
cmp
mov
cmpsb
sbb
std
push
fisubs
pop
add
jnp
nop
jp
sahf
out
lcall
xor
leave
or
test
mov
cltd
mov
movsl
rcll
ret
lea
repnz
jecxz
cmpsb
das
outsb
mov
out
aas
js
pop
ret
out
push
fcmovnb
insl
and
xchg
ret
stos
sbb
scas
inc
mov
subb
xor
mov
das
pop
fcmovbe
nop
jns
sub
leave
inc
pop
ret
arpl
lahf
lret
mov
icebp
test
xor
ret
push
xor
or
leave
mov
rol
dec
fnstenv
mov
jb
dec
cmpl
pop
mov
fistl
jae
in
fldcw
adc
mov
ljmp
mov
pmulhuw
jb
jb
sub
shl
sbb
inc
cmp
xchg
dec
stc
divl
push
push
dec
lds
fwait
in
into
mov
negl
or
mov
add
cltd
ret
fidivrl
lcall
je
test
xchg
mov
dec
xchg
fistl
outsb
sub
popf
fmull
and
jo
adc
sbb
push
bound
jecxz
clc
xchg
loope
inc
daa
repnz
push
mov
push
mov
mov
pop
popf
add
sub
xchg
fwait
repz
sbb
popf
hlt
push
mov
dec
sub
mov
mov
aam
adc
popf
in
stos
stc
xchg
inc
imul
out
add
jo
mov
std
cmp
and
mov
xchg
pop
cli
aas
inc
jno
cwtl
jle
roll
fsubrl
and
cltd
add
cmp
adc
gs
jge
mov
int
push
cli
and
imul
js
shrb
adc
sub
cld
xor
lock
insl
movsb
aam
jp
mov
and
sbb
scas
xor
mov
sbb
inc
pop
dec
lods
lds
cmpb
inc
pushf
icebp
add
sub
mov
mov
and
lret
rcrl
mov
mov
dec
jo
adc
outsl
push
out
ds
shrb
iret
std
xor
push
jne
sti
sub
loopne
mov
xor
and
call
pop
add
fmull
mov
pop
mov
push
ficompl
fimuls
push
and
fnstcw
daa
movsl
push
or
mov
das
mov
xor
jo
aad
adc
sbb
in
dec
lds
mov
push
inc
push
add
sti
vrsqrtps
repz
mov
imul
lea
xchg
sub
pop
mov
add
loope
stc
cmp
jl
jno
adc
sarl
icebp
imul
xchg
pop
xlat
jmp
lods
gs
pop
push
pop
out
add
lcall
pop
cmp
test
test
or
mov
pop
out
les
int
mov
push
mov
shll
or
sub
adcl
aad
movsl
xchg
les
in
inc
pop
inc
imul
mov
enter
in
inc
xchg
imul
jp
lret
jbe
or
push
xor
inc
test
pushl
push
or
xor
test
mov
mov
push
add
divb
movsb
mov
or
dec
iret
aad
out
cmp
inc
repnz
insl
xor
fstpl
xor
mov
out
cmp
aas
bound
leave
sub
andl
int3
fiadds
int
dec
mov
mov
jae
add
pop
push
in
cmp
ja
mov
inc
clc
icebp
jge
ss
push
pop
outsb
sbb
fdivrp
jno
test
push
add
lret
xchg
sub
push
movsb
and
shrl
inc
mov
pop
lods
je
dec
dec
mov
xlat
into
aaa
xchg
cmc
sbb
int3
mov
insb
push
ja
add
sarl
and
adc
lret
mov
sbb
mov
adc
es
add
dec
dec
cmp
loop
add
inc
aas
mov
mov
or
mov
lcall
cli
xchg
mov
xrelease
pop
dec
hlt
mov
loop
cmpsb
movsl
mov
jnp
out
pop
test
and
mov
scas
xchg
add
mov
jle
test
mov
imul
mov
lods
xchg
test
clc
push
mov
shlb
mov
dec
cs
sub
nop
cltd
aas
xchg
sarb
movsb
xor
sbb
cmp
or
xchg
push
inc
sbb
add
mov
sbb
scas
rcrb
add
out
pop
cmpsb
pop
or
out
push
icebp
push
push
popf
lds
xchg
xchg
repz
cmp
adc
stc
nop
cmp
dec
sub
aad
lret
sti
and
and
shl
xchg
sub
xchg
jl
into
fisttps
or
mov
xor
insl
mov
mov
insl
ljmp
outsl
ret
mov
mov
fadd
jo
movsl
repz
xor
fcmovnb
jle
test
lods
dec
leave
sbb
jl
and
adc
jb
inc
std
aam
or
and
pop
jl
movsb
mov
orb
xor
mov
in
cwtl
or
loope
push
insl
sbb
adc
push
or
daa
cmp
mov
pop
pop
test
sahf
shll
fs
mov
aaa
shrl
ds
cmp
jae
cmc
xchg
mov
cmp
add
jns
add
rcrb
das
out
xchg
dec
sub
mov
jp
mov
leave
mov
inc
inc
push
mov
loopne
in
xchg
cwtl
mov
js
pusha
adc
push
jle
out
pop
xchg
push
inc
sbb
in
ja
ljmp
inc
es
shrl
cmp
popa
out
dec
mov
sbb
cld
cmp
and
jno
push
push
sbb
out
clc
aas
jae
add
out
push
scas
push
stos
loopne
fildl
sbb
mov
orb
push
mov
in
jmp
das
dec
in
push
mov
sub
mov
subl
push
jo
adc
push
push
add
xchg
push
lret
lret
inc
movsb
mov
jns
push
add
call
dec
in
mov
aaa
leave
lcall
jg
xor
mov
dec
or
adc
cmp
push
push
orb
jl
into
imul
xchg
dec
xlat
mov
pushf
xor
bound
or
test
sarl
xchg
mov
imul
jno
movsb
stos
negl
sbb
mov
ss
ja
call
test
mov
test
sarb
ss
jecxz
xor
xchg
test
mov
repnz
icebp
in
enter
aaa
mov
mov
xor
xchg
xchg
and
pop
push
xchg
jno
mov
push
stos
cld
aaa
ja
ficomps
outsb
sbb
enter
outsb
inc
xchg
stos
into
xor
jge
adc
leave
cmpsb
test
imul
push
dec
xor
lock
pop
not
push
stos
loope
sbb
pop
sbb
xchg
jg
rcrl
xor
lds
mov
repnz
lahf
test
fsubrl
mov
adc
add
idiv
add
pop
sarb
mov
inc
stos
jbe
fs
push
dec
xchg
es
adc
mov
sub
jmp
jmp
pop
lock
jmp
adc
push
movsl
lods
jb
imul
push
or
pusha
inc
lahf
js
or
fxch
or
xchg
mov
sbb
mov
mov
test
int3
inc
xchg
push
aas
cmp
pop
sbb
or
or
mov
insl
movsb
iret
cltd
adc
test
mov
pop
jb
fs
je
adc
jg,pn
jnp
push
fstpl
lret
push
int3
addb
rolb
inc
inc
jno
jle
gs
aas
mov
fs
repz
jg
es
incb
and
mov
xchg
push
lds
movsl
lret
cmp
or
movsl
stos
jne
cltd
ret
push
loop
stc
xchg
out
js
int3
andb
mov
repnz
or
pop
cwtl
push
mul
movhps
enter
cld
inc
outsb
dec
xor
lock
jns
push
call
inc
in
loopne
mov
or
int
fadds
jl
js
and
fs
and
push
xchg
je
repnz
daa
jnp
inc
into
fmull
pop
call
pop
inc
add
jno
mov
or
mov
out
popf
scas
mov
mov
add
dec
push
icebp
inc
int3
fisubl
mov
fsubl
insb
inc
jecxz
mov
stc
and
ficoms
in
fcompl
xchg
push
ret
imul
lret
pushf
jge
loope
imul
inc
mov
nop
ja
mov
xlat
pop
inc
xorl
clc
inc
inc
cltd
cmp
adc
mov
arpl
xor
fwait
xlat
test
jne
push
ret
in
sahf
xchg
stos
and
popf
add
cmp
push
push
jl
xchg
aaa
push
inc
lret
or
aad
cs
insl
mov
sti
sbb
jg
pop
sahf
xor
mov
pop
aam
jmp
mov
test
lcall
cmc
rcr
adc
js
lret
inc
lret
sub
test
insb
addr16
push
push
sbbb
test
loope
cmp
lds
dec
es
adc
push
loop
mov
mov
lods
mov
imul
cld
ss
mov
mov
mov
stos
aas
das
inc
mov
xchg
or
inc
nop
cmp
scas
cmp
repz
adc
ljmp
loope
push
xchg
es
test
clc
add
or
push
add
cmp
pusha
pushf
leave
movsb
dec
aas
sub
dec
mov
fdiv
push
out
mov
in
sbb
add
add
sub
shld
mov
mov
cmp
enter
cmp
adc
lret
push
pop
dec
int
cmc
or
das
test
jns
sub
xchg
jno
push
or
pop
popf
push
aas
jns
fwait
xchg
cwtl
std
icebp
test
in
add
test
mov
push
int
test
js
mov
add
arpl
cltd
cmpsl
imull
add
into
dec
in
push
xor
call
fs
fldt
test
test
push
or
ss
repnz
xchg
mov
das
inc
ds
mov
sub
inc
sub
push
loop
cmp
inc
lret
jb
xor
dec
js
js
pop
mov
jle
sbb
bound
popa
jae
loop
dec
nop
jp
hlt
jno
cmp
stos
xchg
adc
out
movsb
mov
sahf
shl
and
mov
in
nop
out
pop
fwait
xlat
in
sub
push
js
mov
call
lods
push
inc
rolb
imul
inc
jnp
inc
push
xor
mov
and
aas
xchg
imul
sub
outsl
sarb
mov
test
inc
and
cmp
in
sbb
mov
orl
fsubrl
in
iret
andb
popf
sbb
rcrb
lret
cmp
cmp
pop
sbb
js
inc
lahf
sarl
fidivs
xchg
sbb
add
dec
mov
ret
lret
iret
cmp
mov
or
mov
adc
cmp
scas
test
aad
outsb
addr16
data16
out
inc
int
xor
xchg
jb
push
popf
cmpsl
jbe
iret
lahf
xchg
rolb
push
lret
lds
sahf
subl
pop
jb
cmp
adc
in
sbb
dec
ss
mov
mov
mov
mov
icebp
lret
xchg
mov
xor
aaa
in
popf
push
test
inc
movsb
das
int3
icebp
push
cmp
pop
xchg
jecxz
xchg
and
pop
stos
lea
in
jge
or
pusha
ret
cmp
pop
push
mov
call
fs
add
cmpsb
jmp
pop
cmp
ja
sub
sbb
negl
jmp
ja
jne
mov
xor
mov
lahf
add
xlat
out
out
xor
jno,pt
mov
sbb
cmpsl
push
out
mov
cmp
loop
dec
js
fdivl
pusha
popa
scas
inc
dec
push
or
ret
lods
mov
mov
fisttps
cmp
ljmp
into
adc
and
mov
cmp
add
push
jl
push
dec
mov
xor
push
cmp
or
rcr
in
push
lcall
cwtl
inc
cmpsl
scas
jae
pop
xchg
add
jge
inc
rclb
shl
pop
inc
or
sbbb
scas
pop
xchg
xchg
lods
pusha
icebp
movsl
mov
inc
xchg
rorb
out
jb
push
push
mov
addl
dec
mov
lret
mov
pop
fstps
jecxz
xlat
lret
jp
rcrb
in
mov
or
jbe
xchg
pop
or
sti
jle
inc
pusha
dec
jl
cld
lods
sub
sub
jne
jb
push
pop
xor
xchg
lret
pop
mov
mov
pop
loop
scas
into
pushf
mov
jl
mov
test
adc
imul
and
add
lock
dec
jno
push
inc
xchg
xchg
adc
adc
xchg
jnp
in
sahf
or
push
jbe
lahf
arpl
adc
inc
movb
sub
jo
adc
repz
arpl
aas
mov
pop
aad
pusha
hlt
push
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
jmp
fidivrs
call
xchg
ljmp
cs
jns
adc
jp
or
push
pop
or
scas
jno
hlt
int3
xor
inc
filds
cmp
lds
sbb
dec
test
scas
int
mov
dec
popa
mov
aam
xor
push
sbb
lret
das
dec
xchg
or
inc
popa
add
sbb
fbstp
shlw
int
addr16
sarl
lods
movsb
shr
sub
lds
sub
ficoms
jg
test
sub
sub
xchg
fdivs
test
push
icebp
add
cld
icebp
add
inc
cmpsb
cmp
stos
insl
mov
add
ret
sbb
std
push
or
push
aaa
push
enter
popf
xchg
sbb
sbb
mov
inc
sahf
lods
mov
and
out
jbe
fcoml
or
xor
aad
xchg
lds
cmpl
cmp
push
add
pop
push
mov
jno
ds
leave
pop
xlat
imul
dec
and
push
scas
cmp
jg
jnp
cmpsl
jno
out
push
and
adc
mov
dec
or
mov
lret
lods
push
test
mov
xor
xor
mov
xchg
bound
int
into
outsb
or
xchg
sub
addl
pop
cltd
cmpsl
adc
and
xchg
and
fstp
and
popf
or
dec
loopne
out
shlb
mov
test
test
push
mov
or
and
mov
hlt
cs
cmp
movsb
cmp
bound
mov
adc
bound
pop
mov
xchg
add
andl
fstpl
inc
xor
dec
out
mov
xor
ret
stos
add
ja
add
mov
test
sbb
adc
cmp
sub
loopne
sub
movsl
andl
cmpb
jns
das
call
jb
and
add
sub
xor
leave
repnz
mov
pop
je
cli
mov
jne
push
or
lcall
xchg
mov
pop
adc
fdiv
sbb
mov
sti
cltd
or
in
or
aas
pop
sub
mov
mov
ret
mov
rorb
int
not
jle
xor
mov
in
outsl
aam
lock
in
cmp
sbb
push
dec
push
sub
push
mov
inc
mov
cmpsb
jbe
js
xor
pop
arpl
aas
aam
ja
jecxz
popf
cld
cmpsb
xchg
movsl
loop
fidivrl
pop
ss
xor
out
sbb
push
popf
push
fcmovu
jbe
sub
xchg
dec
dec
sub
movsl
addb
lahf
stc
mov
xchg
sbb
add
sahf
pop
outsb
mov
add
xchg
add
or
cltd
daa
cmp
dec
gs
cmp
loope
lcall
mov
data16
fwait
xor
shrl
pop
xor
outsl
mov
addr16
not
and
and
lahf
xlat
das
mov
icebp
mov
movsb
push
xchg
nopl
icebp
and
ds
ret
ljmp
insl
mov
inc
sub
xor
scas
andb
xchg
aaa
dec
sbb
sbb
pop
or
mov
jns
in
cmc
mov
aam
cltd
adc
inc
mov
or
adc
dec
aaa
outsb
mov
dec
inc
cmp
mov
pop
pushf
lock
and
adc
clc
lods
xchg
daa
mov
lock
push
das
xchg
aaa
sahf
push
sub
push
rolb
mov
push
stc
mov
lret
mov
sbb
mov
pop
cmp
dec
sbb
mov
lahf
adc
push
stos
leave
push
xor
imul
popf
lock
in
lret
out
rcr
faddp
push
bound
nop
mov
aas
jg
stos
movsl
mov
jb
add
divb
inc
pop
lcall
stos
shlb
hlt
add
subb
out
push
int
bound
add
loope
push
ret
inc
enter
sub
iret
insb
xchg
push
xchg
pop
test
cmp
stos
lods
cmp
and
ds
jmp
push
fsubr
sbb
aam
xchg
mov
jl
pop
jge
mov
lds
sbb
cmc
in
lret
adc
out
cs
jns
fisttpll
jp
inc
in
es
cmpb
cmp
in
sub
stc
jp
mov
push
push
mov
jle
sbb
cld
dec
rclb
and
pop
add
out
sub
jmp
mov
push
loop
movsb
cmpb
pusha
sub
in
sub
cmp
xchg
and
lds
mov
push
mov
dec
pop
xor
in
in
pop
sbb
sub
xor
mov
jg
popf
fldt
insb
add
les
lea
and
movsb
mov
push
int
scas
fcoms
add
mov
mov
jb
fildl
addr16
js
clc
aas
das
aam
repz
pop
sarl
stc
add
adc
inc
ja,pt
imul
mov
dec
lret
xchg
adc
xchg
lods
push
je
test
in
lea
aam
repz
add
and
mov
or
mov
loope
xchg
inc
inc
sti
inc
add
aaa
xor
leave
das
inc
mov
add
ja
sbb
mov
lret
data16
aam
dec
roll
sti
and
movsl
pop
movsl
mov
mov
in
pop
aad
in
xor
in
lods
xchg
sbb
inc
loop
gs
xor
call
data16
int3
sub
sub
das
ror
sub
addr16
mov
pushf
dec
shlb
and
inc
fwait
rcrb
cmpl
push
adc
pop
add
outsb
loopne,pt
pop
sti
int
popf
sbb
sbb
xchg
rcrb
mov
mov
lds
jb
jns
dec
mov
adc
mov
out
clc
lea
rcll
jno
pop
movsb
fimull
mov
sbb
es
sub
xlat
lods
inc
jmp
inc
push
imulb
std
ja
xor
dec
scas
or
ficomps
jecxz
inc
dec
cmc
clc
fsubrs
loop
jb
pop
sub
daa
add
sbb
cld
add
cmp
dec
xchg
arpl
mov
mov
dec
clc
fucomip
cld
into
xchg
sbb
jl
mov
jns
cmpsb
pop
out
inc
cmp
lea
mov
fistpll
cmp
sbb
loop
xor
cmc
movb
sub
rorl
inc
inc
loopne
xor
pop
fst
cmpsl
out
xchg
mov
dec
pop
lahf
popa
pushf
push
or
stos
jns
insl
in
loope
and
rclb
lods
mov
xor
out
pop
ljmp
xor
cmp
or
push
js
push
leave
fimull
pop
sub
stc
loop
and
sbb
cli
push
sub
mov
push
in
add
es
mov
add
mov
sarl
mov
add
inc
std
aad
hlt
push
dec
xchg
push
pop
mov
mov
in
mov
mov
inc
rcrb
jnp
cli
lods
mov
fldl
mov
pusha
mov
fmull
sub
in
ficompl
xchg
inc
push
imul
mov
xchg
ret
mov
loope
mov
sub
or
xor
jns
jo
cmpb
dec
xor
insl
mov
lcall
fistps
je
xchg
int
pop
insl
aaa
fildll
mov
imul
es
aam
push
jg
aad
dec
faddl
cmp
and
jge
xchg
inc
lock
fidivrs
lahf
xchg
jae
dec
mov
pop
cltd
push
xor
mov
shlb
pop
add
lahf
adc
sub
inc
stc
pop
pop
pop
jg
push
xor
in
mov
mov
xor
dec
jne
mov
push
mov
roll
pop
lret
push
mov
stc
push
test
xor
dec
loope
sub
sbb
ret
pop
and
mov
sbb
imul
mov
gs
in
cmp
orb
lret
ja
sub
jl
sahf
fld
xlat
lcall
jne
or
lcall
jp
test
cmp
in
orb
xor
lods
addr16
or
iret
xchg
push
loope
jb
icebp
lcall
fmull
push
jl
icebp
jb
pop
cmp
push
in
push
lahf
shrb
out
push
xchg
mov
into
lock
pop
mov
lods
cmp
jge
dec
popa
data16
jmp
jge
cmc
dec
cld
repz
lea
nop
and
test
sarl
sub
fxch
mov
inc
ror
pop
or
lods
pushf
xchg
fstl
rcrb
inc
xor
mov
std
pop
mull
sbb
mov
mov
fldcw
dec
rorb
into
addr16
jge
and
adc
adc
insl
push
outsb
ficompl
xor
out
aaa
jnp
call
and
aaa
mov
les
cli
or
in
dec
push
or
testb
xor
aaa
mov
push
add
jbe
movsb
sub
and
jb
xchg
ja
cmpsl
ja
insb
inc
cltd
xor
divl
mov
mov
xchg
pop
sub
mov
sahf
test
push
mov
gs
jbe
add
cmp
insl
add
loopne
fcomps
test
and
ljmp
sbb
test
sbb
aaa
insb
sbbl
jmp
or
inc
pop
push
das
xor
test
aad
adc
cs
test
mov
push
xor
sahf
cmp
mov
dec
popa
mov
sbb
cmc
das
mov
leave
cmpsb
in
jmp
pop
mov
sbb
jmp
out
inc
les
sub
pop
mov
sub
test
loopne
out
lods
into
iret
insb
mov
inc
push
aam
or
cmp
je
jge
xlat
outsl
test
sbb
mov
sub
or
rcrl
stc
leave
jle
or
movsl
mov
rcrb
iret
pop
adc
or
mov
mov
adc
pop
mov
fidivrl
popf
aas
add
ret
jae
fsubl
ficomps
inc
add
mov
pop
mov
cmc
add
call
sbb
rcll
fadds
sbb
mov
lock
mull
fildl
or
test
add
scas
jb
add
mov
mov
insl
or
loope
aam
cmp
es
aas
addr16
ret
ror
aas
rcl
push
int3
pop
push
push
aad
and
add
pop
call
and
dec
or
shl
gs
and
in
push
ljmp
divl
inc
fidivs
lock
lods
sub
sbb
or
or
or
jg
movsl
jmp
push
dec
aad
insl
pop
mulb
outsb
test
lea
jbe
rolb
or
mov
pop
cwtl
out
es
jecxz
inc
sbb
imul
or
sub
mov
insl
ds
pop
xor
xchg
cmp
pop
in
lcall
ret
mov
jmp
addl
pop
push
push
inc
test
mov
fsts
jg
icebp
gs
nop
fistpl
add
cs
mov
mov
mov
aad
xchg
lds
jo
dec
jle
subl
lods
adc
clc
cmpsb
mov
jl
icebp
sbb
imul
mov
inc
in
or
stos
pop
jb
lea
int
mov
mov
call
insl
mov
outsb
mov
out
add
pop
sarb
outsb
add
sub
out
xor
pop
adc
inc
ljmp
popa
jno
push
push
xor
and
adc
sub
sub
xchg
inc
push
add
adc
jnp
movsl
mov
ficoms
lods
test
dec
cmpsl
jno
pushf
adc
cli
lcall
jb
leave
mov
stc
fs
idivb
xchg
lea
mov
bound
clc
pop
adc
pop
sub
and
jp
xchg
test
push
cwtl
cmp
dec
pop
fstl
ljmp
jge
add
jnp
inc
pushf
pop
cmp
mov
xor
call
cmp
lret
cli
aam
ja
dec
clc
leave
push
or
sbb
rcrb
ds
ja
inc
or
cwtl
mov
testb
sahf
movsl
pop
pop
dec
out
movsl
insb
fwait
insb
push
sub
fsubs
aam
fiadds
mov
jnp
push
add
outsl
mov
inc
loopne,pn
aaa
cmpsb
and
cmp
shll
xchg
ja
push
ds
and
sbb
lods
gs
movsb
clc
mov
stos
nop
xchg
adc
mov
push
push
lock
cmp
adc
sbb
pop
and
add
in
mov
jno
xor
adc
cmpsb
out
mov
jbe
and
in
inc
inc
sbb
jp
mov
lods
inc
push
pop
and
xchg
cmp
in
lods
imul
mov
add
sbbl
stos
bound
adc
or
xlat
push
outsb
out
addr16
sub
adc
xlat
mov
dec
add
mov
lret
mov
mov
inc
gs
mov
sub
push
bound
es
xchg
sbb
mov
and
mov
repz
and
jbe
jno
sbb
mov
sahf
loopne
rolb
rorl
ds
cmp
fnstenv
test
cmp
jp
loope
pop
and
cltd
mov
sub
cs
dec
lret
mov
push
aas
ss
or
mov
xchg
fwait
dec
lds
push
out
sti
push
pop
fmul
mov
mov
pop
in
adc
jecxz
sbb
mov
add
dec
movsb
cmp
pop
inc
out
sub
scas
dec
xor
cli
stos
sbb
outsl
cmp
test
insl
outsb
jae
inc
add
sarb
push
scas
bound
or
inc
ud2
jge
push
mov
cld
cld
out
inc
xchg
mov
mov
dec
dec
arpl
mov
add
push
jnp
add
fsubrp
xor
sub
js
popf
movsl
mov
jb
jmp
scas
arpl
pop
enter
loopne
insl
enter
outsb
xor
dec
xchg
ss
inc
jb
into
out
mov
jmp
and
bound
sub
repz
aam
insl
sbbb
sub
jge
out
xchg
popa
push
sbb
mov
mov
leave
xor
jns
mov
in
addl
ljmp
les
push
mov
in
fmul
popa
inc
movsl
xor
ljmp
movsl
std
or
lcall
mov
lret
push
add
shl
inc
aad
xorl
js
xor
mov
inc
in
add
test
dec
hlt
aaa
jg
or
xorb
mov
data16
lock
and
mov
cli
pop
xor
stc
mov
pop
fstpl
cmc
nop
push
inc
pusha
icebp
mov
data16
dec
dec
ret
push
pop
cld
push
cmc
push
jmp
aaa
push
push
bound
int3
arpl
inc
jbe
dec
in
rorl
rclb
fwait
test
daa
adc
push
xor
xchg
xchg
cltd
imul
xor
and
jge
pop
cwtl
add
das
movl
repz
mov
into
dec
jo
rolb
sbbb
nop
dec
fs
push
sub
lret
ljmp
and
mov
imul
lahf
fidivrs
and
mov
dec
or
iret
imul
aas
and
and
insl
popa
pushf
insb
xlat
push
out
inc
ja
cltd
inc
lods
and
cmp
and
and
adc
or
js
adc
cmp
popf
sub
xchg
xchg
aam
inc
loope
scas
push
sub
mov
jp
mov
mov
xor
cmpsl
xchg
jp
fnsave
scas
ss
push
pop
add
ja
mov
and
lret
mov
decb
ret
inc
jns
movsl
fwait
fnsave
dec
das
pop
sub
xlat
push
clc
push
dec
xabort
ja
xor
js
cwtl
hlt
push
mov
and
mov
xchg
inc
sub
insb
pop
gs
dec
or
insb
out
rcll
xchg
xchg
adc
popf
mov
test
lock
mov
std
repz
inc
inc
mov
cmc
outsb
insb
rorb
push
fsub
mov
mov
in
repnz
adc
cwtl
stc
fldenv
test
popf
sti
mov
imul
cld
sbb
out
add
pop
repz
xor
dec
lock
dec
sub
xchg
adc
gs
imul
push
ljmp
jne
lcall
cmp
adc
ds
mov
xchg
scas
fwait
shlb
jno
out
add
sbb
mov
mov
jmp
sbb
dec
cmpsb
imul
xlat
xchg
dec
imul
fstp
sub
cmp
mov
push
cmpsb
out
ja
lods
pop
xor
inc
outsl
cmp
mov
cmp
fs
call
dec
add
xor
jle
dec
push
sbb
test
insl
sub
imul
xchg
mov
popf
mov
int3
sub
pop
ja
push
dec
push
push
inc
stc
in
cmpsb
xchg
xchg
int3
stc
adc
in
test
mov
mov
push
stos
scas
js
xchg
aaa
hlt
sub
or
cmp
into
and
sub
mov
push
mov
in
call
jno
or
mov
dec
adc
lods
roll
and
mov
add
adc
xchg
add
sub
xchg
xor
mov
xor
xor
lods
pop
fistpll
push
sbb
cmpsb
inc
cmpb
sarb
sbb
jle
fisttpll
mov
mov
mov
stos
xchg
push
add
xor
mov
gs
lods
cmp
loopne
mov
push
imul
xor
mov
dec
fimull
icebp
adc
repnz
pop
jo
dec
loop
and
lods
clc
jno
jns
push
pop
sbb
pop
imul
and
mov
add
ss
push
ror
mov
inc
icebp
mov
outsl
jl
cwtl
cld
xchg
mov
mov
pop
xchg
rolb
popf
xchg
sti
pushf
fscale
sahf
fldl
scas
mov
in
add
scas
movsl
sub
lods
fnsave
pop
or
push
sub
add
inc
rorb
jo
mov
test
push
push
mov
imul
and
enter
sbb
out
outsl
negb
sub
outsl
pushf
mov
sti
cwtl
rcl
movsb
sbb
js
fmul
das
fstpl
int3
xchg
gs
into
repz
fs
test
ret
cmp
in
cmc
sub
fpatan
pop
jecxz
lods
test
mov
jns
roll
mov
jne
dec
mov
jle
xchg
lea
fdivr
movsb
dec
pop
sti
out
mov
push
imul
pop
inc
mov
insb
push
shlb
fnstsw
dec
lock
mov
cltd
push
push
imul
outsl
mov
stos
repz
add
lock
test
jg
out
and
add
or
fnsave
xor
add
into
push
outsb
mov
push
es
mov
xchg
loope
ret
pop
cmpsl
insl
lret
mov
inc
mov
inc
in
mov
add
add
jg
sahf
sbb
pop
push
sbb
call
loopne
les
ficoml
stos
or
sub
sbb
imul
andl
insb
ss
xor
cmpsb
js
std
std
sub
jmp
sbbb
repz
adc
adc
insb
xchg
mov
dec
scas
stos
mov
xchg
jbe
shl
out
daa
fldt
les
scas
ss
cmp
add
adc
mov
cmpsb
mov
in
outsl
pop
insl
and
in
cmp
filds
or
jecxz
and
les
xchg
imul
lret
das
mov
sub
cmp
mov
jae
fwait
aam
pop
bound
push
fisubrs
inc
or
dec
dec
add
mov
xchg
nop
frstpm(287
test
cli
sbb
mov
pop
rolb
imul
cmp
jmp
mov
icebp
inc
sti
and
push
fwait
xchg
imul
and
dec
cmpsl
xor
jns
xchg
jecxz
stc
lods
fidivl
xor
aas
shrl
push
outsl
loop
push
bound
int
enter
pop
push
ss
xchg
cmp
mov
das
push
pop
sub
das
lcall
stos
aaa
int3
mov
mov
mov
or
push
aam
incl
ljmp
dec
cmpsb
pop
fsubrl
rcl
je
cmc
jno
call
sub
idivl
into
cmc
ficomps
or
jnp
inc
push
or
or
mov
add
push
ficompl
insb
cmp
xchg
popa
clc
mov
inc
clc
jo
xchg
sarl
xchg
test
mov
hlt
outsb
test
sahf
mov
jne
fiaddl
popa
cmc
aad
push
orb
mov
mov
jo
and
xchg
jnp
mov
push
sub
out
inc
push
daa
jl
cmp
dec
and
dec
mov
mov
lods
and
xchg
push
pop
stos
ret
xor
sbb
sub
negb
xchg
ss
xor
repnz
sub
jge
sub
jnp
pop
fdivp
out
mov
cmp
cmc
push
cmp
inc
jae
ss
ret
jl
mov
arpl
adc
aas
inc
sbb
sub
sti
enter
jp
and
mov
and
dec
push
nop
dec
cmpsl
adc
dec
push
mov
out
or
adcb
xorb
mov
sar
leave
sbbb
and
cltd
pusha
stos
jecxz
leave
outsb
lock
pop
loope
sub
aam
sub
xor
or
sbb
cli
mov
shlb
and
ss
in
xor
xchg
jp
std
mov
dec
arpl
jbe
pop
sbb
clc
ja
rcll
imul
pop
xor
pop
fldl
out
icebp
test
mov
outsb
and
xor
mov
dec
std
clc
sub
and
dec
inc
xor
jbe
mov
sbb
out
je
and
lods
aas
out
sbbl
or
push
shl
scas
mov
inc
cltd
and
sub
ret
pop
fmuls
mov
cs
sub
movsbl
test
cmp
pop
xlat
pop
pop
andnps
mov
popf
lcall
sbb
scas
arpl
out
inc
cmp
push
cld
dec
repnz
enter
mov
outsl
xlat
pusha
adc
ret
mov
xor
dec
sbb
lock
or
scas
inc
lcall
das
stos
jmp
push
jnp
aam
les
fs
adc
mov
loope
insb
pop
or
push
pop
dec
sti
mov
and
movsl
daa
ja
push
repnz
adc
out
fcoml
xchg
jg
and
nop
imul
mov
js
ret
inc
sahf
repz
pop
sbb
pop
fwait
jnp
loop
jno
rorb
jb
mov
cld
subl
in
mov
lahf
int3
jns
add
dec
cli
std
dec
mov
inc
sbb
add
divl
pop
inc
in
stos
inc
adc
test
push
aad
sarb
push
sahf
cs
gs
arpl
jecxz
add
nop
cmp
pop
xor
mov
lods
das
mov
dec
and
pop
mov
bound
push
adc
insl
xor
inc
testb
push
pop
dec
mov
nop
xor
or
out
mov
xor
add
ja
mov
sub
cs
or
fsts
add
mov
je
mov
ljmp
mov
or
aam
je
xchg
pop
xor
and
and
jl
subl
and
lcall
dec
in
mov
sbbb
jge
fisubrs
notb
roll
jp
jp
inc
xor
jle
xchg
xlat
jg
and
mov
mov
jmp
out
in
push
data16
or
sub
cld
jle
pusha
inc
mov
dec
aaa
xor
push
add
outsl
and
mov
fcmovne
loope
jecxz
dec
sbb
sbb
out
adc
xchg
add
cli
movsb
inc
lahf
ret
sbbb
jecxz
push
mov
outsl
mov
jne
and
insb
jge
adc
jmp
xchg
or
mov
push
mov
jae
push
out
je
in
sbb
es
jp
lahf
js
jmp
test
or
sbb
mov
imul
xlat
mov
mov
jg
mov
adc
inc
mov
cmpsl
xorb
xor
clc
add
mov
gs
call
orb
mov
sub
lods
mov
sbb
jno
fisttpll
insb
int
in
mov
mov
inc
shrl
push
jnp
test
xchg
lahf
inc
push
mov
xor
lret
push
incl
jae
xchg
adc
out
lea
in
sbb
mov
scas
ficoms
dec
shrb
lcall
sbb
xchg
push
xchg
mov
xchg
rol
ret
jp
inc
xchg
sbb
adc
popa
adc
cmpl
xor
mov
mov
int
out
dec
in
push
pop
and
lcall
ja
inc
mov
sti
xchg
loop
cmpsl
insl
push
loop
mov
scas
xor
and
mov
ja
and
inc
push
scas
or
inc
pop
inc
add
shrl
mov
push
mov
outsb
cltd
pop
notl
lahf
cmpsl
mov
cmp
or
mov
subb
and
mov
pop
ror
in
mov
bound
addb
mov
out
jge
push
mov
sub
dec
xchg
jns
cmp
jmp
jo
cmp
inc
xlat
pop
xchg
jb
push
mov
or
aaa
seto
fidivl
adc
cwtl
orl
pop
addr16
lods
xchg
mov
arpl
xor
sarl
out
xchg
mov
sbb
aaa
mov
jmp
sub
ja
push
sub
pop
dec
mov
jns
in
les
repnz
addr16
fisubrl
or
xchg
adc
cmp
call
popa
in
push
sub
lahf
out
gs
in
hlt
adc
cmp
jbe
jg
sbb
ljmp
enter
sub
lret
test
push
fadd
jge
adc
mov
pop
mov
scas
int
orb
cmp
mov
ret
cmovge
test
dec
xor
adc
lds
ss
sbb
cmc
jnp
test
xchg
cmp
mov
jg
aad
sbb
inc
cmp
xchg
xchg
jecxz
pop
dec
xchg
jle
push
push
cli
mov
xchg
push
int
mov
test
adc
repnz
mov
cmp
call
aas
inc
cmp
jns
hlt
fstpl
push
inc
outsb
push
xor
out
arpl
pop
sbb
xor
mov
cld
sbb
mov
xchg
and
xchg
cmc
pusha
addl
mov
jmp
repz
pusha
out
scas
arpl
jp
xor
in
outsl
xor
insb
cld
dec
scas
ss
inc
and
inc
iret
pop
daa
jp
rol
mov
pop
cld
jg
cmp
pop
push
and
mov
mov
or
mov
or
mov
and
int3
fucom
sbb
mov
pop
sbb
mov
inc
dec
into
mov
movsl
mov
mov
adc
popa
ljmp
push
into
jmp
shll
call
jg
inc
pop
mov
jbe
xchg
frstor
jl
sbb
push
mov
jecxz
lods
or
mov
sbb
and
pop
loop
das
xchg
sar
xorl
inc
mov
scas
call
dec
out
cld
lret
pop
inc
movsl
popf
out
enter
scas
cmp
bound
imul
push
fistpl
xchg
or
repnz
push
mov
stc
xchg
jno
push
lods
jne
push
xlat
or
push
sbb
mov
push
jne
inc
mov
rorl
jno
lods
inc
push
enter
cmpsb
inc
xor
std
sbb
pop
movsl
pop
pop
pop
sub
sbb
mov
cmp
addr16
cmp
add
mov
sbb
lcall
mov
sub
sbb
and
sub
and
sbbb
xor
stos
fnstcw
test
in
enter
xor
insb
nop
dec
or
cmpsb
lcall
push
add
icebp
dec
mov
sub
or
xor
and
sbb
pop
xchg
sahf
fwait
jbe
stos
dec
mov
pop
push
push
out
in
test
leave
stos
psllw
xchg
inc
push
or
aad
int
mov
iret
lret
mov
into
lds
inc
or
sub
cmp
xchg
add
inc
xor
cwtl
cmp
xchg
daa
and
jo
and
xor
pop
xlat
jo
push
xor
stos
mov
or
pop
call
jmp
pusha
cmpsb
fidivs
loope
outsl
mov
aad
or
out
dec
ffreep
jmp
pop
cmpsb
aas
xchg
push
out
imul
jl
mov
loop
jne
cmp
faddl
stos
insl
mov
movsl
jmp
leave
and
cld
cmp
cmp
push
pop
fs
in
pop
pop
arpl
and
test
sbb
inc
xchg
stos
inc
movsb
fs
enter
or
lret
je
lds
es
cwtl
in
push
roll
leave
shl
shrb
jge
ss
push
xor
js
insl
inc
sahf
fwait
iret
mov
xchg
xchg
or
imul
icebp
ret
xorb
cs
push
sub
mov
push
or
adc
cld
inc
add
or
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
jmp
stos
push
and
movsb
jnp
jge
xor
rol
sbb
adc
jp
dec
dec
mov
push
out
dec
and
int
push
aaa
int
push
scas
iret
inc
pushf
adc
add
mov
cltd
xchg
jbe
xchg
cmp
mov
sub
mov
dec
repnz
xchg
xchg
loope
mov
adc
sub
sub
xchg
int
jmp
fs
mov
jecxz
lods
loop
outsl
jne
or
dec
shrl
arpl
jne
jne
or
cli
push
inc
insb
ss
arpl
cmp
xchg
or
add
in
cltd
mov
test
push
lret
out
fldcw
imul
xor
enter
in
jle
cmc
scas
pop
dec
loope
in
fwait
xor
adc
mov
inc
loopne
add
or
mov
repz
adc
sbb
and
pop
cmp
cli
lahf
imul
or
loope
pop
jge
push
add
pop
in
push
rcr
pop
pop
push
sbb
add
or
outsl
out
cltd
cld
xor
mov
and
mov
xchg
dec
mov
inc
inc
dec
pushf
fiadds
push
mov
prefetch
or
jmp
inc
xchg
mov
cli
push
shrl
cli
les
push
mov
mov
push
mov
inc
add
xor
mov
lahf
cltd
push
lock
adc
jne
clc
jbe
fdivs
xor
pop
jb
jnp
test
daa
fsubrs
mov
in
mov
push
lahf
int
test
xchg
icebp
and
nop
shlb
push
add
bound
adc
in
repz
fxch
push
push
xor
in
sbb
das
xchg
mov
ret
and
pop
mov
push
and
mov
loope
xchg
rolb
adc
nop
lret
push
jmp
lea
fmull
xchg
js
jb
hlt
shr
test
push
push
in
jbe
outsl
cmpsb
and
pop
daa
popa
push
dec
dec
dec
outsb
jg
xchg
xchg
mov
nop
daa
enter
fld
pop
push
jns
mov
dec
jl
int
sbb
or
dec
into
mov
hlt
cmc
jne
xchg
scas
jne
jbe
into
daa
adc
daa
push
mov
xor
call
cmp
jmp
mov
inc
and
sbb
test
stos
sub
das
pushf
and
sub
cmp
and
mov
add
js
bound
inc
pop
xor
pop
xchg
xchg
jge
fmuls
push
pop
xchg
lods
stos
pop
loop
adc
xlat
push
test
push
push
lods
cwtl
fdivrs
mov
pop
ds
aas
gs
jns
gs
add
repnz
xor
insl
mov
test
popf
cmp
aad
fs
movsb
mov
test
loope
inc
xchg
xor
push
mov
add
fimuls
push
cmpl
add
mov
push
add
mov
jns
push
nop
repz
icebp
add
and
mov
shll
cli
push
mov
mov
ficomps
xchg
pop
fcmovne
or
mov
addr16
das
imul
in
fwait
and
pop
adc
and
call
mulb
es
lret
sbb
fisubs
loope
call
dec
pop
add
jl
aas
xor
mov
xor
pop
loope
ret
les
test
fadd
frstor
push
test
dec
sbb
ret
in
lahf
push
mov
cli
pop
rorb
sub
xchg
dec
loope
gs
cmp
xor
and
mov
aas
dec
sbb
ret
mov
add
mov
pop
lods
out
popf
icebp
out
ja
repnz
inc
cmp
paddsb
cmp
enter
fcomip
jb
cmp
mov
jbe
xor
or
sub
je
lret
adc
imul
popf
stos
xor
dec
pusha
push
movsb
int
dec
inc
ja
sahf
ljmp
xor
xor
fsubl
repnz
jae
adcl
jmp
popf
sbb
jbe
dec
mov
cmp
jb
addr16
cmp
jecxz
xor
mov
sbb
mov
and
mov
pop
xchg
test
cld
mov
xchg
cmp
push
inc
inc
outsl
xchg
fsts
in
daa
jb
clc
xchg
int3
or
lret
pop
or
fistpl
dec
movsl
mov
hlt
inc
daa
in
and
outsb
pop
mov
out
pop
fdivrs
ss
xorb
mov
mov
sub
sahf
dec
adc
loope
mov
dec
jmp
mov
jmp
mov
jge
and
or
scas
push
mov
dec
std
icebp
lcall
icebp
aad
xor
outsl
out
mov
idivb
testb
sbb
or
nop
pop
adc
fs
test
dec
mov
mov
push
dec
xchg
xchg
test
push
cmc
xor
cmp
push
sub
jns
mov
xchg
adc
xchg
imul
dec
clc
shl
jecxz
and
das
sbb
in
mov
cmp
dec
shrb
add
cltd
mov
cmp
data16
mov
hlt
adc
in
iret
cwtl
cs
add
adc
stos
daa
mov
and
daa
xor
test
daa
aas
inc
dec
lret
and
cli
repnz
add
fbstp
jne
xchg
sub
sbb
sub
xor
int
rorl
rcr
dec
pop
inc
xor
cli
ret
sbb
pop
leave
cld
cmp
sbb
xchg
push
mov
push
leave
push
pop
adc
mov
push
pushf
jns
pop
cmp
adc
aas
add
stos
pop
pop
aaa
dec
sbb
shl
sub
mov
push
orb
cmp
adc
sub
dec
aaa
sub
je
lret
je
mov
cmpsb
push
jmp
mov
fwait
rcll
in
or
add
xchg
sbb
add
mov
sub
pop
jl
mov
jp
push
movsb
vmulss
push
dec
in
dec
adc
jns
mov
sub
sbb
loope
jl
inc
sub
imul
jmp
dec
outsb
dec
xchg
test
xlat
add
xchg
in
imul
sub
fsubs
stos
xchg
shll
push
push
mov
in
xorl
out
mov
pop
sbb
jne
ljmp
je
shll
loope
jne
xchg
mov
dec
imul
bnd
sub
jl
jb
loope
sub
neg
push
std
cmpsl
test
add
xor
rcll
add
sbb
ret
inc
mov
cmpsl
dec
jae
cltd
sub
test
fwait
shrl
call
popa
jne
jnp
fcoms
ret
mov
test
mov
push
mov
cwtl
les
inc
and
and
loope
jbe
jp
push
das
ret
mov
in
pop
inc
mov
push
bound
fmulp
fscale
subl
cmp
jne
in
pusha
enter
sarb
xchg
xor
sbb
ss
jmp
or
pop
push
ret
push
adc
xor
repnz
push
notb
add
sbb
mov
mov
in
mov
mov
jo
leave
push
xor
jnp
cwtl
out
fcomip
sbb
cltd
mov
sub
out
aaa
add
dec
je
mov
test
lcall
xchg
add
movsb
adc
pushf
adc
and
mov
dec
add
pop
add
iret
jp
mov
pop
jmp
jbe
addr16
lods
jp
lock
int3
iret
cmp
sti
inc
outsl
push
ljmp
mov
adcb
std
or
jne
sub
fcmovbe
mov
jmp
mov
cmpb
in
cmpsl
call
je
out
xor
aam
mov
fwait
mov
loop
es
inc
jg
push
sub
int
cld
ss
push
out
cmpsl
mov
or
dec
mov
cmpsb
in
push
aas
in
sub
int
sub
cs
dec
cwtl
inc
rolb
dec
push
mov
bound
add
out
or
test
inc
sbb
loop
push
jmp
adc
add
aad
fidivrl
mov
mov
inc
aam
movsl
stos
cmp
xchg
cmp
xchg
pop
sar
mov
mov
in
sub
clc
frstor
mov
inc
jns
add
or
lret
addr16
scas
mov
push
inc
pop
fs
push
xchg
lret
cs
adc
sbb
popl
jns
repz
out
lock
xor
xchg
arpl
mov
aaa
pop
lea
lea
pop
scas
jg
fs
push
push
jg
hlt
inc
jle
imull
aam
pop
or
subb
jp
xchg
call
mov
jg
je
add
adc
xor
pop
mov
adc
xchg
mov
inc
or
push
mov
jge
vrcpps
mov
mov
fisubrl
test
push
dec
imul
lret
dec
js
outsl
cmc
and
subb
add
arpl
test
mov
and
outsl
or
xor
mov
in
loop
and
inc
insb
sub
push
cmovne
pop
shll
movd
dec
and
pop
inc
pop
outsb
xchg
lds
xchg
adc
out
pusha
jge
mov
in
adc
bound
sti
or
lds
push
pop
mov
aas
in
push
mov
pop
ja
pusha
dec
sarb
sti
fsub
movl
cmp
lea
movsb
ljmp
test
sbb
pop
pop
mov
sbb
sahf
push
sbb
dec
xchg
test
in
or
mov
jae
pusha
fdivrs
inc
es
adc
jns
test
testl
js
test
xchg
roll
jbe
insb
lock
mov
push
adc
das
insl
cmpsl
xchg
mov
xchg
test
les
xchg
movsb
ljmp
leave
push
hlt
mov
mov
jne
lods
ss
cwtl
cs
jno
ss
clc
push
jb
outsb
orl
ja
or
out
cltd
jl
or
iret
lret
popf
mul
mov
lods
xchg
dec
lret
in
sub
loopne
sbb
aam
lahf
leave
sub
adc
xchg
lret
mov
jmp
jo
pop
mov
jp
adc
inc
mov
out
in
xchg
xchg
pop
ret
mov
dec
inc
pop
dec
jne
dec
fldcw
pusha
pop
hlt
es
rolb
push
mov
ret
sub
mov
mov
or
add
push
popa
jbe
leave
andl
mov
xor
pop
outsb
and
lcall
or
pop
push
clc
sub
stos
adc
xor
pop
cmp
xchg
into
jge
aad
xor
hlt
enter
add
push
cwtl
lds
mulb
es
xchg
fprem
hlt
push
popf
out
imul
or
aam
fisubrs
mov
les
adc
push
scas
pop
sub
sbb
mov
push
inc
pushf
and
shrd
aam
push
ret
push
outsb
or
add
cmp
dec
mov
cmp
pop
movsl
inc
xchg
xor
fwait
rol
enter
mov
popf
cmp
push
cmp
std
pop
rorb
mov
xor
sti
add
push
ret
mov
inc
pushf
pop
gs
mov
in
jnp
in
push
int3
ret
cmp
inc
lods
dec
pop
xchg
clc
mov
cltd
push
mov
jno
cmc
sub
movsl
pop
cmpsb
in
mov
popa
stos
cmpsb
sbb
fwait
sbb
pop
pop
shll
adc
pop
mov
out
lea
or
hlt
stc
dec
and
cmpl
ss
sub
clc
mov
xlat
xchg
mov
ds
cmpsl
or
mov
in
jmp
les
dec
pop
insb
sub
add
xchg
test
pop
subb
jno
jae
shlb
mov
pop
inc
xchg
or
loopne
icebp
movl
mov
aad
jnp
mov
int3
lds
mov
leave
int
or
add
inc
or
cmp
dec
mov
enter
lock
int3
pushf
cmc
xor
adc
or
push
mulb
jno
cmp
jne
push
adc
adc
clc
fisttpl
sub
maxps
or
xchg
out
sbb
pop
int3
cli
xchg
out
xchg
push
xchg
nop
incb
lods
or
xchg
mov
je
cli
jno
mov
dec
jecxz
loop
add
adc
cmpsl
orpd
dec
push
inc
mov
lods
xlat
fistpll
mov
cs
and
push
pop
stos
cld
pop
xor
cltd
xor
mov
fucomip
mov
sahf
jp
or
call
in
pop
jle
mov
dec
pop
jp
in
adc
out
repnz
sbb
push
daa
pop
jmp
out
stos
sbb
stc
stos
push
fistpl
jmp
inc
je
imul
jbe
mov
dec
loope
sbb
xor
imul
jbe
and
test
rcrb
in
rcr
mov
add
pop
mov
mov
mov
jge
ret
test
xchg
add
pop
ret
cmp
fs
mov
and
push
push
sbb
push
call
leave
andl
stos
jae
push
out
popa
into
pop
and
loope
push
sub
in
dec
cld
cli
pop
clc
dec
movsb
loopne
or
sbb
rolb
mov
jmp
push
jb
je
mov
test
xor
pop
nop
outsb
ficoml
nop
xlat
in
cmp
sbb
repnz
mov
cmpsb
ss
mov
sbb
call
or
dec
add
in
out
jnp
xor
daa
in
jbe
pop
sbb
loop
outsl
jbe
or
sarb
shrb
in
jmp
clc
cs
xchg
mov
cmpsb
les
in
push
jg
test
fs
fwait
les
sub
sbb
fsubl
adcb
push
push
aam
cmp
xchg
fs
ds
lcall
push
push
add
pushf
mov
pop
loope
fadd
push
mov
je
clc
insl
pushf
aad
inc
sbbb
aad
repz
in
int3
add
cmp
jns,pn
xor
stos
mov
ss
cmpsl
sub
nop
aad
push
push
jbe
mov
pop
lock
jp
mov
fbld
mov
fcom
ja
inc
jle
in
mov
roll
in
mov
icebp
les
sub
sbb
xlat
in
sub
test
pop
js
jne
jns
pop
lcall
sbb
adc
fs
jbe
mov
outsb
and
cmp
daa
pusha
fs
inc
mov
sbb
adc
jge
sbb
mov
shl
hlt
push
xchg
dec
outsl
inc
sbb
pop
in
inc
jb
mov
mov
xchg
insb
lds
out
jecxz
mov
lea
push
jl
sarl
sbb
mov
inc
aaa
and
fs
loopne
popa
das
jno
dec
leave
cmp
mov
mov
loop
lds
test
in
fisubs
js
fdivl
push
or
shrl
inc
aas
mov
push
addr16
shr
cmp
sti
and
addb
dec
push
std
mov
pop
inc
out
sarb
in
jl
dec
out
mov
adc
jne
cmc
or
jno
mov
je
out
loope
jb
fildl
push
out
cmp
out
push
add
popa
clc
or
mov
push
in
jns
xchg
and
xor
icebp
xor
mov
ret
fwait
pop
pusha
xchg
inc
push
or
cmp
push
mov
push
push
inc
jb
insb
sti
jnp
cmpsl
mov
pop
inc
in
inc
mov
cld
jnp
inc
imul
or
insb
xor
sub
or
loopne
sti
or
lods
jg
sub
inc
loop
aam
push
inc
jo
out
mov
dec
pop
mov
inc
lods
test
push
push
sahf
pushl
imul
push
daa
je
or
mov
xor
insb
or
mov
mov
push
mov
in
sub
add
adc
or
mov
mov
push
adc
mov
test
push
out
sbb
mov
imul
repnz
fstp
pop
sti
xchg
icebp
psrlq
pop
mov
fs
cltd
add
add
sarl
dec
push
cmc
int3
popf
push
and
imul
inc
mov
loopne
mov
mov
jmp
sub
xchg
lret
mov
or
add
pusha
and
cmp
out
or
repnz
fcoml
mov
and
jle
add
jne
xor
je
dec
jnp
mov
push
das
repz
cli
jg
gs
add
repnz
fstps
out
fdivs
adc
popf
mov
lock
fxch
stc
pop
cltd
lret
push
out
xor
je
aad
xor
mov
je
sub
adc
cmp
adc
mov
jp
out
cmpsl
sarb
sar
jbe
mov
adc
jmp
mov
cmp
xchg
stos
or
xor
xchg
rorl
or
sbb
cs
xchg
sub
in
push
jecxz
pop
or
cli
add
jo
sub
loop
add
fistl
into
push
movsb
mov
jns
out
fstpt
add
or
dec
hlt
cmpsb
sbbl
imul
or
mov
cmovbe
adc
iret
and
xchg
push
ja
pop
iret
stc
les
jns
in
mov
pop
imul
add
dec
and
inc
inc
adc
loope
mov
es
aas
xlat
roll
push
ds
int3
mov
mov
loopne
adc
xchg
xor
out
xor
cld
and
sub
jecxz
sub
pop
push
xchg
adc
jl
daa
data16
pop
into
inc
sahf
lods
cmp
push
and
jp
sub
and
pop
data16
cld
je
push
mov
mov
mov
mov
lods
fstl
mov
out
into
mov
cwtl
icebp
test
outsl
shrl
xor
xchg
jae
jp
fsub
les
inc
in
dec
inc
stos
insb
jle
sbb
aam
dec
mov
push
cmpsl
mov
in
ficoms
sub
inc
movl
imul
imul
jno
loope
pusha
push
shll
repnz
pop
fs
push
dec
pushw
in
imul
andb
out
pop
or
dec
jo
fmul
mov
or
sbb
add
dec
cmp
aam
pop
dec
pop
push
lret
and
lods
das
pop
sbb
push
int3
dec
ds
sarb
cmc
shll
mov
jge
mov
jno
stc
mov
cli
xchg
jb
or
push
xor
cmp
pusha
or
in
js
push
js
scas
jecxz
push
push
adc
mov
and
sbb
mov
into
ffree
mov
int
pop
and
and
subb
sbb
out
lods
dec
int
jbe
cmp
push
push
out
imul
aaa
mov
dec
loope
mov
das
stos
mov
enter
test
push
fsubrl
mov
xchg
mov
adc
in
dec
push
jnp
leave
ror
popa
pop
jno
and
orb
lretw
xlat
hlt
popa
mov
mov
shlb
jecxz
mov
lods
bound
xchg
rol
cmp
push
in
lret
popa
sub
mov
xor
push
les
in
jmp
sub
lds
lahf
xlat
int
loop
lahf
cmc
mov
mov
ljmp
insl
std
or
out
jmp
mov
jg
sub
lock
dec
bound
test
test
pop
out
aas
jae
fs
cmp
into
add
adc
clc
stc
faddl
call
adcb
cmpsl
icebp
stos
call
sahf
fstl
mov
fdivl
ja
pop
push
inc
test
ret
dec
shr
cmp
pop
pop
sar
dec
jne
cmpsl
mov
adc
fsub
popa
cmp
inc
aam
xchg
scas
cmp
mov
int
mov
jns
xchg
xor
mov
rorb
leave
push
inc
cmc
push
inc
roll
leave
in
out
repnz
pop
in
or
fstpl
je
dec
mov
lcall
imul
icebp
lcall
mov
dec
out
cwtl
xor
insb
ss
cmp
pop
mov
in
add
sbb
cld
ss
int3
xchg
subl
popf
iret
mov
jnp
jg
inc
xor
adc
sub
lods
fldt
jl
in
xchg
xchg
adc
test
xchg
std
pusha
and
jns
pop
fisttpll
cld
ljmp
cli
sahf
aaa
and
daa
adcb
inc
cmp
sbb
std
js
repnz
cmc
int
ljmp
nop
cltd
out
xor
cld
sbb
xchg
pop
and
xor
sahf
jmp
outsl
lods
dec
in
fstps
mov
in
lea
inc
push
rorb
cmp
mov
movsb
pop
mov
es
dec
or
stos
dec
int
push
gs
popa
adc
out
jmp
ja
in
mov
sub
push
pop
mov
xchg
repnz
aam
loop
cmpsl
xchg
sbbb
and
ret
mov
push
adc
add
and
pop
inc
cmp
jmp
insb
mov
scas
fwait
adc
cmp
adc
scas
push
push
jl
outsb
mov
mov
enter
dec
cmp
shll
daa
inc
cmp
jae
cltd
push
or
add
xor
or
enter
jo
add
add
xor
lret
push
rorb
popf
repz
lahf
mov
xchg
shll
lods
sti
aam
aad
mov
sbb
scas
test
sub
ret
dec
xchg
loop
fdivs
xchg
sub
jae
iret
inc
dec
xchg
stc
sub
sub
int
xlat
sbb
rcl
loopne
mov
call
testl
jecxz
or
mov
jo
pop
shrl
mov
push
push
repz
dec
mov
xlat
hlt
cmp
mov
cmp
push
lock
in
inc
fstps
dec
cli
lret
outsb
test
sbb
pushf
movsb
add
test
dec
cmpsl
cmpsb
inc
xor
sbb
lods
cmc
add
cli
dec
and
call
push
jg
lcall
sub
push
loop
cmp
inc
mov
andl
in
test
adc
pop
arpl
jns
in
add
push
cmpsl
pop
and
rcrb
es
cmp
shlb
jns
jecxz
addl
sub
mov
aad
in
int
clc
lea
push
rcrl
cld
rcrb
jecxz
or
inc
xor
mov
scas
mov
icebp
cmpxchg
xchg
lret
popl
or
pop
nop
sub
jbe
test
out
and
add
mov
push
inc
stc
adc
out
jp
fadd
add
mov
add
inc
or
sbb
ror
rcr
ret
dec
cmc
arpl
mov
es
es
mov
mov
sub
adc
ret
into
je
adc
cwtl
test
imul
das
and
shlb
add
or
sbb
or
jnp
js
cmc
daa
pushf
fmul
xor
inc
inc
pusha
scas
clc
outsb
or
ss
jns
int3
jp
jb
lahf
mov
mov
mov
or
outsb
out
xchg
mov
int
adc
mov
ss
mov
cmp
xor
push
aas
dec
cmp
scas
add
sub
xorl
cs
cmp
cld
pop
pop
mov
or
pop
cmp
push
sbb
adc
faddp
lock
test
ja
mov
add
push
lock
dec
scas
out
xlat
cmpsl
out
mov
das
mov
push
dec
xor
les
push
push
adc
pop
push
lret
mov
cld
daa
mov
test
pop
push
add
je
pop
xor
pushf
push
xchg
insb
mov
jae
mov
xchg
sub
pop
in
and
clc
xor
pop
push
popf
mov
sbb
dec
mov
inc
add
out
rcll
lock
mov
dec
out
cmp
add
rcr
pop
rcl
int
and
repnz
jp
push
adc
in
test
pop
sti
cmp
and
or
loop
lahf
inc
out
jno
es
ljmp
dec
imul
insb
inc
test
cmp
push
sub
fdivr
lock
inc
pop
sbb
mov
cld
arpl
insb
sub
out
aam
sbb
or
xchg
imul
sub
xor
and
notl
je
dec
cmp
cltd
push
sti
call
xlat
jecxz
das
ss
ds
clc
dec
bound
aam
mov
push
cmc
andl
rcll
sub
ret
je
nop
jbe
jecxz
stos
sbb
fwait
sbb
jp
adc
inc
cvtps2pi
arpl
outsb
fiaddl
mov
imul
ljmp
xchg
daa
mov
mov
or
sar
pop
shl
js
mov
dec
inc
xchg
loope
ds
xchg
jmp
xor
and
test
sub
sbb
dec
into
test
sbb
inc
loopne
add
fmull
ret
xchg
cltd
add
inc
pop
push
adc
nop
bound
mov
sahf
jg
fistps
std
stos
out
add
xchg
mov
push
jae
cmp
dec
cmp
cmp
push
xchg
mov
and
cmp
in
mov
stos
xchg
push
push
lock
jle
cmc
mov
dec
push
adc
aaa
ja
mov
rcrb
lods
out
dec
mov
mov
int3
rcrb
pusha
adc
mov
insl
movsl
mov
mov
add
pop
or
shrl
je
shll
movsl
insl
scas
sarb
mov
xchg
clc
into
xorb
notb
es
jnp
and
dec
xchg
icebp
test
ljmp
cmpsl
in
in
stc
mov
mov
ret
xchg
or
je
ss
sbb
sbb
pop
pop
jae
inc
into
into
jbe
test
xor
aam
fsubrl
or
push
fwait
daa
out
pop
jnp
mov
pop
dec
xchg
aaa
rcl
pop
inc
les
fsubrl
mov
inc
dec
adc
scas
push
xor
xchg
addr16
xchg
cmpsb
push
sahf
imul
test
dec
in
sbb
jb
lods
jbe
dec
sar
push
inc
or
rorl
sub
xor
xchg
pusha
int3
jmp
mov
ret
movsl
mov
testw
and
icebp
ss
imul
xchg
adc
mulb
push
punpckhwd
mov
lcall
ds
cmc
aad
inc
push
stos
stc
mov
add
call
outsb
xchg
dec
sahf
sbb
pop
fcompl
dec
loope
cmp
ficomps
fldl
aaa
lahf
xchg
inc
fs
fcoms
push
shrl
ret
ret
int3
int
or
clc
push
jae
out
pop
push
jne
shrb
sti
call
fists
test
popf
add
outsb
shlb
ds
out
mov
mov
and
repz
xor
jo
aad
dec
cs
xlat
cmp
adc
scas
in
dec
mov
aas
and
push
jp
shlb
cmpsb
jg
push
add
mov
dec
cmp
push
gs
push
jmp
mov
xor
test
dec
ss
fwait
xchg
cmpsl
push
or
sti
mov
leave
in
xchg
shll
dec
cltd
lea
xchg
mov
dec
mov
sahf
adc
pop
notl
dec
pop
dec
dec
lret
push
pop
incl
leave
sbb
movsl
push
es
jp
sti
mov
andb
cmp
push
pop
clc
push
mov
inc
js
adc
or
sub
hlt
mov
cwtl
cld
inc
cmpsl
sbb
shlb
and
jecxz
push
cltd
into
or
inc
push
jne
pop
pop
mov
xchg
insl
ror
add
push
rcr
lea
lret
add
loope
shr
mov
sub
pop
lahf
fsub
xor
in
insl
inc
pop
inc
fsts
xor
or
data16
cmp
pop
fnsave
scas
out
inc
mov
insb
xchg
sahf
in
or
cmpsl
stos
mov
xchg
jb
sub
push
hlt
pusha
inc
scas
lock
mov
enter
call
push
push
push
add
push
inc
int
inc
xor
clc
enter
push
cwtl
ljmp
sbb
pusha
jne
cmp
push
enter
aam
add
ds
jmp
push
cmc
ret
sbb
pop
cmp
cmp
mov
jmp
into
sti
jle
lret
mov
leave
repnz
lcall
es
xchg
mov
out
pop
mov
imul
dec
push
data16
cmp
lea
fcomp
xor
xor
xchg
pop
jbe
mov
test
loope
xor
sti
sub
lock
adc
cmp
adc
xchg
dec
jmp
mov
sub
bound
addr16
add
fcomip
shll
leave
pop
adc
pusha
lcallw
cli
fsubrp
arpl
cmp
jae
mov
cli
xchg
dec
loope
mov
push
pop
add
lock
movsb
mov
dec
push
ret
push
mov
inc
xchg
ljmp
jg
jl
cltd
addb
dec
aas
push
sub
cmpb
cmp
jle
gs
push
cmp
lahf
xor
lods
clc
ds
sbb
push
aaa
cmp
dec
dec
test
xchg
fwait
rorl
mov
and
push
jnp
jo
push
ret
repnz
and
cmc
xchg
and
cmp
iret
jo
and
sbb
cmp
arpl
mov
sbb
mov
mov
out
enter
adc
bound
or
jne
mov
cmp
and
jge
xchg
or
fwait
stos
movd
mov
sti
dec
and
in
mov
loop
iret
daa
stc
sbb
xchg
rolb
hlt
inc
mov
cwtl
les
insl
shr
icebp
std
call
xchg
in
scas
mov
xchg
or
pop
fildl
les
rorb
scas
addr16
addr16
cmp
sub
adc
jg
lcall
popf
mov
push
cmp
jge
xchg
mov
sub
shlb
jnp
jle
push
xchg
fcmovbe
fisttps
or
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
jmp
mov
cmp
sbb
test
test
jns
adc
jp
loopne
mov
dec
scas
mov
mov
iret
push
imul
xor
aas
shr
js
inc
xchg
movsb
xor
nop
nop
pop
adc
cmpsl
mov
fwait
push
and
sbb
imul
dec
adc
inc
dec
fidivl
lods
or
stos
je
jl
dec
pop
xchg
int3
sti
aad
xor
add
xchg
ret
gs
mov
orl
push
inc
push
cmp
les
test
fisubrs
in
cmp
sub
loope
mov
sub
push
and
shrb
or
push
in
jl
or
mov
push
arpl
xorb
insb
dec
xor
aad
add
loop
adc
sbb
std
cmp
nop
das
fnstsw
mov
rclb
pushf
xor
inc
bound
nop
and
es
in
or
leave
mov
fnstenv
es
add
adc
xor
repz
and
jae
adcl
sub
cmp
push
xlat
fsubs
sbb
dec
rorl
out
adcl
pop
adc
sub
mov
jnp
adc
fistl
sub
inc
out
test
into
or
cmp
stos
mov
sbb
xor
fxch
or
fcompl
xlat
push
pop
or
sar
push
fs
rorl
pop
mov
cltd
pushf
cmpsb
stos
jbe
popa
mov
fimull
and
mov
fs
xchg
jne
cld
or
in
pop
pop
mov
pop
mov
and
xchg
movsb
stos
pushf
push
fsubs
xchg
repnz
sub
stc
ret
jmp
not
mov
mov
push
je
fidivs
in
pusha
stc
cwtl
and
mov
add
mov
mov
mov
mov
push
stos
cmpsb
cmp
pop
js
mov
je
loopne
cld
loope
and
pop
sub
inc
xchg
push
sub
je
dec
sti
fs
mov
lret
in
mov
in
lods
outsl
scas
ss
dec
jb
push
lea
cmp
cmp
push
xor
les
clc
inc
mov
mov
mov
pop
mov
std
xlat
mov
stos
dec
push
bound
fldl2e
cmp
xchg
std
jno
push
mull
loop
in
popf
jb
mov
jae
xor
bound
mov
pop
cmp
inc
js
pushf
test
js
add
cmp
add
xor
push
lock
ljmp
in
mov
pop
push
xor
fbstp
ds
mov
int
rcl
popf
pop
sub
sub
jbe
or
fstpl
jp
inc
frstor
pop
cwtl
js
sub
pop
inc
cmp
dec
sub
push
cld
and
add
push
pop
mov
and
cmp
loop
lods
dec
xchg
xorl
out
dec
jnp
adc
dec
clc
stos
sti
push
dec
idivb
aam
mov
xchg
lock
mov
push
popl
arpl
hlt
lods
mov
imul
loopne
movsb
fistps
cwtl
and
pop
fisttps
adc
out
shlb
stos
adc
cmp
addb
ret
cmp
mov
adc
or
jbe
clc
jle
shr
sbb
mov
cmpsl
int3
popa
ss
jnp
pminub
and
bound
mov
mov
cmp
scas
push
ret
xor
divl
and
push
push
icebp
and
sub
xor
bts
cmp
jo
scas
shl
ljmp
lahf
xor
jno
cs
fildl
popf
std
pushfw
mov
adc
ss
push
mov
jb
mov
jp
mov
fcmovb
push
lods
imul
sbb
test
xor
leave
mov
pop
shl
jmp
xchg
js
test
mov
pop
and
add
les
out
inc
jmp
scas
push
mov
ds
fidivs
push
jnp
loop
into
std
push
jne
mov
dec
jns
xor
sub
loop
jmp
or
out
sarb
leave
sbbl
pop
adc
xor
or
shrd
xor
data16
cmp
addr16
leave
inc
add
xchg
jne
or
mov
and
mov
sbb
inc
pop
imul
in
clc
mov
wbinvd
xorb
loopne
into
jle
scas
insl
add
iret
test
push
clc
mov
mov
jecxz
dec
push
xor
dec
into
xlat
mov
cmc
add
cmp
cmp
lcall
mov
inc
shlb
icebp
sbbl
mov
aas
jnp
pushf
imul
out
loopne
push
rcl
iret
outsl
loop
xlat
push
imul
inc
xchg
push
and
clc
dec
add
dec
mov
add
lret
std
sbb
mov
cwtl
adc
xchg
in
stos
xlat
pop
jne
repz
cmp
push
cmp
jae
sub
aaa
adc
xor
mov
leave
sub
lret
imul
sub
jo
jnp
rclb
mov
aas
cmc
arpl
test
add
mov
adc
lcall
and
add
mov
sub
mov
stos
push
jge
hlt
mov
jo
xor
arpl
dec
adc
rcrb
cli
rorb
movsb
dec
inc
stos
lock
fisttps
repnz
imul
stos
or
jns
cwtl
stc
pop
add
jae
out
iret
xchg
int3
arpl
and
mov
sbb
scas
dec
mov
inc
insb
xchg
jg
mov
ficoms
shlb
mov
nop
jbe
mov
sbb
cmp
call
ss
xchg
push
sbb
rcll
push
pop
and
aad
inc
sbb
and
adcb
dec
lea
mov
inc
and
addl
xchg
mov
push
push
mov
outsl
repnz
movsb
arpl
pop
sub
inc
xchg
addr16
aas
out
test
pop
dec
adc
dec
xchg
mov
adc
add
cmp
cmc
in
insb
adc
xor
mov
sbb
dec
loope
rorb
jae
cvtpi2ps
xchg
sbb
push
xor
or
xchg
cmc
stc
or
lahf
push
lret
cmpsb
cmc
push
adc
mov
sbb
jno
addl
push
mov
nop
dec
cld
xor
or
mov
sub
pop
imul
cmpsb
cmpsb
clc
xorl
dec
xor
enter
insb
sahf
jecxz
add
dec
push
inc
fildl
leave
popf
or
fwait
movb
dec
ss
add
insb
jne
pushf
imulb
pop
push
jp
aam
int
pop
in
adc
lea
in
lahf
xor
hlt
jne
pop
test
in
xchg
dec
sbb
sbb
push
push
xor
inc
inc
fsubrl
or
stos
sub
xor
out
fldenv
push
inc
aaa
sub
inc
push
pop
jbe
aad
fwait
xor
pop
outsb
mov
push
cli
add
dec
test
lea
mov
sarl
lds
cmpsl
repnz
mov
jmp
fdivl
repnz
cmc
lods
dec
dec
jecxz
cmp
jl
cmpsb
or
inc
mov
psraw
fwait
ljmp
jns
pop
push
sub
jle
hlt
es
leave
leave
mov
bnd
and
dec
and
mov
jp
cmp
call
lods
in
mov
sbb
cltd
stos
jbe
jge
mov
push
fsubl
sub
sub
jns
fwait
add
notb
push
xchg
xchg
mov
or
fstp
sbb
test
xor
insl
js
cmp
outsl
sbb
cmc
frndint
xchg
cltd
mov
outsb
aas
xor
cmp
jge
xor
fsubrs
cmpsl
dec
sbb
fdivrs
test
inc
mov
sbb
insl
insl
or
loope
sub
cmpsb
fidivrs
lea
cld
outsb
popa
sub
ds
pushf
daa
out
cmp
sbb
push
and
push
cld
or
std
je
jne
fwait
sahf
push
cld
negb
dec
mov
sbb
dec
mov
or
push
int
mov
add
push
in
sub
jmp
jg
repz
clc
aad
pop
fisttpll
jecxz
roll
ds
mov
outsl
sti
push
test
cmc
clc
sahf
sbb
cwtl
xchg
mov
jns
push
mov
imul
imul
xchg
mov
lods
out
fimull
popf
sub
cmpl
insb
sub
xchg
xor
outsl
push
dec
dec
fcompl
repz
jmp
jnp
adc
sub
sbb
pop
loop
shll
pushf
push
rolb
inc
add
ss
adc
mov
mov
inc
insb
inc
mov
insl
jp
popf
sub
sbb
sbb
dec
loope
sub
addr16
mov
xchg
dec
aas
adc
or
and
pushf
cwtl
push
in
dec
mov
add
and
insb
mov
sub
sbb
mov
adc
xchg
dec
cli
jle
lods
cmp
dec
je
and
jne
aas
in
rcl
jne
sbb
addr16
cmp
add
mov
inc
imul
je
adc
repnz
inc
in
fists
call
and
pop
sbb
pop
push
in
lret
cmpsl
rorb
pop
inc
inc
jae
in
pop
adc
outsl
adc
jno
dec
test
dec
xchg
in
iret
xchg
cmpsl
outsl
pop
test
je
or
add
xchg
mov
add
inc
sbb
cmp
leave
ja
mov
xor
xor
shrl
arpl
and
fiaddl
mov
xor
loope
out
mov
loopne
repnz
inc
and
cmp
and
cmp
jno
cld
add
nop
jp
ret
sarl
dec
sub
pop
inc
imul
insl
cmpsl
jbe
mov
cmp
push
dec
imul
mov
fadd
xor
out
push
leave
filds
dec
iret
mov
mov
dec
pop
sbb
cmp
jnp
xlat
js
pop
push
cmp
or
int3
mov
ret
jnp
cmp
jno
in
mov
jbe
repz
add
push
sub
sarl
mov
movsb
dec
subl
add
in
or
pop
and
jb
subb
sbb
cmpsb
sahf
dec
push
sbb
sbb
pop
xchg
mov
movsb
pop
movsl
sbb
in
dec
into
dec
lea
lods
mov
gs
or
shrb
cmp
cmpb
mov
mov
and
arpl
adc
fsubl
cwtl
xchg
leave
mov
out
stos
mov
sbb
js
push
cmp
testl
jo
movsl
jmp
lods
je
idivb
adcb
lcall
cmpsl
outsb
cmp
scas
mov
mov
sarb
pop
xchg
cmp
loop
push
das
jmp
push
adc
xchg
aaa
negl
xor
adc
sub
out
or
xchg
mulb
out
nop
jns
rorb
mov
sub
xchg
test
int
xchg
pop
push
mov
inc
dec
or
mov
add
popf
push
imul
cmp
cld
jl
pop
dec
test
cmp
cmp
mov
icebp
dec
rolb
adc
insl
push
out
mov
pop
test
fnstcw
test
dec
dec
leave
xor
cmp
cmp
ret
negb
fwait
mov
xor
mov
loope
lods
push
adc
push
loop
fdivrp
adc
xchg
mov
out
mov
add
pmaxub
repnz
jae
in
cmpsb
pop
inc
push
lds
fstl
xchg
xor
fwait
xor
adcl
repz
stos
mov
lret
mov
or
sbb
sahf
out
in
xchg
dec
inc
jge
lahf
xchg
aam
xchg
mov
sub
addr16
imul
sbb
mov
push
js
inc
loope
insb
jl
push
cmpsl
in
in
pop
enter
inc
dec
loope
adc
test
mov
ss
movsl
lods
sub
lock
cmp
shl
inc
sub
mov
sub
faddp
xor
sti
sub
push
inc
out
lds
inc
mov
inc
adc
ds
pop
scas
nop
cs
lret
sub
fildl
fiadds
dec
cli
dec
mov
sahf
adc
adc
push
scas
jmp
into
call
ss
mov
adc
rorl
repnz
shr
adc
in
test
popf
xor
clc
out
shl
je
push
push
xchg
dec
mov
push
aam
daa
repnz
xchg
ja
scas
test
mov
mov
inc
fiaddl
int
inc
ret
push
push
mov
sahf
jae
lods
test
lds
or
mov
hlt
pushf
mov
jno
or
out
jmp
cltd
mov
subl
dec
js
gs
shrl
xor
xorps
and
push
cmp
jp
xor
and
inc
sbbb
mov
add
cmc
mov
outsl
pushf
call
dec
aas
cmp
push
mov
push
pop
icebp
scas
dec
mov
dec
rclb
insb
or
testb
icebp
mov
in
stc
inc
adc
sbb
daa
addb
inc
dec
push
fistl
aam
aam
cmpsl
mov
sbb
push
nop
in
scas
insb
in
loope
push
push
jb
fistpl
xchg
dec
xchg
shll
mov
rcll
movsb
leave
pop
insl
adc
and
fsubrl
push
out
iret
mov
xor
addl
notl
pop
lock
lds
mov
imul
and
mov
xchg
les
sub
scas
mov
pop
xchg
pushf
dec
push
mov
add
inc
outsl
aaa
fs
loop
outsl
adc
sbb
dec
ds
cwtl
in
ljmp
pop
push
lods
jecxz
push
add
stos
movsb
sbb
adc
inc
adc
jge
lret
adc
daa
and
ds
inc
andb
scas
jnp
dec
lds
inc
incb
adc
xor
sbb
pop
xor
ds
or
xchg
cwtl
mov
nop
int
cs
add
sub
inc
ret
xor
pop
sbb
loop
sub
dec
ds
leave
sbb
jle
icebp
cmp
lret
or
adc
pop
loope
stos
subb
or
int
mov
daa
repnz
mov
les
mov
inc
jns
movsb
loopne
dec
add
negb
xorb
int
orl
mov
push
aad
sub
ja
mov
gs
cmpl
scas
cmp
mov
fisubl
or
cmp
loop
and
inc
inc
mov
and
cmp
out
repz
popf
mov
pop
mov
out
sub
hlt
pop
in
cwtl
insb
dec
dec
adcb
aaa
repnz
pop
mov
cmpsl
int
test
stos
mov
pop
test
jo
jecxz
out
js
loope
lret
cld
add
fwait
jne
aaa
mov
into
jno
in
cld
cmc
push
cmpsl
adc
dec
push
clc
jmp
popf
xchg
xor
filds
pop
add
cli
fwait
mov
scas
jmp
pusha
enter
jne
nop
push
xor
icebp
xor
xchg
test
jl
mov
icebp
fldt
adc
cmp
test
sub
cli
add
adc
mov
or
sub
mov
inc
jp
add
inc
jmp
mov
jmp
lret
jbe
mov
icebp
push
movsb
dec
nop
jg
mov
ffree
sub
xchg
inc
ja
pusha
cmp
jg
push
fdivrl
sbb
xchg
dec
xor
jae
rclb
dec
xchg
test
jmp
gs
jle
imul
rol
call
inc
lods
js
mov
pop
outsl
mov
cmovno
xchg
in
cmpsl
mov
out
mov
xchg
add
cmc
add
mov
ja
lret
rclb
std
test
lods
das
jmp
push
out
pusha
jmp
popa
push
fs
dec
xor
mov
aas
push
popf
addl
cmp
sahf
xchg
mov
jmp
jne
fdivrl
scas
sahf
test
sub
ror
icebp
push
jnp
mov
inc
dec
in
mulb
or
gs
call
fiadds
repnz
mov
movsb
dec
pop
out
push
push
mov
inc
lcall
mov
arpl
inc
ret
fcomps
scas
and
pop
dec
and
sbb
sbb
cmp
shlb
insl
daa
xchg
aas
test
insb
std
test
dec
jle
mov
push
outsl
jbe
ja
int
add
sub
clc
adcl
xor
or
out
xchg
xchg
movsl
sahf
pop
jg
cmp
add
in
push
loopne
mov
mov
scas
push
shlb
enter
icebp
adc
test
xchg
clc
mov
sbb
ds
ret
ret
outsb
out
push
rcll
inc
outsb
mov
xor
mov
xlat
movsl
push
jecxz
jge
lret
jno
push
mov
add
out
mov
add
sahf
mov
repnz
mov
mov
mov
cmp
xchg
sbb
lret
fiadds
lds
inc
push
mov
insb
pcmpgtb
add
sbb
pop
lcall
dec
sub
fcmovnu
ljmp
mov
in
and
and
cmpsl
sahf
xchg
or
xchg
or
addr16
in
nop
pop
ljmp
push
idiv
faddl
ss
roll
sbb
adc
aad
push
shr
pop
pusha
cmp
clc
cmp
out
mov
inc
sbb
stos
jo
lret
xor
inc
addb
lahf
pop
cmpsl
push
cmpsl
xchg
sbb
pop
jb
roll
mov
lock
fldt
ljmp
add
jne
cmp
addr16
aas
inc
mov
xor
mov
push
and
jle
fbld
inc
jg
inc
sbb
jmp
pop
xchg
mov
fdivrl
and
inc
mov
sbb
lcall
cli
stos
loop
and
jb
xor
add
push
call
xchg
inc
fnstcw
ret
add
and
ss
cmpl
cmp
sub
cltd
jnp
push
ja
lods
dec
dec
imul
mov
out
insl
lds
adc
je
jp
fcoml
arpl
movsb
imul
ret
testl
aam
into
sub
cltd
pop
add
inc
adc
fnstcw
push
adc
mov
pop
xlat
mov
mov
inc
push
or
xchg
jp
xor
mov
jp
xchg
jae
and
xchg
mov
arpl
adc
sbb
loop
stos
daa
pop
sub
aaa
push
mov
pop
repz
fst
mov
testb
movsl
jmp
jmp
mov
movsl
into
lcall
push
inc
mov
xchg
jns
loope
mov
cmp
sub
inc
mov
push
shll
nop
adc
cld
imul
or
pop
mov
jns
sti
mov
jl
insl
nop
lock
sbb
add
mov
pop
ret
pop
adc
pop
pop
inc
outsb
jmp
add
push
or
push
repnz
int3
adc
push
xorl
add
mov
fs
andl
pushf
cmp
inc
scas
sbb
jbe
add
pop
xchg
je
sbb
xchg
jb
popa
test
or
push
or
mov
outsb
aaa
add
fistps
leave
mov
stc
inc
inc
mov
loop
insl
xor
mov
hlt
cmpsl
filds
mov
repz
in
push
lds
lds
ret
mov
xchg
pop
xor
cwtl
in
rorb
andps
cld
jecxz
lret
cmpsb
pop
repz
mov
push
orl
lock
add
lret
jge
mov
fistps
aas
push
cmp
cmp
test
repz
sub
pop
xor
cmp
cmpsl
ret
lock
popf
and
cmp
and
cwtl
hlt
jl
jae
cmp
pop
jno
sub
int3
jp
pop
dec
xchg
mov
dec
mov
outsb
push
popf
mov
push
repnz
pop
lea
cltd
adc
inc
aaa
sbb
loopne
sub
clc
fcom
fdivrs
cmc
andl
sahf
xchg
xor
aaa
add
out
inc
push
mov
push
cli
or
pusha
sub
and
mov
lods
enter
jne
xor
insl
icebp
lock
std
js
lahf
in
cld
adc
mov
cwtl
inc
add
dec
lret
je
mov
roll
in
ret
ljmp
iret
movsl
incl
xor
stc
test
popf
fisttpll
mov
inc
jno
addb
test
push
shl
pusha
fwait
xchg
add
lds
add
jg
popf
dec
fistpll
inc
jbe
cwtl
je
jbe
push
add
pop
fldcw
pop
xchg
popf
pushf
cld
push
dec
mov
rcrb
adc
cmp
add
xor
loop
jo
aam
jge
movsl
and
cmp
xchg
int3
les
and
inc
aad
jl
lret
cmp
es
jmp
imul
cmc
mov
call
or
inc
pop
push
arpl
push
add
sub
sbb
cmp
jns
pusha
inc
pop
roll
std
scas
pop
or
adc
mov
push
dec
fistpll
cmp
leave
pusha
insl
cli
popa
cld
enter
aaa
pusha
mov
cmpsb
sbb
mov
dec
rcll
lds
clc
test
xchg
xlat
cmp
dec
cmc
in
xor
mov
jmp
push
add
into
lock
push
or
dec
fucomp
cmp
xchg
jae
mov
leave
or
adc
out
push
imul
mov
mov
or
loope
ja
int3
jecxz
xchg
pop
cwtl
movzbl
sbb
and
push
mov
pushf
lods
pop
mov
testl
fisubrs
inc
scas
push
xchg
fisttps
andb
sub
add
mov
push
xor
lds
jno
add
ds
inc
mov
out
sub
pop
push
subb
mov
lods
fwait
test
popa
push
push
xchg
inc
push
pop
cld
fidivrl
mov
out
pop
push
or
mov
addr16
push
pushf
scas
mov
pusha
test
cmp
addl
aaa
or
loop
popa
or
xor
xchg
je
out
out
enter
cmp
ret
push
scas
out
add
bound
xor
mov
push
mov
popf
fdivs
aad
jecxz
aaa
cmpsl
jo
xchg
int
adc
hlt
mov
push
ss
lcall
adc
or
test
mov
lret
sbb
iret
push
aaa
or
xor
xchg
mov
fsubs
push
stos
add
rorl
dec
arpl
cs
aas
xchg
bnd
inc
out
lods
xor
add
xor
xor
mov
fcoms
subb
push
mov
mull
inc
lock
rorb
jmp
jae
xor
pop
or
subl
adc
sub
enter
push
inc
sbb
ds
jl
frstor
es
int
push
call
mov
add
fsubr
mov
imul
dec
aam
adc
and
imul
jecxz
fiadds
incb
add
popf
dec
push
or
sbbl
inc
out
adc
jne
ret
imul
pop
in
in
aas
cltd
pop
push
out
stc
inc
push
fwait
and
test
lock
and
xchg
and
fldl
dec
dec
xchg
mov
ss
int
cli
arpl
xor
fadds
repz
cli
imul
cmpsl
mov
mov
and
ret
or
fbld
xchg
icebp
push
xor
in
inc
and
les
push
std
sub
shrl
inc
cmpsb
js
adc
je
pusha
or
push
dec
mov
sahf
xchg
inc
imul
xor
add
cmc
lret
jb
add
pusha
pop
pop
adc
push
popl
inc
int
addl
bound
out
pop
cwtl
jge
and
xor
mov
js
lret
les
mov
jb
cwtl
dec
pusha
add
and
adc
add
push
icebp
cmc
mov
pop
xlat
pop
mov
cmp
mov
xor
xchg
rorb
dec
bswap
sahf
bound
out
xor
cmp
jne
cmp
outsl
sub
add
mov
jl
fadds
nop
pop
pop
cmp
xchg
xchg
scas
lcall
arpl
or
xor
inc
jnp
iret
ret
sti
or
mov
xor
lds
dec
into
lods
mov
push
mov
ret
testl
dec
xchg
imul
mov
loop
jne
mov
ret
js
xchg
out
repz
pusha
xor
aam
loope
outsb
push
dec
repnz
int
ret
test
rcrl
jo
aas
stos
pop
mov
xor
mov
and
or
jno
or
cmp
and
xchg
xchg
xor
notb
push
xlat
scas
outsb
out
or
and
cmp
or
inc
clc
inc
decl
lods
subb
cwtl
or
pop
push
mov
sbb
pushf
dec
inc
inc
jp
inc
jmp
xchg
aaa
enter
nop
pop
icebp
mov
mov
idivl
mov
and
shlb
lds
cwtl
lcall
xchg
test
fidivrs
push
xchg
shlb
push
sub
push
sub
xor
lahf
xor
test
jnp
xorb
mov
xchg
pop
jmp
dec
loop
mov
inc
push
push
imull
sahf
ret
lret
out
jb
lcall
fldenv
adc
cmp
mov
dec
adc
lods
ljmp
fstps
xchg
stos
mov
aam
scas
pop
lods
mov
fmull
sbb
pushl
push
in
mov
mov
mov
loop
outsb
mov
pop
add
leave
and
add
jnp
dec
mov
js
call
les
ficomps
or
xchg
loope
insl
mov
mov
pushf
dec
lock
inc
jl
inc
xor
push
or
jne
cltd
push
or
test
out
xor
andl
cvtpi2ps
out
and
xchg
cmp
xor
int
cmp
aaa
sbb
pusha
cmovne
push
add
mov
mov
fsts
adc
stos
scas
dec
daa
cmc
add
push
push
inc
or
fs
jne
stos
and
outsl
jns
mov
pop
into
sti
cltd
lret
data16
in
iret
out
fcomp
dec
xchg
dec
or
outsb
cmp
mov
mov
mov
aaa
add
lea
xor
incl
les
xor
imul
icebp
jl
aam
mov
std
cmp
adc
jmp
push
lret
sbb
jne
jae
out
cs
test
adc
dec
daa
mov
mov
aas
xchg
fdivrl
lods
mov
push
push
dec
pop
pusha
jne
imul
xchg
in
xchg
xchg
pop
insl
movl
pop
test
aam
mov
psadbw
adc
inc
call
mov
add
push
and
insb
sub
dec
inc
mov
lock
addr16
mov
cmp
stos
test
loopne
pop
mov
mov
pop
lret
shlb
loope
in
jbe
mov
popa
dec
dec
out
jb
xor
mov
and
adc
xor
pushf
inc
insb
leave
pop
xchg
push
or
int3
mov
push
jae
fcoml
lcall
mov
call
xor
or
inc
ret
daa
xlat
add
loope
cltd
xor
lret
push
mov
cld
stos
dec
jb
shl
out
fwait
les
aaa
ja
idivl
aad
cmp
out
sbb
fs
maskmovq
notl
icebp
fwait
add
ret
fsubl
cmc
push
in
pop
xlat
mov
sbb
int
insl
repnz
sti
test
les
ljmp
and
xor
cmpsb
xor
push
in
popa
in
sub
xchg
pusha
repz
fbld
sub
mov
jmp
aad
icebp
popa
mov
nop
cld
rol
ror
or
mov
mov
pop
ret
sarb
jl
repnz
xor
mov
mov
push
pop
je
or
inc
leave
mov
mov
and
mov
xor
lds
xlat
loope
in
xor
aaa
decb
pusha
mov
sarb
and
ds
out
mov
xorl
rcll
popf
stos
pop
cmp
aad
adc
inc
mov
sub
adc
mov
push
call
in
mov
pop
cltd
push
sahf
cmp
movsb
mov
mov
dec
mov
aam
loop
push
adc
cmpsl
xor
mov
adc
mov
jo
adc
push
jno,pt
repnz
lds
stos
rorl
cmp
adc
lods
and
xor
scas
xchg
mov
push
or
xchg
xchg
stos
out
inc
sbb
outsl
aam
mov
sub
int
xchg
add
fdivrs
cmp
jmp
aaa
xor
dec
adc
filds
ret
cmp
fs
popf
popa
lahf
ja
es
sbb
mov
dec
add
push
std
out
sub
push
mov
pop
test
pushf
ss
fldl2e
sub
in
jns
xchg
pop
inc
cmp
pop
leave
lret
or
sbb
int
inc
inc
inc
popf
cmpsl
cmpsl
cmp
cmp
jo
dec
stos
lret
aam
pop
shlb
dec
lods
jg
add
je
pop
daa
popa
test
test
ja
dec
insb
xlat
je
pop
popa
dec
lret
jl
fdivs
xchg
and
mov
shrl
test
jns
es
pop
sbbb
mov
leave
jb
xor
and
cltd
inc
pushf
mov
fstps
push
add
sbb
mov
in
mov
sbb
push
dec
bound
inc
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
add
push
movl
cmpl
je
cmpl
jle
jmp
push
pushl
push
push
call
mov
dec
mov
jmp
push
mov
sub
mov
and
mov
movzwl
adc
mov
mov
movl
and
movl
mov
subl
mov
and
sub
mov
sbbl
xorl
andl
xor
or
inc
mov
cmpl
jle
jmp
pushl
call
cmpl
jb
mov
mov
mov
mov
sbb
sub
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
push
pushl
call
jmp
mov
xor
orl
mov
xor
mov
sub
jmp
loope
loope
xchg
iret
addr16
sarb
loope
jp
mov
lock
cmpsl
dec
mov
xor
dec
leave
or
fldpi
mov
mov
lods
mov
push
mov
jae
xor
and
dec
out
dec
loop
test
inc
mov
mov
xchg
pop
mov
pop
sub
mov
xchg
pop
xlat
rorl
jmp
rorl
mov
mov
rclb
les
and
negl
in
dec
ljmp
mov
inc
insl
sbb
fcoml
adc
cmpsl
dec
cld
lret
data16
jo
or
outsl
add
inc
cmp
inc
je
add
xchg
fildll
pusha
mov
gs
inc
ret
add
cld
les
push
cmpsb
push
mov
fdivl
insl
inc
xorb
pop
in
sbb
xchg
insb
dec
fisttps
rol
mov
adc
ja
out
dec
lret
push
in
in
insl
stos
xchg
outsl
fcomi
xchg
mov
test
xor
loop
ss
cmp
mov
adc
and
hlt
pop
cmp
jbe
cmp
inc
sbb
pop
loope
adc
js
bound
xchg
jmp
mov
aaa
in
xlat
popa
sbb
adc
data16
call
sti
jnp
inc
out
or
inc
sbb
add
or
rclb
pop
pusha
out
sbb
andl
or
mov
sub
jge
push
lret
jo
sbb
pushf
out
fsub
loopne
pop
loopne
aam
inc
dec
jnp
xchg
shrb
mov
push
adc
test
mov
lahf
repnz
pop
sub
dec
cs
xchg
cmpsb
add
das
xchg
inc
xchg
xchg
jbe
movsl
pushf
jl
daa
push
popf
jp
add
push
xchg
xor
or
lret
into
fsubr
js
hlt
jns
fsubrl
mulb
mov
fsubr
pop
fwait
mov
nop
xchg
push
inc
aaa
imul
outsl
mov
popf
dec
xchg
pop
pop
loop
test
xor
mov
insl
pop
loopne
inc
sti
das
rorb
in
sub
jb
cmp
pusha
xor
mulb
into
mov
js
gs
mov
outsl
fcoml
or
pop
mov
inc
mov
mov
ret
pop
lock
addr16
idiv
ljmp
out
pop
loopne
xchg
dec
pop
push
ret
popa
call
sbb
icebp
insl
es
lahf
js
dec
xor
pop
das
gs
xchg
nop
lods
sub
mov
std
paddsb
or
push
add
pop
int3
mov
pop
addl
psrld
stos
xchg
cmp
call
sti
adc
int
and
mov
lret
leave
jge
add
jnp
je
aam
ss
addr16
hlt
sbb
or
adcl
mov
sub
fidivrs
xor
bound
inc
aaa
xchg
xor
ficomps
sbb
jg
adc
cmp
fsts
xlat
lock
push
out
arpl
ds
imul
cmpl
sbb
addr16
popa
cwtl
nop
rcrb
or
div
es
push
jne
pop
xchg
std
js
cltd
stos
filds
insb
les
xor
and
xor
pop
test
mov
xchg
sbb
push
lods
in
rclb
mov
push
faddl
push
pop
pop
jb
xchg
jp
lret
dec
mov
scas
add
xor
int3
cmp
jne
out
add
repnz
sub
push
mov
loope
xchg
daa
dec
inc
outsb
out
mov
jns
loope
mov
call
pop
mov
fisubs
xorl
xor
dec
inc
mov
sahf
xchg
sar
mov
dec
pop
jo
push
ficoms
mov
scas
addr16
mov
fwait
or
mov
inc
addb
pusha
pop
jae
mov
ja
fwait
pusha
sbb
mov
mov
imul
sbb
cmpl
decl
lret
pusha
test
mov
lods
pop
es
leave
into
pop
fs
jle
xor
jle
dec
pop
loope
pushf
jmp
xlat
sahf
mov
stc
add
xchg
out
sahf
scas
jnp
out
call
push
imul
repnz
and
outsb
aam
sub
jg
lret
imul
xchg
aad
xor
cmp
mov
jb
sbb
cmpsb
cmc
add
pop
sub
movsb
cmpsb
int3
mov
test
add
test
add
push
inc
push
cmc
pop
pop
jae
popa
subb
inc
mov
sbb
or
add
sti
lahf
scas
scas
lret
in
mov
sub
xor
aas
dec
sbb
in
sub
movsl
xchg
dec
fidivrl
ljmp
or
inc
mov
add
ljmp
sub
shll
fnstsw
test
mov
inc
in
and
adc
scas
jmp
sbb
mov
jg
popf
mov
cmp
or
stc
jmp
mov
por
in
xor
outsb
jbe,pn
pop
sub
lods
dec
dec
mov
movsb
push
mov
in
jnp
sbb
mov
sbbl
mov
adc
inc
pop
fs
jp
pop
popa
cmpsl
push
adc
mov
dec
lods
and
inc
data16
das
xor
movsl
mov
pop
movsl
lea
aad
or
sub
add
lcall
mov
stos
sbb
pop
mov
pop
jnp
insb
inc
sahf
and
xor
mov
xchg
push
inc
xor
enter
movsb
in
mov
push
push
clc
test
sbb
jg
xchg
lds
xchg
dec
sub
std
loope
pop
outsl
es
cli
pop
pusha
pop
cwtl
jb
aam
cmc
jle
mov
push
fstpl
dec
mov
out
mov
mov
mov
mov
mov
ret
movsb
les
stos
jge
inc
mov
add
movsb
in
pop
pop
rcll
or
push
incl
test
push
pop
ds
cwtl
shrl
and
xor
jge
addr16
push
cmp
push
addl
sub
mov
sahf
lcall
out
or
enter
mov
testb
mov
mov
dec
mov
xchg
jmp
iret
dec
push
xlat
pushf
int3
dec
bnd
adc
jae
jmp
shr
clc
inc
cmc
or
xor
imul
mov
fs
aas
arpl
dec
loope
mulb
sub
push
or
cmpl
inc
clc
jmp
adc
js
cmp
xchg
sub
add
pop
sub
outsl
xor
gs
add
inc
mov
inc
xor
mov
push
scas
xor
push
fcomip
cmp
aaa
mov
push
dec
adc
fcoms
lds
sarb
gs
cs
mov
jl
aam
push
unpcklps
les
mov
call
cli
shlb
imul
sarl
lret
pushf
popaw
add
or
cmp
in
inc
pop
mov
add
mov
adc
xchg
clc
aad
push
into
sbb
and
mov
pushf
pop
sarl
xchg
push
push
dec
test
mov
jnp
lret
enter
jno
ss
es
es
pop
out
test
or
into
mov
jae
addr16
addr16
pop
sub
jp
notb
insb
mov
cmp
cmp
push
fsubrs
loopne
rcll
dec
lret
mov
sbb
adc
cmc
fcomps
and
inc
adc
out
xchg
stos
movsl
scas
addb
ljmp
stc
cmp
int
mov
jle
mov
add
sahf
lods
mov
xchg
fwait
and
pop
sbb
xchg
xor
pop
xor
testb
inc
mov
cltd
adc
or
pop
push
inc
fnstsw
test
movsl
xor
cltd
add
mov
ret
ss
movsl
fldt
mov
std
xor
add
and
xchg
lret
in
call
sahf
fistps
add
jecxz
je
stos
mov
aam
mov
dec
in
inc
sbb
cmp
cmp
fsts
aaa
sbb
call
mov
sbb
jns
insl
out
mov
mov
loop
push
inc
out
dec
iret
cwtl
push
adc
mov
sub
mov
pusha
jo
sti
dec
jg
mov
mov
push
pop
ja
inc
mov
arpl
mov
std
sub
jns
inc
repnz
fldl
inc
dec
pop
pushf
mov
out
mov
xchg
test
push
push
insb
cltd
pop
dec
mov
inc
push
test
sbb
sbb
outsb
mov
and
lock
fs
push
and
dec
pop
cld
xor
ja
mov
sub
and
pusha
adc
push
jbe
mov
or
xchg
adc
mov
jbe
and
jecxz
cmp
ss
jl
fwait
mov
pushf
ret
xor
mov
pop
cmpsb
test
cli
sbb
iret
jecxz
stc
adc
cmp
pop
pop
pop
out
inc
or
pop
mov
outsb
les
and
outsl
add
cwtl
mov
aam
inc
mov
repz
in
cltd
jle
adc
jecxz
xor
cmp
sbb
sbb
cmp
jmp
loope
ss
inc
inc
repz
loope
add
push
push
sbb
rcrl
push
mov
subb
mov
sbb
cmpsl
xchg
cmp
das
or
stc
push
nop
insb
jns
xchg
mov
inc
enter
or
pop
and
jnp
in
xchg
pop
push
mov
mov
xor
loope
or
das
icebp
adc
repz
gs
out
fimull
enter
jg
insb
pop
test
cmp
fsubrs
popa
andl
mov
std
mov
movsb
mov
sti
mov
push
pop
ds
loope
mov
or
ss
mov
inc
lahf
jno
test
push
pop
and
adc
ljmp
push
mov
pusha
xchg
out
mov
iret
in
insl
adc
pop
loope
push
ss
adc
jbe
inc
out
nop
jl
xlat
fildll
mov
mov
mov
frstor
lret
push
filds
push
lret
jg
xchg
std
mov
add
in
lahf
imul
and
pop
adc
movsb
scas
mov
aas
sbb
jle
scas
std
in
adc
stc
mov
rcrb
call
push
cmc
arpl
test
jne
adc
lds
test
insb
scas
movsb
push
fidivl
loopne
shlb
push
xchg
inc
ljmp
lds
popa
push
rcr
or
and
std
jnp
pop
lock
mov
outsb
ds
mov
leave
shl
ret
adc
je
das
and
or
dec
xor
add
cmpsb
mov
in
dec
xlat
xchg
pusha
pusha
testb
shlb
mov
cmpsb
lcall
sub
out
push
aam
stos
cwtl
dec
and
or
mov
inc
dec
xor
xchg
adc
inc
popa
sbb
add
pop
add
iret
sbb
dec
pop
sbb
ficompl
int
xchg
mov
pop
mov
sbb
insb
rcrb
iret
cs
repz
cmc
sub
dec
out
mov
lea
jle
mov
or
push
jle
jno
test
mov
cmpsl
mov
addr16
or
mov
xchg
sarl
pop
cwtl
jb
int3
sbbb
or
popa
mov
fstpt
rcrb
icebp
xchg
jb
or
adc
push
mov
cmp
fidivl
inc
insl
mov
sub
mov
push
pop
pop
cmp
stos
icebp
sbb
cmp
int3
or
dec
hlt
push
pop
test
cmpsb
jo
add
xchg
mov
dec
push
pop
insb
je
repnz
outsl
lods
and
xlat
lods
jecxz
and
push
sub
xchg
xor
jl
sti
dec
test
and
jp
sti
mov
dec
mov
int
mov
mov
fsub
aaa
pop
mov
loop
enter
cs
jg
adc
rorb
mov
mov
loope
fildl
sub
inc
mov
int
fstps
cld
add
xlat
xor
push
jge
jp
dec
aad
fisubs
out
mov
inc
dec
daa
xlat
xchg
dec
in
xchg
mov
mov
leave
lea
in
and
fxch
cltd
jae
out
pusha
stc
in
push
xor
jg
ficoms
mov
lds
xchg
or
lret
in
push
adc
pushf
setle
sub
mov
dec
xchg
mov
adc
jbe
pusha
daa
jo
cmp
mov
cltd
ds
push
mov
in
jbe
icebp
jge,pn
xchg
addr16
add
xor
inc
pop
xchg
mov
or
push
orb
call
cmpsb
and
push
mov
lods
xchg
test
notl
iret
xlat
xor
insb
xor
adc
pop
jmp
and
adc
pop
insl
mov
and
mov
sbb
stos
jge
das
je
adc
lods
les
jmp
xor
pop
pushf
jg
hlt
adc
stos
xor
xchg
fwait
mov
inc
pop
scas
cwtl
pop
repz
ja
sahf
xchg
in
jl
es
jae
cmp
jle
mov
imul
cmp
pop
shrl
cwtl
mov
mov
and
fisttpll
dec
mov
es
xchg
test
cmp
test
xor
shr
jecxz
into
movsl
mov
out
mov
cmp
test
imul
je
pop
bound
mov
call
cld
fs
call
stc
jnp
lds
rorb
mov
jno
cmp
sub
mov
shlb
adc
xor
jnp
xor
sub
and
pop
gs
scas
xchg
pop
insl
add
push
fsubs
dec
push
notb
add
outsb
fdivp
shll
fldln2
dec
xor
ficoms
test
aaa
hlt
js
cld
cmc
xor
popf
das
movsb
add
leave
ljmp
cmpsb
scas
add
test
adc
and
push
aas
add
push
dec
mov
and
repnz
push
sbb
cwtl
jae
inc
imul
pop
aad
lret
pushf
lahf
push
push
jl
lds
sbb
and
and
xor
cmpl
js
movsl
movsb
ret
inc
sti
cli
add
cmp
push
jns
inc
mov
inc
and
cmp
jecxz
dec
shll
add
cmp
xor
adc
inc
loopne
xchg
popa
cmp
hlt
mov
inc
icebp
sbb
xchg
mov
push
sub
data16
mov
aad
cld
xor
out
sbb
push
sub
adc
pop
xchg
iret
les
push
leave
popf
jns
lahf
nop
lcall
sub
ficompl
jecxz
and
xchg
rorl
and
flds
xchg
out
icebp
mov
add
fisubs
loop
xchg
pop
sahf
cmp
or
lahf
push
int
in
cmp
lret
push
in
adc
sahf
pop
or
leave
xchg
mov
xor
adc
out
mov
add
imul
cmp
pop
push
adc
sub
movsl
les
clc
jecxz
xchg
mov
mov
scas
xlat
subl
popa
enter
and
adc
fildl
lods
cwtl
jmp
ret
cmp
adc
mov
in
ret
orl
mov
ss
cmovp
je
insb
sar
fisttpll
push
mov
insb
inc
lds
in
push
adc
mov
bound
xlat
mov
jl
jae
adc
dec
xor
int
xchg
in
jge
pop
pop
xchg
sub
add
pop
shr
sbb
and
gs
mov
outsl
bound
add
sar
lret
dec
scas
stc
mov
arpl
cmp
dec
arpl
inc
cmp
mov
jne
mov
push
cmpsl
in
sbb
sub
sbb
jo
push
mov
mov
dec
cmc
push
cmpsl
daa
out
push
xchg
loope
shlb
jl
sub
jae
jge,pn
mov
aad
adc
adc
lods
sub
lcall
pop
and
cmp
setnp
and
inc
mov
xor
pop
inc
jbe
or
push
mov
jno
xchg
lret
ret
jb
cltd
mov
push
pop
adc
xchg
xor
or
leave
hlt
hlt
or
inc
cli
rorb
xchg
addr16
lods
push
sub
movsb
xchg
cwtl
adc
pop
jle
push
fmulp
outsl
ret
add
ret
data16
sub
outsb
je
lahf
into
adc
xchg
add
jge
jbe
shrb
stc
and
pop
das
scas
lret
les
push
jp
or
pop
stc
sbb
mov
xor
pusha
push
ss
jae
call
lds
aas
push
mov
fiadds
xchg
loop
and
nop
sub
setne
jle
or
cmpsl
xchg
faddp
loopne
mov
inc
sbb
out
jmp
rcrb
bound
dec
movsl
dec
mull
xchg
out
fcoml
mov
push
mov
icebp
ret
repz
mov
mov
xchg
jmp
adc
pop
cs
push
cmp
jg
dec
jmp
stc
fistpll
ret
popf
mov
aaa
mov
sub
cmp
lods
jno
fadds
and
lret
mov
fiadds
js
xor
cmp
rcll
int3
mov
pop
pop
repnz
mov
mov
rolb
push
and
add
xor
xor
jno
hlt
leave
push
mov
xchg
adc
nop
notl
in
popf
orl
cld
arpl
add
add
adc
sub
push
aas
pop
out
xchg
fcmovu
push
dec
call
add
int
cmpsb
fstps
loop
in
fldl
je
pop
add
stos
xchg
testl
cmp
sub
dec
cs
int
sbb
je
icebp
xchg
jmp
clc
mov
imul
pop
jmp
add
xchg
test
inc
add
clc
add
dec
out
test
pop
mov
dec
movsb
es
mov
int3
pushf
xchg
jns
mov
mul
js
push
jecxz
or
rclb
add
lock
pop
pop
imul
jmp
in
in
push
cli
test
cli
lcall
mov
jb
enter
sbb
push
dec
imul
iret
or
mov
fldt
jno
fwait
aad
adc
push
sub
or
fbld
xchg
sbb
and
inc
dec
lahf
js
jmp
mov
cmc
inc
insb
xorb
gs
out
cltd
add
in
lret
pushf
lret
enter
cmp
cmp
push
and
sub
idivb
mov
cmp
sub
mov
out
pop
outsb
adc
xor
mov
aam
fsubrl
dec
xchg
push
pop
lods
sub
push
xor
xor
sub
arpl
cld
push
in
jg
push
test
fwait
xchg
push
out
imul
popa
cmc
lea
push
negb
cmp
pop
clc
sbb
loopne
and
jp
or
in
dec
nop
push
xchg
push
push
pop
xchg
xchg
and
mov
enter
xchg
jmp
shr
lcall
jmp
xor
rol
shrl
les
mov
adc
pusha
pop
sbb
jecxz
dec
jle
mov
sub
xchg
jns
mov
sbb
aad
jnp
aam
jle
data16
fsubrl
popa
inc
xchg
push
subl
movsb
jmp
dec
xchg
sbb
fldcw
pop
test
dec
lret
out
js
jnp
mov
pop
leave
roll
add
dec
aam
and
sub
pop
sbb
sub
int3
in
xlat
lret
jns
and
icebp
push
or
cmp
mov
add
ficompl
daa
aaa
movsw
das
xchg
mov
or
lret
jg
xchg
ret
shrl
adc
cmp
inc
test
sbb
rolb
pusha
test
cmpsb
aas
lock
test
cld
lret
mov
repnz
mov
xor
or
out
mov
push
out
scas
loop
inc
dec
je
jae
js
lods
mov
xchg
pop
lods
xor
test
icebp
pushf
js
add
pushf
sahf
bound
les
mov
pusha
lret
adc
pop
aaa
adc
add
xchg
ss
imull
fisubl
loope
adc
push
xchg
fnsave
dec
stc
cwtl
lret
mov
xchg
xchg
js
cmp
jecxz
ds
cmp
cwtl
loope
sti
sbb
test
push
sbb
push
lods
sbb
adc
test
push
hlt
test
daa
xor
jmp
cmpb
fnsave
add
dec
ss
pop
push
inc
mov
mov
lahf
fs
and
test
push
in
lret
mov
mov
push
and
fwait
loope
jmp
dec
ret
push
add
imul
daa
lcall
in
shlb
icebp
lret
xlat
adc
add
inc
sub
fcmovnu
jne
shlb
aam
push
and
mov
mov
and
pop
out
hlt
es
adc
ret
gs
xlat
mov
insb
out
call
push
inc
cmp
jae
popa
mov
jle
jl
sahf
mov
loope
shll
push
js
lret
rol
jb
pop
shlb
das
into
adc
pop
lret
repnz
cmp
enter
in
imul
sub
mov
andb
fldl
test
imul
stos
js
sub
push
cld
das
jmp
or
xchg
pop
jb
jbe
orl
in
rorb
sti
push
iret
bound
popf
jns
push
sar
pop
ljmp
aam
xor
sbb
loop
mov
aas
into
pushf
jmp
adc
aaa
cmpsl
mov
dec
pop
sti
cmpb
pop
shlb
xor
and
sbbl
xlat
loopne
sbb
lea
mov
push
shll
inc
aam
sub
test
call
add
push
mov
and
dec
fstl
out
pop
lods
daa
jb
dec
stos
mov
mov
xor
pop
push
ss
cwtl
cmp
insb
stc
push
ja
cmovnp
mov
jp
mov
xor
ljmp
sub
into
jbe
xchg
inc
xor
xchg
inc
test
jno
fs
xor
sarb
aas
iret
imul
xrelease
repz
es
cmpsb
push
cmp
lcall
sub
sbb
fsubrl
pop
gs
or
scas
jge
cli
addb
and
leave
push
in
xchg
outsb
add
lret
mov
push
inc
xchg
fcomip
repnz
arpl
inc
testl
push
xor
push
cmc
jno
shl
xor
pusha
jne
mov
decl
sbb
xchg
pusha
sub
pop
mov
push
jno
jo
adc
xchg
push
stos
push
insl
insb
cmpsl
push
push
mov
mov
fs
stos
pop
scas
stos
out
arpl
xor
push
jns
aam
sbb
rcr
jmp
ss
test
xchg
sub
fists
popa
jne
aaa
xlat
out
xchg
fs
mov
lahf
inc
int3
inc
mov
mov
inc
xor
cmc
movsl
and
xlat
shrl
and
fstl
xchg
arpl
or
test
adc
mov
cmp
mov
pop
stos
cmpsl
fs
push
in
cli
rcrb
cmpsb
sub
jecxz
xchg
mov
outsl
icebp
cmpsb
sub
push
mov
aad
push
jo
in
in
dec
lea
js
aam
repnz
popa
andl
xchg
sti
xchg
or
pop
aas
add
mov
cmp
aam
cmpb
ss
add
mov
xlat
cli
sti
sub
xor
fldl
inc
cmpsl
dec
or
pop
or
scas
add
or
repz
cmp
enter
jae
fstps
jae
pop
adc
pusha
ret
add
cmp
imul
es
les
lret
jno
xchg
cmpsb
call
sbb
ljmp
in
mov
adc
fstps
jns
mov
mov
sub
out
xchg
inc
shrb
lods
call
or
inc
insb
mov
pop
cmp
je
mov
mov
mov
xchg
bound
jecxz
xchg
inc
lods
inc
sub
lods
icebp
cwtl
and
sar
bswap
out
loop
push
notb
mov
mov
das
cmp
notb
pop
adc
out
pop
inc
mov
adcb
fs
mov
fwait
icebp
cmc
pop
notl
test
lcall
xor
in
adc
insl
and
imul
push
mov
push
int
subl
adc
or
cmp
xor
ljmp
test
pop
fs
push
jo
sub
je
xlat
sub
inc
cmc
lods
dec
xor
ss
pop
jae
cmp
push
cmp
sbbb
loop
mov
leave
xor
pop
mov
push
fwait
jl
or
ljmp
call
daa
sub
push
orl
int3
jnp
cmpsl
imul
ljmp
xor
mov
lcall
push
in
and
adc
or
int3
xchg
test
call
cmp
add
iret
sbb
aas
call
clc
addr16
push
shl
stos
push
movsl
imul
mov
xor
insb
out
rorl
decb
dec
jno
outsl
cmpsl
arpl
popa
lahf
mov
push
dec
int
movsb
mov
in
mov
adc
mov
sub
adc
int3
fstpl
sub
xor
sahf
popf
ljmp
lret
fsts
push
xor
jne
fs
dec
cmp
inc
dec
icebp
sahf
popf
xchg
mov
outsb
inc
ljmp
lods
fcmovb
and
push
mul
scas
cmp
jbe
mov
iret
adc
push
or
dec
inc
dec
fsubs
std
pop
iret
jne
mov
fsubrl
or
fwait
loopne
mov
insl
jne
aad
jmp
fisubrs
jmp
mov
ds
xchg
rclb
enter
dec
mov
pop
push
rcl
xor
stc
rcrl
in
mov
pushf
test
and
mov
pop
test
sub
sub
movsl
scas
jae
xchg
leave
aas
test
testb
adc
mov
inc
adc
in
push
xor
mov
je
lock
inc
fwait
movsl
aad
mov
push
mov
shrb
pushf
cmp
in
sbb
ficoms
mov
mov
sbb
cmpb
xchg
imul
or
mov
les
jbe
push
out
or
outsl
cmc
imul
insb
and
int3
add
scas
sbb
pop
ficoms
jp
test
fs
out
pop
dec
mov
push
test
movsb
pop
pop
dec
cltd
jo
leave
in
imul
clc
icebp
out
nop
sti
mov
dec
dec
xchg
sbb
mov
push
push
or
roll
dec
jl
xchg
push
mov
aad
outsb
repnz
xchg
xchg
outsl
ja
cwtl
std
out
lea
in
ret
lret
mov
sbb
adc
pop
sub
scas
and
out
hlt
jg
fs
add
stos
repnz
mov
push
sti
add
mov
bound
aad
out
in
je
dec
push
adc
aas
and
mov
pop
repz
jb
pop
int3
jle
sub
mov
hlt
xchg
arpl
stos
ds
loopne
jge
aaa
mov
push
push
fldcw
scas
shrl
daa
xor
add
popa
stos
test
mov
test
mov
enter
push
imul
int3
mov
cmpsl
js
lods
sub
push
mov
pop
dec
cltd
pushl
push
out
std
adc
out
cmpsb
pop
push
mov
sub
xchg
jl
dec
push
adc
int3
inc
mov
into
scas
lock
int3
xorb
test
sbb
cmp
fcoml
pop
gs
ss
call
inc
mov
int3
or
dec
dec
cmp
lret
jae
add
jne
mov
push
dec
in
les
sar
dec
add
and
lods
mov
test
es
xchg
pop
mov
jne
aam
test
lcall
xchg
scas
or
int3
lea
jne
std
bound
mov
adc
lret
imul
jb
xor
js
lret
add
pop
js
insb
das
sbb
orl
pop
xchg
stos
cmpsb
outsl
iret
mov
mov
mov
aaa
pop
outsb
cli
loope
cmpsl
cmp
mov
inc
stos
sbb
mov
sbb
mov
pop
ds
fistpll
xor
push
xlat
push
inc
aaa
ja
and
lret
rcll
sub
xor
pop
clc
lcall
adc
movsl
dec
dec
popa
lods
push
shrl
jae
mov
mov
std
push
xor
addb
stos
ror
sub
mov
mov
pop
lock
inc
push
inc
out
movsb
add
mov
xchg
fldl
and
mov
in
add
ljmp
mov
jo
jecxz
movsb
jne
dec
pushf
int
sbb
pop
cwtl
inc
sbb
mov
dec
dec
repz
orb
dec
lds
adc
mov
and
cmp
js
inc
lods
mov
and
stos
xchg
mov
das
mov
and
mov
push
fstpl
jecxz
aas
mov
pop
nop
cli
xchg
mov
fildl
inc
adc
adc
and
or
js
imul
daa
rolb
mov
outsb
jbe
inc
cmp
pop
push
mov
ficomps
cmpsb
pop
mov
loop
adc
pop
out
push
lods
stos
and
sbb
cltd
xor
inc
add
imull
inc
mov
outsl
icebp
sahf
mov
pushw
mov
push
mov
mov
push
inc
lret
inc
outsb
sahf
push
push
repz
rcl
inc
movsl
push
xor
faddl
xor
dec
xor
nop
ss
push
push
add
fstps
sbb
cwtl
scas
push
push
cmp
cmp
mov
hlt
aad
fldl
and
fistps
dec
and
movsb
les
add
xchg
mov
jle
insl
push
dec
dec
pusha
add
arpl
mov
into
jae
sub
dec
lcall
jbe
pminsw
push
or
xchg
mov
jno
dec
xor
cs
int3
repz
sub
in
dec
push
testl
jg
loope
xchg
sbb
dec
leave
and
rcr
cli
sbb
dec
xchg
sub
jp
int3
jp
and
jle
repz
pop
pop
in
sub
pop
imul
push
mov
mov
add
orl
decl
mov
mov
mov
xor
mov
andl
mov
inc
mov
cmpl
jb
jmp
push
push
call
cmpl
jb
sub
mov
xor
orl
sub
mov
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
add
movl
lea
mov
movl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
call
jmp
mov
xor
or
and
mov
mov
sbb
mov
mov
addl
xor
sbbl
add
mov
movl
cmpl
je
cmpl
jge
jmp
call
mov
dec
mov
jmp
mov
mov
mov
movl
add
or
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
push
push
call
jmp
mov
xor
mov
mov
sub
xor
add
mov
add
movl
cmp
je
movl
mov
movl
jmp
mov
xor
andl
push
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
call
jmp
add
movzwl
sub
xor
mov
xorl
add
movl
push
mov
adc
mov
xor
xor
cmp
movl
jne
movl
cmp
movl
jne
push
movl
jmp
sbb
mov
xor
adcl
add
xor
decl
add
movl
adc
adcl
xor
xor
movl
cmp
movl
jne
movl
cmp
jne
and
mov
inc
xor
movzbl
and
add
subl
mov
xor
mov
mov
and
mov
orl
xor
xorl
add
addl
imul
mov
xor
add
movl
cmp
mov
movl
je
xor
mov
andl
add
mov
sbb
mov
orl
xor
andl
add
imul
movl
mov
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
pushl
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
notl
mov
jmp
and
les
imul
jp
pop
jp
sbb
pop
fistl
sbb
xchg
arpl
ret
sub
xchg
aam
ds
imul
fiaddl
clc
fbld
lret
stc
xor
push
sbb
lods
mov
push
rorb
mov
xchg
xchg
and
push
fs
lds
enter
sarb
mov
insb
shrl
jmp
negl
pop
hlt
sub
dec
movsb
scas
mov
sbb
fisubrl
jmp
repnz
imul
sbb
outsl
cld
add
jmp
lret
xor
les
dec
sbb
lock
push
pop
pop
pop
ds
iret
fwait
push
jmp
inc
shl
dec
rorb
loopne
adc
mov
ja
shr
rcrl
and
sbb
jb
xor
mov
and
ja
sti
xor
lret
push
fstpt
in
push
mov
mov
andl
leave
daa
push
pop
test
pop
cmp
loopne
inc
das
shl
mov
loopne
iret
icebp
insl
jae
xor
bound
aam
inc
fwait
lret
imul
out
fldcw
orb
enter
out
dec
push
aas
xchg
adc
ljmp
xchg
test
mov
mov
jb
jp
cmpps
lds
push
xchg
loopne
gs
fs
iret
in
rorl
aam
xor
in
aad
test
cmp
mov
add
fbld
push
ficompl
les
push
push
dec
xor
inc
pop
mov
and
cmp
repz
and
pusha
mov
mulb
shlb
cmp
mov
mov
mov
sahf
jns
scas
pop
jge
xchg
cltd
adcl
or
pop
ret
or
xor
dec
and
in
js
xchg
cmpsb
jns
cld
adc
arpl
lock
and
and
inc
inc
loopne
icebp
mov
mov
sbb
cmp
ljmp
cld
in
jl
insb
inc
mov
or
sub
lcall
in
subb
lret
jmp
call
jg
jno
das
jp
fwait
shll
sbb
cs
dec
addr16
mov
sbb
mov
push
or
aaa
xor
pop
cmp
adcb
and
xor
xlat
add
movsl
test
jl
xlat
pushw
popa
repz
popf
cwtl
in
test
or
xor
and
sub
mov
xor
pushf
sbb
pop
push
stos
sub
jg
sbb
insb
xor
mov
dec
int3
loopne
imul
inc
scas
cmp
movsb
cmc
jg
push
and
xchg
mov
sbb
xchg
jns
inc
fiaddl
stc
lcall
or
mov
roll
xor
pop
sbb
jae
xchg
mov
scas
pop
popf
mov
xor
clc
push
lea
iret
adc
mov
ds
stc
ss
jno
xchg
adc
aas
popa
jne
movzwl
cwtl
cmp
ja
jl
mov
fldt
ds
cli
daa
leave
push
jge
popa
mov
push
sub
inc
mov
ja
xor
add
adc
aas
es
push
pmaxsw
pop
clc
ss
xor
clc
lahf
push
or
add
imul
dec
outsl
sub
sete
outsb
pop
jae
stos
in
or
xchg
inc
inc
iret
out
shlb
sub
mov
fcmovbe
pop
cmc
dec
imulb
shll
jmp
sbb
std
adc
pop
gs
xchg
test
loope
dec
icebp
add
mov
outsl
adc
lods
push
enter
add
dec
mov
cmc
xchg
xchg
inc
pushf
adc
aam
addps
fists
bound
outsb
add
cmp
mov
pop
add
mov
pushf
push
add
lret
xchg
sbb
ret
out
sti
popa
leave
or
lcall
mov
aad
xchg
ss
sub
sub
addb
jg
aas
shll
pop
pop
mov
imul
out
fistps
or
mov
pop
jecxz
decl
mov
mov
pop
fidivrs
push
xchg
xlat
push
jle
xchg
cmp
mov
dec
loopew
andb
fs
in
cmp
orb
push
mov
loop
aas
jnp
pop
sbb
dec
inc
mov
mov
inc
sbb
clc
cli
dec
mov
out
sbb
jbe
enter
and
fwait
cltd
aad
push
cmp
fdivs
setge
lcall
inc
cmp
jbe
lock
arpl
lcall
sbb
mov
cmpsl
insb
push
ss
mov
push
stos
popf
mov
cwtl
inc
cld
hlt
dec
imul
clc
add
jo
ss
jl
mov
push
mov
pop
lods
push
gs
cli
jg
lret
rcll
popf
in
add
xor
std
ss
mov
stos
into
add
lcall
pop
xor
or
scas
cmpl
rclb
xor
loope
test
fcmovnb
add
icebp
mov
dec
mov
das
ss
inc
push
repnz
and
adc
into
in
cmp
out
in
lea
test
xor
jne
xchg
fisttpll
movsl
mov
adc
push
mov
mov
cmp
movsl
adc
sub
loop
bnd
fisttpl
xchg
lahf
push
or
es
ds
enter
xor
ds
xchg
cli
rolb
ss
test
sub
mov
push
into
dec
pop
shrl
xchg
ret
jo
stc
out
in
jmp
andl
mov
push
pop
xchg
xchg
or
add
push
stos
xor
mov
sub
lds
sbb
add
dec
xor
jo
pusha
pusha
sub
es
outsl
std
pushf
push
scas
stos
mov
frstor
repnz
adc
into
push
rorl
aas
ret
aas
pusha
xor
cltd
inc
fnsave
add
xor
sbb
dec
sub
dec
inc
cmp
pop
arpl
add
xchg
or
jmp
inc
or
sarl
dec
xchg
pop
ffreep
and
jecxz
adc
cmp
mov
mov
fisubrl
mov
add
in
aad
mov
cld
std
xchg
sub
leave
mov
mov
xchg
lret
mov
cmp
je
dec
sub
pushf
leave
testl
jne
rclb
inc
xor
insl
stos
xor
js
sbb
jb
iret
xor
add
stos
icebp
insl
lret
jp
icebp
jbe
call
dec
pop
sti
fdivrp
mov
sbb
loopne
orb
dec
cmc
hlt
sub
xchg
inc
mov
push
ljmp
xor
dec
mov
add
pushl
mov
add
outsb
aam
add
sub
mov
jge
add
cmp
aad
inc
inc
sbb
test
insl
fs
call
pop
sbbb
dec
cmpsl
scas
mov
push
imul
add
add
movsb
adc
syscall
or
data16
mov
fucom
test
pop
scas
xor
inc
sub
ds
jo
or
rol
aam
sbb
jg
push
pop
xchg
jge
pop
rcrl
movsl
jge
ja
pushf
sbb
daa
mov
jno
mov
inc
adc
ficompl
lds
lock
rorl
into
or
push
pop
jne
cmpsb
and
push
pushf
arpl
cmpsb
cmpsl
stos
pop
sbb
mov
shrl
sbb
dec
out
loopne
cmp
aad
filds
arpl
iret
loop
mov
mov
inc
mov
data16
sbbb
fnstcw
jne
mov
inc
jle
arpl
stos
and
mulb
jns
mov
jmp
and
sub
sbb
push
xchg
sbb
or
movb
cmp
addr16
cmpsl
jnp
jp
or
sub
add
aaa
stos
js
addl
or
neg
int3
fisttpl
pop
xor
insb
ds
inc
push
inc
push
pop
test
std
xor
fbld
sub
sbb
js
insl
sbb
fsubrs
in
test
aad
repz
add
push
mov
and
push
pop
cmp
sub
sub
and
or
les
lods
outsb
aas
xor
repz
cmpsb
jno
adc
out
nop
sbb
cltd
dec
incb
jecxz
ret
xchg
push
dec
sub
int
mov
insb
sti
mov
and
lods
inc
dec
pop
adc
sti
xchg
lret
arpl
xor
pop
mov
bnd
mov
xchg
stos
scas
xor
dec
mov
imull
rorb
or
cmp
jnp
mov
cmp
jb,pn
push
xchg
ficoml
fwait
dec
jae
mov
aas
and
imul
sbb
and
cmc
cmpsb
xor
in
jnp
inc
hlt
insl
outsb
pushf
mov
dec
aas
lcall
popf
sub
fs
enter
and
sub
dec
lods
sahf
hlt
mov
jnp
push
xor
insb
fimuls
push
or
repnz
xchg
test
xchg
movsb
sbb
sti
hlt
enter
insl
int3
push
pop
jne
nop
shll
push
pop
lock
jp
stc
push
pusha
pop
out
cwtl
dec
adcl
in
and
inc
pop
imul
mov
inc
cmpsb
adc
dec
mov
aam
sbb
int
mov
loope
dec
rorl
sbb
xchg
cmpsl
xor
cmp
insb
pushl
enter
in
ffree
sub
jo
cmp
or
xchg
js
dec
pop
rorb
inc
orl
and
xchg
jo
jp
lret
out
loope
aas
adc
inc
jmp
xor
out
ret
call
or
fnsave
sub
aam
mov
sub
pop
cmp
daa
pop
pop
mov
mov
out
in
inc
push
repnz
cmc
add
aaa
sarl
sbb
mov
or
pop
mov
mov
xchg
mov
aad
cmpsl
imul
ljmp
dec
outsb
or
push
push
jno
sbb
lods
xor
mov
ss
ret
imul
fwait
jl
xchg
mov
inc
mov
daa
andl
cmp
xorb
pop
push
cld
xchg
sahf
pop
lahf
jmp
pop
ficompl
lods
pop
xchg
jge
add
inc
sbb
mov
inc
cmc
cwtl
mov
dec
fldcw
int3
in
or
addr16
or
push
addr16
cmp
rorl
fld1
aam
shll
iret
je
mov
jns
adc
push
stos
out
jbe
shrl
lcall
mov
std
jecxz
loop
test
mov
ficoml
or
sahf
dec
sti
push
cmp
arpl
pop
std
jg
outsb
test
jecxz
lcall
push
aas
sub
test
dec
loop
popf
mov
inc
pop
cmp
cmp
jecxz
and
icebp
mov
and
xchg
into
mov
fimuls
scas
subb
dec
inc
dec
in
fisubrl
out
pop
in
xor
xchg
repz
aam
mov
fcomps
test
insb
pop
mov
int
cltd
cmp
xchg
or
rcrl
sahf
or
mov
dec
out
or
sub
into
sbb
lds
subl
mov
xchg
xchg
mov
mov
pop
leave
xchg
ja
push
push
jg
xor
addb
mov
repnz
mov
xchg
ja
sti
in
xor
sub
add
pusha
out
or
hlt
push
mov
ds
add
test
lret
in
rolb
pop
insl
pop
push
push
sbb
pop
fcmovnbe
push
and
push
jge
jbe
stos
add
mov
pop
pushl
loop
pop
adc
sbb
cmp
jno
pop
loopne
outsb
mov
adc
das
push
pop
xorb
xchg
pop
jae
in
xchg
sbb
cmp
in
aaa
fidivrs
adc
mov
dec
adc
push
out
mov
rcrb
pop
xor
pop
std
cmpsl
leave
xor
movsb
icebp
push
test
aam
je
sub
aaa
outsl
pop
add
push
mov
fwait
cmp
gs
push
popa
adc
cmp
or
fsubrl
mov
insl
aam
cmp
addr16
mov
jnp
dec
pop
outsl
xor
add
and
scas
sbb
out
hlt
adc
fbstp
fwait
addr16
or
pop
add
dec
sbb
aas
cld
xor
dec
or
addr16
xor
aaa
fcmovnbe
jmp
call
cwtl
adc
dec
movsl
fcomip
imul
sbb
add
pop
out
pop
jbe
cmc
mov
shr
cld
mov
in
xchg
cwtl
in
outsl
rol
stos
insl
leave
aaa
sub
add
enter
cmc
dec
and
and
cmpl
leave
push
cmpsl
fdivr
sub
mov
scas
cmp
addr16
addr16
cmp
push
jae
mov
mov
inc
sbbl
je
fs
cmp
xor
sub
ret
dec
repnz
jge
cmp
leave
and
mov
pop
add
inc
mov
lcall
mov
incb
xchg
ds
cltd
outsb
mov
jmp
sub
mov
xor
scas
popf
or
mov
stos
xchg
jno
lahf
adc
xlat
jl
ds
insb
sbb
pop
repnz
imul
push
inc
xchg
out
cmp
into
mov
test
sub
xor
xor
push
in
pop
or
cmc
loope
push
inc
fwait
mov
fmuls
inc
in
xor
pop
pop
jne
int
mov
cli
mov
xchg
xorb
dec
inc
vunpcklpd
stos
dec
inc
xchg
mov
cs
xor
ss
mulb
out
bound
test
pop
sbbb
in
adc
mov
rclb
popf
mov
iret
xchg
popa
sub
lea
sub
mov
jp
pop
sbb
or
jge
mov
pop
outsl
dec
sbb
xchg
pusha
mov
loopne
dec
lret
es
push
cs
xchg
lret
sub
sbb
test
fcomps
mov
lcall
mov
cmp
jo
mov
stc
pop
mov
mov
push
lahf
jmp
dec
mov
add
xchg
arpl
insb
out
push
pop
icebp
repnz
jg
out
stos
addr16
adc
sub
popf
ficoms
sbb
es
scas
mov
sub
mov
or
inc
inc
cmp
pop
into
jae
andl
cmp
lods
das
adcl
ficoms
xor
shll
insl
push
aad
jbe
addr16
cmpsb
sbb
mov
lcall
test
addr16
sar
pop
mov
lods
test
arpl
ret
jne
sbb
mov
fisubs
xor
jne
cmp
add
xor
or
sbb
mov
outsl
fadds
ds
out
mov
cld
loop
aad
in
in
divb
jle
cmpsl
jge
bound
jmp
addr16
daa
icebp
rclb
or
pop
mov
inc
mov
push
mov
jno
fcom
add
inc
or
and
cli
arpl
lret
add
cmp
push
ret
jae
cmpsb
inc
sbb
gs
push
mov
sbb
xchg
jg
arpl
loopne
lcall
lret
bnd
cmp
jae
ja
call
movsl
sub
sbbl
push
mov
push
mov
daa
das
hlt
cld
sbb
and
lcall
out
sbb
addr16
jl
mov
ljmp
ljmp
ret
push
out
mov
adc
push
push
jnp
sub
mov
sahf
or
xchg
sub
loopne
lock
add
lods
int3
xor
scas
fwait
pusha
psubsb
mov
mov
or
mov
xchg
xchg
jmp
stos
popf
mov
sbbb
xchg
dec
adc
xchg
mov
mov
jne
dec
pop
ffreep
lods
adc
mov
dec
mov
xor
mov
imul
test
cld
jecxz
in
xchg
mov
les
push
sti
std
cmp
call
out
sub
test
loop
xor
jne
repnz
das
dec
sarb
sti
fidivrs
jb
cmp
dec
push
das
repnz
cmp
lods
aaa
jg
shll
cmpsb
in
repz
aam
mov
shrl
loopne
xor
mov
pop
stc
or
xchg
mov
pop
fxch
jb
pop
mov
or
shrl
pop
fsts
or
pop
sbb
xchg
sub
movsb
push
cmpsl
jo
and
jo
dec
sub
fwait
jp
addr16
mov
out
inc
rsqrtps
xchg
fwait
sub
mov
aaa
je
inc
xchg
xor
xchg
les
sbb
das
push
pop
and
cwtl
xchg
repz
jb
repz
pop
cwtl
mov
cmpsb
jle
ds
mov
xor
xchg
ds
and
dec
sbb
lret
push
out
pop
fnstsw
aam
mov
enter
out
adc
xor
adc
rcrb
pop
sbb
jl
push
movb
enter
stc
fisubrl
cmovg
popa
push
push
push
lods
cmpsl
push
aam
pop
mov
fadds
in
sub
sahf
cmc
in
arpl
jb
xor
packuswb
dec
push
shrb
outsb
repnz
imul
outsl
adc
dec
imul
sbb
sub
jne
test
pop
dec
mov
hlt
stc
cmp
xor
dec
mov
sbb
shrl
xchg
push
dec
ficoms
mov
add
faddl
mov
mov
or
sub
scas
cmpsl
stc
loopne
and
jge
jae
iret
pop
repnz
jp
xchg
sahf
enter
es
std
fs
cmpsb
adcb
mov
xchg
dec
shrl
xchg
sahf
aad
dec
sbbb
outsl
sti
dec
imul
fnstenv
pop
push
insl
dec
adc
jg
lahf
lahf
cmp
loope
arpl
scas
xchg
sbb
rclb
stc
jmp
mov
sub
ret
mov
imul
js
jbe
add
xchg
enter
jno
cli
xchg
fldcw
mov
sbb
inc
xlat
scas
and
xor
lcall
adc
xchg
inc
sbb
je
xor
mov
dec
hlt
lret
or
sbb
dec
sbb
xchg
lahf
mov
rol
xchg
mov
adc
out
call
cmpb
inc
lods
enter
push
lcall
xchg
mov
xlat
pop
insl
sub
stos
push
mov
cld
mov
and
in
loopne
jne
movsl
cmp
push
push
repz
and
jae
lcall
and
aas
or
jle
push
ljmp
lock
inc
xchg
dec
cmp
ret
xchg
pop
and
mov
inc
pop
dec
jbe
sub
in
fcompl
out
push
add
and
mov
xchg
loop
movsb
and
jmp
repnz
call
imull
xor
testl
stc
dec
mov
jle
xor
test
xor
daa
scas
in
inc
adc
lock
xchg
dec
mov
mov
js
ja
fstpt
pop
inc
fs
lahf
add
jge
and
aaa
mov
mov
outsb
mov
ja
movsb
lods
and
cmc
dec
add
cmpsb
xchg
mov
int
push
inc
mov
inc
mov
ret
std
xchg
retw
test
je
mov
mov
mov
inc
loope
cmpsb
mov
test
sub
stos
mov
fildl
fs
ss
enter
dec
or
subl
inc
in
into
sbb
dec
hlt
jl
lret
cli
fsub
inc
mov
add
pop
mov
testb
xchg
push
rolb
xor
ds
adc
pop
jge
and
mov
sub
and
sbb
jg
lret
adc
or
cs
push
loop
cli
roll
xor
mov
lods
pop
adc
xchg
cpuid
mov
outsl
xchg
push
push
and
imulb
add
jg
in
inc
dec
loope
mov
in
lea
adc
rclb
in
rcr
std
subl
sarl
mov
inc
mov
mov
pop
es
cld
std
test
xchg
inc
pop
outsb
pop
pusha
es
test
fwait
js
pop
pop
insl
push
imul
sbb
and
jmp
add
lea
repnz
xor
mov
andb
outsb
outsl
rcl
pop
push
jbe
shrb
jnp
mov
daa
mov
mov
inc
js
outsb
dec
mov
shll
call
mov
ja
adc
out
cmp
push
movl
xchg
daa
or
fwait
rcll
lret
dec
pop
push
or
addr16
in
pop
pop
mov
mov
and
shlb
xchg
ret
stc
in
sub
rol
cmpsl
inc
xchg
cwtl
xor
mov
in
dec
jg
jmp
aaa
cmp
mov
sub
insb
cmp
clc
out
mov
push
dec
mov
and
fsubs
mov
in
aaa
cli
fcmovu
push
push
out
sub
out
mov
mov
push
and
mov
mov
notb
cmp
mov
or
outsb
and
xchg
sbb
or
mov
or
inc
xor
jl
xor
sbb
stc
pop
push
fnstcw
jmp
cmp
jecxz
fcompl
xchg
stc
ret
pop
adc
dec
push
add
inc
test
in
subb
scas
mov
repnz
add
push
dec
jp
pop
out
or
loope
add
add
push
sbbb
add
imul
xchg
or
jmp
lcall
dec
js
or
std
sahf
lcall
sbb
or
cmp
mov
outsb
dec
inc
jnp
dec
xchg
lea
test
roll
in
jnp
pusha
cmp
sbb
jp
cmp
decb
sub
adc
jno
inc
push
in
mov
sbb
push
cmpsb
std
mov
scas
fistps
adc
lock
jecxz
jp
int
std
sbb
pop
mov
or
call
cwtl
nop
rclb
mov
lcall
insl
lock
leave
mov
rolb
sahf
push
fnstsw
sub
mov
flds
jae
loop
shlb
mov
push
xlat
add
clc
xchg
xchg
inc
nop
mov
jno
mull
int
mov
xor
clc
add
hlt
add
jmp
jmp
scas
push
dec
lea
add
sbb
out
push
cltd
lret
pop
sub
jne
lahf
mov
xchg
mov
daa
xchg
jae
es
xchg
xchg
sbb
lret
mov
inc
in
cmp
movsl
rorb
inc
fwait
push
dec
inc
add
mov
fwait
mov
jne
jmp
inc
push
insl
xchg
repz
and
enter
jle
and
add
popa
cmp
cmp
daa
fcompl
fcoml
xchg
loopne
movsl
popf
icebp
mov
or
sub
ja
add
pusha
fdivr
jnp
movsb
mov
mov
inc
iret
push
dec
mov
mov
addr16
inc
lods
push
sub
push
sub
pop
pop
pop
bound
dec
dec
loope
fwait
mov
mov
ret
add
repz
push
mov
in
or
xlat
nop
js
pop
lcall
in
xor
add
daa
in
pop
mov
mov
scas
bound
xor
popa
fcmove
insl
loope
add
jbe
nop
mov
andb
in
xor
insb
mov
popf
int3
outsb
movsb
stc
dec
cmpsb
ret
cli
inc
sbb
push
sub
pop
and
xchg
xor
daa
and
pop
mov
mov
mov
mov
rolb
mov
adc
or
divb
cwtl
cmc
pusha
loope
add
outsb
sbb
dec
test
ljmp
out
push
jns
jae
fwait
lea
inc
out
xchg
ret
imul
call
mov
cmp
fs
lods
mov
dec
rolb
or
inc
xchg
inc
pop
fsubs
cwtl
stc
mov
add
stos
aaa
xor
xchg
in
xor
pop
gs
lods
ja
pushf
jp
out
sub
sahf
xchg
rorb
xor
pop
ds
or
ja
rcl
jge
lods
lcall
leave
mov
cmpsl
enter
sub
gs
xchg
idivb
mov
sar
les
lds
adc
inc
ret
xorb
xor
dec
lret
xchg
adc
inc
or
mov
inc
rcrb
or
mov
push
out
dec
scas
lods
stos
inc
sahf
in
and
into
push
mov
add
stc
fs
xor
cmpsb
mov
sub
lods
fwait
inc
arpl
pop
adc
es
mov
lret
mov
mov
popf
ds
mov
es
dec
sub
imul
cmpsl
cltd
icebp
or
cmp
xchg
mov
mov
mov
dec
xor
sbb
xchg
insl
xor
ficomps
sar
fistl
sarb
test
sub
sbbl
pop
pop
sub
cmpsl
repnz
ret
scas
xor
aam
in
xor
mov
and
pop
push
jae
js
out
bound
pop
fstl
or
xchg
mov
xor
bound
mov
and
inc
into
lcall
sbb
mov
les
outsl
xchg
lahf
scas
mov
nop
adc
inc
mov
mov
shl
mov
jge
test
mov
sbb
or
subb
mov
inc
popf
mov
pop
stos
push
imul
dec
and
addr16
mov
inc
jno
mov
dec
add
pop
movsl
out
andb
mov
sahf
jne
add
mov
or
xor
leave
pop
test
data16
lret
add
pop
jno
dec
ja
decl
cs
xchg
divb
xchg
sbb
jmp
out
lods
jns
ss
insl
outsl
cmpsb
jne
je
push
inc
mov
cmp
pop
cmpsl
mov
lock
inc
fldt
jle
xchg
add
or
xchg
add
dec
sbb
psrld
push
add
push
adcl
es
jno
mov
xor
out
pop
push
jg
andl
cld
and
mov
sbb
mov
mov
inc
lret
insl
jno
shl
cwtl
push
aaa
sub
mov
pop
jmp
cltd
add
sbb
fcoml
lds
das
mov
sbb
mov
jmp
pop
or
cmp
pop
aad
pop
mov
fsub
bound
ja
jle
or
cmp
xchg
adc
in
nop
enter
sbb
inc
push
push
inc
mov
push
ud2
push
cli
fxch
adcl
das
dec
inc
arpl
xchg
sub
fisubs
adc
xor
aas
jge
test
sbb
pop
jecxz
push
aam
mov
jno,pt
popa
jmp
xchg
shr
inc
mov
add
pop
pop
inc
push
inc
inc
ficompl
push
out
add
in
cmp
dec
dec
mov
pushf
mov
test
mov
mov
xor
mov
pusha
xor
jecxz
clc
add
repz
adc
outsl
mov
inc
add
sub
add
add
lahf
mov
pop
push
lret
dec
inc
mov
stos
and
sub
pop
call
mov
add
gs
in
or
inc
test
push
loope
ret
sbb
and
lahf
pop
dec
cmp
das
test
mov
aad
or
cmpsb
add
add
sarb
sbb
std
into
iret
lret
lret
jmp
fwait
mov
sub
lods
pop
fs
std
in
sub
inc
add
cmp
cmp
adc
pop
lcall
mov
leave
mov
mov
or
sbb
jo
mov
cmpsl
add
sbb
fdivs
xchg
or
dec
das
and
and
out
aad
mov
pushf
dec
xchg
xlat
rclb
inc
xchg
add
fidivs
lock
in
jns
and
inc
andl
nop
cltd
lock
sub
ss
add
xchg
xor
cwtl
gs
gs
dec
fcomps
notb
cwtl
lret
pusha
pushf
subl
lcall
fstpl
iret
addr16
stos
dec
arpl
xchg
dec
icebp
xor
shll
dec
popf
lret
xchg
lea
repz
adc
fwait
mov
movb
sbb
pop
call
mov
aas
or
mov
mov
arpl
fnstenv
and
or
popf
push
and
and
fcmovne
or
lret
mov
iret
push
clc
xor
pop
add
es
outsl
xchg
dec
xor
adc
jge
in
enter
sub
and
int3
jo
outsb
sbb
jp
adc
xor
testb
cmp
or
lea
fsubr
mov
push
push
sbbb
bound
mov
xchg
sti
xor
test
incb
inc
mov
push
call
in
adc
cltd
or
pop
pop
or
jmp
rcr
cmp
roll
jo
jns
inc
in
jp
rcr
pop
repz
adcl
sbb
lcall
and
add
scas
xor
mov
ja
cld
jmp
mov
inc
sub
insl
xorb
iret
add
pop
mov
xchg
sbb
or
xchg
xor
jp
iret
mov
mov
fs
sbbl
cmpsl
mov
jb
arpl
incb
push
in
mov
daa
push
lahf
push
mov
pop
lret
fldt
adc
cmpl
xchg
jns
lret
push
add
sub
mov
movsb
xchg
xchg
mov
sub
jne
mov
inc
fwait
adc
pusha
pop
not
cmp
scas
daa
pop
ljmp
shl
sti
pop
xor
jecxz
add
jnp
pop
mov
aaa
push
mov
sub
int
xchg
cld
inc
add
sti
stos
lds
int
sub
mov
jmp
mov
xor
movl
cmpl
je
cmpl
jbe
jmp
call
mov
dec
mov
jmp
mov
mov
mov
xor
mov
sub
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
jg
mov
mov
xor
mov
sub
mov
jmp
mov
xor
add
add
mov
mov
mov
xor
add
not
and
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
je
jmp
sbb
pop
rcll
jae
mov
and
jp
je
jp
xchg
mov
scas
adc
mov
or
or
pop
xor
pop
mov
cmc
les
aad
sahf
bound
mov
jno
ljmp
sub
imul
cs
lahf
loope
add
test
push
xchg
xlat
jecxz
pop
jecxz
pusha
mull
lcallw
mov
xlat
jecxz
sarb
cltd
arpl
cld
fimull
addl
pop
mov
mov
jp
jae
xor
orl
push
clc
inc
mov
xor
mov
jnp
repz
hlt
sbb
sbb
jmp
adc
hlt
jmp
movsb
cmp
xchg
jno
cmp
and
pop
mov
inc
jecxz
std
hlt
dec
sbb
sub
test
mov
jg
sub
cmp
test
or
lds
mov
sub
shll
sbb
sbb
pusha
sahf
dec
lock
or
das
jne
shr
aas
pusha
or
xchg
imul
scas
jne
mov
cmpl
inc
sbb
insb
jae
cmpsl
xor
xchg
pop
jge
fsubr
inc
loopne
fiadds
in
jmp
in
cmpsl
dec
js
popa
xchg
push
out
cmpsb
mov
xchg
cmp
dec
pusha
sub
inc
aam
cld
cmp
dec
jp
jg
in
mov
scas
and
pop
rorl
jno
mov
xchg
cmpsb
lahf
xlat
pop
and
iret
adc
dec
roll
stc
mov
or
adc
fcompl
into
xchg
fiadds
xor
shrb
stc
int3
fdiv
adc
xchg
sbb
cltd
aaa
test
add
or
lods
jbe
pop
adc
pop
sar
ficomps
stos
adc
sub
dec
out
sbb
andl
subb
stos
push
insl
scas
sbb
inc
fadds
sbb
sub
mov
in
loop
out
xchg
add
push
sbb
inc
inc
mov
fnstcw
pop
stos
subb
out
arpl
push
push
and
pop
push
xchg
cmp
inc
shll
adc
fcomps
and
test
insb
in
add
mov
aaa
mov
les
mov
sub
sub
gs
and
pop
arpl
jmp
xchg
sahf
mov
mov
mov
sbb
mov
shlb
push
push
pop
xchg
xchg
enter
adc
or
add
jmp
nop
test
sahf
push
and
mov
fisttps
xor
lcall
ljmp
push
or
rcll
xchg
push
pop
out
and
mov
loop
leave
and
psraw
das
mov
fstl
sub
cmp
mov
inc
dec
mov
xchg
pop
jle
push
mov
push
xchg
aam
mov
enter
mov
test
dec
out
inc
mov
xchg
push
jne
add
leave
push
sarl
xchg
jne
mov
cmp
scas
fdivrs
or
or
jmp
adc
mov
sbb
test
iret
loopne
loop
xorl
mov
sbb
cmp
pop
inc
inc
lock
clc
mov
loopne
addb
pop
and
bound
adc
int
add
jno
movb
rclb
insb
dec
cmp
push
aaa
fisttpll
stc
orb
push
push
sahf
add
cltd
sbb
sbb
jecxz,pt
jbe
adc
inc
push
jnp
or
adc
in
xchg
push
push
mov
sahf
xchg
sub
imul
in
scas
and
pop
or
xchg
sarb
push
mov
es
xchg
add
lahf
loope
sub
inc
push
cwtl
scas
ret
xchg
stc
pop
mov
ret
outsb
and
jmp
pop
nop
push
dec
add
push
cmp
or
add
ret
cld
xchg
xor
outsb
sub
mov
lret
rcrl
add
or
repnz
xor
xor
sbb
arpl
loope
mov
push
cwtl
dec
gs
cmp
out
mov
pop
imul
movsb
inc
addr16
xor
mov
int3
lods
ret
js
inc
stc
xor
mov
mov
out
sub
jbe
outsl
out
sbbl
repnz
leave
xor
je
iret
mov
scas
aad
mov
fwait
cmp
sahf
dec
cmp
adc
daa
ja
int3
lods
jns
cmpsl
push
loope
push
movb
xor
scas
addl
daa
mov
stos
ret
insb
test
cld
pop
sti
mov
aas
icebp
aas
pop
xor
push
mov
cmp
pop
inc
in
inc
in
popa
adc
adc
adc
in
and
in
mov
inc
das
mov
ljmp
mov
push
mov
scas
adc
cmp
fnstsw
outsl
mov
sbb
test
mov
shlb
push
cmpb
mov
jbe
xor
or
jmp
mov
add
notb
aam
adc
loope
xchg
mov
xor
sub
add
test
push
lea
pop
dec
test
fwait
into
push
push
sub
lret
clc
rorl
hlt
ret
mov
repnz
shl
xchg
or
push
adc
arpl
pop
push
aad
mov
sub
sub
jecxz
mov
push
data16
pop
lret
inc
pushf
dec
test
fstps
in
sbb
stos
push
ficomps
mov
sbb
sahf
ja
out
ds
outsb
insb
movsb
movsl
test
xchg
adc
das
in
bnd
cld
cwtl
cmc
cmpsb
daa
scas
pusha
and
mov
pop
mov
jns
lret
enter
push
mov
movsb
push
stos
xchg
adc
ljmp
test
lcall
bound
inc
stos
iret
stc
cmpsl
push
iret
or
sub
jmp
mov
pop
sbb
lods
xor
jne
lods
adc
icebp
lock
loop
or
rcrb
fistl
pop
inc
fcoms
loop
sbb
aam
jno
out
push
aaa
xchg
loop
repz
mov
les
mov
cmp
mov
push
dec
dec
out
inc
xlat
add
sti
xchg
dec
nop
dec
pusha
inc
mov
sbb
mov
mov
jl
pop
arpl
mov
xor
movsl
dec
lods
es
dec
fldt
pop
jo
pop
imulb
ret
lcall
in
shlb
push
xchg
jp
xchg
bound
push
cmp
push
test
fmul
xor
icebp
mov
js
push
fcmovnu
in
nop
out
mov
je
xlat
or
xchg
mov
add
test
movsb
mov
loope
loope
sbb
rorb
mov
in
outsb
jno
sbbb
pop
bound
sub
push
int
lcall
call
shll
lahf
mov
mov
cmp
fadds
dec
pop
aad
insl
outsl
xor
popf
dec
and
gs
xor
push
ds
inc
jl
and
xchg
mov
lcall
mov
dec
jno
hlt
mov
int3
add
push
push
xchg
push
ja
cmp
pushf
int
jne
jp
jg
in
push
push
es
ja
or
iret
add
dec
lea
arpl
sahf
dec
fiadds
imul
pop
xor
push
fimull
das
push
mov
aaa
cmp
inc
movsb
ret
and
pop
mov
add
lea
rclb
add
shl
int3
sbb
jg
call
rcrb
lahf
test
lea
repnz
out
lods
dec
jae
mov
aad
loop
pop
shll
fidivrl
inc
xchg
repnz
fisubs
mov
addb
imul
loopne
in
ret
jecxz
cmc
or
lcall
mov
insl
insl
int3
loopne
add
lods
loope
fwait
push
push
aam
cmp
pop
stos
mov
lock
jno
mov
lret
mov
fisttpll
xchg
std
add
sub
xchg
jmp
and
test
test
jo
jg
and
push
jp
sbb
in
insl
imul
xor
cmp
cmpl
pop
sub
and
mov
push
push
push
sbb
inc
clc
and
adc
leave
sub
cli
in
mov
mov
stc
out
pop
clc
push
and
in
loopne
mov
shrl
cld
push
hlt
arpl
sbb
test
out
cltd
push
push
xchg
sbb
addr16
test
or
push
test
sub
sbbl
add
out
dec
dec
push
sub
jge
and
es
mov
data16
dec
insl
in
test
addr16
sub
cmp
std
mov
cmp
addr16
cltd
push
fucomip
pusha
aam
imul
movntq
fnstsw
xor
or
xchg
mov
jmp
notl
rcrl
sub
xor
shrb
push
iret
cmp
les
insb
in
mov
fs
pop
pop
cmp
jo
pop
xchg
sbb
arpl
inc
add
sbb
stos
scas
jmp
add
sbb
test
leave
loope
in
and
lahf
mov
mov
aad
and
add
xchg
dec
push
cmp
loop
arpl
add
cmp
xchg
pushf
cmp
jp
lea
jle
aaa
dec
enter
lret
std
inc
pop
pop
pop
adc
les
mov
dec
pop
pop
pushf
pusha
push
xor
leave
popf
into
les
fs
cld
adc
pop
std
dec
cmp
stc
add
loope
jmp
cltd
inc
insb
rclb
jp
ja
daa
pop
shlb
and
inc
loopne
jge
xchg
mov
mov
cmp
jns
negl
mov
imul
and
xor
arpl
adc
and
sub
inc
cmp
lods
cs
ljmp
aam
or
xchg
test
icebp
push
fnsave
mov
jbe
int3
xor
mulb
out
stos
repz
or
ss
es
add
push
jmp
insb
xor
aas
lahf
sti
in
cmovne
push
pop
das
and
or
cmpsb
xor
sbb
insb
push
cmc
aas
insl
xor
repnz
lock
repz
pop
push
mov
pop
sub
aaa
xlat
sbb
sarb
es
negl
cmpsb
sub
repnz
test
inc
sub
es
dec
dec
push
add
mov
push
sub
mov
aas
mov
xchg
adc
jae
test
mov
mov
fidivrs
sub
cmpsb
cmp
in
xchg
xor
pop
add
xchg
cs
mov
std
je
fwait
cmpsl
cmpsl
push
dec
mov
add
imul
lock
dec
add
adcb
cmp
es
mov
sub
cmc
xor
insb
loope
push
mov
add
pusha
sub
sbb
ja
dec
cmp
adc
popa
shr
lods
jb
idivb
cmp
cltd
decb
outsb
sysret
fwait
dec
pop
cmp
std
insb
jle
rolb
outsl
mov
aaa
lahf
notl
lods
mov
mov
mov
and
cs
cmp
mov
mov
jno
test
xor
inc
enter
into
and
or
cs
negl
insl
lcall
jbe
jae
scas
cltd
icebp
aad
es
imul
mov
xlat
data16
pop
pop
push
xchg
sbb
xchg
cmp
inc
jns
dec
xchg
test
mov
adc
outsb
movsl
test
cmpsl
pop
ss
sub
test
sbb
jle
out
imul
pop
xor
sahf
pop
aam
dec
cmp
jle
out
mov
mov
push
mov
lret
sarb
add
ss
lea
mov
mov
mov
fdiv
xchg
push
push
mov
sub
mov
bound
fadds
arpl
loopne
pop
or
add
push
enter
push
repz
sti
insb
enter
popf
hlt
cmpsl
out
xchg
jo
clc
xchg
aaa
je
inc
lock
mov
sub
add
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
mov
add
mov
mov
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
addl
sub
push
push
movl
push
xor
push
notl
call
mov
addl
push
andl
mov
lea
subl
push
push
sbbl
push
adcl
push
adcl
call
shl
movl
cmp
je
xor
movl
jmp
orl
push
call
xorl
test
movl
jne
lea
xorl
push
push
sbbl
call
cmp
movl
jne
movl
pushl
addl
push
sbbl
call
mov
mov
sub
sub
mov
orl
movl
movl
movl
or
lea
mov
add
lea
mov
mov
sub
and
mov
andl
mov
xor
xor
sbb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
and
mov
xor
xor
mov
or
mov
add
movl
mov
mov
mov
cmp
jne
sbb
mov
sub
mov
mov
adcl
xor
add
mov
xor
mov
subl
xor
add
mov
decl
mov
xorl
xor
sbbl
add
sbbl
mov
sub
mov
notl
mov
subl
mov
notl
mov
adcl
mov
mov
sbbl
mov
subl
mov
movl
sbbl
mov
movl
movl
mov
addl
xor
orl
add
jmp
decl
lea
adcl
push
xorl
push
push
push
subl
call
movl
shl
cmp
jne
decl
push
adcl
call
addl
test
jne
orl
lea
push
push
xorl
call
cmp
movl
jne
andl
mov
inc
mov
cmpl
jl
jmp
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
decl
xor
subl
lea
sbbl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
pushl
push
pushl
call
jmp
mov
addl
xor
adcl
lea
andl
push
mov
xor
mov
xorl
pushl
incl
call
add
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
jmp
xor
addl
lea
addl
mov
and
mov
xor
xor
add
mov
xor
movl
lea
movl
mov
push
movl
cmp
movl
jbe
mov
add
mov
mov
xor
xor
sbb
mov
mov
mov
or
mov
mov
adcl
sub
xor
orl
mov
subl
lea
andl
mov
lea
mov
lea
xorl
push
subl
push
push
subl
push
addl
call
shl
movl
cmp
movl
jne
push
call
xorl
test
jne
adcl
lea
push
push
call
cmp
jne
push
lea
push
subl
push
sbbl
push
push
addl
call
shl
movl
cmp
movl
jne
sbbl
push
call
test
jne
lea
adcl
push
push
andl
call
cmp
jne
addl
push
adcl
lea
adcl
push
subl
push
push
push
sbbl
call
shl
cmp
movl
jne
andl
push
negl
call
test
movl
jne
orl
lea
push
adcl
push
call
movl
cmp
movl
jne
xorl
push
lea
push
push
sbbl
push
push
call
movl
shl
cmp
jne
subl
push
adcl
call
test
jne
xorl
lea
addl
push
push
call
movl
cmp
jne
notl
push
movl
lea
push
push
push
push
addl
call
movl
shl
cmp
jne
subl
push
xorl
call
test
movl
jne
andl
lea
adcl
push
orl
push
sbbl
call
movl
cmp
movl
jne
xorl
push
lea
orl
push
push
push
subl
push
call
shl
movl
cmp
movl
jne
addl
push
orl
call
andl
test
movl
jne
xorl
lea
addl
push
orl
push
sbbl
call
cmp
movl
jne
push
lea
incl
push
push
push
subl
push
xorl
call
movl
shl
movl
cmp
movl
jne
push
andl
call
test
jne
lea
push
push
call
movl
cmp
movl
jne
orl
push
lea
push
push
push
addl
push
orl
call
shl
movl
cmp
movl
jne
xorl
push
orl
call
xorl
test
movl
jne
lea
incl
push
push
xorl
call
movl
cmp
jne
sbbl
push
lea
orl
push
subl
push
addl
push
push
sbbl
call
shl
cmp
jne
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
shl
cmp
jne
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
shl
cmp
jne
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
shl
cmp
jne
push
call
test
jne
lea
push
push
call
cmp
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
push
lea
push
push
movl
push
movl
movl
push
movl
call
shl
cmp
jne
push
call
test
jne
lea
push
push
call
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
push
lea
push
push
push
push
call
shl
cmp
jne
push
call
test
jne
lea
push
push
call
cmp
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
andl
xor
add
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sbb
movl
mov
movl
cmpl
je
cmpl
jbe
jmp
push
push
call
mov
dec
mov
jmp
push
sub
mov
add
xor
neg
mov
adcl
push
mov
add
movl
cmp
movl
je
movl
cmpl
je
cmpl
jle
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
movl
cmpl
je
cmpl
ja
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jbe
jmp
call
cmpl
jb
movsbl
mov
sub
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
sub
push
movl
mov
andl
mov
movl
adc
push
mov
neg
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xor
adcl
xor
mov
subl
add
add
imul
not
mov
movl
cmp
je
and
mov
mov
inc
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
add
add
add
add
add
add
add
add
add
add
pusha
inc
add
add
add
push
push
inc
push
add
inc
lds
jns
sahf
mov
add
add
inc
cmp
outsb
outsl
ja
and
pop
inc
imul
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
dec
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
fidivl
jp
stos
insl
lods
repnz
nop
cmc
test
out
mov
test
xchg
mov
jno
cmc
push
sbb
movsl
aaa
stos
lcall
mov
cwtl
rcrl
or
xchg
lcall
pop
mov
test
ss
test
mov
mov
adc
add
notb
scas
leave
test
or
lret
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
dec
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
inc
xor
cmp
je
push
push
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
inc
xor
cmp
jne
mov
pop
pop
cmp
je
xor
xor
mov
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
dec
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
dec
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
