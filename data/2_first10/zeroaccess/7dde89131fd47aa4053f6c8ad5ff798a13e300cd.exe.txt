push
mov
sub
mov
adc
mov
mov
or
mov
sub
push
movl
mov
mov
mov
sbb
mov
and
mov
orl
mov
mov
add
orl
mov
add
mov
jmp
iret
inc
loopne
push
adc
fmuls
es
ja
iret
in
xchg
mov
jmp
xlat
sahf
xor
in
mov
adc
ss
data16
mov
dec
inc
movsl
mov
pop
inc
xchg
mov
fdiv
ret
orl
adc
movsb
jge
dec
mov
and
cwtl
clc
pusha
lds
popf
mov
inc
push
mov
cli
imul
loop
push
stos
xor
notb
out
mov
cmp
xor
sub
jae
jp
call
jle
push
push
jl
adc
or
cmp
lret
xor
mov
aam
jne
push
ret
aam
jnp
cmc
fldl
ja
divl
mov
jle
xchg
shll
lock
lcall
leave
pop
lret
jno
call
fs
xlat
jb
shrl
insl
push
pop
sub
xor
push
add
pushf
testb
mov
jo
enter
pop
add
xor
pop
int
pop
push
pop
push
mov
and
lcall
xchg
in
shl
insb
mov
and
loop
bnd
sub
push
inc
ror
mov
add
push
and
es
pop
xor
push
push
jg
lds
lods
lea
pop
xlat
inc
push
lcall
cld
xor
xchg
repnz
pusha
jl
popa
and
and
adc
inc
rolb
dec
fldcw
mov
pop
sub
call
mov
loopne
mov
imul
inc
imul
mov
lock
lcall
mov
and
jo
and
mov
cmp
loopne
movsl
loop
and
and
mov
jmp
arpl
cmpsl
pop
adc
pusha
push
sbb
scas
pop
cmpsl
loope
mov
shr
shll
cli
aad
pop
stos
mov
jno
jle
dec
loop
mov
rorb
mov
call
xor
pop
dec
ljmp
pop
cld
sbb
xorl
insb
push
ret
adc
jae
add
push
into
push
push
inc
test
push
or
fistps
sbb
pop
scas
fcoml
or
ljmp
bound
sbb
sti
inc
inc
xchg
push
in
mov
cmpb
lahf
daa
pop
ds
or
rclb
or
pushf
into
les
cmpsl
out
aad
mov
enter
sbb
pop
in
in
lret
adc
cmp
xlat
out
mov
add
cmp
lret
add
push
inc
mov
lea
out
fwait
mov
dec
lds
fistl
dec
repz
xlat
daa
in
xor
mov
jle
and
jnp
or
dec
dec
pusha
add
shll
jmp
sub
in
xchg
out
call
mov
inc
mov
es
out
cmp
push
or
out
or
cmpsl
or
mov
cmp
lea
jle
mov
repnz
scas
cmc
addr16
xlat
aam
movsb
stos
add
shl
adc
hlt
push
shrl
cwtl
inc
dec
pusha
xor
out
mov
and
sub
fdivrl
stos
xlat
js
in
fsubs
in
hlt
cmpsb
arpl
sbb
xchg
mov
xor
jne
gs
sahf
rcrb
add
mov
or
test
xor
mov
pop
sub
adc
jecxz
jb
pop
hlt
adc
cmp
pop
mov
jb
jb
mov
inc
inc
cmc
js
movsl
cmp
pop
xor
xlat
push
xchg
sub
es
or
jnp
data16
je
fidivrs
and
cmpsb
mov
jp
imul
add
push
fwait
out
xor
rcrl
or
pop
sbb
push
in
cmpsl
cmp
ror
cwtl
or
push
cmp
popa
test
outsl
add
rorb
and
ljmp
pop
dec
fistps
nop
jecxz
push
xchg
lea
aas
lods
aad
outsb
cmp
adc
xlat
or
xlat
sbb
cmc
enter
aas
cmp
sub
movsb
xor
sbb
clc
push
mov
inc
mov
test
es
xchg
es
add
xchg
jp
lods
jno
sbb
pop
pop
test
shr
shlb
push
jbe
mov
adc
push
les
aam
lea
push
in
sahf
andl
adc
and
lahf
pop
fsubl
stc
ja
test
daa
adc
and
mov
xchg
inc
sub
pop
xchg
pop
push
leave
mov
cmp
cmp
xchg
mov
dec
or
test
mov
in
inc
arpl
xorl
daa
test
xchg
pop
icebp
inc
dec
aad
inc
mov
cld
add
les
js
pop
lods
arpl
clc
push
test
nop
popf
xor
pushf
jg
or
dec
push
fisttpl
push
sti
jle
je
insb
xchg
or
das
push
out
xchg
push
push
or
xchg
lods
fistpll
dec
fisubrs
jb
jns
inc
mov
pushf
gs
xlat
mov
push
outsb
xchg
out
rcr
mov
lahf
test
test
cmp
sub
fbstp
lods
aad
je
fmuls
xchg
cli
and
flds
aad
xchg
ja
out
inc
hlt
out
lods
comiss
cmp
leave
dec
dec
loopne
push
pop
mov
movsb
movsl
rolb
into
fistl
push
not
les
pushf
jb
lret
pushf
fcmove
pop
cltd
xchg
popa
and
jg
je
outsb
imul
push
cmpsb
outsw
and
es
xchg
xor
pop
or
mov
or
and
dec
mov
lods
adc
or
jle
rol
and
sub
lock
fdivp
scas
pop
xor
xor
out
fcom
int
xchg
xchg
clc
sahf
jno
lret
inc
ds
int
cmpsl
add
adc
pop
adc
daa
sti
fisubl
int
fchs
mov
ss
clc
mov
incb
div
sbbl
cmp
xchg
fwait
sub
or
lahf
aad
push
xchg
push
aad
in
int
push
xor
pop
add
mov
xchg
repz
out
cmp
lods
add
xor
jae
imul
jne
es
mov
insl
jnp
jg
int
jo
jmp
lock
sahf
or
rorb
sbb
pop
ds
jge
mov
pushf
xchg
fldt
mov
mov
xchg
mov
xchg
inc
lock
sbb
arpl
pop
lods
mov
rcll
xchg
mov
jecxz
add
xor
xor
mov
loopne
mov
mov
lods
lea
ja
dec
inc
sub
cli
pop
ja
add
outsl
push
test
xchg
xor
xlat
inc
das
mov
je
jb
and
add
inc
sbb
jne
shlb
mov
sub
cld
pop
lock
xchg
test
mov
mov
mov
addl
sub
notl
mov
movl
sbb
add
mov
not
orl
orl
cmpl
movl
mov
jmp
mov
jg
pushl
pushl
call
sbb
sbb
sub
or
orl
lea
adc
mov
or
mov
and
mov
xorl
mov
adc
add
mov
dec
mov
mov
adc
jmp
mov
xor
js
xchg
inc
xchg
pandn
test
xchg
roll
mov
push
jle
pop
mov
repnz
mov
iret
in
je
mov
dec
mov
cmp
mov
pusha
mov
xor
push
dec
scas
hlt
pushf
cld
jno
or
cmpsl
call
sub
dec
jb
mov
fcmovnb
pop
mov
fsubrl
pop
fsubp
xor
hlt
lcall
iret
mov
push
fldcw
out
outsl
adc
cmp
pusha
jnp
sarb
push
dec
mov
mov
push
dec
fldl
sbb
inc
add
or
notl
adc
movb
out
xchg
mov
pop
pop
test
fimuls
shll
inc
xchg
icebp
dec
cld
add
lods
fwait
in
call
ljmp
mov
push
movsl
sarb
int3
fwait
pop
lahf
cmp
sti
cli
clc
out
mov
scas
fwait
daa
mov
cmpsl
sahf
mov
imul
xor
hlt
andb
outsb
inc
and
loop
in
popf
aam
out
std
ret
add
test
in
out
lds
xor
inc
mov
es
aad
imul
mov
rol
insl
rcrl
out
mov
bound
jns
mov
stc
fmuls
or
jno
adc
push
push
pop
and
pop
pop
jle
arpl
lea
pop
into
sbb
movsl
mov
ja
mov
bound
cmp
cld
xlat
sbb
xor
and
or
ret
mov
pop
fisttpll
fbld
push
adc
fisttpll
dec
adc
repnz
fcoml
sub
inc
mov
mov
iret
jae
aad
or
mov
popf
scas
push
ficoms
shr
cmp
or
mov
mov
sarb
pop
mov
out
stc
jns
fsubl
addr16
jecxz
mov
mov
int
dec
push
sahf
aaa
stc
frstor
cmp
vpacksswb
ficoml
inc
cmc
mov
outsl
push
or
dec
mov
sub
mov
test
fsubs
add
aam
adc
leave
inc
or
pop
adc
testb
cmpsl
sub
addr16
pop
cltd
test
mov
jge
test
stos
in
push
test
stc
cs
xor
or
movsl
adc
sahf
arpl
jns
xor
in
shrl
les
xchg
icebp
jp
loopne
jmp
pop
imull
aad
sbb
daa
in
xchg
ja,pt
mulps
fldenv
fisubrl
in
lcall
pusha
popa
inc
mov
js
inc
push
test
lock
jmp
aad
pop
loop
xor
xor
jmp
mov
dec
pop
in
repnz
pop
out
jle
xchg
dec
or
mov
xchg
sti
cmc
fildll
jae
repz
cwtl
outsl
or
mov
imul
int3
std
dec
xchg
mov
pusha
aam
pop
mov
sbb
lret
add
mov
xchg
outsb
push
popa
mov
sbb
mov
push
jns
xchg
jmp
jae
jo
cmpsb
ret
push
mov
add
inc
jle
stos
push
jle
aad
ret
and
or
sti
xor
add
or
push
pop
das
addr16
sub
in
ret
or
push
js
shrb
xor
stos
cwtl
pop
in
test
js
adc
mov
and
lcall
mov
ljmp
lcall
pushf
mov
fldt
pop
and
jno
dec
fdivl
repnz
cmc
bound
mov
add
or
adc
repz
dec
xor
mov
mov
ss
es
sarl
lcall
ret
add
clc
adc
push
mov
mov
push
fs
out
js
xchg
enter
xchg
push
adc
lcall
iret
add
xorb
cmp
outsl
pushf
std
mov
jo
sbb
add
add
or
jnp
push
sub
scas
sub
jl
hlt
cmp
out
xor
fmull
int
and
cwtl
cmpsb
mov
inc
iret
rorb
mov
jae,pn
movsb
fbstp
dec
jl
dec
xor
fnsave
enter
imul
xor
jo
sub
pop
loope
aad
jge
dec
cmp
loop
fnstsw
add
sbb
mov
inc
jne
mov
bnd
cmp
into
push
and
adc
dec
mov
dec
jnp
or
mov
xchg
and
imul
xchg
ficompl
ja
mov
cmc
mov
mov
mov
mov
mov
pop
xchg
jns
sbbl
ffreep
es
js
mov
in
sti
sti
out
lods
popa
sti
pop
and
pop
pop
mov
jle
pop
scas
xchg
jno
nop
ja
cwtl
pop
push
push
std
xchg
add
mov
cmp
outsl
mov
data16
cmp
adc
fwait
xchg
xchg
fisttpl
push
xor
and
fs
and
enter
rclb
in
pop
jbe
push
ret
adc
nop
xchg
mov
mov
jmp
std
les
cmp
rolb
inc
cmp
lods
xchg
aaa
pop
sub
cmp
ss
cwtl
xlat
pop
mov
push
stos
movsl
jbe
repz
nopl
adc
jne
xor
mov
push
insl
jno
add
data16
xchg
sbb
cmp
inc
popl
scas
repnz
sarl
mov
adc
push
mov
mov
mov
pinsrw
repnz
imul
mov
ret
and
jp
pop
xor
add
xorl
pop
lods
test
add
test
ds
lcall
push
insl
movsb
popf
ret
div
lcall
mov
xchg
loop
pop
out
pop
inc
push
cmpsl
xchg
sbb
scas
into
clc
adc
jge
xchg
sub
dec
jg,pt
sub
inc
mov
sbb
adc
aaa
in
sub
sbb
movsl
jmp
out
pop
rcll
fwait
mull
add
push
sub
cmovs
mov
sti
imulb
pop
push
mov
add
mov
lret
fists
dec
xor
cmp
out
lock
push
ljmp
xchg
cmp
push
out
mov
xlat
fldt
rcll
or
mov
push
jne
pop
mov
push
cmc
jne
out
sbb
ss
push
je
imul
and
lods
jmp
and
idivl
lods
xchg
lcall
mov
pop
pop
loop
cltd
bound
imul
jge
sbb
pusha
sbb
in
push
adc
pop
dec
fisttpll
fcmovbe
mov
ret
inc
into
inc
cmpsb
shll
in
cli
subb
dec
notl
push
cmp
mov
roll
mov
mov
shrl
movsl
dec
push
fcomps
sbb
lods
enter
hlt
adc
add
jmp
jmp
mov
lock
popf
mov
daa
mov
dec
and
ja
jns
push
fldenv
xchg
incb
dec
add
insl
add
mov
mov
mov
push
pop
nop
je
mov
sbb
jecxz
adc
mov
roll
xchg
and
imul
push
jmp
adc
xchg
loopne
ret
in
mov
dec
dec
cmp
ficoms
cmp
adc
add
and
int
stos
arpl
xchg
xchg
xchg
scas
aas
and
dec
jae
push
in
fsubr
inc
daa
std
insb
lds
push
fiaddl
push
xchg
push
jbe
adc
pop
mov
fcmovnu
pusha
push
sti
dec
mov
movl
xlat
iret
mov
lea
loope
aam
cmp
insb
xor
sarb
inc
jg
repnz
ss
pop
inc
cmpb
movsb
aaa
and
jnp
jne
pop
sarb
pop
sub
pop
cmp
mov
mov
ss
ret
xchg
loop
pop
iret
cmp
out
repz
out
fmull
mov
or
sub
clc
xchg
cmp
clc
pop
lods
xchg
in
lods
push
adc
push
out
scas
pushf
xchg
inc
pop
iret
les
inc
jns
xor
cmpsl
lods
divl
adc
xchg
test
outsb
inc
cmp
ret
inc
rcrb
stc
sub
insl
push
iret
mov
inc
repnz
shll
scas
cmpsl
mov
movsb
push
inc
pop
and
cwtl
and
sub
fsubs
ss
lret
js
sub
dec
xchg
jb
scas
inc
int
mov
shr
and
dec
mov
add
pop
out
xchg
xchg
jle
rorb
inc
jp
push
push
jmp
and
xchg
jp
fs
pusha
rorl
sub
pop
or
push
mov
mov
lods
jno
imul
popf
roll
pop
mov
pusha
int
xor
xlat
sbb
sub
sti
nop
jmp
repnz
popa
pusha
rcll
pusha
movsl
sbb
mov
pop
xor
repz
mov
jge
ss
and
mov
cmp
aam
scas
push
inc
pop
sti
jbe
pop
in
ffreep
inc
hlt
jge
fs
movsl
clc
int
jmp
and
addr16
pop
inc
testl
cs
cld
sbb
rorl
inc
push
addb
add
das
ret
ljmp
mov
xor
pushl
icebp
fsubl
rclb
bound
mov
push
mov
lods
in
pop
pop
jmp
outsl
jb
mov
fs
arpl
adc
xor
fcoms
iret
outsb
and
cmp
adc
lahf
shll
and
out
repnz
cmpsl
mov
lds
ret
push
cli
fdivs
push
je
stos
mov
and
aaa
loope
int3
cs
and
enter
adc
xor
std
adc
jl
mov
lcall
mov
push
xchg
xchg
je
dec
mov
cmp
insb
mov
loope
pop
int3
sbb
cmc
inc
mov
or
xchg
pop
imul
ds
sub
xor
xchg
mov
and
lret
mov
rorb
movsl
lcall
cmp
adc
aas
xchg
cmp
jno
sarl
jmp
aad
adc
iret
das
mov
jp
and
lea
adc
loopne
mov
or
mov
inc
rclb
dec
int
and
jp
cmp
fildll
add
mov
jo
adc
mov
pop
subb
shrl
dec
xchg
cmpb
lret
test
pop
cmpsb
push
jbe
rcl
mov
sub
hlt
je
inc
mov
cmpsb
inc
jmp
pusha
mov
std
inc
add
mov
mov
or
or
cmp
mulb
push
and
fildll
inc
lea
cli
jmp
sti
xor
test
mov
fld1
and
adc
shlb
mov
sbb
popa
lds
adc
cmp
addr16
push
gs
mov
push
gs
inc
cltd
nop
popf
subl
xor
inc
push
push
cmc
xchg
push
lds
les
mov
push
inc
fsubl
mov
sti
rcll
sti
jo
push
inc
mov
rep
in
or
outsb
lahf
xchg
push
adc
mov
adc
pushl
mov
fcoms
addl
adc
fwait
sahf
adc
jmp
push
cmc
lret
shll
lods
ret
jbe
add
in
test
sar
fcmovnbe
jmp
mov
dec
mov
fldt
xor
mov
mov
fistps
mov
int
pop
jmp
dec
insl
mov
imul
popa
cli
add
lcall
scas
xchg
insl
rcll
and
ret
scas
ss
bound
sbb
xchg
xor
andb
cmpsb
xchg
mov
mov
clc
les
loopne
mov
mov
je
ret
inc
cmpl
daa
or
jp
cmc
shrl
mov
or
std
sbb
and
dec
jmp
jns
mov
insl
push
mov
rorb
jge
aaa
pop
push
pop
leave
xchg
mov
push
xchg
mov
test
scas
faddl
pop
out
cmpsl
adc
aas
xchg
je
jnp
inc
subb
push
dec
stos
mov
sbb
xchg
push
xor
and
out
add
sub
inc
pop
notl
sbb
xchg
test
mov
fsubrs
hlt
aas
cmc
frstor
sub
dec
add
frstor
aaa
cmp
rcl
inc
shrl
and
sub
and
push
out
sbb
movsl
packuswb
mov
sub
push
jns
jae
cli
out
sti
xor
pop
les
pop
pop
jge
movsl
adc
dec
dec
fwait
pop
add
or
ret
cmp
mov
xor
pop
lods
sti
xchg
inc
inc
mov
xorb
dec
pop
jno
mov
call
push
xchg
int3
js
es
jle
sbb
out
xchg
add
xlat
and
mov
or
hlt
xchg
mov
out
sbb
orl
pusha
movsl
testb
fisubrs
or
mov
and
pop
inc
inc
xchg
in
cltd
or
scas
mov
insb
lcall
mov
les
lcall
xor
xorl
ss
cli
mov
mov
inc
cwtl
dec
std
inc
or
mov
popa
adc
inc
jle
sub
xor
stc
aas
movsb
aas
push
cmp
xchg
mov
cmp
push
cmp
push
push
imul
mov
xor
mov
push
addl
push
sbb
and
pop
cmp
add
movl
add
rorb
rolb
add
movl
movl
movl
jmp
movl
not
jg
pushl
push
push
push
pushl
push
pushl
call
sub
xorl
andl
andl
addl
addl
adcl
movzbl
adc
jmp
sti
loopne
stos
dec
or
xor
and
push
cwtl
out
ja
or
pushf
xchg
cmp
pusha
icebp
imul
movsl
inc
push
xchg
dec
faddl
nop
push
pop
push
imul
addr16
xor
rorl
cmp
stos
lcall
mov
xor
sbb
and
mov
cmp
movsl
lcall
sub
pusha
orb
mov
xor
addr16
in
mov
popf
xchg
dec
std
cmp
fisubs
add
inc
insb
out
enter
mov
mov
xchg
xor
fisttpl
sub
das
f2xm1
int
lods
dec
sti
pop
shrb
popf
cli
iret
clc
push
push
mov
rcrb
cld
dec
add
and
loope
mov
cmpsl
dec
jecxz
or
push
out
sbb
inc
mov
sbb
fsts
pop
in
clc
pop
loop
jmp
cmp
pop
in
movsl
sbb
fs
ret
xor
dec
xchg
aad
and
jb
push
in
shlb
pop
fs
repz
stos
jle
pop
push
rcrl
inc
or
push
mov
movsl
jmp
insl
mov
enter
stc
adc
and
nop
insb
shll
sbb
and
xchg
pop
clc
jge
fcoml
mov
shlb
sarl
dec
mov
fimull
inc
adc
sbb
insl
hlt
icebp
pop
xor
push
dec
sti
lret
ja
sub
in
ja
add
adc
push
lods
pop
mov
aam
adc
std
lds
pop
aam
ss
adcb
fisubs
in
fstl
sbb
mov
xchg
dec
push
clc
adc
xor
mov
ret
mov
inc
std
push
lcall
cmp
mov
jns
lea
or
pop
ja
adcl
sbb
mov
jns
fistpll
jl
loope
cmp
push
stos
lahf
pusha
mov
mov
jb
fidivs
cmp
xchg
loopne
lods
insl
xor
sbb
jecxz
call
mov
stos
loope
pop
mov
aaa
out
fldcw
cmp
dec
fistpl
jbe
outsb
pop
dec
adc
mov
test
add
out
test
outsl
or
hlt
adcl
std
and
inc
mov
mov
dec
dec
xchg
sub
mov
cmp
push
or
out
je
xor
sub
or
add
mov
dec
ret
je
cmp
incb
push
xchg
in
xor
xchg
cld
xchg
les
mov
jb
cwtl
mov
mov
cmp
and
push
bound
mov
dec
push
xchg
pop
nop
sbb
jp
fisubrl
sbb
rcll
imul
mov
or
es
dec
xchg
add
sbb
fcos
insl
clc
jge
mov
idivb
mov
shl
mov
xlat
imul
mov
rclb
dec
outsb
jo
adc
into
jb
addl
mov
shlb
daa
inc
imul
mov
jbe
push
xor
call
in
add
push
icebp
imul
fmull
inc
rep
jmp
sub
outsl
addr16
ret
out
mov
or
cmp
dec
pop
stc
loopne
insb
arpl
xor
test
sti
xchg
insl
adc
adc
adc
add
jmp
inc
fsubs
jmp
in
jmp
add
or
pop
outsl
out
push
in
repz
das
ret
aas
inc
jb
imul
sbb
sub
mov
fimuls
sub
dec
add
repnz
gs
insb
push
add
jp
rclb
cmc
pop
sbb
and
call
insl
sbb
cltd
lods
mov
and
repz
jno
mov
xchg
cli
push
xchg
sub
stos
mov
int3
ror
mov
les
pop
ror
mov
xor
mov
push
lds
push
inc
pusha
mov
inc
inc
push
clc
and
pop
inc
cmp
mov
xor
mov
inc
adc
add
xor
mov
mov
insb
fsubrs
mov
add
jbe
lock
jmp
pop
xchg
xchg
movsl
pushl
dec
mov
sub
lret
inc
cmp
sbb
cld
pop
jns
int3
test
daa
mov
out
ss
jno
sub
inc
imul
inc
push
jmp
lret
mov
loope
ror
push
cmp
mov
cltd
imul
in
mov
cmp
leave
mov
push
xor
aad
ret
scas
sub
cmp
and
insb
jae
pop
lods
inc
and
mov
push
inc
or
xor
fwait
mov
bound
lods
fwait
lret
push
lahf
xchg
mov
pop
in
fstpl
pusha
adc
insb
les
dec
int
adc
inc
jb
shlb
leave
imul
add
incb
sub
fs
ja
add
repnz
repnz
int
inc
sub
jns
pop
jmp
aas
dec
dec
pop
xchg
pop
cmp
dec
fwait
mov
push
cwtl
inc
fstp
push
loopne
push
lods
and
pop
jb
or
cmp
xor
out
aad
xchg
mov
sbb
xchg
adc
mov
dec
lahf
cmp
outsb
mov
stos
nop
call
jmp
iret
push
adc
mov
lea
jg
imul
aam
inc
orb
sbb
rolb
cmpsl
mov
inc
adc
xchg
xor
sti
scas
clc
inc
ret
adc
jb
mov
idivb
push
ret
lret
pop
pushf
repnz
dec
sbb
inc
push
ret
push
in
dec
sbb
call
push
fildll
inc
cltd
mov
ss
cmp
adc
and
outsl
shll
mov
lods
cmpsb
cmpsb
and
pushf
std
aas
vmread
and
call
push
cltd
imul
and
add
cmp
pop
dec
xlat
mov
cmp
je
xor
sbb
sbb
or
jo
out
push
xor
rcll
cmp
shlb
push
xor
call
cmp
cmp
sbb
cmp
leave
inc
aas
bound
mov
pop
jno
cmp
ret
adc
loopne
push
push
sbb
mov
stos
decl
test
jp
outsl
sbb
push
clc
movsl
aam
pop
dec
cmp
rcll
inc
insl
nop
mov
movsb
xchg
mov
xchg
nop
xchg
ret
push
jmp
std
or
mov
insb
sbb
aam
ljmp
sub
inc
mov
xor
adc
sub
fistl
ret
icebp
inc
push
pop
mov
sbb
pop
and
int
cli
rol
adc
ret
repnz
inc
mov
loop
bound
pusha
pushl
fs
fsubs
insb
stos
dec
or
xchg
mov
inc
add
inc
nop
push
sub
add
inc
xchg
outsl
inc
add
sub
movl
movl
and
movl
movl
movl
xor
or
adc
movl
cmpl
movl
mov
jmp
not
jl
push
pushl
pushl
push
call
add
sbbl
add
sbbl
xorl
sbbl
notl
or
movl
addl
movl
movl
movl
mov
or
mov
movl
dec
movl
movl
cmpl
movl
movl
movl
movl
jmp
mov
jge
push
call
movl
orl
orl
add
xorl
xorl
xorl
and
movl
cmpl
movl
mov
jmp
mov
mov
jb
push
pushl
push
push
pushl
push
pushl
push
push
pushl
pushl
call
orl
sbbl
adc
addl
movl
sbbl
movl
add
movl
jmp
and
jnp
sub
mov
mov
aam
ja
mov
mov
pop
outsb
push
insb
jmp
push
mov
mov
jb
lea
xor
pop
mov
inc
and
mov
add
inc
fists
sbb
test
mov
shll
jg
xor
adc
jae
cs
filds
jle
mov
mov
mov
ret
sub
aad
jg
shlb
jmp
inc
loop
out
xchg
pusha
sub
mov
jge
jg
ljmp
pop
jl
pop
aam
ret
insb
xor
negb
jbe
in
popl
fisubs
or
cmp
cmp
cmpsb
ds
ljmp
cmpsl
pop
fmull
lret
into
adc
int3
ss
lock
push
int3
cmp
dec
push
adc
xchg
or
aaa
mov
xor
je
pop
cwtl
sbb
cmp
aad
xchg
xlat
pop
shl
std
xchg
notl
addl
push
movsl
out
pop
cltd
xchg
shlb
aam
lret
mov
test
push
push
cmpsl
cmp
xchg
pop
ficomps
and
cmp
add
xor
arpl
pop
dec
cmp
push
into
xchg
adc
addr16
lahf
cmpsl
add
loopne
rolb
mov
add
pop
pop
lods
jno
dec
mov
mov
sbb
push
lcall
cmp
test
xchg
roll
xchg
push
push
cli
iret
into
mov
jmp
arpl
sub
pushf
cs
insb
and
jne
addr16
add
idivb
aad
and
or
into
adc
cmp
pop
and
dec
popf
xor
mov
mov
xor
test
push
pusha
add
aam
mov
pop
push
loope
leave
gs
push
cmpsl
hlt
negl
mov
mov
repnz
xor
movsb
sub
ret
sahf
sub
fucomi
inc
and
stos
sahf
in
hlt
mov
dec
dec
jge
popa
loop
push
mov
insb
mov
insb
sub
sbbb
sti
jne
addr16
inc
push
lret
shl
wbinvd
adc
sbb
movsb
xchg
cmp
adc
push
and
pop
xor
jg
and
jp
pop
or
mov
xchg
jmp
nop
sbb
sub
xchg
stos
push
inc
addl
ss
das
inc
xchg
adc
std
dec
pop
jge
insl
loop
sbb
pop
out
push
push
xchg
hlt
addr16
loop
lahf
pop
sub
or
in
movsl
popa
js
mov
mov
sub
push
push
jle
int
cmpb
push
xchg
stos
pop
ss
lret
mov
inc
mov
gs
jl
push
ds
mov
mov
sbb
loopne
pop
pusha
movb
add
jae
sbb
dec
fs
call
and
popf
mov
icebp
fdivrl
test
rorl
or
mov
stos
les
add
aam
mov
xchg
leave
pop
mov
fs
lcall
ds
or
inc
and
pop
js
sub
arpl
adc
cmp
imul
push
jne
loopne
add
xor
pop
mov
xchg
mov
push
repnz
jb
pop
adc
lahf
in
pop
cmp
testb
shll
out
push
add
cmp
and
int
mov
mov
jg
jge
xchg
xchg
int3
pushf
mov
dec
stos
enter
push
loopne
shll
imul
push
popa
mov
in
inc
insb
mov
jge
vunpcklps
popa
xor
dec
xor
clc
fistpl
sti
scas
dec
setne
jg
scas
call
rcrb
loopne
movsb
leave
test
xchg
aaa
pop
out
pop
mov
push
dec
in
ret
inc
int3
push
sbb
stos
pop
pop
inc
clc
inc
lahf
stc
sbb
inc
aad
mov
inc
gs
and
xor
out
jbe
ret
xor
fwait
adc
mov
sub
loope
dec
jo
pushf
es
call
fcompl
shlb
jecxz
subb
pop
testl
sbb
inc
jne
jge
je
cmp
push
xchg
xorb
fistps
sub
jecxz
or
test
and
push
test
add
add
inc
subl
jmp
jp
pop
test
mov
negl
sbb
lea
lds
js
movsl
shl
dec
or
and
loope
and
ss
xor
and
jge
lret
xor
mov
lods
faddl
dec
int3
int
jb
xchg
adcl
pop
push
adc
loop
mov
adc
pop
or
mov
or
into
pushf
in
mov
call
inc
fldcw
sub
ss
add
cmp
push
push
dec
xchg
sub
not
popa
fadds
sbb
test
adc
pop
in
jns
jnp
sbb
sub
xchg
rolb
jb
mov
and
mov
cli
aaa
and
lahf
jle
popa
mov
enter
mov
sbb
movsb
mov
jbe
addr16
daa
int3
ljmp
pop
jbe
inc
push
movsl
jns
pop
jecxz
pop
lock
sub
mov
iret
ficoml
dec
add
mov
and
cmpb
call
lock
or
movsl
adc
push
es
lods
movb
ljmp
in
sahf
dec
repnz
and
out
lcall
mov
or
loope
into
aas
push
insb
stc
or
loop
inc
outsb
lds
push
xchg
xor
adc
add
and
and
pop
insb
mov
mov
dec
outsl
push
pop
out
and
cli
int
mov
fmull
push
idivb
push
daa
or
popa
fiadds
addr16
popl
jmp
das
fsubl
mov
int3
gs
decl
adc
sub
cmp
xor
push
pop
sbb
mov
insl
mov
cs
sbb
jg,pt
insl
xchg
mov
mov
push
cwtl
push
sbb
int
jecxz
addl
inc
mov
int
xchg
insl
or
mov
mov
and
dec
stc
cmpsb
add
pop
xor
xchg
pop
scas
movsb
repz
mov
jne
mov
daa
jmp
es
sbb
mov
jb
nop
aas
nop
sbb
xor
push
push
ljmp
in
xor
sarb
pop
insb
scas
xlat
test
sbbb
push
xor
jno
cli
sub
mov
mov
inc
imul
gs
and
mov
scas
push
jg
popa
and
aas
insl
mov
popa
insb
scas
ja
mov
div
sub
test
pusha
push
mov
mov
pop
popa
add
repz
rcrl
lea
iret
inc
les
push
hlt
fwait
dec
movl
inc
movl
xorl
movl
mov
xor
movl
not
movl
mov
addl
jmp
in
outsl
dec
gs
notb
inc
test
cmpsl
les
ja
dec
mov
fs
jnp
and
jno
das
mov
iret
add
je
mov
fcompl
xchg
xchg
fwait
popa
sub
int
and
sarl
xchg
scas
push
mov
and
add
xchg
ret
or
shll
pop
mov
aaa
dec
adc
jne
inc
into
pop
ss
jnp
xorl
insb
cld
mov
nop
sbb
push
push
popf
popf
mov
ret
test
push
pop
and
mov
dec
setbe
les
jle
mov
fidivrs
mov
in
adc
cmp
rclb
loope
jge
out
das
lock
pop
subb
bound
dec
cmp
mov
sbb
lret
cmp
mov
inc
mov
jle
cld
mov
xchg
mov
test
and
rolb
lret
lret
mov
movsl
and
dec
mov
jb
xor
add
out
pushf
xor
mov
jno
mov
loop
mov
cmp
sarl
out
push
mov
xor
ficompl
pop
aas
repz
jno
pop
pop
sbb
test
inc
xorb
pushf
mov
sub
mov
leave
mov
push
popf
inc
pop
mov
test
fnstsw
xchg
cmc
lcall
or
in
filds
popa
sub
in
inc
jmp
cli
jo
in
pop
jne
jno
xchg
mov
xor
push
and
pop
jo
mov
ss
xchg
insl
xor
sub
idiv
stc
loop
jno
push
iret
adc
inc
cld
pushf
pushf
int3
jp
not
subb
aad
addr16
int
xchg
sub
cmp
es
out
addr16
sbb
imul
xchg
mov
add
mov
add
pop
pop
or
xor
mov
gs
pop
or
jae
add
and
lds
add
ja
jecxz
out
jbe
insl
mov
imul
ret
push
lret
addb
push
xor
sub
mov
stc
ss
xchg
leave
lds
xlat
adc
lea
imul
lods
inc
cmp
push
imul
cmc
adc
clc
aas
mov
outsb
cmpsb
sub
test
clc
sbb
mov
jae
xor
imul
and
xchg
pusha
pop
cmpb
daa
lahf
pop
fisubrs
lahf
lret
lret
scas
inc
jnp
idiv
sbb
arpl
pop
jb
mov
jb
scas
sahf
mov
xchg
mov
jno
gs
xlat
lock
push
fildll
dec
notl
xor
sbb
lea
inc
js
jp
mov
daa
or
leave
mov
in
div
jmp
and
stos
mov
loopne
cld
push
lcall
fwait
pop
pop
mov
les
iret
and
orb
lret
dec
xchg
outsl
mov
pop
imul
or
cltd
xchg
push
sub
pop
fcmovnbe
pop
mov
and
out
adc
insl
mov
lcall
jbe
out
lret
push
push
push
push
into
mov
rolb
mov
jge
call
pop
xlat
mov
loop
ljmp
xor
mov
inc
or
and
push
sbb
mov
push
push
jns
push
stos
js
call
xchg
inc
adc
dec
in
dec
cmp
xlat
dec
iret
push
scas
pop
and
stos
push
mov
xor
loope
fmull
cli
and
icebp
mov
in
cmpsl
loop
sbb
int
das
pop
sub
dec
add
xor
cmp
mov
fists
fisubl
scas
cwtl
jl
dec
mov
fistpl
lahf
mov
inc
mov
aaa
call
mov
mov
scas
mov
push
loope
add
inc
mov
sub
out
or
sbb
cmc
shrb
dec
movsb
aam
or
pop
enter
lds
add
lods
add
lret
add
or
jp
pop
lock
mov
mov
lret
lock
mov
ss
ljmp
aaa
jmp
je,pn
xorl
and
les
ret
xchg
push
lret
push
push
push
insb
pop
xchg
add
sbb
out
repnz
scas
loope
ret
cmp
adc
jb
and
sub
imul
aam
mov
dec
xor
pop
pop
push
ljmp
out
pop
inc
int
loope
dec
dec
je
pop
sbb
popa
jecxz
mov
push
in
jb
cmp
inc
shlb
mov
clc
insb
xor
vmwrite
mov
wbinvd
bound
nop
push
jno
push
popa
push
ds
jae
std
sub
aaa
jnp
mov
repnz
pop
call
sti
add
mov
jp
cmp
cmp
adc
lahf
fildl
ret
cmp
in
hlt
dec
mov
xchg
or
es
push
repz
sti
insb
pop
js
daa
fwait
sar
fstpl
pusha
or
push
adc
xchg
js
loop
arpl
sub
ss
adc
mov
testl
and
cmp
xchg
sub
nop
mov
pop
push
add
inc
lock
rorb
xorl
and
lds
jmp
fs
cmp
push
sbb
test
pushf
shll
or
shll
into
sarl
xchg
push
jne
xchg
ret
in
pop
or
scas
and
mov
pushf
stc
dec
jno
addr16
push
repz
test
in
xor
sbb
lods
inc
cwtl
bound
xchg
into
data16
mov
mov
sub
js
or
shl
adc
cmp
test
cmp
inc
dec
jmp
ja
cmp
inc
xchg
cmpsb
cmp
movsl
clc
push
mov
movsb
pop
nop
xchg
cmp
push
mov
push
pop
arpl
push
loopne
test
daa
push
or
dec
in
das
mov
sub
jnp
loopne
sbb
fsubrs
push
data16
inc
mov
incl
push
mov
jnp
mov
xor
jg
inc
push
dec
jecxz
sahf
outsl
mov
mov
stc
les
push
movsl
adc
sbb
xchg
cli
je
lds
jns
popf
repz
sbb
in
xchg
jmp
lahf
cmpsl
lret
fmull
fmul
jnp
add
cmp
stos
inc
add
lds
dec
xor
je
aad
add
sbb
jg
pop
push
dec
cmpsl
cmp
arpl
test
adc
xor
int3
push
mov
scas
pop
cmc
paddsw
cmp
in
cmpl
shl
mov
orl
push
adcl
push
andl
push
push
adcl
call
adc
mov
subl
mov
xor
mov
sub
mov
movl
jmp
mov
daa
xchg
gs
or
mov
mov
ja
aas
pushl
and
in
mov
jg,pn
jecxz
aad
addr16
fildll
mov
mov
xor
imulb
sub
rcrl
hlt
jb
scas
lret
inc
xor
mov
fucomip
repnz
and
mov
pop
scas
xchg
cmp
push
repz
js
mov
sbb
adcl
sbb
xchg
inc
decl
sub
sbb
and
stos
mov
or
cmc
outsb
and
jg
dec
mov
inc
pop
fcmovnu
pop
sub
jno
xchg
adc
out
or
rorl
icebp
jge
cmpsl
out
fildll
sbbb
dec
cmpsl
mov
sbb
mov
jge
sbb
jle
mov
arpl
sbb
cltd
push
into
mov
pop
loop
aam
shl
dec
fld
out
mov
push
stc
lret
lods
icebp
pop
inc
cs
sbb
jmp
out
sahf
pusha
xor
mov
xor
cmp
test
push
push
inc
mov
lea
cld
idivl
sbb
test
xchg
and
inc
testl
fmuls
mov
cmpsb
jo
xor
cmp
nop
ret
dec
lods
dec
mov
xchg
sub
inc
adc
outsl
xor
lret
add
sbb
data16
sbb
jno
sub
movsl
pop
dec
and
das
ljmp
fdivrl
mov
xchg
inc
dec
add
fbstp
cmpsl
mov
imul
add
xor
aaa
mov
mov
loopne
addr16
push
jb
aam
mov
and
xor
add
xchg
arpl
adc
stos
or
in
inc
or
nop
repnz
adc
iret
adc
jg
sbb
cmp
inc
pop
cld
add
cwtl
mov
repnz
push
xchg
ljmp
out
mov
sbb
int3
lss
shlb
lds
lret
adc
jb
jns
out
mov
or
mov
and
rolb
and
cmpsl
or
insb
sub
hlt
pop
or
xchg
xchg
dec
jl
imul
pop
sbb
int
std
mov
cmpb
sub
outsb
pop
mov
lds
cmp
push
add
xchg
cmpsb
jo
arpl
adc
test
or
gs
push
sbb
lods
pushf
in
sarl
jne
fcmovb
lock
adc
imul
lods
push
sbb
xchg
jo
add
sbb
inc
cmp
xchg
push
mov
in
fwait
stc
mov
jbe
jge
or
cmp
bound
not
stc
jmp
sbb
push
dec
or
push
xchg
and
cmc
pop
inc
int3
mov
popf
shll
cmp
int3
out
jl
out
add
pop
sub
inc
lret
test
pcmpgtd
cmc
push
cs
dec
cmpsb
shll
mov
pop
stos
fdivrl
sub
dec
adc
fidivs
pop
sbb
icebp
mov
sbb
dec
loop
sbb
mov
mov
inc
jb
imul
mov
test
jb
jg
and
lea
ret
add
push
push
das
scas
mov
pop
adc
cltd
mov
add
cmpsb
aas
fs
sbb
ret
push
push
fnstenv
jno
cs
daa
mov
fcoml
sub
push
pushf
adcl
inc
mov
rorl
cmp
mov
js
and
into
cmp
popf
adc
add
push
xchg
mov
bound
mov
movsl
in
cmp
leave
test
or
mov
nop
or
scas
push
push
in
push
clc
pop
dec
jge
loop
sarl
cmpl
adc
ret
scas
test
cmp
cmp
popa
xor
insl
and
cltd
pop
inc
sbb
jns
lock
mov
pusha
testb
mov
push
jg
cmp
ud1
fists
push
cmp
lret
lret
dec
or
cli
movsl
adc
enter
mov
mov
jmp
cmc
cli
outsb
test
movsb
push
mov
dec
cwtl
pop
mov
jmp
pop
iret
pop
aad
fnstcw
jb
and
jns
mov
aam
xchg
loope
pop
xchg
pop
mov
repnz
cmp
adc
idiv
fnsetpm(287
es
add
fdivrl
sbb
push
test
std
dec
loop
jmp
pop
pop
popf
pop
xor
xor
mov
daa
aas
outsb
or
push
aas
pop
je
popf
dec
outsb
sub
gs
pop
dec
scas
cmc
mov
stos
or
cltd
in
lcall
xchg
add
arpl
jmp
shll
jb
adc
push
in
shll
in
andb
inc
mov
loopne
addr16
fs
int
mov
sbbl
push
push
adc
frstor
cmp
pop
shlb
lea
cli
push
mov
mov
jp
callw
movsl
ja
mov
and
clc
add
mov
jo
sbb
dec
out
jp
xchg
sbb
inc
sub
jl
sub
adc
rcr
shl
jle
mov
sbb
xor
flds
xlat
xlat
or
ret
pop
mul
mov
outsb
les
cmp
lcall
je
adc
repnz
fwait
out
dec
jnp
jecxz
push
fs
pushw
add
js
cmpsb
inc
out
in
test
sub
fnstenv
arpl
out
ja
xor
jb
scas
push
and
out
xchg
adc
lret
movsl
push
or
leave
rorb
xor
loopne
outsl
mov
leave
adc
dec
pusha
jecxz
fcoms
jbe
sub
cwtl
push
xor
xlat
rcrl
mov
jg
in
rorb
pop
aaa
and
xor
movsb
or
push
int3
push
cmc
jl
fwait
cmp
xchg
mov
push
lods
dec
mov
mov
aas
rorb
mov
sub
cmp
std
mov
xor
ja
add
mov
lock
push
push
outsb
xchg
xchg
adc
push
bts
xor
mov
and
and
mov
sub
add
xchg
cs
into
jnp
lods
scas
or
movsb
shll
js
imul
repnz
sub
mov
ljmp
cmpsb
popf
out
pop
jnp
fadds
pop
or
into
rol
and
mov
mov
xlat
andb
fisubrs
inc
aaa
nop
sbb
fwait
rcll
cmpsb
add
mov
pop
shr
sbb
loop
pcmpeqb
movsb
or
stos
jecxz
ja
fnstcw
daa
sbb
in
ret
clc
sub
mov
adcl
lea
mov
mov
or
subl
and
mov
or
adcl
xor
movl
cmp
movl
jne
mov
and
mov
shrd
adcl
shr
adc
mov
mov
orl
shl
xor
andl
jmp
sub
sub
sub
adc
xchg
xor
push
mov
add
cmp
push
xchg
into
bound
and
iret
mov
or
jmp
mov
in
or
xchg
mov
bound
roll
or
popa
call
jmp
adc
sub
dec
cmp
cmp
outsb
dec
lahf
jnp
xlat
mov
cli
xchg
fwait
pop
sar
and
or
mov
cmpb
lret
test
mov
add
jecxz
mov
mov
shrb
mov
mov
imul
xor
cmpsl
cs
std
movsl
dec
xchg
test
lcall
and
es
inc
jge
pop
and
mov
cmp
cmp
mov
movsl
ljmp
jae
xchg
mov
xor
jge
inc
push
sub
icebp
mov
sub
fbstp
dec
hlt
cmp
adc
cmp
or
pop
inc
fcoms
jnp
and
in
mov
mov
cmp
cwtl
add
push
add
mov
pop
jno
mov
test
ds
hlt
xchg
lock
test
inc
mov
mov
push
fwait
xlat
lods
data16
dec
movsl
movsl
mov
mov
ja
ds
mov
sti
mov
add
hlt
adc
call
aad
mov
jle
push
imul
xchg
xchg
and
fwait
cli
dec
jp
sub
or
mov
orb
test
stos
mov
mov
mov
sub
and
jmp
das
adc
and
je
jmp
inc
ret
pop
or
mov
and
pop
popf
jne
mov
cld
rorb
hlt
mov
mov
stos
pop
pop
cwtl
pop
sub
mov
cmpsb
ss
je
in
mov
or
sub
dec
inc
cmpsb
sbb
pushf
jle
aad
orl
cmp
jmp
cmp
xor
sub
add
lret
add
push
clc
xor
xlat
hlt
push
push
mov
xchg
into
ja
and
popa
push
push
incb
adc
in
lds
inc
flds
mov
stos
repz
add
mov
es
push
cmp
pop
pop
mov
stos
call
rcll
mov
lcall
int3
and
int3
ja
andl
mov
ret
sbb
xor
lds
je
mov
ret
xchg
hlt
fists
je
cmp
or
cmc
adc
fbld
in
and
sbb
adc
xor
fdivrp
ret
sbb
dec
rcrl
inc
call
dec
sbb
push
sbb
and
or
push
iret
imul
fdivs
push
imul
mov
popa
insl
movsb
jl
add
xlat
xlat
jecxz
sti
jb
and
iret
mov
mov
pop
or
rcrl
mov
xor
stos
cmp
fdiv
cmp
and
fs
incl
mov
xor
fwait
mov
ss
test
imul
pop
popl
pop
dec
loope
xor
fbstp
pop
sbb
ret
in
fdivrl
sbb
pop
and
and
mov
inc
mov
xchg
icebp
bound
push
mov
imul
inc
insl
out
cli
movl
jge
mov
ss
sbbl
icebp
popf
imul
jecxz
dec
inc
inc
lret
ret
in
adc
sete
es
or
mov
clc
mov
xor
mov
mov
pushf
lds
xchg
pop
arpl
push
sbb
arpl
inc
inc
xchg
mov
sbb
test
jns
stos
dec
and
scas
pop
mov
xchg
sbb
int
mov
mov
or
pop
mov
pop
sub
sub
outsb
cmp
ret
lods
adc
adc
inc
cmpsl
aas
scas
sbb
arpl
cmp
dec
loopne
loope
push
sti
arpl
outsb
cli
jmp
pop
push
ret
lahf
sub
jge
jge
mov
js
cmp
mov
cmpsl
test
mov
xchg
cmp
jne
add
test
subl
ret
pop
or
scas
imul
js
ror
mov
mov
sbbl
mov
adc
cmp
sti
stos
test
cmpb
pop
xor
fwait
shrl
outsl
push
add
cmpsl
cs
mov
cmp
fidivrs
push
dec
insb
push
enter
data16
xor
repnz
cmp
arpl
sbb
jnp
out
sub
mov
xchg
or
repnz
lods
pop
dec
cltd
or
and
ljmp
sbb
cmp
pop
xor
scas
cmp
inc
jmp
pop
and
push
inc
cmpsb
ja
subb
movsb
adc
daa
aad
jo
xor
fldt
jb
pusha
fadd
lock
mov
scas
xchg
xorb
jbe
jno
daa
fcoms
fdivrl
outsl
lret
lods
test
mov
test
mov
lcall
or
push
cmp
xchg
mov
sub
test
stos
ret
insl
or
clc
inc
loopne
mov
addr16
add
mov
dec
sub
mov
arpl
dec
inc
stos
push
sub
pushf
arpl
rorb
stc
les
mov
andl
pop
loopne
pop
das
shll
out
stos
inc
jne
cmp
lods
mov
fs
xchg
dec
adcb
push
sbb
pop
xor
jbe
dec
subb
out
into
stos
pusha
add
jbe
stos
into
xchg
pop
xor
faddl
mov
mov
insb
dec
cli
pop
andb
xor
stos
mov
aaa
push
xchg
add
inc
cli
or
arpl
mov
aas
scas
sbb
add
jbe
fimull
aaa
ficoml
out
fsts
mov
inc
xor
add
sbbb
adc
add
xchg
scas
sub
popa
movsl
mov
jmp
sbb
cmp
cmp
dec
dec
jg
cmc
push
xchg
lock
rcrl
test
sahf
push
addr16
adc
int3
into
outsl
andnps
mov
stos
movsl
mov
loope
outsb
mov
or
add
mov
test
push
stos
cwtl
lcall
int3
mov
mov
fisttps
dec
push
imul
mov
mov
fldt
mov
mov
jg
aaa
mov
dec
in
xlat
enter
nop
enter
xchg
ss
fs
cli
xor
xlat
push
inc
inc
mov
xor
dec
add
dec
mov
scas
xorb
scas
dec
movsb
es
jle
and
xor
sbb
mov
pop
and
add
cmp
pop
out
fistl
cmp
aad
mov
out
ret
loope
rorb
mov
movl
cmp
jne
notl
mov
mov
xor
cmpl
mov
movl
mov
jmp
mov
movl
jl
push
call
xor
or
movl
movzbl
xor
and
mov
xor
mov
xorl
mov
jmp
daa
mov
or
cmp
push
ja
mov
call
ja
iret
xor
push
mov
insb
pop
insl
or
repz
imul
sbb
jb
sbb
add
out
xlat
sub
mov
mov
pop
xchg
mov
cwtl
mov
out
lcall
ljmp
aas
outsl
out
sahf
inc
push
stos
push
mov
sbb
jp
adc
das
mov
sub
xor
xor
jbe
pusha
fmull
pop
xlat
lcall
or
jecxz
pushf
mov
test
icebp
mov
adc
or
push
adc
xchg
dec
gs
push
lods
mov
insl
pop
xor
sar
inc
xchg
roll
ss
lret
pop
jmp
subb
pop
scas
mov
ja
test
xlat
jecxz
mov
sub
lret
pop
sbb
fwait
jb
fldt
iret
mov
fistps
fs
jnp
mov
mov
mov
inc
mov
push
mov
in
push
jbe
into
sysenter
inc
push
fdivl
sbb
xchg
fisttps
test
insb
inc
push
pop
mov
mov
mov
fs
lods
lods
pop
addl
aas
mov
or
loop
test
xchg
lods
add
aaa
out
lock
mov
divb
icebp
xlat
cld
add
repz
filds
add
jmp
shrb
lods
mov
pusha
sub
push
mov
int
cmp
aaa
das
mov
outsb
icebp
imul
test
out
jecxz
clc
pop
mov
loop
out
ret
hlt
push
into
hlt
sub
inc
sub
pop
sbb
ljmp
mov
call
jne
push
ret
mov
push
xchg
mov
mov
cmp
inc
out
inc
rol
adc
icebp
inc
in
js
hlt
and
fbld
test
xchg
dec
jecxz
cltd
xchg
sarl
mov
lea
or
lret
dec
xor
test
je
or
xor
in
push
pop
es
inc
lods
ja
hlt
dec
pop
dec
jbe
shlb
push
cltd
sarl
push
test
cld
fcom
stos
push
push
les
push
mov
dec
pop
loope
push
loope
imul
xchg
push
popl
xor
cli
test
inc
hlt
sub
mov
stos
xchg
inc
les
pop
cmc
std
or
push
test
fs
inc
scas
inc
pop
hlt
mov
dec
inc
js
add
pop
cs
mov
xor
add
nop
mov
loopne
xchg
xchg
pop
les
in
fstpt
shrl
pushf
std
shlb
sbb
ficompl
mov
or
mov
push
push
jns
cmpsb
fldl
addb
shrb
repz
pop
cmp
add
psadbw
and
inc
test
mov
shll
std
jb
mov
push
and
jg
lret
mov
push
cli
testb
xchg
mov
lock
jbe
shrb
insb
dec
cmp
dec
and
sbb
mov
div
imul
mov
mov
ss
test
pop
dec
cmp
lods
mov
in
add
ret
xchg
clc
sub
in
cwtl
fstpl
ds
sbb
dec
and
pop
outsl
adcl
cmp
dec
adc
push
dec
cld
add
inc
pop
in
xor
ljmp
imul
in
adc
movups
jmp
outsb
dec
pop
push
add
in
sub
mov
and
cmc
inc
and
fwait
dec
loopne
push
int
mov
cmp
rcrb
cld
mov
and
in
inc
pop
or
mov
mov
or
sub
in
pop
rdseed
sbb
cmc
js
lret
lret
es
fdivrl
pop
mov
mov
jmp
aas
jge
sbb
cltd
imul
pop
ja
sbb
push
cmp
xchg
xchg
test
pop
jmp
mov
xchg
ljmp
sub
aaa
ja
fs
and
repnz
pop
jmp
test
pop
jmp
mov
or
xchg
insl
cmp
sbb
push
fbstp
xor
int
jnp
je
fsub
enter
cmp
clc
aad
lret
xchg
addr16
dec
decb
ret
int
sub
test
push
mov
mov
fld
pop
sub
add
inc
mov
xchg
add
jg
dec
aas
sub
mov
pop
cmc
ss
push
inc
cld
add
sub
lods
fcoms
cmpsb
ss
mov
push
jmp
fbstp
shlb
and
xor
jle
lahf
adc
inc
adc
mov
cmp
add
enter
aaa
mov
cmp
mov
ds
out
daa
xchg
pop
lds
pop
dec
jp
or
sahf
or
hlt
and
movsb
jl
push
aam
jns
js
arpl
dec
std
loope
lcall
sub
jmp
inc
push
xchg
mov
shlb
in
and
mov
mov
xchg
sbb
jecxz
fs
cld
mov
mov
xchg
cmp
cmc
repnz
es
std
seto
faddl
push
add
sbb
xchg
out
test
mov
call
cmpsl
sbb
rol
mov
call
repnz
sti
leave
lahf
xor
and
lods
je
cmp
mov
push
jno
xchg
icebp
push
pop
mov
xchg
xchg
lahf
rcrb
test
push
push
add
inc
cmp
lret
je
stc
xchg
jge
clc
sbb
mov
sbb
jp
gs
sub
scas
push
scas
cmpl
imul
sbb
or
add
or
adc
ds
mov
mov
or
stos
popf
lcall
das
popf
mov
lock
add
xchg
push
cmove
js
xor
out
aad
or
sahf
sub
sub
mov
movsl
pop
out
mov
inc
xor
push
adc
cmpsl
icebp
sarl
leave
inc
sahf
lahf
out
push
in
out
sub
cmpsl
jmp
mov
pop
add
outsb
ljmp
sbbl
xchg
pop
jmp
test
adc
jmp
or
cmovo
add
scas
adc
jg
xor
mov
push
pop
adc
cs
mov
inc
pop
aaa
hlt
data16
ds
movsl
sbb
repz
sbb
pop
and
stc
pusha
jmp
lret
fstl
inc
dec
pushf
dec
or
xchg
lds
icebp
les
dec
mov
das
movsl
pop
push
mov
das
lds
mulb
mov
xor
sahf
addr16
pushf
fiadds
icebp
shlb
push
cmpsl
ja
iret
nop
mov
stc
cmp
shrd
andl
mov
cmpl
movl
mov
jmp
movl
movl
jne
push
push
push
push
push
pushl
push
push
call
orl
or
xor
xor
xor
add
adc
adc
sub
add
mov
xor
xorl
shr
xorl
mov
orl
xor
or
movl
shl
cmpl
movzwl
movl
jmp
movl
movl
jle
push
call
not
or
sub
sub
sbb
sub
mov
mov
sub
imul
mov
cmpl
not
movl
jmp
mov
jne
push
pushl
pushl
push
push
call
sbb
adc
neg
subl
adc
mov
mov
not
add
mov
mov
mov
shrd
shr
adcl
mov
mov
xor
add
shl
incl
xor
jmp
jle
jl
dec
mov
push
push
adc
push
jp
ja
push
pop
popa
or
jmp
outsl
jge
jne
and
iret
sub
mov
xorl
ret
stos
mov
cmp
enter
imul
mov
push
inc
push
mov
pop
jne
cmp
loop
fcmovne
and
fs
jns
outsl
daa
aas
lea
jo
mov
fwait
xchg
pop
lret
mov
cmp
fs
repz
lret
fstps
std
xchg
jno
jnp
leave
mov
push
popf
movsl
mov
pop
in
adc
aas
bswap
inc
cmp
cmp
loope
xor
test
test
adc
mov
dec
mov
mov
mov
jmp
inc
and
lcall
sbb
ret
lods
xor
pop
es
cmpsb
test
adc
add
fisttpl
daa
xchg
outsb
lods
ja
mov
cld
pop
fiadds
sbb
icebp
cmp
push
call
inc
sub
test
jp
xchg
cmp
jbe
test
js
push
pop
mov
addr16
mov
pushf
xchg
adc
mov
pop
dec
daa
pop
hlt
outsl
int3
push
mov
rcl
jmp
jg
loopne
jle
and
out
xchg
mov
add
mov
or
aas
sarl
fadds
dec
pushf
sbb
push
sbb
daa
ret
les
les
jle
adc
popf
or
int
pop
sub
daa
clc
fmull
in
idivb
push
pop
push
add
inc
cmp
dec
jbe
dec
xor
test
int
xor
add
mov
fisttpl
loope
hlt
lret
jg
add
pusha
push
inc
js
mov
push
and
add
adc
sbb
dec
xor
test
aam
inc
and
or
popa
xchg
cli
mov
sbb
xchg
jb
ficoml
fsubrl
fs
xchg
add
xor
inc
sbb
dec
mov
push
push
jns
and
dec
addr16
jo
xor
mov
cmp
jecxz
dec
push
arpl
cmc
dec
xor
jge
int
jne
mov
pop
test
lds
rcrb
je
lds
pusha
outsb
lock
sub
sub
in
pusha
cltd
fwait
jne
add
inc
negb
mov
nop
test
cmp
mov
cmpsl
cmp
jno
cmp
cmp
sbb
cmp
mov
pop
jns
mov
roll
out
mov
in
js
xor
loopne
in
or
cmp
add
sub
out
idivl
jge
sbb
cmp
scas
pop
mov
pop
mov
xchg
icebp
arpl
xchg
push
lahf
mov
adc
aas
cwtl
pop
inc
dec
add
call
out
and
xchg
cmc
xorb
pop
cwtl
sub
push
dec
sub
scas
fcomps
pop
inc
mov
flds
out
scas
leave
iret
dec
lret
stos
aad
xor
xor
into
bound
sti
xchg
mov
vsubsd
scas
add
pop
xchg
push
cmp
outsb
and
mov
imul
cmp
jb
cmpsl
push
movsb
jbe
pop
xor
fs
lret
adc
pop
sub
lahf
mov
sbb
popf
pop
xchg
mov
sbb
adc
mov
popf
pop
fiadds
jl
iret
xchg
fs
fwait
adc
jb
adc
dec
lret
mov
sbb
insb
push
bound
std
dec
lea
mov
cmp
imul
push
and
pop
and
out
subb
cwtl
push
call
lods
leave
leave
push
push
jecxz
into
in
adc
mov
dec
lret
cli
adc
sbb
push
push
add
outsl
xor
fidivrl
sbb
loopne
fwait
push
mov
push
daa
add
xchg
xchg
jle
xchg
pop
and
xor
es
dec
loope
jae
movsl
call
shll
cmpsl
mov
div
aaa
stos
fbstp
cmpsb
push
xlat
add
cmpxchg
and
jp
push
repnz
jmp
gs
cld
xchg
clc
imul
cmp
jnp
mov
test
xchg
push
sbb
cmc
cmp
push
fcomps
jecxz
or
xor
pop
loope
movsb
mov
aam
mov
div
lcall
cld
outsl
test
aad
or
insb
jns
addr16
stos
aas
add
rcrb
dec
fwait
cmp
pushf
and
lds
mov
cmp
daa
mov
sbb
adcl
lcall
bound
test
inc
ret
jbe
and
lea
add
jae
push
sbb
lret
add
xchg
shrb
sub
rolb
or
jb
xchg
ret
fcomp
loopne
scas
or
mov
dec
cltd
sub
std
jecxz
xchg
or
das
xor
insb
mov
jp
jg
mov
adc
dec
iret
lret
xchg
mov
mov
fwait
mov
cmp
mov
dec
cmp
in
ljmp
jnp
je
outsl
shrl
cmp
or
push
pushf
mov
enter
xlat
movsl
fmuls
pop
fimuls
roll
fidivrs
andb
xchg
sub
xor
mull
mov
stos
dec
cmp
mov
mov
jl
push
mov
daa
pop
insb
push
xchg
mov
cmc
push
pop
scas
dec
add
in
jmp
sub
or
stos
daa
xor
sbb
mov
mov
fcomps
adc
mov
les
sbb
push
dec
imul
adc
out
aaa
push
sbb
stc
imul
xchg
je
jmp
mov
cs
adc
sbb
push
xor
stos
mov
mov
dec
sub
push
mov
mov
arpl
into
jecxz
pop
mov
sbb
inc
loope
jl
add
inc
dec
jp
sub
mov
les
sub
pop
or
jge
cmp
les
dec
insl
mov
lahf
pop
sarl
push
addl
mov
roll
xchg
jl
mov
faddl
mov
adc
cmp
test
movsb
xor
jno
xchg
dec
mov
cmpsl
xor
lahf
jbe
icebp
test
mov
sti
addr16
cs
mov
bound
shll
jp
rcrb
pushf
jl
adc
cltd
push
out
inc
rcr
xor
js
sbb
lds
sub
aas
xchg
loopne
stc
dec
xor
cltd
leave
mov
clc
movsl
stos
dec
test
in
cs
xor
jne
rorb
out
loope
cmpsb
and
ljmp
jbe
test
into
mov
insl
mov
addr16
inc
jbe
bound
in
jno
lods
dec
ja
mov
insl
jle
adc
adc
sub
movsb
or
aam
stc
out
cwtl
int3
inc
nop
inc
mov
and
das
mov
and
roll
add
mov
jmp
movl
movl
jae
pushl
push
push
call
xor
or
mov
sub
sub
mov
xor
or
sub
xor
and
xor
or
sbb
mov
mov
add
mov
mov
sbb
mov
mov
incl
shrd
subl
shr
adcl
mov
add
mov
cmpl
not
mov
jmp
not
jne
push
push
push
call
mov
sbb
and
andl
and
orl
sub
or
sbb
jmp
pop
and
push
adc
mov
push
ja
mov
mov
iret
fsubrl
inc
mov
stos
gs
push
mov
fsubs
add
jg
scas
mov
dec
loopne
stos
jmp
xor
out
adc
insl
dec
push
mov
jnp
pushf
xchg
test
cltd
mov
nop
mov
std
inc
push
mov
xchg
adc
push
sub
push
lcall
insb
xchg
xlat
cltd
test
stos
inc
pop
cli
adc
popa
mov
dec
imul
filds
push
dec
jb
jo
xor
push
mov
jl
sbb
sub
push
repz
and
inc
es
jno
aaa
or
mov
testl
js
gs
sbb
inc
dec
pop
imul
pop
in
fst
dec
ficoms
cs
pop
mov
ret
xchg
addr16
cmp
daa
push
cmc
mov
push
dec
pop
stc
lds
dec
js
loop
int3
xor
add
xchg
jg
sahf
xchg
dec
call
stos
pop
je
fwait
mov
fs
fcomps
or
pop
andb
jle
stos
lahf
lds
and
jb
test
dec
mov
mov
test
lods
xor
sbb
xchg
mov
data16
push
stos
and
pop
test
xor
test
pop
popl
push
cli
jbe
add
sub
jecxz
dec
cli
fs
cltd
fidivs
sub
mov
push
dec
add
fstp
loopne
lods
jmp
xchg
inc
jb
mov
jae
iret
add
sti
imul
jb
aam
loop
adc
into
fildl
loope
xor
xchg
jg
mov
lea
jl
jbe
push
pop
xor
test
add
fimull
call
rorb
cmc
and
mov
fisubs
fsubrl
push
mov
outsl
js
sbb
lds
inc
leave
inc
inc
sbb
xorl
sub
test
cld
in
or
lcall
and
add
imul
stos
imul
inc
inc
sti
call
fldl
cmc
clc
movsb
ror
lret
inc
cmpb
lret
sahf
push
cmp
shl
or
xchg
pop
xchg
shll
cmp
out
push
pop
cltd
ljmp
and
js
scas
sub
pop
cmc
lahf
outsb
mov
xchg
ret
push
push
mov
stc
mov
or
loope
mov
test
mov
ret
in
dec
jb
pop
push
movsl
pop
insl
lcall
int3
scas
scas
push
fisttpl
inc
xor
mov
andl
dec
fsubrs
rclb
out
and
mov
pop
push
out
repnz
rclb
jmp
sbb
cmp
lods
stos
push
js
dec
out
cli
sarb
dec
add
inc
jecxz
and
and
sbb
roll
adc
shlb
fdivl
mov
fldenv
xchg
les
xlat
loop
sub
repz
shl
adc
and
cmc
movsb
jl
rclb
fldenv
and
sub
lea
addr16
or
repnz
iret
cmp
hlt
mov
shll
lock
add
xchg
std
dec
cmp
lcall
mov
cmp
insb
mov
cltd
lahf
sub
negb
cld
imul
dec
push
adc
push
les
push
mov
stos
out
sub
xchg
mov
push
xchg
fstpt
hlt
mov
aaa
aad
out
daa
jp
jbe
aas
aas
test
jecxz
cmc
sbb
push
jb
into
imul
adcl
mov
adc
test
addl
lods
cmp
clc
in
pop
sub
sbb
into
pop
daa
inc
arpl
pop
out
dec
inc
adc
mov
push
push
sub
pop
xor
pushf
sub
sarb
cmp
jbe
or
mov
jp
arpl
add
rcrl
lds
in
out
aam
loop
std
std
sbb
stos
out
sub
lods
loop
and
cwtl
test
push
lds
scas
mov
jae
bound
sub
mov
xchg
clc
imul
mov
sti
daa
cwtl
jmp
mov
popf
push
mov
add
mov
inc
mov
ficoms
xchg
mov
dec
push
mov
pop
ja
sbb
movsl
cmp
fmuls
xchg
sub
push
push
fs
or
movsl
pop
push
fisubrs
jns
lcall
jecxz
int
sub
mulb
add
mov
dec
std
push
shlb
int
lods
std
push
pop
lods
inc
mov
pop
add
into
jl
pop
jmp
add
mov
enter
push
dec
jo
mov
jmp
mov
rorb
test
loop
je
dec
sbb
insb
dec
jo
jnp
or
out
or
outsl
pminsw
lods
mov
and
push
ljmp
jo
lea
inc
push
gs
test
push
jg
xlat
in
sub
mov
lcall
loope
movsl
pop
nop
dec
pushl
mov
adcb
faddl
sbb
cmp
lcall
in
jb
sbb
jl
and
cmp
push
movsb
jle
pop
movsb
dec
mov
das
push
sub
and
dec
int
dec
fists
aad
orps
dec
int
in
ja
xor
mov
lock
push
andnps
rcll
dec
sbb
mov
cmp
xchg
pop
call
xchg
addr16
mov
ret
and
mov
lea
in
fidivs
xchg
jnp
in
pop
rorb
and
data16
cs
sbb
cmp
cld
lock
dec
fwait
paddq
xchg
pop
sub
cmpsl
cs
out
xor
notb
loop
and
adc
pop
inc
js
xor
sahf
add
mov
loop
pop
shr
sahf
repnz
ret
sub
mov
xor
add
sahf
je
push
add
pop
fdivl
xchg
in
daa
jbe
into
ror
sub
mov
or
dec
pop
mov
cwtl
jne
mov
jle
flds
xchg
sub
lods
loope
ljmp
pop
das
insb
fcomp
pop
inc
jp
dec
sarb
mov
jne
xchg
mov
cmp
dec
cwtl
pusha
test
pop
out
rolb
call
push
push
int3
mov
or
test
mov
loop
cmc
mov
aaa
xchg
sub
dec
jb
nop
sahf
sahf
xchg
mov
xor
lock
fsubrl
lret
pop
mov
and
sti
pop
shll
lods
sbb
shrb
or
dec
test
push
data16
pop
push
add
dec
pop
jmp
fsubrp
test
xchg
cli
inc
fst
pop
cli
jae
mov
xor
xor
subl
or
andl
shl
sbbl
lea
sub
mov
cmpl
mov
mov
mov
mov
jmp
movl
jg
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
pushl
push
call
xorl
movzbl
adc
movzbl
add
or
add
movzwl
sub
mov
shrd
shr
cmpl
mov
mov
mov
jmp
mov
jbe
push
call
andl
mov
adc
sbb
movl
mov
mov
or
not
mov
mov
sub
mov
add
jmp
rcrl
cmp
and
and
scas
dec
or
fcomps
ja
stos
pop
popa
xchg
jle
imull
sub
lahf
xlat
lret
push
out
movsl
push
mov
xor
xor
jno
xor
cmp
fsubrp
push
lret
enter
push
test
pop
mov
push
rcrb
test
mov
loopne
jmp
pusha
cmp
out
andl
add
xor
mov
in
popa
loop
xor
movsl
push
mov
dec
test
hlt
ret
adc
or
stc
shlb
aas
cmp
sub
push
mov
cmp
or
push
fnsave
imul
jmp
sbb
arpl
mov
loope
jmp
adc
call
test
rorl
ljmp
pop
in
fldt
cs
std
xchg
mov
mov
jns
sub
cmc
insb
lret
lea
addr16
or
inc
add
xor
or
inc
dec
bound
pop
mov
jge
movsb
dec
xchg
test
imul
bnd
daa
fisubl
mov
sub
daa
test
jg
xor
cmpsl
pop
mov
or
movsb
sbbb
cs
aas
sbb
das
aam
out
fs
sbb
dec
movsb
jnp
add
xchg
outsb
add
jge
sbb
lods
jl
mov
or
popa
lcall
mov
sbb
loope
push
mov
repnz
clc
mov
loope
mov
mov
outsl
add
pop
lcall
ljmp
cmovge
dec
jmp
cmp
and
cwtl
sub
imul
stos
or
dec
add
scas
mov
add
sub
add
mov
inc
push
std
pop
xchg
inc
xchg
sub
popa
je
fbld
inc
ja
lret
xchg
pop
adc
enter
xchg
mov
sbb
sahf
in
and
movsl
mov
int3
arpl
pop
lret
sbb
sahf
push
into
sahf
inc
loop
mov
jecxz
xor
gs
cmp
call
push
outsl
xor
or
sbb
cmp
sub
push
daa
sbb
xchg
jp
imul
insb
inc
sbb
mov
mov
sbb
aam
and
fwait
xor
clc
shll
adc
mov
loope
inc
push
inc
inc
jne
lcall
inc
sbb
pop
add
sub
push
lock
pop
push
out
divps
ja
cmpsb
lret
shlb
cmovno
or
cwtl
xchg
xor
cltd
dec
fldenv
pop
ret
nop
out
add
inc
sahf
pop
enter
adc
loop
fimull
xor
adc
jnp
mov
sets
js
mov
adc
add
and
repnz
rcl
sub
icebp
test
cmp
outsl
pop
inc
cmp
mov
divb
cmp
faddp
in
jg
das
sarb
in
iret
xchg
cwtl
push
push
repnz
rsm
mov
cwtl
test
cltd
sbb
xchg
adcb
sub
xlat
orl
xchg
popa
jne
cmpsb
inc
cld
ljmp
push
inc
inc
adc
xor
cmpsb
lcall
adc
sbb
jb
inc
into
xor
xor
push
adc
mov
imul
mov
cmp
dec
or
sbb
cmp
bound
loop
int
dec
mov
xor
lock
xor
mov
push
pop
mov
lods
ds
movsb
loope
push
dec
icebp
dec
sbb
out
add
push
mov
push
out
sub
adc
mov
leave
repnz
pusha
and
hlt
sarl
mov
aas
mov
push
sbb
jne
mov
mov
sub
das
frstor
sbb
xchg
adc
cld
mov
cmp
hlt
cmp
pusha
icebp
inc
test
or
inc
sahf
push
or
jo
inc
pop
sbb
add
push
lods
mov
jo
test
pop
xchg
cwtl
inc
mov
repz
shl
orb
push
and
icebp
mov
add
sub
test
and
mov
mov
outsb
xor
cs
daa
cmp
mov
xor
ja
jo
std
arpl
ficoml
das
int3
out
hlt
int3
push
or
mov
mov
or
mov
cmp
xor
or
shlb
insb
pop
push
adc
icebp
and
std
or
adc
popa
test
cmp
shrl
in
mov
push
fsubrs
mov
or
and
nop
xor
aas
inc
das
jo
call
mov
lds
mov
repnz
mov
pop
cmp
loope
negb
cmc
roll
jne
or
adc
pop
jns
ret
lret
mov
xor
lea
add
dec
pusha
ficompl
dec
idivb
cwtl
xor
sub
es
mov
lret
bound
adc
into
lahf
mov
mov
cltd
sbb
push
jnp
fildl
into
cltd
stos
or
mov
mov
fs
pop
rol
stos
out
or
arpl
repz
test
sbb
popa
out
mov
cmp
adc
sub
lahf
inc
mov
sub
mov
popa
sar
imul
repz
xor
lret
imull
pop
add
push
outsl
jmp
sub
fs
repnz
ret
clc
inc
in
outsl
jo
cld
push
cmp
jp
lret
stos
lret
fxch
push
nop
sbb
push
mov
pushf
push
push
add
popa
int
hlt
pop
repnz
xchg
int3
sbbb
or
fdivs
jbe
jae
mov
xor
push
clc
pop
inc
inc
sub
enter
js
cs
insb
mov
or
xor
or
fcoms
push
imul
fstp
mov
sahf
fidivrl
cs
push
mov
hlt
cld
fs
int
in
int
movsl
mov
ret
sbb
mov
ja
adc
pop
out
pusha
aam
or
test
xchg
sbb
loope
ja
rcrl
shrl
jmp
lcall
fsubrs
pop
addr16
and
mov
dec
jp
cmp
pop
outsl
pushf
test
mov
jp
sahf
movsb
pop
inc
lds
xchg
add
push
dec
jnp
call
adc
jl
js
add
lahf
xor
sub
add
shrb
mov
icebp
pop
pusha
jge
pusha
aam
jb
xchg
xchg
mov
or
ds
cmp
inc
push
mov
in
lods
cmc
jbe
daa
xchg
add
adcb
adc
bound
mov
outsl
stos
lret
mov
pop
xor
dec
daa
lcall
sahf
sti
pop
cmp
pop
lcall
inc
xor
jle
scas
jg
sub
xchg
xor
mov
xor
adcl
or
shl
movzbl
or
imul
mov
mov
xorl
shrd
xorl
mov
mov
xor
shr
mov
and
mov
sbbl
xor
orl
or
sbbl
shl
adcl
sub
mov
mov
cmp
mov
mov
jg
xor
add
mov
sub
and
mov
cmpl
movl
movl
jmp
mov
mov
jb
push
push
call
xor
mov
sub
sbb
movzbl
and
mov
jmp
les
cmp
push
mov
mov
movsb
js
xor
outsl
dec
ja
mov
insl
nop
cld
mov
sahf
cmp
rclb
inc
push
rolb
cmpsb
add
mov
int3
mov
xchg
mov
cwtl
and
leave
or
mov
repz
insl
outsb
stos
cmp
add
loopne
or
mov
mov
dec
sub
cmp
mov
dec
jbe,pt
test
ja
xchg
sbb
sub
fistpl
loope
sbb
int3
int3
loopne
lock
scas
test
and
rorl
lock
push
push
mov
addr16
push
xor
jnp
movsb
dec
outsl
cli
add
dec
pop
dec
xchg
pop
repnz
js
push
jae
push
cwtl
jecxz
je
pop
ss
push
leave
jl
jbe
out
xchg
ret
xor
inc
xor
sti
and
mov
cwtl
mov
loopne
movsb
cltd
pop
mov
idiv
push
shlb
pop
xor
add
inc
push
pop
push
sti
pop
adc
stos
dec
xor
adc
adc
inc
dec
fnstcw
mov
cmp
inc
loopne
jp
adc
inc
mov
xor
jp
ss
jmp
sbbb
rcll
scas
insb
fcmove
lret
lea
popa
in
push
xor
inc
adc
mov
push
outsb
fdivr
loop
or
xchg
push
lods
and
shll
aam
sbb
jbe
or
cmp
mov
mov
mov
pop
and
sti
mov
mov
dec
repnz
stos
in
cld
sub
xor
addb
test
pop
imul
das
sahf
fstl
or
and
or
and
stc
pushf
cltd
stc
nop
imul
lcall
lret
fcomip
dec
int3
xchg
pop
mov
mov
cmpsl
jecxz
aas
pop
aad
pusha
scas
push
lret
xor
je
outsl
inc
les
mov
stc
daa
pop
clc
mov
imul
cwtl
hlt
jbe
or
xchg
mov
in
inc
gs
or
cli
subl
adc
or
fldenv
and
mov
mov
fwait
test
sub
loop
pop
jb
jo
adc
push
lods
repz
jmp
andl
fisubrl
or
sbb
pop
push
inc
push
cmp
test
dec
rcrb
fwait
or
add
in
xor
mov
and
xchg
iret
mov
cmp
inc
mov
andl
jbe
jb
sbb
outsb
adc
push
popf
mov
fdivs
pushf
leave
cmpb
xchg
aad
mov
in
cmp
das
fidivl
scas
push
fwait
xor
and
aam
lock
es
mov
mov
jg
icebp
lods
mov
movsb
or
lods
sbb
popf
xchg
repnz
dec
stc
add
mov
pop
pop
mov
in
pop
arpl
imul
xor
add
in
and
loope
jne
repnz
lods
sub
imul
lock
iret
pop
lahf
push
outsl
pop
stc
scas
into
or
incl
jbe
sub
cmp
aad
fisubrs
pushf
sbbl
mov
inc
loopne
sub
mov
cmpsb
sti
dec
add
jbe
iret
mov
mov
mov
imul
push
cmc
sbb
push
pop
add
idivb
jnp
iret
push
inc
fidivs
fdivl
pop
inc
xchg
icebp
lret
aas
and
cmp
sub
dec
stc
add
add
dec
pop
sub
pop
mov
call
xchg
push
icebp
adc
pushf
adc
jmp
add
test
mov
mov
pop
mov
sub
lods
mov
sbb
pop
ja
sarb
xor
leave
adc
icebp
popf
and
add
inc
push
xchg
sbb
loope
mov
mov
or
dec
ss
rclb
mov
nop
fnsave
or
pop
dec
pop
and
xor
push
out
les
loopne
mov
imulb
adc
call
testb
pop
jmp
adc
popa
xlat
cltd
mov
lods
adc
and
mov
mov
loop
mov
xor
push
hlt
jns
leave
cmpsl
mov
lods
push
pop
pop
ljmp
xor
lods
lock
xchg
out
add
iret
xchg
out
add
dec
mov
sbb
outsl
inc
push
dec
jo
dec
or
xchg
stos
arpl
or
and
mov
sbb
loope
jo
das
popa
movsb
loop
out
loop
testb
push
ss
or
xchg
inc
push
aas
ds
dec
dec
push
rcrl
pop
frstor
add
std
call
cwtl
cltd
sub
cmp
mov
dec
ds
pop
lock
jl
inc
dec
cmp
aam
jmp
xchg
fdivl
jle
xchg
jo
pop
mov
out
inc
call
mov
pop
mov
sahf
addb
add
in
push
mov
ret
repnz
jae
or
adc
movsl
jge
and
aam
repz
or
jnp
dec
sbb
dec
call
pop
xor
aam
mov
aaa
popf
ljmp
insl
and
and
int
aam
imul
jmp
or
xor
mov
pushf
test
loopne
jb
stc
repz
scas
int3
jecxz
inc
mov
repz
ljmp
mov
loope
adc
sti
and
xchg
cmp
sbb
sub
pop
test
popf
and
cmp
out
mov
lods
rorl
add
inc
fldt
jns
mov
sbb
or
or
rorb
out
inc
lea
loopne
sub
mov
fimull
add
pop
dec
stos
push
rcll
pop
xchg
push
sarl
sarb
dec
push
mov
bound
inc
icebp
stos
add
cmpsb
dec
sbb
jo
aas
or
inc
cmp
and
inc
push
into
mov
jl
movsl
add
cwtl
dec
mov
mov
or
outsb
mov
jbe
ret
sbb
ficompl
pop
aaa
push
out
incl
lods
outsb
loop
rcl
std
fsubr
pop
test
hlt
bndstx
lea
rcrl
shll
dec
jg
mov
ss
adc
push
or
jp
xchg
mov
out
int
push
add
in
adc
cld
iret
mov
rcrl
enter
repz
movups
lret
add
add
mov
xor
stos
adc
cmpb
lret
je
mov
inc
push
xorb
pop
and
outsl
dec
jg
dec
test
sub
cli
lahf
push
int3
mov
test
adc
test
xchg
cli
jo
ret
clc
test
and
scas
gs
sub
fwait
imul
add
cmp
push
add
and
stos
aaa
inc
add
lods
roll
mov
movzwl
or
mov
adcl
xor
andl
shl
orl
xor
adcl
or
sbbl
shr
and
mov
jmp
mov
mov
push
xor
call
add
int
xorl
jl
mov
test
fldl
lcall
addl
fiadds
mov
sub
sbb
jno
aam
mov
or
lahf
adc
call
pop
cltd
ucomiss
xlat
leave
mov
mov
jb
adc
add
je
inc
mov
dec
sub
ret
dec
jne
mov
scas
call
adc
xor
inc
dec
dec
sbb
and
sub
and
mov
insl
dec
xchg
call
into
push
ror
stos
push
cltd
mov
sbb
sbb
shll
and
addl
push
fs
xchg
sub
loop
mov
jbe
cmp
lea
test
push
out
dec
hlt
fcoml
and
scas
mov
inc
dec
cmp
xchg
jecxz,pn
jge
mov
shll
fnsave
out
mov
iret
lahf
pop
cmp
int
and
cmpsb
in
pop
mov
stos
cmp
jge
testb
movsl
or
dec
lret
adc
mov
sbbl
mov
lret
lods
pop
mov
hlt
or
adc
and
xchg
mov
sub
xchg
sbb
lahf
push
and
fnsetpm(287
jmp
push
sbb
pop
pop
nop
inc
test
call
jg
mov
fbld
loope
inc
fs
xor
mov
cmp
cmp
cmp
into
push
jecxz
cmp
outsb
mov
rcll
iret
jl
mov
outsb
push
xchg
int
jne
xchg
mov
inc
pop
ret
jb
sbb
in
ror
jb
xor
xchg
jge
jecxz
popa
test
mov
dec
repnz
dec
lock
imul
jbe
shlb
cmp
hlt
addb
das
in
adc
mov
push
je
mov
jae
adc
mov
aas
cmpb
mov
xor
and
lods
xor
cltd
push
dec
shrl
lock
sub
ds
or
dec
lretw
push
enter
scas
test
sub
cmp
xchg
cmp
daa
add
fcmovnb
push
cld
mov
jmp
stc
dec
cmp
lds
fidivs
push
push
lods
and
mov
mov
mov
xlat
push
stc
fsubl
push
push
out
push
or
xadd
adc
sub
add
mov
rclb
mov
lcall
xor
cmpsl
push
sbb
out
jle
inc
and
mov
loopne
repnz
imul
pop
std
pop
cmpsl
xchg
push
negb
dec
in
jae
sbb
std
dec
adc
push
add
mov
cmp
jmp
jge
mov
xor
xchg
adc
mov
jmp
test
inc
and
push
and
inc
aas
xorb
jo
add
adc
cmp
mov
adc
fistpl
addr16
mov
iret
adc
jge
mov
jb
sub
add
sbb
sbb
lahf
cs
mov
or
vpxor
movsb
push
into
mov
enter
ficomps
sbb
jae
clc
idivb
xor
sbb
shl
pop
subl
aad
fnstenv
mov
pop
fldenv
loop
mov
adc
outsl
or
aam
divl
adc
jl
lret
scas
add
testl
nop
push
out
aad
add
push
out
arpl
out
cmc
scas
imul
or
imulb
pop
cmp
jno
or
lock
mov
in
jae
cmp
hlt
das
mov
fsubrl
in
xchg
repnz
push
frstor
jno
int
jecxz
add
test
sub
fxch
aaa
xchg
xchg
xchg
and
cmp
sub
fistl
idiv
dec
stc
mov
jl
jle
sub
jl
movsb
push
rolb
and
iret
out
cmp
adc
fldt
fcomip
insb
inc
arpl
adc
fidivrl
push
into
dec
scas
loope
jno
cmp
mov
cmp
into
lods
xor
adc
cs
loopne
mov
push
popa
inc
and
pushf
je
mov
xchg
mov
mov
adc
mov
pushf
pushf
jno
test
pushl
out
ja
lcall
fstps
jle
es
es
test
cwtl
or
mov
adc
lock
jecxz
imulb
add
cmp
fsts
fwait
add
fmuls
jbe
mov
pop
sbb
sti
dec
mov
xor
inc
push
jp
add
xlat
xor
dec
into
popl
mov
adc
mov
in
iret
cltd
loopne
dec
lcall
push
add
pop
xchg
arpl
out
dec
cmpsl
lahf
or
rcll
stos
das
mov
sub
test
xchg
jnp
stos
lcall
gs
and
mov
mov
int
push
mov
leave
jns
enter
clc
test
arpl
arpl
stos
xchg
les
mov
xchg
sub
mov
mov
movsb
int
push
ret
dec
es
in
mov
mov
inc
addr16
jo
or
cmp
cmc
inc
mov
xorb
xchg
xor
lock
es
mov
mov
adc
pop
and
xor
dec
es
outsb
add
lock
pop
scas
xchg
cmpsl
in
push
jg
pop
cmpsb
and
aam
xchg
add
in
in
cmpsl
clc
pop
mov
pop
aam
and
imul
loop
xlat
std
adc
movsb
or
mov
adc
sub
int3
jge
outsl
mov
adc
cld
shll
cld
add
add
mov
mov
out
jp
xchg
adc
sbb
or
test
call
mov
inc
cmp
and
mov
inc
pop
punpckldq
mov
push
insb
test
fsubrs
xchg
shr
repnz
mov
sarb
mov
out
pop
das
mov
mov
dec
daa
divl
test
mov
sbb
jmp
inc
leave
jnp
cs
push
lahf
mov
pop
or
add
push
js
nop
aas
inc
jmp
mov
push
gs
lds
cwtl
mov
inc
adc
sub
mov
xchg
mov
aaa
adc
addr16
push
aam
push
test
and
mov
sti
popa
fdiv
jno
decb
inc
jo
and
mov
jmp
cmp
push
xlat
movsl
mov
xor
pop
mov
lods
add
mov
out
cmc
pcmpgtb
movsl
pop
in
loopne
addl
rorb
mov
inc
push
mov
mov
or
mov
mov
mov
add
mov
andl
shrd
sbbl
shr
mov
mov
inc
jmp
shll
adc
push
scas
xchg
rcrl
subb
ja
cwtl
adc
out
lcall
mov
dec
dec
in
mov
adc
jnp
loop
loop
sbb
jae
add
mov
pop
dec
mov
push
outsb
xchg
cmpsl
push
fcos
scas
repz
je
jecxz
cli
xchg
sbb
movsb
divl
rclb
orl
shlb
cld
imul
jle
dec
adc
inc
xchg
out
out
jmp
adc
dec
cmp
dec
fnstsw
jecxz
push
sub
leave
div
gs
stc
mov
sub
test
cmpsb
or
out
sbb
rcr
jg
pop
aam
adc
adc
lcall
das
jae
jg
dec
xlat
and
push
mov
adc
out
pushf
mov
jb
repz
fmuls
mov
ss
and
es
outsb
popf
jbe
les
mov
pusha
sbb
sbb
inc
xchg
cmp
adc
push
call
mov
incb
addr16
and
mov
push
xchg
xchg
dec
es
dec
out
imul
push
test
mov
clc
subl
cwtl
ljmp
ds
fmul
mov
cmp
test
cmp
and
sahf
jg
sbb
push
test
mov
aaa
lods
out
xchg
jns
test
mov
mov
push
mov
jne
out
imul
sbb
or
push
xchg
xchg
mov
repnz
popf
dec
iret
adc
mov
push
ret
insb
sub
call
sbb
movsl
je
mov
xor
adc
ds
mov
dec
xor
inc
xlat
sbb
pand
jg
cmp
rcr
into
addr16
int
test
in
div
sahf
repnz
and
in
imul
stos
or
sub
push
adc
add
push
cmpsb
cmp
add
adc
mov
xchg
xor
mov
and
insb
and
pop
and
fisttpll
xchg
mov
outsl
cmp
adc
push
xlat
xchg
stos
outsl
cmp
imul
sub
xlat
and
ss
dec
adc
sbb
xchg
idivb
jae
mov
test
and
mov
jno
mov
jl
outsb
je
mov
add
pop
jne
rorb
shr
repz
push
rol
sub
ljmp
push
inc
lods
sub
out
scas
xchg
fisttpll
addr16
imul
les
leave
imul
jbe
dec
jns
mov
push
jae
loop
call
inc
es
int
clc
adc
lods
and
mov
add
std
mov
mov
mov
and
fstpl
cs
iret
or
lea
enter
fbld
dec
in
adc
pop
int
mov
add
loope
mov
aam
cmc
mov
lcall
rcrl
sub
cs
or
lcall
inc
mov
mov
sti
shlb
mov
out
sub
sub
clc
jle
add
sbb
add
push
cmp
orl
fs
xor
mov
xchg
dec
rclb
lahf
inc
insl
xchg
fmuls
inc
and
aas
push
sub
popa
and
cli
adc
mov
fldt
sub
push
jbe
push
scas
sahf
push
and
fstl
dec
cmc
sub
ja
adc
rcll
imul
push
push
push
pop
jl
jno
xlat
ds
fucom
es
pop
lahf
cmp
mov
imulb
xchg
loop
inc
sbb
jb
fwait
pusha
mov
pop
push
or
loop
ss
test
fwait
mov
rolb
xchg
pop
inc
push
mov
jl
mov
in
lea
fscale
mov
mov
ja
loope
mov
adc
insl
shll
pushf
xor
adc
xorl
cmp
inc
push
in
out
jb
mov
lret
fisttpl
divb
jo
int3
pop
xor
mov
in
rol
jg
pushf
mov
pop
add
push
mov
rorb
mov
int3
cmc
out
sarl
ret
mov
in
insb
dec
lea
pop
mov
pop
dec
jo
leave
sbb
inc
and
daa
lods
rcr
in
scas
xchg
je
in
stc
mov
cmp
mov
push
cmp
sub
or
addr16
sbb
sbb
lret
inc
jb
in
and
sti
jb
sarl
xor
testb
xor
cmp
loope
and
jecxz
jmp
shlb
and
test
or
sbb
cmc
aas
repnz
rorb
out
int3
push
inc
inc
cwtl
add
push
cmpsl
call
dec
lea
and
mov
xchg
pop
and
cmp
pop
push
scas
insl
gs
mov
in
adc
jne
je
mov
push
jp
adc
not
loop
ret
out
les
pop
out
das
lods
mov
adc
push
lds
out
fadd
popf
inc
or
lods
inc
xor
nop
lcall
test
mov
pop
pusha
sbb
fistpl
mov
mov
or
in
outsl
xor
loop
in
cs
xor
in
add
iret
sbb
lods
and
shrb
stos
bound
cmc
or
pop
sbb
sbb
dec
mov
pop
clc
xor
inc
pop
push
adc
test
repz
push
mov
push
mov
hlt
mov
ret
lock
pop
dec
and
shll
jae
lret
or
lea
mov
outsb
mov
call
fisubrl
sbb
stos
lods
data16
jl
mov
nop
jns
inc
popf
push
inc
xor
jns
fbld
stos
iret
fsts
ret
mov
sti
addr16
je
stos
or
jno
add
mov
mov
push
arpl
mov
inc
shll
lret
mov
imul
leave
les
cmp
rcrl
loopne
xor
icebp
dec
push
test
and
add
and
out
inc
sub
dec
sbb
mov
fdivp
stc
push
jne
sbb
and
pop
push
pop
aam
mov
sbb
les
cli
cmc
mov
cmc
cmp
iret
testb
mov
lock
jno
dec
icebp
dec
pop
das
xchg
fcomps
lahf
movsb
test
hlt
mov
aad
stos
xor
int
mov
outsl
rcrl
lahf
mov
and
mov
int3
xchg
mov
inc
xlat
in
stc
pusha
lcall
push
jbe
add
ret
jo
pop
jb
aad
inc
cmp
scas
push
test
add
cli
in
xor
cld
adc
sbb
aas
xchg
xchg
add
xchg
jne
mov
xor
cmp
add
jge
subl
jmp
scas
popa
inc
jge
sbb
cs
xor
negl
pfrcpit1
frstor
and
xor
cmp
pop
jo
pop
bound
mov
and
pushl
icebp
daa
cmp
jns
cmp
adc
fsub
ret
imul
movsl
inc
ljmp
lret
or
xor
and
jle
out
icebp
jo
pop
mov
ds
sbb
int3
pop
jle,pn
jbe
rclb
xchg
repz
xchg
in
pop
pop
sbb
mov
nop
negl
mov
test
mov
repz
mov
rcl
add
adc
xorb
xor
enter
or
dec
pop
ss
mov
lret
xor
jne
imul
shlb
pop
hlt
xlat
movsb
and
lds
and
pop
adc
lock
cs
xchg
stos
bound
popf
fsubr
out
dec
clc
mov
fldt
cmp
shrb
and
xor
mov
jmp
mov
fdivrs
sub
mov
fbld
and
rol
imul
cmp
out
jns
mov
sbb
xor
push
sbb
cmpsl
jle
lock
jno
sbb
pop
inc
push
cltd
pop
push
inc
or
icebp
cmp
fnstcw
lcall
push
pop
inc
mov
cmc
pop
sub
cmp
and
and
fs
mov
in
ret
shll
aam
bound
outsl
loope
outsb
fcomps
add
mov
nop
movsb
cmpsb
and
jae
xchg
jmp
jb
pop
cmp
xlat
and
mov
xchg
aam
testl
pop
mov
mov
fists
sti
cli
dec
sub
mov
pop
es
adc
jl
cmp
lret
decb
lock
popf
fnstcw
scas
ja
push
mov
lret
mov
xchg
aas
push
push
iret
adc
lret
dec
xlat
scas
es
fstps
insl
xor
js
mov
aaa
push
gs
cmpsl
push
les
inc
dec
nop
pop
push
aam
lock
pop
push
mov
pop
adc
lock
shll
subb
pop
lds
lods
xor
xchg
aas
xlat
xchg
fcomps
icebp
cs
loope
testl
lret
lcall
popf
push
js
dec
dec
out
push
lret
and
xchg
mov
cltd
lret
lret
pop
aaa
pop
push
in
daa
mov
insl
insl
daa
mov
lcall
aam
fldl
push
test
inc
iret
dec
mov
sub
sub
or
loope
sbb
inc
xchg
mov
jae
inc
mov
push
pop
pop
int
sub
in
push
or
pop
stos
add
and
lcall
dec
adc
stos
xor
jecxz
call
sub
rorl
js
or
and
cmp
cmpsb
popf
lret
je
cmp
or
jg
mov
xlat
clc
repnz
dec
andb
cmc
mov
jnp
jbe
add
add
xchg
jno
inc
jae
lea
insb
clc
xor
cmp
cmp
fnstcw
or
dec
stos
mov
pushf
add
stc
repz
dec
dec
dec
xchg
imul
mov
sarl
mov
jno
inc
xchg
js
adc
push
lock
test
clc
iret
mov
fldcw
icebp
in
pushf
jnp
mov
clc
push
sbb
lret
fistl
out
clc
aaa
daa
adc
imul
aam
cmp
sub
icebp
xchg
pop
cmp
push
and
jne
and
pop
nop
int3
lea
inc
jae
outsb
sbb
pop
mov
test
mov
fstpt
loop
fnstsw
adc
cld
in
test
jmp
aad
inc
stc
or
aam
adc
xor
jns
movsb
movsl
ss
inc
cld
mov
cli
pop
jge
sub
pop
xor
pop
xchg
jb
or
pushf
leave
cmpsl
outsl
push
lock
daa
pop
stos
idivb
jne
add
aam
and
mov
cmpsl
adc
push
hlt
cs
xchg
pop
into
mov
sub
notl
cmpsl
in
icebp
cmp
outsl
imul
imul
push
pop
add
mov
mov
mov
dec
call
je
xor
mov
aam
pop
inc
xlat
xchg
cmp
dec
test
xlat
clc
pop
cmp
mov
pop
inc
mov
enter
inc
xchg
cld
lcall
cmp
pushf
lcall
fs
cmp
addr16
fcoms
mov
loop
push
iret
pcmpeqd
dec
push
pop
fisubrs
aad
je
ja
push
sub
mov
sahf
icebp
jne
lock
mov
push
lcall
pop
cmp
jp
popa
imul
dec
mov
cmp
and
ljmp
out
xchg
jnp
addr16
in
fmuls
pop
sub
fldcw
push
dec
les
gs
cmpsb
sahf
jns,pt
std
stos
fwait
daa
adc
ja
pop
daa
mov
insl
gs
push
jle
mov
jge
lret
pusha
lock
push
sub
cld
movl
inc
jb
inc
jns
add
mov
jmp
pusha
cmp
and
push
push
adc
pop
mov
mov
dec
lcall
xchg
scas
loop
popa
rcl
or
and
pop
pop
push
and
sub
mov
insl
inc
sbb
push
sub
popf
mov
aaa
sbb
inc
dec
push
pop
add
xchg
jno
lret
lods
fildll
ret
sbb
lahf
fnstcw
ret
loop
add
popf
mov
jbe
insl
rcrl
fstl
jno
cmpsl
pop
and
pop
clc
daa
add
pop
and
sub
inc
mov
inc
js
adc
clc
mov
jno
mov
fisubl
in
sbb
lcall
or
xor
aam
movl
idivl
mov
mov
xchg
insb
in
pop
hlt
cltd
movsl
out
js
cmp
loop
out
mov
lods
or
int
dec
mov
sbb
dec
es
fidivrl
les
xor
cmp
mov
pop
out
loope
iret
out
aas
loop
outsb
add
cltd
push
inc
pop
mov
movsb
into
pop
cmc
arpl
xchg
fidivl
fcomps
pusha
pop
pop
or
jmp
dec
sub
push
jp
fstpl
pop
push
into
iret
adc
fucomip
xchg
movsl
rcrb
mov
fildl
bound
lods
pop
pop
pop
push
ret
mov
xlat
sbb
fcom
and
xchg
mov
fucomip
jle
fwait
shlb
inc
cmc
xchg
idivb
sahf
mov
cwtl
adc
sub
xor
mov
mov
stos
std
mov
push
jne
jne
adc
xor
jnp
mov
xor
push
sbb
mov
into
adcb
add
xchg
and
stc
cld
cmp
xor
or
addl
shl
imul
jmp
add
or
or
adc
xchg
push
ja
pop
into
bound
repnz
mov
inc
sbb
aam
mov
rorl
nop
push
iret
push
and
xchg
lcall
fwait
mov
mov
sbb
pushf
sub
add
and
sub
sti
mov
push
aam
test
imul
add
repnz
fcomps
in
xor
add
dec
inc
dec
imul
and
push
mov
push
jae
inc
pop
and
mov
adcb
ret
jg
jno
fisttps
sbb
add
sti
xchg
or
adc
push
shrb
add
lret
popf
mov
jnp
stc
lods
enter
test
iret
das
add
dec
dec
lds
xchg
cli
cmp
jecxz
mov
mov
pop
in
in
push
mov
js
cmpsl
leave
shlb
popa
lret
fcmovu
mov
xchg
inc
fiaddl
push
mov
mov
jbe
daa
mov
ljmp
lahf
fidivrs
fcomp
loope
xor
bound
adc
pop
fnstsw
adc
fdivrp
dec
insb
sbb
sub
jg
lds
xchg
pop
add
fidivrl
std
and
or
mov
jns
mov
jmp
in
inc
cmp
fcoml
lds
lcall
jecxz
pop
mov
cmp
inc
cmpsl
fwait
stos
mov
mov
sbb
imul
rclb
jle
add
or
cmp
int3
mov
lods
inc
les
dec
stos
mov
rcrl
push
inc
cmc
test
jp
sbb
movb
out
sub
xchg
xchg
sbb
mov
shlb
adc
jnp
paddd
fadds
jnp
loopne
lods
hlt
push
sbb
mov
iret
cmpsb
dec
fistps
sti
fs
fimuls
test
xchg
adc
mov
fdivrl
and
xchg
nop
fisubrs
xor
mov
sahf
or
mov
mov
loope
mov
mov
in
shlb
mov
mov
cmp
sub
push
leave
or
rcll
loope
ja
pop
sbb
sbb
cmp
or
mov
jl
mov
mov
mov
icebp
push
cmpsl
mov
jp
adc
push
push
int3
rol
pushf
out
fbld
loopne
xchg
imull
add
negl
cmp
inc
fiaddl
xor
jg
leave
cmp
xchg
stos
rcr
mov
aaa
in
mov
mov
jl
jo
imul
popf
jne
mov
es
sbbl
xor
test
push
loope
cmp
dec
adc
push
jecxz
cmp
sbb
ficoms
mov
or
fistpl
fucomp
dec
sbb
pop
roll
jnp
ja
movsb
pop
push
repz
out
cmp
mov
jge
aad
mov
loope
mov
lcall
cmp
outsl
enter
jae
hlt
popa
ss
pop
outsb
xor
or
xchg
shrb
incl
mov
std
push
jb
mov
or
sub
lret
pop
rorl
rorb
mov
add
test
sbb
decb
and
jnp
ljmp
jns
cmp
mov
xor
adc
mov
int
xchg
pop
nop
jl
imul
pop
and
fwait
add
movsl
cmp
add
mov
in
push
mov
test
xorl
jp
add
add
nop
in
xor
fdivrl
push
mov
and
mov
adc
and
inc
imul
sub
sub
mov
mov
imul
js
inc
inc
out
mov
xlat
xchg
xor
mov
pop
mov
in
clc
or
mov
mov
hlt
icebp
mov
lcall
add
add
mov
mov
mov
iret
sahf
sti
fistpll
mov
mov
mov
addb
mov
ss
shrl
or
imul
es
test
cmpsb
inc
fwait
mov
ljmp
add
xchg
stc
and
insl
xchg
mulps
test
adc
sahf
dec
dec
int3
stos
push
aam
nop
lcall
arpl
aam
cmp
inc
mov
int
xor
sbb
sbb
loope
jecxz
mov
pop
adc
cmp
push
xchg
idivb
cld
aaa
xchg
movb
loop
fisttps
cmpsb
pop
or
mov
movl
xchg
dec
ret
fmuls
es
fstps
cmpb
cmp
mov
xor
jmp
popf
dec
lret
mov
int3
fisttpl
push
adc
clc
or
out
clc
cmp
popa
mov
xor
xchg
inc
pop
je
xor
mov
sub
enter
xchg
adc
pop
cmp
push
les
sub
add
mov
cmp
add
aad
aam
add
outsl
pop
add
pextrw
mov
xlat
adc
add
pushf
pushf
pop
mov
jno
dec
push
xchg
adc
lds
icebp
hlt
int3
out
addr16
mov
shrl
xchg
in
adcl
repnz
dec
or
in
mov
lret
je
add
ss
sbb
xor
stos
addr16
pop
jmp
and
cltd
jns
not
push
mov
push
call
mov
pop
fisttpl
push
cmp
ljmp
inc
cmpsb
cltd
icebp
xor
clc
mov
sbb
loopne
jg
gs
mov
lahf
in
cmpl
sbb
mov
sub
pushf
js
movsb
lods
inc
aas
or
xchg
ret
in
dec
pushf
loope
lods
and
adc
adc
sbb
jbe
cs
aad
dec
jp
das
jno
movsb
xchg
scas
jo
in
pop
mov
mov
rcll
test
pop
mov
jp
aas
pxor
ja
pop
mov
bound
jecxz
cmpsl
in
xor
int
mov
xchg
out
or
repnz
pop
jecxz
dec
sub
mov
int
int3
sahf
jnp
fists
push
scas
jb
push
pop
mov
scas
dec
cmpsl
adc
lahf
lcall
addb
mov
fildl
jno,pt
je
xchg
mov
ss
cmp
jb
pop
std
cmp
fiaddl
fistpl
mov
and
mov
movsb
add
psrad
xor
lock
stos
aas
scas
pop
dec
pushf
movsb
repz
stos
dec
xor
mov
mov
or
roll
inc
pop
inc
test
test
inc
xor
push
call
js
fwait
sbb
dec
jmp
adc
cltd
jp
stc
lods
ss
ficoml
in
icebp
and
cmp
cmp
fmul
jno
shl
loopne
cmp
or
jge
pop
rorl
mov
mov
sbb
dec
mov
sub
sub
sub
adc
int3
xor
js
push
mov
xchg
imul
aam
sub
popa
mov
mov
inc
add
testl
mov
mov
movl
movl
mov
jmp
movl
jle
push
pushl
call
andl
adc
xor
xor
mov
sub
and
not
and
movzwl
adc
cmpl
mov
movl
movzbl
mov
jmp
movl
movl
jbe
push
push
push
pushl
call
add
sbb
sbb
xor
add
mov
mov
shrd
adcl
mov
or
mov
addl
jmp
inc
or
add
cltd
or
in
repz
or
ja
fwait
xor
dec
inc
mov
aad
sbb
jmp
outsl
cli
test
stos
or
push
int3
add
pop
icebp
inc
pusha
lods
mov
es
rorl
dec
sbb
notl
test
into
mov
sbb
sbb
inc
fdivl
lcall
push
addb
cwtl
data16
sub
push
movsbl
imul
gs
inc
pop
int
gs
pushf
pop
rolb
pop
jg
jmp
stos
fsubrs
pop
aad
fistl
sub
popf
and
add
ja
xor
mov
xchg
int
cmp
add
lock
adc
nop
push
mov
insl
mov
cmp
mov
mov
sbb
scas
stc
aaa
loop
outsb
push
and
mov
jg
ds
sbb
cmpsl
pop
test
pop
jb
inc
xlat
cmp
mov
das
stc
aam
lods
movsl
add
sbb
sti
daa
popf
movsl
aad
and
sub
pop
dec
cs
mov
mov
pop
clc
outsl
inc
aas
inc
xlat
dec
push
call
adc
fisttpl
arpl
movsl
imul
or
clc
push
test
pop
out
fdivl
sub
cmp
xor
mov
xchg
inc
aad
pop
mov
cwtl
insl
hlt
sub
lock
fistl
sub
push
and
js
aas
lods
or
sub
aam
jmp
div
aad
dec
add
test
jl
sahf
pusha
scas
ficoms
inc
add
cmp
inc
das
push
cld
ja
push
movsl
inc
sub
arpl
adc
icebp
pop
jg
insb
jg
sub
notl
fcmovnbe
push
in
jnp
sbb
pop
sbb
pushf
inc
iret
lahf
fnstenv
sbbb
out
sbb
js
xchg
jge
cmpsb
cld
loope
sahf
loop
lahf
out
mov
sub
jmp
popa
pop
stos
fildl
lods
sbb
and
movsb
push
orb
dec
or
cmp
jl
pop
repnz
cwtl
cli
mov
adc
pop
cmp
lahf
shll
jns
js
imul
mov
push
in
inc
and
push
pop
jg
or
adc
mov
mov
pop
cmp
bound
sbb
mov
xchg
cli
jno
fwait
rcrb
add
clc
mov
inc
mov
xlat
jae
in
pusha
mov
xor
lret
mov
sbb
jo
sahf
test
nop
lea
or
mov
and
mov
adc
jmp
inc
xchg
mov
jp
lock
je
inc
lret
inc
fisttps
test
aad
fnstenv
dec
xchg
pop
jle
mov
mov
out
mov
in
hlt
xchg
push
sbb
sbbb
add
icebp
scas
adc
and
xchg
and
subb
incb
notb
mov
mov
cld
in
add
add
lds
cmp
imul
xchg
fwait
test
lahf
jo
cmp
or
subb
xchg
call
or
xchg
jge
rorl
pop
scas
stos
mov
add
test
dec
add
xchg
or
mov
jg
jecxz
push
xlat
jle
push
pop
jae
xchg
jne
xor
lahf
mov
adc
mov
xor
or
jbe
add
inc
aad
inc
test
mov
xor
push
lock
fildll
cmpsb
movsb
xchg
dec
push
lret
xor
add
insl
imulb
cmp
rolb
in
and
ret
cmpsb
jbe
xchg
cmpsl
rclb
lods
js
dec
rclb
push
or
sub
outsb
inc
cmpsb
jo
mov
fstpl
fnstcw
lret
add
xor
rol
adc
int
xchg
nop
pop
pushf
out
rolb
insb
out
push
rcll
cmpsb
rcr
and
or
aam
dec
in
adc
xor
jns
fisubrs
add
sbb
mov
imul
jns
mov
or
mov
dec
add
ss
and
mov
pushf
jb
mov
sbb
mov
icebp
jg
and
rcrl
dec
insl
sbb
sar
in
les
cmpb
sbb
or
shll
movsl
inc
sbbl
xchg
sahf
popa
cmp
fcomp
xchg
xlat
imul
lods
es
dec
mov
mov
stos
xorl
scas
frstor
lahf
mov
dec
popa
pop
outsb
xchg
or
push
cltd
aaa
shr
int
pop
nop
leave
icebp
fdivrs
int
cmp
inc
es
pop
push
jbe
cli
sbb
cmpsb
xor
sbb
std
add
les
sub
in
dec
dec
mov
stc
pop
in
sub
or
gs
jne
fcompl
mov
popa
mov
inc
in
or
mov
mov
push
ja
ror
fisttpll
lods
adc
push
mov
inc
add
adc
mov
add
xchg
mov
sub
inc
mov
xchg
xor
test
mov
sub
adc
push
cld
int3
adc
repz
inc
incb
stos
popa
inc
outsl
push
sbb
jbe
jl
cltd
adc
icebp
cltd
int3
xchg
repnz
mov
in
or
push
cmp
mov
in
test
mov
add
mov
or
adc
in
sahf
int3
sub
ja
sbb
out
adc
inc
pop
and
pop
or
mov
push
movsb
xor
pusha
popa
test
jno
sub
jecxz
insl
test
std
mov
jmp
dec
out
mov
jecxz
mov
outsb
imul
popf
popl
xor
lret
xor
sbbl
andb
lods
push
adc
cmp
lret
add
mov
bound
sub
mov
xor
pushl
sbb
jmp
and
rcrl
mov
mov
sahf
xchg
cld
loopne,pt
pop
ret
sbb
adc
adc
loop
xchg
movsl
mov
jno
inc
lret
push
shlb
cmp
stc
and
push
fs
fbld
popf
sbb
test
mov
sahf
fdivrs
arpl
pusha
hlt
jbe
or
or
mov
popf
cmp
nop
xor
in
push
push
mov
ret
nop
in
ret
lock
test
clc
je
pop
test
ljmp
pushf
pop
jnp
mov
lret
test
int3
aas
ds
xor
and
cmc
mov
and
roll
lds
inc
dec
dec
adc
pushf
mov
xchg
or
movb
cli
mov
icebp
push
hlt
inc
hlt
mov
xor
lods
into
mov
mov
adc
jp
dec
dec
mov
test
cmp
popa
daa
or
loop
push
pavgb
jge
shl
xor
movl
or
shr
mov
subl
mov
mov
addl
mov
adcl
shrd
shr
mov
cmpl
not
mov
movl
mov
jmp
mov
mov
jb
pushl
pushl
pushl
pushl
push
pushl
call
or
adcl
movl
sub
and
subl
subl
mov
mov
xor
xor
adcl
or
adcl
shl
add
add
add
mov
mov
adc
mov
and
shrd
cmpl
movl
not
mov
mov
jmp
movl
movl
jge
pushl
pushl
push
pushl
push
push
call
sbb
add
or
or
xor
or
add
mov
movl
cmpl
mov
movl
mov
jmp
movl
movl
jg
push
push
pushl
call
add
sbbl
mov
adc
mov
xor
mov
addl
sub
shr
movl
mov
or
mov
addl
xor
shl
cmpl
movl
mov
not
jmp
movl
ja
pushl
push
push
push
call
xorl
xor
incl
xorl
subl
sub
xor
mov
sub
or
cmpl
mov
mov
movl
jmp
mov
jl
push
call
addl
adc
xor
neg
mov
mov
add
sbb
and
mov
movl
mov
and
mov
movl
mov
add
movl
mov
mov
adc
jmp
ret
mov
dec
rcrl
js
out
ja
es
aas
add
jg
cmp
cwtl
mov
cld
and
mov
and
jg
data16
inc
add
jmp
mov
cmp
cmp
in
subb
add
aam
sub
add
pop
ss
inc
lods
mov
repnz
test
lock
mov
or
outsl
fwait
enter
out
int3
ss
int
jo
stc
pop
xchg
scas
mov
popf
jmp
jl
stos
and
add
jge
lcall
cmp
lea
stos
mov
lds
jns
or
mov
mov
out
push
xchg
shlb
ss
pop
cmp
fcmovnu
mov
pop
mov
xchg
xor
and
dec
std
sarl
outsl
mov
mov
inc
sbb
testl
std
cmp
and
das
xchg
lds
cld
shlb
ret
or
mov
or
out
cmpsl
nop
fbstp
scas
add
int
cwtl
adc
xchg
jmp
hlt
cmp
jno
in
sbb
push
stos
addr16
jge
sub
aaa
lcall
adc
clc
push
movsb
cmp
int3
push
pop
test
imul
xchg
xor
cwtl
push
jno
out
jae
push
mov
cli
jg
test
jmp
imul
fcmovnu
es
ficomps
mov
loope
add
jb
pushf
dec
sbb
mov
mov
mov
mov
es
mov
jnp
mov
push
clc
sbb
add
xor
xchg
sahf
lret
add
jl
into
in
adc
lcall
outsb
inc
add
jp
lock
cmp
mov
mov
fnstsw
jge
hlt
out
mov
mov
hlt
hlt
in
insl
lret
lods
mov
xor
xor
mov
test
pop
leave
jbe
mov
rcr
push
jecxz
mov
lock
pop
and
xor
jne
pop
pop
mov
mov
xor
cmp
in
xchg
jge
mov
jbe
movsl
mov
sbb
push
xchg
leave
jns
fmull
fld
aas
lods
xchg
push
mov
rcr
inc
popf
or
out
inc
xchg
ljmp
push
stc
inc
mov
or
jnp
ret
scas
aas
rorl
in
sti
xlat
mov
push
test
push
ljmp
call
pusha
mov
fimuls
cmp
mov
sti
xor
stos
aam
out
aas
jns
push
pop
pushf
jns
int
or
insb
aas
fadd
jns
add
repnz
push
imul
hlt
jbe
stos
xchg
push
int3
mov
dec
addl
push
insb
push
sub
dec
jae
inc
push
or
lahf
lea
or
js
xchg
hlt
rorb
imul
test
lods
dec
pushf
loop
pop
into
stos
sub
and
add
or
or
mov
fcos
add
adc
and
orl
inc
pushf
jle
or
lea
popf
cmpsl
xchg
jl
lret
mov
test
out
fldl
and
into
jp
out
rcl
call
imul
mov
fwait
mov
or
insb
pop
pop
inc
cmc
movsl
add
out
stc
enter
sbb
jae
xchg
cmc
xor
in
push
pop
mov
push
sahf
inc
fucomip
orl
push
pop
xchg
sbb
push
jl
push
add
std
enter
leave
daa
mov
std
adcl
repz
outsl
jge
xor
mov
or
mov
in
fsin
fildl
out
shld
mov
movsb
mov
pop
std
in
mov
pop
xchg
mov
mov
fcoml
jae
sti
pop
push
test
out
call
imul
dec
sbb
in
sub
xchg
xchg
mov
in
push
shr
sub
xor
testl
mov
arpl
ljmp
popa
jg
adc
mov
adcl
pop
mov
cmp
mov
mov
popa
jb
cmp
mov
jno
daa
and
mov
mov
imul
and
out
cmpsb
jno
push
int3
js
mov
imul
xlat
sbbb
push
std
push
outsb
jmp
add
jge
push
sahf
aam
dec
inc
sbb
jp,pn
cmp
sbb
xchg
or
sub
mov
push
shlb
stos
xor
addr16
jp
sbb
loop
pop
xchg
in
mov
inc
popa
iret
jp
sub
cmc
bndldx
cmc
not
fwait
sub
adc
xor
cmp
cmp
idivb
or
lds
jne
pop
jge
push
in
in
or
aas
js
outsl
mov
sbb
aad
in
mov
or
clc
out
pushf
xor
outsb
insb
jl
test
jmp
dec
mov
inc
or
pushf
jbe
pop
xchg
cwtl
xlat
ljmp
mov
clc
push
xchg
inc
xchg
roll
jg
sbb
insb
and
adc
sub
cmp
into
sbb
test
and
gs
sub
int3
pushf
cwtl
xchg
or
sbb
mov
add
dec
repnz
daa
inc
test
mov
adc
enter
pop
add
push
push
pop
push
push
stos
rorb
sti
push
movsl
push
or
mov
pushf
movsl
dec
jns
call
xchg
hlt
fmuls
mulb
or
aam
fbstp
xor
outsl
or
lret
mov
flds
jle
sbb
loopne
jecxz
jl
sbb
pop
inc
cmp
sub
mov
test
rcrl
pop
out
mov
xchg
cs
in
sub
popa
add
or
shll
jmp
adc
bound
mov
mov
les
sub
shl
pop
js
mov
fdivrp
fistl
and
loope
adc
or
aad
adc
sbb
pmuludq
adc
insl
jae
adc
nop
pop
ljmp
into
lret
pop
mov
push
ret
js
pop
xor
fstpt
iret
sarb
xchg
jne
stos
fwait
xchg
adc
sbb
fdivl
dec
push
pusha
cmp
push
mov
push
pusha
cmc
mov
fimuls
mov
dec
dec
mov
fcomps
loope
testl
pop
add
mov
rep
sbb
popa
or
insb
mov
shrb
js
in
or
jecxz
xchg
ret
imul
xchg
push
popf
subl
movsb
gs
jp
adc
dec
out
lods
movsb
add
lahf
sahf
inc
push
clc
jmp
scas
pop
and
sbb
cmp
mov
pop
and
mov
mov
mov
hlt
movl
jmp
lods
jp
scas
adc
xchg
mov
pop
fisttpl
ja
or
iret
lds
add
rcl
fsubrs
mov
test
jmp
cli
xlat
ret
mov
and
mov
fimull
mov
fisubs
mov
push
iret
pop
add
lods
repnz
lods
cmp
push
jle
gs
call
aaa
and
xchg
cmp
jmp
inc
inc
inc
or
jno
lock
push
add
jle
out
cmp
in
ret
add
sub
call
fldcw
cli
outsb
data16
and
jp
and
jb
sub
mov
add
and
push
movl
fimull
mov
out
and
push
pusha
mov
dec
bndldx
mov
xor
mov
mov
push
mov
ljmp
daa
sub
mov
loope
mov
out
adc
cmp
outsl
jns
mov
cmp
jnp
mov
dec
ret
pop
dec
cmpsl
mov
cmpb
xchg
mov
aam
daa
xor
or
fisttps
ret
and
pop
pop
scas
and
mov
lcall
ret
mov
add
into
adc
in
rcrb
popa
or
iret
aad
cwtl
xchg
cmpsl
ljmp
adc
push
test
rcrl
or
movsl
ret
scas
loopne
test
cmp
fsub
xchg
loop
lea
mov
sbb
rcl
enter
push
cli
aam
lods
xor
lret
add
xchg
xchg
xor
rorl
shlb
filds
test
test
push
cmpsb
pop
xor
int
lock
insb
inc
mov
out
sbb
daa
ficompl
daa
or
cmc
mov
test
lahf
add
push
xchg
cmp
in
xchg
call
mov
popa
pop
pop
popa
push
nop
testl
call
rorl
xorl
mov
dec
das
or
inc
xchg
inc
outsb
mulb
jl
jmp
mov
aad
inc
or
arpl
cld
les
add
imul
xor
int
mov
xor
fimull
fidivrl
bound
in
dec
mov
pop
out
out
mov
sar
in
push
dec
repz
jge
add
push
cli
popf
adc
add
mov
aam
inc
push
into
mov
out
fs
dec
jmp
fmuls
and
mov
and
std
lcall
sbb
ret
mov
pop
cld
ret
sub
pop
std
out
rol
es
loope
popl
pop
cmp
outsl
add
mov
cmp
sbb
test
push
in
lea
inc
idiv
scas
mov
inc
jmp
mov
gs
jbe
cmp
and
loope
or
pop
pop
pushf
or
inc
imul
xor
cmc
clc
push
or
sbb
sub
jns
cmc
sbb
movb
push
jp
push
rcrb
mov
sub
lods
cmp
mov
into
mov
dec
std
add
mov
lods
add
stos
orl
inc
and
mov
mov
rorl
cmp
cmpsb
xlat
or
jl
call
and
and
push
add
fldcw
cmpl
cmpsb
and
cmpsb
add
pop
adc
rcrb
jbe
gs
loopne
mov
adc
inc
jb
aaa
in
in
or
pop
cmp
adc
adc
and
pop
ja
cmp
adc
xlat
pop
jb
xor
dec
fcmovnb
sahf
dec
fwait
ret
sub
inc
cmp
sub
movsb
xchg
cmp
or
cld
loop
jnp
cs
jne
xor
insb
js
jbe
dec
outsl
sub
stos
adc
pop
cmc
aad
jmp
lea
jecxz
and
sub
inc
sub
fnstenv
cmp
negl
cmp
cltd
mov
pop
add
jmp
cmpsb
sub
xchg
or
movsl
mov
mov
xor
movsb
test
sub
cwtl
lds
in
jns
push
push
arpl
adcl
mov
popa
dec
lock
xor
pop
xor
sbb
in
insl
pop
mov
ss
fldt
mov
cwtl
outsb
xchg
cmpsb
imul
mov
dec
incb
inc
mov
adc
loopne
pop
mov
jg
dec
xchg
clc
aaa
out
adc
mov
and
idivl
scas
shll
aam
cld
push
popf
shr
mov
dec
xchg
dec
push
mov
or
pusha
jo
mov
cmp
out
cld
push
iret
icebp
jmp
imul
mov
sub
add
sub
mov
sub
adc
push
cwtl
xchg
outsb
lods
test
mov
sbb
aaa
mov
arpl
fiadds
mov
jl
mov
addb
adc
mov
aad
cld
xor
dec
mov
jno
sti
pop
int
movsb
mov
xchg
cmp
icebp
cmpsl
dec
out
jae
mov
mov
mov
inc
pop
addl
dec
insl
gs
lock
mov
adc
aaa
sti
pop
mov
in
jge
nop
or
fistpll
mov
dec
cmp
insb
imul
mov
jns
sub
sub
leave
scas
aad
and
imul
push
mov
xor
inc
xchg
adc
add
pop
fisubl
push
test
in
add
xlat
cmp
mov
and
repnz
test
cwtl
roll
push
int3
mov
push
dec
xor
dec
testb
cmp
clc
insl
cmp
dec
sub
mov
adc
xor
push
rcrb
or
sbb
lcall
sahf
fcmovu
sub
fnstsw
imul
mov
cwtl
lret
push
mov
das
xor
es
fistps
or
call
xchg
sahf
fldenv
shrl
cmp
es
dec
in
ss
sti
push
icebp
fiadds
push
fisttps
js
aaa
out
testb
dec
shl
cwtl
data16
addr16
inc
scas
in
rcl
cwtl
mov
addr16
cmp
aaa
std
mov
pop
stc
aaa
add
dec
sbb
stc
adc
or
push
lods
ss
test
stos
xor
mov
pop
mov
adc
jns
ja
fwait
in
sub
push
fsts
pop
push
jmp
push
inc
test
push
lret
dec
lock
cmpsb
les
sbb
test
fsubr
js
add
pop
xchg
les
jp
cmp
clc
mov
jmp
popf
mov
sbb
into
rorb
out
movsl
subb
cs
push
lcall
jl
jnp
cmc
add
popa
lea
ljmp
rorb
rorb
enter
pop
add
add
dec
push
adc
call
int
mov
xchg
ja
mov
mov
mov
sbb
fistps
push
mov
in
inc
jae
push
lret
lock
jno
adc
cmovle
xchg
pop
repnz
pop
jl
lds
rcl
stos
push
and
rolb
jle
decl
push
xchg
sub
loope
add
lods
jae
popf
and
in
sbb
pop
inc
jmp
aaa
rolb
cmp
or
mov
pop
fiaddl
nop
mov
arpl
outsb
jg
pop
imulb
lcall
repz
push
repz
inc
xor
lods
imul
inc
fsubrl
ljmp
sarl
hlt
lock
popf
es
xchg
jge
mul
mov
ja
aas
mov
outsb
push
xchg
test
adc
mov
or
jg
divl
xor
mov
pop
push
cli
and
mov
sub
orb
popl
mov
jle
jecxz
imul
insl
xchg
sbb
into
imul
leave
sub
fimull
scas
lahf
shl
je,pn
xchg
inc
mov
negb
xor
xchg
scas
xchg
imul
std
daa
std
in
xlat
jmp
iret
xchg
xor
aad
cwtl
loope
xchg
cmp
inc
notl
pusha
fists
pop
flds
xchg
xor
cwtl
pop
rclw
fwait
adc
mov
pushf
fnstenv
js
jl
and
hlt
je
aas
mov
les
xor
js
xor
jecxz
push
les
lret
mov
mov
cmp
cmpsl
or
insl
sti
sbb
movsl
add
and
mov
stos
std
cmp
xor
jp
test
cmpsb
xchg
in
xchg
add
ficoms
int
xlat
das
fstpl
into
lock
dec
inc
pushf
daa
ret
and
ja
push
cmpsl
inc
sub
popf
dec
pushf
sub
jp
jae
imul
mov
dec
insb
push
insl
pop
xorb
lcall
aaa
add
or
or
cmp
adc
sti
mov
or
push
into
jle
xor
lock
ss
out
sub
pusha
jo
jmp
adc
and
sti
push
pushf
push
lea
lods
test
cli
inc
jge
lds
fldl
sti
lods
shlb
jmp
loopne
jmp
sar
push
clc
fsubr
push
imul
cmp
dec
movsb
adc
seto
push
sub
jp
in
inc
cltd
inc
push
imul
pop
jg
push
dec
mov
clc
out
add
pushf
fisubs
cmp
stos
bound
or
sub
aam
add
sub
and
push
cmpl
jge
in
lahf
in
push
ret
inc
jmp
arpl
and
push
mov
nop
pop
aaa
jg
xorb
sub
mov
and
xor
es
call
mul
xor
das
pop
fnsave
mov
push
loope
gs
dec
je
push
cmp
pop
icebp
ja
rorl
pop
leave
mov
and
gs
pop
leave
adc
mov
xchg
push
rorb
push
ljmp
lahf
in
mov
adc
and
push
cmp
cld
imul
xlat
jmp
push
adc
cmpb
ds
mov
sub
mov
loopne
or
in
dec
mull
push
arpl
and
je
popa
fimull
negl
imul
fcomps
popf
adc
adc
fnstsw
sahf
int3
adc
fs
mov
xchg
mov
sub
jp
sti
out
mov
out
stos
neg
and
adc
cld
xor
stos
mov
sbb
sbb
add
and
dec
out
xor
xchg
clc
lret
sbb
ficompl
push
mov
int
xchg
rol
pusha
cmp
and
jns
push
dec
icebp
gs
xchg
addr16
into
pop
sub
popa
xchg
mov
jp
sti
xchg
in
add
fldl
add
dec
int
aas
dec
movsb
mov
mov
jmp
sbb
inc
aad
out
jb
loopne
xor
outsb
add
pushf
das
test
in
rclb
mov
jae
sub
cmpsl
lods
xchg
pop
mov
mov
push
xor
ljmp
mov
inc
xlat
or
movsl
jo
xchg
xchg
mov
popf
sub
lcall
das
mov
push
nop
gs
mov
adc
add
push
lcall
mov
push
xor
mov
insb
mov
inc
mov
stc
fmuls
jl
aam
xor
ret
scas
add
fists
ffreep
push
push
xchg
sahf
pop
add
inc
shll
xchg
xor
rolb
popf
mov
sahf
dec
scas
adc
out
dec
add
mov
sbb
fisubrl
xchg
setns
out
mov
repnz
insb
in
mov
push
aad
das
xor
or
test
adc
push
pusha
push
psubw
aas
mov
ljmp
adc
pop
iret
iret
cmp
cli
jb
cmc
imul
inc
push
test
jb
cld
xor
pop
mov
aaa
jl
lret
cmpl
dec
movsl
mov
fstps
fdivrs
xor
out
and
add
sbb
mov
cs
inc
ja
xchg
fidivrl
pop
ficomps
in
cli
cmp
ret
mov
lods
mov
cs
cld
push
xchg
mov
popa
out
outsl
jae
and
push
mov
jbe
dec
or
push
jb
fwait
xor
and
sbb
pop
ret
stc
rclb
stos
push
test
sbb
rclb
xor
das
fs
sub
data16
jns
xchg
enter
push
js
in
lods
dec
cld
sub
repz
ret
mov
pop
add
sub
xchg
addr16
test
mov
lods
inc
mov
mov
out
dec
mov
jmp
pop
repnz
push
jge
ljmp
xchg
mul
sub
mov
mov
int
add
je
pop
mov
inc
or
cli
jo
and
ret
or
stos
es
shrb
inc
sub
in
jbe
xor
and
add
pop
aam
repz
mov
lods
pop
inc
push
add
sbb
cmovp
rolb
or
hlt
ret
xorb
xlat
ljmp
out
add
push
test
aam
push
jmp
xchg
test
fcmovnu
loopne
jns
testb
mov
jae
pop
sbb
shr
je
add
mov
push
mov
mov
rcr
popa
jge
es
cli
icebp
aas
stos
cmp
dec
clc
mov
mov
outsl
pop
dec
jge
pusha
mov
pop
and
mov
mov
test
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
jmp
in
in
data16
push
sbb
mov
ja
lret
mov
fs
mov
mov
xchg
mov
fs
ficoml
jmp
fsubrs
loope
movsl
gs
std
addr16
xor
aaa
movsl
push
movl
pop
clc
and
mov
sbb
in
fwait
call
out
cmpsb
xor
mov
flds
loop
call
lock
or
iret
and
push
dec
jns
divb
aaa
inc
or
add
jmp
je
mov
repnz
sub
rcr
movsb
adc
mov
xor
je
add
xchg
int
gs
and
into
shll
es
iret
xor
xchg
xchg
xor
push
mov
inc
or
push
xor
add
enter
cmp
or
inc
sbb
jbe
mov
das
stos
xchg
jmp
and
js
js
lock
fstpl
adc
or
dec
je
enter
sar
stos
push
adc
leave
arpl
adc
sbb
sub
test
pop
jns
cmpsb
roll
mov
add
fsub
leave
call
or
xor
mov
cmp
lods
movsl
ss
sub
call
fwait
jle
pop
adc
mov
repnz
push
in
popa
pop
daa
mov
testl
fnstcw
stc
sbb
and
push
mov
add
mov
pop
icebp
dec
or
jnp
cmp
test
xchg
lret
and
dec
mov
inc
popa
repz
inc
push
in
jle
jmp
add
aaa
ffreep
insl
cs
out
push
or
ret
fisttpl
pop
xchg
mov
jne
mov
dec
ret
mov
dec
outsb
push
stos
mov
xchg
add
cmc
sbb
sbb
imul
cli
fs
adc
inc
std
pop
test
lods
aam
rcrl
mov
pop
push
xchg
push
dec
ret
enter
jle
insb
rorb
je
sahf
sbb
mov
clc
mov
pop
push
dec
pop
std
cltd
xor
mov
mov
xchg
xchg
push
inc
xchg
jbe
sub
mov
ja
iret
rcrb
cld
sahf
aam
inc
jne
imul
jle
cmp
enter
test
mov
mov
and
push
mov
rorl
mov
insl
cmpl
xor
inc
mov
sbb
and
dec
pop
testl
lret
mov
cmpb
out
test
ja
mov
xor
dec
pop
loopne
aas
in
cli
outsb
insb
adc
jl
pop
aaa
mulb
or
ret
jae
pop
mov
inc
mov
jmp
inc
pusha
lret
pop
mov
repnz
push
mov
out
pop
inc
or
sub
push
push
insl
mov
jns
cwtl
sub
mov
xchg
lods
xlat
mov
pop
xlat
fildl
sarl
sub
pop
cmpsl
cmp
mov
stc
mov
or
movq
movsl
fstpt
lea
mov
into
fistps
pop
cmp
mov
and
pop
mov
jb
mov
dec
xor
es
rcrl
in
leave
lahf
pop
clc
cmp
and
push
mov
mov
popf
mov
jecxz
imul
mov
pop
fidivrs
and
jmp
cld
test
xor
shrl
or
cld
sub
inc
mov
and
jecxz
cmp
mov
orl
push
sub
mov
fadds
xchg
imul
and
push
ret
aam
adc
fisubrl
icebp
rcl
ret
push
push
cmpsb
inc
inc
imul
outsb
in
mov
addb
bound
push
fcomi
and
jae
jnp
mov
ja
addr16
xchg
test
xor
xor
jmp
lods
ljmp
and
leave
push
js
inc
les
cs
in
inc
jne
sbb
or
out
je
jns
out
inc
fsubr
ret
and
xchg
jmp
shlb
icebp
pop
lock
cli
inc
pop
and
mov
jge
test
dec
imul
push
rcrb
pop
cmpsl
xor
stos
loop
push
fcoml
pop
xchg
mov
repz
or
xchg
mov
mov
repz
outsb
lcall
mov
cmp
leave
ljmp
mov
mov
in
pop
push
xlat
xchg
repnz
cmp
test
push
outsb
daa
cmpsb
je
hlt
filds
pushf
sbb
xchg
sub
xor
pop
shll
sti
and
push
ds
out
push
mov
cmpsl
lock
test
faddl
jnp
in
rolb
clc
push
jbe
fsincos
cmp
pop
fistpl
rcr
sub
push
mov
arpl
jmp
jnp
push
xchg
arpl
sub
std
cmpsb
cli
xlat
xlat
shr
int
out
scas
dec
pop
fwait
es
mov
stc
inc
in
push
dec
mov
pop
mov
cmp
jle
jno
pop
cmp
xor
cmpsl
scas
xor
pop
adc
pushf
jp
mov
jecxz
stos
pop
fistpl
mov
xor
shr
bswap
test
test
inc
outsb
shll
imul
xor
jge
sbb
jl
adc
loopne
fisubl
and
sbbl
jne
mov
push
ljmp
mov
outsl
repnz
push
int3
cwtl
add
inc
pop
jp
daa
or
adc
in
cmp
cs
in
cmpsl
jnp
pop
mov
arpl
push
lock
or
cwtl
or
cwtl
fnstsw
mov
or
into
nop
xchg
inc
xor
mov
push
adcl
mov
mov
aaa
push
mov
outsb
mov
jg
lret
pop
mov
test
mov
and
sti
lea
or
pop
dec
adc
idivb
push
pop
ret
and
sbb
adc
inc
add
fidivs
mov
pusha
push
popf
add
sub
mov
lea
insl
call
or
ficomps
add
mov
push
lea
outsl
pop
jl
pop
jmp
into
enter
outsb
dec
cmp
inc
sub
cmpsl
jnp
xchg
loopne
mov
jecxz
sqrtps
iret
pop
dec
sahf
stc
mov
and
mov
mov
and
add
js
hlt
inc
decb
pop
jnp
scas
add
divb
iret
outsb
sbbb
lcall
jo
mov
jbe
sbb
and
push
insb
cli
test
fidivrs
int3
jl
or
leave
sbb
xor
mov
shl
mov
xor
xor
or
mov
mov
xor
jmp
outsb
hlt
xorl
adc
stos
ja
adc
pusha
icebp
push
je
inc
mov
push
push
les
sbb
dec
sarb
or
out
int
cmp
sbb
pop
sbb
out
mov
rol
sub
aaa
inc
dec
xor
and
pop
imul
and
jns
mov
movsl
xchg
scas
out
push
pop
int3
push
call
inc
daa
lods
fcmovnu
dec
imul
fs
daa
mov
adc
mov
sub
in
push
pusha
fsts
adc
add
add
insb
mov
fisttps
daa
cmp
sub
mov
fidivrl
and
cwtl
shrb
mov
das
pop
stos
sarl
pusha
xor
int
arpl
aam
mov
sub
lock
addb
mov
push
dec
fwait
xchg
mov
mov
lahf
xchg
cmp
mov
loope
or
int
mov
mov
mov
nop
sbb
out
clc
arpl
jne
and
aaa
lret
ret
pop
mov
lock
sub
fiadds
or
out
xor
outsl
dec
loope
pop
adc
insb
movsb
test
fnstcw
adc
xchg
addb
push
loop
bound
sbb
sub
and
gs
inc
dec
or
andl
repnz
inc
mov
test
out
push
mov
divl
pop
jo
inc
adc
mov
or
pop
xchg
shlb
mov
jg
push
loopne
add
adc
xlat
jae
jp
mov
mov
push
mov
loopne
jo
jbe
mov
xchg
dec
aaa
mov
insb
mov
and
in
into
add
or
mov
jl
sub
sub
stos
pop
pop
imul
stos
hlt
mov
inc
in
loope
sub
jne
je
dec
adc
stos
mov
xchg
das
nop
xor
adc
int3
push
cwtl
mov
mov
loop
adc
test
loop
adc
mov
sbb
jnp
fisubrl
dec
lds
movsl
cmpb
cltd
jmp
cmp
cli
mov
and
push
sti
dec
clc
xor
mov
lods
stos
xor
arpl
aam
sti
test
inc
loope
repnz
sub
and
cmp
aam
repz
loopne
mov
out
mov
xchg
std
rcrb
fnstcw
insl
xor
hlt
dec
imul
xor
cwtl
pop
repz
loop
mov
ja
sub
push
lea
les
xor
int
push
mov
inc
and
popf
xorl
insl
aas
sbb
mov
and
insl
out
sub
in
stos
xchg
jae
mov
jmp
insb
cs
loop
mov
test
es
filds
int
aam
test
daa
inc
popf
mov
push
push
test
inc
adc
mov
out
das
dec
and
pop
cmpsl
repz
data16
rclb
jle
shll
jmp
mov
arpl
pop
in
test
enter
cmpsl
mov
sbb
dec
outsl
lahf
ss
pop
cmpsl
xorl
mov
mov
mov
jb
mov
sub
add
jb
adc
xchg
je
cli
in
jp
mov
test
ds
cli
cmp
roll
iret
jns
mov
stc
ret
int3
xchg
xor
cmc
movsb
sub
orl
testb
inc
mov
cmp
cmc
pop
or
mov
push
rep
adc
je
xchg
repz
dec
fstpt
jns
add
loop
gs
stc
sub
andl
sub
test
jge
mov
xchg
mov
dec
sahf
adc
pushf
lret
xchg
cltd
das
push
movsb
dec
stos
mov
xchg
inc
sub
jecxz
rol
push
dec
lahf
test
xchg
pop
int3
popf
mov
popf
push
push
cmp
add
pop
xchg
adc
mov
jb
sub
repz
repnz
pop
imul
jge
fdivrs
in
inc
std
fbstp
mov
inc
xor
pusha
xchg
in
in
js
mov
je
mov
inc
sti
lret
pop
xchg
or
cltd
jle
pusha
jle
pop
jb
mov
pushf
sbb
cmpsb
stc
push
push
jns
jmp
inc
test
mov
and
cmp
jle
mov
arpl
shll
dec
sub
mov
fdivrl
mov
jbe
dec
in
mov
in
jle
jecxz
leave
mov
dec
daa
fldt
lea
pop
mov
add
pop
out
dec
xchg
call
inc
ret
orl
out
pop
push
push
mov
xchg
imul
xorb
push
inc
adc
movsb
cmp
xchg
fwait
cmc
mov
clc
and
xchg
nop
push
mov
out
mov
mov
arpl
rcrl
mov
pop
rorb
enter
and
mov
sub
sub
pop
inc
lods
scas
xchg
xchg
ljmp
jnp
sbb
sahf
or
add
mov
jb
int3
scas
subl
inc
rcll
fwait
shlb
std
pop
lret
cwtl
inc
sbb
adc
mov
in
out
pop
lea
add
sub
icebp
mov
imul
mov
fcmovnu
into
mov
adc
cwtl
dec
mov
xor
arpl
in
mov
jb
mov
lea
push
cmp
xchg
ds
ret
xchg
insb
sarb
pushf
js
das
jp
icebp
xor
jb
cmp
ja
les
jb
mov
mul
xor
or
lea
push
mov
popf
add
inc
mov
jge
jb
jle
adc
push
pop
call
nop
shrb
fcomip
les
and
loop
ja
fxch
push
dec
lea
sahf
test
ret
bound
or
mov
lds
iret
je
insb
out
mov
loope
movsb
addb
jbe
xchg
outsl
sbb
in
cmp
sub
xorb
mov
jl
data16
jno
or
lret
leave
rcrl
mov
dec
sub
ss
cmc
cwtl
inc
test
gs
push
xor
pop
jne
int
cmpl
test
pop
and
cs
dec
xchg
push
push
inc
sar
or
ss
in
xchg
push
push
aad
aas
cmp
pop
mov
push
mov
dec
nop
inc
loop
dec
in
xlat
ret
cs
icebp
mov
negb
loop
fs
jb
cmpsl
and
mov
jns
pop
sbb
add
mov
push
dec
mov
in
jecxz
sub
adc
and
cmc
xor
call
or
mov
push
fucomi
dec
and
rorl
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
jmp
add
mov
inc
and
js
aaa
mov
ja
aad
mov
jno
ss
xor
les
xchg
int3
cmp
adc
shlb
ficoml
push
xchg
pop
push
sbbl
das
loopne
add
xchg
jno
out
insb
fdivl
scas
out
hlt
loop
dec
mov
std
les
pop
in
cmp
push
aas
inc
xchg
cs
jmp
push
pop
sarb
cmpsl
dec
cmpsb
inc
leave
inc
and
out
push
test
adc
fimuls
sahf
dec
pushf
lea
pop
mov
xchg
mov
movsb
jbe
mov
dec
push
ljmp
inc
addr16
ja
push
or
xchg
shll
pop
pop
pushf
es
addr16
es
jge
mov
fdivl
sti
ret
lea
inc
mov
addb
mov
adc
loope
mov
mov
dec
and
inc
in
pop
daa
cmpsb
inc
rcll
jle
pop
cmp
xor
xchg
cmp
fidivrs
rcl
loop
fwait
rcll
std
icebp
cltd
jnp
xor
adc
xor
pushf
push
stc
movsb
pop
call
and
adc
data16
xor
cmp
cs
dec
jns
fstpt
mov
lods
js
dec
and
ret
sti
inc
jp
mov
dec
pop
into
outsl
push
adc
mov
mov
dec
rcrl
les
jp
cmp
mov
push
or
inc
sbb
push
push
outsb
add
inc
rorb
paddusb
cld
jmp
inc
sbb
loope
shrl
cmp
sub
xchg
pop
mov
cmp
sti
inc
mov
repz
fcoms
shrl
pusha
fbstp
mov
insb
push
pop
movsb
adc
cmp
popf
test
insb
call
cmp
jg
mov
inc
jne
outsl
aam
daa
aam
push
push
fstl
stos
inc
mov
ss
and
imul
test
imul
dec
std
dec
inc
inc
insl
sbb
pop
mov
data16
leave
sub
pop
cmc
sarl
mov
into
test
cmp
mov
push
pushf
loopne
mov
mov
pop
mov
sti
int
inc
fdivrs
cmc
and
xchg
jne
lret
mov
sbb
cmp
out
adc
mov
mov
imul
imul
cltd
aam
sahf
jmp
mov
shrl
xlat
cmp
xchg
sbb
lods
rclb
lock
xorl
fildll
enter
or
roll
cmove
mov
andnps
pmovmskb
mov
inc
loop
imul
mov
mov
inc
adc
icebp
xor
jb
sub
leave
add
or
cmp
lcall
lret
dec
mov
aas
pop
fwait
mov
rol
mov
arpl
mov
scas
insb
mov
or
mov
and
add
and
inc
insl
pop
pop
pop
sbb
add
mov
in
jl
fwait
jns
inc
adc
mov
inc
in
adc
into
or
stos
mov
add
in
cmp
jnp
ds
cltd
fwait
cli
cwtl
arpl
push
pop
orl
dec
jae
lahf
adc
add
jb
loopne
sub
mov
push
cmp
cmpsl
test
mov
xchg
xchg
or
add
xor
xchg
jmp
cmp
pop
fistps
adc
inc
clc
mov
and
test
iret
xchg
iret
sub
inc
pop
xchg
push
mov
and
out
adc
cli
adc
ljmp
mov
sub
rolb
xchg
push
mov
js
insl
jno
mov
sub
mov
dec
data16
cmp
and
cmpsb
sub
andl
fstps
jecxz
xor
sahf
or
daa
push
jne
mov
insl
mov
push
pop
popf
nop
popf
outsb
enter
xor
pop
mov
je
sub
dec
xchg
scas
and
mov
add
cli
dec
dec
adc
xchg
lea
mov
cld
stos
ret
jecxz
sarb
outsb
lahf
mov
int3
clc
fldenv
jge
xchg
xorb
push
call
bound
sbb
lcall
sbb
add
cmp
jp
ja
mov
pop
lods
ror
sbb
shlb
mov
shlb
mov
clc
jg
lea
mov
mov
sar
addr16
and
loopne
aad
lcall
cmp
inc
scas
push
adc
adc
pusha
mov
and
mull
pop
push
int3
fistl
dec
aam
lret
fdivrl
mov
movsl
mov
adc
sbb
hlt
cmp
add
jne
das
cwtl
or
cmp
rolb
pop
into
fmuls
or
push
aas
jl
ret
sahf
jg
fists
sahf
lea
dec
roll
mov
call
loop
sub
aam
popa
pushf
mov
sbb
rcl
jle
stos
and
arpl
stos
stc
xorl
push
push
test
out
fwait
pop
mov
sub
test
push
cs
fimull
sbb
dec
rcr
test
jge
dec
jp
dec
lea
pop
enter
adc
add
les
sbb
pop
jns
pop
outsb
pop
imul
push
push
andl
aaa
aad
jnp
jnp
fstpl
jmp
pop
subb
push
cmp
ja
rcrb
dec
mov
sbb
fcompl
push
sarl
or
rcrl
cli
push
vpshufd
pop
stos
test
sbb
pop
xchg
mov
out
and
add
ret
leave
cmpsl
into
outsb
adc
insl
clc
mov
sub
or
inc
sbb
dec
jb
cmp
sbb
aad
sbb
pop
jmp
or
repnz
or
mov
je
adc
gs
hlt
pop
mov
mov
or
inc
into
lock
jae
div
cltd
daa
sub
movsb
shll
movsb
mov
out
pop
es
pop
pop
out
xchg
jge
cmp
mov
fcoms
adc
pop
jmp
scas
mov
in
jo
scas
pop
pop
jl
icebp
cmp
enter
roll
or
jb
adc
cmp
testl
xor
mov
xor
les
xchg
inc
mul
mov
pop
add
cmpsb
sub
sbb
sti
pop
outsb
icebp
inc
iret
loopne
or
scas
push
pop
adc
in
jo
add
int3
or
sub
mov
cwtl
fwait
push
lods
xchg
push
dec
pop
sub
mov
xor
fldl
mov
sbb
sub
or
fsubl
mov
lret
pop
bound
stos
inc
add
mov
pop
in
xchg
pop
inc
push
repz
jmp
mov
lods
enter
add
hlt
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
jmp
orl
push
cmpb
or
pop
xchg
iret
mov
fbld
imul
movb
push
popa
lods
hlt
push
ss
add
push
int3
jecxz
pop
jns
imul
xchg
xor
sbb
mov
out
xchg
inc
dec
dec
in
icebp
popf
sbb
negb
dec
or
add
sbb
xchg
mov
leave
mov
sti
fcom
and
fsub
sub
fistpl
jp
add
pop
cmpsl
dec
push
jb
inc
xor
cmp
ss
cmpsb
incb
in
loopne
fiadds
cmp
dec
aad
cmp
jae
push
mov
inc
hlt
cmp
into
mov
imul
jecxz
int
sbb
adc
sub
push
jle
adc
unpckhps
je
mov
mov
push
push
dec
fsubs
sahf
xlat
and
pop
push
xchg
inc
fsubrp
adc
test
rolb
and
leave
xchg
pushf
stos
enter
sahf
out
scas
roll
xor
pusha
or
jl
push
inc
scas
add
xchg
stos
push
jae
aad
clc
es
sub
push
sar
ss
inc
mov
addr16
stos
inc
pushf
inc
imul
sub
aas
adc
inc
mov
sbb
xor
mov
mov
sahf
push
test
push
push
loope
cmc
push
incl
frstor
shll
ja
aad
add
aaa
shrb
imul
push
inc
pop
pop
loope
sub
pushl
sbbb
testl
scas
pop
push
cmp
ficompl
repz
fistl
in
stos
cmpsl
pop
cld
cmp
cld
push
enter
cmpsl
out
xor
mov
or
js
leave
ficoml
xchg
mov
xor
jge
in
iret
daa
mov
sti
in
cwtl
cli
xchg
in
movsl
cmc
cwtl
cmp
sub
dec
leave
push
cmp
es
addl
cmpb
pop
xlat
int
loopne
mov
imul
xchg
mov
sbb
or
cmpsb
repz
mov
in
and
pop
dec
shlb
mov
mov
sbb
jg
push
cli
mov
add
loop
les
divb
rcrb
xchg
in
js
daa
adc
push
or
or
xchg
pop
inc
mov
arpl
fsubrl
mov
ret
adc
cltd
jle
cmp
jmp
jbe
cmp
addl
mov
out
insl
into
imulb
inc
stos
fst
in
addr16
sub
push
jb
sub
mov
xchg
daa
pop
cmp
mov
fisubrl
repz
cmc
add
repz
mov
mov
push
idiv
jge
test
cmp
arpl
lret
mov
ficoms
xor
or
psubsb
jle
push
xchg
adc
insl
scas
popf
pusha
cmpsb
outsb
push
xchg
mov
jnp
aam
leave
inc
and
adc
adc
or
xchg
fxch
cmpsl
outsl
add
mov
into
pop
adc
push
sbb
daa
jle
xchg
scas
out
lock
xor
lock
test
loope
cmp
mov
jecxz
ds
jl
out
repnz
call
test
and
xchg
push
movsb
cmpsb
ss
lret
or
push
sub
cmpsl
jecxz
mov
iret
cmpsl
ret
outsb
pop
sub
mov
lahf
adc
pop
xor
fcmove
int3
pushl
int
insl
std
in
mov
cmp
push
and
push
cs
jns
and
xchg
or
jno
jmp
sub
push
and
in
adc
cmpsb
xor
cmp
fcmovne
push
shlb
mov
inc
repz
fbstp
icebp
pop
xchg
jne
add
cmp
das
cmp
in
xor
jmp
out
push
mov
int3
xor
xchg
dec
cmc
sub
inc
xchg
mov
cmpsb
fiadds
test
and
shrl
push
xchg
xlat
mov
imul
mov
and
push
sbb
and
outsb
cmp
incb
cmpsl
or
pushf
loopne
mov
mov
jbe
mov
arpl
mov
call
jo
sub
mov
xor
and
mov
cmp
scas
test
mov
clc
test
clc
adc
xor
clc
mov
clc
es
subb
add
addr16
pop
adc
push
pushf
je
adc
adc
add
insb
add
addb
push
inc
repnz
sub
ss
call
mov
sub
mov
aad
movb
pop
addb
lock
or
cmp
jge
bound
push
sti
ljmp
lods
cs
xchg
loope
adc
jl
int
pop
rcl
scas
mov
movsb
hlt
inc
js
sub
mov
xor
imul
sahf
dec
and
mov
xor
arpl
shll
scas
jno
mov
je
jl
jb
dec
scas
mov
dec
addl
outsb
push
popa
sbb
adc
imul
jg
jnp
jo
sbb
ficoms
or
mov
xor
lods
inc
add
mov
out
divl
pop
xor
adc
xchg
xor
pop
xor
mov
add
mov
scas
xchg
jecxz
add
icebp
push
add
scas
add
xchg
cmc
jg
dec
negb
lock
mov
adc
dec
mov
test
dec
sub
sub
aam
xchg
jecxz
and
fiadds
ljmp
test
mov
ficompl
int
pop
xlat
lock
rcll
test
int
testl
xchg
push
subb
push
std
test
pop
rcll
push
sti
mov
inc
xchg
out
test
xchg
rcll
push
popf
mov
cld
ljmp
inc
test
out
adc
add
shl
fwait
push
jo
insb
adc
aas
sbb
lret
xor
or
arpl
shl
xchg
loope
fisubrl
insb
and
push
push
leave
pushf
sbbb
ret
mov
inc
aam
mov
iret
dec
xlat
fwait
popf
mov
add
imul
ret
and
hlt
lcall
int
in
je
pop
negb
or
loop
sahf
cmp
aam
lcall
push
xchg
xorl
add
pop
in
mov
xrelease
in
push
orl
mov
push
cmp
adc
or
and
cmc
subb
fistpll
push
cwtl
sahf
incl
test
loopne
subl
shrb
jp
mov
xchg
test
xor
mov
enter
jns
push
stos
push
cs
pushf
pop
out
inc
rcll
aaa
cltd
dec
xchg
das
sahf
aad
xchg
daa
dec
mov
loop
lcall
pop
xchg
sbb
mov
in
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
jmp
mov
and
setns
dec
xchg
dec
xchg
ja
out
mov
in
outsl
adc
mov
sub
adc
xchg
sub
cmpl
cs
pop
or
inc
xchg
lret
sbb
incl
xchg
imull
lods
rcrl
loop
inc
mov
icebp
sbb
filds
sbb
test
sahf
adc
jbe,pn
lret
lods
adc
ds
xor
xchg
mov
sbb
gs
enter
lea
xchg
and
sub
xchg
sahf
mov
cmpsl
lds
outsl
push
mov
xchg
dec
sbbb
data16
add
lmsw
add
hlt
aad
or
adc
std
mov
push
xor
call
std
mov
cmp
inc
xor
xchg
sub
xor
call
stos
clc
mov
rcr
jbe
bnd
jb
movsb
dec
sbbb
xchg
xchg
lahf
or
leave
loop
mov
pop
push
add
pop
in
sarb
jnp
shll
or
xchg
push
andb
sub
push
add
push
in
dec
or
mov
mov
inc
ja
and
dec
lock
push
inc
mov
rcrb
xlat
jmp
xchg
mov
shlb
subb
pushf
cmp
fiaddl
pusha
leave
cmp
sub
mov
pop
test
push
push
sbb
xor
jne
aaa
pop
iret
daa
fcomip
test
pushl
lret
or
lock
repz
push
lahf
ret
sub
cltd
lahf
aaa
adc
arpl
fdivr
or
jbe
fsubrs
dec
or
repnz
or
inc
xor
sbb
mov
push
xor
icebp
pop
sub
out
mov
ret
mov
imul
clc
inc
push
mov
xchg
sbb
roll
mov
iret
scas
iret
jge
repz
or
cmc
xor
in
std
xor
dec
mov
je
push
add
cmp
sbb
or
cmpb
xor
xor
psubb
xlat
xchg
gs
mov
sbb
xlat
sub
repnz
movsl
and
cltd
subl
sub
repz
inc
enter
sub
repz
mov
mov
dec
fidivrs
cli
out
shrl
jno
ja
mov
mov
fwait
jbe
daa
out
mov
jns
int
int3
inc
push
test
scas
leave
adc
xor
or
lods
pop
and
add
das
lret
push
push
sub
sbb
adc
sahf
dec
subl
icebp
push
sbb
cmpsl
call
scas
sbb
cmp
push
popf
push
xchg
lods
xor
sbb
jne
pop
pop
gs
incb
pop
cmp
or
xchg
aas
rcrl
mov
hlt
fcmovb
cmpsl
xor
shlb
pushl
test
cmp
rcrb
pusha
stos
pop
aam
pushf
and
repz
mov
jne
nop
or
sbb
xchg
out
icebp
xchg
mov
add
sbb
add
xchg
test
ret
sbb
jb
add
decl
xor
iret
into
inc
movsl
inc
addr16
xor
imul
add
sub
loopne
sub
inc
xor
pop
je
roll
mov
imul
in
push
push
mov
repnz
enter
dec
cmp
sub
es
mov
push
pminub
cmp
pop
cmp
arpl
pop
les
cmp
test
mov
or
fisubrs
bound
jecxz
insb
mov
outsl
cs
int
mov
xchg
mov
mov
sub
repnz
and
and
ss
in
dec
call
in
lds
jp
repz
sbb
pushf
ret
add
push
ficoml
and
rcll
cmp
int3
int
pop
push
add
iret
fwait
aaa
inc
inc
aam
mov
lods
xchg
das
sub
rcl
dec
aam
lahf
mov
mov
xlat
pop
mov
inc
fbld
mov
loopne
push
lret
imul
bound
ja
dec
jecxz
dec
sbb
sub
stos
lahf
fwait
lods
rep
pop
adc
or
pop
ja
test
fidivrl
inc
mov
clc
ja
sbbb
dec
out
les
xchg
cs
inc
lds
mov
arpl
test
nop
jb
popa
ss
enter
cld
lds
fsubrl
leave
int3
lret
in
sub
inc
idivb
or
sub
ss
rolb
aam
or
sarl
lods
mov
cmp
push
push
in
aaa
xor
xor
lret
dec
movhps
add
xchg
pop
loopne
negb
movsl
pop
es
jmp
mov
mov
inc
or
jnp
push
mov
fdivrs
add
mul
jle
adc
in
pop
push
dec
lahf
clc
in
jmp
inc
jbe
jbe
add
push
xchg
sahf
pop
add
dec
mov
icebp
add
ja
sbb
inc
std
insl
mov
mov
jle
inc
mov
decb
push
ret
in
rcrl
cmpl
es
test
cltd
or
mov
pusha
cltd
mull
adc
loopne
ret
dec
pop
xor
push
test
subb
cwtl
mov
iret
fiadds
pop
gs
aad
popl
push
jnp
aam
cmp
aam
mov
test
popf
pop
fs
sbb
push
dec
or
dec
mov
rol
test
out
mov
jmp
mov
sbb
stos
addb
dec
js
mov
roll
and
mov
andb
out
shll
and
lret
shrb
test
push
fildll
mov
push
xor
fldt
movsl
xchg
sbbb
movsb
ja
jp
mov
inc
aaa
xchg
lods
mov
lcall
mov
and
sub
mov
inc
mov
fildll
and
aas
das
add
mov
test
sbb
lods
je
adc
dec
and
jne
mov
mov
xchg
sub
sbb
lock
push
cld
cmp
cmp
dec
add
lds
mov
lret
or
push
pushl
call
sbb
clc
push
call
dec
cmp
xor
mov
loop
jp
lret
mov
mov
pop
jnp
popa
adcb
adc
add
les
push
pop
ja
insb
sbb
flds
dec
jno
push
lods
movsb
pushf
aaa
xor
enter
test
test
scas
fadd
push
inc
lret
push
popf
int3
adc
inc
mov
into
outsl
pop
xchg
sub
xorl
push
or
mov
in
mov
movsb
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
jmp
ret
fwait
mov
and
xor
mov
orl
jo
movsb
jb
cs
xor
jne
nop
mov
or
cld
fs
xchg
xlat
jmp
ljmp
jmp
push
ja
push
out
fcoms
flds
inc
cmp
adc
pop
mov
jne
jge
aaa
and
adc
pop
imul
push
mov
imul
add
pop
pop
adc
not
cmpsl
loope
mov
jnp
insl
sub
loop
sub
and
stos
bound
ret
aad
iret
mov
mov
in
imul
mov
fisttpl
or
push
and
or
mov
fisttpll
sub
xor
mov
lds
push
mov
xchg
lods
cmpsl
mov
jecxz
or
jne
mov
cmc
and
stos
lock
stos
in
aaa
push
mov
add
mov
lahf
loopne
mov
dec
sub
cmp
imul
daa
dec
dec
and
mov
pop
loope
aam
sub
inc
mov
xor
inc
bound
jmp
fwait
pop
push
cmp
inc
lret
mov
pusha
bound
pop
enter
and
add
cs
and
fimull
idivl
gs
aam
out
and
xor
ss
xchg
pop
mov
test
lea
push
loope
mov
cmc
pop
fdivl
lds
and
inc
aas
xchg
lds
pop
test
cmpsb
data16
jnp
sub
stos
rcrb
in
mov
jecxz
test
inc
xor
sbb
jge
je
je
test
fisubl
data16
mov
pop
jae
cmpb
stos
jae
sbb
mov
xor
leave
cmp
popa
ret
int
dec
ds
pop
hlt
xor
dec
cltd
cmc
arpl
push
dec
xchg
out
or
faddp
mov
push
loop
or
std
push
jecxz
or
prefetcht1
pop
clc
dec
out
add
bswap
ret
dec
test
mov
es
mov
jbe
sub
int
cli
inc
stos
xor
data16
lret
scas
mov
xchg
fmul
jo
out
pushf
push
or
push
add
jno
insl
aas
lahf
movsl
mov
pop
push
das
and
dec
arpl
push
dec
push
dec
sub
or
pushf
jecxz
out
imul
push
cltd
in
or
push
sbb
cwtl
mov
push
shlb
lock
arpl
fstl
lahf
mov
fdivl
push
jnp
lcall
outsl
je
add
mull
dec
addr16
repz
ret
push
xor
jmp
subl
lods
fwait
mov
int3
push
jb
mov
cmpsl
loop
sbb
dec
ja
movsb
xlat
pop
es
loop
xchg
mov
insl
fildll
mov
sbb
or
ret
ret
jo
inc
shlb
in
jp
stc
cltd
stos
xchg
lea
sahf
xor
insb
cmp
icebp
sbb
mov
inc
icebp
ljmp
dec
adc
lahf
or
dec
mov
push
sbbl
ja
jne
dec
popf
fwait
or
add
dec
adc
outsl
int
stos
jne
icebp
and
mov
cmp
movb
and
fcomi
js
arpl
sub
cmp
mov
fldt
add
orl
push
scas
dec
push
pop
lods
push
loope
xchg
cwtl
mov
fisttpl
jl
pop
push
rolb
int3
mov
dec
jae
sub
int
into
cltd
cld
sbb
inc
nop
push
int3
call
in
xlat
outsb
inc
pop
inc
add
push
and
daa
movsl
ljmp
and
shlb
xchg
aam
fdivl
lret
mov
ds
mov
pop
outsb
add
rclb
out
movsb
pop
pop
lds
outsl
cmp
add
shrl
mov
outsl
ljmp
jle
jno
or
push
rorl
outsb
push
adcl
lret
insl
in
out
or
sbb
daa
dec
decb
in
lcall
inc
mov
mov
jge
jb
pusha
outsb
loop
or
jmp
lahf
mov
movsl
mov
les
ds
shll
fistpl
cwtl
call
pop
dec
and
cs
rcrl
in
adc
sahf
adc
daa
dec
lret
pop
add
mov
nop
pop
fdivrs
stos
loop
adc
cltd
subb
ret
lret
lahf
nop
fildll
inc
jae
push
loope
mov
inc
das
add
jmp
dec
or
jnp
loop
call
mov
sti
lea
and
mov
mov
stos
pop
repnz
movsl
lds
push
mov
subb
xor
push
popa
repnz
pop
mov
mov
push
ffreep
push
nop
jne
pop
ljmp
mov
push
xchg
or
sbb
pop
mov
shll
in
mov
lods
fsubrp
add
lcall
xchg
mov
lahf
aad
sbb
and
adc
nop
and
pop
stos
push
cmpsb
sbb
int3
faddl
sbb
rclb
fldt
cli
pop
fnstenv
popf
cmp
sub
bound
scas
jns
orb
sar
jmp
adc
and
dec
mov
nop
in
fs
xchg
or
test
popa
out
mov
jns
icebp
mov
push
push
or
jl
int3
jae
xchg
inc
rclb
das
or
sub
and
or
add
js
ficoml
mov
xchg
mov
aaa
xchg
xchg
daa
cmpb
jno
inc
xchg
or
sti
jl
xor
ret
popf
xchg
xor
daa
pop
repz
ret
jmp
inc
lret
add
jp
leave
imul
adc
outsb
add
stos
das
jb
enter
lahf
and
in
xor
add
push
data16
jecxz
imul
outsb
xchg
mov
xchg
dec
es
push
movsl
cli
insb
push
repz
mov
or
or
xor
jge
dec
sub
pop
sbb
jg,pt
repz
imul
test
popa
daa
out
xor
out
mov
jmp
adc
xor
sbb
push
popa
out
jp
xorb
jmp
mov
test
jl
jecxz
inc
add
push
sub
pop
adc
cmp
test
add
xor
insl
aaa
aad
jae
out
arpl
jg
xor
mov
cmp
cli
ds
cmp
xchg
imul
test
xchg
fstps
sti
add
pop
lahf
mov
adc
repnz
mov
xchg
mov
mov
or
mov
mov
jg
ja
mov
clc
inc
add
stos
or
hlt
or
addr16
sub
movsl
pop
dec
dec
xchg
add
sub
jg
mov
mov
mov
jmp
aam
inc
test
addr16
add
out
nop
sti
xchg
ja
or
jns
rclb
mov
mov
or
inc
adc
jnp
bound
fstps
out
fisttps
mov
xchg
jg
cli
xor
das
lahf
shr
xor
popa
xor
movd
jge
push
xor
sub
adc
outsb
pop
insb
cld
cmp
shll
or
nop
dec
repz
sar
scas
bnd
movsl
push
push
inc
movlhps
repz
or
mov
or
cmpsl
mov
ds
xorb
adc
bound
adc
in
mov
mov
sbb
mov
dec
xor
inc
mov
or
stos
rcrl
lods
dec
nop
movsb
xor
or
sbb
xor
or
xchg
lock
sub
inc
fbld
pop
andl
or
xchg
outsb
adc
xor
mov
add
fldcw
xchg
sub
cmp
fstpl
push
cmovl
dec
pop
loop
ret
pop
aam
into
jge
pop
sbb
sub
push
jl
fdivl
sarb
inc
xchg
mov
adcl
sub
or
cli
jle
aad
jmp
add
mov
push
push
sbb
cmpsb
cmp
shrb
test
scas
xchg
xlat
push
xchg
aas
jg
iret
sub
xchg
filds
pushl
in
insl
xor
addr16
out
nop
inc
push
add
jbe
or
bound
mov
add
jecxz
je
cmp
or
inc
jns
mov
mov
xlat
enter
mov
sub
jno
test
sbb
cwtl
test
out
les
inc
or
stos
xchg
ficomps
push
dec
cmpsb
pusha
sub
loop
hlt
scas
add
and
and
lahf
test
sub
lcall
push
inc
int
mov
lods
in
clc
jo
insl
aaa
fistpl
xlat
or
sarl
incl
shlb
xchg
call
and
subl
sar
inc
jl
xor
cmp
sub
lock
imul
dec
outsl
sbb
xchg
test
add
cwtl
dec
adc
or
dec
push
xchg
push
lret
xor
loope
cs
mov
mov
pop
or
adc
lret
push
inc
pop
mov
test
cltd
sub
adc
pop
xor
cs
std
xor
push
roll
dec
repnz
inc
sti
pop
lods
loop
mov
jle
dec
jmp
xor
ret
jle
xchg
cmp
loopne
push
sbb
mov
adc
jle
lret
out
inc
clc
fwait
subb
sub
leave
push
int3
fprem1
jns
repz
sti
push
scas
push
mov
xor
shll
add
in
dec
jmp
inc
xchg
or
push
xchg
add
push
pop
loop
inc
enter
or
or
test
repz
fs
out
and
or
mov
movsb
test
sti
imul
and
add
stos
stc
jmp
xchg
mov
push
mulb
stos
cmpsl
inc
xchg
pushf
or
jb
mov
sub
dec
je
pop
popa
mov
addr16
lcall
sbb
and
insb
icebp
xchg
rcl
imul
movsb
add
pop
outsl
mov
jge
sub
jae
cs
push
xor
push
mov
mov
jo
dec
je
pop
mov
sarb
pop
pop
js
fs
or
adc
push
cmp
mov
adc
out
add
xor
mov
cli
adc
mov
pop
outsl
inc
ljmp
push
xor
mov
stos
dec
jbe
mov
mov
fwait
cli
adc
cmp
in
push
adc
clc
xchg
and
mov
dec
sahf
xchg
sbb
and
inc
jle
mov
cltd
cs
mov
jmp
dec
dec
xchg
pushf
scas
pop
sub
ds
mov
daa
xlat
push
fnstcw
sbb
and
aad
jae
in
mov
ja
das
in
mov
in
dec
mov
jno
fstpl
out
inc
call
inc
mov
sahf
xor
or
add
mov
xchg
xor
add
xor
daa
in
icebp
xor
mov
or
inc
inc
and
xchg
ret
stos
shll
repz
add
lahf
fists
ljmp
shrb
in
inc
pop
xchg
jge
movsl
mov
sbb
pop
and
pop
sbb
lods
cmp
pop
add
fdivrp
jp
push
or
mov
ja
loope
sbb
add
adc
lret
push
cld
enter
inc
push
leave
out
mov
inc
mov
cmp
lods
iret
ds
fstl
xchg
jl
add
sub
mov
add
dec
xchg
shl
and
sbb
pop
cmpsl
int3
and
sub
sbb
inc
out
pop
fstcw
xchg
test
xchg
jnp
xchg
lcall
js
inc
mov
add
cmp
in
add
daa
dec
arpl
sub
jmp
jge
push
adc
push
adc
clc
xchg
sub
push
sub
push
scas
test
test
data16
in
pushl
inc
movsb
adc
mov
sbb
mov
push
add
and
inc
dec
clc
push
pop
iret
jae
in
mov
inc
out
das
pop
mov
ds
xchg
push
jmp
push
mov
bound
xor
insl
xorl
or
lret
test
in
js
aas
movl
jle
js
or
lea
inc
jmp
fldcw
aam
nop
ss
mov
pop
and
cmp
xchg
jno
ret
sub
lret
mov
lret
sub
push
xchg
out
or
ds
cmpb
dec
cmpl
clc
aad
lcall
adc
out
jnp
push
push
dec
or
inc
dec
lods
out
pop
insl
loope
push
sub
ret
loope
add
mov
clc
daa
test
imul
inc
shrb
lret
adc
inc
js
xor
cmc
cmpsl
icebp
or
add
add
mov
mov
pop
jg
ja
repnz
pop
sbb
sub
sub
out
lahf
adc
fadds
jns
arpl
sub
inc
and
jg
dec
icebp
sbb
lea
push
fmull
adc
mov
shll
adc
insl
xchg
xorl
jns
cmpsl
int
loop
pop
push
repz
xchg
jl
ljmp
fcompl
imul
or
insb
ljmp
pushf
testb
sub
insl
hlt
movsb
addb
iret
int3
jnp
enter
ftst
and
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
jmp
adc
cmp
ret
aam
mov
pop
ja
call
out
lods
loopne,pn
and
push
clc
imul
out
cs
add
mov
arpl
and
adc
jne
leave
imul
daa
push
mov
xchg
sub
test
in
push
mov
ds
mov
sub
push
xchg
out
lods
imul
xor
hlt
adc
push
repnz
pop
insb
cmc
mov
cltd
adc
hlt
mov
test
sbb
mov
push
inc
pushl
shl
loopne
pop
test
roll
lea
mov
stos
aas
inc
rcr
xchg
insb
xchg
in
call
jno
or
dec
icebp
shlb
jno
xchg
out
jne
call
lods
int3
mov
mov
rorb
insl
popf
and
lea
daa
inc
push
roll
loop
or
inc
inc
mov
push
cmp
mov
out
jmp
pop
and
pop
and
or
mov
inc
and
pop
xor
sub
jbe
test
sbb
adc
add
push
and
cltd
test
popf
xchg
sub
loope
fcomps
ja
cltd
test
xchg
xor
and
mov
sbb
xor
xor
shrl
sbb
sbb
orb
fs
cld
and
push
jb
divl
pop
fs
push
add
aas
mov
mov
lock
shl
inc
mov
pusha
pop
enter
sbb
loope
mov
cmpsb
xor
andl
mov
xchg
mov
es
enter
cmp
jbe
cmp
leave
pop
data16
adc
sbb
mov
mov
sub
jnp
fdivrl
sbb
push
lret
je
cwtl
dec
mov
jge
sub
icebp
jb
add
js
fnstsw
mov
ror
dec
cmp
jp
xor
push
mov
sub
repnz
aam
and
imul
and
out
push
out
xchg
ret
frstor
inc
inc
jne
xor
insl
cmc
je
pop
push
jo
lret
pop
fsub
ja
ret
sub
mov
jae
ss
sbb
jl
es
inc
and
inc
sbb
inc
fldt
pop
and
mov
mov
fs
rcrl
js
pop
out
jnp
stc
dec
push
cli
ror
mov
or
jne
push
pop
push
loopne
ret
fwait
sub
inc
or
xchg
sti
mov
add
sub
rcll
sbb
rcr
lahf
lods
rcll
pop
sub
jge
inc
mov
test
push
out
jns
cwtl
in
mov
cld
lcall
les
mov
cmp
mov
mov
nop
jmp
or
ficoms
leave
icebp
mov
loopne
adc
repnz
xlat
mov
adc
enter
add
mov
mov
aas
jno
cltd
or
out
pushf
inc
xchg
pop
inc
sub
test
or
push
jl
test
jecxz
loope
add
or
in
jo
inc
mov
and
in
jnp
push
sarl
out
aas
cmc
and
insl
mov
jno
jmp
out
insl
mov
mov
jno
sarb
sbb
jle
ret
push
xor
fs
and
outsb
enter
sbb
aaa
or
aam
nop
cmp
loope
dec
in
je
and
cmc
or
es
pop
addr16
and
lahf
shr
push
rcrl
inc
jbe
ja
mov
mov
inc
xchg
out
mov
adc
xor
lds
pop
icebp
int
jecxz
mov
daa
pop
decl
iret
push
inc
pop
mov
lret
push
rolb
sub
inc
cmovge
test
aaa
mov
pop
das
pop
iret
inc
pop
push
fs
push
sub
xchg
roll
add
jp
cmpsb
scas
mov
push
push
and
shr
dec
test
adc
push
sbb
pop
ss
and
inc
add
jp
int
mov
mov
stos
fadds
pusha
jo
jl
rcr
add
xor
mov
out
sbbb
push
xchg
mov
enter
mov
dec
pop
pop
loope
jnp
xchg
nop
lea
ret
imul
mov
xrelease
daa
mov
mov
rorb
shl
xchg
fimull
jge
inc
xchg
cld
insl
je
xchg
js
ret
mov
push
push
inc
inc
daa
ds
mov
add
mov
outsl
adc
jns
movsb
sbb
pop
sahf
ds
push
or
fs
push
in
std
add
out
clc
inc
cs
push
sub
jno
and
loopne
ret
cmc
in
aas
mov
xor
bound
fs
pop
sub
jmp
and
pop
push
xor
pslld
sbb
into
pop
test
inc
shlb
sbb
or
adc
push
ljmp
aad
scas
mov
push
inc
mov
std
inc
mov
les
clc
xchg
and
pop
sahf
jmp
mov
std
push
fildl
push
pop
mov
add
aas
xor
and
gs
jbe
or
and
movsl
call
cwtl
orps
pop
dec
add
das
test
ret
ret
mov
adc
lahf
push
scas
stc
fwait
into
mov
mov
inc
and
sbb
xor
push
mov
scas
push
xor
sbb
adc
movb
add
pop
add
jg
sbb
call
mov
or
mov
je
imul
mov
pusha
pop
arpl
adc
lods
shlb
cmp
inc
out
mov
cmovle
jg
stos
rol
enter
ja
lods
shl
dec
mov
fnstcw
xchg
adc
jmp
icebp
rcr
xchg
aam
and
pop
xor
and
aas
xor
xor
enter
cwtl
rolb
shll
xchg
aam
ljmp
les
inc
mov
sub
pop
jmp
pop
aas
mov
jno
pop
jnp
loop
cmpb
adc
popf
jl
lahf
sbb
stc
mov
or
xchg
mov
xorl
jo
dec
lock
xchg
bound
mov
xchg
cwtl
jmp
push
pop
fisubs
add
jnp
mov
push
ljmp
fdiv
in
shlb
dec
jne
fwait
lock
xor
out
jle
push
push
sub
jno
jmp
mov
insb
icebp
sbb
jns
ds
add
jecxz
pop
daa
dec
fiadds
xor
ficompl
lock
and
mov
inc
adc
mov
jle
in
inc
xchg
popa
jmp
xchg
xor
mov
fwait
jae
or
lock
ja
or
push
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
jmp
sbb
and
mov
mov
xchg
outsb
mov
arpl
leave
lahf
mov
jmp
dec
mov
xor
ret
mov
mov
or
or
mov
imull
sbb
add
inc
dec
mov
and
lods
and
or
cmpsb
mov
xor
jns
scas
test
inc
aaa
insb
aas
test
sbb
insb
mov
les
mov
lock
pop
imul
add
mov
loop
repz
pushf
dec
xchg
lea
popa
add
xor
lea
ret
cmp
mov
or
sub
cmp
adcb
push
inc
mov
inc
xchg
pop
movsl
lcall
mov
cmpsb
dec
or
ret
and
add
inc
je
jmp
addr16
sbb
sbb
test
or
mov
test
fadds
in
cwtl
std
fimull
pop
jnp
arpl
mov
add
insl
xorb
add
jno
cmp
stos
add
testl
lret
movsl
cmp
jbe
roll
mov
or
pop
decb
inc
enter
icebp
mov
xor
or
cmpb
out
jno
add
or
call
sbb
ret
xorb
ljmp
and
int3
lret
xchg
cli
fmuls
je
jmp
or
mov
aad
mov
push
ss
sbb
loope
adc
sub
mov
pop
fcmovne
aad
arpl
dec
repnz
push
mov
fiadds
push
lock
and
gs
mov
das
adc
push
push
and
pop
mov
xor
xor
popa
popf
cmpsb
lret
or
repz
add
adc
inc
and
mov
add
push
jns
cmp
cmc
mov
cli
mov
dec
cs
gs
pusha
cmp
add
dec
les
dec
call
pushf
cmpsl
jle
pop
ds
mov
repnz
adc
lahf
insl
out
mov
shrl
pop
bnd
pop
divl
lods
dec
jno
stos
in
jb
inc
cmc
mov
xor
in
es
adc
daa
pop
scas
push
push
dec
stos
pop
jge
iret
adc
cmp
xor
inc
rclb
cmp
repnz
stc
addl
xor
add
roll
adc
loope
cmp
pop
popa
je
add
cmp
rorl
sbb
ds
std
jecxz,pt
push
xor
add
popf
pop
sbb
bound
cmp
in
sbb
shrl
stc
ss
in
scas
push
mov
in
add
lcall
sub
add
lock
cmpsb
fcompl
icebp
adc
mov
xor
xchg
lret
xchg
jbe
inc
shll
int
xlat
and
mov
mov
cmc
xchg
inc
xor
mov
cs
xchg
cmp
and
ljmp
lahf
sti
adc
xor
insl
pop
enter
dec
push
fcmove
mov
vcvttps2dq
cmpsb
xor
stos
mov
add
inc
mov
inc
xor
pop
aad
dec
gs
scas
frstor
dec
mov
out
in
jge
jg,pn
cmc
xchg
bound
xor
out
popf
mov
dec
pop
cmpsb
push
inc
jmp
add
xor
sbb
dec
xor
fadd
sub
iret
cmp
cwtl
adc
push
nop
out
add
loop
sub
inc
jbe
cmc
sub
xchg
and
cmpsb
push
jae
scas
or
sbb
in
std
fisttps
xor
jns
xchg
or
rcl
jp
fwait
xchg
and
adc
scas
adc
xchg
lods
pop
dec
clc
sbb
test
and
mov
adc
push
adc
cmp
push
mov
or
lcall
pop
imul
jecxz,pt
data16
sahf
xchg
sbb
and
and
out
push
mov
dec
cwtl
sbb
mov
xor
push
lods
imul
sahf
dec
pop
movsb
f2xm1
jno
adc
or
stc
and
dec
jno
les
imul
loop
fbld
dec
mov
mov
outsb
nop
bound
sbb
cwtl
test
les
div
or
nop
adc
je
aaa
andl
inc
push
or
xor
psubusw
aam
xor
pushw
push
xor
ja
pop
mov
add
or
cmpsl
fstpt
idivb
pop
andb
insl
out
clc
insb
pop
pop
jmp
clc
pop
xor
mov
pop
lahf
inc
repnz
aad
ja
fidivl
arpl
dec
fs
inc
jle
das
aad
stc
pop
push
mov
push
adc
rclb
outsb
mov
lock
and
into
mov
dec
inc
ret
cs
pop
and
hlt
lds
mov
aas
jg
sub
lcall
sub
xchg
movsb
call
lcall
or
outsb
shr
shrl
cmp
out
cmc
xor
mov
adc
and
stc
adc
mov
mov
andl
lea
loopnew
fwait
out
cmp
stos
std
lret
push
sar
inc
inc
aam
lahf
ss
jge
cmp
cmpsl
fidivrs
mov
lock
and
test
aaa
in
cmp
sub
push
xchg
subl
add
mov
lea
mov
cwtl
jne
ds
cmpsb
les
mov
and
jbe
xchg
mov
mov
cmc
scas
out
adc
mov
pop
push
mov
shrb
inc
leave
pop
inc
jno
rcrb
add
jmp
in
mov
int3
dec
sub
dec
dec
fs
fbld
push
adc
cli
dec
cmpsl
out
mov
stc
dec
stc
cld
pcmpeqd
add
clc
add
mov
test
cltd
enter
pushf
mov
js
lret
xchg
xor
xchg
dec
cvtps2pi
or
push
js
daa
shlb
push
std
xorb
nop
and
arpl
bound
in
repnz
loope
push
or
jnp
inc
mov
sub
dec
mov
xchg
cmp
into
je
sub
push
xor
pop
das
add
sub
fnsave
push
cmp
scas
popa
stos
fs
icebp
cmp
outsb
jg
pop
rcl
cli
or
fdivrl
push
cmp
pop
add
icebp
sub
cmpsl
clc
lret
cmpsb
mov
mov
icebp
repnz
lcall
test
sbb
mov
push
mov
adc
xchg
je
mov
xchg
mov
shll
pop
mov
ret
jle
loope
or
lahf
lods
cmp
lds
xchg
test
daa
loopne
sub
or
nop
sub
push
out
add
add
shlb
rol
push
xor
mov
mov
mov
jmp
sti
test
sbbl
or
ja
lea
mov
fisubrs
adc
adcl
ja
nop
sar
dec
adc
enter
out
lahf
popf
outsl
jp
fsubp
xchg
mov
clc
fmuls
xchg
lret
mov
xor
sub
jne,pn
mov
std
jg
popa
fiaddl
dec
into
ret
lds
into
pusha
test
cwtl
xchg
push
in
push
mov
push
pop
xchg
cld
int3
add
push
pop
mov
btr
ret
add
mov
ljmp
repnz
mov
and
jecxz
in
mov
mov
inc
in
pop
and
mov
dec
add
mov
xchg
nop
cltd
or
mov
roll
ss
jns
in
xor
jb
adc
fwait
push
add
sub
sbb
inc
xchg
test
push
jne
push
loop
mov
pop
jge
cs
sar
fcmove
in
or
mov
dec
pop
dec
sbb
or
mov
hlt
pop
movsb
or
mov
lahf
in
int3
outsb
fs
add
fldl
jmp
cmpsb
mov
das
push
cwtl
jp
popa
jle
mov
xchg
dec
js
adc
orb
cmp
or
cmp
loop
idivl
loopnew
jne
sbb
sub
push
lea
mov
xor
push
loopne
loop
dec
jg
and
sahf
and
addr16
rorb
jne
pusha
fldt
xor
data16
insb
scas
in
pop
out
and
negb
sbb
or
imul
mov
or
cmp
negl
sub
test
imul
pop
sub
fmull
loopne
dec
jo
sub
inc
loop
jno
repz
nop
jmp
xchg
jle
and
and
cwtl
mov
xchg
aaa
jp
mov
fs
xor
jle
pop
mov
pop
inc
xchg
lcall
mov
scas
dec
loop
ds
xor
adc
lea
jnp
push
mov
and
mov
xchg
out
jl
mov
jmp
ffreep
data16
xorb
mov
xor
dec
aas
ja
push
jg
fistps
aas
jbe
sub
push
fcmovne
xchg
orb
xor
shl
sbb
ss
and
rcrl
sub
aas
or
mov
subb
jg
cmc
jmp
jecxz
adcl
mov
fidivl
add
sbb
jb
push
push
pop
adc
lock
jmp
adc
repz
iret
fdivrs
lcall
dec
mov
lcall
rcrl
mov
sbb
sub
fadds
iret
add
daa
cmpl
add
rolb
in
cmpsl
jbe
push
push
xor
or
fidivl
mov
push
cmp
add
add
icebp
stc
jge
loope
inc
dec
jle
mov
inc
mov
and
pop
daa
and
xchg
push
cmc
stos
fs
cmp
jne
pop
rol
ror
mov
and
in
or
cmc
xchg
repz
push
fbld
mov
inc
pop
xor
lods
out
push
pop
pop
mov
mov
inc
hlt
addr16
cld
mov
js
and
cs
fstpl
fnsave
add
sub
jb
inc
daa
push
mov
and
out
jecxz
mov
cmp
hlt
cmc
xchg
sub
repnz
leave
int
int3
mov
add
mov
cmp
notb
jnp
xor
adc
mov
jne
or
inc
pop
or
lds
mov
cmp
pop
push
add
hlt
stos
mov
ds
pop
enter
xor
and
jo
xchg
push
adc
adc
pop
jmp
jns
lcall
repz
test
and
cmp
push
and
mov
xchg
icebp
sbb
mov
hlt
dec
mov
adc
arpl
inc
movsb
inc
movsl
sub
xorb
push
jg
sti
mov
fdivl
hlt
push
jnp
or
clc
or
xchg
fs
mov
mov
hlt
divl
scas
daa
mov
sbb
cmp
xchg
scas
xor
cmp
push
inc
outsl
dec
add
or
mov
mov
test
jp
pop
lock
jp
mov
mull
jl
add
add
mov
cmp
icebp
cmp
daa
aas
scas
xor
mov
inc
inc
into
pop
mov
pop
or
inc
jmp
xchg
jae
sbb
adc
push
or
sbb
adc
cmp
fidivrs
test
sbb
sub
inc
pushf
mov
scas
into
into
mov
adc
stc
jmp
pop
push
inc
movsb
push
cs
imul
clc
rorl
outsl
ds
jge
adc
mov
push
sub
pop
roll
and
jle
test
in
mov
pop
xchg
es
mov
xchg
xchg
jecxz
mov
call
cmc
insl
rolb
stc
push
ficomps
movsl
lea
lods
pushf
add
mov
jecxz
js
loopew
loopne
push
xchg
in
je
jbe
in
dec
cltd
cmpsb
push
inc
outsb
outsb
bound
dec
cmp
gs
cmp
add
adc
ljmp
fidivs
gs
pop
aas
cmovb
or
cmp
add
shl
loop
and
cmp
lret
push
push
aam
cmpb
clc
jno
ffreep
mov
cld
pusha
sbb
addr16
imul
jno
mov
lock
stos
scas
je
sti
outsl
je
cmp
mov
fs
leave
lret
xchg
lock
or
sbb
stc
in
dec
pusha
cmp
pop
mov
jle
lea
ss
jb
insb
sti
repz
addl
inc
clc
xchg
rcll
shlb
nop
repz
push
inc
roll
fbld
mov
fsubl
fisubs
mov
push
loop
inc
inc
movsb
int
push
arpl
or
stos
xchg
xchg
mov
or
stos
in
push
adc
jnp
xor
mov
pop
push
dec
pop
sbb
sbb
cld
inc
dec
inc
stc
insb
add
dec
bound
mov
push
inc
sti
lods
mov
sbb
pushf
ret
pop
cli
lock
jl
data16
outsl
stc
cmpsb
loop
daa
adc
in
test
stc
sbb
pop
andl
xor
adc
cmp
mov
inc
ss
add
and
xor
aam
sub
lahf
mov
outsl
jns
shl
rolb
repz
fisubrl
ret
inc
xor
jge
test
fcoml
inc
lahf
push
jg
fcoml
cld
stos
or
and
xor
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
jmp
nop
loope
pop
dec
gs
int
xlat
sub
adc
ja
adc
scas
int3
cmp
insl
jb
fiadds
or
xchg
fwait
cmpsb
mov
ret
push
jle
jae
mov
jno
sbb
dec
pop
out
fbld
xor
mov
std
jg
ficoml
out
ja
fldenv
sahf
adc
sbb
jo
xchg
mov
icebp
dec
pop
inc
xor
sub
in
fmul
inc
lods
inc
and
and
mov
fwait
xchg
adc
scas
mov
add
stc
xchg
jns
jmp
mov
dec
clc
or
pop
pop
fistpl
roll
xchg
jge
adc
lods
sbb
push
cs
je
pop
sbb
lahf
es
rol
push
or
js
stos
ljmp
testb
mov
mov
gs
rclb
push
push
hlt
in
and
jecxz
xor
pusha
clc
push
push
ficoml
addr16
mov
pop
mov
cltd
fs
add
xchg
aam
nop
rcll
cmp
mov
stc
mov
xchg
popa
inc
xchg
ret
fadd
xchg
adc
sub
fisttps
adc
mov
xchg
pop
rclb
inc
scas
cmp
cmp
repz
mov
lock
and
movsb
push
inc
loopne
or
inc
loope
or
stos
in
imul
imul
sub
loopne
jb
push
repz
in
stos
lahf
repnz
mov
lods
adc
insb
push
mov
push
test
jns
or
in
in
rcl
push
mov
pop
dec
cmp
xchg
js
lds
jg
std
lods
out
cmpxchg
jp
clc
jne
fimuls
mov
outsb
or
scas
out
cmp
rcr
lods
stos
aam
dec
jns
dec
pop
lahf
hlt
adc
pmaxsw
stc
in
popa
cmp
shr
jmp
xor
incl
shl
mov
pop
xchg
jne,pt
xor
mov
scas
jp
aas
sbb
movsb
orb
pop
das
les
xor
cmp
dec
jns
sbb
cmp
sbb
mov
imul
hlt
ljmp
movsl
jmp
pop
in
push
gs
mov
add
mov
pushf
ja
push
divb
inc
xor
aas
adc
adc
dec
in
sti
cmp
leave
fstpl
call
arpl
in
repz
aaa
fs
mov
pop
in
in
push
or
out
add
push
add
pop
roll
cmp
stos
in
jge
ja
js
fdivs
mull
scas
mov
jl
out
add
jmp
es
jp
xchg
insb
sbb
push
jnp
test
and
shrl
sbb
fld
jle
and
fucomp
jl
xorb
fsubl
cmp
rcrl
sub
fldcw
pushf
pop
repz
test
andl
xchg
pop
dec
dec
cmp
lds
jg
xchg
iret
repz
push
pop
lods
stc
mov
or
outsb
fwait
jle
jp
push
lahf
cmp
adc
xchg
jns
cs
into
int
dec
enter
inc
push
sub
testl
xor
add
out
cmp
mov
insb
bound
mov
jo
add
les
ror
pop
xchg
mov
sbb
aad
jmp
je
loop
nop
sbb
jae
xlat
scas
outsb
cmc
xchg
aad
xor
push
mov
icebp
mov
dec
mov
cltd
adc
mov
dec
into
sub
mov
ljmp
mov
push
mov
or
ja
js
dec
lcall
push
inc
mov
movsl
mov
mov
or
mov
jecxz
push
test
mov
mov
fdivrs
push
stc
out
rcr
xchg
rolb
lods
cli
mov
enter
dec
rcll
sub
lea
aad
pushf
insl
test
and
ret
push
jle
insb
in
fucom
hlt
cmp
enter
or
fxtract
ds
sub
call
insb
fwait
xchg
ret
les
leave
pusha
cmp
pop
add
and
xchg
mov
sahf
mov
test
scas
add
add
das
xor
cs
cmp
xchg
dec
jg
call
mov
in
in
test
add
pushf
push
inc
add
xor
jecxz
cmp
cmp
frstor
push
mov
aas
mov
ret
adc
cli
mov
jno
push
les
and
jne
testb
jo
inc
gs
mov
fwait
iret
sbb
or
mov
mov
popf
push
sub
mov
cld
dec
push
stos
aas
inc
cmp
aad
sub
pop
popa
jo
gs
mov
mov
aas
mov
sbb
adc
mov
clc
pop
jbe
fbld
fcmove
in
loopne
mov
stos
stos
adc
lods
xor
daa
xchg
and
fildll
mov
push
dec
push
jo
pop
jb
lahf
rcll
mov
cmp
das
test
mov
bound
andl
adc
add
fdivp
ds
pop
push
add
jmp
mov
loopne
rcrl
adcb
cmpsb
mov
adc
push
add
pop
mov
adc
and
insb
inc
jp
fcoms
sbbl
in
pop
mov
push
push
push
int
movsl
xchg
push
and
aaa
dec
pop
into
inc
mov
scas
jmp
clc
pop
xor
cmc
xor
idivl
sub
sahf
add
mov
icebp
loope
lret
push
adc
mov
adc
insb
bound
xor
mov
dec
xchg
je
cmp
cs
testb
push
cmp
push
push
adc
pop
lcall
and
scas
popa
sbb
mov
lea
stos
xchg
mov
sbb
and
dec
in
loop
stos
mov
ds
push
ss
inc
xor
es
inc
inc
xchg
inc
dec
cs
stos
cwtl
lret
push
in
je
popa
dec
mov
inc
pop
xchg
sbb
in
push
or
and
xchg
pop
dec
bound
iret
inc
aam
sbb
cmpsl
dec
cmp
cmp
push
rolb
pusha
imul
pop
test
call
inc
pop
cmp
lret
sbb
sub
cwtl
fsubr
jae
pop
lds
iret
mov
adc
or
adc
mov
push
fcomi
pop
je
xor
les
aas
into
push
int
in
cwtl
ljmp
cwtl
pop
mov
pusha
ss
adc
std
pop
jmp
ja
ja
gs
fwait
sbb
fs
aam
inc
int
int3
aaa
mov
sub
push
cmp
mov
xor
and
into
das
xchg
add
cs
fldenv
scas
push
sbb
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
jmp
dec
loope
lret
sbb
or
mov
adc
comiss
leave
fdivrl
adc
xor
jo
std
shll
pop
mov
jae
jge
in
jl
fdivrs
hlt
lds
out
cli
loope
cmpsb
orb
push
pop
or
jne
and
loop
mov
jne
dec
loop
pop
lcall
movsb
pop
fs
inc
ret
popa
or
jecxz
lret
xchg
or
push
cmpsb
push
adcl
mov
mov
fstps
add
add
cmpl
js
xlat
pop
sbb
xchg
add
cld
sahf
nop
and
ds
loopne
jmp
jecxz
out
aaa
es
sti
or
pop
fcomps
pop
add
fsubrs
push
repnz
scas
rol
push
stos
cmp
pop
aas
imul
add
arpl
push
adc
pop
lds
cmp
clc
mov
mov
push
fs
push
jb
mov
imul
outsl
mov
xor
popf
hlt
ja
sbb
cltd
jl
data16
mov
pop
and
sub
cmp
mov
mov
or
ljmp
add
test
xlat
in
das
dec
into
add
cmpsb
and
rol
daa
bound
jmp
repnz
jecxz
inc
xchg
fcmovne
std
adcl
dec
mov
into
push
xchg
xor
or
mov
out
aam
or
adc
adc
pusha
mov
push
xchg
das
sub
jne
je
les
xor
push
outsb
xor
add
add
js
and
pop
or
push
out
adc
lea
int3
orl
mov
testl
mov
pop
rcr
push
cltd
jnp
dec
aaa
leave
cmp
test
pop
aaa
pop
pop
aam
push
nop
mov
mov
loopne
pop
adc
pop
push
and
notl
test
push
int3
fdivrl
adc
repnz
adc
fstps
rcrl
inc
jno
ret
sbb
enter
inc
dec
ja
mov
test
pop
cmp
mov
mov
jne
into
fidivs
repnz
adc
mov
lahf
jns
notb
pop
rol
jle
imul
xchg
sahf
jne
leave
cmp
sbb
scas
mov
call
and
cmpsb
ret
jp
mov
stos
rclb
imul
mov
sbb
or
shlb
push
lret
inc
push
adc
jle
jg
enter
adc
push
and
pushl
pop
inc
add
push
cmp
xchg
mov
repnz
les
iret
sub
lods
mov
outsb
rorb
aaa
adc
ljmp
push
fwait
dec
rclb
or
rorb
mov
and
dec
xchg
jl
int
sbbb
inc
daa
sti
jns
repnz
and
sarb
mov
mov
leave
xor
sub
mov
bound
pusha
aas
add
fucomip
stc
in
stc
shlb
xchg
jnp
test
mov
sbbb
jp
push
sub
xlat
pushf
mov
repz
sbb
adc
popa
or
adc
outsb
inc
mov
jbe
dec
xchg
scas
cmp
test
pop
pop
xor
loopne
pop
scas
out
sbb
inc
les
sbb
es
das
ljmp
cld
rcll
adc
stc
xchg
js
push
dec
jnp
inc
cmpsb
jecxz
sti
xorb
mov
popa
dec
ss
sub
sub
rcll
lcall
dec
mov
rol
iret
imul
mov
jge
pop
fldl
push
push
mov
cmpsl
pop
mov
movsb
call
or
cmp
dec
movsb
rcll
and
scas
mov
pop
add
mov
cwtl
shr
nop
cmc
push
lret
inc
push
add
cmc
mov
pusha
test
pop
cmc
fistps
icebp
ret
and
out
mov
movsb
clc
testl
out
enter
lock
rclb
mov
bound
jo
out
mov
nop
out
pusha
xchg
pop
inc
out
cmpsb
dec
adc
je
pop
lret
or
xor
sub
xchg
int
push
aaa
dec
adc
jmp
scas
lret
pop
outsb
loopne
jnp
ret
or
mov
ss
push
xchg
mov
mov
xchg
adc
enter
ja
lods
loop
je
jp,pt
sub
pop
jns
and
cld
movsb
cltd
test
add
dec
sti
sbb
inc
and
aaa
and
and
cmp
pop
pop
add
or
rol
mov
stos
iret
push
inc
xor
xorb
pushf
sub
imul
lahf
rorb
ss
adc
iret
add
mov
repnz
xorb
fnstenv
mov
movsb
add
negl
inc
jo
dec
push
cmpsl
imul
test
push
xor
sub
sub
inc
inc
lock
stc
ret
push
push
adc
out
nop
notl
mov
pop
mov
das
ret
leave
adc
and
mov
roll
in
push
or
jecxz
sahf
xor
pop
push
or
adc
cs
sbb
jle
mov
xchg
ss
in
adc
adc
aam
sub
adc
dec
jne
push
push
push
mov
pop
enter
repnz
sub
inc
mov
test
gs
int
lea
inc
jns
inc
adc
jae
int3
jbe
sbb
mov
dec
inc
repz
dec
pop
adc
sub
stos
mov
nop
xor
or
jge
movsl
push
push
mov
mov
mov
add
mov
cmp
and
subb
push
daa
lahf
bound
push
cmpsb
js
dec
cwtl
push
lret
jl
das
in
add
fninit
popf
sti
pop
sub
call
pop
pop
pop
xor
push
ds
out
mov
cmp
adc
sbb
inc
cmp
fisubl
cmp
add
jnp
sub
shlb
sub
dec
mov
leave
dec
fsts
mov
add
mov
enter
push
dec
mov
jnp
icebp
cmp
cmp
fstl
mov
sbb
loope
sbb
pop
mov
scas
outsl
out
mov
ljmp
sub
sub
jl
idiv
mov
repnz
jl
xchg
stc
bnd
rcrl
sub
pop
adc
xchg
push
outsb
push
and
jle
cmpsl
into
rolb
ja
push
sub
dec
xchg
adc
out
dec
mov
pop
es
mov
sbb
jge
in
jg
jg
dec
fs
xor
push
jae
lcall
cwtl
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
jmp
cltd
push
in
sub
jno
ficoml
xor
mov
maxps
mov
xchg
ret
push
popa
mov
mov
jnp
lock
in
push
sbb
sub
movsb
jae
jp
es
fstpl
adc
jecxz
movsl
aam
stos
pop
inc
mov
sub
pop
push
xor
adc
iret
dec
pop
cmp
std
push
xor
pushf
in
inc
pushf
cmp
int3
pop
sub
sahf
rcrb
out
adc
and
outsl
push
in
xchg
cwtl
lea
pop
jl
push
jno
mov
inc
xchg
push
xchg
jnp
sub
outsb
and
repz
lcall
stc
mov
push
pop
inc
push
xchg
in
daa
outsb
add
cmc
mov
xchg
ljmp
stos
sub
add
jmp
sti
shl
loopne
xor
add
out
stos
dec
lahf
data16
adc
divl
dec
loopne
fisubrs
stos
pop
test
push
fiadds
lock
or
jmp
aaa
loope
cmp
loope
mov
loopne
add
cwtl
jmp
outsl
xchg
mov
pushf
mov
xchg
inc
cmpl
stos
xchg
xchg
sahf
cmpsl
sub
jecxz
pop
and
pop
dec
xchg
push
push
in
inc
xor
jmp
repz
jge
mov
cmp
out
xor
scas
lahf
je
scas
mov
inc
cs
mov
aas
addr16
ror
mov
fucom
push
push
jns
push
aad
loopne
pop
add
andnps
in
sbb
inc
add
or
sbb
xor
push
push
cs
dec
repnz
ficoml
fdivl
je
stos
aad
push
sbb
mov
sbb
cmc
imul
mov
nop
jmp
and
and
inc
xchg
push
out
cmp
and
push
nop
cwtl
jp
jecxz
mov
imul
insb
sbb
inc
adc
pop
mov
das
ljmp
xor
add
imul
lods
inc
sub
mov
jl
std
and
sbb
pop
jle
jmp
dec
push
jmp
das
out
mov
cli
mov
loopne
lret
xor
sub
cmpsl
rclb
dec
mov
imul
sub
loop
add
mov
or
jle
fcoml
int3
hlt
add
aas
mov
xchg
jno
hlt
mov
cli
lret
shlb
cmp
xchg
mov
mov
push
hlt
outsl
test
adc
mov
lock
dec
push
lods
je
rcr
dec
jg
jmp
gs
fdivrl
pop
mov
add
into
aaa
xor
dec
mov
cld
push
fbld
push
out
cs
fwait
or
adc
and
rclb
dec
mov
cwtl
mov
mov
inc
movq
mov
jg
jno
or
shlb
roll
scas
mulb
fisubl
sahf
cmp
xor
dec
xchg
sbb
dec
outsb
sub
push
lahf
dec
adcl
xchg
sbb
add
clc
scas
mov
pusha
cld
dec
or
imul
jnp
test
mov
push
add
ljmp
addr16
cmc
lcall
pushf
scas
fbld
adc
xor
pop
xchg
lods
js
ja
cwtl
sahf
nop
in
jp
xlat
call
pop
das
cmpsl
fdivr
mov
mov
and
dec
adc
push
sub
pop
in
call
repnz
xor
dec
in
xlat
lcall
mov
mov
xor
mov
jne
or
in
test
adc
pop
xchg
lods
test
call
test
pop
cli
test
je
lret
mov
sahf
mov
ret
ret
pop
adc
dec
add
fstl
int3
leave
cmp
jmp
lds
int
int3
icebp
icebp
lea
pop
inc
adc
add
cld
pop
loope
mov
mov
lahf
ret
loopne
cs
cli
jecxz
pop
jno
enter
ret
sbb
inc
sub
or
ss
aad
insl
sub
cmp
sbb
repnz
ret
jg
jg
mov
leave
add
shrb
push
mov
fnstsw
push
stos
in
pushf
mov
out
insl
push
sub
iret
sbb
mov
lret
std
in
int3
and
sti
ret
xlat
push
mov
lret
jae
ljmp
adc
mov
inc
stos
push
lods
jmp
outsb
pinsrw
jb
dec
mov
mov
adc
dec
fisubrs
pop
pop
cmp
xchg
das
loopne
aam
ljmp
inc
xor
inc
xor
mov
cwtl
and
cltd
push
or
or
jg
sarb
lahf
inc
stos
inc
sti
aam
lods
fsin
mov
iret
insb
cli
push
outsl
pop
xchg
pop
in
adcl
enter
in
xchg
es
dec
cmpb
mov
hlt
cmp
xchg
fidivrs
inc
outsl
push
sbb
shrl
and
or
jns
add
sbb
mov
mov
mov
imul
jge
push
xorl
rep
aas
andl
ret
ds
popf
les
and
pop
in
out
mov
cmc
popa
test
adc
cmpsl
mov
xchg
lcall
dec
sarb
loop
cmp
inc
adc
mov
mov
mov
push
fucom
add
enter
sub
scas
daa
pop
movsl
subl
xor
or
xlat
mov
loopne
imull
and
and
lahf
ret
cmp
enter
or
mov
jge
mov
inc
add
ss
cmpsl
pop
cmp
test
mov
xchg
mov
pop
lods
mov
adc
mov
fistpl
xchg
iret
test
sub
jp
inc
jbe
shll
bound
add
and
pop
repnz
outsl
inc
inc
mov
and
imul
in
xchg
mov
dec
jge
xchg
lret
pop
test
inc
mov
sub
pusha
push
fwait
jnp
sub
out
test
or
dec
and
push
xor
xor
out
fldl
sub
iret
push
rolb
pop
mov
in
cmp
lock
les
xchg
sbb
orb
adc
ret
push
inc
jbe
ss
jae
cmp
jmp
cmp
aaa
mov
or
mov
xor
je
bound
sub
mov
pop
lahf
push
leave
xchg
clc
inc
stc
mov
push
fs
or
repz
jg
es
sub
push
int3
hlt
stos
xor
aaa
pop
xchg
mov
notb
cmp
fdivrs
or
jno
leave
lahf
clc
in
stos
test
mov
loope
jmp
jl
jp
leave
pop
ret
aad
or
pop
cli
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
jmp
push
mov
adc
xchg
mov
xchg
outsb
mov
mov
jno
jne
lods
mov
iret
add
jg
insb
pop
and
xchg
sub
dec
or
and
or
mov
stc
jbe
or
sub
dec
outsl
setns
fidivrs
out
movsb
nop
push
or
mov
faddl
mov
movsl
pop
cmp
mov
je
xor
popa
insb
mov
mov
sbb
inc
mov
lods
mov
out
int
jo
ss
push
sub
mov
pop
adc
fcoms
loope
cmp
inc
cmp
pop
lock
fisubl
add
add
xlat
jae
adc
jle
mov
jge
imul
push
cmpsl
adc
push
dec
insl
xlat
xor
repz
jle
mov
cwtl
adc
imul
and
mov
jp
push
insb
movsb
sbb
fisttpl
das
dec
shll
sub
cmc
lods
mov
sarb
movl
xor
out
sub
sbb
movsb
lods
imul
and
push
pop
push
sub
rcr
fdivl
inc
adc
sti
xor
sbb
jne
pop
ficoms
pop
cld
ss
nop
sub
push
test
stc
or
pop
mov
inc
cmpsl
bound
repz
sub
pop
into
mov
inc
nop
lss
decl
xchg
fistpl
ret
adc
add
mov
mov
xchg
mov
sbb
jno
push
push
lahf
iret
mov
imul
mov
sub
fildl
mov
inc
scas
aam
imul
mov
leave
pusha
aas
mov
cmp
dec
insb
enter
push
jbe
loopne
lock
pop
push
xor
dec
loope
andb
mov
pop
ja
jo
je
add
les
sub
mov
dec
mov
enter
insl
mov
inc
sahf
sbb
rorb
dec
jbe
out
dec
mov
dec
xlat
in
bnd
mov
insl
data16
lock
pop
mov
cli
rcll
cmc
or
outsb
pusha
and
pop
xchg
std
inc
pop
cmp
xchg
sbb
int
sbb
sub
pop
mov
add
pop
pop
into
mov
jecxz
mov
dec
imul
mov
mov
xor
ds
repz
inc
mov
fbstp
sub
insl
popf
sbb
mov
les
or
mov
add
fwait
sub
mov
xchg
add
das
inc
cli
shrb
loope
cwtl
jmp
pop
popa
movsl
std
inc
loop
mov
pop
aam
dec
repz
popa
sbb
or
cmp
sbb
lea
pusha
iret
cmpsb
inc
mov
mov
push
sbb
daa
fidivs
and
or
mov
cli
inc
xchg
or
movsl
sub
imul
ljmp
dec
push
dec
sbb
adc
sti
mov
adc
rcrb
mov
out
add
aaa
sub
addr16
ds
add
mov
outsl
insb
cmp
jns
popa
aaa
mov
pop
cmp
cld
sbb
adc
testl
outsl
mov
imul
int
adcb
daa
mov
push
sarl
hlt
lahf
xor
push
cmp
mov
sbb
je
jl
push
or
adc
movsb
js
mov
inc
cmpsl
je
add
aas
dec
ror
sbb
test
inc
pop
mov
adc
shl
xchg
jns
iret
push
test
sub
adc
pop
jp
dec
js
mov
aaa
pop
aaa
and
pop
xchg
or
pushf
nop
repnz
inc
dec
sub
jb
icebp
fs
jns,pn
repnz
xchg
sbb
outsl
mov
sbb
sbb
xchg
fsubrp
add
sar
int3
ja
mov
inc
cld
dec
cmpsl
dec
jg
cmp
jno
enter
push
popf
ret
shrb
and
add
scas
mov
in
xchg
xchg
jbe
push
out
icebp
in
lcall
aam
or
mov
jae
xor
mov
imul
mov
adc
test
cmpsb
pop
test
ja
ja
bound
loopne
scas
dec
lods
push
mov
lret
jp
lret
inc
push
sub
cmpl
pop
xchg
mov
aad
lret
cwtl
push
xor
jge
and
sub
inc
lods
push
mov
test
xchg
icebp
push
xchg
dec
push
mov
outsb
mov
and
inc
stc
stc
clc
mov
or
push
jmp
call
add
lods
jne
fadds
cmpsb
push
cmp
xchg
std
mov
aaa
jne
push
test
icebp
into
addl
popa
fstpl
cmc
jno
mov
outsb
in
lock
dec
and
mov
dec
outsl
add
adc
ds
jmp
outsb
shll
xchg
in
ss
xchg
mov
shl
popf
jecxz
int3
lcall
incl
outsl
cmp
ljmp
int3
lock
jg
loopne
and
inc
es
add
in
out
lcall
mov
push
popf
dec
sub
in
sub
cmp
cs
outsl
sahf
mov
data16
out
push
call
jge
clc
adc
xchg
adc
lret
cmp
and
call
mov
xor
dec
sub
dec
and
push
cmpsb
sub
push
jmp
jmp
dec
push
add
ret
adcb
rcll
jnp
mov
and
pushf
sbb
xor
or
shlb
xor
movsb
mov
push
pop
jl
xchg
je
sbb
clc
stc
leave
in
add
loop
lods
testb
mov
icebp
lahf
adc
adc
xchg
xor
add
out
xlat
and
mov
icebp
icebp
stos
xchg
mov
xlat
mov
adc
jmp
sti
and
repz
test
test
in
arpl
add
ret
stos
push
movsb
bound
dec
call
ret
jle
aad
rcll
and
xchg
insl
inc
add
inc
cmp
pop
pop
popa
mulb
or
pop
add
lahf
sahf
int3
push
sub
out
xchg
and
andb
pop
cs
mov
push
insl
xchg
ret
cli
inc
pop
je
jp
inc
sarb
sub
pop
sub
jb
jle
repnz
push
arpl
ljmp
sub
imul
xor
ljmp
lds
or
add
pop
and
jge
xor
jle
push
rcl
or
test
mov
mov
cmp
inc
fimull
mov
aaa
les
daa
lods
or
push
or
orl
push
cmp
pop
mov
xor
call
enter
pop
xchg
push
enter
fs
inc
cmp
xor
jmp
cmp
adc
mov
test
xchg
repz
xchg
add
popa
into
clc
sbb
cs
loop
movsl
roll
adc
mov
and
leave
dec
adc
mov
xchg
adc
dec
mov
xor
lahf
cmc
fwait
aaa
xchg
in
dec
push
and
inc
push
add
addr16
xchg
imul
shlb
hlt
loope
jecxz
adc
pop
pushf
adc
bnd
int3
lcall
mov
or
jg
js
mov
cmc
dec
jns
ljmp
or
mov
and
mov
fstpl
sub
and
xchg
popa
andb
sub
mov
push
lret
sub
or
and
or
mov
cwtl
dec
and
ja
mov
popf
rorl
mov
jl
mov
add
dec
movb
adc
dec
icebp
imul
fwait
lods
mov
inc
add
movsl
in
xor
negb
jecxz
hlt
call
sahf
popf
fldenv
jmp
xchg
imul
scas
jb
inc
sbb
scas
icebp
lahf
push
mov
mov
stos
mov
pop
xchg
inc
mov
push
add
icebp
loope
rcr
inc
add
test
or
repnz
xchg
xor
fisttpl
push
sub
lret
out
mov
mov
cmp
adc
mov
jmp
lock
adc
mov
or
in
scas
out
xchg
mov
nop
cmp
mov
ds
loope
call
jmp
int
xor
add
pop
popf
loope
lret
sti
js
dec
dec
dec
addb
push
lea
out
repz
cmc
pop
mov
dec
and
mov
xchg
cmc
mov
arpl
pop
pop
je
repnz
push
mov
outsb
cmp
ret
ljmp
or
jne
inc
subl
sbb
pop
sbb
cmp
fisttpll
fs
aaa
cmc
adc
cmp
and
adc
daa
push
in
mov
sub
daa
jb
adc
and
shrb
and
push
aam
ret
cmc
or
dec
fwait
xchg
push
aas
or
inc
add
es
sbb
push
push
xlat
sub
pop
fsub
add
lret
cs
xor
sbb
ljmp
pop
aad
push
mov
sub
jmp
pop
nop
mov
sub
repz
cltd
or
sbb
cmp
push
inc
out
outsl
insb
sbb
cmc
push
adc
sub
fsubrs
xchg
imul
idivb
push
data16
pop
lcall
imul
mull
adc
je
or
nop
in
pop
sub
cltd
sti
shlb
inc
mov
sub
out
insl
adc
inc
jg
inc
push
add
dec
icebp
stos
inc
xor
xor
jmp
xchg
mov
sub
inc
add
lods
push
jle
mov
ljmp
pop
and
adc
cmp
inc
and
int3
or
das
pop
arpl
ljmp
gs
outsb
mov
xlat
push
icebp
inc
jbe
jle
add
jecxz
xchg
and
xor
push
add
out
in
add
mov
pop
icebp
inc
sbb
shlb
jno
bound
lods
sub
lahf
sbb
mov
sub
movsb
cvtps2pi
stos
dec
xor
inc
mov
aaa
push
mov
ficoms
imul
imul
scas
test
mov
sarb
add
aad
dec
fstpt
inc
mov
add
jmp
js
repz
pop
inc
mov
adc
popf
add
fnstenv
mov
dec
je
jmp
fs
fldl
hlt
cmp
sub
pop
push
aas
sahf
in
fs
out
cmp
inc
adc
mov
lods
cmpsl
jae
push
ret
pop
push
shl
sbbb
scas
pop
in
sub
push
ret
mov
and
sbb
popa
push
imulb
push
les
es
pusha
push
mov
adc
stos
aas
cmp
aad
xlat
xchg
cltd
ret
out
cs
hlt
dec
mov
ja
push
rolb
cmp
jne
and
mov
and
sbb
sub
mov
lret
stos
movsl
stos
scas
lods
mov
sti
jecxz
jecxz
cmp
mov
mov
mov
lds
aad
or
sub
leave
jo
loop
jno
dec
inc
jnp
push
sbb
insb
loope
mov
inc
xchg
scas
and
mov
mov
scas
lahf
in
xlat
mov
dec
aam
mov
int
insb
outsl
stos
in
sbbl
add
rorb
lcall
cmp
pop
andps
repnz
push
jno
xor
insl
add
repz
adc
xchg
fsubr
lock
mov
mov
leave
lcall
lock
idivl
mov
mov
mov
insb
mov
fistl
and
cmpsl
dec
push
dec
pop
xor
cmp
dec
xchg
aaa
jns
and
ret
sbb
jp
mov
xor
fidivrl
sub
rol
jns
fcoml
subl
cmp
sbb
adc
xor
jae
add
sbb
test
jo
lock
out
adcl
xchg
mov
outsb
jmp
mov
mov
in
test
pop
daa
aam
fisubl
popa
jbe
int
cmpsb
sub
int3
out
jo
xchg
out
stos
call
jns
divb
mov
imul
or
and
es
pop
icebp
pop
lods
out
adc
movsl
pop
loopne
aam
mov
les
cmp
out
daa
xchg
mov
xchg
repz
loope
inc
outsl
iret
add
mov
push
out
jb
cmpsb
xorl
dec
sti
add
popf
in
andb
cld
fsubrs
dec
xor
xchg
push
jb
mulb
push
xchg
iret
leave
inc
xor
add
xchg
xor
mov
leave
fimuls
stos
mov
adc
inc
stc
test
loopne
push
sbb
pop
pop
inc
sub
xchg
cmp
in
aam
xlat
cs
addr16
scas
loope
movsl
jbe
pop
loopne
scas
xchg
mov
push
mov
ja
xor
pop
out
out
jle
rclb
out
lods
cmp
mov
cwtl
jl
dec
jae
hlt
out
push
mov
roll
pop
jo
loop
jmp
pop
push
aas
and
push
sub
fldenv
out
sbb
cld
mov
and
lods
sahf
sarl
and
incb
pusha
mov
in
dec
sub
sti
or
data16
push
lahf
sub
mov
hlt
sbb
sub
pop
cmp
add
in
push
push
adc
sbb
jge
or
popa
stos
add
jl
test
lcall
imull
popa
and
mov
lods
mov
add
dec
xor
ret
push
mov
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
jmp
cmpsl
icebp
cmp
pop
dec
arpl
xor
adc
xchg
xchg
mov
shlb
pop
call
xchg
jne
in
gs
mov
mov
sahf
adc
jae
add
inc
adc
sbb
gs
inc
repz
aad
xchg
jp
mov
mov
mov
mov
sbb
jp
add
mov
and
ret
out
jecxz
ret
mov
or
jb
data16
outsl
and
cmp
movsl
and
andb
cmpsl
aam
gs
jno
fadd
mov
push
mov
pop
mov
jnp,pt
adc
xchg
in
jno
add
cmpsb
xchg
out
sbb
push
mov
adc
sbb
and
icebp
pop
rorl
arpl
popf
ret
adc
push
inc
aam
push
dec
adc
xchg
fcoml
dec
je
jo
outsb
add
popf
cmp
in
iret
dec
in
pop
cltd
faddp
inc
clc
in
push
cmp
ja
movsl
lods
mov
punpckldq
je
xor
mov
push
inc
cmp
adcl
xchg
aas
daa
pop
adc
mov
or
aas
mov
loop
xlat
imul
nop
lods
out
pop
test
clc
cld
pop
ja
xor
or
leave
orl
movl
cmp
or
pop
movsb
xor
adc
je
insb
aaa
data16
xor
repz
test
aad
ret
inc
repnz
loop
testb
or
adc
xchg
or
rcl
pusha
jp
inc
sub
out
out
mov
push
cld
das
sarb
cmpsl
add
ss
cmc
pop
icebp
fwait
mov
cmc
shr
leave
dec
and
push
outsb
push
pop
ret
adc
xlat
push
mov
out
stos
xor
jns
cmp
inc
test
sbb
std
addr16
and
push
lea
jecxz
pop
pop
rol
cmp
dec
scas
ret
es
sub
push
in
jbe
mov
int3
adc
lds
lret
push
jmp
dec
addr16
dec
iret
dec
mov
adc
adc
outsb
or
push
jp
push
lods
inc
mov
cmp
push
inc
adc
repnz
xchg
cmp
push
jge
imul
fistl
pop
jl
pushf
and
mov
gs
pop
shrl
clc
lea
and
jno
inc
test
insl
ficoms
ss
lcall
dec
lods
fists
ja
insl
cmp
inc
inc
push
inc
lcall
jle
adc
jecxz
push
mov
hlt
lahf
jp
jnp
mov
cmp
mov
imul
ja
cmc
xor
mov
icebp
insb
dec
cltd
in
popf
insb
mov
inc
xchg
mov
fldcw
mov
fadd
loopne
loop
fnsave
popf
pop
aaa
iret
arpl
adc
int
in
adc
push
inc
push
std
push
icebp
mov
xchg
iret
or
pop
mov
inc
mov
cmpsl
sbb
cmp
cmp
xchg
sbb
xchg
dec
pop
dec
loope
push
shlb
rorl
dec
stc
inc
imul
leave
aad
adc
jno
outsb
cwtl
jmp
stos
inc
in
ss
scas
dec
fwait
imul
mov
clc
xlat
aad
dec
int3
push
bound
sbb
in
clc
dec
and
fildll
imul
into
std
pop
pop
jp
push
pop
xchg
cmp
js
jg
lds
outsb
push
or
or
sub
loopne
mov
nop
cmp
jae
push
mov
mov
fstl
pop
or
and
test
cmpsl
inc
mov
cs
pusha
cmp
int3
dec
push
into
out
mov
lods
arpl
or
sub
mov
mov
inc
das
cmpsl
sbb
xchg
add
or
loope
sbb
imul
xor
in
ret
sub
fwait
mov
cmp
scas
or
dec
mov
or
sti
fmuls
push
lea
sub
icebp
mov
adc
cmp
aas
or
aad
int
sbb
inc
pop
mov
imul
push
loope
sub
dec
arpl
stos
or
add
cmc
mov
pop
out
or
test
ss
je
enter
mov
ljmp
xor
pop
sub
mov
pushf
fsubrp
ds
push
loope
cltd
lahf
ret
sbbl
sbb
pop
mov
cmpsl
pushf
outsl
jecxz
add
push
inc
dec
nop
insl
nop
aam
popf
imul
mov
adc
or
scas
add
push
enter
loop
push
in
fidivl
xor
addb
fisubrl
dec
and
inc
add
cmc
cmp
jns
push
add
add
sub
or
xchg
jl
sub
inc
shrl
pop
loopne
das
cmp
ljmp
xchg
bound
or
and
xor
mov
adc
iret
or
adc
cmp
sub
add
jl
je
std
or
mov
xor
insl
fs
add
pushf
xchg
jle
jns
pop
sbb
gs
cli
fimull
pop
pop
mov
mov
mov
mov
push
jns
mov
push
cmp
sbb
jb
dec
or
pop
testb
mov
enter
pop
or
andb
adc
dec
sahf
hlt
mov
add
test
cmp
mov
int
fnstcw
fmuls
and
test
insl
adc
jns
push
xchg
ss
xor
outsl
aaa
xor
fisttpll
push
pop
pusha
lock
shrb
pop
lods
les
or
adc
movsw
cmp
xchg
jmp
in
add
push
cmp
ja
lret
xor
xchg
cs
jne
mov
sub
cmp
mov
add
repz
and
push
mov
lret
push
dec
add
ffreep
lds
out
pop
jl
daa
dec
jb
icebp
ljmp
js
int
call
jmp
jecxz
repnz
jns
scas
dec
out
mov
popa
lods
out
sbbl
sbb
imul
xor
xchg
sarl
sbb
int3
adc
dec
rorb
pop
mov
xlat
decl
pop
mov
inc
push
xor
cltd
dec
fdivrs
and
and
xor
xor
les
mov
push
add
inc
stc
fwait
adc
in
sbb
test
adc
lahf
out
inc
cmp
lock
pop
cmpsb
jo
insl
div
fildll
lods
jbe
movsb
jbe
sbb
cmp
sarb
es
inc
aaa
scas
xchg
es
and
fidivs
popf
mov
sub
sbb
inc
mov
push
add
nop
and
outsl
inc
xor
pusha
jb
js
add
ja
mov
test
test
iret
mov
lcall
lds
or
pop
add
ljmp
sub
mov
adc
xchg
cmp
or
add
aas
call
xchg
insb
xor
cmpsb
xchg
adc
iret
xor
insb
sahf
mov
and
mov
and
sarl
movsb
jne
and
jo
mov
test
mov
jo
push
es
xchg
pop
fistpl
jbe
xor
divb
inc
pop
nop
inc
lods
push
xchg
mov
mov
sbb
js
out
mov
cmp
sub
push
inc
cmp
int
aad
mov
mov
fwait
cmp
test
mov
cmpsl
cmpsw
pop
and
cltd
push
pop
out
add
test
or
stc
iret
sub
or
lret
repnz
addr16
ds
leave
nop
ja
loop
lret
sti
jg
in
out
add
mov
sahf
adc
push
dec
inc
fcomps
xor
inc
gs
fldcw
dec
xchg
lock
iret
push
mov
sub
popa
icebp
outsl
dec
and
mov
into
xor
cld
neg
mov
jmp
add
inc
fsubrl
jle,pn
outsl
push
scas
addr16
add
ficoms
adc
les
je
add
adc
add
adcl
or
fnstsw
mov
mov
push
jbe
mov
mov
add
pop
insl
and
push
shl
lret
push
fs
cmp
xchg
aaa
nop
in
call
sub
scas
into
fwait
xchg
mov
scas
daa
dec
mov
popf
leave
ret
enter
dec
fnstsw
and
inc
lcall
sbb
stos
adc
mov
sub
clc
into
frstor
xor
cmp
jle
and
pop
jg
loopne
mov
push
dec
mov
mov
aam
ret
lea
and
xchg
in
add
mov
shlb
cmp
jns
sub
or
sub
push
xor
adc
scas
aam
inc
mov
outsb
pop
sahf
mov
mov
out
loopne
dec
and
mov
or
or
into
in
not
mov
fidivrl
inc
out
xor
out
push
xor
nop
mov
ret
mov
test
xor
lret
cld
in
gs
outsl
pop
xor
sbb
and
jge
xchg
enter
icebp
in
and
lea
fdivrp
fsub
cmpsb
sbb
mov
mov
pop
popf
cmp
je
lahf
mov
mov
sbb
movsl
or
push
popa
rcrl
xor
shl
cmp
cli
jbe
or
sub
jb
mov
lods
out
pop
outsl
sbb
mov
add
ret
or
cli
and
xchg
rcrb
mov
aas
mov
cmpb
frstpm(287
pop
jbe
movsb
div
loop
or
cmp
movsb
es
dec
cmp
adcl
scas
lods
shlb
cli
ljmp
sbb
addl
adc
sub
dec
lahf
popf
popa
jae
jge
out
sbb
push
pop
jae
loope
clc
pop
sbb
inc
sub
adc
popa
push
push
add
orb
xorb
jg
cmpsb
pop
ljmp
in
jnp
xchg
sub
inc
mov
incb
ret
jo
fwait
rcr
xor
sub
inc
das
hlt
mov
jne
mov
or
jo
mov
mov
popf
inc
mov
push
cmp
or
addr16
mov
xlat
mov
add
enter
xor
sub
stos
ja
cmp
popf
jecxz
adc
outsb
mov
insb
nop
arpl
sbb
pop
jg
cwtl
inc
jp
lods
pop
mov
mov
push
cmc
imull
and
aas
fidivrs
mov
adc
push
pushf
lea
xlat
ss
dec
aaa
mov
pop
and
into
mov
or
stc
int
clc
arpl
push
enter
xchg
sub
pop
hlt
pusha
and
pop
data16
iret
xor
mov
es
mov
jl
mov
mov
pop
cltd
dec
cmp
mov
inc
rcrb
ja
push
into
xchg
fstps
pop
dec
xor
dec
orl
add
dec
aas
fisubs
jne
pop
test
jb
jecxz
shll
push
push
xlat
mov
stos
outsl
fcomps
xor
sub
and
dec
push
push
xor
mov
dec
lock
sbb
inc
push
or
jae
test
mov
shlb
outsb
pop
and
mov
and
insb
imul
pushf
jmp
lock
call
or
lock
leave
in
shlb
test
adc
bnd
outsb
rcrl
int
jecxz
fxch
push
adc
aaa
add
mov
int
sub
mov
cmp
fsubs
push
iret
loope
cli
push
adc
or
jns
mov
ret
xor
outsb
imul
mov
inc
aaa
lahf
arpl
pop
pop
xor
cmp
xchg
pop
aam
mov
adc
lods
add
xlat
pop
stc
enter
lods
jb,pn
jne
xor
fs
pop
sti
xchg
adcb
das
mov
sbb
into
cmp
xchg
mov
mov
and
jmp
pop
xor
stos
sbb
outsb
xchg
add
cltd
jge
xchg
cli
outsb
mov
nop
or
popa
into
leave
xor
xchg
and
jb
pop
movsl
stos
xor
or
jge
mov
leave
sbb
mov
es
fistps
movsl
lock
les
push
fldcw
test
popf
sbb
adc
pop
insb
fs
xor
mov
xchg
int3
fs
mov
mov
aam
or
insb
jnp
out
dec
push
loope
lods
jne
lods
mov
push
mov
mov
popf
lods
fdivrs
shlb
movsl
jnp
or
fcomps
aad
sub
lcall
xchg
cltd
jnp
or
out
push
test
out
in
shrl
cmp
pop
cmp
aad
jnp
aad
ss
sub
cmp
movsl
push
push
xchg
cmpsl
fiaddl
repz
test
or
mov
dec
or
imul
fwait
mov
loop
imul
insb
mov
jnp
out
xchg
xchg
adc
mov
mov
jecxz
push
popa
data16
out
rol
sub
xor
xor
cmpsb
fstpt
push
add
push
je
add
xlat
ja
pusha
hlt
outsl
adcb
test
ret
stc
mov
inc
cs
xchg
outsl
or
lcall
popa
ljmp
push
xor
arpl
push
add
sarl
cltd
xor
sbb
or
sub
mov
xor
or
mov
jns
outsl
xor
or
call
mov
jmp
push
rcrb
and
inc
outsb
xchg
loopne
out
aas
mov
pfmin
out
pop
rolb
test
and
mov
fstps
dec
dec
clc
dec
ret
jp
xchg
popa
xchg
clc
add
jbe
lcall
stc
push
sbbl
ljmp
sbb
add
sub
sub
push
in
xchg
std
daa
xlat
arpl
ss
cli
mov
mov
adc
lahf
call
dec
subb
mov
and
or
cmpl
int
imul
aaa
cmc
and
filds
adc
mov
cmp
dec
daa
and
xlat
out
inc
mov
jmp
clc
shlb
lds
mov
outsb
loop
inc
sub
pop
or
ret
call
jae
dec
aas
ss
pop
add
popl
leave
jb
je
fcomps
fsts
sar
jbe
sub
add
and
sbb
dec
jo
enter
pop
lret
in
sbb
push
mov
mov
test
pusha
test
mov
ljmp
and
or
xor
mov
jmp
xchg
mov
adcl
or
mov
mov
adc
jno
or
int3
xor
les
dec
roll
and
sarb
nop
shll
ss
sub
or
mov
jg
cmpl
xchg
outsb
fistl
adc
mov
mov
fcompl
into
pop
pop
outsl
movsl
into
jmp
push
fnstcw
and
ja
mov
hlt
xchg
or
negl
and
cmpsl
mov
ret
or
pop
jne
dec
shll
movsb
cltd
push
push
inc
sbb
push
jmp
scas
pop
mov
xor
inc
add
adc
or
and
jno
andl
add
sub
pop
and
das
cwtl
iret
dec
xchg
loopne
loop
out
aas
adc
in
mov
decb
push
sub
cld
xlat
out
mov
ljmp
jmp
aas
and
inc
loopne
jp
dec
mov
lds
out
adc
cmp
mov
fadds
mov
call
in
and
xor
mov
fimuls
xchg
mov
or
insb
cmp
mov
xchg
call
mov
adc
lahf
adc
in
or
bndldx
add
adc
inc
ret
push
arpl
fdivrs
mov
notb
xchg
test
mov
fcompl
in
or
cs
enter
inc
jmp
out
stos
adc
hlt
jmp
bound
sub
out
popl
inc
out
bound
mov
bound
jns
lds
sbb
dec
ss
adcb
rcr
test
sub
sub
xchg
mov
insb
push
mov
sub
xor
aaa
mov
push
addr16
loop
stos
push
scas
mov
sub
call
or
dec
cmp
ror
jmp
jne
iret
cwtl
pop
pop
pusha
xor
sub
jmp
cmp
or
add
sub
rclb
sbb
sub
repz
inc
pusha
aad
inc
insl
jmp
xchg
mov
adc
sub
and
jno
cmp
xor
jmp
movsb
or
sbb
mov
pop
push
loope
jnp
inc
mov
mov
stc
or
movsb
leave
fcoml
pusha
retw
mov
les
lock
and
call
mov
out
scas
cmpl
jmp
mov
or
or
jbe
imul
mov
out
mov
jae
out
pop
data16
test
mov
in
pop
inc
sub
inc
aad
lods
lahf
cmp
xchg
into
cmp
sub
mov
std
fistl
test
mov
rolb
in
cmp
xor
dec
or
sarl
xchg
outsb
lock
dec
lock
cmp
mov
and
jl
orb
cmp
xor
xor
and
jne
push
and
and
fildll
insb
mov
mov
push
lods
and
je
xchg
push
outsb
and
mov
dec
xor
sbb
mov
fcoml
movsb
mov
mov
in
in
sbb
fnsave
test
pop
lds
sahf
iret
dec
clc
xchg
mov
stc
dec
bound
enter
pop
les
jge
aad
xor
push
call
sbb
in
into
jle
mov
repnz
fwait
imul
repnz
mov
clc
mov
add
hlt
cmpb
jge
movb
mov
push
xor
ja
add
pop
cmpsl
pop
insb
jl,pt
mov
add
adc
pop
clc
mov
gs
pop
adc
xlat
mov
movsb
mov
popf
fs
mov
add
call
scas
mov
mov
mov
lret
push
enter
mov
iret
cmpsl
and
sti
vminps
pop
jne
movsl
outsb
pop
das
repnz
inc
jle
repnz
push
test
pop
push
fstpl
fadds
roll
incb
or
adc
and
sbb
js
test
hlt
and
scas
clc
pop
sub
stos
out
stos
and
add
mov
cmp
in
lret
jg
cmp
and
mov
xchg
outsb
and
mov
rcll
push
dec
mov
out
clc
jo
bnd
mov
adc
cli
iret
add
imul
rolb
sbb
test
daa
lea
mov
out
or
or
loop
inc
sub
subb
xor
aaa
inc
insl
lods
xchg
insb
push
aam
inc
xchg
mov
or
mov
inc
xor
fbstp
out
pop
idivb
enter
push
sbb
and
insb
vmovsldup
mov
xor
dec
stos
xchg
leave
pop
mov
orb
push
push
fsubrl
andl
fninit
add
call
ss
mov
ljmp
shlb
gs
inc
andl
into
fistps
mov
icebp
pop
cmp
and
add
bound
xchg
fistpll
lcall
push
lret
incl
or
mov
and
fdivrl
add
mov
push
sbb
pop
int
sbb
inc
adc
sahf
mov
dec
jmp
jp
or
cmpb
popa
sub
lcall
jbe
daa
ret
enter
mov
addr16
adc
pushf
dec
fmuls
mov
or
adc
mov
ljmp
sbb
stc
imul
jg
out
frstor
jecxz
mov
shrd
shr
shr
jmp
imul
scas
sbb
xor
outsl
in
dec
mov
adc
xchg
dec
pop
mov
adc
outsb
pusha
pop
mov
cmp
push
cmpsl
add
loope
repnz
lock
fcompl
outsb
mov
mov
int3
mov
jmp
iret
cli
mov
inc
xchg
jl
mov
mov
or
add
jmp
je
xor
ss
mov
pop
adc
push
test
xchg
lret
pop
fimull
clc
pop
sub
xchg
and
inc
movsl
dec
in
pop
push
cmp
outsb
adc
xchg
out
out
movsb
stc
pop
jbe
clc
lock
imul
lcall
mov
cmp
icebp
xlat
out
xchg
mov
add
mov
es
xor
mov
xor
stc
cmp
into
xchg
rclb
adc
sub
inc
outsl
push
and
aam
daa
loopne
bswap
in
inc
jae
hlt
mov
bound
cmp
ja
movsl
lret
arpl
iret
pop
mov
lahf
dec
and
std
idivb
add
dec
fbstp
ja
addr16
pop
sub
mov
fisubrs
mov
enter
push
add
inc
gs
enter
adc
xorl
addb
mov
aas
stc
divb
std
clc
push
adc
adc
leave
iret
aad
sbb
jle
lods
dec
jp
sbb
xchg
stos
cmp
lods
and
xchg
dec
repnz
dec
cmpsb
insl
loopne
out
icebp
daa
cmp
mov
repz
clc
pop
loopne
and
cltd
in
movsb
inc
adc
xchg
out
test
outsl
pop
xchg
pusha
pop
jnp
sbbl
leave
ret
jno
sbb
xlat
xchg
sub
sub
inc
jb
push
test
nop
or
roll
aaa
fwait
sbb
dec
movsb
push
sahf
in
enter
stos
and
addl
lret
ja
outsb
mov
inc
mov
out
idivl
mov
xchg
enter
lret
lods
sbb
xor
les
int
xor
pop
outsb
bound
ret
les
xor
jne,pn
shl
jle
adc
sub
cmc
lcall
mov
scas
xor
aad
stos
push
sbb
push
dec
dec
sti
clc
aad
out
jb
aaa
push
jge
jns
lcall
ret
inc
sub
cmp
loop
fadds
xor
cmp
mov
shlb
std
xor
shll
dec
les
jne
mov
pop
jo
push
mov
lds
insl
loop
test
xor
mov
add
pop
push
negb
out
cmp
mov
xor
cwtl
cmp
fcomps
fdivrs
sub
push
push
push
xchg
pop
sub
push
adc
cmp
sbb
movsl
or
pop
aam
hlt
in
bound
pop
hlt
and
aad
daa
pop
fimull
test
xchg
jbe
xor
pop
or
enter
arpl
fmuls
mov
mov
loop
shlb
xor
cmp
fidivl
in
repnz
mov
mov
mov
inc
std
push
mov
dec
sarb
xchg
xor
fdivl
xchg
pushf
cmp
lcall
lods
js
inc
fdiv
ret
cmpl
sub
add
test
dec
and
adc
fstpl
mov
subb
adc
scas
xchg
add
lds
xchg
and
mov
or
push
pop
jg
insb
sbb
add
sbb
scas
cltd
call
test
push
popa
cmp
dec
mov
mov
and
cmc
jo
push
dec
fs
dec
out
mov
bound
lods
push
shlb
pop
daa
lretw
cmp
scas
push
xchg
xor
jecxz
inc
cmp
push
dec
cmc
ror
insb
or
pop
int
repz
sarb
rcl
sub
testb
ret
nop
cltd
inc
jl
cmpsl
mov
rorl
movsl
das
shrl
jmp
sbb
daa
and
add
xchg
ljmp
int3
pop
and
lahf
push
ja
test
jg
xchg
push
cmp
mov
in
jecxz
mov
mov
pop
orb
push
or
mov
loop
mov
out
sub
jp
stos
sbb
xor
dec
add
adc
cmp
fnsave
jl
pop
cli
in
jl
pop
cmpsb
or
into
ds
cmp
dec
iret
and
fwait
jbe
movsl
scas
ljmp
imul
mov
mov
mov
mov
sbb
xchg
inc
or
dec
mul
sub
mov
mov
mov
inc
mov
jns
inc
mov
lret
xchg
inc
mov
push
inc
inc
pop
js
ficoms
dec
pop
fidivrl
cld
mov
pop
pop
mov
cli
add
sahf
add
fs
and
sbb
insb
jnp
xchg
movl
stc
sub
push
xchg
inc
jb
inc
sub
clc
scas
sti
lahf
mov
push
xor
sbb
leave
mov
adc
sub
test
dec
les
fs
xchg
cmp
mov
imul
popf
gs
cmc
dec
cmp
out
jle
sbb
inc
push
mov
xlat
mov
dec
dec
xor
and
mov
fstps
jmp
mov
mov
cli
and
xlat
dec
mov
xchg
pusha
add
aam
pop
inc
popa
icebp
ja
mov
jmp
scas
xchg
inc
fcomip
ja
pop
lock
adc
sahf
jmp
jp
cmp
pop
push
inc
popa
sub
out
lret
ss
fistpl
adc
mov
cmp
fisttpll
dec
lds
xchg
sahf
xchg
dec
rep
mov
mov
fisubs
jp
repnz
inc
dec
cltd
xor
mov
xchg
and
cli
ss
dec
scas
cmpb
mov
sti
jg
mov
inc
jns
dec
jecxz
or
andl
push
sub
fistps
push
insl
cmp
fsubl
arpl
cltd
add
sub
push
mov
fs
lods
repz
lahf
fwait
mov
pop
ja
lods
fistpl
push
lock
push
pop
loop
cli
dec
into
xchg
mov
pushf
in
ljmp
mov
mov
cltd
add
scas
dec
pop
inc
fwait
test
imul
popf
pop
sub
aaa
repnz
push
or
insb
xor
pop
cmpsl
inc
scas
aad
cltd
cmc
sub
ror
pop
adc
movsl
fisubrl
mov
and
mov
cmc
push
or
inc
pop
addb
daa
in
arpl
gs
jne
push
jg
fistl
sbb
jp
and
xor
pop
xor
push
xor
mov
mov
mov
push
push
jmp
push
xchg
stos
les
ret
push
sbb
adc
xchg
push
mov
jnp
and
dec
dec
fucomp
test
stos
sbb
outsl
or
popf
pop
scas
cmp
inc
mov
stos
jp
sarl
imul
or
in
jecxz
dec
mov
pop
xchg
pop
popa
popf
imul
pop
fcmovu
ja
cltd
inc
and
cmp
mov
inc
add
fsubrs
jecxz
and
leave
jo
lods
push
lahf
sub
push
dec
fdivrp
sbb
icebp
sti
and
xor
xor
int3
mov
loopne
ja
add
adc
add
lcall
jns
adc
mov
mov
cmp
pop
sbb
imul
inc
das
aaa
sub
lds
shll
cmp
dec
pusha
sub
shr
inc
cmpb
add
in
cltd
push
inc
mov
pusha
fwait
je
cld
push
add
sbb
popa
cmp
push
movsb
sub
pusha
and
sub
push
cmp
push
sub
out
pop
int
push
mov
arpl
imul
pushf
add
mov
je
daa
pop
data16
push
addl
ja
loope
loope
out
je
sbbl
or
xor
das
jecxz
dec
fidivl
int
jnp
sti
stc
loope
roll
inc
push
pop
jecxz
pop
fistl
add
mov
push
inc
pop
xchg
jmp
imul
pop
mov
jns
push
jge
pop
cmp
sti
inc
mov
gs
es
or
cmp
loope
loopne
lock
lock
push
push
divl
adc
lods
popa
scas
loope
cmp
pop
aam
push
movsb
in
punpckhwd
mov
fsubs
ret
dec
mov
fsubrl
jg
lret
push
inc
or
and
test
sti
pop
shr
orl
inc
in
and
or
loop
adc
sbb
xchg
add
add
iret
loope
mov
inc
adc
insl
rcl
imul
pop
nop
in
cmpsb
rcr
ficompl
or
fstpt
cmpsb
call
repz
xchg
dec
fwait
dec
mov
in
shlb
repz
dec
mov
jle
mov
int
sub
ds
int3
pop
es
sti
loop
mov
shl
js
in
cmp
gs
jns
out
inc
push
outsb
xor
pop
mov
insb
fidivrl
mov
sarb
mov
jl
aas
je
bound
testb
je
push
mov
push
add
scas
les
sub
int
dec
mov
adc
sbb
shlb
mull
cltd
xchg
mov
push
xchg
pop
hlt
lret
xchg
repz
mov
push
lds
cmp
lods
xchg
mov
sub
inc
adc
mul
stos
out
stc
or
cmp
mov
ljmpw
or
inc
dec
scas
cmp
cltd
in
dec
gs
push
jge
sub
ljmp
rorl
mov
clc
jmp
popf
in
xor
stos
aam
pusha
or
in
cs
mov
imul
cmpsb
jne
dec
adc
jne
pop
rcrl
cmpsl
lret
xchg
in
je
rorb
rcl
add
xor
jl
push
mov
push
inc
mov
mov
or
push
add
loop
push
lcall
fistl
arpl
mov
popa
js
adc
sub
adc
in
adc
mov
mov
mov
jno
mov
cmp
rcr
dec
sub
pop
out
xchg
sarb
test
add
sub
pop
in
cmpsb
sbbb
xor
out
jg
icebp
adc
cmc
adc
jecxz
mov
mov
mov
adc
int3
mov
loope
jae
push
xchg
outsl
dec
add
rcr
out
inc
mov
jno
mov
sub
sahf
inc
out
addr16
push
adc
lcall
push
test
scas
push
adcl
xor
mov
lret
orb
popa
or
cmp
lock
inc
movsb
les
out
test
stc
jmp
mov
xchg
or
xor
push
out
xchg
sbb
in
out
mov
sahf
fs
mov
iret
sbb
dec
jmp
dec
adc
outsl
mov
std
adc
or
imull
jp
cld
ds
repz
inc
sbb
fnstsw
je
mov
adc
xchg
or
clc
sub
pop
pusha
sbb
jne
mov
mov
jge
jl
and
les
jno
push
cmp
cld
adc
mov
pop
sahf
mov
rcrl
data16
mov
push
or
subl
leave
push
popf
mov
push
ds
into
mov
inc
mov
sti
xchg
push
jno
sbb
rclb
pop
das
mov
test
cmp
test
pop
adc
pop
mov
int3
adcl
les
gs
fistl
dec
scas
insl
scas
add
adc
or
lds
jmp
cmp
push
sub
xchg
xchg
adc
or
xchg
test
jo
adc
cmpb
es
sub
je
pop
inc
mov
ss
push
pop
cli
inc
in
dec
inc
mov
and
jo
cmc
mov
add
pop
sbb
adc
inc
mov
mov
or
mov
nop
icebp
and
or
cmp
push
data16
stos
pop
push
leave
jnp
jp
pop
mov
sub
decl
mov
and
pushf
jl
cmovbe
je
cmpsb
rcrl
mov
test
sbb
jle
lret
cmp
test
push
pop
mov
cld
popf
pop
loopne
pushf
daa
sti
in
mov
pop
call
lcall
out
cmp
mov
fstpt
arpl
bound
sub
ss
lret
ja
cli
or
lret
jge
das
mov
sub
idivb
or
mov
xor
cwtl
mov
push
pop
xlat
scas
mov
xchg
call
pop
jnp
jb
push
imul
fwait
test
or
test
bnd
stos
add
xlat
lcall
mov
push
or
jg
jecxz
cltd
pop
cld
jg
push
pop
cld
out
cmp
testl
adc
mov
mulb
mov
mov
fisttpll
xlat
stos
divb
aam
gs
mov
loope
xchg
push
pushl
imul
and
sub
loop
les
add
pushw
popf
jae
dec
mov
cmp
fstps
cmpb
lods
out
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
jmp
pop
jge
lds
hlt
inc
arpl
inc
enter
xchg
sbb
jae
dec
std
push
mov
fdivs
mov
cwtl
or
sub
into
jp
pop
jae
cltd
push
xchg
or
mov
xor
bound
fdivrs
repz
dec
das
xchg
jo
jge
scas
cmp
into
call
inc
orl
mov
mov
jns
outsl
in
xor
sbb
jmp
loop
mov
jne
sub
pop
jg
lahf
scas
mov
jp
pop
or
jl
aas
sbb
cmp
out
pop
jo
xor
dec
dec
lahf
insb
enter
loopne
jmp
in
lret
adc
pop
sub
add
outsb
jge
testl
filds
sbb
insl
dec
mov
xchg
leave
outsb
pushf
mov
or
push
shll
es
cmpb
xchg
xchg
inc
sbb
lret
xchg
out
sbb
inc
adc
or
dec
loope
jbe
test
mov
out
push
in
mov
adc
jmp
cmp
mov
and
shlb
out
mov
out
int3
sub
jno
daa
movsb
xchg
gs
icebp
jg
and
imul
dec
into
and
fwait
ljmp
loope
sbb
jecxz
cmc
iret
adc
mov
fidivl
stos
pop
or
pop
aaa
push
aad
jns
in
hlt
adc
icebp
lea
outsb
xor
in
out
cmpsl
add
jns
int
jg
pinsrw
sbb
pop
cwtl
das
mov
jl
xor
sub
sbb
mov
mov
dec
divb
xchg
inc
aad
ja
scas
sbb
add
xchg
xor
pop
or
or
or
jo
cmpsb
sub
xchg
nop
aaa
inc
out
or
scas
mov
or
xchg
fwait
out
xchg
cmc
testl
or
sti
hlt
or
into
sbb
jae
inc
ror
fwait
inc
fldt
inc
mov
mov
mov
push
std
jbe
call
and
pusha
add
add
dec
mov
nop
dec
loop
sbb
sub
ficoms
mov
fwait
aaa
mov
and
inc
push
sub
out
lods
lcall
mov
es
test
dec
cmovge
call
mov
mov
nop
ficoml
xor
pop
lds
leave
out
inc
jmp
pop
jp
xor
push
aad
mov
jmp
adc
fucom
jmp
sub
adc
lods
lea
clc
mov
outsl
inc
int3
mov
sbb
jb
sbb
inc
push
inc
or
enter
push
sub
sub
test
adc
jg
push
push
loope
movsb
cmp
aam
and
mov
sub
mov
jbe
mov
mov
sbb
insl
ja
clc
push
es
xchg
inc
sub
xchg
test
inc
adc
or
sbb
pop
xor
sbb
int3
popf
sub
dec
mov
in
dec
or
leave
lock
inc
test
adc
mov
lret
push
cwtl
mov
fsubrl
fidivs
pop
popa
je
xchg
cmp
push
loope
outsb
push
xor
adc
daa
fnstsw
mov
mov
and
xchg
inc
mov
mov
shl
adc
fnstsw
sbb
mov
clc
in
jne
in
mov
sub
pop
idivb
inc
mov
and
loopne
jl
xchg
or
push
or
test
popf
stos
mov
test
data16
iret
xor
mov
imul
and
mov
cmp
pop
ds
sub
jl
mov
fwait
adc
aam
mov
mov
sbb
ret
sbb
jecxz
xor
mov
arpl
add
push
add
mov
lret
dec
push
mov
pop
push
sub
js
aas
pop
mov
push
push
jne
test
pushf
jmp
xchg
xor
xchg
cmp
out
cmp
or
sti
shl
popf
adc
add
and
adc
loop
insb
shlb
pop
movsb
fidivrs
gs
dec
lcall
sysexit
dec
js
push
or
mov
movsb
cmc
sbb
xchg
lods
dec
adc
cld
or
sbb
xlat
mov
cmpb
pop
cmp
lahf
arpl
dec
pop
mov
aad
loop
js
mov
mov
dec
rolb
add
xorb
jnp
inc
pushf
pop
mov
sti
mov
in
adc
lret
sbb
sar
mov
scas
das
push
lret
push
mov
mov
out
push
std
sbb
test
loop
push
mov
xorb
stc
outsb
adc
shll
sbb
or
jp
push
aaa
dec
in
js
outsb
addr16
mov
movsl
shll
push
in
dec
fbld
add
loop
aad
jp
xchg
jg
pushf
js
mov
cli
lock
fmulp
fcmovnbe
clc
xor
aad
jle
push
dec
and
clc
cmp
fmulp
lcall
cs
jne
push
sbb
movsb
dec
push
fnstenv
subb
push
push
pop
cmp
push
and
push
pop
add
inc
pushf
stc
loope
lods
jbe
lret
jnp
add
stos
inc
adc
adc
daa
sbb
sbb
fmull
dec
icebp
test
mov
pop
mov
sub
lahf
outsb
mov
sarb
fwait
ss
imull
add
xchg
mov
fsubl
xchg
or
cmpsl
ljmp
cmp
mov
sbb
aaa
cmp
add
jmp
ljmp
lods
aaa
mov
mov
dec
mov
repz
cmp
pusha
lock
mov
push
daa
je
nop
out
xchg
mov
mov
es
stos
in
in
int3
mov
xchg
xor
aaa
dec
test
popa
inc
mov
jg
lcall
jmp
popa
out
and
inc
lret
inc
aad
lret
mov
cmpsl
add
cld
rcrl
scas
mov
fldl
movsb
cmc
fadds
sti
push
dec
jle
adc
or
mov
mov
mov
xor
out
mov
pop
add
pop
outsl
out
imul
ret
lock
fs
iret
mov
push
push
mov
popf
inc
jne
shlb
dec
hlt
arpl
fistpll
js
pop
push
cmc
push
pop
lock
fwait
cmp
hlt
inc
rol
stos
mov
xor
xor
call
in
xchg
sbb
ror
mov
sbb
or
dec
enter
sahf
inc
push
cmp
push
cwtl
sbb
jp
popa
inc
xchg
xor
frstor
jmp
xchg
push
sbb
dec
mov
mulb
fs
push
and
pop
jecxz
push
ja
lret
scas
or
lods
enter
add
fadds
add
and
add
loop
es
pop
js
pop
ss
pop
js
ja
ret
icebp
out
int
cmpsb
sbb
pop
push
adc
pop
das
jg
cltd
xchg
ret
bound
dec
neg
imul
aam
push
ss
push
jae
popf
dec
sahf
int
pop
dec
push
arpl
repnz
pop
fldt
cmp
adcl
subl
jl
mov
movsb
std
adc
inc
push
and
rcrl
andb
lods
jmp
popa
mov
dec
xchg
fisubrs
das
lret
push
lret
push
xor
int3
cmpsl
in
push
xor
lcall
cwtl
out
js
mov
xor
mov
and
cmp
push
push
sbb
mov
dec
bound
je
push
popa
daa
push
in
loopne
adc
and
jns
lahf
mov
ret
mov
push
push
pop
std
jecxz
jne
sahf
ja
stos
mov
xor
mov
jns
xchg
cmp
popf
push
ror
adc
notl
cmp
imul
clts
mov
and
pop
sub
and
jbe
cmp
shrb
in
sar
mov
jecxz
jg
loopne
popa
repnz
xor
and
inc
fldt
inc
sar
push
into
rcll
add
jbe
push
insb
mov
popa
notl
xor
mulb
mov
jbe
pop
xchg
rorl
and
int
jo
int
mov
push
filds
nop
clc
popa
mov
xor
outsb
mov
pop
pusha
xchg
mov
mov
add
into
or
inc
sbb
mov
or
nop
sbb
movsb
mov
ftst
mov
loopne
jbe
pop
fs
inc
andb
mov
or
cmp
sbbl
cmpsb
int3
arpl
pop
mov
mov
and
popa
ret
mov
movsl
push
into
push
lea
es
rcll
adc
popf
adcl
rolb
imul
sbb
mov
adc
les
sbb
test
add
inc
xchg
cmp
imul
in
daa
or
mov
xlat
xchg
bt
out
fildll
mov
mov
push
pusha
mov
mov
mov
jne
aam
push
push
sub
mov
test
xor
pop
mov
cwtl
or
mov
sub
shrl
adc
mov
push
mov
test
dec
out
push
sub
xor
cmp
and
pop
pop
dec
cmpsl
outsl
xchg
xchg
jnp
xor
out
jno
dec
cmc
add
stos
sbb
rclb
movsb
dec
adc
or
or
dec
or
imul
pop
mov
stc
imul
bound
scas
jno
push
push
mov
inc
sub
or
xchg
adc
xchg
push
pop
xor
or
js
pop
mov
xor
dec
pop
cmp
inc
pop
xchg
cmp
test
mov
insb
aad
and
mov
jno
adc
add
jb
pop
fld
lock
push
jecxz
lods
cmpsl
faddl
into
repz
lea
fwait
popf
adc
inc
js
or
pop
xchg
dec
frstor
xchg
in
mul
jnp
sbbl
les
pop
and
in
push
and
inc
jp
cmp
mov
mov
popf
outsb
andb
arpl
cld
stc
xchg
neg
fwait
push
in
xchg
xor
mov
test
push
ror
mov
and
mov
lret
lcall
pop
or
sub
dec
xor
adc
cmp
mov
xchg
mov
push
and
or
fucomp
push
jmp
cs
and
mov
jo
andl
sbb
inc
sbb
xor
ret
xor
pusha
pusha
jb
cs
jno
pusha
xchg
mov
push
insb
mov
fs
inc
jg
mov
enter
hlt
add
sbb
mov
jno
movsb
mov
xchg
mov
push
jae
mov
orb
mov
enter
sub
stos
repz
jb
ja
jno,pn
cmp
inc
sbb
aam
inc
cwtl
push
cbtw
popf
sbb
imul
mov
out
push
push
fistpll
cwtl
maskmovq
testl
cwtl
mov
pusha
test
repz
stos
cwtl
packssdw
andb
push
sbb
inc
repnz
stos
mov
xchg
inc
add
sub
fistps
xlat
cmpsb
daa
mov
adc
add
adc
aas
lock
sbb
xor
sarl
inc
in
add
shlb
rcrb
mov
test
ds
pop
mov
cmp
ljmp
sub
cwtl
push
or
push
xchg
cmp
mov
and
add
scas
push
mov
dec
mov
pop
pop
jle
fwait
inc
fnstsw
sub
mov
push
stc
sarb
dec
or
jae
movsl
fincstp
cmp
or
or
outsl
repnz
sbb
xor
xlat
jl
movsl
cmp
push
mov
and
inc
lcall
mov
clc
inc
pop
mov
ror
dec
sub
mov
jg
subb
push
or
cmp
in
js
inc
loope
ret
pushl
xchg
aas
add
mov
sub
mov
xchg
orl
lods
and
lods
mov
aaa
ljmp
ret
inc
imul
js
xchg
push
mov
stos
mov
cli
dec
jnp
jp
push
jbe
jns
cmp
push
out
mov
mov
or
sub
sub
out
inc
xchg
outsl
xchg
inc
or
fldt
call
idivb
and
dec
sub
int3
and
sti
sbbb
divl
loop
test
mull
pop
and
lcall
dec
or
lcall
pop
fsubrp
mov
int
jns
fbstp
mov
lahf
imul
inc
mov
sub
lahf
das
mov
xchg
sbb
lret
lret
popf
jmp
mov
mov
cmp
adc
fisubrs
adcb
ljmp
repnz
ljmp
inc
mov
inc
push
int
dec
mov
xorb
xchg
aas
adc
loop
mov
clc
add
mov
mov
mov
out
sub
sub
xchg
ljmp
jnp
loope
push
pop
dec
shlb
xchg
add
adc
jp
bound
sub
add
rcrb
or
stc
cmpsb
push
pop
gs
in
mov
sbbb
aaa
flds
out
inc
ret
mov
or
insb
daa
loopw
out
xchg
testl
imul
mov
or
inc
or
dec
fidivrl
mov
xor
shl
xor
or
jmp
aam
mov
xor
push
and
adc
xchg
pop
mov
xor
fcmovbe
into
iret
mov
js
xchg
mov
xor
mov
and
ffree
mov
push
jo
xor
and
or
fdivl
mov
out
enter
mov
leave
mov
or
das
inc
fstl
push
add
mov
jbe
shll
loop
mov
loop
ret
out
sahf
cmp
push
or
je
test
in
inc
push
repz
push
leave
jmp
das
dec
mov
cmp
ja
mov
inc
rcl
icebp
sbb
lcall
push
xor
mov
pop
xorl
mov
xor
or
pop
jle
cmp
ret
xchg
mov
outsb
stos
popa
pop
inc
and
xlat
cld
fmulp
xor
push
insb
cmpsl
ss
cmp
adc
stos
in
mov
or
fs
add
scas
divb
icebp
cmc
push
jae
in
ss
pop
pop
xchg
pop
ret
js
dec
mov
outsl
scas
sbb
sbb
push
movsl
or
push
xchg
nop
adc
add
xor
fs
mov
inc
cmp
popf
gs
test
insb
imul
dec
cltd
test
es
inc
lcall
pop
push
jo
lahf
call
xlat
sub
mov
add
mov
pop
scas
je
stos
and
lods
ret
out
jae
das
mov
aas
popf
fidivs
sbb
or
imul
mov
mov
push
jl
test
jl
sbb
out
mov
in
aas
in
scas
add
scas
xor
ljmp
cltd
sbb
repz
addr16
jl
orb
call
lods
pop
sbb
mov
add
inc
push
out
jle
nop
cmp
mov
cli
or
das
jnp
in
xchg
test
lods
add
das
jge
out
add
jae
sbb
sbb
cmp
mov
sbb
lock
loopne
loope
fs
aad
jno
loope,pt
data16
rcr
add
cmp
xlat
mov
adc
mov
outsb
xchg
insl
xor
dec
mov
sar
xlat
pop
cltd
add
in
sub
ja
add
out
inc
inc
shld
aas
lretw
in
xchg
stc
rcrb
pop
jp
jnp
vaddsubpd
sub
mov
sbb
add
adc
rorl
jle,pn
icebp
pop
cmp
aam
adcl
fwait
cmpsb
jge
incb
xor
jmp
ret
arpl
fdivs
mov
shlb
pop
cmp
repz
or
cmp
dec
mov
popf
out
jl
cmpsl
or
fldt
sub
inc
and
mov
sub
scas
aaa
into
xchg
fsubl
and
pop
addb
repz
pop
cltd
jmp
jnp
cmp
pop
sbb
xor
mov
sarl
dec
pusha
ficoml
mov
aam
mov
or
adc
jmp
pop
fldl
cmpsb
dec
std
mov
cli
mov
test
xchg
lds
cmp
jnp
ljmp
stos
movsl
add
xchg
ss
stos
cwtl
pop
loopne
add
sbb
cmpsb
mov
clc
in
pop
test
cmp
add
lcall
sub
xchg
in
and
jnp
out
out
or
call
or
outsl
pop
into
sub
pop
cmp
add
cltd
int
push
xor
adcl
jb
aad
cmp
and
lcall
leave
psubusw
dec
mov
add
mov
xchg
dec
push
cmp
dec
call
sbb
push
mov
movsb
sbb
push
outsl
xchg
or
pop
jb
insb
cmpps
mov
ljmp
or
les
lock
and
fs
jo
cmc
mov
test
pop
lods
add
ljmp
movsb
dec
dec
push
fldcw
sbb
lea
aad
xchg
out
push
mov
push
in
jmp
scas
jns
jg
push
mov
cmp
or
push
adc
xchg
frstor
ja
push
inc
dec
xchg
loopne
jmp
mov
jne
xlat
inc
xor
and
mov
adc
pop
and
jl
sbb
mov
stos
movsb
cwtl
push
int
and
xchg
xor
lds
xchg
and
ficomps
mov
push
push
out
jl
pushf
inc
lods
pusha
sbb
cld
lods
pop
jle
push
mov
inc
ficoms
or
mov
repz
test
insb
mov
lahf
in
lea
sub
jle
and
ds
pop
sbb
xchg
data16
stos
repnz
je
pop
inc
push
add
xchg
arpl
movsl
ja
dec
fdivs
daa
mov
loopne
sub
jne
and
fnstenv
pop
cmpsb
ja
aas
mov
push
dec
divl
out
jbe
in
dec
mov
enter
clc
enter
pop
jecxz
dec
ljmp
test
mov
mov
jo
jp
daa
js
fwait
mov
jnp
mov
into
aas
cs
adc
cmp
jmp
xorb
inc
in
cmp
adc
test
movl
add
js
int3
rclb
aas
lods
mov
pop
pop
loope
mov
cmp
lahf
call
je
lahf
mov
pop
repnz
icebp
scas
gs
push
jb
adc
test
loop
and
jecxz
popf
repz
inc
cmp
or
and
cmp
cmpsb
movsl
push
ret
add
lods
lcall
sub
add
pop
adc
jae
jmp
test
call
stc
mov
mov
fs
rolb
inc
mov
jg
call
loop
adc
sbb
mov
jmp
xchg
int
fiadds
fiaddl
push
nop
sub
lret
push
out
mov
pop
mov
xor
push
dec
adc
test
imul
sarl
aaa
xlat
out
out
bound
test
add
mov
sub
idivb
subl
mov
pop
jge
cmp
mov
mov
xlat
out
add
fwait
xchg
cltd
movsb
lahf
cmp
and
or
cmp
cld
pop
div
push
jnp
or
fstps
inc
ret
decl
jbe
lea
push
push
loop
stc
enter
xor
add
test
outsb
and
xchg
mov
lcall
adc
sar
push
loopne
fsubrs
gs
fldl
mov
mov
cwtl
shrb
pop
mov
jno
repnz
or
jns
inc
add
xchg
and
dec
add
add
or
pop
inc
or
and
jo
adc
xchg
xchg
pop
cmpsl
addl
stc
imul
cs
jo
xchg
inc
xor
dec
dec
shrb
inc
pop
sbb
pop
cwtl
and
call
popa
push
adc
jg
push
shrl
mov
mov
rcr
fldt
sti
jno
addr16
xor
stos
jle
inc
inc
dec
xlat
xlat
xor
or
test
pushf
dec
pusha
ljmp
and
cmpsb
push
cli
pop
cmp
not
mov
into
and
inc
inc
outsb
add
pop
in
push
roll
ja
fdivrl
icebp
aam
lock
and
mov
int
cli
add
jb
fimuls
mov
push
test
cmp
iret
pop
fildl
mov
jno
scas
mov
mov
xor
lret
pop
rcr
lods
push
inc
jne
cmp
fs
movsl
rorb
jp
fs
nop
mov
cmpsl
add
add
add
sbb
adc
jp
out
xlat
xchg
xchg
inc
jp
icebp
stos
sbb
int
sub
jo
ss
sub
xor
add
mov
jns
inc
ss
je
jnp
add
xchg
stos
add
mov
xor
cld
rcll
inc
inc
lcall
loopne
call
aad
pop
data16
push
push
lock
mov
fildl
into
scas
cmc
push
outsb
sar
ficoml
pop
cld
inc
sub
inc
xor
xor
mov
pushf
lods
push
fdivs
je
lods
or
gs
aad
pop
inc
or
xchg
push
movb
pop
cmpsb
enter
fcomps
scas
add
lods
popa
mov
pop
xor
and
call
into
or
sbb
adc
jge
inc
fidivs
push
mov
adc
cltd
adc
and
xor
dec
test
je
cmp
lret
repnz
jnp
pop
xor
pushf
movsb
sarb
xchg
out
pop
fs
add
int
inc
movsl
popl
xchg
push
xchg
dec
popf
pop
shr
scas
add
mov
vcvttsd2si
imul
fcmovu
xchg
ljmp
mov
pushf
pop
arpl
aaa
dec
fisubs
stos
cs
mov
loopne
mov
sbb
mov
mov
lea
inc
icebp
pusha
in
push
push
xchg
pop
mov
lret
in
in
divb
mov
into
aam
daa
mov
xchg
inc
fistl
jne
adc
pop
fisttps
loopne
push
add
cmp
lcall
dec
mov
mov
xor
xor
das
rorl
test
clc
adc
mov
fadd
addl
sahf
jns
lds
scas
pop
fs
scas
adc
cmp
cmc
pop
add
xchg
and
jnp
fnsave
mull
pusha
loopne
outsl
xlat
sub
sarl
ja
or
lods
out
sbb
or
sub
into
sub
mov
mov
sbb
mov
mov
cmp
push
sub
cmp
lret
inc
cltd
mov
push
rcl
lahf
mov
repz
test
xchg
in
pop
nop
inc
add
rorb
sub
es
loope
movsb
jg
rcrb
mov
loop
fs
int
jne
loopne
cmpb
loopne
mov
xlat
in
iret
int3
imul
cmpsb
dec
das
jge
cmp
insl
test
lds
dec
movsl
jbe
cmpsl
sub
pop
cwtl
mov
daa
int
lods
aad
xor
aam
push
dec
push
or
insl
in
sub
pop
and
jecxz
cli
push
ja
inc
push
adc
inc
inc
cmp
jg
out
repnz
arpl
sbb
repz
in
test
aam
bound
scas
adcb
mov
xchg
pop
mov
cmp
jge
xor
jnp
inc
adc
sbb
xor
subl
cwtl
ficompl
jp
ficoms
out
ss
push
int3
cmp
mov
in
pop
mov
fdivs
ret
cld
mov
jg
cmc
popa
jne
aaa
mov
inc
sub
enter
mov
pop
lods
mov
adc
xor
imul
xchg
lods
lds
dec
xor
inc
add
xor
daa
sbb
push
jns
inc
fiadds
data16
sbb
xchg
ffreep
xchg
stos
test
aam
repz
or
popa
cmp
cs
mov
rol
popa
adc
mov
lods
push
xchg
pop
mov
jl
sbb
pushf
les
cmp
mov
mov
lcall
inc
xlat
bound
push
sub
dec
xor
repnz
pop
sub
test
jle
pop
lcall
push
dec
call
dec
rcl
cmp
xchg
scas
mul
cwtl
cmp
mov
mov
daa
test
push
clc
inc
fistpll
mov
dec
mov
cmp
pop
shll
pop
sbb
sub
mov
fldl2t
xor
sub
clc
fdivrl
scas
imul
test
or
xchg
ja
lahf
adc
pop
out
fld1
shlb
or
jo
lahf
and
call
and
bound
loopne
cmp
daa
adc
xchg
jge
fwait
pop
out
aam
dec
outsl
stos
mov
cmpl
sub
pop
testl
test
mov
adc
pop
arpl
loop
es
mov
pop
dec
cmp
mov
loope
lret
in
repnz
adc
out
push
mov
je
imul
and
pause
mov
jno
daa
push
ss
cld
mov
sbb
notb
pop
push
mov
mov
mov
pushl
fs
hlt
in
sub
inc
stos
lea
fsubs
das
jg
xchg
test
adc
call
clc
or
pushf
push
fs
xlat
dec
xorl
add
push
loop
test
loopne
lret
mov
inc
and
xor
sub
inc
bswap
popa
scas
mov
push
mov
rcll
mov
fnsave
jns
adc
arpl
or
mov
mov
or
lret
mov
sub
out
test
xor
inc
add
ss
out
rclb
adc
adc
push
dec
ds
push
or
in
dec
xor
sahf
and
jb
cmpsb
cltd
mov
cmp
or
push
jl
or
cmp
push
repz
iret
mov
leave
push
push
rorb
cs
sub
cmp
aam
cmp
fcoml
arpl
mov
movsl
pop
and
outsb
and
in
sbb
mov
jge
dec
mov
push
fiadds
xor
jne
mov
jmp
aas
data16
std
jge
rcrb
mov
movb
or
xchg
ds
loope
fidivs
js
clc
fldcw
mov
push
fisubrs
jle
and
inc
jle
mov
in
fcoml
dec
inc
jge
mov
fadds
add
std
sti
sbb
sbb
mov
out
adc
xchg
std
push
iret
xor
insb
mov
or
test
jl
mov
jecxz
xlat
es
inc
mov
int
adc
inc
aaa
or
pop
scas
popa
jb
ljmp
test
adc
add
dec
lds
lds
cmp
cmp
mov
xchg
roll
aam
push
dec
es
sub
cmp
je
sbb
das
pop
sub
mov
imul
push
inc
jo,pt
inc
pop
dec
xlat
addb
mov
shl
cmp
hlt
shlb
adc
or
adc
lds
push
loope
inc
loop
sarl
in
mov
dec
dec
jno
xchg
inc
ss
mov
repnz
mov
jne
testb
or
pop
test
out
jl
insl
insl
inc
mov
inc
mov
mov
loopne
ja
in
popf
jge
sub
dec
sbb
rcll
push
icebp
mov
iret
sbb
mov
xchg
addb
mulps
jbe
and
xchg
ja
mov
stc
iret
fs
nop
and
scas
adc
fucomi
dec
add
int
inc
arpl
lods
mov
lds
pop
push
arpl
pop
ja
bound
lock
lock
fnsave
add
mov
arpl
mov
in
notb
adc
lahf
jns
xorb
std
xchg
popa
push
je
shll
mov
push
cmp
imul
in
xchg
subb
testl
mov
js
push
jmp
dec
insb
jno
ja
pusha
jmp
mov
dec
pusha
or
mov
jge
les
mov
mov
test
popf
imul
mov
and
push
arpl
movsb
xor
out
adc
mov
data16
xor
lahf
xchg
adc
mov
dec
mov
popf
lods
mov
push
push
pop
xchg
fcmovu
push
div
sbb
shrl
add
outsl
xacquire
sbb
xchg
mov
mov
mov
or
int3
mov
inc
pop
test
adc
ja
dec
sbb
cmpsl
dec
js
jns
push
jno
jae
xchg
and
sbb
mov
cmpsb
push
lds
pop
aas
out
mov
pop
cmp
and
aaa
mov
xadd
outsb
jle
xchg
mov
les
push
lds
mov
sub
call
rcrb
stos
gs
dec
xor
mov
fcom
iret
adc
das
push
dec
sbb
enter
and
mov
xor
sub
xchg
inc
ret
and
pop
dec
inc
xchg
inc
shrl
inc
shl
int
push
adcb
loopne
je
scas
sbb
lret
bound
fdivrs
test
push
aaa
insb
mov
sbb
mov
test
pusha
mov
scas
mov
sarb
add
loop
dec
fnstenv
lea
cltd
jmp
push
syscall
pushf
fcomip
call
push
js
inc
in
int3
push
cmpsb
xor
add
and
gs
add
push
inc
push
fadds
cmp
repz
cmp
je
pusha
sarb
xor
in
ja
xor
movsb
add
clc
scas
or
cmpb
lcall
and
push
mov
filds
xor
mov
shlb
mov
inc
or
push
jl
dec
and
push
jp
jle
ret
out
sub
dec
xchg
test
pop
clc
out
addr16
fisttpl
sti
xchg
adcb
scas
xor
push
mov
jmp
out
cmpsl
xor
out
pop
pusha
pop
sahf
imul
xlat
mov
jne
jne
dec
adc
rcll
enter
push
movsb
icebp
pop
sub
lahf
ds
inc
add
and
ds
adc
dec
imul
daa
ss
xchg
adc
cmp
lret
test
in
cld
and
add
mov
dec
ret
sbb
xor
fdiv
dec
sub
mov
adc
aaa
xchg
in
imul
add
fwait
sub
inc
int
in
mov
add
rclb
and
scas
es
jno
and
xchg
inc
test
iret
je
int3
addr16
mov
push
add
pop
mov
call
ljmp
test
xchg
sbb
jecxz
adc
add
test
mov
and
adc
pop
imul
or
into
and
faddl
pop
insb
jne
imul
add
pxor
jae
xor
lods
or
jg
and
ljmp
pop
adc
fbstp
inc
clc
fwait
add
sub
pop
ss
mov
inc
aas
fnstsw
push
sub
pop
dec
inc
xchg
je
push
and
adc
inc
gs
mov
inc
loope
test
into
pop
rolb
inc
loope
jbe
sbb
je
xchg
xchg
hlt
mov
sbb
and
jae
push
lret
cmp
sub
fidivs
out
mov
mov
adcl
in
loopne
mov
imul
movsb
adc
cmc
and
sahf
data16
cmp
xchg
out
and
pop
xlat
push
loop
mov
sahf
inc
jne
or
ljmp
xor
fs
rcl
mov
scas
push
pushf
stos
test
mov
int
movsb
mov
inc
add
fstpl
push
mov
mov
jbe
add
fwait
dec
or
stos
in
mov
jle,pn
das
test
dec
and
sbb
jecxz
fistpl
adc
adc
xchg
pop
inc
inc
cmp
jno
and
jne
lock
into
pushf
cld
ret
pop
xor
cwtl
int
stc
pop
test
movsb
sbb
subl
out
inc
dec
cs
in
xchg
aas
cmp
sub
mov
lcall
mov
sub
cmpsl
jnp
mov
cmp
mov
cmp
cmp
adc
jmp
aas
rcrb
leave
xchg
sbb
dec
jl
xchg
inc
mov
lods
mov
out
nop
jmp
popa
and
dec
pop
xchg
lods
jp
fsubs
shlb
cld
hlt
shl
repnz
adc
lret
int
inc
sub
cld
in
arpl
cld
mov
dec
jns
sbb
mov
mov
int3
out
push
cmp
inc
cld
jmp
out
adc
xchg
jbe
sarl
mov
cmpsl
jno
leave
or
std
out
les
push
adc
xor
jbe
fidivs
cli
mov
testb
dec
lret
xor
push
daa
and
sub
jecxz
adc
insl
roll
adc
sub
or
pop
pop
mov
loopne
dec
cmp
shl
fldt
mov
mov
lods
enter
add
movsb
xor
shl
jmp
xlat
mov
iret
or
push
mov
sti
out
jg
adc
xchg
jecxz
xchg
jb
dec
adc
and
xchg
sub
and
outsb
fstps
push
repz
js
mov
imul
fimull
xlat
jnp
repnz
mov
mov
in
inc
fstps
xor
jle
call
int3
iret
pop
rclb
pop
shrb
leave
xlat
sub
mov
notb
cli
cmc
icebp
inc
ss
sbb
pop
repnz
dec
push
xchg
xlat
lret
xor
inc
jecxz
stc
push
xchg
shlb
pop
ljmp
loopne
jno
pop
std
cmp
inc
in
dec
shr
das
iret
cmpb
mov
cmp
cwtl
popf
xchg
sbb
dec
lds
pushf
or
push
mov
iret
pushf
divb
fsubr
jecxz
mov
jmp
adc
ds
js
outsb
lods
pop
mov
hlt
mov
xor
dec
push
xor
shll
xchg
mov
adc
cmp
scas
mov
shrb
das
mov
push
mov
aam
and
or
movsb
and
js
pop
push
adc
fistl
dec
sbb
je
add
int3
loope
fcoml
fsubrl
mov
push
das
test
and
sarb
sbbl
adc
wbinvd
mov
mov
pop
push
push
out
inc
pop
into
icebp
bound
sbb
or
dec
imul
ret
mov
outsl
repnz
loopne
pop
push
outsb
int3
cmp
mov
out
out
sbb
insl
movsb
add
mov
enter
in
mov
out
push
xchg
bound
add
ja
jmp
subl
data16
xor
psrad
daa
cmp
imul
xchg
xor
fbstp
push
jecxz
mov
in
fldenv
jmp
add
mov
jo
loopne
and
inc
lock
sbb
test
fcomp
xchg
add
cli
idiv
mov
repnz
cmp
xlat
test
in
jl
xchg
cmpsl
gs
inc
pushf
frstor
jmp
ljmp
and
cs
xchg
push
sti
rcrb
mov
sahf
and
outsl
inc
jb
jecxz
add
clc
loop
inc
push
pop
add
loop
jl
insb
bnd
add
lock
mov
jns
push
inc
fdivrl
sub
mov
in
mov
lcall
or
pop
mov
cmp
repz
sbb
and
xlat
mov
pop
push
int
xchg
inc
fwait
sbb
add
nop
or
mov
je
mov
in
xchg
test
or
fstpl
xchg
mov
and
jbe
jmp
sbb
stos
pop
stc
and
psrlq
and
pusha
in
lret
movsl
or
pushf
add
cwtl
test
je
pop
movsb
fidivs
lods
sub
int
ljmp
mov
xor
or
inc
out
test
loop
gs
shrl
cmp
lcall
pop
les
push
in
mov
jne
fcoms
mov
inc
aad
add
dec
pop
inc
repz
dec
sub
ss
pushf
pop
addb
shrb
push
sarb
mov
push
xlat
adc
xchg
lods
es
and
std
test
jo
js
pushf
inc
push
std
je
leave
lret
jno
jg
gs
mov
mov
fsubrl
push
or
std
xchg
fcomps
mov
arpl
mov
cmpsb
test
cmpsb
fistps
out
sarl
addr16
test
cltd
int
push
lret
mov
fidivs
vaddsubpd
jo
std
mov
sub
imul
jg
dec
mov
mov
cmpsl
or
push
shrl
jno
insl
lock
jge
cmpsb
inc
or
jl
sti
iret
sbb
mov
pop
setnp
mov
int3
fmuls
ljmp
xor
fwait
xchg
adc
mov
addr16
mov
xor
inc
mov
sbb
jp
lret
push
or
mov
sahf
jo
lahf
shrl
mov
sti
cmpsl
adc
or
addb
push
xorb
pop
movsl
int3
mov
mov
lea
fcmovnbe
inc
repnz
enter
xor
push
push
aam
push
jp
cmpsl
fnop
fistl
andl
addr16
repz
mov
push
xchg
jge
sbb
xchg
or
call
js
out
push
pop
cmc
setae
ja
cli
leave
sarl
orb
add
push
daa
pop
mov
xchg
fcmovu
cmovns
lcall
into
or
push
mov
fs
in
stos
push
clc
cs
dec
cmpsl
insb
jns
mov
adc
pop
rclb
and
imul
lret
lcall
sub
cmp
mov
mov
cmpsl
sub
mov
lods
cmp
cmp
push
or
mov
inc
inc
scas
std
sbb
adc
ss
incl
xchg
scas
lock
stos
mov
push
dec
fxch
jge
repz
lret
lret
inc
test
jmp
sbb
adc
inc
mov
int3
jns
and
inc
rcrl
jmp
ret
mov
pop
clc
sbb
sbb
and
add
flds
add
push
fst
cmp
or
mov
xor
in
outsb
mov
int
popf
repz
lds
sub
les
mov
push
xchg
lods
nop
mov
push
addr16
fldcw
adc
push
inc
enter
jle
sub
add
test
fdivrl
dec
fists
fcompl
sarl
mov
inc
fwait
lcall
dec
loopne
cli
push
add
stos
jbe
cwtl
push
leave
aad
mov
add
sub
imul
ljmp
int3
mov
jbe
cltd
call
iret
inc
jno
pop
loop
cmp
mov
jo
push
in
push
add
jl
cli
inc
cmp
or
data16
or
push
aad
aam
pop
mov
jecxz
cmp
loope
fsubr
pop
pop
scas
xchg
adc
cwtl
arpl
push
cltd
mov
xor
shlb
mov
js
fld1
insl
push
fstl
jle
int3
push
cmp
mov
imul
push
sbb
sbb
scas
pop
rcrl
sub
cld
cmp
test
pop
fbld
int3
addb
or
cmp
jecxz
xchg
or
jle
pop
in
sub
movsb
fisttpll
jnp
xchg
adc
sub
btcl
fnstenv
xor
inc
sbb
and
xlat
sahf
adc
scas
dec
cmp
imul
dec
cmp
out
loop
mov
inc
pushf
loopne
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
mov
outsb
arpl
xchg
and
xchg
inc
mov
sub
clc
adc
xchg
push
scas
xchg
test
pop
inc
repnz
dec
pop
in
xchg
int
mov
xlat
jecxz
shr
stc
fstl
mov
das
stc
fwait
jl
ljmp
stos
mov
jl
xchg
sub
push
adc
mov
stc
scas
stc
out
sub
sahf
mov
scas
dec
push
mov
rcll
test
in
jnp
dec
arpl
or
mov
xlat
test
xor
mov
mov
or
shlb
outsb
clc
nop
mov
fs
push
rcll
xorl
test
ret
ficomps
push
adc
bound
push
fidivs
jbe
lods
nop
pop
mov
aaa
mov
mov
repnz
loope
popf
sub
outsb
push
cltd
sbb
push
push
dec
cs
aam
xor
scas
in
adc
orl
movsl
lods
jmp
sahf
add
sahf
mov
loop
fcmovne
pusha
pop
ret
jno
into
bound
pop
push
pop
jl
outsl
push
push
fdivs
dec
push
dec
cmp
ljmp
mov
decb
and
ds
daa
clc
ss
clc
pshufw
xchg
adc
fidivl
xor
mov
insl
call
mov
popa
push
loopne
jno
jp,pn
sbb
lret
pop
leave
imul
mov
and
jo
int
dec
in
inc
xchg
mov
sbbb
mov
sub
mov
dec
int
mov
xchg
arpl
aaa
es
testb
out
and
aas
push
ljmp
lahf
aaa
add
mov
stos
adc
mov
daa
das
lahf
push
sub
int3
mov
adc
repnz
jae
sub
jmp
push
jmp
aas
imul
hlt
mov
inc
ret
ljmp
andl
outsb
or
or
aas
pop
out
adc
scas
psubw
xchg
data16
sbb
ja
and
cmp
jp
daa
adc
inc
gs
inc
ja
and
pop
sbb
jnp
jmp
fmuls
mov
xchg
mov
xor
and
inc
aad
iret
lock
enter
insb
sbb
add
mov
out
mov
fcmovnu
dec
nop
lods
xchg
fld
pop
lods
cmp
pushf
mov
pusha
xchg
pop
cmc
div
sbb
sub
lahf
test
mov
add
mov
inc
dec
pop
lcall
jl
pop
cmp
inc
add
aam
out
push
or
loopne
daa
shrb
jle
pop
pushf
mov
int
lds
call
lea
add
lods
mov
and
dec
pusha
jg
out
aam
and
or
ret
out
ja
lods
mov
lret
fnsave
sbb
sub
mov
jle
mov
xchg
lret
jecxz
dec
gs
sbb
cmc
push
leave
inc
xchg
sbb
add
lret
rcrb
inc
movsl
jl
mov
mov
xchg
repnz
decb
pushf
mov
arpl
inc
pop
sbb
sub
inc
call
shlb
popa
mov
inc
cs
repnz
shlb
mov
fldt
mov
outsb
cmp
ljmp
int3
addr16
lcall
enter
xchg
or
cmc
daa
test
jmp
add
inc
leave
test
orl
cmp
test
cmp
sahf
dec
add
insl
jnp
int3
mov
leave
sbb
push
dec
loopne
scas
outsb
push
jecxz
je
dec
fidivs
inc
js
out
jns
dec
inc
frstor
scas
mov
daa
cmp
subb
xor
pop
inc
fistl
push
jnp
pop
dec
out
mov
fwait
roll
sub
mov
les
adc
jle
leave
pop
or
jmp
mov
sub
add
fisubs
repnz
sub
aas
dec
into
pop
fdivl
sbb
adcl
ret
and
shr
es
push
adc
aaa
fwait
adc
and
ljmp
cmp
jne
aaa
arpl
out
ret
push
xchg
in
icebp
icebp
loope
or
push
gs
mov
ja
mov
adc
idivl
lret
stos
mov
or
lret
lea
and
cmp
in
xlat
mov
lret
repz
xor
ret
je
hlt
mov
notl
ret
les
xchg
jbe
pop
and
push
push
dec
sub
nop
mov
jb
add
mov
fsubrs
hlt
jl
aad
adc
xor
cwtl
push
pop
push
int
adc
test
clc
dec
fwait
dec
int3
cmp
mov
clc
stos
pop
test
cmp
dec
sub
adc
test
xchg
jno
cmpsb
push
aam
and
outsl
mov
and
fidivl
rcll
xor
push
jbe
push
dec
je
lods
xchg
testl
and
jl
mov
ss
add
les
cmpsl
jmp
aaa
dec
scas
out
dec
jge
enter
mov
insl
push
xchg
jmp
jb
das
sbb
xchg
mov
in
xor
imul
shrb
shll
test
push
dec
jne
sbb
dec
mov
aad
push
in
aaa
std
xchg
push
into
gs
outsl
in
jae
into
inc
pop
push
add
pop
into
hlt
in
push
icebp
lahf
mov
dec
dec
orl
lods
in
loop
sbb
or
add
push
in
inc
xor
js
inc
sub
gs
pop
pop
fcomps
jl
inc
pop
imul
jl
pop
push
pop
es
or
movsl
lea
add
and
int
push
sbb
push
dec
adc
hlt
jno
rep
cli
enter
idivb
pop
lahf
push
daa
int
or
fsubr
sub
in
test
lret
lret
pop
dec
inc
or
and
jmp
call
lock
push
pusha
bound
into
stos
sub
cs
jge
dec
or
adc
or
test
fldt
add
adc
fstpt
jl
mov
sbb
fs
jo
cmp
lahf
icebp
shlb
jl
dec
or
test
in
aas
aas
fwait
lahf
sub
add
mov
mov
enter
pop
jge
mov
jle
and
lods
daa
sub
xorb
sahf
push
pop
fs
sbb
mov
pop
mov
sbb
xchg
stos
xor
ljmp
dec
inc
test
fcmovbe
jae
cli
shrl
push
adc
lds
push
sti
outsl
mov
cld
repnz
lock
negl
imul
loope
pusha
into
xchg
pop
mov
xor
adc
sbb
and
pop
mov
negl
add
jl
dec
out
lods
push
outsb
gs
leave
and
push
in
jl
bound
jo
sub
in
push
add
out
in
jl
std
icebp
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
jmp
fnsave
push
adc
adcb
adc
xchg
cmp
in
sbb
xor
pop
loopne
loop
mov
std
sub
xor
sub
fisubl
push
out
loop
push
sahf
inc
xchg
push
sub
iret
jbe
xchg
xchg
cmp
testl
xchg
nop
scas
fistpll
std
or
inc
fwait
ret
data16
int
js
mov
dec
jnp
fstps
roll
sbb
lods
xchg
jecxz
insb
inc
loop
test
inc
movsb
pop
mov
ficoml
and
cmc
push
cs
scas
jbe
inc
sbb
mov
push
rcl
mov
aam
lea
dec
add
add
sbb
mov
mov
int
lds
mov
mov
pusha
xchg
int
neg
movsb
shrl
mov
outsl
jnp
lcall
inc
push
cmp
dec
add
mov
cmp
push
add
pop
sub
jnp
jecxz
fwait
nop
xchg
xor
add
movsb
push
cmp
mov
in
dec
adcb
dec
pusha
and
xchg
fwait
push
repz
aad
mov
mov
ds
sahf
daa
mov
stos
push
cmp
xor
mov
push
mov
gs
lock
add
mov
xchg
cmp
inc
adc
xchg
sbb
out
popf
lea
lods
lds
les
ljmp
push
ret
lret
outsl
sbb
ds
ja
inc
ret
fwait
mov
addb
cmp
data16
idivb
xlat
popa
mov
sub
sub
cs
mov
add
inc
ror
xchg
cmp
jl
sub
movsl
sbb
icebp
and
fs
ja
loope
push
outsb
pop
pop
fsubs
cmp
mov
stc
cmp
add
ds
movl
lods
aaa
idivl
rol
mov
adc
push
fldenv
shll
inc
mov
xor
je
mov
sub
push
gs
rcll
dec
push
xor
push
push
jnp
xor
fs
add
inc
add
sbbl
jecxz
sbb
inc
xor
jge
test
dec
mov
or
cmc
push
or
jg
mov
mov
mov
inc
push
and
cwtl
nop
xor
adc
clc
inc
adc
mov
jmp
int
cld
aam
mov
mov
test
mov
data16
push
or
hlt
mov
adc
push
xchg
and
push
pop
xor
ret
mov
jmp
jns
into
jge
imul
pop
jmp
pop
adc
mov
pop
xchg
stc
insb
int
ss
addr16
xchg
xchg
jbe
add
scas
pop
fmull
outsl
mov
daa
rclb
mulb
aam
rcrb
fcmovne
adc
add
in
fisubrl
and
hlt
lods
lret
ret
mov
pop
and
std
cmpb
daa
leave
nop
sbb
or
js
pop
hlt
out
test
lcall
add
or
jbe
mov
inc
cmpb
xchg
jo
mov
and
push
fdivs
mov
jecxz
aas
loope
sar
pop
jnp
in
das
hlt
or
in
out
decl
icebp
repz
jo
pop
fucomip
xor
pop
pop
addr16
mov
rcl
jne
add
clc
stc
inc
pushl
or
sub
adc
adc
dec
dec
dec
lods
jb
jns
out
push
jg
in
test
shr
and
cld
push
add
xchg
or
bound
jb
and
mov
aad
dec
int
dec
stos
jl
jg
pop
sbb
jnp
dec
ss
add
jo
int3
bound
dec
or
imul
adc
insl
jp
lret
lds
outsb
je
sub
repnz
fs
insb
in
rolb
in
inc
or
lea
add
adc
std
lds
mov
in
sub
jg
and
orl
fnstsw
mov
xchg
fwait
das
test
adc
cld
filds
add
xor
pop
shll
stos
mov
inc
and
out
ficoms
pushf
push
cli
xor
cld
cmp
sahf
int
xchg
clc
add
mov
aam
repz
jo
mov
sbb
or
add
xchg
in
xchg
sarl
adcb
jnp
sar
dec
xchg
fiaddl
xchg
mov
repz
repnz
jp
xor
pop
mov
dec
rcl
jecxz
cmp
loopne
pop
out
shll
scas
addb
out
nop
cmpsl
xor
outsl
jp
jle
mov
inc
movsb
subb
ljmp
jl
and
sbbl
push
outsb
lcall
call
scas
aam
cs
xchg
pushl
or
rclb
pop
cmp
mov
add
or
cmp
dec
mov
mov
push
adc
mov
push
loop
addl
push
stos
inc
aad
outsl
clc
gs
or
push
test
push
ja
lcall
shlb
dec
or
and
and
inc
sub
stos
mov
mov
test
cmc
add
fiadds
xor
icebp
cmp
filds
cmc
lret
cli
loop
movhps
outsl
cltd
cld
insl
call
pop
sub
mov
xor
jmp
lea
add
dec
scas
insl
clc
push
movsl
xchg
and
insl
mov
adc
out
cwtl
add
in
push
jns
sarl
push
in
push
mov
sbb
bound
lahf
adc
or
xchg
lahf
cmpsb
and
clc
loope
scas
xorl
sub
fs
mov
or
xchg
mov
xchg
jp
jg
sub
xchg
mov
cld
jg
push
sub
sub
xor
test
fidivrs
and
mov
inc
add
std
popf
stc
mov
adc
test
sbb
sbb
leave
jb
shl
cmpsl
push
aam
popa
fwait
xor
loopne
push
jnp
xchg
cmp
lds
ret
pop
xchg
pushf
dec
adc
sub
les
or
shll
jp
mov
loop
stos
mov
add
and
and
loope
xlat
mov
pop
jmp
das
cwtl
mov
outsb
loopne
sbb
jne
jl
xadd
cld
push
inc
and
daa
repnz
hlt
test
lcall
fmulp
mov
or
mov
call
push
testb
insl
aaa
insl
outsb
icebp
inc
mov
xor
jle
dec
rcrl
xchg
lahf
hlt
insl
stc
mov
xor
xor
popf
add
xor
or
aaa
insb
lea
inc
cli
ret
out
inc
arpl
mov
jg
xchg
addr16
or
rorb
pop
sub
mov
dec
mov
or
mov
mov
shl
shl
mov
mov
jmp
test
fcoms
adc
out
pop
or
ja
and
pop
pop
cmp
mov
bound
pushl
push
xor
pop
jl
popa
insb
push
push
pop
xor
adc
jnp
add
add
lods
leave
iret
jmp
mov
jmp
fidivrl
or
or
dec
fdivl
dec
jb
xchg
mulb
lds
ret
push
aaa
xchg
push
ret
loopne
jg
stos
push
fcoms
jg
call
xchg
pop
pop
and
jns
ret
xchg
cmc
add
mov
pop
mov
add
cld
fidivs
je
mov
xchg
add
mov
outsb
push
hlt
ds
rcll
push
xchg
repz
xchg
subb
adc
pop
iret
sti
jns
sbbl
push
mov
and
cmp
popf
sub
popf
mov
addr16
imul
in
jo
mov
cwtl
push
js
or
test
mov
iret
xchg
stos
and
out
pop
mov
sub
aas
imul
sarl
into
imul
adc
sahf
add
ja
out
dec
decb
push
xor
cmp
xchg
inc
dec
or
es
inc
and
or
addb
popf
mov
shr
gs
xlat
push
jae
push
fdivrl
scas
mov
addr16
mov
xchg
or
inc
fildl
sbb
add
adc
add
insb
dec
mov
std
push
arpl
stos
incb
pop
jbe
popa
jno
xor
lods
flds
jae
int
pop
cwtl
and
mov
push
adc
sbb
call
inc
or
int3
ret
add
fisubrs
push
or
in
lret
xchg
imul
addps
mov
jmpw
inc
add
popf
ss
adc
repz
test
mov
and
xor
add
sahf
add
push
dec
pop
test
loopne
test
lock
sbb
daa
mov
mov
in
sub
and
cld
decb
jo
and
daa
mov
mov
adc
adc
lcall
xchg
and
int3
mov
mov
loop
andl
jne
in
add
sbb
dec
push
cltd
fisubl
xor
sub
mov
int
mov
cmpsl
push
not
arpl
loopne
shlb
pop
xor
mov
push
push
cmp
jg
mov
repnz
shll
jns
loope
or
cmp
ss
lcall
outsl
xor
js
mov
sub
adc
mov
into
sbb
and
pop
shr
cmp
mov
popa
cwtl
stos
les
std
fbstp
jno
jno
in
into
lcall
arpl
stos
mov
jb
pop
sbb
adc
in
adc
pop
out
and
pop
daa
dec
xor
addr16
fwait
push
inc
adc
clc
repnz
imul
sbb
jp
lods
push
mov
pop
push
arpl
dec
test
mov
loop
int
cwtl
ja
aam
imul
cmp
mov
xor
and
aaa
ja
and
mov
mov
jbe
loopne
sbb
xchg
dec
mov
idivl
in
ficomps
pushf
add
sbb
pop
and
stc
hlt
test
inc
sbb
adc
lds
in
aas
pusha
gs
stos
inc
mov
adcb
add
xor
insb
mov
mov
mov
popa
das
mov
sarl
dec
cmpsl
pop
xchg
scas
lds
push
icebp
cmp
sahf
add
mov
push
sub
inc
push
sub
push
cld
loope
mov
repnz
jmp
mov
aas
sbb
xchg
dec
sub
outsl
and
sbb
adcb
popa
fs
arpl
push
daa
arpl
or
sbb
pop
loop
ss
inc
dec
movsb
mov
dec
or
pop
stc
outsb
ja
cmpsb
lods
shll
push
xchg
jno
ja
adc
test
adc
xchg
stc
test
pushf
aad
mov
mov
jb
jl
stc
xor
pop
push
nop
test
jnp
cli
sub
sbb
sbb
or
jbe
lds
xchg
adc
push
aam
mov
and
add
rorb
lcall
inc
outsl
in
and
aas
xlat
inc
int3
or
sbb
jns
daa
pop
pop
sti
loop
jmp
xchg
sub
xlat
bound
pop
inc
insb
pop
jns
rcr
fidivl
cmp
jb
pushf
pop
pop
out
dec
shr
test
jb
sub
push
sub
add
mov
negl
xchg
shlb
dec
loop
test
pop
and
mov
stc
arpl
mov
movaps
adc
cmp
mov
xchg
out
mov
xor
movsb
and
jg
mov
mov
push
test
cmp
nop
dec
mulb
inc
dec
pop
sti
dec
xchg
outsl
push
xchg
aam
mov
sub
fnstenv
cmp
sbb
js
add
int
jns
jae
pop
fmulp
sbb
lret
xor
in
hlt
aas
pop
inc
mov
adc
xchg
mov
mov
cwtl
pop
sub
lahf
insl
popl
rcll
cwtl
adc
loope
lcall
lcall
rorl
fwait
mov
or
iret
or
sub
ss
lret
mov
pop
and
sub
adc
call
sbbb
cmpsl
inc
in
push
push
int
mov
dec
xor
pop
xchg
push
scas
push
xor
out
sub
xor
cld
pusha
xchg
mov
ret
xchg
aas
jmp
popf
cmp
ficomps
jp
jle
movsl
outsl
pop
mov
sub
out
jge
in
movsb
aas
mov
shlb
inc
scas
xchg
xchg
mov
fsub
out
outsl
les
dec
movsl
mov
mov
into
sbb
fwait
dec
push
jl
pop
or
pop
dec
mov
pusha
xor
push
mov
cmp
test
aaa
cmpsb
or
jge
dec
mov
lcall
das
xlat
or
pop
cmpsb
mov
adc
je
loopne
test
mov
cli
lods
repnz
out
dec
sub
cmp
xor
mov
add
or
or
pop
cmp
data16
ss
clc
arpl
imulb
data16
idivb
iret
push
cli
sub
pusha
cmp
mov
bound
imul
inc
and
ret
inc
sub
mov
jmp
mov
and
fists
xor
pushf
sub
cli
add
push
aad
push
test
icebp
jmp
push
xor
aam
mov
aas
out
xchg
sbb
push
pop
ljmp
ljmp
ljmp
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
jmp
sti
icebp
lods
mov
outsb
fs
ret
lahf
cld
adc
mov
dec
test
push
lock
inc
jge
enter
or
sub
mov
push
loopne
pusha
out
dec
aaa
iret
adc
out
and
fidivrl
ljmp
clc
cmpsb
and
mov
movlps
add
idivl
jnp
in
gs
cmpsl
in
cltd
push
dec
cmp
in
bound
dec
xlat
cmp
mov
mov
push
sarl
and
and
jp
xchg
dec
mov
or
leave
jnp
aaa
ljmp
mov
adc
or
lahf
lcall
jge
scas
sub
and
mov
cmpsb
test
lds
pop
push
mov
and
cltd
mov
mov
mov
pushf
push
frstor
add
pusha
xchg
push
dec
fnstsw
sub
xor
cmp
jno
shlb
cmp
jg
adc
sti
inc
pop
cmp
inc
jp
int3
out
into
outsb
or
out
dec
pop
icebp
xor
or
mov
dec
xchg
scas
add
stos
leave
or
xchg
adc
dec
rcrb
jmp
sbb
inc
and
out
add
pop
shlb
mov
test
adc
jge
push
ret
test
out
incl
addr16
and
jae
cmp
loopne
ja
and
ljmp
mov
adc
outsb
xchg
out
dec
stos
sub
call
mov
fcomi
lret
test
out
add
scas
test
sub
shlb
pop
sbb
or
outsb
jns
push
mov
mov
add
jnp
inc
adc
data16
inc
mov
xchg
push
mov
in
outsl
iret
lods
mov
mov
cbtw
int
adc
mov
fdivs
mov
outsb
hlt
je
jp
idiv
and
mov
pop
loop
pop
int3
adc
mov
inc
popa
pop
mov
imul
jl
out
in
mov
cmp
cmp
fnsave
imul
jno
xchg
test
outsb
in
roll
sbb
xor
fbld
or
aam
incl
cld
mov
mov
lret
dec
inc
push
pop
gs
pushf
imul
pop
clc
in
or
out
enter
push
mov
sbb
and
cmp
fsubp
cld
push
dec
mov
jge
out
in
mov
sub
in
pusha
mov
insb
call
in
jl
xlat
cltd
xchg
mov
lahf
jmp
sbb
out
lock
adc
adc
loopne
sbbl
xchg
arpl
add
ds
pop
mov
mov
sub
xchg
enter
fld
jmp
loop
loopne
ss
in
sbbb
push
push
lea
jecxz
and
push
xchg
dec
add
inc
pop
rdmsr
out
push
arpl
push
popf
popa
xchg
aam
nop
mov
out
mov
add
out
adc
out
pop
pop
scas
mov
ljmp
or
subl
dec
push
inc
push
push
add
cld
xchg
int
sub
xor
cmp
idiv
cld
scas
push
dec
repnz
fisubrs
stc
add
daa
xchg
dec
neg
and
jg
call
cmp
out
les
mov
xchg
insb
xchg
cmp
scas
adc
xchg
call
and
inc
mov
inc
jp
cmpsb
pop
stc
jnp
mov
cmp
sbb
rcl
inc
mov
mov
sbb
std
inc
aas
fs
xchg
jmp
and
pusha
into
inc
pop
sub
into
mov
sub
gs
test
lods
push
or
pushf
jno
scas
jl
ret
jl
sbb
cli
das
pop
mov
out
mov
and
sbb
mov
test
test
ss
add
mov
mov
mov
jnp
pushf
out
imul
xor
repnz
movsb
mov
out
cmpsb
ret
or
add
adc
stos
and
pop
cmp
aas
jmp
xor
sbb
enter
or
cmp
xor
sbb
dec
dec
adc
pop
out
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
cmp
jae
xorl
shrd
movl
shr
ret
adcl
mov
xorl
xor
sbbl
and
shr
ret
xor
xor
ret
push
mov
sub
cmpl
movl
movl
jmp
movl
notl
jle
push
pushl
call
notl
andl
andl
sbbl
adcl
movl
mov
incl
mov
adcl
movl
mov
movb
sbbl
movb
and
movb
adc
movzbl
andl
mov
sbbl
sub
addl
imul
movzbl
andl
push
and
andl
mov
addl
movb
movb
andl
movb
movb
negl
mov
mov
negl
add
adcl
imul
sbbl
mov
subl
or
mov
sbbl
and
mov
movl
cmp
ja
mov
mov
mov
or
mov
mov
cmpl
not
mov
movl
jmp
movl
jb
push
push
call
dec
xor
add
mov
add
adc
xorl
xor
adc
mov
movzwl
addl
movzwl
sbbl
shr
notl
or
sub
mov
subl
movb
notl
movb
mov
orl
mov
xor
xorl
add
mov
or
mov
movzbl
and
cltd
sub
push
cmpl
not
mov
mov
jmp
mov
je
push
push
call
mov
adc
xor
neg
adcl
or
adc
pop
adcl
idiv
mov
addl
movb
addl
movb
xorl
mov
mov
negl
add
movzbl
movzbl
xorl
cltd
idiv
mov
movl
cmp
jae
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
idiv
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
sub
mov
and
xor
imul
mov
push
sub
push
movl
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
or
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
and
add
cmp
jb
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
lea
add
movl
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
xor
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
add
imul
xor
mov
div
mov
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
xor
and
mov
add
mov
add
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
push
push
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
push
mov
mov
mov
push
push
push
call
push
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
or
xor
mov
xor
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
and
push
cmpl
not
mov
not
not
jmp
movl
movzbl
je
push
pushl
pushl
push
pushl
call
sbb
adc
adc
subl
add
push
adc
mov
cmpl
mov
mov
mov
jmp
mov
movl
ja
pushl
push
pushl
push
push
call
sbb
adc
xor
mov
mov
sub
sub
xor
add
xor
or
sub
and
addl
addl
sbb
mov
shrd
shr
cmpl
movl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
push
pushl
call
addl
orl
mov
add
mov
add
mov
sub
mov
mov
mov
sub
sub
xor
movzwl
sbb
mov
neg
xor
sub
or
mov
mov
cmpl
mov
mov
jmp
movl
mov
jne
call
dec
addl
xor
sub
inc
andl
mov
mov
adc
shl
cmpl
mov
movl
movl
jmp
mov
movzbl
jle
push
push
call
mov
adc
mov
adc
xor
inc
xor
or
or
notl
add
movl
mov
cmpl
mov
mov
jmp
mov
jge
pushl
push
pushl
pushl
call
andl
or
add
xor
or
shrd
xor
orl
shr
xorl
mov
and
mov
xor
or
or
cmpl
not
mov
mov
movzwl
jmp
mov
mov
jge
push
pushl
call
movzwl
xor
movzwl
add
mov
or
mov
sub
or
addl
xor
mov
mov
and
mov
mov
mov
mov
inc
mov
xor
mov
mov
mov
mov
cmpl
mov
movl
jmp
movl
movl
jle
pushl
push
pushl
pushl
call
not
andl
adc
sub
xor
shl
orl
xor
and
shld
sub
shl
inc
mov
orl
xor
addl
xor
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
cmpl
movl
movl
not
jmp
mov
movzwl
jle
push
push
push
call
sub
adc
or
sbb
adcl
sbbl
xor
adc
mov
mov
mov
and
mov
xor
shld
sbbl
shl
xor
xor
cmp
jne
movl
cmp
movl
je
cmpl
mov
movl
jmp
mov
not
jbe
push
pushl
push
pushl
call
xor
mov
add
adc
and
adc
not
mov
subl
mov
cmpl
mov
movl
mov
jmp
movl
mov
jg
pushl
pushl
pushl
call
subl
mov
add
add
add
xor
shl
mov
xorl
xor
shr
adcl
or
mov
mov
movzwl
or
mov
mov
and
mov
mov
cmpl
movl
movl
movl
jmp
movl
ja
pushl
push
call
and
orl
subl
subl
sbbl
orl
and
cmpl
movl
movl
movl
movl
jmp
movl
je
push
call
sbbl
movl
orl
andl
adcl
sbbl
xor
subl
cmpl
movl
movl
movl
jmp
movl
not
jb
pushl
pushl
call
xorl
sbb
add
addl
subl
movl
and
push
pop
sbbl
sub
mov
add
mov
lea
mov
mov
mov
sub
and
mov
xor
or
xor
mov
xorl
xor
xorl
shr
subl
shl
or
add
mov
cmpl
movl
mov
jmp
mov
mov
jae
push
call
add
sbb
or
movl
and
movl
add
mov
mov
andl
xor
movl
shr
shl
adcl
or
push
orl
lea
adcl
push
adcl
lea
push
call
cmpl
mov
movl
jmp
movzbl
jbe
push
push
pushl
pushl
pushl
pushl
call
orl
addl
movzwl
sub
mov
movzwl
sub
mov
sub
movl
sub
mov
mov
subl
xor
subl
shr
mov
xor
shl
or
cmpl
mov
mov
mov
jmp
movl
mov
jne
call
add
sub
add
adcl
mov
or
movzwl
or
push
lea
sub
push
or
mov
mov
sbb
shrd
sbb
shr
xor
add
xor
or
sub
imul
mov
notl
mov
xor
addl
xor
or
xorl
lea
adcl
push
adcl
shl
subl
call
mov
mov
xor
shl
cmpl
mov
movl
mov
jmp
movl
jne
push
push
call
xorl
xorl
add
orl
and
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
push
call
mov
mov
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
mov
rol
mov
xor
mov
cmp
je
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
sub
mov
adcl
or
movl
mov
jne
sub
mov
adcl
mul
ret
push
mul
cmpl
movzbl
movl
push
pop
jmp
mov
mov
je
push
push
pushl
push
push
push
pushl
call
mov
sbb
mov
not
movzwl
adc
mov
mov
add
mov
xorl
sbb
mov
adc
mov
xorl
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
push
mov
and
sub
push
push
push
mov
pushl
call
test
jg
movl
movl
movl
push
dec
movl
mov
xor
mov
andl
push
notl
push
orl
push
call
sbbl
push
andl
push
and
and
push
subl
push
andl
call
cmpl
mov
movzwl
notl
movl
jmp
movl
jbe
push
push
pushl
call
neg
subl
dec
sbb
subl
xor
or
mov
sub
or
mov
mov
xor
or
cmpl
movl
not
jmp
mov
jg
push
push
push
push
call
sbbl
xor
movzwl
and
orl
xor
mov
xor
or
mov
movl
movl
or
movl
sbb
movl
mov
xor
or
sub
add
movl
cmpl
mov
mov
jmp
mov
movl
jg
push
push
pushl
call
dec
xor
inc
adc
movl
xor
add
xor
mov
adcl
movl
cmpl
mov
movl
jmp
mov
mov
jg
push
push
call
addl
mov
sbb
sbbl
mov
mov
sub
xor
xor
or
xor
movl
or
sub
sbb
mov
cmpl
mov
movl
notl
jmp
mov
movzbl
jg
pushl
call
xor
movzbl
sub
mov
mov
sub
add
adc
xor
mov
mov
mov
andl
or
or
mov
or
mov
sub
mov
mov
sbb
or
mov
xor
subl
xor
addl
and
adcl
and
cmp
movl
jne
cmp
jne
movl
decl
movl
xor
movl
adc
movl
xor
or
mov
sub
xor
movl
mov
and
mov
sub
adc
mov
orl
imul
subl
and
notl
imul
mov
xorl
pushl
or
imul
adc
xor
mov
movl
div
mov
xor
cmpl
movl
notl
mov
jmp
movl
je
pushl
pushl
push
pushl
push
call
sbb
adcl
or
mov
sbb
mov
add
cmpl
mov
mov
not
jmp
mov
jb
pushl
push
call
neg
mov
mov
xor
sbb
sub
sbb
cmpl
movzwl
mov
movl
jmp
movl
jl
pushl
call
sbb
or
addl
and
sub
xor
add
mov
sub
dec
mov
sbbl
sub
addl
or
xor
adcl
pushl
pushl
addl
call
addl
pushl
call
movl
cmpl
mov
movl
not
jmp
mov
mov
jge
pushl
call
and
add
adc
xor
movl
adc
movl
xorl
movl
movl
movl
mov
mov
xor
mov
mov
subl
add
movzwl
mov
adc
add
mov
add
adc
and
xorl
mov
orl
and
mov
movl
movl
subl
movl
orl
movl
dec
cmp
jne
and
movl
mov
xorl
mov
subl
movl
mov
subl
call
andl
lea
mov
cmpl
movl
movzbl
jmp
movl
jb
push
call
adc
sub
and
andl
mov
xor
add
sub
imul
xor
sub
lea
mov
sub
mov
sbb
mov
add
mov
mov
decl
xor
shl
and
shr
movl
or
mov
or
mov
mov
cmpl
movl
mov
movl
jmp
mov
movl
ja
pushl
push
push
pushl
call
and
xorl
add
sub
addl
addl
cmpl
not
mov
jmp
not
jae
push
call
adc
subl
and
xor
add
adc
and
mov
cmpl
not
mov
jmp
movl
movl
jbe
push
pushl
call
or
andl
and
sub
adc
mov
and
mov
mov
mov
shrd
shr
and
mov
not
mov
movl
xor
xor
andl
or
mov
sbb
mov
mov
orl
push
addl
pushl
subl
lea
andl
push
adcl
shl
orl
call
addl
lea
addl
push
mov
mov
sbbl
lea
orl
push
mov
orl
lea
adcl
mov
adcl
mov
mov
push
call
subl
push
andl
push
pushl
xorl
call
andl
mov
or
mov
and
mov
cmpl
mov
movl
mov
jmp
mov
jg
push
pushl
push
push
push
call
sbb
xor
or
mov
adc
xor
adc
mov
shr
not
shl
or
sub
mov
or
xor
mov
notl
lea
xor
mov
lea
movzbl
or
mov
cmpl
mov
movl
movl
mov
jmp
movl
movl
je
push
call
or
add
mov
or
mov
xor
inc
add
not
mov
mov
and
mov
cmpl
mov
mov
mov
jmp
movl
mov
jne
push
call
or
sbb
addl
add
orl
mov
mov
sub
sub
movzwl
sbb
mov
and
sub
cmpl
movzbl
mov
movl
jmp
movl
jae
pushl
call
add
add
movzbl
add
add
movl
add
lea
andl
xor
cmpl
mov
mov
movl
jmp
mov
jg
push
pushl
pushl
push
push
call
or
adc
xor
mov
adc
mov
movl
movl
movl
cmpl
movl
not
jmp
movl
not
jle
push
call
subl
not
orl
and
and
mov
or
mov
movl
mov
mov
add
mov
not
mov
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
shr
or
or
mov
mov
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
cmpl
movl
mov
movl
jmp
movl
jbe
push
pushl
push
pushl
push
call
adcl
sbb
sub
adc
mov
xor
mov
mov
mov
sub
xor
movl
cmpl
mov
movl
movl
jmp
mov
mov
jle
push
push
pushl
pushl
call
adcl
notl
dec
add
subl
sbb
not
sub
movl
mov
subl
mov
xor
xor
mov
xor
and
adc
mov
sub
xor
or
and
cmpl
mov
mov
not
jmp
mov
jl
push
push
call
inc
xorl
and
sub
sub
add
mov
add
xor
mov
or
movl
movl
mov
sbb
mov
add
xor
sub
adcl
mov
or
imul
adc
xor
mov
or
div
subl
sub
and
mov
movl
sub
movl
movl
mov
mov
adc
movl
cmpl
movl
mov
movzbl
jmp
mov
movzbl
jg
pushl
push
push
push
call
or
xor
or
or
mov
sub
add
inc
movl
mov
sbb
mov
movl
movl
mov
xor
mov
imul
adc
add
xorl
and
adc
sub
cmpl
mov
movl
mov
mov
jmp
mov
je
pushl
push
push
call
add
adc
neg
and
not
mov
sub
or
mov
mov
cmpl
mov
movl
mov
movl
jmp
movl
jne
push
pushl
push
call
inc
or
dec
sub
adc
adc
or
add
sub
add
mov
xor
adcl
div
not
mov
sub
and
mov
add
addl
mov
cmpl
mov
mov
mov
jmp
mov
mov
jle
push
push
call
add
add
sbbl
subl
xorl
movl
movl
dec
movl
cmpl
movzbl
mov
jmp
mov
jne
pushl
pushl
pushl
push
call
sbb
orl
movzwl
adc
add
mov
mov
add
mov
xor
add
mov
andl
xor
movl
div
add
and
mov
or
cmpl
movl
mov
jmp
movl
movl
jg
push
push
push
call
mov
sbb
mov
add
mov
movzbl
sub
subl
decl
adc
cmpl
not
mov
jmp
mov
movl
jae
push
push
push
push
call
xor
sbbl
mov
sbb
mov
inc
mov
mov
sub
sbbl
cmpl
mov
movl
mov
jmp
mov
movl
jg
pushl
call
mov
adc
mov
mov
adc
mov
mov
xor
xor
or
mov
sub
sub
adcl
mov
and
movl
movl
movl
and
movl
mov
sub
mov
orl
xor
sbb
xor
push
xor
pop
orl
div
mov
andl
xor
div
mov
or
sub
xor
mov
xor
movl
inc
mov
movzwl
sbb
mov
xor
div
imul
adcl
xor
xor
sub
imul
xor
dec
mov
adc
movl
cmpl
movzwl
movl
mov
jmp
movl
mov
jg
pushl
push
pushl
pushl
pushl
pushl
push
push
pushl
push
push
call
adc
xor
mov
adc
mov
mov
xor
mov
xor
or
xor
mov
movzwl
sub
or
or
movl
movl
cmpl
mov
movl
movzwl
jmp
mov
movl
ja
pushl
call
xor
dec
adc
movzbl
sbb
xorl
mov
and
mov
xor
subl
div
mov
sub
mov
orl
imul
xor
add
mov
or
add
xor
sbb
mov
sub
movzbl
or
mov
mov
movl
cmpl
notl
mov
mov
mov
jmp
notl
mov
jg
pushl
call
notl
adc
adc
sbb
movl
mov
or
and
notl
and
or
xor
cmpl
mov
mov
movl
jmp
movzwl
mov
jg
pushl
push
pushl
call
movzbl
sbb
add
negl
sub
dec
mov
movl
movl
movl
cmpl
movl
movl
movl
mov
jmp
mov
jb
pushl
push
push
call
mov
and
mov
neg
xor
andl
and
movl
mov
xor
and
add
xor
add
or
or
cmpl
notl
movl
mov
movl
jmp
movl
jle
push
pushl
push
push
pushl
pushl
pushl
push
call
adc
mov
add
or
sub
neg
sbb
sub
mov
inc
movl
cmpl
mov
movl
mov
jmp
mov
mov
jne
push
pushl
call
decl
decl
sbbl
and
movl
movl
movl
xor
mov
shr
xorl
sub
cmpl
movl
mov
mov
mov
jmp
mov
movl
jbe
pushl
pushl
call
add
xorl
mov
sbb
and
adc
or
xor
mov
lea
sbbl
push
adcl
call
addl
mov
adc
or
cmpl
mov
mov
jmp
movl
movl
jbe
push
pushl
call
sub
mov
xor
or
sub
imul
negl
sbbl
and
mov
orl
or
xor
and
lea
adc
mov
movl
movzwl
xor
movl
movl
xor
xor
or
movl
movl
and
movl
cmpl
mov
not
movl
movl
jmp
mov
notl
jg
push
call
sbb
orl
xorl
add
xor
xorl
xor
xor
xor
mov
sub
or
movl
sbbl
movl
mov
mov
mov
sub
xor
mov
sub
and
cmpl
movzbl
movl
jmp
movl
movl
je
push
push
push
push
push
call
sub
or
notl
sub
xor
add
add
mov
sbb
sub
and
sub
or
mov
sbb
lea
mov
mov
add
mov
add
mov
mov
imul
sbbl
and
cmpl
mov
mov
mov
movzbl
jmp
notl
mov
jbe
pushl
pushl
pushl
push
pushl
pushl
call
xorl
add
movzbl
adc
not
or
imul
mov
lea
mov
addl
movl
movl
movl
movl
mov
sbb
mov
or
mov
movl
xor
andl
xor
sbbl
mov
call
cmpl
movl
movl
movzbl
movzwl
jmp
movl
movl
jb
call
sub
and
and
add
adc
subl
sub
sbbl
mov
mov
sub
mov
mov
adcl
xor
xor
mov
call
xorl
or
or
sub
mov
or
mov
andl
xor
xorl
xor
mov
call
mov
cmpl
movl
mov
movl
jmp
movl
jbe
call
or
xor
inc
or
andl
cmpl
notl
mov
jmp
mov
movl
je
push
pushl
call
mov
mov
and
sbb
not
mov
sub
sbb
or
and
mov
movl
mov
mov
xor
xorl
xor
addl
mov
mov
xor
mov
xor
or
mov
sub
mov
movl
mov
mov
movl
call
cmpl
mov
movl
mov
jmp
movl
movl
ja
push
push
call
and
addl
adcl
movzbl
xor
or
mov
adcl
or
mov
or
subl
push
push
subl
push
andl
push
orl
call
movzbl
mov
cmp
movl
jne
mov
sub
mov
mov
xorl
mov
subl
xor
xorl
xor
mov
call
adc
mov
add
mov
xor
mov
mov
incl
xor
addl
xor
xorl
mov
xorl
call
or
and
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
mov
sub
mov
xor
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
sub
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
or
mov
xor
mov
sub
mov
mov
sub
mov
xor
mov
div
mov
xor
div
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
notl
jmp
movl
mov
jle
pushl
push
push
pushl
call
negl
addl
orl
adc
sbbl
sbbl
not
push
push
not
mov
or
movl
jne
cmpl
movl
mov
mov
jmp
mov
jl
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
sbb
and
or
xor
xor
mov
sub
add
add
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
je
add
mov
mov
pop
pop
movl
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
shld
shl
ret
xor
mov
addl
xor
and
shl
ret
xor
xor
ret
