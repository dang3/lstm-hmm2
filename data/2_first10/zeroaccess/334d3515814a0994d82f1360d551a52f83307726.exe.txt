push
mov
sub
push
add
push
adc
push
adc
xor
sbb
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
push
mov
pop
push
call
push
andl
push
push
push
push
xorl
push
sbbl
call
push
addl
push
push
push
sbbl
push
push
push
incl
call
addl
dec
movl
jne
push
sbbl
push
push
andl
call
test
je
mov
adc
imul
mov
mov
movl
mov
movl
cmp
jne
addl
movl
pushl
subl
pushl
andl
pushl
xorl
call
mov
mov
or
mov
xor
mov
mov
sub
movl
lea
xor
mov
lea
mov
addl
mov
mov
adc
mov
mov
add
mov
mov
xor
mov
xor
mov
adcl
add
movl
mov
mov
movl
cmp
movl
jne
mov
mov
mov
xor
add
mov
xor
mov
movzbl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
xor
dec
mov
jmp
mov
or
mov
xor
add
or
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
mov
xor
or
adc
mov
xor
xor
mov
sbb
mov
xor
mov
mov
mov
sub
mov
orl
mov
movl
add
mov
xor
add
mov
add
mov
andl
mov
adcl
xor
xor
sbbl
add
movzbl
and
mov
xor
lea
cmp
ja
or
mov
mov
xor
mov
sbbl
xor
andl
lea
subl
push
sbb
mov
xorl
xor
lea
orl
push
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
mov
andl
pushl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jb
xor
lea
mov
mov
decl
xor
xor
sbbl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
movzbl
sub
mov
mov
xorl
xor
lea
mov
cmp
movl
jbe
add
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
adc
mov
mov
xor
mov
sub
andl
xor
mov
not
mov
movl
cmp
movl
jne
addl
lea
andl
mov
lea
addl
mov
mov
xorl
test
movl
je
adc
mov
mov
mov
sub
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
sub
cltd
mov
mov
mov
or
add
mov
adc
andl
subl
xor
xor
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
push
call
mov
dec
mov
jmp
not
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
negl
add
mov
mov
movl
adcl
xor
addl
mov
mov
xor
movl
mov
cmp
movl
jne
mov
mov
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
negl
mov
movl
mov
andl
xor
add
movl
adc
andl
xor
addl
xor
movl
cmp
movl
jne
cmp
jne
mov
addl
mov
andl
xor
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
addl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
xorl
add
movl
jmp
movl
mov
movl
cmp
je
mov
mov
orl
xor
add
cmp
je
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
movl
mov
mov
mov
adcl
pushl
addl
mov
pushl
addl
add
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
add
mov
mov
orl
pushl
call
mov
mov
movl
mov
movl
jmp
adc
mov
sub
mov
andl
xor
subl
add
cmp
jne
add
mov
movzwl
sbb
mov
adcl
mov
xor
sbbl
add
cmp
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
andl
push
xor
movl
add
xorl
push
xorl
push
andl
pushl
adcl
pushl
sbbl
call
add
mov
mov
sub
mov
or
mov
sub
mov
adc
mov
xor
mov
sub
add
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
incl
mov
mov
mov
mov
mov
mov
mov
sbb
movl
mov
xor
decl
add
mov
sbb
mov
mov
or
mov
mov
and
mov
mov
push
sbb
pop
orl
sub
add
xorl
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
mov
lea
lea
xor
cmp
jne
mov
xor
mov
mov
mov
mov
xor
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
mov
movl
movl
movl
movl
mov
mov
mov
andl
mov
movl
mov
mov
xor
mov
orl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
xor
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
movl
movl
pop
jmp
xor
inc
ret
push
mov
push
movl
movl
mov
addl
mov
add
xor
cmp
movl
jne
add
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
xorl
push
adcl
push
addl
push
push
andl
lea
push
push
adcl
call
push
call
sub
movl
xorl
movl
mov
mov
xor
mov
xorl
add
mov
sbb
mov
test
je
mov
mov
orl
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
sbb
imul
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
add
movzbl
and
xchg
sbb
mov
movl
sub
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adc
add
mov
sub
mov
sub
xor
add
mov
sub
mov
mov
xor
xor
add
add
mov
movzbl
sbb
mov
mov
adc
xor
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
or
mov
orl
sub
addl
lea
xor
andl
xor
movl
cmp
movl
je
sub
mov
xorl
xor
adcl
add
cmp
jne
orl
pushl
call
movl
cmpl
je
cmpl
jne
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
inc
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
add
cmp
movl
je
adcl
pushl
addl
pushl
negl
call
mov
xor
mov
add
mov
subl
xor
subl
add
cmp
je
or
mov
mov
adc
mov
mov
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
jmp
or
xchg
xchg
pushf
cmp
add
jl
pop
jl
adc
and
imul
xor
fsubp
push
dec
imul
bound
iret
pop
dec
and
dec
jg
jb
jg
movsb
cmp
ljmp
cld
push
jg
in
cmp
mov
mov
mulps
fldl
lock
sub
dec
push
sub
mov
test
jmp
lret
sbb
jp
arpl
lcall
xor
cmpb
jae
fsubrl
push
jecxz
mov
mov
out
push
dec
push
and
cmp
lods
dec
int3
cmpsl
xor
push
pop
std
push
pop
movsl
stc
push
cli
inc
add
outsb
ss
js
cmpsl
test
sub
add
sbb
xor
adcl
mov
mov
je
in
cmpl
shll
scas
mov
mov
or
cmp
xchg
popa
movsb
loop
mov
push
sbb
jb
cwtl
roll
or
mov
sub
scas
jb
dec
loope
repnz
imul
pushf
call
and
mov
inc
and
std
imul
dec
enter
shl
inc
cmp
repnz
sub
js
pushf
stos
fisttpl
mov
in
out
jns
xor
test
int3
pop
enter
repz
test
ja
loope
aad
ror
shlb
loope
and
cmp
xchg
sub
mov
mov
cwtl
dec
jecxz
imul
xchg
in
imul
mov
and
inc
pusha
inc
mov
mov
test
mov
adc
jp
shrl
dec
pushf
dec
mov
mov
sub
xchg
arpl
das
mov
and
mov
or
inc
int
out
andb
aaa
pop
sti
js
stos
sub
mov
and
xchg
notb
dec
dec
cmp
pop
cwtl
add
xor
sbb
test
mov
adc
dec
mov
jmp
sub
ret
pop
jns
and
test
inc
pop
shlb
lret
sub
ljmp
aas
push
xchg
nop
pop
add
les
clc
xchg
add
test
mov
and
dec
dec
pop
jbe
lods
mov
dec
popa
push
outsb
sbb
inc
sub
adc
lcall
push
arpl
mov
pop
push
test
sub
pop
mov
mov
pop
xchg
jmp
fucom
lea
test
ljmp
pop
xor
in
arpl
shrl
lret
stc
sbb
sbb
fcompl
xor
xchg
push
das
outsb
push
jg
lods
dec
gs
inc
test
pop
rol
mov
int
cltd
mov
jbe
mov
pop
xor
xchg
lcall
ljmp
and
outsb
sbb
mov
jbe
iret
adc
out
mov
sahf
push
adc
in
mov
push
dec
out
sub
xor
les
inc
enter
test
push
jg
repz
fidivs
push
ja
push
inc
fwait
test
xchg
jmp
mov
pop
cmpsl
and
jg
fstpt
sbb
adc
test
aas
icebp
inc
jl
and
outsl
pop
xchg
shlb
insb
sub
popa
jp
ret
jnp
push
pop
push
xlat
mov
cld
and
icebp
outsb
cmp
mov
scas
pop
sbb
out
cmpsl
cli
test
stc
popa
inc
mov
ret
clc
xor
pop
adc
pop
jbe
in
inc
cld
repz
andb
xchg
mov
ds
ds
mov
push
sarb
mov
inc
pop
jo
orl
fmulp
sbb
into
lock
out
hlt
push
pushf
pop
andl
push
mov
in
lock
pop
mov
sub
cmc
push
push
mov
fsubs
xlat
std
dec
and
and
les
subb
add
ret
test
add
and
push
pop
cmp
cmc
push
sub
xor
push
ljmp
stc
sub
cmp
xor
nop
cmpsb
cltd
push
lds
packsswb
dec
pusha
clc
inc
xchg
add
lret
jno
orb
push
push
push
add
push
inc
test
sbb
sbb
xchg
jno
or
add
sub
das
xchg
push
pop
andl
fistpll
or
pop
stc
xor
out
loop
and
lcall
inc
mov
adcl
or
ljmp
pop
push
mov
xrelease
dec
add
adc
in
fbstp
lret
mov
and
mov
mov
sbb
or
push
mov
add
mov
imul
adc
push
add
pop
ret
pop
xor
rclb
cli
mov
dec
xor
lea
cmpsl
repz
ds
movsl
subb
mov
fucomi
fwait
imul
in
testb
in
sub
and
pop
dec
test
sbb
jmp
enter
lds
testl
jae
aad
arpl
sbb
jne
movsl
inc
mov
out
inc
cld
in
mov
mov
adc
subl
test
inc
push
pop
mov
inc
repnz
push
test
ja
sbb
and
sbb
popa
mov
push
pop
mov
ja
pop
lret
jne
jecxz
or
mov
push
loope
mov
lahf
cmp
xor
inc
pop
inc
rcrb
aas
mov
xchg
imul
and
pop
sub
sahf
call
cld
ljmp
cmp
adc
in
add
imul
jl
cwtl
dec
or
or
xchg
jle
xor
sbb
mov
fsubrp
lds
out
aam
daa
pop
out
adc
sahf
movsl
cmpsl
mov
mov
cs
mov
hlt
or
pusha
push
les
dec
mov
shl
popf
jg
inc
lock
jmp
xor
adc
jl
jbe
aas
sub
movb
mov
add
add
pushf
jnp
xchg
jp
mov
fsubrp
sbb
jnp
lds
jno
arpl
sub
aad
inc
fwait
add
pop
mov
popf
inc
jg
movsb
mov
jmp
ss
fwait
sub
adc
popf
faddl
sbb
dec
mov
rol
xor
push
hlt
js
cmp
cmp
xor
stc
inc
int3
jne
negb
inc
cltd
mov
shl
das
bound
mov
push
xchg
stos
adc
push
andb
xchg
dec
sub
pop
jmp
pop
xchg
lret
mov
inc
or
or
xor
lods
adcb
push
call
add
xlat
cmpsl
lock
jl
adc
xchg
jle
inc
movsb
mov
lock
jns
ja
mov
int3
popf
stos
mov
pusha
inc
adc
and
mov
cmpsb
sub
insl
jnp
sbb
in
jge
dec
cs
fdivrl
pop
sti
rolb
mov
xchg
aas
cmp
and
sbb
popf
adc
sti
pop
add
outsb
in
loopne
stc
mov
pop
and
into
xchg
es
inc
pop
aaa
out
orb
testb
jge
mov
pop
adcl
bound
mov
into
cld
in
test
and
sbb
pop
je
jp
lock
sub
cmpsl
hlt
dec
xchg
push
and
lods
push
popa
mov
sti
sahf
xchg
arpl
jne
neg
iret
cltd
jl
mul
inc
rol
mov
jmp
clc
mov
scas
test
ret
xlat
xlat
popf
loop
pop
lods
dec
gs
sbb
or
in
ret
cmp
test
test
cmpsb
xchg
outsl
mov
jmp
push
push
rcr
xor
jmp
xor
or
mov
or
jg
adc
roll
mov
and
into
sub
cmp
pop
inc
push
je
pop
and
lods
and
cmp
add
popf
or
sbb
jle
lret
es
add
jae
popf
gs
cmp
pop
icebp
dec
push
mov
and
sar
movsl
call
jp
das
jp
test
lods
dec
fmull
mov
xchg
mov
adc
mov
add
sbb
push
ret
test
gs
ds
stos
sbb
leave
lds
int3
aas
or
mov
loop
aam
std
push
pop
inc
in
ret
xlat
rcl
rcrb
xchg
hlt
fadds
lds
aaa
inc
orb
inc
mov
xchg
in
push
sbb
ror
inc
inc
dec
pop
push
adc
hlt
mov
test
daa
dec
cld
out
out
pusha
rcl
bound
xor
adc
arpl
mov
jmp
fcompl
shll
mov
popa
enter
test
sahf
mov
or
pop
scas
adc
inc
loope
or
jmp
int3
mov
add
cmp
or
xor
cmp
add
cmp
inc
xorl
mov
pusha
mov
rorb
xor
das
daa
sbb
pop
ss
adc
jp
std
cmp
lret
inc
pop
inc
jmp
cmp
add
and
dec
cwtl
mov
test
ss
fs
sbb
fadd
sbb
push
and
addb
inc
call
xchg
mov
orl
ljmp
mov
movsb
add
lods
add
cs
xchg
test
xor
repz
stos
enter
test
sbb
stos
addr16
xchg
mov
rorb
test
negb
adc
push
fiaddl
into
cld
aad
mov
mov
cltd
or
jecxz
xchg
ljmp
xor
mov
out
pop
bound
and
loope
sub
addr16
or
sub
xor
out
mov
or
loopne
ror
out
ds
rclb
lret
ljmp
add
push
push
int3
jl
shrb
dec
out
loope
xchg
and
std
push
shlb
mov
or
or
fidivl
mov
in
shlb
addb
shll
mov
pop
in
push
aas
jecxz
xchg
outsb
push
jle
popa
and
leave
aas
inc
ret
je
ljmp
movsl
int
pop
test
sarl
shll
das
cmpsl
mov
mov
pop
push
jmp
lock
movsb
pop
cwtl
ljmp
sbb
sbb
sbb
std
aad
xor
sub
popa
nop
mov
mov
in
pusha
adc
push
call
fs
pop
loope
add
jno
lcall
mov
sub
adc
imul
je
pop
nop
and
pop
mov
mov
adc
jno
outsb
andl
gs
fs
cltd
aas
push
ss
fwait
ja
pop
xchg
pop
lcall
fs
adc
mov
xchg
sub
push
mov
roll
jne
adc
sahf
sahf
jl
cmc
mov
push
pmuludq
test
mov
loop
stc
out
inc
sbb
loop
lods
jne
lods
je
sub
mov
test
sbb
and
sub
pop
fucomp
mov
and
cltd
add
mov
stc
pop
into
add
xor
mov
adc
les
in
adc
daa
push
pop
dec
mov
adc
jne
lods
push
jnp
mov
xor
insb
outsb
xchg
push
push
lret
jmp
in
xchg
ljmp
sbb
fcoms
pop
aam
stc
lret
or
test
mov
adc
sbbb
popa
push
xor
jnp
xchg
fldz
dec
pop
shll
clc
addr16
cmpsl
xchg
pop
cmp
ficoml
jecxz
negl
mov
bound
scas
mov
fcompl
pusha
loope
aam
mov
out
fdivr
xchg
xchg
or
inc
jle
aas
in
imul
dec
daa
jae
push
push
adc
in
shll
jle
xchg
cmp
icebp
cs
xor
xchg
jecxz
repnz
pop
aas
push
sti
fnstcw
test
sar
pop
jnp
mov
add
jp
cld
cmc
scas
mov
lret
pop
or
xor
cs
std
jmp
outsb
or
addr16
popf
lods
imul
aam
sub
lods
pusha
cmp
je
rorl
inc
lods
jge
in
and
xchg
das
outsb
movsl
or
xchg
add
div
mov
jbe
jg
fwait
gs
enter
and
mov
pop
roll
mov
xchg
mov
scas
xlat
pop
cld
bound
jno
dec
push
or
into
push
dec
ret
pop
in
fwait
mov
cmpsb
int
das
inc
imul
adcl
insl
inc
xor
scas
fidivl
insb
pop
mov
adc
hlt
push
mov
sub
in
push
xchg
push
int
pusha
incl
sub
imul
leave
dec
mov
pop
movsb
clc
jo
sbb
pop
add
sbb
stc
jbe
popa
inc
jns
in
or
ljmp
xlat
cwtl
mov
scas
aas
sbb
or
push
xlat
and
mov
push
test
aad
leave
int3
fucomip
pop
in
mov
ret
aas
xor
js
nop
std
and
add
imul
xlat
inc
adc
jge
stos
jp
push
es
into
lea
loope
inc
ja
mov
stc
fstpt
pop
push
jecxz
sub
out
jecxz
lds
js
stc
scas
jmp
cmp
ret
mov
push
out
test
notb
mov
sub
push
mov
sbb
sub
ja
fs
ret
dec
cmc
mov
add
cmpsl
scas
cmp
and
jno
pop
outsb
mov
das
adc
test
xlat
and
inc
in
aas
pop
imul
sbb
lods
sub
call
xchg
mov
scas
jg
mov
dec
pop
add
or
jecxz
popf
push
or
adc
or
xlat
int3
push
push
into
or
xor
and
into
cld
dec
ret
lods
jno
test
pop
sbbl
jecxz
cmp
loope
addr16
fs
mov
sub
bnd
sub
xchg
std
and
sti
clc
pop
je
mov
bound
pusha
andl
lock
aaa
clc
cs
outsb
mov
clc
fs
or
int3
mov
cmp
mov
fnstsw
push
dec
or
cmp
test
sub
pop
testb
inc
ss
mov
inc
and
cmpsl
mov
jae
outsl
cmpsl
fsts
or
sbb
mov
push
ret
andb
insb
pop
mov
or
jg
add
sbb
outsb
mov
test
sar
pop
pop
inc
stos
mov
test
pop
adc
xchg
dec
pop
pop
lods
cmp
sbb
test
into
jle
in
movsl
fwait
mov
jae
mov
sahf
push
cmpsl
push
fs
sbb
es
out
adc
inc
lret
hlt
inc
stc
sbb
lock
lcall
mov
cld
xchg
and
mov
and
mov
jae
xchg
hlt
mov
loop
imul
jo
ds
shrd
lret
repz
sarb
les
push
subl
scas
mov
pop
mov
xor
xor
jo
dec
add
push
mov
scas
ja
js
in
fstps
mov
xchg
add
inc
pushf
sbb
jmp
jbe
pop
pushf
imul
int3
cs
mov
sub
imul
push
pop
push
lea
stos
mov
jle
mov
cmp
jno
outsb
sarl
test
sahf
out
cmp
cmp
movsb
push
hlt
mov
dec
cmpsb
mov
sbb
repz
in
or
adc
test
negb
shll
enter
jb
fcoms
ds
shl
xor
sbb
in
shll
pcmpeqw
cmpsl
and
cmp
pop
jle
cs
cli
dec
addr16
mov
out
aad
xor
dec
in
mov
leave
call
push
dec
and
xchg
sub
stc
repnz
bound
push
js
aas
ljmp
jg
push
andb
and
mov
sbb
mov
out
push
cli
loope
in
and
into
ret
ret
and
inc
mov
xor
fisttpl
cmp
icebp
xor
pushf
or
or
push
cmpsl
jmp
in
inc
mov
sub
xor
add
xchg
push
cmpsb
jecxz
das
or
lods
shlb
and
ss
fbld
lods
ds
pop
xchg
jb
pop
xor
into
xor
jo
dec
int3
dec
test
fistpll
loope
inc
dec
lods
incb
scas
out
cwtl
mov
xchg
ja
ljmp
mov
call
addr16
call
wbinvd
jl
scas
nop
out
push
sbbl
lret
xor
inc
mov
add
pop
lcall
sub
inc
idivl
fimuls
insl
inc
cmp
cld
rorb
faddp
popa
mov
sbb
out
adc
jge
daa
cmpsb
jo
popf
mov
cmp
ja
xlat
data16
frstor
pop
pop
out
cwtl
popf
orb
jnp
xchg
jbe
pop
sub
jnp
das
jmp
or
stos
ret
inc
adc
int
dec
inc
in
adc
pop
leave
lods
push
sub
mov
in
dec
arpl
insb
mov
pop
sbb
movsb
mov
add
in
sbb
adc
xchg
cmp
test
mov
lea
cmp
jns
shr
dec
jmp
ja
gs
int
inc
adc
in
jns
pop
fsubrl
outsb
out
inc
and
out
insl
idiv
imul
arpl
cld
inc
mov
xor
cmp
pusha
xchg
cmpsb
int3
std
mov
sbb
test
iret
dec
add
cmp
jno
dec
jne
clc
xlat
aas
mov
xor
dec
mov
jne
enter
mov
rcll
mull
and
add
jecxz
xor
imulb
mov
inc
dec
imul
and
sub
lcall
divl
pop
loop
sbb
cmp
mov
mov
outsb
xor
xor
popa
inc
aas
mov
cmpsb
xchg
dec
dec
mov
leave
insl
lret
lcall
pop
xorb
pop
je
adc
sarb
enter
add
jbe
pop
scas
cmpsl
xor
and
push
cwtl
mov
or
dec
inc
out
gs
xor
js
add
xchg
mov
je
scas
cmp
mov
sub
je
lahf
pop
push
test
mov
jb
fbld
sbb
mov
mov
rorl
sahf
xchg
aam
aas
call
jnp
in
shlb
jmp
dec
xor
xor
in
cmp
popf
push
dec
push
pop
cwtl
sbb
cmp
mov
dec
mov
push
adc
call
push
roll
cs
adc
dec
aam
xor
imul
aaa
test
sub
sbb
add
and
sbb
jb
addr16
jl
test
xor
push
jle
and
insl
cmc
mov
dec
pushf
inc
into
push
push
xor
cli
add
mov
movsb
pop
test
movsb
out
popf
mov
loop
sub
out
mov
jne
dec
inc
daa
das
or
jl
out
xchg
mov
in
jle
das
pop
scas
sbb
sub
mov
xor
mov
in
push
ja
shlb
fnsave
out
inc
xchg
pop
loop
jle
inc
lods
outsb
shrb
xchg
test
mov
imulb
fadd
arpl
or
pop
sub
sbb
dec
fists
jg
cwtl
je
gs
mov
mov
insl
jne
sub
pop
cmpsb
cmp
mov
outsl
jae
sets
cmp
xorb
stos
push
in
ss
pop
sti
mov
ss
inc
lock
mov
mov
pop
push
je
bnd
xor
mov
inc
cmp
mov
mov
movsb
cld
add
in
or
pop
sbb
aad
jnp
or
dec
mov
test
mov
add
xchg
in
add
in
jl
jae
or
mov
pushf
int
lock
mov
xchg
stos
loop
lcall
js
sbb
push
inc
or
mov
ficoms
or
imul
push
mov
jae
sbbb
imul
sarl
in
sbb
xlat
push
lea
iret
pop
xchg
pause
mov
outsb
in
adc
lock
or
dec
or
into
xchg
subb
or
dec
mov
dec
sub
mov
add
jae
das
jno
lds
iret
push
mov
lcall
jae
or
push
fildl
aaa
and
or
lock
jmp
lahf
int
leave
and
mov
movsb
mov
lcall
jns
out
in
lret
jnp
jnp
aad
pop
inc
imul
lret
lcall
fwait
movsb
add
mov
stc
pop
outsb
jle
ja
bound
rorl
mov
or
insb
push
out
mov
cmpsb
xor
inc
sahf
in
mov
inc
scas
out
or
ja
notb
roll
iret
js
xor
mov
sbb
and
and
cmp
mov
sbb
mov
pop
pop
int
pop
sbb
in
js
leave
icebp
mov
frstor
pusha
inc
pop
pop
adc
or
outsb
cmc
cmp
mov
jge
das
mov
push
mov
rcr
push
clc
jno
int3
xchg
mov
iret
mov
scas
nop
mov
push
jl
leave
shll
movsl
movsb
imul
in
pop
mov
mov
adc
test
push
fisubs
mov
sti
out
push
bound
rcrb
pop
sbb
jnp
dec
xor
inc
hlt
push
hlt
arpl
fwait
cli
ss
imul
and
sub
fwait
xchg
insl
or
cmp
out
int
test
out
push
cwtl
xchg
lea
pop
sahf
cli
arpl
ret
push
test
mov
add
sti
push
mov
das
aaa
mov
mov
testl
and
loope
add
roll
mov
idivl
mov
in
nop
in
sbb
bound
pop
jp
test
push
pop
in
mov
scas
rcrb
adc
lret
cmp
dec
inc
subl
inc
adc
inc
je
mov
aam
enter
je
addr16
dec
dec
lret
adc
clc
rorb
test
cmp
ret
out
sbbl
add
test
fiadds
inc
mov
cld
and
sti
fstpt
pop
inc
cmpsl
cmp
fisubs
lret
xchg
ss
lds
jge
mov
pop
add
push
andb
xorb
and
dec
and
out
add
enter
or
cmp
cmp
and
pop
ss
and
out
xchg
mov
sbb
dec
sbb
les
imul
push
dec
jmp
movsl
negb
leave
clc
test
push
int
mov
mov
xchg
and
pop
xchg
fxch
push
icebp
pop
jge
lea
xchg
cld
jno
fs
inc
aad
iret
fldt
push
mov
adcb
gs
jne
jmp
pop
and
jmp
test
mov
push
out
or
mov
pop
out
jecxz
or
cld
and
inc
ret
pop
push
in
xor
cltd
or
fcomp
pop
lret
cmp
sbb
cmp
push
ret
stos
sti
mov
sbbl
lret
sub
jae
push
push
add
icebp
mov
dec
cmp
pop
out
jmp
movsb
sbb
std
movsb
int
jl
icebp
ja
mov
xor
mov
dec
rolb
rorl
mov
mov
out
push
hlt
ss
nop
ss
cli
adc
xor
adc
gs
cmp
out
cmpsb
out
popa
jo
ja
stc
mov
jg
mov
daa
loop
es
out
loop
ret
and
popa
imull
xchg
ret
sbb
andb
int3
adc
push
lods
out
jo
shlb
clc
adc
push
push
sahf
add
cwtl
and
and
je
sbb
push
pop
xchg
out
or
popa
dec
fcompl
add
sub
jecxz
inc
fstp
xor
test
aaa
pop
test
ficompl
stc
xadd
sti
call
and
mov
add
xchg
fistpll
dec
pusha
mov
adc
inc
fwait
test
mov
mov
and
in
jbe,pn
adc
jl
inc
mov
inc
xchg
into
dec
notl
ja
test
push
aaa
inc
incl
dec
ss
mov
stos
mov
xor
out
in
jmp
jmp
in
rolb
pop
mov
jae
mov
repz
pop
imulb
jl
dec
add
gs
and
fdivs
pop
mov
fxch
test
iret
pop
stc
test
repz
push
sbbl
dec
cs
inc
lret
movl
pop
ret
je
jl
cmpl
pop
fstps
inc
xchg
inc
icebp
xchg
cs
popf
loop
orl
sbb
mov
mov
mov
xchg
test
jmp
lahf
inc
std
push
scas
xchg
orb
push
sub
mov
add
insb
xchg
jl
decb
in
jge
scas
dec
sbb
xchg
mov
fsubrl
and
push
loopne
pop
shrl
inc
icebp
mov
pop
clc
out
xchg
add
cmp
xor
hlt
mov
iret
pop
ficomps
xchg
ljmp
mov
pop
fwait
dec
inc
int
sub
fs
fisubs
xor
ljmp
leave
push
pop
jp
jb
or
push
cmc
mov
jo
inc
xchg
adcl
notb
dec
add
movsb
lahf
scas
data16
pushf
xchg
stos
push
arpl
mov
sarb
sub
aad
mov
mov
xor
fldenv
cmpsl
mov
outsl
hlt
add
fwait
cwtl
mov
int3
lret
sbb
cltd
into
repnz
push
push
jns
dec
lcall
adcb
or
sub
int3
sub
in
push
add
mov
lds
lret
mov
lret
xchg
add
xorl
vshufps
sbb
cs
jns
pushf
add
mov
dec
inc
pop
nop
iret
pop
inc
dec
adc
add
stos
cld
les
xchg
cld
pop
add
or
pop
stos
out
xor
dec
inc
repz
iret
mov
shlb
cli
push
cld
nop
stos
adc
gs
and
stos
jle
scas
daa
cmp
xchg
xor
test
inc
xor
mov
lds
dec
ret
in
mov
mov
addr16
mov
jb,pt
scas
cmp
mov
shr
sar
push
pop
mov
out
cmp
scas
dec
in
das
jne
insl
adc
pop
and
popa
rclb
int3
jns
pop
stos
jno
add
in
ljmp
into
jnp
xchg
jg
int3
mov
xlat
pop
nop
pusha
and
mov
sbb
mov
mov
ret
outsl
sbb
cmc
popa
gs
dec
ret
pop
mov
incl
cwtl
sub
mov
pushf
jle
xorl
mov
data16
xor
imul
loopne
jno
sar
ja
cmpsb
sbb
ret
int3
mov
dec
fstpl
insl
jo
pop
add
movl
push
mov
adc
arpl
daa
andl
sub
inc
aaa
popf
xchg
fdivrl
xorb
lock
mov
cmp
dec
rcrb
adc
ret
and
and
mov
xor
add
cld
jbe
inc
inc
aad
sbb
adc
add
push
mov
sahf
add
add
in
in
mov
shll
add
mov
push
cltd
scas
sub
push
mov
gs
addb
loop
jno
mov
mov
mov
cld
mov
sub
push
inc
mov
jae
imul
sahf
mov
fmuls
scas
jnp
lahf
sbb
test
xchg
rcl
test
xchg
popf
movsb
sbb
mulb
aaa
mov
mov
fdivrs
testl
jle
mov
andl
popa
pop
adc
jo
cs
jecxz
outsl
aas
dec
xchg
scas
or
fisubl
in
pop
rol
rcll
cmpsl
xchg
mov
movsl
enter
inc
pop
jbe
out
insl
or
push
inc
mov
lret
mov
flds
sbb
adc
and
xchg
lcall
cmp
or
sbb
pop
rcll
fwait
sbb
dec
arpl
mov
fistpll
inc
push
loop
mov
xchg
jae
imul
adc
ss
popf
push
hlt
push
fcoms
mov
inc
test
outsb
sahf
jmp
lret
jl
outsl
jne
sbb
inc
dec
lea
mov
jg
out
sbb
mov
lock
dec
jl
jbe
push
push
clc
aas
mov
les
and
dec
jno
xchg
into
cmp
lock
enter
pop
pop
js
imul
and
mov
fistl
mov
imul
push
pop
adc
and
imul
sbb
xchg
movsb
cmc
push
xchg
cmp
or
mov
jl
andb
mov
insl
and
pop
cmpsb
mov
call
into
idiv
sbb
gs
xor
jno
or
dec
clc
das
xchg
sbb
cmp
pop
jne
jl
andb
adc
mov
jmp
pop
sbb
mov
lods
inc
shr
jne
incl
fiadds
cmp
lahf
dec
pop
jecxz
je
call
fwait
adc
mov
outsb
jo
repnz
and
and
ret
sbb
test
insl
pop
ljmp
test
xchg
mov
test
mov
mov
jmp
inc
popf
rorl
rclb
imul
xor
rolb
and
add
cmpb
jecxz
cmc
icebp
adc
pushf
fwait
add
fnstcw
adc
and
shl
cmpsl
add
inc
fsub
movsl
mov
test
bound
out
nop
add
add
scas
loope
dec
mov
inc
dec
xlat
cmp
aas
cmp
jmp
addr16
inc
hlt
sub
jne
aas
jno
int
leave
ss
lcall
movntq
pop
sub
or
cmp
lcall
jl
adc
jo
inc
adc
mov
pop
jno
dec
sbb
mov
sbb
inc
ss
push
inc
cmp
aas
jb
stos
es
xor
adc
inc
dec
mov
lcall
push
bound
inc
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
movl
xor
or
mov
and
lea
mov
push
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
lea
mov
or
mov
and
mov
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
mov
addl
mov
add
sbbl
push
xor
mov
mov
movzbl
sub
mov
mov
adc
xor
mov
addl
add
movl
cmp
je
mov
movl
jmp
mov
movl
cmp
movl
jne
push
jmp
mov
movzwl
mov
cmp
jne
mov
incl
xor
add
mov
adcl
mov
mov
xor
sbbl
add
imul
and
mov
andl
xor
add
cmp
movzbl
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
jmp
imul
stos
sbb
jb
loopne
jl
dec
pop
jl
arpl
mov
pop
cmp
xchg
and
push
and
dec
or
fistl
jl
push
es
cmpsl
fistpl
jns
or
lock
add
mov
cmp
imul
lret
and
insl
movsl
imul
add
xorl
arpl
jp
jge
subb
push
xchg
movsb
call
mov
or
pop
push
or
ret
repnz
or
pop
insb
dec
lods
add
mov
movb
pop
lods
push
in
scas
scas
scas
scas
push
shlb
xlat
out
adc
pop
push
push
push
push
mov
cmp
or
movsl
sub
lret
mov
stos
and
lea
out
outsb
hlt
lds
icebp
fisttpll
cmp
lcall
mov
or
mov
rcl
sbb
pop
shr
xor
pop
out
js,pn
fstpl
push
pop
sub
mov
inc
movsl
mov
pop
inc
imul
add
or
je
subl
pop
ss
insb
cmpb
testb
add
addl
repnz
mov
cmp
mov
shrb
sbb
or
pminsw
dec
push
aam
mov
mov
das
fldl
xchg
cmc
xor
fistpl
cmp
sbb
dec
and
enter
dec
std
xchg
push
aaa
and
pop
scas
cli
imul
push
inc
add
imul
mov
add
mov
xchg
or
daa
dec
sub
or
ret
std
test
lock
push
in
push
xchg
js
sbb
sbb
sbb
int
cwtl
packuswb
xchg
in
inc
add
xor
jns
jmp
pop
jmp
cmp
frstor
shl
iret
aaa
fdivrs
and
mov
mov
cli
pop
loop
sahf
mov
out
or
loop
outsl
adc
mov
inc
sub
test
inc
rcrb
xor
or
push
imul
and
push
fsts
xor
std
adc
cmp
cmp
pusha
or
fs
push
xor
or
jno
sbb
adc
lret
dec
mov
cmp
rcrl
sub
mov
xor
add
jp
insb
push
dec
cmp
jae
pop
loope
mov
rolb
insl
out
adc
mov
jnp
je
xchg
pushf
jmp
mov
xor
aaa
or
mov
jb
aad
outsb
sbb
hlt
mov
xor
inc
dec
cs
fmul
sarl
aad
int
mov
aas
inc
cmpsl
or
mov
and
sub
ds
leave
jae
or
xchg
lds
in
and
test
leave
ja
sub
in
jnp
inc
fldenv
adc
enter
int
pop
push
mov
les
xlat
lock
repz
sub
aad
xchg
jecxz
and
scas
add
std
outsb
xchg
adc
add
andl
addr16
test
jp
pop
mov
addb
push
inc
aas
cmp
cmpl
push
jle
arpl
pop
aam
xor
cwtl
lods
sub
cmp
mov
test
pop
lods
test
jnp
rcr
dec
mov
inc
arpl
push
pop
xchg
pop
int3
iret
outsl
mov
jge
fisubrl
mov
test
cs
popa
sbb
es
xchg
push
je
test
loopne
in
pop
loopne
in
and
clc
and
mov
stos
movsb
xor
cmp
mov
jp
notl
pop
ljmp
rorl
scas
inc
mov
lods
lods
push
fnstcw
mov
in
into
push
loopne
scas
lods
and
cwtl
lock
xlat
xor
call
lods
out
mov
and
add
pop
mov
std
loop
in
psubusb
lahf
jg
pusha
testl
xor
ljmp
inc
add
push
or
pop
xchg
pop
lods
lods
js
sub
adc
add
movsl
int
fstpt
push
mov
sub
sbb
test
imul
je
int
xchg
mov
test
inc
into
add
arpl
cmpsl
push
push
scas
push
sbb
jnp
insl
push
insb
fnstsw
arpl
imul
cmp
sbb
dec
jecxz
sar
cmp
dec
leave
fistpll
inc
push
inc
dec
jne
xchg
daa
stos
mov
add
adcl
lods
pop
gs
outsb
jno
negl
jmp
je
mov
orb
xlat
icebp
dec
mov
ljmp
test
and
mov
jae
dec
aaa
mov
test
js
fsubrs
mov
out
aad
movw
or
jge
inc
in
iret
sbb
stc
inc
push
or
es
inc
imul
push
jmp
jnp
neg
insl
xchg
unpckhps
and
pop
int3
cmp
cmp
xor
sbb
cli
hlt
sbb
out
inc
mov
mov
sub
repz
mov
fldcw
int
jp
rolb
adc
les
xor
push
and
or
pop
test
insl
cmc
mov
cld
loopne
dec
mov
inc
lret
push
sti
adcl
aad
es
outsb
mov
mov
enter
dec
mov
mov
pop
mov
xchg
push
or
push
rep
cmovg
push
ljmp
push
mov
pop
mov
gs
ja
sbb
jae
icebp
sub
and
mov
loope,pn
and
sbb
and
popf
pop
lret
fs
xchg
outsb
dec
push
dec
pop
add
int3
loopne
mov
out
dec
xor
scas
mov
inc
mov
sbbb
out
xor
and
xor
pop
jge
ja
shl
lret
sub
jmp
cld
mov
aad
cmpb
outsl
prefetchwt1
sub
sbb
mov
inc
push
cmpsb
movsb
xor
xor
scas
or
lock
push
gs
xlat
mov
cmpsb
int
push
fstpt
jne
xor
xchg
jae
mov
icebp
stc
ret
sbb
mov
les
lret
iret
movsl
pop
add
xchg
pop
lahf
std
inc
fs
bound
sbb
or
mov
sub
pop
sub
repz
mov
adc
mov
mov
scas
ret
cwtl
fwait
je
cmpsb
test
ret
pushl
jns
les
out
inc
lret
aam
aaa
icebp
jb
mov
xorb
inc
jb
arpl
pop
mov
push
mov
test
out
sub
std
movsb
jb
and
xor
or
rcrl
sbb
mov
loope
out
xor
testl
lret
mov
push
insb
fimull
push
sbb
cld
fdivrp
and
insl
fcoml
out
pushf
inc
sbb
pop
clc
cmp
jmp
movsl
push
mov
inc
cmp
in
shrl
jecxz
inc
fnstsw
mov
loop
add
fs
dec
cltd
inc
aas
out
push
jg
sbb
mov
clc
fcomps
xchg
bound
imul
add
in
sub
loopne
or
ret
das
mov
cmp
jno
fdivs
out
daa
test
cmpsl
xor
sub
cwtl
xor
popf
scas
or
andb
cli
sbb
jp
jnp
std
adc
lods
sub
add
push
scas
out
gs
lock
js
sub
loopne
stc
pop
leave
cs
mov
fiaddl
jno
sbb
ss
iret
rcl
in
repz
loop
jb
cmpsb
scas
mov
mull
out
jne
lahf
aad
adc
xor
cli
jo
mov
dec
inc
jb
and
sub
xorb
sbb
sbb
jo
pop
mov
repnz
push
adc
cmpb
jge
xchg
push
lock
jae
mov
push
xchg
imul
movlps
cmp
cmpsb
rol
inc
lock
cmp
in
out
jl
lret
dec
or
mov
stos
mov
xchg
daa
sub
push
and
in
ss
inc
sub
mov
imul
and
xchg
cmc
outsb
and
je
fisubl
push
sahf
or
jno
scas
xchg
shlb
add
or
add
push
push
loope
stos
pop
mov
pop
push
incl
int3
std
mov
pop
out
mov
dec
rcrl
pop
cmp
repnz
adc
xchg
neg
movsb
and
imul
popa
mov
jae
pop
leave
add
fwait
orb
pop
mov
aas
out
cmp
mov
pusha
mov
sbb
dec
ja
dec
push
sbb
and
sahf
aad
sbb
add
xchg
loop
daa
or
mov
dec
fistpll
xor
adc
xchg
not
lods
push
push
faddl
or
dec
repz
ds
jle
out
dec
cpuid
jbe
fwait
notb
das
fdivrp
outsb
or
mov
mov
add
or
add
xor
mov
inc
call
sub
jne
sbb
or
in
lahf
out
lahf
push
push
push
cwtl
mov
sub
pop
and
ds
stc
mov
loopne
ret
in
dec
ljmp
adc
jae
les
mov
mov
hlt
out
jecxz
cwtl
loop
cmpsl
ror
popf
cs
cmp
and
push
cmp
and
jnp
cld
popa
adc
dec
xchg
mov
fwait
nop
jl
mov
jp
or
aam
test
push
or
push
out
bound
inc
or
loop
or
lea
icebp
adc
push
mov
jae
xor
lret
jbe
cs
jae
insl
es
jge
push
loope
sbbb
inc
sbb
xchg
leave
mov
push
mov
mov
add
or
xor
in
arpl
pop
stos
fs
or
sub
popf
dec
xlat
stos
pop
orl
push
mov
xor
sbb
hlt
fidivl
stos
fildl
loopne
adc
and
test
in
out
outsl
dec
pop
in
jo
aaa
push
add
mov
cmp
push
cmp
adc
xor
popf
mov
pop
sti
xor
and
add
add
sbb
out
ljmp
cltd
imul
movb
or
movsb
arpl
sbb
mov
test
push
sub
insl
sarl
loope
nop
dec
sub
outsl
orl
or
sub
mov
incb
fimuls
pop
or
cs
imul
fidivrl
inc
jno
lea
mov
pop
notb
jne
fbld
stc
ror
out
aam
insl
gs
test
and
test
sub
neg
jmp
cs
mov
in
rcrl
insb
je
mov
sbb
mov
sub
insb
es
test
scas
pop
stc
add
popf
inc
aaa
lret
push
pushf
sahf
pop
int3
mov
hlt
call
jp
lahf
out
insb
jp
and
mov
sbb
hlt
and
sbb
mov
xchg
cmpsb
xchg
test
jg
mov
dec
fwait
andb
dec
xchg
jns
popa
dec
or
add
lcall
or
and
cltd
xchg
and
mov
loope
mov
pusha
icebp
push
dec
sahf
fcoms
cmp
ds
sahf
inc
and
fists
sub
das
jne
hlt
gs
ret
xor
adc
fmull
mov
jns
add
fldl
lret
cmp
ljmp
mov
popa
fs
loop
dec
lea
push
aam
mov
mov
jmp
es
repz
pop
mov
shrl
inc
cli
and
das
movzbl
xchg
repnz
mov
arpl
sbb
pop
push
out
outsb
lahf
ds
inc
int
mov
mov
push
jmp
in
or
in
je
fcmovnu
fwait
stos
or
sub
call
inc
xor
fiaddl
test
inc
fists
fsubr
test
jge
inc
lret
cltd
inc
adc
push
aaa
pop
add
mov
add
dec
xchg
pop
cmp
std
test
xor
cmpsl
mov
and
sub
dec
lcall
shll
cmp
push
mov
outsl
std
cmpsl
push
jo
inc
and
in
iret
mov
jbe
inc
jl
adc
mov
in
mov
lahf
sbb
cwtl
add
icebp
mov
dec
pop
cmp
cmp
xor
data16
repnz
popf
sarl
es
fldt
sub
data16
push
out
in
sbb
push
cmpsb
shlb
jbe
scas
les
or
xchg
push
movsb
mov
xor
aaa
push
mov
xor
add
or
inc
in
mov
and
add
jbe
sub
lahf
dec
decb
or
popf
call
xor
inc
insl
orl
mov
insb
sub
into
push
xor
int3
xchg
pop
repnz
xor
and
mov
push
xchg
adc
clc
jnp
ds
or
sbb
loope
div
adc
xchg
sbbb
inc
insb
lock
in
test
pop
bsr
test
jne
and
cmp
adc
jb
sarb
mov
lcall
bound
push
and
mov
xchg
xor
xchg
lds
call
mov
pop
enter
jp
stos
pop
add
xlat
xor
sti
mov
aam
sbb
push
test
ja
scas
pop
or
out
inc
cmpsl
hlt
or
stos
lcall
int
sub
jge
loop
cmp
sarl
les
xchg
leave
add
hlt
xor
push
sbb
jecxz
in
sti
sahf
jp
cmp
mov
cmp
dec
or
data16
iret
jns
out
cmpsl
cwtl
push
xor
idivb
outsl
scas
ret
jg
js,pt
call
ret
pusha
ja
dec
add
scas
mov
mov
sbb
adc
mov
testl
sti
cmp
stos
mov
bound
mov
fcoms
and
mov
jo
ror
push
in
daa
in
sub
mov
push
sub
in
mov
cmp
pop
pop
roll
call
fisttps
pushf
or
gs
pop
xlat
jg
in
mov
sub
int3
pop
loop
cmp
ds
fmuls
js
repz
sti
pop
mov
fwait
jecxz
dec
mov
test
fistpll
mov
and
add
pushf
lds
lea
sbb
lret
roll
sbb
jns
push
movsl
ds
shl
ds
and
mov
push
add
inc
add
sarl
outsb
xchg
push
mov
xchg
sahf
mov
fldl
lcall
sub
vphsubbw
rolb
dec
leave
inc
xor
test
and
cmpsl
cmp
add
aas
lds
dec
ret
or
jns
add
xchg
das
ljmp
fiaddl
aaa
popa
loope
push
or
addb
cmc
cmp
inc
pushf
hlt
inc
test
mov
int
popa
xor
mov
mov
je
fnstcw
in
pop
jg
addr16
cmp
sbb
mov
cmpsb
int3
push
inc
loopne
das
mov
mov
jnp
outsl
jae
cwtl
sbb
adc
push
fucomip
pusha
ret
push
out
inc
sbb
sub
sbb
cltd
out
faddl
jle
fs
ds
cmp
in
ds
dec
adc
mov
outsb
fbstp
mov
movsb
dec
adc
add
ret
jge
insb
lahf
nop
dec
filds
call
sub
jns
jbe
imul
andb
jl
and
inc
adc
mov
inc
mov
pop
test
jle
sbb
popf
add
mov
js
mov
cmpl
or
sar
xor
jl
lcall
mov
and
jnp
and
or
push
pop
and
mov
mov
cmpl
push
pop
pop
adc
stos
adc
mov
xchg
sbb
mov
fwait
repz
imulb
arpl
ret
test
popa
test
or
es
adc
lock
sahf
xor
imul
mul
pop
int3
popf
mov
push
je
jno
sub
add
test
xchg
cmc
or
popa
movsb
int3
sbb
fsubrs
push
cmp
adc
shlb
inc
lahf
imul
lods
pop
xchg
stos
adc
icebp
push
pop
js
add
sub
add
dec
cltd
lahf
xor
jne
add
pop
imul
bt
lret
xchg
mov
loop
stos
shlb
inc
adc
push
fbstp
jbe
dec
xchg
rorb
in
push
pop
cwtl
mov
cmp
xchg
and
out
imul
sbb
cld
jno,pt
pusha
or
cmp
pop
or
sbb
mov
pop
xor
xor
and
jp
pop
pop
sbb
mov
lods
clc
or
mov
ret
xor
fmuls
scas
xor
inc
outsl
jp
scas
jb
repnz
xchg
adc
jnp
dec
hlt
dec
scas
scas
lret
or
and
lret
lods
adc
xor
addr16
mov
ds
add
sahf
movsb
int
jle
loop
dec
mov
fistps
cmp
push
mov
ljmp
mov
sub
xlat
sub
sub
and
ljmp
das
inc
inc
cmp
jl
test
lcall
lock
mov
outsb
pop
rorl
aaa
add
cwtl
in
fistl
ror
adc
and
jl
push
int
pop
push
sti
data16
out
sub
pop
pop
inc
insb
mov
mov
or
loope
inc
in
outsl
fstpl
stos
add
sub
jae
test
jecxz
mov
imul
mov
mov
cld
sbb
push
cmp
ja
pushf
and
xor
in
jecxz
fisubrs
mov
cmp
pop
xchg
sbb
push
push
ljmp
xchg
lds
jmp
int
mov
or
fidivrl
cmc
add
lahf
and
inc
outsl
pop
cmp
imul
movsb
jno
repz
imul
sbb
jle
pushf
mov
js
cmp
sbb
jp
push
xor
jnp
mov
inc
xchg
push
jmp
aaa
jae
outsl
sbb
jp
loop
pop
popa
sbb
mov
clc
xorb
sbb
mov
js
fstpl
cld
fidivrl
fnstsw
sbb
dec
fstpl
cmpsl
mov
cmp
dec
cli
cld
xchg
in
or
or
xchg
in
lea
icebp
mov
fwait
mov
mulb
enter
lods
fisttpll
pusha
mov
sbb
pop
shlb
subl
mov
in
mov
push
pop
scas
cmpsb
rorl
mov
xor
mov
dec
je
ficoms
add
je
lods
push
jae
jecxz
push
popf
jl
lods
cmpsb
lds
aaa
pop
dec
loopne
pop
fadd
sbb
aas
negl
repz
push
lahf
loope
adc
add
idivb
adc
push
xchg
and
adc
mov
xor
addb
ficomps
out
xchg
scas
xchg
sbb
mov
xor
sbb
stc
or
in
or
lock
es
sbb
in
js
jecxz
ss
sub
imul
add
in
jmp
push
and
daa
mov
inc
pop
ds
sbb
lock
popa
fisttpl
stc
aad
ds
insb
mov
mov
xor
movsb
call
xchg
jne
xchg
insb
mov
lcall
or
std
pop
inc
pop
push
xchg
fisttps
cmp
or
and
decl
jne
je
xlat
sti
inc
fcoms
nop
mov
call
mov
in
repz
dec
cmp
and
inc
pop
and
sahf
shl
push
xor
dec
fdivs
or
rol
mov
jg
mov
cmp
xor
popa
adc
xor
movsl
add
call
rcrb
xlat
sbb
and
mov
out
xchg
xchg
sub
adc
arpl
sbb
inc
and
push
jmp
int
cli
fidivrs
inc
test
lret
push
xchg
jo
cmp
aaa
add
mov
mov
cmp
and
dec
loopne
insb
dec
sbb
inc
pushf
cmp
cmpsl
in
push
add
sub
jecxz
xchg
push
dec
stos
and
or
lret
sarb
in
or
lock
aaa
mov
dec
data16
repz
sbb
or
arpl
inc
push
pop
xor
cmpsb
and
test
divb
or
xor
lods
fwait
xor
call
mov
sahf
ja
lods
data16
pusha
sbb
gs
dec
fldcw
jae
int
cli
pop
xchg
pop
push
sbb
or
xor
xor
xor
in
cltd
add
jnp
out
mov
test
pusha
outsl
mov
inc
popa
cmp
sub
jmp
xchg
in
jns
xor
xchg
loopne
or
pop
xchg
aam
int3
push
lcall
or
adc
jbe
loopne
push
xlat
ss
movsl
jp
push
into
sub
lret
jae
cmp
and
jo
fsubs
xchg
int3
leave
inc
insb
inc
jl
jae
movsl
dec
fs
push
sbb
insl
hlt
jge
ja
pop
in
ja
sub
dec
lods
cli
sbb
ffreep
ja
inc
repnz
add
or
scas
add
ficoml
mov
push
inc
scas
lret
mov
push
or
dec
aas
mov
andb
lret
inc
cld
es
lcall
mov
adc
es
shlb
push
dec
data16
xchg
imul
les
out
or
dec
dec
or
cmpsb
push
sbb
cmp
adc
jbe
mov
clc
adc
leave
sbbb
inc
inc
jo
pop
push
ds
push
mov
cli
mov
aas
jecxz
xchg
adc
add
std
rcrl
das
inc
bnd
xchg
adc
enter
fdivrp
scas
adc
push
push
sarb
push
mov
pop
orb
pop
ret
dec
lock
insb
jle
jp
es
lds
sbb
daa
jle
sub
cltd
dec
and
popa
movsb
and
outsb
and
xchg
adc
xchg
xor
push
sbbb
fdivr
or
je
popa
out
jo
adc
push
dec
mov
in
lahf
outsl
lods
mov
negl
sbb
nop
inc
std
insl
xor
jecxz
dec
lea
ficomps
xor
subb
pusha
ficoms
adc
cmpsl
fcomip
or
inc
add
cmp
sbb
and
and
pop
mov
or
cli
imul
inc
sbb
repnz
sub
jo
push
outsl
in
popa
inc
pop
test
pusha
lds
loope
jne
inc
test
push
scas
in
andb
inc
adc
sbb
push
dec
out
loop
sbb
cld
xchg
sti
mov
hlt
loop
xchg
int
imul
xchg
inc
xchg
dec
pop
outsb
add
adcb
lahf
icebp
pushf
les
movsl
imul
sti
movsb
inc
movsl
cmp
xchg
and
lea
mov
xchg
mov
lahf
pusha
mov
rcrl
negb
adc
xchg
cmp
add
loopne
jg
add
imul
inc
sub
or
jnp
fbld
cmp
or
leave
mov
push
int
es
dec
mov
rcl
xchg
aad
imul
dec
lahf
and
mov
fabs
xor
mov
jno
or
ss
sbb
lea
shll
cmp
lods
stos
mov
fmuls
push
inc
sahf
neg
xchg
dec
mov
hlt
mov
outsl
lds
fdivrs
and
sbb
jecxz
sbb
push
imul
jg
imul
into
push
xchg
jge
cli
into
inc
hlt
mov
mov
das
loop
mov
lahf
std
cld
inc
mov
or
add
adc
dec
mov
std
dec
push
inc
cmp
out
pusha
mov
nop
jo
sub
sbb
jmp
or
es
cmp
jl
insl
jp
outsl
fstpt
mov
jp
xor
movsb
mov
jne
lods
cmpsb
stos
dec
or
std
and
push
cmp
mov
inc
rcrb
cltd
xchg
xchg
inc
inc
xor
ss
lock
adc
inc
or
fs
push
arpl
stos
ret
push
lret
js
int3
mov
loopne
stos
call
inc
cmpsl
enter
lods
sub
jle
fs
cltd
fisttps
js
sbb
and
leave
cmpsl
pushf
mov
and
arpl
cmpsb
aas
aam
lcall
jl
out
cmp
xchg
or
adc
mov
imul
mov
pop
packsswb
add
or
dec
inc
in
fwait
xor
inc
das
imul
rorl
cli
and
fwait
or
or
daa
popf
in
movsb
lods
inc
sbb
xlat
gs
idiv
rorl
in
push
push
jns
lcall
div
repnz
das
cmc
xor
dec
pop
push
pop
inc
add
imul
stos
aas
mov
push
ret
sbb
loopne
fcomp
stos
or
es
pop
aad
jmp
popa
mov
aas
mov
jg
aam
bound
push
push
inc
xor
inc
push
in
js
mov
add
pop
std
sbb
scas
cmpsl
in
dec
insb
test
cmp
cmc
cmp
fcomi
pop
or
cmc
shr
bound
cmp
hlt
inc
in
mov
je
dec
aaa
in
fbld
loope
pop
loope
in
mov
pop
leave
ds
scas
pop
jp
adc
jns
xchg
jns
dec
ret
test
push
mov
imul
cmpsb
inc
pop
inc
loopne
xchg
sbb
inc
test
and
jne
movl
adc
ds
fcomi
sub
pop
pop
adc
ds
shl
jo
orl
pop
subb
cmpsb
imul
pop
sub
shl
sbb
pop
cmp
loopne
ja
out
or
xor
das
adc
push
nop
repnz
push
test
cmp
insl
jl
sbb
jmp
out
pop
xlat
inc
or
cmp
xor
and
out
cmp
mov
inc
dec
test
and
cmpsb
xor
sub
scas
jp,pn
adc
or
pop
mov
loop
xchg
out
adc
fldcw
sbb
lcall
into
sbb
xor
rcll
pop
xchg
jnp
cmp
sub
nop
sub
push
rcl
and
mov
pop
adc
jmp
add
test
int3
or
xor
lret
adc
mov
push
insl
push
dec
xchg
mov
ljmp
sub
dec
aam
push
sarb
andl
adc
out
popa
bound
lret
adc
cli
jle
xchg
stos
cld
xor
mov
add
jne
fldt
scas
inc
or
mov
push
cmp
mov
loopne
das
jmp
out
sarl
push
testb
dec
fcmove
and
cli
jmp
mov
adc
mov
fld
push
clc
mov
inc
jle
or
outsb
iret
fs
jp
fbstp
dec
in
ds
ret
sub
mov
loop
aad
or
mov
hlt
jmp
retw
add
stos
xlat
in
inc
mov
mov
movsl
and
cmp
push
orb
mov
and
imul
sbb
sub
movsb
fsubrp
add
leave
popa
sub
lret
cmp
std
sti
mov
loope
add
pop
sub
jae
pushf
xor
push
jecxz
inc
xchg
push
ret
lcall
dec
cmc
into
jp
mov
fcoml
incl
push
sbb
jmp
inc
pop
scas
jo
aaa
ret
loopne
out
mov
jbe
jmp
jae
sub
into
pop
nop
mov
jns
adc
push
aad
lahf
sub
add
cmc
cmpsl
adc
xchg
or
andl
adcb
inc
xchg
aaa
movsl
andb
jecxz
push
or
push
mov
es
inc
rcl
mov
repz
popa
mov
clc
pop
ret
xchg
into
inc
mov
pop
ret
fdivs
mov
cmpsl
lock
adc
or
jmp
cld
fimuls
pusha
pop
fisttpl
push
int3
mov
xlat
adc
xorl
roll
push
ret
sti
fcmovu
push
lea
dec
orl
inc
mov
fwait
lds
mov
outsl
mov
out
dec
data16
pop
mov
or
or
add
in
pop
ss
pusha
enter
test
push
mov
jle
push
add
mov
enter
xor
cmpsb
inc
rcrb
mov
pusha
pop
fsubl
imul
data16
ret
add
dec
insl
aas
cmp
push
fadd
test
xchg
sbb
orb
into
push
stos
jns
roll
rolb
mov
leave
xchg
nop
dec
push
lret
or
pop
movsl
push
xchg
pushf
into
pop
inc
jl
movsb
sub
xor
jns
dec
addr16
je
aaa
fcmovnb
sub
in
dec
adc
inc
in
sub
ljmp
js
mov
repnz
jge
das
int3
and
adc
xor
ds
movsb
xchg
pop
pop
imul
xorl
call
stc
imull
inc
adc
and
adc
and
data16
adc
mov
sarb
pop
test
mov
jge
pop
xor
lret
js
xchg
add
outsb
mov
pop
aaa
mov
sub
mov
popf
bound
daa
and
test
decb
xor
cmp
test
dec
divb
add
shr
das
inc
repnz
leave
aaa
or
je
xor
aaa
loopne
push
sub
mov
incl
movsb
cld
jle
insl
mov
fstpt
dec
mov
jb
mov
aam
in
mov
loopne
sbb
inc
hlt
aad
iret
jnp
rcl
clc
mov
add
insb
pop
push
insb
sbb
pop
mov
mov
fidivrl
in
and
les
mov
nop
jns
xchg
scas
xchg
in
repz
dec
xor
jmp
xchg
push
aas
pop
sti
imul
adc
jns
mov
or
loope
nop
dec
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
andl
mov
mov
mov
xor
add
mov
movzwl
and
mov
mov
sbbl
xor
adc
push
sub
mov
movzwl
sbb
mov
negl
add
xorl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
push
andl
xor
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
push
call
jmp
and
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
push
mov
mov
xor
xor
mov
add
add
imul
mov
jmp
mov
in
xor
mov
push
pop
iret
and
pop
jl
addr16
cmp
xchg
or
aam
xor
push
rolb
roll
lods
and
push
dec
in
inc
mov
xor
push
mov
cmc
push
arpl
push
imul
or
mov
jg
arpl
nop
arpl
inc
xor
dec
iret
lret
push
sbb
pop
jne
mov
push
push
lret
mul
fidivrl
decl
dec
push
pop
data16
bound
push
inc
xor
mov
or
lahf
scas
xor
mov
sub
fildl
inc
in
clc
roll
cmp
dec
dec
orb
and
cltd
cltd
mov
xor
js
sbbb
and
mov
jae
les
xor
jnp
jb
sub
gs
add
fdiv
ficoms
cmpb
shlb
mov
out
ret
push
xchg
adcl
outsb
pop
push
sahf
sub
xor
cmp
test
xor
adc
fwait
sub
mov
insl
mov
outsb
push
jno
dec
sbb
cs
cwtl
pop
sbb
mov
xchg
out
or
inc
and
cmpsl
scas
stos
in
and
fwait
enter
sbb
leave
enter
shlb
push
fildl
repz
ljmp
cmp
and
adc
ja
insl
sub
ficoms
xchg
fsubrl
repnz
std
je
cmc
pop
mov
test
test
loopne
hlt
dec
das
pop
sub
add
fsubs
push
fisubrs
mov
aaa
mov
mov
int3
pop
jp
outsb
outsb
sub
xor
ja
sbb
movsl
daa
push
inc
cs
hlt
cmpb
and
add
adc
xor
dec
adc
scas
sub
xchg
xor
lcall
jmp
xchg
push
jbe
loop
inc
jo
in
push
out
push
gs
aam
mov
roll
push
aad
and
adc
jmp
push
outsb
jmp
stos
mov
push
mov
xchg
push
out
adc
push
out
fwait
insb
popf
lods
ss
pop
xchg
test
pop
push
cmpsb
scas
int
pop
subl
test
aaa
dec
fcoms
pop
into
push
adc
pusha
mov
movsl
in
mov
xchg
and
in
cwtl
xlat
cld
data16
jle
or
arpl
add
test
stos
cltd
icebp
daa
mov
jno
stc
fsqrt
fidivs
xlat
shll
hlt
faddl
lock
sub
mov
fisttpl
dec
lods
or
sub
pop
pop
xlat
imul
pop
std
insw
stos
shr
jg
mov
mov
ret
out
test
ja
mov
inc
test
mov
mov
test
dec
pop
sub
lea
in
push
push
ja
lods
mov
ret
rcrl
cmp
sub
sarl
fidivrs
mov
inc
sbb
inc
fldt
jnp
mov
or
in
ret
jbe
adc
mov
lahf
cmpb
pop
adc
or
std
clc
cwtl
fbld
pop
rorl
fwait
xorl
mov
out
xchg
call
sbb
pushf
cmp
xchg
loope
jecxz
movsb
dec
push
fldt
lret
mov
jle
pop
dec
pop
hlt
xor
jne
inc
test
push
cmp
rcrb
xchg
repz
subl
mov
mov
out
cmp
xor
jb
xor
inc
pushf
repz
and
jno
cmp
xchg
or
mov
and
sub
outsl
cmpsl
hlt
cwtl
add
mov
adc
sub
adc
mov
imul
sbb
inc
push
mov
jmp
inc
aad
xchg
int
std
sbb
sub
pop
xchg
test
adc
or
or
mov
dec
lahf
mov
pop
sbb
mull
xor
lahf
scas
mov
ja
mov
jle
addr16
pop
cmp
jecxz
inc
test
xchg
outsl
rcll
or
sahf
add
out
mov
xchg
gs
in
mov
sahf
sarb
scas
test
push
xchg
sub
cld
call
insl
jae
je
pop
inc
mov
in
and
cmp
or
arpl
cmc
push
movsl
in
cmp
outsl
mov
aad
sbbl
lahf
add
push
mov
cmpsl
add
jg
sbb
sub
adc
addr16
gs
scas
mov
jmp
insl
jle
in
jb
mov
adc
adc
sbb
gs
sbb
jmp
sub
mov
cmp
insb
insl
xchg
mov
sub
sar
or
in
clc
add
sahf
bound
out
inc
or
je
test
lahf
adc
pop
xor
lds
mov
es
mov
das
stos
shrl
cmp
ljmp
ret
pop
clc
inc
lcall
or
fldcw
outsb
rorb
rcll
stc
fstps
pop
push
or
fstps
mov
stc
mov
jle
dec
mov
mov
in
fstl
jmp
std
jge
xchg
adc
jb
notb
cmp
xchg
shr
icebp
dec
push
stos
loopne
in
icebp
inc
lock
pop
push
je
ss
rol
mov
xor
xor
loope
test
fisttpl
aaa
jnp
in
mov
adc
pop
cmp
arpl
add
stc
jb
mov
clc
into
pop
cmpsb
lea
push
sarl
movsb
jmp
pushl
mov
mov
das
fimull
add
sub
mov
es
xchg
push
dec
pop
bound
out
sbbb
testb
pop
xor
xchg
movsl
cmp
pop
orl
inc
mov
dec
loope
in
push
stos
nop
fdivrl
int
push
push
inc
fwait
in
push
add
pusha
jno
cld
imul
sbb
cmpsb
add
mov
mov
xor
push
fisttps
xlat
push
jle
dec
sub
adc
arpl
push
mov
test
dec
inc
push
out
xor
pop
fsub
add
jecxz
sbb
add
push
push
mov
push
jns
sti
popa
std
and
movl
mov
sub
test
cmp
adc
in
mov
mov
call
rorb
ja
and
adcb
nop
outsb
test
mov
fwait
aaa
and
testb
data16
insl
mov
inc
cli
mov
scas
pop
es
xchg
add
inc
hlt
test
and
fimuls
shl
add
pop
icebp
int
loop
jo
inc
es
mov
mov
int
mov
es
sbb
adc
xchg
outsl
inc
pop
clc
xlat
insb
in
pop
pop
cmp
push
das
mov
pop
sti
in
xor
ss
data16
push
dec
cwtl
jbe
loop
cs
pop
cltd
das
pushf
loopew
dec
cmp
fbstp
dec
mov
pop
lea
bswap
pop
aad
cmp
or
lahf
std
fwait
and
jne
aad
xchg
repz
mov
imul
cld
addr16
mov
faddl
inc
mov
cld
sarb
arpl
mov
xor
push
jmp
jo
nop
add
jp
dec
jb
std
xchg
xchg
icebp
dec
pop
adc
in
dec
jno
daa
fstl
mov
mov
arpl
aaa
fsub
sub
pop
mov
jb
mov
or
xor
or
lcall
inc
cmpsb
mov
loope
or
cmpsl
inc
mov
hlt
ficoml
out
lea
sbb
imul
push
adc
hlt
and
add
rcrb
and
mov
adc
mov
sbb
inc
inc
cmp
test
mov
add
lea
iret
dec
xor
xchg
and
pop
out
int
inc
hlt
gs
nop
push
jb
arpl
les
scas
data16
or
call
in
in
jnp
sub
lret
push
mov
out
test
cmpl
mov
mov
pop
pop
adc
dec
cld
lds
pushf
aas
add
xchg
push
lret
add
idivb
xor
addr16
clc
and
popf
pushf
adc
div
movsb
ret
or
movsb
pop
or
xchg
inc
cmp
test
pop
dec
push
and
pusha
xor
rcrb
shll
mov
or
sub
pop
pop
sbb
push
xchg
xor
insb
into
add
sub
push
out
div
dec
lds
xchg
ret
sbb
inc
call
mov
sbb
imul
jae
lock
mov
dec
sbb
fwait
shl
in
nop
outsl
xchg
inc
jp
mov
mov
or
out
test
dec
lea
mov
sbb
inc
mov
mov
add
clc
cmp
push
iret
lock
push
arpl
push
lret
je
pop
popa
add
repz
lods
pop
or
pop
sbb
cli
lret
call
popl
push
movsl
mov
insb
dec
test
fdivl
mov
sub
xchg
jge
in
fidivrl
stos
addr16
fadd
and
mov
pop
and
push
pop
jl
adc
and
jg
fldl
or
jae
push
movsl
rcll
sbb
js
jo
js
outsl
lods
ljmp
and
mov
roll
push
clc
xchg
mov
xchg
mov
lahf
xchg
jmp
imul
pop
iret
or
imul
xchg
out
or
jbe
and
outsb
mov
pop
or
outsb
add
cs
dec
push
stc
data16
lock
imull
std
aaa
xchg
sub
dec
mov
jb
aad
in
or
pop
out
pop
popa
shlb
hlt
fsubrs
dec
popf
jl
mov
pop
inc
add
repz
sbb
js
jbe
mov
inc
loop
mov
repz
cmc
adc
mov
mov
jle
or
xchg
dec
fcoms
outsb
fildll
jg
push
ss
sti
fwait
push
lock
cld
pusha
sub
push
push
inc
jg
push
subl
push
xchg
mov
lock
push
adc
and
or
jae
loope
out
outsb
add
popa
lahf
fdivl
mov
scas
cld
cwtl
jbe
test
adc
pop
subl
push
icebp
rcl
mov
sub
push
lret
inc
add
fsubl
fidivl
out
dec
inc
mov
mov
and
and
sbb
enter
in
cmp
mov
push
fwait
imul
je
pop
scas
out
pop
cmp
mov
cmc
jle
lcall
test
pop
and
lcall
fwait
lahf
mov
dec
cmp
in
fstpt
xchg
clc
pop
mov
xlat
sbb
sbb
inc
and
fwait
cmp
mov
cwtl
fldln2
push
out
cmp
pop
scas
or
cmp
xchg
push
push
mov
mov
cmp
adc
mov
cltd
inc
cmc
pop
jae
jne
call
idivb
repnz
pop
je
frstor
mov
in
pop
aad
xchg
jbe
inc
dec
mov
pushf
lods
mov
cmp
cld
dec
lcall
dec
inc
int
sub
movsb
outsl
hlt
sub
gs
fimull
sub
xor
adc
xchg
mov
negl
or
jbe
shlb
push
mov
js
and
xlat
or
xorl
mov
and
testl
scas
mov
xchg
pop
cmpsl
push
push
packssdw
xchg
stos
xchg
jl
mov
push
mov
rcll
push
pop
mov
xchg
cmp
clc
push
push
mov
fwait
xchg
sbb
repz
insl
cmp
in
popa
into
jl
mov
adc
adc
ror
adc
cmpsb
or
es
jnp
lret
loop
xchg
pushf
sti
fidivs
xchg
lret
sbb
test
xor
andl
fistpl
sbb
pop
and
push
jae
mov
cmp
mov
push
dec
cmp
in
in
xor
pop
sbb
mov
ret
ljmp
jbe
inc
mov
shlb
mov
push
aas
out
xorl
aad
enter
int3
jns
mov
lret
lock
cmpsl
jle
jne
popa
mov
stos
sbb
jle
repz
mov
cmc
xor
xor
adc
dec
nop
icebp
jae
jno
das
push
rorb
xor
sbb
jns
inc
shll
lods
je
mov
ss
sub
rorb
sbb
mov
sbb
gs
lock
lods
shll
aaa
or
or
jg
xchg
lea
or
cmp
pop
outsb
loop
popa
push
pop
outsb
inc
pusha
push
fnstsw
mov
cmp
hlt
fwait
rcrb
test
push
fwait
cmc
or
mov
mov
add
fstl
or
xor
mov
xchg
mov
adc
cltd
push
dec
sahf
out
and
dec
sub
push
push
push
in
lret
mov
ds
daa
sti
mov
pop
or
insl
lock
aam
lds
cmp
or
jg
dec
add
dec
js
sub
mov
lcall
clc
jne
xor
test
push
push
pcmpeqb
leave
repnz
pop
push
in
jae
dec
into
lcall
push
in
jle
sub
loope
push
sub
cmp
stc
icebp
inc
sbb
jo
cmp
mov
xchg
out
cmc
cmpl
mov
cmpb
scas
lret
jbe
pop
dec
in
nop
cwtl
mov
test
inc
push
xchg
out
rorb
dec
lods
shlb
jns
mov
adc
dec
xor
movsb
mov
mov
push
push
sub
pusha
andb
xchg
inc
inc
aam
jecxz
sbb
and
arpl
pop
movsb
sbb
in
inc
pop
aam
outsb
ret
sub
rsqrtps
lea
insl
imul
fcoml
cmpsl
fdivrs
mov
cmpsl
popa
xor
into
addr16
add
mov
lods
inc
sub
popa
xchg
adc
inc
call
jmp
jne
jge
mov
setno
mov
adc
mov
mov
inc
icebp
rcl
mov
xchg
add
arpl
imul
les
scas
out
mov
stc
mov
or
xchg
inc
inc
inc
stc
and
push
lods
test
testl
sub
inc
int
adc
jb
iret
scas
mov
imull
and
push
rorb
xchg
out
test
nop
cmp
roll
sahf
push
xchg
mov
cmpsb
mov
jp
mov
enter
ret
into
dec
cmp
data16
loop
cli
mov
mov
arpl
sahf
lahf
js
fmull
xor
inc
rorb
hlt
enter
out
adc
dec
sub
cltd
daa
jnp
or
std
xchg
push
dec
sub
ret
or
repz
popa
dec
ret
inc
repz
lcall
hlt
xchg
out
data16
add
enter
leave
cmp
push
loope
jae
or
mov
push
and
push
aam
fadds
aad
pushf
ds
jo
test
sarb
ffreep
rorb
and
mov
movsl
data16
shlb
pop
ficoms
lcall
xchg
mov
ret
lcall
lret
mov
pop
sbb
xchg
dec
mov
adc
test
aad
sbb
ror
loopne
push
add
rorl
push
pop
push
lock
sbb
jecxz,pt
and
addr16
jne
mov
mov
inc
jge
and
popa
adc
jb
xor
mov
push
imul
arpl
stos
or
xchg
jmp
scas
fsub
push
sbb
cld
in
mov
xchg
cmp
movsb
mov
ret
jle
dec
je
mov
inc
sub
mov
int
ror
stos
xchg
jne
jnp
je
outsb
fwait
aas
pop
or
call
pusha
pop
pop
cmp
and
pop
shlb
pop
or
dec
jns
add
push
xchg
push
rcrl
dec
test
mov
xor
leave
imul
js
cmp
pop
loop
mov
loope
ja
movsl
or
and
xor
jo
push
pop
jne
mov
cltd
mov
scas
mov
aaa
repnz
movsl
pusha
popa
or
stos
dec
xlat
add
dec
xchg
fcompl
and
into
add
jne
xor
push
push
aas
pop
lcall
sub
sbbl
or
push
xorl
cmovs
or
mov
inc
xchg
in
mov
scas
xor
mov
xchg
rcrb
sub
out
mov
xchg
add
push
iret
cmpsb
mov
or
cli
dec
fnsave
hlt
xor
inc
jns
cmp
clc
dec
loope
mov
and
jmp
sub
xchg
and
pop
xchg
lock
inc
xchg
test
xchg
xchg
xchg
sti
and
adc
je
push
sub
jnp
xor
pop
psubq
es
or
cwtl
dec
sbb
jl
mov
add
xchg
sub
sbb
push
daa
std
addr16
xchg
out
adc
imul
test
inc
adc
js
mov
mov
cmp
gs
xor
sbb
jmp
xchg
test
lock
and
ret
movsl
mov
in
xchg
xchg
inc
jo
mov
insb
cld
fists
inc
pushf
outsb
xor
push
rclb
imul
push
jno
imul
loopne
sbb
mov
rorb
jbe
inc
jmp
nop
add
cmpsb
ds
lods
rolb
jg
movsl
dec
ss
jne
addr16
fidivl
jmp
popl
loop
adc
xchg
sub
lret
lods
adc
ds
mov
push
jnp
push
dec
cmpsl
pusha
mov
sbb
mov
pop
lock
adc
xchg
lods
cmp
mov
and
inc
imul
fsub
call
divps
in
divb
xchg
daa
shrl
cmc
inc
push
cmp
add
cmpsl
jne
jecxz
and
add
lcall
int
outsl
rcll
repz
xor
out
adc
xlat
jmp
cmp
mov
loope
inc
sub
jns
push
sub
push
xchg
push
bound
xor
xchg
ret
jmp
sbb
imul
test
mov
inc
pop
add
imull
xchg
jmp
mov
and
pop
push
mov
iret
das
cmp
xor
jecxz
popa
enter
and
cmp
sti
add
test
push
adc
mov
out
jg
add
les
in
xor
out
ljmp
mov
stos
dec
mov
loope
shrw
hlt
outsb
shrl
adc
sbb
int3
jne
xor
mov
mov
dec
sbb
jb
mov
mov
repnz
jae
sbb
pop
roll
mov
xchg
pushf
lock
rcrb
inc
loop
mov
mov
scas
xor
sar
pop
jb
fisttpl
movsl
pop
gs
call
lds
pop
aas
jae
add
inc
sbb
and
rcrl
and
push
faddl
sbb
jmp
and
test
pop
fs
pop
sub
jbe
add
fs
cmp
dec
cmp
mov
into
lahf
dec
jecxz
int
push
push
cmp
fistps
sub
ret
icebp
jmp
mov
pop
mov
or
mov
fcoml
ljmp
ja
xchg
dec
loop
scas
push
into
mov
pop
mov
mov
in
adc
out
in
jnp
mov
cmp
pusha
sbb
xor
push
cwtl
add
xchg
xor
jae
sbb
test
nop
sbb
mov
pop
iret
in
fildl
lcall
mov
ja
pavgb
iret
add
adc
mov
sbb
jno
lret
sub
cmp
lock
jecxz
cmp
shrb
jmp
inc
cmpsb
push
insb
hlt
pop
cmp
testl
aas
int
aas
push
xchg
jnp
loope
push
cld
dec
lds
aad
dec
dec
loopne
xchg
inc
in
inc
js
out
mov
jo
pushf
mov
daa
dec
cmpsb
xchg
in
jno
out
icebp
cld
add
rcl
test
dec
push
mov
sahf
cli
daa
jecxz
pop
dec
mov
fistpll
adc
mov
adc
bound
push
adc
push
or
jno
in
lahf
jp
test
xor
call
imul
pop
cmp
cld
mov
inc
or
inc
sbb
lea
xchg
stc
movsb
stc
pop
add
jl
push
push
ljmp
mov
cmp
fld
dec
dec
dec
xchg
cwtl
adc
out
xchg
push
dec
not
out
and
xchg
mov
ficoms
mov
cmp
ja
dec
test
mov
int3
dec
rcl
imul
mov
mov
xor
shl
ljmp
pop
stos
into
mov
stc
adc
or
mov
dec
push
out
jle
arpl
xchg
in
shll
pop
mov
xor
mov
mov
sarl
xchg
sbbl
js
stos
xchg
push
xor
jl
xor
lret
pop
ror
sarb
movl
dec
inc
cltd
faddp
xchg
adc
dec
sbb
jecxz
or
mov
int
lret
pop
dec
lds
pop
cmp
xchg
mov
jmp
dec
pushf
cld
cli
int3
inc
pushl
inc
mov
sbb
mov
bound
or
xchg
xor
xchg
sbb
sub
jns
push
pop
mov
loop
inc
loopne
ss
ja
push
and
xchg
jle
or
sbb
xor
fldcw
aad
jp
scas
insb
sub
or
sub
mov
daa
daa
adcl
push
shl
mov
repz
nop
roll
dec
adcb
jae
inc
push
andb
jecxz
int
sbb
bound
jmp
push
inc
cmp
adc
rclb
mov
inc
imul
les
out
xchg
push
mov
and
rcrl
insb
cmp
shlb
scas
sbbb
push
and
mov
pop
fwait
inc
test
fdivl
or
mov
fistpl
pop
pusha
dec
xor
push
sbb
in
inc
jbe
bound
sbb
jg
nop
fsubs
sbb
jnp
in
jl
pop
jo
mov
into
mov
pop
or
lock
mov
call
pusha
jle
mov
mov
dec
sub
xlat
adc
insl
adc
mov
lock
std
push
into
mov
aas
inc
push
xchg
dec
adc
insl
fdiv
clc
imul
adc
lods
pushf
mov
dec
push
mov
out
fwait
mov
mov
cmp
cmp
pop
jnp
mov
cld
jl
add
enter
and
mov
jnp
inc
xor
pop
shlb
pop
in
std
cmp
hlt
mov
stos
stos
mov
xchg
into
mov
dec
sub
repnz
aad
outsl
dec
push
push
andb
js
mov
inc
ret
mov
lods
xchg
add
dec
loope
jbe
loop
sub
in
pop
xchg
shl
jecxz
mov
fwait
xchg
movsb
mov
push
push
fldcw
push
outsl
mov
pop
jmp
push
mov
inc
mov
ljmp
dec
push
and
or
in
xchg
in
divb
mov
xchg
pop
call
popa
mov
mov
add
out
xor
je
xchg
nop
jae
cmp
aaa
clc
and
mov
xchg
jmp
lcall
mov
addl
jl
mov
jl
add
adc
xchg
subl
ret
out
cmp
mov
dec
xor
lds
sbb
fs
inc
sarb
add
fidivl
mov
mov
pop
jecxz
xor
jecxz
iret
mov
in
sub
add
xchg
push
sub
sub
inc
mov
mov
bnd
pop
pushf
int3
pop
push
daa
out
call
adc
sbb
cwtl
cmp
adc
enter
incb
xchg
rorb
in
inc
pop
loopne
repnz
addr16
push
and
fisttpl
cmpsl
cmc
mov
xchg
popa
mov
enter
push
cld
pop
mov
mov
arpl
hlt
movsb
xchg
mov
dec
psubw
vpshld
jnp
cmp
sti
lods
icebp
and
xchg
dec
scas
fdiv
rorb
sarl
std
cmc
xor
dec
inc
out
stos
push
or
add
adc
scas
jl
daa
push
dec
cld
lret
or
cmc
cmp
mov
in
roll
stos
jae
xchg
test
mov
insl
in
movsl
and
mov
xor
adc
dec
xor
stos
loopne
pop
neg
mov
push
ret
js
sti
push
dec
and
fstpt
sub
stos
mov
mov
fdiv
jle
in
shl
and
popl
xchg
pop
push
js
mov
push
shll
push
mov
sbb
or
inc
cmc
jmp
lcall
movsb
pusha
or
jne
das
aas
jge
xor
mov
mov
xchg
ja
cmp
jbe
sbb
mov
into
jmp
mov
je
lcall
jnp
and
jecxz
inc
lahf
or
loope
loope
sahf
cld
pop
add
movsl
js
ss
clc
clc
push
lcall
test
mov
or
je
popf
xor
and
sbb
jp
pusha
je
inc
lock
and
or
adcl
call
xor
fisubrs
test
add
and
lret
sub
jp
or
jge
sbb
insl
inc
sbb
jbe
mov
cmpsb
icebp
ret
pop
in
test
jecxz
push
xor
mov
adc
mov
sub
es
cmp
mov
xor
sar
cmp
xor
scas
aas
mov
sbb
adc
sahf
into
adc
and
pop
pusha
mov
mov
add
dec
rolb
inc
mov
dec
mov
xchg
push
sbb
hlt
sbb
lock
push
or
pop
pop
mov
pop
pop
xor
mov
fcomps
push
xor
shrl
insl
ficoml
sbb
push
and
jns
mov
add
pusha
scas
sbb
jno
sbb
dec
push
push
jmp
sub
xor
xchg
or
int3
clc
cmc
mov
cmp
mov
fidivl
test
and
out
test
xor
push
stos
xchg
add
cmp
or
add
lahf
pusha
negl
cmp
mov
jo
push
mov
movsl
hlt
lds
lods
cmp
mov
jecxz
fnstsw
fwait
or
jecxz
sub
dec
daa
fwait
mov
cli
or
sbb
in
daa
adcl
jb
push
cli
adc
adc
test
sbb
or
out
negb
or
fcom
repz
je
xchg
ret
inc
mov
add
lock
stos
xor
mov
and
jl
xlat
sub
add
inc
cltd
loopne
push
subb
adc
call
push
das
mov
je
leave
ljmp
sbb
dec
cmc
lods
in
iret
repz
stos
inc
shrl
cld
push
and
ret
mov
and
scas
push
mov
or
movsb
mul
in
dec
pop
or
jmp
xor
dec
pop
nop
jp
mov
test
loope
xchg
test
xchg
cltd
ja
jnp
inc
stc
jo,pt
push
xchg
imul
xor
or
jns
inc
paddq
lds
xchg
outsl
cli
push
sub
call
ljmp
mov
xchg
xchg
leave
imul
shlb
add
sbb
inc
push
movsl
sbb
les
cmp
fimuls
adc
ds
mov
sbb
xchg
sbbl
fadds
mov
cmpl
mov
xor
jl
pop
fwait
mov
push
addr16
cli
pop
pushf
rcll
dec
push
fs
sbb
or
data16
jp
in
cld
inc
bound
test
or
clc
enter
in
loop
cmpl
adc
mov
aas
push
mov
lea
add
adc
das
addr16
pop
fmul
enter
push
fisttps
bound
ljmp
les
jecxz
aaa
adc
mov
push
cmpb
fldl
in
mov
cmp
and
bound
and
sbb
sti
jp
add
popf
dec
jle
cmp
add
pushf
cmc
fsts
iret
enter
outsb
pusha
ss
jmp
imul
sar
hlt
dec
std
inc
jbe
inc
imul
inc
or
xor
add
mov
sbb
push
imul
mov
jb
add
rclb
sub
insb
cmpsb
add
mov
sbb
in
xchg
lock
jmp
mov
pop
andl
or
loopne
int3
xchg
outsb
mov
adc
lock
in
mov
mov
insb
push
push
and
jne
stos
in
aad
jge
in
aam
call
adc
test
jns
pusha
jo,pn
mov
bswap
pop
repz
sbb
int3
add
dec
adc
pop
out
test
push
sub
pop
inc
adc
mov
xchg
sub
aaa
rorb
fsubrl
mov
out
loop
adc
sub
xor
xor
ficompl
sub
arpl
sbb
push
jl
out
cmpsl
cli
rcrl
cs
arpl
xchg
iret
adc
adc
std
rorb
dec
aaa
sub
icebp
sbb
or
fildll
es
ja
adc
jnp
fs
enter
add
movsb
adc
or
cmp
lods
adc
das
sub
adc
pop
or
add
cli
push
inc
xchg
and
push
sub
mov
dec
outsb
push
push
mov
mov
lods
and
cmpsl
inc
mov
mov
addr16
push
inc
scas
out
mov
jb
and
pop
mov
sub
into
je,pn
sub
ret
and
loop
arpl
sub
lods
aaa
sbb
outsb
xor
or
jle
fildll
ljmp
fnstsw
in
fs
addr16
and
fcom
out
dec
mov
and
push
xor
rclb
repz
lods
mov
jae
pusha
or
push
inc
add
sub
cmp
sbb
sub
popa
mov
scas
jne
inc
add
adcb
fs
loop
std
sti
jo
pop
jbe
std
roll
ret
in
sbb
ss
lea
or
inc
jp
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
sbb
mov
xor
xor
sub
mov
add
movl
or
mov
push
mov
add
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
add
mov
negl
push
mov
adcl
add
cmp
movl
je
mov
mov
xor
xor
adcl
add
add
adc
negl
xor
mov
push
movzbl
adc
xor
xor
mov
and
mov
add
movl
adc
addl
xor
movl
xor
movl
cmp
movl
jne
movl
cmp
je
jmp
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
sbbl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
notl
mov
adcl
add
movzwl
mov
mov
sbb
movb
add
lea
xor
mov
addl
mov
mov
orl
xor
andl
sub
andl
mov
movl
or
push
jmp
and
add
add
cld
inc
daa
push
jl
pop
pop
jl
mov
inc
add
push
and
in
push
sbb
xorl
add
shrl
or
jb
ret
lods
xor
fisubrs
mov
push
mov
add
jmp
xchg
mov
dec
jl
leave
and
push
bound
pusha
in
fcomps
xchg
push
jecxz
loop
cmp
jge
ja
mov
jmp
sbb
movb
add
push
int3
test
outsb
adc
xchg
push
cmpb
movsl
or
mov
pop
scas
lds
push
fistl
sub
dec
cwtl
pop
lock
push
xchg
jb
push
mov
dec
lcall
push
pop
xchg
sahf
loop
sub
das
test
dec
lret
jl
xor
and
insl
and
fxch
call
add
pop
lcall
test
push
mov
jmp
push
cmc
xchg
mov
and
push
mov
fiaddl
jp
arpl
dec
shll
xor
and
enter
imul
cmp
mov
les
and
in
sbb
clc
lahf
mov
pop
or
or
pusha
push
mov
sahf
jg
inc
std
inc
pop
inc
in
push
add
cmp
pcmpeqw
push
pusha
pusha
shlb
cmp
test
or
std
pop
mov
pushf
xchg
pusha
mov
xchg
push
or
jmp
push
dec
dec
and
cmpsb
cmpsb
dec
push
add
gs
add
movsb
mov
mov
jae
repz
test
pop
insl
cltd
psrlw
xchg
nop
aad
jno
mov
in
fsts
out
ljmp
xlat
scas
fs
or
pcmpgtw
or
add
pushf
int3
pop
incl
das
jg
insl
xor
mov
xor
repnz
push
jmp
xchg
pop
jns
es
sub
xchg
leave
cli
add
jo
xlat
lock
sub
std
adc
lret
pop
jno
int3
stos
call
jp
ror
call
adc
aad
inc
sarb
dec
inc
cmp
int3
lea
ds
push
dec
iret
push
cmpsl
stos
insl
xchg
mov
inc
push
scas
xchg
and
int3
mov
jo
adc
cmp
mov
ja
lds
push
or
icebp
mov
xchg
loope
mov
cltd
or
push
movsl
jg
arpl
adc
adc
sbb
mov
cmpsl
add
push
mov
jge
add
mov
xchg
hlt
pop
jno
lcall
sarl
dec
dec
daa
xchg
adc
mov
adc
jle
arpl
je
or
sub
sbb
xor
xor
dec
cltd
mov
add
xor
mov
fmull
in
mov
add
jp
mov
dec
mov
xchg
adcl
call
sub
je
jns
add
pushf
leave
sti
jg
and
in
enter
rclb
jp
pusha
cmp
dec
cmc
gs
sti
xchg
xchg
dec
sti
psadbw
mov
jae
andb
xchg
repz
in
leave
in
fsub
shrb
or
jnp
cltd
rcr
pop
rclb
pusha
mov
fildl
pop
sahf
dec
sbb
xor
mov
xchg
sti
mov
hlt
xchg
push
test
mov
call
leave
aam
push
pop
mov
xchg
push
dec
nop
sub
mov
sbb
nop
add
xchg
push
lock
mov
cmpsl
lock
movsl
sub
jne
jle
mov
movsl
dec
mov
push
mov
sbb
stos
pop
inc
cmp
fnop
cmp
mov
popa
leave
push
popa
rcll
xchg
jo
nop
jg
je
insl
and
sub
lret
jno
mov
leave
ret
inc
adc
mov
push
inc
testl
aas
leave
sbb
in
sub
cmp
mov
cmp
es
mov
xor
clc
inc
scas
out
das
jb
sub
ret
inc
xor
inc
mov
scas
xor
call
cwtl
dec
xor
mov
mov
into
sub
or
jae
repz
sbb
repz
mov
cwtl
or
or
and
pop
outsl
mov
pop
mov
mov
fisttpl
xor
pop
repnz
add
pop
push
jb
and
movsb
popa
into
popf
lcall
loopne
fsubs
mov
fsubs
scas
mov
fstl
cltd
mov
xchg
mov
imul
sbb
insb
xor
cmpsb
mov
jae
xchg
loop
adc
jae
push
mov
adc
inc
ret
jno
add
push
or
fidivs
jns
es
xor
push
cli
or
push
insb
sbb
ss
dec
jae
sub
addb
or
mov
popf
stos
sarb
addb
hlt
pop
lcall
andb
push
jge
andb
and
and
push
push
inc
in
mov
jnp
mov
add
or
jbe
mov
mov
mov
ja
insb
mov
inc
movsl
fldl
push
xor
push
xchg
push
pop
xchg
jae
cltd
pop
push
lods
cld
xor
xchg
insb
push
movsl
lea
xor
jne
inc
ffree
and
pusha
mov
and
mov
mov
cmovg
jae
icebp
in
or
sbb
sub
rcrb
ds
fnstenv
inc
fstpl
cltd
pop
pop
sbb
shrb
pop
push
test
das
and
sti
inc
adc
dec
cmp
pop
pop
adc
notl
int3
sbb
adc
ds
movsb
push
dec
dec
popf
aaa
mov
dec
lods
aam
lahf
add
insb
push
ljmp
cmc
mov
push
les
cli
pop
sbb
in
jmp
out
pop
jg
dec
mov
pop
rcrb
mov
pop
in
stos
mov
jns
iret
inc
sub
arpl
or
pushl
into
pop
gs
clc
movsl
aas
xor
xlat
push
gs
pop
dec
dec
xchg
inc
xor
dec
push
add
jb
aaa
mul
movmskps
mov
cmp
test
pop
aam
xor
fnsave
or
fnsave
sbb
and
in
jge
or
cmpb
cmpsl
mov
in
aad
xchg
sbbl
out
inc
add
sub
rol
stos
xchg
rol
lock
xchg
setns
adc
outsb
sarb
into
pop
pop
sahf
arpl
dec
adc
push
cli
or
loope
rolb
or
pushf
mov
cs
push
sbb
mov
data16
pushf
and
adc
cmp
ljmp
xchg
sbb
and
loop
ja
sub
xor
jne
pop
nop
out
insl
adc
mov
adc
xor
adc
loope
or
mov
inc
pusha
sub
mov
push
cwtl
ds
sub
dec
scas
xor
push
mov
loopne
cmp
notl
je
in
mov
pushf
mov
loop
hlt
mov
cmc
loope
test
scas
mov
or
rorl
inc
fbld
push
fcoms
sahf
outsb
fiaddl
lock
adc
rorb
mov
pop
pop
addr16
adc
ss
dec
or
sbb
loope
push
inc
cmpsl
sub
cmp
repz
int3
add
sub
cmp
loopne
mov
ljmp
sbb
ret
in
subb
loopne
cmp
mov
in
daa
adc
pushf
mov
into
shll
sub
adc
lret
pop
out
insb
test
cmp
mov
insl
dec
orb
lahf
mov
and
outsb
addr16
mov
mov
lahf
jmp
sbb
push
inc
jmp
mov
add
test
shlb
mov
imul
add
leave
loope
out
rorl
je
add
in
arpl
mov
inc
cs
popa
and
lret
and
mov
mov
ret
inc
cmp
adc
sbb
adc
and
add
int
sbb
and
les
cwtl
inc
in
cmp
jle
out
pushw
test
ret
cmpl
or
push
loop
fistpll
mov
sub
mov
jl
mov
add
cwtl
sbb
ficoml
sbb
xchg
ror
xchg
cwtl
mov
out
pop
mov
sbbb
mov
sub
xchg
sahf
repnz
sarl
cmp
pushf
mov
aad
leave
fldcw
in
or
pushf
add
int
test
cmpsb
push
sahf
pusha
cmpsb
les
cmp
je
or
xor
les
jno
inc
data16
mov
fisubrs
jno
cltd
movsb
popaw
cmp
lods
add
xor
mov
mov
ja
xchg
mov
push
add
rcl
out
jne
loop
lock
rcrl
movsb
adc
stc
lret
jbe
ss
mov
nop
ds
and
dec
xbegin
pop
inc
sti
or
cmp
pop
or
add
aad
clc
das
pop
mov
inc
nop
repnz
fistpll
xlat
xchg
leave
cmc
xorl
push
scas
or
jg
lcall
push
mov
mov
in
sbb
or
sbb
daa
pop
leave
dec
and
sbb
sarl
insb
pop
js
push
sub
push
jl
sub
push
adc
fsts
fcos
int
shll
or
icebp
lcall
mov
inc
mov
addr16
ds
inc
jge
or
bound
push
nop
shl
xchg
jle
xor
loope
jle
and
adc
mov
push
outsl
fs
out
pop
mov
mov
call
push
xchg
pop
sub
jbe
inc
inc
lcall
xchg
pop
xchg
mov
mov
xlat
ja
inc
cmc
imul
scas
jae
pop
fdivrp
dec
sti
adc
xor
bound
sahf
push
push
mov
mov
les
and
std
pop
push
inc
ret
outsl
leave
ja
call
popa
pop
sti
adc
sbb
mov
xchg
hlt
movsb
cmp
cltd
xlat
js
loope
xchg
jno
ret
jnp
adcb
repz
inc
pushf
shrl
mov
pusha
jbe
mov
push
pop
movsl
sub
mov
push
cld
xchg
pop
cmc
jo
pop
inc
sub
test
test
xor
ja
ss
fidivrl
and
jl
push
xchg
shlb
insl
inc
iret
dec
pop
push
jg
xchg
pushf
pusha
das
cli
mov
sub
stc
cmp
shrl
xchg
mov
popa
cld
and
div
cwtl
cmp
jge
pop
jnp
sarb
xor
cmpsb
out
xor
nop
xor
sbb
add
bound
pop
xor
sub
inc
push
ljmp
scas
sbb
or
xor
cmpsl
or
orl
add
xor
mov
pop
push
in
or
lods
cmpsb
sbb
inc
sbb
push
sbbl
mov
jge
jge
inc
stos
xchg
add
out
and
scas
ret
sbb
movsb
push
lock
loopne
sbb
and
dec
jbe
sub
sub
add
mov
sbb
lods
jbe
dec
js
dec
test
jmp
jne
mov
or
imul
fdivl
push
in
sbb
dec
dec
pop
add
popa
xchg
dec
and
add
test
cmp
inc
mov
leave
fsts
xchg
inc
sbb
mov
mov
sub
dec
jl
ljmp
int3
movsb
mov
pop
ljmp
cli
sbb
add
and
push
mov
dec
and
sbbl
sbb
cmpsl
into
ss
pop
iret
fcompl
mov
rorb
push
repz
mov
adc
push
clc
ljmp
rsqrtps
movsl
cmpsb
insl
or
gs
js
add
mov
aaa
mov
mov
insb
jmp
add
adc
and
or
hlt
lahf
stos
cwtl
pushf
lret
xchg
mov
movsl
leave
dec
scas
inc
ret
jmp
add
ljmp
sbb
repnz
mov
cmp
outsb
mov
dec
fucom
out
pop
mov
sar
fidivs
and
dec
pop
popf
rcrl
mov
fs
jl
scas
pop
sbb
mov
in
sub
mov
push
out
cmp
mov
xchg
iret
push
lods
aaa
mov
inc
sub
mov
jmp
stos
pop
test
lods
sbb
addr16
sbb
and
add
dec
lret
test
imul
enter
and
out
stos
mov
pop
lock
jae
jno
sbb
pushf
xchg
add
mov
push
lahf
fistpl
xchg
mov
lds
pop
cli
ss
andl
test
push
dec
shll
xchg
movsl
pop
add
pop
test
mov
clc
movsb
icebp
pop
lret
test
xchg
fsubr
mov
xor
stc
xchg
push
cmp
pop
mov
je
shll
mov
pop
xor
sbb
addr16
test
bswap
cltd
jecxz,pt
mov
xchg
mov
sbb
jmp
sub
cmp
sbb
push
je
xor
loopne
fmull
les
daa
cmpsb
jl
xor
iret
inc
shlb
xchg
in
mov
cmp
repnz
cld
inc
mov
sub
cmpsb
add
call
mov
dec
jo
sub
pop
lret
sub
fsubp
xchg
push
divb
xor
lods
mov
pop
mov
xchg
stc
xchg
test
mov
call
outsl
cmp
xor
xor
fimull
inc
hlt
lods
lds
jmp
xchg
mov
call
adc
gs
xor
das
es
fidivl
mov
faddl
mov
andb
addr16
or
inc
mov
xchg
jno
inc
bound
icebp
jb
fsubrl
add
sbb
sub
int3
out
lods
lds
pop
lcall
xchg
fwait
push
cmp
dec
push
adc
jo
and
and
ret
mov
mov
or
fisttpl
push
mov
mov
in
or
mov
sub
iret
xor
adc
mov
stos
push
test
pop
jmp
lea
mov
or
inc
loopne
jbe
pusha
ja
int3
lret
jo
or
cmpsb
cmp
or
loopne
cmpl
subl
push
es
insb
and
subl
mov
movsb
and
xchg
push
jo
adc
pop
ret
nop
into
sub
hlt
fdiv
aas
rolb
leave
mov
sub
pushf
jae
das
cmp
xchg
pop
mulb
inc
lock
xchg
push
addr16
mov
cmc
icebp
cli
or
cmp
shl
push
mov
and
dec
fpatan
add
bound
adc
loop
or
cmpsb
movswl
xor
mov
aad
adc
fs
addr16
in
sbb
sahf
into
bound
and
sbb
mov
loope
mov
dec
imul
mov
cmp
sub
pop
shrb
pushf
xchg
cmpsb
jo
je
ret
mov
adc
cmpsb
mov
sbbb
sti
std
push
aaa
imul
dec
mov
fsubrs
je
xorl
xor
mov
mov
adc
cmp
inc
mov
and
gs
test
cwtl
push
in
xchg
jbe
push
inc
lret
xchg
dec
dec
mov
repz
and
sub
testb
add
pop
pop
mov
inc
xor
insl
xchg
jnp
lods
mov
ja
sti
xchg
cltd
inc
mov
or
cmp
mov
adc
in
xchg
push
mov
scas
movb
in
jae
loop
push
or
lcall
sub
call
loope
push
fidivs
xchg
lahf
adcl
inc
repz
stc
lods
inc
addr16
pop
into
sbb
cmp
loop
xchg
sarb
mov
xchg
rclb
push
push
push
jnp
xchg
add
adc
push
mov
add
in
push
scas
mov
insl
cwtl
sbb
sbb
adc
repz
jge
mov
ljmp
mov
dec
and
xor
lahf
sahf
lret
inc
add
push
jo
push
ret
movsl
pop
dec
popf
jge
clc
cltd
mov
das
mov
lea
ret
fwait
and
fwait
adc
mov
ljmp
mov
cmp
bound
scas
inc
push
ret
loop
push
cltd
inc
push
out
repz
xchg
shrl
jns
loope
loop
add
jne
test
js
xor
stos
xchg
fdivrs
mov
ds
nop
nop
inc
or
dec
jbe
or
jecxz
xorb
jle
ds
push
mulb
lret
sub
testb
inc
push
inc
test
mov
xor
cmp
lds
mov
or
and
rcrb
and
sbb
iret
mov
sub
sbb
flds
fs
push
and
xor
inc
xor
mov
stc
ja
inc
into
dec
push
mov
mov
test
cmc
cmp
fnsave
push
icebp
xchg
fisubrl
call
cltd
mov
inc
hlt
out
in
arpl
jb
cli
outsl
add
dec
push
or
push
add
jnp
push
ja
popa
fstpl
test
scas
push
mov
sbb
leave
push
cmc
pop
insb
fimull
add
jbe
push
sbb
cmp
je
ficoms
mov
in
ja
dec
mov
sbb
stc
sub
fwait
sbb
mov
mov
mov
xchg
xor
jle
push
sub
test
iret
out
negl
mov
mov
cmp
popf
call
ret
pushf
or
or
daa
aaa
movsb
mov
insb
add
jo
mov
and
popl
sub
mov
lea
sahf
dec
bound
shll
mov
gs
dec
sbb
pop
sub
push
mov
or
int3
sub
data16
dec
cmp
lock
push
test
int3
inc
sti
das
out
lock
push
cmp
popa
fwait
push
mov
pop
lcall
mov
dec
mov
rorb
inc
sahf
push
or
das
cmc
sbb
icebp
inc
stos
push
hlt
testl
jo
sub
and
adc
jcxz
ss
mov
jl
lea
testl
ja
mov
jge
fidivs
mov
lret
inc
cltd
push
sub
pop
mov
mov
xor
or
ja
ljmp
repz
xchg
lahf
in
jne
hlt
les
test
scas
xchg
xlat
add
mov
sarb
dec
cli
cli
test
loope
push
in
ljmp
out
repnz
clc
pushf
push
jp
aas
add
out
and
nop
pop
shlb
sub
inc
les
push
std
cmp
lea
mov
mov
sahf
or
jbe
mov
subl
cld
dec
push
cld
bound
dec
add
sbb
lahf
sub
inc
push
outsl
inc
subb
gs
cmp
fisubrs
imul
lret
mov
pop
out
cmpsl
aad
inc
ss
push
test
lods
mov
fisubrl
mov
sbb
xchg
push
jo
nop
test
mov
pop
xchg
fdivrs
pop
pop
jns
and
faddl
bound
xor
pusha
jge
in
mov
add
or
xchg
std
push
push
mov
push
shll
dec
rorl
int3
xchg
scas
repz
cli
sbb
sbb
cld
jg
lahf
xchg
nop
mov
cmpsl
xchg
xor
push
pushf
stos
data16
adc
mov
cwtl
push
out
inc
pop
xor
movsb
stc
out
mov
sbb
adc
mov
xchg
adc
xchg
dec
sbb
imul
lods
mov
es
jmp
xchg
fiaddl
push
xchg
sub
test
std
mov
jge
xchg
pop
ljmp
push
pusha
fsubs
cmpl
push
lret
push
jl
cmp
faddl
lds
xor
push
int3
cmc
test
repz
lds
and
out
inc
imul
and
dec
movsb
int3
mov
sbb
add
stos
pop
fs
mov
xchg
outsl
push
dec
push
mov
dec
mov
rorb
test
hlt
push
bound
pop
je
adc
adc
lock
mov
sub
fcomps
nop
sub
iret
add
jecxz
and
mull
lock
jp
xchg
xchg
push
rclb
and
pop
dec
jg
mov
inc
js
out
movsb
mov
sahf
pushf
roll
cmp
xchg
in
jle
repnz
or
mov
hlt
mov
sub
jecxz
in
jno
inc
pushf
clc
cmp
into
pop
mov
adc
cmpl
test
hlt
insl
jecxz
inc
fsub
lds
jo
cmpsl
arpl
cmp
cmp
bound
lahf
out
cmc
lcall
xor
outsb
lahf
adcl
js
adc
mov
nop
mov
int
mov
adc
jnp
dec
repnz
std
bound
arpl
cmp
sahf
cmp
or
xor
fists
and
cmpsb
ret
int
enter
bound
and
push
or
jge
test
or
dec
mov
and
and
ss
xlat
and
push
or
imul
dec
jl
inc
enter
dec
jb
lea
or
in
mov
imul
or
imul
xorb
fsubrp
shrl
xchg
data16
add
jae
xor
pop
dec
fisttps
fcmovb
add
cmp
icebp
faddp
xor
xchg
xor
push
into
pop
mov
dec
mov
loopne
push
int
scas
mov
adc
hlt
or
je
mov
out
adc
push
out
les
stc
or
lahf
cmpsl
int
popf
andl
ljmp
or
bound
lods
mov
mov
sbb
mov
shlb
rcr
jp
mov
pop
arpl
push
push
push
jg
sub
jg
pop
les
lock
testb
mov
imul
arpl
bound
or
sbb
dec
or
push
push
rorl
stos
popa
or
icebp
mov
or
jo
nop
push
mov
in
cmp
sub
out
int3
inc
test
adc
lods
cltd
sbb
xor
or
fwait
test
mov
xchg
xlat
push
dec
stos
add
rolb
jo
mov
loopne
and
jg
fldpi
push
aad
aas
xchg
mov
out
jg
lahf
dec
sub
pop
or
inc
xchg
or
inc
dec
xlat
mov
pop
or
test
mov
dec
aas
pop
ljmp
fidivs
pusha
lret
xchg
cmp
lods
in
rorb
sbbb
cmpsl
dec
xor
push
out
xchg
popa
imull
mov
fs
mov
sti
or
sub
jg
push
adc
shrb
add
mov
scas
cmc
movsl
data16
mov
jmp
jo
mov
sub
faddp
in
sub
pop
inc
daa
lods
sbb
xor
test
jbe
or
cmpsl
data16
clc
fstpl
sbb
dec
and
stos
mov
inc
lods
mov
jg
jge
or
popa
push
pushf
stos
sub
mulb
push
or
scas
loop
and
imul
jge
xor
pop
xchg
xchg
rcrb
negl
nop
pop
decb
pop
les
aad
lcall
dec
iret
jb
lock
inc
xchg
mov
mov
into
jecxz
setnp
push
inc
shll
adc
fxtract
mov
or
pop
mov
lahf
lcall
js
scas
mov
data16
adc
mov
xlat
dec
rol
inc
call
push
sub
sar
jmp
sub
adc
enter
ljmp
mov
sbbl
add
insl
mov
pop
push
push
bound
addl
dec
push
divl
aam
pop
movsb
mov
test
aaa
lahf
mov
lock
loopne
fstpl
push
sub
inc
or
pop
add
sub
je
inc
xchg
cmp
cmc
iret
repz
fisttpll
out
frstor
and
xchg
lods
in
pop
pusha
xchg
mov
sub
jns
arpl
mov
cmc
stc
adc
cmp
add
sub
dec
mov
sbb
sub
cs
hlt
in
cmp
xchg
cltd
xlat
mov
xchg
xor
jnp
pop
faddl
lods
mov
mov
int
sbb
data16
push
cmp
sbb
outsb
js
xchg
add
ljmp
dec
xchg
cld
imul
lods
scas
into
sub
outsl
mov
hlt
cmp
in
jae
int3
cmp
xor
add
jge
xor
xor
cmp
aam
adc
pop
mov
mov
cmp
sub
xlat
or
gs
int3
xchg
or
pextrw
mov
xor
mov
add
pushf
or
leave
les
adc
jmp
pop
and
or
and
scas
fidivrl
adc
xlat
lock
xor
xor
inc
xor
add
jp
imul
pop
push
popa
xor
les
out
cwtl
lahf
lds
add
push
pop
es
push
xchg
xor
xchg
scas
adc
jnp
rcl
sub
or
and
jns
and
lret
mov
arpl
js
jle
pop
push
testl
add
jge
cmpsl
mov
std
lret
xor
in
rcll
push
dec
das
xchg
pop
adc
mov
cmp
add
rclb
cld
inc
mov
mov
dec
add
std
xor
mov
xchg
ljmp
or
jp
hlt
xchg
inc
int3
xchg
push
push
repnz
leave
jnp
fs
or
push
push
ret
xchg
jbe
lret
or
leave
xchg
add
jecxz
insb
inc
push
iret
js
mov
xchg
test
jne
xchg
xor
dec
hlt
ret
cmp
mov
mov
fadd
in
bound
out
jle
sbb
nop
jl
imul
jb
pop
fs
sub
pop
enter
vminps
or
insl
sub
and
roll
inc
in
shlb
mov
in
push
pop
lock
arpl
pushf
mov
dec
add
fwait
sub
lods
jle
mov
dec
imulb
add
xchg
ret
sub
in
mov
xor
dec
push
sub
and
pop
cmp
addr16
bound
or
fstps
in
out
rorb
js
mov
stos
push
inc
ret
mov
cmp
xor
jecxz
pushf
addr16
stos
add
pop
mov
or
lcall
js
or
mov
dec
daa
leave
and
push
ds
fwait
jae
repz
push
dec
in
subb
mov
ljmp
sarl
sbb
jmp
fwait
imul
sub
out
outsl
cmp
pop
insb
sarb
loopne
mov
enter
pop
sahf
out
lods
das
sbb
jb
push
push
out
sbb
xor
add
testb
repnz
push
es
mov
clc
xchg
xchg
xorl
adc
mov
add
push
sub
or
fldt
outsb
scas
int3
or
pop
cmp
inc
clc
enter
dec
push
cmp
mov
sub
inc
or
addl
mov
jle
jecxz
mov
lods
mov
test
int3
dec
stc
pop
sbb
ret
dec
pop
in
or
xchg
fidivl
mov
jbe
add
fldl
jo
int3
xchg
adcl
xchg
jg
leave
xor
aaa
lahf
loop
cmp
cmp
and
pop
sti
sub
dec
shll
lret
xchg
in
xchg
lds
loopne
or
das
repz
cli
sbb
jns,pn
fsubl
or
iret
pop
adc
jae
aas
push
dec
cli
sbb
in
mov
jg
xchg
shll
lock
push
nop
push
jle
ss
paddb
cltd
mov
jo
sbb
test
adc
sbb
popf
dec
test
sub
sar
imul
push
jae
lahf
movsb
sti
and
scas
loopne
sub
or
in
test
repz
imul
jns
mov
inc
dec
mov
push
enter
out
xlat
aaa
jmp
sbb
dec
arpl
xchg
lock
inc
and
dec
pop
cwtl
insb
xchg
push
pop
fwait
add
cmpsl
add
dec
repnz
rcrl
loopne
shll
shlb
shlb
insb
xor
sahf
push
sub
popf
sub
sub
add
lcall
jecxz
loope
sbbl
or
mov
and
or
mul
mov
cmc
imul
scas
and
pop
cmp
lods
lret
push
add
mov
repz
push
arpl
push
rcrl
mov
mov
pop
ljmp
sbb
mov
in
in
fucomi
cld
push
push
and
xor
jnp
sbb
mov
dec
xchg
sub
mov
scas
inc
stc
and
add
mov
dec
xchg
pop
lods
xor
jnp
sbb
stos
scas
push
sbb
insb
arpl
push
in
ljmp
aam
outsl
mov
rcrl
xor
arpl
mov
inc
push
mov
xchg
in
aaa
push
outsb
cmpsb
aas
bound
aaa
dec
push
mov
rcll
sti
pop
pop
sbb
mov
xor
shrb
mov
scas
pop
pop
mov
arpl
rclb
push
sar
jg
or
or
sbb
sbb
or
stos
mov
lods
ss
inc
js
mov
adc
jbe
movsl
or
aad
mov
push
pop
pop
push
repz
inc
hlt
xor
xchg
iret
adc
repz
mov
fldenv
sbb
int
push
sbb
mov
sahf
into
out
push
jmp
pop
pop
inc
push
pop
dec
inc
rclb
xor
add
add
inc
xchg
and
out
andb
fdivr
xchg
push
ret
xchg
pop
int3
jo
mov
push
enter
sbb
push
push
push
rorb
adc
xchg
inc
clc
mov
pushf
clc
xorl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
push
push
pushl
call
mov
dec
mov
jmp
push
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
inc
xor
sub
mov
movl
push
xorl
add
jmp
mov
notl
mov
notl
inc
cmp
movl
jb
adc
mov
xor
add
jmp
andl
mov
and
mov
adcl
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xorl
mov
add
sbbl
movzwl
xorl
mov
negl
mov
orl
movzwl
xorl
xor
add
mov
mov
inc
mov
cmp
movl
jne
mov
movl
mov
decl
xor
add
andl
mov
dec
mov
xor
andl
add
movl
mov
not
movl
movl
movl
mov
mov
movl
mov
jmp
mov
add
mov
andl
xor
xor
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
movl
mov
lea
mov
mov
mov
lea
movzwl
sbb
mov
mov
andl
mov
add
mov
negl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
orl
mov
mov
add
mov
lea
add
mov
mov
orl
mov
lea
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
sbbl
lea
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jb
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
jmp
sarb
jae
dec
bound
mov
jmp
jl
sbb
fisttpll
lret
mov
clc
or
les
mov
ja
mov
xor
dec
ja
int
jp
fdivrl
jne
pop
xor
sbb
fisubrl
jne
sub
dec
cmp
jp
add
fidivs
push
push
mov
inc
sbb
cmc
test
mov
ror
cmp
in
cltd
fs
pop
cmp
int3
or
comiss
xchg
inc
icebp
mov
mov
in
in
mov
test
mov
pop
or
mov
rol
iret
cltd
jl
add
mov
iret
int
inc
mov
cmp
lret
into
and
jns
cmp
mov
daa
notl
jnp
scas
add
outsl
add
mov
int
sub
sub
fwait
inc
adc
xchg
jg
out
cwtl
imul
subl
mulb
jns
adc
xor
jg
inc
adc
ss
hlt
leave
add
mov
pop
push
sub
aam
jns
lds
pop
sub
jge
sahf
iret
scas
cmp
iret
mov
push
mov
fstpt
icebp
xlat
in
loope
imul
and
ja
cs
mov
lea
xchg
add
lock
and
mov
inc
fwait
pushf
jl
scas
fistpll
push
and
cmp
test
pop
sub
iret
fldl
sbb
lret
cltd
mov
jnp
jne
cmp
repnz
add
pop
std
ds
push
movsl
jne
cmpl
scas
add
fsub
psrlq
jbe
add
xorl
add
rcr
cmpl
mov
push
push
in
cmp
adc
mov
xchg
push
aas
add
in
inc
adc
pop
nop
jecxz
movl
jns
lcall
push
ja
and
mov
mov
lcall
or
testl
std
push
xchg
pusha
dec
cmpsb
add
mov
bound
nop
jo
rcrb
mov
adc
ljmp
dec
in
dec
mov
add
aaa
dec
mov
ja
and
outsl
movsl
shlb
cmp
pop
roll
dec
fwait
outsb
aaa
inc
push
icebp
adc
pop
push
lahf
pop
lahf
mulb
outsl
andb
and
mov
outsl
flds
push
data16
jle
loope
push
notb
movsl
cmp
jg
test
cmp
rcrl
mov
fidivl
inc
arpl
mov
add
scas
int3
mov
adc
and
out
sbb
inc
cmc
mov
xchg
xor
addr16
pusha
adc
xchg
negl
cmp
jo
cld
inc
inc
inc
cmpsl
movsl
push
clc
cmp
movb
loop
inc
cmp
push
mov
in
push
in
lods
enter
mov
sbb
testl
clc
insb
in
xchg
inc
or
sbb
or
xchg
out
sub
jne
mov
daa
sub
mov
and
and
pop
shll
movsl
xchg
es
pop
lods
and
mov
and
lret
mulb
and
xor
or
lock
jge
mov
iret
mov
sti
adc
mov
pop
hlt
test
cmpsb
push
mov
add
fs
pop
add
arpl
fcmovb
inc
fistps
cmp
xor
test
ss
icebp
mov
dec
xor
mov
and
xchg
outsl
outsb
ret
xchg
insl
es
adc
lock
je
or
and
into
cmp
outsb
xchg
mov
call
add
adc
scas
stos
mov
shl
inc
in
repz
pop
mov
jbe
aaa
mov
test
das
fldt
in
push
cmpsl
mov
and
lret
mov
outsb
aas
cltd
jmp
pop
stc
pusha
mov
mov
xlat
js
mov
mov
xchg
cmc
push
pop
ret
icebp
mov
mov
cmp
mov
adc
xchg
notl
clc
popf
and
jnp
inc
in
aam
fs
cmp
fsubs
push
outsb
dec
adc
push
imul
adc
xchg
pop
sti
idiv
or
push
notb
test
push
and
mov
fcomp
or
or
xlat
pop
loop
pop
or
sub
push
scas
fisubs
sbb
jno
jge
push
stc
filds
jae
rolb
mov
jb
mov
push
fwait
lret
inc
mov
aaa
fldenv
addb
testl
mov
pop
add
add
daa
and
ja
push
mov
dec
in
in
out
or
mov
jnp
aas
insb
push
add
xchg
test
inc
dec
and
push
ds
inc
pop
mov
push
jg
and
icebp
inc
pop
adc
push
add
add
jns
sbb
ja
add
cmp
mov
inc
mov
movsl
push
addb
push
inc
jns
cltd
xor
jnp
fistl
repnz
sbb
out
bnd
pusha
loopne
stos
mov
mov
cmpsb
popa
add
mov
in
loop
in
xor
jg
stos
loop
out
push
jmp
cld
sub
xor
into
fisubl
mov
xchg
push
or
loope
xchg
sub
inc
cli
sbb
bound
cltd
je
pop
jmp
dec
sub
in
add
jnp
bound
mov
sahf
add
int
xchg
repz
lods
popa
fisttpl
pop
test
mull
push
sbb
js
inc
lret
jno
push
ret
test
add
or
repz
and
mov
xchg
loopne
fisubrl
and
add
aam
pop
xor
sbb
dec
sbb
push
jo
sbb
cld
ret
nop
mov
dec
mov
je
cmp
or
mov
mov
cmp
icebp
sub
sub
pop
jp
pop
movsb
lods
call
mov
jno
mov
xlat
into
shr
or
pop
push
xchg
mov
inc
mov
out
sub
leave
ds
lods
sub
pop
hlt
sbb
ss
icebp
aad
mov
addl
inc
cltd
icebp
and
mov
xchg
pop
mov
xor
cltd
aad
xchg
push
je
adcl
mov
je
nop
xchg
xor
nop
xor
mov
mov
scas
mov
xor
xor
or
cmp
ss
movsb
pop
shll
push
incl
out
inc
lea
push
or
loopne
mov
pop
xchg
inc
clc
push
jge
loope
test
add
in
xor
lret
cmpsb
pop
cs
adc
sti
loopne
movb
mov
in
dec
cmp
inc
lea
bound
pop
mov
mov
je
fidivrs
enter
movzwl
sub
dec
into
jp
in
sbb
pop
aas
outsl
sahf
repz
fwait
jns
or
stos
stc
adc
cwtl
sub
mov
lock
cmpsb
adc
mov
mov
mov
mov
mov
mov
stos
mov
push
xchg
cs
jae
add
movsb
jl
or
adc
hlt
push
fptan
inc
mov
pop
mov
mov
pop
dec
mov
icebp
xor
add
pushf
gs
in
les
lahf
out
sub
adc
js
xchg
fwait
or
xchg
dec
pushf
dec
jbe
jo
cmp
loopne
insl
cmp
mov
loope
adc
int3
pop
sbb
mov
xchg
pop
xchg
xlat
gs
out
sub
nop
mull
push
jge
lods
push
mov
mov
push
cs
xor
pop
lret
in
sub
out
push
jg
mov
loop
pushf
and
stos
pop
ret
push
in
fwait
cltd
negl
xchg
dec
xor
jl
adc
rcrl
dec
in
jg
dec
mov
test
sahf
mov
xchg
enter
sbb
cmp
in
pop
into
stc
rorb
and
inc
jle
stos
sbb
movb
push
cmp
insl
pop
push
in
xor
jo
inc
cld
out
or
lret
sbb
inc
fimull
cli
repnz
and
sahf
fisubrl
out
xchg
xchg
push
insb
imul
movsl
push
cmp
fbld
in
mov
xchg
push
cmp
and
mov
xchg
jo
cmp
outsb
cmp
and
inc
mov
push
push
or
jmp
jl
sysenter
push
stos
ret
fs
push
jmp
loopne
dec
push
iret
incl
gs
enter
loopne
mov
mov
add
into
lret
das
sub
adc
fistl
mov
mov
pop
mov
fwait
out
ret
enter
arpl
lret
cld
cmp
test
mov
jge
lods
lret
xchg
xor
lcall
test
xor
pop
addr16
push
mov
adc
dec
push
jb
das
insl
hlt
sub
mov
cld
fnstsw
cmpsl
push
cmp
inc
sahf
pop
stos
andb
jne
cld
or
push
xchg
xchg
mov
mov
or
stos
jns
xor
sahf
pop
or
xor
je
mov
fbstp
sub
lds
popf
push
lds
shll
mov
ficomps
pop
dec
push
loop
scas
fisttps
aas
iret
rorb
push
cmp
and
nop
xchg
push
fsin
dec
rcll
pop
imul
icebp
mov
mov
jns
and
jp
outsb
dec
test
lret
popf
aaa
stos
daa
jle
sbb
dec
sub
mov
in
fs
jle
or
mov
dec
jne
into
add
pop
sub
push
mov
scas
mov
out
mov
dec
lock
push
mov
in
scas
out
mov
leave
or
xchg
addl
jmp
imul
popf
adc
jae
push
push
inc
inc
mov
aas
repz
into
stc
sahf
jbe
sbb
and
fs
sbb
sub
mov
imull
add
cmpsl
pushf
sbb
icebp
flds
mov
jne
xchg
loopne
or
mov
ss
fisubl
pop
jae
dec
and
dec
nop
adc
mov
je
xchg
test
enter
subb
mov
sysret
imul
push
mov
pop
or
sub
add
jecxz
push
sbb
jmp
repnz
out
insb
cmp
cmp
sub
divb
xor
clc
fs
lcall
cltd
sahf
dec
mov
lock
jb
jg
mov
iret
mov
lds
dec
xor
bnd
xlat
or
mov
je
dec
fcompl
neg
or
in
loope
lock
shrl
sarb
jne
inc
adc
xor
dec
out
push
xor
mov
cmpsl
add
into
inc
test
in
inc
test
pop
mov
ret
in
mov
icebp
pop
dec
lret
popf
mov
mov
andl
and
aas
mov
in
push
push
out
das
ret
lods
xchg
dec
cmpsb
out
and
mov
repnz
adc
pop
ljmp
mov
mov
mov
lea
clc
lds
test
push
or
jbe
shr
pop
ret
or
pop
stos
dec
outsl
in
xorb
dec
lcall
ret
jmp
andb
pop
adc
mov
push
cmp
xor
jo
adc
shll
outsb
movsb
cmpl
jle
mov
imul
jno
adc
dec
sub
jne
adc
lret
add
rcrl
cmc
push
je
test
repz
dec
js
add
adc
adc
sbb
cmc
outsb
out
or
addl
pop
cmpsl
add
test
sahf
sar
mov
scas
mov
fdivl
sbb
gs
cmpsl
mov
dec
jp
nop
dec
inc
loopne
js
inc
cmpsl
pop
jae
daa
iret
mov
insb
cmc
aad
xchg
or
icebp
popa
push
xor
nopl
xchg
repz
cmp
hlt
es
sahf
add
addr16
shlb
mov
shrb
fcompl
pop
aam
jnp
hlt
xchg
es
lods
jle
cmp
leave
mov
cmp
imul
xorl
repnz
js
loopne
lret
inc
add
adc
xlat
add
dec
insb
jge
into
mov
or
aad
mov
aaa
mov
out
xor
sub
ret
jecxz
jae
pop
cld
inc
or
stc
into
lret
pusha
out
test
dec
mov
mov
xchg
pushf
mov
xor
dec
lds
mov
orb
int
pusha
inc
push
lds
js
mov
in
outsl
ds
jae
ret
add
rcll
test
loopne
rclb
scas
lods
into
mov
call
addr16
int
xchg
test
lahf
je,pt
sub
das
push
repnz
sti
call
adc
sbb
pusha
jmp
mov
shlb
les
mov
xchg
adcb
sbb
fimull
and
push
lcall
fdivrl
lret
notl
mov
xchg
mov
mov
shlb
inc
stc
jl
jle
jmp
pop
loop
mov
pop
jne
call
ds
adc
push
push
add
gs
out
mov
add
test
pop
cltd
push
sbb
push
mov
mov
arpl
inc
xor
fmuls
rcll
inc
or
int
icebp
pop
jno
hlt
cmp
or
inc
cmp
sub
mov
call
test
push
cmpsb
or
cs
add
mov
addl
das
cld
inc
popa
lcall
sub
arpl
add
mov
divb
pushf
inc
or
xchg
mov
lcall
call
mov
icebp
fistpl
rcll
cmc
pop
stos
jl
int
sbb
xor
xchg
in
lea
push
push
jb
flds
adc
lcall
hlt
out
cmp
lods
ret
dec
jbe
cld
mov
in
jecxz
leave
dec
push
inc
dec
pop
push
pushf
repnz
xor
cmc
in
and
cs
inc
shl
lods
xchg
cmpl
pop
sub
rcr
mov
stc
inc
lret
sti
xor
popf
cltd
dec
inc
cmpsl
xor
cmp
or
rorl
mov
push
xchg
inc
in
das
pop
stc
imul
adc
jp
xchg
and
push
cmpl
dec
pop
gs
stos
popl
jg
addr16
cmp
in
jno
and
addr16
xor
je
rcll
cmp
sub
fwait
out
pop
adc
scas
jmp
outsb
xor
mov
mov
cmc
ljmp
in
and
orl
ja
in
mov
fsts
jbe
je
or
incb
jle
add
adc
daa
xchg
fwait
idivb
call
jo
in
xor
push
lock
and
lcall
jmp
or
fadd
repz
clc
fwait
xchg
popa
iret
adc
call
jecxz
dec
cmpsb
out
and
lahf
mov
push
sahf
jle
cmp
stos
mov
scas
into
jnp
testl
loop
xor
mov
aam
cmp
rcrl
test
mov
mov
pop
xchg
rol
xchg
pushf
xchg
add
je
or
ljmp
xlat
stos
loopne
mov
or
cs
cmpsb
inc
lret
das
rolb
stos
xor
loopne
popf
movsb
xchg
andb
in
loop
inc
add
data16
sub
and
sbb
push
jns
sbb
push
sub
rolb
mov
sub
js
xchg
das
push
lret
pushf
jp
test
adc
push
and
mov
dec
iret
jnp
and
bound
xchg
adc
mov
push
jmp
dec
push
idivl
or
cmp
jle
and
lret
js
icebp
push
push
cwtl
adc
js
fildll
adc
inc
jmp
addb
stc
xor
push
dec
das
js
xchg
sahf
inc
mov
mov
mov
in
and
dec
andb
int
dec
hlt
dec
push
mov
jge
pusha
mov
xchg
loopne
adc
xchg
incl
popf
dec
inc
dec
inc
imul
pop
dec
movsl
fmuls
sub
dec
sub
pusha
mov
and
jmp
negb
popa
cmp
flds
insl
rclb
xor
xchg
test
xchg
fnstsw
sub
xchg
and
or
add
test
mov
add
shll
mov
js
cmc
fstpl
les
mov
gs
je
shl
pop
movsl
popf
jmp
jne
pop
repnz
test
iret
bound
jae
lcall
js
mov
and
mov
and
push
cmpsl
in
add
popa
add
xchg
xchg
orb
dec
testb
cmpsl
sbb
imul
inc
add
sahf
adc
fldt
xchg
inc
arpl
cmp
daa
mull
push
daa
movsl
push
pop
rcll
jne
divl
popf
out
fnstcw
fnsave
xchg
or
push
dec
mov
adc
sbb
pop
fcmovnb
add
andb
adc
lret
lcall
jns
sub
push
dec
fsubrl
and
imul
inc
ud2
sbb
jb
jmpw
ror
xor
dec
mov
dec
lds
pop
fwait
out
cmp
fbstp
lret
lods
lea
pop
sbb
cmp
repz
jo
ja
mov
pop
mov
xchg
scas
adc
out
movsl
mulw
mov
sarl
or
cmp
fsubr
pop
jecxz
inc
xor
orl
inc
int3
push
les
clc
inc
inc
test
cmp
stos
and
sub
or
jno
mov
stos
sahf
mov
scas
pop
nop
sahf
mov
test
xchg
testb
gs
push
adc
jne
adc
outsb
xchg
repz
mov
fs
mov
inc
push
inc
mov
sbb
movl
pop
inc
add
mov
push
xchg
hlt
enter
imul
push
jo
cmc
dec
xchg
mov
xor
sub
inc
push
clc
repnz
shl
movsl
shlb
dec
cmp
cmp
sub
pop
pop
and
ljmp
add
arpl
jb
or
out
mov
push
xchg
sub
fisubrs
push
loope
cli
add
xchg
stc
es
adc
push
xor
pop
lret
std
add
sub
or
or
addr16
sbbl
pop
sub
cmp
or
sarl
mov
sub
adc
sbb
jno
bound
lcall
in
and
mov
mov
sbb
cmp
pop
mov
jbe
test
xchg
cmp
jge
sub
mov
add
dec
mov
rorl
lret
jo
fistl
iret
add
xor
cmp
push
popa
and
or
jl
stos
scas
popa
sbb
fildll
js
loope
jmp
pop
clc
shll
mov
push
ja
sbb
jmp
repz
push
xorb
shrb
notb
jnp
ljmp
gs
bound
repz
jl
inc
cmpsl
pop
xchg
jno
movsb
in
mov
loope
negb
jle
jmp
sbb
iret
in
sbb
sbb
sbb
push
ljmp
imul
daa
xor
sbb
cmpsl
sarb
aad
mov
cli
lret
js
xor
fnstcw
mov
imul
jbe
scas
aaa
in
rorl
inc
mov
sub
mov
xchg
push
loope
sub
push
lret
leave
mov
idivb
mov
jne
lret
xchg
pop
pop
fbstp
xchg
pushf
enter
leave
jnp
ja
and
insb
xor
dec
xchg
dec
adc
scas
cwtl
insl
add
or
jle
je
mov
push
aaa
movsb
xor
jle
jge
push
cltd
jle
cmpsl
sbb
mov
add
out
mov
mov
in
mov
loop
mov
stos
insl
mov
mov
rolb
jmp
add
mov
clc
sbb
or
mov
lods
jg
adc
mov
push
sub
xchg
sub
fsts
std
mov
mov
push
xchg
mov
cmp
xchg
punpckhwd
jle
cmc
push
pop
push
rcll
inc
cmpsb
mov
push
enter
cwtl
mov
xchg
push
dec
lods
inc
movsl
mov
pop
aam
outsb
or
lahf
mov
xchg
ror
cmp
inc
pop
call
cmpsb
ss
mov
and
adc
stos
mov
jb
push
pop
sub
aam
in
insb
loope
jne
jbe
sub
cltd
sub
mov
pop
and
xchg
cmp
aam
daa
pop
xor
sarl
scas
adc
sti
into
dec
xor
or
pushf
cmc
mov
pop
jl
js
fwait
sbb
das
add
adc
sbbl
sbb
xchg
adc
and
sub
dec
pop
add
jae
fidivrs
mov
cld
pop
sahf
subl
mov
dec
push
mov
cmp
sub
dec
test
cmp
xchg
lret
out
inc
dec
sti
add
jp
fidivs
xlat
daa
hlt
push
popf
cmp
mov
das
pop
leave
jecxz
rolb
xchg
mov
mov
add
pusha
shlb
lcall
mov
mov
gs
mov
pop
outsl
pop
cmp
cwtl
lcall
std
dec
and
arpl
fimuls
cltd
jg
pop
ret
sub
pop
iret
icebp
or
cli
out
dec
jo
addr16
pushf
ds
mov
sub
lret
adc
mov
mov
cmpsl
ret
xchg
or
mov
mov
rcll
jge
inc
sbb
movsb
lds
jnp
pusha
push
nop
aad
xchg
xchg
repnz
fisttpl
insb
dec
inc
and
lds
and
outsb
loop
add
and
loope
adc
add
shld
loop
xchg
cmpsl
loop
cmp
stos
int3
cld
mov
mov
cmp
shll
inc
and
jno
inc
jge
shll
pop
push
mov
in
mov
pslld
mov
add
adcl
cld
xchg
rcll
je
repnz
xchg
loope
and
push
pop
pop
jno
ja
add
add
out
mov
test
push
ja
idivl
cwtl
adc
inc
loope
mov
mov
mov
loop
sbb
xor
fwait
scas
push
std
notb
and
add
mul
sub
mov
push
push
mov
adc
mov
inc
sbbb
inc
mov
lret
sbb
ret
stos
fnsave
mov
cmp
sub
pop
add
test
push
cmp
and
xor
imul
or
bound
stc
pop
outsb
cmp
hlt
cmc
es
ret
jo
fs
pop
push
mov
out
or
mov
add
imul
mov
int3
pop
push
aad
mov
cmc
cmc
push
movsl
push
out
rcl
push
sbb
and
push
outsb
ror
in
pop
hlt
lods
and
or
insl
fisttps
jno
das
fbstp
neg
je
sbb
push
lods
xor
imul
aam
lret
jmp
daa
mov
cmp
into
ret
lret
push
aam
or
aas
xchg
lock
loopne
mov
push
imul
mov
insl
adcb
sub
mov
add
xlat
pushf
mov
mov
mov
in
cwtl
mov
bound
dec
ss
xlat
ror
popf
or
outsb
push
push
sbb
sub
in
mov
xchg
inc
xor
pop
hlt
js
jns
js
push
mov
insl
into
rcl
cmp
int3
shl
test
sbb
mov
xlat
pusha
mov
push
push
cmp
adc
xchg
cmp
stos
sti
lea
jae
js
lock
xor
fcomp
mov
push
dec
jno
add
mov
sbb
popf
aaa
inc
lea
and
mov
and
ljmp
test
stos
fidivrs
mov
bound
scas
test
pop
xor
in
xchg
cs
add
jecxz
mov
je
cmp
push
mov
lcall
ja
movsb
enter
ljmp
xchg
push
xor
push
test
jne
dec
push
mov
hlt
inc
jmp
sbb
jg
jnp
push
sub
mov
test
sub
fstps
js
jmp
lock
iret
in
insb
lock
pop
push
adc
push
inc
mov
pop
push
mov
mov
stos
xchg
jae
lods
mov
xchg
cmc
inc
std
popa
bound
pop
scas
aad
aaa
cmp
cmp
xor
or
cmp
rcrl
ficompl
sbb
loopne
sbb
int
shlb
push
xor
fcomps
pusha
jnp
jb
in
fdivs
loope
and
or
in
ja
jg
enter
and
mov
pop
fldenv
mov
aam
in
adc
xchg
and
loopne
pop
xchg
daa
xor
adc
jp
jecxz
test
inc
not
adc
inc
add
test
jmp
leave
pop
jae
addb
adc
std
xchg
movsb
pop
xchg
outsl
ss
mov
popa
mov
push
fstpl
sbb
pushf
mov
adc
pop
idivb
xlat
sub
popf
fdivrl
jle
dec
jge
or
dec
sbb
sbb
cwtl
xchg
xchg
sarl
ret
sub
out
dec
fnsave
pop
addr16
mov
mov
mov
mov
inc
pop
push
jecxz
test
and
sbb
pop
mov
sbb
mov
outsl
adc
xchg
cmp
sar
stos
sub
cltd
cmp
sbb
mov
setle
mov
ds
sbb
lock
je
cmpsb
cwtl
fs
push
sub
pop
mov
mov
out
mov
leave
cltd
dec
ljmp
shrb
push
test
push
in
and
mov
std
mov
ret
call
push
add
fs
stc
jns
sti
sbb
cwtl
in
es
push
outsb
mov
fisubrl
mov
scas
lret
test
mov
scas
push
adc
mov
xorps
sub
push
ficomps
shrl
fsubrs
xchg
jl
cmp
jg
arpl
jg
jns
mov
lock
test
aam
dec
lods
xchg
aas
xchg
jge
mov
adc
stc
push
fidivrs
mov
inc
icebp
mov
add
lea
lret
fadds
push
notb
dec
sbb
dec
and
fmuls
xlat
jne
lahf
or
inc
adc
pop
xor
adc
test
out
pop
call
test
pop
pop
stc
mov
in
cmp
data16
cli
mov
cli
push
jmp
into
xor
leave
sahf
test
pop
jo
xchg
adc
inc
add
outsl
mov
pop
addr16
push
cmc
inc
ss
icebp
fcmovne
lcall
stos
pop
ja
pop
adc
and
nop
inc
fs
movsb
add
cltd
fistps
loopne
rcl
add
fidivl
shlb
pop
out
movsb
mov
repz
add
push
bound
inc
pop
and
scas
scas
dec
dec
neg
mov
mov
lock
inc
pop
pop
in
pop
loop
fucomp
dec
add
add
jb
lret
fcmovnb
loop
jge
mov
mov
push
loope
std
add
jb
out
cmp
sbb
pop
sub
add
das
xchg
jb
fidivrl
gs
scas
or
xor
cmc
or
lret
cmp
jg
lds
sub
cmc
mulb
push
rol
push
icebp
sub
out
sub
into
sbb
in
ljmp
mov
dec
xor
mov
sub
jp
popf
push
xor
push
iret
dec
test
dec
dec
xlat
mov
cmovbe
dec
sub
push
inc
stos
pop
cmp
movb
or
pusha
push
mov
mov
sub
inc
gs
xchg
cvtpi2ps
xchg
and
into
fs
jno
push
fildll
enter
pop
pop
inc
adc
xor
test
jle
iret
arpl
push
xor
push
dec
mov
scas
jle
out
sarl
inc
mov
mov
popa
mov
out
bound
popa
mov
pop
clc
xchg
outsl
fsubr
mov
in
cwtl
push
jmp
pop
andl
pop
mov
mov
ds
fdivrs
cmp
movsl
pop
jl
mov
cmp
jo
pop
cs
sub
sub
into
dec
addb
dec
mov
lds
fildl
pusha
daa
int3
push
cmp
iret
aas
imul
call
pop
or
mov
xchg
fimull
jmp
lcallw
cmp
jmp
rcr
inc
lods
and
xchg
mov
mov
sahf
and
gs
cmp
mov
insl
repnz
ror
outsl
in
stc
test
loopne
push
and
insl
inc
repnz
rorb
pushf
dec
adc
inc
ret
mov
scas
xor
xlat
mov
jae
cmp
dec
hlt
jp
jmp
jns
mov
cmp
jl
daa
cmpsb
xchg
adc
mov
cmc
js
loope
jno
xor
mov
xor
mov
push
mov
fisubrl
sbb
aaa
cltd
fdivs
ss
mov
gs
aaa
push
jae
pop
xchg
sbb
xchg
pop
fisubrl
cmp
sub
sub
mov
adc
pop
jnp
in
shl
mov
fisttps
pop
loope
or
jb
aaa
inc
mov
mov
daa
jecxz
outsb
mov
fstps
cli
or
pop
aam
out
mov
faddp
xchg
popf
sub
or
lret
xchg
jle
pop
jg
lods
pop
inc
cwtl
and
push
ljmp
popa
jnp
pop
add
cmpsb
out
movsl
or
nop
pop
hlt
mov
insb
pusha
ss
fdivs
std
mov
xor
add
or
sarl
inc
es
jecxz
popa
out
out
rorb
sub
mov
movsb
lret
stc
enter
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
jmp
mov
cmp
mov
pop
int
jl
pop
jl
ja
fisttpll
mov
xchg
outsl
adc
or
inc
xchg
mov
inc
movsl
add
xor
push
push
mov
inc
mov
sbb
call
push
aad
fdivl
icebp
aas
mov
or
out
mov
push
pop
pop
stos
pop
enter
mov
dec
popaw
adc
nop
mov
shll
insl
lock
xor
pop
mov
dec
lret
aad
clc
cmp
sbb
js
ds
outsl
sti
int3
movsl
dec
mov
jns
push
dec
xchg
or
cmc
stos
xlat
inc
rolb
out
out
arpl
sub
or
jmp
addr16
cli
inc
inc
test
jne
sub
cmp
popa
adc
mov
pop
sbb
cld
es
jno
sbb
inc
mov
xchg
mov
out
test
loope
mov
xor
lods
scas
aaa
testb
inc
xchg
pop
out
inc
push
mov
mov
and
enter
out
dec
mov
mov
mov
clc
out
lret
xchg
xchg
dec
fdivrl
outsb
or
xor
aaa
fadds
ds
mov
lods
mov
in
icebp
aaa
lea
pop
add
popf
push
xor
or
test
fcoms
sub
outsl
clc
ljmp
js
and
sbb
xor
and
rolb
sub
mov
adc
je
rol
and
inc
add
jne
pop
xchg
push
xor
arpl
inc
lea
je
imul
aam
sarl
mov
lcall
jno
lock
jle
pop
mov
dec
lea
add
ss
cmp
mov
jo
loop
shl
mov
aas
iret
loop
jg
fnstsw
std
scas
add
xchg
jl
mov
cmpsl
loope
das
pop
inc
mov
lcall
jno
mov
mov
popf
sbb
push
push
mov
out
cmpsl
test
icebp
popf
scas
mov
shl
adc
cmc
dec
out
pop
sbb
hlt
fcoms
ret
inc
movsb
mov
movl
sub
add
sub
mov
xor
push
or
push
test
xor
mov
mov
push
jle
aaa
xor
and
push
cld
incl
pop
or
sub
test
mov
sarb
loope
rclb
push
arpl
push
mov
mov
scas
popa
loope
mov
clc
and
call
cmpsl
add
popf
imul
cmpsb
pushf
xchg
and
je
mov
ja
jo
push
loop
lods
dec
mov
fcom
fistpll
mov
pop
inc
dec
mov
cmpl
pushf
jl
push
dec
mov
mov
fstl
test
ljmp
dec
decl
out
cmovl
repnz
sbb
push
stos
cwtl
dec
dec
sub
aad
test
bound
stc
and
mov
jbe
mov
pop
mov
or
call
adc
lahf
xchg
xor
lock
or
loope
testb
or
das
es
jne
or
cmp
popf
jb
mov
pop
push
inc
aam
outsl
popa
les
or
popa
xor
data16
sahf
call
cmpsb
fs
mov
xchg
mov
stc
sahf
in
inc
daa
sub
cmp
mov
je
fstp
in
retw
xor
sub
loop
push
add
or
outsl
dec
xchg
enter
sti
mov
sbb
orl
or
in
push
aam
adc
xchg
push
add
lcall
mov
cmpsb
push
adc
adc
loopne
cs
addr16
popl
cs
sub
mov
sarb
jle
and
das
push
jp
mov
cmp
lcall
lcall
insb
jnp
pop
push
adc
fwait
pop
xchg
xchg
sub
in
mov
jno
sub
add
sbb
sbb
mov
or
aad
ret
jbe
cmp
jbe
mov
pop
xchg
mov
push
mov
stc
stos
inc
bound
loope
jecxz
xor
mov
sbbb
adc
sbb
out
inc
mov
pop
rorb
push
bound
clc
nop
imul
cld
mov
test
adc
xorl
xlat
pop
sub
inc
scas
push
jbe
dec
shll
or
and
je
ret
leave
push
arpl
sub
xlat
dec
or
sbb
xor
mov
insl
sub
pop
leave
fisubrs
cs
ficompl
mov
push
aad
add
and
orb
cmp
mov
jle
and
je
adc
xor
js
inc
xchg
xchg
adc
cmp
int3
mov
out
mov
les
mov
pop
xchg
cmpsl
or
adc
inc
push
inc
or
pop
cmc
iret
cmp
gs
popa
sub
sbb
mov
js
test
sub
adc
repz
adc
fmuls
stc
lock
add
push
rclb
xchg
enter
cmp
fistps
cmp
lcall
pop
bound
mov
iret
and
popf
mov
push
xchg
dec
dec
insb
test
mov
sarl
repnz
pop
shrl
mov
leave
and
or
push
add
pushf
in
jns
fsubrp
movsl
add
pop
cmpsb
jb
insl
icebp
movl
push
jnp
mov
hlt
scas
xor
adc
pop
je
in
push
mov
into
or
and
cmpb
push
test
xchg
inc
adc
mov
repnz
mov
fstp
mov
and
jp
aam
push
or
lods
cmp
push
int3
mov
bound
rcrl
sti
mov
and
push
std
xor
cmp
mov
xchg
mov
push
sbbb
hlt
sub
inc
loop
inc
fnstcw
stc
push
pop
push
sub
add
dec
or
mov
sub
mov
jmp
mov
jge
and
push
or
sti
cmp
repnz
sub
and
cmp
jg
je
mov
es
mov
cld
xchg
adc
cmp
imul
pop
nop
flds
mov
lock
ja
adc
pop
lahf
ss
jns
mov
nop
xlat
ficompl
jns
add
les
xor
xor
lods
mov
jmp
fstl
insb
jge
cmp
fldenv
in
ret
jmp
mov
loopne
mov
nop
adc
mov
pop
iret
dec
fdiv
or
add
hlt
mov
and
orl
mov
mov
or
push
jp
mov
xchg
mov
cmove
jmp
inc
andl
dec
adc
cli
sbb
sbb
je
insb
pop
jle
cmp
mov
aam
or
nop
iret
loop
movsl
nop
add
adc
mov
xchg
ds
jnp
mov
inc
out
jo
mov
daa
jl
jmp
orl
enter
pop
mov
inc
push
movsl
mov
mov
js
add
imul
dec
cmp
mov
mov
xlat
roll
jbe
xlat
aas
das
sahf
push
mov
loopne
out
lret
int3
int3
cltd
xor
push
and
adc
dec
mov
enter
xchg
push
insl
mov
inc
loop
std
xchg
js
cmp
ss
xchg
popa
repz
loope
adc
pop
and
xor
popa
jge
test
mov
mov
fcomps
and
rolb
btc
inc
push
insb
push
pop
fidivl
add
je
pusha
fstpl
or
lods
xchg
push
adc
es
pop
mov
insb
inc
xchg
sbb
lea
xchg
jnp
pop
fmuls
cmp
dec
hlt
test
ret
push
jne
lods
cld
out
aad
cmp
jg
xchg
ljmp
pop
insl
jg
imul
loop
ds
pop
iret
dec
push
and
sbbl
test
add
out
pushf
mov
add
xchg
in
mov
faddp
lea
add
int3
hlt
nop
jg
inc
or
sub
cmpsl
lock
xor
iret
cwtl
sbbb
adc
lahf
pop
enter
call
icebp
push
in
mov
or
aad
ljmp
mov
hlt
hlt
mov
and
sub
test
mov
adc
mov
xor
dec
mov
leave
into
push
negb
into
push
lcall
add
outsb
dec
mov
xchg
adc
repnz
xor
mov
out
aam
or
addr16
lret
aad
inc
in
cld
mov
pop
pop
cld
addr16
in
cmp
ds
test
test
repnz
sub
int
fisttpll
cmp
icebp
leave
cmpsb
dec
inc
ss
rorl
sbb
jae
dec
dec
sub
shr
xchg
cmpsb
sub
xor
in
xlat
cwtl
push
mov
dec
scas
lcall
xor
cmp
jns
into
fldl
outsb
sbb
mov
sahf
mov
mov
scas
fs
pusha
jmp
sub
stc
xor
push
mov
in
arpl
and
popf
leave
cli
scas
sub
nop
sti
pop
loop
mov
ljmp
cmp
outsl
ss
mov
dec
pop
sub
repz
dec
and
cmp
mov
xor
or
or
lock
shlb
push
or
inc
divl
push
sub
xor
xchg
jge
mov
fbstp
in
xchg
pop
dec
adc
cmpsl
fistpll
adc
cmpsb
sub
addb
push
mov
mov
idivl
dec
mov
in
mov
or
adc
pop
mov
mov
cmp
mov
loop
jecxz
xchg
mov
dec
repz
adc
sub
and
fldenv
lds
jmp
add
and
sbb
aam
sub
cwtl
pop
std
add
mov
mov
cmp
fstl
sub
xor
jne
sahf
je
add
sarb
push
testb
imul
xchg
cmp
aaa
pushf
pop
push
mov
xchg
xorb
add
and
sti
mov
xchg
jnp
jne
enter
fstl
xchg
mov
mov
repz
dec
jb
mov
repz
pop
jg
ja
mov
dec
dec
mov
rcl
fsubrl
fistl
dec
sbb
mov
adc
mov
arpl
and
mov
mov
mov
movsl
aad
lea
movsl
inc
pop
jns
ss
mov
js
sbb
push
jle
test
lret
addr16
cmp
imul
sub
ss
sbb
cmp
shrb
push
adc
rcrl
xchg
js
popa
mov
adc
scas
cmp
mov
outsb
mov
sbb
fidivrl
jbe
jne
xchg
scas
sub
sbb
jl
mov
stos
shl
xchg
adc
rcll
jno
or
insb
loop
les
dec
add
or
and
push
in
sub
add
rolb
std
shrb
sbb
call
inc
mov
dec
sbb
out
cmp
sbb
bound
mov
mov
cli
cmp
cs
mov
mov
arpl
cmp
inc
aad
push
psllw
test
xchg
lret
aad
mov
xchg
stc
fnstsw
dec
jns
push
sub
arpl
xor
cmp
ret
mov
xor
data16
jo
jle
cmp
adc
cmp
push
pop
lock
divl
lret
in
inc
jne
imul
in
and
add
rcrl
mov
movsl
mov
dec
pop
inc
call
aam
cli
pop
mov
mov
sbb
pop
ja
mov
add
ficoml
in
adc
mov
or
xor
loope
notb
sub
pop
dec
push
sti
pop
cmc
dec
sbb
into
das
je
pop
je
inc
hlt
xor
mov
add
iret
rcr
scas
into
and
xchg
push
push
sti
jmp
jne
scas
mov
fs
cmpb
sbb
inc
mov
inc
push
test
outsl
sahf
pop
push
mov
out
loopne
push
pop
fldl
aad
not
out
pusha
dec
sub
pop
push
aaa
add
in
adc
xor
adc
mov
jb
or
lods
aas
loope
stos
dec
loop
xchg
js
addr16
iret
aaa
and
lea
pop
dec
daa
scas
aas
cwtl
mov
addr16
mov
hlt
mov
in
mov
cmp
xchg
adc
pop
out
mov
mov
cld
andl
or
dec
or
add
pop
loopne
and
aad
test
sarb
mov
std
ljmp
pop
in
fistpl
test
out
xchg
and
sub
cmp
ret
das
ljmp
int3
les
or
scas
pop
inc
clc
xchg
loope
cld
loope
into
ljmp
cli
rolb
xchg
inc
js
sbb
sbb
sub
into
xor
jno
mov
dec
and
js
dec
xor
in
test
aaa
lods
clc
mov
inc
xchg
aad
ss
lret
mov
shrl
ret
cmp
testl
mov
ficomps
xlat
iret
fwait
aas
dec
lods
loope
daa
outsl
in
call
mov
cwtl
mov
add
das
fst
pop
mov
dec
mov
testb
sbbb
add
je
mov
jmp
cmp
xor
push
into
es
xchg
ret
mov
lea
sub
jle
scas
xchg
cmp
cli
les
push
icebp
sbbl
int3
xor
call
pop
add
ja
aam
adc
movsl
movsl
sub
ljmp
out
lock
mov
dec
push
push
call
cltd
jno
push
sti
adc
leave
inc
sti
fsubs
aas
add
xlat
out
fwait
xchg
outsb
jle
add
lret
push
int
inc
faddl
xor
xchg
push
push
pop
fwait
add
lods
inc
aam
push
pop
nop
pop
sub
in
jnp
xor
sbb
es
and
push
inc
jl
cmpsl
fiadds
mov
inc
sub
dec
cmp
ja
jle
mov
loope
mov
adc
ret
fdivr
xchg
lret
mov
ret
fsubrs
stc
scas
mov
sub
out
sub
sbb
outsb
inc
stc
push
into
clc
push
insl
cmp
not
pop
fsubrp
jns
loop
add
pop
in
pushf
or
mov
in
or
and
cmp
lods
clc
in
shl
mov
int3
rorb
aaa
fsub
push
mov
or
enter
push
test
push
push
push
cmp
pop
out
or
sbb
divb
mov
push
mov
in
and
cmpsb
enter
ret
es
xchg
push
test
xor
and
pop
mull
jnp
and
aaa
jmp
and
in
cld
int3
or
mov
xchg
iret
adc
inc
push
pusha
ret
enter
or
jb
xchg
lock
rorl
fwait
sbb
push
aam
shll
jb
or
mov
std
pop
xlat
fcoml
xor
push
or
inc
sub
pop
jg
out
xor
xor
aad
jl
inc
pusha
outsb
in
orl
jns
xchg
fsubrs
out
jg
cmp
adc
fbld
arpl
mov
cwtl
adc
pop
out
adc
xchg
aaa
lret
add
adc
repz
mov
out
sbb
das
aad
mov
cmp
in
in
movsl
jle
xchg
repz
fisttpl
cld
fs
test
imul
jmp
inc
cmpsb
mov
push
jae
mov
lret
pop
lret
mov
and
add
push
mov
mov
xchg
sub
cmp
sbb
int
test
ja
pusha
popa
shl
cmc
jb
push
imul
lea
mov
dec
xor
je
jle
test
stc
mov
addr16
into
stos
lods
mov
dec
push
push
add
jbe
pop
jp
arpl
pop
sub
sbbl
popa
add
xor
pop
mov
outsl
lock
xchg
inc
pop
xchg
popa
inc
out
dec
es
daa
push
hlt
sub
and
and
or
pusha
cltd
sbb
stc
push
push
xor
adcl
push
aaa
in
mov
mov
lahf
sub
lcall
xchg
mov
add
cmp
mov
aad
add
cmp
mov
sub
jne
cmpsb
les
adc
xchg
sarl
inc
xchg
stos
adc
out
jmp
mov
and
fildl
mov
popa
push
ss
and
mov
std
cmp
jg
subb
aad
incl
outsl
ret
push
inc
adc
ds
in
inc
add
sahf
fists
pop
sbb
inc
mov
push
or
shlb
gs
adc
sbb
cmp
jp
outsl
lcall
pop
xchg
movsl
xor
std
jns
fwait
lahf
adc
mov
push
aad
or
inc
add
stos
ja
xchg
adc
and
xchg
pop
shlb
stos
aam
pop
test
arpl
ret
clc
outsl
fsubl
test
xor
push
lcall
aas
cli
loopne
addr16
ds
test
sbb
or
fbstp
jge
fcomi
orl
lods
cwtl
inc
inc
ljmp
sub
test
mov
cs
mov
adc
pop
sub
ljmp
mov
std
pop
mov
scas
lds
sbb
popa
daa
movsb
adc
xor
clc
aas
mov
xchg
mov
add
jl
sbb
pushf
pop
pop
jecxz
xchg
shl
lahf
xchg
or
jmp
cmp
dec
jns
test
push
stos
push
fmull
cmpsl
dec
xchg
lret
mov
ljmp
out
test
lock
adc
mov
mov
mov
sarb
fmull
andb
sub
or
dec
xor
mov
inc
jae
frstor
jo
loope
xchg
sub
das
mov
xchg
repz
mov
xor
push
dec
sub
fildll
jno
xor
mov
movsl
jmp
insl
pop
orb
out
mov
pop
cmpsb
mov
dec
jbe
push
cmpsl
in
cmc
sbb
in
shl
ljmp
aas
aad
push
stos
aam
mov
dec
mov
cmovge
add
jae
jecxz
jp
es
pop
mov
icebp
push
mov
push
and
aaa
cltd
shll
aam
dec
movsb
popa
or
faddp
jl
push
popf
sub
ja
or
jecxz
push
sar
int
lock
mov
das
cltd
add
adc
cltd
xchg
out
fildl
ret
into
mov
mov
adcb
mov
pushf
shl
sahf
cli
cmovp
xor
jbe
and
mov
mov
icebp
fld1
mov
pop
insb
ja
push
pop
pop
andb
inc
jecxz
in
xchg
xchg
xchg
and
enter
in
adc
arpl
es
xor
int
mov
jbe
shrb
aas
jb
xlat
lcall
in
sub
jns
fs
test
jl
and
in
jecxz
ds
adc
sti
call
movsb
data16
in
inc
mov
xchg
test
popf
sub
cmpsb
push
test
sahf
push
ret
out
push
fidivl
sbb
bound
dec
mov
sbb
aam
mov
pop
enter
fdiv
cwtl
fistpl
push
mov
pushf
jne
aam
adc
xchg
xchg
mov
cltd
mov
xchg
dec
add
ror
sub
xor
pushf
sbb
adc
daa
out
ret
xchg
dec
test
sbb
sarb
sbb
cs
mov
xor
into
rolb
icebp
jns
or
adc
cmpsl
inc
mov
fdiv
inc
sbb
aad
imul
or
negl
adc
lahf
lret
cmc
cmp
int
imul
xor
mov
popa
jge
ja
das
stc
add
lds
ljmp
add
loop
xchg
jl
test
adc
mov
push
fldt
mov
sub
lods
push
int3
jecxz
cmp
cmp
sahf
mov
cs
jp
test
or
mov
je
clc
pop
shl
or
pop
cmp
and
stc
dec
mov
pop
insl
or
js
pop
fcmovbe
call
lahf
or
pop
inc
loope
inc
test
imul
loop
and
pop
mov
adc
sbb
shl
sahf
loope
cmp
shlb
push
rclb
into
mov
int3
adc
sub
adc
push
dec
imul
cmp
sbb
add
or
ljmp
or
inc
mov
xchg
movsl
or
pop
sbb
jecxz
jo
loopne
hlt
out
js
andl
inc
test
mov
mov
imul
aam
and
out
jb
insb
xor
xor
insl
mov
ljmp
sub
mov
xor
popa
push
xchg
je
imul
testl
shll
mov
mov
adc
cmp
push
bound
call
repnz
cmp
jle
jmp
jne
push
jno
lcall
xor
lock
pop
sub
mov
fwait
lret
sbb
aas
test
outsb
es
inc
pop
out
sub
sub
mov
or
xchg
or
leave
hlt
xor
addb
int
into
cmp
iret
mov
pop
stc
mov
inc
push
mov
clc
cmp
out
sub
cwtl
jg
ret
or
push
fucomip
mov
fsubl
bnd
bound
inc
aam
sbb
pop
fnstenv
mov
cmp
stc
pushf
lahf
out
sbb
ljmp
xchg
out
roll
cltd
dec
jbe
or
fistps
mov
sbb
enter
call
ja
mov
mov
out
aas
pop
out
jae
pop
mov
xchg
ljmp
mov
inc
or
add
push
shll
ret
mov
je
cmp
scas
mov
ret
jnp
fwait
mov
cmp
out
loop
fistl
jg
push
dec
or
add
out
pop
std
inc
adc
sub
aam
and
or
mov
mov
and
add
ret
cmpsl
repnz
add
ljmp
repz
pop
or
jno
push
icebp
out
popa
pop
adc
adc
sub
push
mov
xchg
lret
sarb
push
jge
jg
pop
gs
imul
add
and
jl
std
movsl
sbb
adc
movsl
fwait
push
das
jmp
rorl
sub
int3
adc
notb
sub
mov
cwtl
xlat
inc
movsb
dec
jg
xchg
fs
sbb
sub
nop
ljmp
aad
dec
sub
rcll
aam
cmp
in
xor
jae
cmp
aas
stos
sbbl
xchg
cmpsb
fisttps
addb
adc
mov
fbld
xchg
jmp
lea
ljmp
mov
hlt
imul
adc
fwait
mov
pushf
jb
lret
add
mov
lret
pusha
enter
fmuls
push
add
adc
and
fcoms
pop
xchg
imul
pop
stos
mov
test
add
mov
shrl
sbbl
ret
cmp
mov
lods
stos
xchg
and
loop
aam
inc
cmc
pop
sub
xor
cmp
xor
aad
ret
mov
lret
fimuls
test
andb
xchg
jb
mov
inc
cmp
sub
loop
cld
dec
add
ss
shr
dec
lods
fldl2t
xchg
inc
mov
lret
arpl
and
mov
fs
mov
movsl
ljmp
aam
mov
mov
xor
push
lahf
pop
fdivrs
xlat
pop
dec
add
in
add
pop
cmpl
jae
sbb
sub
cmpsb
shll
or
in
fs
mov
lret
jle
imul
sub
pusha
inc
sub
xchg
outsl
jo
inc
push
inc
cmp
prefetcht2
insl
or
push
fstpt
sbbl
xorl
sub
imul
xlat
and
mov
divl
sub
gs
inc
jle
cmp
xchg
dec
fbld
test
mov
jno
frstor
xor
push
sub
add
jp
jmp
fisttpll
setge
subl
mov
test
insb
dec
sbb
fcompl
fadds
sahf
icebp
mov
mov
ret
pop
in
ljmp
and
xchg
mov
mov
mov
mov
xchg
rcrl
jmp
sbbl
and
dec
push
inc
cmp
xchg
sti
jno
negb
sarl
out
lock
in
add
xchg
and
xchg
fistpl
shll
daa
mull
cmc
adc
cld
dec
jnp
and
scas
ss
mov
pusha
enter
gs
arpl
mov
mov
movsb
sbb
mov
out
xchg
push
jmp
lds
aas
mov
add
orb
jno
mov
cwtl
lret
out
jecxz
iret
or
adc
cltd
jl
testl
pop
call
pop
pop
das
das
int3
xor
lods
icebp
ds
pop
jae
cmp
mov
adc
mov
test
and
sbb
scas
loopne
inc
iret
imul
and
mov
adc
rcrb
imulb
scas
fwait
lea
aam
in
jae
out
lods
mov
and
sub
nop
xchg
mov
xor
push
push
inc
loopne
mov
xlat
ljmp
in
nop
test
loope
push
gs
test
mov
or
ja
sahf
inc
pop
cmpsl
leave
test
pusha
out
mov
into
xchg
add
mov
mov
mull
add
in
mov
clc
adc
mov
fs
add
xor
sahf
or
cmp
das
inc
mov
mov
mov
scas
cmp
mov
jbe
movsb
cmp
mov
dec
cld
xor
mov
cltd
bound
inc
cli
lock
xchg
xchg
mov
mov
pop
mov
lahf
sub
lahf
dec
xchg
gs
jo
xchg
cmp
mov
push
jno
pop
data16
jge
push
or
jne
sub
mov
sub
adc
imul
sbbb
push
cmp
pop
sub
push
in
jg
xchg
sub
sbb
cmpl
push
jne
loope
dec
cltd
pop
cmp
push
jae
imulb
mov
insb
adc
inc
inc
loop
dec
pop
xchg
cmp
in
sub
outsb
test
flds
mov
into
mov
mov
adc
repz
aaa
jmp
sbbl
dec
test
cmp
inc
nop
fsubr
dec
clc
xlat
rcrb
push
inc
push
xchg
adc
dec
aam
cltd
jl
std
nop
jbe
xor
loop
test
das
dec
lock
popa
pop
add
div
jg
xor
xor
push
mov
push
les
jl
sub
mov
push
and
std
inc
xchg
cmp
loope
push
jmp
lret
sub
movsl
jecxz
adc
push
mov
ja
adc
aas
or
repz
out
push
jmp
push
sub
sub
mov
jns
mov
daa
pusha
outsb
dec
xchg
lods
bound
ficomps
add
jb
push
popf
mov
xchg
cltd
push
subl
aam
cmp
daa
mov
sbb
add
push
push
jl
add
xor
test
adc
stos
xor
lock
push
add
add
mov
adc
icebp
and
inc
xchg
mov
jge
push
pop
add
and
cmp
xchg
lods
sub
add
mov
andl
outsl
sahf
fwait
punpckhbw
mov
inc
cmpsl
xchg
inc
dec
xor
xor
push
cmpsb
mov
push
mov
cli
imul
rorl
xor
push
aad
push
pop
inc
stos
test
jmp
icebp
sbb
shrb
cmp
loope
sbb
scas
sti
cmc
cmp
outsb
mov
addb
sub
ret
gs
mov
arpl
push
or
dec
lods
sub
jnp
jp
mov
mov
out
mov
xlat
rclb
out
cmpsl
dec
xchg
mov
gs
push
pushf
pop
mov
cltd
lods
add
cmp
jb
pop
dec
push
inc
in
in
pop
rorb
cmpsl
cmp
loopne
add
test
mov
adc
daa
mov
push
xor
lods
ljmp
lahf
cli
xchg
pop
movsl
lret
nop
cmp
movsl
hlt
shrb
inc
in
and
in
ficomps
xor
mov
stos
sbb
mov
sub
push
push
stc
xlat
stc
mov
jg
pop
mov
test
mov
sbb
pop
push
ja
xor
cli
push
fcoms
mov
scas
cmpsl
mov
das
test
int3
lahf
mov
cmp
iret
daa
add
inc
or
les
movsb
sub
mov
cmp
xchg
pop
das
aam
sarl
and
push
xchg
rclb
cmp
xchg
cmpsl
xchg
scas
jmp
arpl
jecxz
arpl
mov
and
xor
test
hlt
add
movsb
and
insb
push
fisttpl
scas
sub
mov
inc
je
pop
mov
fcmovnu
sub
and
mov
int
test
jg
scas
add
negb
mov
inc
jp
mov
rcrb
xchg
enter
lea
cwtl
xchg
imul
xchg
cwtl
push
and
and
inc
jl
jns
aas
inc
add
hlt
push
mov
push
push
pop
mov
xchg
dec
or
sub
push
xchg
loop
mov
stos
fistpll
popa
lods
hlt
fidivrl
test
dec
cmpsb
out
xor
mov
pusha
cmp
imul
fidivl
pop
fnstsw
push
ds
leave
pop
cmp
or
cmp
adc
into
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
jmp
insb
jns
sbb
mov
push
sub
mov
nop
jl
pop
pop
jl
iret
cmp
call
cld
xor
in
dec
xchg
sbb
adc
icebp
cld
in
stc
pop
fucom
repnz
aad
mov
dec
dec
cmc
sarb
pop
loop
mov
mov
mov
addr16
addr16
clc
mov
mov
pop
xor
or
fnstcw
imul
jno
das
push
dec
in
js
out
rcrb
ret
fstpt
cmp
push
aaa
and
jae
test
xchg
pop
pop
mov
mov
push
push
add
jle
xor
jo
in
add
addr16
pop
mov
outsb
pop
jmp
clc
daa
and
sbb
pop
ja
pop
cmp
in
sub
imull
pop
cli
jmp
leave
in
cs
push
fldt
mov
adc
jne
sbb
xor
cs
into
sbb
adc
rclb
inc
rol
xor
movsb
sbb
jae
inc
adc
into
cmp
pushf
pop
movlps
icebp
push
pop
add
jl
out
mov
sbbb
sub
mov
les
lret
stos
push
orb
dec
gs
notb
xchg
jge
arpl
cmpl
pop
fdivrp
sub
popa
mov
and
sbb
xchg
xor
mov
stos
ss
js
push
jecxz
mov
dec
sbb
inc
and
add
cmpsl
nop
testb
popf
test
inc
jecxz
jp
cmp
ficoms
or
aam
mov
sub
jge
gs
xchg
ja
fs
test
mov
outsl
js
mov
bound
xor
clc
lock
enter
jle
addb
in
xchg
cmp
and
mov
xor
lcall
test
inc
call
enter
ret
push
aad
in
or
pop
cmp
imulb
cmp
mov
jmp
aas
mov
push
push
inc
sbb
rorw
pop
std
and
jecxz
aaa
rorl
loop
jle
add
insl
aaa
icebp
in
sbb
fmuls
notl
adc
fidivrs
xchg
popf
stos
outsl
jg
aaa
imull
sti
push
add
cmp
dec
and
cmp
xor
or
in
adc
dec
jge
idivl
aad
in
add
fidivrl
mov
mov
popa
mov
or
cmp
ljmp
stc
arpl
jmp
pop
int
popf
or
outsl
xor
shlb
mov
sub
jns
ret
push
orl
dec
and
inc
cs
insb
in
dec
outsl
popa
sbbl
ja
mov
lods
fwait
hlt
jnp
in
scas
aad
ds
mov
icebp
sbb
loope
lods
std
jb
xchg
push
repz
fwait
sub
out
xor
mov
sbbb
xlat
pop
push
pop
testl
mov
sbb
pusha
incb
fdivp
call
cwtl
pop
push
xchg
sub
orl
fsubp
in
or
movsb
jl
or
movsb
imulb
cmp
jno
in
mov
xchg
insl
lret
push
xchg
movl
push
or
sub
and
or
lds
ljmp
hlt
jle
out
and
jmp
les
mov
outsl
aad
pop
jmp
cs
xchg
mov
mov
push
pop
and
and
pop
push
daa
je
add
dec
int3
inc
inc
sub
pop
out
sbb
push
xor
xor
dec
add
hlt
aaa
push
insl
inc
das
addr16
push
sbb
lcall
push
movsl
push
addl
inc
adc
scas
std
imul
mov
pop
mov
jge
addl
fcmovnb
push
in
push
mov
fidivrl
enter
imulb
orb
mov
frstor
jae
aaa
repnz
test
sti
pop
into
dec
out
jo
cli
cld
sti
xor
sbb
dec
lea
fdivrp
cmpsb
jge
jne
jbe
lods
gs
pop
mov
xchg
push
add
mov
jg
xchg
js
imul
xchg
incb
cmpsb
popa
mov
push
mov
cmp
cmp
or
pop
push
inc
cs
mov
xor
daa
leave
cmp
shl
mov
subb
cli
sub
std
sti
mov
ds
mov
mov
inc
hlt
mov
mov
lods
lcall
nop
add
pop
pop
int3
mov
fs
outsb
das
ljmp
in
jmp
jo
js
mov
mov
insb
dec
leave
fadds
sbb
mov
pop
mov
test
repnz
dec
or
ret
pop
aam
int
adc
xchg
xor
inc
sahf
emms
leave
pop
jnp
imul
cmp
add
xchg
lds
add
mov
int3
pop
adc
dec
into
add
mov
dec
test
jmp
cltd
mov
iret
iret
out
mov
pop
popf
mov
cmp
inc
fadds
sahf
dec
shrl
jae
enter
arpl
rol
cmp
xchg
jecxz
mov
mov
lock
lret
or
cs
inc
repnz
dec
adc
sar
jne
and
lds
sub
lock
js
jecxz
out
jno
add
adc
jbe
cmp
and
push
dec
mov
sbb
data16
add
xchg
jmp
in
push
clc
mov
aas
jp
popa
mov
xor
adc
cli
jo
arpl
inc
push
lahf
stc
cmc
mov
mov
loope
jmp
jmp
sub
lock
and
cmp
pop
aad
or
pop
push
emms
or
pop
mov
test
lahf
cmp
cli
mov
sbbb
mov
cmp
sub
sub
mov
jne
xor
stos
mov
lahf
or
scas
movsl
dec
or
sahf
movsl
nop
or
jp
and
fbld
add
out
sbb
add
insb
dec
sbb
and
sbb
loopne
repz
add
jae
mov
mov
and
std
add
out
mov
pusha
pop
lds
mov
stc
jmp
adc
or
mov
xchg
mov
mov
ret
insl
and
mov
cs
call
call
out
add
xchg
sbb
mul
adc
pushf
pop
repz
pop
iret
cmp
cwtl
cld
jno
pop
xorl
pop
and
or
leave
repnz
mov
out
mov
pop
daa
mov
loop
sub
sub
js
or
xorb
movsl
xor
mov
dec
dec
rorb
xlat
mov
adc
loop
fisubrs
push
or
outsb
divb
roll
dec
fadd
pop
cmp
mov
adc
sub
xchg
out
outsl
inc
lods
and
mov
in
aam
jmp
dec
jp
lock
add
mov
dec
repz
stos
lock
jl
xchg
sub
into
fnstcw
sti
cmp
inc
shl
into
repnz
ret
push
mov
js
sub
clc
pop
loope
jecxz
js
inc
testl
jbe
sbb
dec
fistps
js
in
rcl
sub
cwtl
mov
jl
mov
insl
cmpsl
sbb
lock
xor
sub
cmpsl
movsb
stos
pop
popa
sub
into
aas
xchg
push
push
es
xchg
jbe
aad
adc
jb,pt
sbb
test
jb
test
mov
pop
mov
rcrb
faddp
push
mov
in
xorb
cmpxchg
cmpb
mov
aas
outsb
jg
jl
fadds
inc
fistl
arpl
loopne
dec
out
lock
loop
subl
xor
imul
sbb
sub
js
or
mov
stos
xor
xchg
dec
sbb
push
dec
inc
or
in
pop
add
pop
push
stc
outsb
inc
sub
adc
and
sahf
popf
lcall
out
mov
loope
loop
sbb
enter
sbb
shl
pushf
sbb
lods
push
mov
cli
fabs
mov
fsub
fidivs
sbb
arpl
add
push
mov
pusha
pop
inc
jb
xor
adc
pusha
inc
xor
stos
lret
mov
push
repnz
and
jnp
fistpll
movsb
push
repz
jge
jecxz
pop
pushf
cmp
adc
and
ljmp
mov
add
inc
out
mov
repnz
int3
hlt
mov
fidivrs
xchg
and
lahf
add
inc
ficompl
inc
mov
subb
cmpl
and
pop
and
sti
movsl
or
xchg
mov
adc
data16
adc
inc
xor
cwtl
sbb
pop
sbbb
loope
lods
shrb
cld
leave
jge
repz
jle
bound
push
mov
mov
push
pop
inc
mov
cmpsl
lods
cmp
sahf
aas
cmp
lods
mov
mov
ljmp
jnp
test
mov
clc
int
ret
leave
outsb
mov
sbb
leave
push
push
pusha
mov
loopne
xor
pop
in
inc
sbb
mov
rolb
lcall
inc
or
test
or
imul
adc
and
bound
filds
icebp
sbb
jb
lea
and
pop
repz
mov
mov
pop
lds
jle
and
int
aam
nop
lods
pop
and
cmp
cmp
loop
nop
cwtl
xchg
xabort
mov
test
add
xchg
adc
loopne
std
jbe
xor
inc
xchg
fld
bound
push
orb
push
aam
mov
pop
pop
pop
jb
cmc
addr16
in
sub
xor
out
repz
jg
and
jns
icebp
fnstcw
in
inc
repz
mov
mov
es
xchg
xor
jmp
movsb
rcrl
pushf
push
or
push
xchg
xchg
orl
ds
int3
mov
faddp
scas
inc
outsl
fbstp
mov
add
or
pop
sbb
movsl
cld
mov
call
xor
adc
popa
stc
xchg
xor
or
cmp
xchg
mov
or
add
ret
mov
push
pop
and
adc
or
daa
push
inc
jge
push
rorb
clc
mov
test
insl
cmpsl
fcmovnbe
orb
clc
popa
cmpl
test
dec
sti
sahf
iret
push
mov
fdivrs
jo
lret
arpl
pop
cmp
add
ret
sub
arpl
adc
xchg
and
xor
mov
cltd
clc
out
dec
push
negl
lea
xlat
cmc
aad
xchg
in
inc
sub
fidivl
mov
cmp
mov
cltd
xchg
out
movsb
lahf
stos
call
push
jmp
mov
push
pop
es
in
lret
mov
xchg
scas
fildl
mov
addl
adc
shl
movsb
enter
add
stc
xchg
rcll
or
add
adc
cmp
sub
mov
mov
int3
jle
data16
mov
mov
or
repnz
mov
and
fnstcw
mov
mov
mov
call
and
cwtl
jae
fcmovbe
mov
pop
fsubl
cld
mov
fnstenv
fidivrs
mov
repz
sbb
repz
xchg
push
inc
pop
and
in
cmp
adc
xchg
rclb
stos
or
dec
xchg
and
jle
sbb
mov
cmpb
rcr
dec
or
xchg
inc
pushf
pop
inc
sub
into
sbb
mov
jnp
xchg
aad
cmp
jne
leave
pop
cmp
imul
fldt
push
cmp
adc
add
jnp
cmp
jo
mov
or
push
imul
fs
jg
leave
push
ds
or
orl
in
jmp
lock
loopne
data16
adc
or
push
std
cmp
pushf
pop
stos
adc
or
loopne
loope
dec
test
and
mov
hlt
pop
cmpsl
out
dec
rcl
or
icebp
imul
sub
and
mov
in
push
cmp
or
int
shll
popf
inc
lods
jae
lea
sbb
loop
add
and
daa
gs
clc
push
jl
inc
dec
rorl
sub
adc
or
mov
aaa
push
jbe
sbb
mov
sbb
leave
jno
add
inc
push
andl
mov
fstpl
and
cli
dec
xchg
mov
adc
inc
pop
movsl
je
or
jno
scas
jle
lea
es
fnsave
mov
dec
mov
xchg
sahf
popf
movsb
aaa
insl
push
into
mov
mov
sub
xchg
jge
icebp
in
cltd
das
or
sbb
aad
insb
cmp
xchg
jecxz
jp
std
inc
pusha
aaa
lea
into
adc
loope
movsb
add
test
inc
icebp
les
shlb
arpl
ret
xchg
ljmp
and
fcomps
ja
dec
bsf
mov
bound
mov
inc
sub
and
cmp
int3
cli
jbe
sub
pop
gs
mov
pop
andl
in
jge
mov
movsb
push
or
sub
out
add
pusha
jo
xlat
jnp
and
push
lods
decb
test
pop
pop
cmc
mov
int
sbb
fnstsw
dec
cmpsb
mov
loope
mov
leave
into
pushf
out
mov
jns
pop
pop
lock
inc
lds
stc
rolb
int3
mov
aas
cmp
add
dec
mov
fdivs
mov
andb
nop
jmp
cmp
test
fiaddl
push
pop
push
ror
lret
sub
shrl
popf
cwtl
inc
xlat
add
add
add
popf
movsb
xor
hlt
int3
mov
mov
sar
test
in
pop
sub
sbb
dec
or
in
dec
jne
movsb
enter
mov
fwait
imul
push
test
lods
imul
loop
pop
shl
je
jp
jmp
xchg
pop
and
mov
push
mov
push
xchg
push
mov
lds
add
pop
mov
xchg
add
popf
cmpsb
pop
mov
fcomi
rcrb
lret
je
aaa
jns
push
mov
lods
insl
loopne
sub
mov
push
mov
call
jno
movsb
xchg
arpl
fldt
mov
gs
sub
push
jnp
cmp
mov
aam
xchg
aam
loopne
pop
dec
ret
push
dec
cmp
stos
sti
fsubl
cmc
mov
xchg
mov
dec
cmp
sti
push
mov
xor
fwait
pop
jae
push
mov
xchg
dec
jp
jns
adc
mov
aad
nop
loopne
xor
clc
adc
xchg
jno
fisttpl
dec
pop
and
cmc
sbb
addr16
jmp
mov
ret
out
xchg
mov
sbb
fst
bound
or
jecxz
cmp
imul
fsubr
push
cmpsl
adc
xlat
test
push
mov
mov
sub
in
popa
lds
pop
sbb
loopne
in
aad
es
in
shl
sahf
push
and
movsb
repnz
dec
or
loopne
sbb
xchg
mov
ret
inc
sbb
mov
cmp
push
iret
and
mov
call
or
mov
cwtl
loope
and
popa
sbb
mov
stos
mov
in
ret
xchg
pop
jno
loop
test
paddusw
out
dec
xchg
pop
fldl
sub
cli
or
arpl
sbb
shrb
test
idiv
out
dec
daa
cwtl
cwtl
jns
jne
add
jle
fbld
fbld
sbb
dec
cmp
or
push
push
pop
mov
dec
and
ss
sarb
jb
cmp
out
andb
xchg
add
adc
push
je
sbb
arpl
rolb
push
out
in
lret
imul
stos
cmp
add
outsl
fldcw
push
and
scas
mov
xchg
js
cmp
mov
sub
clc
cwtl
lds
test
mov
adcb
dec
inc
mov
jnp
push
and
mov
movsb
and
add
sbb
or
subl
ret
aad
sbb
cli
sbb
adc
stos
xchg
cmp
sub
repnz
outsl
sbb
and
sub
jne
shrl
lods
out
sbb
pop
mov
scas
adc
lods
sahf
xchg
call
jmp
or
rcll
xor
loopne
adc
and
cltd
add
adc
push
out
mov
xchg
lcall
xchg
xor
push
adc
lahf
fcomps
sub
divb
outsb
in
add
mov
sub
sub
js
mov
pop
sbb
mov
jne
xor
xlat
or
pop
xor
xchg
jp
es
sbb
push
fdivrl
ret
jle
dec
push
fldt
iret
xor
jne
scas
pusha
jp
outsb
and
divb
pop
test
adc
push
popa
jmp
xchg
and
leave
loopne
add
filds
adc
test
push
test
shlb
insl
pop
push
jmp
js
mov
sbb
jo
adc
jae
popa
in
add
adc
aam
jae
ret
bound
push
jmp
ficomps
fldl
xor
jmp
and
scas
addb
cmp
xor
lods
xchg
sub
cli
push
daa
cwtl
xchg
test
test
push
xor
fsubrl
out
lcall
xor
mov
sbb
das
and
push
out
mov
in
mov
xchg
rcl
mov
movsb
addb
sti
dec
pop
sbb
fstpt
fistpl
jne
mov
jmp
cmp
jb
cmpsl
mov
dec
or
cmp
lret
add
mov
in
sbb
cld
xor
imul
xchg
sbb
jno
sbb
pusha
stos
sub
and
fists
jno
cmc
outsl
lock
std
and
xchg
fsts
adc
cmpsb
stos
dec
data16
das
xchg
fcoml
incb
jmp
js
gs
pop
inc
sbb
or
lods
dec
mov
xchg
pop
les
sti
push
lret
shlb
clc
push
mov
pop
ret
bound
inc
dec
sbbl
sub
les
and
insb
lea
pop
mov
lods
daa
cmp
fidivrs
and
xor
add
imul
int3
repz
clc
mov
loope
xor
pop
fildl
lds
sub
out
sbb
rcrl
inc
sub
xchg
stos
jmp
scas
movb
sbb
mov
push
add
lret
in
cvttps2pi
jne
enter
mov
push
jns
or
push
dec
cltd
hlt
xchg
gs
push
les
xlat
fmul
inc
and
or
dec
xor
xor
inc
ds
testb
faddl
cli
jmp
and
out
in
mov
mov
pop
daa
in
dec
push
and
mov
lods
fdivl
ss
sbb
jl
xchg
push
clts
in
mov
mulb
inc
cs
cmp
sub
gs
aad
jg
mov
cmp
mov
cli
ret
test
flds
outsl
sbb
scas
inc
idivb
cmp
out
aas
jp
inc
iret
adc
xchg
out
xchg
or
and
cmpsl
fwait
xor
pop
sub
jne
out
ret
leave
cmp
mov
stos
in
clc
hlt
sahf
cld
pop
pop
jle
jle
sbb
push
jle
gs
bnd
pop
rorl
add
sub
xor
call
aad
adc
pop
dec
cmp
movl
dec
sbb
inc
in
addr16
fwait
push
insl
dec
scas
orl
adc
or
jg
lret
insb
inc
xchg
insl
and
dec
clc
mov
cmp
dec
es
dec
and
in
imul
pusha
push
jl
xchg
repnz
push
jne
les
adc
movb
daa
pop
push
inc
bound
daa
add
jnp
lahf
dec
shrl
xchg
jae
cmp
mov
sbb
stos
sbb
sbb
inc
insb
arpl
push
sahf
and
add
pop
jne
pop
inc
adc
cmp
lret
lret
inc
lods
in
lcall
shll
andb
dec
lcall
ror
or
push
aaa
push
pop
mov
gs
or
xchg
adc
dec
in
jg
dec
out
js
out
lds
int3
mov
rcl
cmpsb
aam
push
sub
sbb
push
dec
sbb
clc
scas
enter
xor
and
xchg
cli
das
inc
lret
shlb
pop
push
or
sub
pop
addr16
bnd
insb
mov
inc
mov
jnp
mov
jne
push
or
idivb
xchg
mov
inc
es
mov
sbb
mov
clc
loope
xor
push
mov
or
aad
add
rcll
rolb
push
daa
call
pop
sarl
cmp
dec
xor
mov
inc
push
fwait
sub
sbb
mov
imul
mov
sub
mov
and
ljmp
jbe
aam
imulb
mov
cmp
push
and
dec
sbb
inc
mov
and
xorb
jo
mov
push
lock
in
push
adc
cmp
fs
jmp
insb
sti
cmp
jp
inc
mov
pop
stos
int
lret
mov
push
and
std
add
xchg
mov
mov
mov
cmc
rcrb
and
cwtl
fildl
cmp
insl
mov
mov
inc
mov
out
ja
xchg
inc
mov
mov
in
cmc
push
adc
push
mov
sub
xlat
icebp
sub
dec
aaa
mov
mov
xchg
mov
xor
inc
push
imul
mov
dec
jnp
cmpsl
xchg
ds
pop
ljmp
sub
test
lds
jae
jl
jg
das
push
mov
sbb
aas
push
sbb
inc
cmpsb
icebp
or
mov
mov
push
aas
pusha
mov
jge
ja
fisubrs
imul
xor
push
add
fisubl
mov
mov
jo
das
andb
push
lcall
adc
pushf
inc
fsubs
jmp
test
pop
aaa
dec
cld
jle
aam
jae
xchg
jle
enter
fildll
mov
fbld
xchg
daa
inc
addr16
or
test
daa
or
cmp
adcb
lock
mov
pop
bound
push
sub
ljmp
xchg
loop
pop
cltd
xchg
test
ss
rcrl
pop
mov
inc
mov
mov
into
adc
idivb
les
sbb
push
out
pop
ss
int
iret
out
xchg
ja
add
int
ret
fwait
sbb
jb
outsb
lds
pop
mov
pushf
pop
in
inc
xchg
mov
cld
add
and
inc
or
call
cmp
and
lret
xchg
mov
lret
popa
data16
and
push
and
sbb
mov
cmpxchg
jno
mov
ret
dec
out
xor
inc
dec
mov
jecxz
mov
cwtl
aam
jp
xchg
insl
adc
xchg
sbb
adc
popf
inc
xchg
sub
or
aaa
cmpsl
cld
out
das
mov
adc
jl
je
daa
js
fcoms
outsl
idiv
cli
mov
aam
mov
mov
dec
push
sub
sub
clc
adc
int3
push
mov
lods
sti
add
fidivrl
xchg
sahf
pop
mov
pop
mov
pop
adc
cwtl
add
xchg
fwait
cmp
mov
cmp
iret
push
cmpsl
sub
mov
jae
and
in
push
sbb
push
mov
fwait
jl
mov
xchg
inc
sub
pop
pop
aaa
sbb
push
outsb
push
xlat
xchg
cli
aaa
push
fistps
icebp
pop
sti
cmp
xchg
js
enter
inc
rcl
shrb
leave
sbb
ror
pop
adc
and
jg
jl
movsb
adc
psrad
and
push
adc
imul
mov
cmp
aad
cmp
test
mov
lods
or
inc
and
jp
and
pushf
jg
cmp
jle
call
inc
pop
cltd
shlb
cmp
push
nop
sub
mov
and
int3
cmp
push
movsl
add
jg
mov
rcll
cmp
sub
and
inc
xchg
pop
sub
cmp
insl
jne
flds
mov
pushf
fldenv
cld
jp
sbb
pusha
int3
imul
inc
fs
movsl
aas
push
or
jnp
xchg
outsl
dec
pop
sahf
jl
out
adc
lea
lods
inc
fs
inc
mov
add
popa
fistl
sarl
scas
pop
insb
adc
add
or
and
xchg
fisubrs
adc
push
sbb
movsb
inc
fwait
sbb
movsl
cmpl
mov
inc
je
das
ficoml
clc
lods
pop
add
nop
sbb
sub
jnp
dec
mov
add
xlat
mov
aaa
cmp
dec
fsts
out
ds
or
subl
push
movsl
test
adc
adc
dec
aaa
insb
push
adcl
mov
xor
fimull
dec
lock
rclb
insb
cmpsb
adc
mov
sub
hlt
leave
push
stos
ret
mov
mov
or
jmp
ret
mov
cmpsl
mov
movb
sub
arpl
popf
loop
in
pop
icebp
repnz
xchg
fst
inc
scas
in
xchg
rcr
add
test
xchg
sbb
pop
cmp
clc
mov
dec
hlt
xchg
pop
add
xchg
movsb
add
adc
and
add
push
push
and
and
jge
imul
imul
xchg
cltd
andb
dec
inc
push
loop
dec
test
add
stos
jmp
cmpb
push
mov
or
ds
sbb
dec
popf
pop
mov
das
mov
add
push
in
clc
into
pop
pop
or
rorl
pop
pop
addr16
loopne
xorl
popf
mov
imul
mov
add
jle
stc
int3
mov
in
dec
adc
decb
push
push
adc
cmc
lcall
je
cmpsl
or
outsb
pop
mov
cmp
jle
ret
mov
sub
pop
and
lret
je
pusha
in
sbb
xlat
sub
fs
out
test
in
add
push
mov
popa
cmp
arpl
mov
cmp
hlt
jmp
imul
jge
rclb
jno
pushf
loopne
hlt
pop
xchg
mov
lret
fsts
aas
xor
mov
mov
sbb
popf
mov
inc
push
mov
js
lods
repz
int
mov
adc
adc
aas
add
scas
nop
scas
rcr
xlat
call
sub
push
loopne
sbb
cmp
xor
and
sub
cltd
xchg
fsub
jg
jg
stos
mov
xlat
push
cmp
es
or
insb
fcomp
mov
aas
aas
divl
mov
data16
dec
ljmp
xchg
pop
pop
xchg
push
in
pop
ja
mov
or
or
adc
clc
xor
jp
xor
xchg
pop
and
shl
cmp
lods
push
add
mov
cld
mov
pop
in
in
mov
adc
sbb
or
loopne
push
mov
cmp
in
dec
jg
xor
and
pop
insl
pop
test
sub
cs
cmp
pop
pop
adc
or
mov
or
ret
push
mov
or
jmp
insb
test
mov
fisttpl
insb
cmpsb
bound
cmp
nop
iret
sbb
cmc
pop
int3
sbb
stc
dec
adc
pop
and
sub
arpl
dec
pop
xchg
or
mov
add
pop
sahf
cmp
sbb
out
fs
add
xchg
cs
and
test
imul
pop
into
pop
les
hlt
sub
mov
jle
xchg
mov
fwait
addb
jnp
xor
cmpsl
add
pusha
sub
mov
iret
cld
loope
cmpsl
jo
dec
outsl
loopne
enter
dec
aam
ficoms
adc
es
arpl
add
fisubrl
cmpsl
pop
stc
sbb
out
cmp
fwait
pop
test
fisubl
or
jle
push
push
jns
sbb
cli
push
hlt
xor
je
pavgw
enter
mov
repz
loope
stc
jge
cmp
int
adc
ja
dec
sub
in
push
xadd
xchg
push
xchg
das
repz
das
cmpsl
lds
cld
imul
iret
add
cmp
mov
shlb
dec
rorb
xor
jl
sbb
sub
roll
adc
shl
adc
mov
mov
cs
jmp
scas
inc
pop
mov
dec
jecxz
fbld
push
sbb
fcompl
or
and
lock
jmp
and
lock
mov
dec
or
mov
notl
dec
bound
push
or
out
pop
icebp
movsl
mov
int
movsb
inc
dec
mov
loop
push
mov
mov
adc
cmp
push
adc
leave
fidivs
inc
frstor
inc
bsf
imul
xchg
popa
or
push
lret
push
mov
fs
mov
jecxz
imul
enter
lret
ss
imul
add
jne
stos
or
push
dec
sbb
sbbl
jno
ret
cwtl
adcl
mov
lret
sbb
sub
not
xchg
sbb
test
cmp
xor
mov
movb
nop
mov
clc
andb
xchg
xchg
mov
in
fst
stos
mov
xchg
xchg
inc
push
rorb
hlt
push
inc
movsl
outsl
aad
fsubl
inc
add
movb
clc
sbb
push
out
jp
data16
push
jecxz
out
std
cmp
mov
imul
sbb
stc
mov
int
mov
lods
push
push
dec
loop
inc
push
mov
pop
daa
push
dec
jmp
xor
sarl
imul
dec
dec
dec
mov
xchg
adc
pop
or
xor
push
push
mov
push
add
pushf
fsubrl
lret
xorb
inc
cwtl
fucom
test
lds
incb
xor
repz
jge
pop
cmpsl
jno
repnz
cld
iret
jmp
mov
jbe
out
cmp
jns
jg
mov
lcall
or
std
sbb
mov
jp
adc
scas
push
or
sbb
xor
dec
clc
xor
mov
add
mov
pop
pop
pop
leave
ret
jne
adc
std
push
adc
aas
adc
sbb
adc
sbb
add
push
adc
out
jg
add
dec
adc
mov
jns
add
inc
adc
sbb
inc
add
cmp
inc
add
cmp
inc
add
cmp
inc
add
add
add
add
add
add
add
inc
cmp
add
scas
inc
adc
inc
cmp
add
adc
push
adc
cmp
add
sbb
add
adc
idivb
inc
add
cmp
cmp
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
adc
subb
cli
adc
sbb
adc
pop
inc
adc
sbb
adc
in
pop
adc
pop
sub
add
add
inc
add
add
inc
add
add
cmp
add
aaa
adc
cmpl
adc
push
dec
adc
mov
adc
lock
add
adc
outsb
or
add
add
add
push
push
inc
push
mov
push
and
inc
mov
inc
xchg
cmp
and
add
add
pop
dec
outsb
jae
popa
insb
insb
and
je
pop
push
outsb
fs
dec
push
pop
dec
popa
imul
outsl
insb
fs
dec
outsb
arpl
gs
dec
outsb
outsw
inc
jo
add
add
add
add
add
cmp
add
add
add
add
add
mov
cmp
add
mov
cmp
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
