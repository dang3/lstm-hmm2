push
mov
sub
sub
mov
push
add
push
push
movl
cmpl
je
cmpl
jle
jmp
push
push
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
push
push
push
push
call
mov
dec
mov
jmp
xor
or
mov
add
xor
mov
mov
mov
sub
sub
mov
or
mov
mov
mov
xor
mov
mov
andl
movl
or
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
pushl
call
jmp
mov
orl
mov
movl
cmpl
je
cmpl
jg
jmp
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
mov
mov
movzbl
xor
mov
jmp
lods
insl
lcall
xchg
add
cli
xchg
and
sahf
jnp
aam
rcr
fcmove
test
mov
mov
test
orl
xchg
lods
jle
jno
jle
inc
mov
sti
xchg
jle
or
sub
or
rcrb
push
out
cwtl
dec
imul
out
sti
fldcw
cmp
mov
test
jne
sub
inc
sbbb
push
out
arpl
jb
sbb
xchg
insb
mov
xchg
add
imul
xor
sub
xchg
lods
in
mov
stos
sub
and
xchg
cld
xchg
xchg
inc
clc
mov
stc
mov
jb
cmp
cmp
decb
dec
jb
movl
lea
sbb
or
cmpsb
bnd
jge
shrl
push
mov
xchg
leave
or
je
jno
push
xlat
decb
adc
mov
pop
mov
addr16
jne
cli
je
cmp
out
xchg
and
or
push
filds
dec
aam
push
leave
stos
inc
push
loope
incb
mov
or
cmp
mov
and
cwtl
fwait
or
sbb
shrl
jne,pt
push
xor
es
dec
std
out
test
mov
push
cmpsl
jb
add
mov
inc
scas
sbb
or
stos
push
ja
dec
mov
and
cmp
sub
enter
xlat
adc
lcall
xor
xor
decl
stos
popa
adc
sarb
mov
dec
mov
in
adc
add
rcrb
cli
sub
push
in
popa
mov
sbb
mov
and
int
push
mov
xchg
sbb
lcall
jl
out
mov
mov
xchg
mov
pop
pop
jl
and
add
xor
andl
mov
xchg
jge
push
dec
push
repz
popf
sbb
cmp
cmpsl
lret
test
scas
mov
add
sub
test
mov
or
fdiv
mov
xor
loopne
out
jbe
sub
mov
lock
add
xor
test
adc
cli
inc
mov
imull
lahf
lods
inc
lret
jae
jne
rcl
fdivl
btr
pusha
ret
aaa
out
lahf
add
cld
pop
adc
data16
test
inc
stc
mov
push
inc
mov
sahf
inc
dec
push
push
lret
movsb
sbb
pop
int
jl
iret
mov
mov
out
sub
fwait
lahf
lret
push
mov
loope
and
push
dec
mov
das
adc
lret
outsl
lock
addr16
pusha
add
sub
adcb
mov
push
mov
ljmp
push
test
shll
inc
add
fstpl
addr16
cmp
repz
push
roll
jmp
xlat
sub
jp
xorl
pop
mov
lock
jecxz
xchg
mov
out
inc
inc
faddp
daa
cmp
or
xchg
mov
and
dec
jecxz
shll
out
or
xchg
clc
mov
repz
mov
jmp
sbb
aas
sbb
dec
test
or
sub
sub
inc
addb
jl
adc
and
jno
inc
and
sahf
sbbb
outsl
push
or
sbb
add
sbb
aad
push
lods
push
clc
rclb
ret
lahf
sbb
dec
push
mov
push
sbb
outsb
push
flds
bound
mov
adc
pop
pushf
loope
xor
cmpl
pop
shrl
cmpsb
sar
and
xchg
xchg
popa
pushf
pusha
into
fidivl
sub
arpl
sub
push
jge
fildl
cmpsl
sbb
or
pop
jnp,pt
push
xchg
pop
jne
jns
xor
out
or
in
xchg
add
movsl
mov
sti
sub
cmc
cmp
jae
pop
cltd
test
jp
mov
inc
lret
repnz
fldcw
sbb
sbb
imul
xchg
cmp
gs
xchg
fildl
ds
addr16
jae
js
iret
mov
mov
ret
int3
or
ljmp
shll
push
rol
and
das
pop
mov
push
popa
aaa
leave
es
adc
cwtl
dec
sbb
dec
popa
pop
push
nop
sub
movsb
sub
xor
sub
adc
loopne
out
mov
sub
sbb
cmpsl
dec
std
mov
aaa
adc
mov
pop
jne
inc
daa
outsb
fwait
sub
shll
or
mov
pop
aad
add
adc
andb
les
fxtract
pushw
pop
aad
lods
jmp
outsb
mov
in
lret
or
sti
cs
out
adcl
inc
pop
xor
fistl
or
jb
idiv
push
mov
mov
jbe
jmp
test
scas
xchg
xor
inc
mov
movsl
aam
cmpsb
adc
pop
push
pop
inc
or
loopne
jle
stos
adc
call
xchg
cmpsb
dec
cmp
aaa
fwait
sbb
jae
add
dec
inc
or
popa
cmp
pop
incl
push
outsl
cmp
test
add
gs
out
pop
fcomps
push
mov
or
dec
mov
in
shlb
bound
or
mov
in
subl
mov
xor
and
mov
cmp
push
add
loopew
stos
addr16
scas
iret
test
popa
xor
push
sub
mov
mov
inc
add
ror
cmp
loopne
scas
out
outsl
cmc
movsl
sub
ret
ret
das
mov
jp
ljmp
xchg
sbb
subl
rolb
pushf
rol
mov
push
ja
out
sbb
scas
or
mov
push
mov
lahf
into
mov
inc
in
jl
mov
aas
ret
ss
mov
out
dec
add
call
and
fadds
inc
filds
xor
fistpll
cli
mov
pop
or
shl
pushf
dec
cmp
sub
das
cli
pop
sahf
shl
sub
inc
stos
inc
mov
sub
jo
adc
sbb
inc
mov
sbb
popa
push
fisubl
mov
pop
ds
push
test
add
mov
pushf
xchg
mov
mov
nop
loopne
jle
pop
cwtl
idivb
sub
data16
in
mov
loop
dec
xchg
filds
shlb
and
mov
lret
and
dec
xchg
xchg
aaa
add
gs
and
pop
lods
fidivl
sbb
push
mov
mov
sbb
imul
and
push
shlb
jmp
mov
xchg
fwait
dec
xchg
push
sahf
dec
sub
dec
fsubs
adc
dec
sub
outsl
or
cmp
movsl
repnz
pop
push
aaa
mov
cmpsb
sahf
movb
mov
out
stos
imul
dec
lods
push
and
sbb
sbb
xor
out
push
mov
fidivrs
sarl
std
std
shrl
inc
jnp
rcl
fadds
out
and
out
leave
loope
movsb
lds
daa
fwait
aam
ret
sub
mov
fwait
jg
lahf
cs
dec
enter
andl
loope
fldl
cmp
int3
jg
out
and
orb
dec
xchg
xorl
je
mov
repnz
or
out
bound
test
xchg
xchg
aaa
jbe
scas
mov
jmp
rcrb
ret
popf
sub
mov
lcall
push
fistps
xchg
sub
test
js
aad
inc
out
cmp
inc
mov
pushf
sub
in
push
jecxz
jb
dec
lods
adc
jp
adc
in
sub
sbb
rcll
das
inc
subl
cmp
pop
mov
xchg
xlat
ret
rcrb
int
and
mov
dec
lock
icebp
xchg
cmp
loopne
push
cmpl
adcb
pop
emms
scas
xchg
push
mov
sbb
jb
std
ja
stos
lods
pop
xchg
mov
or
decb
jmp
daa
or
std
inc
adc
in
sahf
jg
or
ljmp
push
call
inc
jmp
fldcw
pop
dec
sub
lods
movsl
or
loope
sbbl
call
mov
mov
repz
mov
add
cmpsb
pop
les
jecxz
stc
push
pop
adc
arpl
lds
inc
fwait
es
ret
inc
popa
dec
out
mov
mov
repz
pop
mov
sub
fdivrl
ja
and
cld
cmp
sbb
pop
jbe
ds
sub
or
sarl
push
or
mov
fs
pop
hlt
roll
imulb
push
je
icebp
mov
gs
jl
out
shrl
or
dec
aam
sub
notb
adc
push
add
popf
and
mov
ret
mov
out
bound
or
sbb
inc
notb
cmp
dec
pop
call
outsb
pop
imul
in
lds
inc
xor
int
sub
icebp
jg
jns
mov
mov
test
or
inc
fists
mov
add
pop
andb
sub
inc
in
loope
lock
jo
dec
mov
aam
cmp
xor
test
aad
aad
mov
shl
aam
mov
loopne
pop
gs
popf
xchg
sbb
or
cld
mov
push
aam
out
inc
pop
cmpsb
int3
fs
fwait
call
int
call
les
dec
xchg
movsb
add
xchg
adc
fists
mov
xchg
push
pop
lods
mov
and
mov
adc
aam
in
jle
or
addl
sub
sbb
dec
xchg
imul
and
push
push
add
in
jo
mov
cs
in
and
mov
push
sbb
insl
adc
add
mov
cmp
push
sub
sub
sub
popa
sahf
xor
add
shlb
cmp
mov
xchg
lds
jae
pop
add
fcomps
mov
pop
or
scas
push
cmc
fcmovne
jp
lods
inc
test
or
xchg
inc
lods
xchg
ljmp
leave
cmp
scas
lahf
cmp
daa
pcmpgtd
hlt
inc
repnz
daa
jno
jecxz
fmuls
add
jb
dec
ds
mov
cmp
loop
stos
or
or
out
or
rorb
jg
push
sub
and
fildll
dec
pop
jmp
pusha
test
repnz
ret
das
inc
int
adc
push
jbe
insb
xor
fidivs
jmp
out
pop
mov
pop
cltd
mov
incl
and
dec
imul
mov
xor
jne
cmpsb
andb
shlb
in
mov
test
mov
repnz
iret
not
ror
daa
cltd
enter
mov
mov
faddl
push
mov
xchg
cmp
xor
cmp
mov
lcall
pop
cmp
pop
loopne
mov
mov
push
and
es
inc
adc
sub
flds
xor
push
dec
inc
mov
imul
and
mov
sahf
mov
fdivrp
xor
lcall
cmpl
insb
xchg
jne
inc
dec
std
aas
jbe
ret
push
sbb
push
mov
xor
mov
stc
pop
ljmp
fs
jmp
loopne
scas
js
add
mov
jns
dec
in
inc
dec
sbb
push
ljmp
cmp
jmp
inc
addr16
flds
cmpsl
mov
inc
ljmp
std
aas
ret
popf
pop
or
ja
movsb
aam
fs
xor
cmp
mov
dec
mov
fwait
sbb
mov
rorl
mov
pop
loopw
mov
mov
pop
and
push
push
dec
lods
or
xchg
jae
dec
mov
dec
rorl
fisubrl
into
repz
push
dec
arpl
adc
cld
int
adc
adc
push
xchg
insb
and
pop
sub
xor
data16
and
ror
imul
sbb
lret
push
mov
out
jg
std
xor
add
dec
cmc
jnp
add
mov
pop
jns
cli
fsin
call
stos
repz
add
add
sti
mov
push
ljmp
jae
mov
out
fmul
jp
mov
cmp
ror
andb
jns
lods
and
movsl
push
mov
cld
push
fs
adc
fdivrl
add
mov
sbb
cwtl
jnp
mov
xor
pop
imul
data16
inc
pop
lods
push
pop
arpl
dec
adcl
add
sti
xor
push
hlt
pop
mov
mov
insl
fisubrs
test
push
push
out
mov
sti
pop
dec
xor
add
ret
cs
stos
lahf
cld
hlt
loop
les
test
xchg
or
sti
loop
push
pop
or
setl
lahf
jne
or
imul
sbb
cmpsb
test
jge
or
jnp
fucom
es
push
fisubrs
xchg
stos
stc
jbe
sub
stc
inc
imul
xchg
adc
mov
lds
jae
in
lahf
outsl
test
inc
mov
test
frstor
push
outsl
sbb
cmovno
or
outsl
mov
or
jns
mov
int
inc
jns
pop
or
cld
addr16
xchg
jmp
and
cmp
push
cmp
push
inc
dec
arpl
mov
faddl
adc
sahf
mov
push
int
notl
rolb
inc
loopne
and
das
divl
xchg
push
call
and
and
sbb
xor
pop
jle
shlb
lock
and
jle
stc
test
mov
mov
dec
push
ret
jge
mov
aas
and
test
jmp
or
xchg
stc
rcrl
sbb
mov
cld
push
icebp
xchg
sbb
sub
daa
shlb
aas
stos
add
testl
addr16
in
mov
xchg
add
mov
lret
test
cmp
jle
fucom
and
ss
inc
xlat
iret
nop
out
inc
adc
pop
in
roll
dec
sub
imul
xor
mov
and
pop
lods
std
pop
add
fimuls
cli
ljmp
jbe
popa
push
sub
popa
mov
inc
sbb
lock
adc
test
repnz
dec
mov
out
add
mov
dec
add
push
out
pop
repz
sub
shr
inc
adc
sbb
das
pop
testb
test
pusha
mov
add
push
or
cs
push
mov
push
movsb
dec
adc
mov
inc
xchg
add
stos
scas
or
adc
ljmp
fstl
data16
sbb
insl
xorb
xor
xchg
and
sub
cmc
lret
arpl
and
mov
add
cli
sarb
out
push
mov
sub
mov
ss
addr16
ljmp
mov
int3
sub
dec
rcr
push
push
push
sbb
movsb
scas
mov
and
and
mov
movsl
cwtl
cmp
cld
adc
xchg
pushf
das
test
sarb
mov
nop
add
adc
lods
rorb
xchg
dec
jmp
scas
iret
jae
cs
xor
mov
stos
das
xchg
out
outsb
incl
and
jmp
ret
in
pushf
sub
movsb
clc
je
movsb
xchg
sub
icebp
lret
andl
inc
jb
nop
inc
fdiv
rcrb
repz
jae
xor
test
into
mov
insl
fsubl
test
cld
sbb
cld
pop
jbe
jb
mov
pop
andb
in
lods
clc
cmp
rcrl
xchg
rorl
cmp
neg
or
sub
fs
mov
test
call
dec
sar
mov
cwtl
jnp
movsl
sub
push
jmp
xchg
or
dec
call
dec
cmp
or
push
data16
push
xor
mov
sahf
stos
xor
mov
mov
xchg
cmp
push
mov
cmp
imul
pop
adc
aad
pop
movsl
fcoms
scas
dec
lret
subb
mov
push
push
add
cmp
movsl
add
inc
not
cmp
frstor
pop
cltd
jns
out
mov
pop
mov
sti
push
xchg
dec
adc
loopne
and
ret
idivl
xor
fs
mov
fisubs
shrl
shll
insb
shll
mov
aaa
cmp
inc
mov
or
add
daa
cmpsb
lret
out
fidivs
loope
mov
jo
adc
cmp
dec
mov
inc
mov
sub
loopne
lretw
inc
stos
ret
hlt
js
push
imul
or
push
adc
rorl
dec
xlat
dec
loop
mov
push
or
mov
fisubl
shll
or
ss
or
int
cli
mov
fcomps
or
mov
pop
aad
bound
inc
jne
ret
imul
aam
xor
push
outsl
je
mov
dec
dec
add
test
ds
std
xor
lahf
mov
mov
notl
lea
xchg
icebp
push
scas
out
jle
stc
jmp
dec
sbb
pop
mov
lcall
stc
cmpsl
test
movsb
dec
sti
cmpsl
repz
fs
push
pop
cmp
xor
xor
out
out
or
mov
test
dec
cmp
mov
shlb
inc
aas
loope
push
push
movsl
clc
push
aas
jns
xchg
sub
faddp
push
mov
faddl
or
sbb
xor
lahf
nop
push
ds
js
add
movsb
jg
iret
jns
es
sbb
or
stc
xchg
xlat
cld
aad
mov
push
negb
xchg
out
fildll
rcl
into
addr16
inc
lret
xchg
ljmp
and
pop
sti
and
sub
aam
jno
ret
mov
or
out
hlt
je
mov
jg
mov
cwtl
test
cs
jecxz
xor
mov
mov
pop
add
mov
fcom
loop
adc
inc
fidivl
dec
pop
mov
les
fstpl
adc
cmp
sub
push
inc
daa
pop
sub
push
rorb
inc
xor
stc
test
jo
frstor
rolb
lds
sarb
movsl
push
push
cmc
lds
in
cld
push
jle
cmp
aas
aad
mov
loop
cmova
sahf
aam
mov
test
sbb
das
fimull
adc
iret
sbb
dec
inc
cmpsb
adc
or
cmc
ds
jnp
xchg
and
xorl
add
call
lcall
pop
rcrb
call
aaa
jb
xor
outsl
mov
aam
cmpl
in
in
fimuls
js
cmc
sbb
dec
lea
xchg
ret
add
cmp
dec
mov
sbb
andb
stc
bound
cmp
add
rorl
fsubrp
ljmp
lods
popf
subb
dec
push
idivl
jo
out
dec
jge
shrb
js
shl
cltd
jp
push
mov
mov
daa
mov
ljmp
gs
stos
xorb
xor
mov
cmp
dec
mov
sbb
insb
cmc
jbe
pop
push
loope
sbbb
push
lahf
xlat
jae
outsb
mov
int
xor
push
popa
push
adc
sub
aad
push
mov
inc
or
add
push
cs
int3
mov
hlt
lcall
cmpl
clc
xor
xchg
fidivrs
mov
clc
call
std
cmc
in
lea
add
idivl
cmp
cmp
lea
push
lret
sub
decl
sbb
sbb
fadds
cmp
push
inc
mov
jge
jp
sahf
inc
pushf
test
bound
into
lcall
in
not
movsl
sub
imul
lret
ja
jmp
fsubs
push
pop
insb
dec
sar
aad
mov
sub
enter
enter
sub
add
inc
mov
add
pushf
dec
aam
js,pt
mov
outsl
pop
inc
ljmp
idivl
pop
inc
cmp
inc
lds
xchg
dec
cmp
fcmovu
mov
ss
lret
mov
jbe
sbb
data16
outsb
jbe
movsl
ja
mov
rorb
sub
cmp
pop
or
shrl
adc
test
ret
js
jg
cli
push
jmp
std
test
lea
xchg
inc
lods
pusha
pusha
dec
mov
xchg
cld
push
cmc
sub
lock
subl
push
add
jns
jmp
xchg
int3
sbb
rcrl
xlat
subl
scas
clc
sbb
test
aas
push
scas
popa
daa
push
test
out
shll
mov
cld
or
pop
je
xchg
test
xchg
test
ljmp
ds
jno
mov
mov
sarb
stc
add
and
sub
fsubrl
adc
movsb
ds
das
mov
imul
jl
data16
mov
insl
pop
pop
sub
repnz
pop
cmc
xchg
or
aaa
fmulp
arpl
into
inc
les
and
sub
mov
loop
adc
mov
dec
aas
hlt
adc
enterw
inc
ja
fdivl
setae
es
mov
mov
jmp
adc
sbb
jl
adc
andb
sbb
stos
lcall
jo
andl
jg
sub
scas
xchg
or
movsl
dec
jge
jae
cmp
sti
or
cwtl
flds
adc
daa
mov
aaa
aas
rcl
rcr
cltd
pusha
into
cwtl
or
stc
jne
sbb
ret
fwait
cltd
sbb
fs
cwtl
sub
and
or
imul
dec
outsb
dec
fs
adc
add
bound
jbe
aad
outsl
popa
in
pushf
std
adcb
fildll
xor
sbb
out
je
mov
inc
rol
xor
int3
and
into
aam
jp
mov
das
mov
aam
mov
aam
mov
and
inc
adc
fcmovne
fadds
sbb
cmc
mov
leave
inc
pop
stos
and
cmp
xor
dec
in
sahf
into
pop
sbb
xor
jno
sbb
sbb
sbb
mov
xor
int3
sub
adc
das
push
gs
ret
in
aad
cmp
dec
subl
mov
hlt
and
xchg
fadd
lahf
mov
loope
roll
aas
mov
adc
scas
jae
addr16
push
lods
pop
in
push
cmp
leave
fdivl
xor
pusha
inc
enter
mov
inc
sahf
xor
push
in
inc
shrd
mov
xchg
adcl
and
out
inc
xchg
jge
in
hlt
mov
imul
pop
mov
test
testl
shrl
mov
pop
and
dec
xchg
imul
sbb
cmp
push
popa
cmp
or
mov
push
xchg
ljmp
pop
xchg
jl
loopne
data16
mov
cld
dec
mov
shrl
cmp
pop
adc
ds
push
xchg
sar
xchg
push
adc
mov
xorb
fldenv
inc
repnz
push
aad
int
xchg
pushf
pop
push
jmp
cld
push
into
push
pop
mov
popf
andl
mov
gs
xchg
xchg
add
sub
sahf
mov
lock
fsubrl
xchg
jmp
adc
aas
iret
or
xchg
and
daa
adc
inc
shl
jo
fstpl
inc
adc
shrb
mov
mov
cmp
cltd
add
mov
mov
or
or
mov
jmp
jae
scas
or
and
and
hlt
fsubrs
lret
push
sub
dec
cmp
fistpl
mov
lock
jp
cmp
xchg
add
sub
aaa
ret
push
add
enter
xor
cmpsb
fldenv
mov
into
cmp
repnz
insb
jmp
je
movsl
pop
dec
push
jp
push
mov
sub
xchg
xchg
mov
int3
jnp
push
mov
cmp
sbb
add
dec
call
in
jns
pop
outsl
in
pop
scas
jb
cli
mov
sti
pop
add
std
test
push
mov
mov
loopne
movsl
fistps
fs
mov
push
mov
testl
push
outsl
cmp
pop
in
mov
cmp
sbb
insl
out
inc
sbb
fs
sbb
sbb
add
cmp
xchg
fwait
sub
icebp
inc
test
and
ficompl
aas
mov
icebp
adc
fisttpl
lock
int3
ret
pop
insb
fidivrs
leave
sub
stc
xchg
cltd
sti
pushw
addr16
and
mov
fwait
ja
out
lock
test
xchg
cwtl
cmpsb
cmp
jmp
adc
inc
mov
pop
adc
lock
jecxz
pop
je
pop
cmp
addr16
out
in
icebp
enter
sarb
jno
ret
mov
push
je
insl
cmp
lods
lret
cwtl
dec
inc
xchg
inc
push
nop
mov
mov
pop
add
mov
and
xchg
xchg
xorb
cmp
ret
pop
mov
mov
fidivrs
sarb
data16
jge
jge
xor
xchg
xchg
jecxz
dec
int3
decl
push
add
mov
inc
loope
test
push
and
and
jge
mov
jge
lods
fcmovnu
push
insb
sbb
pop
push
pop
xchg
xor
lds
stos
or
imul
sub
rolb
jnp
xchg
inc
xlat
in
rorb
sarl
imul
sbb
push
inc
push
jg
daa
outsl
cmpsl
sub
sub
jae
lcall
adc
out
fiadds
mov
sub
ret
and
mov
es
or
mov
mov
lret
out
sbb
jb
cmc
xchg
bnd
jp
mov
sub
push
push
dec
jbe
hlt
or
lahf
dec
jp
xlat
lahf
fcompl
fld
lds
pop
sbb
iret
mov
add
and
jns
repnz
popa
lods
stc
sub
dec
loope
fnsave
mov
jmp
or
les
movsb
outsl
add
jmp
fdivp
addr16
xor
mov
xor
les
jl
cli
or
incl
fcmovnu
movsl
movsb
rcrl
popl
jle
xor
dec
scas
xchg
outsb
inc
push
cmp
mov
jmp
push
sti
jnp
outsb
sub
int3
inc
xor
clc
or
loopne
bound
pop
xchg
add
pop
cli
xchg
test
mov
mov
mov
cmpsb
lock
xor
jne
je
xchg
scas
sub
xor
push
and
add
aaa
inc
jae
or
xchg
mov
mov
movb
out
std
mov
sbb
lods
movsl
shrl
jno
sbb
push
jmp
push
aaa
jo
push
or
add
arpl
inc
mov
out
mov
aad
pop
rcr
out
cmp
ljmp
test
add
sub
sub
mov
pop
push
rclb
push
sbb
ljmp
daa
pop
jne
mov
fistl
sub
cwtl
les
mov
mov
push
or
mov
xor
xchg
mov
add
or
ja
out
cs
xchg
inc
sub
in
mov
mov
cmc
andl
ffree
mov
outsl
mov
fsub
lds
jae
fs
inc
dec
jne
shrl
fidivrs
or
outsb
jl
aad
fsubrp
cmp
or
sub
cmp
loope
pop
and
mov
popf
icebp
inc
lret
mov
rcll
push
ret
lahf
lcall
inc
inc
data16
jecxz
adc
enter
xor
jnp
outsb
xchg
mov
stos
jg
cmp
inc
cli
mov
xor
ja
js
les
cld
les
xor
roll
or
and
or
sub
mov
or
stos
push
inc
imul
mov
addl
mov
hlt
mov
xchg
bnd
pop
sub
push
std
add
fcompl
fcom
lock
imul
add
jno
enter
pushf
xchg
into
cs
xor
ss
add
and
movsl
mov
jmp
sub
mov
mov
ret
mov
pop
jae
int
sub
repz
adc
repz
mov
popa
filds
cmp
lret
int3
cli
sbb
mov
add
loope
je
mov
mov
popa
insl
dec
sbb
mov
jle
test
outsl
xchg
ret
nop
hlt
stc
add
sbb
mov
or
jg
arpl
pop
xlat
push
xor
cmp
mov
jae
neg
das
inc
in
pop
mov
fs
icebp
pop
jl
mov
lahf
xor
loop
sub
repnz
scas
gs
push
xchg
cltd
xor
xchg
jp
fimuls
popa
add
adc
out
mov
mov
or
insl
jnp
pop
xor
xchg
and
cmc
pop
push
cmp
lret
mov
sbb
jns
ret
pop
orl
test
cli
cmp
iret
call
js
mov
xchg
pusha
add
cmp
push
ds
sbb
ficomps
lret
push
pop
xor
push
imul
dec
mov
mov
xor
movsb
cmp
or
cmp
push
or
loope
ja
add
or
jmp
jns
int
shll
push
das
and
repnz
mov
imul
orps
xchg
ljmp
pop
lret
fcoml
loopne
sbb
cmp
movsl
out
ret
ds
push
xchg
shl
push
push
push
dec
test
insb
shl
inc
mov
xchg
in
cs
add
fldl
loop
ret
xor
iret
out
sti
jmp
inc
daa
pop
aad
adc
xor
add
or
shrl
and
int3
cmpsb
icebp
sbb
adc
jl
push
aas
push
insl
sub
sbb
test
or
lds
sbb
fwait
push
xor
push
dec
cmc
in
sub
mov
push
pop
andl
sub
andl
mov
inc
mov
cmpl
jge
jmp
push
push
call
cmpl
jb
add
movl
andl
mov
inc
mov
cmpl
jb
jmp
push
call
cmpl
jb
mov
mov
mov
or
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
orl
mov
movzwl
sub
mov
xor
xorl
add
mov
lea
mov
adc
mov
adcl
xor
sbbl
add
orl
mov
notl
lea
push
adc
mov
orl
xor
orl
add
orl
push
or
mov
push
pushl
call
and
mov
movzbl
sbb
mov
mov
mov
movl
mov
mov
lea
orl
mov
sub
movl
movzwl
sbb
mov
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
addl
sub
movl
mov
movl
mov
mov
movl
mov
cmp
movl
je
mov
mov
xor
xor
lea
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jg
jmp
push
pushl
pushl
push
call
jmp
mov
xor
orl
div
mov
sbbl
mov
andl
xor
xor
sub
movl
cmp
movl
jne
mov
xor
mov
sub
mov
or
mov
xor
xor
sbbl
add
sbbl
add
mov
movl
cmp
jae
xor
lea
mov
mov
xor
add
lea
movl
mov
mov
mov
cmp
movl
jbe
addl
addl
jmp
decl
addl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
pushl
push
call
jmp
mov
xor
adcl
inc
incl
subl
add
cmp
jb
notl
mov
add
mov
adcl
xor
sbbl
mov
sub
add
sub
mov
sbbl
xor
xorl
sub
subl
ror
xor
mov
xor
add
sub
imul
mov
mov
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
jmp
iret
xor
jne
jns
cmp
mov
add
jnp
sahf
jnp
js
iret
scas
fwait
cmc
mov
xlat
inc
orb
mov
ret
sbb
sbb
outsl
and
add
and
faddl
mov
lahf
add
test
bound
mov
xchg
push
out
mov
cmp
add
or
aam
xor
aam
pop
ds
xchg
mov
outsb
pusha
cld
stc
lock
jnp
je
insl
sub
mov
cmpsb
ret
add
xchg
adc
mov
ds
hlt
mov
jo
xor
test
cmpsl
fwait
ret
or
xchg
popa
or
sbb
or
int3
dec
jle
jne
adc
xor
push
mov
cmp
sub
push
leave
out
pop
insb
rcr
pop
jmp
cmp
fimuls
movsl
or
dec
loop
rcl
xlat
orl
movsl
add
in
xchg
nop
popf
inc
das
or
xor
inc
xchg
shlb
or
in
mov
mov
sbbb
jne
lret
push
aaa
loop
out
pop
jno
lea
and
ror
and
js,pt
and
notb
push
adc
fisttpll
jo
fcomp
xor
pop
inc
iret
dec
xchg
jno
add
mov
dec
inc
adc
mov
mov
sbb
sbb
mov
xlat
inc
pop
jne
icebp
or
xor
pop
adc
or
rorb
dec
mov
push
mov
addr16
jge
inc
adc
ret
imul
xchg
or
cmpsl
mov
shrl
add
sub
ja
jmp
jp
mov
jge
pop
pop
xchg
and
push
lods
add
cli
adc
inc
stc
daa
in
jmp
fs
push
fadds
and
insb
movsb
add
inc
pmulhuw
inc
ror
cmp
das
popa
imul
mov
movsl
jge
add
dec
es
rorb
andb
div
inc
and
fabs
cmp
xor
dec
arpl
scas
pop
inc
mov
jae
sub
xchg
lahf
clc
test
addr16
inc
jecxz
adc
in
add
xchg
lret
orb
add
push
and
or
lods
popa
fst
popa
jle
aam
add
cmp
arpl
mov
cmp
fiaddl
or
push
clc
dec
push
enter
mov
mov
inc
clc
adc
sarl
jecxz
jnp
push
icebp
and
xor
mov
jl
int
cmp
cltd
pusha
leave
repz
inc
xchg
or
push
rorl
cmp
sub
push
mov
lods
cmp
cmpsl
pop
adc
aaa
sbb
ss
sti
adc
fcompl
int
push
icebp
cmp
lock
imul
cmp
push
mov
gs
test
pop
mov
ret
rcrb
pusha
pusha
mov
or
loop
cli
adc
lret
mov
cmpsl
jns
dec
jb
jmp
outsb
or
aam
cmc
mov
add
xchg
jp
inc
sub
adc
jle
jae
repz
adc
pop
subb
jns
movsl
sub
stos
add
rcrl
mov
repz
jp
mov
jno
movsl
xchg
jg
dec
mov
pop
enter
dec
int
dec
cmc
scas
inc
xor
dec
es
adc
push
mov
popa
sub
push
test
shlb
inc
mov
dec
fnstenv
sarl
jb
pop
mov
out
out
fbstp
daa
aam
mov
scas
adc
pushl
dec
pusha
lods
lock
xchg
fdivrl
lret
sti
mov
call
adc
inc
hlt
data16
inc
sub
dec
pop
insl
lret
or
pop
xor
inc
hlt
cmp
lcall
cmpsl
sbb
ret
pop
into
jle
iret
mov
mov
call
push
cmp
shrl
add
add
mov
das
and
stc
addb
add
or
ds
jecxz
lahf
rcrl
pop
enter
lahf
mov
roll
mov
int3
loop
fnstcw
rcll
lahf
data16
lea
adc
fwait
addr16
icebp
mov
std
sarb
sub
das
push
into
scas
adc
push
imul
mov
inc
aam
fistl
mov
mov
xchg
mov
or
cmc
addb
adcl
mov
sti
movsb
inc
push
in
mov
mov
sbb
xor
test
insb
mov
int
and
sbb
adc
inc
inc
sbb
rorl
cmpsb
callw
and
daa
fmuls
sub
pop
notl
pushl
repnz
mov
cmp
xchg
mov
jl
pop
push
adc
mov
mov
movsb
call
pop
cmpb
sbb
mov
popa
lcall
and
inc
jge
mov
popa
sbb
mov
fldcw
fdivrl
and
popl
cmc
add
scas
lret
je
xor
adc
push
movsb
mov
fldt
js
push
and
in
scas
sub
xor
popa
ja
adc
adc
test
popa
jmp
or
movsb
fisubl
imul
pop
add
fbld
mov
int
mov
jg
xchg
nop
jae
xor
or
and
scas
xor
aas
in
movsl
popl
push
or
movsl
dec
in
xchg
in
adc
pop
lea
outsb
les
negb
es
lret
out
dec
jne
outsl
jo
fsts
jmp
add
mov
or
xor
and
pusha
sub
inc
repz
shrb
jnp
and
xor
dec
sbb
mov
mov
sarb
inc
lcall
adc
stos
decb
gs
adc
ss
cmpsl
xchg
sbb
lea
push
and
adc
out
cmc
push
scas
xlat
push
in
xchg
xor
cmc
outsl
testb
or
hlt
fadds
in
test
push
push
mov
aad
mov
add
push
rorb
repz
std
ficomps
out
sub
insl
push
movsb
lahf
dec
cwtl
icebp
jb
test
ja
cwtl
test
sub
mov
mov
push
push
cltd
sub
leave
js
lock
jo
bound
ss
inc
aad
sub
jb
sub
xchg
or
outsb
cwtl
pop
fwait
call
sbbb
jecxz
push
or
push
clc
xchg
or
fcoml
fisttpl
push
mov
mov
scas
enter
adc
fnstcw
xchg
je
lcall
push
cli
movsl
mov
mov
or
iret
sahf
ss
jns
sub
pop
or
push
fnclex
mov
imul
je
mov
lret
jbe
mov
ss
outsb
ja
xchg
int3
mov
nop
ja
inc
in
int
clc
mov
lahf
cmp
sub
xor
into
pop
and
xlat
mov
lahf
jno
fadds
jb
rolb
push
in
mov
add
inc
cli
dec
ficoml
aas
pop
cmp
mull
mov
mov
fcos
mov
or
bound
xorb
dec
push
cld
or
ret
or
les
les
xchg
dec
aas
lock
sub
sbb
fistpll
jecxz
es
pusha
lds
push
pop
jg
popf
mov
mov
xlat
sub
andl
sbb
das
xchg
inc
std
int3
popf
and
notb
add
aam
lock
lret
sbb
sbb
xor
and
adcl
nop
sarl
mov
test
xor
jmp
sbb
mov
push
xchg
scas
aas
add
and
in
xor
pop
leave
dec
cli
lea
xchg
add
int3
inc
fisubrl
sbb
jg
jecxz
fldt
ja
loope
xor
add
push
add
js
arpl
jecxz
push
fistpll
es
sub
sbb
push
sub
rcrl
pop
repz
xchg
xor
ret
aam
es
loopne
mov
push
inc
xchg
rclb
fs
xchg
stos
int3
add
lods
or
sti
insl
and
mov
ret
repz
imul
inc
or
push
add
test
fwait
push
and
mov
out
movsl
jne
or
out
call
fucom
ds
xor
repz
push
inc
loope
js
cltd
cli
add
aam
sbb
pop
pop
add
xchg
fwait
lret
jnp
hlt
lahf
lret
dec
lret
fst
lea
sub
rorl
shll
mov
ljmp
ret
popf
lods
aad
cmpsb
sub
cmpsl
jl
or
pop
outsl
ljmp
out
lret
mov
inc
mov
fs
pop
out
jecxz
js
bound
loope
xchg
in
fs
xchg
fadds
cmp
push
jo
sbb
test
push
arpl
push
push
cmp
imulb
stos
adcl
sbb
sahf
cld
lds
pushf
les
test
mov
push
mov
xchg
scas
mov
push
sti
and
cld
pop
cld
mov
adc
inc
enter
sbbl
mov
dec
ficompl
xor
rorb
repnz
mov
mov
add
mov
pop
sbb
jnp
popf
cmp
push
stos
jmp
dec
scas
mov
stos
mov
or
lods
pop
test
mov
loop
dec
xchg
ret
cld
daa
stos
dec
cld
pop
mov
mov
xchg
jp
insl
in
gs
fwait
js
imul
pusha
jecxz
mov
shrl
mov
fsubrs
arpl
inc
mov
or
rcrb
pop
dec
and
inc
imul
cltd
or
sub
or
mov
mov
aam
push
add
movsb
and
sub
fldenv
sub
xchg
imull
adc
cmp
xor
push
cli
fists
xchg
cltd
cmc
jg
movsl
cmpb
loop
sbb
test
imul
pop
fisubl
and
push
push
xchg
mov
lahf
sbb
dec
mov
jns
pop
mov
rclb
dec
nop
ficoms
std
in
imul
pop
pop
mov
sti
dec
std
lahf
je
xor
push
mov
push
sbb
sbb
mov
fwait
aas
clc
sbb
inc
dec
nop
lock
mov
dec
xchg
mov
lcall
lcall
or
jp
orb
jns
mov
sub
push
fldlg2
cwtl
cld
mov
insb
dec
adc
pop
ss
insb
dec
mov
mov
rolb
jmp
or
mov
sbb
mov
lea
xlat
pop
jmp
jae
sbb
pop
dec
pop
jae
adc
or
insl
bound
fstp
dec
std
std
clc
fwait
xchg
aad
push
inc
mov
mov
aad
mov
pop
call
fldcw
xor
mov
out
xchg
popf
fstpl
ds
aam
xor
imul
mov
pusha
and
loopne
cmovns
sub
es
mov
adc
rolb
jecxz
jecxz
js
inc
jle
cmp
push
mov
cmp
mov
jecxz
pop
bnd
mov
or
mull
cli
push
subl
xor
stos
int3
rcrl
pop
lret
lret
mov
leave
aas
test
out
jmp
mov
icebp
mov
cmp
ds
and
jmp
lcall
push
inc
adc
ja
and
loope
mov
pop
rcrl
mov
cmp
enter
jae
scas
andps
lods
jp
mov
rcll
cmpsb
outsb
jg
mov
mov
in
mov
arpl
jp
cmp
iret
or
lret
ljmp
and
add
add
lea
fnstcw
dec
mov
out
aad
fcomip
adc
addr16
push
pop
loopne
outsb
icebp
std
cmp
jge
mov
outsb
adc
cmp
scas
into
mov
xor
repz
xor
ficompl
outsl
scas
xchg
iret
negl
push
lahf
xchg
pop
mov
mov
movsl
ljmp
jecxz
imul
adc
int
cmovae
mov
fcoml
xor
pop
push
xchg
loopne
sbb
in
lret
adcb
cmpsl
adc
in
out
jmp
les
int
loope
gs
lcall
mov
xor
and
mov
push
xor
adc
mov
fcoms
jle
push
push
fldenv
sbb
pop
cltd
sbb
jae
sbb
and
notl
mov
mov
pop
xor
cli
mov
inc
leave
pop
inc
push
ja
fcompl
jnp
call
mov
repnz
fs
cs
shll
hlt
mov
sub
push
imul
xchg
iret
cmp
dec
mov
mov
mov
fstl
les
add
lret
mov
cmp
js
add
pop
test
test
xchg
incb
stos
js
xor
and
out
clc
pop
fcmovnb
push
xlat
xchg
rcrl
sbb
sbb
mov
and
aas
pusha
stc
xchg
xchg
js
adc
xchg
inc
lea
int
mov
rolb
jle
inc
fnstcw
mov
jge
and
dec
and
xlat
add
jbe
aam
xchg
mov
rol
cmp
cmp
cmp
xchg
ret
add
repz
and
pop
push
jp
and
add
inc
lret
adc
nop
test
ss
xchg
and
data16
sarb
jge
fistpll
xchg
jle
dec
cmp
push
mov
mov
or
xor
clc
imul
inc
fisubrs
mov
iret
out
add
mov
cld
fwait
xlat
push
add
jnp
out
mov
flds
rcr
xor
mov
cmpsl
mov
jmp
push
addr16
and
jp
nop
mov
cli
gs
push
jae
mov
in
fnstsw
add
cmp
sub
dec
xor
jns
mov
adc
push
sub
imul
call
addr16
in
inc
sbbb
sub
sub
push
subb
jmp
add
fcomps
mov
push
sbb
sbbl
mov
adc
stos
aad
adc
pop
cmc
fsubl
fcomps
add
inc
test
xchg
bound
sub
mov
add
sbb
imul
jne
jmp
xchg
roll
imul
ret
xchg
lahf
lods
pop
inc
jmp
add
daa
xchg
sarl
xchg
xchg
mov
jne
loope
fisttpl
add
jne
inc
ljmp
sub
dec
cmp
fsubrp
add
pop
out
repz
andl
push
mov
les
pop
es
scas
adc
lock
je
das
mov
dec
push
xchg
mov
shlb
mov
or
inc
or
rorb
daa
daa
dec
pushf
sub
adc
xchg
fistpl
fs
loopne
add
lahf
in
das
lds
dec
mov
cmpsl
lahf
mov
jb
xchg
repz
mov
sub
jge
mov
push
and
and
arpl
dec
mov
test
pop
and
xor
fsubl
pop
mov
js
loop
add
mov
pop
or
pop
aaa
or
sahf
pop
xchg
push
cs
mov
mov
and
push
loopne
ja
and
mov
jb
scas
or
adc
adc
mov
daa
xchg
addl
xor
jg
movsl
adc
dec
iret
mov
mov
cmp
push
mov
jno
dec
jp
mov
lock
aad
les
shrl
sub
pop
cs
sub
cli
sbb
push
push
xor
shl
out
sbb
shlb
les
dec
pusha
adc
sbb
inc
cli
xchg
push
daa
shlb
rcll
jbe
inc
fdivs
mov
xor
pop
mov
jmp
pop
stos
mov
sbb
xor
in
sbb
xor
mov
out
pushf
pop
imul
pop
cmpsb
cwtl
mov
push
xor
dec
inc
mov
icebp
cltd
jle
out
loopne
xor
pusha
sbb
sbb
and
addr16
sbb
test
les
push
loop
sub
cmc
pop
stos
cmp
pushf
pop
repnz
sub
movsl
ja
jp
lea
ret
sbb
cmp
xor
push
mov
clc
mov
jp
loopne
mov
jge
mov
in
ret
test
and
xchg
push
scas
sbb
out
jno
xor
stos
cmc
insl
push
xchg
ret
sub
dec
sub
into
mov
pop
mov
push
rcrl
adc
mov
or
mov
jb
cltd
sarb
cmpsb
hlt
pop
rorl
jne
stc
add
jecxz
sbb
xlat
cmc
mov
loop,pn
mov
sahf
push
and
int
push
jae
pop
or
addr16
or
test
xchg
xchg
sbb
shlb
inc
push
sbb
scas
jge
mov
add
adc
push
push
pop
aad
bound
xchg
cmp
lods
repnz
insl
push
mov
bound
cmp
mov
push
xor
inc
lods
xor
jae
xor
shrl
mov
cmpsl
mov
mov
hlt
scas
sbb
adc
arpl
lds
or
rcrl
mov
data16
nop
lret
sub
fcoms
sbb
xchg
fwait
out
outsl
addb
rorl
lods
aas
adc
movsl
enter
mov
ja
lret
jp
mov
xchg
lods
sarl
imul
int
cltd
push
adc
pop
jp
add
sti
lock
and
adc
ficomps
test
cmc
push
adc
push
leave
movsb
movsb
data16
stc
cwtl
inc
stos
insl
das
mov
jle
mov
out
dec
sbb
jo
shlb
lcall
mov
mov
std
cmp
jp
jno
add
pop
sub
sbb
fstl
enter
adc
cmp
inc
jb
jge
icebp
jmp
mov
out
out
and
bound
orl
hlt
imul
stc
shll
scas
outsb
add
jl
inc
idiv
jmp
xorb
clc
adc
orl
leave
cld
xlat
loope
add
sarl
ret
sbb
mov
das
jp
addr16
pop
test
xlat
dec
ja
mov
mov
inc
jle
dec
inc
mov
call
mov
adc
es
sbb
sarb
jae
fldt
std
push
dec
push
xchg
mov
xchg
jo
push
mov
idivb
scas
sub
outsb
mov
lret
push
loope
rorb
cmp
mov
movsb
fistl
inc
xchg
sbb
ja
pushf
call
leave
loopne
pop
repnz
mov
bound
add
rcll
fisttps
cltd
jmp
jp
cmc
test
xor
in
xor
or
in
in
out
dec
cmp
xor
scas
icebp
pop
in
inc
inc
dec
jnp
int3
push
or
out
xchg
test
ret
dec
or
cmp
stos
inc
pop
in
cmpb
mov
adc
and
push
dec
pop
mov
cmc
jg
and
gs
std
insw
dec
aas
dec
dec
fs
cmp
and
or
push
mov
and
sbb
imul
cltd
outsb
cmpsl
fidivrs
lret
ss
hlt
adc
hlt
xchg
int
add
dec
mov
mov
add
fmull
js
cmp
push
cwtl
cmp
cs
fucomip
sbbb
mov
mov
dec
mov
jmp
mov
call
out
or
imul
push
dec
mov
mov
mov
fwait
inc
in
mov
pop
popa
mov
das
jno
lret
jl
and
lahf
in
inc
arpl
leave
and
mov
xchg
jle
icebp
ljmp
and
andb
adc
adcb
adc
cmp
pop
jno
lret
and
out
icebp
stos
out
mov
or
pop
js
rolb
aas
aad
jg
or
xor
ret
lcall
push
jne
push
pusha
in
shlb
pop
sar
adc
jne
or
cwtl
jae
jmp
sbb
xor
inc
pop
mov
mov
test
rorl
test
mov
loopne
pop
mov
mov
out
xchg
cld
push
adc
mull
movsb
xlat
xor
push
idivl
push
fbstp
lds
ljmp
enter
push
mov
xor
outsb
pushf
and
ds
popa
cmpsb
xchg
mov
and
addb
mov
aas
movsb
mov
dec
daa
cmc
mov
sbb
mov
in
test
data16
arpl
fdivrs
cmpsl
gs
adc
sub
loop
scas
clc
mov
lods
xor
dec
lcall
pop
xor
cmc
stos
xchg
repnz
fldl
add
cmp
cmpsb
hlt
adc
pop
loopne
cltd
shr
push
mov
cld
jb
and
gs
cltd
cmp
dec
pavgw
sub
fldt
pop
dec
dec
jb
hlt
add
fnsave
in
leave
mov
inc
pop
xor
clc
andb
push
mov
pop
ja
ljmp
push
xor
sub
stos
pop
mov
fcom
sub
aam
cmp
push
in
mov
cld
inc
and
pop
fcomps
dec
jge
adc
and
mov
sti
popf
sub
mov
push
push
push
pop
and
stos
insl
loope
push
mov
dec
insl
int3
out
push
das
div
dec
add
pop
imul
mov
test
sub
call
scas
aam
aaa
icebp
ljmp
mov
xchg
mov
lods
and
sub
inc
fwait
pop
sub
pushf
inc
fs
add
push
fucomp
gs
cmp
ja
pop
add
aad
lahf
pop
fidivrs
int
test
stos
stos
stos
add
imul
sbb
push
lahf
jge,pt
or
push
sahf
sub
cli
jmp
int
xor
sbbb
adc
insb
or
add
xor
dec
addr16
and
jbe
add
lock
sbb
sub
fs
mov
and
mov
in
pop
imul
jno
cmp
adc
inc
push
shlb
push
fwait
lcall
inc
or
jb
shlb
dec
push
cmp
rcpps
scas
int
pusha
out
inc
lret
loop
ret
scas
or
nop
cmp
lahf
push
ret
das
adc
push
fstps
loop
jg
popa
int3
sub
sub
xor
fwait
push
imull
addr16
outsb
and
jno
pop
cmpsb
test
sub
push
dec
sahf
sbb
int3
data16
stos
stc
enter
arpl
jecxz
shrb
add
inc
cld
pop
icebp
sub
mov
imul
xchg
sub
notl
jno
mov
pop
dec
dec
sarb
std
pop
and
mov
dec
fwait
inc
rorl
bound
jge
pop
pop
loope
enter
add
ja
pop
aad
xchg
cli
inc
loopne
popf
cmp
push
lcall
pop
cmpsl
inc
cmp
jns
andb
je
popf
sub
and
and
cwtl
adc
adc
jns
int3
test
mov
and
loope
sbb
mov
adc
xor
push
jge
sti
jo
cmp
adc
jbe,pn
insl
adc
aam
in
cld
in
xchg
sbb
xchg
pop
icebp
sarb
xchg
imul
in
xor
inc
adc
adc
in
outsb
xchg
push
jecxz
mov
xchg
cmp
ja
inc
shrb
cld
inc
lret
hlt
hlt
push
les
lret
loope
lahf
push
cmp
sti
stos
gs
mov
cmc
shll
mov
mov
outsl
dec
in
rorb
push
out
push
mov
fstpt
xchg
into
shll
inc
adc
incb
stos
sub
and
shl
das
ret
adc
push
outsb
rcrb
push
bound
movsb
mov
mov
lods
cmovnp
pop
jns
xor
add
imul
aaa
mov
jns
xlat
push
sbb
arpl
or
out
in
push
xor
pop
cmp
mov
pushf
dec
cmp
pop
and
jl
inc
std
sti
push
adcb
sbb
aam
outsl
dec
ficoml
cmc
cmp
sub
ret
popf
jg
jl
mov
push
dec
mov
inc
std
cld
mov
out
dec
in
xor
adc
or
add
add
out
mov
sbb
lods
stos
inc
inc
cwtl
popf
push
addb
testb
lcall
pop
je
or
cmpsb
mov
xchg
xchg
inc
nop
cli
inc
sbb
xchg
sub
lods
icebp
jle
imul
cltd
pop
xor
mov
xor
fsubrs
adc
mov
lods
adc
pop
cmp
stos
xchg
scas
xlat
xrelease
scas
mov
mov
or
mov
imul
push
lahf
out
mov
xchg
push
test
popa
inc
pop
insl
push
sub
jp
test
test
inc
xor
mov
das
lcall
cmpsb
and
pop
add
pop
test
mov
dec
jecxz
popa
jecxz
inc
mov
imul
lret
dec
pop
out
pop
inc
push
dec
jecxz
and
fistl
cmp
jg
cltd
xchg
mov
lods
mov
jmp
or
inc
mov
lret
sbb
loop
adc
adc
pushf
mov
add
nop
daa
mov
mov
out
xorl
cmc
push
xor
xor
movsb
adc
popf
js
pusha
imul
sub
call
and
sbb
fsubl
push
fwait
outsb
mov
and
shrb
adc
inc
dec
aad
jb
paddw
add
testb
pop
mov
les
jb
test
xor
data16
inc
xchg
mov
adc
or
sub
jle
pop
or
pop
push
repz
in
scas
addb
imul
mull
mov
fcomps
insl
notb
cmp
dec
je
nop
or
lods
aas
cmc
les
sub
mov
xchg
push
push
or
mov
leave
adc
dec
fwait
test
cld
lahf
dec
xor
mov
push
dec
imul
js
movsl
pop
jecxz
adc
dec
repnz
ficoml
dec
push
add
test
cltd
mov
leave
and
std
gs
jle
jae
lahf
nop
jg
add
xchg
jnp
jmp
ret
mov
les
mov
cmp
cltd
mov
xor
addr16
fsubl
push
fisttpl
cmp
ss
into
or
ja
imul
jae
cmpsl
fisubl
sub
decl
jp
mov
push
jb
mov
aaa
pop
push
ja
dec
insb
daa
inc
ror
andl
outsl
jae
jnp
bound
mulb
push
and
xor
mov
push
test
jl
cwtl
aas
insb
sahf
xchg
bound
mov
lcall
xor
inc
rorb
movsl
insb
sub
mov
pushl
push
cmp
mov
fmul
out
ret
stos
fcmovnb
popf
cmp
pop
jl
cmpsb
outsb
jo
fwait
out
pop
push
or
aaa
dec
insb
arpl
sub
cmpsl
push
pop
jecxz
or
sub
test
test
fistpl
and
inc
xchg
push
adc
mov
loopne
cmp
adc
jb
jae
jle
loop
ljmp
push
stc
pop
jo
jg
rcrl
sbb
cmp
es
out
add
pusha
jb
into
dec
flds
jns
pop
or
or
push
add
cmp
mov
dec
jo
aas
movsl
mov
jp
push
dec
lods
test
stos
adc
push
in
loopne
popf
lahf
jbe
popf
hlt
pop
call
xchg
pop
dec
push
or
mov
mov
jb
out
rorl
adc
mov
xor
fsub
lea
inc
stc
dec
xchg
cmc
xor
out
inc
das
push
add
push
cmp
fstpl
xor
icebp
xchg
aad
push
push
fidivs
lock
in
xorl
sbb
sub
xor
enter
cmp
punpcklbw
xor
sub
call
jne
and
out
sub
sub
push
sbb
sub
cmpsb
xor
push
xchg
popa
dec
fdivrl
inc
loopne
les
mov
cmovp
and
xor
sarl
and
sub
mov
mov
and
lods
mov
lahf
lahf
jmp
xchg
outsl
std
out
inc
xor
adc
nop
in
pop
sub
xchg
jg
xor
std
add
xor
loopne
lock
adc
or
xchg
lret
ficompl
inc
fwait
jge
xor
cmp
test
mov
jns
outsl
fwait
roll
hlt
subb
nop
push
sbb
test
out
jno
aas
jno
popa
push
movsl
popf
mov
inc
scas
inc
scas
xchg
outsb
mov
pop
leave
lods
xor
pop
sub
push
loop
add
ror
push
inc
mov
shll
data16
repz
fnstcw
fdivl
cld
jecxz
or
sub
mov
insb
imul
xchg
ror
fnstenv
sub
out
bound
xchg
push
pop
sub
cmp
in
or
cmp
or
jmp
ljmp
in
jo
loope
mov
mov
xchg
dec
jmp
and
stc
sub
pop
jle
cmp
icebp
addb
into
jle,pt
push
mov
out
dec
mov
hlt
jmp
mov
jge
out
mov
repnz
ja
jle
jno
jbe
fbld
into
mov
and
jno
enter
jb
aas
and
mov
cmpsl
jns
xor
enter
out
out
and
arpl
fcoml
ror
gs
loop
push
xor
sub
pop
ss
xor
addr16
add
cmp
popf
mov
loop
stos
aam
inc
dec
dec
cmp
cmpsl
sbb
mov
cmp
pushf
or
jmp
js
xor
adc
push
xor
dec
dec
adc
in
or
test
push
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
jmp
add
test
pop
add
push
popf
and
sbb
jnp
mov
jnp
mov
mov
add
add
ret
jnp
pop
and
sti
or
stos
rclb
sbb
cld
je
movsl
je
and
pop
cmpsb
popf
mov
in
fbstp
fmul
or
es
xor
mov
rcll
iret
insl
lahf
arpl
cmove
xchg
aad
data16
cltd
lea
dec
das
fsub
jns
icebp
cs
aas
lea
xor
pop
sti
mov
push
xor
popa
inc
add
cmpsl
mov
insb
jnp
adc
imul
or
xchg
lahf
jne
repnz
cld
mov
dec
fs
int
adc
jge
lock
ja
cmc
push
sub
sub
mull
mulb
add
out
stos
mov
jmp
cmpb
mov
jg
jmp
fsts
jmp
dec
push
add
xchg
sbb
ss
bound
dec
int3
imul
adc
out
fwait
stos
or
cmp
insb
sahf
mov
das
aas
sbb
rcr
repnz
dec
cmc
fiaddl
cmpb
push
cld
mov
je
inc
das
cmc
pusha
dec
pop
pop
sub
jecxz
outsb
popf
ljmp
or
subb
repz
pushf
push
mov
je
inc
pop
sbb
mov
das
fs
sbb
inc
cmp
push
push
sub
jne
daa
push
lds
or
scas
sub
dec
mov
stc
divb
xchg
pop
add
fisubrl
xchg
iret
mov
push
pop
adc
jnp
std
sbb
adc
mov
rol
xchg
test
push
neg
push
push
rcrl
add
pop
jmp
dec
popf
outsb
pop
and
fcom
aaa
call
sbb
add
aas
into
adc
icebp
dec
jge
mov
out
ss
loopne
ja
rorb
popa
lcall
cltd
sub
in
rorb
inc
in
aam
adc
movsl
test
loopne
test
inc
aaa
and
jl
les
pop
pop
mov
into
and
lock
cwtl
xlat
push
test
jge
jae
push
add
xor
in
sub
sub
aas
or
rcll
arpl
loopne
mov
rol
or
inc
ljmp
sub
fildll
das
loopne
sub
inc
repnz
pop
xchg
cmp
push
lret
sti
lds
mov
mov
fisttps
push
push
int
sbb
and
sub
movsl
mov
sub
fisttpll
fdivrs
ret
push
jmp
sbb
xor
subl
and
pop
cmpsb
data16
out
push
mov
arpl
mov
sbb
mov
popa
cmp
inc
out
mov
xor
cmpsl
je
daa
xchg
repz
sbb
xlat
jb
pushf
add
scas
jns
in
ds
inc
fsubs
ja
sbb
sub
ja
push
rorl
jl
push
sar
sti
pop
fdivr
or
inc
xchg
icebp
pop
sarb
es
add
inc
mov
mov
mov
pop
mov
push
mov
and
shlb
and
sub
les
jg
out
inc
push
stos
push
inc
mov
mov
push
cmp
sub
lahf
aad
enter
scas
sub
fisubrl
shl
pop
bnd
and
dec
jl
data16
rcrb
sbb
sti
add
mov
cmp
sbb
jo
dec
sti
cmp
or
xchg
pop
pushf
es
push
call
test
push
xchg
test
repz
add
in
das
cwtl
pop
xor
mov
inc
dec
lret
dec
rorb
pop
xor
std
in
out
insb
mov
dec
int
cmp
les
pop
sarb
loop
add
inc
sub
mov
test
fcmovbe
mov
fdivrp
inc
lds
add
sbb
fstps
jo
iret
adc
nop
fs
push
jno
adc
xchg
jl
leave
and
mov
into
pop
cmpsb
orb
movsb
ret
dec
pop
pushf
stc
aad
nop
push
movsl
lock
repnz
imul
sbb
lret
push
movsb
rorb
repnz
dec
xlat
cwtl
ret
out
dec
dec
es
pop
mov
and
and
inc
add
sbb
lcall
in
sub
int3
add
cmp
lds
jecxz
out
xor
cmp
xorb
movsb
lahf
int
sahf
lcall
sub
pusha
shlb
push
inc
sub
sbb
xor
enter
inc
xchg
mov
cmp
jno
jb
in
xor
les
repnz
cmp
mov
imul
test
in
sbb
nop
fistpl
fwait
inc
sub
push
mov
inc
inc
fstpl
mov
pop
sub
pop
mov
sbb
mov
pushf
sbb
mov
cwtl
sub
sbb
jecxz
mov
mov
or
lods
shrl
pop
sbb
mov
lds
or
lea
push
jmp
lret
out
or
es
pop
lcall
sti
jb
jl
inc
adc
add
adc
repnz
jne
cmp
addr16
mov
loopne
mov
push
mov
mov
jb
je
mov
jne
xor
jp
jmp
clc
mov
jnp
sbb
icebp
jge
and
fwait
fmuls
rclb
stos
sub
sub
xchg
scas
inc
das
mov
add
es
mov
nop
xchg
pop
and
dec
addr16
out
addr16
outsw
mov
add
push
pop
mov
bound
fstl
jg
mov
and
and
fidivl
pop
pop
faddl
out
or
call
mov
pop
stos
sarl
shlb
ret
insb
call
xor
sbb
enter
fistps
xor
and
pop
xlat
out
outsb
jmp
inc
xchg
xor
push
test
aaa
imul
pop
in
daa
xchg
jb
loop
jo
cmpsb
jb
push
or
in
sarb
cmp
inc
inc
cli
notb
sub
loop
int
dec
popa
pop
lock
mov
pop
xlat
movsl
leave
int3
fdivs
mov
push
inc
adc
mov
xchg
gs
das
adc
cli
clc
aas
push
add
lods
add
pop
divl
jns
push
mov
jle
and
idivb
sub
dec
inc
push
movsl
jb
xchg
sub
dec
das
mov
cmp
jnp
imul
sbb
sub
out
mov
insb
pusha
xor
fwait
and
push
aaa
dec
cmpl
outsl
xor
bound
std
repz
and
cmpsb
ds
xchg
inc
sub
jb
stc
mov
xlat
xor
data16
xchg
enter
fidivs
cmp
repnz
or
xor
rclb
cmp
inc
dec
sub
mov
mov
adc
mov
sbb
sti
mov
in
ds
inc
jecxz
pop
push
daa
sub
mov
mov
xchg
mov
pop
mov
xchg
jo
insb
sbb
xchg
inc
std
mov
pop
bound
aam
push
mov
xor
xchg
loop
sbb
mov
cmpsb
orl
pop
pushf
movsl
mov
pop
mov
inc
popa
roll
jp
enter
and
aas
mov
pushf
sahf
loope
push
insl
dec
jbe
jp
jo
pop
das
pop
leave
xchg
mov
pop
inc
ja
sub
je
and
std
pop
adc
mov
movsb
mov
jle
decl
jecxz
xor
push
cmpsb
faddl
int
jle
shrb
popa
push
adc
add
out
pop
or
mov
fldenv
push
inc
shrl
movb
daa
into
xor
xor
push
lcall
jecxz
xchg
mov
push
or
inc
mov
xor
dec
loopne
lods
mov
sub
xor
sub
loop
push
lret
mov
cmpsl
or
adc
mov
inc
sub
xor
gs
outsb
and
lods
pushf
jb
test
sbb
adc
pop
sub
pop
mov
stc
push
push
cmc
aas
cmp
add
imul
rcrb
fs
mov
enter
dec
pushf
push
dec
fistpl
insb
or
mov
xchg
xchg
ljmp
fiaddl
jae
pop
aas
movsb
sti
es
stos
or
in
sub
xchg
fsubr
mov
hlt
js
lds
mov
xchg
dec
jae,pn
shr
xor
inc
add
push
imul
push
in
push
jbe
inc
movsb
imul
pop
sub
mov
mov
lahf
pop
lahf
mov
inc
mov
pop
add
push
adc
movsl
dec
push
sbb
pop
lret
or
sub
and
je
xor
dec
loop
mov
adc
cld
jge
xchg
xor
shrl
mov
dec
nop
push
addr16
shlb
xchg
aaa
cld
test
lock
mov
mov
dec
fiadds
push
jo
mov
push
mov
push
sbb
mov
cld
or
xchg
scas
enter
xor
mov
nop
push
add
xchg
mov
adc
movsl
neg
or
sub
sub
in
mov
cmc
sbb
xchg
push
mov
inc
mov
sub
mov
test
cmp
push
dec
add
adc
lea
add
sarl
movsl
popf
mov
out
ret
or
int
and
mov
mov
fs
mul
rolb
js
lods
movsb
daa
test
jmp
hlt
stc
pop
add
jg
add
aad
and
or
roll
es
pop
aam
aam
lret
push
push
xchg
or
fiaddl
jg
jns
fwait
push
pop
out
in
xor
in
fdivrl
shrb
cmp
movsb
fidivrl
jnp
in
inc
ret
out
add
sahf
cli
and
nop
pop
mov
jp
cmp
adc
inc
das
dec
pop
loope
shr
dec
repnz
mov
mov
and
in
cmp
scas
jae
add
mov
and
sub
mov
fldt
xchg
daa
add
dec
pop
add
aad
sub
sub
es
aaa
out
sti
sahf
cmc
mov
mov
ficoml
pop
jecxz,pn
popf
pop
es
fwait
adc
dec
push
add
outsl
ret
test
daa
call
repz
cmpsb
test
add
dec
stc
test
add
fsubrs
lds
pop
scas
stos
fsubr
inc
lods
ja
icebp
mov
ret
imul
xor
call
pop
aas
in
xlat
xor
add
fimull
sbb
push
inc
jnp
int
cmc
mov
xchg
loopne
lds
dec
ret
scas
dec
jge
jae
xor
fs
cmp
adc
faddp
push
ror
adc
out
push
sub
fldcw
cmp
mov
jnp
out
and
jg
mov
and
inc
leave
sbb
neg
push
push
add
inc
in
icebp
pop
add
clc
imul
dec
pop
add
pushf
inc
rcl
imul
mov
clc
jnp
xchg
push
push
xchg
sbb
cmpsl
mov
shrb
pop
adc
mov
push
xchg
sbb
mov
test
call
pop
cli
cmpsl
adc
inc
fld
shll
jbe
in
fimull
insb
je
enter
lahf
clc
pushf
ja
cmp
sub
pop
pop
ss
jg
insl
push
sbb
and
mov
fisubs
xor
cmp
cs
das
fcmovu
push
sbb
fsubr
jns
mov
pushf
xor
movsb
icebp
push
xor
adc
jne
mov
lret
pop
add
jle
jo
fwait
inc
call
outsl
add
hlt
xchg
xchg
aas
sti
or
in
lods
test
pop
jl
sbb
stos
not
loopne
pop
jg
mov
inc
push
jnp
rcrb
xor
and
or
adcb
cmp
mov
in
mov
cmp
jne
jecxz
pop
sbb
push
inc
or
cltd
dec
inc
add
or
out
add
sub
mov
jg
mov
cwtl
fistps
push
cwtl
fdiv
jl
and
pushf
dec
imul
fmull
out
ljmp
ss
rclb
out
cld
xor
mov
sub
xchg
jge
fwait
mov
sbb
mov
push
push
xor
cmp
push
ja
lret
ds
in
aaa
cmp
adc
aas
mov
push
sbbb
mov
lock
xor
cld
pop
sbbl
inc
add
aas
sbb
in
in
push
xchg
mov
pop
xchg
loopne
int
out
cmpsl
loope
xorl
fistl
cmp
cli
add
fwait
lcall
inc
shll
lahf
mov
leave
outsb
xchg
and
lods
loop
je
fsts
stos
inc
fmull
jp
ljmp
sub
fisubs
jbe
mov
addl
jl
addr16
add
and
xlat
xchg
dec
sti
in
jg
test
mov
insl
aaa
faddp
xchg
lcall
push
mov
shrb
mov
arpl
fs
push
pop
sub
fmuls
lds
fmulp
sub
lret
lcall
jp
pop
sub
ret
xor
js
shlb
dec
scas
mov
push
les
jecxz
aad
lods
adc
in
fs
pop
shlb
xor
add
xchg
scas
mov
int3
jae
mov
add
hlt
inc
imul
xchg
pop
addr16
lcall
dec
aas
aad
in
or
aam
icebp
dec
addr16
adc
cltd
cmpsb
or
cld
data16
insl
scas
fmuls
and
add
sahf
and
movsb
in
aad
das
ss
jno
in
stos
dec
clc
xor
lret
xor
cmc
js
pop
or
pop
psubd
inc
lea
xlat
cmp
cs
sub
stos
xchg
and
imul
pushl
lret
xchg
stos
roll
adc
inc
pop
sbb
ret
mov
movsb
inc
ret
outsb
test
sub
pop
loope
rcrb
stc
jo
adc
ret
xchg
loop
cmp
sbb
out
lds
sbb
and
adc
test
insb
insb
pop
fwait
dec
add
fs
push
lret
mov
pop
aam
pop
test
cltd
inc
mov
scas
push
mov
mov
fwait
mov
mov
pop
shrl
fcmovu
repnz
cwtl
inc
xchg
mov
fucomi
lods
notl
xor
push
stos
inc
push
pop
decb
dec
test
popf
imul
aaa
cwtl
inc
or
rcrb
xor
stos
addl
inc
lahf
sbb
cmpb
repz
int
in
loopne
cmp
int3
mov
pop
insb
pushl
iret
je
dec
push
jne
fisubl
add
fwait
xor
xchg
fstl
mov
pusha
adc
call
mov
mov
mov
jns
shll
xchg
cmp
cmpsl
les
inc
lahf
mov
jo
push
push
jg
leave
jle
nop
xchg
xor
pop
xlat
jb
rcrb
xchg
mov
xchg
cwtl
js
lds
ret
push
das
dec
mulb
pop
inc
addr16
mov
and
outsb
scas
mov
sbb
fdivr
lret
out
push
mov
mov
sbb
scas
sub
adc
push
jmp
int
cmp
xchg
mov
jmp
jne
mov
or
ret
mov
pop
scas
mov
loop
dec
popa
cmpsb
les
inc
divb
aad
xchg
push
add
cwtl
ds
or
add
enter
out
loopne
adc
pop
mov
test
scas
lahf
in
adcl
daa
jge
push
adc
mov
mov
adc
or
mov
out
or
xlat
addr16
xchg
adc
add
cmp
cmp
loope
xor
sbb
fsts
ret
cli
neg
clc
lret
fisubl
or
dec
test
aas
cmp
fucomip
out
xchg
lret
hlt
fidivrs
fdiv
mov
into
js
imul
sub
lods
lahf
cmp
xor
je
sbb
push
dec
add
rcll
outsb
movl
pop
mov
shrb
mov
pop
mov
jno
and
lcall
outsb
imul
or
ret
repnz
test
test
addr16
enter
loope
xchg
lret
add
cltd
pop
bound
popf
enter
cltd
sahf
mov
jbe
xlat
jge
sahf
and
and
sbb
popa
fs
es
push
outsb
sbb
leave
cmpb
mov
dec
pop
xchg
xor
sub
inc
fcomps
mov
popf
mov
in
lods
mov
movsl
dec
add
into
lds
testb
cmc
jg
outsb
and
enter
dec
sub
out
xlat
test
jmp
std
hlt
cs
and
xchg
iret
cld
dec
or
out
lcall
jle
in
and
mov
nop
fsubs
rcrl
int3
ds
loop
xchg
adc
inc
fdiv
mov
data16
cmp
imul
pop
adc
cmp
adc
addr16
jge
shrl
add
xor
mov
lods
test
call
dec
nop
jno
pop
imul
into
movsb
rcll
push
in
pop
dec
ja
sub
pop
into
lock
xor
aad
xchg
lret
or
mov
add
jmp
clc
jb
push
test
stos
hlt
or
out
cmp
dec
lods
lahf
adc
test
sarl
mov
les
jmp
ret
shlb
fstpt
cmp
in
adc
push
jl
loope
repz
cld
xchg
outsb
insb
pop
jge
jo
leave
and
repz
les
mov
rorb
inc
ret
cmc
out
fwait
aas
mov
and
cs
mov
dec
or
push
shll
inc
sbb
jge
xchg
cmp
mov
mov
sbb
sbb
sub
sti
push
jmp
setb
mov
data16
jp
popa
inc
movsl
jecxz
add
rcrb
or
gs
jo
addr16
mov
jmp
idivl
cli
push
add
lret
ljmp
fidivrl
arpl
adc
imul
mov
inc
outsl
js
fnstenv
sub
pusha
sarl
sahf
mov
out
xchg
mov
inc
xorl
add
popl
repz
adc
xor
in
stos
cmp
jno
insl
pop
cmpsl
fldt
pushf
or
call
sbb
scas
leave
xor
sbb
addr16
lods
nop
mov
out
jne
jge
jnp
dec
fstpt
cmpsl
xchg
fdivs
out
push
cmp
adc
sub
add
std
mov
mov
ret
stos
stos
inc
mov
or
test
filds
icebp
xchg
ljmp
decl
and
pop
jnp
das
mov
arpl
xor
lret
mov
fistl
icebp
push
fdivr
lock
cmp
mov
in
leave
sbb
in
inc
loopne
mov
mov
add
pop
cltd
fbstp
cmp
lret
xor
popf
js
mov
js
bnd
ret
lock
mov
aas
adc
sub
call
fcompl
xor
xchg
jne
mov
pusha
mov
cmpsl
xor
shl
jno
push
and
pop
movsl
icebp
clc
or
and
sub
mov
lds
sbb
or
or
sub
movsl
push
lods
mov
jecxz
pop
lahf
insb
cmp
gs
xlat
adc
adc
out
inc
inc
fwait
jo
fwait
popa
jns
rcrb
std
arpl
idivl
and
addr16
adc
sub
sub
imul
push
fwait
add
inc
jp
mov
xorl
pop
push
test
mov
push
dec
gs
jge
stc
clc
test
jp
pop
dec
lea
dec
dec
pop
xchg
sti
jo
loop
fimuls
xchg
jb
bound
jg
loope
addr16
pcmpeqb
and
mov
sbb
jae
sbb
mov
pop
aas
incb
xchg
imul
push
dec
cmpsb
aas
pop
inc
ljmp
sub
sbb
arpl
lods
aas
jmp
jbe
push
dec
sbb
cs
shlb
notb
xlat
mov
mulb
adc
mov
fdivrp
and
mov
sbb
add
sub
push
xchg
pop
mov
jns
mov
fdivl
mov
adc
inc
or
jge
mov
or
sbb
ds
lock
xchg
mov
es
inc
adc
add
xchg
dec
fcmove
lods
pop
mov
sub
xchg
jns
aaa
jge
js
adc
ljmp
add
jo
pop
and
cmp
cld
call
nop
or
pop
adc
aaa
mov
fcmovnbe
lea
mov
add
loopne
cwtl
sub
cmp
fwait
das
in
lea
fidivrl
xchg
add
and
xor
xor
pop
cs
xchg
inc
add
xor
arpl
and
jge
and
loope
icebp
gs
sub
fmuls
inc
in
aam
sbb
dec
lds
sbb
or
jge
add
push
xchg
icebp
ds
fistps
pop
sbb
mov
mov
xor
dec
and
into
bnd
stos
mov
insb
jge
mov
shl
mov
cmpsb
test
cmp
push
in
nop
fsubrs
pop
or
pop
andb
push
or
mov
addr16
movsb
and
mov
cltd
mov
xchg
sub
mov
movsl
enter
and
clc
fdivrp
cli
orl
or
jecxz
sub
xchg
repnz
push
cli
xor
dec
xchg
jne
daa
push
sbb
or
push
pop
push
outsl
xchg
adc
cmp
pop
mov
sub
mov
sbb
movl
pop
mov
cli
ss
xchg
int3
out
pushf
xchg
add
pop
xchg
imul
push
mov
cwtl
in
push
test
jb
adc
xchg
mov
jl
mov
shlb
data16
jl
jnp
xor
mov
push
clc
jo
jnp
lds
mov
adc
bound
in
xor
rcr
cmp
lods
lock
into
sbb
push
dec
leave
insl
out
dec
test
rcll
out
stos
inc
cwtl
and
mov
sub
leave
xor
es
lock
mov
and
int3
cmp
sub
inc
ficoms
cmp
xor
xchg
xor
jle
xchg
inc
push
outsb
andb
movsb
fdivrl
jnp
jle
pop
jnp
fidivl
aad
lret
jge
in
push
scas
push
mov
pop
push
fnsave
outsb
xchg
leave
addr16
daa
sbbb
inc
pop
pop
mov
adc
frstor
xor
das
popa
cmc
mov
jns
rolb
leave
in
xor
pop
and
movsb
es
cli
cmpb
xor
outsl
sbb
xchg
lret
test
add
popl
cmp
stos
out
adc
xor
iret
mov
push
dec
or
dec
xchg
lahf
inc
popa
inc
cmp
add
pop
mov
adc
imul
mov
push
jge
out
int3
add
and
outsb
push
fidivrl
aam
adcl
in
notl
aad
ss
xchg
inc
arpl
les
or
push
sarb
cltd
mov
call
adc
mov
and
lret
cmp
arpl
inc
jmp
dec
pushf
repnz
movsl
xchg
mov
jl
xchg
dec
cmp
cmp
test
inc
mov
and
push
dec
nop
push
sub
icebp
fistpl
dec
jo
mov
push
leave
hlt
inc
jne
test
mov
or
push
dec
mov
dec
clc
mov
sbb
mov
aam
stc
repnz
pushf
push
jg
decb
data16
add
push
jp
out
xchg
imul
in
lahf
out
cmp
mov
pop
icebp
aas
jle
scas
mov
mov
xchg
orl
cltd
clc
cmp
mov
leave
push
cmp
xor
outsl
jecxz
or
test
pop
cmp
xor
daa
add
mov
sahf
push
fcmovb
jo
rorb
sbb
imul
filds
and
outsl
cmp
mov
inc
js
dec
inc
xchg
mov
xchg
rcll
ljmp
xchg
shll
and
pop
jo
lret
and
cltd
rorb
test
ret
ja
rcll
sbb
les
adc
arpl
pop
aad
lret
xchg
adc
mov
lcall
imulb
arpl
mov
loopne
mov
mov
enter
gs
push
xorb
mov
in
dec
sbbb
inc
movsl
sub
repz
sar
mov
or
mov
loopne
paddq
pop
stos
imul
enter
daa
cmpsb
ret
loope
test
add
fbstp
push
sbbl
mov
mov
std
cmpl
or
inc
sbb
cmpsb
popf
lahf
add
xchg
scas
stos
lcall
std
xor
stos
inc
jo
or
push
push
xorl
les
and
xchg
mov
fistps
jge
sbb
gs
nop
sub
ficoml
or
cmc
inc
hlt
push
sbb
cmp
dec
mov
dec
lahf
add
pushf
lods
add
jle
hlt
sub
mov
push
inc
jecxz
and
pop
push
lret
or
jl
xrstor
jae
std
dec
xchg
inc
mov
mov
into
int3
push
lods
fisttpll
mov
mov
pop
xchg
cld
sbb
test
popf
jp
pop
pop
out
dec
push
pushf
out
pop
fimuls
dec
leave
or
in
dec
stos
fdivrl
xchg
mov
je
push
cmp
dec
dec
mov
fisttpll
addr16
loopne
pop
int
adc
lods
loopw
pop
mov
xorl
stc
cli
lea
mov
repnz
jbe
fnstsw
adc
mov
dec
sbb
out
sbb
sbb
cli
jmp
add
pop
xchg
pop
jnp
push
jecxz
jnp
add
inc
aaa
test
push
rcrl
jge
orb
jne
mov
cmp
inc
lcall
sub
push
pop
lar
movsb
lea
or
sbb
iret
ret
cmc
ss
push
ljmp
mov
fwait
push
stos
in
dec
lods
and
aad
sahf
mov
dec
mov
cld
jl
mov
mov
mov
mov
mov
add
fistpll
jne
adc
inc
outsb
push
mov
mov
jle
jecxz
jmp
mov
lods
adcl
ret
lret
loopne
mov
std
out
adc
inc
out
sbb
add
bound
cmpsb
dec
test
adc
or
lock
test
inc
or
daa
jmp
sub
push
jecxz
sbb
fsts
daa
decb
pop
leave
enter
mov
inc
and
cmpsb
fistps
movsl
push
inc
lahf
stc
and
xchg
movsb
in
jl
stos
pop
pop
mov
les
test
loope
lahf
or
mov
popf
and
jo
adc
sub
rolb
adc
in
pop
and
cltd
dec
scas
movq
and
scas
jmp
int
ret
outsb
mov
mov
lock
movsl
in
outsl
xchg
loop
orl
mov
leave
adc
bound
mov
jl
adc
push
dec
outsb
in
fisubl
add
xchg
lds
cmp
ds
adc
dec
inc
cli
ss
lods
adc
ds
xchg
push
out
sub
inc
and
push
inc
dec
shll
jnp
cmp
push
inc
dec
stos
cs
push
push
rcll
hlt
push
hlt
mov
cmpxchg
aas
cmp
jne
adc
adc
pop
dec
inc
lret
cmp
sub
xchg
mov
repz
pop
ljmp
push
mov
das
lret
xlat
and
cmpsl
sarb
or
xor
jno
push
and
mov
push
cli
add
sub
lea
out
jmp
jp
loope
push
inc
cs
fadd
andl
loope
cmp
insl
mov
fstpt
lret
pushf
pop
mov
enter
repz
out
mov
xchg
jmp
or
aas
push
jae
xchg
pop
or
push
insb
mov
inc
xor
pushf
jmp
test
inc
push
mov
adc
sbb
add
lcall
lret
xchg
addr16
jo
cmp
mov
pop
repz
push
aam
adc
repnz
lock
arpl
pop
xor
fwait
xchg
lret
sub
in
es
scas
inc
dec
movsl
loope
mov
fcoml
inc
ret
add
popa
cmpsb
fsts
and
popa
fisttpl
xchg
sbb
xor
dec
je
xchg
push
popf
xchg
adc
xchg
sahf
daa
xchg
movsb
mov
repz
in
data16
push
sbb
pushf
sbb
fcomi
outsb
jecxz
jns
orl
dec
pop
ret
rolb
mov
js
call
adc
fcompl
lds
jnp
inc
ljmp
mov
sub
push
fcompl
cs
pop
push
out
sub
and
lcall
cmp
aaa
syscall
negb
mov
mov
dec
movsb
push
mov
xor
test
or
mov
mov
mov
aad
mov
imul
test
enter
and
in
and
jg
rcrb
jecxz
dec
pop
mov
cmp
enter
push
cmc
dec
cmp
jnp
mov
mov
in
pop
push
adc
mov
push
push
clc
sti
or
add
test
lds
cmpsl
dec
mov
call
shll
nop
mov
xor
jl
add
mov
roll
cmp
nop
inc
test
sub
rorl
add
adc
adc
negb
push
mov
dec
push
jae
pop
jne
mov
fabs
jmp
mov
movsb
pushf
stos
fnstcw
mov
xor
mov
inc
push
in
mov
push
gs
out
je
inc
insl
xlat
daa
leave
cmp
movsl
push
imul
xchg
mov
mov
inc
je
mul
inc
fidivs
push
pop
adc
xchg
pop
and
mov
aad
lahf
xchg
arpl
and
push
leave
sbb
push
cmp
pop
sbb
xchg
push
push
inc
int3
push
jmp
and
add
xor
insb
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
sbbl
xor
ret
push
mov
sub
movl
adcl
push
sbbl
movl
addl
mov
subl
push
sub
mov
xor
adcl
push
mov
subl
add
subl
mov
mov
test
je
andl
mov
inc
mov
cmpl
jl
jmp
push
push
call
cmpl
jb
mov
sbbl
mov
mov
and
mov
xor
add
movzbl
sub
mov
mov
sub
mov
xor
orl
add
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
mov
dec
mov
jmp
mov
xor
sub
add
mov
sbb
mov
sub
xor
movl
add
mov
sub
xorl
lea
orl
xor
orl
xor
movl
cmp
je
mov
addl
xor
sbbl
add
cmp
jne
pushl
call
andl
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
mov
mov
sbbl
xor
andl
add
cmp
movl
je
xorl
pushl
pushl
xorl
call
mov
mov
sub
mov
sbbl
xor
sbbl
add
movl
cmp
movl
je
movl
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
decl
mov
addl
add
movl
cmpl
je
cmpl
jl
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
addl
add
or
mov
sbb
mov
mov
add
movl
mov
jmp
add
mov
mov
add
mov
mov
and
mov
mov
xor
subl
add
cmp
movl
je
jmp
mov
and
mov
xor
decl
add
movl
cmp
mov
movl
je
andl
mov
xor
add
movl
cmp
movl
je
lea
xorl
push
pushl
sbbl
pushl
call
or
mov
sbb
mov
xorl
xor
sbbl
add
movl
cmp
movl
je
movzwl
mov
movzwl
mov
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
jmp
fbstp
cmp
cmpsl
fnstsw
mov
sbb
sahf
jnp
in
mov
sti
gs
sahf
stos
ret
adc
sbb
daa
xor
test
mov
fcoms
jbe
xor
neg
adc
and
fcoms
mov
cltd
div
push
outsl
mov
in
loopne
addb
jg
andb
mov
pop
mov
pop
cmp
xchg
lea
shlb
sbb
insb
je
mov
xchg
mov
lock
rorb
and
inc
hlt
mov
xchg
inc
icebp
fimull
xchg
out
add
shlb
sub
sbb
les
sbb
cmp
mov
sbb
add
stos
and
addl
addr16
or
pop
ret
mov
mov
mov
sbb
jmp
and
iret
push
aaa
push
and
jmp
xor
xchg
add
pop
or
cmp
inc
jb
mov
sub
mov
rorb
mov
in
push
roll
and
jne
loope
inc
sub
sahf
xchg
push
ja
outsl
push
hlt
cmp
ret
ss
outsl
test
aas
push
pop
inc
add
mov
jnp
push
mov
bound
xchg
pop
and
outsl
loopne
int
jns
inc
call
cmp
rolb
mov
inc
dec
ljmp
lret
jge
mov
push
mov
lds
movsl
or
or
call
out
test
cwtl
mov
les
andb
jecxz
add
and
jb
jno
push
cmpl
dec
dec
cmpl
pop
sar
lock
int
and
mov
roll
xor
push
mov
add
cmpsb
jp
movsb
pop
mov
lock
xchg
lret
jge
sarl
adc
pushf
fwait
jbe
fnstenv
mov
shlb
dec
mov
push
xor
pusha
mov
sarl
data16
mov
mov
xor
divl
xchg
loope
dec
ss
sub
xor
cmp
or
in
loopne
mov
add
pop
add
cmp
enter
adc
or
mov
mov
add
lret
lcall
mov
aam
pop
sbb
xor
push
idivb
in
sbb
rclb
fprem1
jb
sub
mov
mov
mov
scas
mov
add
repz
jmp
out
jmp
sahf
mov
bound
cmp
rcll
dec
cmp
dec
test
mov
add
add
out
cmpsb
xor
xor
hlt
cld
pop
push
call
sbb
xchg
cmp
out
pop
and
stos
jecxz
inc
call
test
pusha
cmp
aas
sub
enter
pop
loope
or
jmp
cwtl
gs
mov
cltd
mov
jl
icebp
cmpsb
jns
imul
cmp
dec
sbbl
popa
pushf
cmp
rclb
mov
inc
mov
cwtl
sub
repz
pop
sub
cmpsb
sahf
loopne
scas
add
shll
idivb
adc
inc
test
add
push
sahf
jnp
fbld
xor
popa
lds
cmp
adc
sub
push
jae
movsb
push
lret
sbb
lea
push
shlb
inc
fistl
testb
and
insb
and
fdivs
insb
cltd
mov
mov
lea
inc
pushf
xchg
cmp
mov
xor
daa
scas
dec
jno
cli
repnz
ja
mov
popf
or
pushf
adc
movsl
pop
mov
sbb
in
cwtl
or
in
cmp
test
mov
push
dec
stos
das
mov
add
cmpl
data16
cmp
mov
scas
es
or
sti
popa
pop
inc
xor
jge
test
pushf
flds
cmp
ficomps
inc
mov
ds
mov
in
orb
cmpsl
jecxz
and
pop
out
adc
inc
in
jns
xchg
fimull
out
cwtl
pop
cmpsb
in
sahf
adc
nop
sub
insb
jg
ret
sbb
lahf
aad
inc
dec
shrl
fnsave
je
fstpl
cld
fldcw
or
setnp
sti
loop
bndldx
rolb
rorl
jae
mov
sbb
push
inc
shlb
cmp
aam
xchg
jae
cmp
fsts
in
outsl
pop
cwtl
stos
mov
and
sbb
xor
hlt
push
in
cmpsb
sub
add
jecxz
jnp
clc
mov
andl
sub
jp
or
out
ja
push
sti
jge
jb
jnp
mov
jb
std
cli
mov
imul
mov
push
iret
jbe
add
sub
mov
push
lock
xchg
ss
lods
shlb
lret
fisttpl
mov
ss
cmpsb
imul
iret
or
stos
dec
adc
xchg
subb
shl
sbb
push
adcb
sar
add
push
cli
sub
fisubrs
cmp
sub
add
dec
notl
xchg
sbbl
jo
push
sbb
in
lea
orb
sbb
sub
out
fstpt
mov
stos
pop
xor
dec
mov
mov
dec
sub
and
mov
xor
adc
sub
addr16
mov
jne
scas
pushf
or
jne
jo
mov
inc
mov
mov
push
sar
fisubl
sbb
das
les
ds
mov
mov
test
push
in
push
mov
subb
scas
mov
loopne
dec
data16
enter
movsb
mov
add
mov
push
ret
fldcw
lret
or
loop
cltd
push
push
push
lcall
pop
push
dec
jbe
ja
in
divl
cmp
fsts
xor
xchg
std
mov
enter
mov
jno
ret
pop
bound
xor
adc
call
jae
sub
and
and
or
std
aas
xor
fldl
mov
lahf
mov
lea
jp
scas
cli
inc
out
cmp
cmp
scas
xchg
pop
push
gs
ret
mov
inc
cmp
insl
mov
pop
fiadds
lea
xor
vcvtps2dq
mov
cmpsl
ja
lret
cmc
inc
mulb
jns
je
test
cmpsb
sub
jl
rep
out
inc
dec
pop
lret
pusha
pop
aas
sub
divb
adc
add
adc
push
lret
bound
pop
cli
rol
adcb
mov
pop
adc
sti
pushf
cmpsl
push
dec
add
inc
mov
jns
fs
mov
imul
iret
int
pop
cmp
xor
pop
popa
jge
out
jle
lock
push
dec
aam
sarl
jbe
aaa
add
enter
jmp
jmp
inc
je
out
and
inc
mov
jl
gs
and
sar
test
pushf
jbe
mov
inc
lret
das
cmp
push
nop
in
movsb
call
dec
fidivrl
and
xor
movsl
inc
mov
dec
test
xor
cmpsb
inc
cli
stos
jb
push
xlat
stos
xor
clc
pusha
lret
js
cmp
divl
fcmovnb
cmpsb
jae
sub
jp
cmp
mov
sahf
dec
mov
in
inc
movsb
dec
jnp
fldl
mov
adc
or
xor
ficompl
mov
fs
mov
mov
sub
cmp
data16
or
xchg
mov
or
js
loope
pop
cli
push
adc
sti
adc
cld
sbb
loop
shll
arpl
mov
pop
lcall
push
scas
inc
xchg
and
icebp
mov
inc
addb
push
jns
mov
out
fisttpll
int3
add
pop
adc
jae
popa
xlat
cmp
jae
fwait
out
in
sqrtps
mov
es
repz
mov
loope
rcrb
sub
addb
int3
repnz
pop
inc
ja
mov
xchg
cmp
adc
jle
stos
ficompl
fldenv
inc
dec
or
push
adc
out
stos
and
xchg
dec
fisttpll
inc
xchg
test
xchg
and
pop
test
xchg
icebp
js
mov
jecxz
stos
cs
pop
inc
outsb
inc
insb
add
outsb
add
jbe
push
rorl
cmp
xor
pop
add
fsubrl
pop
fdivp
fsts
std
mov
push
lods
pushf
fs
mov
ljmp
and
or
mov
sbb
sbb
pop
mov
out
add
pop
push
jmp
jge
js
lcall
mov
mov
push
mov
xor
sbb
cmp
push
test
fsubl
inc
push
sbb
jns
insb
and
pop
ljmp
daa
cmp
loopne
ret
mov
test
iret
aaa
inc
cmp
or
sar
inc
mov
sbb
lahf
jp
loop
push
jne
sbb
mov
add
adc
add
dec
sub
xchg
jbe
scas
lock
popf
pop
mov
mov
insl
lret
loopne
out
nop
sub
test
shr
cwtl
jge
xchg
icebp
call
mov
cmp
ds
enter
fldt
pop
cld
js
mov
movsl
adc
mov
pop
push
scas
push
ljmp
loop
pushf
stc
fisttpl
imul
jge
adc
das
jae
out
jae
test
mov
dec
add
daa
ffree
inc
xchg
loope
pushf
stos
arpl
xorl
aas
sub
gs
ficomps
push
push
sub
aas
pop
in
cmp
mulb
aas
xchg
mov
outsb
lret
shll
mov
sub
mov
xorl
shll
mov
mov
stc
inc
jmp
lea
xchg
popa
and
cmp
lock
jecxz
jnp
call
ljmp
mov
out
jp
in
pop
mov
ds
jmp
xchg
test
mov
push
test
dec
loope
mov
cmpsb
adc
mov
mov
cmpsl
or
dec
enter
mov
lods
aad
pop
ds
sbb
dec
push
dec
ret
xor
pusha
in
cwtl
sbb
push
icebp
cmpsl
push
cmp
pusha
sbb
dec
out
incl
mov
sbb
inc
push
lret
mov
fs
aaa
adc
and
or
jp
dec
push
in
pushf
dec
insb
mov
les
addb
jno
hlt
push
cmp
scas
push
sub
xor
nop
jns
insb
pop
mov
sub
sub
popa
mov
add
int3
mov
iret
rorb
outsl
mov
je
xchg
push
xchg
nop
xor
xor
push
pop
mov
mov
stos
mov
dec
sti
dec
and
stos
dec
cmc
int3
jmp
lahf
test
mov
xchg
lods
xor
leave
roll
call
inc
test
das
faddl
or
aaa
dec
les
out
lea
xor
push
mov
sbb
pop
fdivr
jmp
mov
repnz
decl
imul
dec
fisttpl
cmc
dec
scas
xchg
pop
in
imul
cltd
xchg
stos
dec
and
cld
add
clc
fucompp
repz
dec
stc
ret
insb
popa
jl
shr
cmp
cmp
jnp
pusha
pop
mov
sbb
jecxz
lcall
insl
fidivl
lret
pusha
jae
je
dec
or
sarl
pop
mov
xchg
call
scas
inc
cltd
test
cmpsl
out
cmp
aad
mov
sahf
pop
fwait
iret
dec
loop
jg
into
push
mov
push
mov
inc
fildl
inc
pop
add
mov
or
jne
xor
mov
arpl
jmp
inc
pop
or
fdiv
imul
aad
jmp
call
cli
cmp
add
inc
aam
loop
cmp
xchg
mov
ja
pop
ljmp
cmp
xchg
std
movsb
xor
test
or
mov
bound
inc
lods
xchg
or
jb
in
inc
and
pop
scas
cmp
pop
push
hlt
push
mov
dec
enter
xchg
mov
push
add
mulb
sub
jo
arpl
cmp
fwait
push
push
jae
mov
xchg
iret
or
sbb
push
inc
out
push
cmc
mov
lcall
xchg
mov
cmp
jge
lods
adc
fsub
lret
or
cmp
fmull
lods
adc
mov
sbb
imul
jo
mov
fcomip
lret
scas
das
cld
sbbl
into
fdivr
sbb
or
inc
jno
lret
add
xor
cmpsb
add
adc
je
popf
jns
int
in
or
mov
jl
rorl
ss
mov
lea
femms
mov
sub
xchg
repnz
aad
movsb
jmp
orl
sub
and
sub
lods
ljmp
dec
push
ret
outsb
cmp
sub
lcall
or
push
inc
lods
or
jns
add
lock
clc
int3
cmp
inc
jmp
mov
cmp
or
repz
lock
cs
mov
gs
dec
mov
ret
mov
pop
test
stc
filds
ljmp
ret
mov
inc
es
sahf
or
call
popa
sbb
lods
push
xchg
mov
paddw
jle
fistps
and
loope
outsl
cmp
aad
dec
dec
dec
out
push
loope
sbb
mov
out
les
push
pop
add
mov
jno
icebp
adc
stos
sbb
jmp
enter
pop
lods
mov
mov
add
nop
repnz
mov
dec
andb
cmp
gs
add
add
xchg
scas
push
fidivl
jo
sub
mov
sti
xor
adc
repnz
ss
jecxz
xor
pop
mov
cmpsl
xchg
cs
jl
ret
notl
xor
punpcklbw
es
pop
adc
cwtl
pop
cmp
jge
in
jge
out
ds
or
lcall
clc
xchg
jl
mov
mov
dec
cltd
cmc
add
or
cmp
gs
notb
insl
dec
dec
xor
outsl
push
pushf
popf
cltd
aaa
movsb
inc
mov
dec
in
rcrl
lock
sarb
outsb
inc
std
adc
mov
dec
dec
ss
and
and
lods
out
rorl
stos
dec
pop
mov
mov
xchg
push
xchg
jo
es
cmp
testb
jecxz
sub
and
je
cmp
ds
cld
adc
sahf
fsubl
insb
mov
push
in
jecxz
jo
cmp
pop
out
pop
popf
std
outsl
sbb
stos
cltd
out
inc
push
fistps
shl
pushf
and
insl
cwtl
jnp
jp
pop
inc
fisttps
inc
test
push
mov
jmp
iret
fdivrs
cltd
rorw
lock
cld
cmpsl
rolb
shlb
adc
mov
mov
xchg
jl
cmp
mov
mov
mov
dec
xor
lock
aam
mov
and
mov
mov
in
test
xchg
push
call
jg
mov
jo
sar
mov
or
pop
dec
scas
xchg
jo
sti
out
js
and
sub
pop
pop
dec
rcrl
jne
lret
pop
mov
cwtl
stc
sbb
jl
dec
pop
xor
inc
push
pop
mov
scas
lldt
fmull
add
and
jecxz
fisubs
sub
sbbl
xchg
lds
xchg
test
mov
sub
sbb
cmp
mov
or
jg
or
orl
dec
int
mov
aam
push
enter
test
pop
add
sbb
mov
add
push
and
pop
leave
jl
imul
jo
push
push
add
mov
aam
mov
aad
push
xor
mov
mov
dec
loop
pop
test
jmp
sbb
fcmovbe
mov
or
lods
xlat
jmp
aam
pop
mov
mov
mov
lea
iret
ja
sbb
daa
sub
adc
sub
dec
push
stos
movsb
push
xchg
test
mov
cld
sub
fistpl
pushf
rcrb
add
outsl
sti
rcll
out
adc
sub
push
fsubrs
add
es
shll
xorl
gs
push
in
add
gs
push
pop
out
jecxz
ret
dec
cmp
or
add
sub
cmp
sbb
lods
sub
jl
pushf
iret
incl
pop
mov
pop
add
aaa
test
dec
inc
xchg
mov
gs
jbe
mov
inc
push
adc
add
mov
out
aam
inc
fdivp
lods
jp
inc
pusha
sbb
shll
aad
pop
add
ret
add
mov
jb
mov
pop
xorb
push
or
dec
lcall
mov
popf
rcll
cmp
sbb
pop
bound
fdivl
mov
sub
test
adc
pop
ja
jne
push
push
gs
pop
inc
pop
xchg
mov
clc
popf
aaa
and
in
stos
mov
mov
shlb
in
ret
xor
in
popf
jp
add
arpl
mov
add
out
cmp
into
in
dec
out
enter
jp
test
ss
xchg
lods
mov
pop
and
repz
nop
popa
mov
leave
out
in
xchg
sub
push
lret
and
aaa
push
das
bound
jp
cmp
pop
movl
iret
popa
push
sub
push
repz
icebp
sub
enter
xor
mov
xchg
sbb
mov
jns
adc
xchg
andl
and
jmp
xchg
jg
mov
pop
inc
add
cwtl
ficompl
inc
int
iret
push
nop
mov
adc
inc
or
cmpsb
pop
lcall
lret
cwtl
cmpsb
inc
push
jp
insl
xlat
loope
mov
adc
loope
sub
sub
cltd
add
scas
lock
pop
inc
aaa
pop
rorl
fldt
inc
cmpsl
push
mov
cwtl
dec
cmp
adc
in
aad
push
pop
sub
sbb
add
mov
insl
mov
adc
add
cwtl
cmpsl
aas
clc
in
mov
outsb
in
inc
sbb
pop
sub
dec
inc
fwait
pop
pop
testl
jo
sbb
in
add
mov
push
inc
lea
xor
popa
cmp
pusha
pushl
ss
mov
push
adc
sbb
add
jnp
pop
adc
push
loopne
out
rorl
jnp
jbe
cli
data16
mov
inc
cltd
xor
insl
fs
inc
movsb
inc
call
dec
inc
gs
sbb
nop
sub
aam
push
jb
or
sbb
or
mov
jg
jb
push
cmp
sbb
das
push
in
and
mov
inc
add
pop
add
outsl
outsb
push
cwtl
hlt
sub
pop
shlb
rcrl
sub
mov
cmp
mov
add
imulb
fwait
imul
stos
cmp
adc
xchg
inc
test
insb
andl
les
sub
xor
movsb
lcall
test
lds
jo
adc
call
sub
insl
mov
add
hlt
xor
js
sbb
mov
mov
push
push
imul
xlat
movsb
lret
outsl
sbb
lret
dec
lret
popa
lock
iret
icebp
rcr
es
xlat
leave
lods
gs
fs
cmp
dec
cli
xlat
adc
dec
fucomi
jb
cmp
daa
jmp
ss
sub
ss
push
jl
mov
call
mov
arpl
fsub
add
cmp
fwait
xchg
mov
call
icebp
sbb
push
cmp
add
fdivs
jmp
mov
aas
stos
and
mov
bound
mov
movsb
inc
or
xchg
insl
pop
cmp
int
xchg
dec
daa
push
jmp
mov
cmc
cmpsl
pushf
lret
cli
test
dec
movsl
fildll
jg
cmp
xchg
leave
insb
sbb
xor
mov
repnz
jo
pop
jo
mov
mov
sub
cli
cmp
jg
xor
clc
cwtl
ss
mov
add
jo
sbb
sbbb
arpl
add
cwtl
stc
pop
cmp
sub
jb
and
add
push
mov
cmpsb
dec
movsl
sub
jl
scas
jnp
and
sub
jae
pop
jge
andl
jne
lea
gs
mov
dec
dec
add
xchg
sbb
add
pushf
push
leave
enter
in
xor
mov
xchg
int
fcoml
scas
mov
jae
ja
mov
fdivrs
repnz
mov
pop
adc
pop
into
es
pop
cwtl
and
subb
cmp
les
dec
clc
cltd
shll
test
shr
test
adc
add
insl
inc
inc
jp
dec
and
adc
mov
jle
enter
movsb
and
sub
les
adc
mov
insl
fwait
iret
cmpsl
lods
popf
adc
repz
rorl
pushf
out
xorl
inc
or
sbb
fucomi
subb
inc
xchg
ret
hlt
jl
scas
daa
mov
cmpsb
adc
aaa
fwait
ljmp
adc
cmp
pop
imul
xor
loope
sti
es
sbb
dec
fstp
sti
clc
scas
push
std
jne
cmp
sarb
subb
ret
nop
fcmovb
outsl
mov
movsl
stos
push
out
adc
insl
mov
std
sub
popf
nop
idiv
cmp
jge
dec
push
rcrl
cld
push
out
aas
fisubrl
cltd
das
cmpsb
outsl
xchg
inc
fwait
or
xchg
adc
insb
xchg
xor
in
or
scas
shrb
imul
jne
ljmp
xlat
lods
faddl
xor
xchg
cmp
pop
or
lods
xor
xchg
movsb
insb
les
sbb
popf
std
cmpsl
in
add
mov
push
dec
movsb
mov
fnop
fbstp
ss
call
popf
cltd
pop
or
inc
mov
shl
lret
cmpsb
out
cmp
xor
aaa
out
xor
jo,pt
lds
outsl
or
dec
fistps
dec
and
imul
mov
in
adc
xchg
popf
fsubp
shrb
fcmovbe
push
push
push
pusha
mov
xor
mov
int3
sarl
xor
adc
pushf
sti
push
cld
outsl
xchg
cmp
pop
and
mov
rorl
mov
daa
jle
lret
xlat
jnp
ja
sub
dec
cwtl
inc
pop
popa
int3
or
stos
out
inc
cmp
jbe
dec
mov
addb
and
pop
fsubrp
or
insl
shrb
fidivrl
xlat
add
pop
push
stc
dec
negl
cmp
fcompl
insl
in
jp
in
test
or
es
sub
and
pop
and
push
icebp
aaa
in
dec
popa
jp
daa
mov
test
sbb
jae
xor
pop
aam
and
cmp
cmp
out
and
faddl
pop
xor
loope
cmovle
adc
cli
mov
xor
xchg
pop
loope
stc
dec
in
nop
or
push
dec
repnz
mov
push
adc
jmp
out
add
aaa
lock
and
pushf
add
insl
incb
gs
leave
mov
adc
rorl
pop
xor
rorb
clc
imul
push
rorb
fildll
out
pop
test
mov
adc
test
sub
movsb
test
movsb
repz
in
leave
push
cs
out
outsb
jne
shrb
insl
jne
cmp
adc
push
or
inc
out
and
fildl
push
cmp
or
xor
and
orl
andl
mov
jbe
call
sub
fwait
xchg
pop
xor
cwtl
test
loop
add
stos
js
out
xchg
xor
lret
jne
pop
lahf
loopne
mov
aaa
push
test
stos
es
adc
in
sbb
mov
sbb
add
cmpsb
es
and
sahf
push
mov
dec
dec
xor
add
arpl
inc
add
push
mov
scas
enter
out
mov
lea
cwtl
gs
bound
jp
cmp
xchg
bound
nop
js
scas
cmpb
jmp
push
cmc
aam
adc
add
cmp
stos
fildl
xorb
xchg
adc
data16
add
es
jne
lahf
das
sti
jl
or
adc
int
or
dec
jne
cwtl
fdivrs
and
sbb
loope
lcall
sbb
jg
outsl
mov
dec
out
jne
dec
pop
int
mov
icebp
cmp
ljmp
sub
or
xchg
mov
or
sub
outsb
cli
pop
icebp
into
xor
cmp
std
cmp
enter
fadd
lds
xchg
jge
js
adc
pop
js
xchg
mov
pop
fstpl
mov
stos
ja
fs
adc
nop
scas
dec
add
and
jb
mov
xor
rorb
inc
sbb
int3
cmp
stos
mov
cld
ss
push
addr16
imul
xchg
sbb
pop
iret
cmp
xor
mov
lcall
xor
in
add
jecxz
inc
pusha
mov
scas
push
cmp
push
test
mov
gs
inc
lods
loopne
shlb
fldenv
or
out
loopne
and
inc
andl
mov
aaa
or
sbb
repnz
cmp
les
jo
hlt
pusha
insl
int3
sub
loop
aam
lods
ss
js
cmp
dec
ja
repnz
sub
xlat
out
mov
sub
jge
jmp
fisttps
push
jl
scas
fninit
mov
sbb
jl
repz
sbb
xchg
add
push
dec
push
icebp
xchg
jle
mov
xchg
imul
mov
adc
fcoms
insb
out
ficoms
cmp
add
jae
enter
loope
jmp
cmp
sub
mov
and
cwtl
mov
adc
xchg
and
fbld
and
out
lret
sti
fmull
cli
sub
cld
ljmp
aaa
fmuls
arpl
mov
sub
loopne
cmp
in
movsl
pop
dec
push
cmp
stc
push
push
fucom
js
jbe
clc
jnp
lods
jne
sbb
and
loop
cmp
mov
add
push
sub
lret
cmp
push
test
lods
and
popa
and
lea
dec
push
xlat
jg
insl
out
lret
rolb
dec
adc
fnsave
fisttps
push
dec
cmp
scas
popa
mov
les
mov
adc
lcall
test
arpl
cmp
or
stc
subl
movsb
sub
sahf
movsl
adc
movb
daa
lock
or
xor
mov
or
cli
cmp
mov
lds
clc
addr16
mov
loopne
mov
mul
push
sub
pushf
cmp
cltd
mov
scas
pop
int
mov
push
or
cmp
mov
mov
stos
adc
ficompl
and
push
scas
popf
loope
popf
enter
xchg
pushf
mov
sbb
mov
dec
lahf
xchg
xchg
add
cmp
push
bound
push
movl
mov
add
mov
cmp
cmpsl
jp
push
cltd
fdivrp
sti
fwait
je
enter
dec
cmp
mov
into
mov
push
add
sti
push
negb
mov
je
add
adc
cmp
push
push
repnz
aad
mov
mov
shrl
mov
sbb
rorl
inc
inc
xchg
dec
mov
notl
inc
push
jne
std
in
dec
stos
push
fsubrs
mov
pop
mov
jae
inc
out
push
outsb
mov
fs
mov
push
imul
push
rorl
xor
sbb
xor
dec
ljmp
jge
fs
imul
mov
adc
and
bnd
sub
aas
xchg
inc
int3
cmp
movsb
lcall
lret
insl
pop
adc
pop
scas
popf
fistpll
or
push
lret
cmp
mov
mov
sub
lds
mov
sub
imul
cmpsb
rcl
xor
dec
call
fstpl
mov
ret
push
push
pop
inc
mov
test
rolb
shlb
lahf
mov
js
leave
aad
test
inc
mov
add
add
sahf
rorb
xchg
or
adc
xchg
pop
lods
scas
mov
imul
jnp
ficompl
or
shrl
les
sti
inc
mov
jg
pop
clc
adcl
xchg
dec
mov
sbb
cwtl
je
cmp
loopne
add
das
jne
idivl
sbb
aaa
scas
sub
pop
xchg
mov
push
sbb
cmp
add
inc
rclb
dec
cmp
repz
sbb
out
mov
icebp
push
or
lret
cwtl
cmp
sbb
adc
mov
pop
mov
jno
dec
mov
loope
sub
add
ret
push
out
enter
insl
cmp
sbb
int
lret
je
inc
jl
mov
xchg
pushf
aad
loopne
sbb
pop
fdivs
bound
xchg
inc
or
sub
fcmovbe
or
in
jnp
sar
aad
jne
mov
dec
pop
xchg
xlat
or
rorb
test
pop
jnp
inc
sub
xlat
cmp
cmpb
pop
dec
add
test
test
pop
or
sub
xor
sbb
mov
sti
dec
fwait
sbb
inc
cmpsb
insl
jge
and
scas
ds
xchg
pop
adc
pushf
sub
inc
pushl
loop
fs
sub
or
js
lret
les
xchg
and
jo
mov
dec
and
orl
mov
mov
sub
jecxz
mov
mov
mov
adc
gs
popa
adc
movaps
lcall
fs
cmpsb
daa
add
add
sbb
sub
outsb
int
into
cmp
or
xor
out
inc
lock
xchg
pop
into
lahf
loope
jnp
mov
cmp
sub
rclb
ja
mov
jmp
mov
jb
lds
daa
cmpsl
dec
dec
loop
mov
push
sbb
sbb
sub
cmpsl
icebp
je
sub
jp
in
std
mov
xchg
imul
cmp
cmpsl
add
and
fwait
inc
loopne
push
movsb
leave
call
popa
mov
xchg
xor
ret
rcr
and
hlt
ret
jecxz
xchg
jle
pop
mov
jo
addl
aas
movsb
test
add
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
jmp
mov
out
fwait
push
xor
sub
fsubrs
jnp
push
xchg
or
jg
cmp
lock
in
push
and
std
scas
dec
xor
repz
iret
cmp
or
or
insb
and
inc
cmpsb
lds
dec
mov
hlt
mov
or
sub
inc
push
xchg
jle
sub
pop
ja
ret
loope
fs
clc
fisubrs
pop
xor
leave
xchg
rcrl
sahf
adc
test
xlat
sbb
or
mov
adc
adcb
lret
pop
and
xor
push
pop
imul
es
jmp
popf
cmc
xlat
loope
xlat
out
or
push
inc
sub
in
and
stc
in
jbe
inc
arpl
fldenv
mov
pop
jae
mov
ret
sub
add
mov
jle
cmp
int3
out
pop
jae
lret
xor
stos
test
mov
sbb
sbb
out
fucomip
jb
pop
add
ds
push
jns
or
cmp
lock
inc
scas
and
sub
dec
out
outsb
or
arpl
in
cmpsb
and
mov
cmp
cmpsl
adc
out
add
es
xor
outsb
fwait
jg
out
arpl
sub
stc
xchg
cmp
gs
jl
clc
xorb
mov
cs
or
cli
push
ss
repnz
repnz
aad
adc
cmp
test
aaa
repz
xchg
test
jecxz
pop
xchg
int
stos
add
outsl
push
fmull
outsb
mov
in
adc
frstor
mov
inc
lcall
jp
mov
cmp
repz
popf
repz
mov
int3
push
mov
push
jno
inc
ss
mull
popa
mov
xchg
xor
cltd
lcall
sarb
ds
pop
mov
mov
pop
cmp
test
addr16
fwait
pop
add
mov
test
xor
shlb
xchg
cmp
mov
xor
dec
and
push
jae
lods
xchg
push
inc
incb
out
sub
xor
cmp
or
mov
and
inc
out
xchg
jno
push
sub
rcl
jge
adc
shl
shr
pop
fcmovnbe
dec
pop
in
push
mov
xor
dec
arpl
cmp
mov
addr16
add
clc
xchg
xor
inc
in
call
inc
pop
push
and
mov
ret
adc
iret
pop
ss
jle
aas
cmp
jo
mov
cmp
dec
mov
pop
ficoml
dec
test
jnp
dec
leave
js
lods
fwait
push
lock
and
adc
adc
lahf
xor
idivl
rcrb
add
je
shlb
cs
sub
push
sbb
ss
lcall
pop
jmp
cli
xchg
int3
mov
xchg
mov
adc
push
adc
sbbl
mov
jno
gs
mov
shll
cmp
sub
xchg
pop
jns
jnp
sub
int
mov
lcall
bound
pusha
repz
out
push
or
lods
and
inc
jne
mov
jge
sti
or
inc
add
sbb
inc
sahf
adc
xchg
ja
add
push
pop
jbe
push
ret
push
fs
sbb
push
cmp
ss
and
je
incl
scas
lcall
fnstenv
test
add
sbb
or
mov
leave
cs
dec
les
std
and
jno
shrb
sub
aaa
push
fildl
imul
push
jle
adc
lods
mov
mov
stos
into
cmp
add
int3
xlat
in
inc
repz
pop
xor
out
imull
fwait
sbb
fs
pop
into
and
stos
testb
lods
sub
mov
arpl
into
les
add
cmpsl
pusha
mov
jno
fdivl
test
push
jp
fucomp
mov
ss
sbb
into
insb
daa
dec
cmc
popf
fsubrs
mov
jle
sub
add
or
aad
bound
call
jb
jge
inc
mov
add
ret
sbb
addr16
xor
cmpsb
stos
loopne
cmpsl
add
mov
ja
dec
idivb
pop
movsb
rcr
push
jl
push
ret
push
sbb
addr16
sbbl
mov
push
mov
add
lods
fwait
push
jmp
mov
add
mov
leave
sbb
pop
and
lret
movsl
mov
inc
sub
cmpsl
cmc
mov
sub
sub
lret
inc
sbb
shrl
lods
inc
ja
cmpb
imul
inc
ret
shr
mov
pop
test
test
lods
filds
add
mov
fsubrs
daa
ljmp
lahf
and
test
popl
mov
inc
test
data16
ljmp
lret
dec
cmp
call
scas
sahf
lahf
sbb
adc
in
xor
dec
insl
scas
xor
xchg
pop
push
loope
xlat
mov
call
mov
jecxz
cmp
test
push
jb
cmp
pop
inc
push
mov
insl
fcomi
inc
push
or
mov
imull
test
repnz
lds
inc
test
fistps
mov
ficoml
mov
xchg
pop
stc
cmpsl
or
or
stos
and
shr
sbb
rcll
in
xor
lcall
mov
out
stc
jne
mov
mov
add
push
push
movsl
lea
mov
sbb
aas
dec
fdivrp
adc
mov
scas
inc
mov
push
scas
pushl
sbb
cmpsl
xorl
or
pop
popa
inc
cmp
push
stc
and
mov
pop
dec
or
adc
mov
into
adc
out
pusha
inc
and
data16
movsb
and
add
ja
xor
dec
xlat
push
jo
in
ja
icebp
shl
lret
gs
mov
and
insl
sahf
mov
mov
xlat
or
fildll
jmp
enter
mov
jb
mov
add
jmp
outsb
lcall
fildl
push
and
xor
fstpl
xor
and
es
adcl
mov
push
adc
add
and
push
jne
sbb
add
daa
imul
add
cmp
imul
pushf
cltd
pop
xchg
jl
and
push
stc
mov
cli
mov
leave
sbb
jnp
fisubrl
add
test
dec
sbb
xchg
repnz
test
inc
mov
aam
test
mov
and
rorb
iret
push
mov
idivb
mov
arpl
and
or
and
inc
add
ret
mov
das
daa
and
push
adc
incl
sbb
jmp
rorl
and
push
mov
jae
xlat
pushf
out
jb
lea
fstpl
dec
fcoms
rcrl
jbe
cmc
rcr
xor
sbb
sub
dec
cmp
xchg
mov
mov
or
mov
xor
mov
jbe
sbb
stc
pop
cmp
cmp
sbb
mov
sbb
push
add
inc
std
mov
mov
dec
scas
push
cmp
pushf
movsb
lds
adc
adc
cmp
mov
cmpsb
stc
mov
mov
pop
mov
jg
sub
add
mov
and
out
xchg
in
cmp
repz
arpl
addr16
sbb
cld
orl
fcoms
les
cmpsl
imul
pop
shll
icebp
xchg
sub
push
push
mov
loope
lods
shrd
pop
jge
cwtd
push
dec
cmp
dec
sub
call
mov
loope
enter
nop
push
adc
push
scas
gs
push
js
mov
test
das
xor
insb
sahf
inc
or
jo
jno
js
scas
sbb
lahf
mov
jae
pop
mov
inc
mov
stc
iret
movsb
rcll
cwtl
cmp
pop
adc
sub
jb
mov
ss
in
sub
push
loopne
or
popf
stc
cmpsl
jbe
lock
pushf
mov
xchg
adc
push
shl
push
test
aas
aam
mov
or
mov
fsubs
jbe
call
daa
aas
cmpsl
jno
mov
xor
dec
or
repz
loope
and
xchg
cmp
dec
mov
mov
addr16
inc
fcmovnu
test
test
xor
inc
cmp
mov
pop
push
xor
pop
sub
sub
jp
pop
ja
dec
xchg
mov
fisubrs
sub
aam
jnp
push
xchg
push
fwait
mov
nop
mov
inc
adc
test
jg
and
adcl
mov
mov
es
dec
dec
push
outsb
pop
ss
icebp
sahf
js
mov
inc
aaa
rorl
jne
shrl
mov
add
xchg
mov
ja
mov
add
movsl
push
cmp
and
mov
xor
mov
in
jmp
or
xchg
mov
xchg
mov
cmp
push
push
xchg
adc
popf
push
lahf
daa
jl
dec
fwait
mov
loope
dec
or
cltd
add
out
dec
sub
adc
roll
mov
rorl
gs
mov
stos
cli
fistl
mov
xchg
sar
test
and
test
inc
roll
ljmp
daa
repnz
cmpsb
inc
repnz
aas
pop
stc
cs
pop
repz
fmull
jp
push
mov
inc
mov
jl
sti
test
pop
cmp
fisttpl
sbb
imul
add
stos
je
xcrypt-ctr
cmpsl
pop
push
mov
add
inc
mov
jb
dec
pop
test
and
adc
sbb
mov
sbb
jecxz
das
ja
orl
inc
xchg
cmpxchg
push
jns
and
pop
bnd
pop
mov
jae
ja
mov
xchg
test
fildll
jp
outsb
je
sahf
pop
ret
dec
clc
jg
lock
and
shrl
xchg
pop
or
in
add
adc
hlt
jmp
inc
test
pop
iret
aad
les
cmp
fdiv
in
push
lds
mov
mov
xchg
ja
lcall
or
int3
lock
mov
stc
pusha
bound
out
je
xor
xchg
out
inc
mov
xchg
sub
mov
fdivs
cmpsb
ret
sub
mov
xchg
mov
cmp
stos
test
gs
push
push
sub
add
dec
fidivrl
dec
adc
xorb
aas
add
je
shl
cs
mov
cltd
mov
adc
dec
and
pop
pushf
fsubrl
push
add
xchg
les
dec
rorb
jb
and
mov
mov
push
pop
mov
cltd
outsb
cmp
in
pop
fmul
std
dec
movsl
sbb
imul
lds
mov
mov
jbe
mov
pop
push
cmp
aaa
sub
into
xchg
lock
movsl
lods
mov
subl
xchg
sub
out
cmc
pop
cmpl
lret
inc
add
and
jbe
jns
dec
jne
jb
xlat
jo
mov
mov
push
shll
sarb
test
xor
jmp
nop
icebp
ss
repnz
dec
sbb
sarl
pusha
and
mov
dec
call
pop
movsb
adc
fcmove
add
sub
lds
scas
xchg
in
pop
and
out
lods
dec
xchg
movsl
insl
push
or
imul
xlat
mov
mov
out
lea
call
pop
ja,pn
mov
test
icebp
jb
pop
jl
push
lods
stos
sahf
iret
andl
std
shl
arpl
movsb
and
test
pushf
xor
lea
xchg
xor
outsb
sbb
ret
xlat
push
ds
push
xchg
in
pop
mov
icebp
aaa
jge
inc
into
xchg
cmp
icebp
mov
inc
mov
out
dec
cmp
sub
mov
pop
adc
dec
stc
or
and
pop
incb
add
pop
subl
jmp
fscale
repnz
mov
rcll
pop
rcrl
loopne
jbe
mov
scas
push
mov
out
xor
in
dec
and
cmovg
push
add
push
dec
int
in
nop
xchg
or
ds
aam
fidivs
cmp
mov
aam
fwait
xor
cwtl
aam
pop
dec
sbb
jecxz
push
push
cli
flds
inc
mov
ficoms
sub
repz
inc
sbb
out
jbe
loop
cmpb
mov
sub
inc
mov
sbb
ss
orb
adcw
jg
and
push
ficomps
movsl
jge
mov
add
leave
movsb
mov
cmp
jae
and
cs
jp
and
divb
xor
xor
mov
mov
in
daa
pop
pop
pushf
and
mov
xchg
pop
int3
lahf
ss
pop
testl
cwtl
sbb
or
rcl
sar
repz
pop
cmpsl
sbb
fwait
imul
lods
add
xor
lods
push
mov
in
inc
xor
rcrl
xchg
mov
fisttps
and
add
imul
nop
sub
and
adc
dec
pop
sarb
mov
data16
scas
fstl
ljmp
clc
adc
mov
shl
mov
popl
push
insl
hlt
loopne
push
mov
and
pop
cmp
push
cmp
ret
cmp
or
jo
into
rdtsc
nop
pop
mov
adc
out
jbe
xor
xor
test
leave
push
aas
in
pop
add
xchg
subps
adc
in
sahf
inc
dec
dec
stos
rcr
jmp
fwait
dec
mov
in
ret
push
dec
xchg
icebp
xchg
xor
push
mov
inc
adc
jae
push
push
pop
je
mov
inc
std
dec
rol
push
fadd
sub
out
cmp
mov
hlt
in
fimull
pop
xor
out
imul
popa
or
dec
xchg
jbe
xor
mov
cmp
das
cmp
das
sub
arpl
push
xchg
fisttps
adc
sub
fldcw
fcoml
shl
cli
sbb
mov
add
jns
js
sti
cli
mov
and
shll
fcoms
in
leave
shrb
fidivl
arpl
cld
subb
popf
cmpsb
lea
aas
das
push
adc
jo
aas
jge
jo
imul
push
xor
loope
fstps
mov
lcall
fisubrs
pop
mov
fnstsw
jne
jne
jmp
ret
add
imul
push
iret
cmp
xor
test
and
inc
inc
outsb
lock
rcll
mov
repnz
adc
adcb
scas
xchg
mov
and
lods
pop
ret
sti
pop
xlat
xchg
jns
das
icebp
xchg
lea
push
cmpsb
mov
sbb
xchg
leave
into
lahf
add
cmp
fdivl
outsb
insb
insb
jns
lret
xor
or
repnz
shrb
pop
insb
into
or
popa
jo
add
push
dec
in
lods
dec
imull
aas
jle
and
movsb
inc
cld
fiaddl
clc
ja
iret
dec
sbb
mov
inc
leave
xor
enter
jb
cmp
movsl
xor
sbb
aad
xchg
or
call
inc
dec
sbb
and
and
fucom
adc
test
sarl
test
pusha
jg
jnp
and
mov
int3
mov
inc
out
sub
xchg
dec
mov
inc
fistpll
pop
cmpl
mov
rolb
mov
loopne
out
pop
xor
add
inc
push
xor
xchg
in
movsl
std
mov
sbb
xchg
push
jl
xor
imul
jecxz
xchg
dec
xchg
pop
mov
sbb
lret
dec
test
and
ds
imul
push
ficomps
mov
out
sub
sbb
mov
lahf
adcb
jmp
icebp
aam
fyl2x
jl
and
mov
mov
repnz
dec
shrl
dec
pop
aas
movsb
sub
addr16
shlb
loope
outsl
add
mov
inc
jbe
adc
js,pt
ret
mov
adc
iret
out
fldl
nop
mov
xor
fstpt
inc
enter
imul
aam
jns
out
pop
mov
in
jns
movsl
mov
adc
and
sbb
idivb
mov
cmp
pushf
or
fldenv
dec
mov
js
pop
into
pop
sar
adc
hlt
call
pop
push
inc
hlt
lret
test
ss
sub
ljmp
pushf
push
cwtl
outsl
popf
lods
movsl
jne
mov
pop
mov
mov
pop
daa
fsubs
add
hlt
std
push
add
pop
loope
aaa
test
lcall
inc
test
outsl
jne
cmpb
cmc
test
aas
shlb
and
ret
addr16
xchg
out
out
push
mov
aam
jae
ret
fisttpl
les
subb
pop
sbb
test
in
pop
jg
and
rcr
out
cmp
sub
push
nop
add
loope
ja,pt
push
xchg
xchg
pop
push
clc
inc
jbe
andl
push
adc
push
icebp
shll
push
mov
add
sub
test
fimuls
xchg
xchg
int
fneni(8087
rcll
xor
inc
mov
ss
lahf
mov
daa
jae
sub
and
push
popa
inc
add
jmp
popa
pushf
mov
outsl
inc
mov
mov
mov
push
sub
pop
xchg
data16
lock
push
icebp
dec
pop
popf
mov
scas
lcall
mov
icebp
and
ja
inc
rcrb
cltd
or
mov
pop
jno
xchg
mov
pop
xor
xchg
mov
push
mov
lret
xchg
sub
fidivrs
inc
mov
jno
imul
loop
repz
inc
test
loope
aad
push
aas
xor
mov
iret
mov
rol
std
jmp
inc
xor
mov
adc
mov
xor
into
out
mov
shlb
add
lds
negl
inc
mov
bound
dec
lock
pop
xlat
mov
inc
subb
dec
pop
stc
aas
movmskps
mov
test
test
mov
mov
cltd
popa
mov
test
divl
imul
cmp
pop
push
or
nop
inc
sub
test
fisubrs
in
inc
jb
iret
and
push
jo
mov
push
mov
fistl
lds
pushfw
inc
out
add
mov
and
cmc
rcll
arpl
sbb
aam
test
hlt
xor
sti
adc
jo
loopne
mov
lds
lods
and
pop
stos
repnz
mov
mov
stc
cmp
adc
enter
test
test
mov
jge
mov
cmpsb
repnz
dec
dec
mov
ret
ret
lods
int
add
add
or
out
add
mov
frstor
fcoml
pop
iret
push
xchg
add
mov
dec
inc
pop
rcr
int3
push
jmp
jbe
popa
mov
xchg
data16
push
stc
or
xchg
das
mov
push
cli
jmp
lock
out
aam
xchg
out
ja
loop
add
sarl
push
jae
mov
push
imul
xor
add
scas
adc
je
subl
pop
sub
aas
xor
mov
js
aad
fisubrl
mov
sbb
add
push
jg
jl
add
dec
aam
xchg
addr16
outsb
mov
jmp
shl
sbb
js
add
bound
sbb
jne
shlb
insb
jbe
inc
pop
movsl
lcall
and
inc
cmp
ret
arpl
pop
aad
push
loop
adc
inc
adc
pop
xor
mov
test
enter
sahf
jbe
dec
pop
bound
push
rcll
pop
add
add
cmp
dec
fildl
out
push
jmp
pop
sahf
push
lcall
leave
orb
loop
idivb
push
bound
dec
sarb
daa
jmp
ds
xchg
cwtl
pop
outsl
cld
data16
test
ss
add
mov
sub
dec
push
repnz
je
xor
xor
rolb
jmp
mov
mov
int
mull
sbb
std
int3
jo
dec
test
daa
imul
dec
sahf
pop
imul
dec
mov
push
push
and
sbb
or
cmp
mov
lcall
ficoms
sbb
icebp
imul
nopl
pop
or
dec
mov
lcall
push
push
in
in
int3
aad
cmp
sub
dec
pop
push
sub
aam
lret
and
les
fldcw
dec
jae
xchg
ficoml
test
push
dec
repz
pop
push
pop
mov
cmpsb
je
movsb
mov
loopne
jecxz
mov
mov
aam
cmp
push
mov
dec
rorb
xor
mov
test
mov
jmp
inc
cmpsl
leave
push
ja
stos
mov
pop
lock
pop
mov
cmp
fwait
lahf
loope
addb
inc
arpl
lods
or
imul
xchg
add
cmp
stos
mov
cmc
ljmp
int3
sub
mov
cmpsb
ds
pop
sbb
mov
inc
jns
sub
push
push
cwtl
movsl
mov
xor
cld
jns
shll
inc
sub
jmp
jge
out
adc
adc
cmp
jnp
fstps
les
loopne
jecxz
xchg
mov
cmp
jno
aam
nop
and
cltd
and
test
jmp
xchg
mov
add
ja
push
mov
dec
add
jp
mov
clc
dec
dec
ror
jl
test
fucom
mov
dec
ud2
cli
imul
das
mov
sbb
ja
pop
test
dec
add
mov
xchg
or
sbb
inc
dec
rcll
test
test
rcr
fwait
mov
push
cwtl
jl
inc
adc
and
and
and
sub
dec
xor
sub
mov
add
inc
or
bound
push
jmp
popa
es
aad
lahf
adc
rol
popf
jb
call
pop
int3
push
dec
jb
orl
add
mov
fdiv
icebp
les
add
or
add
pop
sbb
in
add
xchg
push
jbe
mov
in
insl
mov
les
jle
test
adc
or
clc
inc
jecxz
sub
cmp
scas
jmp
fimuls
adc
sti
mov
xor
mov
sub
push
jmp
clc
and
jbe
cmc
insl
mov
mov
jbe
or
call
movl
addb
iret
je
sbb
fisubs
jne
pop
sti
mov
jns
inc
stos
bound
je
xchg
arpl
push
es
cmp
insb
sahf
pusha
sub
in
addb
stos
dec
shr
cmp
repz
xor
and
out
cmp
stos
ret
in
aad
sbb
sbb
rclb
scas
cmp
stos
push
push
jmp
add
es
dec
rcrb
mov
loop
push
and
sbb
aaa
loopne
fmull
testl
in
je
xchg
call
add
pushf
stc
leave
adc
ja
into
sub
stos
or
lea
movl
cmc
xchg
pop
popa
mov
mov
rcr
and
cmpsl
adc
lods
xor
lcall
jmp
dec
jb
sti
fsubl
jge
adc
cmp
insl
add
out
clc
and
pusha
sti
jnp
or
push
sbb
add
stos
jne
mov
jmp
addr16
mov
in
inc
jb
inc
hlt
fildl
push
cmp
icebp
lods
int
jb
mov
cmp
std
mov
pop
das
movsl
sahf
adc
or
es
das
jecxz
cltd
cltd
pop
cwtl
xchg
out
xor
mov
pop
int3
sbb
push
and
std
subb
xchg
jge
outsl
test
fcmovb
add
outsb
lea
incb
in
stos
call
mov
mov
sti
aas
xchg
leave
mov
pushf
call
je,pt
dec
dec
sub
adc
pop
insl
aas
or
xor
adc
mov
and
push
add
or
jg
or
sub
popf
jmp
aad
test
pop
inc
repz
mov
ljmp
xor
push
fimull
mov
imul
jb
mov
push
jo
mov
xor
les
and
mov
xor
movb
or
push
std
adc
adc
fcmovnbe
movsl
sub
es
mov
lods
sub
cmp
lahf
jno
rcrl
mov
test
cmp
dec
sub
and
lea
mov
hlt
sarl
jae
ret
ja
cmp
outsl
lret
cmp
xchg
pop
popf
lods
gs
ljmp
in
or
inc
rcll
push
jo
pop
sbb
mov
clc
andl
cwtl
mov
pop
cmp
mov
xchg
in
jbe
dec
push
dec
mov
std
out
jl
movaps
pop
and
pop
lds
mov
data16
and
jmp
inc
add
sti
mov
and
pop
pop
push
movsb
cld
fstl
lock
jg
xor
int3
mov
sub
xor
lods
jg
ret
je
pop
imul
mov
jne
inc
je
and
mov
xchg
les
aas
ja
cli
cmp
mov
les
int3
lods
inc
cltd
daa
cmpsl
mov
inc
and
push
dec
rol
imul
inc
roll
cli
xor
mov
cmpsb
stc
out
out
push
lock
mov
cld
adc
mov
inc
jl
loopne
dec
sar
sbb
dec
addr16
ss
sbb
repnz
inc
fidivrs
jp
dec
ljmp
lret
xor
in
in
sti
jns
out
rcll
imul
xchg
out
stos
out
or
sti
pop
cwtl
and
loop
or
mov
addr16
aam
fs
mov
or
decb
inc
pushf
push
jl
pop
stc
les
sub
xchg
ffree
bound
pushf
add
insl
lods
jp
inc
std
pop
sub
add
sahf
je
int
fstps
pop
mov
xor
gs
mov
pop
cmp
sub
cmp
outsb
sub
sbb
in
fildl
pushf
ljmp
inc
in
mov
testl
inc
jg
mov
xchg
ret
ljmp
jbe
xor
pushf
je
sub
pushf
add
mull
cmp
les
fdivl
and
jae
xchg
rcr
push
lods
in
fwait
push
jbe
pushf
xor
cmpb
mov
dec
jnp
loope
inc
data16
lahf
adc
lock
std
xor
popf
rolb
push
jecxz
stos
jmp
sub
outsb
add
call
out
mov
mov
gs
testb
fistpll
cmp
adc
fwait
and
jb
pop
mov
aam
adc
sbb
or
imul
jmp
movsl
or
cmp
pop
dec
xchg
jnp
outsb
push
mov
enter
outsb
outsl
adc
and
rcr
int
sbb
enter
out
pop
lea
cmp
adc
das
add
and
add
inc
push
cmpsl
pop
rol
movsb
clc
mov
pop
roll
lahf
pop
jne
adc
cli
or
push
xchg
ret
aas
das
stos
mov
jecxz
sub
movb
in
insb
jl
mov
or
cli
sbb
mov
bound
mov
sub
sub
jns
dec
sarl
das
test
enter
nop
jg
clc
cmp
and
adc
sbb
ja
mov
mov
jmp
test
adc
pop
push
dec
push
add
add
notb
inc
push
mov
imull
movsl
cs
xchg
out
inc
mov
mov
mov
data16
fwait
daa
fwait
ret
imul
jne
adc
fisubrl
xchg
fsts
imul
out
pop
inc
mov
sub
add
aaa
cmp
int
cs
fldcw
shl
push
push
mov
icebp
push
rcl
int
jbe
mul
je
je
lret
xchg
call
lods
mov
outsb
add
ret
popa
mov
mov
jl
cmp
dec
mov
pusha
movsb
popf
in
addl
js
popa
sub
sub
xchg
mov
cmpsl
or
mov
movb
fisubrl
sbb
cmp
fimull
sbb
xor
stos
dec
dec
inc
xchg
push
mov
add
push
cmp
mov
fildl
mov
mov
sub
sti
je
mov
and
mov
mov
lds
and
add
push
js
pop
std
adc
xor
repz
ds
pop
ret
lods
adc
dec
fsub
daa
xchg
or
outsb
cmp
adc
inc
adc
adc
popa
enter
xchg
jns
mov
pop
push
jbe
sub
lea
scas
je
push
and
movsb
pop
movl
xchg
push
outsb
or
int3
stc
or
inc
inc
es
jnp
cli
or
lcall
aaa
mov
lret
push
push
adc
lcall
push
popl
lret
push
or
push
push
add
dec
je
jo
es
mov
cltd
push
call
xchg
jg
fnstsw
mov
xchg
lods
adc
mov
dec
test
and
aam
mov
nop
add
xchg
insl
dec
scas
fwait
jle
add
fs
pop
into
ret
in
lret
inc
scas
mov
jmp
je
rorb
adc
push
sbb
add
icebp
lahf
fistps
loop
pop
adc
xchg
jl
std
cmpsb
adcb
enter
pop
pop
adc
dec
fnstsw
push
iret
loop
iret
rcrb
ljmp
orb
xchg
cmp
sub
ljmp
inc
xchg
push
mov
inc
ret
cmp
stos
push
xchg
mov
jae
mov
jbe
cwtl
mov
data16
xor
mov
clc
push
push
dec
insb
adc
je
rclb
arpl
repnz
inc
xlat
fs
in
mov
bound
mov
push
cmp
in
xor
jl
sub
xchg
cmp
sahf
sub
adc
jb
add
enter
mov
cld
xor
add
mov
mov
add
jmp
iret
jmp
sub
cli
in
xchg
sbb
or
and
jnp
sahf
jnp
dec
sub
lds
leave
xchg
push
pop
add
mov
lock
andl
push
popa
cli
cmp
jmp
jo
imul
outsl
outsb
mov
jne
nop
dec
and
clc
sub
dec
push
mov
xchg
icebp
repz
leave
mov
xchg
xchg
dec
or
pop
adc
mov
mov
dec
out
enter
shll
repnz
dec
push
xchg
inc
xchg
gs
push
xor
fwait
das
mov
push
jle
mov
test
cli
pop
movsb
mov
cmp
mov
or
mov
mov
rcrl
mov
roll
pop
lds
and
jb
je
pop
in
push
into
xchg
pop
mulb
incb
je
test
add
sub
add
jae
rorb
jo
test
aad
insl
outsb
pop
add
ljmp
iret
xchg
loope
sbbb
jnp
or
xchg
and
fdivs
movsb
aaa
mov
hlt
mov
icebp
mov
jne
jl
sub
insb
jnp
push
cmp
xchg
xchg
iret
ffree
arpl
pop
add
cwtl
add
push
xchg
dec
inc
in
scas
jbe
mov
cld
clc
mov
shll
shrb
adc
int3
sub
and
dec
andb
addl
rcl
inc
push
mov
fsubs
pop
adc
stos
bswap
addr16
mov
icebp
push
mov
push
in
popa
jae
sub
sub
push
sub
xor
in
lcall
stc
push
mov
out
push
push
das
jb
sub
jae
aas
dec
loopne
bound
sbb
add
mov
adc
xchg
jae
out
push
and
shl
rorl
and
sub
scas
add
cli
popa
mov
inc
sbb
and
addr16
std
rcr
pop
fwait
xor
data16
jo
or
lods
stos
jecxz
push
les
mov
sub
imul
mov
lock
mov
cmpsb
cli
push
xchg
jne
insl
bound
int3
movsl
and
inc
xchg
movl
mov
push
call
fldl
cmp
mov
mov
sub
loop
mov
in
lret
outsl
les
rcrb
gs
lods
ret
dec
dec
loope
inc
cmpl
xchg
insl
push
sbbb
inc
xchg
lods
int3
into
xor
dec
into
dec
or
lds
pop
mov
push
xchg
fdivl
sbb
xlat
mov
repz
mov
stos
leave
test
fsubrp
fdivrs
pop
dec
cmpsb
cmp
lods
div
cmpsb
dec
mov
fisubs
lods
stc
or
or
mov
dec
mov
dec
xchg
in
fldcw
test
jnp
mov
pop
jnp
fldt
mov
rorb
xchg
pop
sub
dec
enter
and
cmc
fmull
and
inc
shll
repz
std
xor
addr16
imul
les
dec
mov
push
mov
mov
nop
xchg
test
jno
rol
js
add
inc
mov
adc
outsl
call
lret
aaa
es
push
fxch
pop
xor
negl
into
test
adc
imull
inc
sbb
jb
mov
sbb
or
icebp
cwtl
jle
hlt
addl
cmpsl
js
sub
pop
pushf
mov
or
inc
icebp
jp
sbb
ret
loopne
and
sbb
enter
push
mov
lcall
xlat
sub
xchg
cltd
in
add
push
inc
add
lcall
or
cmp
shlb
cmp
jno
loope
jecxz
cmp
js
jge
pop
sub
aad
outsl
aad
outsb
add
pop
mov
cld
adc
jp
outsb
dec
stos
pop
mov
mov
jge
ret
sbb
mov
test
push
inc
sub
inc
insb
xor
mov
push
mov
inc
jmp
sub
pop
test
cs
pop
pop
fstps
mov
dec
cmpsl
sbb
orl
xor
mov
or
adcl
xchg
cmpsl
in
andb
or
out
iret
push
and
jb
sub
cs
ds
xor
out
lea
lods
xor
mov
xchg
inc
mov
mov
int
and
popf
or
mov
fmull
popa
ss
mov
jae
loope
xlat
lahf
jle
cmp
pop
ds
mov
shrb
adc
imul
push
cwtl
test
mov
xor
adc
lcall
push
push
add
or
add
cld
xchg
xchg
in
in
and
in
test
cmpsb
dec
sub
cmpsl
xchg
ss
out
jae
sti
pusha
mov
mov
mov
iret
test
or
shr
mov
stos
xor
imul
push
pop
nop
add
sar
or
in
dec
xor
lock
call
push
cmc
aas
test
popa
aam
stc
insl
and
push
nop
pushf
jnp
mov
sub
sahf
xchg
xchg
movl
js
lds
mov
test
jmp
test
data16
fwait
or
loop
inc
ja
mov
in
mov
icebp
in
shl
jge
jmp
jecxz
outsb
lret
je
mov
mov
aas
nop
iret
sub
pop
push
mov
sub
dec
int
inc
mov
add
les
dec
jno
inc
or
adc
stos
adcb
fisubrs
lods
inc
pop
test
mov
popa
loope
and
or
pusha
sub
int
mov
push
decb
cmp
es
fcomps
jno
loope
cmp
pop
xlat
loop
jge
cltd
outsb
rcr
xor
push
out
adc
outsb
fnop
xorl
sbb
repnz
and
hlt
scas
les
ljmp
jle
loopne
pop
lret
lcall
ja
lret
pop
outsb
jbe
aas
pop
je
xchg
ret
jecxz
cmp
aam
cmp
mov
fimuls
scas
sbb
ret
popf
mov
aam
sahf
adc
adc
xchg
push
xchg
pop
add
push
dec
and
adc
dec
int3
shr
cmp
push
fcmovu
into
cmp
push
bound
xchg
push
fnstenv
jne
and
push
out
jae
daa
add
call
pop
mov
xor
mov
ss
sub
jno
cmc
xchg
lds
and
lods
or
arpl
sub
arpl
mul
cmpsb
daa
or
ss
pop
push
pop
pop
jl
xor
outsb
pushf
inc
push
dec
mov
xlat
jg
fcmovne
xchg
inc
test
fsts
in
clc
xor
pop
pop
add
fs
mov
repnz
insl
adc
dec
adc
push
xlat
arpl
movsl
inc
mov
push
xchg
inc
xor
lds
lcall
sub
cmp
shrb
dec
roll
test
push
push
jecxz
mov
sahf
jge
je
fst
jp
inc
repz
aad
das
xchg
out
data16
inc
imul
xchg
test
sub
test
pop
adc
lock
in
add
jecxz
mov
testb
mulb
mov
adc
xor
ret
fdivrp
stc
mov
cmp
sahf
jb
popaw
in
out
lret
in
addr16
push
insb
incl
adc
xor
outsl
hlt
mov
les
adc
xchg
xchg
mov
and
jne
lcall
cwtl
add
int
je
shlb
mov
mov
pop
fstp
add
xchg
xchg
inc
nop
xchg
pop
dec
xchg
jmp
ror
pop
push
out
fisubl
or
xchg
in
sbb
jge
dec
movsl
push
stc
test
jge
jne
pop
cmp
das
ror
adc
xor
loope
loope
js
sbb
pop
sahf
push
insl
sub
movsl
mov
xchg
fwait
jae
iret
pop
add
add
mov
xchg
add
addr16
jns
or
js
push
imul
es
js
xchg
jl
lock
pop
sbb
aam
fisubrs
add
pop
or
xor
add
xchg
sarb
cmp
fstpt
push
xor
scas
xchg
inc
sahf
fsubr
lea
js,pn
addr16
xchg
lods
jl
cmpsb
xor
aad
dec
addr16
mov
jg
push
pop
gs
adc
es
shl
test
mov
push
push
in
or
lcall
aaa
xor
jge
popa
jge
leave
daa
pop
or
aam
ss
les
scas
pop
and
out
jae
jl
je
test
mov
rcl
out
rolw
cmp
lods
cltd
mov
and
adc
in
dec
leave
xchg
add
jmp
insl
adc
cs
test
and
xchg
bound
push
pop
cli
and
dec
mov
mov
add
ret
jle
jbe
in
cmpsl
inc
lods
aam
dec
push
test
addr16
gs
adc
rclb
jg
dec
outsl
cltd
sub
iret
xchg
mov
leave
mov
dec
cmc
fs
jmp
out
scas
xchg
movsb
fdivrs
mov
add
movsl
enter
xor
push
cmpsl
aas
pop
ljmp
mov
call
enter
mov
icebp
add
push
test
xor
sar
add
inc
stos
dec
sar
pop
push
insb
dec
clc
iret
mov
xchg
gs
add
cmp
mov
add
test
inc
test
ret
pusha
into
jno
cmc
insl
sub
sub
add
daa
enter
jbe
jmp
into
pushf
add
fadds
js
leave
stos
inc
outsl
and
jno
cmp
xor
hlt
call
aas
add
jae
xlat
lock
pop
sub
jnp
add
ljmp
inc
ret
add
and
mov
sub
les
inc
loopne
mov
loope
push
xor
add
aas
inc
lock
in
cli
or
sbb
pop
inc
into
pop
test
dec
sbb
mov
xchg
sbb
cmp
mov
mov
mov
dec
xchg
inc
pop
pop
push
arpl
daa
adc
lds
pop
mov
out
stos
insl
sbb
dec
inc
dec
sbb
sti
pop
push
cmp
popa
xlat
jle
adc
sbb
jns
lds
mov
adc
pop
inc
and
aam
xor
stos
mov
out
xchg
xchg
dec
loop
icebp
ja
paddq
insb
movzwl
lea
xor
dec
sbb
pop
dec
rclb
sbb
fldt
clc
nop
mov
xchg
jbe
mov
nop
fsts
add
mov
pop
inc
jg
sub
push
loope
and
dec
dec
xor
mov
jo
adc
pushf
repnz
sub
aaa
rclb
pop
hlt
cmc
sub
pop
sub
adc
add
dec
mov
lret
pop
xor
pop
adc
out
mov
sbb
shr
addr16
int3
fstl
pushf
lods
mov
dec
popa
movsl
cmc
gs
adc
subb
sbb
les
sbb
aam
lea
push
cmpsb
sbb
pop
xchg
mov
in
mov
popf
cli
push
sub
mov
pusha
js
cmp
xchg
mov
xchg
andl
cmp
adcb
mov
data16
dec
pop
pop
cmp
js
jae
xlat
cmp
sbb
pop
loope
xchg
jno
mov
mov
bsr
jge
pop
out
xchg
push
pop
in
in
divb
ja
loopne
sub
bound
fidivs
imul
out
mov
dec
clc
add
cmp
outsb
jbe
ljmp
insl
test
inc
out
inc
mov
adc
or
mov
pop
fwait
cmc
jb
push
rclb
sub
push
xchg
xchg
insl
sahf
fsubrl
out
lret
add
loope
in
push
adc
shrb
xadd
sbb
sbb
cwtl
fs
push
ret
and
fbld
leave
hlt
das
cmp
cld
leave
repz
pop
fsubs
push
push
jbe
cltd
jge
movsl
nop
out
mov
dec
jb
mov
insb
shll
aam
ffree
jno
jne
adc
rcll
imul
mov
and
sbbl
lret
dec
and
imul
lds
in
push
mov
call
ror
or
mov
lret
stc
lods
pop
mov
aaa
inc
les
xchg
inc
rolb
mov
movl
dec
les
push
lds
inc
xor
fmuls
cmp
repnz
push
mov
and
cmpb
add
scas
popa
cmpsl
cli
pop
and
pop
mov
pop
dec
repz
popa
out
fiadds
sbb
neg
test
cs
mov
add
xor
pop
lret
outsl
jle
inc
cmpl
push
imul
add
out
inc
xchg
mov
push
lock
sar
das
rolb
pusha
or
out
mov
or
fdivp
pop
sub
fwait
out
lret
ja
pop
fldl
ljmp
repnz
leave
dec
pop
in
sbb
dec
mov
clc
gs
gs
add
add
xchg
mov
xchg
cmp
adc
sbb
or
fmull
adc
add
nop
orl
fs
cmp
xor
mov
cmp
lret
inc
popa
dec
jno
mov
loopne
aaa
rcr
inc
insl
lock
dec
notb
fistl
enter
add
jge
es
push
scas
fld
dec
movsb
or
sub
dec
sub
sub
ret
cld
adcl
stc
cmc
and
mov
cld
mov
fsts
lds
outsl
mov
push
lahf
or
out
stos
imul
enter
lret
jp
mov
cmp
sbb
pusha
stc
mov
cmp
mov
pop
dec
jecxz
or
lea
iret
je
dec
sbb
dec
pop
mov
fimuls
xlat
pop
mov
inc
cmp
pop
jae
lret
insb
adc
imul
leave
xor
xor
or
aam
fldt
mov
aas
and
pop
in
sbb
mov
mov
inc
cmp
cmc
shrb
movsb
or
sbb
enter
and
sbb
sub
aas
cmp
daa
loop
ds
mov
jmp
rclb
xchg
subl
test
bound
sub
or
addl
dec
mov
jne
cmc
xor
sbb
pop
pop
call
addr16
mov
addr16
mov
jg
mov
mov
mov
sbb
rorb
mov
outsb
int
cld
sub
out
sbb
arpl
mov
bound
cmp
sub
sahf
mov
sub
out
add
add
cmp
mov
call
sbb
jl
orl
movl
jmp
test
mov
mov
mov
jne
adc
add
mov
and
cld
mov
mov
ja
in
aas
fstps
add
push
lods
jp
mov
outsb
es
or
xlat
mov
imul
aas
push
fdivs
and
cmpsl
icebp
lds
outsb
mov
add
jb
cld
dec
xchg
and
sub
cmp
cmp
insl
mov
adc
fidivrs
dec
sbb
ljmp
jnp
ds
push
rcrb
sahf
lea
in
mov
scas
and
fcoml
push
scas
imul
mov
cs
pusha
mov
pop
and
stos
out
mov
jg
dec
mov
and
shl
cmovno
loope
clc
mov
js
adc
popa
push
shlb
lcall
push
jno
cli
pushf
lret
mov
mov
mov
shll
xor
lock
test
clc
cmp
inc
jne
cmpsl
mov
pop
cmc
in
sbb
cmp
iret
les
mov
test
xlat
push
pop
cmp
inc
cmp
mov
jbe
cmp
xor
mov
into
push
stc
out
sbb
kmovd
ds
in
pusha
ds
pop
push
mov
imul
pop
jg
stc
orb
loop
xor
movsb
mov
xchg
ds
cmp
repz
xchg
adc
xchg
mov
mov
adc
pop
inc
fld
loopne
mov
xor
jg
add
insb
inc
stos
xor
sub
mov
icebp
jns
mov
jb
inc
das
out
push
dec
pop
sbb
adc
movsb
inc
pop
jo
and
dec
lock
mov
jnp
jae
sub
jecxz
int
or
jbe
jge
lds
inc
jns
sahf
mov
pop
dec
xchg
sti
mov
lock
xchg
popa
xorl
xor
sub
sbb
les
pop
test
xchg
mov
icebp
pop
mov
push
fmuls
sbb
lret
lea
push
sbb
sub
jnp
and
flds
fst
shll
std
aad
xlat
popa
push
cmpsb
js
shrl
cmp
stos
popf
std
test
jg
gs
add
icebp
xchg
xchg
mov
int3
mov
jne
sbb
and
sub
into
or
jno
dec
int
incl
lret
mov
pop
pop
repnz
aas
sub
cmpsl
push
add
jecxz
loope
stos
ljmp
imul
jl
mul
movb
dec
adc
inc
jg
gs
xor
xor
outsb
pop
pop
call
iret
loope
hlt
frstor
jl
rep
sbb
inc
mov
in
out
sbb
mov
cld
mov
cs
sbb
test
jbe
xchg
mov
incl
sbb
imul
xchg
shl
mov
or
call
in
in
lds
pop
lret
push
xor
stc
leave
fisubs
jmp
xchg
in
enter
call
cmp
imul
data16
inc
push
inc
mov
js
iret
jge
fcompl
js
cmp
aas
mov
cmpsl
sbbl
lcall
cwtl
ret
mov
test
enter
push
cmpsb
pop
xchg
inc
loop
pop
cwtl
inc
xchg
inc
adc
mov
xchg
outsl
lds
imul
push
jo
inc
mov
loope
ss
push
mov
sub
push
dec
adc
add
notl
mov
add
pop
inc
pop
xchg
dec
ljmp
lret
into
inc
out
out
insl
or
sbb
arpl
jecxz
mov
adc
pop
mov
mov
cmp
sub
xor
push
nop
sub
in
cmpsl
mov
jmp
ja
fstpl
cmpsb
push
push
adcb
inc
ret
sarb
into
dec
scas
dec
ret
mov
iret
sub
inc
in
shlb
sub
lods
mov
std
pop
adc
stc
add
xor
pushf
test
xor
sub
push
mov
mov
sub
fbld
sub
cmpsb
cltd
jle
popa
xchg
xchg
popa
xchg
insb
pop
mov
cmc
cmpsb
xor
cmp
jmp
jbe
fwait
cmp
sub
and
aas
test
cmp
pushf
sub
stos
mov
loope
push
out
cs
cmpsb
loope
lds
fwait
lea
loope
cmp
add
pop
popf
out
mov
out
sbb
jl
rclb
mov
sbb
mov
fcmovnbe
jns
stos
dec
aad
hlt
pop
in
pop
jb
ficomps
and
xor
xchg
popa
sti
in
andb
pop
mov
sub
enter
push
cs
sub
and
ds
cmp
pop
xchg
fcomi
fwait
xchg
shl
mov
sub
xchg
add
rolb
ficomps
stos
add
shrl
jecxz
or
cltd
or
pop
xor
xchg
pusha
ds
adc
cmp
aad
es
outsl
aaa
adc
stos
ljmp
jbe
push
cmp
or
rclb
in
add
and
mov
inc
dec
xlat
testb
ja
loop
in
mov
jno
push
test
inc
xor
in
imul
xor
pop
pusha
sub
push
or
cwtl
sub
das
arpl
and
jo
mov
fisttpl
jmp
scas
add
scas
sarb
push
mov
cltd
lea
and
sub
mov
fnstsw
aaa
js
cmp
and
jge
mov
int
das
sti
dec
shrb
out
cmp
fcmovne
mov
jp
shll
cmp
jge
ja
add
mov
fs
lahf
pop
ljmp
sbb
pop
lods
cmc
ret
das
mov
push
lcall
and
and
jae
add
and
mov
pop
or
mov
xor
pop
cmpsb
into
pop
pop
pop
mov
adc
enter
pop
lods
mov
pusha
push
xchg
or
out
fisubl
stos
das
fdivrs
mov
xchg
decb
jae
arpl
jmp
imul
lods
cmp
lret
fsubrl
xchg
loope
repnz
mov
mov
cmpb
cmp
int
inc
mov
loop
aam
aam
and
xchg
out
mov
add
in
int3
or
push
adc
mov
hlt
jne
les
test
repz
xchg
inc
leave
rcr
fildll
ss
or
fs
mov
mov
jne
test
bound
jne
adc
sub
fildll
or
int3
mov
push
mov
cmpsb
test
sbb
aad
lods
and
rcr
jge
gs
mov
out
and
mov
cmp
dec
mov
cli
fnsave
jnp
add
out
je
lcall
movsl
mov
and
dec
sbb
mov
aad
je
push
rorb
sub
cmp
add
mov
adc
fsubrl
loop
aaa
insb
adc
xor
lret
cld
in
out
out
je
pop
out
arpl
into
scas
push
and
inc
pop
mov
xchg
leave
leave
sub
repz
xor
xchg
cwtl
loopne
aad
xchg
sub
lock
prefetchwt1
push
sbb
push
pop
sub
xor
ljmp
ds
pop
divl
mov
push
cmc
ror
xlat
mov
adc
and
adc
add
test
inc
sti
fisubl
mov
push
push
inc
lahf
out
jmp
dec
and
leave
sub
cmpsl
mov
xor
adc
insb
outsl
push
add
mov
vaddss
mov
shlb
in
mov
sub
xchg
push
movsl
sub
push
leave
and
test
rolb
flds
inc
add
jne
fsts
add
xchg
push
aam
movsb
mov
pushf
pop
leave
lods
out
fbld
inc
lods
adc
into
mov
clc
lahf
fwait
aam
inc
cmp
aam
pop
inc
test
pop
push
or
push
scas
mov
sub
push
mov
mov
test
sub
rol
add
rorb
fisttps
in
sahf
fdivl
xor
jecxz
add
push
std
cmp
cmp
hlt
mov
mov
sti
clc
cltd
popf
add
fcoms
push
movswl
jle
mov
jbe
pop
imul
adc
add
dec
add
leave
popa
repz
pushf
push
outsl
jne
movsl
sti
jle
je
popa
cmpsl
stos
stos
jae
rolb
xchg
adc
in
jo
pop
sbb
add
xor
inc
add
jle
iret
ret
lcall
sub
sbb
call
inc
sbb
ss
std
in
xchg
inc
pop
cmp
xor
or
mov
lods
sbb
mov
cmpsb
xchg
scas
xorl
ja
dec
mov
xchg
push
pop
sti
dec
mov
js
push
sub
aas
out
xlat
adc
sub
test
cmp
stos
popa
sub
mov
jle
mov
into
sarl
dec
push
jl
jnp
notb
add
jbe
jb
ffreep
aad
jmp
nop
mov
lods
pop
sahf
faddl
das
add
cmp
sbb
push
outsb
aam
shrb
mov
fstps
rcrb
push
jp
pop
out
jns
shrl
xchg
or
int3
popa
fstps
in
jg
les
repnz
test
mov
out
cwtl
inc
xchg
stos
mov
lcall
add
and
loope
jo
shll
jle
jbe
or
jno
test
cmp
loopne
scas
test
xchg
xchg
and
dec
xchg
adc
jns
dec
xchg
enter
sahf
icebp
loop
mov
cmp
inc
ljmp
int3
imul
lcall
cmp
mov
stos
es
in
push
scas
cltd
aad
jbe
gs
fiaddl
insb
lcall
jbe
push
stc
gs
repz
sub
loop
subl
jae
dec
and
mov
xchg
push
and
cs
and
push
pusha
adc
sahf
push
xor
les
test
xor
cmp
pop
popf
cmp
jge
test
imul
adc
xor
jecxz
inc
pop
jl
dec
loop
imul
xlat
imul
dec
and
repz
pop
inc
mov
es
mov
aam
fnstsw
adc
xlat
test
cwtl
notl
in
cmp
jmp
cld
and
lcall
movsb
aaa
cli
dec
cmc
dec
or
sbb
sbb
repz
ja
push
push
arpl
cwtl
push
imul
int3
addr16
inc
fwait
pop
cmp
out
cmpl
dec
movsb
push
inc
xchg
ret
mov
test
popa
mov
mov
insl
inc
lret
mov
xchg
xchg
loop
std
xchg
pop
in
xchg
mov
int
stc
movsl
mulb
add
jbe
pop
mov
dec
js
xchg
pop
lahf
push
xor
or
pop
outsb
out
rol
ja
leave
mov
add
sbb
arpl
mov
fcmovb
xor
cmp
daa
ja
imul
outsb
cs
inc
nop
loop
mov
pusha
jbe
iret
mov
loop
fwait
adc
pop
sub
mov
cmpsl
push
lcall
hlt
enter
xchg
cmp
lahf
fwait
jge
imul
sub
popl
pusha
jns
ss
and
pop
lcall
mov
insl
daa
scas
push
inc
mov
mov
cmp
cmpsb
adc
loopne
xlat
rcrb
inc
scas
push
loopne
enter
dec
mulb
icebp
or
or
add
ljmp
rcll
icebp
pop
pop
push
pop
mov
xchg
cmpsl
out
cmc
dec
inc
mov
cmp
dec
fildl
and
fidivrl
in
aas
pop
lahf
rclb
cmp
and
adc
cmp
ss
mov
push
xchg
pop
and
push
pop
roll
xor
jmp
lock
test
bound
fs
stos
fcmovnu
mov
cmp
add
jne
mov
mov
jg
mov
subw
andl
mov
cli
sub
push
addr16
std
mov
sbb
xchg
push
rcl
mov
or
lcall
in
adc
enter
mov
jnp
sub
mov
jg
aas
arpl
pushl
cltd
insl
jns
sbb
js
fstpl
sub
pop
cmp
test
bound
sbb
push
mov
mov
jecxz
lret
xor
jns
push
jbe
outsb
int
repnz
in
pop
sahf
xor
imul
cld
cmpsb
test
xchg
fwait
loop
addr16
cs
rolb
mov
in
xor
lcall
xchg
rol
or
imul
pop
fcmovnb
call
lret
push
ja
cmpl
icebp
pop
sub
cmpsl
xchg
aad
test
rorb
in
xchg
add
out
dec
notrack
mov
int3
push
mov
es
sbb
inc
ret
test
repz
mov
xchg
xor
xor
outsl
sbb
addr16
jns
jmp
sub
adc
and
xchg
dec
sub
pmulhw
mov
lods
mov
pop
push
sub
mov
jle
loope
mov
mov
adc
add
add
pop
cmpsl
jb
push
test
cmp
xor
pusha
and
negl
xchg
out
das
fadd
xor
mov
pop
jge
mov
rcrl
cs
jecxz
and
jg
xchg
lods
sub
cmpsb
cs
fistl
xchg
sbb
test
es
mov
jmp
adc
addr16
fs
cmp
adc
jmp
or
mov
fnstsw
std
call
mov
ds
out
inc
outsl
sbbl
xchg
out
push
lcall
jmp
cmp
fistl
and
jnp,pn
jne
dec
mov
or
cs
and
sbb
enter
dec
jp
inc
mov
cli
pop
in
xchg
pop
vmwrite
jmp
jnp
lahf
insl
xchg
sub
mov
mov
mov
xchg
push
test
daa
dec
es
and
fs
sbb
mov
cld
cld
stos
xor
xchg
dec
popa
sahf
aad
stc
mov
mov
jns
push
or
fnstcw
in
scas
pusha
adc
adc
or
inc
inc
popa
adc
in
js
push
icebp
mov
fs
or
fidivl
stos
cmp
aas
mov
mov
adc
jns
cli
pop
gs
mov
mov
xchg
jl
lret
sub
js
xorl
ja
lret
sti
movsl
push
std
leave
xor
inc
int
sub
xor
in
fisubl
ds
cmp
addr16
sbb
push
mov
sahf
in
xor
mov
loop
xor
push
loope
es
test
jno
dec
or
pop
xchg
imul
inc
push
pop
pushf
les
fisttpll
cltd
and
les
outsb
lret
push
loop
inc
or
jp
mov
outsb
mov
test
int
cmpsb
mov
inc
mov
fistl
leave
pop
lcall
pop
sub
jl
push
testl
pop
in
inc
cmpsl
gs
lcall
xchg
dec
faddl
mov
roll
pop
mov
jo
mov
gs
sub
jbe
xor
mov
xor
inc
xchg
push
lea
cli
imul
lahf
adcl
push
dec
pop
ja
xchg
les
pop
push
mov
jnp
sahf
xlat
jno
in
mov
push
std
fs
test
push
outsl
es
and
jge
mov
mov
or
cmp
dec
inc
arpl
mov
daa
imull
addr16
sti
xchg
or
in
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
xorl
mov
mov
mov
xor
add
mov
mov
xor
orl
push
xor
mov
mov
subl
add
mov
mov
subl
mov
xorl
mov
mov
mov
subl
mov
add
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
sbb
mov
sbbl
xor
and
mov
add
movzwl
xor
mov
movb
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
pushl
pushl
call
cmpl
jb
lea
mov
movl
cmpl
je
cmpl
jle
jmp
push
pushl
pushl
pushl
push
pushl
call
xor
or
dec
mov
jmp
mov
add
mov
xor
subl
add
sbbl
mov
movl
cmpl
je
cmpl
jl
jmp
push
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
movl
push
movl
cmpl
je
cmpl
jg
jmp
push
call
xor
or
dec
mov
jmp
movl
mov
push
mov
andl
xor
or
mov
sbbl
push
add
jmp
mov
movl
mov
inc
cmp
movl
jb
not
mov
orl
xor
sbbl
add
movl
jmp
sbb
mov
subl
mov
sbbl
xor
orl
mov
orl
add
movzwl
mov
and
mov
movzwl
addl
xor
add
inc
mov
movl
mov
inc
mov
mov
movl
cmp
jne
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
push
push
call
jmp
mov
mov
sub
xor
add
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
pushl
push
pushl
push
call
jmp
mov
xor
add
neg
mov
or
movl
movzbl
or
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
xor
mov
adc
mov
adcl
xor
orl
add
mov
mov
mov
je
add
mov
andl
mov
xor
adcl
xor
sub
notl
sub
xor
sub
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
adc
mov
subl
lea
movl
mov
mov
mov
add
adcl
imul
mov
xor
mov
xorl
mov
movl
add
movl
and
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
jmp
xadd
dec
push
dec
dec
sar
mov
mov
jbe
dec
jnp
xlat
sahf
jnp
jl
mov
lds
test
enter
cwtl
sbb
sahf
inc
dec
cmp
add
pop
jmp
fdivr
out
or
aaa
or
outsb
fadds
adc
lea
je
inc
ret
dec
push
pop
mov
adc
adc
js
shlb
ss
fnstsw
push
pop
inc
inc
cmp
cmc
into
mov
mov
rorb
push
jecxz
dec
add
add
sbb
repz
sarl
mov
inc
shll
fwait
xor
rolb
adc
ffreep
push
sub
sub
rep
or
mov
jbe
xor
int3
pop
xchg
loope
aad
jg
push
xchg
sub
movsb
fdivs
std
loope
insb
imul
pop
dec
jo
mov
or
mov
mov
js
call
and
test
rcrl
mov
je
adc
rcl
sbb
and
nop
movsb
flds
adcl
hlt
ret
fildl
out
bound
sbb
inc
cltd
push
out
cmp
and
push
push
loop
ret
add
ds
lcall
mov
adc
inc
or
fcoml
mov
adc
fiaddl
mov
pop
bound
data16
notb
xor
xor
scas
jle
jae
in
push
sti
push
mov
cwtl
ret
jmp
jno
pop
dec
addr16
bound
add
adc
cmc
fstps
add
adc
fimuls
push
and
xchg
jg
ljmp
xchg
pop
shr
dec
fldcw
fwait
inc
xchg
popf
or
sub
jno
decl
sti
sub
adc
popa
movsl
fistps
jmp
mov
pop
adc
repnz
cmc
pop
fs
jecxz
insb
xchg
mov
mov
mov
pop
insl
dec
lcall
sub
lods
sbb
dec
or
test
cld
and
sbb
loopne
cs
push
push
pop
jae
push
repz
lcall
pop
pop
leave
pop
cmc
js
das
push
mov
fldl
lea
ss
inc
xchg
add
pop
and
cmp
inc
push
jmp
daa
dec
sub
in
ret
sbb
pop
dec
fistps
movsb
fcomps
cltd
mov
mov
in
scas
mov
jns
test
call
mov
std
das
loope
ffreep
xchg
cld
imul
xchg
xchg
leave
inc
cltd
xchg
movsl
lock
adc
jecxz
lret
ja
xor
divl
xor
test
adc
pop
cmp
push
iret
lea
test
mov
lods
hlt
sbb
sarb
repz
xchg
pop
sarb
sub
xchg
adcb
push
lret
xsavec
dec
mov
pop
int
mov
scas
fs
and
mov
jmp
addr16
push
gs
out
fstpt
pop
add
xor
in
sbb
mov
push
testl
xchg
fdivrl
add
pop
outsl
js
les
cmp
inc
fstpt
iret
sub
out
sub
in
sub
cmp
xor
dec
mov
in
xchg
ljmp
into
faddp
int
jbe
into
in
or
insb
pop
lea
call
mov
sub
or
stc
sub
cmp
push
rol
clc
cmp
add
mov
shlb
xor
jge,pn
and
lods
push
jno
pop
jno
lcall
jmp
std
mov
mov
cmpl
push
out
jnp
outsb
xor
xchg
or
xor
loope
mov
out
aam
lret
sub
and
into
subl
cld
jg,pt
aaa
les
pop
jl
mov
adc
push
pop
test
cmp
cmpsb
aad
lcall
sar
push
adc
imul
int3
and
test
jmp
cmp
mulb
das
std
leave
push
and
leave
lcall
ficompl
push
fwait
lret
shrb
add
dec
idivb
daa
and
xchg
inc
out
orb
jbe
gs
sbb
daa
fisubs
cmovp
add
and
mov
mov
jo
push
inc
jbe
or
add
rclb
sahf
data16
mov
std
jbe
sar
popa
aam
xchg
push
push
mov
jbe
jns
cmp
push
and
dec
xchg
enter
cmp
jbe
insb
sbb
or
xchg
scas
and
push
mov
pushf
jne
mov
sub
fdiv
fwait
xchg
rcll
xor
dec
adc
pop
ljmp
push
into
dec
xor
add
add
sub
xor
loopne
stc
and
mov
cmp
rolb
cmp
lods
insb
out
push
cmp
cmpsl
pop
jbe
imul
test
aad
xchg
jno
je
std
popf
pop
arpl
push
icebp
cmp
sbb
fwait
ret
sbb
fisubrl
repz
and
inc
fimull
xlat
add
fildll
ror
push
and
sub
out
xchg
mov
cmp
jmp
mov
dec
dec
cmp
mov
inc
sub
mov
leave
mov
xchg
push
fs
inc
jae
pop
lcall
xchg
leave
sub
mov
outsb
out
jb
loop
test
xor
lea
pop
sarb
jo
test
hlt
pop
test
cmp
test
dec
cmp
ja
dec
into
or
push
mov
push
pop
cmp
ss
fxtract
mov
mov
mov
pop
movsb
bound
mov
mov
std
call
stc
push
mulb
cmpsl
adc
gs
out
fbld
jbe
das
or
cmp
mov
and
inc
gs
push
pop
lret
ret
xchg
inc
jp
sbb
pop
add
lds
pop
ljmp
xor
andl
push
dec
cmc
pop
daa
xchg
pop
pop
sbbb
sub
fidivs
lahf
cmp
jg
aaa
adc
aam
mov
jp
icebp
lods
lods
bound
sbb
aam
pop
and
xchg
dec
into
push
scas
sub
and
cli
test
out
icebp
xorl
mov
and
rorl
mov
add
pusha
mov
and
or
mov
and
jg
popa
jne
xchg
insl
jne
lret
lods
arpl
scas
out
mov
mov
sub
fimuls
and
stc
jns
out
xor
out
shrb
pop
xor
inc
cmp
xchg
es
mov
leave
ffreep
xor
loope
adc
add
int
inc
fcoml
fimull
push
dec
adc
xor
movsb
xchg
stos
setge
pushf
ret
jnp
jle
cmp
or
sub
jl
or
inc
mov
cli
bound
aas
sub
dec
in
adc
movb
shll
sbb
negl
icebp
dec
pop
daa
jl
lock
fisttps
popf
mov
sub
sub
lret
pop
je
and
pop
jecxz
pop
fxch
jge
or
lcall
nop
lds
movsl
sub
and
mov
arpl
shl
or
inc
stc
xchg
fstl
into
fwait
outsb
call
mov
pushf
cmp
movzwl
shll
or
fwait
pop
shl
inc
mov
shlb
cmp
mov
clc
movmskps
xor
test
std
sub
mov
loop
lods
ret
cmpsl
cltd
add
jbe
xchg
inc
ret
fs
push
je
push
mov
xlat
rcr
add
cmpsl
imul
popf
cltd
stos
inc
mov
push
push
in
lea
leave
insb
xchg
inc
pop
ret
push
lods
mov
inc
mov
and
bound
repz
mov
sbb
in
lret
jno
imul
push
je
inc
and
je
out
cmc
mov
push
sbb
lret
xchg
test
push
inc
push
mov
jnp
mov
js
fistpll
mov
pushf
push
sarl
cmpsl
fs
cwtl
movsl
jnp
ss
mov
jae
mov
sbb
push
movsl
fidivl
and
mov
and
arpl
add
loop
inc
addr16
cli
push
test
and
mov
lds
js
test
or
xchg
push
cmp
ds
pop
sahf
add
popa
adc
jle
mov
or
insl
jecxz
jae
inc
mov
add
in
lcall
lret
xor
add
xor
sbb
notb
mov
sbb
enter
stos
adc
outsb
cmp
push
and
and
xchg
call
sbb
cli
sub
xor
leave
cmpsb
ljmp
arpl
popa
adcb
stos
call
mov
sub
clc
mov
jbe
fiadds
inc
or
lahf
sahf
mov
add
xlat
out
rolb
hlt
jecxz
xor
imul
pop
aad
cmpsl
mov
or
mov
shrl
mull
or
imul
ljmp
fcoml
or
lret
sbb
pop
pop
mov
loope
out
in
daa
je
sub
jle
sbb
or
cld
cltd
aas
sbb
loop
cmp
cmp
clc
cmp
popa
test
outsl
sub
pop
dec
outsl
sbbl
push
loop
sub
addr16
mov
addr16
add
and
xchg
stos
push
cmp
cmp
ficoml
mov
and
lock
dec
mov
pop
out
scas
rclb
imul
in
cs
inc
push
ror
jns
dec
rorb
mov
push
jb
ljmp
mov
inc
scas
pop
mov
fidivs
call
xor
loop
gs
rcll
pop
or
sub
popa
fcmovbe
test
aam
bound
insb
lcall
jle
std
dec
stos
jno
cmp
cmp
js
jae
rcrl
int3
loop
repnz
dec
xor
cmp
jecxz
and
inc
aad
mov
pushl
outsl
jle
inc
lods
push
ficomps
mov
lods
pop
loopne
imul
fistpll
xchg
jno
xchg
pop
aad
test
inc
std
mov
or
mov
mov
mov
shrl
xor
dec
in
jge
pusha
mov
outsl
ret
mov
inc
ljmp
stos
popf
ja
shll
pop
push
push
xchg
in
mov
rcll
outsb
call
imul
movsl
stos
sub
aaa
pop
and
push
adc
jmp
daa
pop
pop
lahf
jb
es
cwtl
jae
ja
jns
adc
jno
int3
push
call
scas
add
in
test
xor
into
xchg
repnz
jg
repnz
push
stos
add
test
decb
cmp
pushf
je
push
and
fwait
pop
jle
mov
in
aas
pop
cli
push
xor
cmp
push
pop
adc
mov
gs
push
sub
adc
sbb
and
mov
add
inc
jg
sub
sub
jmp
mov
lods
insb
outsl
adcl
pop
sbb
test
sub
sbb
mov
push
aad
or
push
bound
pop
aam
jae
mov
decl
aas
out
jmp
sub
and
es
bound
add
imull
scas
cs
mov
pop
xor
mov
in
adc
mov
jmp
les
test
jp
push
push
sbb
pop
cli
dec
into
add
dec
sub
clc
js
fwait
mov
clc
mov
adc
sahf
sbb
jl
and
nop
and
mov
sub
xchg
rorb
cld
mov
lds
inc
in
inc
call
stc
lahf
add
mov
dec
cmc
and
inc
fadds
mov
xchg
test
ss
pop
stos
pop
into
push
out
jecxz
jae
rcrb
mov
test
inc
lock
pop
testl
adc
inc
cmpsl
adcl
cmp
pushf
pop
cmp
push
or
mov
add
push
fdivrl
lcall
mov
cmpl
push
clc
mov
push
test
stc
mov
pop
out
shll
fwait
clc
sbb
test
iret
xchg
adcl
ss
inc
fisubs
xor
ror
mov
sub
push
cmp
pop
aam
test
sahf
lods
push
push
repz
dec
rol
adc
cltd
jmp
inc
sahf
xor
mov
dec
mov
test
clc
js
cmp
mov
std
iret
call
lock
mov
add
mov
pop
nop
mov
mov
pop
dec
outsb
cli
cmp
and
inc
xchg
adc
gs
out
popa
out
xchg
sub
mov
fsubl
push
or
cwtl
scas
adc
or
js
cli
adc
or
inc
ds
sbb
push
ja
nop
inc
xchg
aaa
cmpsl
add
mov
mov
mov
xlat
xor
or
ror
rcll
mov
inc
xor
scas
in
fs
push
test
fcoml
cmpsl
pop
iret
or
scas
aad
clc
les
inc
cmpsl
adc
inc
mov
insl
lcall
mov
cmpsb
cmp
or
pop
aas
lret
push
mov
je
aad
mov
mov
jmp
jb
dec
xor
ret
jno
aas
sbb
mov
pop
xchg
mov
cmc
lock
lret
shlb
sub
sti
cmpsl
fnstcw
dec
les
testb
and
insl
bnd
push
mov
adc
in
sbb
inc
xlat
fs
add
les
fildll
fidivl
lock
out
jmp
add
xor
adc
loope
adc
mov
enter
add
adc
hlt
in
xchg
cwtl
mov
in
jmp
loop
add
adc
xor
mov
in
ja
gs
movsb
cmp
negl
arpl
mov
imul
mov
fwait
scas
jmp
adc
and
mov
mov
mov
jmp
xchg
arpl
les
push
mov
int
jnp
cmp
sarl
or
scas
mov
sbb
push
sbb
xor
arpl
or
aam
cwtl
mov
mov
out
fmulp
repz
add
aas
mov
int3
out
out
pop
call
jge
repnz
xlat
jecxz
push
sbb
jp
jne
adc
push
mov
cld
push
xor
cli
cld
and
inc
lret
iret
push
sub
data16
in
push
sub
aad
test
out
mov
dec
in
pop
cmp
pop
mov
test
push
push
jg
out
loop
jmp
mov
mov
ret
jbe
sbb
or
inc
add
and
add
mov
rcl
leave
mov
jns
add
or
sub
pop
pop
push
inc
test
incb
push
lods
cmpsb
xor
fwait
and
push
sub
xor
mov
ja
sub
addr16
mov
es
sub
xor
mulb
in
into
test
mov
fadd
pop
jp
and
in
leave
adc
dec
cmp
popf
out
pop
push
je
sbb
aaa
loop
mov
sahf
and
jg
mov
mov
ss
jle
fisttps
inc
fcmovne
iret
loopne
notl
adc
sbb
jp
cmp
psubsb
fdivrs
dec
mov
fdiv
xor
mov
loop
sarb
loope
imul
leave
sub
dec
movsl
daa
js
aaa
cltd
jl
mov
lea
cmc
xchg
enter
pop
mov
inc
cmp
adc
sbb
clc
sub
and
jbe
cmpsl
lock
sahf
into
dec
mov
outsl
xchg
mov
rolb
cmp
aas
movsb
nopl
nop
sahf
cmp
add
jg
jnp
push
push
sub
mov
dec
sub
pop
jae
sbb
dec
push
dec
mov
adc
stc
cwtl
rcrb
mov
xor
loop
fs
xor
fstpl
sahf
inc
in
mov
into
imul
jp
jo
push
sbb
mov
xor
andl
ds
dec
or
ret
xchg
mov
xchg
and
sbb
aad
pop
push
mov
pop
rcrl
jp
mov
call
les
test
push
sub
lods
idivl
sti
shll
lret
push
push
mov
adc
xor
mov
repnz
xor
and
xchg
lahf
cli
repnz
cltd
cmp
mov
rcll
in
pop
or
mov
dec
pop
mov
adc
ljmp
mov
mov
mov
add
fwait
add
pop
xchg
cmc
xchg
sbb
cmp
adc
push
inc
gs
push
jecxz
xchg
incl
cmc
pop
int3
add
pop
ss
mov
push
test
repz
mov
mov
aad
add
push
add
inc
adc
pop
xor
int3
roll
loope
lret
pusha
call
fwait
mov
mov
pusha
lcall
mov
adc
ds
mov
mov
out
aas
in
ret
fwait
adc
fisubrs
int
adc
test
push
ss
fmull
and
jmp
scas
lea
push
loop
xor
add
aaa
andb
cmpsl
loope
shrl
lea
ss
sahf
add
push
rcrb
pop
lods
int
sbbb
cs
into
or
fmul
dec
inc
xor
ja
jle
xor
rorl
xchg
pop
add
jg
test
imul
xor
fldcw
and
inc
pusha
inc
gs
aam
add
lds
mov
sub
sub
fldt
out
add
dec
popf
lret
scas
ljmp
mov
es
mov
sbb
leave
js
pop
push
pop
pop
aaa
pop
fbstp
xchg
add
mov
out
sub
dec
add
ret
mov
sbb
adc
inc
inc
xor
push
xchg
adc
in
loop
movsb
mov
test
inc
daa
stos
jne
pop
lds
jge
pop
insl
ret
stc
jne
adc
std
adc
les
mov
std
cmp
add
cmpl
inc
sub
mov
sahf
xchg
iret
inc
scas
xchg
lock
inc
cwtl
pop
lds
lret
pop
jg
jl
repnz
mov
adc
lock
cmp
pop
out
inc
mov
add
icebp
inc
je
sbb
jmp
fisttpl
fnstsw
xchg
mov
daa
shr
sti
out
adc
lret
into
lret
dec
xchg
pushf
cmp
push
daa
fsubr
pop
loop
pushf
cmp
popf
mov
lret
push
dec
movsl
daa
jne
test
jne
inc
repz
xor
fdivs
xchg
rcrl
jb
add
ds
jl
imul
xor
dec
pop
xor
xchg
inc
jnp
xchg
dec
loope
icebp
hlt
add
ret
lahf
push
lret
into
xor
js
xor
add
test
lods
sbb
nop
jns
aas
mov
mov
jg
aaa
stos
add
xchg
ret
mov
sar
mov
movsb
inc
lock
jmp
adc
outsb
jae
sub
mov
in
sbb
cld
xchg
push
sbb
lret
ret
incb
pop
cmp
fwait
stc
idivl
addr16
loopne
jae
test
mov
stc
hlt
adc
enter
and
and
mov
fdivs
or
add
add
stos
cmp
mov
pop
xchg
dec
roll
sbb
jg
out
jno
orl
xchg
mov
push
push
ret
mov
mov
add
lds
lea
add
flds
test
repz
push
xor
cwtl
adcl
loope
orl
pop
movsl
data16
mov
cltd
dec
cmp
mov
mov
jne
sarl
pop
in
mov
pop
mov
mov
testb
fisubrs
push
add
lds
and
mov
loopne
loop
sbb
lahf
mov
mov
sbb
mov
imul
mov
jle
cmp
cmp
in
adc
cmpl
pop
insb
in
out
fwait
or
cmpsl
movl
rcrb
xor
sbb
inc
mov
xchg
into
mov
int3
mov
dec
or
xchg
clc
dec
xor
pop
mov
shlb
and
orb
test
mov
pop
or
jnp
xlat
pop
pusha
xchg
pusha
movsl
mov
popf
mov
mov
mov
mov
push
pop
push
mov
push
inc
in
mov
nop
insl
std
xchg
std
lcall
sub
sub
call
xor
xor
dec
shr
mov
mov
das
dec
imul
pop
pop
push
lcall
aaa
out
outsb
sbb
or
jl
add
xchg
sbb
and
in
mov
and
and
xchg
aad
call
into
inc
add
jnp
mov
mov
inc
shlb
push
je
sub
add
cmp
xchg
mul
push
inc
imul
subb
dec
jp
lcall
insl
adc
popf
aaa
loope
mov
ljmp
lock
aas
sub
jo
sbb
stos
jg
push
mov
or
mov
stos
test
ficoml
mov
mov
jle
mov
pop
and
in
mov
lds
mov
ljmp
inc
fmul
ret
push
cmp
mov
or
stos
fcoms
enter
or
pop
dec
ficompl
sti
lods
faddl
cmp
pop
fistpll
inc
aas
mov
fidivrs
and
popa
out
fildll
shll
jle
iret
push
call
fsubl
push
push
test
lods
dec
pop
in
pop
dec
xor
mov
jecxz
mov
add
dec
dec
sub
lods
shll
les
add
mov
cmp
int3
jecxz
mov
pop
dec
icebp
bound
jno
popa
cmp
ja
lret
std
lret
rcrl
adc
add
pop
jmp
mov
xchg
jg
es
dec
and
jbe
pop
jg
sub
push
adc
dec
loopne
inc
sbb
and
dec
xor
sbb
imul
xchg
mov
fsub
adc
popa
xchg
pop
insb
jle
jp
inc
ficomps
push
repz
jecxz
sbb
je
jmp
pushl
sti
aaa
xor
scas
stc
jl
push
out
lods
jge
lahf
jne
xchg
adc
dec
lods
pop
push
xchg
fcompl
adc
data16
pop
push
iret
or
scas
or
sub
and
popf
popf
mov
cmp
cwtl
mov
sub
jecxz
je
cmpsb
dec
mov
xor
test
aaa
jp
jno
cmpb
xchg
pop
sub
test
xchg
cmpsl
adc
int3
icebp
push
dec
adc
xor
imul
aad
sub
dec
fs
int
sub
mov
jnp
inc
mov
sahf
inc
and
into
inc
dec
ljmp
pop
test
cmpsl
out
dec
faddl
jns
dec
stc
and
jmp
movsb
bound
mov
rol
cmp
sbb
add
data16
je
orb
ja
daa
pop
insb
hlt
xor
pop
popf
adc
ljmp
pop
loopne
fsub
cltd
std
out
mov
xchg
fisttpll
test
push
xchg
mov
mov
jl
cld
mov
add
daa
in
cmp
stos
mov
and
sub
and
pop
mov
push
or
gs
mov
or
pop
sti
sbb
daa
jne
cs
jl
jne
out
test
jb
push
mov
cli
lret
insb
sbb
lret
out
sbb
mov
jl
and
push
dec
loop
idivb
inc
sbb
xor
push
ret
insl
divb
lahf
mov
test
movsl
mov
aas
fwait
xor
pop
stc
lods
dec
mov
cwtl
mov
push
ljmp
or
cmpsb
lods
fst
imul
adc
jno
push
mov
mov
leave
mov
fdivs
xor
adc
dec
or
add
ucomiss
cmp
lret
sub
sub
roll
negb
inc
or
movlps
mov
sub
mov
addr16
incl
ror
mov
jmp
sub
inc
or
cmc
mov
fs
repnz
shlw
lret
inc
pushf
xor
in
jno
jne
jle
mov
push
shlb
add
ret
xor
adc
lods
ret
jge
mov
or
dec
jle
mov
dec
xor
xchg
dec
dec
inc
cmp
push
test
lea
iret
sahf
cmc
push
fistps
jbe
and
push
adc
cld
andl
push
imul
jno
lods
enter
roll
and
pop
rcr
cld
sub
cld
aam
movsl
ljmp
fistpll
mov
mov
mov
das
dec
pop
imulb
daa
std
psubw
enter
push
mov
pop
mov
lock
adc
loop
jg
mov
adc
scas
stos
cwtl
mov
ret
mov
insl
dec
lret
fnstcw
ja
ret
loop
inc
insb
mov
sbb
shrb
sbb
fwait
jle
out
fcoms
dec
mov
pop
cltd
mov
aad
fs
int
loopne
jns
mov
vpsubsb
in
sbb
pop
andb
pop
imul
loopne
cld
sti
sbb
xchg
mov
int
addr16
sbb
sbb
into
lret
pop
xor
gs
mov
fsubrp
in
fadd
xchg
ljmp
mov
cmp
ss
xor
hlt
cli
popa
in
std
sub
push
push
mov
or
sub
ror
mov
push
cli
shrb
out
lods
fsubr
jb
shl
pop
push
call
dec
sub
inc
adc
pusha
imul
inc
add
call
push
sub
mov
shlb
fildll
pusha
bound
sbb
rol
mov
dec
jne
rclb
inc
out
cmp
repz
push
jp
inc
inc
addr16
pop
cltd
xor
push
in
movsb
cltd
loopne
aaa
add
fnstenv
fimuls
add
inc
dec
lcall
push
jle
pop
mov
rolb
scas
jmp
mov
movsb
xor
sub
inc
clc
addr16
sub
dec
jl
lret
dec
adc
push
sbb
lock
inc
mov
add
push
jno
jl
push
xor
daa
test
in
fwait
push
scas
inc
arpl
xlat
cmp
inc
jmp
mov
or
push
mov
aad
iret
sar
sahf
dec
mov
mov
call
fmull
xor
mov
jnp
js
ss
ret
sbb
xchg
insl
xor
outsl
mov
stos
cmpsb
cli
jl
push
test
xchg
pop
pop
mov
xor
outsb
std
cld
inc
iret
push
dec
insb
cmpsl
rcrl
mov
scas
std
push
test
mov
ss
les
mov
stos
mov
sbb
sahf
mov
hlt
pop
mov
dec
or
mov
inc
in
pop
push
cmp
mov
push
dec
cli
and
cmp
push
lods
jg
std
test
out
lret
pop
sbbl
xor
cwtl
jle
push
cmp
aam
bndstx
push
push
inc
insl
mov
jp
flds
mov
faddl
xchg
cmc
outsl
adc
inc
outsl
pop
add
call
or
cmp
pop
ss
or
xor
pop
sub
cs
add
pop
mov
out
pop
jo
and
add
leave
mov
out
stos
sub
dec
mov
int3
dec
adc
fcomps
scas
fiadds
lock
sub
push
sbb
dec
and
imulb
out
push
stc
insl
lahf
inc
aas
mov
test
int3
xor
xorl
sub
pop
dec
filds
sbb
outsb
pop
sbb
lret
sub
shrb
lcall
and
jmp
mov
xchg
mov
or
push
jle
mov
mov
xchg
scas
sub
xchg
jp
loopne
mov
add
lar
out
cmp
xor
orb
in
mov
insb
dec
mov
lods
les
addl
adc
int3
in
into
jno
xor
sub
jne
xor
ret
dec
dec
lock
cmpsb
lret
mov
cmp
repnz
nop
aaa
lods
movsb
adc
mov
in
inc
not
lods
out
jl
fmul
cmp
lock
icebp
xchg
ret
mov
repnz
insl
pusha
push
xchg
mov
cli
or
push
sarl
loop
mov
sbbl
test
int
enter
out
bound
cld
cmp
test
jge
jmp
shll
add
lock
lret
lock
orb
fadd
add
je
adc
jl
inc
cld
adc
cmc
mov
and
dec
cmp
cmc
lret
dec
loopne
xchg
lods
adc
movsl
les
push
rcll
adc
pop
dec
add
jb
arpl
adc
xchg
mov
or
jne
xchg
outsb
add
cli
fidivrl
xor
lret
in
shrb
imul
xor
push
sub
adc
inc
inc
mov
aaa
cmc
xchg
adc
mov
or
fildll
mov
mov
xor
in
push
jnp
push
cld
stos
xchg
inc
std
mov
shr
push
pop
out
sbb
xor
xchg
and
adc
jle
outsl
or
cmpsb
sbb
repz
jns
and
sub
xchg
scas
cmp
fdivrs
pop
data16
call
xchg
sar
ds
gs
bound
sti
sub
xchg
jle
int
sarl
sbb
lds
mov
mov
pop
xor
in
rcrl
into
pop
inc
out
push
sub
loop
and
jne
mov
inc
xor
push
pushl
cwtl
inc
push
js
push
dec
mov
movsl
aam
sbb
aam
cs
xorl
sbb
mov
dec
jbe
lret
mov
inc
lret
push
xor
shll
or
stos
cmpsl
xchg
fildll
icebp
lock
sbb
repz
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
call
jmp
mov
incl
add
sbbl
or
movl
cmpl
je
cmpl
jle
jmp
pushl
call
mov
dec
mov
jmp
mov
add
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
addl
sub
add
sbb
mov
xor
mov
mov
sub
mov
add
xorl
xor
mov
movzbl
adc
mov
xorl
xor
add
movl
jne
jmp
mov
inc
sub
movzbl
xor
xor
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
xorl
xor
xor
subl
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
jmp
enter
jecxz
dec
push
add
xlat
jg
xchg
repz
jb
jnp
sahf
jnp
cwtl
nop
std
shlb
fadds
and
into
mov
add
gs
lods
cld
mov
cwtl
daa
je
mov
add
push
popf
inc
lahf
xchg
rcrb
lock
inc
test
and
sbb
xchg
jno
push
mov
jmp
push
aam
into
xchg
push
int3
sbb
mov
xor
flds
pop
rcr
mov
xchg
lods
mov
adc
adc
xor
xchg
or
push
add
scas
push
lods
push
mov
dec
mov
mov
leave
jo
or
and
hlt
sub
inc
divb
stc
sub
mov
sub
jmp
and
pop
xchg
out
cmp
or
cmp
mov
cmp
push
dec
out
movsb
mov
imul
nop
inc
sbb
jne
fwait
mov
sbb
aad
arpl
jle
sub
jl
cli
jo
add
sti
mov
add
xor
std
insl
jns
stc
sarb
sub
rolb
jle
mov
sahf
orl
insl
jge
lret
iret
mov
dec
movsl
je
mov
dec
outsb
scas
mov
xchg
push
aam
adc
jno
adc
icebp
push
mov
add
and
rcll
mov
daa
popa
in
addb
mov
dec
mov
push
test
ljmp
lcall
das
imul
pop
in
or
mov
pop
xor
cmpsb
scas
leave
adc
std
insb
pushf
out
cmpsb
pop
out
cmp
dec
das
ljmp
dec
stos
cmp
sbb
mov
and
fcoml
xor
pop
arpl
outsl
negl
cmc
imul
std
pop
jb
lea
push
hlt
in
insl
sbb
mov
repnz
idiv
int
vcvtsd2si
mov
add
jne,pt
cmc
or
aad
mov
ja
push
pop
daa
ficoms
insb
pop
fstl
jb
pop
sbb
shlb
icebp
bnd
lret
clc
cmpsb
out
inc
and
pop
adc
shl
scas
sbb
jecxz
pop
gs
cmp
jo
test
test
cmp
mov
xchg
outsb
ror
mov
lods
popa
sbb
dec
and
mov
sbb
andl
test
xor
data16
int3
mov
jae
sbb
mov
dec
xlat
cmpsl
ficompl
mov
imul
imul
int3
es
mov
mov
insb
inc
or
push
stos
or
xor
psubb
les
adc
mov
sbb
sub
out
movsb
scas
jle
insb
stos
fs
outsl
sub
xlat
push
adc
popa
fdecstp
mov
and
adc
pop
fstps
sub
jns
adc
lock
xlat
cltd
test
ljmp
xchg
xchg
aam
sahf
mov
popf
in
ret
jnp
call
or
fidivs
push
mov
stos
or
mov
sub
xor
ss
adc
out
push
mov
lock
pop
sbb
mov
inc
leave
lea
mov
gs
lock
sahf
stc
je
rorl
mov
pop
outsb
aam
mov
imul
dec
ret
nop
in
xor
push
popa
fdiv
repnz
ds
pop
int3
lret
or
fadds
mov
or
adc
bound
inc
xor
add
add
sbb
dec
or
shll
lea
repz
pop
push
or
jl
mov
movsb
mov
inc
or
and
dec
call
or
dec
idivl
test
dec
pushf
mov
lods
fidivl
mov
and
insb
data16
cmp
pop
inc
dec
xor
jmp
mov
cmp
mov
or
jle
test
cli
xchg
xchg
lret
das
into
call
add
testl
add
fistl
mov
insb
inc
adc
mov
clc
adc
sub
jbe
sub
xchg
sub
in
in
scas
sti
pop
fsts
inc
nop
lcall
adc
sub
cmp
xor
nop
outsl
rcrl
imul
add
punpckhbw
mov
test
jecxz
adc
dec
xor
dec
scas
sbb
icebp
inc
xchg
xor
std
mov
mov
sub
scas
jb
cmp
sbb
or
xchg
mov
xchg
jb
movsl
cmc
negb
ss
add
idivb
push
out
dec
cli
in
outsl
imul
dec
mov
jns
mov
mov
mov
je
aaa
sub
out
xlat
mov
fiaddl
push
in
pop
add
mov
aad
dec
pop
and
jmp
adc
dec
pop
xchg
and
sbb
push
push
pop
mov
pushf
subb
cmc
and
popf
jae
in
xchg
fldenv
add
jne
mov
sbb
or
mov
inc
or
gs
lea
mov
ret
cmp
jmp
push
call
rcr
mov
adc
adcb
clc
and
dec
outsb
mov
icebp
mov
ret
push
int
int3
or
ds
data16
imul
pop
dec
push
dec
dec
or
mov
and
or
pop
sar
std
lahf
and
movsl
sub
sbb
jne
sub
sbb
stos
cmp
push
fidivl
mov
push
es
push
icebp
out
or
pop
pop
div
mov
xor
adc
cld
out
inc
push
stos
jno
push
gs
imul
push
jbe
sbb
int
out
add
lea
jo
cs
out
popa
je
pop
jae
and
pop
push
cmp
pop
sbb
push
xchg
scas
cmpsb
call
fcmovnb
decl
ficompl
test
sub
mov
adc
ljmp
ss
ljmp
cs
je
dec
dec
adc
loope
aad
stc
pop
mov
xchg
lds
test
lret
mov
xchg
fs
push
das
les
push
scas
das
cmp
fbstp
inc
and
outsb
or
jbe
jne
mov
lcall
addr16
pop
jb
and
and
cmp
fs
and
jl
push
int3
add
inc
push
xchg
loope
arpl
hlt
jb
xchg
jl
test
jno
or
lods
clc
in
jno
mov
jecxz
pop
in
or
xor
cmp
loope
popa
cmpl
mov
aam
mov
xchg
stos
push
test
xchg
jo
daa
pushf
rorb
into
xor
fcomps
dec
adc
mov
iret
jns
subl
lret
mov
and
xor
push
repnz
es
or
in
push
fs
mov
shr
sbb
mov
xlat
push
addl
mov
dec
mov
pop
add
adc
adc
pop
lret
icebp
out
add
ret
mov
jns
sbb
and
inc
push
imul
lret
dec
dec
inc
scas
push
push
ret
push
jns
loope
xchg
bound
xor
inc
cltd
add
arpl
and
inc
and
aam
adcb
xchg
pushf
mov
xor
fists
stos
push
insl
mov
xchg
scas
pop
outsb
adc
pop
lods
jns
stc
inc
leave
xlat
mov
sbb
push
or
and
inc
sbb
mov
jmp
adc
call
pop
mov
outsb
mov
sbb
es
out
fimull
xor
into
std
and
or
call
js
mov
cltd
adc
push
dec
push
and
sbb
sub
outsb
push
pushf
call
push
and
cmp
jnp
clc
pop
out
scas
test
ds
arpl
rorb
ja
loop
mov
out
jbe
test
outsb
aas
xchg
pop
cmp
add
loope
xor
pop
bound
jg
add
insl
push
and
push
pop
push
jb
inc
dec
imul
cmp
je
dec
mov
add
daa
sbbb
cmp
sbb
nop
ret
out
out
push
xlat
xchg
mov
ret
inc
adc
push
sbb
xchg
dec
arpl
or
out
pop
push
push
lods
mov
fwait
push
inc
lret
sub
mov
push
jb
mov
lcall
notb
and
jl
mov
jl
sbb
fimuls
loop
mov
call
pop
das
sbb
add
pop
sub
loope
leave
mov
scas
mov
in
je
loopne
fs
mov
into
add
lea
ret
cmp
out
enter
daa
cmp
adc
cs
sub
out
xchg
ror
enter
push
jo
shlb
hlt
in
jecxz
sti
jl
xor
inc
je
je
push
inc
pushf
cmp
push
or
xor
lods
aaa
jns
jae
stc
add
int
dec
sbb
rclb
test
lea
fldenv
sti
fsubrp
bound
scas
jno
inc
loope
fs
in
sti
lcall
xor
inc
mov
enter
cmpsb
sahf
popa
in
push
or
or
je
shr
inc
js
ja
or
adc
or
insl
paddusw
mov
pop
mov
jmp
jmp
insl
jge
dec
arpl
jnp
dec
add
jmp
aas
push
or
jo,pn
mov
fisubrs
inc
xchg
mov
xor
xchg
xor
sahf
or
jge
adc
sti
cmc
cltd
cmpsl
mov
add
mov
push
push
scas
test
aas
sti
xchg
mov
ljmp
repz
pusha
adc
cmpsb
mov
mov
fildll
xlat
jg
sbbl
insb
sbb
pop
cmpb
push
xchg
adc
ds
stos
lret
dec
inc
adc
cmc
outsl
out
ficompl
or
or
test
and
add
stos
inc
inc
push
sbb
fdivrl
aad
fnsave
sar
jecxz
ja
jg
nop
fidivl
mov
pop
ljmp
repnz
cli
push
dec
inc
les
dec
leave
dec
mov
xchg
pop
jnp
lods
enter
daa
arpl
lods
cmpsb
test
inc
cmp
aas
daa
dec
mov
outsl
mov
scas
jbe
push
lret
pop
xlat
jmp
inc
cvttps2pi
stos
jp
insl
jo
jmp
sbbb
bound
aad
aaa
pop
loope
in
add
pop
out
sbb
loopne
jecxz
jmp
add
sbb
call
clc
sbb
and
cs
sbb
lods
cwtl
xor
bound
pop
insl
inc
in
gs
jecxz
sub
scas
add
mov
ds
jg
aad
cmp
push
mov
jo
repz
ljmp
push
jl
mov
push
icebp
mov
dec
stc
fsubs
dec
push
inc
adc
dec
push
xor
inc
push
mov
pop
stc
call
sub
lods
stos
sub
push
adc
lahf
sbb
mov
inc
jecxz
lods
mov
mov
pop
jp
cwtl
pop
insb
test
fs
lret
adc
xlat
into
push
fcoml
and
pop
lock
fdivl
test
mov
sbb
out
dec
adc
clc
cmp
sbb
xchg
push
xor
mov
dec
stos
push
in
mov
lea
ret
out
sarl
cld
pushf
imull
push
mov
push
scas
inc
imul
jne
xchg
aas
mov
jge
sub
and
lods
or
and
inc
push
and
addb
cli
mov
cmp
pandn
imul
stos
aaa
out
dec
adc
pop
icebp
jmp
cmp
or
mov
jg
jge
inc
popf
sbb
mov
in
jae
pop
and
shll
add
jb
cmp
dec
pop
dec
fistl
and
call
int3
mov
jne
testl
js
imul
jne
and
into
pop
xor
aas
fs
lods
or
iret
jle
push
fdivs
lret
inc
je
loop
nop
ret
seta
in
xchg
jp
dec
fsubl
out
aaa
movups
mov
test
fadds
flds
mov
mov
aam
arpl
psadbw
jg
mov
shl
cmp
pop
inc
add
jbe
ficomps
mov
sub
cmp
adc
or
cli
and
cmp
inc
push
xor
inc
add
mov
inc
xchg
mov
sbb
test
push
mov
or
mov
mov
dec
adc
bound
and
test
mov
cld
loope
jno
jg
imul
add
sbb
js
out
in
mov
test
mov
mov
mov
das
clc
std
mov
lods
add
and
cmp
fs
lods
pushf
pop
and
push
imul
movsb
fs
addr16
push
mov
lock
test
sbb
in
das
lahf
imul
mov
xchg
jmp
and
pop
cmp
or
aas
js
clc
xchg
jno
imul
cmp
sub
dec
movsl
notb
and
and
mov
cmp
pop
sub
xchg
dec
push
test
mov
das
mov
jge
out
shlb
inc
test
push
test
mov
inc
fstps
adc
and
and
fs
lea
or
xor
xchg
sbb
jmp
adc
mov
add
mov
mov
push
jae
cltd
mov
pop
dec
int
pop
lods
push
lock
mov
jne
adc
add
mov
adc
lcall
jnp
fiadds
xchg
movsl
insb
lret
mov
cmp
mov
and
in
xchg
push
jo
outsb
in
mov
sub
jle
icebp
cmp
iret
fildll
rcrb
dec
sbb
inc
icebp
mov
adc
sbb
cmp
dec
pop
adc
dec
or
mov
in
add
adc
test
and
mov
mov
leave
inc
adcb
pop
clc
jmp
cmp
mov
aad
sbb
subb
ficompl
mov
adc
dec
and
subl
sub
xchg
mov
and
loopne
into
nop
and
mov
loopne
out
mov
dec
loop
mov
or
jo
rcrb
hlt
adc
call
insl
xchg
xchg
outsl
je
pop
mov
icebp
xor
push
fildll
push
sbb
iret
out
cmp
test
pop
mov
mov
and
push
add
roll
hlt
xor
and
mov
xor
xchg
test
pop
and
testb
and
mov
jle
sub
imul
and
ljmp
cltd
pop
pop
mov
mov
mov
insb
les
jp
jns
jne
mov
mov
sbb
out
aam
sbb
dec
scas
pop
inc
icebp
mov
cmpsl
mov
fadds
neg
sbb
mov
std
mov
loope
dec
xchg
push
push
sti
clc
add
movsl
out
rorl
pop
jecxz
hlt
pushf
dec
scas
cmp
lods
cmp
push
inc
lea
adc
shll
cmpsb
dec
cmpsb
adc
dec
jb
adc
int
dec
aad
jb
rclb
add
sub
in
lahf
mov
adc
fwait
incl
les
cld
fsts
xchg
xchg
mov
or
mov
sahf
sbb
outsb
and
clc
adc
rclb
loop
aaa
cmp
dec
andb
push
loopne
popf
arpl
ljmp
cmpsl
inc
je
mov
jmp
mov
push
leave
movl
pop
xor
jmp
sub
hlt
push
aaa
cmp
sbb
loopne
push
test
add
mov
cmp
ljmp
jbe
lret
push
xchg
cmc
and
fstpt
jbe
sahf
pop
mov
das
inc
das
fstl
test
pop
xchg
pop
mov
pop
andl
and
push
dec
cwtl
jbe
xchg
je
pop
pop
inc
mov
sarb
cs
fstpt
mov
xor
or
jle
insl
fdivr
in
call
shll
int3
jae
mov
xor
push
mov
mov
dec
pop
nop
push
dec
mov
dec
push
lsl
outsb
sarb
insl
inc
jg
push
xor
or
out
pop
cmp
dec
ficompl
xchg
jecxz
cmpsl
sbbb
movzwl
mov
sbb
mov
sbb
cmpsl
aas
fwait
lret
imul
dec
insb
cmp
pop
cmpsl
add
xchg
int
cmp
adc
mov
mov
xchg
sbb
dec
ret
cmp
outsl
add
jno
das
cmpsl
cmp
fldenv
imul
adc
test
xor
sarb
mov
fildl
arpl
fwait
xchg
jo
mov
std
or
in
sbb
inc
popf
pop
xor
and
lret
lods
movsb
dec
or
cmpsl
or
and
and
jnp
push
and
cmp
cmp
sahf
pop
imulb
sti
out
jo
stos
sbb
mov
adc
or
mov
in
jno
xchg
add
lea
mov
sub
mov
xor
mov
xor
push
xchg
shll
jne
sub
fwait
cmp
fwait
std
decl
lcall
lret
iret
in
mov
lcall
pop
push
and
movsl
adc
movsl
mov
call
cmp
fcoml
lret
loopne
dec
scas
lock
inc
ficoms
xor
cs
into
lahf
xor
or
push
mov
push
dec
movsl
inc
inc
imul
push
fists
pop
ds
filds
fsubr
mov
mov
xchg
insb
or
pop
add
push
repnz
add
mov
sbb
add
fldz
shrl
imul
and
and
sar
pop
sbb
cmp
dec
movsb
sub
jmp
pop
push
mov
andl
mov
insb
dec
nop
fs
push
or
sti
and
mov
mov
fldenv
std
notl
stc
cmp
jbe
lock
shll
sub
inc
pusha
mov
imul
repz
xchg
outsb
sbb
arpl
iret
repz
or
bt
xor
iret
rcl
stos
popa
imul
push
fsubl
fs
into
xchg
out
cmc
pushf
fidivs
xlat
leave
movsl
fdivr
fnstcw
repz
movsb
jno
jbe
jmp
inc
fsts
das
rcl
incb
cltd
push
pop
push
fildl
pop
cmp
push
push
popf
icebp
pop
pop
mov
cld
or
adc
cmp
xor
roll
fldenv
cwtl
cmpsl
push
std
jnp
jmp
loop
ret
daa
mov
aam
stos
xchg
scas
ljmp
cmp
cmp
mov
xchg
mov
push
xchg
mov
xchg
ret
leave
fbstp
hlt
aad
mov
aad
dec
jbe
mov
or
movsb
adc
sarb
js
fdiv
std
add
xlat
outsb
gs
js
pop
xchg
jg
push
jle
imul
adc
test
shll
mov
mov
popa
mov
je
cli
stos
lods
sub
sub
lock
sub
lods
lods
bound
rcrl
data16
mov
xor
dec
sub
rcrb
add
sub
jl
aam
inc
cwtl
and
pusha
scas
or
xacquire
xor
addb
mov
adc
jle
lea
cmp
push
js
or
jmp
lcall
push
mov
fdivp
lahf
nop
and
inc
repz
jb
push
xchg
mov
rcll
std
arpl
popa
push
mov
ret
mov
mov
adc
inc
lea
cld
pop
pop
adc
insb
aad
cmpsb
loope
lds
xchg
sbb
ret
or
test
cwtl
bound
and
xor
xor
mov
test
cs
inc
push
in
ret
sbb
push
ret
inc
xchg
mov
or
sbb
inc
or
sub
xchg
xchg
addr16
sbb
jecxz
dec
mul
dec
outsb
cmp
adc
push
mov
ret
into
cmp
pusha
xor
je
mov
or
jl
inc
adc
or
arpl
test
int
xor
adc
mov
mov
test
cmp
mov
adc
or
xlat
mov
int
mov
loop
aaa
cmp
pop
arpl
out
clc
and
and
xor
jb
icebp
pop
add
pop
ljmp
xor
imul
mov
pcmpeqd
pop
icebp
jmp
ror
jmp
test
adc
and
or
into
das
mov
sahf
xchg
sarl
sbb
pop
outsb
mov
mov
popf
and
cli
gs
repnz
nop
pushl
pop
and
and
js
pusha
test
xchg
xchg
push
rol
int3
cmp
xor
pop
stos
ficompl
xlat
movsb
stos
push
push
jmp
aas
out
mov
lcall
mov
and
sti
jne
xchg
jnp
faddl
mov
aas
jge
jo
dec
pop
mov
sub
test
inc
gs
mov
inc
sub
insl
stos
cmpsl
je
dec
sbb
sub
jl
and
in
data16
fmull
cmp
sbb
jns
sub
xor
cmpsb
jae
pop
lds
lahf
cmp
jns
shll
pop
orb
add
mov
lock
adc
icebp
cmpsl
dec
testb
jmp
mov
mov
cmpb
inc
inc
dec
stos
lock
ror
andl
rorl
cmp
lret
movsl
jle
adc
push
test
add
xchg
dec
and
mov
inc
aaa
inc
lahf
ret
pop
test
outsl
loop
pop
repz
fwait
mul
xchg
mov
lret
sub
add
inc
xor
pop
cmp
scas
pop
cli
jg
mov
outsb
xor
push
add
sbb
xchg
outsb
stc
test
xlat
aas
jmp
push
or
hlt
ret
xchg
fwait
test
push
sbb
adc
pop
jle
mov
fsubrs
xor
inc
pop
hlt
jg
xchg
jno
sahf
mov
jo
fistpll
add
sub
pop
or
data16
sbb
gs
push
in
inc
xchg
or
mov
push
rclb
es
lcall
mov
bound
sub
test
xchg
xor
jns
xlat
stos
jo
movsb
jge
das
aam
leave
enter
cmp
fcomp
enter
adc
mov
daa
lea
mov
imul
movl
jo
sub
nop
add
loopne
lahf
xchg
inc
pop
adc
xlat
mov
lcall
sarl
or
and
enter
dec
mov
pop
pushf
test
cwtl
fisubl
push
mov
sar
stos
dec
stos
sub
push
pop
repz
sub
cmpsb
dec
lock
mov
mov
push
push
and
jg
xchg
scas
cmp
adc
xchg
subb
fldenv
mov
loopne
jae
and
cmpsl
test
jmp
nop
mov
cmp
pop
xor
mov
scas
dec
jge
je
out
push
mov
mov
dec
xlat
testb
push
stos
or
pop
in
sbb
jnp
setle
ds
jb
push
adc
popa
faddl
jno
aaa
mov
jbe
into
mov
pop
pop
cmp
repz
ss
mov
mov
or
jle
sbb
mov
daa
sbb
sub
ret
xchg
fcoml
ret
nop
aas
imul
xor
test
jge
pop
cmp
mov
adc
enter
push
imul
sub
fmuls
std
aas
add
xor
lea
mov
sti
add
jae
cmp
popa
xor
mov
test
push
in
daa
dec
pop
fwait
dec
ds
pop
repz
jae
inc
fdivs
push
sbb
adc
jb
push
mov
movsl
pop
scas
test
imulb
in
xlat
popa
lods
pop
inc
stc
lcall
pop
cld
iret
jg
inc
or
sub
add
dec
scas
mov
pop
or
mov
pop
mov
mov
and
inc
in
add
arpl
xchg
sbb
mov
gs
outsl
bound
lret
lods
leave
jge
out
jecxz
add
add
js
and
jle
lmsw
lock
add
incl
imul
mov
loope
dec
xchg
lods
aam
ffree
enter
shrb
jbe
jno
divl
inc
dec
adc
addr16
shr
inc
push
sti
popf
xchg
mov
fdivrl
mov
loope
add
jb
call
lret
lods
mov
lods
ja
cmpsb
iret
aas
sbb
dec
test
lcall
jnp
or
xchg
lret
and
sub
add
pop
into
pop
pop
cmp
dec
inc
in
roll
out
insb
jae
sar
jb
cld
jne
mov
xchg
arpl
adc
out
xchg
or
out
pop
cmp
xor
dec
sub
mov
pusha
dec
notl
sub
push
repz
sub
jg
pop
lock
pop
cld
add
jne
inc
lret
outsb
cmpsb
sbb
aad
and
lea
sbb
cmp
movsl
lcall
test
xchg
lahf
mov
mov
xchg
test
shrb
jns
nop
or
stc
sbb
mov
movsb
pusha
push
and
sbb
push
fnsave
or
sbbb
push
test
rcrb
xor
mov
xorb
daa
lock
aas
lods
rcll
or
hlt
xchg
pop
jae
mov
in
out
cmpsl
cld
xchg
mov
and
movsl
mov
das
dec
jnp
xorb
subl
pop
dec
popf
dec
jl
je
xchg
pop
pop
jg
xor
mov
jo
repz
sub
push
icebp
xor
mov
lea
loop
ljmp
push
fnstenv
cwtl
mov
loope
arpl
jae
add
stc
cs
ffreep
insb
test
repnz
rolb
mov
scas
fistpll
adc
popf
jo
mov
enter
push
cld
mov
mov
push
push
or
lcall
repz
dec
adc
jb
imul
push
lds
xchg
and
sarl
insb
adc
dec
mov
fsubrl
fsubrl
test
sbb
or
mov
lcall
mov
sbb
push
js
sub
enter
mov
mov
adc
xor
incl
adc
mov
aad
outsb
mov
addr16
sbb
ja
pop
mov
pop
xor
xchg
sti
and
add
jno
jmp
push
push
pop
mov
inc
imul
in
jnp
rclb
les
dec
fisubrl
fisubrl
cwtl
push
std
push
push
jae
fnstenv
push
pop
push
dec
inc
jecxz
push
lock
mov
popf
pop
jge
mov
mov
lock
mov
inc
adc
stos
push
jp
lcall
int
mov
lret
pushfw
pushf
add
imul
incb
jne
test
sahf
cmpsl
pushl
jae
fisttpll
dec
or
xor
jnp
rol
inc
daa
pushf
gs
in
mov
enter
mov
mov
outsb
dec
rcrb
shl
arpl
inc
leave
aad
rorl
mov
and
mulb
jmp
lds
addb
lcall
push
dec
mov
inc
mov
outsl
gs
test
pop
fisttpl
cld
out
pop
xor
adc
inc
pop
outsl
jb,pt
jbe
mov
pop
xchg
add
pop
out
gs
mov
xor
insl
push
and
int3
ret
pusha
add
add
dec
movl
orl
pop
sub
push
lahf
dec
mov
xchg
outsl
inc
ret
mov
cmp
es
jl
movsl
mov
xor
sub
mov
push
sti
pop
js
dec
out
add
pop
sbb
jno
mov
add
movsb
mov
xchg
imul
repz
cli
xlat
sbb
jnp
dec
scas
je
imul
mov
stos
and
fildll
mov
push
out
jge
add
lods
add
jae
scas
adc
popf
push
pusha
test
sbb
xor
testb
add
ror
jge
mull
lret
cwtl
cmpsb
lea
jns
jp
mov
jns
int3
adc
or
mov
pushf
jo
scas
mov
push
xchg
cmp
ss
sbb
cmp
inc
pop
sarl
stos
loope
out
lcall
mov
pop
mov
mov
mov
jb
sub
sub
jmp
and
jae
test
adc
cmp
mov
icebp
and
fstps
ds
cli
lds
mov
jmp
dec
inc
sbb
jno
popa
push
scas
adc
std
in
mov
insb
push
mov
repnz
rcl
fiaddl
outsl
jae
cmpsl
mov
add
mov
mov
mov
jl
xchg
and
aad
mov
lret
cmp
mov
mov
pop
mov
out
sbbb
mov
data16
ror
lret
lret
pop
test
and
mov
cwtl
adc
sub
jg
aas
repnz
or
neg
cmp
in
or
ficoms
inc
push
xlat
inc
inc
push
ret
add
notb
mov
es
mov
stos
jmp
imul
add
popf
jb
or
xor
jmp
add
clc
pop
jnp
ret
imull
push
nop
sub
es
fstpl
shrl
push
outsl
push
mov
sub
adc
fldt
int
pusha
test
clc
jp
mov
jo
push
loop
sbb
xor
vmread
mov
gs
mov
xchg
jo
out
sbb
jp
sahf
inc
jge
lods
pop
inc
movsb
mov
xchg
pop
inc
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
xor
sub
add
push
adc
push
and
mov
mov
add
mov
addl
mov
sub
movl
movl
xor
mov
orl
mov
sub
movl
cmpl
je
cmpl
jb
jmp
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
subl
xorl
mov
neg
mov
sub
mov
orl
addl
mov
adc
mov
add
sub
add
mov
orl
adc
mov
mov
adc
sub
xor
mov
orl
mov
negl
mov
sub
xor
xor
xor
xor
sub
or
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
pushl
push
call
jmp
mov
mov
xor
adcl
mov
andl
add
or
orl
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
jmp
mov
movsl
aas
jns
jns
pop
popw
inc
mov
push
push
push
jl
mov
pop
jbe
leave
cltd
stos
pop
shlb
inc
push
movl
loopne
cmpsl
cmp
fnstcw
bound
jno
movsl
stos
sti
mov
in
mov
sahf
mov
adc
popa
das
inc
fcmovnb
xchg
jo
mov
and
sub
xchg
stc
stc
adc
imul
dec
inc
add
shlb
js
shrb
xchg
stos
hlt
xor
out
xlat
add
push
mov
lods
or
enter
xchg
out
pop
leave
mov
daa
mov
mov
les
aam
mov
pop
inc
xchg
inc
and
mov
xlat
pop
add
mov
testl
cmp
fisubl
mov
loope
orb
stos
fistps
call
loopne
lcall
test
xchg
mov
pop
clc
xchg
jbe
cwtl
jg
and
icebp
adc
daa
sbb
sar
rcll
jno
sbb
pop
mov
call
neg
sub
clc
popf
repnz
add
imul
mov
mov
jmp
jns
ja
jbe
outsb
and
cmpsb
notb
cli
mov
inc
sbb
shll
mov
mov
mov
jno
mov
insw
sarl
or
or
sti
in
hlt
sub
addb
arpl
fidivrl
mov
jmp
movsl
pop
ss
sbb
jle
add
jecxz
scas
cltd
shlb
xor
xor
js
js
clc
push
popf
repz
jns
pusha
nop
out
fnstsw
rorl
mov
cmp
jb
lods
mov
fisttpll
test
outsb
adc
pop
xchg
scas
sub
xchg
mov
sbb
push
xchg
jnp
fldt
cmc
push
or
ret
and
dec
mov
adc
arpl
ret
cltd
inc
shll
push
cli
sbb
dec
out
test
hlt
das
lret
adc
cmp
cs
mov
cltd
addr16
pop
dec
into
out
mov
add
imul
cmp
scas
push
sarl
mov
int
out
pop
fs
adc
cwtl
inc
dec
ror
xchg
xchg
cmp
lcall
fwait
es
xchg
call
pop
push
jnp
jnp
sub
pop
add
bound
push
dec
fisubrs
aad
cli
popa
daa
xor
add
scas
xchg
shrl
subl
inc
fwait
loope
incl
dec
shll
fidivl
push
xchg
mov
add
jge
std
test
fnstenv
add
push
xor
scas
fsubl
xchg
mov
fisubl
ss
aam
cmp
adcb
xchg
dec
sti
in
mov
xor
nop
movb
test
jl
cmc
pushf
add
call
or
xchg
ljmp
enter
adc
add
test
cld
lds
xchg
imul
adc
jl
jns
ret
aad
sbb
xor
ljmp
lahf
cli
adcl
xlat
adc
cmpsb
inc
je
pushfw
cmp
and
mov
dec
fdivs
movsl
mov
mov
gs
clc
fisubrl
lods
jg
pop
xchg
divb
mov
pop
cmp
jg
push
xchg
pushf
shlb
mov
sub
cld
lahf
pop
jbe
gs
in
stos
pop
jno
cli
jl
out
xchg
or
adc
mov
lea
xor
jl
and
mov
and
xchg
int3
sar
mov
divl
ljmp
adc
das
sbb
push
adc
jns
fldl
stos
mov
pop
push
and
ret
jnp
mov
insb
or
call
std
pop
jecxz
xchg
sub
hlt
or
test
inc
mov
adc
mov
jae
cwtl
jmp
arpl
sbb
outsb
sbb
push
jbe
mov
cmc
ret
and
and
jg
jns
out
push
add
lahf
out
cmove
pop
mov
mov
ljmp
push
adc
out
xchg
push
add
lcall
inc
jle
mov
dec
jmp
pop
mov
mov
sub
cmp
push
out
jne
dec
dec
xor
clc
or
sbb
fstpl
or
inc
mov
popa
mov
movsb
inc
dec
ret
sub
cltd
ficomps
ret
ret
dec
fildl
insb
jmp
pop
cmp
sub
je
imul
popa
pop
lcall
pop
mov
aaa
and
dec
aad
mov
sub
adc
iret
pusha
sbb
or
sbb
mov
cmp
xchg
inc
pop
ds
push
cwtl
dec
clc
or
dec
cmp
sub
jmp
push
cltd
aam
ds
rol
sbb
out
out
and
mov
mov
in
imul
addr16
and
xor
jno
xor
xor
add
std
dec
mov
repz
pop
pop
mov
cltd
mov
testb
aas
or
lea
pop
mov
push
add
nop
in
loopne
xlat
jb
sti
sahf
or
xchg
dec
movsb
and
mov
xchg
shl
gs
fs
jne
bound
icebp
xor
pusha
popf
cmc
push
test
stc
stos
and
out
jge
in
fidivrs
std
dec
in
or
cmp
data16
jb
testl
cli
movsb
cmpsl
inc
iret
adc
pop
fsubrs
ja
lods
out
inc
push
movsl
psadbw
xor
pop
cmp
sbb
adc
sbb
mov
pop
and
sbb
clc
adc
jae,pn
push
dec
sbb
sub
pop
inc
xchg
movsl
addr16
add
repnz
xor
or
aam
jbe
jecxz
movsl
js
imul
jge
cmpsb
out
mov
adc
xchg
fnstcw
testb
aad
mov
or
jecxz
out
sbb
jnp
rcll
aam
jne
xlat
add
lret
xor
sbb
into
mov
test
adc
xchg
or
cmp
sbb
mull
add
mov
pushf
xor
adc
data16
inc
ja
mov
fisubrl
loopne
fisubrs
jl
xchg
ret
andb
roll
fxch
popf
data16
lods
gs
repnz
aas
or
movsl
ljmp
lcall
xor
mov
icebp
es
out
sub
cmpsl
cmp
sub
adc
jbe
roll
mov
cmp
or
push
inc
sub
push
add
mov
pop
xor
popf
dec
sahf
push
fidivl
pop
push
mov
cmpsb
pop
sbb
pop
jo
mov
and
cmp
xchg
sub
lods
fs
sub
mov
fsubrl
push
outsb
mov
inc
fwait
sub
add
cmpsb
sbb
pop
pop
or
xor
fistl
pop
nop
sbb
inc
sub
cs
jb
sbb
arpl
loopne
xor
and
aas
divl
test
mov
add
cwtl
loopne
and
cmp
mov
fstps
jne
mov
jne
andl
sub
dec
xchg
mov
xchg
fdivrs
xlat
cmp
lea
mov
jns
test
loope
or
xchg
mov
dec
iret
loope
push
inc
popf
les
pop
jg
cwtl
or
mov
push
push
sbb
call
ds
adc
mov
lods
or
jnp
test
fwait
daa
fincstp
sbb
sbb
sub
stc
aas
out
mov
ja
daa
stos
mov
mov
fdivp
fscale
and
ja
dec
add
or
push
imul
loop
dec
stos
ret
aad
pushf
lea
lea
test
scas
mov
test
cmc
out
lea
pop
mov
sti
sub
stc
pop
je
push
cmc
iret
jae
enter
ret
loopne
or
aad
mov
mov
aam
xchg
sbbb
mov
xchg
cmp
mov
inc
lods
xchg
test
lods
jmp
aas
shll
hlt
jmp
mov
xor
adc
out
mov
pop
adc
push
mov
jb
lods
mov
sub
enter
mov
mov
inc
adc
xlat
jne
in
cmpsb
xor
jbe
xchg
jp
aaa
in
push
pop
push
and
fwait
xchg
fmull
xor
mov
xchg
loopne
xor
aad
cwtl
test
scas
push
cmp
and
gs
aad
cmpsb
xor
mov
in
imul
xor
loope
test
pop
ja
xchg
mov
xchg
sbb
scas
ret
add
mov
rorl
rcl
xchg
jns
ljmp
divl
insl
sub
dec
in
pushf
popa
fisubs
mov
mov
pop
gs
mulb
sbb
add
addr16
jle
pop
cltd
mov
add
jo
shrl
arpl
mov
mov
pop
ja
cwtl
das
jb
iret
adc
mov
mov
popf
add
sahf
inc
add
cltd
loop
mov
mov
adcl
movsl
and
or
fcoml
decl
cmpl
cltd
xchg
jl
xchg
repz
test
sbb
mov
dec
mov
xlat
xchg
inc
test
aad
adc
in
cmp
ss
out
hlt
stos
pop
loop
cwtl
xor
bound
sar
cmp
dec
add
sti
push
shrl
mov
cmp
inc
mov
cwtl
js
dec
and
movsb
stos
adc
xchg
add
adc
pop
in
sub
mov
cmp
orl
push
and
and
stos
sbb
or
pop
or
aaa
pop
mov
in
sub
nop
daa
add
loopne
lods
cmp
sbbb
fstl
xchg
pop
push
dec
insl
in
lret
aas
leave
mov
mov
mov
xor
xchg
jnp
test
shll
icebp
push
cmpsb
or
fcomp
scas
sbb
push
and
in
xchg
push
mov
in
mov
movsl
pushf
ret
imul
mov
adc
pop
ss
ret
mov
sahf
pop
sub
pop
mov
mov
sbbb
and
inc
dec
ret
push
pop
divb
lods
jo
add
xchg
lock
push
mov
pop
or
and
jle
mov
dec
xor
xchg
add
loop
pusha
add
imul
or
add
cli
sub
ficomps
mov
stc
rorb
jmp
mov
shrl
lods
das
loop
sub
movsl
mov
popa
ret
or
dec
lahf
or
pop
jmp
mov
push
mov
cmp
push
xor
stc
popa
icebp
clc
adc
dec
cmp
clc
mov
repz
dec
cwtd
mov
push
insl
lods
mov
push
pop
push
cmp
sub
inc
setb
ss
inc
insl
shr
sbb
mov
mov
sbb
and
push
shrl
mov
jle
fs
out
and
jb
xchg
mov
mov
pop
inc
xor
out
inc
mov
mov
cmpsl
inc
insl
inc
mov
lcall
cmc
movsl
js
dec
popf
sbb
cmp
mov
ficomps
loope
imulb
mov
add
scas
loopw
fdiv
test
je
data16
push
out
ret
pop
pop
sti
ficomps
and
cmp
add
es
pop
shr
mov
or
fldcw
xor
nop
xchg
xchg
jl
inc
testl
mov
imulb
ret
sub
and
mov
push
and
aaa
mov
pop
add
sub
repz
jge
adc
in
add
mov
pop
lods
mov
call
pop
sbb
mov
imul
mov
sbb
jmp
ds
or
xchg
lods
jns
fidivrs
dec
leave
imul
xchg
inc
scas
fcomi
imul
in
out
in
inc
sbb
cltd
jns
push
sti
mov
gs
rcr
push
imul
push
pop
xchg
jge
jecxz
fsubrs
stc
out
jmp
dec
cs
iret
cwtl
jnp
push
pop
popl
xchg
mov
cmpsb
lods
mov
push
stos
jnp
push
ret
mov
xor
mov
es
cld
jmp
mov
cltd
mov
ret
push
adc
mov
es
lea
cmpsb
sbb
out
xchg
pop
out
dec
or
jnp
outsl
fwait
aaa
mov
mov
cld
cmp
sbb
jecxz
int
lahf
mov
mov
xchg
nop
jecxz,pt
xchg
popa
or
push
mov
jbe
jge
lds
jns
and
push
adc
gs
popa
jle
pop
xchg
adc
push
lret
out
adc
in
pop
mov
pop
in
add
jle
pushf
out
or
adc
push
mov
xchg
imul
negl
ret
into
adc
jle
jle
hlt
sbb
mov
mov
jae
jno
cmp
repz
and
dec
notb
into
popf
ret
icebp
sbb
cmp
lea
mov
js
cmc
cmp
mov
or
push
pushf
push
subl
repz
lret
scas
mov
jmp
cwtl
push
fsubs
mov
xor
sub
stos
push
bound
cmp
push
mov
scas
lods
in
mov
pop
jo
movb
lods
testl
fldcw
inc
push
dec
out
repnz
mov
les
fwait
ss
push
dec
movsl
push
ucomiss
scas
mov
cwtl
xchg
fwait
or
pusha
mov
ds
insb
mov
mov
dec
sahf
xchg
xor
jno
mov
adc
mov
jle
sub
inc
movsl
jno
ja
jae
or
js
subb
dec
lcall
add
pop
popf
pusha
into
mov
cltd
fldl
jmp
lods
cmpsl
iret
lret
aam
out
pop
movsb
out
movsb
push
push
rorl
mov
pop
dec
insl
cld
mov
fwait
notl
shl
fsubrp
repz
icebp
jns
xchg
in
aam
lods
nop
and
sbb
sahf
mov
cmp
mov
outsl
xor
sub
xchg
sub
cmpsl
xor
pop
pop
add
xor
scas
in
pop
xchg
inc
mov
lret
cmp
mov
addr16
into
in
aam
lock
leave
add
pop
andl
jb
xor
jmp
jbe
mov
jmp
push
push
sti
pop
scas
push
jg
shl
jo
in
ljmp
push
and
jl
bound
sub
outsl
loopne
arpl
lock
sub
notb
pop
add
int3
cmp
or
cmp
or
lods
insl
enter
or
jge
push
xchg
add
push
adc
mov
and
sub
jb
xlat
inc
adc
or
or
push
adc
sbb
insl
les
adc
rcl
inc
ret
xchg
jp
icebp
push
aad
lret
push
add
and
sbb
in
movsl
jp
push
lds
push
mov
xchg
jge
iret
hlt
xor
jle
mov
or
push
imul
lock
test
or
imul
cmp
js
pop
inc
mov
fcoms
int
js
adc
mov
jbe
out
xorb
add
and
sbb
mov
lods
push
push
int3
cmp
gs
repz
push
dec
pushf
dec
ret
movsl
lret
pop
mov
outsb
adc
ds
adc
or
out
sub
jge
ret
mov
shrb
ficoml
pop
lret
mov
mov
iret
jo
js
adcb
push
fs
lock
aas
int
int
jae
mov
aam
popf
scas
popf
mov
ja
adcl
push
sub
cmpsb
xor
add
loopne
mov
imul
add
xchg
jb
cmpsl
jmp
dec
xchg
scas
xchg
push
cltd
cmpsl
xchg
push
xor
je
or
push
jae
cwtl
or
jbe
cmpsl
outsl
pop
push
sub
loop
iret
jnp
cmp
aaa
jmp
es
push
push
xchg
sbb
outsl
xchg
xchg
daa
jecxz
leave
dec
iret
jbe
sub
mov
ja
nop
dec
sub
loop
inc
mov
fiaddl
test
shl
mov
stos
xchg
jbe
mov
mov
xchg
dec
pinsrw
mov
push
cmp
cmpsb
into
lahf
je
add
mov
cmc
and
mov
adc
leave
leave
std
xor
gs
inc
icebp
cltd
in
push
mov
xchg
fadds
bound
xchg
jg
dec
mov
push
lods
fs
cmc
adcb
mov
xor
add
add
cmp
adc
xor
hlt
pushf
pop
lds
fadds
adc
xor
notl
jno
dec
jnp
pusha
int
pop
push
pop
xorb
repz
cs
cmp
loop
inc
or
mov
push
push
add
cmp
add
jl
out
fadds
jg
fsubrs
dec
lret
push
jecxz
mov
mov
in
lock
insb
fidivrs
jne
jl
int
ja
repnz
xchg
adc
test
inc
data16
jmp
dec
mov
or
les
aam
movsb
adc
adc
push
out
stos
int3
ds
pop
aam
mov
shlb
pop
xor
invd
jp
aad
xchg
std
push
in
cmc
ss
ja
decb
lock
psubd
lods
fs
out
jnp
out
xlat
inc
jle
les
mov
daa
and
in
pop
dec
add
outsb
sbb
dec
inc
cmp
out
out
mov
imul
pop
mov
pusha
fisubs
mov
pop
mov
shll
sbb
pusha
cmp
or
push
cmp
ret
sbb
jne
lcall
int3
lcall
fdivrl
shll
ja
loopne
cmpsl
aam
into
fdivl
mov
mov
inc
aas
mov
imul
popf
push
enter
cmpxchg
cmp
pop
and
je
inc
clc
cmp
enter
jne
sub
mov
jne
push
fs
sub
mov
fsubrs
ss
dec
cmp
rclb
loop
daa
xchg
fcmove
mov
mov
icebp
push
int
adc
cs
inc
pusha
orl
in
inc
out
adc
cmp
jl
mov
adc
adc
inc
lret
adc
sbb
int3
mov
mov
adc
xchg
xchg
sub
xchg
lahf
xchg
inc
adc
sbb
xor
pop
cmpsb
aam
sti
inc
lea
clc
je
push
add
cld
jo
mov
insb
ja
jmp
stc
and
dec
sbb
jmp
jns
sbb
add
mov
bound
dec
pusha
pop
outsl
insb
cld
dec
dec
or
dec
hlt
jge
jmp
pop
push
push
cli
fnsave
push
int3
lds
mov
aad
sbb
add
lea
cmp
les
fcomip
daa
rcll
mov
cli
xorb
pop
imul
js
pop
mov
movsb
inc
inc
lock
sti
imul
jmp
mov
into
jle
sub
sub
orl
or
mov
adc
ror
mov
les
add
lods
rcl
cmp
xorl
bound
xor
movsb
mov
xor
inc
push
aam
test
repnz
mov
ret
mov
pop
jns
push
sbb
sahf
push
xor
repz
outsl
and
add
xchg
insl
mov
insb
ss
cmc
xchg
pop
nop
push
fisubrl
dec
fidivrl
pop
cld
imul
adc
pop
shlb
mov
shr
dec
sub
popf
insl
inc
shrl
popa
jle
xchg
or
daa
xor
jae
inc
pop
mov
xchg
xchg
push
cld
into
pusha
rorb
xchg
mov
test
inc
movsl
dec
ja
inc
dec
pusha
imul
inc
out
and
jmp
cmp
or
jbe
xchg
shl
mov
test
fwait
jmp
jl
daa
sbb
xchg
jl
pop
ficomps
cmp
xchg
pusha
inc
xchg
xchg
sbb
dec
cmp
fwait
inc
imul
mov
xchg
jge
inc
jmp
push
paddusw
mov
andb
adc
scas
imul
mov
add
xchg
add
test
cs
rclb
push
xchg
enter
cli
arpl
mov
mov
mov
out
loope
or
push
arpl
adc
das
je
mov
lds
out
lock
cmp
or
rcl
pop
jbe
testl
xlat
into
xchg
test
lock
or
sub
mov
stos
mov
pop
stos
cmp
or
push
imul
aad
sbb
stc
mov
je
addr16
pop
xchg
int
jns
cmp
sub
pop
push
aam
dec
sti
jnp
mov
dec
sub
test
inc
imull
jmp
int
pop
dec
imul
xor
push
cltd
inc
call
mov
jle
into
insl
cmpxchg
es
int3
xchg
scas
subb
dec
fucomp
lcall
fcomps
cmp
xchg
dec
rorl
mov
or
lea
pop
mov
cmp
imul
andl
and
sarl
aas
push
xchg
mov
aas
ficoml
mov
mov
loope
loop
mov
inc
das
jb
fs
xor
xchg
cltd
out
jmp
cs
mov
xchg
repnz
push
adc
repz
clc
adc
mov
enter
lahf
mov
ret
ret
test
add
fs
stos
std
cmpsb
mov
fidivs
push
and
mov
jge
imul
ss
pop
lock
scas
das
popf
inc
sbb
xor
lds
add
pop
aad
popa
dec
dec
hlt
mov
pop
cltd
xchg
xchg
sbb
add
push
sbb
gs
es
push
je
mov
and
push
jmp
mov
add
mov
inc
jo
pop
inc
std
add
jno
popa
jo
mov
mov
cmp
repz
add
sbb
pop
adc
pop
inc
cli
jo
cmpl
dec
test
gs
les
push
lret
fsubrs
repnz
adc
mov
scas
fists
cmpsb
stc
icebp
mov
cltd
fdivrs
rol
pusha
push
test
nop
add
std
fbstp
and
jo
xor
fldenv
fs
jle
xor
dec
jl
sbb
jae
cmp
and
xor
mov
iret
fdivrl
jo
imul
scas
push
movsl
aas
mov
mov
mov
adc
mov
fdivp
sahf
out
dec
and
jmp
fwait
je
fistl
imul
pop
mov
popa
or
mov
shl
dec
adc
loope
or
xchg
out
inc
test
dec
loope
arpl
cld
aam
push
shrl
inc
outsb
sti
mov
nop
cmpsb
dec
lods
adc
int
insl
out
scas
mov
push
jbe
cmp
mov
aaa
cmp
lea
xor
xor
data16
xchg
mov
mov
leave
jb
jle
dec
inc
pop
push
xor
orb
mov
sbb
jb
scas
jo
hlt
mov
xchg
mov
jnp
loopne
sarb
out
enter
lcall
call
out
xor
dec
test
lahf
mov
mov
mov
mov
inc
mov
push
stos
test
jmp
xor
ds
xor
xchg
rcrl
mov
stos
xor
cmp
sbb
dec
adc
cld
mov
xor
ret
xor
cmpb
mov
mov
inc
xor
inc
add
push
into
in
roll
out
or
jo
lcall
inc
and
pop
mov
fwait
push
imul
ret
xchg
or
movsb
pop
fldenv
rcl
data16
lods
adc
or
and
add
dec
mov
cmpsb
add
fisubrs
fcomp
fdivl
in
loopne
cwtl
nop
imul
fildl
cmp
icebp
out
std
and
lcall
jmp
loop
testb
mov
or
rcrb
fisubs
xor
mov
and
pushf
pusha
movsl
mov
cmc
frndint
mov
push
loope
pop
mov
fld
out
addr16
and
cmp
lds
jbe
jmp
pushf
add
mov
cmp
push
mov
arpl
in
mov
mov
sub
sbb
das
mov
repz
sub
mov
std
adc
gs
in
push
mov
jne
add
jno
push
mov
insl
sbb
cmc
mov
popf
loopne
ja
add
dec
adc
xor
rol
pop
aam
lds
sarl
iret
adc
push
dec
les
xor
mov
aas
xchg
inc
push
push
inc
fmul
test
repnz
and
and
mov
cmp
arpl
movsb
lds
xchg
inc
js
hlt
sub
xchg
dec
mov
mov
dec
adc
sbb
test
and
cld
mov
dec
popa
mov
cmpsb
sbb
das
cwtl
punpckhwd
or
loope
xchg
sub
ljmp
mov
xor
and
out
mov
adc
mov
ljmp
push
repnz
js
inc
iret
aaa
pop
lods
jne
inc
inc
mov
stos
les
mov
not
push
mov
mov
adc
lock
mov
movsl
mov
popf
push
adc
mov
and
lahf
mov
fwait
stos
inc
push
push
popa
push
cmp
aas
or
shr
idivl
cld
and
gs
testb
add
out
cli
mov
lret
fdivs
pop
jle
xchg
inc
push
mov
fisubrl
stc
iret
and
mov
adc
cld
in
test
push
sbb
repnz
mov
jl
inc
lds
lahf
nop
daa
nop
lret
adc
xor
or
push
dec
mov
rcrl
fstps
ljmp
inc
test
sbb
mov
cmp
mov
test
xlat
inc
hlt
cmpsb
imul
fnstsw
rorb
sbb
cld
sub
mov
dec
xchg
jb
and
and
adc
inc
mov
addl
stc
dec
mull
fiadds
adc
stos
in
sbb
call
lret
sub
dec
push
sbb
xchg
inc
pop
cmp
jns,pn
popf
in
push
icebp
push
rorl
xor
repnz
push
insb
test
adc
icebp
scas
pop
mov
fs
faddl
lahf
fwait
sub
pop
pusha
inc
add
stos
mov
jne
inc
xchg
bound
jns
test
imul
mov
movsb
loope,pn
add
xchg
std
sahf
ret
ret
add
cmp
daa
fisttps
push
mov
das
ds
mov
movsb
fstpl
jbe
xor
cmpsb
pop
xor
and
sbb
push
dec
test
add
out
scas
cld
xor
push
repnz
cmpb
jo
cmp
jge
sbb
push
mov
push
sarl
pushf
mov
xor
or
cli
cmp
pop
call
lret
mov
sub
push
leave
xor
mov
cld
cmp
or
mov
jo
paddusb
jbe
xlat
xor
test
inc
mov
cmc
mov
test
dec
push
arpl
push
sub
mov
fidivrs
addl
mov
mov
imul
ja
cltd
dec
les
pop
jg
cmp
insb
mov
lock
das
sbb
in
cmpsl
and
inc
out
and
fisubrl
sbbl
adc
xor
or
out
cmpsb
jle
imul
pop
or
stc
test
sahf
inc
mov
fprem
leave
nop
cmp
lds
push
pop
ds
xlat
pushf
jge
rep
in
jmp
fwait
sub
pop
cmp
daa
xor
test
xchg
sbb
jbe
inc
push
cmc
shrl
pop
loopne
ljmp
ss
inc
jbe
sub
ss
sti
push
pop
pop
fwait
push
fdivrs
xor
mov
xlat
lret
mov
pop
insb
cmp
hlt
push
out
add
mov
sbb
pop
push
inc
push
cmp
push
sub
test
xor
push
movsl
test
xchg
mov
into
insb
in
dec
pop
movl
pop
and
in
lea
xor
add
jnp
push
cld
xor
out
push
jb
add
aad
mov
mov
cwtl
orl
aam
dec
sbb
xor
push
inc
bound
fcoml
pop
shl
dec
cs
sub
pop
lcall
pop
jmp
mov
loopne
fistpll
jnp
popf
lods
fstpl
lret
inc
insl
shr
jbe
or
jno
imulb
cmp
or
push
pop
and
xchg
jae
mov
mov
cmpsb
pop
sbb
aad
cs
xchg
cmc
cmp
jmp
xor
cmp
jb
pop
cwtl
sub
pop
sbb
jge
cmp
fstpt
mov
jnp
in
jecxz,pn
lcall
iret
inc
mov
lock
inc
xchg
fnstsw
mov
out
dec
out
cmp
loope
mov
sbb
loop
invd
lds
mov
pop
jecxz
jge
call
dec
cmpsl
mov
cltd
iret
popa
xchg
jg
cmp
xor
inc
outsb
ja
test
jbe
scas
mov
enter
imul
xor
icebp
sbb
or
pop
call
mov
mov
add
stos
lods
dec
test
cmp
cwtl
mov
loop
fdivrs
sub
mov
shlb
mov
fstpt
lret
pop
pop
pop
jmp
out
insl
dec
xor
enter
add
testb
and
push
xchg
mov
aam
mov
inc
or
jecxz
cmp
cmc
adc
lods
jl
xchg
xor
xlat
mov
sub
jecxz
and
sub
cmp
jno
cmp
cli
sbb
lret
pop
xchg
aaa
popa
stos
cmp
movsl
inc
or
adc
mov
push
mov
stos
jmp
dec
gs
out
pop
lea
sub
test
mov
lock
test
dec
or
pop
mov
lods
dec
sbb
sbb
and
jp
rorl
xor
mov
sub
add
mov
movl
movl
mov
mov
pushl
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
add
push
push
movzwl
or
push
movl
lea
mov
movl
sub
lea
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
push
call
jmp
mov
mov
or
mov
xor
decl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
sbb
mov
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
push
call
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
add
movl
cmp
movl
je
mov
movl
jmp
sbb
mov
mov
adc
mov
or
movl
cmp
movl
jne
movl
cmp
movl
jne
movl
push
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
cmp
movl
jne
push
movl
push
jmp
mov
mov
mov
cmp
jne
movl
cmp
jne
movl
push
movl
push
movl
jmp
mov
mov
movl
cmp
jne
cmp
movl
jne
movl
push
movl
push
movl
jmp
mov
mov
mov
mov
movl
cmp
movl
jne
cmp
movl
jne
sbb
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
pushl
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
push
push
push
push
call
jmp
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
jmp
sbb
cmp
inc
fst
inc
insl
test
xlat
stos
mov
jnp
and
mov
push
in
pop
inc
inc
in
and
mov
pop
push
jo
cmp
test
sar
insb
sbb
sbb
pusha
xchg
jge
xchg
inc
adc
cmpsb
mov
cli
fistl
jnp
or
scas
ss
lahf
mov
ret
pop
jbe
lret
pop
dec
add
test
jae
push
loopne
loopne
aas
test
inc
mov
shrl
pusha
sahf
adc
loopne
daa
dec
pop
scas
xchg
inc
std
sub
sub
ja,pt
jbe
mov
jo
jns
out
adc
int3
iret
pushl
cwtl
push
cmpsb
cwtl
cmp
aaa
xchg
int3
pop
sbb
mov
sbb
stos
cmpsb
or
test
cmp
outsb
pusha
mov
sahf
aaa
sub
repz
or
les
ljmp
stos
testb
mov
popf
test
andb
push
pop
sub
inc
cmpsb
mov
add
push
and
inc
jb
insl
filds
enter
sub
outsb
clc
insl
mov
push
cmp
xchg
stc
outsl
lods
repnz
test
inc
push
sbb
out
bnd
jg
loope
xchg
movsb
xchg
addr16
inc
push
aas
inc
cmp
fmuls
hlt
mov
adc
icebp
cmp
jbe
mov
dec
xor
mov
dec
inc
stc
ret
jecxz
repz
test
movsb
in
int
in
dec
or
add
test
mov
movsb
enter
push
inc
add
testb
dec
lock
lret
into
fisubrs
adc
mov
dec
flds
mov
shl
lods
enter
mov
push
push
mov
or
mov
sbb
jmp
aas
mov
fcoml
dec
and
movsb
or
mov
push
xchg
pop
sti
dec
stos
xchg
es
add
lcall
xchg
mov
int
sbb
popa
ljmp
dec
jg
push
cmp
jecxz
jns
sub
sub
adc
imul
cmp
and
and
mov
into
fldcw
jecxz
inc
push
jecxz
xor
mov
loopne
ljmp
cmp
or
jo
mov
loopne
rol
cmp
and
sbb
adc
xchg
adc
push
cltd
mov
std
scas
lods
add
mov
push
stc
mov
push
int3
xchg
jno
or
lret
fimull
cmpxchg
negl
aas
inc
loopne
aaa
mov
mov
or
xor
shlb
cmp
adc
inc
rcl
ljmp
pop
mov
xchg
jne
cmpsl
adc
jno
mov
out
imul
xchg
sahf
fdivs
incl
mov
ds
pmaxub
pop
cwtl
xor
aam
pushl
xor
lods
mov
xchg
mov
xchg
add
push
sub
scas
aam
inc
movsl
xchg
pop
and
dec
bound
and
hlt
imul
ret
in
mov
sbb
arpl
inc
aam
pop
insb
cwtl
pop
xlat
jno
sub
cmp
mov
dec
mov
addr16
adc
hlt
adc
arpl
dec
jae
pop
pop
jnp
or
popa
cmp
into
mov
jg
and
in
mov
xlat
sti
pop
das
shr
inc
sbb
push
jnp
sub
pop
sbb
cmc
xchg
scas
int
jp
outsl
rolb
sub
adc
popa
lods
test
mov
fsubp
add
mov
push
xchg
daa
jg
and
push
dec
cmp
negl
add
je
clc
pop
and
movsb
sub
or
mov
push
push
xchg
pop
and
push
jb
insb
in
xchg
hlt
mov
inc
add
daa
dec
js
lret
leave
mov
inc
iret
push
pop
sub
test
cmp
or
js
mov
xchg
inc
add
out
es
lock
test
movsl
adc
pop
add
nop
dec
nop
push
pop
fs
xchg
fstl
loope
cmp
std
imul
jecxz
ss
mov
cmpsl
ljmp
jl
or
lods
rep
pop
xor
pop
cmp
loop
mov
xor
fcom
popf
mov
fxch
xor
out
sub
xchg
or
inc
cli
sbb
and
or
pusha
sub
lret
jno
inc
daa
mov
pop
rorb
xor
stos
xor
outsl
insl
ret
and
mov
scas
xorb
shlb
in
add
dec
jbe
ljmp
cli
bt
pop
or
repnz
jnp
xchg
cmp
jg
sbb
mov
mov
xchg
nop
in
ja
mov
jge
lret
lods
mov
xchg
mov
imul
popf
gs
xor
mov
jp
mov
dec
mov
pop
dec
repz
sub
decb
and
xor
mov
dec
outsb
mov
mov
mov
adcl
mov
jo,pn
loop
mov
mov
dec
sti
or
lds
das
xor
cmpsl
out
fldenv
adc
pop
mov
in
push
push
imul
andb
je
test
mov
adc
adc
inc
sbb
jnp
negb
repnz
cmp
pop
rorl
inc
imul
jo
mov
add
ja
pop
popf
pop
push
push
repnz
push
pop
inc
pop
xor
fsubrl
sub
jp
sahf
lods
lds
stos
leave
adc
lcall
je
ret
loop
lret
xlat
jbe
andb
lahf
adc
push
add
push
lahf
mov
and
lods
fcoml
ss
xchg
shll
push
mov
repz
jns
repnz
cmp
and
gs
pop
xchg
mov
repz
jp
adc
mov
loop
into
repnz
sub
add
pop
cmpsb
fwait
popf
sahf
adc
jmp
push
pop
and
aam
test
rorl
cmp
push
stos
rol
popa
popf
jb
stc
sbbl
test
push
fs
xchg
push
inc
xchg
rcl
in
lret
xchg
dec
fldcw
jnp
and
xchg
cli
rorl
mov
mov
sub
enter
test
cwtl
push
sbb
das
and
cmp
add
pop
sub
mov
lds
in
adc
dec
push
lods
sub
imul
xlat
xchg
add
mov
out
fistpll
ljmp
int
ret
addb
lahf
push
push
mov
lods
lcall
mov
addr16
int
cmp
mov
fsts
cltd
stc
inc
pop
jmp
and
int3
pushf
sbb
mov
jl
cmp
testb
or
mov
sbb
ss
sbb
sub
pop
push
push
mov
jp
insb
push
std
icebp
inc
cmp
mov
adc
clc
pop
push
data16
xor
sub
mov
xchg
pop
aas
mov
insl
movsb
hlt
loop
dec
into
jne
lea
push
pusha
push
outsl
mov
ja
xlat
js
xchg
push
pop
cli
lea
xchg
outsl
jns
in
stc
loope
in
cmp
adc
cmpsb
call
test
push
mov
adc
rcr
lret
mov
mov
xchg
aas
shll
mov
es
push
stc
jne
jle
mov
inc
pop
push
mov
mov
jmp
mov
icebp
sbb
movsb
ficoms
enter
push
add
cmp
mov
push
dec
cmp
mov
in
stos
ds
sbb
les
shl
je
xchg
and
mov
cmp
lcall
and
lcall
xor
xor
es
fdivrs
pusha
jg
stos
out
jg
scas
sti
subl
xchg
add
aam
ret
inc
ret
jnp
lods
aas
insb
pop
cs
stos
and
enter
lea
aam
das
adc
xor
push
jo
scas
out
jns
xchg
pop
jb
push
add
or
out
mov
xorl
ret
fdivs
sbb
mov
adcb
inc
sub
pop
and
and
leave
out
adc
or
hlt
movsb
push
dec
loop
cltd
lods
pushf
mov
call
adc
mov
sti
dec
lret
sbb
fstps
lods
fmulp
clc
jnp
ret
add
jecxz
pop
fndisi(8087
pop
incl
lea
mov
or
divl
and
and
sahf
lahf
rcl
addl
cmp
mov
sbb
daa
fcoml
adc
lcall
dec
pop
pop
hlt
pop
stos
mov
push
adc
adc
test
pop
pop
sub
scas
push
icebp
push
in
adc
jno
repnz
popa
or
jo
xor
or
pop
cmpsb
pop
jnp
out
inc
cli
inc
scas
leave
add
adc
outsb
push
outsl
ret
cmpsb
sub
and
xor
mov
add
pop
pop
cmpl
mov
push
add
push
sbb
xlat
inc
popf
or
dec
lea
xchg
fxch
dec
and
int
lods
dec
cmp
push
and
dec
xor
and
repnz
mov
mov
sub
mov
stc
and
aaa
fsubr
push
dec
out
pop
test
add
mov
add
pusha
push
fnsave
xor
xlat
leave
xchg
pop
xchg
sti
ret
sbb
orl
in
mov
jnp
or
pushf
stos
push
pop
test
stos
sub
adc
and
lods
dec
push
pop
inc
add
xchg
imul
cmp
lods
inc
sub
loopne
mov
test
in
mov
out
or
push
adc
imul
sub
or
add
divps
je
popw
push
daa
sub
and
xor
xor
aad
dec
movsb
pop
mov
sbb
mov
xchg
rcrl
movsl
sbb
mov
mov
cltd
out
or
addl
adc
fstps
mov
jecxz
lods
outsl
mov
sub
cmp
sbb
std
adc
ficomps
mov
out
das
xor
xchg
mov
daa
push
std
pop
fsubrl
ja
shlb
daa
pop
pop
add
fiaddl
jle
rclb
lods
es
or
icebp
jo
fistl
pop
mov
sbb
sti
test
mov
in
lock
in
cmpsl
sub
and
test
mov
jp
call
jg
jnp
cld
shlb
into
test
repnz
sahf
add
in
xchg
out
inc
in
pop
cmpsl
cmpb
mov
subl
xchg
mov
ja
xchg
pusha
int
cmc
jecxz
popa
adc
lahf
push
sub
movsb
dec
cmpsl
test
pop
mov
mov
pop
xor
int3
and
pop
adcb
xor
out
inc
dec
adc
mov
lods
mov
mov
inc
push
mov
pop
das
into
and
popa
sub
and
insl
or
idivb
ficoml
or
xor
gs
sahf
sub
test
xor
lret
ret
scas
cmpsl
inc
dec
push
dec
sbb
das
aaa
and
nop
les
cmp
push
or
push
and
inc
ret
stos
push
loope
loope
into
dec
push
rcl
lock
clc
rclb
pop
cmp
lods
pop
popf
push
pop
and
jmp
sbb
jae
fiadds
jp
cmp
sub
pop
out
adc
inc
push
repz
push
pop
iret
cmp
mov
push
cmpsb
es
movsl
jecxz
shlb
jnp
dec
pop
mov
hlt
loopne
loopne
aam
cs
daa
out
movsl
sbb
out
test
cmp
push
adc
in
ss
sbb
sahf
cmpb
daa
sub
push
cmpsb
adc
mov
dec
icebp
cmc
cmp
pusha
mov
and
xlat
cmpsl
mov
lret
pop
fbld
leave
cmpsb
mov
in
cwtl
pop
jb
sahf
mov
scas
cmp
test
clc
sub
pop
testl
add
test
out
inc
sbb
imul
mov
sbb
out
cmp
push
xchg
xor
enter
ja
sbb
bound
pop
xchg
ss
popf
lahf
popf
xor
outsl
inc
shlb
sbb
popa
jo
cld
imull
xchg
call
sub
int3
cmpsw
call
mov
fistpl
cmp
loope
mov
loope
or
sahf
pop
popf
adc
add
fs
loopne
cmp
lods
sbb
xlat
loopne
pop
sub
dec
insb
jge
fwait
jmp
in
ss
mov
out
popa
mov
lods
inc
mov
sahf
pusha
jecxz
adc
fcomi
inc
scas
mov
sub
adc
stos
leave
mov
lahf
ja
add
leave
push
scas
dec
iret
cli
xor
icebp
imul
aad
jb
xchg
popf
pop
shlb
and
or
cmp
inc
divb
inc
lods
mov
mov
adc
mov
cld
jbe
dec
out
jecxz
or
test
outsl
sti
int
je
push
mov
sub
adc
enter
xorl
dec
mov
sbb
push
push
scas
fsubrp
add
cmp
setb
loopne
enter
adc
shl
nop
cltd
mov
and
cmp
pop
jno
mov
lock
int3
outsb
xchg
push
jae
jmp
push
jno
fnstenv
popa
ret
clc
test
ljmp
xor
adc
xchg
es
or
inc
and
in
gs
adc
sub
xchg
adc
jmp
dec
pop
test
aaa
xchg
dec
sub
push
adc
xchg
test
or
into
mov
pushf
movsb
push
jl
xchg
int
lcall
mov
sbb
hlt
jp
mull
jge
push
sbb
int3
mov
jo
jle
popa
push
gs
aam
adc
xlat
mov
js
cli
pop
or
fsts
xchg
ret
sbb
icebp
sbb
dec
dec
stc
mov
lahf
add
cs
loop
gs
cmc
inc
lods
and
pop
subl
jb
xorl
xor
inc
std
jbe
test
daa
or
out
xchg
mov
xchg
lds
jbe
shlb
and
loop
shll
adc
mov
adc
adc
enter
xchg
pushf
stc
jmp
insl
xlat
push
or
adc
mov
cs
or
daa
push
cmc
push
sti
rcrb
cmp
xchg
push
mulb
inc
add
sbb
xor
lcall
stos
lcall
insl
into
clc
push
and
adc
xchg
push
jne
lea
jg
test
lea
inc
pop
fldenv
sbb
jnp
inc
aad
test
add
inc
repz
dec
mov
jo
mov
jle
cmp
stc
sbb
cmp
ljmp
outsl
pop
rorl
cmp
and
incl
icebp
fiaddl
mov
psllw
out
mov
and
fisttps
loopne
wrmsr
jge
test
xchg
xor
pop
add
repnz
mov
mov
cmp
fdivp
mov
inc
arpl
outsb
jle
cmp
pop
mov
fstp
sub
adc
mov
adc
xchg
lret
adc
aam
fildl
mov
push
xchg
mov
popa
fucomi
aas
push
sbb
popf
sub
xchg
and
mov
push
sub
cli
aam
int
xchg
into
mov
test
inc
pop
mov
push
ret
push
cmpsl
addr16
aam
ljmp
cmp
or
imul
xchg
push
or
jns
sti
cmp
mov
popf
test
cmc
sub
out
cmc
push
xchg
imul
pop
dec
fnsetpm(287
mov
and
scas
mov
jnp
mov
mov
jae
jae
xlat
and
or
int3
push
lea
sub
in
or
and
test
in
cltd
or
fldcw
imul
movsl
xchg
push
dec
jle
xor
push
les
scas
pop
scas
es
sub
xchg
mov
sti
cmp
js
test
arpl
dec
frstor
stc
insl
sti
es
inc
adc
das
lods
and
inc
xchg
add
cwtl
and
xchg
dec
lcall
mov
and
xor
in
daa
mov
inc
dec
mov
push
jge
int
xor
rorl
jnp
aas
js
mov
adc
mov
sbb
add
out
mov
and
lret
push
jle
in
out
das
outsl
mov
sub
iret
data16
pop
jno
notl
rclb
int3
ss
mov
sbb
jge
ss
idiv
jle
scas
fbstp
inc
mov
movsb
loope
cmc
mov
or
addr16
loop
dec
bound
or
adc
dec
or
out
dec
arpl
dec
hlt
xchg
roll
out
in
mov
loopne
loopne
fdivs
repnz
dec
data16
icebp
xchg
mov
sbb
adc
stos
fmull
arpl
pop
dec
mov
jle
jmp
jne
jno
pop
pop
xor
jnp
negb
ret
sub
insl
mull
or
xchg
int3
jp
adc
xor
dec
ret
push
leave
adc
pop
test
je
xchg
push
ss
stc
pop
jae
xchg
loopne
insb
shl
xlat
mov
cmc
lock
ret
mov
rorb
inc
xchg
sub
jp
mov
daa
test
scas
push
std
inc
mov
xchg
xchg
dec
jp
js
adc
mov
mov
inc
rolb
jp
test
inc
mov
jg
je
test
jle
lds
out
mov
lret
cmpsl
cmp
ljmp
mov
cmp
mov
fcoml
test
data16
js
push
lret
inc
mov
andb
push
pop
shrb
sub
mov
mov
test
pop
movsl
push
push
mov
push
and
repz
movsl
rorl
xchg
mov
add
sub
cmp
or
imul
adc
loop
aam
sbb
jae
pushf
mov
paddsw
add
jp
push
outsb
inc
addr16
gs
shl
insb
mov
pop
push
fldcw
xor
test
xor
popl
inc
add
aad
xchg
popa
std
xchg
repz
daa
inc
jmp
xchg
pop
sahf
xor
add
xchg
shlb
movsb
mov
sbb
in
in
enter
jmp
cwtl
sub
sub
pushf
xchg
cwtl
jno
adc
cmpsl
mov
dec
adc
adc
sub
push
loopne
sub
sti
dec
pushl
cltd
pop
mov
aas
xor
outsb
push
jmp
test
mov
pop
loopne
jp
lret
mov
sub
ret
rcrl
imul
xor
mov
and
lock
into
stos
jle
pop
popa
setb
fsts
in
int3
xor
sbb
sarb
lahf
insl
decb
mov
mov
sub
and
cld
stos
mov
stos
mov
les
lcall
push
jmp
repnz
pop
movsb
mov
adc
inc
in
fucomp
ret
call
cmp
mov
mov
mov
mov
mov
push
ret
fs
fwait
adc
xchg
mov
xorl
and
ret
cmp
xchg
loopne
insb
aam
xlat
pusha
cmpsl
lods
pop
je
leave
jmp
rep
adc
dec
ds
test
mov
out
fbstp
js
mov
ljmp
mov
dec
cli
mov
jle
xlat
nop
jno
and
dec
out
or
lcall
push
jae
ret
fisubl
jnp
mov
shll
jl
faddl
cltd
bound
nop
cmp
test
in
sahf
xor
into
jno
and
xor
daa
sub
pop
int3
pushf
dec
jne
add
je
or
rclb
icebp
mov
xchg
loope
negb
inc
divl
pop
cltd
sbb
mov
lret
rcll
xorl
cmp
mov
mov
fwait
bsr
jmp
jb
outsb
lahf
ljmp
pop
imul
inc
sbb
inc
movsl
xchg
mov
cli
jp
mov
js
sub
addr16
add
negl
cltd
loopne
push
xchg
hlt
mov
jp
add
xlat
add
sub
adc
pop
xor
rcrl
xor
xchg
shl
in
sub
in
fimuls
mov
adc
es
mov
or
xor
icebp
in
jae
pop
cmpl
aaa
inc
icebp
jmp
jge
popa
mov
adc
fwait
pusha
shrl
movsb
inc
add
repz
add
xor
mov
lret
outsl
cmp
sub
loope
cs
icebp
xchg
test
xor
test
xchg
mov
mov
mov
cmp
hlt
jge
hlt
mov
cwtl
addr16
mov
jnp
adc
cmpsl
in
xor
cmp
mov
test
xor
insb
sahf
adc
out
jae
adc
cmpsl
mov
mov
les
aaa
sub
arpl
inc
push
jecxz
cltd
push
xchg
cli
sub
sbb
mov
aaa
xchg
insl
jl
orl
adc
pop
cmp
xor
out
cld
cmp
in
jb
arpl
and
shl
insl
out
leave
pop
mov
aad
cmp
mov
mov
sub
movsb
xchg
gs
ja
pop
sbbb
or
mov
dec
lds
cld
loopne
pop
push
imul
popa
test
aaa
inc
cmc
lea
push
and
imul
das
push
sbb
fistpll
in
mov
sub
add
test
dec
into
xchg
out
fsubrs
int
adc
jae
scas
lods
enter
jecxz
mov
repnz
pop
inc
xor
cmpsb
jns
cli
repz
leave
test
mov
lea
insb
mov
sbb
lcall
repnz
lret
mov
fs
fsubl
push
jb
orb
fildll
adc
sahf
push
repnz
add
sbb
mov
fs
out
and
jb
mov
mov
test
pop
mov
out
out
and
lods
outsb
xor
into
fcomps
mov
push
es
test
mov
insl
je
jno
cs
or
add
xor
divl
in
mov
pop
mov
mov
rcrb
repz
fs
pop
rcr
sbb
jl
xor
lret
jnp
lret
ds
ror
bnd
loop
sub
mov
jmp
and
dec
repz
sbbl
dec
jo
test
ljmp
stos
bound
aaa
je
jno
mov
dec
xchg
enter
cmp
xor
vpmulhrsw
cmpsb
push
inc
mov
es
dec
movsb
pop
sti
fisubs
lods
sarl
cmpsl
rol
out
inc
hlt
insl
enter
fldenv
jmp
ficompl
test
repz
aaa
in
pop
adc
call
data16
dec
icebp
nop
inc
jnp
testb
xchg
cltd
dec
inc
arpl
pop
xchg
xor
push
test
jmp
aas
loop
neg
jne
nop
out
into
divl
push
mov
inc
add
and
stos
lock
or
sbb
or
adc
xor
adc
mov
jp
ds
jbe
nop
cmp
dec
out
outsl
xor
mov
cltd
mov
pop
negl
cmpsb
pushf
xor
xor
jge
inc
inc
push
push
inc
arpl
jp
push
in
js
push
xchg
in
jae
xchg
or
adc
adc
cli
jmp
push
mov
push
xchg
adc
sahf
sbb
jns,pn
aas
cmpsb
das
jp
adc
adc
jae
out
pop
fdivrs
jg
pop
jns
mov
bound
add
sbb
pop
pop
mov
jb
enterw
jae
mov
jecxz
jae
aad
les
dec
jae
mov
cwtl
sbb
ret
orb
jmp
scas
pop
loope
movsb
stos
rclb
or
rorl
ja
pop
pushf
dec
das
jae
pop
lds
cmp
xor
dec
out
std
jns
andl
out
pop
mov
push
test
dec
jmp
sbb
dec
xchg
mov
aaa
fistl
pop
and
js
iret
nop
or
pop
jns
cmp
lods
dec
aas
popf
sahf
adc
repnz
adc
mov
sbb
daa
icebp
xor
sbb
cld
fistpl
xor
xchg
cmpsb
mov
fnstcw
loopne
mov
lds
xchg
sbb
frstor
jae
outsb
push
cs
mov
popfw
loopne
mov
mov
std
push
mov
xchg
sbb
mov
add
and
push
rcl
and
push
out
jb
scas
mov
pop
pushf
es
mov
lret
jnp
push
pop
ds
inc
jl
repz
mov
adc
imul
aaa
sub
addr16
lret
cs
lret
shlb
aas
and
popf
push
loopne
add
sahf
xchg
leave
inc
data16
imul
dec
ds
xor
adc
leave
lock
xor
lds
push
hlt
add
or
scas
cld
sti
pusha
enter
imul
arpl
fmul
in
push
iret
sub
clc
je
cltd
data16
dec
sti
sbb
stos
push
push
mov
out
into
jp
sti
sub
dec
jle
mov
andl
ss
test
and
sbb
dec
es
in
shrl
lret
cwtl
sti
sbb
cmpb
xchg
movsl
sbb
xor
dec
call
andb
or
sbb
les
inc
dec
xchg
jg
jp
adc
out
xor
movsl
aaa
bound
mov
mov
mov
xchg
add
pop
in
cmp
je
test
sbb
mov
jno
sub
stc
mov
iret
dec
sbb
ljmp
dec
push
stos
mov
jb
out
arpl
and
adc
fnstcw
dec
mov
fadds
mov
ja
andb
fistl
sbb
icebp
fsub
pop
in
jnp
cmp
and
mov
sarb
out
lcall
aad
pop
pop
sahf
pop
mov
fdivrl
mov
inc
xor
aas
in
nop
push
dec
addr16
in
mov
xor
mov
loopne
rorb
leave
lods
mov
jmp
movsb
lcall
xchg
dec
push
hlt
lods
cmp
lock
dec
lea
andl
lock
and
pop
jae
iret
cmp
divl
hlt
cmp
fistpll
es
iret
int3
sbb
inc
or
mov
ss
pop
lret
cmp
lock
ret
les
dec
fwait
popa
sub
scas
shll
stos
lods
xor
std
cwtl
pop
or
add
popa
iret
or
sti
arpl
dec
repz
mov
mov
data16
xchg
or
adc
adc
ret
xchg
or
pop
cmp
test
repz
into
jl
int3
pop
rolb
shrb
push
xchg
mov
mov
sbb
in
or
vfrczsd
add
stos
in
sub
stc
adc
pop
movsb
xchg
adc
sbb
ds
mov
fbld
mov
addb
dec
add
in
outsb
in
cltd
out
mov
movsb
arpl
pop
pop
movsl
inc
mov
jecxz
gs
cmpsb
adc
dec
les
or
fwait
cmpb
lods
lods
xor
test
out
push
js
cs
jno
push
fldenv
add
mov
cmp
bound
std
pop
stc
seto
imul
jl
cmp
xor
pop
enter
xchg
mov
data16
aaa
adc
sbb
jbe
mov
jp
ret
ss
fmull
cltd
or
mov
mov
daa
repz
leave
out
inc
fxch
jmp
add
pop
test
mov
enter
fwait
pop
pop
pop
mov
cmp
inc
xlat
mov
cltd
ror
or
and
pop
or
xor
test
adc
dec
pushf
pop
ret
adc
js
jae
xchg
cmp
sub
enter
sti
cli
stos
cltd
sbb
stos
xchg
jne
ss
lret
rcrb
rorb
lock
jp
lret
push
aas
dec
and
rorl
insb
pop
cmp
das
mov
sbb
dec
xchg
popf
lea
pusha
push
pop
stos
dec
or
jb
cli
out
xor
jnp
mov
sbb
and
or
pop
add
sub
sarl
xchg
push
mov
xchg
mov
mov
mov
aaa
pop
and
rcrl
xor
ja
imul
sub
mov
fidivl
loop
ret
cli
mov
mov
hlt
fisttpll
fistpl
hlt
lahf
push
scas
fwait
insl
push
and
mov
xlat
push
sub
jecxz
aaa
fwait
popf
fmuls
popf
sbb
stos
sub
fdivrs
cwtl
adc
add
mov
sti
mov
inc
jne
or
xchg
xchg
popl
rcrl
outsl
movsb
or
outsb
scas
js
leave
sbb
insb
fwait
out
scas
xor
lcall
subl
xchg
jl
push
shr
sbb
push
push
xchg
repz
or
cmpsl
and
cld
dec
divl
add
xchg
sbb
call
aaa
aas
popa
fldenv
xor
int
add
adc
test
daa
fmull
pop
pop
cmp
cwtl
push
test
hlt
daa
aaa
push
jb
cmp
sbb
fidivrl
and
imulb
mov
jbe
push
pusha
clc
lds
sub
divl
loop
lea
jne
cld
push
adc
jle
xor
jns
jnp
dec
pop
push
push
adc
jae
mov
jp
pop
outsl
sub
and
call
or
sub
movsl
or
and
inc
dec
xor
repnz
ds
mov
icebp
stos
fnstcw
mov
xchg
data16
ds
sarl
sarl
sub
mov
push
add
popf
jb
xchg
loop
push
loopne
or
jo
inc
cmp
iret
or
nop
push
scas
fistpl
test
add
arpl
insb
popa
jne
fs
cmp
mov
inc
mov
lods
xchg
xchg
xor
in
ja
in
or
sub
push
les
mov
xor
add
inc
xorb
xchg
mov
and
std
and
in
lret
mov
cmp
mov
fbstp
scas
sbb
or
fmulp
adc
mov
repz
aad
xor
sub
mov
add
cmp
mov
mov
jg
jmp
push
bound
jp
xchg
js
mov
push
inc
fdivrl
sahf
jnp
xorl
mov
pop
mov
pop
ljmp
test
sub
jl
xor
push
jmp
inc
cmc
add
mov
into
movl
adc
mov
cmp
lcall
mov
xchg
xchg
mov
insl
mov
dec
dec
cwtl
mov
jbe
lret
inc
outsb
mov
cmp
xchg
dec
mov
in
xor
xchg
shlb
push
addr16
adc
xor
add
cs
fcoml
jmp
add
call
sub
cmp
mov
cwtl
aaa
addl
mov
sub
idivl
sub
sbb
cltd
popf
or
lcall
movsb
stos
lret
in
mov
jp
loopne
int
add
jge
je
or
arpl
push
in
je
loop
in
inc
mov
cmp
out
mov
rcr
push
mov
gs
js
lods
add
imul
gs
lret
enter
jb
sbbl
xchg
je
xchg
jl
sahf
outsb
sbb
mov
jle
roll
mov
sub
jg
push
jg
scas
lahf
adc
ss
jge
adc
dec
cmp
out
dec
cmpsl
push
cmp
std
std
push
cmc
cltd
and
sbb
vcvtdq2pd
test
add
rorb
out
xor
aaa
adc
push
push
out
add
sub
jo
mov
push
pop
inc
mov
or
fimull
lds
inc
mov
xchg
inc
sbb
stc
icebp
pop
mov
cmpsl
aad
fwait
mov
or
xchg
aas
jo
loop
sti
jnp
mov
or
addl
or
xor
repz
mov
mov
pop
in
adc
cltd
cmc
inc
roll
fnsave
sub
lods
das
daa
cmc
sub
test
lods
loopne
mov
xchg
push
add
inc
addr16
jbe
lock
ds
cwtl
ja
push
add
fisttpl
cmc
xor
test
push
pop
mov
sbb
cltd
and
and
orb
movsb
xor
inc
scas
hlt
and
test
push
pop
dec
or
cmp
mov
inc
mov
add
push
jmp
les
push
std
xchg
pop
add
push
jg
pop
repnz
xchg
dec
movsb
js
test
addr16
in
stos
jg
push
loop
std
ror
pop
ds
rcrb
fildl
mov
fwait
cmpsl
pop
frstor
fucomi
cwtl
xchg
mov
xchg
dec
push
fcompl
inc
mov
cmp
dec
es
xchg
popf
test
adc
fs
lds
rclb
sbb
inc
int3
inc
sub
or
leave
jnp
stc
out
mov
decb
mov
imul
jns
mov
push
insb
xor
mov
sbb
negb
cmp
insb
imul
dec
aad
push
cmp
inc
and
jne
or
xchg
pop
jle
push
pop
xchg
push
lcall
push
adc
mov
nop
ljmp
lods
aaa
je
inc
sbb
inc
or
lods
mov
dec
add
sbb
adc
bswap
int
scas
xlat
aaa
call
sbb
es
push
sbb
dec
mov
or
stos
mov
jp
xor
in
cmp
xchg
pushf
sub
xchg
andb
scas
push
lret
ljmp
and
sub
push
sbb
pusha
mov
std
imul
sbb
jae
pop
and
dec
adc
xchg
cmpb
push
scas
rolb
mov
sbb
movsb
je
xchg
das
call
enter
lds
cld
sub
movsb
leave
lock
lret
mov
sbb
nop
inc
pop
stos
iret
xor
arpl
sbb
add
shl
das
ret
stc
push
xchg
xchg
in
lds
dec
pop
sub
sub
cli
xchg
mov
or
jo
or
jecxz
pushf
clc
pop
outsb
inc
xchg
mov
and
xchg
into
fiaddl
aaa
lret
cld
cld
sbb
fdivr
xorl
xchg
int3
int
or
jbe
and
jns
sub
test
cmpsb
fildl
scas
inc
movsb
aad
sub
clc
mov
mov
in
sub
mov
pushl
push
adc
sbb
loop
pop
movsl
push
jb
push
lret
das
rorl
int3
subl
or
int3
sbb
xorb
insb
addr16
and
jb
rcr
push
fsubp
pushf
xchg
jl
or
pop
xchg
pop
stc
xor
movsb
lret
or
cmp
inc
and
test
ret
js
pop
outsb
lea
dec
out
adc
xchg
test
loop
ret
stos
dec
mov
xchg
scas
iretw
pop
xor
or
mov
mov
iret
adc
les
jmp
gs
je
scas
mov
fcomip
and
nop
xchg
outsl
pop
outsl
std
mov
lock
xor
test
fisttpll
lea
mov
mov
or
jns
shrl
or
mov
and
repnz
add
popl
push
nop
xor
xor
out
popf
or
sub
pop
adc
fcompl
xor
fcmovnu
xchg
ljmp
mov
or
repnz
ds
jg
mov
xchg
lods
adc
xchg
pop
pop
push
mov
adc
fidivl
sbb
push
leave
push
loopne
mov
inc
nop
xor
test
and
pop
pop
sub
mov
jl
jno
stos
das
ja
xchg
imul
pop
sub
mov
fnstenv
jns
dec
stc
push
dec
pop
inc
adc
push
xor
jmp
daa
clc
sbbb
mov
shll
cmp
dec
in
clc
jge
ss
subl
aam
leave
push
push
pop
cmp
jge
loopew
cltd
daa
lcall
mov
sbb
scas
test
xchg
lods
inc
int
ret
dec
jle
dec
loopne
push
lgs
mov
ds
and
sub
pop
mov
jecxz
mov
inc
add
int3
sbb
jns
add
push
in
jno
js
mov
dec
jecxz
mov
cmpsb
cltd
in
popa
and
add
rol
test
and
sub
mov
out
in
rorl
clc
inc
sub
fiaddl
jne
movsb
icebp
enter
jo
aaa
xchg
fcmovb
sahf
mov
outsl
imul
bound
push
mov
cmp
imul
push
push
addr16
out
xor
sub
sub
xor
inc
es
mov
divb
mov
xor
sbbb
std
and
and
dec
fldcw
cli
mov
lret
faddp
insb
jb
mov
mov
data16
dec
or
push
push
or
cmp
rolb
inc
int
adc
xchg
cmp
imul
xchg
sidtl
cmc
mov
jle
adcb
adc
xchg
xchg
out
stc
popa
pop
es
mov
stc
mov
push
out
leave
ret
mov
cltd
lock
dec
mov
xor
lods
mov
in
outsl
mov
sub
daa
jae
dec
cltd
and
fldt
adc
push
xchg
stos
out
pop
addr16
ljmp
jne
imulb
movsb
loopne
sbb
or
shlb
test
movsl
sbb
loop
hlt
jo
jmp
pushf
jo
or
mov
jne
xchg
xor
mov
and
xchg
push
cmp
sub
inc
mov
sub
add
add
aaa
cmc
mov
popf
in
mov
pusha
jb
push
and
data16
push
lods
iret
clc
fcompl
push
repz
insb
outsl
lret
and
pusha
sub
push
call
shr
mov
lock
and
aas
sub
pop
xor
loopne
arpl
ficoml
std
mull
inc
mov
imul
aad
pop
bound
ss
dec
imulb
pop
pop
push
jge
lahf
bnd
inc
out
adc
mov
andb
and
add
add
pop
dec
jle
stos
pop
mov
sbb
jae
in
dec
rorl
in
jge
lock
cmp
mov
testl
ret
adc
lret
mov
mov
pop
pusha
addr16
dec
xlat
inc
mov
sti
cmpb
std
mov
fisttpll
adc
inc
adc
jno
jbe
call
pop
mov
sbb
ljmp
cmp
rcrl
adcb
iret
mov
dec
test
jle
loopne
ss
sbb
cmp
in
xor
int3
cmp
std
leave
out
repnz
sahf
mov
cmp
cmp
cs
pop
xchg
jp
lods
ret
les
mov
rcrl
pop
jg
pcmpgtb
clc
stos
fisttpl
shlb
cmc
dec
movsl
fsubrs
or
adc
and
into
icebp
cmp
add
xor
cmpsb
testl
sub
dec
sub
repnz
addb
pop
and
testl
and
ss
lds
adc
fldl
or
pop
scas
jnp
sbb
pop
out
fiaddl
mov
adc
cmp
lahf
push
or
in
inc
mov
js
es
adc
sub
mov
outsb
mov
cli
js
lods
test
sbb
fildll
sub
lret
sbb
fildl
sub
cli
jmp
frstor
out
fnsave
push
jl
adc
int
into
sub
jb
sub
pop
xor
test
mov
or
enter
popa
xchg
or
pushf
add
call
pop
mov
cli
leave
fists
xchg
mov
mov
inc
sub
sub
imul
in
test
mov
lds
xor
xor
sub
mov
jb
sbb
pop
andl
cmpsb
stc
leave
adc
push
in
mov
out
leave
aam
mov
arpl
sub
mov
add
xchg
xor
fsts
pop
mov
jecxz
iret
pop
jb
jle
jecxz
sbb
xchg
aad
lock
mov
dec
insb
popa
dec
or
push
stos
mov
push
add
vpmacswd
mov
mov
dec
data16
sarl
scas
mov
sbb
cmp
xchg
mov
insl
leave
into
jl
mov
mov
jae
pop
imul
popf
les
lock
xor
jge
jecxz
xchg
scas
inc
lret
push
lcall
sbb
add
adc
or
mov
subl
dec
fwait
sbb
or
ds
jae
xchg
popf
dec
movsb
pop
shlb
imul
pushl
mov
cltd
and
jmp
mov
add
imul
sub
push
push
cmc
cmp
gs
in
xchg
mov
mov
push
mov
xor
push
push
pop
adc
adc
xchg
xor
test
in
jmp
or
xchg
push
push
jno
adc
mov
or
call
jge
xor
add
pop
fiaddl
lock
insl
mov
imul
adc
and
in
movsl
mov
scas
push
das
rcrl
push
xor
adc
sbb
and
lret
std
jle
mov
ss
mov
fcompl
clc
out
bnd
adc
dec
test
inc
es
mov
add
fcomps
or
ljmp
aaa
xchg
sbb
jo
mov
pop
dec
in
insb
sbb
xor
mov
sahf
jle
add
pop
cmp
popa
sbb
add
push
les
mov
pcmpgtw
test
inc
pop
mov
dec
pop
jecxz
sub
push
push
or
leave
jp
repz
aad
or
cmp
fistpl
and
lock
shll
mov
cli
cmp
jne
pushw
fiaddl
cmpb
jg
push
or
sbb
nop
lcall
clc
pop
ret
cmp
repz
out
addr16
js
loopne
insl
inc
int3
mov
frstor
pop
lds
hlt
pop
mov
xor
hlt
mov
xor
mov
mov
xchg
xchg
mov
pushf
jbe
sub
push
lret
jae
cmc
mov
ds
roll
dec
and
cltd
stos
jbe
xor
lods
pop
xor
inc
pop
dec
xor
arpl
mov
inc
fsubl
repz
ljmp
pusha
pop
jmp
cmp
int
pop
mov
rcrb
sbbl
jbe
in
or
aad
inc
jnp
andb
ljmp
push
rcll
mov
xor
cltd
cmp
sub
pop
xor
pop
jnp
fwait
cmp
imul
adc
mov
shl
jae
imul
mov
fdiv
ficoml
dec
mov
cmp
and
xor
movl
sub
push
fdivs
clc
sub
mov
test
aas
cmp
loope
xchg
out
push
xor
bound
pop
sub
push
add
and
cmp
in
pop
xor
test
nop
int
dec
into
shll
loopne
cmc
daa
push
push
lcall
in
int
arpl
inc
sub
jp
xor
movsb
add
mov
nop
cmp
dec
ljmp
divb
addr16
cld
push
inc
jg
mov
dec
xchg
adc
and
fistps
xor
push
sbb
repz
in
mov
aas
adc
cltd
xor
in
mov
mov
dec
mov
adc
or
out
inc
jbe
call
dec
stc
vaddss
dec
repnz
fnstcw
mov
sub
test
xor
inc
xchg
dec
imul
jge
mov
xor
es
dec
sub
icebp
mov
jecxz
in
jge
sar
push
xor
add
adc
xchg
jp
fs
cltd
inc
dec
cmp
call
xor
adc
cmpl
dec
push
mov
outsl
and
shrb
lods
push
popa
sti
pop
xor
in
add
lea
lds
movsl
fsubrs
dec
xor
popf
cmp
add
enter
and
inc
sub
mov
into
inc
rclb
cmp
sbb
outsb
mov
scas
jle
xchg
testb
inc
sbb
sbb
movsb
mov
in
lcall
push
xchg
roll
xchg
push
scas
xor
jge
adc
lods
cld
cmp
imul
mov
imul
mov
enter
push
push
in
sahf
test
jg
outsb
orb
jge
jmp
push
xlat
cmp
dec
fisubrl
push
popl
and
jb
pop
mov
or
push
jnp
les
sub
pop
xchg
test
cmp
ret
cmpsb
xor
mov
sub
out
movb
adc
icebp
push
sub
test
xor
out
add
dec
ljmp
pushf
rorl
and
jbe
adc
sarb
insb
adc
add
aad
jb
sub
fidivl
lock
add
popf
js
mov
inc
pop
scas
movsl
ss
rclb
repnz
jecxz
cmpsl
inc
jbe
add
jne
pusha
into
jae
xor
rcrl
dec
xchg
addr16
cmp
add
xchg
ss
lods
xor
iret
repnz
stc
popa
xor
adc
loop
mov
xor
jp
addr16
rcll
mov
fstpt
xor
imul
mov
jge
mov
lret
mov
xchg
fimuls
scas
jge
mov
test
shll
in
rorb
pop
pop
fmulp
mov
mov
dec
inc
mov
jl
cmp
sbb
push
in
pop
sti
sbb
or
jno
mov
aam
and
dec
int
movsl
xchg
punpcklwd
cmp
nop
mov
lock
cwtl
adc
and
imul
dec
rcrl
fwait
sbb
or
cwtl
imulb
loopne
nop
mov
es
push
xor
xor
cmp
xchg
shll
pop
inc
cmpb
addl
lret
fwait
mov
pop
push
es
addl
lods
out
mov
in
pop
push
inc
cmp
sub
clc
add
dec
movsl
aas
dec
adc
lret
fdivr
mov
adc
cmp
xchg
out
cli
xor
xor
roll
mov
jno
xchg
cmp
imul
scas
push
cmp
cmpsb
cmp
jbe
cmpsl
movsb
stc
fwait
mov
lods
addr16
mov
in
push
xor
mov
je
daa
pop
pop
dec
xchg
sbb
pop
jno
push
test
pushf
aad
nop
cmpsb
cmp
out
pushf
popa
xlat
cli
call
xor
xor
int3
sub
icebp
jp
imul
xchg
dec
aas
adc
scas
sbb
mov
aas
or
roll
nop
les
lret
and
xor
ret
cmp
or
mov
adc
stos
mov
call
ret
je
mov
jp
add
loop
enter
aad
push
mul
mov
xchg
jl
test
push
sar
or
mov
in
jp
inc
std
jns
cmc
or
cld
xor
dec
idiv
xor
inc
call
cwtl
lds
dec
or
out
outsb
jecxz
shr
insl
dec
sahf
or
lods
loopne
test
mov
pop
and
stos
hlt
xor
push
push
clc
xor
mov
insb
mov
sub
xor
push
test
fldt
leave
roll
test
call
arpl
aaa
mov
push
enter
jmp
or
jae
and
mov
lods
mov
sbb
shll
mov
leave
jo
sub
or
push
pop
push
jl
xor
mov
sti
nop
imul
rcrl
movsb
es
xor
mov
push
es
pop
sub
add
rol
popa
shl
and
into
xor
shrl
pop
testb
test
jp
xor
sti
cmp
pop
sbb
ret
xchg
ljmp
ss
lock
push
push
jmp
sbb
in
and
lods
stos
or
in
hlt
xchg
stos
mov
aaa
xchg
ret
push
or
rolb
repz
add
scas
popf
adc
out
cld
sahf
fs
lock
pop
push
dec
xchg
sbb
ja
cmp
cmp
sahf
adc
push
aas
dec
pusha
jo
mov
in
mov
push
fidivs
push
out
notb
in
cs
inc
jne
add
push
jmp
adc
ret
test
dec
and
jo
pop
inc
imul
or
mov
jg
fcmovu
jmp
mov
cli
xchg
jbe
mov
insb
add
push
std
mov
sub
sbb
push
push
jg
in
xor
add
test
mov
xor
push
xchg
popa
push
jl
xchg
xor
sub
int3
lret
mov
mov
out
imul
jle
sarb
adc
in
nop
orl
mov
mov
sbb
popa
test
jecxz
xchg
xchg
xchg
mov
fsubl
push
and
testb
jecxz,pn
test
sbb
test
mov
mov
js
sbb
nop
ljmp
ja
push
mov
sti
stos
pusha
pop
shrb
fistl
pop
and
in
aam
pop
dec
xchg
ja
jle
mov
and
sbb
out
test
xchg
mov
mov
aas
lds
call
stos
xchg
or
shl
add
lods
cmpsb
xorl
fwait
in
test
inc
aaa
into
mov
push
jp
dec
jno
imul
sbb
inc
stos
inc
sahf
jl
jle
sub
loopne
xor
ds
jle
xor
jns
lea
repz
out
push
out
jb
iret
pusha
movsl
and
call
xchg
jp
cmp
add
movsb
out
mov
fwait
stc
repz
sahf
arpl
lea
dec
fsubp
mov
push
mov
inc
sbb
inc
lret
push
ds
inc
push
stc
xchg
pop
xchg
stos
dec
pop
jb
mov
pop
mov
cmc
mov
cmp
stc
xlat
sub
cmp
movb
mov
fldt
mov
xchg
jb
push
push
xor
ljmp
hlt
int
ficoms
lock
out
or
aaa
aam
mov
mov
out
or
inc
inc
push
faddl
notb
pop
ret
int
mov
xor
mov
sub
fwait
lret
scas
inc
pop
xchg
sbb
in
fnstsw
cmc
mov
icebp
jl
or
cmp
or
insb
ljmp
mov
xchg
xor
psubusw
push
pop
xchg
add
cmpsb
arpl
jl
into
lods
mov
inc
push
or
scas
rclb
sub
mov
sbb
leave
pop
jno
mov
outsl
pushf
push
lahf
fstpt
push
addr16
inc
clc
xchg
sub
push
fistpl
dec
pop
jnp
icebp
sbb
inc
pop
cwtl
scas
shll
inc
adc
mov
mov
push
mov
lahf
cwtl
mov
fwait
out
fcoms
adc
xchg
xor
rcl
pop
push
xchg
dec
jl
popf
xchg
sahf
mov
dec
hlt
xchg
push
loope
fnstenv
mov
adc
fsubr
xor
in
enter
lock
gs
sti
stos
dec
mov
pop
gs
pop
mov
mov
out
cmp
inc
and
cmp
mov
add
iret
xchg
mov
mov
leave
cltd
lcall
mov
or
stos
mov
inc
xor
clc
pushf
mov
mov
push
sub
enter
sbb
loopne
jae,pt
scas
jnp
and
jl
mov
mov
inc
push
arpl
aaa
adc
out
jae
mov
icebp
inc
sbb
mov
int
xor
pop
add
call
int
outsl
push
and
dec
xchg
in
nop
lods
xchg
adc
movsl
movsb
xchg
mov
mov
rorb
sub
mov
mov
fldenv
jp
test
or
inc
mov
cmp
fistpll
mov
pop
test
stos
fstpl
pop
int3
out
and
sti
pop
out
sub
inc
mov
sub
scas
cmpsl
jnp
cmp
imul
scas
or
test
test
add
pop
or
out
sbb
fstpl
mov
xor
cltd
les
xlat
movsbl
push
in
scas
fidivrs
push
adc
mov
dec
inc
fsub
ret
test
lock
outsb
jle
and
fstpt
pushf
and
jp
movsl
sbb
jg
and
xchg
sbbb
lods
sub
jecxz
mov
mov
and
repnz
stos
or
pop
push
out
test
les
cld
fcomps
mov
push
jl
cmp
mov
jne
jae
push
xchg
test
or
int3
jae
push
inc
xor
ljmp
negb
push
in
xor
pop
sbb
outsb
jge
repz
add
icebp
sbb
pop
xchg
scas
jmp
rcl
push
push
cwtl
and
jno
mov
ret
inc
test
sbb
ljmp
cs
sub
out
sarl
xchg
rep
push
mov
jmp
sarl
ret
jl
pop
or
add
jge
nop
sarb
xor
lock
fmull
popa
fs
pop
test
lea
sbb
add
test
je
aam
lahf
hlt
shlb
or
in
enter
cmc
int3
rorb
add
adc
stos
push
ret
nop
punpckhdq
out
loopne
jmp
mov
jle
movl
mov
mov
nop
pusha
push
aas
les
gs
test
inc
enter
push
jo
repz
sbb
xorl
stos
jmp
getsec
push
call
bnd
dec
pusha
fidivrl
rcrb
lret
adc
fldt
push
nop
je
ja
cmpsb
xchg
call
lods
imul
xlat
adc
jge
cmc
push
cmpl
aas
ret
das
mov
jecxz
mov
in
push
xchg
test
ret
rcr
pop
movl
jnp
arpl
jae
sbb
sub
jge
xchg
jp
test
clc
cmp
shrb
add
push
add
push
push
cmp
xchg
mov
outsl
ss
stos
mov
jae
jecxz
and
test
cmp
mov
lods
or
and
jecxz
sbb
cwtl
test
aam
push
jo
add
mov
addl
hlt
ficoms
pushf
cmp
loope
scas
and
adc
add
pusha
cltd
sub
sbb
sbbl
jne
inc
fisttpll
jmp
and
xor
mov
inc
inc
xor
insl
nop
lods
fistps
lods
rcl
imul
lcall
fldl
jp
sub
dec
jmp
mov
fbstp
push
out
sahf
and
cmp
out
mov
je
dec
push
lea
xor
repnz
lea
jb
and
xchg
mov
jae
cmpsl
nop
imul
inc
inc
sbb
rorb
mov
lods
sbb
outsl
push
sub
stos
out
enter
in
subb
int3
jecxz
inc
lcall
cltd
lret
dec
or
mov
push
adc
es
cmp
jnp
adc
js
out
lods
orl
xchg
scas
sub
mov
ret
cmpsl
daa
test
push
je
mov
pushf
aam
inc
sub
xchg
call
shr
rcrb
std
pop
movsl
mov
add
int
inc
mov
inc
test
mov
aaa
enter
adc
into
add
pushf
mov
cmp
and
clc
aad
push
push
push
mov
ds
shlb
sub
adc
not
scas
push
out
cld
repz
mov
push
jno
pop
insl
sub
add
testb
adc
cmpsl
jno
xor
addr16
arpl
and
pop
out
loope
popl
sub
jns
dec
mov
stc
xchg
fsubs
pop
mov
bound
imul
aas
gs
ret
and
in
pop
notb
mov
lret
cmp
mov
or
outsl
mov
mov
stos
mov
mov
sbbl
cmp
xchg
outsl
or
pop
mov
jg
sub
jns
popf
es
xchg
aad
loop
je
fsts
sub
dec
or
mov
loopne
mov
xor
pop
mov
aaa
dec
data16
cmp
cmp
fwait
imull
scas
clc
push
movsb
and
mov
ds
mov
jp
jnp
jmp
mov
aad
iret
inc
popa
test
iret
sahf
sub
pop
jp
repz
sbb
cltd
hlt
scas
nop
push
cmp
xor
cs
clc
mov
aas
cmp
out
jae
add
ror
test
lcall
lahf
fsubrl
das
std
xor
sub
xchg
in
sti
ss
and
or
mov
xchg
inc
int3
cmp
gs
lods
dec
arpl
sub
pop
call
out
lahf
leave
arpl
xchg
fcompl
js
and
mov
add
js
inc
imul
inc
es
jo
mov
mov
inc
cmp
mov
andl
iret
xor
addr16
jae
stos
popa
jb
push
jns
and
push
push
mov
mov
dec
mov
cs
inc
jge
cmc
or
scas
jmp
test
dec
pop
push
xchg
out
repnz
dec
cmpsl
push
insl
xor
loope
fdivl
xor
push
and
mov
lds
jbe
clc
hlt
outsl
adc
out
adc
outsl
icebp
bound
lahf
test
stos
mov
daa
mov
adc
and
outsl
add
mov
or
lret
pusha
dec
jnp
lods
cmp
ja
dec
scas
push
sub
dec
xchg
or
dec
nop
push
icebp
inc
mov
ljmp
mov
lret
mov
push
xchg
test
xor
cmpsb
xchg
or
mull
std
sub
movsb
mov
test
das
add
sbb
adc
ret
jle
jne
xor
or
movb
imull
sbb
push
lret
mov
jo
jle
aaa
lret
jae
jl
movsl
mov
and
test
fcoms
jo
sbb
mov
mov
out
in
sahf
jecxz
cmp
ds
call
jae
inc
ret
and
cmp
inc
or
mov
leave
jl
mov
add
fsts
cmp
imul
shlb
cmp
mov
sbb
adc
mov
xor
imulb
or
adc
and
fsubl
or
jge
jb
xlat
fmuls
int3
sbb
sar
push
stos
scas
data16
and
jge
pop
jle
adc
xchg
mov
fistps
call
lret
ror
dec
shll
and
aaa
cld
xor
push
mov
in
pop
in
out
sub
dec
mov
sub
cwtl
push
cmpsb
add
xchg
leave
xor
push
mov
sbb
pop
jg
fcomps
and
dec
nop
sub
pop
xchg
jno
jne
push
push
jp
adc
pop
js
jg
dec
dec
add
adc
lds
xchg
cmc
fisttpl
cltd
cmp
popa
push
pushw
loop
xchg
adc
adc
xchg
push
stc
jecxz
push
inc
data16
loop
push
pop
loop
mov
imul
add
jne
sbb
fisubs
add
or
fwait
and
xchg
int
xor
cmpsl
aas
stc
das
imul
inc
pop
scas
js
sbb
imul
imul
fs
in
cmp
dec
lahf
dec
jl
lea
bound
rcl
jmp
stos
xchg
or
dec
icebp
ret
push
jle
dec
xchg
bound
or
dec
add
fsincos
xchg
sbb
push
repz
jmp
mov
jp
sub
cwtl
jmp
push
sbb
hlt
jo
leave
and
stc
mov
mov
test
daa
mov
test
and
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
mov
mov
and
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
jmp
lret
pop
idivb
addr16
push
into
sbb
sub
add
sahf
jnp
in
pop
into
and
jb
movsl
push
mov
aaa
cmp
ret
sbb
jae
mov
mov
inc
hlt
mov
les
sub
lock
or
inc
pop
int
and
xlat
shlb
push
or
xchg
lcall
push
inc
mov
xchg
pushf
or
dec
pop
insb
in
lret
fisubs
or
cmpsl
adc
outsb
scas
add
fdivrs
add
mov
lret
sbb
pop
xor
les
test
int3
and
dec
das
mov
push
popf
in
subl
jno
in
sbb
xor
xchg
in
shr
das
pop
imul
repz
jmp
stos
outsb
in
pop
aad
inc
lods
sub
add
push
pushf
cmc
ret
push
mov
int3
jg
cmp
notb
popa
repz
mov
addr16
icebp
adc
shrb
xchg
ss
cmp
in
pusha
mov
add
outsl
shll
mov
cmpsb
loopne
test
jle
or
add
sar
jge
lods
cmpsb
nop
ss
fs
mov
jl
bound
lcall
sub
add
lret
jecxz
mov
adc
dec
jo
xlat
shrb
out
xchg
mov
out
les
pop
inc
xchg
and
loopne
mov
add
mov
mov
cmp
sub
aad
xchg
cmpsb
pop
xchg
dec
inc
xchg
gs
xchg
and
lods
clc
xchg
imul
test
ljmp
cs
add
stc
push
sbb
insb
adc
lods
jecxz
push
shlb
pop
fldl
jl
jle
cmp
sti
push
push
sbb
jo
cmp
sbb
mov
nop
dec
or
mov
cmpsb
addr16
in
dec
fsin
push
rcll
leave
or
lds
out
repz
in
push
mov
dec
sbb
loop
sbb
pushf
dec
dec
or
jl
xchg
adc
into
and
xor
clc
jbe
adc
stos
out
pop
and
mov
jl
lods
mov
popa
cmpsl
subl
outsb
testb
aaa
pop
mov
out
xor
mov
sub
pop
xor
mov
aaa
into
insb
mov
popa
mov
jp
push
sbb
inc
lcall
js
aam
jg
jbe
scas
sub
mov
sub
dec
in
incb
dec
stos
push
jg
mov
dec
popf
sub
mov
sub
and
sbb
sti
push
fcmovnb
cli
add
mov
scas
test
mov
popf
imul
iret
push
add
mov
sarb
mov
mov
movsb
fistps
cltd
jno
into
clc
arpl
xor
imul
pop
sahf
test
xor
repz
shll
arpl
jmp
ljmp
jno
dec
jo
into
dec
sbb
fxam
sub
loopne
pop
and
add
pop
xor
push
and
and
int3
sub
test
cmp
sbb
add
gs
inc
xchg
imul
sti
fimull
test
sub
stos
bound
push
aam
cli
pop
test
xchg
sub
rcl
scas
lds
aas
inc
dec
pop
call
fimuls
sub
ret
popa
scas
xchg
lock
fwait
inc
sbb
ss
loopne
neg
push
dec
lahf
daa
js
push
or
nop
out
or
movsl
ljmp
pop
sbb
icebp
dec
cmp
mov
xchg
inc
push
dec
inc
aam
mov
push
test
cltd
stc
jb
push
mov
cmc
fsubrs
fiaddl
inc
mov
clc
xchg
cmp
lret
jb
mov
fcmovb
lods
adc
or
rorl
je
aaa
mov
movsl
call
pop
sub
in
jne
mov
and
icebp
mov
ret
jne
push
pop
fstps
dec
pop
bound
movsb
dec
jp
das
and
fldl
popf
push
xchg
pop
shll
mov
add
repz
inc
push
push
mov
mov
mov
into
movsl
lods
xor
imul
add
and
pop
or
sbb
cmp
xchg
push
inc
cmp
push
mov
out
iret
xchg
mov
jae
sbb
push
cld
pop
aad
ss
in
rorl
out
lock
shll
leave
mov
inc
dec
ja
cmpsl
data16
inc
and
pushf
jecxz
xchg
js
push
mov
mov
xchg
and
mov
cld
nop
aam
fdivp
out
adc
xchg
xchg
mov
in
adc
push
or
cmp
mov
jp
pop
andb
inc
mov
mov
addr16
add
push
push
inc
adc
sarl
pop
out
lret
mov
xor
lcall
adc
fidivs
mov
jmp
or
push
jnp
xchg
pop
fwait
imul
mov
xor
mov
push
sbb
rorb
repz
sbb
call
xor
loop
xchg
push
mov
xor
sbb
sub
cmp
fs
xchg
rclb
add
ffreep
adcb
and
push
inc
arpl
repz
dec
cmpb
xchg
push
xchg
mov
out
push
jo
mov
daa
or
and
mov
mov
outsb
or
push
lods
push
cli
push
out
les
popf
into
jno
clc
cli
mov
push
decl
loope
fcmovu
popa
pop
mov
ficompl
xchg
divb
ret
inc
popa
adc
sub
clc
in
jbe
movsl
ret
push
add
xlat
jnp
test
movntps
pusha
ds
xchg
mov
dec
cld
loope
jo
int3
dec
xor
fcmovnbe
lret
stos
add
and
cmpb
cmp
mov
bound
push
mov
mov
mov
ror
inc
mov
sbb
cli
loopne
xchg
lds
outsb
ret
add
iret
mov
xchg
xchg
insb
add
pop
mov
fnstsw
xor
test
rclb
mov
and
inc
dec
or
out
or
pop
fwait
lcall
scas
mov
std
sbb
fs
mov
out
mov
sub
mov
ds
loope
xchg
sbb
adc
xchg
xchg
clc
jp
pop
mov
push
in
cmp
add
repnz
or
adc
jp
je
add
mov
cmp
icebp
and
hlt
push
jne
test
shlb
aas
adc
popa
dec
mov
lret
mov
or
mov
hlt
push
mov
repz
adc
test
mov
adc
push
outsb
out
lds
popf
lods
lret
ja
pop
ljmp
outsl
xchg
loope
insb
mov
test
cmp
or
push
jle
jecxz
pusha
push
dec
ds
adc
jbe
mov
outsb
ljmp
sbb
xchg
mov
jp
cmpsl
jg
mov
lcall
ret
mov
sbb
fistl
xchg
in
aam
push
pushf
or
push
pop
push
orl
push
xchg
lcall
lahf
pop
lret
subps
cmp
lds
mov
mov
push
fcmovne
insl
dec
dec
xor
outsl
xchg
lcall
xor
sbb
sbbb
dec
or
and
stc
xchg
inc
mov
jnp
pop
inc
bound
or
sbb
insb
xor
shl
mov
mov
dec
mov
jnp
add
mov
fsubrs
adc
mov
aas
cltd
push
or
aaa
in
mov
and
sub
jne
out
jle
test
cmpl
jecxz
mov
int
and
pop
jnp
xlat
pop
mov
adc
fucomip
jp
pop
jae
xor
cmp
loop
jmp
mov
out
add
lods
fdivrs
lds
mov
nop
mov
xchg
loope
cmp
stos
cmpsb
inc
or
xor
dec
pop
stos
loop
cmpsb
ljmp
mov
xchg
inc
add
pusha
icebp
cli
jmp
adc
jb
push
sub
and
cmc
fprem1
cli
sub
inc
mov
ja
test
jmp
shrl
xor
aas
hlt
adc
repnz
sbb
arpl
and
roll
iret
mov
call
adc
or
xchg
pop
decb
fs
lret
mov
mov
jbe
fucomip
inc
dec
sub
jge
pop
enter
adc
xor
inc
sahf
push
inc
js
lahf
mov
jmp
and
in
bound
cltd
xchg
mov
stc
subb
sub
loope
cltd
pushf
adc
sbb
push
rcl
enter
mov
pop
xor
mov
dec
mov
imul
orb
aad
outsb
orl
jnp
xchg
testb
lret
inc
scas
pop
inc
mov
cmc
adc
inc
mov
andps
sti
dec
mov
xor
fnstenv
out
sbb
lods
xor
outsb
xchg
cmp
test
lea
dec
fcomip
mov
mov
shll
popa
aad
in
clc
jmp
push
test
mov
mov
fwait
adc
pop
fnstenv
push
jae
mov
test
iret
adc
add
cmp
add
adc
fwait
pop
insl
sub
sbb
cmp
das
jmp
call
mov
pop
xchg
mov
vmovapd
xchg
fs
mov
mov
push
lret
movsb
and
and
mov
pop
popa
loope
adc
hlt
lret
xchg
repz
rol
cmp
test
mov
cmp
dec
ljmp
or
lods
lcall
or
fldl
out
daa
push
mov
xchg
jle
aad
pushf
es
movsl
push
cmc
or
jb
mov
inc
insb
jo
xchg
cltd
aad
jno
pushf
jo
jmp
shld
jecxz
popf
and
mov
adc
loop
daa
lock
movsl
cli
mov
and
out
and
in
dec
xor
lcall
xchg
sbb
mov
push
arpl
scas
pushl
mov
fists
or
shlb
in
and
int3
lock
mov
jne
ljmp
int
xor
fsubr
clc
cmp
test
imul
xchg
iret
dec
inc
jg
lret
adc
movsb
pop
mov
sahf
sub
fwait
aaa
cmp
pushf
enter
decl
das
adc
pusha
in
sbb
push
mov
sbb
mov
mov
push
movsb
rorl
push
int
ljmp
hlt
inc
jmp
or
or
push
mov
add
ret
adc
arpl
or
loop
add
lods
ds
int
adc
cmp
jle
aad
pop
and
aaa
mov
jl
push
movsb
insl
repz
adc
push
add
jl
push
inc
clc
pop
ret
sub
lcall
fistps
jle
and
push
or
jge
xor
icebp
xchg
std
mov
sbb
clc
push
xlat
in
aas
sti
adc
xor
mov
lods
movsl
adc
test
lea
nop
call
cli
adc
push
das
stos
pusha
sub
cwtl
xor
xor
lahf
sbb
mov
js
arpl
inc
and
dec
fbld
or
insb
fwait
add
lds
fsubl
jno
into
test
outsl
arpl
jp
push
aam
outsl
or
push
mov
pusha
and
flds
adc
mov
push
popa
lret
lea
pop
xchg
jg
in
pcmpgtd
rcrb
jnp
mov
mov
fwait
stos
push
arpl
pop
loopne
push
addr16
sub
test
out
into
dec
les
push
stc
mov
sub
mov
add
ja
addb
fstpt
inc
ficoms
repnz
lods
xor
push
jecxz
push
imul
and
or
shl
jp
push
pop
push
add
xor
rcrl
and
sub
int
fbstp
fdiv
cld
xchg
shrl
out
xchg
or
sbb
or
pop
pop
js
add
push
popa
or
gs
cmp
and
or
sarl
test
nop
scas
inc
mov
testb
xchg
aaa
icebp
sahf
mov
into
xchg
mov
adc
push
pop
mov
add
xor
pop
imul
cmpsb
ffreep
and
rorl
daa
fcoms
cs
adc
enter
push
jbe
xchg
imul
add
sahf
sbb
xchg
xor
pop
pop
in
jp
mov
je
xorl
mov
ss
hlt
repz
iret
pslld
pop
int3
lcall
adc
and
pop
adc
stos
sub
mov
adc
jecxz
xorl
aaa
aad
test
rclb
cmc
add
lds
dec
out
pop
out
adcl
aad
or
aad
lret
std
call
cmp
pop
push
and
pop
mov
lea
fdivr
into
std
cmp
cmp
pop
mov
shl
loope
push
xor
pop
fcomps
lds
out
pusha
lea
fwait
lret
js
mov
sub
cmp
call
in
out
notl
addr16
je
inc
jmp
and
sub
push
mov
pusha
xor
or
sub
dec
outsl
mov
xchg
jo
or
clc
es
loopne
popa
jnp
pop
ret
mov
out
jno
pop
mov
sbb
loope
mov
or
call
mov
stc
outsl
aaa
fimuls
dec
dec
sbb
les
test
jmp
inc
jg
test
les
dec
jae
mov
mov
push
and
mov
je
pop
push
sbb
jmp
push
push
jno
jp
adc
outsb
movsb
jbe
pop
loopne
cs
cmpb
lahf
inc
jp
xor
pop
xlat
mov
sti
repnz
xlat
leave
inc
xor
sahf
out
lret
es
je
adc
cmc
sub
scas
dec
xchg
aas
popf
aam
icebp
xor
pop
daa
xchg
push
or
outsl
ljmp
adc
cs
mov
popf
jge
sub
lret
enter
testb
imul
mov
jecxz
or
xor
jmp
inc
xchg
xchg
cli
icebp
inc
ror
dec
call
stos
xchg
push
stc
inc
aas
scas
pop
xor
test
cmp
push
stos
sbb
xchg
inc
stos
arpl
out
movsl
push
cmc
mov
repnz
ja,pn
dec
mov
sbb
test
inc
sub
xchg
cmp
mov
cltd
fwait
ret
cmp
jecxz
xlat
fs
arpl
push
push
inc
push
fs
fmul
cmp
mov
inc
xchg
sub
call
aas
jg
sub
insb
or
out
xor
dec
orl
les
repz
xlat
hlt
xor
xchg
push
xor
repnz
ja
lods
add
repz
add
sub
mov
cmovo
pop
mov
repnz
inc
sti
dec
scas
inc
enter
pop
iret
xchg
jle
jmp
ja
mov
cs
lods
loope
push
fidivl
xchg
ljmp
dec
sti
or
xchg
xchg
dec
inc
xlat
rorb
cmp
xchg
sbb
push
lods
cltd
repz
xchg
sarl
push
cmp
inc
cmp
je
cmp
pop
mov
jge
fsub
push
hlt
popf
in
and
scas
mov
jb
sub
and
cmp
aas
pop
add
mov
dec
rorb
add
out
cmp
bound
stc
sub
stc
xor
or
in
fdivrl
sbb
add
movsl
int
les
pop
dec
fmuls
jle
and
mov
and
in
jnp
xchg
xchg
jl
lahf
add
decl
iret
aaa
lret
sub
pop
into
fistpll
lcall
pop
inc
fcomip
dec
dec
aad
scas
pop
xchg
in
add
xchg
nop
dec
leave
xor
jge
mov
pcmpgtb
pop
ss
outsb
mov
inc
aad
es
pop
outsl
cmc
inc
mov
outsb
jo
jmp
pop
dec
lods
adc
cs
addr16
repz
push
pop
cmpsb
gs
outsl
or
stos
cld
push
lock
jnp
ja
jle
lret
or
test
xor
jge
lea
lahf
pop
pusha
stos
ljmp
test
mov
test
sti
inc
cmp
fstpt
into
or
adc
and
add
push
add
cmc
jmp
inc
mov
adc
loopne
mov
loopne
mov
inc
aam
push
pop
add
cmc
mov
rorl
nop
sbb
lock
cs
rolb
adc
and
cs
or
cmp
dec
adc
and
add
sbb
out
inc
bound
mov
xor
ss
push
cmp
into
cwtl
pop
dec
outsb
pop
lret
cmp
ja
or
lods
into
xor
clc
cli
filds
jbe
mov
rcrl
push
cmp
lret
sub
fsubs
ficoms
jle
ljmp
cmp
mov
repnz
mov
fwait
mov
mov
rcll
xchg
cmp
push
bound
gs
pop
cwtl
mov
pop
mov
bound
push
mov
mov
shll
data16
sbb
les
inc
mov
inc
xchg
push
repz
cs
cmp
xorb
insl
fcmovne
jmp
inc
pop
cmp
pop
into
ret
push
push
mov
xchg
aad
into
sub
cmpsl
inc
sub
mov
cmpsb
and
daa
push
push
pop
fmul
test
ljmp
sub
stos
jb
or
pusha
xchg
mov
scas
jnp
es
gs
inc
jb
lods
inc
out
push
jle
in
inc
sbb
cltd
push
add
cmpsl
int
int
clc
mov
lahf
sub
inc
adc
jne
sub
xchg
popf
mov
pop
sbb
test
repz
add
mov
and
nop
std
lock
stos
imul
fdivs
mov
cmp
imul
sbb
dec
push
loop
pop
push
mov
mov
xchg
faddl
lret
and
in
ret
leave
popf
lcall
outsb
test
mov
outsl
fistl
mov
pop
int3
dec
sbb
lds
addr16
rep
lret
mov
add
mov
repz
add
daa
int3
sub
mov
je
repz
sahf
sub
xor
lods
mov
shlb
test
cmc
jo
inc
mov
adc
sbb
enter
push
sub
xrelease
shlb
adc
mov
and
mov
cmp
or
jnp
push
inc
shr
pop
and
gs
fcmovnbe
adc
mov
push
jmp
test
stc
inc
loope
lret
adc
iret
test
pop
pop
clc
mov
xchg
mov
sbb
xor
jle
and
push
hlt
pop
cmc
xchg
sub
outsb
inc
repz
mulb
andb
adc
mov
imul
add
insl
pop
adc
jge
loop
nop
cmp
adc
lds
dec
repz
and
add
fists
dec
jne
adc
dec
add
lret
jge
lret
adc
adc
pusha
pop
shll
enter
adc
imul
adc
dec
add
jnp
fadd
push
rcrb
pop
inc
add
sub
cmp
dec
inc
out
jne
sub
cmp
mov
insl
dec
jae
outsl
test
ret
aas
inc
add
jno
push
ret
inc
mov
adc
fucomp
test
std
sarb
add
and
mov
movsb
push
lea
jne
aad
dec
adc
ja
movsb
repz
cltd
jb
leave
repnz
inc
mov
scas
cmp
sahf
ds
enter
cs
mov
xchg
or
mov
pop
dec
fmuls
cmpsl
mov
lret
xor
mov
adc
add
dec
test
testl
add
fwait
mov
roll
inc
push
dec
clc
scas
and
adc
dec
adc
and
cli
dec
dec
xchg
aad
hlt
xor
fcom
mov
sti
inc
inc
mov
or
jg
cmp
pop
lods
ret
mov
movsl
dec
leave
shll
push
mov
mov
mov
jno
mov
sbb
out
pop
in
mov
mul
cmp
sbb
int
pop
push
sub
lcall
xchg
push
incl
xor
ljmp
stc
add
int
xor
ret
push
push
sub
dec
cmpsl
sbb
add
jle
cmp
lods
push
popa
jecxz
into
mov
repnz
fmull
mov
and
xor
add
ss
filds
adc
add
out
mov
popf
pop
mov
push
cmp
xchg
jne
pop
out
mov
sub
inc
jns
scas
xor
jae
jecxz
scas
out
sub
cmc
inc
cmc
push
dec
lods
cmp
lret
mov
pusha
insb
dec
je
aaa
in
aam
fs
adc
push
pop
movsb
sbb
insl
pop
lcall
test
dec
fsubl
xchg
ss
gs
cmp
inc
sub
mov
dec
aaa
js
inc
pop
test
xchg
or
inc
inc
lcall
sahf
pop
loopne
and
daa
lcall
hlt
jbe
test
cmp
adc
rclb
jae
pop
std
mov
mov
sahf
fadds
sub
roll
popf
imul
fsubrs
jae
test
inc
aad
adc
cmpl
movsl
mov
and
cmp
pusha
xlat
insl
push
dec
je
push
jmp
add
test
and
sub
addl
pop
mull
xchg
xchg
jo
sbb
sahf
stos
xchg
pop
outsb
push
add
cld
push
das
fs
sub
std
dec
sub
scas
test
sbb
or
xchg
lods
loope
es
cmp
and
test
dec
das
mov
mov
daa
xor
shrb
mov
mov
pop
adc
pop
fwait
roll
pop
adc
mov
jp
adc
std
inc
or
xchg
dec
dec
imul
outsb
lret
xchg
mov
cmp
ss
popa
rcrb
jecxz
push
je
jmp
inc
xor
pusha
xor
ljmp
xor
jbe
mov
adcb
and
pop
jo
push
add
pushf
scas
and
pop
sub
mov
cwtl
jp
ljmp
jb
sbb
push
cmpl
and
in
outsb
outsl
sub
mov
push
inc
jmp
dec
cmp
sub
and
cmp
int3
jns
mov
out
or
lods
mov
push
aam
cld
inc
leave
inc
addl
dec
pop
aam
out
jae
adc
mov
pop
andl
insb
inc
test
and
lret
loopne
mov
or
clc
cltd
adc
adc
mov
cwtl
pop
dec
insb
pop
mov
or
insb
into
xchg
hlt
dec
in
pop
iret
push
lods
ret
outsl
repnz
pop
lret
dec
mov
das
test
sbb
aaa
aaa
call
stos
jns
sbb
out
inc
sahf
ja
cmp
dec
and
dec
jb
in
jae
mov
ljmp
in
pop
dec
and
je
sub
pop
mov
movsl
jno
xor
pop
sub
inc
je
mov
icebp
ret
and
lds
fistpll
push
mov
mov
dec
insb
jb
and
lcall
cmc
orb
int
dec
arpl
jbe
jg
add
push
sbb
repnz
sahf
lods
pusha
pop
pop
push
mov
and
or
out
mov
loope
out
cmpsl
dec
push
push
xor
or
dec
imull
std
leave
push
sbb
int3
data16
dec
into
mov
insb
jns
orb
ja
inc
icebp
lods
adc
adc
jae
dec
bound
sbb
lret
inc
pop
fistps
mov
sbb
jo
sub
je
jae
mov
sub
or
mov
loopne
ja
xor
xlat
push
mov
inc
sahf
pop
lds
and
mov
push
jne
or
movsb
adc
mov
lods
inc
push
xor
mov
in
sbb
mov
pop
cltd
inc
mov
push
inc
jne
xchg
mov
jl
or
xchg
mov
sbb
mov
int
cmc
fisubl
addr16
push
adc
pop
cmpsb
mov
add
xchg
and
adc
into
pop
sbb
pop
dec
enter
pop
dec
mov
outsl
and
mov
fisttpll
sub
sub
inc
cmp
pop
jle
add
pusha
xor
xor
fwait
cs
inc
mov
and
lret
popf
mov
scas
mov
mov
mov
inc
dec
push
mov
es
popf
in
mov
arpl
xor
dec
lea
adc
jnp
iret
xor
adc
je
xchg
adc
cltd
jmp
cmpsl
nop
scas
sbb
add
jge
mov
dec
inc
pop
leave
push
loope
xchg
test
fs
mov
mov
sub
sub
shll
mov
mov
call
sub
mov
jns
stos
xor
pop
mov
movsb
sti
cmp
mov
push
test
mov
jl
mov
push
ficompl
in
sahf
xor
or
sbb
push
bound
inc
jecxz
push
mov
sbb
add
mov
jbe
rclb
sbb
sub
xorb
lcall
roll
rolb
std
sbb
mov
mov
loope
add
and
push
add
adc
add
push
out
sub
gs
popa
pop
inc
pop
lods
inc
enter
jno
sarb
dec
xor
sarl
fcmovnu
mov
loope
xor
mov
jns
addr16
pop
push
mull
ret
adc
xchg
mov
ljmp
nop
out
shlb
test
popa
mov
inc
adc
sub
mov
mov
and
sbb
loopne
movsb
rorb
scas
push
out
cmpsl
mov
in
pop
fistpl
dec
push
xchg
call
idivl
aam
push
add
lret
jg
pop
jns
fistpl
and
fidivrl
xor
jl
repz
call
ljmp
dec
das
and
sbb
cs
mov
mov
sub
xchg
add
ret
jp
inc
psubw
push
cmpsl
inc
jbe
stos
inc
inc
jb
fnsave
add
pop
test
lcall
imul
push
stc
and
add
nop
jmp
cmp
int3
and
xchg
mov
push
or
outsb
enter
fiadds
pop
clc
mov
cwtl
cmp
sbb
fistl
xchg
push
dec
fimull
cmp
jae
or
jg
arpl
hlt
hlt
xor
jp
dec
cmpsl
sbb
pusha
xchg
mov
sbb
dec
scas
jge
pop
icebp
jp
pop
lods
adc
xor
adc
mov
pop
shlb
les
push
scas
pop
mov
mov
xchg
push
xchg
xlat
xor
push
and
je
push
jp
and
pop
inc
test
scas
xor
inc
push
in
mov
jge
ljmp
cmp
jo
test
pop
int3
add
or
fisttps
ror
neg
leave
outsl
loopne
push
sbb
and
shrb
movsb
repnz
add
imul
das
cltd
jmp
pop
sub
sahf
mov
pushf
adc
arpl
dec
lahf
test
mov
stos
mov
std
xchg
add
xchg
add
cmp
test
or
jmp
inc
rcrb
lret
ret
sub
mov
repz
int
add
lret
jp
cs
call
inc
leave
lret
scas
icebp
inc
aas
lret
dec
dec
sbb
jno
cmp
pop
xor
push
aaa
add
xor
hlt
or
and
xor
pop
out
xchg
push
push
dec
inc
and
sub
test
and
adc
jl
fisubl
decl
mov
mov
loop
enter
xchg
xchg
mov
mov
js
sub
pop
push
add
test
sub
pop
ret
jbe
mov
aad
xchg
outsb
jne
clc
arpl
xchg
je
xchg
push
repnz
cmp
pop
and
aad
test
js
call
mov
ror
ds
cwtl
setns
pop
xchg
mov
out
add
push
lcall
mov
insl
sub
xor
pop
mov
push
dec
es
and
int
jne
adc
xorb
les
aad
in
adcb
xchg
jbe
inc
mov
push
mov
out
sbb
or
xlat
mov
and
aas
mov
rcrb
jmp
outsl
aad
test
adc
jp
outsb
pop
cld
lea
push
in
inc
leave
les
inc
dec
add
xchg
inc
sahf
adc
mov
jno
xor
push
dec
jp
jbe
pushf
push
and
mov
inc
sbb
inc
add
sbb
shrl
sub
fcompl
xchg
popf
int
lret
push
popf
punpckhdq
inc
out
orb
inc
cmc
inc
pusha
pop
mov
rcr
adc
mov
loope
fldcw
scas
dec
jo
ret
repnz
lahf
cmp
cmp
push
daa
mov
fistpll
mov
adc
xchg
sub
push
outsb
fwait
cmpsl
and
out
je
dec
cwtl
mov
rclb
stos
rcrb
cmc
cmp
jg
stos
adc
or
cmp
mov
into
sbb
sbb
ljmp
pop
sub
out
xor
fsubrs
push
mov
cld
mov
cmpsl
jmp
cmp
inc
js
cmc
dec
pop
cwtl
adc
cmpsb
inc
shlb
stos
lret
fildll
call
subb
push
or
push
mov
repz
and
mov
popf
leave
fucomip
adc
dec
test
cmp
dec
pop
mov
mov
inc
pushf
xor
testb
stc
inc
sub
dec
rcl
pop
call
int
push
out
subl
in
sbb
pop
sub
loope
lcall
outsl
xchg
adc
iretw
dec
cmp
ds
test
pop
cmpsl
ja
pusha
jo
jle
loop
sbb
xorb
and
int
je
mov
test
push
mov
fistpll
lea
pop
imul
nop
xchg
xchg
dec
xor
test
lods
inc
lock
outsl
in
icebp
pop
xchg
push
pop
les
imul
adc
push
fdivrl
lods
pop
jecxz
popf
leave
xor
rorl
sub
pop
pusha
je,pt
lods
pop
jle
into
lods
push
and
mov
ds
sbb
sbb
fdivrs
mov
lea
mov
mov
mov
xor
add
mov
mov
xor
mov
add
cmp
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
sub
mov
push
movl
push
movl
push
movl
movb
cmp
je
xor
movl
jmp
mov
movl
cmp
jne
mov
push
adcl
push
call
sbbl
test
movl
je
push
andl
push
call
andl
push
subl
lea
adcl
push
xorl
call
add
movl
or
mov
adc
mov
movl
dec
lea
andl
xor
add
inc
mov
cmpl
jle
jmp
push
pushl
push
call
cmpl
jb
mov
adc
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
or
or
mov
mov
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
mov
sub
xor
addl
mov
orl
add
movl
mov
not
mov
cmp
jne
neg
mov
mov
xorl
mov
xor
addl
add
addl
mov
mov
xor
add
mov
mov
subl
xor
add
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
pushl
call
jmp
mov
mov
mov
sbbl
mov
movzwl
sub
mov
mov
mov
mov
addl
mov
subl
mov
movl
mov
add
mov
xor
add
jmp
mov
cmp
jne
mov
cmp
movl
jne
push
xorl
push
call
orl
test
movl
je
mov
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
adcl
push
incl
push
call
test
movl
je
sub
mov
sbbl
mov
addl
xor
adcl
lea
push
mov
andl
xor
xorl
lea
push
xor
mov
pushl
xorl
call
xor
xor
mov
sub
sub
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
call
jmp
mov
add
xor
xor
lea
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
xor
xor
add
andl
mov
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
mov
adcl
xor
movl
lea
movl
mov
movl
cmp
movl
jbe
and
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
sbb
mov
mov
mov
mov
decl
sub
xor
movl
mov
lea
movl
mov
lea
movl
mov
mov
movl
cmp
jne
mov
movl
cmp
movl
jne
push
sbbl
push
sbbl
call
orl
test
je
movl
mov
cmp
movl
jne
movl
mov
cmp
jne
addl
push
push
call
test
movl
je
mov
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
push
addl
push
call
test
movl
je
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
jne
xorl
push
push
call
orl
test
je
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
jne
xorl
push
push
addl
call
andl
test
je
mov
movl
cmp
jne
movl
mov
movl
cmp
jne
push
push
call
subl
test
je
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
jne
addl
push
sbbl
push
addl
call
test
je
mov
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
sbbl
push
orl
push
adcl
call
adcl
test
movl
je
movl
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
subl
push
push
movl
call
test
je
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
adcl
push
adcl
push
call
subl
test
movl
je
movl
mov
movl
cmp
jne
movl
mov
movl
cmp
movl
jne
push
push
sbbl
call
subl
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
jmp
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
movl
cmpl
je
cmpl
jge
jmp
push
call
mov
dec
mov
jmp
mov
mov
or
movl
sbb
mov
sbb
push
mov
incl
xor
sub
mov
adcl
push
mov
xorl
add
movl
cmp
je
andl
xor
add
inc
mov
cmpl
ja
jmp
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
xor
xor
or
mov
andl
xor
addl
xor
adcl
add
add
adc
andl
xor
xorl
mov
push
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
add
adc
xor
xor
cmp
jmp
pop
popf
cwtl
jo
jp
mov
cmp
sbb
jnp
sahf
jnp
push
lahf
mov
lock
xchg
addr16
xchg
push
out
adc
xlat
jns
int
imul
out
aas
inc
loopne
pop
fcom
lods
cmp
sbb
xchg
xchg
pop
dec
aam
dec
cmp
insb
cld
xor
pop
or
or
pop
fimull
inc
cmpsl
ljmp
std
inc
add
nop
into
xor
jecxz
dec
loopne
mov
mov
dec
and
repz
stos
ficompl
pop
sub
test
xchg
mov
push
add
pop
cmpb
fisttps
and
adc
inc
test
xor
dec
mov
inc
mov
ret
imul
xor
mov
movsb
fadds
arpl
out
pop
inc
loop
inc
scas
push
insb
clc
adc
and
cmp
out
xchg
cs
ljmp
mov
add
ljmp
pop
cs
daa
xor
adc
rcl
fs
pop
fistpll
and
push
popf
outsb
push
push
je
fistl
test
push
fcmove
sub
lcall
lret
shl
xchg
scas
scas
scas
xor
fdivr
xchg
mov
imul
mov
and
je
js
out
mov
cmp
sub
ljmp
cmpl
cwtl
push
stos
jecxz
jmp
mov
pop
lock
xorl
flds
push
jnp
out
in
push
iret
les
sub
lea
into
loop
icebp
loop
scas
push
mov
and
popf
and
mov
mov
arpl
lods
scas
cwtl
xor
int
sbb
repz
cmp
cltd
mov
jae
leave
daa
xor
mov
std
sbb
idivb
clc
aad
mov
jp
dec
das
mov
or
icebp
movsb
ficompl
sahf
pop
xor
push
sbb
xchg
fmull
pushf
sbb
gs
pop
mov
ja
out
lock
fmull
popa
leave
clc
lret
pop
shll
orb
roll
movsl
ss
mov
lcall
cmp
rcr
outsb
flds
or
dec
push
sub
push
push
or
mov
mov
xchg
aaa
lock
cmpsb
leave
frstor
mov
cmpsb
ljmp
cld
lock
sarb
clc
xlat
fidivs
cmp
jae
pop
pop
repnz
jb
in
or
es
add
fs
aaa
ret
jne
xchg
loopne
pop
hlt
sub
lahf
jge
sub
fwait
nop
fisubl
cli
es
jno
or
pop
sbb
shlb
xchg
shr
jb
mov
mov
ret
sub
call
pop
mov
xor
xchg
dec
cmc
sub
adc
pop
lods
rol
in
dec
push
lods
repz
iret
add
ret
xlat
push
mov
iret
imull
push
insb
popa
sub
mov
mov
call
push
push
cmpsb
int
jle
test
xor
push
faddl
ds
sbb
frstor
das
adc
xchg
stos
sub
lea
xor
dec
in
and
xlat
cld
ds
insb
inc
pop
pop
push
sub
and
jae
pop
mov
mov
iret
aad
dec
fisttpl
xor
data16
mov
mov
push
dec
insb
sbb
mov
add
testl
lock
gs
in
dec
cwtl
ret
mov
hlt
int3
push
jae
dec
push
movsb
cs
sbb
mov
pop
addl
dec
inc
mov
dec
push
lods
jnp
scas
fcomip
adc
sti
stc
and
rcrb
test
inc
xchg
adc
ds
call
test
scas
mov
shrl
sahf
outsb
iret
mov
icebp
inc
add
je
sub
addr16
sbb
add
cmc
stos
xor
clc
test
and
mov
iret
mov
mov
inc
mov
cmp
clc
and
mov
jmp
ret
scas
mov
cmp
inc
or
pop
push
and
push
jmp
hlt
sbb
jmp
and
hlt
mov
in
loopne
mov
and
pushf
out
and
out
or
pop
or
stos
ret
test
xor
jbe
sbb
test
lock
out
xchg
dec
and
xchg
jmp
add
fcoms
out
cmp
or
xor
dec
rcll
in
rorl
push
add
inc
out
push
jns
inc
jns
jge
lock
mov
negl
dec
ret
xchg
jbe
bound
repnz
roll
mov
andnps
mov
je
or
pop
xchg
xchg
or
div
lock
adc
cmp
pop
jge
xchg
mul
dec
sbb
int3
pop
and
inc
fisubrs
mov
sub
enter
out
inc
mov
roll
cltd
outsl
fstpl
in
and
enter
stc
imul
rorb
imul
inc
nop
std
inc
shlb
mov
sbb
sub
out
cmp
and
arpl
xchg
arpl
xchg
mov
lret
mov
or
add
insb
nop
xchg
cltd
mov
daa
mov
das
push
cwtl
divb
xchg
mov
and
arpl
inc
or
test
jmp
jl
xchg
test
test
ror
push
cmp
popl
lods
cmp
xchg
push
pop
push
aam
lea
hlt
clc
sub
cmp
and
pop
sbbb
xor
ljmp
scas
mov
push
xchg
pop
mov
jae
das
jp
out
inc
sahf
fldenv
das
push
jmp
lret
sbb
test
cs
lret
fnstcw
dec
imul
jmp
mov
push
sub
inc
imul
inc
mov
pop
dec
sbb
xchg
fstpl
pop
lret
loop
add
dec
in
lods
inc
sub
adc
cli
jne
idivl
insl
iret
ljmp
sbb
lods
dec
test
adc
lock
sahf
or
sub
addr16
out
add
mov
push
jae
outsb
inc
sbb
cmp
test
inc
xor
inc
push
mov
pop
pop
mov
ja
lcall
ja
sbb
loopne
insl
outsl
popa
daa
ljmp
or
fstpl
fcomps
orb
cltd
pop
sub
or
lret
out
fwait
ss
mov
fsubrs
adc
repnz
push
pop
adc
lock
fisttpl
xlat
inc
jecxz
jo
cmpsl
pop
cmp
cmp
add
cmpsb
and
adc
mull
imul
inc
mov
ljmp
adc
sub
lods
cmp
scas
xor
xlat
push
cs
mov
and
leave
stc
pop
ret
mov
push
sti
iret
or
xor
arpl
fildl
lret
xchg
mov
jno
mov
lahf
adcl
imul
mov
nop
mov
pop
cmpsb
pop
test
data16
arpl
xchg
pop
xor
push
mov
adc
fsubp
push
outsb
mov
jnp
cmp
fisubs
push
mov
lds
cs
or
xor
repnz
sbb
pop
loop
cmpsl
sbb
pop
addr16
mov
idivl
lock
aad
sub
jmp
mov
mov
or
or
fxch
sbb
add
pop
cs
xor
fnstcw
pop
sbb
loope
out
inc
dec
mov
jns
std
adc
sub
psraw
sbb
sbb
in
mov
xchg
push
mov
iret
scas
ret
pop
inc
insb
bound
push
lock
xchg
jbe
sahf
mov
rclb
adc
aad
mov
add
cmp
xchg
movsl
les
mov
shrb
mov
movsb
nop
rorb
fnstsw
xor
dec
aaa
jo
pop
mov
push
sbb
cld
pop
jbe
ret
xlat
sbb
pop
xchg
add
push
orb
mov
adc
das
mov
mov
xchg
and
cmp
add
xchg
jns
or
sub
mov
lods
jne
cmpl
jns
cmp
gs
dec
xor
and
jns
outsl
enter
push
jecxz
je
xchg
movsl
mov
test
jg
gs
mov
sbb
inc
mul
mov
pop
xor
imulb
lea
loope
mov
cmp
movsb
scas
ds
jge
clc
mov
sbb
adc
mov
add
js
sub
stos
cld
xor
enter
push
dec
sbb
repz
add
or
mov
add
and
or
aaa
mov
repz
dec
and
jg
mov
aaa
adc
xchg
mov
mov
push
mov
mov
js
cli
das
push
xor
and
stos
cli
fistl
incl
push
cli
stos
out
sub
jne
and
lret
pop
push
push
mov
stos
jp
or
lds
add
nop
add
hlt
and
jno
push
sahf
push
shrb
lea
xor
insl
iret
lock
cmp
iret
xchg
jo
movsl
jl
sub
mov
mov
dec
iret
cmp
imul
mov
es
mov
add
daa
dec
push
pop
out
adc
mov
jecxz
xchg
mov
testl
sbb
xor
xor
scas
jmp
jb
outsl
mov
jge
in
mov
into
jp
mov
lcall
pop
popf
stos
pushf
mov
lea
lds
repz
daa
leave
jb
xchg
sbb
add
sub
or
outsl
push
pop
ret
adc
daa
mov
call
mov
cld
jg
test
mov
cmp
adc
jb
enter
mov
in
bound
inc
inc
daa
nop
fs
xchg
mov
aas
dec
sti
out
bound
xlat
add
mov
pop
push
ficoml
not
push
push
insb
dec
xchg
sbb
jae
fs
aas
dec
call
lret
dec
imul
pusha
inc
sahf
or
rcr
rorl
sbb
in
jmp
shll
or
cmp
lahf
xchg
cmc
pop
aas
mov
sub
pusha
push
fadd
adc
ffree
sbb
mov
sub
adc
push
sbbb
aad
es
cmp
aas
lahf
xor
mov
push
inc
outsl
mov
lret
sahf
mov
js
imul
sbb
sbb
test
aaa
push
dec
sub
pop
or
call
insb
push
cwtl
rcrl
jmp
jecxz
lcall
jno
aad
sbb
fisttps
loope
mov
icebp
mov
jp
inc
mov
lock
pushf
push
stc
out
sub
mov
in
gs
aam
inc
lds
sti
mov
icebp
push
lret
mov
int
ds
sbb
sub
out
fistl
fisttpll
add
js
push
sub
sub
orb
inc
pop
jnp
into
adc
popf
daa
adc
fdivp
jnp
shl
data16
int3
push
aas
lahf
decb
jnp
call
mov
mov
and
xchg
aam
pop
xchg
xor
mov
ss
push
shlb
out
enter
mov
testl
jns
dec
pusha
dec
insl
or
or
enter
imul
sbb
mov
adc
std
jle
fmuls
cwtl
ljmp
pusha
pushf
add
popa
adc
popa
mov
std
hlt
fdivrp
push
sti
sub
mov
sbb
mov
in
jbe
add
es
pusha
fiaddl
mov
movsl
jae
push
fsts
adc
shll
pop
loop
fwait
mov
mov
dec
fwait
jo
out
data16
cmc
mov
jle
fiadds
or
push
ret
and
sub
dec
outsl
std
xor
cwtl
enter
test
push
mov
xchg
adc
popa
dec
mov
or
ficoms
in
jle
insl
mov
sub
sbb
test
out
insl
rcrb
popf
add
push
stos
mov
das
cmpsl
push
out
hlt
sub
or
cmp
ss
movups
lock
pop
adc
mov
mov
hlt
aaa
xchg
xchg
fisttpll
jno
dec
jge
jmp
ds
fldenv
xor
mov
add
jne
roll
push
or
or
mov
cmp
and
mov
lds
inc
jnp
mov
sbb
mov
inc
sbb
jmp
jl
push
movsl
sub
adc
fs
mov
or
or
ljmp
lret
fidivs
outsb
mov
out
mov
cmp
pop
cmp
sahf
mov
jg
lods
or
pop
pop
inc
out
fmuls
fnsave
add
inc
jbe
adcb
jb
lock
jmp
int3
orl
pop
xor
adc
lret
or
pop
push
sahf
outsl
mov
insb
pusha
sbb
inc
imul
mov
jnp
jnp
jb
dec
fninit
pop
sub
fs
push
ss
fisttps
push
mov
fmuls
push
jmp
add
lods
lret
mov
xor
sub
push
lret
pop
nop
pop
int
lahf
pop
ljmp
and
jecxz
inc
inc
jle
aas
iret
pop
xor
dec
dec
out
adc
pop
xchg
xchg
sarb
pushf
push
lret
push
rclb
sbbl
sub
lock
cmp
xchg
mov
pop
bound
scas
mov
dec
dec
xor
sbb
adc
pop
and
mov
mov
jg
jbe
enter
negb
addb
mov
jg
jecxz
mov
lds
shll
pop
lahf
lea
xchg
dec
and
ljmp
adc
xchg
faddl
xchg
cwtl
pop
in
mov
jno
push
ds
sub
test
jmp
or
cmpsb
mov
or
dec
sbb
les
xchg
fidivl
mov
cmp
mov
js
data16
imul
lahf
stc
negb
mov
xchg
sub
add
jmp
adcl
cmc
dec
sbb
push
cwtl
push
gs
mov
xchg
loop
nop
lods
cmp
sbb
and
decb
xchg
insb
ja
outsl
nop
gs
nop
out
dec
inc
cmp
aam
movl
sbb
test
sub
inc
mov
and
push
pop
sbb
dec
mov
lahf
push
stos
je
and
jmp
adc
test
loop
sbb
and
mov
mov
inc
popa
pop
mov
pop
xchg
out
mov
pop
pop
mov
test
test
push
fcomi
or
xor
pop
cmpsl
dec
sbbb
stos
arpl
test
out
insl
or
stos
shll
dec
aaa
test
dec
cmpsl
cmp
orb
pushw
fsubrl
jl
cld
inc
add
scas
push
or
xor
into
xor
xlat
test
cltd
pop
lock
mov
jge
jl
jo
sbb
pop
jne
and
aaa
dec
sub
push
mov
int3
cld
lods
cmc
cmp
mov
jp
pop
xchg
sub
xchg
in
sbb
addb
popf
mov
in
icebp
mov
pop
jns
jecxz
orl
cld
cwtl
xor
mov
sub
jp
loop
hlt
fiadds
xlat
fildl
sub
test
insl
pushf
pop
pushf
leave
fchs
xchg
jbe
das
test
rolb
dec
pop
mov
aam
xor
mov
xchg
rorb
aaa
imul
xor
and
dec
cmp
clc
lea
cwtl
shll
xor
mov
xlat
mov
and
sbb
shl
aas
xchg
int3
sbb
ljmp
in
ret
xchg
addr16
mov
xchg
dec
neg
scas
inc
out
stos
ret
or
and
push
fisttpl
cwtl
sahf
mov
mov
fidivs
push
jmp
mov
cmp
jnp
dec
scas
cmpsl
cmp
mov
and
or
dec
mov
and
fsub
dec
bound
dec
out
idiv
shl
int3
clc
icebp
arpl
int
decl
lahf
rclb
lods
add
jg
out
jmp
push
mov
push
rcr
jle
or
jo
pop
jne
bound
dec
ljmp
aaa
imul
mov
cmp
ljmp
das
or
enter
mov
cmp
push
lea
js
lds
ss
mov
sub
mov
mov
fsts
sarl
imul
dec
loop
jge
xchg
loope
sub
mov
inc
cmc
hlt
mov
and
test
iret
stos
es
lcall
adc
mov
cld
jns
ds
push
push
adc
xor
aam
add
imul
js
pop
mov
sbb
push
lds
lcall
aaa
pop
xor
in
and
out
mov
stos
movsb
cld
add
sub
xchg
push
imulb
lret
sbb
mov
nop
cwtl
fbstp
xor
jge
in
js
daa
lret
mov
in
bnd
mov
ret
inc
xchg
out
das
mov
lahf
out
push
sub
jmp
pusha
adc
insb
aas
imulb
add
ret
cmpsb
inc
lea
dec
jno
sbb
icebp
aad
cwtl
loopne
movsb
imul
outsb
ljmp
repnz
xchg
xchg
inc
or
daa
push
fisttpll
mov
int3
jnp
lret
or
mov
mov
and
xchg
sbbl
std
mov
cwtl
jno
iret
mov
cmp
cmp
ljmp
mov
dec
jmp
popf
out
out
loope
mov
fstl
and
adc
xchg
loope
ss
jge
add
imul
and
ljmp
mov
addr16
pop
push
or
and
mov
xor
roll
into
je
repnz
mov
std
subl
out
xchg
pop
leave
dec
or
jbe
inc
loope
leave
cwtl
push
cli
sbb
push
mov
jge
xor
mov
fwait
arpl
mov
xchg
mov
push
hlt
sub
xor
jmp
icebp
dec
in
lcall
repnz
in
shll
data16
inc
pop
pop
sbb
push
mov
imul
insb
out
cs
aam
lea
jno
push
int
jb
pop
les
cmp
imul
xchg
pop
push
sub
push
push
mov
enter
inc
pop
push
push
stc
aam
sub
add
pop
mov
fiaddl
sbb
mov
add
mov
movsl
bound
sbb
movsl
hlt
mov
xor
fsts
pmaddwd
sbb
lret
mov
or
cmpl
adc
mov
lcall
fimull
pop
out
in
lahf
pop
push
shl
ljmp
xchg
xor
test
sahf
xor
scas
pop
mov
dec
movsl
cmc
push
lahf
in
test
xor
mov
dec
dec
movb
sbb
shlb
xchg
sbb
dec
inc
push
mov
pop
adc
loop
pop
or
xlat
xchg
loope
adc
in
push
bound
jno
dec
cmp
iret
sbb
loop
push
cmp
cmp
test
ljmp
xchg
push
sbb
xlat
or
std
adc
std
cmp
ss
inc
aam
lea
add
push
or
jbe
adc
mov
sub
inc
xchg
lock
sub
mov
mov
decb
ss
dec
out
mov
pop
pusha
icebp
xchg
pop
shlb
outsb
jmp
nop
sbb
outsb
mov
enter
inc
dec
xchg
xor
ficoml
pop
gs
jbe
out
gs
je
pop
jne
test
out
insb
sub
jl
sub
aam
mov
lock
aaa
movsl
pop
nop
fisubrl
popa
in
add
push
aam
ficompl
push
pop
xorb
xor
outsl
push
scas
dec
jb
daa
xlat
dec
sbb
push
adc
mov
and
fadd
jbe
jnp
cmpsl
fsubs
adc
testb
lret
pop
int3
scas
push
outsb
mov
nop
lea
movsl
pop
push
push
aaa
dec
mov
fmull
ss
dec
dec
das
mov
jns
push
nop
push
and
pop
push
lret
es
scas
gs
cmpsl
out
and
imull
addl
lds
cmp
mov
dec
adc
push
mov
mov
adc
lret
into
mov
arpl
ret
test
mov
in
xchg
fistl
mov
fisubl
jge
cmp
pop
int3
push
ss
cld
push
movsl
mov
and
lea
push
and
sub
mov
or
repnz
sbbl
in
xor
sub
and
mov
ss
sub
xor
inc
adc
cltd
push
gs
cmp
out
jg
int3
jne
adc
xchg
popf
clc
pop
or
cmp
jb
test
push
sub
leave
inc
sub
push
cltd
inc
and
push
popa
scas
lret
and
mov
pop
dec
notl
js
shrb
cmp
sbb
xor
mov
jb
push
xchg
or
cld
popa
mov
test
imul
out
arpl
stos
dec
cld
or
popa
aam
jecxz
sahf
jge
mov
xchg
jbe
daa
sarl
sbb
mov
mov
clc
mov
inc
adc
mov
push
sub
syscall
jns
jo
mov
cs
mov
idivl
add
mov
cmpxchg
lods
push
jg
aaa
jns
xor
imul
outsl
fcoms
outsl
mov
not
mov
mov
push
sbb
sbb
mov
mov
mov
dec
aas
rcll
inc
inc
and
and
or
adc
push
xor
push
or
into
mov
push
adc
or
lret
ret
sub
inc
stos
cld
and
scas
pop
xchg
inc
outsb
jo
push
pop
jae
call
in
cli
pop
into
and
and
mov
fcoms
mov
mov
jnp
cmp
mov
lret
dec
lods
sti
sub
inc
rorl
iret
lea
mov
push
loop
jo
pop
mov
mov
aaa
into
je
repz
jmp
fisubs
jge
fsubrl
aam
push
dec
or
inc
inc
jmp
lcall
cli
dec
test
xor
pop
xchg
cmp
mov
mov
aas
repz
imul
inc
fwait
das
mov
mov
stos
push
xchg
mov
cmp
shll
inc
pop
jp
adc
lods
fsubl
add
mov
rep
pushf
ret
in
call
mov
mov
das
imul
test
cmp
xchg
inc
mov
dec
out
cmp
inc
or
xlat
sarb
daa
mov
push
jno
jb
mov
mov
inc
cmc
movsl
leave
fadd
popaw
ds
sarl
jg
xchg
imul
jb
das
int3
fcomip
inc
cld
cmpsl
popa
call
inc
dec
fdivs
sahf
lret
das
cmpsb
ss
mov
cs
scas
mov
mov
arpl
bnd
cmp
outsl
gs
mov
dec
xchg
cmp
pop
fs
cmp
adc
addr16
les
mov
mov
push
fists
insb
or
add
repz
dec
jbe
push
sub
mov
loopne
push
out
loopne
scas
daa
jno
into
inc
inc
pop
repz
std
sbb
ficompl
imul
dec
lcall
sbb
adc
shll
cmp
aam
jg
rcrl
xchg
mov
fisttpll
mov
push
fimull
loopne
mov
in
sub
outsb
mov
in
cmpsl
out
cltd
adc
mov
jae
inc
jne
mov
movsb
mov
lods
sbb
iret
push
add
lods
pushf
mov
mov
sbb
sub
inc
xor
xchg
dec
jne
mov
hlt
xor
aam
mov
dec
ret
and
dec
pop
aam
loop
sbb
clc
mov
faddl
add
fistl
xchg
xorl
xor
into
xchg
adc
mov
push
data16
insb
jle
in
inc
gs
decb
xchg
dec
pop
jo
mov
xchg
adc
sub
mov
aad
mov
jle
inc
xchg
aaa
and
push
mov
fwait
mov
xchg
jbe
movsl
push
outsb
adc
jle
popf
dec
cmpsl
sarl
cs
adc
hlt
xlat
xchg
sub
aaa
dec
leave
inc
adc
or
addr16
mov
add
sbbb
pop
int
cs
xchg
jle
and
cmc
jnp
xchg
repnz
les
push
imul
dec
or
add
jle
and
orb
pop
test
push
jnp
mov
pop
loopne
cli
test
bound
js
stos
pop
shr
push
mov
mov
xor
or
jne
clc
mulb
dec
pop
fldl2t
in
push
andl
decl
adc
adc
mov
popa
fisubrs
mov
sbb
lods
ds
xor
mov
daa
aas
xchg
hlt
inc
insb
xchg
daa
ljmp
mov
pop
xchg
jnp
xchg
and
xorl
cmpsb
arpl
pop
sbb
mov
mov
inc
xor
jmp
and
cli
imul
std
or
jmp
fadds
pop
into
pop
xchg
and
jne
push
push
shll
mov
push
mov
xchg
stos
icebp
mov
jmp
add
data16
jl
jg
nop
jmp
or
rcrb
add
int
loopne
dec
push
add
adc
pusha
aaa
aam
testl
add
push
jmp
mov
ja
rclb
lret
jp
orl
mov
dec
iret
aad
jl
in
adc
mov
jno
mov
and
stos
divb
push
push
jp
jmp
loope
add
jl
roll
imul
cwtl
scas
imul
push
adc
mov
add
jmp
cmp
loopne
dec
jge
mov
lods
movsl
loopne
fsubrl
adc
js
aas
mov
hlt
push
insb
jae
jl
push
mov
out
mov
arpl
ljmp
in
out
mov
std
push
testl
push
jp
xor
add
ds
cmc
fidivrl
inc
xchg
ja
adc
iret
loop
int3
addr16
pop
test
or
mov
les
imul
movsl
popa
cmp
xchg
pop
push
xchg
inc
pop
adc
mov
or
and
test
pop
test
mov
mov
dec
loop
hlt
sbb
mov
out
xchg
cli
ds
jae
in
mov
push
jns
xchg
jg
jne
outsb
jle
dec
xor
pushf
xor
sub
ss
jbe
aam
pop
nop
adc
push
mov
fwait
icebp
push
dec
dec
pop
lret
sarb
mov
fbstp
push
cmp
lea
stos
cwtl
lds
xchg
pop
repz
lahf
popa
out
aam
mov
mov
icebp
xchg
loop
stos
or
pop
or
mov
movsl
jl
xchg
mov
fwait
enter
pop
sti
or
jp
call
stos
dec
es
ss
mov
and
push
jl
sbbb
xchg
bound
insl
ja
push
test
outsb
aad
jp
push
dec
add
mov
icebp
push
inc
dec
cmp
loope
sub
dec
test
nop
imul
push
arpl
adc
subl
cmp
stc
lret
cld
jne
cltd
jns
int3
je
outsl
test
stc
xorb
loop
jbe
push
push
ljmp
adc
in
testb
nop
add
cwtl
enter
popf
popa
bswap
xor
or
xchg
xor
adc
mov
or
ds
adc
cmpsb
fwait
sbb
pop
adc
mov
das
ja
mov
shld
int
pop
cmp
cmpsl
insl
adc
and
xor
shrl
jb
xor
ljmp
fisubs
rorb
vmovapd
shll
xlat
aam
lea
xor
xchg
adc
negb
loopne
pop
cli
dec
mov
mov
or
xchg
scas
ret
in
pusha
jns
repnz
mov
sbb
mov
daa
xor
stos
rcr
lods
add
test
ss
stos
xchg
push
ja
xchg
lahf
xor
scas
jne
mov
outsl
mov
mov
add
mov
inc
daa
jp
or
cmp
or
mov
fmuls
out
mov
cmp
mov
ja
mov
mov
fucomip
adc
jg
pusha
gs
xor
fwait
pop
push
loop
jp
icebp
xor
sbb
mov
and
push
jnp
cld
xor
mov
jg
mov
mov
adc
push
aam
mov
cmp
push
pusha
repnz
mov
ret
test
and
push
jmp
aam
sti
out
ja
mov
adc
and
shll
mov
out
popa
popf
shlb
test
loopne
pushf
xor
clc
jmp
fmull
mov
in
dec
jne
daa
jno
imul
imul
push
add
pop
pop
out
outsl
lahf
mov
mov
dec
icebp
or
dec
aad
sarb
imul
add
mov
jno
inc
sbb
inc
inc
cwtl
aam
push
mov
test
pop
push
lds
shll
js
aad
xchg
mov
xor
jmp
cmpsb
mov
cwtl
jb
lahf
add
es
xchg
push
call
test
push
or
mov
and
mov
mov
scas
or
cli
and
out
jnp
pop
xchg
gs
pop
leave
aas
enter
mov
cld
ja,pt
lret
mov
mov
or
es
pop
scas
in
scas
add
pop
add
or
mov
mov
das
iret
jg
mov
jmp
bound
into
mov
test
lret
mov
push
fcom
psrld
outsl
jno
add
test
std
subb
push
insl
mov
aaa
cmp
push
cmpsl
xchg
stos
pop
add
jle
xor
ljmp
push
xlat
lahf
xorb
mov
rcl
or
sub
aad
in
aad
adc
dec
stc
jno
stos
sub
add
add
pop
hlt
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
jmp
int
stos
ljmpw
dec
jnp
or
andl
jl
sbb
arpl
cmpsl
and
cwtl
rolb
jae
ficomps
pop
pusha
icebp
mov
sbb
scas
pop
jge
shl
in
cli
and
jle
pop
cltd
sahf
movsl
arpl
xchg
mov
ljmp
mov
test
add
fninit
push
mov
inc
std
outsl
jmp
pushf
xlat
mov
sub
inc
dec
adc
xor
mov
mov
mov
add
outsb
pop
or
jno
ljmp
aaa
add
icebp
shl
pop
insb
or
scas
popa
sahf
push
pusha
sbb
call
lock
pop
pop
adc
xchg
adc
mov
es
sbb
popa
aam
int
pop
outsb
mov
test
xchg
and
xor
jmp
push
addr16
divl
or
dec
push
sbb
jl
rcr
sub
xor
pop
sub
jb
inc
dec
sbb
popf
lret
loop
decl
sbb
je
pushf
int3
or
and
cmp
loope
shrb
gs
mov
aaa
cmc
xchg
outsb
int
pop
aad
gs
mov
mov
cwtl
sub
xor
sub
outsl
sbb
mov
adc
jecxz
xchg
mov
ret
fcmovne
pop
inc
imul
lret
xor
hlt
cwtl
push
jg
call
imul
sbb
or
xor
jbe
sub
mov
xor
or
pop
fimuls
fmull
mov
or
ja
sti
jmp
xchg
pop
outsb
mov
inc
add
loope
inc
pop
dec
mov
cmp
insl
in
imul
cld
movsl
push
call
mov
jne
test
xchg
clc
cmpsl
mov
jge
cld
cmc
push
test
int3
lcall
or
add
shll
sub
pop
outsb
or
sbb
jns
or
jg
mov
aam
outsl
stos
das
adc
idivl
scas
lods
sub
jg
popf
vmovaps
lea
cmpl
insl
cs
mov
xchg
outsb
inc
dec
into
icebp
fwait
mov
xchg
jp
fmull
ficomps
xchg
fbld
jmp
std
pop
fnstcw
test
imul
insl
cltd
rcrb
in
loopne
mov
in
jnp
xlat
cmp
cmp
cmp
jb
push
and
les
dec
cwtl
add
jmp
lcall
mov
pusha
push
in
push
out
out
inc
mov
outsb
cs
xchg
or
and
sbb
arpl
rolb
out
sub
aad
sub
leave
adc
stos
mov
add
xor
and
jae
ret
mulb
dec
and
xor
dec
mov
out
cmp
mov
int3
popa
lods
aad
sbb
hlt
ja
lds
add
sbbb
inc
int
clc
xor
dec
inc
shlb
in
fimuls
data16
cltd
mov
dec
insl
jnp
sti
jp
cmp
sub
xchg
push
and
clc
popf
es
cmc
push
dec
dec
sarl
sub
sti
xchg
stc
pusha
push
xchg
pushf
test
out
ljmp
aas
cmp
sbb
jne
mov
mov
xlat
inc
cs
pop
xor
pop
cld
xchg
scas
or
xchg
jl
cwtl
push
sbbb
push
pop
pop
sbb
out
ret
repz
jae
ss
sbb
out
dec
rcll
je
lret
rclb
push
push
popa
mov
pushf
fprem
daa
int3
jne
stc
add
or
loopne
dec
cs
inc
sahf
jle
rcll
and
add
sbb
sub
movsb
and
andb
push
lcall
or
mov
test
jns
add
std
sbb
adc
pop
push
mov
pop
and
mov
pop
lcall
add
fmull
pop
sbb
add
ljmp
test
and
inc
aaa
cmp
push
cwtl
imul
popa
inc
fstpl
test
scas
jmp
lret
xor
repz
sbbl
pop
push
pop
ficoml
cmpsl
pop
les
sbb
push
adc
lret
lea
add
into
lret
mov
das
xchg
fld
and
sar
es
pop
xor
mov
jbe
push
mov
jno
pop
cmc
mov
adc
notl
ret
pop
gs
add
hlt
mov
xlat
mov
mov
fdivs
dec
or
add
inc
adc
fcoms
adc
add
shrl
aam
pop
cmp
jle
adc
mov
add
fdivrs
xor
cmp
inc
dec
fstpl
or
dec
int3
repz
mov
mov
and
dec
scas
iret
xor
xor
xlat
cmpsl
sub
imul
dec
jmp
cmp
xchg
sbb
adc
and
jmp
mov
in
int
mov
ret
enter
fmuls
adc
push
fimuls
sub
fistl
dec
ja
sbb
mov
and
mov
inc
adc
xor
ret
fstpt
inc
push
xchg
xchg
adc
mov
test
ljmp
push
add
sti
pop
push
inc
movsl
negb
cli
pop
fistl
push
and
dec
scas
int3
jl
ja
xchg
clc
imul
test
inc
sub
into
push
rclb
mov
or
or
pushf
cld
jge
sub
pushf
shll
jmp
sahf
push
enter
mov
sahf
sub
pop
jb
orb
dec
xchg
jmp
or
bound
mov
fnsave
lods
adc
das
and
daa
pop
sub
or
sub
mov
add
adc
fdivrl
mov
jecxz
pop
daa
xor
jp
xlat
xchg
fwait
scas
out
xor
neg
or
sub
mov
daa
shlb
inc
xorb
ffree
jge
or
mov
aad
adc
xlat
xor
xchg
inc
mov
add
scas
jge
xchg
push
test
mov
notl
int
cmpsl
sbb
hlt
mov
and
dec
xchg
std
negl
jae
aad
hlt
mov
mov
mov
aad
push
adc
add
mov
jbe
cld
pop
out
push
push
jno
movsl
xchg
cmpsl
xor
cmp
arpl
test
mov
cmc
fisubrl
das
push
jae
jp
jbe
mov
xor
dec
mov
jae
addb
push
xchg
out
mov
mov
into
and
hlt
xor
data16
out
loope
cmp
mov
outsl
mov
xchg
aaa
int3
mov
mov
xchg
fwait
das
pusha
out
mov
push
mov
out
outsl
sbb
in
cs
out
cmp
inc
xor
lret
add
aad
imul
imul
pop
arpl
inc
cmp
loopne
dec
cli
cmpsl
mov
jl
fsubr
inc
aaa
sub
push
and
ljmp
xor
imul
push
hlt
lods
test
xorl
pop
cwtl
jb
cmp
scas
mov
cmc
test
fiadds
xor
mov
stc
imul
pop
and
insb
lahf
xor
add
cmp
rclb
into
push
pop
cmp
push
cmpsb
cmp
int3
or
jne
icebp
pop
mov
sub
orb
jp
and
push
or
out
sub
and
in
jp,pt
into
insl
jl
jbe
sbbl
mov
aas
leave
imul
lcall
mov
dec
inc
lods
pop
js
incb
cmp
shl
rcll
push
and
inc
cwtl
in
sub
cs
pushl
mov
stos
mov
fnsave
mov
outsl
inc
mov
lea
insb
jbe
repnz
jno
inc
and
fsubrp
jmp
int
lea
inc
shlb
lcall
inc
cmp
mov
add
mov
dec
inc
mov
pop
push
mov
movl
addr16
inc
test
jecxz
lock
inc
inc
insl
or
pusha
ror
lea
cmp
and
inc
pop
insb
or
jge
inc
jb
fcmovnbe
shll
fbld
mov
dec
jg
mov
jno
in
aaa
ds
out
into
lcall
call
or
dec
imul
push
daa
adc
stos
cltd
add
xchg
ret
xchg
adc
inc
pop
stos
jecxz
jmp
mov
sbb
jl,pn
andl
lahf
loope
cmpsb
lret
enter
adc
adc
pop
rolb
mov
notl
pop
cmc
sub
shlb
cs
jb
insb
mov
dec
ret
mov
xchg
scas
pop
sbb
jecxz
or
jns
mov
popa
xchg
mov
out
mov
fsts
xor
cmp
xchg
mov
mov
pop
ljmp
xor
mov
loop
jo
leave
mov
push
pop
xchg
and
mov
and
stos
and
ror
cmp
and
cmp
shl
fnstcw
pop
add
popf
outsl
mov
pop
popf
jle
fmull
sub
repz
pop
sbb
or
loope
jl
ljmp
loopne
push
sub
insl
das
push
add
adc
push
sbb
or
jmp
sahf
sub
dec
outsl
jno
fistpll
ret
mov
popa
dec
in
push
mov
shrl
sub
stos
inc
push
sub
cwtl
aas
outsl
mov
hlt
ss
mov
push
or
and
push
lock
adc
mov
lahf
push
pop
pop
pop
dec
pop
mov
mov
dec
mov
cmpb
mov
call
push
aad
cli
dec
mov
mov
sub
cli
scas
movsb
cmp
jmp
mov
mov
daa
xchg
orb
ljmp
jmp
in
ljmp
push
sub
fistpll
mov
sub
push
sti
std
mov
daa
push
ret
jmp
cwtl
je
idivl
loopne
jae
aad
pushf
xor
cmp
sbb
xor
sti
adc
adc
das
shrl
cwtl
mov
call
into
dec
sub
and
xor
jb
repnz
cmp
mov
lock
out
aaa
add
push
in
loop
divb
add
sub
xchg
stos
push
outsl
mov
xchg
pop
or
mov
sahf
sbb
dec
cmp
jp
ret
and
xchg
push
push
jmp
mov
push
push
daa
lahf
mov
xor
aas
pop
or
stc
push
mov
jmp
pop
pop
les
jnp
jno
push
mov
call
mov
test
sbb
fiadds
inc
rcll
test
test
shrl
shlb
icebp
add
mov
popl
or
dec
sbb
fidivrl
mov
jle
in
inc
push
jae
ja
out
push
pop
or
jbe
jp
jp
cmp
test
or
sbb
pop
or
addb
dec
inc
sub
sbb
push
jo
adc
out
out
test
inc
rcrl
dec
dec
mov
push
int3
pop
push
push
mov
or
test
push
cld
and
pushf
les
push
mov
inc
push
push
movsb
pop
push
or
test
push
inc
lods
or
mov
push
and
addl
cmp
out
push
push
lcall
mov
ja
or
sbb
fdiv
jmp
mov
imul
and
fs
test
push
push
lahf
add
mov
ds
mov
fcoml
mov
push
lods
out
pop
and
lcall
adc
mov
mov
and
lret
add
sahf
pop
dec
push
std
lea
jle
jno
test
imul
pop
sub
xor
fistl
popl
push
adc
add
sub
jne
cld
dec
pop
rcr
and
cmp
hlt
pusha
aad
mov
lcall
mov
insb
dec
fcompl
je
pop
and
lahf
insb
adc
insl
lods
test
mov
push
mov
jge
pusha
push
dec
mov
mov
jmp
aas
mov
iret
inc
in
mov
mov
or
scas
cltd
test
pushf
sbb
cmpsb
mov
xor
xchg
fnstsw
leave
dec
push
fistps
inc
ret
jb
cmp
xor
xchg
jo
and
or
stc
dec
out
sqrtps
scas
and
mov
stos
ret
and
andb
sub
lock
mov
les
fcomp
shlb
outsb
mov
pop
mov
cmp
ds
jmp
jg
outsb
push
xchg
push
cmp
inc
and
clc
pop
fiadds
ret
cmpsl
mov
sbb
ja
or
outsb
cwtl
push
loope
scas
push
movsl
test
push
jg
dec
adc
and
pop
mov
xchg
shrl
mov
or
xchg
jo
cmp
sbb
jns
cmp
and
fistl
sbb
pop
mov
push
push
pusha
push
xchg
repz
mov
or
and
jne
push
fimuls
jecxz
pop
push
pop
inc
sub
dec
add
jbe
rol
shrl
sub
lret
cli
mov
popf
sub
sub
in
lret
pop
in
aad
je
cmp
rcr
sahf
dec
xor
stos
cli
add
add
pop
das
fs
mov
lds
popa
leave
jmp
call
arpl
rclb
ljmp
xchg
sahf
sbbb
and
adc
data16
sub
out
in
leave
mov
scas
sbb
cwtl
sbb
adc
shll
std
dec
jp
sbb
pop
je
pushf
cmp
mov
jl
mov
lcall
sub
stos
pop
mov
or
sbbb
push
xchg
xlat
mov
push
lods
mov
adc
sti
mov
movsl
xlat
xor
imul
repz
mov
mov
sti
jmp
jl
xchg
jp
pop
jle
xlat
cmpb
inc
xchg
and
fsub
inc
loop
in
out
mov
rclb
ss
xchg
pop
icebp
das
enter
mov
pop
lea
pop
lds
xor
mov
sbb
mov
ds
pop
ret
mov
ss
shll
sbb
lock
mov
adc
pop
leave
outsl
sbb
cmp
xchg
mov
scas
cltd
push
mov
adc
inc
pop
es
es
sub
jg
ljmp
movsl
mov
imul
and
mov
xchg
cmp
jmp
jbe
sahf
nop
pop
push
rcll
ss
adc
mov
popa
sti
inc
sarl
nop
jle
xchg
mov
xlat
ljmp
mov
push
pop
xchg
dec
add
ja
and
push
enter
push
pushf
or
add
xor
inc
mov
dec
daa
pushf
fistps
aas
sbb
pmulhuw
loope
fisubl
push
mov
xchg
or
cmpsb
adc
mov
mov
mov
in
push
xchg
loopne
and
enter
scas
test
in
mov
pop
push
outsl
mov
lcall
and
xlat
cmpsl
outsb
aad
ds
cmpsb
cmpsl
cmc
bound
ret
pop
call
bts
lahf
cs
inc
pop
mov
push
jle
stc
mov
sbb
call
imul
xor
jge
mov
movsl
fisubs
xchg
movsl
cmp
cmp
mov
fs
pop
rorb
or
aam
mov
sahf
xor
out
xor
cli
es
dec
jns
loopne
fimuls
cli
push
cmp
mov
fadds
daa
das
add
adc
lods
imul
jno
mov
sarl
inc
xor
jo
cmp
ds
inc
mov
xchg
jecxz
test
mov
xchg
push
les
or
xor
push
adc
push
xor
sbb
cmpsl
sti
sbb
daa
es
xchg
mov
scas
sub
aam
push
int3
adc
push
mov
sarb
sahf
shll
iret
inc
push
mov
or
adc
stos
aaa
dec
xlat
pop
add
mov
add
and
inc
sbb
mov
shll
js
xor
adc
es
rcll
mov
jo
lds
add
ljmp
cmpl
repz
adc
jmp
sub
mov
mov
dec
test
mov
cmp
adc
sub
inc
cld
mov
sar
mov
add
add
scas
mov
cld
jns
popf
add
adc
cmpsb
incb
dec
mov
sub
arpl
pop
sub
insb
or
push
ja
pop
xlat
imul
cs
mov
and
mov
sub
xchg
jne
repnz
or
test
nop
imull
out
mov
xchg
test
jmp
dec
or
push
lret
xchg
dec
mov
mov
arpl
jb
test
orb
mov
jg
scas
mov
adc
pusha
sti
iret
popa
into
mov
iret
leave
ljmp
flds
lcall
push
pop
cmp
lea
addr16
and
in
mov
push
fldenv
lret
rcll
flds
xchg
adc
sbb
lcall
rcl
aam
mov
and
xlat
pop
push
andb
popa
adc
mov
xchg
sbb
pop
dec
fldl
cmp
add
iret
xchg
idiv
repz
stc
adc
andl
daa
popf
movsb
mov
je
arpl
push
mov
push
adc
cltd
int3
cmp
jecxz
shlb
push
int
fnsave
xor
mov
into
loope
icebp
lret
jg
pop
adc
and
les
push
xlat
ret
and
ja
ret
leave
and
cld
push
fdivl
ret
aam
add
pop
stc
loope
xor
mov
sub
pop
call
mov
notl
fisubl
cmp
insl
pushf
lock
adc
mov
push
jb
mov
popa
lahf
test
inc
daa
je
xchg
les
in
negl
test
mov
dec
data16
lcall
imul
aas
stc
and
or
sub
xor
repnz
adc
push
jo
dec
loopne
aaa
fcoms
aam
gs
xlat
lahf
xchg
xchg
or
fists
in
scas
mov
icebp
adc
imull
imul
adc
jno
scas
sarl
in
int3
in
jne
aam
push
sub
repz
adc
mov
repz
pop
sub
cmpsl
push
clc
sbb
scas
repz
xlat
scas
dec
and
dec
dec
subl
outsl
xchg
xor
mov
scas
jne
add
push
ret
add
outsb
outsb
cmc
add
stos
clc
mov
dec
and
dec
sti
dec
push
lods
jno
mov
outsl
rorl
jne
das
cli
shlb
leave
push
pop
int
int
ja
jno
push
faddl
xor
into
sbbl
mov
jmp
xlat
lods
insl
ja
mov
push
xor
stc
pop
sbb
std
out
cmp
xchg
gs
or
mov
cmp
cmp
ret
and
and
sbb
jmp
insb
xchg
pop
xchg
push
add
push
insl
add
cwtl
xchg
mov
push
inc
pop
nop
out
outsl
aam
push
into
ds
scas
mov
lods
add
and
ja
mov
inc
lds
shll
jge
insl
rorb
icebp
mov
inc
inc
ja
xchg
mov
push
xor
imul
pop
mov
sub
mov
in
fdivs
mov
data16
sbb
rcll
cmp
jno
cli
mov
cmp
loop
lods
idiv
cs
mov
inc
jnp
sub
adc
jg
mov
mov
pop
ja
sbb
or
jmp
push
inc
mov
test
adc
outsl
adc
fcoml
pop
aaa
ret
in
in
hlt
vpshab
cmp
iret
cmpb
pop
iret
fmull
xor
mov
testl
lods
push
sub
js
xor
xor
fucomip
jno
mov
jmp
jbe
aam
pop
rcr
stos
mov
ret
sahf
outsl
loopne
cmpsb
jns
lds
jecxz
decb
cmc
cmpsb
push
or
roll
shll
mov
clc
lea
adc
jecxz
sahf
cmp
fnsave
or
rcll
daa
push
cmpsl
cmp
sbb
outsb
loopne
add
mov
pop
or
into
dec
sbbb
outsb
mov
clc
out
xchg
mov
cmp
jb
shrb
xor
loopne
fucomi
and
aad
add
jo
icebp
test
nop
xchg
fldl
mov
inc
call
iret
sbb
lea
daa
test
les
jg
inc
or
popf
pop
lds
fnsave
add
mov
jae
xchg
cltd
push
mov
leave
stos
mov
sbb
mov
mov
cwtl
xor
jbe
add
cmp
push
enter
push
insl
pop
vhaddpd
out
mov
call
or
test
cmp
cs
xchg
mov
ficomps
sbb
aaa
mov
sbb
test
les
lret
cmc
data16
jle
pusha
ud2
jnp
fwait
insb
mov
pop
push
into
dec
out
cli
mov
push
dec
repz
sbb
in
mov
sub
loop
or
rclb
dec
enter
pop
mov
out
loopne
ficompl
or
cmp
repnz
insb
jmp
insb
jl
daa
xor
icebp
iret
cmp
lods
cmp
das
lea
cltd
call
push
rcll
or
in
and
into
orb
in
dec
mov
push
mov
push
xchg
adc
sub
xor
inc
adc
cmp
out
nop
insl
xchg
rorl
movsl
mov
mov
xchg
or
sub
mov
scas
push
xlat
inc
ret
ja
mov
push
lea
push
sbb
movsb
xor
test
mov
sbb
lcall
mov
insl
into
sbb
popa
and
pop
pop
dec
and
dec
out
xchg
loop
lods
fisttpl
xchg
dec
sub
outsl
sub
test
jp
or
lahf
filds
out
je
inc
sbb
push
xchg
dec
push
decb
lcall
out
das
es
cli
dec
pop
jnp
jae
jb
or
push
dec
or
xor
loopne
addr16
mov
xor
add
fistl
jo
mov
add
mov
push
inc
es
cmp
insb
fcoml
test
lea
jnp
inc
mov
mov
lret
les
mov
scas
jns
mov
mov
ds
cld
js
les
add
mov
sbb
insb
shlb
xchg
aaa
sar
test
sbb
pop
les
test
xchg
mov
push
ret
mov
sahf
pop
jl
mov
or
pop
jp
and
mov
mov
loope
call
shlb
arpl
rcll
rclb
lock
das
dec
xor
xchg
and
repnz
test
test
lahf
mov
cmpsl
cmc
push
mov
mov
mov
call
pop
cmp
dec
pop
fistl
lret
dec
cmp
cmp
push
cmp
fs
mov
ja
cmp
fistpl
pusha
mov
jo
xchg
shlb
inc
xchg
pop
xchg
orl
aam
xor
fwait
xchg
shrb
sbb
loop
mov
dec
dec
and
aad
push
bound
gs
xchg
jae
pusha
jg
lea
mov
divb
push
scas
cli
push
testb
popf
bound
push
sbbb
mov
les
outsl
cmc
rcll
pop
mov
icebp
ret
enter
push
fdivs
jno
das
stos
cli
jns
sub
stc
sub
mov
outsl
xor
dec
and
test
push
les
adc
cmp
adc
ret
cli
xchg
add
int3
iret
bound
stc
mov
and
fists
jmp
jae
add
xor
mov
xor
dec
les
inc
lods
or
sti
sbb
in
and
dec
jg
sub
cmc
xor
push
or
mov
frstor
push
sub
mov
test
and
cmpsb
add
ja
test
xchg
scas
lahf
daa
das
or
cmp
sub
daa
adc
test
jbe
pushf
test
adc
jno
aad
mov
pop
sahf
arpl
fisttps
push
mov
jmp
mov
mov
fdiv
xchg
sub
push
lahf
cmp
inc
cmp
imul
xor
push
in
dec
fdivr
ror
xchg
in
pop
mov
push
jge
cmpsl
cmp
push
fmuls
scas
fisttpll
inc
jnp
testb
std
fldenv
out
sbb
mov
ret
lock
leave
sti
cmpsb
inc
aad
cmp
inc
inc
inc
ja
int
xor
sub
mov
cld
rcll
movsb
pop
xor
jb
lods
out
lar
dec
cmpsl
cltd
out
jmp
dec
mov
aaa
mov
mov
mov
and
mov
fldt
adc
push
xor
xchg
xor
or
jecxz
cmp
sbb
int
lret
add
jmp
pop
ss
in
nop
push
mov
jb
xchg
mov
cmp
orl
dec
adc
mov
cmc
test
not
pop
int
or
dec
mov
clc
fdivrs
popf
or
stos
cwtl
ljmp
les
imul
sub
jle
inc
cmpsl
dec
push
jnp
icebp
insl
sbb
inc
lods
sarl
fnop
mov
mov
pop
dec
ss
fdivrl
jns
sub
nop
push
xchg
fs
mov
jns
cmp
sbb
push
enter
jb
sbb
popa
lock
jbe
inc
pushf
or
testl
mov
hlt
outsb
mov
or
cmpb
hlt
lea
sbb
jecxz
mov
pop
scas
iret
adcl
sub
cmc
aas
cmc
push
nop
hlt
aad
cmp
sub
xchg
xor
adc
mov
in
fimull
mov
mov
arpl
dec
out
in
pop
push
lock
jo
xchg
inc
ret
xchg
add
mov
mov
inc
nop
lods
es
or
xchg
sub
dec
test
mov
ds
test
sub
sub
nop
xor
cmp
xlat
fs
sub
adc
out
inc
je
jecxz
fidivrl
dec
push
xchg
testb
adc
pop
push
jle
out
test
push
cmp
decb
push
fmull
dec
inc
mov
mov
jecxz
xor
add
jnp
imul
hlt
push
adc
aas
inc
int3
dec
mov
add
in
pop
sbb
int
jae
popf
lret
jbe
push
fists
loope
flds
lea
push
push
cmpb
jne
imul
iret
fmul
stc
mov
test
ficomps
push
jae
mov
mov
cmp
add
fs
sti
aam
or
push
loopne
jg
test
clc
ret
stos
push
clc
incb
inc
xlat
movsb
gs
fsubs
inc
push
jae
movl
sti
js
push
xor
and
and
sub
jno
out
sar
mov
mul
shll
jg
sub
xor
sub
lret
add
mov
data16
testb
or
frstor
cli
mov
dec
or
test
mul
cltd
push
sbb
repz
adc
gs
mov
mov
mulb
jge
adc
arpl
in
je
div
rcrl
and
inc
mov
fnstcw
mov
push
std
xchg
pop
inc
cmp
iret
mov
xlat
cld
rcr
xchg
movsl
jbe
ljmp
pushf
fistps
mov
cli
pusha
jne
inc
mov
pop
pop
xchg
insl
rcrl
xchg
cmp
push
subb
aad
sbb
xchg
sti
pushf
push
xor
sub
in
add
stos
stc
add
dec
pop
inc
lret
cmp
out
cli
mov
and
push
mov
stos
shl
hlt
scas
repnz
xorb
in
push
hlt
ljmp
mov
or
adcl
xchg
sbb
jae
jbe
outsl
aam
mov
fidivrl
out
mov
lret
dec
xorl
jbe
pop
sar
jle
int3
leave
sbb
push
cmp
mov
sub
movsl
fiaddl
aas
int3
and
or
loopne
push
pop
jp
pop
sbb
cmc
int
xchg
loope
xchg
aaa
cli
push
aad
int3
fmul
fwait
mov
sbb
stos
out
loop
rcrb
mov
fadds
stos
adc
hlt
mov
orl
push
mov
rorl
mov
sub
mov
mov
std
push
scas
cmp
loop
stos
lcall
lock
clc
je
nop
cmc
rclb
add
ret
outsl
adc
push
and
push
repz
push
popa
xor
xchg
jne
sbb
mov
xor
xor
iret
sbb
pop
push
sub
loop
cltd
lea
pop
adc
sbb
stos
dec
movsb
jo
cmp
jg
repz
push
pop
xchg
test
cld
cmpsl
fld
js
cmpsb
pushl
xor
jnp
mov
push
inc
mov
dec
adc
stc
lods
ret
das
jnp
pop
adc
mov
pop
or
cmc
aam
cmp
xor
sbb
icebp
addr16
and
stc
xlat
lret
xlat
dec
lds
and
addb
add
scas
bound
mov
lods
daa
fstl
in
xor
mov
ss
lods
fmul
in
push
mov
cld
inc
mov
cmp
xchg
fwait
rorb
pop
outsl
test
mov
stos
loope
rcrl
or
outsb
shlb
dec
sbb
imul
shll
jge
adc
ja
fistl
mov
inc
ucomiss
jecxz
out
out
and
stos
mov
dec
inc
sbb
std
push
dec
xlat
inc
push
daa
push
xchg
pop
inc
pop
shlb
dec
mov
fildll
sbb
xorb
lods
in
push
jecxz
mov
ret
out
pop
enter
cld
into
stos
inc
daa
xor
cli
sbb
mov
shll
hlt
cs
mov
push
jle
psllw
enter
jae
xor
mov
js
lods
es
and
lea
stos
imul
xchg
nop
sub
es
or
sub
mov
push
incb
in
xchg
sub
push
inc
or
inc
movb
inc
and
ret
dec
mov
pusha
mov
pop
je
ret
mov
mov
imul
mov
js
out
jge
gs
testl
das
fmull
jne
xor
lahf
aad
inc
hlt
outsl
sbb
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
movl
and
mov
and
movsbl
sub
mov
xor
add
and
sub
mov
subl
xor
cmp
movl
jne
andl
mov
inc
mov
cmpl
jbe
jmp
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
adc
push
or
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
call
xor
add
dec
mov
jmp
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
pushl
pushl
push
push
call
jmp
mov
xorl
push
movl
cmpl
je
cmpl
ja
jmp
push
push
push
pushl
push
call
mov
dec
mov
jmp
mov
mov
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
iret
lods
mov
add
add
add
add
add
loopne
add
loopne
add
add
add
push
push
inc
push
pushf
inc
dec
push
dec
mov
dec
scas
xor
dec
or
add
add
pop
inc
outsl
insb
fs
outsl
data16
jb
imul
push
arpl
jb
push
arpl
jae
add
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
push
mov
mov
mov
push
lea
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
xor
add
push
lea
push
mov
mov
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
mov
mov
movb
mov
movb
mov
movb
mov
movb
mov
mov
movb
push
movb
mov
movb
movl
lea
pop
movzbl
xor
add
mov
inc
dec
jne
movl
lea
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
mov
xor
add
xor
mov
mov
xor
movzwl
add
xor
xor
mov
mov
mov
mov
lea
lea
movl
mov
call
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
lea
push
mov
push
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
jbe
cli
push
sbb
or
or
cltd
mov
lea
sub
lea
lods
sarb
mov
sarb
mov
mov
mov
sbb
or
push
cld
mov
mov
stos
lods
fistpl
or
mov
mov
mov
mov
mov
sahf
and
shrb
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
add
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
