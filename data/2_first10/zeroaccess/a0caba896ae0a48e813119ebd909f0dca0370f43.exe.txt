push
mov
sub
mov
mov
inc
mov
sbbl
sub
push
mov
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jge
push
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
mov
movl
jmp
movl
jle
push
call
xor
sub
and
movl
movl
mov
add
add
add
mov
add
mov
adcl
sub
mov
sbb
xorl
mov
orl
andl
orl
jmp
loop
jns
cmp
lcall
add
mov
int
adc
xlat
fwait
fs
lea
push
xor
sub
lods
push
in
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
das
pop
in
pop
arpl
ljmp
jecxz
imul
jb
and
inc
mov
gs
push
imul
pop
sbb
ret
scas
mov
test
mov
jge
dec
out
shrb
subl
daa
mov
das
test
lea
or
sbb
push
lock
push
jl
jl
daa
js
inc
or
popf
es
mov
xchg
push
ret
jp
mov
mov
loope
pushf
inc
mov
xchg
mov
dec
sub
adc
jbe
inc
xchg
and
mov
ss
fwait
in
aam
lret
inc
hlt
mov
ret
test
xlat
inc
add
scas
rol
add
xor
repz
jno
dec
mov
pushf
adcb
call
call
push
dec
movsb
add
jb
daa
sar
out
outsb
jmp
dec
mov
call
aas
cwtl
add
push
add
sub
and
sbb
stos
jge
pop
push
xor
xchg
lock
mov
adc
ss
xchg
sub
xor
out
dec
test
in
pop
int3
pop
dec
xor
into
dec
mov
lea
or
push
ret
push
outsb
cmp
push
fs
ja
jge
sahf
fcomps
movsb
ljmp
lock
subl
lcall
test
cmp
pusha
inc
jne
in
clc
lcall
fistpll
test
adc
cmp
shl
pop
insb
inc
inc
out
cwtl
fs
fsubs
xchg
outsl
out
push
leave
push
jbe
push
scas
rclb
or
xchg
mov
sbb
dec
das
inc
je
mov
cmc
movsb
loope
out
dec
leave
push
pop
jo
test
add
sub
fs
or
out
int3
add
inc
lahf
in
sub
xor
pop
neg
vcmppd
jnp
lods
js
dec
mov
leave
jle
dec
int3
pop
fcmovb
je
pop
ljmp
xor
cli
pop
pop
pop
fcompl
and
xchg
cmp
mov
dec
ljmp
pop
add
or
cli
insl
dec
xchg
int
fsts
jle
pushf
or
add
das
shl
fs
adc
pop
or
push
loopne
mov
jg
dec
adcl
dec
push
jg
es
fdivrs
inc
mull
fiaddl
push
in
jns
in
add
or
out
pushf
mov
jecxz
popa
mov
jb
incl
js
movsb
mov
jp
sar
push
decl
inc
pop
fmull
cmp
icebp
jnp
fnsave
adc
mov
mov
or
icebp
lods
bound
addr16
inc
xchg
xor
sub
fisttps
fdivrl
scas
xlat
loope
pop
mov
push
xlat
sub
adc
and
pop
outsl
add
jg
or
roll
fimuls
hlt
cmpl
mov
mov
movl
mov
jmp
mov
mov
jne
pushl
push
push
call
and
adcl
andl
xor
or
mov
movzwl
and
mov
and
mov
add
movzbl
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jb
pushl
call
movzbl
adc
and
sbb
movzbl
xor
mov
or
sbbl
mov
cmpl
movl
movl
jmp
mov
mov
jg
push
push
pushl
pushl
call
sbb
dec
xor
sub
or
mov
sub
mov
add
shrd
shr
and
mov
mov
sub
mov
subl
xor
orl
xor
movl
or
xor
jmp
ljmp
cltd
daa
mov
push
mov
jle
adc
adc
adc
adc
push
jp
in
pop
jge
xor
push
sahf
test
mov
lea
pop
mov
pop
add
gs
scas
jg
jns
cltd
cmp
sub
fists
in
movsl
jp
xchg
outsl
ljmp
faddl
cmpb
lock
pop
lret
popf
loope
fld
cmp
cmp
setl
xor
dec
adcl
mov
mov
pop
test
xlat
or
insb
sbb
mov
imul
adc
cmp
jmp
push
xchg
mov
push
mov
push
cmp
addr16
xchg
dec
repnz
push
adc
and
mov
cmpsb
jp
imul
cmpsl
enter
xlat
mov
lds
xchg
pop
jns
inc
push
cmp
divb
popa
hlt
in
into
scas
pop
into
push
pop
xor
jnp
inc
cli
pop
mov
adc
cmp
clc
sbb
outsl
pop
mov
inc
jge
ljmp
lret
xchg
int3
sub
js
xchg
pop
add
inc
and
push
jns
push
sub
push
jp
jp
xor
xchg
inc
mov
pushf
hlt
iret
mov
cmp
cmp
inc
mov
lcall
mov
pop
cmp
pop
lret
mov
mov
popa
dec
or
pop
jnp
cmp
push
sub
sbb
insb
lock
int3
add
jbe
jecxz
test
pop
fistpl
cmp
push
lock
out
shll
in
test
testb
xchg
insb
shrl
stos
sbb
fwait
dec
sub
test
mov
sbb
pop
ljmp
int3
jo
xor
pop
or
negl
cmp
in
adc
xor
hlt
sbb
push
adc
or
js
es
or
adc
lahf
in
out
sahf
sub
out
and
add
sar
adc
sub
out
jp
lea
into
roll
xor
xor
push
dec
mov
in
decb
rcr
mov
mov
mov
iret
imul
mov
jo
scas
fwait
push
test
leave
inc
repz
sbb
dec
hlt
sub
push
mov
in
mov
push
jb
push
cmpsb
call
push
cmp
cwtl
lea
jmp
divb
adc
push
xor
jp
inc
or
scas
stos
pusha
jns
add
jmp
xchg
mov
cmpb
adc
and
sub
push
jg
adc
mov
lds
mov
mov
stos
mov
sarb
js
push
popf
aam
xchg
add
jo
hlt
scas
sbb
ret
ret
mov
cwtl
in
jnp
add
inc
lds
fwait
repz
sub
add
push
dec
adc
arpl
jne
rcrb
xorb
aam
pop
ljmp
das
icebp
or
aas
sub
enter
fimuls
lahf
insb
cltd
and
mov
cwtl
jo
scas
mov
fimull
test
icebp
lods
in
fistpl
aas
movsl
sub
and
jmp
or
stos
and
cwtl
dec
jno
push
repnz
mov
cmpl
notl
movl
movl
movl
jmp
mov
jle
pushl
push
pushl
pushl
push
call
sbb
addl
add
xorl
add
movl
sbbl
movl
sub
movl
xor
xor
and
movl
sub
movl
sub
movl
sbb
movl
sub
movl
cmpl
movl
movl
jmp
movl
mov
jb
pushl
pushl
push
pushl
push
call
andl
notl
andl
orl
addl
sbbl
movl
sbbl
movl
xorl
movl
xor
movl
movl
cmpl
movl
movl
movl
jmp
mov
jbe
push
push
push
push
call
subl
adcl
movl
adcl
sbbl
adcl
movl
sub
movl
movl
adcl
movl
negl
movl
cmpl
movl
movl
jmp
movl
jbe
push
pushl
pushl
call
adc
addl
orl
sbbl
notl
adcl
xor
movl
movzbl
xor
movl
cmpl
movl
mov
mov
jmp
mov
je
push
push
push
push
call
xorl
negl
xorl
subl
andl
adc
sbb
movl
inc
movl
mov
xor
mov
xorl
shl
mov
or
mov
mov
subl
push
xorl
push
adcl
push
subl
push
adcl
call
and
mov
sbb
mov
adc
xor
xor
or
add
mov
mov
xor
sub
mov
adcl
jmp
into
mov
and
xchg
fnsave
stos
orb
adc
adc
adc
inc
pushf
sbb
pop
dec
or
cmp
inc
jne
lcall
adc
sbb
inc
mov
in
sub
mov
or
fildl
test
dec
cld
cmpl
sub
je
mov
mov
add
inc
jmp
pop
stc
cmp
mov
in
inc
jbe
adc
lret
dec
notl
lea
shlb
sbb
pop
adc
push
stos
out
stos
push
cmpl
movsw
cli
loope
rol
out
hlt
inc
sarb
or
push
inc
addb
data16
addr16
and
cwtl
or
inc
push
add
dec
sti
mov
repz
rolb
leave
out
ss
scas
xor
sub
cmpsb
mov
xchg
cld
xchg
js
mov
jo
pop
mov
scas
dec
inc
push
push
out
pusha
icebp
dec
or
and
filds
or
sbb
out
push
push
sar
or
inc
leave
sbb
dec
inc
sbb
fidivrs
scas
mov
mov
fwait
add
xchg
call
sbb
pop
mull
imul
in
pop
mov
cli
inc
lret
xor
in
notb
insb
vpaddb
xor
call
orb
mov
in
not
mov
mov
xor
sub
pop
nop
lcall
pushl
xchg
fwait
jae
test
adc
mov
push
test
fistl
mov
icebp
outsb
sbb
push
xchg
adc
aaa
hlt
xchg
lahf
js,pn
xor
loopne
in
movsl
ror
jecxz
aaa
orl
subb
xor
imul
je
push
cmpsb
rol
gs
dec
pop
inc
lods
cmp
repz
push
inc
mov
icebp
lock
cwtl
mov
shl
mov
aas
dec
inc
cli
pop
popf
or
dec
ja
jge
loop
or
lock
dec
in
mov
and
lds
sub
pusha
sbb
add
pushf
push
cmp
mov
xchg
loope
mov
sbb
mov
stc
xchg
mov
and
lods
add
mov
insb
loop
fisubrs
and
es
dec
test
pop
inc
divb
lcall
cmp
jbe
cmp
jbe
push
int3
sbb
negl
mov
push
inc
shll
jns
outsl
insl
jbe
ljmp
sar
pop
inc
inc
int3
fbstp
test
pop
inc
dec
cmp
sbb
ficompl
aas
jnp
lock
daa
add
testb
xchg
sbb
mov
bound
pop
mov
ret
lcall
mov
xchg
test
cmc
push
mov
sbb
mov
fnstenv
adc
cmc
pop
push
push
or
cmp
pop
lahf
je
test
out
sub
xor
mov
jnp
dec
xlat
fs
popa
scas
and
sbbb
push
sbb
and
inc
mov
dec
hlt
adc
loop
xor
xchg
xchg
sbb
xchg
jmp
push
repnz
xchg
jo
push
popa
outsl
rcrl
testb
dec
jae
mov
lahf
cmp
rcr
adc
rclb
jge
xor
decl
add
inc
add
add
mov
or
and
xor
mov
or
andl
xor
movl
cmp
jmp
xlat
test
push
xlat
popa
dec
lcall
cmp
adc
int
adc
ljmp
xor
daa
mov
adc
push
cltd
setp
pop
mov
mov
or
push
enter
mov
and
cmp
jo
cmp
push
neg
iret
mov
jl
icebp
int3
xchg
aam
pusha
jge
xlat
sbb
add
in
popa
imul
call
jmp
mov
inc
or
fnstcw
xor
pop
pop
push
pop
insb
cld
js
push
or
mov
mov
or
insb
or
sbb
sbb
sahf
xchg
lcall
xchg
sub
shlb
cli
ss
mov
and
imul
sahf
iret
aas
repnz
or
sub
es
arpl
or
push
jmp
fwait
leave
adc
dec
pop
xchg
imul
push
int3
jmp
daa
jb
pusha
stos
cmp
sar
dec
pop
inc
fsts
les
mov
jo
xchg
dec
inc
cltd
xchg
sub
pop
add
cmc
pop
lods
adc
inc
mov
lcall
imul
sbb
fsubl
inc
popa
push
jmp
cmp
repz
fs
aam
push
iret
push
clc
sbb
popa
jb
loop
data16
sbb
pop
xor
xor
mov
cltd
mov
lahf
push
sbb
aas
in
loope
arpl
jo
jmp
fcoms
ja
les
out
loopne
imul
push
dec
pop
adc
bound
sbb
sub
sbb
sti
and
jbe
and
addr16
add
adc
rcl
dec
xchg
mov
sarl
ja
lcall
sahf
sub
insl
jecxz
mov
stc
stos
or
mull
imul
push
sbb
mov
and
pop
mov
jae
fcoml
mov
scas
dec
cltd
push
imul
dec
cmp
arpl
in
fldcw
nop
xchg
sub
imul
mov
add
sbb
cmp
iret
mov
add
movb
cs
neg
and
lcall
mov
mov
fs
dec
aaa
xchg
and
mov
add
mov
dec
pop
fldcw
in
jmp
pop
mov
loop
sub
call
dec
out
lcall
ret
enter
imul
mov
movsl
sar
dec
jmp
dec
adc
sbb
push
es
and
outsl
cld
xor
inc
cmp
stos
jnp
nop
inc
and
rcrb
dec
enter
inc
cwtl
and
in
faddl
stc
mov
int3
scas
jae
mov
insl
mov
ja
and
aaa
xchg
jo
rorb
test
adc
jns
inc
sbb
mov
xor
dec
mov
mov
xchg
push
push
movb
out
dec
icebp
mov
sub
lods
push
sbb
mov
mov
fldcw
mov
popf
jbe
or
inc
sub
dec
jmp
rorb
xchg
sub
jne
sbb
dec
imul
dec
pop
xchg
rcrb
loopne
sub
ret
push
sbb
cmp
jae
inc
pop
cmpsb
fisttpll
jmp
test
pusha
add
add
mov
mov
cmpl
mov
movl
movzbl
jmp
movl
jae
push
push
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
shrd
shr
add
mov
mov
andl
shl
xor
addl
xor
or
mov
mov
movl
cmp
jne
mov
cmpl
not
mov
movl
jmp
movl
movl
je
push
pushl
push
push
call
adc
xor
or
mov
adc
not
decl
xorl
sub
and
mov
sub
cmpl
mov
movzwl
mov
jmp
movl
movl
jle
pushl
pushl
call
sbb
adc
add
sbb
sbb
movl
mov
xor
mov
mov
sub
mov
shrd
xorl
jmp
lcall
add
js
andb
notl
adc
adc
adc
scas
loope
ficomps
popf
movsl
adc
dec
xchg
mov
or
mov
push
add
push
add
mov
xor
push
xor
or
cmp
inc
sbb
jp
in
jecxz
fs
adc
jae
orl
es
add
pop
jl
mov
and
iret
jle
mov
add
xor
out
mov
pop
rorl
cmc
adc
pop
push
mov
mov
aaa
xchg
sahf
jnp
mov
rolb
pop
jbe
sahf
lods
repnz
push
cs
xchg
sarb
lret
or
add
mov
jecxz
sbb
inc
add
inc
sub
add
fcomps
rcl
rcrl
data16
lods
push
pop
mov
dec
sarl
pop
dec
lock
mov
adc
mov
xchg
fdivs
pusha
test
push
mov
out
xor
mov
cmc
int3
clc
dec
xlat
aam
xchg
in
rorl
in
sbb
outsb
out
out
sub
xor
lds
cmp
mov
adc
es
call
jecxz
sbb
lret
mov
insl
js
pop
pushf
push
and
lods
adc
fwait
outsl
sub
stos
inc
xchg
sub
add
push
int3
dec
cmp
test
or
int
pop
cmp
xchg
cli
sahf
jl
push
sub
and
rcll
cmp
call
inc
jge
cli
nop
or
xchg
cmp
push
jbe
es
xor
jp
scas
jno
sub
push
dec
ffree
sbb
adc
dec
arpl
dec
into
mov
lods
call
ljmp
xchg
sbb
insb
mov
call
mov
outsl
gs
push
mov
adc
inc
dec
fwait
dec
test
sub
test
ds
into
push
mov
popl
xor
les
lds
xchg
xor
mov
pop
bound
loopne
cmpsb
inc
sbb
jae
test
insb
hlt
mov
fsubs
dec
cwtl
lret
fsubr
popa
ja
dec
divl
mov
sub
test
cmc
insb
lds
lret
jne
fwait
inc
xchg
fldcw
push
inc
ja
mov
test
nop
add
dec
sbb
xor
icebp
repz
jns
cmp
jl
addb
dec
xchg
xor
sub
sbb
mov
dec
lea
sbb
lods
add
sub
jbe
cmp
xor
xchg
push
sarb
inc
add
inc
das
lods
or
dec
adc
xor
bound
les
mov
sbb
adc
shll
sbbb
add
popf
jno
xor
adc
mov
mov
cmp
sub
ret
cmp
int3
xchg
add
xor
dec
mov
dec
mov
jb
enter
repz
in
and
loop
adc
cwtl
pop
fistps
xchg
bound
int
bound
cmp
jmp
adc
stos
sbb
ljmp
das
mov
popf
push
loope
mov
roll
stos
int
mov
lahf
mov
loop
cmpsl
add
pop
mov
cmpl
mov
mov
jmp
movl
jle
pushl
pushl
call
sub
add
notl
sbb
xor
dec
sub
mov
xor
orl
shr
sbbl
mov
adcl
xor
andl
or
shl
cmpl
mov
mov
movl
jmp
movl
movl
je
pushl
pushl
call
notl
and
sub
and
not
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
jle
push
pushl
pushl
call
sbbl
adcl
movzbl
sbb
mov
movzbl
and
mov
movzbl
sbb
mov
add
add
mov
mov
mov
shrd
or
shr
cmpl
movl
mov
movl
mov
jmp
mov
je
pushl
call
and
and
sub
or
mov
mov
or
sub
and
mov
mov
xor
shl
adcl
xor
or
xor
mov
mov
shrd
shr
mov
sbb
mov
cmpl
movl
movl
mov
jmp
movl
not
ja
pushl
push
call
mov
xor
or
sub
add
mov
sbb
inc
mov
mov
sub
add
or
mov
sbb
mov
xor
xor
or
andl
shl
lea
subl
mov
mov
andl
shrd
subl
shr
cmpl
mov
movzwl
mov
movl
jmp
mov
movl
jb
pushl
push
push
pushl
call
xorl
neg
or
movzbl
sbb
movzbl
xor
mov
xor
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
je
pushl
call
movzwl
add
mov
add
movzbl
and
or
subl
neg
mov
cmpl
mov
movl
movl
jmp
mov
jge
pushl
call
sbb
xor
inc
mov
sub
mov
adc
adc
cmpl
movzbl
mov
jmp
mov
mov
jl
push
call
movzwl
and
movl
add
sbb
movzbl
sub
sub
xor
mov
xor
subl
or
orl
shl
xor
imul
mov
and
mov
mov
andl
shrd
andl
mov
mov
xorl
xor
shr
subl
mov
mov
sub
mov
xor
adcl
or
sbbl
shl
sub
mov
cmp
mov
mov
movl
jg
or
mov
sub
mov
movl
shrd
mov
xor
mov
sbbl
xor
movl
shl
xor
adcl
or
shr
or
mov
mov
adc
mov
mov
mov
addl
mov
sbbl
shrd
shr
adcl
mov
mov
movzbl
sbb
mov
addl
xor
xor
or
shl
addl
imul
andl
sub
movl
jmp
mov
adcl
mov
notl
shrd
mov
add
mov
addl
xor
movl
shl
xor
or
xorl
shr
xorl
mov
mov
mov
cmpl
mov
mov
not
jmp
movl
mov
jg
push
pushl
push
push
call
xor
xor
xor
sbb
addl
orl
neg
xorl
and
cmpl
movl
movl
jmp
movl
jle
pushl
call
xor
xor
mov
sbb
dec
not
mov
adc
cmpl
mov
mov
mov
jmp
movl
movl
jg
pushl
push
push
push
call
xor
add
or
mov
movzbl
and
notl
adc
or
adcl
sub
mov
shrd
shr
mov
mov
jmp
xchg
icebp
mov
icebp
out
loopne
stos
sbb
push
out
adc
int
adc
jp
sbb
mov
lds
push
in
inc
pop
pop
or
fmuls
das
ret
aaa
pop
mov
mov
cmp
jg
rolb
out
pop
push
mov
sub
xor
push
push
dec
add
repnz
loopne
gs
jae
sarb
sbb
sarl
loope
mov
sub
xor
scas
sar
adc
out
jbe
add
mov
ja
movsl
push
push
jo
dec
enter
mov
sbb
and
scas
sbb
pusha
push
loopne
test
add
sahf
sbb
dec
fistpll
shl
push
lret
mov
and
mull
nop
inc
dec
jle
cmpb
enter
jae
jbe
xchg
push
push
clc
xor
mov
imul
add
sub
mov
adc
xor
xor
add
mov
testb
cmp
movsl
add
cmpb
mov
or
xchg
jnp
jo
das
or
gs
repz
xchg
add
dec
into
scas
punpcklwd
inc
fldcw
and
push
stc
in
xor
jae
mov
and
cmp
out
pop
jnp
push
or
and
int3
cmc
cmc
mov
test
mov
cmp
mov
adc
xchg
sahf
sub
adc
ror
mov
jp
cs
mov
push
out
jns
ds
lods
jecxz
shlb
popf
aam
repz
jp
rcr
push
jl
int3
daa
ss
idivl
fmuls
mov
popa
es
or
jle
mov
loop
dec
stos
adc
cld
xor
xchg
scas
xor
test
test
pop
popf
pop
frstor
jmp
inc
fs
pop
lds
xchg
cmp
mov
shlb
icebp
test
cli
dec
push
clc
inc
fistl
mov
xchg
xchg
mov
xchg
jg
roll
sbb
stos
or
pop
in
push
mov
xchg
aaa
xlat
insb
sub
mov
js
addr16
push
inc
out
gs
inc
add
ficomps
ss
mov
lds
out
jle
negb
adc
or
loopne
xor
pop
ds
or
sahf
imul
push
insl
and
mov
sub
jbe
jmp
mov
bound
pop
aas
mov
notrack
add
scas
pop
xchg
push
jp
mov
jg
jmp
mov
daa
adc
test
adc
xchg
jg
xorb
insb
aad
jl
sub
ss
testb
mov
push
pop
inc
movl
out
adc
negl
sbb
rcll
out
mov
mov
rcrb
loope
sahf
cltd
das
push
shll
xchg
stos
loope
fistpll
sbb
mov
leave
faddl
lahf
outsb
int3
in
sub
sub
mov
lahf
mov
pop
mov
cmovg
jmp
cwtl
inc
fiadds
sbbl
push
mov
jbe
adc
push
fnsave
mov
sbbb
jne
inc
mov
lahf
jmp
pusha
mov
fadds
daa
jne
push
jmp
popf
repz
jge
add
dec
mov
sbbl
jns
ljmp
push
dec
inc
std
fdivrs
xchg
outsb
pop
into
mov
int
mov
lods
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
jmp
lret
lea
push
push
and
xor
lret
js
in
adc
int
adc
adc
loope
or
cwtl
out
xor
cs
jp
in
jb
into
pushf
jns
imull
mov
cli
dec
push
imul
jb
movl
cmovge
push
ret
ret
leave
add
popa
push
inc
cs
andl
dec
cltd
outsb
aam
inc
hlt
adc
rcll
jmp
popa
push
inc
mov
sbb
lahf
insl
rcrb
mov
jge
icebp
adc
mov
add
aas
push
test
mov
xor
popf
jbe
and
movsb
dec
ss
dec
mov
push
pop
adc
pop
call
in
xchg
aam
push
cmp
jge
mov
adc
outsb
add
lret
gs
adc
cli
mov
ljmp
subl
lods
xorb
xchg
test
or
dec
or
inc
stos
loop
and
mov
lods
and
out
xorl
loop
ds
push
push
shll
and
mov
mov
cmpsl
jmp
cmc
es
dec
pop
arpl
sub
xchg
and
xor
pop
shl
dec
dec
sbb
les
inc
push
cmp
dec
test
xchg
lcall
roll
pop
mov
adc
sbb
dec
loop
leave
jge
push
call
lcall
adc
adc
lods
or
mov
jns
xchg
push
push
mov
lea
and
dec
and
scas
out
scas
mov
mov
push
xlat
lods
or
sbb
loopne
dec
or
sub
outsb
and
push
sti
outsl
or
mov
ja
in
nop
or
add
loopne
and
ret
ja
scas
clc
pop
xchg
aam
inc
roll
ficoml
sahf
xchg
add
push
fimuls
cmp
pop
sbb
ret
xchg
inc
sub
inc
ret
cwtl
das
divb
leave
insb
test
iret
mov
xchg
sub
pop
enter
repz
jge
mov
mov
cmp
in
aas
push
popa
add
xchg
mov
pusha
xchg
jecxz
test
test
mov
xor
xchg
push
leave
loop
inc
push
or
jge
xchg
aas
cs
sub
cwtl
dec
jbe
sub
mov
inc
sub
int3
dec
test
dec
rcrl
lock
les
imul
jl
dec
daa
push
inc
testl
cli
pop
xor
xchg
jmp
xchg
add
ret
jp
inc
pop
jbe
pop
stc
int
cmp
mov
push
fwait
clc
xchg
repz
push
std
jbe
add
xor
repnz
sbb
xchg
lea
addb
pushf
adc
jae
in
js
decl
mov
and
cmp
dec
adc
mov
mov
sub
fwait
arpl
or
mov
mov
push
jg
insl
icebp
mov
and
loopne
xchg
fdivp
mov
test
loope
or
jmp
std
mov
jno
leave
shrb
pop
data16
ljmp
imul
sub
fldt
or
sahf
lahf
shll
pop
mov
mov
cmp
int
sbb
test
movsl
inc
cmc
testb
cmp
outsl
mov
xor
xor
cmc
add
sub
sbb
cmp
movl
mov
movl
mov
mov
mov
shrd
shr
jmp
fsubrs
fldenv
pushf
sbb
adc
adc
int
adc
cmp
push
and
mov
sbb
lods
dec
ss
popa
jne
test
cltd
loopne
xchg
repnz
and
cmp
xchg
push
jae
ja
xchg
or
sarl
dec
leave
int
pop
out
mov
imul
inc
aam
jge
adc
jno
xchg
daa
ret
pushl
xchg
jae
adc
xlat
out
pop
inc
test
add
sbb
jmp
mov
ret
jmp
mov
xor
hlt
scas
push
mov
daa
out
shrb
sub
add
shrb
movsb
notl
cmp
fdivs
cmp
rorl
xchg
mov
ret
sub
fdivrl
adc
xor
sbb
or
pop
subl
or
test
out
rcrl
cli
popf
cmpsl
jo
pop
jns
outsb
gs
push
sub
xlat
icebp
imul
push
stos
jle
pop
xchg
daa
lods
mov
frstor
lock
popf
int
adc
adc
std
subl
pop
cltd
cmp
pop
notb
xchg
ret
xlat
add
adc
mov
sbb
ljmp
test
sbb
fwait
push
nop
inc
xchg
lods
test
fidivs
jle
ss
mov
out
out
int3
sbb
push
and
daa
cmp
int3
mov
sahf
cmp
jg
xchg
nop
adc
sar
cld
jg
dec
lods
imul
jmp
and
mov
adc
loop
and
xor
adc
mov
lcall
lret
xchg
repz
rorl
dec
mov
jl
xchg
xchg
and
mov
rclb
daa
inc
jmp
call
push
lds
imull
fisubl
mov
dec
pop
adc
mov
jl
repz
mov
sub
sbb
cmpsb
mov
mov
dec
pop
xor
imul
push
mov
or
inc
pop
fcoms
lret
test
xchg
filds
mov
add
push
pushf
bound
or
push
mov
jl
out
cmp
fwait
clc
dec
jns,pn
ret
bound
sbb
sahf
mov
jp
in
and
out
loop
add
sub
aam
or
adc
mov
fbstp
rcl
xchg
mov
adcl
mov
adc
jle
lock
adc
lock
lret
lods
inc
xchg
sub
shll
dec
cmc
mov
or
stos
xchg
lea
sub
push
pop
cmp
push
and
mov
decl
mulb
les
push
mov
leave
mov
cltd
je
jle
add
push
mov
std
xor
mov
adc
push
shl
inc
mull
arpl
jmp
jl
fdivs
shll
jmp
ljmp
add
add
fadds
in
fstpl
jns
mov
fbld
mov
add
xchg
ja
pop
xor
mov
insl
leave
and
fdivs
lcall
imul
outsl
mov
decb
fisubrs
pop
sub
je
dec
rorb
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
jmp
orb
mov
cltd
les
int
adc
mov
jo
push
leave
inc
lcall
loope
xor
mov
jo
inc
ja
and
sbb
aam
ficomps
rcll
and
testl
sbb
xchg
sub
mov
push
sbbl
cltd
test
xor
in
push
pop
aad
dec
mov
inc
stos
adc
mov
push
xlat
lods
movsb
cmp
jg
cmpsl
sub
insb
jo
mov
jecxz
cmp
or
test
out
xlat
mov
movsb
out
sti
into
call
cmp
pop
sub
push
notl
iret
ret
mov
cmpsl
sti
daa
add
fnstsw
test
push
add
stos
adc
jo
push
xchg
mov
mov
and
and
jb
jle
sahf
mov
test
icebp
push
test
add
adc
inc
adc
cmp
lds
push
mov
lret
push
rol
add
imul
mov
cwtl
cld
cmpxchg
je
mov
outsl
sbb
sbb
mov
jnp
inc
or
stos
shll
movsb
dec
and
sbb
cs
inc
lahf
push
and
push
dec
subb
mov
inc
cmc
jecxz
jb
mov
xor
fisubs
jg
push
push
iret
lds
pop
pop
jge
pop
add
xchg
sub
sbb
sbb
pop
rcrl
mov
jb
push
adc
jbe
mov
mov
jecxz
lcall
xor
nop
dec
dec
out
inc
pop
insb
ret
xchg
orb
push
out
mov
ds
mov
xor
mov
int
mov
xchg
mov
jns
in
mov
dec
pop
push
imul
andb
lret
div
cmpsl
add
out
loop
ss
xor
in
sbb
stc
sahf
jg
clc
dec
xchg
mov
fnstsw
cmpsl
jg
scas
popf
repz
add
movsb
add
add
stos
cmp
arpl
iret
mov
aad
or
mov
lahf
loop
inc
subb
lahf
cli
sbb
addl
push
std
insb
ja
jns
das
imul
enter
addr16
push
push
sahf
cmpsl
popf
push
clc
incb
mov
pop
call
push
ret
fldl
cmp
imul
mov
ljmp
dec
loopne
mov
mov
iret
daa
pop
cltd
loope
sub
testl
xor
std
mov
in
mov
loopne
test
xor
movsb
pop
jmp
push
loopne
fnstenv
add
repz
arpl
dec
or
or
mov
pusha
inc
jbe
div
mov
dec
dec
jge
inc
jp
push
leave
insl
inc
push
cwtl
sbb
or
add
jp
fiadds
out
xchg
filds
xchg
mov
negl
test
out
pop
jecxz
movsl
mov
sbb
mov
push
imul
jmp
adc
shlb
iret
ja
xlat
cmpsb
nop
jne
fsub
xlat
mov
xlat
mov
inc
imul
lea
lret
call
adc
ja
sub
imul
std
incb
sub
dec
arpl
and
and
cmp
mov
mov
bound
push
mov
pop
mov
add
in
loope
jmp
fmuls
sbb
push
mov
jle
aam
adc
adc
adc
out
xor
push
in
addl
push
cmp
mov
push
pop
add
mov
or
inc
add
test
popf
or
std
rorl
loope
popf
push
addl
mov
inc
std
sar
mov
jns
add
push
out
xchg
stos
out
mov
out
fists
pop
je
xchg
rep
mov
repnz
mov
out
or
mov
or
lret
setne
sahf
lds
sub
jecxz
mov
les
push
add
hlt
std
insb
loop
mov
rol
fdivrl
sbb
popa
xchg
insl
xor
inc
iret
inc
xchg
js
mov
pop
fwait
and
sub
cltd
add
loop
aam
mov
in
xchg
push
xor
aas
arpl
or
ret
ja
repnz
or
stc
xchg
push
xchg
push
ret
jmp
cwtl
lret
pop
mov
jae
xor
xlat
decb
sbb
cmp
fwait
push
xor
cmpsb
push
gs
fmull
jecxz
jno
sub
xchg
pop
jae
addl
mov
faddl
lock
nop
push
fiaddl
and
jo
sbb
and
leave
in
mov
xor
gs
mov
xchg
rorb
jmp
stos
and
push
imul
stos
aam
lret
aad
pushf
sbbl
dec
mov
lods
aaa
in
mov
ds
add
and
mov
adc
and
pop
movb
xor
mov
dec
lods
ja
mov
out
mov
and
mov
lcall
popl
xchg
das
mov
add
inc
gs
mov
adc
push
clc
cs
sub
ss
cld
add
lahf
in
push
mov
lock
pop
test
cmp
daa
icebp
out
adc
shrb
ret
lea
mov
enter
push
cs
mov
cmp
cmpsb
pop
push
and
inc
inc
push
push
ret
adc
sub
sahf
push
inc
shll
mov
aad
xchg
fdivs
sbb
lahf
pop
pop
enter
scas
mov
cltd
xchg
xchg
enter
das
in
test
inc
cmp
sub
movsb
inc
ljmp
xchg
bnd
sbb
rcrl
testl
or
adcl
mov
mov
popf
mov
jo
enter
inc
sbb
test
movsl
cltd
std
insl
in
stc
push
mov
call
decl
jbe
gs
stc
jl
xchg
rorl
sub
sub
xchg
xor
out
pushf
and
popa
rclb
cmp
in
push
or
lret
shrb
mov
lods
cltd
mov
shr
xchg
ret
imul
mov
rorb
fidivrs
push
dec
xchg
ja
cwtl
pop
xor
ljmp
enter
cwtl
dec
mov
ljmp
cwtl
movsl
ficoms
pop
and
stc
mov
push
sbbb
mov
dec
inc
icebp
ret
mov
nop
enter
in
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
dec
or
push
sub
loopne
adc
lods
xor
adc
int
adc
xchg
in
aas
xor
mov
xchg
in
out
mov
mov
lret
aam
inc
xchg
push
xor
and
fdivrl
out
mov
enter
xchg
cld
pop
arpl
ror
addr16
xlat
or
das
xor
cltd
fbld
ljmp
enter
cltd
pop
mov
jns
pusha
inc
adc
add
test
add
mov
pop
push
clc
outsb
lret
jle
pop
es
shrb
push
sar
xlat
movsl
sarl
xchg
pop
mov
push
adc
fildl
and
and
sbb
xchg
sub
aaa
jns
inc
dec
andb
pusha
ds
mov
addr16
mov
dec
push
adc
xor
ret
notb
std
inc
pop
stos
in
dec
mov
sub
cltd
insb
out
sti
cmp
scas
sbb
sub
lcall
push
jb
mov
push
cltd
imul
pop
xchg
pop
jae
and
dec
cmpsb
add
xor
jns
pop
jno
add
pop
adcl
aas
and
push
sti
dec
and
negl
cmc
stos
bound
mov
jno
jb
pop
pop
lret
cmc
and
cmc
xor
and
and
ss
stc
add
lods
fildl
adc
divl
mov
jg
lods
inc
or
mov
out
inc
jp
add
adc
scas
mov
or
ja,pt
mov
cmp
and
popa
lds
adc
and
iret
popf
outsb
mov
icebp
jg
or
mov
mov
aad
or
iret
cmp
dec
test
and
testl
and
sbb
mov
mov
clc
jg
out
in
shrl
dec
int
cmp
movsl
xchg
aam
lds
or
and
fwait
loope
or
stos
mov
ja
and
lods
push
sub
jns
cs
stos
sub
in
jmp
jno
xor
push
and
sub
shrl
mov
cli
jmp
xor
jnp
into
aaa
jae
add
mov
div
shll
ror
xchg
scas
xor
dec
repz
fisttps
jne
je
shrl
push
inc
ror
adc
sahf
push
push
jg
mov
mov
outsb
inc
add
lea
and
sbb
adc
hlt
add
mov
xchg
insb
paddd
dec
dec
lods
fwait
scas
dec
cmc
stc
inc
je
xor
mov
ja
or
or
mov
enter
test
mov
sbb
negl
cmpsl
insb
and
sarl
insl
dec
ja
mov
xor
fadds
pop
ja
sahf
adc
aas
cmp
insb
xlat
ljmp
lock
jnp
mov
les
cmp
and
mov
dec
ret
add
insb
stos
ret
ss
adc
xchg
cld
cmp
outsb
mov
or
popf
jmp
ljmp
jae
sbb
mov
dec
das
pop
orb
negb
push
cmp
jecxz
add
dec
cli
mov
data16
xchg
test
loopne
shr
mov
mov
xor
mov
xor
or
mov
dec
not
jmp
adc
push
inc
daa
sbb
lods
insb
mulb
pop
lods
ljmp
adc
or
or
adc
jns
adc
mov
push
dec
jno
inc
hlt
pushf
mov
cmp
in
xchg
mov
sub
data16
scas
xor
popa
lahf
cs
mov
ss
popl
fldz
out
movsb
or
pop
mov
int
int
xchg
lret
mov
call
adc
pop
rolb
pop
xor
adc
mov
loopne
popf
jb
mov
aam
and
dec
ficompl
pop
leave
call
imul
and
push
lods
out
cmpsb
jp
test
ss
sti
pusha
cltd
pop
imul
and
icebp
inc
xor
or
jo
sbb
pop
sub
fildll
stos
stos
jl
inc
loopne
ljmp
pop
imul
pop
inc
sbb
mov
popa
jmp
leave
adc
sbb
lock
cmp
sub
and
or
adcl
cwtl
push
fs
repz
mov
test
addl
dec
arpl
clc
sbb
dec
movsl
sti
roll
xchg
sub
or
lahf
sahf
imul
clc
mov
sbb
sbb
outsb
push
aam
mov
popa
push
pushf
jecxz
test
icebp
shlb
sti
cs
loop
jno
push
arpl
je
mov
notl
sbb
incl
aas
xchg
shl
loope
imul
out
inc
and
sbb
arpl
pop
nop
mov
xchg
push
lds
rcrb
ss
sub
add
jb
popa
xchg
mov
in
cmpb
cld
mov
pop
out
xchg
mov
daa
mov
loope
sbb
dec
in
test
sub
cmp
hlt
push
fwait
dec
jp
sbb
push
push
fdivl
mov
and
push
dec
ss
dec
or
lcall
pop
in
and
sbb
scas
inc
sub
sub
push
sti
inc
pop
imul
psraw
add
bound
xchg
jle
pop
sub
jmp
sub
dec
or
in
cmp
push
movsb
int3
fistl
jns
sbbb
sti
scas
dec
pop
pop
cmpsl
push
jnp
out
stos
imulb
daa
mov
pop
stos
mov
mov
mov
mov
mov
jecxz
lahf
sub
daa
test
and
shl
lock
lret
mov
fisubrl
bound
or
ljmp
push
pop
push
push
sub
inc
xor
pop
add
cld
movsl
dec
inc
test
out
pop
cwtl
pop
leave
push
adc
mov
jne
jle
sub
or
ljmp
mov
cmp
mov
movsb
jnp
scas
cs
loopne
add
inc
bound
sbb
mov
push
cmp
test
dec
cmp
mov
cmpsb
cbtw
sbb
add
fadds
cmp
fs
ljmp
ret
pop
fisubrl
dec
lds
dec
add
xchg
aam
int
jno
out
ja
out
inc
pop
imul
dec
js
dec
leave
ds
sti
js
inc
mov
dec
ret
ds
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
jmp
jp
lds
sub
rorb
insb
fwait
ret
int
adc
stos
out
das
push
push
shlb
push
adc
xchg
mov
xchg
or
fld1
loop
pop
call
cltd
sub
or
imul
push
pop
mov
xor
mov
gs
pushf
sbb
stos
inc
cmp
mov
aad
fwait
jge
inc
dec
add
dec
lea
cmp
adc
sub
ljmp
mov
test
scas
pop
fists
mov
mov
cmp
pop
nop
xchg
icebp
xor
sub
mov
shl
jo
xchg
lea
add
cli
mov
test
and
jp
or
and
out
or
rol
outsl
sub
inc
addl
jbe
mov
mov
lcall
cmp
out
mov
ret
test
cmpb
jp
aas
ljmp
push
adc
test
pop
ja
les
xchg
dec
cmp
repnz
inc
pusha
mov
dec
aam
and
dec
and
pop
lahf
cmp
mov
xchg
pushf
sub
icebp
pshufw
sub
mov
push
xor
xorl
mov
jnp
xor
loopne
pop
mov
ficoml
ret
mov
mov
sbb
or
or
arpl
pop
scas
shrl
cli
stc
cmp
lcall
aas
fisttpl
xor
dec
test
mov
fcoms
out
lret
sbb
sti
adc
mov
jecxz
push
sbb
iret
inc
xor
subl
cmp
sub
or
pop
sub
out
xchg
imul
cmp
mov
cs
cld
hlt
pop
sti
inc
mov
pop
mov
cmpsb
aaa
cmpsb
imul
jmp
aaa
mov
icebp
mov
lock
aam
fcmovu
jne
adc
mov
dec
mov
mov
mov
inc
imul
push
sarl
ret
or
fidivrl
pop
inc
sub
push
lret
outsb
repnz
test
jnp
xchg
xor
mov
or
test
push
popa
inc
int
inc
cmp
and
push
add
add
jmp
icebp
inc
mov
jmp
call
sub
or
aaa
add
icebp
pop
inc
imul
hlt
into
mov
in
jge
and
imul
insl
xor
xchg
mov
out
xchg
mov
js
ljmp
xchg
fildl
jg
fidivrs
hlt
pop
mov
or
stos
cmpsb
outsl
scas
inc
popf
sub
mov
in
adc
jmp
lock
shr
call
and
cmp
xor
pop
xlat
xchg
xor
pusha
lcall
inc
cmp
ret
cmp
adc
ret
mov
xor
pop
cmp
nop
sub
and
ja
out
subb
sti
jbe
lea
and
test
xchg
mov
cmc
cltd
leave
and
leave
ret
sub
cmp
pop
pop
lahf
dec
push
xor
jae
lods
leave
add
cmc
ret
xor
ret
and
fisubrl
push
adc
push
pop
movsb
pop
bnd
aas
out
movsl
inc
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
jmp
imul
sbb
adc
mov
adc
and
xchg
xlat
mov
xchg
cld
mov
mov
std
xor
push
mov
add
adcb
push
pop
jmp
and
scas
adc
lcall
addb
cmp
mov
inc
fistps
incl
xchg
rcrb
int
push
jmp
pop
add
sbb
adc
cmp
ljmp
push
je
push
fisubl
jno
lret
outsb
stos
xchg
cmpsl
cmc
pop
mov
lahf
sahf
daa
ffreep
mov
ret
flds
cmp
dec
inc
sbb
fnstcw
add
mov
push
push
xor
pop
add
pop
fcoms
aad
pusha
push
xchg
inc
lfs
repz
cmp
hlt
mov
xchg
sbb
adc
std
sub
jns
das
fsubp
pop
mov
lds
in
or
lods
xchg
fwait
nop
jg
ror
and
push
lock
scas
shll
pop
mov
push
outsb
outsl
pushf
jecxz,pt
test
test
jl
inc
mov
pop
add
insl
lcall
add
enter
and
shrb
push
ds
dec
movsb
or
dec
push
aad
test
push
or
iret
pop
xchg
push
loopne
lods
sub
nop
mov
fcoml
repz
lds
xlat
inc
aaa
adcb
arpl
rcl
rorb
rclb
cmp
pop
fldt
or
jb
xor
into
adc
sub
add
hlt
in
lret
jmp
daa
cmp
dec
lcall
jp
jle
mov
test
mov
push
mov
pusha
fwait
push
daa
mov
dec
jns
sbb
rol
sahf
sbbl
scas
push
lods
call
cmp
jne
or
js
push
leave
pusha
sub
inc
and
and
divb
ror
add
ret
out
jp
dec
push
aaa
sub
scas
pushf
std
fcmovnu
fwait
sub
and
out
xor
cmc
pop
inc
rclb
xor
mov
sub
fcmovnb
loopne
sarl
sub
push
xor
rcll
sti
or
jl
jecxz
sbb
jl
pop
xchg
sbb
test
pop
xchg
sub
xchg
mov
cmp
pop
cmp
cmpsb
dec
cmp
rorb
inc
add
xchg
ljmp
lock
pop
sti
mov
jmp
adc
xchg
dec
jmp
cmp
out
pop
ljmp
add
fcoml
jbe
cmc
adc
rcll
ljmp
push
test
inc
sbb
sbb
pop
outsl
das
testb
imul
ret
xor
jns
sub
cmpsl
push
xchg
pop
mov
test
jmp
xchg
xlat
into
sub
movsb
cmpsl
mov
inc
int
mov
lds
aas
pusha
sbb
popf
push
adc
push
cld
xor
cmpsl
adc
dec
xchg
inc
imul
imul
js
lods
cmp
idivl
pop
daa
adc
dec
cmpsb
cmp
pop
mov
or
inc
push
jnp
not
mov
lods
mov
xchg
mov
mov
pop
fwait
in
testb
cmp
stc
cmp
pop
lcall
add
fmuls
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
jmp
repz
mov
pop
pop
lods
dec
xlat
loop
pop
mov
adc
adc
adc
dec
jecxz
push
xor
inc
or
adc
jecxz
xchg
outsl
mov
jle
in
pop
daa
cmp
pop
ja
adc
sahf
scas
or
inc
add
and
sub
or
out
int3
xlat
cmp
add
xor
push
xor
push
ret
jne
scas
jl
xor
push
movsl
fsubrs
lock
sub
mov
or
lods
shlb
push
sbb
cmpsb
sbb
rcrl
nop
mov
sbb
add
jbe
cmpsb
add
inc
iret
lcall
mov
jo
and
mov
imul
add
xchg
jmp
loopne
sub
into
sub
cltd
loope
jmp
imul
push
mov
add
dec
out
sbb
repz
ret
mov
jne
mov
xchg
and
imul
outsl
insl
mov
out
dec
sarb
xchg
mov
hlt
out
adc
push
or
stos
lea
popf
ds
xchg
or
mov
verw
push
sbb
lods
into
mov
or
fprem1
pop
add
orb
test
cwtl
inc
cwtl
and
lret
mov
pop
xchg
mov
ret
aad
adc
lods
push
mov
pop
sub
xor
fdivl
addb
xor
fsubs
icebp
dec
int
jo
xchg
out
jnp
mov
jno
aas
arpl
push
inc
push
xchg
cwtl
mov
scas
adc
lock
mov
test
pop
outsl
lods
out
cmp
xlat
clc
mov
aaa
test
jl
into
cwtl
push
jns
add
lods
mov
out
sbb
push
xchg
or
jb
adc
mov
imul
cmovae
out
data16
push
shlb
and
and
inc
jg
movsb
repnz
shll
stc
out
enter
adc
push
clc
jmp
aam
into
fs
test
push
jb
into
fwait
push
movsb
popa
cmpsl
imul
pop
jbe
mov
mov
movsl
push
xchg
and
inc
mov
mov
inc
xor
xchg
lods
arpl
hlt
adc
bound
cmpl
mov
mov
gs
sbb
push
shrb
test
mov
inc
std
in
int
clc
icebp
in
cmp
lahf
shrb
lods
jg
imul
sub
cmp
xchg
mov
pushf
out
inc
test
pop
movsb
fbld
fsubr
mov
inc
dec
push
dec
imul
mov
or
push
ja
jle
xchg
jnp
data16
sbb
dec
int3
rorb
pushf
pop
sub
popa
xchg
push
add
add
pop
mov
and
nop
outsb
adc
lds
or
xchg
mov
push
jmp
addr16
lock
sbb
or
cmc
popa
inc
push
jle
in
lret
and
call
outsl
add
push
cmp
ficoml
jle
stos
cwtl
jns
cld
call
cwtl
subl
fmuls
add
jecxz
adc
jle
out
es
pop
sbb
out
ds
dec
notb
adc
adc
rorb
inc
cwtl
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
jmp
mov
push
jle,pt
dec
lods
shrl
adc
cmp
cmpsb
scas
popa
lcall
and
inc
das
je
notl
mov
cmp
mov
movsl
mov
dec
add
cmp
jno
sahf
mov
push
daa
add
lea
push
ja
cmp
xchg
int
rol
loopne
cltd
xor
jne
stc
dec
pop
ficoml
mov
insl
and
sub
jge
sbb
or
test
hlt
push
bound
mov
dec
movsl
cmp
add
ja
in
int3
jo
push
movsl
jl
sub
shlb
or
mov
sbb
jo
je
fs
add
xchg
jae
aas
sub
cs
into
add
cmc
inc
js
adc
sar
aaa
jne
call
cli
mov
inc
rcl
gs
add
dec
cwtl
sbb
gs
mov
es
xchg
xchg
xor
jo
scas
jo
adc
push
or
aaa
std
dec
add
jae
inc
add
cltd
sub
lock
scas
add
jmp
imul
sbb
pop
clc
aam
stos
icebp
pop
pushf
pop
lock
xorb
cld
popf
shlb
push
jle
outsb
pop
lods
popf
and
outsb
push
and
jo
pop
sub
mov
jnp
add
add
xchg
push
push
cmp
pop
pop
add
jae
pop
jl
pushf
cmp
sbb
push
outsb
adc
add
addl
gs
fidivrs
daa
ss
inc
mov
rcrl
jb
jo
and
jecxz
and
shll
cli
dec
outsl
add
mov
add
ja
push
cmp
cwtl
and
es
jne
ret
fldl
out
in
daa
push
mov
testl
jg
inc
and
jns
in
addr16
mov
lahf
movsb
mov
xchg
xchg
jno
mov
shl
pop
cltd
int
mov
push
sbb
jno
mov
inc
cmp
or
aas
sub
ss
pop
add
dec
std
jecxz
cli
negb
push
inc
pop
fnstcw
ret
and
out
sub
push
sahf
cmpb
cmp
dec
sub
mov
lods
loopne
xchg
shrl
add
mov
call
or
sbb
mov
inc
icebp
lcall
or
dec
cmp
ja
ret
enter
insl
fdivs
pop
icebp
sub
bnd
das
push
push
incl
ret
cwtl
aaa
pushf
inc
rclb
pop
xlat
lcallw
fiaddl
lock
vmread
push
rolb
mov
push
movsb
and
push
je
das
lods
xchg
sbb
enter
inc
cmp
imul
fcomps
andb
lcall
ret
jo
push
mov
mov
mov
jmp
fidivs
jnp
call
push
jb
jl
pop
pop
dec
mov
daa
sub
lahf
enter
sbbl
and
sub
sbb
adc
in
sbbb
add
lahf
cmovne
sbb
repz
cs
xchg
lods
leave
das
out
push
push
sbb
adc
dec
mov
int3
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
sbb
sbb
out
stos
push
mov
adc
int
adc
inc
xchg
sbb
roll
cmovs
loop
shlb
push
sahf
jo
scas
aas
or
rcll
aam
hlt
mov
arpl
imul
pop
out
and
dec
lret
pop
jno
outsb
adc
iret
insb
push
or
daa
das
std
jno
add
pop
pop
cli
cli
daa
or
xchg
cmp
jae
sub
aas
and
dec
inc
adc
jae
pop
add
repz
testl
test
push
scas
lods
negb
push
stc
lahf
inc
fdivl
and
mov
js
lea
mov
push
lds
pushf
pop
sub
and
adc
imul
sahf
sub
pop
xchg
insl
lret
adc
roll
sub
loop
data16
and
jae,pt
jmp
and
jge
pop
mov
add
mov
divl
fdivl
sub
and
dec
or
pop
and
push
dec
adc
dec
sti
jmp
dec
mov
mov
inc
mov
sbb
pop
push
jns
aam
adc
sbbl
ljmp
shlb
xchg
dec
jne
mov
adc
xchg
jle
mov
inc
jns
jmp
out
sbb
es
icebp
xchg
loope
mov
jle
std
aaa
repz
repz
pop
pop
cmp
nop
jae
test
ja
xor
repz
popf
std
xlat
cvtpi2ps
mov
xchg
stc
or
cld
adc
xchg
icebp
or
mov
lock
into
and
movsb
lea
sti
out
sti
cmc
jnp
cmc
jg
mov
jmp
add
add
adc
mov
mov
adc
sub
jne
fcoms
ret
and
push
adc
aad
fisttps
xchg
sub
repz
dec
push
stos
ds
push
pop
and
fcoms
mov
aad
adc
jb
scas
mov
inc
fs
pop
add
popa
pop
test
jb
mov
hlt
movsl
sub
roll
jl
fsts
incl
xchg
rcrb
cmp
mov
jmp
ja
cmc
push
mov
mov
les
sbb
push
bound
imul
jnp
xor
adc
int
lock
lods
mov
ret
add
clc
jl
jge
bound
out
mov
adc
enter
call
lcall
iret
scas
cmp
mov
xor
push
mov
mov
inc
or
jae
mov
scas
xor
mov
rolb
sbb
ljmp
adc
xor
jp
inc
jmp
pop
fcos
adcb
cmpsl
mov
lods
dec
sub
sbb
jg
and
repz
ret
test
outsb
mov
mov
clc
stos
sub
push
jge
jl
push
adc
imul
shrb
enter
icebp
adc
mov
loop
call
cmp
push
je
fldcw
cmp
dec
or
mov
dec
out
ljmp
cmp
shrb
sahf
fldenv
mov
loope
mov
ja
imul
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
jmp
adc
jmp
repnz
ret
push
imul
adc
adc
out
xor
repnz
ss
ds
les
xchg
mov
jecxz
mov
in
ret
mov
inc
adc
nop
dec
mov
lods
mov
lea
mov
sub
cmp
imul
insb
jmp
cmp
adc
movsl
jecxz
jle
mov
or
aad
lock
push
into
and
leave
xchg
jbe
push
push
ffree
gs
aad
clc
adc
push
popa
mov
and
and
xchg
pushf
dec
dec
mov
xor
roll
xchg
dec
pop
inc
outsl
cld
jne
inc
pop
or
shll
mov
lahf
dec
mov
nop
jne
rolb
jl
and
xchg
inc
pop
inc
add
scas
cmp
jbe
xorb
movsl
inc
xor
in
pop
xlat
mov
cltd
faddl
out
fldpi
pop
mov
xor
aam
ja
stc
stos
gs
dec
les
push
fstps
pusha
mov
inc
out
stos
nop
inc
lret
inc
jns
push
pop
xchg
push
xchg
outsl
jnp
fisubrl
es
lea
push
sub
inc
pusha
icebp
adc
nop
or
jmp
xchg
or
xchg
ja
lods
push
cmp
add
mov
rclb
cmc
mov
xor
lret
mov
mov
sbb
push
fcoml
adc
lods
dec
inc
sbb
lods
aad
mov
or
inc
cltd
fcom
shll
icebp
fimuls
jle
dec
sbb
lds
xchg
push
popf
popa
lods
sub
add
test
fbld
and
inc
mov
cmp
movsl
je
lret
inc
ret
mov
or
bound
inc
sbb
inc
jbe
das
jmp
xchg
and
fimuls
fs
int3
pop
mov
mov
and
iret
outsl
cli
mov
push
jns
jnp
and
das
stos
fdivrl
into
dec
js
xor
xor
bound
and
loope
lods
sarb
repz
cmpsl
jmp
cwtl
xchg
jl
cmp
inc
mov
stos
push
sbb
dec
shl
sbb
jbe
aam
arpl
push
arpl
loopne
xchg
sub
mov
jl
shlb
popa
test
ljmp
cmpsl
mov
fstps
daa
shl
mov
lahf
cli
adc
push
cmp
jb
stc
out
mov
nop
into
dec
cmp
xor
xor
xlat
push
push
sub
inc
mov
jno
hlt
std
test
popa
orl
mov
add
adc
and
mov
mov
or
enter
in
pushf
inc
dec
movsb
pop
xor
jns
xchg
sbb
pop
adc
icebp
lcall
mov
out
leave
xchg
push
cmp
wbinvd
mov
sbb
ss
add
mov
lods
fldt
daa
push
loop
mov
test
movsb
mov
cmp
mov
hlt
sbb
lret
outsb
fisttpl
pop
mov
and
mov
xchg
jne
push
cld
or
xlat
pushf
xor
or
iret
push
ror
adc
sbb
addr16
rolb
ljmp
idiv
add
sbb
xor
cmp
stc
xor
xor
xor
mov
mov
jmp
mov
jmp
or
jge
pop
push
dec
cltd
cmc
leave
lcall
xchg
adc
int
adc
sub
ret
push
mov
bound
inc
pop
lret
repnz
in
jnp
mov
push
nop
enter
cltd
cmp
pop
jg
and
dec
pop
in
inc
cmp
movsb
xchg
cmp
pop
mov
repz
push
scas
sarb
popf
jge
ret
fisubrs
xchg
and
ret
mov
mov
and
xchg
enter
insb
insb
lock
outsl
cmp
jb
mov
push
xor
mulb
xchg
jl
inc
mov
jbe
movsb
or
push
dec
lods
jns
jno
adc
fbstp
mov
outsl
push
scas
jb
mov
mov
cmp
ljmp
ret
clc
sbb
cmp
in
xchg
lea
pop
push
and
test
pop
mov
mov
and
nop
pop
enter
and
scas
sub
dec
sub
mov
orb
enter
es
sbb
mov
adc
imul
inc
cmp
test
push
pop
cld
jmp
data16
sbbl
dec
add
out
add
or
push
dec
mov
pop
xchg
mov
pop
adc
jl
xor
jnp
or
aas
cmpsb
jns
idivb
stos
decb
je
out
cmpsb
sub
into
add
fwait
jmp
clc
lret
out
data16
and
add
push
and
pop
lahf
adc
dec
adc
add
out
cmp
pop
cmp
jl
dec
mov
cmp
scas
and
and
cmc
adc
in
dec
jne
sbb
add
sbb
and
dec
cmp
add
test
dec
pop
inc
mov
popa
mov
out
imul
pop
aaa
hlt
js
sub
dec
adc
dec
fstpl
in
xchg
and
rclb
or
out
lock
push
sahf
adc
fidivs
xor
xor
xchg
fwait
mov
dec
xor
imul
test
ret
lret
movsl
pushf
je
or
jg
in
dec
js
fcmove
mov
pop
inc
sbb
std
xor
enter
outsb
andb
dec
call
subb
leave
enter
shl
out
or
or
mov
addl
out
dec
jno
cwtl
mov
mov
aam
adcb
cwtl
push
cli
or
aaa
dec
in
push
scas
dec
and
mov
ss
dec
or
push
cs
call
lods
add
push
sub
cli
pop
mov
std
cli
xor
stos
mov
repz
sbb
lods
outsl
sub
xor
and
fcoms
adc
aad
mov
cmp
in
rolb
mov
xor
loop
sub
jnp
lea
arpl
in
mov
push
cmp
dec
adc
push
lods
movsb
fildl
xlat
fildl
mov
mov
arpl
rep
mov
adc
dec
cltd
jae
mov
mov
lods
arpl
js
fwait
call
fs
pop
lahf
rcl
test
test
mov
les
mov
out
push
sbb
arpl
dec
stos
popf
and
loopne
xchg
add
sahf
in
mov
mov
lret
cmp
out
and
inc
jmp
cld
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
jmp
stc
sub
xor
mov
adc
adc
adc
mov
mov
jb
jl
pop
xchg
ljmp
sahf
pop
mov
push
sbb
sbb
in
sub
dec
mov
mov
inc
aad
inc
scas
enter
xchg
movb
loopne
imul
in
and
js
popa
adc
cli
jl
cmp
sbb
into
pop
mov
xchg
push
and
cmp
pop
xchg
sub
xor
dec
xchg
push
cli
cltd
or
or
mov
push
out
jno
add
fbld
jne
shrb
xor
xor
iret
dec
xchg
pusha
mov
je
popf
cmpsb
gs
sbb
push
test
insb
call
rorb
cmpsl
mov
pop
pusha
mov
sbb
sub
lahf
lcall
les
xchg
imul
les
iret
mov
in
std
adc
sbb
jecxz
lods
sbb
push
and
mov
fistl
repz
rcll
das
ja
shlb
aad
cwtl
inc
mov
dec
pop
movsl
addb
in
sbb
mov
fdivs
fcmovb
and
pop
jle,pn
mov
mov
sbb
rolb
inc
mov
mov
clc
xchg
js
inc
hlt
sbb
das
push
push
push
test
jnp
xchg
in
jecxz
pop
addr16
mov
mov
fstl
pushf
add
imul
imul
mov
push
stc
pop
or
enter
jo
pop
jns
fwait
hlt
daa
arpl
cmp
sti
lock
mov
out
aad
aad
push
jg
sahf
frstor
push
xchg
jb
aaa
pop
xchg
inc
mov
mov
adc
add
or
out
adc
shrl
jl
out
aas
dec
rorb
loopne
pop
jo
xor
out
sahf
jae
push
mov
jns
xchg
add
xchg
inc
andl
subb
fists
inc
aam
pmaddwd
imul
xchg
xlat
jo
mov
test
cs
addr16
dec
lock
cmp
xorl
divb
jge
inc
fwait
js
mov
or
jne
sti
test
dec
cmp
pop
fldcw
outsl
das
adc
icebp
cli
jmp
imul
adc
scas
xor
xor
xchg
mov
pop
mov
dec
jno
clc
pop
sub
sbbl
pop
mov
test
or
js
dec
dec
jp
fidivl
lods
int3
adc
xor
xor
mov
enter
and
and
js
ficoml
push
fwait
sbb
sbbb
cmpsl
mov
xor
ret
jp,pn
in
jg
push
sbb
pop
xor
xchg
les
adc
ret
mov
iret
imul
push
pop
mov
inc
jmp
or
or
or
ds
lret
repnz
fwait
cltd
aaa
push
dec
xchg
repnz
movsb
popf
jmp
insl
jmp
pop
jp
mov
rol
ror
pop
jae
mov
xor
addl
repnz
push
loopne
lahf
inc
pop
repnz
dec
sbb
xchg
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
jmp
dec
popf
shll
pop
das
popf
ffreep
mov
xor
adc
int
adc
jo
dec
xor
xor
jl
dec
pusha
xor
add
mov
pop
xor
mov
lahf
mov
in
gs
fisubl
lahf
cmp
xor
cltd
cmp
jne
ror
adc
push
jb
dec
dec
scas
push
notl
test
and
mov
jae
and
push
add
sub
add
mov
push
adc
cmc
mov
fidivs
test
push
lods
add
stos
mov
sub
pushf
xchg
mov
mov
or
ljmp
add
mov
cmpsb
push
mov
mov
into
inc
inc
cmp
repz
adc
push
xchg
pop
testl
cli
jns
xlat
and
bound
jp
ljmp
in
jae
cmp
bound
in
cli
pop
ret
insb
mov
aas
insb
jl
pusha
cmp
andb
outsl
lea
dec
sub
ja
xchg
cmp
xchg
or
in
cltd
cs
or
jmp
push
mov
pop
loop
or
jl
imul
and
and
out
stos
adc
std
shrb
cmp
loope
xlat
adc
jge
lods
je
dec
dec
jno
sub
dec
pop
sbb
push
push
das
roll
movsl
lods
cs
dec
aam
add
stc
mov
xchg
sbb
xchg
in
jecxz
jae
aam
and
lds
and
cmpsb
dec
xchg
mov
aad
push
dec
in
xorl
push
jns
sbb
lahf
dec
mov
sub
imul
sbb
sbb
inc
out
push
ss
pop
cmpsb
data16
gs
mov
mov
mov
sub
cmpsl
roll
xor
mul
shrb
test
pop
out
movsb
fcmovnu
pop
xor
push
imul
inc
xchg
shl
jp
jno
popf
dec
lods
mov
aas
lock
divb
mov
dec
scas
scas
fcmove
mov
inc
jecxz
push
repz
adc
inc
pop
xchg
sbb
sub
fisubl
sbb
clc
int
sbb
mov
sbb
dec
jp
cltd
pextrw
pop
sbb
sarl
sub
add
push
test
dec
gs
pop
mov
jg
xchg
cwtl
bound
ret
cmp
cli
std
in
add
pop
stc
push
fidivrl
sbb
arpl
xor
sub
push
out
add
adc
add
pop
cmp
jp
pop
or
xchg
cli
js
sbb
xchg
or
mov
xchg
imul
es
int3
stc
aaa
or
pop
mov
gs
add
add
or
out
mov
jmp
dec
lods
mov
icebp
out
fildl
push
dec
mov
pop
rcrl
mov
push
mov
mov
lret
add
enter
insb
jno
add
mov
ret
xchg
inc
inc
fidivrs
fistl
pushl
push
dec
cmc
scas
mov
scas
jb
clc
sbb
mov
lods
xorl
cwtl
test
notb
in
in
rorl
fldenv
test
in
and
je
fwait
inc
ds
adc
xchg
fldz
sbb
push
or
push
mov
adc
or
movsb
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
imul
imul
arpl
adc
int
adc
sbb
std
inc
or
das
loop
mov
add
out
fldcw
dec
pop
push
inc
pushf
xor
sahf
fsubl
pop
imulb
arpl
sbb
addr16
mov
push
jecxz
pop
out
or
cs
dec
mov
mov
or
cmp
mov
jbe
mov
insl
psubd
test
pop
pop
out
xor
cmp
shl
in
fldcw
inc
jge
das
jp
into
aam
cmpsl
dec
jns
stc
aaa
jl
add
mov
ljmp
xor
je
sbb
sub
inc
ret
or
push
dec
jl
cmp
jle
pushf
lds
sahf
mov
cmp
push
in
xlat
mov
dec
int
push
pop
movsb
mov
inc
jle
sub
aad
and
repz
addr16
sub
and
mov
mov
mov
aaa
rcll
xchg
fstl
incl
icebp
push
mov
jge
test
push
lcall
add
jnp
xchg
psrld
or
scas
push
shlb
jo
add
into
pop
aaa
das
xor
icebp
cmc
lret
dec
pop
adc
popa
or
mov
inc
xchg
sbb
in
test
sub
mov
sti
mov
inc
and
cmp
popa
jmp
aam
imul
jmp
pop
es
aaa
mov
mov
fstpt
dec
out
push
adc
shrl
clc
addr16
aaa
fsubs
xchg
ss
clc
test
rol
fdivr
rcr
je
pop
mov
dec
out
in
push
lea
int
push
cltd
rcrb
jne
adc
adc
iret
sbb
scas
leave
int
jge
xor
das
pop
add
popa
js
add
or
ficoml
scas
mov
cld
or
icebp
mov
lea
xchg
fsubrp
pop
popa
xor
fnstsw
inc
jne
idivb
insb
dec
mov
or
les
pop
mov
inc
leave
idivl
jae
adc
dec
pop
push
pop
mov
ja
jb
cmpsb
outsb
fcmovne
dec
nop
testb
clc
movsb
add
lret
sbb
mov
and
imul
fisttpl
or
mov
push
into
pop
inc
xor
enter
lds
das
dec
loopne
mov
jae
dec
mov
dec
in
hlt
mov
xor
and
popf
push
add
icebp
adc
push
pop
cltd
movsl
pop
jp
cld
pop
mov
cltd
or
cmp
dec
xchg
ss
in
lods
pop
inc
cmp
int
loop
cmc
lods
sbb
lret
movsb
push
push
test
aam
mov
dec
cmp
aas
mov
xchg
xor
movsl
add
shlb
test
sbb
push
lahf
sahf
or
fsub
je
jnp
sub
push
rclb
mov
insl
inc
lret
xor
jp
mov
dec
inc
xor
xchg
rcl
sbb
cmpsl
xchg
inc
xlat
popa
loop
xchg
mov
aaa
pushf
cmp
mov
lahf
test
pop
jo
loop
jbe
mov
test
sub
outsl
cmpl
add
popf
rsqrtps
das
mov
fsubl
push
in
sub
fisubrl
ja
push
add
pushl
push
push
call
mov
jmp
xor
sbb
stos
movsb
adc
adc
int
adc
sbb
repnz
add
ret
push
adc
push
fucomip
gs
xor
dec
popa
sub
or
ja
sbb
bound
shlb
mov
add
loopne
inc
fsubl
enter
mov
fbld
cmp
cld
mov
in
jecxz
fs
xor
outsl
sbb
mov
xchg
idivl
in
pushf
and
sahf
inc
in
lret
pop
jge
das
pop
les
or
cltd
aad
arpl
or
mov
les
les
dec
sub
push
loop
aas
jns
adc
add
jbe
push
imul
test
clc
imul
adc
call
addr16
jl
inc
in
icebp
inc
mov
xchg
sbbb
adc
adc
lahf
cmp
cmpb
sub
mov
outsb
pop
mov
add
lea
pop
mov
xor
sub
insb
aaa
nop
xlat
ljmp
cltd
lcall
adc
mov
movsl
or
cmp
lret
pop
aaa
dec
sbb
jbe
push
sti
jnp
shr
imul
imul
or
sub
adcb
jns
dec
pop
push
int
call
js
mov
cmp
fidivs
xchg
mov
insl
xchg
mov
add
jle
rorl
icebp
cmp
pop
push
fists
test
mov
adc
lea
aad
pushf
roll
stc
test
inc
aaa
sub
jb
xchg
fimuls
lods
iret
loope
sbb
sub
arpl
movsl
pop
mov
mov
das
or
loop
idivb
xor
dec
and
rcrl
pop
mov
push
sarb
jns
lcall
out
adc
dec
and
mov
mov
push
subb
clc
sbbb
int3
ret
mov
sbbb
iret
mov
insb
pop
test
lcall
mov
sbb
inc
shlb
and
fnstsw
std
nop
test
xor
jae
pop
pop
test
mov
enter
sbb
adc
in
sub
xchg
loopne
and
shlb
iret
in
sbb
inc
daa
cwtl
je
and
xchg
cwtl
and
cmp
repnz
sub
jns
sub
xor
daa
sub
pop
and
adc
es
stos
stos
out
int
mov
lcall
dec
repz
jmp
mov
xchg
add
sti
sbb
and
divl
push
xor
add
mov
imul
cmpsl
scas
sbb
dec
cmp
pop
pop
outsb
inc
xor
mov
xchg
cwtl
xor
cmp
xor
or
mov
scas
xor
sbb
roll
xchg
call
mov
aaa
push
mov
lret
lahf
add
add
add
dec
sbb
jmp
iret
or
fcmovnu
xchg
fcompp
shll
and
adc
cmp
lock
pop
popl
inc
cwtl
mov
andl
shrd
jmp
ja
jle
sub
xchg
mov
mov
jb
adc
adc
adc
sti
pop
sbb
movsb
mov
in
rclb
and
ret
and
xchg
pop
imul
lret
repnz
xlat
int
jle
test
jmp
es
stos
shl
or
push
cld
scas
xor
xor
les
in
xor
mov
mov
fdivrp
lods
shrl
jo
adc
mov
mov
mov
scas
sahf
aaa
cmpsb
in
ficompl
js
mov
aaa
enter
inc
xor
divl
push
ljmp
clc
mov
lods
lret
cld
leave
jg
cmp
stos
push
jl
bswap
cmp
mov
pop
divb
mov
dec
mov
out
pop
xor
loop
jne
push
hlt
popa
inc
xor
xor
fdivrp
xor
xlat
or
and
jb
mov
xchg
dec
stos
cmp
cld
dec
or
popa
push
fbstp
lds
in
cmp
cld
jp
xor
xchg
insb
frstor
lods
jl
sub
scas
and
mov
and
lds
sahf
inc
jns
push
sub
movsl
dec
shlb
pop
xor
pop
cltd
outsl
dec
inc
fimull
xchg
std
les
or
mov
jns
adc
sahf
ss
jno
test
push
mulb
addb
mov
ret
adc
pop
icebp
mov
fwait
adc
ljmp
test
fwait
cli
in
stos
or
cs
fnstcw
add
nop
or
cmpl
pop
add
in
lcall
mov
sub
mov
mov
pop
mov
push
adc
stc
loope
xlat
pop
in
xchg
cmpl
je
mov
push
sbb
into
enter
out
xchg
loopne
es
mov
cmpsl
aam
inc
add
dec
shlb
popf
rcrl
test
lahf
imul
jo
rcr
arpl
fwait
xor
test
out
shl
xchg
test
lcall
sbb
mov
cs
out
pop
out
push
mov
sbb
xchg
lret
add
and
mov
ficompl
sbbb
loope
sub
dec
scas
in
mov
push
mov
sub
sub
rorb
cmc
xor
push
dec
jge
outsl
mov
cld
or
pop
dec
sbb
outsl
push
jp
xchg
cli
push
cmp
and
idivl
mov
lahf
sub
dec
dec
and
xor
aad
or
or
xor
mov
les
sub
inc
adc
gs
mov
mov
popf
ja
adc
add
not
sbb
jle
scas
jge
movl
das
inc
clc
in
shll
fcoms
cmpsb
mov
dec
cmc
fwait
in
cmc
cmp
insb
jg
inc
xchg
pop
rcrb
fcoml
xchg
mov
push
sub
mov
mov
into
mov
mov
and
addr16
icebp
push
insb
or
push
daa
jge
dec
ja
mov
pop
cli
mov
je
mov
push
and
inc
mov
lods
lret
adc
scas
mov
jb
test
clc
test
fwait
push
pop
fistpll
push
mov
jmp
xor
push
xor
mov
mov
mov
push
jmp
bnd
test
mov
xchg
js
push
adc
adc
adc
outsb
sub
iret
scas
sub
sub
mov
call
dec
dec
push
push
jno
xchg
push
scas
xchg
or
xor
pop
loop
mov
xor
mov
insl
lock
shr
aad
lret
mov
inc
mov
sbb
fs
jl
and
int3
decl
inc
clc
adcb
jecxz
pop
mov
aas
cwtl
pop
sub
icebp
jle
xor
and
jmp
sbb
sbb
mulb
push
inc
test
inc
mov
cvttps2pi
sub
sbb
cmc
cmp
icebp
in
fcompl
mov
inc
fwait
aas
icebp
mov
jns
mov
shll
push
add
int3
lds
pop
iret
pop
rcll
gs
clc
int
xchg
and
out
jo
adc
push
pop
mov
fcompl
inc
sub
loopne
mov
inc
cmp
popa
in
in
xor
das
outsl
int
js
shll
pop
loop
gs
cmp
fs
mov
sbb
ficoml
pop
insb
and
jae
or
rolb
lcall
loop
aad
push
mov
sbbb
mov
sub
rcll
cld
and
mov
push
stos
jl
adc
gs
int3
jno
add
rcr
shll
mov
clc
mov
inc
outsl
mov
add
jle
inc
push
pop
jmp
rclb
mov
in
dec
or
imul
xchg
mov
stc
inc
sbb
jb
test
xor
jge
mov
mov
dec
adc
cli
enter
dec
out
out
sub
push
add
mov
xchg
adc
push
je
mov
sahf
in
and
cmp
mov
xor
adc
jbe
mov
fisubl
shll
cmp
into
fcoms
or
cltd
push
scas
ss
int
and
fildll
sub
sbb
mov
ss
lea
xchg
jg
test
add
sti
xchg
mov
pop
mov
xorb
ja
sub
icebp
inc
cmp
ss
mov
push
inc
in
sbb
ret
or
sbb
fadds
dec
lret
frstor
add
or
je
mov
mov
jmp
and
ds
dec
in
mov
stos
lods
int3
pop
lahf
pushf
enter
jge
addb
xor
fxam
test
int
aas
popa
testl
cmp
cmp
imul
test
insl
fistl
xchg
xlat
lcall
jg
xchg
mov
push
outsl
xor
mov
mov
sbb
lea
test
push
add
adc
cmp
data16
push
inc
es
push
sbb
ret
mov
inc
in
xchg
xchg
sbb
test
pop
sub
pop
inc
or
or
jns
xor
fldcw
inc
mov
push
daa
pop
jnp
mov
daa
push
xchg
rorb
jg
xchg
cmp
jnp
negl
push
insl
iret
aas
xor
lds
subb
sarb
push
ss
fimull
jne
xchg
push
cs
and
adc
je
add
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
sbbl
jmp
test
sub
sub
xor
cmpb
adc
adc
push
loopne
mov
in
jle
jbe
lahf
or
xchg
mov
shr
scas
push
and
mov
pop
test
test
jg,pt
push
cli
push
mov
jmp
repnz
fwait
cli
pushf
xchg
imul
test
xor
testl
loope
sub
or
xchg
sti
pop
icebp
add
lock
push
xor
ret
or
sbb
sub
mov
stc
mov
out
in
insb
push
repnz
imulb
aaa
mov
outsl
pop
sbb
cmp
jae
rcrl
cltd
pop
outsl
mov
loopne
add
xor
adc
loope
out
loope
addr16
and
mov
jb
mov
adc
mov
cwtl
xchg
push
push
add
jb
and
addr16
pop
js
sub
pop
int
lret
jecxz
jecxz
cmpsl
test
iret
cld
lock
jno
loopne
pop
inc
in
mov
pop
mov
jo
shll
les
sub
mov
cmp
push
stos
nop
inc
cmp
dec
pushf
pop
xor
lret
ret
dec
push
mov
test
fstps
iret
adc
and
into
scas
xchg
push
pop
into
jnp
cltd
ror
sarl
rol
pop
out
or
pop
dec
ds
xchg
jae
jae
adc
pop
sub
pop
push
fdivr
jle,pt
daa
mov
pop
xchg
jl
stos
into
rorb
push
xor
jae
jg
das
mov
jo
adc
icebp
mov
sub
int3
adc
jecxz
jle
mov
pop
push
arpl
sub
pop
data16
sub
jnp
jecxz
call
sub
push
loope
pop
inc
leave
lcall
dec
insb
lea
mov
scas
mov
dec
xor
or
mov
in
or
dec
test
mov
mov
fstpl
loope
lret
cmp
shll
cmp
sub
xor
sahf
mov
or
push
and
xor
cmp
test
shl
notl
adc
and
jl
mov
adc
mov
shll
push
push
lahf
scas
push
mov
cld
gs
sub
sbb
outsb
adc
pop
imul
pop
and
ljmp
loope
or
call
adc
fiaddl
leave
mov
dec
pop
fld
mov
movsl
and
sahf
and
out
xchg
lods
in
mov
lahf
sub
lret
jp
je
inc
roll
push
mov
pop
or
cmpsb
aad
dec
into
lcall
mov
gs
test
xchg
mov
cltd
pop
add
in
xchg
outsb
call
mov
jp
push
mov
cmp
mov
fbstp
imul
and
int3
div
arpl
mov
push
es
pop
pushf
je
adc
cmp
xchg
subb
aaa
pop
adc
adc
mov
out
add
jae
pop
fs
lea
adc
xchg
shll
xor
xor
fs
pop
out
fs
cmp
push
fbld
test
shl
xor
lock
outsb
add
je
jecxz
aas
xchg
mov
jnp
dec
adcb
and
fmuls
aas
nop
adc
ret
pusha
enter
mov
push
lcall
call
and
popl
cltd
mov
pop
aaa
mov
push
fldl
cmp
lahf
ret
daa
pop
push
add
int
add
shr
ret
movzwl
sub
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
add
movl
or
mov
mov
cmpl
mov
mov
mov
movl
jmp
movl
movl
ja
pushl
push
push
pushl
push
pushl
pushl
call
xor
adc
andl
adc
sub
add
addl
movl
cmpl
mov
mov
movl
jmp
movl
mov
jne
call
or
movzbl
sub
mov
and
or
mov
or
xor
mov
or
movl
adc
movl
sub
movl
push
movl
xorl
movl
and
push
sub
movl
sbb
mov
andl
mov
push
push
addl
push
call
xor
mov
mov
movl
push
movl
or
adcl
push
or
xor
xor
push
andl
push
call
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
not
je
push
pushl
push
pushl
push
pushl
pushl
pushl
push
pushl
push
push
pushl
call
orl
notl
adc
mov
sbb
add
and
inc
mov
addl
push
orl
push
addl
push
push
decl
call
cmpl
movl
mov
mov
jmp
movl
jne
pushl
push
call
add
add
adc
mov
xor
add
sub
or
mov
and
mov
mov
or
cmpl
movzwl
movl
movl
jmp
movl
movl
jae
pushl
call
adc
xor
xor
adc
orl
add
mov
add
mov
subl
movl
mov
xor
movl
mov
xor
add
sub
and
movl
adcl
movl
jmp
fcmovne
mov
test
mov
push
pop
adc
xor
adc
adc
or
jmp
outsb
out
push
cmpl
sbb
adc
mov
xor
mov
push
fidivl
dec
test
or
arpl
je
mov
mov
cli
and
lds
inc
jae
xor
dec
jecxz
ror
faddl
aam
in
xchg
lds
sub
fcomps
cmc
or
inc
notl
cs
mov
mov
cmp
cltd
cmp
mov
pop
xchg
jne
rcr
jns
xchg
mov
cs
jge
stos
add
ss
frstor
cli
lock
mov
jp
adc
outsl
subb
rorl
movsb
test
adc
mov
clc
mov
lods
add
dec
xchg
in
xor
cmp
int
mov
xlat
jg
xchg
cmpsb
xor
mov
adc
daa
clc
mov
mov
sub
outsb
pop
pop
xor
cmp
in
call
fnstsw
cltd
jmp
fwait
imul
fld
jecxz
push
or
mov
int
cwtl
fists
mov
inc
cwtl
and
cmp
imul
mov
pop
test
sub
test
jle
movsb
out
ret
insb
and
icebp
pop
adc
xchg
add
add
jmp
insb
sub
imul
aad
fisttps
xlat
in
cmp
or
dec
scas
xor
xchg
out
add
scas
xor
insb
pop
mov
push
popf
outsl
pop
in
or
lret
mov
test
inc
cmpsl
sbb
sbb
aaa
mov
push
nop
jp
movsl
dec
jle
push
mov
jbe
sbb
sahf
movsb
fistps
nop
aas
dec
inc
aaa
pusha
icebp
scas
xchg
gs
mov
test
out
jl
rclb
push
leave
cmp
test
xor
sbb
mov
xchg
cli
ret
fistps
xor
enter
roll
int
cmp
lods
sarb
sbb
fcoml
lcall
lret
int
pusha
jmp
gs
clc
or
aam
mov
loope
scas
es
xchg
cmp
mov
push
out
aaa
nop
lahf
je
add
fisttps
sbb
lods
popa
sub
pop
mov
cmp
fcomp
inc
cmp
dec
fcmovbe
cld
lods
cmp
add
test
loopne
bound
cmp
jle
cmpsl
or
movsl
mov
les
out
cli
push
pcmpeqw
push
jne
shlb
push
adc
fs
sbb
repnz
pop
repz
inc
pop
mull
je
int3
ret
fisubrs
add
jg
push
gs
movsl
pop
adc
sbb
inc
mov
int
pop
bound
mov
popf
and
movsl
inc
testb
setb
sbbl
dec
pushf
sbb
cld
stc
inc
pop
mov
xchg
iret
and
add
stos
add
ss
add
lock
lock
pop
sbb
das
sbb
cld
movsl
sbb
mov
sbb
push
dec
jae
sub
dec
sbbl
adc
rcr
xor
xchg
scas
aas
mov
jmp
jmp
inc
add
adc
std
int3
fsub
mov
mov
xor
negb
adc
test
movsb
les
pop
ss
xchg
jle
sub
xchg
sub
push
inc
xorl
sub
loopne
iret
mov
push
daa
filds
jle
rol
jp
and
mov
cmc
jecxz
ss
xchg
jae
xchg
or
inc
fadds
add
add
not
mov
mov
movl
jmp
movl
mov
jg
pushl
pushl
call
add
orl
sub
adc
movzwl
add
mov
mov
sbb
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
jmp
in
mov
sbb
sub
jle
sbb
js
push
adc
xor
adc
cmp
and
out
mov
sub
and
push
jle
push
pop
ffree
out
outsb
outsb
pop
xchg
test
subb
je
inc
ljmp
outsl
push
jp
pop
insl
pop
gs
pop
aaa
scas
fisttpl
pop
fimull
or
lods
or
xchg
in
leave
mov
shlb
xchg
insb
sub
cmp
xor
lahf
mov
pop
pop
fimuls
pusha
inc
cmp
test
pop
and
dec
insb
push
das
icebp
in
mov
pop
mov
aas
mov
into
pop
mov
sub
das
call
or
xor
pushf
das
inc
bound
lock
out
pop
mov
pop
aad
ror
inc
or
in
ret
aam
mov
or
rol
and
cwtl
push
movsl
or
movsb
pop
lahf
sub
xor
sub
adc
je
mov
pop
addl
out
xor
push
rcrl
inc
fidivs
push
and
popl
ljmp
ds
stos
scas
aaa
mov
cmpsb
cmpsl
mov
clc
pop
inc
pop
ja
je
cmp
mov
subl
add
das
lds
mov
add
jp
jl
mov
hlt
xchg
mov
mov
leave
sti
cmp
xchg
adc
test
xor
pop
dec
ja
clc
test
xor
cmp
cli
out
and
pop
andl
adc
insb
cltd
adc
push
out
jp
jg
xor
dec
or
mov
cmc
jo
push
mov
inc
mov
fcoms
out
xor
jge
push
and
jmp
cli
andb
cmpsb
inc
lret
test
in
pop
add
xor
dec
pop
shlb
int3
fisttpl
sbb
push
mov
and
and
cmp
mov
ret
sbb
cwtl
add
gs
or
xchg
data16
cmp
xchg
lods
sti
mov
jno
push
mov
inc
dec
jge
rolb
xor
mov
ja
pop
adc
jg
push
pop
mov
mov
adc
jmp
push
mov
cmpsb
sahf
jg
cmp
outsl
fsts
arpl
inc
mov
aad
icebp
popa
inc
negl
or
cmc
sub
lods
inc
outsl
lods
adc
adc
inc
pop
jmp
push
mov
popf
mov
dec
jmp
mov
or
fsubrs
pop
mov
mov
inc
int
rcrl
adc
mov
repz
jne
daa
or
xchg
dec
mov
popa
mov
pushf
or
push
lret
stos
jle
ret
hlt
insb
pop
daa
or
cld
pusha
cmp
push
out
lods
xchg
jns
das
push
aam
int3
insl
or
mov
sti
adc
xor
lock
jae
in
das
push
jns
cmp
jl
les
sbb
mov
adc
enter
les
aad
inc
mov
lods
xor
fcmovnu
lret
push
int
loopne
fs
out
jno
mulps
pop
pop
fsubs
lahf
inc
adc
mov
inc
in
lock
paddd
push
or
stos
xchg
mov
fidivrs
mov
push
out
rolb
pusha
aas
lea
in
adc
pop
dec
mov
shll
inc
scas
in
push
adc
rclb
pop
mov
and
popf
mov
jae
stc
daa
jb
movsb
imul
cmc
ds
lea
adc
fstpt
pusha
mov
js
and
ss
add
push
and
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
jmp
enter
pop
xor
push
push
fwait
mov
adc
adc
cmp
push
pop
insb
and
cs
das
leave
repz
dec
popa
adc
xchg
inc
in
cmp
cmp
mov
in
add
inc
add
in
adc
adc
and
lea
mov
xchg
mov
pop
mov
repnz
inc
dec
add
out
sbb
out
fs
jl
push
add
xchg
jns
adc
out
push
mov
xchg
aad
xchg
movsb
int
dec
xchg
xchg
mov
insl
negl
outsl
int
mov
dec
ja
aam
aas
jo
test
dec
fs
cld
in
jmp
mov
fwait
or
and
aas
fistpl
jp
test
mov
pop
jp
pushf
mov
jmp
stos
dec
mov
fists
movsl
dec
xor
dec
mov
dec
or
or
shlb
cmc
add
jge
cmpsb
dec
and
push
mov
cmp
pop
jno
nop
mov
or
div
movsl
cs
xchg
jl
mov
ljmp
fwait
test
xchg
xchg
mov
mov
dec
mov
mov
cwtl
inc
dec
scas
loopne
or
xchg
push
push
leave
add
cmp
iret
adc
add
mov
pop
data16
mov
repz
mov
inc
cmc
dec
in
in
dec
pop
jle
les
fcomi
mov
sarl
mov
cld
add
fbld
xchg
xor
push
dec
xchg
pop
adc
adc
stc
mov
or
jle
shrb
jb
xchg
in
frstor
mov
scas
jg
mov
imul
out
imul
fs
shll
push
mov
and
inc
or
dec
in
ret
cmpl
add
mov
stos
and
push
mov
xlat
inc
add
movb
test
xor
adc
movsl
mov
mov
das
lret
insb
outsl
xchg
lret
js
mov
push
xchg
fistpll
jne
popa
mov
and
cmpsl
mov
push
sarl
add
cld
xchg
fsubr
sub
sbb
mov
bound
pop
adc
cmp
cmpsl
aam
out
lock
imul
inc
int3
ds
add
les
jns
cmp
fsubr
pusha
jbe
scas
xchg
aam
dec
clc
mov
bound
scas
loope
lret
orl
nop
dec
or
mov
mov
dec
das
popf
enter
rcrb
aad
pop
cmp
fidivrl
pop
in
sahf
sbb
mov
js
push
pop
push
ret
enter
daa
push
lods
ret
fistpll
push
outsb
js
lret
fwait
jmp
scas
dec
mov
lahf
jno
or
fs
add
push
into
adc
sti
xchg
jb
daa
inc
mov
pusha
rclb
loopne
ret
cmpsb
push
shrb
jnp
pop
neg
adc
and
xchg
pop
push
inc
cmp
cmpsl
mov
inc
repz
pop
out
dec
fsubl
test
xchg
dec
out
cmp
arpl
add
jmp
iret
jle
scas
icebp
mov
xchg
sbb
sbb
cs
or
sbb
cmpsb
cmpsl
jl
insb
lret
jge
pop
fldenv
sub
fcoms
or
addr16
jp
stos
or
xor
pop
fs
test
jns
not
in
xchg
adc
push
cmp
and
adc
inc
adc
test
loop
mov
mov
mov
dec
in
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
jmp
pushl
and
push
mov
gs
adc
xor
adc
pop
lcall
enter
sbb
and
incl
mov
insb
add
leave
xchg
test
jns
cwtl
inc
mov
mov
push
xchg
adc
add
adcl
xor
and
enter
sbb
mov
xor
lahf
pop
lahf
pop
subl
cmp
mov
iret
out
xor
push
dec
jno
popf
mov
int
xor
jg
shll
fidivrs
mov
aaa
pop
inc
mov
pop
and
in
xchg
aaa
rcl
mov
jnp
lock
push
fs
fisttpl
push
icebp
cmp
adc
push
ds
and
test
dec
insl
pop
inc
sub
push
idivl
adc
mov
and
fwait
and
dec
pop
push
mov
int3
xchg
pop
das
pop
xchg
lods
lods
adc
int3
shrl
add
sbb
inc
add
out
enter
lret
in
xchg
or
and
lods
or
mov
sub
fld
ret
outsb
mov
push
mov
daa
and
std
lea
and
mov
lcall
adc
mov
pusha
add
xor
shll
insb
sbb
mov
bnd
lea
sub
daa
cs
fmull
inc
mov
sbb
xchg
xchg
cltd
dec
test
adc
movsb
or
cmpsb
sbb
fisubs
ss
xor
or
xor
cmp
xchg
and
fstl
sbb
dec
cmp
das
in
pusha
xor
push
push
xor
insl
and
test
insl
in
pop
faddp
pop
std
out
fcompl
das
adc
pop
add
mov
push
jge
sub
aam
mov
mov
loopne
test
adc
jmp
xchg
shrb
jmp
push
sarl
xchg
enter
inc
dec
inc
test
cmp
xor
clc
lahf
mov
daa
in
add
push
in
fsubs
pop
lcall
ret
ds
fstl
push
dec
test
mov
out
xchg
mov
fdivrs
lret
mov
push
adc
sub
hlt
scas
adc
rcll
scas
adc
xchg
mov
movsb
out
xor
mov
mov
inc
sub
cmp
mov
mov
int3
pop
dec
pop
jae
jg
out
jnp
lcall
add
in
enter
and
lock
xchg
pop
jg
inc
xor
lock
pop
andb
mov
xor
jecxz
hlt
out
or
into
pop
vfnmadd132ss
loop
pop
popf
xchg
cs
insl
push
aas
dec
scas
add
fcomps
in
mov
jnp
cmc
sub
inc
push
scas
stc
mov
lock
jmp
push
jl
test
jae
xchg
and
adcb
pop
call
call
adc
mov
popf
jge
add
leave
roll
add
aad
pop
push
lret
sbb
sarl
xchg
nop
jnp
mov
push
or
and
mov
sub
xchg
ret
and
mov
popa
leave
dec
icebp
adc
clc
addl
scas
jp
mov
fildll
test
lret
mov
cs
mov
cmpsb
lods
adc
mov
or
adc
mov
notl
sbbl
lret
mov
and
jo
roll
popf
cmp
inc
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
jmp
adcl
dec
in
enter
dec
mov
xor
adc
mov
icebp
adc
rorb
popa
dec
dec
sahf
jne
sbb
xor
xlat
inc
divl
add
data16
arpl
add
and
mov
bound
jns
sbbb
inc
add
xor
jp
sub
test
and
lock
lahf
pop
mov
sub
mov
mov
mov
mov
mov
sbb
frstor
mov
cli
addr16
sbb
sub
pushf
jae
mov
mov
sbb
rcrb
ja
fwait
cmp
daa
push
jno
jae
mov
sub
inc
adc
mov
jge
loope,pt
loopne
cli
loop
int
andb
xor
sub
and
shll
enter
jge
paddq
divl
jbe
js
xor
ljmp
add
inc
mov
sbb
jb
inc
lock
sub
aad
subb
adc
pop
or
mov
sti
lds
js
or
pop
stos
mov
mov
sbb
push
int3
inc
les
in
lds
xchg
inc
lods
roll
decb
aad
std
lret
push
cltd
and
movl
movsl
not
sbb
jno
xchg
ret
fstpl
push
add
and
cmpl
mov
push
loopne
in
and
icebp
ds
popa
xchg
jne
mov
push
sarl
enter
subb
xlat
dec
push
xchg
mov
inc
into
mov
jmp
mov
or
jp
repnz
in
adc
inc
pop
incb
pop
sbb
out
jmp
inc
pop
ret
das
and
mov
xlat
das
ja
xchg
push
fisubs
or
test
adc
test
enter
loopne
adc
lds
mov
outsb
push
push
sub
or
icebp
repnz
nop
cld
mov
hlt
pop
call
xor
sbb
push
call
push
cmc
sub
mov
xor
add
sub
dec
ret
into
adc
mov
jno
out
lret
cwtl
sub
insl
mov
xchg
jb
mov
sahf
add
push
and
dec
pop
ljmp
out
xchg
imul
insb
dec
xchg
xor
adc
add
divb
data16
mov
bound
cmc
fistps
sbb
mov
xor
push
mov
mov
mov
das
pop
xchg
into
std
cltd
pop
mov
nop
or
outsb
pop
repnz
cltd
mov
sarb
lds
jmp
bound
es
bound
iret
xchg
xchg
daa
push
mov
daa
inc
sub
jmp
sub
outsb
mov
pusha
xor
sti
cmpsb
aaa
jl
push
and
bsr
mov
sub
mov
and
push
in
aas
lds
xchg
lods
mov
xchg
or
push
pusha
out
in
shlb
mov
push
daa
lock
lahf
test
pop
and
pop
pushf
cmp
icebp
jns
push
push
dec
std
sarb
mov
xchg
and
in
push
and
xchg
pusha
sahf
mov
adc
mov
lods
lcall
in
sub
loopne
push
dec
and
loop
decb
mov
or
mov
add
cmp
jae
mov
jmp
js
jb
sub
cmp
mov
mov
xor
adc
adc
adc
enter
jle
aaa
push
push
in
enter
mov
int
dec
or
iret
xor
aas
fistps
fs
and
push
shll
lock
lcall
cwtl
stos
loop
xor
push
add
dec
inc
mov
jae
add
push
mov
push
xchg
inc
mov
mov
ficoml
jno
jp
mov
add
ret
dec
inc
pop
push
cltd
fisubrs
or
shlb
subb
scas
sub
das
xchg
cmp
add
stos
pop
aaa
inc
divl
mov
ret
into
pop
jns
pop
pop
or
ja,pt
mov
jb
repz
pop
cmc
xor
adc
jge
sub
add
push
mov
push
inc
cs
je
clc
addb
mov
push
jb
enterw
pop
xchg
cs
and
pushf
mov
xlat
icebp
pop
lds
or
ja
repnz
shlb
sahf
push
mov
shrb
mov
fsts
xor
iret
xor
mov
das
idiv
lea
loopne
or
and
push
pop
mov
add
mov
or
push
adc
dec
or
arpl
pop
daa
sub
pop
pop
mov
or
repz
out
lret
clc
out
outsb
lods
shl
push
mov
xor
push
pop
cmp
les
xchg
dec
and
sbb
imul
jmp
push
cmpsl
xchg
mov
dec
mov
ret
mov
lcall
mov
and
mov
lahf
xchg
adc
mov
inc
call
jecxz
pop
sub
test
movsb
xchg
out
es
in
mov
sub
pushf
jae
cltd
dec
push
inc
pop
cwtl
push
mov
sub
in
jb
xor
lods
mov
repz
pop
jmp
pop
and
mov
nop
sahf
std
sbb
sbb
imul
xor
push
rcr
xlat
push
sub
sbb
cmpsb
mov
and
sub
sbb
sbb
cmp
into
jmp
push
fwait
adc
jp
ljmp
mov
add
in
push
push
cmpsb
and
push
jg
inc
dec
dec
push
aaa
ljmp
jmp
mov
out
clc
lcall
cwtl
pop
jns
mov
clc
xor
add
ss
stc
xchg
and
or
lea
scas
mov
aas
mov
js
adc
aad
mov
mov
pop
or
mov
pushf
aaa
pop
std
xorb
cli
and
mov
mov
daa
popa
cmc
addr16
pandn
and
mov
stos
and
mov
sti
jle
fwait
add
popa
movsb
scas
xchg
insb
xchg
dec
or
inc
push
inc
popf
dec
push
mov
sbb
sbb
sub
and
cs
xchg
test
nop
add
ja
shr
cmp
sub
aam
scas
dec
cwtl
pop
lret
sbbl
call
and
cli
mov
jl
out
xchg
rcrl
repz
test
aam
pop
sbb
sbb
add
fs
mov
add
rep
and
push
out
sbb
push
adc
and
pop
lods
hlt
inc
mov
fstps
out
push
test
sub
fcomps
rcrb
sbb
push
jae
xchg
sub
push
and
cmp
adc
and
xrelease
out
out
xchg
adc
pushf
iret
pop
push
xor
or
mov
mov
mov
mov
inc
clc
or
rolb
xor
jmp
mov
popa
lcall
lods
in
jle
sub
adc
adc
adc
test
jmp
inc
lahf
sarb
push
out
xchg
inc
sub
cmp
mov
ret
add
adc
out
loope
sbb
jmp
dec
inc
lock
cs
and
repz
mov
in
push
or
inc
push
call
clc
adc
out
lods
test
mov
push
pop
mov
test
mov
pop
add
pop
arpl
push
and
inc
shlb
pop
ret
mov
jg
sub
addb
cs
and
or
xchg
mov
cld
mov
xorb
mov
mov
jl
inc
sbb
mov
fstpt
mull
push
or
dec
cmp
sahf
xor
fstpl
xor
ljmp
dec
cld
sbb
inc
in
loopne
cmpsb
inc
xor
fildll
xor
dec
cli
insb
notl
fcmovne
sub
mov
fnstenv
push
int3
mov
cmpsl
sbb
push
sbb
insl
mov
lret
popa
cmc
jb
xchg
and
lcall
push
push
clc
and
mov
aad
outsl
sub
add
shr
mov
or
sbb
das
dec
sahf
dec
jne
xchg
bndldx
xchg
mov
mov
dec
mov
cmp
inc
sub
sbb
scas
int3
sbb
mov
lock
fucomp
jnp
stos
jns
sub
ret
pop
aad
inc
fdivrl
cs
iret
xchg
call
and
incl
xchg
mov
mov
mov
sti
fnstcw
loopne
loope
and
in
in
je
cmpl
xchg
mov
outsl
push
stos
or
push
pop
jae
cmp
mov
fisubs
mov
addb
mov
jnp
popf
icebp
enter
movsl
shll
mov
loope
sub
js
lret
daa
xorl
xchg
jb
stos
mov
rcl
gs
cmp
fcoms
in
mov
push
aaa
xor
cwtl
cmp
adc
sti
lock
les
into
dec
stos
sub
or
xor
cltd
pop
fcoms
loopne
jge
in
xchg
cltd
cmp
popa
inc
mov
roll
insb
jecxz
mov
add
stc
out
insb
pop
imul
xchg
push
js
xor
out
push
ds
inc
ljmp
je
pcmpeqd
pop
mov
ffreep
adc
lret
mov
outsb
xchg
enter
push
mov
mov
jne
sub
inc
mov
in
cmc
lock
xor
dec
leave
xor
fidivs
scas
arpl
orl
cmpsl
ret
stos
test
clc
dec
pop
mov
in
in
gs
cmp
pusha
ret
mov
repz
dec
jno
inc
xor
xorl
jge
mov
shl
aad
mov
in
jnp
jnp
cmp
pop
lods
dec
es
mov
lods
imul
mov
dec
mov
push
ret
mov
push
pop
mov
jb
outsl
stc
repnz
dec
ds
jg
add
cmp
dec
xchg
pop
xchg
push
daa
inc
bound
jns
lar
xlat
mov
and
adc
stos
repnz
test
loop
in
lcall
sub
xorb
cmp
xorb
outsb
fdivrl
out
shr
in
js
or
imul
add
ljmp
fistpl
xchg
inc
fstpl
lahf
incl
mov
push
add
sahf
movsl
inc
jmp
dec
call
push
in
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
test
sbbl
pop
sbb
jle
pushw
mov
fmull
adc
xchg
adc
adc
mov
mov
pop
or
ret
pop
and
mov
sub
mov
add
sarb
test
jb
and
cs
sbb
push
push
ret
mov
jno
loope
or
out
out
lea
jae
pushf
rcrb
push
clc
inc
test
mov
mov
jbe
adcb
inc
or
iret
pop
pop
cmpsl
xor
and
lcall
mov
mov
mov
leave
adc
lea
scas
gs
inc
iret
xchg
out
or
cmp
out
lock
jle
mov
nop
push
add
cmp
loope
and
call
mov
push
fcmovnb
push
hlt
adc
iret
xor
loope
push
fimull
mov
push
sbb
jnp
sbb
or
xlat
iret
test
xchg
loop
jmp
dec
and
push
pushf
inc
pop
inc
loope
shrl
cmp
into
cmpl
and
int3
inc
pop
sbb
call
rcl
or
mov
and
or
mov
lahf
in
xchg
mov
xor
icebp
outsb
lea
mov
push
or
sti
push
xchg
enter
cmp
mov
in
add
mov
xchg
int3
jb
mov
ljmp
dec
in
add
insl
mov
dec
xlat
mov
sub
pushf
outsb
inc
cmp
jne
dec
leave
mov
cmpsb
add
mov
mulb
adc
dec
xor
mov
mov
hlt
or
mov
js
jnp
mov
in
lret
xor
fdiv
rolb
mov
inc
fsubs
push
mov
js
in
sbb
fcompl
mov
xlat
out
push
mov
hlt
mov
mov
add
repnz
dec
add
cmovp
sub
mov
xchg
jbe
cmp
inc
cld
es
add
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
jmp
xchg
add
cmp
scas
insb
addl
adc
movlps
scas
sahf
scas
loop
and
add
dec
js
mov
cs
xor
xlat
sbb
xor
cmpsb
inc
jl
add
insb
loope
arpl
stc
sub
adc
movsl
and
and
sbb
rorl
xor
test
mov
loop
in
adc
fstps
add
call
or
add
bound
xchg
pop
arpl
repnz
pop
andb
dec
dec
cs
loope
sub
xchg
mov
mov
ror
and
sti
or
gs
int3
aaa
push
add
outsb
cli
jecxz
push
call
inc
cmp
mov
ljmp
dec
mov
or
push
mov
int
arpl
cli
push
adc
sub
mov
adc
cld
mov
ds
pop
pop
jns
jns
mov
movsb
pop
lods
push
movsb
pushf
mov
in
jle
jne
push
mov
pop
pop
jp
fistps
pop
or
and
cltd
mov
testb
into
lret
mov
xor
addl
pusha
out
sub
ret
movsl
mov
cmp
out
inc
sbb
fsubp
xor
enter
sahf
mov
movsl
mov
mov
movsb
adc
add
add
dec
sahf
int3
pop
inc
cmp
popa
movsb
dec
in
mov
mov
mov
shll
loopne
mov
jmp
inc
cmp
and
mov
jg
mov
fldpi
push
or
cmc
pop
jns
jne
dec
push
add
ret
popa
das
insb
in
xchg
cmp
cmp
sbb
movntq
stc
pop
cmp
pop
mov
cmpl
movsb
adc
cwtl
and
fidivl
imulb
adc
add
inc
hlt
popa
cmp
lock
inc
cld
stos
and
add
add
add
stc
or
popa
imul
nop
js
std
push
push
sbb
adc
movlps
add
pop
stos
pushf
pop
push
jno
push
mov
dec
insl
enter
stos
shll
lods
jge
loope
add
adc
arpl
xchg
sub
dec
rcll
add
adc
imul
cmp
sbb
clc
pusha
xchg
jle,pn
xchg
mov
xlat
cmp
xor
scas
cmp
lret
insl
jmp
cld
lds
dec
daa
rorb
adc
and
out
mov
mov
rol
mov
sbb
jo
outsb
pop
aad
into
jno
xchg
fidivs
push
lods
cmp
sub
stos
adc
and
dec
sbb
jae
aaa
push
fstps
js
and
mov
jae
jle
popa
jle
dec
cld
mov
sub
push
fisttps
mov
inc
push
push
pushf
aad
or
lret
dec
pop
fidivrl
lods
cmp
out
jmp
stc
inc
or
inc
roll
aas
out
dec
movsl
pop
or
jecxz
mov
imul
mov
xor
aad
rclb
enter
out
sti
add
shl
loopne
dec
out
bound
pop
and
or
aam
addb
std
mov
pop
jb
gs
xchg
xchg
sub
xchg
pop
test
push
ret
jmp
pop
sbb
inc
push
push
adc
pop
mov
ds
lock
push
mov
mov
xchg
sahf
xchg
mov
pop
xor
dec
fsub
pop
sbb
aaa
daa
shl
aam
pop
mov
fwait
or
fidivrl
cmp
pop
pushf
inc
xor
and
test
mov
in
sub
cli
outsl
aad
push
push
insb
xchg
cld
popf
add
xchg
fadd
adc
pop
xchg
and
ret
fs
in
cmp
adc
adc
push
lods
and
jle
mov
or
subl
fwait
add
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
jmp
and
cmp
aaa
sbb
bound
sarb
jne
push
adc
adc
movlps
sbb
pop
bound
xchg
xchg
mov
and
orl
cmp
mov
add
sub
mov
popa
mov
inc
cld
mov
insb
clc
pushf
xchg
sub
ret
dec
orb
fsts
and
sahf
inc
sub
sar
pop
or
cmp
cs
add
inc
pop
sub
lds
call
and
ss
mov
pop
mov
in
out
mov
mov
adcb
jae
sbb
cli
pop
sub
add
add
loop
add
out
or
cmp
sbb
or
and
sbb
rcrl
fcompl
cmpsb
mov
mov
pushf
addr16
add
mov
les
dec
xor
nop
gs
fmull
out
lds
mov
push
mov
dec
push
or
xor
cwtl
mov
jno
sti
push
sbb
inc
int3
outsb
mov
insb
mov
adc
pop
cltd
add
push
jg
sbb
pushw
or
fbld
cli
sbbb
dec
adc
mov
and
std
xor
mov
imul
cmpb
pop
cs
xor
adc
pop
dec
jp
push
outsl
movsb
mov
int
insl
cmp
in
pop
dec
xor
test
jns
jg
xchg
add
repz
sbb
mov
mov
out
std
popf
aaa
fildll
cmc
sub
mov
jmp
imul
or
or
shlb
mov
gs
cmpsb
je
sub
push
inc
jb
xlat
nop
sbb
adc
adc
xchg
add
scas
idivb
lahf
mov
imul
pop
adc
subl
jo
xor
int3
fildl
sub
adc
jne
mov
ret
hlt
cmp
add
xor
movl
mov
mov
sub
div
mov
xor
mov
div
jmp
mov
xor
jns
fldln2
jle
pop
es
adc
adc
movlps
fnstcw
cmc
pop
sahf
sti
inc
sbb
jo
or
jb
sbb
push
cs
loopne
fdivl
gs
fwait
mov
xlat
es
jne
aaa
lea
mov
sub
pusha
adc
mov
fwait
jge
cmp
mov
push
sub
pop
gs
lcall
mov
sbb
test
std
loopne
push
adc
jmp
int3
cmp
ret
mov
xchg
add
mov
lea
pop
or
ret
scas
fwait
out
sub
lock
cmp
pop
fscale
mov
lods
add
cmp
jmp
pop
in
inc
cmpl
popf
inc
xor
adc
lret
jmp
lock
pop
out
imull
imul
sub
nop
jae
sahf
imul
mov
or
or
test
mov
pop
add
pop
add
pop
and
cmc
jb
inc
push
lods
mov
data16
jmp
fbld
hlt
shr
scas
mov
aad
or
push
les
and
test
and
cmp
mov
cmp
out
loope
sti
dec
gs
repz
pop
rorb
stos
mov
jle
jae
les
iret
dec
aaa
sub
cmp
addr16
dec
lods
jb
lock
into
or
mov
das
mov
mov
jno
push
out
fisubs
mov
sub
mov
not
xchg
add
movsb
sti
data16
popf
or
int3
cltd
add
add
das
mov
dec
lds
int3
leave
clc
jecxz
dec
outsb
cli
cmp
mov
xchg
movsb
mov
in
xor
stos
inc
out
inc
or
jmp
popf
fdivrl
cltd
shrl
in
cmp
add
roll
mov
cs
dec
jae
mov
mov
adc
fmull
adc
stc
jno
fistps
xor
ffreep
and
test
imul
ljmp
xor
icebp
rclb
in
pop
pop
cmc
jle
adc
mov
mov
std
rorb
hlt
or
movsl
shll
pop
add
pushf
stos
dec
int
inc
or
mov
push
dec
lret
mov
mov
pop
mov
mov
cmp
test
fnstcw
or
mov
sub
loopne
dec
repz
adc
ds
xchg
subb
pop
mov
mov
pop
shl
sub
pop
pop
xor
push
stos
cltd
ror
push
dec
mov
push
inc
xchg
mov
stc
inc
jle
sbb
outsb
xor
or
jecxz
lds
jecxz
test
jo
rol
stos
xor
or
lret
pop
and
dec
ja
outsb
push
bound
mov
jne
jo
sahf
cmpb
jno
cs
xchg
dec
lcall
mov
push
repnz
mov
jae
mov
int3
or
add
mov
stos
mov
cmc
jns
cmp
xchg
sbb
mov
daa
or
js
push
gs
xchg
cmpsb
cmp
cmp
mov
and
xchg
xchg
jecxz
xor
test
mov
jae
add
and
adc
adc
jno
shlb
cmpl
fidivrs
iret
sbb
mov
in
or
cmp
mov
adc
insb
call
mov
shl
fwait
mov
mov
pushf
mov
stos
mov
push
lret
dec
packssdw
les
frstor
jbe
lods
pusha
test
push
xchg
add
push
std
inc
push
push
fbld
dec
cltd
test
cmp
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jmp
mov
aaa
cmpsl
sbb
test
in
lods
jle
adc
fmull
adc
xor
push
xor
sub
cmp
sbb
out
xchg
sbb
dec
and
lds
push
pop
std
data16
sub
daa
incb
push
fbld
mov
std
das
xlat
sub
xchg
testl
pop
sbb
ss
frstor
xchg
push
iret
cmp
mov
insb
push
gs
cmp
arpl
fstp
loope
pop
rolb
push
clc
jae
pop
loope
pop
aas
jns
push
mov
test
fsts
sti
jecxz
sbb
mov
xchg
push
loopne
xchg
pop
arpl
xor
mov
mov
add
dec
daa
xor
cld
jecxz
jb
xchg
ds
pop
mov
mov
mov
aam
pop
adc
les
es
sahf
dec
in
lods
adc
lahf
push
daa
fsubrl
je
fwait
lret
in
xchg
sbb
pop
fdiv
dec
push
fdivr
mov
loop
mov
int
add
pop
ljmp
push
cmp
and
movsb
push
adc
pop
and
sti
in
rcll
xor
faddl
mov
sub
xlat
mov
movsb
std
aas
push
inc
shlb
sbb
mov
rcrb
sub
push
cs
sbb
mov
inc
daa
aad
mov
cmp
dec
ljmp
out
jbe
and
loope
pop
add
popf
and
imulb
push
sbb
inc
or
push
cmpsl
ss
xor
mov
cmp
ficoml
ds
sub
out
add
cwtl
push
push
test
mull
jp
iret
or
dec
outsl
imul
es
les
fld
add
pop
xchg
std
imul
mov
xor
out
cmpsl
pop
inc
imul
fcomps
aam
out
fstpl
xor
xchg
pop
push
ret
mov
dec
stc
aas
cld
outsl
xchg
pop
out
aad
cs
or
xor
cvtdq2ps
xorl
in
sub
loopne
cmp
add
inc
fdivrl
cmp
add
inc
in
int
add
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
jmp
popa
pop
fimull
dec
sbb
dec
neg
mov
inc
push
adc
fmull
adc
nop
divl
mov
fidivl
aam
xchg
dec
push
gs
adc
jg
in
rcrb
and
lea
adc
int3
pop
jo
dec
mov
xlat
sub
xchg
repz
jae
repz
fsubl
cwtl
call
or
insl
adc
mov
pop
mov
je
ds
cld
test
pop
cli
repz
mov
mov
mov
mov
dec
add
nop
arpl
out
repz
xchg
adc
cli
shrl
out
into
jae
inc
mov
sub
insl
aaa
push
repnz
jge
outsl
cmp
cwtl
sbb
icebp
cli
add
push
mov
in
cltd
adc
loope
xor
dec
or
add
push
in
nop
int3
dec
je
fnstcw
les
xor
loop
subb
or
sbbl
jmp
or
mov
add
icebp
shlb
imul
aam
repz
mov
in
mov
cld
mov
xor
cmpsl
sbb
dec
test
into
xor
jmp
sahf
push
xorb
jl
shl
leave
xor
sbb
sbb
shlb
popa
cmp
test
addr16
sti
dec
cmp
in
mov
stos
or
in
sub
pop
xchg
jno
mov
sbb
push
arpl
pop
scas
fimuls
jmp
cwtl
jnp
jge
gs
repnz
test
jnp
mov
frstor
stos
subl
mov
pop
fcmove
xorl
scas
jecxz
push
nop
lret
fwait
sti
dec
insb
mov
nop
xchg
daa
test
xchg
add
push
mov
addb
arpl
xchg
inc
iret
and
inc
mov
or
xchg
fwait
lock
repnz
ret
jp
mov
into
outsb
shlb
rcrb
push
das
stos
adc
repz
cmp
jb
jmp
add
cmpsb
pop
sahf
aaa
xor
mov
mov
push
add
adc
movlps
jo
dec
xor
mov
call
and
sarl
cmp
pop
fwait
jmp
xchg
sbb
add
icebp
addr16
mov
repz
jmp
add
addr16
int3
xchg
addr16
jb
mov
xchg
add
push
sbb
dec
rorl
fs
jmp
push
es
mov
fstl
outsl
nop
enter
movsl
mov
addr16
bound
mov
mov
xchg
shrb
outsb
dec
lods
jge
xchg
dec
sbb
push
iret
call
lahf
imul
jl
scas
sti
xor
adc
insb
outsb
inc
sahf
mov
insb
cmp
inc
icebp
ja
sti
out
lret
and
push
mov
daa
mov
ss
xor
push
cmp
push
test
mov
jp
inc
cmp
jbe
mov
mov
sub
mov
and
xorl
cmpl
push
or
ret
je
mov
push
shll
lahf
inc
mov
aaa
adc
push
iret
mov
lea
jle
clc
mov
push
cmpsb
jp
sbbb
int
aaa
flds
inc
cltd
add
add
mov
ljmp
push
cmp
out
out
xchg
push
cmpsb
shrl
adc
enter
nop
sbb
test
js
aas
cmp
lret
adc
jo
testb
mov
pop
xchg
and
std
mov
out
dec
lds
pop
sbb
adc
mov
fs
push
inc
push
inc
je
mov
push
mov
mov
nop
rcrb
icebp
cltd
xchg
pusha
repz
add
cmc
mov
movsl
std
mov
lret
pop
push
stos
in
xchg
add
sub
pop
cli
adc
jl
mov
shl
aaa
dec
int
sub
push
repz
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
jmp
ja
fistps
pop
ja
outsl
popa
ss
repnz
cmp
aad
adc
fmull
adc
jno
mov
in
jge
inc
in
or
sbb
or
adc
imul
pop
and
pop
out
call
dec
fwait
std
pop
dec
pop
dec
cmpb
leave
mov
out
cltd
cmp
mov
mov
rorl
sub
cld
ljmp
jbe
xchg
adc
popa
lcall
insb
fcomps
jbe
loopne
rol
xchg
push
inc
and
shr
outsl
imul
push
and
pop
mov
imul
and
imul
sbb
dec
notb
jns
loop
stos
out
jne
inc
mov
adc
dec
inc
ds
sbb
pop
push
mov
ja
jnp
cmc
xchg
adc
cmc
dec
scas
in
movsl
dec
mov
call
push
ret
mov
jbe
push
mov
dec
loope
mov
mov
adc
push
dec
push
sbb
fsubrs
ljmp
sbb
aas
pop
arpl
xchg
ret
push
inc
mov
outsb
lret
fwait
outsl
lea
and
cmp
inc
cwtl
xchg
cmp
sbb
or
in
pop
sti
mov
inc
mov
rcrl
jge
dec
xchg
inc
mov
cmp
testl
aad
mov
ret
insb
cmpsb
ss
cmp
in
test
inc
cmc
pusha
loope
sub
test
insb
jno
popf
es
rcll
int3
jmp
push
add
add
pushf
stc
push
push
cwtl
adc
jno
mov
mov
je
insb
adc
repz
sbb
sub
sbb
dec
dec
insb
scas
and
sub
fucomp
sub
jp
xlat
test
push
adc
sti
dec
daa
xor
insb
rorb
or
aam
jns
adc
cmp
mov
sub
ds
int3
xor
shlb
add
mov
mov
mov
dec
xor
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
jmp
lock
clc
test
inc
imul
xor
js
cli
adc
fmull
adc
push
ljmp
cmp
xchg
add
out
enter
pusha
xor
enter
and
pop
movsb
xchg
sub
xchg
mov
dec
loop
push
mov
cmp
cmp
mov
cmp
xlat
mov
and
mov
pop
xor
push
mov
jno
in
popa
mov
xchg
mov
cmpsl
in
repz
mov
je
sub
pop
add
pop
adc
sub
inc
mov
push
push
fcomi
sub
pop
insb
into
inc
add
or
daa
sbb
mov
and
call
or
adcb
je
push
dec
jge
sbb
sub
sbb
adc
mov
sbb
not
aad
fisttps
mov
inc
adc
out
xor
dec
sbb
mov
cmp
cmc
outsl
ret
dec
mov
int
out
push
inc
lds
mov
leave
pop
out
sti
adc
jnp
mov
inc
fwait
adc
daa
sarl
push
mov
xor
adc
sti
leave
dec
and
or
pop
fucom
sub
adc
outsl
and
xchg
daa
lret
mov
rcll
je
cs
fcompl
ja
adc
push
stos
push
dec
dec
sbb
dec
in
jae
scas
test
mov
jno
mov
pop
mov
cmp
or
in
lret
pusha
and
xor
or
enter
or
jbe
pop
push
outsb
mov
movsb
cmpsl
imul
sbb
xchg
adc
dec
jp
mov
dec
mov
sub
jecxz
sbb
pop
stc
pop
pushf
jg
psubb
pop
push
and
mov
dec
xlat
sbb
lods
xor
or
fwait
xchg
mov
dec
inc
fsubrl
xchg
cwtl
out
lds
ficoml
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
jmp
mov
pop
mov
insb
push
push
and
notb
adc
movlps
loop
ficoml
flds
imul
mov
mov
cvttps2pi
push
jl
mov
and
jbe
fiaddl
sbb
loopne
test
ret
adc
out
insl
push
fwait
loop
jge
mov
subl
outsb
ss
repnz
test
pop
fbld
cmp
out
sbb
clc
add
dec
in
jg
sbb
mov
les
rcl
sbb
dec
xchg
mov
jecxz
push
xorb
xchg
jo
sbb
push
gs
data16
sahf
sub
sub
add
jo
fimuls
out
dec
imul
mov
fs
dec
fs
sub
or
jbe
sbbl
scas
lcall
xchg
add
inc
cmp
mov
xor
inc
xchg
in
jl
dec
leave
sahf
and
or
mov
adc
mov
shll
pop
push
repz
lret
inc
xchg
fistpll
inc
inc
cmp
jl
mov
or
cmpsl
mov
mov
pop
mov
arpl
sub
lret
lahf
xchg
inc
nop
into
fsubrl
add
jmp
or
cmp
dec
ds
cmpsb
ss
in
std
pop
sbb
xchg
clc
jne
jmp
stc
xor
inc
pop
push
add
test
mov
jnp
add
push
sub
imul
lods
mov
mov
push
filds
movsb
push
lock
in
scas
jne
jo
mov
xchg
out
mov
shrb
and
rcl
lret
divl
and
and
and
call
or
adc
rorb
dec
orl
aam
pop
jns
lcall
mov
ret
mov
lock
test
push
movsl
sbb
clc
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
jmp
push
jb
adc
mov
xor
cmpsb
dec
mov
sub
adc
adc
std
data16
mov
lahf
or
out
cmp
fs
mov
or
pop
iret
in
cmp
xchg
push
int
jg
loope
dec
sbb
pop
push
inc
xor
cmp
sub
repnz
push
das
mov
adc
pop
inc
dec
fdivrs
out
jg
jp
mov
inc
pop
and
test
cs
loopne
mov
sbb
aaa
add
daa
pop
test
xor
jae
pop
addl
sbb
int
in
xchg
data16
dec
and
loope
or
jecxz
xor
or
aam
add
xor
dec
xor
adc
xlat
and
test
mov
js
pop
add
fsubrs
add
cli
arpl
xchg
xorb
je
repz
in
les
outsl
cli
into
andb
xor
xchg
dec
jo
scas
cld
mov
adc
pop
sbb
add
out
sbb
adc
fst
mov
adc
mov
jno
jno
sub
mov
dec
stc
pushf
mov
dec
push
push
or
test
pusha
pop
mov
and
fsin
lret
lock
ljmp
add
jg
out
pushf
adc
aaa
adc
shll
daa
adc
ror
loopne
cwtl
sub
stc
movsb
cli
mov
jae
lods
push
in
mov
cmpb
fsubs
xor
and
xchg
or
mov
pop
add
loope
push
test
sbb
ss
popa
or
mov
sub
pop
push
sbb
pop
mov
ss
in
cld
xchg
das
aaa
dec
sub
jo
fisubrs
lret
je
test
into
and
xor
popa
jns
jns
mov
cmp
movsb
test
jecxz
push
xorl
ror
mov
adc
in
inc
lea
xchg
mov
xor
pop
out
xchg
sub
sarb
or
mov
mov
mov
xchg
fisubrl
clc
pop
je
push
in
mov
xor
pop
mov
out
mov
push
jg
mov
aas
rcr
xchg
imul
mov
cmpsl
and
sub
cmpsb
cmc
das
sbb
scas
or
dec
insl
pop
loopne
pop
test
adc
mov
xchg
test
mov
jle
in
lds
ljmp
movsb
xchg
xchg
div
mov
adc
pop
push
mov
xchg
jne
cmp
fcomp
adc
push
and
idivl
lea
cmpsl
lds
jg
idivl
jecxz
fistpl
icebp
les
jle
out
lret
pop
fucomip
shll
inc
cmpsl
push
mov
and
roll
xor
jmp
repnz
pop
aas
icebp
les
jnp
sahf
inc
arpl
inc
sbbl
push
mov
sbb
mov
insb
cmp
push
sub
xlat
insb
cltd
rcrl
les
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
jmp
imul
in
push
pop
loop
xchg
js
lock
jmp
adc
pusha
imul
fmull
pop
mov
and
icebp
mov
lret
sahf
pusha
pop
lret
mov
pusha
imul
lods
shl
xor
iret
into
mov
push
cld
push
ds
cmp
call
ret
sbb
dec
lcall
jle
cmp
mov
daa
aas
jne
jbe
lahf
vpcmpeqd
push
enter
and
xchg
and
sub
imul
pop
jle
mov
fnstcw
repz
jle
dec
test
mov
ja
xor
bound
sbb
or
icebp
push
adc
add
push
inc
in
sahf
jp
mov
push
ja,pt
jp
dec
mov
mov
andl
insl
dec
pop
jge
cs
daa
jp
inc
mov
int3
imul
outsl
pop
rcr
xor
and
test
les
aas
sub
xlat
inc
icebp
stos
jae
or
sbb
xor
addb
scas
push
lret
jg
out
xsavec
outsb
arpl
loop
jbe
cs
pop
fiadds
mov
push
jmp
inc
add
cwtl
inc
cmp
movsl
xor
mov
dec
sub
mov
sbb
push
adc
or
pop
push
shll
imull
in
lcall
pop
push
mov
ja
mov
dec
push
lea
in
sub
add
jbe
repz
pop
xlat
aam
cmp
cmp
into
jecxz
inc
sub
ss
or
xchg
iret
dec
das
xchg
imul
flds
pop
sti
jmp
push
mov
dec
xchg
add
mov
incb
sub
loope
jl
pop
js
mov
sub
out
and
jns
add
ja
int3
jmp
movsb
inc
and
lods
fldenv
fwait
sbb
repz
movsl
xor
pop
pop
fidivrs
add
divb
add
fbstp
xchg
jne
pop
mov
inc
mov
into
ljmp
xchg
xor
sub
add
mov
and
outsl
mov
roll
mov
or
jle
ret
dec
pop
into
dec
mov
fs
imul
sti
push
mov
les
dec
mov
lods
addr16
xlat
pop
jne
rcrb
idiv
xchg
cmp
stos
sub
pop
and
xchg
stos
js
add
stc
stos
jo
jecxz
inc
icebp
outsl
lret
jp
sbb
clc
and
lock
imul
mov
inc
inc
shll
mov
mov
fisubrl
push
mov
mov
enter
dec
enter
and
jmp
shrl
push
inc
aaa
jb
mov
arpl
hlt
fcomps
test
dec
push
cmc
jp
psubw
aas
mov
sbb
test
lods
add
mov
cmp
add
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
jmp
mov
jo
pusha
popf
sbb
mov
xor
fists
adc
adc
js
dec
call
gs
icebp
or
mov
sbb
adc
aaa
mov
mov
movsl
pop
pop
test
rorb
and
push
dec
je
push
inc
rorb
jp
mov
jns
mov
and
fisubrs
sbb
test
adc
leave
jg
dec
push
adc
dec
sbb
add
hlt
jl
testb
jns
shll
mov
das
sti
cltd
mov
stos
sbb
leave
rep
int3
mov
imul
push
sbb
xor
add
cwtl
setp
xor
shll
xchg
shlb
xor
and
inc
xchg
fcomp
iret
cmp
loope
sbbl
gs
ficoms
inc
rclb
pop
inc
gs
cmp
cmc
mov
xchg
cmp
and
xor
test
gs
xchg
popa
jmp
inc
dec
lahf
sahf
lahf
or
and
and
cmpsl
push
lcall
out
pushl
mov
jecxz
cmp
inc
bound
loope
aam
gs
adcl
notl
or
enter
cmp
int3
push
xchg
mov
pop
mov
sarl
loope
jecxz
push
and
rcr
sbbl
fstl
pop
jb
popf
dec
dec
cwtl
mov
shrl
mov
daa
jns
mov
aam
mov
cltd
or
js
xor
or
cs
adc
add
xor
sub
push
and
push
xchg
into
fdivrl
sub
mov
mov
iret
fstl
mov
shrl
repz
xchg
mov
in
test
sbb
lret
ret
aas
jle
pushf
xchg
and
mov
outsb
mov
gs
inc
pushl
jnp
sbb
notb
ret
cltd
stos
pop
ljmp
push
int
or
jp
xlat
mov
dec
jecxz
das
scas
fcoms
cmp
pop
and
dec
repnz
cs
inc
sbb
xchg
push
pop
jo
test
pop
jg
and
fwait
lret
xchg
popa
mov
push
sbb
out
cmpsl
sub
push
pop
test
sbb
dec
clc
jmp
loopne
faddl
mov
push
hlt
mov
and
aam
pop
gs
scas
es
pop
cld
cltd
loopne
xor
jge
xor
cmp
inc
and
cli
jge
jnp
lock
lds
push
pop
xlat
cwtl
and
mov
mov
or
xor
test
cltd
fnsave
jecxz
push
outsl
mov
repz
or
ja
mov
xchg
subl
dec
orl
lods
icebp
shll
sbb
and
popf
outsb
pusha
sbb
sbb
pop
mov
and
or
rcll
flds
sub
dec
fisubl
mov
clc
adc
add
add
pop
inc
cs
aad
cmpsb
push
fldl
sbb
xorb
scas
fdivl
shl
ljmp
cmp
add
inc
cld
xor
add
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
sbb
or
jmp
bnd
popa
into
lods
inc
fstl
adc
adc
addr16
push
xor
push
adc
test
scas
sub
cmp
inc
dec
xor
inc
or
loopne
insb
dec
lds
ds
or
fdivrl
mov
gs
xor
cmp
mov
ret
shlb
int3
cmp
cmp
dec
movsb
cli
mov
pop
push
adcl
shr
push
dec
movsb
nop
cmp
fisubrs
test
repz
roll
push
adc
mov
lea
sbb
push
stos
mov
jae,pn
fisttpl
ja
jno
jns
mov
push
jge
mov
int3
push
fldenv
and
fdivs
jae
les
adc
jecxz
push
ffreep
mov
pop
cmp
nop
push
mov
sbb
sbb
pop
cwtl
cmp
test
lea
sub
insb
pop
call
stc
aas
js
add
iret
cmc
pop
insb
push
inc
cli
xchg
icebp
cs
push
fisttpll
or
icebp
test
pushl
inc
ret
mov
sbb
and
mov
add
leave
out
imul
clc
jmp
jbe
dec
jo
lcall
sbb
dec
mov
mov
or
js
loope
adc
xchg
lea
ja
rolb
fistpll
push
shl
inc
jae
inc
jmp
lods
cmpb
cmpsl
mov
sbb
add
out
jle
or
je
inc
pop
outsb
pop
inc
push
out
sub
lret
je
imul
jl
jle
mov
aam
clc
sarl
out
lods
addr16
and
cmp
je
inc
pop
dec
stos
mov
and
and
test
and
pop
inc
xchg
movsl
or
sub
inc
in
mov
lahf
je
inc
mov
or
imul
xor
in
pop
inc
aam
scas
mov
mov
leave
loop
jp
out
out
push
loopne
pop
inc
lock
and
jns
sbbl
aad
and
pop
cs
push
jno
add
mov
std
pop
imul
sub
jnp
sbb
imul
or
aad
cli
aad
push
cmp
and
out
gs
sub
out
inc
add
cmpsb
push
ljmp
xchg
ja
aas
and
jle
aad
inc
nop
mov
push
add
test
test
movsl
ret
into
sub
in
cmpsl
push
adc
test
xchg
jns
ja
loopne
popf
mov
sbb
ja
jo
xor
stos
enter
lret
pushf
or
cmpsb
testl
push
jb
int3
mov
mov
pop
nop
fwait
popf
sub
cld
push
xor
scas
packuswb
adc
loop
xchg
enter
adc
adc
ja
add
out
adc
mov
ret
lahf
fbstp
daa
xor
ret
inc
movl
mov
mov
jmp
jg
inc
dec
and
cwtl
lods
mov
sti
jle
aad
adc
adc
bound
sbb
jnp
sbb
adc
fadds
scas
cltd
out
xchg
adc
jle
jb
imul
dec
nop
and
insb
rcll
dec
mov
es
add
and
cmp
cmp
lcall
ds
pop
xchg
and
loope
jmp
mov
dec
mov
js
data16
ss
pushf
cmpb
mov
sub
popf
js
pop
or
jnp
fsubrl
fists
pop
fsubl
mov
add
fidivl
rcrb
jmp
sbb
push
and
cmp
sbb
lret
mov
gs
daa
lahf
xchg
xchg
stos
add
jl
or
ds
int3
jg
repnz
shl
inc
xchg
cs
sbb
pop
xchg
add
fsubrp
mov
cmp
inc
mov
xor
insl
js
jns
mov
mov
imul
in
sti
je
arpl
imul
ds
push
sahf
add
jmp
in
test
dec
dec
iret
imul
fcomip
or
ret
fdiv
jmp
inc
sub
sarl
jle
dec
ret
lret
push
sub
lds
or
inc
add
adc
inc
leave
imul
inc
call
popa
adc
bnd
lret
push
ret
movlps
mov
push
pop
pop
fldl
dec
sti
push
js
jle
sub
xor
xchg
adcl
iret
xlat
adcb
popa
es
mov
leave
loope
ficoml
jmp
popa
enter
adc
and
pop
pop
cmpsl
pop
sbb
push
imul
std
fdivrl
pop
or
lods
adc
lcall
mov
inc
lock
insb
fbld
push
test
cmpsb
das
nop
das
enter
lret
pop
adc
cmp
add
mov
mov
out
ds
mov
imul
movsb
xlat
daa
test
out
cmp
inc
in
stos
lods
adc
push
dec
push
push
pusha
les
sbb
mov
push
jge
push
les
mov
sti
cmpsl
je
test
clc
pop
pop
stos
mov
rcll
xchg
inc
mov
adc
in
xor
fisttpll
imul
push
mov
adc
push
cmpsl
enter
sahf
fldcw
adc
inc
jae
stc
dec
and
add
lods
mov
sahf
push
notl
movsb
xor
mov
out
sahf
sub
lds
lock
fs
cld
stc
cmp
fmull
mov
sub
cltd
mov
mov
pop
xor
jb
or
dec
fstpt
fistpl
mov
iret
mov
scas
pusha
stc
cmp
pop
inc
adc
into
enter
xchg
pop
scas
sub
loopne
xchg
mov
pop
xchg
aam
xor
jne
mov
add
adc
or
mov
or
jmp
xchg
decl
cmp
adc
stos
xor
xchg
js
lret
adc
jo
adc
push
and
cmp
dec
xor
pusha
js
inc
push
dec
in
popa
cli
test
mov
and
outsb
cld
icebp
rolb
icebp
loope
inc
sbb
mov
and
xchg
sbb
notb
fs
xchg
push
push
push
add
mov
sub
dec
loop
bound
pop
iret
pop
sub
mov
pop
add
mov
sbb
outsl
adc
sub
lret
or
test
or
cmp
cmp
addr16
sti
in
xor
or
mov
das
ljmp
repnz
xchg
mov
sub
mov
mov
mov
mov
mov
fldt
ds
pushf
daa
xchg
pop
dec
inc
push
add
sub
ss
jbe
inc
and
int3
fdivl
xchg
jo
xchg
pushf
mov
pop
jno
cli
jne
jg
pop
fs
fidivl
fidivs
frstor
and
or
xchg
mov
out
mull
push
xor
jnp
push
lret
sub
or
and
iret
aaa
in
insl
add
stos
adc
lea
jp
lea
jae
and
or
sbb
dec
repz
cmpsl
and
mov
pop
mov
or
sbb
in
inc
add
sbb
aad
ret
cmp
and
xchg
pop
arpl
dec
xchg
mov
add
inc
dec
inc
xchg
sub
hlt
push
xor
addb
push
or
push
pop
inc
test
sub
daa
scas
aad
mov
xrelease
xchg
iret
dec
mov
call
fdivr
test
sti
enter
push
shlb
jae
sub
es
arpl
push
cld
clc
xor
loop
sub
idivb
stos
repnz
add
cmp
inc
pusha
mov
sbb
and
sub
and
xchg
sub
cmp
fidivs
pop
ficompl
xchg
sarl
rcr
hlt
in
dec
xor
cwtd
std
cmp
mov
rcr
mov
imul
xchg
xorl
nop
or
push
pusha
loope
into
shll
neg
adc
pop
xor
jge
imul
loope
cmp
and
xor
icebp
adc
adc
cwtl
or
jp
inc
inc
mov
inc
pop
add
xor
subl
jg
add
sbb
or
xchg
clc
shl
mov
xor
or
das
mov
and
lmsw
inc
stos
pop
adc
dec
pop
fs
insl
int
dec
adc
mov
pop
icebp
scas
jmp
mov
or
sub
lret
and
loopne
mov
pop
push
fdivr
inc
loopne
into
push
cmp
cmp
add
mov
add
adc
and
jl
mov
rorl
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
jmp
sub
cmp
mov
push
leave
adc
jo
adc
clc
in
je
bound
jl
and
lret
add
test
inc
jle
icebp
dec
push
sahf
pushf
outsb
fldenv
stc
jno
ja
cmp
addr16
leave
add
pop
add
mov
mov
movq
dec
pop
push
sbb
mov
mov
iret
loopne
das
nop
out
xchg
inc
sbb
xlat
lret
scas
ds
dec
mulb
les
or
mov
xchg
pop
jnp
xchg
cli
out
or
mov
pop
loope
xchg
in
cs
or
into
inc
dec
clc
loope
jae
adc
push
mov
leave
stos
jbe
mov
pop
lahf
sbb
jmp
and
dec
enter
add
sub
xor
cmp
std
das
insw
sarl
in
cmpw
and
add
lds
push
pop
in
mov
cld
lcall
push
jg
push
push
outsl
xchg
sub
and
popa
scas
mov
sbb
aas
xor
insb
or
mov
ror
sbb
out
ficompl
pop
jge
popa
mov
sub
test
cmpsb
add
or
and
stos
push
in
push
adc
int
add
pop
sbb
aad
jb
jle
fsubrs
fsubs
and
cli
insb
iret
fdiv
lea
gs
adc
dec
push
jge
mov
xchg
push
or
add
bound
sub
test
hlt
outsb
mov
les
mov
imul
bound
adc
loop
pop
les
inc
dec
imul
pop
jl
bound
mov
mov
mov
xchg
inc
andl
in
ljmp
mov
rcr
lods
mov
divb
ljmp
shrl
xchg
push
pop
vpmuludq
mov
cmp
in
sub
insb
movsl
push
das
or
fldcw
dec
int
lods
lret
fidivrs
les
mov
inc
xchg
call
iret
xor
push
fwait
push
loop
loopne
cli
rclb
jecxz
sbb
leave
shll
rcrb
fmull
push
negl
push
lcall
sub
sahf
iret
inc
lret
decb
imul
push
mov
aad
data16
inc
das
rorl
call
sbb
dec
and
jne
test
decb
pop
push
nop
inc
stc
pop
shlb
lock
sarl
popf
fildll
jg
in
repz
sub
roll
dec
out
test
mov
xor
cs
pop
sub
faddl
scas
cmp
imul
sbb
bound
cltd
push
cli
std
popa
inc
cmp
in
jo
sti
lods
addl
add
stos
inc
lcall
add
or
pop
add
in
xchg
insl
pop
adc
push
cmp
test
lcall
add
test
call
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
jmp
xchg
xorb
daa
cltd
sbb
add
ret
rcll
jo
adc
xchg
sbb
loop
popf
std
out
sub
sahf
add
aad
enter
xor
or
shl
sbb
jge
pop
inc
into
loopne
pop
fsubr
push
es
loop
aas
dec
push
test
addr16
and
or
add
jmp
mov
mov
das
mov
jmp
addl
popf
popl
adc
outsl
lea
sbb
sbb
or
mov
incl
or
jmp
rcl
fs
mov
xchg
jge
and
adc
push
cltd
jb
and
pop
xor
xlat
add
mov
push
idivl
aaa
mov
xchg
jbe
data16
pushf
shlb
jmp
pushf
xor
les
and
inc
dec
mov
pop
lds
add
int
pop
xorb
pushf
fsubs
addr16
loope
cmpsl
fs
mov
adc
in
push
je
pop
and
fmul
inc
pop
lret
movsb
mov
je
xor
movsb
stos
in
add
or
mul
fcomps
les
or
dec
mov
cmp
jle
ja
out
loopne
loope
sub
pop
mov
mov
aas
cwtl
stos
inc
sbb
adc
jge
aam
jl
or
jmp
jns
notb
sub
adc
rcrb
jl
xchg
add
dec
fs
jp
xor
lods
xchg
mov
jle
outsb
mov
ja
or
aas
sub
in
xchg
add
dec
stc
lahf
cmp
push
xorb
pop
movl
push
jo
or
mov
jmp
sub
lds
sti
pop
das
mov
jo
dec
jno
imulb
repnz
out
loopne
test
outsb
mov
mov
mov
in
sub
pusha
out
jp
and
sbb
iret
xor
sbb
inc
leave
std
divl
out
lods
fwait
call
lds
iret
sub
mul
fdiv
popf
jp
loop
jno
idivl
push
mov
mov
jno
cltd
push
out
daa
out
dec
mov
and
ss
pop
push
std
add
dec
and
pop
scas
xchg
pop
xchg
lods
fiadds
or
pop
es
mov
ja
repz
xchg
inc
dec
and
jp
sbb
pop
dec
lahf
xor
imul
push
xchg
icebp
ret
adc
adc
loop
pushl
aad
xor
xchg
icebp
xchg
cmp
push
movsb
pop
adc
aad
cmpsl
ret
mov
dec
ret
test
or
sbb
movsl
addr16
outsb
ljmp
cli
sub
out
jns
sbb
mov
and
inc
rcrb
pusha
dec
or
xchg
ret
xor
mov
dec
stc
hlt
out
jmp
mov
les
loope
push
inc
pop
dec
pop
push
mov
fs
push
add
das
xchg
mov
inc
mov
cmp
mov
cld
lahf
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
jmp
jmp
dec
test
lods
jle
cwtl
lods
push
mov
adc
adc
mov
mov
repnz
mov
pusha
cli
mov
mov
add
lods
cmovae
push
cmp
in
clc
stos
jns
sbb
pop
lret
shlb
std
inc
imul
xchg
insb
and
sub
int3
popf
scas
sbbb
jp
jge
outsl
mov
ss
mov
add
adc
arpl
mov
in
sbb
repnz
sub
sbb
fdivl
and
pop
or
inc
loope
xor
scas
stos
into
xlat
xor
pusha
push
ror
lods
adc
clc
mov
and
lret
fwait
out
icebp
fwait
repnz
push
mov
aas
pop
mov
jo
fsub
push
shlb
out
ret
jne
cli
repnz
call
mov
jns
fdivrs
jnp
daa
push
in
aam
adc
clc
mov
dec
dec
adc
xchg
xor
xor
or
out
jnp
movsb
push
sbb
loopne
scas
lahf
pop
popf
mov
mov
pop
mov
push
sahf
cmp
movsb
shlb
push
xor
mov
jnp
ljmp
sbb
xchg
hlt
push
lds
loopne
add
ss
repz
pop
arpl
dec
aas
or
adc
ret
inc
mov
xorb
mov
cld
out
lods
push
rcrb
adc
cmp
loope
or
subl
imul
xchg
int
mov
cmp
shl
ret
scas
mov
lahf
or
jp
fisubl
or
int3
insb
fsubs
mov
mov
jns
mov
sub
add
popa
xor
inc
je
add
test
les
out
pop
imull
aaa
clc
xlat
push
xchg
xchg
mov
popa
test
pop
sbb
loopne
popl
lret
rcrb
sbb
mov
test
adc
arpl
xor
mov
inc
xchg
aas
es
lcall
and
stos
loopne
inc
inc
stc
fldcw
dec
adc
sub
pop
mov
aam
daa
fwait
es
sbb
out
fadds
negb
loop
add
sbb
hlt
fwait
scas
sub
mov
xchg
fdivl
leave
push
add
fistpll
and
enter
test
enter
jg
je
sub
adc
je
fistpl
mov
bound
fcmove
aaa
pop
into
shlb
fdiv
cmc
lcall
mov
adc
js
int
fwait
stos
push
in
jecxz
call
xchg
or
mov
imul
push
mov
push
add
add
mov
inc
xchg
adc
dec
lock
ljmp
xor
cmp
stos
cmp
je
cmc
pop
loopne
cmpb
adc
out
jge
ffree
les
mov
push
xor
mov
xchg
mov
js
lcall
inc
in
les
rorb
xor
sub
mov
inc
add
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
jmp
dec
pop
divb
inc
and
mov
imul
and
out
jbe
ja
mov
call
xor
icebp
mov
sub
mov
xlat
cmpsl
mov
inc
fldenv
sbb
lcall
adc
inc
arpl
adc
push
sub
and
gs
jne
add
data16
iret
sub
xchg
push
and
push
nop
fld
inc
jnp
addr16
sbb
mov
loop
hlt
sti
insb
lea
pop
dec
mov
mov
ljmp
movsb
inc
js
ljmp
inc
insb
enter
and
iret
cltd
jge
sti
xchg
mov
cmp
xor
xchg
mov
jge
mov
or
repnz
dec
pop
out
mov
out
out
pop
enter
sbb
adc
push
insl
and
mov
ja
rcrl
inc
iret
cmp
pusha
push
mov
addb
mov
add
daa
das
mov
sbb
dec
inc
jne
inc
pop
jl
mov
mov
cli
fadd
insl
mov
in
dec
pop
cmp
xchg
sbb
out
rcll
stos
xchg
into
xchg
xor
test
cwtl
out
xor
pushf
jg
pop
rep
lcall
pop
lds
lcall
inc
pop
gs
sub
jne
push
xchg
movd
aas
movsl
pushf
es
dec
mov
subb
pop
in
roll
js
push
inc
pop
xchg
sub
mov
lahf
test
fsts
jp
out
lcall
sub
lods
fldenv
pop
mov
int3
inc
add
and
loope
aaa
sahf
dec
push
decb
movsb
push
pusha
mov
rclb
adcl
jno
sbb
ret
xchg
ss
push
sbb
aaa
and
sub
das
xchg
xchg
cmpsl
and
push
sub
jecxz
mov
add
lods
in
in
add
sahf
adc
aam
aam
sarb
adc
push
movsb
pop
sbb
sbbb
and
popf
scas
jmp
push
call
mov
mov
or
or
push
add
push
jmp
push
pop
push
js
mov
adc
stos
movlps
sbbb
mov
jae
sub
cwtl
ja
jecxz
fs
mov
or
sub
lret
xor
pop
pusha
bound
jno
cli
insl
inc
push
mov
xor
cltd
xor
data16
leave
subb
popf
push
lret
sub
cmpsb
jbe
mov
mov
repnz
add
icebp
xchg
and
in
cmp
jns
jnp
hlt
sti
xlat
adc
loopne
xchg
cld
sbb
ror
shrb
test
xlat
lods
fwait
and
fidivrl
dec
jo
sbb
jb
arpl
xor
roll
mov
imul
lds
sbb
cmp
cmp
popa
mov
ficoms
mov
and
pop
adc
xor
cltd
jbe
call
inc
cmpsb
es
inc
leave
or
and
shll
xchg
push
lea
xchg
mov
and
sahf
pop
test
test
add
push
mov
sahf
mov
sbb
aaa
mov
fstl
push
gs
and
mov
push
ja
data16
jmp
pop
ficoms
jmp
adcl
mov
and
ficoml
mov
jne
mov
in
push
out
pop
push
es
xor
dec
add
pop
gs
icebp
cmp
mov
cmc
stos
xchg
pop
in
repnz
sti
inc
sti
hlt
cmpsl
lahf
cmp
prefetchw
mov
pop
push
fiaddl
stos
stc
lahf
cltd
mov
mov
mov
push
pop
mov
stos
inc
fisttps
mov
gs
mov
xor
pop
xchg
outsb
neg
lods
addb
in
addr16
lock
sbb
push
jmp
fcmovnbe
mov
add
pop
jns
and
dec
out
imul
mov
or
icebp
shlb
mov
mov
in
cmpsb
call
mov
ret
jae
in
loopne
dec
and
ss
push
or
and
sarb
adc
add
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
jmp
cltd
sbb
sbb
cltd
sbb
xchg
bound
push
aam
mov
adc
cmp
sub
ds
jp
xchg
xor
cld
mov
fs
das
xchg
cmc
in
adc
and
fidivs
imul
add
scas
and
push
mov
mov
stc
sbb
das
pop
cmpsl
gs
nop
adc
stc
dec
ss
sbb
mov
mov
fmul
daa
pop
jmp
nop
fwait
sbb
js
dec
mov
popa
lret
jg
in
adc
xchg
and
int3
mov
inc
aas
adc
daa
add
lock
jmp
popa
out
jg
sub
sbb
and
adc
les
jg
pop
test
int3
insl
fstps
je
in
jne
icebp
push
dec
outsb
cmp
push
scas
cmpsb
pusha
jnp
xor
xchg
sbb
call
ret
dec
xchg
and
clc
pop
sbbl
dec
fildll
jb
adc
add
adc
inc
inc
mov
arpl
mov
push
cmp
add
negb
and
push
outsl
cmp
push
xchg
xor
jbe
out
adc
pop
cpuid
push
add
bound
nop
repnz
sbb
mov
sahf
jne
mov
in
arpl
sbb
mov
inc
cmp
push
icebp
ss
icebp
jmp
shrl
outsb
add
xor
pop
jmp
aas
inc
bound
mov
adc
or
jp
xlat
int3
dec
xor
sbb
jle
and
xchg
jle
xchg
iret
xor
add
or
jle
jno
push
sbb
push
rcrl
fisttps
push
xchg
call
aam
xchg
add
sub
xchg
popa
loop
nop
fidivs
xchg
movl
dec
aas
std
push
ss
arpl
bound
pop
add
xchg
xchg
ret
rcrb
push
out
mov
mov
push
lds
test
in
insl
and
dec
push
stos
test
out
jo
out
mov
pop
daa
sub
scas
psubq
inc
in
adc
inc
or
and
or
inc
in
mov
and
lea
mov
mov
mov
movl
jmp
pop
mov
pop
mov
call
mov
adc
xchg
push
dec
aas
dec
lea
repnz
push
sbb
leave
in
push
in
aaa
or
xchg
sub
sbb
sub
int3
mov
push
dec
sbb
pop
fdivl
jl
add
sbb
mov
ficompl
movsb
test
jmp
xchg
mov
dec
pop
and
fnsave
jmp
push
pop
lock
or
jae
or
add
sahf
sbb
adc
mov
testl
xchg
mov
and
outsl
pop
push
cld
and
add
imul
jno
sub
add
nop
fidivs
add
pop
and
adc
jl
sahf
shrl
sub
dec
cmp
cmp
stc
xlat
mov
jnp
or
addr16
mov
xor
pop
cmp
sbb
enter
push
test
daa
testb
xor
dec
lds
add
jmp
xchg
inc
dec
lret
mov
pop
jecxz
xchg
repz
mov
lahf
fcoms
ret
lahf
adc
push
test
stos
mov
xchg
fsubs
adc
xor
mov
insb
and
gs
idivl
or
sub
xor
sub
mov
push
pushf
dec
fistpll
int3
and
inc
cmpsb
mov
stc
popa
ljmp
push
fwait
test
or
xchg
adc
and
cmpb
or
pop
std
xchg
sbb
cmpsb
ret
mov
adc
inc
in
ljmp
jl
imul
jl
sub
test
popf
in
enter
sub
mov
jl
in
fsubrl
mov
mov
das
or
or
int
imul
lret
data16
mov
int3
inc
pop
icebp
addr16
push
fucomip
pop
repz
or
int3
out
cmpsl
cmp
mov
rcll
scas
xchg
xchg
into
lock
inc
in
movsb
imul
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
xchg
sub
subl
or
adc
lahf
adc
stos
movlps
cli
das
and
cmp
mov
rol
addr16
cmp
nop
out
subb
lods
lret
popa
add
in
fsts
fldenv
fistpl
xchg
or
jmp
sub
add
rcr
aam
das
mov
push
push
cmpsb
cmp
lock
outsl
xchg
in
movsb
xchg
lds
ja
jb
dec
pop
fmuls
push
add
adc
and
pop
ds
xor
xchg
inc
mov
mov
mov
mov
mov
push
xor
add
mov
mov
sub
pop
shlb
loopne
or
xchg
outsb
xor
hlt
imul
fisttps
repz
or
lret
dec
imul
dec
mov
mov
arpl
call
fidivs
lahf
inc
xor
popa
cmp
sbb
jo
cmpb
jo
out
add
mov
insb
jb
dec
or
add
dec
mov
xor
fisubrl
xor
call
pop
jae
jg
fisubrl
adc
lahf
cltd
add
fistpll
ds
daa
lods
call
or
xchg
outsb
stos
lods
pop
inc
xchg
mov
jmp
inc
data16
mov
sbb
and
dec
jp
leave
mov
and
xchg
xchg
lods
dec
jb
xor
out
mov
movsl
xor
aad
mov
sub
jbe
adc
mov
into
imull
lock
xchg
sbb
pop
jl
dec
sbb
inc
xor
cmp
jns
loop
jg
dec
addb
scas
xor
and
xor
repz
cltd
imul
jmp
cmp
jne
sub
and
in
fdivl
and
pop
jmp
movsl
inc
cmpl
dec
mov
sbb
lods
enter
popa
fcoml
push
rorb
xor
test
cli
cli
out
sar
movl
mov
mov
and
sub
or
mov
imul
mov
jmp
loope
mov
and
les
aas
fwait
adc
stos
movlps
push
outsb
adc
jg
fistl
jecxz
inc
and
and
or
out
nop
mov
dec
xchg
add
inc
and
stos
scas
adc
mov
fmull
stc
out
pop
ljmp
or
divb
icebp
xor
adc
fistl
fidivrl
lock
xchg
lods
push
sarl
mov
adc
jl
and
dec
pop
fcoml
lret
and
mov
mov
iret
pop
enter
std
ja
iret
fistps
jg
sar
stos
inc
lea
stc
in
lret
enter
hlt
ret
lods
movsb
roll
test
ljmp
les
sub
dec
cwtl
mov
cmpl
std
je
lods
fsubl
sbb
jle
or
andl
test
cmc
fisubrs
pop
push
push
mov
mov
lcall
sub
xchg
cmp
in
pushf
in
pushf
adc
out
cltd
inc
dec
xor
jge
lcall
out
inc
sahf
shrl
jmp
cld
into
data16
lds
sbb
cld
mov
js
clc
or
rcll
repz
jnp
xchg
data16
daa
je
pop
stos
jmp
inc
addr16
pusha
fs
xchg
mov
or
jbe
xchg
push
test
push
mov
pop
mov
pop
jno
sbb
lds
add
jmp
out
or
aam
in
pop
test
mov
movsl
fsubp
push
shr
imul
test
mov
jo
fadd
cs
lods
ljmp
shrl
jp
dec
xchg
pop
inc
sarl
insl
xchg
sbb
ret
push
add
xchg
xchg
push
jno
dec
ret
push
jge
xchg
fnstsw
or
aam
add
mov
in
call
xchg
dec
lea
enter
mov
xchg
pop
inc
jne
or
lods
mov
js
in
xchg
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
jmp
inc
or
pushf
ds
fdivrs
cltd
adc
pop
adc
adc
jbe
xor
sub
dec
data16
outsb
cs
add
or
xor
or
sbb
dec
shrb
cmp
mov
pushf
push
and
sub
push
shll
cmp
lcall
xchg
mov
fsubl
mov
push
fucomip
mov
add
imul
jecxz
dec
push
push
mov
mov
leave
sbb
jp
fcompl
mov
mov
mov
fisubrl
outsb
out
cld
je
cmp
cmpsb
sub
push
fcoms
mov
es
push
or
cmp
imulb
and
lcall
test
repnz
out
mov
jae
push
int3
and
dec
data16
cld
and
in
add
mov
and
cmpl
xchg
mov
hlt
dec
add
mov
and
stos
ss
imul
xchg
insl
xor
test
movsb
push
and
add
out
fsubrs
lds
cltd
push
scas
inc
outsb
dec
aas
das
out
and
sub
cltd
mov
push
subl
cmp
mov
insb
insl
stc
add
mov
mov
shll
xor
dec
cmp
call
fildl
dec
fmulp
add
out
clc
jecxz
jb
in
xchg
add
mov
xchg
les
lret
xor
xchg
or
xor
push
pop
adc
inc
dec
xchg
pusha
sub
repnz
ds
int
sahf
push
loopne
xor
pop
inc
mov
cwtl
inc
jg
or
add
mov
dec
xchg
ret
xlat
sub
pushf
push
sbb
ljmp
jmp
fs
mov
dec
pop
lahf
add
repnz
adc
pop
jge
xbegin
mov
and
imul
and
and
mov
sbb
jg
fcoml
push
or
jo
xchg
push
xchg
aam
adc
push
jmp
lea
jae
shl
mov
cmpsb
arpl
fs
adc
jl
fwait
jo
pop
aas
call
cmp
je
add
or
add
sbb
lock
lds
lea
mov
jle
lock
pusha
jecxz
mov
arpl
scas
inc
dec
jp
mov
mov
jl
sbb
stc
push
addl
repnz
or
mov
filds
xchg
mov
dec
push
sbb
aaa
add
jmp
movsl
gs
sub
mov
gs
push
inc
jl
mov
in
dec
pop
xchg
loope
pop
jo
js
pushf
add
mov
aaa
and
cmp
add
rcr
aaa
adc
int
mov
lock
push
cmpsb
popa
jmp
mov
or
lods
subl
inc
mov
add
aaa
pop
inc
movsb
xorl
jo
test
push
xchg
jp
pop
and
xor
and
andb
jbe
or
and
adc
or
adc
mov
adc
and
mov
js
sbb
xor
loopne
stos
mov
mov
mov
aad
cmp
jg
in
flds
or
dec
insb
pop
jno
pop
inc
nop
cmp
xchg
push
ljmp
rol
cmp
divl
inc
dec
pop
add
adcl
mov
fwait
je
insb
jl
push
dec
addr16
xlat
pop
cmp
xchg
pusha
decl
ljmp
rorb
lcall
icebp
mov
xor
mov
xor
mov
add
jmp
pop
pop
scas
outsb
scas
pop
sbb
cmp
push
push
ljmp
pop
adc
adc
xchg
loopne
divl
push
push
addr16
test
out
inc
push
xchg
jp
mov
add
fnop
sbb
test
and
jne
addl
mov
icebp
and
pop
jne
and
shlb
jb
aad
lahf
jmp
lahf
pusha
rcll
sti
jecxz,pn
rorb
cmpsl
jb
xor
rol
cmpsb
push
mov
xor
push
jg
mov
pop
pop
adc
push
fdivrl
addr16
xor
push
pop
push
cmp
lahf
dec
jle
mov
lea
stc
sbb
jno
fwait
push
fs
mov
and
sub
jp
and
jno
call
pop
pop
aas
sbb
sub
ss
fwait
xchg
sbb
xor
sbb
outsl
lods
sub
push
out
jg
popf
xor
xlat
pop
imul
xorl
pop
sbb
in
mov
sar
scas
cli
and
add
pop
mov
div
jns
call
dec
mov
xor
into
adc
data16
sbb
clc
mov
leave
popf
call
jb
add
dec
cmp
dec
scas
dec
jmp
std
fistpll
aas
push
lcall
int
fnstcw
icebp
jl
mov
push
lcall
mov
rolb
clc
jbe
data16
inc
xor
pop
mov
jecxz
xor
cmp
adc
mov
push
push
push
je
pop
int3
xor
popl
dec
dec
mov
push
rolb
pop
out
mov
or
pop
repz
out
mov
add
mov
add
xor
mov
pop
jnp
bt
cli
mov
mov
outsl
xlat
in
shrb
pop
or
adc
mov
pop
mov
in
out
outsb
out
cwtl
mov
or
jmp
fists
cmp
fistpl
sahf
cli
ja
inc
clc
jbe
cmpsb
into
jbe
add
fstp
or
aas
adc
cmp
cwtl
cmc
dec
inc
mov
or
test
cmp
pop
sbb
add
jo
pushf
push
bound
and
lea
jo
cwtl
sub
loopne
test
mov
inc
sub
and
or
sub
xchg
mov
testb
sub
movsb
push
sub
cld
xchg
jbe
pushf
bound
repz
int3
cmc
add
shl
loope
xlat
xor
xor
cmp
into
xor
adc
insl
adc
xor
nop
aas
loop
stc
scas
mov
aad
dec
cltd
push
shll
push
cld
mov
mov
outsl
cld
loopne
sbb
ss
xor
lods
jge
push
aas
mov
xchg
sub
sbb
or
mov
stos
sbb
jle
in
push
add
das
cmp
sbb
push
pop
dec
lods
xor
int
popl
mov
jnp
aam
lret
into
sub
pop
ret
sbb
dec
out
pusha
lods
iret
es
add
and
or
xor
push
sub
and
xchg
shll
jne
pop
and
out
shr
lcall
sbb
je
push
cltd
hlt
push
mov
insl
sbb
push
bound
mov
push
xchg
ss
neg
add
xor
lods
mov
pop
test
and
mov
push
test
inc
test
mov
cmp
sbb
jno
fsubl
xchg
ret
nop
loope
cltd
rcll
icebp
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
ret
loopne
icebp
xchg
stos
mov
stos
test
mov
adc
movlps
nop
inc
push
xor
rol
lods
mov
fidivrs
inc
addr16
outsl
jb,pt
sbb
cmp
jns
fwait
call
dec
sbbl
imul
jp
push
dec
je
mov
pop
mov
repnz
mov
outsl
clc
lahf
outsb
adc
mov
jne
lret
xchg
inc
div
mov
lds
sub
pop
test
adc
push
sub
test
jb
shlb
js
test
cmpsb
in
sbb
xor
push
leave
aad
add
icebp
mov
aam
push
insb
sub
xlat
fbld
push
and
xor
cmp
mov
or
in
push
in
popa
inc
and
outsb
add
or
push
mov
xchg
sti
mov
shlb
cmp
jns
sbb
aam
mov
push
fcompl
ret
clc
iret
xchg
cmpsb
sar
dec
jo
inc
outsl
std
sbb
nop
decl
push
jmp
fisubrl
adc
jg
inc
jl
push
adc
mov
mov
sti
dec
sbb
and
je
or
push
add
bound
adcl
sarb
fs
in
in
ds
popf
fadd
sbb
add
lods
pusha
mov
add
mov
dec
mov
mov
inc
add
pop
adc
loopne
aaa
jle
adc
xchg
mov
jbe
jbe
cmpsl
rorb
sbb
test
or
mov
mov
shll
arpl
fstps
lahf
dec
aaa
dec
lret
jae
les
or
insb
mov
pop
fidivrs
cmp
lock
sbb
int
test
mov
jge
in
sub
mov
mov
mov
mov
mov
xchg
stos
sbb
js
sbb
or
dec
mov
aam
cmpsl
jns
mov
pop
mov
mov
or
sbb
pop
sbb
cmp
add
jne
lods
int
sbb
je
jl
rclb
mov
or
xor
aaa
call
dec
dec
and
negl
insl
cmp
add
push
mov
xor
jp
and
in
push
pop
mov
cli
cmpsb
in
pop
dec
mov
cli
sub
dec
fcomi
mov
pop
addr16
test
icebp
xchg
jae
fdiv
xor
jl
inc
push
cmc
or
push
and
fnstenv
xor
dec
cmpl
mov
sarb
das
pop
add
inc
cltd
dec
mov
ja
lret
push
xor
repz
inc
les
add
inc
enter
add
inc
int3
cmp
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
jmp
cmp
iret
sbb
pop
push
lret
test
repz
adc
movlps
jp
loope,pn
jbe
insl
cmp
adc
inc
inc
loope
lock
imul
inc
test
subl
rclb
sub
pop
stc
ret
xchg
cld
push
add
xor
pop
push
out
pop
xchg
push
scas
or
pop
sbb
rol
xchg
xlat
js
cli
cld
lret
pop
arpl
vphaddubd
lea
and
mov
mov
push
inc
push
iret
lcall
jbe
out
mov
cli
xor
or
lahf
inc
and
rorb
cmp
loop
jmp
iret
xchg
das
ror
inc
fstps
jno
mov
stos
mov
mov
aaa
insb
xor
jge
ja
movsl
imul
xor
outsl
add
sub
ss
clc
fidivrs
inc
push
inc
scas
sbb
sahf
or
xchg
cmpsl
jp
js
add
dec
movsb
or
push
mov
cli
es
outsb
inc
scas
push
dec
push
adc
xchg
mov
add
adc
mov
mov
loop
push
dec
sahf
xchg
cltd
jl
fcoml
push
push
orb
xlat
push
mov
dec
xchg
pop
push
dec
pop
loope
repnz
jnp
movsb
mov
inc
xchg
xor
jb
das
test
aas
outsb
rcrl
push
int
pop
lcall
mov
mov
xchg
fistl
sbb
leave
test
jnp
inc
sahf
rol
outsl
pop
pop
mov
cltd
rorl
icebp
sbb
pop
cmpsl
jg
rcrb
pop
leave
clc
das
dec
dec
fstl
push
andl
lods
xchg
jns
subb
out
and
lret
gs
inc
xor
movsl
mov
push
sarl
mov
scas
in
addr16
adc
push
sbb
add
mov
xchg
lret
int
flds
pop
xchg
out
inc
cmp
aad
xchg
dec
je
ds
mov
sarb
add
ljmp
and
into
mov
jae
int3
mov
push
jmp
enter
test
in
scas
fiaddl
imul
pop
dec
div
mov
mov
mov
iret
aad
pop
es
mov
xlat
add
das
sub
dec
insl
cmp
movsl
leave
ds
in
bound
lcall
push
dec
sub
mov
xchg
data16
pop
mov
push
cli
xchg
push
lods
jge
jbe
or
adc
je
cld
cli
lcall
inc
psubb
orl
sub
test
scas
xor
nop
rcl
push
fidivs
add
outsl
lods
mov
and
leave
bndstx
jno
sbb
sbb
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
jmp
inc
in
sbb
sbb
fisttpl
out
add
adc
movlps
imul
int
arpl
push
add
mov
movb
pusha
mov
inc
xchg
loop
movsl
dec
push
hlt
shl
mov
push
imul
mov
adcb
push
insl
imul
and
adc
addb
and
dec
cmp
jl
xor
lods
or
shlb
pop
and
movsl
cmpl
jae
pusha
fsts
mov
add
jnp
cmc
rorb
push
jl
mov
xchg
daa
in
imul
and
pop
mov
fstl
add
out
rcl
pusha
aaa
mov
xchg
mov
daa
cmpsl
xor
xchg
adc
sahf
loop
add
jae
mov
call
inc
cltd
inc
repnz
and
jno
adc
jmp
outsb
in
mov
jb
jge
out
jmp
outsb
std
pop
sbb
out
or
or
ljmp
aad
mov
out
cli
cli
xchg
pop
js
int3
mov
mov
addb
mov
xor
pop
mov
fldl
and
test
dec
mov
adc
hlt
xor
jmp
add
outsl
popa
inc
xor
add
mov
push
push
leave
sbb
rep
pusha
scas
xor
pop
clc
cmp
aaa
dec
subb
add
dec
cmp
or
push
jne
adc
rcl
sbb
shr
addr16
pop
jmp
dec
sbb
inc
aas
add
jecxz
je
push
gs
out
insb
sub
and
incb
xchg
mov
cltd
cmp
adc
push
dec
inc
jno
adc
jnp
xchg
rcll
and
lcall
gs
jecxz
cld
or
fnstsw
test
sub
fwait
lea
scas
push
out
insb
xchg
jge
adc
fdivp
mov
inc
icebp
mov
or
dec
fadds
dec
push
mov
sti
cltd
test
aas
cmpsl
aaa
xchg
pusha
sbb
out
sbb
stos
inc
arpl
xor
outsb
in
push
psubq
scas
push
jecxz
mov
clts
data16
loop
jbe
pop
mov
stc
dec
ret
xchg
fcomps
fnsave
fldcw
pop
leave
ret
lret
jg
dec
sub
inc
jns
xchg
mov
dec
gs
in
pusha
lret
adc
popa
inc
inc
cmpsb
add
jb
mov
and
xchg
jge
faddp
and
dec
xor
pushf
xor
jge
add
pop
mov
push
pop
cwtl
or
push
inc
jl
jb
dec
jmp
lret
mov
xlat
push
or
push
rcl
jmp
lret
repz
jns
inc
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
jmp
and
sbb
loope
stos
mov
adc
or
data16
sub
out
insb
outsb
inc
xor
jge
cmc
arpl
inc
pop
xchg
subl
jecxz
mov
test
add
negl
rclb
or
inc
testl
push
add
cmpsb
add
xchg
hlt
aam
std
push
xlat
ret
pusha
test
outsb
adc
in
push
pop
into
xchg
dec
nop
enter
pop
insb
xchg
and
mov
popa
shr
in
cmp
xor
sub
outsl
test
out
jno
sbb
pop
or
stos
push
lods
lcall
fs
mov
andl
jp
popf
push
in
inc
mov
shlb
and
arpl
sar
pop
push
lds
scas
pop
mov
inc
pextrw
aas
xchg
mov
hlt
subb
pop
cmp
cli
testw
lods
or
xchg
insb
jbe
movsb
mov
icebp
jne
into
jae
mov
sub
xchg
addr16
mov
arpl
jo
cli
and
jg
xchg
mov
call
xchg
ret
xchg
sbb
xor
push
sbb
test
cld
sub
sub
mov
addl
dec
subb
jle
lea
cld
sbb
das
sbb
xchg
add
outsl
mov
popa
jp
ljmp
push
cli
xchg
mov
cmp
scas
shll
or
ret
adcl
cltd
jmp
or
pop
lret
pop
xor
and
mov
jb
leave
cmp
xchg
insl
lods
fs
push
mov
jl
pop
and
adc
or
mov
repnz
sti
push
inc
cmp
aam
mov
in
xor
adc
pop
repz
jns
adc
daa
xchg
xchg
cmp
dec
and
fstl
nop
sub
cmp
jmp
stc
pusha
jle
in
mov
cld
xor
ljmp
mov
mov
fs
fwait
push
xorb
aad
cmp
gs
mov
leave
jbe
int
mov
cmp
cmc
pusha
mov
jnp
les
add
enter
push
lea
stos
and
add
inc
mov
std
pop
sarb
jg
adcb
lea
jns
or
xchg
loope
dec
sbb
into
or
add
repz
out
inc
mov
pop
dec
dec
jge
inc
push
pushf
ds
push
jmp
pop
into
mov
incb
xchg
sub
popa
test
es
hlt
orl
fstl
add
mov
pop
je
imul
shl
pop
mov
push
ja
inc
dec
pop
jo
inc
xor
jnp
bound
lock
pop
iret
inc
fs
mov
and
imul
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
jmp
push
daa
sahf
xchg
sbb
add
lahf
mov
mov
add
adc
add
pop
loop
jp
sub
fadd
ds
leave
adc
jmp
sub
jmp
test
sbb
dec
hlt
test
test
jg
xchg
lock
mov
movsl
push
loope
lods
scas
leave
sbb
dec
in
outsb
xchg
inc
mov
push
inc
pop
gs
mov
mov
addr16
and
xchg
ljmp
sbb
and
int3
mov
or
lods
mov
push
mov
mov
add
adc
outsb
mov
mov
pop
or
mov
cmpsl
ss
xchg
dec
dec
fdivl
jle
cs
into
jnp
pop
add
push
pop
test
lret
data16
int3
pop
insb
fcmovb
test
jbe
call
jle
rorl
sbb
outsb
cwtl
das
icebp
cmp
out
psubusb
push
add
xor
mov
test
sbb
insb
push
cwtl
xchg
ss
pop
nop
mov
shll
rcrl
xchg
cmp
sbb
test
sbb
test
mov
cwtl
popa
pop
jg
stos
inc
inc
add
aam
push
out
cs
mov
int
cmp
push
into
inc
fsts
xchg
inc
sbb
mov
fiaddl
xor
notb
ss
pop
jae
xchg
insl
sbb
pop
push
mov
fildll
sub
mov
lret
fdivl
push
lcall
sub
and
sbb
shlb
xchg
aas
mov
shlb
sbbb
sti
cmpsl
sti
mov
adc
dec
jns
stos
loop
push
ss
pusha
push
cmp
pop
sub
sbbb
test
pusha
aas
bound
jecxz
push
mov
cmpsl
pop
push
cmp
cwtl
add
int
mov
mov
dec
jo
loop
xchg
lret
std
pop
cmpsb
movl
ljmp
negb
imul
aas
and
mov
mov
in
pop
fwait
cwtl
les
mov
mov
lahf
out
jo
sbb
jne
ds
pop
jb
mov
pop
ljmp
fisubl
sbb
shr
pop
xor
cmpsl
data16
rolb
jb
ret
jnp
clc
inc
push
mov
push
bound
fcmovne
pop
cmp
test
cmpsl
pop
out
lds
fsubrl
inc
inc
fcmovbe
push
in
out
fxch
rolb
mov
mov
and
pop
sbb
jae
mov
aaa
cmpsl
push
jg
test
sub
xchg
enter
xor
mov
iret
mov
or
cmpl
js
ja
fldcw
pop
mov
bound
add
mov
lcall
mov
or
cmp
sub
mov
mov
pop
lahf
fcoml
cmp
xor
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
jmp
pop
mov
sbb
sbb
mov
hlt
jl
lret
pop
into
lods
repz
or
sub
xor
nop
xchg
push
ss
or
xchg
repz
jle
jle
loopne
ja
cltd
shll
xlat
jecxz
mov
fs
fistpll
push
cmpsl
in
shlb
or
fsub
mov
sahf
add
aas
cld
dec
jg
insb
cmpsb
outsl
xchg
xor
nop
adc
xchg
and
outsb
jecxz
psrld
repnz
divl
jno
xchg
sbb
and
add
push
inc
jb
pusha
stc
in
cmpsb
out
sbb
lcall
adc
es
mov
xchg
push
mov
test
imul
ret
test
aaa
xchg
fneni(8087
mov
mov
ret
push
loop
pop
stc
adc
lahf
xor
mov
xchg
popa
fisttpl
into
jne
xchg
es
xchg
cmp
jnp
mov
cmc
mov
imul
and
loopne
data16
daa
sub
sub
das
arpl
inc
or
into
inc
ds
fsubrl
push
cltd
daa
movsl
push
filds
into
xor
outsb
dec
repz
je
out
loopne
js
dec
push
idivb
cmp
sbb
sub
in
daa
lret
cld
lret
cmp
cmp
test
daa
sbb
sub
sub
aas
sub
ffree
adc
lret
inc
ds
inc
push
dec
ja
ret
pop
or
ficoms
dec
fiaddl
xchg
cmp
ja
cmp
jae
lret
push
in
cwtl
repnz
scas
xor
add
scas
mov
mov
test
fnsave
pop
mov
jge
adcl
xchg
adc
cmpsb
fdivrs
mov
imul
mov
push
aaa
push
xchg
and
inc
ffreep
dec
fwait
or
mov
push
je
jge
xor
aas
fsub
dec
push
mov
ret
pop
cld
popa
push
lods
and
lock
lret
daa
icebp
repz
xlat
push
and
sbb
push
shl
dec
and
and
cmpsb
std
fsts
push
mov
or
gs
jnp
fidivl
dec
gs
incl
sahf
inc
lea
repz
je
dec
push
xchg
pop
push
leave
dec
jmp
mov
imul
inc
imul
arpl
jge
sbb
jge
aam
pop
lods
cmp
mov
pop
or
test
lahf
push
jmp
es
rclb
or
pop
sub
or
xlat
sub
sti
mov
jmp
xor
adc
cli
cmp
pop
nop
xchg
jnp
push
std
fistps
in
in
jl,pt
xchg
iret
and
insb
dec
pop
insl
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
jmp
xchg
mov
ret
sub
lcall
adc
jb
adc
scas
add
inc
inc
lahf
frstor
sti
adc
pop
insb
xchg
lret
sbb
mov
pushf
lret
jge
cmp
push
sbb
or
into
fnstenv
imul
inc
fmull
jmp
dec
mov
stos
or
push
pop
ret
sub
push
inc
mov
mov
xlat
aam
mov
leave
push
adc
lds
test
stc
cmp
pop
cmp
ror
nop
aam
push
xchg
lea
xchg
cs
dec
jp
push
testb
mov
inc
cmp
sbb
mov
jle
jne
imul
popa
hlt
ja
rolb
or
leave
imul
inc
adc
das
xlat
into
outsl
add
add
repz
mov
mov
jb
add
popa
push
jb
pop
pushf
inc
jle
cmp
pop
push
jecxz,pt
push
je
out
sub
jae
xchg
sub
pop
inc
pushf
pop
mov
or
cmpsb
mov
pop
sbbb
sub
adc
dec
fs
movsb
aam
outsb
pop
xor
jmp
ja
mov
sub
xchg
inc
testl
pop
push
ficomps
lods
ss
cmc
test
daa
rcrl
hlt
or
add
mov
cld
inc
push
adc
sbb
adc
or
insb
push
lods
xchg
jl
xchg
jbe
insb
jo
mov
dec
adc
push
mov
ficomps
xchg
sub
push
aas
jmp
pop
fcomps
adc
pop
imul
adc
jne
pop
pop
jnp
je
out
lods
ret
dec
mov
lret
outsl
sbb
test
add
xchg
xchg
test
lods
sub
inc
ja
push
insb
mov
lods
mov
lods
lahf
out
and
fwait
and
mov
dec
into
xchg
mov
mov
mov
outsl
or
pop
outsl
mov
lds
loope
push
cmp
push
mov
hlt
lret
inc
movsb
insl
fwait
pop
or
lret
push
jg
iret
clc
xchg
outsb
dec
cmpsb
inc
and
pop
cmc
pop
jae
out
jo
aas
inc
cwtl
cmp
xor
cmp
addr16
int
bound
fists
mov
movsb
and
in
pop
and
in
in
test
push
pop
lcall
adc
lahf
les
or
push
xchg
sbb
xchg
pop
mov
cmp
mov
dec
push
mov
ficompl
loope
and
pop
push
sub
push
mov
loope
enter
or
and
lods
cmp
jge
xchg
loope
loope
fwait
mov
mov
fs
stos
xor
sbb
outsl
jae
jmp
pusha
mov
xchg
pop
clc
std
loop
bound
xchg
ljmp
dec
mov
lds
repnz
popa
and
cmp
imul
mov
mov
jo
pusha
mov
mov
mov
cltd
stc
sub
pop
jae
inc
dec
outsb
push
ljmp
addr16
aad
aas
jl
scas
dec
pop
push
mov
add
inc
outsb
xchg
jge
xchg
daa
sbb
push
out
in
and
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
jmp
movsb
pop
rclb
push
cmpb
or
add
jp
adc
clc
int3
arpl
add
rolb
mov
jne
jae
xchg
ret
into
imul
into
mov
scas
add
cli
xchg
jp
test
mov
sub
inc
shl
mov
adc
mov
scas
mov
jl
sbb
mov
push
addb
xchg
std
jb
cld
out
int3
mov
test
push
pop
popf
cmp
push
jo
jo
stos
push
pusha
add
int3
mov
xlat
fstpl
push
popf
jl
in
idivl
test
andb
enter
sti
add
sub
add
out
mov
pop
push
and
inc
cmp
int3
xchg
or
adc
leave
out
outsb
jb
fstps
addr16
aaa
adc
cmp
inc
pop
cmpsb
je
xor
repz
dec
mov
mov
sub
dec
and
rorl
lds
push
xchg
bnd
arpl
sbb
cmp
sar
inc
and
xchg
mov
ret
fsubr
rcl
repz
ja
lcall
enter
mov
mov
sub
add
add
pop
fcompl
mov
sti
loopne
das
add
sub
sub
sub
fistl
mov
int3
outsb
in
adc
clc
icebp
mov
jl
in
adc
int3
sbb
mov
sub
mov
lea
dec
dec
or
and
sbb
jbe
ds
and
cmp
mov
fwait
stc
mov
add
inc
cmp
leave
je
daa
jge
insl
daa
insl
xor
stos
aad
sbb
pop
movsl
cmp
pop
shrl
fbstp
jns
mov
enter
pop
lret
sbb
or
push
daa
sub
sbb
mov
add
and
out
sti
xchg
jne
out
loope
mov
lcall
sbb
ror
cwtl
gs
mov
xor
loop
xlat
cmpsl
xor
pop
pop
push
test
std
je
push
sbb
dec
in
adc
leave
pop
jg
fiaddl
jmp
sbb
jge
mov
xor
iret
pop
aas
push
test
rol
fistl
sbb
inc
imul
ss
ja
orb
push
inc
and
xlat
xchg
adc
mov
ficoms
xor
push
dec
subb
jecxz
rolb
cmpsl
jne
and
ret
cmp
xchg
jp
sbb
gs
test
cmp
lods
xchg
inc
into
in
mov
ja
hlt
out
ret
dec
bound
cld
lret
or
push
lahf
push
aad
jecxz
push
add
pop
call
sub
mov
jo
cmp
mov
sub
in
test
add
sahf
out
jmp
sbb
push
stos
cli
jmp
or
pusha
inc
jae
aaa
cmp
sbb
movsl
or
push
pcmpeqb
mov
add
adc
or
outsl
or
out
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
jecxz
in
bound
pop
jne
inc
stos
lcall
adc
adc
push
pop
xchg
xor
ljmp
and
inc
inc
push
or
mov
lods
mov
push
inc
ljmp
mov
fadd
mov
push
out
adc
sub
xor
fs
in
jb
inc
negb
xor
pop
dec
mov
lods
jmp
jl
cli
jmp
movsb
jb
push
je
xor
mov
dec
jecxz
add
sahf
cwtl
cwtl
mov
pop
cmp
subl
and
and
mov
cmc
push
inc
in
mov
sbb
mov
cmp
repnz
cmp
inc
cmp
push
outsl
and
repz
std
cmp
loop
push
cmp
adc
mov
int
test
ja
std
jmp
rorl
cmpsb
fs
push
sti
or
lods
xchg
sub
mov
pop
scas
js
xchg
andb
push
adcb
mov
addr16
pop
in
je
jne
out
and
push
lods
negl
addb
sbbl
sbb
cli
insb
bound
mov
and
mov
sti
std
xchg
mov
icebp
sbb
or
mov
idivl
jp
mov
dec
pop
sub
scas
pop
in
dec
jbe
xor
hlt
jg
mov
xlat
pop
jno
jle
xchg
jbe
ljmp
adc
testl
jg
fnstsw
fisttpll
out
pop
addr16
in
fldl
repnz
int
aas
xor
cli
jb
shlb
aaa
mov
outsl
xor
outsb
je
mov
mov
mov
jle
lahf
mov
mov
dec
pop
aaa
shrb
mov
stos
stos
xchg
fdivl
xchg
xchg
jns
sbb
sbb
push
jae
jle
and
fwait
out
psrld
push
sti
sub
int3
cli
add
pop
mov
cmp
or
enter
push
iret
lcall
mov
test
and
loop
jo
leave
sbb
mov
aam
cld
lds
out
sbb
imul
inc
and
jnp
adc
cwtl
popf
repz
jb
es
sbb
push
pop
sarl
aad
lcall
ss
test
movb
mov
ss
shrb
ret
es
push
sub
adc
cmp
dec
lock
and
sub
arpl
sbbl
sub
repz
movsl
ljmp
fs
sub
stos
js
sti
jmp
popa
jmp
fldcw
in
push
dec
loopne
xor
lret
cmpsb
mov
movb
loop
sbb
repz
test
jb
into
push
out
cmp
add
mov
mov
fs
jmp
sub
and
insl
jl
dec
sahf
bound
mov
outsb
movsl
jle
adc
daa
jns
lcall
push
fmuls
jnp
add
lea
mov
shr
or
mov
jmp
pop
pop
mov
push
fisttpll
sarb
push
adc
jp
adc
flds
sub
sbbb
push
push
add
or
pop
into
mov
sbb
cli
adc
outsb
mov
pushl
dec
pop
push
fisubrl
int3
inc
sbb
pop
adc
dec
mov
mov
push
call
shrl
cwtl
ds
push
xchg
lock
push
lock
icebp
outsl
adc
pop
push
pop
aad
bound
or
pop
hlt
add
push
push
popa
adc
or
pop
pop
lahf
ja
adc
dec
cmpsb
pop
mov
leave
push
add
int
pop
jmp
cmc
montmul
cmpsb
xchg
dec
jl
dec
mov
outsb
popf
sbb
sbb
pushf
es
push
pop
dec
cmp
or
push
xor
lods
mov
roll
neg
and
or
xor
xlat
pop
loopne
push
loopne
cli
aam
pop
mov
sahf
xchg
outsl
mov
je
sbb
das
test
pcmpeqw
sub
imul
sub
sbb
in
sub
testl
mov
lds
push
push
push
or
mov
sub
mov
fisubrl
mov
mov
sub
dec
xchg
adc
push
push
push
sub
inc
mov
push
pop
out
xor
sbb
stc
sub
xchg
cmp
add
sub
pop
dec
loop
push
sub
sarb
add
mov
les
xchg
sbb
popa
mov
sbb
push
pop
fidivrl
jmp
ret
cmpsl
repz
addl
mov
dec
in
jle
movsl
mov
push
mov
jae
add
xlat
push
pop
outsl
jns
push
sti
inc
pop
mov
in
pop
lcall
mov
push
adc
jo
mov
and
mov
repnz
js
ret
fcompl
jl
add
mov
cmp
pop
xor
pop
sarl
mov
xchg
add
sahf
out
inc
dec
test
mov
lcall
mov
xor
repnz
add
test
mov
sub
clc
adc
leave
ds
ljmp
sub
ss
daa
inc
xchg
ds
mov
mov
es
pop
mov
repnz
or
cltd
push
mov
loope
mov
add
dec
decl
bnd
das
cmp
xor
fsts
inc
adc
fdivr
cli
in
negb
adc
mov
bound
cmpsl
push
and
jae
js
mov
adc
sub
repz
push
fiadds
lods
stos
data16
in
jmp
cmp
ss
orb
xchg
das
mov
pop
dec
push
jns
or
add
cmc
jno
arpl
cwtl
dec
cltd
jo
cmpsb
or
dec
cli
pushf
add
lret
jns
daa
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
mov
add
push
push
add
push
or
mov
sbb
mov
shrd
cmpl
movzbl
movl
mov
jmp
mov
mov
jne
push
push
push
pushl
push
pushl
call
orl
and
mov
mov
sbb
sub
negl
shr
cmpl
movl
mov
jmp
movzwl
jg
push
push
pushl
call
add
movzbl
adc
mov
adc
movzbl
sbb
xor
xor
xor
mov
sub
sub
mov
adc
mov
movzwl
or
mov
mov
movzbl
xor
xor
xor
mov
xor
mov
or
neg
mov
mov
sbb
shl
mov
sbb
shrd
sub
xor
adc
shr
xor
or
add
mov
jmp
jnp
add
mov
ficoms
push
in
mov
adc
jge
xor
jl
add
and
test
pop
jmp
jne
mov
sbb
hlt
cwtl
push
rcrb
enter
dec
pop
jmp
pop
sbb
mov
jmp
lahf
and
mov
push
shr
jmp
addr16
jl
ror
ret
jns
adc
fs
imul
sub
clc
sub
mov
mov
cmc
xor
nop
xchg
or
outsb
lea
pop
test
sub
xchg
sbb
adc
bound
sar
fistl
cmp
in
in
pop
push
mov
lahf
fisubrl
push
mov
clc
push
sub
sbbb
xchg
xor
xchg
ds
jmp
mov
and
cmp
mov
call
dec
into
push
cmp
lds
adcb
pop
jne
mov
fdivrl
jge
add
sub
xor
dec
xlat
sbb
jge
or
cwtl
mov
les
jb
and
js
cltd
mov
jb
shrl
push
mov
fists
push
xchg
popa
shlb
aam
call
insl
hlt
jns
fs
test
stos
jns
xlat
imul
jb
repnz
fs
push
pop
fs
in
jo
fwait
aad
cmpsb
ret
loope
test
mov
or
pop
pop
mov
add
test
in
adc
sahf
call
out
or
stc
mov
xchg
adc
fnsave
lret
scas
stos
fs
mov
pop
std
adc
in
lock
fistl
sub
out
jle
inc
pop
pop
dec
mov
sbb
out
call
jg
push
mov
pop
or
sbb
add
xchg
and
aas
ljmp
push
into
and
leave
test
dec
scas
xor
es
insb
push
movl
inc
mov
inc
jb
or
and
fiadds
mov
mov
cld
jle
mul
test
mov
cmpsb
mov
xor
mov
sub
mov
dec
out
pop
rclb
jae
lods
shr
cwtl
in
leave
loope
ja
sbb
xchg
maxps
out
adc
scas
push
les
aas
add
dec
cs
test
fiadds
sbb
les
dec
pop
pop
fwait
dec
lcall
fwait
jns
out
stc
mov
adc
shrl
adcl
mov
adc
jmp
xchg
mov
sub
les
loopne
adc
lea
adc
sub
cmp
xchg
cmp
mov
adc
mov
push
movsl
pop
adc
ljmp
pop
lock
dec
mov
iret
loop
ret
js
jecxz
jl
cmp
mov
xchg
iret
push
mov
popa
xchg
clc
je
mov
inc
add
adc
jle
jle
add
or
dec
fistl
xor
cld
mov
inc
add
lods
lock
mov
ret
mov
movsb
or
das
adc
cs
inc
jno
stc
or
jbe
addr16
sub
test
mov
push
lods
ja
cmp
mov
repnz
pop
fisttpl
arpl
clc
lods
mov
sbb
jns
xorl
mov
jae
je
js
mov
or
popf
jnp
or
iret
rcrb
pusha
pop
in
inc
jne
sub
insl
cmp
es
nop
adc
pop
jg
inc
cmp
sub
pop
xor
imul
pop
pop
xor
jae
or
add
fs
ret
jno
xchg
mov
fcmovnbe
jo
and
fsts
js
aaa
stos
fsubl
loopne
js
out
xchg
pusha
inc
lock
xlat
inc
jbe
cwtl
daa
jecxz
sub
cmp
test
mov
test
inc
mov
add
mov
lret
cwtl
gs
lods
cld
push
fstps
xor
lcall
jecxz
sub
add
ret
add
je
loopne
sahf
data16
cmp
jl
ret
jl
test
out
inc
imul
repnz
cld
out
out
sbb
cmpsl
cs
cmpsb
popf
int3
fcompl
std
mov
mov
jle
fnstcw
outsb
jle
or
iret
pop
lcall
ja
cmpsl
mov
jb
std
mov
aad
sub
push
pop
add
cld
clc
mov
jns
enter
js
fdivrs
mov
int3
sub
lods
mov
fwait
popa
stos
mov
ret
fimull
andb
cmp
jp
jne
outsb
xchg
push
sub
in
push
cmp
loope
scas
insb
js
bound
ja
and
in
shlb
dec
pop
xchg
mov
stos
mov
dec
xor
dec
jnp
push
inc
add
mov
lods
push
mov
out
add
aas
mov
pushl
mov
jecxz
xor
cmpsl
mov
aam
push
iret
adc
rclb
push
or
cmp
add
add
mov
xlat
mov
jmp
mov
jg
push
push
push
call
sbbl
adc
andl
mov
mov
xor
xor
or
mov
adc
adcl
neg
xor
or
mov
mov
sub
or
mov
mov
xor
or
mov
sub
sub
mov
xorl
mov
or
mov
xor
mov
movzwl
sub
mov
cmpl
mov
mov
mov
jmp
mov
jle
push
call
sub
and
subl
or
or
adc
mov
mov
cmpl
movzbl
mov
jmp
mov
jb
push
push
call
mov
xor
xor
sub
or
xorl
adc
sub
sbb
mov
shl
mov
sub
xor
or
xor
sbb
mov
xor
adcl
shld
shl
mov
mov
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
xor
xor
add
sbb
xor
xor
mov
cmpl
mov
mov
mov
mov
jmp
movl
movl
jg
push
call
movl
and
sub
subl
movl
mov
shld
movl
shl
cmp
movl
jne
movl
cmp
je
and
mov
xor
or
and
mov
push
movl
pop
or
xor
shl
mov
addl
xor
adcl
shr
addl
or
mov
or
mov
mov
mov
mov
cmpl
movzbl
mov
jmp
mov
mov
jl
pushl
push
pushl
push
call
mov
add
inc
mov
and
sub
mov
jmp
add
int3
sub
inc
les
pop
inc
adc
lea
adc
call
subb
negb
xchg
adc
or
mov
push
jno
adc
mov
addl
negl
sub
add
push
sub
mov
aad
add
xchg
or
dec
cli
xchg
mov
repnz
or
movb
adc
cmpl
js
dec
sub
or
pop
mov
xchg
add
xchg
movsl
xor
out
push
fsub
mov
add
je
scas
test
je
sbb
jmp
pusha
mov
jae
xchg
pop
xor
xchg
sbb
loope
insl
js
lds
sarl
int3
ds
bound
test
incl
sbb
fisubs
scas
ret
push
loopne
dec
xchg
jne
int3
or
xchg
cs
pop
pop
movsl
add
fiadds
in
xor
leave
lahf
dec
icebp
hlt
int
and
pop
test
mov
and
or
dec
xchg
nop
iret
aaa
daa
stos
icebp
mov
and
fwait
insl
stc
fidivs
adc
mov
imulb
mov
nop
addb
jg
aas
sub
test
sub
dec
ret
sub
xor
adc
inc
push
mov
mov
hlt
mov
aad
sub
sub
pop
clc
les
cmp
adc
push
sbb
mov
adc
and
pop
iret
or
sahf
popf
outsl
cmpsb
mov
and
popf
or
jp
and
ljmp
dec
sub
ret
daa
jge
push
push
fs
ja
push
and
lahf
fcomps
nop
shll
add
inc
cmpsb
jecxz
cmp
lahf
jg
add
test
mov
push
ds
sbb
mov
cvtdq2ps
fmull
cmp
xchg
dec
arpl
pop
mov
mov
dec
cmp
cltd
xchg
mov
ret
xchg
pop
and
jbe
loop
xor
jne
adc
and
in
shl
call
orl
rol
sarl
jge
pop
decb
add
lret
repz
xchg
add
ds
or
mov
adc
jg
jb
xchg
add
cmc
aad
and
addr16
sbb
fnstsw
push
push
mov
jb
cs
fidivrs
inc
arpl
sahf
bound
mov
popa
jb
repz
push
dec
and
lea
sbb
into
call
dec
hlt
xchg
push
sub
jnp
xchg
xchg
or
adc
sub
mov
subl
add
mov
cmpl
movzwl
movzbl
mov
mov
jmp
movl
movl
ja
pushl
call
or
and
or
xor
mov
adc
adc
mov
xor
mov
lea
andl
mov
addl
mov
xor
mov
xor
xorl
xor
addl
shr
subl
shl
or
mov
movl
add
mov
mov
xor
xor
andl
shr
addl
shl
sbbl
or
subl
push
lea
push
subl
lea
push
call
cmpl
mov
mov
jmp
mov
movzwl
ja
pushl
push
push
call
adc
movzbl
sub
and
mov
xor
adc
or
sub
xor
xor
mov
and
mov
cmpl
movl
mov
mov
jmp
movl
movl
jae
push
pushl
pushl
pushl
call
sbb
sub
adcl
or
sbb
xor
add
mov
sub
and
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
mov
pop
cmp
shlb
fisubl
dec
mov
lea
adc
dec
sbb
call
adc
cmc
jge
ss
je
dec
mov
ja
jae
push
mov
aam
cmp
nop
pop
mov
movsb
push
sbb
pop
sarb
pop
test
push
je
xlat
aas
out
cld
clc
daa
cmp
icebp
jecxz
adc
popa
and
dec
cmp
pop
popf
mov
inc
fadds
clc
pop
jb
adc
and
sub
add
cs
jmp
jno
fnsave
mov
scas
jmp
sub
push
jns
or
xor
mov
fs
cmp
xchg
sbb
imul
xor
sbb
push
out
jo
movsl
lea
lock
add
nop
je
pop
rorb
jecxz
sbb
cmpsl
xchg
and
jecxz
pop
sbb
lock
mov
add
jmp
fs
les
mov
out
add
in
mov
cmp
jecxz
repnz
cmpsl
xlat
jo
mov
fidivs
jmp
push
movsl
mov
mov
mov
mov
xchg
xchg
sahf
data16
loopne
test
cmp
aaa
cld
push
sub
jnp
in
mov
sub
xchg
mov
fsub
lods
insb
gs
or
mov
cld
adc
add
xchg
mov
and
fs
mov
data16
pop
fdivs
xchg
mov
mov
add
lea
push
pop
mov
test
adc
jb
push
cltd
pop
sarl
jne
pop
call
ret
iret
fsubrp
nop
and
test
jae
aas
sbb
dec
or
cmpsb
in
pusha
sbb
and
xlat
popa
add
mov
push
es
mov
jecxz
hlt
pop
sbb
pop
and
jbe
push
rorb
mov
loope
sbb
jp
jnp
xchg
in
sub
xchg
lret
sub
cmpsb
out
fiaddl
and
cs
mov
bswap
mov
lret
loop
pop
push
ja
sbb
dec
adc
daa
or
jbe
es
or
sbb
dec
jg
iret
push
fwait
cmp
pop
xor
mov
inc
pop
scas
pusha
arpl
loop
dec
mov
scas
iret
mov
mov
movsl
hlt
add
cmp
pop
xor
mov
mov
ljmp
xor
pop
mov
cmpsl
stc
mov
pushf
push
pop
inc
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
jmp
xchg
sbb
sbb
cmp
jle
xor
adc
mov
jp
test
cwtl
jns
xchg
cmc
insb
loope
cmpsl
and
fisubs
sub
xchg
push
and
and
push
adc
ret
and
jmp
sbb
jmp
sub
rcrl
fs
inc
cmpsl
inc
or
call
mov
stc
fs
stos
cmc
das
fs
add
outsl
push
mov
sbbl
shr
and
mov
cmp
repnz
xor
fldl
ss
int
ret
xchg
jmp
fldcw
in
inc
outsb
pop
pop
shl
jno
or
dec
push
je
add
outsb
subl
jbe
dec
pop
xchg
mov
dec
pusha
inc
int
enter
call
test
pop
clc
sbb
dec
sub
pop
enter
pop
popf
inc
xchg
imulb
das
mov
stos
mov
mov
xor
dec
jmp
ret
fcmove
adc
and
popf
repnz
aam
js
nop
adc
pusha
fisubs
ret
loope
dec
outsb
arpl
cmc
jmp
int3
xchg
sub
mov
out
jmp
mov
jo
mov
test
mov
dec
sbb
test
cmpsl
mov
or
sbb
orb
mov
mov
mov
in
mov
dec
mov
in
cmpsl
mov
ret
int3
daa
andl
fsub
call
mov
cmp
mov
push
mov
popf
and
popf
in
push
add
mov
cmp
pop
mov
movsl
out
lret
dec
dec
inc
jecxz
xchg
or
xlat
add
jne
mov
xchg
lods
orl
mov
adc
xor
outsb
mov
jg
gs
cwtl
daa
int
popf
sahf
movsl
movsl
mov
cwtl
push
push
push
int
or
daa
pushl
addb
in
outsl
sub
ss
sbb
lahf
sbb
movsl
jo
dec
addb
inc
pop
stos
adc
out
scas
mov
sbb
jp
cmp
std
jg
nop
xchg
sub
jle
aam
lret
and
jle
push
bound
adc
xor
xchg
cmp
mov
ja
xor
lcall
mov
add
adc
inc
shl
aas
jae
pop
ret
xor
pop
iret
or
or
jmp
movsb
push
popa
jo
sahf
mov
adc
push
fmull
inc
aad
mov
adc
mov
pop
mov
int3
movsb
out
imul
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
jmp
mov
add
sub
jle
sub
dec
xor
lea
adc
dec
add
loop
add
and
mov
push
dec
ljmp
ret
fcomps
mov
movsl
hlt
mov
push
jne
mov
testb
mov
fs
xor
cwtl
nop
xor
bound
mov
add
out
sti
push
mov
push
xor
sub
xor
push
sbb
jns
mov
inc
fists
insl
sub
adc
xchg
sbb
imulb
orb
sahf
add
cli
aam
xor
rcr
mov
pop
outsb
lea
xchg
sbb
and
lahf
sbb
push
xchg
fstl
or
jns
mov
pop
call
cmpsb
stc
xchg
add
sbb
fiaddl
call
cmp
dec
in
mov
insb
sbb
mov
inc
xchg
popa
sub
mov
push
loopne
mov
mov
loopne
scas
ret
sbb
jle
test
adc
dec
addr16
cmpsb
popa
mull
fiaddl
mov
mov
push
lods
mov
jnp
mov
mov
loop
scas
cmp
sub
xchg
stc
repz
jecxz
push
lret
hlt
xor
repz
sbb
mov
xchg
jns
sbb
mov
movsl
or
cs
faddl
out
stc
call
jp
or
and
push
jo
inc
mov
jge
repnz
sbb
cmp
inc
enter
aas
push
push
leave
fisubl
mov
lcall
enter
mov
xor
js
adc
pop
lret
movsb
fwait
loope
mov
cmp
scas
nop
in
push
test
sub
fld
mov
xchg
dec
cmp
fmulp
xor
xor
scas
lods
js
outsb
ret
jg
fisttpll
fidivrl
mov
pop
adc
lock
popf
add
pop
in
lock
fwait
sub
and
insl
xor
cmc
rcrl
pushf
push
jb
cld
push
and
lock
pop
dec
sbb
push
lods
or
add
and
pop
imul
sub
xchg
mov
push
lods
or
cmpsl
or
inc
movsl
add
lods
arpl
mov
push
inc
pop
pop
mov
pop
cs
xor
sbb
mov
jb
mov
test
jo
xchg
jne
mov
in
insl
jg
mov
leave
andb
xchg
outsb
push
stos
inc
std
push
pop
fidivrs
sub
mov
mov
mov
add
arpl
subl
cmp
mov
xor
xor
or
push
add
jmp
and
lods
and
js
add
adc
stos
sti
xor
shlb
shll
mov
in
scas
sub
dec
and
sbb
push
adc
xor
mov
pop
sub
iret
or
jae
scas
sub
or
jb
mov
cli
and
or
dec
jle
mov
push
lret
loope,pt
xchg
mov
push
pop
xor
stc
add
ja
in
pop
mov
sub
pop
cmp
es
sub
push
cmc
loope
xor
add
push
sbb
popa
rol
mov
das
jae
push
jns
xchg
or
sub
subl
adc
xchg
lods
inc
mov
ja
scas
mov
call
arpl
in
xchg
inc
scas
cmp
iret
xchg
pop
out
rclb
das
imul
cmp
jne
inc
test
aas
movsl
push
dec
shrb
les
and
pop
out
test
mov
mov
outsl
aam
lret
dec
fidivrl
ss
arpl
mov
cli
adc
cs
movl
sub
rcl
and
rcrl
add
pop
sbb
cmp
and
daa
dec
push
xor
xor
push
outsb
adc
or
outsb
push
xchg
and
lret
mov
in
xor
stos
mov
les
je
cs
and
fcoms
ror
imul
sub
sub
jb
adc
insb
add
sbb
cmp
lods
cmp
out
iret
outsl
ja
std
repz
add
sub
mov
insl
leave
lods
jnp
sub
and
divl
loop
sub
push
test
lret
inc
iret
push
cmpl
mov
inc
gs
sti
add
lock
in
js
pop
xchg
test
mov
inc
in
pop
xor
scas
lret
outsb
xchg
sbb
arpl
cltd
setnp
jo
in
scas
aam
xchg
rcrl
xlat
js
mov
repz
add
sbb
cmp
adc
dec
gs
lcall
inc
pop
movsb
inc
ss
int3
jnp,pt
pop
xor
repz
dec
cwtl
jmp
push
call
loope
inc
mov
xchg
out
pop
dec
xlat
and
mov
test
inc
ljmp
sub
jne
mov
rorb
cmp
inc
les
les
xor
pop
je
push
data16
aas
lret
mov
or
test
rcr
cmp
push
push
xor
inc
push
shl
call
jmp
outsl
xchg
pop
test
add
mov
movlps
lcall
aam
lods
push
mov
addr16
movsl
mov
shlb
int
insb
cmp
xorb
icebp
sub
mov
fildl
dec
sub
call
popf
testl
or
pusha
xchg
xchg
mov
leave
notb
sbb
dec
mov
mov
out
lfs
idivb
dec
adc
cmp
mov
dec
test
and
ud1
loopne
cmp
or
iret
lcall
mov
adc
jecxz
push
into
iret
inc
pop
movsb
dec
jnp
mov
out
out
pop
xchg
sub
cmp
xchg
jle
jns
test
xchg
mov
inc
and
jl
lfs
push
cltd
sarl
lock
xchg
add
out
dec
cwtl
std
sub
test
mov
lods
jns
sbb
add
icebp
and
mov
xchg
gs
push
mov
sti
jbe
ljmp
cmpsl
xor
scas
es
add
pop
sahf
aad
lock
loop
movsl
arpl
addr16
mov
ja
adc
scas
adc
xlat
sub
pusha
lahf
jp
bound
inc
inc
inc
test
out
jno
pop
lds
nop
frstor
mov
stc
cli
xchg
aaa
and
shrl
pop
mov
and
mov
rolb
dec
mov
adc
and
pop
scas
cmpsb
inc
jbe
mov
aam
lds
outsl
sbb
call
ss
push
jno
sub
sbb
sub
xchg
movsb
aam
xchg
aam
ss
into
ss
sub
push
or
aas
aas
aas
push
adc
cmpsb
sahf
mov
bnd
sub
pop
adc
pop
xchg
sbb
dec
test
sbb
fldl
loope
push
ljmp
jns
loopne
nop
or
pop
mov
and
fbld
lods
pushf
aad
fwait
jp
icebp
enter
mov
add
addb
add
in
mov
jno
push
loop
lea
popa
xor
add
xchg
test
push
mov
and
mov
testb
mov
scas
adc
pushf
add
shll
xor
popa
nop
fcmove
ja
cli
hlt
ror
sub
xchg
shlb
push
add
cmp
sarb
xor
inc
xchg
mov
call
stos
into
sbb
inc
adc
enter
add
adc
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
jmp
jge
jbe
jne
jge
das
adc
pop
lods
push
sbb
adc
add
xor
mov
mov
loope
mov
mov
jno
pop
insb
pop
inc
pop
adc
icebp
test
pop
insl
pop
aaa
sub
movsl
push
mov
pushf
test
in
cmp
add
popa
add
fstpt
dec
xor
into
inc
cmp
daa
cmove
cmc
sti
sub
jp
inc
jmp
sub
xor
jo
lret
rclb
sbb
outsb
das
je
movb
cwtl
insb
mov
cmp
scas
aas
sar
jg
sub
int
inc
xor
xchg
mov
fcomps
xchg
or
or
mov
cltd
insb
sbb
mov
lahf
stos
hlt
in
out
and
cbtw
and
pushl
inc
sbb
dec
add
sub
es
jne
add
or
inc
enter
push
or
lods
pusha
xchg
cmp
repnz
pop
in
mov
or
sbb
rol
rcr
gs
jo
testl
inc
shlb
mov
movb
hlt
pop
and
ret
loopne
adc
xor
iret
mov
rorb
or
jne
pop
adc
mov
lret
sub
add
push
arpl
pop
ret
adcl
jecxz
xor
fnstsw
int3
loope
cli
sub
in
mov
in
test
outsb
cld
mov
sub
mov
jl
pop
pop
lods
or
les
std
mov
mov
rcrb
ret
ljmp
add
xor
cwtl
ss
arpl
stos
cmpsb
xchg
stos
jge
popf
push
out
ret
pop
inc
and
add
inc
dec
scas
pop
pop
mov
rcl
lods
in
cmpsb
imul
mov
xchg
ss
pop
notb
fistps
cwtl
mov
ficoml
popa
lods
shl
fisubrl
jge
sbb
aam
jge
mov
and
call
mov
jmp
cmp
mov
call
out
loop
sub
pop
cmp
mov
xchg
dec
ret
jnp
incl
cwtl
jb
jmp
cli
iret
fsubl
jg
cli
call
xchg
sti
add
cmp
inc
lods
or
inc
mov
or
lods
xor
pop
and
mov
movsl
jo
dec
sbb
ja
xor
xchg
inc
pushf
shlb
xor
mov
dec
sbb
xchg
mov
mov
cmc
shl
dec
mov
mov
xor
sahf
repnz
or
jnp
lock
pop
cmc
fs
lock
inc
push
outsb
fimuls
add
jecxz
or
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
adcl
or
mov
mov
jne
cmpl
movl
movl
movl
jmp
mov
mov
jne
push
pushl
pushl
push
call
adcl
sbbl
add
orl
xorl
subl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
fs
push
stos
sbb
dec
loop
ror
fidivrs
mov
call
jnp
push
lock
ljmp
cmpsl
scas
adc
nop
jnp
rorl
pushf
fnsave
pop
int
push
insb
dec
cs
andl
push
call
or
inc
push
sbb
or
lahf
xor
fwait
addl
xchg
sub
pop
cmp
mov
cmp
rcll
outsb
push
imul
mov
jbe
imul
test
or
fiaddl
pop
inc
push
inc
rcrb
fisubrl
lea
adc
sbb
adc
xlat
add
add
sti
lock
cmp
jmp
cmp
mov
arpl
xchg
jbe
mov
imul
lods
sbb
mov
and
fistl
sub
jle
imul
int3
mov
stos
xor
lea
mov
dec
cmp
inc
xchg
repz
mov
imul
fsqrt
stc
jns
adc
shr
insb
and
orb
cmp
fiaddl
add
ds
stos
mov
cmp
add
icebp
movsl
fs
outsl
testl
js
adc
push
jl
mov
into
cli
outsb
and
mov
je
stc
adc
shlb
lods
in
mov
mov
lods
leave
dec
add
in
sbb
mov
jl
out
and
cmp
inc
sbb
adc
cltd
cld
and
mov
test
movsl
pop
mov
call
arpl
sub
mov
fists
lret
sbb
or
dec
xchg
mov
jnp
push
xlat
sbb
sbb
rol
stos
loopne
push
into
push
fidivl
push
mov
jns
xchg
jnp
xchg
loop
test
cmp
inc
jle
lods
into
lea
test
jle
dec
add
mov
fwait
scas
insl
add
xchg
jo
arpl
daa
scas
jg
sub
xor
inc
add
pop
jge
push
xor
xchg
pop
or
adc
dec
lds
lea
adc
mov
in
aam
ja
sbb
into
xchg
or
inc
push
push
xchg
and
pop
movsb
imul
and
pusha
pop
mov
out
or
and
mov
adc
jne
pop
sub
imul
mov
xorb
mov
mov
in
push
push
and
adc
add
insb
jge
push
sti
cwtl
adc
mov
arpl
push
shrl
notb
jg
sub
xchg
data16
cmp
aas
rorl
pop
das
icebp
inc
sub
or
roll
mov
mov
inc
das
out
sbb
jp
fsubrs
jle
fwait
mov
cltd
xchg
imul
xor
pop
es
xlat
ret
dec
sarl
xchg
xor
sbb
cmc
repz
out
push
adc
and
scas
cmp
pop
xor
push
icebp
jo
xor
and
jne
cmp
or
mov
push
and
mov
jl
js
mov
daa
push
adc
pop
cmpsl
pop
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
jmp
imul
scas
std
dec
and
adc
unpckhps
mov
lock
sbb
outsb
insl
mov
sbb
or
jo
lcall
and
sti
cltd
jecxz
stos
adc
ja
xchg
push
or
std
xor
xor
jmp
in
dec
dec
sub
mov
fwait
mov
add
out
or
cli
or
jbe
mov
imul
test
fisubl
sub
lock
adc
jecxz
rep
sahf
stos
addr16
adc
cld
les
imul
outsb
adc
or
jbe
jo
nop
stos
repnz
out
out
test
mov
sub
repz
cmp
sbb
leave
shrb
sbb
push
sahf
push
cmp
inc
pop
mov
dec
sbb
dec
fnstsw
sbb
lret
pop
pop
iret
movsl
mov
neg
mov
repz
lds
add
jg
rorl
movsb
cmpsb
sahf
cmp
jp
mov
push
leave
xor
xor
pop
inc
in
fcmovu
in
mov
cltd
mov
fs
sbb
cmp
cmp
inc
lret
ret
loop
loop
stc
mov
add
sbb
dec
movsb
adc
xor
sub
js
xchg
mov
fadd
sbb
mov
insb
inc
sub
mov
insl
push
andb
dec
mov
imul
jecxz
lea
mov
pop
xchg
std
out
xchg
arpl
xchg
data16
js
rol
inc
cmp
xchg
lock
cmp
mov
xchg
push
stos
and
mov
mov
imul
push
mov
jp
popf
jecxz
stos
fmull
pop
pusha
inc
insl
mov
mov
push
in
repz
jne
cld
movsb
fbld
cmpsl
mov
xchg
sbb
int3
adc
scas
movsb
rclb
pusha
dec
rcl
jo
xor
lods
into
fcmove
add
fldt
rcrb
cmp
cmpsb
push
scas
stc
stc
fbstp
and
and
arpl
inc
nop
xchg
arpl
imul
mov
mov
push
jmp
outsl
mov
test
fsubrs
xchg
sti
cmpsl
pop
pop
push
std
hlt
pop
pop
inc
fdivl
ja
and
dec
ljmp
jb
add
fidivl
xchg
pop
pop
lock
or
sbb
mov
fs
andb
enter
mov
xor
in
mov
outsb
xor
pop
xor
cmc
aaa
lahf
adc
push
or
add
das
loope
cmp
mov
push
pop
push
xlat
int3
cmpsb
inc
inc
inc
push
cmc
mov
stos
and
mov
lock
lods
in
adc
mov
jne
jge
and
out
mov
imul
rcrb
sti
out
fidivs
xor
sub
jnp
int
ss
fistl
mov
push
dec
cmc
xchg
adc
stos
sub
das
add
or
jecxz
int
and
xchg
adc
xchg
and
js
push
sub
dec
push
pop
inc
lods
jne
inc
pop
sub
js
cli
mov
or
fimull
fwait
jp
loope
mov
cld
cltd
sar
pop
test
dec
and
push
xchg
in
jl
lea
add
xchg
gs
leave
jnp
add
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
jmp
lret
lahf
push
pop
sbb
leave
pop
jmp
call
stos
filds
adc
adc
pop
sbb
xchg
js
clc
scas
pop
in
sahf
push
sub
mul
xchg
jno
loop
cltd
push
in
mov
mov
xorb
xchg
insb
push
and
xchg
and
pushf
push
gs
mov
out
sub
cmp
or
xor
xchg
aad
xor
jge
in
cmp
rclb
stos
xor
stc
in
sbb
jmp
cmp
pusha
xor
lods
es
daa
sbb
mov
jl,pt
loopne
lcall
movsb
cmpsl
test
dec
cltd
cmp
popa
jp
shl
sub
adc
xlat
mov
lcall
xchg
pop
jae
inc
ja
int3
insl
pushf
hlt
loope
cmpsb
sbb
push
mov
and
sbb
fwait
aam
outsb
aas
xchg
test
xchg
shl
mov
bound
xor
push
jo
cmp
cwtl
or
ja
loopne
xor
and
adc
mov
rol
fucomip
test
jns
les
adc
out
cwtl
sbb
fcoms
es
and
int
enter
or
fucom
int
loope
icebp
in
xor
fisubrl
add
aas
mov
mov
ds
sub
imul
mov
je
dec
mov
xchg
push
in
or
popf
mov
iret
jne
es
add
mov
mov
call
inc
mov
pop
enter
addb
das
and
cs
pop
and
push
adc
jg
sbb
adc
or
mov
mov
movsb
dec
xchg
cmpb
sub
and
test
addl
mov
cmp
jge
repz
sti
mov
inc
xchg
shrb
dec
data16
mov
push
call
mov
fdivl
pop
jne
shll
fwait
push
adc
and
xor
fwait
push
in
imull
xchg
mov
mov
xchg
inc
addb
movsb
jo
daa
cmp
push
mov
sbb
hlt
out
int
enter
lcall
dec
testl
daa
lods
lods
in
inc
pop
scas
in
aam
inc
xchg
pop
mov
cmp
idiv
push
mov
and
movl
mov
pop
movlhps
sbb
faddl
mov
outsb
pop
ljmp
add
rcrb
pop
call
pop
mov
aas
inc
push
xchg
inc
daa
movsb
mov
jecxz
enter
adc
jp
jno
adc
inc
aam
stc
xlat
fcom
jo
fdivrs
push
xchg
xor
lods
jbe
loope
jns
add
int3
div
mov
popf
or
or
push
fmulp
mov
stos
cli
mov
ja
mov
stos
mov
repnz
imul
pop
jecxz
cs
lret
out
loop
gs
iret
pop
mov
daa
test
or
mov
mov
and
movb
inc
push
xchg
cli
sbb
pop
push
and
dec
stos
adc
pushf
pop
mov
insl
xor
add
imul
aaa
fsubr
mov
add
xchg
repz
test
lcall
pop
loope
mov
subb
daa
and
pop
les
rclb
int3
imul
xor
or
xchg
jmp
movsb
cltd
push
incb
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
call
mov
movzbl
push
call
test
jne
xor
jmp
adc
mov
cmpl
movl
movl
movl
jmp
movzbl
jbe
pushl
call
orl
addl
adc
sbbl
andl
mov
xor
mov
jmp
xor
push
or
cli
sbb
imul
js
call
adc
jmp
jg
mov
jnp
xor
scas
sbb
sbb
test
pop
sbb
lahf
fwait
push
int
jmp
mov
pop
test
mov
fwait
push
jge
pop
test
jge
adc
mov
xchg
loope
test
mov
mov
fmuls
ja
repz
dec
jns
pop
push
or
add
test
in
ds
je
inc
cmp
cmp
into
cwtl
lods
lar
idivl
iret
shlb
stc
call
enter
fistpl
gs
lahf
mov
stos
mov
fistl
sbb
mov
xchg
lret
sbb
mov
es
jp
push
lods
jnp
mov
or
xor
xorb
int3
cmpsb
dec
shll
inc
xchg
leave
shll
movsl
fstps
test
es
push
test
add
clc
lahf
and
sbb
std
xor
jmp
adc
into
and
sbb
mov
ja
negl
arpl
ss
cmpsl
in
daa
inc
jmp
stos
pop
xchg
cmp
mov
jl
shlb
loop
mulb
mov
imul
sub
mov
inc
or
lods
aam
jg
cmpsb
out
push
lods
jmp
std
pop
jns
aas
jg
cmpl
xchg
mov
xchg
lods
cld
xchg
jg
std
fcmovbe
gs
xor
and
lahf
nop
jne
xorl
outsb
leave
xchg
dec
xor
inc
adc
sbb
nop
idiv
adcb
dec
xor
ss
fdiv
xor
fidivl
push
mov
inc
std
xor
out
test
jecxz
cli
je
adc
xchg
fwait
mov
pop
je
push
or
jo
xchg
in
cs
fimuls
mov
xor
push
lret
push
jmp
jle
jp
lea
xchg
mov
out
jmp
dec
mov
sbb
and
fwait
sbb
add
xor
lods
test
orl
pop
mov
and
push
pusha
test
jmp
fildll
movsb
cmp
push
jecxz
xchg
pop
adcb
dec
mov
jns
sbb
shll
fs
lret
and
pop
icebp
push
outsb
pop
imul
push
lods
mov
mov
std
lret
or
xchg
in
jo
fidivrs
mov
cmpl
movl
movl
jmp
movl
mov
je
push
call
addl
subl
and
andl
movl
orl
movl
adcl
push
mov
add
pop
mov
cmpl
movl
movl
movl
movl
jmp
not
movl
jl
pushl
push
push
push
push
push
push
push
call
subl
subl
addl
adcl
andl
neg
mov
xorl
mov
movl
mov
movl
mov
andl
movzwl
or
cltd
movzwl
xorl
idiv
cmpl
mov
movl
mov
mov
jmp
movl
movl
jne
pushl
push
push
call
xor
xor
mov
and
or
mov
mov
sbb
movzwl
sub
sbbl
movzbl
sub
mov
sub
mov
movzwl
addl
or
mov
or
mov
cmpl
movl
mov
mov
mov
jmp
movl
movl
jae
push
pushl
push
pushl
call
sub
sub
adcl
mov
or
addl
mov
mov
mov
movl
mov
mov
adc
mov
sbbl
sub
sbbl
mov
andl
xor
sbb
jmp
mov
sbb
push
mov
adc
adc
sbbb
out
cmp
out
push
daa
shr
add
dec
and
scas
cmp
testb
insl
push
xchg
mov
enter
fstps
xchg
sbb
push
fildl
into
scas
mov
jnp
sub
jmp
test
insb
sbb
in
aas
mov
xchg
push
into
cmp
xchg
cltd
mov
cmp
fdivl
push
jl
addl
mov
push
das
andl
fimuls
jge
mov
filds
stc
sti
je
or
sub
mov
ja
cmpsb
cmc
push
xchg
subb
cmp
and
aas
push
aas
gs
fisubrl
stos
xchg
cs
insl
scas
dec
cli
iret
cmp
xchg
ljmp
and
push
sti
daa
inc
jne
and
cs
mov
jecxz
stc
pop
test
pushf
xchg
or
in
push
loopne
fists
out
js
mov
push
inc
movsb
xor
or
test
cmp
jle
scas
cltd
int3
stos
repnz
ficompl
and
mov
les
dec
adc
xor
les
adc
in
inc
aas
and
out
scas
lcall
cmp
mov
ljmp
out
or
mov
mov
insb
sub
or
push
das
lds
loop
fwait
add
jb
mov
lods
test
cltd
pop
dec
iret
loope
lods
fsubs
es
sbb
xchg
mov
gs
test
pop
dec
xchg
add
push
add
xor
clc
mov
pop
test
mov
test
fmuls
push
pop
out
mov
leave
dec
push
pop
vmovdqa
cmpsl
mov
mov
pop
cmp
pop
push
ja
cmp
push
mov
data16
xchg
fwait
mov
or
mov
in
xchg
int
xor
mov
push
hlt
or
fisubl
data16
mov
aaa
out
ss
jno
xchg
inc
pop
clc
add
cmp
enter
inc
cmpsb
xchg
add
cmpb
adc
aam
sbb
xchg
adc
movsl
sbb
shlb
cld
mov
rolb
sbb
jle
mov
movsb
push
ds
jnp
sti
mov
pop
sti
mov
jo
and
sbb
mov
lods
mov
jns
mov
add
aas
inc
add
bnd
mov
bound
dec
and
add
pop
push
add
call
sbb
add
rol
jne
inc
add
add
mov
movl
cmp
movl
jb
sbb
movl
movl
movl
cmpl
movzbl
mov
jmp
movl
mov
jbe
pushl
call
sbb
mov
sub
mov
and
inc
movl
and
mov
cmpl
mov
movl
movl
mov
jmp
mov
jb
pushl
pushl
push
push
call
andl
sbbl
mov
sbb
movzbl
or
xor
xor
xor
xor
orl
add
mov
orl
xor
sbbl
div
mov
add
sbbl
and
pushl
pushl
call
movl
movl
mov
adc
movl
cmpl
movl
mov
mov
jmp
movl
movl
je
push
push
call
adc
xor
xor
mov
sbb
xorl
or
mov
xorl
mov
adcl
and
addl
or
mov
subl
and
xor
adcl
pushl
pushl
addl
call
not
pushl
dec
movl
movl
xor
movl
subl
movl
or
movl
cmpl
mov
mov
not
mov
jmp
movl
mov
jl
pushl
push
push
push
push
call
xor
and
sbb
adcl
movzwl
or
movl
movl
xor
movl
mov
dec
mov
andl
sub
sbb
mov
or
orl
and
xor
jmp
or
ja
mov
jle
inc
mov
xchg
movlps
inc
insb
loop
lea
xor
js
mov
push
ret
xlat
js
mov
fstps
xchg
dec
pop
fisubrs
out
sbb
push
mov
mov
sbb
addb
jmp
pop
dec
dec
jle
mov
cmp
pop
ljmp
outsb
idivb
je
subb
cwtl
mov
xchg
mov
jne
insb
arpl
aas
jno
add
movsl
xorl
sub
mov
adc
sbb
fsubrs
mov
fistpll
sbb
push
call
sub
cltd
in
fsubs
inc
mov
mov
mov
jge
in
push
aas
xchg
pop
xor
cwtl
mov
sub
scas
and
scas
inc
call
push
pop
or
push
js
mov
shrl
pop
xor
cmp
or
mov
xchg
jnp
sti
cli
and
pop
and
stos
repz
aam
test
pop
mov
rcrl
mov
sub
enter
or
and
push
repnz
pop
dec
dec
inc
aam
mov
mov
movq
stos
mov
cmp
lret
fnstenv
fnstcw
mov
imul
add
in
shlb
imul
dec
int3
out
gs
xor
or
jle
subl
pop
into
imulb
and
xchg
pop
jg
mov
ss
cmp
pop
mov
push
gs
dec
and
pusha
push
sub
sti
push
jg
leave
dec
sbb
inc
iret
or
js
loope
xchg
push
xchg
mov
popf
sbb
pop
push
push
movl
cmpl
mov
ljmp
add
mov
add
adc
int3
roll
lcall
push
inc
mov
sbb
xor
fwait
jecxz
jle
xchg
xchg
mov
or
sub
add
mov
xor
mov
add
sub
mov
dec
fisttpll
sbb
mov
dec
mov
out
add
std
push
sbb
insb
scas
sub
push
je
fists
outsl
cltd
arpl
push
lock
ds
mov
inc
lods
bnd
in
push
into
pushf
push
add
xor
arpl
mov
daa
adc
iret
ret
ds
lods
fcmovb
icebp
adc
pop
or
out
pop
pop
inc
xor
popa
add
push
lods
add
pop
mov
push
lret
stos
adc
in
mov
jne
pop
xchg
mov
xchg
mov
jp
xchg
xchg
pop
xchg
aad
lock
ret
add
mov
add
sub
movl
pushl
xor
mov
mov
andl
add
xorl
and
cmpl
mov
movl
jmp
movl
je
call
or
or
not
or
mov
sub
mov
xor
and
pushl
sub
mov
mov
andl
imul
xor
or
mov
movl
sub
pushl
sbbl
call
adcl
dec
movl
jne
movl
cmpl
mov
movl
mov
mov
jmp
movl
movl
je
pushl
push
call
or
xor
mov
and
mov
sbb
mov
add
movl
mov
mov
movl
mov
xorl
call
lea
mov
cmpl
movzwl
mov
mov
movzbl
jmp
movl
not
jb
call
and
xor
or
sbb
neg
orl
mov
mov
sub
and
neg
lea
mov
mov
mov
sub
mov
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
call
add
xor
neg
xor
add
mov
adc
xor
xor
xor
add
sub
sub
xor
xor
mov
sub
xor
sub
cmpl
mov
mov
jmp
movzwl
movl
jbe
push
push
call
sbb
sub
mov
mov
add
adc
addl
xorl
xor
sbb
xor
add
shl
shr
or
and
mov
dec
mov
orl
mov
mov
sub
mov
xor
mov
mov
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
adc
sbb
sub
adc
movl
mov
adc
mov
mov
xor
orl
xor
or
and
mov
addl
push
xorl
pushl
addl
lea
adcl
push
subl
shl
call
addl
lea
andl
push
mov
subl
mov
lea
push
andl
mov
movl
lea
sbbl
mov
xorl
mov
mov
adcl
push
call
orl
push
sbbl
push
pushl
sbbl
call
and
mov
xor
mov
inc
mov
mov
add
shr
cmpl
not
movl
movl
movl
jmp
movl
jg
push
call
inc
sbb
adc
add
sbb
cmpl
mov
mov
jmp
mov
ja
push
call
and
adc
sbb
sbb
mov
xor
add
sub
or
shl
cmpl
mov
mov
mov
mov
jmp
movl
jne
push
call
add
mov
sbb
adc
sbbl
sbbl
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
jle
pushl
push
pushl
pushl
pushl
call
adc
xor
xor
add
xor
or
sub
xor
mov
sub
xor
add
adc
and
or
xor
mov
sub
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
jmp
incb
dec
dec
cmp
or
fnstcw
push
out
adc
adc
sub
adc
stc
ljmp
or
inc
push
jb
pop
xchg
inc
push
insl
lret
push
lret
add
outsl
fcoml
fs
push
mov
push
adcl
xor
dec
adc
aaa
insb
leave
cmp
mov
jmp
xor
fcmovu
lods
in
pop
jp
dec
push
outsb
clc
pop
rcrl
pop
in
insb
xor
pop
std
loop
pusha
pop
xchg
cmpsb
loopne
stc
mov
push
jnp
in
std
lret
mov
les
xor
inc
out
inc
dec
inc
mov
dec
jg
cmp
cld
popf
dec
cmp
mov
inc
cld
sbb
inc
les
sbb
mov
jbe
cmp
rcll
pusha
rolb
or
or
lea
mov
push
js
adc
cwtl
mov
dec
out
sbb
jl
xchg
mov
and
or
leave
sbb
sbb
push
pop
lods
jb
sbb
jbe
xchg
lcall
xor
fcomps
arpl
negl
pop
jno
mov
ss
ja
sbb
ja
out
jmp
aas
xchg
lcall
hlt
dec
inc
push
sbb
lds
cmp
outsl
lock
fdivl
pop
xlat
fdivrs
cmp
mov
and
jg
xchg
pop
sbb
xchg
mov
cmpsb
js
sbb
lret
cmc
int3
lahf
or
mov
and
sub
in
or
sbb
rol
rcrb
fisttps
sub
into
push
int3
sub
pop
insl
lods
testl
inc
fidivrl
icebp
je
dec
das
pop
mov
xor
dec
scas
loopne
test
jbe
mov
push
out
push
in
sahf
pop
mov
lods
sub
pop
mov
ja
inc
jecxz
divl
repnz
mov
dec
sbb
cmpsb
pop
xchg
mov
ret
daa
cmp
mov
nop
push
jmp
pop
push
pop
ds
inc
cmp
jne
and
xchg
lea
pop
ret
pop
test
fdivrs
dec
jecxz
repz
sar
sahf
xchg
rdmsr
rcr
prefetcht0
ret
push
mov
jo
cld
push
adc
fisttpll
cmp
or
repz
jne
lds
movsb
push
das
int3
imull
dec
push
cmpb
mov
imul
shr
mov
inc
or
fidivl
test
push
dec
mov
int
sbb
clc
push
push
adc
xchg
xchg
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
ss
adc
sub
xchg
mov
pop
cmpsb
pop
lods
sub
adc
es
xor
lods
mov
xor
xchg
cmp
lods
lret
sub
sub
pop
mov
in
cli
inc
repnz
push
das
sbb
mov
addr16
cmp
in
rcll
jbe
std
push
out
adc
in
testl
jmp
or
shll
outsb
testl
fsubs
jb
in
pop
sbb
push
xchg
inc
pushf
push
lret
enter
inc
sahf
test
daa
sub
cmpsb
mov
push
jbe
fadds
rcll
fdivrs
dec
push
or
cmp
out
pop
rorl
icebp
push
in
add
ror
jno
sbb
push
and
sub
insb
jg
rolb
push
or
push
jmp
jecxz
xor
out
dec
add
push
sbb
sbb
rolb
xlat
xchg
and
mov
je
jns
mov
cmp
out
push
ljmp
sbb
adc
enter
add
xor
aad
shr
cld
push
fwait
push
stos
cmpsl
bound
and
cmpsb
xchg
int
mov
cltd
sbb
or
movsl
icebp
dec
push
push
sbb
and
orb
cmc
jae
aad
xor
pop
cmpsb
repnz
cmp
sbb
fldl
inc
jecxz
pop
dec
rcrb
lret
pop
stos
notl
sbb
sub
cwtl
cmpsb
fmul
sbb
fs
inc
aaa
fbstp
adc
xor
mov
lret
adc
cld
and
iret
js
mov
out
pushf
mul
push
std
sahf
out
ja
or
insl
outsl
mov
and
mov
js
or
fbld
inc
fimuls
and
ficoms
cmpsl
xchg
push
lret
xchg
fiaddl
sti
jle
jge
inc
or
xchg
enter
jecxz
rorb
add
cltd
cmc
push
scas
cmp
add
int3
xchg
test
popl
xor
add
jg
cmp
sub
lds
xchg
pop
adc
pop
sub
mov
int
and
pop
insl
aad
mov
inc
out
stc
adc
testl
fsubrp
out
xor
fistpll
loopne
das
cmp
mov
jns
out
lret
push
xchg
pop
fisubrl
push
pop
mov
btc
jno
xor
pop
cmp
and
mov
loopne
in
adc
call
push
repnz
fdivr
jecxz
ret
push
lcall
xor
pop
pop
fiaddl
and
ss
in
mov
in
test
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
jmp
cmpsb
xchg
mov
jns,pt
sahf
lods
fiaddl
adc
adc
mov
pop
rcr
out
cmp
push
dec
mov
lahf
jp
daa
mov
mov
fs
shl
es
imul
mov
mov
movl
scas
mov
dec
or
mov
mov
cltd
or
dec
mov
xchg
mov
sbb
push
aaa
daa
xchg
rclb
add
aas
push
xlat
push
bound
imul
mov
mov
imul
jg
popf
bound
insb
and
mov
lds
add
aas
push
dec
jae
xchg
fs
notl
xchg
cmc
out
in
and
icebp
iretw
dec
ficoms
add
ss
loope
mov
cmp
pop
dec
pop
mov
stos
add
xchg
xchg
repnz
dec
adc
fwait
xchg
pop
adcb
dec
push
fidivl
push
cmpsb
mov
cmp
jge
out
jno
pop
cmp
xor
test
xchg
scas
aad
push
dec
ja
stos
jns
push
int3
sti
mov
xchg
jno
loope
std
xchg
aaa
jnp
cmp
sti
jbe
xchg
adc
sbb
pop
push
mov
negl
ficoml
sbb
sub
jne
cmp
jge
fstl
dec
ja
movsb
and
sbb
push
mov
add
xchg
outsl
and
mov
inc
or
aaa
imul
das
repnz
pushf
cmp
pop
stc
icebp
mov
out
add
pop
outsl
jnp
and
cmp
and
adcb
pop
mov
outsl
lods
and
pop
insl
out
mov
fcompl
popf
aas
cmp
jae
sahf
addr16
cmc
push
out
cmp
mov
imul
in
pushf
clc
mov
mov
test
std
scas
cmpsl
pop
jns
cmpb
lret
adc
outsb
lea
popa
mov
ja
imul
stc
xchg
mov
cld
cld
aaa
or
test
dec
shl
adc
jnp
arpl
xlat
mov
dec
sti
mov
imul
jbe
roll
xchg
mov
aam
out
notl
inc
push
xorb
mull
insl
test
addr16
stos
ja
and
push
cmpsl
fwait
ret
cmp
mov
sti
xlat
mov
cld
hlt
mov
xor
or
and
xor
add
clc
repz
push
fidivrs
cmp
cltd
scas
clc
sbb
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
jmp
cltd
add
cltd
fstp
jmp
lods
mov
jbe
jnp
adc
adc
mov
movsb
push
sti
jb
jo
mov
stos
add
sahf
jl
out
mov
icebp
shlb
pop
push
push
inc
mov
popf
int3
inc
lods
das
sti
dec
xchg
push
inc
iret
out
cmc
push
rcl
fsubs
scas
and
in
add
outsb
stos
je
cmpl
adc
cmp
es
shld
mov
data16
mov
mov
jge
outsb
call
stos
popf
xchg
fisttpll
dec
push
lcall
dec
push
out
inc
fisubs
ret
das
je
stc
xchg
mov
xchg
cmp
in
js
add
cs
push
movl
cmp
pop
popa
inc
outsl
jle
in
ret
aaa
lds
mov
dec
or
test
sbb
add
add
pop
andl
std
push
and
cmp
bnd
arpl
clc
call
mov
mov
popf
mov
inc
mulps
inc
ds
pop
xor
add
xchg
fsubr
popf
mov
jp
add
arpl
mov
data16
dec
clc
add
adc
mov
mov
ss
jo
mov
mov
pop
jp
push
rorl
add
push
inc
xorb
and
fists
out
loope
xchg
xchg
stc
cmp
jge
xor
out
popf
add
and
movsl
jae
adc
sti
pop
mov
rcrl
mov
das
push
add
iret
xchg
outsl
pushw
jnp
xor
repnz
pop
xchg
ss
cmpsb
mov
xchg
int3
mov
cmp
shl
sbb
or
sub
xchg
nop
push
and
out
jns
sti
cmp
ja
daa
fidivl
push
push
add
jp,pn
fisubrl
mov
jns
xchg
btl
push
out
mov
aad
or
dec
popf
dec
jb
jle
mov
adc
int
inc
imul
jecxz
loop
cwtl
sti
xor
pop
fsubrl
enter
iret
das
loop
mov
aas
mov
push
je
fucomi
mov
test
out
inc
jnp
cli
jge
cs
mov
inc
cmpsl
cmpsb
aad
enter
sti
add
mov
shll
les
add
enter
pushf
cmpb
pusha
movsb
popa
inc
hlt
popf
dec
insb
xor
cmp
add
loopne
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
jmp
cmp
cltd
fistps
sbb
stos
ficoms
adc
xchg
xchg
push
sbb
imul
xchg
pusha
arpl
mov
fildll
hlt
mov
out
lods
jo
hlt
mov
adc
add
in
add
pop
lret
stc
cld
repnz
mov
cmpsb
adc
sub
adc
fdivr
mull
rolb
or
cmp
loopne
fstpt
pop
cmpl
leave
inc
xchg
jo
xor
mov
pop
les
hlt
leave
dec
inc
inc
fmull
pop
lahf
push
dec
sbb
xor
ds
pop
cmpsb
jae
lea
xchg
inc
cmpsl
or
enter
lret
inc
jle
push
and
xor
jmp
insb
hlt
mov
push
mov
popa
mov
sbbl
pop
xor
int
push
shr
dec
add
in
test
lret
xchg
push
ficompl
push
pop
outsb
pop
cmp
stos
out
mov
pop
mov
push
push
std
mov
xchg
cmp
inc
push
cld
into
dec
inc
cmp
xor
addr16
dec
sbb
cmpsb
mov
aad
inc
movsl
fdivrl
loop
mov
in
int3
and
subl
mov
pushf
mov
inc
or
and
mov
insb
mov
pusha
ss
sub
sbb
fbstp
pushf
adc
push
jnp
push
xchg
gs
and
mov
decl
daa
out
faddl
subb
rolb
rcrb
mov
aam
mov
inc
ljmp
push
mov
out
aas
push
xchg
cld
push
pop
dec
sub
xor
jns
pushf
dec
xchg
sub
je
fdivrl
mov
loope
call
xchg
mov
mov
sahf
imul
xchg
xor
or
sbb
hlt
cmp
and
dec
pop
aas
andl
xor
arpl
ret
and
loop
mov
pop
mov
jmp
fstpl
adc
inc
mov
cmp
mov
imul
sarb
pop
jge
push
mov
insl
lcall
xchg
int
dec
mov
sbb
ja
xchg
clc
ljmp
fsubp
pop
cmp
fidivs
add
popf
nop
sbb
test
loop
mov
push
push
mov
xor
and
lahf
cmpsb
push
inc
dec
insl
xor
inc
cli
pusha
inc
shlb
jns
adc
mov
ss
fsubrs
lretw
jecxz
pusha
inc
jg
mov
shll
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
pop
xor
jge
cmp
loopne
jb
nop
js
aam
adc
xor
fbld
vcomisd
scas
incl
or
loopne
das
add
mov
mov
push
adc
insl
stos
mov
adc
aam
stos
dec
scas
inc
bound
inc
sbb
mov
sub
test
sub
or
aad
xchg
cmp
adc
sub
mov
jns
dec
sbb
je
pop
loop
mov
cs
mov
fst
ret
shl
sahf
int
imull
xor
xchg
out
mov
mov
jl
int3
cmc
nop
adc
cs
jp
into
out
or
add
or
fmul
dec
mov
cwtl
loope
out
add
mov
push
lods
mov
cwtl
gs
or
mov
in
cmp
pop
mov
cwtl
ficomps
mov
gs
push
adc
aad
stos
dec
hlt
cmp
aam
xlat
aad
lds
dec
daa
stc
add
int
nop
mov
shll
dec
add
xchg
outsl
lahf
mov
aas
push
adc
repnz
cltd
pop
movsl
lret
sub
rorl
leave
mov
inc
shll
movl
or
pop
out
and
dec
repz
and
inc
addl
jg,pn
sbb
outsl
rcl
xchg
movsb
mov
sub
xchg
add
mov
and
add
pop
shlb
mov
loop
fwait
and
mov
mov
mov
idivl
cmpsb
mov
push
dec
or
scas
ss
xchg
cmp
sub
sbb
aam
insl
inc
in
mov
into
dec
cmp
mov
pusha
mov
mov
jmp
mov
xor
fcoms
xchg
xor
lea
push
hlt
push
scas
andl
lock
pop
daa
into
pop
int
sbb
jge
xchg
lods
push
jmp
cmp
in
cmpb
jp
pop
and
lret
push
mov
std
scas
jnp
push
decb
test
jecxz
dec
lods
or
and
cmp
out
push
icebp
scas
dec
pop
ja
cmp
jecxz
fwait
pop
divb
and
push
jo
cs
inc
sti
stos
enter
lret
jo
jg
shrl
sarb
sub
stos
sbb
push
xchg
or
or
sub
dec
inc
lret
dec
in
insb
and
jl
out
test
rolb
pop
ret
in
push
cmp
mov
pusha
mov
cld
inc
cmpsl
inc
xor
inc
dec
inc
cli
jecxz
jae
dec
into
out
ud0
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
movl
push
mov
mov
and
push
sbb
push
movl
movl
sub
movl
or
mov
movl
mov
xor
andl
div
imul
sbbl
mov
xorl
xor
and
mov
mov
sbb
mov
xor
orl
div
add
sub
mov
movl
cmpl
movl
not
mov
mov
jmp
mov
mov
jbe
push
call
adc
movzbl
sbb
mov
mov
or
and
mov
mov
sub
or
inc
sub
movl
cmpl
mov
mov
mov
jmp
movzwl
ja
call
adc
sub
sbb
inc
xor
movl
mov
orl
add
xor
cmpl
mov
movl
movzwl
jmp
movl
notl
jae
pushl
pushl
pushl
push
push
push
call
or
and
or
incl
mov
mov
and
and
xor
sbb
imul
addl
mov
and
sub
mov
mov
mov
and
movl
orl
movl
adcl
movl
movl
mov
sub
imul
mov
andl
imul
cmpl
mov
movl
mov
jmp
movl
movl
je
push
push
call
orl
xorl
xor
or
mov
or
mov
xor
xor
sbb
mov
jmp
pop
sahf
and
out
scas
sarb
rclb
adc
cmp
lods
add
sub
rorb
aaa
mov
jo
jg
out
mov
mov
roll
jbe
xchg
xchg
icebp
inc
ss
mov
add
loopne
dec
int
jge
cmp
mov
sarl
mov
cmp
lock
arpl
add
test
loop
mov
loop
pop
fisttpll
pusha
lds
iret
add
inc
cmp
sub
leave
imul
sub
aas
cmpsb
int3
daa
mov
mov
loop
pop
push
outsl
outsl
int3
pop
pop
out
std
or
negl
mov
fscale
ret
xchg
shll
xchg
xchg
stos
test
push
fdiv
test
add
hlt
adc
xchg
inc
insb
adcl
cwtl
pop
push
pop
and
sbbb
add
in
sub
into
fcompl
lds
pushf
mov
xor
add
push
test
jge
or
or
cmp
mov
out
and
icebp
fnsave
ret
add
cmc
cmpsb
ret
pop
xchg
push
int3
sub
adc
jmp
or
adc
xor
lods
push
shrl
neg
sub
fcoms
inc
add
outsb
daa
push
je
mov
cmc
nop
addr16
negb
pop
mov
and
adc
fsubs
jae
flds
shll
repnz
sub
fdivrs
int
push
add
ret
cltd
mov
sbb
and
mov
mov
nop
push
js
lret
js
inc
and
pop
mov
decl
orl
std
fs
cmp
xchg
sub
fldcw
mov
cli
xor
pop
push
sbb
pop
rcl
imul
mov
dec
addr16
mov
push
lahf
jl
outsl
fyl2x
or
imul
mov
subl
and
dec
or
xor
mov
subl
xor
cmpl
movzwl
mov
mov
jmp
mov
mov
jg
push
pushl
call
add
adcl
adcl
add
and
mov
add
orl
mov
mov
sbbl
lea
mov
or
movl
movl
sbb
movl
mov
or
xor
cmpl
notl
movl
not
jmp
movl
movl
jbe
pushl
call
or
xor
andl
movl
add
adc
mov
orl
or
and
add
cmpl
movl
mov
mov
jmp
movl
mov
jbe
push
call
and
add
xor
subl
and
add
xor
cmpl
mov
mov
mov
jmp
movl
jb
push
call
add
xor
add
sub
sub
xor
add
mov
add
subl
or
xor
mov
or
add
cmpl
movl
mov
movl
mov
jmp
mov
mov
jge
pushl
pushl
call
andl
sbbl
andl
movzbl
sub
add
adcl
xor
mov
movl
orl
movl
adc
movl
mov
and
add
cmpl
movl
mov
mov
mov
jmp
movl
movl
jle
push
call
xorl
xor
and
orl
orl
inc
mov
sub
mov
subl
lea
movzbl
sbb
mov
or
sub
xor
or
or
mov
mov
movl
movl
mov
or
add
xorl
imul
mov
imul
xor
movl
mov
div
sub
movzbl
or
mov
xorl
movl
sbbl
movl
movl
mov
mov
addl
xor
movl
div
sub
imul
adc
add
mov
orl
xor
xor
sbb
mov
div
xor
mov
movl
cmpl
movzwl
movl
jmp
mov
jge
pushl
call
not
or
adcl
adc
dec
add
movl
and
movl
cmpl
movzwl
mov
jmp
mov
movzwl
ja
push
push
push
push
call
adcl
adc
and
and
addl
mov
mov
sub
movzbl
xor
shr
and
sub
and
mov
imul
mov
subl
and
mov
adcl
jmp
cltd
adc
xor
sbb
js
pop
fdivrs
enter
fmuls
ljmp
insl
pop
aas
xor
or
mov
push
lods
cmp
sub
xchg
jbe
stos
inc
lahf
pop
mov
inc
fwait
push
and
dec
sub
xchg
adc
pop
fldenv
xlat
insb
add
mov
loope
arpl
mov
hlt
lcall
daa
mov
mov
imul
mov
cmp
test
pop
data16
cli
popf
mov
cwtl
sub
and
sub
in
adcl
aas
add
jp
xchg
cmp
jmp
adc
ret
out
push
pop
shrb
ret
test
outsl
out
test
add
cmp
xchg
xchg
push
inc
scas
mov
sbb
aam
dec
cltd
insb
jnp
mov
sub
push
shr
popa
in
cwtl
and
cmp
pusha
mov
cwtl
sub
scas
mov
mov
pop
dec
add
mov
xchg
imul
jle
push
push
sahf
insb
cld
loopne
pop
cmpl
push
mov
inc
jle
test
or
je
sbb
sbb
dec
sbb
xadd
je
push
xor
adc
sub
add
xor
test
cli
inc
or
and
mov
outsl
bound
push
and
cmp
loope
and
movsb
test
xor
mov
mov
push
fldt
push
push
xor
fadds
sub
xchg
or
ficoms
rolb
ss
rclb
lds
sti
sti
imul
lahf
adc
mov
push
fstl
dec
out
pop
pop
pop
ficomps
lret
xor
push
imul
out
rcl
and
ja
jle
xchg
adc
es
in
rcr
mov
dec
mov
subb
cmp
nop
cmpb
cmp
cmp
loopne
mov
shll
adc
test
decl
rol
fcom
push
add
cmpl
mov
mov
mov
mov
jmp
mov
jne
pushl
call
notl
addl
orl
andl
and
movl
mov
sbb
or
mov
or
sub
adcl
mov
cmpl
mov
movl
movzwl
jmp
movl
mov
jg
pushl
pushl
push
push
call
add
sub
adc
movzbl
sbb
adcl
and
or
movl
mov
sbb
movl
addl
movl
cmpl
movl
movl
jmp
notl
jne
push
push
call
sub
xor
xor
mov
adc
or
orl
adc
andl
adc
mov
adc
movl
adc
movl
xor
xor
add
movl
movl
mov
add
or
mov
movl
sub
xor
mov
addl
imul
add
imul
or
mov
or
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
push
push
pushl
push
call
or
or
xorl
sbb
xor
xor
subl
mov
lea
addl
push
call
and
mov
mov
jmp
test
mov
jbe
adc
adc
adc
mov
xor
pop
mov
jne
inc
imul
mov
push
push
data16
jo
js
or
mov
mov
fs
dec
ss
jb
stos
push
leave
enter
cmp
outsl
in
push
xchg
movsl
sub
outsb
jg
cltd
pop
jmp
adc
dec
lods
jg
stos
gs
mov
cmp
sub
stc
jno
mov
add
inc
mov
dec
sbb
sub
adc
test
sub
jecxz
push
add
and
imul
xor
pusha
icebp
fidivl
xor
rcrb
cmp
je
push
jp
cmp
push
push
insb
cwtl
push
jo
inc
add
aas
je
jge
inc
dec
xchg
arpl
into
or
popl
jl
sarl
lea
call
push
data16
ficoms
jl
or
or
push
push
data16
fildll
int3
dec
mov
push
lock
add
or
push
lods
in
fldl
xor
leave
jnp
push
popa
mov
outsl
leave
aaa
adc
ds
push
in
mov
ja
dec
push
aam
pop
mov
or
fxch
xchg
push
xor
add
das
popf
popa
xchg
lret
fadd
mov
fimull
jp
leave
subb
es
add
fimull
cmp
scas
jp
mov
test
test
pop
sub
or
aas
cmp
and
hlt
xchg
stc
sub
int3
cmpsl
and
or
das
push
pop
mov
sub
add
ret
xor
mov
or
and
dec
cmpsl
frstor
fiaddl
xchg
cli
cli
and
xor
cwtl
push
pop
and
popa
insb
cmpsl
xchg
pop
and
fadd
xchg
adc
adc
mov
mov
shll
pop
inc
xor
out
aas
jl
bound
mov
adc
imul
add
cmpl
mov
mov
jmp
movl
movl
ja
push
call
add
add
dec
orl
addl
adc
and
cmpl
notl
mov
movl
jmp
movl
je
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
sub
xor
xor
mov
xorl
div
cmpl
movzwl
movl
jmp
mov
jbe
push
push
push
pushl
call
adc
movl
orl
sbb
adcl
xor
mov
mov
sbb
add
xorl
jmp
pop
and
and
cmpsb
js
aaa
or
enter
or
inc
ljmp
leave
pop
aam
std
loopne
pop
pop
jns
push
push
loopnew
push
idiv
imul
xlat
dec
or
lret
inc
fdivr
ja
mov
imul
fiadds
xchg
xor
cld
into
push
icebp
addr16
push
sahf
arpl
push
test
jecxz
std
enter
pop
xchg
cmpsl
mov
sbb
imul
dec
pop
sbb
int
jbe
push
add
pop
and
fisttpll
clc
dec
mov
subl
lods
bound
iret
or
iret
inc
mov
lds
and
add
jge
jp
out
xchg
mov
loope
je
out
sbbb
repz
loop
xor
push
inc
mov
inc
xchg
sbb
or
roll
inc
pop
inc
and
xchg
imul
sub
cs
mov
daa
xor
mov
adc
add
imul
mov
xor
out
mul
jno
loop
repz
xor
xor
int3
sahf
gs
je
push
in
repnz
add
pop
loope
loopne
leave
leave
loope
cmp
mov
in
lods
and
sub
jecxz
xchg
jge
and
scas
stc
js
adc
sub
mov
jle
jae
xchg
movnti
xor
mov
movsb
sbb
jnp
and
rorl
cli
dec
jg
fiadds
ret
sbb
or
cmp
jecxz
sbb
scas
dec
mov
lds
jno
leave
out
daa
dec
in
inc
pop
dec
cmc
push
stc
pop
nop
cli
cmc
inc
aad
dec
mov
push
add
rol
xchg
push
jp
add
cmp
cmp
int
lahf
xchg
and
outsb
pusha
xchg
inc
dec
lock
lret
inc
hlt
mov
and
mov
xchg
ficompl
mov
daa
ficoml
mov
neg
movl
movl
movl
movl
adc
movl
or
movl
xor
movl
movl
xor
add
sbb
mov
movl
cmpl
movl
not
jmp
not
jbe
push
push
call
xorl
or
subl
add
adc
sub
addl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
call
mov
or
xor
sbbl
neg
mov
or
movl
movl
add
mov
cmpl
movl
mov
jmp
movl
mov
jae
push
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
add
mov
movzbl
or
and
movzbl
sub
mov
sub
sub
jmp
xor
es
and
jmp
js
xorl
adc
movlps
out
mov
sbb
out
cmp
out
cmp
and
add
test
dec
aad
inc
or
outsl
or
push
jns
in
xchg
pop
push
adc
mov
xchg
add
mov
xor
inc
push
mov
jle
mov
test
jne
ja
xor
adc
roll
pop
mov
clc
call
jbe
clc
call
cmp
fdivp
aas
cmp
mov
imul
ficompl
in
rolb
test
sahf
jp
call
test
jno
out
dec
mov
fs
lret
in
xor
lret
jl
sbb
movsl
pop
lcall
push
mov
xor
jmp
cmp
cli
dec
and
mov
insb
ret
push
lahf
adc
lret
and
cmpsl
adcl
dec
std
in
cmp
or
xchg
cmp
cmpsb
cmc
in
mov
out
pop
cmc
stos
mov
jb
mov
enter
mov
adc
aam
sub
sub
stos
loopne
pop
in
ljmp
ja
daa
stos
mov
dec
scas
gs
clc
push
and
dec
dec
lods
flds
ficoml
loope
movsl
push
sub
cmp
adcl
shrl
shll
aad
lods
cmp
or
lods
jmp
movsl
stos
push
sbbb
imul
aas
push
out
pop
dec
mov
mov
mov
and
mov
hlt
lret
jle
enter
xor
test
loope
sub
aam
sub
jne
repz
ja
in
dec
arpl
out
xchg
push
mov
sub
scas
in
mov
out
push
cmpsl
in
push
mov
xor
std
movsb
cs
int3
pop
pop
sbb
mov
jp
sub
int
mov
dec
outsb
cmpsl
das
iret
cmp
add
jle
iret
mov
cmp
insb
fwait
gs
sub
cmpl
mov
mov
movl
jmp
movl
jle
push
call
and
subl
adcl
movzwl
adc
xor
sub
cmpl
movl
mov
mov
movl
jmp
movl
jb
pushl
push
push
call
sub
and
adc
adc
imul
xor
jmp
nop
push
push
sub
sbb
jle
scas
jo
jge
adc
adc
fwait
loopne
pop
sbb
ret
mov
in
mov
pop
frndint
fldcw
das
mov
fwait
push
mov
or
fdivrs
xor
movsl
push
cmpsb
lcall
in
xor
push
adc
in
adc
data16
es
add
sar
push
dec
adc
aam
mov
lock
inc
mov
mov
daa
pop
push
push
and
js
jecxz
std
int
add
adc
mov
mov
test
jno
in
or
jnp
ret
and
sbb
pop
cli
shlb
and
in
subb
pusha
mov
pop
inc
ret
popf
sbb
scas
popf
mov
push
push
xor
cmp
fsubl
lds
aam
sub
dec
jo
dec
mov
cltd
out
divb
sub
aam
xor
sub
std
xchg
lcall
cld
xor
add
pavgw
fdivp
jae
push
test
in
push
inc
pop
and
fnstenv
mov
push
es
popf
inc
int
shlb
ficoml
in
mov
sarb
add
enter
andb
fwait
and
fnsave
outsl
push
or
mov
xchg
movsb
ss
enter
test
pusha
lret
inc
pop
and
cmc
insl
mov
xor
jl
sub
inc
dec
mov
push
xchg
jb
std
lret
jno
dec
push
push
icebp
mov
xor
mov
in
imul
mov
push
into
fisttpl
xchg
add
add
dec
sub
rol
mov
add
jg
dec
repz
sub
pushf
icebp
push
xchg
adc
icebp
adc
xor
xchg
sub
fisubl
mov
in
leave
and
rcl
aas
fldl
hlt
jno
push
pushf
mov
divl
cmp
lods
mov
idivb
fmuls
pop
mull
jo
ret
arpl
adc
hlt
xchg
mov
add
lea
mov
and
mov
cmpl
notl
not
jmp
movl
je
push
call
movzbl
adc
mov
sbb
sbb
xor
subl
mov
mov
sub
or
or
mov
jmp
loop
out
cmpsl
inc
sbb
inc
mov
jb
xor
adc
mov
xchg
add
outsl
jg
xor
lcall
xchg
dec
notl
mov
movsb
mov
mov
push
in
in
and
inc
fucomip
scas
inc
sti
faddl
xchg
shlb
pop
scas
pop
loopne
inc
adc
pop
jno
mov
add
mov
sbb
and
test
mov
mov
or
mov
and
lret
arpl
aas
mov
inc
lds
clc
mov
push
push
xchg
stc
rorb
jg
aad
xchg
adc
mov
mov
jl
out
xchg
mov
popa
or
mov
outsl
mov
shl
cmp
jno
inc
adc
push
push
rcrb
arpl
mov
fwait
and
inc
inc
mov
pop
mov
ret
adc
lods
int
xchg
cmp
sbb
adc
rclb
aad
cmc
cmp
mov
mov
dec
sub
arpl
fdiv
enter
call
sub
scas
pop
das
sub
cli
lea
cld
insb
xchg
addb
sbb
into
lea
stc
iret
push
or
jno
mov
and
mov
cltd
jmp
push
pop
sarb
inc
std
jp
mov
cli
lcall
idiv
daa
shrl
add
bound
inc
or
mov
fucomp
movsl
and
gs
pop
pop
lea
pop
nop
leave
ficoml
sub
fldz
mov
push
mov
imul
imull
fisttps
and
pop
subl
push
movsb
aad
mov
popa
inc
insb
out
aam
stos
push
inc
jge
cld
jl
inc
mov
mov
and
dec
lahf
in
fiaddl
lret
pop
shlb
xchg
xchg
fdivrs
pop
fchs
jle
mov
dec
dec
mov
mov
data16
jecxz
and
cmc
dec
jle
cwtl
push
mov
xor
xor
or
add
xor
or
mov
sub
sub
mov
adc
lea
andl
and
movzbl
add
mov
mov
sub
add
mov
movl
adc
movl
cmpl
mov
notl
jmp
mov
jg
push
push
call
sbb
or
or
add
inc
sub
subl
movl
andl
movl
mov
cmpl
movl
movzwl
mov
jmp
mov
jge
pushl
pushl
call
add
xor
xor
and
and
movl
sbb
mov
mov
adcl
xor
andl
xor
xorl
mov
call
mov
mov
decl
mov
addl
mov
addl
xor
xor
adcl
mov
subl
call
decl
or
dec
or
add
mov
sbb
mov
xorl
xor
xor
mov
call
cmpl
mov
movl
mov
mov
jmp
mov
ja
pushl
push
push
push
push
call
subl
mov
or
or
and
mov
xor
or
mov
mov
decl
mov
add
mov
xor
andl
xor
subl
mov
cmpl
movl
movl
mov
jmp
mov
movzwl
jne
push
push
pushl
push
pushl
push
call
andl
subl
addl
subl
sbbl
subl
movl
mov
sbb
mov
notl
mov
mov
addl
call
adc
mov
adcl
or
sbb
mov
addl
or
incl
push
sbbl
push
sbbl
push
andl
push
call
mov
cmp
jne
sub
mov
mov
subl
xor
andl
xor
andl
mov
movl
call
sbb
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
inc
adc
cmp
pop
pusha
js
mov
adc
adc
dec
ljmp
jg
or
jns
scas
movsb
cli
xor
in
xchg
outsb
scas
sbb
lea
pop
push
mov
int
pusha
sub
subl
cltd
or
pop
sub
push
inc
emms
mov
mov
cmc
test
ss
xchg
adc
pop
outsb
xlat
or
dec
jg,pn
neg
cmpsl
sbb
pop
jmp
cltd
mov
push
mov
sbb
pop
mov
sbb
shll
jle
out
mov
xorl
in
sbb
movsl
inc
enter
fidivrs
adc
negb
mov
and
adc
add
sbbb
daa
adc
sub
push
lahf
ror
adc
leave
jno
shl
iret
sbb
aaa
je
adc
xor
mov
inc
inc
arpl
js
xchg
dec
into
inc
xchg
scas
test
sbb
outsb
popl
push
pop
cmp
aas
xchg
mov
dec
mov
and
push
xchg
es
repnz
dec
dec
ss
in
cmpsl
or
mov
aaa
cmpsb
push
pop
xchg
aaa
xor
jne
fnstsw
or
push
les
pop
lret
xor
int3
das
add
push
pusha
pop
jl
mov
pushf
cmp
dec
outsb
lret
loopne
jb
inc
xchg
sub
jae
std
adc
out
adc
xchg
add
xor
mov
pop
sbb
loopne
jo
andb
or
and
xor
subb
aam
adc
pop
cmp
mov
scas
pop
adc
push
mov
adc
in
ja
imul
sbb
lret
call
sub
jnp
pop
test
mov
lea
mov
xor
add
pop
sbb
icebp
xchg
inc
es
sbb
dec
and
fcmovnb
int
lret
adc
out
cmp
push
sbb
loop
mov
dec
mov
outsb
add
push
ljmp
jo
popa
and
or
decl
pushf
inc
add
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
jmp
leave
out
loope
pop
sub
xchg
adc
adc
into
sub
sub
nop
enter
push
addr16
aad
gs
lcall
xor
cmp
fs
stos
jno
push
negl
jns
lret
inc
in
dec
inc
adc
xor
dec
adc
sub
cli
fstl
mov
xor
sub
jl
imull
mov
les
roll
leave
and
sub
push
jo
pop
cmpsb
incb
ret
jno
subl
cmp
pop
pop
repz
shlb
dec
cwtl
and
in
aam
push
insl
outsl
in
xchg
loop
cmp
daa
jns
cmpsb
or
jg
mov
lret
fwait
subb
mov
or
dec
pop
lea
mov
out
push
sbb
sbb
fs
push
mov
mov
mov
fs
cmpsb
mov
out
sbb
sahf
inc
or
outsl
xchg
insb
jge
adc
mov
pushl
testl
test
mov
mov
filds
sbb
sahf
imul
sbb
sub
mov
add
out
xchg
jmp
mov
imul
mov
jg
es
and
lods
dec
addl
cs
test
in
lret
adc
aaa
sbb
ret
sub
mov
ds
movb
mov
sbb
and
mov
jmp
addr16
jo
mov
inc
jno
mov
out
cmp
daa
outsb
lock
rorb
xor
inc
loope
dec
sbb
sbb
jmp
xchg
mov
lcall
mov
es
mov
ret
push
repz
xor
in
ret
dec
stos
sbb
cmp
popf
adc
jp
mov
and
add
sbb
cs
jecxz
xchg
icebp
lods
push
cmpps
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
jmp
mov
popa
sahf
sbb
lods
insb
push
mov
adc
adc
ss
call
out
dec
inc
fdivr
push
fsubrl
mov
cltd
nop
fnstcw
pop
rorb
push
movl
pop
stos
jle
pop
call
testb
pop
aad
mov
fwait
sub
pop
test
or
loopne
pop
inc
dec
mov
add
repnz
mov
cmpsl
sbbl
cmc
ret
jne
push
push
mov
xchg
mov
mov
xor
ljmp
mov
out
sti
loope
jb
adc
xor
mov
sahf
xor
jns
imul
pop
sub
jno
jl
cwtl
mov
insb
ljmp
mov
or
pop
mov
xchg
jle
add
cwtl
xor
cmp
ja
ficompl
and
outsb
jmp
sti
pop
mov
mov
pop
pushf
push
adc
fstpl
ds
jne
imul
ja
adc
sbb
inc
mov
fdivrs
inc
and
sti
data16
gs
mov
push
pop
mov
inc
push
dec
cmpsl
xor
cwtl
ret
ds
xchg
and
popl
out
bound
xor
out
aas
ret
push
ret
xchg
stos
cmp
inc
and
push
pop
stc
stc
sub
mov
cmpsl
add
pop
add
mov
imul
or
adc
mov
jb
sub
pusha
clc
repnz
pop
xlat
jle
cmp
mov
lret
sub
outsb
inc
mov
fstpt
mov
add
jae
cli
sub
cmp
jb
and
pop
loope
repz
pshufw
mov
cmp
inc
inc
and
pusha
cmp
sbb
hlt
cmpsl
pop
jmp
cmp
mov
cmp
xlat
pushf
stos
mov
mov
in
shrb
inc
mov
push
fwait
mov
lock
and
pop
push
inc
dec
adc
into
aad
xchg
xchg
adc
fistpl
stos
daa
fs
sahf
lret
sub
decl
decl
decl
incl
lret
fmuls
aam
decl
sar
pushl
add
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
jmp
add
xor
and
aas
loope
xor
js
cmp
adc
movlps
popa
sarb
into
call
sub
inc
outsb
int3
out
notb
inc
sub
clc
shll
loopne
jmp
fcoms
sub
mov
xlat
xchg
sahf
push
out
pop
xchg
dec
icebp
cld
mov
adc
jo
stos
clc
mov
sub
rclb
ror
or
pop
rcl
int
push
aaa
mov
pop
out
adc
or
aas
subl
pushf
out
xor
jmp
or
jae
mov
push
inc
movsl
sbb
mov
stos
xlat
xchg
mov
xchg
test
adc
mov
push
popf
pop
sub
dec
cmp
loope
push
mov
or
xor
add
xchg
add
cmp
fwait
mov
arpl
fldt
aad
mov
pop
or
fisubrl
or
xor
mov
in
je
jns
imul
sbb
jne
imul
cwtl
aam
mov
mov
cltd
lret
outsb
sub
add
fs
mov
mov
pop
add
out
enter
cli
cmp
test
pop
daa
sbb
adc
fcomps
and
sbb
sub
into
lods
lea
mov
in
sub
lods
lret
pop
ret
inc
loopne
sbbb
push
hlt
fimuls
or
lods
xchg
xchg
arpl
and
cltd
pop
cltd
mov
insl
out
jl
sub
in
aad
cmp
pop
and
scas
add
aad
jnp
lock
inc
lock
lea
leave
les
inc
movsl
insl
ss
jb
mov
mov
pop
cwtl
xchg
fstpt
into
push
sub
push
mov
xchg
or
out
daa
sbb
dec
stos
mov
jmp
and
mov
mov
mov
and
fcmovne
test
movsb
lcall
inc
mov
xchg
sbb
test
shll
adc
roll
mov
dec
lods
in
cld
xor
inc
cmp
or
stc
and
mov
jo
repnz
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
jmp
insl
xor
jb
push
sub
mov
stos
mov
adc
adc
sahf
ret
mov
mov
mov
insb
mov
mov
xchg
sahf
xor
dec
push
or
jne
add
addr16
sub
xor
ret
push
and
or
xchg
ljmp
test
cs
sub
xlat
ret
mov
cmc
add
or
mov
dec
bound
mov
push
rol
andl
jmp
push
push
imul
xchg
cli
sub
mov
jb
cmp
shl
inc
mov
sub
loopne
pushf
jo
mov
mov
sbb
mov
js
pop
fisubrl
sbb
loop
lret
icebp
dec
loope
mov
lret
pop
dec
sbb
xor
mov
jnp
jge
add
out
insl
leave
xchg
aas
hlt
dec
inc
xlat
inc
js
leave
or
loop
push
call
sub
sub
fnstsw
inc
adc
sub
jg
aaa
jl
xlat
movsl
add
shl
addr16
pop
xor
orl
cmp
outsl
cmp
movsl
outsl
daa
jmp
aam
int
in
jnp
incb
fadd
ja
xlat
int3
mov
sbb
mov
and
ficompl
pop
or
sti
or
stos
out
or
sbb
mov
sbb
les
mov
movsb
cli
cmp
jne
or
ret
shll
jbe
mov
push
sub
or
dec
or
ret
out
push
xor
push
pop
outsb
pushf
add
movsb
sbb
mov
ret
imull
push
dec
fwait
adc
mov
ss
pusha
sti
mov
lods
rolb
sahf
dec
sub
pop
dec
sbb
and
js
repz
push
jbe
cmpsl
cmp
and
adc
insl
cmp
imul
adc
movsb
push
addr16
repz
mov
test
mov
stos
das
movsb
push
mov
js
scas
clc
mov
cld
nop
inc
dec
aad
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
jmp
pop
cli
xchg
ret
xchg
js
pushf
adc
adc
cmp
fistps
push
fldt
push
out
subl
push
cmp
sbb
jmp
add
adc
mov
adc
or
leave
cwtl
bound
imul
gs
add
int3
pop
jae
or
ljmp
jge
jmp
ficoms
pop
sbb
mov
popf
into
jbe
std
repnz
push
pop
aad
and
adc
andb
push
or
mov
mov
dec
popf
inc
imul
xchg
mov
jo
xor
add
cs
xor
lret
les
jb
fs
mov
push
lcall
fs
add
out
testb
mov
stc
and
int3
stos
dec
adc
mov
loope
ss
dec
sbb
mov
mov
pop
add
rcrl
js
push
pop
mov
xchg
mov
lcall
out
hlt
aas
sarl
lret
call
fistpll
jp
add
inc
jo
bound
stc
out
sub
dec
jmp
push
cwtl
lahf
mov
sbb
enter
ret
mov
ret
adc
adc
sbb
cmpsb
lods
ss
mov
ja
pop
rcr
sbb
sbb
loope
mov
loop
out
fidivrs
mov
pop
sub
sti
shlb
mov
cld
mov
jp
mov
imul
jae
sbb
fisttps
jae
test
aam
rcrb
pop
lcall
inc
pushf
xor
dec
mov
add
mov
push
insl
call
repz
adc
cli
rcr
xor
xchg
sbb
dec
sub
sub
fistl
cmp
inc
jle
push
push
mov
mov
add
push
inc
loope
sub
cmp
sahf
mov
leave
push
scas
orl
decl
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
jmp
stos
cmpl
and
sahf
sarb
and
sbb
movlps
or
rcll
push
or
inc
in
addr16
xor
inc
adc
das
imul
mov
sbb
pop
mov
lahf
fwait
push
in
add
pop
jge
shlb
stos
mov
cs
js
jmp
into
sbb
sub
dec
cmp
nop
inc
add
add
sbb
mov
push
sbb
stos
ret
jecxz
incl
cmp
aad
jmp
cmp
adc
mov
mov
cmp
pop
mov
sarb
repnz
cmp
jle
sub
pop
test
push
mov
ljmp
and
and
mov
dec
popl
and
mov
jle
stc
jecxz
adc
xorb
jnp
out
mov
mov
test
mov
or
inc
adc
jmp
mov
jne
stos
scas
adc
cmp
xor
or
mov
popa
xchg
jns
imul
mov
fisttpll
pop
sbb
enter
mov
mov
lods
out
rcrb
dec
bnd
mov
push
and
rol
aad
xchg
xor
cmp
hlt
pop
and
xchg
pop
shrl
inc
repz
es
ja
ja
sbb
or
lahf
mov
inc
add
mov
mov
mov
and
and
mov
xchg
push
mov
clc
inc
xor
push
mov
sbb
xlat
xor
and
fcompl
adc
xchg
jbe
enter
mov
ljmp
jecxz
mov
icebp
mov
cmp
mov
or
cmp
xchg
out
pop
shrl
xorl
dec
cli
lods
insl
std
dec
ret
loop
mov
test
push
add
ficoms
pushl
jo
push
cltd
mov
push
sbb
int3
mov
les
add
decl
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
jmp
and
lret
sbbl
js
arpl
adc
movlps
daa
sbb
test
aas
pop
ror
lods
fists
cltd
jb
aam
arpl
fimuls
mov
into
lea
insb
xchg
jno
mov
mov
imul
push
mov
jp
cltd
sbb
dec
ret
int3
paddusb
push
mov
fistps
popa
xor
xchg
lahf
lods
mov
mov
push
mov
sbb
xchg
out
jns
xchg
cmp
jmp
scas
fisttpll
cmc
divl
lea
cmpb
cmp
outsl
xor
fistpll
lods
adc
or
ja
iret
enter
add
and
xchg
dec
lods
jp
test
pop
cmp
test
dec
push
or
iret
lods
sub
lock
cmp
adc
push
mov
pop
pop
jae
imul
mov
pop
pop
adc
push
shlb
jnp
mov
jg
inc
icebp
dec
inc
dec
pusha
jmp
push
push
dec
sti
mov
xor
xchg
testb
inc
push
icebp
je
icebp
sub
outsl
dec
jmp
lea
or
fcomi
inc
test
inc
xchg
dec
int3
mov
out
push
push
sub
aaa
pop
es
popa
jnp
lcall
mov
and
add
test
mov
add
push
push
pop
adc
mov
insl
scas
adc
pop
add
push
xor
jnp
cld
inc
mov
pop
push
sarb
mov
jl
scas
adc
pop
test
ret
out
orl
dec
out
rclb
adc
js
lret
dec
arpl
gs
imul
popa
ja
sbb
push
ret
pop
xchg
xchg
scas
or
leave
push
lret
movsl
dec
js
lds
rorl
mov
jp
mov
imul
inc
cmp
mov
xchg
loop
xchg
push
push
sti
push
push
js
xor
insb
fdiv
pusha
push
cli
xor
mov
mov
call
adc
pushl
lret
adc
fmuls
and
pushl
imul
fmuls
sbb
decl
decl
decl
mov
and
inc
add
add
pop
lods
mov
and
pop
mov
call
adc
adc
dec
out
xchg
mov
sub
in
mov
bnd
xchg
mov
test
xor
stos
adc
cmpsl
loopne
xor
es
push
adcl
mov
aas
imul
addr16
leave
sub
lcall
dec
xor
adc
mov
aad
sahf
and
sub
fs
jmp
imul
xchg
jnp
jae
enter
into
add
roll
test
roll
mov
dec
imul
insb
jmp
jne
ud2
repz
sub
cmp
push
out
jo
push
dec
sbb
sbb
push
lods
fmul
subl
mov
xchg
outsb
pop
data16
cmp
ret
into
out
xorb
loope
enter
jbe
cmp
adc
lcall
push
ret
add
jl
push
inc
arpl
daa
fcoml
dec
jae
dec
jmp
mov
mov
cli
imul
push
pop
pushf
rclb
push
jns
aad
stos
mov
fs
lods
inc
jmp
in
insb
aad
xchg
pushl
mov
cs
jmp
insb
pusha
jmp
lods
outsb
mov
jns
pop
and
adc
roll
mov
sub
sbb
ljmp
imul
aam
sub
shlb
nop
sbb
and
jne
pmaddwd
popf
mov
add
test
and
sbb
xchg
dec
lahf
add
inc
push
popa
adcl
scas
mov
icebp
pop
mov
xchg
loope
dec
push
or
bound
scas
into
xor
mov
or
stc
xor
in
inc
jle
lods
stc
pusha
cmp
out
cltd
jp
lret
sahf
sub
popf
int
cltd
std
xchg
outsb
jne
test
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
jmp
dec
sbb
sbb
sbb
sbb
scas
sbb
mov
cmpb
movlps
pop
sbb
loopne
mov
inc
lret
rcll
sub
aaa
std
inc
test
pop
jg
xchg
loop
loop
stc
mov
pop
hlt
test
pop
movsl
mov
jb
loope
jle
insl
insb
mov
test
cmpsb
clc
fisubs
in
cmc
jno
adc
or
out
mov
jne
cmpsb
sbb
rcrl
jae
xchg
repnz
lds
repz
cli
lret
lea
and
sub
dec
jge
cmp
mov
pop
xlat
push
andl
lea
ss
cmp
std
mov
movsl
inc
out
mov
loope
fstps
stc
mov
gs
pop
or
push
mov
ret
push
jg
insl
xchg
stc
jmp
es
xor
cmc
movsb
inc
and
pop
jp
out
xchg
fistps
inc
mov
mov
dec
pop
xchg
cmp
jl
sub
aad
sti
inc
xor
imul
jecxz
and
cmpsl
test
dec
pop
les
push
jl
jp
jnp
pop
add
fnstenv
roll
and
inc
xchg
scas
jnp
fistpl
pop
inc
insl
dec
test
adc
jmp
cwtl
xchg
adc
and
sbb
mov
xchg
adc
xorl
cmpsl
insb
dec
arpl
rcrl
mov
in
aaa
lcall
arpl
daa
mov
sbb
adc
xor
xchg
dec
dec
lcall
cmp
or
inc
xor
mov
or
dec
push
dec
mov
push
sub
popa
insl
sbb
or
adc
sbb
out
mov
xchg
int3
adc
and
lcall
ficoms
mov
enter
es
out
dec
cmp
fucomi
aam
sub
adc
jp
imul
sbbb
or
jno
jo
cmp
jg
xchg
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
jmp
push
pop
inc
ficomps
clc
les
out
mov
adc
mov
outsb
add
or
pop
and
xlat
add
lds
bound
cmp
es
inc
mov
or
out
in
xchg
mov
aaa
fadds
sarb
mov
sub
and
lahf
push
add
test
or
imul
adc
pop
pop
ret
addr16
jns
pop
in
xchg
insb
and
push
jno
and
insl
adc
sbb
fdivl
lahf
adc
mov
call
fsubl
xchg
fdivrl
dec
and
test
or
out
scas
adc
test
inc
fcoml
scas
aad
xor
in
dec
xchg
jno
les
int
out
jnp
mov
insb
pop
cmp
or
mov
aas
movsl
push
pop
les
out
out
bound
sub
test
fadds
popa
lock
xchg
repz
cmp
lock
inc
stos
lds
adc
pop
lock
sbb
ret
xchg
jo
daa
xchg
xor
jo
jae
or
push
adc
xor
sub
jl
pop
jecxz
adc
jne
sub
insb
cld
push
test
pop
add
or
fmull
sbb
sub
stos
mov
test
pusha
push
subl
sub
lret
ja
sarb
inc
dec
jno
fiaddl
push
test
insb
and
mov
xchg
xchg
pop
xor
pop
pushf
and
jae
in
shlb
rcr
xchg
aaa
pop
pop
sub
ljmp
fdivr
sbb
stos
mov
mov
jg
push
pushl
and
clc
clc
push
rorb
jbe
jg
dec
clc
fwait
rorl
inc
xlat
cli
sbb
mov
add
jg
rol
mov
push
mov
jmp
xchg
loopne
insb
int
lods
jb
mov
mov
pop
decb
imul
loopne
test
cld
or
pop
cmp
sub
call
lret
fmuls
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
out
add
popa
cmpsl
aad
stos
dec
js
insb
mov
movlps
stc
int
xor
mov
xchg
mov
inc
shll
aaa
fnsave
and
sub
xchg
push
or
mov
mov
pop
mov
mov
sbb
sub
mov
icebp
ss
sub
insb
adc
sahf
sub
or
dec
and
mov
mov
popa
mov
das
leave
das
fdivr
xlat
sbb
sub
cmp
cmp
ret
scas
jnp
out
sub
pop
es
dec
jge
std
sub
movl
outsl
test
mov
inc
xchg
inc
sahf
insl
fdivrl
xchg
cltd
lahf
dec
dec
push
sbb
push
mov
jmp
iret
ret
mov
outsb
push
lock
jbe
nop
mov
or
insl
mov
xchg
lcall
inc
aaa
roll
dec
xor
lret
mov
loope
mov
jecxz
adc
nop
jg
subb
aaa
xor
jns
xchg
xchg
lcall
popf
clc
adc
stos
jge
sarl
inc
push
fwait
xor
pop
mov
add
xchg
fistl
sbb
mov
jb
gs
ljmp
scas
bound
cmp
lea
pop
icebp
cs
arpl
addb
adc
xchg
aas
ret
pop
aaa
out
push
mov
insl
loope
shrb
mov
or
jno
lods
or
fwait
dec
dec
stos
push
mov
sbb
adc
inc
mov
cmp
mov
scas
ret
arpl
and
pop
mov
jle
nop
push
repnz
lods
mov
scas
in
jae
sbb
and
jmp
or
loope
push
decl
xchg
push
jne
mov
rorb
or
bound
push
push
pop
xchg
movsb
nop
dec
fsubrs
lea
repnz
xor
fwait
adc
testl
sbb
or
arpl
popf
add
cld
xchg
cld
scas
sub
fdivp
push
popf
mov
mov
mov
xor
xor
mov
call
or
jmp
mov
or
mov
push
push
xchg
lods
insb
push
adcb
leave
dec
int3
xor
inc
inc
push
popf
call
andps
ja
cmp
fisttps
xchg
filds
in
ret
lcall
sub
xchg
dec
cmc
insb
fldl
mov
sti
repnz
icebp
sub
mov
leave
adc
lods
rcl
mov
dec
dec
fwait
insb
adc
pop
outsl
rclb
mov
xlat
adc
lds
fnstsw
dec
jg
paddd
loop
aam
xchg
cmc
shlb
mov
in
sbb
jbe
jne
jg
stos
push
les
shl
packuswb
and
jns
and
das
in
ss
inc
jp
add
add
mov
aam
or
mov
cmc
leave
mov
adc
lds
push
inc
pushf
repnz
and
push
mov
sub
cmp
incb
pop
ret
repz
pusha
push
rol
pop
xchg
dec
xchg
addr16
fucom
sbb
lcall
ja
mov
mov
dec
call
scas
pop
fsts
dec
sbb
or
stos
mov
push
outsb
adc
jb
mov
xchg
sub
xchg
adc
push
xor
or
cwtl
pavgb
mov
aas
into
std
int3
into
cltd
inc
mov
sbbl
xor
mov
leave
push
jb
mov
xchg
popa
test
bound
mov
imul
xchg
int
mov
xchg
mov
xchg
xchg
jns
xor
iret
pop
pop
pop
add
iret
call
sbb
and
push
aad
jo
lock
cmp
mov
cwtl
and
je
fidivl
scas
dec
mov
add
imul
stos
dec
lds
sub
and
jo
rol
add
xchg
push
cli
arpl
insb
popa
stc
dec
loop
dec
in
mov
cld
pop
mov
mov
push
mov
xchg
test
cwtl
out
push
jno
or
or
std
or
add
mov
mov
cmp
jmp
stos
js
pop
and
mov
xchg
mov
mov
enter
dec
fs
call
js
xor
js
or
inc
xchg
push
sub
sbb
cld
jb
fsubrl
test
out
test
push
jmp
jl
inc
push
fsubs
popa
mov
lods
pop
addl
adc
repz
xor
pop
lea
adc
pushf
add
add
das
lods
imul
jle
and
repz
jmp
insb
int3
cli
mov
or
sbb
cmp
imul
jge
idivb
nop
xchg
roll
mov
das
cmp
push
bnd
pushf
out
iret
aas
out
adc
dec
repnz
xchg
and
lea
ret
out
pop
mov
lea
fwait
or
leave
jnp
dec
cwtl
jae
test
xor
sbb
sub
out
add
adcl
mov
add
mov
mov
pop
fwait
insb
gs
sub
stc
push
mov
xchg
or
mov
dec
int
pop
pusha
rolb
mov
mov
add
pop
dec
push
mov
push
test
lods
add
into
dec
es
loop
mov
adc
xchg
into
lcall
stc
insl
rcrl
or
or
into
push
dec
cltd
mov
dec
sub
scas
mov
int3
fldenv
fdivs
hlt
dec
sahf
outsl
xchg
mov
cli
push
and
aaa
outsl
ffree
je
cmpl
cmp
test
adc
les
ja
pop
nop
cmc
loop
pop
in
popa
push
dec
gs
jbe
jg
daa
fs
fisubs
or
mov
clc
imul
xchg
xchg
inc
es
xor
mov
lds
fadd
push
mov
jmp
inc
sub
sub
ret
ja
inc
ljmp
add
mov
push
jo
insb
orb
aam
add
mov
mov
movzwl
xor
movzwl
sar
jmp
ds
in
mov
xchg
js
iret
ljmp
enter
dec
in
pop
sbb
test
subl
testb
push
pop
cmp
lret
or
pop
lea
jns
mov
pushf
in
cwtl
cwtl
enter
jnp
sbb
pop
fsubl
outsl
sub
dec
pop
jae
lcall
testl
mov
in
mov
push
jecxz
fsts
dec
sbb
jno
shrb
sub
insb
movsb
cltd
test
mov
and
int3
pop
pop
mov
jl
popl
push
pop
push
add
cmp
inc
inc
les
cmp
std
mov
sahf
and
mov
cmc
fprem
fnstcw
inc
jne
imul
adc
into
lahf
pop
push
jp
in
fs
jnp
fwait
or
aam
sbbb
sub
inc
xor
mov
and
pop
inc
dec
jo
cmp
test
mov
sub
rcll
xor
cmp
mov
incb
scas
dec
in
repnz
icebp
fwait
pushf
lea
pop
subl
mov
les
xchg
fcomp
stos
clc
cmp
xchg
push
popf
xor
dec
fs
mov
pop
xor
insl
xchg
pusha
mov
pop
lcall
in
push
out
add
mov
inc
sub
outsb
xchg
cmp
cmp
dec
sti
add
cwtl
inc
xchg
mov
lds
daa
xchg
fwait
fwait
stos
mov
xchg
icebp
lods
xor
mov
mov
out
out
roll
mov
pushl
xor
xor
mov
decb
lea
sub
mov
bound
jecxz
gs
out
std
loop
push
push
lea
xchg
pop
lods
mov
imull
imul
ret
out
xor
cltd
sub
sub
or
push
scas
mov
add
push
push
data16
insb
aad
cmpsl
lret
sub
mov
and
sub
lcall
jns
movsl
in
lea
decl
decl
mov
mov
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
jmp
jns,pn
xchg
pop
subl
js
mov
jle
jo
adc
movlps
jno
out
push
dec
in
btc
jecxz
ja
push
iret
adc
or
addb
js
or
aam
pushl
adc
dec
int3
fdivrl
loopne
add
xchg
push
dec
insl
rolb
push
dec
stos
ja
mov
mov
jo
outsl
fmuls
pop
fsts
mov
popf
fs
xor
jno
jl
or
jl
jmp
add
je
cmp
jns
rcrb
adcb
jmp
cmc
ja
loop
lods
test
mov
add
jnp
adc
aaa
jbe
jne
sub
out
push
dec
xchg
hlt
ret
jo
aam
cmp
loope
idiv
push
arpl
adc
mov
xchg
dec
mov
mov
inc
xchg
mov
mov
adc
sbb
addr16
mov
xor
out
mov
mov
dec
cmp
lret
fbld
inc
lock
sbb
addb
jecxz
jbe
imul
lds
cmp
mov
cs
ja
xchg
lcall
shlb
mov
out
pop
dec
fs
sbb
pop
fs
dec
xchg
xlat
iret
or
imulb
push
cmpsl
inc
addr16
or
int3
cmpsb
movl
jge
sub
push
cs
jg
jo
sub
cmp
int3
jae
adc
sti
lahf
mov
xchg
push
mov
push
dec
lea
lret
lods
or
or
mov
or
inc
cmp
les
jnp
scas
insb
out
push
or
testb
xor
adc
lahf
aam
in
das
popf
testb
sarl
lret
jno
mov
lahf
shl
push
bound
pop
pop
sub
sahf
lods
or
stos
sahf
daa
cmp
popf
mov
shlb
pop
jmp
mov
pop
pop
lret
cmp
mov
pop
in
mov
or
sahf
xchg
xor
inc
cs
into
mov
cmpsl
ret
idivb
repz
or
mov
sub
decl
test
decl
pushl
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
jmp
arpl
or
push
out
into
mov
es
adc
adc
mov
sub
adc
insl
call
xchg
push
leave
fsub
adc
xor
fistl
dec
out
int
das
add
xor
cld
lea
mov
mov
icebp
movsl
adc
test
xchg
xchg
xchg
xchg
icebp
jecxz
mov
or
jle
cld
xchg
sbb
mov
rclb
in
pop
mov
push
in
test
push
xchg
jbe
clc
cs
data16
stos
jl
cmp
imul
sub
inc
les
scas
scas
add
int3
rcr
enter
sbb
push
in
sub
daa
pop
mov
jecxz
push
sahf
insb
rol
mov
das
movsl
mov
sub
xchg
test
stc
or
in
xchg
push
mov
fsubs
lret
out
js
fnsave
into
jae
test
mov
mov
push
cmp
pusha
xchg
mov
aas
pusha
ja
or
out
mov
mov
lret
pop
dec
fmuls
lahf
fsin
push
sbb
scas
call
das
jo
fcmovnb
xchg
outsb
addr16
sbb
enter
test
add
push
jecxz
cs
cmp
mov
lods
fldenv
pop
push
jb
wrmsr
add
push
mov
insb
sub
ja
scas
js
cld
pop
loopne
imul
test
nop
fs
sbb
push
loope
out
call
adc
sub
fcoml
jmp
push
adc
push
add
std
push
decl
dec
pop
bnd
clc
mov
pop
mov
adc
rorl
ss
cmc
sahf
lea
orb
lods
cmp
xlat
cmp
mov
inc
sarb
addr16
fldcw
pop
mov
scas
xlat
leave
mov
outsl
ds
adc
js
cmp
movsl
hlt
dec
and
mov
adc
pop
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
jmp
xorl
jns
sbb
pop
lods
cmp
adc
adc
inc
iret
jmp
xchg
jno
ss
adc
cmp
add
es
push
or
xchg
sbb
rclb
aas
xchg
mov
push
lea
add
push
mov
pop
xchg
jbe
ret
icebp
mov
sbb
arpl
fists
push
add
insl
cltd
mov
xor
mov
push
inc
dec
push
sub
push
hlt
cmp
inc
adc
ds
out
clc
addr16
inc
push
mov
aas
test
jmp
sar
test
dec
ret
inc
hlt
cmc
imul
insb
sbb
ret
ret
jecxz
sbb
inc
dec
xchg
fisubrs
add
or
addl
jnp
lcall
adc
iret
out
xor
cmp
scas
aaa
mov
add
xchg
test
sti
jne
mov
mov
mov
cmc
cli
pusha
int3
push
mov
cmp
xchg
pushf
jecxz
mov
mov
xchg
out
sbbl
inc
jns
iret
pusha
mov
cmp
shll
aam
std
xchg
stos
pop
lret
inc
std
push
roll
in
pop
cmp
jg
arpl
jge
add
mov
hlt
pop
or
jle
sub
push
sbb
in
movsl
sbb
mov
adc
xor
ljmp
adc
pop
sbb
imul
adc
jg
add
ds
or
popa
iret
insl
sbb
outsb
idivb
hlt
andb
xchg
std
out
xchg
pop
adc
aad
cmp
clc
std
pushf
sahf
lcall
xlat
fs
aad
jge
ja
pop
cmp
push
push
cmp
call
notb
ja
hlt
arpl
and
pop
sti
and
lret
scas
dec
popl
mov
repnz
lods
pop
adc
mov
ret
addr16
xor
sbb
add
lret
and
sbb
push
xchg
mov
sbb
cmp
ja
cmp
sbb
pop
or
push
xchg
cld
and
fldenv
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
jmp
adc
fldl
out
cli
pop
push
push
push
fs
adc
mov
adc
loop
inc
aaa
pop
xchg
jl
fcoml
jmp
leave
jg
shll
jl
fwait
lods
outsl
clc
push
enter
out
push
dec
addb
movsb
sbb
shlb
jbe
inc
xorl
xorb
scas
pop
xor
sbb
iret
or
cli
xchg
ss
pop
in
aad
push
je
adc
insl
cmp
lea
stos
sub
ljmp
stc
or
imul
mov
hlt
stc
je
shr
fs
cmpsl
mov
jmp
dec
test
sbb
mov
xor
data16
cld
daa
and
dec
jb
daa
jg
mov
leave
xor
mov
push
test
jecxz
adc
pop
adc
sbb
cwtl
jmp
push
mov
xor
popf
pop
push
cli
jb
mov
test
dec
out
fwait
ja
psrad
mov
or
loope
js
fnstsw
push
sub
inc
in
je
inc
mov
add
movsb
pop
pop
dec
jmp
ds
mov
in
jns
sahf
jns
xchg
out
cwtl
mov
clc
imul
pop
out
xor
call
test
int3
push
sub
xlat
nop
std
decl
sbb
test
mov
xchg
xchg
dec
bound
pop
scas
add
cli
imul
test
imul
out
leave
inc
jne
dec
sti
in
aad
jns,pt
xor
inc
dec
movsl
cmpsl
jl
out
cwtl
and
xchg
in
xchg
cmp
lcall
pop
and
and
fisubrs
jae
pushf
adc
push
int3
scas
daa
in
lahf
dec
sub
lret
sbb
rclb
cmp
in
and
add
ret
lahf
shll
mov
dec
push
call
or
push
fsubrl
aaa
shlb
mov
enter
mov
pop
in
jecxz
cmp
decl
test
decl
pushl
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
jmp
out
in
in
mov
mov
inc
pusha
adc
adc
outsl
mov
jnp
scas
adc
sub
imull
xor
mov
adcl
add
inc
sub
repnz
pop
mov
je
mov
das
outsb
inc
rclb
jmp
fs
mov
pop
pop
clc
movsb
jne
lea
mov
inc
inc
shll
pop
aam
into
je
mov
sti
shll
gs
mov
js
frstor
xor
leave
inc
inc
lahf
and
jge
enter
testb
loope
stos
mov
mov
int
stc
xor
repnz
fidivrs
dec
outsb
in
shll
cs
cmp
adc
or
pop
ss
lock
add
sbb
lret
sub
inc
je
or
adc
dec
sub
arpl
pop
sbb
mov
sub
mov
cmp
push
scas
loopne
popa
mov
push
add
sbb
btc
ljmp
fdivl
out
shl
xchg
push
popa
jmp
scas
and
inc
addb
fprem
rcll
loope
test
xchg
push
cmpsb
stc
xchg
mov
ret
call
lahf
loop
pop
xchg
add
lock
call
iret
mov
xchg
in
mov
push
push
mov
mov
mov
xor
jecxz
pop
nop
daa
rol
int
dec
lahf
pop
addr16
jecxz
pop
push
mov
cmpb
mov
jge
inc
cli
div
lret
push
cmpsl
sbb
dec
out
rol
ja
lds
sbb
xor
pop
arpl
cmp
or
lods
inc
hlt
cmp
cmpsb
mov
mov
loopne
xchg
adc
and
and
aaa
outsl
inc
and
daa
mov
mov
insb
xchg
cmpl
jb
in
mov
jge
lods
jno
push
mov
js
sbb
mov
ljmp
out
iret
lods
inc
dec
pop
mov
lahf
sub
jno
mov
mov
test
add
sub
mov
movl
jmp
adc
add
jnp
bound
ss
xchg
and
js
pop
adc
adc
sub
out
jns
ret
test
aas
mov
sar
pushl
pushw
adc
lock
enter
addr16
xor
sbb
das
push
mov
mov
pop
fcoms
out
mov
addb
xor
or
mov
jo
adc
sbb
jge
mov
in
sbb
adc
dec
in
dec
mov
pop
mov
cmp
loope
mov
sarb
popf
cmp
rcrb
insl
add
cmpsl
or
jno
add
or
xchg
and
test
jle
jp
fldcw
fistps
and
pop
dec
fcmovnbe
addl
sti
xor
lcall
orl
mov
in
adc
adc
fwait
xchg
mov
mov
pop
loop
sub
movsb
xor
inc
add
mov
inc
mov
push
or
popf
xchg
test
sbb
mov
mov
in
push
xor
inc
or
gs
inc
dec
jg
dec
ds
sub
mov
mov
mov
loope
pop
lahf
mov
add
in
gs
jle
sub
inc
pop
and
mov
adc
or
iret
sub
sub
sti
sub
jae
inc
enter
icebp
fstps
mov
out
adc
dec
test
stc
lock
cmp
arpl
push
jl
ja
daa
mov
xchg
out
inc
sub
mov
bound
pusha
mov
fs
push
pop
add
adc
mov
enter
xor
nop
cmpsl
dec
push
popa
lcall
lahf
lret
ret
insl
ret
and
xchg
std
lods
mov
xchg
ljmp
stc
lcall
pop
scas
add
adc
sub
inc
pusha
inc
dec
adc
ss
shl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
jmp
or
addl
leave
pop
pop
cwtl
cmp
or
stos
pop
adc
adc
sbb
add
mov
sub
mov
dec
imul
je
insb
into
dec
mov
xchg
sbb
xchg
add
and
push
data16
dec
hlt
sbbb
pop
sub
adc
jnp
mov
dec
lahf
fdivs
lret
outsb
cmpsb
fbld
scas
jmp
mov
mov
sahf
sub
sub
jmp
jle
push
pop
cmp
je
popf
push
out
daa
les
test
and
rdmsr
jne
cmp
adcb
push
lret
les
cmp
jb
cmpsl
or
jle
daa
pusha
xchg
push
ja
cmp
cwtl
mov
pop
mov
insb
dec
lahf
repnz
add
mov
adcl
sub
or
pop
adc
push
imul
xor
jg
jmp
mov
sub
pop
loopne
or
je
or
fs
ljmp
jle
mov
or
sahf
xor
popa
pop
dec
pop
cld
add
std
dec
out
jmp
test
pop
jae
add
es
data16
jno
lods
insb
lds
mov
adc
mov
adc
cwtl
sbb
mov
jge
mov
inc
push
or
lret
xchg
lret
jnp
xlat
repnz
leave
pop
mov
jb
jb
fistl
inc
arpl
add
loop
int3
mov
dec
repz
lahf
repnz
ret
lock
pop
call
mov
and
push
dec
psraw
les
adc
scas
lock
sbb
mov
repz
mov
repnz
icebp
cmp
into
test
pop
pop
push
test
mov
ret
arpl
aaa
fnsave
ret
push
xchg
decb
cmpsl
sbb
xor
xor
adc
adc
xor
adc
inc
out
mov
and
and
sub
js
pop
in
int
cltd
sub
adc
fadd
mov
mov
pusha
ja
or
shll
arpl
jmp
inc
cmp
pop
inc
mov
daa
lea
das
nop
jg
push
lret
push
cmp
mov
orb
sub
loope
gs
adc
pusha
sti
push
cltd
lret
negl
pop
pop
sbb
dec
mov
fisubs
std
adc
subb
push
jmp
mov
push
fisubrs
inc
push
loopne
jmp
in
xchg
pop
dec
lret
jge
pushl
aam
cmpsb
sbb
pcmpgtw
xchg
xchg
loopne
and
cmp
repnz
roll
mov
jnp
adc
jo
pop
adc
fsubl
pop
lock
lret
out
cmc
xor
into
mov
inc
push
shrl
inc
in
fnsave
push
in
cmp
aas
cmpb
lcall
push
mov
or
movl
jne
mov
xor
mov
sbb
xor
movzbl
adc
div
xor
xor
sub
mov
mov
movzwl
sub
mov
xorl
div
mov
mov
movl
jmp
sbb
mov
xor
mov
mov
add
mov
adcl
shr
movl
rcr
shr
movl
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
movl
cmpl
je
add
jmp
fwait
mov
xchg
sbb
push
push
push
adc
adc
jle
cs
mov
repnz
lret
enter
mov
sbb
dec
jmp
loopne
aaa
inc
movsl
loope
add
xor
insb
xor
mov
rorb
push
push
jmp
fld
pop
xor
ficoms
test
or
outsl
loope
pop
sbb
je
movsb
das
mov
movsb
jns
pop
insb
pop
lret
sub
dec
adc
sbb
mov
pop
xor
mov
xchg
jg
jecxz
pop
pusha
pop
andb
cs
ss
movsb
pop
add
jo
sbbb
js
cwtl
popa
mov
or
sahf
add
mov
aam
pop
imul
lret
into
push
adc
cmp
pop
mov
mov
add
es
jmp
test
adc
stc
fnsave
adc
notl
mov
xlat
cmp
pusha
sarb
movsl
xor
and
ljmp
mov
popf
pop
mov
mov
pop
std
rcl
or
sub
stc
popf
pushf
cwtl
lret
cld
mov
pusha
test
mov
mov
sub
pop
xor
lcall
outsl
js
jl
mov
popa
int
mov
mov
push
loopne
les
ja
adcl
dec
sub
mov
xchg
cmpsl
push
push
ds
cmpl
jle
pop
repz
loopne
cld
mov
insb
dec
push
faddl
push
daa
das
fs
mov
xchg
dec
fistpl
notb
xchg
xor
rolb
mov
pop
shrl
push
aad
lahf
jnp
or
add
ficomps
es
int
and
out
mov
pop
pop
test
xor
mov
clc
push
mov
bound
in
roll
jle
outsb
dec
dec
cwtl
mov
mov
cmp
in
cmpb
xchg
push
mov
adc
xor
fcoml
mov
push
push
popf
mov
push
sarb
loope
dec
cld
in
std
push
in
mov
fwait
or
mov
mov
mov
xchg
fisubs
and
hlt
or
jge
icebp
push
sub
aaa
or
adc
dec
mov
int
cltd
mov
sub
dec
rolb
mov
cmp
ror
pop
aad
and
xchg
pop
insb
pop
push
shrb
sbb
das
mov
push
mov
aaa
mov
push
pop
testb
dec
lock
or
test
or
xor
sbb
sub
pop
push
sahf
adc
lret
jbe
lret
push
sub
mov
ret
jb
sub
xlat
inc
lahf
sub
xchg
mov
xchg
pusha
rcrb
ret
int3
push
aam
std
test
movsb
insl
push
addps
or
filds
les
aaa
lock
stos
mov
mov
movsl
adc
js
outsb
cmp
js
inc
fdivrp
or
cmc
incb
jl
popa
lahf
bound
adc
xchg
int
add
inc
mov
adc
movsb
jmp
inc
aaa
sub
scas
std
mov
test
push
rorb
lcall
add
cmp
add
leave
ret
movl
cmp
jae
movl
cmp
jae
sbbl
shld
shl
ret
mov
orl
xor
adcl
and
shl
ret
xor
xor
ret
