push
mov
sub
add
movl
xor
mov
or
jmp
sub
adc
xchg
add
imul
in
adc
adc
daa
cli
adc
xchg
out
xchg
fidivrl
sahf
adc
cbtw
loop
push
xor
add
push
xchg
xchg
or
xchg
xlat
adc
bound
jmp
xor
push
cmp
push
mov
cwtl
leave
lahf
xor
jle
mov
cmp
leave
repz
andl
inc
cmc
adc
adcl
pop
mov
es
jno
adc
push
jmp
push
imul
dec
and
je
rcrl
inc
cs
int
imul
mov
sahf
push
in
lea
clc
ja
cmp
imul
fadds
jno
inc
shr
mov
push
pop
sbb
popa
cmp
xchg
xchg
dec
adc
push
js
mov
sbb
dec
inc
dec
mov
xchg
mov
movl
mov
ret
movsl
add
xor
push
out
cmp
shrl
pop
scas
jne
pop
aas
xchg
jecxz
push
aaa
push
out
negb
dec
jno
cmp
add
lahf
pop
test
inc
inc
test
hlt
push
add
push
nop
pop
jnp
test
std
xor
std
popa
dec
aas
pop
inc
into
fcmovu
adc
xchg
notb
adc
inc
inc
push
loopne
adc
add
pop
loope
scas
mov
mov
mov
sbb
test
mov
xchg
adc
dec
jp
add
in
push
mov
leave
jno
imul
mov
pop
xchg
jbe
popl
aad
or
aam
imul
int3
lret
pop
lods
dec
mov
adc
lods
inc
fldl
mov
mov
pop
out
cmpsl
cmp
insw
insb
mov
dec
and
call
loope
xchg
cltd
mov
push
test
imul
mov
mov
subl
push
in
cmovae
sahf
pop
inc
out
popa
inc
pop
xchg
inc
pop
add
sub
clc
jl
xchg
xor
out
and
popf
or
lods
mov
cld
add
clc
mov
out
inc
dec
leave
mov
push
xor
and
mov
pusha
jge
ss
push
clc
jecxz
xor
arpl
push
mov
sti
lret
xor
jnp
inc
sbb
int
or
mov
loop
repz
push
imul
xchg
movsl
into
dec
popf
lea
aaa
js
xchg
push
inc
std
jne
setae
ja
cmp
xor
in
xchg
movsl
jp
and
popa
mov
xchg
xor
xor
rcll
adc
sub
push
ret
ficoms
xchg
cmp
jnp
inc
mov
fsubl
addr16
lods
mov
aam
lahf
mov
jno
sbb
ficompl
mov
add
jp
xor
mov
push
sbb
add
call
mov
in
pop
mov
push
adc
xchg
lods
xor
mov
inc
addr16
dec
pusha
loop
testb
scas
lcall
out
imul
jne
mov
xchg
movsb
out
and
dec
xchg
imul
ss
adc
jg
push
dec
cmpsl
xabort
std
pop
cmp
mov
cli
dec
popa
das
outsl
mov
sahf
xchg
push
xorb
mov
mov
jmp
mov
popf
testl
fwait
popf
cmp
in
and
mov
xchg
stos
xchg
dec
icebp
repz
rcll
xchg
subl
and
jge
arpl
pusha
mov
dec
mov
int
scas
stos
ret
xchg
aam
cmpsl
pop
fdivrl
das
xlat
push
or
cmc
jnp
push
cltd
fstpt
lods
call
pop
sbb
xchg
and
stos
mov
xchg
mov
push
xchg
in
shlb
cltd
push
cs
pop
scas
aam
sub
rorl
rcl
clc
mov
movl
xor
mov
movl
and
movl
dec
movl
adc
mov
sbb
xor
xor
or
sbb
mov
orl
div
adc
xor
adc
push
mov
adc
mov
add
orl
mov
and
div
and
mov
cmpl
jle
sbbl
jmp
push
push
pushl
call
movl
movl
mov
mov
imul
lea
mov
mov
cmp
movl
je
subl
movl
cmpl
jbe
inc
jmp
push
push
pushl
call
movl
movl
jmp
loop
mov
stos
fcmovnb
lds
jnp
cli
adc
daa
cli
adc
fdivl
mov
adc
mov
add
and
ja
mov
push
cmpsb
jge
mov
aad
cld
dec
popa
in
movsb
xchg
lock
je
cli
adc
xchg
pop
fsubl
fdivp
jbe
es
fimuls
xchg
jo
into
mov
fwait
xchg
mov
or
in
loopne
inc
add
pop
mov
lret
xor
lea
loope
push
out
mov
int
test
enter
cmpsb
inc
sbb
cwtl
push
adc
std
mov
fwait
pop
jae
imul
dec
xchg
pusha
cmp
dec
jecxz
fcompl
mov
ret
pop
movb
pushf
out
cltd
xor
ljmp
cs
dec
clc
sbb
fcmovbe
mov
mov
xchg
test
cltd
repz
lods
lret
repz
inc
insb
xor
jb
sahf
cld
xchg
stos
js
mov
inc
stos
mov
inc
cli
xor
add
stos
ds
mov
inc
xor
sbb
mov
mov
sub
movsb
xchg
adc
out
mov
je
decb
cmp
inc
jl
pusha
jno
fwait
clc
xor
jg
sbb
lods
adc
sub
mov
jl
mov
fdivs
rclb
sbb
dec
dec
sub
inc
fnstcw
sbb
negl
rcll
jmp
xchg
das
subl
ss
rorl
mov
dec
scas
pop
jns
xor
sub
pusha
jno
xchg
pop
jp
cmpsl
loope
popf
lods
imul
jne
jle
mov
pop
inc
add
lret
pop
jp
push
push
mov
popa
jle
adc
outsl
scas
or
jmp
ret
out
jno
in
enter
jecxz
into
imul
dec
out
loope
mov
movsl
sbb
and
fnsave
sub
fwait
push
pusha
xchg
aas
and
roll
inc
ret
test
pop
push
packssdw
mov
cs
pop
sti
fs
mov
cltd
mov
mov
test
inc
lock
sbb
imul
mov
inc
jnp
js
jp
cmp
mov
mov
pop
inc
aam
repnz
popa
xchg
in
xor
subb
xchg
sbb
ja
cld
push
out
fmul
mov
popa
sbb
aas
xor
pop
xchg
dec
scas
and
jmp
jle
fstpl
aam
cmp
ss
inc
sbb
push
jb
and
nop
adc
pop
pop
jno
mov
ficompl
xor
rclb
ret
and
pop
hlt
outsl
pushf
inc
add
lahf
inc
shlb
pop
pop
clc
test
popf
sarb
int3
add
jmp
pop
notb
sbb
cltd
push
cmp
sbb
mov
xchg
shl
aaa
popa
mov
bound
movsl
pop
dec
lret
pop
pop
clc
and
lods
cmc
loope
or
incl
pop
mov
mov
stos
out
xchg
xchg
leave
push
or
jne
imul
aam
gs
subl
ficoms
mov
cmpl
imul
jae
sahf
stos
jmp
or
inc
push
cmp
push
or
aas
out
out
lahf
std
and
out
fidivl
pusha
stc
bound
das
push
stc
mov
in
shlb
sbb
fcmovnbe
stos
dec
sbb
cmp
add
sbb
add
sub
decl
jmp
incb
mov
rcrb
sbb
pop
dec
dec
jle
popf
pop
clc
push
xlat
cmp
out
ffreep
jle
pop
or
ret
jno
inc
dec
lods
ret
push
fidivs
fisttps
dec
mov
test
lock
sub
jb
dec
jl
sbb
mov
inc
cmpb
push
shll
int3
mov
cli
in
movsl
test
inc
add
xchg
or
jo
add
jbe
fnsave
mov
sarl
jle
sub
add
mov
fldcw
jae
mov
sub
mov
mov
xor
and
mov
movl
xor
sub
mov
sub
movl
add
movl
mov
mov
andl
xor
div
movl
mov
movl
cmp
movl
je
movl
adc
movl
movl
mov
sbb
movl
movl
push
cmpl
jge
mov
xor
jmp
pushl
push
push
pushl
push
call
movl
mov
jmp
subb
xor
lods
insl
lds
push
xchg
pop
add
adc
cli
adc
imul
jge
aam
pop
jle
xor
fdivr
addr16
jp
adc
cmp
out
lahf
pop
cs
leave
insb
mov
jnp
mov
call
dec
and
fs
push
mov
sbb
pop
sub
add
fdiv
pop
in
jp
ret
xchg
dec
push
stos
mov
fmuls
inc
push
dec
addr16
lret
cmpl
stos
loopne
or
adc
xchg
sbb
xchg
jb
cmp
mov
fcmove
sbb
es
xor
out
xorl
es
add
push
xor
xchg
insb
xor
adc
cmp
adc
push
fisttpl
push
xchg
sbb
xor
sub
cli
mov
sbb
jbe
and
faddp
aas
fistl
sub
xchg
js
mov
rclb
xchg
cmp
xor
pop
xor
sub
cmp
mov
push
in
dec
inc
lcall
adc
call
adc
jae
cmp
mov
jnp
xorl
imull
xchg
sub
mov
stc
mov
dec
mov
push
dec
outsl
out
popa
ret
and
sub
add
mov
sub
sub
aaa
ret
lock
jo
xor
add
lcall
call
lret
data16
sbbl
adcb
outsb
in
outsb
inc
add
jg
sub
and
or
ror
lds
and
fmul
pop
or
mov
repnz
cmp
push
cwtl
cltd
cltd
out
or
movsb
outsl
adc
mov
dec
sbb
cmpl
pop
popf
add
or
mov
in
imul
dec
hlt
dec
lods
bound
push
xchg
das
jmp
mov
push
mov
stos
pop
lods
ljmp
sub
mov
mov
or
into
sahf
dec
in
mov
mov
cmp
cmp
pop
mov
xchg
cmp
push
pop
scas
aad
popf
jns
mov
loope
push
je
mov
xor
fstl
inc
cmpsb
cltd
sti
or
and
out
inc
add
pop
mov
movsl
in
xor
lret
sub
ja
arpl
and
movsl
fucomi
shlb
arpl
mov
pop
xor
or
pop
negl
jmp
repz
lahf
je
and
aad
xchg
inc
movsl
jp
xchg
mov
pop
sbb
push
out
push
jno
sbb
scas
mov
fidivs
mov
out
push
shl
push
repz
dec
adcl
pop
aad
xchg
mov
incl
subb
xchg
test
addr16
stc
push
sbb
jnp
and
cld
clc
jno
stos
add
mov
xchg
shrb
jno
pop
sub
pop
dec
mov
mov
icebp
dec
subb
icebp
outsb
jmp
roll
xchg
hlt
cmp
mov
dec
pop
pop
jno
sbb
pop
cmc
popf
add
fs
cmp
jmp
mov
xchg
mov
shll
adc
sub
ja
test
in
add
cwtl
rclb
cmp
xchg
cmc
push
adc
leave
flds
data16
lds
sbb
cmp
pop
not
push
jae
and
dec
movsb
adc
movsb
pop
call
lods
movsb
iret
mov
pop
add
lock
pop
jno
sbb
add
adc
mov
adc
pop
pop
inc
insl
iret
add
pop
pop
scas
arpl
notl
xor
test
inc
sbb
mov
mov
mov
jns
adc
repnz
jne
nop
xchg
pop
repz
popa
into
cs
imul
mov
cmc
pop
mov
fistpll
popf
adc
mov
or
xor
mov
in
cmp
mov
push
jmp
int3
test
and
popa
out
push
lock
daa
cli
adc
dec
fmulp
popf
dec
sub
andb
je
jns
push
je
enter
bound
sub
jns
outsb
cs
movsl
cli
das
pop
arpl
inc
mov
jecxz
mov
aaa
mov
or
fisttpl
fsubrs
sbb
cmc
push
mov
jo
call
int
movsb
jb
in
mov
stc
xchg
dec
adc
mov
je
push
dec
scas
sub
int3
inc
cli
xorb
push
xor
xor
add
jg
aad
jp
xchg
and
push
add
insl
fcomip
or
xchg
arpl
imul
xchg
mov
push
add
add
scas
and
mov
jb
sub
cmp
pop
add
mov
fisubs
push
dec
adcl
inc
push
cmp
pop
xorl
movsb
loope
or
pop
or
dec
jmp
add
jmp
or
dec
push
mov
movb
adc
sub
xor
pop
call
add
cmpsl
test
dec
fs
mov
les
dec
and
fisttpl
or
mov
movsb
inc
into
mov
call
jmp
fidivrs
sbb
and
add
outsl
mov
leave
mov
scas
or
scas
andl
sbb
mov
ret
pop
pop
in
out
and
push
push
ret
sub
in
mov
leave
and
add
fnsave
xor
jno
cmp
lods
mov
sti
pop
fsubrs
xor
mov
add
fimuls
pop
push
jo
aas
pop
sub
lret
fldenv
es
pop
mov
dec
insl
and
mov
dec
or
ror
faddl
bound
ja
ljmp
int3
cmpsb
cmp
das
adc
or
cld
push
pusha
mov
das
mov
fidivrl
xor
inc
jle
mov
jg
mov
fwait
mov
pop
mov
push
ljmp
pop
jns
pop
adc
sti
je
fsubrp
push
mov
hlt
inc
add
and
fdivrp
dec
jne
lods
sarb
dec
mov
fstps
mov
mov
mov
loop
mov
sbb
pop
stc
inc
mov
mov
les
xchg
imulb
sub
pop
stos
push
push
fdivs
leave
inc
movsb
push
cmp
mov
cmp
cmp
das
mov
dec
outsl
jmp
sub
inc
cld
dec
or
leave
in
inc
in
dec
clc
jno
sub
stos
mov
ljmp
insb
add
bound
cmpsb
fisubrl
imul
or
jmp
mov
roll
mov
and
insl
loopne
mov
clc
mov
mov
aaa
faddl
popf
add
addr16
pop
pop
lret
out
insb
mov
dec
insl
fistps
sub
sub
fsts
es
call
fsubl
mov
fs
mov
not
lcall
sub
ss
fsubp
sbbb
movsb
jp
rcrb
fdivs
std
pop
movsl
in
movsl
orl
dec
mov
mov
clc
ret
shrl
xchg
stc
sbb
fldl
pop
sysexit
mov
es
pop
dec
xchg
push
sub
sbb
int
inc
and
mov
mov
imul
mov
fxch
mov
dec
lcall
push
mov
inc
jl
cmpsl
cmpsb
popf
hlt
jae
xor
xlat
inc
das
popl
lods
xchg
adc
loop
jno
mov
xchg
inc
pop
fmuls
clc
int3
jo
sbb
pop
mov
xchg
mov
push
push
sbb
es
mov
call
adc
mov
jno
vpmullw
ficomps
jge
push
pop
cmp
add
std
sbb
add
or
repz
inc
add
imul
scas
aaa
inc
add
jg
add
jmp
push
push
push
pushl
push
push
pushl
push
call
mov
mov
and
mov
and
mov
orl
and
and
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
jmp
adc
sahf
sahf
xchg
push
adc
aaa
test
vphaddubq
daa
cli
adc
repz
das
xchg
xlat
jo
xchg
sub
fnstenv
ja
test
mov
es
or
outsb
mov
pop
ficomps
call
je
xchg
xor
xor
loopne
dec
inc
jne
sarl
ds
pop
inc
cld
lods
xchg
inc
outsl
test
lcall
push
xor
push
push
or
movsl
pop
adc
rolb
mov
bound
mov
and
stos
jne
xchg
push
lds
fistpl
cmp
in
or
jl
iret
jmp
out
dec
inc
testb
data16
pfrcpit2
notl
incb
mov
je
addb
pop
icebp
cmc
sahf
fnstsw
inc
cmp
in
pusha
cmp
jne
outsl
out
outsb
cmpsb
pushf
mov
shrl
inc
or
mov
movsb
mov
sahf
shrb
sbb
pop
loope
mov
and
xchg
inc
mov
jg
mov
jbe
sbb
movsl
out
pushf
cmpsl
push
push
stc
daa
test
stos
mov
and
daa
rorl
lret
mov
insl
into
aam
cs
das
and
inc
cmp
stos
inc
aaa
inc
call
or
mov
xor
fs
and
sub
dec
rol
cs
mov
sahf
mov
mov
nop
xor
and
xchg
daa
inc
mov
or
loope
push
iret
cmpsb
scas
pop
sub
xchg
push
pusha
nop
gs
xlat
imul
pop
mov
and
and
mov
mov
ljmp
jno
mov
sub
add
or
add
xor
jbe
dec
negl
imul
daa
pusha
jg
and
ljmp
mov
push
cmpl
stos
pop
arpl
aaa
popf
inc
sbb
mov
in
dec
push
mov
push
sbb
scas
mov
fcmovu
es
and
xor
repnz
lds
add
nop
sarb
push
orb
cmp
mov
pop
fbstp
loope
mov
hlt
sarl
jne
sbb
enter
dec
pop
aas
inc
xlat
inc
jmp
test
push
jb
mov
jno
sti
push
into
adc
je
nop
or
sub
sbb
pop
xchg
xchg
outsl
orl
in
mov
cmc
not
rclb
jae
subb
test
cmp
fs
jp
test
cltd
inc
mov
pop
enter
or
inc
mov
cmp
add
mov
test
data16
mov
je
dec
push
jae
xchg
push
movsl
cld
insb
xchg
xor
and
mov
lods
daa
and
iret
outsb
leave
rcll
iret
sub
call
out
mov
leave
dec
stc
lds
in
cmpsb
mov
jbe
or
imul
jb
addr16
aam
arpl
fsub
xchg
outsl
mov
iret
cwtl
dec
fwait
mov
lcall
in
xor
mov
or
mov
addr16
cmpsb
aas
adc
repnz
mov
xor
cmp
jnp
ljmp
std
adc
dec
aaa
inc
mov
addb
inc
loop
mov
push
in
rclb
addb
stos
inc
pop
fnstcw
cmpsl
xor
inc
or
and
add
loopne
cltd
out
out
jae
test
push
mov
pop
ljmp
xchg
pop
jle
lods
jle
mov
sahf
lahf
out
divb
addr16
hlt
dec
jns
jle
add
outsl
dec
dec
scas
in
aam
inc
add
movsl
iret
dec
mov
cld
int3
std
dec
loopne
std
ret
sub
xchg
inc
mov
pop
outsb
xor
fildll
mov
test
ret
jp
or
cli
stos
popa
cld
cmc
sub
jne
nop
loop
ficompl
fisttps
cmpl
aam
icebp
out
cmp
mov
mov
in
sbb
test
mov
and
aas
xor
or
lret
jb
nop
jg
outsl
push
mov
push
pop
adc
push
mov
sub
test
fwait
shr
mov
xor
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
movb
movb
movb
movb
or
shl
mov
sub
mov
xor
mov
and
jmp
lds
js
les
sub
jb
mov
daa
cli
adc
adcl
sti
and
mov
cmp
xchg
mov
stos
xchg
push
xchg
jb
xchg
push
leave
pop
popl
mov
xor
sti
mov
cmp
subl
and
dec
clc
sarl
faddp
adc
dec
pop
jle
pop
stos
xor
or
push
ljmp
adc
mov
bnd
sub
popa
dec
xchg
or
inc
popa
std
leave
adc
std
inc
xor
cli
pop
push
jae
or
movsb
lret
push
jno
adc
daa
mov
xor
jg
stos
sub
sbb
orl
pop
mov
and
dec
data16
xchg
stos
sbb
dec
pop
and
add
fisttpl
stc
pop
adc
fnsave
cmpsl
xlat
ficoml
push
cmp
mov
sub
lea
xor
es
scas
inc
scas
insb
jnp
cmpsl
adc
inc
aad
push
jno
hlt
mov
test
push
add
in
cmp
cmpsb
xchg
test
aam
icebp
mov
cltd
push
adc
push
fldcw
lcall
xor
aad
nop
test
imul
dec
cmpsl
or
mov
mov
int3
enter
xor
jp
pop
fmull
mov
int
mov
xor
inc
insb
jb
in
sbb
fwait
nopl
test
xor
dec
push
int3
adcb
js
fwait
push
cld
in
inc
leave
dec
push
aaa
xchg
mov
and
insb
or
or
pop
pop
jns
and
loop
mov
rolb
mov
loopne
inc
jnp
int
mov
lret
push
mov
ja
sbb
call
xor
add
or
mov
push
lock
and
test
je
jns
sub
fisubrs
decb
mov
ss
movsl
mov
cmp
mov
nop
clc
out
push
jns
call
mov
std
icebp
daa
imull
mov
sahf
pop
in
inc
popa
xor
sbbb
cmp
sbbl
out
movb
loopne
es
cmc
aam
addr16
popl
into
jg
negb
cmp
sub
aad
xor
adc
dec
sti
add
push
xchg
shrb
push
dec
jmp
add
jb
scas
xlat
dec
jnp
inc
jle
jnp
mov
sti
negb
push
sbb
or
out
in
xchg
out
add
jmp
movsl
inc
jne
sbb
sbb
push
cmp
pop
mov
das
mov
xor
rcrl
test
cmc
fisubs
sti
lea
pushf
sarl
xor
lds
scas
pop
cmpsl
popa
outsl
int
divl
scas
push
cmp
fs
fstl
scas
push
jnp
push
adc
popa
fdivs
adc
adc
out
and
pop
js
hlt
adcb
xchg
xchg
jle
in
in
or
adc
ret
aas
in
int
sbb
stos
jmp
jne
test
push
in
loop
push
repz
lds
push
hlt
call
jnp
add
mull
sbb
out
in
das
imul
inc
xor
and
loopne
xor
fldcw
adc
jl
dec
adc
hlt
mov
repnz
adc
mov
inc
ret
call
stos
push
add
jecxz
stos
imul
adc
push
mov
xor
add
inc
mov
fdivrl
out
pop
in
or
or
and
mov
andl
mov
pop
mov
mov
lods
repnz
or
xchg
and
arpl
cli
mov
pushf
mov
outsb
or
imul
xor
cmp
call
adc
or
fs
and
jecxz
jg
jne
pop
pushf
sbbb
mov
movzbl
shr
mov
movb
movb
movb
mov
mov
sub
xor
sub
mov
add
mov
add
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
shl
jmp
test
dec
push
push
sbb
push
mov
in
xchg
or
adc
daa
cli
adc
popa
sti
sbb
jl
lcall
push
inc
lods
xchg
xchg
lcall
sub
das
pop
mov
stc
add
push
xorl
insb
rolb
pop
xchg
xchg
pmaddwd
ret
lret
inc
adc
ss
mul
sub
shlb
jne
nop
jo
jns
mov
jns
out
imul
into
sub
orb
test
dec
and
jb
push
test
xchg
sbb
in
in
pop
subb
das
jle
pop
jp
mov
mov
inc
inc
inc
fwait
std
lea
fs
scas
mov
pop
dec
divl
aas
mov
jo
scas
xor
call
mov
mov
cld
out
jecxz
int3
jae
mov
shll
mov
movl
shll
in
test
movsl
test
xlat
lods
sub
ja
xor
mov
ss
xchg
mov
xchg
xchg
push
and
stos
xorl
xor
xor
dec
jbe
add
sbb
pop
inc
push
push
out
movsl
jne
dec
repnz
sub
cmpsl
sub
aam
xchg
sbb
push
mov
add
rep
add
sub
movsb
fadds
hlt
jbe
lcall
stos
or
jbe
mov
cmp
push
sub
adc
cmpsb
jnp
cltd
testb
stos
jne
stc
push
out
outsl
cmp
xchg
cs
pop
popa
stos
mov
jb
pop
divb
clc
fsubrs
cmpsb
mov
or
or
add
adc
mov
out
arpl
push
std
adc
inc
in
popf
scas
inc
push
pop
mov
mov
mov
stc
inc
aas
movsb
inc
mov
arpl
cmpsb
fstl
mov
out
cld
test
imul
movsl
mov
lahf
add
fiaddl
mov
xchg
jae
insb
and
cmp
enter
fiadds
adcl
cld
clc
cmp
mov
add
aad
sbb
xchg
fs
pushf
mov
das
mov
aaa
lret
and
imul
lods
sub
shll
lret
xor
cmp
and
movsb
mov
sbb
rorl
jb
add
stos
outsl
inc
xchg
inc
iret
xor
and
push
movsb
sti
mov
lock
push
dec
push
std
push
fmuls
aad
push
fldt
into
lret
cli
shrb
mov
push
mov
sub
inc
enter
mov
out
sarl
int3
pop
mov
call
sub
in
jae
xchg
lcall
aaa
jae
pop
sti
cmp
incb
bound
dec
or
sbb
outsl
addl
ret
xchg
int
fwait
cmp
fwait
sar
add
sbb
insb
leave
addr16
or
ficompl
pusha
scas
cmp
sbb
popl
xchg
jge
mov
or
jo
sbb
add
negl
fisttpll
pop
push
push
ljmp
and
adc
xchg
cmp
cmc
and
fimuls
cmpsb
inc
cs
jns
xchg
pop
push
pusha
mov
sub
mov
fsubs
adcb
es
xchg
sub
or
jecxz
mov
sbb
test
add
pushf
addb
cwtl
jge
push
iret
pusha
push
fdivr
mov
arpl
xlat
push
shlb
lods
repz
jle
lahf
push
rcrl
jnp
lcall
lods
pop
adc
cltd
cltd
es
scas
test
mov
pop
dec
mov
xchg
adc
mov
stos
fistps
dec
dec
mov
int
lods
adc
fdivrl
popa
jg
jge
jo
into
pop
inc
xchg
mov
loop
xchg
test
jecxz
test
dec
mov
adc
rorl
and
les
aaa
mov
aaa
push
stos
test
in
cltd
call
movsl
or
pop
xchg
mov
sarb
jb
fs
in
fs
je
and
arpl
cmp
fists
addb
sbb
jns
scas
fisttps
ret
xor
jmp
jae
xor
xor
push
push
int3
sub
ds
adc
daa
cli
adc
dec
out
and
xor
cmpsl
minps
and
push
mov
loop
gs
push
out
icebp
or
scas
cli
jnp
jbe
out
cmc
in
mov
test
jecxz
scas
out
jle
inc
setl
xor
aaa
dec
xchg
shlb
mov
ret
inc
out
lock
adc
leave
imul
xor
in
gs
cmpsl
or
leave
test
xlat
sbb
mov
outsb
lret
loop
and
movsl
das
pop
loopne
mov
sti
out
stc
lret
sbb
cmp
test
or
and
cld
lods
mov
sub
add
nop
imul
jl
fidivs
lea
inc
fistpll
loopne
lods
repnz
xor
cwtl
inc
iret
sub
imul
flds
add
test
dec
xor
in
pop
ficoms
push
jge
cwtl
cwtl
adc
aam
or
insl
enter
pop
lret
jae
stos
mov
cmpsl
mov
enter
pop
test
jae
out
push
push
mov
mov
push
and
aas
mov
repz
int
test
fistps
sub
or
leave
lods
or
shlb
or
mov
sbb
scas
push
divb
xor
inc
es
movsl
mov
out
xchg
or
lret
lock
shll
or
cmp
jbe
leave
jmp
stos
aaa
push
js
sti
addl
je
xor
ret
dec
stos
ljmp
pop
jecxz
xchg
xor
iret
int3
xchg
pop
dec
pop
mov
loopne
shlb
pop
jb
inc
and
lods
cwtl
mov
xchg
jns
mov
in
enter
jmp
data16
scas
nop
into
into
mov
push
and
pusha
ret
inc
jno
push
mov
je
mov
ds
adc
jnp
mov
gs
test
bound
jo
stc
repz
push
shll
outsl
sub
push
ss
and
sub
pusha
xor
ja
loope
scas
hlt
lret
repnz
jp
mov
sbb
cwtl
mov
je
xchg
push
xor
pop
inc
dec
ret
xchg
add
enter
inc
pop
xor
fidivs
pop
ficompl
inc
fcompl
pop
std
or
clc
jne
add
push
inc
and
xchg
insl
xor
fcompl
fists
outsl
cmpsb
jmp
push
pop
shlb
in
inc
mov
push
cmc
out
insl
pop
add
ret
jmp
cld
and
pop
lock
inc
lret
jae
sbb
into
aas
pop
test
push
js
out
cld
sub
fs
xor
stos
cmp
pop
sbb
es
push
mov
scas
mov
sub
pop
ret
iret
xchg
mov
mov
dec
pop
adc
int3
sbb
ret
jbe
dec
push
outsl
orl
scas
mov
xchg
cmp
dec
movsb
jns,pn
adc
push
in
ds
add
dec
mov
mov
mov
ss
jae
mov
data16
mov
pop
fisubrl
xchg
fs
mov
mov
pop
fs
mov
divb
cmpsl
sar
movsb
pop
xchg
mov
les
out
dec
outsl
mov
lods
js
inc
sbb
push
cwtl
push
push
fwait
pop
mov
push
mov
adc
adc
dec
fmull
mov
mov
jecxz
jae
fwait
mov
sub
sti
push
mov
sbb
add
jge
push
cli
fidivl
pop
mov
pop
pop
cs
dec
out
push
inc
inc
jnp
leave
lahf
mov
cmp
out
pusha
inc
sbb
fwait
nop
outsl
dec
add
clc
aas
push
cltd
out
orl
jl
leave
in
daa
cltd
shl
idivl
xchg
xor
mov
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
shrd
shr
ret
xor
or
xor
mov
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
cmpl
jb
adc
jmp
push
call
mov
mov
mov
sub
push
mov
mov
movl
sbb
mov
subl
orl
orl
movzwl
or
mov
mov
mov
xor
add
mov
adc
mov
mov
addl
sub
mov
mov
movl
sbb
not
mov
jmp
xlat
jmp
loopne
aam
cmc
or
aas
mov
aaa
cli
adc
pop
and
and
and
add
jns
pusha
in
movsl
adc
cmpsb
dec
pop
xor
lea
ret
scas
xchg
sub
faddp
mov
or
out
adc
loopne
add
fcmove
and
incl
mov
mov
inc
add
sub
xor
adc
lods
mov
in
sti
mov
mov
mov
sbbl
jnp
adc
arpl
sub
insb
test
fnstsw
cmp
jge
jno
fistpl
mov
push
jp
jle
and
lods
and
pop
in
cmpsl
lcall
insl
jae
popl
ficompl
sub
xchg
xor
jg
hlt
mov
repz
test
dec
adc
mov
int
lock
arpl
test
push
inc
aam
pop
push
jg
xchg
pop
in
arpl
clc
test
fs
enter
cmp
lahf
repz
es
jg
fistl
dec
adc
mov
or
xchg
or
in
jle
rcll
insl
xor
mov
aas
add
push
ljmp
aam
jle
sahf
ja
jecxz
fs
sub
lods
je
push
lcall
xchg
test
idiv
sub
xlat
in
xor
addb
xor
flds
aaa
push
and
or
sbb
xor
shlb
mov
sbb
call
mov
add
cmpsb
sbb
adc
in
dec
imul
jge
xor
fildl
push
fdivrs
inc
les
push
fdiv
ljmp
out
add
mov
jns
loop
cltd
in
gs
cmp
sbb
adc
add
mov
sub
pop
int3
add
jmp
imul
clc
in
ja
inc
pop
lea
add
xor
mov
xor
or
fld
lret
mov
lea
div
adcl
lcall
push
mov
dec
int
rcrb
jno
test
std
and
pop
loope
scas
imul
mov
pop
push
les
or
and
mov
cli
pop
jmp
pop
loop
sbb
aad
jp
fnstsw
stos
jl
nop
jnp
cmp
sbb
jae
add
neg
pop
cmp
push
dec
rclb
sbb
jne
repnz
out
add
dec
stos
jl
jns
push
jl
gs
add
call
cmp
mov
test
xchg
and
clc
fwait
imul
repnz
scas
lods
ret
push
mov
in
cmp
mov
arpl
cmp
ret
in
jno
mov
mov
jle
xor
js
repz
mov
cwtl
aas
movsl
mov
lcall
test
stos
xchg
rorl
sub
dec
jle
fisubrs
out
sub
cmp
fmul
notl
or
hlt
mov
jge
sahf
and
pop
mov
stc
test
int3
cs
out
repz
mov
ja
mov
push
cmpl
call
adc
insb
jnp
ds
repnz
xchg
subl
adc
aad
lret
jae
cmp
pushf
pop
je
shufps
test
loope
pop
dec
dec
jno
fwait
mov
popf
xchg
adc
insb
das
loop
push
push
lret
jmp
arpl
xchg
das
inc
mov
jp
rcrl
loopne
jp
push
cmp
mov
pop
mov
call
lcall
mov
inc
dec
mov
inc
fldenv
stos
inc
mov
inc
xchg
push
cmpsb
cld
inc
in
jae
add
cmpsl
jnp
imul
cmp
pop
fwait
push
loopne
inc
push
adc
inc
mov
imul
dec
jns
add
pop
and
pop
push
out
push
adc
mov
cmp
push
and
scas
push
fistpll
mov
test
adcb
or
orl
lea
cmpl
ja
xor
xor
jmp
pushl
push
pushl
push
pushl
call
mov
mov
mov
mov
add
mov
andl
mov
mov
or
mov
shrd
sbb
shr
cmpl
jl
jmp
pushl
push
pushl
pushl
pushl
push
push
pushl
pushl
push
push
call
mov
mov
xor
xor
or
mov
movl
movl
orl
movl
adc
movl
cmpl
ja
or
jmp
call
movl
movl
movl
movl
movl
movl
sbb
movl
cmpl
jge
xorl
sbbl
jmp
pushl
push
push
pushl
call
movl
movl
movl
movl
movl
movl
jmp
mov
dec
or
loopne
xchg
xchg
lds
adc
cli
adc
jmp
jecxz
dec
add
adc
clc
in
repz
adc
dec
scas
inc
cmp
scas
in
push
data16
faddp
inc
fisttpl
push
mov
jns
or
mov
call
add
inc
push
push
js
xchg
sub
repz
loop
push
fidivl
sbb
jb
les
xchg
repnz
aad
add
sub
xor
into
mov
ja
daa
jmp
mov
ret
or
pop
cmp
fstpl
loope
cmp
scas
add
pop
js
and
pop
inc
data16
lds
push
iret
jmp
lcall
loop
popf
push
xlat
ficoml
or
stc
icebp
cmp
push
push
cmpb
cmp
pop
shrl
mov
adc
es
bound
mov
pop
pop
mov
jno
add
mov
sti
inc
cltd
scas
mov
push
inc
mov
mov
scas
cli
out
xor
xor
ficoml
cltd
cmp
add
fmuls
scas
mov
mov
ljmp
dec
ja
push
mov
dec
push
cmpsl
inc
rorl
inc
dec
sub
lods
xchg
incl
push
icebp
fistps
cmp
mov
shrl
data16
out
push
adc
test
dec
add
mov
dec
faddl
adc
lahf
jnp
stos
cmpsl
ljmp
fmuls
push
pop
jmp
popaw
xchg
outsb
pusha
inc
rcrb
addb
or
sbb
mov
fdivl
movsl
jge
and
jae
xlat
nopl
mov
jmp
shrl
inc
gs
nop
stos
rorb
aad
iret
mov
lds
hlt
cs
sbb
mov
push
test
jp
dec
add
in
inc
fucom
es
jb
iret
out
xchg
mov
lods
fs
cli
push
outsl
xchg
sub
xchg
lock
dec
xchg
push
bswap
mov
dec
pop
cmpsb
xchg
fwait
outsb
scas
pop
adcb
and
and
xor
imul
test
mov
lods
orb
xchg
outsl
cltd
aaa
inc
fwait
mov
inc
pusha
add
test
xor
jle
cmp
aam
jecxz
mov
mov
icebp
lods
add
pop
repnz
mov
dec
scas
dec
and
imul
push
test
in
fstpt
cmpsb
imul
add
aam
popa
mov
cmp
stos
mov
or
xchg
icebp
push
out
test
adc
jb
mov
jle
int
loop
xor
int
xchg
into
sti
cltd
sbb
leave
fwait
jns
jecxz
cmpsb
xor
fwait
test
inc
push
out
lcall
xchg
aam
mov
rclb
loope
insl
inc
cld
bnd
mov
pop
mov
data16
ret
pop
in
lret
inc
sbb
fdivl
cwtl
mov
pop
repnz
jns
pop
sbb
xchg
lret
push
lret
sub
cmp
inc
addr16
scas
insb
pusha
mov
je
data16
js
insb
jp
push
sti
enter
push
nop
aad
outsb
fdivs
pop
popa
jno
aas
pushf
add
mov
orl
scas
jmp
out
jecxz
xor
jl
mov
jle
addr16
stc
mov
sub
jle
repz
push
mov
lcall
dec
pusha
pushf
sbb
and
push
std
add
mov
es
popf
mov
lret
adc
stos
je
aad
or
mov
xlat
cmp
push
cld
shlb
mov
sbb
stc
mov
imull
cs
ja
pop
cs
mov
in
mov
jne
mov
and
mov
mov
sbb
pop
aam
repz
jo
mov
adc
sbb
aam
in
loopne
inc
rorb
fldt
jno
inc
mov
push
jle
push
mov
loopne
filds
jb
and
fisubrl
hlt
and
fwait
aaa
icebp
xchg
iret
ret
movl
cmpl
jg
not
jmp
push
push
push
pushl
pushl
pushl
push
pushl
pushl
call
movl
movl
movl
movl
mov
shl
xor
mov
subl
push
jmp
repnz
push
sub
iret
adc
mov
xchg
aaa
cli
adc
repz
pushf
cmpsb
lret
roll
mov
jmp
cmp
sub
bound
inc
popf
xchg
in
popf
and
imul
mov
sti
lods
mov
dec
pusha
push
or
mov
pushf
jo
xlat
sti
push
push
cmp
mov
lcall
push
sbb
sbb
rcrl
pop
scas
jg
jmp
icebp
les
add
sti
sbb
out
fadd
mov
xchg
repz
test
and
mov
icebp
inc
mov
imul
and
push
stc
sbb
addr16
out
stos
xor
jbe
and
ficoms
dec
dec
sub
push
stos
sti
imul
sub
fwait
sbb
xor
lret
add
inc
and
jge,pn
sbb
cmp
push
xchg
xor
pop
insl
mov
and
mov
jl
and
push
jge
mov
xchg
repnz
scas
push
add
adc
arpl
and
xor
das
nop
lret
pop
xchg
popa
in
cmpsb
jl
add
rcll
daa
cmpsb
or
lea
out
mov
inc
lods
sub
pop
pop
push
sub
mov
loopne
cmc
and
jge
and
cld
mov
adcl
movsl
aam
jecxz
jg
or
inc
es
dec
jae
ds
fwait
and
xor
sub
dec
xchg
gs
cmp
sti
mov
xor
ret
sbb
in
daa
jno
gs
mov
dec
test
fwait
mov
mov
pop
cmpsl
cmp
test
fisttps
lcall
inc
mov
cld
cmpb
pop
and
jle
xchg
mov
mov
vmovdqa
mov
mov
mov
stos
fwait
pop
push
fwait
repz
or
in
ss
and
cli
jmp
call
std
add
je
sahf
movsb
adc
testl
push
xchg
insb
push
mov
cmc
mov
jne
popf
cmp
sub
push
jns
lcall
jno
cmp
loop
inc
shl
scas
loope
pop
ljmp
mov
mov
loop
mov
les
int3
lds
cmp
ss
or
sti
mov
enter
repz
std
movl
cmp
mov
in
je
stc
mov
aaa
push
bound
adc
and
jb
jmp
inc
insl
movsl
xor
fwait
dec
pop
pop
fs
subb
xchg
test
sub
mov
fs
dec
sarl
je
push
and
sub
xchg
mov
jge
and
inc
push
stc
or
jle
jmp
and
insl
pop
cwtl
sub
mov
sbb
pop
add
lods
pop
or
mov
dec
cltd
jae
inc
push
clc
mov
mov
xor
bound
mov
decl
mov
nop
int
or
hlt
sbb
testb
les
adc
imul
pop
cmpsb
add
daa
cli
cmp
sub
push
pop
mov
sub
jb
ret
mull
dec
pushf
int3
bound
daa
sahf
mov
push
xor
mov
in
scas
add
pop
fucom
sub
cmp
cmp
inc
popa
or
add
nop
test
jo
lahf
insb
dec
mov
jle
jl
shll
out
dec
cltd
bnd
jg
in
sub
movsl
xchg
pushf
int3
mov
or
fdivl
stos
movl
cmp
scas
push
repnz
mov
cld
push
dec
sub
xor
popa
push
stc
sbb
test
adc
cld
fdivrl
fldt
lea
mov
adc
fidivrs
push
push
push
sbbl
call
cmpl
jbe
jmp
pushl
push
push
push
pushl
call
mov
mov
xor
mov
mov
sub
mov
lea
cmpl
jle
and
jmp
push
call
mov
mov
or
and
mov
or
xorl
xor
movl
cmp
jne
andl
mov
sbb
mov
and
shrd
xorl
jmp
mov
pop
xor
ss
movsb
cmp
lds
mov
adc
cli
adc
pop
or
push
cli
xchg
mov
or
fwait
leave
or
mov
and
mov
mov
andb
mov
fcomp
test
stos
clc
repnz
sahf
loop
mov
into
rorl
inc
stos
add
add
test
out
inc
jnp
fcmovnu
scas
movsl
psllw
out
enter
fsubrp
push
mov
testb
das
inc
test
mov
icebp
mov
in
mov
cmp
add
push
xchg
xchg
test
lock
pop
notb
test
lods
mov
fwait
xchg
jno
clc
jno
push
pop
add
stos
int
fdivs
ja
orb
loope
and
in
jo
cmp
je
das
test
test
xchg
xchg
jns
ret
mov
push
iret
movsl
subb
int3
hlt
mov
dec
push
mov
lcall
mov
daa
jns
push
popf
mov
xchg
dec
icebp
aam
outsb
fs
repnz
es
adc
mulb
push
dec
push
xor
jne
adc
jns
mov
jmp
cmp
cmp
or
xchg
dec
mov
jno
pushf
mov
xor
pop
mov
mov
sub
aad
es
test
in
sub
mov
jo
stos
jno
mov
cmp
or
clc
hlt
or
jno
test
pop
in
and
xorb
popa
mov
repz
lock
jecxz
adcb
sti
dec
mov
sub
fdivl
dec
cmc
or
aas
xchg
ljmp
mov
icebp
jae
jae
inc
stos
xlat
xor
int
enter
mov
aas
push
testb
in
mov
arpl
out
call
into
clc
inc
pop
adc
xor
imul
test
lea
mov
lret
sahf
mov
jbe
sbb
and
and
mov
inc
clc
stc
sub
add
jno
shl
or
jl
adc
pop
pop
ret
pushf
aam
jge
jae
add
pop
shll
xorl
popa
xchg
adc
ficomps
cltd
add
sbb
push
adc
dec
xor
mov
popf
mov
sub
jne
xchg
dec
ret
sarb
jae
cmpsb
fimull
out
out
adcl
xchg
or
push
pop
add
or
movsl
push
repz
xor
rclb
cli
add
jmp
jnp
hlt
mov
leave
jle
add
test
lods
fwait
dec
mov
orb
out
mov
mov
push
cmpsl
push
xchg
testb
aas
inc
mov
leave
dec
sahf
sub
rcl
sub
xor
mov
jns
lock
cmpsb
jno
push
push
jnp
lahf
sub
repnz
push
xchg
movsb
inc
sbbb
mov
cs
std
and
daa
ds
mov
push
pop
call
nop
iret
outsl
data16
inc
and
mov
aad
shrb
es
mov
fistps
jl
insb
fstps
sbb
scas
add
xor
bound
xchg
lods
push
mov
mov
sub
stc
roll
test
shl
add
or
adc
mov
pop
add
lock
jbe
mov
inc
cltd
pop
fidivrs
inc
pop
orl
jne
mov
inc
and
aaa
lods
xor
or
push
add
sbb
dec
xchg
movsl
xor
push
xor
outsl
and
adc
pop
fs
xor
test
imul
data16
jp
sub
mov
push
mov
and
mov
insb
pop
sub
data16
testb
shlb
sbb
fadd
mov
push
cmp
js
in
jae
out
ss
aaa
fcomp
or
pushf
fdivrp
and
call
rolb
adc
xor
mov
shl
xor
xor
or
mov
mov
cmp
movl
jne
movzbl
and
mov
mov
jmp
adc
mov
pop
rclb
test
mov
adc
cli
adc
es
inc
jae
xor
xor
outsb
scas
ss
xchg
mov
hlt
cmpsl
or
xchg
mov
xor
pop
xlat
cmp
jns
stos
cmp
lea
mov
testb
scas
std
lods
lods
pushf
add
enter
or
mov
push
cmp
push
jne
cltd
out
sub
mov
push
jmp
mov
jb
dec
adc
sub
dec
dec
mov
outsb
cmpsb
in
and
mov
daa
push
push
mov
out
popf
in
int3
mov
out
popf
pop
shr
inc
xor
loop
mov
mov
clc
jne
xor
aam
les
jg
cli
hlt
jo
std
mov
test
lea
cmp
lcall
stos
data16
dec
std
cmp
lock
leave
cmp
enter
scas
out
lods
pop
das
inc
mov
loopne
add
push
int
rcll
pop
dec
push
xchg
xchg
icebp
push
or
lcall
pop
inc
test
sbb
inc
xor
xor
or
xchg
xchg
lods
cmc
dec
and
ficompl
mov
and
fimull
adc
or
push
hlt
rclb
pause
cmp
hlt
fidivs
ljmp
dec
pop
pop
iret
sub
inc
xchg
xor
sub
outsl
ret
mov
lods
xor
ss
pushl
arpl
data16
mov
clc
pop
nop
loope
lods
xor
jge
test
pop
fldenv
mov
jae
jne
dec
sbb
and
mov
cltd
repnz
mov
jmp
push
lea
movsb
sub
push
mov
mov
pop
mov
call
icebp
testl
push
lret
mov
aaa
lcall
or
out
push
sub
in
es
not
ds
les
mov
and
add
cs
js
push
inc
fnstsw
jge
movsl
mov
jge
fldcw
ret
ret
jbe
inc
std
mov
inc
sub
fiaddl
pop
cli
or
or
sbbb
imul
hlt
jp
insb
and
test
movsb
sub
data16
mov
add
sub
pop
add
pop
or
dec
jg
mov
jne
sub
sbb
jge
xor
loopne
push
outsl
loopne
sbb
icebp
sub
mov
mov
add
pop
pop
lods
test
dec
scas
cmpl
mov
cmp
pop
or
dec
ficompl
mov
loopne
cmp
icebp
in
test
push
mov
mov
mov
pop
ljmp
sub
lcall
rorl
mov
call
loopne
xchg
inc
fstps
adc
add
std
scas
push
cmpsl
jge
in
repnz
push
mov
mov
fwait
pop
addr16
jne
push
xchg
dec
aad
dec
mov
cwtl
loopne
dec
fstp
mov
test
bswap
divb
lods
aam
stos
out
add
insl
push
daa
addr16
notb
jo
jp
mov
xchg
stos
jl
ljmp
aad
das
das
push
jmp
ss
add
mov
push
pop
sarl
test
pop
rorl
mov
popa
and
sub
mov
bound
mov
aad
daa
ret
pushf
and
mov
fistps
push
lods
dec
cli
ja
add
in
stc
loope
xchg
push
or
cltd
push
sub
mov
inc
push
stos
aaa
cmpb
mov
es
fsts
mov
shrb
or
mov
ljmp
pop
daa
mov
xchg
enter
cmp
xor
pop
fbld
adc
or
ret
shll
push
xor
mov
out
stos
iret
loop
mov
adc
cmp
or
cwtl
stc
hlt
pop
mov
std
lods
and
and
mov
mov
or
xchg
cmp
sub
mov
neg
mov
addl
jmp
jo
mov
push
xor
sbb
xchg
iret
xchg
pop
lds
cli
adc
mov
xor
pop
fidivrl
mov
repz
jp
sub
ror
fldenv
repz
jae
scas
mov
movsb
icebp
adc
cmpsl
pusha
cwtl
test
mov
add
inc
sbb
or
lods
mov
movsl
clc
insb
shll
sbb
cmc
jl
lret
lock
and
add
mov
xor
js
loopne
lcall
push
movsb
pusha
mov
xchg
push
rolb
lods
loope
out
mov
and
push
scas
xchg
je
dec
mov
dec
inc
lock
add
insl
iret
shrb
or
mov
lock
ret
jbe
push
lods
shlb
nop
adc
adc
lock
push
popa
inc
and
insl
stos
jbe
and
scas
cmp
sahf
add
scas
gs
xor
push
pop
or
mov
push
push
mov
js
int
testb
push
hlt
daa
mov
pop
dec
es
cltd
arpl
jecxz
or
sbb
test
dec
sub
sbb
mov
rolb
lahf
std
inc
test
out
sbb
outsl
adc
jns
mov
mov
lock
sub
lea
sub
sub
mov
pop
inc
out
cmpsb
mov
repz
pop
jnp
add
push
jge
sub
sbb
decl
adc
mov
inc
inc
fwait
jbe
std
push
les
int
lret
out
jl
shl
mov
adc
jge
test
xchg
push
xor
push
fimull
push
cmp
mov
sbb
outsb
jl
imul
xor
xchg
test
push
inc
loope
stos
aam
hlt
push
pop
fisttpl
mov
mov
add
jns
hlt
out
sub
mov
jp
outsl
repnz
pop
inc
aas
sbb
addr16
fsts
jl
lea
pop
in
xor
outsb
adc
jo
xchg
jae
mov
push
push
shlb
push
sub
ficompl
xor
fnsave
mov
adc
mov
inc
pop
sti
and
xor
adc
dec
test
cmp
mov
sahf
push
inc
ret
jo
xor
lock
mov
lret
xor
inc
shl
pop
scas
stc
sub
cli
ret
sbb
jnp
jp
lahf
fistpl
adcb
ss
lds
mov
mov
into
cwtl
add
pusha
mov
jle
or
scas
pop
pop
jo
cwtl
fnstsw
sbb
inc
out
inc
pop
and
mov
sbb
and
rcrl
add
jbe
fdivp
test
test
rcrb
cli
pop
push
popf
in
call
rcrb
push
or
pop
test
jnp
jg
pop
add
mov
cmpsl
leave
js
aas
adc
jmp
jmp
xor
adc
and
jp
out
pop
mov
dec
and
pushf
roll
lcall
psraw
popf
stos
lea
push
sub
sbb
push
push
push
adc
cmpl
loopne
outsb
sub
loope
int3
mov
inc
sub
in
in
sbb
xlat
xchg
cmp
ficoml
ffree
stc
lea
lahf
jle
ret
xor
adc
test
rcr
cmc
jnp
in
inc
sbb
push
xor
and
lahf
movsl
in
mov
mov
cld
push
or
cs
mov
sub
addb
fidivrs
sbb
push
cmp
sub
ret
pop
mov
push
jne
dec
pusha
mov
sahf
aaa
adc
daa
imul
cmp
out
sub
rcrl
dec
inc
mov
leave
ja
jne
imul
mov
adc
push
into
add
test
nop
cltd
imul
das
push
enter
mov
or
imul
xor
dec
mov
dec
push
popf
enter
mov
or
lods
roll
orl
mov
xor
mov
addl
jmp
lea
popf
adc
adc
push
and
inc
test
xchg
adc
aaa
cli
adc
push
or
sbb
dec
mov
adc
lds
in
fisubrs
out
mov
pop
nop
movsl
cmpsl
push
fimuls
mov
mov
andl
add
sbb
pop
push
push
rorl
cltd
lods
dec
cltd
xchg
pop
cmc
inc
pusha
xor
mov
lds
sub
cmp
or
push
or
push
repz
idivl
xchg
pop
xchg
jecxz
pop
shlb
inc
mov
mov
xor
rcrb
fsub
ds
mov
and
rclb
sbb
test
or
push
fdivr
icebp
ss
lods
div
pop
fildl
xor
mov
push
enter
or
xchg
cs
push
popa
and
loope
xor
mov
lret
sub
enter
sub
jecxz
pop
cmp
sarb
inc
push
mov
push
popl
ror
out
jmp
xor
lds
sub
aad
inc
out
dec
mov
mov
mov
sbb
xchg
jl
push
dec
das
dec
int
push
adc
sarl
jle
dec
popf
jo
jecxz
xchg
mov
and
popf
aam
enter
imul
pop
sbb
fcoms
jo
sbb
and
push
fs
lods
dec
mov
arpl
sar
stc
test
cmp
mov
lea
lret
add
cld
ljmp
inc
pusha
xor
cmc
push
mov
push
xchg
in
scas
gs
cmp
adcl
sbb
js
es
loopne
shll
enter
push
in
cmpsl
jno
hlt
fcmovnb
xor
adc
popa
cltd
in
out
clc
sbb
mov
push
stc
push
movsl
push
ficompl
mov
pop
out
inc
mov
pop
fldl
mov
add
fidivrl
xchg
lods
rcl
push
hlt
loope
leave
movsb
xchg
xor
addr16
and
xchg
adc
mov
into
lea
xor
cmp
mov
jnp
cmp
cli
mov
aad
movsl
cmpsl
push
mov
cmpsb
mov
and
fisubl
and
mov
cmp
sbb
add
or
or
pop
mov
add
iret
fnstsw
mov
and
scas
leavew
xchg
pop
ljmp
jmp
pop
imul
pop
mov
mov
and
fsub
and
in
nop
or
pop
jo
xchg
sub
in
pop
sub
aam
outsl
push
ja
bound
cwtl
incb
or
sbb
sub
aas
div
mov
jbe
in
call
popa
call
pop
cmp
popf
out
push
and
daa
cmp
loope
inc
sbb
jb
lea
push
movsl
ja
in
pop
push
movsl
push
fimuls
jle
pop
add
out
sbb
push
adc
popf
shlb
in
xor
sbb
or
fnop
popa
or
stc
add
sub
inc
mov
fidivl
xor
jl
fsubl
outsl
in
rolb
popa
and
dec
int3
fsubp
fucomp
xchg
notb
mov
sbb
dec
push
movsb
enter
shrb
repz
sbb
adc
cmp
push
add
addl
in
int
ficoml
push
sub
les
movsl
test
adcb
in
daa
mov
mov
push
jae
movsl
sub
lock
push
add
jmp
mov
popa
addb
mov
cltd
jno
pop
ret
cmpb
jle
test
gs
xchg
xchg
mov
or
push
incl
push
mov
leave
dec
pop
sbb
sub
and
add
xor
pushf
push
in
mov
lods
dec
lcall
xor
xor
shr
xor
or
adc
jmp
dec
sbb
ss
push
or
pop
or
push
jns
adc
cli
adc
mov
imul
enter
sub
lock
jo
mov
outsb
popf
pusha
lods
pop
lock
ror
or
cmp
movhlps
dec
es
sbb
lret
sahf
xchg
dec
ljmp
fst
jae
fdivrp
or
mov
or
loope
mov
mov
outsl
mov
xor
cmp
cmc
aas
hlt
cs
mov
or
adc
jns
xor
insl
addr16
or
imul
add
imul
daa
sbb
loope
push
dec
add
hlt
fcoml
jmp
insb
sbb
adcb
mov
in
nop
push
icebp
data16
scas
stos
es
xor
mov
pop
inc
or
jns
or
testb
in
aam
imull
inc
lcall
sti
fisubl
in
cmp
xchg
sub
add
ret
mov
fxch
sub
mov
mov
pop
adc
dec
call
stos
adc
push
push
push
inc
dec
add
repz
out
adc
negb
and
jg
sub
in
add
shr
mov
push
mov
jle
sarb
xor
inc
inc
mov
out
popf
subb
shll
or
mov
xchg
mov
jp
push
pop
mov
dec
pop
lds
out
push
ss
adc
aas
jae
hlt
scas
in
mov
bound
xor
xchg
in
mov
adc
inc
lret
out
outsl
clc
inc
or
mov
cmpsl
add
add
push
fcmove
out
cmpsb
xor
rcll
iret
or
in
aaa
adc
clc
xchg
xchg
lret
lahf
pushf
xor
sbb
add
loopne
and
push
sbb
test
dec
jno
out
inc
jp
rorb
rorl
popf
cmc
dec
scas
int
jae
jg
lret
sub
cmp
imul
in
dec
gs
pop
incl
clc
bound
mov
and
add
push
jl
sub
dec
sahf
jg
jge
adc
mov
fucomip
lods
sub
cs
fistpl
push
add
clc
cmp
mov
cmpsl
test
aas
jp
pop
das
dec
pop
xor
mov
je
popf
cld
lock
mov
push
jns
mov
test
lcall
int
inc
rcrb
add
js
and
mov
xor
out
cli
pop
mov
adc
das
sti
pop
cmp
and
jb
test
pop
pop
lcall
adc
cld
dec
fidivrl
dec
jnp
inc
jae
inc
xor
inc
outsl
sti
call
repnz
in
dec
outsb
sbb
hlt
sub
cwtl
das
cmpsl
inc
mov
push
xor
xor
sbb
and
sti
dec
sbb
mov
jb
mov
mov
cmpsl
pop
or
cmp
dec
adc
rcrb
pop
ds
aaa
mov
mov
xchg
dec
and
lock
mov
and
lds
jp
out
ljmp
fisubs
movsl
push
add
es
insb
test
mov
add
jp
adc
int3
push
nop
mov
in
push
xchg
sahf
ret
adc
fdivr
add
jns
loopne
jnp
adc
cmp
jae
pop
xor
sub
sbb
jns
cwtl
pop
into
ror
add
outsl
cli
push
jmp
or
or
cmc
out
rorl
mov
add
mov
mov
jl
mov
lea
mov
adc
cmc
lret
lock
xlat
mov
mov
cmpsb
fistpll
loopne
pop
mov
test
push
cmp
fdivrl
scas
cmpsb
inc
pop
adc
xchg
imul
stos
mov
mov
push
pop
adc
int
rclb
adc
movsb
xchg
or
adc
insb
lea
inc
test
icebp
ret
loop
pop
sbb
divb
xor
addl
or
andl
shl
sbbl
sub
mov
cmpl
jb
sbb
jmp
push
push
call
mov
mov
add
mov
jmp
outsl
sub
push
xor
dec
or
mov
dec
aas
fistpl
push
jg
adc
cli
adc
sbb
push
xchg
in
cmp
sub
call
daa
fcmovu
inc
into
adc
pop
adc
jno
les
pop
shlb
pop
xor
lods
mov
sahf
and
aad
movsl
push
or
mov
loope
fbld
movsl
inc
inc
push
nop
and
jl
sbbb
mov
popf
mov
or
fsubrs
push
je
jne
adc
cmp
xchg
cli
mov
cmpsb
adcl
mov
jmp
sbbl
sbb
clc
cmc
int3
sbbb
sub
or
jge
pop
jmp
adc
fdivrl
xchg
jnp
mov
int
js
dec
imul
xchg
sbb
imul
mov
xorb
xor
xor
mov
lret
or
imul
gs
outsb
iret
imul
popa
shrb
dec
aam
push
cwtl
adc
pop
lds
add
push
push
fimull
push
into
pop
pop
fwait
add
xchg
fwait
dec
bound
xchg
pushl
push
inc
xorl
incb
lret
cmpsl
scas
mov
adc
mov
repnz
jnp
rorb
data16
pop
adc
push
stos
cmp
xor
dec
and
mov
mov
repz
aaa
mov
mov
outsl
or
pop
fsubl
shll
dec
sbb
cld
les
pushf
pop
int
push
inc
insl
jne
dec
stc
ret
dec
jne
add
pop
cli
aaa
or
cmp
push
xor
in
dec
fimuls
cmp
or
stos
mov
test
xchg
imul
push
js
into
mov
ret
and
xchg
cmpsb
cs
cmc
movsb
arpl
data16
ret
add
mov
mov
push
ret
or
sbb
xchg
add
and
mov
aad
dec
in
sbb
cmp
fsts
adc
imul
mov
jmp
and
dec
mov
sbb
sbb
sub
imul
xorb
notl
push
push
aaa
xor
inc
jge
out
inc
cmp
das
mov
pop
xor
popa
sub
in
lcall
outsb
xchg
cmp
in
lahf
ror
pop
mov
pop
inc
mov
sbb
and
mov
xsaveopt
dec
cmp
mov
jge
outsl
inc
inc
insb
inc
test
enter
and
sbb
sbb
inc
pushf
hlt
nop
xor
mov
add
and
mov
inc
xor
inc
sub
shlb
das
clc
xor
mov
inc
jno
mov
sbb
stc
cltd
das
add
scas
add
and
and
fwait
out
stc
dec
mov
push
jl
lret
aas
out
add
jnp
inc
sti
ss
xor
fmul
mov
rcrl
notb
adc
add
pop
aad
xor
dec
daa
inc
pop
pop
push
xchg
iret
jmp
incl
nop
lret
fsub
in
roll
or
roll
pop
sbb
mov
fimuls
jae
mov
sahf
jl
jbe
push
popf
cmp
jmp
aaa
mov
sub
pop
push
out
movsl
push
bnd
dec
mov
in
jae
pop
out
push
into
mov
push
fisttpll
push
aam
sub
mov
mov
push
test
test
dec
std
stos
clc
fbld
mov
paddusb
xchg
jo
or
shl
mov
xchg
xor
std
lds
insb
shll
cmp
in
adc
ret
push
mov
pop
stc
dec
add
lcall
roll
and
xchg
into
push
dec
or
and
stc
jne
pop
xchg
cld
out
cwtl
lcall
mov
xor
sbb
xchg
push
jecxz
lea
leave
jle
cli
fdivs
dec
cltd
aad
push
sbb
sbb
aam
xor
inc
xor
inc
loop
out
inc
in
xchg
aas
mov
or
pushl
inc
add
lods
roll
call
cmp
mov
mov
xor
xor
add
xor
shl
xor
or
add
mov
cmpl
jge
movzbl
sbb
jmp
pushl
pushl
call
mov
shrd
shr
mov
mov
adc
mov
xor
xor
addl
or
shl
sbbl
lea
xor
mov
addl
mov
shrd
subl
shr
andl
mov
add
mov
mov
cmpl
jle
jmp
push
call
xor
mov
xor
or
jmp
scas
mov
nop
inc
push
adc
adcl
adc
aaa
cli
adc
fsts
sbb
aas
mov
xchg
outsl
outsb
out
jno
fucomip
mov
ffree
mov
pop
enter
data16
cmp
mov
mov
outsl
addb
xor
xchg
movsl
hlt
bound
es
and
cmpl
sti
dec
inc
jno
cmpsl
movsl
leave
or
je
pop
insl
and
pop
les
jne
sub
nop
ss
add
mov
andb
push
idivl
xlat
psraw
cmc
mov
inc
inc
cltd
push
outsb
dec
adc
adc
jp
int3
lret
add
inc
adc
ret
shll
sti
icebp
andl
xorb
test
sbb
mov
mov
or
sar
pop
xchg
pop
gs
dec
mov
jb
mul
pop
sub
push
adc
sbb
sbb
ja
decl
enter
repnz
out
sbb
inc
sbb
iret
xchg
lea
mov
scas
imul
mov
cld
addpd
push
add
test
shlb
cmpsb
push
inc
and
xchg
adc
jo
cmc
xor
xchg
das
pop
xor
insl
sub
daa
cmc
push
push
xchg
sub
jae
lahf
adc
fisubs
pop
inc
dec
mov
mov
shrl
sbb
fnstcw
cli
xchg
jns
subl
loope
mov
jmp
jbe
orb
inc
jecxz
data16
add
andb
inc
cmpb
jne
sti
lret
mov
ja
push
cs
xor
loope
jg
jbe
inc
pusha
inc
cmp
push
int
enter
push
in
std
aaa
cwtl
pop
adc
inc
dec
cwtl
stos
clc
es
or
mov
jae
sbb
pop
push
in
sub
psubusw
test
pop
imulb
mov
ljmp
or
add
mov
enter
lcall
ret
fstpl
or
nop
pop
xchg
adc
or
imul
sar
repnz
sub
mov
loop
xchg
mov
push
cld
rcrl
sbb
fcmovb
lret
or
add
gs
pop
xchg
push
jmp
fistpll
mov
sahf
outsb
cmp
jecxz
aam
arpl
leave
mov
pop
mov
sbb
sbb
or
aad
sub
movsl
push
movsb
shll
add
add
cs
popf
add
stc
mov
notl
pop
push
scas
xchg
mov
mov
add
repz
jne
ja
mov
inc
mov
mov
in
jp
or
jge
mov
inc
pop
push
arpl
ss
arpl
xchg
xchg
dec
loope
imul
sub
subl
xchg
sub
clc
subb
loopne
sti
je
popa
mov
inc
mov
rcl
inc
cli
cmp
mov
xchg
fisubs
jp
fisubl
mov
sbb
dec
rorl
sbb
mov
or
add
cmp
aad
and
pop
dec
and
repz
add
arpl
popw
or
xor
adc
scas
fisubrl
stc
or
lods
jl
vcmpss
in
out
inc
fstl
jecxz
ljmp
fisubl
mov
andb
jno
push
clc
mulb
lea
aam
sbb
fists
addl
sahf
mov
push
adc
gs
jns
or
adc
xor
pusha
imul
dec
cmp
sbb
shrb
mov
in
xor
adc
rcll
push
sub
jp
add
push
inc
inc
insb
sub
lea
adc
in
loop
cmpsl
and
sub
in
clc
mov
imulb
pop
andl
cli
les
pop
cltd
imul
scas
rorl
inc
add
roll
andl
mov
mov
sbbl
xor
negl
shr
cmpl
jle
or
jmp
push
push
call
mov
mov
xor
or
shl
sub
mov
mov
cmp
jmp
dec
test
push
or
inc
jge
adc
mov
cli
adc
pop
out
and
mov
movsl
cmp
mov
adc
push
xchg
xchg
adc
adc
addl
or
pop
movsb
and
pop
mov
adc
jl
jae
push
icebp
mov
subl
mov
push
arpl
fidivs
or
pop
mov
and
repz
test
push
xchg
or
xchg
cmp
inc
jmp
xacquire
jl
push
inc
push
aaa
lds
repz
cmp
mov
les
dec
scas
lds
sub
pshufw
fwait
cmp
std
cld
out
inc
add
inc
xchg
pusha
xor
push
push
imul
adc
shlb
ds
test
add
daa
shr
xchg
daa
incl
sbb
aad
rcrl
mov
stos
push
popf
mov
arpl
inc
or
nop
jmp
std
daa
inc
mov
stc
jae
fwait
mov
cmp
ffree
enter
mov
pushf
popf
sbb
push
pop
aaa
leave
dec
lds
sub
sbb
iret
add
test
inc
or
in
jmp
repz
lret
cmp
sbb
mov
loope
aas
ljmp
jmp
lcall
aas
xor
push
add
jno
out
nop
xchg
xchg
adc
xchg
loopne
push
outsl
dec
and
loop
inc
cli
inc
adc
jecxz
mov
enter
std
push
addl
xorb
cmpsl
mov
scas
add
pop
dec
lods
xor
lahf
es
jl
or
fwait
pop
insb
out
adc
adc
xchg
jno
int3
sbb
popf
cmp
xor
hlt
loop
out
leave
das
jns
aad
cld
or
inc
cmpb
mov
movsb
add
fs
cmp
hlt
test
std
cld
daa
xlat
mov
in
out
out
decb
cmp
xchg
lock
adc
stos
dec
out
jle
jo
adc
mov
xor
clc
iret
xchg
and
sahf
pop
pop
cltd
add
adc
std
fistpl
ret
fisttpl
mov
mov
push
inc
jne
mov
mov
mov
push
aam
icebp
ljmp
sbb
pop
sbb
pop
add
shlb
pop
or
mov
xorl
cmp
fdivrs
shll
adc
adc
or
adc
out
or
push
xchg
pcmpeqd
and
pop
shrl
lds
mov
push
cmp
push
pop
mov
sbbl
outsl
sbb
orl
ja
iret
push
xchg
pop
mov
aas
out
shr
lods
pusha
mov
lahf
imul
imul
aam
fldl
mov
sbb
pop
fistps
mov
lea
cmc
fcomps
push
sub
adc
dec
mov
push
jbe
mov
icebp
test
jge
mov
ret
loop
subl
pop
sbb
loop
fstpl
js
cmpsl
fisttps
sti
sub
pop
daa
sbb
jl
icebp
jbe
mov
xlat
repnz
add
push
addr16
aam
out
jp
jecxz
data16
repz
mov
mov
adc
fwait
jp
int
lret
pop
orb
push
fsincos
int
xor
dec
ret
fs
int
je
pop
push
pop
dec
stc
daa
bound
mov
push
lock
cld
sub
ret
out
jge
xchg
js
sub
sub
jbe
mov
insl
mov
jle
or
pushf
xchg
jecxz
sbb
or
neg
push
out
jg
shl
mov
fsts
add
jg
lea
div
xorb
push
or
int
jae
adc
mov
movl
jg
sbbl
mov
mov
sbbl
shrd
mov
mov
addl
xor
shl
sbbl
xor
andl
or
orl
shr
neg
mov
add
mov
cmpl
jbe
mov
add
mov
jmp
push
push
push
call
mov
mov
shrd
shr
xor
mov
mov
mov
xorl
xor
xor
xorl
or
adcl
shl
adcl
jmp
cmc
push
xor
adc
es
out
xchg
rcrl
pop
adc
aaa
cli
adc
dec
vmread
inc
mov
add
sahf
xor
loope
pop
add
jno
daa
outsb
xlat
push
mov
sbb
mov
push
inc
inc
push
xbegin
mov
lods
push
or
add
add
sbb
push
ja
mov
lret
or
inc
mov
aaa
lds
dec
cmpsb
aam
fmull
popf
push
shl
mov
mov
xchg
mov
rcr
sahf
dec
nop
popf
lods
loop
int3
inc
mov
in
push
addb
jno
cmp
sub
dec
test
push
mov
je
cmp
or
leave
out
stos
pop
mov
jp
jns
push
mov
ror
cmp
pop
rcll
and
imul
stos
and
repnz
int
cmp
ret
xorl
sub
and
fldl
dec
inc
daa
aas
and
cmp
lds
mov
scas
jg
sbb
scas
repz
iret
data16
lret
push
int3
loopne
cmp
jmp
mov
stos
call
push
hlt
pop
push
out
xor
fldt
and
pop
sbbb
fnsave
mov
pop
lret
push
push
int
in
inc
pop
push
jno
jg
jge
imul
popf
push
mov
and
push
push
push
rorb
or
jnp
icebp
stc
push
mov
out
jl
stc
lret
adc
pop
dec
aad
push
lods
jmp
fnsave
int
xchg
mov
push
adc
cmp
fnstsw
shr
dec
test
mov
or
jns
cmp
or
hlt
adc
pop
cmpl
icebp
idivb
xchg
stos
rcrl
lret
cmp
mov
lods
jl
loopne
dec
js
or
bound
js
mov
xor
xchg
or
push
push
xchg
mov
popf
dec
xchg
daa
xchg
sub
out
in
bound
repz
daa
or
xchg
mov
out
push
or
dec
fcmovnu
arpl
dec
push
ret
cwtl
push
push
aaa
sbb
cmp
pop
dec
sbb
mov
pop
cmc
cli
subl
adc
daa
insl
int3
sub
add
jmp
xchg
push
dec
cld
or
jmp
fisttpl
dec
nop
dec
xchg
lcall
cmpsb
mov
rolb
test
sub
icebp
lret
stos
xchg
in
fisubrl
inc
orb
ds
fwait
into
jg
das
dec
fdivp
add
inc
loop
std
mov
loop
and
subl
fs
dec
cmpsl
cmc
cmp
mov
push
pop
inc
popa
enter
cwtl
inc
test
sbb
shll
popa
xchg
fmull
mov
in
nop
je
js
leave
mov
or
fnstsw
sbb
lock
cmp
xor
mov
dec
mov
push
inc
shr
fmul
jae
jo
push
and
icebp
mov
cs
pusha
dec
push
push
std
insb
pop
add
jnp
jmp
xor
addl
movl
out
loopne
int
sbb
push
lods
aaa
push
xor
aas
push
daa
loope
mov
iret
nop
mov
movsb
and
mov
cmp
mov
out
sub
loopne
insl
sbb
jmp
inc
mov
xchg
cmp
pop
fdiv
pop
std
inc
iret
mov
mulb
fwait
sub
adc
daa
cs
cmp
lcall
mov
or
fisubrs
ret
enter
gs
jg
jns
mov
add
mov
add
pop
sub
addr16
adc
mov
xchg
in
fucomp
sti
inc
dec
out
scas
xchg
pop
icebp
dec
pushf
out
xor
mov
and
lret
jb
sbb
push
jne
mov
add
jo
pop
lret
shr
mov
iret
mov
mov
sbbl
sub
jmp
cmpl
jg
jmp
push
push
pushl
push
pushl
push
push
push
push
call
mov
mov
shrd
mov
mov
jmp
ret
je
cmp
cmp
je
icebp
xchg
xchg
mov
aas
mov
aaa
cli
adc
or
decl
shlb
imul
sbb
bound
jle
lods
movsb
ret
loopne
insb
dec
fs
and
xchg
or
mov
jmp
cwtl
nop
mov
fadd
dec
rorl
lock
push
cld
aad
aaa
addr16
add
pop
push
in
mov
insb
push
mov
xchg
mov
popa
repz
enter
mov
xor
lret
or
pusha
flds
mov
movsb
sub
aas
stc
or
int
inc
insb
jo
dec
inc
mov
mov
in
cli
inc
dec
xor
jge
out
mov
jle
or
mov
jae
int3
adc
sti
push
into
loopne
mov
daa
fs
ret
les
enter
xor
jno
pop
orb
icebp
iret
jmp
mov
hlt
dec
or
shr
out
push
les
dec
and
mov
pop
mov
maskmovq
imull
push
rclb
push
cld
xor
movsb
inc
xchg
shll
cmpsb
movsb
inc
insl
outsl
les
add
add
dec
lahf
gs
nop
jge
fbstp
scas
movsb
cmp
push
xchg
insb
sub
push
aaa
xchg
push
push
add
mov
mov
jnp
xchg
data16
pop
adc
or
mov
scas
mov
movl
fldcw
movsb
adc
inc
adc
pop
cli
xor
dec
ljmp
pop
pop
aam
outsl
cmpl
int
pushf
js
mov
xchg
icebp
pop
or
pusha
out
add
test
pop
add
iret
dec
cmp
mov
jp
sub
sbb
and
andb
push
sbb
orb
mov
mov
lock
addr16
pop
es
push
adc
xor
in
add
dec
out
push
scas
pop
mov
xchg
inc
and
mov
mov
xlat
stos
push
repnz
sbb
xchg
or
add
nop
call
xor
cmpsl
mov
insl
add
sbb
cs
adc
xor
out
stos
xchg
popa
add
adc
fdivrl
aad
in
inc
sarl
pop
add
cmc
movsl
cmp
aam
pop
mov
test
jecxz
pop
xchg
inc
push
stos
adc
mov
mov
sub
mov
aas
cld
adc
mov
mov
scas
inc
enter
call
sarl
scas
call
test
aam
jmp
pop
lea
cmp
xchg
test
xor
das
jnp
mov
and
lea
imul
mov
repnz
inc
lods
xchg
retw
jecxz
out
jo
xor
mov
pop
cmc
pop
and
in
pop
or
xchg
les
mull
dec
les
js
repnz
out
adc
mov
loopne
in
jmp
inc
jle
push
sub
data16
adc
push
loope
mov
shrb
cmpsl
sbb
xor
stc
push
into
notl
rcrl
out
hlt
js
or
mov
daa
test
lea
fadd
pop
sbb
push
add
or
or
cmp
movsb
mov
fwait
mov
push
popa
push
hlt
push
mov
push
pop
cmp
jp
add
jmp
outsb
icebp
scas
jg
xchg
les
popa
push
fs
push
xlat
xor
push
jbe
loop
add
ljmp
mov
sbb
xor
les
jo
pop
icebp
scas
dec
or
enter
rcll
out
pop
add
dec
negl
movsb
cmp
ficomps
in
and
inc
das
loop
lcall
sti
imul
and
aam
aad
adc
je
add
lret
hlt
or
dec
stc
mov
mov
jl
imul
rol
clc
std
jmp
mov
decl
hlt
mov
xor
pop
movsl
dec
xor
shl
andl
xor
or
andl
shr
mov
cmpl
ja
andl
and
jmp
push
pushl
call
mov
mov
mov
shrd
shr
and
mov
mov
mov
adcl
xor
adcl
xor
xorl
or
andl
shl
add
cmpl
ja
jmp
push
pushl
pushl
push
pushl
pushl
call
add
mov
jmp
sbb
cmpsl
mov
push
push
pusha
jecxz
mov
addr16
adc
aaa
cli
adc
movsb
aaa
push
cmpsb
jl
test
cmpsl
fistpl
into
cmc
push
outsb
push
add
pop
js
sarb
int3
sbb
sbb
add
inc
sub
loopne
jae
sub
mov
mov
test
ret
sub
adc
xchg
add
int3
xchg
push
pop
jecxz
inc
xchg
xor
pop
lcall
xchg
adc
lahf
scas
test
cmc
movsl
cltd
aam
jg
jmp
mov
or
adcl
repnz
xchg
xchg
sahf
js
test
dec
out
dec
add
clc
mov
loope
pop
bound
jno
incb
sub
ret
or
jns
xor
sbb
xor
push
stos
mov
xlat
dec
enter
sub
ret
cli
jo
dec
aad
iret
xor
loop
lret
xor
jb
clc
testl
pusha
sub
add
sbbb
ja
jae
fwait
movsl
mov
push
or
loope
outsl
add
lahf
std
add
mov
sti
call
bound
iret
or
sub
fadds
adc
push
xchg
loope
jnp
pop
aas
dec
jl
pop
lea
movb
gs
lret
jb
out
cmc
popl
ret
lds
call
mov
or
in
or
fsubrl
lds
mov
call
popf
nop
adc
insb
incl
clc
sbb
jb
sbb
faddp
xlat
into
lock
scas
inc
dec
mov
adc
adcl
sbb
inc
sbbb
repz
jmp
pop
call
sti
sbb
out
push
fistpl
cmp
add
popl
addl
inc
aam
cltd
and
add
lret
xchg
xchg
xor
jns
push
adc
xorb
fstpt
cs
pop
push
sbbl
in
rdtsc
sub
sub
mov
sbb
outsl
lea
xor
test
jnp
mov
adc
inc
jmp
inc
xchg
outsb
sbb
xchg
fwait
insb
or
dec
lcall
inc
dec
xor
inc
pop
xchg
push
mov
or
outsb
lret
jl
sbb
lea
jmp
adc
repnz
cltd
in
addb
sub
push
push
lret
jnp
arpl
sub
lret
mov
out
arpl
cld
jl
les
fildll
and
add
pop
mov
dec
je
pop
bound
mov
hlt
les
mov
xor
mov
inc
fistps
xchg
add
fiaddl
pop
int
and
and
js
mov
or
xchg
jecxz
cmpsb
std
pop
and
cli
in
ret
testb
ss
jp
out
decl
sbb
icebp
add
and
pop
call
xchg
cmpsl
inc
adc
aaa
mov
mov
add
popa
dec
daa
adc
mov
cmp
fcmovne
or
dec
sbb
jbe
out
lds
adc
fwait
addr16
adc
in
jg
xchg
push
xchg
xchg
pop
inc
clc
mov
lea
push
pop
test
movsl
testb
adc
cmpsl
cmp
cmpsb
push
cmp
popa
add
or
cmp
repz
cmc
mov
sti
adc
stc
clc
mov
xchg
outsb
add
jne
jne
test
cmp
inc
sbb
adc
nop
lcall
pop
ja
xlat
inc
pop
jno
or
ja
cli
call
inc
lods
roll
pop
xchg
int3
scas
jecxz
aas
jmp
out
xchg
jg
inc
xor
adc
push
out
sbb
jl
fisttpl
out
je
jae
jmp
mov
pop
stos
cmp
mov
in
xchg
pop
mov
shrd
shr
mov
mov
sbbl
xor
xorl
shl
cmpl
jle
jmp
pushl
pushl
call
xor
or
mov
movl
mov
mov
movl
and
mov
movl
xor
mov
sbb
movl
xor
mov
or
mov
sub
mov
sbb
shrd
cmpl
jbe
sub
jmp
push
call
shr
mov
mov
xor
shl
xor
xor
or
lea
mov
mov
adc
mov
xorl
shrd
and
shr
cmpl
jb
jmp
pushl
pushl
pushl
pushl
pushl
push
pushl
call
mov
mov
shl
mov
xor
xor
or
add
mov
mov
andl
xor
mov
cmpl
jb
not
jmp
push
push
push
call
mov
shrd
shr
mov
mov
xor
adcl
shl
cmpl
jl
sbb
jmp
push
call
xor
or
lea
mov
mov
mov
movzwl
or
shrd
xorl
jmp
cmp
mov
adc
xor
adc
in
stos
push
adc
aaa
cli
adc
bound
adc
push
and
and
lods
loope
sub
fistps
and
jle
mov
inc
jo
mov
cli
sub
xchg
lahf
pop
pop
push
cmpsl
xor
mov
ds
lea
xlat
frstor
out
or
ficompl
jle
and
jl
dec
or
icebp
mov
xchg
pop
icebp
js
sbb
stos
out
rolb
inc
add
in
and
clc
mov
pop
inc
hlt
inc
dec
lods
jno
inc
xchg
fst
pusha
lret
jmp
pop
jo
int
pop
mov
sub
dec
cmp
mov
jge
out
loopne
sbb
jmp
sub
add
mov
pusha
into
push
push
stos
mov
adc
push
nop
fdivl
fstpt
or
mov
sbb
cmp
into
cmp
adc
in
xorl
cmp
int
or
cmp
adc
sbb
sub
ss
pop
inc
push
mov
rcl
das
jp
mov
arpl
xchg
test
inc
std
mov
push
es
sbbl
pop
xchg
daa
inc
scas
call
pop
test
daa
imul
adcl
mov
inc
or
dec
push
jle
xchg
mov
rorb
mov
inc
adc
fs
xor
inc
rcr
mov
xor
daa
lret
movsl
cli
cmp
mov
es
les
jne
sub
fnsave
lock
jae
mov
sti
push
iret
inc
and
mov
xchg
mov
mov
ja
enter
jo
xor
mov
iret
into
mov
mov
js
fwait
pop
mov
push
out
test
repnz
out
mov
jp
adc
add
mov
lret
lds
xor
push
jae
imul
ret
inc
shrb
iret
aam
iret
jae
rcl
and
jmp
out
bound
aad
inc
mov
ja
and
push
int
dec
jge
jge
pop
pop
fst
gs
mov
out
pop
push
mov
xor
cmpsl
test
arpl
loope
imulb
test
negb
out
cmc
fisttpl
push
das
jl
pusha
not
ljmp
pop
xor
mov
mov
push
lret
mov
sub
xchg
ror
ds
fs
xchg
jecxz
out
fiaddl
fbld
mov
call
pop
pop
mov
rcrl
mov
dec
roll
inc
xor
cmp
mov
nop
jno
add
movsl
or
repnz
xchg
add
mov
cltd
aam
cmc
dec
test
cmp
iret
dec
das
fs
or
cmpsl
cli
js
in
jmp
ds
mov
push
out
jg
gs
push
xchg
lahf
insb
lods
xorb
aas
lock
fcmovb
sbb
push
popf
flds
imul
or
psraw
out
popa
push
jae
test
xor
sub
sub
test
mov
aaa
je
nop
dec
sub
jne
mulb
mov
push
aas
xor
cmp
fists
mov
data16
lock
inc
stc
cmp
repz
rolb
sbb
sarb
int3
es
std
test
dec
fucom
into
rcrb
mov
pop
movl
mov
sti
xchg
mov
push
mov
inc
xchg
faddp
scas
movsb
sahf
sub
mov
jmp
call
popf
mov
xor
aam
mov
pop
pop
testb
jmp
or
mov
scas
insl
test
cld
call
mov
jmp
inc
mov
mov
mov
test
add
clc
mov
insl
call
fiaddl
sub
or
lock
or
stos
data16
shr
sbb
mov
add
mov
shl
sbb
mov
xor
xor
or
mov
mov
or
cmpl
jle
adcl
or
jmp
pushl
call
jmp
jne
scas
leave
scas
dec
adc
out
add
aaa
cli
adc
adc
sub
and
and
cltd
scas
je
push
cmp
out
iret
int
repnz
jb
jmp
leave
jge
ds
jns
push
testl
into
popf
jl
cld
dec
cmp
jmp
mov
cld
fldenv
shl
fs
js
pop
dec
daa
pop
shrl
ret
adc
pusha
dec
fsts
test
inc
xlat
push
orl
das
imul
hlt
lcall
lea
imulb
xchg
push
push
jne
xlat
add
inc
inc
add
xlat
push
ds
hlt
jnp
add
dec
mov
insl
mov
negb
xchg
cmp
xchg
in
es
add
cmpsb
jl
inc
into
outsl
mov
shll
stos
and
mov
ja
aam
mull
pop
cli
dec
sahf
add
or
pop
jl
out
cli
repz
dec
pop
add
sub
movsb
mov
scas
xor
xor
test
dec
mov
cmc
insl
loop
repnz
pop
stos
call
into
jae
jnp
scas
pushf
lret
mov
mov
cmp
xor
sbb
xchg
gs
cmp
mov
fidivrl
and
lahf
xchg
test
movsl
dec
inc
mov
scas
or
mov
dec
into
mov
outsb
mov
hlt
push
mov
in
sbb
popa
outsl
daa
mov
sbb
xchg
add
jbe
movsb
jge
les
dec
mov
imulb
shll
pop
sarb
fcomps
pop
jbe
int3
sahf
in
loope
orb
out
out
data16
add
mov
jg
inc
xchg
push
stos
std
in
lock
or
push
fs
mov
dec
or
and
out
jg
mov
sub
fldl
aaa
enter
add
sub
dec
inc
mov
jns
sbb
ljmp
stos
push
sub
jno
call
imul
sbbb
mov
decl
testl
push
aad
ss
add
lcall
shrb
or
cmp
mov
cmpsb
xchg
xchg
test
pop
es
mov
mov
lods
lods
insb
cmp
jmp
mov
repz
fists
les
xor
jns
cmp
add
mov
inc
and
insl
mov
int
rolb
out
pushf
cld
pop
into
insb
fimull
dec
pause
or
push
mov
in
sbb
and
jg
xchg
push
lods
push
cmpsl
fstpl
mov
xchg
jo
sub
inc
sbb
leave
fstps
sbb
xchg
add
cmpb
leave
mov
loop
mov
loopne
push
and
andl
loop
faddl
mov
adc
push
insb
and
cmc
testl
push
dec
or
outsl
ss
pop
adc
sbb
ss
mov
fldenv
mov
lret
and
ss
sbb
mov
lcall
daa
xchg
mov
dec
xchg
addr16
dec
pop
leave
pop
lret
andl
fmull
sub
and
push
cmc
sbb
ja
pop
daa
jmp
inc
inc
leave
lock
cmp
loope
imul
popa
push
sub
and
sbb
popf
push
sbb
test
pop
jecxz
or
mov
sbb
inc
cltd
or
cmpsb
and
add
mov
sub
pop
xor
pop
adc
jne
add
movsl
ror
loop
test
fidivl
or
adc
xlat
out
dec
inc
call
cltd
mov
and
js
mov
sbb
jae
sub
add
pusha
xchg
sbb
inc
add
cmp
cld
lods
hlt
shll
push
shl
mov
lahf
andl
jne
xor
mov
mov
shrd
shr
mov
adcl
mov
andl
xor
shl
sub
xor
or
lea
and
mov
xorl
mov
xor
mov
shrd
shr
and
mov
sbb
mov
andl
xor
andl
shl
mov
decl
jmp
pop
lcall
ret
test
sub
adc
cli
adc
cmp
mov
sbb
ds
push
jnp
pop
and
push
sub
adc
lods
aas
dec
dec
and
mov
fsubl
cmp
dec
mov
mov
lret
add
mov
push
push
and
xor
outsl
adc
sbb
aaa
fucomip
dec
mov
jns
call
pop
and
pop
leave
adc
pop
push
pop
mov
cltd
lock
inc
inc
lcall
imul
test
inc
jp
add
movsl
dec
cmp
bound
sahf
mov
aam
xchg
ja
xchg
lods
lret
push
pop
xchg
push
mov
mov
jl
jge
pop
in
sub
loope
into
dec
sbb
xchg
add
xchg
dec
sti
loopne
adc
lock
addr16
scas
mov
insl
and
ds
test
jnp
cmpsl
data16
adcl
pop
mov
pushf
movsl
ds
or
sbb
stos
movsl
movsl
adcl
pop
adc
aas
popa
jno
ds
loopne
mov
and
repnz
out
dec
pop
fstp
popaw
ret
lock
jmp
sbb
push
data16
sub
pop
sahf
inc
adc
lea
adc
xchg
and
sar
cmp
sbbl
cld
rcll
scas
cmpsb
iret
add
mov
in
unpcklps
mov
cmpsb
outsl
add
jbe
mov
mov
cmc
into
pop
lret
adc
sbb
in
push
inc
test
cwtl
cmp
jmp
mov
addr16
lret
mov
xchg
push
mov
pusha
sub
push
inc
xchg
out
out
rclb
and
xchg
and
mov
and
or
jae
pop
inc
mov
movsl
insb
frstor
scas
jp
sahf
lcall
imul
or
clc
sbb
in
inc
pop
mov
mov
pop
sub
xchg
pop
pop
adc
jecxz
or
jnp
add
mov
pushf
loope
mov
sbb
lods
in
pushf
and
pop
inc
shrb
jl
rcrl
lcall
pop
jp
lcall
hlt
hlt
cwtl
add
xchg
enter
add
jle
outsl
in
xchg
cmp
ret
sbb
out
and
dec
dec
pop
in
lahf
aaa
mov
or
les
mov
inc
aaa
imul
mov
imul
cltd
push
ljmp
aad
mov
or
sahf
mov
jp
xchg
aas
lods
xchg
inc
or
rcr
stos
pop
pop
or
cwtl
cmpsb
icebp
pushf
mov
imul
mov
inc
ss
insb
xchg
clc
out
sub
add
lods
adc
test
and
pop
je
inc
fneni(8087
mov
inc
pop
fidivl
dec
push
rcrl
xorl
lret
mov
rorb
out
xchg
jecxz
and
daa
lcall
mov
pusha
hlt
xorb
xchg
dec
cs
push
xchg
xchg
sbbb
dec
fistpll
cld
mov
pop
pop
pusha
mov
into
xchg
hlt
rcrl
iret
inc
push
dec
pop
mov
stos
jno
xchg
push
jne
shlb
and
shlb
fcomps
jnp
aaa
adc
xchg
andb
jmp
xchg
or
cwtl
push
iret
mov
icebp
mov
xchg
sbb
insl
rol
mov
xchg
cld
popa
lret
xor
inc
adc
cmpsl
jecxz
fstps
xchg
add
xchg
push
jecxz
nop
mov
fdiv
push
or
sti
cld
orb
sub
ljmp
stc
jae
mov
test
mov
cmp
sti
icebp
sub
mov
adc
mov
enter
mov
push
adc
xchg
mov
pop
nop
pop
mov
xor
inc
jno
shrl
mov
push
jo
and
xorb
out
sub
ret
fistps
xor
subl
or
inc
mov
cmpl
ja
jmp
pushl
push
push
push
call
mov
add
mov
mov
shrd
shr
mov
mov
xor
movl
xor
andl
or
dec
lea
mov
mov
shl
cmpl
jg
sub
orl
jmp
push
push
call
mov
shrd
shr
mov
mov
andl
xor
xor
xorl
or
cmpl
jg
dec
jmp
push
push
pushl
call
mov
shl
mov
mov
mov
or
cmpl
ja
and
jmp
push
pushl
push
push
pushl
call
jmp
add
mov
adc
xchg
adc
fcomps
jnp
enter
xor
adc
cli
adc
add
xchg
test
push
jecxz
je
es
rorl
dec
adc
adc
xlat
cmc
cmp
xor
push
inc
loop
ret
xchg
push
cs
jle
lock
add
inc
and
pop
ret
sbb
out
jno
jo
jne
and
dec
test
or
loop
sub
ret
inc
xor
sbb
xchg
dec
enter
pop
xchg
jbe
mov
stos
xchg
stc
xlat
nop
out
pop
mov
lret
jb
sahf
jb
mov
lock
xor
lods
add
notl
stos
imulb
xchg
push
scas
or
ret
mov
std
mov
jbe
adc
hlt
leave
mov
popa
xor
fucomp
imul
pop
ljmp
inc
shl
adc
popa
cli
rcrb
in
sub
sti
sbb
and
int3
mov
and
or
jle
stos
adc
mov
aaa
fs
adc
shrb
enter
add
ja
aam
jmp
nop
in
out
dec
loopne
mov
xchg
mov
std
bound
dec
scas
testb
popa
dec
clc
faddl
xchg
test
cmpsb
sbb
ds
mov
hlt
mov
sar
sub
lea
fsts
call
xlat
xchg
mov
push
popa
rcll
jns
cltd
ds
in
push
mov
mov
scas
fwait
cmp
or
dec
jno
push
imul
push
push
jecxz
and
icebp
fcompl
sti
insl
and
mov
jmp
lcall
lcall
mov
fdivl
shlb
scas
sbb
mov
sbb
repz
mov
adc
inc
mov
or
shll
sbb
idiv
sub
push
and
xchg
ja
pop
in
xor
mov
and
insl
lods
pop
call
sub
xchg
rolb
sub
dec
dec
jge
mov
add
mov
xor
stos
outsl
sub
shr
in
jl
sti
sbb
in
insl
cmc
xchg
dec
cmp
mov
call
xor
popa
xlat
push
jae
int
xchg
jae
pop
dec
popf
inc
fstl
sbb
hlt
jne
cs
sbb
mov
push
jl
xchg
pusha
add
rcll
incl
pop
inc
cmp
cmp
mov
insl
scas
mulb
mov
mov
sbb
mov
pop
adc
cmp
fisubl
cmp
adc
xor
mov
adc
movsb
sub
jo,pn
xchg
ret
stc
lock
aam
xor
fildl
insl
test
sbb
fcoml
sahf
frstor
das
push
xchg
push
shrb
clc
mov
sbb
les
pop
adc
ret
adc
xor
into
mov
jns
jns
repz
mov
inc
pop
ret
xor
pop
ja
je
test
cmp
mov
mov
movsb
or
jmp
mov
sub
daa
in
decb
cmp
sub
adc
inc
fcoms
std
dec
push
mov
into
push
jmp
adc
fnstenv
cmp
xchg
mov
dec
js
movsl
imul
sbb
stos
pop
cmp
push
subl
mov
int
rcrb
mov
and
adcl
rorl
xchg
mulb
xorb
jbe
clc
cmpsb
or
adc
jne
mov
xor
aaa
in
pushf
lahf
mull
pop
sub
int3
aam
sti
push
dec
xor
mov
sahf
dec
stos
sbb
push
cwtl
daa
lcall
xchg
test
and
hlt
mov
xchg
mov
mov
loopne
push
push
inc
adc
add
loopne
shr
mov
subl
mov
xor
xorl
mov
adcl
xor
or
mov
movl
dec
sbbl
not
addl
and
cmpl
ja
add
jmp
pushl
call
xor
mov
mov
xor
or
mov
adcl
jmp
fldln2
aam
aam
enter
imul
mov
fwait
pop
adc
aaa
cli
adc
or
lcall
cmc
xchg
adc
pop
ret
mov
fstpl
rol
push
push
cmp
sbb
pop
inc
popa
add
mov
lret
hlt
push
andb
aas
andb
xchg
or
adc
push
lods
push
test
insb
ja
mov
insl
nop
arpl
cltd
repz
imul
js
push
es
movsl
cmp
mov
and
inc
rcr
mov
out
jnp
mov
push
enter
jp
xchg
aaa
fidivs
int
push
aad
mov
mov
ficomps
adc
sub
std
popf
xor
aaa
or
add
pop
fisubrs
mul
mov
mov
sub
or
subl
and
jno
test
cmp
test
hlt
push
pop
mov
orl
xor
leave
shll
adc
test
or
inc
xor
stc
add
pop
sarb
or
inc
xchg
outsl
ja
notl
inc
cmp
xchg
jp
or
add
jp
std
lds
mov
mov
jle
xchg
ss
enter
pusha
daa
ja,pt
repnz
sbb
in
mov
dec
arpl
fwait
pop
xlat
adc
mov
mov
sti
cmp
cmp
jns
popa
sub
andb
xchg
scas
mov
call
sahf
cwtl
stos
rorb
daa
nop
fildl
xchg
aaa
lret
mov
mov
sub
int
loop
cld
test
add
loop
or
cmpsb
jp
int
add
push
push
leave
mov
xor
sbb
push
jmp
stos
psraw
lods
notb
or
int3
sub
add
mov
sbb
test
idiv
pop
inc
pop
fisttpl
cmpsb
dec
adc
mov
scas
lds
xchg
mov
addl
insb
push
rcrl
and
sub
andb
outsl
sub
test
push
das
cli
push
or
pop
push
shl
mov
mov
rcl
pop
insl
jno
rcl
and
into
adc
push
add
in
or
jle
jno
test
ds
jp
sub
in
pop
cmp
add
std
adc
enter
push
jl
xor
popa
sub
dec
xchg
int3
mov
jo
xchg
jae
sub
xlat
fwait
jecxz
aas
repz
mov
dec
das
daa
xor
xor
mov
cmp
xor
sub
test
sbb
add
xchg
xchg
mov
inc
loop
test
pop
sahf
cmp
aaa
out
sbb
inc
mov
nop
test
push
mov
shlb
pushf
adc
scas
das
mov
sbb
dec
sub
cmp
fwait
mov
sub
cmp
mov
in
cwtl
dec
lea
ret
mov
sub
fcmovnb
rcrb
inc
push
fwait
cmp
mov
out
mov
hlt
add
jg
lds
push
mov
inc
into
pushf
fdiv
push
cmp
call
mov
and
test
mov
ret
and
push
insb
in
inc
shrl
and
jo
adc
lcall
push
mov
mov
and
mov
mov
adc
xchg
ja
cmpl
push
test
push
add
test
xchg
jnp
ja
and
jne
ret
sbb
jnp
fmuls
dec
pop
call
test
mov
adc
lea
dec
sbb
push
imul
das
push
push
cmp
lret
inc
pop
mov
ljmp
and
mov
cs
dec
push
jge
xor
or
fsub
jmp
or
mov
push
add
dec
out
mov
mov
adc
fsts
dec
bound
cmpl
pop
mov
jmp
add
sbb
mov
pop
push
xor
ficomps
adc
aaa
cli
adc
nop
or
cmpsl
xorb
and
or
lahf
mov
xor
movsl
push
call
push
cmpsb
and
nop
add
mov
push
test
ficoml
enter
sbb
mov
jmp
dec
pop
adc
mov
push
sbb
add
xchg
inc
xor
ss
adc
mov
add
mov
push
mov
or
mov
xchg
rcr
fldl2e
jmp
jbe
sbb
into
mov
and
and
mov
add
rcrl
aam
sub
das
inc
pop
mov
mov
cmp
xorb
sub
sub
test
ljmp
sbb
fstpl
push
sub
pop
sbb
idivl
dec
inc
fcmovne
jb
dec
insl
aam
out
orb
call
fwait
pop
mov
aaa
test
subb
out
dec
xor
push
add
pop
inc
add
ss
add
mov
adc
push
std
and
aam
aaa
imul
fldenv
inc
int
outsl
cmp
cmpsl
inc
fildl
notl
dec
divl
sbb
jo
mov
inc
jmp
mov
imul
mov
stc
push
push
mov
mov
pop
push
pop
mov
outsl
push
or
cmpsl
fcompl
jecxz
adc
push
test
ret
lret
sub
fimull
leave
addr16
cmp
pop
pop
ds
fsubs
aas
mov
es
xor
push
pop
mov
dec
sub
lcall
push
or
lcall
xor
pop
mov
cli
push
sbb
mov
and
jbe
outsb
or
addr16
jg
jecxz
push
sbb
pop
out
ror
shrw
sub
jg
dec
hlt
fstpt
lcall
sub
add
xorl
cmpsb
int
ds
rcr
mov
test
test
jg
adc
fwait
cmp
mov
sub
mov
add
xchg
fisubl
fld
test
sub
xchg
add
test
sbb
popa
or
shlb
dec
jmp
outsb
test
cmp
push
int
out
fldcw
adc
out
jns
out
sbb
in
jecxz
repnz
fisttpll
gs
test
fst
mov
orb
sub
movsb
mov
mov
int
adc
jno
stos
mov
mov
inc
imul
mov
int
pop
pop
shl
xor
pushf
cmpsl
bound
scas
popa
pop
push
mov
ljmp
in
jnp
sub
fdivp
inc
sub
test
stos
addl
inc
out
sub
adc
mov
cmp
int
imul
sbb
jno
dec
out
test
or
push
test
dec
shll
repnz
jecxz
orl
out
je
fmull
enter
adc
and
sbb
cmp
push
xor
mov
sub
aad
clts
outsb
jecxz
xor
and
xchg
jno
out
cmp
jmp
das
mov
loopne
push
out
push
mov
loop
inc
pusha
xor
fwait
cwtl
out
es
popa
mov
adc
jmp
mov
sti
imul
push
lret
pop
push
xchg
hlt
cltd
rclb
add
fbstp
and
xchg
hlt
mov
sti
adc
xlat
sti
movsl
and
push
xchg
mov
scas
cmp
insl
mov
inc
adc
in
test
cmc
inc
mull
push
xlat
scas
cltd
mov
rorl
dec
jmp
mov
fsubrp
push
dec
test
xor
and
mov
jl
adc
push
push
adc
into
pop
aad
adc
nop
or
push
pop
push
xchg
test
shrd
shr
not
mov
sbb
mov
mov
xor
addl
mov
sbbl
xor
addl
shl
mov
or
mov
cmp
je
mov
sub
mov
sbb
sub
sbbl
mov
cmpl
jl
add
jmp
pushl
pushl
push
call
mov
xor
xor
shrd
shr
mov
mov
andl
mov
cmpl
jge
jmp
push
pushl
pushl
call
mov
xor
or
mov
mov
mov
jmp
and
and
test
daa
and
adc
aaa
cli
adc
insl
es
jecxz
das
mov
fwait
adc
dec
mov
dec
neg
cs
loopne
fimull
sbb
xor
jmp
xchg
sbb
fdiv
mov
lds
and
test
jg
push
mov
inc
jns
ret
into
mov
lods
inc
rcrb
or
xlat
mov
loope
mov
sbb
sbb
jp
leave
ja
jecxz
dec
jbe
jp
nop
push
lret
add
mov
xor
pop
mov
aaa
out
push
pop
sub
jo
fstpl
or
xchg
sbb
js
repnz
divb
fwait
sub
enter
mov
icebp
loop
lods
dec
aas
inc
xchg
cmpsl
lods
xor
mov
xor
lea
cltd
push
loopne
call
push
pop
arpl
ret
push
push
jns
cli
repnz
fisubrl
xchg
add
lret
mov
jecxz
sbbb
bnd
adc
mov
jo
popa
xchg
pop
adc
aas
mov
fdivl
push
test
bound
inc
xlat
xchg
mov
and
mov
test
clc
loop
pop
stos
xor
fistpll
ret
daa
fmull
cs
or
sub
bswap
cld
jbe
sub
or
stos
cmp
ret
pop
call
adc
xchg
out
test
inc
dec
mov
push
cmpsl
lahf
xor
call
mov
add
inc
shlb
jnp
hlt
adc
mov
lea
cltd
sub
ljmp
pmaxub
cli
mov
scas
sub
test
fs
out
inc
mov
outsl
mov
sarb
dec
mov
mov
lds
inc
imul
adc
in
clc
or
lock
mov
cmp
orb
in
push
pop
push
mov
shrb
adcb
out
imul
shr
sbb
stos
sbb
xlat
sub
in
jo
sub
inc
mov
imul
adcb
xor
xchg
sbb
xchg
sbb
rcrl
fistpll
movsl
in
mov
dec
mov
cmp
mov
call
xlat
xor
mov
and
adc
inc
cmp
mov
xor
mov
xchg
rcrl
cs
cld
add
sub
out
insl
aam
popa
and
jbe
aam
xchg
movsl
push
pop
testb
mov
mov
push
mov
xchg
les
outsb
jo
push
mov
mov
dec
pop
cmpsb
loop
dec
loopne
mov
ficoms
shl
and
sahf
xchg
in
nop
lahf
cmp
cmpsb
cli
inc
cmp
fimull
cli
mov
pop
mov
xchg
jg
out
xchg
and
mov
pop
cmpsl
mov
lock
mov
or
or
mov
js
ljmp
jle
xchg
mov
addr16
mov
scas
cmp
lahf
mov
push
inc
mov
sub
test
loope
jge
imulb
scas
jecxz
push
stos
add
loopne
sub
cltd
xor
cmp
or
lea
jns
aaa
adc
data16
adc
add
je
frstor
sahf
pop
ret
gs
mov
mov
scas
leave
dec
push
cltd
xor
sbb
xchg
xchg
cld
mov
outsb
sbb
ss
mov
scas
mov
rol
mov
xor
pop
ret
outsl
or
push
shr
stos
mov
jbe
xchg
add
loop
out
movsb
jno
push
sahf
fcmovnbe
jle
lret
mov
sub
mov
adc
mov
cltd
pop
push
or
mov
dec
das
hlt
lahf
xchg
int
inc
cmpsl
mov
movsl
gs
add
inc
jge
xchg
out
mov
and
fs
in
icebp
cwtl
mov
lcall
inc
int3
mov
inc
mov
shrd
addl
shl
andl
or
subl
mov
mov
xorl
mov
xorl
shll
andl
mov
cmpl
jb
add
jmp
pushl
push
push
call
mov
mov
xor
or
shr
or
movl
jmp
jb
aad
xchg
adc
sub
jg
push
popa
mov
adc
cli
adc
cwtl
lods
enter
jae
xor
mov
mov
into
rclb
dec
loop
pop
pop
pop
jmp
push
push
cwtl
rclb
inc
aam
lds
and
pushf
aam
or
fistpl
out
or
es
jl
in
mov
insb
test
cmc
push
nop
insb
dec
cmp
xor
cmp
into
icebp
add
add
into
cmp
fdivl
or
lods
mov
jle
ljmp
add
fwait
jge
pop
jmp
sbbl
push
fsubl
jbe
adc
in
inc
or
out
jecxz
in
js
push
and
insb
mov
test
mov
repnz
mov
jnp
rorl
mov
hlt
addb
cwtl
ret
es
dec
lds
mov
inc
popa
cmpsb
mov
in
in
dec
push
pushf
lahf
push
xchg
js
jmp
and
xor
add
ret
repnz
in
fsub
adc
test
and
inc
mov
repz
pusha
ror
icebp
adc
xchg
fisttps
dec
arpl
cli
cmp
imul
sbb
test
cmc
jbe
sub
pop
or
mov
xor
inc
ss
cmp
imul
push
jne
push
mov
xchg
push
mov
mov
imul
ss
xchg
adc
and
mov
sarl
in
inc
or
dec
add
into
call
lea
sbb
push
dec
mov
mov
mov
mov
cld
lret
popf
xchg
xor
loopne
or
and
push
test
jno
mov
pop
fnstsw
push
jo
mov
arpl
sub
sbb
mov
dec
sub
push
inc
jl
sub
wrmsr
mul
cmpb
mov
xor
negb
je
xchg
js
lods
adc
sub
out
dec
xchg
repz
mov
movsl
lock
jp
cmp
push
in
cmpsl
push
aam
push
jmp
fmuls
inc
dec
adc
xor
ret
pop
loope
shlb
jp
jns
xchg
and
pop
in
xchg
arpl
inc
add
push
sub
inc
test
cmp
pop
shlb
cld
scas
mov
mov
push
ljmp
dec
dec
cmpsb
fnstenv
pusha
pop
sub
sub
sub
rolb
aam
jnp
cmp
mov
jnp
inc
sub
std
hlt
sub
imul
loope
data16
jle
sbb
inc
xchg
push
dec
dec
push
or
sbb
ds
andl
push
repnz
test
movsb
scas
mov
or
adc
pop
inc
filds
cmpsb
insb
es
xchg
aam
xchg
test
xor
mov
mov
nop
outsl
pushf
mov
sbb
outsl
xor
inc
push
lea
js
sbb
sbb
mov
pop
call
and
popl
push
xchg
cmp
lahf
mov
aam
and
inc
jg
addl
lods
nop
iret
sahf
flds
lret
pop
jno
and
mov
popf
bound
dec
sarb
xchg
push
dec
enter
or
into
cli
and
sbb
iret
cltd
mov
mov
ficoml
inc
das
aas
mov
ljmp
mov
xchg
movsb
dec
and
jl
xchg
outsb
sbb
insl
stos
xor
jo
sub
xor
inc
pop
sbb
inc
xchg
mov
sbb
popl
dec
xchg
cmpsl
mov
pop
stos
mov
cltd
inc
mov
push
xor
adc
shrb
pop
dec
fucomp
bnd
cld
pop
sub
fimull
push
lods
push
jmp
pushf
sti
dec
sub
out
sub
daa
adc
jno
sub
aad
fmuls
pop
fdivr
cltd
mov
mov
ficoms
push
push
mov
insl
jmp
mov
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
jmp
gs
sub
dec
test
adc
aaa
cli
adc
jnp
daa
inc
ss
ficoml
jecxz
popf
inc
daa
daa
sub
stos
lret
les
push
imul
lret
mov
jno
cltd
pop
push
cmp
mov
push
or
fs
and
jg
jno
push
aam
rclb
xor
stos
xchg
daa
pop
jbe
and
or
mov
shrl
inc
rcrb
out
pop
mov
js
decl
cmpsb
sub
int3
incb
mov
push
and
movsb
adc
out
push
out
inc
insl
aad
cmpb
mov
or
push
dec
add
mov
xchg
mov
icebp
pop
xor
dec
dec
push
mov
xchg
cmc
fildll
imul
aas
xchg
xor
dec
mov
mov
ljmp
mov
sub
adc
inc
imul
sbb
ds
mov
jmp
dec
pushf
mov
imul
cwtl
push
pop
adcl
add
mov
or
lret
aad
pusha
adc
push
ljmp
jbe
inc
int3
jo
shrl
mov
xor
int3
xor
pop
and
inc
ret
outsl
dec
jne
mov
adc
into
push
in
push
cmp
lds
jnp
fistps
sbb
push
jle
rcll
mov
rorb
dec
ret
test
or
push
and
addr16
cmp
push
push
xor
mov
mov
leave
mov
outsb
repnz
lds
addr16
fwait
loop
adc
dec
cmp
adc
dec
mov
fldl
mov
push
cli
js
push
mov
adc
movsb
xchg
mov
icebp
outsb
sub
loope
inc
or
enter
push
cld
scas
fdiv
mov
call
lcall
cmp
popf
mov
cmp
js
test
inc
and
push
roll
ss
stos
pop
ret
push
out
xchg
mov
jb
mov
push
adc
or
aad
call
mov
sub
popf
cmp
ss
data16
decl
ja
pop
in
add
test
sub
into
rcrb
bound
sti
dec
mov
mov
aaa
jbe
dec
cld
sbb
mov
idiv
pushf
fistpll
arpl
mov
mov
ret
incb
pushf
cmp
div
mov
cmpl
js
cmc
mov
pop
mov
imul
pop
ljmp
iret
push
cmp
fldt
dec
push
out
cs
ja
inc
js
xchg
sub
push
cmp
pop
in
gs
push
mov
push
leave
fldcw
sub
insl
adc
jmp
add
adc
jl
dec
xchg
xor
es
push
jl
fildl
jno
fdivr
mov
inc
mov
mov
cld
lahf
add
das
pusha
jle
sbb
mov
inc
in
jge
or
lret
xor
andl
int3
sub
and
xchg
mov
jmp
sbb
pushf
sub
sbb
cmc
ret
adc
dec
jp
xlat
adc
daa
insb
cmp
aas
cs
inc
cmc
jae
add
leave
outsl
fldcw
out
and
int3
pop
cmpb
lea
mov
shrb
sbb
ret
jle
or
daa
inc
decl
stc
lods
add
test
dec
mov
out
xor
sbb
xor
mov
cmp
cwtl
cmp
xor
dec
loope
addr16
ljmp
adc
push
cmp
or
cmp
push
mov
std
mov
bound
pop
mov
sub
pop
and
leave
ss
mov
enter
scas
add
sub
push
adc
out
jg
stos
xchg
pop
nop
xor
mov
xchg
push
mov
push
movsb
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
jmp
xchg
push
je
xor
mov
repnz
and
mov
aaa
cli
adc
pop
mov
out
add
mov
mov
ja
and
pop
ja
fildl
jecxz
pushf
xchg
test
repz
pushf
and
ljmp
popf
jb
popf
sub
test
idivl
mov
int
adc
shrl
sbb
or
and
cld
clc
pop
xor
ja
xchg
adc
dec
jno
aaa
hlt
push
adc
sub
movsl
xchg
mov
xchg
xchg
lods
fwait
adc
cwtl
pop
mov
fucomp
dec
enter
inc
adc
add
dec
std
addr16
add
jle
jae
addr16
xchg
out
sbb
pop
cmp
dec
mov
fisubrl
packssdw
cmp
sbb
cmp
xor
pop
jbe
mov
xor
push
aam
fwait
hlt
inc
jb
dec
shr
add
imul
push
in
ret
jmp
out
cmp
out
out
pushf
es
sub
addl
pop
add
or
mov
sub
cs
iret
or
movsl
mov
add
mov
xchg
clc
movb
test
sbb
aas
mov
int
inc
add
or
push
scas
xchg
push
aaa
sub
dec
outsb
repz
cmp
jmp
xor
arpl
push
test
cmp
sbb
mov
inc
jge
clc
lcall
shll
pop
jne
ror
add
add
sarl
fucomp
pop
lock
jnp
loopne
ltr
test
ljmp
or
mov
imulb
out
dec
mov
xchg
cmp
int3
add
pop
cmpsl
or
dec
mov
fnstsw
jb
jmp
sub
xor
mov
adc
orl
je
loope
push
aam
mov
jge
pop
add
dec
pop
iret
loop
pop
inc
cmp
sub
add
into
xchg
cmp
repz
dec
mov
js
push
xchg
stc
jne
jg
push
inc
xor
push
fiaddl
adc
inc
lahf
iret
xlat
jl
lods
jae
movsl
mov
sbb
add
jge
cmp
xor
bound
xorb
imul
mov
jmp
lods
std
inc
outsl
popf
add
enter
fldl
jns
bound
mov
pushl
pop
inc
mov
stos
inc
mov
mov
loope
lods
nop
cmp
dec
inc
xor
inc
jl
out
cmp
fsts
jmp
add
push
xchg
mov
mov
aas
dec
ret
add
sarb
xchg
scas
mov
mov
jae
sbb
jns
loope
jle
popa
or
xor
test
scas
int3
mov
push
mov
shrl
andl
add
test
cs
imulb
xchg
inc
or
cmp
dec
or
dec
jmp
jecxz
pop
out
enter
cwtl
lret
mov
jl
jmp
bound
dec
mov
mov
cmc
test
jp
jp
dec
dec
mov
aaa
lea
clc
lcall
mov
in
mov
decl
lret
ret
daa
out
jl
js
std
mov
cmp
mov
xchg
dec
jecxz
test
mov
outsb
inc
push
rcrl
inc
insl
pop
ret
push
sub
adc
popf
lods
push
lcall
gs
dec
insl
and
mov
leave
aaa
mov
test
in
clc
mov
mov
mov
xlat
call
lret
xchg
mov
pop
fldl
mov
test
pxor
in
mov
mov
jmp
lods
xchg
scas
mov
push
dec
lods
call
jmp
jb
push
mov
divb
faddl
or
sti
int
lret
or
cmp
rcll
cs
cmp
push
shrl
aaa
add
fdivrp
xor
adc
dec
dec
push
adc
sbb
adc
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
jmp
and
mov
nop
push
fs
adc
adc
aaa
cli
adc
xor
test
in
xchg
enter
xor
push
mov
fucompp
js
fidivs
cmp
sub
xchg
pop
jo
sub
push
ss
pop
daa
dec
or
outsb
fisttpl
cs
jnp
aad
lds
mov
dec
stos
lcall
push
mov
stos
int3
add
adc
dec
adc
int3
push
out
cmp
icebp
cltd
les
mov
xor
dec
in
mov
mov
les
cmpsl
lds
clc
jb
sub
loope
cwtl
test
ret
xchg
lods
jle
ja
out
inc
out
pop
stos
mov
pop
inc
mov
popf
les
push
and
outsl
dec
test
xchg
and
add
je
xor
xor
jns
lods
fldt
push
aam
insb
and
inc
fdivrl
mov
xchg
mov
fwait
jb
push
leave
fsubs
jge
push
aaa
xchg
and
sbb
pop
out
mov
jmp
add
xchg
push
push
bound
push
pop
pop
dec
int
in
imulb
dec
mov
pop
test
movsb
dec
movb
inc
xlat
pop
jle
mov
jo
sub
sub
movsb
repz
gs
adc
stos
add
iret
push
jno
cmp
push
fcomps
mov
xchg
cs
popl
lods
cmpsb
xchg
clc
mov
cmp
sub
orl
outsb
lret
dec
ffreep
popf
jp
mov
cs
jne
mov
rcll
and
aam
add
mov
imul
std
repz
inc
test
inc
movsl
inc
movsl
cld
cmp
std
and
test
movsb
leave
adc
push
dec
rcll
ja
cmp
xchg
mov
push
jg
inc
stos
fiadds
loopne
aam
sub
dec
call
inc
cmp
jae
dec
xchg
push
mov
outsb
ljmp
rorb
push
sub
pop
jne
cmp
cmc
aas
sub
imul
sar
cmpl
in
jl
sbb
sbb
cmp
les
adc
das
cmc
das
pop
scas
test
inc
movsl
push
xor
xchg
ficomps
or
sahf
mov
lock
ljmp
fs
ljmp
mov
les
sub
pop
lds
lret
or
xchg
xlat
stos
xor
fsubl
dec
std
stc
cld
in
adc
pop
arpl
jb
popa
out
pop
mulb
test
xor
add
ja
xchg
jb
leave
adc
notb
das
pop
push
test
adc
pop
lods
push
push
fstpt
xchg
push
sbb
dec
fwait
mov
xchg
sbb
cs
lret
add
cltd
fcomps
stc
mov
jae
fsts
and
sub
fsts
loope
cmp
cmc
shlb
pop
or
and
and
mov
mov
mov
cli
loope
jns
mov
sub
fcoms
outsl
mov
xchg
lcall
fmull
daa
repz
cmp
out
insl
xchg
dec
push
leave
test
out
int
adc
pop
mov
xor
scas
add
js
lret
xchg
add
es
mov
das
cli
push
jnp
lret
sub
dec
add
bnd
lea
mov
sbb
dec
ds
std
inc
lods
inc
fisubrl
in
subl
cmp
inc
fisttpll
popa
call
ds
cld
or
mov
inc
cmp
loopne
xlat
xlat
push
sbb
adc
in
cli
mov
jns
cli
ret
scas
js
xchg
xchg
pop
sahf
jne
es
mov
cmp
sub
in
mov
addb
push
inc
mull
fsts
aas
sub
aas
outsb
cmp
jne
mov
mov
jnp
pop
movsb
xor
push
xor
lea
mov
mov
mov
mov
mov
shrd
mov
jmp
push
push
push
adc
aam
push
xor
out
repz
aaa
cli
adc
fwait
clc
in
pop
push
lds
mov
decl
mov
jb
mov
les
stos
push
js
rcrl
loopne
lods
stc
sbb
sbb
mov
lcall
js
xchg
clc
xchg
pop
add
xor
mov
mov
lret
mov
push
scas
mov
xchg
adc
sti
add
mov
dec
or
add
mov
in
xor
sti
inc
jne
test
cli
cmpsl
lods
mov
pop
jne
xchg
mov
cmp
and
not
out
fmul
test
pop
lcall
dec
into
or
mov
cs
adc
push
mov
or
xor
pop
arpl
push
jge
push
sub
or
dec
fcompl
sbb
sbb
add
setns
scas
rclb
pop
or
xchg
jbe
dec
clc
jp
pushw
hlt
jo
lcall
sub
push
mov
sub
dec
mov
cmpsb
jae
arpl
fs
popw
cld
lds
es
lods
sahf
daa
out
pop
sub
movb
cmpsl
inc
mov
setge
into
mov
cmp
cmpsb
mov
mov
imul
dec
subl
sbb
and
sbb
add
fdivl
sbb
and
inc
nop
cs
push
addb
mov
adc
lods
xor
imul
clc
mov
cmpsl
int
push
mov
cmp
std
icebp
xchg
sub
add
fadds
push
pop
and
sub
jl
adc
push
int3
jmp
js
xor
adc
jge
inc
jb
aas
jno
cmp
mov
pop
iret
sub
dec
xor
xor
pop
jbe
mov
cwtl
shr
rcrb
mov
imul
movsl
adc
out
lock
pop
mov
inc
mov
adc
mov
mov
int3
push
mov
repnz
sub
cltd
sbb
mov
outsl
lcall
xchg
pusha
jno
pop
pop
dec
cmp
orl
xchg
push
mov
js
loop
test
jge
lock
es
shlb
repnz
das
adc
sub
jge
sbb
ss
dec
mov
xchg
jg
xlat
lahf
sbb
popa
push
pusha
rclb
xor
push
xchg
cli
ss
inc
cli
das
or
cmp
push
inc
jne
pop
in
adc
xor
pop
lods
push
outsb
dec
mov
push
inc
icebp
and
jnp
lahf
inc
fwait
and
movsl
inc
test
fwait
test
push
pushf
dec
jl
xchg
push
ret
add
and
and
inc
clc
jecxz
mov
push
repz
imul
dec
mov
ret
and
mov
je
sbb
pop
in
mov
mov
lods
cwtl
jecxz
jb
mov
jae
add
inc
out
nop
lods
cld
leave
xchg
repz
out
test
mov
xchg
fisttps
sbb
xor
ljmp
ds
xor
mov
loope
je
jnp
icebp
jmp
dec
inc
test
mov
push
jp
adc
add
rorb
sbb
leave
lret
jo
ss
and
scas
cmp
mov
test
push
scas
loope
scas
inc
leave
push
adc
movsb
loopne
inc
ljmp
xchg
inc
cmc
dec
pop
jns
divl
cmpsb
sub
insb
or
or
shlb
cmp
push
dec
xchg
add
or
movsb
adc
jbe
mov
cmp
bound
loope
lds
dec
add
repnz
adc
lret
call
inc
cmp
add
cmp
xchg
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
jmp
lcall
push
repz
jnp
dec
jnp
adc
aaa
cli
adc
sbbb
scas
in
ss
pusha
jae
inc
lock
out
movsl
repnz
cmp
adc
add
adc
repz
loope
cmp
xchg
pop
int3
mov
push
mov
scas
sub
jbe
push
lock
sbb
pop
fwait
pop
cmp
dec
push
cmp
push
lret
jl
int
push
mov
mov
lcall
xchg
push
xchg
xchg
ja
mov
icebp
mov
xlat
icebp
push
cmc
sbb
or
push
mov
fisttpll
xor
adc
test
pop
scas
sahf
jae
js
jle
aad
aaa
inc
jno
xchg
loope
mov
outsl
dec
popf
or
pop
jno
dec
popa
mov
dec
xor
lahf
insl
cld
sub
xlat
inc
push
aam
jno
lcall
push
dec
aam
adc
inc
fistps
mov
int
jmp
push
jp
arpl
psubd
add
dec
ret
adc
mov
cmc
cld
jbe
pop
mov
push
lods
xor
stos
test
xlat
fmull
mov
xlat
mov
pop
aad
pop
and
xor
lcall
sbb
mov
fcompl
out
fcomi
pop
sbb
and
jl
pop
sbb
cmc
mov
mov
aad
mov
push
pop
daa
int3
push
stc
mov
cmp
ret
pop
movsb
sub
out
cltd
subb
aad
les
sbb
mov
jno
push
mov
inc
cli
sbb
out
into
xchg
addb
lods
cmpsb
mov
dec
inc
add
ljmp
xchg
cmpsb
mov
xchg
lahf
inc
fidivs
sbb
and
inc
xchg
or
fldenv
pop
test
scas
testb
ljmp
mov
sub
test
jmp
mov
pop
std
arpl
mov
in
sbb
lock
and
push
aaa
mov
mov
iret
pushf
pusha
inc
sbb
inc
sahf
aas
xchg
daa
iret
stos
insb
out
sbb
push
jns
ss
in
mov
or
mov
and
xchg
adc
and
xlat
mov
push
test
adc
jno
cmpl
xchg
data16
mov
fadd
inc
bound
sub
dec
sub
cs
jo
es
xor
mov
pop
dec
repz
add
mov
stos
sub
jo
and
movsb
lret
fs
xchg
hlt
scas
mov
sub
mov
call
add
nop
cmp
jl
jnp
inc
push
inc
and
sarl
jnp
xchg
jae
sub
scas
out
ret
int3
loop
mov
movsb
xchg
xchg
xchg
pop
enter
test
dec
adc
cwtl
pop
lret
mov
incb
adc
xor
xchg
push
movsb
mov
das
loopne
decb
fs
mov
pop
sahf
push
xor
test
test
bound
fcmovne
push
popa
out
loopne
push
jnp
pusha
adc
xor
and
dec
aas
mov
sti
out
addr16
inc
nop
faddl
js
dec
xor
cwtl
dec
movsl
inc
inc
adc
sub
push
mov
daa
sbb
cmp
fbld
fs
pop
ljmp
ret
adc
ss
sbb
xchg
ds
mov
jecxz
lcall
cld
repz
ds
icebp
adc
cs
cmp
out
lods
mov
les
and
call
dec
dec
andb
sub
aas
iret
rcr
mov
xchg
jmp
fldcw
sbb
pop
hlt
sbb
xchg
repnz
pop
push
jmp
add
andb
mov
mov
inc
mov
orl
sbb
clc
out
enter
pop
mov
in
xchg
sbb
jno
cld
bound
mov
data16
add
shlb
rorb
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
jmp
mov
cmpsb
adc
cli
addr16
adc
lds
cli
adc
add
bnd
add
xchg
lret
scas
mov
lret
pop
fdivr
lods
shlb
ror
mov
pop
and
pop
push
jmp
lock
jnp
push
push
enter
jns
fnstsw
adc
push
pushf
mov
aas
fmull
stos
shl
xor
aam
imul
out
mov
int3
dec
loope
stc
sti
push
test
scas
fsubrl
and
add
jne
das
mov
in
int
add
fs
add
es
fwait
icebp
mov
and
shll
dec
cmp
mov
pop
mov
or
xorb
xor
lock
daa
cmc
xor
mov
enter
insl
mov
inc
into
inc
pop
movsl
int
dec
mov
push
push
pop
mov
dec
movsb
push
test
movsb
push
popf
add
out
pop
test
adc
pop
dec
mov
cmp
sbb
and
and
inc
int
sarl
mov
notb
ljmp
fs
pop
xor
add
jbe
mov
or
test
push
idivl
in
nop
sub
jp
into
inc
sub
imul
cmp
fisttpl
inc
inc
call
push
shr
inc
cmp
lahf
sub
xchg
lock
lock
leave
div
mov
jae
call
mov
not
push
sti
shr
jbe
bound
lahf
popa
mov
sbb
adc
pusha
inc
cmp
lods
sarb
in
sbb
adc
inc
sar
int
fstl
cwtl
inc
push
xor
ss
mov
inc
inc
sub
mov
jne
popw
sub
cwtl
sub
push
aam
imul
in
in
ss
ret
cmpsl
into
icebp
in
int3
cmpsl
pop
push
cld
incl
xchg
les
add
and
aam
out
jae
je
arpl
mov
jle
dec
fmull
xor
pop
or
mov
pop
cmc
add
xchg
jp
mov
enter
in
test
pop
sub
sbb
cmp
inc
ss
imul
pop
shlb
icebp
out
jge
insl
jge
or
cmp
mov
pusha
cmp
test
mov
cmp
into
test
mov
idivb
shrb
lcall
stos
das
or
ja
mov
mov
cmpsl
dec
sbb
jg
add
leave
sbb
jne
xchg
das
mov
xor
xor
out
and
inc
sub
inc
rorl
dec
jle
xchg
gs
scas
ficompl
nop
dec
shll
and
loop
fimuls
xchg
sub
aaa
addl
subl
dec
mov
in
es
lods
sbb
mov
fsubr
imul
add
movsb
or
xchg
mov
and
sbb
or
dec
stos
or
mov
mov
mov
adc
xor
scas
inc
lret
sbb
adc
icebp
cs
ret
out
imul
inc
sub
dec
sbb
test
inc
divb
int
cld
xor
adc
add
mov
mov
scas
fldl
push
add
dec
ss
sbb
imul
add
pop
sbb
icebp
cmp
push
in
in
adc
pop
jmp
sti
jbe
add
test
push
stos
mov
xchg
rcll
cmp
in
pop
cmpsl
mov
push
cld
pop
fcmovnbe
ljmp
xchg
cmpl
in
xchg
scas
xor
xchg
xor
dec
test
movsl
jo
or
jb
push
push
in
mov
adc
dec
in
mov
mov
ficompl
xchg
mov
gs
jmp
lea
adc
leave
xor
xor
aaa
cli
adc
jnp
pop
out
mov
mov
testl
mov
xchg
push
cltd
ret
fcompl
or
sbb
movb
or
arpl
add
cwtl
pop
adc
or
sub
sub
inc
aad
dec
lods
aas
rorb
repz
mov
fmull
pop
mov
jbe
jecxz
jae
jns
stos
scas
jp
mov
push
inc
leave
push
fwait
in
cmp
push
clc
add
or
jno
mov
xchg
outsb
lahf
dec
push
dec
js
das
cmpsl
jge
or
pop
filds
in
out
call
scas
pop
xor
cmp
out
mov
sub
psrlw
push
pop
fwait
iret
xchg
hlt
cwtl
iret
lcall
and
sbb
xorb
mov
dec
cld
pop
shl
je
sub
dec
jp
push
pop
loopne
sub
add
fbld
push
fcmovb
mov
sarl
ficoms
pushf
xlat
scas
jmp
hlt
and
mov
xchg
xor
rcr
cmpsb
mov
sbbl
adc
ret
xlat
jmp
jns
hlt
dec
imul
and
xchg
out
test
je
sub
pusha
adc
fcmovnb
sahf
lds
mov
mov
shlb
pop
movsb
add
xor
stos
aad
fwait
mov
out
ss
sar
jno
xchg
icebp
lds
ret
mov
mov
add
aas
loopne
test
push
sub
or
add
push
add
push
sahf
stos
lahf
mov
pop
mov
call
pop
imul
gs
clc
in
fisubrs
daa
sti
je
jbe
test
cli
fsubrs
cltd
fcomps
cltd
sub
mov
pop
cmc
pop
push
xchg
add
lods
inc
adc
inc
cmp
icebp
and
test
in
sub
and
in
dec
imul
sub
mov
das
jo
add
or
cmp
lock
push
int
inc
outsb
or
fldl
imul
mov
mov
xchg
push
jno
and
push
imul
lock
aaa
cmp
xor
cmp
pop
pop
dec
into
sub
shl
xchg
add
pop
or
inc
hlt
dec
int
and
out
sub
ret
aaa
scas
inc
dec
out
shll
int
aas
inc
jmp
gs
xchg
sub
and
in
mov
outsl
cmc
mov
fwait
aaa
test
repz
arpl
jp
mov
cmp
fs
mov
xchg
xchg
mov
fcmovbe
sub
xor
inc
dec
into
loopne
test
xchg
cmp
pop
nop
xor
in
dec
and
gs
sti
mov
dec
cmp
imul
mov
in
or
addr16
in
inc
add
sarb
inc
mov
stc
and
xchg
out
aam
inc
movsb
jecxz
xor
cmp
and
pushf
push
jnp
and
stos
mov
sbb
add
test
test
mov
aad
push
cmp
adc
mov
mov
clc
sbb
in
insb
scas
fnsetpm(287
xchg
loop
mov
nop
nop
mov
adc
mov
xchg
scas
addr16
sahf
mov
outsb
mov
test
and
in
cmpsl
sbb
sbb
shrb
add
sbb
push
mov
adc
fisubs
mov
sub
mov
push
or
dec
ja
cmp
clc
arpl
xchg
in
ss
or
mov
jg
pop
mov
xchg
shld
fisttps
pop
cmpsl
iret
xchg
test
dec
dec
cwtl
or
fs
mov
jb
mov
inc
clc
mov
in
ret
in
cmp
mov
rcll
sub
push
ds
inc
repz
jmp
cmp
in
mov
adc
lods
imul
jb
call
shr
shr
xor
push
xor
mov
mov
mov
jmp
ja
add
inc
push
inc
aaa
mov
daa
mov
adc
cli
adc
add
mov
mov
mov
jne
lds
xorl
sub
stos
pop
mov
fistps
push
shrl
xlat
std
repnz
rolb
xor
imul
andb
call
fs
inc
mov
std
lock
push
cltd
xor
cmp
das
mov
adc
aas
jno
sbb
js
loop
in
adc
mov
ficoms
push
xor
pusha
jle
ds
dec
and
sar
pop
pop
mov
mov
mov
or
enter
popa
bound
jbe
in
pusha
add
outsl
dec
pop
inc
arpl
pop
mov
xor
jg
sub
js
and
inc
imul
rcrb
int
pop
arpl
jne
scas
imul
sbb
call
jmp
lea
lock
out
loopne
into
adc
push
mov
push
mov
push
mov
test
insb
inc
xchg
jbe
dec
mov
ds
xor
add
mov
fdivrl
jne
pop
movsb
aas
les
shrl
in
xor
repnz
add
leave
std
stos
mov
and
popa
shll
xchg
sbb
imul
xchg
push
cli
mov
and
int
jbe
test
xchg
std
mov
or
je
inc
jne
addr16
int
pop
out
jo
fsubrs
rcrb
lods
stos
cmc
in
sub
or
gs
pushf
jo
fsub
adcl
mov
cwtl
dec
mov
jnp
add
fdivp
cld
into
adc
xchg
xor
test
sbb
rorl
mov
mov
imul
or
enterw
mov
gs
test
xchg
imull
mov
sub
sub
add
jns
cmp
mov
dec
xchg
das
adc
sbb
adc
push
loope
jae
and
mov
inc
push
out
xor
lods
xchg
daa
imul
das
cltd
cmp
cmpsl
jge
repnz
inc
jns
sub
lcall
xchg
pop
mov
push
aad
dec
outsl
out
test
js
xchg
jp
imul
push
lock
in
dec
cmp
repnz
cld
push
aam
fidivl
and
gs
add
and
push
mov
xor
cmc
addb
mov
hlt
push
sbb
push
dec
in
push
repz
mov
xor
scas
add
jno
enter
add
mov
push
mov
test
fwait
rcll
and
sarl
mov
out
loope
xor
ret
xchg
cmp
scas
clc
shl
jecxz
or
in
dec
data16
test
rcrb
mov
xchg
jp
jecxz
mov
cmp
insb
stos
mov
aam
outsb
aam
insb
adc
adc
mov
pop
sbb
jbe
mov
xchg
mov
lea
mov
data16
sub
mov
push
subl
xchg
addr16
mov
sub
ret
cwtl
decb
mov
cwtl
out
ret
jne
dec
imul
sbb
adc
rclb
mov
xchg
jo
mov
out
mov
jne
pop
js
adc
stos
cltd
out
cmp
push
mov
mov
imul
aaa
fistps
push
lcall
cmp
sbb
jbe
adc
inc
xlat
fldenv
jg
movsb
sbb
mov
pop
push
test
in
cmpsb
out
cwtl
scas
cli
ja
aad
inc
jne
rolb
in
xlat
gs
push
jo
mov
mov
lods
pop
repz
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
jmp
pop
test
push
adc
iret
cltd
lds
cld
jae
push
adc
aaa
cli
adc
loope
dec
imul
inc
jp
pushl
mov
mov
sbb
or
or
fisubrs
xchg
sbb
cmp
bound
push
inc
dec
mov
pop
scas
inc
push
fs
adcl
cs
and
jno
inc
push
hlt
daa
scas
movsb
jle
scas
xor
jp
push
mov
shlb
pop
cmp
inc
paddsw
mov
or
mov
jle
push
adc
xchg
fbstp
ss
outsl
repz
das
leave
pop
cltd
sbb
mov
leave
xor
nop
adc
jge
or
jp
dec
dec
call
loope
xchg
fisubrl
mov
jne
jmp
sub
inc
aas
lcall
arpl
and
lahf
xor
pop
pop
movsb
inc
mov
shl
lods
jl
mov
inc
dec
mul
or
push
mov
fnstcw
out
nop
hlt
cmp
mov
insb
stos
arpl
jb
ljmp
pop
popl
fnstsw
inc
cmp
int
jne
mov
add
cmp
dec
fdivrp
imul
cld
sbb
mov
push
outsl
mov
jbe
pop
fisubrl
lods
fcoms
jae
mov
and
xor
cli
into
outsl
jecxz
imul
adc
cmc
je
mov
negb
and
dec
pop
in
xchg
xchg
mov
cmp
push
icebp
sub
sbb
add
push
int3
xchg
addb
or
ds
aam
xchg
out
lret
fbstp
jp
shll
hlt
jg
out
roll
clc
out
cmp
mov
das
inc
cmp
and
ret
cmpsb
fucomip
inc
mov
or
mov
stos
cmp
and
add
adc
lock
out
lock
pushf
push
jecxz
lahf
xchg
jp
fiadds
sbb
inc
aas
dec
xchg
bound
push
xor
jnp
add
cmpsl
push
cmp
test
jo
add
out
mov
sub
xchg
cmpl
call
sub
shl
shll
lds
jg
push
adc
or
push
jle
jns
cmp
cli
pop
mov
inc
pop
aam
inc
xchg
insb
bnd
in
and
mov
int
inc
sbb
sbb
arpl
fwait
andb
loopne
out
in
adc
dec
xor
sbb
sub
ret
das
sub
scas
stc
xor
and
inc
inc
arpl
push
das
sub
dec
jl
sub
and
out
popf
and
test
pushl
sub
jl
dec
aas
mov
stos
push
ret
sbb
lds
dec
sbb
pop
ds
mov
sub
adc
shl
sahf
jmp
mov
dec
fwait
sti
sahf
jns
addr16
shll
push
cmp
lods
dec
jge
sahf
rcrl
jne
xor
lcall
cmp
pop
pop
pop
mov
sbb
call
pop
pop
mov
mov
test
xchg
or
aam
inc
inc
jp
sub
cltd
dec
pop
pop
jno
push
inc
xchg
cmpsb
mov
xchg
fisttps
push
out
and
hlt
popf
dec
sbb
add
jp
icebp
das
jbe
ds
sahf
mov
mov
or
jge
pushl
inc
cmp
mov
idivb
fidivl
push
mov
hlt
jbe
mov
shr
sub
ja
sbb
enter
mov
arpl
or
in
or
in
cmp
and
jle
es
movsl
dec
pusha
lcall
stos
mov
jecxz
iret
movsb
stos
push
sbb
inc
add
in
add
mov
stc
div
xchg
push
in
xor
imul
sub
push
dec
imul
cmp
pop
pop
mov
out
jns
mov
mov
adc
adc
lods
fs
repnz
dec
test
hlt
out
in
xor
jmp
lods
cld
xchg
jmp
xchg
loope
test
lods
adc
aaa
cli
adc
push
rcr
ja
or
orb
xlat
or
cli
imul
mov
mov
enter
pusha
jbe
mov
dec
cmp
push
mov
inc
lods
add
xchg
xchg
push
pop
ficoms
sbb
push
ficoms
mov
jle
das
sbb
mov
jbe
cmpsl
fcoms
inc
mov
pop
cs
mov
inc
jno
or
into
jnp
sarl
sbb
mov
pop
or
jno
lods
lahf
gs
stos
pop
dec
movsb
movl
out
cmpsb
notl
push
inc
insb
in
loopne
sarb
and
negl
lods
pop
out
call
js
dec
stc
adc
jae
test
mov
cmpsb
inc
adc
fwait
push
fdivs
jb
jo
cmp
mov
fcoml
pop
mov
inc
imul
sub
inc
pop
mov
repz
idivl
std
ljmp
std
call
mov
mov
ficompl
lods
fnstsw
loopne
std
mov
lcall
lahf
out
sub
rorl
fistpl
mov
fcom
mov
mov
adc
cmp
sbb
cmpb
pop
in
jle
testb
xchg
dec
jne
les
jmp
popa
scas
sub
mov
in
lret
bound
idivl
sbb
std
pop
cmp
fwait
pop
jl
inc
push
ja
jg,pt
test
outsb
std
add
pusha
movsl
adc
push
push
push
dec
or
mov
repnz
push
push
out
pop
int
or
mov
outsl
sbb
in
into
mov
jg
imul
inc
shrl
mov
in
mov
fwait
add
rol
popf
push
rorl
xchg
jl
mov
aam
sbb
and
jle
jmp
pop
and
adc
adc
adc
pushf
imul
mov
subb
or
xchg
mov
stos
out
iret
gs
xor
int
mov
mov
popf
dec
mov
cmpsl
jae
mov
mov
je
fisubrl
or
fcomps
div
cli
xlat
enter
icebp
rcrb
cs
in
push
inc
subb
fnstcw
or
int3
lret
aaa
aam
insl
xchg
jns
lcall
and
push
pushf
in
inc
dec
icebp
das
fdivl
in
pushf
and
sbb
scas
add
mov
es
in
xor
jae
fwait
pop
sahf
adc
shll
in
or
iret
mov
out
mov
push
pop
cmp
fldenv
sub
sub
scas
dec
jg
popf
sub
dec
inc
mov
xchg
cltd
movsl
ljmp
shlb
sbb
in
push
adc
sti
int3
pop
loope
es
xchg
fisubs
xor
bound
test
rorb
fwait
mov
dec
fdiv
dec
les
incb
add
leave
push
lods
mov
enter
or
mov
mov
shll
daa
cwtl
fs
outsb
mov
mov
fdivp
add
in
cmpsb
iret
mov
ja
push
mov
addr16
xchg
dec
in
mov
ljmp
clc
out
shr
lods
mov
cmpsl
dec
xor
mov
inc
inc
push
repnz
sbb
dec
push
repz
mov
psubd
jecxz
mov
icebp
movsl
inc
jne
out
imul
dec
mov
nop
ja
mov
mov
mov
rcrb
push
scas
jns
lods
cli
in
lret
je
test
int3
add
ret
dec
movsb
mov
cltd
stc
sub
or
and
lahf
and
lcall
jge
mov
pop
test
call
nop
xor
inc
enter
gs
aam
push
xchg
jns
mov
leave
xchg
dec
sbb
movsl
test
jo,pn
mov
mov
imull
outsb
pop
inc
jne
and
lret
xchg
mov
ret
ret
push
or
push
test
push
adc
add
adc
test
add
mov
cmp
jne
movl
mov
movl
mov
movl
mov
jmp
addl
dec
push
or
cmp
roll
jge
repz
adc
cli
adc
test
inc
hlt
fstp
jl
imul
pusha
pop
cmc
inc
nop
mov
lahf
pop
and
push
adc
lods
in
cmp
jp
and
das
sbb
ret
mov
sbb
mov
jae
dec
or
rcll
inc
dec
fdivs
xchg
loope
or
xchg
sbb
mov
xor
mov
call
and
add
sti
sub
xor
stc
pop
xchg
xchg
xchg
xor
ds
sub
push
test
arpl
inc
fisubrl
jl
cmp
popa
shl
mov
mov
mov
enter
out
cmpsb
cli
jno
iret
or
mov
fistpll
mov
sbb
out
adc
movsb
aad
pop
aad
cmp
data16
xchg
notb
leave
out
loop
mov
repnz
int
mov
clc
pusha
xchg
lcall
pop
xchg
xchg
xchg
fstl
movsb
sarl
and
add
movsl
lret
lahf
mov
pop
cmpsl
cmp
sub
xchg
dec
test
in
inc
cld
pop
lret
add
sbb
lds
scas
inc
and
dec
lock
std
insb
xchg
mov
stc
mov
mull
movsb
cld
fcmovne
imul
sbb
outsb
mov
add
fstpt
adc
outsl
dec
out
outsl
loop
mov
push
mov
sbb
xor
mov
cmpsb
js
jp
mov
ds
rsqrtps
cmp
int
adc
stc
pushf
out
subb
out
jmp
cmc
mov
shll
lock
popf
mov
das
xchg
int3
xor
fstpt
mov
popl
movsb
out
mov
jnp
dec
jbe
test
aaa
mov
cmpsl
js
lods
sub
mov
mov
mov
sub
stos
adc
aas
mov
push
sbb
sbb
sub
jbe
jne
jbe
lea
pop
push
rolb
dec
ds
mov
sbb
popf
sti
inc
cmp
rcl
xor
test
xchg
movsl
inc
and
sbb
sub
mov
scas
sub
mov
push
fdiv
mov
das
push
js
or
mull
jno,pt
add
mov
fnstsw
sar
dec
stos
adc
pusha
push
rorb
aaa
jg
pop
push
sbb
sub
inc
pushf
test
pushf
sbb
fistpl
push
mov
jecxz
ja
mov
push
popf
mov
xchg
jne
mov
les
sub
sti
loope
lods
sbb
inc
add
mov
push
aad
add
lea
xor
push
aas
add
jg
pop
and
inc
mov
pusha
pop
jle
imul
add
fisttpll
and
dec
pop
push
push
fsubr
jmp
not
mov
les
in
push
addr16
mov
jge
arpl
mov
insl
sahf
fwait
pop
cmp
lret
cmp
adc
popa
test
mov
mov
lods
clc
in
inc
int3
mov
xor
adc
pop
sub
sbb
push
cmp
lahf
or
pop
rcl
cwtl
outsl
fmull
mov
lods
fidivs
jae
mov
sti
jns
outsb
adc
sub
adc
jns
loop
mov
in
stc
orl
lret
inc
mov
sub
nop
xchg
xor
sbb
or
xchg
jnp,pn
out
jp
jle
mov
popf
pusha
ljmp
cmp
dec
and
and
push
and
mov
nop
imul
bound
in
loop
pop
inc
stos
hlt
xchg
lahf
rcrl
imul
ljmp
jle
addb
in
enter
mov
push
jns
cmp
pop
pop
test
xor
rclb
sub
cltd
xchg
mov
call
bound
lods
mov
xchg
push
mov
inc
or
enter
add
or
mov
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
jmp
pop
fisttpll
dec
es
fisttps
jnp
push
pushf
adc
aaa
cli
adc
dec
imul
loopne
stc
aad
in
shlb
sti
daa
adc
dec
popa
push
jp
in
sbb
sahf
inc
push
dec
in
clc
inc
insb
sbb
pop
das
mov
xlat
pop
push
xor
jo
aaa
jo
lods
fdivrs
cmpsb
cld
idiv
sub
add
ficomps
repz
shrl
pusha
mov
add
cld
fwait
mov
decb
or
cmp
daa
push
cmc
out
fisttps
mov
sub
cld
movsl
cmp
lods
mull
push
sarb
xchg
scas
pop
dec
fwait
mov
mov
cmp
xor
cli
push
sub
xor
sbb
jmp
cmc
cmp
outsl
pop
aaa
sub
and
cmp
shlb
ss
bound
loopne
and
dec
push
leave
cmp
insb
fcmovnu
mov
sub
jle
cltd
dec
push
jne
mov
inc
sub
lret
mov
and
sbb
jno
sub
push
lods
jnp
add
not
test
aas
popa
inc
xor
sbb
sahf
xchg
adc
ljmp
and
insl
pop
int
xchg
sub
shl
mov
sti
push
xchg
inc
int
fisubs
sub
and
sub
xor
orl
repnz
cmp
loop
adcl
sti
fwait
ret
push
cmpsb
mov
push
mov
push
inc
out
sbb
or
sar
push
popf
xorb
dec
mov
cmp
stos
jp
lcall
push
pop
push
movsl
dec
cmp
jae
lea
and
jns
out
mov
mov
test
xchg
sbb
pop
dec
rcrb
mov
ret
or
fsubr
imul
xchg
imul
push
imul
test
into
int3
sbb
and
shll
cld
xchg
add
pop
xchg
xlat
pop
cmp
dec
mov
push
inc
push
xor
shrb
adc
fcomps
repz
shll
xlat
cmp
aaa
sbb
push
inc
jecxz
add
mulb
sub
dec
lds
pop
dec
xor
insb
les
add
fadds
mov
mov
out
movsl
movsl
enter
or
stos
mov
cmp
mov
fisttpl
cwtl
and
sahf
inc
xlat
xchg
push
pushf
test
mov
hlt
mov
test
pop
cwtl
addr16
mov
ret
pop
push
imul
sub
lcall
fstpt
arpl
scas
mov
scas
cmp
inc
jns
in
icebp
jns,pn
loopne
xor
add
mov
popf
in
push
mov
jb
ficompl
add
stos
test
adc
mov
sub
dec
scas
sub
push
rcl
lcall
inc
mov
mov
cs
mov
test
inc
mov
pop
xchg
out
lret
insl
out
lods
jmp
xchg
or
call
adc
pop
in
rcl
pop
pop
repz
sub
mov
xchg
mov
xorl
pop
pop
inc
mov
sbb
sub
jo
jb
xor
fcmovbe
sbb
mov
push
push
jg
dec
fists
mov
or
pop
push
jns
shrl
xchg
cli
pop
xchg
sysret
int3
jecxz
lret
xor
int
jle
add
gs
mov
push
cmpsb
dec
jp
fcomp
rolb
test
and
mov
mov
das
stos
fmul
leave
jg
aaa
or
mov
xor
jmp
ss
movsb
addr16
popf
xor
pop
gs
aam
pop
negl
les
les
aad
sub
jns
fstpl
iret
sub
mov
mov
fcmovnu
fldl
add
adc
roll
test
and
push
cmp
out
pop
jl
xchg
jecxz
test
cmp
movsb
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
push
test
add
push
adc
jnp
dec
insl
sbb
dec
pop
mov
adc
cwtl
pop
mov
or
pop
jb
sub
xor
xchg
or
nop
dec
sbbb
dec
cs
out
push
xorb
leave
clc
sbb
xor
testl
aad
imul
mov
enter
jmp
fldcw
cwtl
test
inc
dec
pop
addr16
push
or
lods
add
xchg
loope
or
cmp
add
int3
imul
xchg
add
mov
cmp
xchg
stc
sahf
lea
sub
pop
out
stos
inc
xor
add
les
add
mov
out
mov
call
dec
sub
ret
in
addr16
into
dec
test
bound
xchg
enter
sub
out
rcrl
jnp
cmp
scas
in
sbb
push
out
lods
hlt
out
jp
mov
mov
jbe
push
outsb
xor
aad
out
and
out
add
mov
lret
add
call
cmc
fsubrl
adc
js
aaa
sub
nop
sbb
ret
aam
sarb
cwtl
aam
lods
les
jecxz
rorb
mov
popa
pop
fdivr
mov
jle
jg
xlat
cmp
adcl
add
hlt
lret
aam
pop
xchg
movw
lret
aam
adc
sarb
lret
mov
insl
sub
js
sbb
mov
in
mov
add
ljmp
xchg
sbb
push
inc
dec
add
pop
or
mov
call
fdivrp
pop
add
outsl
and
mov
pop
fisubrl
cmp
xlat
scas
mov
jge
into
mov
dec
pop
push
fistpl
jl
xchg
dec
hlt
jl
add
arpl
xor
mov
jle
pop
fldl
sbb
cld
jmp
mov
sbb
pushf
clc
addr16
adc
dec
pop
cli
or
mov
inc
inc
lods
jb
loop
and
add
movsb
inc
inc
mov
arpl
arpl
cmpsb
leave
push
jg
push
shlb
sbb
xchg
mov
cmpsb
cmp
cmp
cmc
lret
inc
es
and
iret
or
xor
sub
fwait
add
xchg
loopne
dec
cwtl
insl
pusha
add
add
xor
clc
push
daa
pop
mov
add
test
cmpb
inc
icebp
mov
rorb
loopne
xchg
push
and
sub
aad
sub
mull
mov
arpl
cmpsl
mov
mov
scas
pop
jne
fwait
or
pop
sub
add
ret
adc
push
cmp
das
ds
out
les
push
icebp
aas
mov
or
pop
mov
mov
push
nop
aas
cmpsb
xchg
sbb
js
std
and
stc
or
inc
fisubrs
cmp
pop
call
push
scas
or
mov
lahf
mov
int3
jge
rolb
les
mov
mov
insb
data16
fisubrl
mov
loopne
cmp
pop
stc
icebp
inc
mov
inc
mov
repz
loope
stc
sub
lcall
sub
or
mov
fimuls
cmp
sbb
and
mov
in
jge
movsb
pop
sbb
adcb
mov
push
push
and
pop
xchg
inc
mov
cltd
popa
or
cmp
or
ds
push
mov
icebp
sub
xor
enter
dec
cmpb
testl
pop
inc
test
push
cmp
pop
sbb
leave
loop
stos
fmull
test
sbb
mov
sbb
insb
imul
cmpl
pop
fadds
mov
adc
pushf
and
lcall
in
or
pop
arpl
jmp
jle
rorb
ret
add
add
je
lods
mov
imul
sahf
mov
adc
cli
adc
sbb
test
sbb
mov
push
inc
shl
mov
cmpsl
mov
mov
adc
outsl
xor
cmp
inc
lcall
and
roll
cs
pop
test
jae
cmpsl
enter
fistpll
push
push
addr16
or
jnp
rcl
dec
stos
and
pop
subb
pop
mov
out
sub
or
xchg
testl
xchg
adcb
sub
dec
out
mov
subb
or
jns
sub
mov
inc
push
enter
cmp
daa
jns
data16
nop
stos
and
movups
testl
lds
add
in
mov
out
push
push
adc
fiadds
push
or
ss
jecxz
fists
adc
out
into
mov
jge
adc
test
stc
mov
icebp
jmp
mov
push
jbe
sub
push
and
mov
in
les
leave
adc
mov
sbb
jl
xchg
push
in
in
xor
xor
sbb
mov
sti
incb
sub
sub
scas
cmp
inc
or
cmp
xchg
add
idivb
popa
mov
std
lock
loop
fs
sub
mov
lods
rolb
xorl
push
inc
xor
inc
pushf
mov
xchg
sub
push
adc
imul
pop
js
xchg
sahf
out
test
mulb
fwait
pop
dec
mov
outsb
repz
and
push
fcmove
jns
xchg
cltd
insl
sub
arpl
imul
add
cmp
cmp
hlt
inc
mov
sbb
add
rorb
push
ja
mov
adc
orl
lcall
shr
repnz
cmpsb
mov
fiadds
int3
push
xchg
sbb
loopne
lds
and
inc
movq
icebp
jecxz
in
inc
icebp
mov
sahf
cmpb
cmp
mov
lds
lcall
dec
xor
mov
movsl
outsl
aaa
lahf
or
push
dec
stos
inc
pop
cmp
movsl
insl
or
inc
aas
arpl
jp
popa
sub
cmp
jecxz
stc
mov
je
les
stc
shr
push
dec
push
mov
orl
mov
cmp
out
filds
gs
jl
mov
ret
xor
out
jae
add
outsl
inc
test
popf
mov
cwtl
out
sbb
popa
cltd
jo
popa
xchg
fimull
adc
test
adc
jl
sbb
sbb
mov
sub
mov
sti
stc
xor
jns
cmc
test
mov
subb
pop
xchg
lods
inc
rorb
ja
sbb
mov
inc
out
pop
cmp
inc
roll
inc
sub
add
and
push
loopne
sbb
mov
sahf
adc
popa
adc
mov
sbb
jo
adc
sbb
mov
mov
mov
in
divl
lcall
inc
push
sbb
insb
mov
fsubs
xchg
arpl
stos
adc
int
fidivs
roll
pop
lock
int3
jnp
lods
insb
nop
xor
jmp
sahf
fiaddl
jge
jge
and
and
int3
mov
cmc
clc
add
test
dec
out
dec
sub
mov
sub
repz
jg
insl
push
negl
add
inc
dec
and
faddl
jecxz
push
and
push
clc
mov
pop
adc
inc
pop
mov
mov
insl
aad
cmc
or
shr
xchg
push
xlat
jl
mov
je
shlb
scas
fidivrs
inc
or
mov
fnstenv
jns
jns
mov
pushf
outsl
push
out
cmc
xchg
mov
dec
and
adc
mov
and
mov
imul
adc
or
mov
add
sbb
das
aam
mul
popa
push
sub
xchg
jecxz
adc
aaa
cli
adc
mov
gs
fsubrs
mov
push
and
mov
test
scas
sbb
cwtl
test
leave
mov
out
jmp
mov
js
add
popf
sarl
addr16
adc
cld
cmp
mov
nop
mov
jae
sbb
es
fldenv
lret
add
xchg
loope
fs
loop
and
mov
imulb
xchg
adc
loope
mov
mov
pop
orl
and
cmp
int
ret
pop
pop
std
inc
daa
or
xor
dec
xor
es
clc
xlat
push
cmp
out
into
mov
mull
cmp
mov
pusha
mov
dec
cwtl
cmpsl
xchg
dec
mov
test
sub
test
xchg
jnp
jl
mov
cmp
stc
lea
shll
mov
xchg
bound
xchg
scas
faddl
xchg
andb
shll
call
add
mov
sub
cmc
mov
xor
and
or
shrl
mov
push
lahf
fstpl
or
xchg
repz
xor
cmp
enter
js
xchg
ffreep
inc
rorl
mov
mov
mov
xor
and
jb
cld
das
fsubs
push
lea
or
inc
jp
inc
mov
xchg
dec
mov
cmp
sub
sub
mov
in
mov
jmp
call
and
sub
add
jl
daa
xchg
push
or
xor
int3
xlat
adc
into
xor
inc
addb
lcall
sbb
cmpb
mov
in
cmp
andl
sti
cmp
mov
into
int
aam
pop
adc
sub
inc
cmpsb
imul
mov
iret
jmp
mov
push
or
cli
push
ds
jae
adc
insb
dec
push
dec
mov
movsl
sub
repz
sub
or
ja
sub
leave
enter
lret
xlat
call
shlb
mov
dec
adc
xor
repz
push
or
lret
or
fs
push
test
fcoml
mov
pop
and
outsl
loope
xor
jnp
dec
iret
out
push
scas
mov
lods
inc
les
add
dec
jmp
not
dec
pop
push
test
fistps
test
sbb
cltd
push
ds
inc
push
mov
dec
dec
psubq
call
lret
mov
out
rcr
xor
push
in
jg
lahf
lea
ss
sbbl
mov
popf
aas
jl
cmp
mov
ss
sub
lds
mov
xchg
and
in
push
sub
scas
and
lods
movsb
lods
rclb
push
adc
fildl
push
test
in
je
xor
xor
nop
xor
lock
cmpsb
into
jne
push
jnp
inc
fwait
mov
sbb
les
fsubrl
inc
les
xor
loope
cmc
mov
shll
hlt
add
xor
xor
push
fiadds
cmp
repnz
stos
xor
mov
mov
and
mov
mov
jecxz
push
mov
adc
lret
pop
cmpsb
pusha
adc
outsb
mov
and
loop
jbe
dec
nop
out
sbb
in
lcall
gs
addl
nop/reserved
xchg
push
xchg
and
cld
inc
nop
je
sbb
test
push
addl
repnz
adc
add
fldl
adc
sti
shr
adc
mov
jb
add
imul
test
shrb
imull
fcompl
and
mov
jne
lods
enter
add
mov
or
add
shl
jmp
add
push
adc
lds
das
jnp
adcb
aaa
cli
adc
incl
push
mov
adc
daa
cmp
mov
int
and
dec
divl
clc
and
dec
movsl
and
sbb
sbb
js
sbbl
push
ret
es
mov
filds
add
cli
mov
xlat
push
cmpb
dec
ds
mov
mov
sub
xor
mov
dec
xchg
push
mov
icebp
sbb
add
pop
add
mov
cmp
inc
ret
adc
pop
xorl
cmp
insb
outsl
mov
push
je
sub
pop
push
push
icebp
ret
inc
adc
xor
jecxz
add
cmp
in
cwtl
jnp
int
decb
les
test
out
mov
cld
movsb
mov
dec
pop
loope
mov
sbb
ds
movsl
sbb
sub
mov
lea
xor
sbb
aas
cmpsl
mov
call
and
enter
subb
dec
mov
in
in
mov
dec
mov
insb
addr16
rorl
inc
stos
in
pop
xor
dec
xchg
adc
dec
std
jbe
xchg
fmulp
sub
cmc
fdiv
imul
sahf
ja
lcall
ja
xchg
outsl
shll
cmp
mov
jnp
stos
je
adc
outsl
push
mov
and
pop
pop
mov
xchg
pop
int3
sub
sbb
icebp
pop
inc
notl
mov
add
rorl
pusha
es
mov
push
jnp
dec
addr16
mov
stos
call
repz
cmp
leave
insl
mov
ja
mov
mov
inc
pop
sub
pusha
pop
adc
xor
shlb
jno
jl
imul
out
rorl
xchg
dec
cmp
or
xor
stos
test
and
add
stos
pop
icebp
mov
stc
insb
pop
push
inc
mov
enter
int
mov
arpl
cmp
adc
pushf
les
xor
mov
jb
popf
xchg
and
pop
xchg
fs
fdivs
stc
jg
dec
stos
adc
jg
jmp
adc
push
or
leave
xchg
pop
cmpsl
lret
mov
xchg
or
inc
repnz
jnp
les
jle
push
adc
popf
mov
xlat
mov
cwtl
outsb
dec
movl
sbb
nop
fsubl
insb
imul
mov
adc
pop
sub
sbb
je
roll
sbb
insb
cmpsb
mov
mov
and
push
jp
inc
repnz
popf
inc
mov
les
push
and
in
mov
in
repz
fsts
pop
outsl
cmp
not
and
fisubs
das
jmp
fs
ss
cltd
and
pop
insb
movb
or
test
adc
sub
outsb
mov
fadd
dec
sbb
xchg
lcall
and
aad
adc
cmp
gs
in
mov
js
and
sub
pop
outsb
addr16
stos
dec
std
sti
inc
fdivr
xchg
sub
pop
mov
cmpsl
cmpsb
pusha
pop
adc
lahf
pop
call
push
xchg
imul
sahf
hlt
stc
pop
rorb
mov
mov
sub
imul
mov
test
xchg
inc
rclb
sbb
xchg
jo
add
test
lret
mov
xor
adc
loop
icebp
inc
jecxz
push
faddl
mov
jle
sub
cmp
ss
jg
mov
or
out
or
fsubs
adc
mov
fcoms
xor
in
push
insl
inc
or
pop
data16
leave
leave
or
pop
pop
add
mov
or
cmpsl
fdivs
sbb
rorb
xor
cmpsb
jge
pushf
add
cmpsl
aam
mulb
jo
adc
jno
fildll
mov
fnstsw
pop
popf
cwtl
pop
int3
jg
lods
mov
adc
lret
lods
movsl
jmp
sti
das
push
or
sbb
into
ret
lret
imulb
rep
je
idivl
cmp
or
inc
adc
inc
mov
lods
enter
add
add
movsl
js
inc
push
dec
xchg
movsb
cmp
cmpsb
lcall
aaa
cli
adc
adc
clc
popf
mov
mov
lea
jmp
ljmp
mov
popa
ja
sub
rcrb
and
les
mov
lods
sti
lock
jl
cmp
xor
lret
adc
int
adc
bound
mov
imul
lret
push
inc
adc
sti
inc
sbb
push
sub
out
jecxz
lods
push
mov
xor
cmc
pop
jo
insl
dec
or
xchg
xor
sarb
sub
jae
jg
mov
cmp
inc
out
arpl
push
ds
call
loopne
js
out
in
xchg
enter
divb
sub
sub
lahf
arpl
inc
jbe
pop
push
out
dec
cmp
aas
out
popf
mov
fwait
gs
sarl
or
xchg
and
inc
mov
push
inc
lahf
add
cs
mov
sub
sbb
mov
jg
mov
je
outsb
lret
subl
repz
jb
mov
lods
mov
inc
add
jne
mov
ret
push
pop
pusha
mov
mov
jae
pop
pop
jle
pop
test
into
jne
cmp
setp
nop
mov
test
inc
fbstp
dec
cltd
test
add
push
aas
mov
mov
pop
mov
lds
sbb
push
mov
or
pop
repnz
scas
fistpll
cmc
sbb
imul
mov
xor
bound
pop
xlat
js
pop
lea
cmp
adc
pop
arpl
ret
add
out
ret
sbb
aas
jo
pop
jnp
pushf
or
mov
je
sbb
mov
dec
out
inc
xor
and
add
or
inc
cmpl
fscale
out
fidivrs
sub
lcall
push
aas
mov
ja
inc
jg
push
cwtl
push
cmova
fcmovnbe
mov
xchg
cmpsb
xchg
sub
adc
ja
or
cld
and
movsb
inc
cli
in
cmp
rolb
les
sub
inc
and
adc
inc
and
lods
in
or
cmp
imul
pop
sub
jno
sub
mov
push
or
loope
and
jne
fst
movsb
jne
xor
pop
sbb
insb
mov
nop
mov
or
xor
cltd
add
dec
lea
jg
cmpl
in
sbb
mov
cmpl
imul
jo
movsl
and
movsl
pop
jl
movsb
nop
test
pop
or
pop
dec
daa
push
pop
sahf
pop
pop
mov
mov
jno
int3
ds
aaa
mov
add
clc
sbb
test
inc
cli
adc
outsb
movsl
in
sti
lock
dec
jns
shlb
jae
xchg
leave
or
mov
loopne
in
lods
mov
jne
rcl
mov
cmp
fldt
xorl
aas
fstpl
test
out
jno
lret
jl
push
inc
into
pop
jle
rolb
ret
mov
mov
mov
lds
not
aam
dec
inc
mov
inc
adc
push
lret
pop
rclb
sub
mov
xchg
pop
adc
nop
jmp
dec
cmp
jge
mov
mov
mov
dec
mov
dec
imul
jb
fldcw
mov
ja
loopne
adc
push
popf
xor
iret
add
sbb
popa
jecxz
popf
ljmp
cmpsl
cmpsl
mov
les
pop
cmpsb
call
std
inc
loop
mov
push
fistpl
xchg
jne
mov
pop
or
or
xchg
cltd
push
xor
mov
push
les
mov
mov
mov
mov
xor
shl
xor
or
mov
mov
add
jmp
pop
cmc
imul
test
stc
fisttpll
outsb
adc
aaa
cli
adc
nop
int3
fwait
add
cmpsb
fistl
adc
jecxz
repnz
dec
xor
loop
jp
imul
xor
lahf
sbb
inc
lea
inc
shr
outsb
loope
sbb
shrb
popf
bound
sbb
ja
push
ljmp
js
test
in
lret
mov
or
pop
int
inc
fs
ja
inc
in
jbe
int
stos
mov
sbb
clc
leave
test
icebp
push
sbb
adc
xorb
sub
insb
cmpsb
mov
sub
mov
jae
mov
cmp
sbb
out
cmp
jp
lea
sbb
and
mov
push
lock
push
loopne
jne
cmc
xchg
ja
ret
fcomip
inc
lret
stos
decl
mov
pop
lods
pop
fsubs
fisubrl
stos
popa
in
cmp
sbb
or
push
jge
mov
fidivrl
dec
addr16
fmuls
push
test
jp
out
popa
sti
roll
cmp
add
jecxz
imul
cli
loopne
cwtl
mov
clc
jae
lret
stos
pop
popf
cmpsl
inc
in
pop
inc
xor
popf
mov
xchg
in
inc
push
into
xor
mov
in
cmp
push
aas
mov
inc
std
xor
pop
ja
outsb
cwtl
sarb
add
rcl
orb
jge
movsb
test
lahf
cmc
stc
or
inc
stos
rcll
jae
mov
mov
jmp
out
out
push
push
mov
inc
js
add
lret
rclb
dec
xchg
add
int3
xchg
xchg
mov
idivl
and
fxch
jge
cltd
aas
push
in
mov
mov
mov
insl
jne
add
adc
lcall
inc
das
xchg
xchg
ja
int
lods
mov
lahf
loope
pop
push
lea
pop
jno
bound
rclb
sub
imul
jl
push
and
sbb
mov
or
shlb
sub
push
or
in
push
dec
dec
mov
out
jmp
movsb
int3
dec
mov
push
push
lahf
hlt
mov
push
adc
loop
adc
jae
mov
push
jmp
pop
nop
aad
test
icebp
filds
fsubl
cmp
movsl
mov
rep
cld
sbb
inc
notl
sbb
mov
mov
cmc
lea
in
or
in
pop
inc
pop
movsl
inc
and
std
ja
jnp
leave
pop
cmp
add
sub
lea
insl
mov
imul
in
sbb
xchg
pop
cmp
or
lret
fildl
push
arpl
int
lock
cmp
inc
daa
xor
out
ds
gs
sbb
jne
mov
aad
icebp
bound
pushf
aad
jno
adc
cs
push
iret
mov
repnz
scas
adc
jge
add
lcall
cmp
sarb
stos
aam
add
and
dec
dec
or
mov
nop
mov
xchg
jne
hlt
in
aam
idivb
insl
sbb
mov
rcr
add
push
mov
in
mov
push
stos
bound
jnp
or
sub
push
enter
mov
push
adc
fwait
or
rclb
and
add
push
cmpsb
or
js
leave
push
or
sbb
jb
aad
jo
pushf
test
movl
stos
xchg
repnz
cmpsb
add
hlt
arpl
xchg
sbb
cld
in
aad
test
and
ds
mov
mov
loopne
add
jne
movsb
adc
mov
jecxz
jge
fldl
jecxz
cmp
jg
sbb
dec
mov
cmp
divb
les
xor
mov
xchg
fwait
push
xchg
ds
jl
dec
pop
lahf
cwtl
dec
int3
jns
jno
fists
inc
hlt
xor
sar
xchg
mov
push
xchg
cmp
stc
pop
dec
ret
rcll
fs
mov
xchg
lea
arpl
mov
fisttpll
xchg
or
out
inc
enter
jmp
mov
dec
js
fs
xor
adc
pusha
mov
adc
aaa
cli
adc
mov
jle
mov
or
or
sub
mov
pop
push
and
add
dec
roll
scas
lea
call
mov
bnd
pusha
fwait
sarl
pop
push
push
lahf
dec
enter
mov
cs
xorl
fs
pop
and
sti
cmp
idivl
dec
imul
ljmp
loop
push
add
insl
sbb
outsl
ljmp
nop
xchg
and
and
test
and
mov
push
sbb
fstl
iret
stos
sahf
mov
divl
and
mov
mov
fs
adc
outsb
out
cmpsl
cmpb
out
jmp
lret
mov
adc
mov
jo
jb
mov
sbbb
jo
aam
pusha
loopne
loope
jecxz
es
mov
iret
xchg
aaa
ss
imul
insl
mov
aad
dec
push
mov
fadds
inc
ja
or
xchg
std
call
mov
dec
mov
leave
popf
adc
cmp
inc
push
das
sub
xor
stos
mov
je
and
bound
and
jg
icebp
lret
cmp
add
sarb
and
pop
hlt
sbb
cmp
cmpsb
test
jnp
fucomip
aad
enter
in
call
xor
jns
mov
popf
daa
pop
jae
cli
out
in
jb
sub
inc
jb
cmp
scas
mov
icebp
out
mov
adc
jmp
ljmp
pop
pop
aad
xchg
xchg
mov
fisttpl
jmp
mov
retw
mov
lods
ret
xlat
fcompp
je
icebp
push
inc
fbld
xor
ja
xor
mov
test
sub
in
mov
xchg
sub
popa
aaa
outsl
xor
pop
idivb
add
lods
add
rcll
jle
jnp
add
es
mov
push
in
push
sbb
sahf
clc
xchg
lods
xchg
lods
mov
xchg
mov
mov
sbb
out
fdivl
jbe
adc
jle
push
xchg
stc
mov
push
jmp
in
pop
push
sar
daa
xchg
add
fcmovnb
jl
test
dec
mov
adc
movsl
and
cmp
inc
and
mov
sahf
jnp
pop
jae
loopne
push
mov
fmull
ficoms
leave
push
in
xor
push
mov
or
sar
fcoms
xchg
arpl
pop
repnz
sbb
out
mov
cmp
mov
sarl
addr16
stos
inc
push
xor
push
test
pop
enter
loope
and
in
icebp
push
lret
and
inc
insb
mov
movsb
inc
jno
imulb
cltd
cmpsl
push
push
scas
push
mov
ret
dec
aaa
fadd
and
test
fdivrs
js
sub
xchg
jns
movb
enter
jmp
mov
sbb
add
push
xlat
sbb
fnstsw
outsl
add
inc
mov
filds
dec
jge
shl
sub
jmp
or
into
fcomps
and
jecxz
xor
xchg
jbe
fldl
xor
ljmp
inc
xchg
add
iret
and
jmp
loope
jmp
fsubrl
je
jge
shl
and
inc
nop
mov
inc
add
aaa
add
fbstp
clc
push
das
movb
mov
stc
loope
sbb
pop
adc
rol
ljmp
lods
xchg
bound
or
daa
dec
sub
fstl
and
xor
pop
inc
or
popa
loope
cmp
dec
loope
mov
rol
sub
nop
rclb
and
pop
pop
pushf
in
cmp
divl
pop
jne
fisubs
std
dec
dec
mov
cwtl
and
xchg
pop
dec
pop
mov
or
fwait
xor
push
inc
cmp
nop
adc
xchg
and
icebp
pop
jnp
or
xor
mov
fstps
imul
sub
shrd
shr
mov
mov
xor
shl
mov
jmp
test
out
outsl
cmpsl
dec
test
lret
testb
adc
aaa
cli
adc
dec
cwtl
out
or
inc
lods
lds
decl
push
into
pushf
fwait
push
inc
lods
cmpsb
int3
mov
jbe
mov
push
scas
mov
dec
inc
and
adcb
icebp
adcb
sbb
sbb
cmp
fwait
lret
fisttpl
jo
es
loop
jmp
ret
test
and
orl
mov
ret
icebp
das
fwait
scas
addr16
repz
sbbb
in
aad
movsl
cmp
mov
sub
push
push
adc
ja
es
mov
xchg
push
inc
jge
nop
into
arpl
push
loopne
dec
cwtl
mov
fwait
shrl
ljmp
pop
pop
xor
sub
call
pop
sbb
push
or
sbb
ss
cmp
in
or
xchg
je,pn
adc
xor
sbb
inc
ljmp
push
arpl
jne
dec
dec
xchg
cmp
les
dec
jge
in
mov
jnp
decb
loope
xchg
cmp
negb
mov
shll
loop
imul
lds
ficomps
xor
cmpl
push
mov
iret
xchg
lds
and
push
inc
test
mov
inc
xchg
or
push
fwait
dec
repnz
bnd
xor
dec
iret
push
fcomps
jecxz
jns
es
adc
mov
out
push
cmc
aad
adc
push
add
mov
iret
cmp
lret
movsb
and
sub
aaa
mov
scas
pop
adc
mov
jge
cli
int3
cmp
fidivs
cmp
sbb
hlt
dec
sbb
inc
loopne
loopne
mov
sub
xchg
push
ss
incl
mov
lret
push
or
in
outsb
cltd
xchg
jns
aam
jmp
inc
sbb
int3
add
xor
add
daa
xor
jb
ss
mov
mov
xchg
add
dec
push
in
iret
dec
add
repnz
xor
scas
lock
divb
push
and
or
cltd
loop
mov
sub
adc
bsr
inc
sbb
jmp
in
inc
aas
push
ret
outsl
ret
push
ret
jecxz
lret
imul
pop
xchg
cwtl
xorb
push
je
mov
iret
daa
in
push
imul
push
es
mov
jge
movsb
jl
icebp
stos
mov
push
bound
mov
or
cmc
ljmp
sbbl
mov
add
into
in
pop
inc
rcr
sbb
mov
aam
cmp
in
cltd
sub
sbb
inc
sarb
ret
cld
cmp
mov
jge
das
push
imul
cmc
push
mov
xchg
orl
sub
and
les
jbe
nop
pop
pop
lds
adc
into
rcll
mov
jo
push
inc
xorb
mov
and
subl
cli
test
aad
add
mov
cmp
rcrb
sbb
cmp
mov
mov
push
lea
cmp
pusha
int3
push
add
and
push
sbb
cmpsl
fwait
loope
xchg
xchg
repz
test
pop
push
rorl
cmpsb
lcall
out
push
daa
lret
ret
shlb
xchg
cmp
cmp
dec
or
xchg
push
pop
cltd
mov
fidivl
outsb
mov
pop
je
jo
cs
fldcw
push
and
jae
xchg
inc
mov
xor
leave
sbbl
rorl
mov
mov
nop
mov
ds
dec
jcxz
int
stos
mov
lret
stos
or
pop
mov
jns
push
xchg
ljmp
lret
mov
mov
js
ret
fs
hlt
mov
push
cmp
or
push
pop
jmp
popf
inc
pop
cmp
push
mov
adc
imul
pop
pop
mov
add
test
push
inc
mov
xchg
mov
dec
in
fchs
xor
or
mov
shrd
add
jmp
push
fsubrl
dec
or
out
xchg
cmp
aaa
cli
adc
mov
daa
mov
cmpl
push
in
jb
hlt
lods
or
js
xchg
inc
mov
adc
ret
pop
mov
clc
mov
sub
repz
xor
insb
sbb
das
jp
push
push
gs
mul
nop
insl
adc
iret
mov
imul
popa
popa
or
in
add
fcoml
or
mov
jne
xor
test
mov
push
xor
sti
call
mov
xlat
mov
pop
xor
adc
popa
insl
cmpsb
movsb
pusha
cmp
or
imul
push
incl
cmp
andl
popl
push
push
xor
and
bound
ja
push
dec
jle
and
repnz
mov
mov
push
ret
nop
repz
xchg
in
jae
mov
loopne
push
or
xchg
loop
lea
fidivs
hlt
out
push
ss
scas
xchg
fwait
test
pop
adc
fildll
dec
adc
xchg
nop
aad
push
movsl
les
jle
scas
mov
jge
aam
aas
pop
push
mov
fnsave
stc
testb
int3
movsb
in
call
sub
inc
or
mov
fcoml
ja
fidivrs
mov
xchg
and
insb
call
pusha
loopne
movsl
enter
mov
adc
andl
pop
cmpsl
shrb
addr16
daa
mov
sub
out
mov
lods
test
jne
jo
in
push
pop
lea
gs
fsubrs
jb
sub
lea
xorb
sub
shl
cwtl
pop
adc
in
mov
adc
mov
jecxz
rol
mov
mov
scas
sbb
xor
mov
mov
lahf
bound
aas
mov
pusha
cs
leave
pop
cmpsl
mov
test
adc
cmp
jb
lods
cltd
fwait
test
sub
data16
daa
aas
push
es
je
lahf
sbb
pop
cli
dec
fdivs
sbb
pop
add
xor
sbb
and
push
adc
clc
mov
dec
or
mov
lods
in
add
cmp
loop
aaa
sbb
mov
push
mov
call
lahf
adc
xchg
push
mov
jb
xchg
insl
fiaddl
xchg
cmp
pop
push
push
mov
pop
xchg
jmp
xchg
fstl
out
outsl
sbb
cmpsl
inc
xlat
mov
ret
pop
scas
adc
fbstp
out
ljmp
and
mul
leave
das
scas
push
sub
out
jge
jmp
das
lds
loopne
lea
cmp
stos
pop
cltd
loope
xlat
xor
cmc
scas
das
mov
aas
xchg
mov
cmp
add
mov
inc
push
adcl
movsb
sbb
jno
stos
sub
cmp
movsl
lds
and
shlb
fiadds
jo
mov
sub
mov
cmp
sbb
cmp
adc
cmpsl
mov
sbb
jno
ret
fcoms
nop
cltd
fidivrs
aas
pop
dec
div
xchg
mov
xchg
inc
pop
sub
jp
clc
aam
loopne
xchg
jge
sub
dec
fildl
into
push
mov
neg
jmp
hlt
call
stos
add
mov
fiaddl
iret
mov
outsb
shlb
daa
sbb
bnd
push
stos
dec
add
pop
aaa
lret
cmp
xchg
arpl
sub
mov
and
aam
cmp
inc
mov
bnd
lret
loope
mov
mov
push
inc
in
fdivr
jo
pop
dec
cld
dec
pusha
test
iret
cmpsl
fbstp
xchg
mov
ret
in
ret
lds
xchg
rorb
dec
mov
jae
inc
ror
jb
xchg
mov
adc
mov
push
pop
cmp
movsl
popa
sbb
mov
inc
xlat
dec
cmp
hlt
or
imul
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
jmp
mov
or
mov
dec
lods
pop
push
jle
adc
aaa
cli
adc
in
fdivs
push
in
stos
push
push
dec
add
cmpsl
repz
or
xor
adc
pop
mov
adc
aas
int3
and
adc
sbb
inc
sub
iret
inc
lret
mov
sub
cmpsb
imul
dec
lock
fstl
mov
inc
xlat
mov
movsl
rcll
adc
cli
xchg
inc
xchg
xor
add
mov
or
imul
nop
jno
loopne
mov
fwait
insb
adc
add
imul
push
fisttpll
cmp
sti
mov
lods
inc
xlat
loope
into
iret
bound
daa
jl
popa
rep
fnstenvs
and
lret
mov
mov
mov
test
js
ja
pop
mov
mov
movsl
sbb
repz
inc
sub
inc
in
cmp
jnp
les
and
push
ljmp
sti
hlt
sbb
frstor
mov
addr16
sbb
mov
mov
ljmp
je
cmp
xor
push
pop
jae
mov
dec
mov
and
push
bound
fcoml
xor
cmpsl
mov
sbb
mov
inc
jnp
dec
scas
fsub
ret
add
push
dec
jnp
push
push
lret
push
cmp
insl
pushw
movsl
mov
out
sti
or
jle
sbb
inc
ljmp
pop
out
sahf
inc
sar
insl
or
cld
push
adc
sti
mov
sub
das
cmp
not
cli
or
rcrb
or
add
push
dec
je
jae
popa
pop
pop
inc
popw
add
pop
and
imul
adcb
mov
mov
push
xor
push
jge
js
pop
lret
sub
fwait
xor
daa
mov
mov
xlat
popa
pop
icebp
cwtl
xchg
lcall
jl
jne
lock
shll
cld
cwtl
mov
mov
stc
ljmp
mov
mov
dec
xchg
jge
dec
lods
lds
mov
pop
popa
imul
dec
aas
ret
xchg
shll
jbe
and
xchg
lea
call
insb
push
and
jge
rcr
mov
andl
push
sbb
push
jne
fisubs
pop
push
inc
mov
push
jbe
cmp
mov
cwtl
dec
jae
jl
adc
dec
sahf
adc
xchg
pop
mov
ljmp
sbb
sub
or
pop
test
push
and
jg
sbb
sbb
cmp
or
repz
jmp
bound
cmp
jecxz
sbb
mov
mov
daa
push
xor
lods
cli
in
mov
cmp
outsb
xlat
and
pop
negb
mov
xchg
cmpb
inc
jnp
and
dec
pop
inc
pop
push
jae
jae
loopne
les
sti
inc
or
repnz
daa
mov
jns
mov
inc
test
mov
mov
inc
inc
sbb
mov
push
mov
and
inc
out
jp
xor
into
aam
push
jg
sub
mov
std
mov
mov
sub
dec
stos
mov
jno
cmpsb
cmp
xor
pop
rorl
lea
mov
or
pusha
loopne
loope
mov
pop
ja
js
and
sub
fcomip
into
cli
mov
cmpsl
into
mov
ret
ss
add
mov
xor
std
imul
fcmovu
loopne
cltd
mov
movsl
mov
rclb
inc
xchg
sub
sbb
mov
jbe
push
lret
sbb
push
or
xchg
cmp
lods
xor
fsubrl
mov
dec
inc
sahf
mov
hlt
jnp
inc
inc
fimull
scas
mov
cmp
loopne
imul
push
loopne
mov
out
imul
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jmp
jmp
adc
lock
jge
std
jle
adc
aaa
cli
adc
cmp
repz
xor
mov
cmc
jge
dec
push
inc
fisubrs
dec
jmp
filds
in
mov
in
inc
xor
mov
mov
sahf
mov
mov
fs
inc
fcoms
xor
fstpt
call
and
pop
es
xor
adc
add
xchg
out
xlat
fsubrs
mov
shl
xchg
nop
aas
gs
push
mov
loopne
pushf
mov
movsl
push
lock
push
mov
pop
sbb
fstpt
cmp
cmpl
popf
mov
jp
call
jp
mov
stos
xchg
mov
loope
cmp
popf
ret
adc
into
loopne
sub
jns
leave
aad
add
rclb
push
lds
sbb
lock
jb
test
lea
dec
and
sbb
mov
or
xchg
xlat
das
mov
mul
outsl
cmp
add
in
lahf
mov
adc
nop
inc
std
sbb
cmp
sarl
mov
ljmp
mov
mov
xchg
in
sti
daa
xchg
loopne
addr16
pop
sub
mov
mov
and
mov
fildll
xor
je
mov
jmp
jns
je
dec
mov
push
lret
ds
in
pop
push
repnz
cmc
mov
mov
sbb
adc
add
sbb
mov
cmp
imul
aad
sub
push
xchg
test
notl
push
iret
popa
add
pop
xchg
push
xor
jo
dec
leave
pusha
add
js
mov
push
fld
fcomps
fisubl
xchg
addl
mov
loopne
outsl
jg
or
addr16
cmp
jmp
int3
mov
les
dec
bt
adc
jle
sub
dec
out
fidivrl
cltd
xchg
lock
movsl
je
dec
daa
js
dec
rcrl
cmpsl
cmc
push
call
dec
xor
leave
push
xchg
out
adc
or
mov
dec
jb
xchg
mov
insb
sbb
ror
repnz
into
cs
mov
mov
and
sbbl
divl
sbb
cmc
gs
cmp
lret
addb
inc
inc
mov
mov
std
jne
lcall
cmp
mov
test
notb
idivb
shlb
shr
pop
add
sub
ljmp
xchg
fistpl
lret
lcall
hlt
fs
inc
pushf
cltd
arpl
imul
mov
or
test
add
push
in
mov
movsb
loopne
inc
or
fadds
xchg
stc
jno
sbb
push
insb
dec
xlat
cmp
push
lret
les
leave
ds
push
or
addl
pop
xor
jmp
xchg
lock
cli
mov
xchg
jbe
out
and
inc
dec
adc
adc
jg
lcall
stos
stos
or
sbb
cwtl
call
adc
jg
jno
das
test
aad
pop
dec
cmc
es
or
testl
sub
lock
repz
in
xor
aam
or
insb
jne
arpl
fstpt
jnp
outsb
aam
pop
stos
fcmove
or
repnz
jae
xchg
and
mov
dec
orl
jmp
inc
jb
xchg
push
out
jmp
dec
mov
sahf
add
and
adc
and
les
scas
cmpb
mov
push
lock
fisubrs
insl
das
jns
rolb
gs
lret
and
ss
push
dec
and
xor
mov
out
jb
push
sbb
jo
mov
mov
or
pop
lods
popa
fnstcw
lea
hlt
aas
xor
mov
add
les
outsl
adc
into
lock
add
sub
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
jmp
inc
in
push
test
and
lods
pop
cmp
jnp
mov
out
adc
aaa
cli
adc
mov
out
xor
push
incl
fwait
loope
stos
sahf
test
xchg
subb
xchg
lds
data16
cmp
js
or
push
and
dec
adcb
sub
cld
outsl
pop
add
insb
loopne
adc
xor
cli
int
imul
sbb
imul
fisubl
xor
or
in
jge
pop
imul
addr16
sbb
push
cld
xchg
and
xor
mov
idivb
sub
cmc
out
cmpsl
jnp
nop
sub
or
repz
adc
and
xlat
stc
test
jne
or
or
ret
xchg
mov
inc
mov
lods
fisubrl
push
jmp
sbb
insl
push
movsl
xorl
xchg
jo
lea
pop
nop
push
pusha
loop
cmp
add
ror
cmpsl
insl
aaa
in
jecxz
ja
pop
cltd
sarb
test
push
pop
xchg
xor
and
lds
pop
mov
mov
inc
aas
inc
xor
or
pushf
or
xchg
shll
and
stos
icebp
shrl
dec
adc
test
adc
sbb
les
mov
dec
mov
cmp
vpshufd
sbb
adc
cmc
jne
outsb
xor
and
mov
and
xchg
dec
pop
xchg
push
jg
mov
std
mov
cmp
and
sub
sub
sub
arpl
loop
inc
bnd
mov
sbb
and
out
mov
and
ss
movsl
mov
std
dec
iret
dec
test
mov
fcmove
mov
out
xor
dec
dec
mov
mov
push
add
les
stos
ret
jge
mov
dec
push
push
jl
clc
repnz
cld
nop
mov
sar
outsb
cmp
rolb
in
aam
fucomip
out
sub
aam
repnz
mov
iret
loop
into
test
fisttpll
add
xor
dec
fwait
xchg
push
push
dec
adc
xchg
xchg
adc
daa
cmp
mov
push
shl
in
adcl
filds
adc
sbb
mov
or
xchg
popa
pusha
cmpsl
iret
test
in
cli
sahf
xchg
jecxz
cmp
sbb
dec
mov
cmp
in
pop
fldenv
mov
loop
adc
icebp
inc
ja
adc
jle
sub
jp
push
adc
in
lcall
jno
fyl2x
insl
f2xm1
adc
clc
cmp
sbb
sbb
pushf
push
stc
mov
pop
mov
xor
leave
xor
cmp
ret
or
scas
out
stc
jno
daa
daa
popa
xor
jmp
lret
lret
mov
jb
push
dec
sub
aad
xchg
inc
dec
sbb
cmc
jmp
pop
das
fidivrl
mov
add
and
jb
pop
adc
mov
mov
hlt
test
mov
jmp
int3
mov
inc
xchg
xchg
or
stos
xchg
cld
outsl
lods
popf
jno
jle
jl
loopne
xor
aaa
or
xor
inc
jle
fwait
mov
lods
sar
adc
adcl
sub
fwait
mov
arpl
xlat
push
adc
adc
add
cwtl
dec
mov
add
jecxz
sahf
xor
xor
int3
sub
scas
mov
nop
lret
test
jb
push
sbb
sbb
lahf
pop
outsl
pop
mov
adc
fildll
lcall
movsl
rol
insl
dec
int
push
aaa
sbb
je
add
push
test
jp
dec
or
ds
jmp
mov
xchg
sbb
sahf
sub
cmpsb
xor
shr
outsb
cwtl
addr16
mov
repnz
nopl
rclb
not
lahf
dec
andb
insl
and
aaa
dec
outsb
mov
mov
fidivrl
xor
out
mov
arpl
adc
ret
mov
add
add
and
or
js
mov
sub
adc
aaa
cli
adc
std
lret
and
jne
xor
pop
out
repnz
inc
insl
mov
fs
mov
jmp
jae
cmp
test
popf
lock
inc
add
lret
scas
sub
inc
mov
mov
push
add
or
push
daa
loopne
subl
pop
sti
add
pminub
ret
mov
mov
and
mov
aad
xchg
mov
lret
fs
cmp
daa
lret
lcall
xchg
inc
js
push
push
adc
sbb
push
mov
scas
loopne
xchg
adc
test
xchg
in
aaa
aas
pop
leave
sub
stc
and
repnz
ucomiss
inc
jp
mov
xor
and
mov
cmp
shr
pop
sub
push
cmp
adc
or
pushf
jle
sbb
out
out
cmp
lods
or
mov
pop
cmc
pop
jb
aaa
xor
fcomps
dec
das
js
jae
jno
push
js
pop
inc
test
dec
inc
jl
daa
aas
divl
jmp
test
ficomps
push
pop
jne
dec
add
inc
jge
jl
xor
and
inc
into
push
sub
mov
leave
addl
in
jo
or
adc
jae
push
stos
sub
movsl
sbb
pop
dec
stc
fisubrs
lret
dec
ret
jno
dec
xchg
pop
sbbl
mov
movsl
aas
scas
lds
jns
into
fstl
enter
ja
lret
jmp
mov
rcl
sahf
sbb
mov
icebp
mov
out
sbb
fmulp
sti
push
mov
jae
hlt
fwait
bound
sbb
lods
rolb
lret
in
pop
das
mov
jmp
ret
cli
enter
dec
out
dec
imul
xor
insb
xorl
push
xor
stos
aaa
pop
add
jle
dec
aaa
outsb
add
sbb
insb
nop
or
stc
mov
adc
icebp
dec
sbb
aaa
adc
in
mov
data16
jb
pop
dec
mov
adc
xor
xchg
jecxz
rcr
out
xor
pop
xchg
cwtl
jecxz
push
into
cmp
iret
mov
dec
inc
sbb
or
inc
dec
or
out
dec
sub
cmp
jl
insb
and
insl
int
adc
test
cmp
addr16
jno
out
sti
push
xor
jnp
adc
in
xlat
jg
mov
xor
mov
add
lret
push
imull
push
jb
dec
push
cmp
lock
outsb
repz
shlb
pop
notl
rcrl
sub
inc
sahf
mov
jmp
nop
jne
or
xor
call
addl
push
xor
repnz
mov
cs
sbb
cli
sub
lcall
testb
xchg
aam
rcrl
and
jns
loope
xor
xor
daa
aas
xchg
gs
out
sti
sbb
inc
and
cs
pop
jg
and
xchg
daa
mov
outsb
testb
adc
mov
jb
fildll
sub
rolb
shl
add
jp
cmp
movsb
test
lret
aam
nop
push
pushw
js
dec
pusha
add
cmp
inc
outsb
test
inc
mov
out
mov
into
movsl
gs
and
jp
sub
pop
jmp
fsubl
and
adc
rolb
sbb
dec
and
xchg
in
mov
ss
fiaddl
mov
ja
push
lock
and
stos
scas
fwait
and
jbe
hlt
daa
cmp
jo
mov
faddp
dec
leave
ljmp
adc
push
lods
popa
mov
imul
lahf
mov
add
test
dec
jge
pop
add
roll
into
icebp
xchg
out
xchg
aam
mov
lret
push
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
jmp
mov
and
add
mov
sbb
adc
cli
adc
mov
add
addl
fwait
push
insb
fs
mov
lods
ficompl
add
cwtl
jne
xchg
adc
or
int
push
jns
mov
add
mov
push
xor
cld
stos
push
sbb
jle
and
add
add
dec
cs
shl
cli
push
jae
add
mov
mov
dec
add
stos
pop
sub
xor
mov
adc
scas
aas
fistpl
fwait
mov
jl
xchg
cmp
cmc
xor
cld
sti
out
jae
and
movsb
stos
add
lea
and
jns
jae
ret
mov
std
repz
xchg
rcrb
push
inc
cmp
mov
dec
xchg
iret
insb
rcrb
jo
ja
or
add
mov
fcompl
inc
gs
out
sbb
aas
add
imulb
sbb
test
mov
add
stc
cmp
push
aaa
outsl
movsb
jmp
lods
stc
adc
icebp
xchg
nop
sahf
scas
ret
adc
lahf
test
cmpsl
mov
push
pusha
bound
in
imul
add
inc
and
or
xchg
nop
jecxz
cmpsb
rclb
pop
pop
addr16
mov
push
jbe
repz
stos
pop
fst
inc
pop
mov
mov
push
and
lods
leave
into
mov
xor
int
insl
jg
mov
adc
mov
mov
rcr
mov
fstl
int
lret
aas
test
cmc
push
movsb
call
das
mov
dec
clc
sbb
fwait
inc
xchg
rclb
lret
pop
cmp
cltd
ss
or
jbe
cwtl
or
mov
fdivr
iret
adc
mov
lock
mov
test
fstpt
sub
and
call
dec
and
jge
fwait
jmp
flds
jle
add
xor
pop
dec
fcomp
sub
jle
int3
jmp
aas
sub
clc
lock
pop
push
in
pop
popl
ret
lods
stos
sarb
sub
das
shl
les
jge
test
and
pop
xor
dec
cmp
jb
push
push
dec
sub
cli
lcall
test
in
add
out
or
js
adc
xor
push
loop
jmp
push
stc
adc
push
mov
jle
outsb
mov
inc
push
int3
das
cmp
dec
out
popf
mov
and
aam
lea
mov
imul
pushf
mov
scas
pop
sbb
in
mov
repz
sbb
cli
jecxz
test
pop
lahf
xlat
popl
dec
cmpl
or
pop
mov
lods
or
push
enter
pusha
sbb
imul
inc
or
arpl
adc
pop
pop
pop
ja
or
mov
inc
add
mov
jmp
add
lahf
call
xchg
inc
and
inc
cmp
test
jb
in
je
xchg
outsb
flds
add
xchg
test
mov
out
mov
dec
sbb
fdivl
leave
in
call
pop
xchg
adc
mov
cmp
lock
xor
mov
cmp
xor
inc
call
out
pop
add
leave
fisttps
stc
repnz
xchg
loop
xchg
xchg
pop
mov
lods
and
in
lcall
negb
cltd
subb
fwait
pop
mov
push
rcrl
cmpsb
call
push
and
dec
mov
add
mov
mov
push
xlat
sbb
shlb
enter
add
lods
and
and
add
mov
cwtl
mov
adc
cld
mov
nop
xor
stc
cmp
mov
orb
lods
pop
xor
sbb
das
test
add
push
out
test
sahf
sub
adc
sub
sarb
maxps
inc
fwait
push
cld
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
imul
or
jmp
push
enter
push
aam
gs
xchg
rcll
cli
adc
adc
in
add
in
cld
lods
inc
test
int
out
push
adcb
ss
mov
cli
lahf
shll
adc
push
cltd
push
sub
jne
shll
ret
in
push
stos
in
pop
pop
or
and
mov
jno
mov
mov
out
add
dec
sbb
lahf
sahf
xchg
arpl
mov
mov
lret
jbe
push
mov
jnp
add
pop
or
adc
cmp
ror
jp
inc
cmp
jp
fisubrl
roll
jle
fs
and
adc
rclb
stc
fcomps
and
add
fwait
inc
jbe
fisubrs
popf
and
ljmp
or
mov
ret
cmp
data16
shrl
adc
loopne
cmp
cmp
or
mov
ss
aam
add
push
mov
sbb
ret
cmp
adc
mov
ret
fdivl
mov
imulb
shrb
rclw
fdivs
xchg
incl
mov
repnz
dec
xchg
or
stos
cmp
out
lfs
jp
pop
paddsb
fldcw
push
sub
cltd
gs
jns
mov
lcall
lret
lcall
or
aad
push
pop
aaa
shr
xor
or
pop
pop
pushf
fstpt
dec
xor
pop
aad
add
lea
ss
add
pop
sbb
pop
int3
fmull
loopne
add
mov
cli
insl
or
rcrb
fldl
nop
xchg
xchg
out
pop
jo
test
and
fdivl
sbb
push
fsubs
mov
pop
xchg
xor
out
dec
ja
sub
xor
icebp
sti
in
cwtl
lret
sbb
popl
adc
sbb
pop
pop
out
fdivr
in
push
das
lret
clc
ja
nop
fildl
mov
pop
jo
addl
mov
gs
in
jl
dec
sub
lret
sbb
iret
mov
gs
jl
push
xchg
mov
or
popf
cmpsb
xchg
inc
mov
imul
adc
insb
lea
cmpsb
xor
dec
out
mov
adc
mov
or
jp
cltd
leave
mov
movsb
sahf
out
cmp
pop
sub
hlt
popf
jle
xchg
rorb
xorl
mov
test
inc
adc
fwait
inc
push
arpl
test
inc
lea
cli
pushl
test
xlat
cmp
dec
mov
cmpsb
mov
movnti
in
push
stos
jecxz
in
mov
rol
push
pop
movsl
cmp
ret
dec
out
pop
jne
addr16
rorb
jmp
sbb
ret
pusha
ret
fdiv
push
fxch
jp
pop
in
test
repz
pop
pop
jg
sbb
ret
imul
call
fwait
inc
enter
insl
fstpt
adc
rcrl
inc
outsb
or
add
jmp
mov
jno
dec
or
leave
stc
push
test
test
das
loop
cmp
push
or
xchg
int3
add
add
cmp
push
mov
insb
cld
xor
lret
and
pop
mov
scas
and
rcrl
xchg
add
fs
mov
sub
fnstsw
stc
xchg
enter
fiaddl
cld
fiadds
mov
pop
lds
jbe
dec
jnp
inc
adc
lcall
fs
pop
out
ljmp
add
sbb
aam
daa
pop
out
push
cmp
adc
scas
cltd
repnz
std
or
ret
jmp
ret
add
and
jmp
divb
in
ds
xor
ret
push
div
repnz
or
adc
cmp
dec
movsb
clc
jns
mov
mov
rcl
xchg
add
ljmp
and
fcoms
pop
andl
int
in
cmp
fiadds
jg
nop
xor
mov
aaa
je
push
in
dec
add
stc
xor
mov
into
cmp
scas
or
pop
and
xchg
out
or
cli
xchg
xor
jnp
sub
dec
jno
jo
add
and
inc
jl
xchg
ss
push
sub
jmp
pop
sbbl
cmp
and
push
popf
lea
dec
sub
pop
push
and
cmp
jns
ret
push
jnp
ljmp
xchg
xchg
into
cmpsb
xor
stc
out
ficoml
ja
xor
popf
je
inc
enter
mov
push
push
mov
fldenv
jp
xchg
adc
cs
jne
push
mov
cld
xor
push
lret
mov
out
mov
or
xchg
bound
popf
cld
dec
call
xor
pop
jae
cmp
push
or
mov
fwait
xor
xchg
xchg
push
scas
test
sbb
add
leave
cmp
mov
iret
xor
jae
cltd
popa
enter
jp
movsl
arpl
inc
in
lea
rol
mov
sub
xchg
das
mov
and
or
and
leave
xchg
mov
lods
mov
shl
sbb
xchg
dec
add
test
das
in
movsl
subb
and
jo
int
xor
push
jnp
push
hlt
fidivl
cmp
shlb
out
dec
mov
cltd
xlat
loop
mov
cs
sub
adc
cmc
add
pop
mov
inc
pop
lds
xor
lahf
addr16
push
and
or
cltd
jmp
mov
fildll
push
adc
pop
push
or
xor
out
jl
mov
xchg
jno
loope
lret
fldl
or
mov
inc
ja
test
push
or
and
fsub
and
push
adc
daa
xchg
fisttpl
sub
mov
sub
xchg
sub
mov
out
sub
sub
leave
sbb
pop
inc
test
xchg
arpl
xchg
inc
sub
inc
clc
movsb
lcall
xchg
adc
mulb
mov
iret
mov
xchg
inc
insl
dec
cld
mov
insl
jecxz
stos
sub
jge
sub
ljmp
scas
xchg
jb
xor
subl
lret
jle
mov
into
xchg
cwtl
or
xor
jo
sbb
enter
sarl
ret
push
inc
fs
mov
dec
mov
push
cli
or
or
out
clc
xor
xchg
xchg
std
call
icebp
mov
sub
mov
mov
into
jmp
jecxz
fs
movsb
aaa
mov
loope
in
mov
push
imul
imul
cwtl
mov
int3
stos
int
inc
data16
aas
sahf
push
mov
or
out
faddl
or
movsl
inc
xchg
dec
insb
jno
lods
add
mov
ds
cmp
mov
fsubl
hlt
and
jb
jmp
xorl
popf
nop
mov
push
xorl
adc
aaa
clc
push
jbe
inc
dec
adc
mov
cmp
push
mov
imul
mov
repnz
rolb
data16
sub
scas
sarb
adc
jae
push
add
popa
jns
xor
or
stos
fsubrs
inc
cwtl
mov
aas
or
push
cmpsl
jns
fsubrl
ret
mov
xchg
dec
pop
in
lds
add
jb
mov
pop
scas
stc
popf
jno
sbb
rolb
int3
cld
jo
inc
pop
add
and
add
mov
sub
mov
and
mov
jmp
movl
movl
movl
movl
jmp
sbb
sahf
mov
pop
das
int
push
mov
test
push
adc
xchg
cli
adc
aad
and
and
inc
xchg
jns
pusha
fisttpll
mov
and
pop
push
xchg
repnz
inc
mov
shlb
xor
cmp
jmp
sub
jbe
imul
jecxz
adc
aas
add
or
or
flds
outsb
sti
cmp
mov
scas
outsb
mov
aaa
mov
dec
es
lods
jmp
sbb
dec
in
xchg
push
outsl
sub
jmp
fwait
cwtl
ret
sub
bound
lahf
xor
push
cmpsl
or
mov
loope
ss
imul
add
and
jg
nop
xchg
adc
add
call
out
mov
loop
test
cmc
pop
enter
dec
js
dec
stos
push
pop
mov
xchg
lods
shll
rol
push
jnp
and
sub
sbb
add
inc
pop
add
pop
xchg
mov
cmpsl
pusha
lahf
lods
fucomip
pop
mov
xchg
fcmovu
pop
out
cmp
xlat
dec
adc
arpl
or
xor
fsts
xlat
cmc
adcl
in
int
xchg
pop
loop
xchg
sub
call
push
xor
fnstenv
jnp
ds
repnz
inc
inc
push
jb
aas
in
fbstp
jb
in
push
mulb
outsl
test
stc
push
dec
js
mov
push
mov
pop
sub
cmp
sarb
lods
cmp
add
clc
adc
das
repnz
data16
dec
push
icebp
pop
mov
ljmp
outsl
xchg
or
adc
scas
xor
dec
es
or
js
push
ja
fldenv
clc
pop
shlb
sbb
leave
cltd
jmp
or
dec
sbb
es
test
sbb
jb
insl
idivb
sahf
call
cmpsl
jge
arpl
test
pop
out
rolb
xlat
clc
push
mov
pop
and
mov
sbb
sub
cmp
xor
adc
je
stc
ljmp
out
fildll
adc
or
ds
mov
sub
mov
push
jmp
in
shll
inc
and
add
rcrb
sbb
jo
mov
loope
cwtl
push
aaa
out
push
adc
loop
lret
xor
outsl
mov
fldt
inc
dec
mov
les
call
cld
xor
xchg
dec
xchg
and
sbb
lods
push
cmp
roll
fscale
push
pop
ja
adc
inc
fnsave
pusha
mov
stos
imul
dec
dec
in
pop
and
push
test
into
repz
fimull
xor
popa
je
xor
add
imul
in
push
ds
dec
test
jg
cld
sbb
mov
lods
inc
mov
js
mov
stos
frstor
lcall
into
outsb
aas
dec
aas
jmp
or
pop
in
shl
xchg
bound
xor
stos
add
fwait
enter
jl
dec
dec
dec
adc
imul
notb
mov
mov
lahf
xor
xchg
push
xchg
clc
xchg
xchg
flds
repz
jle
adc
push
sbb
stos
data16
cmpsl
fistps
rcr
addl
leave
jae,pt
push
xchg
rcrw
mov
push
xor
xor
inc
and
or
mov
js
out
ss
inc
inc
sub
movsb
mov
add
or
push
test
mov
xchg
adc
faddl
fidivs
mov
lahf
mov
xor
add
mov
jmp
inc
lods
outsb
mov
or
and
push
test
outsl
lcall
adcb
adc
sti
dec
fdivrs
xchg
xlat
inc
mov
pop
mov
push
add
movl
movl
jmp
cmc
push
cmpsb
decl
mov
icebp
cmp
jnp
mov
clc
adc
add
xchg
in
fildl
xor
xchg
xor
jb
jne
divl
repz
xchg
sub
sub
int
int
sbb
push
aaa
rorb
test
xchg
cld
mov
and
xchg
fsubrl
dec
icebp
dec
lret
pop
adc
enter
fidivl
adc
xchg
add
sti
divl
int
mov
mov
lahf
jne
inc
pop
ja
rorb
subb
or
mov
imull
test
dec
adc
add
mov
ffree
pushf
mov
sbb
and
push
cmc
dec
mov
jmp
js
ljmp
mov
sbb
push
push
in
pop
mov
pop
ret
xor
push
cmp
push
jno
hlt
cmp
pop
repnz
pusha
add
mov
inc
dec
bound
mov
xor
jnp
cltd
xchg
ds
ret
movsb
cmp
push
pushf
adc
imul
sub
pop
jb
xor
imul
cmpsl
jb
dec
pop
and
xchg
cmp
dec
sbb
ja
dec
mov
call
je
and
and
je
add
cmp
mov
lods
fld
inc
sub
or
mov
push
je
pop
push
and
cmp
adc
imul
hlt
add
mov
fcmovu
mov
sbb
inc
pop
and
movsl
adc
or
mov
pop
inc
stc
inc
stos
xchg
movb
movsl
mov
sbb
scas
xor
or
mov
xchg
scas
inc
xchg
xor
sbb
lods
xchg
add
xor
adc
fcmovb
mov
inc
dec
mov
lcall
mov
dec
cmpsl
lahf
xchg
insb
mov
pop
push
insb
out
outsl
adc
mov
jno
daa
fcoms
xchg
pop
cmp
movsb
repz
imul
loop
jne
cmp
in
rcrl
arpl
sbb
mov
and
jmp
pop
call
pop
jle
enter
loopne
mov
xor
leave
dec
jb
jbe
xchg
bound
xchg
mov
outsl
xchg
into
push
cmp
pop
repnz
mov
cli
into
mov
cmp
jns
jge
fbld
jbe
jge
ret
jae
mov
xchg
cmp
cld
int3
ja
add
xchg
insl
xor
les
cmp
out
pop
mov
mov
lahf
test
jmp
mov
xchg
lahf
out
sbb
into
subl
scas
jns
cs
xor
dec
popf
lods
cmp
jb
pop
pop
pop
xchg
pop
lret
cwtl
shl
outsb
adc
mov
insl
push
faddp
xor
mov
or
pop
xor
sub
sti
ret
pop
test
xchg
cs
lods
mov
adc
mov
push
sbb
out
int
in
nop
xor
push
pmuludq
sahf
cmp
sub
int3
push
and
pop
jg
ss
iret
sbb
mov
and
outsb
jns
or
and
insl
pop
jno
or
pop
mov
shlb
adc
or
in
cmp
sbb
addr16
push
or
inc
jno
enter
xchg
and
stc
jge
lret
popa
xchg
or
or
mov
and
dec
or
loopne
nop
sub
rorb
or
jnp
mov
ret
and
cld
mov
xorl
inc
pop
pop
mov
sub
out
push
fdiv
out
mov
data16
imul
push
ja
push
pop
adc
das
and
pop
jge
test
or
push
ja
adc
push
mov
ds
jne,pt
push
movsb
psrlw
or
xchg
inc
xor
icebp
sti
insb
and
inc
in
push
add
mov
mov
add
or
imul
mov
xor
mov
sub
mov
add
mov
imul
mov
add
add
and
mov
mov
xor
sub
mov
mov
mov
mov
jmp
aam
push
dec
push
or
inc
notb
adc
and
clc
adc
mov
insl
jle
xor
sbb
mov
add
jecxz
mov
ja
adc
or
in
pop
xor
mov
scas
sbb
ja
lret
dec
jno
and
cmp
clc
mov
add
xor
pop
loope
mov
adc
jno
pop
pop
adc
jge
xor
addr16
mov
test
pusha
adc
out
or
cltd
shrl
mov
adc
push
and
push
fbstp
pop
movsl
inc
popf
movsb
adc
in
jo
and
sarl
mov
arpl
mov
sub
js
sub
loopne
cmpsl
pop
jl
daa
popa
loopne
add
ss
xchg
hlt
mov
lock
add
aas
outsl
pop
ja
mov
out
xchg
outsl
scas
push
cmpsl
addr16
popa
and
xor
test
cltd
loope
gs
testb
mov
mov
push
test
sbb
movsl
idivb
ffreep
sub
test
add
and
add
fmul
mov
enter
es
loopne
xchg
roll
push
cltd
mov
adc
lods
cltd
imul
inc
mov
imul
jo
pop
and
xor
scas
xchg
jl
sbb
cmp
lds
add
stos
test
ja
pop
pop
mov
sub
adc
push
pusha
sbb
and
leave
lods
nop
outsl
outsb
push
stos
cmp
jle
push
pusha
mov
mov
sub
aaa
movsl
push
lods
and
inc
or
ss
shl
xchg
mov
and
mov
ja
das
sub
fcompl
fs
loop
sbb
xchg
adcb
dec
mov
outsb
add
hlt
cmp
fs
andb
rclb
in
loopne
xchg
insb
stos
leave
xchg
jnp
add
in
mov
sbb
gs
outsl
aas
pop
dec
rcrl
push
dec
xor
dec
add
repz
push
push
fwait
fs
outsl
fbld
pusha
enter
inc
push
call
sahf
mov
arpl
fwait
adc
into
fwait
lea
imul
xor
hlt
cmp
ja
fildll
adc
popf
xlat
inc
sbb
sub
dec
stc
dec
push
fdivrs
cld
aas
mov
out
aaa
xor
mov
add
inc
or
fnstsw
push
push
icebp
mov
imul
mov
daa
and
xchg
sbb
and
loope
pop
dec
inc
mov
cmpb
in
xchg
popa
dec
mov
push
ja
leave
aas
pop
es
fildl
fcomp
jno
xlat
pop
pop
or
cmpsb
inc
pop
rorl
adc
fisubs
test
cmp
imul
mov
outsb
pusha
add
jne
out
nop
test
out
cmp
cltd
add
std
bound
out
ret
dec
mov
cmp
xchg
mov
in
sub
and
ret
push
mov
mov
in
pop
dec
push
neg
ret
xchg
cld
xor
lret
clc
mov
cmp
inc
jle
dec
stc
out
lock
cwtl
inc
dec
hlt
mov
xor
inc
jns
lock
aas
mov
fisttpl
xor
pop
mov
jmp
ljmp
mov
sbb
mov
inc
test
add
or
mov
mov
loope
es
cli
dec
and
xor
addr16
es
mov
rclb
jmp
mov
pop
mov
inc
clc
xchg
data16
mov
es
mov
aaa
adc
fcomps
mov
jecxz
movsl
inc
adc
lret
mov
insb
sub
inc
push
divb
dec
int3
or
lahf
and
test
jb
mov
mov
xor
imul
mov
sub
jmp
xor
in
mov
leave
jbe
xchg
sbb
test
xchg
cli
adc
scas
adc
inc
popa
mov
push
mov
push
sub
arpl
mov
leave
xchg
fcmovnb
adcb
testb
sub
jae
mov
inc
push
mov
test
les
inc
mov
rcrb
cmpsl
inc
movsl
je
scas
sbb
mul
inc
shlb
pop
jne
in
lods
dec
add
test
das
inc
mov
icebp
add
aam
cmp
pop
das
dec
int3
xor
or
mov
rcrl
scas
add
cmp
stos
sbb
scas
inc
subl
notb
rorb
add
fcoms
push
push
outsl
loopne
jo
jl
pop
ret
mov
gs
push
dec
mov
cli
ljmp
inc
ds
mov
and
popa
xchg
leave
xchg
orl
xor
inc
fucomi
or
xchg
and
sub
pop
cmp
add
xchg
mov
lods
int3
cmp
inc
push
cmp
cmpsl
or
dec
mov
jns
mov
fxch
in
jp
cmc
and
shlb
pop
sbb
cmp
dec
and
mov
sbb
or
testl
cltd
popf
mulb
mov
clc
sbb
imul
mov
into
sbb
sub
mov
pop
es
inc
sub
shrl
xor
fisubs
add
je
cltd
cmp
jecxz
dec
sbb
mov
cwtl
repnz
dec
repnz
pop
jge
imul
aad
rcrb
push
inc
xchg
loopne
stos
pop
cwtl
test
out
push
ficompl
daa
std
loop
or
stos
xchg
repnz
ds
shl
pop
fisubs
dec
inc
pop
sub
sub
cmp
dec
addb
les
and
loopne
pop
and
push
push
dec
push
test
sahf
fcmovnu
mov
call
stos
ror
lock
jb
mov
jbe
out
lret
stos
lret
adc
popa
push
mov
aaa
shr
mov
roll
mov
out
into
xchg
pop
stos
pushl
cmpsl
push
mov
mov
adc
dec
pop
mov
fs
mov
sub
fnstsw
gs
lods
cmpsb
mov
mov
push
inc
aaa
fldl
sub
cld
call
or
test
adc
push
add
adc
xchg
adc
out
mov
out
cltd
add
repz
inc
xchg
xchg
int3
scas
cmpb
dec
sub
out
test
jbe
sbb
jo
jne
push
push
in
add
clc
mov
push
cmp
stc
mov
mov
pusha
inc
push
sub
lret
mov
mov
mov
aaa
aam
faddl
popf
or
sbb
test
inc
fstps
cs
repnz
cmc
pop
pop
pop
push
lret
es
dec
call
xor
stc
cmp
mov
lods
lds
gs
xchg
inc
mov
in
pop
int3
scas
xor
lods
repz
in
jg
xchg
dec
mov
sbbb
jge
xchg
mov
dec
pop
pusha
and
mov
sbb
pop
test
imul
ret
lods
inc
mov
sub
xchg
jnp
and
fdivr
sbb
add
pop
fisubl
ficoml
popa
imul
dec
movsl
cli
xlat
mov
jne
aaa
pushf
xorb
jg
mov
fs
scas
sub
cmpsb
and
fnstsw
jne
in
test
mov
pusha
xor
xchg
inc
jle
pusha
push
push
insb
push
loope
mov
sbb
lret
sbb
xlat
setg
or
cltd
mov
xchg
addb
out
in
xor
cmp
das
mov
adc
daa
test
push
add
mov
fiadds
add
decl
cmp
incl
add
add
mov
and
xor
cmp
jne
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
jmp
lret
fildll
sbb
cmp
sub
xchg
cli
adc
add
fwait
lahf
rcr
lds
pop
or
out
add
nop
mov
pop
mov
fdivl
in
insl
mov
jl
mov
jg
xchg
jns
push
jle
jecxz
or
jno
out
mov
int3
or
pushf
scas
outsb
lock
imul
cmp
data16
cmp
mov
bound
notl
adc
aas
and
xor
dec
push
cs
mov
repz
fdiv
or
orb
dec
push
pop
fwait
and
push
pop
fsubrl
cltd
repz
mov
push
aas
hlt
and
leave
or
push
stos
outsl
jp
shrl
or
push
xor
into
rorl
popf
insb
call
jp
mov
repz
sub
push
repz
cmp
shll
fidivl
lret
iret
stc
adc
fwait
sbb
or
out
cmp
push
pop
mov
loopne
roll
mov
in
jl
rclb
fs
cld
stos
mov
dec
fidivl
mov
bound
es
clc
scas
or
pop
loop
orb
lock
lahf
mov
jb
fwait
arpl
lds
cmpsl
sub
shrl
mov
cmp
pop
divl
gs
inc
mov
lods
cmp
test
sarb
sub
lret
call
ds
sbb
loopne
mov
mov
xchg
mov
decl
notl
cwtl
adc
das
inc
inc
jg
ret
ret
sti
jg
push
inc
cmp
nop
cmp
xor
mov
pop
mov
ss
inc
outsb
and
pushw
jp
mov
xor
sbb
push
in
mov
jno
mov
sbb
movl
sahf
jecxz
mov
sub
jge
mov
mov
xchg
add
sahf
es
sub
jmp
dec
jle
mov
xchg
sbb
pop
scas
imul
mov
add
sub
aam
or
inc
scas
jne
repnz
push
jnp
fldcw
push
movsl
jnp
mov
psrlw
push
dec
mov
daa
mov
and
push
stos
mov
pusha
je
push
movl
jne
mov
sub
mov
push
insl
dec
insl
and
test
fcomps
mov
xchg
popf
mov
cmp
pusha
sub
ss
mov
out
popa
cltd
or
scas
aam
pop
scas
jne
jne
cmp
test
bound
dec
jnp
daa
jo
lds
movsl
and
in
mov
es
xor
push
jnp
ror
mov
add
repz
out
pop
pop
repnz
cltd
inc
and
je
in
jbe
jmp
insb
lcall
rcrl
sar
call
adc
xor
dec
ss
xchg
push
insb
jb
cmc
mov
push
xor
aad
jnp
sub
or
aaa
lret
andb
push
addr16
mov
popa
scas
lock
dec
out
in
popa
pop
lods
out
fdivl
dec
test
add
jmp
jl
mov
adc
loop
sbb
sbb
inc
dec
adc
mov
es
and
sbb
xor
rcrl
mov
mov
sbb
hlt
push
movsl
pop
fcoml
fcmovnu
pop
cld
pop
in
out
lds
outsb
aam
aad
fwait
loop
pushf
lock
lahf
out
mov
adc
jne
mov
hlt
mov
mov
adc
imull
test
xor
cmpsb
aaa
es
jnp
jne
popa
and
fsubrs
adc
incl
in
cmp
ret
scas
stos
inc
inc
out
xor
xor
lds
inc
cld
dec
inc
mov
mov
lret
sbb
enter
ja
jnp
imul
pop
dec
aad
pop
cmp
sbb
xchg
xchg
pop
xchg
xchg
fildll
inc
xchg
rorl
inc
aam
dec
fdivs
shl
icebp
mov
mov
xor
jmp
movl
movl
jmp
stos
lods
movb
lods
adc
xchg
out
adc
insb
fwait
jo
pop
and
popa
push
jle
mov
xchg
mov
push
push
jg
sub
imul
lret
cmp
mov
stos
lods
imul
inc
jle
and
ficomps
shr
in
out
ds
inc
loop
neg
add
mov
fildl
out
int3
and
out
int
mov
mov
push
pop
push
mov
lea
jg
adc
fldenv
cmp
sub
and
imul
mov
cmp
icebp
pop
jg
jp
int
in
xor
outsl
cmp
hlt
sar
jle
sub
mov
jmp
pusha
ret
mov
lods
xchg
add
sbb
push
scas
pop
ljmp
cmp
sbbb
popf
adc
pop
daa
or
out
mov
js
adc
adc
push
int3
mov
dec
insb
cli
or
pop
sub
xchg
adcb
jmp
sub
imul
bound
adc
xchg
mov
int
jo
aaa
lods
notl
jmp
push
push
add
not
pop
jg
sarb
cmpsb
jno
dec
cmp
dec
jne
out
stos
mov
pop
addl
xchg
mov
fs
leave
and
scas
icebp
stos
push
clc
adc
sub
aas
or
xor
pop
mov
popf
mov
inc
outsl
out
inc
push
push
mov
mov
shlb
pop
pop
xchg
inc
sbb
adc
movsl
in
in
pop
je
mov
xchg
adc
dec
inc
jnp
jnp
pop
xor
mov
scas
outsl
mov
dec
and
mov
rclb
out
jecxz
xor
movsl
adc
pop
and
stc
andb
jmp
jbe
inc
inc
ret
jb,pn
jge
std
idivl
jnp
aam
cmp
xchg
fsubr
nop
sbb
jge
push
adc
addb
test
pop
call
lcall
jl
pop
ret
xorl
sub
sub
inc
scas
cmp
mov
outsl
and
int3
in
mov
lea
mov
shrb
pop
push
sub
jl
bound
mov
stos
and
dec
nop
pop
in
add
jp
xchg
mov
repnz
adc
ret
inc
call
and
pop
cmp
test
lods
xchg
sbb
dec
push
subb
je
mov
xchg
and
int
in
adc
pop
das
sbb
sbb
in
inc
adc
fcompl
leave
cs
push
cmp
and
jmp
jle
sub
jnp
sub
hlt
aaa
dec
jae
fisttpll
dec
out
and
sbb
loop
and
jne
inc
fimuls
add
xchg
cwtl
aaa
in
push
jb
fucomip
test
pop
mov
int3
xchg
stos
jg
lcall
sub
gs
or
dec
jno
imul
dec
inc
out
shrb
jmp
xor
or
and
adc
ds
push
out
sbb
rorl
test
jmp
insb
lea
and
pop
pop
adc
jb
xor
mov
std
testl
sbb
adc
pop
dec
mov
lret
repz
ja
out
lret
les
shrl
cmp
bound
movsb
and
lds
cs
lcall
repnz
and
push
adc
hlt
push
lcall
addr16
or
cwtl
les
mov
sbb
cs
cmpsb
add
std
fstpt
inc
nop
add
fwait
dec
add
movl
movl
movl
movl
mov
mov
jmp
and
mov
out
jno
mov
push
xchg
in
adc
es
cmp
mov
inc
pushf
cmp
add
xchg
sti
mov
insb
mov
dec
data16
mov
fisubs
xor
pop
mov
fldt
xchg
test
sbb
xor
aas
adc
gs
test
adc
js
into
lahf
jno
out
ror
rcll
scas
out
sub
pop
dec
mov
sbb
push
inc
mov
div
and
out
cmp
mov
repnz
or
in
fimuls
cmp
repnz
sub
movsb
mov
sbb
in
mov
or
hlt
stc
in
test
fcompl
stos
cmp
aaa
fists
pop
popf
rclb
jg
ror
leave
mov
leave
xor
inc
inc
mov
mov
cmpsb
repz
in
mov
clc
aas
mov
sub
adcb
pushf
push
push
mov
dec
cmp
enter
inc
insl
push
fnstcw
cmp
arpl
jl
in
cmpl
xchg
out
adc
cmp
dec
mov
stc
pusha
enter
pop
insb
fdivrl
movsl
xchg
sub
fs
mov
stos
add
fwait
sub
test
cmp
xlat
mov
mov
sbb
aaa
and
sub
stos
lcall
adc
cmpsb
cmp
out
pop
loop
push
cmp
cmp
cmp
fwait
push
movsb
xchg
lcall
repz
push
in
into
cltd
jns
xor
lret
scas
pushf
dec
fwait
test
mov
stc
adc
and
mov
adc
push
dec
inc
enter
pop
rclb
xorl
pop
push
mov
push
cli
mov
out
das
xchg
xchg
and
add
lahf
fcomi
push
dec
jo
je
pop
into
mov
mov
cltd
into
aam
mov
es
adc
jo
mov
pop
fwait
pop
xor
pusha
rcll
outsb
pop
push
ret
movsb
mov
jne
int3
ss
mov
mov
inc
loop
xor
enter
and
lods
mov
ljmp
sbb
or
inc
out
push
out
add
out
cmpsl
lds
hlt
sbb
ror
fsubr
movb
jnp
lods
xor
das
test
pop
lds
sbbl
rcll
sbb
sbb
mov
add
push
loopne
rcrb
or
dec
sub
adc
xor
mov
je
or
lock
and
int3
inc
lods
enter
outsb
cmpl
jp
aam
iret
mov
xor
enter
pop
das
fcmove
xlat
cld
movsl
hlt
mov
repz
jecxz
xor
fwait
mov
and
mov
mov
mov
xorl
mov
inc
pushf
aas
and
adc
cld
push
mov
jnp
fs
push
pusha
imul
and
lcall
lods
sub
sahf
mov
outsb
and
test
dec
push
or
dec
cld
lock
push
mov
xor
nop
mov
out
filds
arpl
mov
lret
and
sub
mov
das
sub
mov
pop
jecxz
loope
sub
in
cli
push
add
xor
scas
pop
sbb
inc
daa
cwtl
fiaddl
das
and
or
jg
sub
pop
mov
pop
mov
mov
out
and
out
mov
push
sbb
movsl
xor
fidivs
and
xor
fmulp
pop
and
jns
rorl
jp
add
xor
mov
jmp
out
mov
xchg
stc
mov
adc
adc
or
adc
mov
mov
test
add
pop
push
jecxz
or
add
cmp
fisttps
or
pop
jns
adc
push
fldl
arpl
and
sub
rcr
orl
les
out
xor
mov
sub
inc
icebp
test
jb
and
dec
mov
sub
add
pop
sti
popf
popf
fldcw
pop
jge
mov
sub
out
in
outsl
and
mov
push
xchg
popf
cmp
ljmp
inc
mov
fdivs
lods
cmpsl
stos
lcall
cmp
push
and
pop
rcll
sbb
xchg
mov
pop
xchg
sbb
lret
xlat
jp
stos
arpl
loopne
sahf
pavgb
cld
mov
scas
das
sbb
cld
aaa
cld
movsb
jne
xlat
inc
adc
pop
push
daa
push
jmp
mov
and
adc
icebp
les
in
data16
das
add
je
adc
adc
aaa
inc
xchg
xor
mov
lods
pop
mov
jp
cmpsb
xchg
inc
aaa
fisubrs
mov
mov
arpl
xorl
mov
cmpsb
sub
iret
test
dec
xchg
xchg
lock
cmp
lea
mov
jne
push
cwtl
xor
fmull
pop
jg
push
xchg
inc
mov
cli
xlat
pop
aam
push
addb
xor
xor
bound
pop
es
out
sbb
stos
repnz
ja
shl
jg
mov
mov
mov
loope
and
stos
loop
xchg
sti
mov
shll
dec
subl
clc
jns
inc
mov
lods
fnstenv
das
push
int3
sbb
mov
mov
sbb
cmpsl
adc
cmp
nop
loopne
sbb
call
mov
das
xor
in
push
mov
stc
mov
pop
or
mov
and
and
push
cwtl
aaa
das
nop
sbb
inc
push
mov
enter
cwtl
fneni(8087
hlt
push
mov
iret
pop
jl
out
cmc
stos
popf
mov
xor
fidivs
push
cmp
or
add
or
movb
xchg
inc
fidivl
jnp
dec
mov
cmp
lds
xor
mov
insl
xchg
movsl
into
pop
mov
xor
out
inc
icebp
js
pop
sub
fwait
loopne
pop
jg
pop
push
add
test
cmpsb
and
xchg
cmp
push
out
xor
loop
popa
pop
mov
out
push
sbb
adc
mov
mov
out
aaa
fists
sti
decb
mov
enter
xchg
cs
arpl
jnp
mov
xchg
int
push
inc
aam
mov
insl
xor
cmpsl
lret
sub
sub
into
push
ljmp
repz
dec
scas
adc
sbb
adc
out
or
sub
jnp
mov
jg
and
xlat
jp
sub
cmp
push
add
fidivs
std
test
imul
ds
add
imul
inc
push
popa
lcall
ja
mov
je
cmp
imul
pop
xor
icebp
fstl
xchg
dec
cli
scas
popf
arpl
call
lret
sub
push
xor
xlat
jmp
xchg
hlt
icebp
cmp
into
sbb
ret
std
notl
jl
dec
jl
insb
xchg
dec
dec
fldl
and
fwait
daa
xchg
cmpsb
mov
loopne
jle
pop
gs
push
xor
lods
adc
nop
dec
sub
push
out
add
adc
pop
fistpl
jmp
jecxz
scas
pop
dec
xchg
mov
sub
call
push
jo
add
mov
cli
sub
outsb
sahf
ret
mov
dec
dec
xor
mov
std
sar
mov
adc
pushl
mov
sub
mov
mov
mov
add
or
xor
div
mov
mov
imul
add
jmp
and
xor
lods
pop
test
test
cli
adc
pop
test
std
fisttpll
mov
out
test
pop
cmp
jp
jnp
or
inc
and
mov
fsubp
lods
je
mov
loope
shll
xchg
lea
cltd
pop
adc
cmpsb
test
int3
push
xchg
or
push
jne
data16
lret
mulb
int3
sbb
bound
xor
bound
enter
jno
jp
mov
rcrl
lcall
cmpl
stos
cwtl
adc
xchg
insb
lret
push
test
lcall
cmp
out
insl
sarl
test
push
xchg
pop
xor
sbb
add
dec
mov
pushf
and
jle
mov
scas
arpl
and
testb
out
sub
loop
lods
scas
push
cmp
notl
add
jmp
jmp
cld
add
xchg
andl
loop
movsl
pop
xor
in
ret
js
dec
cs
fidivrl
mov
adc
cmp
loopne
and
cmc
and
rcr
xchg
aam
jb
push
es
or
cmp
xchg
or
add
ljmp
ficoml
cmp
gs
cli
addr16
movsl
push
ds
mov
mov
inc
test
rolb
movsl
mov
jmp
or
cmp
jp
sub
adc
mov
xchg
cmpsl
in
or
cltd
pop
bound
adc
mov
inc
adc
sahf
into
xchg
lahf
lods
push
sub
orl
fldenv
pusha
fldcw
adc
mov
push
popf
sbb
mov
mov
js
loopne
clc
pop
dec
popf
scas
sti
loopne
enter
insb
dec
pop
jmp
xchg
mov
daa
subl
or
xor
cmc
lods
cmp
ja
add
pushf
cmc
lret
sbb
stos
push
inc
xlat
insb
cmpsl
test
push
lahf
addb
push
jo
xchg
icebp
lods
pop
sbb
cwtl
pop
sbb
dec
sbb
loope
test
insb
xchg
mov
mov
jbe
fsubrs
and
or
xchg
and
clc
scas
mov
mov
cmpsb
das
jns
clc
in
bound
push
dec
cld
xchg
pop
subl
fcomp
jns
or
out
call
pop
inc
shlb
mov
and
mov
and
addr16
or
ret
or
daa
pop
repz
lea
int
xchg
mov
or
fs
adc
and
insb
xor
xor
ss
movsb
dec
sub
sub
lea
inc
andl
xlat
ret
sahf
push
cs
fs
jp
and
ret
jo
xor
pop
cltd
call
cmp
dec
mov
lds
pop
adc
stos
loope
or
jb
push
pop
xor
popa
fildl
add
sub
add
outsb
push
fiaddl
scas
imul
movsl
push
sti
mov
add
mov
scas
ja
movsb
aam
je
lods
jb
in
gs
imul
sbb
jns
mov
mov
fsubs
inc
flds
sbb
jno
push
lret
inc
cmp
hlt
jnp
dec
mov
pushf
mov
or
and
fsubrs
in
inc
adc
and
mov
lods
pop
push
outsb
in
ds
inc
and
add
iret
rcrb
cmpb
shlb
push
pusha
fldenv
xor
xchg
bound
mov
insl
cs
ret
lcall
dec
xchg
loope
ja
cli
sub
cmpsl
mov
dec
pop
push
adc
push
pop
xchg
repnz
insb
mov
out
inc
push
jge
aaa
sub
sub
xor
bound
test
sbb
and
jl
inc
aaa
hlt
rcrb
and
inc
or
xor
sub
mov
mov
mov
mov
and
lea
mov
mov
lea
mov
and
add
cmp
jb
movl
movl
movl
jmp
flds
and
rorb
adc
lds
clc
adc
adc
mov
rcrl
mov
cmp
in
sbb
out
jge
and
pusha
into
inc
and
pop
pop
ds
std
daa
inc
rcll
mov
movsl
rorb
add
cmc
dec
adcb
fwait
mov
fisubl
sbb
push
mov
aaa
dec
add
mov
push
mov
das
xor
pop
push
call
gs
mov
cmc
xor
mov
aas
or
sahf
and
mov
mov
mov
mov
jae
data16
mov
mov
dec
pop
adc
fsubr
int3
push
ljmp
mov
out
std
ret
int
fidivrl
shlb
fldt
adc
sbb
fstp
jne
shrb
inc
mov
pop
ja
ret
jge
mov
or
cld
movsb
hlt
enter
or
sub
fstpl
in
mov
int3
adc
pop
fld
scas
sub
inc
fcomps
push
ret
push
jmp
dec
sbb
pop
sbb
jno
shlb
mov
cmpsl
jb
movb
mov
data16
add
mov
xchg
pop
cmp
iret
pusha
movsb
in
jo
mov
mov
test
jecxz
pop
cs
sub
out
fnstenv
push
sub
xor
test
or
frstor
xchg
lret
lret
inc
pushf
or
push
bound
ja
jno
jmp
fdivrp
sub
adc
mov
xor
cs
dec
mov
xor
pop
jmp
sbb
dec
add
adc
add
mov
mov
mov
in
sub
and
adc
cmp
cmp
fldl
lds
mov
sbb
inc
mov
cmp
xchg
sti
jnp
xor
lret
jle
pusha
addr16
jno
ret
ljmp
mov
jno
int
popf
cmp
out
push
mov
ss
mov
in
rcrl
mov
xor
ret
roll
test
mov
and
dec
pop
mov
daa
or
jecxz
pop
cmp
stc
sbb
stc
gs
ljmp
push
mov
fdiv
fadd
push
ss
adc
jns
sbb
or
imul
mov
fsubrl
push
mov
xchg
outsl
cltd
nop
enter
cmc
lret
add
movsl
or
jp
mov
stc
or
jl
pop
mov
mov
das
mov
cmp
aas
push
clc
std
mov
dec
or
push
pop
shl
lahf
mov
xchg
lret
push
xchg
scas
rclb
icebp
mov
push
ss
scas
cmp
call
mov
jae
rcrl
or
cld
adc
push
out
das
sbb
jmp
mov
inc
jne
adc
add
cmp
sbb
dec
aaa
dec
stc
pop
imul
pushf
jecxz
out
jle
sbb
out
lds
popf
xor
enter
push
aaa
icebp
xor
fwait
shll
add
dec
pop
lcall
cwtl
add
lods
sub
add
sbb
ljmp
add
cmp
in
mov
or
ds
mov
popf
add
cmc
les
js
ds
mov
xlat
mov
and
test
adc
inc
push
pop
gs
hlt
sub
mov
bound
adc
cmc
xorb
mov
push
sub
mov
jecxz
and
dec
cltd
mov
sti
push
into
std
cmp
cld
mov
nop
out
dec
jbe
mov
push
mov
les
xchg
nop
test
call
movl
movl
movl
movl
movl
movl
mov
mov
imul
mov
imul
or
xor
add
xor
mov
mov
jmp
movl
movl
movl
movl
movl
jmp
stc
arpl
push
cmpsl
inc
xchg
add
clc
adc
jbe
xchg
xchg
dec
mov
in
xchg
lods
jbe
or
roll
cmpl
cmp
jg
sub
outsl
aaa
icebp
sub
repz
add
dec
jecxz
jecxz
xor
pop
outsb
push
jge
sbb
xchg
push
add
cwtl
sub
ds
cwtl
sub
gs
mov
mov
fadd
cmp
cmp
sub
or
adc
push
out
and
imul
xchg
inc
ss
cmp
popf
xor
mov
sub
lret
mov
in
js
lea
bnd
jo
add
testl
sub
inc
outsb
hlt
movb
ret
push
jbe
xor
push
into
sbb
dec
push
xchg
mov
cmc
hlt
mov
and
arpl
cld
dec
paddsw
sbb
jecxz
data16
notl
push
negb
rep
movsb
cmp
imul
xor
mov
mov
jo
loope
je
inc
xchg
data16
pop
xchg
outsl
mov
fnstenv
lds
mov
in
push
mov
mov
cmp
push
or
ds
fisttpll
out
frstor
jmp
orl
stos
out
xchg
mov
jo
lds
pop
gs
sub
pop
mov
jl
and
dec
jl
cmp
dec
jle
imul
push
imull
imulb
cltd
dec
roll
inc
pop
repz
jle
jns
dec
loop
or
out
mov
pop
inc
shrb
pop
nop
or
rolb
jno
fstl
stos
xor
ds
dec
andl
in
add
push
or
neg
stos
xchg
and
and
pushf
cmpsl
scas
rcrl
push
xor
xchg
lret
dec
or
inc
lret
mov
mov
dec
push
push
outsl
pop
pop
mov
lock
filds
sub
pushf
cli
enter
xchg
nop
test
mov
fsubrl
cltd
scas
es
rclb
filds
scas
or
push
mov
sbb
sub
std
out
into
loop
dec
fsubs
cltd
sub
shll
pop
and
test
ss
adc
sahf
cld
jecxz
jbe
rclb
fists
repnz
dec
outsl
daa
jp
xchg
add
sahf
gs
adc
push
pop
shr
pop
and
inc
xor
scas
repnz
hlt
int
js
adc
cmp
cmc
shll
mov
add
outsb
cld
sub
bound
repz
xchg
push
xlat
jl
pop
cmp
mov
sarb
lea
icebp
mov
repz
fadds
lea
sbb
push
fsubrp
push
fdivl
addr16
pop
jp
mov
std
into
ss
or
and
mov
in
and
out
jl
in
jae
sbb
notl
xor
mov
add
out
cmp
ret
xor
lahf
jbe
mov
cld
mov
mov
inc
sub
scas
add
pop
cltd
dec
addr16
mov
idivb
rclb
mov
xor
jnp
loopne
sarb
mov
in
fs
std
loopne
repz
iret
es
inc
out
inc
fsubrl
ljmp
mov
imul
insl
loope
jle
movsl
xor
push
push
in
or
cld
sar
faddl
mov
lods
mov
setnp
xchg
mov
aad
fwait
cmpsl
cmc
add
jno
adc
xor
shll
cmpsb
inc
shrb
je
sub
sub
out
pop
jg
sar
hlt
sub
imul
dec
cmpl
mov
add
or
test
outsl
std
sub
pop
dec
cmp
add
inc
rolb
cmp
int3
inc
adc
add
inc
enter
add
int3
and
mov
or
mov
mov
xor
xor
div
mov
jmp
les
mov
xchg
sarl
xchg
adc
add
sarl
xor
aas
or
jecxz
arpl
jmp
inc
pop
in
arpl
pop
fcmovnb
dec
sbb
orb
idivb
fsubp
aaa
pop
cmp
xor
repnz
lds
fnsave
popf
pop
in
out
fidivl
xor
in
mov
scas
inc
pop
mov
sub
rorl
adc
cmc
xor
stc
xor
jmp
cmpsl
mov
mov
in
xchg
ja
repz
jp
dec
xchg
cmp
dec
lods
pop
pop
call
inc
pop
lret
nop
out
xchg
movsb
jecxz
sarb
sub
inc
push
sub
jo
out
xchg
bound
push
arpl
push
scas
adc
and
push
xchg
jle
jb
test
sbb
pusha
fbld
sbb
mov
iret
adc
fadd
xchg
dec
inc
movsb
popf
push
push
rolb
dec
push
jne
js
sbb
add
repz
inc
jbe
pusha
mov
dec
out
add
mov
sub
push
and
mov
hlt
pop
sub
dec
xlat
ss
or
dec
pop
movsl
stc
daa
or
and
pop
or
lahf
mov
mov
imul
add
jb
mov
pop
jo
pop
sbb
repnz
inc
xor
mov
sbbl
sub
push
dec
lahf
mov
into
bound
lds
gs
fidivl
sbb
addb
nop
test
arpl
lahf
out
xor
add
loop
mov
test
cmp
adc
imull
push
inc
add
hlt
int
jge
and
dec
and
mov
mov
mov
in
fldcw
arpl
cmp
xor
cmpsl
push
movsb
jno
or
sbb
or
and
push
clc
and
inc
add
fmull
sbb
cmp
push
jb
in
mov
and
or
sub
sar
movsl
shl
sub
adc
push
hlt
sub
jmp
sbb
pop
cli
sub
cmp
mov
inc
pop
jb
jnp
adc
data16
mov
loope
xor
pop
pushf
out
std
bound
into
mov
cltd
sarb
or
int
dec
pop
push
adc
cmpsl
jns
mov
mov
or
xor
ret
sti
adc
nop
push
xchg
leave
xchg
leave
mov
and
imul
push
sub
pop
or
cmp
push
mov
or
out
or
jp
lods
out
cwtl
cmpsl
mov
lcall
sbb
imul
cmp
clc
lock
and
xor
jmp
gs
mov
fistps
fmull
arpl
adc
cmp
shll
sbb
lret
pop
nop
push
fistps
xchg
das
movsl
mov
clc
enter
imul
mov
sub
mov
ljmp
test
or
push
test
xor
std
iret
adc
aam
pop
xor
cli
mov
mov
ljmp
cmp
data16
and
outsb
insl
push
bound
das
push
mov
jge
in
mov
test
push
push
loope
cmp
add
jo
mov
mov
or
ficompl
js
in
mov
dec
in
sbb
data16
jb
mov
cltd
push
cmp
pop
repnz
jl
sub
or
push
pop
out
pop
cmp
prefetch
je
int
outsb
shll
and
xor
je
sub
or
js
adc
mov
xor
dec
mov
add
mov
adc
xor
notl
xlat
adc
mov
add
lea
mov
mov
mov
and
or
jmp
mov
cmp
sbb
push
dec
adc
lds
mov
adc
fisubl
add
and
stc
mov
jno
adc
xlat
call
stos
xchg
mov
mov
js
or
dec
pop
scas
inc
fildll
test
lods
mov
mov
mov
test
dec
pop
adc
movsl
movsl
shlb
lods
xor
jmp
jb
inc
mov
aas
montmul
cmpsb
inc
mov
mov
sub
mov
daa
xlat
cmp
push
daa
push
jne
in
fisubrs
aas
jp
imul
fwait
outsb
cmp
aas
mov
pop
sti
insb
pop
leave
sti
ret
xor
push
sbb
les
rolb
jg
and
xor
pusha
gs
xlat
mov
cld
inc
mov
jp
cmpsl
sub
cli
sbb
loope
mov
cld
cld
xchg
loope
test
jne
pop
pop
shlb
insl
cmp
je
cmp
and
dec
adc
cmp
jmp
int3
insb
mov
mov
add
xor
add
push
pushf
pop
mov
mov
xor
insl
mov
aad
push
adc
push
call
es
ret
lea
cmp
push
dec
shlb
ret
outsl
frstor
push
clc
mov
sbb
sbb
pop
test
daa
push
cmp
xor
or
clc
movzwl
test
jne
or
loop
push
mov
and
dec
or
out
dec
outsb
jb
out
or
mov
les
sar
es
fs
inc
pop
or
mov
mov
fcomp
clc
jbe
shlb
ret
aas
sub
cmp
ficompl
dec
cs
divb
and
fldl
sarl
adc
daa
xchg
jns
shrb
add
and
lods
and
cli
push
lods
adc
mov
stos
mov
adc
adc
popl
jnp
loop
inc
cmp
pop
dec
xchg
mov
sar
out
pusha
idivb
jmp
icebp
int3
sub
in
xchg
arpl
movsb
imul
ss
std
adc
repz
cmp
rcrl
fs
inc
cmp
xchg
in
and
sar
sar
cli
pop
mov
and
ss
mov
hlt
movb
scas
xor
std
mov
movsb
mov
data16
pushf
adc
push
jmp
dec
cmp
adc
loopne
imul
sahf
popf
idivl
mov
dec
inc
fcom
cwtl
mov
loope
cmp
inc
jo
jge
pushf
daa
xor
jp
divb
test
or
scas
lods
pop
mov
xchg
inc
cmp
cmp
mov
fs
push
outsl
xor
test
xchg
xchg
and
aas
jecxz
adc
inc
inc
pushf
adc
cmp
sbb
xchg
or
out
cmp
addb
cmp
cmc
sbb
movsb
xchg
lcall
repz
pop
add
test
imul
jecxz
insl
xor
xchg
add
jnp
and
dec
push
int
cmpsb
add
and
jecxz
imul
imul
jns
sub
jge
add
in
cli
loop
fisubs
in
inc
rolb
data16
rcl
push
inc
push
mov
loop
out
pop
scas
xchg
je
adc
push
xchg
pushf
mov
in
mov
mov
filds
mov
lret
mov
pop
inc
in
int
movsl
xor
out
and
dec
sub
insl
aas
testb
pop
insl
mov
aam
clc
aam
jle
fldl
movsl
fnstsw
mov
outsl
je
sbb
sbb
and
cmc
mov
xchg
iret
es
pushf
cmc
into
inc
lods
lods
mov
xor
js
add
mov
add
xor
mov
sub
mov
mov
mov
mov
mov
mov
add
and
or
xor
add
mov
jmp
in
aad
aad
aam
ret
push
sub
fwait
clc
adc
inc
jmp
into
xor
sahf
movsl
dec
cltd
int
je
scas
cmc
jecxz
decb
sar
cmp
mov
or
inc
xchg
sahf
rolb
xor
adc
fwait
scas
mov
shlb
js
std
adc
or
icebp
enter
push
je
rol
cmpsb
mov
imulb
std
cmpsl
inc
pop
das
and
dec
cmp
push
call
and
and
notl
or
in
sbb
cs
mov
jo
fidivrl
insb
sub
mov
inc
in
push
mov
pusha
fsubrs
pop
ja
xlat
jle
loopne
inc
imul
pop
xchg
arpl
aas
pop
ljmp
sahf
call
hlt
and
adc
lret
sub
xor
leave
repnz
mov
mov
jge
push
add
push
fistpl
or
push
ret
fadds
adcb
mov
mov
xchg
aad
sub
xlat
fldcw
xor
pop
mov
jl
jne
xor
test
pushl
cmp
shll
xchg
aaa
shrl
cli
enter
pop
jno
xchg
mov
dec
nopl
jmp
lea
xchg
jge
mov
mov
fnstenv
adc
jg
pop
xchg
xor
and
test
xchg
orb
mov
adc
xor
cmpsb
rcr
jmp
add
push
iret
xchg
xor
cmp
fs
mov
hlt
adc
loopne
shl
repnz
jp
push
insl
dec
loopne
mov
or
sub
repz
add
test
jns
cld
inc
iret
and
mov
add
nop
mov
adc
inc
loop
adc
dec
sbb
xor
xor
xchg
cld
in
xor
push
lret
xchg
push
xchg
cs
sbb
mov
pop
mov
lea
sub
push
jo
sbb
fsub
negb
sub
or
sub
push
nopl
aad
in
scas
push
outsl
sbb
or
sub
push
cmpsb
mov
insl
movsb
cmp
jle
pop
int
out
iret
sub
and
imul
pop
xchg
mov
sub
pop
mov
sbb
shll
dec
mov
ret
fs
mov
fs
cwtl
mov
sub
andb
mov
cwtl
je
in
cmp
leave
push
xorb
inc
pushl
add
aad
aam
lods
lods
cmp
lods
mov
mov
fcomps
fldt
mov
and
add
sarl
das
dec
pushaw
push
push
or
jo
jle
jae
movsl
mov
sub
mov
cmp
push
lahf
pop
adc
out
xor
cmc
into
jnp
addr16
or
cltd
add
sub
lcall
mov
jle
jo
mov
movsl
shll
sub
push
xchg
mov
jne
lods
pop
xor
add
and
mov
scas
add
gs
aam
adc
rclb
dec
and
insl
sub
hlt
push
cmp
mov
int
cltd
andb
test
cmpb
int
pop
popf
mov
lock
xchg
mov
dec
jns
xor
sbb
mov
repz
fstpt
dec
mov
mov
push
iret
pop
add
popa
mov
outsb
mov
dec
int
test
insl
lcall
loopne
fidivrl
fsubrp
jl
hlt
mov
mov
dec
add
push
popf
call
mov
cmp
imul
jo
int3
gs
enter
jno
incl
inc
or
push
hlt
and
sub
mov
imul
sub
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
push
movl
movl
mov
mov
imul
or
and
xor
jmp
sbb
scas
or
test
rcll
cli
adc
lret
enter
pop
stc
inc
addr16
xchg
jne
pop
movsl
test
pop
add
test
scas
in
shll
mov
out
in
rcrb
pop
push
mov
je
adc
push
pop
push
ljmp
jmp
test
pop
fbstp
or
lret
fiadds
pushf
fnstsw
sbb
and
xchg
push
jae
call
test
clc
adcb
mov
fistps
lea
cmpsl
shrb
mov
adc
pop
or
aad
ds
inc
push
cmp
jbe
sarb
es
addr16
sub
cwtl
adc
pushf
jne
enter
pop
loopne
stos
mov
push
enter
repz
icebp
mov
push
xchg
mov
leave
in
lods
add
or
std
aam
mov
shrb
or
sbb
sbb
fstps
scas
test
test
loopne
inc
push
mov
mov
out
or
xchg
ds
push
leave
popa
stc
mov
push
addl
push
movsl
icebp
lds
and
sub
mov
cmp
and
jno
mov
mov
xor
mov
mov
xlat
lock
imul
jp
fisttps
add
test
add
rcrl
or
sti
mov
int3
cltd
aaa
jno
pop
or
es
pushf
mov
inc
sbb
mov
aad
cmp
movsb
adc
adc
jns
push
movsb
xchg
aas
lahf
mov
out
test
xor
mov
lahf
lock
and
or
mov
lcall
imul
mulb
sbb
jb
mov
jmp
mov
aam
jg
and
inc
dec
sahf
test
test
mov
scas
test
mov
fidivs
addr16
inc
push
jo
jae
fnstcw
add
hlt
sub
xor
cld
add
mul
aam
vshufps
mov
xchg
cmp
sbb
push
xor
cmp
jbe
arpl
icebp
ljmp
jno
jmp
inc
mov
jo
push
stc
sub
fdiv
inc
arpl
insl
mov
int
ficompl
in
lods
in
sub
sub
dec
stc
fnstenv
add
xchg
jg
imulb
sub
test
test
inc
sarb
sbb
fs
stc
mov
push
inc
ficomps
dec
xor
and
fldcw
sbb
repnz
xor
jno
mov
test
addr16
sbb
insl
jecxz
aaa
jns
xor
repnz
sub
cmp
xchg
scas
adc
lods
je
aam
lds
jnp
fmuls
sub
adc
jo
mov
insl
pop
mov
cmp
in
or
sar
mov
loopne,pn
cli
js
lods
mov
mov
jo
pop
cltd
lock
lods
cmp
loopne
cmp
aam
js
push
dec
out
jb
fistpl
mov
int
xchg
sahf
scas
imul
sub
and
test
adc
sub
push
dec
cmpsb
jecxz
fiadds
push
mov
jl
int
dec
imul
stc
fadd
inc
test
ret
push
pop
sub
fcmove
and
jecxz
sbb
push
outsl
loope
push
mov
dec
adc
js
test
test
adc
shlb
inc
repnz
jecxz
sbb
in
inc
fldenv
push
mov
adc
shrb
push
xchg
adc
push
pop
stos
push
sub
lret
hlt
inc
push
mov
sbb
es
stos
rolb
sar
sbb
xchg
mov
test
xchg
dec
jmp
add
cmp
call
jae
push
rorb
mov
jp
les
clc
in
shr
pop
insl
repz
jg
and
xor
aam
mov
adc
in
loop
gs
adc
out
sbb
int3
jnp
adc
mov
mov
or
mov
fisttps
popf
pop
sarl
sahf
add
lcall
pop
enter
das
adcl
fwait
fwait
push
add
add
xor
mov
movl
movl
mov
mov
add
div
mov
or
sub
imul
lea
mov
movl
movl
movl
movl
mov
mov
or
mov
and
mov
or
sub
mov
jmp
stos
mov
adc
jnp
jmp
mov
push
test
xchg
jmp
jecxz
das
xchg
mov
mov
bound
xchg
xchg
push
ljmp
inc
call
pop
shl
outsb
negl
mov
push
mov
in
xor
pop
jp
cwtl
lea
ret
xor
pop
and
cmp
add
dec
mov
stc
xchg
adc
sbb
mov
jle
scas
xor
fisttpll
rclb
data16
pop
aam
out
bound
sub
nop
xor
push
mov
in
lea
cld
mov
add
and
mov
push
je
std
out
ret
sti
sbb
lret
jmp
sbb
call
dec
jbe
push
xor
scas
bnd
xchg
jl
repnz
out
or
cli
jmp
cmp
or
inc
orl
adc
jb
pop
dec
lret
fiadds
rolb
out
dec
mov
inc
dec
dec
out
xor
xchg
and
cmp
pusha
ja
shrl
sarl
and
cli
js
mov
inc
mov
mov
fdiv
pop
aaa
imull
push
mov
stos
fdivrp
mov
scas
pop
push
lods
inc
inc
dec
and
lcall
out
mov
adc
xor
test
insb
push
mov
add
mov
xchg
xchg
addl
in
xchg
inc
push
sbb
rclb
ror
movl
inc
lret
out
daa
cmp
nop
mov
mov
rcrl
or
out
mov
popl
push
pop
add
js
mov
fisubs
punpckhbw
pop
or
in
add
pop
add
or
mov
inc
xlat
and
adc
decl
mov
dec
lds
sarl
sbb
fisttps
call
cwtl
cmp
test
inc
rep
inc
xor
lds
cmp
push
mov
sub
scas
pop
loope
dec
pop
push
push
mov
daa
idiv
stc
push
or
sbbb
mov
in
in
enter
jl
movsb
pop
sahf
cli
sub
idivl
neg
xchg
or
cmp
sbb
enter
cltd
enter
test
fwait
imul
rol
aam
inc
inc
ficoms
fwait
or
inc
or
bnd
push
sub
ja
xchg
pop
es
jmp
bound
add
in
cmpsl
sub
mul
inc
bound
cmc
out
pop
loope
addr16
mov
mov
aas
push
sub
mov
mov
sbb
add
and
dec
mov
aas
mov
xor
inc
and
mov
inc
mov
cmc
sbb
aaa
repz
shrb
test
xchg
call
adcb
iret
xor
test
loopne
xor
mov
dec
movsb
cld
inc
add
adc
in
inc
sbb
nop
out
adc
jae
xchg
push
mov
mov
mov
aad
das
sub
mov
inc
adc
push
pop
imul
daa
loope
clc
mov
mov
repnz
pop
pop
fwait
xchg
jge
mov
lcall
lcall
daa
xchg
stos
push
mov
shll
repnz
shlb
or
das
jnp
push
stos
test
add
or
xchg
scas
rcrl
jb
lods
jbe
es
jne
pop
inc
setns
jb
sub
shll
testb
xor
xchg
xlat
or
jle
ds
mov
clc
stos
push
leave
popa
xchg
in
push
push
sbb
negl
popf
jno
mov
jbe
add
repz
sub
sbb
iret
addr16
outsl
nop
and
mov
sbb
xchg
add
xor
jo
jmp
lods
loop
dec
add
mov
popf
ficompl
enter
sbb
adc
xlat
icebp
xchg
pushf
mov
push
test
imul
in
add
adc
cmpsl
jge
mov
xchg
push
lahf
pop
out
mov
xchg
mov
sub
stos
sub
mov
mov
and
icebp
mov
loope
les
fwait
icebp
inc
mov
sub
dec
push
jle
pop
out
enter
dec
mov
mov
lods
std
xlat
movl
movl
mov
mov
mov
mov
or
mov
imul
and
or
and
xor
mov
jmp
jmp
pop
push
sbb
mov
test
ja
adc
adc
inc
in
and
out
inc
jp
mov
xor
insl
daa
and
fsts
jb
out
pop
movsb
or
mov
cmp
nop
cltd
mov
push
fadd
and
jle
out
or
pusha
lea
stos
mov
push
outsb
iret
cmpsl
fldenv
jmp
mov
sahf
insb
fs
add
mov
pushf
mov
mov
es
pushf
out
fiadds
dec
aam
add
sub
ljmp
xor
mov
cltd
jle
cld
xchg
xchg
pop
lahf
jae
jnp
cltd
mov
jp
push
cmp
lahf
xchg
cmp
push
mov
pop
cmpl
shl
push
pop
dec
lea
imul
adc
subl
cmc
bound
pop
insb
fnstsw
cmp
jp
push
mov
addb
push
xor
jl
shlb
jnp
jb
fcoml
ja
mov
lret
mov
jg
inc
push
jbe
out
add
pop
lret
insb
test
xchg
xor
ret
sub
dec
sahf
jne
and
aas
or
outsl
les
cwtd
ret
jmp
mov
jo
out
gs
out
lret
shl
dec
mov
adc
adc
pop
out
fidivs
ds
std
test
mov
sahf
daa
push
ss
shlb
push
cmp
add
cmp
bound
into
dec
jbe
outsl
cmpsb
lock
or
inc
push
sti
cltd
fistl
sbb
push
imul
sbb
call
lea
fs
je
sbb
test
cmpsl
xchg
fistpl
cs
nop
js
scas
xchg
test
jle
inc
pop
fcoml
dec
es
push
xor
push
sub
mov
rcll
jbe
xchg
xchg
js
dec
out
addl
pop
mov
mov
and
lods
lds
adc
lret
push
loope
fs
cld
fs
and
jle
mov
out
dec
inc
add
jg
jo
mov
push
dec
xor
mov
sbb
push
fistpll
inc
sub
mov
xchg
add
cmp
adc
lods
cmp
xor
cmc
pushf
orb
lods
sahf
dec
jb
push
jmp
cwtl
pop
ror
imul
daa
insl
add
or
test
popa
and
pop
and
xor
data16
add
aam
mov
push
repnz
lock
jecxz
in
or
addr16
xor
std
mov
mov
mov
mov
jno
test
inc
inc
out
push
daa
lods
movsl
daa
repz
outsl
out
mov
scas
or
cmp
pop
mov
push
fsts
pop
into
iret
js
repnz
cli
and
out
xchg
lret
push
mov
repnz
and
js
sbb
cli
xlat
ds
imul
fs
icebp
pop
inc
pop
gs
push
in
or
cwtl
out
mov
out
pop
inc
dec
ja
sub
fnsave
push
adc
or
fwait
push
adc
xchg
rcrb
sbb
sub
dec
mov
lock
nop
rolb
fisubl
call
sar
in
add
imul
out
dec
add
inc
or
jns
insl
fildl
in
lcall
gs
lahf
mov
pop
mov
dec
sub
pop
xchg
fistps
inc
call
mov
stos
cld
xchg
outsl
sti
and
dec
jp
divl
inc
cmp
scas
cmp
mov
sbb
mov
fnstenv
adc
pushf
popf
jp
call
jo
adc
leave
xchg
outsb
orl
lds
or
fs
xor
jb
mov
xchg
jecxz
cmp
jo
pop
paddsw
ss
jno
movsb
lcall
lret
pop
sahf
dec
leave
daa
xor
movsl
xchg
adc
loop
lods
xchg
pushf
int
cmpb
cmp
mov
and
dec
out
sub
dec
cltd
rcrl
jecxz
stos
mov
popf
and
pop
sbbb
loope
rorb
cmp
fdivl
push
aad
cs
cmp
fldl
jge
test
aas
xor
mov
xor
sub
push
fadd
inc
lock
ja
add
inc
clc
add
mov
mov
or
or
mov
sub
mov
movl
movl
mov
mov
sub
xor
sub
mov
movl
mov
movl
mov
add
mov
and
imul
and
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
or
or
mov
mov
xor
xor
sub
mov
sbb
mov
jmp
jbe
testb
inc
movsb
xchg
cld
dec
clc
xor
dec
lods
test
adc
adc
jo
repz
int3
dec
jmp
xchg
sub
imul
and
cld
cs
sbb
jns
lods
fstl
mov
sbb
jecxz
fildll
cmp
arpl
mov
push
push
mov
les
push
pop
outsb
sbb
jbe
shlb
add
int
mov
sub
push
cmp
scas
jae
jmp
out
lds
pop
cmpsb
mov
out
mov
sar
test
inc
hlt
sub
or
clc
or
xchg
dec
adc
scas
rclb
xor
cmp
outsb
out
outsb
and
add
mov
movsb
mov
fsubs
imul
dec
lret
pop
dec
repnz
sti
lock
leave
repz
in
ds
lods
js
sub
xchg
add
aas
sbb
shrl
mov
and
jle
adc
mov
clc
aaa
cmp
out
or
in
jp
mov
fisubrs
cmp
loope
adc
imul
outsb
xchg
or
out
mov
and
into
mov
cltd
sti
xchg
sbb
je
pop
inc
nop
ror
aad
push
pop
in
add
dec
xchg
or
shrb
pop
jns
jno
aas
xor
xchg
in
jle
mov
popa
pop
call
mov
das
push
call
out
jae
mov
test
je
mov
jb
and
or
repz
sbb
cmp
xchg
mov
mov
or
rorl
or
or
sbb
enter
adc
ss
adc
insl
lds
rclb
mov
lcall
fdivrp
in
cmp
enter
das
int
pop
sbb
sbb
out
jmp
mov
ljmp
cmc
lock
pop
iret
dec
and
inc
lret
mov
add
test
ljmp
ss
rcrl
icebp
jecxz
inc
icebp
adc
sub
push
add
jmp
and
popa
add
fs
mov
jns
test
imul
ret
and
js
mov
xor
sbb
sub
cmp
ds
fldcw
mov
fwait
push
push
testl
mov
adc
push
in
pusha
cmc
ja
cmp
gs
stc
cld
addr16
insb
adc
scas
sub
cltd
xlat
and
cmp
inc
jbe
rcrl
rorl
xchg
fimull
icebp
or
lcall
mov
inc
pop
ret
push
js
je
sub
dec
sarl
sub
adc
xchg
cmp
ss
sbb
in
mov
aad
add
insl
cmpsb
push
and
outsl
xchg
cmp
imull
call
cmp
xor
mov
repz
mov
in
or
imul
inc
push
sarl
mov
inc
dec
inc
mov
jg
and
das
mov
adc
jmp
aad
sub
mov
hlt
stc
cwtl
pop
stos
push
in
add
mov
adc
pop
or
das
inc
bound
mov
daa
das
orb
fiaddl
cwtl
push
push
push
std
mov
push
je
or
dec
sbb
andb
pushf
mov
jb
std
mov
or
cmp
jnp
stos
aaa
jmp
mov
xor
dec
test
arpl
xchg
outsl
ds
mov
bound
jns
out
sub
out
pop
xchg
xor
push
pop
jl
cmp
inc
push
or
in
dec
xor
out
sub
into
fst
int3
add
add
aad
and
xor
or
sbb
subb
mov
adc
stos
xchg
push
add
mov
test
mov
ds
daa
xor
mov
testl
fsubrl
sub
repz
adc
popf
or
adc
aas
xchg
repnz
sbb
cld
fbstp
mul
inc
daa
jns
cltd
loop
int3
push
arpl
dec
sub
fisubs
rorb
mov
dec
jnp
sbb
out
jmp
out
lcall
sbb
add
sahf
cltd
xchg
mov
and
jge
les
xlat
dec
pop
dec
inc
mov
pop
mov
push
hlt
addr16
out
icebp
sub
mov
sbb
mov
push
push
push
push
call
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
negb
or
or
or
into
xchg
sbb
adc
adc
add
out
jo
adc
ja
push
cmp
mov
sbb
lea
dec
fildll
loope
jae
jl
sahf
roll
data16
cmc
outsl
popf
mov
and
scas
jnp
fnstsw
lretw
push
in
lods
adc
rorb
xchg
mov
mov
mov
cld
movaps
test
stc
std
dec
mov
sti
ds
iret
mov
cli
adc
fisubrl
les
addl
jo
cli
ret
mov
imul
dec
push
cltd
sti
xchg
in
lcall
dec
jle
shr
jne
mov
cmc
mov
dec
test
je
jle
xchg
inc
xchg
mov
pop
mov
jnp
insb
popf
mov
nop
mov
xchg
movsl
lahf
fwait
push
mov
dec
movsl
jb
mov
lods
outsl
push
and
dec
ret
cmp
fst
push
adc
repnz
mov
sbb
push
dec
xorb
movsl
cmp
loopne
pop
out
sbbb
cltd
pop
sub
out
xchg
shl
xor
aas
push
sahf
xchg
imulb
jmp
cwtl
pusha
adc
dec
lods
scas
push
je
dec
mov
pop
mov
cs
mov
adc
cmp
jl
xchg
js
or
jnp
xor
adc
shlb
cld
cmp
pop
mov
stc
cmp
fs
cmp
cmp
mov
lret
add
jo
fdivrp
xor
lea
sbb
push
or
pop
mov
sub
and
mov
push
jae
push
xchg
leave
mov
jg
lods
sub
sahf
push
mov
in
fmuls
mov
fnstenv
or
sub
xchg
push
and
fucomp
scas
jg
pop
pop
dec
fisubl
mov
pop
xor
out
push
dec
add
and
fstpt
leave
sub
shl
ljmp
decl
aad
insb
sub
clc
push
fistpll
pop
in
es
push
sbb
ret
add
pop
insl
push
cmpsb
leave
cmp
pop
or
scas
add
rcll
add
push
insl
sub
mov
pop
cs
in
xchg
mov
clc
dec
in
and
stc
push
dec
jns
lahf
and
fs
daa
stos
mov
subl
push
adc
cmp
lret
aad
in
push
into
jge
imul
mov
pop
leave
mov
xchg
fisttps
mov
scas
or
mov
push
movsl
clc
jnp
insl
repz
test
sub
insb
adc
in
lds
dec
cmp
fmuls
in
mov
inc
xchg
and
nop
jo
sarb
daa
aaa
lret
sub
pop
push
rolb
add
add
roll
push
lea
xor
pop
pop
stos
xchg
dec
mov
into
dec
xchg
mov
in
iret
cmp
ds
gs
mov
fiadds
daa
sbb
or
sbb
jb
insl
mov
jle
and
inc
xchg
cmc
inc
aaa
mov
popa
into
fisubrl
jne
orb
and
mov
call
jns
sub
adc
adc
in
cmpsl
in
adc
lcall
and
xlat
mov
cli
lret
leave
adc
sub
mov
cmp
fdivl
or
mov
cmpsl
xchg
pop
cmp
dec
cmp
dec
in
adc
add
hlt
jg
jl
lods
mov
inc
mov
jle
jbe
data16
add
and
jo
fisttpll
sbb
push
sbb
or
jle
sub
lock
fnsave
shll
bnd
mov
or
and
inc
inc
adc
pop
jb
movsb
add
in
add
lods
and
xchg
sbb
aas
mov
lods
jle
clc
cld
mov
sti
lea
pushf
mov
push
icebp
jo
mov
movb
ret
int
js
scas
mov
cmpsl
pop
andb
dec
cmp
sahf
or
dec
repnz
mov
int3
ret
push
push
ds
mov
hlt
mov
in
mov
jns
int
inc
or
ret
out
cld
and
jle
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
xor
add
xor
push
mov
mov
jmp
jmp
aaa
pop
xor
push
sbb
xchg
hlt
jnp
jae
adc
adc
inc
xchg
call
or
jno
inc
add
ja
roll
inc
push
adcb
xchg
cltd
push
divl
lds
loope
add
mov
pop
add
test
xor
xchg
or
dec
hlt
shlb
mov
jb
int3
and
mov
fistpl
lea
mov
cld
iret
push
in
sub
loopne
jp
sub
imul
repnz
mov
push
int3
fs
lret
jbe
xchg
arpl
test
or
bound
insb
jecxz
fxch
addr16
aad
out
sbb
fidivrs
aad
roll
sub
mov
mov
negl
cmp
jmp
xchg
mov
cmpsb
add
pop
xchg
sub
ret
xor
xchg
out
bswap
and
js
adc
arpl
or
sub
bound
cmpsl
pop
dec
or
push
push
call
jge
mov
scas
cmp
lods
add
xchg
test
push
mov
mov
sbb
les
icebp
gs
push
ss
adc
cmp
inc
js
xlat
add
hlt
sub
cmp
mov
dec
int
test
lahf
jb
adc
add
and
xchg
mov
das
test
sub
inc
imul
lds
shll
scas
rcrl
es
add
pop
mov
call
jge
addr16
out
aas
push
iret
es
cli
loope
dec
lea
pusha
push
vcvtsi2ssl
in
repnz
mov
test
sub
daa
imul
cmp
push
inc
in
cmp
hlt
ljmp
mov
popf
push
int3
xchg
inc
ds
and
in
outsl
sbb
mov
adc
imul
jbe
cmp
mov
jnp
jecxz
loop
cmp
outsl
loopne
cmp
data16
xor
mov
pop
dec
flds
or
ss
mov
jge
cltd
mull
popf
pop
cmpsl
sub
sub
push
sti
jle
mov
scas
and
xchg
jnp
imul
jb
ficomps
jo
movsl
mov
iret
mov
stos
clc
dec
xchg
daa
scas
stos
leave
pop
jle
incl
cmp
lahf
jo
pop
sub
push
sarb
sub
add
jne
xchg
jae
and
int
cmpl
sub
cmp
lahf
xor
pushf
fcmovb
mov
fiadds
mov
leave
xor
negb
loop
push
mov
push
push
sbb
daa
jge
mov
fbstp
cmp
jnp
or
mov
mov
test
stos
inc
mov
mov
enter
sbbb
mov
test
jnp
int
ss
aam
jbe
imul
shr
pop
mov
xchg
mov
jae
jnp
test
xchg
fs
or
dec
jmp
lods
hlt
xchg
outsb
add
inc
scas
push
mov
adc
mov
sub
cmp
cmp
sub
jmp
mov
loop
daa
jne
inc
test
ret
mov
cmp
cmpsl
imul
pop
ljmp
xchg
push
out
jg
aaa
xchg
cmc
dec
push
out
mov
xchg
jno
iret
mov
loop
insl
leave
push
and
mov
push
lcall
add
mov
jmp
ret
xor
loope
xchg
shl
inc
push
je
ret
pop
mov
test
lahf
add
and
fwait
lods
mov
and
hlt
mov
mov
mov
ljmp
test
mov
leave
pop
inc
adc
shr
fcmovu
aaa
imul
loop
mov
xchg
push
aam
out
in
lds
add
test
sti
imulb
mov
cld
test
adc
test
cli
jp
jns
mov
mov
dec
jne
stos
sub
sub
jns
cltd
imul
mov
out
mov
cmp
mov
ficomps
pop
scas
mov
scas
mov
imul
add
icebp
mov
and
lea
add
push
jmp
dec
arpl
into
mov
pop
xchg
fstpl
mov
push
fldl
loop
lcall
xchg
xchg
in
into
scas
mov
pop
pop
mov
fld
cmpl
jl
cmp
mov
cmpsl
jp
pmulhuw
mov
hlt
and
cmp
mov
int3
cmp
jae
inc
jg
cmp
rol
xor
cmp
negl
mov
bound
mov
shlb
lea
push
sub
add
ja
sbb
add
add
xchg
idivl
bound
push
lahf
xchg
and
sahf
push
sbb
jg
mov
pop
xlat
pop
mov
mov
push
ret
or
sbb
jge
in
or
dec
call
movsl
or
xchg
add
hlt
mov
push
fmuls
incl
jg
arpl
mov
mov
xchg
aad
push
add
xchg
sub
and
test
mov
cmp
mov
aam
mov
pusha
movsl
adc
shr
dec
shrb
lret
xchg
aad
fldenv
cmpsb
adc
out
call
fs
xchg
flds
dec
mov
mov
jnp
imul
sub
daa
lods
test
push
imul
icebp
icebp
in
pop
les
aam
mov
sub
cld
inc
sarl
in
out
lahf
out
mov
fsubs
stos
push
pop
loope
movsl
stos
jb
insl
icebp
mov
cmc
add
addr16
push
adc
xchg
or
xchg
add
lods
and
into
insl
cs
or
jae
repnz
push
xchg
cli
xchg
pop
jecxz
test
inc
push
xchg
adc
xor
xlat
pop
sub
push
xor
pop
daa
and
shrb
and
inc
jp
js
xor
push
xchg
xorl
out
add
and
or
pop
loopne
cli
lock
push
pop
mov
jbe
jb
movsb
xchg
dec
lcall
movsb
nop
in
cmc
xor
jl
inc
dec
popa
mov
mov
inc
or
mov
mov
je
xchg
jo
pop
stos
rcl
pop
cs
pop
imul
xchg
cs
popf
jbe
pop
xlat
mov
enter
lahf
jmp
pop
stc
xchg
mov
or
cwtl
je
aam
loop
das
cmp
cmp
adc
adc
mov
out
les
push
icebp
adc
push
jne
outsl
cmpsb
imul
dec
test
loopne
aas
test
mov
pcmpeqb
push
filds
dec
xchg
imul
popa
mov
sahf
ds
sbb
stc
xlat
cmp
std
xchg
cmpsl
daa
pop
jp
in
fimuls
inc
push
jns
imul
out
sti
pop
imul
hlt
pop
dec
adc
mov
mov
sbbl
clc
lret
jmp
xchg
popa
jno
daa
dec
jae
dec
test
pop
adc
cmc
std
in
out
or
xchg
fsubl
int
mov
add
idivl
int3
pushf
ljmp
sub
subl
sbb
packssdw
or
inc
es
push
loopne
jecxz
pop
lahf
gs
data16
adc
test
fnstsw
and
sbb
adcb
inc
adc
gs
arpl
pop
aad
mov
aad
or
mov
dec
inc
nop
adc
pusha
arpl
jo
arpl
sbb
rolb
jmp
scas
inc
fistl
push
aas
inc
and
aam
popa
movsl
gs
mov
cmpsb
xlat
inc
imul
icebp
bound
lcall
ja
xchg
mov
add
jge
jbe
icebp
pop
nopl
ret
rorb
loopne
inc
adc
sbb
inc
mov
das
and
adc
lock
xor
lahf
or
and
imul
sbbb
mulb
pop
add
incl
or
aad
adc
pop
jle
lahf
idivl
jno
xor
mov
or
mov
in
sbb
test
jp
loope
xchg
dec
addr16
pop
movsb
xor
insb
repnz
xlat
or
xchg
movsb
jbe
jge
pop
mov
mov
dec
int3
fidivrs
mov
pop
xchg
add
fs
mov
cmp
test
decl
decl
decl
jmp
sub
jmp
push
mov
cmp
icebp
dec
cmpsl
lds
clc
adc
adc
sbb
push
cmpl
jb
jne
jecxz
or
sub
adc
xor
ret
out
pop
fs
sbb
mov
sub
add
cmc
dec
aas
out
mov
mov
xor
into
int3
dec
cmp
hlt
sub
lock
scas
mov
rcrl
sti
fisubrl
xchg
xchg
xor
mov
pop
mov
mov
push
and
stos
cltd
jne
and
pop
jge
and
dec
add
pop
ljmp
ja
mov
adc
inc
scas
fsubs
and
data16
das
ret
sub
aaa
or
push
add
mov
insl
jo
inc
xchg
into
stc
aam
stc
sti
mov
push
adcb
or
ffree
lods
aad
rcll
mov
mov
or
sahf
sahf
pusha
dec
inc
push
adc
decb
jp
xchg
fnstenv
repz
adc
daa
and
rcl
or
adc
scas
mov
adc
sti
inc
and
push
sbb
jge
jb
into
xchg
sahf
lret
xor
rclb
cmp
inc
or
cmc
mov
out
in
xchg
mov
rcrl
pop
xor
pop
adc
and
xchg
ja
bnd
enter
mov
adc
dec
repz
mov
add
shr
fcomip
push
sti
adcl
mov
cmp
add
lahf
pop
pushf
inc
add
dec
mov
imul
negl
loopne
sbb
sbb
cld
and
mov
sub
cmp
pop
lahf
xchg
lods
xor
mov
inc
dec
pop
pushf
xchg
or
pop
test
outsl
push
cmp
pop
aad
and
mov
xor
je
loopne
push
cmpsb
add
mov
cmc
fimuls
push
cs
mov
xor
xchg
fldcw
and
lods
adc
aas
fnstenv
mov
clc
cmc
add
bound
fsubrl
sub
mov
pusha
stc
sahf
xchg
imul
push
pop
hlt
pop
lcall
jns
mov
test
mov
sbb
lods
add
lods
adc
popf
fs
push
inc
or
push
das
inc
mov
jns
out
sbb
daa
aam
dec
loope
xor
enter
push
fwait
stos
xor
jbe
jp
sub
push
fnstenv
cmc
inc
cmp
test
jae
or
adc
push
clc
cs
std
pop
enter
or
mov
pushf
mov
or
or
cli
pop
inc
pusha
ret
addr16
in
ljmp
fidivrl
movsb
ret
jae
sbb
call
ret
loope
testb
or
adc
sub
roll
and
fcoms
subl
xchg
push
and
in
aas
mov
lods
je
mov
dec
add
movsb
push
push
xchg
cli
in
loope
xchg
push
in
xchg
adc
js
test
sarb
mov
adc
jae
test
inc
mov
or
out
test
fwait
rorb
pop
jo
mov
inc
in
lock
mov
mov
pop
int3
cmp
popl
mov
lock
xchg
pop
mov
fs
inc
push
shll
adc
pusha
push
xor
clc
jecxz
pop
xchg
push
xchg
filds
mov
push
ss
std
mov
or
mov
popa
sub
ljmp
out
jge
leave
and
jge
in
popa
les
adc
pop
mov
push
shlb
xchg
pop
stc
loopne
enter
imul
pop
mov
stos
jg
test
imul
jnp
mov
mov
dec
aam
call
and
sub
pop
stos
out
sti
jno
lret
sub
inc
test
fstpt
loopne
data16
push
dec
mov
add
cmp
and
into
aaa
inc
scas
pop
mov
push
mov
cmc
in
pushf
std
gs
testb
push
in
mov
push
data16
push
cmp
xlat
pop
stc
pop
insb
es
jg
xchg
jae
and
xor
jle
insl
mov
mov
or
call
ret
sahf
rcrl
call
and
lds
iret
js
cwtl
retw
stc
popf
call
mov
dec
mov
push
add
and
mov
mov
jmp
ja
cli
orl
outsl
mov
dec
sbb
jecxz
clc
adc
adc
and
or
mov
jp
out
fs
adc
pusha
lret
out
mov
andl
mov
lcall
mov
addr16
mov
in
aaa
out
cmpsl
mov
dec
xor
clc
popa
test
cld
in
mov
pop
aam
mov
stos
mov
out
repnz
sbb
xor
data16
or
jno
jo
or
push
mov
xor
prefetch
mov
pop
cmp
stos
sub
mov
test
jns
mov
inc
aam
fnstcw
xor
or
push
rep
mov
arpl
popf
xchg
sbb
inc
pop
lock
hlt
lock
adc
inc
rorl
ret
outsb
js
push
and
sbb
scas
rcll
test
test
lods
jne
adcl
shl
lcall
pop
dec
ja
push
les
add
aam
push
add
jge
stc
iret
stc
jmp
dec
dec
shrb
nop
in
jg
xchg
ja
loopne
fists
call
adc
mov
in
lahf
push
int3
iret
repz
ds
dec
in
sub
lcall
add
and
stos
fldenv
sbb
jo
mov
das
pop
shll
xor
repz
fistps
fwait
test
in
sahf
cmp
jge
jg
sbb
and
iret
dec
mov
iret
sub
lods
out
hlt
cmp
lahf
mov
call
cld
mov
int3
sub
mov
jb
jmp
mov
cli
jne
sbb
lds
clc
std
cmc
mov
sub
in
xlat
movswl
adc
mov
in
push
nop
mov
sub
cmpsl
mov
cltd
inc
xchg
inc
loope
xchg
jnp
mov
out
mov
cwtl
cwtl
jno
outsl
xlat
inc
pop
xchg
stos
jne
xor
aam
or
test
aam
push
jmp
test
xchg
mov
pop
ret
gs
mov
lock
sbb
and
addb
xor
daa
and
fcom
ret
movsl
mov
out
pop
pop
and
push
push
data16
rcrl
leave
adc
loopne
sbb
outsb
jle
adc
dec
test
mov
adc
mov
inc
cmp
sarl
jnp
push
fmull
hlt
rorl
roll
sub
inc
sbb
sti
inc
lods
mov
fmuls
test
out
adc
push
mov
data16
or
mov
out
inc
jo
jge
mov
pop
jbe
mov
pop
pop
push
stos
cli
mov
sbb
fwait
mov
dec
daa
cltd
dec
loope
mulb
pop
mov
xor
lcall
pop
push
add
imul
test
mov
mov
sbb
pusha
rcrb
xchg
icebp
mov
jecxz
mov
cmpb
mov
mov
daa
int
shll
int3
stos
lret
and
and
mov
je
test
in
in
and
xchg
pop
shll
nop
xor
xchg
int
xchg
scas
in
adc
push
adc
mov
decb
add
pop
mov
sub
sti
enter
pop
lock
int
jae
sub
imul
lcall
std
jg
mov
jb
imul
pop
pop
xchg
sahf
stc
repnz
nop
add
in
repnz
mov
cmpsb
out
js
push
imull
dec
bnd
in
pop
inc
sub
andb
clc
and
stc
push
xchg
je
and
loop
lods
in
cmpsl
rcll
adc
or
or
xchg
push
loope
sbb
int
xchg
cmp
sbb
lcall
xor
fimull
and
jmp
mov
push
cmpsl
add
mov
cltd
out
inc
lock
sar
pop
mov
xor
popa
pop
and
mov
fisttpl
adc
jl
xchg
stc
fwait
mov
sub
into
push
inc
popa
test
mov
nop
pushf
ror
mov
enter
cli
push
dec
test
daa
fwait
xchg
push
adc
adc
xlat
mov
inc
mov
outsb
outsb
mov
xchg
in
sti
gs
dec
jmp
shrb
enter
in
pop
mov
mul
jbe
push
or
jb
cmp
mov
xlat
lret
pop
sub
cltd
call
es
sahf
xor
add
mov
push
mov
xor
div
mov
xor
mov
imul
mov
sub
xor
lea
call
mov
mov
imul
mov
or
sub
and
mov
sub
cmp
jne
jmp
scas
fistpl
push
xor
aad
pop
lds
or
clc
adc
adc
in
lock
jecxz
mov
mov
rol
xchg
scas
gs
push
jae
cwtl
je
xchg
js
ja
and
aaa
outsb
inc
sbb
cmc
shlb
xchg
sarl
fidivrl
fwait
sub
mov
repnz
pop
adcl
jle
adc
sub
fidivl
dec
push
mov
shlb
xchg
or
add
add
test
hlt
mov
loopne
lods
sub
stos
dec
js
fwait
push
lock
add
and
loopne
xor
out
xchg
les
leave
push
int
xchg
pop
push
dec
insl
mov
mov
aas
xchg
sahf
mov
inc
pushf
pop
jmp
push
movsl
mov
test
movsb
dec
xor
adc
mov
or
cltd
pop
lock
xor
repz
scas
mov
lea
repz
sbb
sub
icebp
sub
jns
ficompl
scas
ds
stc
test
mov
test
dec
xor
int3
fisubl
shll
sub
adc
lds
mov
imulb
ret
mul
inc
jp
out
pop
leave
inc
jno
cmpsl
push
dec
lea
test
xchg
adc
popa
lds
mov
test
data16
mov
leave
es
mov
xlat
iret
mov
lock
call
pusha
les
xchg
adc
iret
push
out
sar
inc
ret
int3
jb
push
ret
push
push
jno
xor
mov
adc
inc
cmp
mov
js
mov
mov
sub
lock
dec
jb
jb
mov
ret
dec
btc
push
loop
cmp
fbld
or
mov
xchg
insl
in
cmp
fsubs
pop
jl
mov
js
iret
inc
lcall
sub
in
pop
add
and
adc
outsl
shrl
fcomps
in
inc
mov
cltd
fidivrs
imull
mov
inc
push
ss
mov
lods
fisubs
les
jg
mov
aaa
cmc
lock
sbb
jne
fiadds
lds
dec
push
das
lods
jnp
mov
jbe
test
push
and
faddl
sahf
andl
leave
cmp
mov
push
push
aad
or
sub
outsb
xlat
inc
fwait
cmp
insb
bound
mov
cmpsl
pop
inc
movsl
mov
ficoms
or
test
int
cmp
cs
popa
add
andl
mov
mov
xchg
js
mov
lds
fidivl
cwtl
fstpt
out
je
out
pop
sbb
pop
pop
in
arpl
nop
cwtl
inc
jo
fimull
lods
leave
cmp
movsl
adc
mov
stc
insb
dec
out
cmp
rolb
push
mov
pop
lds
mov
and
push
clc
cs
jl
shrl
and
pushf
in
ficoml
cmp
push
adc
shrb
fcmovbe
sub
add
pop
mov
imul
mov
jle
shrd
and
cmp
inc
lahf
clc
mov
xchg
daa
mov
test
mov
ret
sbb
jmp
or
cmp
jg
or
in
and
jmp
decl
in
pop
jns
clc
jge
std
test
jns
test
arpl
ds
push
addr16
test
dec
xchg
add
sbb
movsb
das
mov
sbb
data16
ds
test
xor
cmp
popa
cmp
cmp
pop
das
cmpl
xchg
mov
push
inc
idivb
shrl
movsl
sahf
push
out
rcrb
fs
mov
adc
into
cmp
adc
pop
mov
movsb
out
mov
cltd
rol
jmp
and
ss
data16
pop
adc
lcall
adc
outsb
loopne
fcompp
movsl
imul
lcall
xor
repz
lods
push
pop
add
out
sub
cmc
dec
das
jbe
jge
xchg
mov
icebp
ja
outsb
lret
mov
and
lcall
pop
js
adc
jp
jne
jnp
push
rorl
add
add
and
or
repz
xchg
mov
clc
adc
adc
add
sbb
and
add
sbb
leave
test
xor
pop
loopne
sub
jbe
dec
cmpsb
lret
int
mov
adc
cmp
inc
lahf
cld
cwtl
loop
mov
cmp
add
popf
lret
je
scas
pop
pop
test
aas
sbb
imul
lock
imul
mov
mov
xchg
cwtl
xlat
adc
mov
ljmp
adc
mov
lret
xchg
mov
dec
movsb
jno
push
loopne
adc
and
mov
sahf
test
sbb
and
testl
xchg
hlt
repnz
adc
outsb
imul
xor
mov
es
aaa
jmp
incb
rcr
pop
fnstcw
xor
and
call
outsb
scas
dec
pop
jae
in
stc
or
arpl
sarb
sahf
iret
sub
pop
and
lret
pop
add
push
insb
jle
mov
test
adc
ss
aaa
jg
pop
outsb
inc
lret
pop
lret
pop
in
push
test
lahf
push
lds
mov
adc
fwait
hlt
fsubrl
ret
xchg
xchg
pop
inc
sbb
jl
inc
lahf
leave
inc
hlt
dec
xchg
lcall
ja
dec
out
bnd
inc
icebp
add
xchg
sbb
jmp
stos
dec
push
cmp
mov
push
movsb
cmp
out
sti
movsb
push
xchg
adc
mov
jge
cmp
xor
push
sub
lds
adc
mov
cmp
xor
mov
data16
lahf
or
push
mov
mov
cmp
in
aas
imul
cltd
or
xchg
test
stos
repnz
dec
shll
mov
jge
loopne
in
push
in
subb
jo
rcrl
aam
lahf
out
xchg
pop
ss
and
dec
xor
mov
mov
sarb
xchg
mov
test
fsubl
push
in
xchg
xlat
into
stos
add
push
jge
cli
xchg
push
mov
mov
or
adc
dec
inc
cmpsb
fistps
mov
sub
fsubp
mov
aad
das
pop
call
jns
stos
add
push
jnp
cmpsb
mov
out
in
ja
add
popa
test
and
shl
in
cmpsl
gs
cmp
sub
js
fwait
rcrl
cmpsl
or
mov
adc
xor
fsts
xorl
mov
sbb
adc
and
aas
into
fs
cmpsl
add
mov
in
mov
xor
cmp
jl
cmp
sub
incb
loop
pop
sbb
xchg
fdivs
mov
js
dec
in
lea
push
xlat
xchg
mov
sbb
cltd
and
in
imul
repz
scas
xchg
push
xor
pushf
clc
lods
mov
and
loope
jne
mov
push
jne
adc
popl
jo
gs
pop
cli
add
hlt
and
inc
jle
neg
jl
pushf
pop
insb
pop
dec
je
aaa
aas
pop
aam
mov
shll
sub
mov
aad
lcall
icebp
push
add
ds
test
les
cmc
daa
and
mov
outsl
iret
mov
leave
push
into
adc
inc
mov
xchg
jbe
jno
mov
ja
pop
xchg
hlt
push
add
mov
pop
push
jnp
in
int
in
sub
jns
fcmove
mov
lret
add
daa
int
shll
push
xchg
mov
sub
mov
mov
sub
mov
sub
cmpsl
test
xor
pop
sahf
mov
inc
addl
cmp
add
dec
inc
adc
add
out
mov
adc
sti
popf
int
cmp
stos
xchg
lret
or
je,pt
push
ret
cmpsl
out
addl
pop
ljmp
mov
mov
dec
cmp
clc
sub
call
push
jae
pop
push
test
pop
adc
push
push
mov
push
ret
adc
push
std
loop
xor
hlt
cmpsl
dec
xchg
in
or
adc
jmp
adc
int3
push
inc
je
cmpsl
leave
notb
and
mov
sub
imul
fisttpll
shl
xchg
fwait
xchg
decb
cmp
leave
sbb
icebp
mov
outsl
mov
pop
fildl
jno
clc
push
pop
xor
div
xor
xor
add
xor
lea
push
mov
mov
imul
mov
and
mov
or
add
mov
and
mov
div
push
mov
add
push
mov
mov
and
xor
and
mov
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
jmp
imul
pop
int3
push
push
outsb
call
scas
int
sbb
cli
adc
pop
cmc
rorl
pop
data16
dec
jb
and
jg
mov
inc
out
inc
sub
cmp
mov
aam
inc
sbb
xchg
jb
jnp
shr
lret
call
insl
sbb
mov
and
inc
in
stos
mov
sub
xchg
sbb
adc
pop
enter
or
lods
sub
mov
mov
or
dec
lahf
jp
loopne
loope
ror
adc
pop
idivb
loopne
cmc
je
sbb
jae
test
xchg
out
les
ficompl
pop
xchg
mov
out
dec
bound
jns
gs
jae
mov
sahf
mov
add
mov
vpshab
in
adc
and
sub
inc
inc
decb
adc
movsb
sbb
pop
push
push
movsl
lret
push
cltd
cltd
pop
out
mov
sub
stc
xor
mov
inc
enter
xchg
inc
xchg
lods
sub
jb
je
fchs
dec
test
iret
xor
lret
pop
sub
mov
mov
inc
clc
cmp
inc
and
add
and
test
jno
dec
jno
jo
lret
jl
loope
jmp
pop
or
mov
xor
sub
notb
loope
mov
rorl
xrstor
sub
nop
dec
punpckhbw
mov
repnz
mov
les
mov
jnp
cltd
fsubrl
in
sbb
add
lock
dec
sbb
ss
pop
push
js
dec
jb
jne
in
push
jae
das
insb
mov
jp
inc
jp
sub
inc
push
mov
ficomps
jp
mov
xor
sbb
imul
mov
sub
test
push
in
or
loopne
aas
outsl
subl
es
lahf
cld
cld
std
loopne
sub
mov
sbb
cmpsl
mov
dec
test
aaa
fsubrs
mov
sub
push
inc
pop
pop
cltd
fwait
dec
adc
mov
xchg
or
xchg
and
test
test
jecxz
inc
push
lds
mov
sbb
mov
lcall
fwait
jp
pop
std
in
out
std
jne
fidivrl
and
mov
js
test
mov
jne
xor
mov
sub
cmp
jne
xchg
rcr
lods
jmp
jne
xor
aad
sbb
movzbl
or
mov
fdivl
mov
dec
repz
outsl
mov
push
divl
in
xchg
cmp
add
mov
pop
sti
enter
dec
in
xchg
mov
mov
inc
outsb
test
jnp
ret
test
push
push
xchg
leave
sarl
xchg
adc
repnz
cmp
adcl
cmp
cmpsl
icebp
jns
cmp
xchg
jge
push
in
in
loopne
mov
mov
adc
aaa
sbb
fbld
adc
or
orb
sarb
xor
stos
fwait
aad
dec
hlt
mov
or
mov
or
pop
push
add
test
sarb
mov
inc
adc
push
das
jp
jno
out
mov
cmp
fcoml
inc
push
xchg
jge
xchg
add
aad
sub
push
data16
cmp
xchg
xchg
add
shlb
leave
das
mov
fisubrs
ljmp
int3
push
jns
cld
int3
mov
int
pop
jnp
xor
out
int
add
test
addr16
fsubl
roll
xor
out
add
popa
insb
push
loopne
lea
loopne
cmp
and
xchg
xor
mulb
pop
rolb
mov
das
fidivs
pop
xor
mov
testb
sti
test
xchg
aam
jl
ficoms
sldt
pop
add
pop
cld
test
std
std
mov
outsb
loopne
pop
xor
mov
mov
and
adc
ds
sub
stos
dec
int
fisubl
sbb
lcall
scas
movsb
pusha
aad
dec
fisubrl
jbe
fwait
cltd
daa
mov
mov
or
inc
insb
cli
loopne
dec
mov
pop
jp
jnp
adc
test
jo
cmp
push
scas
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
jmp
lahf
bound
push
mov
jo
mov
clc
adc
adc
mov
jns
mov
jge
repz
outsl
out
cld
dec
jbe
inc
ret
xor
addr16
dec
test
fdiv
in
insb
inc
ja
push
fxch
test
adcl
test
inc
dec
mov
out
call
call
adc
lods
sbb
pop
mov
outsl
push
fs
popf
mov
mov
popa
add
push
int3
sbbb
and
fistpl
fdivl
pusha
rorb
mov
mov
or
fwait
aas
js
dec
pushf
and
sub
sbb
sahf
aam
roll
daa
cwtl
cmc
push
adc
and
or
fsubrp
std
adc
ss
imul
lds
mov
jge
rcrl
or
mov
xchg
jmp
xchg
mov
fucomi
mov
inc
mov
inc
mov
lret
ljmp
xlat
fisttpll
insl
loop
xchg
bound
jge
push
jmp
push
push
or
stos
xchg
fimuls
out
jmp
ja
cmp
roll
add
pop
add
sub
std
sub
mov
jl,pt
or
sub
ja
add
pop
int
arpl
rcrb
cltd
xchg
pop
mov
dec
rorb
cmp
stos
mov
hlt
rclb
mov
outsb
test
movsb
lods
jbe
mov
movb
xor
sahf
ss
cmp
call
aas
pop
mov
insl
xchg
mov
add
push
jle
jl
dec
and
sub
frstor
cli
addr16
mov
mov
rorl
lods
aaa
jne
movsb
pop
loop
in
rcrl
sub
ljmp
daa
hlt
cmp
je
sub
adc
adc
and
mov
inc
inc
sub
cmp
ja
dec
decb
mov
xor
int3
mov
inc
adc
xchg
mov
daa
aad
ret
rcrb
xor
shrb
pushf
add
adc
push
jp
popa
adc
repnz
sbb
lret
add
pop
lds
popa
fildll
les
and
push
rcll
add
lock
or
dec
mov
jno
fcmove
push
iret
lret
and
lea
add
push
cmpsb
jns
xlat
scas
dec
cmp
xor
es
scas
jbe
sbb
lds
push
loopne
ret
mov
lods
xlat
fsqrt
mov
rolb
mov
xor
sti
push
adc
lea
xchg
mov
jecxz
or
and
lret
push
mov
mov
mov
sbb
outsl
aas
dec
jns,pt
or
movsb
xchg
ss
jp
xchg
push
xor
sahf
int
in
cmpb
cli
fcoml
sbb
dec
push
mov
dec
pop
outsl
mov
push
test
add
mov
repnz
mov
mov
lds
xchg
outsb
inc
push
mov
dec
xchg
mov
loope
fcompl
and
mov
xchg
pushf
movsb
jne
repnz
lret
fs
jns
mov
das
xchg
adc
stos
xchg
mov
ja
pop
xchg
js
fwait
adc
and
das
outsl
or
repz
and
push
jle
scas
mov
ds
out
repz
cli
push
bound
in
imull
mov
jge
add
fmulp
or
bound
mov
stc
test
xchg
addr16
adc
int
inc
mov
and
rcl
das
popf
out
sbb
dec
sbb
popf
or
call
in
fwait
mov
lods
inc
ret
pop
adc
sbb
popf
push
push
aas
jns
dec
cwtl
outsb
xchg
mov
nop
sbb
vprotd
in
fiaddl
imul
rdpmc
adc
fnsave
adc
test
out
xchg
inc
out
jp
adc
xor
push
add
xchg
jg
or
mov
add
addl
xor
cmp
clc
lock
fnstcw
pop
cmpsl
icebp
fs
xchg
push
xchg
repnz
dec
clc
loopne
jmp
and
sbb
fsubrs
scas
dec
incl
loope
add
mov
push
mov
into
mov
gs
add
adc
pusha
add
mov
lahf
int
ret
fwait
cwtl
pop
lret
sub
xchg
sbb
in
inc
xlat
xlat
lea
mov
and
in
and
inc
and
fs
roll
push
notb
pop
adc
aad
daa
mov
sub
fisubl
out
popf
mov
xchg
sbb
sub
push
outsb
dec
das
rol
mov
cmp
test
mov
addl
fsubrl
js
cmp
js
pop
mov
or
lods
push
or
cs
mov
stos
push
pop
pop
stos
fdivr
push
push
out
or
into
fwait
jb
push
push
xchg
cmp
fimull
mov
mov
pop
roll
test
xor
sbbl
jl
aam
lret
movsb
cmp
sub
cmp
inc
jecxz
xchg
dec
test
xchg
push
pusha
rcr
mov
or
and
xchg
jmp
int3
cmp
or
sub
mov
inc
stc
xchg
int
ds
dec
push
inc
shll
filds
jge,pn
or
fcomip
xor
xor
inc
jo
rolb
xor
add
imull
push
lcall
test
and
roll
dec
subb
adc
xchg
xchg
pop
inc
and
push
sbb
mov
mov
and
and
mov
gs
jle
jo
or
sbb
mov
mov
jns
push
cmp
push
roll
inc
out
and
stos
addl
int3
in
jmp
aas
xchg
hlt
xor
cmp
jle
shr
mov
mov
and
mov
cwtl
cmovb
xor
xor
pop
rcl
fbstp
adc
out
dec
dec
jns
incl
inc
into
pop
sahf
sahf
popf
es
clc
fidivrl
in
inc
dec
xor
push
mov
fcomps
mov
inc
imul
xor
and
xchg
push
jae
pushf
aad
test
mov
xor
dec
cli
lds
aaa
adc
xor
xlat
add
jecxz
add
ss
sbb
push
jmp
xor
out
push
push
or
push
jp
dec
ret
xorl
xor
xor
in
sub
xchg
inc
popa
lods
pop
jno
mov
idiv
cmpsl
das
cmp
push
pop
sbb
bound
nop
stos
inc
inc
pop
xor
movsb
das
in
repz
insb
subl
jmp
ret
pusha
cmp
imul
and
jge
cli
push
in
lahf
jg
arpl
push
jmp
fistpl
push
dec
mov
push
inc
data16
mov
inc
cmc
fmull
js
mov
int3
lock
outsb
add
mov
in
rcl
stos
sbb
dec
pop
push
insb
inc
jbe
cmc
or
test
daa
arpl
sar
lahf
pusha
cmp
sbbl
adcl
inc
sbb
pop
lods
popa
test
adc
mov
xchg
imul
pushf
mov
push
vfmaddsub132ps
cmp
aaa
test
fstpt
cmp
adc
fistl
repz
pop
loopne
sbb
dec
loope
jge
aam
lea
sub
mov
adcl
test
or
jle
in
xlat
and
and
mov
rol
or
movsl
push
hlt
sub
icebp
loop
rolb
fcomps
jle
sub
adc
xor
cs
fmuls
test
jb
xchg
ret
pop
enter
inc
rorb
fsubrp
and
jp
test
jle
fdiv
loop
sub
es
nop
jns
pop
pop
imul
or
and
loopne
push
xchg
sub
insl
pop
xor
xor
mov
repz
sub
bound
xchg
pop
push
lret
mov
cmpsb
or
sub
and
lret
push
aad
jb
lcall
bound
scas
fwait
pop
cmpb
ljmp
push
repz
push
es
mov
fadds
cmp
mov
fs
pop
movsl
movsb
add
jge
inc
in
mov
mov
sub
mov
mov
mov
sub
jmp
sbb
xchg
and
ja
test
or
adc
pop
mov
ljmp
popa
jnp
jb
adc
scas
sarl
in
imul
push
and
mov
and
inc
repnz
sti
rcll
notl
call
test
rol
lods
gs
add
jns
adc
repnz
out
imull
ret
int3
data16
gs
jecxz
out
cwtl
inc
push
rcrl
stos
push
jae
pushf
enter
shll
imul
shlb
sub
outsl
and
inc
jnp
inc
scas
mov
xor
sbb
xor
int3
aad
xacquire
aas
inc
xchg
inc
fstl
ficompl
pop
and
cs
stc
ds
test
imul
shrl
jle
adc
mov
sub
incb
mov
lea
pop
inc
sub
cmp
mov
add
jp
ficoms
xlat
sub
filds
or
pop
pop
stos
jmp
aam
add
sahf
negl
out
mov
out
jo
ror
jge
fsubs
ret
mov
insb
cmc
sub
emms
gs
mov
insl
movb
mov
sbb
js
loop
inc
jno
cli
andb
mov
stos
or
mov
hlt
std
insb
cld
dec
shll
jo
shr
add
inc
jl
fisubl
pushf
insl
push
shrl
adc
sbb
mov
lret
fimull
shrl
cmp
incb
inc
inc
arpl
xchg
rcl
insl
or
xor
pusha
stc
xchg
aam
mov
fiaddl
inc
jns
outsl
lret
data16
ret
rolb
into
rorl
cli
sbb
or
add
dec
shrb
enter
xchg
clc
mov
jno
pop
mov
jp
mov
filds
jbe
fiadds
scas
js
jge
aaa
mov
adc
leave
cmc
push
aad
cwtl
sbb
push
jb
iret
hlt
cmp
jl
jecxz
jmp
mov
pop
repnz
sub
or
mov
rorl
sub
mov
pop
popa
call
mov
mov
pop
inc
xor
pop
push
mov
sub
cmp
daa
push
sbb
mov
loope
pusha
dec
xor
or
stos
xchg
jnp
jns
xchg
jle
imul
mov
cli
and
sbb
xorl
push
xchg
inc
push
mov
cmpsl
fmulp
lcall
je
xor
xor
or
arpl
call
icebp
mov
clc
stos
inc
cmc
add
bound
fsubl
addr16
jp
mov
xchg
movsb
dec
gs
notl
scas
addr16
xchg
cld
sub
je
loop
in
dec
jo
sar
mov
mov
gs
pushf
adc
jecxz
movb
dec
inc
mov
roll
je
in
adc
les
xchg
mov
add
rolb
ljmp
and
movsb
xorb
test
addr16
mov
lods
stos
cmpsl
popf
sub
push
mov
jp
lret
mov
and
lods
add
lods
push
jno
add
push
sub
and
std
adc
hlt
and
inc
mov
lock
arpl
mov
add
cmpsl
mov
outsl
mov
or
cmovae
setb
repz
lcall
adc
imul
fistps
sub
cld
xor
xor
aaa
std
add
fwait
rorb
mov
adc
ja
sub
das
sar
push
push
cmp
cld
mov
jbe
aad
mov
aaa
rorl
repz
lds
fimull
into
adc
adc
idivl
jne
mov
lds
out
and
or
iret
cmp
imul
cmpsb
cmp
or
xor
test
xchg
sub
push
dec
mov
inc
iret
repnz
sbb
fcoml
sbb
cmpsl
movsl
cmp
sbb
lock
insl
hlt
xor
pop
mov
fdivl
and
addl
popw
repz
cli
mov
loopne
out
pop
jne
pop
rcl
mov
test
pop
cwtl
test
dec
in
sbb
out
add
cs
aam
inc
xchg
fsub
mov
or
sti
and
cmp
movl
jmp
mov
test
adc
inc
and
push
sbb
adc
adc
adc
adc
repz
test
js
test
add
xor
mov
mov
out
bound
outsl
es
jmp
in
leave
lahf
into
xchg
das
out
lcall
sbb
repnz
je
jp
movsb
loop
push
and
xchg
in
pusha
out
jnp
push
inc
idivl
mov
mov
or
imul
jns
lock
xor
ret
popf
divb
stc
and
sub
ds
aam
dec
fdivs
or
sbbl
cmp
dec
pop
aam
mov
jl
mov
pop
mov
ja
aaa
fists
sti
push
jb
and
rclb
fs
cmp
ja
mov
xor
lcall
loopne
out
insl
push
cmp
pop
in
adc
add
aam
cmp
adc
push
bound
xchg
dec
shlb
adc
xchg
jl
sbb
push
add
add
mov
mov
and
xlat
mov
push
ret
sub
dec
cmp
mov
add
inc
mov
push
push
popa
out
xchg
packssdw
mov
in
out
mov
xchg
insl
imul
xor
cwtl
mov
dec
xchg
pusha
lock
adc
xor
dec
mov
stos
sbb
jo
jecxz
aas
xor
loope
inc
pop
out
xchg
push
pop
imul
in
push
mov
in
mov
or
test
iret
cmp
cld
mov
sub
jb
stos
and
xor
dec
mov
mov
xor
repnz
cmp
jno
test
push
fdivrl
mov
mov
ds
ljmp
xchg
sbb
jno
xchg
bound
cmp
mov
mov
enter
lods
fnstcw
jle
popa
cmp
push
divl
add
push
push
cli
daa
cli
xor
test
insl
xchg
les
sbb
jo
xchg
sub
je
mov
cmp
sahf
lods
or
mov
in
cli
jmp
mov
popa
mov
fisttpl
push
inc
imul
mov
push
push
mov
inc
loopne
dec
mov
pop
ljmp
sbb
test
ljmp
cltd
shl
inc
shll
mov
popa
jb
adcl
lahf
inc
je
pop
mov
cltd
ret
push
cmp
and
xchg
jle
imul
adc
adc
aaa
pop
adc
sbb
and
push
and
pop
jg
jle
jmp
scas
mov
push
xchg
push
and
or
call
jne
and
int
lods
lods
je
pop
adc
cwtl
push
inc
inc
xlat
std
mov
out
dec
and
cmp
out
lcall
cli
cli
add
lea
mov
in
push
mov
dec
push
cmpsb
sub
ss
add
jno
aam
imul
js
jns
lret
cs
js
repz
pop
cmpsl
jg
cmpsl
pop
xor
out
and
addr16
pop
ror
ja
fsts
add
pop
popa
mov
add
cli
stc
fcmovne
mov
out
jnp
lcall
addr16
inc
cmc
adc
movl
andb
ficompl
and
inc
add
jge
and
pushf
fstps
mov
sub
lods
insb
xlat
cs
cwtl
xchg
xchg
repnz
loope
sahf
outsb
sti
mov
into
cmc
cli
or
xlat
lahf
cltd
scas
add
xor
add
pop
movsb
pop
lea
stc
lds
pushf
xorl
sub
lcall
into
dec
xor
lahf
nop
push
mov
inc
lock
and
add
xchg
dec
shlb
cmc
popf
sub
jb
jns
jle
insl
push
in
lret
inc
xchg
lock
sbbl
out
mov
cwtl
cmp
fsubl
xlat
clc
iret
jae
nop
es
sbb
adc
int
mov
add
pop
lret
cli
mov
jns
lea
lds
out
ljmp
jmp
lock
pusha
hlt
int
inc
xor
out
into
mov
fcmovnu
push
or
sbb
or
pop
jb
mov
cmp
push
gs
mov
mov
mov
mov
jmp
notl
sub
das
cmc
ljmp
add
adc
rorl
jae
cmp
sub
lods
loopne
lcall
adc
inc
iret
out
xor
sbb
sbb
loope
aas
clc
jg
jmp
out
clc
outsl
xchg
outsb
shll
lret
stos
in
aaa
adc
fld
xor
test
movsb
leave
dec
adc
adc
xchg
addr16
cmpsl
loopne
mov
outsb
aam
xor
fs
add
in
stos
mov
jecxz
je
in
sbb
jge
push
js
dec
push
jno
inc
push
mov
das
push
sahf
js
xchg
popf
xchg
or
aam
cli
xchg
sbb
out
shlb
mov
popa
popf
and
mov
fwait
inc
or
pop
mov
arpl
push
jb
sarb
mov
mov
push
mov
jl
loop
sub
dec
xor
addl
dec
popf
rorl
or
mov
sahf
sbb
inc
repz
add
sub
mov
push
or
jbe
mov
aas
cmp
fildll
jle
in
mov
loopne
fadds
inc
aam
movsl
inc
jbe
lods
outsl
or
mov
mov
xor
aam
mov
mov
dec
aam
xchg
enter
popa
fdiv
push
cs
dec
js
test
std
mov
add
adc
sub
mov
sahf
out
lds
inc
enter
sub
dec
or
scas
or
ret
fiadds
mov
xchg
jg
cld
and
cwtl
xor
lcall
int3
loopne
mov
std
out
fs
mov
mov
mov
mov
faddl
cmp
lods
pop
dec
push
imul
ja
sar
daa
cmp
test
pop
mov
in
stc
test
sbb
test
sbb
ret
jae
test
mov
bound
jl
mov
inc
scas
jge
je
cmp
pop
repnz
cmp
xorl
fstpt
sbb
mov
xor
xor
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
mov
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
and
add
xor
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
xor
mov
mov
lea
mov
mov
or
mov
mov
or
mov
mov
sub
add
xor
xor
lea
mov
sub
mov
movl
movl
movl
movl
movl
mov
and
add
mov
and
mov
imul
mov
xor
div
mov
push
sub
mov
mov
movl
movl
mov
sub
xor
pop
div
mov
xor
push
sub
add
mov
mov
movl
movl
mov
pop
div
mov
xor
xor
imul
sub
div
mov
xor
mov
movl
movl
movl
movl
movl
mov
mov
and
mov
div
xor
add
mov
div
sub
leave
ret
push
mov
sub
push
push
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
xor
mov
xor
mov
or
mov
mov
mov
or
or
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
mov
add
adc
and
and
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
mov
xor
or
mov
or
lea
xor
mov
mov
and
imul
mov
xor
sub
mov
and
sub
mov
mov
xor
or
xor
div
mov
push
push
sub
lea
mov
mov
mov
xor
imul
and
lea
mov
add
mov
mov
mov
mov
and
and
and
and
push
push
call
mov
xor
xor
add
adc
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
and
xor
div
mov
sub
mov
add
mov
add
add
add
mov
pop
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
movl
movl
movl
mov
mov
push
mov
push
xor
xor
push
push
call
push
mov
push
push
push
call
mov
mov
sub
mov
sbb
add
adc
mov
mov
xor
push
push
xor
xor
push
push
shr
mov
call
push
push
push
push
call
mov
mov
sub
sbb
add
adc
shld
shl
or
mov
xor
or
mov
xor
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
push
push
and
and
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
push
mov
push
xor
xor
push
push
call
mov
mov
add
adc
add
adc
xor
xor
mov
shrd
mov
mov
mov
mov
mov
xor
mov
xor
xor
mov
push
push
xor
push
push
shr
call
mov
mov
add
xor
or
sub
shl
or
mov
mov
mov
mov
mov
mov
or
or
add
adc
and
mov
and
mov
xor
xor
and
and
add
mov
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
sub
mov
and
imul
mov
mov
xor
mov
sub
mov
xor
add
cmp
jne
mov
mov
or
mov
imul
add
mov
push
mov
push
mov
or
mov
imul
add
mov
or
or
mov
add
add
mov
xor
xor
mov
mov
shl
mov
add
add
mov
mov
mov
imul
or
imul
mov
sub
pop
pop
cmp
je
mov
jmp
mov
mov
sub
add
add
add
xor
jmp
movl
movl
mov
mov
or
sub
add
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
imul
or
mov
mov
xor
mov
and
mov
or
and
xor
sub
mov
sub
mov
mov
xor
add
div
mov
mov
or
mov
sub
add
cmp
ja
push
movl
movl
movl
movl
movl
mov
mov
mov
and
xor
div
mov
mov
xor
or
xor
div
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
xor
and
xor
mov
div
add
mov
mov
xor
mov
and
mov
or
and
xor
mov
sub
mov
mov
xor
add
div
mov
or
mov
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
sub
push
push
mov
mov
sub
or
mov
mov
shrd
mov
mov
sub
imul
shr
sbb
mov
mov
xorl
mov
mov
mov
and
xor
xor
notl
or
sub
mov
mov
and
shl
sub
mov
not
shrd
dec
xor
add
shr
or
mov
cmpl
jg
xorl
jmp
push
push
push
push
push
push
push
call
mov
xor
or
mov
mov
mov
sub
mov
sbbl
mov
addl
mov
mov
mov
xorl
mov
xor
xor
xor
xor
xor
adc
mov
xor
cmpl
jge
jmp
push
pushl
pushl
pushl
call
shl
mov
mov
shld
shl
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
sbb
mov
mov
xor
mov
mov
xorl
xor
sbbl
xor
orl
xor
shld
movl
shl
cmp
movl
jne
cmp
movl
je
addl
mov
mov
xorl
shl
cmpl
jbe
jmp
call
mov
xor
shr
or
mov
mov
mov
cmpl
jb
and
movl
jmp
pushl
pushl
pushl
push
call
mov
mov
mov
push
pop
orl
sub
xorl
mov
add
xorl
mov
lea
add
mov
cmpl
jle
mov
and
mov
and
jmp
push
call
mov
mov
xor
shr
shl
or
mov
adc
movl
mov
inc
mov
andl
xor
shr
orl
shl
or
subl
push
adcl
lea
addl
push
lea
push
call
or
mov
mov
xor
neg
shr
shl
andl
or
or
push
lea
push
mov
orl
mov
shrd
shr
mov
mov
xorl
xor
xor
sbbl
or
addl
lea
push
sbbl
shl
call
decl
mov
mov
cmpl
jl
add
jmp
pushl
call
xor
shl
shr
or
push
lea
push
mov
cmpl
jge
xor
xor
add
adc
mov
jmp
push
push
push
push
pushl
push
pushl
push
push
call
mov
shrd
orl
shr
mov
mov
sbbl
xor
shl
addl
xor
movl
or
negl
lea
xorl
push
sbbl
call
adc
mov
cmpl
jl
adcl
jmp
push
pushl
push
push
pushl
call
mov
xor
shl
shr
or
push
lea
mov
and
mov
push
cmpl
jle
subl
jmp
push
push
push
call
mov
mov
shrd
shr
mov
mov
xor
addl
xor
movl
or
shl
mov
mov
sbbl
shrd
shr
mov
sub
mov
xor
xor
or
addl
add
sbbl
lea
addl
push
orl
shl
negl
call
mov
not
mov
shl
xor
shr
cmpl
jle
xor
jmp
pushl
push
pushl
pushl
call
or
push
lea
push
mov
mov
adc
shrd
shr
mov
mov
xor
cmpl
jbe
subl
sbb
jmp
pushl
push
call
shl
mov
xor
or
mov
shrd
orl
shr
mov
cmpl
jl
jmp
push
push
pushl
call
mov
xor
xor
or
add
mov
shl
or
mov
sub
shrd
shr
decl
mov
add
mov
sbbl
xor
subl
xor
orl
or
andl
add
lea
push
shl
call
mov
mov
sub
and
mov
cmpl
jl
jmp
push
push
push
pushl
call
mov
xor
shr
shl
or
mov
lea
push
dec
mov
mov
cmpl
ja
xor
jmp
push
push
push
call
shrd
shr
mov
mov
xor
xor
cmpl
jle
add
jmp
push
push
pushl
pushl
pushl
call
or
push
mov
mov
push
pushl
shl
xorl
call
sbb
lea
adcl
push
mov
mov
sub
xor
mov
mov
add
mov
mov
xor
mov
shrd
adc
shr
xor
xor
and
mov
cmpl
jle
adcl
jmp
push
call
mov
xor
xor
or
push
mov
push
pushl
sbbl
shl
subl
call
sbb
mov
mov
mov
add
mov
and
mov
mov
not
mov
mov
rol
mov
and
mov
mov
adcl
xor
movl
mov
cmp
je
movl
mov
mov
movl
mov
xor
mov
mov
mov
mov
xor
xor
shld
shl
mov
movl
mov
mov
xor
inc
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
sbb
mov
mov
or
mov
jne
neg
mov
mul
ret
addl
push
sbbl
mul
and
mov
mov
mull
addl
add
mov
mul
add
pop
ret
push
mov
sub
push
push
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
mov
mov
sub
mov
or
mov
imul
mov
sub
or
add
sub
shr
lea
mov
mov
mov
and
xor
xor
div
mov
sub
cmp
ja
push
movl
movl
mov
mov
xor
sub
and
xor
mov
sub
sub
mov
mov
xor
mov
div
mov
xor
sub
div
mov
mov
add
sub
mov
mov
mov
sub
or
mov
xor
xor
add
mov
sub
or
add
shr
lea
mov
mov
mov
and
xor
xor
div
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
xor
push
mov
inc
pushl
pushl
call
test
je
mov
mov
mov
xor
or
add
mov
mov
xor
add
sbb
mov
mov
cmpl
jg
sbb
jmp
push
push
push
pushl
push
call
movzwl
mov
xor
mov
sub
mov
or
cmpl
jle
jmp
push
push
pushl
push
call
mov
imul
movzwl
and
mov
mov
mov
and
mov
mov
or
mov
movl
cmp
jne
movl
inc
movl
xor
movl
movl
cmpl
ja
xor
or
jmp
pushl
call
movl
movl
mov
mov
and
xorl
sub
xorl
or
addl
mov
sub
cmpl
jb
sub
jmp
pushl
push
pushl
call
pushl
mov
mov
imul
xor
div
or
mov
orl
pushl
addl
pushl
xorl
pushl
imul
sbb
mov
xorl
sub
incl
pushl
call
adc
movl
mov
xor
add
sub
movl
sbbl
mov
or
movl
orl
movl
cmpl
jl
sbb
jmp
push
pushl
push
push
pushl
call
movl
mov
xor
mov
div
mov
subl
xor
adcl
xor
or
sub
not
mov
pushl
cmpl
jbe
andl
jmp
push
push
push
push
call
mov
and
imul
mov
xor
pushl
or
mov
xorl
div
mov
subl
xor
xor
subl
div
cmpl
jle
andl
sbb
jmp
push
push
push
pushl
call
mov
xor
or
div
mov
sub
addl
pushl
subl
pushl
call
andl
movl
movl
cmpl
jbe
and
jmp
push
push
pushl
push
call
mov
mov
and
or
or
mov
orl
movl
movl
xorl
movl
dec
movl
cmp
movl
jne
addl
movl
cmpl
jl
inc
jmp
push
call
mov
mov
movl
mov
call
lea
mov
lea
or
mov
mov
or
mov
mov
decl
mov
xor
xor
shl
shr
or
cmpl
ja
jmp
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
movl
shrd
cmpl
jg
mov
mov
xor
jmp
push
call
shr
mov
mov
mov
movl
xor
xor
or
subl
mov
push
pushl
xorl
lea
addl
push
shl
call
lea
orl
push
sbbl
mov
mov
orl
lea
sbbl
push
orl
mov
andl
lea
mov
mov
addl
mov
sbbl
push
call
movl
push
sbbl
push
xorl
pushl
addl
call
mov
add
mov
xorl
mov
mov
orl
shr
xorl
shl
subl
or
mov
adcl
xor
mov
addl
lea
sbb
mov
lea
cmpl
jle
inc
jmp
pushl
push
push
call
mov
mov
sub
lea
xor
movl
mov
xor
movl
mov
xor
mov
mov
cmpl
jge
dec
jmp
push
push
call
mov
or
or
push
push
push
push
call
cmpl
ja
notl
jmp
pushl
push
push
push
call
or
mov
or
mov
movl
movl
movl
cmpl
jle
jmp
pushl
call
push
movl
mov
mov
push
push
push
call
mov
sub
mov
addl
and
and
mov
xor
xor
sub
sub
mov
cmpl
jb
or
jmp
push
pushl
call
mov
add
adc
xor
xor
cmp
movl
jb
ja
movl
cmp
movl
jbe
mov
or
mov
movl
movl
movl
xor
movl
movl
movl
mov
andl
mov
orl
mov
add
mov
adcl
and
incl
and
or
xorl
or
xorl
add
mov
movl
adc
mov
andl
add
movl
mov
mov
adc
mov
cmpl
jl
orl
jmp
pushl
call
movl
movl
movl
movl
movl
movl
mov
xor
mov
mov
add
mov
xor
orl
xor
orl
and
mov
adcl
and
mov
push
push
sbbl
push
push
movl
call
sub
mov
sub
mov
add
movl
adc
or
or
cmp
movl
jne
movl
cmp
je
cmpl
jg
or
jmp
push
pushl
push
call
mov
mov
mov
xor
xor
xor
orl
shld
movl
shl
movl
cmp
jne
cmp
movl
je
mov
movl
cmp
je
incl
mov
mov
mov
mov
cmpl
jg
andl
jmp
push
call
xor
xor
shrd
mov
shr
shl
or
mov
adcl
xor
orl
or
movl
cltd
movl
cmp
jne
movl
cmp
jne
movl
sub
movl
cmpl
ja
jmp
push
pushl
call
mov
mov
mov
mov
xor
xor
xor
addl
shld
shl
movl
cmp
movl
jne
movl
cmp
movl
jne
xorl
movl
xor
mov
mov
mov
sub
shrd
add
shr
mov
sub
mov
subl
xor
adcl
shl
xor
or
movl
mov
mov
cmp
movl
jne
addl
movb
orl
movb
sbbl
mov
decl
mov
sbbl
add
movzbl
addl
cltd
movzbl
adcl
idiv
mov
orl
movb
orl
movb
andl
movb
orl
mov
mov
and
imul
mov
and
mov
xor
cmp
je
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
mov
xor
mov
sub
mov
sbb
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
or
or
xor
mov
xor
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
cmp
jb
ja
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
xor
inc
mov
mov
mov
mov
mov
mov
mov
movzwl
movzwl
and
mov
xor
cltd
movzwl
idiv
push
pop
mov
xor
inc
mov
mov
mov
mov
movzwl
cltd
idiv
mov
movzwl
movzwl
cltd
idiv
mov
add
cmp
jb
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
mov
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
mov
mov
mov
movzwl
mov
imul
mov
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shl
shr
or
xor
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
dec
movl
movl
cmpl
jbe
inc
jmp
push
push
pushl
call
mov
add
xor
mov
xor
xor
and
mov
orl
movl
movl
mov
xor
cmpl
jb
sub
jmp
push
pushl
call
mov
imul
add
or
sub
mov
sbb
movl
movl
adc
movl
orl
movl
movl
xor
xor
and
mov
movl
sbb
mov
imul
movzbl
or
mov
mov
sub
xor
cmpl
jb
adc
jmp
pushl
pushl
call
mov
xor
and
mov
mov
and
cmpl
jb
jmp
push
call
sub
mov
and
xor
mov
add
mov
movl
movl
movl
xor
movl
mov
mov
or
mov
adcl
xor
div
andl
add
and
mov
subl
imul
and
sub
mov
andl
movl
sub
movl
cmpl
jbe
xor
jmp
push
push
push
call
movl
mov
mov
lea
shr
mov
subl
xor
orl
and
add
sub
cmpl
jg
and
jmp
call
mov
movl
movl
movl
mov
and
cmpl
jbe
neg
jmp
call
mov
sub
add
mov
and
mov
orl
sub
cmpl
jl
xorl
jmp
pushl
pushl
pushl
push
call
mov
movl
movl
movl
mov
add
adc
mov
sub
sub
add
xor
mov
movl
movl
movl
mov
sub
mov
sbbl
lea
andl
imul
mov
decl
xor
xor
mov
sbb
sub
cmpl
ja
mov
xor
jmp
push
push
pushl
call
mov
movl
movl
movl
mov
mov
sub
add
xorl
or
movzwl
sub
sub
cmpl
jge
jmp
push
push
push
call
mov
xor
sub
mov
movl
movl
movl
cmpl
jge
add
jmp
pushl
call
movl
movl
movl
movl
movl
mov
cmpl
jbe
add
jmp
pushl
call
mov
sub
add
mov
sub
mov
orl
sub
xorl
add
push
andl
call
mov
imul
mov
dec
xor
mov
cmpl
jb
xor
andl
jmp
pushl
push
call
lea
mov
and
mov
sub
add
mov
movl
movl
movl
mov
add
movl
cmpl
jle
jmp
pushl
pushl
call
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
mov
mov
notl
mov
subl
xor
xor
and
sub
mov
sbb
lea
mov
mov
mov
xor
xor
sub
add
mov
cmpl
jg
or
jmp
pushl
push
push
push
pushl
call
mov
mov
imul
and
sub
sub
add
mov
movzbl
sbb
lea
cmpl
jb
xor
or
mov
sub
xor
or
jmp
call
mov
adc
movl
or
movl
cmpl
jbe
jmp
push
call
movl
movl
mov
mov
mov
xor
xor
movl
mov
call
adc
mov
mov
adc
mov
sub
mov
add
mov
xor
addl
xor
xorl
mov
sbbl
call
sbbl
or
or
cmpl
jbe
jmp
push
pushl
call
mov
mov
xor
xor
mov
call
mov
add
mov
sbbl
mov
mov
add
mov
sbbl
xor
xor
mov
add
mov
mov
andl
mov
subl
mov
call
mov
mov
and
mov
adcl
or
mov
or
push
push
push
xorl
push
adcl
call
movl
mov
cmp
movl
jne
cmpl
jb
inc
jmp
push
push
pushl
push
call
mov
mov
xor
xor
mov
call
and
mov
adcl
mov
mov
and
mov
add
mov
xor
xor
subl
mov
sbbl
call
sbbl
or
or
cmpl
ja
jmp
pushl
push
pushl
push
push
call
mov
mov
xor
xor
mov
call
mov
adc
mov
mov
movzbl
adc
mov
subl
xor
decl
xor
addl
mov
mov
mov
adcl
call
subl
or
adc
mov
or
orl
push
xorl
push
push
sbbl
push
call
movl
mov
movl
jmp
movl
jmp
lea
movzwl
or
mov
mov
xor
mov
not
movl
mov
sub
xor
sbb
shr
mov
xor
addl
shl
or
or
mov
sub
mov
dec
mov
or
mov
orl
mov
sbb
mov
and
mov
sbbl
xor
andl
xor
mov
adcl
call
mov
sbb
mov
add
mov
cmpl
jg
subl
jmp
push
call
mov
xor
xor
mov
call
or
and
or
xor
mov
cmpl
jb
jmp
pushl
push
call
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
xor
mov
mov
subl
mov
adcl
mov
call
sub
mov
orl
or
mov
or
andl
push
incl
push
push
orl
push
call
mov
movl
cmp
je
mov
mov
xor
orl
xor
andl
mov
call
mov
mov
dec
mov
cmpl
ja
jmp
pushl
call
mov
xor
xor
mov
call
or
or
mov
xorl
imul
addl
add
mov
mov
mov
mov
jmp
jmp
mov
movl
mov
orl
xor
xor
mov
notl
call
sbb
mov
cmpl
jbe
mov
sub
jmp
pushl
push
pushl
call
mov
mov
mov
xor
xor
adcl
mov
addl
call
orl
or
or
or
sbb
mov
movzbl
or
mov
xor
xor
adcl
mov
call
negl
mov
or
mov
cmpl
jg
adc
jmp
pushl
push
push
pushl
call
mov
mov
xor
xor
mov
mov
subl
mov
adcl
call
xorl
or
mov
sbbl
or
orl
push
andl
push
push
sbbl
push
addl
call
movl
mov
jmp
or
mov
cmpl
jle
or
jmp
push
push
call
mov
xor
xor
mov
call
mov
mov
cmpl
jle
jmp
push
push
pushl
pushl
call
mov
mov
xor
xor
mov
call
or
or
movl
mov
movl
jmp
cmpl
ja
movl
sbbl
jmp
pushl
pushl
push
push
pushl
pushl
push
call
mov
mov
xor
xor
mov
subl
call
addl
mov
adc
mov
sbb
mov
not
mov
xor
xorl
xor
subl
mov
call
add
or
or
or
mov
cmpl
jg
jmp
push
push
push
call
mov
or
mov
xor
imul
and
add
sbb
mov
lea
cmpl
jle
mov
sub
jmp
push
push
pushl
push
pushl
call
mov
movl
movl
movl
movl
movl
movl
or
movl
movl
and
movl
cmpl
ja
and
jmp
push
call
mov
add
mov
or
add
mov
adc
imul
orl
xor
mov
add
add
sub
mov
cmpl
jb
movzbl
and
mov
mov
and
mov
jmp
push
push
pushl
push
pushl
pushl
push
push
push
pushl
push
push
push
pushl
call
and
cmpl
jb
add
jmp
push
push
push
push
call
sub
mov
sub
mov
sub
mov
xor
and
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
imul
add
xor
mov
lea
mov
imul
mov
sub
imul
mov
xor
div
mov
and
mov
sub
mov
add
mov
xor
mov
imul
or
add
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
or
mov
sub
xor
add
mov
and
mov
or
mov
sub
mov
mov
imul
imul
sub
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
jle
jmp
push
pushl
pushl
call
push
push
mov
or
jne
mov
mov
xor
mov
adc
div
neg
mov
mov
div
movl
mov
jmp
cmpl
jle
or
jmp
call
mov
mov
mov
mov
shr
rcr
adcl
shr
rcr
xorl
or
jne
adc
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
sbbl
subl
movl
cmpl
je
sbb
add
mov
movzbl
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
shld
movl
shl
ret
movzbl
sub
mov
xor
and
shl
ret
xor
xor
ret
