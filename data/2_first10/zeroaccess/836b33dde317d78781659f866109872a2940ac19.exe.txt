push
mov
sub
xorl
push
movzwl
sub
mov
push
push
andl
call
test
movl
je
adcl
xor
jmp
push
push
xor
andl
inc
push
push
call
xorl
test
movl
je
xor
movl
jmp
sbbl
push
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
push
subl
push
movl
push
call
andl
test
jne
push
push
adcl
call
test
movl
jne
push
push
call
xorl
test
jne
addl
push
andl
push
addl
call
test
movl
jne
push
xorl
push
push
subl
call
notl
test
movl
jne
push
push
adcl
push
call
test
jne
xorl
push
andl
push
subl
call
subl
test
jne
push
push
andl
call
test
movl
jne
andl
push
sbbl
push
addl
call
test
movl
jne
push
andl
push
push
call
orl
test
jne
addl
push
andl
push
push
andl
call
xorl
test
jne
push
push
xorl
call
movl
test
movl
jne
subl
push
xorl
push
andl
call
test
movl
jne
subl
push
adcl
push
xorl
call
test
movl
jne
push
xorl
push
push
decl
call
test
movl
jne
push
push
adcl
push
sbbl
call
xorl
test
movl
jne
push
orl
push
call
test
movl
jne
andl
push
push
addl
call
adcl
test
jne
push
push
orl
call
test
jne
push
push
addl
push
call
subl
test
movl
jne
push
addl
push
push
xorl
call
movl
test
jne
push
push
call
andl
test
movl
jne
orl
push
push
negl
call
orl
test
movl
jne
subl
push
push
call
test
jne
xorl
push
push
sbbl
push
adcl
call
xorl
test
movl
jne
sbbl
push
push
xorl
push
addl
call
sbbl
test
jne
orl
push
push
adcl
call
test
jne
sbbl
push
adcl
push
xorl
call
test
movl
jne
addl
push
subl
push
xorl
call
addl
test
jne
xorl
push
notl
push
andl
push
call
test
jne
push
push
push
xorl
call
sbbl
test
movl
jne
movl
push
addl
push
call
test
jne
andl
push
xorl
push
call
subl
test
movl
jne
push
push
call
orl
test
jne
subl
push
adcl
push
push
andl
call
addl
test
movl
jne
addl
push
push
adcl
push
call
adcl
test
movl
jne
subl
push
push
subl
call
subl
test
movl
jne
adcl
push
adcl
push
call
orl
test
jne
subl
push
push
call
orl
test
movl
jne
push
push
push
orl
call
test
jne
push
movl
push
movl
push
call
test
movl
jne
movl
push
xorl
push
call
test
movl
jne
push
subl
push
subl
call
addl
test
movl
jne
subl
push
push
call
subl
test
movl
jne
sbbl
push
adcl
push
adcl
push
xorl
call
andl
test
jne
movl
push
xorl
push
xorl
push
andl
call
adcl
test
movl
jne
subl
push
addl
push
subl
call
xorl
test
jne
addl
push
push
adcl
call
test
jne
push
addl
push
call
orl
test
movl
jne
subl
push
push
andl
push
xorl
call
adcl
test
movl
jne
push
movl
push
push
call
addl
test
movl
jne
movl
push
subl
push
call
test
movl
jne
push
push
call
addl
test
jne
addl
push
subl
push
call
test
movl
jne
sbbl
push
xorl
push
addl
push
addl
call
movl
test
movl
jne
andl
push
push
push
call
sbbl
test
movl
jne
xorl
push
adcl
push
adcl
call
addl
test
movl
jne
adcl
push
adcl
push
call
test
movl
jne
adcl
push
xorl
push
subl
call
xorl
test
jne
push
adcl
push
push
andl
call
andl
test
jne
push
push
subl
push
call
test
jne
push
push
sbbl
call
test
movl
jne
subl
push
push
call
test
movl
jne
adcl
push
subl
push
andl
call
test
movl
jne
andl
push
orl
push
orl
push
adcl
call
andl
test
jne
orl
push
push
push
call
sbbl
test
movl
jne
sbbl
push
push
call
sbbl
test
movl
jne
sbbl
push
orl
push
call
test
movl
je
subl
xor
movl
jmp
or
movl
movzbl
add
mov
dec
mov
mov
mov
mov
sub
imul
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
sbbl
lea
mov
mov
and
mov
lea
mov
subl
mov
mov
orl
mov
mov
mov
adc
xor
mov
add
movl
mov
mov
mov
cmp
jne
xor
mov
mov
orl
mov
or
xor
and
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
sub
mov
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
xor
xor
add
mov
sub
mov
mov
sbb
mov
mov
orl
mov
mov
decl
mov
subl
mov
andl
mov
mov
addl
movl
adcl
mov
andl
xor
add
movl
jmp
add
mov
adcl
mov
xor
subl
lea
push
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
sub
mov
adcl
xor
lea
push
addl
mov
pushl
xorl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
xor
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
andl
mov
xor
mov
addl
xor
xor
andl
add
mov
negl
xor
lea
movl
mov
movl
cmp
movl
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
adcl
inc
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
movzwl
xor
mov
mov
sbb
push
mov
sbb
mov
mov
mov
add
xor
add
mov
subl
push
mov
add
movl
cmp
movl
je
inc
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
sbb
mov
xorl
xor
xorl
xor
addl
add
add
movl
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
jmp
jmp
iret
push
jae
lret
xchg
mov
push
jp
xlat
pop
jp
adc
and
imul
xor
fsub
push
dec
imul
pusha
insl
pop
iret
pop
dec
and
jg
jo
jg
mov
fdivr
push
jg
in
cmp
mov
mov
mulps
fldl
push
cli
sbb
imul
adc
cmpsb
jmp
enter
cli
js
arpl
cwtl
pop
mov
repz
cmp
jae
fisubrl
push
jecxz
mov
mov
in
push
dec
or
repz
rolb
push
push
movsl
stc
push
jo
sub
es
pop
dec
sub
gs
in
aaa
dec
test
pop
cmp
lods
jo
fists
shll
testl
mov
js
out
push
or
push
dec
fsubrp
xchg
repz
sahf
mov
mov
pop
iret
mov
ret
adc
cmp
mov
xchg
sub
stos
rcll
mov
adc
iret
and
fstps
cmp
mov
or
and
repz
jle
pop
mov
ja
out
jmp
mov
or
jle
scas
pushf
insl
mov
or
out
daa
sbb
pop
js
add
pop
nop
jnp
and
in
mov
scas
jbe
mov
adcl
sbb
fcoms
ficoms
inc
sub
callw
jmp
mov
add
jne
frstor
inc
or
out
cmc
mov
add
lret
add
add
lock
or
xchg
mov
lods
out
dec
inc
icebp
insl
mov
aad
inc
es
test
fwait
dec
pop
push
cmp
subb
int3
mov
notb
xchg
adc
xor
add
js
cmp
add
fadds
mov
jno
fstl
cmp
cmp
fcomps
jg
nop
mov
sbb
push
mov
das
mov
scas
iret
sbb
aad
sahf
outsb
test
mov
stos
sahf
add
aam
sub
or
loop
xchg
or
add
dec
hlt
aam
and
add
or
in
mov
dec
xor
out
bswap
xlat
nop
mov
cmc
unpckhps
cmp
popf
cmpsb
out
lds
out
insb
mov
dec
sbb
aaa
lcall
decb
icebp
jmp
adc
jl
jnp
call
xchg
push
adc
les
cmpsl
loop
dec
push
mov
int
mov
dec
mov
mov
mov
shlb
jl
mov
jns
leave
jnp
mov
xchg
or
mov
les
mov
and
iret
xor
mov
outsl
pmaddwd
jns
in
testl
push
lods
js
mov
push
ret
out
jge
ret
mov
pop
push
dec
sti
mov
mov
pop
push
mov
adc
dec
dec
imul
ja
xlat
sub
les
rol
lods
scas
shrl
movsb
xlat
in
jno
push
faddl
pop
adc
xchg
es
pop
loopne
jbe
clc
sbb
mov
addl
sbb
and
outsl
adc
rcrb
mov
stos
push
out
fcmovne
jnp
rol
dec
push
xchg
xchg
and
mov
popa
push
aaa
test
push
mov
fidivrs
nop
cli
mov
scas
push
or
in
xchg
sub
ds
or
add
pop
xchg
push
push
rcrl
xchg
fcmove
mov
test
test
jecxz
inc
adc
fldl
sbb
leave
pushf
jecxz
push
jmp
dec
test
fisubs
or
js
mov
stos
xchg
push
cwtl
ret
std
mov
out
insl
xor
pop
jb
cli
repz
cmp
mov
xor
xchg
xlat
dec
outsl
mov
ret
xchg
xlat
and
outsb
xor
cld
jl
fbld
xchg
fsubr
sub
jbe
ret
dec
aas
jbe
mov
cmpsb
inc
stos
jno
xchg
movsb
rorl
call
movsl
push
mov
pop
out
aaa
jp
inc
or
sub
aam
das
out
rorb
pop
popf
cmp
push
ds
or
icebp
lcall
or
sbb
ja
sub
or
adc
cwtl
lcall
xor
mov
or
lret
scas
icebp
ja
xchg
jae
sbbb
sub
or
mov
dec
les
subl
test
dec
je
mov
call
push
ret
mov
rol
jo
pop
add
pop
ljmp
jp
mov
test
jmp
pop
insb
mov
xchg
cmp
xchg
add
add
xchg
push
mov
stos
inc
dec
fnstcw
loopne
jl
jne
stc
outsb
dec
ljmp
fucomip
or
repnz
mov
push
fsts
daa
arpl
aad
repnz
cmp
xlat
repnz
icebp
push
ja
push
jecxz
xchg
and
in
inc
inc
pushf
in
dec
vaddpd
insb
call
cmp
adc
xchg
nop
dec
add
inc
xchg
jl
mov
out
std
fimuls
jne
cmp
pushf
cmpsl
mov
test
cmp
dec
orb
shll
add
sbb
imul
hlt
into
sub
mov
rcrl
cltd
xchg
shlb
mov
scas
dec
into
dec
aad
or
out
dec
lahf
in
add
adc
push
loope
xlat
push
cmpb
or
es
cmp
or
sbb
pop
mov
mov
jne
test
inc
rorl
repnz
in
out
movsl
cmp
nop
mov
jne
cmc
inc
enter
mov
mov
mov
fistl
insb
cmp
outsb
sbb
inc
push
mov
and
std
jmp
inc
scas
xor
cwtl
pushf
scas
shrb
jno
fwait
data16
mov
mov
jl
fnsave
fdivs
mov
imul
ljmp
mov
iret
and
inc
push
mov
push
jbe
adc
xor
xlat
aas
push
scas
lahf
xchg
inc
and
stc
stos
lods
pushf
cmc
pop
jecxz
addb
das
fwait
jmp
movsb
or
cli
sarb
sbb
int3
and
lret
out
push
mov
fimuls
sbb
stos
popa
xchg
jg
mov
out
fst
test
popf
bound
inc
in
mov
or
sbbb
shl
xchg
sub
xor
repnz
add
aam
inc
scas
dec
movsl
cmp
mov
ret
insb
inc
daa
cmp
jae
inc
sub
jecxz
jne
dec
aam
out
ds
subl
test
dec
js
push
fcomps
cmp
fstpt
mov
sub
xchg
mov
out
sub
pop
sahf
sub
mov
in
and
scas
cmp
jb
and
xchg
test
outsl
pop
pushf
mov
adc
xchg
jg
jp
clc
leave
fs
popf
out
or
dec
inc
cwtl
pop
movsb
sub
xor
les
xchg
dec
xchg
add
lcall
mov
cwtl
cwtl
rcll
mov
das
inc
cmpb
sti
xchg
xchg
das
fwait
loope
bound
jnp
ret
pop
fbld
pop
cs
aad
mov
loopne
out
push
out
inc
idivb
inc
test
pop
mov
cmc
daa
sub
mov
jns
movb
push
rcrl
lods
push
ss
sbb
dec
mov
inc
scas
pop
jb
inc
inc
jp
jae
pusha
pop
cmp
arpl
vpsllw
bound
dec
or
iret
dec
or
cmpsb
aaa
mov
or
xor
stos
adc
lret
push
jo
shlb
push
xor
sub
fwait
add
xchg
xchg
jae
xor
push
fsubrl
loop
jnp
xlat
repnz
inc
cmp
sub
cmp
or
lods
adc
xor
sbb
xchg
aaa
mov
ljmp
mov
cmp
mov
fimuls
mov
jmp
and
lods
xchg
sbb
xchg
stc
rcrl
or
out
or
pop
stc
push
cs
arpl
das
idivb
ljmp
jb
xor
push
mov
sub
les
push
jecxz
jb
outsb
fstps
cmc
arpl
adc
sarl
sbb
data16
das
pop
gs
es
sub
and
cwtl
xchg
js
iret
lahf
sti
rcl
xchg
mov
les
adc
xchg
in
fnstsw
sbb
push
ds
mov
xor
push
mov
popa
push
cltd
ja
in
mull
push
int3
adc
outsb
lods
ja
xchg
andb
xchg
stc
mov
js
push
xchg
les
add
push
inc
in
gs
mov
xor
nop
sarl
push
inc
dec
cmp
idivb
repnz
inc
outsl
jne
sub
dec
call
cmp
shr
mov
pop
in
inc
sbb
mov
ja
jle
cmp
or
sbb
xchg
xor
cmpsb
cmpsb
inc
sahf
sbb
imul
adc
mov
or
loop
jo
aaa
sub
cmp
lahf
cmp
shlb
in
cmp
rcr
lock
add
cs
sbb
mov
inc
push
mov
nop
cmp
cmp
dec
pop
mov
dec
or
in
add
fmull
or
cltd
ret
sbb
mov
xchg
ljmp
sub
dec
imul
jge
pop
add
jecxz
add
mov
xchg
cwtl
xchg
pop
or
not
ja
xor
sub
lods
stos
jns
scas
dec
cltd
scas
pop
or
dec
pop
aaa
xor
and
loopne
add
incw
test
dec
adc
push
aas
aas
sbb
or
popa
jbe
pop
mov
sbb
addr16
pushf
xor
or
gs
sahf
lea
push
enter
lock
add
sbb
inc
xor
and
sbb
es
push
aaa
cmp
jle
mov
insb
sub
add
cs
dec
js
push
mov
fisubl
cld
popa
cmc
insb
pop
dec
mov
mov
inc
mov
mov
fildll
and
xor
sbb
movhps
mull
mov
mov
cmp
repz
lretw
mov
subl
jne
pop
jno
push
inc
push
mov
xchg
mov
pinsrw
mov
outsl
ljmp
inc
jb
jl
or
div
mov
push
stos
lods
jae
xorl
mov
movsb
in
imul
cwtl
shrl
cltd
jg
repnz
xorl
gs
aam
fstps
cmp
imul
sbb
in
imul
lahf
xchg
aad
and
in
jl
int
cld
mov
mov
lods
push
push
mov
pop
dec
int3
roll
add
inc
cli
mov
imul
je
outsl
push
or
xchg
sub
push
sub
scas
pop
movsl
call
es
cwtl
fmuls
pop
pop
and
jmp
mov
add
into
loopne
repnz
or
or
aaa
ja
repnz
repz
jno
daa
dec
xchg
int
cmp
xchg
sbb
push
popa
jns
adc
stos
sbb
xchg
and
cmp
fistps
addr16
lcall
stc
addr16
out
pusha
psubusb
dec
outsb
sbb
sub
lahf
dec
push
repz
and
sbb
cmpsl
icebp
jbe
idivl
popf
pushf
dec
repnz
aad
sub
adc
or
lret
stc
ret
or
insl
push
aaa
mov
std
jmp
mov
cmpsl
imul
add
fildll
jae
and
push
or
mov
cmp
sub
jno
dec
sub
xchg
not
push
inc
and
gs
repnz
das
sub
fwait
jnp
jp
and
rolb
jecxz
shl
scas
nop
push
jo
mov
inc
fs
arpl
insl
clc
mov
ljmp
cli
rorb
into
dec
mov
sub
xchg
xchg
inc
pop
jmp
stc
xchg
out
lods
lock
aas
or
adc
lods
ret
dec
test
dec
insl
push
mov
sti
or
dec
or
outsl
jge
bound
call
inc
xor
jno
lahf
hlt
xchg
jno
mov
psrad
nop
mov
fwait
add
scas
repz
fucomp
xor
xlat
push
xor
add
and
adc
notl
pop
pushf
mov
sti
loope
mov
push
hlt
inc
dec
jbe
add
add
loopne
mov
or
xchg
cmp
xor
icebp
icebp
shr
mov
lret
pop
inc
ss
mov
out
sbb
fisubrl
aam
dec
or
dec
jns
jno
pop
repz
in
mov
push
insl
sbb
repz
in
ret
jg
sub
arpl
stos
mov
ffree
aas
out
mov
sbb
dec
or
xchg
repz
or
push
loopne
orb
in
sti
cmp
cmp
nop
ficompl
ds
test
pop
cmpsb
js
cmp
je
dec
mov
adc
int
data16
add
jae
cmp
jecxz
add
add
shr
add
add
sbb
je
rclb
pop
and
mov
and
iret
mov
xor
fisubrl
mov
clc
pop
cwtl
cmc
ret
adc
ficompl
xchg
ljmp
jnp
pop
loope
enter
push
outsb
cltd
fisubs
or
inc
insb
aam
out
jmp
test
pop
adc
ficomps
sbb
inc
ret
push
xor
push
xor
inc
stc
inc
inc
cltd
sti
scas
lds
jnp
lds
sub
dec
imul
bound
lock
mov
xchg
inc
xadd
nop
mov
cli
iret
test
loopne
xor
or
ss
add
pushf
dec
lret
aam
inc
outsb
inc
lods
repnz
cs
jae
sahf
mov
push
inc
jp
cmp
test
mov
pop
fxch
push
sti
out
xor
cs
push
push
es
pop
mov
cmpl
push
cmp
mov
dec
and
pop
lods
ljmp
cwtl
loop
mov
lea
movsl
sahf
in
jmp
cmp
daa
xlat
and
sbb
jno
std
cmpsb
cs
ret
popa
dec
jnp
leave
pop
sub
fisttpll
xor
shll
xchg
test
mov
mov
ret
test
nop
pop
in
mov
sub
aaa
pop
xor
jno
xor
les
pop
xchg
sbb
nop
mov
fwait
inc
xlat
pop
sub
inc
adc
imull
inc
les
fsub
mov
xor
and
or
outsb
in
fldl
cmc
stos
mov
lret
dec
push
adc
cmp
cmp
xchg
jne
aas
cmc
rolb
adc
mov
stos
lcall
sub
iret
xchg
dec
pop
adc
lret
pop
cmp
mov
cwtl
fbld
jns
pop
cltd
xchg
sbb
shl
adc
cmp
jle
jle
dec
popa
xchg
jns
movsl
mov
mov
adc
hlt
fmull
test
mov
sahf
call
jae
jp
fcompl
jno
cmp
addb
xchg
sbb
fsubl
inc
adc
or
rcr
xchg
loopne
popf
movsl
sbb
iret
movsl
pop
arpl
decl
test
adc
ret
fs
sbb
stos
inc
pushf
pop
ljmp
sub
inc
sub
push
in
fs
jns
stos
inc
gs
jle
popf
jb
out
leave
pop
inc
inc
rep
inc
push
mov
lods
lcall
cmpsl
aas
mov
and
push
inc
stc
ljmp
or
inc
decb
mov
scas
fidivrs
mov
mov
lds
mov
fsubrs
xchg
fidivl
dec
inc
and
int3
fidivs
mov
repnz
adc
xchg
sub
aas
data16
out
dec
in
and
mov
movsl
mov
leave
mov
push
cmpsb
cwtl
movsb
cmp
lahf
mov
imul
fdivr
or
ret
cltd
xchg
ja
jge
mov
sub
dec
mov
dec
adc
jae
cmp
stos
shl
movsl
mov
gs
push
sub
sbb
out
push
inc
mov
scas
sub
or
cmp
mov
loopne
aas
jg
addl
das
pop
mov
mov
dec
sbb
jae
cli
loop
inc
nop
cs
add
sbb
xchg
call
mov
cmp
jnp
mov
loop
and
cltd
sbb
dec
jo
dec
cmp
or
inc
and
leave
scas
cmpsl
scas
mov
data16
cld
lcall
add
adc
sbb
fmull
dec
fcoml
jae
or
daa
lods
jb
xor
sbb
pushf
bnd
mov
and
insl
xor
mov
cmpsb
outsl
mov
subb
lret
movsb
popf
int3
push
test
outsl
sbb
or
cmp
or
aas
aam
and
rcrl
iret
ret
aas
jle
fnstenv
into
xchg
loope
in
add
xor
cwtl
sub
movsb
aam
bndstx
mov
imul
loop
notl
in
das
add
fidivrl
sbb
clc
push
mov
out
xchg
adc
ret
and
push
loopne
jne
divb
imul
int3
push
insl
cmp
mov
aas
add
xchg
lret
cltd
rorl
mov
fistps
cmp
mov
ljmp
dec
mov
arpl
dec
cli
jmp
es
jecxz
xchg
jae
popf
cmp
imul
inc
addr16
sub
imull
dec
adc
xor
mov
ljmp
and
sub
xor
sarl
pop
or
pop
dec
jmp
iret
in
or
pop
repz
pop
ret
inc
mov
sti
js
mov
cmp
sub
cld
lret
inc
inc
std
outsl
shl
mov
jge
adc
jne
mov
pxor
incb
ss
pop
out
popf
shr
test
dec
fcom
pop
in
add
sbbl
dec
jo
mov
test
xchg
fldt
fwait
jnp
out
clc
gs
push
sub
adc
pop
push
int3
and
sub
add
leave
bound
xor
mov
pop
les
into
cmp
or
data16
fisttps
mov
sti
bound
xchg
leave
mov
sahf
cld
adc
jg
xchg
sbb
dec
jae
mov
int3
ja
jmp
and
sbbb
fnstsw
out
test
push
or
and
jge
cmpsb
push
xor
xor
mov
cmp
scas
mov
xchg
lret
fsub
dec
lea
dec
jno
lods
jno
jno
xor
mov
cmp
push
mov
sti
ljmp
pop
clc
or
or
jbe
repnz
and
cmp
jecxz
xor
mov
repz
ret
imul
pop
divb
mov
dec
mov
jo
sarb
mov
lcall
lock
sub
sub
or
addr16
adc
xchg
or
inc
pusha
aam
pushf
test
add
aam
mov
aam
bswap
out
dec
cmp
or
cmp
and
push
push
loop,pt
int3
stc
add
inc
xor
lods
popa
pop
out
aas
xlat
xor
into
hlt
movsb
xlat
lcall
or
lea
icebp
fs
inc
mov
mov
add
negl
sbb
jo
cmp
pop
lret
adc
shll
add
inc
sti
mov
outsb
sub
cmp
push
inc
pop
jo
cli
adc
test
cmp
mov
xchg
movb
lods
call
mov
xchg
xor
push
stos
in
cmp
pop
popa
fcomps
lahf
sub
daa
xorb
xor
sub
cmpsb
mov
pop
imul
or
cld
sub
aas
cs
mov
in
out
inc
sbb
jecxz
cli
jo
push
sahf
push
popa
inc
push
cmp
ficompl
push
adc
pop
xchg
fcoml
pop
jae
adc
mov
das
lahf
pusha
mov
hlt
xchg
sarl
push
cltd
xor
pop
insl
push
ret
pop
outsl
pop
cmpsb
cmp
je
fucomp
nop
sti
dec
mov
mov
adc
sahf
inc
xor
add
dec
jmp
cmp
dec
data16
cmp
ljmp
cmp
xor
lds
data16
rolb
div
mov
push
push
ret
loop
out
lcall
hlt
xlat
pushf
mov
fcoms
inc
in
outsb
out
leave
aas
lods
in
or
sub
icebp
sbb
rcrb
xchg
and
dec
dec
pop
cmc
ror
xchg
dec
out
test
rcl
stc
stc
add
add
xor
sbb
pop
out
pop
sbbb
rcr
dec
jmp
pop
stos
inc
xor
mov
daa
add
xor
faddl
mov
ds
cmp
or
xchg
fmull
imul
cmp
adc
jns
repz
adc
inc
out
xor
xor
ret
cld
or
cmpsl
push
jo
aad
jno
lock
mov
mov
xor
cltd
movsl
aam
xor
push
in
mov
xor
adc
data16
pop
jge
pop
sbb
test
dec
or
pop
and
sbb
sqrtps
and
jg
fdivs
sub
pop
pop
jle
call
mov
shrl
loope
stc
mov
scas
sub
stc
aam
rorl
fs
icebp
inc
neg
mov
loop
cmp
cltd
cmpsb
add
dec
inc
or
in
or
push
fidivrl
dec
sbb
lcall
popa
je
hlt
icebp
loopne
xchg
je
fsubrp
and
and
cmpsb
jg
mov
sbb
rolb
ds
push
dec
pop
and
adc
xor
imul
mov
ror
jno
add
jnp
int
jb
in
ficoml
and
jne
pop
addb
push
mov
in
xorb
clc
out
in
and
test
push
rolb
pop
into
hlt
enter
enter
jg
daa
mov
stc
add
cwtl
nop
test
xchg
cmp
jp
adc
and
js
js
or
push
mov
xor
movsl
push
adc
push
mov
fcomps
in
test
scas
adc
lret
fdivl
mov
stc
stos
jb
push
shrb
stc
lock
mov
inc
inc
fldl
mov
and
dec
mov
dec
scas
pop
aam
sbb
sbbl
nop
mov
mov
pop
adc
sti
xor
inc
lea
jmp
xor
add
mov
and
in
ret
xchg
les
mov
adc
and
loop
adc
hlt
out
loopne
push
ficomps
or
outsl
push
addr16
and
push
pop
sub
push
jne
sti
cmpsl
jmp
loope
ljmp
data16
inc
mov
les
add
das
loope
and
mov
fidivl
xor
sti
fldt
in
add
fmuls
cmc
pop
gs
jl
cmc
sbb
sbb
aam
hlt
dec
sub
sti
sub
mov
push
dec
xchg
push
mov
aas
fdivl
pop
or
shl
sub
and
popf
jecxz
pop
adc
adc
push
push
sti
fstpl
scas
movsl
inc
pop
inc
sbb
pop
add
add
cmc
daa
push
sub
xor
push
jb
adc
adc
addr16
insb
push
push
push
imul
mov
fbstp
sub
or
mov
hlt
jae
data16
in
add
sub
in
and
inc
loopne
loopne
das
mov
cmpsb
pop
xor
les
mov
shl
mov
movsl
stos
leave
das
ljmp
jecxz
je
push
or
add
sub
aas
push
push
push
inc
cld
mov
mov
xchg
cli
push
dec
mov
scas
fsubs
fwait
pop
pop
stos
lods
int
adc
mov
inc
shll
stc
divb
mov
cmp
enter
test
mov
cltd
mov
filds
mov
pop
lock
imull
lcall
mov
es
cmpsb
addr16
rclb
popf
and
test
sub
jmp
stos
mulb
mov
mov
shrl
mov
aaa
mov
push
out
movsl
cmpsl
xchg
inc
mov
adc
loop
pop
addr16
into
movsb
mov
fistpl
xchg
xchg
out
mov
loope
fmull
mov
jp
mov
push
add
and
mov
mov
add
cmp
scas
loop
add
jle
pop
lret
outsl
std
push
rcl
dec
or
mov
jecxz
in
pop
mov
or
mov
sbb
add
push
fadds
jnp
xchg
mov
ret
sub
dec
cmp
and
aam
jo
dec
test
inc
pop
int
jg
repz
aas
pushf
divl
loop
inc
jne
dec
cmp
sbbb
int3
cmp
xchg
sub
adc
fwait
add
and
adc
adc
xchg
lock
mov
adc
in
xor
popa
lods
loopne
aad
push
pop
inc
and
pop
ror
add
clc
inc
add
mov
nop
push
out
loopne
push
xchg
push
push
sub
sbb
imul
in
or
pop
in
cmp
icebp
adc
daa
in
and
jge
bound
pop
sub
or
loopne
jo
mov
fwait
and
push
test
ret
cmp
mov
movsb
repnz
cld
push
pop
mov
sti
or
sub
sar
call
mov
and
mov
push
inc
in
adc
stos
cmpsb
adc
mov
mov
ds
dec
cs
sbb
jo
add
nop
ja
arpl
cmpsb
dec
divl
cwtl
mov
push
xchg
lcall
pop
jo
or
and
imul
mov
int
pop
jle
pop
sub
std
adc
out
pop
or
push
or
leave
or
xchg
mov
out
jnp
mov
ljmp
ret
push
adc
mov
inc
rclb
xchg
test
xor
cltd
mov
sbb
stos
mull
cmp
loope
js
test
fsubs
sub
sub
push
adc
mov
jbe
leave
lea
sbb
outsb
mov
int
xchg
sbb
inc
push
insl
push
cltd
pop
inc
cmp
iret
dec
sub
mov
cld
pop
mov
and
sbb
adc
cmp
insb
or
imul
xor
jge
out
sbb
aam
or
xchg
cmp
scas
scas
ss
push
xor
xor
and
inc
popf
bound
push
jne
jle
fldl2t
add
je
pop
inc
insl
stc
inc
and
insl
dec
sub
out
mov
rcrl
mov
in
mov
adc
mov
sub
cmpb
inc
push
cmp
addl
push
fcoml
sub
xor
inc
cmpsb
loope
call
adc
sbb
sub
ds
pop
add
sbb
push
roll
mov
pushf
mov
ret
mov
rcrb
xor
xor
lods
les
mov
loopne
mov
dec
ljmp
pusha
mov
ret
mov
movsl
test
mov
xchg
loop
adc
xchg
mov
cld
loopne
leave
xchg
scas
ret
arpl
and
out
xor
or
adc
cmp
mov
pop
icebp
in
push
mov
dec
leave
ret
int
bts
pop
mov
dec
test
jne
cmp
jmp
sub
cmpsl
push
and
pop
push
notl
pop
mov
cmpsb
cmc
add
adc
fistpll
xchg
mov
stos
in
sub
enter
sbb
mov
ret
xchg
scas
les
add
test
cmc
mov
jns
in
push
fs
mov
fisubrs
mov
int3
movb
hlt
xchg
test
adc
adc
mov
pop
pushf
or
cmp
loop
push
dec
jns
push
test
push
push
mov
xchg
pop
cwtl
call
int3
xor
lret
xchg
add
dec
or
test
insl
lahf
push
jne
and
sbb
xor
fildl
ss
dec
push
jl
jb
xor
jno
ds
jns
jae
sbb
xchg
cmp
push
stos
pop
mov
dec
sub
imul
lock
scas
je
test
loop
movsl
sbb
mov
sti
mov
jl
aad
or
iret
mov
add
add
icebp
jge
ja
pop
xchg
das
mov
lahf
lcall
into
xchg
dec
std
mov
imul
nop
add
jne
xchg
add
mov
push
lret
xchg
jg
push
fucompp
shlb
pop
or
mov
lea
test
xchg
mov
and
pop
jl
cmp
mov
inc
out
insl
das
jl
sbb
push
and
mov
cmp
adc
mov
cmp
iret
add
sbb
push
prefetcht1
mov
mov
cmp
pop
aaa
out
xor
jl
je
je
je
mov
orb
stos
iret
inc
in
sbb
jb
push
mov
loopne
jp
bound
sbb
mov
test
mov
fisttpll
int3
mov
lock
ljmp
inc
daa
pop
aaa
je
push
jmp
inc
jb
mov
in
call
mov
aaa
inc
jbe
shll
ds
xor
outsb
add
fiaddl
push
test
inc
bound
frstor
push
push
mov
rorb
add
outsb
jmp
imul
ret
xor
cmpsb
fs
es
jp
mov
imull
xchg
jp
xor
inc
lret
pop
das
mov
mov
jns
pop
scas
ds
add
push
stc
movsb
mov
inc
mov
push
shll
addl
and
testb
pop
loope
jmp
or
popf
lret
jo
pop
add
std
jp
clc
sbb
outsb
sahf
push
mov
iret
outsl
xchg
rclb
in
jo
fstl
int
fistpll
adc
xor
lret
dec
sbb
add
mov
fldl
xchg
jno
sub
in
repnz
adc
sub
or
test
mov
stc
loopne
loop
leave
jp
je
mov
and
enter
data16
mov
inc
stc
pop
xchg
xor
mov
mov
inc
out
outsb
dec
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
add
movl
sbbl
mov
xorl
mov
add
xor
cmp
movl
jne
mov
or
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
orl
add
mov
mov
mov
xor
push
mov
and
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
push
push
push
push
lea
xorl
push
push
movl
call
addl
push
call
adcl
movl
movl
mov
mov
addl
xor
orl
mov
add
mov
notl
mov
test
movl
je
inc
mov
andl
mov
dec
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
imul
movzbl
xor
mov
add
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
adcl
xchg
xor
mov
sub
sbb
mov
sub
xor
mov
and
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
andl
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
mov
xor
add
sub
mov
dec
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
or
xor
dec
add
mov
andl
sub
orl
lea
addl
xor
adcl
xor
cmp
je
mov
orl
xor
sbbl
add
cmp
movl
jne
andl
pushl
addl
call
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
push
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
adcl
mov
dec
xor
sub
mov
movl
add
movl
cmp
movl
je
addl
pushl
pushl
call
mov
sub
mov
mov
mov
movl
xor
orl
add
movl
cmp
movl
je
mov
mov
sub
sub
mov
mov
mov
and
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
jmp
or
xchg
loop
movsb
emms
adc
adc
xlat
pop
jp
aaa
pop
jp
jno
jmp
loopew
in
les
and
pushf
gs
rolb
xor
push
rcrl
clc
mov
jns
sbb
js
imul
mov
pop
sbb
cltd
jmp
add
or
in
repz
test
xor
iret
outsb
cld
jns
and
xchg
adc
cmp
push
push
loope
pushf
into
cld
push
popa
xchg
push
leave
mov
ficoml
add
add
pop
dec
mov
loop
aas
inc
cmp
stos
jae
inc
movsl
or
jle
fdivs
aad
enter
lahf
mov
add
popa
cld
sbb
hlt
inc
adc
and
cmp
cmc
cmp
sti
ret
cmp
dec
sti
sub
or
jge
mov
ljmp
or
fcomps
and
dec
cmpsl
pop
jp
sub
dec
shl
and
mov
xor
adc
fdivl
lea
int
add
fists
and
movl
sub
sub
and
xor
or
jbe,pt
pop
lock
push
iret
shrb
jge
jae
inc
imul
jmp
insl
pop
push
test
mov
push
psubusb
mov
mov
into
stos
daa
jae
mov
mov
stos
ss
lock
xor
lahf
ret
pop
je
add
roll
jbe
jbe
mov
mov
fdivrp
jno
mov
js
xchg
repz
xor
pusha
movsb
lds
and
push
adc
jecxz
sub
aas
push
and
or
mov
jg
mov
jo
hlt
inc
push
outsb
repz
les
sbb
sub
xor
ret
sarl
xchg
sub
jle
ret
repz
dec
sbb
dec
aaa
xchg
lret
cmpsl
es
mov
aam
in
fisubrl
inc
mov
and
insb
fldenv
cmc
lahf
test
fildll
xchg
popf
adcl
rcrb
ret
lea
cwtl
jb
xor
sub
in
add
add
mov
ror
or
inc
xlat
and
pop
faddl
sub
imul
xor
leave
sub
cltd
sub
jmp
fidivrl
test
fwait
push
fwait
inc
add
ficoms
out
les
test
or
jns
cmpsl
xchg
inc
cld
push
hlt
push
mov
sbb
push
jo
sbb
or
sub
jnp
xor
mov
aam
lcall
enter
cmp
push
or
mov
es
inc
je
sarb
ret
jnp
packuswb
push
sti
xchg
iret
in
insl
jbe
sub
add
push
adc
test
xchg
mov
int3
inc
cli
in
adc
xor
out
les
push
xchg
lahf
jnp
jae
stc
sbb
inc
pop
ret
pop
icebp
and
cmp
xchg
xor
cmpsw
mov
push
lock
nop
or
adc
iret
imul
cmpsb
mov
ja
cmp
lock
sub
daa
lds
test
test
es
arpl
lret
aaa
popa
test
push
sub
mov
int3
mov
mov
pop
decb
clc
stos
popa
sub
lods
cs
or
popf
jl
sbb
js
push
dec
scas
cmpsb
mov
popf
insb
in
mov
adc
std
or
and
inc
or
or
repz
or
pop
push
jnp
push
scas
inc
mov
repnz
adc
sub
mov
jecxz
xor
inc
xchg
imul
jle
pop
mov
jge
xchg
adc
enter
inc
jp
lods
xor
lea
pop
sbb
cmc
mov
xchg
lahf
ss
or
rolb
lds
dec
mov
pushf
arpl
or
xlat
mov
push
ror
dec
xor
ds
lods
sarb
in
xchg
jge
dec
xchg
popa
movsl
les
cmp
dec
lds
jmp
ja
or
or
repnz
loope
std
loopne
inc
mov
std
mov
push
lods
fiadds
into
adc
test
cs
inc
in
mov
aaa
xchg
stos
or
arpl
in
call
or
test
sbb
adc
cwtl
jns
adc
es
xor
adcb
cmpl
inc
jne
jnp
loopne
popa
cmp
mov
aam
cmp
sub
add
cmp
loop
xchg
lret
es
dec
iret
leave
cmp
or
sti
jae
jge
mov
xchg
dec
icebp
pop
fisubrs
push
jnp
shlb
lcall
out
add
add
pop
adc
xchg
inc
out
pop
sahf
sub
repnz
ds
cmc
les
testl
addb
in
arpl
es
in
cmp
repnz
jge
inc
inc
ja
jae
mov
pop
push
add
or
in
sbb
lret
sarl
rcr
inc
jo
mov
jb
mov
mov
mov
pop
ret
pop
or
popa
sbb
cmp
stos
push
sub
push
call
jno
loopne
dec
xchg
imul
leave
mov
iret
int3
xchg
cltd
je
or
fadds
jp
into
mov
fldl
cmp
lahf
scas
lret
or
add
cltd
adc
arpl
mov
add
jl
xchg
ret
sbb
sahf
scas
xchg
sbb
pop
into
lock
xchg
mov
fs
cmp
cmpsl
mov
mov
sub
call
mov
dec
lcall
das
mov
lahf
cmp
push
jle
jle
adc
shll
aad
loopne
jnp
inc
stos
jle
push
mov
in
ja
into
ds
sahf
pop
pop
cmc
iret
cmp
jo
lods
jle
jno
sbb
mov
dec
adc
mulb
mov
ret
cmpsb
sub
sahf
sub
lods
jle
sti
xchg
mov
cmp
mov
adc
dec
pushf
lcall
imul
push
cmp
fcom
icebp
pop
push
mov
lds
mov
xor
cmc
fistpll
fldcw
test
mov
std
push
fs
sbb
sti
xchg
dec
mov
andl
adc
notb
cmp
test
enter
xor
rclb
scas
cmpsl
jecxz
xor
fsubs
stos
fbld
imul
push
push
xchg
mov
bound
aaa
adc
mulb
xchg
sub
std
push
mov
idiv
loope
cmp
icebp
xchg
jno
xchg
rcrb
data16
xchg
leave
xchg
int3
ss
inc
jmp
add
rorl
push
out
je
scas
sub
fsubrs
xor
sub
testl
fisubs
out
aad
sbb
sub
jb
imul
mov
mov
push
sub
sahf
dec
test
rcr
mov
adc
xor
adc
sbb
aam
sti
sbb
ds
push
addl
das
add
test
int
daa
das
mov
mov
shlb
pop
ss
fistpl
add
test
mov
out
xchg
and
pop
xor
sbb
sbb
sbb
inc
or
dec
pop
cld
mov
cli
test
mov
test
jl
out
mov
inc
inc
aaa
aad
push
aas
fucomi
jg
push
push
inc
popa
pop
mov
mov
sub
movsl
movsb
sahf
sahf
adc
sbb
and
insb
dec
mov
jnp
repz
add
lods
jnp
push
pop
adc
call
arpl
pop
sahf
or
cs
mov
test
mov
push
lds
mov
cmovbe
popa
outsl
lahf
jb
insb
ss
mov
fbld
inc
pop
push
cmp
aad
mov
shrl
and
mov
scas
sbb
or
das
pop
inc
lods
stc
sbb
push
push
lods
les
mov
les
mov
hlt
pop
adcb
xrelease
xchg
inc
popf
cltd
add
stos
addr16
push
dec
adc
das
mov
aad
insl
leave
mov
sub
push
xchg
into
sub
das
lea
and
daa
repz
cmp
xchg
or
push
push
or
fnstenv
or
mov
pop
pop
std
ss
xchg
aas
cld
rcr
jecxz
or
ljmp
inc
or
jmp
adc
xor
lret
aas
leave
cmpsl
mov
cmpl
hlt
or
imul
into
fs
push
push
inc
lods
pusha
daa
pop
icebp
mov
adc
mov
daa
xchg
test
gs
int
daa
in
sahf
stos
push
inc
xor
loope
mov
sbb
jle
add
dec
int
insb
jge
addr16
rolb
call
call
xlat
fimull
or
or
ret
push
sbb
jnp
ds
lods
out
push
mov
add
cmc
sub
lds
dec
mov
inc
pop
xchg
cmp
cmp
push
xchg
orl
xor
icebp
and
push
dec
lret
lods
cmc
or
inc
sahf
ss
pop
pop
pop
and
xchg
pop
push
js
mul
ret
adc
pop
andb
imul
adc
jl
bound
fldenv
aam
clc
sbbl
out
ret
push
pop
out
fcomp
dec
cli
nop
out
mov
enter
inc
push
pop
jnp
cli
lahf
dec
push
push
and
or
or
outsb
iret
scas
in
sub
cmpsb
mov
push
rcl
jg
fwait
cmp
adc
mov
clc
js
cmpsl
mov
add
mov
dec
xchg
and
pop
ret
sbb
js
imul
add
insl
dec
out
and
andb
inc
push
cmp
mov
pop
mov
cmp
mov
ret
jl
mov
lahf
in
add
test
xchg
das
clc
addl
out
sub
nop
dec
pop
loop
popf
mov
shrb
rorb
mov
pusha
sbb
enter
and
sbb
adc
mov
dec
jo
sbb
cltd
jbe
int3
dec
idivb
mov
outsb
das
hlt
sub
mov
xchg
sbb
jl
mov
cmp
in
fstpl
daa
stc
pop
scas
std
sub
sbb
mov
mov
cmc
shll
rolb
inc
rol
pop
ljmp
cmpsb
cmp
dec
roll
les
cmpsb
jl
jb
sbb
push
pop
lea
jge
enter
and
pop
sarb
sbb
cmpb
sub
and
jp
rolb
das
mov
push
lods
mov
movsl
lea
mov
cmp
imul
test
mov
mov
mov
fwait
sub
mov
pop
test
dec
push
fmuls
dec
inc
into
sbb
enter
data16
pop
ljmp
addb
adc
pop
bnd
iret
or
fsubl
adcl
sbb
sbb
ds
mov
shlb
xchg
mov
mov
sbbb
loopne
stc
mov
add
fs
loopne
repz
shll
pop
mov
iret
imul
mov
outsb
pop
je
mov
mov
xchg
xchg
lock
mov
fs
sub
sahf
xor
popa
jns
cli
pop
hlt
lahf
fadds
lret
pop
mov
jp
push
jge
add
inc
jb
int
hlt
pop
out
rcll
or
sub
jno
dec
add
push
or
dec
xchg
int3
cmp
lret
push
push
inc
sub
test
orl
int3
add
out
pop
cmpb
icebp
xor
nop
jne
xlat
jle
insl
jno
mov
cmpsl
mov
or
je
and
leave
and
push
jecxz
push
std
es
or
daa
scas
cld
dec
mov
cmp
addr16
cmp
test
xchg
sub
mov
fcomps
cmc
adc
aas
jb
out
jbe
and
mov
mov
cmp
scas
leave
sahf
in
arpl
enter
gs
ss
insb
fidivrs
cmc
cmp
dec
cmc
icebp
cwtl
ja
xchg
or
lcall
dec
and
pop
push
fxch
xlat
cmc
jb
fildll
pop
jno
mov
sub
push
cmc
push
inc
test
test
inc
ja
lods
xor
loop
lret
add
rcll
test
sub
and
aam
out
adc
sub
xchg
jno
aad
into
jl
cmpsl
stos
jnp
or
mov
push
fildll
sbb
cmp
adc
scas
inc
sub
sbb
sbb
outsb
xlat
inc
sub
jecxz
int3
mov
mov
mov
dec
scas
sub
pop
pushf
fdivs
enter
clc
fnstcw
add
push
nop
movsl
dec
in
movsl
test
add
or
fistpl
pop
call
cmp
mov
in
fs
int3
mov
popf
lods
sub
in
stos
repz
lahf
insl
cmp
mov
pop
lret
lods
adc
mov
push
aad
cwtl
mov
insl
mov
test
out
inc
js
mov
ret
je
sbb
cltd
sbb
jbe
xor
fidivs
lods
lret
test
jnp
aam
les
mov
mov
dec
test
dec
lea
jge
lcall
or
adc
out
stos
outsb
xchg
adc
orb
mov
add
or
adc
pop
fwait
or
pop
xlat
fs
sar
movsb
pop
pop
fcmove
ss
mov
hlt
cmpsl
movsl
sub
outsl
mov
std
sti
inc
in
inc
leave
movsl
movsl
inc
xchg
inc
mov
xchg
pop
in
lds
jnp
push
orl
add
scas
cld
lcall
mov
push
dec
mov
repz
xchg
xchg
add
inc
inc
cli
test
adc
fbld
mov
dec
movsb
lock
xor
lods
dec
or
cmpsl
scas
fld
ljmp
aad
xchg
push
stos
mov
sub
outsb
dec
mov
inc
dec
jb
lret
addr16
nop
adc
cli
repnz
pushf
sbb
ret
adc
mov
mov
lret
inc
mov
sub
daa
mov
aam
dec
add
mov
das
mov
or
pop
repz
cmp
mov
ficoms
pop
add
test
ficompl
mov
cs
cmp
icebp
and
scas
adc
popf
xchg
test
nop
mov
cmpb
ret
stc
popf
or
aas
in
pop
das
or
mov
lock
not
lods
push
xorl
xchg
pushf
mov
push
ret
je
cmp
xor
xchg
movsb
cmp
push
pushf
cld
psubd
ss
enter
in
aam
ret
mov
adcb
mov
xor
xor
or
cmp
cmp
cmp
xchg
lret
push
sub
sbb
dec
lds
jmp
loop
jno
lcall
rcrl
movsl
jb
xor
or
in
cli
out
push
pop
in
jae
add
mov
inc
sub
cld
xor
pop
mov
cmp
gs
rcl
jp
mov
jb
dec
daa
stos
mov
test
stc
push
scas
adc
sbb
xlat
pop
outsb
xchg
daa
aam
cmpsb
mov
dec
fwait
shlb
adc
jne
scas
outsl
movsl
pop
sub
mov
mov
icebp
sti
lea
sbbl
and
in
push
adc
sbb
faddl
add
pop
xchg
ds
sub
push
sbb
and
out
mov
inc
and
sub
mov
int
pop
lds
mov
xorl
push
scas
xor
cmpsl
stos
xchg
mov
adc
ljmp
cs
shr
dec
sbb
in
mov
repnz
aaa
jo
int3
movsl
sbb
mov
ds
xorb
add
es
jg
iret
sub
fcmovnbe
das
roll
sbb
add
fisubs
or
mov
orl
scas
fidivrs
daa
mov
sbb
int
mov
je
xchg
int3
mov
mov
rcrl
adc
stc
fucomip
xchg
mov
adc
daa
out
aam
push
jmp
insb
outsb
inc
or
cmp
iret
loopne
into
cmp
ljmp
cs
xor
mov
ljmp
mov
subb
adc
hlt
stos
inc
inc
adc
or
push
add
out
or
clc
jge
adc
jno
nop
fwait
jb
movsl
mov
inc
lcall
fstpl
adc
mov
push
sahf
jl
arpl
loopne
notb
ss
adc
cmp
or
xchg
mov
mov
push
fldl
cld
dec
add
mov
mov
pop
jp
mov
outsb
cmpsl
das
cmp
scas
mov
out
test
mov
adc
add
sub
cmp
lds
or
xchg
shll
add
mov
iret
int3
sub
adc
push
push
dec
js
andb
dec
outsb
dec
negb
push
sbb
cs
movsl
loop
jl
repnz
stc
rcll
pop
pushf
cli
inc
mov
jecxz
sbb
cmpsb
cmp
jbe
insb
adc
push
add
or
test
push
lods
mov
xchg
es
ret
cmp
xchg
pop
inc
xor
xchg
ret
ss
jbe
dec
push
push
imulb
xchg
add
cltd
cmp
popf
fcmovnu
and
xchg
fs
pop
cmp
adc
sbb
arpl
cmp
mov
fisttpll
unpcklps
dec
loopne
and
pushf
inc
mov
nop
scas
adc
inc
arpl
mov
filds
imul
clc
mov
repnz
inc
mov
data16
inc
dec
add
xor
push
dec
inc
dec
inc
cmp
sbb
push
out
fiaddl
faddp
ret
repz
clc
cmp
pop
pop
xchg
push
mov
dec
jmp
rcrb
or
mov
popf
pop
sbb
loopne
dec
sarb
aaa
movsb
pop
jg
roll
dec
jmp
or
cltd
or
xchg
xchg
or
pop
clc
xor
ficompl
pusha
dec
fldt
test
dec
lea
dec
fisubl
jmp
test
or
repz
sbb
fistps
push
pop
mov
cli
or
aaa
out
mov
testb
mov
cmp
fcmove
push
mov
inc
sbb
adc
xchg
pop
mov
rorl
xchg
test
aas
mov
mov
xor
or
pop
jle
popf
arpl
shll
add
lock
popf
cmp
test
data16
mov
stos
jmp
out
cmpsl
and
push
lcall
inc
cli
mov
cmp
sub
jne
push
pushf
cs
pop
fnop
das
mov
push
fs
or
daa
arpl
in
sbb
dec
mov
ficoms
insl
jle
mov
mov
out
adc
xor
or
xchg
cmp
dec
inc
xor
add
pop
test
cmp
addr16
push
dec
lock
incb
ljmp
pop
add
xchg
or
jno
repnz
icebp
imul
fiadds
je
push
inc
addb
shl
push
shl
xor
mov
in
call
adc
aaa
jg
addr16
sarl
in
xor
or
xchg
push
test
pop
pop
loopne
fmulp
lods
shll
repz
enter
insl
nop
sub
andl
dec
ret
int
jno
dec
arpl
stc
dec
aas
arpl
or
jno
stos
and
cltd
mov
cld
cltd
inc
jb
jg
inc
push
mov
push
fprem1
dec
jecxz
sbb
inc
stc
adc
and
test
jb
pop
insl
test
pop
mov
ljmp
inc
and
adc
mov
sbb
adc
jae
push
mov
rcll
cwtl
and
fistl
jae
xor
or
and
dec
xor
or
mov
clc
rcrl
fisttpl
or
jg
push
and
cmpsb
stos
movsb
add
sahf
mov
in
fbld
ja
pop
cli
icebp
dec
mov
lcall
movsb
addb
scas
push
push
popw
je
cmp
add
lret
add
adcb
leave
movsb
mov
lods
xorb
and
imul
and
insl
sbb
or
or
push
cmp
stos
pop
in
mov
shrl
repz
movsl
inc
lods
pop
push
xchg
pop
lret
fldt
pop
ljmp
divl
fistps
xchg
sub
cmp
or
pop
add
xor
ljmp
repz
push
push
pop
lods
loopne
dec
in
and
xor
cmp
jl
jb
add
mulb
inc
outsb
insl
mov
add
pusha
je
pop
data16
test
pop
sahf
scas
ljmp
mov
popf
mov
jg
rclb
bound
inc
loop
mov
fcmovb
xchg
out
add
push
in
sar
and
add
adc
out
jge
xchg
shl
jbe
push
xor
cmp
imul
shlb
iret
inc
sub
add
jno
sbb
cltd
push
mov
dec
mov
sbb
dec
and
sti
xchg
lds
mov
dec
fmull
xchg
loop
test
lds
mov
int3
push
jp
adc
lea
push
jp
jo
inc
push
stos
lds
jnp
mov
lods
cmp
in
add
dec
sub
inc
mov
in
mov
repnz
jp
and
xchg
jle
lds
push
mov
dec
xchg
mov
xchg
push
jno
lock
sahf
loop
or
mov
inc
or
ds
xor
push
shrb
loope
cltd
mov
pop
inc
frstor
and
clc
mov
int
test
repnz
dec
pushf
fisttpl
sbb
sbb
jo
mov
jb
cs
mov
loop
ja
clc
les
add
cmp
and
int
jge
loop
xchg
outsl
icebp
orb
mov
loopne
enter
cmp
test
test
or
scas
fs
inc
dec
nop
push
ja
lret
shll
lea
inc
jg
jmp
lds
jecxz
mov
sub
fistpl
xor
add
pop
jae
add
xchg
aaa
mov
xchg
scas
cmp
aas
xorl
xchg
mov
pop
mov
imul
add
test
test
or
divb
ret
and
in
push
sub
pop
aam
ret
inc
inc
hlt
cli
jmp
fsubs
sbb
fistpll
pop
dec
loopne
mov
shlb
fwait
outsl
cwtl
sbb
and
xor
orb
xchg
xchg
xor
dec
push
out
xchg
sbb
fldl
sbb
imul
repz
xchg
outsl
xchg
insb
dec
into
std
dec
fwait
hlt
add
fdivrs
sti
mov
fdivrp
aaa
notl
mov
mov
xchg
sub
jae
call
mov
pop
add
and
inc
cmp
mov
jb
inc
adc
mov
fdiv
aad
sub
and
mov
cmp
sub
scas
jo
sub
outsl
fbld
enter
pop
push
rclb
aas
mov
dec
dec
cli
fadds
cwtl
dec
lret
pop
sbb
push
test
test
push
cwtl
dec
sub
pop
jns
pop
cmc
push
loopne
or
xchg
mov
leave
adc
test
jmp
push
mov
and
mov
push
sbb
hlt
jno
test
or
mov
dec
add
imul
std
lahf
fidivrs
pop
jl
xorl
aam
push
sub
das
push
push
cwtl
pusha
mov
xchg
jae
mov
mov
xchg
push
stos
xor
mov
cmp
pop
out
mov
lret
mov
jae
inc
push
push
cmp
imul
dec
jle
xor
add
and
repz
or
xor
xor
sahf
adc
outsb
add
jae
xchg
pop
inc
sti
lods
fs
in
test
jno
arpl
jb
sub
cmp
pop
loop
ljmp
outsl
sub
imul
ffree
cmpsb
lods
insb
pop
xchg
fisubl
pop
arpl
mov
push
push
out
mov
lret
aam
pop
in
dec
lds
gs
sbb
dec
xor
adc
push
mov
repz
sub
cmp
clc
jg
cmp
out
arpl
lock
mov
xor
repz
imulb
lret
jmp
adc
cmp
xchg
xlat
out
stc
dec
mov
push
loope
xchg
ljmp
cmp
xor
lds
cmp
push
ja
mov
mov
lcall
xor
inc
aad
aad
cmc
cli
pop
inc
gs
cli
rcll
test
movsb
adc
mov
loop
and
mov
push
inc
xorb
and
push
sbb
jle
nop
test
aas
xlat
xlat
subb
loopne
sub
mov
aad
pop
mov
cwtl
stc
push
cmp
lds
loopne
inc
jne
and
les
je
mov
cld
loopne
aas
xchg
pmaddwd
push
jne
sub
sbb
lahf
out
popf
jb
repnz
adc
and
xor
adc
dec
and
lahf
test
cwtl
je
cmp
pop
push
dec
inc
data16
fwait
push
push
popa
popf
shlb
xor
jecxz
push
cmp
xor
jmp
add
add
scas
out
popf
jg
sbb
and
js
jp
shr
mov
das
lock
mov
addr16
adc
mov
mov
mov
xor
addr16
inc
adc
push
sub
test
rcrl
sub
int
adc
adc
xchg
aas
movsb
xchg
xchg
sub
mov
mov
jnp
cwtl
xchg
or
or
pop
aad
xchg
xchg
shrl
fistps
int
ds
out
cwtl
imul
out
mov
dec
and
xchg
rorb
addl
mov
mov
push
cmp
jnp
test
sbb
mov
hlt
in
sub
outsl
insb
pop
push
xor
cwtl
loop
inc
insb
stos
mov
xlat
jge
cs
lcall
outsl
hlt
int
pop
popa
cld
mov
jb
inc
mov
cmp
add
adc
movsl
arpl
xchg
int3
out
xor
cmp
divl
inc
cmp
cmc
into
ficomps
stc
and
imull
sti
pusha
xchg
xchg
jp
mov
or
push
xchg
lock
mov
hlt
data16
dec
pop
faddl
test
add
daa
stc
adc
cmp
imul
ds
push
adc
ss
xlat
fs
rcll
dec
cmp
ja
jge
sub
cwtl
mov
dec
adc
std
iret
sub
data16
outsl
xor
or
sbb
scas
out
cmp
sub
shr
fistpll
push
or
push
into
sbb
mov
mov
jmp
cmc
imul
adc
add
jle
or
xlat
insl
in
dec
cmp
xor
push
inc
jno
push
daa
scas
pop
xor
in
xchg
aad
cmp
jb
cmp
dec
mov
mov
nop
out
adc
ffree
xchg
aam
mov
leave
jne
hlt
xchg
cmp
bound
ret
sbb
push
inc
and
out
gs
mov
xchg
dec
push
outsb
push
js
negl
sbb
fsubp
movsb
ret
mov
std
pushf
push
pop
pop
insl
pop
cmc
repnz
add
lods
and
lahf
mov
cld
les
push
cltd
fiaddl
bound
adc
out
ja
inc
movsl
rclb
lods
sahf
arpl
inc
shlb
loop
add
lahf
cmpsb
loop
es
adc
jle
je
jns
in
sub
adc
mov
sbb
inc
fcomi
fcmovb
or
sti
push
mov
dec
adc
rcl
xchg
negb
xchg
aas
and
call
repnz
aam
jno
adcl
repz
pop
hlt
mov
dec
pop
sarl
push
push
cmp
imul
add
push
xor
into
push
push
sub
decl
add
cmpb
sbb
jbe
and
arpl
jbe
dec
iret
or
dec
sahf
jae
inc
icebp
stos
mov
add
ja
popf
int
pop
mov
mov
push
inc
mov
add
push
aaa
cmc
xorb
adc
xchg
push
adc
add
inc
dec
aad
aad
ret
sub
leave
addl
lahf
cs
out
dec
cmc
imul
imul
mov
js
or
aam
push
out
repz
and
out
adc
cmpsb
dec
mov
inc
jb
imulb
js
xchg
mov
rcrb
jno
pushf
lret
sbb
repnz
popa
or
mov
shl
and
cwtl
int3
repnz
mov
jno
mov
fildll
sarl
insl
sahf
aad
fs
std
xor
stos
adc
sbb
fs
inc
ret
popf
push
pop
add
out
mov
addr16
arpl
lret
cmp
xor
icebp
and
push
inc
or
iret
bound
sti
insb
iret
sub
and
aad
mov
push
push
and
lods
and
hlt
adc
push
inc
adc
jns
xchg
add
leave
mov
aas
ja
inc
inc
fldenv
icebp
xchg
imul
xchg
adcb
test
cli
jge
lea
add
cmp
pop
sub
jbe
jmp
cmp
inc
cmpb
inc
jl
push
addl
popl
frstor
bound
pop
inc
insl
mov
stos
dec
rorl
jp
cmp
movsl
cmp
mov
mov
shlb
and
out
or
aad
inc
or
pusha
clc
add
mov
pop
test
cmp
testb
inc
les
ficoml
sahf
inc
cltd
xor
loopne
adc
cmp
fwait
inc
lock
cmc
mov
imul
pusha
stos
push
xor
pop
sbb
jmp
xor
and
mov
lret
sub
sub
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
push
or
xchg
xchg
xor
nop
and
aaa
pop
jp
xor
mov
cltd
cmp
rcrl
lret
xchg
jg
ficomps
hlt
test
inc
push
mov
or
aas
jbe
dec
or
lods
jmp
fwait
sub
and
jns
ja
into
and
or
add
mov
arpl
inc
rcrb
mov
aas
movsb
call
lock
fcmovnbe
int3
int3
stc
jl
sbb
ret
out
call
int3
std
imul
push
pop
sub
lcall
mov
insl
mov
xchg
inc
pop
add
add
enter
xchg
imulb
pushf
repz
mov
out
xor
ds
out
mov
add
add
imul
data16
ret
fs
adc
in
xchg
jno
mov
repnz
xchg
fmul
data16
pusha
and
push
lahf
test
popa
imul
rcl
arpl
cmpsb
mov
sarb
pop
shrl
jmp
add
lret
outsl
cmc
bound
mov
mov
push
fs
fs
and
popa
outsl
mov
pusha
adc
imul
jle
lret
int3
xchg
aad
inc
mov
lret
sub
inc
insl
aas
call
adc
scas
and
or
sahf
outsl
cltd
mov
inc
addr16
xor
cmp
xor
cmp
pop
roll
or
pop
adc
mov
out
dec
cmp
mov
mov
ja
xor
mov
mov
js
data16
fs
sub
loop
leave
sbb
jo
pop
addr16
std
push
or
sahf
popa
or
imull
push
ljmp
cwtl
cvtps2pi
sbb
dec
int3
in
pop
fisubl
jl
dec
call
push
dec
sub
mov
lahf
dec
pop
cpuid
or
sbb
jmp
out
shlb
std
in
xorl
jg
or
jge
ds
shr
sahf
push
jmp
mov
cwtl
ret
icebp
imul
jmp
neg
mov
ss
xchg
out
mov
pop
dec
pop
sub
dec
adc
jo
stc
sbb
pop
incb
dec
xor
test
inc
sti
push
in
mov
daa
shll
clc
fwait
dec
das
jl
movsl
out
adc
call
dec
adc
jo
in
and
adc
pop
sbbb
inc
jo
fnsave
jmp
mov
test
pop
lods
dec
push
loope
mov
aam
xchg
ds
jp
out
pop
dec
lods
ja
sbb
insb
jmp
inc
or
cs
jp
arpl
fs
push
das
in
fisubl
ds
mov
dec
push
ljmp
jo
adc
ret
push
add
xchg
and
fcompl
and
xor
sbb
and
aam
add
xor
dec
xorb
cmpsl
iret
add
mov
pop
repz
leave
jecxz
inc
xchg
pop
cmpsl
inc
shll
mov
and
stos
cli
mov
lods
in
dec
sub
mov
test
mov
sbb
mov
xchg
negb
inc
pusha
push
jg
adc
call
sub
xor
hlt
dec
fists
push
pop
adc
cmp
inc
xchg
test
inc
enter
mov
fcmovnbe
add
xlat
pop
jmp
popa
jnp
mov
inc
add
test
dec
mov
fdivrs
push
insb
mov
fnstcw
inc
mov
out
sub
pop
ss
adc
mov
mov
pop
mov
push
cmp
dec
or
insb
out
sub
in
in
cltd
arpl
jne
ret
xor
add
cltd
jbe
stos
xchg
out
push
or
pop
arpl
das
dec
sub
fisubrl
data16
add
cmpb
sbb
stos
inc
stos
dec
or
mov
push
pop
into
icebp
push
cwtl
push
jmp
loope
bound
mov
in
xor
mov
sbb
mov
out
pusha
sub
pop
xor
jmp
cmpsl
movsl
pop
inc
fs
push
lock
push
fildl
sub
mov
adc
mov
in
leave
sub
ret
jbe
cld
cmpsb
mov
lahf
sahf
ffree
push
gs
xor
dec
add
daa
dec
inc
mov
dec
push
xchg
das
rol
jl
ds
and
daa
sbbb
in
push
pusha
leave
sbb
sub
or
into
mov
or
shr
cmp
call
sub
movsb
cli
int
dec
das
enter
mov
inc
dec
sarl
rclb
lock
or
adc
sub
jno
xchg
sub
hlt
dec
push
fcmovnb
dec
lret
or
inc
test
pop
cmp
pushf
orb
sahf
sti
in
or
in
mov
enter
scas
adc
dec
inc
rcrl
mov
fs
jbe
psubw
fistpll
scas
leave
ds
int
addb
jo
adc
das
pop
xor
daa
cs
jmp
push
loopne
in
mov
dec
inc
push
push
subl
pop
arpl
sbb
push
das
cmpsb
jne
mov
sbb
fmull
in
stos
mov
jg
call
jmp
mov
cmp
rcrb
pop
mov
ja
jnp
iret
and
sahf
lret
jo
js
popf
stos
ret
or
mov
pop
xchg
or
xchg
add
jg
imull
pop
jge
or
daa
jge
js
push
sbb
pop
rol
push
dec
ror
aaa
cmc
jo
push
stc
ljmp
test
and
movsl
addr16
daa
xchg
sub
outsb
xor
repnz
inc
add
popa
fs
mov
push
pop
add
test
pop
repnz
sub
imul
xchg
adc
jne
push
sub
add
xchg
mov
sbb
cltd
xor
sbbb
lret
lcall
inc
push
stos
mov
std
aas
push
mov
arpl
das
aam
inc
sub
and
fldl
stc
xchg
dec
out
scas
aas
pop
cwtl
aas
or
push
sbb
mov
les
add
not
adcb
lds
sub
pop
adc
sbb
out
shll
test
arpl
xchg
push
sub
iret
jmp
inc
roll
or
cmpsl
mov
das
or
inc
push
ffreep
cmp
imul
and
in
add
imul
pop
aas
into
inc
imul
out
push
jb
shll
jns
mov
and
xchg
sbb
insb
and
cmp
loopne
ja
mov
xor
in
nop
out
inc
jge
in
and
pop
xor
xor
movsl
mov
inc
mov
cmpb
or
sub
or
into
sub
jecxz
cmp
insb
xlat
pop
call
sbb
mov
daa
sub
add
sub
test
cmpsl
test
popf
add
repnz
ljmp
mov
xchg
xchg
pop
lahf
xor
jnp
fmulp
fisttpll
dec
inc
es
out
push
fnstsw
inc
dec
lds
pop
enter
fdivr
pop
sbb
xor
mov
fwait
push
xlat
shll
lds
rcr
sahf
divl
or
rclb
mov
les
loop
inc
sub
pop
dec
addb
ret
mov
pushf
sbb
out
ss
adc
push
adc
lea
jnp
adc
rorl
aas
fsubl
lea
xchg
stos
loop
arpl
mov
push
or
cmp
cmpb
outsl
mov
testb
int
cs
in
cmp
jns
pusha
mulb
pusha
pushf
movsb
xchg
mov
jp
leave
fsub
mov
lret
rcr
mov
jb
pop
shll
mov
adc
hlt
add
sahf
xor
hlt
mov
mov
jnp
aad
xchg
jae
pop
or
sub
inc
mov
sub
lret
sbb
xor
int
sbb
xor
xchg
in
mov
xchg
xchg
cmpb
aas
scas
jbe
push
mov
sbb
mov
sub
jle
addr16
push
add
push
pop
and
insb
dec
sbb
xchg
cmp
vcmpss
sub
sub
scas
xchg
fdivrl
jbe
iret
dec
xchg
cmp
je
mov
sahf
aad
nop
sbb
mov
mov
xchg
sub
jle
push
loopne
pop
popa
push
pop
jno
imul
inc
cmpsl
ffreep
jb
shl
add
xchg
xor
int
mov
int3
out
mov
js
mov
pop
jmp
inc
xor
aam
sub
or
in
sub
jns
mov
pop
shrl
sbbb
inc
mov
cltd
jb
mov
lahf
sbb
lock
jp
repz
mov
rcrl
dec
dec
push
mov
and
xchg
sbb
sbb
mov
mov
orb
and
bound
shlb
leave
test
pop
dec
push
out
jnp
jns
push
xor
setbe
push
lock
into
push
ds
insb
stc
mov
adc
insl
movsl
sub
in
push
push
cmp
cmpl
or
pop
xchg
pop
fiadds
cltd
mov
push
das
mov
lahf
pop
mov
pop
xchg
das
fcompl
in
and
and
sbb
cli
shr
lret
push
push
push
and
jne
lcall
adc
bound
hlt
pop
pop
out
inc
in
adc
mov
orl
inc
xchg
outsb
and
mov
fldcw
out
adc
lock
popa
sbb
sbb
jl
in
stc
cltd
mov
jl
cmp
jb
sub
xchg
and
clc
nop
bound
cmp
mov
ljmp
mov
cmpsl
sti
aaa
add
testl
aaa
push
ds
gs
xchg
adc
aad
test
cmp
sti
jae
mov
dec
adc
dec
mov
sbb
fs
pusha
pop
mov
push
pushf
je
rol
dec
or
sbbl
jp
mov
pop
das
push
lret
add
xchg
xchg
jns
cmp
push
xchg
dec
or
add
out
sbb
fdivl
pop
inc
dec
movsl
std
inc
les
mov
aaa
lahf
inc
outsb
insl
repz
arpl
jb
adc
jmp
sbb
loopne
stos
xor
dec
daa
arpl
and
cmp
sbb
pushf
mov
sarb
dec
xchg
ret
or
scas
pushf
sbb
scas
movsl
test
add
jl
data16
lahf
sti
mov
aam
xor
lds
cmp
adc
push
mov
pushf
jecxz
add
into
mov
aas
mov
add
dec
loope
popa
pop
or
mov
sub
scas
cmpsl
cmp
adc
dec
jmp
test
ljmp
addl
repnz
mov
addr16
mov
or
repz
std
mov
mov
ja
sahf
sub
sub
lcall
imul
cwtl
lahf
jle
fld
lret
xchg
fs
pop
or
inc
sbb
inc
jmp
sub
xchg
in
mov
call
xchg
shl
shl
jp
inc
adc
mov
push
arpl
rcll
sbb
mov
xchg
push
add
jmp
dec
aam
lods
pop
or
or
sahf
xor
inc
in
repnz
loopne
into
jnp
xor
and
mov
repnz
add
jge
cmc
pop
scas
test
sarb
js
add
pop
mov
mov
or
andl
mov
pop
mov
jae
stc
jae
cmp
fnstcw
out
sbb
icebp
int
or
sbb
or
inc
js
add
loop
pop
cmpsl
cs
dec
ror
imul
jmp
inc
add
cmp
sbb
xor
bound
enter
xor
lea
push
jae
in
sub
das
jg
loopne
stos
fsubrs
repnz
sub
xchg
add
cmpsb
imul
aam
mov
insl
and
decl
cmp
stos
lret
shrl
xlat
movl
cltd
lahf
push
mov
sti
mov
push
pop
xor
xor
insb
addr16
in
mov
jnp
lea
adc
pop
js
add
aas
sub
shl
pop
dec
stc
imul
xor
inc
ret
xor
jmp
scas
hlt
es
mov
aad
mov
shlb
push
mov
es
negb
push
push
mov
enter
jns
std
jae
out
sbb
mov
jmp
stos
adc
jg
push
ljmp
roll
inc
or
mov
inc
cmp
inc
dec
xor
aas
xchg
mov
repz
xor
ret
rcl
sbb
stos
adc
aas
adc
add
out
aaa
jae
adcl
out
int3
scas
sti
outsl
xchg
ljmp
out
or
test
repz
mov
pusha
jmp
cmp
out
jno
das
inc
sub
adc
out
jnp
pop
push
jae
dec
sbbb
xchg
xor
notb
andl
shll
in
cmp
mov
filds
inc
push
cmpsl
mov
in
xlat
mov
fidivrs
popf
cmpsl
cmp
incb
xor
xor
dec
or
rorl
scas
lret
mov
lret
jns
xchg
bound
shll
add
fisubl
add
push
in
repnz
cmp
imul
in
mov
pop
arpl
sub
adc
cwtl
cmpl
xchg
outsl
mov
loope
decb
fcoml
testl
mov
xor
jns
sub
xor
xchg
jl
dec
sahf
scas
xor
sub
arpl
inc
lcall
cs
in
xchg
dec
adc
and
mov
push
mov
enter
in
out
lret
fidivl
stos
pop
dec
cld
les
xor
arpl
stos
addr16
repnz
push
popa
mov
sahf
imul
in
push
jo
in
add
int3
out
enter
movsl
sub
loop
insl
popa
xchg
dec
out
adc
sub
pop
mov
mov
add
lret
in
aam
outsb
ds
cmc
popf
push
xchg
jl
iret
jb
icebp
mov
das
les
pop
sbb
mov
xor
mov
mov
and
pop
mov
push
gs
ret
sbbl
stc
or
sub
loope
dec
std
mov
push
add
and
pop
inc
leave
xor
clc
sub
mov
pop
lret
xchg
jge
fs
sub
add
repz
mov
pusha
push
add
adc
xchg
push
outsl
xchg
pop
aas
sbb
aaa
rolb
push
push
xchg
and
and
xchg
xchg
cmp
and
pop
xchg
aas
stos
or
inc
rorl
pop
std
shrl
lods
dec
xor
ret
sub
dec
sub
lods
cs
cmpsb
addr16
std
mov
push
or
nop
into
jge
imul
in
icebp
arpl
push
dec
cs
jns
mov
cwtl
popf
int
les
mov
lret
ja
and
in
inc
mov
es
xchg
pop
ja
out
mov
pop
out
xor
ljmp
test
lods
jno
leave
out
imul
jne
pop
fdivs
insl
xlat
xor
rol
dec
push
int3
push
jns
add
cltd
mov
mov
inc
scas
mov
add
push
imul
cmpsl
dec
mov
rcll
or
jg
sbb
les
and
mov
shr
sub
imul
jl
push
mov
movsb
xor
and
aaa
ret
cld
je
cli
pop
xchg
shrb
addl
jb
scas
jmp
pop
xchg
popa
test
fists
icebp
inc
dec
lock
mov
js
pop
mov
aad
outsb
cmp
sbb
ret
add
imul
pop
dec
std
insl
cltd
and
mov
mov
pusha
scas
rolb
rclb
pop
stos
ficompl
sbb
sbb
cwtl
test
and
lea
xlat
adc
mov
js
aad
xchg
mov
cmp
cmp
push
and
mov
xor
mov
and
scas
or
jp
sbb
pop
rorl
push
mov
movsl
xor
push
rol
and
jge
jge
lss
mov
fiaddl
aam
and
aaa
mov
jge
out
out
insl
ret
push
add
jbe
btc
into
push
bound
shll
lock
std
test
sub
xchg
inc
xlat
ljmp
push
or
ret
cmp
idivb
lahf
in
xchg
in
jl
jno
iret
inc
mov
cs
jbe
xor
dec
xorb
mov
shr
or
pop
push
ds
jo
inc
pusha
adc
cmp
imul
lcall
je
test
arpl
or
or
push
cmp
ret
dec
mov
out
repz
cmp
jns
lock
das
lods
xlat
mov
xchg
dec
jmp
leave
pop
mov
push
ds
jb
push
ret
and
mov
mov
out
mov
xlat
jns
ja
in
push
test
and
outsb
popa
xchg
mov
cmpsb
and
mov
in
adc
sub
fistpll
dec
pop
xchg
adc
jnp
aas
and
mov
adc
es
adc
mov
cwtl
sbb
or
jecxz
jae
stos
inc
lock
lods
xor
add
imul
mov
lcall
mov
xor
popa
stc
lahf
sbb
push
popa
jmp
jae
pop
jbe
push
mov
adc
sbb
mov
jne
push
push
daa
leave
jg
lods
sub
jmp
pop
outsl
or
mov
push
dec
xor
in
mov
imul
mov
mulb
jecxz
push
jno
mov
cs
mov
pop
sarl
push
push
jmp
sub
roll
mov
inc
push
nop
shrl
mov
rcl
sub
xor
add
aad
dec
fs
push
dec
mov
ljmp
add
jnp
sub
pop
pop
outsl
orl
push
or
sbb
in
xchg
rolb
add
or
dec
pushf
jb
ret
cmp
jmp
or
sub
ljmp
js
in
pop
das
jns
loope
xchg
sub
jbe
sarb
clc
cmpsb
inc
div
jl
and
dec
sarl
movsl
jo
jne
sub
jae
fwait
sti
jns
mov
test
cmpsl
hlt
jo
add
pop
inc
into
push
dec
divl
mov
or
cmovo
out
fstps
xor
popf
enter
inc
xchg
lods
pop
cmp
jbe
leave
dec
lds
inc
test
cwtl
test
or
enter
jg
std
in
test
xchg
cli
jnp
les
xchg
xchg
jmp
int3
sub
fldl
lret
movsb
push
mov
mov
sahf
pushf
scas
lds
cmp
mov
sbb
adc
cwtl
and
mov
popa
mov
aaa
mov
inc
sbb
or
jbe
xchg
adc
jecxz
sarb
jo
cmp
mov
mov
nop
ljmp
jns
jns
mov
in
cmc
xchg
add
in
insl
push
pop
lahf
clc
push
fcoms
inc
and
mov
mov
divl
mov
dec
cmpsl
cli
sub
push
jns
cmpsb
cltd
inc
es
fisttpll
icebp
push
bound
arpl
push
repz
loop
cmpsl
jle
xchg
push
mov
mov
test
arpl
sbb
mov
xchg
adc
insl
and
hlt
sub
cli
lock
mov
xor
rol
sbb
imul
nop
xchg
gs
lock
xchg
mov
out
ja
sub
lds
out
jo
inc
add
mov
jno
jb
push
shll
cmp
pop
sbb
pop
sbb
and
rol
mov
push
xchg
in
pop
jbe
xchg
or
mov
pop
cmp
shlb
lds
icebp
lahf
popa
mov
inc
xor
push
lahf
push
sbb
xchg
das
ror
movsl
push
pop
out
inc
jge
rol
sbb
das
stos
subb
or
mov
into
insl
ljmp
sub
sub
push
ss
cli
enter
cmp
add
cmp
in
cmp
ret
mov
in
into
adc
and
mov
cmp
imul
pushf
mov
mov
dec
test
mov
shlb
insl
jl
push
stc
test
iret
gs
xchg
xor
mov
dec
loope
jp
and
movsb
push
or
push
mov
arpl
sub
or
addb
mov
sub
push
in
cmpsl
out
insb
pop
movsl
cmp
scas
jbe
out
lods
repz
movsb
add
jnp,pn
pop
pop
sbb
sarl
mov
addb
mov
jno
incl
fildl
aaa
lea
repz
xchg
bound
shll
fbstp
xor
or
mov
jo
scas
and
mov
sbb
sub
pop
stc
pop
push
mov
je
push
mov
xchg
xor
jmp
pop
pop
adc
push
js
lret
int
add
lahf
out
aaa
add
add
sbb
loopne
jecxz
ss
test
or
repnz
inc
imul
or
inc
mov
pop
outsl
pop
loopne
mov
add
testl
rcl
ss
pop
mov
std
and
js
lods
xchg
xchg
adc
in
popa
mov
addl
xchg
push
std
test
adc
out
mov
mov
mov
mov
adc
insb
push
pop
jne
lret
inc
mov
dec
rorb
inc
stos
pop
xchg
call
mov
pop
test
mov
ror
mov
rolb
sbb
cli
cmpsb
cs
sbb
xor
xchg
jb
mov
pop
lret
xchg
dec
sbb
lods
inc
cmp
xchg
inc
lods
sahf
test
imul
mov
sub
mov
xchg
cmp
ss
inc
sbb
dec
pop
mov
test
jg
fidivrl
cmp
push
xlat
clc
adc
mov
push
inc
jne
sub
sarl
mov
xor
sarb
les
jae
cmpsb
and
jmp
xchg
push
test
cmpsb
ffree
cmpl
enter
notl
mov
ds
or
and
or
mov
clc
cmp
mov
lods
pop
sahf
sar
lahf
inc
or
push
das
sbb
popa
or
imul
movsb
pop
lock
dec
jb
stos
cld
sbb
fstpl
ret
sub
jl
add
lds
sub
or
test
pusha
mov
lods
mov
enter
leave
add
test
in
jno
inc
loop
test
jecxz
mov
lock
mov
fldl
add
lea
les
xor
notl
in
aas
dec
int
lods
sub
jmp
rolb
and
adc
mov
dec
sub
pop
js
jb
ret
inc
mov
dec
test
lret
push
outsb
push
pop
inc
std
push
test
or
mov
xchg
adc
and
or
fildll
pop
lock
adc
dec
dec
mov
mov
push
sbb
jle
call
js
mov
jle
mov
repnz
xor
out
inc
cmp
xchg
sbb
mov
hlt
xor
cld
cli
or
inc
leave
push
cli
xchg
iret
add
xor
or
or
leave
icebp
cmpsl
fucomip
idivl
cmc
shlb
test
or
test
sub
repnz
jns
xchg
lds
jnp
jle
jecxz
add
dec
xchg
in
les
out
sbb
iret
enter
in
xchg
adc
inc
xor
sub
xchg
inc
insl
jmp
nop
scas
inc
pop
ljmp
mov
sbbb
fsubl
cli
psllw
mov
add
xor
mov
mov
lods
push
insb
insl
scas
lcall
mov
xchg
adc
in
pushf
arpl
jmp
sub
ja
fisubl
data16
xchg
or
scas
pop
mov
mov
mov
mov
out
inc
jo
cli
jge
jne
mov
fwait
in
pop
jne
jp
mov
push
stos
mov
inc
int3
dec
fidivrs
xorl
xchg
add
idivb
repnz
adc
lods
out
insb
or
and
pop
inc
sbb
js
ficompl
frstor
aad
inc
fs
pop
fucomp
mov
sbb
mov
jl
loopne
dec
inc
mov
or
dec
test
pop
mov
sub
adc
jnp
jo
mov
and
mov
add
stc
mov
mov
sbb
sub
pop
xchg
addr16
xchg
sub
ret
je
mov
add
dec
daa
mov
adc
or
and
xor
cwtl
cmp
xchg
mov
pop
imul
cmc
push
lahf
pop
lahf
mov
mov
xchg
mov
loop
pop
lcall
sub
data16
pop
nop
xor
jo
adc
pop
or
test
and
inc
mov
ss
bound
mov
pop
fidivrl
ret
sti
xor
sub
int3
subb
fwait
mov
mov
inc
mov
xchg
add
test
lock
popf
and
mov
xchg
push
stos
xor
test
and
mov
inc
iret
dec
in
or
frstor
scas
mov
xchg
icebp
lds
mov
mov
cs
call
fstp
ljmp
mov
sub
addb
jp
gs
adc
ja
rcl
push
sbb
mov
dec
mov
sahf
push
in
jns
cld
hlt
aam
fwait
stos
pusha
js
std
dec
insb
xchg
sbb
add
push
rcrl
fbld
cmp
popf
dec
mov
out
lret
movsb
test
adc
stos
cmp
xchg
xlat
aam
adc
cmp
aad
in
pusha
scas
andb
adc
xchg
push
and
xchg
pop
shrl
push
call
mov
cltd
lods
jle
mov
mov
in
mov
xchg
popf
add
ss
xor
xchg
test
pop
mov
or
out
adc
cmp
sbb
add
push
addr16
fs
mov
cmp
mov
push
inc
mov
pop
mov
lods
ss
mov
mov
ss
cmpsb
pop
ret
or
int
xor
xor
jle
add
inc
pop
add
aas
and
push
pop
or
lds
jne
mov
arpl
cld
in
mov
mov
in
mov
stos
xchg
bound
jle
cmp
add
mov
orb
sbb
dec
daa
sbb
js
cmp
mov
push
cmp
jae
jmp
or
lret
imul
push
lahf
cltd
inc
enter
mov
enter
sbb
or
jns
in
leave
push
xor
jo
add
sbb
xchg
sbb
sub
push
push
xor
ficoms
lahf
sbb
popa
fstp
mov
xchg
das
fidivl
add
stos
stos
cmp
int3
in
call
inc
jne
and
movsb
pop
mov
sub
dec
addb
cmpsb
test
mov
jl
jbe
lcall
ds
mov
aaa
cmp
jp
fcmovnbe
jbe
push
in
cwtl
adc
jae
pop
lahf
xor
int3
rclb
sahf
sub
pop
lock
inc
or
mov
jp
jp
mov
mov
inc
rolb
jl
int
int3
icebp
ljmp
popf
cmp
jmp
xlat
lods
pop
into
jae
cld
cmpsb
mov
leave
push
mov
lahf
mov
jno
test
test
or
push
iret
repz
or
adc
scas
mov
imul
imul
std
and
and
cmpsl
push
cltd
xorb
xchg
test
rorb
out
push
into
aaa
jecxz
sbb
xchg
ljmp
lret
cmp
scas
or
sub
aam
jmp
xchg
inc
mov
pop
insl
and
mov
jp
dec
dec
or
inc
push
imul
cmp
scas
iret
hlt
cmpsb
imul
lahf
dec
das
std
iret
push
fimull
je
pusha
pop
push
stc
shr
inc
push
nop
sbb
and
inc
xorl
push
pop
int3
adc
jmp
dec
xchg
js
adc
movsb
nop
fldcw
pusha
push
stc
jl
push
jb
xorl
sbb
enter
adc
jl
scas
loope
gs
sbb
inc
jl
add
cld
add
test
dec
clc
mov
pop
pusha
into
dec
jnp
ljmp
cmpsb
sbb
js
adc
xor
int3
hlt
sbb
ja
repz
imul
adc
pop
test
jae
data16
ds
or
lcall
xlat
sub
jg
jo
add
adc
adc
xor
cmp
mov
pop
sbb
xchg
aad
sub
test
jmp
in
insb
scas
mov
shrb
inc
call
std
lcall
inc
outsl
push
in
clc
mov
adc
leave
testl
pop
push
xchg
pop
lcall
std
mov
aas
xchg
aaa
test
jne
fwait
ljmp
popa
sbb
fdivrp
psubusb
pop
jbe
mov
jmp
imull
pop
lret
mov
es
pop
fidivrl
or
sub
and
mov
cmp
adc
pushf
adc
xor
mov
xchg
movsl
xchg
mov
cmc
repnz
das
mov
xchg
mov
mov
or
cmp
inc
jmp
outsb
xlat
add
cmp
sbb
xchg
dec
fsub
pop
cmp
add
scas
pop
jl
movsb
pusha
imul
sbb
mov
icebp
xchg
stc
ds
les
ror
mov
outsb
ljmp
jmp
mov
cmpsb
insb
stc
pushf
insb
outsl
rcrl
jl
sbb
lret
inc
cmpsb
mov
cmp
pop
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
xor
xor
xor
push
push
movzwl
adc
mov
mov
or
mov
mov
mov
or
andl
xorl
movl
movl
mov
mov
sub
mov
xorl
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
orl
mov
mov
or
sub
xor
xor
and
mov
sbbl
orl
adc
mov
mov
xor
xor
mov
sub
and
sub
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
call
cmpl
jb
add
mov
adc
orl
mov
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
mov
add
push
and
mov
mov
lea
mov
mov
mov
mov
andl
xor
subl
add
adcl
mov
dec
mov
sub
mov
mov
andl
add
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
mov
xor
mov
andl
add
movl
cmp
je
movl
mov
jmp
mov
mov
cmp
movl
jne
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
mov
xor
mov
dec
xor
adc
add
xor
or
adc
mov
mov
adcl
mov
xor
addl
add
imul
mov
orl
xor
movl
add
movl
cmp
mov
mov
push
movl
je
movl
mov
orl
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
subl
mov
addl
xor
xorl
add
xorl
imul
mov
movl
jmp
and
mov
xor
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
mov
mov
sub
jmp
inc
sbb
fwait
jnp
mov
call
jp
out
jp
scas
xor
inc
aaa
nop
shrb
shrl
and
cmpsb
mov
or
mov
cmp
rolb
sbb
sahf
rol
aas
pop
addr16
icebp
mov
pop
daa
ja
jno
out
fdivrs
popl
xor
mov
jl
call
int3
repnz
test
mov
sub
adc
andl
xor
fistps
push
push
cmpsb
es
sbb
lds
mov
fdivs
and
and
jnp
xchg
xor
adc
push
cmpsb
mov
mov
add
mov
call
pop
lods
rcrl
fs
scas
dec
push
bound
sbb
les
jg
cltd
add
outsl
cltd
xchg
lea
cwtl
or
aam
adc
inc
sarl
sbb
test
dec
or
mov
add
das
jecxz
pop
andl
pop
rcrb
lret
rcrl
sar
movsl
cmc
gs
lea
jecxz
ja
push
sbb
mov
jp
mov
cmp
xor
jl
enter
adc
iret
lcall
int
lods
sti
sub
call
push
jo
inc
fstp
inc
push
add
lods
ldmxcsr
and
rol
arpl
inc
int3
stos
out
mov
jb
fldenv
or
mov
setp
adc
mov
xchg
cmp
push
scas
xchg
jnp
pop
or
mov
outsb
cmpl
mov
inc
mov
cmp
push
js
mov
sub
lock
pop
popf
pop
insl
mov
lcall
mov
xabort
rol
push
cmp
js
add
adc
out
dec
xor
fistl
leave
inc
out
xchg
cwtl
lcall
cmpsl
sub
xchg
ja
stos
xchg
jge
int
adc
fisttpll
dec
retw
cmp
not
mov
dec
loope
push
xor
pop
jmp
mov
jnp
aaa
addl
adc
loop
in
adc
ja
aaa
push
mov
cltd
pushf
pop
sbb
xor
sub
dec
roll
push
nop
mov
rorb
xchg
jbe
loope
mov
gs
xchg
scas
test
and
inc
arpl
or
cwtl
sbb
adc
iret
push
test
loop
shlb
adc
ret
add
cmp
daa
scas
xchg
loopne
mov
mov
and
and
xchg
ja
inc
pop
jle
xchg
lret
jecxz
sub
push
mov
lret
idiv
xchg
push
pop
cwtl
ja
lret
push
pop
adc
jnp
rorb
push
jmp
pop
addr16
inc
pop
ja
adc
dec
xor
out
icebp
mov
push
sbb
insl
jp
inc
mov
pop
dec
pop
jne
push
mov
test
mov
pop
push
movsl
add
bound
orb
pop
push
stos
dec
loopne
clc
push
int
cwtl
xchg
flds
aaa
pop
mov
mov
push
and
mov
daa
ret
xchg
or
es
adc
cvtps2pi
gs
push
ss
jmp
pop
fcoml
cmpsl
inc
mov
jp
gs
jle
or
ds
inc
xor
inc
cmp
repnz
adcl
mov
jno
enterw
or
enter
gs
adc
cmp
mul
fyl2xp1
xchg
mov
jo
outsl
sub
pop
addr16
mov
sti
inc
or
adc
fisubl
mov
lods
xor
xor
fs
stc
inc
fwait
mov
nop
xor
repz
sub
add
and
outsl
cld
mov
stc
jns
les
pop
mov
sbb
pop
jp
push
jbe
insl
popa
lods
insl
fdivrl
cmp
xlat
mov
pop
xor
stc
cmp
push
push
jge
mov
jp
mov
stc
mov
adc
ret
jne
outsb
bound
mov
dec
insb
jl
mov
repz
pop
rorb
cmp
sub
pusha
sub
cmpl
jg
cli
sub
outsw
xor
mov
rorb
iret
pop
out
jecxz
es
mov
into
push
jae
enter
jg
icebp
sbb
and
pusha
lret
dec
movb
cs
and
xchg
scas
lods
shlb
fs
rcll
xchg
fdivl
je
test
shr
lea
jne
adc
mov
push
fidivrl
or
aam
int3
fisttpll
inc
mov
ss
add
mov
mov
dec
out
push
add
or
sti
xchg
pop
ss
jno
ss
sar
loop
popl
push
adc
mov
and
fcom
dec
int
lods
enter
js
stos
or
fsubrl
jns
cmp
mov
loope
add
fstl
sarb
lahf
sbb
aad
jbe
jne
cmp
mov
pop
push
mov
jnp
mov
adc
sarb
push
arpl
rorb
cmpsb
inc
mov
pop
push
add
cvtps2pd
mov
sbb
lahf
lea
rcr
sbb
xchg
push
add
popf
ljmp
pop
push
jecxz
mov
add
pop
enter
push
cmpsl
test
frstor
in
fmuls
dec
adc
jecxz
pop
mov
test
push
jbe
mov
cmp
test
xchg
cmp
lcall
imul
pop
inc
leave
dec
mov
sbb
jg
pop
mov
out
cmp
inc
cltd
iret
pop
movsb
cmpb
pushf
repnz
push
movsb
jg
and
int3
sub
imul
cmp
cltd
xor
dec
pop
out
rcrb
xor
xchg
out
test
js
cltd
jg
sti
jo
xchg
jecxz
ja
cmp
xchg
ficoml
fsubs
mov
jbe
sarb
fs
lcall
fs
push
push
and
test
pop
ljmp
test
rclb
pop
inc
adc
imul
testl
shrl
pop
pop
data16
loope
pop
cmp
scas
mov
xchg
fstl
xchg
jne
adc
mov
cs
mov
inc
lret
xchg
mov
test
or
lods
gs
xor
insb
xchg
fstpl
pop
add
or
das
add
mov
jns
sub
cmp
test
jbe
sbb
stos
adc
jecxz
out
pop
imul
and
jno
ds
or
and
icebp
enter
scas
pop
pop
inc
mov
inc
sbb
inc
bound
out
int
rorb
movsl
xchg
loop
sub
sti
inc
orl
enter
setbe
ds
mov
pop
nop
mov
enter
mov
dec
sub
adc
mov
fadds
ja
jno
mov
adc
hlt
int3
es
insb
mov
sbb
test
cld
jo
adc
fstpl
dec
jecxz
aam
ds
mov
push
cmp
xchg
std
aaa
jle
mov
shrb
enter
add
ret
dec
sub
lods
dec
xchg
js
aad
test
cli
add
mov
jno
push
pop
lods
in
cmp
xchg
lods
sbb
test
jg
lods
jae
sub
leave
ret
in
movsl
lcall
add
adc
mov
leave
sahf
jae
nop
jmp
cltd
out
repnz
aaa
icebp
xlat
int3
stc
pop
xchg
das
popf
adc
rclb
mov
and
xchg
ret
pop
jne
push
mov
subb
adc
push
xchg
sbb
daa
add
repnz
jae
ret
sub
in
cmpsl
popfw
cmp
sti
mov
mov
mov
pusha
imul
popf
out
pop
or
test
in
mov
cmp
fs
dec
jnp
mov
shl
jle
shlb
aaa
sbb
pop
lock
hlt
xchg
lea
stc
jnp
and
mov
insb
rcrb
inc
shlb
jp
shlb
lods
push
xchg
insl
orb
cli
dec
push
xor
push
lret
dec
xchg
sub
jmp
inc
push
nop
test
flds
out
pop
out
fsubl
out
rolb
inc
call
adc
jp
pop
and
fadd
stos
iret
jle
sahf
xchg
jbe
icebp
dec
arpl
bound
xchg
lret
mov
jbe,pt
lcall
push
adc
dec
sub
lods
movsl
ret
adc
loope
je
rorl
xor
loope
add
jge
mov
hlt
pop
mov
or
mov
ja
sbb
jnp
rorl
pop
mov
jge
es
push
push
xchg
loope
fnsave
js
mov
sub
inc
inc
call
out
pop
xchg
pop
jp
mov
inc
xor
mov
sbb
jmp
mov
std
out
jae
jl
sbb
mov
mov
dec
lahf
rcr
fstpt
aas
sbb
adc
arpl
mov
xchg
cmp
out
mov
inc
jno
mov
mov
dec
shrl
jne
addr16
rorl
jge
imulb
jge
or
dec
cmpsl
sbb
xchg
test
rcr
mov
int
subb
sarl
outsb
jbe
jg
lds
xchg
addr16
dec
push
cmc
sub
repnz
mov
std
js
test
dec
pop
xor
into
cmp
pop
out
mov
dec
daa
pushl
pop
jno
lret
and
ret
jbe
mov
inc
and
test
sub
mov
push
testl
ljmp
rcll
sbb
sbb
sbb
or
inc
fsubrs
jo
fidivs
test
loop
addr16
pushf
insb
scas
mov
inc
cmc
fptan
adc
xchg
pop
fsubr
fstpl
fwait
in
push
pop
repnz
xor
xchg
sbb
inc
imul
ret
push
xchg
das
ret
mov
pop
mov
mov
sbb
je
arpl
add
xor
outsl
lods
inc
mov
cmp
call
imulb
lock
sbb
mov
push
sub
xor
mov
pop
dec
jne
inc
rorb
mov
pop
cs
call
shrb
cmc
dec
xlat
pop
mov
jg
test
jns
sar
stc
push
mov
jae
scas
imul
test
cltd
fwait
adc
and
add
mov
xchg
xchg
jbe
lods
movsb
xchg
add
popf
divps
inc
cmpsl
adc
mov
repnz
pop
and
adc
outsb
sbb
xor
inc
dec
jno
jns
ss
bound
mov
and
scas
ljmp
in
dec
fdiv
push
dec
movsl
repz
sbb
pop
loop
std
mov
mov
sbb
lea
mov
fmull
mov
mov
into
and
pop
in
xor
mov
cwtl
sti
fs
inc
lock
dec
add
lods
addb
pop
ljmp
inc
cmp
cmp
pop
test
mov
cmpsb
arpl
insb
cli
clc
shr
jnp
jp
push
cmpsb
sbb
lods
andb
data16
or
jae
imul
jae
inc
daa
add
pop
adc
adc
xor
loop
in
fwait
mov
or
popa
jg
mov
div
sbb
fstp
adc
test
pop
lcall
mov
movsb
xchg
pop
push
and
xor
and
xchg
add
mov
jb
mov
cmp
insb
pop
ret
and
std
xor
push
fdivrl
sbb
jno
sarb
push
cmpsb
or
test
fs
repnz
imul
mov
pop
imul
mov
lea
cmp
subb
cld
add
add
xchg
and
ljmp
inc
xchg
mov
sbb
roll
nop
repz
sub
shrb
jecxz
mov
mov
stc
sub
jae
jmp
dec
xor
out
nop
push
ds
lea
dec
cmp
or
ja
push
enter
popf
add
loope
cmpsb
lds
movb
xor
jle
adcl
inc
ret
out
adc
dec
xor
pop
add
mov
imul
dec
test
arpl
sub
test
mov
sbb
mov
mov
call
das
and
sub
cmpsb
jb
lods
fs
fs
mov
ret
ss
push
cmp
pushf
xor
mov
push
shlb
xorb
bound
fiaddl
or
inc
inc
xchg
mov
mov
imul
gs
push
imul
sarl
mov
sub
movsb
dec
aad
xor
push
fwait
push
jo
mov
pusha
ret
inc
lods
xchg
cs
in
sub
adc
repnz
mov
sub
fisttps
add
ja
imul
call
loope
lret
in
inc
das
incb
sbb
pop
dec
pop
inc
push
or
shll
push
mov
add
loopne
add
rcr
jmp
outsl
cmp
cmp
cmpsl
sbb
jne
cs
dec
aad
nop
mov
iret
std
xchg
test
jb
sbb
rorb
out
xchg
std
add
mov
daa
mov
dec
stc
pop
or
dec
scas
dec
mov
imul
cmp
clc
test
sahf
xchg
and
mov
je
data16
or
scas
push
repz
or
push
enter
aaa
xchg
xchg
jg
and
arpl
lret
or
adc
fsubl
fistl
pop
cmp
shlb
push
movsb
jl
adc
push
or
lret
push
enter
dec
xor
mov
and
loope
fiadds
dec
stos
scas
mov
sub
dec
in
or
cmp
jo
ljmp
inc
repnz
cmc
aad
push
adc
dec
insl
add
int3
into
sarb
repnz
call
sbb
mov
repnz
or
arpl
call
insl
aam
mov
xor
mov
jo
jno
aaa
sub
mov
xchg
clc
lret
or
test
xchg
or
jno
adc
xor
mov
dec
cmp
or
pop
push
icebp
lods
ret
scas
mov
lods
add
in
lahf
popa
sub
vpshld
shlb
dec
pushf
or
call
nop
rcrb
out
mov
adc
xor
js
push
xchg
inc
xchg
cmp
cmp
cmp
sahf
test
sbb
mov
push
cwtl
pushf
inc
out
jae
pop
inc
cmp
cltd
jmp
fldcw
mov
out
sub
mov
mov
xchg
pop
cli
sarl
xor
int3
aas
xchg
jecxz
popa
daa
aaa
mov
jl
xchg
inc
mov
in
sub
pop
mov
mov
jmp
inc
pop
or
orb
imul
push
fistl
mov
popa
mov
push
in
sub
mov
rcr
lea
shl
dec
pop
aaa
fstl
add
add
push
andb
nop
sti
or
fld1
shlb
pop
sbb
insl
rcrb
push
cmp
dec
sarb
sbb
push
js
mov
loope
xchg
mov
mov
loop
and
push
mov
mov
add
or
data16
jne
push
mov
or
lret
xorb
mov
add
sub
xor
rol
push
repnz
movsb
push
std
fsubrs
fmull
outsb
inc
scas
sti
bound
jmp
mov
scas
les
leave
filds
sti
xchg
cld
cmp
clc
fwait
je
pop
add
xchg
add
add
sub
stos
inc
leave
dec
dec
mov
push
jle
and
cmp
mov
mov
lods
xchg
mov
xor
mov
pop
cld
popf
fstp
xor
dec
insl
inc
stos
scas
in
lods
xor
inc
xchg
rcll
jl
lods
push
insb
mov
mov
es
mov
push
cmp
lret
test
mov
leave
push
dec
sti
dec
faddp
out
xchg
push
mov
mov
cmp
adc
xchg
cwtl
fcmovb
mov
lock
fisttps
ds
enter
pop
inc
jns
shll
jbe
sub
stos
dec
push
jno
pop
jns
or
sub
roll
cmc
fbld
cmpsb
ret
or
pop
inc
xchg
out
in
in
mov
mov
mov
in
mov
and
and
imul
xchg
cmpsl
movsb
fwait
mov
mov
jle
add
jno
inc
mov
mov
pop
xor
inc
jg
push
push
into
jne
ljmp
dec
push
and
sbb
mov
cwtl
test
sub
jle
into
xchg
aaa
fwait
or
iret
test
inc
repz
mov
mov
or
inc
inc
scas
push
loope
stc
sub
mov
filds
mov
cs
ja
mov
dec
aad
neg
cmp
loope
aad
mov
rcrb
mov
ljmp
mov
aaa
bound
btl
pop
data16
or
aad
inc
adc
outsb
fsubp
bound
shl
jecxz
fstp
jae
push
nop
loope
add
scas
xlat
outsb
xor
mov
loop
jl
xchg
mov
adc
jae
dec
mov
mov
pop
push
je
lea
out
jl
iret
pop
cwtl
sbb
and
pop
mov
fildl
loope
xchg
daa
xlat
jmp
outsb
fwait
daa
rcrl
imul
lcall
test
rcrb
push
sbb
push
movsl
inc
pop
mov
fadd
mov
jb
pop
ja
push
js
dec
lea
mov
arpl
subl
hlt
xchg
insl
xor
rol
jo
clc
cmpsb
push
sub
jecxz
pushf
fs
push
or
pusha
nop
cmpsb
mull
mov
sub
fxch
nop
outsb
push
insb
sbb
and
and
mov
ret
test
mov
jp
mov
inc
aam
cmc
or
lds
mov
imulb
jl
pop
jmp
imul
cmp
sub
imul
es
jns
jmp
mov
in
pop
sub
notl
in
mov
adc
cmp
popf
xchg
jnp
push
cmp
xorb
add
data16
dec
mov
testb
jb
repz
out
lcall
push
dec
and
jmp
dec
imul
mov
roll
gs
loopne
outsb
sub
int3
inc
xchg
cs
xchg
sub
pusha
mov
mov
push
mov
xchg
inc
cmc
add
popf
cmpsb
stos
mov
xor
mov
push
repnz
es
popa
cli
out
lcall
inc
mov
popa
dec
dec
mov
imul
test
fistl
cmp
data16
pop
push
xor
rcr
adc
lods
mov
dec
mov
mov
sub
xor
xchg
imul
xor
into
shll
add
adc
jns
xorl
das
cmp
mov
int
jb
mov
aad
sub
push
and
cmpsl
pop
mov
mov
fcmove
lods
add
mov
pop
repz
das
in
pusha
gs
cmpsb
ror
pop
popa
int
and
std
xchg
leave
aas
mov
pop
sub
fs
push
lcall
push
in
andb
xor
sub
cmpsl
xchg
push
lcall
dec
mov
mov
fwait
sahf
or
js
and
inc
jle
cmpsl
popa
mov
cmp
add
mov
cmpsl
clc
jno
daa
adc
mov
and
jb
dec
ret
stc
leave
add
push
add
inc
pop
and
pop
in
in
push
fstps
jno
mov
paddusw
push
or
bound
xchg
pop
xchg
stos
mov
adc
les
add
push
gs
lcall
inc
subb
inc
adc
in
jmp
add
outsl
imul
stos
ret
xchg
sbb
clc
loop
das
mov
mov
pusha
push
jmp
or
in
lods
shll
cltd
mov
dec
leave
icebp
add
pushf
ss
cmpb
pop
mov
mov
xorl
and
pop
xchg
sub
loopne
dec
inc
aad
xor
cmp
pop
imulb
xlat
cmpsb
push
imul
push
jecxz
jns
adc
das
scas
xchg
test
xchg
sbb
aad
sbb
dec
mov
jne
test
mov
inc
push
aad
dec
into
xchg
rorb
daa
mov
push
xor
xor
jge
aas
mov
dec
cltd
xchg
sarb
addr16
call
pop
push
xor
scas
bound
adc
and
adc
icebp
lcall
sub
sarb
dec
lock
xchg
adc
lds
in
outsb
test
and
mov
out
sub
punpckhdq
imul
addr16
stos
loope
pop
enter
outsb
subl
into
test
push
out
pop
dec
push
fcompl
into
adc
fmull
inc
mov
gs
jg
sbb
lcall
sub
lods
xor
ficomps
iret
mov
cwtl
repnz
repz
push
inc
mov
rcrb
cmpsl
add
cli
mov
int3
xchg
popa
sbb
xchg
xchg
daa
sbb
push
jae
jae
leave
jae
pop
stos
mov
jge
dec
jmp
xchg
inc
adc
movsb
and
mov
std
lock
fwait
nop
mov
sub
or
inc
dec
xchg
data16
test
mov
ficomps
lahf
repnz
loopne
mov
outsl
xlat
and
ds
push
xchg
movsb
fisubs
mov
loop
add
cmpsb
mov
ficomps
xchg
and
cmp
inc
jnp
loope
pop
jno
push
and
icebp
xor
aad
mov
or
xor
or
insl
dec
xchg
jl
nop
scas
sbb
cmp
imul
sbb
mov
xor
cmpsl
jge
mov
sbb
and
lds
cmp
aad
pop
stos
adcl
mov
int
cli
add
enter
das
mov
cmpsb
sub
stc
lods
pop
mov
cmp
clc
shr
stos
imul
lahf
stc
jge
rcrl
js,pn
idiv
sub
sysexit
loopne
cmp
incb
adc
je
xchg
jbe
fsubp
lds
pop
fcoms
stos
dec
scas
lods
adc
and
mov
pop
std
pop
pushf
sub
mov
cmpsl
aad
call
and
ficoml
and
push
scas
jae
dec
lcall
or
sbb
aaa
or
xor
lcall
je
push
popf
arpl
into
xchg
pop
iret
xchg
dec
jae
arpl
cwtl
into
adcl
enter
sbb
divl
aam
xchg
arpl
add
inc
insb
out
mov
sub
into
mov
xchg
nop
outsl
adc
jp
mov
enter
mov
popa
cli
cmp
sub
xchg
and
pop
cld
or
gs
dec
mov
stc
sarb
add
aaa
in
mov
pop
scas
rolb
aam
and
imul
pop
int3
insl
data16
sub
sub
and
jmp
pop
cmp
jge
xor
shlb
popf
xor
insb
das
aam
pop
loop
or
mov
xchg
stos
pop
cmp
adc
add
push
mov
sti
lahf
clc
in
ret
iret
add
mov
xchg
lahf
lods
or
mov
daa
popf
and
mov
mov
out
push
adc
call
jno
stos
shlb
mov
jns
cli
mov
mov
xchg
in
sub
fidivl
push
mov
sub
push
aas
data16
test
push
jo
push
lret
pop
and
in
sub
lea
cmpsb
adc
xchg
stos
push
xorps
xchg
mov
sub
dec
daa
cmpsb
pop
jl
push
mov
enter
jecxz
ficompl
pushaw
xor
xor
jnp
enter
cs
xchg
jecxz
aas
stc
sub
or
mov
cmp
lcall
push
out
pop
fcom
sub
cwtl
loopne
ds
pop
arpl
inc
sbb
sbb
add
rolb
add
push
adc
lahf
mov
loopne
insb
pop
xchg
stos
lock
sar
addb
fnsave
push
gs
jg
sarl
fchs
mov
in
inc
cmp
adcl
mov
jne
int3
into
mov
outsl
test
push
std
mov
xor
sub
dec
mov
fdivrl
add
add
push
stos
push
sub
add
lods
shlb
out
pushf
mov
andl
js
push
push
push
lret
dec
test
inc
cmp
sbb
xchg
pushl
ss
hlt
daa
pop
das
mov
lret
inc
jmp
mov
push
mov
mov
push
std
xor
fadd
in
xor
sbb
sarl
mov
pop
xor
xchg
js
inc
lahf
dec
mov
dec
cld
les
add
inc
mov
dec
mov
dec
push
sbb
or
and
cltd
lret
xor
push
movsl
lret
mov
addr16
mov
and
sub
fcom
std
or
inc
jns
rclb
stos
pop
loop
mov
sub
jmp
sti
outsb
fcompl
jae
clc
das
adc
dec
sub
jle
mov
shll
mov
add
add
lds
int
outsl
ss
fdivrl
inc
sub
cs
dec
test
mov
mov
in
cld
push
arpl
shlb
pop
and
movl
pop
adcl
cld
push
cmpsl
inc
sbb
ret
pop
dec
jl
or
out
lret
ljmp
lea
jnp
pop
out
jns
mov
dec
mov
dec
mov
add
stos
mov
cmp
pop
or
push
movsl
test
pop
push
pop
pop
mov
cltd
cwtl
addr16
sub
mov
push
enter
mov
jbe
outsl
adc
push
mov
xor
push
lods
sbb
icebp
jmp
push
movsb
xlat
icebp
movsl
xor
xchg
mov
mov
arpl
pop
lea
sbb
mov
lahf
lods
out
xor
push
std
test
roll
addr16
cmp
mov
and
outsl
cld
xchg
xchg
xchg
out
js
clc
in
mov
je
gs
inc
aam
ja
mov
cmp
push
ret
and
pop
jnp
mull
aas
xchg
repz
into
push
mov
xchg
ret
mov
mov
jb
dec
iret
lock
push
add
xchg
stos
cs
push
pop
jl
insb
aaa
popf
push
cmp
mov
mov
inc
xchg
jno
in
inc
mov
push
jmp
inc
cmp
mov
mov
sbb
fiaddl
lods
pushf
rcrl
push
cmp
shrb
push
sub
aaa
repz
mov
int3
cwtl
sahf
repz
mov
sbb
sub
orl
fadd
push
in
dec
insl
daa
adc
xchg
int3
sti
push
fistps
jo
mov
xchg
popw
sub
sbb
pop
inc
lret
sub
clc
pop
push
popf
lea
cmpsl
aam
testb
inc
mov
outsl
or
cmp
lret
mov
hlt
enter
pop
cmp
sbb
into
aad
jmp
mov
mov
push
les
inc
outsb
imul
and
adc
sar
lret
and
test
xchg
in
adc
inc
jae
push
pop
subl
lock
bnd
insb
cli
jge,pt
adc
out
cmp
and
call
pop
rol
leave
or
test
or
inc
xor
fwait
gs
mov
out
pop
jecxz
push
cmp
icebp
push
jge
insl
xorl
push
or
adc
rorb
pop
rol
dec
or
sub
xlat
lods
xlat
movsb
mov
inc
les
sarl
cmp
xor
mov
push
les
pop
cmp
push
jne
mov
ret
je
inc
inc
xchg
pop
frstor
lock
mov
nop
pop
rcrl
adc
repz
dec
inc
push
mov
lea
and
mov
jns
out
test
aam
xchg
jg
jmp
addr16
xchg
sub
sub
sub
lret
ret
mov
js
into
out
push
sub
scas
in
roll
stos
lods
add
cmp
fdivl
fiaddl
cmp
in
shrb
cmp
inc
and
insb
jge
inc
dec
jle
add
mov
and
pop
sbb
adc
cltd
fisubs
cmpsl
inc
rol
or
jecxz
jmp
in
insb
dec
or
movsb
call
stos
add
mov
jne
push
xchg
jne
pop
pop
sbb
imul
xor
fstpt
in
lock
nop
int
flds
rolb
popa
push
jmp
test
out
push
mov
push
inc
jmp
lods
cmp
fidivrl
jl
pushf
mov
shr
sub
sbb
lds
incl
ja
adc
xchg
dec
dec
stc
mov
add
in
out
add
jae
xchg
std
push
sbb
gs
lds
aaa
pushf
mov
pusha
stos
into
add
cmp
stc
pop
dec
push
stos
das
dec
fisubrs
popl
mov
sarb
out
aas
jae
in
add
pop
cwtl
lea
push
int
and
insl
clc
xor
sti
push
hlt
test
pop
dec
mov
sub
sub
cmpb
roll
fcmovu
adc
test
stc
das
push
xchg
xor
and
jae
lahf
lods
push
jnp
xor
xor
push
mov
cli
inc
sbb
testl
jge
cmpsb
cmp
div
push
insb
cld
stos
subb
in
pop
aam
or
pop
aas
rcr
push
push
lea
scas
loope
adc
xlat
pop
lds
push
cli
mov
add
int
cmp
jns
mov
xor
mov
and
in
loopew
inc
inc
loopne
imul
aas
pop
and
fwait
popf
hlt
mov
stos
pushf
inc
add
movsb
pop
sbb
cmpsb
aam
cmp
fildll
or
fcmovne
dec
lods
sub
in
fdivl
sub
xchg
pop
push
stos
mov
push
mov
ret
mov
js
inc
adc
mov
jb
or
lea
repnz
mov
xor
add
iret
lahf
mov
mov
dec
pop
mov
imul
aad
push
mov
sbbb
add
lret
pop
or
adc
jne
mov
xchg
push
or
xchg
jg
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
push
add
movl
subl
movl
and
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
xor
xor
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
jmp
push
pop
rcll
fwait
pop
push
outsb
adc
fldl2t
jp
sbb
jp
mov
cmpl
pop
mov
dec
leave
adc
cmp
xchg
xchg
or
xchg
pop
ret
fwait
pop
dec
mov
in
push
cmpsb
pop
aad
fs
in
loope
test
push
fiadds
leave
mov
es
push
test
mov
add
inc
ljmp
je
xor
outsb
adc
icebp
aaa
jmp
xor
ficoms
sbb
hlt
cmp
add
cmp
gs
or
sbb
imul
rcr
sub
mov
cwtl
cmp
dec
xchg
push
out
imul
cmc
decl
mov
push
mov
lea
inc
xchg
pop
flds
jp
inc
aaa
mov
inc
or
push
int3
mov
into
or
sub
dec
push
mov
cmpsl
jmp
dec
mov
lahf
mov
jae
test
test
stos
push
clc
or
xor
les
mov
fs
in
and
jg
adc
push
adc
imul
je
adc
cmpb
and
pop
lds
jp
test
orl
adc
popa
ja
jge
adc
jmp
jne
mov
rorl
dec
scas
push
add
cltd
mov
push
cltd
mov
inc
aas
jnp,pt
gs
mov
ret
pop
insl
push
adc
push
or
fdivl
int3
shlb
jge
and
lret
mov
cwtl
fdivp
push
ljmp
pop
in
inc
ljmp
movsl
loopne
fisttpll
test
fisubl
sub
ljmp
les
pop
inc
adc
clc
jae
das
leave
loop
sub
pop
sahf
mov
dec
or
out
jb
xchg
bound
xor
jb
inc
mov
jp
nopl
xchg
xor
lahf
or
nop
xor
dec
dec
out
jl
rcrl
cmpsb
lahf
icebp
mov
mov
sub
sahf
mov
test
leave
roll
dec
pop
in
push
jne
sbb
scas
pusha
dec
cli
lock
movb
in
loop
mov
dec
mov
mov
mov
stos
addl
movsl
pop
outsb
test
or
test
mov
pushf
out
cmpb
lahf
sbb
rsm
push
aam
or
es
sub
pop
lock
jl
mov
or
and
clc
aaa
jb
xchg
mov
cs
jmp
sbb
sahf
je
mov
icebp
mov
cmp
sub
pop
push
shl
into
fmuls
mov
fnstsw
inc
jb
orb
int3
sbb
in
aas
pop
jg
pop
cmp
out
pop
sub
mov
popf
ja
lock
fimuls
mov
jg
mov
mov
or
iret
lea
clc
lret
push
mov
mov
and
fs
xor
jl
in
xchg
call
mov
and
pop
int3
test
es
inc
push
dec
xlat
mov
mov
sbb
and
daa
push
cwtl
mov
rorl
daa
mov
or
inc
dec
xchg
mov
enter
or
mov
jp
jecxz
shl
aam
dec
daa
aad
mov
bound
pop
aam
adc
jae
je
flds
popf
mov
mov
out
cmpsb
pop
inc
insl
stos
rcl
push
adc
adc
push
inc
sbb
loope
lret
inc
jecxz
jle
dec
pop
jecxz
and
loope
jecxz
mov
subb
decl
mov
adc
fwait
lea
push
and
leave
aas
mov
out
shll
cmpl
out
mov
fwait
sbb
xchg
bound
pop
icebp
xchg
xor
add
and
mov
fs
jb
mov
inc
test
mov
jb
push
aam
ljmp
inc
sub
aad
mov
lock
jle
adc
popf
and
xlat
jne
lock
les
dec
or
lods
ljmp
mov
adc
inc
xlat
icebp
andb
and
cmpsb
dec
cwtl
cwtl
clc
movsl
and
sahf
ret
mov
stos
andl
icebp
lret
orb
xchg
jnp
imul
hlt
aas
sub
sub
inc
jmp
xchg
into
xor
xchg
mov
cmp
adc
nop
pop
mov
adc
ret
jns
out
push
je
adc
or
jne
shlb
dec
push
xchg
shrb
call
mov
rorl
orb
call
xchg
inc
inc
xlat
gs
mov
popf
sub
fildll
pop
insb
sub
icebp
mov
out
ret
add
int3
or
xchg
out
jmp
adc
inc
out
popa
lock
ret
movsb
or
or
or
aas
xchg
mov
loop
mov
insl
rcr
dec
cltd
dec
into
outsl
cmp
or
cs
fidivl
mov
push
ror
push
xchg
mov
fs
pop
xchg
imul
sbb
sbb
inc
lret
mov
stc
mov
fldcw
outsb
cld
sub
jns
pop
stos
in
mov
mov
xchg
sbb
ljmp
mov
or
push
or
divl
push
and
test
mov
push
mov
jnp
push
mov
inc
and
dec
out
leave
ja
sub
xor
jg
mov
jno
xor
jl
jae
sub
in
pop
mov
sahf
aas
cmp
mov
nop
orb
in
push
ret
es
cmp
jno
lods
movsl
pop
jl
in
mov
push
push
notl
iret
inc
jnp
sub
insb
cmc
push
dec
cmp
lods
insb
dec
lea
aaa
push
nop
xor
jbe
sti
jbe
and
dec
adc
lods
cs
mov
xor
repnz
sbbl
cmp
loopne
jecxz
cmpsb
pop
pop
addb
sbb
pop
psllq
sub
and
mov
testb
sbb
into
in
lods
jno
add
mov
dec
lods
pushf
into
call
int
sub
cli
adc
push
test
mov
inc
test
and
adc
xor
mov
bound
cmpsl
std
loopne
dec
push
dec
mov
jno
or
insl
dec
mov
dec
fcmovb
mov
or
mov
inc
or
aam
mov
xor
fistpll
mov
fwait
pop
popf
mov
and
mov
es
pop
jmp
mov
cmpsl
cmp
test
scas
fldenv
or
dec
push
mov
xlat
jne
ljmp
out
jbe
mov
xor
out
sar
jl
mov
push
cmp
dec
add
jle
mov
fimuls
scas
jle
jb
pop
daa
cli
fwait
adc
xor
das
add
and
cmpsb
push
sbb
jbe
pop
aam
or
insl
sbb
mov
test
out
xor
call
push
push
lea
fs
clc
fdivs
jo
aas
sub
xchg
lret
loop
jmp
cs
fs
icebp
adcb
inc
out
fisttpl
or
mov
loop
mov
inc
aaa
mov
mov
xor
call
xlat
jmp
scas
adc
imul
not
out
int
loop
xor
outsb
std
sbb
jl
xor
shrl
test
loopne
jbe
sarb
mov
sti
and
mov
cmp
cli
xor
fwait
pop
cmp
push
iret
cmp
cmp
sbb
or
xor
std
lods
adc
push
fstl
cmc
lock
jmp
xor
mov
sbb
mov
mull
outsl
leave
imull
ds
lock
or
jne
out
enter
in
lods
mov
test
aam
dec
pop
bound
out
mov
adc
mov
adc
cs
lret
ffree
nop
mov
jg
dec
mov
call
push
adc
sbb
mov
pop
repnz
dec
jnp
or
jp
or
mov
movsl
pop
adc
scas
pop
mov
inc
fstl
rclb
in
xor
scas
mov
js
and
pop
mov
inc
and
cmp
pusha
xchg
cld
or
clc
pop
cmp
bound
es
adc
xchg
nop
ret
sbb
jle
in
lcall
adc
dec
incb
mov
rdpmc
mov
data16
stc
je
inc
dec
push
repz
inc
push
mov
adc
fldcw
push
jne
add
and
lds
jp
into
rcrb
dec
andl
sub
sub
adc
les
sbb
mov
jne
mov
push
pop
pop
pushf
in
dec
lahf
jo
das
aad
gs
scas
fmuls
mov
xchg
in
sub
mov
push
or
test
das
push
fadds
cmp
mov
cmp
movsl
pop
icebp
scas
addr16
inc
aad
imul
shl
mov
ret
mov
test
and
jae
lahf
aas
mov
inc
vphadddq
add
or
fstpl
jp
and
movsl
push
pop
and
inc
cs
sub
rcll
cmpsl
pop
sub
scas
xor
mov
jno
jno
pop
add
cltd
ret
fptan
or
cmp
adc
or
cld
sub
push
inc
outsb
mov
das
inc
add
xchg
imulb
fisubrs
rolb
popa
cmp
lahf
cwtl
popa
add
mov
pushf
xchg
arpl
xlat
xchg
in
aaa
adc
inc
push
mov
ret
rcll
adcb
sub
lods
int
pop
or
stc
pop
pusha
xor
adc
fmul
lret
mov
mov
or
sub
and
or
mov
sub
pop
lods
lock
and
leave
mov
mov
mov
pop
imul
pop
scas
pop
scas
dec
leave
xchg
enter
roll
or
aaa
repnz
cltd
or
decl
out
sub
xchg
daa
or
push
or
push
pop
pop
cwtl
pop
push
mov
xor
clc
adc
push
add
add
mov
std
daa
sahf
mov
lea
scas
ret
cmp
cmp
sbb
ret
cmpsl
xchg
cmpsl
xchg
push
jnp
jecxz
and
mov
push
stos
add
dec
jmp
dec
push
fxch
aam
repz
outsb
xchg
or
push
pop
imul
or
pusha
out
xchg
mov
lret
pusha
std
pop
jp
jnp
sbb
cmpsl
fnstsw
roll
bsr
mov
and
cs
and
adc
jne
inc
cmc
jnp
in
aad
fildl
mov
xchg
out
cld
es
ret
out
ficoml
adc
iret
arpl
inc
xor
addb
cld
cmpsb
mov
gs
jae
repnz
inc
xor
sub
imul
sbbl
xor
inc
mov
jle
lods
stos
outsl
out
aam
jle
out
mov
int
ljmp
lret
jnp
psrld
mov
in
pop
cmp
mov
sub
mov
or
insb
or
xor
jbe
hlt
add
loopne
test
or
add
xchg
mov
sarb
or
lret
xor
mov
aam
xchg
add
or
mov
pusha
add
ret
hlt
data16
in
mov
ds
push
mov
shlb
jb
pushl
loope
add
inc
test
fistl
fmull
in
bound
pop
pop
sbb
jle
mov
dec
mov
sarl
popa
pop
addr16
pop
mov
aad
push
sahf
or
shll
insb
xor
and
out
pop
xchg
push
push
aas
and
pusha
jge
xor
xor
pop
jl
adc
push
ds
daa
icebp
cmc
outsb
out
cltd
xchg
xlat
mov
pop
and
mov
xor
in
enter
fstp
push
or
icebp
push
mov
in
add
pusha
cmc
cmpsl
loop
xchg
cmp
cmp
sub
popf
popa
lds
data16
fidivs
sub
sbb
cld
cmp
in
or
push
rolb
cmc
ret
jle
loope
jmp
xor
insb
test
pop
test
mov
scas
mov
add
jae
ret
cmp
out
mov
or
imul
xor
cmc
mov
lret
lcall
sahf
xchg
mov
xchg
xchg
adc
fs
xchg
push
mov
or
testb
insl
ret
pop
int
mov
jle
xchg
es
cmp
addb
xchg
mov
mov
dec
ror
cld
jno
jne
mov
ds
nop
pushf
out
mov
mov
out
bound
push
mov
cld
loopne
dec
sub
and
jmp
or
adc
or
pop
stos
out
push
add
ret
mov
scas
mov
xchg
dec
lahf
rorb
idiv
xchg
mov
jb
je
mov
xchg
adc
push
fstpt
mov
jne
cmp
push
or
cltd
hlt
cmpsb
sub
or
imul
call
jp
sbb
pushf
ficomps
ret
xorl
notb
pop
mov
push
inc
xlat
adc
scas
pop
rcl
pop
mov
jnp
aam
fldt
jno
fiaddl
lret
xor
xorb
xchg
fs
xchg
sbb
sbb
sub
movsl
pop
sub
jbe
pusha
inc
jno
push
sbb
xor
pop
std
or
sbb
aaa
pop
dec
cmp
js
sbb
fistpl
in
jb
outsb
sub
xchg
push
dec
lret
divl
adc
dec
mov
push
sub
mov
add
arpl
sarb
adcb
jb
scas
in
sub
sahf
dec
fnsave
aad
push
fwait
mov
inc
shrl
pop
xchg
xchg
dec
jmp
push
xchg
inc
xchg
cmp
repz
fsubrs
addr16
mov
cld
dec
aam
shr
xchg
enter
adc
push
mov
add
adc
push
das
dec
inc
cltd
mov
add
sub
sub
scas
inc
cmp
inc
subl
add
sbb
mulb
cmp
js
andl
movsb
arpl
fwait
lcall
out
dec
fidivs
call
push
movsl
sub
out
inc
cltd
in
pop
and
addr16
stc
fnsave
jge
sub
jae
sti
push
mov
xchg
pop
loop
incl
cltd
ss
test
sub
inc
pop
dec
pushf
jnp
shlb
rcll
pop
shrl
mov
cmp
ss
dec
mov
adc
int3
and
sub
push
jmp
jae
sahf
lahf
test
jmp
into
aaa
mov
mov
ror
push
repz
cs
je
sbb
mov
cmp
mov
insl
in
push
clc
jnp
push
call
add
dec
push
push
jle
mov
mov
push
fisttpll
lret
out
sarl
jo
inc
jg
push
xchg
and
aas
push
loop
sub
mov
mov
cli
icebp
pop
mov
push
imull
jecxz
not
xor
sbbb
rorl
test
cwtl
cwtl
pop
push
mov
rcrb
xor
repnz
push
and
adc
adc
jge
mov
shrl
pop
and
xchg
rorl
sub
in
ja
push
push
cmp
adc
lods
push
inc
imul
pushf
lahf
cli
mov
lods
ja
xchg
inc
cmp
add
test
xchg
mov
loopne
push
lock
mov
xchg
mov
rcrb
jg
xchg
mov
mov
mov
add
lret
fdivs
test
and
or
jae
add
xchg
and
inc
je
cmp
loopne
sub
mov
pop
dec
nop
jmp
jg
mov
or
and
enter
mov
into
aas
xor
cmp
cmp
stos
ret
or
movzbl
mov
rorl
frstor
sbb
jl
or
imul
xchg
push
popa
imul
mov
sub
negl
push
fs
pusha
xchg
and
test
mov
dec
pushf
sub
lret
pop
jnp
sub
add
sub
jno
rcl
loope
insb
adc
xor
repz
push
sti
clc
test
fstl
lcall
stc
stc
cwtl
cwtl
clc
aas
in
imul
push
mov
nop
dec
jecxz
add
dec
sub
jp
mov
push
into
das
jb
xor
mov
rcrb
mov
fildl
and
and
jb
ucomiss
in
js
jge
iret
jnp
jae
adc
cmovns
lods
pop
nop
cmp
xchg
outsl
jge
in
mov
mov
rol
sub
sbb
movsb
int3
aaa
xchg
pop
mov
lods
pop
aam
lcall
mov
and
jl
ret
arpl
mov
in
push
movsb
sbb
sbb
inc
sbb
and
sbb
mov
mov
mov
js
sti
mov
and
push
adc
je
iret
adc
cmp
fdiv
inc
mov
push
cmpl
pop
in
movsl
out
pop
addr16
sbb
fstpl
mov
lock
aas
xchg
test
push
popl
ds
addr16
lret
mov
in
xchg
pop
dec
out
std
std
mov
inc
jecxz
jp
xchg
pop
dec
in
pushf
aas
xor
mov
stos
test
xchg
adc
and
jo
adc
inc
adc
rorl
and
add
sahf
shll
and
xchg
cli
daa
mov
stos
xchg
dec
cmp
inc
sbb
das
xchg
bound
rol
lret
js
sbb
inc
jle
add
adc
push
adc
xchg
inc
cmc
popa
dec
push
cmp
dec
or
mov
lock
add
insl
imul
roll
pop
call
fstl
pop
out
xor
mov
inc
lock
inc
outsb
stos
xor
xchg
lock
push
cli
sbb
or
rcrl
std
addl
mov
aad
pop
icebp
aam
cmpsb
rorb
outsl
pop
cld
test
addr16
popf
mov
push
adcl
jbe
aaa
cmpsb
xlat
flds
jb
int
xor
mov
movsl
inc
push
and
pop
test
test
lcall
call
data16
inc
cwtl
dec
mov
sub
pop
adc
inc
fsubl
icebp
jle
insl
xchg
mov
fiadds
push
rclb
stos
jmp
cwtl
fidivrl
rorb
jb
imul
fstpl
push
sub
ljmp
pop
gs
dec
cmp
xor
popf
pop
ds
insl
or
mov
popf
mov
push
mull
aam
mov
cmp
je
clc
ss
sbb
testl
jl
xor
push
xchg
jge
shll
ds
aas
fistpll
lock
sti
xchg
and
test
shrb
stos
outsb
idivl
sub
dec
add
sbb
cli
loope
in
inc
jmp
inc
les
aad
pop
jge
lock
leave
pusha
test
sub
push
dec
loop
pop
cli
push
js
sub
pop
cmp
xor
pop
sub
mov
daa
jmp
add
test
adcl
mov
mov
or
repz
cmpsl
or
mov
xor
inc
jmp
jbe
jge
call
ret
pop
addr16
dec
daa
inc
imul
sbb
rol
jb
pop
and
jb
das
xchg
xor
dec
cmpsl
mov
xchg
je
mov
negl
push
lret
jl
arpl
popa
stos
lods
adc
xchg
inc
cmp
insl
mov
in
lods
dec
xor
jge
insb
dec
push
xchg
mov
das
and
es
ret
push
dec
gs
pop
lods
mov
mov
decl
enter
mov
in
push
jge
pop
xorl
cli
ror
lea
jg
movsl
dec
dec
xor
cmp
xchg
int
sbb
bnd
jno
ja
ficoml
mov
pop
cmp
and
lcall
aaa
jns
loope
leave
into
pop
aas
xchg
nop
lret
push
sbb
into
pop
mov
xchg
and
neg
dec
movsb
in
insb
popa
xchg
aad
ss
rclb
ljmp
and
cli
fsubl
cld
lahf
dec
cmp
loop
or
pop
inc
jns
cli
inc
fsubrl
jmp
xor
inc
add
mov
sarb
xchg
cmpsl
mov
xchg
call
bound
mov
xchg
in
mov
dec
mov
shl
cmp
int
inc
outsl
icebp
cmp
popf
xor
test
mov
ja
cmp
and
lods
gs
add
cmp
dec
pushf
dec
pop
ds
ret
fs
je
out
add
mov
inc
movsl
inc
cmp
hlt
pusha
pop
mov
sarl
cmp
repnz
or
test
or
xor
mov
aaa
sub
push
jno
cmp
sbb
jg
sbb
mov
jnp
daa
adc
lret
popa
add
imul
repz
jbe
xchg
loope
in
xor
fsubrp
and
fcmovb
iret
mov
bound
insl
sub
movsl
xor
shlb
push
fiadds
jge
scas
lret
shlb
das
cmp
mov
ret
push
inc
mov
xor
jl
mov
sub
into
sarb
jg
rorl
pop
addb
push
subb
int
jl
ret
jg
xchg
sub
inc
push
loopw
pop
pop
test
mov
mov
dec
push
adc
mov
roll
aad
sub
clc
jle
out
rclb
scas
inc
dec
nop
lcall
add
test
sti
dec
jmp
mov
dec
sarl
push
and
pusha
sub
in
addb
jo
mov
sub
das
jmp
add
sbb
jns
cwtl
xchg
xchg
ja
mov
adc
pop
aaa
dec
arpl
dec
outsb
dec
cltd
adc
push
arpl
test
pop
push
adc
les
jg
int
or
sti
fldcw
lds
cmpsl
iret
leave
sub
mov
jbe
pop
mov
or
fstl
jae
js
pop
in
jmp
out
inc
mov
xchg
addr16
loop
or
insb
fildll
sub
loop
sub
shll
pushf
jae
add
xor
test
roll
bound
add
lcall
mov
push
add
mov
cmp
stos
sub
out
and
imull
jmp
mov
add
packssdw
jnp
xlat
mov
jo
xor
push
or
cmp
mov
mov
loope
bound
sub
test
xor
and
jmp
sbb
mov
test
ficomps
lcall
pusha
arpl
add
negb
or
inc
popf
cs
mov
xor
cmp
jae
inc
sti
jp
aam
mov
add
popf
or
inc
gs
pop
push
jo
das
mov
jge
mov
test
fsubp
insl
outsb
mov
cmp
cmpb
pop
cmpsb
adc
xchg
mov
test
xlat
sti
out
xchg
pop
push
shll
mov
pop
cmp
nop
inc
adc
stos
xchg
sbb
stc
jo
push
decl
mull
jecxz
and
pop
out
mov
fadd
jecxz
daa
pusha
jp
jns
mov
cs
xorl
fcoml
jmp
lods
sbb
aad
cltd
mov
sub
jmp
fwait
mov
stc
xlat
fistpll
push
sbb
enter
and
xchg
pop
cld
test
or
std
ljmp
pop
dec
push
fmul
inc
mov
and
bound
pop
push
dec
fsubrp
xchg
cmp
outsl
bound
inc
fsubs
test
xorb
inc
sbb
bound
add
dec
mov
loope
dec
and
mov
ds
jnp
std
sub
add
test
push
push
pop
jno
fistpl
lahf
fwait
adcl
xor
push
inc
or
mov
es
hlt
lea
scas
les
sub
leave
push
jne
cmp
dec
dec
scas
adc
push
inc
pop
sahf
mov
sub
sbb
xchg
add
ja
ss
and
mov
xor
push
test
enterw
dec
sbb
insl
jmp
push
jbe
sti
xchg
sbb
fimull
jl
xchg
dec
push
adc
pop
sub
xchg
icebp
jmp
clc
dec
push
sbb
dec
xor
push
es
repz
movsl
push
adc
loope
and
dec
inc
insl
inc
adc
pop
xchg
cmp
popf
mov
add
sahf
nop
lods
sahf
add
pop
cmp
int3
popf
or
pop
inc
sbb
cmp
xor
shll
sub
dec
sbb
popf
add
inc
in
lea
ja
scas
cli
lock
cmp
imul
popl
in
push
xor
mov
adc
scas
cmpsl
aad
das
push
test
mov
mov
adc
push
fxch
pushf
sahf
lret
cltd
cltd
cmpsl
dec
imul
sub
add
mov
and
push
xchg
push
cmp
lahf
decl
ljmp
jae
repnz
loope
mov
mov
xchg
nop
in
jns
push
icebp
or
push
xor
dec
mov
pop
outsl
jle
sbb
cmc
jle
add
or
lds
popf
dec
xor
outsb
test
lahf
cli
cmp
xor
pop
aam
in
mov
sub
xchg
fcoml
jp
movsl
int3
lea
pop
cmpsb
and
ret
sbb
lret
pop
inc
fwait
pop
fs
adc
lahf
out
popl
sti
dec
push
cmpsb
xchg
cmc
pop
and
addr16
jl
ret
adc
inc
gs
bound
or
popf
jne
and
fidivrs
mov
adc
adc
pop
out
ss
dec
loope
and
xor
xor
pop
pop
hlt
test
cmpb
out
popa
mov
add
push
add
mov
out
or
dec
mov
mov
cmp
cmp
xor
sbb
pop
xchg
inc
mov
cli
pop
jl
fistps
aas
pop
cld
data16
mov
fcoms
sub
sub
sbb
loopne
stc
push
sbb
icebp
cmc
xor
into
ljmp
add
movsb
mov
lcall
pop
mov
mov
xor
sub
std
add
cmc
pop
imul
mov
jg
clc
ret
add
jg
or
mov
std
and
lret
or
ror
or
sti
mov
test
mov
mov
xchg
push
pop
inc
pop
sbbl
sub
jle
aad
je
out
push
popa
pop
jp
mov
ret
scas
movl
add
into
xor
scas
dec
stc
out
pop
mov
adc
popf
mov
andb
sarb
xchg
cmp
pop
daa
jbe
mov
inc
cmp
lods
in
inc
xor
imul
fsubrs
sbb
sub
roll
xor
dec
pop
jno
inc
out
or
cmc
jg
mov
push
push
lods
hlt
out
dec
xor
sub
jp
add
pop
sbb
je
xchg
imul
dec
add
inc
and
js
mov
mov
addr16
jg
ret
in
ret
add
sub
ffreep
xchg
mov
fwait
rol
xlat
add
dec
xchg
loope
sbb
xor
shrb
ret
add
jno
jp
mov
std
lret
ds
dec
jg
lods
jmp
dec
faddl
movsb
movsb
cs
sub
sbb
into
cmpsl
sbb
sub
cmp
xchg
mov
mov
incl
icebp
fstl
leave
nop
fists
sbb
jnp
jmp
jp
aad
iret
mov
add
in
mov
pop
and
stc
int
pop
movsb
loopne
mov
inc
aad
fs
stos
xchg
push
leave
lcall
cli
cli
test
push
adc
xor
dec
jl
mov
jge
xor
ja
push
lret
sub
xlat
shrb
pushl
stc
or
or
loop
js
out
imul
or
stc
xchg
mov
popa
test
or
aas
xor
jmp
xor
repnz
fsubl
push
mov
adc
cmp
pop
xchg
sub
insb
xlat
cmp
jp
inc
jae
testl
gs
roll
outsl
test
jg
mov
jp
sbb
mull
push
lods
or
addr16
or
push
jb
xchg
pop
add
mov
scas
fisubrl
xor
push
sbb
scas
pop
mov
mov
sub
or
adc
inc
mov
stc
inc
inc
jb
xchg
lock
xchg
mov
cmp
mov
inc
pop
ja
mov
mov
bound
rorb
sbb
in
or
or
sbb
or
mov
xchg
lea
in
sbb
mov
in
cwtl
add
or
ds
xor
out
loopne
pop
push
data16
pop
test
lea
orl
sahf
sub
mov
les
mov
pop
or
popa
mov
pop
lea
cmovl
xor
or
push
xor
sub
jb,pn
in
pop
aaa
cmpb
add
jl
repz
pop
movsl
in
dec
push
add
jmp
jecxz
push
adc
sti
push
or
enter
dec
push
pop
loop
adc
imul
push
fwait
cltd
js
ja
adc
jo
adcl
stos
cli
pop
hlt
xor
inc
or
mov
movsl
cmp
stos
lds
out
in
movsl
dec
mov
cmp
mov
pop
inc
and
push
sub
jp
sbb
imul
fwait
lret
lcall
js
icebp
or
push
popa
push
sub
daa
mov
mov
sbb
adc
jg
test
popa
lods
xchg
ss
xchg
add
arpl
inc
mov
roll
in
cmpsb
cmp
pop
adc
leave
iret
xchg
test
js
cwtl
pop
push
movswl
and
movsl
or
addr16
aaa
aam
push
mov
xchg
dec
jecxz
dec
mov
mov
cmp
test
popa
push
jns
ss
push
xchg
fidivs
and
pop
cmp
mov
addr16
scas
jg
mov
cmp
mov
ljmp
in
adc
mov
or
test
loop
std
inc
int
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
or
movl
adcl
mov
mov
mov
add
mov
negl
xor
add
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
or
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
adc
mov
adc
mov
adcl
xor
mov
and
mov
decl
add
movzwl
add
mov
movb
mov
mov
adc
lea
subl
mov
mov
inc
mov
xor
adcl
sub
adcl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
mov
dec
mov
jmp
sbbl
movl
push
movl
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
andl
xor
or
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
xor
mov
or
mov
sbb
xor
or
mov
push
add
jmp
movl
mov
mov
movl
inc
cmp
jb
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
not
mov
subl
xor
adcl
add
movl
jmp
decl
mov
adc
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adcl
mov
subl
add
movzwl
negl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
or
mov
movzwl
movl
xor
add
movl
mov
movl
mov
mov
inc
mov
movl
cmp
jne
mov
mov
adcl
xor
movl
add
subl
mov
add
mov
addl
xor
add
movl
mov
mov
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
jmp
sbbl
mov
and
mov
xorl
xor
xor
sub
sub
sub
xor
mov
mov
mov
subl
lea
movzwl
adc
mov
sbbl
mov
dec
mov
lea
mov
sbbl
mov
add
mov
lea
mov
incl
mov
sbb
mov
andl
lea
dec
mov
movzwl
adc
mov
mov
addl
lea
mov
xorl
mov
andl
mov
orl
lea
addl
mov
or
mov
xor
add
movl
jne
jmp
negl
mov
mov
subl
xor
xor
sbbl
sub
orl
sub
xor
movl
mov
movl
mov
movl
mov
jmp
mov
mov
xor
adc
xor
xorl
sub
sub
or
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
jmp
fstps
sti
sarl
jnp
inc
xchg
or
movsb
movsb
mov
sti
pop
jp
dec
jp
xor
mov
pop
mov
popa
aas
inc
out
fisttpll
fistl
les
mov
xorl
add
or
data16
scas
rcrb
push
jno
mov
in
xchg
or
inc
sub
popa
sti
add
pop
mov
adc
mov
mov
test
loope
lock
xor
mov
outsl
fiadds
jbe
fists
out
xor
mov
or
shll
sbb
outsb
and
mov
jnp
out
pop
rorb
and
cli
pop
enter
push
dec
out
jp
cltd
push
mov
clc
outsb
add
mov
mov
or
adc
or
push
inc
shlb
scas
std
movb
mov
sbb
mov
inc
pop
in
rolb
lret
add
mov
dec
jbe
xchg
push
cs
dec
rolb
mov
or
adcl
mov
sbb
push
addr16
push
mov
insb
dec
jbe
adc
jo
push
or
enter
inc
int3
jecxz
push
xchg
pop
sahf
pop
jo
stos
pusha
divb
push
xchg
test
in
mov
cmp
leave
ret
int
loop
inc
xor
push
ds
test
mov
addr16
and
xor
xchg
ret
sbb
scas
mov
pop
sti
mov
je
out
dec
pop
aad
loop
push
popa
pop
daa
lods
cmp
jmp
push
cld
sbb
pop
imul
push
add
inc
pop
push
jge
dec
dec
fnstenv
jge
xor
adc
das
ret
push
insl
loopne
xor
sbb
out
iret
push
push
sbb
dec
mov
jge
inc
pusha
les
icebp
xchg
mov
mov
cmpsb
mov
xor
xchg
xor
jne
test
hlt
push
pop
addr16
sub
and
int3
mov
adc
cmpl
sub
or
xchg
lea
test
sub
popf
mov
pop
leave
cmp
fwait
std
or
addr16
lods
dec
push
rol
push
mov
movsb
and
lcall
movswl
imul
ret
fidivrs
pop
push
aad
jg
jb
mov
jp
xor
sub
imul
pusha
xchg
and
ficompl
sbb
sti
sbb
loop
mov
sarb
xor
stos
dec
mov
sub
mov
loope
and
jb
sub
mov
sbb
popa
ss
mov
mov
aam
jns
xor
push
insl
cmpsl
or
pop
dec
ret
fbld
dec
cmp
mov
sub
aad
js
pop
popf
jle
mov
ljmp
adc
adcl
cld
mov
test
push
push
inc
pusha
mov
ss
shl
cmc
call
aad
sub
xchg
or
jne
adc
dec
fistl
decb
int3
cmp
pusha
or
cmc
cli
xor
das
pop
pop
mov
outsb
lods
es
xlat
and
pop
and
ds
mov
xchg
insb
aam
mov
ret
inc
pusha
mov
mov
sbb
aad
icebp
push
inc
mov
cmp
mov
or
dec
adc
cmpsl
jo
inc
filds
out
xchg
or
pop
in
andb
mov
std
mov
outsl
scas
stos
mov
or
push
pop
pop
clc
outsl
test
rclb
data16
sarl
mov
fisttps
xchg
mov
and
pop
imul
sbb
cmp
mov
cld
stos
ds
rcrb
inc
movsb
xchg
out
jno
xchg
out
leave
out
vmovmskpd
sub
sub
movsb
aad
cmp
pop
cmp
mov
pop
das
inc
mov
gs
mov
add
stc
pop
pop
sbb
or
leave
and
gs
das
lret
cltd
or
jb
shrl
adc
dec
sti
mov
cmp
jns
push
jmp
out
inc
cmpsb
push
and
jmp
cltd
pop
mov
mov
sub
mov
aaa
push
adc
push
mov
mov
pop
fisttpll
movsl
ljmp
mov
loop
mov
push
mov
dec
lods
mov
mov
xchg
cmp
mov
rcll
adc
scas
loope
add
adc
fs
adc
mov
cmpsl
push
xchg
xchg
notb
popf
je
xor
scas
mov
frstor
sub
into
and
sbb
scas
lret
out
jl
mulb
pop
adcb
xor
cwtl
jmp
sub
cmp
aas
enter
andl
mov
aad
or
jbe
cs
xchg
jae
in
xchg
inc
lods
mov
mov
std
nop
outsb
inc
mov
push
adc
pop
lcall
mov
repnz
roll
arpl
imul
out
jmp
jmp
dec
mov
and
mov
rcr
inc
test
sbb
lahf
jno
or
leave
and
or
insl
and
je
and
lds
test
shlb
push
push
and
or
inc
daa
and
pop
sub
jge
mov
inc
leave
lret
fcmovb
sarb
insl
mov
loope
int3
pop
ror
repz
sbb
aas
pushf
xlat
sbb
lock
inc
data16
inc
movsb
orb
rcr
sti
jp
out
cmp
nop
sbb
sar
gs
dec
andl
sbb
push
fildll
fadds
imul
cmp
sti
dec
sti
insb
mov
pop
cli
add
push
adc
aaa
mov
adc
cmp
aad
shll
or
jo
jl
or
fisubs
cmp
shlb
mov
mov
adc
dec
push
fstpt
dec
cmp
adc
push
jb
fcoms
dec
cmp
iret
or
insl
fsubs
gs
and
cmp
pop
std
stc
sub
repz
clc
jg
sti
inc
or
mov
inc
push
jne
loope
sbb
leave
insb
bound
xchg
lods
mov
and
fisttpl
outsb
cld
and
test
jl
mov
rcrl
addb
dec
mov
nop
cmp
add
cmp
adc
dec
sahf
lcall
push
test
jle
test
ret
or
jp
xorb
add
xchg
push
lea
cmc
movsb
add
jo
cmp
aam
mov
lcall
icebp
out
into
mov
lods
lods
sti
push
adc
subb
mov
xor
sub
mov
add
das
inc
jecxz
mov
pop
cmpsl
and
cmp
vaddps
push
fidivrl
inc
mov
add
cmp
lcall
and
cmp
adc
sub
jp
pop
inc
std
stos
push
mov
arpl
cmp
shll
cli
aaa
add
shl
pop
or
popf
lods
mov
aaa
dec
iret
out
gs
test
in
out
mov
jne
jmp
cmp
inc
jge
orl
mov
daa
cltd
push
jle
inc
add
jge
cmp
cmpsb
insl
scas
mov
dec
inc
pop
mov
ret
cmp
pop
inc
pop
mov
lock
sub
pop
pop
mov
clc
mov
popf
adc
fadds
mov
sub
je
jg
popf
dec
add
fs
push
inc
jg
sbb
jo
cwtl
mov
push
sub
je
popf
shlb
cmpsb
rcr
ret
call
fdivl
xchg
push
cmp
rclb
mov
push
sbb
jecxz
and
jecxz
ds
pop
in
nop
dec
jle
jg
inc
xor
dec
sub
mov
ss
lret
arpl
vpsubq
sub
cmp
shl
out
mov
pop
shrb
or
dec
mov
mov
jbe
mul
ret
and
and
fisttpll
mov
sub
dec
xchg
fiaddl
movsl
insl
lods
dec
cwtl
clc
arpl
mov
fucom
push
lock
cmpsb
add
inc
pusha
loope
mov
mov
fnstcw
pop
mov
jge
xchg
mov
adc
lods
mov
les
mov
loop
pop
sub
jmp
push
xor
lcall
out
icebp
add
sub
loop
and
gs
xchg
or
mov
jno
add
mov
dec
cmp
mov
fmulp
cwtl
nop
test
out
rol
mov
pop
shrl
pop
or
sahf
scas
andb
mov
inc
lds
js
sub
ret
push
cld
inc
loop
cmp
adcb
add
ljmp
aad
lods
push
fdivs
mov
or
pop
mov
adc
mov
out
data16
jno
ss
out
lahf
roll
mov
dec
pop
inc
pusha
xor
pushf
mov
lock
lcall
cmp
pop
mov
jb
es
sub
popf
popa
lcall
sbb
fwait
sbbl
mov
sbb
cmp
xchg
mov
pop
arpl
adc
pop
pop
or
push
sub
sbb
pusha
sbb
in
sahf
push
hlt
test
cmp
call
test
or
addl
rclb
or
push
cltd
jbe
ret
dec
lcall
ds
mov
mov
dec
lock
jbe
mov
sahf
pop
jecxz
fwait
js
mov
fnstcw
add
sbb
test
jl
pop
in
ljmp
fldenv
pushf
idivb
and
lcall
cltd
jecxz
sub
lock
sub
fstpl
loopne
stc
push
jmp
xor
jmp
lock
daa
push
movsl
jmp
mov
mov
mov
inc
mov
mov
xchg
and
iret
lods
das
mov
in
insb
jge
mull
fwait
jne
std
lret
adc
data16
xchg
xlat
arpl
jmp
xchg
out
push
enter
mov
mov
or
shll
dec
and
add
sarl
movsl
xchg
sub
mov
inc
es
addr16
mov
into
xor
in
testb
loopne
mov
stos
mov
pop
imul
jp
in
scas
and
jae
cmp
push
int3
jo
jl
sbb
inc
cmp
imul
cs
fists
lock
fstpt
insl
or
cmpsb
cmp
arpl
mov
xchg
cmpsl
or
loope
fsubrl
xchg
adc
aaa
inc
cld
ffreep
adc
int3
inc
xor
out
and
leave
jmp
mov
sbb
inc
sbb
imul
lods
aas
push
data16
outsl
aas
mov
dec
imul
rcl
outsl
in
shrl
sbb
cli
sbb
adc
adc
add
dec
add
jnp
adc
movsl
cmp
mov
sub
fisubs
rolb
test
dec
and
lds
ss
std
int
fistl
cmpsb
jns
push
push
shrb
push
or
dec
or
fisubrs
and
lcall
mov
add
lock
lods
push
test
dec
sub
push
inc
enter
cmp
push
xor
mov
jnp
mov
mov
inc
xchg
int3
movsb
les
dec
xchg
fistpl
sbb
sti
mov
aaa
add
imul
bound
xchg
add
lds
pushf
daa
imul
jbe
out
mov
add
dec
push
mov
andl
add
stc
mov
jmp
call
jae
pop
mov
sarb
ret
mov
jl
int3
adc
mov
add
subb
adc
lea
pop
and
dec
pop
sub
in
cmp
lcall
loope
mov
jo
sbb
andl
pop
and
xor
cmc
xor
insl
je
outsb
mov
cwtl
pop
loopne
sahf
pop
out
push
popl
jno
test
lea
dec
mov
aaa
fstpl
sbb
in
adc
push
in
arpl
adc
add
enter
hlt
push
out
lret
lods
cmpsb
gs
cwtl
pop
fdivl
mov
mov
jnp
push
addb
popf
jbe
mov
test
cwtl
jb
inc
hlt
aad
stos
out
mov
sbb
sbb
aad
movb
scas
in
fimull
push
vrcpss
ret
xchg
scas
aaa
shrl
inc
mov
popa
inc
mov
fidivrs
fsubrs
outsb
push
test
sbb
xchg
cmp
fnstenv
lret
outsl
int
xor
cmc
push
outsb
inc
outsl
cld
sub
flds
sub
cmp
test
cmp
xchg
ja
mov
imul
inc
scas
mov
or
or
jbe
loopne
push
mov
mov
sbb
push
imul
jo
push
dec
psubusw
inc
xor
xchg
dec
jb
mov
pop
add
pop
inc
adc
mov
and
sbb
and
insb
jle
aas
sbb
test
shll
xchg
call
out
cmpl
inc
xchg
pop
mov
das
call
stc
pusha
pop
fdivrl
pop
and
inc
xor
mov
sub
shlb
push
cmpsl
pop
xor
out
arpl
jp
xor
fimull
notb
xchg
mov
mov
adc
push
xchg
enter
jno
jbe
and
jge
int3
push
sub
push
mov
jns
inc
popa
ljmp
push
outsl
movsl
test
lret
jmp
push
fdivrl
pop
out
aam
or
jg
mov
mov
cmp
hlt
xor
jmp
pop
mov
jle
sahf
pop
lret
std
jbe
xchg
sarl
imul
sub
pop
sbb
bound
idivl
fsubr
mov
push
imulb
and
repnz
cld
aaa
sarl
push
jp
pop
fwait
repnz
inc
sbbl
xchg
fnstcw
push
jno
mov
out
aas
subl
and
push
outsl
adc
pop
cmc
ret
sbb
ror
cmc
jle
ljmp
dec
jmp
nop
push
mov
fdivs
outsl
xchg
fsubrs
mov
mov
xchg
pop
cmpsl
dec
mov
sub
pop
roll
pop
sub
inc
push
lods
jne
push
test
fs
mov
add
jecxz
cmpsb
jg
bound
shll
xorb
cltd
ss
sbbb
ret
aad
lods
or
inc
xchg
ja,pt
jne
imul
jae
sbb
data16
push
sti
mov
mov
or
cmc
out
adc
out
cmp
stos
fnstenv
insl
adc
je
cltd
mov
ret
shlb
push
test
pop
fstpt
cmp
and
pushf
jbe
adc
mov
mov
fmull
xchg
add
cmpsb
sub
arpl
xchg
xchg
or
sahf
sub
xchg
lahf
xor
add
inc
lods
push
int3
repnz
pop
mov
in
mov
aas
dec
jge
adc
dec
shlb
in
pop
adc
and
cmp
cmc
mov
out
insb
push
insb
add
inc
data16
xor
push
std
test
lret
sarb
gs
roll
jge
test
insb
in
int
aas
loope
arpl
enter
mov
js
pusha
pop
xor
neg
call
repz
jecxz
mov
ljmp
fistps
shr
cs
leave
inc
and
dec
fdiv
outsl
sub
stc
mov
mov
repnz
pop
push
sti
cmpb
jnp
mov
mov
sub
enter
out
cltd
push
push
mov
fdivr
addl
mov
mov
in
add
mov
sub
mov
jnp
pusha
or
fisubl
pop
inc
js
in
scas
mov
and
dec
test
sbb
insl
push
add
jae
ret
rclb
mov
sub
sub
imul
push
push
cltd
popf
inc
js
es
xchg
idivb
pop
xor
aaa
or
movsb
jg
lock
push
dec
cmpsb
pop
xor
pushf
les
cs
dec
out
adc
popf
sbb
mov
and
dec
gs
mov
xchg
xor
fwait
mov
test
add
mov
mov
fstps
call
out
in
mov
les
arpl
aam
pusha
push
push
xor
mov
add
xchg
jno
add
lahf
lea
cmp
and
insb
dec
setne
inc
sbb
dec
cs
fstpt
into
cwtl
scas
jge
xchg
mov
jns
cld
cli
sub
or
sub
mov
jle
mov
hlt
or
test
stos
in
push
das
out
lcall
out
mov
int3
cmpsb
clc
in
lock
push
mov
inc
inc
pop
cmp
xor
call
push
mov
sbb
push
movsb
dec
les
aas
sub
jnp
fistpll
adc
mov
push
or
clc
mov
data16
dec
add
movsb
xchg
jmp
jl
imul
adc
daa
xor
repnz
mov
rorb
jne
enter
inc
insb
aaa
sbb
mov
shll
stc
inc
mov
sub
inc
popa
lock
adc
ret
push
mov
jo
and
mov
sbb
push
sbb
xchg
enter
cltd
inc
push
add
out
pop
in
mov
sub
shlb
or
stos
inc
pop
gs
sti
cmpsb
fwait
xchg
arpl
lods
pop
sbb
mov
inc
add
mov
pop
mov
cmpsl
lret
xchg
add
pop
mov
pusha
rcrb
pop
sub
xchg
jbe
adc
es
mov
lret
call
lahf
add
mov
es
add
cmpsb
out
insb
ja
push
mov
sahf
jnp
aas
mov
int
cltd
mov
out
sub
sbb
mov
sahf
sbb
out
out
mov
adc
je
and
subb
jnp
ficoml
cli
adc
xor
hlt
pop
dec
push
adc
and
les
or
push
adc
movsb
sub
xchg
pop
mov
inc
fiaddl
mov
mov
imul
mov
mov
mov
sbb
cmp
fbstp
xchg
lcall
adc
ds
mov
cmpb
inc
out
cmpsl
xor
jge
jno
push
and
cmp
push
ret
rcrl
fbld
pop
push
loope
stos
lret
ss
test
pop
test
jecxz
es
pop
dec
mov
cmp
aas
das
mov
jo
mov
sbbl
or
adc
lock
mov
lods
fdivl
inc
jb
subl
es
mov
adc
mov
imul
fnstsw
jae
inc
sub
mov
int
cli
outsb
icebp
mov
movsb
cwtl
mov
ss
test
mov
int3
cmp
ret
mov
jne
mov
insl
rcrb
nop
or
mov
dec
push
pusha
inc
pop
cwtl
xchg
adc
push
sbb
pushf
in
jmp
mov
jp
inc
add
outsl
inc
test
mov
or
or
xchg
loopne
popf
adcl
enter
cwtl
sbb
mov
push
xchg
test
mov
and
sti
push
xchg
js
js
addr16
ss
pop
sbb
cltd
arpl
mov
mov
fdivrs
xchg
xor
pop
dec
push
imul
addps
sbb
jge
pop
jno
shll
repnz
loopne
loope
cmp
test
lret
xor
jns
cmp
arpl
insb
pop
std
enter
repz
cli
cmp
pushf
popf
cmpsb
popl
outsl
aaa
mov
mov
out
pop
aas
add
sbb
push
les
or
dec
popa
jl
adc
fists
popa
in
mov
notl
imul
pop
or
adcl
and
and
ljmp
pop
fldenv
ret
adc
test
add
push
cmp
test
pop
adc
mov
mov
ret
popa
sarb
bound
mov
iret
bound
and
push
sub
push
ret
in
sbb
insb
outsb
fwait
out
scas
rcrb
inc
push
repz
inc
lea
push
mov
mov
push
dec
or
inc
mov
pop
std
jne
setnp
ficoml
xor
xchg
dec
lret
or
imul
movsb
jge
cmp
mov
lcall
pop
cmpsb
rolb
dec
push
cmpsb
xchg
cmp
xor
outsb
add
movsb
push
cmpsb
add
int3
and
adc
add
fucom
pusha
testb
stos
cmc
inc
dec
jno
inc
icebp
cli
mov
pop
cld
stos
and
adc
push
mov
es
mov
and
mov
jne
js
push
lret
push
ret
loop
ss
mov
test
pushf
pop
jecxz
sub
popf
daa
and
push
aad
mov
movsl
sub
scas
xorb
xchg
fldenv
mov
fnstenv
inc
jnp
mov
sub
daa
add
aas
add
dec
push
cmp
add
xchg
xor
xor
inc
inc
and
inc
pop
adc
mov
and
iret
sbb
loope
mov
push
mov
lods
jecxz
cmpl
not
mov
jno,pn
repz
xlat
repz
push
cmp
sub
mov
andb
jnp
mov
lods
js
sbb
inc
mov
addr16
cmp
lret
icebp
dec
xor
je
ss
adcl
test
js
cmp
idivl
mov
fidivrl
inc
stc
leave
in
dec
jg
cmc
jp
push
adc
sbb
pushl
dec
jecxz
es
cli
shlb
mov
xchg
sub
imul
subb
xchg
or
ljmp
pop
aad
inc
movswl
cmp
stc
xchg
imul
push
mov
sbb
ds
sub
jo
mov
scas
pop
jle
xchg
lea
adc
es
jle
dec
in
inc
sti
cmp
pop
andl
aam
sarb
js
sub
cmp
mov
aaa
push
fnstsw
push
or
pusha
xor
push
xchg
dec
in
cmp
out
lea
inc
loope
cmp
shrl
orl
cltd
pop
xor
mov
inc
int
inc
or
cli
jns
inc
mov
aaa
cmp
nop
sub
xor
pop
das
jbe
out
mov
pushf
jb
cltd
inc
and
lds
and
mov
add
push
cltd
adc
imul
aaa
cmp
mov
clc
mov
ret
xchg
fwait
and
push
xor
add
addr16
mov
or
lea
jecxz
push
lret
adc
mov
out
push
incl
addr16
jb
pop
cmp
sub
cmpsl
cmp
jo
out
in
lret
cmpsl
jmp
inc
aas
cmp
jmp
or
les
sub
dec
negl
fnstcw
call
pushl
outsl
cmp
cmpsl
jb
xor
pop
pop
aas
mov
mov
inc
cltd
dec
fmull
out
xchg
or
lahf
mov
xor
dec
jp
ljmp
inc
prefetch
sub
fisubrs
cmp
ljmp
cli
push
jmp
leave
sub
cmp
cmp
cmpsl
mov
mov
mov
mov
lods
leave
or
xchg
adc
loop
in
xchg
aaa
sub
adc
out
inc
xchg
aaa
std
icebp
mov
movsb
mov
in
sbb
jg
dec
cld
inc
lods
sbb
lret
ret
push
cmp
movsb
xor
jne
mov
mov
repz
into
loopne
sub
jle
cltd
xchg
pusha
sub
sub
cmp
push
lret
jbe
pop
lret
cmp
stos
and
pop
xor
shl
daa
mov
xchg
and
gs
std
xchg
loop
xchg
mov
sub
push
or
fimuls
lea
repz
pop
mov
push
idivl
out
popf
jg
mov
daa
mov
push
dec
int3
idivb
sub
scas
push
outsl
adc
push
pushf
imull
fldl
pusha
dec
mov
xor
mov
push
out
mov
dec
cmp
sub
cli
jb
and
xchg
fimuls
loop
inc
in
ret
jnp
sbb
pop
push
movsb
sub
dec
out
xor
sbb
rolb
or
clc
imulb
mov
sub
js
call
add
mov
sbb
xchg
outsb
lock
hlt
and
and
mov
rcr
jle
sbb
ficompl
jl
sub
add
jmp
aad
jg
pop
fsub
jle
adc
mov
add
ds
push
movsb
test
or
xor
dec
lock
mov
cmc
jecxz
xor
xor
jnp
cwtl
and
cmp
rol
and
ds
mov
je
mov
addb
jmp
jmp
adc
lock
push
lock
test
mov
enter
repz
jnp
add
inc
nop
repnz
cli
fcoml
lahf
inc
xchg
mov
cwtl
in
out
xchg
adc
jg
cld
and
inc
loope
arpl
gs
call
cmp
xor
sub
mov
cmp
inc
mov
add
in
mov
fiadds
adc
adc
je
pop
in
sbb
sub
jecxz
jb
jp
mov
imul
jmp
inc
cmp
clc
jmp
jg
adc
jecxz
dec
mov
push
mov
mov
jbe
js
xchg
cltd
test
out
mov
fdivr
lods
sbb
call
mov
popf
lcall
adc
jbe
adc
mov
pop
mov
adc
mov
xchg
mov
dec
out
mov
fldcw
xor
inc
sbb
add
movsb
inc
jl
pop
int3
inc
out
mulb
jb
shll
lods
xchg
enter
or
cmp
cmp
lds
mov
xchg
out
jle
movsl
push
mov
fcoms
add
mov
pop
lcall
push
pop
mov
in
push
sarb
jge
jbe
clc
test
ret
jne
mov
daa
pop
xchg
and
fstp
cli
rcrl
fsqrt
insb
mov
cmp
std
stos
mov
and
aam
sbb
adc
xor
sbbb
hlt
pop
lods
dec
xor
ret
lret
popa
sahf
sub
shl
shlb
xchg
cmp
add
adc
and
cmp
dec
adc
test
jle
aad
jmp
les
pop
xlat
clc
test
adc
cs
mov
push
lods
or
and
lea
jnp
push
xchg
pop
jne
mov
cmp
out
sbb
and
push
add
mov
lret
cwtl
clc
xor
dec
je
popf
pop
scas
push
adc
add
dec
pop
pop
enter
rolb
fisttpl
cmp
ljmp
jnp
test
fsubrl
pop
cmp
loope
int3
clc
or
rcrl
cmp
or
inc
pop
and
es
cld
outsl
clc
shll
fiaddl
loop
fcomip
push
mov
add
int3
inc
pop
not
push
xor
loopne
sbb
aad
sahf
rcl
stos
mov
mov
daa
jge
fstpl
and
add
dec
insb
sub
movsl
xor
dec
inc
test
dec
mov
or
leave
movb
and
imul
mov
mov
aaa
popf
dec
or
or
jle
sub
pop
jg
fs
cmp
lods
insl
daa
mov
ret
sbb
inc
mov
add
ljmp
ds
sbb
or
jns
sbb
ret
rcr
sahf
sbb
xchg
mov
mov
stos
mov
es
mov
pop
imul
xor
mov
cmp
and
fwait
shll
imul
scas
test
lds
cmpsb
outsb
movsb
cmpsb
les
jmp
adc
dec
add
cli
aas
push
mov
lods
hlt
jge
sbb
adc
pop
dec
jg
pop
adc
stos
dec
gs
movsb
out
or
mov
push
mov
fcomps
clc
adc
fnstcw
mov
lds
push
popa
push
or
clc
push
xlat
or
movd
decb
push
loop
imul
pminub
jno
shll
xchg
mov
mov
int
mov
adc
xchg
mov
xchg
jmp
jmp
pop
pop
sub
push
out
xor
mov
mov
mov
xrelease
push
sti
add
jns
adc
mov
lahf
inc
pop
cmpsb
pop
in
sub
xchg
xlat
test
movsl
popf
pop
fldl
sub
lds
outsb
jle
ds
xchg
sahf
adc
jno
test
scas
cmpsl
cltd
mov
push
pop
test
imul
ja
cmpb
fidivrs
mov
test
adc
cs
in
mov
fisubl
jg
or
nop
xor
sbb
jnp
repz
mov
xor
popf
push
pop
add
dec
outsl
add
or
cmpsb
jnp
test
arpl
bound
aas
xchg
jl
mov
inc
rorb
imull
sbb
xchg
popf
dec
popf
mov
rolw
sbb
clc
fidivs
xchg
push
push
in
mov
movsb
xor
lds
and
xor
inc
sub
mov
aaa
and
mov
cltd
lods
or
cmpsl
push
jno
mov
push
cmpsl
cmp
mov
imul
sbb
test
mov
ret
xor
shl
aas
repnz
push
push
fistpl
loopne
jb
xchg
sti
inc
jbe
add
dec
ret
push
fistpl
pop
imul
nop
add
outsb
push
loope
sub
ret
push
cli
mov
iret
sti
jbe
cmp
mov
jbe
ljmp
mov
mov
add
fisubl
pop
repnz
push
mov
xchg
bound
pop
jg
daa
adc
into
daa
jg
lods
xchg
mov
or
rcrb
inc
mov
mov
lret
daa
fdivr
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
pop
mov
add
xor
add
add
add
add
add
add
add
sub
add
sub
add
xor
add
test
pop
add
add
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
imul
mov
inc
add
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
add
rorb
add
add
add
add
and
add
adc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
out
push
pushfw
aam
stc
inc
stos
lcall
add
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
push
movb
xor
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
push
mov
inc
pop
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
movl
movl
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
mov
movl
movl
lea
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
mov
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
mov
mov
mov
mov
mov
mov
lea
mov
cmp
jb
mov
mov
mov
add
cmp
jae
sub
add
mov
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
sub
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
pushl
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
lea
add
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
mov
add
mov
mov
xor
add
mov
push
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
push
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
xor
add
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
mov
mov
add
mov
mov
mov
add
andl
mov
mov
mov
mov
mov
mov
lea
mov
xor
mov
add
incl
cmpl
mov
jb
movl
movl
movl
movl
movl
movw
movb
xor
lea
mov
xor
sub
inc
mov
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
movzwl
movzwl
mov
xor
mov
xor
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
jmp
mov
xor
mov
lea
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
sub
xor
cmp
jne
xor
jmp
xor
inc
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
push
push
movl
movl
xor
inc
je
mov
xor
add
cmp
jne
jmp
mov
xor
add
mov
sub
mov
mov
xor
add
mov
add
mov
jmp
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
pushl
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
push
pushl
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
add
push
lea
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
mov
popa
test
cmc
aaa
push
shrb
mov
in
mov
add
repz
add
std
lods
mov
cmp
xchg
xchg
sbb
cmpsb
push
add
paddsb
aaa
push
xor
test
adc
push
pop
mov
jb
mov
mov
aaa
stc
jne
les
es
jne
xchg
mov
add
mov
xor
scas
push
mov
lahf
push
pop
iret
pop
imul
jl
fisubl
or
jae
and
mov
cwtl
movsb
data16
jbe
and
mov
mov
dec
cmp
lds
daa
js
mov
stos
pop
or
sub
inc
ret
sbb
cmp
mov
mov
repnz
popa
jge
mov
out
int
xor
cmp
daa
or
fistpll
decb
les
dec
bound
hlt
push
cmpl
stos
mov
xlat
mov
out
leave
add
xchg
in
pop
test
dec
mov
fldenv
mov
lea
testl
cmpsb
adc
push
outsl
ja
adc
imul
cmp
xor
mov
iret
and
movsl
pushf
loope
mov
pop
add
cmp
imul
lret
bound
fdiv
lahf
nop
sbb
sarb
rcll
cmp
or
pop
cwtl
or
out
mov
pop
push
rcr
inc
int
das
adc
mov
arpl
inc
mov
dec
dec
sub
push
dec
fldl
jbe
cld
into
ret
mov
sub
push
pop
mov
outsb
sub
and
fsubp
fldt
lods
movsb
mov
jnp
in
push
lcall
cli
mov
cmpsb
js
movsb
xchg
cmp
movsb
and
in
mov
or
jns
data16
out
lds
test
xor
gs
inc
mov
mov
int3
pop
or
xor
add
mov
lret
mov
outsl
mov
and
mov
and
inc
outsb
inc
xchg
fisttpl
pushf
fmull
aam
pop
dec
frstor
xchg
xlat
and
pop
mov
xchg
mov
shl
dec
cmp
mov
in
test
cwtl
cs
jl
push
or
push
jl
jle
nop
sbb
lret
rcl
lds
inc
push
mov
repz
icebp
fisttpl
xchg
inc
stc
popa
push
stos
pop
int
popf
fistps
ret
jecxz
loopne
arpl
add
add
cs
cmpsl
add
lcall
lahf
loop
cld
pop
lahf
cli
xchg
mov
lret
icebp
jle
das
push
ds
xorl
cmc
scas
pop
lret
fs
daa
sub
faddl
xchg
xor
in
ficomps
jns
push
into
push
gs
test
leave
xor
cmpsb
and
sub
push
fabs
subl
pop
pop
push
dec
push
das
repz
les
sub
in
xchg
shl
push
fincstp
stos
ds
xor
out
cmpsl
jle
cmp
andl
shl
subb
loopne
mov
mov
jp
into
pop
les
shll
jecxz
cmp
ret
xchg
jg
mov
jp
fisubl
dec
sub
mov
xchg
inc
xchg
push
and
repz
jo
add
inc
and
xlat
jmp
pop
call
xor
mov
lret
cmp
push
rclb
inc
fsubrp
inc
shl
cs
clc
hlt
push
mov
das
sub
icebp
mov
ficoml
adc
lret
xchg
aad
fsubs
data16
or
test
push
sub
in
mov
in
ret
lahf
out
idiv
xor
pusha
movsb
cmc
or
pop
xchg
lret
or
ret
cwtl
adc
pop
mov
in
pop
dec
adc
push
mov
inc
xor
ficomps
inc
add
out
ret
xchg
std
dec
mov
sub
push
jge
idivl
frstor
fistpll
jecxz
in
xchg
movl
adc
jbe
cltd
out
add
loop
outsb
xchg
push
jnp
loope
pop
mov
push
jg
or
cmc
jno
pop
out
lds
lahf
xor
mov
ret
out
idivb
push
rclb
in
loope
pop
lds
cli
lods
cmp
dec
dec
dec
dec
stc
push
adc
insl
adc
loope
sub
pushf
cltd
cmc
stos
stos
mov
jl
std
fdivrs
inc
lea
jbe
nop
lahf
add
adc
mov
lret
push
insl
mov
ret
push
and
bound
popa
push
pushf
add
add
add
push
sbbb
fistpl
int3
cwtl
push
insb
flds
add
add
add
pop
add
xchg
lods
add
stc
pop
popf
jo
xchg
or
jns
lret
mov
inc
mov
insb
xchg
test
gs
test
xor
inc
inc
xchg
lret
sbb
sub
inc
pop
sub
decl
shrb
stc
movsl
pusha
lods
mov
inc
cmp
xchg
mov
mov
adc
and
fs
loopne
test
ficoml
loope
mov
mov
fmulp
cmp
ljmp
add
sbb
pop
test
adc
inc
cli
push
push
sub
mov
xchg
lret
push
mov
inc
iret
je
pop
jge
push
cmp
pop
dec
bound
jl
fs
mov
js
inc
inc
sbb
mov
jne
scas
sbb
add
outsb
jo
lret
jp
sub
mov
xchg
mov
mov
adc
js
mov
jo
stos
sti
cmp
sub
lahf
xor
lcall
das
shl
out
scas
pop
adc
mov
cmpsb
mov
jnp
xchg
xchg
leave
push
mov
and
sub
jg
std
test
jl
push
data16
jbe
fists
push
and
in
aam
mov
add
imul
cmp
jb
inc
leave
adc
jl
fnsave
jle,pt
mov
xchg
xchg
outsl
push
or
in
or
mov
sbb
hlt
jns
pop
xor
xlat
inc
inc
jl
push
mov
jno
fidivrs
mov
fs
xchg
jg
or
loope
cmp
inc
or
mov
pop
sub
int
in
pop
adc
pop
or
sub
andb
sub
les
xchg
jp
hlt
or
int3
push
mov
movsl
iret
sub
jmp
mov
imull
dec
dec
add
jle
jo
add
je
jmp
loopne
dec
repz
scas
ret
in
xchg
inc
and
jle,pn
cmp
push
or
fadd
sbb
aas
mov
push
add
daa
dec
xor
dec
movsl
push
hlt
cmp
popf
imul
daa
mov
mov
insl
fldt
sbb
es
sub
ja
mov
test
int
adc
pusha
fidivrs
inc
pop
les
into
movsl
stc
movsb
dec
mov
xorl
test
and
mov
ss
sub
xor
mov
push
hlt
add
int3
cmc
add
cmovbe
out
popa
shr
fisubrs
dec
xor
inc
loop
pop
adc
mov
adc
addb
pop
stos
mov
mov
jl
add
jmp
mov
and
or
add
adc
xor
or
push
mov
leave
fwait
mov
add
cmpsb
jo
roll
popa
sar
cmp
or
inc
cmp
mov
js
mov
out
mov
adc
lods
or
cmpsl
cwtl
or
je
scas
addr16
push
push
mov
xor
and
xchg
shll
xchg
cmc
push
inc
xchg
push
jno
jo
stc
cmpsl
in
insb
aam
rol
inc
xor
dec
or
adc
ja
clc
clc
jne
out
negl
mov
outsl
or
fmuls
insb
lret
cmpb
icebp
dec
xlat
mov
adc
enter
sahf
flds
aam
js
fstpl
fisttpll
xor
inc
inc
add
jg
test
js
mov
inc
and
add
in
cmp
push
cmpl
jmp
scas
addb
and
mov
std
mov
lock
add
out
in
mov
mov
mov
jo
bound
repnz
push
movsl
in
push
pop
mov
mov
jl
cmp
ds
pop
insb
or
shlb
cwtl
adc
and
xchg
sarl
mov
mov
ja
add
inc
mov
inc
out
pop
mov
loope
fsubrs
rolb
lahf
and
rcrb
jg
pop
outsb
jmp
mov
shrd
aas
jbe
pop
xchg
lods
jge
add
xchg
test
pusha
imul
scas
int3
iret
idivl
repz
dec
cmp
stc
mov
mov
sarb
add
jne
cmpsb
jg
mov
jae
scas
sahf
pop
fiadds
add
add
add
add
leave
push
daa
loope
inc
pusha
imul
mov
or
popa
sbb
test
adc
cmpsb
and
sub
dec
aam
push
xor
xchg
inc
sub
mov
hlt
dec
jno
jle
pop
repnz
inc
mov
push
outsl
ret
test
add
xchg
inc
pusha
mov
ja
jns
scas
sub
mov
test
mov
inc
daa
or
inc
push
cmpb
dec
bound
add
jno
popa
xchg
mov
subl
mov
dec
scas
xchg
jg
push
xchg
dec
test
sti
inc
in
push
fsubrs
sub
or
out
mov
pop
xchg
pop
xchg
sub
fs
xchg
sub
mov
xchg
lods
addl
xchg
std
or
aas
clc
jp
stc
jno
aam
pop
xchg
pop
or
jle
mov
outsl
xchg
fsubrs
mov
jnp
add
ss
hlt
jb
nop
push
fbld
xor
pop
adc
roll
mov
jnp
sbbb
push
push
aas
push
jnp
js
insl
pop
sub
jo
jg
bound
dec
pusha
test
mov
jge
stc
cmpsl
mov
mov
call
adc
std
cmp
jp
sub
push
scas
or
mov
pushf
lcall
sbb
test
xchg
adc
adcb
movsl
inc
gs
shrl
stc
dec
aam
out
out
popa
adc
jae
sarb
push
jmp
fimull
sbb
stos
popf
sbbb
ljmp
xchg
scas
and
leave
pop
and
add
pop
inc
sub
or
cld
mov
mov
stos
mov
xchg
cld
adc
es
popa
pop
adc
sbb
cmp
xor
sbb
sahf
and
sbb
fwait
mov
cli
pusha
imul
or
mov
lods
cmpsb
sar
into
xor
out
pop
aad
clc
in
int3
gs
xor
inc
adc
into
pop
int3
out
iret
incl
pop
dec
mov
je
and
inc
in
lods
pop
mov
outsb
ret
mov
popa
stos
gs
mov
cld
loop
call
mov
fst
adc
movsb
mov
ret
out
imul
pop
je
lock
shlb
inc
rclb
mov
cmp
repz
das
int
mov
pop
inc
lock
loop
cs
xchg
xor
mov
pop
daa
jb
stc
push
test
lods
or
inc
insl
push
mov
jl
js
popf
jns
jbe
xchg
aad
fmuls
cltd
andl
adc
mov
lahf
push
mov
pop
ret
fs
sub
out
insl
inc
movb
dec
inc
nop
pop
jb
fistps
out
jg
xchg
push
repnz
mov
test
stos
ss
lea
push
add
add
fsub
sti
mov
sbb
rorl
xchg
lods
jp
push
mov
jmp
mov
dec
xchg
push
cmp
jb
cltd
xlat
sbb
sbb
aad
mov
sbb
sbbl
mov
mov
sbbb
lret
adc
aam
cli
int3
mov
test
testl
sub
pusha
mov
cli
xor
cwtl
xor
mov
in
lahf
je
fldl
popa
mov
push
sub
push
jns
inc
mov
ss
push
jo
dec
loop
outsb
mov
addr16
loop
mov
out
sbb
xor
xchg
rclb
sbb
inc
stos
pop
test
iret
sbb
aaa
adc
iret
and
test
bound
into
pushf
stos
call
fsubrl
adc
or
cmp
fs
sbb
lods
sbb
cli
mov
jb
mov
xor
jl
push
jl
ds
negb
and
stos
fists
push
sahf
clc
lret
add
outsl
cmp
adc
push
into
rcrl
mov
push
xlat
mov
mov
cmp
outsl
lcall
xor
push
mov
mov
in
lret
lods
adc
call
jecxz
and
inc
sub
lret
or
xchg
jg
add
sbb
xchg
jb
out
mov
sbb
clc
pminsw
idiv
repz
lret
sbb
push
jecxz
add
add
add
das
dec
stc
sti
push
outsb
mov
in
rcr
das
dec
sbb
push
xor
pop
mov
inc
repz
lods
or
and
xchg
fildll
pop
cmp
pop
or
fld
mov
daa
jp
dec
adc
jg
enter
mov
mov
popf
call
and
int3
sub
sub
in
iret
sub
int
push
sbb
addr16
fwait
pop
push
cld
int3
xor
xchg
and
nop
xor
or
xor
cld
clc
scas
and
mov
vcvttpd2dq
test
push
aam
push
int
add
dec
or
cmp
and
mov
nop
xchg
adc
cmpsl
cli
pop
dec
push
lret
jae
push
clc
pop
jo
ret
jnp
jp
ficoms
adc
mov
push
push
ret
lcall
nop
lahf
lret
xor
adc
or
mov
mov
gs
adc
sbb
cltd
aad
scas
or
jae
add
shll
repnz
push
pop
test
jnp
mov
lret
sbb
ficompl
dec
inc
pop
sbb
mov
in
jns
mov
mov
in
mov
cmpsl
testl
lock
pusha
lds
push
mov
pop
test
mov
jle
jno
mov
push
lcall
and
sbb
adc
cmp
and
movsb
in
sub
xchg
test
pop
sbb
popf
xchg
jne
rclb
adcb
cmpsb
cmp
xor
add
outsl
cmp
clc
jp
outsb
and
push
aam
jbe
inc
jmp
add
lret
jo
or
je
add
subl
push
je
dec
cli
jns
dec
gs
push
sbb
inc
int
jo
xchg
jecxz
sarl
in
imulb
add
dec
xchg
and
sub
push
jp
xchg
pop
xlat
dec
xchg
mov
or
xchg
test
and
jno
xor
inc
je
icebp
movsl
push
jb
shll
cwtl
aam
or
sbb
dec
in
and
sti
and
push
imul
call
neg
jmp
movsb
xchg
sbb
or
loop
in
push
dec
mov
test
fadd
aas
or
in
aaa
pop
stos
xor
mov
sti
mov
inc
fidivl
arpl
and
out
loopne
inc
movsb
sahf
ljmp
arpl
stos
shrl
push
dec
mov
neg
mov
fadds
pop
or
fsubr
mov
enter
adc
hlt
dec
mov
insl
push
pop
lds
outsb
push
lods
adc
jge
test
shrl
test
lret
mov
fs
inc
pusha
aas
mov
push
or
or
call
bound
scas
aam
pop
lret
inc
data16
in
pop
int3
push
sahf
pop
cmc
push
pop
repz
mov
sbb
fidivrs
insb
imul
aas
or
mov
cmp
arpl
leave
js
lods
cltd
and
dec
and
and
rolb
icebp
push
cwtl
test
xchg
sbb
xor
or
cmp
or
pop
jecxz
mov
leave
inc
add
inc
ja
enter
push
andb
pop
pop
and
adc
icebp
mov
fwait
nop
iret
cmp
cmp
add
inc
mov
pusha
jo
dec
stos
std
es
lds
fistpll
jb
fcoms
mov
jmp
adcb
xor
pop
in
mov
lods
sbb
sahf
jno
loop
inc
stos
adc
imul
ss
imul
inc
setbe
push
mov
cwtl
or
and
xchg
inc
into
lds
xchg
lock
sbb
xchg
addr16
mov
or
dec
inc
cmp
rdmsr
xor
jecxz
push
push
test
fmul
fidivrl
aad
jg
xlat
mov
scas
scas
sub
pusha
jecxz
popa
add
mov
jmp
adc
mov
xchg
sbb
jge
js
mov
out
add
fdivr
adc
jns
pop
push
insb
push
sbb
cld
addb
push
xlat
rcll
or
fs
mov
dec
sbb
cwtl
adc
sbb
inc
jge
rcrb
jp
dec
andb
xchg
movsb
or
jg
pop
adc
add
add
call
jnp
sarl
jge
dec
inc
call
add
mov
and
test
and
lahf
sbb
loopne
sar
dec
dec
repnz
push
icebp
pop
es
lock
sbb
cmpsb
lds
and
or
adc
or
cmp
popf
push
out
add
popa
push
inc
jge
stos
loop
push
push
jecxz
xchg
scas
frstor
das
or
push
test
cli
iret
mov
ljmp
jp
mov
and
lcall
lock
xchg
inc
or
xchg
and
rorl
cmp
cld
pop
in
in
ja
add
and
lea
xchg
xchg
mov
jns
int
mov
into
dec
dec
push
aas
cmpsl
test
mov
mov
clc
push
aaa
repnz
dec
sbb
es
fwait
inc
subb
lret
adc
pop
xlat
je
inc
sub
cs
jecxz
gs
jmp
xlat
push
inc
xlat
jg
add
jmp
inc
and
push
fwait
mul
js
out
add
jmp
xor
out
pop
movsb
jp
jne
out
push
roll
sbb
ret
fwait
pop
subl
jno
cmp
addr16
xchg
xor
xor
xchg
sub
dec
rol
add
mov
hlt
add
mov
jmp
xchg
mov
pop
cmp
js
adc
in
lds
cmp
outsb
pop
not
fmul
popa
std
jne
mov
jbe
adc
sub
or
dec
sbb
add
sbb
dec
sbbl
xchg
pop
es
push
mov
call
mov
jle
cmp
sub
sbb
pop
pop
mov
notl
pop
lcall
adc
data16
jne
mov
add
jne
cld
lret
and
lcall
loop
popf
cli
fnstenv
cmp
jb
aam
push
fsubp
shlb
ss
popf
mov
lock
decl
mull
inc
addb
push
pop
fisttpll
xor
ljmp
bound
dec
in
dec
sbbb
es
icebp
or
repnz
out
sub
fldl
cli
inc
jl
xchg
and
jnp
orl
insl
fdivrp
test
xor
mov
mov
decb
pop
xchg
xchg
add
xchg
negb
ror
fidivrl
pop
pop
mov
or
mov
into
ss
sbb
int3
stc
xchg
mov
test
pop
mov
jp
xlat
data16
dec
push
inc
cmc
jmp
iret
cmpb
out
pop
cs
xorb
and
mov
imul
fldt
mov
rolb
mov
push
movsb
daa
sbb
xchg
mov
mov
jp
in
or
adc
inc
out
inc
and
fistps
cwtl
mov
cwtl
repz
dec
mov
mov
xchg
dec
les
push
xlat
inc
and
daa
andl
out
sub
in
pop
cmp
js
mov
jg
jnp
sahf
sbb
testl
sub
cmp
outsb
mov
out
xchg
mov
insb
cmp
add
lods
outsl
dec
call
push
repnz
cmp
push
mov
ss
stos
xchg
dec
or
mov
adc
lret
jb
aas
fbld
ficompl
cltd
pop
or
dec
lock
sarb
push
bound
mov
aaa
adc
sbb
and
fmuls
mov
mov
fnstenv
in
jecxz
cmp
jl
adc
daa
cli
test
adc
dec
stos
fdivrl
pop
sub
imul
mov
xchg
sbb
gs
in
or
add
xor
lcall
xchg
popf
jmp
xor
ja
cmp
int3
xchg
mov
lods
mull
bound
inc
nop
out
and
ficompl
sbb
addb
mov
fidivs
cmpsb
xchg
das
cmpsl
repnz
inc
out
insb
cmp
sti
sbb
int
xor
cmp
xlat
jp
add
ret
enter
les
push
cli
jnp
xor
arpl
int3
or
and
and
inc
testb
bound
push
pshufw
insb
pop
cmp
mov
sub
or
pop
mov
test
data16
scas
dec
aam
pusha
in
fwait
jo
push
jbe
out
add
lods
pop
pusha
insl
test
add
add
pop
test
adc
and
in
add
repz
add
fcmovne
and
cmp
cmc
sbb
repnz
mov
jmp
push
jl
ret
cmpsb
mov
shrb
xchg
jmp
push
outsl
cltd
dec
mov
enter
repnz
outsl
jns
aam
ret
imul
outsb
sub
jg
dec
addb
hlt
sub
adc
test
inc
aaa
movsb
mov
pop
je
std
sub
jb
ljmp
pop
jecxz
add
stos
inc
push
les
fistps
orl
stc
add
leave
mov
je
test
leave
repz
out
dec
push
push
sbb
pushf
mov
xchg
stc
pop
cli
hlt
sbb
mov
push
pop
dec
xchg
addr16
jbe
es
xchg
add
fsub
jecxz
pop
subl
roll
dec
xchg
sbb
jmp
jae
test
sub
ds
inc
push
adc
fwait
inc
lds
xorl
insb
cmp
shlb
mov
sbb
xchg
push
mov
test
and
xchg
les
sub
cmp
test
pusha
mov
gs
mov
jl
jbe
mov
mov
and
aam
jae
xor
insb
sahf
loope
test
stc
push
adcl
sbb
or
daa
sbb
push
mov
arpl
mulb
add
inc
mov
int3
mov
dec
shll
rorl
xor
mov
loop
xchg
sbb
and
push
xor
inc
in
or
sub
inc
push
xor
xchg
mov
js
or
fisttpll
push
add
ja
les
jecxz
shr
xor
mov
ja
and
and
imul
pusha
pop
push
pop
pushf
lock
lret
push
dec
das
push
xchg
or
mov
js
lds
in
and
push
js
inc
aas
repz
std
pop
pushf
and
cmp
insb
movsl
xlat
xor
lea
lea
fdivl
nop
pop
ret
jecxz
mov
lcall
mov
lods
or
pop
stc
out
mov
aaa
inc
scas
inc
lods
push
add
pushl
pop
pop
xor
mov
sub
scas
jo
mov
int3
out
push
sub
arpl
pop
fwait
test
mov
or
jmp
mov
and
sbb
stc
adc
in
adc
jnp
insl
idivl
in
push
jp
out
rclb
mov
out
sub
pop
orb
stos
dec
pushf
mov
lret
stos
xorl
outsb
pop
movsb
cmc
jg
or
dec
push
imul
ja
and
cs
call
movsl
je
xchg
enter
test
inc
insb
ljmp
xor
dec
test
cmp
cli
or
or
jl
pop
pop
rep
clc
pop
pop
sti
idivl
sub
jno
push
out
pushl
push
xchg
mov
jno
sti
aad
outsl
cs
push
mov
sbb
dec
xchg
fwait
jl
jbe
repz
test
jo
inc
int
dec
xchg
nop
xchg
hlt
push
xor
fwait
dec
ficompl
inc
jcxz,pt
movsb
fcoms
loop
push
cmp
repz
pop
jmp
repz
fldl
int
std
xor
or
mov
clc
jno
push
adcb
ljmp
shll
fadds
mov
shr
sub
inc
mov
ja
in
decb
bound
jb
lret
xor
sub
in
jl
dec
jb
or
jg
out
and
movsl
ret
cltd
rol
inc
loop
dec
sbb
sbb
repnz
and
mov
sbb
leave
outsb
push
xor
add
cwtl
xchg
inc
pop
mov
mov
dec
pushf
test
pop
pop
in
jge
cmc
xorb
or
mov
cmp
nop
add
fildll
dec
pop
out
inc
loope
adc
sub
push
push
xor
mov
inc
xchg
or
aad
push
add
add
sbb
stos
das
mov
or
push
gs
and
jnp
orb
jmp
push
repz
sub
arpl
mov
daa
cli
sub
ret
loopne
or
jbe
inc
stos
jge
adc
pushw
dec
ret
jns
repz
dec
mov
push
leave
cwtl
aaa
aad
push
dec
dec
dec
push
adc
out
or
pop
push
jo
aaa
mov
jo
lods
stos
and
or
into
lret
dec
cmp
add
add
add
dec
lcall
adc
lret
imul
repnz
repz
add
mov
test
fcoms
ret
sbb
sub
std
cmpsl
mov
xlat
and
adc
dec
push
mov
outsl
das
xchg
adc
dec
leave
jns
jp
in
repnz
sbb
sub
xchg
cmp
outsb
mov
cmc
sti
jp
in
ficoms
adc
test
dec
dec
into
add
push
push
fiadds
cmpsb
xchg
out
mov
or
pop
or
data16
cwtl
ret
loopne
cmp
scas
inc
mov
adc
pop
mov
push
sti
sub
psubq
pop
dec
js
pop
stos
ss
mov
movsb
push
ss
push
mov
adc
mov
mov
js
sarl
fisttps
movsb
test
pop
pushf
lock
sub
cmp
in
nop
mov
cmp
shrb
pop
adcl
pop
inc
out
nopl
and
jg
adc
inc
mov
arpl
jns
push
sub
jg
inc
mov
mov
sti
gs
fiaddl
loopne
xor
lock
cltd
es
cmp
aad
cmp
and
sub
push
jle
inc
add
pop
pop
jno
ss
sub
jno
cs
shrl
repz
mov
data16
movl
aad
shr
fldt
lcall
ja
mov
fdivr
addb
push
lea
jno
lret
test
xchg
stc
mov
cs
js
scas
fs
pop
sbb
mov
lods
lcall
shl
aam
xchg
jp
xchg
sub
loop
push
dec
scas
mov
mov
add
lea
scas
lret
sbb
fmull
jmp
sub
mov
bound
or
dec
dec
sub
aam
lahf
movl
decb
aad
outsl
sub
std
lret
jno
jbe
notl
xchg
mov
fnstsw
std
inc
inc
push
xor
xchg
add
loope
or
pop
pop
fxch
int3
in
pop
or
jg
pop
lret
push
ffreep
jle
out
mov
mov
push
int3
jmp
adc
pop
sub
dec
jo
push
ret
lods
std
jns
in
xchg
lock
jmp
jno
pushf
in
xorl
into
add
in
lock
pop
orl
dec
jecxz
sbb
xor
xor
push
mov
lahf
mov
push
lahf
idivl
ljmp
fisttps
out
insb
subl
and
aad
jne
pop
sti
pop
sub
rcrl
and
xchg
sbbl
neg
dec
pop
or
mov
or
add
add
jmp
xchg
jecxz
repnz
jmp
imul
lret
sbb
daa
jmp
pop
mov
push
shrl
lea
dec
int3
mov
jecxz
in
mov
fldenv
sub
adc
push
rol
pop
stc
mov
adc
mov
jle
jl
cmpsb
test
xchg
xor
sub
mov
dec
sub
or
repz
movsl
jle
adc
cmp
mov
dec
mov
pushf
jns
call
sub
jno
mov
or
add
std
inc
sub
xchg
loopne
or
or
mov
add
pop
add
cmp
inc
jecxz
or
mov
pop
sbb
int
movsb
fcomps
rol
stos
and
mov
and
mov
les
jb
or
jno
push
out
xlat
add
ds
pop
or
sbb
jp
cli
dec
fidivl
sub
lods
dec
or
push
sub
and
std
addr16
ret
repnz
pop
cmp
rcrl
test
ljmp
daa
int3
das
inc
in
mov
adc
leave
mov
mov
shrb
and
or
sbb
lcall
push
nop
das
testb
cmp
ja
or
mov
iret
jne
not
out
or
cmp
mov
and
out
lcall
mov
inc
inc
hlt
popa
xchg
popf
iret
filds
mov
stos
jnp
bound
push
lods
in
outsb
iret
fwait
leave
lds
push
or
xor
test
xchg
push
adc
ret
fstps
mov
pop
andl
clc
cli
mov
outsb
push
xchg
jg
call
pop
sub
dec
xchg
jmp
push
mov
jo
dec
cltd
mov
jp
bound
mov
add
add
mov
jno
cmc
divl
mov
xchg
push
testl
add
movsb
jmp
cli
clc
mov
adc
std
xchg
movsl
xchg
xor
fmuls
adc
mov
int3
add
rorb
out
cltd
jno
inc
sbb
hlt
test
mov
out
movsb
sub
daa
mov
and
mov
push
cmp
shlb
mov
push
adc
out
or
in
lds
mov
push
adc
jl
cmp
jbe
aad
dec
mov
mov
testb
das
adc
and
push
adc
movsb
inc
faddl
mov
mov
clc
cmpsb
dec
icebp
push
add
ja
or
enter
jle
cs
or
inc
and
push
jmp
call
mov
push
dec
outsl
daa
mov
push
push
cld
pop
in
test
mov
mov
inc
lcall
mov
dec
sbb
pushf
mov
mov
and
xchg
lock
sbb
test
jne
incl
pop
out
clc
cs
es
adc
adc
ficoms
popf
mov
ss
lea
cmc
inc
xchg
mov
stos
movsb
pop
xor
inc
out
lods
ror
in
add
insb
ljmp
sahf
jae
mov
sbb
ffree
inc
and
mov
cmpsl
or
adc
movsb
xor
lock
mov
adc
jo
loopne
and
add
inc
fstpt
xchg
adc
mov
inc
add
les
lahf
cs
movsl
pop
and
jo
xchg
push
stos
fimull
sbb
xor
push
push
into
fmull
aad
mov
leave
mov
jp,pt
push
or
bnd
cmp
jge
std
cmp
adc
leave
sahf
sahf
cmc
popa
push
fs
xor
or
xor
ret
mov
lahf
negl
jp
xlat
or
in
cmp
lret
in
jmp
jne
daa
fnstcw
das
mov
testb
jle
cmp
xchg
pushf
xor
sub
dec
jae
add
jbe
or
dec
enter
push
test
push
pop
push
bound
mov
or
cmp
adc
xchg
xchg
jns
cmp
jg
xchg
outsl
inc
xor
js
or
pop
or
mov
rcl
mov
jle
cltd
mov
shr
fcoml
pop
ret
xchg
nop
cmp
in
in
out
push
sub
mov
jnp
cltd
sub
and
xchg
fwait
scas
imulb
push
and
mov
mov
imul
adc
pop
aaa
fcmovnbe
mov
pop
xlat
addr16
loopne
dec
int3
push
inc
inc
stos
or
int
ss
cmp
es
adc
add
xchg
inc
dec
or
sub
pop
pop
mov
and
cmp
inc
pop
and
movsb
push
fmuls
and
stc
dec
lcall
mov
or
rolb
or
cli
jl
mov
mov
in
iret
add
xchg
in
int
stos
inc
stc
test
push
mov
in
loop
mov
or
sbb
cltd
pop
loopne
xchg
clc
popa
dec
insl
xchg
das
mov
out
jne
dec
jne
mov
imulb
mov
or
push
aam
mov
sahf
je
and
scas
xor
int
mov
mull
pop
sbb
dec
xchg
cmpsl
ljmp
sub
pop
mov
inc
xchg
cmpsl
ja
jno
xchg
incb
cli
add
jne
jne
push
mov
cmp
cmp
mov
mov
out
sbb
les
inc
insb
std
shl
clc
push
enter
cmp
fwait
or
mov
mov
test
jecxz
mov
fdivl
push
je
mov
fs
ficompl
or
call
mov
sbb
xchg
sarl
dec
pop
push
in
mov
les
cmp
test
push
shlb
sub
xchg
addl
mov
push
push
xchg
pop
mov
cwtl
push
stos
cmpsl
inc
mov
test
mov
adc
cmp
xor
leave
push
inc
pop
jg
rorl
loopne
clc
out
jb
and
mov
mov
mov
ljmp
push
out
adc
loope
dec
mov
outsb
jne
inc
sahf
dec
add
add
add
sahf
xchg
inc
fisttps
lahf
int
push
bsr
add
repz
add
sbb
push
xchg
scas
jb
aad
mov
lcall
fisubrl
mov
icebp
or
mov
shrb
push
pop
test
aam
and
mov
icebp
hlt
call
fcompl
lods
int
clc
dec
ljmp
cwtl
int
int
or
lods
push
dec
subl
int3
pop
orb
ja
dec
adcl
std
mov
pop
lock
mov
clc
cmp
xchg
shll
cmpl
movb
push
roll
into
lock
ljmp
pop
dec
cwtl
aam
in
dec
arpl
adc
insb
cmpl
push
insb
lret
insb
xchg
push
or
stos
push
or
in
push
mov
outsb
orl
mov
mov
xchg
leave
data16
ret
sbb
xor
push
out
mov
xor
dec
add
fiadds
mov
mov
and
mov
lea
xlat
cltd
adc
fs
movsb
mov
cmp
push
insl
pop
mov
std
push
mov
xchg
mov
inc
or
add
fwait
push
movsl
idivb
jecxz
lret
jmp
jg
gs
pop
aam
inc
insl
call
stc
scas
inc
shll
repz
js
faddl
mov
jns
inc
icebp
push
xlat
ror
push
inc
imul
cmp
xlat
dec
adc
ljmp
inc
xchg
dec
enter
pusha
sbb
rorl
dec
cmp
pop
sbb
dec
stos
enter
lea
sub
sub
mov
jbe
ret
mov
add
mov
mov
mov
outsl
push
mov
imul
shl
imul
inc
sahf
fisttpll
push
pop
stc
xchg
lock
mov
test
rcrb
push
pop
pop
push
dec
mov
jmp
hlt
addr16
lret
cmp
xor
lds
xchg
sub
lea
and
sbb
aad
push
arpl
lods
fdivs
subb
xor
push
dec
dec
iret
xchg
jge
add
jbe
ja
pop
aad
push
inc
mov
mov
cwtl
sub
repz
lcall
dec
mov
jns
movsb
cld
shlb
es
xchg
mov
pop
sub
fldcw
mov
cmp
fiadds
ds
sbb
inc
out
adc
repnz
gs
rol
das
jae
mov
push
aad
and
pop
leave
and
sub
inc
and
lcall
add
sbb
js
dec
mov
out
xchg
stos
test
pop
cmc
xor
lahf
inc
pop
cmpsb
dec
or
aad
cmp
xchg
mov
add
fisubrs
icebp
imul
jecxz
outsl
aas
mov
jmp
loop
sahf
cltd
loope
fcoml
mov
pop
fcmovne
fistl
mov
cmp
shrl
adc
and
lea
push
fxch
fistl
adc
or
cmp
mov
popf
mov
jle
imul
in
out
dec
mov
jl
dec
into
sbb
sub
imulb
pushf
sbb
in
test
ss
icebp
idivb
lods
mov
mov
push
push
add
imul
in
cmp
pop
aas
idivl
or
lods
scas
or
shlb
in
lds
jl
lods
mov
jns
lods
mov
cmp
shlb
fidivs
mov
iret
movsb
push
not
push
pop
and
icebp
mov
loopne
mov
mov
lret
cmpsb
adc
xor
xchg
mov
dec
rcl
arpl
je
popf
iret
mov
jb
jnp
and
aaa
ret
jno
cmp
ss
mov
push
repnz
lods
bswap
inc
lea
sub
mov
mov
arpl
filds
insb
inc
jg
data16
xchg
push
imul
inc
mov
inc
pop
push
movsb
pop
lret
xchg
push
clc
enter
dec
inc
jmp
xor
lahf
out
data16
imul
inc
adc
sub
rcl
mov
or
xchg
lods
pop
mov
inc
inc
xchg
mov
push
and
xor
push
data16
gs
clc
pop
pop
mov
cmpsb
and
nop
sbb
popf
shrb
dec
add
and
lock
repz
mov
mov
add
add
xchg
cmp
xlat
aas
popa
adc
xorl
rolb
add
repz
add
addl
int3
cmp
inc
lret
inc
mov
subl
mov
jg
jb
mov
mov
mov
cwtl
mov
push
faddp
push
push
fcomps
xor
shrb
jae
sub
in
in
add
bound
test
jnp
lds
dec
fnstenv
push
jnp
int3
subb
mov
ret
test
cs
pop
or
sbb
hlt
mov
xor
cmc
mov
cmp
push
testb
mov
xchg
sub
pop
inc
ljmp
sub
movsb
test
lret
mov
fisubl
adc
sbb
lahf
outsb
gs
iret
push
mov
stos
cmp
dec
sbb
mov
out
pop
dec
mov
jg
jno
cmp
daa
std
dec
es
push
inc
insb
lds
adc
fstpl
mov
arpl
fnstcw
jnp
test
mov
xchg
ds
cmp
stos
push
movl
sahf
sbb
into
call
out
inc
pop
xor
mov
adc
ret
aad
mov
or
lret
or
sub
in
jae
sbb
xor
add
imul
add
shrl
ss
jg
shll
in
jb
jns
jge
dec
xor
mov
push
inc
aas
xchg
into
push
repnz
mov
aad
mov
inc
push
movsl
enter
cmpsl
mov
out
xchg
mov
subb
out
dec
mov
arpl
dec
mov
lods
inc
push
xchg
lret
mov
xor
cmp
mov
lods
push
int
dec
insb
xor
clc
test
arpl
out
es
dec
daa
inc
mov
and
arpl
pop
loope
and
mov
les
imul
and
or
cmc
xor
mov
arpl
adc
pop
adc
mov
mov
push
push
stos
arpl
inc
imul
test
lret
rolb
loopne
xchg
and
jmp
cs
bnd
cmp
pop
popf
pop
stc
xchg
popf
dec
cmp
sub
loopne
push
call
test
pop
and
enter
cmp
dec
add
loop
cmp
das
out
push
fmul
mov
push
mov
testb
jb
pop
cmpsb
add
xchg
jp
bound
leave
out
fucomi
add
lret
das
inc
test
dec
cmpsb
push
mov
push
mov
sbb
mov
jp
mov
jno
push
and
mov
mov
push
mov
xchg
cmp
data16
push
jnp
xchg
popf
jns
insb
jg
sbb
outsl
inc
lds
jb
incb
bound
nop
js
into
adc
mov
sub
pop
jo
loope
push
mov
xchg
imul
bound
sub
lock
outsb
xor
pop
xchg
sbb
faddl
or
int3
pop
popf
inc
cmpsl
gs
repz
divl
sti
fstl
push
or
and
fidivrl
sub
mov
xlat
and
sbb
in
lret
xchg
ja
cmp
test
outsb
mov
cld
out
lock
inc
iret
rcl
aaa
movsl
cwtl
mov
ds
mov
xchg
fnstenv
and
icebp
mov
and
cmpsb
das
adc
jle
stos
sub
sbb
xchg
mov
add
jl
hlt
mov
faddl
jp
jmp
cmp
imul
fadds
mov
and
psrlq
add
push
adc
dec
hlt
stc
faddl
outsb
lock
fstps
mov
les
imul
test
movsb
psubusw
push
ja
and
cmp
fs
enter
int3
mov
iret
sub
idivb
ja
and
icebp
jnp
jae
mov
or
cmp
mov
xchg
mov
out
cmp
int3
popf
jbe
mov
ja
sarl
lods
repz
pop
mov
rcl
das
mov
jne
xchg
aaa
dec
iret
jno
mov
pop
mov
in
int3
inc
or
jecxz
jge
or
sub
movsb
sbb
cmc
inc
cmp
das
add
add
jnp
add
or
or
lods
jecxz
test
scas
sub
and
fstps
test
cmpsb
ret
cmpsb
lock
add
add
add
fidivrs
int
outsl
cmp
testl
push
jno
adc
mov
push
jnp
mov
ja
pop
pop
add
jbe
sbb
stos
push
push
dec
ffreep
mov
stos
test
xor
adc
jl
ja
lods
sub
icebp
mov
dec
in
test
sub
call
insl
outsb
in
out
subb
rolb
rcrl
add
jnp
pusha
lds
pushf
cmpb
xchg
outsb
pushf
stc
mov
add
xchg
orl
inc
das
sahf
sub
add
xchg
sub
jne
add
mov
mov
leave
dec
dec
adc
mov
imul
or
sub
lahf
xlat
imul
xlat
and
jg
in
xchg
pop
iret
fists
mov
jne
lea
nop
aad
mov
lock
sbb
arpl
sub
in
jle
fisttpl
in
incb
pop
or
jg
inc
add
clc
sti
das
lds
jb
jno
cmpsl
sahf
push
xchg
outsb
jbe
mov
in
or
dec
out
mov
pusha
clc
add
adc
sub
sbb
ficoms
add
pushf
xchg
scas
clc
dec
fldenv
lock
inc
mov
fcomp
icebp
shrl
mov
jmp
rcl
mov
cmp
and
pop
data16
pop
cld
add
popa
jns
data16
jecxz
adcb
fdivrl
int
test
dec
and
cmpsl
adc
push
jmp
xchg
movsl
stos
mov
cmp
pop
sub
fdivl
rcr
jnp
cwtl
iret
sub
push
iret
roll
test
negl
jmp
shrl
repnz
push
lahf
xlat
xor
fwait
inc
test
mov
scas
sub
mov
int
mov
rclb
imul
jg
mov
fs
xor
mov
jecxz
into
inc
xor
xchg
insb
pop
sarb
fbstp
inc
ret
inc
mov
mov
aam
lret
js
pop
scas
int
push
das
dec
xor
xchg
jb
cld
jmp
or
sbb
push
adc
call
and
test
testb
out
aas
imul
lods
pop
adc
aam
xchg
xchg
add
xchg
pop
enter
push
iret
sub
xor
jg
mov
inc
daa
add
mov
xlat
mov
in
or
push
sbb
sbb
aaa
inc
lods
inc
push
and
movsb
mov
fs
pusha
mov
push
dec
fs
sbb
not
sbb
dec
and
sahf
ret
lcall
ret
in
push
loop
sbb
shlb
inc
sub
dec
xor
ljmp
in
add
jle
jno
jo
dec
in
pop
mov
xchg
sbb
inc
filds
cmp
xchg
pop
sub
mov
fnstcw
flds
mov
jge
adc
pop
ja
jb
in
popa
lock
ret
and
lcall
inc
repnz
sbb
mov
pop
insl
cmovge
rcrb
cmpsb
xchg
xor
cmp
cmpb
in
cltd
sub
pop
dec
lods
pop
fadd
sub
jne
mov
pop
addr16
dec
imull
insl
mov
push
pop
cmc
imul
enter
fmuls
mov
lods
scas
in
jno
mov
cmpsl
adc
push
clc
repnz
and
dec
test
mov
pop
and
push
fisttpl
cmc
mov
sub
adc
cmp
sub
or
jp
push
mov
add
mov
jmp
lods
ljmp
jbe
inc
pop
xchg
push
insb
cld
mov
pushf
addr16
jg
mov
jo
je
scas
std
sbb
fwait
sbb
push
mov
mov
xor
and
xor
pop
rorl
sub
xor
gs
test
cmc
and
push
dec
mov
sahf
mov
in
outsl
fdivl
icebp
mov
lock
std
mov
cmp
imul
cwtl
push
jecxz
sub
fcoml
sub
mov
cwtl
inc
pop
push
adc
mov
decb
mov
cmpsb
jnp
dec
out
xchg
sahf
shrb
addr16
pop
shl
ja
pop
or
mov
xor
in
rcrl
lret
out
gs
sbb
push
xchg
sbb
add
mov
push
out
std
mov
push
jg
mov
ljmp
add
es
push
mov
pop
xor
int
jno
xor
fs
pusha
lret
mov
sub
and
add
fsts
or
jmp
int
popf
add
push
ja
adc
data16
dec
nop
sub
mov
pop
jp
or
or
add
dec
push
jb
in
jns
jns
adc
sub
push
fsts
push
pusha
mov
imul
push
insl
in
leave
bound
lahf
rcll
sbb
ja
add
dec
push
insb
fldl
jle
fnsave
add
scas
jo
ficoms
mov
bound
jmp
sbb
mov
sti
mov
lret
jg
pop
mov
xor
mov
daa
push
inc
mov
cmp
sub
scas
or
mov
push
fs
test
mov
inc
repz
andb
pop
shrb
insl
xor
mov
outsb
mov
jns
testl
adc
cli
mov
test
mov
cmp
fxch
sbb
test
push
pop
stc
into
sbb
cmovs
out
mov
les
outsb
lock
ss
out
xchg
cmp
mov
stc
mov
xor
push
in
inc
push
int3
outsl
pop
sub
shlb
filds
mov
xchg
jno
or
shrb
mov
rorl
test
adc
inc
mov
in
cvtps2pd
outsl
mov
lret
in
out
repz
loop
stc
lods
arpl
or
rcrl
scas
mov
mov
lret
stos
fbstp
rcll
jno
in
sub
push
jge
push
imul
bound
add
orl
test
movsl
xchg
cmp
lock
ja
fst
mov
fimull
call
mov
sbb
mov
cmp
pop
in
das
insb
xchg
dec
jl
imul
lods
sbb
pop
popa
inc
cs
int
pop
xchg
push
jns
jo
jo
in
js
adc
pop
sub
add
inc
mov
mov
fsubrl
push
inc
ds
xchg
sbb
xchg
outsl
rol
outsb
test
jp
outsb
and
pushf
pop
in
je
push
sbb
out
ficoml
cmp
inc
imul
lods
add
divb
mov
pop
pop
add
add
pop
ret
icebp
mov
inc
imul
lods
rorb
pop
in
jl
stc
add
in
inc
jecxz
mov
jbe
push
xchg
je
js
and
call
test
pop
or
imulb
xchg
push
rcl
faddl
cltd
aaa
xchg
mov
mov
int
mov
shll
mov
repz
add
call
fldl
sub
push
orl
fsts
xchg
fidivrs
pop
xchg
out
ret
sub
jl
xchg
xor
mov
inc
jecxz
lock
pop
repz
sti
mov
hlt
test
lcall
cltd
sahf
das
push
xor
outsl
mov
xchg
jecxz
mov
fldl
pop
imul
jno
push
in
pop
sbb
pop
pop
dec
xchg
inc
lcall
sub
push
mov
pop
rcr
sub
loop
jl
imul
stos
or
mov
lsl
adc
push
out
lret
sbb
sbb
sahf
std
or
jns
aas
mov
mov
add
aaa
push
cwtl
fwait
sub
pop
mov
adc
leave
mov
cmpsb
addr16
aad
imul
jg,pt
or
popf
loope
pop
sub
movsb
xchg
in
pop
lahf
and
dec
lods
mov
outsl
mov
fstps
xor
sbb
push
push
fcomps
rcll
insb
jmp
pop
adc
loope
mov
jp
les
into
test
push
ljmp
push
cli
repnz
aaa
or
jmp
mov
fbld
jg
das
sahf
sbb
adc
jecxz
or
sub
mull
push
out
push
and
dec
jl
and
clc
lahf
mov
jle
call
lods
push
sahf
jmp
lret
mov
sub
mov
mov
cmp
loope
and
imul
test
cmp
sub
mov
hlt
add
or
add
add
add
lret
in
out
dec
add
cltd
xor
repz
add
les
xchg
sub
mov
pushf
inc
sub
scas
cmp
mov
cmc
dec
add
ret
inc
rcll
jae
cmc
nop
je
hlt
mov
sti
ja
adc
cmpsb
popa
fists
add
lret
repz
icebp
flds
pop
movsb
pop
pusha
ss
xchg
jnp
and
mov
fildll
inc
js
mov
sbb
fsubrs
fdivrs
add
jne
push
jl
pop
push
inc
jg
dec
mov
cmpsl
xorl
pusha
jmp
jb
in
jp
jo
test
add
fcompl
jno
mov
push
jmp
clc
inc
ret
mov
mov
cmpsb
int
fdivrl
adc
mov
cwtl
pop
jo
pushf
addr16
stc
xchg
dec
imul
add
jge
cli
les
sahf
jge
jbe
xor
lahf
xchg
ret
jnp
mov
fwait
outsl
cmp
pop
imul
and
stos
scas
mov
lcall
in
push
dec
sub
jmp
adc
cmp
xchg
jle
into
xchg
lea
xor
bound
jae
insb
imul
sbb
pop
or
lcall
xor
mov
pop
test
xchg
jmp
xchg
mov
sahf
nop
pop
and
cmp
loope
cwtl
addr16
daa
test
mov
je
mov
cmp
push
sbb
mov
icebp
mov
lods
and
xorl
sbb
cltd
cmp
adc
ljmp
push
aaa
and
push
pop
jns
sub
cmp
out
inc
and
and
sub
mov
movsl
cmp
inc
lcall
push
clc
jmp
inc
cmp
lods
and
jne
jnp
and
mov
pushl
nop
dec
sti
iret
xor
pop
dec
pop
std
adc
nop
shll
fidivrl
insl
icebp
inc
movsb
jo
cmp
xor
js
lcall
mov
iret
mov
int3
lcall
stos
aaa
add
jno
test
mov
adc
xchg
rcrb
mov
jle
mov
fldenv
std
or
cmc
dec
sbb
or
or
enter
pop
jns
inc
arpl
insl
cmp
inc
addl
dec
movsl
jp
jae
cmc
sbb
mov
mov
and
movsl
mov
push
dec
adc
cli
mov
push
shr
pop
cli
mov
jbe
cmp
stc
lock
inc
das
je
enter
enter
hlt
mov
and
jp
icebp
test
mov
mov
scas
and
inc
xor
test
xchg
mov
mov
lods
mov
mov
popa
enter
les
xchg
pop
nop
cli
mov
inc
and
xchg
mov
or
jmp
hlt
mov
cs
mov
fs
data16
in
cmpl
mov
mov
dec
out
arpl
cli
adc
xor
adc
or
jle
sub
addr16
mov
push
sbb
std
jns
repnz
insl
sti
pop
jo
add
sti
jmp
lods
lret
mov
inc
xchg
or
mov
pop
jmp
sbb
lahf
in
adc
je
mov
dec
popa
jg
add
push
push
fmuls
inc
xchg
subl
sbb
adc
dec
mov
inc
mov
dec
dec
cwtl
mov
dec
mov
out
xor
insb
xor
inc
sub
mov
and
mov
ret
adc
das
mov
andl
call
xchg
popa
popa
pop
xchg
lmsw
rcll
xchg
aas
push
out
push
mov
daa
mov
sbb
pushf
cmpb
jne
adc
add
test
scas
fisttpl
jb
aam
std
shrl
sub
cli
iret
scas
jl
or
je
sbbb
add
outsl
push
shll
push
pop
int
or
shl
or
xchg
dec
or
inc
cmpsb
int3
xchg
mov
jbe
mov
mov
sarl
cmp
scas
sbb
cmp
loop
mov
and
jo
lret
xlat
sbb
jo
out
sbb
out
push
cmp
sub
push
add
add
add
je
std
mov
rclb
pop
pop
or
adc
add
add
add
mov
fnstsw
xor
sub
adc
or
out
dec
or
add
add
iret
mov
inc
and
test
test
sbbb
aaa
inc
jmp
xor
icebp
sti
ljmp
sbb
dec
jno
in
and
cmpsb
cmc
aas
jne
lds
push
inc
aam
leave
es
iret
jns
pop
test
leave
js
jmp
shlb
stc
pushw
outsb
data16
rcrl
lahf
scas
inc
lock
ror
icebp
fwait
jne
loopne
shl
in
loope
ljmp
gs
ja
lahf
lds
aas
mov
sti
aas
inc
sub
pop
fstl
jb
xchg
xor
sub
insl
or
sarb
pop
and
iret
mov
push
sbb
jmp
xchg
push
and
sub
mov
movsb
iret
push
sub
imul
push
stos
fimull
out
cmp
bound
sbb
jge
cmp
xchg
pop
sub
bound
movsl
mov
adc
scas
pop
mov
pop
fldenv
movsl
les
sbb
mov
sub
sbb
cmp
fwait
and
mov
jge
into
aad
adc
leave
imul
dec
addr16
xor
testb
xor
adc
fstl
fists
scas
ljmp
mov
add
lcall
mov
in
pop
out
jp
cmp
xor
mov
fistpll
sbb
jecxz
push
mov
xlat
and
aam
xor
cld
cmp
push
mov
mov
jns
mov
adc
out
add
lahf
inc
jg
test
and
lea
or
cmpsb
adc
push
push
iret
lds
cmpsb
mov
pop
fmull
in
lea
fdiv
cmp
icebp
jmp
push
pushf
mov
add
sbb
xor
sbbb
mov
push
mov
aas
push
fs
jo
addr16
iret
enter
xchg
ljmp
xor
mov
mov
inc
add
std
push
ds
mov
cmc
test
push
inc
mov
cs
test
or
clc
mov
sbb
lret
aad
or
sahf
mov
lret
cltd
or
aas
lret
ret
mov
add
orb
jo
cmp
mov
inc
daa
sub
cmp
and
ret
test
stos
inc
call
imul
cld
push
and
enter
pop
aam
aam
inc
outsl
sub
and
imull
pop
pop
in
add
fadd
jnp
mov
jl
int
movsb
in
push
sahf
mov
cmp
jmp
test
and
inc
clc
xor
xchg
mov
hlt
test
or
ljmp
inc
or
push
sbb
fildl
pop
xchg
icebp
xchg
jb
cmpsl
popa
into
pusha
xchg
fstps
aam
stos
inc
stos
loope
adc
jno
stc
push
fwait
sbb
iret
xor
jge
adc
cmp
inc
outsb
pop
sbb
lret
jbe
sub
mov
dec
mov
xchg
push
mov
mov
lea
sarl
fxch
push
mov
mov
fldcw
push
pop
xchg
mov
out
cmp
outsb
fisttps
and
stc
mov
outsb
add
dec
popa
mov
lods
jg
xor
fcoms
lods
xchg
arpl
cmp
add
hlt
mov
push
mov
dec
out
fwait
push
repnz
xor
nop
adc
pop
lock
push
aad
cmpsb
mov
outsl
ljmp
es
cmp
jne
cmp
xor
dec
or
ret
out
out
loope
je
ss
dec
xchg
les
inc
dec
movsl
scas
dec
and
lcall
popf
add
lods
ret
cwtl
mov
or
add
in
mov
cli
dec
mov
aaa
cmp
pushf
sub
jno
pop
icebp
pop
call
pop
stos
testb
je
dec
mov
movsl
js
jnp
xlat
fsubr
xor
test
call
lds
xchg
ss
jp
cmpsl
notl
das
push
stc
mov
push
xorb
insl
add
pop
mov
nop
cld
test
fwait
inc
inc
pop
dec
rcll
movsl
push
and
and
jne
dec
mov
push
dec
negl
iret
int3
add
add
add
in
in
or
jne
ret
sbb
add
add
add
scas
push
sub
push
jle
jae
cmp
inc
jg
jno
inc
jns
xchg
insb
jge
xchg
enter
outsb
subl
xor
into
test
pop
in
rcll
in
repnz
xchg
fmull
xchg
adc
cmp
mov
xchg
daa
aaa
jle
lods
pop
and
inc
sub
adc
push
pop
les
adc
jecxz
out
mov
xor
sahf
inc
mov
mov
sbb
imull
lods
or
adc
rorb
cmpsl
dec
xor
sbb
cmpsl
ss
js
je
notl
nop
aam
repz
in
sub
mov
mov
sahf
movsl
adc
stos
cmpsb
sub
mov
ss
out
inc
inc
aas
mov
lods
in
je
inc
inc
inc
jo
gs
mov
mov
nop
ja
cld
scas
shrb
nop
nop
jns
test
mov
mov
bound
cltd
lea
inc
test
outsl
aad
push
jg
cmp
adc
sahf
add
sar
test
jp
cld
fidivl
loop
loopne
mov
fstpl
mov
pop
sahf
cmp
adc
adc
scas
push
push
dec
xor
das
out
imul
adc
cwtl
xchg
inc
arpl
pop
addb
popa
push
lret
inc
jo
inc
call
mov
ja
decb
loope
xchg
mov
fisubs
test
fildl
adc
xchg
xchg
push
or
imul
mov
sbb
xchg
mov
jmp
ja
sub
das
xor
mov
sub
and
sbb
jne
dec
daa
jno
jmp
scas
sub
cld
xchg
out
aam
mov
pop
pushf
adc
and
test
jmp
idiv
mov
ret
mov
jnp
les
inc
add
into
int
outsb
lea
pop
clc
outsl
xchg
cltd
jne
es
outsb
cmpsb
cmp
mov
lock
clc
mov
jge
dec
nop
push
inc
sub
mov
add
inc
mov
int
sahf
jp
jl
pop
rcrb
adc
fistps
aas
rorl
xchg
and
push
sbb
int3
cltd
out
xchg
sbb
mull
lahf
cmp
mov
or
stc
hlt
cli
sub
fmull
push
pusha
push
call
sub
fadds
call
mov
sbb
fldt
push
and
insl
jl
push
mov
xor
xor
stc
sahf
xor
dec
pinsrw
push
ret
scas
push
and
shll
xor
add
mov
cltd
movsl
dec
xor
push
repz
cltd
ficoml
mov
test
arpl
jg
inc
dec
enter
gs
jle
rcr
clc
inc
inc
cmp
repz
or
ss
shll
cltd
fisubrl
pop
mov
test
mov
dec
in
cld
hlt
sbb
sbb
sahf
push
stc
addr16
add
outsb
jns
out
cmc
push
cmpb
mov
dec
xchg
fisttps
test
ss
sub
sub
inc
enter
loopne
cs
sub
xchg
addr16
mov
movsb
sub
fstps
and
test
rcl
pop
fs
or
cmp
cmpsl
push
pop
lods
xor
xchg
mov
mov
outsb
mov
int
jns
std
arpl
mov
and
out
cltd
lcall
inc
mov
push
push
loope
fwait
mov
push
sahf
int3
enter
pop
lahf
cld
popa
in
out
test
xor
in
in
lahf
mov
sub
cmp
push
cs
or
aas
cs
mov
mov
or
popa
in
mov
push
cld
lds
cmpsb
jns
and
push
sar
mov
sbb
aad
xchg
mov
mov
fldl2e
xchg
fistpl
faddl
dec
push
stos
sbb
pop
mov
jne
insb
test
xor
cmpsb
hlt
add
push
xchg
daa
jle
out
cmp
cwtl
dec
enter
fwait
xlat
movsb
fsubrs
xchg
xor
les
ljmp
push
pop
filds
fcmovnb
imulb
push
pop
jne
xor
inc
mov
shll
push
mov
lods
pop
dec
and
sarl
jae
or
cmp
sub
addl
movsb
imul
ss
add
add
add
push
push
add
lods
test
gs
lcall
repz
add
loope
insb
dec
int
mov
sbb
ffree
cmp
mov
push
pop
cmc
pop
xlat
dec
cs
sbb
adc
inc
adc
dec
cltd
inc
inc
out
jo
ret
ficomps
leave
lret
cmp
out
testb
adc
leave
std
mov
repz
test
xor
loope
std
or
pushf
xor
ds
jnp
lahf
into
cwtl
push
fs
push
cwtl
pop
popf
out
sbb
fwait
sub
lcall
sbb
shrl
mov
mov
int3
sbb
cmp
mov
or
pop
jp
jns
dec
cmp
sbb
testb
push
test
movsl
push
sub
inc
add
push
xor
pushf
pop
lret
inc
pop
and
dec
mov
inc
test
addr16
rorl
popf
lods
cmp
xor
xlat
dec
repnz
imulb
movsb
mov
leave
aad
xor
or
in
jnp
push
testl
test
pop
div
clc
mov
jecxz
dec
in
cmc
arpl
loop
sub
xchg
push
in
xor
lods
gs
roll
repnz
pop
ja
ret
xor
jge
dec
daa
xchg
mov
and
or
sub
cmp
dec
cld
mov
add
xchg
or
xor
in
mov
iret
vsubps
in
mov
scas
sti
mov
fsubs
mov
outsl
jnp
sbb
and
pop
fmuls
nop
jae
inc
dec
fs
jns
cwtl
xchg
sahf
or
mov
mov
sbb
aaa
or
sbb
adc
out
ficoml
or
dec
or
nop
lcall
dec
fnstenv
cmpsb
test
out
jle
or
cmpsl
lret
fmull
inc
jge
add
jns
sbbb
jae
scas
adc
cld
fdivl
fcmovnbe
mov
loop
rcll
mov
scas
adc
aas
dec
out
mov
fcomps
cld
adc
int
into
jmp
dec
sub
in
bound
mov
icebp
sarl
fdivrs
add
imul
daa
pusha
push
push
ret
icebp
sbb
adc
xchg
mov
shl
pop
inc
sbb
pop
mov
lods
mov
in
mov
sarl
jns
jns
jne
sub
and
add
and
fldenv
and
sbb
xchg
mov
mov
loopne
add
mov
stos
in
insl
pop
add
dec
fisubrl
sti
loope
fisubl
xchg
fxch
addr16
mov
aas
fcom
xlat
imul
ds
bound
sbb
sti
mov
outsl
sbb
inc
mov
jge
sbb
mov
adc
dec
out
dec
sbb
adc
sarl
test
jp
imul
mull
cmp
push
rcrl
test
jb
sub
mov
cld
sub
lahf
cmpsb
push
movsb
xchg
adc
add
push
mov
lcall
sbb
pop
loope
loopne
and
mov
arpl
and
xor
pusha
in
arpl
xchg
cld
adc
cmp
inc
lods
testb
push
mov
xor
xchg
inc
push
push
push
dec
cmp
and
cmc
popa
push
andnps
lds
out
cmpsl
insl
sbb
add
mov
int
push
movsb
sbb
mov
test
push
add
adc
or
int3
enter
adc
adc
je
inc
movsl
cmp
cwtl
xchg
out
push
pushf
mov
fcoms
xor
repnz
stc
xchg
ret
sub
and
sbb
loope
enter
lret
leave
shlb
dec
faddp
and
mov
sub
xchg
mov
add
push
scas
mov
and
dec
ljmp
mov
dec
mov
push
sub
mov
shlb
jne
cmp
imul
clc
push
xlat
rcll
mov
ss
jns
mov
cmp
mov
sbb
push
das
inc
xchg
jmp
arpl
inc
mov
lahf
pop
push
jne
mov
xchg
shll
jp
shlb
in
stc
jg
fwait
lds
sbb
in
in
in
inc
ljmp
aaa
mov
sub
arpl
fstpt
roll
stos
adc
cmpb
add
add
je
jne
pop
outsl
out
aaa
jae
inc
cmp
xchg
test
add
add
mov
add
pop
adc
mov
jae
scas
lcall
in
mov
adc
into
push
outsl
cmpl
es
xchg
add
out
imul
xor
dec
lds
push
cmp
decb
xchg
sbbb
sahf
bound
decl
popa
or
stos
xchg
inc
mov
mov
ja
xor
int3
and
hlt
imul
mov
sub
inc
inc
add
pop
push
out
mov
pop
loope
pop
sahf
ret
jecxz
xchg
into
adc
jl
xchg
lods
bound
sub
je
aas
mov
ud0
fistps
in
stos
imul
iret
pop
sbbl
fwait
sub
pop
mov
es
adc
gs
push
ja
xchg
popf
shl
pop
cltd
out
lds
pop
mov
out
mov
add
js
cmp
nop
sbb
stos
xchg
pop
sub
xchg
pop
lcall
testl
and
inc
sub
push
out
scas
out
or
aad
cli
shll
loope
js
mov
outsb
mov
xchg
xchg
movsb
mov
inc
rorl
push
les
lock
add
add
pop
sub
sbb
mov
mov
out
inc
pop
ljmp
cmp
sub
js
sub
mov
lahf
int3
outsb
repnz
cmpxchg
fdivrs
mov
xchg
std
cmp
mov
dec
xchg
sub
in
in
stos
jo
mov
pop
xchg
outsb
xchg
ja
push
adc
imul
out
out
or
arpl
xor
loopne
int3
notl
int3
rorb
negl
call
jne
int
dec
int
add
mov
jae
inc
dec
sub
in
outsl
pusha
das
je
adc
or
divb
lods
lea
data16
addr16
or
dec
int
jnp
fnstcw
nop
in
ss
mov
neg
push
inc
scas
lds
ret
mov
pop
dec
dec
push
pop
xchg
mov
in
jo
arpl
add
inc
and
jb
repz
scas
movsl
mov
imul
in
or
idivl
cmp
pop
xor
xchg
adc
inc
out
mov
scas
cmpsl
lods
xlat
test
out
mov
adc
add
fnstsw
lahf
and
hlt
jmp
and
nop
jns
sarb
sbb
mov
ds
push
xchg
leave
pop
mov
shrb
cltd
push
std
mov
clc
adcb
or
xor
push
mov
inc
inc
or
clc
rorb
add
xchg
outsb
sub
dec
adc
sbb
test
mov
incb
pop
mov
xchg
mov
jne
pop
in
adc
lahf
jmp
std
xor
push
lock
stc
xor
in
iret
movsl
fsubrl
pop
sarl
rclb
inc
fs
cmp
jl
mov
jmp
std
daa
cmp
adc
cmp
dec
xchg
add
aas
mov
xchg
inc
xchg
push
je
push
bound
out
stos
mov
insl
lret
jb
fistpll
jle
ljmp
add
and
aam
sbb
scas
mov
dec
ret
mov
inc
push
aaa
jb
push
shrb
and
sahf
mov
ss
push
int
rclb
mov
les
mov
lea
or
adc
jg
sbb
and
inc
sbb
fidivrl
and
popf
rcll
in
xchg
pop
pop
pusha
pop
dec
adc
dec
inc
fsubp
aad
xorl
mov
jae
mov
call
pop
xchg
into
std
aas
aaa
mov
mov
and
jl
aad
outsb
imul
push
das
sbb
test
jecxz
dec
ds
inc
adc
cs
inc
gs
push
test
lahf
fisubrs
mov
adc
mov
in
in
loope
jno
imul
aad
sti
lahf
mov
je
cmp
adc
pusha
add
adc
inc
test
xor
cmpsb
leave
pop
jns
fimuls
or
jo
pop
repnz
add
dec
int3
inc
or
jae
jg
xor
rolb
inc
mov
cmc
push
lcall
jnp
jp
and
add
add
add
ss
std
iret
cmp
cld
xor
or
pushf
sub
add
add
add
scas
xchg
pop
jg
or
popf
roll
pop
sub
ret
fwait
xchg
je
aam
lock
insl
and
lret
dec
into
add
add
xchg
dec
fists
jle
or
loopne
js
dec
pop
jae
cs
pop
sbb
and
icebp
fsts
into
cmc
test
push
test
test
mov
shrl
pop
mov
aad
fdivl
iret
inc
mov
mov
mov
jne
push
dec
in
adc
xor
test
dec
add
out
pop
jbe
out
sbb
incb
icebp
push
outsb
jae
jno
fadd
lret
into
dec
add
inc
fs
aam
movsb
adc
add
out
or
js
mov
out
push
jns
aas
int3
cmpsl
negl
sbb
mov
jns
loopne
movl
xor
jno
popa
cli
jne
rcrb
js
inc
cli
inc
fdivrs
jo
cmc
sbb
xchg
xlat
sbb
jo
stos
repz
pop
mov
or
mov
push
shlb
popf
mov
pop
xor
mov
mov
arpl
add
jp
or
sub
pop
imul
inc
popf
nop
jae
jmp
sbb
cmpsb
and
leave
jnp
adc
mov
loope
sub
mov
push
mov
into
lock
cmc
xchg
mov
jle
mov
jo
filds
call
ret
cmp
ss
jmp
mov
pop
push
cmp
pop
pop
pop
ds
cmc
and
stc
pop
jmp
or
pop
adc
js
pop
scas
not
clc
iret
das
lahf
insl
aad
pop
repz
sti
cmp
daa
mov
jbe
push
sub
in
imul
call
jg
mov
sub
cmp
mov
sbb
dec
fs
pop
out
mov
push
pop
jl
mov
test
lods
rcll
mov
jecxz
test
in
lea
dec
stos
scas
pop
outsl
push
rcrb
push
and
es
fs
adc
repnz
xchg
insb
pop
sbb
out
cli
jb
outsl
cld
jne
sub
mov
cmp
and
popf
mov
jmp
mov
mov
pop
ja
sbb
test
push
mov
dec
fstpt
adc
push
or
shrl
adc
into
jle
xchg
imul
add
rcll
xor
sbb
sbb
push
les
mov
add
sbb
xchg
or
lcall
test
jmp
ljmp
in
mov
adc
mov
sub
ja
repnz
repz
fwait
int
xchg
repnz
mov
dec
inc
push
arpl
jecxz
push
sub
data16
jl
dec
pop
cmp
push
fsubs
push
fildll
test
mov
icebp
lahf
xor
push
out
pop
pop
dec
xchg
div
cmp
or
add
leave
into
xor
inc
clc
nop
ficoms
incl
mov
pop
popf
clc
sbb
or
jl
mov
push
js
leave
jle
sbb
lcall
xchg
cmp
pop
outsb
shl
jo
test
xchg
lds
popf
fildll
sub
daa
sbb
jnp
sbb
sub
push
shll
cli
xchg
pop
repnz
mov
data16
pop
daa
xchg
imul
inc
popl
mov
mov
add
sub
out
sub
inc
or
mov
mov
imul
xor
jg
test
ss
xchg
jnp
shlb
lea
test
movsl
outsb
bound
adc
in
and
mov
mov
or
jg
fisttpll
push
ss
adc
sbb
lret
and
and
jb
cwtl
xchg
icebp
leave
inc
push
imul
stos
ss
adc
mov
adc
mov
lods
push
add
mov
enter
cld
xchg
rcrb
int
or
push
jnp
sub
xchg
push
out
lods
in
sbb
pop
cmpsl
in
mov
lcall
push
scas
lea
int3
movsb
add
fidivrs
add
mov
or
mov
xor
pop
sub
mov
jecxz
lcall
push
sahf
sbb
leave
mov
sub
xor
jp
leave
ss
cmp
roll
add
add
cld
es
mov
jmp
fdivrp
lret
insb
rclb
sub
add
inc
imul
in
cmpsb
sub
lret
fisubrl
imul
lret
testb
xchg
rcrl
xchg
mov
pop
mov
dec
mov
add
inc
and
imul
cmpsl
inc
sbb
xor
xor
loop
push
clc
scas
fwait
cmp
xchg
dec
dec
xor
mov
les
cmp
push
xchg
out
stc
clc
and
cmp
pop
cmp
cs
test
les
movsl
nop
push
pop
mov
cltd
xor
lret
cmc
std
fistl
jno
pop
in
pop
xlat
sbb
mov
dec
push
push
mov
scas
ds
lea
gs
mov
fisttps
scas
fwait
mov
cld
jb
or
pop
jb
pop
subl
loope
pop
sti
enter
es
xchg
jno
es
ja
lret
sti
fwait
add
les
lods
fbld
test
dec
loopne
rcl
pop
xchg
xlat
and
aam
mov
pop
jo
scas
mov
mov
movsl
mov
stos
out
aas
cmp
and
int
cmp
inc
scas
pop
and
nop
idivb
or
mov
sti
hlt
mov
dec
and
add
xchg
inc
movsb
imul
rorb
mov
xchg
xchg
in
scas
xchg
fdivs
or
xor
fimull
cs
sbb
inc
fs
cltd
cmp
mov
mov
mov
mov
inc
je
or
mov
insb
xchg
daa
cmp
in
stc
mov
xchg
mov
mov
fsubs
sbb
sbb
mov
lods
repnz
mov
sbb
sub
stc
lret
push
movb
add
xchg
ret
xor
jmp
cmp
jo
jnp
cmp
cmpsb
sbb
xchg
shrl
scas
xor
cltd
mov
push
xchg
dec
push
inc
incb
sub
lahf
and
sbb
xor
imul
std
repz
mov
fdiv
and
jp
inc
and
adc
ljmp
adc
fstpt
inc
shlb
cmp
ret
and
test
sub
push
js
adc
scas
pop
pusha
shll
mov
push
add
pop
mov
pusha
into
in
pusha
jmp
cmp
aam
in
inc
adc
push
testb
adc
loope
out
jo
mov
cmpsb
popf
lahf
clc
dec
je
cmp
jg
popf
xor
pusha
les
cwtl
and
aad
gs
daa
mov
sub
dec
scas
jge
mov
add
ds
enter
ljmp
lock
push
icebp
ret
inc
jb
popf
clc
ret
shrb
addr16
cmp
mov
pop
mov
jg
popf
cmp
dec
data16
dec
pop
add
mov
hlt
lods
sbb
aam
inc
dec
pop
aas
jo
aad
int
ffreep
and
stos
mov
add
cmc
jl
inc
jae
sub
rcll
and
shl
lods
pop
movsl
arpl
test
cmp
dec
cs
cmpsb
push
lods
cmp
cmp
inc
rcrb
stos
scas
imul
fisubrs
mov
gs
mov
movsb
fwait
popf
outsb
push
pop
push
cmc
pop
aam
arpl
fistpl
pop
frstor
push
mov
jnp
in
add
mov
out
add
cmp
xlat
inc
mov
xchg
pop
popa
mov
pop
adc
pop
xchg
or
arpl
push
nop
pop
inc
push
iret
inc
roll
sbb
test
pop
loopne
std
enter
push
addr16
aad
addr16
and
mov
imul
xor
hlt
inc
movsl
mov
sub
inc
imul
cmp
and
add
hlt
sti
pop
inc
aaa
fldt
mov
adc
xorb
pop
fsts
xlat
inc
addr16
sbb
adc
fidivl
inc
loop
jp
aam
test
cmpsb
cld
and
push
jmp
pop
pop
adc
push
add
aas
jge
xlat
ss
add
shlb
mov
xchg
jo
fistpll
sbb
arpl
or
mov
enter
jno
lret
jecxz
xorps
addr16
push
adc
mov
mov
clc
sahf
out
mov
and
rcr
popf
push
mov
push
lret
adc
add
mov
in
mov
add
aaa
sti
addr16
out
fidivs
jns
bound
repz
add
scas
ss
sarb
nop
leave
jns
xchg
or
mov
js
loopne
mov
test
mov
or
xchg
addr16
sub
mov
imul
xchg
ret
subl
pop
adc
or
mov
cs
cli
dec
lods
and
cltd
arpl
cmc
sbb
xchg
push
adc
out
adc
cltd
inc
dec
push
sub
lock
shll
popa
ret
mov
or
dec
mov
ja
push
shr
loopne
loop
pop
dec
idivb
out
cs
test
je
mov
push
cs
sub
jp
sub
cmpsb
sub
xchg
int
les
and
pop
aaa
stos
and
pop
sbb
cltd
sub
add
jmp
adc
test
xor
mov
jmp
scas
mov
mov
ljmp
jp
adc
add
sub
subb
or
xor
dec
adc
or
cmpsb
mov
ds
lea
cmp
cmpxchg
call
js
jbe
jecxz
rcrb
loopne
fidivrs
add
jno
sub
lock
repz
inc
test
das
fwait
pop
std
sbb
fs
loopne
sub
cmp
pop
ds
scas
mov
mov
mov
jns
jl
aad
cli
iret
es
fisubs
pop
fsubl
mov
dec
jp
or
dec
cwtl
jbe
jbe
xchg
inc
imul
dec
mov
pop
add
rorb
jne
std
xlat
cmp
inc
jmp
popl
insb
imul
ficomps
lcall
jb
pop
adc
inc
jne
push
fsts
lcall
xchg
loope
daa
push
lea
mull
vpshld
mov
cmp
and
in
mov
jge
iret
flds
shlb
ljmp
adc
testb
test
sbb
fisttps
lret
das
inc
mov
call
dec
sbb
mov
fcomps
scas
mov
adc
mov
lds
mov
rol
cli
enter
movsl
sub
xchg
mov
or
xchg
ljmp
xor
shlb
jo
loop
insb
push
pushf
in
iret
push
dec
test
adc
jp
out
or
cmpl
cmpsb
inc
sbb
call
es
xchg
sub
jg
pushf
das
sbb
movsb
xor
mov
xchg
loope
mov
jecxz
mov
jp
xchg
lock
test
insl
xchg
push
lahf
push
dec
lret
shlb
jbe
mov
ss
pop
scas
lcall
adc
lds
test
shl
mov
sub
lods
cmpsb
lods
fbld
repz
xchg
call
out
push
popa
es
negb
inc
cli
mov
ljmp
pushf
jle
sbb
es
leave
cwtl
push
sbb
dec
mov
pop
movsb
idiv
pusha
dec
std
js
pop
ljmp
in
push
mov
pop
mov
lret
sub
pop
xchg
and
jne
dec
mov
faddl
adcb
mov
cmpsb
cmp
cmp
xchg
jbe
mov
mov
dec
aam
sbb
mov
xlat
movsl
xchg
rorb
dec
inc
ds
or
call
test
stos
sarb
int
std
dec
cmp
pop
pop
lods
nop
leave
mov
sbb
stos
inc
ror
es
sahf
mov
outsl
or
cmp
xchg
in
into
pop
cmp
cmpsl
lret
pop
jno
push
lods
sbb
imul
out
clc
mov
add
mov
sbb
and
jo
fiadds
outsl
popa
test
jns
gs
mov
xor
in
push
cmp
leave
and
cld
jns
imul
jns
mov
loopne
cmp
pop
mov
xchg
lret
pop
xor
pop
jae
subb
mov
mov
sbb
push
loopne
mov
push
out
rcll
and
push
jb
dec
or
mov
cmp
sub
add
pop
add
mov
hlt
jb
pop
lods
add
mov
mov
fcmovnu
out
add
jp
add
cmp
rolb
les
fs
imul
out
sbb
repz
mov
add
repz
add
loopne
inc
mov
add
mov
rcll
imul
in
cmpsb
or
cmp
fimull
es
ret
jmp
pop
in
adcb
loopne
outsl
mov
js
dec
bound
pop
in
push
jno
ss
std
subb
clc
int3
in
pop
mov
and
pop
out
fsubl
lcall
lcall
mov
pop
mov
pop
cmp
test
int3
pop
ret
jl
cmp
lcall
loope
mov
mov
aam
or
inc
or
pop
cmpsb
cltd
fs
xor
inc
les
sbb
and
sub
insb
and
sarl
and
sub
fwait
ja
mov
sub
mov
out
mov
xlat
cmpsl
int3
dec
mov
mov
imul
mov
and
sti
test
mov
je
push
push
clc
pop
pop
test
jb
inc
lret
icebp
fwait
sbb
rol
adc
dec
push
loop
loope
popf
inc
xchg
int
jae
xchg
ficomps
fwait
in
mov
jne
sub
inc
popf
push
out
push
lret
inc
lods
daa
sti
mov
or
aas
adc
rolb
test
add
les
mov
mov
adc
fisubrs
push
mov
jle
mov
push
adc
and
fnstsw
pusha
and
aas
ja
loopne
push
sub
fnstsw
and
inc
shll
outsb
xor
lock
outsb
scas
cmp
gs
sub
test
push
mov
xor
dec
je
adc
xor
shll
aam
js
adc
pop
add
or
shlb
xor
xchg
in
pop
pop
pop
mov
or
mov
xchg
mov
movsl
je
je
pop
mov
aam
xor
jns
shlb
out
or
sarb
in
push
repnz
scas
ret
or
in
dec
mov
int
cmp
nop
int3
sub
dec
sub
rcrb
lret
pop
and
clc
fsubrl
add
xchg
or
cli
pop
ja
imul
dec
fdivs
cmp
jg
push
dec
ret
scas
xor
adc
ret
mov
sbb
shlb
xchg
push
inc
icebp
insb
gs
fsubr
loopne
jbe
lret
mov
mov
sar
jae
mov
push
testb
dec
neg
das
js
and
xorb
mov
mov
cs
imul
push
inc
push
das
pop
andb
push
adc
insl
mov
in
lret
pop
into
jge
xchg
iret
in
andb
imul
enter
pop
pop
sub
pop
lcall
or
std
ret
mov
out
adc
add
lods
mov
push
jnp
out
xchg
mov
mov
mov
and
cmpsl
iret
scas
outsl
mov
cmp
scas
jg
dec
sbb
dec
arpl
mov
add
jb
out
fiaddl
pushw
test
movsb
in
insb
lods
mov
dec
out
mov
filds
push
xchg
mov
fsubr
repnz
push
mov
jno
sbb
outsl
mov
sub
lret
in
and
cli
xor
mov
ret
xchg
std
inc
or
inc
pusha
les
inc
xchg
int
xchg
jo
mov
jmp
loopne
dec
insb
rolb
mov
std
jmp
dec
orb
lcall
rcll
xchg
das
pop
popf
movsl
xchg
xchg
lea
addl
sbb
cmp
int3
cmp
jp
lcall
xchg
cmp
negl
fwait
mov
xchg
xor
add
sti
stos
lcall
jbe
or
fcom
loopne
pop
imul
inc
xor
es
dec
lock
xor
in
xor
das
dec
inc
int
mov
movsl
js
repnz
mov
dec
dec
out
ljmp
xchg
fcmovnb
xor
ret
or
aad
or
test
rcrb
sub
mov
scas
scas
std
push
aad
daa
pop
cmp
mov
fists
add
or
aaa
loope
cmc
pop
add
pop
and
out
out
xchg
xchg
xorb
andb
dec
decl
sbb
pop
xor
xor
pop
jae
fsts
int3
cmc
jp
aam
mov
mov
xchg
add
mov
dec
sbb
add
add
add
mov
xchg
inc
inc
lret
sbb
jne
test
and
sbb
pop
dec
lea
inc
push
movsb
sbb
xor
lret
inc
popf
push
popf
mov
jecxz
cs
push
js
xchg
insl
pop
dec
push
mov
jbe
mov
or
lcall
mov
xor
sbb
mov
out
mov
enter
aad
push
dec
in
jno
test
add
dec
fildl
sbb
xlat
lret
or
xchg
dec
divl
mov
mov
sarb
cmp
in
inc
imul
add
jb
sub
in
sti
push
add
subb
shll
data16
enter
mov
xorl
mulb
push
push
andb
iret
push
inc
adc
mov
mov
lea
mov
sbb
mov
push
mov
pop
subl
lahf
jge
cli
mov
jmp
jecxz
jge
mov
mov
jg
insb
push
push
jbe
xchg
jl
mov
inc
ficoml
iret
pusha
xchg
sub
xor
inc
mov
leave
jmp
inc
jbe
shr
movsb
xchg
lds
int
ja
lods
insl
and
dec
shr
and
lret
cs
xchg
sub
dec
pop
enter
stos
out
pop
test
sub
ret
stos
sbb
mov
jg
or
nop
sti
insb
arpl
sbbb
cmp
hlt
sbbl
xor
sbb
lods
fsubrs
push
fadds
add
jnp
mov
sub
adc
inc
jnp
dec
sub
adc
scas
jp
ret
pop
cs
sub
sahf
lahf
stos
les
cmpsb
test
pop
inc
in
inc
adcl
mov
fimull
scas
arpl
rclb
pop
cld
or
jg
adc
xchg
adc
daa
ret
das
cmc
cmpsb
push
test
outsl
sbbl
popf
cmp
imul
shll
and
data16
imul
in
sub
cltd
sub
cmp
mov
push
xor
mov
push
push
jnp
adc
jecxz
mov
xor
popa
jne
faddl
pop
pop
xchg
ret
mov
mov
and
lcall
xor
push
pop
ja
lahf
sub
nop
aas
mov
jmp
shlb
lods
loop
loopne
xchg
out
lods
std
aaa
cltd
mov
shrb
lret
mov
sbb
dec
test
cmp
lods
addb
lods
adc
adcl
es
mov
ret
mov
adc
pushf
movsl
cli
push
ret
bswap
jle
lods
std
scas
xchg
insl
inc
mov
popa
shl
in
loop
dec
inc
and
push
inc
popa
mov
push
inc
pushf
dec
or
imul
adc
ja
stc
repz
jmp
and
paddb
adc
and
enter
mov
rcll
mov
adc
jb
sub
pop
mov
rcll
cmc
dec
and
jg
fisubl
pop
loope
mov
and
xchg
mov
add
rclb
cmpsl
mov
cmp
cmp
adc
cmp
xor
lods
or
xorl
or
dec
in
sbb
push
or
pop
pop
or
mov
cltd
mov
inc
inc
or
cmp
lcall
ds
sbb
imul
cmc
mov
mov
iret
jg
or
add
xchg
push
push
or
pop
and
pushf
push
inc
je
clc
pushf
and
addr16
test
xor
pusha
mov
leave
les
jae
popf
bound
sbb
mov
lock
jo
inc
dec
inc
pop
sarl
pop
rcrb
fisubrs
rcll
pushf
dec
pop
stos
add
stc
shrb
int
add
push
scas
inc
shr
inc
fldenv
mov
loopne
add
sbb
cmpsb
jp
subl
and
mov
mov
popf
outsb
or
inc
ljmp
aas
sbb
push
leave
pop
mov
jmp
scas
in
mov
jb
and
lret
adc
shl
sbb
xlat
jp
xor
lret
pop
xor
movsl
cmp
add
add
in
pop
dec
negl
mov
and
dec
cld
pop
inc
add
repz
add
adc
cltd
int3
inc
scas
lret
sbb
data16
popa
dec
jecxz
adc
sub
test
movsb
add
xchg
cli
and
lock
pop
leave
cmc
mov
mov
and
adc
inc
jns
dec
jo
mov
fbstp
xlat
xchg
std
into
mov
inc
mov
mov
dec
and
and
pop
call
jo
fisubrs
movsl
sbb
mov
rol
sbb
adc
stos
push
sbb
popa
dec
lock
and
cmpsb
stos
jge
xor
scas
sbb
mov
decb
rcl
lret
mov
and
sub
loope
jge
lods
xchg
stos
pop
sahf
aad
arpl
cmp
dec
insb
mov
push
jge
xchg
xlat
push
lods
out
mov
inc
jp
xor
sub
add
mov
push
pop
movsl
orl
push
inc
loopne
mov
cmp
out
push
es
movsl
fwait
dec
nop
stc
fadd
and
cmpsl
jae
push
jo
cld
pop
mov
subl
imul
pop
sbb
subl
es
add
xor
nop
lret
stos
mov
rorb
icebp
das
inc
mov
loop
push
ret
xchg
enter
mov
cmp
dec
les
shrl
int3
cwtl
ficomps
icebp
mov
cmc
inc
repz
arpl
inc
mov
cmp
adc
jecxz
inc
test
sbb
daa
xor
pop
and
movsl
cltd
jb
insl
lds
mov
insl
add
pop
adc
ds
repnz
jae
test
cwtl
mov
dec
subl
je
lods
mov
push
mov
adc
jns
xchg
stos
cmc
lods
shrl
leave
sbb
xchg
outsb
sbb
sarl
stc
cmc
push
stos
testl
dec
pop
sbb
sbb
dec
add
inc
gs
xchg
clc
mov
incb
ret
aam
sahf
mov
mov
inc
sub
fisttpll
movsl
xchg
int
int3
out
mov
scas
cmp
cld
add
dec
push
mov
sub
jg
in
pop
dec
aaa
xchg
cmp
adc
nop
cwtl
add
jnp
mov
dec
lods
mov
stos
jmp
in
loope
cmp
xchg
js
imul
inc
insb
mov
cmp
or
mov
jbe
cli
outsl
insl
push
and
lret
xchg
pop
cmc
add
sarl
in
push
cmpsl
jne
and
push
xor
adc
nop
add
cmp
inc
shrb
xor
mov
sub
negl
sti
adc
jns
sbb
mov
pop
cmc
test
push
data16
fsubr
jns
jge
sub
push
and
mov
push
loope
xor
cmp
mov
pop
lea
in
fadds
and
and
jbe
push
xor
fwait
dec
insb
lret
xor
insb
push
mov
test
mov
lcall
ret
sub
sub
inc
mov
out
pop
xchg
xlat
loopne
jbe
dec
dec
imul
stos
pop
add
sbb
ja
jp
fprem
inc
sahf
and
sbb
lods
jecxz
lahf
ret
test
and
pop
enter
jnp
cmpsb
cli
mov
inc
lods
mov
das
inc
mov
pop
movb
loope
repnz
jbe
jns
and
mov
inc
or
push
fs
jb
pop
shrl
push
cld
jbe
cmp
pop
xchg
mov
rorl
test
and
mov
or
mov
into
fcoms
xor
cli
into
outsb
sbb
xor
int
ljmp
in
xor
test
pusha
les
fs
pop
cld
xchg
insl
orl
call
xor
cmp
testl
dec
pop
ret
out
cmp
jo
mov
dec
inc
cmpsb
das
sub
fidivrl
scas
ret
push
add
xor
adcb
pop
pop
mov
fidivs
mov
mov
xorl
mov
arpl
gs
sbb
movsb
dec
or
cmp
in
sub
data16
setg
in
insb
dec
sar
imul
mov
jge
scas
pop
lods
aam
mov
mov
outsl
jne
mov
sub
jb
cwtd
cs
ja
aam
outsb
mov
ja
test
fmulp
add
add
add
ds
fdivp
cld
ds
daa
cmp
jmp
push
dec
inc
add
repz
add
xor
mov
jne
or
push
xchg
inc
jmp
xor
fadd
aas
adc
sbb
pop
mov
test
ret
ror
mov
jg
xchg
and
in
outsl
andb
mov
pop
sub
sbb
xor
lock
adc
inc
shlb
popa
mov
push
push
dec
adc
and
stos
sbb
fs
cmpsb
inc
lea
ja
aam
fisubrl
aad
test
iret
pop
out
xor
jns
rcrl
shlb
pop
sbb
jnp
je
mov
aam
add
test
xchg
out
loope
ss
cli
lea
mov
cld
cwtl
xlat
dec
int
ficoms
jne
out
push
cmp
xchg
loope
jle
xchg
add
stos
decl
sahf
mov
sbb
mov
xchg
ljmp
mov
xchg
push
daa
not
lods
lahf
mov
imul
pop
xor
leave
scas
leave
cmpsl
adc
pop
enter
mov
push
mov
jno
lcall
rcr
in
xchg
mov
adc
adc
or
inc
icebp
mov
addr16
cwtl
jbe
sub
sub
jne
js
inc
lock
int
xor
and
pop
imul
sbb
inc
fdivrl
inc
insl
add
jle
addl
mov
jg
lea
pop
addr16
add
push
adc
fistpl
mov
jle
outsl
sbb
loopne
mov
sbb
adc
hlt
adc
jne
sub
mov
sbb
pop
fcmovu
push
xchg
fisubl
cmp
jns
xchg
es
cmpsl
fsub
leave
int
jnp
lods
lea
mov
sti
fsub
and
push
ret
inc
mov
sahf
inc
mov
cmp
ds
pop
aaa
push
arpl
stos
popa
lock
mov
mov
int3
xchg
fbstp
into
adc
pop
data16
dec
nop
sub
mov
cmc
push
lock
arpl
mov
mov
nop
pop
adc
xor
push
adc
mov
adc
and
stos
divl
dec
or
inc
sti
daa
enter
jbe
enter
fldcw
cli
sahf
ja
cmp
fisubs
iret
sbb
cvtdq2ps
pop
out
cmp
enter
insb
and
pop
fwait
mov
and
icebp
inc
cmp
sbbb
and
leave
movsl
stc
inc
xor
fcoms
mov
ret
add
enter
mov
repz
lock
cmc
jmp
iret
in
xchg
xor
and
inc
fists
hlt
sub
pop
mov
enter
lock
jg
pop
push
dec
adc
xchg
inc
les
push
xchg
testl
enter
insl
xchg
cltd
sub
fs
pop
or
sbb
ss
jo
outsb
xor
jmp
xor
jo
rcl
mov
and
lret
lds
jle
idiv
or
aaa
mov
add
test
or
add
xor
mov
shlb
dec
xchg
pop
leave
cli
inc
jne
out
xor
push
popf
lods
sbb
repz
aam
incl
sub
aas
mov
sub
aas
or
call
out
sarl
loop
push
mov
insl
pusha
lret
repnz
jo
mov
jnp
mov
push
test
add
xchg
push
sbb
cmp
std
sbb
and
sahf
arpl
gs
out
push
lds
aaa
out
rorb
insl
pop
fs
arpl
popa
cmp
and
stc
repz
stc
jle
push
add
or
out
xor
mov
lods
ss
push
inc
jp
out
loopne
cmp
push
dec
mov
daa
insb
sti
addr16
xchg
dec
adc
dec
repnz
cmp
imull
xchg
jb
push
lods
aad
push
add
aaa
bsr
mov
cwtl
xchg
leave
xor
notb
mov
xor
mov
cld
mov
dec
mov
dec
icebp
sub
cld
repnz
adc
jo
aam
decl
and
mov
dec
adc
pop
add
lcall
bound
popf
adc
xchg
dec
mov
stc
lods
loopne
es
jns
mov
mov
sub
inc
es
sbb
add
add
jnp
xor
jg
sbbl
inc
dec
add
repz
add
xor
icebp
mov
notl
mov
push
loop
arpl
and
orl
or
cmpsl
pop
in
jne
push
cmpsb
repnz
mov
pop
loop
loope
fs
sub
addb
mov
cmpsl
mov
jne
xor
sub
add
inc
sbbb
lea
iret
and
leave
dec
into
mov
sahf
dec
mov
jl
mov
or
jg
ljmp
or
aas
cmp
xchg
pop
clc
and
push
jno
jnp
xchg
jae
or
rorl
xchg
repz
mov
jmp
fdivs
das
insb
inc
sbb
adc
mov
mov
xor
jae
push
sbb
test
jmp
push
les
out
adc
jle
jp
xchg
mov
js
fwait
mov
aaa
daa
fcoms
mov
adc
cmp
jmp
pop
rolb
add
mov
dec
test
push
imull
and
jbe
fildll
adc
sahf
cmp
out
xchg
pop
inc
sub
dec
negb
arpl
adcb
inc
lret
push
add
mov
fistps
loop
or
xor
mov
xchg
aam
xchg
sub
push
jae
jecxz,pt
outsb
push
cmpsl
in
hlt
pop
or
test
ss
clc
jg
push
sub
cmc
pop
jg
inc
dec
push
ds
push
les
inc
ljmp
adc
in
xchg
pop
aaa
loopne
sub
shl
push
enter
int3
cmc
push
xor
sub
ja
xchg
rcl
into
mov
out
add
lahf
sbb
test
lea
ljmp
or
jp
in
xor
lahf
addl
cmpsl
inc
xor
adc
inc
stos
call
jbe
adc
addr16
mov
lods
pusha
jg
and
outsl
aam
pop
cmp
adc
and
or
je
les
sbb
xor
fwait
test
mov
js
dec
mov
push
out
cmp
adc
lret
lcall
aaa
ret
fwait
add
mov
or
repnz
stc
dec
dec
sbb
enter
cmc
push
enter
and
mov
in
mov
and
dec
adc
dec
jbe
and
pop
inc
sub
fucom
mov
icebp
loopne
xor
jb
pop
mov
loope
sub
pushf
pop
add
sbb
push
lret
cmp
out
jmp
decb
mov
lret
jl
dec
jmp
outsb
cmp
jecxz
es
cmc
std
out
mov
jl
pop
js
or
pop
or
sbb
ficoml
or
lret
movsl
in
mov
insl
test
mov
xchg
sbb
lds
inc
add
xchg
mov
mov
mov
adc
in
xchg
dec
loope
jecxz
cltd
pop
ss
rcl
scas
jo
add
mov
leave
adcb
mov
cmpl
in
clc
fisttps
add
movsl
or
push
ret
leave
xchg
cmpsl
cmp
dec
pop
cwtl
mov
sbb
cltd
or
jle
lds
adc
dec
mov
jg
and
xchg
out
into
inc
sub
insl
add
sub
cs
add
mov
bound
mov
pop
push
xchg
cmpl
enter
popa
sti
mov
outsl
xchg
inc
jl
and
pop
sbb
mov
and
sbb
in
push
xchg
dec
pop
shrl
mov
push
test
push
andb
popa
arpl
out
adc
xor
lcall
push
push
ljmp
inc
aam
ljmp
dec
push
sub
jg
pop
pop
add
push
insb
test
lods
lahf
pop
dec
xchg
cmp
std
fidivrl
jne
pop
int
idivb
aas
shl
mov
fsubrs
and
dec
es
imul
mov
mov
popf
das
or
add
hlt
out
lcall
xor
and
mov
jecxz
shr
sub
xor
add
add
or
xchg
jmp
adc
pop
aam
sub
add
add
cmp
scas
inc
inc
sub
fnstenv
sbb
jne
inc
stos
out
push
cmp
sbb
into
mov
mov
jle
jl
adc
in
mov
cli
or
mov
jne
repz
rep
fwait
lret
xor
in
cs
cld
cltd
sub
jg
test
mov
dec
fisubs
imul
pop
jge
inc
pop
xor
xchg
popf
hlt
and
pop
dec
arpl
push
cmp
insl
inc
push
and
sbb
mov
pop
repnz
or
nop
push
or
call
mov
inc
cmp
cmp
jg
cmp
lods
add
test
or
pop
xchg
cmc
jnp
mov
orb
cmp
sub
pop
xor
push
adc
call
mov
push
movsl
inc
and
das
divb
push
into
divb
cmp
stc
cmpsl
repnz
je
mov
mov
repz
or
jne
arpl
ret
ds
sbb
mov
das
out
fs
adc
push
mov
fidivrs
adc
push
imul
out
add
fdivs
push
mov
inc
neg
xor
arpl
push
das
xchg
jns
lods
mov
lock
jmp
insb
das
jbe
mov
outsb
mov
jae
mov
nop
pop
adc
mov
fs
in
dec
push
dec
jbe
dec
into
notl
push
clc
cmp
icebp
bound
repz
daa
outsb
mov
jl
push
sub
nop
lds
daa
cltd
dec
pop
cwtl
outsl
mov
sar
jnp
push
cli
push
movsb
jecxz
mov
icebp
xor
outsb
inc
arpl
fnstcw
or
stos
popa
outsb
xor
pop
mov
xchg
xchg
sub
stos
or
popf
mov
mov
dec
sub
push
outsb
xchg
aad
sbb
sbb
sbb
push
repz
in
data16
imul
gs
push
xor
jg
pushf
adc
repz
sarl
and
sbb
je
sarb
pop
les
and
mov
sbb
pop
sub
add
sub
adc
xchg
shl
xor
repz
jbe
push
xor
mov
xchg
inc
into
cltd
and
loope
push
push
std
sahf
std
cltd
flds
test
frstor
xor
aam
aad
test
mov
cmp
push
mov
outsb
shlb
sbb
test
mov
out
xchg
cmc
fld
pop
pop
out
data16
rclb
add
int3
push
xor
xchg
jae
jbe
ljmp
ret
push
gs
or
lcall
in
idiv
std
das
fst
xorb
stos
sti
adc
mov
inc
fcompl
lods
inc
mov
sarl
cld
fcomip
pushf
loopne
mov
xchg
mov
nop
cwtl
shrb
dec
out
inc
mov
mov
and
int3
sub
jae
mov
fisttpll
int3
call
jp
xchg
ret
xchg
push
cmovp
mov
xor
loope
mov
sub
xchg
imul
sahf
lea
mov
je
sub
scas
daa
mov
inc
loop
fdivr
mov
rcrb
inc
outsl
sbb
dec
inc
push
cmpl
jo
or
xchg
jb
jmp
mov
xlat
in
or
stos
fildl
outsl
pop
js
int3
fcoms
sub
std
mov
xor
jecxz
xor
cmp
mov
enter
hlt
and
or
aam
adc
jnp
mov
sahf
and
pop
jmp
push
add
pop
push
xchg
jb
roll
jnp
sarb
icebp
lcall
jo
and
push
mov
push
jge
loop
fldenv
out
movsl
mov
in
sub
mov
xchg
dec
cmp
pusha
xchg
mov
out
inc
jle
add
rclb
imulb
or
jmp
ret
ret
xor
push
fldl
jo
mov
inc
jecxz
sub
mov
inc
notb
xorl
jle
les
outsl
xor
nop
pop
add
adc
xchg
enter
dec
xchg
negb
cli
aad
or
int3
add
aad
push
jbe
inc
rorb
test
out
xchg
mov
sub
arpl
mov
cwtl
aaa
out
xchg
sti
mov
ret
ret
in
cmp
repnz
inc
adc
in
cmp
pop
sub
xor
or
ljmp
faddl
cmpb
xchg
xchg
and
xchg
push
xchg
mov
xor
add
add
pop
pop
loope
loope
fistpll
adcl
xchg
xor
loop
push
add
repz
add
jbe
ds
test
ds
dec
test
xlat
flds
shll
mov
arpl
sbb
cli
lahf
jg
lcall
popa
push
xor
xor
sbb
mov
pop
jnp
jbe
outsl
adc
cmp
inc
push
or
dec
inc
push
call
icebp
dec
xchg
or
lcall
das
xchg
xor
movsl
fstps
aas
insl
aad
out
ss
lret
mull
inc
cmp
data16
lock
jl
inc
popa
add
adc
nop
enter
stos
pop
or
sub
sbb
enter
aad
add
xchg
fsubs
adc
sub
mov
pop
lods
arpl
xor
sub
test
mov
dec
push
or
mov
popf
xchg
cltd
push
test
push
movsl
test
cmp
jle
xchg
movsb
mov
das
push
mov
pop
mov
adc
das
out
cld
jbe
int3
add
sahf
sub
sub
fs
mov
jns
rorb
in
cmp
adc
lea
leave
into
xor
lret
mov
in
add
test
xor
stos
cmp
xchg
mov
xor
shlb
add
mov
fadd
mov
aam
fildl
jmp
jmp
ljmp
lods
adc
lods
cltd
jmp
cltd
sarl
cmp
lret
movsb
test
mov
arpl
lret
sbb
insl
aad
scas
sub
xchg
addl
into
push
dec
xchg
into
fwait
clc
xor
aas
jge
ret
cmp
out
cmp
adc
pop
repnz
pop
inc
ret
push
ret
sub
mov
adc
xor
jge
out
scas
aam
push
xor
and
subb
jmp
mov
das
xor
adc
mov
mov
cmp
pop
lock
test
in
loopne
shrb
push
dec
add
lea
cltd
ret
addr16
adc
xchg
inc
inc
out
push
push
je
or
stos
imul
inc
push
mov
loope
mull
cwtl
fiadds
xor
push
push
mov
fisttpll
and
add
mov
iret
add
pop
add
cmp
je
or
add
cli
addr16
sub
loope
imul
lds
jp
xchg
pop
loopne
pop
inc
cmp
out
adcb
jb
imul
jae
lods
nop
out
jmp
js
sub
pop
out
adc
addr16
jno
pusha
ss
add
pop
mov
call
push
repz
sbb
add
aam
xchg
test
lea
into
cmpsl
pop
outsl
dec
shr
nop
mov
jmp
in
push
xor
add
xadd
push
xchg
in
test
inc
add
push
xchg
int
stos
or
clc
xor
adc
out
xchg
iret
pop
mov
jns
pop
xchg
out
lea
rcl
lahf
pop
inc
adc
cmpsl
mov
ret
push
cwtl
mov
push
lods
xchg
add
mov
push
lods
sub
stos
into
daa
pop
lret
icebp
and
negb
mov
cmc
push
int3
adc
gs
xor
aam
fldl
and
test
loop
mov
sbb
repnz
jns
push
cmpsl
int
inc
jnp
jb
lret
bound
xor
scas
xchg
test
pop
mov
data16
mov
sbb
out
push
xchg
adcb
jecxz
shrl
mov
mov
stos
pop
mov
xor
testb
mov
xchg
arpl
mov
daa
jecxz
dec
push
pop
push
das
sbb
flds
add
mov
sbb
sub
ret
daa
out
in
movl
and
inc
push
sti
adc
adc
dec
inc
push
inc
mov
es
std
add
or
hlt
lahf
vmovsd
fstp
cmp
aam
hlt
or
cmp
dec
ss
jb
bound
fstl
rolb
push
fiadds
jb
xor
int
jno
cmpl
test
sahf
mov
dec
stos
sub
pop
mov
sub
pop
fwait
xchg
pop
andl
jnp
add
jecxz
push
cmp
mov
sub
xor
out
daa
sbb
dec
xor
pop
sbb
rolb
add
add
test
xchg
and
cmp
fwait
icebp
mov
add
add
add
pop
push
dec
mov
mov
popf
mov
repnz
daa
outsb
mov
rolb
sbb
stos
out
dec
inc
sbb
mov
dec
jecxz
dec
ds
sbb
cs
lret
mulb
pop
inc
or
arpl
xchg
cmp
push
insb
int
mov
and
jae
pop
fldl
or
imul
mov
out
mov
pusha
fs
jle
cmp
cmp
sbb
jae
inc
data16
mov
jne
sbb
inc
mov
mov
sub
or
loope
mov
mov
xorb
jbe
push
cmpl
push
mov
pop
divb
cld
inc
es
cmp
das
into
fs
mov
and
or
sub
insl
xchg
imul
dec
rcr
mov
add
add
xlat
scas
stos
call
xchg
clc
pop
xor
mov
mov
sti
pop
mov
popa
inc
in
dec
mov
add
mov
push
imul
int3
daa
movsl
pop
xor
cmpsl
push
mov
push
sub
ds
stos
push
daa
outsl
xor
add
jmp
fildl
pop
xor
or
dec
sahf
push
pop
pop
subl
mov
int3
aaa
or
test
and
push
fdivrl
lds
mov
sbb
shld
adc
push
in
lds
fdivrs
add
out
outsb
daa
or
sti
jno
push
int3
and
ret
sub
sbb
movsb
clc
fdivrs
cmp
sahf
test
pop
loopne
mov
sti
xor
popf
fxch
in
aas
fst
dec
jbe
scas
dec
jle
sbb
cwtl
sub
add
xor
jmp
bound
adc
mov
mov
mov
cmpsl
leave
dec
outsb
or
mov
and
mov
push
unpckhps
jl
xchg
adc
gs
cmpsb
xchg
mov
int
test
scas
cmp
cmpsb
into
fdivr
adcl
out
mov
push
and
pop
push
je
stc
mov
int3
shrl
xchg
fstpl
mov
pop
sub
inc
orl
mov
ret
outsl
adc
into
les
xor
push
inc
shrl
sbb
jle
leave
lods
pop
jge
cmc
int
lret
dec
les
mov
mov
out
dec
xor
mov
jbe
and
mov
in
cwtl
jecxz
adc
pop
rclb
jb
and
adc
aad
pop
bound
mov
pop
into
iret
or
lods
sbbb
lahf
add
push
sub
xchg
movsl
popf
add
repz
int
mov
out
mov
xchg
dec
lods
jne
jb
gs
pusha
xorb
out
adc
push
fimull
dec
sarl
jns
mov
shll
out
sub
daa
inc
mov
leave
lcall
pop
roll
xchg
pop
adc
pop
push
push
or
or
xchg
jne
mov
sbb
das
add
out
xchg
inc
mov
adc
lahf
cmc
mov
cltd
scas
aaa
pop
fwait
lods
leave
pop
jp
add
ja
and
loopne
ret
mov
inc
in
adc
leave
outsl
outsl
xor
fld
icebp
aas
pop
add
xchg
push
cmp
fnsave
sbb
and
shll
mov
jns
push
add
fmull
orb
sub
jo
inc
or
out
cli
dec
or
cmp
ds
arpl
and
pop
repnz
adc
loopnew
jbe
fnstenv
push
lea
mov
je
sub
mov
loopne
popa
pop
leave
movsb
inc
mov
jl
push
pop
movsb
int3
sub
sub
out
test
repz
push
out
ficompl
xor
cld
fnstsw
cwtl
xchg
jmp
in
add
and
loope
pop
fbld
cmp
dec
adc
ror
sub
call
add
in
mov
add
clc
inc
sbb
int3
mov
nop
ss
sbb
sub
cli
push
fistps
cmpsb
inc
xor
or
cmpsl
iret
mov
mov
imul
add
mov
xchg
int3
aas
in
mov
and
aas
cld
jp
adc
add
add
add
cmp
loope
mov
rcrb
or
add
add
pushf
das
or
sbb
insb
rorb
das
push
in
imul
add
pop
int3
ja
testb
dec
and
or
xchg
dec
jg
negl
pop
push
or
ss
dec
bnd
sbb
out
xchg
pop
and
mov
mov
adc
xchg
in
jo,pn
lret
repnz
in
adc
cmpsl
push
push
fiadds
rcr
and
xor
lahf
and
call
pop
mov
mov
test
fcmove
sub
and
stos
movsl
mov
jns
mov
or
pusha
sbb
imul
xchg
orb
mov
mov
sbbl
and
or
push
inc
xor
lds
cmp
and
sahf
xor
jl
vpaddq
mov
mov
pop
std
push
das
xlat
jns
pop
scas
xchg
imul
pop
lea
shrb
and
xchg
dec
cmp
je
outsb
dec
dec
sahf
push
cltd
movsb
lcall
insl
faddl
and
or
mov
inc
cwtl
mov
mov
inc
push
cmp
addr16
xor
aam
jg
dec
decb
icebp
dec
mov
in
cmp
insb
or
jl
add
jo
xchg
imul
mov
push
sahf
push
and
je
mov
subl
dec
mov
nop
loop
adcb
and
sub
adc
jae
dec
incb
mov
mov
fstpl
pop
mov
xor
lock
out
xchg
mov
jge
imul
imul
andl
enter
dec
jne
dec
or
push
inc
sahf
fs
add
call
xor
xchg
mov
mov
out
push
jbe
lret
sbb
movsb
push
rclb
pop
andl
add
mov
mov
ljmp
imul
inc
adc
in
dec
push
imulb
out
adc
or
mov
stos
nop
call
test
addr16
fdivl
push
fsubr
outsl
xor
nop
add
jb
lahf
xchg
test
in
loop
adc
out
cmp
sbb
mov
out
aaa
in
ljmp
cld
mov
mov
lea
jo
mov
outsl
sarl
fimull
inc
int
sbbl
cmc
mov
cli
rcll
jg
inc
jne
imul
and
pusha
mov
pusha
ret
orb
and
jl
mov
leave
mov
gs
clc
mov
jecxz
xchg
cld
imul
xchg
sub
fs
xor
loope
loopne
fwait
mov
test
cmc
push
cmp
xor
leave
pop
outsl
jle
jecxz
gs
and
pop
clc
gs
mov
pop
fdivl
and
jmp
or
adc
push
mov
ja
clc
inc
pop
xchg
stos
enter
pop
insl
mov
mov
insb
dec
stos
add
mov
xor
cmpsb
out
lcall
dec
mov
xor
out
pop
leave
inc
lock
inc
cmp
mov
bound
and
cmp
and
push
out
sbb
idivl
xchg
iret
jno
mov
divl
sub
rcl
add
adc
sbb
xorl
cmp
pop
dec
les
sbb
jecxz
test
js
je
out
aas
fisttpl
adc
leave
ljmp
shrl
push
inc
iret
xor
lock
push
test
mov
in
sub
bound
loop
fsubrs
push
ret
add
sbb
xchg
je
les
nop
mov
inc
aaa
push
aad
test
mov
aas
das
pop
fsub
xchg
rcrl
jle
sub
cmpb
nop
add
push
and
mov
lods
push
push
int
iret
mov
in
adc
out
mov
fs
daa
and
cmp
push
adc
xor
mov
inc
xchg
dec
jbe
imul
clc
or
data16
xor
push
hlt
insb
test
xor
in
inc
sti
sub
enter
and
int3
add
shlb
mov
out
cmpsl
xor
aad
cmp
sub
test
cs
jnp
faddl
dec
jl
stos
push
paddb
sub
xor
add
add
add
mov
jp
ret
mov
add
repz
add
jnp
dec
cmp
mov
pop
jbe
cmpl
mov
jmp
rolb
subl
add
pop
sahf
iret
out
or
aaa
lahf
mov
mov
pushf
es
loopne
ja
mov
push
dec
repz
xor
out
and
test
data16
adc
daa
xor
and
pop
clc
ss
adc
jae
test
and
push
mov
out
popa
divb
cmpsb
xchg
mov
mov
nop
cmp
xchg
and
in
in
xchg
loop
loopne
sub
pop
cld
stc
jge
movsl
cmp
mov
inc
xchg
sti
adc
mov
mov
ss
shll
shrb
inc
int3
or
stc
cmp
mov
add
mov
lret
fsubrl
or
jbe
mov
sbb
sub
lods
inc
stos
jge
push
mov
cs
jecxz
xor
dec
inc
or
mov
pop
sub
jge
mov
add
in
out
hlt
nop
shl
add
dec
outsb
xchg
mov
jg
xchg
mov
dec
push
mov
sahf
test
cmp
cmpl
fistl
mov
jg
aaa
cld
adc
aad
enter
sub
jb
jno
and
xchg
cmpsb
push
push
cwtl
mov
mov
push
and
fnsave
dec
add
cmp
icebp
dec
je
idivb
movsl
dec
test
lds
mov
ds
mov
mov
sub
loope
mov
dec
add
pmulhw
fsts
iret
repnz
incb
mov
xchg
stc
pop
push
hlt
mov
push
scas
inc
test
mov
pop
aam
pop
adc
lods
or
cmc
int
jns
repz
add
shrb
shrb
xor
sub
test
cmp
cmpsb
push
aad
int
and
roll
mov
ja
pop
sub
movsb
push
insl
nop
lock
jge
dec
mov
aas
movsl
xchg
dec
icebp
dec
test
mov
scas
andl
and
daa
mov
dec
xchg
sbb
cld
dec
push
jns
rcr
mov
xchg
mov
adc
jae
call
out
add
dec
jl
dec
outsl
insb
int
xlat
fdivp
repz
push
aad
das
xchg
dec
test
enter
es
lahf
cltd
pop
fmuls
xor
sbb
ja
inc
xchg
test
test
lcall
sub
clc
hlt
inc
push
popa
pusha
out
cs
push
inc
xchg
jecxz
mov
rcrb
into
mov
push
xor
jnp
int3
inc
ja
mov
andl
shrl
jmp
xor
pusha
jl
dec
test
in
mov
test
cmpb
push
pusha
cmp
or
test
jge
or
inc
mov
leave
adc
call
adc
add
dec
fidivl
mov
jae
sbb
add
and
xchg
inc
cmc
outsb
and
aam
cmpsb
rcl
add
insl
dec
xchg
scas
dec
pop
daa
dec
jp
rorl
pushf
popl
adc
jg
sbb
sbb
mov
repnz
outsb
pusha
xchg
dec
out
mov
insl
shlb
and
sarl
push
dec
and
js
mov
inc
aaa
ds
sbb
mov
shlb
addr16
pop
sub
cmp
into
push
xor
or
mov
mov
sbb
dec
pop
jno
repnz
ret
xlat
xchg
scas
sbb
es
xchg
and
loop
ret
xchg
faddp
int3
jecxz
mov
xorb
xchg
pop
xor
imul
enter
add
mov
add
lea
fs
inc
adc
or
jnp
push
push
repnz
pop
jecxz
jno
insb
das
icebp
les
push
or
jp
pop
mov
xor
pop
cmp
pop
inc
aad
pop
push
cmp
mov
movsl
cmp
setg
jg
xorl
add
and
mov
mov
sbb
std
mov
stc
std
insl
dec
lcall
sarb
seta
ss
push
xchg
clc
js
lahf
jno
movsl
fnstenv
cmpsb
xor
pusha
bound
add
add
push
push
cmp
cmp
push
pop
mov
lahf
pop
push
pop
jo
push
add
or
dec
shlb
pop
mov
and
mov
or
and
sbb
jmp
divb
push
and
jno
repz
add
pop
dec
inc
mov
jg
adc
xchg
mov
dec
push
aad
int3
pop
popf
hlt
jl
cmp
mov
lods
jnp
and
aam
repz
adc
insb
fistps
ljmp
sbb
addr16
hlt
sbb
sub
pop
jae
daa
inc
int
cmpsb
ret
or
mov
dec
push
xchg
push
stos
mov
sub
cmp
fs
mov
pusha
push
jl
ss
movsl
mov
ret
mov
in
pop
jb
xor
push
mov
mov
insb
call
mov
test
jmp
das
leave
sub
mov
cmp
fcom
imul
sub
xor
inc
xchg
ds
push
xor
sub
loope
push
and
in
nop
iret
cmpsb
data16
jg
sub
cwtl
or
jmp
std
shrl
pushf
xor
aad
jns
dec
pop
xchg
rcll
xor
and
stos
push
pop
cli
sbbl
push
sbb
mov
push
decl
inc
shr
cmp
push
sub
jmp
clc
mov
bound
jge
mov
jae
aad
xor
inc
and
jae
inc
xor
xchg
inc
dec
ja
cmp
repz
or
add
add
aas
and
je
or
jg
push
mov
pop
loop
test
imul
aas
out
fadd
lahf
sbb
adc
xor
jne
aaa
ja
push
mov
mov
push
call
mov
or
pop
in
xchg
mov
jnp
into
mov
es
cmpl
stc
fucom
outsl
ljmp
pop
sbb
sub
negl
popa
int
fsts
and
jbe
xlat
aaa
jb
dec
inc
jp
cmc
outsb
push
fsubrl
rcr
enter
in
and
shll
jmp
or
cltd
mov
sub
les
push
fsub
fisttpl
or
aam
mov
lods
idivl
call
cmc
cld
inc
sbb
inc
into
cmp
pop
sub
add
dec
adc
fldenv
mov
jns
mov
imul
jbe
mov
mov
xchg
jmp
test
cmp
hlt
or
add
xor
inc
outsl
add
xor
pop
pop
mov
dec
jmp
sub
inc
insl
mov
jmp
je
xchg
loopne
rcl
lock
fsubl
inc
imul
fwait
pop
jbe
push
inc
cli
mov
popa
jnp
stc
adcl
dec
sub
push
mov
in
inc
cmp
inc
mul
push
mov
shr
lea
push
xor
cmp
leave
je
popf
rol
mov
inc
out
aas
inc
mov
cmp
bound
lahf
sub
jne
pop
adcb
or
adc
out
or
jo
xchg
imul
push
jmp
dec
lds
push
test
xor
jae
ljmp
sahf
out
outsb
adc
mov
icebp
movsl
jnp
rorl
lret
mov
imul
adc
mov
jbe
aam
pushf
ret
in
and
addb
movsl
lods
insb
or
es
sti
jg
mov
dec
add
clc
add
cmp
lahf
lods
aas
lret
mov
repnz
push
pop
mul
add
jge
xor
jp
pop
dec
sub
sahf
xchg
stc
add
fs
sbb
or
adc
xor
rcrb
shll
sub
push
fisubl
hlt
clc
push
add
das
pop
mov
dec
adc
sub
popa
jno
sub
push
popa
std
mov
in
cmpsb
inc
jmp
add
repnz
add
sub
dec
fs
call
rcrb
loop
in
mov
jle
ljmp
cmp
hlt
sub
xchg
out
xchg
and
xchg
or
push
sbb
cld
or
jno
or
cvtps2pd
hlt
fidivrs
iret
scas
ljmp
fwait
mov
mov
std
in
fnstenv
out
insb
fadds
xchg
scas
and
add
add
sub
jg
test
out
sbbb
jne
insl
add
repz
add
imul
inc
lock
mov
lret
jge
ret
xor
loope
cmpsb
repz
clc
inc
jns
inc
mov
out
ljmp
xchg
pop
fcoml
cs
out
lahf
clc
lret
fcmovu
loopne
push
cmp
adc
jp
loop
fstps
incl
lods
or
inc
mov
fcmovnbe
mov
int
pop
and
sub
into
sub
bndldx
out
stos
in
xchg
jg
dec
es
mov
les
je
fiadds
inc
rep
sub
movsb
lds
loopne
mov
addr16
leave
out
mov
and
fstps
jl
aas
sbb
leave
lds
sub
data16
dec
sbb
popa
imul
jge
divb
test
mov
add
ds
mov
test
xor
add
push
out
push
cmpsb
aad
stos
scas
rcrb
xchg
aad
enter
sbb
fdivrl
mull
cwtl
arpl
mov
cmp
sahf
jns
dec
dec
xorb
mov
outsb
fs
jb
sbb
test
das
inc
adcl
dec
je
cld
popa
adc
and
clc
cmpsl
negb
and
out
xor
and
js
xchg
xor
sbb
addb
xor
mov
or
push
into
push
pop
sbb
not
inc
cld
or
sbb
inc
into
popf
aad
and
dec
test
fcmovb
xchg
dec
loop
fimull
fwait
or
sub
mov
lret
fcomip
add
nop
loop
and
cltd
mov
pop
mov
inc
xchg
adc
aad
arpl
cmp
push
add
mov
push
inc
sbb
in
mov
loope
mov
push
loope
cmp
out
push
mov
jne
call
inc
icebp
dec
outsl
sbb
xchg
ljmp
push
jae
cmpsb
jmp
xchg
jg
ficompl
mov
or
std
aas
xchg
xor
push
or
fwait
aaa
pop
shll
in
int3
pop
mov
scas
ss
fsubrl
jl
test
push
lahf
xor
pop
add
xor
cmpsb
fiaddl
pop
popf
test
test
xor
dec
cmpb
pushl
push
inc
xchg
fadds
test
ret
add
pop
mov
adc
dec
xorb
pop
out
hlt
fisubl
cli
or
jmp
add
jns
mov
fmuls
bnd
test
or
add
sub
dec
ds
int3
popf
cltd
call
inc
xchg
mov
in
repz
sbb
pop
xor
ljmp
pop
jp
xchg
dec
enter
dec
scas
out
mov
mov
lret
mov
sub
iret
lods
movsb
notl
movsb
inc
es
divb
loopne
xchg
jnp
cmpsl
mov
xor
mov
xor
punpckhdq
in
push
mov
leave
xchg
jmp
cmp
push
jg
and
sub
cmp
cmpsl
cmp
inc
js
and
push
lcall
sbb
dec
fildl
hlt
movsb
jo
pop
mov
js
mov
sub
cli
pop
mov
dec
and
mov
mov
sub
hlt
dec
jl
nop
sub
mov
xchg
test
nop
movsl
inc
sbb
dec
mov
add
jb
gs
mov
bound
movsl
sub
fsubl
mov
push
mov
aas
iret
lea
ljmp
adc
out
aad
xchg
push
and
jae
push
cmp
xchg
into
xchg
pop
xorl
jae
push
xchg
cmc
xor
pop
push
xor
inc
xchg
scas
and
loopne
jb
dec
cmpsl
rcrb
xchg
pop
lret
scas
push
jl
dec
cmp
mov
sti
cwtl
loope
lret
add
and
cmp
pop
add
dec
sbb
adc
test
xchg
xorb
mov
pop
mov
push
roll
pop
mov
add
or
sub
out
mov
fidivrl
mov
inc
jo
es
xor
in
and
outsb
push
pop
mov
popf
and
outsl
out
and
mov
or
jbe
adc
jge
or
cmp
lret
add
add
add
mulb
repnz
out
jb
lods
mov
jb
add
add
add
in
sahf
inc
mov
mov
decl
ja
jnp
xchg
arpl
add
jno
lahf
mov
subb
sbb
adc
xchg
es
scas
into
mov
mov
ljmp
imul
add
sbbb
jmp
rcr
mov
cmp
std
mov
into
ja
cmpsb
cltd
fwait
push
xchg
add
imul
mov
inc
push
mov
fsub
daa
sbb
hlt
mov
mov
dec
test
inc
add
rorl
xor
cmpsb
out
outsb
add
dec
jp
sahf
popa
jl
out
add
jns
mov
scas
outsl
pop
adc
jns
push
test
dec
xchg
aaa
mov
inc
xor
mov
or
clc
jmp
sub
mov
add
jge
fcompl
jle
aam
icebp
jge
sbb
mov
mov
sbb
xchg
popa
dec
inc
das
fsubrl
mov
xor
gs
enter
xor
mov
push
lock
push
int
lods
std
repnz
mov
adc
xor
incb
sub
sub
gs
xchg
in
mov
push
fwait
aad
xor
and
in
xor
bound
lcall
add
mov
lock
sub
rol
adc
xchg
stos
lock
js
or
int3
sub
add
inc
es
push
push
xchg
jmp
inc
sub
sub
shll
stos
xchg
cmp
dec
jecxz
imul
adc
negl
inc
pop
mov
pusha
idivl
out
out
addb
xor
hlt
pop
aam
mov
pop
andl
aaa
repz
xchg
push
dec
rcrb
ficoml
je
adc
adc
imul
hlt
aam
add
xor
push
out
or
mov
pop
and
pop
adc
or
mov
lds
repnz
insb
sub
push
cmc
cmp
std
xchg
fdivrs
shr
das
fstpt
xchg
int
sub
clc
xorl
add
xor
push
jp
popf
imul
in
int
jo
inc
sbb
flds
fimull
xor
pusha
push
adc
out
es
out
sub
mov
xchg
cmp
mov
push
xchg
add
pop
jae
jle
mov
pop
cmp
cmp
je
xchg
fs
imul
rolb
out
mov
icebp
test
cmp
or
sbb
or
adc
idiv
lock
mov
mov
movsb
lret
outsl
mov
jo
cmp
jnp
xchg
pop
push
nop
dec
ds
dec
cmpsl
mov
mov
and
icebp
out
sbb
popl
pusha
sbb
nop
jae
fs
jecxz
ss
push
jecxz
pop
or
mov
faddl
cwtl
int3
inc
push
or
int
seto
mov
pushf
cmp
xor
inc
mov
pusha
pop
mov
cmpsb
cmpsb
pop
or
or
movsb
mov
jge
mov
fcomps
arpl
push
jg
mov
xor
daa
addr16
mov
and
push
and
cmpsb
pop
xlat
mov
sub
sbb
mov
cmpsb
in
aas
sarb
mov
cmp
push
sahf
in
pop
pop
jae
imull
adc
xchg
mov
inc
mov
cmp
orb
xchg
ss
jae
xor
movsl
outsb
fimull
mov
out
arpl
sbb
leave
cltd
jmp
adc
iret
pushf
cmpsb
ss
pop
cmc
aad
sbb
mov
hlt
push
sub
into
lret
xchg
push
icebp
or
or
dec
push
mov
xor
cmp
movsb
rcl
pusha
syscall
and
mov
sbb
jmp
dec
pop
leave
int
jl
std
fsts
sbb
scas
jb
push
jg
push
insl
xlat
mov
scas
add
in
pop
inc
dec
jb
popa
lret
test
jno
mov
sbb
jae
inc
test
iret
mov
rcrl
loope
xchg
repnz
in
scas
cmp
mov
sbb
dec
jl
adc
jmp
jmp
sub
data16
rcrl
lock
iret
dec
inc
jnp
push
dec
inc
mov
mov
ljmp
imull
jns
or
adc
sahf
imull
stos
jmp
nop
inc
sub
shl
and
fimuls
add
mov
mov
mov
add
mov
ja
add
add
add
ret
push
pop
jns
fs
pop
pop
ljmp
jb
push
push
test
dec
aaa
push
jae
in
mov
cmpl
pop
shrb
jge
movsb
pop
stos
or
inc
jno
dec
out
iret
les
mov
and
adc
divl
loopne
mov
xor
mov
pop
adc
jecxz
fldcw
enter
shl
adc
add
inc
xchg
mov
adc
sbb
jle
daa
movsl
jns
mov
fadds
push
inc
cld
xor
dec
out
pushf
pop
push
dec
movd
dec
ficompl
dec
icebp
mov
pop
push
imull
push
fisubrl
wrmsr
shrb
daa
sahf
add
mov
mov
cmc
sbb
cmp
and
xor
les
fistps
je
mov
cmpsl
ss
xchg
int
ret
sahf
bound
loope
punpcklwd
jmp
mov
into
std
xor
out
daa
bound
mov
fsts
pop
out
arpl
xchg
jl
call
scas
pop
pop
fcoms
and
cmc
mov
sbb
addr16
inc
xchg
mov
xchg
imul
out
push
inc
fs
sarb
xor
add
sub
and
sub
and
dec
fdivs
fwait
mov
into
loope
lahf
cmpsb
or
gs
or
inc
pop
xor
xlat
jl
jne
push
testl
push
repnz
mov
mov
leave
es
or
or
xchg
scas
push
push
and
mov
fidivrl
fsubrl
mov
imulb
daa
js
ja
roll
mov
mov
cltd
into
out
into
xchg
fdivrl
rcll
mov
sar
stos
mov
push
cmp
enter
fcmove
das
push
jle
sbb
mov
lret
mov
scas
shl
adc
fcoml
inc
mov
ret
dec
push
scas
push
out
add
inc
out
mov
out
ret
push
mov
testl
xor
adc
int
or
push
xchg
xchg
mov
jp
cmp
jno
jbe
push
mov
dec
jg
data16
cmp
jo
jno
in
outsl
sub
push
sub
push
sub
int
lea
sub
lahf
std
clc
mov
pop
outsl
lock
in
dec
mov
xchg
imul
dec
stos
push
outsb
xor
fst
xchg
fwait
and
pop
test
sub
test
xchg
mov
or
mov
inc
jo
shlb
or
test
shlb
sbb
in
push
pop
mov
xchg
xchg
add
sub
mov
push
fisubrs
sahf
cmpsl
inc
iret
in
jecxz
xchg
xchg
mov
jb
or
cmp
dec
out
lods
add
sub
mov
adc
rcrl
cmp
adc
cmp
adc
cmp
xchg
adc
jbe
xor
xchg
std
add
call
leave
out
mov
nopl
cmp
inc
insl
cmpsb
lcall
cmc
pop
lods
cli
mov
stos
movsb
pop
xor
add
pop
mov
xor
fbstp
add
in
jb
push
aas
push
das
mov
and
add
int
mov
cmp
ret
bound
dec
daa
sub
dec
jp
add
ja
adc
sahf
mov
stos
mov
sti
rcll
and
or
movaps
cmp
cmp
and
into
jne
push
jecxz
fisubl
push
xor
add
cli
jg
dec
shlb
xor
sub
dec
xor
lea
fwait
neg
clc
jle
jl
pushl
jmp
imul
bound
clc
mov
sbb
mov
test
dec
sti
dec
push
mov
mov
rclb
push
jp
dec
insb
or
xor
push
lods
jge
aaa
dec
data16
push
lret
mov
cmp
cwtl
fbld
pop
lret
or
es
jg
lret
inc
xchg
sub
or
push
movsl
imul
xchg
sub
rorl
mov
mov
or
movsl
sub
jnp
lock
loope
test
push
jnp
sbb
int3
mov
jl
sub
push
mov
movsb
adc
mov
repnz
pop
rcll
nop
xchg
mov
sub
mov
pop
adc
inc
pop
cwtl
adcb
mov
add
mov
and
mov
add
add
jbe
push
stc
stos
cmpsb
inc
arpl
out
jb
dec
rep
push
je
jge
push
out
mov
out
pop
xchg
shlb
push
loopne
in
jmp
cmp
arpl
inc
imul
out
cltd
dec
adc
out
mov
jge
and
xchg
pop
ds
pop
xchg
lahf
pop
jae
sbb
flds
cltd
dec
loop
adc
ret
int
push
cmc
jne
pop
lods
test
inc
loopne
divb
insb
pop
pop
inc
mov
jnp
xor
mov
adc
ds
inc
scas
xor
push
imul
pop
ljmp
test
push
leave
adc
lods
movsl
and
sbb
mov
or
idivb
push
aaa
sbb
fsubr
mov
out
mov
inc
mov
mov
sbb
push
fsubs
cmp
jle
aas
fidivrl
ja
test
scas
js
or
mov
cmp
push
dec
xor
xchg
fbstp
and
stos
jbe
cwtl
fcmovbe
adc
mov
jno
inc
sahf
mov
std
fwait
lret
movsb
mov
push
test
pop
mov
repnz
push
cmpsb
cwtl
cld
js
xlat
dec
jl
push
mov
in
push
push
sbb
push
xchg
sub
sub
xchg
mov
mov
fmull
xor
mulb
mov
adc
xchg
mov
test
mov
daa
jnp
pop
pop
outsl
pop
scas
pop
enter
adc
nop
sbb
js
iret
in
pop
in
add
out
or
leave
loope
es
imul
xchg
mov
imul
lods
dec
push
nop
aad
rcrl
xchg
xor
cmp
sbb
lcall
sub
mov
mov
jns
or
inc
mov
pop
jb
aam
and
jae
pop
cwtl
mov
cmp
cs
lds
sbb
outsl
sbb
lahf
aam
sarl
mov
sahf
mov
mov
shrl
sbb
cmp
sub
insl
cli
or
cmp
and
ljmp
lahf
outsl
in
lods
clc
ret
iret
andb
mov
cltd
arpl
test
loope
inc
jp
pop
mov
mov
loop
and
adc
movsl
xor
icebp
jg
notb
lahf
into
aaa
mov
loopne
and
push
mov
mov
rolb
jl
dec
push
and
jge
mov
push
je
mov
arpl
adc
mov
inc
std
addl
icebp
fcomp
mov
testb
fistpll
fsubs
push
or
mov
adc
cmc
jmp
mov
jno
js
in
jg
mov
stos
mov
xor
out
jge
mov
pop
pop
cmp
push
int3
loopne
adc
scas
imul
xlat
push
fs
mov
mov
xorl
push
cmpsl
mov
in
sub
push
nop
insl
push
push
jae
and
int3
inc
lahf
lcall
sahf
addr16
out
in
inc
js
jmp
icebp
insl
inc
sbb
aaa
adc
jmp
add
add
stos
add
inc
daa
pop
lret
push
loopne
cli
inc
cmp
lock
push
sbb
fisttpll
inc
mov
insb
cmp
cli
add
fnsave
nop
mov
repz
movsb
sbb
in
sbb
out
out
push
clc
mov
mov
jno
stos
std
fs
and
pop
fwait
jp
or
xchg
fucomp
or
scas
add
xor
pop
xchg
and
cmc
cltd
fxam
sti
xchg
lods
mov
cmpl
in
add
push
leave
lods
mov
sbbl
jle
jmp
add
cmpsb
popa
jb
jmp
xchg
and
mov
jge
mov
jl
repz
jle
ss
pop
orl
and
arpl
pop
es
in
into
fwait
in
push
sub
adc
dec
es
repz
neg
jg
idiv
roll
push
rorl
adc
push
in
jns
and
insb
mov
adc
scas
pop
xchg
and
das
orb
mov
movsl
dec
and
movsb
push
xchg
xor
add
pop
fldl
inc
sti
aas
jb
add
loop
mov
add
add
add
push
lods
int3
pop
cmpl
or
popa
out
loop
dec
add
xchg
add
jge
jl
test
arpl
int3
movsl
das
jno
fs
xor
loopne
notl
sbb
add
pushw
fincstp
test
dec
pop
stc
mov
les
mov
cmp
popf
mov
in
fwait
mov
mov
add
or
int3
jb
xor
fidivrl
jecxz
cmp
and
or
mov
hlt
clc
sub
inc
jmp
mov
jbe
lret
pushf
push
iret
notl
lods
pop
inc
cmp
sub
adc
xor
mov
lret
test
fdivrs
mov
pop
fcmovb
xor
sti
sbb
les
mov
insb
ljmp
push
jne
ds
inc
sub
add
in
dec
add
dec
mov
inc
test
mov
jg
adc
test
sub
jns
mov
lock
hlt
lock
lds
dec
sub
or
loop
insl
mov
inc
sub
inc
outsl
into
dec
fs
xorl
add
xchg
out
xchg
and
mov
mov
add
cmpsl
out
fiaddl
lret
in
add
jp
mov
iret
jg
out
and
xor
test
popa
pop
xor
movsl
mov
inc
or
or
and
sbbl
inc
imul
ret
sub
mov
mov
fdivl
dec
inc
and
or
add
mov
push
setp
int3
in
lock
rolb
cld
insb
mov
shlb
push
imul
and
mov
scas
pop
and
push
test
pop
push
int3
test
jp
fwait
xchg
js
mov
dec
mov
adc
fcomps
lahf
mov
xchg
xchg
jns
call
jne
push
popf
cmp
bound
mov
mov
push
or
push
sbb
xor
sbb
imul
fldt
and
mov
fcomps
mov
aad
test
xor
movsl
in
sbbl
dec
scas
mov
inc
and
inc
dec
xor
mov
add
xchg
les
mov
cmp
pop
mov
rorl
popf
jp
in
ret
push
mov
movsl
cltd
push
cmp
adc
inc
xlat
lahf
fistps
mov
sub
sub
sub
mov
push
xchg
imul
cmc
stos
mov
push
mov
dec
mov
push
fadds
in
xor
movsl
jbe
popa
jecxz
mov
xor
pop
add
inc
dec
add
div
xchg
sahf
sbbl
loope
jmp
mov
add
loop
mov
ret
clc
inc
pusha
enter
nop
xchg
sbb
or
andb
mov
mov
mov
shr
cmpsb
fldl
dec
lret
pop
test
pop
lahf
push
xchg
fs
push
lahf
shll
mulb
and
pop
arpl
or
cmpsb
aaa
fisubrl
mov
cld
aaa
jno
setp
sbb
test
in
mov
lcall
or
cltd
out
mov
mov
sub
loop
inc
insb
mov
and
mov
mov
xor
out
and
sub
les
xor
mov
pop
jecxz
inc
xlat
pop
jae
adc
push
popf
repnz
lds
push
std
cmp
mov
cs
jns
xor
arpl
push
ror
or
loopne
movsl
jo
jecxz
test
mov
cltd
jp
xchg
addr16
fildll
jmp
xor
mov
enter
mov
mov
iret
test
inc
std
ss
add
test
push
mov
mov
ret
or
mov
int3
in
cltd
movsb
loop
mov
mov
push
and
lea
outsl
inc
or
or
lea
mov
sub
or
insl
mov
mov
or
add
fnstcw
jae
movsb
dec
inc
add
cmp
lds
mov
mov
insb
pop
mov
pusha
lock
xchg
lods
jl
cmp
cs
push
leave
dec
sbb
aam
mov
nop
push
into
dec
pop
pop
sub
pop
push
xchg
add
add
add
jge
mov
or
dec
jno
xchg
add
add
add
xchg
xchg
sarb
cmpsb
leave
or
popa
fstp
adc
es
sbb
testl
repnz
test
mov
xchg
xlat
orl
pop
adc
xor
sbb
add
repz
hlt
out
mov
pop
popf
fildl
dec
fildll
flds
push
dec
stos
rorb
sbb
out
and
sub
pop
xor
add
std
cs
jns
cmc
movmskps
cld
mov
scas
rcrl
iret
inc
push
jnp
push
arpl
test
daa
cmp
sub
sub
jp
adc
movsb
xchg
movsb
mov
not
jbe
or
mov
stc
addl
or
je
xor
imul
xchg
xchg
dec
push
fisttps
mov
icebp
cs
sub
repnz
into
dec
std
fcmovnb
lods
clc
inc
aam
push
mov
mov
mov
sub
cmc
mov
inc
test
in
dec
rclb
cmpsl
arpl
sub
xchg
inc
adc
sub
popa
mov
data16
mov
mov
out
mov
or
outsl
add
xchg
mov
stos
je
sub
xchg
pop
adc
popf
sbbb
push
sub
stos
adc
jae
mov
push
lods
mov
out
mov
add
cmp
xor
sub
out
sub
xor
push
hlt
xchg
movsl
cs
shll
xchg
das
mov
ficompl
addr16
cmp
mov
rcrb
loopne
shlb
fidivrl
sub
dec
inc
lret
outsb
or
xlat
jmp
pop
scas
jnp
inc
mov
add
negb
and
xor
jle
int
cmp
dec
xchg
adc
adc
pop
test
test
lea
xor
fstps
xor
cmp
jecxz
cmp
mov
in
jmp
and
into
dec
mov
xchg
and
cmp
pop
push
mov
stos
adc
je
xchg
mov
pop
jmp
fnstsw
mov
jb
mov
mov
push
outsb
cltd
sarl
or
xchg
out
loop
jge
cs
je
mov
lcall
inc
sbb
loope
nop
in
adc
pop
sbb
lret
outsb
cmp
and
inc
mov
ja
rorb
mov
mov
leave
cmc
and
xchg
jmp
xchg
in
movsl
test
lret
das
sbb
outsb
adcb
stos
shl
sub
adc
inc
dec
cmovae
insl
pusha
mov
mov
ds
cwtl
push
lret
adc
jge
lret
mov
mulb
test
push
jp
fdivp
xchg
xchg
in
push
push
add
cmp
pop
mov
fcmovnbe
shl
push
pop
push
inc
and
aam
insl
gs
popa
mov
jmp
or
pushf
lock
add
add
out
loopne
fidivs
mov
loopne
jae
cs
int3
adc
sahf
push
pop
in
ljmp
mov
xor
and
shrl
push
inc
es
push
mov
push
and
xor
mov
push
xor
cmp
or
rcll
stos
xchg
mov
aad
ja
scas
incl
mov
jecxz
fidivl
rolb
dec
jbe
stos
std
lea
ss
push
xchg
jbe
jecxz
bound
fistpl
fistl
shrl
mov
cmpsl
fldl
shlb
in
dec
insb
mov
push
leavew
out
shl
dec
mov
lcall
ljmp
fdivrs
pop
add
sub
jp
cld
xchg
mov
or
mov
notb
out
loopne
mov
aaa
ret
imul
out
fistpll
sahf
push
cmp
rolb
out
fisttpll
bound
push
enter
scas
ss
sbb
lods
xchg
or
shr
shll
jg
aam
jno
dec
je
pop
dec
push
cmp
movsb
mov
pop
test
xchg
test
mov
in
mov
pop
and
mov
fmull
sarb
es
loop
sub
ljmp
lret
les
lods
xlat
mov
int
xorl
pop
loop
push
xor
clc
mull
roll
add
add
add
mov
cmp
mov
cwtl
mov
add
add
add
xchg
pop
mov
movsb
ret
stos
mov
inc
daa
xchg
fs
push
das
jno
inc
push
je
mov
mov
push
xor
xchg
jbe
xor
dec
loopne
dec
lcall
sbb
jno
movsb
shr
mov
rcll
inc
stc
and
jnp
mov
stos
mov
ss
gs
push
imul
xor
sbb
pop
jp
outsb
mov
mov
aam
add
push
clc
icebp
std
mov
outsl
push
cs
mov
inc
adc
inc
lret
test
outsb
mov
aas
pop
pop
sbb
out
adc
insb
adc
clc
jae
mov
ficoml
cli
cmp
sar
sbb
sbb
pop
in
pusha
cs
into
pop
jne
or
sbb
mov
fistpl
xor
sub
stos
sahf
push
and
push
in
jo
mov
and
xor
mov
mov
inc
in
loopne
add
xor
outsb
dec
pop
ret
filds
popf
arpl
mov
inc
loope
cwtl
and
loop
scas
repz
shlb
inc
test
js
adc
add
ljmp
mov
jg
idiv
add
mov
in
addr16
ss
sbb
dec
lret
mov
jne
cmp
inc
push
fcoml
xchg
push
in
add
decl
lock
jns
cmpl
jno
adc
sub
jle
adc
loopne
cmpsb
push
dec
adc
mov
sbbl
add
adcb
lret
data16
inc
cmp
mov
orl
call
lahf
push
adc
pop
rorl
and
jecxz
push
mov
das
sbb
cmp
sbb
popa
jne
pop
add
movsl
lcall
jge
xchg
pusha
jns
es
stos
loopne
dec
inc
adc
test
aaa
xor
test
jp
sub
imull
cmp
xchg
inc
push
inc
mov
js
cs
out
push
cmpsb
mov
adc
sti
dec
pop
cmpsl
aas
mov
rolb
inc
shrl
out
pop
popa
cmp
daa
or
dec
pop
sub
sbb
test
mov
sti
fdivs
xor
rolb
push
testb
filds
test
xor
inc
add
ret
add
imul
popl
mov
js
shrd
popl
push
fisubs
add
dec
adc
fcmove
fwait
enter
insl
addl
push
mov
lds
cmc
add
pop
scas
inc
mov
test
arpl
iret
in
stc
bound
cs
xor
adc
push
inc
call
test
mov
add
sub
je
shll
adcb
sbb
mov
cld
adc
test
inc
clc
outsl
addl
sub
pushf
and
test
push
and
or
mov
or
or
sbbl
repz
push
ret
les
ja
arpl
js
cmpsl
jmp
mov
adc
pop
fwait
mov
js
out
push
pop
cmp
dec
andb
cmp
push
call
add
popf
pop
idivl
dec
js
pop
sub
test
aam
cltd
daa
or
bnd
pop
xchg
push
push
lods
cltd
adc
jns
ds
mov
push
add
mov
or
cmc
cltd
jae
pop
stos
ss
pusha
imul
cmp
call
ds
clc
xor
pop
mov
aaa
fsubrp
mov
mov
pop
pop
mov
nop
xlat
mov
insb
jle
push
or
pop
test
lcall
sub
sahf
fsub
adc
dec
ret
jp
jno
mov
xlat
jecxz
rorl
lcall
enter
sub
cmpsb
mov
jge
xor
add
cld
and
cmc
movsb
icebp
mov
push
push
adc
fstpt
jecxz
rep
xor
or
in
lret
mov
mov
adc
add
fsubp
mov
jge
popf
fs
stos
std
mov
aam
adc
push
cmp
sub
idiv
mov
pop
fadd
aaa
pop
xor
testl
repnz
jge
adc
cs
inc
and
movl
and
push
xor
mov
add
add
and
es
sti
std
sbb
adc
add
add
add
loop
lcall
inc
test
sub
xchg
nop
andl
nop
pop
ljmp
scas
leave
mov
mov
xor
jb
or
out
pop
jb
btcl
orl
sub
mov
dec
imul
or
xor
daa
cmc
sbb
mov
pop
xor
nop
jl
push
xor
mov
pop
test
call
push
mov
pop
xchg
mov
mov
fidivrs
adc
push
mov
mov
xor
xchg
loope
imul
xchg
xor
cltd
gs
insl
xchg
mov
cwtl
jb
xor
inc
js
adcb
test
inc
mov
adc
mov
xchg
int3
fists
adc
add
adc
xlat
xor
rclb
loopne
rcll
and
xor
test
mov
inc
test
push
mov
add
neg
add
add
icebp
add
add
add
fisttpl
jle
loop
insb
js
or
jne
jo
loopne
lret
movsl
pop
call
das
pop
arpl
pusha
push
pop
inc
or
aas
ljmp
adc
test
and
dec
movsl
mov
cmpsl
fs
iret
push
shrl
inc
lods
sub
push
mov
pusha
jae
or
aas
imul
or
mov
sbb
mov
pusha
sbb
aam
jl
push
pop
in
sub
fldenv
arpl
jno
xchg
sbbl
and
push
add
xorl
push
ficomps
cs
rcll
into
mov
cs
xchg
rorb
push
pushf
maxps
bound
int
lcall
sub
addr16
jne
add
lods
pop
test
lods
rcr
loope
jbe
inc
repnz
arpl
enter
std
add
mov
dec
out
mov
fstpl
jne
jno
and
pop
mov
sbb
and
stos
add
xchg
xchg
outsl
xor
jo
pop
sub
lods
sbb
test
dec
xchg
lret
out
xor
push
popa
out
repnz
mov
jmp
xlat
lods
popf
xchg
mov
xorl
lcall
sub
dec
hlt
sarb
or
inc
incl
fucomip
sahf
jle
je
out
inc
mov
and
mov
insl
stc
clc
push
sub
lock
adcl
or
les
pusha
int3
push
mov
pop
int3
imul
lahf
aas
dec
cltd
les
jns
stos
add
add
cli
cmpsb
cmpsb
or
inc
outsl
xchg
add
arpl
push
add
push
mov
cltd
lret
cli
fdiv
fsubr
and
push
xor
mov
pop
mov
cmp
and
lret
in
stos
mov
sbb
stc
cmp
dec
ja
jle
cmpsb
movsb
and
adcl
xor
xlat
sub
fildll
ljmp
xor
mov
adc
sahf
pushf
int
ss
xchg
in
adc
je
adc
fisubrs
pop
add
xor
pop
pusha
mov
jns
lods
sub
outsb
mov
mov
sarb
pushl
rolb
sbb
loope
pop
mov
and
sbb
pop
jge
cwtl
push
cmpl
shlb
mov
stos
pop
sbb
sbb
test
dec
adc
dec
pop
mov
jl
notb
pushf
mov
pushf
es
push
scas
roll
sub
add
imul
fiadds
or
lcall
sbb
test
jno
arpl
mov
adc
es
outsl
cmc
mov
push
mov
addl
popl
dec
or
stc
mov
outsl
or
addr16
inc
loop
mov
sub
mov
mov
xchg
lock
aaa
popa
lcall
cmp
mov
mov
lret
outsl
pop
aas
push
mov
and
cmpsb
ss
sbb
cmpsb
enter
daa
sub
aas
push
pop
dec
aas
movsl
fadds
cmp
jns
push
imul
lcall
loopne
mov
and
dec
pop
ds
sub
dec
cmp
pop
enter
jge
dec
repnz
jl
jbe
repnz
ficoml
mov
jge
das
sbb
add
cmp
add
add
sbb
jg
lcall
dec
jle
add
repz
add
inc
lcall
int3
add
xchg
push
ja
aaa
shlb
adc
sbb
sub
int3
add
push
push
stos
int3
xchg
jp
test
mov
divb
adc
sbb
imul
push
insl
jl
jp
fisubl
cmpsb
je
movsb
xchg
dec
add
or
adc
and
or
loop
mov
xchg
push
in
int
sub
xor
mov
adc
sahf
mov
jno
pop
ljmp
inc
and
rcrl
rol
pop
mov
leave
cld
andb
aad
add
lcall
lock
stos
cmp
add
xor
push
push
ret
cmc
data16
xor
mov
aam
fisubs
pop
lret
movsl
aas
mov
mov
insb
jne
mov
outsb
je
dec
inc
test
jo
sub
cmp
scas
mov
subl
sbb
push
out
loopne
lds
mov
sbb
js
jno
cmpsb
mov
fnstsw
fisubrs
frstor
gs
cld
call
mov
test
dec
aam
lods
xlat
aad
scas
lea
xchg
out
jecxz
mov
and
inc
out
pop
lods
xchg
loop
jle
lret
cmpsl
movsb
inc
imul
mov
adc
or
push
repnz
mov
lds
int
cld
iret
sbbl
addr16
aad
stc
sbbl
xchg
jb
sbb
test
push
xor
sub
sub
movsb
les
scas
xchg
std
sub
andb
jge
daa
jbe
loopne
mov
jg
stos
or
mov
cmpsb
loop
lcall
or
mov
sbb
and
sbb
hlt
arpl
flds
mov
bound
mov
and
add
std
les
lret
fistpll
mov
xor
add
loope
xchg
sub
aad
shl
inc
cmp
imul
cmp
jbe
fsubr
int3
mov
data16
loop
push
notb
roll
sbb
mov
push
dec
mov
push
loopne
outsb
inc
ret
inc
xor
xchg
clc
mov
cmp
ret
cmp
add
add
frstor
and
lods
mov
rcll
xchg
movsl
xchg
mov
aad
inc
lcall
push
mov
pop
adc
insb
or
lret
jmp
push
jns
sub
cmpsb
mov
popa
add
rolb
popa
xchg
sbb
inc
nop
lret
sbb
sbb
movsb
ja
cmp
or
sub
sbb
adc
arpl
sub
ret
jle
pop
pop
xlat
ja
jbe
loope
pop
out
pop
imulb
cmpsb
clc
push
pushl
mov
push
icebp
mov
outsb
iret
cmc
cmpsl
test
add
in
xchg
cmc
mov
stc
std
les
dec
lds
scas
fistl
loopne
or
into
sbb
xchg
xor
mov
insl
loop
and
pop
stos
arpl
fdivs
xor
fs
inc
push
pop
into
or
pop
or
mov
add
scas
paddsw
add
loopne
gs
jns
sbb
adc
mov
loope
sub
mov
cld
cli
rorl
mov
std
ret
adc
xor
xor
mov
out
in
mov
mov
scas
pop
cs
or
aam
lea
sbb
push
sbb
cmp
dec
inc
and
or
repz
fucomi
pop
fsts
cmp
cld
sub
fists
sarb
movb
into
scas
xor
mov
inc
push
push
sahf
jge
and
xor
jge
mov
enter
daa
or
orl
add
and
mov
loop
jp
jns
xorl
xor
mov
jns
stos
fsubrs
fisubs
aad
jg
mov
pop
cmp
pop
mov
xchg
and
in
add
pushf
out
pop
dec
leave
cmpsb
ret
cmp
mov
aas
xchg
out
jnp
sub
sub
push
push
stos
mov
outsb
les
aad
and
push
inc
shll
adc
insl
mov
daa
xor
shlb
sub
aad
lods
iret
and
lods
sahf
mulb
ja
sub
insl
fldenv
sub
int
mov
add
add
add
stc
pop
sub
stos
jns
dec
sub
fcmove
scas
jno
add
repz
add
lods
outsb
das
loopne
arpl
pop
xchg
test
add
scas
nop
mov
push
jge
mov
push
sbb
sub
pushf
leave
cld
adc
fisttps
arpl
int
mull
sub
and
jg
mov
insl
sbb
mov
mov
add
push
in
test
push
dec
hlt
or
sti
dec
xor
outsb
fisubrl
icebp
js
test
sti
push
test
add
lods
push
stc
out
iret
mov
inc
mov
inc
outsb
xchg
scas
mov
lods
pop
cmpsl
mov
fwait
pushf
fs
lcall
adc
fwait
into
dec
push
mov
pop
jne
sbb
xor
js
aad
mov
pop
inc
pop
jecxz
loope
das
stos
fadds
inc
lahf
adc
sub
push
mov
add
xor
add
push
jbe
add
sub
add
sar
das
sar
fs
cmpsl
jp
push
scas
sbb
dec
les
popa
mov
push
pop
dec
cmp
lahf
jmp
cmc
cmp
add
dec
enter
inc
lea
aas
cmp
test
fisubs
inc
mov
inc
mov
xchg
dec
shll
sbb
xor
dec
push
inc
mov
je
pop
cli
xor
xchg
inc
pop
pop
mov
jne
pop
add
leave
sbb
fwait
sub
and
mov
data16
mov
xchg
xchg
push
jo
loop
xor
mov
in
cltd
xchg
fcomps
push
inc
mov
ja
xchg
push
cmp
andb
cmp
mov
pop
ret
insl
xor
adc
das
test
aaa
daa
test
cli
jecxz
add
int3
cmp
rep
gs
inc
sbb
push
js
sbb
test
xor
pop
pop
lods
loopne
push
pop
mov
mov
push
enter
pop
ss
dec
test
mov
pop
fldcw
or
push
fwait
in
out
inc
rcrb
into
pusha
adc
pop
int
xchg
aaa
pop
mov
in
ljmp
mov
cmp
aas
insl
outsl
daa
sti
mov
sub
inc
stos
cmp
push
push
sbb
andl
xchg
and
dec
lret
lods
sub
jmp
stc
daa
xchg
adc
mov
stos
xchg
imul
sbb
fadds
stos
push
iret
push
add
xor
mov
mov
testl
xlat
ljmp
mulb
and
mov
cmp
xchg
xchg
mov
je
push
je
sub
inc
arpl
jbe
imul
or
mov
loop
mov
js
dec
into
or
adc
cmp
cmp
mov
pop
push
fistps
jne
lahf
out
addr16
ss
mov
loopne
mov
lcall
ja
adc
arpl
mov
push
bound
mov
pop
xchg
jl
imul
cmpsb
push
xchg
mov
arpl
cmp
inc
push
push
push
sbb
test
add
xor
icebp
fwait
xor
out
test
fisttpll
pop
popf
test
or
popf
xchg
je
xor
out
sub
mov
mov
mov
stos
mov
add
jae
sbb
fwait
mov
xor
sub
data16
cmp
mov
pop
push
roll
sub
insl
add
cld
mov
fidivrs
loop
xor
jmp
cmp
insb
aam
push
pusha
pop
fstl
sub
pop
fisttps
add
repz
popl
sbb
inc
add
add
mov
pushf
dec
out
pushf
imul
dec
xchg
mov
add
and
adc
adc
cld
nop
test
inc
lret
imul
jle
inc
add
push
flds
fidivl
and
jle
sbb
mov
add
mov
aaa
das
rcrb
or
or
fldenv
gs
inc
daa
or
in
loopne
add
pop
clc
sti
fld
lret
jmp
stos
imul
or
mov
pop
inc
stos
mov
xchg
out
clc
and
xor
push
push
lock
lods
cmp
gs
jmp
lret
movsb
sbb
jnp
mov
mov
mov
enter
add
add
lret
dec
jge
xchg
outsl
jge
lcall
add
repz
add
movsb
fcomps
jge
pushf
mov
lods
sub
lds
lahf
sub
cmpb
outsb
pop
pushf
or
movlps
scas
cs
add
mov
sub
cmpsl
mov
shrb
insb
add
lods
ja
lahf
mov
push
int
pop
pop
or
jg
and
xchg
and
in
inc
inc
add
rcr
mov
fdivl
mov
pop
jnp
shlb
notl
jmp
xchg
mov
push
pop
test
push
in
mov
test
and
sti
xchg
dec
xor
lea
cmp
ljmp
cmp
jmp
inc
pop
ja
push
in
xor
cmp
and
daa
mov
cmc
mov
mov
jmp
mov
rcrb
add
or
out
pop
mov
pop
outsl
lret
in
xor
jle
dec
pop
cli
das
mov
in
mov
enter
ret
cltd
stos
inc
pushf
lods
jns
imul
xchg
and
sub
ret
cli
out
sub
mov
pop
mov
mov
fists
inc
out
mov
pusha
add
mov
dec
add
test
aas
xlat
xchg
cmp
dec
inc
mov
cmpsl
je
lret
std
jbe
jae
push
punpckhwd
mov
mov
mov
subb
loope
in
dec
xor
in
arpl
xchg
sub
dec
pop
jle
pop
icebp
lods
insb
and
int
js
bound
cmp
xor
lods
jne
call
push
sbb
mov
inc
inc
xorl
xor
ljmp
dec
fadd
cltd
lods
cmpsl
ja
stos
mov
popf
push
mov
in
lods
daa
test
dec
test
push
fiaddl
sub
fldl
lock
sub
shrl
push
js
xchg
in
cmc
pop
dec
mov
push
mov
pop
clc
sub
rorl
lret
dec
xchg
and
outsb
cmp
cmp
xchg
jl
iret
aas
rcl
lock
mov
and
mov
mov
loope
mov
add
es
add
inc
mov
pop
jbe
push
ficoml
pusha
mov
cmc
mov
enter
outsb
aad
xlat
aas
sub
mov
jecxz
repz
sub
fldl
add
cmpsl
mov
fiadds
scas
mov
mov
les
inc
mov
outsl
push
mov
add
idivb
or
and
stos
clc
ja
sbb
mov
xchg
dec
inc
cmp
outsb
dec
jns
sbb
push
les
mov
in
lret
sbb
jp
popf
and
dec
bound
push
adc
rcr
cmp
mov
push
int
js
stc
jecxz
popf
xchg
adc
nop
into
jle
or
clc
sbb
daa
incb
decl
xchg
dec
imul
inc
lock
and
dec
js
jae
in
icebp
fistps
es
ss
mov
or
mov
outsl
fcoml
pop
xorb
rcll
dec
push
jae
inc
jmp
test
pop
jae
fcoml
or
mov
inc
xchg
push
nop
or
mov
lahf
add
cmp
push
out
lret
test
sbb
ljmp
jp
insl
jle
xor
fnstcw
xor
dec
shrb
mov
cmpsb
stc
sbb
mov
jno
xchg
ss
mov
fdivs
and
sbb
mov
sti
outsl
pop
cwtl
out
int3
jg
jecxz
rorb
test
sub
push
mov
call
cmc
cmp
in
lret
fadd
cwtl
or
sbb
cmp
push
imulb
xor
insl
stos
dec
xor
sub
pop
mov
lahf
jg
jg
bound
inc
jns
jnp
mov
push
test
or
dec
aad
xchg
test
rcrb
inc
lret
test
and
cld
or
ret
pop
pop
stos
xchg
push
jge
subl
in
inc
dec
add
jne
xor
data16
jp
and
outsb
or
sub
adc
jae
gs
mov
mov
pop
ret
jmp
mov
in
push
cli
ss
adc
jae
xor
mov
inc
push
or
fsubrl
inc
cbtw
or
adc
pop
xor
xorb
jno
std
je
push
and
jp
lret
inc
ret
aas
add
add
add
hlt
push
ljmp
sub
cmp
push
movsb
add
repz
add
aaa
mov
inc
mov
cmpsb
jp
test
mov
mov
fcomip
push
sub
cmp
sbb
test
adc
mov
jne
nop
mov
or
xchg
nop
in
xor
push
mov
mov
cltd
inc
xor
fisttpll
inc
push
adc
and
mov
mov
inc
xchg
cmp
inc
aas
daa
xchg
push
push
aad
aaa
add
test
ficompl
fmull
or
std
push
daa
insl
jl
fists
clc
nop
jg
pop
or
repz
pusha
cmp
test
lods
cmp
pop
test
cmp
jge
les
stos
inc
pop
add
mov
das
dec
mov
inc
cmc
mov
jno
and
or
xchg
hlt
or
lods
and
shll
push
xor
jg
fists
inc
mov
ss
sub
stos
cmpsl
fadd
mov
sbbb
pop
xor
fndisi(8087
mov
dec
dec
ss
mov
out
add
fists
push
cmp
inc
inc
mov
scas
pusha
mov
lods
jmp
sbb
std
mov
jg
cltd
cmp
pop
push
push
jmp
rorl
dec
out
push
mov
ljmp
fistpl
jp
cwtl
cmp
loope
iret
add
or
gs
xor
pextrw
inc
pusha
pop
and
ljmp
or
in
sub
add
es
clc
jmp
fcoms
out
pop
xor
xor
or
sub
shrb
popf
mov
int3
pop
push
bound
mov
mov
sbb
xchg
pop
sub
cli
lahf
je
xor
fists
mov
mov
fwait
sbb
xchg
mov
mov
sub
lods
inc
xchg
push
and
pop
mov
adc
pushf
repnz
adc
sub
popl
adc
push
xchg
pop
mov
out
leave
inc
js
push
sub
lahf
mov
int
loope
lcall
mov
mov
jp
mov
dec
rcrl
xlat
dec
aaa
pushf
rcrb
mov
mov
mov
int
daa
push
cli
nop
xchg
pop
add
into
add
lock
outsl
xchg
and
notb
enter
xchg
popa
clc
jmp
add
scas
arpl
dec
loope
push
xchg
or
pop
cmp
xor
mov
pop
mov
adc
and
pop
out
outsl
add
xchg
inc
fcomps
sub
dec
std
and
pop
fldl
dec
mov
cmp
dec
inc
lret
sbb
pop
xor
inc
shll
mov
ficoml
or
sub
push
inc
test
dec
iret
sub
push
sbb
int
cli
pop
pop
xor
cmp
mov
shlb
iret
xchg
movsl
rcl
hlt
xchg
mov
jmp
jmp
and
dec
popf
mov
call
push
loop
xor
push
je
mov
fstpl
inc
negb
cmp
call
mov
test
sarl
mov
mov
mov
aam
fs
jge
xorl
push
pushf
adc
and
negb
dec
test
dec
arpl
mov
ljmp
xchg
jmp
pop
lods
arpl
imul
inc
xchg
notl
mov
ret
push
jmp
lahf
jbe
loope
in
daa
ret
cmp
mov
xchg
push
orl
lret
push
jnp
add
or
lods
xchg
test
mov
out
lcall
repnz
adc
xlat
lods
call
xor
xor
mov
xchg
in
int
stos
adc
stos
mov
sbb
dec
and
notb
adc
repnz
into
cmp
mov
jb
sbb
sti
mov
cmp
cltd
addr16
mov
push
cmp
mull
addr16
and
and
rcrl
out
inc
fildl
mov
clc
pop
jb
mov
mov
and
hlt
adc
mov
mov
mov
fldcw
inc
mov
cmp
jl
mov
adc
mov
icebp
xor
pop
fs
mov
scas
adc
int3
push
push
mov
pop
mov
scas
movsl
xchg
cli
or
cwtl
sbb
add
in
scas
pop
inc
adc
mov
nop
jp
push
cmp
gs
pusha
add
add
add
add
pop
test
aam
lahf
pop
dec
sar
adc
xor
test
add
inc
out
divb
aas
es
sahf
adc
scas
push
ljmp
stos
dec
iret
pop
loopne
cwtl
add
push
mov
pop
cmpsb
and
xor
stos
cli
add
cmp
jo
jo
fldl
jo
sub
pop
outsb
outsb
das
in
fmuls
xchg
int3
and
sub
xchg
push
popa
jo
jae
xchg
sub
stos
and
sub
mov
shlb
lock
setno
repnz
or
aad
das
xor
pop
dec
pop
in
mov
and
push
xchg
pop
scas
inc
shll
cmp
daa
mov
push
jmp
and
sub
xor
mov
fimuls
and
sbb
imul
adc
cmp
lcall
xchg
xor
adc
cmpsl
rcrl
loope
rcrl
orl
cmp
add
mov
sub
cltd
push
dec
mov
sbb
inc
adc
xchg
lods
push
fcmovbe
scas
pop
xchg
xchg
adcb
jo
pop
stos
test
sbb
sub
or
test
in
arpl
jmp
and
pop
or
imul
int
adc
mov
pusha
testl
inc
jecxz
dec
cmpb
stos
fdivrs
cmc
pop
mov
push
dec
test
clc
jge
xor
push
mov
aaa
outsb
jge
sub
add
lret
lods
sub
jmp
clc
jne
or
mov
adc
inc
pop
repz
xchg
pop
cmp
jge
pop
pop
or
push
and
mov
and
inc
arpl
sahf
jl
call
es
stc
dec
dec
add
mov
addr16
push
sbb
pushf
pop
pop
push
icebp
in
das
movd
dec
dec
pop
jge
fcmovu
sub
jp
clc
pop
lock
mov
repz
or
push
xchg
push
adcl
das
adc
adc
mov
cmpsb
arpl
loopne
out
add
arpl
cmp
push
mov
xor
ficoml
sbb
fnsave
mov
mov
dec
out
cmove
add
adc
fidivrs
mov
mov
mov
or
add
jge
xchg
lret
lds
imul
sub
addl
iret
adc
ret
jno
xchg
jp
lahf
sahf
dec
sbb
insb
inc
rcll
outsb
out
fcmove
mov
mov
xor
cmc
test
pop
or
xchg
mov
add
and
test
inc
movsl
inc
outsl
flds
fwait
rcll
movsl
or
arpl
aad
sub
out
int3
and
mov
and
xchg
xor
xlat
fyl2xp1
call
xor
dec
lea
popf
push
repnz
es
ret
leave
dec
push
das
cltd
popa
pop
add
test
mov
andl
mov
loop
dec
xlat
dec
push
pop
pop
sbb
xor
les
push
dec
or
dec
rcrl
aad
aad
fdivrs
lcall
or
inc
mov
push
sub
cwtl
mov
inc
push
push
adc
cmp
ret
cli
fstp
sub
xor
sub
cld
pop
xchg
jo
out
jne
test
stos
pop
sti
ret
lock
adc
bound
subb
es
sbb
cmp
fistl
subb
adc
test
jle
push
stos
jmp
shrb
scas
sub
scas
cli
shrb
ficoms
scas
andb
add
jo
push
cmp
sub
data16
loope
enter
pop
repz
mov
rcrl
jg
imull
or
subb
jl
cli
or
out
sti
shll
xchg
push
inc
imul
lret
je
shrb
mov
dec
fistl
or
pop
mov
rorl
mov
xor
or
cmp
neg
lcall
cltd
out
mov
test
aaa
add
stos
push
mov
mov
ljmp
mov
xchg
mov
fcmovnb
push
mov
mov
sub
outsl
pushf
dec
xor
dec
int
fs
loope
inc
shl
push
iret
ret
inc
add
mov
bound
outsl
test
xor
push
mov
sbb
push
sub
push
add
add
add
push
push
lret
mov
mov
add
repz
add
cmp
pop
xchg
mov
pop
inc
mov
nop
jmp
cltd
jns
push
dec
out
in
loop
xchg
das
fsubr
cmpsl
daa
std
movsl
mov
rcrl
shll
dec
jns
in
xor
int3
xchg
adc
ficomps
bound
and
lds
data16
pusha
mov
and
shr
lret
mov
aad
movsl
and
popa
add
fdivr
pop
cmp
sub
push
sahf
jnp
cmp
mov
popa
lock
adc
in
fs
ud1
ret
ficoms
jbe
pop
inc
gs
outsl
cmp
mov
sub
in
and
ss
jl
push
pop
in
sahf
testb
inc
cld
es
push
and
xchg
or
mov
dec
inc
out
packuswb
mov
or
sbb
mov
into
ljmp
aas
mov
popl
cmp
cs
adc
sbb
shlb
xor
aaa
jne
xor
or
not
test
adc
xchg
into
push
xchg
bound
pushf
int
rol
mov
or
in
test
in
je
aaa
mov
hlt
mov
scas
loop
insl
xlat
cmp
push
xor
mov
fldt
xor
leave
mov
pop
or
lret
ficomps
cmp
and
mov
sub
mov
xlat
pop
push
or
jge
dec
add
mov
and
je
inc
mov
xor
ja
cwtl
mov
mov
fst
xor
or
pop
lock
out
inc
pop
mov
mov
dec
outsl
je
push
and
gs
fwait
xchg
bound
push
xchg
xor
mov
push
outsb
pop
aaa
jnp
mov
adc
cmp
pop
jb
push
mov
or
fbstp
dec
pop
daa
or
or
add
mov
inc
pushf
pop
es
push
sbb
les
loopne
sahf
adc
inc
es
lcall
mov
imul
sub
fidivs
xor
test
and
lods
aam
xor
xchg
mov
inc
and
scas
jl
cmp
ss
or
inc
push
cmp
cmpsb
sub
jmp
cltd
hlt
cmp
mov
dec
add
add
adc
iret
adc
jae
mov
imul
xchg
and
pop
sbb
arpl
jns
out
ret
xchg
sub
out
jbe
aam
inc
jl
fs
push
mov
loope
jb
in
mull
jecxz
cs
sbb
mov
movsb
fimull
cmp
std
inc
cld
mov
adc
sbbb
xor
inc
lods
imul
mov
fbld
adc
xchg
stos
test
add
push
lock
ror
mov
sub
jg
jmp
mov
dec
sub
mov
hlt
inc
or
fisubs
sbb
enter
jg
adc
cltd
lahf
fstpt
mov
xchg
pushf
iret
sbb
flds
in
test
mov
pop
and
cmp
jle
cmp
sub
sti
dec
jno
mov
adc
pop
nop
int3
mov
push
pop
add
sub
outsl
cmp
out
lret
cmc
dec
pop
and
sub
in
scas
test
or
psrld
or
xchg
rcrb
mov
shll
roll
xchg
push
push
aad
ja
add
pushf
fdivrs
fisttps
jb
mov
clc
push
lods
andb
bound
je
pop
mov
movsl
scas
mov
iret
enter
dec
repnz
mov
jl
jno
jmp
mov
mov
mov
mov
hlt
xchg
pop
push
add
inc
fistl
mov
inc
insl
out
xlat
adc
mov
add
xor
mov
cmc
mov
xor
xlat
leave
pop
sbb
mov
fisubrs
aad
imul
cmp
ret
das
mov
push
cmc
inc
adc
push
cmp
rcll
ja
arpl
ret
sub
scas
ret
adc
inc
mov
or
jmp
cmp
arpl
jp
out
sbb
pop
mov
addb
add
daa
cmp
mov
and
xor
add
inc
jns
test
mov
dec
sub
mov
mov
adc
sbb
pop
mov
out
xchg
mov
in
mov
cmp
in
leave
cmp
mov
jne
shrl
cmpsl
adc
test
and
fwait
or
jl
mov
add
imul
jp
jno
ret
sub
into
or
sbb
out
enter
inc
ljmp
push
or
test
cli
fs
mov
cwtl
out
ret
push
or
mov
sti
push
mov
shlb
jg
and
dec
lret
jne
xchg
inc
in
hlt
xor
jo
ftst
dec
insl
push
add
imul
sub
aas
xor
add
mov
outsl
jecxz
gs
das
xor
pop
xor
or
mov
mov
iret
cmp
hlt
jge
cmpb
repnz
xchg
and
pop
fldcw
mov
pop
mov
ss
jbe
and
ss
fidivl
in
jae
scas
mov
lds
mov
dec
xlat
sbb
fdivl
negl
cmp
push
or
imul
jecxz
fisubrl
jle
sti
int
inc
sti
lea
add
add
sbb
mov
ljmp
sub
mov
push
jg
dec
push
mov
pop
iret
mov
sbb
fcomi
sahf
dec
push
minps
iret
xor
push
cltd
jecxz
lea
xchg
xlat
lock
mov
cmc
mov
ja
inc
add
cmc
in
xchg
roll
shlb
xor
shr
mov
push
hlt
js
push
inc
loopne
xchg
lods
sahf
pop
ficomps
xorw
mov
cmp
mov
push
inc
xor
test
test
add
add
rclb
popa
outsb
addl
jle
lods
mov
mov
push
imul
xchg
push
pusha
and
xchg
add
push
mov
lods
fwait
insl
lahf
xor
sub
dec
jmp
or
inc
jp
roll
jns
mov
outsb
mov
je
mov
dec
cmp
push
cwtl
jmp
cmc
push
sub
jp
nop
cmp
lock
push
insl
mov
gs
testb
add
or
aaa
push
popf
xlat
lock
in
cli
xchg
lods
jge
mov
vmovntps
xor
test
pop
sbb
sub
push
cli
stc
jnp
lcall
outsl
cmp
and
pusha
adc
push
mov
fnsave
jl
les
out
fcompl
fcmovnb
mov
or
lea
test
mov
pop
in
adc
push
stc
aad
enter
es
arpl
lahf
mov
inc
push
jge
jmp
decb
inc
stos
fidivs
mov
sbb
orl
js
dec
leave
jo
addr16
test
inc
icebp
imul
lock
int3
inc
mov
decb
mov
in
mov
cwtl
popf
outsb
mov
jnp
xchg
into
or
mov
mov
jmp
jg
mov
sbb
xchg
jg
dec
jl
jae
add
and
mov
mov
jnp
clc
loopne
js
fwait
or
xor
or
fcmovne
mov
pop
push
pop
or
push
jmp
add
mov
xchg
jl
and
pop
push
push
cmpsb
pop
xchg
inc
nop
imulb
sbb
test
cmp
icebp
mov
push
rorl
inc
imul
sub
leave
push
je
ret
pop
sub
data16
mov
inc
hlt
sahf
out
rol
iret
gs
sub
out
jg
adc
shlb
out
jne
ja
push
push
add
jae
stos
inc
out
mov
jecxz
data16
and
pop
push
pop
and
sarl
cmp
pop
test
movsl
arpl
jnp
addb
adc
fs
jg
push
inc
mov
add
stos
sub
popf
sub
sbb
or
lea
mov
inc
dec
popa
cmpsl
mov
iret
push
jp
pushf
in
inc
insl
and
push
pop
jne
lods
pop
into
xchg
gs
sbb
jmp
mov
push
shr
lret
jge
scas
pop
fwait
loop
clc
sahf
dec
jle
add
add
add
clc
data16
mov
out
fcmove
xor
add
repz
add
int3
insb
dec
outsl
enter
outsb
cwtl
jbe
mov
and
xlat
negl
sub
jp
scas
arpl
repnz
jne
push
mov
mov
ss
and
mov
divb
loopne
ret
inc
push
pop
lock
adc
ret
mov
out
mov
inc
jecxz
inc
cs
jmp
lods
jle
inc
pop
xor
jmp
shlb
add
ja
xchg
test
insb
pushf
aas
adc
mov
xchg
rcll
aas
jmp
jnp
sub
adc
and
jg
aas
mov
sbb
imul
dec
sub
jns
aam
data16
jb
cmpsl
inc
xor
pop
mov
fadds
mov
enter
inc
je
daa
outsb
int3
push
jb
jb
jle
in
jg
cmp
pop
stos
aam
xor
lods
arpl
and
xor
jne
ljmp
movsb
mov
hlt
loop
jg
scas
sub
enter
inc
sub
mov
movsl
aam
jb
cld
sub
jl
jecxz
fsubrl
xchg
push
loopne
cli
lret
inc
fldenv
cmc
mov
cmp
mov
sbb
jecxz
jmp
test
stc
aaa
test
daa
jecxz
jge
pop
ret
test
add
adc
mov
push
pop
pushf
filds
data16
das
push
cld
sbb
addl
das
dec
and
fstps
pusha
jae
jns
fst
loopne
xchg
sub
ffreep
sbb
lds
rol
imul
cmpsl
pushf
push
mov
add
jbe
jmp
adc
xor
aad
out
jne
outsb
xchg
pop
pop
pop
mov
je
jmp
fists
mov
and
add
fstps
xor
test
rol
cmovg
mov
xchg
test
jge
lret
push
mov
imul
dec
jecxz
jl
sub
adc
pusha
xchg
cltd
xchg
lcall
push
movsl
add
es
mov
cmpl
ss
adc
and
sbb
cmpw
pop
clc
test
fisttpll
jmp
adc
ja
xchg
ljmp
iret
popf
inc
fdivrl
jnp
and
or
sub
cli
mov
xlat
movb
push
bound
ret
ret
divl
xchg
imul
adc
das
jg
lahf
lods
add
cs
or
mov
mov
xchg
xchg
test
cmpb
xor
xchg
fldenv
jge
hlt
mov
push
xlat
xchg
jb
rcll
jp
jo
shrl
les
fildll
jno
cld
insb
pop
dec
pop
sub
jge
aas
push
mov
xor
cmp
push
lods
lret
das
jno
xor
cmp
and
add
pop
jl
jbe
aaa
xchg
pusha
jmp
fstl
std
test
pop
push
push
scas
lret
ljmp
push
inc
stc
mov
aas
add
jmp
jp
or
cmpsl
das
cmc
mov
push
ret
shrb
jg
cmp
scas
jbe
jp
or
push
repnz
pop
cmc
xchg
adc
dec
sub
imulb
sbb
scas
mov
xor
jg
add
pop
mov
push
push
nop
cmp
cmp
add
int
scas
clc
pop
sub
add
push
pop
xor
je,pn
lret
xchg
int
aam
inc
cli
fbld
or
push
pop
aas
jb
mov
or
daa
out
xor
mov
push
test
xlat
sbb
xchg
les
mov
lret
shrl
mov
insl
adc
int3
imul
fwait
arpl
ja
outsl
fstl
or
outsl
stc
sub
dec
jmp
push
fldenv
fnsave
adc
scas
test
mov
mov
adc
and
sbbb
aam
cli
mov
xor
pop
or
in
bnd
inc
js
mov
and
jmp
jecxz
or
sbb
push
hlt
pop
pop
fdivrl
xor
movsl
adc
shrb
sbb
dec
mov
lret
fprem1
cmp
add
push
adc
mov
or
inc
ljmp
and
adc
add
iret
cmp
outsl
jecxz
push
insl
inc
or
add
repz
add
cmc
ret
add
nop
std
adc
cmp
push
subb
test
ds
xor
std
sub
lret
lods
ds
jecxz
jnp
inc
out
shr
cli
xor
cmp
aas
pop
mov
inc
addr16
push
cld
loope
idivl
pop
pop
add
outsb
stc
ret
jnp
mov
loopne
mov
lods
cmp
fistpl
cmpsb
adc
or
dec
jge
fnstenv
xor
add
cmovg
adc
or
cli
out
fisubs
mov
jno
jle
xor
mov
call
mov
sub
lea
lods
test
jle
push
loope
cmp
in
mov
jno
pop
adc
ds
mov
push
adc
xchg
or
push
in
xchg
nop
push
ficoml
in
inc
mov
adc
add
push
dec
les
in
mov
push
pop
push
fidivrs
xchg
adc
int
pop
test
sahf
xchg
push
in
push
push
repnz
adcb
stc
movsl
jp
sub
cltd
xor
jnp
pcmpgtw
push
xchg
flds
fwait
repz
sub
jl
mov
addr16
xchg
xor
test
pushf
popf
adc
fsubs
push
jecxz
lahf
push
mov
repz
mov
insl
test
shll
fmuls
mov
inc
movsb
cmpsl
movsl
xchg
arpl
fs
js
and
mov
mov
das
push
sti
divb
jnp
mov
mov
adc
movsl
jno
sbb
out
and
mov
mov
add
testb
mov
push
cmpsl
fisttpll
jecxz
push
xor
sub
adc
add
daa
das
lds
leave
js
xchg
icebp
fmuls
inc
cmpsb
inc
data16
shll
loop
cld
pop
xor
in
inc
pusha
andl
ret
daa
lahf
push
xchg
cltd
adc
mov
je
mov
mov
mov
xchg
inc
dec
lret
arpl
add
pandn
cmp
not
movsl
push
sub
ja
cmp
sbb
cmp
repnz
jbe
out
in
cs
push
andb
loope
shrd
sub
jg
or
sahf
lahf
pop
or
repnz
xor
sbb
or
or
sarb
cmp
lahf
mov
rcll
xor
xchg
bound
sbb
push
sub
push
pop
paddq
sarl
popa
inc
inc
mov
ss
out
pushf
ljmp
push
ljmp
mov
inc
push
imul
sbb
subb
roll
outsl
add
lcall
add
inc
into
cs
in
inc
fisttps
in
sub
xor
xchg
jae
pusha
ficoms
inc
mov
pushf
out
add
pop
add
lods
dec
loopne
out
adc
and
and
scas
and
mov
and
mov
hlt
rorl
inc
stos
adc
rclb
mov
js
test
clc
mov
inc
push
insb
gs
inc
push
repz
insl
mulb
cld
xor
mov
dec
imul
stos
popf
imul
xor
sbb
sbb
xor
pop
jns
xchg
stos
mov
push
sbb
repz
hlt
sahf
pop
push
and
dec
cmc
adc
dec
lret
test
xchg
jle
inc
fwait
inc
mov
enter
jo
push
xchg
je
leave
lret
pop
sbb
in
xorl
mov
inc
push
fisttpll
mov
imul
xor
clc
mov
subl
jae
adc
cmp
push
push
xor
test
dec
or
inc
or
mov
sub
cmp
into
loope
test
and
fsts
mov
rcll
lahf
jg
jno
dec
mov
push
mov
aaa
push
sub
push
daa
dec
mov
lock
movsb
jns
mov
outsl
out
inc
rorl
or
in
inc
sbb
sub
mov
mov
popa
es
xor
out
aad
out
cmp
or
das
in
in
dec
and
push
insb
or
sbb
nop
insl
pop
fwait
movsl
add
cli
test
pop
imul
pop
movsl
add
adc
data16
lcall
enter
imul
inc
aas
lods
cmp
rcrb
push
sbb
add
add
add
lea
imul
fcmovnb
adc
in
or
add
repz
add
sarb
add
dec
stos
jns
dec
fxch
leave
pop
imul
pusha
xchg
rcrb
leave
mov
xor
and
out
jmp
pop
add
cltd
scas
mulb
ror
xchg
lret
inc
fldt
push
or
xchg
push
idiv
adc
lock
cmc
sub
dec
inc
mov
test
rclb
call
adc
sub
mov
lock
adcb
inc
ss
sbb
insb
scas
ljmp
imul
pop
dec
mov
pop
xchg
iret
mov
pop
cmp
in
popf
into
mov
jb
ss
and
adc
mov
aam
test
xchg
pop
dec
cmp
mov
out
jno
int
int
out
mov
out
jns
inc
pop
push
adc
mov
cmp
in
in
xchg
jno
and
ret
icebp
orl
lret
std
loope
in
adc
pop
ds
jo
and
jb
adc
xchg
or
sub
xchg
inc
stc
xchg
mov
je
add
jbe
insl
les
pop
loope
pusha
outsl
test
ds
enter
xchg
sti
push
mov
jl
xchg
cmp
jo
lahf
cmp
mov
outsb
jno
cmp
cs
xor
stos
out
mov
xchg
xor
dec
add
sbbl
mov
rcll
pop
inc
rcrl
mov
adc
sbb
fldt
and
mov
sub
and
sti
xor
rorb
mov
adc
mov
mov
jo
call
push
das
or
xor
jo
mov
dec
in
mov
push
loopne
daa
inc
add
adc
xor
push
and
mov
cltd
dec
jbe
aaa
jo
sub
xchg
mov
stc
sub
add
pop
inc
subb
inc
or
xor
adc
mov
xchg
dec
mov
push
int3
add
mov
loop
cltd
xchg
jl
mov
adc
and
fists
push
cld
mov
ljmp
cmp
and
ljmp
pop
jp
add
popf
imul
mov
pop
repnz
into
inc
aaa
icebp
out
je
clc
xchg
in
andb
movsb
in
imul
mov
cmp
shrb
inc
ss
mov
out
add
cmp
xor
jl
sahf
sub
fs
jmp
call
push
mov
shll
nop
or
mov
popa
pop
imul
loop
loop
pushf
mov
push
xchg
mov
jo
and
fwait
test
jno
outsl
jp
jae
bound
push
iret
dec
and
mov
lock
lods
jge
mov
test
pop
push
xor
bound
incl
inc
pop
ljmp
int3
aas
les
lods
adc
stos
jns
aad
pop
and
cltd
xchg
test
pop
in
xchg
lret
and
and
push
inc
jge
push
jno
and
hlt
fisttpll
or
jle
pop
xor
dec
idivl
inc
and
inc
not
idiv
jp,pt
mov
pop
ret
addr16
mov
pusha
pop
jae
aas
push
inc
jge
sub
xchg
call
movsl
mov
push
js
mov
iret
xchg
sbb
test
mov
jns
mov
ss
sub
add
out
scas
push
fldt
insl
sahf
rcrl
cmp
pop
into
sti
xor
mov
cmp
gs
ljmp
or
call
add
mov
or
add
mov
push
fisttpll
mov
daa
cli
inc
sbb
icebp
shll
dec
jmp
push
sub
inc
jnp
ss
sbb
nop
jo
fldenv
adc
or
stc
out
sahf
les
lods
dec
and
push
sub
cmpsl
popa
xchg
jo
imul
sub
push
jns
inc
push
sbb
cli
insb
imul
mov
je
or
adc
jbe
xor
loopne
add
fsubrl
push
test
xlat
inc
aam
adc
mov
sub
jbe
cmp
jno
add
and
inc
out
pop
out
fcoms
rcrb
push
and
add
add
add
bswap
test
dec
or
jne
cld
movb
repz
add
xorb
daa
aas
lock
or
xchg
fildl
adc
sub
mov
jae
ljmp
adc
cmp
pop
mov
loopne
adc
andb
cmp
jmp
mov
ret
outsb
shlb
push
jae
test
dec
jg
push
adc
mov
cltd
push
std
sbb
push
mov
sub
mov
enter
lods
and
xchg
mov
cmp
mov
adc
scas
sub
mov
xchg
popa
imul
add
mov
mov
pop
mov
movl
fadds
movsl
push
push
into
add
and
cmp
sti
into
decb
lea
push
rolb
xor
mov
fld
pop
lahf
push
out
sbb
push
add
sti
jne
aaa
lret
xchg
dec
jbe
loop
sahf
adc
mov
and
lds
jg
dec
push
sub
adcb
pop
sub
je
cmp
adcl
add
jb
or
clc
add
sahf
pop
jbe
jns
loope
out
dec
cld
mov
lock
ja
cmpsl
out
imul
shll
hlt
add
pop
push
dec
xchg
fisttps
js
jl
mov
aas
dec
test
loopne
mov
das
lods
jmp
sbb
mov
in
dec
push
xchg
into
mov
adc
lahf
adcb
jae
test
out
rcl
adc
mov
int3
inc
cmp
cmpl
xchg
lret
fcoml
fcoml
sbb
data16
sti
daa
xchg
lods
dec
xchg
or
imul
mov
imul
push
scas
sahf
mov
dec
cwtl
mov
std
jbe
enter
loope
or
cltd
std
scas
sbb
pop
xor
or
and
sub
clc
cld
sub
push
in
popa
xor
aad
icebp
sub
push
pushf
inc
sbb
mov
ljmp
jne
mov
test
mov
fiaddl
xlat
cmc
jp
xor
lahf
js
pop
cmp
pop
mov
popa
mov
cmp
movsb
hlt
inc
pop
xchg
lcall
or
and
addl
nop
aam
cltd
push
xchg
xor
daa
int3
xor
push
shrl
jae
std
mov
in
and
addr16
mov
or
ret
push
sub
push
outsb
into
mov
int
pop
mov
cli
or
mov
add
mov
int
mov
sbb
xor
cli
test
cmp
or
scas
xchg
mov
subb
pop
push
aas
outsl
popf
loop
ljmp
mov
and
jg
xor
dec
fwait
jno
jmp
sarl
cmp
scas
dec
xor
repnz
iret
pop
cmp
mov
dec
cmp
jg
je
dec
pop
add
in
test
xor
mov
dec
and
xor
js
or
pop
push
inc
jl
into
test
test
add
add
xor
jae
jg
ljmp
stc
inc
cli
or
push
cmp
push
shlb
out
stos
lcall
adc
icebp
ja
std
mov
std
mov
pop
dec
xchg
outsb
repz
imul
andl
add
mov
cmc
dec
shlb
pop
popa
sub
clc
sbb
sub
idiv
gs
inc
mov
or
fwait
push
shll
cmpsb
adc
xchg
jns
jnp
ret
out
lcall
cmpsl
cmp
bound
xchg
andb
sbb
pusha
push
cmp
xor
mov
lds
xchg
mov
out
cmp
repnz
testl
xchg
ja
or
insl
clc
cmp
lret
dec
jecxz
xchg
mov
xor
lods
mov
xchg
arpl
adc
adc
xlat
or
push
faddl
push
xor
fucom
popf
or
stos
es
stc
push
jl
mov
gs
pop
xor
ret
sub
sarl
xor
push
and
or
cmpsl
scas
fstpl
cli
inc
and
dec
imul
jbe
scas
cmp
mov
fisubl
xchg
mov
loop
inc
jecxz
xor
push
loop
in
sbb
stos
push
cmp
iret
or
mov
add
add
jg
cmc
or
js
adc
out
lret
add
repz
add
xor
and
push
add
dec
xchg
push
xor
sbb
xlat
movsl
pop
inc
push
cmp
xchg
icebp
xchg
fcomp
lcall
dec
scas
ret
out
inc
xchg
ret
shl
jle
aam
cmp
pop
inc
mov
addr16
and
and
xchg
cli
inc
mov
mov
or
inc
mov
fmuls
aam
stc
cs
test
ss
ficompl
dec
mov
push
popa
and
insb
rcrl
cmp
dec
dec
add
and
mov
iret
fnstenv
mov
fisubs
cmp
out
int3
jp
jbe
xchg
leave
jl
outsb
repz
xor
cmp
lret
inc
clc
jbe
jae
lods
push
outsb
mov
mov
or
dec
into
rol
add
aad
push
insl
fidivl
and
fs
outsl
dec
mov
movl
fmull
cs
outsl
fstl
push
push
add
decl
xchg
push
xor
roll
stc
mov
mov
pusha
cmc
push
aad
insl
mov
ret
add
test
andl
push
mov
in
insb
sub
add
adc
push
inc
lock
mov
mov
mov
add
and
mov
cltd
stos
aad
imul
daa
or
pop
inc
iret
movl
ret
imul
and
push
sbb
mulb
das
add
idiv
xchg
fildl
inc
enter
or
jmp
insb
or
sub
cmp
xor
rcl
stos
push
clc
call
ss
xchg
cmp
lea
or
jecxz
cld
iret
mov
push
popf
in
popf
js
jo
mov
lret
push
lcall
mov
pusha
mov
pop
mov
jmp
in
fs
popa
jle
fs
xor
mov
in
cwtl
dec
mov
push
enter
pusha
adc
dec
mov
in
push
out
cmpsb
inc
jno
xor
cmpsw
addr16
jmp
lea
add
mov
dec
cltd
xchg
loopne
cmpsl
mov
stos
test
fisubrl
test
hlt
hlt
xlat
cmp
ficomps
scas
lret
sub
ss
jl
dec
mov
popa
fs
add
rcl
out
mov
ret
cwtl
je
dec
add
repnz
popf
out
mov
adc
roll
xchg
inc
cmp
mulb
sbb
inc
push
out
jbe
inc
test
jecxz
stos
and
xor
je
inc
adc
jle
shlb
out
scas
push
aas
pop
xchg
xor
fdivrl
xor
or
stos
popf
cmpsl
faddp
xchg
sbb
or
push
pop
out
sub
jb
shrb
jo
lret
movsl
cmc
add
imul
sub
out
roll
lods
mov
nop
pop
inc
repnz
push
and
aas
xor
arpl
in
lret
xlat
fdivrl
fcoms
out
and
mov
pop
jb
pop
cmp
repnz
inc
xor
loopne
mov
in
sbb
fwait
jg
push
leave
mov
push
push
mov
insl
outsl
stos
add
frstor
in
pusha
and
push
add
push
cmp
jbe
out
add
fisubs
push
es
xchg
lods
push
js
and
jle
mov
add
mov
rol
sbb
and
scas
add
add
sub
mov
scas
enter
xor
or
xor
adc
les
jo
sbbl
loopne
mov
fdivrs
aad
mov
inc
std
insl
cmpps
fdivr
js
lahf
popa
bound
imul
and
inc
negb
sbb
cmp
shr
mov
pop
es
cmpsb
jns
fs
out
fwait
xorb
pop
out
or
sbb
xchg
les
pop
stos
aad
pop
sahf
push
je
rol
jae
mov
pop
xchg
arpl
jle
cs
in
in
je
jle
lahf
inc
es
inc
pop
in
xor
sti
sti
test
into
loope
xorb
aas
fisttpll
cld
jge
mov
sbb
fwait
inc
adc
mov
xor
mov
pop
aas
scas
jbe
push
sub
scas
adc
icebp
ficoml
sbb
jl
push
lcall
and
push
sbb
sbb
jmp
mov
repnz
movsl
push
mov
and
sbb
das
out
jne
push
sub
cmp
jns
cmc
pop
xchg
mov
arpl
int3
pop
add
add
add
outsb
out
lds
pusha
ss
loop
add
repz
add
flds
xchg
pop
lea
andl
gs
fisubs
dec
inc
ljmp
movsb
inc
fisttpll
ret
sub
mov
cmovns
mov
inc
aam
mov
fmul
test
bound
test
or
inc
mov
mov
xchg
addr16
enter
add
imul
fcompl
xor
shll
inc
adc
jae
mov
arpl
fdiv
leave
xorl
mov
cs
inc
xor
das
push
daa
xor
dec
sub
call
inc
in
aaa
aam
mov
out
in
push
and
loope
inc
outsb
mov
sub
lcall
incb
xor
test
xchg
dec
xchg
fnsave
jb
pushf
sub
stos
lea
repz
shl
inc
jno
hlt
shrl
int3
shr
insl
int3
sbb
iret
adc
pop
mov
cmp
pop
pop
arpl
sbb
sbb
iret
pop
gs
sbb
dec
xchg
push
add
jecxz
mov
add
clc
scas
pop
mov
and
xlat
hlt
add
insl
decb
in
loope
mov
movsl
xlat
push
mov
sbb
push
or
inc
jge
cwtl
and
add
loopne
in
and
mov
ljmp
lea
ljmp
rcll
mov
roll
stc
aam
mov
subb
mov
xchg
js
xchg
sbbb
xor
xchg
push
jmp
cmpsb
movsl
mov
mov
mov
add
and
add
fcmovb
sbb
lret
push
rcr
dec
fisttpl
push
es
mov
cmp
fisubrl
mov
fcompl
aad
iret
iret
lock
pop
jae
mov
dec
sahf
add
mov
mov
faddl
add
test
and
mov
scas
fistl
sub
dec
enter
xchg
xchg
test
bt
in
cs
pop
loopne
leave
adc
or
xor
fildl
mov
sub
jns
inc
push
xchg
add
jno
hlt
xor
xchg
adc
out
shlb
das
xor
fwait
inc
repz
xlat
push
stos
jmp
mov
cmp
rolb
ficompl
pop
into
jb
insb
push
inc
rcrl
aam
lea
imul
inc
cwtl
push
cltd
dec
rorb
mov
imul
mov
pop
adc
xchg
imul
dec
pushf
mov
and
sub
xchg
inc
repnz
fld
push
cmp
sbb
jle
mov
test
jge
in
inc
jb
les
or
jae
rorl
mov
sbb
stc
jge
jge
push
pop
sbb
cmp
jb
xchg
aas
cmp
aaa
lahf
lods
inc
xchg
xchg
add
push
xorl
sbb
xor
and
jo
gs
push
inc
mov
inc
jno
test
mov
mov
push
mov
out
mov
adc
les
iret
out
rol
jle
stos
sbb
mov
jno
cmp
mov
ljmp
shl
int3
xchg
cltd
sbb
adc
shlb
jg
jnp
mov
arpl
xchg
xchg
or
ds
pop
mov
sub
in
stos
push
push
sub
and
decb
xchg
pop
cmp
imul
rcrl
pop
add
and
add
add
push
gs
or
jl
mov
mov
and
adc
dec
shll
lahf
icebp
outsb
and
mov
xchg
lcall
loop
push
dec
and
ret
mov
mov
sbb
xor
mov
mov
mov
std
push
orb
jno
dec
inc
scas
in
jge
jb
xchg
mov
lret
stc
push
loop
cwtl
popf
pusha
mov
aas
in
shlb
dec
add
and
and
dec
push
jb
push
pop
sbb
sub
popl
loopne
std
lcall
loope
pop
dec
pusha
bound
fs
fdivrs
mov
out
pop
lahf
aas
lret
jo
push
or
push
cmp
aaa
lret
or
cmc
mov
imul
mov
shrb
sub
into
adc
jl
pop
fildl
aas
out
shlb
add
lret
lods
xlat
sti
mov
fistl
repz
add
mov
xchg
or
call
inc
xor
pop
pop
fnstcw
mov
int
inc
lahf
outsb
xchg
inc
mov
add
push
fidivs
rclb
mov
sub
xchg
inc
xchg
or
mov
push
lcall
lret
movsb
test
jmp
push
jl
rcll
sbb
lret
dec
xchg
sub
cwtl
sbb
pop
mov
ficompl
insl
leave
push
mov
ret
dec
inc
sub
jmp
mov
shl
out
xor
pop
push
data16
fisttps
daa
jnp
inc
cltd
fs
std
rcll
out
std
push
aaa
fisubs
std
adc
sub
sti
lock
pop
cs
loope
add
jne
repz
fsubp
aam
jbe
inc
adcb
push
mov
push
xor
push
fwait
dec
iret
dec
pop
stos
cli
adc
sub
inc
es
sti
fistpll
mov
subb
test
fidivs
lret
sub
into
cwtl
push
jle
ljmp
push
ljmp
into
addb
aad
xchg
sbb
rcr
lods
jmp
cwtl
dec
cmp
scas
jl
inc
bound
out
scas
cmpsb
mov
loopne
fistpl
cli
xor
dec
imulb
push
sti
xchg
rcl
int3
xchg
xchg
lods
push
push
jle
jbe
in
arpl
pusha
imul
loope
int3
dec
dec
mov
jo
xlat
xorb
mov
int3
nop
rorb
andb
cmc
jl
mov
rcrb
faddl
flds
iret
dec
je
jb
subb
mov
sub
fists
mov
pop
jecxz
loop
add
mov
test
cmp
sub
out
int3
repz
and
pop
or
cltd
cmp
sahf
mov
mov
sub
mov
or
cmp
pop
scas
adc
jecxz
stc
add
inc
xchg
mov
test
stos
cmp
inc
sahf
jne
ja
hlt
stos
clc
mov
inc
xchg
pushf
ret
pop
movsb
mov
sub
jo
adc
jle
lret
adc
int
mov
push
mov
jns
mov
insb
sbb
test
cs
mov
jbe
xor
pop
sbb
jp
inc
jge
sbb
add
stos
sub
dec
shrl
and
inc
push
rorl
insl
push
daa
pand
cld
lea
sub
je
roll
aad
andl
imul
inc
mov
int3
ret
mov
dec
lret
inc
in
aas
sbb
shr
mov
jmp
aam
fadd
sub
js
mov
inc
movsb
lods
adc
mov
nop
cmp
rcll
out
mov
imul
pushf
pop
sbb
shrb
dec
jb
mov
push
mov
out
push
or
sbb
xor
pop
sub
fsubrp
adc
mov
jl
and
push
into
sub
loopne
mov
scas
mov
cmpsb
sbbb
pop
imul
lock
push
repz
loop
outsb
dec
mov
std
push
filds
repz
xchg
inc
roll
xchg
xchg
ss
pop
cwtl
iret
dec
insl
sbb
rorb
adcl
pusha
popa
dec
mov
or
xchg
fcom
mov
lds
clc
stos
xor
outsl
in
faddl
sub
push
jne
mov
mov
fs
out
pusha
pop
push
mov
daa
xorb
xor
xchg
push
lods
xchg
cltd
jl
sti
pop
leave
pop
cltd
adc
jl
jle
inc
add
sub
mov
hlt
pop
pop
sbbb
int3
or
outsl
mov
push
xlat
inc
jmp
mov
filds
sarb
lods
mov
cld
xchg
adc
aam
jl
dec
inc
daa
mov
adc
mov
add
lock
loop
sub
lar
pop
jbe
imul
aam
adc
and
ja
inc
rolb
fwait
jg
dec
push
mov
dec
mov
mov
wbinvd
pushf
fimull
add
cmp
dec
xchg
mov
or
dec
xor
or
pop
adc
fimuls
xchg
cltd
push
mov
test
ja
push
repz
add
add
add
loop
bnd
fcomi
mov
stc
nop
mov
add
add
add
inc
rcrl
cmp
adc
cmp
shl
loopne
dec
negb
dec
stos
vaddps
mov
pushf
jle
popa
jl
sti
les
sub
sbb
movsb
in
inc
rol
push
mov
push
or
fs
outsl
mov
fisubrs
rolb
sub
xor
sbb
inc
mov
je
sahf
stc
cs
xchg
in
addl
out
push
inc
jns
fidivrl
loope
aad
pop
bound
enter
push
enter
or
cmp
mov
mov
imulb
repnz
shrb
fcoms
cmpsb
mov
pusha
inc
mov
mov
ss
dec
dec
dec
jmp
push
push
sbb
leave
movsb
mov
jp
cmpb
aaa
ret
xor
es
cs
adc
inc
shrb
clc
imull
or
xchg
stos
jb
fstp
jb
sti
jge
cmp
ljmp
xchg
aad
push
cmp
je
xchg
imul
sbb
outsb
andb
pop
cmp
iret
sbb
and
aas
xchg
xor
imul
js
mov
pop
push
mov
xchg
dec
jge
push
jl
roll
movsl
cmpsb
cmpsb
aad
sbb
or
jbe
mov
push
iret
fsubp
push
data16
mov
jbe
mov
call
push
xor
jae
lods
sbb
and
jns
pop
jge
out
mov
sbb
jmp
xchg
lcall
add
aas
lds
pop
fildll
int3
lods
pop
orb
mov
cs
jno
test
std
rcrb
xchg
or
pop
bound
int3
dec
adc
dec
push
pop
popf
mov
negl
mov
mov
sbb
xor
jl
xor
mov
push
adc
adcb
imul
loope
ja
gs
inc
lret
scas
fxch
enter
add
icebp
dec
lahf
push
mov
outsb
push
into
push
fstps
pop
sbb
or
into
mov
cli
cmovo
sti
mov
incb
push
fists
xlat
pop
inc
mov
dec
and
mov
or
popa
cs
jg
fidivrs
imul
mov
adc
sbb
mov
mov
lcall
dec
adc
push
stos
notb
and
sub
pop
or
mov
cmp
movsb
or
test
jge
jg
adc
mov
jmp
push
sub
sbb
fs
cmp
sahf
imul
adc
iret
test
add
enter
mov
push
sub
pop
lret
adc
jne
and
push
sub
pop
mov
nop
insl
mov
repz
jge
sbb
enter
pop
mov
and
fiadds
cmpsl
shlb
jmp
scas
and
sub
fldenv
inc
mov
lods
cwtl
xor
lcall
mov
mov
mov
decl
dec
mov
call
in
mov
add
add
outsl
jg
mov
jns
ja
subl
dec
in
xlat
and
sbb
mulb
cld
push
fwait
push
mov
mov
popa
lret
inc
cmp
cmp
mov
add
in
pop
lods
mov
add
xor
jge
or
inc
push
mov
push
addl
jecxz
mov
sti
push
test
std
xor
out
fcomi
fsub
mov
jmp
push
aam
int3
ret
sub
or
rclb
popa
sti
push
dec
dec
adc
mov
and
jecxz
daa
test
lahf
inc
test
nop
scas
stos
sti
aam
cli
xchg
cmp
or
xchg
fidivl
or
jno
fiaddl
jl
sbb
xchg
aas
mov
jne
in
mov
jmp
cmpsl
jg
arpl
pop
imul
insl
fadd
jbe
push
jge
or
cmp
xlat
inc
mov
dec
inc
out
pop
dec
insb
push
leave
push
data16
aaa
inc
scas
enter
out
pusha
xchg
and
xor
cltd
addb
push
idiv
stos
sub
ret
mov
js
in
mov
orb
jg
dec
or
fsubs
test
jg
push
sbb
add
andl
ss
in
inc
adc
add
repz
add
mov
ljmp
cmpsl
mov
or
mov
mull
xchg
lret
lahf
sub
jbe
pop
push
inc
pushf
push
dec
test
out
addr16
push
push
push
cmp
sub
ret
sub
out
fldcw
test
stos
jo
xchg
scas
and
cwtl
mov
repz
push
ret
rcr
sub
lods
hlt
fdivl
dec
cmp
addr16
sub
jae
lret
cmp
push
fisttpl
jne
icebp
jb
sbbl
and
movsl
jge
jmp
fisttpll
cmp
lea
dec
push
jmp
add
cmpl
jp
ss
pop
loop
add
jae
mov
jbe
sub
lock
jmp
imul
popf
mov
adc
mov
lahf
adc
fcmovne
pop
jns
mov
jne
sub
decl
loope
push
popa
push
jmp
cmp
xor
popa
fmul
push
mov
inc
rorb
into
loope
test
mov
outsb
leave
popa
push
adc
fistpll
mov
sub
push
fcmovb
negb
pop
int
mov
inc
ja
push
gs
adc
dec
mov
daa
jge
addr16
cmp
add
pop
cmc
xchg
sub
cmp
inc
int3
lods
lods
stos
fimuls
jo
es
fnstsw
jne
mov
pop
add
xor
into
loop
gs
in
or
inc
fsub
rcll
or
pop
sub
jae
mov
mov
xchg
arpl
std
cltd
xchg
inc
xchg
lds
or
incb
push
aaa
mov
loopne
fwait
lds
jno
dec
push
mull
scas
enter
adc
popa
xor
arpl
mov
mov
fidivl
mull
or
or
cmp
mov
or
xchg
cli
cmp
cmp
mov
repnz
fcmovnb
mov
push
mov
cmp
or
aas
add
scas
daa
mov
cld
lea
sub
cmp
dec
lahf
mov
pop
out
mov
or
jbe
mov
add
sub
repz
popf
sub
incb
sbb
pop
xchg
jns
test
lahf
aas
push
test
stc
push
push
mov
sub
mov
addr16
push
sub
push
lcall
mov
cmp
dec
or
xchg
fsts
out
push
pop
mov
push
cmp
xor
int3
shlb
imul
ret
bound
inc
cmp
addr16
add
js
mov
rcr
in
test
push
ljmp
xor
mov
jns
add
cmp
stos
cmp
ds
fdivrl
lret
std
insl
leave
pop
dec
pop
lea
gs
hlt
adc
outsl
or
fcomp
sahf
fwait
xchg
out
jecxz
nop
inc
mov
pop
push
es
mov
lock
jle
test
mov
in
adc
adcb
add
fcoml
lea
sbb
sub
sub
iret
pop
adc
push
cmpsb
jmp
push
mov
imul
std
xor
xchg
cmpsb
and
test
bound
es
inc
sti
mov
dec
mov
lahf
add
push
push
jnp
jo
cmpsb
arpl
xchg
inc
push
andl
outsb
push
pop
stos
aad
mov
je
dec
mov
scas
aas
nop
or
test
xor
mov
mov
xor
aam
pushf
mov
orb
sarl
jae
or
xchg
fisubrl
dec
and
std
jns
shll
mov
popa
jp
icebp
adc
das
pop
add
int3
out
jo
mov
push
add
cmpsl
jge
cli
jp
popa
inc
pop
roll
dec
stos
std
jge
sbb
ds
xchg
mov
mov
popa
std
lock
cmc
mov
and
fstl
inc
cmp
outsl
mov
mov
sub
inc
sub
jp
mov
mov
negb
popf
xchg
xchg
xor
popf
jp
and
add
in
push
pop
sbbb
decb
or
pop
jae
into
and
adc
lods
add
mov
dec
lods
test
ret
mov
and
lcall
pop
test
xor
adc
add
or
mov
jle
adc
add
add
xchg
rcrb
pop
roll
cmp
or
add
add
jl
loope
mov
mov
xchg
cmpb
aam
movsb
mov
adcb
mov
dec
popa
das
add
adc
jmp
nop
xchg
mov
mov
stos
test
jae
dec
or
inc
into
dec
dec
add
jge
inc
es
daa
add
xor
test
inc
shll
stos
jb
outsb
mov
test
fdivs
push
pop
push
fstpt
pushf
mov
lea
sbb
xor
adc
and
sti
jg
stos
fdivs
or
call
sub
xabort
inc
or
stc
aaa
daa
int
test
mov
xor
adc
add
pop
jnp
cld
out
cmp
cli
xor
cmp
jl
xchg
ja
mov
jmp
fwait
cs
push
outsl
repz
popa
or
mov
dec
pop
std
aas
mov
adc
pop
lods
jb
inc
daa
fisttps
pop
sub
stos
in
mull
popf
test
inc
pushf
mov
add
jno
cmp
sbb
xadd
jmp
sbb
jecxz
loop
in
ds
mov
out
dec
jne
mov
repnz
or
aad
and
cmp
mov
xor
loop
xchg
sbb
jne
dec
hlt
mov
mov
or
pop
jbe
pop
push
xchg
push
scas
mov
mov
xchg
test
inc
repnz
loop
sbb
ret
xchg
mov
mov
or
push
insl
and
xchg
jp
sub
sbb
pop
xor
decl
sbb
inc
push
leave
ret
pop
ret
or
in
xchg
sub
xor
les
inc
inc
js
mov
dec
fwait
subl
addr16
xor
adc
lock
pop
cmp
decl
push
scas
cmpl
add
cmpsb
push
push
mov
xchg
xor
jecxz
in
fcmovne
cs
sub
push
push
repnz
cmp
ret
arpl
jle
xor
push
das
sub
sahf
ret
lods
jb
mov
xor
dec
in
fnstcw
pop
mov
out
add
stc
push
sahf
fldl
and
xchg
clc
jae
or
jmp
movsl
fadd
int
out
mov
and
xchg
scas
adc
mov
sahf
pop
std
mov
int3
imul
hlt
fcompl
lcall
pop
add
lea
lea
shll
xlat
mov
pop
cmp
push
es
pop
das
pop
fnstcw
jnp
mov
rol
mov
add
iret
out
fwait
in
dec
adc
cli
iret
arpl
das
loop
add
lock
dec
clc
jle
dec
mov
loope
mov
dec
push
jno
fidivrl
add
sbb
mov
rcrb
pushf
cmpsl
sub
xor
push
sbb
mov
sarl
rorl
push
mov
in
dec
sub
jns
push
ret
pop
or
addl
inc
jmp
ret
iret
incl
and
push
mov
mov
imul
fnstsw
rol
sbb
out
fwait
repz
jae
pop
pushf
in
stos
pop
dec
jp
mov
adc
xor
loope
mov
mov
pusha
cmc
in
int3
xchg
dec
dec
jge
shl
inc
xchg
or
sbb
fcmovb
test
pop
imul
xor
adc
sbb
pushf
mov
ret
movsl
repz
test
push
cli
or
dec
insl
in
es
pop
pushf
add
sub
mov
sub
push
mov
in
push
stc
inc
dec
addr16
das
add
or
jns
mov
movsb
xor
pop
push
cmpsb
xlat
mov
pop
and
popa
sub
jmp
stos
push
arpl
in
sub
jmp
pop
leave
insl
cwtl
out
pop
cmp
rclb
in
shlb
mov
fstl
inc
leave
icebp
test
test
push
leave
mov
inc
ret
les
xchg
shlb
std
shll
insb
out
pop
pop
lea
lods
in
mov
fwait
pop
leave
scas
inc
test
cmpl
clc
push
jge
adc
sbb
cwtl
popf
dec
faddl
js
mov
and
dec
pop
push
das
add
add
add
xchg
std
repz
inc
dec
fistps
add
add
add
fildll
stc
ficoms
jmp
gs
test
inc
in
sbb
xor
sub
xchg
pusha
jmp
dec
inc
mov
jmp
sbb
cmpsb
adc
nop
or
pusha
jb
push
iret
je
faddl
jge
or
gs
aad
and
lods
repz
scas
in
addr16
inc
movsl
pop
push
mov
pop
int3
mov
push
adc
loope
or
cmp
add
xchg
je
aaa
test
push
ljmp
pmuludq
shr
xchg
sub
clc
ja
mov
pop
or
aas
sbb
pushf
push
inc
fiaddl
jbe
mov
fsubrl
pop
das
lcall
out
fsubrs
in
fmull
push
jl
shlb
add
xor
mov
jg
cld
cmc
and
pop
inc
and
aam
mov
pop
pop
movsb
in
stos
inc
sub
push
loope
add
inc
notl
pop
and
les
push
ss
mov
pusha
out
xor
xchg
jno
xor
pop
and
xchg
and
and
push
mov
sub
or
push
shll
cmpb
mov
dec
and
sbb
inc
test
cltd
adc
cli
add
aas
dec
jge
jae
popl
out
arpl
popf
push
sbb
add
dec
push
fisubs
les
out
xor
lods
neg
or
pop
pushf
cmp
inc
jg
in
je
and
insl
push
scas
ret
ja
sbb
fimuls
jg
fs
hlt
icebp
mov
or
dec
xchg
mov
mov
aaa
jg
ss
sub
add
xor
std
xlat
mov
mov
ret
cmp
or
cmp
lcall
mov
mov
or
lret
mov
stos
adcb
pop
outsb
jb
add
aas
mov
loope
jge
cli
pop
ja
sbb
push
cmc
jo
adc
cmp
int3
orb
cmpsl
jno
mov
iret
jecxz
xor
push
dec
out
mov
in
into
sbb
imul
or
adc
cmp
out
mov
and
aas
mov
push
in
je
arpl
adc
sti
add
imul
xor
stos
pop
cmpsl
loope
je
mov
test
cmp
jl
jo
mov
adc
in
pop
sbb
push
mov
pop
rcll
pop
repnz
inc
or
orl
adc
xchg
mov
in
mov
in
pop
adc
out
push
fmulp
sub
jns
and
std
jno
jne
in
repnz
jp
xor
and
in
mov
fnstsw
push
shrl
xchg
or
sahf
push
adc
push
mov
cmp
cmp
test
cmp
push
xor
frstor
cmp
jne
lret
dec
xor
lods
push
std
fwait
adc
jge
loopne
rorl
outsb
mov
fdivrs
dec
and
in
rclb
push
frstor
mov
jmp
push
dec
mov
pop
push
jg
lds
xchg
dec
mov
cmp
push
cmp
push
cmp
mov
xchg
repz
mov
lea
and
repnz
pop
fmull
mov
cmpsl
mov
lcall
dec
and
jl
sbb
push
lret
out
imul
push
and
push
push
loop
sbb
nop
inc
fwait
push
mov
addr16
enter
loopne
mov
sahf
cwtl
outsb
arpl
inc
ja
fstl
dec
or
repz
or
jmp
pop
mov
add
lods
push
and
fsubl
jbe
push
cmp
dec
inc
jae
nop
mov
andl
mov
sub
sbb
rorb
push
daa
rorb
jne
es
jge
adc
pop
jbe
pushf
es
mov
fsubrs
bound
mov
inc
shll
add
jge
sbb
jmp
mov
mov
jb
dec
int
aas
roll
lods
clc
add
lods
xor
adc
or
sahf
xchg
call
in
imul
cmpb
xor
std
pop
cmc
leave
mov
adc
aam
xor
sbb
add
add
add
les
std
mov
test
insl
xchg
out
add
repz
add
sbb
mov
pop
dec
pusha
or
and
int3
shll
sub
pop
sbb
cmpsl
insb
jl
cmp
jbe
addb
int3
shrl
adc
xchg
out
inc
sub
stc
je
jnp
fwait
outsb
mov
adc
mov
sub
in
rorb
ret
cmpsl
adc
xchg
jecxz
xchg
icebp
dec
loope
imul
dec
xor
inc
xor
mov
pop
push
shrl
lea
jle
repz
dec
sub
xor
lcall
or
or
mov
mov
push
pop
pop
imull
out
ds
pop
outsl
fldenv
push
add
test
int
pop
jne
int
xchg
pop
lds
jno
gs
xchg
out
stos
scas
jb
cmc
push
test
aam
in
je
outsb
imul
int
add
rolb
jae
inc
bound
orb
ss
mov
mov
push
dec
jl
push
xchg
fisubrs
mov
inc
xor
and
xchg
xor
mov
ret
jbe
mov
mov
loopne
out
xchg
popa
inc
scas
rorl
rcll
and
out
pop
out
imul
pop
cmp
sbb
pop
add
cmc
ds
inc
cli
cli
mov
in
lret
out
orl
iret
aas
mov
fwait
repz
test
push
leave
es
ljmp
sbb
mov
sbb
outsb
lea
sti
mov
jo
inc
sub
scas
scas
rorb
je
ret
mov
cmpsb
mov
mov
inc
mov
mov
call
cmp
mov
jae
mov
mov
cmp
mov
das
arpl
and
mov
sub
xabort
mov
imul
nop
decb
decb
shrl
xor
fisttps
pop
xor
jo
push
add
lcall
push
enter
das
pop
fninit
mov
lahf
enter
mov
int
dec
lock
push
imul
movb
rcl
jns
and
aas
test
loope
data16
ds
loopne
imul
les
in
cmp
mov
sarb
mov
mov
dec
mov
mov
and
scas
pop
std
in
pop
sbb
iret
dec
pop
dec
jecxz
daa
sub
or
dec
out
mov
sub
jmp
sub
rclb
xchg
jle
cmp
stos
fisubl
jmp
daa
cltd
aas
lock
sbb
push
mov
je
push
popa
xor
push
cmp
int3
mov
cltd
sbbb
xor
pop
hlt
jle
popf
fildl
xor
mov
fdivs
jp
mov
clc
scas
jl
test
ljmp
jle
lret
adc
jns
dec
pop
mov
or
popf
lock
js
jo
cmp
push
stc
adc
lods
fistps
add
mov
dec
mov
sbb
cmp
cmp
dec
sub
sub
pushf
cmp
lcall
scas
int3
pop
rorl
hlt
inc
inc
dec
dec
cmp
sub
add
js
dec
stc
pop
sbb
and
sub
pop
inc
cmc
gs
std
pop
insl
fstps
push
cmpsl
mov
mov
push
and
rcrb
mov
jno
cwtl
sub
into
mov
scas
or
inc
or
pop
dec
jne
dec
sub
inc
rclb
ss
or
in
xor
xchg
test
shll
pop
sbb
sti
or
add
mov
shl
or
std
push
inc
mov
stos
into
push
xchg
push
cmpsb
pop
es
push
add
imul
insb
out
adc
mov
jle
jnp
xchg
in
dec
popf
jp
popfw
xchg
inc
aam
jb
cltd
and
bound
aaa
jns
sub
sbb
bound
cld
sub
or
mov
outsb
pop
sbb
jns
mov
adcl
dec
pushf
sub
lret
adc
popa
sub
fs
mov
mov
mov
mov
cmp
push
mov
rorl
mov
xchg
mov
xor
add
jmp
mov
mov
aam
sbb
test
popf
sbb
lods
mov
lods
and
inc
shrb
insb
mov
sub
outsb
add
dec
adc
add
add
add
push
dec
shr
jg
push
mov
ds
xchg
add
repz
add
add
jg
mull
iret
stc
adc
cmp
jno
mov
cmpsb
int3
jns
inc
or
push
arpl
sbb
add
push
mov
xchg
nop
lods
add
mov
sar
popf
fcompl
lret
jmp
push
and
or
cltd
and
test
loope
inc
pop
push
lret
jmp
jle
dec
jge
loopne
lret
je
ljmp
pushf
mov
into
pop
pop
mov
icebp
fdivrs
jnp
xchg
cmp
and
xorl
rcll
clc
add
inc
and
inc
lret
sti
cltd
enter
fwait
xchg
mov
cmp
aaa
and
push
in
mov
popa
add
fsts
push
fwait
lods
shll
inc
adc
lds
adc
insb
push
adc
cmp
cli
sbb
xor
je
lret
loop
inc
and
xchg
pop
xchg
inc
hlt
mov
xchg
out
fwait
and
cmpb
push
repz
test
pop
ja
sbb
jg
dec
cli
movb
adc
push
out
push
shll
arpl
test
jb
lcall
mov
sub
adc
or
shl
xchg
cltd
sbb
sub
stos
jge
sub
xor
xor
sub
mov
add
and
fsubl
pop
ss
mov
mov
jg
pop
add
cwtl
das
mov
mov
dec
pop
je
sub
pop
and
sub
jmp
pusha
mov
inc
iret
push
sub
mov
fdivs
stos
add
fs
and
ror
cs
stos
jne
xchg
dec
imul
mov
daa
aaa
pop
int
outsl
dec
popa
cli
notb
movsb
lods
rcl
inc
sbb
inc
xor
mov
xor
push
movsl
insb
pop
jo
cmp
jns
lods
xchg
into
jae
mov
pop
repz
fwait
xchg
jl
jle
cmpsb
xchg
add
lahf
mov
dec
lret
cmp
add
dec
cli
repz
aam
mov
es
push
add
adc
pop
sarb
jb
cld
and
fnstenv
sub
cli
insl
je
or
ss
cli
xchg
fstpl
or
test
inc
dec
mov
repz
xchg
mov
rcl
fidivs
gs
mov
mov
sbb
lods
ss
cmpb
cmp
pop
cld
lret
loop
xchg
or
repz
in
loope
mov
scas
int
fistl
xlat
imul
hlt
inc
pop
iret
aas
inc
bound
xor
push
push
mov
cmpsb
inc
leave
mov
fsubs
cmpsb
popa
sbbb
incl
xchg
mull
rol
push
cmpsl
jmp
fs
and
mov
sbb
cltd
cmp
cmpb
dec
outsl
fistl
or
dec
int
push
xor
out
scas
xor
ljmp
mov
jae
gs
jno
add
arpl
mov
pop
sbb
xchg
sub
push
xor
je
je
in
push
dec
dec
arpl
mov
aas
push
js
jp
loope
jne
dec
pop
cltd
jae
leave
dec
xor
cmp
sbb
or
nop
movsb
in
loop
shlb
enter
out
xor
push
jmp
inc
stc
arpl
push
js
inc
out
and
xor
mov
in
in
xchg
loope
repz
xor
cmp
jb
sub
mov
push
lock
test
rorb
mov
imul
sahf
add
stos
push
push
gs
jae
aas
dec
scas
jae
sti
mov
mov
fwait
or
imul
mov
jl
xchg
pop
ret
xlat
jbe
mov
mov
les
call
inc
sbb
js
test
cmp
pop
add
xchg
push
scas
test
imul
push
sub
pop
and
fdivs
call
aad
dec
mov
push
mov
sti
outsl
mov
das
addr16
add
dec
sbb
sub
xlat
push
and
aas
xor
filds
imul
add
jl
adc
mov
push
loop
pop
ljmp
fistl
in
xchg
dec
addr16
stos
ljmp
sub
das
or
out
mov
push
jnp
mov
shll
adc
cmp
jecxz
and
mov
mov
cli
lock
cs
popf
lcall
movsl
push
movsl
shl
divl
out
ret
clc
add
repz
add
mov
push
mov
test
ss
pop
mov
stos
arpl
testl
and
stc
sbb
mov
add
ja
js
fldt
ficoms
das
inc
sahf
cmp
adc
xorb
pop
ret
pop
punpckhbw
loope
bound
and
daa
mov
mov
leave
lret
popf
dec
in
dec
xor
push
rorl
xor
sbb
push
cmc
pop
push
test
fwait
movsl
cs
in
mov
or
popa
adc
mov
mov
pop
jmp
push
rclb
aam
xor
push
aaa
std
ss
cwtl
cmp
jo
fldcw
ret
outsl
pop
inc
jle
mov
pushf
rol
shrl
insb
in
not
push
mov
sbb
mov
inc
pop
dec
cwtl
sahf
cmp
stos
sahf
or
lods
test
add
test
xor
push
movsl
pop
inc
cs
loopne
mov
sub
scas
jo
adc
fsubr
cwtl
adc
lods
jne
repz
dec
xchg
cmpsl
adc
lods
int
cmc
pop
pusha
das
test
cld
clc
mov
mov
pop
shlb
aam
mov
add
inc
sub
push
push
stc
jmp
js
push
or
insb
mov
or
xchg
bound
sbb
jle
pop
lods
stc
mov
int
das
add
cmpsl
sub
lret
movsb
ljmp
gs
out
lods
jge
fs
or
inc
outsb
jmp
adc
pop
cmp
jne
cmp
jne
adc
imul
lret
fbstp
jmp
push
addr16
xchg
loopne
xor
push
jmp
jmp
sub
sub
test
incb
cmp
popa
flds
mov
int
jecxz
mov
cmp
or
cmpsb
mov
aam
mov
movsl
cmp
dec
and
cli
push
test
gs
bound
sub
cli
pop
out
out
cmc
sub
push
out
jo
idivl
int
cmp
inc
shr
xor
scas
into
cmp
mov
xor
mov
or
xchg
inc
and
cltd
mov
inc
add
inc
dec
jno
jb
sbb
in
in
idivl
xchg
inc
jl
push
push
test
sub
xchg
stc
or
loope
jle
lds
cmp
test
inc
mov
imul
or
jb
fsubs
mov
std
sbb
rcll
je
dec
mov
inc
or
decb
dec
or
test
pop
sub
iret
mov
or
sbb
sarb
testl
pop
imulb
dec
rorb
cs
jo
orl
xor
xchg
xor
mov
sub
scas
push
lods
nop
xchg
pusha
call
xchg
push
inc
cltd
test
sbb
or
mov
inc
out
iret
nop
mov
je
jmp
sbb
mov
outsl
in
push
sbb
xor
icebp
adc
pop
xchg
sub
ss
fisubl
ret
adc
push
int
testl
repz
out
lret
add
inc
jecxz
add
mov
jbe
dec
inc
ret
xchg
mov
xor
adc
push
mov
mov
popa
hlt
xor
leave
cld
push
insl
fnstsw
mov
xor
mov
std
xchg
xor
mov
xor
loop
sub
xor
lds
orb
sub
pop
or
add
mov
call
mov
sbb
jl
stos
add
push
xor
mov
lcall
fildll
inc
scas
rcrb
inc
and
outsb
sub
popa
test
mov
fwait
bnd
popa
mov
sub
pop
int3
jl
imul
pushl
lret
inc
mov
test
dec
fsubrs
imul
xor
lret
xchg
sub
scas
pop
mov
lock
stos
lods
adc
xchg
shr
fisubl
mov
mov
mov
popf
mov
into
jns
inc
mov
out
das
sbbb
stos
xchg
ss
imul
xchg
in
jae
xchg
xchg
pop
shll
sbb
in
mov
cmp
aam
enter
cmp
inc
add
pop
push
mov
push
ss
and
popf
andb
add
add
adcb
lret
insb
jb
sbb
insl
std
add
push
add
add
adc
