push
mov
sub
cmpl
mov
movl
not
jmp
mov
jae
push
call
sub
sub
mov
xor
add
sub
and
or
mov
mov
mov
orl
sub
push
mov
mov
mov
mov
sbb
movzwl
add
mov
mov
sbbl
orl
orl
cmpl
not
mov
jmp
mov
mov
jle
push
pushl
push
push
push
pushl
push
call
andl
subl
and
orl
and
adc
adc
mov
mov
mov
mov
sbbl
sub
mov
mov
sbb
mov
orl
orl
lea
sbb
mov
cmpl
movzwl
mov
notl
mov
jmp
mov
mov
jae
push
push
pushl
call
xor
or
adc
sbb
mov
adc
mov
addl
add
mov
jmp
hlt
loop
sbb
and
mov
mov
push
push
sub
push
push
jmp
test
cmp
sbb
dec
popf
sarb
test
clc
es
lds
push
mov
testl
movsl
dec
sbb
xor
pop
cmp
dec
rcl
inc
inc
push
jl
pop
mov
dec
dec
dec
rorb
or
mov
daa
bound
scas
test
mov
pop
push
inc
fdivs
imul
mov
jecxz
add
cmpsb
inc
fucomp
loopne
mov
hlt
push
rcll
out
jmp
rol
lret
mov
xor
push
and
inc
fiaddl
out
push
push
push
les
test
mov
outsb
and
lret
pop
stc
daa
sub
xchg
jb
inc
aas
ret
js
iret
out
jne
add
arpl
int
ljmp
pop
sbb
xor
cmp
xchg
pop
dec
pop
out
loope
adc
mov
lds
cmpsb
and
ficomps
xchg
sbb
mov
jl
hlt
sbb
push
push
push
mov
adc
cli
dec
pop
fwait
jns
mov
ja
in
aad
imul
push
sbb
stos
call
rcrb
lods
push
mov
mov
sub
xchg
shll
aaa
jae
inc
mov
dec
rorb
fwait
mov
push
outsb
xchg
push
int
push
xchg
mov
nop
mov
mov
and
rol
adc
sbb
pop
shll
lret
filds
les
sahf
gs
pop
jo
test
mov
sbb
jmp
mov
jae
clc
ret
call
les
and
mov
loopne
js
jecxz
mov
mov
aas
ljmp
jmp
cmpsb
in
adc
add
rclb
sbb
arpl
jb
lret
int
test
imul
imul
cli
or
les
or
adc
popa
inc
jae
iret
stos
adc
test
adc
int
negl
rcr
rcll
cli
dec
inc
push
in
ds
js
pop
mov
aam
sbb
pop
inc
and
mov
popa
push
add
fucomi
fsubp
fsubr
dec
sarl
or
cmp
adc
test
inc
push
xchg
mov
push
mov
xchg
mov
xchg
pop
pushf
or
jmp
jecxz
sub
mov
jecxz
dec
mov
dec
xchg
scas
aad
cmp
hlt
mov
mov
test
pop
cltd
jno
sbb
jge
hlt
stos
push
mov
dec
mov
add
and
popf
ret
mov
into
pop
sub
mov
adc
or
mov
push
js
imul
jne
adc
cmp
pop
imul
std
fs
jnp
mov
pop
cmpsb
adcl
mov
mov
test
les
icebp
and
dec
lds
xor
push
and
xor
decb
mov
xchg
push
in
fsubs
rcrl
out
mov
mov
xor
mov
mov
sbb
and
cld
xchg
dec
stos
add
add
mov
inc
xchg
pop
aas
sub
xor
ss
inc
nop
and
jo
and
mov
lds
loopne
dec
cmp
dec
scas
mov
cmp
mov
or
notb
add
push
cmp
ds
push
push
les
scas
lret
cwtl
cmpb
mov
fidivrs
addr16
push
sbb
lock
sub
pusha
cmp
pop
jmp
lahf
mov
cmp
loopne
pop
stc
push
add
xor
and
out
pop
icebp
cli
mov
lret
push
cmp
cmpsl
icebp
xchg
sub
movsl
outsl
pop
or
pop
jbe
imul
mov
sbb
shll
sub
inc
into
pop
rorl
inc
idivl
shl
adc
sti
leave
bound
jno
ss
rcl
out
fildll
push
call
in
inc
cltd
jo
mov
cmp
mov
lds
lock
mov
sbb
popl
sub
push
mov
js
and
jne
ret
fstl
icebp
stos
dec
das
inc
xor
sub
mov
and
xchg
cld
jecxz
xchg
aas
jno
bound
mov
daa
outsb
arpl
rorl
xor
icebp
and
popa
add
cld
setbe
lcall
xor
pusha
dec
inc
adc
push
sub
rclb
out
subb
pop
mov
cmp
sub
push
push
dec
lods
cli
fnsave
sbb
pop
adc
lods
jne
fldcw
les
fsts
nop
push
das
add
xchg
stos
sbb
sar
sbb
jmp
scas
arpl
and
lcall
lret
lea
sub
stos
pop
pop
ret
mov
mov
lret
cli
sub
ret
cmp
xor
cltd
stos
adc
mov
lea
pop
mov
cld
and
mov
inc
mov
sahf
insl
inc
aad
sbb
xchg
lods
sbb
nop
cmp
scas
xchg
sub
push
lcall
push
insb
and
out
lret
stos
arpl
xchg
xor
adc
mov
clc
fwait
lds
das
imul
adc
add
out
daa
idiv
inc
cmc
cmp
ljmp
dec
or
xchg
xor
xchg
cmp
adc
cmp
in
dec
xor
js
lods
testb
sub
es
repz
cmpsb
xchg
and
scas
fstpt
xor
push
pop
jns
js
push
and
push
mov
sbb
mov
mov
xchg
cli
mov
les
clc
ja
or
push
imul
mov
pop
dec
subb
cmp
lea
push
gs
jbe
mov
pop
push
jl
lcall
lea
add
push
int3
xchg
mov
jns
adc
pop
pusha
mov
inc
in
sahf
movsb
addr16
xchg
xchg
arpl
xor
ja
xchg
cs
mov
cmp
test
lahf
loope
pop
fldcw
xlat
mov
adc
dec
data16
nop
adc
mov
mov
pop
mov
mov
insb
mov
cmc
xor
js
cmp
lsl
leave
sbb
sbb
mov
int
and
out
ja
mov
add
and
test
xor
sahf
test
mov
sbb
push
add
jnp
dec
cmc
mov
mov
ficomps
xchg
xor
clc
adc
and
xchg
decl
lea
dec
pop
mov
test
in
in
mov
or
arpl
cmp
sub
jle
popl
stos
aaa
mov
imul
dec
xor
xchg
push
les
int
arpl
popf
inc
ret
and
fsincos
sbb
add
out
test
mov
dec
nop
arpl
dec
mov
adc
dec
add
and
mov
push
and
outsl
fmulp
sub
ficoms
popf
lock
cltd
xlat
loope
mov
jmp
sub
les
call
mov
fsubp
sub
fstenv
call
fadds
inc
sub
pop
loopne
bnd
push
and
ss
in
dec
adc
stos
inc
lods
je
sub
aad
jle
gs
std
pop
data16
rcll
xchg
loopne
push
out
xor
adcb
hlt
cld
push
sti
sub
scas
lea
fildl
sbb
arpl
aaa
shlb
xchg
cltd
bound
in
mov
dec
mov
icebp
mov
push
leave
jae
xor
inc
and
int
jno
cmpsl
cld
jge
imul
xor
inc
add
and
mov
xchg
ds
loopne
dec
fadds
mov
xchg
out
nop
das
mov
mov
inc
add
sbb
jno
ds
fcmovnu
jno
nop
dec
shll
cmp
inc
movsl
jns
mov
aas
mov
inc
in
das
xchg
loopne
jp
mov
mov
pusha
std
cmpsb
add
and
std
xor
mov
lcall
scas
and
mov
gs
aaa
xor
mov
fiaddl
and
cmp
and
popa
pushf
scas
mov
inc
movsl
loop
inc
in
insb
push
push
sbb
scas
sub
mov
mov
rorb
rorb
stos
pusha
out
idivl
cmp
rcrb
xlat
dec
cs
push
mulb
cwtl
xor
mov
clc
inc
pop
sbb
pushf
insl
cmpsl
arpl
dec
aad
xlat
xorb
faddl
lret
inc
xchg
jl
push
test
xor
pop
xor
or
jge
shl
js
push
xor
mov
loopne
push
aaa
int3
mov
push
sub
into
or
mov
push
daa
lods
repz
mov
testb
jp
std
jo,pt
in
dec
mov
cltd
inc
add
mov
cmpb
mov
pop
mov
or
push
gs
int3
fcmovnbe
aam
rcl
sbb
enter
mov
adc
clc
pop
jnp
subb
jecxz
outsl
outsb
lods
fsubrs
sbb
pop
in
rolb
pop
sbb
fstpl
jmp
sbbl
mov
or
sub
movsb
sahf
ret
and
jge
inc
mov
stos
es
and
sbb
jnp
popl
cmp
push
inc
test
pop
pop
dec
inc
xchg
out
daa
gs
inc
mov
loope
gs
push
xchg
fildl
scas
xor
and
es
fsubrs
in
or
push
mov
ret
daa
add
hlt
xor
inc
cwtl
sub
push
imul
mov
and
movsb
cmp
iret
xchg
lret
int
in
movsl
icebp
dec
and
cmpsl
push
test
mov
ret
imul
xor
and
and
in
scas
cs
dec
push
cmp
scas
aam
xor
push
fstpl
loope
cmp
ficoml
in
sub
in
mov
cmp
fmull
popa
mov
sahf
pusha
jbe
addr16
mov
xchg
bound
and
pop
xchg
or
and
imul
mov
dec
andl
aas
inc
jb
cmc
inc
lods
jae
insl
inc
cs
inc
push
jmp
mov
mov
js
test
out
jbe
in
mov
jbe
mov
cli
and
push
push
movsl
mov
mov
pop
adc
xor
mov
pop
das
scas
ds
pop
jns
addr16
cmp
add
jge
and
aad
push
into
mov
and
add
pop
and
cmp
outsl
test
int3
add
out
mov
jl
adc
into
and
jb
mov
pop
push
sub
adc
lds
cmp
inc
cli
std
pop
test
test
pusha
sub
ja
sbb
repz
mov
roll
add
and
adc
fistpll
mov
ja
add
aam
in
mov
inc
out
dec
arpl
orl
jg
fisubrs
add
mov
das
adc
jb
cmp
inc
cmp
jmp
adc
pop
icebp
mov
pop
add
outsl
sub
frstor
insb
leave
pop
dec
fbstp
push
pop
push
xchg
js
test
push
xor
push
sbb
sbb
rcrb
and
rolb
mov
pop
notb
arpl
dec
lds
imul
jl
mov
fistpl
test
testb
aaa
lods
clc
sbb
test
and
adc
jno
or
dec
lea
stos
mov
inc
mov
icebp
sub
jne
cmpsl
sub
pop
jp
add
std
decb
dec
mov
adc
enter
sbb
imul
inc
adc
negb
out
lea
stc
fs
popa
and
push
es
inc
mov
cli
int3
popf
or
out
push
fnsave
shlb
or
and
pop
mov
mov
mov
inc
cmpsb
fwait
xchg
fnstsw
add
ja
subb
dec
jecxz
lea
mov
jnp
nop
out
cli
outsb
cs
xorl
mov
jns
mov
sbb
sbb
ja
arpl
push
cmp
sub
pusha
ret
loopne
jl
or
shrl
mov
imul
push
xlat
sub
je
dec
inc
ror
sbb
inc
out
cmp
add
or
mov
ret
cmp
cmp
cmp
test
int
and
aad
inc
sbb
mov
insb
add
mov
adc
xor
and
add
sub
call
and
bound
cwtl
shll
rcl
das
jbe
xchg
jne
xchg
jl
jnp
aas
pop
hlt
dec
xlat
mov
cmp
pop
push
ss
xlat
push
repnz
pop
jo
scas
push
fwait
call
xchg
add
mov
adc
lock
or
push
sbb
rorb
push
stc
mov
ret
add
in
mov
push
outsl
mov
fcoml
jp
lods
insb
jg,pn
mov
inc
int3
shlb
shll
femms
or
fnstcw
jbe
orb
adc
and
push
inc
lds
add
dec
cmp
out
and
popf
fs
in
movlps
movsb
adc
rcl
out
add
je
xor
pop
inc
imul
lock
mov
mov
lods
popf
out
in
addr16
imul
sub
fcmovnu
dec
mov
push
jnp
test
adc
jl
out
cmp
mov
movsl
sbbl
pop
mov
xchg
jmp
inc
lods
push
cmp
pop
adc
lods
and
jb
aas
push
dec
xchg
adc
lahf
sub
push
add
or
and
or
stc
aas
std
repnz
add
jmp
cs
in
repz
movsb
push
ror
loope
popl
je
iret
sbb
shrd
mov
sub
frstor
mov
or
or
sub
pop
jle
inc
aas
das
jge
adc
ss
add
or
sub
sub
mov
inc
or
jg
popf
int3
lret
fistps
sub
push
shll
call
int
loop
adc
aaa
cmc
lahf
pop
gs
jle
sbb
sub
jmp
jno
pop
mov
mov
ljmp
mov
cmp
aam
add
xchg
push
fucom
xchg
sbb
add
inc
inc
mov
add
xor
int
rolb
leave
in
push
aam
sub
pmuludq
add
movsb
mov
mov
sbbb
mov
pop
adc
movl
xor
lahf
sub
cmpsb
cld
sub
or
lods
xchg
sub
js
xchg
or
aad
jg
fcom
das
xlat
pusha
ja
mov
mov
lods
mov
ss
mov
daa
pop
mov
push
fwait
jl
mov
or
adc
movsb
mov
cmpsb
adc
testl
fidivl
jb
push
sti
jmp
push
sbb
jne
jnp
mov
mov
push
push
dec
test
pop
xchg
mov
imul
mov
sbb
addr16
lock
iret
jmp
std
pop
fs
in
test
cmpsl
sub
lea
pop
or
adcl
push
dec
es
pop
jmp
imul
lods
mov
inc
cmp
roll
cld
push
into
dec
and
mov
and
or
inc
loopne
xor
jle
inc
jle
sub
adc
test
xor
xchg
in
shlb
mov
ror
imul
add
cmpsb
cmp
mov
loop
ret
jne
repz
mov
movsl
fistpll
cmp
daa
in
cmp
outsb
daa
sbb
sti
mov
push
int3
mov
jbe
ljmp
jb
push
and
sahf
add
lea
jecxz
mov
in
jl
and
fdivrl
ljmp
push
pop
lret
stc
imul
sub
dec
dec
push
fists
mov
or
cld
add
movsb
or
lret
mov
sbb
lock
add
cli
mov
adc
ss
sbb
push
aaa
mov
cmp
jle
vunpcklps
mov
mov
scas
mov
xchg
js
dec
sub
push
sbb
xchg
lea
jecxz
stc
in
imul
sub
loop
icebp
or
mov
jne
jnp
adc
inc
jnp
xchg
enter
or
jge
imul
jge
add
add
into
pop
lds
repz
ret
mul
mov
inc
xchg
mov
mov
int
popa
mov
adc
test
push
fwait
xor
iret
or
adc
push
pushf
popf
bound
mov
inc
pop
jecxz
mov
js
mov
or
cmp
sub
or
stos
push
mov
cld
popf
add
and
sbb
mov
faddl
jle
mov
aas
add
fdivr
sub
call
stos
mov
add
push
or
in
imul
jp
scas
ret
jecxz
test
pop
add
xchg
xor
jno
xchg
xchg
mov
add
pop
stc
je
int3
cmp
nop
nop
movsl
and
in
push
movb
mov
adc
xchg
mov
aaa
repz
popf
in
mov
jne
push
jae
jg
int
aas
mov
xor
and
in
add
push
mov
addb
xchg
mov
add
dec
nop
mov
xor
jb
mov
divb
pop
test
fisubrl
imul
lcall
add
cltd
jnp
test
movsl
mov
cmp
dec
sub
inc
outsb
pop
loope
cmp
xor
add
mov
push
adc
sbb
nop
xor
test
cmc
call
mov
adc
repnz
int
push
cmp
rcr
xchg
in
loopne
lds
mov
cmc
int3
add
dec
xchg
andb
testl
sti
adc
stos
or
xchg
cmc
mov
xchg
fsubrp
mov
cmp
xchg
dec
popa
sarb
test
mov
sub
jecxz
inc
push
pop
pop
ret
insl
sbbl
dec
je
das
les
xchg
clc
sub
cmc
mov
fs
addr16
mov
mov
inc
das
sbb
xchg
fistpll
fisubl
sbb
outsl
aam
push
pop
outsb
aas
cld
mov
jecxz
pop
icebp
cmpsl
mov
dec
int3
jge
test
mov
mov
add
movsl
push
pop
mov
or
sub
or
fsubr
cmp
sahf
loop
jecxz
aam
lret
mov
cmp
jne
ret
adcb
nop
cltd
jne
imul
push
fcoms
xor
test
repz
jne
ret
clc
xchg
push
enter
cmp
leave
enter
inc
adc
and
pop
or
iret
xchg
or
test
scas
sbb
je
add
pop
adc
jae
and
shl
lock
outsl
sbb
add
and
adc
popf
subl
or
dec
adc
and
jno
loop
clc
stc
pop
lock
cs
nop
cmp
lcall
rolb
scas
xor
addr16
hlt
dec
mov
in
add
mov
dec
dec
fbstp
pop
sub
ds
jl
add
sub
imulb
mov
enter
scas
inc
in
movsb
mov
sahf
or
lret
xlat
mov
mov
insb
cmpsb
test
rorl
xchg
inc
jo
mov
pusha
push
in
stos
or
jno
mov
push
ja
enter
add
fwait
test
popf
inc
sub
sbb
jae
adc
pop
xcrypt-cfb
cmpsl
out
jmp
push
push
fimull
repnz
xchg
fsubs
mov
cmp
icebp
inc
in
pop
jno
and
inc
xchg
hlt
fsts
pop
fmull
mov
cmp
inc
stos
or
ljmp
fistps
icebp
push
subps
jl
pop
daa
xor
add
jae
lahf
popa
dec
xor
insb
jnp
mov
or
cld
bound
push
das
subb
test
call
in
jecxz
cmpsb
push
pop
jp
jne
add
sbb
out
push
sbb
pop
xchg
fldl
addr16
adc
and
jne
aam
in
sahf
pop
jno
and
jns
sbb
fnstenv
fcoml
mov
adc
ljmp
push
cs
es
lcall
xchg
add
lock
mov
xorl
inc
movsb
pushf
push
push
hlt
repnz
sbb
lahf
sbb
cs
lret
xchg
mov
or
jp
pusha
jecxz
inc
jmp
jl
push
call
push
outsb
je
xchg
fsubrs
jb
into
pop
pop
push
nop
jns
das
pop
jg
mov
xchg
xor
pop
dec
sbb
jge
je
adc
jo
mov
mov
push
aaa
mov
shl
mov
lret
lret
mov
dec
js
popf
hlt
and
push
jl
adc
dec
ficoml
push
jle
cld
sbb
movsb
out
pusha
cmp
mov
lret
outsb
push
cmpb
sub
in
repz
stos
jle
jnp
mov
cmp
jg
jnp
mov
or
repnz
rorb
inc
hlt
les
and
int3
dec
xchg
cld
sub
pop
xchg
cmc
jmp
aaa
jns
movsl
adc
push
adc
fmuls
add
xchg
cmpsl
dec
inc
sbb
jmp
addr16
out
in
scas
pop
insb
imul
sahf
out
outsl
mov
lahf
mov
andl
mov
mov
nop
jb
dec
inc
jg
test
adcl
cmp
cmc
sub
adc
dec
pop
mov
shld
gs
adc
out
add
dec
daa
mov
add
jle
dec
pop
int3
xchg
call
push
xor
push
mov
mov
andl
mov
xchg
pop
shr
mov
hlt
inc
inc
pop
fists
cli
jae
sub
jge
mov
mov
mov
cmpb
jmp
mov
mov
jle
lahf
loope
xor
adc
mov
adc
aas
inc
nop
adc
daa
mov
sti
pop
in
jno
iret
mov
nop
mov
cli
xchg
add
mov
pop
ss
cmp
dec
adc
jg
pop
sub
sti
std
mov
mov
lret
sbb
aam
out
nop
enter
lahf
mov
scas
ds
test
cmp
add
sub
dec
add
fwait
lret
mov
xchg
xchg
pop
scas
mov
icebp
mul
pop
cmpl
mov
sub
test
shlb
fs
cltd
jb
push
mov
fsub
outsb
dec
cmp
cmp
mov
subb
mov
dec
dec
mov
cmp
mov
add
pop
push
int3
dec
aas
pop
push
imul
push
shll
movsb
fwait
pop
leave
ret
push
scas
add
in
mov
adc
or
shll
cmpsl
and
xchg
push
and
jmp
mov
jl
push
mov
cld
jg
push
and
insl
repnz
lret
cmc
add
fs
inc
lret
sbb
xchg
adc
adc
cld
xchg
mov
sbb
cmp
xchg
adc
bound
cs
mov
dec
les
xor
adc
pop
fisubrs
stos
jle
out
sbb
mov
mov
js
sbb
idivb
add
loopne
ljmp
dec
mov
repz
jno
xor
insb
rclb
sar
pop
aad
pop
out
adc
xchg
or
cmp
inc
shll
mov
sti
icebp
inc
enter
mov
test
xor
and
push
add
jl
jmp
sbb
push
mov
dec
dec
popf
add
subb
mov
out
out
rcll
test
or
or
push
dec
mov
sub
fiaddl
stos
pop
push
push
out
std
test
sbb
pop
sbb
mov
cs
pushf
je
arpl
mov
xchg
popa
jne
mov
fmul
into
mov
orl
fcoml
cld
es
leave
or
or
dec
dec
jae
xor
je
fstpl
xchg
jnp
lock
push
loopne
movsb
je
xlat
dec
xor
ds
dec
je
mov
pop
pop
and
jbe
ret
inc
mov
mov
sub
mov
pop
inc
decl
jl
inc
dec
push
insb
push
xor
aam
ds
xchg
xchg
mov
push
push
add
sti
push
push
mov
mov
out
mov
sbb
push
mov
cmp
jnp
mov
fwait
mov
test
dec
fcoml
pushf
sarb
fisttps
cli
push
xor
jg
nop
or
cmp
or
push
cs
mov
sub
hlt
add
sbb
jb
shlb
scas
add
in
test
lahf
xchg
test
cmp
rorl
mov
push
iret
jb
test
sarl
pop
fisubl
inc
push
test
jbe
push
ss
or
jns
cmp
jecxz
pushf
xorl
sub
push
xor
mov
mov
and
stc
sub
aad
scas
addr16
jno
repz
les
bound
outsb
sahf
les
fisttps
roll
fwait
call
lret
leave
sahf
fdivl
sub
inc
dec
js
testl
je
sar
sub
jnp
cmp
in
outsl
inc
dec
aaa
xchg
dec
and
or
enter
mov
fisttpl
test
mov
mov
pop
jns
cmp
cmp
scas
arpl
mov
push
ret
pop
xchg
into
cwtl
mov
in
ds
sub
jnp
and
popf
shl
push
mov
adc
out
lret
aaa
mov
arpl
mov
mov
scas
sbb
notl
sub
stc
pop
jne
repnz
xor
les
inc
ds
repz
jmp
add
sbb
inc
insb
lods
fldenv
pop
push
cltd
sbb
add
mov
sub
enter
mov
stos
xchg
jne
int3
nop
pop
sbb
loope
xor
cmp
jl
mov
dec
stos
lock
pop
or
inc
cli
xchg
adc
jns
cld
jecxz
mull
clc
sub
mov
int
rcll
cwtl
and
and
pushf
jmp
jecxz
ficomps
adc
clc
sbb
out
xchg
ror
xor
mov
testl
aam
add
cmp
mov
repz
push
sbb
adc
mov
pop
mov
outsl
repnz
pop
gs
lock
lcall
cs
mov
daa
adc
pop
push
inc
ds
fdivr
fcom
repnz
insl
jnp
sbb
mov
dec
jbe
mov
mov
mov
push
jge
and
dec
lcall
dec
out
adc
sbb
xor
jo
mov
out
jnp,pn
mov
cld
test
fcomps
out
pop
int3
scas
out
and
js
sbb
pop
mov
mov
dec
adc
xchg
jnp
mov
in
dec
mov
mov
insl
shl
mov
sbb
add
imul
repz
repz
inc
jno
mov
not
popl
xchg
inc
dec
cmp
mov
xor
xor
fwait
add
jle
je
cmpsb
mov
mov
sub
cltd
sar
sti
jl
enter
inc
pop
inc
xlat
mov
jnp
pop
or
fwait
adc
mov
push
pop
mov
popf
mov
call
sub
mov
adc
cmovs
cwtl
sbb
in
cmp
and
dec
push
mov
mov
cmpl
movl
movl
mov
jmp
movl
movl
jge
push
push
push
call
or
sbbl
mov
add
or
orl
sbb
mov
xor
or
sub
and
add
mov
cmpl
movl
movzbl
movzbl
jmp
mov
jge
pushl
push
push
pushl
pushl
call
mov
mov
sub
not
adc
incl
sbb
xor
mov
mov
add
mov
adc
shrd
adcl
shr
mov
mov
negl
xor
xor
or
mov
sbbl
movl
xor
movl
cmpl
movl
mov
jmp
mov
movl
jl
push
call
adcl
addl
orl
xor
movl
movl
movl
andl
movl
incl
movl
movl
cmpl
movl
movl
mov
jmp
movl
jge
pushl
push
push
call
sbbl
subl
andl
sbbl
decl
movl
movl
cmpl
movl
movl
movl
jmp
mov
je
push
pushl
call
subl
add
addl
sub
andl
adcl
add
cmpl
movl
movl
jmp
movl
jbe
pushl
call
adcl
adcl
xor
sbbl
subl
xor
xorl
movl
movl
not
movl
cmpl
movl
movl
movl
movl
jmp
movl
jle
pushl
pushl
pushl
pushl
pushl
call
orl
sub
xorl
andl
decl
addl
sub
movl
movl
or
movl
movl
mov
and
mov
movl
jmp
out
adc
adc
sbb
mov
mov
sub
push
push
sub
push
push
mov
dec
or
add
cmc
fwait
cmp
in
mov
xchg
out
ja
arpl
je
bound
xor
inc
sub
xor
in
inc
roll
outsl
jmp
adc
imulb
shlb
nop
or
addl
inc
xorb
mov
xchg
cmpsl
and
jmp
rcll
jge
jecxz
push
mov
inc
fstpt
jge
mov
movsb
and
adc
loopne
test
adcl
call
addl
shrb
out
out
lods
roll
push
inc
adc
xchg
jp
test
add
outsl
or
and
jmp
inc
outsb
in
lods
ret
pop
test
lods
push
sub
jnp
or
or
or
iret
push
mov
push
push
ret
call
subl
add
mov
jp
mov
stc
ret
movsb
in
sbb
mov
repnz
lret
or
mov
stc
test
sbb
cli
or
repz
push
lods
pop
dec
shrl
daa
pop
mov
mov
xor
jge
inc
sbb
dec
lods
add
leave
xchg
ret
out
jge
fildll
test
xchg
cmp
data16
cwtl
andb
xor
cmp
cmp
xor
jbe
sub
pusha
imulb
test
mov
enter
inc
push
xchg
sti
rcr
add
movsb
xchg
pop
inc
roll
and
fidivs
loop
insl
push
mov
out
mov
repz
jb
fdivrs
jg
movsb
or
or
incl
aam
jge
shll
push
pop
jp
into
ficoms
mov
sub
push
bound
mov
bound
out
fists
fwait
xchg
sub
pop
js
sbb
aas
je
mov
imul
jns
push
cmc
sub
pop
stc
rcrl
cltd
and
les
jae
movsb
jmp
imulb
jno
pmaddwd
push
jmp
or
icebp
loopne
pop
mov
cmp
xchg
pop
fnstsw
int3
cmpsb
inc
scas
jb
shl
fiaddl
push
cmpsl
push
push
testb
xchg
scas
xchg
xchg
xchg
loope
aam
push
push
xchg
js
adc
cmp
aam
lock
sub
fucomi
rclb
mov
cmc
sub
xchg
jo
xchg
pop
jp
and
loop
aam
push
mov
pop
pop
xchg
mov
jae
sub
inc
lahf
jge
fidivl
movsb
xor
and
stos
and
mov
cmpsl
ss
inc
mov
cmp
cltd
fs
into
sbb
xor
lret
mov
cs
mov
in
and
dec
loop
fiadds
dec
ror
add
adc
aaa
jecxz
sub
pop
and
mov
mov
xlat
lock
or
int
xchg
aas
adc
lret
lock
xchg
sbb
insl
cwtl
lahf
das
sub
add
inc
pop
pop
in
cmpsb
outsb
jecxz
not
sub
mov
jbe
lret
inc
mov
enter
das
outsl
push
sbb
sbb
popl
subb
mov
mov
adc
ret
aad
sbbl
xor
and
or
lret
inc
lahf
adc
dec
jecxz
mov
rcr
xor
sbb
ret
in
aaa
arpl
push
ja
out
leave
push
pop
jle
add
or
sbb
sbbb
pop
out
leave
mov
movsb
aad
cmp
int
subb
aaa
in
mov
bound
ret
sbb
adc
push
inc
out
push
pusha
xchg
inc
sbb
jb
mov
ficoms
enter
cmpsb
mov
cwtl
cmc
and
loop
push
push
xchg
sti
push
adc
or
and
or
sub
test
adc
mov
mov
fdivrl
and
xor
in
or
xchg
mov
ds
and
xor
fadd
call
imul
mov
cmpsl
lret
jb
and
add
ret
lds
jo
add
je
leave
jo
out
xchg
aaa
xor
and
inc
inc
scas
mov
int
call
pushf
clc
in
or
fcoms
daa
int3
ror
and
sbb
xor
sbb
in
pop
imul
and
shrb
add
into
jge
sbb
cli
jb
xlat
ret
xor
out
sbb
add
je
cmp
mov
add
add
insl
pushf
imul
fidivrl
gs
mov
push
jo
inc
into
dec
jge
dec
or
test
lods
pop
adc
jg
mov
out
in
addb
add
cltd
lcall
xchg
mov
cmp
imul
movsb
add
mov
sub
int
mov
add
mov
incl
aaa
scas
mov
fcomip
out
mov
pop
mov
ret
lods
inc
iret
mov
sahf
inc
cltd
out
fdivrl
xchg
pop
xor
mov
fs
fwait
sbb
xchg
mov
outsb
and
mov
std
push
int3
pop
cmpsb
fstps
inc
cli
icebp
sub
cmp
mov
mov
imul
lock
out
cli
out
or
pusha
lods
mov
outsb
mov
xchg
fsts
sahf
mov
xchg
fisttpl
ja
outsl
mov
xchg
cmc
enter
mov
lcall
push
jbe
lock
pop
xchg
lret
lods
jno
jmp
clc
lds
xchg
rolb
lret
add
adc
cmp
sub
pop
and
cld
cmp
dec
mov
ss
jecxz
mov
out
sub
and
cmpsb
or
and
sub
jge
fistpll
ret
fdivl
jnp
ret
mov
nop
push
mov
pop
test
shrb
sbb
cmp
call
sarb
out
mov
cli
cmp
xor
xor
lods
dec
gs
in
repz
daa
inc
xor
pop
xlat
icebp
insl
stos
push
aam
lds
mov
fcmove
std
xor
and
and
sti
addl
aaa
sbb
mov
pop
jecxz
push
adc
imulb
pop
pop
xchg
sti
and
sbb
adc
outsb
insl
jne
scas
mov
ljmp
shll
cli
add
pop
cld
sbb
and
jge
sbb
add
pusha
mov
sbbb
out
in
mov
mov
or
xor
sbb
mov
test
jl
mov
dec
ljmp
mov
pop
out
icebp
addr16
decl
adc
rcrl
outsb
cmc
mov
leave
movsl
xchg
nop
push
mov
xchg
iret
push
cwtl
sbb
dec
jno
stos
rcrl
cmc
ja
das
ret
cmc
sbb
aas
cmp
pop
xchg
dec
add
add
add
and
in
gs
out
test
xor
imul
add
add
loope
or
ret
or
movsl
ds
ret
cwtl
cmp
not
inc
mov
pop
sbb
testl
rcll
stos
inc
lahf
out
int3
mov
xchg
test
pop
packsswb
inc
xor
and
push
add
cld
jle
inc
out
pusha
lds
add
das
xchg
and
dec
aaa
je
repz
ret
xchg
jbe
addl
addl
je
push
dec
ret
int3
ss
dec
fisubl
xor
lcall
outsl
call
leave
int3
ljmp
or
lahf
jne
push
ljmp
push
mov
or
sti
xor
je
push
and
mov
dec
js
mov
andl
out
push
pop
dec
movsl
push
mov
sub
addr16
enter
xor
mov
out
sbb
aas
lahf
jb
sub
mov
sar
push
mov
cmp
adc
pop
sub
sbb
lahf
xor
gs
sub
push
add
shlb
jo
pop
inc
adc
out
insl
cld
mov
sub
xchg
and
mov
jno
sbb
sub
jg
sbb
mov
ret
xor
mov
mov
subb
js
push
jg
dec
addr16
in
jge
test
cmpl
out
cmp
roll
pop
cs
loop
xchg
mov
dec
adc
inc
push
movsl
jae
push
adc
add
gs
lea
or
inc
sub
lea
loope
xchg
enter
jnp
jns
jp
stos
push
iret
and
push
mov
sub
xchg
mov
and
in
xor
aam
mov
test
fisttpll
orb
sarl
inc
mov
hlt
mov
fimull
outsb
xchg
jnp
push
jb
xchg
repnz
shrl
and
mov
push
ss
fsubp
add
in
subb
cmp
lods
jb
aam
mov
js
stos
loopne
test
mov
fs
aas
pop
das
aaa
cmp
lahf
xor
mov
mov
lods
sbb
imul
add
imull
add
mov
rcrl
and
pop
into
and
jge
out
and
xchg
rclb
adc
push
sub
sub
into
mov
daa
aas
pop
ret
popl
dec
fnstcw
adc
adc
ss
lods
sbb
insl
cmc
jbe
and
mov
incb
call
loopne
jbe
and
and
lret
fwait
xor
push
lret
ss
cmp
popf
sbb
push
push
hlt
inc
les
in
sub
dec
cltd
scas
mov
jl
mov
mov
inc
add
jno
mov
add
lds
movsl
sbbb
fsubrl
out
jmp
pop
xchg
ret
add
jg
xchg
mov
mov
fcoml
nop
push
jo
sbb
add
jbe
xor
push
mov
mov
icebp
scas
into
in
pop
or
addl
cld
sub
inc
clc
jae
es
mov
pushf
inc
fs
stos
test
jbe
mov
push
xchg
adc
pop
mov
insl
mov
ret
xchg
dec
pushf
shrl
mov
popa
and
sub
push
int3
sbb
lcall
pop
sbb
mov
mov
push
mov
xchg
push
lock
dec
push
lock
push
shrl
pushl
cmp
xor
dec
xor
add
push
pop
das
inc
pop
nop
lret
mov
add
cmc
lds
sub
inc
pop
ljmp
jb
sub
or
dec
notl
dec
mov
pop
popf
push
adc
js
out
sbb
subl
sbbl
add
mov
je
sbb
fadds
dec
mov
mov
cwtl
fcomps
cmpsl
push
mov
push
hlt
or
clc
push
push
and
and
divb
fucompp
cmp
cmpsb
sub
movsb
dec
inc
xlat
pop
dec
es
out
jne
push
mov
xor
adc
push
jp
jle
dec
rclb
jns
xchg
sbb
dec
pop
jnp
inc
lods
outsb
mov
mov
hlt
and
xchg
xor
sbb
shrb
cmp
aam
sub
inc
outsb
ljmp
push
fstps
ficomps
cmpb
xor
icebp
jae
jmp
adc
cwtl
repnz
sarb
rcrl
pop
push
cmp
addr16
popf
inc
jne
call
ja
cmc
gs
call
rorb
mov
dec
leave
ds
xchg
fcmovu
and
jle
fwait
ss
sbb
fadds
and
aad
out
jecxz
inc
ret
inc
or
rclb
mov
sti
cmc
aad
mov
stc
cmp
fcoml
sub
outsb
adc
out
jp
mov
fnstenv
mov
xor
xor
insl
lret
cs
xchg
shlb
and
cmp
sbb
or
pusha
push
inc
stc
test
cs
mov
insl
xchg
std
ficoml
fldl
add
and
mov
sbb
daa
mov
mov
int3
mov
mov
leave
bound
mov
testl
lahf
nop
or
or
push
pop
imul
adc
mov
faddl
or
xlat
mov
fwait
or
or
inc
mov
inc
fisubrl
inc
sbb
mov
jecxz
data16
jge
mov
inc
xor
mov
ds
jle
negl
jae
adcb
add
fdivr
xchg
jnp
aad
pop
pop
jae
mov
cmpsl
cmpb
icebp
shl
insb
ja
jmp
and
jno
cli
stos
clc
repnz
movsl
mov
jle
fdivl
lea
stos
sbb
lds
mov
xor
out
xor
inc
imull
lds
xchg
orb
jmp
mov
data16
cmp
mov
test
push
cmc
xchg
sub
leave
jne
xchg
adc
mov
out
fcmove
aam
mov
cmp
jg
and
add
das
mov
in
push
insl
shrb
jns
or
adcb
insl
ret
pop
lods
cld
pusha
fmull
out
cwtl
jo
arpl
sbb
pop
mov
imull
out
repz
mull
adc
pop
insb
dec
cmp
sbb
lret
popa
les
les
dec
int3
hlt
aas
and
dec
int3
aad
lods
jmp
mov
pop
sti
gs
mov
jmp
push
or
in
insl
xor
or
int
negl
rcrl
mov
adc
sahf
test
or
cli
mov
mov
iret
sub
xlat
lods
push
xor
push
mov
or
mov
dec
xchg
cwtl
pusha
push
sbb
cmpb
in
ljmp
xchg
sbb
cmc
hlt
test
in
mov
insl
cmpl
stos
adc
jne
hlt
scas
sbb
popl
and
daa
outsb
or
push
jge
ss
xor
lcall
push
and
xchg
dec
xor
cmpsb
jb
out
cs
cltd
push
or
movsl
push
mov
rclb
pop
pop
vmwrite
mov
mov
std
or
push
mov
jg
stos
int3
adc
cmp
out
push
sbbl
cli
gs
push
push
xor
cmp
scas
negb
adc
cltd
enter
mov
jmp
cli
ljmp
out
enter
xor
decl
cmp
test
sahf
mov
push
xchg
popl
mov
sub
ret
push
movsb
movsl
xlat
xor
cwtl
push
sbb
mov
daa
jnp
cltd
ss
sub
sub
sbbl
or
out
in
mov
loope
sbb
jns
enter
pop
xchg
call
ficoml
adc
xchg
jp
mov
mov
das
stc
std
add
mov
xchg
ds
ljmp
and
adcl
mov
loop
movsl
mov
and
mov
bound
fbld
test
jp
dec
jl
sub
push
loopne
mov
adc
aas
jb
sbb
loopne
mov
ja
and
add
cld
pop
dec
add
or
loop
out
pop
es
sub
mov
in
xor
jge
data16
push
mov
or
xchg
stos
mov
fidivs
pop
pusha
shrl
push
or
adc
sub
push
lods
insb
out
xor
sub
mov
in
and
cltd
mov
sbb
mov
imul
or
xor
cld
pushf
stc
adc
fdivr
in
loope
mov
inc
or
movups
cmp
mov
adc
mov
js
jmp
push
insb
push
xchg
into
or
mov
insl
shr
lods
jl
inc
fcoms
inc
leave
add
mov
sbb
je
mov
stos
jecxz
cmp
dec
sub
mov
mov
fisubrs
dec
stos
aaa
add
mov
jne
shrb
xchg
mov
cmpsl
loop
ret
pop
ss
daa
adc
mov
cwtl
je
mov
mov
mov
dec
faddl
test
dec
mov
mov
out
rclb
mov
jo
into
mov
xchg
cld
sahf
loop
ret
icebp
test
and
pop
inc
jg
jmp
adc
loope
lcall
mov
out
int3
inc
mov
add
and
pop
aaa
scas
dec
mov
inc
jb
cli
xchg
dec
fnstsw
addb
adc
mov
mov
jnp
mov
mov
call
out
lods
inc
cmp
xlat
inc
movsb
adc
cmpsl
outsb
inc
imul
sbb
loopne
js
pop
mov
dec
push
or
dec
xchg
xchg
in
rorl
mov
mov
add
xor
hlt
fistl
adc
and
popl
cltd
leave
mov
push
rclb
cmp
mov
sbb
cmc
push
lock
xchg
loopne
pop
repz
xchg
addl
test
jno
pop
outsb
xchg
rcrl
lcall
shll
ret
ret
imull
push
rcll
mov
or
push
or
nop
mov
push
in
imul
sbb
sti
xchg
jno
mov
arpl
cltd
iret
or
shlb
mov
jns
pop
fucom
add
imulb
cld
dec
roll
imul
jbe
pop
fnstenv
adc
jg
mov
daa
jbe
lea
adc
pop
sbb
stc
fists
push
jmp
pop
test
lcall
push
inc
mov
mov
cwtl
loopne
push
and
inc
cltd
mov
jg
xchg
cmp
xlat
push
outsl
and
cmp
lcall
js
es
aas
fadd
movsl
cwtl
fwait
movsl
in
aaa
pop
jle
fsub
add
orl
adc
call
and
mov
repz
sbb
mov
testl
lock
rcl
dec
repnz
cmpsb
mov
fstpt
ljmp
xor
xlat
cmp
cmp
addl
mov
cmp
mov
dec
aas
int3
mov
xchg
fwait
mov
push
inc
cmp
bound
scas
es
clc
pop
ss
jae
sub
jmp
ret
xor
loope
mov
cmpsl
lds
clc
fisttps
ret
mov
jno
xor
adc
into
inc
outsl
movsl
mov
sub
outsb
mov
por
mov
jnp
daa
daa
mov
or
int3
adc
jns
mov
sub
popf
and
ss
loopne
data16
cmc
mov
mov
pop
mov
mov
int3
jp
cld
mov
in
aam
pop
stc
icebp
push
jp
add
testl
mov
adc
jne
ficomps
jecxz
pop
popa
or
dec
adc
and
out
pop
mov
hlt
adc
dec
repz
call
jno
adc
in
xchg
test
xchg
test
iret
xchg
or
xor
add
cmp
in
jb
cmpsl
cwtl
push
rol
or
out
jle
sbb
les
push
aas
popf
bound
and
pop
insl
addr16
ret
lods
adc
fdivl
pusha
sub
dec
add
push
sub
clc
inc
xor
es
fbld
fwait
jle
dec
xchg
mov
pop
iret
imull
push
les
jg
pushf
cmp
int
aad
inc
data16
xor
je
popa
stos
mov
mov
mov
in
sbbb
xor
push
rcll
sbb
mov
leave
xchg
rcr
cmc
xchg
dec
addr16
arpl
dec
shlb
or
scas
movsl
add
inc
add
lock
cld
sahf
xlat
lahf
arpl
mov
dec
mov
jnp
push
dec
pop
lock
sbb
test
push
clc
dec
xlat
inc
adc
xchg
rcrb
inc
inc
aam
jne
repnz
rolb
icebp
decl
movsb
adc
xchg
dec
call
daa
lods
enter
lods
rolb
xchg
push
or
mov
leave
in
or
enter
roll
loop
rcll
push
push
push
addr16
pop
dec
aas
leave
rcrb
shl
shlb
xchg
cmpsb
pop
stos
cs
repz
sti
cmp
sub
mov
mov
ds
fadds
dec
inc
mov
pop
out
mov
gs
sub
shll
inc
inc
jle
mov
les
fsubl
pop
nop
fldl
js
xor
loopne
cmpsb
rcll
ret
jmp
pushf
mov
jae
daa
nop
test
repz
fwait
mov
pop
push
xor
fstps
mov
into
sbb
cmp
and
arpl
sbb
pop
fidivs
or
movsb
adc
or
enter
sti
push
js
cmc
push
and
int3
cld
or
xor
mov
mov
push
sti
sub
rclb
xor
lea
jmp
cld
popf
cmp
and
out
test
stos
jg
nop
sbb
jmp
loopne
jmp
cmp
push
lock
mov
xor
call
add
roll
movl
das
rcrb
ja
call
out
cwtl
sahf
pop
jb
pop
xor
push
dec
jbe
sbb
ror
add
jo
lock
push
int
pop
dec
mov
xchg
xchg
insl
jg
and
pop
in
mov
sbb
dec
in
leave
xor
push
mov
sub
cmpsb
pop
movl
push
inc
xchg
in
movsl
and
cltd
mov
loopne
js
negb
movsb
fbld
inc
inc
sahf
mov
stos
push
dec
mov
popf
popf
popa
sbb
data16
or
mov
add
sbb
in
add
in
adc
out
mov
push
fidivrl
mov
mov
push
insl
mov
inc
subb
xlat
sbb
sub
lods
pop
push
cmp
mov
aaa
subl
cli
std
fs
aas
add
mov
bswap
gs
push
cmp
fs
mov
or
iret
stc
mov
xorl
mov
scas
aaa
cmp
imul
push
pop
lret
push
outsl
xor
jg
decb
adc
mov
mov
mov
inc
mov
stc
les
mov
imul
sar
dec
sub
clc
aam
imul
lock
xchg
mov
cmpsl
movsl
and
xor
pop
pop
fwait
lea
mov
addb
enter
or
push
inc
sbb
insb
jle
shl
xchg
sbb
fwait
rcrl
jbe
lods
scas
jo
repnz
push
test
and
cmp
dec
or
aas
xchg
xchg
lret
lods
mov
out
ret
lret
dec
jbe
js
test
pop
mov
ficomps
outsl
cld
jno
push
mov
jbe
sti
or
ret
xchg
test
mov
outsl
movsb
push
cmpsl
sub
add
ljmp
into
add
test
fs
sub
mov
adc
repnz
pusha
adc
push
mov
jmp
mov
fbld
rorl
icebp
or
inc
aad
inc
or
xchg
insl
push
or
outsl
das
jmp
fadds
stos
test
icebp
outsb
cmp
addb
repz
daa
loopne
xchg
xor
mov
cmp
fisttpll
int3
pop
pop
mov
stos
popa
les
xor
in
pop
xchg
stos
enter
jo
pop
js
imul
lret
out
push
sbb
insb
repnz
lea
xchg
test
push
je
cmpsl
mov
iret
sub
dec
fidivrs
add
stc
mov
mov
or
or
jb
xchg
sbb
out
sarl
das
jle
xchg
jne
stos
idivl
int3
cmc
fmulp
test
out
movsl
cmpsb
add
nopl
add
out
enter
mov
js
push
push
mov
and
inc
xor
jae
lds
mov
imulb
lods
dec
repnz
mov
adc
mov
dec
ficoml
les
mov
stos
mov
jbe
inc
fdivs
and
dec
mov
dec
stos
push
arpl
int3
nop
sub
adc
push
jne
jns
arpl
and
shll
cmp
mov
pop
xchg
dec
mov
lret
mov
shlb
xor
aad
jns
xor
push
or
ds
xor
test
cmp
cld
addr16
mov
sbb
iret
out
adcl
rolb
pusha
stos
sbb
or
mov
std
je
pop
xchg
and
xor
or
lods
nop
jmp
addr16
idivb
sub
sahf
ror
nop
xorl
daa
xor
stc
movsb
aaa
scas
push
loopne
dec
xor
mov
pop
jo
jmp
ja
mov
jns
and
pop
mov
jnp
mov
add
dec
in
scas
pop
push
dec
dec
shll
xor
sbb
outsl
add
fmull
inc
test
shr
xchg
rcrb
sbb
repnz
arpl
fs
cmpsb
push
mov
clc
lea
cmp
ja
mov
adc
lock
out
lcall
sbb
nop
dec
push
adc
int
mov
jp
loopne
mov
sbb
daa
int3
in
dec
jb
and
enter
dec
leave
daa
xchg
lret
push
pop
imul
jge
mov
jmp
mov
cld
jne
fiadds
ljmp
stc
sbb
sub
xlat
xchg
jnp
dec
mov
repz
ljmp
mov
sub
jne
and
nop
cs
enter
push
adc
stos
mov
into
fidivrs
test
dec
jg
jge
jg
pop
or
stc
jl
adc
sub
jg
jne
mov
xchg
and
insb
fldenv
sti
scas
dec
or
int3
mov
add
adc
arpl
or
or
xor
cmc
jmp
inc
push
fisubrs
push
inc
std
insb
call
mov
loop
jne
cmp
repnz
and
fs
jae
outsl
repnz
jnp
pop
js
jmp
xchg
xor
fcompl
pusha
int3
sub
pop
mov
shl
mov
aam
xorb
cmpsb
je
jo
mov
sarb
mov
shrb
sti
adc
push
dec
cmp
fdiv
repnz
jmp
stos
xor
sbb
lahf
out
mov
ljmp
lret
cs
shlb
dec
jno
mov
test
or
or
lret
xchg
test
ja
iret
dec
adc
js
repz
cmpsl
or
mov
jb
sarl
out
icebp
inc
mov
cmpsb
dec
fwait
jno
int3
sahf
mov
sbb
insl
adc
push
fs
lock
lock
xchg
push
lds
fcoml
orl
mov
jg
sbb
jae
lret
cmp
jbe
and
popf
divb
dec
mov
repz
push
xchg
xchg
sahf
imul
gs
mov
sbb
push
mov
mov
add
test
subl
mov
jns
pop
fisttpl
push
push
lds
jmp
arpl
push
lcall
cmp
shll
sbb
xchg
pop
dec
out
lds
lret
mov
mov
test
cmp
add
scas
mov
jo
inc
ds
push
adc
jmp
out
push
stos
mov
jecxz
pop
cs
aad
or
idiv
bound
fisttpll
popf
mov
sub
je
adc
mov
scas
sub
je
out
mov
cli
pop
outsb
int3
into
popa
dec
jno
xor
jnp
adc
pop
adc
cmp
jmp
inc
outsb
stos
push
lret
inc
mov
or
clc
xchg
lahf
ret
jne
inc
fsubrl
leave
lds
daa
add
rcll
inc
pop
or
mov
rorl
repz
pop
push
jo
out
ret
sub
inc
in
or
add
add
movl
movl
movl
movl
jmp
movl
mov
jg
pushl
pushl
call
subl
xorl
subl
andl
cmpl
movl
movl
movl
jmp
movl
jbe
push
push
call
adcl
subl
xor
xorl
xor
add
orl
movl
xor
movl
movl
mov
shl
subl
mov
subl
push
andl
push
push
adcl
push
xorl
call
andl
mov
cmpl
movl
movl
jmp
movl
movl
je
push
call
add
mov
xor
xor
addl
sbb
sub
mov
mov
xor
xor
cmpl
not
movl
movzbl
jmp
movl
movl
jbe
push
call
andl
adcl
sbb
xor
add
sbb
mov
negl
sbbl
mov
mov
add
mov
or
mov
adc
sub
cmpl
movl
not
movl
jmp
mov
movl
jae
push
call
adc
dec
andl
adcl
and
add
mov
lea
xorl
mov
xorl
mov
orl
or
negl
and
mov
adcl
or
xor
cmp
jne
mov
mov
sub
shrd
orl
shr
sbb
mov
sub
mov
orl
shl
xor
xor
addl
or
movl
mov
movl
cmp
movl
jne
add
mov
add
mov
xor
xor
cmpl
mov
mov
notl
jmp
mov
notl
jae
push
push
pushl
pushl
call
xor
add
mov
and
and
and
add
sbb
mov
and
mov
cmpl
movl
movl
jmp
mov
jb
push
push
push
pushl
pushl
push
push
push
push
call
movzbl
add
mov
mov
add
mov
sbb
xor
or
mov
xor
and
sbbl
not
not
mov
shrd
sbbl
mov
cmpl
mov
mov
not
movzbl
jmp
mov
jge
push
pushl
push
push
push
call
add
sbbl
adc
movzbl
sbb
movzwl
or
andl
movl
mov
xor
shr
cmpl
mov
mov
movzwl
jmp
movl
movl
jae
pushl
push
pushl
push
push
push
call
or
adc
adc
mov
add
add
mov
add
mov
subl
xor
incl
or
orl
shl
sub
cmpl
mov
mov
jmp
movl
je
push
pushl
push
push
push
call
and
sbb
movzbl
sub
mov
adc
mov
mov
sub
xor
sub
jmp
out
cmp
cmpsl
adc
adc
xor
push
push
cwtl
adc
adc
cmc
repz
pushf
mov
les
mov
dec
push
xorl
out
repnz
mov
jb
aas
push
aam
cmc
add
fldt
mov
les
insl
push
stos
cmpsl
ljmp
jo
or
push
in
mov
adc
sti
scas
mov
ret
jnp
mov
icebp
sbb
mov
call
out
addr16
rclb
ss
imul
jnp
lahf
and
sub
push
mov
imul
cmp
in
icebp
jl
sbbl
das
movsb
add
sahf
xlat
into
pop
pop
push
push
stos
aam
or
aas
sbb
je
mov
aaa
lds
lods
sub
sbb
mov
add
das
push
add
jmp
bound
dec
rorb
fisttpl
sbb
cmp
jmp
movsl
mov
pop
mov
rdpmc
es
sub
sar
insl
in
ret
cli
sub
cmp
data16
xor
outsl
mov
adcl
sub
inc
mov
repnz
push
aas
out
and
sub
mov
mov
jnp
mov
inc
xchg
fistpl
aas
inc
out
pop
jl
out
sub
std
dec
inc
inc
ljmp
pop
push
push
loop
aad
xchg
sub
add
cmp
into
add
aas
sbb
je
shlb
jne
sbb
pusha
jns
pop
test
subl
sahf
sarl
leave
out
aaa
inc
out
jno
mov
js
inc
sub
or
fwait
mov
adc
lahf
movups
add
mov
popf
jp
xor
and
cld
push
es
in
jb
icebp
and
pop
lret
jp
push
add
std
mov
xchg
mov
sub
repnz
add
xor
rorb
enter
jo
pop
or
in
in
mov
mov
mov
pop
xor
ret
xchg
push
fsts
mov
push
insb
push
enter
arpl
divl
mov
mov
adc
mov
aam
xor
mov
cmp
in
daa
sti
leave
sbb
and
mov
addb
xchg
jecxz
sub
adc
push
cli
loopne
mov
fnstsw
pop
fldenv
fldl
or
mov
jmp
inc
add
xor
insb
dec
push
stos
add
inc
ds
dec
mov
dec
or
test
sbb
sbb
int
in
pop
es
xchg
jbe
ljmp
fwait
lock
mov
and
sarb
xor
in
cmp
and
mov
dec
jbe
adc
fidivs
loope
rcrl
mov
ret
lds
loop
add
out
pop
inc
out
pop
daa
pop
mov
xor
mov
mov
movsl
movsl
mov
mov
dec
xor
inc
adc
sub
aad
fsts
inc
fwait
add
ljmp
jo
in
pop
int3
or
stos
in
jle
stos
ds
iret
out
and
fcom
inc
data16
ss
dec
flds
daa
jmp
mov
or
js
sub
int3
int3
cmp
mov
inc
xor
pop
jge
mov
dec
ja,pt
jns
lret
aam
test
xchg
adc
loope
scas
xor
or
or
pop
xor
out
add
cmp
adc
jmp
add
jne
pop
std
pop
inc
rcrb
nop
gs
enter
faddl
ljmp
xchg
shll
dec
sbb
mov
mov
cmpl
je
or
ficompl
pop
stc
xor
insl
insl
pop
sbb
sti
das
cli
or
jb
sahf
pop
ss
mov
or
shlb
xabort
outsl
adc
ret
stc
js
mov
addr16
les
std
or
and
and
mov
jo
test
imulb
mov
test
mov
imul
sub
mov
fs
insb
mov
cmp
rolb
inc
and
les
data16
inc
movsl
ss
test
test
jmp
addr16
out
popf
fs
adcb
lcall
mov
fcmovu
cmp
fst
jo
or
fisttpll
mov
int
cmpsl
mov
adc
stos
cmpsb
xor
dec
aas
dec
inc
lods
insl
and
repz
pusha
or
loop
mov
xchg
mov
push
rclb
inc
mov
push
fbstp
ljmp
js
fstpl
mov
push
neg
decl
fstps
xor
pop
sbb
pop
mov
das
pop
aad
mov
in
lods
movsl
and
popa
mov
xchg
jnp
dec
jns
sbb
adc
rorb
mov
jg
push
mov
loope
add
stos
fisttpll
jmp
push
cmp
leave
outsl
mov
arpl
hlt
pop
clc
jne
sbb
mov
mov
cmp
popf
cltd
jns
mov
fbld
jmp
ds
cmp
and
pushf
mov
int3
or
mov
lds
pop
or
mov
inc
xor
aaa
int3
icebp
pop
repnz
sbb
adc
mov
data16
xchg
sub
stos
jmp
mov
jmp
ds
inc
push
sahf
xchg
loop
mov
xor
dec
xchg
mov
add
ficompl
jp
push
movsl
fidivs
dec
mov
cmpsb
mov
sbb
push
and
test
pop
xor
or
imul
cmpsb
and
mov
subl
fcoms
jb,pt
mov
mov
xchg
loop
push
pushf
mov
icebp
jo
enter
add
push
inc
pop
sub
xor
cmp
in
dec
push
and
xchg
stos
push
lea
inc
out
and
out
ljmp
cmp
test
mov
fdivrl
jl
sbb
xchg
cltd
or
ljmp
mov
fs
cmp
repnz
jecxz
xor
insb
mov
outsb
dec
loopne
add
jb
negl
push
mov
enter
cmp
scas
sahf
jne
xchg
jae
sub
arpl
mov
bound
rolb
inc
jle
fwait
sbb
inc
push
loope
add
imul
in
xor
insl
cmp
mov
enter
mov
loope
fs
mov
or
mov
cmp
pop
add
repz
hlt
jecxz
add
bound
xor
mov
sti
adc
xchg
dec
pop
adc
mov
pop
cmp
push
fwait
inc
clc
fidivl
in
xor
int3
adc
mov
dec
arpl
pop
dec
sub
jl
ja
stc
xchg
inc
lods
sbb
mov
mov
test
repnz
icebp
dec
pusha
incb
cs
adc
xchg
pop
sbb
rcll
mov
test
sbb
aam
or
jnp
push
hlt
je
xor
xchg
insb
aam
subl
jge
cs
push
fs
sub
jle
cwtl
sarb
mov
arpl
lahf
call
jns
out
mov
outsb
test
push
test
divb
sti
sarl
hlt
jbe
inc
xchg
and
push
pop
fisubrl
sbb
andl
pop
or
push
push
int3
mov
mov
incb
psllw
push
repz
mov
iret
xchg
cmp
dec
sub
ret
mov
cmpsl
das
test
inc
mull
sub
push
xlat
jbe
divl
setne
scas
adc
notb
fsubrl
jge
lock
lock
mov
stos
cwtl
jne
lret
fldpi
adc
push
sti
push
xchg
ret
sarl
out
jns
push
das
pushf
enter
cli
push
test
cltd
xchg
mov
mov
dec
push
call
addl
int
dec
addr16
cmpsl
shll
ss
adc
add
cwtl
jmp
scas
mov
ss
jns
mov
fwait
test
cmc
out
inc
test
adc
xchg
mov
aaa
jns
xchg
fdivrl
push
lods
dec
iret
dec
pop
xor
out
jl
enter
movsb
or
outsb
mov
cld
rclb
add
pusha
jp
jle
add
jg
enter
ja
lods
sbb
adc
jecxz
ret
int
cld
cltd
cmp
dec
call
adc
ficoms
xor
int3
inc
adc
stc
outsb
sbb
jecxz
mov
repnz
nop
xchg
add
into
fmulp
aaa
cmc
push
xchg
sar
shlb
add
lret
cmp
mov
jbe
push
push
std
loop
adc
mov
push
xchg
sub
and
xchg
push
movsw
mov
xchg
rcll
push
add
pop
xchg
adc
stos
mov
in
test
enter
xchg
xchg
dec
es
cwtl
push
stos
std
push
negl
arpl
dec
fldt
fisubs
and
loop
addl
fstps
jge
mov
and
cmp
imul
jne
out
outsl
addr16
aas
out
ja
inc
mov
daa
sub
mov
in
hlt
xor
mov
insb
mov
je
and
daa
pop
and
es
push
ror
loop
ret
insb
jae
fs
hlt
pop
inc
xchg
fbld
in
push
or
and
repz
outsb
lcall
sub
sbb
inc
shll
add
pop
cmp
fidivs
pop
jns
jb
cmp
jae
xor
and
pop
pop
fisubl
iret
mov
inc
cli
inc
push
les
pop
rcr
stos
sbb
stos
xchg
jnp
cmp
aaa
or
mov
imul
sahf
jae
xor
push
sbb
test
nop
jne
les
inc
mov
mov
and
xchg
repz
dec
call
ret
mov
ss
daa
lcall
add
in
xor
imul
mov
inc
cmc
mov
sub
cmp
iret
shrl
pop
lahf
dec
mov
mov
inc
sbb
xchg
lock
in
xchg
ret
lret
push
std
ljmp
aas
inc
pop
mov
iret
fs
fdivrs
data16
xorb
dec
sti
cmp
push
stos
mov
or
pop
cmp
push
jno
sbb
test
pop
std
mov
das
popf
lcall
and
std
fidivrs
ja
dec
rclb
mov
in
jno
pop
xlat
mov
pop
ret
lcall
mov
sbb
pop
jne
mov
fstp
aad
and
dec
xchg
inc
jmp
out
outsb
xlat
push
sbb
popf
and
mov
jne
arpl
inc
test
mov
add
jmp
push
push
test
ljmp
pop
jno
inc
jbe
lods
jmp
xor
insb
jle
push
test
jne
call
push
jne
fxch
push
das
test
addr16
cmpsl
jae
push
cmp
xorb
mov
aaa
loop
sbb
ret
jge
cld
faddp
mov
xchg
mov
iret
mov
notl
push
leave
mov
test
inc
loopne
add
pop
jecxz
ljmp
mov
sbb
cld
add
xchg
sub
aam
ret
mov
ss
mov
jecxz
adc
shrd
leave
mov
int3
adc
dec
push
sbb
loope
test
aas
push
cmpl
and
adc
fstl
fs
in
sub
fldcw
iret
inc
jbe
jns
xor
dec
imul
xchg
sbb
sub
fmulp
mov
xlat
pop
mov
inc
jb
mov
sub
xlat
movsb
ljmp
decb
ds
mov
xchg
bound
out
hlt
scas
xor
mov
addr16
and
cld
test
jbe
push
dec
xchg
xchg
enter
bswap
repnz
arpl
dec
sbb
in
rorb
mov
xchg
movl
xchg
jne
sar
xchg
lods
int3
mov
adcb
ja
dec
clc
test
mov
fwait
stos
mov
arpl
frstor
push
add
and
pop
xor
adc
dec
jae
jg
aas
dec
pop
cmp
push
and
jae
fdivl
sub
push
pop
mov
nop
enter
lret
lea
rcrb
xchg
idivl
inc
and
out
xchg
jmp
int
mov
data16
mov
mov
in
add
sbb
clc
sbbb
or
cmpsb
aaa
jg
stos
and
jno
out
push
mov
cli
mov
outsl
cmp
sbb
inc
in
sub
fwait
stos
lcall
push
loopne
mov
mov
push
mov
fld
aas
stos
data16
dec
fimuls
iret
in
sbb
les
subl
popa
imul
cs
out
and
daa
and
xchg
adc
cmp
xor
aad
sbb
je
pop
mov
into
ja
pop
movsl
test
push
adc
dec
test
nop
orb
ret
jecxz
push
push
dec
in
sbb
stos
rorl
push
sub
aad
xchg
popf
int3
push
movsl
hlt
popl
xor
xor
popf
test
and
xchg
sub
cmp
mov
and
push
fmuls
pop
in
sbb
lret
dec
xchg
pop
jnp
dec
or
xchg
push
flds
xchg
jge
xchg
inc
jle
int3
addr16
aad
mov
add
das
jge
push
ljmp
or
fnsave
mov
add
and
cmp
xchg
push
fstps
dec
or
cmp
push
push
aam
jle
movsl
iret
jne
add
inc
jmp
jb
lods
sbb
stos
shlb
outsl
add
fcom
add
mov
mov
insl
shl
js
popf
nop
inc
mov
sub
mov
inc
fs
pusha
nop
scas
rclb
movsb
sbb
dec
popa
pop
pop
sbb
pop
sbb
lock
in
jns
idivl
mov
mov
push
fdivs
push
inc
or
addl
sbb
xchg
decb
popf
jg
movsl
movzbl
mov
fiaddl
cs
pusha
dec
aad
iret
mov
addr16
les
cld
outsl
sub
sbb
insl
insl
push
into
xchg
lret
jnp
push
xor
and
cmp
inc
sti
mulps
sub
ja
arpl
daa
pop
and
repnz
jne
dec
ljmp
lods
adc
lods
lods
add
stc
jbe
mov
add
loope
sub
lods
jg
pop
lahf
xor
shrl
cmpsb
hlt
xor
mov
adc
in
pop
movsl
mov
push
movsl
subl
outsb
jns
mov
inc
add
imul
jo
mov
lock
clc
xor
jns
movsb
dec
imul
and
daa
out
popf
subb
imul
adc
xchg
lret
mov
movups
dec
lea
ret
add
and
jecxz
jno
out
bound
popf
xchg
cli
sub
out
push
cmp
ficompl
mov
test
mov
aad
pop
push
jae
adc
lods
mov
fisubs
outsb
dec
inc
push
pop
scas
decb
fidivl
pop
xor
pop
in
cmpb
adc
subb
sub
outsb
ret
push
sti
inc
icebp
popf
lcall
jmp
xchg
mov
ljmp
jbe
cld
jb
inc
dec
ljmp
mov
or
or
cmpb
loopne
and
adc
cli
sbb
push
mov
loopne
xor
ret
shll
mov
pop
fistl
out
cwtl
push
aad
stos
push
out
lods
and
xchg
mov
hlt
rclb
lret
pop
in
mov
aas
dec
ljmp
dec
sahf
mov
in
test
or
mov
out
out
sub
loopne
push
mov
and
add
jmp
dec
lret
popf
or
movsb
mov
movsl
out
mov
adc
bound
js
push
hlt
sarl
sub
loop
mov
repz
or
lds
into
cmp
arpl
or
lods
in
sbb
jge
sti
jo
jae
shrb
fmull
dec
test
outsl
lcall
cltd
xor
insb
out
dec
shrl
das
add
ret
dec
mov
fwait
aaa
mov
shll
add
in
dec
mov
jmp
push
loop
adc
pop
cs
xchg
cltd
dec
jne
je
dec
cld
push
enter
push
repnz
and
addr16
xchg
inc
mov
mov
xchg
or
xchg
jmp
movsl
addr16
fcompl
xor
jne
mov
das
outsb
push
stos
aad
sub
daa
aam
data16
jo
sub
mov
xor
push
sub
pop
fs
pusha
out
lahf
sbb
pushf
push
cmp
and
fiaddl
js
fildll
in
stos
fs
aas
div
add
aas
push
xor
test
xlat
jns
pop
subl
jg
xor
fisubrl
cmpl
push
inc
jmp
pop
pushf
fistps
mov
dec
testb
inc
mov
xchg
sub
mov
add
or
mov
or
inc
add
sub
xor
xor
sub
in
leave
in
shlb
hlt
ret
pop
pop
jb
andl
repz
test
mov
shll
xor
xor
arpl
out
stos
dec
or
lcall
das
in
adc
or
add
sbb
inc
fsubrs
loope
xchg
mov
lods
pusha
xchg
push
xor
out
jno
rorb
add
mov
es
mov
pop
xor
push
pop
std
xchg
mov
cwtl
xlat
imull
push
std
mov
mov
mov
ret
adc
test
divl
mov
jl
mov
and
movsb
jnp
repz
enter
pop
scas
fs
jl
or
mov
xchg
mov
shl
sarl
xchg
imul
sahf
xchg
insl
xor
pop
xor
scas
dec
mov
and
fbld
dec
mov
loope
inc
clc
mov
fsubl
jecxz
mov
mov
xor
push
adc
push
in
mov
pop
icebp
aam
jae
push
push
out
dec
sahf
out
loopne
pop
das
cmp
jge
fsubrs
stc
push
xchg
and
pop
add
cli
mov
jnp
or
sbb
sub
inc
cmp
mov
adc
nop
and
loope
sub
out
cld
adc
scas
test
sbb
pop
jne
mov
fisubs
jmp
aaa
out
ja
adc
in
nop
mov
xor
repz
fcmovu
jne
or
inc
lret
inc
pop
fsubrl
mov
fsubrl
add
mov
xor
xor
adc
rorl
push
xchg
or
js
sbb
test
and
dec
add
jge
cmp
pop
push
idivl
xchg
outsl
adc
cmp
cld
mov
mov
mov
jmp
inc
rcl
xor
add
pop
adc
push
test
mov
sbb
dec
adc
and
jne
xchg
test
push
sahf
pop
and
push
je
cmpsl
add
movsl
cmp
rorl
pop
dec
dec
inc
mov
xlat
dec
sub
xchg
repnz
cld
sbb
pop
shr
in
dec
add
pop
ss
test
or
dec
xchg
cmpsb
fcomps
dec
ret
ds
pop
enter
jne
shl
scas
and
rol
and
lea
sbb
test
pushf
arpl
cmp
cs
xor
or
mov
push
inc
push
data16
jge
sar
loopne
outsl
or
push
jbe
mov
inc
comiss
repnz
dec
sub
xchg
mov
sti
cmpsb
ret
sbb
sahf
and
dec
mov
iret
imul
into
fs
dec
jl
xor
sub
push
scas
arpl
sahf
mov
xchg
mov
je
lods
lods
jle
xchg
fisubrs
dec
rolb
arpl
lea
pop
pop
enterw
in
out
xor
push
or
xchg
out
test
sti
in
aas
dec
cmp
mov
in
lds
and
mov
decl
ss
mov
adc
insb
xchg
inc
mov
pop
pop
cmc
pop
dec
gs
xor
inc
mov
mov
add
push
xchg
std
push
into
insl
dec
jnp
orl
loopne
dec
fcomps
lea
in
mov
add
inc
push
ds
icebp
sub
in
stos
shl
inc
sub
pushf
stos
lods
cmpsl
mov
fiadds
movsb
mov
mov
movb
cmc
stos
imul
scas
adc
adc
aam
jl
push
js
jbe
xor
add
int
test
xchg
andl
mov
add
cmpsl
dec
mov
sbb
in
out
xchg
mov
and
mov
int
sbb
jne
sti
cmpsl
fmul
inc
ret
pop
jl
xor
pop
out
adc
cwtl
or
mov
mov
and
xor
sbb
jno
aas
add
xchg
ljmp
jb
xor
mov
aad
lock
iret
iret
push
dec
pop
loopne
ret
xchg
xor
push
push
adc
cli
test
add
pop
inc
lock
cmp
mulps
xor
flds
ljmp
sbb
shrb
dec
cmpsl
push
or
pop
jbe
pop
xchg
cmp
push
cmp
cmp
jne
hlt
fcoml
xor
mov
and
es
arpl
popa
sub
dec
in
push
pop
adc
insb
lret
std
lods
imul
insl
pop
out
or
pop
outsl
clc
mov
mov
jmp
mov
fcoml
jp
push
mov
aaa
jne
stos
ljmp
jg
addr16
shrl
aaa
fldenv
push
xchg
enter
add
cmpsl
sub
add
mov
gs
add
add
ret
xchg
andb
mov
rorb
or
lret
mov
or
imul
mov
pusha
pop
inc
lds
mov
adcl
call
push
add
mov
add
and
mov
das
pcmpgtb
int
pop
lds
xchg
daa
bound
rolb
fucomi
mov
stc
cmpsb
xor
repz
mov
dec
dec
out
mov
push
xor
iret
inc
gs
pop
dec
add
pop
or
mov
test
xor
adc
pop
mov
es
mov
mov
aaa
mov
lret
arpl
or
pop
mov
aaa
data16
dec
in
xor
loopne
frstor
repnz
jecxz
cmp
push
fwait
xor
fstl
xchg
jnp
les
xchg
inc
stos
movsl
outsb
pop
jp
or
dec
mov
dec
sbb
and
jo
cmp
mov
dec
icebp
mov
aaa
push
insb
out
and
jno
pop
jle
ret
pop
jo
pop
cld
in
fidivrl
hlt
push
mov
inc
in
mov
xchg
push
js
lea
and
jecxz
mov
dec
jno
or
xchg
insl
sahf
or
jmp
xor
mov
inc
cmp
mov
xchg
inc
test
mov
mov
andl
insb
dec
lds
adc
call
mov
sub
shl
cmpsb
mov
jp
xchg
lds
or
lods
mov
mov
lret
lahf
nop
jl
ljmp
xor
adc
andb
out
inc
popa
mov
sbb
sbb
jecxz
sub
jle
popa
jmp
sub
jne
jl
push
xchg
sbb
mov
add
pushf
into
dec
push
cmpsb
jg
sub
popf
ja
iret
mov
push
push
push
mov
pop
mov
pusha
in
jmp
pop
ljmp
or
imul
jne
xchg
mov
sbbl
lea
rcll
rorl
and
mov
dec
or
xorb
or
in
add
or
dec
orb
loop
lds
jg
sahf
and
cli
je
xor
lcall
cltd
dec
ret
cli
sub
mov
pop
stos
in
cld
scas
mov
ja
mov
outsb
push
push
shll
fbld
les
orb
fildl
push
leave
add
mov
mov
xchg
shr
lea
jl
call
sar
pop
lea
stos
xor
cs
jge
inc
call
lea
and
addr16
rcll
pop
dec
popa
in
mov
add
or
ficoms
dec
push
pop
mov
sti
mov
xchg
and
push
adc
xor
inc
ds
std
iret
cs
aas
jg
xor
in
lods
ljmp
lret
mov
push
sbb
push
jo
jno
in
add
cmpsb
lods
push
sbb
mov
gs
or
aam
nopl
push
pop
jb
dec
aad
fisttps
push
cmp
jp
adc
cld
rcrl
nop
stos
dec
movsl
mov
and
in
inc
shll
inc
jbe
xchg
inc
aas
pop
mov
pop
jecxz
mov
in
cmpsb
dec
leave
jbe
outsl
pop
jl
xor
pop
pop
cs
orps
push
jmp
mov
jae
jnp
pop
inc
add
fisttpll
add
mov
sub
xchg
fdivrs
mov
dec
cmp
sub
mov
pop
nop
jbe
jp
sti
iret
pop
jnp
repz
fwait
sbb
ss
mov
lock
nopl
xor
dec
insb
dec
out
pop
xchg
test
adc
inc
popa
xchg
mov
insb
jp
jae
in
rorb
sub
xchg
pushf
aas
stos
mov
inc
ljmp
inc
inc
jne
out
pop
inc
sti
lea
ficompl
cwtl
ja
stos
adc
call
sbb
sub
jo
imul
fs
fisttpll
es
clc
and
mov
xchg
or
outsl
xchg
cmc
pop
mov
cmp
fyl2x
adc
xlat
daa
mov
lods
inc
inc
jmp
shll
adc
sub
jecxz
leave
lods
ret
fs
inc
cmpsb
and
pop
je
mov
mov
fstl
mov
lods
mov
mov
push
sbb
test
xor
sahf
xchg
sub
mov
ss
imul
sarl
loop
push
and
aaa
add
jecxz
mov
ljmp
into
std
xchg
je
inc
shrb
jmp
lcall
mov
stc
insl
jecxz
xchg
adc
xor
fwait
dec
sub
popf
outsl
push
dec
push
inc
int3
fnstcw
push
or
arpl
lock
scas
cmp
dec
push
mov
ret
out
mov
mov
mov
mov
lds
int3
mov
ficoml
in
jecxz
in
mov
fisttps
movsb
jecxz
inc
xor
jo
fsubp
pop
xchg
xor
ss
lahf
sbb
mov
mov
scas
insb
fadds
push
out
das
rcr
mov
sbb
shlb
js
fs
sahf
push
sbb
xor
testb
aas
mov
mov
ljmp
push
ljmp
push
mov
mov
xor
mov
shll
inc
mov
sbb
ljmp
cmp
mov
sub
jno
push
push
in
dec
repnz
lea
insl
aas
sbb
pop
pop
orl
pop
lret
je
push
mov
orl
dec
adcl
mov
sbb
and
inc
push
sahf
push
mov
or
shlb
push
inc
add
not
mov
jmp
mov
jne
pushl
push
pushl
pushl
pushl
call
sbb
xorl
add
addl
movzbl
or
mov
sub
adc
mov
addl
mov
cmpl
mov
movl
movl
jmp
movl
not
jbe
push
push
push
push
push
call
movzbl
sbb
adcl
mov
and
xor
xor
xor
mov
and
add
cmpl
mov
mov
movl
not
jmp
movl
jbe
pushl
push
pushl
call
xor
add
sub
inc
adc
orl
adcl
mov
mov
mov
add
shrd
incl
shr
adc
mov
cmpl
movl
mov
mov
jmp
movl
movl
jle
pushl
pushl
push
push
call
xor
and
xor
movzwl
sbb
subl
xor
or
mov
sbb
mov
and
mov
sub
xor
sbb
shl
sub
xor
orl
or
mov
cmpl
mov
mov
mov
mov
jmp
mov
jb
pushl
call
subl
movzbl
and
mov
add
orl
sbb
sbb
sub
mov
shrd
addl
shr
mov
mov
adc
mov
addl
xor
xor
adcl
or
shl
lea
mov
subl
mov
shrd
shr
xor
mov
sbb
mov
inc
mov
movzwl
sbb
xor
mov
and
mov
xor
andl
or
adcl
shl
cmpl
mov
mov
mov
movl
jmp
movl
jbe
push
push
push
pushl
call
sbb
addl
mov
sbb
mov
xor
sbbl
neg
imul
xor
jmp
fistpl
sbb
jmp
push
test
in
inc
mov
dec
push
push
sub
push
push
sub
out
mov
pop
jae
xchg
dec
test
pop
fwait
inc
adc
push
stos
ja
gs
adc
mov
sbb
sbb
and
inc
lock
jae
push
dec
fbld
loop
lods
call
mov
cwtl
shlb
leave
insl
andb
cmp
xchg
das
and
imul
dec
push
scas
xor
mov
rol
push
jnp
pop
push
shrb
lahf
and
iret
xor
cmpsl
lret
imul
sub
adc
sub
jl
test
lea
sarl
sub
pop
adc
es
cmp
jno
insl
push
pop
sbb
push
popa
xlat
lret
inc
repnz
cmpsl
outsl
popf
add
dec
or
outsb
mov
xlat
dec
xchg
fstpl
sbb
jmp
std
jnp
stos
pop
jle
push
add
repnz
pop
sbb
lods
out
dec
fdivs
andl
jo
pop
nop
loope
ss
and
xor
cmpb
add
jp
in
adc
shrb
sub
bswap
and
in
pop
out
mov
iret
mov
pop
adc
and
cwtl
fmul
lea
pop
xor
adc
adc
loop
das
in
jo
xor
add
xchg
pop
mov
cltd
enter
es
les
neg
movsb
push
adc
cli
sbb
cmpsb
and
stos
sub
xor
jb
das
in
je
rolb
jae
fcomps
sub
jns
inc
sahf
mov
sbb
stos
add
jbe
dec
jnp
js
dec
test
sqrtps
fcmovb
add
fwait
popf
aad
adc
adc
xchg
cmpsl
ficoms
mov
addb
ljmp
adc
bound
or
shlb
je
pusha
sarb
fmuls
call
mov
insb
push
inc
bound
pop
push
loope
inc
cli
in
scas
test
mov
mov
mov
mov
dec
push
inc
fmull
stos
or
sti
adc
repnz
aam
or
push
cs
cmp
xchg
fs
adc
in
mov
ja
shlb
ror
add
xchg
shl
jne
insb
mov
or
outsb
mov
mov
and
jecxz
xor
ljmp
inc
inc
lea
mov
mov
aad
mov
xchg
or
aaa
and
imul
mov
jo
mov
scas
andb
fcoml
jecxz
cmp
sub
out
popa
sbb
inc
test
inc
test
fcoms
fbstp
sbb
imul
test
dec
fsubs
and
repnz
cmpsb
rol
xchg
push
in
jnp
out
and
mov
stos
ret
ljmp
lahf
jg
adc
insl
jecxz
fwait
xor
sub
add
cmpsl
popf
ret
jno
scas
xor
repz
lahf
shll
test
mov
push
in
pop
mov
loop
ljmp
in
aaa
push
xor
out
adc
rclb
push
cmp
cli
xor
imulb
insb
push
js
xchg
addr16
jle
cs
push
push
or
orb
xchg
push
enter
mov
cld
sahf
cmp
xor
stc
lcall
shr
xchg
popa
repnz
pop
in
cmp
cmp
sub
idivl
mov
mov
mov
inc
ret
addl
fxch
imul
insb
xchg
out
push
jecxz
pop
mov
idivb
aad
jne
push
jp
not
arpl
sbbb
mov
cs
pop
push
lcall
and
and
mov
sub
and
push
jne
mov
cmp
add
push
and
xor
arpl
adc
lods
mov
imul
test
in
out
mov
in
inc
add
int
fadd
in
repz
data16
std
cmpsl
fmull
jnp
hlt
iret
std
lahf
and
testb
or
mov
cmp
aaa
out
add
mov
out
jmp
or
sahf
jns
xchg
mov
mov
mov
les
negb
filds
xor
push
jl
movsb
inc
fidivs
push
adc
xor
inc
enter
cmpsl
stc
cmp
cmpsb
and
mov
sahf
mov
adc
sahf
sbb
mov
sahf
test
pop
push
lcall
test
std
push
mov
jge
mov
je
fwait
xlat
lods
xchg
fistpll
jno
mulb
xchg
out
loopne
jle
rcr
roll
mov
push
outsb
pop
jns
adc
std
fwait
in
sub
pop
mov
xchg
or
ds
add
or
fcomps
adc
mov
mov
mov
call
rclb
adc
push
fs
push
push
push
jne
adc
pop
sub
in
int
icebp
sub
popf
xchg
adc
insl
data16
inc
push
add
jecxz
ss
fs
addr16
mov
mov
jg
out
or
stos
movsl
jne
je
add
test
std
test
imulb
sbb
xchg
adc
stos
dec
test
or
sub
jge
sti
jg
pop
jl
pop
xor
call
out
imul
fisubl
inc
shll
xchg
insl
pop
mov
xor
adc
dec
icebp
pop
jp
int
test
push
ljmp
adcb
aam
mov
sbb
out
push
test
mov
movsb
shlb
jg
inc
ds
aam
pop
xor
dec
mov
nop
cltd
orl
jb
and
jl
loopne
mov
adc
mov
fldcw
test
jg
xor
xor
jp
pushf
pop
xor
test
or
loope
mov
shll
pushf
jns
xor
xor
js
jmp
sbb
cmpb
jne
clc
xlat
test
inc
sub
mov
mov
push
pop
push
add
ljmp
call
std
repz
adc
adc
cli
or
xor
nop
outsb
push
mov
sbb
pop
sbb
dec
cld
lea
lock
pop
mov
sbbl
xchg
inc
mov
rclb
mov
dec
push
aaa
fs
pop
in
insb
inc
xchg
mov
lods
xchg
xor
adc
shl
dec
jae
mov
icebp
push
jl
cmp
or
and
inc
lock
xchg
xlat
fistl
in
and
mov
add
je
mov
mov
in
sbb
test
mov
sub
pushl
jns
hlt
in
mov
sub
and
mov
inc
mov
or
jne
int
adc
imul
sbb
xchg
pop
imul
leave
add
xor
mov
cmc
sub
dec
xor
jae
xchg
lea
adc
insl
push
or
data16
outsb
inc
std
sbb
xor
inc
inc
out
sub
mov
pop
icebp
push
or
bound
movsb
mov
pop
push
mov
cmpsb
movsl
mov
cltd
test
and
jge
mov
push
sahf
test
mov
mov
xchg
insb
test
jge
lcall
popa
xor
aas
adc
pop
and
or
std
add
test
test
cmp
cmp
mov
lock
shlb
mov
out
ss
dec
mov
pop
sarb
xchg
orl
mov
dec
mov
cltd
dec
je
arpl
lea
xchg
sbb
dec
lcall
mov
pop
xor
sbb
decl
fwait
aam
lret
int3
jl
xor
mov
dec
lock
add
les
lret
sbb
pop
sub
shld
mov
loop
data16
into
jl
jge
insl
push
cwtl
mov
shrl
test
mov
dec
lcall
sub
jns
add
popl
outsl
cmp
sub
leave
or
jb
xor
scas
add
stc
clc
mov
and
cltd
js
and
sbb
push
pop
es
mov
ds
addl
xor
pop
roll
xchg
scas
inc
push
push
jle
mov
or
adc
lret
mov
std
cmpb
jle
cltd
std
test
jmp
popa
js
push
lret
ret
out
insl
in
cmp
aas
fwait
inc
clc
inc
push
mov
pusha
aad
fists
mov
loopne
scas
jle
add
mov
jae
jmp
js,pn
add
daa
inc
and
pusha
subb
adc
sbbl
mov
xlat
mov
push
in
push
jg
xchg
pop
sub
in
repz
pop
out
mov
push
and
sbb
test
jle
ret
lcall
xchg
fidivl
fdivl
xchg
enter
dec
outsl
dec
addr16
add
out
xor
or
dec
pop
sbb
pop
lret
sub
outsl
xor
test
mov
mov
cmp
dec
fs
jecxz
sarb
sbb
xor
jae
add
mov
or
fistps
xchg
dec
pop
xor
add
add
adc
xchg
xor
mov
into
call
cmpb
inc
aad
push
lahf
sbb
lea
dec
lcall
mov
stos
lret
dec
push
daa
testl
lea
lcall
sbb
and
data16
lea
inc
daa
and
int3
cmpsb
cmpsl
cmp
int
sub
and
pop
or
sbb
adc
stos
into
fnsave
and
jae
scas
jo
add
fisubrl
pop
mov
jge
inc
stos
sbb
add
sbb
incl
sbb
pop
pop
adc
daa
sahf
cmp
adc
jl
dec
rcr
fmull
xchg
leave
nop
adc
and
out
xchg
mov
cmp
in
shrl
jmp
imull
xchg
jne,pt
hlt
adc
lods
mov
std
sub
arpl
xor
mov
mov
xchg
cld
add
jp
test
sbb
mov
pushf
jp
mov
idivl
mov
ja
mov
mov
stos
fwait
xchg
mov
adc
test
push
adc
clc
adc
jne
pusha
insl
pop
in
mov
movsl
and
out
ja
xor
dec
cs
loopne
lock
mov
mov
repnz
dec
in
dec
lret
pop
add
test
lret
int
testb
cld
add
mov
sbbb
and
mov
test
jno
jbe
out
add
jle
pop
js
and
dec
cmp
and
push
inc
inc
shlb
adc
xchg
push
sub
outsb
and
jnp,pn
adc
sti
sbb
push
mov
push
fisubs
out
ret
fwait
cmpsl
cs
es
sahf
mov
stos
cmp
aam
mov
loope
test
rcll
cmc
ret
add
and
icebp
jp
pop
fidivrs
dec
sbb
popa
sarb
int
sahf
xchg
outsb
fxch
inc
jle
fstp
jns
scas
pop
shll
pop
xlat
aaa
psubusb
xor
push
nop
fwait
neg
add
push
stos
adc
inc
mov
cld
sti
mov
jg
loopne
and
lods
cmp
xor
fldl
fstps
rcll
cltd
xchg
mov
hlt
lahf
sbb
mov
mov
cmpsl
add
ret
jb
mov
pop
push
mov
add
aaa
xchg
aam
fucomi
jbe
imul
mov
cmp
push
xor
sar
xchg
mov
jbe
or
loopne
mov
push
adc
pop
and
dec
test
das
shrl
movsl
pop
xor
mov
dec
imull
fwait
lahf
das
enter
jmp
mov
popa
cmp
inc
add
xchg
imul
jae
data16
stc
jge
outsl
pop
adc
fnstsw
into
xchg
push
aam
loop
stos
jno
push
cmp
mov
std
push
mov
pop
push
out
cmpb
sbb
hlt
push
aad
sub
push
pushf
mov
push
inc
jl
sbb
bound
cmpl
inc
inc
or
xchg
data16
mul
or
fcmovu
inc
cmp
push
pop
cmp
mov
js
add
and
jmp
push
sahf
push
pop
mov
nop
cld
sahf
and
mov
jno
pop
lods
adc
adc
in
lret
or
aas
les
cmpsb
pop
jl
jecxz
xor
dec
xor
daa
mov
fisttpll
data16
and
les
ds
lret
jmp
push
movsb
loop
jae
mov
pop
sahf
imul
xchg
ss
data16
nop
in
jbe
jno
cltd
dec
sti
hlt
movsl
out
adc
mov
mov
in
jb
dec
sti
out
ret
popf
inc
xchg
or
push
inc
push
xchg
icebp
mov
sub
cli
ret
dec
lahf
and
push
pop
roll
fstpl
cmpsl
inc
aam
push
dec
push
imul
jno
inc
add
mov
es
shll
subl
pusha
in
aam
sub
fwait
add
leave
scas
xchg
sti
loopne
cwtl
xor
sar
xchg
xor
pop
add
sbb
andb
lods
push
test
jnp
mov
jbe
and
mov
or
mov
mov
jb
xor
inc
xchg
in
cmc
imul
ret
pop
adcl
in
ret
mov
jbe
inc
mov
or
mov
inc
sti
mov
push
mov
dec
fs
fldl
addr16
mov
inc
daa
push
loopne
jbe
popa
les
pop
mov
xchg
imul
pop
jmp
push
cld
popa
dec
jp
insl
and
jge
cld
das
dec
ja
popa
xchg
nop
outsb
cmp
imul
das
test
and
xchg
jno
bound
pop
sub
out
incl
add
xchg
ljmp
push
mov
cmpsl
cltd
lret
jl
repnz
inc
xlat
stos
push
inc
icebp
xor
jno
clc
push
data16
mov
jae
mov
cmp
nop
fs
lods
icebp
cmp
pop
or
fisttpll
dec
in
insl
sub
mov
push
stc
or
je
mov
insl
call
test
rclb
and
int3
xchg
outsb
adc
gs
pushf
cmp
cmp
scas
push
ret
jne
xor
inc
shlw
mov
cmpsl
mov
pusha
xchg
jg
stos
cmp
pop
hlt
xchg
dec
enter
outsl
imul
js
inc
dec
sarb
sub
inc
xchg
or
mov
and
int3
pop
and
push
sub
scas
push
add
repnz
add
mov
shrl
stc
popa
iret
out
arpl
aam
xor
pop
pushf
cwtl
outsb
jg
movsb
out
lds
int3
cwtl
jecxz,pt
pop
sbb
cmp
lea
jecxz
add
pop
push
je
sbb
ret
hlt
or
ljmp
std
jnp
popf
data16
pop
cmpsb
jl
sbb
pop
rorl
das
push
das
out
cmp
mov
mov
sub
adc
inc
jp
add
push
fisttps
aam
adc
popa
insl
lods
push
sti
pop
push
jg
loop
dec
add
mov
aam
push
cltd
sub
lret
cmp
pop
xchg
rcll
cmpsl
shrb
mov
mov
out
inc
mov
mov
jo
test
std
and
xchg
ret
jae
aaa
cmp
jns
flds
sbb
mov
in
pop
loopne
fwait
mov
add
lcall
jmp
mov
inc
test
cmc
mov
outsb
pop
pusha
imul
inc
int3
and
pop
fistpl
outsl
xchg
addr16
bound
mov
xchg
repnz
shl
jns
cwtl
aad
fcoml
add
aam
sbb
mov
inc
push
xor
mov
jbe
lea
stos
ja
fsubrs
push
cmp
out
das
loope
xchg
adc
icebp
lcall
and
sub
push
sbb
dec
cmp
scas
fldenv
push
gs
cmpsl
lock
lods
test
mov
insl
ljmp
push
leave
adc
or
mov
jmp
fs
xor
lret
sbb
jnp
mov
mov
xchg
incb
mov
fstp
sti
std
ss
fildl
mov
imul
fdivl
in
mov
cmpsb
cld
incl
add
jae
and
and
inc
jge
sbb
fsubs
cs
fadds
lods
mov
xor
mov
mov
mov
jno
inc
adc
daa
inc
sub
js
outsl
loopne
icebp
mov
les
jae
push
cmp
pop
in
xchg
mov
and
jmp
and
inc
fsubrs
mov
xlat
mov
jmp
inc
mov
lcall
mov
mov
xchg
mov
lds
add
xor
mov
lcall
loope
fisttps
add
call
cmp
or
rsqrtps
inc
sbb
popf
loope
mov
inc
sub
outsl
aad
xor
shll
outsb
js
fsubrl
or
push
push
mov
mov
jl
mov
inc
mov
scas
cmp
addr16
incl
test
mov
cmpsl
test
adc
rorb
es
pop
xchg
lret
je
xor
les
jmp
sub
lods
pop
sub
or
mov
sbb
aam
xor
jns
xchg
jp
loopne
push
jae
sub
mov
ficomps
lahf
outsb
push
xchg
push
decb
cmp
setne
pop
sahf
dec
and
push
les
push
mov
cmpsb
pop
aam
mov
div
mov
mov
fidivrs
fwait
insb
add
lods
cld
xchg
add
xchg
sti
inc
movsb
xor
jbe
cmp
pop
cmp
or
and
cwtl
xchg
out
je
insb
insl
mov
ret
pop
add
mov
ljmp
xor
and
jmp
mov
or
push
mov
arpl
scas
and
cmp
aas
jmp
orl
mov
int
hlt
aad
loop
movl
or
and
mov
into
cli
mov
mov
cld
int
xchg
jmp
pop
aad
cltd
add
test
jne
movsb
gs
push
inc
js
insb
inc
sub
inc
jnp
imul
inc
sub
xor
xchg
cli
movsb
test
scas
lea
mov
inc
dec
imul
enter
ret
jmp
shll
out
insb
mov
fdivrp
ljmp
or
dec
ss
push
mov
popf
cmc
rcrb
ja
cld
xchg
jne
mov
lea
or
dec
sub
mov
and
adc
lahf
aam
inc
mov
or
pop
xchg
push
xor
or
sbb
push
insl
stos
xchg
push
pop
ja
push
mov
les
pop
sub
aad
ja
pusha
dec
jo
add
fstl
dec
pop
mov
jbe
cld
pop
in
out
dec
add
or
test
lods
icebp
int3
scas
scas
sub
sbb
lds
shll
pop
sub
add
sbb
sarl
cmc
cmp
xchg
insl
or
outsl
aad
cltd
jne
pushf
cli
xor
pop
outsl
and
dec
xor
pop
movl
std
insl
push
jl
dec
cmp
rcll
imul
xchg
movsb
lea
mov
sub
or
sub
or
and
imul
xor
pop
cmp
jmp
pop
sub
cmc
sbb
loope
cmp
gs
clc
in
xor
sbb
pop
push
jbe
add
loope
cmp
shll
dec
jle
push
repnz
jnp
or
shl
sub
jmp
and
mov
jo
addr16
int3
orl
outsl
repnz
add
rcll
sbb
sub
and
jnp
pop
data16
pop
fdivrp
pop
fsubs
std
insb
imul
inc
lods
push
mov
mov
dec
xor
jo
xchg
insb
jne
flds
idivb
shr
pop
hlt
ds
mov
arpl
pop
lea
sbb
bound
fs
mov
test
adc
pop
shrb
dec
dec
jno
aad
mov
sub
test
ja
mov
dec
decb
in
stc
jno
mov
cmpsl
adc
pop
mov
lods
mov
std
or
insl
jno
stos
sub
push
sub
and
lea
mov
lock
fsubrp
jbe
push
mov
fisubl
mov
pop
movsb
mov
mov
adc
pop
sbb
push
test
push
jecxz
popa
adc
push
std
ja,pt
adc
out
pop
vpmacsdqh
push
sub
sub
lock
out
data16
popf
adc
push
pop
jae
dec
imul
mov
mov
mov
or
pop
mov
push
xchg
mov
out
out
adcl
fisubrs
mov
cltd
lcall
sub
mov
outsb
hlt
in
clc
add
mov
cmp
add
adc
imul
es
pop
insb
js
sub
sbb
out
lret
movq
ljmp
imul
loope
and
xor
arpl
lret
or
mov
jle
leave
inc
jl
pop
jnp
or
or
fsubl
or
jmp
stc
pop
mov
pop
repz
cmp
repz
lods
inc
lea
push
xor
insb
mov
rol
popf
xor
aas
jmp
pusha
cmp
dec
daa
jmp
lret
pop
sbb
or
push
inc
push
or
mov
rolb
cmp
add
arpl
xor
popa
test
nop
add
test
xchg
pop
popf
inc
cmpsb
outsl
jle
gs
ret
xchg
test
in
repz
xchg
cwtl
push
fisttps
call
fldl
js
fisttps
xchg
enter
leave
xchg
push
stc
ljmp
or
mov
or
test
inc
jecxz
pop
je
out
push
xor
das
add
mov
arpl
lahf
xor
lock
mov
test
cmpl
incl
push
xchg
sbb
adc
ljmp
cli
popf
or
mov
push
jl
push
je
and
std
jo
pop
mov
adc
repz
sub
repz
popa
fstpl
loop
leave
sbb
dec
outsl
popa
mov
mov
sub
mov
sbb
mov
insb
sub
sarl
sahf
js
sbb
pop
xor
fbld
dec
popf
pop
lahf
jno
rcrl
jle
iret
leave
repz
frstor
cmp
push
ficomps
mov
mov
pushf
sbb
xchg
call
andl
push
sbb
repz
pop
sub
xchg
or
or
jns
lcall
jae
pop
std
xchg
xchg
adc
xor
popf
bound
mov
jo
sbb
xor
and
jnp
pushf
inc
xor
push
and
push
mov
adc
mov
cs
gs
push
sub
jae
stc
and
mov
or
imul
cld
mov
sahf
mov
stos
adc
sahf
jge
and
icebp
sahf
add
dec
cltd
dec
sti
repnz
xchg
adc
cmp
cmp
cwtl
inc
and
mov
jo
mov
mov
ja
mov
jecxz
lea
lods
insb
mov
jmp
aam
xchg
push
testl
dec
adc
add
dec
fisubs
dec
mov
fistl
ljmp
dec
or
jl
fildl
push
lea
test
cltd
jb
sti
imul
scas
mov
mov
out
or
or
shll
jle
sbb
sahf
jns
xlat
and
aad
out
pushf
std
int3
into
pop
aad
in
faddp
js
mov
test
out
mov
xchg
jmp
insb
es
fwait
and
call
dec
frstor
add
xchg
fistpll
mov
loope
pop
adcb
add
lods
mov
or
sbb
imul
pop
sahf
bnd
stc
imul
mov
test
sbb
inc
dec
je
cmpsb
dec
add
mov
sub
cmpl
aaa
push
outsl
inc
cmp
xorl
leave
jmp
mov
loop
xlat
imul
sub
leave
scas
lods
mov
test
rorl
xor
insb
cwtl
adc
adc
jbe
mov
dec
dec
test
sti
iret
xchg
stos
lcall
cs
mov
inc
jo
hlt
pop
movsb
scas
loop
mov
jp
jno
rolb
inc
inc
push
jbe
mov
ret
xlat
sub
xor
xor
lock
xchg
mov
adc
or
test
mov
xlat
mov
sbb
les
jmp
pop
inc
lock
push
fwait
loop
lods
dec
cmpsb
add
xor
daa
jle
dec
or
js
pop
imul
xchg
cmp
sub
inc
mov
lret
and
and
jp
data16
sbb
mov
jno
addr16
ljmp
push
inc
sbb
add
add
fistps
ret
pop
or
into
dec
xchg
lock
push
in
leave
push
inc
push
push
and
lds
sbb
xor
pop
leave
sbb
adc
aaa
stc
ds
fnstcw
add
sahf
mov
lahf
cmp
fisubrl
xor
sub
dec
imul
sbb
aam
loop
push
and
fists
repz
cmp
popa
in
push
add
popa
mov
cmp
xchg
mov
shrl
adc
xchg
mov
incb
mov
cmp
sar
or
sahf
repz
stos
or
out
pop
pop
mov
jno
out
jbe
mov
pop
or
rorb
jmp
arpl
test
int
mov
push
sahf
cli
push
mov
hlt
je
fnsave
cs
cmp
movsb
stc
pop
test
and
out
mov
push
cmp
or
fs
jno
fcomps
dec
out
mov
push
mov
pusha
jb
js
test
xor
movsb
or
sbb
cmc
sbb
jl
push
stos
leave
sub
cmp
and
adc
mov
fdivrs
outsl
mov
arpl
push
loope
inc
movsl
ficompl
pushf
mov
dec
lods
push
mov
out
xchg
mov
ja
jns
and
imul
xor
movsb
jb
mov
insl
sbb
jne
jno
mov
fisttps
dec
cs
jle
fstpl
cli
mov
sbb
xor
mov
xor
mov
icebp
dec
inc
out
outsb
add
lods
push
shlb
dec
push
scas
mov
pop
call
movsl
aaa
js
lret
bound
push
add
pushf
xchg
push
adc
jae
insb
stc
mov
adc
fbstp
lods
pop
sub
pop
imul
jnp
addl
sub
cmp
push
ret
outsb
mov
sub
and
aas
out
enter
data16
stos
dec
enter
loopne
mov
jle
xor
mov
rcll
pop
lea
pop
repz
dec
stos
inc
int
sub
stos
jle
or
xor
and
mov
lock
inc
xchg
jmp
pop
push
add
xchg
scas
je
or
mov
fs
inc
xor
hlt
popf
mov
popa
in
sarb
mov
pop
pop
xchg
mov
movzbl
or
mov
adcl
shrd
addl
mov
mov
xor
xorl
shr
sbb
mov
mov
xor
or
addl
shl
sub
mov
mov
cmp
mov
movl
jg
sub
mov
and
mov
subl
shrd
addl
mov
movzwl
xor
mov
mov
xor
xorl
shl
xor
or
xorl
shr
xor
mov
mov
mov
addl
mov
xorl
shrd
shr
cmpl
mov
mov
jmp
mov
jge
push
push
call
mov
adc
movl
and
and
mov
mov
mov
sub
imul
mov
mov
xor
xor
or
shl
imul
sub
jmp
mov
mov
shrd
mov
mov
xor
shl
xor
or
shr
mov
mov
mov
mov
shrd
shr
mov
mov
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
jmp
lock
cmp
mov
jae
test
adc
or
push
push
mov
scas
stos
dec
push
sub
test
adc
push
loop
pop
out
mov
bound
mov
lods
adc
nop
mov
dec
adc
and
icebp
leave
cmpsb
outsl
fs
pushf
rdmsr
int3
sub
add
or
dec
pusha
push
lcall
mov
movq
mov
xchg
jp
jne
or
lds
sub
add
jne
test
sbb
sbb
es
adc
call
adc
les
xchg
inc
loop
adc
jno
cmc
imul
pusha
lds
jnp
lret
jle
jg
addr16
mov
jnp
out
adc
jae
dec
into
jbe
mov
push
sahf
sbb
and
cmp
lret
scas
xchg
outsl
push
outsl
adc
pop
xchg
jo
cmp
test
inc
xchg
bound
stc
loopne,pt
mov
xchg
popa
mov
inc
inc
push
and
mov
dec
scas
psubsb
ror
pop
test
mov
aam
sahf
cltd
addl
xchg
out
fiaddl
cs
sub
jne
mov
stos
int3
push
out
ja
imul
jge
pop
mov
testb
repz
pop
call
jo
adc
sbb
fistl
and
inc
ret
mov
push
or
insb
mov
push
das
push
lds
xor
sbb
rcrb
add
das
arpl
adc
mov
stc
mov
xchg
push
and
mov
fs
mov
pop
cmp
int3
mov
mov
pop
das
inc
loop
hlt
push
xor
and
jne,pn
and
scas
xchg
xor
xor
icebp
xchg
xchg
inc
scas
cmp
sub
cwtl
cmp
sahf
gs
or
push
mov
add
mov
subb
pop
aam
hlt
in
test
scas
dec
sub
mov
test
insb
fisubrl
xchg
push
cltd
inc
movb
test
iret
mov
sub
daa
xchg
pop
mov
mov
fisubrl
int
mov
cli
inc
in
in
lea
jnp
inc
jecxz
ret
jb
adc
inc
les
cwtl
push
push
mov
lods
adc
out
pop
adc
push
push
divl
inc
mov
sbb
daa
inc
jmp
push
outsb
cmp
je
call
sbb
xchg
out
in
mov
sub
pop
bound
fisubrl
add
rcrl
loope
and
fidivrs
xor
cmpsb
hlt
jmp
add
lcall
mov
dec
inc
xchg
lahf
fdivrl
mov
mov
sarb
xorl
outsl
cmp
das
add
mov
jne
jmp
mov
pop
adc
mov
jnp
lods
dec
pop
rcr
mov
cltd
xchg
movsb
pop
mov
inc
out
lds
movsb
push
icebp
sub
or
mov
repnz
std
scas
mov
aas
rolb
cmc
sbb
or
pop
inc
dec
mov
lods
sub
hlt
mov
fs
push
sub
out
fistl
push
add
movsl
pop
imul
xchg
inc
test
fwait
xchg
pop
outsl
jle
jl
cli
lods
or
pop
hlt
adc
cmpsb
sub
push
mov
push
orb
jne
sbb
xchg
sub
fs
outsb
jge
out
inc
or
push
out
adc
cmp
ret
stos
std
add
loopne
add
push
add
lret
fists
mov
push
lahf
icebp
mov
test
ret
pop
movsb
dec
and
data16
cmpl
dec
push
dec
enter
xor
cwtl
shr
fs
push
xor
add
sub
ret
aad
js
push
clc
jns
pop
std
fildll
sti
ss
imull
push
push
fstl
add
and
aad
movsb
sub
out
outsl
scas
aaa
jg
fistpll
sub
loope
and
mov
mov
fisubs
movsb
jbe
push
sbb
mov
add
jg
mov
lds
xlat
shll
xchg
arpl
lock
mov
or
adc
pushl
cmp
dec
mov
mov
cmp
pop
jmp
sbbb
jnp
mov
repnz
push
mov
popa
push
xor
adc
sbb
xchg
adc
jnp
imul
outsb
je
push
jmp
mov
andb
add
adc
scas
xchg
enter
imulb
mov
mov
imul
mov
adcl
pop
cmpsl
jmp
add
or
sbb
and
data16
xor
push
mov
test
lods
loopne
lods
xor
sahf
fadd
lds
dec
out
mov
dec
add
xor
xchg
jbe
pop
push
xor
lods
movl
scas
testl
mov
js
notb
jo
cli
sub
dec
cld
sahf
mov
rol
insb
loope
pop
lret
scas
cmp
lret
in
mov
loop
hlt
xorb
pop
lret
cmp
test
out
fstpt
jbe
mov
mov
sbb
add
lods
rclb
fldcw
push
push
js
ret
idivl
sbb
dec
nop
xchg
inc
pop
cwtl
stos
lds
sbb
pop
mov
cwtl
xor
sub
lods
ret
xchg
mov
xchg
fnsave
jmp
inc
int
int
add
das
leavew
push
test
jecxz
rcl
daa
adc
pop
jae
sbb
stos
pop
cmpsl
mov
or
daa
loope
icebp
cmp
dec
jnp
jae
push
dec
cli
dec
scas
cld
clc
in
pop
push
outsl
enter
push
and
inc
push
sub
fists
pop
and
daa
and
mov
or
aaa
pop
and
mov
lcall
out
add
test
jns
dec
push
fisubrl
loop
imulb
outsl
movsl
pop
sbb
xor
divb
sub
andl
andl
xchg
roll
sub
scas
mov
push
add
push
scas
xor
push
inc
js
popa
jo
std
cmp
push
bound
dec
xor
mov
pop
arpl
xlat
sarl
loop
add
pop
and
mov
push
ljmp
xor
push
adc
xchg
or
push
adc
hlt
jl
push
jecxz
push
or
popa
fimuls
push
xchg
pop
je
addl
shrl
sbb
inc
sub
push
fldenv
mov
jge
jb
cld
mov
cwtl
lock
mov
mov
jecxz
add
xorb
jmp
movsl
mov
movsb
bound
dec
or
jge
xor
lock
repnz
pop
jo
and
aas
jns
aaa
in
mov
pop
pop
test
sbb
add
fstpt
es
pop
mov
test
jl
cld
adc
jmp
lds
hlt
push
test
mov
stc
push
test
notb
loopne
ss
or
mov
sbb
jns
sbb
cwtl
call
and
sbb
test
push
test
fildll
shll
inc
jmp
test
pusha
mov
xchg
sub
dec
pop
jb
jnp
test
lcall
jmp
jae
or
and
sbb
fistps
push
pop
cmpsl
pusha
lods
mov
push
inc
push
mov
cs
jnp
mov
icebp
adc
arpl
push
mov
xchg
and
push
push
shlb
xchg
pop
dec
shrb
test
addl
mov
pop
pop
mov
mov
ja
fucom
and
mov
sti
cmpsl
xchg
imul
mov
shrb
jle
xor
mov
sahf
test
adc
adc
idivb
xor
inc
xor
sbb
xchg
mov
popa
int3
adc
and
and
add
cwtl
icebp
outsl
sti
mov
adc
pop
in
pop
icebp
fbld
pop
pop
les
pushf
push
fwait
outsl
out
movsb
mov
shll
sti
pop
lahf
leave
stc
fistps
repz
and
fmulp
loopne
aaa
jb
lods
dec
jmp
ret
xchg
fistpl
arpl
jecxz
orl
adc
addb
or
pop
jnp
cs
shll
das
push
dec
mov
mov
inc
test
or
rcll
jmp
icebp
daa
movsl
adc
push
mov
or
popf
cmpsl
jmp
pop
out
push
lcall
fmuls
test
dec
daa
push
lods
jo
ja
inc
adc
sub
dec
cld
sbb
stos
cvtps2pd
sub
mov
inc
dec
jl
fstpt
mov
popa
adc
xchg
dec
dec
add
xchg
push
push
cmc
arpl
mov
rorb
shll
xchg
call
imul
push
outsl
xor
lea
adc
lahf
popf
jne
add
or
or
mov
xchg
mov
popf
sbb
daa
das
dec
dec
ljmp
test
adc
loope
out
xor
inc
dec
rolb
cli
clc
subb
xor
xchg
mov
xor
sub
hlt
stos
enter
sbb
in
fwait
jnp
test
push
jne
in
pop
push
testl
xchg
add
dec
xor
jbe
bound
inc
stos
faddl
adc
aam
pop
sbb
pop
mov
xchg
mov
inc
push
das
testb
loopne
cs
mov
std
fmull
xor
cli
push
idiv
icebp
sub
jae
sub
int
jo
xchg
call
lret
gs
pop
and
cmp
movsb
or
sub
test
pop
sbb
push
jg
cmp
sub
or
sbbl
inc
or
pop
push
incb
outsl
mov
and
lods
mov
pop
mov
in
fwait
dec
or
or
lds
pop
mov
adc
cmp
adc
lods
adc
add
sbb
xchg
jne
or
les
cli
pop
mov
adcb
out
xchg
imul
enter
mov
add
fdivr
adc
jge
mov
and
cs
pop
push
push
lds
sbb
ds
ss
out
dec
pop
pop
aaa
mov
jmp
adc
add
cmpsl
mov
enter
test
pop
push
and
xor
mov
fistpl
rorl
xchg
ret
sbb
mov
inc
lcall
ljmp
gs
add
neg
in
dec
jbe
or
imul
repz
jb
xchg
test
cli
test
dec
cltd
lret
and
and
mov
leave
jl
sbb
push
or
pop
inc
out
and
cmp
sub
sar
shll
adc
mov
pop
imul
repz
add
cmpsl
das
cli
in
adc
mov
mov
orl
ljmp
mov
jbe
pop
outsb
add
inc
in
jno
or
push
push
sub
jecxz
aam
xorl
ds
cltd
cmc
cmpb
cmpb
mov
xchg
sbb
adcb
pop
aas
cmp
xchg
andl
sbb
ds
and
sub
lahf
aad
jge
cli
inc
jp
mov
insb
cmp
cli
inc
or
jg
pusha
shl
dec
sub
stos
lods
fstps
mov
push
lret
jae
into
shrl
jo
pusha
aad
enter
mov
sti
pop
xorl
push
and
xchg
das
movsb
xchg
outsb
enter
mov
cli
fidivrl
inc
mov
mov
in
std
jecxz
mov
sbb
cltd
in
or
and
sbb
fisttpll
outsb
inc
and
sub
jle
add
jg
sbb
mov
pop
insb
xchg
adc
xchg
xchg
and
xchg
loope
je
dec
jnp
xchg
and
xor
mov
std
rorl
and
cmpsl
pop
push
int
popl
test
dec
lock
adc
ss
jp
mov
mov
and
inc
gs
std
andl
mov
mov
ds
outsb
mov
add
sub
or
into
leave
mov
cmp
in
sbb
adc
mov
test
mov
pop
jle
mov
cltd
sbb
sbb
ljmp
sbb
push
inc
test
mov
cmpsl
jmp
pop
xchg
adc
jns
mov
sti
insl
fcomps
jge
dec
pop
arpl
dec
mull
cltd
xor
mov
sti
add
dec
push
lret
sbb
out
adc
mov
mov
jl
and
cmpsl
or
fiadds
pop
cmp
push
cmp
mov
pop
push
jno
dec
and
dec
shrl
mov
add
add
cmc
test
stos
xchg
jecxz
lea
add
cmp
aaa
and
xchg
nop
mov
add
sub
test
in
rcrb
out
push
fwait
std
and
nop
inc
xchg
into
dec
lods
mov
jae
ret
aad
mov
mul
jl
out
inc
xor
test
or
dec
cmpsl
jnp
and
mov
shlb
and
mov
loopne
das
sub
stc
popa
pop
inc
sub
ret
inc
fimull
xlat
aad
xchg
xchg
scas
cld
pushf
pop
jae
ja
imul
mov
sbb
test
cmp
aad
cltd
into
test
jmp
daa
mov
adc
loopne
popf
inc
mov
shll
ror
sub
mov
dec
pop
testb
cmp
and
in
repnz
ss
sub
in
fdivrp
arpl
out
mov
pop
and
mov
mov
call
ret
push
popf
jmp
xor
inc
dec
pusha
test
push
and
mov
shr
lea
pop
cmp
dec
or
jns
fs
or
gs
mov
jns
shll
rcrl
scas
push
out
orb
jbe
arpl
popa
push
stc
mov
mov
pop
xor
mov
gs
dec
add
inc
je
or
inc
mov
lock
scas
mov
xchg
xchg
push
adc
sub
mov
stos
or
push
les
cmp
jbe
mov
cmp
and
mov
inc
es
ss
mov
mov
xor
inc
sub
mov
xor
xchg
ljmp
adcl
push
cmp
dec
adc
lahf
imul
xor
mov
scas
sub
lret
cli
test
cs
aad
arpl
nop
add
and
loop
mov
push
daa
cmpsl
stc
leave
inc
push
lret
out
adc
dec
xor
jle
jbe
sub
clc
inc
dec
stc
repnz
rolb
int3
lods
mov
adc
movsb
inc
xchg
ret
cmpb
sahf
push
test
xchg
test
pop
xchg
insb
mov
scas
fsubr
pop
push
fsts
xchg
js
les
dec
les
rorb
mov
inc
mov
js
cltd
popf
push
jnp
xor
mov
test
mov
adc
ja
cli
repz
sub
mov
rcl
cmp
aad
shlb
ds
stos
dec
imul
fs
sahf
sbb
dec
jg
enter
inc
push
xchg
scas
cs
pop
and
and
add
jne
xorl
xor
iret
mulb
dec
push
mov
lcall
or
ds
adc
scas
xlat
inc
and
ss
es
jmp
xchg
jl
addl
dec
mov
cmc
mov
das
xchg
or
push
and
mov
pop
mov
sub
scas
push
in
jae
cwtl
loopne
pop
iret
inc
leave
jmp
outsb
sub
cmp
in
pop
xor
in
clc
mov
dec
push
pop
adc
or
in
and
shl
movsb
jnp
push
sbb
in
imul
mov
and
insl
icebp
push
test
aas
adc
scas
pop
mov
xchg
icebp
pop
sub
push
mov
sub
or
push
jge
pop
sbb
sub
ss
and
dec
rcrl
and
test
pusha
jo
dec
cmp
ljmp
mov
mov
insb
lcall
movsb
out
push
add
xor
lock
sub
mov
cmc
cld
loopne
inc
lds
dec
iret
adc
mov
mov
xlat
dec
dec
aam
push
andb
test
cmp
pushf
fbld
add
enter
or
lock
fcmove
mov
xchg
jecxz
aaa
popf
and
fs
movb
sub
js
ds
aam
icebp
xor
sub
outsl
mov
in
repz
xlat
inc
nop
aad
fstps
mov
rclb
lret
daa
sbb
adc
push
xor
cmc
cmp
adc
push
jl
jno
add
movsl
test
test
aas
mov
mov
dec
fs
and
xorb
imul
mov
shlb
sbb
sub
add
pushf
pushf
cmp
jne
mov
movsl
repnz
test
sbb
into
rorl
popf
fmull
mov
jp
mov
insl
loop
pop
stc
rorb
stos
in
nop
ds
shrb
aas
in
aas
xlat
xchg
push
ret
mov
and
stc
dec
sbb
cmp
xchg
lds
xchg
hlt
xor
inc
fs
fs
sbbb
loope
test
xor
adc
rorb
leave
popf
xor
cmc
xchg
jne
dec
in
mov
pushl
mov
jne
inc
dec
in
mov
adc
lahf
data16
cli
mov
aam
mov
js
sub
ds
push
jge
push
stos
popa
push
test
jne
xchg
adc
jnp
test
jb
cmpsl
popa
ds
xchg
pusha
and
in
scas
mov
cmp
insl
data16
cmc
fbld
sbbl
xchg
popa
in
aas
sub
adc
popa
shrl
lret
cmpsb
mov
ret
scas
test
or
push
shl
mov
mov
int3
cmpsl
cmp
aam
and
sub
shll
add
sarl
mov
jg
arpl
inc
ljmp
int
inc
add
jg
push
jg
scas
rorb
jnp
xor
mov
insb
cmpsb
jl
loopne
or
pop
int3
stc
mov
inc
in
xchg
fst
popa
fdivrp
lods
js
outsb
rdtscp
lahf
int3
std
dec
rorb
and
xchg
test
jg
sub
lea
inc
cs
stos
mov
leave
mov
lods
in
in
adc
and
imul
and
out
lods
mov
mov
ljmp
movsl
mov
sub
repnz
pop
sub
fcmove
push
fwait
adc
sbb
mov
int3
int3
jg
cmp
or
add
sbb
leave
test
rorb
mov
fs
in
xor
cmpsb
test
cmpsb
ret
sahf
in
jbe
cltd
cmpsl
cmp
dec
cmc
cli
jbe
and
in
add
incl
fwait
sbb
int
sti
mov
fsubr
out
mov
cmpsb
shll
push
dec
and
mov
imul
mov
test
fwait
push
dec
mov
sub
mov
sbb
loope
xchg
lret
adc
ret
and
jae
or
push
imul
adc
fisubrl
inc
cmp
cli
xchg
pop
jge
add
cmp
lods
or
stos
jae
sub
arpl
push
rcl
mov
cltd
pusha
cmp
adc
inc
cmp
fidivl
inc
xlat
xrelease
and
clc
pop
stos
lock
inc
xlat
loopne
jno
jne
pop
lods
rclb
cs
sbb
loop
or
adc
pop
pusha
xchg
push
les
mov
xchg
sub
pop
lods
int
testb
xor
scas
scas
dec
rcrl
push
in
or
ja
add
cld
cwtl
push
sahf
movsb
or
mov
aas
xchg
lret
ljmp
xchg
repnz
test
adc
icebp
add
fdiv
ja
adc
loope
sub
mov
or
push
cmp
pushf
nop
sbb
mov
daa
and
and
jecxz
cmp
outsl
jmp
mov
jo
and
popa
inc
xor
js
xchg
jbe
stc
pop
daa
hlt
lds
or
inc
incb
jl
cmp
fstps
fnsave
shll
outsb
sar
rorb
shll
test
lock
mov
rcr
xchg
adc
cmp
je
pushf
or
xchg
and
arpl
mov
stc
in
xor
mov
int
mov
rcr
jl
test
sub
pop
insb
or
out
inc
dec
lcall
push
adc
ja,pn
dec
fs
enter
xchg
in
cmp
dec
adc
ljmp
test
ficompl
sbb
addl
mov
rolb
fwait
jge
rcrl
arpl
cmp
pop
bound
cmp
pop
jp
xchg
adc
testb
imul
mov
sub
lea
in
lds
xchg
rol
mov
cltd
ret
fisubs
mov
cmp
repz
lcall
add
xchg
add
mov
in
or
jg
dec
out
call
xchg
inc
jg
lods
cmp
mov
lea
daa
in
sub
sahf
jne
gs
scas
lds
cmovno
fnstsw
jnp
das
add
cltd
adc
js
inc
push
icebp
mov
dec
sti
inc
jp
lcall
js
jecxz
add
jg
std
push
mov
nop
push
into
cmp
jne
divb
int3
test
cmp
cmp
push
cmp
es
into
mov
lds
inc
sub
aas
test
aad
incl
js
repnz
loopne
sbb
insl
dec
xor
dec
mov
movsl
hlt
pusha
pop
inc
push
mov
xchg
out
sub
cmpsb
aam
inc
sbbb
jmp
cltd
test
movsb
call
add
dec
xorb
clc
push
icebp
sub
jbe
mov
pop
imul
iret
push
push
aam
cltd
dec
mov
and
xchg
movsl
pop
and
adc
cmp
ret
dec
jns
pusha
xchg
dec
in
das
adc
add
and
xchg
sub
sub
in
stos
xor
fistpl
xchg
inc
inc
xor
and
stos
cli
sub
add
and
insb
aad
les
aaa
adc
adc
es
mov
clc
pop
sarl
or
aas
mov
incl
lds
mov
add
dec
test
xchg
stos
mov
dec
and
or
sbb
add
pop
inc
je
xor
sbb
mov
jmp
and
daa
cmp
cmp
pusha
fs
add
lcall
push
mov
push
add
dec
jnp
jle
out
gs
mov
int3
jmp
fcompl
je
test
inc
pusha
xchg
jle
jl
popf
dec
inc
jmp
test
mov
and
popa
lcall
cmp
bound
and
arpl
les
ret
adc
cmp
imul
mov
aad
daa
sbb
sub
mov
movsl
or
jmp
jnp
daa
call
xchg
add
xchg
int3
pop
xor
aaa
push
push
orl
jmp
xor
cmpsl
adc
pop
int3
shll
jp
adc
mov
mov
test
mov
loope
cmp
test
in
jl
mov
mov
push
ss
xchg
inc
movsl
pop
mov
lock
mov
pop
arpl
jne
push
jb,pt
inc
push
test
sbb
mov
dec
push
xor
aam
clc
dec
nop
aam
and
cli
test
mov
mov
sbb
add
push
or
imul
sub
pop
xor
pop
adc
inc
pusha
adcl
pusha
adc
pushf
fstpt
leave
stos
add
js
xchg
xlat
movsb
test
xchg
mov
adc
ss
push
mov
push
in
xchg
fstpt
sbb
mov
dec
imul
xchg
jle
mov
jle
mov
iret
pop
ret
and
iret
mov
xchg
xchg
sbb
orb
push
test
xorb
shr
js
out
adc
push
gs
arpl
xlat
ds
jmp
imul
aas
or
movsl
xor
std
test
xor
mov
or
jmp
jge
shll
das
sub
fdivrl
sti
jmp
xor
pop
xchg
pop
daa
sub
mov
aaa
xchg
sar
sbb
stc
adc
in
mov
decl
push
inc
mov
dec
or
aaa
scas
out
fsubr
jb
rol
mov
or
sub
icebp
add
mov
in
push
bound
or
push
mov
cltd
stc
xchg
jle
jge
call
sbb
scas
add
nop
xor
or
adc
jnp
xchg
or
cli
arpl
xor
nop
outsb
pop
jge
data16
mov
pop
cmp
das
jo
cs
mov
shl
mov
jnp
pushf
push
clc
mov
das
mov
push
mov
push
mov
mov
add
mov
es
jecxz
mov
adc
test
or
iret
push
or
xchg
mov
iret
cwtl
movsl
popa
cltd
mov
mull
scas
mov
aas
push
xchg
aam
rorl
mov
jbe
push
sahf
mov
insb
ss
cli
js
out
stos
out
jecxz
or
out
loope
dec
pusha
sahf
insb
cmp
test
cltd
or
in
mov
sbb
sahf
inc
pop
mov
sub
adc
pop
mov
inc
mov
push
or
sbb
aas
ficompl
stos
sti
jno
mov
cmp
mov
aaa
sti
lahf
pop
mov
shrb
add
inc
lock
push
pop
int
cli
xchg
mov
sub
cltd
scas
gs
jp
and
sbb
xor
cmp
adc
and
aam
or
movsb
mov
es
dec
arpl
add
aas
add
jo
hlt
and
pop
pushf
sub
push
or
jmp
mov
push
add
cmp
rcr
rep
adcb
loope
mov
js
insl
xchg
jae
out
cmpsb
add
xor
sub
inc
sbb
adc
stc
mov
ret
cmc
arpl
cmp
push
sbb
sbb
jle
lahf
mov
fs
mov
ja
enter
orl
jle
mov
lret
fildll
jmp
push
lret
pop
test
add
in
out
cmp
fildll
xlat
push
and
insb
mov
push
xchg
xchg
push
not
clc
mov
add
sbb
test
lret
sub
or
cmp
sbb
xor
enter
rol
and
or
fiadds
pop
notl
xor
mov
icebp
jno
sbb
imul
xor
mov
test
jmp
jnp
mov
push
mov
adc
or
push
movsl
ffreep
or
mov
je
stc
jb
sbb
xor
pop
rorb
testb
movsb
clc
add
outsl
aam
pop
jmp
test
lock
adc
mov
std
fstps
jg
out
sub
loop
scas
or
sti
mov
sbb
inc
inc
in
pop
outsl
insb
dec
loope
sbb
mov
jle
imul
rolb
sub
mov
inc
cld
insl
inc
dec
cmc
adc
je
add
pop
jo
and
adc
xor
jmp
notl
or
sbb
push
leave
sub
inc
aam
lahf
xlat
push
dec
push
aad
fsubr
inc
inc
jbe
pop
mov
lahf
addr16
iret
xor
imul
dec
je
inc
mov
lods
enter
add
movsb
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
jmp
push
cli
imul
inc
iret
adc
jne
cmc
push
sub
push
push
mov
jo
mov
mov
int3
aad
jecxz
dec
mov
xor
cltd
sub
clc
enter
push
sti
fs
aaa
mov
stos
add
mov
ret
bound
pop
cwtl
mov
adc
pop
cld
pop
cmpsl
mov
inc
push
clc
aad
data16
loopne
pop
mov
mov
test
mov
gs
jmp
scas
and
pop
mov
out
dec
bound
clc
lds
cli
inc
sbb
pop
dec
lret
adc
mov
ja
rcr
cwtl
sub
sub
cmp
cmpsl
popf
sub
mov
mov
cmc
loope
daa
insl
push
icebp
pop
or
xchg
xorb
push
add
sub
push
push
mov
movsl
das
ret
jg
xor
jp
int
in
cmp
call
push
popf
cmpsl
outsl
and
mov
notl
xchg
add
imul
repnz
sub
jnp
mov
xor
jmp
add
xorl
xor
jnp
shll
idivl
leave
jno
push
mov
notb
adc
hlt
sbb
xor
rcll
icebp
xchg
cmpsl
rcl
ret
adc
adc
jl
scas
inc
into
jno
in
jmp
dec
jae
data16
les
loopne
notl
push
ja
sub
dec
adc
ljmp
jl
pop
or
shl
xor
or
dec
loop
and
test
in
add
dec
mov
lret
mov
sbb
scas
dec
push
mov
and
shrb
push
xor
ja
and
rcl
cmpsl
pop
movsl
xor
je
outsl
cmp
pop
xor
fs
push
aaa
in
pop
jo
push
fists
jmp
std
loope
mov
lock
mov
cwtl
sub
jno
jmp
fidivs
imul
mov
dec
mov
mov
push
dec
cmp
incl
add
pop
jmp
pop
in
rol
dec
jmp
lret
push
lock
dec
xchg
test
aaa
adc
pop
gs
adc
adcb
xchg
ret
dec
jge
mov
adc
inc
mov
es
repnz
or
dec
sbb
pop
adc
cmp
cwtl
inc
xchg
sahf
push
dec
sbb
mov
pop
jle
xchg
jge
xchg
xchg
cli
xchg
inc
cs
add
daa
inc
sbb
dec
mov
pop
fwait
dec
mov
bound
pop
fwait
icebp
jno
pop
das
push
out
orb
ja
xchg
leave
pop
test
test
dec
xchg
fistpll
push
int
mov
cmp
jns
mov
fcmovnb
lcall
sbb
xchg
sub
std
pop
adc
addl
jecxz
mov
fdivrl
stc
adc
jns
addr16
or
push
xor
les
inc
dec
sub
mov
imul
pusha
pop
sub
push
xchg
pop
sbb
lahf
xchg
xchg
jl
dec
xchg
jno
mov
imul
add
xchg
test
dec
mov
bound
adc
xor
popa
dec
and
data16
aaa
cld
stc
mov
fists
jg
arpl
xchg
adc
push
das
sub
fsubrl
out
lock
xor
loop
mov
mov
and
fiaddl
adc
pop
lock
push
daa
mov
adc
int
xchg
bound
out
filds
sbb
or
sahf
xor
mov
in
sahf
test
jo
aaa
stos
ljmp
aad
fucomip
ss
cwtl
subb
shrl
jge
sbb
mov
sbb
hlt
dec
fs
je
adc
sbb
int
xchg
dec
neg
mov
jb
jl
vdivpd
dec
mov
pop
sub
scas
dec
imul
scas
sbb
push
cs
mov
out
dec
mov
adc
cs
ljmp
push
sbb
dec
sbb
rcrb
les
fcoml
jp
cmp
push
es
sub
cmp
cli
out
mov
pop
bound
lret
nop
mov
sti
mov
sahf
clc
loope
jne
jmp
push
ret
scas
sbb
test
dec
sub
cs
fwait
xor
jp
pop
repz
mov
push
inc
cmp
jns
scas
push
clc
sub
mov
ss
inc
sub
pop
rcll
arpl
std
mov
inc
sbb
push
in
push
fbld
icebp
imul
sub
es
cli
inc
mov
inc
mov
push
inc
pop
pop
stc
dec
test
cmpsl
mov
cmc
mulb
mov
je
adc
jbe
mov
xchg
shr
jge
fwait
aas
jle
sbb
inc
insb
xchg
mov
xor
imul
pop
sbb
mov
in
nop
pusha
push
mov
fimull
mov
mov
testl
mov
add
shrl
pop
lret
xchg
cmc
mov
mov
andl
insb
jb
sbb
int3
mov
out
insl
sbb
adc
and
adc
mov
push
aaa
pop
lods
jg
jae
shlb
cmpsl
add
lock
mov
push
push
idivl
pop
icebp
adc
xchg
dec
pushf
bound
mov
sub
jbe
or
addl
test
ret
adc
and
adc
arpl
mov
jnp
inc
cmc
nop
out
test
cmp
cmp
pop
loop
or
and
jl
mov
add
out
xchg
imul
xchg
std
ret
out
push
fimuls
frstor
push
fisttpl
adc
and
and
shr
inc
dec
mov
cmp
inc
out
mov
and
jnp
pop
cmpl
xor
push
push
inc
inc
lea
lods
and
dec
cld
and
inc
inc
jbe
clc
clc
push
in
pop
test
jns
dec
mov
aad
pop
sub
divb
jl
cmpsl
push
sti
rorb
mov
inc
outsb
enter
xlat
ss
xchg
shrl
scas
loope
jb
inc
addr16
xchg
sub
int
daa
into
push
dec
push
or
jecxz
cmpsb
xor
xor
ja
stos
or
rolb
fdivl
stc
mov
sub
fs
adc
cmpl
adc
mov
insl
xchg
sahf
sbbb
out
div
sbb
sub
mov
push
inc
int3
daa
cmp
psubsb
jb
push
lds
dec
call
mov
or
push
ret
ljmp
dec
imul
inc
pop
addr16
mov
mov
je
jmp
inc
mov
imul
or
push
pop
divl
ss
cmpsl
cli
loope
jae
pop
sub
lret
in
subb
jo
xor
cmc
test
push
test
ds
outsb
ljmp
push
lds
push
aad
push
add
mov
out
add
mov
push
xchg
leave
jne
arpl
ljmp
adc
inc
cmpsb
sub
jmp
mov
sub
shll
inc
xor
sahf
leave
mov
pop
mov
les
and
xchg
mov
cmpb
movsl
imul
orl
clc
in
add
add
add
push
sbbb
xchg
jbe
cld
mov
dec
dec
cmpb
pop
xor
cmpsb
into
and
repnz
lahf
lea
sti
scas
sbb
jecxz
loop
movsl
in
pop
jne
inc
roll
repz
mov
test
enter
bound
int
mov
fdivl
mov
dec
jo
shr
outsb
adc
int
das
lock
or
push
adc
inc
sbb
enter
and
mov
test
mov
lds
mov
mov
int
loop
enter
jl
inc
fwait
adc
mov
cmpsl
sbb
push
cmpsl
and
add
mov
leave
mov
push
fiadds
das
scas
jp
outsl
fnsave
je
inc
jp
ds
inc
inc
arpl
or
inc
sub
pop
mov
or
aas
mov
les
pop
cmpsl
add
cmp
pop
dec
push
cmp
sub
fisubl
xlat
ljmp
pop
inc
sbb
mov
mov
mov
pop
add
mov
dec
fcoms
xor
add
mov
mov
push
nop
cmc
or
ljmp
notl
insb
cli
aad
ja
rorl
ret
iret
sub
lret
mov
jb
lret
sub
out
stos
arpl
add
xchg
daa
inc
sub
push
sub
add
xchg
adc
aad
sub
out
fcoml
stos
adc
xor
aam
push
pop
in
jecxz
adc
adc
mov
adc
jmp
mov
add
jbe
lods
rcrl
int
inc
movsb
cli
lahf
test
gs
mov
and
aad
push
daa
test
xchg
es
decb
dec
into
imul
lcall
and
repz
xchg
hlt
mov
mov
negl
imul
push
js
sub
inc
add
add
mov
dec
and
mov
jns
enter
add
and
fcoms
pop
loopne
xor
and
pop
mov
pop
stos
mov
ds
mov
inc
mov
lds
ds
mov
xchg
cmp
pop
push
mov
enter
out
jle
lret
popf
clc
test
lds
sub
out
mov
sub
out
mov
popf
rcrl
xchg
insb
lock
lret
scas
mov
add
cmp
sbb
int3
pop
ret
daa
aad
sbbb
or
loopne
mov
inc
dec
rcr
mov
idivb
cmp
sarl
and
sub
inc
inc
clc
lea
cmp
jbe
or
js
pop
sti
mov
aaa
icebp
jp
xchg
jae
push
dec
xorl
push
and
ljmp
xchg
sub
notb
adc
shrl
sti
xchg
out
loop
addr16
movsbl
cmp
push
jno
leave
adc
push
jmp
xor
shr
pusha
jge
push
lahf
fsubr
mov
cmpsb
adc
push
dec
imul
or
fbld
mov
call
inc
sbb
push
and
dec
push
push
push
inc
lea
daa
add
addr16
mov
or
je
sbb
nop
scas
scas
mov
movsb
adc
icebp
pop
out
push
pop
test
icebp
lret
jo
jg
jl
out
pop
mov
ja
xchg
add
gs
test
insb
push
dec
mov
sub
jnp
cmc
add
push
adc
dec
loop
cltd
vxorpd
add
test
xchg
int
sub
xchg
cmc
lds
popf
data16
dec
shlb
subb
mov
adc
lds
sbb
mov
lahf
sbb
jge
js
pop
icebp
sbb
arpl
andl
rcrb
sub
out
lds
add
jge
mov
xchg
mov
out
xchg
dec
pop
lret
int3
pop
les
cmpsb
ret
adc
cmp
pop
lret
stc
xchg
cmp
mov
pop
cli
sbb
ds
mov
fdivs
pop
mov
pop
pop
adc
mov
aam
aam
add
jg
aam
pop
lret
or
push
mov
add
mov
cmc
je
inc
xlat
fcmovnu
xor
inc
out
push
stc
incl
sti
loop
js
push
aas
aas
pop
lea
out
mov
scas
jae
dec
or
pop
inc
test
cli
and
jo
cs
insl
inc
jp
mov
xor
push
sarl
cltd
pop
or
xchg
popa
clc
dec
push
test
xorb
dec
push
movsb
xchg
arpl
push
popl
dec
xor
loope
or
jo
push
cmp
push
sbb
mov
xchg
flds
rcrl
shr
and
xor
cmpsl
lea
xor
popa
jecxz
jns
pushf
sub
mov
and
jae
mov
mov
dec
add
test
and
subl
mov
in
fisubl
shr
mov
lods
mov
push
decl
fnstcw
test
pushf
mov
xor
xor
je
lds
mov
mov
loopne
inc
push
negl
and
jns
add
xchg
ret
or
mov
je
mov
pop
es
xor
rol
sbb
pop
dec
ret
cmpsb
push
adcl
mov
mov
cmp
movsb
pusha
push
out
inc
movsl
test
arpl
ds
pop
push
pop
mov
jbe
jne
push
push
xor
cmpsb
gs
and
movb
lahf
push
mov
stos
adc
add
mov
dec
imul
xor
dec
pop
jmp
cmp
sbb
int3
push
sbb
push
mov
or
jmp
int
out
cltd
movsl
mov
push
in
int3
fs
aad
ret
jae
add
pop
mov
dec
sub
inc
stos
ss
mov
repz
add
fcompl
pop
jg
jle
and
repz
xorl
add
aas
add
push
pop
popa
cmp
scas
jg
and
pop
lds
mov
sbb
gs
imul
enter
sbb
adc
mov
mov
mov
ss
push
mov
push
les
sbb
jo
cld
or
xor
mov
or
cmp
xchg
imul
pushf
mov
or
mov
ret
mov
cmp
outsb
push
insl
sub
or
jno
push
pop
pop
jns
push
out
or
cwtl
jnp
test
mov
cld
mov
cmpsb
inc
add
xor
stc
lret
or
add
cmp
adc
popa
mov
idiv
ror
mov
pop
inc
jp
cmp
cmpb
xor
push
pop
jnp
pop
stos
loope
in
rcl
cmc
sbb
push
add
popf
or
mov
ljmp
imul
mov
mov
cld
push
insl
mov
fwait
rclb
lret
mov
adc
jnp
mov
sub
pop
insb
pushf
push
jmp
mov
mov
pop
insl
iret
cli
mov
push
leave
test
xor
aad
mov
pop
or
rolb
icebp
push
lcall
mov
cmpsl
fsub
cmovb
fisubl
mov
in
cmp
pusha
dec
lret
mov
out
cmp
pop
jb
and
cmp
jp
add
jp
dec
dec
inc
mov
cmp
pop
aas
sahf
arpl
sbbl
scas
mov
es
loopne
xchg
add
stos
lods
inc
and
add
notl
cmp
clc
dec
out
repnz
repnz
pop
sub
adc
fldcw
mov
in
stc
sbb
mov
das
xchg
mov
loopne
xchg
jns
sahf
inc
mov
xchg
inc
pop
xlat
in
fimuls
pop
pop
mov
mov
repz
lahf
cs
xlat
ja
int
lea
mov
sti
cmpsb
jbe
fisubs
pop
adc
or
push
sub
inc
fmuls
mov
lea
inc
sub
movsb
xor
add
fbstp
scas
arpl
pop
jbe
and
adc
testl
push
inc
or
rcrl
mov
and
pop
lea
push
jns
aam
mov
js
out
mov
sub
lret
xor
cmp
imul
in
pop
neg
xchg
cmp
pop
mov
xchg
xorb
mov
loop
std
mov
test
jp
popa
ficomps
ja
in
rclb
dec
cmp
sbb
sbb
xchg
sbb
imul
dec
push
repnz
in
or
hlt
sub
nop
push
add
adc
dec
loop
popa
fcmovbe
into
add
sbb
adc
cmp
xchg
xor
jo
les
cltd
loopne
lret
ficomps
daa
pop
test
fdivs
je
setne
xor
loopne
dec
mov
sbb
aaa
jns
add
pop
adc
mov
mov
sub
inc
xchg
fsubrl
mov
in
insl
push
insb
push
pushf
mov
mov
cmpsb
test
decl
sbb
or
push
icebp
sbb
ret
pop
pushf
add
test
mov
out
inc
push
je
push
mov
fs
push
lcall
fwait
xor
mov
jp
fmul
pop
fisubrl
jo
xor
ret
repz
inc
push
fs
shr
in
inc
mov
lahf
aaa
leave
mov
and
pop
mov
push
adc
push
cwtl
icebp
xchg
imul
mov
lret
es
cmp
fcoms
sbb
mov
push
mov
inc
andl
and
lock
push
psubsw
lods
pop
sbb
push
sbb
xchg
test
fwait
cld
iret
ss
in
inc
dec
jmp
lds
std
mov
hlt
xchg
cli
test
hlt
inc
add
xchg
fidivs
imul
scas
add
gs
mov
xlat
or
push
jp
adc
addr16
neg
insl
fadds
pop
xor
loopne
inc
push
jbe
xor
or
rclb
push
ret
outsb
or
imul
and
imul
xchg
loopne
popa
inc
mov
mov
and
or
aad
sub
jae
jle
add
push
or
or
movsl
cmp
faddl
in
mov
mov
add
movsb
loop
mov
mov
in
or
sysenter
push
sbb
mov
add
sbb
dec
cltd
jg
int
or
int3
fisttpl
test
lcall
push
pop
mov
int3
add
into
mov
mov
cmpsl
sti
outsl
scas
insl
in
aas
or
xor
fcomps
fwait
cmp
adc
lret
cmpsb
pushf
xor
mov
pusha
mov
xchg
das
mov
jmp
inc
mov
push
mov
ja
sbb
inc
jo
clc
lret
in
push
xlat
xor
cmp
adc
pop
dec
or
movsl
push
mov
xor
mov
xchg
int3
pop
js
scas
ds
cmp
out
mov
dec
pop
mov
inc
shll
fsubr
push
jb
jbe
adc
sub
push
ljmp
pushf
jl
sbb
andw
and
mov
inc
mov
scas
xor
mov
dec
cmp
push
mov
inc
add
xlat
push
mov
into
enter
sbb
ficomps
and
fcmovne
sbb
sub
sbb
sbb
xor
dec
int
rclb
mov
or
fmul
out
mov
or
out
lock
push
mov
test
or
test
lret
arpl
pop
stos
push
pop
stos
inc
sub
arpl
mov
lock
xor
cmp
cltd
test
push
shlb
xor
cmp
inc
push
fstps
add
sub
sarb
or
sub
push
xor
js
insb
popa
pop
cmc
mov
popf
xchg
mov
je
mov
int3
imul
rep
sbb
fidivrl
aad
idivb
loope
jecxz
pop
add
fcoms
imul
stc
daa
in
adc
cmp
shlb
lods
lock
aad
and
cmp
nop
mov
pop
xchg
hlt
popa
xchg
mov
cmc
mov
imulb
jbe
dec
pop
sub
mov
xor
popf
loop
dec
jmp
imull
daa
and
and
xchg
sub
jg
inc
data16
bound
daa
mov
dec
aad
and
xchg
push
into
cmpsl
mov
clc
sbb
test
mov
out
outsb
loope
mov
daa
sbb
push
movsb
xchg
pop
pop
inc
sub
push
les
cmp
mov
jle
xor
mov
sub
jmp
pop
or
popf
sub
pop
sbb
lods
pop
xchg
sahf
fmull
mov
sbb
loope
xchg
cli
sar
jge
and
je
repz
xchg
ss
arpl
rcrl
push
jg
adc
dec
into
fdivrp
xor
sbb
or
xchg
fsubl
bound
cmp
outsl
inc
inc
ret
xchg
js
jecxz
or
imul
mov
imul
lea
mov
jnp
lcall
movsb
push
add
out
aam
fmulp
mull
mov
lcall
inc
mov
cmp
mov
sub
cwtl
and
movsb
hlt
fsts
mov
fdivs
or
rorl
and
inc
popa
ljmp
adc
pop
xchg
dec
lret
cmpsb
cmp
lea
adc
xchg
push
mov
lea
push
insb
mov
push
or
push
inc
or
and
xchg
pop
mov
andl
xor
add
sbb
aaa
loop
mov
pop
dec
ds
fnstsw
enter
push
dec
add
dec
cmp
cltd
and
out
pop
jecxz
call
pop
std
cli
jg
push
hlt
and
filds
shlb
push
xor
pop
fiadds
sti
add
cmp
das
mov
xor
mov
cmp
scas
pop
jbe
ljmp
pushf
xchg
xchg
xor
insl
lods
xchg
and
mov
popf
or
push
cmp
lock
inc
testb
inc
sarl
mov
xor
lock
out
sub
xor
cmpsl
pop
jge
int3
pushf
das
sbb
pop
rclb
xchg
icebp
insl
or
sahf
int3
insl
fs
push
add
leave
xchg
xchg
inc
popw
and
mov
pop
aad
sbb
rcl
mov
mov
jmp
outsb
mov
lahf
pop
mov
sbb
nop
lock
jmp
cs
push
push
push
push
fcoml
nop
pop
es
out
mov
dec
jl
adc
xor
or
mov
xchg
mov
cmp
lret
cmp
add
test
xor
in
addr16
aas
push
imul
mov
shll
std
mov
pop
dec
jp
into
push
leave
xor
into
mov
test
addr16
adc
inc
or
cld
popf
out
scas
aas
and
cld
or
sub
cmc
addr16
mov
rorb
cmovae
push
xchg
iret
fisubs
sub
push
repnz
xchg
mov
arpl
iret
imul
je
fsubs
sbb
fildll
push
in
sub
test
cmp
les
dec
sbb
dec
mov
loopne
inc
ljmp
sahf
jp
fimull
pop
pop
add
inc
rclb
ja
sti
and
jge
and
pop
mov
std
adc
adc
cmp
ret
lea
xor
and
mov
mov
icebp
jbe
mov
lret
loope
push
mov
arpl
xor
jecxz
cmp
mov
cli
gs
push
mov
imul
add
cmp
fs
push
lret
dec
mov
xchg
dec
or
sti
add
arpl
stos
iret
push
push
cmp
mov
stos
jmp
loop
repz
imul
dec
stos
pop
mov
movups
in
xchg
jmp
xlat
iret
dec
mov
std
stos
leave
pop
pop
xchg
mov
dec
cmp
adc
mov
xor
lcall
aas
mov
cmp
neg
test
mov
mov
dec
pop
rcll
imul
stos
ljmp
push
push
sub
dec
iret
xchg
dec
jns
lahf
mov
and
movsl
clc
in
add
cmpsl
test
mov
lods
fildl
mov
fldl
jns
mov
jb
popf
and
and
dec
mov
sub
cld
les
mov
jmp
mov
or
outsb
test
dec
dec
andb
lods
ljmp
out
mov
push
add
outsl
mov
daa
out
lea
fisttpll
pop
and
aad
mov
mov
test
adc
ja
jnp
ss
rolb
dec
push
rolb
roll
shlb
rcl
sti
popf
popa
ss
push
jge
jo
jecxz
movsl
cs
cltd
push
xor
lret
sbb
jne
out
data16
cmp
popa
dec
xchg
cltd
fidivl
inc
adc
push
mov
cs
xor
iret
aam
mov
icebp
iret
mov
stos
int3
or
fcomps
mov
mov
inc
mov
adc
adc
testl
imul
sbb
cmpsl
std
notl
rcrb
subl
push
sub
mov
addb
push
les
movsl
lcall
mov
cmp
sub
push
shll
mov
sub
jge
addr16
sahf
sbbb
cltd
pop
ret
dec
loop
push
mov
inc
push
mov
xchg
mov
cmpsb
mov
dec
repnz
idiv
xlat
pop
jp
lock
int
fcmovb
rol
enter
movsl
scas
je
mov
mov
jnp
sub
rolb
dec
adc
and
xor
jge
mov
adc
ja
pop
jb
lret
fwait
arpl
fcoms
outsb
cltd
adc
in
mov
push
dec
add
jecxz
sti
xchg
sahf
inc
daa
and
test
jp
or
sub
or
mov
popa
fcmovnb
sbbl
jp
sahf
ret
aam
add
hlt
repnz
outsb
pop
mov
sarl
mov
jns
pop
pop
es
sub
rol
pop
push
cld
xor
rorl
pop
xorl
repz
int
out
and
xchg
pop
jl
mov
std
mov
rep
inc
sub
add
xchg
sti
dec
or
dec
sub
ljmp
mov
and
or
cmc
stos
sub
jns
shrb
push
int3
sahf
jo
and
insl
jbe
pop
mov
fildll
mov
push
push
dec
jp
dec
fcoms
ficompl
xor
jo
in
jecxz
lret
adc
dec
fdivs
xchg
cmp
data16
aam
jnp
out
orb
or
leave
mov
leave
dec
mov
repz
fbstp
jae
mov
xlat
xor
lahf
call
call
cwtl
pop
imull
rcll
arpl
cmc
jge
sahf
data16
daa
or
imul
and
sbb
sbb
mov
inc
into
cmp
mov
dec
jmp
loopne
and
pop
sub
push
scas
inc
fs
lods
jmp
jne
scas
xor
lcall
ret
mov
mov
enter
mov
or
xchg
addr16
call
out
jno
call
or
cmp
mulb
mov
pop
cmpsl
pusha
pop
das
cld
xchg
and
add
adc
call
mov
imul
mov
push
mov
jmp
sub
fmuls
imul
pop
rolb
lahf
out
xlat
addl
or
and
popf
push
test
repz
push
xchg
or
mov
xchg
enter
jo
mov
and
insb
xor
and
lods
xor
fcomps
pop
and
in
stc
fistpll
sbb
sub
dec
pop
push
ret
sub
clc
push
and
sub
xor
cwtl
pusha
and
pop
das
loope
or
data16
push
fmull
in
push
stos
pop
jnp
adc
aaa
sub
mov
out
mov
adc
mov
fisttpl
iret
mov
mov
add
cltd
sarb
xbegin
ret
add
push
and
imul
mov
addl
addb
dec
adc
in
popa
outsl
sub
iret
and
mov
outsb
jmp
andl
mov
jecxz
inc
fs
outsb
cmp
repnz
xorb
cmpsl
ljmp
cmc
cwtl
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
jmp
cs
lods
pushf
ds
enter
mov
mov
push
sub
push
push
mov
push
xchg
xor
repnz
idivb
ljmp
push
or
jge
movsb
lods
xchg
cmpsl
mov
mov
mov
mov
cmp
sets
sub
enter
es
lahf
rcll
ror
jo
mov
pop
hlt
inc
pop
pop
std
mov
sahf
subb
add
test
mov
jg
test
inc
jecxz
aam
or
lock
addr16
pop
cmp
pop
cs
lock
je
cmpsl
jl
add
shr
push
xchg
xor
or
push
out
jge
jp,pt
sbb
call
mov
mov
mov
mov
sub
and
imull
adc
ret
mov
xchg
or
push
ds
out
fidivl
clc
ret
pop
lods
mov
adc
popa
push
sub
jecxz
mov
lret
and
ja
lahf
sub
in
repz
fldl
addb
lahf
mov
push
cmp
fiadds
cmpsb
popf
add
lods
dec
pop
sbbb
inc
jge
insb
iret
pop
jne
sub
fnsave
es
out
pop
mov
push
cs
iret
lods
xor
lods
or
mov
testb
xchg
push
dec
call
sub
mov
movsl
mov
test
push
lea
add
in
test
mov
test
xchg
aas
sub
sbb
fs
jne
cli
jge
push
hlt
sub
sbb
mov
lock
cmp
mov
pop
fs
or
cwtl
int
lcall
and
mov
lea
int
addr16
xchg
lret
ljmp
repnz
xchg
fwait
loope
push
cmp
dec
pop
repnz
mov
xchg
add
test
dec
lock
jns
cmc
adc
movsl
jb
jmp
mov
clc
repz
es
pop
ror
mov
jns
shl
ror
loopne
sbb
sub
sbb
sbb
out
mov
rorb
fsts
mov
jmp
pop
mov
jb
mov
in
pop
leave
dec
dec
and
jae
fcom
pusha
das
jl
pop
xchg
sub
insb
add
lea
repz
ret
loopne
mov
cmc
loope
jge
test
xchg
clc
mov
push
xchg
adc
mov
adc
inc
fisttps
and
jb
push
loopne
les
and
mov
fwait
testb
fnstsw
nop
jns
lahf
sti
sahf
and
fnstcw
sbb
xchg
imul
add
sbb
push
adc
add
xchg
jbe
fwait
scas
sub
out
js
stc
out
mov
adc
imul
sbb
stos
icebp
icebp
or
sbb
aaa
jle
icebp
mov
mov
jne
add
jl
aad
rorl
popf
out
aas
testl
jle
shlb
inc
int3
jb
dec
push
pusha
xchg
lret
cli
aas
es
stos
stos
lods
jg
pop
push
cs
ja
adc
es
jbe
mov
das
add
cwtl
or
mov
scas
int
aas
cwtl
adc
fcompl
lahf
and
in
push
int
xor
cmp
sub
mov
test
xchg
scas
repnz
cmc
mov
add
mov
stos
movsl
or
jo
xchg
addb
mov
aaa
lods
pop
ljmp
lds
xor
stos
mov
es
ds
in
pop
cmp
imul
xchg
sub
mov
mov
push
and
mov
sub
dec
pop
daa
mov
xchg
ss
out
push
pop
mov
ljmp
xor
rolb
addb
gs
mov
xchg
iret
imul
pushf
je
test
dec
stos
jno
scas
pop
bnd
call
mov
push
push
xchg
xlat
mov
inc
xchg
mov
lcall
mov
pushf
inc
mov
lahf
jmp
cmc
push
dec
sub
xor
xlat
jbe
loope
push
incl
add
sbbl
icebp
or
dec
daa
add
add
push
push
jns
sbb
or
in
and
xchg
out
icebp
mov
mov
in
pop
dec
xor
clc
imul
push
lcall
outsl
add
inc
in
mov
paddb
jbe
lret
inc
mov
fwait
aaa
lds
lods
imul
clc
pop
loop
sbb
jbe
test
cmpb
cmpsb
gs
inc
dec
test
shlb
xor
cli
add
xor
call
jno
mov
fnstsw
jo
jbe
aam
xchg
and
add
orl
and
xchg
imull
or
loopne
mov
jne
ret
adc
adc
jbe
enter
cs
sbb
hlt
shrb
mov
xchg
add
aam
jno
jns
ss
int3
aam
and
adc
cs
inc
pusha
xlat
add
jge
sub
mov
jbe
bound
jbe
js
loope
jmp
repnz
idiv
xchg
in
pop
std
and
orl
fisubs
sbb
cmpsl
in
inc
repz
inc
pop
dec
mov
and
sbbl
lods
jbe
push
fmul
lock
pop
out
shll
push
fildl
push
xchg
fbld
xor
shrb
rcpps
and
cmp
stc
ret
sahf
shlb
das
adc
aad
hlt
cmp
or
sub
jb
jmp
sbb
or
dec
fistpl
imul
iret
popf
xchg
pop
in
xchg
test
jg
sub
rclb
fs
push
sub
mov
cmpsl
fdivl
cltd
cld
dec
dec
leave
xacquire
arpl
daa
loop
movsl
jbe
aad
add
push
insl
test
adc
pop
lahf
dec
mov
fldenv
cmp
sbb
call
sahf
movsl
jno
fisubrs
iret
jne
add
jbe
inc
xlat
lods
out
lds
cmp
loopne
imul
lods
push
test
pop
cmp
dec
or
cmp
push
loop
std
sub
shl
add
xchg
mov
xor
cli
xlat
ret
lahf
andb
out
mov
xor
fldcw
pinsrw
enter
test
fs
ret
pop
cmp
popa
or
mov
testb
aam
mov
add
popl
mov
mov
test
cmc
mov
movsl
xchg
js
mov
mov
jmp
mov
mov
and
xlat
mov
or
scas
frstor
jbe
and
xchg
pusha
pop
jo
jle
repnz
lahf
enter
xor
lea
jbe
push
cmp
sub
mov
ficoms
ja
stc
mov
into
push
cmpsb
push
adc
movsb
repnz
add
lods
xor
in
int3
lock
xchg
lods
push
cmpsl
mov
pop
test
fbld
and
push
jae
mov
cmp
inc
cmp
cld
iret
pop
loopne
aam
mov
dec
sub
ret
push
cmp
orb
add
dec
inc
stc
push
push
or
test
dec
add
aam
adc
xchg
push
outsl
repz
jecxz
cmp
jne
inc
push
cmpsl
in
push
in
lock
movl
das
xchg
adc
pop
out
xor
in
hlt
jp
cmp
fbstp
pop
push
push
jl
xlat
add
xor
xor
iret
push
fdivrs
sub
adc
jmp
hlt
stos
mov
mov
xlat
cmc
add
test
outsb
pop
xor
inc
dec
pop
push
xlat
test
sahf
cs
aaa
inc
xor
rcl
push
xchg
inc
mov
xchg
imul
cs
dec
pop
lods
sbb
nop
mov
movsl
jge
cwtl
lds
inc
xlat
inc
add
mov
int
cld
and
aad
outsl
adc
imul
je
mov
outsl
iret
push
jo
mov
mov
xchg
inc
jne
sub
mov
adcb
mov
repnz
dec
loopne
aaa
cmpsb
pop
sbbl
adc
mov
pusha
push
mov
dec
pop
outsb
mov
push
int3
add
pop
arpl
je
lea
mov
arpl
sahf
out
pop
or
push
out
mov
ret
jmp
sbb
mov
fisttpl
push
jno
gs
lcall
mov
pushf
and
fstps
cwtl
cli
inc
or
mov
test
pop
popa
pop
ret
out
lcall
insb
fiadds
push
sub
cmp
js
dec
or
lcall
and
ja
add
pop
out
jp
cltd
outsb
or
fistpll
xchg
xchg
add
repz
dec
cmp
cmp
sbb
sub
add
in
or
std
cmp
or
mov
in
xchg
fadds
sub
frstor
hlt
xor
mov
movsl
test
or
xor
jge
roll
rcl
push
lods
fmull
sbb
dec
sub
mov
enter
xchg
ret
cmpb
adc
pop
cmc
sbb
popf
jp
mov
add
xchg
fdivs
cwtl
clc
sbb
mov
cmc
mov
dec
stc
lods
mov
cmpsl
cmpsl
pop
scas
dec
inc
sub
sub
cmp
cmpsb
es
jb
add
xchg
add
es
mov
ds
pop
mov
out
inc
loop
xchg
and
cwtl
adc
add
fsubl
rclb
and
or
aaa
xchg
pop
loope
sub
xchg
jl
sub
aaa
push
fisubl
shlb
xchg
sub
sbb
repz
stc
mov
mov
fdivp
mov
scas
in
pop
lods
stos
xchg
adc
cmp
xchg
adc
inc
pop
dec
sbb
xchg
jle
fnstcw
sbb
pop
insl
jns
notb
fwait
scas
push
add
inc
dec
cmp
inc
sbb
out
cmc
into
xchg
xchg
shlb
sbb
add
or
lods
repz
cmp
lcall
xor
jno
xchg
ret
push
sbb
cmpsb
sbb
push
fildll
inc
inc
and
leave
aam
int3
fcom
stc
test
das
or
cs
pop
dec
addb
xor
push
inc
push
cmp
cld
sub
aaa
inc
sub
xchg
test
adc
call
push
out
es
pop
movsl
je
daa
in
iret
mov
pop
scas
jo
lods
jno
inc
xchg
fdivs
int
addr16
pushf
into
mov
cmp
addl
scas
lds
movsl
stos
ret
mov
fwait
mov
cld
ret
mov
push
cli
jnp
mov
sub
les
lret
dec
jno
push
sub
cwtl
jmp
sbbl
sti
enter
dec
loop
and
mov
push
movsl
sbb
clc
leave
sbb
insb
pop
or
mov
adc
in
mov
cld
enter
mov
xchg
sahf
stos
lret
sbb
or
outsb
out
jp
fildl
mov
sub
cli
dec
iret
add
fsub
or
mov
or
dec
add
jb
or
loopne
jge
jp
push
pop
cmc
mov
mov
and
cmpsb
daa
push
jge
scas
xchg
dec
mov
loope
xlat
rol
leave
lahf
jno
cmpsl
and
lock
pop
xor
sub
js
pop
repnz
inc
fdivs
pop
cmpsb
rcrb
mov
clc
push
fsubl
inc
adc
sbb
shr
loopne
lahf
cs
test
ret
ss
and
add
pop
add
lods
out
arpl
stc
lretw
into
addr16
out
add
jno
mov
das
and
in
out
pop
pusha
inc
and
mov
addb
mov
dec
loop
into
and
bound
pop
stos
shll
adc
jle
iret
loopne
leave
adc
mov
push
or
mov
mov
adc
xchg
shll
sub
xor
imul
mov
adc
lds
fwait
gs
pop
mov
dec
cli
xor
adc
cld
pop
test
dec
mov
cld
pop
add
mov
fildl
pop
push
inc
mov
not
push
lahf
outsl
icebp
mov
push
imul
pop
inc
js
fchs
pop
inc
jo
push
add
out
cmp
mov
or
mov
sub
pusha
int
push
shlb
mov
mov
sbb
sub
insb
push
in
bound
jne
mov
std
jge
mov
daa
pop
xchg
sbb
and
dec
jno
cmpsl
mov
pop
shlb
lods
in
dec
test
mov
xchg
pop
ljmp
rol
data16
test
lea
daa
xchg
sar
pushf
shlb
hlt
add
sbbl
mov
push
mov
arpl
fwait
adc
fs
sub
push
decl
push
fs
inc
xchg
xor
fcoms
or
insl
dec
adcb
jmpw
jmp
sahf
adc
sbb
ljmp
fsubrl
nop
les
repz
inc
cli
xchg
push
fldl
fistps
sub
ret
cmp
push
ficomps
inc
mov
jae
pop
les
imul
and
fdivs
lock
dec
xlat
sbb
das
addl
and
sub
and
ret
dec
or
or
sub
icebp
mov
xor
mov
fisttps
jno
xchg
xor
add
adc
mov
stos
fdivs
lods
mov
push
arpl
fisttpl
repz
adc
xchg
inc
inc
mov
mov
lcall
pop
ljmp
dec
sbb
pop
test
test
cmp
add
inc
jb
xor
sbb
inc
cmc
mov
fbstp
add
std
aad
imul
sahf
pop
mov
mulps
cltd
sub
sub
sbb
xchg
stc
push
insl
in
divb
jnp
pop
pop
fsubrl
xchg
fsubl
aas
xlat
rcll
push
jl
push
pop
push
mov
pushf
inc
adc
icebp
ret
xor
xchg
xchg
repnz
leave
mov
pop
shl
cmp
mov
les
mov
pop
bswap
cmpsb
push
lods
xchg
rorl
push
ret
ljmp
inc
clc
sbb
inc
pop
push
mov
cltd
std
cltd
sarl
dec
ljmp
push
lret
dec
lcall
inc
mov
add
xor
cmp
enter
cmp
cmp
xor
das
stos
cld
ljmp
push
and
mov
inc
in
das
xor
in
pop
in
mov
lods
adc
mov
mov
enter
test
sub
scas
cmc
adc
inc
sub
cmc
pop
sbbl
hlt
mov
push
xchg
xor
jo
adc
lods
cld
cmp
adc
xlat
mov
push
add
jge
jle
jnp
xchg
push
mov
adc
negb
jae
jb
in
fcmovu
inc
mov
insb
lods
mov
push
inc
adc
in
mov
lds
sti
dec
pop
jnp
pop
into
iret
jb
in
clc
lock
aas
cli
push
mov
cmp
or
pusha
scas
xor
addr16
out
enter
jecxz
loope
or
lods
push
or
xor
add
out
notb
iret
dec
movsl
mov
scas
scas
jnp
mov
pusha
xor
sub
cltd
mov
cmp
loopne
out
cmp
xchg
imul
imul
pop
pop
fisubs
mov
mov
inc
fisttps
dec
adc
sbb
push
or
daa
mov
jne
push
inc
mov
bound
xchg
scas
lea
stos
xor
and
dec
pop
int3
pushf
sbb
jo
jp
ja
jnp
cmp
push
insl
imul
add
popa
in
out
loopne
xchg
movsl
dec
je
aaa
lods
jae
ret
add
jl
cmp
pop
inc
dec
lahf
es
das
dec
push
lret
dec
jbe
dec
mov
loop
mov
pop
imul
jmp
ficompl
inc
xchg
mov
std
scas
popa
popf
xlat
pop
add
mov
push
imul
outsb
mov
clc
loopne
fsubrl
testl
pop
test
cwtl
xchg
fnsave
and
or
repz
xor
inc
in
mov
int3
cmp
cmp
mov
movsb
xor
dec
repnz
add
daa
add
xchg
jb
xor
adc
dec
cmc
push
sbb
fdivs
jnp
adc
pop
jbe
or
xchg
sbb
mov
out
out
xchg
sub
popa
sar
dec
lods
mov
clc
test
xor
xchg
sbb
or
loope
adc
pop
ljmp
cmc
mov
inc
stos
cmc
mov
out
aam
fldenv
cmp
xchg
jecxz
fdivl
call
sub
mov
aad
mov
jne
std
or
in
mov
push
jns
pop
and
mov
imul
aas
xor
dec
test
and
cmp
daa
jp
adc
imul
xlat
mov
pop
mov
pop
adc
mov
fistl
outsl
shll
dec
or
adc
clc
test
and
cmp
sbb
shlb
xor
and
int3
mov
popf
std
movsl
fstpt
popa
cwtl
gs
mov
push
adc
fsubl
jg
jnp
shlb
aam
inc
movsl
jge
adc
jge
jg
and
gs
add
mov
push
aas
ficoms
sub
sub
mov
or
mov
mov
push
sti
dec
push
in
cmp
mov
daa
mov
out
stos
xchg
inc
pop
lods
lods
out
fstpt
ss
sbb
and
jb
movsb
pushf
inc
mov
adc
mov
lods
dec
shll
fldcw
sti
cmp
jbe
bound
xchg
cmpsb
test
aas
pop
dec
cmpsb
inc
popa
test
jl
jmp
mov
loopne
or
jmp
stos
sahf
xchg
sar
stc
adc
rol
test
xlat
js
mov
mov
adc
mov
rcrb
or
cmp
add
push
push
and
mov
inc
inc
xor
das
xchg
imul
push
pop
jo
jne
data16
es
cltd
cld
fcompl
cmp
leave
ljmp
jl
push
sub
ja
mov
pop
inc
bound
push
cmp
inc
mov
push
sub
out
mov
cmp
jo
sbb
cmp
pop
xor
call
aas
add
inc
iret
outsl
mov
out
aaa
dec
jno
test
mov
or
fcompl
xlat
push
sahf
leave
je
xchg
or
arpl
or
pop
pusha
fcompl
pop
mov
sbb
xchg
add
jp
mov
fldcw
les
popf
pop
fcompl
dec
mov
xchg
jle
xor
rolb
std
das
cld
cltd
lahf
jmp
mov
pop
bound
push
jg
or
lock
sbb
popa
stos
jecxz
gs
and
ss
jge
lcall
pop
lds
xor
jbe
dec
sahf
mov
mov
mov
imul
aas
out
or
lods
mov
jmp
dec
out
loope,pt
scas
pop
pushl
jmp
test
push
jp
jne
divl
sbb
cmpsb
sub
dec
xor
mov
in
icebp
mov
inc
adc
shl
xchg
mov
repnz
xor
add
mov
push
dec
aas
and
mov
mov
xor
inc
stos
push
add
fcoms
jecxz
xor
sub
les
dec
fistl
ds
faddl
loopne
xor
mov
push
jge
leave
xchg
test
pop
mov
iret
xor
cmpsb
xchg
fiadds
sub
movsb
out
inc
push
test
xchg
push
xchg
iret
mov
jb
ret
jmp
cmpb
cli
arpl
jbe
movsl
push
jecxz
jo
shll
lds
adc
lea
pop
enter
and
sti
cmp
inc
je
out
mov
jge
pop
outsl
mov
adcb
cmp
adc
or
push
lret
jecxz
sahf
add
add
sbb
loope
cmpsb
lret
repnz
mov
sub
fidivrl
mov
nop
xchg
adc
test
test
leave
lods
inc
negb
or
pop
jle
lods
cwtl
xchg
xchg
xchg
ficompl
or
push
pop
mov
mulb
js
pop
xor
mov
mov
addr16
scas
in
pop
dec
out
sbbb
or
push
push
cmp
fmull
fcmovne
popa
mov
inc
dec
mov
notb
enter
out
xor
cmp
and
xchg
test
std
pop
shlb
xchg
push
dec
inc
aad
or
repnz
pushf
movsl
pop
data16
xchg
push
xchg
in
shlb
xor
adc
sub
xchg
pushf
push
add
fdivl
mov
sub
push
inc
mov
lods
loop
cltd
and
xor
pop
adc
sub
mov
mov
pop
leave
inc
xchg
leave
xor
in
bound
pop
jl
dec
xchg
ret
or
add
push
mov
insl
test
lds
cld
rcrl
sbb
push
xchg
fcmovnu
lcall
inc
mov
dec
inc
fadds
rcll
fs
and
sbb
jo
jle
mov
xlat
push
shll
cltd
cwtl
sarl
leave
stos
in
jb
arpl
fsubs
and
jns
cli
test
test
repnz
rcr
cltd
pop
or
mov
scas
add
hlt
sub
adc
mov
mov
sbb
cld
sbb
aaa
sbb
mov
xchg
xor
mov
xchg
dec
fs
testl
insl
adc
lret
jns
jns
popf
mov
pop
or
dec
jmp
cld
cli
sub
and
mov
lock
sbb
jmp
sub
clc
clc
mov
mov
xchg
out
inc
shrb
in
pop
xor
addr16
insl
add
pop
push
sbb
dec
adc
mov
sub
popf
dec
daa
jmp
insl
mov
inc
jl
in
pop
push
inc
push
cmp
dec
cld
in
cmp
in
popf
cmc
bound
shll
mov
and
in
aam
stos
icebp
inc
push
cmp
xchg
inc
and
out
loopne
xchg
mov
mov
mov
rol
or
and
ds
sub
jae
inc
sub
ret
das
jbe
mov
pusha
pop
int3
pop
pop
pop
mov
xor
push
sbb
ds
test
pop
mov
push
mov
test
pop
cmp
inc
pop
jb
imul
mov
popf
mov
jne
mov
dec
test
and
stos
fisubrl
clc
push
sbb
xchg
lea
repnz
inc
mul
mov
int3
sub
std
push
iret
fisubs
fdivl
out
repnz
pusha
test
pop
int
mov
sub
jg
and
xchg
and
movsl
loopne
dec
les
pop
mov
ss
test
outsl
mov
outsl
sbb
add
cmpsl
inc
ljmp
es
icebp
cli
sti
pop
mull
mov
fdivrl
jne
js
sarl
aas
xor
cmpsl
js
jle
in
or
loop
test
jnp
xor
ret
adc
mov
mov
xchg
dec
es
stos
ja
je
lret
flds
adc
lret
pop
and
lds
in
gs
sbb
lods
jge
mov
std
mov
sti
jecxz
push
and
or
lods
shlb
push
dec
lret
push
push
and
xor
mov
test
das
push
lods
pop
lahf
push
jp
xchg
mov
ret
nop
dec
les
fcomps
and
add
lret
mov
ficoms
inc
push
lret
ljmp
rcrb
inc
out
xchg
pusha
pop
lods
fidivl
xlat
clc
xchg
loop
add
jle
bound
out
mov
jb
ja
std
jbe
hlt
cmc
add
mov
push
in
fiadds
movsl
pop
mov
xor
orb
fistl
dec
mov
cmp
push
mov
jle
mov
ficoml
cs
inc
sub
push
jg
push
adc
pop
aaa
push
inc
mov
inc
sub
mov
mov
mov
in
add
enter
call
add
repz
hlt
arpl
mov
adc
inc
popf
xor
pop
outsb
enter
jo
jmp
pop
jmp
into
xor
jle
repz
rcpps
insl
int
jg
cmp
push
inc
ss
outsb
andl
push
add
adc
inc
addr16
sub
push
mov
cs
jl
lods
xchg
outsl
push
das
sub
mov
clc
cmp
adc
es
loope
ret
aad
into
cs
test
fs
dec
push
xchg
lcall
add
mov
push
xchg
push
es
jnp
and
es
lock
mov
add
sub
xchg
inc
adc
daa
sub
in
iret
pop
lods
pop
or
sub
pop
lret
mov
es
add
xor
push
lahf
adc
push
jb
gs
push
out
call
dec
rcrl
add
jecxz
pop
mov
outsl
dec
fdivrp
sbb
cmp
sub
add
mov
pop
cmp
pop
fldcw
ret
popf
out
mov
enter
in
scas
pop
adc
pop
adc
dec
mov
sbb
push
jle
lcall
hlt
sbb
imulb
ret
xchg
outsl
out
addb
outsb
and
adc
xchg
ret
mov
mov
dec
repnz
sbb
sbb
ss
mov
cmpsb
icebp
pop
rclb
jp
mov
inc
js
repz
cmp
mov
sbb
call
fs
dec
inc
fcmovnb
fs
push
lcall
test
sbb
add
in
pop
test
add
cmc
jecxz
sahf
or
fwait
sbb
cltd
push
add
enter
imul
lret
sub
add
or
add
stos
scas
push
dec
mov
dec
fwait
test
lahf
jp
ds
pop
mov
dec
lea
xchg
repz
or
clc
in
sbb
inc
and
in
cs
ljmp
ror
icebp
ds
ss
jb
mov
stc
pusha
lcall
pop
add
or
xor
scas
add
pop
mov
sbb
inc
xor
ret
int
scas
dec
and
or
push
jecxz
mov
lret
call
or
jg
std
sub
jne
pop
dec
daa
inc
idivb
aad
rcl
push
or
mov
jbe
add
cmp
inc
out
dec
pusha
popf
xor
data16
mov
lds
add
jae
ds
adcl
xchg
jp
dec
inc
lds
sub
inc
inc
dec
inc
xchg
outsl
lods
ret
popf
cmc
add
and
push
mov
mov
insl
pop
pusha
popf
fstpl
dec
into
int
or
jbe
out
jmp
sbb
mov
fsubs
mov
popa
pop
pop
mov
popf
xor
or
sub
mov
sti
adc
in
dec
mov
and
rcr
or
jne
or
pop
mov
adc
or
mov
jecxz
aaa
out
mov
add
test
loop
outsl
mov
or
xchg
or
jo
jl
js
mov
aam
mov
or
cmp
and
negl
scas
popa
test
xor
dec
or
push
dec
inc
jnp
xchg
or
cmp
adc
setae
ret
add
into
jp
mov
stc
mov
jl
fimuls
subb
sbb
add
jae
or
sbb
and
sub
jno
pop
shl
subl
push
out
cli
mov
xchg
sbb
cmp
push
in
je
in
ds
pop
mov
stos
pop
mov
es
cmp
cltd
sub
lahf
add
mov
jo
sbb
jmp
popa
stos
inc
pusha
mov
aam
data16
out
aaa
add
lcall
out
cs
or
shr
mov
mov
or
jmp
pop
insl
sub
cmp
icebp
or
jb
push
push
push
sub
push
push
push
jo
fmull
scas
mov
fidivs
lret
xor
nop
ret
dec
adc
add
sub
test
or
mov
fwait
fwait
cmp
or
mov
sub
lods
xchg
push
mov
fcomi
jp
mov
and
cmp
outsl
leave
mov
cmp
cmp
or
dec
leave
lcall
stos
movsl
xchg
shrl
push
sub
imull
sub
arpl
jle
dec
xchg
repnz
and
dec
and
mov
xor
jg
mov
mov
adc
and
in
loopne
movsb
jl
outsl
mov
arpl
iret
testl
sbb
add
dec
fwait
xchg
aam
and
es
xchg
add
mov
sbb
jecxz
add
sti
push
pop
pop
sub
mov
add
sub
sti
cmpsb
sub
into
je
xchg
adc
sub
test
sarl
pop
jge
pop
pop
sub
pop
leave
clc
loop
add
mov
inc
adc
les
xor
jae
mov
xor
xorl
pop
sbb
inc
inc
or
addr16
scas
jae
sbb
add
pop
enter
mov
mov
xchg
push
addps
xor
xchg
mov
add
int3
pop
lods
mov
inc
and
cmp
mov
mov
xor
sub
pusha
scas
cwtl
lock
test
cmp
jl
mov
push
lock
dec
add
xchg
das
mov
call
xchg
int3
lods
ss
test
mov
xchg
mov
imul
pop
push
cmp
loopne
mov
ficompl
stos
test
jge
mov
dec
pop
add
loopne
adc
int3
fsubrl
leave
sti
push
out
cmp
loope
inc
cli
mul
ja
adc
xchg
dec
subl
divl
inc
mov
xchg
jg
orl
test
push
xchg
js
adc
lds
mov
inc
in
outsb
mov
push
out
mov
sbb
pop
ja
mov
pop
xor
dec
push
mov
scas
out
jb
ljmp
mov
and
adc
cmpb
shlb
icebp
fimuls
add
mov
mov
movsb
aam
mov
cltd
cli
iret
sahf
mov
sub
xor
repz
scas
jmp
adc
jp
dec
and
cmpsl
adc
mov
and
scas
fdivrl
adc
fmull
sbb
shlb
dec
sub
inc
or
add
dec
int3
fiaddl
mov
imulb
flds
fbld
cwtl
fmull
sub
mov
xor
mov
lods
inc
jo
sub
sti
cmc
cmp
xor
insb
sahf
sub
jl
push
popf
out
xchg
jnp
fs
mov
adc
push
lods
mov
pushf
push
mov
scas
fldlg2
add
pop
out
push
out
out
jle
call
sbb
rclb
ret
jecxz
mov
pusha
mov
cs
pop
jnp
jmp
mov
xchg
aaa
mov
punpckldq
pop
shll
int3
mov
fadds
dec
jmp
or
enter
shl
shlb
add
pop
mov
das
sub
pop
adc
fnstcw
into
jg
mov
sub
adc
icebp
shlb
mov
sub
adc
lcall
pusha
test
push
ret
mov
ret
aas
insb
cltd
fisubrs
mov
lret
aaa
push
popf
cld
mov
and
pusha
mov
jb
cmp
pop
xchg
shlb
test
rcll
fildl
bound
jo
int3
ja
inc
ret
and
scas
dec
or
imul
fprem
inc
mov
dec
repnz
shrl
adc
ret
call
out
fs
mov
sarb
ja
imul
push
mov
pop
jne
jo
es
popf
scas
bound
sbb
mov
rcr
push
sbb
lods
daa
leave
mov
cmp
xchg
dec
sbb
cs
cwtl
pop
mov
push
sbbl
nop
fwait
popa
dec
ljmp
sub
pop
jecxz
daa
icebp
sbb
repz
jae
repz
mov
jnp
push
popf
test
or
enter
aam
andb
jmp
push
lret
cld
push
icebp
mov
and
mov
das
jb
jecxz
or
js
scas
mov
stc
push
push
xchg
jp
sub
xor
rolb
or
in
adc
fisubrs
inc
enter
pop
daa
dec
imul
std
xor
sti
push
dec
jmp
shrb
add
jns
inc
and
push
cmp
call
pusha
mov
mov
cs
dec
xchg
enter
push
enter
shrl
es
sbb
cltd
aaa
loopne
cmpsl
aaa
xchg
ljmp
fwait
pop
scas
icebp
xor
div
and
dec
add
lock
in
es
jmp
int
and
xchg
call
ljmp
daa
mov
out
cmc
push
push
shlb
in
and
je
scas
pop
pushf
mov
shlb
jmp
push
push
js
and
xchg
leave
enter
jo
mov
nop
psubq
notl
insl
or
mov
cli
popf
jecxz
or
cs
stos
jmp
add
stos
jge
mov
js
sbb
test
aad
call
mov
and
incb
cltd
jbe
rcll
in
dec
or
es
or
cs
pop
imul
add
xchg
mov
div
pop
lahf
into
mov
push
xchg
jno
add
jo
imul
cltd
movsl
dec
negb
daa
out
das
add
ljmp
cmpsl
mov
push
mov
jb
rorb
ss
cmp
adc
xchg
pop
xlat
jmp
addl
cmp
pop
adc
and
push
jle
jg
clc
add
mov
xchg
cmp
pop
add
in
pop
arpl
push
outsb
daa
inc
push
adc
ret
mov
in
sbb
dec
and
test
repz
lret
add
lock
mov
and
mov
out
fldt
aaa
shlb
mov
adc
adc
push
xlat
fstpt
mov
xchg
jns
mov
imul
arpl
mov
mov
hlt
jo
mov
inc
sbb
push
ret
and
out
imul
aam
mov
shlb
xchg
fwait
adc
movntps
or
or
or
popa
pusha
mov
fldcw
and
outsl
int
lods
add
cld
push
add
nop
sub
inc
add
mov
cmp
test
sbb
icebp
mov
lock
icebp
inc
andb
pop
stc
xchg
bound
jmp
inc
mov
ret
mov
adc
rcll
dec
add
dec
push
popf
sub
push
fs
or
adc
ljmp
sbb
lea
inc
or
push
stos
out
cmpsb
fdivrl
mov
inc
fidivl
jmp
add
and
insl
cmp
adc
mov
xchg
lcall
lret
and
mov
pop
and
sbb
adc
and
cmpsb
sbb
mov
inc
and
pop
enter
cld
mov
push
xchg
push
cmpsl
call
pop
pop
xchg
add
jle
enter
jb
push
mov
push
mov
sbb
xor
addr16
movsl
sbb
add
aas
cltd
test
es
jl
test
ficompl
mov
mov
mov
mov
push
aad
mov
jp
jp
imul
and
cs
xlat
sbb
or
insl
add
push
pushf
in
add
mov
or
add
test
std
xor
mov
into
movsb
xchg
ljmp
cmp
cmpsb
cmp
mov
push
xchg
mov
mov
push
je
or
sbb
sahf
adcb
nop
and
xchg
pop
mov
movsb
jmp
push
arpl
cmp
ret
xlat
mov
cli
lahf
cmpsl
push
iret
mov
int3
lock
cli
inc
lahf
xor
arpl
add
addb
pop
mov
cmp
hlt
add
cmc
stos
inc
add
inc
pop
add
ret
sbb
or
add
movl
cs
adc
popf
xor
mov
test
xchg
jb
fcmovu
fmull
mov
es
out
cmp
sbb
xchg
and
mov
push
daa
rcr
insb
inc
jbe
pop
daa
aad
jae
jnp
or
movsl
push
sahf
cld
in
or
sub
xchg
xor
ret
lahf
lea
and
jmp
xor
or
adc
popf
adc
sti
pop
jp
push
pushf
cmp
jbe
add
inc
adc
fldz
es
add
mov
hlt
fcoml
sbb
mov
repnz
xchg
fcompl
ret
pop
cmp
mov
sub
sbb
ss
cmpsl
scas
push
test
pop
sbb
sbb
xor
xchg
fists
clc
mov
lret
scas
scas
fnstenv
mov
faddl
pusha
aas
in
cpuid
loope
mov
add
push
jmp
jecxz
dec
sti
jmp
lods
lock
sti
bound
inc
xlat
push
cmpsl
insb
cmp
imul
mov
addl
push
xor
adc
test
adc
dec
mov
shll
leave
pushf
pop
movb
pop
and
loopne
out
xchg
mov
adc
lret
push
mov
adcl
adc
jp
dec
adc
sub
and
movsl
cs
jo
push
xlat
xchg
dec
dec
iret
and
outsb
hlt
fiaddl
lods
gs
mov
sti
pusha
adc
dec
movsb
test
mov
test
fldcw
shrb
add
push
fld
fdivs
les
push
in
in
ret
adc
sbb
cmp
xchg
aam
mov
arpl
adc
push
outsl
pop
dec
sub
data16
pop
mov
test
mov
mov
mov
push
mov
push
push
jb
test
ja
lock
sbb
gs
aaa
mov
aaa
lds
nop
adc
push
cmp
into
jae
repz
cmp
inc
mov
pop
shrb
bound
repnz
enter
scas
ret
cmc
cli
test
lahf
mov
nop
out
or
cmp
mov
xor
mov
xchg
xor
fisubs
rol
adc
push
push
xor
push
clc
sbb
mov
negl
imul
xor
notl
pop
fcoms
fsubrs
jno
sbb
adc
outsb
icebp
add
xchg
insb
stc
lods
test
jp
push
imul
fdivrl
pop
mov
pop
lds
inc
test
mov
repz
push
jnp
mov
gs
pop
pop
or
out
repnz
fcomip
push
aam
mov
pushf
inc
sahf
jne
xchg
mov
mov
sbb
mov
fwait
ds
adc
pop
inc
cli
sarb
inc
fbld
lods
cmp
popl
iret
leave
in
mov
pop
notb
jae
sarb
testl
fnsave
loopne
xchg
dec
mov
push
cmpsb
stc
ss
dec
xor
sub
push
fldlg2
ss
fwait
insb
lods
jo
iret
bound
dec
icebp
xchg
mov
sbb
sbb
pop
or
or
pop
movsl
add
cmpl
xor
jecxz
test
movb
fcomps
ret
xchg
in
mov
xchg
and
popa
ss
loop
enter
pop
cmpsb
ds
les
mov
in
sahf
shrl
andl
pop
ljmp
loop
mov
into
iret
arpl
out
sub
xchg
aad
mov
cmpsl
imulb
ret
inc
ror
clc
sub
inc
gs
es
test
inc
jle
popl
push
xchg
dec
mov
cmc
lahf
pushl
dec
dec
ljmp
fidivs
mov
shll
sarl
sbb
and
aas
xor
stos
pop
rcrl
js
add
into
mov
xchg
lock
mov
dec
int3
sbb
push
fisubl
daa
out
jmp
mov
and
sti
lds
mov
push
nop
sarb
out
xchg
jle
ficompl
insl
test
data16
leave
and
hlt
mov
or
mov
int
in
or
add
arpl
lea
xchg
mov
push
xchg
add
adc
dec
sbb
pop
mov
push
sub
pop
mov
jno
sar
xchg
adc
adc
mov
das
mov
imul
mov
cmp
in
call
cmp
dec
mov
pop
dec
pusha
add
jl
jle
cmp
pop
fcoms
or
movsb
inc
loopne
mov
into
ja
and
aas
out
cli
add
add
loopnew
adcl
mov
int
xchg
lods
ljmp
add
fidivl
sbb
inc
ja
jmp
cltd
aas
out
pop
es
out
ds
xchg
lea
sti
stos
out
add
push
lods
ds
stc
jge
inc
or
jne
xchg
repnz
daa
pusha
fldenv
cwtl
cmp
or
adc
mov
dec
lock
mov
cld
aas
dec
cs
mov
xor
cwtl
xorl
outsb
dec
xchg
xchg
mov
and
mov
jb
xor
loop,pn
into
mov
lret
xor
stos
fdivl
hlt
shl
mulb
xchg
xchg
mov
and
fcmovne
dec
pop
outsl
cmp
cmp
int3
loope
cmp
dec
dec
into
mov
loope
pusha
pop
icebp
ret
pop
out
mov
popa
popf
cmp
and
adc
into
sub
out
lret
dec
jns
sub
sahf
daa
inc
xchg
aad
jl
leave
test
jmp
adc
loop
es
sarl
into
pop
jbe
or
sarl
ret
mov
clc
jmp
push
nop
scas
int
cs
clc
inc
or
subl
ret
imul
lahf
iret
sub
popf
in
fidivrs
sub
pop
mov
mov
add
jno
loopne
test
cmpl
stc
cmp
clc
inc
sub
fildll
ret
std
adc
jp
dec
adc
movsl
js
sub
push
push
push
mov
mov
arpl
xlat
pop
stos
and
mov
ljmp
push
add
push
cmpsb
mov
push
test
call
testl
mov
cmp
push
pop
cmpsb
ds
xor
xchg
lahf
sub
cmpsl
mov
lds
cmp
push
clc
jge
cmp
shl
xchg
shll
dec
jno
push
ljmp
mov
pop
fdivs
xor
fs
data16
mov
lods
and
dec
jns
clc
out
mov
xor
lods
pop
fsubrs
adc
cwtl
dec
sub
jl
or
lods
adc
out
mov
sub
dec
adc
call
dec
mov
fisttpl
push
sti
hlt
int
je
mov
push
jge
and
pop
sbb
mov
fstpl
iret
and
cs
pushf
iret
loopne
out
cmpsb
mov
sbb
dec
mov
mov
adc
cmp
pop
adc
mov
fdivs
inc
sarb
jl
in
xchg
xchg
jns
lock
std
sub
and
xor
or
dec
dec
sub
outsl
test
push
scas
mov
int
cmp
mov
lea
cli
cmp
fld
sub
mov
and
or
rcl
jnp
xchg
inc
imul
outsb
pop
push
mov
xchg
dec
lock
dec
das
adc
lret
jo
sbb
out
xchg
push
ret
rclb
mov
xor
xor
or
pushl
stos
push
movsl
ret
mov
cmpsb
js
mov
add
mov
arpl
push
pusha
cmp
xchg
lea
push
rcll
xchg
adc
xchg
push
mov
dec
push
mulb
cmp
repnz
sti
sbb
or
bswap
jmp
jge
in
add
push
cwtl
add
jae
je
add
push
lock
cmp
jbe
leave
into
ret
mov
push
lret
jle
fdivs
test
out
gs
dec
out
bound
jns
jl
stos
insb
xchg
sbb
mov
and
cmpsb
lahf
pop
xchg
mov
mov
jae
dec
mov
test
mov
push
into
mov
scas
ficoms
jne
xor
jbe
stc
pop
rcll
adc
mov
xor
lret
ljmp
stos
and
xchg
and
shr
cli
inc
mov
xor
outsb
jno
ljmp
lds
inc
push
rcr
sub
cmpsb
inc
push
xchg
scas
out
mov
mov
xor
lods
pushf
cwtl
xorl
inc
fnop
data16
push
mov
stos
inc
xchg
aas
subl
movsl
in
into
repnz
imul
cmp
jmp
jne
push
xchg
outsb
pop
jmp
jne
dec
inc
push
push
jo
popf
lret
xchg
in
inc
jecxz
lods
cwtl
fsubs
sbb
fdivrl
lods
arpl
pop
loop
std
inc
adc
mov
mov
into
pop
out
xchg
mov
cmp
or
mov
mov
cmp
lahf
loop
out
fnstsw
add
lock
and
ret
out
addl
into
sub
repnz
movsl
sbb
and
push
popa
jo
imul
imul
mov
jge
and
add
imul
xchg
test
ror
pop
and
call
push
lcall
dec
sub
sbb
or
adc
mov
and
xchg
sti
mov
xchg
je
jmp
fmull
js
jge
aaa
push
inc
lahf
fdivrl
fldenv
push
aas
test
mov
roll
lahf
adc
sub
scas
mov
mov
enter
mov
xchg
push
cltd
xchg
test
mov
imul
mov
cmpl
out
imul
cld
add
pop
int3
and
loop
lods
bound
arpl
aam
bnd
sbb
test
xor
pop
ficomps
push
mov
test
mov
mov
dec
cmpsl
dec
mov
mov
fbld
es
sub
into
out
or
pop
rcr
sarb
sub
xor
push
and
adc
jne
mov
aas
push
test
pop
test
pusha
loope
inc
and
call
push
push
and
lock
sub
out
jae
jno
adc
pop
repnz
jmp
mov
inc
mov
xor
addr16
jmp
dec
push
lea
inc
mov
fidivrl
loope
adc
ljmp
mov
push
ficompl
push
push
inc
lods
inc
fisubrs
sbb
mov
mov
cli
xor
jo
sbb
or
out
inc
addl
jge
repnz
inc
adc
idivb
scas
and
sub
dec
pushf
jmp
inc
mov
inc
cmp
int3
sbb
push
movsl
xchg
mov
into
ret
fwait
pop
jbe
jp
lods
or
mov
pop
sub
sbb
int
cmp
sbb
jne
jns
and
dec
shll
adc
xchg
jge
add
pushf
and
lods
fcomps
or
xchg
cmp
xchg
popf
stos
das
xchg
or
sbb
mov
and
or
sbb
and
jns
lock
pop
jo
sub
out
jmp
pop
dec
out
bound
stos
shll
aad
cmpsl
test
insb
xor
cs
push
aaa
fimull
pop
inc
push
inc
mov
faddp
sbb
xor
std
xchg
push
scas
mov
or
ljmp
fldt
inc
inc
outsb
scas
mov
xorb
lock
xchg
fldl
inc
jns
inc
jmp
mov
rol
repnz
add
test
iret
xchg
stos
jg
push
std
popf
lods
sbb
faddl
adc
cmc
repnz
rolb
mov
push
repz
mov
xchg
sbb
mull
mov
sbb
int
orl
mov
cmpsb
cmp
imul
rorl
repz
cwtl
insb
mov
push
pop
out
jmp
jl
inc
test
jl
pushf
xlat
mov
cmpsb
sti
fisttps
mov
test
sbb
xchg
out
sbb
mov
aas
pop
cmp
in
int
xchg
movsbl
dec
ljmp
sbbb
fidivrl
std
add
jle
ficoml
stos
fisttpl
cmp
stos
int
pop
cmp
iret
add
popf
mov
movsb
enter
rcr
jae
jl
arpl
mov
fisttpl
jecxz
in
sbb
push
lret
and
ret
adc
pushl
xchg
xchg
and
adc
and
fisubrs
rcrb
dec
cwtl
addr16
jb
and
add
push
or
cmp
addr16
mov
roll
test
cld
xchg
into
stc
cmpsb
rcl
adc
cltd
fwait
jmp
lret
aas
add
negb
push
mov
add
inc
mov
jb
mov
outsb
test
or
push
aam
push
cld
test
enter
push
das
cmpsl
add
xchg
cmpsl
and
xchg
adc
jb
stos
adc
xor
or
rorb
pop
leave
popf
in
xchg
fistpl
add
push
subb
xchg
pop
and
push
mov
mov
arpl
in
nop
std
xor
addl
mul
jge
inc
daa
sbb
repnz
arpl
aas
andl
addr16
roll
inc
add
es
stos
pop
cmp
dec
fmul
icebp
xchg
cmpsl
test
js
sbb
mov
into
cmp
adc
stos
xor
or
push
in
lods
in
cmp
push
adc
cmc
mov
cmp
fistl
xchg
inc
and
jbe
jle
lock
pop
pop
xchg
xchg
sub
push
lea
dec
push
dec
xor
enter
loope
add
push
imul
xchg
maxps
cmp
cmp
jecxz
into
sub
test
cli
mov
push
xchg
stos
cmp
xchg
xchg
pop
mov
mov
or
das
dec
lcall
xchg
nop
cmp
or
dec
xchg
nop
ret
pushf
and
cltd
ss
xchg
outsb
xchg
dec
or
cmc
shll
mov
orl
jp
xchg
es
das
cmp
adc
add
daa
pop
sbb
std
jp
dec
xchg
dec
mov
mov
filds
fcomps
push
addl
hlt
xor
xor
jb,pt
mov
cltd
jnp
popf
push
rcr
inc
pop
sbb
jmp
add
pusha
fwait
push
jmp
lods
jle
jae
push
std
add
subb
cmpsb
push
aas
sbb
adc
or
push
loope
fcomi
xor
loop
sub
in
cltd
mov
xlat
aam
add
ret
push
push
pop
and
push
pop
pusha
mov
add
ljmp
mov
jg
and
incb
inc
jge
fdivs
movsb
xchg
mov
cld
in
rcr
push
mov
and
xor
notl
push
out
mov
push
cmp
mov
stc
jb
mov
lds
jns
ja
leave
cli
out
jbe
pushf
imul
aam
loopne
outsb
pop
sub
inc
sub
lods
xchg
cmpsb
jl
jg
jle
inc
mov
pop
push
mov
mov
dec
xchg
push
jg
xlat
mov
aas
adc
and
lret
jge
inc
insl
outsb
pop
imul
ficompl
je
dec
pop
add
or
out
pop
std
rcrl
fwait
ja
outsb
dec
add
in
test
fildll
adc
mov
sub
sbb
sbb
xlat
imul
mov
ret
sbb
iret
push
pop
cmp
and
popa
mov
cmp
sbb
popa
hlt
push
mov
xchg
mov
in
push
subl
shrl
add
mov
daa
lret
cmc
and
enter
maskmovq
testl
imul
mov
outsb
ret
xorl
adc
cmc
jmp
mov
or
xor
iret
cmp
jge
in
and
mov
mov
mov
mov
insl
ret
cmp
mov
push
push
mov
mov
cld
jp
fcmovnbe
pop
rcrb
sub
sarl
outsl
loop
mov
adc
cmp
push
push
sub
mov
outsb
lea
sbb
mov
sbb
ret
inc
mov
fadd
pop
inc
mov
and
ja
dec
mov
lahf
add
inc
test
repnz
insb
pop
or
xchg
mov
sub
sbb
imul
pop
mov
inc
push
adc
xchg
jmp
or
fsts
inc
leave
stc
jnp
js
lcall
out
scas
gs
or
xor
and
xchg
adc
imulb
add
cmp
pop
pushf
xchg
push
leave
xor
inc
fnstsw
out
mov
fnstenv
mov
or
pop
jl
jg
dec
outsb
pusha
pop
cmpsb
adc
inc
cmp
lea
fs
dec
pop
fs
movsb
test
mov
add
dec
gs
xchg
roll
arpl
dec
cltd
iret
repnz
enter
push
add
push
push
and
lret
adc
test
cmpsl
aas
jmp
add
mov
push
mov
and
xor
test
out
adc
das
mov
or
adc
jl
push
daa
add
or
adc
or
or
jo
movsb
xor
adc
mov
roll
jg
jnp
scas
sahf
xchg
sub
cmp
xchg
lret
out
or
ja
mov
test
test
je
sub
push
mov
push
test
leave
cs
ss
mov
lret
fldcw
jp
sub
or
and
pop
mov
xorl
push
inc
cmp
aam
dec
test
xchg
clc
push
jb
cli
fsts
repz
cmp
test
popf
test
pop
sbb
bnd
lods
cld
cmp
jg
ret
dec
adc
xlat
pop
dec
push
out
addr16
mov
stos
mov
sbb
jbe
cmpsl
jmp
sub
inc
sub
mov
sbb
jne
dec
add
and
jae
jmp
push
inc
pop
pop
lcall
ds
mov
push
mov
negb
push
fcmovb
dec
les
mov
mov
push
shlb
fs
scas
sahf
adc
imul
cwtl
ja
popf
stos
stc
lods
and
addr16
pop
pop
sub
or
mov
fildl
push
and
cmp
dec
xor
ljmp
psllq
sub
cmp
jb,pn
je
sub
mov
adc
jbe
aas
dec
lds
push
ljmp
cli
pop
mov
adc
shll
jns
mov
aam
cmpb
fdivl
adc
call
imul
dec
or
jge
adc
loopne
js
bound
inc
ret
push
lds
imul
jl
jb
xchg
xchg
xchg
sahf
xchg
into
cltd
push
dec
stc
pop
pop
dec
sub
ror
imul
sbb
mov
push
loopne
mov
mov
daa
mov
inc
push
ds
jbe
mov
inc
movsb
mov
sub
clc
scas
pop
adc
movsb
mov
push
shrb
shlb
mov
or
or
dec
fsubl
int
pusha
pop
xchg
pop
stc
mov
pop
stos
mov
pusha
call
inc
lcall
leave
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
jmp
jl
in
sub
adcb
decb
adc
sub
push
push
jecxz
dec
out
push
les
jb
dec
movsl
inc
clc
sub
xchg
jg
icebp
sbb
sub
and
scas
mov
pop
mov
cmpsl
sarl
sahf
cmp
xchg
or
xor
cmpsb
xchg
lea
or
pop
mov
rorb
rolb
add
aas
xor
insl
repnz
ds
sub
ljmp
adc
xchg
cmp
jae
xchg
rcll
mov
arpl
in
rcrb
ds
clc
xchg
loope
mov
loopne
xchg
mov
fs
inc
add
pop
or
push
mov
mov
ja
rorl
and
popa
jns
inc
adcl
mov
sbb
movb
add
mov
mov
pop
cwtl
mov
leave
dec
gs
lcall
test
addr16
jp
fmull
stos
push
cmpsl
and
mov
push
xor
jns
adc
scas
xor
pop
cltd
push
lcall
div
lock
sub
xchg
clc
push
movsb
and
push
ljmp
push
jg
ja
cwtl
mov
cs
push
stos
into
shrb
or
addr16
xchg
mov
std
imul
dec
mov
in
mov
jb
lods
pop
hlt
and
jl
movlps
cli
jmp
mov
lock
outsl
xchg
xor
dec
test
cmpsl
shll
inc
inc
lret
push
sbb
sbb
iret
test
push
ffree
cmc
pusha
push
shll
dec
gs
inc
mov
adc
rol
shll
sbb
setno
call
out
dec
mov
cmpsb
mov
popa
pop
mov
dec
loopne
xchg
pop
jns
adc
inc
and
sbb
jne
and
out
popa
cmc
inc
jo
fistl
cmc
inc
lret
mov
je
dec
in
out
push
lret
inc
push
xor
stc
movsl
call
dec
mov
or
sub
ds
cmp
test
je
rorb
push
insb
je
lahf
cmp
bound
lods
xchg
pop
add
mov
pop
sub
xor
sbbb
push
imul
shlb
push
filds
ja
out
or
pop
mov
cmp
loop
dec
adc
mov
sbb
jmp
mov
and
add
jecxz
add
orl
dec
jae
fisubrs
or
je
mov
loope
pop
clc
inc
mov
mov
push
cmp
ja
adc
mov
push
or
aam
push
fwait
and
in
push
out
xchg
xchg
and
and
notl
mov
dec
movsb
mov
ret
xor
fmuls
ljmp
xchg
repz
mov
push
std
xchg
fwait
lea
dec
out
icebp
cli
sbb
lods
lret
push
cmp
cmp
pop
popf
bound
aas
and
lods
imul
ljmp
mov
pop
incl
mov
adc
int
bswap
add
outsb
lahf
jbe
push
xor
jne
adc
xchg
or
xchg
mov
stos
clc
cmp
into
mov
je
lods
push
clc
inc
xor
or
rcr
cmp
std
sub
imul
ds
mov
add
inc
loope
mov
xor
lods
mov
pop
jbe
lcall
stos
push
mov
pop
xor
loop
adc
lcall
fcomp
push
std
push
int3
push
or
int
inc
and
js
aad
push
aaa
add
mov
inc
and
pop
movsl
mov
mov
pop
fsubrp
cltd
jo
mov
subl
push
rcrb
dec
push
in
pop
andb
clc
lods
in
push
push
inc
shl
push
pop
into
ljmp
imul
push
xchg
mov
scas
shrb
jmp
test
sub
sub
sub
fidivrl
jmp
loopne
test
lods
iret
mov
stc
xor
orl
mov
mov
dec
mov
mov
mov
sbb
gs
insb
rolb
fisubs
pop
shlb
push
adc
sbb
mov
push
outsb
pusha
shll
into
gs
rcll
ds
dec
fstpt
stos
mov
sbb
ljmp
in
or
aaa
or
add
enter
je
decl
push
mov
mov
push
call
mov
test
sbb
push
sbb
out
cs
loopne
mov
cmp
mov
lods
xor
pop
ja
mov
cmp
xchg
mov
es
add
mov
lods
sub
outsb
push
inc
pusha
sub
sbb
sbb
or
and
je
das
leave
sar
pop
fsubs
test
adc
stos
push
push
mov
inc
dec
iret
hlt
jle
push
or
out
cs
mov
sbb
jg
cmp
fimuls
mov
test
mov
add
lahf
das
mov
sti
aaa
xchg
pushf
cmp
fldcw
mov
jp
and
ds
jge
mov
mov
push
sub
shr
mov
test
mov
mov
out
scas
popa
and
jbe
mov
cmp
mov
mov
iret
mov
pop
pop
mov
mov
inc
addl
iret
jae
aad
lcall
xor
mov
xor
and
fdivrs
rorl
fs
rclb
and
test
xchg
xor
dec
inc
sarb
push
cmp
out
add
cmpsb
add
mov
std
les
mov
fildll
inc
and
mov
inc
clc
loop
clc
in
push
push
inc
pop
mov
mov
or
rorb
leave
fwait
jae
mov
loopne
dec
sbbl
icebp
pop
sahf
fwait
arpl
mov
mov
mov
cvtps2pi
pop
insb
xor
bound
sbb
fsubrs
ja
stc
std
cmpsl
cld
xchg
mov
jb
xchg
xchg
and
idiv
jae
ja
cwtl
repz
mov
mov
ret
and
mov
or
mov
mov
mov
aaa
mov
pop
aam
iret
call
fs
cs
pop
add
insb
mov
and
mov
ljmp
arpl
sti
jge
adc
mov
mov
rorb
scas
imul
jp
or
icebp
stos
fisttpl
sub
ret
fsubs
lods
xchg
mov
stos
inc
xchg
andl
ret
push
jbe
mov
in
jbe
mov
xchg
mov
or
jmp
xor
shll
jle
fldz
enter
jnp
shll
mov
mov
mov
ds
es
add
cmpsb
fisubl
aam
cli
push
inc
adc
mov
fcom
icebp
cmp
test
xchg
sbb
int
mov
push
lret
inc
inc
add
sub
pushf
push
dec
sti
sub
adc
mov
outsl
sbb
xchg
add
imul
sarl
das
push
sbbb
xchg
out
mov
and
stos
rolb
imul
imul
xor
faddl
mov
test
dec
xor
lcall
popf
lret
push
add
loope
nop
leave
xchg
and
jns
mov
sbb
inc
gs
ret
roll
in
add
mov
cmp
aad
push
outsl
jno
inc
mov
js
cld
stc
sbb
jge
mov
dec
or
pop
xchg
movsb
push
and
mov
jge
sti
push
incb
or
mov
dec
sub
jle
cmpl
out
lret
adc
rclb
dec
push
lods
neg
sub
addr16
mov
test
push
sub
add
xchg
lods
pop
dec
inc
imul
sbb
out
fwait
and
faddl
test
cltd
pop
xchg
data16
or
test
adc
jns
pushf
daa
pop
sub
mov
or
xlat
dec
push
int3
xor
jp
xchg
jne
dec
aam
lods
sbb
adc
rcll
in
xchg
sbb
outsl
fs
sbb
lea
or
clc
jge
sub
mov
or
mov
repnz
clc
arpl
lcall
mov
lret
scas
nop
sahf
cmp
mov
add
xor
push
jg
mov
fists
mov
les
mov
cmc
ja
dec
test
dec
xchg
aad
pusha
xchg
jbe
adc
or
jb
pop
jne
push
jp
enter
adc
inc
lret
or
fmuls
push
dec
subl
mov
adcb
orb
sarb
outsl
jp
cli
jp
push
bound
cmc
outsb
and
in
adc
xchg
jle
sbb
adc
add
cmp
aas
inc
xchg
sub
and
andl
or
aad
xchg
pop
mov
pop
ss
add
int
mov
sbb
fs
lds
push
cs
jne
outsb
addr16
or
sbb
in
outsb
ret
aam
dec
adc
inc
jge
in
add
lods
bound
lret
lret
call
inc
in
insb
xor
mov
inc
sub
pop
jbe
lods
loop
in
stc
sbb
inc
loop
repz
dec
jle
inc
cmpsb
dec
and
mov
mov
push
mov
pop
addr16
test
adc
cmpsl
int
in
and
sbb
sub
mov
movb
jmp
mov
dec
or
or
mov
movsl
es
or
mov
pusha
xor
addr16
xchg
jge
and
les
or
insb
icebp
xchg
stc
into
nop
add
fidivl
mov
fistpl
iret
popf
and
adc
cli
clc
ss
lahf
adc
out
mov
mov
jbe
std
xor
cmc
mov
daa
shrb
ror
xchg
push
dec
xor
jne
pop
sub
pusha
push
sbb
int
push
loopne,pn
in
shl
xchg
add
sbb
ljmp
pop
test
pop
in
aaa
lds
ja
insl
cli
repz
adc
or
sub
pop
rcll
dec
lret
xchg
mov
inc
or
es
and
movsb
mov
mov
push
cli
shrb
push
dec
fcmovb
cmc
jbe
mov
jo
sub
nop
push
cli
out
inc
in
mov
popa
pusha
insl
xchg
jns
pop
aas
xchg
into
in
int
movsl
sub
loop
out
jl
xorl
lods
jp
jnp
push
mov
outsb
cmpb
or
fisubrs
pop
iret
adc
and
lret
lahf
push
pop
dec
or
push
cli
pop
into
mov
jg
mov
jmp
stos
fwait
xor
jmp
mov
in
push
sub
mov
rcll
fucom
das
scas
testl
in
rcl
imul
sbb
xor
icebp
xor
jno
jnp
lods
lret
nop
insb
lcall
rol
scas
dec
cmp
fbld
pop
inc
mov
movsl
and
cwtl
push
popa
or
lcall
push
pop
xchg
loope
mov
pop
cmpsl
xor
lret
arpl
push
test
cli
cs
inc
jmp
daa
adc
or
xchg
lret
adc
cmp
adc
sbb
pop
movsl
mov
mov
jle
clc
inc
cmp
dec
push
cmpsb
mov
cmc
mov
enter
mov
test
jl
test
cmp
push
repz
jns
sbb
out
pop
sbb
jge
andl
fstpt
js
lcall
sub
sbb
mov
dec
out
mov
int3
insb
xchg
xchg
clc
fiadds
mov
sbb
add
imul
ja
aaa
mov
shrl
stos
test
lahf
xchg
pop
mov
int3
imul
pushf
xchg
daa
mov
sbb
push
loop
test
add
bts
daa
repnz
jmp
dec
scas
mov
xchg
das
and
ss
inc
xlat
iret
cli
jl
aas
sarl
icebp
push
push
aaa
fisubrl
inc
mov
cmp
cld
adc
cltd
and
xor
popa
sub
lea
adc
call
xchg
jb
out
scas
addr16
and
outsl
clc
inc
fldl
leave
sbb
lds
inc
lea
daa
push
mov
push
inc
insl
xchg
cwtl
jno
test
push
sbb
movsl
loop
mov
fwait
push
xlat
imul
fisttpl
mov
pop
shll
xchg
sub
outsb
stc
jno
addr16
fwait
dec
add
rclb
daa
jg
jbe
mov
mov
movsb
inc
lods
jo
mov
jno
jg
lods
imul
sbb
fdivp
jbe
test
mull
inc
cmp
roll
out
lods
jae
les
and
adc
not
jns
xor
roll
sub
orps
xor
ja
sarl
jp
jg
jp
dec
ret
in
flds
inc
movsl
repnz
sbb
jb
mov
pop
adc
and
dec
out
add
mov
xor
in
cs
pop
std
xor
add
add
cmp
lods
rcrb
jnp
pop
sbb
test
mov
mov
dec
shr
test
jp
fwait
pop
mov
fs
ret
inc
xchg
push
or
aad
lods
jge
push
mov
subb
adc
jmp
mov
aam
sbb
out
add
jo
mov
lcall
xor
mov
test
call
jge
xchg
test
out
test
pop
push
adc
xor
sub
mov
mov
lret
mov
sbbl
in
push
cwtl
cmp
clc
lods
mov
fiaddl
inc
jl
add
xor
aam
sub
push
cwtl
inc
mov
shrb
dec
cmp
cmp
popa
mov
xor
push
mov
xchg
mov
ficoms
cmpsb
test
add
pop
jmp
sub
hlt
icebp
inc
inc
idivl
inc
lock
inc
hlt
ja
mov
arpl
js
inc
daa
movsb
mov
push
push
mov
mov
icebp
dec
add
stos
jb
pop
es
adc
std
xchg
les
mov
mov
adc
ds
pop
gs
and
dec
add
incl
addr16
out
dec
cmp
mov
pop
xor
jmp
aaa
lcall
cmpsl
mov
fchs
pop
and
int
xchg
sbb
xchg
aaa
xchg
mov
loopne
jnp
adc
mov
movsl
inc
pop
xor
cvtdq2ps
clc
in
mov
in
repz
mov
in
pop
ljmp
inc
jl
aam
daa
nop
leave
mov
lcall
xchg
mov
mov
popa
pop
cmp
dec
sub
fs
roll
rorb
outsl
xor
adc
sahf
sti
xchg
out
adc
sub
inc
fists
push
mov
out
inc
push
popa
cmpsl
inc
xchg
cmp
inc
shlb
repz
icebp
lods
shll
cmp
sbb
sub
cs
shlb
jbe
xchg
xchg
cltd
mov
push
sbb
fnstsw
push
sahf
xor
jmp
sbb
div
lods
xor
das
add
xchg
sub
pop
dec
push
add
lahf
iret
addb
fildl
jle
push
and
lock
fwait
push
cli
sub
imul
jmp
fisubrs
cmp
push
mov
jne
mov
mov
pushf
xor
xchg
sbb
cwtl
jnp
xlat
pop
adc
mov
xor
addb
and
sub
or
sarb
pop
cmp
aaa
or
dec
xchg
sub
into
outsb
icebp
adc
movsb
lods
push
dec
and
popf
adc
aad
std
scas
cli
dec
add
mov
ror
xchg
js
arpl
repnz
push
ljmp
cmp
xchg
push
cmp
lahf
lods
addr16
sub
jp
lret
sbb
mov
lock
ret
nop
mov
loope
movsl
aam
cs
mov
leave
add
ss
push
jae
flds
pop
sbb
cmpsb
dec
das
pop
mov
rol
lods
and
and
pop
jbe
mov
push
mov
stc
push
cmpb
sbb
mov
ds
scas
xor
jne
dec
fstl
rcll
add
shll
idivb
fxch
add
pop
shr
xchg
fistps
mov
sub
jmp
mov
iret
ljmp
in
add
cwtl
inc
lahf
arpl
xchg
nop
insb
sbb
lods
mov
jle
jecxz
aaa
test
push
mov
outsb
xchg
cmp
dec
add
push
add
rol
lea
push
xor
insb
mov
data16
fsubl
fmulp
das
subl
push
lret
push
ficompl
adc
lds
lret
adc
roll
ss
xchg
sub
push
sub
in
imul
sahf
mov
inc
lcall
lcall
aad
jnp
push
add
outsb
push
mov
add
inc
fimull
loope
ljmp
scas
adc
fwait
test
adc
cmp
cld
pop
jecxz
into
push
call
or
jmp
mul
stos
icebp
popa
movsl
sbb
jecxz
repnz
jp
or
cmpsb
inc
mov
andb
push
jo
sbb
in
mov
xchg
fsubr
pop
or
adcl
pop
xchg
and
jle
movsl
nop
loope
mov
xor
mov
les
xlat
fstpt
push
cmp
and
jp
jecxz
sub
xchg
adc
out
jb
insl
mov
pop
jp
mov
aaa
daa
sub
in
and
loop
ds
aas
imul
fs
aas
mov
cmc
shll
xor
xchg
je
lss
mov
xor
add
addl
and
mov
push
jo
jle
mov
pop
fldl
or
push
pusha
outsb
mov
jnp
mov
add
xor
pop
xor
add
and
lds
scas
aas
std
sub
jp
mov
popa
lea
popf
repnz
addl
sbb
mov
mov
jge
add
sub
in
adc
mov
fldl
mov
mov
push
lods
adc
mov
out
mov
and
lcall
adc
mov
jno
fdivs
cld
data16
int
popl
push
push
jecxz
inc
jno
cmpsl
stos
fistpll
mov
lahf
sub
test
sbb
fdivrs
jb
stc
add
fstps
sbb
jnp
jl
into
jo
mov
std
add
stos
ret
cwtl
and
cltd
xor
mov
xchg
ds
jle
mov
loope
addr16
in
cmp
sahf
or
cmp
pop
fdivr
pop
int3
adc
sbb
cs
mov
mov
sbb
sahf
xchg
dec
popa
fs
xlat
fnstenv
shll
and
lods
adc
jge
loop
into
imul
xchg
mull
sbb
cmpsb
mov
cwtl
sbb
and
add
fimull
add
fs
insl
test
mov
popf
jg
cmpsl
std
mov
inc
jbe
int
pop
mov
jp
pop
ja
add
mov
push
aad
rol
jmp
and
aad
inc
adc
scas
stos
imul
mov
test
les
loope
and
jae
add
xchg
lods
mov
cmpsb
or
xor
lds
xor
pushf
push
xlat
cmp
insl
mov
imul
jae
sub
out
daa
or
subb
push
aam
jl
cmp
loope
add
or
mov
repz
shll
cmp
mov
test
test
adc
push
out
adcb
sbb
xchg
lds
lahf
jle
inc
shlb
dec
insb
es
movsl
jne
dec
xchg
cmc
dec
loope
sub
test
stc
dec
jge
icebp
je
shll
fcoml
rolb
xchg
fmul
jno
fsubs
adc
xlat
mov
add
aad
mov
cs
mov
or
push
jb
mov
cmp
ss
sti
add
adc
push
sub
push
stos
data16
ja
pop
std
movsb
out
popf
mov
out
cld
fisubl
daa
dec
ficompl
aaa
out
and
orl
xor
aad
cld
push
es
push
stos
mov
sbb
scas
cltd
call
insb
mov
mov
les
push
repnz
add
lcall
test
mov
loop
push
in
sarb
scas
adc
or
js
pop
push
scas
mov
or
dec
xor
test
fldenv
mov
dec
insb
mov
test
mov
in
psrlw
xchg
jecxz
addr16
out
sub
cmp
cwtl
xlat
das
out
stc
mov
pop
mov
ficoml
adc
adc
adc
in
arpl
clc
cmp
pop
cwtl
movd
mov
fldl
inc
dec
out
ret
push
fdivrs
aam
or
inc
and
aam
inc
add
pop
fsubrs
xor
push
sbb
jbe
pop
imul
mov
inc
in
lahf
ja
or
xchg
add
testl
sahf
ja
inc
lret
nop
in
stos
outsl
into
add
stc
inc
mov
bound
adc
fisubrl
aas
cmpb
loop
test
dec
sub
jle
data16
sahf
mov
scas
inc
ret
sbb
int
jge
outsl
shrb
xorb
xor
inc
add
cld
xchg
ljmp
xchg
jmp
sub
into
mov
andl
sahf
test
add
sahf
sbb
jge
cs
test
xor
adc
das
xchg
mov
push
pop
push
sbb
adc
mov
idivl
frstor
in
fists
fldenv
jge
lods
xchg
xor
lds
pop
icebp
mov
das
xchg
call
or
sub
je
rolb
inc
cmp
arpl
daa
movb
mov
inc
call
cmp
mov
add
jnp
in
jmp
lods
jmp
sub
xchg
pop
fistl
xchg
lcall
mov
stos
int3
adc
jmp
pop
leave
rcll
aam
and
sbb
mov
cltd
inc
loopne
fstpt
jl
sbb
push
data16
pop
out
inc
push
setne
mov
adc
cmc
testb
fstps
mov
cmp
cmpsb
into
mov
fidivs
pop
jae
xchg
pop
fdivl
pushf
aad
pop
xchg
xor
push
mov
pop
add
jne
xor
or
pop
adc
in
xlat
xchg
sub
aad
pop
add
pop
inc
pop
in
pop
clc
cmpsb
aad
mov
lods
sti
inc
mov
pop
push
mov
insb
loop
mov
sbb
enter
xchg
xlat
jge
mov
xchg
xor
clc
mov
cmp
shll
fstpt
insl
clc
xchg
add
adc
imul
sti
sub
fistl
ffree
aaa
jnp
ss
push
sbb
scas
jb
call
cmp
mov
push
int3
ljmp
shr
cmp
jb
loope
dec
push
iret
fucomp
mov
mov
adc
or
lds
loopne
or
xchg
xchg
dec
mov
pop
add
daa
add
int3
cmpsb
jge
int
xchg
out
fistpll
loopne
xchg
ljmp
stos
mov
mov
adc
or
negl
sarl
sub
pop
aaa
clc
mov
out
das
xchg
mov
jae
sub
aas
jecxz
mov
in
push
loopne
std
fdivrl
sbb
sbb
fistl
fstpl
cmp
popf
fwait
ss
cld
cmc
pushf
mov
shlb
scas
push
dec
or
pop
icebp
cwtl
and
leave
out
lea
xorb
cmpsb
mov
cli
sbbl
sbb
mov
stos
or
rcll
into
vcvtsd2si
mov
jp
mov
ds
enter
mov
and
aad
cs
mov
pop
lcall
dec
inc
out
sub
sbb
shll
xor
jg
test
ret
jp,pn
push
fmul
jb
pusha
fdivrs
mov
out
xor
sahf
cld
xor
adc
pusha
fwait
cli
call
pop
jo
jge
div
cmp
sub
and
mov
or
inc
or
jle
mov
pop
push
push
sahf
pop
in
out
enter
imul
dec
loop
ds
push
dec
push
mov
or
lret
cltd
lods
adc
pop
xor
dec
jmp
mov
testb
scas
ss
lcall
xchg
daa
test
and
add
mov
cltd
mov
out
mov
in
jae
rcr
out
add
insl
lods
fistpl
jno
ljmp
dec
shll
push
adc
jmp
and
loopne
call
imul
mov
xchg
or
cmp
and
pop
push
xchg
pushf
scas
addr16
lea
fs
fstps
mov
out
mov
xor
idiv
es
lret
movsl
dec
add
jbe
pushf
enter
pop
jecxz
ljmp
int
mov
fidivrs
popf
out
xchg
mov
pop
in
dec
mov
nop
cmp
jbe
test
xor
mov
fidivrl
rclb
clc
in
aaa
mov
adc
add
push
mov
movsb
data16
xorl
jo
cmp
pop
adc
popf
jbe
aad
jmp
jp
inc
scas
cmc
outsb
mulps
sti
pop
dec
ljmp
in
xchg
lods
or
ljmp
mov
sub
sbb
mov
aam
xor
call
fidivl
test
cmp
dec
add
xor
pop
cmp
cmp
mov
mov
jp
jae
push
mov
inc
cmp
jns
sub
popf
cli
push
push
daa
pop
cli
fisubrl
cmp
mov
das
sbb
jo
inc
stos
xchg
sbb
jne
pop
fbld
inc
cmpl
push
push
icebp
nop
ret
inc
ss
inc
outsl
pop
push
loopne
mov
adc
jae
decl
mov
test
outsl
mov
test
stos
inc
push
xchg
xchg
add
xlat
cld
test
roll
mov
test
push
in
dec
xchg
das
test
pusha
nopl
mov
mov
rorb
cmp
xchg
inc
divb
xchg
pop
scas
xor
insb
scas
pop
negb
mov
push
mov
fdivrs
jae
sbb
fisttpll
filds
es
mov
loope
xor
mulb
fidivrl
mov
mov
sub
movsb
cmc
add
lahf
imul
sbb
jmp
push
cmp
push
mov
push
fadds
and
xchg
daa
hlt
shl
pop
and
ret
jno
jle
ret
xchg
in
pop
dec
cmpsb
test
lds
loope
cmp
fsubl
hlt
and
mov
mov
std
dec
test
mov
shl
cs
xchg
mov
mov
adc
stos
jnp
inc
pop
cmp
pop
push
mov
cmpsl
filds
sbb
dec
mov
mov
pop
cmp
repnz
sbb
jecxz
aam
cmc
mov
jo
into
test
adc
adc
sub
test
out
push
popa
xor
jge
push
mov
outsl
jne
das
fstp
inc
int3
je
sahf
xor
rcll
jae
out
fs
adc
rorl
xor
fisttps
stc
daa
ret
push
dec
inc
dec
nop
cmpsb
dec
xchg
imul
cltd
inc
xchg
push
loop
xchg
movsl
inc
hlt
mov
push
dec
mov
punpcklbw
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
jmp
dec
inc
aad
push
pop
movsl
sbb
les
mov
xlat
push
push
inc
lret
pop
push
mov
dec
xchg
xor
cmp
push
push
mov
inc
insl
cli
daa
pop
xchg
xlat
mov
scas
popa
and
jne
cmp
test
mov
dec
div
lret
popa
mov
mov
insl
dec
gs
push
jae
xorb
xor
dec
push
insb
xor
sbbl
inc
xchg
pop
mov
jno
rcrb
inc
cwtl
in
call
adc
dec
sbb
addl
stos
aas
or
mov
push
xchg
jmp
std
mov
inc
cmpb
jle
xchg
mov
and
pop
mov
adc
loop
cmp
and
push
repnz
in
cmpsb
push
imul
mov
lcall
mov
and
std
aas
xlat
mov
je
mov
cmpsb
sbb
cli
push
dec
test
cmpsb
adc
arpl
add
inc
push
adc
sti
push
add
repnz
mov
sub
mov
jne
sbb
inc
into
ficomps
rorb
scas
push
sbb
sbb
test
nop
xchg
mov
sub
mov
test
inc
jecxz
ja
add
sti
test
cmp
rcrb
xchg
dec
mov
movsb
or
sbb
pop
xchg
push
mov
rcll
pushf
in
popw
jnp
push
shl
and
push
dec
jne
sub
dec
cmp
add
xchg
pop
jae
jno,pt
sbb
sub
and
pop
into
xor
xchg
stc
lea
mov
mov
pop
cli
movsl
cmp
mov
mov
push
mov
rcll
pop
mulb
stos
cmp
rcr
jae
push
mov
inc
movsl
fdivl
test
cli
cmp
mov
cwtl
fcomps
add
mov
push
insl
jb
mov
xor
mov
mov
pusha
push
sahf
and
mov
lcall
insb
xchg
cwtl
xchg
mov
lods
mov
out
add
fldl
add
je
lods
adcl
pop
cmp
mov
or
jmp
mov
mov
mov
pop
fisttps
orb
cmp
js
sbb
mov
es
movsb
ljmp
mov
mov
mov
inc
jae
lods
test
mov
fnstsw
and
inc
sbb
push
push
push
shlb
mov
test
mov
pusha
mov
fucomp
add
subl
ss
in
push
jnp
mov
repz
out
fnstcw
leave
cmp
lea
push
cli
dec
jl
push
mov
leave
adc
movsl
lcall
pop
adc
pop
sub
sub
ror
ret
lret
lock
jb
loopne
cld
in
mov
sub
leave
xchg
pop
shll
adc
fbld
dec
cwtl
pop
sarl
insl
jmp
pop
add
mov
pop
mov
dec
in
inc
lret
jbe
idivb
out
outsb
mov
adc
inc
les
mov
ja
mov
popa
mov
push
jl
nop
orb
std
fwait
and
pop
nop
jle
mov
mov
test
call
sub
js
iret
cwtl
sti
or
adc
sbb
jmp
in
jge
and
dec
adc
aam
jae
stos
lds
adc
mov
pop
jecxz
mov
cmc
call
xlat
mov
and
sub
ja
jg
add
iret
gs
pop
jecxz
push
lock
or
bound
fsubl
add
mov
lcall
xchg
aas
aas
cmpsl
pop
mov
push
shlb
sub
ss
mov
jmp
fisubl
pop
sbb
test
imulb
mov
xchg
jne
add
jo
rcrb
inc
adc
xchg
clc
subb
jmp
ljmp
push
sti
push
aad
jmp
xchg
cltd
pop
adc
mov
cli
ja
push
add
insb
push
imul
push
test
inc
and
repnz
sbb
adc
jno
stos
dec
xor
add
test
and
jns
jo
or
xchg
cmp
pshufw
cmp
mov
out
aaa
inc
loopne
daa
movsl
dec
xor
sbb
arpl
sub
out
sbb
gs
dec
fidivl
jl
lods
jno
adc
sub
cs
jne
and
cmp
lods
stc
pop
repnz
pop
mov
pop
adcb
jg
push
push
test
inc
adc
in
stos
push
jp
lds
jle
push
outsb
mov
lods
dec
pop
cmp
or
shrb
aaa
xor
pop
mov
cmp
jg
notl
pop
jmp
ja
das
sbb
notl
and
push
je
int
mov
das
nop
outsl
mov
inc
cmc
ret
cltd
add
xchg
sbb
sti
inc
jecxz
adc
pop
mov
mov
mov
inc
xchg
int
jl
stc
push
mov
add
mov
ljmp
jg
daa
mov
add
cmp
sub
fld
testb
cmpsl
gs
rclb
popf
je
cmp
jg
xor
out
and
push
lret
and
inc
aad
inc
or
sbb
jge
sbb
mov
aaa
and
add
jp
arpl
xchg
jmp
call
cmp
dec
mov
std
sbb
mov
out
mov
pushf
pusha
and
jp
sub
mov
aas
daa
es
sub
pop
adc
callw
sbb
add
adcb
sub
xchg
xorl
aad
cwtl
leave
jne
cmp
subl
call
mov
cmc
test
mov
xchg
pop
into
ret
push
inc
xor
push
add
sbb
fmuls
cmpsb
mov
or
sbb
mov
mov
pop
clc
inc
push
inc
inc
lods
dec
data16
dec
pop
jne
push
test
mov
out
arpl
push
jo
imul
jl
ficoml
out
fstl
pop
nop
insl
stos
and
and
cld
xchg
xor
dec
aad
or
push
dec
mov
testl
xor
jns
insb
push
bound
sbb
cmp
or
lock
jmp
adc
ss
mov
jne
mov
in
mov
iret
add
insl
add
and
scas
jg
pop
inc
cmp
test
sbb
shrb
movaps
push
mov
cmpsb
unpcklps
fistpl
or
jbe
in
sub
mov
adc
outsl
repz
xor
pop
pop
in
and
icebp
mov
xor
or
or
jnp
daa
adc
sub
jl
hlt
cmp
out
adc
mov
lods
push
js
xchg
inc
jecxz
daa
loop
xor
test
lds
sub
push
test
mov
cmc
and
call
jnp
push
add
scas
out
or
push
jg
mov
or
and
mov
dec
mov
add
cmp
loope
data16
jae
lds
rolb
mov
aas
lods
syscall
or
inc
pop
repz
inc
adcb
jl
insl
inc
add
adc
loop
push
inc
pop
push
leave
insl
mov
int
adc
inc
les
cmp
cltd
rorb
jb
outsb
adc
filds
mov
jmp
lret
sbb
fs
fdivp
fs
ret
inc
add
adc
insl
add
aam
sbb
jge
push
into
jo
andb
cmpsl
aam
xchg
mov
adc
xchg
out
inc
inc
out
pop
ds
jb
cmp
jo
aas
sbb
jo
fisubl
int
mov
fsubs
out
fldenv
mov
sub
movsl
push
icebp
cmp
iret
jg
dec
xor
mov
mov
cld
je
lret
and
pop
lds
fldenv
pop
inc
sahf
fldl
fnstcw
mov
mov
sub
insb
test
xor
in
out
or
add
add
out
out
adc
icebp
leave
rclb
jp
push
push
mull
mov
xor
popa
sti
xor
mov
nop
sarl
sbbb
mov
aam
adc
lret
pop
dec
in
divl
cmp
cmp
pushf
jecxz
loop
push
lret
repz
cltd
inc
fwait
ljmp
xor
test
dec
mov
lahf
data16
imul
push
add
jno
xor
imul
fidivl
dec
movsb
and
arpl
mov
cs
mov
jp
lods
xor
mov
rorl
ljmp
sub
ja
lds
sub
in
fs
ja
add
push
add
testw
sbb
push
mov
mov
testl
repnz
mov
xor
aad
cltd
mov
inc
mov
or
stos
xchg
fiadds
lcall
loop
pop
cmp
testb
fildll
mov
imul
xchg
sbb
pop
and
bound
bnd
pop
lea
xor
sbbb
fwait
addr16
sbb
call
jmp
jne
sub
sbb
push
xchg
and
xor
int3
inc
and
pop
in
jecxz
fcomps
lods
movsl
dec
psrlq
xchg
dec
repz
jb
xchg
push
imul
inc
jmp
adc
jae
fildll
sub
cmp
sbb
aas
add
int
push
mov
xchg
int3
out
mov
mov
sub
mov
rcrl
lret
xchg
sub
push
movsl
lods
or
arpl
js
push
je
dec
imul
shlb
bound
das
pop
testb
mov
mov
sti
pop
fmul
mov
inc
jecxz
dec
push
mov
scas
popa
lods
mov
xchg
popf
push
jno
push
cmp
scas
ret
cmc
cmp
dec
lea
mov
or
xchg
fcoml
in
ja
inc
dec
clc
jge
mov
sbb
fdivrp
imul
pushf
pop
lret
push
push
xor
and
cmc
pop
in
sub
cltd
xchg
cmp
pop
lods
add
inc
shlb
and
push
mov
fwait
pop
push
and
lock
push
movsb
inc
mov
mov
sahf
mulb
mov
pusha
mov
cmpsb
jp
jne
mov
pop
add
mov
js
jmp
cvtdq2ps
imul
fisubs
sbb
xchg
pop
xor
iret
aaa
fistl
and
lods
cmp
sbb
add
fs
dec
add
stos
mov
test
cmp
sub
ss
xchg
in
add
and
mov
xchg
lea
in
addr16
xchg
cmp
add
xchg
jo
jp
je
jo
add
out
outsl
and
rolb
sbb
test
and
mov
add
mov
test
xor
gs
sbb
insb
aam
push
aaa
pop
das
mov
movsl
dec
hlt
sbb
mov
dec
dec
xchg
hlt
xchg
xor
cmp
aaa
mov
insb
mov
hlt
scas
sub
jmp
decl
mov
add
scas
jno
cmp
movsl
repnz
cmp
push
mov
jp
lcall
pop
addl
lret
xchg
jge
add
ljmp
add
push
xor
imul
xor
imul
cmp
add
adc
lahf
insl
in
dec
cmpsl
je
out
cmp
hlt
gs
mov
shrl
xor
cwtl
cld
int3
scas
test
inc
and
add
or
and
sub
ss
mov
insb
push
or
push
sub
mov
fidivrl
mov
or
iret
loop
mov
sub
out
in
pop
es
cmp
insb
jmp
loop
mov
jle
xor
adc
addb
push
ror
jno
add
gs
pop
dec
xorb
das
out
divb
mov
dec
jb
cmp
lds
sub
repz
mov
cwtl
jl
in
popf
jmp
loopne
jp
dec
xor
hlt
rcrb
pop
jg
adc
shrb
add
shr
lret
ss
mov
push
fidivrs
or
dec
mov
push
ja
add
pusha
rorb
stos
xchg
jle
cltd
sbb
cmp
enter
cld
push
in
mov
mov
repz
call
pop
lods
jl
mov
bound
mov
or
xor
cmp
cwtl
xchg
jbe
xor
add
mov
mov
sbbb
rolb
xor
sti
sbb
xchg
adc
cld
push
call
movsb
outsl
jo
sbb
cmpsb
mov
jge
out
pop
out
xor
xor
xchg
inc
nop
pandn
rorl
jge
mov
and
shrl
pusha
lahf
rcll
clc
and
dec
das
push
cmpsl
andb
or
xor
or
push
ds
pop
rcrl
lahf
dec
add
jbe
sub
popf
xor
inc
mull
clc
leave
movsl
mov
aad
dec
jae
xor
jne
mov
jae
sarb
xchg
inc
dec
push
adc
int3
sbb
push
lcall
mov
pop
xor
cmp
mov
leave
mov
repz
je
stos
mov
ss
aad
jp
add
andb
hlt
xor
iret
xor
dec
movsl
push
cmp
aam
ss
repnz
inc
enter
xchg
loope
adc
inc
jnp
push
shll
arpl
adc
and
clc
mov
pop
push
adcl
aad
adc
shrl
js
imul
add
fwait
jl
int3
fsts
mov
sub
push
mov
adc
shrb
sub
xchg
xor
pop
sbb
dec
out
fisubrl
push
repnz
cs
imul
popa
inc
call
imul
sub
clc
aaa
leave
push
mov
jb
jo
fiadds
fnsave
inc
adc
mov
push
clc
repz
test
pop
or
icebp
sub
adc
call
or
sub
ret
or
pop
insl
imul
mov
xorb
test
mov
mov
ds
dec
xor
mov
hlt
push
dec
testl
mov
xor
cli
cmp
mov
fldenv
xchg
xchg
mov
jecxz
cmp
sbb
mov
push
loope
setge
imul
lods
or
mov
sub
sub
adc
aas
shlb
add
inc
xchg
sarl
adc
das
insl
xchg
fnstsw
cli
cli
arpl
aad
out
mov
jno
loope
lahf
mov
mov
mov
fnstcw
popa
adc
inc
sub
hlt
imul
sbb
in
repnz
insb
adc
dec
push
or
aad
push
in
push
int3
loopne
rclb
xchg
andl
cmp
jmp
sbb
in
or
lcall
pop
mov
mov
mov
xor
mov
add
pop
stos
cltd
aaa
sahf
jbe
loope
ficompl
push
fstl
pop
popa
mov
dec
ss
je
sub
xchg
lret
pop
mov
mov
sar
fnstenv
xchg
pop
divb
idivl
push
dec
xor
loopne
cli
sarb
bound
dec
hlt
mov
mov
fstl
jne
std
xchg
xor
shrl
inc
cmp
inc
cmpsl
mov
xchg
js
add
mov
lods
movsb
pop
gs
lock
sub
add
or
in
inc
jo
mov
ds
push
movd
or
sar
mov
lret
popaw
mov
cmp
fdivrl
es
addl
dec
sbb
data16
dec
dec
jno
arpl
aam
test
jne
inc
sbb
cmp
jl
pop
mov
lods
sahf
cmp
mov
addr16
stos
mov
push
sub
pop
sahf
js
inc
test
jmp
sbb
sti
xor
pop
fnstsw
or
imul
sarb
fstl
enter
push
mov
cmp
gs
cwtl
in
nop
lods
das
outsl
mov
iret
stos
addl
das
jp
aam
cmp
sbb
es
pop
ret
das
fmuls
pop
dec
in
sub
loope
fists
lcall
je
mov
xor
call
cld
push
mov
cli
outsl
rol
xor
mov
lock
and
inc
push
xchg
loopne
roll
or
lods
push
xor
xchg
push
dec
pop
lds
lcall
shll
imul
inc
mov
push
mov
aam
sub
lods
out
js
mov
les
out
fisubrl
sbb
mov
cmp
jle
loope
bound
pop
das
dec
xchg
out
or
aas
jle
cmp
into
dec
dec
mov
icebp
jns
sbb
sub
mov
push
movsb
jmp
jmp
cmp
orl
mov
icebp
jmp
mov
in
pop
mov
das
jae
cli
mov
hlt
cmp
daa
adc
aad
or
cltd
add
add
sub
mov
jmp
xor
cld
and
xlat
mov
mov
inc
lret
or
adc
lock
pop
xchg
mov
xor
out
dec
adc
adc
or
mov
mov
sti
in
shrl
xorb
cmc
lret
frstor
ret
test
lret
or
push
pop
stos
pop
ud0
ja
adc
imulb
sub
mov
into
push
dec
stos
adc
adc
leave
gs
rclb
pop
push
jno
jns
xchg
repnz
cmp
pop
or
pop
cwtl
mov
cmpsl
add
insb
insl
adc
cmpsl
push
xchg
pop
mov
mov
cmp
arpl
gs
cmp
add
loopne
lds
and
rcrl
ret
jge
xchg
test
pop
sbb
scas
fimuls
insl
sub
mov
les
sbb
loop
in
add
int
sti
rclb
lret
mov
out
sbb
cmp
dec
lds
out
test
jno
inc
mov
jge
dec
mov
xor
or
lahf
jno
sbb
arpl
repnz
pop
imul
sarl
dec
sbb
add
mov
and
popf
sub
loope
inc
xor
jne
pop
int3
fwait
lret
mov
rolb
push
repz
push
js
and
int3
mov
jns
xchg
add
push
es
add
dec
jge
push
stos
sub
sub
testb
xchg
scas
inc
insl
popa
add
in
mov
add
dec
insl
shlb
push
and
sahf
sbb
mov
xlat
fildll
les
and
mov
jle
mov
mov
add
pop
nop
cmp
movsb
mov
xchg
mov
test
cltd
pop
fimull
push
aad
cmp
mov
fisubl
and
pusha
jge
shr
lds
add
push
cwtl
popf
inc
sub
fcom
sbb
cmc
jmp
or
orl
and
daa
sub
push
jns
les
xchg
mov
mov
mov
and
roll
popf
fdivl
sub
adc
sbb
addb
xor
push
ss
add
cmpsb
mov
sbb
dec
je
xchg
xor
pop
mov
adc
imul
in
fstp
xor
sbbb
push
fstl
lret
jg
pop
or
jb
ljmp
cmp
mov
pushl
jae
mov
into
mov
mov
adcl
scas
push
lock
add
or
jmp
out
dec
data16
in
lahf
push
push
leave
pop
add
jbe
or
pushw
or
bound
or
mov
inc
and
xchg
mov
dec
xor
es
jg
add
pop
test
sti
jmp
pop
mov
dec
cld
xor
loop
sub
mov
push
dec
mov
xchg
add
das
movsl
and
repnz
xchg
iret
xor
xchg
mov
inc
out
sub
or
call
pop
mov
outsl
add
mov
arpl
jl
fstpt
cmpsl
mull
inc
sbb
cmp
leave
mov
or
fsts
out
push
mov
ficompl
hlt
ret
das
inc
into
push
mov
sbb
in
into
loopne
jmp
out
cmp
xchg
cmp
es
inc
or
scas
out
mov
sub
enter
and
push
add
cmp
decl
mov
cmp
inc
push
mov
add
dec
cmp
ret
inc
jnp
lock
cmpsb
les
lret
adc
cmp
ret
push
arpl
or
pop
int3
pop
fwait
shl
retw
cmpsl
inc
push
inc
and
jecxz
mov
incb
scas
imul
and
cmp
jmp
jg
js
dec
push
dec
push
cmp
push
sbb
xor
stc
cmpsl
and
add
push
js
cs
lcall
and
arpl
push
jecxz
jecxz
xchg
adc
jmp
push
cli
in
fwait
out
dec
xor
adc
push
mov
loop
pop
mov
xor
push
dec
sbb
insb
shlb
outsl
jno
mov
pop
jge
stos
pop
add
sahf
test
xchg
cwtl
hlt
cmpsb
sar
stos
mov
ljmp
rol
cmc
sub
mov
pusha
ret
and
xchg
and
ja
cmp
pushf
mov
movb
leave
test
nop
lock
dec
or
push
inc
mov
mov
lcall
je
imul
clc
scas
inc
xor
aaa
add
xor
add
cmc
sub
sub
pop
cltd
add
jb
xchg
xor
out
cli
sub
sbb
repz
daa
aas
es
jle
cs
bound
mov
movsb
iret
mov
push
ret
nop
mov
clc
int3
sub
scas
add
jbe
xlat
push
push
scas
out
adc
cmc
jl
jno
pop
dec
fildl
cmpsb
or
mov
lods
inc
shrl
test
inc
mov
fadds
xlat
and
mov
mov
push
sbb
xchg
add
movsb
jns
aas
loope
mov
push
or
fwait
stos
fsubrs
mov
sbb
add
adcl
addr16
push
or
xlat
sbb
sbb
xchg
jnp
and
clc
rolb
and
mov
sbb
cmpb
dec
inc
cwtl
lret
gs
sub
mov
xchg
inc
daa
ret
cmp
jnp
mov
hlt
mov
dec
lods
daa
jb
adc
xchg
mov
fs
dec
mov
pop
loope
mov
mov
push
pop
sahf
mov
es
pop
aaa
idivl
cmp
repz
inc
call
jl
cmp
pop
lods
icebp
fwait
jbe
mov
fistps
imul
mov
into
cli
xchg
test
jle
sarl
push
pop
lock
mov
mov
addr16
add
cmp
insl
cld
aaa
mov
stos
shrb
stc
ret
lret
inc
dec
aam
mov
xchg
rol
adc
mov
or
sbb
test
rcrb
mov
dec
cmp
add
mov
test
xor
bswap
and
movsl
or
adc
inc
imul
aam
mov
mov
jl
data16
in
imul
pop
lods
xchg
xchg
hlt
cmpsl
mov
xor
ficompl
int3
lock
sub
sub
and
ljmp
inc
push
mov
mov
ret
ljmp
push
pop
cmc
add
dec
dec
push
aad
cmp
mov
pop
nop
sbb
sbb
icebp
out
popa
dec
ja
lcall
hlt
push
fsubrl
sub
cs
xchg
xchg
sub
in
jns
cmp
push
fisubs
jp
or
mov
dec
jo
iret
push
and
cld
mov
xorb
add
adc
xor
jmp
filds
fdivs
jg
cs
dec
push
shrb
subl
add
jge
sbb
mov
sub
loopne
jle
jno
lahf
inc
jbe
inc
dec
dec
push
lea
jecxz
sub
dec
nop
mov
xlat
cwtl
movsb
and
loope
sbb
fimull
jp
pop
insl
leave
or
and
dec
out
xchg
in
push
mov
andb
pusha
outsl
push
push
jmp
das
cmp
fisubl
hlt
xor
add
jl
cmp
inc
mov
out
pusha
lods
mov
mov
or
out
xor
iret
das
sub
inc
js
mov
pusha
push
push
out
cmpsb
jno
ret
pop
out
xor
popl
notl
lock
pop
inc
ljmp
out
add
adc
ret
push
lods
sarb
ja
mov
mov
cwtl
leave
idivb
xchg
jecxz
xchg
fstpl
and
push
mov
inc
lcall
jb
inc
pushf
mov
mov
push
xchg
xor
xchg
jno
push
int
insb
test
das
push
and
push
mov
cli
in
pop
lret
add
mov
rcl
jne
lea
pop
pop
sbb
imulb
scas
push
xchg
mov
xor
iret
addl
add
jnp
sub
fstps
sbb
adc
cmpsb
dec
test
push
mov
shr
mov
nop
mov
push
push
pusha
mov
mov
cs
clc
fcomi
mov
sbb
fwait
xor
loope
insb
dec
stos
sahf
sub
sub
xor
dec
inc
xchg
sahf
jg
in
mov
adc
push
dec
iret
and
leave
add
cmpsb
popf
add
mov
stc
add
jg
lret
shl
sub
rclb
test
sub
adc
ja
loope
ror
js
divl
dec
aad
push
int3
xor
test
in
repz
cmp
push
imul
jge
enter
aas
jmp
mov
in
adc
loope
and
lahf
pop
bound
pop
test
and
popa
imulb
mov
sbb
je
sbb
cli
das
jecxz
jne
and
jl
mov
lock
ficompl
push
push
pop
in
daa
mov
fisttps
shl
fcompl
jae
jno
aaa
xchg
insl
pop
push
and
out
stos
pop
out
fistl
adc
sbb
imul
fstps
repnz
xchg
arpl
add
jecxz
adc
xor
je
pop
xorb
sbb
cwtl
cmpsb
rorl
shlb
xchg
push
inc
fiaddl
fistpl
mov
mov
std
sub
iret
lock
mov
xchg
xchg
inc
inc
inc
filds
jl
popa
mov
push
and
out
adc
or
dec
sbb
add
xor
movsl
push
test
xchg
mov
addr16
mov
int3
push
push
andb
das
sbb
enter
add
lret
stc
lods
pushl
sbbb
data16
sahf
dec
fcmove
push
xchg
pushf
bound
out
xor
mov
outsl
fcoms
sub
and
sub
push
and
aad
inc
add
add
nop
stos
cmp
and
cmp
add
lock
pop
sahf
cmp
jecxz
loopne
ss
dec
sahf
shlb
xor
jae
adc
es
insl
xchg
mov
jecxz
pop
subl
pop
mov
addr16
cmc
daa
lods
insb
test
adc
cltd
jae
outsb
ljmp
add
inc
push
pusha
mov
pop
lds
add
sub
xchg
mov
lods
aas
inc
inc
mov
daa
mov
inc
push
xor
stc
jp
pop
push
xor
mov
imul
mull
iret
test
fidivs
scas
dec
adc
adc
xor
dec
sbb
enter
push
push
add
add
imul
aaa
mov
dec
push
lock
clc
xchg
inc
jmp
inc
or
lea
test
dec
jg
test
ss
or
int3
mov
shrl
push
in
lock
cmpl
and
add
rorl
test
loopne
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
shl
mov
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
jmp
cli
shll
mov
xchg
mov
loopne
ret
push
sub
push
push
arpl
mov
and
add
lcall
push
out
clc
push
icebp
test
shlb
aaa
stos
ds
mov
dec
or
push
addr16
sti
sub
out
inc
fwait
mov
mov
jmp
test
push
rorb
addr16
cmp
stc
ss
cmp
mov
add
aam
jno
cmp
xlat
pop
jnp
decl
js
test
cmp
cmp
fildl
mov
sub
adc
aaa
mov
stos
daa
jmp
mov
leave
das
rclb
push
jl
jp
outsb
sbb
adc
add
and
add
sub
dec
mov
aaa
push
inc
fimull
jg
cmc
mov
addl
inc
enter
dec
movsb
adc
cmp
aam
sub
imul
fs
adc
pusha
mov
mov
or
xor
pushf
outsb
test
loop
pop
push
out
sbb
mov
cmc
mov
adc
sbb
adc
mov
cmpsb
out
dec
push
xor
jbe
add
mov
in
and
mov
mov
add
mov
in
jecxz
loopne
xor
cmpb
call
enter
cmp
icebp
fs
fildl
push
inc
xchg
outsl
jb
fwait
movsl
cmc
fcompl
aad
jns
pop
mov
mov
or
xchg
outsl
inc
inc
or
mov
fldt
cmpsl
jmp
out
lock
shll
repnz
lahf
repnz
xchg
std
jp
cmp
aam
sub
push
sub
xor
mov
mov
fs
jmp
xor
push
dec
inc
pusha
in
das
pop
rcrl
sub
lret
pop
dec
iret
test
outsl
jbe
repnz
and
mov
sbb
push
cltd
xlat
inc
neg
dec
out
stos
rorb
adc
sar
or
sub
shrl
sbb
inc
cmp
dec
imul
fs
je
xlat
lret
in
hlt
fimull
jnp
js
call
mov
ret
ret
add
test
add
data16
sub
imulb
xchg
fsubrs
enter
and
mov
sub
mov
stos
xchg
jge
inc
adc
pop
mov
movsb
jns
mov
cmp
dec
testb
lock
inc
in
rcrb
jbe
pop
mov
mov
xchg
push
sti
ret
jns
mov
aam
dec
sbb
in
jnp
add
in
out
test
call
jnp
inc
sti
call
jmp
xchg
push
and
outsb
mov
mov
mov
sub
mov
call
push
mov
xor
xor
or
in
mov
fsubl
in
xor
insl
pop
insb
jp
xor
mov
mov
out
or
adc
cmp
inc
push
xchg
and
aad
jecxz
lods
or
push
or
aas
into
cmp
push
xchg
push
daa
fcomp
sar
shll
imul
ss
lods
into
int3
test
mov
ret
out
jo
mov
sahf
rol
sub
push
in
mov
stc
mov
mov
mov
push
mov
xor
jno
pop
insb
or
xor
xchg
cmpsl
xchg
push
scas
lds
or
cmp
xor
cmpsb
stc
add
sub
xchg
cli
inc
cmp
jmp
inc
cmp
inc
adc
cmpsl
inc
loopne
scas
mull
mov
dec
mov
jo
addl
fsubl
and
cli
nop
mov
gs
xor
jns,pn
bswap
mov
popf
icebp
xchg
daa
int
in
adc
lret
bswap
jg
mov
and
or
les
out
aaa
add
pop
popf
in
or
sub
or
call
pusha
inc
push
mov
push
push
add
aas
test
cwtl
test
int3
movhps
inc
adc
adc
out
push
add
sar
enter
je
mov
leave
jle
in
xor
cld
mov
sub
aad
or
push
daa
ja
daa
into
mov
jmp
push
xchg
or
clc
mov
pop
xor
fdivrp
mov
fisubl
inc
pusha
aad
iret
cmp
jae
or
push
xchg
adc
sbb
push
push
dec
mov
mov
or
aad
inc
out
dec
push
push
mov
jae
popf
sbb
pop
jp
loope
sbb
sbb
jecxz
in
popa
pop
jns
xchg
or
cmpsl
mov
arpl
aas
or
insb
or
jno
fwait
sbb
xor
loope
or
lret
mov
xor
inc
jecxz
aam
xchg
or
jge
mov
jg,pt
mov
rcrb
test
aam
mov
mov
cmp
and
gs
xor
push
in
and
mov
cmpsb
mov
jl
mov
testl
cmp
xchg
sahf
test
stc
sbb
xchg
lret
inc
pop
add
push
int
lret
cmc
stos
aaa
fbld
in
jmp
fisubl
ret
or
out
insb
pop
mov
push
mov
sub
jbe
out
lcall
mov
adc
je
imul
add
or
adc
rcll
sub
and
daa
and
shll
jmp
cmp
xchg
out
pop
jae
leave
cmp
fnstsw
jne
into
mov
pop
jno
sub
or
inc
ret
jecxz
movl
xor
push
jne
jbe
xchg
xchg
jae
inc
es
jb
stos
in
in
ja
insl
sub
jo
sub
lea
inc
jns
xor
mov
dec
inc
pop
push
mov
cmc
pushf
repnz
test
xchg
scas
fisubrl
mov
popa
jno
insl
in
push
scas
mov
frstpm(287
lret
adc
push
rorb
loopne
push
test
xchg
jg
bound
aaa
inc
call
push
loopne
push
lock
loope
jp
jp
daa
or
notl
addb
inc
mov
jno
movb
push
rorb
cmp
sbb
push
or
xchg
aam
mov
xor
push
fs
jl
push
aas
push
mov
insb
dec
ret
xchg
cltd
pop
mov
sub
cmp
or
and
adc
aad
mov
mov
mov
fldl
lock
push
sub
pop
je
rorb
or
rclb
inc
jbe
aas
out
dec
sti
call
icebp
pop
orl
or
mov
push
or
dec
sbb
xor
pop
fsts
insb
adc
cmp
xchg
adc
lock
cmp
mov
jns
sub
dec
or
adc
xcrypt-cfb
cmpsl
cmpsl
fimull
or
mov
pop
mov
sbb
xor
xchg
push
sub
inc
xchg
icebp
mov
mov
lds
xor
pop
lock
call
and
mov
sqrtps
cmp
add
mov
rcr
xchg
and
mov
add
adc
fcomp
xlat
adc
popf
les
jns
xchg
sbbl
pop
fidivs
mov
rcll
sbb
out
xor
sahf
dec
ja
test
add
sub
dec
add
hlt
push
push
cwtl
sbb
aaa
sti
jne
cmp
out
cmpsb
cmp
add
pop
sub
dec
xor
push
inc
push
lods
lods
xor
push
fs
les
xlat
pop
or
dec
aaa
inc
sahf
test
neg
scas
test
jle
mov
addb
cmp
test
jae
out
jle
pusha
lock
sbb
xor
pop
cmp
adc
mov
and
pop
mov
std
pusha
shlb
jmp
jo
rcrb
jp
inc
jns
xor
ja,pt
push
dec
pop
or
aaa
cld
pop
jae
adc
scas
and
lcall
popa
ss
add
lahf
adc
fwait
arpl
aas
ljmp
xchg
pop
pusha
sub
scas
dec
or
or
in
dec
fcoms
sbb
inc
ljmp
jnp
add
sub
fcoml
xchg
movsb
cmp
xorl
mov
rep
addl
dec
cltd
das
loope
int3
push
mov
xor
add
mov
rol
sti
aad
das
and
sbb
pop
dec
ljmp
lods
sub
xor
push
in
xor
hlt
scas
aam
dec
lds
nop
add
pop
call
in
call
out
pop
and
xor
hlt
movsb
nop
loopne
cltd
cmp
rclb
stos
dec
out
jb
scas
test
imul
xor
push
xchg
imul
sub
dec
inc
cmpsb
adc
fstps
xchg
les
xchg
push
jmp
sti
popa
loopne
xchg
sbb
mov
mov
mov
data16
xchg
mov
pop
mov
mov
mov
xchg
icebp
movsb
mov
not
loop
rcl
testl
arpl
ja
jbe
xchg
repnz
pusha
jmp
mov
inc
push
add
notl
mov
into
bound
mov
sbb
and
mov
sub
in
sbb
push
jne
xor
je
pop
inc
inc
iret
ss
decb
add
lret
ficoml
es
fnsave
cmp
jecxz
push
rclb
call
sub
add
sub
imul
daa
xchg
push
fadd
mov
adc
lods
sbb
cmc
mov
push
xchg
hlt
test
out
push
push
les
sub
bound
pop
or
adc
or
push
orl
mov
mov
mov
out
pushl
in
loopne
xor
subl
cs
and
call
jge
iret
dec
roll
lock
or
jno
mov
and
pop
fadd
inc
call
jecxz
popa
in
sbb
lea
negb
sub
in
inc
add
push
mov
loopne
adc
and
sbb
fcoml
mov
js
adc
push
fsubp
xor
mov
or
ds
ret
jo
push
xchg
jmp
cs
add
out
inc
iret
pop
std
inc
jae
xchg
inc
lcall
pop
and
ds
aas
xchg
pop
cld
sbb
add
psubsb
cmc
nop
push
lcall
sbbl
rcrb
imul
rorb
in
jge
clc
fld
addr16
fucom
fwait
adc
arpl
inc
mov
outsl
fildl
mov
inc
sbbl
xlat
push
in
repz
outsb
inc
jo
jne
jne
jecxz
cld
in
loopne
xor
shrb
cmpsl
stos
push
lret
hlt
imul
popf
xlat
aad
cmp
mov
mov
clc
movsb
loopne
lcall
or
jl
sub
sbb
cmpsb
ljmp
int3
ja
cltd
and
in
es
mov
cld
cmp
pop
cmpsl
not
inc
lret
popa
mov
jne
pushf
andl
pop
stos
push
leave
xor
inc
out
outsl
inc
inc
dec
lret
push
xor
dec
xchg
sahf
sbb
sbb
pop
shrb
js
loop
scas
cltd
and
popa
repnz
stc
lds
mov
inc
inc
push
cmp
shrl
add
fnstenv
outsb
adc
xchg
stos
or
lock
push
icebp
mov
or
mov
cmp
aaa
dec
push
cld
ret
adc
popa
xor
leavew
cltd
stc
mov
fwait
out
adc
mov
fimuls
in
jne
mov
mov
mov
call
mov
daa
aam
push
das
loopne
inc
jnp
xchg
mov
dec
push
xchg
sub
jno
movsb
xor
int
mov
mov
push
enter
out
and
xchg
sub
sub
xchg
xchg
pushf
icebp
leave
mov
mov
pop
mov
or
and
and
repnz
xor
ss
pop
cmp
jne
lea
jae
mov
and
jb
ficomps
fldcw
shlb
js
and
sub
cld
cmpsl
push
movsb
scas
cwtl
sbb
std
shrl
pop
inc
insb
cmp
push
inc
pusha
xchg
cmp
cmp
rol
sbb
sbb
sub
inc
and
push
inc
into
push
xchg
push
cmpsb
pop
pop
cmp
mov
loope
or
fisttpll
loop
add
mov
imul
das
lahf
dec
in
and
lret
inc
subl
mov
inc
push
hlt
ljmp
push
or
dec
nop
leave
and
and
in
dec
pop
push
jecxz
push
jecxz
pop
xor
ja
fsubrl
gs
rclb
shll
ds
test
lret
es
lahf
lcall
outsb
pop
adc
hlt
decb
aad
xchg
adc
add
enter
push
mov
mov
cmc
inc
out
das
imul
jo
jbe
sarb
xchg
addr16
pushf
daa
out
scas
rcrl
cmpl
imul
bound
xchg
push
mov
and
loopne
das
das
dec
cwtl
mov
movsl
jne
cmpsl
in
adc
or
popa
cmp
call
mov
int
out
ljmp
scas
popf
divb
ds
decl
inc
sbb
je
cmp
lcall
sbb
xorl
inc
mov
mov
insl
pop
dec
cmp
xor
cmpb
jecxz
cmp
xchg
push
adc
fs
daa
add
fisttpll
scas
push
dec
ret
popa
aam
je
fadds
xor
mov
xchg
in
pop
jmp
add
jge
inc
data16
push
addl
add
or
mov
stos
ret
or
fs
adc
in
pop
jno
fldl
add
fsub
stos
les
or
xchg
test
push
test
pop
inc
shl
mov
mov
add
cmp
add
movnti
clc
rorl
cmp
pop
mov
scas
lods
iret
sbb
shrl
ljmp
jecxz
mov
or
adc
gs
sub
stc
test
inc
mov
mov
adc
jo
dec
call
into
icebp
and
mov
test
add
jp
das
outsl
ret
js
fstpt
sbb
movl
jns
jae
movsb
out
pushf
int3
mov
mov
in
sbb
push
mov
loopne
out
cli
int3
push
jno
out
push
xor
cwtl
cmp
push
cmp
mov
adc
fs
dec
lret
ja
xor
pop
leave
jmp
xchg
jp
sub
mov
lods
imul
pop
inc
sbbl
lock
or
inc
adc
js
idivb
mov
jo
cmp
rcrl
push
mov
ret
lahf
jl
popa
and
and
jecxz
imul
bound
lods
dec
xor
mov
andb
jb
fstpl
pop
ret
cmp
sbb
jl
add
jle
dec
sub
fistl
les
pop
xchg
into
iret
scas
pusha
or
aaa
push
out
into
cli
sti
bound
mov
rolb
dec
jecxz
imul
nop
xor
cld
cs
int3
or
addl
fdivl
xor
inc
cmp
xchg
cmp
inc
out
in
cltd
nop
push
inc
push
lret
loope
mov
notb
lea
ja
mov
cmp
into
add
das
push
cmp
mov
stc
xor
xchg
enter
fdivs
push
sbb
jmp
xchg
outsb
mov
add
ja
add
lds
xor
push
imul
mov
push
pop
push
popf
cmp
add
decl
lret
lcall
repnz
mov
and
xor
iret
mov
int3
xlat
mov
mov
mov
jo
add
leave
cmp
push
repz
lea
cmpsb
mov
push
fwait
xchg
jnp
push
orl
mov
sub
dec
sub
xor
jp
jo
inc
xorb
push
push
xor
lcall
push
or
push
cmpsl
jmp
insb
in
js
jecxz
fucomi
add
and
addr16
cwtl
ss
add
jbe
movsb
movsb
ja
mov
popl
lret
gs
aas
mov
mov
insl
ret
adc
jo
dec
out
xchg
cli
ficomps
out
lea
push
jecxz
iret
int
add
inc
cmpsb
push
pop
int3
stos
lods
jle
jmp
stc
out
sbb
pushf
in
int3
xchg
out
add
xor
aam
add
shr
rcll
rcll
and
cmc
push
xor
pop
pop
inc
mov
sahf
push
shrb
and
out
pop
ror
push
enter
aas
fcom
ds
in
add
aam
adc
cmc
cmp
rolb
sbb
jmp
fildl
dec
test
test
loop
add
addr16
xchg
and
ret
movl
push
jns
arpl
jo
iret
or
ror
int3
pop
adc
jmp
cltd
les
pop
jb
ja
mov
adc
add
xor
cmp
ljmp
xchg
cmp
lcall
xchg
pop
daa
pushf
ds
cmp
inc
push
mov
popl
dec
push
sbb
mov
and
lahf
push
adc
shll
stos
mov
jp
orb
shl
jae
into
dec
stos
sub
lds
fiaddl
xchg
dec
xchg
add
ss
xor
adc
test
int
mov
pop
push
lods
mov
out
pop
mov
out
xor
cltd
add
jle
fisubs
mov
jp
inc
xchg
fistl
mov
inc
cmp
cmpsl
pop
subl
je
aaa
pusha
cmc
pop
inc
inc
mov
pop
jb
cmp
mov
or
rcr
xchg
push
fs
int
jnp
loopne
pop
cmc
jmp
bound
sbb
ret
loop
mov
lret
and
xorb
pop
imul
jg
add
add
jae
xor
loope
arpl
aaa
sub
in
nop
add
call
sub
mov
adc
jbe
jbe
das
icebp
inc
mov
xchg
divl
ds
mov
pushf
lahf
adc
leave
repnz
es
mov
loope
pushf
push
inc
dec
dec
jge
outsl
add
adc
dec
test
sti
mov
xlat
aas
imul
inc
sub
push
addb
jle
cmp
push
pop
js
bnd
imul
xchg
pushf
ja
pop
jecxz
mov
loop
pop
sub
adc
or
daa
shll
mov
out
fadds
sbb
mov
in
test
iret
xchg
xchg
inc
inc
popa
dec
jo
stos
inc
sti
dec
loopne
push
inc
mov
push
inc
nop
adc
mov
clc
repnz
incl
aaa
sti
dec
int
test
xor
lret
sub
xchg
pop
loope
imul
arpl
dec
ds
and
push
add
fstl
imul
aad
jmp
cmpsb
popa
jno
xor
les
jmp
mov
icebp
out
in
fs
jp
mov
dec
jne
inc
in
xchg
in
xchg
mov
push
fistpll
mov
mov
inc
aad
movsb
sub
rorl
or
scas
and
sub
or
mov
stc
xor
shlb
sbb
dec
or
shll
fdivrl
mov
dec
repnz
and
xlat
mov
imul
inc
lods
fsubl
mov
jno
ljmp
and
shrl
dec
jmp
out
lcall
dec
gs
pop
mov
jnp
leave
xchg
pop
sub
sub
adc
fisttps
out
into
js
out
adc
pop
adc
in
cwtl
insl
xor
stos
xchg
mov
mov
negl
dec
mov
movsb
dec
rcl
in
xchg
lahf
movsl
gs
ret
cmp
pop
cmp
insl
push
movsb
loope
push
das
sbb
sbb
dec
xchg
repz
scas
shl
jecxz
and
in
pushf
xchg
push
cltd
adc
mov
dec
ret
ja
sbb
ret
adc
mov
leave
push
mov
push
push
jl
xor
lcall
add
mov
cmc
push
test
add
xchg
mov
stc
loop
pop
out
test
sub
push
mov
aad
cmpb
sub
jle
sub
dec
fldl
daa
adc
sub
fists
jae
lds
sub
sbb
sbb
loop
shll
stos
or
fdivrp
addr16
and
or
mov
cmp
sti
ss
leave
jge
cld
cmc
push
jo
je
push
push
mov
in
or
daa
and
out
or
pop
stos
and
fdivrp
mov
das
roll
scas
ret
outsl
add
jo
std
dec
imul
mov
mov
bound
lahf
test
inc
movsl
not
popa
ss
fcmovu
xchg
je
loop
push
and
lods
rcrl
inc
xor
and
mov
mov
stc
xchg
fxch
mov
dec
fwait
pop
pushf
lods
jbe
cmp
fwait
or
call
mov
icebp
add
adc
es
gs
mov
outsb
stc
cmp
or
pop
cli
or
outsb
sub
jo
addr16
sbb
mov
adc
xor
loopne
cmpsb
fprem1
push
cs
call
adc
pop
les
mov
stos
les
dec
mov
cmc
mov
lods
das
fwait
addb
notb
ret
loop
push
jg
mov
add
or
test
adc
addr16
jne
icebp
stos
cs
aas
sub
push
adc
adc
mov
loopne
jbe
dec
hlt
imul
jle
in
xchg
data16
outsl
cmc
test
loopne
rorb
sub
push
xchg
push
jo
or
jp
sub
jo
cmp
mov
xor
inc
out
pop
dec
cmp
push
fs
imul
cwtl
fwait
xlat
out
ret
xchg
or
movsb
jge
pop
movsb
lret
sub
pop
test
push
cmpsl
and
cmc
sbb
adc
mov
testl
movsl
cld
jnp
cmpsb
push
mov
mov
leave
mov
rcrl
mov
or
into
xchg
ljmp
nop
sbb
inc
xchg
jecxz
mov
movsb
sahf
push
dec
sti
imul
jns
xor
mov
ret
rorl
outsl
mov
outsl
ja
cmc
nop
test
mov
arpl
xchg
mov
rolb
gs
test
cltd
ret
bnd
out
xor
xchg
fdivrs
mov
in
mov
mov
mov
sar
mov
and
inc
and
mov
xchg
xchg
jge
loopne
sbb
inc
sahf
insb
adc
filds
cs
incl
lcall
dec
or
mov
push
xlat
ss
pop
xlat
imul
test
test
jbe
add
or
lds
out
ja
roll
pusha
test
dec
in
in
pop
adc
jge
mov
cwtl
in
add
inc
jb
add
in
mov
cmp
sub
lahf
fldcw
sbb
jg
mov
pushf
mov
xor
int3
xchg
hlt
dec
jp
inc
addr16
lret
jne
mov
icebp
mov
jp
pop
mov
xchg
scas
mov
loop
jbe
dec
cmpsb
cmp
sbb
out
aas
mov
or
and
insb
cwtl
sti
or
mov
jecxz
jle
xchg
mov
clc
xor
add
xor
cltd
xorb
mov
loop
syscall
test
orl
in
sbb
aas
mov
mov
nop
test
cmc
addr16
cmc
shlb
add
ds
fcmovnb
stc
test
sub
stos
add
cmpsb
dec
push
mov
inc
cltd
add
mov
testb
ss
je
pop
cmp
stos
mov
filds
sub
or
sbb
push
movsb
jge
sahf
dec
icebp
leave
int3
or
aad
movsb
xorb
sub
imul
sbb
inc
xchg
in
fdivrs
repnz
enter
sarl
mov
pop
sarb
dec
xor
xchg
sbb
or
xor
mov
and
jb
int
push
fldl
lret
xlat
dec
cld
mov
outsl
sub
cwtl
jp
or
xchg
mov
sub
mov
cmp
lahf
jmp
mov
arpl
mov
sub
pop
mov
lock
xchg
mov
nop
and
mov
stc
jae
mov
xchg
inc
mov
adc
sub
andb
cs
cmpsb
and
dec
ret
and
rcr
fisubl
and
imul
das
jmp
cld
mov
mov
ret
lcall
into
mov
jbe
dec
rolb
insl
repz
dec
imul
scas
pop
and
fisttps
jae
je
mov
or
mov
jns
gs
fdivrp
sub
push
xchg
fdivs
cmp
enter
loop
mov
rcrl
pop
ret
gs
call
xlat
push
pop
fs
push
fidivl
xchg
jmp
xlat
cmp
adc
sbb
leave
call
xor
out
jg
fstl
shlb
stos
adc
movsl
push
xchg
ljmp
xor
rcrl
mov
rclb
mov
outsb
xchg
push
in
push
clc
and
mov
inc
sub
jle
nop
or
negl
xchg
mov
lcall
add
mov
fdiv
sbb
push
xor
and
shll
bound
hlt
mov
adc
loopne
pop
sbb
mov
das
movsb
iret
mov
push
lcall
int3
mov
shll
test
add
imul
add
xor
mov
jno
xchg
inc
outsb
fbld
outsl
mov
neg
sbb
into
inc
jmp
inc
jmp
mov
stos
int
ret
push
and
push
vhsubps
shl
push
es
dec
sub
jecxz
movsb
popaw
inc
xor
xchg
test
xchg
sbb
dec
jae
jmp
jle
push
dec
mov
hlt
lret
roll
jbe
jbe
add
cmp
jecxz
je
out
cs
gs
mov
xor
outsb
aam
push
pusha
fs
sarl
mov
mov
xchg
inc
jne
ret
test
push
pop
je
pop
fcomip
imul
stc
mov
adc
aad
jo
pop
test
fidivl
mov
or
cmp
outsb
sbb
ljmp
pop
sti
sub
push
mov
mov
outsb
xlat
inc
mov
out
cs
push
unpckhps
mov
sub
test
push
mov
gs
jb
mov
lret
sbb
xor
iret
inc
pushf
push
js
cmp
jbe
xlat
push
pop
roll
jecxz
inc
or
repnz
in
faddl
xor
mov
or
icebp
or
lcall
scas
movsb
xlat
adc
cmp
cmc
mov
xor
lods
add
mov
leave
mov
aam
mov
dec
pop
push
mov
jbe
push
sub
sub
mov
mov
pop
adc
xor
in
xrelease
nop
sbb
dec
mov
cmpsb
xor
fisttpll
lods
aad
in
xchg
pop
mov
out
fistpl
jge
mov
nop
jp
push
movsl
inc
push
sbb
outsl
xchg
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
mov
or
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
shr
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
jae
cmp
jae
shrd
movl
shr
ret
xorl
mov
xor
and
movl
shr
ret
xor
xor
ret
push
mov
sub
movl
cmpl
movzwl
mov
movl
jmp
mov
mov
je
pushl
pushl
pushl
push
push
pushl
call
not
or
and
xor
mov
mov
movl
cmpl
movl
mov
mov
mov
jmp
movl
mov
jg
pushl
call
orl
sbb
sub
sbb
adcl
mov
or
mov
movl
cmpl
mov
mov
mov
jmp
not
jb
pushl
pushl
call
adc
xor
or
xor
add
or
sbb
inc
addl
movl
dec
movl
decl
movl
movl
movzbl
or
movl
cmpl
movl
movl
jmp
mov
movl
jge
push
call
adc
mov
mov
sub
and
sbb
subl
mov
or
mov
mov
sbb
mov
mov
sub
mov
push
mov
movl
sbb
mov
andl
mov
xorl
push
orl
push
xorl
push
subl
push
addl
call
xor
mov
cmpl
mov
mov
mov
movzwl
jmp
movl
movl
jg
push
pushl
push
pushl
pushl
call
or
or
adc
addl
xor
add
adc
sbb
mov
xorl
xor
and
cmpl
mov
movl
jmp
movl
movl
jg
push
push
call
sbb
sbbl
sub
notl
xor
add
sbb
xor
xor
add
and
mov
mov
sub
or
and
or
mov
adcl
and
cmpl
mov
mov
mov
jmp
movl
jl
push
pushl
push
pushl
call
add
sbbl
and
or
mov
sub
sbb
movl
mov
or
movl
movl
movl
movl
mov
addl
mov
mov
mov
add
movl
push
adc
push
subl
and
and
push
andl
push
xorl
call
mov
mov
cmp
movl
ja
jb
cmp
jae
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
or
or
add
adc
xor
xor
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
jmp
loope
cwtl
cwtl
mov
push
test
inc
or
xchg
int
push
shll
loop
lock
out
outsl
les
rorl
add
sbb
gs
cwtl
mov
movsb
jae
fucomi
sub
push
shr
movsb
xor
mov
addl
outsl
cwtl
or
pop
fdivr
inc
in
ljmp
push
cmp
adc
mov
xchg
es
scas
pop
xlat
cmp
aad
sbb
dec
push
xorb
xchg
xchg
cmp
hlt
repz
in
xor
mov
pop
in
in
enter
mov
cmp
inc
xchg
sub
iret
cmp
jp
es
xchg
notb
divl
ljmp
add
adc
push
pop
js
push
cmp
into
lds
bound
or
dec
jmp
in
mov
push
mov
scas
fistl
aam
mov
popf
mov
cmp
add
adc
xor
je
or
stos
jns
inc
cmpsl
popa
jbe
outsb
aad
sbb
lahf
mov
icebp
pop
sub
fcomps
sbb
jb
add
xor
rclb
and
ja
xor
stos
sbb
cmp
pop
xchg
sbb
dec
jecxz
cmpb
add
cmp
fnsave
lds
push
or
bound
and
lahf
aaa
jae
dec
dec
dec
lods
mov
mov
and
lahf
mov
adc
pop
in
cwtl
fistl
faddl
sahf
test
movsb
add
push
adc
imull
fdivs
out
and
xchg
dec
sub
out
push
pusha
cmpl
dec
decb
jne
iret
mov
xchg
sub
fildll
scas
cmp
mov
xor
inc
es
and
pop
sbb
push
sub
xchg
or
in
push
insl
lods
jbe
hlt
cmp
fsubrl
mov
das
fldt
sbb
in
sbb
cmc
cli
outsb
stos
mov
movsb
imul
lcall
into
inc
pop
xchg
mov
ficoml
inc
in
arpl
mov
ds
sub
iret
fsubrs
mov
add
es
mov
test
scas
sbb
jo
xchg
mov
hlt
mov
mov
cmp
pop
sbb
adc
push
mov
iret
ljmp
or
insb
and
inc
ret
inc
ss
adc
or
ja
mov
xor
mov
outsb
dec
idivl
push
out
xor
ficoms
or
sbb
adc
adc
jb
inc
test
lds
loop
push
stos
push
xor
loopne
mov
leave
push
mov
call
into
ja
cmc
loop
jge
cmp
call
clc
rcr
lahf
sub
in
mov
daa
inc
add
pop
popf
xor
repz
shll
fisubl
sub
and
scas
scas
pop
sbb
insb
pop
or
mov
sbb
xchg
in
and
imul
or
cmp
sub
cli
pop
pushf
or
or
int3
fisttps
cwtl
arpl
sbb
cltd
jg
mov
xchg
dec
cwtl
xchg
ret
mov
mov
xor
jmp
adc
xchg
ret
lahf
add
fnsave
mov
mov
in
pushf
div
pop
xorb
push
jo
and
lock
pop
cmpsb
or
mov
dec
and
add
and
into
out
movsl
test
icebp
add
mov
add
jae
jmp
sub
out
pop
mov
mov
push
mov
adc
adc
or
xchg
or
sub
xor
das
cmp
xchg
cmp
jl
lret
inc
cld
cmp
xlat
adc
fsubr
lods
pusha
cmp
fcom
into
inc
or
xor
sbb
adc
inc
je
pop
mov
push
jno
outsl
aaa
cs
or
daa
inc
int
out
sbb
adc
dec
fidivrs
addr16
inc
cmp
leave
dec
inc
adc
shl
dec
fxch
shlb
lods
aaa
mov
icebp
and
aas
out
pop
les
fildll
loop
data16
mov
jg
or
mov
sub
scas
das
repnz
and
cmp
dec
mov
outsl
shll
inc
xor
cmp
inc
std
and
stc
lea
stos
test
push
shl
lock
mov
or
test
out
jns
popa
mov
jmp
cmpsl
scas
fildll
push
dec
ja
mov
mov
xchg
cmpsl
je
lods
movsb
addl
jge
movsl
std
in
scas
mov
enter
pop
pop
sub
mov
mov
les
out
mov
mov
xor
sarl
inc
or
jo
mov
or
sti
cmp
lret
mov
mov
sbb
rcl
dec
ss
or
nop
push
lea
push
shll
mov
dec
push
ficoms
mov
out
fnsetpm(287
into
int3
fstpl
inc
push
scas
cmp
int3
push
es
loop
mov
sub
fimull
lret
std
cwtl
push
mov
xor
dec
push
jl
inc
out
addr16
sub
and
lods
shll
sub
sahf
pop
inc
js
in
jecxz
pop
push
inc
sbb
mov
xchg
add
movsb
fdivrl
add
mov
lods
cmpsl
je
and
out
iret
jnp
jp
scas
dec
jnp
popf
cltd
sub
or
out
cwtl
mov
ja
scas
xor
push
out
dec
xchg
inc
xchg
mov
jnp
js
ja
jne
sbbb
add
ret
add
out
mov
adc
imul
pushf
mov
aam
fsub
pop
cmp
add
mov
inc
std
cmp
and
inc
test
sbb
add
sbb
sub
insb
rcrl
les
dec
ljmp
aad
ret
aad
movsl
cs
in
cmp
mov
shrl
adc
lret
xor
mov
je
add
sub
test
mov
dec
out
xor
ss
fisubrl
or
psubsb
lods
repnz
pop
cld
cmpsl
stos
lcall
and
pop
xorb
cmp
imul
dec
sbb
rorl
and
dec
jle
imul
xlat
daa
push
push
pop
push
sub
testb
pop
inc
dec
pop
inc
add
push
rclb
adc
bound
adc
repz
jno
jo
and
jae
test
mov
or
lahf
mov
cltd
cmp
push
mov
addr16
cmpsb
in
call
data16
adc
inc
nop
mov
mov
inc
or
and
popl
out
stos
lret
or
call
repz
cmp
push
inc
push
push
and
push
fistpl
daa
mov
and
mov
push
loop
add
and
mov
int
dec
xchg
mov
cmpsb
push
add
es
lock
add
inc
xor
cltd
cwtl
adc
or
xorl
sub
sub
int
xor
pushf
imul
pop
jne
stos
je
xchg
cmpsb
loope
std
pop
sub
add
into
cltd
cs
out
jle
cmp
cmp
jg
lret
xor
movsb
movl
dec
mov
sti
jecxz
pop
test
daa
xchg
das
loopne
iret
nop
outsb
addr16
popf
sbb
fistpll
ss
outsl
cmpl
inc
xchg
push
ret
cmpsb
inc
popaw
popa
jae
int3
xchg
addr16
mov
push
testl
push
dec
sti
lsl
add
xchg
push
mov
xor
sbb
push
inc
mov
or
sub
fucomip
inc
jbe
lea
shlb
mov
inc
test
inc
ss
mov
mov
idiv
in
mov
mov
inc
mov
mov
xchg
jl
leave
in
js
test
mov
mov
into
mov
inc
jb
cmc
lods
xchg
mov
xchg
arpl
pop
add
mov
idivl
int3
rorl
jge
jno
cmp
cltd
adc
xchg
adc
inc
aas
push
sub
pop
imul
jmp
xchg
inc
jb
pand
xor
test
xchg
int
rorb
xor
mov
in
ret
mov
insl
std
adc
fnsave
push
xor
in
sbb
pop
adc
mov
cmpsb
fisubl
mov
pop
call
andb
pushf
aaa
sbb
jae
xchg
push
fsubs
fcom
outsl
cmp
inc
or
out
int
dec
adc
out
xorl
insl
sub
sbb
pop
out
xor
or
testb
pop
call
mov
sarl
mov
popa
mov
into
push
xchg
adc
into
push
push
fcmovb
clc
xchg
pop
jae
pop
push
shrl
adc
lock
adc
fidivrs
loope
sub
sbb
decb
call
add
cs
mov
inc
push
inc
clc
inc
outsb
inc
test
and
push
mov
dec
cmp
test
icebp
add
int
fiadds
lods
das
inc
int3
enter
loopne
cwtl
lods
ds
push
mov
inc
pop
adc
adc
lock
shrb
cltd
scas
xchg
call
pop
stos
pop
insl
push
jmp
fistpl
ja
pop
jae
push
cmp
out
test
dec
mov
add
mov
loopne
xchg
xorb
mov
mov
add
inc
pop
lds
nop
call
rcrl
push
cwtl
insl
cmpl
mov
or
decb
jl
ljmp
ds
loope
fxch
es
sbb
aas
jne
pop
dec
jl
or
lock
inc
jg
ljmp
push
aam
adc
sub
jp
vmovhps
roll
lods
inc
ljmp
mov
test
in
add
pop
mov
lahf
lret
into
cmp
ss
cli
es
pop
xchg
jmp
dec
inc
lds
es
jb
jle
lock
cld
cmp
mov
push
ds
insl
mov
jo
lret
cltd
sbb
inc
mov
pop
mull
adcb
test
push
mov
sbbl
lods
cmpsb
sbb
inc
cmp
jl
imul
sbb
adc
pop
popa
andb
push
xor
jl
jae
jb
mov
nop
cmp
or
xchg
insb
filds
sbb
jmp
pop
sbb
sub
sbb
inc
inc
arpl
stos
add
ds
push
xor
fsubrp
pop
fisttpll
xlat
negl
xor
ljmp
or
int
add
adc
call
pop
ja
pop
lahf
pop
cmp
xchg
iret
and
jae
ljmp
xchg
sbb
mov
push
add
mov
imul
cmc
mov
dec
rclb
rcrb
aaa
xor
sub
andl
inc
cmp
rcll
out
adc
int
test
ds
xor
pusha
mov
sbbb
test
xchg
or
std
inc
push
fadd
ds
xchg
loopne
les
stc
scas
pusha
inc
cmpsb
cli
idivb
nop
sub
int
incb
push
insb
mov
das
push
adc
jnp
lahf
mov
xchg
neg
loopne
or
fdivs
inc
loop
xor
add
push
les
xor
repnz
dec
repz
xor
and
fsubrl
xchg
mov
cltd
mov
ja
lahf
int3
out
sarl
push
sbb
hlt
or
stos
pop
xorb
daa
je
jle
outsb
ds
pushf
push
xlat
loope
push
fldcw
iret
lds
dec
xor
dec
loope
cmpsl
es
pop
out
add
or
cmp
push
repnz
cmp
fidivl
cmp
dec
out
and
sub
or
mov
sbb
inc
les
dec
xlat
aam
xor
enter
xor
dec
pushf
cmc
dec
scas
leave
push
pop
loopne
std
push
gs
or
xor
test
fsubl
sub
loope
mov
pop
mov
nop
mov
mov
mov
xchg
mov
sub
cmp
push
push
lods
sub
xor
stc
lret
ljmp
xor
mov
jno
inc
sbb
and
lcall
mov
negb
inc
sbb
mov
das
jge
imul
call
dec
mov
sub
repz
test
ret
or
inc
cmp
push
lea
rorl
gs
sbb
add
mov
cld
pop
cwtl
jae
popa
out
into
xor
loop
lock
xor
mov
pop
mov
iret
or
data16
cmp
mov
loope
scas
lods
push
gs
and
andb
jmp
jne
cmp
push
aad
mov
ljmp
xor
xchg
fisttps
mov
lcall
pop
pushf
pop
das
or
xchg
push
enter
push
adc
aas
xlat
scas
lea
repz
cld
add
fisubrl
add
outsl
jg
aam
lods
pop
fildl
add
or
mov
loop
fptan
daa
lods
fidivs
stc
sbb
js
dec
or
lock
push
cwtl
enter
insl
mov
sbb
dec
add
jne
mov
sub
mov
hlt
fs
mov
mov
jl
loop
aaa
outsb
stc
mov
call
addr16
push
cltd
int3
xchg
sub
jmp
cld
mov
insl
pop
leave
lahf
jb
jecxz
sub
imul
pop
add
fmull
mov
add
pause
scas
lds
hlt
xchg
clc
fsts
loope
sub
adc
add
jo
orl
mov
and
mov
add
or
and
and
jnp
xlat
nop
int3
es
mov
movsb
lcall
fwait
test
or
popa
das
or
jns
dec
int
xchg
xchg
ror
add
fs
xlat
or
aaa
adc
neg
dec
mov
jne
pop
xor
push
fwait
xor
push
xor
shlb
mov
inc
pop
jge
pop
mov
pop
dec
inc
mov
push
add
lods
movl
notb
mov
lahf
push
push
scas
mov
hlt
pop
jb
notl
in
push
insb
xchg
movsb
ja
out
stos
ja
mov
sbb
stc
popa
pop
push
call
subb
je
sti
stos
outsb
xlat
inc
bnd
aam
add
mov
ret
bound
jns
cmp
jnp
jge
mov
cmpb
sub
and
and
pop
xor
and
into
mov
xchg
test
ja
repnz
cmp
jge
mov
xchg
ror
or
push
icebp
jp
dec
jns
stos
cmp
jge
jb
xor
pop
pop
dec
sbb
in
imul
mov
nop
push
or
jno
iret
mov
xlat
sbb
addr16
cltd
dec
es
cmp
jnp
icebp
sub
fdiv
movsl
xor
repz
cltd
jnp
mov
jo
cwtl
cmpsl
push
add
rclb
aam
jl
pusha
in
ja
arpl
sub
cmpb
cmovge
jb
jmp
mov
dec
or
nop
adc
repnz
es
sub
and
dec
popf
orb
xchg
mov
xchg
dec
push
pop
push
jo
out
es
or
sub
popf
mov
jge
repz
xchg
out
jmp
aaa
lret
jg
repnz
mov
repz
movsb
mov
orl
fisubrs
mov
popa
dec
mov
nop
subb
shll
js
xchg
inc
inc
mov
fistps
sarl
cmp
loop
xchg
bts
jge
cmp
or
push
stos
test
inc
pop
or
push
xchg
pusha
jnp
ja
xchg
mov
cmp
xchg
test
mov
xchg
mov
mov
int
orb
dec
ja
mov
add
push
loopne
call
or
sub
mov
pusha
hlt
dec
mov
mov
xor
sub
rcrb
iret
jle
mov
repnz
fidivrl
add
jo
xchg
lock
icebp
ret
rcr
lods
sub
jb
repnz
out
mov
rcll
lret
jmp
aaa
adc
mov
sbb
xlat
out
dec
cmp
ljmp
xor
imul
sahf
xchg
fistpll
xchg
imul
repz
sahf
cld
pop
faddl
sub
inc
pop
push
into
and
popf
gs
push
cs
sbb
adc
aam
clc
sbb
add
not
je
jecxz
xor
dec
xchg
cli
cli
dec
or
icebp
xlat
into
dec
rorb
adc
mov
dec
inc
data16
cmp
mov
sub
imul
jns
lds
scas
mov
sbb
cltd
xchg
adc
push
ljmp
or
iret
xchg
repnz
or
jnp
sti
fidivrl
outsl
sbb
lods
outsb
mov
fisttps
popf
lock
test
mov
inc
push
movsb
cwtl
pushf
pop
out
loope
push
dec
fwait
xor
or
stos
cbtw
rcr
add
sbb
notl
in
call
or
jl
add
jmp
pop
xor
popa
sbb
popa
scas
inc
cmp
dec
imul
es
xor
mov
push
lret
sti
cmp
loop
jp
adc
clc
out
jg
inc
into
clc
call
test
cmc
cmp
inc
repz
mov
adc
test
push
call
out
popa
add
mov
push
mov
push
mov
clc
inc
and
je
xchg
aas
movsb
call
push
or
push
out
rep
dec
mov
scas
xlat
hlt
sahf
mov
dec
cli
and
das
aaa
push
adc
cmp
test
rclb
xchg
jmp
cmp
movsl
into
dec
jae
lods
xchg
and
jl
enter
or
cs
imul
add
pop
into
pop
add
fisubl
sub
enter
jge
inc
jle
daa
pop
and
mov
int3
in
jg
sub
fisttpl
adc
xchg
pop
shrl
daa
cmp
clc
mov
mov
cmp
push
out
xchg
push
out
outsb
jmp
cmp
mov
cli
adc
mov
lea
das
incl
and
cmp
enter
test
sbb
loop
mov
inc
jmp
loope
cmc
sub
mov
jo
add
mov
sub
pusha
pop
in
cli
hlt
jl
adc
in
push
mov
xor
sub
adc
fildl
jmp
mov
pop
xor
nop
ss
gs
sub
mov
mov
cmc
mov
in
sbb
mov
xchg
push
xchg
xchg
mov
ret
fdivs
lret
dec
or
sti
int
mov
imul
lret
aas
sub
xor
stos
sub
cs
push
and
cmp
fsts
test
je
mov
pop
stc
mov
std
mov
adc
imul
ret
lret
scas
sub
inc
inc
sub
adc
mov
aad
xor
and
aam
cli
and
xchg
stos
arpl
xchg
inc
xchg
bound
sub
fwait
sbb
pusha
ljmp
mov
jne
push
dec
push
ja
push
jp
ret
sub
xor
mov
lcall
cmpb
out
inc
out
and
cmp
adc
mov
aad
xchg
bnd
push
pop
subl
lcall
jmp
into
pop
pop
push
fadds
dec
add
fwait
xchg
pop
cmpl
sub
sbb
push
jg
mov
cmp
fistpl
inc
stos
loope
and
nop
mov
enter
xchg
out
test
scas
movsb
sub
gs
out
lcall
mov
xor
test
cmp
push
iret
dec
pop
ud1
jnp
ja
stos
adc
and
pop
scas
scas
dec
leave
push
subl
push
push
sbb
mov
or
or
mov
xor
icebp
xchg
adc
daa
ja
arpl
stc
pop
jbe
sbb
mov
cmc
or
xor
in
or
mov
int
mov
arpl
mov
xchg
mov
outsb
lret
adc
shrb
adc
pop
and
aas
inc
inc
cltd
dec
jae
aam
mov
in
std
jno
dec
push
stos
push
sbb
icebp
mov
mov
adc
fcmovne
mov
sbb
cmpsb
test
testb
cmp
xlat
dec
jp
xor
adc
inc
cmpsl
mov
sub
imul
push
lret
mov
push
jne
out
rorl
rcl
loope
scas
movsb
jns
iret
es
data16
mov
ss
or
jge
movsl
sub
mov
fildll
xor
in
outsl
or
test
nop
xor
pop
mov
jnp
test
push
das
outsl
mov
fistl
shl
or
loopne
mov
lock
jo
andl
sbb
jbe
loope
lock
mov
adc
pop
std
sub
mov
ljmp
push
adc
pop
jmp
xchg
into
push
std
int
pop
mov
lea
mov
jge
push
dec
inc
cli
mov
scas
outsb
xchg
xorl
xor
xchg
jae
imul
mov
sbb
add
push
sbb
gs
or
and
xchg
mov
mov
cmp
aaa
imul
dec
dec
scas
lds
addr16
loop
daa
lods
scas
mov
enter
mov
rcr
mov
mov
mov
nop
ret
arpl
and
pop
lahf
gs
sti
jbe
fbld
fsubr
inc
repz
fwait
int3
testb
pop
ss
add
repnz
jbe
xchg
sub
filds
mov
pop
sub
hlt
pushl
rolb
negl
or
lods
icebp
push
fwait
jmp
test
sub
loope
adc
xchg
ds
add
pushf
sbb
xchg
into
shlb
push
sub
hlt
dec
stc
insl
xchg
cli
push
dec
ja
mov
cld
xchg
pop
outsb
xchg
repnz
daa
xchg
mov
push
mov
lock
popf
fisubs
cmp
cld
jmp
or
mov
and
fldl
test
add
std
in
or
pop
sub
test
xor
dec
jne
shl
mov
push
test
cmp
sbb
test
jecxz
sti
mov
dec
fisubl
mov
xchg
mov
cwtl
into
subl
je
repnz
loopne
lods
xchg
adc
sbb
sbb
add
or
dec
inc
cwtl
add
inc
in
mov
pushf
lds
jb
mov
sti
or
das
shll
xor
dec
xor
pop
xor
mov
rep
push
and
rcr
lret
or
sub
aad
in
dec
add
cmpsl
mov
pop
stos
fwait
popf
push
jnp
mov
cltd
and
push
inc
sbb
rclb
xchg
mov
iret
imul
out
mov
loope
cwtl
pop
sub
jne
filds
xor
rorb
cmp
stc
mov
or
cmp
mov
jmp
mov
mov
shl
aad
aaa
sar
mov
insl
lods
insb
adc
add
inc
xor
and
dec
cmpsb
shll
and
movsb
jmp
hlt
mov
adc
adc
lcall
sti
jmp
pop
sbbl
push
sbb
shlb
sub
cs
shrb
stos
icebp
lcall
jl
test
jbe
push
in
mov
and
mov
sub
lret
pop
test
sbb
lds
mov
inc
pop
out
mov
and
test
push
cmc
xorl
fdivrl
daa
mov
xchg
mov
push
sbb
lcall
inc
inc
add
sbb
and
sub
mov
and
je
jne
call
pop
inc
adc
fsqrt
adc
cmpb
xchg
fbld
mov
push
mov
adc
lret
push
inc
in
and
push
test
movsl
pushf
and
push
mov
jle
sub
sub
jge
cwtl
fimuls
xor
mov
inc
clc
xchg
fildll
jecxz
add
stos
push
idivb
add
lahf
lods
addr16
push
xchg
xor
push
add
loope
ljmp
ds
lret
adc
sub
fisubs
stos
popa
inc
addr16
in
lret
les
pop
repnz
test
in
arpl
inc
add
push
or
mov
jp
shl
add
cmp
mov
mov
fidivs
imull
mov
push
leave
loope
jp
das
repnz
in
jb
mov
inc
mov
mov
and
cmp
and
pop
addr16
imul
xchg
and
jno,pn
inc
shlb
pop
pop
or
push
ret
inc
mov
popa
cmpsb
dec
fs
push
sub
and
imul
dec
or
inc
sub
jbe
push
or
test
fs
fmul
dec
push
mov
mov
fists
cwtl
call
adc
and
adcl
divl
gs
in
xor
lahf
andb
ss
add
out
sub
cs
inc
dec
sar
test
cld
idiv
dec
sbbl
and
test
inc
xchg
inc
test
insl
mov
sub
repnz
xchg
add
lock
fsubl
or
pop
inc
jne
test
cmc
mov
push
scas
lcall
imul
push
mov
lock
xchg
aam
add
cmp
jp
and
sti
insl
fs
and
or
xchg
mov
cmp
jo
and
addr16
stc
mov
cmp
fimuls
pop
fisttps
xor
or
fstps
rcll
or
test
lahf
test
cmp
std
add
cmp
outsb
roll
sub
or
mov
add
mov
add
and
mov
out
mov
push
cmp
mov
sarl
inc
jno
repz
cmpsl
jns
xchg
imul
in
mov
push
test
sahf
mov
add
in
mov
test
xchg
sbb
push
mov
inc
sar
fadds
push
movl
in
adc
push
sub
repnz
mov
xor
xchg
xchg
inc
mov
mov
aas
add
xchg
mov
test
lahf
add
pop
movsb
lcall
cwtl
ja
sub
cld
sar
aaa
pusha
jnp
mov
cmpsb
imul
mov
cmp
pop
push
xchg
sub
les
dec
xchg
fidivrs
add
lea
pop
jo
jmp
jae
in
rclb
inc
js
cmp
mov
mov
ss
lret
jbe
jno
mov
scas
pop
add
movsb
cmpb
enter
punpckhbw
lret
stc
js
pop
mov
outsl
mov
sbb
pop
stos
push
fcmove
lret
inc
clc
aad
call
xor
cmp
xor
mov
jl
cmp
lret
lret
fcoms
push
pop
sub
pusha
pop
pop
cmp
jmp
sarb
pop
mov
sbb
inc
out
mov
sti
cli
sub
mov
push
adcb
mov
push
xor
aam
fnstenv
ret
xor
sub
mov
cmpsl
rorl
xchg
push
mov
inc
ja
sar
pop
lock
aad
xor
xchg
pop
cs
cmp
movsl
aas
inc
adc
sub
fwait
imul
lods
js
adc
das
jge
bound
mov
push
enter
and
mov
lock
mov
mov
add
push
clc
pusha
sbb
xchg
sbb
mov
cmp
out
in
pop
and
jns
sub
ret
adc
mov
mov
inc
add
shlb
cmpsb
xchg
jmp
fiadds
movsb
test
dec
sbb
aas
outsl
cmp
xor
xchg
mov
cwtl
cwtl
imulb
sub
add
ja
leave
mov
xor
dec
test
sbb
call
out
scas
jmp
pop
fsubs
ss
aas
je
sti
ljmp
ret
push
dec
inc
in
sbb
mov
mov
xor
xchg
les
imul
xlat
test
push
jae
shlb
sbb
pop
stos
cld
aam
js
je
dec
fmull
in
ret
lock
mov
push
push
push
push
call
push
push
jmp
into
cmc
je
xor
mov
jb
mov
jb
add
pop
push
push
push
repz
fmul
pop
outsb
loopne
pop
inc
data16
into
les
push
mov
lods
xor
add
jae
mov
lahf
pusha
xchg
cli
sbb
and
cltd
pushf
dec
pop
ret
dec
mov
jle
or
movsl
scas
jg
dec
sbb
mov
pop
stos
pop
mov
lock
fcmove
adc
es
xor
mov
jb
mov
fwait
inc
push
and
cli
adc
xchg
lock
cmc
and
mov
stos
gs
negb
cmp
and
scas
inc
mov
mov
cli
stc
movsb
adc
push
mov
shlb
mov
fwait
xor
sub
ja
dec
pushf
repnz
mov
std
in
pop
in
test
mov
xorl
lock
add
call
mov
mov
add
mov
adc
mov
and
mov
and
mov
cmp
jne
cmp
je
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
xor
shr
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movb
movb
movb
movb
mov
movzbl
mov
movzbl
shl
cltd
idiv
mov
movzbl
movzbl
or
mov
movzbl
cltd
idiv
mov
movzbl
movzbl
cltd
idiv
movzbl
and
mov
movb
movb
mov
mov
add
add
mov
imul
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
xor
mov
mov
add
mov
shrd
xor
shl
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
mov
imul
mov
imul
xor
or
mov
mov
xor
mov
and
sub
xor
xor
add
div
mov
jmp
movl
mov
movl
movl
mov
mov
or
xor
mov
sub
xor
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
imul
sub
imul
xor
add
mov
mov
xor
mov
and
sub
xor
xor
mov
div
mov
sub
mov
add
xor
add
mov
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
incl
push
orl
push
xor
add
mov
sub
push
adc
mov
cmpl
movzbl
movl
mov
movzbl
jmp
movl
movl
jbe
pushl
pushl
call
xor
add
mov
sub
xor
add
inc
movzwl
or
mov
and
sbb
mov
addl
shrd
cmpl
movl
movzbl
jmp
mov
mov
jbe
pushl
call
add
addl
movzwl
sub
inc
movzwl
sbb
shr
mov
mov
xor
mov
or
mov
mov
cmpl
movl
movl
movl
jmp
movl
ja
pushl
push
push
call
sub
mov
xor
sub
or
and
xor
or
sbbl
mov
mov
xor
mov
shl
mov
subl
shrd
cmpl
mov
mov
mov
mov
jmp
mov
mov
jne
push
push
pushl
call
mov
mov
sub
imul
subl
mov
and
mov
and
mov
adc
xor
shr
mov
mov
cmpl
mov
mov
jmp
mov
mov
jle
push
push
call
mov
sbb
and
or
neg
adc
add
xor
xor
add
or
cmpl
not
mov
mov
jmp
movl
mov
jg
push
call
mov
and
xor
add
orl
subl
and
sbb
mov
sbb
mov
xor
mov
mov
adc
mov
dec
mov
adc
mov
neg
mov
cmpl
mov
not
movl
jmp
mov
mov
jbe
pushl
call
or
sub
xorl
add
adc
dec
movzwl
sbb
mov
and
mov
xor
mov
andl
shl
sbb
xor
add
shld
mov
xor
mov
shl
adcl
mov
neg
xor
cmpl
mov
mov
movl
mov
jmp
movl
jg
pushl
call
and
or
sbbl
inc
subl
mov
xor
sbbl
xor
movl
inc
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
mov
mov
sub
and
mov
and
mov
xor
adcl
shld
or
shl
cmpl
mov
mov
movl
jmp
mov
movl
jge
push
push
push
push
push
push
push
call
adcl
movzbl
adc
sbb
and
mov
adc
adcl
xor
mov
xor
or
sbb
mov
mov
xorl
xor
movl
cmp
jne
movl
cmp
je
add
mov
mov
cmpl
mov
movzbl
notl
mov
jmp
mov
ja
push
push
pushl
push
push
push
pushl
call
orl
adc
and
orl
xorl
xor
shl
mov
sbbl
xor
addl
shr
or
adc
mov
mov
sub
mov
mov
mov
sub
xor
mov
subl
mov
mov
xor
or
sub
xor
mov
push
and
pop
orl
sub
cmpl
movl
mov
mov
jmp
movl
jg
push
push
push
push
push
call
adc
sbb
xorl
orl
sub
sub
xor
mov
sub
mov
notl
add
subl
mov
addl
lea
not
mov
mov
mov
xor
xor
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
inc
xor
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
movl
mov
xor
mov
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
mov
andl
or
mov
mov
jne
mov
movl
mul
ret
andl
push
cmpl
mov
movl
mov
movl
jmp
movl
movl
jg
push
pushl
pushl
pushl
call
and
sbbl
subl
sbb
andl
sbb
and
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
imul
add
xor
add
mov
mov
sub
imul
add
xor
div
mov
mov
jmp
movl
movl
movl
movl
mov
mov
or
mov
imul
add
xor
mov
div
mov
mov
xor
sub
mov
mov
mov
xor
sub
mov
sub
mov
add
mov
mov
sub
and
add
xor
mov
div
xor
add
mov
mov
sub
imul
add
div
mov
xor
mov
sub
mov
and
or
sub
xor
mov
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
xor
push
push
call
mov
movzbl
push
call
test
jne
xor
movl
jmp
cmpl
movl
mov
mov
jmp
mov
jne
pushl
pushl
push
push
pushl
call
xor
and
xor
or
sub
or
sbbl
cmpl
movl
mov
mov
jmp
mov
mov
jg
pushl
pushl
call
andl
xor
and
adc
adcl
xor
xor
xor
or
sub
sub
mov
adcl
movl
movl
xor
movl
cmpl
mov
mov
notl
jmp
mov
jl
pushl
push
call
inc
mov
xor
mov
inc
and
sub
movl
mov
mov
adc
movl
add
movl
mov
add
movl
orl
push
add
movl
cmpl
not
notl
jmp
mov
jl
pushl
call
or
xor
xor
adc
andl
mov
cmpl
movl
not
not
movl
jmp
mov
mov
jg
call
xor
subl
orl
sbb
xor
xor
or
or
mov
push
subl
push
push
sbbl
call
xor
mov
mov
push
adcl
push
xorl
push
xorl
push
call
notl
mov
adcl
mov
addl
add
mov
adc
adc
mov
orl
xor
or
mov
adc
xor
mov
adc
movl
add
movl
or
movl
cmpl
movzwl
movl
jmp
movl
je
push
push
push
call
inc
add
mov
xor
adc
add
xor
movl
xor
or
mov
sub
xor
movl
cmpl
movl
mov
jmp
notl
mov
jg
push
push
call
adc
and
sub
sbb
add
sbb
mov
mov
or
push
movl
mov
add
mov
sbbl
push
adcl
push
push
andl
call
sbbl
mov
mov
push
push
xorl
push
andl
push
sbbl
call
mov
sbb
mov
sbbl
xor
mov
xor
mov
and
mov
movl
xor
xor
cmp
jne
movl
cmp
jne
sbb
movl
cmpl
mov
mov
jmp
notl
jb
push
pushl
pushl
push
call
xor
and
add
add
movzwl
add
mov
cmpl
not
mov
movl
movl
jmp
mov
jae
push
push
pushl
push
call
adc
and
mov
sub
sbb
movzbl
or
or
and
movl
movl
mov
cmpl
movl
mov
mov
movl
jmp
movl
movl
jle
push
push
push
call
incl
adc
and
adcl
xor
imul
and
xor
sbbl
mov
div
sub
pushl
cmpl
mov
movl
mov
jmp
mov
movl
jae
pushl
push
call
sbb
movzwl
and
mov
add
xor
mov
mov
or
sbb
addl
xor
xor
adcl
and
xor
subl
pushl
mov
cmpl
mov
mov
jmp
movl
movl
jg
push
call
sbb
sbb
addl
or
or
xor
adc
push
pop
div
cmpl
mov
movl
mov
jmp
movl
movl
jl
pushl
push
pushl
call
and
and
movzwl
sub
not
mov
or
mov
addl
sub
add
imul
subl
and
adcl
xor
pushl
notl
pushl
pushl
andl
pushl
andl
pushl
subl
call
cmpl
mov
mov
jmp
movl
mov
jne
push
pushl
pushl
call
xorl
sub
mov
mov
adc
orl
sub
sbb
xor
movl
movl
xor
or
mov
sub
or
mov
addl
mov
sub
xor
mov
xorl
xor
xor
movl
div
imul
xor
orl
pushl
pushl
call
decl
movl
adc
mov
movl
movl
sub
mov
cmpl
movl
mov
mov
movl
jmp
movl
movl
jb
push
push
push
pushl
push
push
push
pushl
call
add
adc
add
xor
xor
or
mov
sbb
mov
mov
adc
mov
mov
mov
push
push
xor
xor
adcl
push
xorl
push
call
xorl
add
mov
movl
adc
adcl
mov
movl
movl
movl
movl
dec
movl
jne
sbb
mov
not
mov
subl
mov
addl
mov
movl
movl
mov
call
add
lea
or
mov
lea
mov
sub
mov
mov
sub
mov
mov
mov
mov
addl
xor
xor
xor
shl
and
shr
movzbl
add
or
mov
mov
lea
xor
add
xor
mov
mov
mov
mov
sub
or
mov
or
mov
mov
add
shrd
sub
shr
mov
mov
adc
mov
mov
xor
subl
xor
or
xor
mov
push
pushl
lea
push
adcl
shl
addl
call
orl
lea
subl
push
mov
subl
mov
movl
lea
sbbl
push
xorl
mov
orl
lea
mov
orl
mov
sbbl
mov
addl
push
sbbl
call
push
andl
push
pushl
call
add
mov
mov
mov
sub
or
mov
and
mov
sub
mov
movzwl
sbb
shr
xor
or
sub
shl
or
cmpl
movl
movl
movl
jmp
movzwl
movl
jne
pushl
pushl
pushl
pushl
pushl
push
call
xor
xor
xor
mov
add
addl
mov
xor
mov
adc
lea
cmpl
mov
not
movl
jmp
mov
mov
jb
pushl
push
push
call
sbb
mov
xor
or
sub
or
mov
mov
xor
subl
movzwl
add
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
xor
mov
mov
or
mov
shl
xor
or
mov
mov
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
incl
push
movl
cmpl
movl
mov
mov
jmp
mov
movl
jae
pushl
call
adc
sub
andl
and
mov
and
xor
or
mov
sub
and
movl
adcl
movl
mov
mov
sub
add
mov
cmpl
movl
movl
jmp
mov
mov
jbe
push
call
addl
addl
orl
adcl
mov
xor
subl
div
cmpl
movl
mov
jmp
movl
movl
jle
pushl
push
call
xor
incl
add
and
dec
xorl
sub
cmpl
movl
movzwl
jmp
notl
jbe
push
push
pushl
push
pushl
push
pushl
call
xor
or
adc
sub
mov
mov
sub
mov
sbb
mov
imul
mov
sbbl
xor
and
dec
mov
xor
div
sub
mov
and
mov
movl
movl
movl
movzwl
sbb
mov
mov
xor
or
add
add
xor
xor
orl
imul
mov
adc
mov
mov
and
sub
mov
xor
xor
sub
or
mov
movl
movl
cmpl
mov
mov
mov
jmp
movl
ja
push
pushl
pushl
call
and
mov
add
add
movl
adc
sbb
movl
movl
and
mov
movl
imul
cmpl
mov
not
movl
jmp
mov
jg
call
xor
dec
sbbl
and
and
mov
adc
imul
imul
sbb
mov
andl
and
cmpl
mov
movzbl
mov
movl
jmp
mov
mov
jne
push
push
pushl
push
call
xorl
decl
adcl
adcl
sbbl
or
mov
xor
mov
mov
lea
cmpl
movl
mov
jmp
movl
movl
jg
push
pushl
push
push
pushl
push
call
and
adc
mov
adc
mov
addl
and
and
or
mov
movl
mov
mov
sub
add
movl
movl
mov
movzbl
adc
mov
xor
movzwl
sub
mov
mov
incl
or
cmpl
not
mov
mov
jmp
movl
movl
jle
push
call
xor
or
sbb
mov
xor
inc
orl
addl
negl
mov
or
cmpl
mov
mov
jmp
movl
ja
push
pushl
call
adc
inc
adc
mov
adc
xorl
add
adc
mov
or
cmpl
not
not
mov
movl
jmp
movl
movl
jne
call
mov
xor
sbbl
notl
xor
xor
xor
sbb
subl
add
xor
not
mov
cmpl
not
mov
movl
jmp
movl
jb
push
call
orl
mov
sbb
inc
adcl
movl
sub
movl
movl
mov
add
mov
sub
orl
mov
lea
cmpl
mov
mov
jmp
movl
jne
push
call
inc
mov
sub
orl
movl
adcl
incl
cmpl
mov
mov
notl
jmp
movl
jbe
pushl
push
call
add
xor
add
notl
mov
sub
mov
or
and
sub
mov
mov
adc
mov
movl
movl
not
mov
or
add
imul
mov
imul
notl
xor
cmpl
mov
movl
movzwl
jmp
movl
je
push
pushl
call
and
subl
subl
sub
inc
cmpl
mov
movl
mov
jmp
movzwl
jg
push
push
push
push
call
mov
sub
not
sub
sbb
mov
or
mov
div
cmpl
mov
movl
movl
mov
jmp
movl
jg
pushl
call
xor
mov
or
mov
and
subl
add
and
adc
sub
andl
sub
subl
mov
movl
cmpl
not
mov
mov
jmp
movl
movl
ja
pushl
push
push
call
add
addl
sbbl
adc
not
mov
sbb
mov
sbbl
movl
cmpl
mov
mov
not
jmp
mov
jb
pushl
push
call
xor
addl
xorl
adc
mov
mov
add
xorl
mov
adc
movl
mov
mov
movl
xor
sbbl
div
movl
imul
inc
add
mov
subl
xor
andl
xor
subl
mov
xorl
div
xor
or
adc
xor
mov
movl
subl
movl
addl
movl
xor
add
xor
xor
sub
xor
mov
xor
mov
sub
shr
sub
cmpl
movl
notl
jmp
notl
movl
jl
pushl
push
pushl
call
xorl
andl
subl
orl
movl
xor
xor
and
mov
mov
imul
mov
orl
and
or
mov
orl
sub
xor
or
add
mov
mov
movl
movl
mov
or
mov
or
cmpl
mov
mov
jmp
mov
jl
pushl
call
or
sub
xor
or
subl
sub
xor
mov
cmpl
movzwl
mov
mov
jmp
movl
movl
jne
pushl
pushl
pushl
push
push
call
or
xor
sub
xor
xor
and
mov
sub
and
xorl
movl
movl
cmpl
movl
movl
jmp
mov
jb
push
pushl
pushl
pushl
pushl
pushl
call
and
orl
andl
sbb
or
movl
movl
xor
movl
sub
movl
xor
movl
mov
xor
add
mov
sub
add
mov
imul
mov
sbb
imul
mov
or
mov
adcl
lea
andl
push
call
mov
xor
add
sub
mov
mov
notl
imul
adc
add
cmpl
mov
movl
not
mov
jmp
movzbl
jl
push
call
mov
add
adcl
movzbl
or
xor
or
xor
orl
and
sub
cmpl
movl
mov
jmp
movl
ja
push
pushl
push
pushl
push
push
call
sbb
or
and
movzwl
sub
mov
mov
adc
mov
addl
xor
andl
mov
xorl
div
xor
mov
mov
sub
add
add
mov
movl
movl
movl
movl
cmpl
mov
not
notl
jmp
not
je
push
push
call
adcl
dec
mov
mov
sub
or
adc
xor
cmpl
mov
movl
jmp
movl
jge
pushl
push
call
sbbl
sub
sbb
mov
mov
sub
and
xor
sbb
addl
movl
movl
movl
xor
movl
adc
movl
movl
movl
or
movl
mov
mov
cmpl
mov
movl
movl
jmp
movl
notl
jl
pushl
call
add
adc
and
adc
and
mov
cmpl
mov
not
mov
jmp
movl
jbe
push
push
push
pushl
call
neg
mov
sub
sub
decl
sbbl
and
neg
sub
sub
imul
mov
sub
lea
mov
xor
mov
mov
sub
mov
movzbl
adc
xor
add
cmpl
mov
not
mov
movl
jmp
mov
je
push
push
call
addl
mov
and
mov
sbb
not
sub
incl
mov
lea
mov
or
and
mov
sub
inc
add
xorl
mov
movl
cmpl
mov
mov
mov
not
jmp
mov
movl
jg
pushl
push
call
mov
sub
mov
movzwl
or
subl
xor
add
adc
movl
mov
mov
sub
sub
movl
movl
mov
mov
mov
sub
or
mov
mov
adcl
xor
xor
sbbl
mov
call
mov
mov
mov
and
mov
xor
xor
orl
mov
sbbl
call
xorl
or
cmpl
movl
movl
jmp
movl
mov
jl
push
pushl
pushl
call
subl
adcl
andl
sbbl
addl
xorl
or
mov
movl
mov
xor
xor
addl
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
andl
push
cmpl
movl
movl
movl
movl
jmp
movl
jle
push
push
push
push
pushl
push
call
subl
orl
subl
andl
subl
sbbl
addl
sub
mov
or
jne
mov
cmpl
mov
mov
movl
mov
jmp
mov
movl
jl
push
push
call
xor
adc
adcl
xor
neg
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
subl
cmpl
je
mov
xor
add
sub
xor
add
mov
mov
mov
pop
pop
pop
leave
ret
cmp
jae
movl
cmp
jae
adcl
shld
movl
shl
ret
mov
xor
orl
and
shl
ret
xor
xor
ret
