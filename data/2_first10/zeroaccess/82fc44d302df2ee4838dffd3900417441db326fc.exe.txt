push
mov
sub
push
add
push
adc
push
adc
xor
sbb
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
push
mov
pop
push
call
push
andl
push
push
push
push
xorl
push
sbbl
call
push
addl
push
push
push
sbbl
push
push
push
incl
call
addl
dec
movl
jne
push
sbbl
push
push
andl
call
test
je
mov
adc
imul
mov
mov
movl
mov
movl
cmp
jne
addl
movl
pushl
subl
pushl
andl
pushl
xorl
call
mov
mov
or
mov
xor
mov
mov
sub
movl
lea
xor
mov
lea
mov
addl
mov
mov
adc
mov
mov
add
mov
mov
xor
mov
xor
mov
adcl
add
movl
mov
mov
movl
cmp
movl
jne
mov
mov
mov
xor
add
mov
xor
mov
movzbl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
xor
dec
mov
jmp
mov
or
mov
xor
add
or
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
mov
xor
or
adc
mov
xor
xor
mov
sbb
mov
xor
mov
mov
mov
sub
mov
orl
mov
movl
add
mov
xor
add
mov
add
mov
andl
mov
adcl
xor
xor
sbbl
add
movzbl
and
mov
xor
lea
cmp
ja
or
mov
mov
xor
mov
sbbl
xor
andl
lea
subl
push
sbb
mov
xorl
xor
lea
orl
push
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
mov
andl
pushl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jb
xor
lea
mov
mov
decl
xor
xor
sbbl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
movzbl
sub
mov
mov
xorl
xor
lea
mov
cmp
movl
jbe
add
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
adc
mov
mov
xor
mov
sub
andl
xor
mov
not
mov
movl
cmp
movl
jne
addl
lea
andl
mov
lea
addl
mov
mov
xorl
test
movl
je
adc
mov
mov
mov
sub
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
sub
cltd
mov
mov
mov
or
add
mov
adc
andl
subl
xor
xor
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
push
call
mov
dec
mov
jmp
not
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
negl
add
mov
mov
movl
adcl
xor
addl
mov
mov
xor
movl
mov
cmp
movl
jne
mov
mov
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
negl
mov
movl
mov
andl
xor
add
movl
adc
andl
xor
addl
xor
movl
cmp
movl
jne
cmp
jne
mov
addl
mov
andl
xor
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
addl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
xorl
add
movl
jmp
movl
mov
movl
cmp
je
mov
mov
orl
xor
add
cmp
je
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
movl
mov
mov
mov
adcl
pushl
addl
mov
pushl
addl
add
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
add
mov
mov
orl
pushl
call
mov
mov
movl
mov
movl
jmp
adc
mov
sub
mov
andl
xor
subl
add
cmp
jne
add
mov
movzwl
sbb
mov
adcl
mov
xor
sbbl
add
cmp
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
andl
push
xor
movl
add
xorl
push
xorl
push
andl
pushl
adcl
pushl
sbbl
call
add
mov
mov
sub
mov
or
mov
sub
mov
adc
mov
xor
mov
sub
add
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
incl
mov
mov
mov
mov
mov
mov
mov
sbb
movl
mov
xor
decl
add
mov
sbb
mov
mov
or
mov
mov
and
mov
mov
push
sbb
pop
orl
sub
add
xorl
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
mov
lea
lea
xor
cmp
jne
mov
xor
mov
mov
mov
mov
xor
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
mov
movl
movl
movl
movl
mov
mov
mov
andl
mov
movl
mov
mov
xor
mov
orl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
xor
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
movl
movl
pop
jmp
xor
inc
ret
push
mov
push
movl
movl
mov
addl
mov
add
xor
cmp
movl
jne
add
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
xorl
push
adcl
push
addl
push
push
andl
lea
push
push
adcl
call
push
call
sub
movl
xorl
movl
mov
mov
xor
mov
xorl
add
mov
sbb
mov
test
je
mov
mov
orl
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
sbb
imul
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
add
movzbl
and
xchg
sbb
mov
movl
sub
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adc
add
mov
sub
mov
sub
xor
add
mov
sub
mov
mov
xor
xor
add
add
mov
movzbl
sbb
mov
mov
adc
xor
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
or
mov
orl
sub
addl
lea
xor
andl
xor
movl
cmp
movl
je
sub
mov
xorl
xor
adcl
add
cmp
jne
orl
pushl
call
movl
cmpl
je
cmpl
jne
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
inc
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
add
cmp
movl
je
adcl
pushl
addl
pushl
negl
call
mov
xor
mov
add
mov
subl
xor
subl
add
cmp
je
or
mov
mov
adc
mov
mov
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
jmp
or
xchg
xchg
pushf
cmp
add
jl
jl
loopne
jl
adc
and
imul
xor
fsubp
push
dec
imul
bound
iret
pop
dec
and
dec
jg
jb
jg
movsb
cmp
ljmp
cld
push
jg
in
cmp
mov
mov
mulps
fldl
lock
sub
dec
push
sub
mov
test
jmp
lret
sbb
jp
arpl
lcall
xor
cmpb
jae
fsubrl
push
jecxz
mov
mov
out
push
dec
push
and
cmp
lods
dec
int3
cmpsl
xor
push
pop
std
push
pop
movsl
stc
push
cli
inc
add
pmullw
xor
sti
sub
js
push
jnp
and
mov
and
jmp
pop
into
stos
add
cmc
pop
test
mov
jb
adc
dec
shll
int
loop
sbb
mov
sub
out
push
mov
pop
out
add
pop
dec
jecxz
das
or
loope
push
mov
mov
push
lods
loope
js
outsl
shlb
sti
xchg
roll
inc
ljmp
mov
repz
lds
push
divb
mov
cltd
sub
aaa
outsl
jno
mov
fildl
pop
insl
push
push
bound
inc
mov
cmp
roll
std
inc
addl
xor
sub
nop
xchg
scas
adc
fildll
cmpsl
cli
jmp
inc
test
dec
daa
sbb
out
ds
imul
mov
aad
repnz
sbbl
lcall
or
xchg
push
or
bound
call
mov
ljmp
nop
not
clc
xchg
jp
stc
and
lds
mov
fidivs
imul
mov
es
xlat
mov
mov
popa
out
popf
ljmp
int3
push
fcmovnu
out
and
push
popf
or
shll
cwtl
lds
xor
out
and
fidivrs
add
loop
insb
push
xor
pop
sarb
xlat
std
adc
mov
sbb
cmpsb
jecxz
add
inc
inc
lea
int3
ljmp
inc
daa
jge
dec
imul
mov
push
push
push
imul
dec
out
jge
and
mov
fldcw
int3
or
or
sub
mov
sbb
add
ss
leave
pop
in
cli
fistps
lods
or
cmp
in
faddl
cld
cmpsb
cmp
dec
fdiv
lea
ljmp
mov
shrl
outsl
pop
sbb
cld
or
aas
daa
xchg
movsb
mov
leave
add
add
mov
lock
pushf
repnz
and
mov
test
push
pop
out
popa
movsl
mov
test
cmc
shll
and
cmp
std
icebp
pop
jmp
fucomp
es
and
xor
fdivrs
xchg
add
fstpl
daa
aaa
out
sbb
sub
xor
ja
inc
fwait
xchg
mov
cbtw
ljmp
sub
pushf
or
fstpt
notl
sbb
outsb
inc
sbb
je
jno
jecxz
mov
pop
or
sub
sub
pop
push
push
out
fistl
mov
int
cmp
push
jns
xchg
arpl
adc
jge
testl
ss
adcb
jne
shll
jmp
dec
dec
out
mov
jge
hlt
xor
push
out
sub
fwait
dec
sub
inc
cs
iret
mov
xchg
xor
loope
add
jle
sahf
pop
sub
mov
hlt
pop
adc
rorl
jmp
aad
call
arpl
add
xchg
outsb
nop
mov
loope
ss
jb
test
dec
jae
stos
cli
inc
fidivl
call
cmpl
insl
push
cld
pusha
rcr
inc
and
mov
into
jne
lret
inc
xchg
testb
int
cmp
jnp
sub
pop
cmp
call
call
or
jo
mov
cmp
call
jmp
cmp
loop
pop
pop
jmp
push
xlat
subl
imul
cli
add
insb
pop
xor
lock
or
and
insl
inc
mov
inc
xorl
aam
push
pop
cmp
fildll
inc
sbb
jl
fcompl
pushf
cmpsb
mov
sub
mov
dec
in
pop
mov
ja
adc
cmp
add
fdivl
in
mov
lret
sbb
aaa
insb
push
popa
repnz
and
sub
xchg
dec
or
sbb
es
das
dec
jnp
cmp
or
cltd
pushf
outsl
fs
stc
mov
lahf
mov
mov
sbb
mov
mov
mov
push
fldl
cmp
fsub
or
rclb
mov
cld
jno
cmp
cwtl
fdivl
or
gs
adc
cmp
ret
daa
push
ret
cmpl
mov
jb
sub
jbe
fdivs
addl
into
mov
das
aam
xchg
mov
or
xor
pop
cmp
adcb
xchg
packsswb
jecxz
out
stc
add
pop
ss
into
das
inc
out
mov
sahf
cmp
test
iret
int3
push
jp
out
sbb
in
push
pushf
dec
iret
insl
jg
out
pop
notl
inc
cmpsb
lahf
push
jecxz
aas
movsb
pop
dec
sub
cmp
mov
aad
add
daa
push
xchg
or
mov
add
icebp
fsts
mov
popf
jle
int
cmpb
aad
add
pop
out
add
popa
cmpsl
jne
or
xor
xor
ret
inc
lock
add
std
pop
push
push
js
mov
mov
or
and
cmpsl
call
cwtl
fsin
cmp
mov
sbb
sbb
fimuls
icebp
inc
es
sub
ja
out
dec
lret
pop
lcall
fcom
xchg
push
mov
mov
cmc
sti
cmpsb
ret
mov
sub
enter
dec
mov
jnp
dec
out
lds
xchg
sbb
int3
loop
mov
fsubl
add
xlat
js
sbb
sub
push
sti
ror
dec
in
imul
pusha
idivb
xor
jp
dec
fsts
sahf
shrl
in
fstpl
sahf
mov
push
fiadds
jp
out
xor
cmpsb
repz
and
jmp
mov
push
xchg
dec
sub
or
ror
sub
orl
mov
xor
fwait
in
jmp
cwtl
dec
sbb
js
xchg
mov
sub
int
mov
sbb
xor
lods
stc
xor
bound
push
pop
add
or
into
mov
lret
jne
movsb
fisttpl
xchg
test
and
pushf
push
jecxz,pt
fs
xchg
cmpsl
out
mov
inc
jmp
and
les
push
inc
mov
daa
movsl
push
or
lcall
fcoms
cmp
jmp
xor
outsl
mov
into
xchg
mov
clc
sub
jge
jg
loop
add
jle
push
and
clc
and
cmp
sahf
aas
xchg
xchg
jge
sub
ret
imul
ret
jae
push
mov
sub
adc
or
aam
or
lcall
jge
dec
xchg
jp
fistl
outsb
aaa
fistl
push
pop
data16
cld
push
lret
sbb
jmp
pusha
nop
adc
jmp
cmp
iret
xor
mov
xchg
sahf
cs
leave
adc
outsb
dec
push
cmp
adc
out
push
je
sbb
repnz
outsl
in
dec
xchg
test
and
ret
movsl
out
repz
add
loop
ja
adc
and
mov
cli
testl
or
fidivrl
pop
push
xchg
cmp
mov
xor
xor
inc
jp
aaa
sti
xchg
adc
adc
jge
rcrb
sbb
push
adc
xor
cwtl
mov
lods
push
xchg
mov
jmp
pop
mov
lret
mov
test
es
push
orb
xchg
into
jecxz
jecxz
outsb
loop
sbb
rclb
lret
xor
fldl
or
jecxz
dec
int3
lods
pop
jb
movsb
dec
adc
cmp
pop
cli
and
ja
pop
mov
jbe
lret
mov
mov
ret
inc
pusha
push
xlat
stos
mov
pop
lods
loopne
lock
or
js
xchg
icebp
jge
cld
xchg
lods
cmp
and
mov
push
adc
fildl
add
jbe
adc
icebp
fimull
shll
pop
into
sbb
movsl
pop
test
lods
ljmp
and
or
push
arpl
cmpsb
pusha
add
les
pop
xchg
dec
cmp
xor
pmaddwd
mov
cmp
out
sbb
loopne
pop
xchg
rorl
mov
xor
imul
xor
pushf
mov
pop
popa
stc
and
ret
test
aad
sbb
in
inc
hlt
insb
cmp
jb
loop
outsb
pop
or
stc
popa
movsb
inc
psllw
sbb
mov
pushf
hlt
and
mov
cltd
cmp
xor
mov
subl
stos
js
jge
scas
sbb
cli
cltd
cwtl
jo
fdiv
lret
xorb
and
cmpl
bound
dec
push
pop
xor
test
dec
inc
push
not
insl
mov
fdivl
popa
sti
cmp
addb
cmp
jle
mov
rep
sub
inc
or
pop
aad
jo
ja
dec
out
mov
adc
iret
mov
fmulp
fiaddl
enter
out
jecxz
scas
mov
in
je
movsl
push
dec
cmp
push
enter
cmpl
or
cmpsb
xlat
aam
daa
lock
jle
ss
mov
loope
adc
es
lcall
stc
aas
pop
and
int
push
insl
push
cs
mov
jle
mov
lcall
rcl
pop
sbb
sti
leave
cmpsl
pop
enter
leave
mov
aas
in
std
push
mov
dec
int3
xor
addr16
pop
imul
leave
pushf
aas
cs
add
mov
dec
stc
pushf
mov
add
fstps
and
and
out
fs
lods
dec
add
sbb
out
aam
ror
ret
sub
jl
rcr
jb
loope
js
cmpsb
rol
aam
jnp
icebp
fnsave
cld
iret
lds
scas
movsb
mov
fsubrl
mov
icebp
sub
dec
inc
add
add
sbb
sbb
xor
cmp
nop
inc
inc
loopne
sti
movsl
add
leave
js
jb
ficoml
or
out
pop
imul
sbbl
pop
mov
orb
js
add
xchg
mov
or
call
cmp
lahf
aas
sbb
stos
sbb
icebp
sbb
ret
mov
test
jl
cmp
pop
mov
pop
icebp
adc
nop
adc
xor
pop
jle
lods
mov
movsb
fstpl
xchg
data16
lahf
xchg
or
aad
dec
or
subb
pop
clc
in
mov
aas
cmpsl
inc
stc
or
mov
adc
sub
cld
test
ret
sub
add
adc
out
fsubr
stos
test
fdivl
loopne
rorl
in
xchg
pop
sbb
sarl
es
mov
fists
add
jp
mov
loope
shlb
out
or
pop
movsl
cmp
stc
jp
lret
push
mov
pushf
test
dec
cmp
mov
bound
shll
cmp
xor
jns
aaa
inc
mov
loope
and
test
fldenv
jmp
cmp
cli
jle
or
pop
jg
dec
mov
cmp
imul
inc
jne
dec
in
adc
adc
enter
pop
les
hlt
imul
pop
les
mov
sub
add
test
mull
lock
mov
xor
stos
mov
stos
lea
sub
push
mov
jns
into
sar
int
cmp
push
or
mov
mov
mov
pop
jno
dec
push
gs
push
es
clc
add
aad
pushf
in
hlt
jno
out
shrb
ljmp
stc
pop
mov
es
rolb
mov
aad
inc
cmp
cmpsb
lret
mov
jo
sub
repnz
adc
daa
mov
lds
testl
or
sahf
cld
leave
push
outsl
loope
mov
push
sahf
lret
jne
mov
cmp
outsl
push
insl
xor
iret
mov
ficoms
arpl
int3
and
loop
mov
inc
jmp
iret
scas
xchg
push
dec
repnz
xchg
inc
or
shll
cmp
jb
dec
scas
fldt
imul
lods
or
rcl
push
jle
out
ljmp
pop
cmp
pop
sbb
fdivr
or
add
xchg
mov
cmp
fstpl
or
test
mov
sbb
or
mov
shll
mov
mov
jno
and
xchg
cmp
jnp
pop
fnsave
ds
pop
outsb
testb
or
mull
jg
pop
push
sub
xor
dec
leave
cmpsb
mov
scas
pop
jbe
out
lcall
outsb
stc
pop
mov
and
push
sbb
jg
add
iret
shll
testb
lahf
xor
mov
inc
inc
adc
jl
jmp
push
popf
popa
pop
fwait
in
movsb
or
repz
fildll
mov
xlat
or
ss
mov
cmpsb
mov
fmuls
loopne
into
sahf
push
scas
movb
rcl
and
push
mov
fwait
push
push
aaa
xor
adc
dec
jl
dec
push
mov
xlat
add
mov
daa
out
lods
iret
stc
cmpsb
mov
xor
jg
pusha
inc
hlt
in
mov
add
in
lret
adc
clc
test
jg
xchg
jnp
jecxz
fstps
adc
xor
cltd
out
xchg
pop
mov
mov
sar
enter
mov
movsl
adc
jns
lds
inc
cmpb
jg
out
xor
push
rep
movsb
add
add
dec
gs
stos
cmpb
or
pop
adcl
lds
jl
pop
inc
cmpl
push
pop
movsl
mov
in
lahf
repz
enter
push
in
arpl
jne
jo
inc
mov
not
sbb
jo
push
in
mov
aam
popf
mov
fwait
dec
mov
adc
aam
clc
addr16
mov
sbb
test
cs
inc
inc
cmp
dec
xor
push
inc
push
xchg
xor
movsl
pop
cmp
gs
jns
adc
fiadds
pop
out
inc
fdivs
dec
out
sub
sub
dec
sbb
push
pop
ljmp
cltd
push
mov
pop
sbb
add
pop
xor
rol
mov
jge
out
cmpsl
rorb
jp
movsb
leave
aas
xor
adcb
push
mov
xchg
add
push
cwtl
inc
popl
and
out
jne
fld
mov
fbstp
out
lods
push
sbb
mov
scas
out
pushf
test
mov
pop
push
insb
fnstcw
lock
pop
repnz
ret
sti
adc
cmp
pop
ja
mov
mov
jns
push
jg
xor
cmpb
out
shrl
js
add
stc
pushf
dec
push
push
pusha
clc
inc
jne,pt
stos
pop
sti
mov
in
sub
xchg
insl
pop
dec
xor
out
inc
sarl
xor
testl
jnp
push
xchg
xor
js
pusha
mov
scas
cmp
inc
xchg
mov
and
pushf
mov
mov
mov
or
mov
mov
cmp
xlat
xchg
iret
inc
and
adc
jp
ret
mov
and
adc
jmp
in
pusha
sbb
iret
stos
shll
jecxz
cmp
pop
iret
jbe
add
movsl
or
pop
std
scas
add
mov
negl
pop
arpl
jge
leave
sarl
jnp
cld
dec
and
xor
into
sti
cmp
xchg
or
or
cwtl
lret
jbe
adc
loope
xchg
dec
or
arpl
pminub
pop
xor
outsb
repnz
dec
jle
fstl
leave
jne
leave
fists
imul
cmpsb
out
and
shlb
jae
jno
xor
xlat
xchg
add
fs
inc
push
adc
xchg
push
jecxz
xchg
aaa
pop
shl
imul
pop
mov
mov
inc
sbb
lcall
cmpsb
mov
aam
mov
push
js
cld
add
xor
sub
dec
sbb
inc
jge
mov
sub
movsb
mov
xchg
movsb
inc
xor
pop
das
xchg
push
scas
mov
outsb
mov
inc
jp
in
aas
inc
insl
mov
sub
ffreep
dec
rcrl
cmp
push
lods
inc
mov
fnstsw
mov
cmpsb
outsl
insb
fwait
aad
into
mov
ds
push
testl
dec
ret
mov
pusha
pop
pop
stc
mov
repz
fimull
pop
xchg
repnz
xchg
sbb
dec
sahf
mov
icebp
das
es
mov
test
xchg
xor
xor
aad
jp
in
jge
into
push
push
push
pusha
movsb
pop
addr16
xchg
push
out
jb
jg
xchg
add
xchg
or
mov
divb
movsb
clc
add
sbb
jb
pop
iret
or
sub
push
outsl
not
mov
mov
push
sbb
lods
push
jno
sbb
repz
repz
in
cltd
or
cli
leave
sbb
mov
dec
loop
sbbl
xor
std
xchg
push
dec
xchg
mov
mov
pop
jb
imul
cmp
cltd
mov
mov
cmp
repnz
pop
fsts
mov
fiaddl
inc
out
scas
in
sbb
adc
hlt
and
or
or
pop
dec
or
ss
subb
push
fildl
lahf
jmp
dec
and
jae
out
pop
add
scas
rorb
aam
mov
sar
arpl
arpl
inc
scas
sub
mov
mov
mov
inc
adc
sub
xchg
jae
cmp
data16
or
aad
mov
xor
stos
xchg
repnz
xor
cmc
test
cli
sbb
jle
ficompl
pop
pop
add
jne
cmp
push
sarb
cmp
push
mov
loopne
dec
push
imul
fmuls
mov
ret
pop
bound
leave
jae
cltd
shlb
test
in
xchg
ret
rolb
inc
cltd
pushf
call
stc
jb
sbb
push
outsl
inc
inc
repnz
adc
xchg
push
sub
call
loopne
daa
sti
je
insl
sub
shrl
cmp
mov
jo
sub
cmp
mov
jle
lds
nop
xchg
dec
ljmp
xchg
jae
push
push
das
ljmp
add
inc
fsubr
inc
jmp
mov
and
push
sub
push
icebp
adc
dec
shlb
add
pop
xor
and
vpsubq
adcl
mov
shll
lret
nop
inc
repnz
cmp
popa
fidivrl
daa
in
dec
ljmp
fdivl
adc
inc
jp
xchg
aas
pusha
xchg
test
scas
mov
cmp
inc
mov
in
mov
fsubs
dec
jne
pop
push
inc
sub
mov
push
sub
xor
pop
push
adc
rcr
rcrl
movlps
mov
pusha
sbb
pop
mov
lds
push
es
sub
jl
push
adc
shlb
cld
inc
jbe
call
cmp
andb
das
jnp
xchg
pop
iret
pop
lcall
and
jno
ret
pop
adc
jg
je
scas
call
lods
lcall
push
dec
dec
loope
lahf
mov
and
mov
out
out
sbb
and
cmc
mov
decl
push
pop
in
mov
lock
jo
cmpsl
cltd
jge
or
push
pop
xor
dec
push
push
sbb
xchg
fldenv
stos
adc
aaa
inc
int
jge
or
adc
cmpsl
mov
sbb
pop
push
test
adc
xor
push
scas
push
cmpl
dec
mov
inc
pop
stos
inc
xor
push
jo
int3
mov
divl
or
pop
or
stc
inc
rol
gs
push
ds
stc
mov
shrl
dec
test
xchg
pop
iret
sahf
push
push
push
mov
je
ja
lahf
iret
dec
xchg
lahf
xor
pop
aad
daa
sbb
push
arpl
pop
sbb
xor
inc
jo
push
xchg
fmull
add
cmp
scas
xorb
push
xchg
js
mov
xchg
in
aaa
loopne
sahf
and
in
in
outsl
rcrl
push
push
movsb
rcrl
xlat
push
xor
mov
pop
test
inc
or
mov
loope
xchg
xor
and
dec
pop
jge
outsl
mov
cmpsl
fadd
fldl
popa
push
cmp
stos
imul
xchg
out
mov
out
cmp
jne
scas
add
xchg
or
mov
ret
in
dec
sub
sub
insb
inc
or
rclb
rcr
outsl
jl
lods
in
stos
or
sbb
aam
mov
pop
xor
or
pop
add
pop
xor
jnp,pt
jbe
out
mov
jmp
int
cmp
mov
stos
pop
xchg
jne
sub
adc
xor
mov
daa
dec
movsl
push
inc
cld
xchg
sub
pop
lock
sbb
ljmp
scas
lods
xor
out
sahf
mov
mov
fwait
dec
sar
ret
mov
inc
fstpl
stc
mov
xor
jne
cmp
mov
sub
jle
les
mov
xchg
jecxz
rorl
mov
push
test
pop
mov
popf
iret
fwait
enter
xchg
xchg
jp
hlt
ret
mov
std
in
testl
imul
dec
add
jp
fsubl
dec
repnz
mov
cmp
push
loop
pop
xor
sub
xor
aam
pop
mov
in
sahf
cmp
cmp
adc
cmc
sbb
popa
es
cmp
mov
cmp
rolb
dec
xchg
pop
out
call
in
fwait
aad
addl
cld
inc
xchg
add
xor
mov
add
sar
outsl
pop
data16
repnz
adc
or
lods
inc
rorb
in
movsl
dec
fadd
repnz
adc
adc
push
pop
les
cmp
sub
add
jp
jnp
mov
stos
dec
dec
roll
int3
fmuls
cmp
es
out
jg
push
fcoml
dec
lcall
fdivs
sahf
pop
adc
pop
pop
pushl
imul
push
insb
inc
ja
cmp
push
adc
inc
sbb
adc
jp
jp
fistps
pop
inc
push
aam
fdivl
push
jae
cld
or
dec
push
popf
jmp
shrb
stc
cmpsb
fistl
insb
out
popf
ds
cli
stc
mov
pop
pop
jecxz
outsl
call
hlt
jecxz
dec
add
inc
sub
jge
movsl
jmp
sub
adc
mov
add
sbb
leave
or
jg
test
rorb
loopne
das
xchg
out
das
add
mov
or
push
mov
sbb
jp
aad
sub
mov
sub
std
aad
add
jle
add
loop
inc
cld
cmp
fwait
mov
lods
xlat
popf
test
push
sahf
imul
pop
cmp
xor
cwtl
nop
and
dec
test
enter
stos
push
mov
jno
jno
jne
cld
xchg
mov
push
mull
sbbl
or
cs
popf
stos
pop
out
cmc
jg
lret
xchg
out
js
arpl
fisubrs
in
out
add
into
mov
or
jecxz
lds
jb
pop
pop
fadd
mov
arpl
xchg
imul
lret
pusha
pusha
rclb
sahf
leave
mov
jns
lret
lret
in
add
or
pusha
adc
rolb
xor
mov
jge
test
outsb
das
jle
mov
adc
scas
sarb
pop
xlat
adc
xor
jbe
add
nop
jp
xchg
rorl
lret
fwait
xchg
inc
add
fnstcw
mov
mov
in
xor
jno
inc
bound
cmp
in
inc
inc
dec
xchg
mov
cmpsb
mov
dec
pop
cmp
or
mov
rcrl
push
jo
xor
inc
add
das
enter
xor
mov
sarl
jg
fcoml
mov
adc
mov
aam
outsb
adc
mov
insb
std
and
in
add
decb
dec
sarb
lcall
push
out
mov
movsb
jno
mov
loopne
in
sbb
lahf
shl
dec
fidivs
add
fs
jnp
xorl
xor
xor
mov
and
jle
repz
dec
cwtl
fsubl
mov
movsl
pop
xchg
mov
iret
ficoml
cld
mov
push
mov
cltd
cmp
push
movsb
out
imul
pop
push
sbbb
push
lock
mov
mov
jl
xchg
enter
cmp
push
mov
cmp
pop
lds
sub
jmp
hlt
rcpps
inc
rclb
incl
mov
xchg
xchg
pop
int3
lcall
fistpl
ja
ss
insb
xchg
leave
dec
xor
ss
xor
iret
jbe
stos
push
jmp
sbb
lret
cs
xchg
cs
pop
pop
cld
pop
mov
insl
mov
loop
push
mov
xchg
mov
lods
aaa
pop
mov
hlt
aas
jne
sbb
lcall
addb
daa
movsl
inc
in
dec
adc
jl
int3
and
dec
repnz
add
ljmp
mov
mov
lret
xor
mov
pusha
or
addr16
pop
div
ja
mov
ja
cmp
jmp
imul
mov
out
scas
sbb
mov
push
jp
out
cmpl
sbb
mov
int3
outsl
cmp
test
dec
sub
and
loop
leave
loopne
out
in
jle
scas
rorb
dec
dec
dec
sbb
push
icebp
test
scas
pop
pop
icebp
mov
push
push
shl
jns
add
out
cld
loopne
jae
mov
pusha
das
pusha
jle
sbb
xchg
rcll
add
mov
icebp
pop
adc
les
and
aaa
cmp
adcl
test
divps
jb
enter
adc
adc
or
push
push
dec
mov
xchg
jl
pop
jl
cmp
shlb
popw
cmpl
adc
dec
repnz
pop
mov
cli
stos
adc
lahf
popf
xor
dec
jbe
cwtl
call
xor
or
orl
push
xchg
lock
push
fistl
jmp
and
arpl
and
sub
scas
adc
dec
ret
mov
mov
mov
push
ljmp
iret
mov
push
add
mov
jb
orl
ret
scas
out
or
jge
lahf
popa
mov
and
cmp
shll
add
scas
push
push
jp
rol
lret
scas
jns
ss
mov
test
cmpsl
sub
in
xchg
mov
insb
mov
mov
lea
mov
xlat
dec
sarl
push
outsl
outsl
jmp
mov
out
cwtl
jmp
cwtl
or
je
add
mov
lock
add
fnstenv
sub
rcr
mov
repz
shlb
in
pop
push
push
cmp
aad
mov
sub
pop
xchg
sub
add
mov
mov
lock
ficoms
xchg
cmp
scas
push
sti
pop
repz
out
movsb
sbb
pop
decl
enter
jg
in
pop
and
sbbl
test
cwtd
in
fcmovb
cwtl
mov
lcall
repz
ficoml
dec
test
sbb
nop
pop
add
xlat
xchg
xorb
adc
cld
add
add
int3
and
outsb
dec
inc
nop
xchg
jl
inc
pop
or
sbb
icebp
in
data16
ret
lds
stc
fists
add
les
xorl
ss
and
imul
jmp
push
xor
jl
std
stc
loopne
repz
es
inc
xchg
fsubrl
or
xchg
mov
out
sbb
mov
sbb
sti
gs
out
ret
cmp
push
fcoml
dec
add
sub
movsl
adc
lahf
fwait
xchg
inc
sarl
add
test
pop
out
aad
jno
mov
iret
dec
fldenv
cmp
sbb
test
loop
popf
lahf
divb
popf
mov
or
sti
jns
aam
cmp
dec
adc
repz
aam
jb
jne
dec
imul
sub
xor
or
jg
cwtl
addb
xor
push
xchg
insb
add
insl
jp
arpl
outsl
mov
cmp
push
or
aaa
sbb
imul
adcl
ljmp
xor
add
lret
push
std
fmuls
dec
mov
sub
test
push
inc
or
mov
sub
push
adc
push
inc
and
mov
shll
jmp
sub
add
jp
decl
test
pushf
gs
iret
cli
je
leave
inc
lahf
int3
addr16
jle
pop
jmp
sahf
inc
imul
sahf
loop
push
and
xchg
adc
fs
psubq
or
xchg
sub
dec
jno
pop
test
or
sahf
dec
mov
jp
neg
cwtl
mov
test
aam
push
add
clc
int3
jo
pop
pop
inc
adc
inc
mov
jecxz
mov
mov
xor
xchg
shll
mov
cli
mov
sub
mov
frstor
push
push
data16
out
and
cmp
sub
add
xchg
lds
mov
sub
test
jb
lret
ss
cli
xor
push
mov
pop
add
and
pop
fld
sbb
xchg
fmulp
mov
repz
mov
xchg
int
cmp
pop
push
jbe
add
aad
push
enter
sbb
je
or
and
in
push
int3
lock
loop
mov
lahf
inc
test
clc
pop
repz
cmpl
lahf
add
cmp
push
push
cmp
sbb
push
das
mov
incl
aam
clc
dec
sahf
into
loopne
mov
mov
jp
movsl
mov
xor
or
scas
ss
xchg
lret
ficomps
adc
cmp
movsl
push
aam
xchg
sub
xchg
and
ret
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
movl
xor
or
mov
and
lea
mov
push
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
lea
mov
or
mov
and
mov
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
mov
addl
mov
add
sbbl
push
xor
mov
mov
movzbl
sub
mov
mov
adc
xor
mov
addl
add
movl
cmp
je
mov
movl
jmp
mov
movl
cmp
movl
jne
push
jmp
mov
movzwl
mov
cmp
jne
mov
incl
xor
add
mov
adcl
mov
mov
xor
sbbl
add
imul
and
mov
andl
xor
add
cmp
movzbl
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
jmp
imul
stos
sbb
fwait
loopne
jl
dec
pop
jl
inc
mov
adc
sbbl
add
adc
data16
xchg
pop
mov
sub
jl
mov
jns
jbe
jecxz
cmp
popa
popf
dec
inc
stc
sar
scas
sbb
aad
stc
mov
arpl
imul
xchg
cmp
outsl
jns
cmp
dec
dec
pop
sub
insl
cmp
mov
jne
push
dec
jl
cmpsb
jbe
push
imul
jb
loop
mov
les
cs
fdivrs
arpl
fsubrl
sub
jo
adc
pushf
mov
out
stos
push
clc
or
cmp
rep
xchg
or
nop
inc
movsl
popf
mov
insl
pop
fs
mov
pop
aam
std
cmp
mov
call
daa
adc
loop
pop
xor
pusha
lock
inc
xor
jmp
xor
pop
cmp
push
mov
pop
push
notl
int
lret
fsubr
movsb
add
mov
pop
insl
xchg
and
fistps
sub
rcrl
add
iret
xchg
in
mov
push
jg
aas
enter
inc
ss
mov
pop
sbb
mov
iret
sahf
jno
lods
mov
sub
int3
jno
or
mov
push
hlt
stos
push
pop
push
push
repnz
xchg
jo
or
and
sbb
pop
cwtl
cmp
loope
and
loopne
cmp
dec
in
cmp
jae
adc
lcall
sub
aaa
push
aad
insl
aaa
stos
jl
rclb
das
inc
out
test
adc
inc
out
mov
addr16
add
std
mov
inc
jb,pn
pop
sbb
jle
xchg
out
jecxz
clc
dec
push
cmp
push
cmpsb
pop
jbe
push
xlat
stos
outsb
xchg
pop
xor
push
fildl
jle
sbb
sub
cwtl
mov
jl
and
jge
imul
sbb
test
xor
sbb
or
fisubs
mov
pop
jne
aaa
add
cwtl
push
cmp
lods
xor
or
jns
inc
cs
mov
cli
mov
fbld
adc
pop
and
cmp
ds
xchg
out
add
das
cmpsl
adc
fistpl
out
imul
sti
sub
je
push
adc
ftst
jp
push
mov
xchg
mov
pop
jl
or
cmp
ja
ret
mov
pushf
xor
jne
shr
jno
pop
xor
push
sbb
in
cmp
jecxz
in
inc
fnstenv
xlat
inc
pop
cmpsb
mov
mov
dec
or
je
mov
mov
int3
xchg
sbb
push
lret
repz
test
js
pop
xor
out
lock
cltd
mov
and
in
mov
inc
imul
adc
aam
and
sbbl
repnz
jmp
mov
mov
arpl
rep
inc
rorl
mov
in
pop
imul
mov
arpl
data16
stc
jns
lcall
out
inc
stos
pop
stc
in
aas
jge
add
adc
cmp
fisubs
sarl
in
es
mov
cld
jle
mov
loopne
or
jmp
lea
xchg
jbe
aam
rol
fsubl
mov
shlb
shrl
push
pushl
lahf
push
ja
clc
jns
icebp
mov
fsubs
cmp
iret
out
movl
dec
addr16
and
sbb
mov
push
or
dec
insl
bound
mov
addl
mov
imul
in
xor
and
pop
xor
cmp
scas
imul
pop
jl
lods
mov
cmpsl
je
cmp
aaa
xchg
enter
mov
and
inc
mov
imul
add
or
xor
jge
movsl
xor
dec
js
jp
ljmp
xor
sahf
dec
mov
mov
or
fsub
scas
lahf
ret
mov
pop
jmp
imul
xchg
call
mov
and
movl
cmp
cltd
mov
add
pop
out
fwait
pop
icebp
sub
fdivs
dec
lret
sbb
movsl
ret
xchg
mov
or
add
mov
adc
adc
jp
xchg
movsb
jmp
sub
sbbl
dec
xchg
xchg
inc
call
jge
fsub
ljmp
cli
lods
or
add
inc
and
ja
adcb
jno
and
inc
mov
add
stos
in
jae
mov
and
outsb
imul
dec
fadds
dec
jle
adc
pop
iret
mov
ficompl
in
mov
sahf
and
jb
arpl
hlt
mov
jbe
lock
mov
cmp
sbb
pop
inc
mov
sti
stos
add
pushf
push
in
imul
sarl
sarl
les
popa
cltd
xchg
sbbb
dec
pop
in
cmp
adc
int3
pop
sub
xlat
jecxz
jbe
push
sub
stc
xchg
mov
pop
in
imul
aas
sbb
mov
shlb
xchg
xchg
orb
popf
inc
mov
ret
mov
into
add
pop
mov
js
movsb
pop
test
ds
jp
jmp
xchg
add
inc
aaa
cld
aaa
jae
fdivp
pop
pusha
call
push
xchg
gs
mov
mov
push
loope
mov
or
sub
les
or
push
movsl
dec
jb
dec
nop
xor
enter
mov
jmp
das
prefetchwt1
or
cs
or
jmp
sub
lea
jnp
scas
inc
dec
int
loopne
ret
hlt
fcmove
lea
mov
xchg
mov
push
mov
push
push
xchg
sbb
jne
out
cwtl
nop
pop
pop
add
hlt
and
mov
cld
ljmp
jno
mov
push
push
je
dec
xchg
int
jp
lahf
data16
shrl
ja
pop
scas
add
xchg
cld
xor
pop
divb
js
in
rcr
insb
lcall
out
push
fsubrp
fldl
sub
dec
sahf
loope
iret
cltd
testl
fmull
fstpt
shlb
xlat
mov
clc
sub
push
ret
mov
daa
jne
pushf
das
sbb
data16
mov
cmp
neg
lods
in
push
sahf
mov
stos
sahf
jg
inc
mov
loopne
pop
xor
pop
xor
int
dec
out
adcb
into
mov
or
addr16
xor
dec
and
js
jge
fstps
pop
cmp
in
xchg
out
cmpsb
cltd
mov
mov
movsb
jno
xlat
sub
scas
adc
mov
inc
jmp
ret
adc
jb
testb
jmp
in
rolb
jle
popa
mov
mov
mov
mov
in
cmpsl
or
cmpsl
sub
enter
scas
and
inc
je
sbbl
ljmp
xor
mov
lret
dec
stos
jne
insl
in
pop
pop
movsb
ja
rcll
jmp
sbb
test
xor
pop
and
shll
and
or
mov
pop
mov
or
test
out
add
andl
sub
and
mov
in
xchg
repz
pop
scas
cwtl
jb
push
bound
cmp
into
sub
and
pusha
mov
mov
mov
popa
frstor
fwait
cmpsl
cmp
add
or
stos
pop
fdiv
clc
shlb
cmpsb
iret
jno
mov
iret
aad
jae
dec
dec
mov
xchg
dec
test
je
jnp
pop
add
rorl
jmp
icebp
adc
jp
leave
adc
cli
xor
les
dec
mov
jmp
insb
sub
jl
subb
jp
push
push
push
jmp
test
add
hlt
jno
mov
ljmp
mov
pushf
mov
xor
xchg
mov
testb
subb
repnz
outsl
and
inc
mull
mov
roll
in
push
xchg
ret
xor
stos
cltd
mov
inc
sti
xor
lock
aaa
mov
hlt
inc
and
cmp
pop
clc
mov
popf
push
ds
cltd
mov
daa
mov
mov
imul
sbb
in
sbb
and
fstpl
std
push
xchg
mov
pop
lea
mov
push
cmp
cmp
repz
std
mov
imulb
push
mov
iret
pop
jno
aaa
lods
pop
sbb
or
xorb
adc
clc
js
cmpsb
push
mov
lahf
dec
test
push
adc
ja
movsb
sub
std
mov
das
arpl
or
sbb
cmp
ljmp
push
add
aad
loope
pop
scas
xor
dec
mov
jne
stc
push
mov
xchg
push
bnd
jne
push
ja
cmc
mov
int3
mov
stos
adc
scas
aaa
aas
pop
mov
pop
mov
lret
ret
push
pop
in
out
inc
jecxz
dec
push
xor
dec
sub
adc
aam
scas
lods
das
lcall
mov
push
sub
xorl
lds
pop
imul
push
stc
clc
mov
sbb
clc
pop
mov
add
icebp
push
push
mov
lods
lods
test
cmp
dec
push
test
ficompl
mov
jl
ja
cmp
es
xor
loope
inc
xor
cs
scas
aaa
mov
sti
insb
cmpsb
fmul
jbe
or
mov
mov
mov
mov
inc
adc
or
int3
xorb
mov
and
jmp
leave
mov
pop
pop
loope
movsb
clc
loope
fs
in
out
cmc
fistl
inc
mov
push
sub
xlat
jbe
rorl
adc
inc
outsl
js
cmp
mov
pushf
fisubl
and
aad
mov
and
icebp
nop
dec
pop
adc
data16
clc
add
push
pop
pop
jle
pop
jecxz
jnp
popa
jmp
ss
lahf
mov
lods
movsl
fstps
icebp
xchg
dec
rep
push
std
fisttps
jno
pushf
cmp
movsb
bound
push
sahf
loop
dec
divb
inc
xchg
loopne
jae
and
lret
mov
das
mov
adc
sbb
push
les
imul
fsts
test
jnp
push
lcall
cmp
and
jmp
mov
pop
xchg
outsb
popa
popa
movsb
mov
xor
mov
and
mov
enter
loop
mov
and
dec
adc
adcl
xchg
adc
les
clc
mov
adc
sti
push
jbe
or
mov
repnz
es
add
sahf
inc
stos
sbb
shl
pop
mov
pusha
cmp
jnp
dec
push
jge
insl
push
je
aas
loope
mov
sarl
fimull
cltd
nop
sbb
iret
add
pushf
xlat
mov
jl
dec
cmp
or
subb
das
imul
and
add
es
push
mov
pop
pop
pop
xchg
mov
push
xchg
push
xchg
js
lcall
and
cltd
bswap
cmp
inc
xor
push
add
mov
ljmp
ret
test
add
sbb
movsb
cwtl
lret
std
leave
mov
push
int3
cmpsl
out
or
fnstcw
clc
mov
icebp
jecxz
push
mov
add
cmp
ja
mov
pusha
dec
rcl
test
mov
pusha
xor
cmp
push
shll
cltd
fxch
adc
push
outsl
xor
or
rorb
jmp
test
sub
test
cmp
xor
pop
movsl
fcoms
movsl
js
pop
inc
inc
es
xlat
inc
fcmovbe
sti
sbb
add
pop
shlb
mov
jns
pusha
psubq
mov
stc
push
fwait
sbb
divb
cmp
pop
andb
pusha
inc
dec
shl
js
daa
xor
sbb
pop
addr16
ljmp
xchg
xor
ret
inc
rcr
in
inc
lea
aaa
ret
pop
sub
into
push
mov
cwtl
movsl
pushl
lods
push
mov
stc
dec
sti
dec
jge
loope
out
pop
lods
push
cmc
or
pop
adc
push
jo
push
jl
mov
es
jb
cli
cs
hlt
xor
mov
or
loop
xchg
and
or
lods
mov
sbbl
push
push
insb
insl
popa
ret
bound
cmp
push
enter
cs
icebp
jecxz
clc
fstl
push
mov
jg
sub
sub
fcmovnu
icebp
mov
enter
mov
jg
out
stos
testb
push
mov
movsl
mov
lods
pop
mov
daa
loop
inc
xchg
stc
adc
fsubrs
pop
pushl
push
cld
cli
mov
stos
cmp
mov
lahf
mov
ja
or
sbb
insb
push
push
xlat
inc
pushf
lods
loopne
sbb
adc
loope
aaa
jbe
les
mov
xlat
lahf
shrl
fsubr
dec
mov
lea
push
lcall
jb
sbb
jg
mov
xor
incb
sub
push
ljmp
pop
test
mov
hlt
fimull
loope
xchg
and
jne
and
in
fmulp
out
sbb
xchg
je
sbb
in
dec
mov
movsb
sub
sbbb
iret
arpl
mov
sub
int
adc
inc
sbbb
aam
lea
mov
dec
lret
sbb
and
mov
jo
into
stc
sbb
ljmp
sbb
cwtl
sub
ret
lods
mov
addr16
fstps
loopne
movd
push
jle
andl
lcall
add
ja
fsts
into
xchg
sbb
and
adc
mov
dec
lahf
cld
cmp
inc
ret
cmpl
cltd
cltd
sub
inc
or
xor
ja
ja
scas
leave
pop
testb
add
inc
mov
adc
adcb
mov
xchg
out
lcall
fs
ljmp
popa
dec
jb
iret
hlt
sahf
arpl
outsb
or
xchg
jno
mov
aad
shll
sahf
mov
clc
adc
outsl
sti
cmpb
and
cmc
cmp
cli
rcll
loope
dec
xor
jl
imul
adc
test
mov
push
sbb
nop
je
pop
arpl
sub
jge
lret
and
mov
adc
insb
outsb
pusha
xchg
mov
ja
fdivs
test
test
ljmp
push
cmp
test
test
test
test
adc
lahf
fmul
dec
lock
shlb
leave
in
pop
xchg
mov
cli
inc
je
ljmp
outsl
lods
leave
mov
es
adc
stos
mov
mov
fstpt
push
fcmove
jbe
shll
jo
push
shrl
add
push
js
dec
dec
xchg
add
sbb
inc
and
inc
sti
and
mull
xchg
adc
xchg
adcb
repz
mov
add
imul
xlat
in
mov
xchg
mov
xchg
insb
and
dec
and
jae
add
push
mov
push
jb
push
xchg
fdivl
inc
pop
fisubrl
repnz
mov
sbb
hlt
les
jg
jbe
push
loope
arpl
clc
adc
fldl
mov
xor
imul
sub
push
call
iret
test
mov
pusha
pop
xor
and
mov
insb
dec
and
mov
xchg
lock
sbb
push
fists
inc
adc
les
jo
jae
push
sub
lahf
iret
adc
decb
lock
dec
test
je
insl
cmp
mov
daa
cltd
mov
mov
ret
mov
stc
jne
or
push
dec
adc
mov
and
rcrb
movsb
dec
cs
lret
jne
jae
rolb
dec
pop
xchg
jmp
push
fstpl
cmp
add
cmp
mov
xlat
lods
mov
fdivrl
cmp
out
outsb
pop
sub
sub
popf
xchg
mov
adc
add
and
pop
jns
addr16
push
cmp
xchg
enter
call
cmc
pop
xor
push
aas
movsl
rolb
and
stos
mov
push
cmc
sbb
leave
cmp
xorb
or
int3
test
shl
imul
push
loop
adc
jmp
and
dec
pop
out
ret
shl
xchg
rcl
cmp
stos
cmp
push
cmp
icebp
in
rcr
cmpsl
scas
sbb
jae
stc
mov
cmpsb
gs
mov
lret
loope
pop
xchg
pushf
or
push
cmc
xor
shl
xor
out
aad
test
dec
call
jno
xor
ds
fldt
lret
fwait
jo
adc
aam
mov
aaa
cli
pop
mov
sbb
iret
mov
pop
in
insb
je
xor
or
jge
xchg
mov
and
aam
leave
xchg
sub
pop
cwtl
inc
push
mov
mov
fdivs
or
ljmp
dec
jne
pushl
inc
xchg
mov
in
stos
repnz
aas
xchg
leave
mov
in
stc
xchg
add
lods
jp
cli
xchg
pop
sbb
xchg
sub
sbb
leave
sub
pop
xchg
add
clc
outsl
xchg
out
pop
imul
fwait
push
sbb
orb
cmp
pop
mull
xchg
xchg
cmp
lcall
jae
test
pop
pushf
pop
jo
xchg
gs
adcb
hlt
lret
cmpsl
enter
mov
repz
mov
xor
xchg
hlt
outsl
negl
leave
loopne
nop
pop
out
mov
mov
iret
test
and
push
fimull
es
sub
sbb
adcb
pop
push
and
and
sub
mov
and
lcall
fstl
in
out
aad
push
pop
cli
and
movsb
mov
xor
sbb
insl
sub
cld
repz
inc
roll
das
or
js
out
movsl
loopne
popa
cmp
add
xchg
jae
mov
jge
call
rcll
mov
cwtl
mov
outsb
gs
pop
cmpsb
aas
cli
mov
and
int
sub
push
jb
add
xor
fdivl
imul
ficoms
aad
or
gs
adc
sub
or
xor
cmp
xchg
sbb
jmp
addr16
add
in
sub
in
xchg
ljmp
scas
inc
pop
test
jp
mov
mov
stos
sub
xor
xchg
pop
dec
adc
loope
js
aaa
imul
sub
stos
cmp
notl
jmp
fldl
and
ljmp
xchg
dec
cld
mov
dec
push
sbb
mov
dec
or
jge
in
push
add
popf
xor
xlat
mov
popa
pop
mov
dec
mov
inc
push
scas
jb
sbb
addr16
test
popa
data16
fcoml
jle
xchg
push
rcrl
shrd
adc
fsubl
arpl
in
mov
stos
stos
nop
inc
in
mov
outsl
jmp
and
outsl
fsubrs
frstor
xchg
xchg
out
scas
and
fdiv
mov
lahf
xchg
frstor
xor
lods
and
ss
pop
subl
ret
aaa
sub
or
rorl
jge
subl
fcomps
into
fisubs
adc
xchg
in
lods
jbe
fidivl
sub
xchg
fwait
jno
dec
mov
push
dec
jae
sbb
mov
pop
add
lahf
mov
clc
loope
je
in
sbb
lea
sub
jle
sub
rolb
mov
cmp
mov
adc
mov
and
movsl
std
cmp
xor
cmp
mov
filds
or
cmc
pop
fs
sub
and
jo
dec
mov
cmp
inc
je
xchg
jbe
push
xchg
cmp
out
mov
cmp
call
test
lods
adc
lods
jo
cmp
sbb
and
popf
sbb
dec
test
jo
adc
dec
fldpi
fsubs
clc
mov
jbe
sub
cmp
bound
sub
sbb
xchg
fwait
mov
call
mov
adc
and
dec
call
repz
and
push
adc
loop
fwait
cmp
jl
push
dec
ss
inc
push
filds
movsl
and
div
mov
sarl
sti
hlt
daa
dec
fwait
adc
ss
cmp
test
cmp
or
ret
sub
stos
cmp
test
out
mov
or
aaa
testl
jecxz
pop
sub
mov
insb
sbb
sbb
mov
xchg
pop
nop
adc
push
or
lods
mov
icebp
ret
push
lds
sub
jecxz
or
popa
add
out
cmp
das
pop
mov
fadd
pop
dec
xor
scas
test
aas
mov
cmp
gs
push
pop
repnz
mov
mov
leave
cmp
dec
inc
mov
cmpsb
clc
mov
mov
pop
idivb
mov
and
or
lods
xchg
bound
lfs
mov
mov
and
sub
cmpsl
add
push
inc
sti
fnsave
mov
lds
cmpsl
ret
lret
jb
inc
iret
sub
mov
dec
out
stos
jecxz
mov
adc
adc
cmpsl
mov
popa
js,pt
mov
xchg
sarl
outsl
push
sbb
loop
sub
jns
adc
es
sbb
push
rclb
mov
pusha
push
or
divb
dec
pusha
inc
pop
pop
mov
sub
add
fisubrs
es
loop
pop
cmp
test
cmp
or
mov
inc
cmp
xor
into
enter
icebp
inc
or
xchg
adc
adc
add
jns
int3
cmp
inc
push
mov
test
dec
sbb
xor
mov
pop
push
xor
jp
adc
lds
cmp
rolb
test
push
pop
subb
shrd
clc
ja
and
scas
lret
cmp
inc
lret
add
addr16
pop
aam
inc
cmpsb
es
xchg
dec
cmp
cmp
jno
ljmp
add
inc
aam
push
mov
ffreep
aam
and
add
std
pushf
stos
divl
lahf
mov
fs
mov
push
sbb
push
inc
cld
sub
les
pop
or
insb
cltd
sbb
out
add
popa
mov
arpl
imulb
cwtl
xchg
icebp
and
bound
add
push
sub
subb
ljmp
outsb
es
decb
rorl
dec
test
lds
jp
in
dec
rcll
mov
pop
cmp
aad
push
jno
mov
enter
in
adc
out
dec
stc
sub
lods
int3
ljmp
mov
jae
mov
sti
push
jae
push
sub
dec
jl
mov
aaa
sbb
test
jmp
lds
filds
int3
pusha
jp
ja,pn
or
es
out
push
or
scas
les
jae
divl
xor
rorb
push
in
addr16
push
test
mov
pop
cmpsb
shll
aas
lret
xor
jle
xor
addb
jae
mov
mov
pop
and
lea
jb
cld
hlt
push
push
ficoml
dec
rcrl
jbe
popa
in
aad
xchg
and
lods
xchg
mov
xchg
mov
movsl
mov
aas
les
jno
xchg
xor
add
loop
pop
push
sarl
adc
jne
loop
lock
test
ret
pushf
xchg
jg
andb
inc
cmp
cwtl
stos
jg
cwtl
negb
mov
stos
cmp
xor
out
and
shrl
loopne
add
lock
enter
lds
lock
ret
rorl
icebp
adc
mov
mov
mov
shrb
int3
lcall
cmpsb
enter
mov
xchg
sub
push
ret
fisttps
pusha
sub
pop
lds
and
inc
insb
fucomp
je
fcomi
and
add
xlat
xor
loopne
rorl
push
lea
push
call
ljmp
or
icebp
les
fildll
hlt
jge
inc
xchg
sub
pop
push
aad
lahf
test
pushf
ret
decl
int3
ss
dec
adc
pusha
sub
or
leave
xchg
pop
jo
xchg
js
test
push
and
fisttpll
into
adc
mov
inc
inc
add
xor
pop
inc
sbb
push
xchg
repnz
mov
push
pushf
pop
into
dec
push
sub
fimull
lods
cmc
sub
loop
jmp
sub
cmpsl
push
or
xchg
inc
lds
push
lods
inc
inc
cmp
shrl
pop
mov
leave
and
imul
cmpb
decb
sbb
imul
sarb
scas
rcrl
sbbl
or
push
jae
cwtl
mov
sub
push
push
dec
mov
inc
inc
push
insb
mov
jle
push
dec
pop
xchg
pop
sub
jl
mov
cmpsl
or
out
popa
pop
mov
outsb
cmp
adc
add
sbbl
movsb
or
incb
xchg
jno
lods
cmp
mov
fsubrs
adc
fldl
loope
add
push
inc
cmp
dec
fmull
push
daa
inc
fwait
push
mov
ds
xlat
fdivl
dec
xchg
inc
jns
and
mov
and
dec
xchg
pop
stc
cwtl
ja
cmp
js
push
pop
cmc
pushl
es
cwtl
pop
out
shrb
pusha
lock
pop
stos
mov
xor
int3
sub
pushf
in
pop
xchg
mov
ret
cmp
mov
aas
cld
sbb
addb
stc
test
stos
inc
xor
leave
push
pop
andl
pop
ja
cs
xchg
outsb
xor
hlt
dec
mov
and
dec
imul
xchg
push
mov
mov
xor
mov
test
cwtl
jle
xor
dec
insb
je,pn
push
sahf
push
xchg
add
aad
sbb
aas
sbb
in
and
mov
push
pop
bound
lods
cmpsb
jmp
stos
add
imul
int
sbb
imul
ret
or
push
pop
push
loopew,pt
push
mov
scas
add
je
jmp
sub
aam
ss
out
movsl
int
or
rcrb
and
mov
rcrb
cmp
mov
jnp
outsl
icebp
fldz
int3
ret
pop
sbb
lods
enter
mov
inc
jg
stc
mov
adc
xlat
sti
aad
fcomps
std
fwait
mov
aaa
popf
dec
pop
addr16
mov
sti
xchg
addr16
and
push
test
je
push
test
or
dec
testb
jecxz
jbe
cld
cwtl
arpl
rolb
cmc
jae
dec
out
cli
push
mov
xor
push
stos
roll
addr16
sub
mov
mov
pop
sub
lea
test
inc
lcall
sbb
pshufw
in
nop
loop
mov
mov
pop
icebp
sub
or
inc
test
pushf
or
mov
cltd
jecxz
or
mov
rorl
add
xchg
out
shl
add
ret
cmp
fimuls
sar
push
dec
or
add
divb
adc
repz
xor
adc
test
mov
jb
into
in
mov
push
or
mov
inc
mov
and
dec
inc
adc
cmp
test
js
test
mov
sti
xchg
dec
das
stos
shlb
adc
lds
ds
push
and
fs
aam
mov
pop
add
outsl
dec
mov
imul
cmp
stc
fisttpl
cmp
and
rorl
lahf
pop
inc
xchg
xor
sub
ret
aam
cmpsl
fsubl
cmpsl
adc
pushf
mov
jnp
and
testl
pop
bound
inc
push
adc
fildl
and
dec
rclb
sub
daa
aaa
stc
out
inc
mov
push
dec
sbb
loopne
pop
mov
pop
es
push
das
or
or
xchg
cmp
call
in
pop
jbe
or
sub
xchg
fsubr
fs
scas
subb
pop
int3
xchg
shlb
lahf
jecxz
push
out
xlat
insl
and
xlat
rcll
stos
cmp
stos
sub
lcall
imul
xchg
or
push
aaa
aam
push
addb
dec
clc
js
pop
dec
lcall
test
mov
xchg
lea
test
sub
rcr
ljmp
movsl
sbb
inc
push
push
mov
or
fs
adc
dec
jmp
mov
lods
imul
or
mov
and
push
sub
jae
cmpsb
fstpt
pop
push
stos
pop
stos
mov
mov
mov
gs
push
test
push
sub
imul
push
and
and
dec
cmp
lcall
fmull
fdivrp
jns
pop
mov
int3
leave
or
ret
gs
jnp
test
pushf
rorl
aam
int
push
das
or
push
shrl
or
scas
pop
xchg
ja
scas
arpl
ret
out
stos
mov
and
shlb
sbb
xor
pop
pop
push
sub
mov
insl
xor
shll
push
adc
sti
adc
repnz
jp
sbb
and
shlb
cmpsb
and
inc
jg
in
out
cmp
jb
loop
pop
push
mov
dec
cs
mov
repz
pop
cwtl
js
adc
push
imul
mov
std
add
push
jecxz
cli
icebp
mov
add
xchg
stos
mov
mov
orb
fwait
mov
cmp
shld
pop
adc
mov
test
insl
jae
imul
cwtl
shlb
cmp
call
mov
cmpsb
stc
jbe
rclb
pop
jle
sub
jns
or
hlt
ja
sbb
xchg
in
jp
outsl
adc
dec
mull
in
imul
dec
push
gs
sahf
push
rorb
je
inc
add
jne
sbb
push
adc
js
popf
ljmp
mov
pop
ja
push
pop
or
stc
or
cmpsb
adc
inc
sub
mov
xchg
bound
pop
out
es
or
dec
mov
pop
push
loop
or
dec
das
pop
cmp
std
sub
or
ror
cltd
scas
hlt
cmc
cmpl
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
andl
mov
mov
mov
xor
add
mov
movzwl
and
mov
mov
sbbl
xor
adc
push
sub
mov
movzwl
sbb
mov
negl
add
xorl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
push
andl
xor
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
push
call
jmp
and
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
push
mov
mov
xor
xor
mov
add
add
imul
mov
jmp
mov
in
xor
mov
sbbb
jl
aam
jl
xchg
pop
pop
cmp
lahf
cmpsb
movsb
adc
stos
lea
xorl
outsl
cli
loopne
or
lret
lock
or
outsb
cmc
rcl
lret
dec
pop
or
or
xchg
fldcw
cmp
call
add
jle
icebp
enter
sbb
cmp
into
ret
stos
int3
push
cld
inc
mov
push
insl
mov
mov
jne
es
inc
sbb
lret
ljmp
in
lret
bnd
lock
addr16
mov
mov
mov
and
popa
xor
jae
jb
sti
jg
out
subb
and
push
xchg
mov
fimull
rcrb
lods
cltd
js
xchg
xchg
jb
add
mov
inc
sbb
cmp
pop
add
jne
outsb
pop
insb
das
inc
mov
xchg
test
je
cmp
adc
add
aaa
pop
add
sbb
and
mov
sbb
xchg
out
popa
nop
insl
xor
xor
mov
out
cltd
test
mov
mov
jae
inc
mov
mov
addr16
xchg
mov
test
xchg
xchg
adc
fistps
mov
add
sti
push
sarl
jmp
test
lds
jbe
inc
fdivl
stos
cld
inc
test
push
mov
push
sub
jl
sti
aad
dec
cwtl
pop
sbb
inc
jb
mov
or
sbb
popf
mov
or
pop
mov
cmpsl
pop
test
lahf
stos
mov
jbe
adc
cmc
pop
fsts
mov
andb
mov
scas
cmp
push
or
mov
cmc
mov
faddl
adc
cmc
enter
jne
sar
jno
pop
dec
movl
imul
jl
repnz
cmp
mov
pop
mov
int3
out
xchg
fists
mov
sahf
idiv
push
ja
pop
xchg
sti
xlat
adc
das
add
mov
push
jne
or
cmp
xor
or
fstpt
sbb
scas
add
in
imul
pop
mov
enter
cli
xor
aas
dec
pop
idivb
and
adc
ljmp
xor
mov
lods
lcall
xor
or
dec
xchg
mov
or
enter
cmpb
sbb
dec
add
xor
pop
sub
test
jle
dec
sar
test
aam
lds
loope
xor
inc
xchg
inc
test
mov
mov
xor
clc
aad
sub
mov
ja
movsl
xlat
push
cli
or
icebp
push
pop
pushf
ret
or
inc
dec
aas
imul
push
out
out
rolb
cmp
add
push
mov
or
fstps
add
iret
lret
addr16
inc
add
lods
mov
xlat
test
jmp
mov
inc
enter
xchg
dec
sbb
outsb
push
jo
xchg
daa
les
rol
push
jge
inc
in
loopne
push
das
dec
pusha
jecxz
mov
mov
fs
call
xlat
lea
ds
pop
lret
sbbb
mov
stos
mov
sti
add
int3
sub
loopne
inc
nop
stos
add
cmc
push
outsl
ss
adc
adc
loopne
adc
std
inc
xor
pop
das
jbe
or
or
jmp
xchg
push
lahf
add
mov
dec
sbb
cmp
jb
add
and
jae
fidivl
inc
je
inc
adc
roll
mov
mov
mov
lock
je
pop
es
lret
test
cs
xchg
test
mov
fstpl
loop
out
jge
out
jecxz
aaa
ljmp
fs
push
mov
lods
repz
jp
test
mov
pop
and
sbbb
sbbb
fiaddl
lret
jge
push
pushf
insl
sub
mov
into
push
mov
mov
stc
lret
push
inc
pop
xchg
mov
imul
or
inc
repnz
pop
data16
push
in
xor
mov
movsl
out
lret
loope
push
add
jle
mov
bound
xor
ja
sbb
or
and
scas
inc
ror
and
leave
and
and
iret
aam
mov
insb
je
into
inc
bound
sub
jnp
mov
enter
jmp
cld
adc
or
adc
sti
fucomip
scas
mov
scas
cmp
ret
mov
lea
or
mov
shll
sub
testw
xchg
push
loope
daa
pop
adc
and
stc
jl
je
scas
adc
xchg
inc
negb
jo
xchg
sbb
cmp
jmp
in
hlt
jge
push
ljmp
jb
subl
lods
push
out
mov
dec
lret
lret
adc
jb
pushf
xor
xor
xchg
xchg
mov
pop
cmp
mov
dec
jne
push
mov
pop
ja
enter
sbb
call
inc
cmp
jmp
scas
clc
out
xchg
in
test
sub
repz
or
aam
lret
mov
shlb
leave
add
lds
cwtl
data16
fbld
cwtl
adc
das
mov
adc
inc
aam
les
adc
xchg
lds
dec
sti
inc
inc
jnp
out
sub
lods
push
dec
sti
inc
mov
mov
add
xchg
pop
and
push
gs
push
out
or
push
leave
popf
mov
mov
cli
push
sahf
inc
cmp
aas
sub
mov
fstpt
insl
in
pop
fisubrl
sbb
gs
adc
int
xor
sar
loopne
shrb
repnz
xor
mov
test
adc
jge
dec
dec
into
stos
mov
loopne
daa
mov
lahf
sbb
mov
xchg
push
notl
jmp
push
adc
les
lret
fisubs
cli
and
leave
roll
pop
mov
das
leave
sti
and
stos
fstl
scas
ss
jae
jp
mov
mulb
gs
mov
jg
test
movsb
loope
cmpsl
mov
cmp
aas
pushf
dec
jne
jnp
ljmp
lock
loop
pop
stos
mov
dec
flds
cld
pop
cmp
lods
mov
inc
fwait
mov
andb
clc
cmc
and
ja
std
and
cmpsb
mov
negl
cli
addr16
add
ja
insb
inc
cmp
pushf
jmp
push
xchg
mov
sub
popf
sti
inc
clc
mov
xor
push
mov
push
fcompl
pop
fwait
adc
and
mov
negl
mov
lret
xchg
std
fidivl
aad
add
in
sbb
lret
data16
scas
icebp
jmp
push
int3
hlt
int3
shrl
cmp
dec
add
outsl
ljmp
test
fsubrs
fistps
outsb
inc
scas
iret
xchg
scas
rcll
cmp
jns
arpl
push
mov
jp
pusha
jnp
and
or
xor
iret
imul
push
repz
mov
aad
or
sbb
jno
lods
xchg
sbb
int
leave
shll
cmp
or
xor
test
inc
xlat
andl
lcall
lahf
jp
shr
enter
xor
andl
nop
pop
jae
or
repnz
inc
mov
int
scas
inc
pop
orl
and
inc
lods
pop
fs
pop
mov
bound
loopne
repz
push
js
jecxz
sub
adc
jmp
or
or
jne
das
xchg
jae
mov
fists
pop
les
leave
es
dec
loopne
test
es
dec
cwtl
mov
mull
fsub
jmp
mov
pop
lods
cmpsl
push
adc
fisttpll
mov
outsb
and
bound
xchg
or
or
loop
ljmp
sbb
or
jge
scas
icebp
rcrb
cltd
inc
jne
fisubl
push
jb
push
and
and
sbb
xor
xchg
and
xchg
jnp
iret
sarb
mov
jmp
jmp
mov
jne
into
sti
adc
sbb
xchg
hlt
aas
xchg
je
mov
adc
mov
pusha
push
cwtl
or
push
add
divb
popf
and
sahf
or
dec
push
push
ss
inc
mov
fisubl
movsl
or
bound
es
and
cmpsb
mov
es
mov
add
pop
pop
lock
mov
jl
jecxz
and
inc
xorb
test
cmp
mov
inc
and
sub
mov
and
aad
or
arpl
rolb
fwait
inc
aaa
add
push
add
xchg
add
push
inc
test
jl
jne
iret
inc
push
lock
inc
adc
test
jl
lret
inc
jo
add
push
adc
pop
inc
add
mov
sub
div
cmp
dec
pop
mov
push
test
push
pop
add
push
and
pop
mull
and
pop
fwait
mov
std
jnp
int
fs
jns
mov
inc
stc
xor
addr16
xchg
cli
jg
loopne
mov
repz
jno
add
repz
jl
into
pop
lods
popf
les
and
push
imul
out
enter
cli
divb
shrl
mov
sbb
cmpsl
scas
adc
dec
xlat
xchg
push
xchg
sub
les
xor
xchg
and
loope
fbld
cld
xchg
stos
cmpsb
mov
mov
pop
jbe
dec
test
fldt
loop
cmp
inc
jge
inc
daa
fsubl
push
ret
inc
add
shl
or
jbe
cs
and
hlt
pop
gs
jo
setl
arpl
mov
imul
sub
push
cli
arpl
daa
cld
ja
pushf
xchg
push
sub
inc
sbb
adc
push
adcl
and
test
shll
xor
cmp
sti
into
nop
cmpsl
add
jg
sahf
push
cld
rep
add
cmp
or
addr16
mov
cmpsb
mov
fidivrl
es
xchg
mov
mov
jns
arpl
mov
dec
test
jbe
int3
loopne
xlat
inc
add
pop
pop
enter
cmc
xlat
data16
gs
add
dec
fidivrs
pop
fs
dec
into
ss
dec
mov
mov
pop
jb
inc
pop
test
movsb
pop
out
fimull
sub
popa
rdtsc
mov
testb
add
inc
dec
add
inc
pop
mov
cmp
scas
add
repnz
testl
and
rorb
fs
xchg
fimuls
cli
dec
les
push
notl
add
icebp
neg
les
je
stos
adc
add
int3
roll
lret
imul
lcall
repz
xchg
adc
jne
outsb
bound
out
sbb
mov
arpl
push
push
aam
mov
ret
jne
cld
pop
enter
movsl
lret
out
jbe
addl
adc
or
sub
sub
lcall
shl
outsl
or
nop
add
add
mov
cs
scas
push
test
xchg
xor
add
bnd
xchg
cltd
decb
arpl
test
xorl
mov
cmpsb
call
jns
push
jecxz
stc
out
andb
or
jecxz
jnp
shrl
arpl
inc
test
adc
or
stos
inc
ret
gs
nop
cmp
xchg
inc
test
add
enter
fwait
jo
sbb
bound
cmp
xchg
or
sub
outsb
xor
mov
jb
test
outsb
test
xor
lcall
out
cmp
mov
dec
jns
or
movsl
mov
or
stc
adc
push
mov
pop
jo
sub
or
adc
add
popf
daa
pop
pop
lahf
fwait
xor
dec
fadds
aaa
xchg
lds
lret
punpckhwd
in
xchg
iret
xor
and
das
mov
sbb
dec
push
jle
or
xchg
push
push
ds
out
push
fdivl
es
in
dec
int3
adc
and
es
sahf
push
mov
pop
xor
sbb
inc
mov
push
jg
ss
outsb
rorb
arpl
and
push
dec
cld
fcoml
push
pop
enter
and
pop
jle
sub
xor
insb
scas
mov
xchg
or
std
push
fsubs
das
es
bound
mov
push
or
mov
xchg
xchg
add
stos
addr16
leave
fidivs
lahf
std
push
fcompl
mov
push
jmp
cmp
push
repz
leave
pusha
mov
nop
or
sbb
push
outsb
mov
clc
out
in
daa
and
push
add
inc
cmpsb
push
arpl
sbb
int3
jno
ss
pop
subl
out
cmp
adc
bound
imul
loope
mov
ficoms
adc
in
mov
and
imul
pusha
lea
sbbb
push
dec
xchg
incb
test
mov
lcall
or
fimull
cmp
cmp
cmp
push
mov
aaa
pop
faddp
push
mov
xor
idivb
dec
int
imul
add
not
push
scas
xlat
in
mov
lret
mov
mov
test
cld
int3
pop
jge
out
fcomp
mov
movsb
jnp
jns
pop
jl
pop
jp
lods
js
dec
mov
jg
cltd
inc
cmc
pushf
mov
es
adc
mov
in
add
pop
dec
adc
call
ja
push
mulb
push
cmp
shlb
fidivrl
roll
cmp
cmp
sahf
sub
push
push
mov
mov
scas
imul
lret
sahf
ljmp
jp
jbe
test
testb
pop
cmpb
cmovnp
ds
mov
xchg
push
mov
test
movsl
or
pop
push
pop
add
je
inc
mov
mov
insl
gs
arpl
adc
fisubrl
xchg
xchg
andb
jo
jae
rorl
adc
inc
inc
inc
jb
sbb
and
xchg
nop
lods
pop
jecxz
shlb
mov
and
test
insb
push
popf
sbb
gs
lds
pushf
push
test
pop
xlat
in
xor
and
stc
ljmp
mov
bound
sub
jl
cld
cmp
cmp
lahf
cli
jno
enter
or
stos
push
cmp
jecxz
mov
ja
push
jmp
dec
int
enter
jae
pop
xor
jecxz
aam
insb
and
mov
hlt
dec
jp,pn
inc
roll
std
aas
aas
sbb
fs
xchg
lds
mov
dec
ret
push
ficompl
and
mulb
testl
dec
mov
inc
hlt
mov
movb
dec
movsb
data16
pop
call
mov
jmp
xor
cmc
jl
das
inc
ret
cmp
int
ss
nop
ret
jne
push
out
cmp
lock
in
and
pop
in
out
sbb
and
outsb
fmul
jp
inc
xchg
sti
stos
testl
cmpsb
add
lss
xor
dec
lret
xchg
mov
inc
cmp
xor
rcll
pushl
dec
mov
pop
in
stos
dec
cmp
repnz
addl
dec
and
jmp
sub
push
in
or
imul
rcrb
jecxz
mov
dec
sub
movsl
into
in
xchg
sbb
push
stos
dec
les
pop
xor
dec
icebp
sub
pop
stos
ficoml
push
inc
and
dec
fdivrl
and
jno
aaa
adc
call
aad
sbbb
xchg
outsl
inc
insb
mov
les
xor
mov
jno
cltd
or
dec
push
xchg
cmp
subl
add
inc
shr
loop
stc
fsubs
aad
dec
lahf
ds
iret
iret
xchg
mov
jge
mov
cmp
das
movsl
mov
xor
sbb
cmp
push
std
xchg
push
mov
in
dec
adc
shr
into
push
cmp
sti
sbb
ljmp
pop
mulb
aaa
cmp
rolb
mov
negb
scas
sahf
and
pop
inc
test
mov
inc
dec
pushfw
out
ffreep
jo
das
stos
hlt
and
add
mov
jle
into
pop
int
xchg
dec
out
xor
fidivl
test
mov
pusha
mov
sbb
gs
in
xchg
daa
shrb
mov
pop
xorl
adc
je
xor
rcll
out
pop
pop
inc
in
aad
mov
pop
testl
mov
mov
push
gs
aas
add
jb
in
std
ss
insb
push
mov
mov
out
flds
add
paddsb
mov
fstpt
or
fbstp
sbb
lds
mov
adc
jle
bound
out
test
aaa
fisubrl
pop
mov
cmc
int
fmuls
in
rcrl
cmp
in
or
dec
wrmsr
aam
lock
movsl
pop
sub
icebp
enter
mov
adc
outsl
mov
imul
out
stc
adc
in
ret
loopne
lret
frstor
dec
sbb
sub
lret
loop
out
push
pop
out
mov
jae
mov
hlt
ljmp
xchg
in
xor
icebp
jns
or
dec
add
mov
out
push
mov
cmp
xchg
std
ss
add
cmp
push
push
xchg
jl
adc
sub
inc
jp
and
test
ficoml
insl
or
inc
out
scas
sub
mov
push
xchg
xchg
cmpsb
dec
das
sub
and
cltd
dec
test
icebp
sub
lret
mov
xor
cwtl
pop
mov
imul
mov
dec
dec
push
and
mov
leave
mov
in
push
xchg
mov
sbb
loop
xchg
arpl
or
xchg
push
out
mov
cmp
add
out
fs
and
xorb
mov
pusha
pop
pop
mov
outsb
cmpb
xchg
cwtl
sti
lds
cmp
pop
and
mov
mov
rcll
add
mov
ret
add
push
push
sbb
push
inc
lods
xchg
cli
in
sub
dec
enter
iret
lret
fwait
adc
mov
jmp
lahf
cmpl
fnstenv
adc
cmpsb
sub
cmpsl
or
dec
jp
out
daa
jae
repnz
cmp
jnp
push
pop
jmp
data16
sti
cmp
dec
xlat
mov
daa
mov
out
lods
movsl
jl
hlt
cmp
mov
mov
test
mov
jmp
pop
les
xchg
and
pop
cs
jmp
xor
cmpsl
or
or
arpl
lahf
mov
mov
mov
mov
lcall
push
mov
daa
test
stc
mov
inc
xor
dec
daa
or
jmp
mov
xchg
jne
idivb
fidivrl
mov
and
or
scas
and
das
sahf
mov
xor
testb
lahf
cmpsb
push
inc
sub
mov
xchg
lcall
xor
shr
das
mov
bound
dec
cmp
sub
adc
inc
mov
lret
push
ljmp
repnz
or
xchg
das
and
outsb
push
mov
ds
jg
jl
sub
imul
inc
dec
leave
cmp
push
jp
scas
pop
dec
and
andl
push
std
mov
pop
adc
mov
ret
sbb
dec
dec
cli
jae,pt
fcoms
add
add
mov
movsb
xor
daa
xor
push
mov
clc
xchg
idivb
push
sub
popa
out
xchg
mov
xchg
cmp
sarl
add
sub
dec
bound
add
add
int
movsb
je
in
inc
testl
mov
adc
xchg
push
add
sub
mov
mov
mov
xchg
cli
cmpsb
adc
daa
inc
pop
stos
mov
xchg
lahf
sbb
mov
and
inc
cmpsb
mov
add
dec
cmpsb
sbb
das
sbb
insl
in
mov
mov
int3
pop
es
stc
mov
shlb
xor
xchg
movsl
gs
popa
xchg
mov
cmp
stos
test
push
mov
cmp
sbb
lods
cli
sahf
jecxz
or
aam
mov
push
mov
leave
inc
and
sub
pop
stos
xor
imul
faddl
sbb
or
test
jp
dec
int3
in
jmp
repz
sub
ret
out
cmp
loope
cs
in
and
sub
out
push
and
js
sub
lock
out
nop
jle
adc
loop
popa
outsl
leave
push
and
insl
mov
push
fwait
out
loope
cmovne
pop
pushf
push
inc
pusha
sub
jg
xchg
push
adc
fnsave
xchg
mov
dec
cmpl
dec
das
enter
xchg
lcall
mov
adc
inc
notb
push
out
inc
cmpsl
lret
data16
pop
push
cmp
mov
pop
sbb
inc
fadd
xor
mov
in
inc
rol
mov
dec
fs
lret
jne
mov
xchg
adc
bnd
add
xchg
bswap
loope
add
roll
enter
iret
rclb
push
add
mov
hlt
xor
imul
or
or
movsl
repz
divl
mov
fwait
inc
sub
mov
popf
mull
fists
fsubr
mov
daa
push
mov
in
mov
into
dec
mov
cmp
xor
sti
cmpsb
mov
adc
fisubrs
dec
xchg
adc
cmp
mov
popf
fs
jecxz
xor
pop
mov
sub
mov
subl
or
shrl
pop
push
mov
mulps
aaa
cld
mov
lcall
andl
mov
in
subb
out
addr16
and
push
pop
inc
fisubrl
fisttps
and
les
mov
add
sbb
push
mov
out
pop
ja
and
add
push
pushf
js,pn
inc
xchg
inc
in
cltd
bnd
push
sub
jecxz
adc
cmpsb
aaa
cmp
shrl
loop
xor
mov
xchg
mov
adc
and
scas
adc
mov
testb
jl
cwtl
and
jl
out
pop
inc
out
pop
call
and
and
or
xchg
nop
inc
mov
cmp
pop
fisubl
mov
xor
notb
pop
test
scas
xor
mov
fisttpl
xor
xchg
inc
xchg
mov
icebp
ljmp
push
sti
mov
push
pop
ret
in
lea
push
lds
aad
pushf
adc
xor
dec
push
sbb
stos
adc
clc
sbb
push
in
add
push
sub
and
pushf
iret
jne
push
dec
lret
or
pop
out
and
jmp
pop
xchg
cwtl
into
scas
sarl
lcall
push
ss
les
mov
insl
adc
mov
pop
fildl
sar
jns
adc
lahf
lahf
mov
push
pop
sbb
push
daa
in
add
fwait
dec
cmp
pop
lock
inc
notb
cmp
push
cmp
and
mov
nop
sub
jae
cwtl
and
sub
xor
pop
out
das
ss
test
sti
jne
scas
fisttpl
test
push
fwait
cmp
pop
and
lock
movsl
mov
pop
shrb
int3
sbb
jmp
popa
xchg
pop
jecxz
or
xchg
test
xor
in
adc
test
popf
outsl
ljmp
mov
insb
popf
inc
jno
xchg
int3
mov
mov
mov
movsb
out
loope
lret
shlb
icebp
cmpsl
xchg
cmpsb
inc
push
decb
xchg
xor
cmp
rorb
adc
cmpsl
in
popf
xchg
ret
cmp
jno
fs
mov
push
mov
dec
es
xor
rol
mov
jmp
mov
dec
push
pop
testl
popa
mov
xchg
adc
push
movsl
xor
fimull
adc
xor
push
push
cli
call
inc
sbbb
popa
std
jmp
jle
fwait
repz
push
aad
cmp
cmp
jecxz
push
jne
pusha
push
sbb
or
daa
sub
inc
pop
and
cmp
add
andl
mov
test
push
add
pop
sbbl
cs
dec
test
inc
hlt
xchg
in
scas
call
sub
out
xchg
gs
jge
pop
gs
or
or
rcll
sbb
insl
inc
dec
mov
cmp
xchg
lea
dec
loop
mov
imul
jns
aad
or
cwtl
mov
jnp
mov
cmp
addr16
ror
mov
sbbl
push
add
xchg
mov
pop
jmp
xorl
mov
popf
pushf
jge
ret
pop
and
xchg
inc
pusha
nop
adc
and
or
inc
ficoms
int3
aas
and
std
bound
fists
lods
roll
sbb
stos
add
fsub
idivb
dec
dec
push
aam
test
and
or
loop
out
popa
das
jbe
jbe
fnstenv
sbb
mov
add
pop
scas
xchg
cmp
ret
pop
call
das
daa
adc
or
cmc
jecxz
add
sub
loopne
push
push
aad
mov
push
mov
sarb
lock
inc
mov
xorb
rorl
outsl
dec
mov
sub
lds
jae
mov
imul
dec
sbb
ljmp
xchg
popf
fistl
pop
jo
stc
push
pushf
les
ret
jl
roll
pop
dec
jo
std
fs
xchg
xor
imul
arpl
pushf
mov
pop
in
xor
and
ljmp
hlt
icebp
jp
xchg
jg
out
gs
push
aad
sbb
mov
shrl
gs
mov
push
add
in
mov
lea
adc
scas
enter
cmp
divb
cmp
cmp
pop
adc
mov
aad
loop
and
out
jg
nop
xchg
negl
sub
pop
sbb
pop
cmp
jns
xor
push
testb
xor
adc
loop
xchg
leave
add
and
mov
fcoml
inc
in
inc
pop
cmp
mov
xchg
out
movsl
mov
lock
in
cli
ljmp
int3
jne
inc
cld
cli
pop
jp
iret
movsb
mov
mov
xchg
jp
in
scas
repz
pop
sub
pusha
mov
cmpsb
loopne
je
dec
jns
xchg
xchg
and
fsubrl
enter
jne
shl
push
adc
mov
or
cltd
lret
push
test
and
ja
movsl
add
sarl
sub
xchg
inc
aaa
das
fidivl
add
jne
mov
sbb
adc
push
sahf
ljmp
cmp
into
sub
ss
sbb
jmp
movsb
jns
test
dec
push
scas
xor
jmp
rolb
ljmp
inc
xchg
xor
sti
mov
ds
inc
loope
mov
ljmp
push
inc
cmp
and
fsubrp
shlb
movsl
mov
xorl
cmc
in
repnz
rorb
sti
sub
cmc
jo
jmp
jge
test
and
lods
aam
test
ljmp
scas
leave
sbb
js
shrl
sbb
in
adc
aam
std
xor
xchg
test
addr16
mov
adc
leave
fmuls
jns
inc
add
int
and
cld
cmp
push
adc
mov
xchg
mulb
pop
adc
push
popa
popf
into
push
xor
mov
xchg
popa
outsl
xchg
lock
jbe
jmp
jns
sbb
or
jnp
jno
lea
mov
jb
dec
dec
push
sbb
mov
sarl
clc
jl
in
push
sub
dec
mov
std
add
jbe
sub
xchg
push
adc
lcall
sub
aam
dec
xchg
xchg
cmp
mov
xchg
std
fabs
jp
in
rcl
rcl
add
aaa
fwait
jae
es
cwtl
shlb
fucomi
mov
into
mov
jle
sub
test
fsubr
and
movsl
xchg
imul
mov
icebp
pop
fisttpll
pop
leave
incb
mov
mov
addr16
jmp
xor
mov
insb
jb
out
jecxz
and
iret
mov
jecxz
std
jg
test
mov
xor
jae,pt
loopne
xor
test
fldt
pop
jnp
push
inc
lods
pop
sub
mov
or
sbb
pusha
xchg
subl
inc
into
inc
jno
inc
lahf
add
pop
in
fs
add
movsb
sub
mov
into
and
add
stc
fdivrl
inc
or
lahf
cld
out
lods
aas
fsubs
in
fwait
sbb
movsb
mov
push
or
mov
mov
gs
push
or
je
fidivrl
rol
mov
outsl
adc
xchg
xchg
push
bound
bound
pop
cmpsb
and
pop
pop
mov
rol
add
mov
subb
sbb
lahf
into
stos
push
mov
stos
pop
add
xor
ret
sub
insb
jg
jne
lret
adc
test
pop
push
fsubs
cmpsl
mov
ja
das
xor
test
push
loope
xchg
sub
xor
mov
and
mov
or
sbb
pop
jae
aaa
mov
mov
test
sub
dec
jo
and
aaa
fisttps
sbb
xchg
cmpsl
and
inc
adc
les
stos
es
jmp
out
cmc
push
xor
add
push
call
push
xchg
cmpsl
push
shl
mov
cmp
and
imul
jne
lds
mov
push
xchg
xor
cwtl
lcall
dec
insb
pop
leave
ret
mov
dec
xchg
add
mov
test
adc
in
add
out
and
xchg
mov
ljmp
mov
and
cmp
out
inc
aam
hlt
push
sub
mov
repz
or
imul
xchg
jge
mov
push
mov
mov
or
rorb
loope
xchg
repz
xor
dec
lcall
mov
sbbb
mov
mov
and
je
ret
pop
push
mov
cli
jne
rcr
int
mov
cli
fsubr
idivb
push
fwait
mov
sub
or
icebp
xor
jp
cwtl
or
aam
lods
xchg
mov
and
das
lods
mov
ljmp
loop
cwtl
les
das
cmpb
loope
cmp
pop
jle
aam
call
and
xorl
enter
jg
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
sbb
mov
xor
xor
sub
mov
add
movl
or
mov
push
mov
add
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
add
mov
negl
push
mov
adcl
add
cmp
movl
je
mov
mov
xor
xor
adcl
add
add
adc
negl
xor
mov
push
movzbl
adc
xor
xor
mov
and
mov
add
movl
adc
addl
xor
movl
xor
movl
cmp
movl
jne
movl
cmp
je
jmp
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
sbbl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
notl
mov
adcl
add
movzwl
mov
mov
sbb
movb
add
lea
xor
mov
addl
mov
mov
orl
xor
andl
sub
andl
mov
movl
or
push
jmp
and
add
gs
push
pop
pop
jl
lahf
inc
dec
sbbl
sahf
out
rolb
enter
or
inc
mov
hlt
enter
jb
bound
loopne
inc
mov
aaa
addr16
add
cmpsl
jb
push
fdivs
inc
pop
outsl
xor
ljmp
mov
add
sbb
mov
jo
xchg
data16
fsubr
pop
lock
push
inc
xchg
out
dec
add
mov
xchg
adc
out
lods
and
mov
push
cltd
lret
cmp
loope
and
daa
lret
int
into
leave
mov
add
jmp
lock
fisubrs
fmull
mov
lods
or
sbb
inc
fwait
mov
mov
pop
movsb
popa
scas
movsl
pop
adc
mov
lea
mov
testb
pop
cmp
jnp
loopne
push
mov
in
imul
pop
and
inc
xlat
xlat
test
adc
xlat
pop
mov
adcl
inc
push
fs
dec
push
mov
mov
jg
mov
testl
pushf
ficompl
outsl
fwait
mov
pop
or
sub
inc
pop
sub
or
cmp
mov
orb
lods
bound
ud0
pmullw
jp
mov
int3
ljmp
jb
xor
xor
jle
xchg
ds
ret
ljmp
in
mov
int
in
fdivs
js
mov
pop
sahf
dec
sub
inc
aaa
inc
dec
xchg
push
mov
cs
mov
daa
sub
or
popf
jno
dec
jp
andb
adc
notw
sysexit
scas
fwait
stos
loop
bound
pop
enter
sbb
mov
cmp
js
fiadds
hlt
push
out
xchg
mov
loopne
sbb
das
jmp
push
mov
stos
mull
out
cmp
outsb
lret
pop
out
mov
xchg
sbb
outsl
inc
cwtl
out
stos
mov
xchg
or
push
push
lock
nop
xor
test
and
icebp
push
jle
aaa
xchg
or
xlat
mov
mov
faddl
lods
sub
add
push
push
lahf
xlat
movsl
jb
or
add
and
filds
stos
dec
test
mov
or
mulb
fldl
pop
decb
shl
rcrb
repz
sub
xor
ss
add
inc
insb
in
scas
push
arpl
jae
aam
jge
arpl
add
inc
paddsw
jecxz
push
in
mov
sub
and
sub
icebp
lods
ret
cmpsb
mov
ret
xorl
pop
mov
push
cwtl
jle
ss
leave
push
cmpsb
ret
xchg
xorl
dec
dec
loop
sbb
cmc
insl
mov
insl
fidivs
cltd
sub
jmp
pop
mov
lret
cld
mov
mov
cmp
xchg
aad
fwait
cmpsl
sbb
insl
pushf
mov
cld
cltd
movsl
push
adc
jecxz
add
push
sbb
sbb
mov
out
push
sbb
mov
in
pop
push
subl
in
xchg
nop
jp
je
xor
xlat
insl
push
inc
inc
pop
in
in
popf
xchg
pop
or
aam
mov
test
cwtl
dec
loopne
xor
sub
sbb
nop
inc
mov
jp
rcrb
call
push
les
icebp
sbb
out
nop
cmp
ret
fnstcw
jbe
scas
push
pop
les
je
push
xchg
dec
inc
incl
xchg
jns
shlb
sbb
cs
push
push
add
cmp
inc
sbb
push
cli
mov
add
out
call
and
aad
xchg
dec
inc
shll
xlat
mov
dec
in
mov
lods
aam
sbb
mov
xchg
jg
jnp
divb
pushf
loop
in
pop
lods
iret
gs
fsubrl
mov
imul
stos
push
fisttpll
inc
lea
xchg
jg
mov
xor
sbb
sub
in
nop
lods
jbe
and
jecxz
jle
aam
mov
jge
add
rcl
inc
rolb
fdivrl
or
cmp
test
add
pop
or
rsm
or
sbb
ret
adc
aad
lret
seto
ret
mov
jg
in
movl
dec
in
repnz
in
pushf
adc
inc
push
lcall
mov
sahf
bound
incb
fildll
arpl
lahf
aaa
jp,pn
sub
xchg
fs
jns
stos
rcl
addr16
pop
pop
sub
int
adc
dec
rcl
xchg
lahf
and
push
add
mov
movsb
not
test
jge
loop
cmp
shll
and
xchg
adc
add
popl
cmp
push
enter
cmp
dec
jns
xchg
out
fcmovbe
repz
or
pop
mov
sbb
ds
adc
fimuls
pusha
cltd
iret
hlt
dec
adc
jp
in
or
pop
xor
cmp
arpl
or
xorl
cmp
add
stc
inc
mov
jnp
sub
mov
inc
gs
ljmp
addr16
jae
pop
ja
in
lahf
and
push
cmp
lods
cli
adc
mov
outsb
fs
inc
add
ljmp
lea
std
ds
test
dec
std
jae
dec
jmp
jb
lahf
iret
xor
xchg
insl
xchg
mov
pop
dec
and
dec
mov
mov
dec
leave
mov
outsb
xor
pop
xchg
in
repz
stos
adc
and
shrl
rcl
outsb
mov
movsl
popf
testl
insl
pop
jbe
repnz
iret
bswap
cmp
cmpsb
mov
jg
xchg
mov
loop
sub
imul
aaa
fistl
leave
stos
adc
dec
fcompl
sub
test
jne
mov
pusha
ret
cmc
dec
cltd
pop
mov
xchg
aam
xor
cmp
mov
cmp
bound
das
lcall
lods
dec
sub
xchg
add
cmc
notl
movsb
hlt
std
std
jno
bound
call
sbb
adc
push
pushf
cmp
pop
mov
rorb
repnz
mov
test
lea
mov
mov
mov
jns
aad
mulb
ret
xchg
das
mov
push
scas
or
outsl
or
xchg
fsts
xorl
jbe
int3
or
lret
mov
pushf
sub
and
sub
enter
data16
jg
push
lods
inc
call
cmp
lea
adc
outsb
repz
mov
inc
ret
pop
jp
push
loopne
sub
mov
dec
in
test
les
hlt
aas
sar
mov
int3
mov
fldcw
scas
dec
jmp
lock
push
adc
cld
mov
test
mov
popf
subl
pop
ffreep
fs
inc
movsl
add
cld
cmp
fisubrl
inc
sarb
add
sub
fcmove
mov
mov
sbb
mov
subl
adc
mov
mov
xchg
outsb
jecxz
inc
push
ret
addl
add
mov
push
inc
xor
push
icebp
xchg
lret
lock
pop
xor
jnp
adcl
mov
or
jg
shl
push
daa
xor
inc
mov
imul
mov
sbb
add
jae
movsl
clc
or
fwait
lahf
cmp
test
xchg
aas
cmpsl
and
jmp
daa
jecxz
pop
ss
and
jmp
mov
pop
bnd
mov
das
lock
sub
push
cmp
outsb
lahf
pop
sbb
xchg
call
ffree
jl
pop
xchg
popf
mov
dec
mov
xchg
jp
popl
mov
sub
inc
insb
imul
push
loop
outsb
shlb
mov
scas
in
fisttpl
jmp
and
xor
dec
sbb
dec
cmp
dec
or
pop
mov
cmp
jo
mov
jne
xchg
enter
sbb
fbstp
cltd
pushf
outsl
les
push
clc
cmpsb
mov
and
xor
rorl
inc
jno
into
fidivl
sub
ds
inc
fidivrs
pop
in
test
hlt
imull
mov
shlb
xchg
and
mov
lds
push
adc
test
sub
movsb
in
jge
arpl
mov
aas
adc
mov
data16
inc
mov
mov
repz
stos
jbe
jae
int3
lahf
mov
mov
adc
mov
sti
lret
fists
ja
hlt
enter
jae
sub
loop
bound
fs
inc
jo
shrb
dec
push
cmp
jnp
aas
or
push
addr16
jecxz
cmc
jmp
leave
mov
mov
dec
adc
pop
in
mov
insb
jmp
shlb
dec
push
or
cmp
orl
pop
push
mov
sub
pusha
std
test
lcall
lea
xchg
xchg
or
xor
lahf
jae
gs
mov
push
lcall
imul
pmullw
jae
fidivs
mov
pop
add
loope
and
lds
lret
scas
dec
test
rorl
mov
push
lahf
cmp
cmp
sub
sbb
fisubl
pop
ds
pushf
fimull
adc
mov
lcall
cs
inc
mov
or
add
lret
pop
xor
dec
or
mov
stos
jbe
push
fisubrs
mov
and
jge
mov
out
jle
sbb
std
pop
or
xchg
shlb
je
out
push
loop
and
js
jno
lds
sahf
stos
sub
inc
sti
lock
sahf
insb
push
xchg
add
gs
imul
mov
enter
call
mov
lcall
mov
cwtl
xchg
xor
xor
sahf
loope
iret
push
xor
lock
sahf
jno
and
pop
mov
sbb
xor
aad
jae
add
jo
mov
popa
sub
pop
inc
push
and
sub
sub
cld
push
fidivrl
jno
in
aas
sarl
sub
mov
scas
lods
sahf
mov
fnstsw
cs
jno
scas
jb
loopne
dec
inc
push
mov
jb
mov
or
mov
cs
lods
sub
cmp
data16
adc
mov
sbb
and
incb
mov
int3
in
fsubs
cmp
loopne
test
adc
or
cmp
add
lcall
pop
in
scas
and
jg
push
mov
stos
and
or
xchg
push
stos
cld
pop
inc
lret
cmp
sub
leave
and
insb
pop
and
pop
mov
jmp
mov
addr16
xor
mov
jb
aaa
jo
lods
cmp
dec
rcl
jp
cmp
das
nop
pop
fsubrl
dec
sbb
loopne
jns
jmp
pushf
pop
jo
fimull
xchg
mov
dec
notb
ret
xor
in
jmp
mov
mov
mov
ficompl
jnp
in
pusha
hlt
cs
and
clc
jmp
test
icebp
xor
adc
int
mov
leave
sbbb
sbb
dec
or
lret
cmc
mov
xor
js
jg
subl
cmp
jnp
icebp
xor
pop
rolb
ds
lods
xchg
adc
mov
sbb
cmp
fnstsw
and
push
xchg
int3
pop
xchg
sub
aam
jne
push
fucomip
xor
add
jg
js
mov
movsl
aad
sti
sub
jne
repz
sbb
inc
cmp
or
or
inc
lea
lcall
or
movsl
sbb
fldt
push
or
adc
mov
inc
loopne
sarb
and
mov
std
lret
bound
cmpsl
mov
add
sub
jo
out
mov
lea
lret
cmpsb
jns
adcb
xor
jno
xor
pop
cmp
pushf
and
xchg
pop
cmp
jmp
rcrb
js
sub
push
xor
sbb
lods
add
popa
lahf
adc
push
mov
or
stos
out
mov
hlt
push
call
cmp
gs
insl
push
pop
enter
enter
jl
sub
add
xchg
fistps
fisubs
cmpsl
dec
jecxz
clc
push
mov
out
lret
sbb
lcall
aam
mov
divl
jmp
in
and
hlt
cmp
xchg
fwait
mov
inc
jae
inc
sti
or
dec
in
pop
dec
pop
pop
add
jg
mov
in
shrb
mov
pop
int3
popa
or
lock
es
mov
and
adc
mov
rol
out
js
inc
push
in
dec
adc
inc
xchg
les
add
pop
pop
sub
dec
adc
sbb
mulb
inc
cmc
fists
dec
inc
inc
mov
imul
stos
push
push
rolb
mov
cmp
inc
shll
push
dec
mov
cmpl
cmp
shlb
inc
aaa
imul
adc
mov
mov
adc
movsb
ret
xlat
xchg
outsl
ret
hlt
orl
ret
jno
adc
addb
jb
and
dec
push
push
das
push
daa
cltd
call
xlat
jae
test
cs
mov
mov
mov
cmpsb
gs
or
mov
and
adc
jns
jno
mov
jmp
arpl
aaa
imul
push
scas
xchg
adc
decb
lds
push
out
sbb
test
mov
lar
dec
outsb
xlat
ret
leave
pop
jl
lret
in
cmp
dec
dec
mov
mov
adc
dec
jb
jp
sbb
cs
call
xchg
xchg
sbb
cltd
xchg
mov
mov
xchg
jae
push
xchg
test
mov
int3
repnz
outsl
xor
pop
pop
fnsetpm(287
and
es
iret
sub
inc
inc
outsb
lock
hlt
adc
gs
push
or
push
push
and
jp
xchg
cltd
sbb
lock
in
aam
inc
in
cmp
adc
aad
or
add
mov
movsl
add
outsb
or
nop
inc
ljmp
push
iret
sbb
aas
aad
movsb
jge
out
adc
js
mov
mov
ljmp
mov
leave
insl
dec
push
pop
jecxz
mov
inc
adc
xchg
mov
sub
push
aam
inc
pop
int3
dec
dec
mov
ljmp
xor
fsubrs
mov
std
or
sbb
xor
push
addr16
pushf
mov
sti
cmp
dec
pop
inc
lahf
mov
lock
xor
fcompl
cs
rcll
aas
jo
cmp
lods
lret
jg
pop
and
rorb
or
sbb
lock
add
aad
xchg
stos
add
jo
popf
in
in
push
imul
xor
xchg
outsl
je
pop
mov
mov
mov
xchg
jne
outsb
outsb
xor
cs
push
lret
dec
shrb
pop
lahf
mov
sbb
cmp
insb
push
in
nop
cwtl
out
sbb
and
ja
xchg
dec
mov
jne
or
imull
push
call
mov
mov
push
mov
loop
inc
adc
jp
xchg
ret
fisttps
fstps
sub
outsb
inc
sti
push
add
dec
cmpsl
mov
adc
or
jg
std
sub
push
testl
or
lock
test
in
xlat
lahf
loop
mov
xchg
movsb
mov
mov
xlat
mov
aam
aad
lcall
imul
mov
adc
daa
cmpsl
ss
cmp
fidivs
xchg
out
adc
leave
sti
pop
mov
lret
imul
ret
stos
insl
jp
and
pop
scas
imul
iret
mov
xchg
decb
repz
outsb
js
dec
bound
pop
pop
xlat
sub
push
shlb
sbb
cmc
cs
sub
push
jle
sbb
mov
jno
pop
repnz
push
mov
ljmp
cmpsl
and
outsl
ds
addr16
mov
push
orl
aas
dec
data16
and
add
pusha
pop
hlt
lods
jge
push
out
fwait
lret
shrb
aaa
ret
pusha
mov
inc
mov
push
das
push
pop
shrl
or
iret
xchg
into
push
mov
fsubp
jno
das
fildll
out
sub
jno
cwtl
lahf
xor
xchg
cld
lcall
add
scas
sub
xchg
std
push
orb
pop
push
push
stc
or
adc
sbb
psllq
xchg
aaa
jb
add
xchg
push
dec
pop
lcall
add
js
imul
adc
aad
inc
push
ret
xchg
in
test
sarb
sub
icebp
lret
push
cmpsl
sahf
sbb
mov
mov
pop
jmp
sub
or
loope
lcall
xchg
dec
and
add
data16
add
xchg
daa
stc
mov
push
popa
dec
mov
xchg
out
push
sbb
dec
add
popa
xor
call
fistpl
pushf
jne
std
lret
into
inc
sbb
ret
pop
cwtl
push
test
push
dec
dec
repnz
push
out
mov
xor
pop
aaa
sub
inc
mov
ret
icebp
add
call
sbb
mov
cmpsb
push
sub
inc
jp
mov
aam
in
aad
adc
pop
test
inc
mov
out
shlb
popa
cmpb
jb
scas
xchg
sub
sbb
xchg
fbstp
out
js
insb
cmpsb
fidivrl
sub
mov
add
fwait
push
mov
ret
jge
in
xlat
popw
push
sub
sbb
cld
movsb
add
ret
push
mov
xchg
pop
push
sub
insl
icebp
cmp
sub
mov
out
or
lods
and
outsb
push
aaa
dec
in
clc
lret
outsl
mov
cmp
xor
out
lret
dec
adc
mov
repnz
xor
mov
imul
shll
xchg
fmuls
mov
shl
test
icebp
jbe
sbb
gs
or
andb
outsl
jg
and
lea
loopne
xchg
xor
cmp
push
mov
add
jmp
scas
loop
shrl
cld
jns
and
jle
fcmovb
push
int
sub
mov
pushf
scas
sbb
push
lea
mov
imul
push
in
sub
cmp
adc
push
loope
lds
orl
mov
push
std
push
sub
shlb
sub
aaa
movups
shrl
std
cltd
insl
sbb
cmpsl
sbb
mov
push
push
push
add
arpl
pop
sbb
mov
pop
or
fisubrs
jge
ds
dec
xor
pop
nop
in
xchg
pop
sub
add
xchg
pop
and
sbb
shrl
leave
cmp
lea
mov
sub
push
lods
roll
cli
jae
mov
jnp
rcrl
pushf
adc
lea
sub
push
mov
sahf
add
insb
add
loopne
rcll
and
out
test
jno
mov
inc
jns
or
xlat
lods
mov
outsl
je
sub
lret
jge
out
call
out
int
cwtl
mov
out
xor
je
sub
jnp
pop
insl
jb
lcall
cmp
sbb
cld
adc
jecxz
stos
into
insl
loop
inc
dec
push
popa
jbe
add
mov
je
dec
fwait
data16
sub
mov
and
das
je
push
ljmp
test
push
out
xor
adc
mov
out
orb
fiaddl
insl
repnz
test
mov
pop
movsl
cmc
push
pop
push
sbb
mov
push
out
mov
xchg
and
dec
subl
rorb
mov
mov
push
jle
scas
loopne
mov
mov
cmp
mov
ds
bound
aaa
subl
xor
in
out
jne
pop
inc
shrb
arpl
xchg
jbe
dec
popl
scas
mov
es
out
shrl
adc
aas
je
inc
cs
iret
pop
mov
scas
in
pop
and
sahf
xchg
push
adc
mov
mov
cmpl
cmp
pop
mov
mov
movsl
push
lea
ss
imul
mov
repz
ss
pop
stos
cmp
push
orb
rcrl
adc
push
jg
lcall
xlat
dec
and
adc
lea
int
push
pop
push
fldl
dec
pop
lret
inc
or
mov
je
jecxz
inc
nop
push
adc
jle
mov
es
xchg
mov
stc
loopne
or
mov
dec
pop
xor
jp
xchg
mov
sub
lret
clc
inc
enter
jne
int3
push
mov
pushl
rcrb
inc
in
out
or
push
adc
and
loope
mov
cmpsb
add
imul
ljmp
sub
notl
dec
iret
lock
fsubrl
and
sbb
movsb
jl
jl
fisttps
and
lds
ja
mov
sahf
clc
jp
inc
aas
jge
xchg
lcall
fcmovnu
xchg
mov
adc
hlt
xchg
stos
pusha
dec
imul
sbb
int3
or
mov
sub
mov
sub
and
pop
imul
mov
jno
stos
fwait
or
sub
cltd
fdivrs
jecxz
into
xor
cmp
push
mov
shlb
jae
jl
movsb
out
in
lds
and
sbb
aad
xchg
xchg
mov
add
lods
pop
sbb
test
sub
xchg
sbb
push
cmp
xor
add
jae
mov
shlb
jp
rorb
inc
jno
daa
cmpsb
ja
push
xor
cmp
test
add
xchg
in
fdiv
xchg
insb
or
add
push
test
outsb
movb
enter
push
cmp
push
jl
xor
push
out
mov
fcmovnbe
movsb
in
sbb
dec
cmpsl
cmpsb
add
movsl
sbb
pop
ret
shrb
test
mov
and
xchg
dec
gs
pop
rcrb
or
xchg
das
cs
sbb
out
insb
mov
mov
enter
out
dec
pop
adc
mov
or
push
cmp
insb
add
xor
les
test
jmp
or
jg
lods
popf
jle
repnz
mov
pop
and
lea
outsb
add
mov
out
js
stc
idivl
mov
lahf
je
in
jnp
ret
sbb
imul
lret
push
pop
rorb
lds
scas
les
xchg
mov
adc
loop
movsb
faddl
xor
inc
incb
dec
push
movsl
pop
loopne
xchg
repz
add
and
loope
shll
popf
jmp
jno
js
pushf
lret
mov
push
jle
rclb
ja
pusha
les
lret
xor
or
scas
roll
pop
inc
fwait
xchg
mov
fiadds
mov
js
icebp
gs
andl
test
loopne
jne
sbb
mov
adcl
and
xor
lods
jnp
hlt
cmp
pop
lea
loop
xor
punpckldq
imul
mov
push
fmuls
mov
daa
daa
cmc
jae
pop
fnsave
fnstcw
sbb
mov
jmp
lret
jmp
enter
imul
popl
fdiv
fcompl
into
imul
mov
push
scas
xlat
inc
add
lahf
adc
dec
inc
leave
sbb
jne
popa
pop
xlat
jl
adc
mov
mov
xchg
pop
xchg
sbb
subl
inc
jl
arpl
test
out
pop
xchg
push
lahf
adc
iret
std
inc
stc
jl
sarb
std
nop
fsts
push
jecxz
add
aam
add
arpl
xlat
clc
xchg
aad
into
fchs
xlat
ret
dec
or
xchg
cltd
jne
cmp
data16
mov
aam
lret
fnstenv
fisttpl
outsl
out
movsl
dec
adc
mov
mov
in
jg
repz
mov
cmp
imul
rcrb
add
call
mov
lods
pop
movsb
mov
pushf
add
fistpl
shll
rcrb
cmpsl
xchg
andb
ja
fisubrs
lock
jne
push
sbb
pop
rcrl
xor
aaa
popf
shll
gs
ds
dec
adc
rcll
add
dec
pop
movsb
mov
mov
mov
cmpsb
outsb
sub
and
mov
inc
push
jo
inc
addr16
lock
push
adc
xchg
jo
in
pushf
push
adc
into
icebp
add
push
ret
sbb
dec
loope
sbb
mov
fisubl
push
mov
mov
scas
test
dec
pop
push
sub
iret
push
outsl
iret
fwait
adc
xchg
or
xor
dec
popa
cmpsl
es
adc
mov
lods
arpl
pop
or
int3
push
mov
shll
aaa
lcall
sti
ret
jbe
and
mov
inc
sub
push
test
mov
sub
je
jnp
push
add
fisubl
cltd
push
imul
aas
push
sub
test
fs
lahf
sbb
fnsave
aad
out
sub
xchg
movsb
ficompl
inc
mov
loope
jp
or
stc
mov
pop
push
cmp
jmp
lcall
jg
stos
ss
repnz
cmp
push
lret
sbb
lock
cmpsb
lods
mov
push
jbe
mov
pop
test
mov
xor
cmp
inc
loope
hlt
test
lcall
sub
push
mov
push
jle
jg
cvttps2pi
fdivrl
btr
xor
xchg
add
xchg
fistpl
cmpsb
adc
repz
sbb
sbb
ja
cld
and
jno
sahf
push
jno
fsubl
aaa
lret
xor
push
add
jnp
cmpsb
and
mov
push
cmpsl
cmp
cmpsl
mov
push
mov
or
add
inc
dec
mov
dec
fst
cli
cmp
cmp
or
in
out
data16
ds
icebp
jb
xor
push
sarb
mov
out
pop
lahf
push
jg
sbb
and
push
insl
into
mov
ds
imul
sarl
repnz
clc
xchg
xchg
fwait
es
push
adc
inc
insl
outsl
xlat
xor
mov
out
stos
mov
jns
aam
jnp
in
scas
out
inc
lret
xchg
or
sub
jns
adc
fistl
in
cmp
test
sbb
jmp
xchg
mov
sbb
and
not
inc
fdivs
movsl
push
mov
fldenv
cmp
and
dec
mov
pop
cld
push
or
insb
data16
in
or
mov
cmp
xchg
jo
push
inc
rolb
shrb
repnz
leave
mov
repnz
subl
cmc
jo
jle
movb
fbstp
add
fstps
lcall
xor
push
mov
sbb
shl
rol
stos
inc
add
fcomps
pop
test
sbb
mov
js
outsb
fnstenv
dec
mov
test
movsl
test
insl
sbb
add
or
into
inc
aam
iret
push
mov
mov
lret
inc
mov
pop
pop
clc
dec
ret
nop
loopne
lods
loope
jmp
dec
mov
push
js
dec
adc
push
in
in
jl
adc
xchg
sub
insb
cwtl
xor
cltd
pop
xchg
and
mov
add
nop
insl
int
xor
movsb
and
jmp
mov
rcrb
cwtl
push
dec
mov
mov
adcl
adc
lds
pushf
lea
adc
aaa
sub
test
movb
shr
xchg
jno
daa
or
pop
pop
inc
in
add
packuswb
push
xor
sub
scas
arpl
dec
icebp
mov
stos
sbb
gs
test
jbe
imulb
mov
addr16
les
and
out
mov
out
fisubl
icebp
inc
add
int
add
hlt
icebp
jp
int3
scas
or
jp
cltd
pop
adc
ss
das
mov
pop
push
jge
add
sahf
sti
push
adc
enter
stc
mov
adc
fadds
xchg
jb
in
sub
mov
push
repz
outsb
mov
and
cld
mov
out
inc
push
pop
jns
add
test
pop
das
out
stos
push
mov
mov
iret
neg
and
outsb
pushf
jl
outsb
pop
repz
cmp
lock
jp
lods
test
std
setno
dec
data16
lret
cmpb
pop
aas
inc
stc
lcall
cmp
cmc
cwtl
push
dec
dec
leave
test
jnp
push
iret
roll
arpl
jmp
mov
xor
repz
outsl
push
mov
outsl
js
movsb
shlb
cmp
shrl
adc
lea
pop
mov
adc
xor
lret
lret
fwait
xchg
enter
xlat
mov
mov
push
push
gs
sti
cltd
mov
jmp
repnz
icebp
push
jno
insb
cmp
aam
mov
fisubrs
insl
pop
mov
or
lret
popa
mov
or
push
into
das
pushf
lods
int
mov
inc
pop
and
xor
int3
repnz
sub
insb
jo
test
xchg
into
push
mov
fiadds
add
and
in
xchg
cld
fildll
shr
cmp
ret
sbb
xchg
out
or
xchg
movsb
gs
pop
mov
xchg
jmp
inc
xchg
lods
or
push
sub
ljmp
shrl
xor
jbe
mov
xorl
and
movsb
bnd
xchg
mov
mov
inc
test
dec
loop
cmpsl
mov
inc
add
in
int3
and
in
mov
out
aad
aam
push
sbb
mov
stos
je
pop
fdivp
pop
int
jo
xchg
pop
sbb
or
sbb
test
sbb
xchg
mov
lcall
mov
or
rcrl
sbb
rcrl
or
stos
add
jne
jne
push
push
call
lods
stc
and
adc
cmpsl
shr
cld
ret
dec
and
cmc
adc
sbb
mov
jg
dec
mov
sub
cwtl
rcrb
out
fstpt
mov
cmpsl
mov
mov
aaa
stos
sub
dec
ss
ljmp
lcall
or
enter
insl
adc
test
inc
add
in
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
push
push
pushl
call
mov
dec
mov
jmp
push
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
inc
xor
sub
mov
movl
push
xorl
add
jmp
mov
notl
mov
notl
inc
cmp
movl
jb
adc
mov
xor
add
jmp
andl
mov
and
mov
adcl
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xorl
mov
add
sbbl
movzwl
xorl
mov
negl
mov
orl
movzwl
xorl
xor
add
mov
mov
inc
mov
cmp
movl
jne
mov
movl
mov
decl
xor
add
andl
mov
dec
mov
xor
andl
add
movl
mov
not
movl
movl
movl
mov
mov
movl
mov
jmp
mov
add
mov
andl
xor
xor
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
movl
mov
lea
mov
mov
mov
lea
movzwl
sbb
mov
mov
andl
mov
add
mov
negl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
orl
mov
mov
add
mov
lea
add
mov
mov
orl
mov
lea
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
sbbl
lea
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jb
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
jmp
sarb
jae
dec
bound
pop
mov
jl
pop
pop
jl
mov
mov
sub
ss
nop
ret
ljmp
push
rcr
mov
aaa
push
pushf
cltd
or
pop
out
add
mov
or
add
dec
or
aaa
adc
out
pushf
jne
push
dec
pop
xor
jne
int3
xor
andl
aas
push
jmp
lret
push
xchg
mov
jbe
mov
fists
jmp
mov
pop
fsubl
sbb
fcom
add
mov
push
insl
inc
xchg
push
fildl
sti
dec
fisubrs
mov
in
lds
push
test
xor
jle
adc
xchg
outsl
int3
cmpsl
push
lds
std
sarl
aaa
xor
or
cld
gs
fmul
ret
outsb
clc
fbstp
mov
stos
inc
jns
or
inc
in
jae
addl
in
mov
int
scas
and
jo
mov
push
xchg
lods
sahf
enter
add
stc
lret
addl
jnp
insb
loope
mov
add
inc
mov
lea
lock
jnp
test
aam
inc
movsb
pop
pop
loop
mov
inc
fsubs
adc
aam
in
and
pop
mov
push
jbe
sbb
rclb
data16
jecxz
mov
mov
add
fwait
rol
sub
mov
xchg
in
jp
sub
cmpsl
insb
mov
adc
dec
insl
jg
cld
and
pop
mov
fsubrs
loope
loopne
xchg
jbe
jl
or
dec
cs
adc
cmp
dec
scas
aam
sbb
outsb
pop
dec
shl
fcmovnbe
sbb
push
dec
jbe
shr
js
dec
or
scas
movsl
sub
sub
dec
fdiv
and
adc
pop
push
popf
loop
xchg
mov
inc
push
in
orb
pop
sub
inc
or
cmpsb
std
es
cli
push
aam
ljmp
xor
push
mov
out
in
adc
inc
pop
stos
divb
outsb
push
fldenv
add
cmp
inc
ss
idivl
dec
mov
rcrb
inc
fmuls
pop
push
mov
mov
addl
add
pop
lea
and
lock
leave
inc
adc
das
xor
sbb
loopne
cmp
add
mov
or
mov
mov
outsb
mov
cwtl
pop
les
push
mov
cmp
cmp
mov
dec
into
push
push
jbe
cmp
dec
popa
mov
daa
scas
js
out
lock
insl
imul
add
cmp
inc
mov
inc
and
push
movsl
mov
or
ds
pop
ja
xchg
sub
addr16
gs
add
push
data16
jg
xchg
mov
mulb
pop
shlb
ja
or
pop
arpl
in
jb
dec
xor
fsub
lret
das
subl
sbb
xchg
scas
leave
outsl
call
dec
out
das
cld
aad
push
sub
in
or
dec
sub
aam
cwtl
mov
pushf
test
inc
gs
inc
rcrl
fs
lock
outsb
cmpsb
mov
std
dec
stos
pushf
scas
cmpl
and
jl
pop
int
ss
inc
mov
sub
jp
or
pop
test
clc
push
popa
movsb
sbb
es
lods
mov
cmp
shl
ret
cmovno
jg
sbb
fisttpll
or
sub
cwtl
xor
rclb
xor
ret
dec
stos
cwtl
or
jb
mov
and
int
xchg
sub
and
mov
insb
push
jne
mov
cltd
sub
ds
sbb
xchg
pop
les
add
jmp
xchg
testb
sub
xor
stc
jmp
dec
jne
sub
xchg
push
push
jg
inc
xor
adc
das
in
or
push
mov
mov
stos
pop
outsb
jp
push
fnstcw
ss
movsb
stc
mov
pop
xchg
mov
icebp
out
and
bound
lods
push
ret
cmc
inc
in
sbb
push
pop
pop
ja
push
mov
in
scas
outsl
pop
cmp
or
mov
lret
mov
mov
fs
les
push
jmp
test
xchg
xor
inc
push
stc
fisttps
xchg
int
rcrl
xlat
cmp
jo
sub
and
jp
out
inc
push
adc
mov
test
and
xchg
imul
cmp
movsl
pop
lahf
xor
pop
jbe
scas
test
mov
xor
test
rolb
cmp
das
or
inc
lret
sub
cmp
pusha
push
xor
mov
jle
and
int3
iret
icebp
adc
push
adc
adc
shll
sub
xlat
std
mov
popaw
stc
pop
mov
in
sub
mov
cld
jb
or
js
jo
and
pop
aaa
imul
push
or
cmp
imul
pop
push
cs
push
cltd
jns
paddq
out
inc
jmp
adcb
pop
movb
popa
jns
call
divl
pop
sub
mov
cltd
movsb
nop
fsubrs
mov
scas
adc
xchg
push
stos
out
mov
mov
sub
shll
inc
xchg
clc
pushf
jns
sub
mov
test
xor
outsl
add
scas
sbb
inc
jb
into
fstl
in
xor
imul
rcll
mov
add
je
jo
jb
or
push
mov
pop
mov
xchg
mov
jb
adc
lahf
jle
les
lods
jge
jecxz
sarb
cmpsl
pop
xchg
in
mov
inc
mov
bound
and
cmpsb
stc
jg
or
in
lea
xor
or
movsl
push
adc
arpl
in
lret
add
rol
xchg
add
imul
push
and
mov
push
nop
sbb
roll
shrl
jo
bound
andl
mov
jmp
sbb
jae
stc
arpl
icebp
push
jmp
cli
stc
xor
pop
or
aaa
push
push
cmpsb
sbb
adc
xor
pop
cmp
sub
outsb
jae
jl
push
or
push
je
sub
add
andl
leave
mov
test
cmp
sbb
js
pop
jle
pop
aam
ljmp
adcl
aas
std
cmpl
hlt
test
cmc
lds
add
push
bound
mov
pop
in
popa
mov
insl
xchg
push
dec
repz
push
xor
mov
dec
push
shlb
jle
mov
inc
xchg
shl
sbb
out
sub
and
popa
stos
das
cmp
mov
loop
hlt
sub
mov
ret
add
cmp
or
adcb
cmpl
fucomip
mov
jb
lock
mov
filds
jle
xor
pop
jecxz
adc
lods
cmp
jle
inc
in
stc
cmc
lock
mov
popf
popf
or
inc
push
cltd
pusha
enter
add
pop
push
adc
loopne
xchg
adc
pushl
imul
movsb
push
cltd
cmpl
out
dec
pop
adc
pop
add
ret
shll
ljmp
pop
mov
jge
cli
fsubl
ret
dec
enter
jo
mov
imul
push
push
pop
ret
push
movsb
dec
add
xor
fcoms
fsubl
pop
pop
hlt
inc
into
pop
mov
repz
sub
imul
mov
aaa
lods
adc
les
popf
pop
push
dec
mov
ret
cmp
pop
into
js
lds
xor
test
int
cmp
mov
ss
dec
dec
repnz
stos
je
mov
xchg
jne
xchg
sbb
inc
xchg
popa
test
lahf
in
aam
ret
xor
psubd
cmp
jmp
insb
jecxz
outsl
jge
sub
clc
pop
insl
xor
fstps
add
dec
stmxcsr
push
das
mov
shl
sbb
rcl
push
ud1
xchg
icebp
adc
push
dec
mov
dec
ja
mov
inc
pusha
push
inc
sub
adc
fstpt
clc
std
and
pop
xor
repz
out
adc
xchg
xor
aas
repz
xchg
sub
inc
cwtl
jb
jns
ja
cli
sbb
ret
jl
push
adc
in
sahf
adcb
adc
out
jnp
or
sbb
dec
cmpsl
push
subl
ss
inc
cmp
xor
movsb
sbb
nop
popf
push
rolb
jae
fcomps
jbe
imul
sbb
and
scas
pop
fcoml
mov
jns
lcall
insl
in
popf
fsts
pop
xor
mov
mov
pop
xchg
inc
pop
dec
ss
jnp
out
fs
sbbl
jne
mov
into
mov
in
lret
out
arpl
sub
out
jne
mov
rcr
xor
test
ss
pop
pop
fldenv
sbb
roll
subb
xor
xchg
inc
je
push
add
cmp
inc
lret
adc
xchg
jge
mov
dec
sbb
jae
mov
mov
sub
ret
stos
adc
sbb
xor
push
jg
inc
nop
aas
and
or
push
push
or
xchg
mov
call
add
add
insl
lcall
xchg
push
xchg
jnp
push
sbb
adc
sarb
enter
or
notb
insb
pop
or
dec
or
or
pusha
enter
xor
pusha
popf
adc
mov
fidivl
xchg
repz
movsl
inc
movsb
pop
or
adc
in
xchg
or
sbb
cmp
mov
test
mov
daa
jbe
xchg
sub
or
dec
negb
mov
inc
push
pusha
mov
rcl
fcompl
enter
aaa
sbb
iret
fucomp
int3
mov
push
mov
dec
call
movsl
stos
inc
in
aam
push
jmp
xchg
sub
cwtl
cmp
xor
push
in
ret
pusha
dec
mov
or
pop
xor
xor
sub
jle
and
sbb
out
push
pop
call
xchg
adc
adc
leave
jne
cmpsl
lods
add
pop
jbe
loopne
mov
jg
roll
xorb
add
xchg
enter
jl
outsb
jg
loope
mov
and
gs
push
icebp
inc
adc
nop
lahf
dec
xchg
add
adc
or
lods
icebp
and
add
push
inc
sub
inc
testl
cmp
clc
popf
cld
jb
inc
repz
aas
inc
dec
rcrl
aaa
fsubl
dec
add
mov
push
test
sbb
pop
cli
icebp
pushf
adc
andl
test
pop
insl
mov
into
push
mov
mov
shrb
lret
push
scas
cmpsb
and
sbb
gs
icebp
add
movsl
inc
mov
lret
push
ds
cmp
or
pop
cmp
decl
cmc
addl
push
xchg
fdivrl
or
cmpsl
or
xor
std
lahf
fistpll
push
jbe,pn
mov
ds
push
dec
inc
adc
scas
push
mov
jecxz
loopne
push
lds
dec
inc
int3
addb
xlat
jecxz
lods
jne
sahf
adc
mov
xor
or
push
lods
xor
aad
lret
jge
shrb
dec
pop
pop
in
int3
jae
dec
sub
adc
stc
sbb
not
cltd
ja
jnp
and
faddl
imull
xor
xchg
outsb
xchg
mov
loop
sub
mov
in
stc
mov
test
popa
movsl
dec
loop
push
dec
xor
dec
repz
push
jae
movsb
jmp
scas
xor
testl
int3
push
cmp
call
call
xor
xchg
data16
xor
scas
mov
jo
out
xchg
jmp
pusha
shll
dec
cltd
push
sarb
scas
inc
into
test
push
pushf
js
cmp
out
dec
imul
cmp
xchg
movsl
push
dec
xor
clc
or
shr
test
dec
and
out
mov
mov
std
movsl
xor
test
loopne
scas
pushf
scas
sub
mov
mov
add
outsl
add
jge
pop
mov
pop
push
daa
xor
xor
outsl
pop
jle
mov
xchg
push
lds
addb
push
sbb
ret
cmpsb
ds
nop
cmp
and
pop
ds
mov
xor
jne
dec
xor
mov
scas
out
jbe,pn
and
dec
call
adc
xchg
mov
outsl
lea
sub
mov
std
mov
and
push
sub
ret
add
cmpsb
das
fs
pop
stos
fwait
push
sbb
lods
repnz
push
cwtl
bound
cltd
pop
out
repz
movsl
cmp
andl
shll
cld
jne
sbb
push
mov
mov
push
push
lods
ret
sahf
sahf
xchg
nop
or
das
jnp
inc
mov
sbb
pop
cld
cmpsl
mov
sub
dec
loop
push
adc
cmp
mov
inc
repz
xchg
xchg
sbb
xacquire
mov
jns
adc
pop
shl
fwait
sarl
pusha
out
test
jno
and
dec
into
jne
pushf
adc
xor
les
mov
mov
fisubrl
addr16
push
mov
or
addr16
jmp
ffreep
test
mov
nop
je
adc
mov
stos
daa
arpl
fisttps
add
inc
xor
jno
dec
imul
pop
xor
and
daa
int
hlt
mov
or
mov
icebp
cmp
out
leave
mov
je
das
test
sbb
pop
xchg
inc
add
fists
and
or
xor
jl
xchg
pop
test
jne
clc
jne
mov
cmpsl
test
cmpsb
and
mov
in
push
stos
sub
pop
pushf
lcall
dec
and
add
loopne
in
dec
jb
out
jbe
mov
cld
xchg
into
lret
pop
push
and
pushl
mov
test
addr16
ja
cwtl
mov
jecxz
ficompl
fidivs
push
sub
cmp
jl
and
and
push
cmp
out
and
lods
dec
jne
scas
mov
lahf
rcl
and
addb
push
xor
daa
dec
xorb
cmp
pop
push
sarb
test
mov
fstpl
pop
mov
and
jne
sub
push
mov
inc
cmc
push
mov
inc
cmp
fucomi
dec
xchg
and
and
mov
pop
popf
int
mov
loopne
enter
addr16
fnop
mov
mov
sbb
scas
outsl
jb
ret
jno
nop
push
cltd
bound
jecxz
pop
stos
xchg
lea
mov
jge
popa
jecxz
sub
or
cmc
out
cld
xchg
adc
dec
fwait
subl
xchg
xorb
call
dec
lret
stos
fwait
dec
cs
fidivs
xchg
mov
fisubrs
sar
push
shl
jo
mov
sbb
clc
or
out
leave
adc
inc
nop
pop
push
xchg
insb
lods
fwait
jl
dec
mov
loopw
push
sub
mov
adc
nop
jne
sub
adc
xor
arpl
out
clc
movsb
adc
sarl
stc
and
adc
sbb
imul
rorl
into
mov
repnz
iret
call
xchg
test
mov
sub
sarl
mov
mov
inc
and
and
idivl
pop
negl
insl
jns
cld
mulb
fsubr
inc
push
nop
xor
add
loop
add
mov
insb
inc
cmpsb
and
jecxz
dec
xchg
jle
int
mov
push
cmp
stos
fcmovnu
andb
mov
or
and
mov
dec
push
hlt
es
rcr
cli
and
pop
aas
mov
jp
push
rorb
mov
scas
mov
cmp
flds
add
movsl
push
lret
mov
shll
inc
mov
mov
call
scas
sub
sti
test
mov
xor
cmp
addb
sub
fistpl
xchg
xchg
call
ljmp
test
sbb
push
fwait
xchg
mov
into
and
int3
pop
push
or
mov
jg
loope
pop
shll
ja
sub
fadds
loop
mov
dec
dec
adc
icebp
jb
mov
faddl
ret
push
xchg
daa
pop
mov
inc
pusha
int3
mov
mov
or
lods
and
lret
repnz
lcall
int3
mov
lds
imul
lret
loop
inc
sbb
pushf
test
pusha
out
into
push
mov
enter
mov
pop
mov
mov
adc
pushf
push
leave
cmp
add
or
fstpl
or
add
mov
cwtl
pop
lea
cmp
xchg
cmc
sbb
jns
fmul
pop
cmpsb
sbb
mov
mov
mov
scas
add
pop
mov
jl
addr16
mov
stc
inc
ljmp
popa
xchg
add
pop
notl
in
mov
cli
sti
pop
shll
inc
mov
push
inc
and
stos
or
dec
mov
mov
lret
xchg
mov
fs
or
ja
js
and
addr16
aam
xlat
shr
push
xchg
call
inc
repz
lahf
out
pop
aas
ficompl
ja
jl
hlt
add
xchg
test
adc
add
pop
sub
andl
inc
int
mov
mov
adc
dec
jne
add
push
cltd
push
outsb
cmp
fdiv
imulb
movsb
mov
loope
xor
fistpll
sahf
insb
pop
idiv
mov
add
mov
mov
jmp
daa
dec
ja
push
les
fstl
in
xor
pop
or
jno
adc
xor
test
add
or
mov
push
sarl
popa
pop
jne
pop
push
scas
mov
bound
cld
push
mov
shr
cmpb
loop
arpl
aaa
add
push
lcall
and
cmp
mov
pop
inc
cmp
cmp
mov
mov
mov
lahf
pop
and
test
insb
int
sub
pop
in
and
out
pop
jg
fidivrs
mov
jmp
adc
xor
lock
dec
insb
pxor
sbb
mov
and
or
jg
and
andl
gs
adc
pushf
stc
popa
inc
xchg
sbb
jge
xor
stos
sub
cli
and
fildll
push
push
in
rorb
orb
pop
mov
into
xchg
jmp
add
jnp
cmc
and
std
pop
sbb
cwtl
inc
mov
jp
push
xchg
mov
std
sahf
or
cmp
sub
lods
ss
mov
nop
stos
loopne
and
mov
dec
lahf
lcall
push
add
jno
cmpsb
mov
cmpb
call
inc
dec
mov
inc
dec
sbb
into
or
aam
xchg
pop
sbb
ss
jb
addps
mov
fs
addr16
cmpsb
scas
imul
test
cmpsl
hlt
xchg
ret
mov
iret
lods
sub
xor
lret
mov
cli
mov
xlat
movsb
mov
mov
jns
mov
xor
hlt
fsubl
sbbb
jg
in
in
fs
jae
add
jnp
sbb
xchg
dec
pop
sahf
jg
outsb
or
mov
lahf
rcl
out
icebp
sbb
jle
lcall
jbe
jae
ret
popf
into
sti
push
pop
cwtl
push
cmpl
push
lahf
cmpsb
cmc
jmp
mov
aaa
aaa
test
fiadds
cmpsl
mov
add
dec
aaa
mov
mov
xchg
dec
enter
repnz
data16
jecxz
test
ds
mov
addl
mov
xchg
popa
clc
inc
adc
sub
mov
xor
sbb
lcall
out
sbb
push
sbb
pop
push
movsb
std
cs
push
add
jge
sub
adc
mov
leave
sbb
rclb
pop
sub
cmp
insl
xlat
lahf
out
fdivl
lea
inc
push
lds
dec
loopne
mov
mov
jae
mov
dec
mov
push
sbb
test
jnp
enter
or
mov
and
ss
js
push
cmpsl
shl
push
adc
xchg
xor
xchg
cmp
in
jp
sub
scas
xor
jg
jo
sub
mov
int
incl
xchg
das
sub
out
mov
inc
test
mov
pop
jbe
cli
mov
mov
and
filds
mov
xchg
popa
push
outsl
lcall
push
cmc
dec
xor
fadds
inc
mov
pop
inc
push
rcrl
jno
inc
push
or
loope
xor
movsl
pusha
push
dec
jp
mov
dec
jae
xor
iret
jnp
push
cmpb
je
inc
in
or
ljmp
aad
adc
stos
cmp
cmc
jo
das
loopne
xchg
xchg
and
and
cmp
lret
add
gs
in
mov
jo
les
jge
xor
sbbb
inc
pop
adc
fld
int3
jne
les
jl
daa
jle
xchg
push
cli
stos
pusha
nop
ficoml
dec
xchg
xchg
mov
pusha
push
add
sbb
adc
mov
mulb
leave
jecxz
sub
jg
pop
js
sbbl
das
aaa
stc
stos
pop
lds
cmpsl
cltd
dec
pop
xchg
pop
adcl
test
das
sbb
and
push
call
out
add
stc
imul
cmp
pop
js
lods
dec
jecxz
and
push
dec
lahf
or
mov
jp
push
jb
add
fadd
int
and
stos
or
in
mov
adc
loope
dec
xchg
std
mov
lcall
jp
cmp
pusha
ret
call
ss
lock
xor
bound
int3
loop
mov
aad
repnz
mov
jae
push
jmp
mov
lret
fsubrl
pop
enter
adc
jge
jnp
or
or
out
pop
xchg
xor
jle
push
inc
lds
jne
jne
testb
movsb
test
xor
xchg
ds
inc
jae
imul
adc
push
pop
adc
and
fists
mov
xorl
pop
insb
scas
push
xor
push
mov
mov
js
push
loop
ja
mov
sbb
movsl
mov
inc
jae
sti
sbb
inc
pop
add
adc
or
cmpsb
popf
adc
cmp
mov
cmp
test
xor
xchg
popf
mov
int3
cmpb
test
js
mov
inc
push
push
mov
ret
mov
ret
shlb
cld
mov
nop
fisubl
mov
inc
std
loope
test
lods
ss
sbb
push
sub
mov
sbb
push
mov
add
push
xlat
call
and
ret
ret
pop
pop
push
sbb
daa
pop
inc
mov
data16
loop
mov
rcrl
in
rcll
ud0
pop
push
test
pop
mov
xchg
sbbl
aam
in
mov
mov
dec
mov
fs
jle
daa
stos
sbb
mov
inc
pop
and
fwait
mov
jge
inc
aad
in
shrl
rcrb
push
popf
push
imul
pop
mov
pushf
push
andl
test
jbe
imul
sbb
bound
mov
pop
das
jmp
fstp
jle
std
pop
rorb
lret
cmp
dec
fstps
fstpl
stc
fldl
or
jl
cmp
xor
pop
pop
cmpl
dec
mov
add
test
cmpsl
xchg
sahf
aam
pop
or
ret
mov
jecxz
lods
mov
enter
jnp
mov
stos
std
ja,pn
sbb
and
add
mov
or
jge
pop
mov
mov
sub
popf
xor
ljmp
or
stc
mov
mov
repz
in
sub
mov
nop
xchg
fidivl
inc
cmp
or
push
fildll
mov
push
or
scas
dec
inc
bound
in
insb
lret
scas
sbb
cld
ret
add
push
fildl
mov
sbb
push
and
dec
adc
jae
pop
xor
out
fcomps
mov
clc
pop
rorl
out
inc
nop
sub
add
mov
sbb
sbb
decl
lock
in
ror
inc
cmp
cli
sub
mov
call
clc
mov
mov
rcrl
subb
and
inc
xchg
fdivr
pop
lret
xchg
and
cs
sbb
jo
ret
fs
iret
mov
stos
fucomi
cmp
cld
inc
xor
in
add
cmp
lea
test
cli
js
cs
ficoms
push
or
push
and
adc
shl
fsubrs
pop
and
cld
and
sbb
mov
insl
and
cmp
aas
insb
sahf
mov
jbe
pop
iret
and
sbb
xchg
jae
popf
nop
sbb
mov
sbb
push
std
daa
cmp
push
xchg
aam
pusha
js
add
loopne
mov
lcall
xchg
lcall
cmp
and
in
add
testb
mov
jnp
and
popa
pushf
xor
pop
cmp
addb
jle
sub
mov
jecxz
dec
cmpsb
dec
nop
fiadds
inc
and
rcrl
xorb
loop
mov
lock
jl
push
jl
adc
xor
jne
repnz
clc
pop
lcall
ja
dec
or
sbb
inc
loop
nop
adc
lea
mov
mov
sbb
pop
sub
mov
xorb
leave
mov
push
std
mov
mull
mov
movsb
sub
mov
xor
mov
xchg
cmp
lods
outsb
push
movsb
movsl
in
xchg
leave
lock
xor
inc
jle
pop
popa
leave
gs
jge
cs
xor
aam
cmp
or
test
arpl
push
or
pop
aam
lods
push
cltd
mov
out
push
pop
fs
pop
arpl
outsb
push
mov
es
mov
sub
pop
mov
mov
fbstp
cmp
pushf
test
fists
dec
rcr
pop
popf
xchg
shrb
in
lods
pop
jae
movsb
rorb
cmp
xchg
pop
hlt
xchg
xchg
adc
push
push
or
not
lea
xor
push
dec
out
mov
adc
jmp
call
js
test
cmp
pop
inc
sub
inc
xorb
jmp
loopne
pop
ds
sbb
jae
sbb
jge
test
dec
jb
xchg
ficoml
jne
lods
ljmp
adc
jnp
cli
out
pop
mov
jbe
pushl
or
adc
imul
lods
std
add
add
das
jl
loopne
scas
mov
xchg
cli
and
mov
pop
pop
stos
daa
push
popf
clc
addr16
xchg
testb
xor
inc
out
mov
les
addr16
mov
jge
std
adc
arpl
and
sbb
push
add
int3
in
sub
loopne
xchg
ret
adc
sbb
fstp
pop
xchg
jb
test
xlat
int3
pop
push
ret
and
inc
js
inc
mov
push
addr16
test
cli
dec
xor
lcall
push
lret
mov
mov
loope
mov
popa
jo
cmp
cmp
xchg
pushf
shr
jnp
jmp
jns
addr16
insb
js
mov
or
orb
pop
scas
lods
addr16
data16
js
lea
xor
fwait
lods
into
dec
sbb
sbb
sbb
fidivl
pop
call
push
cmp
fwait
mov
inc
mov
adc
push
and
in
outsl
mov
cmpsb
xchg
stc
mov
int
imull
stos
sub
scas
dec
cld
xor
pop
pop
xchg
add
inc
pusha
sahf
fcoms
xor
jb
xor
and
out
xlat
inc
pushf
xchg
in
js
xchg
aas
mov
jp
fmul
icebp
push
xchg
jb
or
and
xor
sahf
dec
xchg
adc
pop
push
in
in
js
fcoms
xchg
mov
lods
pop
idivl
cmpsb
sub
cltd
jp
lret
cmp
jecxz
xchg
out
and
push
into
jne
dec
jp
jo
inc
xor
adc
fistl
mov
iret
or
pop
xor
icebp
cli
addr16
inc
xchg
dec
mov
adc
testb
push
mov
mov
fsubrl
push
ljmp
into
or
pop
dec
jno
movsl
xchg
pop
lea
test
out
cltd
fcoms
cmp
cld
sbb
push
dec
xchg
and
push
rol
pop
je
or
jmp
push
sub
and
mov
mulb
mov
mov
and
xchg
mov
add
and
loopne
push
add
sub
mov
jecxz
cmp
ret
jnp
sub
les
xlat
push
add
and
mov
jge
and
sbb
jl
mov
push
sbb
sti
dec
xor
xchg
mov
or
push
sbb
gs
ret
pusha
test
add
mov
mov
cmpsb
ljmp
test
jno
jae
pop
pop
ljmp
cmp
lahf
jo
rcll
pop
out
les
dec
mov
dec
xor
hlt
std
repnz
sub
ds
aam
std
mov
xor
cmp
cmpsb
cld
inc
jne
inc
mov
jp
lret
mov
cmp
loopne
sub
inc
jo
xor
mov
lret
pop
xor
imul
in
arpl
cltd
in
cli
pop
out
xor
push
lods
mov
test
out
jle
and
aad
lea
xchg
fnstenv
inc
das
test
sti
imul
cwtl
jl
fwait
or
push
ss
push
cmp
decb
jl
cs
pop
jg
sahf
mov
push
movsb
mov
cltd
fldt
mov
push
push
rorb
push
inc
push
mov
mov
out
mov
leave
jbe
insb
pop
call
pop
sub
cld
lret
mov
ljmp
jp
fs
loop
lods
add
xchg
add
inc
lock
sti
jg
mov
cmp
fildll
repnz
insl
repnz
movsl
data16
or
push
cld
insl
clc
loop
sahf
cmp
imul
push
mov
adc
cmc
xchg
negb
lock
lret
mov
cmp
mov
nop
movl
fisubrl
lea
or
adc
scas
int3
loopne
stos
rcr
addl
mov
aas
stc
lret
and
and
sub
fsubrl
shrb
loope
aas
xor
inc
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
jmp
mov
cmp
mov
pop
int
jl
pop
jl
test
mov
es
sub
jmp
je
stc
mov
aaa
sub
fmuls
and
lret
and
sar
outsl
push
add
lret
adc
leave
pop
pop
sub
and
xor
cwtl
fcoml
inc
pop
sbb
and
std
cmpsb
mov
imul
pop
push
das
mov
mov
lods
sbb
mov
fiaddl
adc
push
sbb
fbstp
adcl
jne
mov
fnstcw
decb
mov
rcrb
add
in
jle
mov
push
xchg
pop
pushf
mov
push
sub
clc
enter
cmp
push
or
cwtl
and
shl
outsw
fidivrs
xor
test
lea
cld
mov
mov
das
and
fisttpll
aad
mov
add
mov
and
shrb
add
inc
and
inc
xor
jno
pop
mul
jno
popa
sub
and
mov
fs
jo
sbb
xchg
add
inc
cmp
rorb
jmp
dec
dec
xchg
mov
mov
rcrb
rcr
ret
mov
sbb
fildll
xor
idivl
or
jne
sahf
pop
sti
xor
leave
shrl
addl
push
jg
push
aad
inc
fdivl
fldcw
hlt
xorl
lods
mov
jns
mov
iret
dec
mov
dec
mov
lods
fimuls
lods
aad
ds
outsl
ss
push
cmc
push
xchg
lods
aad
jp
std
push
decl
inc
push
push
push
xchg
aam
mov
frstor
mov
mov
ds
xchg
mov
cmp
fucom
test
and
adc
or
cld
dec
movsbl
ficoml
push
js
sub
popa
repnz
sbb
icebp
or
add
xchg
inc
icebp
es
mov
loop
in
mov
stos
and
shll
loope
cmpsl
cltd
add
xor
pop
xchg
mov
loope
testb
das
clc
je
pop
or
pop
xchg
insl
gs
mov
xchg
inc
cmp
adc
mov
xchg
pushf
iret
push
pmaxsw
mov
jl
cli
leave
sub
mov
repz
test
and
add
lock
fadds
movsl
aas
xorb
sub
add
sti
jle
xor
sub
fildll
dec
call
or
fiadds
mov
ret
push
xor
xchg
inc
and
pop
adc
push
mov
shll
dec
sub
adc
sbb
std
sarl
outsl
cmp
insb
fs
rolb
mov
js
xor
movsl
scas
outsb
mov
xlat
imul
sbb
and
push
lds
fldcw
addb
push
inc
aam
jp
addr16
jmp
dec
movsb
ljmp
push
xchg
mov
daa
inc
xor
jae
inc
pop
adc
jae
add
lds
cmpl
mov
sbb
aam
faddl
in
inc
mov
mov
push
push
int3
sub
aaa
fs
dec
rcrl
aad
mov
mov
mov
popf
xchg
jb
out
dec
int
out
enter
jns
loopne
pop
push
or
notl
mov
aas
in
cld
out
insl
fdivs
test
push
into
mov
pop
mov
xchg
xchg
out
bound
cltd
aad
dec
push
shll
fmuls
xchg
lret
pop
cmpsl
ficomps
pop
mov
dec
mov
pop
repz
inc
lock
xor
mov
push
and
mov
dec
test
mov
dec
sarb
inc
push
adc
and
add
sbb
fimull
out
jbe
call
das
mov
cmp
outsb
lock
in
push
je
xor
sarb
enter
inc
stos
xchg
push
lea
ljmp
data16
pop
mov
add
sbb
push
es
pop
repz
sub
sub
inc
push
pop
jp
push
gs
gs
loop
jno
loop
test
lret
rcr
orl
jbe
add
push
stos
pop
sbb
jo
cwtl
out
into
int
loop
sbb
imul
jle
fs
sub
stos
mov
aas
sbb
test
sbb
cmc
std
jp
mov
in
test
lock
and
in
push
lods
push
scas
scas
pop
inc
sti
jo
dec
data16
out
pop
jnp
pop
addl
and
rcrl
mov
inc
lcall
xor
fstps
xchg
mov
shlb
and
es
jbe
sbb
inc
test
movsl
int
pop
pop
xacquire
je
cmp
dec
push
pop
icebp
sub
xchg
or
cs
add
dec
cld
cmpsl
push
hlt
add
sbb
sub
and
push
push
mov
xor
push
clc
push
cmp
subl
and
repnz
shll
stos
cmc
sub
daa
pop
arpl
test
je
into
test
stos
and
fildll
nop
int3
int
sub
cmpsb
xchg
std
nop
push
fprem1
jae
repnz
out
vpaddw
and
fisttps
clc
jne
ss
popa
std
xor
sbb
and
push
fisubrl
push
clc
in
lods
xchg
clc
rcr
out
sbbl
inc
insb
pop
mov
negb
or
dec
out
mov
jne
mov
push
cmpl
xchg
mov
xor
mov
xor
je
adc
and
mov
push
pop
push
sub
out
xchg
data16
and
stc
xor
sarl
ds
or
mov
aad
sub
and
xchg
push
adc
pop
icebp
xchg
or
fsubr
jl
inc
nop
push
pop
lods
jb
and
setbe
push
dec
ret
cmp
cli
xor
dec
inc
inc
add
adc
int
pop
nop
jae
xchg
push
popa
inc
jmp
cmpb
out
popf
jbe
mov
int
jne
push
loopne
sbb
stc
and
mov
data16
mov
cwtl
sub
sar
adc
push
sub
add
mov
pop
rcrl
ss
inc
outsl
fmulp
dec
das
sbb
jmp
cmpsb
xchg
out
stos
pop
shrb
cli
rclb
pop
mov
js
mov
idivb
and
movsl
scas
mov
lds
jb
nop
jle
jecxz
enter
mov
das
sub
imul
sub
jle
push
or
adc
adcl
push
push
fs
dec
dec
and
lock
or
cld
or
nop
inc
fbld
mov
push
inc
push
cmp
lret
dec
cltd
ret
sub
pop
fmuls
in
jns
xchg
out
mov
imul
pop
mov
dec
sbb
cwtl
push
xchg
out
mov
insb
movsl
xor
add
cmpsb
inc
jbe
jge
mov
fistpll
mov
rcrl
mov
sub
clc
mov
jns
pop
lret
aas
xchg
sub
imul
ficompl
into
outsb
testb
inc
sbb
aam
cmp
dec
mov
in
cld
or
add
inc
and
or
into
insl
jnp
mov
lods
mov
mov
add
ljmp
loopne
out
lock
cltd
xchg
fisttpll
mov
stos
adc
inc
and
aaa
mov
ficomps
jne
popa
adc
sbb
mov
fldt
mov
jmp
dec
push
dec
jecxz
sbb
adc
gs
adc
jmp
outsl
cltd
jno
dec
cmc
mov
aaa
aaa
cmc
jmp
popa
aam
jmp
in
mov
mov
in
ds
jne
push
cli
js
pop
test
jae
mov
inc
and
loope
or
movsl
sub
or
cld
mov
lock
sbb
pop
xchg
and
aam
pop
scas
lods
lock
mov
sar
dec
mov
adc
jmp
or
pop
mov
mov
decb
mov
mov
jno
jge
xchg
dec
cmpsb
mov
push
push
mov
addr16
mov
pop
mov
xor
push
inc
mov
push
cmp
dec
sub
push
dec
imull
aaa
iret
mov
daa
or
fsubrl
addr16
jp
xor
or
mov
call
test
inc
pushf
jo
push
pop
inc
adc
sbb
pop
mov
add
dec
or
pop
push
imul
cmpl
sahf
add
arpl
outsb
out
jecxz
lret
mov
test
add
stc
mull
mov
dec
scas
popa
jno
push
or
xor
or
ret
aaa
stc
lret
lret
xorb
outsb
lock
test
jl
shrb
dec
add
cmp
mov
shlb
xor
dec
mov
sub
jg
ja
lcall
xchg
in
insl
ffree
jns
mov
rcl
out
imul
xor
daa
je
rorl
stc
or
xchg
clc
jle
push
in
div
notb
jl
cmp
aad
hlt
mov
cltd
pop
imul
inc
int
mov
stos
xor
or
pop
outsb
ja
push
cwtl
iret
mov
std
xchg
in
nop
int
xchg
sbb
dec
scas
lock
out
mov
in
nop
data16
sbb
add
mov
scas
mov
pop
mov
and
pop
cli
sub
or
out
icebp
arpl
stc
jbe
xor
xchg
pop
enter
pop
or
jne
rol
movsb
push
jmp
xchg
mov
jp
cmp
or
add
sbb
mov
xorl
mov
inc
dec
rcrb
push
out
add
cld
std
fdivs
mov
lds
into
xlat
or
gs
into
or
jecxz
xor
popf
psrad
cmc
mov
push
stos
hlt
das
mov
les
xor
sub
xchg
pushf
shl
inc
ror
mov
lret
sbb
clc
push
sbb
popf
insl
sub
dec
int3
mov
mov
aad
inc
adc
ljmp
or
push
mov
test
and
xchg
cld
ss
pop
cmc
mov
out
sub
jne
or
push
inc
ds
ds
mov
rcll
movsb
sti
das
cli
insb
lret
xor
add
addr16
push
arpl
cmp
push
mov
jbe
shll
in
xchg
and
ficoml
jo
shl
es
mov
orl
scas
and
lods
sub
and
call
pop
inc
mov
pusha
mov
movsl
inc
mov
sub
mov
insb
inc
mov
push
cmpsl
push
push
insb
push
fistpl
sarl
push
dec
and
push
cld
cmp
sbb
and
pop
dec
and
in
mov
push
xchg
xor
dec
mov
es
cltd
mov
sub
scas
mov
cmpsb
fxch
dec
lret
fwait
pop
add
lock
xchg
insl
dec
lds
xchg
mov
inc
sub
movb
sbb
xchg
cmp
inc
add
inc
lods
lock
rcll
inc
sbbb
popf
out
lret
les
adc
pop
call
pop
shll
shlb
mov
das
push
pusha
lcall
jo
sbb
frstpm(287
or
mov
fisubs
nop
jg
call
mov
sub
cmp
mov
xor
jo
not
cwtl
test
dec
pop
mov
std
inc
pusha
ret
xor
adc
gs
push
out
setno
push
add
sti
mov
aas
push
cmp
or
movsb
jnp
inc
fdivrl
aam
and
loope
popf
xchg
pusha
mov
sbb
inc
pop
jecxz
cmpsb
insl
lods
mov
mul
or
xor
inc
iret
imul
add
sub
mov
xchg
mov
jne
dec
xchg
rclb
ret
iret
cvtps2pd
mov
ret
in
mov
out
cltd
sti
mov
jns
cmpsb
mov
std
and
dec
fidivrl
mov
stc
das
xchg
fsubrp
data16
push
sub
xchg
notb
fwait
xchg
mov
cmc
stos
inc
pop
xlat
repz
int
stos
xchg
aas
mov
xor
shrl
sbb
mov
cmpsb
hlt
push
push
jmp
xor
filds
jo
js
mov
xor
xchg
loope
add
xor
cmp
sbb
lods
into
dec
cli
pop
cmpsb
sbb
fbstp
jb
cmpsb
out
mov
roll
xchg
cmpsl
les
std
and
mov
test
inc
push
push
add
cs
and
inc
xchg
out
fcom
mov
ret
and
lds
sub
scas
lods
jae
push
ror
dec
xor
jg
push
and
push
lea
add
xchg
subl
cmp
data16
into
xchg
pusha
pop
fwait
in
fisttpll
js
fdivs
xchg
xor
jecxz
add
mul
movsl
cmp
in
push
outsl
dec
call
inc
xchg
pop
mov
icebp
ret
daa
lret
add
or
scas
xchg
dec
fcmovne
orl
repz
insb
cmp
sbb
push
lret
cmp
push
arpl
and
xchg
rcrb
mov
xor
mov
mov
inc
mov
dec
xor
fwait
gs
fsubrs
inc
divl
hlt
add
test
popf
leave
neg
shll
orb
test
cmp
jae
lea
popf
hlt
movsl
jmp
inc
xor
pop
dec
fcmove
js
xchg
push
call
fisttps
stc
icebp
out
xchg
mov
imull
stos
cmp
popa
and
inc
sbb
inc
arpl
adc
clc
popf
xchg
cmp
rep
and
das
add
cld
xor
hlt
insl
fwait
mov
cmp
pop
rcll
arpl
fs
push
push
jle,pn
xchg
cltd
fwait
and
mov
aam
pop
clc
mov
or
xlat
pop
xor
and
ret
pusha
cmpsb
jo
mov
xchg
test
xor
xlat
fistpll
scas
xor
enter
cwtl
jno
stos
xchg
sub
rcrb
and
fldenv
mov
push
sub
add
cmp
mov
fs
mov
push
js
dec
pop
call
and
mulb
outsb
sbb
cwtl
test
push
mov
pop
ret
add
inc
pop
lret
popa
sub
or
xchg
insl
xor
push
cmpsl
outsb
inc
adc
popf
in
pop
xor
rcr
repz
sar
xor
fwait
daa
setnp
mov
mov
mov
punpckhwd
je
lret
mov
xchg
inc
jge
lret
ljmp
cmp
pop
int3
sub
mov
repnz
sahf
scas
dec
xor
inc
add
sbb
and
xchg
jb
cmovle
inc
mov
xchg
cmc
cmpl
inc
inc
cmp
aas
jl
jbe
cld
sbb
inc
mov
lahf
adc
mov
sub
aad
xor
outsb
ret
inc
loop
dec
xchg
inc
sub
out
pop
mov
xchg
ds
andl
popl
insl
bound
in
lea
push
pop
mov
std
mov
xchg
xchg
or
repnz
push
mov
fiaddl
into
inc
pop
out
mov
pop
cmp
pusha
fldenv
jle
sbb
call
xor
jno
insl
mov
push
and
cmc
insl
test
add
mov
fldt
and
int3
pop
mov
jbe
adc
xchg
jnp
or
movsl
inc
aam
pop
push
stc
aam
pop
int3
xor
mov
mov
xor
mov
mov
rcr
cwtl
xchg
jno
pop
fdivrs
and
pop
loope
jae
xchg
rcrb
cmpsb
push
stc
xchg
adc
repnz
loope
inc
clc
fistps
pop
inc
mov
pop
xchg
addl
insl
sbb
in
fistps
divb
mov
cmp
stc
mov
out
fmulp
and
add
in
mul
cmp
mov
push
ja
mov
xchg
xor
sbb
lret
daa
cmpsl
dec
jle
mov
ja
or
outsb
repnz
dec
mov
andb
xchg
outsl
dec
jb
and
notb
dec
cmp
jge
add
mov
add
pop
add
ja
sbb
cmp
cmp
lahf
push
hlt
or
testl
stc
sti
nop
pusha
sbb
dec
inc
jg
jnp
je
mov
dec
fldl
sub
mov
sbb
adc
es
add
mov
jnp
jo
lds
jne
jge
sbb
dec
addr16
sbbb
out
leave
test
push
jns
jbe
or
rcrb
icebp
loop
movsb
jo
daa
cmp
xchg
icebp
and
outsb
pop
out
aaa
iret
aad
lcall
je
push
jg
dec
movsb
jne
out
mov
mov
outsl
shlb
xchg
inc
das
rcrl
daa
int3
repnz
dec
stos
out
imul
inc
fcoml
sarl
mov
dec
mov
adc
and
inc
mov
pop
inc
xchg
mov
dec
repz
sbb
out
mov
shrb
test
xchg
loop
pop
inc
ds
int3
add
ss
sub
std
jle
in
lods
pop
jae
mov
xor
arpl
cmp
mov
add
inc
sub
dec
sti
repnz
jmp
mov
pop
icebp
notl
push
xlat
add
inc
sub
lods
scas
xchg
adc
sbb
pop
stc
sbb
test
push
or
in
ljmp
mov
lock
movsl
inc
mov
ret
add
xor
mov
aaa
and
jo
and
out
cmp
sub
pop
popa
mov
out
cmpsl
out
clc
insb
mov
into
sbb
cmp
stc
and
sbb
mov
mov
dec
add
add
imul
mov
push
in
sub
sahf
sbb
mov
or
pusha
fistpl
mov
or
fisubrs
aad
pop
into
stos
out
dec
xlat
push
push
lds
clc
daa
fistpll
repnz
in
mov
stc
sub
hlt
xchg
data16
cmpsl
orb
mov
add
popa
dec
xchg
addr16
dec
xchg
mov
pushf
pop
sti
and
fldl
mov
xor
test
xchg
cmpsl
js
hlt
inc
push
ja
inc
subl
pop
pushf
rcll
movsb
mov
hlt
adc
fistpl
stos
mov
mov
jo
insb
pop
push
roll
lods
xchg
mov
add
jmp
xchg
mov
xor
aad
dec
push
push
cmp
mov
jbe
mov
xchg
dec
pop
dec
aaa
ror
sbb
sbb
fwait
ljmp
push
stos
int3
les
ds
sbb
shl
nop
inc
test
insb
mov
xor
and
xchg
sub
call
rolb
int
sbb
movsl
dec
cmp
dec
or
in
push
imul
sbbb
and
pop
aad
cmc
fmull
push
ss
xor
push
test
push
in
inc
stos
dec
sbb
int3
mov
add
or
adc
cmpsl
pop
mov
fs
mov
adc
dec
and
push
pop
fidivrl
icebp
sbb
into
sub
sub
lds
dec
xor
xchg
pop
imul
sbb
push
leave
push
lcall
jle
into
xor
push
outsb
dec
test
xchg
jmp
xchg
mov
mov
sbb
mov
movsb
pop
and
out
xrelease
jmp
std
scas
xchg
push
js
nop
test
mov
aaa
and
xor
lret
adc
aaa
pop
mov
push
out
mov
sub
jmp
loop
or
popf
and
inc
ljmp
adc
xchg
pop
adc
adc
jnp
adc
aas
or
imul
mov
inc
test
xchg
xchg
test
out
sub
mov
cli
dec
sub
cmp
xchg
ljmp
xor
scas
into
int3
cld
nop
mov
sahf
mov
inc
mov
rcrb
shlb
cmc
push
jbe
adc
int3
pop
movsb
cs
test
push
sub
mov
aas
out
mov
jge
push
pop
xor
lock
sub
aad
sbb
push
ljmp
add
push
mov
jecxz
mov
aaa
loop
or
sbb
mov
repz
loopne
pop
cmp
cli
add
adc
test
or
jmp
insl
inc
ret
test
and
jno
loop
xchg
inc
ja
push
sbb
subps
sub
mov
or
xchg
pop
call
push
dec
push
test
pusha
xchg
push
pop
xchg
fucom
std
arpl
mov
sub
imul
pop
dec
into
mov
frstor
push
int
adc
inc
jl
ljmp
std
pop
out
int3
or
adc
scas
push
dec
jnp
and
xor
movsb
push
arpl
jns
test
cmp
pop
or
repnz
mul
sbb
xchg
lods
xchg
inc
pop
mov
pop
test
add
lods
hlt
xchg
xor
pop
dec
and
push
add
insl
jae
sbb
js
mov
insl
dec
shll
mov
das
sar
mov
or
mov
pop
mov
test
test
xchg
repnz
jp
xchg
push
pop
loop
cmp
int3
mov
je
lea
jge
sub
lret
test
jb
icebp
pop
mov
int3
add
dec
movsb
inc
pop
mov
add
outsb
push
scas
add
scas
mov
in
cmpb
xlat
xchg
push
adc
pop
pop
fwait
xor
enter
cmp
add
sbb
dec
test
pushf
pop
inc
mov
insb
xchg
insl
mov
shl
testl
cltd
sarb
pop
insb
ljmp
popa
mov
and
out
std
clc
in
mov
cmpsb
movsl
mov
push
int
pop
out
ss
and
rcl
mov
sarb
xchg
js
adc
and
incb
call
dec
sbb
xchg
mov
or
mov
pushf
stc
arpl
sub
les
push
cwtl
cmc
rcll
hlt
out
dec
push
mov
fidivrs
xlat
rolb
lret
or
rcl
insb
jle
jecxz
or
ret
lea
jge
xchg
imul
clc
stos
push
sbb
ficoms
repz
pushf
push
inc
clc
je
mov
xchg
cltd
dec
or
mov
mov
cmp
adc
repnz
jle
adc
je
movsb
subl
push
pop
inc
pushf
adc
and
outsl
ds
es
pop
adcl
out
dec
in
or
repz
add
or
aad
mov
aaa
pop
pop
addr16
jne
data16
addr16
jl
imul
add
mov
pop
loopne
sbbl
fildl
mulb
ss
cs
inc
fwait
jg
mov
loope
cmc
inc
push
movsb
pop
cmp
mov
inc
jge
call
cli
and
stos
pop
jnp
mov
push
in
dec
adc
nop
test
cmp
ss
pushf
jecxz
fwait
movsl
mov
inc
loope
adc
sub
std
iret
outsb
mov
jb
sahf
fwait
es
add
lds
mov
movsl
jae
and
or
mov
stos
mov
jns
fmuls
pop
mov
add
push
add
sub
lods
jne
jg
lcall
push
shll
xchg
pop
xchg
pop
pop
lret
xor
xor
adc
xor
int
fs
jmp
or
fldl2t
and
pop
jmp
add
add
lock
in
cmp
cmpsb
loope
or
aam
cwtl
dec
pop
sub
mov
mov
adc
mov
aad
je
es
aam
addb
int3
movsb
loop
sahf
jno
pusha
sbb
mov
es
lea
and
pop
cmpsl
jg
mov
pop
xor
loopne
mov
fildll
sbb
adc
fcmovnbe
push
xor
stc
sti
sbb
mov
mov
push
inc
fldenv
and
mov
add
xchg
testb
je
les
out
mov
mov
das
aad
pop
add
inc
cmp
mov
xor
mov
and
sti
mov
arpl
andb
sbb
stos
cmpsl
sbb
inc
cmpb
bound
sub
hlt
pop
mov
outsb
push
ds
das
sub
push
loopne
jne
cmpsb
cmp
cs
aaa
dec
mov
add
daa
dec
out
or
addl
xchg
lods
mov
fstl
into
xor
mov
loope
sub
test
xor
mov
jne
je
mov
dec
rorl
cmp
xor
ss
cmc
gs
sbb
test
outsb
cltd
push
push
call
push
adc
jae
pop
mov
in
ljmp
pop
clc
jmp
sub
xchg
aad
push
and
in
push
call
out
dec
fstl
inc
mov
mov
fidivs
out
rcll
lea
movsl
jb
cmpxchg
iret
ss
cmp
sbb
ljmp
clc
inc
xor
push
arpl
jns
lds
mov
adc
jp,pn
pop
fwait
pop
push
lock
pop
or
push
jne
mov
pmaxub
lods
repz
daa
lods
addr16
test
je
jg
jmp
xor
dec
insl
pushf
inc
dec
inc
mov
aaa
adc
pop
fucomip
push
sub
mov
in
testb
xchg
xchg
mov
push
daa
scas
and
jmp
lods
movb
movq
dec
and
push
mov
ror
sbb
cmp
outsb
icebp
pop
add
or
mov
xchg
stos
rorl
xchg
mov
adc
dec
xorl
clc
ljmp
sub
push
mov
jno
aas
sbbb
mov
push
test
mov
insb
xor
fstl
sbb
cli
mov
popf
lods
leave
stos
dec
xchg
pushf
fwait
sub
and
fcoml
jns
push
sub
outsb
pop
pop
dec
sbb
dec
jge
cwtl
daa
xor
push
cmc
inc
leave
mov
and
repnz
decb
pusha
repnz
iret
jae
sub
mov
leave
jle
fimuls
scas
lahf
mov
push
or
xchg
rorb
sbb
push
ss
movsl
sub
mov
push
cmp
pop
pop
jle
push
orl
mov
fcmove
mov
adc
repnz
call
lret
mov
xor
mov
cmc
aam
neg
jmp
cld
mov
clc
pop
xor
ret
mov
pop
cld
scas
mov
push
cwtl
ljmp
pop
add
mov
mov
xorl
jns
xchg
pop
mov
je
mov
mov
xlat
mov
and
out
test
leave
mov
xor
js
in
mov
movsl
fmul
xlat
out
mov
lahf
out
jg
cmp
bound
imul
int3
xchg
fmull
mov
into
jge
mov
xchg
mov
ja
aad
and
or
lcall
inc
fcompl
mov
loop
push
push
loop
xchg
popa
add
out
jmp
xor
into
cmp
fsts
mov
call
pop
mov
add
xchg
cmp
mov
stos
fistl
dec
jbe
jo
xor
xchg
aad
pmaxsw
shll
aas
fmull
ss
xchg
push
hlt
nop
xor
jle
and
or
cmp
cmp
loopne
stos
fcmovbe
pop
cltd
add
mov
adc
jns
repz
lretw
pop
mov
pop
jl
xlat
xchg
cltd
ret
jns
fucomp
in
sub
and
jae
int
mov
out
lahf
lock
rcrl
adc
lock
repz
mov
sbbl
nop
xchg
mov
cmp
and
out
dec
scas
jg
inc
ffreep
repnz
rcrl
fistl
add
and
aaa
cmpsl
and
int
insl
pop
xor
dec
and
cmp
sub
es
fcmovbe
fdivrl
jg
dec
cli
mov
lret
insl
mov
xlat
data16
divl
xor
int3
cmpsb
and
and
sbb
xor
rcll
cli
into
iret
mov
cmp
pop
into
jle
lods
loope
andb
leave
or
cltd
daa
mov
sub
and
jecxz
dec
and
loopne
or
fisubl
push
icebp
or
sub
cmp
mov
push
popf
sub
fldenv
xchg
out
jecxz
nop
jae
cltd
fstp
mov
xlat
xor
xlat
jle
xor
call
push
sahf
adc
cmp
pusha
lock
jae
adc
setae
jo
in
push
sub
jmp
add
push
pusha
or
popa
inc
inc
sbb
sbb
ret
mov
hlt
dec
jmp
ret
and
loope
xchg
out
enter
push
dec
aas
push
jae
pop
pop
negb
adc
xor
push
outsb
lds
cmp
lcall
cwtl
cld
pop
xchg
aad
adc
out
call
jmp
test
mov
xchg
dec
jno
loop
dec
sahf
lret
ss
cmpsl
movsb
leave
push
push
xor
add
xchg
icebp
lea
mov
sbb
mov
pop
xchg
push
arpl
push
push
stos
cmpsl
cld
insl
fs
push
push
lret
out
jg
cmc
negl
xor
mov
inc
repnz
pop
jmp
hlt
fs
in
cld
push
dec
and
and
pop
mov
cltd
mov
mov
xchg
popf
shll
inc
dec
jg
outsl
dec
pop
sbb
popa
xorb
pushf
ss
outsl
jle
pop
pop
rcrl
cmp
lock
push
jo
aaa
jle
insb
leave
aam
adc
add
push
adc
stos
xchg
mov
lahf
xor
pop
jb
jno
push
cwtl
je
movb
mov
rclb
fldcw
leave
stos
jge
fsub
xchg
xor
iret
leave
push
adc
test
or
mov
ljmp
add
loop
sete
fdivrs
nop
pusha
outsb
cmp
mov
adc
repz
jb
cmp
xlat
push
into
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
jmp
insb
jns
sbb
mov
push
lock
scas
out
call
pop
jl
out
cltd
push
mov
outsl
add
stos
add
repz
or
iret
fidivrs
mov
push
shll
mov
movsb
push
cmc
xor
push
pop
jnp
mov
inc
mov
mov
movsb
pop
aam
cltd
fwait
sub
mov
dec
sub
in
cmp
inc
pop
mov
ljmp
dec
push
daa
jl
std
loope
xor
inc
sar
aam
ja
ds
and
xchg
clc
and
lds
xchg
mov
loopne
int3
fs
mov
call
adc
cwtl
je
cmc
xchg
dec
sub
xor
jb
lahf
movl
lods
cmc
repnz
inc
inc
cmpsl
jo
push
mov
js
dec
mov
sub
stos
and
xchg
or
jns
inc
add
or
je
scas
pop
lret
rol
mov
int3
scas
fisubs
pop
rcl
ror
aam
lock
incl
or
and
mov
and
mov
outsl
push
jno
and
xlat
scas
xlat
je
jbe
and
daa
and
and
inc
pop
cmp
cmp
add
pop
xor
sub
mov
xor
mov
or
adc
xor
cmp
dec
scas
in
pop
insb
fcmovnbe
imul
xor
sahf
add
push
mov
jg
pop
push
xchg
pop
movl
test
out
into
adc
imul
in
jecxz
adc
ficoml
pop
mov
sbb
dec
ljmp
add
lcall
shl
scas
js
icebp
lcall
ret
xor
sub
ja
mov
ss
ljmp
enter
insb
jge
and
mov
cmp
jge
lds
sub
stos
insl
cli
pop
add
or
pop
push
or
dec
jne
ja
push
and
out
xchg
cmp
rol
test
repnz
mov
in
sub
dec
idivb
jg
addr16
pop
sub
sbb
addr16
test
jp
xor
push
mov
and
pop
in
dec
mov
std
mov
out
imull
xor
repnz
movl
neg
cmc
inc
lret
cmp
xchg
push
inc
lock
push
dec
cltd
icebp
dec
dec
js
lods
pop
aad
adc
repnz
in
mov
push
lock
das
inc
cs
lds
lea
mov
mov
rcrb
sbb
fists
popa
pop
daa
js
dec
mov
pop
jns
mov
lock
mov
cli
scas
sub
dec
cs
sub
push
push
mov
pop
mov
ss
xor
pop
push
xchg
mov
and
fs
inc
sbb
push
push
rcrl
les
nop
daa
and
inc
push
stos
sub
push
mov
fidivrl
pop
popf
xchg
pop
pop
mov
inc
jmp
imul
arpl
notl
inc
stos
pop
ja
call
sbb
loop
xchg
xchg
push
addl
rcll
adc
adc
out
jg
dec
in
out
xchg
test
es
es
jb
dec
sub
sti
mov
loop
dec
std
cld
ds
lods
adc
adc
pop
jl
jl
outsl
gs
negl
and
imul
adc
fistpl
pop
xchg
pop
jo
shrb
in
cmc
loop
mov
mov
psubw
es
cmpsl
scas
mov
sbb
adc
lret
and
loope
iret
fwait
aaa
sub
mov
sbb
xor
push
xor
cli
rorl
scas
pop
or
stc
mov
addl
gs
push
mov
dec
inc
jmp
cli
sbb
aas
scas
loope
jg
call
fsubrl
adc
dec
push
mov
sub
sub
mov
outsl
cmp
stc
mov
or
jl
add
push
sub
push
ret
loope
cli
xchg
std
cmp
mov
notb
push
cmpsb
hlt
sub
lret
jns
mov
shl
pop
xor
xchg
jno
loop
fisubl
int3
push
push
push
stos
adc
or
imul
xor
inc
into
loop
ffree
insl
adc
sub
outsb
movb
xor
cld
mov
js
sub
gs
xor
imul
jne
pop
mov
sbbb
push
sar
loope
out
cmp
push
loope
jg
cwtl
adc
push
adc
fldz
xchg
out
inc
mov
fildl
popf
add
lret
sub
outsb
lods
pop
mov
cmp
clc
and
imul
xchg
dec
and
and
mov
cmp
jb
fdivl
inc
lret
imul
mov
mov
jb
lret
push
es
ljmpw
aaa
into
xor
mov
push
lods
ret
in
iret
jp
out
das
dec
shll
test
mov
imul
into
xor
xlat
fdivl
in
in
mov
add
push
dec
fildl
jo
push
jp
mov
xchg
push
movsl
lret
dec
jl
mov
out
jbe
popl
in
pop
cmp
fstps
rcrb
cltd
out
aad
movl
cmp
jecxz
lret
loopne
xchg
in
out
adc
push
into
xchg
pop
sbb
jne
mov
lret
add
shll
or
inc
pushf
cmc
xor
imul
or
sub
adc
adcb
bound
in
lahf
sbb
sahf
adc
insl
ret
xchg
cld
sub
mov
addr16
xchg
mov
inc
push
in
mov
mov
outsl
inc
or
cli
sbb
inc
xchg
clc
int
ss
pop
xchg
add
mov
ljmp
push
add
insb
xchg
mov
sbb
bound
sbb
adc
xchg
lret
mov
es
inc
out
ret
nop
fisttpll
add
hlt
pushl
cld
cli
imul
js
add
xchg
add
mov
hlt
adcb
mov
pop
loope
stos
jecxz
les
aam
inc
jmp
les
inc
jb
stos
clc
ret
pop
fisubrl
ja
pushf
stc
mov
rorb
vpsrlq
out
cmpsl
test
arpl
push
mov
mov
into
sbb
imul
inc
mov
insl
rol
jmp
enter
push
flds
mov
dec
mov
cmp
push
push
test
les
xchg
fimuls
push
push
stos
xchg
icebp
fwait
mov
jae
cmp
pop
xor
fsubl
cli
push
sub
mov
fwait
movsl
sbb
ljmp
jmp
mov
add
adc
fisubrl
popf
push
test
std
pop
mov
out
jnp
dec
out
jo
int
lcall
out
xchg
jno
iret
mov
cs
iret
dec
sbb
enter
fnstsw
jmp
sbb
shrb
inc
mov
ja
popa
mov
jbe
insl
and
jl
pop
cmp
fdivrl
enter
in
mov
call
jno
push
notb
push
push
jg
lahf
mov
mov
int3
mov
jb
jl
popa
sti
jmp
xlat
into
sub
insl
loopew
or
out
adc
dec
rolb
mov
add
sub
je
jp
adc
xchg
pop
pusha
adcl
inc
inc
mov
insb
mov
cwtl
xchg
out
les
in
xchg
xchg
filds
adcb
mov
mov
and
adc
sbb
mov
sub
and
aam
xor
ficoms
push
dec
and
push
lods
sub
mov
jge
push
into
arpl
pop
daa
xor
jo
mov
ret
fists
scas
push
xor
inc
dec
adc
movsl
pop
daa
cmp
aad
loopne
fs
fbstp
jl
push
jecxz
mov
and
imul
pop
sub
imul
insb
jl
dec
pop
mov
std
cmp
aad
dec
sahf
clc
jmp
cmp
inc
inc
mov
mov
popa
sarl
rol
dec
sbb
lret
lgs
sbb
mov
add
dec
mov
sub
jbe
inc
xlat
out
xchg
lock
imul
jle
out
sub
inc
jmp
fwait
mov
mov
fimull
inc
mulb
push
inc
test
lret
int
int3
mov
out
xchg
fwait
mov
test
dec
cmpsl
or
div
insl
sti
inc
sub
jae
inc
rclb
std
push
push
lahf
and
mov
cmp
sub
pop
push
push
inc
adc
les
sbb
scas
mov
shll
xchg
mov
sub
fdivrs
jne
lock
test
dec
ss
loopne
popf
cmp
add
jecxz
xchg
push
jge
add
pop
pop
jge
add
xchg
cmp
lcall
subl
rolb
mov
xor
aas
ja
xor
repnz
xchg
mov
shll
inc
sub
sub
adc
push
adc
popf
inc
ficoml
or
lcall
jl
subl
push
hlt
pushf
xchg
gs
pop
mov
arpl
movb
xchg
dec
inc
in
stos
repnz
cmp
jg
and
fwait
pop
ror
int3
imul
loopne
int
std
cmpsb
repnz
ljmp
mov
push
add
call
decb
pop
sbb
add
jmp
movsl
mov
sub
mov
dec
push
xor
lcall
shrl
not
ds
adc
fidivrs
and
out
push
lods
gs
cld
add
dec
addr16
lods
pop
mov
mov
rol
aam
push
lea
mov
jle
sahf
in
or
dec
sbb
roll
sbb
or
dec
jmp
pop
adc
jno
pop
push
leave
and
insb
outsb
outsb
lods
mul
xchg
stc
out
push
pop
lret
cli
out
inc
cmp
test
movsb
mov
movsb
arpl
repnz
sbb
cwtl
add
inc
pop
stc
fldcw
pop
pusha
shlb
int
adc
adc
push
lock
mov
xor
inc
push
add
mov
sub
out
and
pop
cmpsb
loope
jne
or
push
xchg
xor
jb
je
arpl
pop
fsubr
shll
or
mov
sub
and
inc
push
dec
test
dec
fidivrl
fistl
adc
dec
mov
push
xor
add
xor
bound
mov
fldt
xchg
or
sbb
mov
inc
iret
ljmp
mov
cld
mov
fcomps
daa
in
icebp
sub
push
es
mov
sbb
stos
sahf
mov
jecxz
adc
testb
movsb
imul
and
andb
bound
mov
pop
inc
lahf
cmp
dec
add
movsl
cmp
inc
mov
or
repnz
pop
mov
stos
ja
mov
icebp
sub
mov
bound
lds
arpl
in
or
fistl
jge
mul
xchg
das
lock
in
xor
sti
and
or
test
push
xchg
fbld
xchg
inc
mov
push
jge
out
scas
jno
subl
push
cmp
je
repnz
ret
push
test
das
imul
xorl
jb
adc
sbb
out
mov
mov
dec
cmpsl
push
jne
dec
add
xorb
bound
xchg
add
pushf
adc
enter
arpl
push
mov
test
sti
lods
and
cmpsb
fcoml
fcoms
adc
cmpsl
mov
rcr
sbb
test
and
int
inc
or
inc
mov
pushf
imul
ja
mov
loope
addr16
pop
in
cmp
fdivr
js
xor
inc
es
push
mov
jle
sbb
ret
les
jl
mov
add
xchg
xchg
mov
pop
lret
xchg
pop
sbb
sub
or
xchg
imul
popf
daa
xchg
xlat
test
sub
ret
cli
mov
push
repnz
mov
or
lds
lods
cmpl
sbb
push
pop
xchg
and
xor
cld
outsb
rep
daa
mov
scas
lcall
add
insb
stos
adc
popf
scas
push
pop
mov
adc
insl
lods
nop
xchg
mov
push
int3
fdivr
aam
push
push
lret
push
stc
push
xor
pop
push
or
sub
mov
xor
jmp
test
push
add
or
pop
mov
xchg
ds
aam
add
in
leave
icebp
pop
inc
cs
sbb
and
mov
stos
cmp
mov
xor
push
jb
lret
jg
push
shl
cld
sub
pop
and
mov
pop
testb
jmp
xchg
movsb
push
insl
call
divb
jb
cmc
addr16
pop
add
jae
js
jg
adc
daa
pop
xchg
inc
xchg
inc
int
mov
shrb
lock
cmp
testl
test
cwtl
xor
into
js
mov
or
xor
ror
xor
xor
adc
jae
out
aaa
jno
das
adc
sbb
mov
dec
inc
push
cmp
imulb
or
outsl
push
cmp
jb
shrb
inc
mov
push
add
jb
lret
sahf
jno
jl
push
and
mov
mov
adc
xchg
adc
and
dec
jp
shrl
pop
push
mov
sub
add
push
cld
out
arpl
fwait
push
mov
jecxz
fnstsw
cli
cmp
notb
push
cld
aad
mov
imul
ljmp
cwtl
loop
sub
test
outsb
jle
ss
xor
push
add
or
hlt
xchg
mov
call
and
jg
pop
aad
incl
ret
lods
xchg
xchg
jno
out
ficompl
out
out
cmp
imul
arpl
stos
inc
push
cmc
out
push
aad
add
test
ljmp
mov
cmp
jns
mov
addl
shlb
call
popf
push
pop
pop
adc
int
adc
cld
push
pusha
push
jge
imul
or
mov
into
pop
repz
xchg
mov
imul
ja
out
or
dec
mov
add
push
js
in
and
xor
or
fdivs
mov
out
in
xor
push
lds
pop
in
inc
dec
rcl
in
adc
int
xchg
push
inc
sbbb
add
imul
jge
dec
fcoml
sbb
add
ja
pop
dec
xchg
dec
out
addl
stos
jg
das
add
push
inc
js
lds
lret
filds
les
dec
popf
mov
dec
fs
jg
cmc
jo
push
push
hlt
roll
ljmp
jp,pt
mov
addr16
xchg
pop
cli
dec
inc
sub
xchg
pop
cld
int
ja
sub
pop
movsb
jle
ja
sbb
lods
xchg
xchg
aad
je
sub
mov
cmp
mov
test
fdivrl
clc
fldenv
pop
add
jg
push
paddd
imul
fstpt
stos
push
test
or
dec
subb
lret
or
jo
push
jbe
dec
jl
loope
xor
imul
mov
loopne
sub
into
int
pop
inc
cmp
jns
sbb
mov
adc
pop
xor
jae
mov
ds
insb
fldcw
int
and
push
cs
int3
jp
mov
jp
fcoml
daa
cmp
mov
mov
mov
jecxz
fdivrs
xor
sub
and
and
or
and
aas
adc
mov
aam
popf
xchg
xor
stos
dec
inc
lret
enter
mov
lret
out
imul
mov
mov
cmp
pop
fisubrs
or
cwtl
arpl
scas
in
dec
arpl
orb
cmp
cmp
push
mov
push
xor
call
sarb
dec
jo
mov
sbb
mov
int3
jno
xor
cmpsb
movsl
and
mov
lahf
jl
or
mov
sbb
mov
jecxz
cmp
je
sahf
pop
in
sti
xor
cmpsl
mov
inc
inc
jmp
push
pusha
jns
xor
pushf
test
cmp
push
xor
mov
fs
insb
scas
adc
adc
jp
out
aaa
ror
add
mov
mov
das
xor
jo
subl
cltd
mov
cli
mov
addr16
lcall
add
add
cmc
mov
fwait
cmp
cmp
jno
and
push
push
mov
repz
pop
sbb
push
adc
iret
dec
or
andb
popa
lret
iret
in
mov
fidivrs
insl
in
jl
cmp
inc
push
in
push
sbb
je
cmp
inc
data16
fmuls
mov
mov
and
mov
xor
mov
fists
mov
pop
dec
fistpl
xchg
xchg
std
in
push
icebp
xor
push
jb
maxps
push
inc
lock
dec
mov
sub
push
stc
push
mov
and
cwtl
jp
fistl
out
inc
pop
loop
mov
mov
in
ljmp
adc
cmpsl
and
fistpll
xor
fsubrp
mov
repz
dec
dec
clc
add
ja
xor
add
push
loopne
sub
pop
add
adc
les
inc
mov
cmp
es
adcb
push
pop
sub
jno
fisubrl
cli
loopne
test
pop
stos
addr16
mov
jns
fwait
add
xchg
sub
jae
push
loopne
xor
ss
xchg
and
inc
mov
insl
cmpb
adc
outsb
sti
jmp
jge
es
xchg
leave
int
jbe
cli
addr16
pushf
xchg
cmp
mov
insl
dec
stos
mov
sbb
push
test
and
fmuls
cld
gs
mov
into
rcl
jecxz
mov
push
das
test
lds
rolb
add
adc
in
decb
lahf
gs
push
inc
or
inc
or
and
das
or
test
cltd
add
es
loopne
xchg
ficomps
ror
test
test
and
fwait
ror
sahf
int3
test
inc
cs
pop
lds
inc
jae
dec
gs
push
jle
push
aad
or
adc
ficompl
jns
xor
lock
mov
lods
into
jnp
xlat
ljmp
or
fwait
mov
fwait
pop
mulb
inc
movsl
mov
lods
jle
lods
dec
xor
sub
jge
xchg
aam
into
fisubrs
pop
rorl
push
xor
fsubs
push
out
jae
add
in
fs
lret
cmp
pop
in
dec
popa
mov
enter
sbbb
and
add
inc
mov
out
adc
xor
dec
add
add
daa
dec
or
aas
and
jl
fs
cltd
mov
sti
mov
std
push
mov
pushf
and
inc
shlb
add
test
add
or
ficoml
js
cmp
sbb
xor
sub
fnstsw
shlb
cmc
dec
popa
rdmsr
mulb
pusha
out
sbb
popa
jne
adc
bound
jmp
inc
xor
lcall
ljmp
adc
mov
lods
pinsrw
cmp
jnp
or
decl
jg
fs
or
pop
into
add
pop
arpl
add
inc
push
in
lea
push
add
lret
jno
push
push
lods
cltd
mov
pop
loopne
fiaddl
or
test
push
pop
adc
mov
lods
sub
stos
or
cwtl
mov
mov
cmp
loopne
push
inc
mov
jo
push
pop
sub
sbb
rorl
sahf
dec
mov
sti
mov
push
add
mov
ds
add
adc
pushl
xor
in
bound
cmp
push
out
cmpsl
stos
mov
cmp
sub
pop
jno
lcall
cs
shlb
in
mov
pusha
jg
push
dec
adc
dec
adc
mov
mov
push
push
and
xlat
xchg
fcmovnu
shlb
outsl
ja
push
jecxz
jae
lds
mov
in
int
jne
inc
push
mov
xchg
int
add
fcomps
rcrb
sub
and
fistpll
inc
out
mov
mov
in
sub
jle
lret
push
pop
imul
push
jecxz
fs
mov
fsincos
fnstenv
sub
mov
in
cmp
mov
pop
mov
mov
push
sbb
sub
sbb
lock
jbe
outsl
adc
in
sbb
push
pushf
ss
pushf
adc
mov
in
lds
test
data16
imul
cmp
cmp
push
mov
leave
mov
jg
mov
sub
rcrb
scas
lret
ret
and
fldl
fcompl
int3
negb
inc
adc
and
sub
xchg
in
xor
inc
ds
pop
inc
fnstenv
sbb
pop
insb
fs
les
mov
add
and
imul
data16
pop
fcoml
fbstp
mov
daa
mov
sub
adc
pop
clc
icebp
dec
repnz
adc
xchg
mov
nop
and
xlat
pop
jne
insb
adc
sbb
loop
xor
inc
lret
stc
xchg
mov
xor
xor
jae
sbb
mov
rcrb
xchg
test
jae
mov
orb
test
xchg
inc
leave
pop
inc
daa
jbe
jmp
jge
or
pop
shrb
inc
pop
pop
bound
fdiv
lds
mov
add
jno
cli
inc
xlat
adc
insb
jg
inc
mov
aam
mov
pop
hlt
jo
clc
dec
adc
ljmp
push
inc
fwait
daa
popa
xchg
shl
jb
xchg
ret
sahf
mov
cmp
pop
pop
adc
dec
mov
push
pop
jmp
mov
ret
sti
out
mov
aas
xchg
stos
cs
or
cli
xchg
dec
out
jnp
add
sub
cltd
rcrl
jbe
dec
lret
lds
repnz
jb
mov
pop
loop
rolb
mov
addr16
mov
and
imul
movsb
xor
sub
mov
rcr
dec
test
cs
movsb
cmpsb
push
out
bound
negb
xchg
stos
adc
push
inc
clc
cld
add
gs
push
cltd
push
jecxz
and
xor
in
jecxz
jnp
xor
out
shll
aaa
xor
aas
add
add
and
pusha
jnp
adc
xchg
int
or
and
pushf
sahf
and
lods
mov
pushf
movsb
sbb
sbb
adc
mull
push
pop
cld
sub
xchg
dec
mov
add
fwait
xor
ss
dec
js
adc
jp
mov
icebp
fdivrp
pushf
xchg
out
int
aam
js
sahf
jl
lods
pop
std
daa
out
daa
push
out
dec
jge
les
dec
cs
std
outsl
bound
jnp
fdivrs
nop
cmp
sar
pop
xrelease
out
mov
push
dec
xchg
and
lds
bound
adc
mov
inc
push
dec
push
pusha
cltd
leave
push
rcrb
sbb
mov
lea
pop
clc
mov
or
rcrb
add
stos
loope
stos
popf
add
aad
cmc
sbb
ljmp
or
push
pop
test
sbb
xchg
shlb
idivl
jecxz
push
movsb
out
jae
jnp
lods
jle
outsb
push
jle
jl
stc
cltd
push
hlt
aaa
add
rorl
stc
xor
aad
adc
xchg
sub
es
pushf
std
mov
jg
jg
ficompl
mov
sahf
jp
adc
xlat
into
in
stos
pushf
inc
jbe
sahf
loop
mov
test
arpl
and
incb
mov
pop
test
das
je
mov
aam
jmp
inc
sbb
das
add
cmp
cli
imulb
mov
xchg
outsb
fisubl
lret
int3
pop
xor
aam
mov
xchg
fwait
gs
add
daa
dec
shl
inc
xchg
dec
sub
lret
push
and
sahf
pop
cmp
mov
mov
dec
aam
or
adc
mov
xor
mov
xor
sbb
out
aam
imul
and
adcl
pop
sub
pop
pop
rol
mov
pop
ja
jecxz
pop
in
xchg
mov
add
xor
movsl
or
scas
in
mov
xchg
mov
jmp
xchg
pop
adc
nop
aas
lods
sbb
xchg
loopne
inc
push
test
jg
xor
mov
pop
xlat
jns
mov
ret
cwtl
add
popf
mov
addb
ljmp
aam
push
test
jae
and
aas
shrb
pop
call
imul
mov
pop
mov
xchg
mov
push
jl
dec
fwait
pop
jo
in
xor
mov
adc
repz
or
push
lods
mov
in
xchg
cmc
cmpsb
cmpsb
lcall
jecxz
mov
loop
lcall
cmp
cmpsl
clc
test
sahf
imul
aad
push
add
aad
mov
dec
fcmovb
rcll
cwtl
pop
mov
into
or
out
repnz
test
pop
dec
stos
clc
push
cmpsb
clc
loop
mov
clc
jl
xor
jmp
movsl
cmpsl
shl
dec
inc
aaa
xrelease
clc
loop
cli
add
lods
dec
out
scas
pusha
mov
out
push
cltd
and
stos
ret
dec
or
jbe
es
shll
or
scas
ret
sbb
inc
push
scas
push
push
mov
out
iret
pusha
mov
push
fwait
mov
fwait
test
sti
or
js
in
subl
bnd
or
pop
movsl
lret
loope
jge
fcoms
ja
daa
outsb
pop
fnstcw
pop
sbbb
mov
jns
scas
adc
cmp
insb
lock
movsl
insb
pop
and
mov
or
std
clc
sbb
fsubrl
push
lods
mov
and
or
std
je
push
push
xor
jbe
fs
jno
or
mov
cmpb
push
fwait
scas
push
scas
test
pop
jg
inc
insl
jle
mov
fndisi(8087
aas
mov
mov
in
jns
mov
inc
out
xor
sahf
aaa
je
xchg
cli
sbb
shrl
js
pop
shrl
pop
ds
sub
cwtl
rcrl
lret
cmp
shlb
popf
mov
icebp
pop
dec
or
jno
fucomip
fidivrl
insl
shrb
jne
sbbl
call
popa
mov
and
ss
ret
test
jecxz
push
repnz
push
cld
cmp
gs
add
test
lahf
mov
xchg
sahf
jmp
mov
dec
icebp
sar
lock
xchg
mov
cld
jg
pop
lahf
ficompl
xchg
lods
roll
pop
insb
cmpsl
mov
cmp
or
jbe
inc
adc
pop
scas
push
addl
stos
pop
mov
xchg
xor
out
out
push
cmp
pop
cld
add
add
and
scas
push
jnp
sahf
iret
int
test
mov
cmp
and
or
dec
addb
mov
cmove
pushf
or
jg
jg
jae
adc
inc
adc
sub
push
div
sbb
sbb
pop
pop
dec
or
fsub
pop
nop
pop
xchg
cmp
ljmp
shll
daa
cmpsb
lret
les
loopne
into
or
pop
loope
outsb
dec
lods
xchg
pop
aad
jg
pop
xchg
das
aas
mov
leave
mov
inc
imul
adc
int
fildll
aas
pushf
xchg
push
jno
dec
xchg
xor
test
jecxz
pusha
or
mov
jp
outsb
cwtl
jbe
das
cmp
lret
pop
test
aam
add
mov
inc
xchg
mov
xchg
aas
xchg
nop
fcmovne
jno
jmp
xor
leave
aad
xlat
add
sahf
loopne
pushf
stos
mov
add
or
roll
ljmp
xor
inc
mov
popa
je
out
jecxz
daa
pusha
fidivrs
cwtl
movsl
test
mov
and
jecxz
lods
jb
movb
and
lds
mov
repz
daa
sub
jne
cld
jg
push
cmp
std
or
mov
mov
mov
daa
sbb
iret
pop
mov
cmc
ss
imul
jne
add
outsl
mov
pop
cmp
xor
fwait
in
dec
jle
scas
movsl
cwtl
shl
xor
or
or
dec
adc
shlb
lahf
aaa
loop
lret
imul
pop
dec
and
xlat
aaa
push
in
aaa
lret
cmp
sub
data16
loop
push
mov
mov
push
inc
jb
lds
test
add
jns
lock
push
in
in
pushf
lea
scas
lahf
add
int3
iret
xchg
das
aad
mov
pop
push
imul
iret
or
push
clc
xchg
sub
push
push
rorb
xorl
pop
push
mov
loopne
iret
mov
lahf
pop
pusha
fwait
addr16
lcall
dec
sub
clc
sub
inc
sub
imul
cli
sahf
stc
or
leave
dec
rcrb
cmpsl
dec
xor
mov
inc
mov
notb
add
fnstenv
xchg
fcomps
sub
popa
fcmovb
mov
andl
push
sub
cmp
mov
cmpsl
jne
rorb
cmp
mov
ds
mov
lock
push
fnsave
cs
insl
or
nop
pop
pop
test
testb
or
les
sbb
clc
xchg
pop
sti
aaa
push
out
subb
pop
in
sub
in
and
in
es
pushf
cmc
shll
enter
sbb
inc
jae
and
dec
lcall
lret
mov
cs
mov
push
js
lret
lods
mov
and
jmp
pop
ret
repz
jge
xlat
out
fs
mov
lds
mov
mov
negl
sub
fwait
jno
jmp
adc
test
lea
inc
and
pushf
fcom
movl
scas
add
leave
adcl
sar
lret
xorl
cmp
or
lock
push
xchg
imul
jp
fldcw
arpl
sbbb
jl
cltd
push
call
popa
dec
push
mov
dec
clc
xor
mov
add
mov
pop
pop
pop
leave
ret
jne
adc
std
push
adc
aas
adc
sbb
adc
sbb
add
push
adc
out
jg
add
dec
adc
mov
jns
add
inc
adc
sbb
inc
add
cmp
inc
add
cmp
inc
add
cmp
inc
add
add
add
add
add
add
add
inc
cmp
add
scas
inc
adc
inc
cmp
add
adc
push
adc
cmp
add
sbb
add
adc
idivb
inc
add
cmp
cmp
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
adc
subb
cli
adc
sbb
adc
pop
inc
adc
sbb
adc
in
pop
adc
pop
sub
add
add
inc
add
add
inc
add
add
cmp
add
aaa
adc
cmpl
adc
push
dec
adc
mov
adc
lock
add
adc
outsb
or
add
add
add
push
push
inc
push
jae
pop
outsl
push
xchg
dec
mov
mov
ret
add
add
inc
cmp
jae
popa
insb
insb
and
je
pop
push
outsb
fs
dec
push
pop
dec
popa
imul
outsl
insb
fs
dec
outsb
arpl
gs
dec
outsb
outsw
inc
jo
add
add
add
add
add
cmp
add
add
add
add
add
mov
cmp
add
mov
cmp
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
