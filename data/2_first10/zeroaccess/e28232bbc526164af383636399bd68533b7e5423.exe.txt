push
mov
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
adc
push
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
pushl
pushl
push
call
xor
or
dec
mov
jmp
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
and
mov
sbb
andl
or
movl
xor
or
xor
movl
mov
add
mov
add
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
orl
xorl
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
subl
xor
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
mov
xor
mov
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
jmp
mov
cmp
ss
dec
clc
jnp
js
bound
fstpl
bound
sub
pop
add
pop
jne
out
ret
jb
jno
into
push
hlt
and
xchg
fbstp
icebp
aaa
movsb
add
mov
in
pop
cmp
pushf
mov
addl
scas
sahf
test
js
iret
mov
test
xlat
rcrb
aam
dec
std
mov
in
fbstp
push
pusha
stc
mov
cmp
cmpsb
loope
ret
push
sub
jmp
pop
or
inc
insb
stos
cltd
aad
dec
pop
xor
test
mov
rcrb
out
pop
idiv
xor
lods
inc
xor
cmc
jne
push
push
xchg
bound
out
mov
ljmp
push
sub
mov
adc
lea
repz
imul
stc
lret
je
inc
or
in
xchg
stos
iret
in
repnz
adc
ficompl
push
imul
push
enter
push
add
xor
insb
adc
sbb
daa
call
adc
loope
pop
mov
je
push
inc
dec
xor
jno
data16
pop
mov
jae
mov
js
loopne
ds
jp
pop
imul
sbb
pop
mov
out
mov
outsb
daa
push
lcall
dec
mov
cmpl
call
xor
lods
arpl
jle
rorb
mov
mov
jmp
inc
push
xchg
mov
push
cmpsl
mov
add
ss
outsl
or
mov
mov
in
inc
fs
push
push
xor
out
fwait
jg
cmp
adc
and
loopne
pop
jne
idiv
and
popf
jl
lock
out
xor
arpl
xchg
inc
stos
sti
ficompl
rcll
insl
lahf
adc
scas
or
ljmp
out
jne
sbb
xchg
jmp
or
notl
js
mov
loope
out
cs
jo
dec
pushf
mov
jg
xchg
inc
cs
lods
inc
imul
aad
loopne
dec
mov
cmpl
mov
mov
add
adc
push
push
mov
pop
dec
ja
lahf
pop
dec
repnz
insb
jecxz
jge
add
sub
outsl
dec
scas
movsb
xor
out
pop
ja
and
fistpl
dec
lods
push
and
xchg
xor
sub
movsb
in
ljmp
test
popa
ljmp
ficomps
push
add
mov
push
fs
mov
dec
xchg
lret
sbb
sbb
sbb
or
mov
loopne
mov
loopne
add
cmpsl
mov
aam
insl
mov
pop
add
das
pop
jg
gs
cmc
cmp
mov
sub
mov
jo
push
xchg
adc
ds
xchg
push
dec
cmp
pop
mov
sti
scas
mov
psubsw
out
xchg
xchg
outsb
out
jae
dec
jno
push
idivl
sbb
out
dec
pop
cmpsl
call
mul
fisubl
mov
push
leave
mov
jg
and
adc
and
jb
ret
push
sub
and
in
ss
fadd
jl
inc
jl
pop
es
repnz
sti
mov
lcall
inc
int3
lcall
shrl
aas
lcall
push
xor
cmpsl
sti
dec
jne
js
roll
inc
outsl
aaa
in
adc
popf
shlb
dec
scas
and
cld
movsl
mov
or
sub
rolb
push
mov
xlat
mov
or
test
call
and
cmp
scas
xlat
lea
and
cmp
cltd
in
xchg
xor
test
xchg
cmp
into
push
mov
sbb
inc
and
fdivl
sub
jmp
icebp
sbb
shll
stc
je
inc
ja
push
sarl
pusha
dec
iret
fcoml
in
pop
and
popa
lods
xor
sub
into
movsl
movsl
xchg
add
sub
ljmp
aam
outsl
sbb
std
pusha
push
sub
mov
cli
xchg
push
mov
cmp
push
jbe
adc
lahf
out
and
out
pop
call
xchg
je
vrsqrtss
or
xor
in
lods
adc
stos
std
push
ljmp
hlt
or
mov
push
in
shlb
test
jo
mov
cmc
cmc
xor
mov
adc
orb
mov
xor
or
push
mov
add
add
cs
jae
jge
stos
jb
add
mov
add
lret
arpl
mov
in
fwait
or
jp,pt
pop
mov
or
xor
shrl
dec
jno
scas
or
dec
fldt
fidivl
jnp
jmp
cmp
int
cmp
xchg
jge
sbb
mov
dec
aas
mov
andl
pop
jmp
sarb
sbb
bound
incb
aad
fs
rorb
dec
add
jl
ss
mov
das
cltd
mov
nop
je
dec
push
scas
xchg
lahf
cmp
and
pop
jp
arpl
jmp
jle
insl
sub
gs
mov
mov
movsb
or
call
push
pop
pop
mov
pop
ret
frstor
or
imul
dec
xchg
orl
in
ficomps
xlat
xorb
data16
xchg
push
out
inc
insb
jns
add
push
andl
xorb
lods
sbb
xchg
mov
arpl
sbb
ds
lret
jge,pn
fwait
jle
mov
pusha
xchg
mov
mov
mov
jg
ss
mov
jp
and
loopne
fs
adc
icebp
push
mov
inc
jae
xor
ja
out
stc
xor
pushf
push
or
lods
jnp
mov
fstp
call
xor
fnstsw
mov
cmp
and
adc
push
rcr
js
sub
sbb
pop
mov
int
and
or
mov
out
mov
add
lret
cwtl
andl
ret
sbb
inc
aad
push
dec
cmp
and
enter
dec
lret
lret
dec
jno
inc
xchg
call
xorb
imul
inc
add
mov
and
and
cs
adc
movsl
and
les
push
leave
inc
sbbl
dec
out
pop
sti
and
jmp
movsb
mov
mov
jnp
in
clc
xchg
mov
mov
js
cs
pop
nop
aas
push
es
inc
cmpsb
xor
cmp
test
inc
cmpsb
jge
sbb
sbb
fbld
adc
jp
sbb
xchg
lods
cld
pusha
mov
jge
sub
out
sbb
dec
pop
sub
xchg
dec
and
aam
dec
pop
das
mov
pop
push
mov
mov
inc
xor
dec
adc
cmp
les
fiadds
add
jmp
jbe
jp
xchg
aam
repz
mov
mov
rcl
hlt
hlt
jns
mov
fistps
mov
jle
clc
xchg
ljmp
subl
mov
cmp
push
sti
mov
test
enter
dec
add
xchg
dec
cmp
mov
mov
add
lds
push
repz
add
in
push
in
gs
shrb
xchg
aaa
cmpsl
or
popa
xor
jmp
push
repz
pop
loope
jnp
mov
int
fdivs
or
bound
adc
je
popf
or
ret
mov
leave
push
dec
mov
push
jmp
ja
inc
cld
popa
push
fistpl
jp
das
shl
sbb
into
cmp
loope
in
cmp
dec
fcoml
dec
out
or
shll
mov
dec
mov
xor
cld
out
pop
mov
fstpl
scas
push
fisubrl
push
cmp
pop
jnp
push
movups
or
pop
fdivs
hlt
inc
lahf
fcomps
mov
push
inc
cltd
stos
iret
xor
lahf
dec
ss
jae
popa
cltd
stos
sbb
add
test
xchg
movsb
fsubl
cld
push
ret
icebp
mov
mov
jecxz
or
rorb
sbbl
inc
push
fistpl
das
and
lods
add
xlat
loop
xor
xor
add
mov
insl
jle
and
adc
sbb
or
adc
movsl
andl
mov
iret
jb
andb
inc
insl
std
cmp
inc
mov
ret
mov
lea
mov
pop
pop
add
xchg
dec
mov
shr
and
cmc
xchg
xor
movsl
outsl
mov
or
test
add
jge
fdivs
sbb
pop
cmp
fiadds
mov
inc
sub
inc
int3
xor
adc
pop
mov
jge
icebp
xor
pop
rclb
mov
ljmp
addr16
jecxz
ret
ret
daa
bound
lret
cmp
int
sahf
mov
pushf
sarb
jge
dec
enter
inc
nop
fistl
loop
cwtl
aam
jecxz
aad
lret
cmp
data16
xor
or
push
sbb
movsb
xchg
frstor
mov
adc
adc
loop
cmp
cmp
pop
rcr
sti
dec
aaa
insl
mov
outsl
sarl
iret
jmp
cltd
sub
loop
jp
push
pop
hlt
mov
push
add
cmp
mov
jb
xor
in
ret
push
scas
or
sahf
aas
outsb
xchg
jle
mov
mov
fsubrp
js
push
sbb
add
dec
mov
push
jmp
pusha
jle
push
sbb
mov
daa
and
mov
inc
gs
mov
movsl
cmp
lods
lods
je
cmc
test
cli
dec
ret
pop
push
fwait
mov
push
sbb
jns
mov
sub
or
xchg
adc
mov
stc
clc
mov
pop
or
jne
outsb
push
sti
lcall
lret
mov
in
das
jp
aas
push
push
fwait
dec
popf
push
fs
mov
dec
pop
leave
inc
int
addr16
imul
cltd
loopne
pop
test
sub
test
inc
fcompl
lahf
repnz
pop
bound
sbb
cmc
scas
cmp
cmp
stos
nop
repnz
clc
jecxz
aad
out
shll
mov
stos
inc
in
add
xor
xchg
sbb
cli
notl
and
dec
inc
xlat
test
xchg
jae
jl
and
rcll
out
adc
mov
divb
out
ja
ja
adc
push
cwtl
popf
inc
andl
xor
repnz
sbb
dec
sbb
xchg
jmp
mov
cmp
aaa
xor
sub
sbb
cmc
gs
repnz
rolb
aam
pop
jecxz
dec
jnp
dec
cmp
je
js
test
addl
jecxz
push
push
lea
mov
sbb
addr16
push
mov
arpl
pushf
iret
fldenv
lea
incl
mov
aas
test
jle
std
mov
data16
inc
test
call
dec
jbe
lret
sub
push
sbb
push
dec
fucomip
mov
jmp
enter
insl
rcr
xor
add
aam
imul
test
cmp
add
lcall
and
adc
mov
test
inc
divl
jmp
or
fs
pop
mov
hlt
repz
jnp
ret
test
add
pop
push
repnz
ret
clc
mov
movsl
fidivrl
or
es
mov
or
js
and
xor
adc
inc
popa
pop
cmp
pushf
outsb
rorl
shlb
sub
outsl
neg
or
add
out
das
adc
dec
aaa
inc
loop
lret
mov
or
cmp
inc
dec
lcall
xchg
or
pop
dec
aas
ja
mov
aad
xchg
das
popf
xchg
sub
add
pop
out
in
dec
cmpsl
iret
sbb
out
mov
les
ljmp
pop
sbb
lock
push
mov
cld
xchg
insb
int3
adc
or
cmc
mov
ljmp
sbb
fwait
rcrl
add
arpl
fwait
cmpsb
and
inc
mov
mov
mov
mov
jbe
shlb
mov
psubd
rorl
xchg
mov
jl
sti
dec
sbb
fadds
loopne
xor
and
cltd
jb
xchg
cmp
adc
call
jnp
pop
mov
jnp
popa
stc
inc
std
sbb
subb
add
cmp
stos
stos
pop
and
loopne
xor
in
jl
lods
mov
aaa
adc
dec
push
lahf
icebp
xor
mov
dec
push
hlt
jl
push
push
dec
fsubrl
shrb
cmp
and
fcmovne
cli
imul
adc
fdivs
push
or
lret
mov
cmc
add
add
lods
int
out
xchg
xchg
xor
sbb
jns
mov
or
int
adc
imul
xor
sub
push
xchg
lahf
cmp
sub
movsl
stc
enter
mov
xchg
int3
cltd
rolb
cmp
mov
dec
mov
je
stos
mov
rcrl
subb
lock
dec
adc
shrb
fidivs
cmpsb
mov
and
or
pop
and
into
inc
rorl
or
add
mov
jns
mov
imul
jnp
std
mov
lret
bound
mov
imul
jge
push
vpinsrw
movb
leave
pop
repz
sub
or
mov
sbb
aam
js
xchg
nop
iret
repnz
or
sbb
cld
outsl
pop
xor
in
pop
test
sub
cmp
or
add
insb
lea
adc
xchg
sub
mov
inc
les
push
push
pop
fwait
enter
inc
mov
add
inc
icebp
iret
in
int
mov
add
mov
jecxz
out
aad
push
jno
xor
icebp
xchg
xchg
and
sahf
mov
orb
shrl
test
pop
setg
mov
out
sbb
mov
push
inc
insl
ret
push
fs
in
repz
adc
xchg
fcomi
test
ss
pop
mov
loop
mov
dec
adc
jge
daa
out
clc
dec
cmp
mov
jmp
ret
mov
stos
ret
cltd
pushf
jb
push
test
dec
lods
mov
cld
pop
sbb
mov
adcl
mov
iret
cmp
pop
mov
repnz
fistl
mov
fwait
mov
mov
sub
fadd
mov
in
pop
mov
shlb
into
jmp
mov
or
or
pop
xchg
rcrl
xor
pop
inc
xor
int
mov
fucomip
sbb
cld
out
or
lcall
cmp
mov
dec
aad
sub
lret
adcl
push
fs
lahf
aam
jb
push
cmp
sub
inc
popa
icebp
push
dec
pop
adc
ja
ret
mov
popa
mov
fisubrl
pusha
and
and
and
ds
jp
repz
mov
stos
popa
adc
mov
enter
gs
lods
and
xor
mov
mov
dec
subb
das
je
push
mulb
int
cltd
dec
pop
movsb
lds
daa
lret
jecxz
add
pop
sbb
sub
imul
xchg
in
fnclex
xchg
mov
lcall
call
cs
inc
fistpl
stos
and
aam
push
shl
outsl
sbb
add
stos
lods
ficoms
dec
pop
rol
lcall
adc
or
mov
mov
ljmp
int3
sbb
clc
sub
test
movsb
or
loope
lret
xor
mov
ljmp
notb
xor
jno
xchg
or
jae
dec
aam
repnz
scas
int
das
jg
dec
data16
xchg
push
cld
xchg
std
xchg
outsl
inc
sbb
daa
fldcw
push
add
call
pop
mov
sti
and
pop
push
cmp
sbb
jmp
test
cwtl
clc
imul
dec
adc
lcall
inc
pop
stos
lret
roll
ljmp
mov
bnd
mov
inc
not
jne
stos
xor
xor
nop
jae
or
push
cmpsb
xchg
cmp
sti
in
mov
fsubrl
addb
out
mov
f2xm1
inc
or
mov
inc
and
sub
sbb
ds
js
dec
mov
mov
leave
xchg
cmp
popf
xlat
sub
pop
inc
sbb
dec
cmp
das
lret
lds
inc
jo
sbb
jmp
mov
xor
mov
cltd
daa
test
jmp
mov
sbb
mov
mov
xor
push
movsl
cltd
stc
pushf
mov
enter
je
jmp
stc
sub
push
jmp
ret
cmc
imul
sbb
movsb
lds
pop
mov
pop
pop
jle
jnp
fwait
loope
sub
sbb
xorb
inc
and
scas
inc
rcr
loopne
mov
imul
add
iret
mov
xchg
push
mov
dec
mov
mov
and
in
aam
inc
sub
addr16
add
in
scas
xchg
stos
int3
pusha
xchg
scas
and
sub
jecxz
push
add
inc
cmp
xlat
lahf
in
xchg
test
mov
lods
sub
add
enter
fisubs
repz
sbb
repnz
loopne
jnp
popl
mov
adc
sub
dec
push
imul
push
pop
nop
in
xchg
mov
into
or
pusha
and
mov
adc
jno
pop
notb
adc
xchg
shll
loopne
cmp
mov
movsl
test
xchg
leave
clc
sub
or
sub
mov
jns
std
or
sub
es
and
mov
popa
adc
fdivr
pusha
mov
mov
mov
sub
cmp
roll
pop
xor
lcall
js
or
add
mov
xchg
cld
imul
xchg
popl
gs
cli
ficompl
rorl
xor
sub
jl
in
inc
in
sub
fsubl
dec
and
js
push
jmp
jne
add
out
mov
lds
insb
mov
pop
jo
sti
mov
and
push
pop
out
shlb
jnp
adc
icebp
pop
push
mov
fs
or
adc
mov
dec
aad
div
clc
or
fnstenv
test
push
jns
adc
cmp
push
jne
out
fucomp
xchg
adc
popa
jge
movsb
out
je
add
add
push
stc
int3
scas
movsb
call
imul
adc
insb
enter
xchg
dec
add
enter
mov
imul
mov
jmp
ret
ret
loope
pop
pop
adc
xor
sub
lret
sbb
loopne
jbe
in
popf
sub
iret
nop
scas
dec
loope
test
push
cwtl
les
dec
ljmp
push
mov
icebp
inc
pop
xor
dec
outsl
repnz
enter
mov
aam
out
dec
stos
shrl
clc
sub
pop
jnp
gs
mov
stc
movsl
mov
jae
push
sbb
and
cmc
mov
out
cmc
repnz
popf
adc
xchg
push
ds
lock
cmp
ds
ds
jg
fwait
out
shl
mov
mov
lods
fwait
insb
pop
inc
jl
mov
sbb
loope
mov
jg
movsb
pop
or
cmp
aaa
sub
es
hlt
fcomps
popf
cmp
jae
xchg
scas
test
outsb
outsb
js
addl
pushf
gs
jge
mov
leave
push
cmp
dec
or
mov
pop
shlb
aas
es
pop
out
cmp
int
clc
inc
leave
into
sub
inc
scas
add
inc
mov
inc
std
jge
adc
lret
mov
outsl
daa
movsb
std
dec
data16
xchg
cld
faddl
ds
jle
les
mov
in
scas
add
mov
fldenv
xor
mov
ret
les
adc
aaa
adc
inc
inc
jl
xchg
jl
add
roll
movb
inc
jae
aad
mov
push
lock
insb
mov
or
push
jbe
aam
les
das
out
or
xor
and
mov
sbb
cli
pushf
in
popf
scas
jl
xor
out
dec
mov
mov
lret
pop
sub
add
xchg
sarb
stc
cmp
sahf
sbb
aaa
push
jl
cld
loope
add
xchg
loopne
int3
call
push
gs
out
filds
cmp
lret
mov
cmp
test
std
mov
pop
lahf
out
adc
shll
jecxz
push
fildll
mov
test
pushf
fcomp
fimull
sbb
leave
sub
and
lea
sbbb
cmp
outsb
or
ds
roll
cmp
mov
addr16
push
push
scas
mov
jecxz
xchg
ret
mov
mov
sbb
out
add
mov
ds
clc
push
cmp
pop
movsb
sbb
es
xchg
lcall
fwait
stos
fimuls
and
ja
jno
mov
push
outsl
rcll
cld
ds
fisubs
popf
rorb
test
ret
cmp
test
cs
imul
hlt
adc
push
jbe
dec
cmpsb
loop
mov
sub
inc
aad
in
sub
jno
rorl
sub
insb
ret
push
jno
and
sbb
sub
pop
movsb
in
ja
jno
and
or
inc
adc
push
out
stc
mov
lret
repnz
sub
sbb
add
jnp
xlat
dec
xchg
cmpl
add
pop
popf
pushf
mov
sub
pop
iret
jae
xlat
fidivrs
insl
push
mov
cmc
pop
push
jle
xlat
loope
aas
insl
addr16
das
test
jecxz
daa
enter
sub
test
jmp
js
jg
in
jns
in
mov
jge
addr16
jle
mov
scas
and
test
jnp
add
xor
push
xchg
stc
aad
in
jbe
push
mov
dec
bound
mov
sti
xchg
addb
ja
sbb
pop
pop
dec
fs
or
out
out
bound
or
mul
xchg
outsl
sar
sub
cmpsb
or
js
imul
mov
shl
mov
ss
std
aad
fdivrp
sub
or
shll
sub
shrl
jns
fstps
andb
aam
xchg
pop
pop
pop
mov
es
mov
pop
addb
les
inc
fwait
leave
movsb
lea
nop
pop
inc
sbb
push
mov
imul
mov
push
jbe
pop
test
xchg
mov
out
mov
jge
xor
push
mov
dec
xor
push
dec
popa
es
ret
mov
outsl
xor
lock
hlt
ror
mov
clc
loope
and
jmp
inc
mov
dec
dec
adc
negl
out
jecxz
jno
pop
xchg
mov
sbb
mov
icebp
cld
pop
jmp
ljmp
faddl
mov
pushf
xchg
rolw
dec
push
and
jo
dec
xor
cmp
pop
in
stc
fsts
call
repnz
pop
mov
mov
adc
cmp
lret
jecxz
ror
rolb
cmp
add
mov
mov
jle
es
subl
out
lds
sbbw
icebp
add
or
sbb
fstl
mov
clc
or
nop
movsb
mov
mov
ds
xor
mov
ret
mov
cld
into
mov
jmp
sub
or
cmp
decb
or
xchg
sbb
xor
jbe
mov
daa
adc
in
push
inc
ljmp
cmp
mov
aas
xchg
add
xchg
fwait
cmp
in
or
pop
push
inc
sbb
loopne
cmp
mov
adc
lcall
rcrl
ficoms
cmp
push
cmp
adc
stos
pop
imul
xchg
fmul
ljmp
pop
roll
jl
rcll
mov
mov
push
loop
mov
push
icebp
data16
mov
ljmp
mov
int
fsubl
idivb
jns
push
cmp
shrb
rorb
mov
idiv
pop
lds
pop
sub
aam
jg
pop
lods
pop
push
mov
ftst
xchg
cmp
xor
jmpw
das
lret
cld
jns
push
dec
mov
es
sahf
mov
pop
adc
test
inc
jg
pop
jge
inc
test
stos
popf
cltd
fstl
rep
sub
jne
out
push
mov
sti
sbb
fs
sahf
lret
mov
sub
daa
inc
pop
fldl
shl
dec
xor
mov
push
push
xchg
and
mov
ss
add
xchg
push
lea
or
scas
jno
fiadds
jbe
cmp
mov
fistpll
cmpsl
pop
push
jl
push
adc
cmp
imul
fcoml
outsb
pushf
dec
jbe
les
fisttpl
push
xchg
mov
adc
out
ss
push
dec
jno
sahf
movb
dec
pop
stos
pushf
loopne
mov
lret
nop
sbb
jb
lahf
push
mov
sub
movsl
stos
jbe
xchg
idivl
movsl
push
mov
xor
add
inc
aad
xchg
push
rorb
mov
lret
push
scas
adc
lock
gs
mov
insb
push
jnp
aam
push
mov
ja
rcrl
daa
shlb
mov
lods
xchg
nop
xchg
leave
push
divb
or
push
push
push
pop
xor
jge
cmp
cmp
and
popa
test
dec
dec
xchg
bound
sub
or
arpl
push
repnz
cli
xchg
dec
addr16
movsb
sub
jae
inc
add
mov
ja
addl
stc
sbb
rclb
jg
bound
rorb
lods
movsb
fs
hlt
fwait
xchg
sbb
aad
gs
push
out
rclb
inc
pop
jbe
ss
dec
or
cmp
xor
lcall
and
inc
sub
sar
mov
in
pop
lea
cmpsb
sub
rcrl
cmp
pop
in
test
sbb
cmp
pop
movntq
out
popf
fcoml
inc
sbb
leave
jbe
inc
stc
into
sbb
in
adc
fmul
popf
cmp
divb
jae
in
js
stos
or
mov
xchg
pop
mov
sbbl
in
push
gs
mov
xchg
dec
movsl
sbbl
dec
push
xchg
inc
mov
gs
xor
xchg
scas
ret
inc
insl
sbb
sbb
and
jle
jg
ss
adc
xchg
shl
inc
xchg
ljmp
les
push
scas
and
push
fdivr
insb
xor
das
mov
or
mov
jbe
ljmp
push
test
insl
jnp
inc
je
push
nop
clc
cmp
in
iret
lock
jnp
jmp
and
and
jb
mov
movsb
mov
pop
jmp
fmull
pop
add
dec
dec
js
lea
mov
adc
pop
push
jmp
fxch
shll
nop
xor
stos
shll
or
or
in
psllw
or
hlt
rcr
adc
mov
jo
sbb
and
xchg
jl
pop
test
xor
nop
mov
pop
mov
data16
sub
or
mov
xor
and
or
sub
data16
and
arpl
jmp
lods
lods
stos
pusha
js
cmp
mov
insl
das
fsubs
inc
lcall
push
and
mov
and
jg
push
sbbb
dec
dec
mov
and
inc
dec
mov
or
xor
xor
cli
push
sbb
inc
dec
cmpsl
pop
ljmp
sbb
add
push
test
add
cmp
dec
dec
psubsb
push
inc
shlb
pop
fisttpl
mov
mov
test
lods
and
mov
loop
push
stc
push
out
mov
and
out
xor
cmc
xchg
or
cmc
and
mov
xchg
mov
xor
push
mov
subl
popa
inc
cmp
cmp
adc
jge
jbe
dec
xor
and
mov
add
or
mov
cmp
test
icebp
fwait
jo
xor
fnstenv
pop
sbb
mov
cmp
jmp
sbb
mov
movsb
lea
push
subl
divb
sbb
out
fsubrl
adc
fidivrl
mov
ret
test
popf
repz
sbb
out
mov
cmp
ret
jmp
mulb
shll
sbb
imulb
inc
stos
jg
push
stos
mov
cli
adc
cmc
mov
rcr
mov
pop
testb
pop
jb
mov
or
stos
hlt
adc
xchg
pop
rcl
mov
pop
xchg
cmpsb
test
mov
stc
adc
in
mov
inc
mov
dec
pusha
jmp
push
or
stos
insl
add
lock
mov
xchg
scas
cmp
mov
jmp
xorb
xor
je
jne
jmp
xchg
xchg
xor
push
xchg
push
jns
mov
cmpsl
stos
lret
xchg
mov
shl
sbb
xor
fldl
push
imul
mov
xchg
fisttpl
pop
repz
mov
xor
lahf
push
rorb
push
leave
mov
mov
jbe
inc
fcompl
mov
movsb
mov
sub
and
and
or
push
mov
mov
hlt
mov
in
pop
push
push
pop
out
pushl
mull
jp
lea
xchg
sub
sbb
and
repz
cmpsb
daa
sub
jae
xchg
and
dec
adc
sub
mov
cmp
das
or
daa
sti
stos
jle
sbb
dec
jecxz
dec
scas
dec
mov
in
mul
add
jbe
out
lahf
inc
in
pop
lods
pop
push
push
mov
fistps
jle
mov
inc
sbb
pop
sti
add
ja
movsl
jnp
jnp
insl
or
insl
push
hlt
mov
xor
movsl
and
jl
insl
sub
mov
cli
test
push
sti
xlat
bound
jno
data16
cmpsl
mov
lds
xchg
aad
loop
cmp
std
push
jp
mov
jecxz
mov
cmp
nop
leave
sbb
xchg
mov
mov
adc
jb
pop
cmc
sbb
or
mov
mov
sub
loop
jl
push
pop
arpl
test
add
push
lahf
jo
nop
popa
jmp
std
jg
pop
inc
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
jmp
lods
mov
ja
mov
fsubrl
dec
fstpl
fstpl
bound
fistps
jp
jecxz
or
mov
sahf
push
int
mov
adc
das
pop
jmp
push
shrb
lcall
inc
push
pop
ds
push
and
popf
jmp
push
es
lea
fisttpl
fisttpll
or
push
jbe
jmp
int
cmp
fildl
addr16
fdivs
cli
stc
mov
movsl
shrl
sub
pushf
bound
adc
aaa
cmpb
in
mov
cld
inc
push
add
pusha
push
mov
or
cmp
pop
push
xor
fisubl
inc
addr16
ss
sbb
xchg
icebp
jp
popa
mov
out
dec
jno
fnstsw
and
pop
ljmp
bound
inc
dec
aaa
movsl
cmpsl
fdivl
lods
loop
dec
add
jle
sub
enter
adc
sahf
add
pop
div
sub
cld
fstps
in
lods
xor
imul
jmp
dec
fimull
stc
mov
mov
pop
mov
in
or
in
mov
inc
sub
xchg
fidivrl
pop
xlat
jns
pop
out
or
push
jge
popa
add
or
xchg
js
inc
push
cwtl
mov
out
loop
in
mov
push
inc
push
cmpb
aam
rolb
lahf
cmp
cmc
mov
jae
pop
inc
jmp
outsl
mov
repz
sarl
mov
xchg
stc
imul
pop
lods
and
jg
mov
inc
xor
bound
rorb
mov
fnstenv
stc
dec
es
adc
xchg
adc
sub
adc
sbb
enter
and
js
lcall
adc
lcall
out
xorb
bnd
add
push
or
dec
xchg
pop
ljmp
outsl
jp
or
push
add
shll
and
push
pop
mov
in
jmp
sbb
roll
dec
mov
xchg
cmp
and
cmc
xor
pusha
cmp
push
sbb
adc
arpl
int3
stc
xchg
mov
aaa
negb
xchg
sbb
pop
pushf
outsl
xchg
dec
std
mov
loopne
or
shr
push
mov
nop
mov
xchg
enter
xchg
lret
shrl
sub
and
into
push
dec
movsl
dec
sub
cs
inc
addr16
cmp
xchg
xor
fst
ret
mov
sub
inc
inc
mov
pop
inc
xor
pcmpgtw
lret
cmp
xor
push
jp
push
cmp
aam
mov
xchg
sahf
mov
add
add
or
stos
lret
rorb
sbb
mov
jns
sbb
cld
push
add
adc
popa
dec
repz
iret
pop
mov
lea
ljmp
adcb
test
or
out
cld
xor
data16
jmp
and
cwtl
int
out
movsb
ljmp
add
pushl
mov
mov
outsl
jo
push
jne
jns
push
test
mov
adc
test
fmull
mov
push
mov
jnp
and
std
xor
or
pushf
inc
lcall
imul
sbb
xchg
jge
fidivs
jg
aam
and
inc
cmp
pop
add
xlat
mov
out
cmc
xchg
jge
add
pop
and
or
jmp
add
mov
test
test
pop
mov
jge
pop
mull
xchg
pushf
leave
fwait
jns
xor
lcall
mov
push
lcall
pop
nop
sbb
xor
stc
jae
add
adc
fiadds
xor
mov
and
mov
inc
lret
fisttpll
jp
sbb
adc
and
xor
cltd
inc
and
outsl
inc
loop
fwait
ds
xor
pop
inc
cmp
data16
js
cli
fldcw
int
shll
pop
sbb
pusha
ss
mov
scas
xchg
and
mov
lea
ja
jge
mov
add
xchg
inc
fs
push
add
pop
push
mov
inc
stc
stc
jo
add
in
pop
lods
movsl
aad
or
push
adc
jmp
jl
imul
icebp
mov
fadds
cmp
mov
scas
addr16
outsb
sbb
scas
jecxz
push
das
xchg
mov
jmp
xor
xor
fcmovu
mov
insl
ficompl
fiaddl
pop
and
movsl
mov
pop
jp
or
ficoml
insl
mov
adc
orl
clc
dec
ret
stc
xchg
xchg
cmp
mov
gs
mov
sub
mov
cwtl
fcmovnbe
fcmovne
inc
mov
xchg
push
adc
pop
aam
pop
push
or
fcomi
push
sbb
mov
aas
jl
mov
lock
push
jg
xchg
fwait
push
push
icebp
mov
sbb
popf
xor
inc
push
mov
sbb
lds
cli
pop
jno
jb
jae
pop
outsl
dec
and
cmp
cs
loop
ret
pop
loope
arpl
push
shlb
fwait
mov
sub
mov
pop
xor
pop
rclb
cltd
sub
pop
fsubrs
mov
mov
mov
popf
push
mov
ljmp
ds
push
mov
ds
out
repnz
adc
sub
mov
mov
stos
out
mov
out
inc
cli
xor
imul
jae
aas
ja
xchg
jge
fidivrs
cmp
shl
andb
xchg
or
das
cmpsb
cli
testl
pop
xchg
push
fistpl
jbe
ja
xor
jo
sbb
loopne
loop
fadds
into
scas
lds
xor
adc
idivl
movsb
or
cwtl
fcmovbe
mov
data16
ficomps
notb
xor
pop
xor
adc
std
ror
xchg
push
out
pop
jae
dec
std
dec
lods
and
hlt
rcrb
mov
mov
data16
pop
push
fs
xchg
js
cwtl
and
add
js
stos
xchg
adc
fldt
jmp
xor
fdivl
cwtl
pop
jns
leave
repz
ret
jecxz
movsl
cwtl
or
les
mov
xchg
pushf
ds
mov
mov
pop
fwait
cld
jg
cmp
sbb
xorb
sbb
aas
jecxz
cmp
arpl
cmc
xor
sti
mov
stc
lahf
xchg
mov
or
ja
jb
cmpsb
fidivrs
mov
jmp
mov
loope
dec
sarl
jne
xchg
jbe
pop
xchg
adc
pop
ljmp
fwait
dec
cmp
jnp
test
dec
outsb
inc
and
pop
mov
add
jns
repz
arpl
sub
jno
loop
into
cmpl
push
idivl
and
mov
imul
mov
and
call
jns
ljmp
pusha
aaa
fs
xor
aam
aad
not
push
je
push
mov
sbb
insl
or
sub
add
pusha
bound
imulb
cmpsb
lahf
rclb
adc
inc
les
xor
les
movsl
imul
mov
xor
sbb
mov
stc
mov
test
or
sub
and
das
aad
inc
push
inc
push
inc
mov
int
pop
rorl
arpl
mov
jae
jne
call
mov
popf
lcall
fsub
mov
jae
sbb
ja
sub
sbb
inc
push
jecxz
sbb
sbb
inc
sbb
mov
xchg
xchg
jo
push
repz
aad
jp
testb
lods
rorb
cmpsl
push
inc
xchg
mov
loopne
sbb
mov
lcall
dec
jecxz
insb
sbb
fcoms
mov
pop
data16
xor
out
jo
inc
inc
inc
pop
sub
add
fwait
lods
pop
outsl
add
cltd
dec
cwtl
mov
cmpsl
xchg
jns
mov
popf
xchg
adc
pop
and
int3
fisubrl
dec
xor
data16
sub
inc
dec
push
scas
mov
push
or
or
and
xchg
test
and
cmp
dec
mov
icebp
fwait
in
push
ficompl
jns
jg
pop
push
xchg
push
and
jl
push
xchg
cltd
sub
rclb
test
dec
push
rclb
rolb
push
mov
ja
adc
and
xlat
add
adc
scas
pop
xchg
movntq
jl
fcom
test
mov
jg
int
jbe
jbe
push
jl
roll
cmp
pushf
sbb
sbb
push
cmc
adc
jb
and
sbb
inc
rclb
shlb
icebp
fistpl
outsl
fcomip
xchg
enter
mov
pushl
inc
insl
test
pop
jne
sbb
push
popf
dec
jb
mov
dec
ljmp
mov
int3
hlt
pushf
inc
dec
xchg
dec
add
movsb
dec
stos
jp
push
cs
inc
mov
mov
adc
in
in
lret
ja
jb
add
or
fwait
dec
inc
dec
push
scas
mov
adc
push
lret
rcll
hlt
cltd
sahf
popf
mov
inc
push
dec
out
imul
mov
test
mov
add
adc
clc
cmpsb
cwtl
xor
mov
hlt
add
out
out
scas
movl
jne
inc
cmpsb
ja
adc
pop
in
xchg
sub
rcr
add
or
sub
dec
cmc
add
aas
enter
repnz
dec
outsl
sbbl
imul
and
in
enter
mov
mov
jb
loope
jg
push
sub
ds
jge
mov
jnp
jmp
les
inc
out
jne
dec
jae
pop
ds
lahf
rclb
inc
inc
fldl
xor
stc
xor
insl
in
mov
mov
out
adc
sbb
or
xor
stc
mov
mov
jge
jbe
pop
add
adc
push
pop
add
cli
enter
cmp
pop
aam
sbb
and
push
dec
lea
pop
scas
pop
mov
push
popa
xchg
or
fwait
out
neg
sbb
test
pop
int3
add
jnp
xlat
cmp
out
mov
and
mov
cs
or
pop
lcall
or
dec
lcall
and
dec
push
cs
mov
neg
dec
dec
adc
fs
das
jmp
mov
sub
adc
nop
mov
gs
adc
adc
stos
adc
add
gs
xchg
inc
pop
push
and
aaa
add
pop
fcompl
adc
rolb
push
pop
mov
popa
ret
lea
mov
and
cmp
push
or
xchg
mov
pop
sub
out
mov
inc
adc
jo
loop
rorl
shll
popa
jle
xchg
inc
sbbl
adc
mov
mov
xchg
in
fcmovnu
xchg
test
adc
push
inc
pop
mov
jne
hlt
stos
iret
jnp
imul
fwait
icebp
add
fst
les
test
into
cmc
pushf
sahf
jns
xchg
movsb
ds
mov
push
icebp
stos
adc
cmp
xchg
add
mov
in
push
iret
jle
inc
inc
lock
in
and
dec
roll
in
dec
lds
pop
shrb
jns
jne
push
dec
jae
andl
mov
icebp
insb
fmull
cmc
add
adcb
repz
lahf
ret
out
mov
xor
sbb
cmc
ficoml
std
pop
sahf
clc
mov
mov
or
in
ss
or
sbb
outsl
jae
nop
or
imul
mov
addr16
mov
xchg
sub
lds
cmp
lods
push
in
jno
mov
fstpl
xchg
xchg
test
loop
flds
jnp
mov
lret
dec
fidivs
dec
jb
xor
lods
pop
inc
fs
jge
popf
outsl
pop
inc
inc
inc
or
out
inc
fsubs
imul
test
adc
lods
cld
insl
or
jbe
fiaddl
mov
aaa
jns
or
and
xchg
or
push
test
mov
cmp
sub
mov
push
sub
jle
xchg
fwait
icebp
in
inc
repz
decl
add
xchg
adc
pushf
cmp
push
lods
mov
sub
sar
inc
aad
cmp
jb
add
xchg
jne
pushf
sub
dec
jl
fisttps
pop
push
fadds
and
fstpl
mull
cmpsl
nop
lahf
jno
inc
hlt
testb
fadds
xor
clc
mov
mov
jb
imul
out
add
repnz
jns
push
mov
push
add
cmp
sub
sub
call
scas
pusha
adc
inc
int
in
pop
mov
sub
push
cmp
decb
lret
sub
mov
bnd
cmp
push
test
andb
test
pop
lods
in
xor
mov
cld
jns
idiv
mov
ss
sub
push
daa
mov
cmc
mov
dec
mov
inc
push
cmpsb
iret
outsl
cmp
jnp
pop
mov
lds
andl
dec
mov
addr16
xor
repz
push
mov
cltd
push
adc
push
loope
mov
imul
int3
stc
pop
jb
sub
xchg
sub
mov
jmp
add
fsubp
xchg
mov
ljmp
adc
jo
sahf
fwait
sbb
shl
adc
loopne
and
jp
sub
into
xchg
adc
xor
add
jno
mov
cmp
adc
loope
mov
popa
xchg
out
xchg
scas
mov
filds
popa
push
cmp
popa
movsl
cmp
or
gs
mov
jns
fnstsw
sbb
orl
loopne
pop
roll
hlt
ret
out
out
dec
fcomps
sarb
xlat
cmp
fs
add
push
pop
jbe
iret
loope
jno
jmp
sbb
leave
or
fdivl
fstp
fwait
mov
xchg
sahf
xor
mov
out
xor
fmull
dec
xchg
lret
and
cmp
aas
push
add
in
fldl
xor
mov
in
dec
mov
mov
fidivrs
push
lea
fldenv
cmp
push
cs
sbb
dec
aam
pop
icebp
out
not
sub
adc
xor
pushf
les
loope
fadds
push
sbb
mov
mov
xchg
adc
pop
notb
adc
testl
popf
jecxz
or
xchg
cmp
test
push
push
and
cmpsb
dec
mov
orl
xchg
jne
adc
xor
push
push
xor
lcall
sub
sbb
pop
movsl
xlat
pusha
stos
xchg
icebp
push
mul
dec
xor
or
mov
sbb
dec
sub
jae
pop
jno
aas
xchg
jmp
pop
movsl
cmp
add
or
mov
outsb
std
dec
lahf
push
mov
xor
clts
xor
add
cmp
pop
cwtl
mov
mov
lods
filds
adc
call
cmp
mov
cwtl
sbb
imul
jge
dec
clc
jge
cmp
jnp
jp
jl
xor
sub
jns
cltd
jno
test
pop
dec
cmpsb
ret
stc
cmp
or
enter
iret
adcl
jns
add
into
and
adc
call
sub
int
and
leave
xor
aas
jno
dec
addl
add
add
mov
jl
shl
mov
aam
or
imul
or
push
lods
push
jnp
mov
in
shr
out
push
repz
mov
cli
xchg
pop
lahf
lret
fsubl
hlt
sbb
lea
push
inc
adc
shrl
xchg
or
push
pop
sbb
fimull
ret
fwait
pop
jnp
gs
sub
jno
mov
iret
mov
xchg
sbb
les
lods
fistpll
sub
jmp
mov
pop
mov
push
jl
repz
sbb
xchg
fldt
lds
or
xor
push
add
ss
push
adc
ja
std
or
mov
cmpsl
dec
ss
jp
mov
xlat
ja
int
cmpsb
mov
inc
sbb
stc
fisubrs
les
sahf
fsubl
xlat
adc
add
inc
mov
addr16
push
xchg
inc
dec
les
lret
lods
push
cmc
xor
push
cmpsb
addr16
pop
add
xchg
xor
cmp
stos
xchg
sarb
repz
out
mov
sub
push
push
aad
jmp
out
xchg
xor
sbb
ja
or
dec
xchg
inc
test
sahf
fdivp
pop
sbb
popa
add
pushl
lock
pop
mov
fidivrs
in
inc
aaa
outsb
imul
or
negb
xor
movb
fwait
test
test
push
out
orb
push
sbb
sahf
mov
in
add
inc
lret
xchg
adc
lds
lcall
dec
sar
cs
lods
or
insl
jbe
xor
cmc
xchg
ret
add
xchg
fld
mov
je
insl
inc
int
shl
mov
jne
add
sub
xor
bnd
aam
sahf
rolb
movsb
fldcw
mov
aad
sbbb
add
sti
push
jnp
pop
out
mov
inc
and
push
dec
mov
inc
add
mov
in
mov
pushf
jg
and
in
jbe
and
mov
popf
rcrl
jb
cmp
add
jne
dec
std
repz
aas
and
push
inc
les
push
cmpsl
fmull
xlat
mov
out
cmpsl
dec
lea
xchg
cmp
lods
lods
jnp
or
push
test
lds
loope
push
lcall
arpl
fnstcw
fcmovb
pop
jo
xchg
dec
ret
movsb
arpl
imull
scas
sub
pop
mov
leave
mov
fstl
and
sub
subb
bound
das
sub
pop
mov
shl
mov
fs
into
inc
sbb
cltd
pop
dec
dec
adcb
push
jl
cwtl
idivl
aaa
push
or
dec
dec
movsb
mov
loop
push
fildll
cmp
xor
scas
xchg
dec
inc
inc
js
shll
fisttps
repz
sbb
sbb
mov
aad
int
dec
sbb
or
icebp
in
inc
sbb
aas
cmpsl
and
js
cs
mov
pop
or
inc
and
repz
mov
mov
cmpl
dec
cmpsl
out
fucomip
sub
in
insb
jnp
loope
xchg
inc
mov
movsb
push
out
or
movsb
iret
fnsave
sub
scas
xor
jp
jo
ljmp
popf
and
dec
xchg
ljmp
jbe
call
mov
ficomps
lret
mov
test
pushf
aas
in
ret
aaa
pop
lret
pop
test
out
sub
outsl
int3
and
sub
push
mov
lret
add
icebp
arpl
ds
inc
rclb
mov
xchg
pop
lock
ds
les
movsb
sub
push
dec
cmp
cmp
xlat
mov
adc
sub
in
movsb
push
stc
mov
or
pop
or
inc
insb
pop
xor
push
addb
dec
xchg
mov
les
fisubrl
lods
mov
jb
mov
jl
jge
shl
xchg
enter
test
repnz
out
out
imul
sbb
adc
sub
pop
mov
pop
pusha
movsl
into
add
add
mov
sarl
lds
cmp
flds
test
dec
dec
rol
in
pop
scas
into
fwait
jne
push
fwait
mov
and
pop
andl
ffree
mov
into
cmp
jp
std
and
bound
test
stos
js
xor
push
jle
sbb
push
sub
out
cmpsl
cmp
shrl
shr
jno
aaa
jnp
mov
mov
sub
xor
ds
xchg
ds
xor
mov
or
or
cmp
add
pop
mov
and
sbbl
dec
mov
inc
outsb
mov
aad
aam
mov
into
pop
mov
in
call
mov
mov
dec
mov
test
loope
mov
push
sub
test
arpl
jae
fwait
roll
mov
mov
push
or
or
addr16
or
sbb
fisttpl
push
roll
aaa
rcl
aaa
scas
aad
cmpsb
cmp
mov
je
mov
push
pop
pop
xchg
out
hlt
inc
pop
fisubrl
int
nop
mov
sub
xorl
nop
mov
test
cmp
jne
adc
test
and
fdivrs
adc
jle
cltd
sub
in
pop
les
ljmp
xlat
jecxz
add
and
sbb
ja
xchg
dec
add
addr16
pusha
mov
sbb
shll
mov
adc
fdivs
dec
push
inc
arpl
xorl
cs
bound
sbb
pushf
dec
inc
jle
dec
sbb
inc
adc
sub
inc
test
negb
daa
fnsave
mov
add
lods
in
test
mov
mov
jg
mov
pop
data16
cli
add
sbb
jns
mov
int3
pop
stc
loopne
outsb
push
mov
jl
jne
add
mov
loop
pop
fisttps
movsl
out
cld
jbe
xor
xchg
imul
fiadds
aad
xchg
enter
pop
fs
repz
pop
sbb
push
je
in
gs
ljmp
lods
scas
add
push
mov
lds
repz
dec
sbb
in
push
int3
das
ret
cltd
pusha
leave
cmpsl
std
lret
or
add
stos
jns
inc
test
sub
push
fst
dec
sub
sar
mov
add
shrl
cmc
js
lds
adcb
fldcw
into
pop
mov
int3
leave
pop
stos
pop
mov
xchg
xchg
faddp
sbb
imul
mov
mov
sub
jp
mov
cmpsl
cmc
into
jg
sti
sbb
xlat
pusha
js
and
ja
inc
dec
setb
in
mov
pop
mov
sbbb
bound
xor
cmp
mov
popa
xchg
sbbb
pop
aaa
into
mov
sbb
pop
sarb
cs
xchg
adc
outsl
and
imul
movsb
mov
sbb
mov
outsl
rclb
xchg
jo
cli
daa
dec
mov
adc
or
insl
mov
inc
in
jae
fisubrs
lods
clc
repz
adc
out
jge
mov
arpl
orb
ret
inc
pop
push
or
js
xchg
jecxz
cmc
and
cmp
int3
cli
cltd
sbb
sti
jmp
push
pop
insb
push
add
sub
cmpsb
jae
xchg
jmp
outsl
add
hlt
js
stos
pop
push
xchg
lods
add
rorl
inc
or
outsb
dec
ficoml
negb
fs
mov
xchg
inc
xchg
out
fwait
dec
data16
adc
fsts
pop
out
loopnew
and
aad
outsl
int3
fcmovne
dec
sub
cld
jns
decb
mov
scas
push
xchg
lods
in
dec
and
xor
js
mov
cmpsb
pop
mov
sub
or
jecxz
lds
cmpb
or
negb
outsl
aad
mov
lcall
cmp
cwtl
inc
dec
mov
sbb
adc
push
sub
sahf
add
add
or
cmp
aad
cmpb
das
jp,pn
sub
movl
aas
xchg
mov
mov
inc
mov
mov
jecxz
pusha
jnp
cmpsb
push
mov
int3
repnz
dec
das
lock
inc
bound
add
out
push
in
push
dec
ret
push
ss
lods
movsb
mov
aam
ffreep
xchg
arpl
out
jecxz
sbb
in
push
popf
dec
inc
decl
mov
jmp
outsl
stos
push
daa
fldenv
cltd
es
pop
pop
jle
sbb
dec
adc
sub
rorl
push
add
sub
pusha
cwtl
dec
lret
xlat
cmp
out
pop
sbb
shl
fadd
ljmp
dec
xchg
and
stos
xchg
stos
lea
sti
icebp
mov
cmp
add
imul
mov
scas
ficomps
shrb
xchg
push
jmp
fsubr
int
jmp
sahf
mul
push
out
mov
adc
add
and
cld
inc
dec
xor
xchg
enter
push
std
sub
adc
dec
add
sti
jns
sti
pop
in
xor
loope
or
popa
adc
pop
adc
push
aaa
clc
jbe
cmpsb
aas
pop
and
jg
push
push
fnstcw
aaa
add
das
jecxz
mov
xorl
jo
adc
cmpsl
in
xlat
cmp
leave
insl
jno
mov
mov
fisubrs
arpl
popf
bnd
mov
pop
cmp
pop
add
push
cmp
cmp
add
sbb
jg
mov
nop
sbb
mov
movsl
cmp
in
fcmovb
and
mov
jp
push
int3
in
sbb
mov
into
cmp
daa
in
xchg
xor
sbbb
test
sahf
inc
dec
adc
fcomps
jecxz
mov
out
mov
mov
push
cli
sbb
mov
pop
loopne
cmpsb
or
aaa
pop
pop
bound
shrb
mov
and
and
sbbb
or
cli
xor
int3
imul
repz
cmc
fldpi
push
push
nop
sub
push
leave
addr16
sbb
push
rorl
fwait
jno
jecxz
xchg
dec
add
jg
pop
loope
jo
cmp
mov
jmp
adc
mov
fldl
xchg
sbb
mulb
out
lock
outsl
lock
add
fisttpll
daa
pop
in
xor
loopne
push
cmp
jp
pop
jne
xor
sub
test
mov
fldt
cmpsb
clc
lods
mov
xchg
lds
sbb
loop
jle
mov
aas
fildll
cmpsl
sbbl
mov
dec
push
imull
xchg
cmpsb
sub
pusha
incb
mov
xchg
adc
imul
enter
in
aas
add
fs
jle
les
repz
arpl
fst
pop
rcll
xchg
gs
hlt
sbb
mov
and
out
test
popa
and
jmp
add
decb
insl
icebp
and
shlb
push
inc
mov
int3
xor
in
gs
arpl
test
add
ret
aas
add
cmpsb
movsb
push
shrl
lret
mul
mull
ja
push
sbb
out
test
mov
stos
inc
sahf
jnp
cmp
inc
push
or
add
or
or
insl
jb
jns
and
lahf
jmp
rorl
adc
out
push
rclb
lret
xchg
push
cmp
jnp
pop
int3
out
xor
jle
scas
jp
js
xchg
out
icebp
imul
aas
dec
add
cmp
test
push
xchg
rcrl
and
and
or
or
inc
push
rolb
lcall
xchg
aad
or
mov
pop
sbb
aaa
inc
cmp
push
xchg
sbb
js
pop
out
idivb
mov
test
test
sub
sub
mov
and
xchg
jno
dec
orl
jl
pusha
jp
ljmp
or
daa
mov
in
aas
repnz
or
bound
pop
mov
outsb
and
mov
jmp
std
lcall
mov
test
add
sti
in
jae
jo
rcll
jb
daa
adc
jne
adcb
dec
clc
xchg
daa
adc
mulb
dec
and
insl
cmovle
sub
les
rolb
das
mov
push
jnp
mov
js
sub
mov
mov
bound
push
pop
push
sbb
icebp
adc
in
cmp
inc
pusha
dec
leave
pop
adc
push
lods
aad
fnstsw
inc
cmp
inc
ficoms
sbb
sbb
ret
mov
jns
shll
call
jb
mov
cmp
mov
push
loopne
sub
xor
xchg
xor
subb
cs
dec
cli
mov
and
inc
pop
add
inc
or
aas
ret
sub
or
sbb
jne
ja
js
and
out
xor
xlat
dec
pop
sub
lcall
leave
movsb
iret
out
mov
push
mov
daa
and
rclb
aad
or
nop
ljmp
addr16
lea
out
les
xchg
cmpsb
ds
stc
aaa
xor
data16
sti
ret
das
mov
push
push
sub
and
dec
insb
mov
popa
pop
das
xchg
or
aam
mov
or
and
dec
sahf
mov
xchg
mov
lret
push
orl
mov
out
loopne
pushf
push
lock
sbb
push
icebp
mov
or
adc
and
out
out
cmp
sub
subl
sbb
popa
ret
mov
mov
mov
cltd
fidivl
fstpt
into
add
mov
std
cmpb
ret
jle
push
inc
loopne
and
cli
mov
xor
jg
xchg
jl
sbb
cld
lods
or
jp
pop
push
sub
bound
inc
rcll
js
adc
imul
pop
xchg
mov
adc
xchg
xchg
mov
fstps
cltd
sbb
cltd
mov
xchg
inc
inc
adc
pushf
push
mov
jo
mov
xchg
es
push
arpl
jne
cmc
jl
mov
out
fwait
popa
inc
popf
push
adc
pushf
dec
loope
aas
aam
sbb
fnstcw
xchg
mov
das
mov
fcompp
mov
popa
and
gs
loope
dec
les
jg
fstps
inc
and
sub
mov
pop
mov
imul
mov
sahf
mov
push
pop
pusha
adc
ret
cld
cmp
or
pop
dec
arpl
sub
cmp
xchg
or
nop
pop
frstor
dec
xchg
cmp
leave
sub
mov
pusha
or
test
cltd
jae
mov
pusha
push
outsb
negb
out
jmp
inc
std
push
aad
push
cmpl
out
clc
mov
decl
push
rol
mov
pop
mov
mov
rcr
pop
shll
or
aaa
jl
mov
fs
test
xchg
or
add
adc
fnsave
sub
cmp
cwtl
cmp
xor
mov
std
sbb
jo
lret
jns
es
std
lock
and
and
cmpsb
push
mov
out
ret
push
stos
push
shrd
lock
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
addl
push
adcl
push
push
andl
push
lea
push
adcl
push
subl
call
call
andl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
movl
mov
mov
xor
or
mov
add
subl
mov
mov
movl
test
movl
je
subl
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
imul
mov
orl
add
sbbl
xchg
xor
mov
sub
andl
mov
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
and
xor
add
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
xor
add
add
mov
adc
mov
xorl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
push
pushl
call
cmpl
jb
movzwl
sub
mov
add
mov
sub
lea
xorl
xor
subl
xor
cmp
movl
je
xor
mov
xor
orl
add
cmp
movl
jne
addl
pushl
call
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
addl
mov
subl
add
movl
cmp
movl
je
pushl
subl
pushl
andl
call
sub
mov
xor
xor
xor
mov
mov
xor
add
cmp
je
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
mov
xor
mov
mov
addl
add
mov
sub
mov
mov
addl
add
mov
inc
mov
subl
mov
orl
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
jmp
insb
pop
call
xchg
imul
shll
repnz
bound
pop
bound
es
pop
inc
pop
int
test
xchg
std
mov
and
mov
jle
in
add
inc
cmp
push
loop
outsb
bound
mov
dec
fcompl
call
add
push
or
sbb
fistl
insl
lods
push
jne
dec
movsb
iret
fcomps
aad
icebp
rorl
pop
mov
inc
jno
fmul
outsl
sti
mov
inc
pop
sbb
mov
popf
pop
xor
jmp
repnz
int
aas
out
cmp
fildll
cmp
push
push
mov
loop
out
rclb
fnsave
lea
push
jle
inc
repnz
xchg
push
std
bnd
pop
sahf
test
sbb
add
inc
ss
in
in
repnz
ds
pop
inc
push
push
cmp
xor
jp
xor
ss
aad
loopne
dec
ror
in
lods
loopne
and
jns
aad
lcall
jb
lock
or
push
push
fwait
mov
xor
mov
dec
std
roll
xor
inc
mov
add
and
cmp
jecxz
jecxz
mov
mov
xchg
cmp
adc
pop
mov
scas
sub
or
jnp
mov
into
fninit
dec
sub
fs
aaa
xor
adc
mov
fs
sbb
xor
push
bound
or
inc
movsl
jp
and
cwtl
pop
loop
push
sar
and
inc
lock
jnp
mov
sub
and
pop
jns
push
mov
subl
adc
and
push
mov
push
loope
bnd
into
es
mov
jmp
rorl
pop
pop
or
mov
push
xchg
and
dec
int3
mov
test
mov
fsub
test
adc
hlt
or
fdivs
test
jle
sub
and
jne
push
and
int3
out
stos
jle
scas
or
dec
shrl
or
push
repz
push
push
mov
mov
xor
lahf
add
lea
call
aam
sub
push
mov
adc
es
xchg
inc
cmp
hlt
movsl
add
adc
and
pop
add
aaa
jnp
mov
jecxz
add
jnp
fwait
clc
addr16
pop
and
subb
push
mov
nop
xor
push
insl
sbb
inc
or
fdivr
scas
nop
call
xchg
pop
mov
and
mov
test
and
jo
shl
inc
mov
pop
idiv
pushf
dec
or
testb
or
xchg
xor
dec
popa
jmp
xchg
lahf
filds
lsl
daa
push
clc
lock
pop
mov
fcoml
je
lock
cmpsl
addl
add
jbe
dec
test
loope
mov
rcrl
in
jo
xchg
xor
pop
int
dec
notb
jb
lret
or
out
jp
lea
xchg
sub
mov
xchg
xchg
ja
les
or
icebp
shlb
xor
cmp
and
arpl
dec
mov
scas
jns
popf
xchg
pushf
xor
push
les
cmc
pop
dec
jmp
jbe
test
test
cmpl
in
dec
cmpb
outsb
lds
js
jnp
das
and
repz
jne
or
fs
add
orb
add
pop
shlb
loope
cmc
push
add
pushw
shl
js
xchg
jno
xor
sub
mov
cmp
add
inc
es
or
loop
ret
mov
out
sbb
shl
mov
jge
insb
outsl
lods
xor
pop
daa
xor
pop
mov
push
inc
xchg
inc
sbb
and
cltd
into
das
lahf
sbb
iret
inc
data16
push
inc
in
adc
and
sub
loope
insb
ds
es
cmp
sbb
iret
push
scas
lret
mov
insb
out
lret
sub
push
pop
insb
inc
std
dec
icebp
or
xor
xchg
sbb
mov
incb
orb
mov
xorb
pop
dec
mov
popa
aaa
cmp
or
dec
dec
sbb
jmp
loop
loopne
or
int
pop
insb
push
addr16
mov
dec
xlat
sbb
mov
enter
ja
cmp
jnp
mov
inc
das
out
adc
sub
dec
inc
jb
outsl
lods
ret
mov
cwtl
aas
pop
iret
push
lret
sahf
dec
out
xchg
sbbb
ret
in
cmpl
out
or
lods
mov
lock
inc
xchg
xchg
test
fwait
xlat
push
jle
mov
inc
mov
push
loop
push
mov
in
pop
mov
push
roll
inc
out
cmpsl
jl
lock
dec
mov
mov
pop
lock
and
pop
repz
sbb
jo
jns
xor
xchg
repnz
xor
mov
pop
pop
decl
dec
stc
stos
add
pop
inc
out
adc
push
sti
fsts
adc
lea
nop
push
inc
es
out
inc
xor
cli
stc
lods
push
add
push
jnp
dec
cmpsb
std
subl
xor
cwtl
dec
pushf
testl
pusha
inc
xchg
popa
push
in
fimull
clc
fadds
ljmp
scas
pop
jge
pop
adc
mov
ds
jp
insl
dec
hlt
aam
and
pop
leave
ret
jne
mov
rorb
cmp
add
cs
pop
adc
repz
subl
xchg
aaa
rcrb
mov
mov
push
xchg
add
push
cld
cmp
dec
iret
jbe
push
daa
jae
mov
mov
xchg
sbb
mov
cmp
loopne
in
push
sahf
adcl
and
shll
rol
pop
sti
int
test
push
ret
dec
dec
adc
xorb
mov
lock
jge
xlat
ljmp
in
lods
mov
mov
push
dec
and
mov
mull
dec
aam
lea
int3
sbb
lods
sub
lret
out
fidivrl
lock
sbb
sbb
sub
push
imul
mov
in
pop
jle
insl
les
adc
xor
movsb
jbe
iret
and
imul
popa
out
pop
fmull
jo
test
lock
mov
mov
xor
mov
xchg
scas
rorb
or
jecxz
mov
daa
hlt
jl
in
mov
repnz
mov
add
sub
popf
xor
aad
pop
jb
sarl
into
arpl
pop
add
loop
pop
test
cmc
pop
orl
jns
xor
adc
lods
loope
jne
inc
inc
pop
clc
dec
icebp
add
xchg
mov
pop
cmpl
adc
pop
lds
mov
and
push
scas
loopne
daa
loope
adc
xchg
xor
int3
mov
push
cs
stos
mov
loop
insl
push
xchg
pop
out
xchg
pop
push
xchg
leave
lds
adc
sub
orl
dec
push
and
std
xor
pop
fidivl
pop
mov
adc
jg
ja
add
dec
mov
push
cmpsb
inc
je
movsl
mov
mov
adcb
or
cmp
fimuls
mov
dec
or
dec
jno
lahf
adc
ljmp
pop
clc
hlt
pusha
add
mov
pop
jnp
stos
pop
push
out
shr
push
aad
loope
int3
jmp
dec
sbb
inc
dec
ret
int3
xchg
inc
jp
pop
jnp
fs
test
sbb
fwait
xchg
sub
lcall
and
jmp
push
lret
cmp
xor
sbb
je
jns
shrb
mov
je
popf
cli
cmp
ja
dec
pop
mov
jl
aas
fs
sbb
push
add
data16
dec
in
mov
push
mov
pop
aam
outsl
movsb
pop
xchg
ficompl
or
push
leave
and
cmpsb
imul
outsl
fiadds
push
inc
dec
inc
pop
nop
dec
lcall
sub
cmpsb
xchg
popa
dec
sub
ljmp
repz
sarb
add
xlat
push
push
jbe
lret
mov
arpl
popl
inc
lds
sti
das
or
ja
and
testb
adc
sub
nop
aaa
popf
push
in
cmovb
push
inc
mov
xor
int3
add
xchg
xchg
jle
add
es
sub
xorl
fnsave
call
fdivrs
inc
push
jb
into
jecxz
dec
rol
cmpsl
jbe
or
jg
mov
aam
cmpsb
xor
out
in
sbb
pop
pop
jbe
das
call
xorl
pusha
enter
mov
sub
cmp
mov
ljmp
cmpsb
dec
outsb
je
xor
mov
movsl
insl
adc
movsb
movsb
sub
push
jne
cld
ret
clc
mov
ss
pop
adc
mov
int
mov
jp
subl
sub
les
adc
out
adc
xor
mov
mov
mov
jnp
mov
pop
scas
loopne
fdivrp
cli
fldcw
pop
shl
sti
test
cmc
pop
lret
out
push
pushf
movsb
in
inc
cmc
mov
pop
sub
testl
pusha
xlat
sub
test
pop
jns
jae
les
enter
dec
aam
dec
adc
ficoml
and
daa
adc
fcompl
mov
fwait
test
jle
mov
push
outsl
mov
daa
jmp
sbb
jae
sbb
push
fcoms
adc
add
fidivl
test
in
xor
cmp
sbb
in
adc
sbb
mov
stos
push
adc
sbb
pop
pop
jmp
jge
adc
ss
inc
sub
adc
ror
jge
sub
ds
icebp
adc
sahf
mov
out
je
inc
int3
sti
mov
rcr
jl
call
sub
in
xchg
pop
cmp
sbb
pop
push
mov
shrl
pop
aam
cmc
mov
hlt
jg
fstps
adc
dec
fcomi
xchg
push
das
shrl
pop
aas
mov
and
loop
xchg
adc
andl
inc
adc
push
lret
iret
gs
pop
stc
inc
adc
das
cmp
sahf
sbb
shlb
das
imul
fdivrl
out
cmc
std
leave
data16
shll
call
push
pop
add
ror
popa
movsl
xor
negb
dec
inc
std
cmpsl
cmp
sbb
mov
insb
sub
push
xchg
adc
ja
ss
inc
adc
fbld
test
sub
es
lret
negl
xchg
test
repz
xor
test
rcrl
xchg
enter
xchg
adc
fcomps
push
das
inc
and
adc
imul
jb
pop
iret
mov
cmp
push
ss
inc
push
sbb
jbe
sub
and
mov
sub
call
push
jp
mov
push
jecxz
test
insb
insl
inc
es
pop
mov
lds
mov
add
adc
jno
mov
add
div
push
cmpsl
xchg
add
lret
pop
shl
pusha
mov
push
lcall
jle
pop
mulb
mov
xchg
pop
fwait
sbb
pop
in
out
out
pop
pop
mov
aas
xlat
jg
sbb
and
fldcw
xor
insl
jae
jle
inc
adc
sbb
fsubrs
in
push
push
pop
jle
pop
jo
movsl
jp
mov
sbb
pop
pop
push
cli
jecxz
test
or
cmp
push
ror
cmp
xor
pop
sti
cmp
fadd
insb
arpl
push
push
inc
pop
daa
add
adc
or
xchg
pop
push
mov
insl
popa
dec
and
sarb
inc
data16
push
test
pop
dec
sbb
mov
cld
and
addr16
pop
adc
mov
pop
out
mov
aas
das
cwtl
lcall
fcmovne
push
xor
sbb
jno
jg
pushf
fcmovnb
mov
mov
movsl
xchg
adc
push
push
push
movsl
or
pop
mov
cmp
fnstenv
loope
lahf
mov
push
xchg
fstpt
adc
cmp
cmp
add
inc
cmp
loopne
movsl
xor
xor
push
xor
xchg
add
mov
cmp
push
adc
lods
out
out
je
fidivl
in
xor
cmp
add
inc
lock
mov
push
repz
adc
fisubl
mov
jbe
sahf
xor
mov
xor
cmp
andb
push
pop
movsbl
cli
and
add
inc
sbb
dec
in
testb
rorl
popf
insl
out
dec
lods
cmp
adc
popf
inc
mov
adc
lret
popa
popf
mov
popa
idiv
sar
pop
sahf
adc
mov
push
hlt
mov
gs
push
cwtl
push
pop
loopew
mov
mov
sar
mov
cwtl
scas
cmpsl
xorb
jl
mov
int
dec
cmpsl
movsl
into
cmpsl
call
inc
mov
xchg
movsb
sub
sub
mov
daa
adc
xchg
jbe
pushf
nopl
test
dec
loopne
vpunpckhdq
into
sub
pop
mov
push
pop
or
in
scas
fnsave
adc
push
sub
jmp
mov
aaa
mov
jns
movb
push
inc
sbb
ljmp
mov
daa
out
xchg
jp
jno
mov
mov
sub
adc
push
iret
das
jo
adc
adc
cwtl
loope
cmp
lods
jge
add
int3
subb
fidivl
and
enter
sub
popf
int3
and
jp
clc
cmovp
scas
data16
push
mov
inc
iret
or
xchg
xor
pop
sbb
cmp
mov
fwait
adc
push
xchg
cmp
dec
and
jle
sub
test
xchg
xor
out
dec
jecxz
jge
test
pop
mov
xor
leave
outsb
sub
inc
movsl
filds
enter
lock
xchg
cs
int
push
xchg
je
jge
cltd
adc
dec
mov
vandnps
push
sbb
sub
inc
and
dec
inc
xchg
mov
pusha
xchg
inc
test
out
cltd
aas
cmc
in
jmp
ret
roll
cmp
mov
lahf
out
subl
jmp
rorl
mov
push
scas
mov
rcll
mov
lock
shll
arpl
xchg
cli
stos
popa
fcmovb
shll
mov
push
imul
out
ds
in
push
fisubs
scas
sbb
movsl
call
mov
aad
popf
jp
repz
pushf
repnz
testl
or
mov
xor
dec
jmp
adc
pop
icebp
push
add
sub
pop
pop
out
sti
inc
push
sbb
mov
loope
pushf
push
aad
std
xchg
xchg
clc
out
rorl
push
leave
pushf
jns
sbb
xchg
scas
mov
pusha
push
movl
lret
dec
roll
xor
pushf
inc
mov
lret
int3
pop
dec
cmp
xor
ds
mov
mov
cli
aad
int
xor
mov
dec
jle
je
dec
in
or
movsl
mov
lods
mov
test
ret
fnsave
and
push
mov
xor
or
or
pop
ljmp
mov
mov
mov
shr
jecxz
cmp
push
inc
int3
loop
cmp
mov
or
xor
ret
lcall
addb
mov
and
aas
or
repnz
pop
push
sub
jns
mov
into
adc
in
cmc
push
push
xchg
pop
push
sub
adc
sbb
inc
sbb
fisubrl
cli
fsts
in
jo
jb
push
xchg
jmp
mov
add
bound
movsb
jae
fsubp
push
pushf
adc
mov
or
push
out
inc
imul
inc
loopne
or
cmp
xchg
pop
pop
mov
imul
out
pop
push
and
xor
sub
mul
push
cmp
movsb
stos
xchg
push
aam
add
jb
add
xlat
push
ss
rcl
inc
ds
pushf
pop
add
mov
stos
jl
addr16
jmp
pause
cs
sub
cwtl
pop
xor
test
mov
inc
push
nop
jmp
ja
xchg
mov
sbb
mov
imul
lods
movsl
dec
punpcklwd
imul
xchg
sbb
xchg
xchg
dec
xor
int
in
xchg
xchg
into
es
shrb
jne
dec
fisubl
xchg
xor
test
cmp
movsl
mov
stc
mov
pop
nop
cli
and
nop
fsubrp
cs
in
xchg
push
cmp
push
dec
dec
push
pop
fs
jb
leave
xchg
movsl
lret
dec
lahf
stos
lods
sbb
stc
fcomip
pop
mov
lret
mov
jge
test
or
fidivs
stos
mov
inc
shrl
jb
lret
out
inc
jecxz
jo
ret
jae
pop
push
or
jp
mov
pop
pushf
mov
js
jne
movsb
pop
pop
mov
and
std
mov
jbe
movsl
cmpsl
add
xor
or
dec
nop
outsb
rcrb
inc
xchg
jbe
sahf
das
push
faddp
push
push
cmc
inc
test
into
sbb
xchg
cmpsb
pop
mov
sub
mov
push
sub
sbb
jb
sub
cmp
std
daa
adc
mov
jbe
xchg
sub
mov
mov
mov
jns
xor
fstpt
mov
lods
inc
jge
stos
aaa
loop
push
pop
sbb
sub
lret
loop
push
rorl
adc
in
mov
add
cmp
and
mov
shll
xor
jnp
pop
mov
sbb
aam
mov
mov
frstor
sbb
mov
out
xchg
fcmove
or
xor
popf
int
into
cmpsl
aam
xchg
movsb
shrl
fdivp
in
inc
add
add
push
sub
add
outsb
fstl
sbb
shlb
or
outsl
movsl
es
dec
push
and
sti
loop
xchg
pop
inc
out
xchg
adc
jle
jmp
or
cli
inc
cmpsl
jbe
pop
je
pop
add
cmp
xor
repnz
cmp
or
pop
mov
mov
das
adc
pop
sahf
gs
ljmp
sbb
jp
cwtl
fs
cmpsl
or
push
sbb
fcompl
sarl
mov
lahf
leave
xor
push
push
jo
jbe
into
rorb
loope
lea
xlat
sti
ljmp
xlat
sbb
cld
ret
sbb
mov
rorl
or
out
cmp
pop
sti
jns
in
nop
fldl
lock
dec
mov
xlat
mov
cmp
add
mov
and
sar
cli
mov
xor
inc
in
mov
ret
fucom
cwtl
jle
jnp
add
sbb
lock
push
xchg
jno
cmpsb
cmp
ljmp
insl
xor
sbb
jo
aaa
push
mov
cld
imul
scas
or
popf
fidivrs
pop
cld
aas
lock
bound
scas
mov
shrb
test
sub
mov
jle
std
adc
lahf
xor
mov
mov
out
test
dec
xchg
test
aaa
and
in
lahf
fnsave
cwtl
jbe
push
mov
ja
inc
inc
or
push
push
push
jle
inc
andl
xor
inc
lds
mov
fstl
pop
dec
leave
fs
push
dec
cmc
fs
orl
jmp
pusha
mov
sub
xchg
mov
and
imul
div
cld
adc
cmpsl
mov
hlt
call
push
pop
insl
cmp
pop
jmp
sub
dec
xor
lods
push
mulb
mov
cmc
call
xorl
sbb
sub
cmc
mov
mov
leave
pushf
fildll
mov
dec
push
loope
pop
mov
jmp
sub
in
jae
sub
fstpt
insb
xor
call
jo
pushf
int
stc
data16
push
dec
adc
insb
dec
xchg
adc
or
popa
inc
mov
out
stos
cmp
dec
imull
movsl
mov
dec
inc
sub
xor
iret
push
and
lahf
mov
pop
popa
in
jne
mov
or
scas
mov
mov
movsb
imul
sbb
jno
pop
enter
aam
arpl
mov
orb
push
je
or
jb
stos
pop
ljmp
icebp
dec
les
cld
fsubrp
mov
dec
mov
aam
sub
adc
jg
addr16
xchg
or
mov
adc
add
push
xchg
mov
xorl
rcll
aas
inc
mov
adc
sbb
cltd
pop
pop
lret
mov
cmpsb
call
jo
xchg
arpl
mov
out
idivb
adc
mov
cli
cmpsl
das
pop
aas
or
or
jmp
dec
xchg
xchg
shll
dec
pop
jl
mov
and
out
push
mov
incl
push
jae
sti
pop
cld
sub
push
pop
rclb
and
popa
repz
out
xchg
jo
arpl
lods
xchg
cmp
fistps
push
in
xchg
pop
repnz
mov
sub
xchg
loope
cmp
xchg
repnz
js
loope
xor
out
aam
fisubl
cwtl
ret
push
rdpmc
mov
push
movsb
pop
and
popa
into
mov
push
mov
mov
popf
mov
and
in
mov
rol
mov
or
imul
iret
and
pop
xchg
xor
add
ret
lods
dec
pushf
arpl
inc
jno
imul
sbb
mov
in
pop
call
push
pop
mov
movsl
xchg
in
adc
mov
sbb
xchg
pop
faddl
push
mov
add
xchg
sbb
sbb
daa
out
ret
movsl
sti
fstpt
dec
or
les
daa
push
or
cmp
and
jge
in
push
js
out
dec
ret
in
and
pop
mov
mov
sbb
data16
pop
push
aad
mov
cmp
fnstcw
cmp
in
cmp
cmp
xor
out
mov
pop
mov
fld
xchg
hlt
lods
jno
mov
sub
and
shlb
xchg
sbb
les
jns
dec
xchg
xchg
dec
mov
mov
pop
cmp
rcrb
lods
lods
fsubrs
inc
addr16
les
aaa
sahf
mov
out
xor
sbb
mov
cltd
sub
jne
scas
loope,pt
cltd
in
pop
add
dec
xchg
in
enter
out
cmpsb
jp
jb
pop
adc
ficomps
mov
add
int3
mov
cmp
add
mov
pop
inc
ljmp
sub
jp
sub
xor
push
popa
lcall
lea
dec
mov
lock
loope
mov
mov
leave
and
cli
jo
sub
out
xor
icebp
stc
cwtl
sahf
pop
pop
scas
fnstenv
push
sbb
adc
aas
nop
jbe
mov
sub
lea
ret
pop
jns
jns
cli
pusha
mov
clc
adc
sbb
adc
inc
cmpb
inc
jb
and
push
mov
mov
dec
xchg
adc
inc
sub
cmp
cmpb
fldcw
loopne
mov
or
enter
mov
dec
pop
cmc
call
push
sar
insb
lods
int
cmp
popa
mov
pop
xor
insl
add
adc
int3
sti
mov
sbb
cs
mov
push
gs
fisttpl
xor
xchg
out
add
xor
fst
ljmp
jge
inc
cs
pop
pop
sub
mov
test
mov
test
cmp
xor
cwtl
mov
ret
adc
mov
js
fisttps
ret
mov
mov
push
push
divb
lahf
in
cld
mov
ss
lret
mov
and
inc
ss
mov
inc
sbb
std
add
sbb
pop
jnp
clc
mov
adc
and
jg
pusha
fbstp
adc
sti
mov
sub
jo
pop
cmp
sarl
mov
daa
mov
and
hlt
in
mov
adc
xor
xor
ja
xlat
mov
test
lret
push
mov
xor
es
pop
cld
dec
jmp
cmpsl
data16
in
setbe
jge
out
aas
sarb
mov
or
push
out
mov
test
push
test
lahf
leave
push
int
mov
cltd
scas
arpl
aam
out
sbb
jbe
sub
shlb
movsl
sbb
pop
mov
outsb
loope
out
mov
insl
and
xchg
dec
in
push
mov
xchg
insl
fcoms
clc
lods
inc
sbb
lds
cld
mov
jnp
push
add
aad
dec
movsb
repnz
jb
mov
or
mov
mov
out
mov
push
rolb
test
mov
jnp
cli
add
jns
aaa
cmpsl
jmp
mov
pusha
pushf
int
or
rdtsc
loop
jo
push
cmc
jle
int3
or
cmc
add
lcall
or
cwtl
inc
xor
lret
add
repnz
icebp
jne
add
pop
lea
ljmp
jmp
push
sbb
fst
jns
sbb
imul
jl
iret
mov
cmp
mov
repnz
in
xor
inc
jl
jns
cmp
out
pusha
jmp
fdivrl
mov
ljmp
push
addr16
cmc
out
xor
adc
vcvtpd2psx
aas
loop
lret
test
outsl
push
add
and
mov
sub
inc
xchg
nop
incl
dec
in
adc
mov
out
add
and
stc
jnp
movsl
pop
pop
loope
cltd
add
fucomp
lods
in
adc
inc
cld
sub
dec
hlt
push
mov
add
repz
pop
in
cwtl
lds
pop
lds
jb
aaa
cmpsl
out
xchg
mov
sub
fstpl
add
and
xor
and
pop
mov
sbb
popa
cs
inc
fcoml
sarb
dec
in
xor
cmp
push
ja
roll
jno
adc
xor
add
pop
data16
notl
stos
xor
test
dec
inc
xorb
test
fdivs
adc
jb
dec
jae
mov
cmc
mov
loopne
mov
aad
mov
in
mov
mov
popa
repz
fs
loope
icebp
cmc
jmp
fbld
out
push
or
in
loop
outsl
xchg
loope
fs
mov
pop
mov
xor
xor
push
cmpsb
aas
cmovge
inc
mov
inc
jmp
xchg
jle
cmpsb
fcmovne
stos
mov
pop
sbb
add
pop
mov
fstpt
aad
hlt
mulb
or
loop
aaa
icebp
jl
jns
mov
sub
scas
xor
sub
push
mov
das
in
ret
in
xchg
mov
xor
divl
xor
xchg
cld
movsb
je
es
enter
aad
sub
ja
fstpl
addr16
insl
jnp
pop
mov
scas
sbb
xor
xchg
jg
mov
jns
or
ljmp
mov
popa
js
cmp
jb
outsl
int3
cmc
mov
push
mov
stos
jbe
push
jmp
xor
push
lcall
dec
dec
or
add
insl
or
adc
push
loop
cltd
mov
dec
imul
sbb
xlat
mov
push
or
lds
rorl
sub
leave
rep
push
or
pushf
xor
sbb
add
stc
imul
loopne
mov
ret
push
outsb
add
add
adc
imul
ljmp
push
ljmp
bnd
aam
cwtl
out
push
adc
in
or
ret
inc
cwtl
mov
and
pcmpeqw
cs
into
mov
mov
sbb
fisubs
cmp
adc
adc
testl
stos
pusha
aaa
insb
jae
adc
or
jge
js
out
dec
lret
hlt
stos
movmskps
add
cmp
mov
gs
push
dec
mov
xor
in
mov
outsb
testl
test
mov
and
aaa
dec
in
rolb
rcrb
fldenv
je
jae
sti
pop
pop
mov
call
loope
outsb
xchg
fnstenv
dec
dec
xchg
cmp
mov
cmovo
icebp
dec
mov
pop
test
dec
cmp
inc
repnz
sbb
inc
in
insb
and
inc
scas
mov
jns
jge
outsl
fldenv
cmp
incb
iret
rcl
ficoms
xchg
mov
in
cmpsb
jo
lret
mov
pusha
jne
daa
sbb
testl
and
jmp
call
imul
test
sub
mov
les
xor
dec
cwtl
addl
test
mov
jmp
xor
add
test
imul
dec
pop
pop
jnp
cmpsb
adc
in
and
mov
jp
aaa
fwait
aad
xor
jns
mov
pop
clc
sub
inc
fwait
std
repz
jne
push
add
and
ljmp
xlat
dec
mov
jo
in
arpl
lock
test
jg
shl
mov
idiv
jae
addr16
push
add
ds
adc
push
clc
imul
inc
leave
xor
cmp
fdivl
mov
fdivl
push
negl
cmp
or
pop
mov
cli
repz
loope
or
or
popa
pop
inc
in
push
bound
mov
push
inc
push
in
push
xchg
push
scas
sarl
inc
cld
fldenv
sub
jp
rorb
cmp
test
icebp
push
xor
pop
and
hlt
clc
mov
mov
pop
icebp
mov
adc
add
and
ret
jns
xchg
fisubs
fcomps
xorl
sub
lret
repnz
add
lds
mov
testl
pop
cmc
outsl
fldenv
sti
push
insb
or
inc
push
cmp
dec
lods
xchg
mov
in
scas
in
and
xorb
sbb
test
push
hlt
jmp
mov
fisttpll
scas
leave
js
stos
adc
pop
hlt
lds
mov
jge
cmc
pop
das
imul
out
subl
pop
out
lods
outsb
mov
and
and
xchg
push
in
adc
unpckhps
push
and
sbb
movsl
enter
xor
or
adc
xchg
rcpps
xchg
mov
xlat
or
enter
adc
sbb
dec
cmp
lds
jae
pop
rcll
sarb
add
fnstsw
cli
insl
push
jnp
ret
jl
xchg
or
or
pop
xlat
add
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
dec
mov
cmpsb
mov
mov
mov
cmpsb
sbb
adc
bound
mov
jmp
mov
push
jl
sahf
push
and
pushf
pop
fdivrs
insb
loope
xchg
mov
mov
push
mov
inc
test
jno
inc
repz
inc
and
pop
sub
test
adc
pushf
cld
and
call
xor
das
xor
aas
aas
or
test
jmp
bound
sub
cld
add
call
mov
out
pusha
jbe
jp
xchg
clc
xchg
movsl
or
lret
inc
jo
cli
es
rolb
sbb
jl
adc
mov
dec
push
repz
rep
scas
sbb
fstpl
je
out
sub
jno
lock
cmp
movsb
sahf
lods
cmp
push
fdivr
bound
cltd
push
pusha
loope
mov
rclb
jp
pop
push
jbe
ds
in
fisttps
adc
adc
jp
cld
es
sbb
pop
jl
push
ds
sbb
fwait
jne
add
lret
test
imul
mov
out
jbe
lods
xchg
push
imul
jg
pop
loop
dec
push
sub
mov
mov
dec
sbb
dec
dec
lret
mov
or
mov
icebp
mov
jne
push
lods
and
adc
jnp
jmp
cs
ds
xor
push
into
pop
in
adc
push
cmpsb
mov
pop
je
xor
dec
add
push
shrl
iret
addr16
fcoml
dec
test
pop
aas
popf
cmp
adc
es
loope
dec
mov
jno
or
inc
test
into
pop
inc
push
test
pop
mov
iret
mov
leave
test
dec
jmp
fistpl
mov
mov
adc
shl
inc
movsl
ss
addb
dec
xchg
jae
jmp
fdivrl
outsl
jecxz
pusha
jp
imul
scas
push
push
xchg
out
daa
xlat
pop
xchg
pop
sbb
shrd
pop
div
xchg
push
lret
notb
negl
sbb
popa
rcll
mov
pop
jae
out
out
call
add
jne
sub
mov
cmpb
adcb
aad
call
dec
sbb
or
push
mov
jb
arpl
cmp
or
js
dec
cmc
dec
pushf
adc
data16
enter
push
push
imul
mov
dec
inc
xchg
rcrl
mov
sarl
into
pop
mov
sbb
push
test
mov
jb
sbb
sahf
dec
in
mov
rcll
fsts
sub
mov
stos
sbb
lock
aaa
lret
sahf
push
scas
fidivrs
inc
jg
xor
mov
mov
loope
add
aaa
lcall
cmpsl
mov
movsl
dec
flds
unpckhps
popf
das
jnp
daa
stos
or
insl
sub
mov
fcomps
movsb
jle
roll
test
sub
push
aad
jge
das
mov
cs
jbe
lods
cltd
inc
or
test
xchg
mov
pop
outsb
sbb
push
pop
sub
in
btr
sahf
insl
or
push
cs
ret
incb
add
dec
inc
sub
bswap
jne
scas
aaa
sarb
movsl
mov
cld
mov
ljmp
push
push
lret
loopne
aad
push
inc
out
enter
cmp
dec
divl
xlat
rcr
xlat
jns
push
leave
arpl
iret
shlb
imul
rcrl
test
dec
lds
lock
int
shll
lcall
sub
add
adc
lcall
inc
sbb
sti
push
loope
fwait
mov
out
mulb
xor
dec
testb
and
call
sbb
repnz
ds
xlat
sti
enter
xchg
jg
lahf
mov
fidivrs
and
sub
decl
scas
mov
rcrb
xchg
jle
mov
andl
cmp
shlb
movsb
jnp
sub
loope
orb
pushf
dec
in
shll
imul
mov
mov
fstl
push
pop
cmp
adc
dec
roll
leave
call
in
gs
jne
addr16
loope
mov
pop
cmpsl
jno
add
mov
cmp
mov
xchg
fdivs
pop
fstpl
jno
sbb
mov
insb
clc
scas
push
in
out
xchg
and
jns
pop
add
jbe
mov
fisttps
jbe
orl
mov
sub
gs
pop
mov
leave
jno
nop
cmp
popf
cmp
popa
mov
nop
inc
mov
aas
sub
dec
lcall
movsl
cmp
mov
mov
xor
pop
dec
lret
jmp
sahf
mov
addr16
test
pop
notl
add
add
mov
lcall
xchg
je
push
mulb
and
sti
push
push
in
mov
adc
mov
adc
call
sbbl
cmp
inc
popf
xchg
xchg
into
mov
pop
xchg
push
hlt
xchg
test
cwtl
orb
push
fs
jecxz
ret
sti
push
xorb
adc
mov
js
cmp
mov
xchg
cmp
mov
lock
iret
jno
or
xchg
sbb
movsl
pop
ss
and
popf
mov
je
pop
add
xor
ret
sbb
xchg
cli
jge
pushf
mov
mov
ret
lds
cmpsl
sarl
ret
or
mov
in
mull
sbb
or
lods
shll
or
shrb
es
lock
insb
std
cld
repz
mov
lods
mov
lcall
scas
das
mov
nop
push
sub
icebp
aam
gs
cmp
popa
cmp
push
repnz
popf
xor
sub
std
sti
mov
xchg
int
cs
inc
dec
daa
ljmp
out
jmp
notb
inc
mov
dec
lods
add
out
loop
in
rclb
or
xchg
inc
push
xchg
dec
xchg
lds
mov
jo
inc
push
sub
nop
add
clc
xorb
fdivp
xchg
addr16
add
mov
test
add
mov
inc
sbb
inc
inc
gs
aam
out
xor
repnz
cmp
out
jbe
and
inc
sub
std
adc
cli
xchg
repz
lea
sti
cld
sbb
out
lock
inc
mov
mov
sub
imul
rcr
mov
push
cmp
insb
test
pushf
jp
sub
mov
ljmp
mov
push
cmp
imul
xor
jge
sub
add
aad
jns,pn
inc
pop
lock
mov
pushf
rorb
cmp
sub
aas
or
mov
or
mov
aam
sbb
into
inc
sub
add
jns
mov
in
mov
cs
cmpsb
call
jo
jo
ss
xchg
lock
repz
test
cmp
mov
xchg
leave
shll
or
sub
sbb
out
dec
xlat
jb
mov
imulb
xor
or
icebp
outsl
xor
add
clc
push
test
repz
jbe
or
cmc
adc
mov
add
mov
jmp
jnp
inc
outsl
cmp
cmc
mov
jnp
fsincos
dec
xchg
ret
shl
mov
fs
in
fwait
push
inc
add
mov
mov
out
lds
cmp
dec
sub
outsb
xchg
daa
aam
pop
out
sbb
mov
cmp
ficoms
jl,pn
or
shl
push
dec
arpl
test
xchg
pushf
ds
insl
imul
cwtl
test
jb
pop
or
jb
icebp
xchg
in
test
add
leave
dec
lea
add
push
lods
xchg
cmp
sub
rcrb
fimull
imul
scas
dec
aad
or
sub
adc
sub
icebp
ds
jg
sti
stos
popa
jp
cmp
aaa
sti
jecxz
jo
cmp
pop
sub
mov
lods
push
mov
mov
fidivrl
pop
fisubl
test
data16
pop
xchg
and
test
lahf
flds
mull
cwtl
push
stos
mov
jecxz
push
inc
out
insl
adcl
lcall
repz
repz
push
cmp
mov
pop
dec
cld
xor
addr16
jecxz
aas
fbld
xchg
ficoms
stos
pop
hlt
popa
xorl
aad
fnstcw
enter
test
sbb
sahf
std
repnz
int3
fdiv
sbb
ficoml
shll
scas
dec
mov
cld
movsb
in
aam
cmp
movzwl
xchg
ficoms
and
std
cwtl
mov
add
ja
ss
daa
inc
sub
xchg
sbb
bswap
aad
jmp
pop
movsl
ja
pop
andb
jle
pop
pop
mov
adc
in
gs
fidivrs
and
mov
jb
test
push
push
lods
xchg
scas
pushf
push
out
pop
push
leave
push
scas
lods
dec
mov
je
fcos
push
cwtl
jecxz
das
call
jb
hlt
add
loope
pop
stos
lcall
lds
daa
inc
push
cli
mov
sub
movsl
mov
push
das
mov
outsb
into
or
push
rcll
push
test
clc
movsl
cmpsb
aas
mov
mov
mov
fdivrs
and
gs
rcl
xchg
shlb
stos
and
outsb
arpl
cld
lret
xor
add
mov
rcl
popf
arpl
mov
loopne
jg
sub
inc
jle
jae
aam
cmp
outsl
mov
inc
inc
xchg
ja
movsb
pop
push
pop
pop
cltd
pushf
jns
lahf
pop
out
xor
mov
addr16
mov
mov
adc
cmpsl
int
loopne
cmpsl
jae
cltd
in
or
cmpsb
add
mov
mov
mov
hlt
cmpl
jl
mov
scas
pop
lods
mov
sti
ror
push
sbb
mov
loop
pop
movsb
or
adc
adc
mov
out
sbb
and
pop
add
test
jns
push
ljmp
xchg
and
cmc
xor
outsl
and
dec
inc
rcrl
test
test
sub
movsb
mov
pop
sub
inc
xchg
pop
dec
insb
int
nop
outsl
push
loopne
mov
xor
imul
dec
adc
icebp
jge
add
ret
pop
or
sub
inc
lret
dec
dec
loopw
les
inc
pop
mov
mov
sbb
fildll
mov
jp
call
push
jno
std
cmp
testb
inc
dec
outsb
popf
push
pop
pop
jge
or
jo
push
cli
out
test
js
cmpsb
out
jne
jge
pop
dec
sbb
stc
adcl
add
fisttpl
mov
lods
outsb
jnp
adc
mov
adc
lcall
and
sbb
xchg
inc
ret
adc
mov
sbb
push
xchg
ss
push
gs
imul
das
jge
movl
stos
pop
push
outsl
inc
movsl
or
xchg
shlb
or
clc
jae
sub
jns
dec
out
xchg
jne
cmc
pop
pushf
xchg
jno
int
stos
iret
xchg
inc
jne
jbe
aam
inc
push
xor
pushw
es
fldl
mov
mov
mov
xor
stos
loopne
adc
insl
sub
lods
out
xchg
push
sbb
cli
ficoms
adc
jmp
jmp
push
add
lods
loopne
sbb
sub
xchg
add
repnz
pusha
cltd
add
out
cmp
xlat
jmp
xor
mov
add
push
inc
enter
xor
pushf
or
fstpt
add
fistpll
das
es
cmpsl
aaa
test
cmp
and
mov
lea
ljmp
mov
leave
xchg
loopne
ds
int
enter
je
push
call
lret
stos
pop
cli
add
mov
and
xor
stc
pop
mov
sti
enter
mov
int
rcrb
fs
out
sub
nop
call
xchg
or
bound
sbb
dec
xchg
iret
mov
jo
fsubr
xchg
or
dec
jae
and
mov
aaa
cmpsl
sbb
ss
push
cmp
enter
fcmove
mov
xor
push
es
std
xor
mov
loop
out
js
pop
mov
mov
pop
and
mov
mov
dec
out
insb
cs
push
dec
in
loopne
cwtl
cmp
cmp
icebp
pusha
ljmp
cmp
jb
insl
call
lahf
test
inc
addr16
mov
decb
jnp,pn
daa
or
pop
aam
sub
cmp
pushl
adcb
fwait
sub
mov
dec
fidivrs
in
mov
and
mov
xchg
data16
inc
repz
xor
fs
mov
addl
jmp
add
stos
cmp
mov
loope
rorb
cmc
fstp
sbb
enter
sub
imul
std
jge
test
adc
inc
sbb
sbb
mov
leave
cmp
sahf
mov
jae
pop
daa
lock
cmp
dec
xor
jbe
cmp
aam
pop
or
sub
pop
pop
ja
mov
movsl
dec
pop
stos
or
adc
aad
pop
push
xchg
jmp
lods
lods
sbb
push
cmp
iret
addb
int3
jmp
sbb
cmp
jne
das
jmp
inc
icebp
test
xlat
out
inc
in
test
xor
xor
and
decb
mov
adc
sub
cmp
lcall
and
aad
jmp
mov
push
and
mov
imul
xchg
mov
and
and
repnz
and
xor
imul
dec
dec
orb
lret
or
dec
mov
push
jnp
sbb
pop
push
dec
fsubrp
imul
xor
das
mov
js
xchg
or
sub
notl
dec
mov
mov
loope
repnz
repz
lds
inc
das
mov
mov
pop
push
or
loop
rcl
jb
inc
aaa
cmp
mov
aaa
out
xlat
inc
mov
lods
add
repz
pusha
outsl
ret
int
in
leave
test
push
sub
cmp
push
leave
ds
in
testl
jb
pop
adc
lcall
add
je
sbb
xchg
iret
inc
push
xor
call
inc
pop
inc
pop
sub
cld
ja
cmp
dec
rclb
sub
xchg
and
cmp
xchg
insb
jno
shll
ljmp
lret
jl
dec
es
pop
xlat
xor
inc
mov
idivb
fadd
enter
and
js
jae
in
sbb
in
adc
mov
mov
addb
mov
mov
dec
mov
xor
mov
sub
pop
out
inc
xchg
jle
pop
jg
sub
cmp
movsl
arpl
or
inc
fidivrs
cmp
stc
popa
mov
mov
add
popf
lods
test
sbb
aam
fwait
sub
jne
xor
outsl
testl
sti
lahf
mov
mov
ljmp
out
push
fsubrs
stos
movd
pop
push
cld
aaa
insl
jp
jg
mov
in
loop
pop
loop
std
and
lahf
stos
or
loopne
sub
cltd
add
rorb
pop
mov
jmp
fwait
lret
pop
mov
dec
pop
insb
jmp
out
mov
jmp
hlt
xchg
adc
add
mov
mov
outsl
xchg
loop
inc
inc
shlb
ds
xor
xchg
pop
mov
js
inc
pop
adc
lret
data16
adc
leave
jne
jne
xorb
fwait
pop
or
adc
push
xchg
fucompp
push
or
pop
jge
flds
xor
xchg
cmpsl
mov
add
mov
sbb
sub
mov
popa
and
ljmp
lret
mov
mov
imul
inc
cmp
mov
or
out
loop
xor
pop
lahf
arpl
inc
lds
ss
mov
in
or
cwtl
imul
adcl
sub
fidivl
stos
jnp
fistps
xor
subl
loop
xchg
pop
stos
lahf
fisubs
xorl
or
dec
mov
push
scas
xchg
ret
xchg
lock
jmp
xor
mov
lds
fsubrp
fstpt
ss
jo
insl
pop
fists
popf
jbe
aam
or
jp
aas
imul
stc
imul
insb
lea
fdivl
sbb
cs
lea
nop
jecxz
cmp
push
dec
add
pop
daa
pop
repz
pop
add
fmul
jg
insl
pop
ja
shrb
push
pop
sub
inc
mov
stc
mov
ret
inc
leave
jns
das
xchg
addr16
dec
mov
adc
xchg
push
xchg
fisttps
scas
adc
repz
xchg
imull
add
mov
test
dec
mov
xlat
repnz
cwtl
imul
jg
mov
cli
or
xlat
andl
lea
sbb
test
in
adc
jo
jmp
jno
es
xchg
jmp
pop
out
lods
push
mov
int
add
leave
mov
push
cmp
pop
and
hlt
scas
fcoml
mov
mov
test
sarl
gs
iret
lret
out
pandn
push
sub
lret
stos
std
pop
xchg
pop
insl
xchg
and
xor
or
xor
sub
cmp
pop
sbb
sub
insl
sti
jns
shrl
push
push
cmp
rorl
out
ret
dec
rcll
leave
in
sub
std
outsl
sub
in
sub
in
mov
stos
gs
jmp
fsubr
fs
inc
dec
push
cltd
repz
popf
inc
movb
mov
mov
jb
sbb
cmp
xchg
mov
mov
push
stos
data16
adc
pop
pop
push
lea
jp
or
jae
pop
je
fs
lods
xor
inc
stos
movsb
fisttps
mov
mov
push
and
xchg
xchg
hlt
test
adc
push
and
xor
mov
fsubr
hlt
and
cmp
xchg
or
mov
cwtl
cmpsl
add
mov
mov
push
push
shll
data16
adc
sub
cltd
xchg
sarl
int3
mov
sub
inc
push
ret
xchg
leave
mov
mov
xchg
das
test
loopne
inc
or
pop
lods
jmp
xchg
aaa
lret
inc
xor
cld
repz
lret
rcll
dec
inc
mov
es
addr16
or
and
je
pop
xchg
jno
int
repz
les
cmp
lock
cmp
call
test
daa
jno
and
sbb
mov
dec
and
scas
sti
fcom
jg
cwtl
mov
or
cs
jge
out
push
jae
test
mov
insl
or
lret
jge
jle
push
sahf
cmp
repnz
or
xor
add
mov
xor
shr
ffree
mov
ja
clc
xor
popa
adcb
in
xchg
cwtl
mov
das
mov
xchg
cmpl
jo
dec
jmp
fdivrl
rcrb
adc
xor
cmpsl
xchg
int
xchg
push
dec
dec
shll
pop
mov
scas
mov
sbb
ljmp
xor
jle
loope
rcr
or
lret
sub
stos
jl
xchg
mov
dec
test
jecxz
xor
iret
and
lret
out
cmp
jmp
mov
mov
call
push
inc
outsb
hlt
or
test
ljmp
outsl
adc
add
test
lea
sub
mov
add
and
and
in
sub
gs
outsl
mov
aam
xor
or
dec
cld
cmp
jb
test
cmc
push
lods
pusha
cmpsl
mov
je
mov
and
sub
stos
lods
jo
cwtl
js
cmpsb
push
mov
hlt
sub
jo
mov
push
dec
and
or
std
cmpsb
push
cwtl
sti
ss
loop
xor
ret
int3
ss
xchg
mov
xchg
mov
loopne
out
mov
insb
mov
push
andl
sahf
mov
out
test
gs
or
scas
xor
mov
mov
leave
out
fmuls
push
lock
dec
sti
outsl
pop
lahf
arpl
mov
and
mov
popa
mov
mov
rcll
loope
push
add
pop
mov
dec
adc
out
inc
xchg
popf
lods
ja
loopne
or
mov
cs
rclb
mov
add
imul
std
inc
push
int3
std
imul
shl
sti
jne
and
stc
outsl
mov
jmp
repnz
sbb
bnd
mov
lds
addr16
pop
stos
rorb
fildl
push
hlt
mov
add
xor
pop
add
jbe
daa
cmp
fisttps
test
jge
in
jmp
xchg
or
ret
pop
jns
lret
arpl
in
xor
pop
xchg
ljmp
rcrl
sbb
mov
xor
aam
test
out
sbb
dec
int
jle
xor
or
push
cmp
jne
lea
loope
shlb
js
stos
dec
rolb
or
lods
test
cs
out
sbb
xor
xor
jle
aam
cwtl
push
and
mov
mov
jmp
xchg
ret
cmpsl
aam
loope
stos
adc
push
xor
or
js
and
js
in
cmc
push
subb
mov
sbb
inc
jne
mov
repz
lcall
ret
jmp
xchg
ds
lret
push
pop
stos
cmpb
push
inc
mov
js
imul
fst
inc
test
sbb
out
daa
jmp
das
jbe
sahf
jae
push
test
in
loopne
mov
mov
mov
push
lds
dec
scas
and
int
jp
dec
jg
pop
lods
push
pop
rcll
orb
rol
cmp
leave
mov
mov
or
or
mov
push
dec
dec
repz
push
pop
sarl
push
xchg
pop
int
xor
jne
pop
clc
int
or
jl
pop
fsubs
mov
add
mov
mov
cmpb
sub
jns
dec
mov
mov
mov
stos
xor
cltd
jno
les
mov
xor
sub
xor
fmuls
dec
xchg
fisubrs
insb
iret
push
test
adc
addb
jae
test
or
ss
lods
rcrb
xlat
int3
sub
sbb
sub
pop
pop
inc
mov
fdivl
adc
test
es
shll
sbb
pop
into
fisubs
fwait
jno
ljmp
add
or
lcall
and
les
clc
je
in
jmp
jne
mov
sub
adc
aam
and
pop
mov
das
adc
out
sbbl
xor
cmp
mov
push
lret
cmp
jne
aam
imulb
mov
xchg
sbb
add
les
and
or
sub
xchg
inc
jns
inc
aas
dec
icebp
jle
inc
aad
and
mov
testl
stc
mov
cmp
leave
ljmp
cmp
mov
imul
jl
out
jne
mov
fmull
pop
dec
movsl
xchg
jl
test
push
xchg
push
das
stos
in
ficoms
stos
pop
jge
cmpsl
sbb
ret
sbb
or
daa
pusha
inc
jg
jge
int
jo
fstpl
es
leave
lods
jl
dec
or
or
aad
and
repnz
pop
dec
pushl
mov
mov
test
and
push
in
arpl
inc
cmp
in
push
adc
ja
mov
jecxz
push
jp
mov
xchg
adc
or
mov
int
inc
xor
xchg
xor
in
loop
inc
lea
inc
adc
cs
sub
pushf
mov
or
pop
pusha
loop
xchg
lea
xchg
push
fcompl
cld
push
sbb
arpl
cmpsb
out
fwait
sbb
lcall
lds
pop
and
or
push
mov
out
mov
xchg
add
sbb
xchg
imul
je
adc
jno
and
hlt
iret
dec
mov
lods
cltd
xor
or
jne
stos
pop
and
lds
push
cmpsl
lea
loopne
cwtl
scas
push
fidivrs
push
cli
xchg
fsubl
or
mov
adc
and
mov
mov
and
repnz
xchg
iret
or
frstor
aad
xor
loop
mov
mov
aam
popf
shlb
movsb
cmp
fs
and
icebp
nop
xor
cld
ss
inc
pusha
idivl
pop
xchg
iret
or
fnsave
mov
outsl
pop
div
xchg
adc
mov
fsubl
inc
push
adc
leave
push
pop
jle
je
sbb
pop
movsl
mov
xlat
and
inc
adc
movsb
sbb
pop
movsl
jns
push
fwait
dec
mov
hlt
lret
and
das
rcrb
push
or
xchg
sub
call
cmp
jp
sbb
test
iret
and
lcall
shlb
imul
adc
add
test
test
and
lret
bound
pop
std
inc
sbb
mov
sbb
dec
sbb
and
add
rcll
mov
scas
pop
dec
loop
dec
in
sub
mov
jne
and
push
xor
mov
int
fcoml
sbbl
stos
cmpsl
dec
incb
jb
pop
push
flds
pop
adc
popa
lret
test
push
xchg
push
sbbl
out
xchg
into
fiaddl
adc
ss
je
cmp
imul
lret
jae
push
repnz
lea
inc
stos
adc
add
pop
cmp
pusha
addb
cld
jg
jo
insb
sub
popf
sub
add
cmp
inc
fbld
data16
aad
add
push
dec
pop
scas
jne
jle
cltd
pop
push
shr
push
sub
mov
pop
cltd
pop
fiadds
push
lahf
lods
pop
xchg
sahf
and
or
jle
mov
mov
or
repnz
mov
bnd
test
popa
fcomp
pop
jecxz
push
inc
inc
stos
aaa
sbb
push
fcmovbe
js
cli
pop
push
ret
mov
lock
push
stc
dec
sub
mov
cmp
mov
fnsave
decl
inc
int3
lea
xchg
or
insb
mov
sub
jns
mov
sub
push
sbb
repz
push
lret
imul
or
fadd
cmp
sarl
or
cmc
mull
jecxz
cs
cmpsl
lahf
pop
xorl
pop
mov
cwtl
repnz
std
xor
pop
xor
jno
sbb
xor
push
fidivrs
test
xor
nop
aas
loopne
outsl
js
addr16
lcall
pop
xchg
aad
and
test
mov
or
adc
cltd
mov
bound
stos
lret
or
push
cmp
jecxz
loop
cwtl
js
xor
xchg
sarb
and
xor
push
mov
xorb
add
test
xor
jge
push
dec
inc
adc
and
rclb
outsl
jno
mov
mov
xchg
lahf
hlt
xchg
xchg
shll
sbb
out
ss
cmp
scas
out
arpl
xchg
imul
shlb
mov
adc
or
add
je
jl
out
or
in
sbb
outsb
subb
cmp
sub
rcll
into
lea
mov
adc
insl
test
xchg
in
iret
mov
push
jecxz
cmp
iret
shll
nop
ret
push
enter
stos
mov
jmp
ss
mov
pop
lret
pop
dec
stos
mov
pop
cmp
cld
pop
jno
cmp
lahf
inc
and
dec
or
cmc
sbb
data16
xchg
ret
fidivs
iret
lds
aaa
daa
or
ret
adcl
out
add
sbb
cmp
shll
mov
ficoms
adc
inc
ficoml
xchg
jae
pop
pop
popf
mov
push
arpl
mov
mov
clc
enter
xchg
pop
shl
inc
mov
jo
ffree
fidivs
jno
stos
sub
push
push
adc
jp
mov
cmp
push
mov
lea
and
mov
jne
dec
gs
xor
and
sahf
arpl
add
fs
mov
mov
adc
stos
cmp
sarl
in
movsl
ja
pop
icebp
inc
insl
cs
xor
imul
push
lret
ss
out
dec
pushf
movsb
and
sub
jb
mov
pop
sub
push
xchg
mov
popf
xchg
pop
fiaddl
pop
mov
scas
hlt
movsl
scas
testl
dec
adc
mov
sub
mov
adc
cmp
sub
dec
dec
adc
outsb
addb
sub
lds
es
cld
adc
stos
adc
mov
xchg
pop
jnp
inc
iret
sarl
fcoms
push
or
pop
cs
mov
popf
pop
cmpl
sbb
add
sub
or
pop
fwait
icebp
insl
fiaddl
fwait
mov
rol
cli
adc
int
or
cmp
or
mov
aam
sbb
add
dec
in
mov
icebp
mov
cmp
or
loope
add
sub
pop
lret
call
sahf
dec
pop
lcall
aas
lahf
das
inc
xchg
xor
sbb
sbb
lea
xchg
sbb
pop
repz
repz
stc
add
inc
mov
lods
add
and
or
cmpsl
enter
inc
sbb
fimull
push
rorb
or
cld
cmc
addl
push
xchg
shll
stos
pop
sub
mov
and
movsb
xchg
or
adc
out
and
jns
push
das
loop
cmp
movl
xor
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
jmp
inc
outsl
mov
outsl
rcl
mov
cmpsl
push
hlt
bound
pop
bound
xor
adc
ss
hlt
cmp
lcall
xor
dec
adc
mov
fs
leave
ret
cld
mov
mov
mov
scas
add
bts
or
lahf
jl
jns
pop
mov
xchg
stos
mov
add
and
cmp
cmp
dec
xchg
pop
sbb
pop
or
sbb
jb
mov
cmpsl
loopne
icebp
das
das
dec
add
ja
push
lret
mov
lret
lock
mov
ljmp
xchg
mov
ret
div
mov
addb
or
and
sbb
xor
in
sbb
ja
fscale
add
test
mov
flds
cmp
push
seto
sub
mov
xchg
into
cmp
sbb
loope
lods
cmp
in
loopne
mov
pop
rorb
int
lods
and
lods
mov
ljmp
mov
sbb
gs
insb
mov
jmp
dec
mov
aas
loopne
movsb
orb
mov
jecxz
mov
test
dec
dec
mov
pop
inc
push
dec
and
pop
sub
sub
icebp
mov
sub
mov
push
mov
lock
ja
dec
jns
repz
stc
add
ret
out
pop
test
hlt
xchg
popa
sbb
dec
sbb
cwtl
jo
idivl
pop
sbb
fldenv
das
xor
movsb
icebp
push
xchg
fidivrl
jno
les
in
call
aaa
clc
shlb
clc
push
jle
dec
sub
out
hlt
into
ror
mov
lods
xor
sub
dec
adc
lods
xor
mov
mov
push
mov
fwait
std
mov
xor
out
mov
je
cs
pop
and
mov
lea
pop
sub
ret
stos
out
loop,pt
jbe
cmp
gs
out
jnp
inc
mov
outsb
pushf
ds
mov
adc
or
push
outsb
in
call
leave
leave
flds
mov
add
pushf
mov
aas
sbb
negl
mov
mov
pop
cld
mov
dec
fstps
cmp
je
adc
push
aad
mov
adc
sbb
pop
test
cmp
les
ficoms
cwtl
call
gs
outsl
mov
jecxz
call
jne
mov
jns
lods
hlt
nop
das
push
sub
mov
lahf
add
fisttpll
aad
mov
xlat
ds
jl
jecxz
cmp
stos
ljmp
test
cmp
nop
ds
adc
std
mov
and
pop
lret
adc
cmpl
ja
sti
sub
mov
push
imul
sbb
les
push
testl
pop
xchg
pop
mov
outsl
imul
sbb
mov
add
sbb
mov
mov
arpl
addb
or
cmp
jo
pop
pop
xor
sbb
push
add
xor
shrl
jmp
scas
cmpsb
jp
mov
das
push
outsl
out
xor
ljmp
loope
mov
inc
enter
int
and
sub
lcall
mov
and
inc
mov
mov
test
scas
xchg
inc
mov
fistpll
and
fnsave
loop
int
addr16
fmuls
mov
xor
inc
jne
xor
xchg
mov
sub
jp
sub
fiadds
mov
aad
add
popa
push
pop
dec
icebp
orb
loopne
sub
out
ss
sbb
pop
jl
test
arpl
push
popf
inc
lcall
lahf
sbb
push
hlt
add
sbb
iret
add
dec
mov
jbe
mov
lods
imul
inc
aad
insl
es
ret
and
dec
pusha
imul
int
cmp
xchg
inc
push
or
xlat
pop
sbb
adc
mov
adc
xorb
xor
jp
sahf
insl
dec
cltd
in
popl
xor
test
lahf
clc
add
cmp
add
sbb
loop
mov
int3
movsl
lret
aad
mov
mov
mov
add
loop
sbb
mov
xor
cmpsb
lea
movsb
push
jo
pop
fwait
inc
sub
pop
dec
call
loop
mov
jae
mov
lods
xor
iret
mov
hlt
push
xchg
pop
mov
iret
addr16
scas
popa
xor
and
push
and
data16
jns
sbb
ss
int
fimull
inc
pop
sub
sbb
rcrl
fidivs
outsb
mov
cltd
jl
jns
fstpl
inc
mov
mov
xchg
fdiv
and
imul
mov
int
sub
sbb
pop
shll
dec
xor
test
mov
or
xchg
scas
push
lahf
int3
sub
outsl
jp
mov
add
adc
cmpsb
push
imul
mov
es
fs
mov
adc
cwtl
in
push
stos
in
imul
sub
dec
cmp
inc
icebp
mov
cli
adc
ror
mov
jmp
and
adc
ret
mov
sub
push
cld
pusha
mov
pop
aas
aad
xchg
or
cmp
test
insb
xchg
sti
lods
or
sub
cmp
dec
icebp
les
jo
xor
shr
push
xor
pop
inc
out
jmp
mov
rorl
push
mov
pop
mov
adc
xlat
aam
gs
inc
jmp
imul
lret
imul
adc
mov
jecxz
les
les
loope
jp
jno
push
imul
stos
sub
gs
lods
cmp
loopne
lods
pop
jb
jp
xchg
lahf
lds
xor
xor
movsl
js
scas
scas
pop
hlt
mov
movsl
push
mov
lret
movsl
in
inc
adc
dec
adc
mov
ret
push
push
dec
mov
adc
fisttpll
inc
add
cmp
jbe
sbb
push
jl
outsl
out
dec
mov
int
jge
or
cmp
sarl
ret
mov
ret
add
stos
mov
xor
and
adc
pop
leave
or
and
cmp
or
scas
cmp
int
lcall
mov
leave
aaa
mov
outsl
adc
mov
xorl
popa
mov
mov
adc
out
insb
mov
aam
pop
cmp
mov
std
xor
bound
jp
cmc
aam
inc
ret
hlt
mov
cmpsl
add
rorb
jecxz
cmpsl
mov
dec
or
xor
sub
fsubrp
push
in
jmp
mov
sub
pusha
shll
divb
push
or
mov
insb
outsl
jmp
cmpsb
int
cmp
std
dec
inc
adc
jl
mov
cmp
into
dec
imul
jne
sub
stos
arpl
popa
push
dec
and
in
in
jecxz
pop
ljmp
gs
dec
mov
cmp
inc
or
addl
pop
jbe
inc
jp
jae
cmp
sti
test
xor
sub
fs
loopne
fsts
xchg
gs
lcall
jp
outsl
push
out
jbe
lods
push
mov
inc
bound
cmovge
jp
mov
dec
mov
xor
in
sub
pop
and
incb
pop
push
pop
movsb
add
mov
loop
gs
gs
dec
add
lock
aas
lahf
sub
cltd
call
inc
and
mov
int3
and
pop
cmc
push
sub
inc
js
add
pop
pop
jl
lock
and
or
sbb
add
lret
push
pusha
faddl
lock
cmp
or
adc
movsb
sbb
sub
shlb
popf
xor
insb
test
mov
popa
mov
ret
cmpsl
in
loopne
in
sbb
leave
cmp
adc
test
xor
in
cmp
scas
clc
push
or
out
stos
cwtl
inc
sbb
out
and
das
xchg
hlt
xor
sbb
fs
ret
mov
mov
xchg
outsl
rcl
mov
shlb
rol
jae
inc
jno
cmc
xlat
popf
pop
lahf
jp
ss
insl
pop
dec
scas
ficoms
sbb
pop
cmp
xchg
and
xorb
or
mov
mov
rcrl
mov
sbb
sbb
and
call
push
dec
pop
movsb
sbb
jb
js
mov
fnsave
test
imul
imul
dec
call
sbb
xchg
adc
push
fdivl
shll
or
cltd
lahf
lea
xor
push
sub
mov
outsl
xor
xchg
inc
ret
aaa
lahf
and
mov
insb
mov
out
push
mov
in
loope
in
inc
clc
pop
mov
sub
rcll
lahf
dec
xor
sbb
popf
out
mov
jns
mov
push
jb
stc
ret
mov
jecxz
imul
or
jo
scas
sti
imul
mov
clc
bound
xor
int
enter
mov
loopne
cmpsb
or
and
cs
inc
es
mov
lds
lahf
sbb
loope
jo
lea
jno
in
push
cmpsl
data16
mov
pop
mov
inc
add
mov
movsb
add
aad
inc
xor
lret
ja
pop
dec
inc
movsb
adc
jge
mov
addr16
jg
cmp
sahf
and
outsb
into
loopne
je
mov
pop
adc
shrl
and
rclb
aas
jmp
cltd
icebp
dec
icebp
push
mov
hlt
xor
movl
cmpsl
pop
test
push
imul
jb
mov
inc
test
mov
mov
jae
and
sbb
notb
lahf
dec
aas
sti
mov
je
ret
push
pop
jge
les
push
push
int
mov
jecxz
movsl
int3
sbb
fstpt
aad
sbb
sbb
ja
fists
sub
shll
adc
stos
xchg
and
jno
xor
or
fs
push
pop
and
mov
mov
xchg
xchg
push
mov
and
pusha
cmp
inc
outsl
push
lcall
xchg
or
pop
stos
lock
aaa
xchg
outsb
xor
lret
dec
sub
add
add
icebp
sub
sbb
jne
and
dec
xor
sbb
imul
or
sub
test
insb
xor
jge
mov
mov
lea
movsb
insl
push
pop
mov
inc
adc
xchg
fidivrl
xor
jnp
adc
and
std
rcl
into
mov
int3
inc
push
sub
mov
push
inc
adc
add
push
and
pop
push
jle
ret
adc
jp
sbb
loopne
mov
xor
mov
call
jae
xor
jl
push
push
sbb
or
rcr
xor
push
sub
xchg
pop
and
or
pop
adc
inc
ret
jbe
out
pop
cmp
push
cmpsb
call
lods
dec
clc
adc
or
pusha
adc
xchg
xchg
mov
mov
push
imul
aad
or
enter
aam
jge
in
mov
fucomp
mov
shl
in
lret
and
icebp
insl
sbb
jnp
jmp
mov
rcr
out
je
test
hlt
daa
clc
dec
dec
inc
arpl
stc
mov
movsl
ficomps
push
and
decb
mov
pop
mov
xor
insl
sub
add
sbb
cltd
rcr
sub
enter
rcrb
push
fldenv
imul
shrb
inc
ss
xchg
fnstcw
xchg
or
hlt
pop
test
mov
mov
scas
sbb
push
insb
mov
xor
lods
stos
fcmovne
aam
cmp
daa
je
or
pop
rcrb
adc
mov
push
js
popf
test
out
xchg
jnp
pop
add
scas
jge
insb
pop
adc
pcmpgtw
add
jg
pop
mov
push
jns
xor
xor
xchg
fucomi
push
xchg
mov
mov
jmp
aaa
pop
stc
xorl
push
sbb
xchg
jnp
mov
fnstcw
xchg
mov
flds
adcb
imul
inc
mov
sbb
cmp
out
int
jge
mov
pop
add
and
stc
mov
mov
jmp
loope
add
out
imul
subl
cmpb
in
jae
sbb
sbb
jbe
add
leave
lods
mov
sub
push
sub
scas
sbb
or
fldt
sub
or
movsl
sbb
and
popf
les
sub
pushf
and
arpl
mov
xchg
dec
scas
add
inc
out
or
xchg
test
xchg
sub
shl
icebp
adcb
xor
icebp
testb
lahf
sbb
out
mov
lods
push
int
inc
mov
xor
pop
inc
dec
jo
lock
mov
sub
or
add
jle
mov
xchg
rorl
loop
repnz
sub
dec
add
add
cli
xorl
cmp
popf
dec
mov
test
repz
xchg
cmp
rolb
lret
mov
or
negl
lea
mov
cmc
fldz
add
xor
or
xchg
mov
mov
je
add
mov
jbe
cmc
imul
add
add
xlat
pop
lods
xor
xchg
mov
push
adc
bound
or
or
mov
mov
mov
adc
popa
int
gs
fwait
movsb
out
das
cli
push
jecxz
das
push
ljmp
fcomip
daa
ja
mov
or
in
int3
loope
push
or
xor
or
sahf
pop
das
adc
inc
mov
mov
and
ret
mov
xor
push
aad
jns
xor
rclb
testb
or
sbb
fistps
adc
sbb
mov
and
and
sub
xor
iret
ret
jb
out
insl
xchg
test
pop
test
fldcw
stc
fdivl
icebp
popa
xor
jno
test
mov
scas
adc
ret
fs
mov
mov
icebp
cmp
jne
scas
mov
popf
mov
pop
popf
pop
cmpsl
cmp
rolb
jnp
or
lea
cmp
mov
fsubp
rcrl
xor
ja
sahf
xor
int3
aam
jg
adc
movsl
mov
fs
leave
or
aaa
dec
into
jge
mov
pop
mov
pop
mov
jns
inc
jg
adc
movswl
ja
xchg
pushw
fnsave
xor
xchg
xor
adc
jns
mov
push
pop
xor
mov
and
rcll
adc
or
inc
push
ret
or
xor
mov
shrb
hlt
outsb
scas
loope
pop
adc
inc
aas
fisubl
ret
mov
mov
aam
pop
int
test
scas
jae
pushf
cmp
stc
fdivs
insb
addl
aaa
cmc
dec
push
shl
push
push
and
pop
sbb
mov
stc
cli
push
lock
pop
inc
mov
push
fldl
rcrl
push
pop
jb
call
ss
mov
push
dec
xchg
pop
out
push
push
mov
adc
dec
call
daa
fsub
mov
adc
mov
xlat
stc
sbb
mov
jnp
stos
mov
add
inc
fldenv
inc
xor
imul
sbb
mov
test
cmc
mov
inc
mov
or
movsb
leave
sbb
test
and
xchg
mov
sarl
sub
out
xchg
popf
jp
adc
xorl
push
and
xchg
mov
mov
push
shrl
outsl
sbb
out
mov
adc
sub
sub
push
arpl
and
das
lret
out
das
xchg
icebp
shrb
jmp
inc
enter
addr16
adc
jle
pop
call
mov
nop
ja
outsl
mul
repnz
mov
loope
cmp
cmp
push
faddp
dec
in
popf
lock
cmp
sub
push
pop
outsb
fbld
fildl
jecxz
cmp
cwtl
in
adc
add
push
mov
fldcw
iret
mov
les
pop
push
cwtl
pop
mov
jo
xchg
ret
pop
in
mov
mov
xor
sub
imul
jno
push
pop
cmpsl
sub
rol
std
rorb
add
inc
jo
adc
out
sahf
stos
inc
data16
jbe
or
movsb
mov
roll
ror
push
es
mov
imul
xchg
aad
jl
aad
xorl
icebp
rep
int3
pop
pop
add
or
cmc
and
fldt
cli
call
rcll
jle
xchg
mov
loopne
mov
mov
insl
gs
mov
lcall
fnsave
dec
cli
cwtl
insl
inc
out
inc
lods
jne
in
adc
mov
xor
call
sbb
push
xor
dec
aam
fucom
jp
cs
ss
fdivrs
fs
push
fcmovnbe
mov
outsl
stc
lret
adc
or
xchg
sbb
inc
xor
mov
sbb
fadds
pop
pop
ds
mov
ds
lahf
pop
push
xor
or
out
sbb
inc
in
out
inc
stos
mov
testb
pop
mov
and
push
es
xchg
orb
xor
inc
push
lret
and
xor
or
cmpsl
jns
lock
movsb
stos
out
rorb
ficoml
pusha
mov
cli
xor
xlat
dec
mov
cmpb
testb
aad
mov
pop
jp
ljmp
cltd
movsl
xor
sub
xchg
mov
fidivrs
insl
xor
stc
xor
lret
leave
mov
cmc
push
mov
fs
inc
mov
or
repz
inc
aaa
pop
mov
mov
mov
movsb
std
dec
data16
leave
popf
int
pop
std
gs
or
aam
and
dec
sub
add
ficoms
fimuls
add
test
pop
loopne
jl
and
or
mov
data16
push
je
sarl
aad
mov
sbb
daa
mov
sub
fcoml
inc
outsb
mov
or
jmp
arpl
mov
jg
xchg
aam
xchg
xor
fs
inc
lret
aaa
je
jp
mov
stos
out
inc
add
loope
movsb
ss
xchg
movsl
sbb
add
int3
mov
cmp
aaa
lods
push
mov
pop
bound
push
add
dec
repnz
mov
xchg
in
sub
jae
push
jmp
inc
mov
or
fwait
js
pop
sbb
icebp
fildll
push
aaa
pop
mov
jnp
movsb
mov
sarl
add
adc
idiv
dec
insb
outsl
and
dec
outsb
insl
pusha
hlt
sbbl
xor
out
mov
sbb
xor
mov
or
lods
push
ret
cmp
fbstp
shr
jecxz
push
es
pop
xchg
dec
mov
scas
xor
cmp
cli
dec
mov
or
xchg
sbb
pop
hlt
mov
mov
and
jmp
jmp
inc
ds
out
sbb
ret
or
sbb
xor
data16
add
xchg
scas
in
leave
adc
je
jecxz
aas
sti
in
xchg
cli
or
imul
dec
pop
fprem
sub
fwait
mov
cmc
call
sub
out
ss
outsb
adc
or
hlt
adc
jno
mov
popf
mov
es
in
adc
add
lahf
std
jl
sub
mov
out
mov
out
lahf
pop
sub
sarl
and
inc
lcall
cld
repz
repz
jg
pusha
sti
dec
dec
std
mov
test
daa
jo
data16
bound
xlat
jae
xor
loopne
mov
xchg
jo
mov
rorl
mov
add
fsubrs
dec
jno
sbbl
sbb
rorb
jno
xor
push
add
jl
test
lret
jne
aaa
sbb
out
cld
adc
loop
movsl
int3
pop
xor
faddl
lcall
inc
xchg
jp
js
cmp
sbb
hlt
pusha
or
sub
les
jmp
pop
rcrl
and
test
loope
pop
lods
addps
add
fnsave
ja
push
jo
add
jns
mov
mov
sub
fwait
push
push
xor
js
mov
ss
xchg
stos
pop
cli
shr
fldenv
mov
mov
sub
xor
xchg
shlb
dec
sbb
test
mov
dec
xlat
sub
push
jp
add
xlat
xor
pop
ret
mov
shl
push
pusha
pushf
mov
xchg
nop
pop
cmpsl
cmpsb
mov
dec
add
hlt
icebp
pop
jbe
pop
cld
arpl
fdiv
ja
repnz
cld
shlb
adc
xchg
push
cmp
sbb
movsl
mov
movsb
insb
pop
xchg
jae
out
mov
xor
xlat
lock
push
xor
adc
js
das
dec
adc
call
add
ror
add
jmp
and
loop
shll
add
movsl
pop
sub
outsb
lock
aam
pushf
andl
xchg
outsb
ret
scas
jo
jns
inc
mov
int3
mov
add
mov
pusha
arpl
xchg
pop
fucomp
xchg
sub
lcall
mov
or
test
movb
setns
lea
in
nop
mov
mov
in
out
loopne,pt
fucomp
fisttps
cmp
in
cmp
jp
cmp
es
dec
daa
leave
pop
ret
adc
cmp
push
mov
push
lret
cmc
leave
rcll
fidivrs
bound
sbb
inc
push
add
add
push
push
sahf
add
lret
sbb
adc
mov
mov
daa
into
jg
and
jg
dec
mov
pop
xchg
pop
int3
rcrb
pop
pop
stc
dec
into
xor
aad
pop
in
frstor
and
mov
pushf
mov
cmpsl
jp
xchg
push
and
aam
repnz
int3
cmp
jge
jae
or
mov
fcomp
in
add
lea
test
mov
enter
iret
call
imul
repnz
enter
and
aas
inc
lea
test
and
push
in
lret
adc
and
inc
ljmp
es
insl
test
cmp
movsb
mov
jno
iret
cli
arpl
push
enter
or
or
sub
push
popf
xor
fs
lret
or
js
cmpsb
add
int3
mov
test
leave
xchg
popa
pushf
mov
addr16
mov
mov
push
in
jbe
jnp
dec
lret
enter
cmp
mov
cmp
int3
outsl
adc
imulb
push
jle
cmp
loop
out
or
fimuls
or
mov
rcr
pushf
push
mov
aad
aam
inc
pop
cltd
sbb
inc
pusha
popa
adc
xchg
push
jecxz
pop
mov
lds
pop
test
or
subb
test
xor
arpl
xor
mov
and
in
ss
push
out
ss
mov
jns
dec
popa
jmp
loop
sbb
shl
jmp
rorb
push
add
mov
pop
cmp
fildll
adc
add
jno
mov
js
mov
mov
lahf
cli
es
xor
aaa
addb
or
pop
orb
or
loopne
popa
jae
fnstcw
arpl
es
loopne
sub
adc
and
nop
sub
xchg
nop
dec
cli
lcall
cmp
icebp
fbld
movsb
hlt
push
push
inc
pop
xchg
mov
jg
sub
clc
and
mov
cmp
ds
mov
sbb
xchg
xchg
enter
mov
jge
nopl
in
int
and
cmp
sub
lds
mov
popf
or
adc
sbb
and
xchg
add
inc
sti
sub
sbb
mov
pop
xor
test
xor
imul
jo
xchg
into
cwtl
adc
fldcw
inc
js
sbb
testl
dec
mov
pop
pushf
mov
int
pop
inc
sysenter
mov
cmc
clc
ret
lock
je
jo
ds
es
inc
sbb
scas
sub
jp
xchg
adc
adc
into
and
cli
daa
jmp
outsl
sti
cmp
pop
out
add
arpl
int3
xchg
sub
stos
sbb
cmp
aas
ffreep
cmpsb
test
dec
ss
in
xor
test
mov
loopne
repz
test
loope
cltd
jp
aad
adc
xchg
ret
fisubl
xor
dec
scas
jo
or
icebp
cli
inc
cmp
sub
push
cs
cmp
mov
pause
lods
jle
mov
imul
sbb
mov
popl
lods
mov
xchg
daa
and
or
cmpsb
in
mov
add
mov
lods
out
push
cmpsb
lret
leave
lds
shrb
filds
stos
iret
xor
sahf
pop
pop
dec
mov
sbbl
push
push
fwait
clc
adc
mov
fisubrs
xchg
mov
cmp
adc
cmp
scas
push
lds
arpl
mov
push
out
mov
mov
lods
mov
adc
ja
imul
mov
push
std
out
fwait
jno
pop
daa
pop
inc
pop
mov
adc
sub
push
xor
adc
sahf
xchg
inc
data16
jno
jmp
xchg
mov
mov
data16
pop
push
enter
shl
push
inc
adc
popf
imul
sub
daa
add
sbb
enter
loope
shlb
clc
fimull
cmp
popa
dec
ds
pop
in
mov
mov
iret
cmc
inc
lret
aas
enter
aas
dec
cli
push
add
scas
mov
xchg
adc
or
mov
and
fsubrl
xorl
push
cli
and
adcb
mov
and
sub
or
cwtl
push
jae
sbb
pop
sub
and
and
pusha
out
sbb
add
gs
out
jns
sub
andb
testb
sub
cli
adc
pop
jmp
pop
jle
repnz
pop
lds
fiaddl
orb
andb
sbbl
into
scas
sbb
mov
xchg
pusha
pop
std
xorl
testl
cmc
push
insb
push
mov
inc
adc
cmp
xchg
inc
adc
idivl
leave
shl
sub
lcall
mov
xor
fdivl
lods
inc
cmp
mov
inc
dec
push
dec
negl
sbb
xchg
xor
mov
mov
out
dec
jns
push
sbb
out
shl
pop
iret
pop
xchg
int3
shrb
test
clc
xchg
mov
cmp
inc
sarb
mov
push
pop
hlt
jno
pop
inc
mov
cs
push
ret
popa
aad
iret
hlt
inc
js
test
jl
testb
cmpsl
int
fxch
inc
int3
xor
mov
pop
xor
or
inc
xchg
aad
hlt
and
dec
push
std
pop
pop
push
push
sbb
insb
inc
and
loopne
mulb
call
data16
mov
dec
xchg
and
pusha
jl
jp
outsb
cmp
jne
int
xor
imul
push
jbe
and
mov
lahf
inc
xor
js
mov
mov
cmpsb
adc
aaa
scas
push
pop
cld
xor
xor
mov
shr
lret
cmpsb
push
out
mov
dec
lret
push
nop
dec
add
cmpsl
loopne
xor
pop
repnz
inc
mov
inc
or
lods
add
push
xor
in
xor
xchg
xchg
popa
repnz
imul
stc
pop
fistl
stc
pop
cmp
out
arpl
add
mov
cmpsb
out
add
fisubs
inc
and
popa
sbb
dec
dec
sub
insl
repnz
rcrl
or
mov
inc
xchg
int
mov
hlt
jg
sahf
test
lahf
cmpl
dec
dec
jae
jmp
data16
jns
sti
inc
pop
dec
mov
loope
cmp
fcmovnb
and
loope
push
mov
pushf
add
add
movsl
pop
mov
mov
push
mov
jne
outsb
int3
and
arpl
in
loopne
cli
inc
mov
mov
mov
xor
sbb
mov
and
push
dec
or
or
jb
jge
in
in
adc
push
jmp
sbb
or
push
push
test
ds
mov
popl
lock
jnp
movsb
xchg
jmp
push
xchg
xchg
xor
or
push
lea
loopne
nop
push
movsb
xor
pop
out
out
lret
adc
add
insb
jecxz
fstpl
push
loop
xor
sub
lods
jae
scas
fdivr
xor
std
xor
adcl
sub
and
mov
seto
mov
push
pop
add
push
loop
mov
xor
mov
jmp
fimuls
sbb
jo
pop
jecxz
mov
mov
xchg
cmp
fld
xchg
dec
push
jmp
faddp
pop
push
inc
inc
and
aad
mov
push
fcoms
imul
push
cmc
lret
and
ret
fsub
mov
jmp
cmc
xor
push
sbb
push
ljmp
cmp
outsb
add
pop
adc
out
lea
xchg
lcall
or
xor
sub
mov
mov
mov
xchg
lea
mov
jbe
or
xchg
sub
push
mov
xor
orl
sarl
xor
jne
rorl
cltd
xchg
in
mov
jmp
dec
shl
mov
and
nop
pop
mov
cmpsb
orb
mov
das
test
xchg
mov
ja
cmp
outsl
and
scas
into
ds
push
mov
mov
cltd
aam
cmp
popf
mov
push
and
fs
and
add
and
lcall
cmp
mov
and
test
jge
mov
add
dec
mov
clc
pusha
mov
je
pop
dec
iret
mov
mov
push
lcall
xor
sub
call
andl
pop
or
add
sub
jno
fcmovnu
jg
pop
imul
icebp
jb
iret
jg
out
mov
aaa
push
push
lods
and
ja
leave
int3
push
mov
xchg
cmp
sbb
pop
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
orl
xor
addl
inc
ret
push
mov
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
add
mov
and
cltd
push
mov
add
add
adc
push
push
mov
mov
sub
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
mov
xor
xor
xor
andl
add
adc
xor
xor
cmp
jne
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
pop
xchg
add
imul
push
add
ffree
shll
jmp
bound
in
dec
adc
ja
je
fidivrs
mov
xchg
loop
mov
mov
mov
adc
mov
lods
daa
shll
insl
sub
aad
cmp
jbe
loope
outsl
jnp
stc
sbb
xor
icebp
rcl
ljmp
mov
or
jno
aas
adc
pop
pop
stos
sub
fidivl
and
sbb
xor
push
lods
push
push
lret
add
dec
movsl
movsb
sbb
jb
xor
push
dec
cli
in
push
pop
cltd
insb
fisttps
jecxz
inc
jbe
cmp
popa
push
test
rcll
outsb
fiadds
jp
hlt
fxtract
and
or
lret
outsl
mov
dec
loope
jle
mov
push
push
push
push
push
dec
inc
xchg
ljmp
ret
push
jmp
das
sub
aaa
inc
push
and
jmp
jge
je
adc
or
mov
adc
sub
xor
sbb
or
mov
cmp
mov
and
inc
dec
cmp
fs
sub
mov
or
int3
adc
xchg
cmp
add
test
add
add
push
push
mov
sbb
stos
lret
inc
and
mov
inc
cmp
push
mov
cwtl
ja
sub
jl
cmc
sub
shrb
push
lret
adc
sbb
flds
std
in
mov
jnp
loopne
andl
pushf
nop
pusha
push
push
jle
jmp
jns
sub
clc
add
inc
mov
insl
popa
mov
mov
lcall
aaa
lret
ja
es
mov
mov
bound
push
inc
test
in
ss
popa
jne
xor
rcrl
xchg
mov
pop
fisubrs
inc
pop
popa
pushf
mov
xchg
mov
shrb
or
cs
leave
xor
pop
out
lds
leave
inc
adc
xor
pop
js
jne
and
imulb
pushf
addr16
xchg
xchg
and
lcall
xchg
sbb
adc
mov
icebp
mov
cli
pop
arpl
int3
push
jae
add
sbb
mov
mov
gs
arpl
xor
xchg
push
shll
inc
jg
daa
jb
xchg
pop
outsl
out
or
mov
push
lcall
add
push
loope
mov
je
pop
adc
xor
cmp
lds
in
lods
mov
fmull
jne
xor
inc
push
enter
fwait
push
jecxz
out
int3
pop
push
mov
cmp
mov
xchg
ret
dec
aad
in
or
add
xchg
mov
ret
lock
clc
sbb
lret
daa
pop
fstcw
jle
repz
mov
inc
fcmovbe
sbb
push
imul
push
int3
mov
pusha
stc
pop
hlt
mov
cmc
sti
push
iret
xchg
jle
and
mov
stc
repnz
jl
test
xlat
mov
ds
inc
lods
scas
push
dec
insl
aaa
sbb
in
jmp
daa
jns
add
adc
lret
mov
fimull
jp
testl
mov
cmp
mov
popf
out
xlat
fstpt
push
into
or
shrb
or
and
push
lods
insl
fdivl
push
inc
pop
mov
push
cmp
repnz
and
xor
mov
pop
cmpsb
mov
xchg
dec
and
sub
dec
idiv
fwait
push
push
adc
jle
sub
enter
dec
nop
xchg
adc
gs
push
or
loop
push
dec
aas
inc
outsl
jnp
adc
xor
dec
subl
add
jmp
sbb
pop
adc
push
cmp
adc
push
ja
xchg
in
pop
sahf
lock
jae
clc
dec
pop
cmpsw
outsb
jg
and
xor
mov
jns
cs
mov
pushf
cmpsb
shll
outsl
out
scas
xchg
fwait
iret
adc
cmp
cmp
push
adc
or
mov
cmp
dec
and
cmp
mov
cmp
repz
aad
xor
loop
bound
jge
pop
cwtl
mov
sbb
jle
fcoms
cmpsl
popl
push
sahf
repz
cmp
jbe
call
ljmp
adc
add
aas
inc
or
adc
ss
cmp
aam
jg
push
inc
cmp
push
pusha
rcrb
lret
filds
cli
jge
mov
std
mov
mov
cmp
xchg
lcall
mov
add
xorb
frstor
adc
pop
xorl
fcoml
mov
inc
std
xlat
xchg
mov
mov
fwait
lods
add
push
push
push
imul
mov
push
inc
sti
mov
cmpsb
push
push
pop
xchg
mov
or
mov
int3
add
sbb
loopne
outsb
popa
punpcklwd
dec
call
xchg
jno
jl
es
pop
ljmp
xchg
into
add
pop
lods
call
pop
ret
mov
in
push
xchg
mov
frstor
out
lcall
pop
sub
dec
imul
adc
popf
mov
add
cwtl
call
inc
push
sub
push
enter
or
imul
int3
inc
sbb
enter
lea
in
ret
mov
xchg
and
jbe
sub
std
in
adc
adc
out
sub
dec
sbb
dec
outsb
mov
mov
fdivrs
sbb
jnp
xor
fwait
loop
xor
pop
jb
xchg
jne
fdivrs
xchg
mov
shll
das
loope
inc
jle
mov
xchg
xchg
xor
hlt
mov
adc
int3
ret
jbe
ljmp
jbe
movsl
xchg
or
jae
sub
xor
mov
mov
in
xchg
adc
dec
inc
mov
adc
mov
and
fistl
add
fidivrl
mull
xor
push
or
pop
aaa
sub
lods
xchg
je
xor
adcl
test
iret
pushf
mov
cmpsl
loop
sti
add
xchg
push
dec
adc
dec
ret
dec
push
mov
pop
sbb
lds
jo
in
ljmp
addl
jnp
dec
je
stos
mov
aad
xchg
xchg
in
inc
je
add
mov
jle
mov
xchg
bound
mov
dec
js
mov
cmp
xor
aaa
pop
test
sbb
cltd
pop
mov
scas
pushl
sbb
popf
xor
imul
mov
hlt
push
imul
jmp
icebp
test
imul
insb
jae
or
push
push
imul
mov
arpl
gs
adc
jge
dec
ljmp
mov
cmpsl
aas
xchg
lcall
xchg
mov
arpl
pop
pop
mov
cltd
popf
movsb
mov
sub
pushf
inc
add
xor
lahf
es
pop
jnp
xor
sub
mov
mov
movntq
jae
imul
lods
sub
loopne
and
js
das
jg
roll
aam
cs
in
sub
dec
adcb
daa
push
dec
sbb
cs
ret
out
add
pmaxsw
mov
lret
jle
dec
or
adc
imul
nop
jns
sub
mull
ss
es
fsts
scas
ljmp
adc
cmp
flds
movsb
loopne
enter
mov
in
push
push
cmp
stc
insl
lods
loop
mov
cs
outsb
sbb
lahf
repz
pusha
lods
fdivl
rcl
push
xor
fwait
in
sbb
lret
mov
fidivrl
mov
sub
mov
mov
bound
mov
jl
mov
mov
cld
mov
leave
iret
jno
jmp
fisubl
movsb
stos
scas
in
lock
scas
push
mov
rcrb
fbstp
fcomps
xchg
adc
aaa
push
cmp
pop
xor
loope
jp
jge
push
orl
out
dec
mov
pusha
mov
cwtl
inc
or
xchg
in
into
in
mov
jecxz
and
lods
pop
lea
jge
xor
push
jle
mov
cltd
push
aas
xchg
jno
jmp
out
scas
and
dec
adc
loop
cli
hlt
sti
aaa
and
xchg
js
stos
push
pop
imul
push
cmp
add
es
mov
mov
pop
and
adc
sbb
add
call
xchg
cmp
mov
leave
push
xor
mov
scas
out
test
pop
stos
in
test
mov
adc
sbb
dec
in
incb
stos
and
mov
aaa
movsl
adc
push
test
scas
inc
mov
mov
mov
ficoml
popa
cmp
out
jno
movsb
in
ja
fcmovnu
dec
sub
movsl
cli
inc
adc
fidivl
adc
les
and
data16
xchg
or
mov
mov
mov
or
and
and
repz
dec
lahf
shlb
mov
inc
in
pop
leave
mov
mov
push
in
in
rorb
fldl
pop
add
out
les
pop
dec
xchg
mov
jl
aam
cmp
inc
mov
aad
ja
mov
sub
and
dec
push
mov
mov
cmp
xchg
cmp
in
inc
or
inc
outsb
mov
mov
add
xor
xor
mov
sub
inc
std
bound
lret
andl
out
leave
or
repz
rcl
stc
jg
jmp
and
pop
lahf
inc
mov
adc
ret
push
jge
jo
insb
sar
pop
fidivs
mov
xchg
ret
outsb
cmpsl
cld
imul
xchg
popa
cmp
mov
adc
mov
ljmp
dec
ret
pop
cs
rcrb
pusha
adc
call
xchg
mov
push
dec
test
enter
jnp
or
add
inc
arpl
or
xor
sarb
sbb
push
sbb
out
adc
add
or
aad
mov
aad
out
dec
xor
and
fs
and
hlt
cmp
and
icebp
push
push
mov
negl
and
movsl
cltd
idivb
ret
retw
aaa
push
fistpl
sub
sti
loop
int
fsincos
dec
movsb
cli
jle
jbe
adc
ss
xchg
mov
in
pop
stos
jns
xor
arpl
repnz
in
dec
mov
in
pop
push
lea
xor
std
fsubl
scas
push
fistps
mov
sbb
testl
push
ret
pop
pop
into
scas
repz
aam
cmp
fsts
cmpsl
jmp
jae
jle
loope
repnz
add
cli
pop
leave
lods
and
cld
lahf
js
into
xchg
sub
inc
js
fistpl
xor
push
cwtl
jmp
jo
loopne
sbb
dec
out
xor
mov
inc
popl
or
ret
pop
lret
jne
or
out
add
push
sbb
sub
pop
sahf
outsb
mov
jl
jns
sbb
mov
fisubrs
ss
mov
push
dec
mov
aam
das
push
dec
sbb
adc
cld
dec
je
lcall
std
mov
and
inc
stc
and
xchg
xchg
push
movsb
ret
cmpsl
push
sbb
mov
sbb
popa
stos
adc
ret
sbb
xchg
std
pushf
leave
rcl
xchg
movsl
or
call
and
imul
movsl
shlb
and
pop
inc
in
shlb
push
dec
inc
sti
cmp
stc
cmpsb
loopne
lret
mov
push
mov
add
mov
imul
mov
dec
mov
scas
jge
xchg
icebp
nop
fwait
jnp
mov
shl
mov
fs
jb
out
xor
adc
pop
stos
sti
es
push
int3
fbstp
gs
pop
or
ds
sbb
lods
push
adc
stc
push
das
jg
jmp
sub
ror
xchg
imul
clc
mov
jo
pop
bound
das
enter
jp
rcll
add
pop
lods
int3
lock
aaa
sub
stc
outsl
scas
push
nop
xchg
out
in
mov
adc
nop
std
push
lret
push
outsb
std
pop
cs
sahf
push
jmp
ljmp
les
fbstp
fnstcw
jne
sti
jns
sahf
not
mov
sbb
ja
mov
shrl
or
pop
adc
inc
push
push
pop
jnp
cmp
xor
cltd
mov
mov
xor
push
or
pushf
daa
sbb
es
popa
mov
stc
js
jl
in
mov
aas
ds
cmp
add
sbbb
sbb
sbb
lods
adc
cmpsb
outsb
loopne
jmp
ss
inc
push
mov
ja
mov
scas
sarl
add
cmpsl
sub
xlat
jge
pop
fucomip
dec
inc
and
je
jmp
cmp
aas
mov
mov
push
cmp
std
inc
xor
push
pushf
dec
add
test
ret
sbb
add
fcompl
ret
out
imul
xchg
roll
push
adc
push
mov
insl
clc
ret
js
mov
push
les
inc
and
cmp
pop
adc
or
mov
clc
rcr
push
inc
sti
xor
jo
fcmovbe
sub
rcr
push
out
sub
push
div
out
lea
sub
cli
std
ficomps
and
xor
pop
popf
mov
sbb
xchg
adc
xchg
pop
nop
aam
dec
shl
fisubrl
lret
fimull
loopne
and
fistpll
cs
xchg
pusha
das
cld
mov
jbe
sbb
popf
call
mov
pop
xchg
xchg
push
lock
scas
data16
aad
sub
ja
movsb
or
inc
mov
ja
cmp
pop
int
dec
sysret
cmpsb
jnp
add
jae
mov
divb
add
pop
dec
jle
add
jae
xchg
xchg
cli
and
mov
lea
mov
les
icebp
and
lret
nop
cmpsb
or
bnd
mov
jecxz
or
ret
stos
jl
mov
sti
inc
sub
inc
mov
andl
xchg
lcall
shll
mov
shrl
xor
add
mov
jo
adc
mov
fs
js
data16
mov
xchg
jle
leave
pop
clc
dec
ret
mov
lahf
sub
mov
mov
mov
xor
arpl
xor
loopne
jle
pop
test
es
dec
dec
mov
lock
into
mov
inc
outsl
fistps
in
loopne
sub
outsb
add
adc
cld
test
fadd
ja
je
dec
jmp
aad
push
mov
mov
mov
fisttpl
nop
in
loopne
pop
cmpsl
lock
sbb
or
imul
lea
cmc
aad
mov
je
out
outsl
ret
pop
adc
gs
jne
mov
jecxz
and
fnstsw
outsb
xor
mov
adc
faddl
out
repz
ljmp
nop
jp
add
or
cmpb
mov
scas
into
push
xor
aas
mov
mov
in
dec
cmpsb
dec
fs
cmc
pop
nop
sub
rcl
adc
hlt
scas
sbb
cmp
lahf
pcmpeqd
dec
inc
imull
push
add
fwait
sbb
repnz
pop
mov
mov
and
xor
stc
push
out
cmp
ret
stos
push
cmp
jo
fmuls
dec
lret
subl
dec
jp
dec
shrl
xchg
inc
cmpsb
imul
rolb
mov
jae
daa
sbb
ret
leave
push
mov
and
jmp
loope
popl
or
stos
mov
inc
adc
push
insl
add
jbe
addr16
cltd
aas
ja
cs
push
mov
gs
mov
push
xchg
test
inc
outsl
das
adc
cmp
inc
lock
fcmovnb
sbb
push
int3
stos
es
imul
dec
sbb
lods
movsl
lods
icebp
push
inc
xlat
push
sub
or
mov
mov
mov
xor
nop
mov
jg
divb
psubusw
int
enter
mov
out
xchg
pop
sbb
addr16
ja
cwtl
fldl
adc
pop
mov
cld
leave
rorl
push
loope
fdivs
lret
insl
cli
pop
sub
pop
stc
and
mov
mov
out
mov
mov
pop
adc
cmp
pop
and
xor
movsl
leave
cmp
jle
pusha
jecxz
orb
js
dec
jo
aaa
xchg
aam
scas
inc
mov
pop
loop
daa
fidivrl
push
pop
push
sub
xor
push
icebp
dec
loope
out
push
add
jae
jae
pop
pop
jnp
xor
icebp
sub
jne
andl
icebp
inc
iret
iret
dec
sbb
pop
and
and
cmpsl
aam
in
adc
test
cmp
adc
sahf
push
cmpsl
jg
pop
sti
xrelease
lahf
xchg
popf
push
ss
sbb
sbb
inc
rdtsc
pop
sub
repz
or
fsub
dec
cmc
jno
dec
cli
mov
loopne
jmp
ljmp
subb
fwait
adc
clc
cmp
adc
int
mov
jnp
cmp
and
push
jo
lret
lds
dec
in
jecxz
mov
insl
xchg
push
pop
aad
push
xchg
test
clc
cli
fldcw
pop
fcoml
push
inc
fcoms
cmc
pop
into
les
pushf
inc
sbb
sub
jne
xor
rcll
idivl
or
xor
mov
dec
out
icebp
jecxz
in
imul
sbb
shl
ret
xchg
dec
fisttps
sbb
out
inc
jle
xor
stos
test
aad
adc
dec
xchg
jecxz
pop
adc
aas
pop
xor
and
pop
mov
mov
jg
je
inc
mov
mov
jns
pop
mov
dec
rcrb
xlat
rcrl
add
or
sarl
cs
add
add
pop
adc
jmp
sub
cmpsl
mov
dec
push
cld
lahf
jle
cli
and
mov
and
cmp
adc
subb
pusha
dec
fcomps
sbbl
lods
fistps
in
push
cld
mov
cwtl
adc
rolb
mov
cs
jp
scas
mov
xchg
xor
int3
sahf
xor
daa
fstl
shrb
jno
mov
push
and
out
testl
jmp
ja
hlt
enter
lret
fwait
push
ja
pop
fmul
add
mov
mov
arpl
add
btc
sub
mov
pop
lret
out
stos
xchg
push
mov
loope
jp
sub
aam
cwtl
mov
into
mov
pusha
mov
add
incl
call
xlat
push
push
adc
or
int3
popa
repnz
stc
and
mov
inc
mov
sub
pop
pusha
inc
hlt
sbb
pop
test
lahf
pop
and
push
mov
jnp
test
scas
mov
pop
jns
jg
xchg
fisubl
mov
in
loope
mov
mov
xorl
in
clc
mov
in
je
xchg
int3
out
and
xchg
cmp
enter
mov
xchg
outsl
mov
shlb
push
sub
cmp
icebp
enter
loope
negb
int3
xor
lds
mov
negl
stc
cltd
lahf
jg
pop
in
insl
sub
and
push
pop
add
add
aas
jmp
scas
popa
lds
andl
pop
stos
mov
jns
or
movsb
pop
push
sub
mov
jne
call
jle
repnz
ja
adc
sbb
aad
icebp
adc
stos
pusha
rorb
pop
dec
mov
jne
fsubrs
imul
popa
and
call
mov
inc
or
adc
bound
and
cmp
jo
or
hlt
sub
icebp
psubq
or
mov
popf
pop
iret
sbbl
add
pop
out
test
iret
out
aam
pop
or
fcomp
inc
mov
xor
insb
cmpsl
out
mov
cmp
add
or
mov
adc
mov
aas
push
xchg
jne
lds
pushf
jg
fneni(8087
mov
fsubr
out
sbb
adc
ja
or
xchg
pop
mov
and
cwtl
xchg
inc
xor
mov
jecxz
movsl
inc
insb
dec
stc
and
imul
mov
sbb
jne
xor
aaa
lods
lcall
mov
mov
push
xor
scas
lret
sbb
cmp
dec
dec
dec
mov
inc
ret
jnp
push
outsb
in
add
mov
push
mov
sub
incl
fwait
jl
push
imul
icebp
sub
push
inc
push
andb
rcrl
pushl
dec
sbb
pop
xchg
or
es
mov
jecxz
dec
aam
shlb
ret
inc
sbb
sbbb
daa
inc
arpl
push
pop
and
movsl
incl
cmpsl
icebp
sahf
mov
add
test
out
cltd
push
gs
out
je
jge
testb
push
out
lahf
push
mov
icebp
insl
mov
jecxz
outsb
adc
push
dec
mov
and
push
xchg
add
add
mov
ljmp
cmp
mov
lea
rol
popa
pop
insl
mov
iret
push
pop
pop
mov
je
cmp
xchg
sti
clc
pop
inc
popf
roll
mov
push
cltd
out
ss
cmp
outsl
push
and
pop
push
in
dec
hlt
add
roll
inc
dec
fnstsw
mov
mov
aaa
sbb
pusha
incb
out
movsl
pop
ja
call
in
in
sbb
cmpl
fadd
cmp
inc
jecxz
pushf
mov
xchg
cmc
or
repz
sbb
inc
xchg
mov
lock
jo
popa
add
aad
xchg
push
mov
add
jbe
mov
leave
shr
adc
adc
or
push
cltd
push
push
hlt
mov
ljmp
lea
mov
push
adcl
shll
popa
inc
and
mov
mov
inc
fidivl
xchg
out
aam
clc
imul
jnp
lock
in
sub
add
jmp
test
cmpsb
or
outsb
stc
push
lea
lods
cmp
pop
inc
dec
pop
addb
ds
lahf
inc
jge
push
mov
push
xchg
cmovs
jmp
pop
std
inc
or
push
cmc
push
scas
gs
cs
aas
mov
cmpsb
xchg
mov
mov
ja
mov
popf
xchg
sub
dec
dec
scas
lcall
xor
enter
jbe
jmp
pop
jl
loopne
lock
push
inc
sbb
popa
lds
adc
dec
aaa
xchg
clc
add
adc
add
jb
stos
out
or
mov
xlat
pop
pop
or
mov
mov
popf
imul
add
shlb
icebp
bound
incl
data16
outsl
push
inc
jno
sbb
aad
sub
fimull
loopne
push
mov
cld
test
jne
sub
call
and
mov
sub
mov
jae
pop
mov
repz
shrb
mov
dec
xor
ljmp
rclb
mov
test
mov
inc
dec
pop
mov
adc
dec
jbe
leave
xor
xor
sub
divl
ja
es
clc
cmc
daa
fidivrl
mov
in
scas
leave
out
mov
shl
sbb
xor
sahf
push
jecxz
mov
mov
push
mov
mov
add
dec
xor
xor
mov
fsubs
sub
and
inc
sbb
lods
mov
or
fildl
sbbl
or
loope
or
repnz
jle
adc
jg
pop
into
sub
add
add
jge
fwait
out
std
jbe
stos
aad
lahf
push
and
mov
inc
into
scas
sub
sub
andl
dec
sub
push
sbb
sbb
data16
xor
jbe
js
adc
cs
jb
ret
pop
pop
pop
cmpsb
call
jno
sub
cmp
cltd
mov
inc
imulb
nop
cmp
sub
repz
adc
mov
pop
sti
xchg
cld
fucomip
xchg
lahf
mov
lea
inc
imul
add
cmpsl
in
or
hlt
popf
data16
xor
push
nop
out
and
push
ficomps
hlt
ret
out
xchg
pop
and
and
mov
int
add
adc
stos
push
jbe
arpl
pop
stos
jo
scas
fistpll
adc
iret
sub
add
sub
sbb
fcmovnb
jg
lahf
adc
std
fcmovnb
call
scas
fdivrp
repz
inc
mov
mov
cmpsb
and
mov
out
insb
psrlq
lea
lods
int
test
mov
mov
fidivrs
lret
dec
push
mov
in
gs
inc
jmp
xchg
iret
dec
inc
adc
hlt
fistpl
or
pop
cmp
sub
mov
mov
fidivrs
mov
xchg
fwait
rcr
addr16
or
test
rcrl
cmpl
cli
xchg
xchg
scas
fldl
cmpsl
cli
push
dec
addr16
ret
lahf
dec
cmpsb
scas
lds
andb
ja
adc
mov
outsl
cmpsl
sub
jmp
sahf
idivl
xchg
or
in
daa
rorl
mov
sub
in
xchg
sbb
lods
subb
out
test
adc
mov
jns
xor
sub
add
test
ret
inc
mov
sarl
rcll
mov
dec
or
and
jecxz
aad
push
xchg
arpl
mov
shll
rcl
clc
mov
aam
into
sub
jge
mov
inc
sbb
rol
add
cmp
cmpsb
sub
xor
pop
jb
in
call
mov
mov
jl
hlt
test
cld
std
ret
pop
in
jne
add
jae
paddd
mov
popfw
in
repnz
js
out
lcall
fildll
jg
mov
mov
push
adc
or
adc
sub
aaa
shll
push
subb
loop
jmp
clc
push
jmp
jecxz
push
rcrl
jmp
ja
dec
repz
fistl
pop
fnstsw
pop
mov
xchg
popf
pop
lcall
gs
add
xor
sbb
repz
jb
loopne
xor
outsb
push
into
insb
xchg
dec
movb
cmp
mov
push
add
andl
inc
jecxz
jg
loop
daa
and
add
int
mov
xor
arpl
popa
mov
mov
push
clc
ja
dec
bound
outsl
fnstsw
roll
rolb
fs
adc
stos
mov
jmp
jge
mov
into
cltd
fadds
jo
push
into
mov
or
dec
jecxz
push
or
or
adc
fidivl
push
int
or
loope
inc
sarl
xchg
pop
mov
lcall
mov
add
push
jecxz
or
jl
mov
jp
adc
cli
lret
leave
pop
iret
into
or
jb
das
sahf
lret
push
sti
cmp
negl
and
jne
jle
fs
mov
ds
inc
push
popf
inc
sahf
pop
cmp
daa
out
xchg
cmp
ret
push
mov
jae
out
mov
pop
mov
inc
lock
jnp
lock
js
outsl
pop
sti
shrl
xor
jno
int3
je
xchg
and
push
lcall
xchg
adc
fmull
or
ret
sub
push
add
leave
mov
or
clc
es
test
sarb
cmpsl
push
dec
arpl
xor
push
mov
xchg
jnp
outsb
shlb
pop
lock
popf
push
sub
pop
cmp
mov
sbb
cltd
pushf
fbld
add
cmp
ret
cwtl
add
pop
ja
ficompl
jbe
gs
push
cmp
xchg
push
out
mov
xchg
jns
pop
pop
jge
inc
pop
insl
sbb
push
lea
sbb
in
sbb
cmc
mov
fidivrs
inc
in
xchg
sub
mov
mov
ret
mov
sbb
mov
jmp
cltd
dec
sbb
adc
mov
stc
fwait
cmpsb
dec
push
inc
inc
or
mov
xchg
lret
xor
lret
cmc
jg
add
shlb
sub
adc
clc
pop
xchg
ljmp
dec
cmpsb
test
stos
int3
imul
adc
dec
and
lret
mov
jne
shr
pop
cmpsb
insb
cltd
pop
lret
test
xor
and
add
notl
repnz
movsb
and
lds
add
sub
sbb
mov
inc
sbb
testb
mov
xchg
xlat
jns
test
ror
gs
sub
sbb
pop
jmp
add
mov
sub
lods
jbe
mov
shl
fldenv
push
mov
dec
into
lcall
sub
fcompl
lret
mov
or
push
mov
enter
adc
adc
xor
cmp
xor
test
aad
jbe
dec
inc
add
dec
ret
mov
outsb
inc
xor
jle
pop
and
jns
mov
rol
adc
pop
cmp
jmp
iret
sub
pop
push
es
in
inc
mov
lea
and
dec
jmp
cmpsl
mov
adc
ucomiss
mov
jo
hlt
push
mov
push
or
mov
jle
push
lock
shl
sub
dec
andl
addr16
dec
or
push
jmp
mov
data16
add
sahf
dec
shll
jecxz
cmpsl
add
flds
push
push
outsl
mov
push
pop
add
dec
xchg
jl
mov
movsb
fwait
bound
outsb
inc
sub
cmpsl
fsubrs
mov
sbb
jno
imul
push
out
sbb
pop
sahf
stc
mov
inc
call
xchg
popa
xor
fstpl
or
adc
add
push
aad
cmp
jg
or
imul
mov
push
and
out
push
dec
movsl
dec
jae
test
shlb
inc
jg
or
iret
into
bound
push
ret
mov
fcompl
aas
cltd
mov
push
xchg
jmp
sbb
inc
sbb
inc
push
outsb
pop
and
dec
sbb
sub
add
mov
mov
add
mov
mov
xor
add
jmp
jae
mov
xchg
movsl
jecxz
pop
sbb
in
nop
and
lea
jmp
bound
outsl
xchg
pop
aad
nop
into
pop
call
cmp
mov
pop
inc
and
adc
int3
ds
and
scas
mov
push
in
es
xchg
mov
cld
ja
inc
rcrl
in
push
mov
arpl
test
xchg
gs
add
fldt
ror
fdivl
jo
add
sti
cltd
add
sahf
xor
xor
daa
or
cld
sub
sarb
adc
lock
or
xchg
jne
repnz
cmc
fwait
mov
mov
arpl
scas
icebp
rep
jmp
pushf
pushf
and
mov
sbb
mov
xor
push
sub
xchg
pop
sub
cld
and
gs
xchg
xchg
sbb
mov
inc
jnp
rorl
jb
xor
dec
shlb
add
sub
adc
lods
ret
dec
test
jns
xor
dec
mov
xchg
jno
xor
mov
dec
push
jns
std
pop
jo
mov
movsb
inc
js
jnp
fmull
aas
mov
mov
jecxz
cmp
and
adc
mov
movsl
lret
lret
lds
leave
sbbl
shll
adc
jno
mov
adc
popf
push
bound
mov
pop
mov
jp
iret
movsl
mov
es
jnp
movsb
inc
dec
sbb
jne
mov
out
inc
lret
jae
jmp
stos
cltd
mov
loop
imul
jp
movsb
mov
lock
xor
mov
repz
stc
scas
xchg
ficomps
loope
call
in
pop
les
sub
imul
inc
cltd
leave
xchg
xchg
aas
lock
cmp
nop
int
pop
pop
stc
orl
push
or
lea
fucomp
lds
nopl
sub
sahf
das
aam
fimull
movsb
lahf
sti
xchg
int3
add
sbb
adc
fsubl
mov
movnti
push
adc
inc
bound
dec
cmpsl
cmp
stos
mov
xchg
or
aad
adc
dec
cltd
jmp
lret
and
add
inc
mov
adc
imul
mov
cmc
fistpl
cmp
test
and
mov
add
mov
cmp
mov
push
xor
sbb
arpl
outsl
pop
mov
into
popa
xor
mov
icebp
pushf
clc
cmp
jne
jb
dec
push
and
loope
out
fxch
idivl
push
push
mov
pop
mov
jl
sahf
mov
add
popf
addr16
divb
int
inc
pop
repz
xor
xchg
dec
repz
pop
sti
loopne
push
xchg
inc
mov
outsb
test
sbb
jl
and
insb
xor
movsl
inc
mov
dec
sti
push
shrb
subb
push
pop
push
repz
pop
cmpl
sub
push
xchg
dec
loop
add
cmp
or
fstpt
mov
loope
cld
jo
adc
cmpsl
jbe
nop
inc
std
lds
push
aas
jae
adc
das
jnp
in
int
dec
in
insl
frstor
or
jno
jnp
out
movsb
inc
and
rcll
bound
call
outsl
xor
pusha
mov
js
imul
jp
sbb
mov
in
mov
xor
xor
push
push
adc
clc
mov
mov
lock
ljmp
adc
sub
aaa
pop
inc
subl
or
and
mov
jle
movsl
or
stc
or
jne
jbe
cmc
shl
add
stc
repnz
cmp
mov
sbb
or
mov
adc
fistpll
jge
sbb
jbe
or
or
fstpt
push
insl
loop
je,pn
xchg
sahf
mov
jl
mov
test
add
scas
cwtl
cmc
jno
xor
movsb
jb
jp
or
movsb
inc
sub
mov
out
daa
cltd
sarl
popa
jns
xchg
aam
rcrl
add
and
xchg
and
jmp
loopne
push
imul
sbb
mov
cmp
mov
rcrl
ss
rcrb
jno
xorb
fidivs
stos
xchg
cmc
jl
mov
adc
in
push
and
jle
inc
mov
out
imul
pop
dec
out
adc
push
xor
std
aaa
jecxz
cmp
out
pop
mov
push
mov
jge
lret
clc
shll
sbb
dec
inc
dec
and
stos
push
sti
sub
sbb
and
enter
roll
push
test
aaa
popa
dec
icebp
sub
subl
int
data16
pop
mov
call
xchg
mov
sbb
inc
adc
jecxz
pop
out
nop
add
ss
daa
data16
mov
pop
enter
pop
imul
sbb
dec
pusha
ss
dec
popa
dec
sti
loopne
stos
ljmp
add
adc
sbb
pop
shlb
jle
loopne
sahf
or
lcall
and
sahf
add
add
call
rcrl
dec
lods
dec
adc
inc
dec
push
or
push
jb
out
xchg
jno
xlat
rolb
xchg
jg
fs
or
repz
fwait
insl
mov
xor
ret
lock
dec
xor
jne
out
mov
lahf
imul
data16
pop
or
mov
mov
or
mov
pusha
iret
sub
mov
inc
jp
test
mov
stos
mov
jp
fs
push
addr16
push
dec
adc
in
mov
push
push
and
shrb
ja
inc
xor
adc
punpckhbw
xchg
mov
push
int3
outsb
mov
shl
xchg
into
inc
fidivs
gs
sbb
inc
mov
mov
pushf
push
jge
add
fs
in
dec
js
push
inc
mov
cmc
fbld
jmp
fadds
pop
sbb
mov
lock
ret
cli
mov
sbb
lods
sbb
clc
adc
cs
out
inc
cmp
enter
sbb
aaa
orl
cmpsb
jnp
dec
xchg
pop
push
aaa
ret
xchg
ret
jmp
pop
mov
push
push
sti
test
add
xor
push
cmp
add
mov
testb
dec
cmpsb
dec
or
sub
sub
aaa
cmp
fisttpll
xchg
sbb
jge
mov
test
das
jg
stc
push
popa
xchg
jecxz
dec
sub
xor
sub
xchg
imul
pop
lea
mov
inc
insl
and
push
mov
ljmp
insb
mov
push
das
jecxz
popf
pop
js
dec
in
jg
dec
out
jno
loopne
lret
outsb
cmp
lret
pop
mov
aam
sub
adc
into
fildl
xchg
notb
out
loope
fidivl
fpatan
or
sbb
in
mov
std
orl
pop
addb
xor
divb
movsb
xorl
sub
mov
xor
jmp
push
scas
lahf
testl
gs
orb
pop
sbbb
cmp
pop
popa
sbb
shlb
jb
xchg
mov
movsb
sbb
sbb
dec
inc
adcl
fdivrl
pusha
push
rolb
pop
inc
pushf
in
pop
push
xor
or
add
xchg
cld
xchg
xchg
int3
mov
leave
pop
push
sub
repnz
push
lret
push
add
out
es
scas
mov
dec
mov
push
test
cmp
ror
imul
loop
aas
sub
xor
nop
mov
jns
std
ss
mov
cmp
aad
mull
stc
mov
add
add
outsl
roll
dec
mov
jmp
or
dec
in
sub
cli
into
and
jb
insb
add
mov
jp
push
mov
int3
inc
mov
mov
mov
dec
test
jecxz
cltd
pop
pop
jb
fbld
pop
sub
ljmp
lret
faddl
out
mov
and
pushf
pop
add
mov
dec
cltd
into
mov
mov
repnz
daa
lods
lock
cmpsb
scas
sub
and
dec
js
cld
cmp
leave
and
scas
nop
pushf
jae
mov
push
xchg
jnp
jnp
sti
push
jb
xchg
lock
data16
jae
mov
sti
sub
out
sub
lds
sbb
dec
jmp
xchg
adc
xchg
fisubrl
pop
pusha
mov
arpl
in
push
scas
arpl
sub
pop
xor
sub
paddd
add
inc
mov
sub
mov
pop
aam
dec
icebp
test
jl
jne,pn
cmc
enter
dec
sbb
cli
int
lret
es
add
das
fsubrl
jl
xchg
leave
dec
mov
mov
ret
adc
sub
dec
lds
add
fistpll
cltd
mov
es
mov
fwait
test
in
dec
enter
jecxz
dec
pop
jge
fisubrl
out
adc
and
mov
jbe
sub
in
dec
idivb
inc
je
insl
pop
imul
orps
lods
push
das
ja
cs
repz
mov
mov
nop
js
fldpi
sbb
xor
orl
jge
cmp
fsubs
icebp
pop
xchg
fdivs
mov
mov
out
cmp
sbb
into
sub
mov
cltd
lock
faddp
stc
push
gs
adc
dec
adc
cmp
jno
push
inc
popa
dec
shl
jbe
push
lret
sbb
add
mov
mov
inc
call
in
add
mov
pop
bound
stc
lods
xor
outsb
iret
sub
shrb
cmp
stc
xchg
jne
pushf
test
mov
test
pop
lcall
icebp
js
adc
lds
cmc
imul
xor
mov
mov
or
sahf
sahf
mov
or
mov
push
ja
ljmp
mov
sub
hlt
ljmp
adc
int3
sub
pop
and
fnstenv
in
push
xchg
xchg
ss
cld
mov
add
ljmp
int3
dec
pop
js
push
daa
dec
add
jb
pop
inc
bound
je
out
div
nop
cmpsl
mov
push
jno
arpl
and
pushf
and
dec
imul
lahf
xor
test
stc
mov
dec
mov
jb
pop
jo
cmp
in
dec
movsl
lods
xchg
daa
jecxz
aam
pop
les
lcall
push
in
popf
mov
adc
loop
dec
or
pop
lret
lret
or
data16
cs
mov
sbb
into
or
popf
pop
lock
dec
sbb
jecxz
dec
sbb
mov
cmpps
fsubrl
or
pop
mov
test
add
mov
in
xchg
dec
mov
push
and
cmpsb
push
cmp
sbb
and
loop
dec
or
loope
cmc
xchg
sahf
xchg
inc
add
mov
subb
dec
cmp
insb
jg
rolb
push
cltd
pushf
adcl
aas
inc
xlat
fwait
leave
rorb
mov
add
push
clc
jge
sub
push
imul
in
into
lods
scas
push
mov
test
mov
inc
cmpsl
les
adc
pop
mov
fisubl
pop
ret
pop
push
mov
cmpsb
clc
sar
dec
mov
pop
sbb
repz
cs
arpl
mov
xchg
rcll
lods
enter
outsl
jl
lret
das
lock
aas
adc
and
xlat
scas
inc
xor
lahf
cmp
fmuls
mov
popa
push
fnsave
movsb
pxor
pop
mov
xor
pusha
inc
into
loopne
mov
ret
loop
leave
xchg
outsb
inc
mov
sbb
negl
adc
mov
xor
arpl
test
sbbb
leave
enter
lcall
or
rcl
jecxz
pop
test
test
dec
scas
insl
out
mov
cmpsl
inc
nop
fnsave
cmpsb
shll
or
or
mov
and
out
jmp
cmp
inc
sbb
imull
jle
cmp
xchg
inc
cmpsl
data16
cmp
add
mov
movsb
rolb
jns
push
xchg
and
mov
sbb
scas
sbb
les
sbb
outsb
pop
mov
cmp
out
push
pop
in
ss
out
lea
xor
cmpsl
outsb
jle
out
lret
and
loop
jmp
add
jae
add
xchg
lret
aaa
jae
pop
ret
cmpsb
std
out
mov
outsb
fs
adc
mov
adc
out
cmc
stos
add
popf
enter
repnz
cmc
js
sbb
add
mov
enter
push
inc
push
push
sarb
mov
inc
sbb
mov
rcll
loopne
mov
rcrb
pop
mov
add
mov
cmp
mov
shlb
jge
cmp
in
sub
lods
mov
mov
sahf
or
add
test
es
lods
inc
inc
getsec
dec
aad
ficoml
fildll
jne
lea
jmp
enter
stos
sbb
test
cli
push
xlat
push
cmc
and
inc
nop
daa
jge
sahf
add
xlat
out
pop
out
shr
mov
in
outsb
or
ret
repz
add
fisttps
shrb
add
mov
jbe
and
jl
mov
pop
ss
clc
push
sbb
lret
icebp
push
daa
shl
jnp
insb
stc
inc
xchg
pop
push
mov
test
adc
jno
test
cmpsl
sbb
adc
clc
bound
mov
or
adc
xor
into
sti
and
clc
repz
out
rcll
cmp
sahf
gs
lods
adcl
inc
xchg
sbb
adc
sub
add
imull
shll
rorb
das
and
enter
adc
test
mulb
sbbb
ja
fwait
dec
adc
aaa
mov
les
jge
out
aad
scas
jp
or
test
js
inc
jmp
js
cmc
push
scas
pop
je
mov
sbb
cmp
xor
mov
les
clc
sub
jns
mov
xor
inc
test
cs
lea
push
stc
addr16
sti
jle
lret
fcomi
adc
pop
fs
mov
sarb
out
add
push
mov
test
jg
inc
movsb
fbstp
sub
ds
stc
ret
sar
cltd
sbb
pop
adc
pop
sub
cld
xchg
pop
sar
mov
dec
fcompl
cmp
fcmovb
addl
and
in
mov
cli
loop
dec
icebp
adcl
dec
push
popa
jns
repz
add
int
out
popa
jbe
test
add
push
inc
add
xor
push
pop
in
mov
sub
aas
ret
js
push
add
lahf
mov
roll
iret
mov
mov
bound
lcall
mov
cmpsl
lret
xchg
dec
inc
and
pop
dec
pushf
pop
cmp
inc
insb
pop
inc
pop
std
out
add
lahf
data16
cmp
lea
fldt
clc
xor
lock
pop
or
fstps
mov
mov
push
js
dec
xchg
sub
in
sub
xor
push
sub
repnz
je
or
xor
mov
mov
rol
rolb
pop
imul
adc
loope
daa
inc
arpl
in
add
fadds
xlat
jge
xorb
lahf
push
subl
mov
outsb
dec
mov
jns
adc
jmp
mov
xor
mov
xchg
ja
ds
es
push
pop
je
ret
clc
sub
inc
xor
adcb
mov
xor
lds
and
movsl
xchg
int
mov
mov
in
imulb
push
mov
mov
lds
pop
jo
cwtl
sti
nop
push
cmp
jae
add
sub
jmp
insl
lret
xchg
shrb
inc
and
cwtl
mov
jae
es
mov
push
scas
lcall
repz
xchg
jge
shll
loop
in
ret
mov
loop
pop
xchg
icebp
dec
stos
mov
cmpsl
repz
jo
repz
sub
mov
jp
cmpsb
sbb
fwait
jge
mov
lea
test
mov
scas
fistps
mov
mov
imul
mov
xchg
mov
lods
out
popf
ss
rol
test
jae
mov
inc
pop
jae
add
jo
push
sbb
faddp
jp
mov
adc
daa
jb
push
or
pop
and
pop
inc
mov
stc
pop
rcrl
push
cmpsb
sti
out
cld
pop
jns
adc
sbb
call
xchg
fwait
adc
ror
sbb
inc
mov
imul
jg
adc
push
test
jbe
mov
xchg
addb
inc
mov
in
outsl
loopne
sub
push
fidivrl
push
pop
sbb
int3
stc
loop
jecxz
lods
push
insl
and
adc
rorb
push
push
iret
in
cmp
call
mov
adc
cld
insl
test
leave
jp
xor
hlt
pop
jge
ljmp
les
jmp
orb
xchg
test
fwait
mov
mov
dec
mov
cmp
ret
sti
insl
push
aam
fmul
push
mov
pusha
hlt
mov
scas
lret
jle
aaa
aam
xchg
dec
mov
cmpsl
jne
inc
dec
aas
lret
outsb
aas
gs
enter
enter
movsl
sbb
inc
ret
negb
repnz
adc
add
in
xchg
sub
int3
jg
sub
cmp
int
jge
xor
lahf
divb
mov
dec
and
cli
xchg
data16
cli
sub
sub
mov
popl
sbb
popa
sub
mov
aad
ljmp
cs
cld
push
and
push
loope
ds
and
addr16
nop
lcall
mov
pop
jl
mov
insl
std
jmp
mov
andl
add
pop
out
cmp
xchg
lcall
fdivrl
mov
repnz
movsl
cld
ret
and
sbb
cmovns
sub
mov
mov
mov
xchg
dec
xchg
imul
dec
aas
jae
cmpsl
sbb
cmpsb
sub
test
arpl
test
sbb
adc
testb
pop
and
mov
jnp
ss
and
mov
test
lret
subb
xchg
cs
mov
jmp
loop
mov
fldl
inc
out
and
repnz
out
stos
sahf
mov
mov
pop
mov
xchg
aas
jge
jnp
mov
mov
sbb
outsl
lods
push
out
lret
fisubrs
pop
gs
jge
inc
jno
mov
and
outsl
dec
pop
lret
and
out
jo
and
dec
xchg
cltd
mov
mov
leave
sub
lret
cli
xor
popf
mov
mov
les
mov
push
xor
pop
push
inc
aaa
les
mov
nop
mov
roll
adc
adc
gs
out
andb
sbb
xchg
pop
cmp
pop
adc
test
adc
sbb
pusha
push
lods
mov
xor
inc
shll
std
mov
test
pusha
clc
gs
sub
idivl
les
xor
pushf
and
je
inc
fldl
mov
ds
outsl
and
mov
cmpsb
xlat
jbe
mov
test
mov
sbb
push
inc
mov
int
nop
or
push
ss
icebp
in
and
push
cltd
test
jg
mov
push
mov
cwtl
aam
sub
clc
sub
cmp
shrb
push
cmpsl
push
mov
mov
pop
jns
mov
push
mov
add
push
mov
adc
sub
mov
imul
jecxz
jmp
mov
pop
inc
les
out
jne
and
pop
mov
mov
ret
js
jae
add
cmp
pop
aam
push
mov
jle
mov
rclb
popa
sub
sub
jns
inc
mov
in
sbb
jnp
mov
xor
outsl
das
dec
lods
jg
arpl
filds
dec
push
inc
lret
push
and
push
cmpsb
mov
xor
cmp
sub
jbe
out
push
xor
mov
imul
add
out
lret
xchg
cld
and
movhps
lahf
jecxz
adc
stos
test
sub
sti
mov
or
fidivl
imul
outsl
mov
sarb
out
dec
xchg
xor
pop
mov
loop
mov
mov
push
pop
inc
int3
dec
pop
int3
sti
adc
mull
add
aaa
jmp
popa
dec
fildl
push
int
add
pop
pop
lret
add
or
cmp
loope
bound
in
jo
mov
jl
jno
xchg
jno
push
dec
adc
jbe
mov
mov
cmp
push
mov
shll
sbb
cmp
and
sti
mov
fldpi
fs
cmc
xchg
mov
and
pop
mov
lods
outsl
add
pop
dec
or
mov
push
stos
pushf
and
jne
hlt
imul
adc
sti
xor
pop
mov
xchg
sbb
scas
aad
dec
lock
inc
ljmp
in
clc
sub
pop
es
push
xchg
mov
ljmp
mov
hlt
jge
mov
ja
dec
js
cld
cmpsb
test
insl
sub
fwait
jbe
fdivl
sub
lods
jnp
mov
lret
lock
clc
lea
xor
in
call
add
mov
jo
fsubs
push
popf
add
subb
jae
cmp
in
mov
lock
pop
adc
mov
xor
cli
mov
out
xor
test
jbe,pn
mov
mov
scas
ljmp
fidivl
aaa
xchg
into
ljmp
repz
cmp
adc
mov
pop
dec
and
cltd
imul
loopne
test
mov
xlat
xchg
mov
mov
ds
jge
bound
adc
push
jne
or
xchg
stos
loopne
adc
pusha
movsb
enter
xlat
bound
mov
insl
jae
lahf
xor
stc
xor
in
icebp
jbe
jge
shll
mov
das
xchg
int3
xor
or
int3
push
mov
sub
mov
mov
sbb
in
sbb
push
dec
and
add
imul
sub
push
jb
leave
scas
ror
and
out
out
fadd
push
or
jne
add
cmp
mov
call
loop
mov
fstpt
mov
out
cmpsb
out
adc
test
cwtl
xlat
fbstp
addr16
scas
cmc
cmp
out
or
into
pusha
push
xchg
ss
jnp
sarb
lahf
mov
sbb
push
push
out
dec
jbe
les
jp
inc
inc
xchg
cld
fmul
imul
jle
loope
sarl
in
xchg
cs
and
stc
lds
pop
mov
cli
cs
xchg
mov
push
adc
inc
mov
mov
and
test
aaa
rcll
xor
adc
or
pop
mov
push
push
mov
xchg
mov
cmp
je
or
ja
mov
pop
xor
pusha
sbb
std
js
mov
pop
hlt
mov
sub
cltd
xchg
mov
test
and
ficoml
es
adc
out
mov
shl
fsubl
mov
fs
xlat
adc
xchg
addr16
push
inc
int
addr16
das
cld
imul
sti
shll
pop
jg
test
aas
rcrl
mov
jbe
pop
pop
lds
cmp
xchg
scas
inc
mov
push
mov
xor
inc
cmpsb
in
gs
adc
cwtl
mov
xchg
mov
imul
inc
aas
testl
and
imul
xor
mov
jmp
aam
mov
pop
out
sub
xor
dec
stos
fs
stos
ss
cld
jle
fildll
fwait
inc
ficoml
adc
mov
jno
jge
js
pop
repz
lods
imul
iret
dec
push
sbb
cs
add
push
cmpsl
shrl
out
jb
ss
insb
sbb
jmp
adc
fwait
push
push
jno
jle
sbb
cs
pop
hlt
lods
rcrb
mov
pop
xchg
out
loope
test
adc
pop
mov
outsl
fs
sub
out
out
push
fwait
jbe
adc
adc
xor
mov
pop
cmpsb
arpl
ret
xorl
sbb
push
mov
jae
pushl
cli
rorb
mov
inc
xor
loope
std
aaa
mov
pop
mov
xorl
pop
xchg
mov
sub
or
in
shl
ds
insb
mov
je
or
shlb
mov
mov
fstps
push
lcall
push
pop
mov
lock
dec
bnd
cwtl
inc
dec
js
rol
lcall
push
dec
mov
jbe
stos
cmp
fistpl
pop
adc
sub
addr16
movsb
pop
bound
rcll
enter
or
loope
cmp
sbb
xor
dec
fnsave
mov
mov
es
mov
mov
and
aad
sub
ret
or
inc
xor
mov
mov
cmp
cmp
xchg
sub
xchg
adc
adc
repz
testb
scas
enter
xlat
dec
out
pusha
xor
dec
fs
ret
dec
test
mov
imul
mov
add
xchg
xor
mov
or
movsb
add
stc
call
pop
mov
mov
fs
jns
sub
pop
lret
inc
orl
dec
movsb
xor
das
inc
shrl
jns
add
jns
bnd
push
mov
insb
mov
mov
out
lds
shr
test
xchg
adc
das
data16
daa
sub
loope
or
jbe
push
insl
pop
psrld
movsb
scas
mov
pop
mov
negb
or
sar
mov
test
pop
xchg
aas
mov
icebp
mov
in
push
jmp
sub
insb
sti
repz
shlb
stos
sbbl
push
inc
subb
lods
xchg
arpl
aad
fnstsw
insl
xor
and
fists
xchg
push
jmp
mov
cmp
xchg
jno
int3
in
fs
mov
icebp
xchg
cmp
int
or
push
lahf
fistl
aad
and
jb
aam
iret
pushf
sub
shld
popa
mov
clc
push
lods
cli
bound
lds
loopne
pop
aam
xor
loop
xchg
lret
aad
or
xchg
jae
sbb
sbb
and
lret
sbb
fmull
lcall
out
faddl
pop
aad
push
testl
int
pop
inc
fstps
and
jge
xchg
dec
rclb
and
cmc
and
mov
stos
scas
sub
and
sahf
push
inc
scas
or
mulb
dec
out
int3
mov
in
inc
clc
ds
int3
sti
adc
pop
outsl
enter
adc
inc
cli
xchg
sbb
cmp
push
push
movhlps
dec
pop
push
xlat
xor
add
xchg
cmp
dec
mov
xchg
dec
stc
lods
dec
xor
lds
lods
mov
in
pushf
ds
cmove
lahf
loop
pushf
roll
mov
js
xor
pop
push
scas
add
jo
or
lahf
orb
xchg
mov
outsl
in
fcoms
subb
push
dec
jbe
mov
xchg
insb
adc
add
push
cmp
mov
rcrl
push
xchg
rcr
mov
loope
rorl
icebp
adc
push
sub
andl
jo
call
push
mov
jmp
pop
test
outsl
jbe
lahf
add
push
sbb
out
xchg
rcll
popf
bound
mov
movsl
inc
mov
fimull
sahf
fistl
xor
xor
jmp
into
dec
jecxz
sub
mov
jle
sub
icebp
repnz
cmp
repz
fildl
in
mov
in
jmp
nop
push
xchg
sti
adc
jno
add
repnz
push
adc
dec
add
daa
in
nop
cli
in
or
hlt
arpl
cmpsb
call
add
add
push
push
out
aad
les
bound
out
inc
ret
shll
cmp
sbb
sbb
push
stos
push
and
bound
push
popf
frstor
cli
xorb
sbb
ret
lods
sub
pop
cmp
jg
or
ja
add
test
push
out
std
jo
mov
nop
daa
ss
in
jns
cmp
add
lea
cld
jge
mov
rclb
loop
add
push
insb
dec
cwtl
repz
and
je
shrb
xchg
sbb
xlat
call
jmp
and
sub
cmp
pop
jl
mov
xor
imul
mov
mov
and
ja
shll
jno
jb
idiv
mov
xchg
push
jae
sub
shl
aas
mov
sub
mov
dec
lock
addl
and
leave
call
scas
or
popa
cmp
cmp
mov
lret
jb
pop
jnp
cmc
outsb
and
enter
or
rcl
lahf
bound
push
or
sbb
or
sbb
nop
cwtl
lret
imul
jg
push
or
add
mov
imul
lock
and
das
sub
lret
inc
out
adcb
clc
sub
cmp
mov
or
lret
mov
daa
pop
pop
or
orl
jg
out
fnstsw
sahf
sahf
pop
adc
jb
stc
and
inc
jp
loop
jp
pop
jae
add
dec
into
int
push
xor
push
mov
aam
pop
adc
xchg
mov
adc
xchg
xchg
jmp
mov
and
inc
push
stos
push
adc
aas
into
inc
dec
xchg
jle
loopne
rcrl
push
cmp
bound
xor
test
lock
addb
cmc
cmpsl
mov
mov
push
nop
ret
xor
loope
int
inc
lods
in
pusha
or
rcrb
push
imul
fxch
pop
nop
lods
aaa
cld
outsb
mov
sbb
inc
pop
mov
xchg
popf
mov
sub
mov
scas
stc
sbb
ss
sub
fildl
icebp
adc
xor
xor
xor
jmp
pop
push
mov
aam
imul
cmp
hlt
push
jmp
bound
loope
insl
and
dec
call
push
ss
imul
jno
insb
movsl
pop
xchg
adcl
gs
daa
in
outsl
or
outsl
cmc
pop
mov
jle
xchg
dec
leave
sub
aaa
enter
and
mov
jbe
mov
ret
sub
sub
mov
out
push
addr16
cli
shlb
cmp
fiaddl
fmul
not
int3
mov
jbe
fisubrs
mov
mov
sahf
enter
in
insb
mov
dec
mov
out
gs
pop
or
jae
es
mov
and
inc
pop
loopne
mov
adc
jno
pop
mov
and
jns
insl
pop
add
fsub
popa
je
mov
cli
aas
xor
push
jo
xlat
movsl
jbe
inc
xor
repnz
insb
mov
mov
mov
mov
jb
adc
pmulhw
int
xchg
daa
and
mov
sbb
sbb
push
mov
ja
cltd
cmpsl
pop
inc
cltd
add
mov
cmovno
call
and
frstor
pushf
hlt
xor
add
cmp
pop
inc
repz
dec
xchg
adc
jecxz
loop
in
mov
dec
pop
or
add
sahf
mov
iret
mov
std
xor
jmp
xlat
cwtl
pusha
dec
jge
sub
out
ret
jne
push
pop
sub
mov
and
loope
mov
gs
adc
inc
mov
inc
jmp
loopne
loop
xchg
imul
jecxz
cli
xor
mov
loope
gs
xchg
data16
mov
and
jg
dec
mov
out
hlt
xor
pop
xchg
xor
daa
mov
lahf
in
jge
add
dec
mov
or
rorb
rol
mov
add
inc
inc
fstpt
loope
inc
dec
add
xchg
xchg
sti
aad
sbb
mov
pop
sub
out
jb
mov
pop
rcrb
test
sub
fsts
mov
dec
rcrb
pusha
jnp
sahf
clc
push
sbb
inc
xchg
add
cmp
leave
xchg
mov
cmp
jo
loope
xor
mov
xchg
xor
inc
aaa
or
sub
ficoms
call
dec
adc
fdivrs
mov
cmp
mov
xchg
sub
sarl
std
imul
gs
jns
add
mov
dec
ja
adc
xor
mov
xchg
add
imul
leave
push
fidivl
lock
dec
inc
and
cmpsb
ja
pop
xor
fwait
lods
inc
mov
cmc
pop
or
jecxz
adc
ret
mov
fwait
out
ja
sub
mov
mov
adc
jns
enter
into
in
or
dec
dec
movsl
adc
push
mov
inc
popf
in
xchg
mov
jmp
ljmp
ljmp
adc
les
xlat
insb
mov
scas
cmp
pop
aas
and
dec
sub
xor
sbb
enter
ror
fldcw
ret
or
mov
bound
jle
and
pop
in
std
push
pusha
or
mov
loop
out
add
mov
inc
sub
mov
sbb
movsb
push
data16
mov
in
stos
jecxz
add
adcl
push
aas
imul
sarl
cmpsl
into
inc
push
xor
dec
sub
push
test
adc
ja
mov
push
push
sbb
xor
sub
cltd
sbb
sub
sbb
js
push
lea
mov
scas
outsl
test
imul
adc
inc
shl
dec
pop
mov
mov
lcall
push
cmpsb
les
pusha
js
xor
cmp
sahf
inc
test
dec
adc
and
enter
mov
push
fcomip
mov
dec
inc
jecxz
test
xor
add
ss
orb
and
sbb
orb
xlat
fsub
mov
jp
xchg
in
mov
ffreep
dec
mov
outsl
into
int
xchg
cmp
sub
lahf
loop
insb
aad
and
sbb
adc
sahf
push
xlat
daa
fdiv
int3
push
orl
sub
mov
pushf
jle
hlt
movsl
in
fcomip
mov
sub
dec
add
lcall
nop
xchg
aaa
mov
icebp
test
insl
mov
jmp
clc
fnsave
or
lods
in
xchg
adc
push
scas
add
inc
leave
inc
popa
call
cli
push
mov
loop
sbb
and
cs
push
movsl
push
out
popa
fcomps
add
loop
sbb
in
lcall
popa
in
imul
push
sbb
or
xor
push
mov
fmulp
out
xor
data16
inc
outsl
inc
push
mov
jecxz
adc
in
scas
push
push
sbb
mov
mov
dec
push
and
xlat
cmp
cmpsb
cld
lahf
adc
push
xor
mov
jmp
and
outsb
inc
mov
or
cmpsl
loop
or
lods
scas
data16
and
fbld
fadds
daa
iret
pop
jg
inc
pusha
jne
jno
fsts
xchg
mov
push
xchg
jp
jl
mov
xor
pop
pop
or
adc
movsb
xor
mov
jl
dec
cld
mov
leave
fwait
jae
or
es
stc
dec
adc
add
movsb
mov
shl
ja
in
jl
or
movsb
xchg
adc
jnp
mov
pusha
sub
scas
iret
and
lds
cmp
aaa
addl
jnp
mov
xchg
inc
mov
sub
add
fisubrs
hlt
dec
movsb
add
or
sub
inc
popl
push
pop
pop
inc
pop
ljmp
mov
dec
jae
and
dec
push
xlat
stc
aad
popf
mov
sbb
lcall
cmp
adc
mov
and
mov
scas
cmp
cld
test
test
popa
sahf
aaa
or
mov
std
ja
dec
mov
xchg
movsb
sbb
jne
inc
in
xchg
cmp
or
or
roll
fldcw
adc
mov
movsb
dec
movsb
movsb
repz
mov
nop
adc
cmp
daa
nop
aas
aad
dec
xchg
ret
xchg
roll
pop
fnstsw
jecxz
leave
cmpb
pop
jb
ss
sbb
mov
cmp
dec
or
add
push
sub
or
cli
lods
ja
pop
pop
sub
outsl
xor
xchg
nop
mov
in
xor
cmpsl
pop
sbb
mov
outsb
cmp
pop
imul
jge
not
push
or
scas
or
les
insb
lods
inc
jne
xchg
or
dec
mov
inc
add
mov
mov
dec
aas
shlb
js
lcall
push
daa
movsl
sbbl
out
lods
inc
xchg
adc
pusha
decl
sbb
pusha
mov
push
sub
or
xchg
mov
or
ljmp
pop
adc
cmp
int3
addr16
fisubl
ljmp
or
jl
outsl
xchg
test
in
add
add
inc
iret
mov
xchg
add
cmp
outsl
and
rorb
in
lock
repz
pop
adc
fs
sti
cmp
lods
push
lods
lcall
cwtl
lret
inc
shr
xchg
xchg
movsl
jl
jbe
jae
fidivrl
jle
xchg
sub
add
and
rorb
push
shll
stos
mov
rcrl
addl
fdivrs
or
cmp
push
sbbl
je,pt
or
pand
sbb
into
pop
sbb
lods
xchg
cmp
push
int3
dec
test
mov
lahf
mov
and
add
sub
xchg
movsl
std
lret
imul
and
aad
fwait
loop
cmp
inc
pop
ja
cltd
xchg
mov
cwtl
imulb
mov
aas
xor
sahf
cli
push
cmp
fwait
adc
sub
lea
mov
lret
leave
sbb
adc
popa
out
int
jl
lock
sbb
ja
add
mov
adc
les
arpl
fdivl
xchg
scas
and
dec
mov
mov
jbe
dec
xchg
sub
jbe
xchg
xchg
jno
scas
outsb
fwait
inc
mov
jns
lods
cmp
jle
repz
dec
mov
jmp
push
mov
cmp
and
push
inc
insb
push
pop
mov
or
sub
mov
or
aad
cwtl
outsl
push
fsub
das
pop
cmp
mov
mov
and
inc
adc
cld
scas
inc
mov
out
xor
pop
jecxz
mov
and
fisubrl
pop
mov
and
push
jns
inc
insb
cs
insl
in
movsb
push
dec
test
imul
in
pop
out
cmp
jmp
into
nop
or
jae
xchg
sbb
sti
insl
inc
testl
xchg
fimuls
mov
out
icebp
mov
or
rcrl
push
faddl
repz
aam
cmp
dec
or
cmp
je
sbb
mov
sbb
or
lods
xor
jl
sbb
inc
outsb
jecxz
ret
inc
imul
jno
dec
sub
lea
cmp
or
insl
cmp
sbb
into
cwtl
push
fildll
aad
push
mov
jle
push
xchg
and
fiaddl
int3
and
ficoml
jp
or
sub
out
sub
cmp
mov
sub
and
or
adc
or
push
push
daa
ja
sbb
mov
stos
cs
adc
jge
jno
add
or
mov
xor
dec
pop
adc
inc
adc
fistps
cltd
cmp
inc
cmp
push
test
xchg
xchg
sarl
cli
mov
add
sarb
in
push
clc
inc
repz
push
and
inc
cmp
fisubrl
int3
aad
in
xor
jg
push
mov
xor
ficoml
add
scas
or
pop
push
and
mov
mov
insb
outsb
mov
call
mov
out
and
andl
insl
or
push
sti
or
xor
inc
push
pop
jb
sub
in
mov
inc
jns
gs
pop
mulps
shlb
xor
or
addb
fisttpll
rorb
sbb
mov
xchg
icebp
cmp
sahf
pushf
out
inc
xor
or
adc
mov
lcall
pop
mov
ret
stos
leave
dec
nop
popf
adc
pop
mov
cs
or
hlt
sub
push
fs
loopne
jae
cmc
out
jge
and
aam
dec
mov
or
loope
mov
shll
and
pop
orb
xchg
test
aam
mov
xchg
dec
push
je
ja
adc
inc
dec
xchg
adc
insl
insl
cli
lahf
pop
rclb
mov
mov
or
mov
enter
call
or
fsubrp
shl
je
loope
xor
mov
das
inc
sbb
xchg
js
jp
push
pop
movsb
adc
pop
cmp
cld
dec
push
add
push
call
cmpsl
or
jo
adc
xorb
es
sbb
lahf
aam
add
cmp
sub
imul
jecxz
jg
movl
outsl
subl
sub
aad
sbb
xchg
test
xchg
aad
aas
adc
sahf
data16
xor
data16
dec
movsl
mov
adc
inc
roll
xor
jp
add
mov
addr16
lods
arpl
mov
popf
mov
cmp
xchg
jns
lret
adc
popa
xchg
nop
push
adc
roll
jne
dec
divl
cmpsl
add
pop
hlt
stc
inc
xor
movsl
into
mov
sbb
xchg
loop
lahf
test
xlat
mov
push
inc
pop
les
dec
sub
cmpsb
push
mov
xchg
mov
mov
mov
andl
or
or
lea
pop
jl
fimull
mov
and
idivl
movsl
dec
mov
daa
aaa
test
adc
lea
adc
scas
loope
and
sbb
imul
stos
inc
lahf
lea
test
cmpsb
shlb
es
cmp
pop
xor
adc
and
sahf
push
aas
xchg
adc
or
xchg
sub
das
rolb
out
shrb
clc
jmp
inc
sahf
dec
push
scas
sbb
add
push
push
addr16
cmpsl
pusha
loopne
lock
cmp
lods
addb
xchg
cltd
fidivrs
xchg
es
cld
inc
mov
or
jmp
mov
cwtl
mov
adc
add
fwait
mov
insl
inc
mov
xchg
testb
dec
lods
mov
in
hlt
pop
push
int3
sub
ret
repz
call
test
rcr
mov
dec
insl
adc
jl
mov
ss
arpl
push
dec
aad
jne
and
cmp
cmp
aad
ret
cmp
jle
dec
scas
mov
or
popa
std
clc
fisubrl
hlt
imull
lahf
rcrl
sbb
mov
or
scas
lods
xchg
scas
arpl
push
inc
sub
lods
cmp
leave
mov
or
mov
or
adc
stos
lahf
cld
imul
fcmovu
add
mov
in
insb
inc
cwtl
imul
jns
pusha
dec
fadds
aas
inc
sbb
fldcw
mov
jae
push
adc
xchg
pop
pop
mov
pushf
cmp
jb
xlat
outsl
ja
out
add
sbb
xlat
arpl
cs
pop
sub
mov
ret
jb
cmc
jecxz
jb
loope
jnp
sub
xlat
xor
scas
push
cli
mov
aas
cmp
adc
add
jbe
push
push
pop
ds
cltd
sbb
lea
pusha
adc
dec
mov
test
mov
sub
push
xor
mov
mov
outsl
loope
loopne
shll
inc
add
scas
cld
pop
call
xchg
je
arpl
in
loope
loop
xor
popf
iret
sub
mov
or
mov
clc
xor
xor
inc
in
jmp
lock
xor
stc
cmp
fs
outsl
dec
push
sbb
dec
cmp
inc
cwtl
outsl
mov
out
fnsave
aad
sub
dec
sahf
loop
xchg
cwtl
mov
in
jmp
dec
sbbb
stos
mov
shr
call
call
jnp
xchg
mov
lock
inc
mov
jns
lahf
pop
fbstp
mov
fiaddl
subl
aas
stos
out
cld
cld
repz
mov
push
adc
mov
and
xor
cwtl
add
cs
gs
outsl
dec
mov
lds
push
dec
push
insb
and
dec
je
push
lds
mov
dec
pushf
push
insl
std
jecxz
incl
inc
scas
jge
inc
je
xchg
cmp
repz
adc
mov
pop
vmovntpd
daa
dec
fwait
imul
imul
sub
jl
scas
jne
ror
jp
lcall
push
dec
jecxz
cmp
pop
jnp,pn
bound
xlat
inc
sub
sub
cmp
cmpsb
push
xchg
lcall
xlat
cmp
daa
pop
cwtl
pop
xchg
cmp
in
pop
or
add
outsl
mov
lock
xor
lds
movsl
cwtl
mov
aam
add
cli
add
clc
sub
ja
insl
xchg
arpl
fdivl
scas
mov
cwtl
and
mov
or
adc
in
pop
push
loopne
xchg
and
in
test
inc
push
fs
xor
jbe
jp
gs
xor
push
stc
cltd
push
sub
dec
pop
mov
jmp
mov
sbb
inc
pop
or
movsb
pop
xchg
cli
jne
mov
ret
aam
lret
mov
imul
mov
fiaddl
ljmp
jge
pop
add
lahf
lock
fsubrp
mov
push
outsb
and
cld
inc
fisubrl
mov
push
je
mov
pop
outsl
mov
dec
into
lcall
jae
outsb
dec
shll
jne
xchg
test
or
rolb
leave
int
int3
stos
or
or
fstpt
xchg
inc
push
dec
cli
cmp
xchg
add
out
insl
clc
pop
add
mull
aad
fnstcw
xchg
divl
fsubs
aad
inc
xchg
xor
stos
sub
mov
fmuls
lcall
or
in
or
insl
mov
dec
cmp
or
pop
das
outsb
movnti
pop
sbb
xor
push
push
push
push
scas
loop
jmp
mov
ss
mov
int3
mov
xchg
dec
leave
mov
push
loopne
ja
loop
xor
add
inc
out
adc
and
stos
push
in
int3
mov
idivb
inc
add
push
cmp
scas
divl
jbe
test
loopne
push
out
pop
jne
das
push
pop
imulb
outsb
in
jp
daa
sub
mov
jo
xchg
sbb
loope
cmp
xchg
shrl
sahf
dec
push
scas
push
sbb
outsl
mov
xor
das
loope
push
fs
cld
sbb
pop
push
fwait
add
adc
fisttpl
test
lods
adc
psubb
mov
mov
negl
xor
loopne
add
je
sbb
mov
testb
into
sahf
dec
cmpsl
mov
int
outsl
push
insb
inc
je
jae
xchg
lahf
or
jle
adc
leave
ja
int3
pushf
lret
outsl
push
adc
sbb
ret
jnp
mov
or
stos
mov
xchg
sub
xchg
xchg
inc
test
sbb
xchg
xchg
clc
in
test
jne
mov
xchg
pop
xchg
call
pushf
adc
cmp
xchg
in
shlb
test
clc
xor
or
fucomip
ret
sbb
int3
sti
loop
or
xlat
xor
push
int3
push
mov
pop
pop
dec
adc
cmpsb
mov
xchg
pusha
hlt
jle
mov
xchg
fadds
lods
dec
lock
adc
mov
lock
mov
cmp
fcmovnu
sbb
xchg
or
aad
ja
popa
int3
scas
in
aam
xchg
enter
int3
inc
mov
stos
mov
and
mov
adc
leave
mov
sub
mov
xchg
nop
fdivrs
in
insl
xchg
fiadds
xor
fwait
popw
xchg
push
inc
inc
je
movsb
js
adc
push
mov
mov
and
cmp
scas
xor
mov
enter
dec
js
leave
scas
push
mov
es
xor
xor
jle
pop
xor
das
ja
add
subl
addb
ljmp
mov
adc
dec
xchg
push
mov
outsb
jne
mov
push
pop
xor
pusha
jg
cmpsb
mov
sub
cltd
outsw
mov
test
addr16
xor
or
movsl
fstpl
mov
cmp
movsl
xchg
les
jo
adc
jecxz
in
ffree
sbb
push
inc
jmp
pop
andl
stos
pop
sub
loop
lds
or
mov
ret
aad
push
lcall
int3
fwait
add
filds
sub
sbb
aaa
mov
push
mov
mov
or
andb
dec
cmpsb
mov
test
sbb
movsl
jb
mulb
mov
xor
insb
ret
inc
jns
xor
pop
je
sbb
stc
call
mov
pusha
add
xchg
lret
out
xor
insb
aam
mov
sbb
jnp
push
sbb
loop
or
pop
push
mov
mov
dec
cltd
fs
inc
scas
adc
rclb
addr16
lock
lahf
inc
cld
jno
jae
push
jmp
cwtl
icebp
repnz
jmp
dec
xchg
mov
sub
in
stc
jno
and
fnstenv
push
rol
mov
mov
xor
xchg
cmc
call
xchg
imul
mov
lods
in
push
mov
ss
cmpsl
xchg
inc
or
arpl
adc
fs
pop
lahf
je
mov
pop
xchg
xchg
hlt
sub
shlb
shr
fidivrl
or
shrl
cmp
data16
jmp
cltd
loop
and
jb
mulb
mov
dec
adc
jle
stos
inc
adc
cmp
cmp
test
movsb
insl
imul
xor
xor
inc
sub
test
pushf
xlat
cwtl
sbb
mov
dec
lock
push
push
jg
inc
xor
fstl
repz
inc
outsb
movsb
sbb
sub
orl
push
and
mov
test
das
dec
int
inc
enter
mov
scas
pop
inc
cmp
cltd
out
mov
idiv
cmp
dec
out
or
negb
testb
out
dec
add
leave
sub
sub
fdivr
push
xor
adc
mov
pop
xor
dec
mov
mov
in
lods
add
rcrb
lods
mov
rcrl
lods
pop
fs
pop
jae
adc
loop
rcr
push
arpl
mov
movsl
lock
lods
pop
sbb
push
shl
popa
sub
sub
outsl
insb
fnstcw
xor
fs
push
pop
sub
test
adc
ds
and
andb
pop
mov
adc
mov
or
imul
sbb
adc
inc
mov
push
adc
mov
das
inc
xorl
stos
bound
pop
push
xor
mov
dec
repnz
loop
loopne
dec
lahf
xchg
sbb
flds
in
add
cmp
roll
inc
cmp
jg
pop
jnp
jg
pop
mov
sbb
cmp
cmp
sbb
mov
les
cmp
push
lock
data16
pusha
jns
lock
or
popa
and
xor
dec
dec
sub
scas
imul
bound
sub
cmpsb
mov
push
push
adc
mov
je
rclb
push
cmp
decl
add
or
sbb
pop
adc
add
dec
push
adc
nop
pop
dec
cmp
mov
std
inc
adc
mov
sbb
dec
setne
mov
inc
fisubs
xchg
scas
lret
shl
lds
cs
push
data16
in
mov
and
push
jmp
jmp
scas
nop
xor
enter
das
jb
iret
cwtl
les
iret
jbe
or
mov
pop
cmpsl
mov
iret
stc
lahf
mov
push
or
jo
cmp
pusha
and
ficompl
inc
cmp
ss
xor
lahf
sub
xor
xchg
dec
adc
mov
call
das
xchg
imul
int3
mov
std
rcrl
mov
inc
mov
int
insl
or
sbb
notl
aam
aaa
in
insl
and
adc
stc
push
mov
test
repz
fs
imul
aad
jmp
fisttpll
add
cmp
mov
jecxz
push
dec
bound
mov
in
xchg
inc
push
fdivrs
cmp
je
cmpsb
push
loop
int
xor
aam
enter
mov
and
or
addr16
jl
pop
or
ds
loope
mov
lock
jle
test
sub
popa
arpl
sahf
movsb
cli
add
testl
es
push
cwtl
mov
mov
cltd
inc
loopne
insl
jp
insl
jl
jmp
mov
add
lahf
mov
jb
push
xchg
dec
xorl
cmpsl
call
pop
xor
sub
rcll
mov
push
sbb
push
and
call
add
jo
push
jo
insb
cmp
push
scas
push
leave
in
and
cmp
push
xor
mov
mov
mov
in
loopne
push
inc
cmpsb
cmpsl
dec
jge
scas
cs
and
sub
negl
icebp
test
ret
jne
shlb
lods
cmpsl
mov
mov
fcomps
and
rol
xchg
out
or
pop
sub
popf
or
dec
in
mov
mov
popl
rcrb
repnz
stc
movl
repnz
adc
rorb
adc
sbb
stos
inc
mov
pop
pop
mov
in
mov
sub
aas
in
dec
add
cmpsl
xor
repnz
push
inc
push
test
ret
out
sarl
pop
mov
pop
dec
ja
xchg
xor
gs
sbb
dec
xchg
or
sbb
xchg
fldcw
outsl
xchg
ja
xor
lret
inc
rorl
mov
dec
mov
push
shlb
jno
xchg
call
ja
sti
arpl
ret
mov
iret
add
xchg
sbb
fistl
decl
push
lahf
sbb
mov
jns
sbb
stos
mov
inc
fsts
fs
mov
mov
mov
jecxz
xor
test
outsl
cmp
mov
shrb
jl
sbb
mov
adcb
lea
scas
and
rorb
scas
mov
push
push
or
jge
int
jns
lea
cmpsb
cvttps2pi
adc
fisttps
pop
xor
jb
add
or
inc
ja
jb
dec
push
dec
jg
inc
ficoml
add
inc
pop
add
mov
sub
pop
sub
outsb
inc
push
mov
fsubrs
int
leave
in
push
aad
or
mov
dec
daa
inc
mov
leave
pop
arpl
test
aas
shl
aaa
out
shr
mov
jbe
mov
cmp
mov
push
mov
dec
lds
lahf
pop
jmp
negl
mov
mov
pop
stc
jp
cmpsl
aam
fcmove
push
add
push
dec
decb
outsb
jg
xor
jno
lods
fcompl
hlt
imul
in
mov
xor
ds
or
and
hlt
xor
insb
push
imul
aas
xor
xor
mov
lea
push
into
and
jb
adc
sti
cmp
push
push
and
imul
imul
xchg
fbstp
mov
fnstsw
in
add
icebp
inc
and
out
mov
mov
icebp
and
hlt
dec
add
ja
adc
xor
mov
lret
mov
je
xchg
mov
and
pop
adc
std
push
cld
in
fsubrl
jmp
push
or
pop
idivb
jmp
jnp
sbb
inc
lock
xor
subb
push
mov
nop
or
jmp
pop
sub
mov
cld
mov
dec
rcrb
xchg
inc
shlb
and
aam
mov
insb
testl
mov
aaa
call
shlb
cmc
and
insl
imul
xor
call
mov
call
jl
cmpsb
loopne
sub
add
ret
test
mov
push
xchg
or
jno
leave
imul
xlat
xchg
lods
pop
add
sti
loope
jne
mov
dec
lahf
rcll
dec
fdivrs
push
cltd
lahf
cwtl
mov
movsl
sti
dec
setp
pop
sub
test
cmp
or
enter
dec
jns
test
imul
mov
inc
scas
rclb
icebp
dec
mov
cmpl
cmp
mov
popf
lods
cli
cmc
out
aas
and
dec
fdivrs
xchg
outsb
mov
jle
sub
pusha
aas
int
push
fwait
dec
fimuls
or
fcoms
aad
fisttpl
rclb
dec
and
mov
es
jne
cld
arpl
ljmp
jmp
test
mov
or
scas
sub
fistpl
xor
loope
pusha
mov
sbb
jnp
jle
cmp
xchg
sti
or
pop
adc
push
bound
cwtl
rcrb
lcall
mov
push
cmp
pop
aad
int
scas
aam
cmp
mov
add
push
jns
ror
or
addr16
sub
mov
push
nop
lahf
cmp
sub
insb
push
sub
mov
movsl
or
mov
and
sbb
cmp
xchg
lods
jo
and
cmp
test
rorb
sti
xor
push
into
jmp
push
mov
mov
cmp
and
leave
bound
sub
add
pop
repnz
ret
int3
sbb
fs
aas
xlat
out
scas
xlat
sbb
out
cltd
jl
ds
movsl
hlt
or
xor
mov
or
icebp
dec
shrl
adc
data16
sbb
jno
add
adc
cmpsb
hlt
inc
call
cmp
pusha
push
and
das
xor
mov
clc
mov
outsl
push
cmp
add
jmp
jmp
mov
lods
mov
mov
mov
pop
pop
xchg
xor
nop
fsubs
js
pop
in
add
cmp
push
ficoml
pusha
in
andl
and
stos
add
jmp
lods
or
pop
aas
sbb
pop
adc
sub
mov
es
xor
cmp
add
lea
fdivp
sub
mov
dec
ret
pop
xchg
jl
push
mov
push
mov
and
pop
xor
jge
out
inc
mov
call
inc
inc
sbb
cmc
lods
fsubrl
cmp
cmp
jns
cmp
push
and
mov
lcall
fld
or
cmp
ds
aam
scas
sarl
cmc
ds
pop
ja
push
inc
andl
mov
scas
std
int
icebp
adc
xor
aad
ljmp
in
push
pop
jg
jge
fdiv
xor
popa
ja,pn
mov
fidivrs
out
xor
sbb
nop
in
aam
shl
jns
subb
movsb
xor
cli
mov
sbb
adc
adcl
sbb
out
aas
ds
movsl
cmp
mov
mov
in
dec
sbb
rcrl
or
inc
xchg
mov
stos
outsl
insb
mov
loopne
sub
scas
imul
daa
add
lds
mov
outsl
dec
daa
pusha
dec
ffreep
adcl
insb
mov
or
xlat
cmp
cli
push
mov
dec
aaa
je
jno
cmp
fisubs
inc
dec
fnstcw
out
rclb
push
jge
pop
sub
pop
push
push
or
je
inc
and
out
jmp
mov
ret
xor
mov
fsubl
pop
aaa
xchg
jnp
imul
lahf
fwait
lretw
dec
dec
das
sub
pop
or
jge
clc
and
negb
and
cmp
push
pop
adc
aas
mov
jge
sub
adc
or
or
xchg
push
test
es
and
in
dec
roll
mov
push
mov
mov
push
xor
push
inc
or
sub
int3
pop
or
jb
shl
pop
sub
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
push
mov
mov
add
movl
mov
adcl
mov
xorl
add
sbbl
xor
movl
cmp
movl
jne
andl
mov
dec
mov
and
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adcl
movl
mov
mov
and
lea
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jb
xor
add
adc
mov
lea
dec
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
inc
mov
negl
xor
add
andl
mov
mov
mov
sub
and
mov
incl
mov
andl
mov
andl
add
movzbl
or
push
add
mov
movzwl
sbb
mov
andl
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbbl
add
movl
cmp
je
mov
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
mov
cmp
jne
sbb
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jmp
out
add
outsb
sbbl
hlt
stos
push
pop
enter
rcrb
dec
test
psraw
repnz
sub
dec
popa
addr16
push
and
fs
ljmp
pop
cs
add
xor
xor
pusha
es
rolb
iret
nop
or
int
stos
xchg
jb
and
and
fimull
int
mov
and
mov
nop
mov
loopne
addr16
aas
popa
adc
sbb
xchg
mov
inc
mov
shlb
dec
ja
iret
mov
or
push
sbb
lds
sbbb
adc
xchg
fucomp
ret
mov
jo
mov
jg
mov
jo
fcoms
push
nop
xor
inc
hlt
iret
cmc
mov
xchg
idivl
xor
punpcklbw
test
arpl
fcompl
cmp
mov
sbb
aad
push
cmpsb
fwait
pop
inc
mov
shrb
int3
push
mov
pop
lea
mov
out
outsb
sahf
fs
dec
popf
adc
ds
jno
jnp
pop
fdivs
je
inc
mov
popf
sbb
cmp
inc
mov
adc
add
or
or
jns
pop
sbb
add
sbb
lret
mov
mov
dec
rcrl
xorb
sub
sbb
sbb
xchg
andb
pop
push
sbb
pop
sbb
fisttpl
repz
sbb
aad
jbe
aaa
scas
leave
jnp
out
cmp
xor
aam
loopne
mov
mov
or
dec
rclb
lds
sbb
int
dec
push
xchg
mov
test
leave
xor
cmc
jle
stc
xor
sti
mov
push
mov
ffreep
sbb
test
loopne
jecxz
rorb
mov
popf
or
cld
jecxz
jmp
cmp
stos
dec
sbb
ljmp
repnz
sbb
and
adc
mov
aas
push
mov
push
inc
popa
in
jge
pop
jo
inc
aam
lds
fsubrs
jle
jmp
div
cwtl
xchg
mov
mov
das
add
gs
pop
xlat
jae
stc
dec
popa
std
jge
and
adc
fcmove
and
loope
sbbl
cmc
push
out
mov
shr
aam
pop
loop
mov
adc
stc
pop
lds
in
fidivrs
xlat
lret
iret
insb
jecxz
test
daa
mov
sub
xchg
push
xor
stc
push
push
repz
loop
xchg
in
cltd
sbb
sub
idivb
cmp
cmpsl
bound
mov
fisubrl
ds
scas
imul
xor
mov
fs
adc
and
insb
mov
cmp
lds
arpl
insb
dec
xchg
pop
add
add
or
cwtl
pop
cli
mov
pushf
push
or
cwtl
inc
sub
and
cld
jno
mov
sbb
inc
lcall
and
mov
rorb
xchg
jnp
and
cmpsb
enter
cmp
mov
or
push
push
adc
jnp
fadds
movsl
popa
mov
pop
orb
inc
mov
xor
dec
xor
inc
xchg
cmpsb
les
xchg
scas
lea
pop
punpckhwd
shll
addr16
test
out
mov
mov
nop
leave
int
fidivrl
push
hlt
arpl
aam
scas
sbb
push
mov
and
int3
pop
pop
jns
push
repz
stos
xchg
clc
cmp
lcall
lret
pop
adc
push
outsb
aas
cmp
arpl
fcom
fstps
jb
add
push
imul
idivl
xchg
lea
xor
sarl
jb
pop
mov
or
push
arpl
xchg
cli
lds
rorb
js
mov
test
jp
cs
inc
mov
in
jmp
daa
jae
adc
push
dec
mov
xchg
and
js
jge
jnp
xchg
cmp
mov
jmp
mov
lds
xchg
pop
das
decl
orl
in
cmp
in
test
lds
sbb
jb
and
mov
jmp
jns
es
mov
mov
ficomps
cmp
imul
cmp
je
mov
mov
inc
loop
into
lds
adc
cmp
ret
in
dec
mov
fstpt
icebp
pushf
jns
decb
in
test
in
jmp
lea
cmp
xor
pushf
mov
fdivl
mov
mov
mov
sub
lcall
outsb
mov
xor
ja
jne
mov
jno,pn
hlt
loope
mov
je
outsb
xchg
fisubrs
mov
jp
jg
int
ret
mov
sbb
and
dec
and
iret
add
pop
pop
scas
sub
push
add
imull
mov
int3
xchg
les
mov
pusha
jb
and
cmp
js
sbb
inc
sub
and
sbb
push
push
in
outsb
mov
in
movsb
cwtl
mov
cmc
cmpsb
test
iret
push
aas
rol
pushf
push
rorl
sbb
out
imul
fistpll
inc
test
sbb
fdivp
mov
jnp
sbb
pop
dec
xchg
or
ret
cmpsl
sbb
stos
in
jo
or
f2xm1
mov
or
dec
push
inc
rorl
cmp
xor
ret
imul
mov
mov
pop
inc
rep
mov
xchg
arpl
push
std
and
jne
and
push
xlat
aas
or
stos
movsl
mov
enter
push
or
xchg
push
loopne
jae
push
mov
popa
xchg
cmc
inc
mov
out
ds
add
std
sub
fwait
rcl
push
mov
mov
aam
sub
mov
ret
cli
adc
add
mov
clc
xor
std
cmpsl
mov
push
loopne
std
sbb
dec
sbb
cltd
cli
mov
sbb
mov
ret
inc
sti
pop
jge
inc
adcl
inc
dec
lock
fidivs
enter
mov
mov
popf
pop
das
dec
sarb
jecxz
loop
test
sub
lds
xchg
movsl
pop
xchg
les
push
test
mov
ret
roll
fwait
cmp
xchg
test
js
and
mov
mov
jns
mov
cmpsl
xchg
dec
xor
repz
imul
lcall
outsl
xor
dec
andb
mov
push
mov
enter
das
cmpsb
sub
push
xchg
cmp
add
insl
mov
inc
jg
addr16
sbb
or
nop
loope
mov
adc
fwait
and
insb
inc
cli
pop
cmovge
pop
mov
jmp
in
dec
sahf
das
bnd
shlb
mov
inc
insb
rorl
lahf
cmp
jmp
fisttps
mov
jne
xor
pop
lods
int3
sub
out
inc
jg
xchg
jbe
inc
jbe
push
mov
lret
add
sahf
es
in
cmovbe
out
movsb
xchg
test
xchg
push
mov
or
mov
lahf
in
inc
sub
jb
xor
mov
xor
mov
fimuls
les
jmp
push
ud0
pop
aad
mov
sub
fs
add
pop
lret
sub
sub
lahf
mov
test
inc
mov
lods
scas
xor
lcall
pop
ljmp
popf
sahf
add
pop
pop
ret
bound
xchg
in
scas
loopne
inc
mov
mov
movsb
hlt
xor
lret
in
push
bound
jns
fmuls
hlt
pop
cmp
add
cmp
or
dec
rolb
jp
rclb
getsec
test
dec
lret
lret
mov
add
sbb
bound
mov
dec
test
paddd
lods
fstl
xlat
je
push
icebp
test
mov
cltd
std
loop
mov
cmova
leave
inc
adc
jo
in
movsl
inc
gs
sub
orl
xlat
outsb
cmp
push
repz
xlat
mov
cli
mov
cmp
sbb
add
cld
jo
sub
sti
dec
sahf
addr16
cmp
cmpsl
jbe
inc
mov
mul
dec
scas
sub
icebp
bound
inc
call
dec
out
movsl
cmp
or
addb
fcoms
and
cmp
sti
and
andb
sbb
push
movsb
cs
jb
push
int
jge
mov
cmp
jns
and
aam
fwait
add
lahf
pop
ja
mov
insb
cmc
ljmp
xlat
sub
aaa
outsl
loop
add
lods
add
movsl
pop
mov
mov
outsl
lea
sar
jne
subl
mov
push
lock
int
imul
pop
adc
test
pop
mov
ret
rcl
add
and
test
fs
imul
sub
sub
divb
rcll
or
xchg
dec
daa
rcrl
ret
repnz
repnz
imul
aas
shll
jno
cli
or
pop
sbb
loop
test
repz
nop
add
subb
dec
jle
inc
xchg
jno
les
xchg
les
inc
push
push
outsl
sahf
leave
mov
cmpsb
dec
mov
and
pop
sub
inc
test
pop
pop
pop
and
ljmp
lcall
add
mov
in
mov
dec
in
daa
or
xlat
cld
aam
ja
rcrl
xor
adc
or
scas
cmpb
aaa
pushf
mov
js
sbb
inc
jp
sbb
dec
mov
dec
clc
dec
lods
lret
add
push
cmc
adc
and
mov
js
mov
sahf
inc
add
dec
addr16
or
sub
cltd
clc
dec
pop
bound
aad
out
mov
subb
inc
and
pop
orb
or
in
and
stos
pop
fildll
icebp
icebp
imul
dec
ljmp
psubw
mov
test
add
pop
outsl
sbb
cmp
adcb
mov
lret
xchg
rcll
jl
adc
jle
dec
es
inc
xchg
in
or
rorb
mov
pop
cld
inc
out
mov
sbb
ficoml
outsb
mov
pushf
sbb
cli
sub
rorb
shlb
adc
outsb
xchg
jbe
inc
sarb
jmp
sub
pop
add
xchg
aas
cmp
and
push
in
test
inc
leave
and
subl
fldl
xchg
pop
les
gs
add
cmp
outsb
mov
test
lret
pop
jne
xor
outsb
sbb
shrb
cmc
push
mov
ret
mov
fcmovnu
mov
fistl
stos
out
out
xchg
cmp
jle
mov
leave
shll
out
jl
pop
in
iret
sti
es
imul
dec
movsl
push
aad
xchg
mov
fistl
movsb
jo
sub
mov
pop
cld
pop
insl
in
cmp
mov
ret
xchg
mov
push
cmpsl
cld
jo
mov
aam
mov
sbb
jle,pn
sahf
push
imul
fimuls
test
lahf
push
cmp
aad
cmp
mov
jp
pop
mov
addr16
fidivrl
cmpsb
into
xor
in
dec
test
testw
pop
push
adc
xor
inc
xor
sbb
outsb
sbb
sub
mov
jae
dec
es
cmp
push
cld
jmp
jno
mov
mov
push
outsb
fmul
cmpsb
add
insl
in
dec
sahf
mov
mov
addr16
adc
sbb
sarl
ja
xor
xchg
pusha
push
inc
sub
lretw
test
mov
pop
fcmovb
or
xchg
test
lock
repz
shlb
bound
xor
test
xchg
rolb
test
jge
filds
cs
repnz
gs
jecxz
push
push
add
ss
cmp
shl
and
mov
sbb
addl
rcll
popa
lcall
mov
dec
scas
cmp
into
shll
test
fldcw
lock
xchg
push
subl
mov
loope
push
ret
cld
sbb
sub
mov
push
add
and
xor
xor
mov
cmp
dec
xchg
jge
jnp
or
mov
lods
out
movsl
inc
sub
shlb
adc
mov
push
cmp
dec
aam
fists
sub
push
shl
xchg
push
dec
scas
xor
jmp
mov
sbb
stc
filds
rcrb
xchg
fisttpl
idivb
push
jns
pop
sbb
nop
aaa
mull
sarl
hlt
add
mov
jmp
adc
pop
inc
ljmp
pop
inc
sahf
and
pop
dec
stos
fimull
cltd
mov
int3
ss
sub
repz
xchg
mov
ljmp
sti
sub
push
pop
cmpsl
push
and
out
sub
push
pop
fucomi
and
dec
push
mov
sbb
mov
push
cmp
cmpsb
xchg
pop
cmc
and
mov
jb
and
sbb
dec
dec
mov
mov
and
mov
int3
cltd
adc
fdivr
push
jmp
cmp
test
inc
loop
lock
mov
stos
jae
or
imul
roll
xchg
fptan
test
jb
jp
mov
sub
adcl
ss
xor
fsub
jno
jae
scas
mov
and
adc
sarl
jbe
push
mov
jnp
sbb
sarb
sub
aaa
lcall
inc
xor
cltd
lds
leave
mov
dec
ljmp
std
jo
jge
sti
pop
xor
jno
xchg
shll
out
ret
repnz
inc
leave
cltd
xchg
xchg
notb
mov
ja
leave
sbb
rolb
jo
out
mov
mov
xchg
mov
fscale
xor
push
cmp
js
nop
inc
mov
femms
jle
push
and
lds
loopne
push
mov
xchg
cmp
jmp
inc
dec
pop
add
mov
pop
push
lahf
pop
inc
mov
or
sub
sub
and
inc
adc
xor
divb
dec
push
pop
lock
int3
dec
pop
pushf
subl
lods
sbb
aaa
push
add
loope
hlt
cmpl
adc
add
mov
push
and
dec
push
mov
jle
push
jae
mov
pop
mov
cli
pop
movsl
lret
das
mov
jg
adcb
mov
xchg
js
divl
dec
xor
subl
xor
inc
fdivl
mov
push
into
cmc
inc
pop
sub
pop
scas
int3
xchg
mov
test
sbb
scas
push
lret
xor
adc
xor
adc
sbb
fbstp
inc
lock
pop
cmpl
jmp
cmp
imul
cmp
or
jns
pop
cld
out
call
adc
sbb
mov
hlt
mov
scas
add
pusha
adc
dec
xorl
repz
or
xchg
mov
mov
mov
sbb
mov
insb
jne
daa
mov
rcll
dec
and
fistpll
pop
jp
cmp
pusha
mov
and
cltd
mov
sahf
push
repnz
icebp
xchg
xor
addr16
iret
sbbl
dec
mov
or
jmp
mov
cmpsb
mov
add
jl
cmp
add
in
shlb
lods
xchg
adc
inc
out
dec
pop
dec
sbb
sbb
mov
dec
or
ret
imul
mov
ss
mov
dec
xchg
sbb
mov
lods
leave
mov
jge
icebp
add
fstp
jmp
in
jo
xchg
xchg
push
add
in
mov
call
lahf
insl
test
movsl
mov
stos
sahf
stc
jp
test
pop
mov
loopne
lock
mov
lret
jbe
loope
pusha
sbb
xorl
shlb
cmp
insb
pop
in
cs
push
xor
jae
cs
aaa
mov
stc
in
fstpt
dec
gs
pusha
push
ret
dec
in
pop
add
mov
fadds
sub
cld
fcoms
cmp
mov
push
mov
push
pop
sub
sub
cmpl
dec
insl
or
test
cwtl
int3
sub
mov
mov
addr16
lcall
mov
add
hlt
adc
add
dec
mov
cwtl
push
popa
in
dec
push
jnp
outsl
popa
add
or
pop
inc
bound
xchg
push
repz
xchg
pop
cwtl
dec
sub
lods
js
cmp
addl
ret
xor
scas
dec
xchg
sub
mov
out
popf
cmp
xchg
or
pop
inc
jge
jae
repz
ret
add
dec
rcrl
mov
enter
cmp
ja
pop
jmp
in
mov
sbbl
sbb
pop
sub
lea
jbe
mov
and
outsb
cli
insb
xchg
jne
das
fnstsw
mov
dec
mov
adc
cvtdq2ps
mov
roll
imull
cmp
mov
leave
xor
into
cmc
push
pushl
repnz
mov
xchg
movsb
add
xchg
fists
jae
clc
in
lods
mov
lods
jmp
inc
mov
stos
jne
sub
imul
sbbb
jmp
mov
mov
mov
sbb
popf
adc
cmp
adcb
test
inc
rcll
movsl
push
xchg
and
js
inc
roll
push
ss
cmp
jp
dec
orl
inc
fsubl
pop
inc
cld
fdivr
andb
loope
bound
pop
jmp
mov
lds
fcmovnu
fisttpll
icebp
jp
shll
shlb
sub
dec
push
in
sbb
xchg
dec
sbb
clc
mov
sar
inc
push
shll
in
push
loope
inc
add
pop
add
push
pushf
cmp
rcrl
pop
outsb
int3
lret
sar
int
dec
lock
enter
add
xorl
or
lock
jno
sbb
ret
cmpsb
and
pop
cmpsb
lahf
mov
adc
pop
jg
sbb
cld
addr16
imul
xor
lret
cmpb
movl
out
push
mov
sbb
subl
cmp
adc
pop
mov
in
inc
nop
cmp
nop
mov
and
pop
jg
mov
xchg
jns
loope
sbb
fisubl
add
inc
ret
pop
add
leave
sub
push
aaa
rcrl
cmpsl
das
inc
jp
fisubs
loope
jmp
mov
sub
icebp
xor
mov
ror
sub
add
mov
fcmovu
jno
fcmovnu
in
xchg
loop
mov
sub
ljmp
in
stos
cmpsl
xor
stos
rolb
pop
jne
and
mov
xlat
in
add
adc
loopne
fldcw
arpl
sub
or
dec
sahf
mov
adc
daa
xor
mov
aam
or
mov
add
jbe
ljmp
cmp
push
dec
pop
pop
fs
cmp
xlat
popf
xlat
adc
bnd
mov
ret
jl
cmpsb
insl
jb
sbb
sub
xor
inc
testb
stos
sbb
inc
mov
fadd
and
pop
stos
push
xchg
push
inc
xchg
lret
sub
clc
out
stos
sub
inc
push
pop
dec
scas
inc
dec
das
test
enter
das
and
inc
xor
cltd
shrl
jle
jmp
mov
mov
jb
lock
pop
lret
mov
sub
ds
push
into
adc
icebp
mov
jg
xor
test
push
xor
sar
xchg
mov
stos
xchg
popa
out
ja
xchg
les
add
push
sub
push
in
loope
lahf
fisubs
pop
push
out
fistl
cld
xchg
incl
shrl
rorl
pop
lcall
aad
sbb
mov
iret
in
in
sbb
lcall
fsubp
icebp
sub
std
leave
push
callw
adc
das
and
lcall
pop
mov
movsl
add
daa
in
test
dec
push
pop
cmp
lret
xchg
cmp
and
fxch
popf
inc
fcoms
mov
call
push
aaa
shl
pop
pop
jbe
out
imul
call
mov
mov
push
fisttps
sbb
clc
mov
shr
addr16
pop
outsb
inc
inc
sbb
test
sbb
daa
cmp
mov
inc
push
mov
jge
and
loopne
sub
push
jns
add
and
jno
aas
xor
gs
lods
out
movsl
adc
sbb
mov
imul
push
xchg
jnp
inc
dec
push
mov
or
aam
jl
pop
jp
sti
pop
pushf
jnp
or
fistps
pop
nop
dec
sub
hlt
inc
fwait
xchg
cmp
aam
sbb
mov
push
pop
mov
aam
xor
js
xlat
xlat
sub
sub
js
dec
aaa
fcoms
mov
jo
or
and
in
dec
jb
inc
push
loope
leave
loopne
jp
cmpsb
lds
clc
in
lods
cwtl
lds
imul
je
cmp
mov
mov
flds
pusha
push
dec
mov
popf
pop
cmp
xor
jno
loopne
pop
into
lret
lea
cmp
dec
nop
hlt
clc
mov
nop
and
scas
test
dec
adc
test
scas
and
jno
mov
lods
sbb
shlb
mov
xchg
test
lods
cld
and
cwtl
fmul
loopne
pop
arpl
cmp
js
addr16
lods
push
insl
in
mov
rolb
shlb
add
fisttpl
in
fwait
test
push
push
fucomi
ja
pop
repnz
inc
dec
push
stc
in
pop
lods
fisttps
and
push
sbbl
or
adc
pop
cmp
push
loope
push
repnz
inc
pop
add
dec
mov
nop
or
icebp
sahf
mov
pushf
les
jbe
cmp
popf
aad
stos
daa
cmp
into
mov
xor
aam
fwait
xchg
sub
dec
xor
adc
lock
lds
jg
mov
sub
push
adc
jns
out
nop
xchg
mov
popf
sbb
mov
jns
pop
add
add
ja
shl
push
jmp
incb
imul
dec
cmpsl
je
fwait
dec
popa
in
and
cmpsb
es
inc
or
adc
std
adc
lcall
stos
cmpsl
icebp
pop
or
xchg
pop
leave
test
fidivl
in
or
or
push
rcrb
cmc
ja
xor
out
adc
data16
es
sbb
jne
sub
jae
sub
leave
addps
dec
or
push
mov
mov
and
icebp
push
cmpb
imul
ror
orb
js
sarl
mov
pop
cmp
lret
es
dec
movsl
and
lock
in
out
mov
stos
fcomps
adc
ret
stos
sti
inc
push
sbb
fdivr
dec
ljmp
xor
push
xchg
fwait
data16
jmp
enter
xlat
jg
test
cwtl
shr
add
stc
repz
mov
ret
mov
mov
das
inc
cltd
mov
push
loop
dec
dec
ret
lods
in
in
imul
stos
sub
mov
xor
or
outsl
inc
sbb
cmp
add
dec
xchg
out
inc
in
xor
in
adc
lcall
or
mov
push
pop
stos
test
ret
and
xchg
out
aaa
mov
lret
sbb
xlat
add
dec
and
lret
push
jno
iret
in
scas
sub
pusha
pop
mov
movsb
jb
pop
xchg
imul
adc
mov
mov
int
jp
pushf
xchg
call
cmp
fldln2
and
pop
fwait
sbb
nop
mov
pushl
repz
cmpsb
int
js
mov
xchg
shl
in
sbb
jge
loop
push
dec
je
cmp
mov
mov
and
mov
outsl
call
jmp
scas
arpl
jo,pt
test
push
sbb
pop
jmp
aam
insl
adc
add
xlat
movsb
push
popf
add
jecxz
mov
icebp
test
das
dec
daa
out
enter
imul
cli
daa
arpl
aad
cmp
mov
mov
or
lcall
cmp
push
ss
jbe
push
fcoml
shrl
sahf
sub
jno
sahf
dec
mov
pop
lds
int3
fcoms
adc
inc
jge
xor
mov
xchg
repnz
inc
mov
mov
mov
sbbl
mov
stos
outsb
ja
nop
std
lcall
fcmovb
je
mov
lods
xchg
mov
sub
inc
daa
idivl
ret
ret
push
pmuludq
push
aaa
lret
add
sbb
inc
addr16
lret
dec
notb
pop
cs
pushl
push
cmp
fldl
jo
stc
push
push
and
inc
popf
repz
add
dec
jnp
iretw
repnz
dec
sbb
icebp
test
mov
mov
sbb
mov
fwait
push
leave
call
jecxz
sbb
pop
cmpsb
cmp
testb
pusha
jl
mov
sbb
sahf
cmc
xor
imul
cmp
push
adc
scas
xor
push
and
push
cmpsb
xor
iret
lock
lret
stc
lock
push
movsb
test
cmp
sub
std
ret
xor
stos
pushf
jo
rclb
mov
out
rol
popf
push
insb
mov
xor
ja
push
jg
insb
mov
and
int
das
hlt
add
scas
mov
iret
aad
stos
jg
ja
inc
fmull
ss
xor
inc
into
outsb
mov
mov
in
lgs
rol
adc
pusha
and
cmp
push
cmp
das
push
loope
arpl
xor
hlt
nop
mov
mov
lds
cmp
xor
ficomps
ja
cmp
and
fidivl
mov
xchg
imul
pop
pop
push
or
out
shrl
jp
pop
loop
in
inc
pop
jne
cmp
stos
sub
xchg
mov
neg
mov
adc
rcl
mov
jl
scas
cmp
das
aaa
mov
sub
in
std
stos
mov
or
dec
shlb
jne
sbb
xor
sub
mov
mov
dec
mov
das
push
or
adcl
cmp
push
push
fwait
scas
ja
dec
inc
jae
mov
and
in
adc
aad
cmpsb
lcall
enter
mov
jecxz
push
mov
repz
scas
mov
mov
ret
sti
push
sub
fnstenv
aas
scas
mov
aas
jb
loop
shlb
fstps
fisubrs
les
xchg
jp
add
hlt
jno
cmc
mov
adc
insb
pop
mov
jl
sub
adc
push
scas
out
int
lods
inc
mov
iret
xchg
sub
out
mov
or
jne
sub
out
cltd
push
cmpsb
pop
xchg
and
xchg
sbb
and
pop
pop
and
push
loopne
jns
mov
cmpsl
or
in
xor
lret
lahf
cltd
cwtl
xchg
xchg
and
icebp
outsb
les
xor
shll
lcall
lods
add
stc
adc
hlt
push
pop
add
in
out
mov
cmp
cmp
into
fs
clc
jns
popa
add
push
cmpsl
dec
movsl
mov
aaa
rolb
out
popa
pop
cli
push
jbe
nop
mov
inc
and
mov
mov
fucomp
insb
repz
sub
test
xor
mov
mov
and
lock
icebp
xchg
and
push
xchg
pushf
sbbl
out
sub
pop
push
mov
in
addr16
dec
xchg
or
fwait
adc
lds
inc
call
pop
rorl
or
subb
dec
cmp
aad
sarl
mov
vmovss
fiaddl
roll
xor
das
pop
xchg
pushf
push
pop
fldcw
testb
sbb
scas
int
dec
popa
in
inc
cmp
jmp
test
lods
test
ljmp
inc
push
lahf
stos
pop
gs
or
imul
jp
and
fsubrl
dec
xor
rorb
adc
mov
pop
add
loop
push
shl
pop
jns
jbe
sub
out
add
adc
ror
cli
inc
mov
inc
fisttpll
aas
and
gs
fcomps
les
in
jo
addl
adcl
push
loopne
pop
fcoml
addb
and
jns
femms
inc
icebp
jne
push
fwait
out
out
xor
sub
jae
in
sbb
mov
test
out
pop
in
pop
cmp
popf
and
daa
jo
mov
mov
test
lods
dec
std
add
lret
call
mov
xor
pusha
leave
jmp
loop
in
in
jecxz
push
mov
sbb
mov
lea
pop
xchg
repnz
imul
loop
or
pop
mov
fxch
pmovmskb
stc
xchg
dec
add
dec
pop
sub
scas
mov
loope
pop
xlat
jmp
mov
popf
cmp
inc
push
sub
lret
lods
dec
repz
rol
pop
loope
and
pop
mov
xchg
inc
mov
xchg
mov
insb
imul
fimuls
lret
jne
cltd
or
cmpsl
cwtl
or
cmpsb
mov
adc
addr16
stos
adc
xchg
ret
addr16
rcl
inc
fmulp
mov
mov
ret
push
pop
je
dec
clc
xlat
fdivrl
sub
jmp
and
scas
jmp
or
xchg
jmp
and
and
jl
and
add
and
mov
and
in
mov
int
inc
es
xchg
test
adc
and
xchg
inc
xorb
jbe
ss
sbb
lahf
mov
adc
push
int
test
jmp
faddl
testl
adc
ficompl
addb
pop
bound
dec
rcrb
sub
mov
addr16
fwait
or
xor
cmp
out
popa
pmuludq
fiadds
js,pt
mov
pop
dec
jne
cld
inc
inc
rorb
decl
xchg
mov
lahf
repnz
xchg
push
into
jle
ret
jge
ret
mov
or
cmc
pop
xor
daa
popf
cmp
push
inc
into
jmp
les
call
push
push
das
cmpsb
pop
sbb
mov
jb
sbbb
xor
sub
inc
ds
xchg
outsl
data16
xchg
cltd
mov
cmp
pop
pop
add
push
adc
test
mov
clc
clc
pop
lods
insb
add
sub
int3
push
imull
and
or
cmc
ljmp
scas
dec
setg
xchg
mov
cmp
sub
push
shrl
sub
xchg
pop
icebp
pop
sti
sbb
jbe
adc
xor
cmpsl
stos
ss
adc
outsl
and
dec
jle
and
test
add
add
mov
add
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
jmp
fnstenv
xchg
gs
test
sbb
and
rcrb
stos
pop
or
mov
mov
mov
and
sub
fcmovne
stc
fnstsw
mov
add
ror
leave
sub
es
pusha
das
or
adc
mov
ds
std
mov
add
jns
out
addl
cmc
xchg
push
mov
push
and
addb
mov
sbb
mov
incb
dec
insb
push
lea
orb
ljmp
cmp
mov
fstl
jmp
outsb
idivb
adc
lds
jl
ds
xchg
push
xchg
bound
pop
call
jne
xchg
push
int
mov
pop
neg
int
pop
imul
addb
inc
ss
fcoms
aaa
outsb
adc
mov
pop
xchg
jl
xchg
add
ret
test
inc
daa
mov
cmpsb
and
popf
push
and
sysret
mov
push
cmpsl
mov
xor
loop
callw
push
pop
cmp
add
in
add
das
push
xchg
sub
into
and
xor
cmp
fidivrl
lret
sub
dec
clc
adc
xor
fwait
and
sub
movsl
mov
pop
xchg
pop
mov
clc
aaa
hlt
or
fwait
jg
cmc
mov
jge
sub
add
xchg
cmp
xor
mov
push
daa
vcvtpd2psx
aas
ret
out
popf
aad
mov
mov
orb
mov
mov
push
xor
stos
shlb
sti
mov
and
or
in
mov
scas
mov
repnz
cmpsl
xchg
insb
sbb
enter
adc
xor
pop
and
fsubp
stc
mov
sub
fildll
sub
cmp
icebp
mov
into
stos
xor
cmpsb
jbe
pusha
sub
and
data16
insb
pop
mov
dec
nop
cmp
sbb
loopne
mov
mov
loop
lcall
inc
pop
mov
lds
xchg
lea
ja
dec
xor
jp
xor
cltd
adc
insl
adc
sbb
dec
leave
out
lds
add
call
mov
aaa
mov
movsl
jg
outsl
xchg
inc
mov
jno
lret
out
and
inc
stos
jno
xor
std
dec
cmp
dec
xchg
lods
and
and
fidivrs
mov
je
insb
cld
pop
stos
fs
mov
into
movsl
enter
mov
or
nop
lea
sub
negb
filds
shll
inc
sub
jne
dec
xchg
jg
xchg
inc
xchg
xchg
cmc
fcmovnbe
jecxz
mov
mov
addr16
bound
ds
sub
lcall
out
xor
ret
enter
and
push
jl
in
jmp
pop
lahf
inc
inc
loope
mov
adc
mov
push
sbb
popf
sbb
jmp
mov
aam
jmp
mov
mov
add
sub
push
xchg
lret
xchg
jecxz
cmp
push
cmp
pop
rorb
jecxz
sub
mov
popf
pop
sbb
test
adc
push
stc
mov
jno
icebp
hlt
ret
mov
sub
push
cmp
push
lcall
inc
fwait
mov
xchg
push
lret
je
inc
pop
ds
movsl
mov
or
insl
shll
jno
mov
ret
cwtl
int
pop
loopne
mov
sub
or
es
mov
jecxz
jl
mov
cmp
aas
jno
jb
dec
mov
imul
inc
ljmp
mov
pop
lcall
gs
lret
add
xor
push
stos
js
push
mov
pop
add
rorl
aas
daa
aam
lds
push
shl
ja
loop
testb
mov
rclb
decb
add
add
int3
jg
jmp
int3
insl
jmp
pusha
cmp
add
dec
nop
ss
dec
cmp
dec
jmp
adcl
inc
dec
xchg
push
inc
test
scas
out
cli
pop
shlb
dec
cvtps2pd
mov
sub
sub
bound
or
dec
pop
dec
aas
or
mov
fs
xor
dec
jg
mov
lods
imul
or
int
push
outsl
sbb
mov
xchg
sbb
dec
es
jp
mov
push
out
sbb
adc
xchg
pop
aad
push
lret
push
cmpsl
fwait
pop
shrl
fcmovbe
aaa
pop
insl
cmp
test
inc
jp
nop
mov
mov
test
mov
or
pop
aam
xor
push
dec
add
mov
dec
cmpsb
loopne
insl
test
rcrl
and
mov
sbb
fisubs
cmpsb
mov
aaa
fstp
ljmp
outsb
fisttps
enter
add
addl
adc
lods
push
inc
stos
out
add
fsubrl
fidivrl
fistl
sub
xor
lds
sbb
sub
add
fs
js
fldenv
pop
sti
iret
sub
mov
movsb
mov
jg
cli
jns
xchg
mov
roll
icebp
cmp
xchg
roll
jge
shrb
sub
into
pop
cli
mov
mov
outsb
dec
mov
lods
dec
lcall
stos
inc
mov
test
sbb
pop
ret
dec
rclb
es
push
mov
cmp
outsb
mov
jne
test
inc
adc
xchg
mov
fsubrl
gs
mov
and
fstl
scas
ret
fisubl
jge
scas
pop
sub
or
addr16
inc
outsl
push
cltd
cmpsl
mov
outsl
das
sbb
mov
rolb
jle
sbb
icebp
imul
mov
mov
inc
cmp
pop
xorl
pop
addr16
or
xlat
dec
sarl
test
sub
xor
les
repz
mov
xchg
lods
mov
cmp
repnz
cltd
sbb
rorb
cltd
dec
inc
mov
cmp
lods
push
in
repnz
xchg
fucom
pop
scas
pop
sbb
popl
scas
jae
xchg
mov
sub
popf
inc
jmp
out
in
dec
sub
inc
xor
or
ss
les
xchg
mov
mov
sti
jno
or
repnz
scas
xchg
lods
pop
push
js
arpl
mov
jo
das
jo
jge
xor
jnp
xchg
cmp
insl
xchg
push
mov
nop
dec
loope
inc
cmp
insl
test
les
pusha
xor
cmpsb
sahf
inc
and
fimuls
call
mov
xchg
inc
dec
pop
mov
cwtl
and
pop
push
xor
iret
icebp
cmp
add
mov
addr16
xor
fs
or
xlat
mov
xchg
jmp
stos
bound
jns
push
mov
adc
loope
pusha
mov
cld
loop
out
adc
jecxz
sbb
fisttps
mov
int3
cmpsb
mov
outsl
pop
les
xchg
outsb
cld
rcrb
call
xchg
adcl
or
ds
sbb
in
jne,pn
push
inc
and
xor
lahf
jecxz
xchg
adc
sub
mov
cmp
or
leave
jb
xlat
and
lods
mov
fstpt
sub
aam
adc
pop
jle
outsb
repz
lods
int3
fnstenv
xor
ficompl
jns
aad
in
adc
dec
sbb
ficompl
cmp
rcrb
in
push
mov
add
pop
scas
cli
pushw
mov
inc
sbb
add
jo
push
mov
mov
sub
mov
mov
test
into
pop
mov
aaa
cmpsl
ret
fistpll
test
add
push
push
cs
push
cli
pop
loopne
pop
push
imul
test
lcall
loope
xor
ss
mov
in
sbb
sbbb
push
or
mov
push
ja
xchg
nop/reserved
mulb
je
lock
repz
scas
xchg
dec
jnp
pushf
data16
stc
jb
sub
ja
add
jnp
xor
add
jno
mov
lods
push
add
xor
and
inc
cmp
loop
pop
fs
inc
fsub
repz
xchg
mov
lods
jbe
repz
xor
inc
int
xchg
ret
fadd
adc
shll
ret
mov
fildl
xor
out
or
jno
adc
adc
mov
lds
in
andl
pop
in
dec
push
cmpsl
push
add
xor
jo
imul
cltd
mov
mov
jns
adc
cs
lahf
xchg
sbb
icebp
mov
xor
sbb
sbb
rdmsr
loopne
jns
jl
arpl
out
mov
sbb
inc
andl
or
aad
mov
lret
sbb
call
out
mov
adc
outsb
push
mov
lods
loop
cmp
adc
sub
cwtl
sbb
sar
or
push
shl
imul
sbbl
test
scas
pushf
jmp
push
jl
in
out
dec
xor
into
inc
gs
sbb
inc
mov
out
popa
nop
push
int
inc
mov
cmp
sub
ret
popf
es
cmc
rorb
inc
jmp
jp
stc
in
pop
xor
xor
inc
lea
push
sarl
adc
insl
cmc
sub
das
icebp
xor
imul
leave
or
test
cmp
addr16
xchg
sti
and
neg
or
movsl
arpl
dec
xchg
add
in
or
jo
insl
cltd
inc
inc
pop
cld
sub
sbb
lea
aam
out
aam
cltd
xor
cld
jl
cwtl
repnz
cmp
imul
adcl
les
lds
inc
sahf
negb
adc
mov
mov
push
cmc
xor
insb
jmp
add
pop
push
lahf
jle
lods
in
mov
sub
mov
mov
xor
push
sarl
mov
out
mov
pop
push
fisttpl
notb
into
xor
pop
jbe
sbb
in
jae
pop
mov
push
nop
push
fs
sub
xorl
mov
stos
sbb
and
dec
adc
and
jl
pop
jl
enter
bound
rorl
sub
mov
jg
in
bound
ja
pop
xchg
add
dec
insl
lock
rcl
ja
dec
jmp
les
out
out
in
in
lcall
popf
dec
add
aaa
push
mov
aaa
je
lea
dec
scas
add
jle
mov
dec
mov
push
outsb
movsb
sub
push
inc
fstpl
push
mov
push
mov
mov
jae
xlat
pop
stos
ficompl
pushl
and
dec
or
lock
filds
jle
jne
and
mov
inc
ret
ljmp
mov
fcoms
loop
inc
data16
push
sub
push
es
aas
dec
iret
sub
rolb
mov
inc
push
testb
xor
decb
dec
pop
in
xchg
cmpsb
lret
das
jl
orb
sub
popa
inc
in
xlat
enter
xchg
push
lock
add
or
cltd
inc
insb
les
stos
xlat
out
lods
andb
jmp
fiaddl
xchg
lock
mov
add
lea
pop
and
or
ds
pop
xor
and
cmp
inc
lea
mov
cmp
std
push
sub
ficoml
mov
addr16
mov
pop
ret
cmp
add
ficoms
or
pop
pop
xor
mov
jge
fidivrs
jmp
leave
cmpsb
shlb
push
cmpb
jmp
push
mov
push
icebp
je
int
mov
mov
idiv
stc
nop
imul
pusha
mov
rcrb
sub
sub
pop
sub
mov
mov
enter
mov
xor
lea
xorb
xchg
add
sub
cmp
cmp
pop
aas
lods
aaa
jo
cmp
adc
lahf
mov
lds
xor
xlat
fcmove
les
sti
sbb
sub
out
mov
push
gs
loop
arpl
adc
ds
xor
pusha
stc
idivb
sbb
fmull
mov
mov
mov
enter
push
aam
rclb
inc
psrad
or
dec
dec
mov
push
dec
sarb
xchg
cmp
mov
movsb
stc
ja
and
mov
push
mov
and
movsb
pop
jae
push
data16
mov
in
sub
std
lret
xchg
sbb
cmpsb
daa
inc
fmuls
mov
bound
pop
pop
add
add
nop
inc
xor
sahf
scas
push
lods
mov
cmpsl
inc
or
repz
mov
test
ret
mov
in
or
dec
addb
test
add
lock
xor
xchg
cmc
js
jecxz
in
xchg
inc
fstps
push
pop
in
lea
jmp
inc
icebp
adc
test
cs
mov
stos
sbb
mov
je
jle
in
sub
lahf
jnp
jmp
scas
fidivrs
addr16
loopne
pop
ds
push
mov
andb
jl
push
xchg
lahf
and
push
jae
add
mov
scas
mov
pop
push
psrlw
push
pushf
call
or
out
xor
mov
jmp
xchg
cwtl
sub
jbe
nop
xchg
pop
push
pop
out
adc
dec
jbe
mov
inc
cmp
mov
int
pushf
xchg
xor
push
cmp
mov
sbb
pop
lods
ss
cwtl
jae
pop
mov
jnp
pop
mov
xchg
fildl
stos
lcall
popf
fnsave
cs
inc
movsb
cmp
nop
dec
lahf
subl
push
pop
dec
jp
imul
pop
jmp
push
mov
test
inc
das
insl
push
fwait
imul
mov
adc
push
pop
cmpsb
xlat
loop
sbb
xchg
leave
sbb
mov
popa
mov
jae
sbb
enter
add
lock
cmpsl
pop
adc
cs
adc
mov
fstps
stc
xchg
mov
ljmp
sbb
mov
fmull
es
xchg
or
add
adc
inc
add
in
enter
lods
pop
push
push
push
nop
pop
aam
fsubrs
cltd
push
nop
adc
xor
test
loop
nop
jno
xchg
dec
cld
jge
in
add
or
mov
cmc
push
sbb
filds
mov
addl
jp
sti
fsub
pop
sahf
mov
fs
and
decb
jno
pushf
out
add
jne
add
or
mov
mov
aaa
or
push
mov
xlat
inc
addr16
push
mov
sub
push
cld
pop
lret
fidivs
add
jg
or
aas
mov
xchg
imul
inc
out
rcl
and
xchg
imul
dec
xchg
nop
test
es
stc
rcrl
xor
imul
aas
icebp
mov
jnp
fcmovbe
adc
adc
divps
fimull
rcll
cltd
or
pop
cs
xor
iret
xor
mov
push
cli
and
cmp
xchg
pop
cwtl
dec
inc
leave
xchg
sbb
and
fists
jne
dec
mov
mov
int
jg
pushl
in
imul
lock
sbb
mov
jecxz
les
lds
pusha
add
mov
sub
dec
inc
mov
mov
in
cmp
movsl
inc
mov
adc
ss
sbb
mov
sahf
pop
cmp
icebp
mov
fists
mov
sarl
into
mov
nop
sub
cwtl
cld
jp
mov
sti
repnz
cli
and
test
jb
stos
and
xchg
pop
inc
push
in
or
inc
leave
mov
ret
cmp
jb
lds
popa
xchg
shll
push
inc
sub
inc
sbb
aaa
mov
scas
or
push
fwait
mov
or
xchg
dec
out
sbb
sbb
xor
sub
imulb
mov
xchg
int3
pop
ja
push
cmp
aad
loopne
aad
inc
push
in
sub
into
idiv
testl
mov
les
mov
shlb
and
inc
jmp
push
mov
xor
push
xchg
enter
pop
cs
mov
mov
int3
cmp
je
or
outsl
lea
push
mov
jl
idiv
fwait
mov
or
fsubs
xor
pushf
cwtl
aam
xor
int
or
repz
mov
addr16
or
lods
push
jmp
jnp
mov
add
rcrb
mov
xchg
ret
pop
cwtl
into
adc
cwtl
cmp
inc
or
add
stc
xor
stos
andb
iret
cltd
sub
dec
adc
jmp
dec
repnz
xlat
mov
daa
pop
sbb
aad
and
and
or
imul
je
pusha
ljmp
sarl
test
lods
enter
mov
inc
xor
loop
and
dec
xchg
xor
lods
cmpsl
fistpll
outsl
add
jl
leave
int
je
das
xor
add
cmp
mov
mov
stos
leave
in
stos
jae
in
test
es
insb
lods
addl
mov
add
sbb
inc
fstpt
nop
ret
cwtl
dec
sti
add
fisubl
inc
cltd
testb
sub
cli
fmuls
xor
outsl
add
das
xor
loopne
mov
imul
xchg
in
push
test
mov
ror
addr16
imul
xchg
sahf
mov
mov
push
push
cwtl
cmc
jnp
dec
bnd
inc
and
pop
sub
xor
out
dec
inc
mov
pop
jne
test
xor
test
pop
xor
jle
xor
mov
fcmovu
das
shlb
sub
je
jge
int
cmpsb
jle
add
ret
lahf
xor
or
sahf
stc
add
jle
pop
jb
pop
fistl
push
mov
daa
or
sub
out
scas
ret
mov
push
cmp
ss
xchg
add
lret
fs
xchg
rorl
scas
js
enter
and
mov
cltd
mov
add
mov
jl
inc
fs
in
cli
pop
mov
stc
push
int3
mov
xchg
or
adc
test
pop
cmp
out
ds
or
jle
pop
xor
aad
sbb
pop
fs
test
mov
je
push
and
inc
mov
lods
inc
push
pop
inc
das
inc
cmp
movsl
push
mov
mov
jnp
aas
ds
mov
cmc
outsl
or
testb
jno
inc
call
cmc
fbstp
mov
adc
lods
hlt
push
adc
ljmp
inc
add
and
push
mov
incb
push
les
addb
inc
sbb
ljmp
lret
testb
xchg
int3
ficoml
hlt
adc
in
loopne
imul
shll
add
lods
les
sbb
sti
cmp
lods
mov
lcall
jae
lcall
sarb
and
mov
push
mov
rep
out
lret
dec
mov
fstl
fldl
aaa
cmp
cltd
mov
gs
sub
pop
jb
ss
test
cld
stos
lea
mov
mov
jnp
push
cmp
popf
rol
mov
and
js
pop
rcrb
push
test
sub
in
sbb
mov
xor
subb
outsl
xchg
push
mov
in
scas
test
subb
popa
outsb
enter
jle
and
mov
fimuls
sahf
xor
mov
push
out
and
pop
add
and
xor
sub
sbb
xor
mov
jecxz
hlt
or
rorb
jg
and
xor
xor
jno
jo
inc
cld
ret
out
push
jecxz
lds
lret
jae
ret
push
outsb
inc
rol
mov
mov
pop
cmp
and
xchg
mov
push
push
into
mov
add
push
in
adc
rcr
inc
push
shl
lea
and
scas
adc
jg
cmp
or
xchg
lock
div
and
movsl
hlt
test
pop
dec
jmp
divl
cltd
and
mov
lds
jb
iret
mov
jl
aad
xchg
mov
mov
push
in
js
pusha
cmp
lds
cmp
ljmp
push
in
call
stos
insl
dec
js
mov
jg
xchg
pop
mov
lods
jno
add
mov
mov
fisttpll
loopne
cmpsb
jne
ljmp
adc
jns
stos
add
inc
mov
pop
add
leave
ljmp
std
sbb
inc
dec
pop
fimull
jnp
outsl
notb
rcr
pop
or
ds
test
dec
cmp
pusha
inc
adc
ret
push
ror
cmp
jg
push
add
jns
fadds
push
or
xchg
mov
jne
pushf
js
je
adc
xor
and
push
andl
inc
test
paddw
jae
xchg
iret
inc
dec
xchg
pop
push
mov
xchg
cmpsb
sarb
xchg
out
add
loopne
dec
addl
pop
push
fldt
ja
inc
fdivrs
or
xorl
lahf
out
and
dec
push
aam
xchg
movsb
add
mov
mov
mov
je
repnz
popf
pop
xchg
negl
call
jl
test
mov
jnp
sub
fstpl
clc
test
lea
or
jbe
xor
popf
aaa
mov
lahf
push
adc
mov
test
mov
dec
jno
add
mov
sbb
in
or
sbb
cld
mov
into
adc
sahf
cmp
xchg
int3
das
mov
sub
adc
cli
mov
in
std
shrl
addr16
push
xchg
push
das
testl
cwtl
mov
inc
sarl
jg
xchg
inc
cmp
pop
or
lret
int3
insl
int3
dec
arpl
mov
test
sub
mov
cmp
xchg
sub
sbbl
and
lock
les
xchg
outsb
push
or
enter
jne
push
subl
insb
xchg
cmpsl
and
in
mov
push
adc
rcr
dec
daa
lds
fxch
pusha
cld
and
mov
mov
pop
mov
adc
aad
inc
icebp
xchg
in
fucomp
je
ret
pop
test
adc
stc
insb
test
popf
cmp
popf
pop
dec
hlt
xorl
aam
loope
out
lea
sbb
test
dec
lret
scas
and
sbb
ja
mov
or
repnz
aaa
xchg
insl
dec
outsl
int3
mov
mov
mov
out
mov
sub
in
bound
add
sbb
nop
insb
lret
inc
xchg
mov
push
mov
rol
xchg
pusha
aad
js
imull
outsl
fwait
cmp
mov
mov
mov
pusha
stc
adc
in
push
rcrb
sahf
cmpsl
sbb
dec
xchg
in
jl
imul
call
ret
push
cmp
pop
lcall
js
shrl
scas
dec
shll
loope
movsl
dec
inc
and
cmpsl
ljmp
push
inc
in
in
jns
int
jge
push
adc
arpl
in
push
push
add
clc
sbb
mov
push
xor
dec
mov
sarl
in
cmp
and
loop
test
repz
jge
sub
dec
and
ret
or
xchg
inc
and
sub
scas
dec
or
push
sbb
sbb
push
inc
inc
popl
fsubl
in
pop
xor
in
mov
mov
xchg
bound
addl
pop
rolb
jnp
and
mov
test
ret
icebp
stos
sbb
rolb
addr16
dec
jmp
mov
pop
jo
inc
and
jecxz
into
mov
loopne
adc
arpl
fidivrl
sub
add
in
out
aas
adc
or
push
push
and
js
aam
test
sub
test
pop
push
mov
xchg
mulps
pop
dec
xchg
dec
repnz
loopne
loop
movsb
in
adcb
xchg
and
pop
inc
mov
testl
cld
mov
fistl
lock
pop
adc
es
sub
imul
int
jno
fs
add
jmp
icebp
stos
xchg
mov
adc
pop
push
ss
sbb
and
inc
add
mov
push
mov
push
xor
popf
inc
dec
pusha
push
cwtl
mov
in
call
mov
sti
cmpsb
pop
dec
lea
cmpsl
xor
jp
in
add
push
mov
inc
rolb
int3
test
rclb
daa
mov
inc
dec
sarb
mov
push
mov
sarb
leave
sbb
cmp
mov
push
aaa
aas
push
lods
jmp
bound
or
mov
inc
insl
adc
ja
fs
push
push
and
and
lock
test
push
sarb
mov
push
xchg
push
inc
in
mov
lcall
aaa
inc
or
rclb
data16
xor
dec
mov
rol
mov
sub
jg
mov
adc
loopne
fldcw
loope
out
faddl
inc
scas
cmp
push
jo
lods
mov
sbb
lea
cwtl
mov
inc
or
mov
pop
cmp
pop
mov
pushl
out
xchg
ret
int
incb
scas
xlat
xchg
test
pusha
jl
lahf
mov
divl
icebp
sbb
je
sahf
mov
stos
xchg
lahf
scas
sub
mov
dec
fmuls
xchg
test
pop
movsl
loopne
push
pop
ret
adc
add
sarl
mov
rcrb
jmp
jns
lods
add
fwait
int3
aas
cmp
icebp
in
dec
mov
scas
movsl
out
in
xchg
inc
rclb
sbb
or
push
sbb
out
pushf
imul
lret
fmuls
push
mov
pop
pop
es
pop
mov
inc
xchg
cli
jb
lret
dec
mov
push
int3
xor
ret
adcl
fadd
pop
push
in
std
sub
pushf
dec
dec
jmp
and
test
push
jecxz
xchg
mov
les
sbb
mov
leave
lds
adc
or
inc
sub
cld
mov
dec
movsl
loope
sub
in
fsts
push
adc
pop
gs
mov
xchg
mov
sbb
mov
add
ljmp
sbb
outsb
loope
mov
adc
pop
or
popa
iret
int3
imulb
insl
loopne
mov
stc
mov
into
push
lods
cmp
adc
jne
pushf
cld
arpl
cli
or
or
add
xchg
sub
ret
push
or
cmpsb
sti
imul
add
or
lock
test
lcall
les
gs
lods
lock
xor
mov
jmp
out
pop
iret
fcom
mov
jecxz
je
movsl
aas
mov
arpl
dec
and
lock
dec
lds
out
testb
adc
fistpl
inc
jg
fcomps
cmc
adc
movsl
sub
jp
sbb
dec
cmp
mov
xor
sub
mov
aas
fwait
mov
loopne
xor
nop
mov
mov
fwait
out
or
xlat
repnz
loopne
jns
imul
mov
sub
add
test
cld
pop
inc
sbb
sub
js
cmp
sbb
in
push
std
adc
ret
and
inc
in
jge
push
mov
inc
mov
cmpsb
sub
pop
mov
and
test
push
dec
int3
push
cmp
inc
lea
mov
push
movsl
mov
jmp
sub
or
divb
data16
ljmp
rolb
es
mov
filds
or
fs
rorl
xor
cmp
call
mov
lcall
and
cmp
inc
out
lret
jmp
hlt
rcrl
xor
or
mov
cmp
subb
mov
sub
lahf
cli
mov
lods
xchg
add
ficomps
lods
fxch
repnz
xlat
push
pop
xchg
add
dec
std
mov
push
js
addr16
ficoms
add
push
addr16
dec
push
mov
adc
adc
add
push
xor
mov
jp
mov
mov
sbb
das
ja
arpl
scas
outsb
scas
xchg
push
and
cmp
jnp
cmp
mov
leave
jne
adc
sbb
test
rcrb
pushf
jmp
movsb
jbe
jl
or
adc
add
mov
movsb
fwait
test
stos
xchg
or
rcrl
cmc
push
fisubrl
or
cmc
mov
sahf
dec
and
addb
adc
sbb
dec
rcrb
dec
xchg
xchg
pop
cmp
sahf
xchg
dec
add
call
jle
inc
and
clc
jg
and
push
loopne
test
cltd
sti
mov
push
addr16
mov
cwtl
repnz
repnz
std
mov
push
pop
test
popa
mov
xchg
mov
sbb
mov
pop
out
lret
mov
jecxz
mov
into
jbe
std
mov
mov
imul
test
cmp
movsl
push
movsl
xchg
pop
mov
or
xchg
cs
stc
cmp
das
pop
mov
ret
add
loopne
sbb
stos
sbb
ja
pop
flds
sub
fwait
mov
inc
fnsave
popl
jmp
dec
in
mov
rol
jae
pop
and
jnp
push
fbld
dec
adc
les
test
pop
xor
push
xchg
inc
sub
adc
hlt
cmc
xor
jnp
mov
mov
loop
out
lret
imul
xchg
rcl
mov
mov
xchg
sub
mov
mov
lret
ret
data16
movsb
stos
pusha
enter
ret
push
mov
int3
cmpb
adc
ret
pop
jo
in
daa
xchg
aam
mov
mov
inc
lcall
xchg
in
xchg
and
dec
daa
mov
scas
or
aam
out
cltd
jno
movsb
stos
es
xchg
mov
mov
cs
hlt
mov
adcb
inc
pop
push
call
xor
xchg
mov
adc
imul
sbb
jo
in
in
lods
lret
dec
push
adc
aaa
cvtpi2ps
and
out
sbb
xor
mov
movsl
dec
leave
shll
mov
pusha
and
xchg
lret
int
mov
addr16
mov
clc
imul
in
movsb
and
fs
push
xchg
lods
mov
ror
push
sbb
mov
add
imul
jmp
clc
loope
mov
test
mov
mov
mov
cmp
popa
rcrb
fs
repnz
sbb
cmpsb
cmp
je
fnsave
pop
mov
add
add
test
lcall
sub
pop
subb
into
shlb
daa
out
lea
mov
je
sahf
sarb
pushf
ret
mov
sub
cmpsb
fldl
aam
sub
ds
pushf
cmp
stc
mov
mov
in
fisubs
cmp
jno
mov
fldcw
mov
push
or
lds
roll
lret
jb
lods
aad
rcrw
xchg
nop
jmp
pop
fidivrs
imul
push
jbe
inc
gs
outsb
cmp
pop
mov
adc
pushf
cmp
fcompl
movsb
shl
aad
popf
fsubrl
mov
jl,pt
in
int3
mov
divps
or
or
aaa
push
or
out
and
ja
movsb
bound
sbb
push
jnp
mov
insl
es
stc
xchg
or
jp
leave
pushf
leave
ds
jecxz
cltd
or
mov
pop
dec
data16
or
push
scas
xlat
icebp
inc
sub
ret
frstor
ficoml
sbb
inc
pop
jl
or
sbb
inc
ja
mov
loopne
mov
push
push
push
mov
push
and
aaa
stos
loop
loopne
push
sbb
pusha
mov
xlat
les
or
out
jg
ret
jbe
mov
mov
mov
repnz
jae
fistpll
in
nop
and
in
call
daa
stc
mov
sub
xor
shlb
xchg
cmp
jp
ljmp
lods
icebp
dec
fistpll
icebp
stos
mov
mov
subl
add
pusha
inc
jno
out
and
cmpps
push
jle,pn
enter
sub
inc
lahf
cli
fstl
xchg
jp
jle
push
dec
je
inc
pop
add
outsl
push
push
aam
or
out
ljmp
test
jecxz
dec
stos
or
divb
jb
xor
pop
cmp
in
cmpsl
dec
cmp
leave
jae
add
ds
and
jge
mov
mov
iret
jo
pop
arpl
pop
in
scas
adc
scas
xchg
add
insl
andl
outsb
imul
sub
cltd
xor
int3
mov
daa
mov
je
cmp
rcll
adc
std
insl
fwait
xor
shlb
sbb
push
xor
mov
loope
dec
cs
add
scas
dec
push
cmovae
jbe
jns
mov
fucomp
jnp
push
mov
cs
mov
push
int
bound
pop
inc
push
add
stos
aad
pop
cmp
jmp
xchg
mov
rcrl
and
mov
dec
callw
adcl
dec
rcrl
xor
sbb
aas
dec
shlb
jp
sub
addl
pushf
mov
jne
push
add
out
cmp
lods
xor
in
xor
addr16
jnp
xor
imul
dec
enter
gs
stc
inc
lods
dec
lds
adc
daa
jecxz
repnz
jo
push
inc
mov
ja
out
test
push
lret
ss
adc
outsl
subb
add
sub
and
pusha
or
jnp
int3
mov
imul
gs
push
mov
push
push
aas
nop
andb
adc
push
sbb
into
inc
mov
or
sarl
cmp
popf
cmp
lea
std
and
std
mov
fs
jg
sbb
mov
test
inc
jnp
movsl
jmp
cmpsl
adc
jmp
les
testl
cmpl
mov
cmc
pop
jnp
je,pn
and
pop
dec
pop
push
adcl
dec
arpl
xor
dec
xchg
push
jg,pn
or
ret
stos
aaa
push
sub
push
invd
jns
xlat
cmp
shl
mov
push
icebp
add
loopne
sub
addr16
xchg
shlb
out
push
mov
xor
mov
jo
ret
cmc
xor
mov
dec
mov
jp
jno
jbe
pop
leave
fnstsw
and
lret
push
imul
push
add
push
lret
idivb
xchg
sbb
push
xorl
orl
add
lods
adc
mov
push
daa
mov
jno
mov
or
or
gs
lret
fildl
and
loope
iret
push
pop
jo
push
notl
xor
sub
into
and
add
lret
aam
lods
sub
ret
dec
lret
insb
or
fiaddl
pop
sub
pop
lock
pop
mov
sbb
lahf
jnp
dec
andb
adc
push
jle
xor
adc
inc
fldt
mov
add
and
push
lods
fiaddl
cltd
xchg
mov
sbb
lea
cld
lds
andl
insb
or
std
lea
sub
insl
gs
std
jmp
insb
out
sbb
dec
mov
mov
dec
and
in
adc
jmp
call
cmp
test
negb
xchg
jae
imul
daa
cmp
out
ret
sub
lret
mov
rol
mov
sbb
push
sub
jl
push
scas
test
inc
cmp
xor
xchg
ret
les
push
cwtl
sahf
jns
dec
dec
xchg
dec
mov
insb
or
mov
inc
repz
out
jbe
pop
jp
add
jmp
push
xor
es
xor
and
and
sahf
arpl
xor
dec
jmp
mov
inc
ficoml
adc
dec
mov
addr16
sub
and
lock
push
add
or
and
sub
adcb
xor
je
sbb
inc
shlb
and
dec
adc
sub
mov
jp
cmp
mov
sahf
sub
jg
leave
cld
push
dec
arpl
add
mov
out
mov
out
lods
lea
insb
aas
movsl
dec
sbb
mov
push
jno
pusha
daa
stos
or
pop
jge
rcr
xchg
cs
mov
or
sbb
insb
push
inc
mov
out
jp
push
jge
xor
call
sub
jle
std
or
push
xchg
jecxz
leave
xor
jno
mov
add
fs
pop
dec
push
lahf
js
or
push
xchg
jmp
stos
pusha
cmp
xchg
xor
push
push
xor
aam
daa
repz
movsb
sub
fs
rcrb
xor
daa
push
mov
adc
dec
test
cmp
xchg
or
jns
pop
iret
push
insl
mov
fwait
xchg
movq
cli
sbb
push
aad
aaa
push
rcll
insl
aam
pop
push
enter
test
add
flds
mov
sbb
inc
mov
insl
outsb
jnp
fldcw
into
sub
mov
out
or
cld
xchg
mov
adc
xlat
fnstenv
pushf
sti
js
ljmp
test
inc
pop
flds
xchg
test
arpl
fmuls
inc
adc
xchg
out
mov
push
das
mov
mov
mov
inc
in
inc
add
popf
repnz
fisubrs
adc
add
and
cmp
cmp
adc
test
mov
adc
pusha
je
in
and
cmp
push
pusha
mov
dec
test
mov
movsl
mov
insw
cld
lods
movsb
in
pop
in
add
xchg
es
xor
push
inc
sbb
nop
mov
cmp
push
mov
imul
push
ja
call
xor
mov
mov
mov
xchg
popa
inc
push
adc
fistl
testl
xor
and
pop
out
or
push
or
and
lahf
jp
adc
sbb
aam
mov
xchg
movsl
mov
mov
cmp
xor
jbe
addr16
and
dec
aad
leave
shl
dec
out
fs
mov
aam
pop
pop
xchg
in
pop
pop
add
xchg
lock
sti
lods
aaa
or
jle
push
push
pop
imul
dec
inc
adc
push
mov
mov
sub
and
stos
xchg
cmp
je
inc
popf
or
sub
cmp
pop
ljmp
add
ljmp
mov
push
jb
outsb
cmpsb
jae
mov
xor
mov
aaa
bound
and
mov
shl
fldt
nop
sarl
int
ljmp
leave
fidivrs
mov
inc
jg
in
movsl
das
ficoms
test
mov
xchg
jns
xchg
sub
fsubrl
mull
fwait
idiv
in
and
inc
push
sbb
jmp
sti
fidivs
stos
jb
add
shlb
push
mov
inc
pop
and
jne
sbb
push
pusha
adc
push
adc
cmc
scas
xchg
sbb
adc
adcb
jg
jecxz
stc
mov
insb
dec
cmpb
push
les
pop
aaa
pop
xchg
clc
dec
dec
xchg
dec
insl
lea
push
cmp
dec
xchg
add
das
push
notl
in
pop
mov
ss
leave
imul
cmpsl
ror
lea
sub
das
or
mov
add
pushf
pop
pop
int3
mov
test
pusha
add
mov
and
scas
stos
repz
xor
adc
pop
pop
jnp
and
xor
enter
sub
loope
dec
imul
adc
push
jmp
xor
lcall
imul
lds
and
cmp
out
aas
imull
sbbl
scas
inc
mov
pop
je
cltd
mov
xor
orb
mov
fnstenv
lea
test
dec
ficompl
cmp
mov
shrl
or
cli
push
add
xor
mull
xchg
push
jp
jge
aam
loop
and
movsb
jns
insl
dec
and
mov
lods
mov
push
mov
rcrl
out
cmpsb
dec
xchg
inc
je
and
adc
xchg
aas
icebp
xchg
in
jae
mov
mov
pop
push
jle
xchg
jl
cmp
pop
jg
dec
xlat
xchg
xlat
xlat
cmp
pop
pushf
push
popa
jg
push
cmp
loopne
aam
dec
cmp
jno
je
mov
popa
repnz
out
xor
icebp
cmpsb
lahf
lret
push
dec
sbb
mov
sub
cmp
xor
lret
mov
js
cld
jnp
sti
sahf
sahf
dec
add
cmpsl
add
or
outsl
stc
inc
push
mov
arpl
xchg
add
sbb
inc
push
mov
push
sbb
push
aaa
ja
arpl
mov
cmpsb
cmp
mov
add
push
jns
lds
or
push
xchg
pushf
aaa
aas
inc
movsl
add
jg
lock
stos
cwtl
inc
pop
jns
lret
cmpsb
out
inc
out
fcmovnb
xor
add
aad
jg
sti
dec
jmp
xchg
add
xor
lds
daa
rcll
ja
inc
xlat
inc
jbe
fxtract
add
faddl
xchg
inc
aam
test
adc
add
movsl
jo
xor
lods
mov
jae
pusha
xchg
adc
pop
sub
sub
mov
repnz
rorb
cmp
fdiv
cmpsb
out
imul
push
cmp
push
add
das
ficoms
loope
fdivrl
popa
lods
xor
bound
loop
adc
stc
faddl
negb
sbb
lods
adc
and
sbb
inc
jg
inc
movsl
outsb
pop
popa
ret
imul
mov
sahf
mov
cmp
sbb
cmpsl
pusha
pushl
lods
jp
push
adc
mov
cmp
pop
push
test
lahf
sub
pop
std
mov
aad
sub
es
pop
dec
andl
xchg
cmp
icebp
mov
repnz
mov
push
pop
loopne
mov
jb
loop
je
aaa
mov
cmpsl
xor
pop
pop
inc
jmp
iret
int3
call
je
inc
push
push
je
test
pushf
imul
push
fistpll
pushl
cmp
call
nop
xchg
mov
jmp
test
jecxz
das
out
test
lods
pop
sub
push
cli
pusha
jo
jl
cmp
inc
out
or
cmp
cmp
fcoml
xchg
loop
loopne
rcrl
cmp
sbb
cmpsl
xchg
lret
push
and
cmp
or
sbb
push
loop
shlb
arpl
es
mov
pop
pop
hlt
scas
adc
inc
xor
scas
xor
scas
pushl
dec
in
pop
icebp
adc
fmull
lahf
leave
mov
push
lea
leave
and
inc
call
sbb
and
push
bound
mov
loop
jne
pop
inc
notl
repz
jno
lahf
lock
jg
mov
psllw
stc
pop
flds
je
aam
cs
test
xor
mov
sub
mov
xchg
lret
cmp
lret
mov
mov
lds
cli
jo
enter
les
cmp
imul
jnp
out
enter
mov
repz
jnp
ds
xlat
dec
dec
mov
loope
inc
stc
sbb
fsubr
lahf
mov
out
and
dec
dec
movsl
int3
lods
pushf
jp
jmp
shlb
out
dec
mov
mov
mov
in
sub
inc
push
mov
xor
dec
jo
insl
int3
xor
mov
push
mov
jmp
mov
or
loopne
neg
push
dec
dec
test
push
fwait
sbb
add
push
mov
ret
push
pushf
aad
gs
push
dec
movsb
mov
clc
in
test
les
jmp
out
xchg
xchg
lahf
pop
mov
push
insb
xlat
out
outsl
jecxz
stos
and
bnd
cmp
jp
dec
cmp
fnstcw
in
mov
push
aad
add
sub
push
mov
xor
pop
shrl
andl
push
test
lret
arpl
jle
sbb
pop
int
jbe
sub
jns
adc
ret
dec
das
sub
adc
stos
fucomip
pop
cli
cmp
jmp
cld
push
lahf
cmp
clc
iret
fwait
cmc
adc
iret
rcll
outsb
mov
xlat
cmpsb
or
mov
out
push
inc
les
sbb
mov
pusha
xlat
je
add
fidivl
jge
dec
pop
arpl
test
xchg
nop
sbb
jl
mov
insl
xlat
mov
xor
fdivrs
les
sbb
mov
mov
push
pop
mov
pop
sbb
mov
pop
in
xchg
mov
jbe
sub
xchg
sbb
xchg
sbb
loopne
push
hlt
mov
or
inc
outsb
int
fisubl
sbb
cmp
jge
fnstcw
dec
push
mov
cmpl
scas
icebp
gs
mov
xor
stc
test
mov
out
shlb
mov
mov
ficomps
ror
cmc
add
pop
jecxz
mov
lods
shrl
mov
inc
and
cli
jmp
adc
ja
addr16
jnp
cmp
loopne
mov
mov
xchg
sbb
and
xor
aad
pop
cmp
fstpl
jg
jl
add
mov
and
in
paddq
sti
outsl
and
lcall
mov
call
leave
mov
sub
in
sub
outsl
dec
fsub
idiv
es
int3
xchg
mov
test
arpl
inc
jo
out
pop
call
es
jl
mov
jae
mov
arpl
sbb
ljmp
mov
mov
cmp
xchg
push
pop
xacquire
add
adc
sbb
jb
push
dec
jns
add
pop
push
mov
nop
jecxz
popf
cmp
out
xchg
adc
call
arpl
sub
cmpsb
int
aaa
xlat
aam
out
dec
rcr
cwtl
test
fsubs
lds
stc
cmp
dec
pop
loop
fincstp
inc
dec
into
ljmp
push
inc
add
and
xchg
aam
xlat
push
or
inc
clc
movsl
int3
dec
out
shrl
dec
iret
js
mov
fists
push
xor
in
push
in
push
pusha
inc
stc
pop
pop
jecxz
cmp
jmp
dec
xlat
add
je
xchg
mov
icebp
nop
sar
mov
aas
or
pop
test
jl
idiv
jnp
and
loope
outsb
outsl
xor
test
add
mov
pop
ret
jl
arpl
ret
push
add
popf
test
roll
or
call
scas
jp
test
sbb
cld
dec
xor
aad
push
ret
dec
and
xor
into
add
popf
mov
sbb
rclb
fisttps
ret
cmpsl
insl
xor
lret
push
push
aad
mov
sti
movsl
addr16
or
dec
sbb
mov
sbb
test
sub
mov
dec
pop
mov
jo
leave
jecxz
mov
xchg
xorl
mov
push
popf
cli
and
mov
jbe
cmp
or
pop
sarb
adc
cli
adc
jg
subb
cs
inc
loop
cmp
xchg
and
sbb
jae
test
sub
or
cmp
inc
push
in
sti
les
cs
hlt
in
stc
pusha
call
fisttps
jo
js
lret
xchg
push
addr16
sub
jbe
jo
shl
movsl
iret
cld
xor
das
mov
nop
lds
jo
add
and
daa
pop
pop
ja
xor
push
cltd
sub
fisubs
push
ds
mov
mov
jnp
or
je
cmp
lods
cld
jl
mov
inc
cmpsb
clc
dec
lret
shrl
mov
fsub
xorl
enter
dec
xlat
lahf
cmp
pop
leave
psrlq
mov
dec
cmp
inc
sub
mov
sub
arpl
mov
push
loope
test
mov
nop
jl
xchg
out
aaa
jno
js
add
or
sarl
adcb
mov
mov
shl
aam
into
bound
sbb
adc
cmpsb
scas
cmpsb
imul
cld
insb
pop
inc
cmp
sbbb
xor
push
dec
and
and
push
jp
icebp
xchg
mov
jp
lods
mov
or
sarl
mov
mov
push
sbb
xchg
xchg
lea
mov
xchg
ret
push
cmp
fdivrs
movsb
inc
imul
ret
mov
enter
idivb
addr16
add
pop
aad
icebp
lods
jno
mov
incb
in
dec
insl
fadds
push
push
jns
jp
sbb
push
ss
mov
divb
push
or
scas
repz
pop
in
jb
jnp
nop
into
fisubs
inc
jecxz
cwtl
add
sbb
adc
dec
dec
xlat
mov
pop
fs
inc
arpl
roll
pop
bnd
pop
shl
mov
and
je
lcall
aaa
inc
inc
mov
pushf
sub
xor
out
xor
or
pop
ss
sub
std
inc
outsb
setbe
aam
pop
pop
jne
lret
mov
sub
push
out
fdivrs
pop
mov
cmc
dec
dec
ds
out
mov
mov
jb
adc
bound
cmp
cwtl
clc
in
xchg
popw
push
cltd
fnsave
jg
negb
rclb
mov
cmp
dec
leave
aaa
aam
mov
outsb
inc
sub
xchg
mov
js
fs
out
xchg
fcoms
fimuls
jne
into
sbbb
jno
xor
mov
adc
nop
add
and
add
and
test
inc
sbb
pop
jle
pop
sbb
sahf
loopne
in
mov
divl
or
jp
or
fadds
or
dec
push
push
lret
rcl
and
in
lahf
lods
fadds
xor
movsb
push
sub
inc
cltd
add
repz
pusha
sbb
scas
cmp
cmp
lds
jns
xlat
xchg
sub
enter
shrl
and
js
fstps
mov
lods
fidivl
xor
jmp
or
xor
ja
push
xchg
lret
push
shl
pop
mov
xor
out
xchg
sarl
mov
in
stos
xchg
jno
fld
fs
stos
sub
ret
pcmpgtb
or
ss
add
fldenv
jnp
icebp
pop
adc
bound
sub
in
pushf
inc
fucomip
and
xchg
xchg
mov
ljmp
sub
xchg
jbe
jle
dec
and
in
mov
and
cltd
xor
dec
mov
in
std
test
fdivrs
lds
xchg
pop
shll
aam
add
pop
ffreep
xchg
hlt
sti
jp
shrd
xlat
pop
sub
add
lds
mov
sub
in
xor
popa
push
test
mov
in
sarl
leave
xlat
int
pop
xlat
ret
inc
cmp
fs
dec
pop
mov
loopne
iret
dec
add
push
stc
bound
ds
popf
mov
mov
push
test
fs
mov
pop
pop
sub
jnp
ret
in
test
and
adc
mov
mov
jns
sub
bound
mov
add
sub
pop
mov
dec
xchg
mov
xchg
stos
push
repnz
xchg
and
adc
das
mov
push
popf
rcrl
repnz
sub
push
ficoms
cmp
push
add
insl
lret
nop
or
sbb
dec
and
les
add
add
adc
int3
fidivrl
dec
lea
into
das
xor
mov
insb
aad
fstl
arpl
inc
cmp
inc
in
daa
xchg
test
test
and
imul
cwtl
sbb
xchg
xchg
mov
leave
cmp
jb
and
aad
ja
mov
repz
dec
and
and
dec
xchg
cs
pop
xchg
ret
push
dec
inc
jecxz
fwait
rorl
outsb
and
lock
mov
pop
daa
push
aad
jp
and
lahf
cmp
call
mov
scas
imul
jo
push
lret
dec
cmc
in
ss
cmp
xchg
jle
stos
mov
cmc
dec
adc
in
mov
aaa
dec
shll
xor
ret
mov
mov
les
aas
or
into
add
pop
or
daa
cld
fldl
out
addr16
test
mov
mov
pusha
data16
data16
push
popf
aad
scas
movsb
loope
push
fwait
jno
adc
mov
divl
add
cwtl
ret
adc
mov
pop
fwait
cmp
ret
pop
out
fidivrl
lds
jae
push
dec
push
push
int3
fidivl
jno
push
sbb
xchg
pusha
mov
divb
std
mov
mov
push
jge
add
pusha
add
sub
fldl
in
clc
mov
test
and
lock
jle
data16
sub
loope
mov
or
sub
mov
inc
mov
test
inc
int
mov
sub
cmp
test
mov
cwtl
outsb
ds
rcrl
int
or
jo
cmp
push
inc
leave
insb
lea
push
mov
adc
jg
pusha
add
aad
out
sub
pop
mov
stos
fwait
xchg
push
mov
sbb
mov
loope
mov
fstpl
sub
cmp
clc
cltd
jmp
es
cltd
rcr
cli
push
stos
in
mov
js
dec
dec
ret
fbld
enter
inc
xchg
orb
mov
sti
lods
stos
push
sti
ret
jne
roll
and
mov
sbb
and
xor
push
mov
pushf
cmp
cmp
scas
pusha
lcall
mov
data16
daa
sub
or
cmp
or
mov
cwtl
out
mov
popa
decl
popf
cld
push
mov
sbb
sbb
aad
xchg
mov
ret
xchg
jge
shll
dec
cmpl
lds
sub
jg
mov
mov
iret
addr16
lds
aam
faddl
pusha
dec
stos
mov
mov
clc
movsl
call
iret
mov
xlat
inc
jno
push
stos
enter
mov
pop
fistps
or
xchg
mov
orl
mov
and
cs
icebp
xor
mov
mov
sti
repz
pop
pop
sub
outsb
push
sbb
bound
imul
xchg
cs
xchg
ds
imul
mov
push
and
mov
pop
mov
imul
and
das
dec
aaa
jle
sarl
imul
mov
and
out
mov
test
lret
roll
sbb
shl
jne
nop
mov
inc
pushf
sbb
xor
dec
push
div
stos
dec
mov
push
inc
cmpsb
insb
pop
stc
push
cmp
jle
add
mov
shlb
mov
add
vprotd
cmpsb
and
data16
mov
aaa
mov
loop
fnstsw
mov
int3
and
mov
inc
add
push
cmp
pop
ljmp
mov
fldl
test
incb
mov
imul
shlb
xchg
mov
mov
mov
outsl
ficoms
shl
inc
pop
fcom
mov
push
aaa
mov
cs
push
jno
cmp
or
test
xchg
leave
mov
stos
daa
jns
mov
lcall
sbb
dec
sub
xchg
fidivs
pop
mov
loop
jmp
and
mov
dec
test
fbld
and
push
inc
sbbl
pop
and
mov
cmp
arpl
jp
inc
xchg
stos
loopne
mov
rcrb
mov
lcall
add
aam
xchg
sahf
adc
std
sahf
jecxz
fidivrl
mov
cmc
into
loop
outsl
xchg
xchg
add
arpl
std
push
out
sbb
repnz
pop
push
xchg
adcb
xor
subl
jnp
add
out
jns
inc
jg
mov
adc
pop
stos
cli
aad
xor
xor
ja
lahf
push
movsl
lret
stos
pop
mov
pop
sbb
add
add
mov
mov
hlt
les
enter
std
shrl
les
ss
sbb
insb
xlat
sbb
ljmp
daa
cmp
cmpsl
mov
sub
into
mov
je
mov
adc
ret
out
bound
push
mov
test
imul
loopne
dec
sbb
push
adcl
dec
scas
mov
xchg
in
in
cld
rcrl
rolb
fucomi
popa
add
out
pop
out
mov
mov
stos
fldt
aam
in
cmp
mov
pop
movsb
movsb
das
ret
sbb
xor
push
cli
rcrl
fnsave
push
rol
mov
inc
adc
inc
mov
sub
loop
mov
pop
je
inc
call
ss
or
shlb
mov
xlat
or
lret
sbb
lds
add
push
xchg
lret
pop
shl
shll
call
dec
mov
lods
xor
idivl
jmp
loope
and
mov
roll
pop
mov
fucomp
dec
cs
int
dec
int
aam
fwait
movsb
dec
adc
es
es
add
test
fstl
adc
adc
cmp
cmp
xchg
lock
loop
adc
jmp
push
gs
mov
mov
or
jge
xchg
cmp
mov
pop
pop
movsl
adc
lahf
dec
das
or
sbb
sub
rcrl
cmp
dec
xchg
pop
sub
jne
out
sbb
mov
pop
es
subl
bound
rcll
push
pop
loope
push
jle
sub
xchg
dec
roll
imul
mov
repnz
push
data16
pop
pusha
add
jne
dec
stos
popa
popl
jb
test
mov
xchg
mov
ja
sub
andb
or
stos
push
movsl
nop
fiaddl
outsl
bndldx
ror
xor
xor
xchg
outsl
out
movsl
inc
push
mov
rcrl
out
arpl
pop
mov
sbb
cmp
negl
jp
int3
xchg
xchg
adc
xchg
add
push
dec
stc
in
shlb
inc
bound
xor
push
loope
mov
rcrb
lock
lds
lea
xchg
dec
xchg
inc
pop
jl
mov
push
sub
push
pop
movsb
xchg
jnp
repz
dec
dec
es
imulb
push
add
pop
xchg
cmp
ss
inc
xchg
and
fstpl
jae
pop
pop
lock
imul
movsb
sub
add
jp
xchg
aas
insb
push
sbb
rorl
jne
jl
jbe
mov
loope
out
xor
cmp
rolb
sub
mov
fnsave
pop
dec
out
ds
sbb
loop
sub
ss
sbb
leave
sar
adc
stos
call
stc
stc
dec
sub
imul
jbe
popa
adc
aaa
push
cmp
pushf
sbb
outsb
xor
shrb
fisttpl
push
aas
insl
xor
adcl
int3
jp
es
fidivs
dec
jp
clc
cli
fwait
and
inc
pop
pop
fwait
inc
out
dec
push
adc
ss
jl
sbb
pop
add
inc
aam
mov
mov
push
ret
or
fimuls
aas
cli
xchg
jno
xchg
scas
sti
push
dec
mov
movsl
mov
stc
and
into
stos
sub
cmp
repnz
out
das
std
es
scas
cmpsl
stos
subl
fldcw
arpl
or
ret
mov
ljmp
aam
jb
push
xchg
outsb
std
dec
dec
lds
js
dec
pop
adc
aaa
pop
imul
lods
push
push
mov
mov
adc
pop
add
xchg
or
rclb
mov
sub
pop
add
ss
mov
inc
aam
aas
mov
bnd
movl
pop
sub
in
add
push
stos
cmp
pop
sub
leave
or
xlat
sahf
popf
imul
std
pop
int3
fldenv
jmp
cmp
in
inc
mov
inc
call
out
incb
cmp
and
pop
or
add
rorb
dec
cmp
sbb
mov
mov
cs
inc
icebp
jae
iret
push
cmp
out
test
xchg
lahf
adc
stc
arpl
mov
pop
inc
neg
sbb
mov
mov
popa
mov
daa
sub
mov
jnp
inc
inc
stos
mov
adc
adc
neg
xor
js
sbbb
mov
shrl
mov
inc
enterw
mov
xor
arpl
loop
sub
movsb
pusha
rolb
xchg
adc
sti
fdivrl
das
dec
movsl
and
and
cmp
mov
sbb
out
roll
inc
adc
adc
xchg
jnp
pop
or
scas
gs
scas
cmp
xchg
scas
lret
xchg
scas
pop
cmp
test
xchg
pop
test
cmp
add
sbb
cmp
inc
clc
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sbb
mov
movl
mov
sbbl
xor
addl
add
movl
mov
sbb
mov
xor
inc
push
xor
mov
mov
add
addl
mov
mov
mov
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
push
neg
push
adc
push
or
mov
or
xor
mov
add
subl
mov
mov
mov
and
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
movl
mov
xor
add
sbbl
mov
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
decl
push
and
pop
sbbl
sub
xorl
add
movl
adc
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
mov
dec
mov
mov
addl
mov
xorl
xor
add
mov
lea
orl
mov
mov
xorl
xor
xorl
add
andl
mov
andl
lea
adcl
push
movzwl
add
mov
xor
addl
add
subl
push
mov
adcl
push
andl
pushl
addl
call
or
mov
and
mov
subl
mov
sbb
mov
xor
addl
mov
add
jmp
sub
lea
mov
mov
mov
add
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
mov
and
mov
not
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
pushl
push
pushl
call
xor
add
dec
mov
jmp
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
mov
xor
xor
lea
mov
xor
div
mov
xor
add
cmp
mov
mov
jne
xor
add
imul
mov
movzbl
mov
jmp
xor
add
imul
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
movl
pop
jmp
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
push
movzbl
and
movl
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
push
adcl
mov
mov
xor
mov
and
xor
mov
mov
sbb
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
dec
mov
mov
adcl
push
call
adcl
push
push
sbbl
push
movl
push
andl
push
push
orl
call
orl
push
andl
call
push
call
movzbl
mov
cmp
movl
jne
subl
xor
inc
xor
inc
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
jne
orl
pushl
andl
pushl
addl
pushl
call
mov
mov
mov
mov
movl
inc
movl
cmp
jne
movl
inc
cmp
movl
jne
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
movl
add
lea
xor
xor
add
mov
mov
lea
or
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
mov
xor
or
adc
mov
mov
mov
or
mov
xor
movzbl
adc
mov
mov
addl
add
movl
mov
mov
mov
cmp
movl
jne
or
mov
decl
mov
adc
mov
add
xor
sbb
add
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
and
xor
xor
add
mov
sub
mov
adcl
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
call
cmpl
jb
xor
xor
sbb
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
mov
sub
mov
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
orl
mov
sub
mov
add
movl
mov
movzwl
add
mov
adc
mov
xor
andl
xor
add
movzbl
and
mov
xor
xorl
xor
sbbl
add
lea
mov
mov
mov
movl
cmp
ja
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
mov
xor
lea
orl
mov
mov
xor
adc
lea
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
adc
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
andl
movl
sub
mov
or
mov
xor
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
je
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
add
adc
xor
mov
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
je
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
mov
mov
mov
xor
lea
xor
add
adc
xor
mov
xor
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
inc
mov
subl
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
subl
mov
xorl
add
movl
cmpl
je
cmpl
jne
push
push
pushl
push
pushl
push
push
push
call
xor
add
dec
mov
jmp
mov
mov
and
movzwl
xorl
mov
andl
movb
xor
lea
subl
mov
add
mov
and
mov
xor
andl
sub
adcl
mov
add
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
add
dec
mov
jmp
sbb
push
sbb
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
push
movzbl
sub
mov
mov
mov
adc
mov
xor
neg
mov
push
add
movl
jmp
movl
mov
movl
mov
inc
movl
cmp
movl
jb
and
mov
sbbl
xor
add
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
orl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
adcl
mov
addl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movzwl
sub
mov
add
movzwl
mov
mov
subl
movzwl
addl
xor
subl
add
mov
movl
mov
movzbl
inc
mov
cmp
movl
jne
and
mov
mov
addl
xor
add
subl
mov
subl
mov
xor
subl
add
mov
mov
movl
movl
movl
movzwl
mov
mov
movl
jmp
xor
mov
mov
add
mov
xor
xor
sub
sub
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
and
xor
adcl
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
and
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
jmp
mov
enter
imul
jl
dec
xchg
cld
popa
bound
bound
mov
lock
aas
cli
aam
jg
outsb
mov
fwait
pop
subb
lcall
movsl
jae
pop
jno
dec
cmp
out
das
jns
adc
stos
scas
fcoms
xor
jne
dec
insl
call
mov
adc
test
xchg
loopne
js
int
pusha
lret
inc
jmp
push
ss
pop
popf
dec
mov
sbb
inc
and
gs
or
or
stos
insl
popa
shll
movsl
pusha
adc
jae
xchg
and
lcall
jle
int3
xchg
sbb
adc
movsl
arpl
cmp
lock
cmp
inc
repnz
jg
cmp
mov
sahf
and
rorb
xor
and
dec
sahf
rcrb
nop
movsl
movsb
hlt
or
lods
sub
inc
das
adc
fildll
and
rcrb
iret
iret
ret
inc
popa
leave
je
cmp
push
out
xor
out
data16
enter
lret
xlat
sub
jle
clc
dec
push
ffree
stc
push
xor
xchg
sti
xor
push
pop
into
jo
mov
or
dec
xchg
xchg
dec
inc
outsb
jp
enter
gs
ss
adc
pushf
sbb
pop
lea
jp
lds
xchg
lahf
nop
jb
mov
cs
pop
or
jmp
fs
push
adc
sarl
mov
test
and
and
sbb
inc
fimuls
out
jp
insl
test
test
imul
xor
mov
ret
dec
fwait
push
dec
js
test
cmp
nop
inc
sub
js
lods
test
xchg
out
pop
sub
not
ficompl
mov
repnz
movsl
push
pop
pop
sarl
imul
adc
das
fimuls
inc
filds
outsl
push
push
or
test
cmpsb
xchg
shrb
jb
mov
icebp
pop
pop
xor
lahf
iret
pcmpgtw
mov
mov
rcrl
jnp
mov
repnz
xchg
test
cmpsl
or
or
cmc
pusha
in
test
xor
push
inc
pop
rcrl
into
cltd
test
je
or
outsb
icebp
fstps
or
xor
adc
lcall
mov
cmp
inc
mov
imul
xor
inc
mov
xchg
pushf
fistps
in
push
fwait
jp
loope
fs
sub
inc
add
fadds
mov
add
and
sahf
xlat
inc
cld
shrb
dec
xor
popa
mov
push
icebp
push
lods
push
mov
imul
pop
scas
shll
mov
sti
mov
dec
aad
frstor
push
dec
loopne
or
out
add
aad
lcall
mov
mov
xchg
inc
sub
mov
scas
test
addb
lahf
mov
gs
les
sbb
stos
in
sbb
mov
repnz
mov
in
xor
shll
mov
adc
or
jno
addl
jge
sarl
fs
int
cld
je
testl
sarb
jnp
push
or
cmp
inc
popa
xor
mov
mov
pop
xchg
xor
clc
cmpsb
fwait
ds
imull
xchg
repnz
popa
ret
push
fsubrp
out
pop
xor
mov
push
jne
sub
xchg
sti
add
mov
std
mov
movsb
fisttpl
arpl
cmpsb
test
mov
mov
push
inc
cmp
ja
jns
ss
xchg
repnz
in
mov
mov
pop
movsb
ljmp
mov
pushf
adcl
inc
std
leave
adc
dec
pushf
scas
fcomps
loope
dec
test
sub
adc
lds
push
mov
add
push
push
inc
xor
fcompl
push
je
adc
pushf
test
ss
jns
bnd
ljmp
sub
ss
xchg
push
insb
xor
cmp
loopne
out
xchg
subb
push
sub
loop
pmaddwd
into
sub
shrl
push
cmp
cmp
repz
pop
pop
pop
data16
enter
pop
or
or
testb
jecxz
cmpsl
sahf
fdivs
stos
sbb
jle
hlt
fwait
bnd
xor
js
push
pop
mov
mov
lock
mov
cmc
inc
nop
stc
lahf
and
jp
jmp
je
add
dec
xor
movsl
rorl
push
or
and
xchg
aad
fildl
andb
mov
insl
popf
cmpb
push
out
icebp
movsl
dec
jno
jno
mov
mov
daa
xchg
addl
out
pop
mov
dec
sub
mov
sbb
mov
add
jle
dec
push
dec
mov
push
call
add
mov
sub
mov
cmpsl
xchg
mov
sbb
testl
test
rcrb
outsb
pop
and
push
out
jae
popf
in
cltd
pusha
stc
mov
shll
js
loope
and
or
aas
xor
jb
in
dec
mov
out
enter
jmp
pop
cmpsl
or
xor
xchg
sbb
insl
xchg
mov
cmpsb
dec
or
fbstp
dec
pop
leave
push
les
pop
insl
xchg
mov
jo
sbb
jl
dec
add
dec
sbb
dec
jne
pop
jmp
xor
aam
adc
mov
andb
pop
push
xchg
lods
mov
in
xchg
imul
mov
mov
int
mov
sbb
shll
jge
andl
dec
popf
cwtl
out
dec
add
loope
aaa
js
add
inc
lret
pop
mov
mov
pusha
js
push
insl
mov
xor
jmp
fcoml
push
adc
loope
test
ljmp
popf
cmpl
add
jo
stc
lret
jecxz
mov
fiaddl
fldcw
mov
daa
inc
xchg
inc
mov
aad
and
cmpsl
or
leave
ret
add
adc
adc
or
dec
push
addr16
ljmp
ret
iret
mov
jl
movsb
push
or
gs
inc
lcall
ret
je
rcr
mov
in
lret
add
cmp
and
xchg
push
and
mov
lods
testl
cmpsb
adc
lock
imul
imulb
mov
mov
adc
shrb
mov
add
mov
lds
out
mov
popf
clc
popf
int
mov
arpl
sub
divb
jge
pop
fsubrl
mov
and
sbb
mov
inc
pop
inc
scas
add
jnp
jle
jp
and
insl
js
mov
xorb
push
inc
pop
scas
lret
xor
ror
loop
orb
arpl
and
and
pop
std
scas
shlb
addr16
ljmp
add
clc
jns
cli
or
mov
mov
shlb
dec
mov
and
mov
adc
mov
and
and
pop
sbb
push
sbb
icebp
xor
aaa
and
cmc
addb
inc
rcrb
fcomps
cmp
insl
inc
lret
sbb
mov
pop
pop
add
addr16
mov
add
cltd
lods
inc
arpl
bound
pop
xchg
into
clc
loop
mov
imul
sub
adc
in
cmc
aaa
sub
jecxz
ficoms
icebp
fcmovu
stos
cmp
sbb
ljmp
cmpsl
daa
jl
movsl
cmc
xchg
mov
pop
cltd
jmp
aas
mov
pop
dec
dec
cmpsb
leave
or
jg
add
shl
xchg
imul
stos
lcall
sub
addr16
mov
test
outsb
jae
scas
lret
jbe
lret
dec
mov
testl
clc
dec
add
stos
and
orl
popf
adc
setb
movsb
adc
enter
and
int3
cmp
orl
mov
and
fucomi
jg
cmc
dec
mov
and
cld
cmp
mov
insl
fnstenv
cmpsl
sahf
ljmp
test
fst
pop
mov
sub
arpl
and
leave
xor
je
movl
dec
dec
push
dec
aam
cmpsb
mov
and
out
std
pop
xor
movsl
fidivrl
sub
xor
cltd
fs
int3
xchg
lds
mov
movsb
xchg
sbb
adc
dec
fisubrs
push
cltd
jecxz
mov
mov
or
dec
xchg
sub
rcl
into
xor
call
add
mov
jle
cmp
lods
mov
out
xor
or
out
dec
in
in
or
xlat
pusha
shll
cmp
jle
jp
data16
xor
dec
dec
adc
push
mov
cltd
mov
out
rclb
das
cld
xor
push
pop
mov
pop
ja
jmp
lret
test
shll
jecxz
cs
pop
sbb
and
bound
lods
push
ret
pop
rcr
bswap
push
pop
fldl
sub
out
aaa
xor
les
gs
stc
cmc
xlat
push
xchg
cwtl
shrl
ja
ljmp
repnz
cmp
hlt
mov
jb
lret
xor
ss
sub
pop
mov
or
test
movsl
mov
adc
int3
adc
jl
jnp
pop
into
sbb
dec
push
xchg
mov
jb
mov
popf
inc
fistl
fnstenv
insl
js
out
cwtl
mov
adc
push
pop
lods
sahf
inc
notl
mov
sbb
out
add
xchg
mov
xor
test
cmp
lods
mov
mov
push
adc
jp
incl
sbb
sbb
inc
mov
sbb
les
lods
and
adc
push
inc
xchg
adcl
add
xchg
fildl
sti
loopne
filds
adc
push
mov
push
and
pop
outsb
rolb
jo
jb
xchg
outsb
push
jns
xchg
repnz
and
pusha
xchg
ror
dec
mov
bound
xchg
mov
add
dec
addl
cmc
cmp
out
aaa
xor
push
sbb
sbb
es
outsl
pop
xchg
rorl
bound
inc
or
movsb
push
and
inc
jle
inc
hlt
add
fistl
sub
aad
adc
cli
cmc
int3
sbb
dec
xchg
push
jb
push
push
in
xchg
xchg
pop
add
int
divl
adc
xor
or
repz
jmp
test
add
test
mov
dec
les
out
stos
ds
pop
fld
jno
test
xor
dec
push
mov
push
in
int
sub
enter
loop
cmp
ja
sub
add
cmp
xchg
mov
cli
ret
mov
mov
aam
adc
lahf
cmc
mov
jge
jns
js
popa
lcall
incl
mov
loop
cmp
aad
nop
xchg
pushf
xor
lea
push
cwtl
xchg
pop
shrb
jno
push
sub
mov
test
push
test
shll
dec
xor
mov
rcll
xchg
arpl
cmpsb
or
lods
rol
divl
pop
addb
test
ret
fadd
int
jmp
mov
int
jmp
cmp
andb
aad
mov
dec
xor
lcall
cmp
hlt
inc
sub
ja
arpl
dec
fnstenv
and
push
aad
jbe
xor
or
jge
mov
jp
loopne
cwtl
loop
lock
or
mov
adc
adc
inc
fstpl
inc
xchg
mov
insl
imul
outsb
scas
popa
push
sub
fidivrs
es
sub
inc
dec
imull
pop
xor
int3
mov
aaa
rclb
dec
nop
iret
cs
jne
push
mov
movsl
adc
stc
pop
xchg
pushf
aam
inc
add
int
sub
mov
daa
fsubp
xchg
pop
or
push
movb
popf
inc
ds
adc
cwtl
mov
mov
pop
dec
mov
adc
mov
sbb
ret
inc
addr16
mov
inc
or
and
shlb
sarb
pop
das
cmp
or
cltd
rorl
xchg
xchg
dec
add
idivb
adc
neg
aas
or
cs
inc
test
dec
inc
out
sbb
push
div
out
shrb
dec
cmp
loopne
notb
mov
mov
mov
sarb
mov
dec
rorb
test
daa
movsb
sbb
frstor
mov
jns
test
lret
icebp
cmp
mov
cli
icebp
hlt
int
icebp
push
pop
fwait
scas
cld
mov
mov
xchg
fdivrl
jo
and
mov
cmp
sbb
out
lods
cld
ljmp
leave
xchg
jae
aad
dec
scas
sub
xor
xchg
cmp
clc
xor
std
inc
add
pop
jns
push
or
adc
add
test
fsubr
jbe
movsl
inc
insb
lret
into
pop
ds
ds
adc
js
jp
adc
outsl
mov
dec
mov
mov
xor
pop
mov
push
scas
dec
inc
sahf
mov
xor
int3
mov
roll
std
push
ret
xor
mov
fwait
loope
push
fwait
cmpb
or
fwait
aam
sti
push
aad
cmp
dec
lcall
push
mov
pop
add
decl
cltd
cs
xor
rclb
fidivrl
inc
inc
sbb
mov
shlb
scas
sbb
scas
cmp
fs
mov
cwtl
ret
sbb
mov
inc
lock
jle
xlat
mov
nop
mov
in
push
pop
fstps
fiaddl
jp
inc
out
outsw
fildll
fdivs
scas
loopne
mov
dec
inc
je
lods
in
xchg
outsb
dec
call
dec
adc
push
dec
jp
push
sbb
cmp
add
cmp
and
insl
icebp
daa
aam
lahf
add
mov
in
mov
jecxz
inc
pop
fisttps
push
mov
insl
push
xchg
outsb
fmuls
push
test
lahf
int3
mov
mov
jns
mov
fadds
mov
sbb
nop
cli
mov
push
enter
leave
out
pop
xchg
adc
popf
xchg
pop
dec
sub
mov
mov
es
mov
jge
or
aas
movsb
add
loope
fwait
inc
xchg
pop
shll
iret
or
sub
dec
addr16
and
adc
mov
scas
xchg
sti
lods
or
jns
add
mov
fcompl
xchg
jb
inc
ljmp
int
inc
aad
or
repz
jae
call
sbb
out
mov
test
lret
leave
adc
and
fdivrs
lock
fdivrs
push
mov
ds
xchg
ss
xchg
sbb
imul
ds
stc
add
dec
mov
dec
cmp
cmpb
inc
mov
sbb
add
pop
jne
stos
xor
jmp
aam
daa
ljmp
daa
and
cmp
fisubl
jo
dec
xor
mov
adc
sbb
xchg
in
hlt
cli
in
xor
leave
cltd
lea
mov
mov
inc
xor
in
xor
pop
loope
or
sub
mov
and
add
sub
outsl
adc
fstpt
clc
popf
cmp
lods
out
int3
cmp
scas
xlat
stc
popa
and
ljmp
sarl
jp
ret
je
inc
aad
cmp
outsl
dec
lea
mov
ret
loop
lcall
mov
or
mov
ds
je
shrb
or
mov
pop
pushf
pop
fistpll
iret
mov
lds
adc
dec
orb
inc
lret
pop
xor
out
sub
jb
xchg
push
push
dec
or
loop
mov
iret
adc
into
sub
and
repz
xor
arpl
xor
insb
into
cmp
mov
mov
add
adc
aad
push
mov
jne
aad
ficoml
jg
aam
mov
push
mov
outsl
sub
or
mov
loop
pop
fsubrl
mov
mov
dec
sti
mov
les
das
xor
sub
test
xor
sub
std
into
or
cmp
rolb
jmp
push
jb
mov
in
neg
add
ficoml
mov
xlat
stos
and
jno
aaa
xchg
add
sbb
xor
push
adc
dec
test
xor
int
jnp
cli
pop
add
inc
inc
loope
jmp
movsb
pop
jno
mov
imul
lret
les
jg
pop
loope
or
xor
add
sahf
adc
add
add
push
xchg
leave
test
dec
insb
addr16
dec
dec
ljmp
cmpsb
fisttpll
inc
inc
jnp
cmp
mov
cmpsb
cmc
fisubs
cmc
and
lahf
lahf
sub
push
mov
jecxz
pop
cmp
pop
hlt
popa
in
data16
pop
movsb
inc
mov
sub
dec
and
fbld
sub
inc
mov
cwtl
mov
xor
cmp
sbb
sub
loop
iret
add
addb
push
sbb
adc
jnp
or
inc
sbb
subb
mov
or
rcrb
movsl
lds
jp
cltd
add
icebp
jae
cmpsb
or
sub
int3
cli
xor
sub
fistpll
dec
cmp
test
jmp
pop
push
lods
xchg
mov
sbb
inc
sbb
jg
ds
pop
dec
pushf
and
lods
scas
cwtl
lcall
mov
pop
in
pop
add
imul
shlb
loopne
ds
loopne
inc
pop
inc
jns
mov
cmp
sub
popf
stc
shl
mov
ret
shl
and
ljmp
mov
movsl
jmp
repz
decl
mov
jo
cmp
mov
scas
xchg
dec
mov
mov
jbe
movsl
mov
jmp
inc
addl
stc
inc
je
push
out
push
dec
mov
fdivrl
and
pop
mov
fwait
push
add
les
fwait
ss
in
push
mov
sbb
xor
jle
jl
cmpsl
loopne
adc
sub
movsl
cmp
lcall
cltd
mov
xchg
arpl
movsb
cmp
sbb
rcrl
or
mov
sarl
cld
pop
insb
icebp
jecxz
xor
xor
cmpsl
repz
mov
xchg
mov
xchg
arpl
pop
int3
and
std
arpl
rcrl
leave
jo
cli
xor
inc
cld
sub
xor
and
outsl
mov
jl
daa
jmp
push
mov
bnd
aam
jmp
popf
mov
mov
pop
cmpsl
in
sub
mov
cwtl
add
dec
bound
clc
mov
cmp
jo
test
cmp
ficoml
inc
add
pop
mov
or
adc
aas
xorb
jno
ret
mov
lock
es
hlt
xchg
add
push
lods
xor
icebp
mov
fistps
out
xchg
jge
push
adc
cmpb
popa
mov
mov
movsl
mov
in
jo
dec
or
and
sbb
pop
loopne
push
lahf
outsl
push
jb
dec
inc
loopne
repnz
clc
lock
test
or
leave
in
mov
shr
jns
inc
fcom
fiadds
insb
lock
fwait
cmc
int
fstps
cmpsb
stos
fs
add
push
push
xor
jnp
adc
xchg
inc
sti
lcall
or
movsl
in
pop
popf
sbb
movups
sbb
mov
loope
insl
push
jge
loope
pop
cmpsl
mov
jg
sbb
cltd
cmp
mov
psrad
nop
sbb
lahf
les
imul
add
mov
in
das
cli
leave
out
and
sbb
sbb
das
aad
iret
adc
js
in
icebp
xor
sarb
daa
cmp
cmp
aam
sarl
xor
aas
test
mov
jge
leave
bsr
mov
push
mov
mov
insb
stc
fs
loopne
push
shlb
mov
in
mov
mov
scas
sub
fimull
jae
movsl
xor
dec
rcrl
xchg
or
daa
xor
and
fdivrl
cli
push
and
popa
lea
ds
lret
push
fdivrl
add
clc
and
push
scas
popa
rorb
dec
idivb
aas
std
les
push
arpl
inc
outsl
es
subl
push
aaa
in
arpl
es
xchg
mov
mov
pop
or
or
adc
pop
and
cmpsb
inc
jnp
fwait
adc
jmp
nop
or
movsb
hlt
mov
mul
insl
xor
iret
dec
testl
pop
dec
and
ds
jno
mov
pop
xchg
out
ret
or
fidivs
fmull
lret
jle
sub
push
ja
mov
popf
jge
adc
sbb
out
sub
insb
jmp
jp
pop
mov
dec
xor
or
mov
mov
lods
das
icebp
xor
push
cltd
mov
jmp
aam
xchg
popf
pop
sbb
lods
adc
shlb
fs
cs
mov
adc
clc
insb
stos
xor
xor
mov
stos
mov
lret
jbe
rcrb
mov
pop
rcl
and
mov
xor
test
clc
insb
insl
call
stos
clc
clc
imul
sub
push
lods
popl
dec
loopne
push
cmc
fyl2x
push
xchg
icebp
std
scas
lcall
cmp
adcl
or
ret
mov
es
aad
xchg
xchg
dec
bound
pusha
stc
cmpsl
sbb
scas
enter
dec
lret
and
dec
push
call
pop
inc
dec
cld
lods
int3
cmpsl
sbb
loopne
stc
loope
insl
lds
test
push
mov
rcrl
sub
and
fs
loope
shlb
jbe
rcl
call
jne
sub
inc
fwait
stos
cmp
xor
inc
add
xchg
sub
rcrl
mov
lds
or
push
mov
stc
and
pop
imul
gs
xchg
jge
add
ss
enter
mov
dec
in
push
loope
popa
cs
cmpsl
movsb
sti
add
adc
daa
ds
sbb
leave
test
pop
sub
mov
mov
flds
push
out
cmp
add
mov
mov
lds
and
jnp
mov
pop
xor
mov
shrb
push
sbb
push
pop
imul
push
sti
sbbb
mov
push
arpl
inc
daa
stos
fbstp
jnp
mov
jmp
aas
aad
sbb
xor
push
movsl
jne
hlt
push
mov
les
mull
shl
sbb
das
dec
icebp
in
rclb
pop
pop
lahf
lods
cmpsl
mov
ja
mov
mov
ss
xchg
inc
adc
inc
cmp
pop
ljmp
nop
mov
mov
and
push
mov
not
or
mov
outsl
outsl
inc
aam
leave
cmc
hlt
mov
repnz
repz
fidivrs
lock
jl
in
dec
push
movl
and
lds
xchg
push
jnp
add
ljmp
inc
aad
sbb
pop
mov
jae
mov
fucomip
mov
sub
mov
mov
sub
stc
xchg
add
nop
testl
icebp
push
mov
ret
sbb
jo
mov
xchg
shr
loop
fldenv
jno
addr16
fimull
stos
mov
or
inc
imul
in
lods
xchg
out
mov
imul
xchg
push
xor
lahf
push
adc
jns
push
enter
push
jae
int
inc
rolb
in
inc
jb
int3
insb
sub
lods
jnp
mov
fmuls
xor
xor
out
roll
pop
mov
movsl
adc
imul
add
add
repz
fwait
mov
js
in
adc
and
xchg
int3
add
call
fwait
jge
ss
outsb
inc
pushf
dec
frstor
divb
enter
aad
stos
cmpsl
xchg
out
xchg
sub
cs
ret
mov
inc
xchg
stos
jo
fistpll
push
dec
pop
into
xchg
dec
inc
bound
pop
mov
out
in
xchg
repz
cwtl
std
dec
cltd
and
fsubrl
lret
ret
fcomps
jp
and
dec
pusha
xchg
shrb
mov
hlt
pop
jmp
bound
mov
cmpsl
ja
mov
and
pop
inc
test
clc
mov
add
repz
dec
push
xor
mov
fsubs
mov
sub
das
popf
sub
sar
or
or
into
lea
stos
bound
xchg
in
je
push
ljmp
ret
in
mul
sub
inc
mov
pop
add
sbb
cmp
cli
push
mov
xchg
push
ret
fdivs
in
adc
insl
xor
ficoms
xor
out
data16
adc
into
out
btr
mov
or
fwait
jo
adc
outsb
rorl
push
mov
or
cmp
and
and
aaa
test
imul
jmp
add
adc
mov
addr16
iret
testb
out
mov
cmp
and
sbb
mov
pop
loope
faddl
or
test
jb
inc
sbb
xchg
pop
pop
sahf
and
dec
xorb
fdivl
insl
lahf
dec
shrb
push
sub
mov
daa
push
add
ljmp
cmp
movsb
out
xor
push
and
cltd
inc
fmull
pop
push
sar
out
cmp
cmp
in
and
divb
pop
pop
imul
pop
xor
push
stos
clc
rolb
dec
xchg
cmp
jno
adc
jns
push
arpl
test
dec
xlat
sbb
pop
aad
cmp
jo
cmp
cmpsl
daa
addr16
inc
clc
je
inc
ret
xchg
rolb
push
xor
popf
dec
loopne
loope
gs
pushf
inc
faddp
xchg
inc
sub
scas
mov
sub
adc
adc
jmp
int
pop
and
cs
inc
jle
pop
leave
sbb
mov
enter
jg
jl
ret
add
sbb
xor
test
lret
xor
or
out
dec
or
cmpsl
xor
inc
pop
inc
mov
fstp
sbb
das
mov
movsb
mov
ja
in
loop
fcoms
ja
sbb
push
test
xchg
cld
mov
mov
add
mov
push
jne
add
cmp
jbe
outsl
xchg
xchg
aad
nop
mov
outsl
pop
jnp
in
sbb
imul
mov
mov
ss
das
add
inc
gs
mov
stos
jg
sub
out
pushf
lods
xchg
mov
cwtl
int3
push
test
cmc
mov
pop
shll
mov
cmc
push
int3
pop
frstor
das
xchg
movsb
mov
rclb
sbb
bnd
xchg
mov
fldcw
inc
fisubl
outsl
out
jne
repnz
push
scas
leave
mov
imul
repnz
shrl
cli
sti
in
jbe
mov
xchg
jnp
mov
jo
sti
mov
arpl
jae
jle
xor
add
xchg
hlt
mov
xchg
les
aaa
subb
sbb
iret
sub
cmp
add
adc
mov
push
mov
adc
fnsave
in
sbb
ja
cld
jae
loopne
inc
push
sub
imul
daa
ret
mov
xchg
not
pop
lock
fwait
int
mov
daa
cmp
rolb
sub
mov
jle
inc
adc
or
mov
jns
adc
adc
sbb
ret
jmp
add
pop
popf
or
and
xor
shrl
mov
sub
lea
movsb
adc
adc
or
cmp
sti
addr16
into
das
lock
mov
notl
outsb
xor
mov
jmp
bound
jbe
cld
out
insb
adc
arpl
fidivs
dec
mov
aas
push
ror
pop
mov
in
sub
imul
mov
loopne
push
lret
fs
test
cs
cmc
pop
mov
xor
push
rclb
fldl
shlb
push
rclb
cmp
hlt
mov
out
push
push
cltd
int3
adc
adcl
push
aas
lret
outsb
pop
imull
bound
incl
jnp
test
jp
adc
fldl
pop
adc
mov
cmp
jmp
mov
test
pop
sbb
inc
std
dec
dec
das
xchg
outsb
aaa
pop
inc
mov
iret
jg
in
int
mov
add
and
mov
inc
mov
pop
test
adc
mov
jecxz
les
fldcw
mov
hlt
xchg
mov
jp
sub
rcl
cs
mov
inc
jmp
and
shrl
movsb
jg
fs
sarb
mov
lock
xor
jb
inc
dec
or
and
inc
adc
xchg
cmc
int
cmp
inc
xchg
daa
xchg
mov
cmp
sarb
popa
jp
mov
adc
test
mov
shrl
dec
aam
pop
adc
push
lods
mov
loop
and
and
mov
lcall
shrb
pop
sbb
jb
cmp
sub
jle
nop
fistpl
jmp
sub
jae
xchg
jns
add
or
out
sbb
cmpsb
ret
int3
movsb
stc
sbb
imull
jns
mov
call
in
insb
cmp
xor
jecxz
adc
fisubs
mov
or
gs
in
cmp
in
jge
arpl
cli
fmuls
mov
add
sbb
and
sub
cmp
outsl
popf
notb
insl
sysenter
mov
inc
imul
mov
push
orb
imul
rclb
and
sbb
fisubrs
inc
or
lahf
insb
or
out
and
pop
out
movsb
inc
xchg
xor
pop
ds
lods
movsl
pop
adc
das
inc
push
stos
dec
inc
aam
mov
outsb
push
not
test
ret
daa
sbb
ds
jns
pop
xchg
push
inc
aaa
mov
push
push
mov
in
enter
jl
mov
jns
stos
aas
loopne
mov
in
xor
fdivl
das
lock
in
adc
sbb
mov
mov
mov
cmpsb
mov
arpl
jg
scas
xchg
sbb
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
jmp
cmpsb
or
imul
mov
bound
bound
push
les
arpl
or
xchg
cmpsb
test
mov
mov
jae
jmp
jnp
test
mov
mov
dec
cmp
adc
icebp
jmp
or
nop
dec
adc
lret
in
mov
int
je
fs
cli
pop
sbb
xchg
dec
test
and
xor
jbe
es
cmpsl
lds
mov
adc
sbb
lcall
loope
jge
lods
addr16
jl
mov
cmp
mov
imull
fmulp
or
test
out
lods
pop
mov
mov
mov
mov
nop
xchg
fwait
lcall
out
cmpsl
inc
outsl
dec
stos
pop
out
dec
scas
or
xchg
push
addr16
daa
pop
pop
inc
dec
aas
jl
jne
jmpw
scas
pop
cmp
incl
loopne
push
stos
and
arpl
jle
jbe
test
ret
fwait
mov
call
push
out
sub
test
inc
bound
sub
sbb
sub
shrb
mov
int
clts
and
jae
xchg
or
leave
rolb
xor
pop
pop
out
mov
pop
push
stos
cmc
mov
test
inc
test
sbbl
cmpsb
out
in
push
inc
cli
sub
mov
dec
push
jmp
int
mov
test
jmp
out
mov
mov
in
into
ljmp
sbb
inc
cmp
sub
dec
shll
mov
jp
mov
daa
imul
loop
hlt
jge
mov
iret
add
lds
enter
cltd
mov
sbb
aaa
in
cwtl
pushl
push
lret
xchg
filds
je
mov
and
hlt
lret
nop
pop
hlt
sub
sub
lret
xchg
pop
cltd
mov
mov
fiaddl
sbb
sub
mov
mov
push
adc
dec
cmp
ljmp
ja
in
or
dec
mov
jns
push
in
scas
xchg
pop
push
xchg
sub
shll
ljmp
rclb
and
cwtl
adc
fbstp
cli
filds
rolb
mov
push
cmp
jbe
enter
pop
cmp
inc
lcall
push
sbb
push
add
push
jne
sub
jae
xor
jno
sti
shll
fwait
jle
add
pop
neg
cmp
cmp
stos
int3
cld
pop
hlt
add
dec
stc
or
cmp
aas
test
sbbb
push
mov
push
outsl
fisttpl
cli
out
xor
xlat
jns
push
pushf
scas
mov
lret
mov
xor
or
dec
add
ficoms
xchg
mov
xchg
pop
std
add
xchg
mov
cmc
stc
jne
inc
cmpsb
adc
jp
bound
and
mov
scas
push
shrb
fisubl
mov
sbb
test
test
add
das
cmpsb
scas
fstpl
stos
in
pop
shll
stc
test
lret
or
fs
jb
fwait
gs
fists
lret
rolb
xchg
mov
fwait
movsl
jae
daa
push
jbe
mov
cmp
sub
ja
mov
xor
jo
push
xchg
fisubs
in
jecxz
jb
insb
popf
fnstsw
outsb
jg,pn
hlt
mov
js
pop
test
ret
outsl
icebp
int
ret
mov
std
dec
addr16
iret
cmpsb
xchg
cli
inc
pop
adc
loop
jle
stc
push
xchg
or
hlt
xchg
test
mov
xchg
cmpsl
jae
popa
repnz
mov
fwait
icebp
push
push
frstor
cmp
mov
lods
aam
adc
stos
sbb
xorl
movsl
and
lret
ret
pop
jp
pop
fwait
sahf
cli
out
jecxz
int3
pop
cmp
pop
push
sbb
pop
xor
push
or
std
dec
mov
mov
dec
mov
lods
int
ss
imul
out
fisttps
inc
std
pop
or
popl
xchg
add
das
or
nop
fwait
scas
sbb
pop
fcom
shrb
xor
daa
push
shlb
pop
lods
mov
dec
mov
pushf
fcomp
icebp
mov
adc
jle
scas
sbb
testl
fcomps
adc
je
movsb
dec
mov
pop
sbb
jl
stc
mov
mov
adc
mov
jle
fnstsw
dec
jg
and
jecxz
pop
nop
jge
or
mov
mov
enter
push
push
pop
push
mov
ss
cmp
mov
and
pop
scas
fistl
xchg
and
and
push
aad
data16
insb
ja
int3
mov
mov
aaa
jae
sahf
loop
cmp
inc
loope
popf
add
jle
int3
xor
sbb
mov
inc
inc
popf
movsl
pushf
jmp
mov
push
out
jno
ret
out
pop
gs
aad
lea
inc
mov
inc
mov
and
mov
cli
mov
adc
jg
sub
mov
sahf
push
jg
sbb
rcrl
mov
pop
dec
sbb
rcrl
hlt
xchg
out
mov
dec
inc
leave
push
fs
into
mov
add
pop
cmp
add
inc
inc
dec
into
and
mov
jb
sbb
dec
pop
rclb
cmc
sub
sub
mov
xlat
cmpl
push
test
add
aad
ljmp
mov
roll
loop
xor
addr16
add
mov
xor
out
push
mov
rcr
fiadds
sub
dec
daa
push
jp
xor
cmc
cmp
dec
fwait
adcl
sbb
sub
ret
bound
je
sbb
dec
jmp
sbb
sub
out
pop
cwtl
lret
xor
fstpl
pop
add
mov
push
scas
lahf
dec
mov
pop
push
lret
icebp
ret
xchg
push
cltd
jno
pop
mov
dec
xor
dec
push
or
dec
cmp
shrb
or
lahf
je
adc
call
pop
sub
mov
or
add
pop
mov
mov
aas
push
daa
les
lret
xlat
jg
or
dec
test
icebp
fisttps
fs
dec
ret
mov
push
inc
mov
std
mov
into
mov
inc
test
sub
scas
cli
cmc
shl
aaa
ds
dec
push
jno
xor
or
shll
cmpsl
dec
mov
pop
or
dec
xchg
inc
fmul
and
sub
ljmp
nop
jno
movsb
and
push
sub
jl
jle
enter
dec
xchg
pop
inc
xchg
fdivl
int
xor
add
mov
aaa
mov
fmull
sbb
ret
sti
popa
les
inc
repz
push
shrb
inc
aaa
pop
mov
push
jae
adc
add
sbb
outsl
les
cli
fmull
xchg
iret
aad
cmp
ret
lds
push
adc
cwtl
push
xchg
je
sub
jae
push
xor
adc
cmp
jp
mov
mov
lea
cmp
or
subl
inc
movsl
imul
xor
loopne
aas
jbe
nop
das
jmp
and
xor
cmpsb
pop
xchg
test
pop
insb
lcall
sub
jnp
les
cwtl
adc
sub
loopne
lret
inc
xor
dec
jns
stos
cmpl
addr16
add
sbb
daa
sbb
adc
pop
push
in
pop
pop
ss
xchg
sub
fs
cwtl
das
mov
xor
xor
add
jno
dec
cmpps
lret
sbb
es
or
pushf
inc
loopne
cmp
mov
adc
xchg
adc
inc
sbb
inc
mov
aam
pop
ss
jbe
pop
fsub
cwtl
popf
mov
jns
out
jns
sub
ja
enter
mov
test
dec
lahf
cmp
xchg
mov
adc
dec
mov
ret
sbb
sub
dec
add
ss
sbb
insb
fucomi
jb
dec
es
cltd
and
xor
dec
sbb
jnp
stos
pop
fisttpl
test
and
call
push
jo
aam
and
xchg
movsl
mov
xor
adc
xor
sbb
jns
ret
fsubrs
fst
xchg
cmc
frstor
inc
add
cmp
mov
mov
lret
pop
or
lret
dec
sarb
or
sti
inc
mov
dec
lods
mov
dec
push
mov
mov
movsl
inc
sub
cmpsb
adc
and
clc
adc
into
sbb
fs
xor
in
dec
mov
decl
inc
adc
or
jp
mov
ret
rcl
addb
loop
adc
clc
xlat
int
fmuls
mov
jecxz
rcrb
stc
inc
jmp
jno
sar
jmp
and
ss
stos
arpl
jecxz
push
test
insl
jne
lods
adc
mov
sub
test
enter
jb
in
xor
add
repnz
jnp
inc
pop
daa
clc
pusha
fchs
enter
jae
pop
push
in
les
push
insl
jmp
lret
pusha
pushf
clc
pop
sbb
mov
or
lock
xchg
arpl
cmpsb
idivb
sti
movsb
mov
aaa
clc
bound
jp
xor
repz
cs
mov
jo
enter
cwtl
mov
sbb
loopne
xchg
push
xor
imul
push
jg
mov
push
testb
arpl
fdivp
push
cmp
pop
mov
divl
or
clc
aad
in
or
negb
loop
fcoms
andb
mov
mov
mov
xchg
cmp
xor
and
mov
sahf
cmp
jecxz
pusha
data16
push
inc
lcall
das
aas
fsubl
sub
push
inc
and
hlt
mov
lea
pushf
movsl
fwait
sbb
push
loopne
dec
or
shrl
or
lcall
sahf
jl
pop
xor
jle
icebp
inc
mov
pop
inc
adc
jmp
pop
inc
cmp
andb
pop
idivb
lcall
sub
imul
loop
pop
mov
pop
add
cs
mov
fwait
xchg
mov
lahf
inc
fdivs
xor
icebp
adc
cli
xor
dec
scas
cwtl
xor
sbb
or
mov
cli
cmp
scas
sub
push
shll
mov
mov
loope
movsb
jne
jno,pn
cli
or
jmp
loope
mov
dec
mov
add
vpsllw
pop
inc
xchg
push
fs
adc
imul
dec
fildll
scas
pop
enter
and
int
nop
loope
insl
dec
xchg
repnz
mov
loopne
inc
test
outsb
mov
cmp
push
sahf
xor
jns
sbb
push
not
test
mov
xor
inc
cmpsl
aad
mov
and
addb
nop
inc
loope
outsl
inc
pop
mov
jns
fwait
shlb
clc
fldl
cmp
cmp
push
and
outsl
or
sbb
out
pop
lds
sbb
cmp
aam
dec
inc
cmp
cmpsb
push
or
loope
or
xchg
pop
cmp
pop
inc
repz
and
jg
pop
addl
adc
aam
ret
dec
and
inc
sbb
sub
ret
imul
lock
cmpsb
add
testb
xchg
std
pop
and
sti
imul
fs
adc
mov
xor
out
mov
repz
test
das
jge
push
inc
jb
mov
mov
mov
movsl
shrl
cmc
add
adc
xchg
sbb
xchg
enter
xchg
add
or
push
fildll
aas
sub
std
mov
or
in
insb
xchg
fs
pop
cmpsl
xchg
ret
dec
push
sub
dec
pop
nop
push
mov
xor
popf
ficoml
jns
clc
mov
fdivrl
and
popa
inc
ss
jbe
mov
daa
add
inc
mov
pop
lcall
loop
sub
dec
mov
aas
or
pop
out
idivb
out
xchg
push
das
jp
sub
aad
and
out
mov
mov
inc
cmc
lahf
fists
push
adc
ret
faddl
dec
ljmp
loopne
sbb
enter
in
mov
fldl
sub
push
mov
out
sub
push
rclb
repz
mov
out
jmp
or
inc
push
mov
xchg
adc
nop
rcl
jg
outsl
dec
add
clc
fisubs
mov
ljmp
iret
ret
stos
mov
or
dec
lods
mov
fcmovb
xlat
push
xchg
jge
push
sub
shr
sbb
adc
ja
shlb
mov
int
sbb
jae
fs
lods
int3
add
lahf
cwtl
cltd
fnstcw
jp
inc
sbb
cmovne
mull
push
push
dec
repnz
repz
pop
and
or
and
dec
pop
lahf
hlt
dec
and
pusha
xor
rclb
int3
sub
mov
cmp
lds
out
fsubl
ret
adc
pop
jno
sbb
mov
test
test
sbb
stos
jne
mov
pcmpgtw
popf
jl
push
pop
xchg
jo
cmp
addb
mov
mov
enter
push
adc
jnp
jns
iret
out
sub
rolb
push
pop
xchg
or
fsubrs
enter
mov
fldcw
jle
sbb
adc
popa
or
inc
and
or
jno
xchg
mov
push
push
and
xor
mov
dec
test
mov
mov
and
add
jo
mov
mov
shll
push
cmp
imul
mov
dec
pop
xchg
inc
lods
stos
outsl
in
jns
and
mov
inc
inc
push
mov
xchg
lods
test
jno
gs
mov
mov
and
lcall
ds
mov
imul
and
ljmp
lock
mov
sub
pop
loop
xchg
adc
dec
test
cmp
daa
es
inc
dec
pop
or
mov
push
sbb
jecxz
test
in
inc
jno
mov
mov
leave
xchg
arpl
push
stos
arpl
mov
ljmp
lret
roll
jne
sub
push
jg
inc
hlt
je
cmp
sub
jmp
jge
push
cli
xor
fildl
std
jmp
cmp
rcl
out
lods
rcrb
or
lock
aaa
outsb
mov
test
mov
lret
sub
cmp
push
inc
xor
div
fidivrl
mov
lcall
adc
imulb
sbb
jmp
dec
inc
and
outsb
jo
ja
ja
movsb
and
lret
push
jmp
in
xchg
mov
enter
cmpsb
push
jl
dec
jl
dec
fwait
xor
lret
inc
xchg
shrl
fldcw
sahf
adc
insb
decb
mov
imul
fdivs
fstpt
enter
lret
jb
gs
cmc
jns
out
ds
stos
cltd
rclb
adc
xlat
xchg
push
adc
jae
incl
ja
popf
push
cmc
sub
out
jbe
jle
pop
push
push
pop
mov
pop
mov
sahf
int3
xor
imul
lods
in
sbb
push
cmp
inc
leave
mov
js
fwait
testb
sbb
xor
in
outsl
push
cwtl
mov
sahf
int
cltd
popl
sbb
rorb
add
das
in
xchg
out
gs
xchg
mov
xor
repnz
cmp
in
icebp
filds
jns
ja
add
and
mov
adc
dec
xchg
xchg
cltd
cmpsl
and
and
cmp
sbb
lahf
pusha
inc
out
dec
insb
add
repnz
jno
jl
ds
push
mov
pop
iret
sbb
cmp
inc
mov
es
sbb
xchg
mov
xor
mov
shr
jae
pushf
mov
cmpsl
test
fcomps
xchg
sbb
test
cmp
sbb
ljmp
arpl
mov
out
cwtl
cmp
push
pop
mov
cli
das
xlat
sub
sub
popf
js
mov
cmp
ret
sbb
xchg
sahf
test
mov
push
outsl
xlat
xchg
mov
inc
xor
jmp
lcall
mov
push
imul
xchg
xor
outsb
jmp
dec
inc
push
adc
cmpl
and
or
jecxz
test
mov
pop
push
mov
xlat
lods
inc
loop
fdivrs
nop
jg
sbb
adc
fwait
mov
push
jnp
in
pop
adc
pop
push
sarb
adc
and
rolb
adc
data16
push
cwtl
xor
addr16
mov
sbb
leave
xor
jle
std
stos
fbstp
or
mov
popa
push
inc
sub
mov
and
xor
pop
cwtl
dec
mov
mov
jae
fwait
lods
jb
mov
bound
xchg
pop
and
pop
adc
pop
inc
andb
iret
sbb
push
int3
or
xor
mov
or
xchg
out
daa
lahf
fstp
jge
dec
leave
dec
lret
sub
sti
scas
ja
imul
imul
lock
dec
adcb
sub
mov
jbe
pop
fnsave
popa
sbb
sbb
mov
pop
inc
cmp
ja
frstor
pop
mov
movsl
movsl
pop
jbe
jns
or
stos
pop
xchg
ret
cmp
lock
sub
loop
cmpl
dec
add
fwait
jae
and
push
pop
sub
dec
mov
pop
mov
or
pop
pop
push
hlt
lret
mov
pushf
cmp
pop
mov
push
aad
arpl
test
sbb
mov
pop
loopne
and
ret
dec
fs
divb
gs
loop
mov
and
fiadds
jg
mov
jmp
insb
mov
outsl
push
lcall
mov
jbe
push
fisubrl
icebp
mov
cmp
mov
sbb
sbb
cmp
sub
testb
sbb
or
pop
adc
jnp
inc
pop
hlt
mov
mov
xor
rorb
jnp
mov
xor
les
inc
jae
inc
in
mov
mov
sub
imul
iret
mov
divl
pop
insl
pop
push
inc
xchg
lock
andl
in
sahf
cmc
stos
xchg
clc
fcoml
push
mov
pushf
xchg
xchg
pop
jge
or
scas
das
fstpl
xchg
jle
repnz
cli
sbb
mov
cli
mov
xchg
hlt
mov
jno
mov
adc
repz
in
or
pop
pop
push
outsl
dec
lods
jns
adc
data16
test
mov
push
push
loop
add
fwait
sbb
test
jnp
sti
adc
loopne
push
ret
sbbb
lcall
xchg
fdiv
inc
fistpll
lret
or
push
loopne
add
add
xor
into
jp
cmpsb
cwtl
cmp
adc
dec
pop
pop
and
stos
std
and
sbb
and
cmp
dec
std
aas
mov
xor
bound
adc
sbb
notb
mov
mov
cltd
cwtl
adc
in
adc
mov
iret
out
dec
testb
cld
push
add
inc
incb
jmp
push
fdivrs
sub
cs
lods
xchg
sbb
cwtl
push
or
hlt
xor
imul
into
jg
cmpsl
dec
inc
ds
pop
jb
je
dec
inc
ss
scas
mov
inc
loopne
jmp
pop
push
pop
jne
fldenv
lds
add
subl
rorb
rcrb
fstpl
xor
inc
mov
sarl
and
adc
mov
push
xor
out
adc
fnstcw
mov
push
inc
int
xchg
lods
jg
cmp
lods
fldcw
popl
mov
insb
lock
stc
iret
dec
sarl
clc
sub
lods
bound
mov
nop
in
inc
add
jecxz
jnp
stos
sahf
fcmovbe
xor
push
addr16
sbb
popa
inc
lods
repz
movsl
xor
adc
push
les
fxch
fsubrl
daa
xor
sub
and
les
enter
mov
add
cli
ret
ret
test
push
push
mov
mov
or
sbb
fsubl
inc
or
in
jge
cmp
imul
push
enter
ret
ret
and
add
jmp
mov
xchg
repz
out
mov
mov
sbb
pop
lret
jnp
aas
xlat
test
test
pop
fisubs
cmp
cmc
aad
dec
out
sbb
dec
lds
inc
in
push
leave
outsb
cmp
mov
test
sbb
rcrb
dec
xchg
mov
jne
inc
mov
imul
call
sbb
and
pop
xor
cmp
decl
clc
adc
orb
cmp
cli
push
mov
iret
mov
xorb
inc
mov
push
pop
xchg
xchg
mov
pusha
and
mov
arpl
je
je
pop
push
insb
mov
sub
sarl
sub
popa
mov
filds
das
add
jle
pop
lcall
in
pop
movsl
jecxz
popf
inc
add
andb
aas
inc
dec
pop
mov
repnz
movsl
xorb
pop
inc
fcoms
xor
fcompl
push
pusha
outsb
loopne
pop
mov
or
ja
jmp
xor
ret
and
ret
mov
and
clc
mov
stos
aam
in
push
rol
jle
lret
xchg
jnp
pop
mov
sub
xor
mov
adc
fidivrl
aam
xchg
cltd
fwait
dec
loopne,pn
pop
int3
sahf
dec
lret
or
sahf
xchg
stos
insl
lea
xchg
mov
jbe
jge
pop
xor
inc
jg
or
push
cmp
push
out
xor
push
xor
pop
and
in
movsl
mov
incb
add
rol
outsb
add
rol
xor
mov
pop
pop
dec
xchg
dec
or
sub
imul
in
xor
hlt
cltd
sub
cs
or
push
xorb
sub
add
jg
lds
sbb
inc
pop
mov
inc
cmpsb
xchg
sbb
ret
clc
or
aas
or
mov
fwait
jo
adc
and
fdivl
cmc
cmp
nop
or
sub
scas
cmpl
xor
leave
sbb
pop
xchg
jae
xchg
ds
xor
jne
fs
sarb
push
add
adcl
std
mov
sub
lds
test
cmp
sub
insl
mov
fistps
xchg
sub
jno
mov
and
mov
and
mov
adcb
or
pop
dec
jbe
xchg
lret
mov
mov
cltd
pop
leave
in
mov
cmp
mov
add
insl
xchg
jne
das
or
lcall
inc
sbb
lret
add
cwtl
cmpsb
add
xlat
xchg
sub
or
dec
adc
into
and
adc
gs
mov
sbb
imul
pop
xchg
xor
add
and
xor
subl
into
xor
sbb
xor
cs
or
in
insb
xchg
pop
mov
or
sbb
test
arpl
pop
push
movsb
lods
adc
mov
lcall
sub
fidivs
test
push
sub
ja
movsl
jl
call
pop
test
jns
xchg
xchg
fs
and
cld
xchg
sar
daa
aam
imul
ja
aaa
ret
xorl
inc
lcall
mov
and
dec
les
sub
add
push
dec
mov
jmp
enter
and
das
sti
cwtl
push
and
or
sub
push
cmp
clc
push
push
push
mov
inc
addr16
sbb
subl
lcall
out
aaa
icebp
shrl
daa
int3
stc
push
add
cltd
rorb
sub
sbb
xor
adc
jae
add
or
cmp
cmpl
inc
test
test
ss
push
cmpsl
out
lods
xor
dec
push
pop
call
push
cltd
inc
push
fistl
inc
and
and
dec
repz
xor
fldcw
add
and
pop
jge
pusha
jp
shrl
rolb
push
sub
fidivrl
lcall
hlt
addr16
xchg
sub
jecxz
add
cmc
add
cwtl
popf
aam
sbb
push
cmp
fdivrs
push
jmp
pop
lods
push
lods
pop
sub
sub
inc
cs
lea
pop
push
sub
int
sub
das
divb
scas
movsb
sbb
cmpsb
aas
push
add
movsb
movsb
add
push
test
push
iret
popa
and
mov
mov
add
cmp
xchg
mov
daa
int
jno
enter
xor
pushf
push
pop
pop
or
adc
cmc
sbb
dec
popf
ss
out
ret
sub
dec
cmp
fdiv
push
jns
cltd
pop
aaa
and
push
lret
pop
shlb
pop
pop
mov
jge
xchg
add
adc
rorb
out
sub
xor
sbb
fldcw
sarl
cltd
mov
rclb
aam
xor
sbb
mov
or
push
das
adc
lods
push
mov
jb
jmp
cltd
lods
mov
leave
mov
leave
test
push
roll
inc
call
icebp
and
ret
dec
sub
sahf
jmp
adc
jo,pn
bound
fstpt
add
popa
cmpsl
pop
or
inc
fs
xor
xchg
mov
mov
cltd
mov
enter
test
mov
xchg
lahf
xchg
mov
pop
inc
mov
scas
xchg
jnp
sub
adc
sub
jle
jo
in
sub
or
cltd
ret
push
mov
popa
es
fs
imul
in
push
les
test
push
ja
popf
mov
mov
cmp
addr16
sbb
cmp
add
sahf
lret
sbb
push
ja
int3
push
jo
lea
int
cmp
or
popa
call
xchg
sub
in
lcall
sbb
lods
sub
cmp
dec
popf
inc
mov
mov
icebp
adc
clc
sbb
pushf
adc
mull
push
jne
mov
jno
adc
sbb
and
in
outsb
and
or
jae
int
mov
movq
xchg
out
loopne
mov
scas
cmp
ret
add
scas
enter
mov
repnz
gs
fincstp
inc
fwait
je
ja
icebp
das
iret
shr
or
jnp
push
cs
fstl
lods
dec
scas
pop
fmuls
add
aam
insl
shl
mov
mov
cmpsb
cli
loope
in
imul
jo
sbb
sub
std
cwtl
xor
dec
int
dec
cwtl
fsubrs
xchg
cli
dec
push
dec
test
sahf
push
int3
lret
pop
xor
push
sub
fbld
arpl
and
scas
adcb
mov
cmpsb
les
sbb
out
adc
daa
lea
mov
sbb
outsb
cmp
push
shlb
lods
cmp
lock
idiv
push
jnp
mov
jae
pop
mov
adc
test
rclb
lret
jo
xchg
xor
bound
mov
jl
inc
mov
repnz
stos
jl
adc
negl
mov
ja
push
arpl
int3
or
or
sbb
mov
cmc
push
adc
jge
mov
mov
fisttps
ret
xchg
mov
jmp
loop
push
or
dec
mov
pmulhuw
and
cwtl
inc
jmp
mov
bnd
sub
fld
mov
adc
ds
jle
cltd
ret
scas
fldenv
dec
inc
mov
iret
mov
push
inc
sbb
lret
fdivr
or
mov
cmc
pop
xchg
fisubl
push
fbstp
lea
xor
and
pop
push
sbb
pop
ja
mov
push
dec
jg
jb
std
jno
adc
push
mov
jmp
cwtl
inc
pop
aas
pop
push
add
mov
out
push
popf
outsb
frstor
inc
sub
arpl
out
clc
adc
pop
jp
xchg
inc
insb
sbb
pop
decl
sbb
fwait
pushf
shr
xor
fcoms
lods
xchg
push
inc
subl
cmp
test
repnz
stos
fnstsw
push
rolb
cmp
outsl
out
fisubrl
jge
cli
cld
mov
mov
mov
xchg
jmp
test
call
xor
or
in
loop
sbb
mov
cmc
sbb
adcl
cmp
sbb
dec
fdivs
out
jl
movsb
in
stos
cli
push
mov
test
in
add
out
clc
mov
enter
jo
jns
pop
or
lods
loope
cmp
xchg
and
jno
inc
add
sub
cmp
iret
push
fstps
daa
enter
test
sub
pop
mov
xchg
ds
mov
pusha
or
bound
or
mov
rorl
mov
jo
mov
aad
add
in
sbb
inc
sub
jnp
or
in
or
sti
fstl
cltd
and
sub
out
jnp
bound
add
push
repnz
mov
and
pop
inc
lahf
popa
fcom
push
sbb
aad
pusha
inc
in
insl
cld
mov
imul
lock
cmp
push
push
pop
sbb
cmc
les
jl
ljmp
push
xor
cs
dec
pop
mov
ret
pop
in
mov
shrb
ds
cli
popf
jae,pt
fstpl
add
sarb
loope
lret
fwait
xchg
sbb
nop
add
out
stos
push
clc
sbbb
loope
jae
mov
ljmp
fcoml
daa
push
sbb
push
and
jno
int
dec
fidivrl
xor
xor
clc
xor
movsb
cmp
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
scas
mov
int
add
add
cmp
test
jecxz
jnp
or
xchg
ja
mov
and
aaa
pop
dec
loope
jl
adc
in
andb
int3
xor
sahf
leave
mov
in
or
and
add
cs
shll
pop
push
xchg
into
rclb
push
lsl
rcll
inc
mov
add
shrl
adc
cmp
out
pop
xchg
push
fxch
add
bound
add
and
jno
mov
gs
loop
ljmp
push
lds
jne
sbb
xor
push
and
add
pushf
jle
push
pop
dec
mov
jle
pop
push
fdivrl
in
mov
push
into
in
lods
arpl
rolb
add
orl
add
sub
sub
addb
into
add
bound
add
int3
in
add
popw
dec
inc
ja
jae
mov
cmp
sbb
inc
cmp
sbb
sbb
lahf
lods
mov
push
fldl
aam
repnz
pop
mov
push
iret
subb
bound
das
aad
push
push
jmp
ret
mov
mov
vmulss
in
sbb
imul
inc
outsl
pop
mov
add
add
add
das
and
aam
aam
ljmp
je
rcrl
add
bound
add
test
fcmovnbe
test
pop
add
and
push
in
shrb
jae
sub
pop
out
iret
cmpsb
dec
mov
jbe
mov
sbb
pop
dec
push
test
mov
fldcw
push
mov
aas
aam
test
leave
add
and
mov
inc
ja
xor
push
push
cmp
pop
add
add
add
lret
dec
jle
sti
cmpsl
mov
dec
mov
dec
add
bound
add
movsb
jecxz
jl
test
jle
call
je
aaa
or
and
dec
inc
popa
xchg
jg
jns
xchg
mov
repnz
cli
hlt
sbb
fcmovnb
pop
ljmp
loop
mov
test
scas
stos
iret
stos
pop
es
sub
jns
int
adc
push
scas
jo
insb
push
mov
add
add
out
lods
cmp
stc
stc
mov
iret
add
bound
add
sub
xor
cmp
inc
in
cwtl
push
shrl
les
cmp
orb
sti
rcr
sbb
jle
out
xor
mov
xchg
mov
aam
nop
inc
fimuls
lds
ljmp
dec
mov
mov
aad
cltd
mov
add
add
add
push
xor
gs
aaa
push
cs
ret
iret
add
bound
add
sub
rcrl
mov
aaa
loope
ret
adc
dec
call
aas
mov
popa
lea
add
fiaddl
adc
xchg
subl
test
jge
repnz
ret
xor
inc
mov
or
fs
mov
inc
mov
and
push
pop
popf
pop
push
mov
add
dec
inc
sub
das
jle
jg
imul
xor
xchg
loop
add
add
jne
dec
jo
hlt
cmp
mov
lahf
or
and
dec
mov
into
lods
add
movb
add
loope
or
test
cmp
or
jg
mov
xchg
mov
test
arpl
mov
test
jnp
cmp
out
sbb
ss
mov
jmp
sti
lock
add
add
add
addr16
and
mov
mov
aas
outsl
dec
jecxz
add
add
fmull
lods
mov
subb
jne
mov
daa
das
jecxz
cltd
sub
int
add
jbe
add
das
adc
imul
call
or
cs
mov
icebp
add
fidivl
fsts
mov
or
xchg
faddp
cmpsb
or
outsb
add
add
add
ret
or
ret
lods
sub
mov
stos
jecxz
add
add
xor
out
xchg
cmp
xchg
flds
movsb
push
add
inc
adc
fbstp
xchg
sbb
mov
repz
das
add
adc
mov
idivl
mov
in
fidivrs
pop
mov
pop
jg
ljmp
popa
cmpsb
jnp
jns
imul
outsl
add
add
add
fld
add
ror
outsl
clc
shrb
jns
insl
or
add
add
ret
filds
aad
mov
cmc
mov
lcall
mov
cltd
mov
daa
inc
mov
adc
movsb
loop
jl
orb
xor
ja
faddp
arpl
int
stos
xchg
aad
test
mov
xchg
lods
ret
push
mov
adc
add
add
add
lock
out
repz
mov
ret
in
aam
mov
outsl
in
add
add
add
popf
insl
orb
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
insb
jp
jbe
ja
js
jno
inc
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
push
arpl
push
inc
add
push
inc
add
sbb
add
or
dec
xchg
dec
scas
dec
ds
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
sahf
sbb
xchg
sbb
add
push
inc
add
push
inc
add
inc
add
inc
add
push
inc
add
sbb
add
mov
inc
add
inc
add
inc
add
sbb
inc
add
sbb
add
sbb
add
inc
add
or
andl
or
inc
add
inc
ds
insl
push
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
add
jbe
mov
pushf
clc
sbb
push
pop
sbb
add
mov
inc
add
or
insb
inc
inc
add
add
add
push
add
push
push
add
push
push
add
add
push
add
add
dec
lahf
dec
mov
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
inc
inc
add
jp
sbbb
out
inc
add
in
adc
imul
insb
push
imul
push
jp
dec
push
arpl
dec
dec
data16
imul
inc
push
jb
inc
je
inc
jae
dec
gs
dec
dec
pop
jp
jbe
pop
jo
inc
gs
dec
js
inc
js
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
je
bound
jns
bound
dec
ja
dec
inc
inc
push
add
outsl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
bound
pop
outsl
push
dec
insb
inc
push
inc
jo
add
add
je
insb
jae
inc
insl
je
push
push
addr16
jo
js
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
fisttpll
mov
js
inc
mov
or
add
bound
add
mov
pusha
pcmpgtb
shlb
ret
pop
push
push
dec
jo
cmp
fdivl
ret
pop
or
lods
mov
stc
inc
jecxz
push
push
dec
cs
cmp
mov
and
shll
lret
cs
cmpsl
xchg
fistl
lcall
call
push
mov
cmp
and
sbb
cli
pop
xor
add
add
mov
push
mov
xlat
push
mov
or
add
bound
add
ds
and
mov
jg
jo
sub
test
in
sbb
int
jns
adc
scas
push
dec
outsb
ret
jae
fsubrl
cmp
repz
mov
mov
loop
stos
or
pop
aaa
mov
or
arpl
shrl
roll
int3
mov
lea
in
xchg
jg
std
sbb
add
mov
jg
ljmp
push
adc
xlat
add
bound
add
and
push
inc
and
xchg
xor
rolb
and
je
out
loope
fistps
sub
insb
pop
or
push
mov
aad
mov
popf
lock
popl
or
or
dec
jmp
jno
jge
aaa
aam
out
or
xor
push
sub
xchg
rorb
sub
add
add
add
cmp
in
fimuls
leave
or
das
fadds
add
add
pop
adc
sti
test
pop
imul
mov
test
scas
jne
sbb
lahf
cmp
adc
and
out
mov
pop
fisubs
dec
push
pop
mov
incl
cmc
sub
mov
scas
sarl
xchg
shrl
xchg
aaa
push
sub
cmp
es
ret
sbb
sub
pop
fldenv
sarl
add
add
add
mov
sbb
std
negb
sub
jnp
xchg
fadds
add
add
push
stc
pop
std
in
xchg
inc
dec
xor
sahf
std
inc
sbb
jl
mov
and
inc
cli
mov
lods
adc
enter
or
dec
pop
outsl
out
push
xchg
jbe
rcrb
or
lds
add
mov
shl
adc
pop
cmp
outsb
cwtl
aam
adc
inc
jno
xchg
cmp
pop
adc
lea
pop
out
jecxz
mov
dec
add
add
add
fidivl
xchg
mov
scas
fbstp
inc
mov
pop
repz
add
add
pop
das
int3
sub
push
or
lds
push
and
cli
jnp
mov
je
mov
iret
dec
inc
fld
addl
mov
add
push
sbb
fnsave
add
mov
mov
xlat
ja
push
bound
inc
enter
pushf
clc
jl
test
add
dec
in
fwait
scas
fdiv
pop
sub
das
push
flds
add
add
push
jo
shrl
pop
inc
loop
ljmp
sbb
mov
popa
xor
js
rorl
sbb
inc
push
das
sub
add
sbb
pop
adc
inc
sahf
daa
in
or
inc
xchg
vmovups
mov
pop
push
out
push
stos
jns
sub
or
xchg
xor
pop
add
add
add
push
add
xor
jb
insl
xor
and
mov
add
bound
add
sub
jle
dec
aam
arpl
dec
pop
mov
fwait
cmp
pop
mov
cmp
jb
pop
les
sbb
addl
mov
cmp
dec
mov
sahf
mov
dec
std
es
mov
jno
cmc
xcrypt-ecb
xchg
icebp
cs
test
bound
arpl
dec
pushf
pushf
add
add
add
cmp
add
mov
out
push
aam
sbb
add
bound
add
adc
adc
sahf
adc
mov
test
fsubs
mov
pop
lock
rcr
sub
jnp
es
mov
arpl
in
ret
sbb
fwait
mov
mov
shld
or
pop
sbb
push
push
cmp
loopne
rorb
imul
add
add
add
mov
jmp
fimull
jb
adc
fiaddl
add
add
out
cli
add
xchg
cmpsb
imul
testb
dec
mov
in
ss
sub
stos
cltd
xor
mov
sub
ficoml
mov
jg
push
sbb
lods
mov
pop
arpl
dec
addr16
lcall
call
add
pop
inc
pop
iret
pop
aad
ss
dec
push
push
cmp
fiaddl
add
add
cmpsl
dec
jnp
imul
mov
movsb
push
jp
push
frstor
mov
or
mov
fnstenv
in
sbb
lea
cli
adc
roll
das
cmp
sub
out
adc
dec
ret
push
in
dec
in
lea
mov
jmp
and
das
lret
fistpll
dec
inc
inc
cmpsl
push
jne
inc
ret
add
add
fwait
test
jg
mov
push
mov
bound
add
popf
cmp
mov
dec
jp
xchg
fsubl
cmp
hlt
inc
out
and
icebp
pushl
lods
test
sahf
int3
push
cli
inc
xchg
fcmovnu
mov
adc
cwtl
insl
cmp
mov
pushf
lods
or
js
jl
mov
sub
pop
scas
xchg
cmc
es
push
add
insb
sahf
sub
mov
xchg
xor
add
add
add
outsb
jae
lret
jle
repz
hlt
jo
fildl
add
add
pop
les
push
lock
pushf
in
add
sbb
dec
xor
jl
xor
sbb
test
mov
or
mov
pop
xor
loope
or
movsl
lret
loop
pop
arpl
pop
pop
das
int
shl
xchg
subb
mov
dec
lret
stc
cmp
faddl
add
add
add
cmc
adc
adc
mov
lds
add
add
bound
add
cmp
and
out
fisubrs
lahf
jge
and
repnz
xchg
mov
data16
lahf
sub
inc
add
aam
out
cmp
xchg
dec
repz
and
mov
incl
gs
or
and
rol
cmp
pop
xor
jl
push
out
imulb
add
cmp
mov
shlb
dec
test
add
bound
add
stc
adc
jp
cmpl
xor
adc
add
push
dec
mov
sub
sahf
jg
inc
aaa
or
pop
dec
es
sub
ror
add
dec
cmp
sahf
lods
arpl
inc
idivb
mov
in
jbe
xchg
pop
imull
push
sub
insb
icebp
stos
add
add
add
aam
push
lock
cmc
das
sbb
xchg
iret
shlb
arpl
faddl
add
add
mov
pop
adc
mov
lods
and
shll
jle
flds
fs
cmc
testl
pop
outsl
jmp
stos
pop
test
adc
cwtl
push
adc
andl
add
adc
gs
mov
sub
cld
push
gs
ret
push
outsb
mov
loope
movsl
das
jl
mov
cmp
add
add
add
sub
fildll
sub
outsl
sub
add
bound
add
out
pop
cli
cmpsb
insb
pop
lods
add
test
xchg
ja
add
lcall
or
dec
dec
add
xor
push
sub
ss
mov
fs
insl
outsb
cmpsl
jge
xbegin
imul
fcmove
adc
xor
in
lret
sbb
xchg
mov
lods
jecxz
cmpsl
ret
aaa
add
add
add
adc
testl
test
add
add
popf
pop
paddb
arpl
rcrb
mov
jns
aad
gs
fistpl
or
idivl
mov
repz
mov
sbb
mov
ja
ror
addb
in
sub
pop
int3
out
dec
enter
sbb
push
pop
mov
xchg
add
add
add
daa
push
imul
pop
jae
in
fldl
add
add
inc
adc
jp
sbb
ja
push
and
inc
sub
lock
xchg
stos
pop
icebp
cli
jne
cs
push
negl
js
xchg
fisttpll
stos
mov
pop
sbb
in
std
jle
mov
fdivl
jnp
sti
fidivrs
mov
rorl
sahf
pop
ja
mov
aas
in
adc
adc
jl
cmpsl
jne
add
add
add
add
jne
jg
clc
cs
push
and
add
add
jb
mov
mov
mov
push
push
dec
push
pop
call
test
xor
ficompl
mov
in
mov
dec
insb
mov
aas
or
movsb
dec
lahf
inc
push
adc
dec
jb
cmp
addr16
pop
push
adcb
adc
ret
mov
add
add
mov
cmp
sti
dec
mov
je
lcall
add
bound
add
mov
mov
addb
in
sarb
outsb
inc
xchg
jmp
repnz
pop
add
clc
mov
scas
fisubrs
js
insb
ja
scas
fsubrl
jp
sub
sbb
outsb
pop
test
fcoml
push
sti
shrl
mov
mov
loope
test
push
out
xor
mov
push
add
add
add
fists
dec
mov
xchg
adc
das
imul
add
add
int3
mov
dec
pop
cmpsb
test
stos
mov
xchg
scas
int3
sbb
addl
xor
pop
movsl
hlt
clc
mov
pop
insb
gs
loope
or
or
mov
in
jp
xchg
adc
stos
data16
adc
or
sahf
xor
push
das
das
jl
xor
cmpsl
xchg
ja
jecxz
aam
add
add
add
fisttps
push
sbb
roll
add
add
cmp
sub
loope
icebp
aaa
dec
sti
fmuls
fnsave
scas
cmp
out
xor
fs
or
jno
pop
mov
mull
mov
or
int
repnz
cltd
loope
push
hlt
push
mov
sarl
push
imul
in
notb
push
rorl
add
add
jle
out
sbb
mov
roll
add
add
dec
pop
sbb
mov
dec
out
ficompl
lods
inc
push
fcomip
dec
push
or
bound
and
cmp
inc
in
push
fs
loopne
xor
inc
mov
pop
daa
ja
or
rclb
pop
pop
dec
push
pusha
xchg
insl
out
fisubrl
fidivrl
and
cmp
sub
pushf
lds
add
add
add
and
cmp
pop
arpl
rolb
add
add
scas
dec
cmp
pushf
or
pusha
mov
dec
dec
mov
mov
mov
mov
fldl
sub
sbb
cli
jnp
cli
lock
leave
and
sub
or
xchg
pushf
scas
inc
outsb
pop
dec
jge
add
movsl
jmp
idivb
adc
lock
out
fmuls
sti
xchg
jecxz
or
hlt
mov
push
add
add
add
xchg
nop
ffree
popf
aam
pop
mov
jno
add
bound
add
aam
inc
sub
bnd
int
push
jae
loope
dec
mov
fwait
jne
sbb
rcrb
push
cmp
mov
push
dec
nop
pushf
mov
lock
sub
shl
int3
loopne
rcr
out
mov
mov
mov
rorl
das
push
out
sub
pop
hlt
xchg
fnstcw
pop
mov
mov
add
add
mov
jbe
hlt
mov
and
cmpsb
and
or
rcl
add
bound
add
inc
stos
sahf
into
xchg
out
jmp
sub
gs
das
adc
int
lret
cmp
mov
push
mov
icebp
mov
cmpsl
fiadds
in
mov
pop
jl
jnp
or
cmp
xchg
icebp
dec
inc
adc
iret
sbb
add
sub
and
mov
pop
add
frstor
add
add
add
ror
mov
sub
out
push
shlb
add
add
cmp
jo
mov
std
push
in
jp
inc
rcl
and
cmc
add
rolb
shrl
and
mov
cmpsb
push
fadds
ret
mov
jno
clc
mov
mov
mov
cmp
adc
add
add
add
fucomi
outsb
and
pop
mov
xchg
roll
add
add
stos
cs
divb
movsl
or
inc
cwtl
dec
inc
push
sarb
in
jnp
shlb
dec
and
hlt
frndint
jno
or
xchg
cmp
cmp
jge
adc
addl
outsl
outsb
push
cli
out
xchg
add
add
add
mov
and
fdivr
roll
add
add
mov
sbb
arpl
pop
ljmp
push
test
dec
xchg
mov
mov
testb
sbb
mov
mov
lds
mov
aaa
arpl
jmp
pop
jns
test
lret
imul
mov
sti
mov
ror
sbb
mov
jo
sahf
lea
ss
add
add
add
stc
call
into
inc
mov
jo
shll
add
bound
add
jo
loopne
pop
lea
cmp
enter
and
fldz
shll
inc
and
rolb
insb
das
ret
pusha
pop
xchg
mov
roll
and
xchg
dec
mov
mov
xor
push
and
fdecstp
and
stos
mov
cld
mulb
cmpsl
adc
iret
pop
lock
pop
loop
xor
add
add
add
sub
sub
cs
add
bound
add
scas
sti
cmp
inc
sub
jbe
fimull
idivb
sbb
inc
test
loope
fstl
mov
call
sbb
or
inc
int3
aam
mov
dec
adc
pop
into
cmp
sbb
int3
push
push
pop
sub
ret
shll
cmp
mov
xchg
ficoms
or
loope
add
add
add
dec
aas
int3
sbb
out
loopne
lods
add
movsl
pop
aad
add
add
xchg
dec
mov
mov
or
addb
sbb
sub
and
mov
jmp
fwait
cli
dec
scas
fcompl
cltd
adc
push
repnz
adc
push
dec
stos
fs
lds
inc
mov
lret
scas
jp
sarb
hlt
xor
xchg
sub
cli
ret
inc
pop
outsl
dec
sbb
lret
inc
repz
mov
add
add
add
test
fildll
int
pop
mov
bound
add
xor
daa
fcomip
cmp
mov
xchg
jl
in
aaa
mov
sub
inc
inc
decb
add
sbb
push
push
pop
fidivrs
xlat
es
pushf
lcall
inc
iret
push
mov
adc
dec
pop
in
xor
jno
call
mov
cmpl
clc
adc
fstpl
test
inc
and
add
add
add
lods
fcomi
sarb
add
mov
add
bound
add
sub
or
and
jg
push
mov
stc
inc
cmpsb
push
cltd
xor
adc
sub
cmpsb
stos
in
xchg
push
cmp
rcll
movsb
dec
pop
sbb
pop
adc
daa
adc
push
popa
or
cwtl
std
cmpsl
pop
xchg
inc
daa
aas
scas
sbb
pop
cmpsb
incl
out
add
add
add
or
ja
dec
cmp
dec
xchg
sub
inc
add
bound
add
sub
push
adc
aam
mov
jne
sub
andb
or
pop
testl
jmp
jbe
lahf
pop
pop
cmpsl
sbb
adc
mov
sub
iret
push
sub
adc
push
jl
fadds
inc
sub
push
sub
mov
push
mov
pop
xchg
loope
pop
add
addb
add
add
arpl
jge
mov
daa
xchg
leave
negl
add
bound
add
pop
cmp
in
push
and
pop
lock
xchg
push
pushf
adc
int3
adc
cld
mov
icebp
call
imul
out
pop
mov
movl
xchg
dec
fdivs
out
jl
mov
mov
nop
outsl
sahf
sbb
push
xchg
rcrb
cmp
sti
add
add
add
daa
ss
xor
and
hlt
movsb
dec
fiadds
add
add
push
add
sub
inc
pop
decb
mov
fdivrl
or
stos
pop
push
loope
mov
in
les
test
or
inc
mov
mov
leave
xchg
sahf
fisttpl
sbb
stos
jg
sbb
orl
mov
test
sub
add
add
add
aaa
out
mul
aaa
cmc
xchg
lcall
mov
add
bound
add
scas
add
cmp
lds
arpl
dec
stc
add
pop
fimull
js
cmp
sub
xor
sub
movl
mov
dec
mov
repz
ljmp
and
cltd
inc
lock
aaa
xchg
int
sbb
clc
addb
mov
pop
cmc
aad
add
add
add
push
aad
out
fucomip
ss
cmp
cmp
bound
add
adc
jl
xchg
lret
pop
aaa
push
mov
pop
insb
dec
in
popf
push
mov
mov
sub
out
xor
mov
repnz
and
mov
mov
pop
pop
mov
in
fistpl
mov
in
add
ds
in
jne
pop
ret
add
mov
addr16
sbb
and
sub
add
add
add
outsb
jbe
lret
outsb
negb
xchg
xchg
jne
add
bound
add
test
mov
ss
dec
push
sub
inc
mov
push
gs
lret
cmp
out
pop
movsb
mov
ljmp
bound
pop
pop
push
mov
std
ss
mov
adc
ja
shr
add
and
mov
cmpsl
outsb
std
push
inc
add
fisubrs
add
cmp
paddsb
nop
rcr
add
xlat
filds
add
add
xchg
jl
and
pushf
mov
aas
sub
sub
mov
xor
mov
pusha
mov
and
xchg
fdivrs
mov
cmpsl
mov
in
push
inc
cmp
pop
mov
movsb
push
mov
xchg
jae
xor
inc
in
je
dec
mov
mov
iret
jnp
das
push
xor
fldl
add
add
add
jle
call
cli
lcall
add
bound
add
cmpsb
xchg
pop
mov
movsl
cmp
jecxz
xor
icebp
or
push
jno
inc
xor
push
pusha
and
sbb
enter
mov
push
pop
popa
insl
shlb
mov
or
les
call
jae
adc
mov
bnd
test
fbld
addl
add
add
test
and
pop
dec
sbb
dec
dec
fwait
loopne
add
add
adc
mov
adc
fcom
pop
loope
lcall
mov
cmpsl
xchg
or
lea
aad
or
mov
push
lret
pop
jne
mov
dec
jecxz
loopne
push
pop
cmc
lahf
arpl
xor
push
arpl
push
cli
hlt
push
fcmovbe
ror
sbb
xor
add
add
add
aam
fnstsw
out
fcmovu
in
xchg
pop
das
std
loopne
add
add
aam
fsubr
jne
mov
int3
out
shll
mov
fcomi
dec
fidivrl
lahf
movsb
add
sbb
add
dec
and
ljmp
rolb
data16
cmpsb
push
clc
pop
popl
stc
lods
sahf
pusha
mov
push
push
ja
pop
mov
clc
push
or
add
add
add
sbb
inc
jecxz
mov
and
jns
pop
loope
add
add
dec
nop
xchg
cmp
xor
iret
cmpsl
lds
push
pop
mov
mov
bts
sub
adc
mov
rorl
mov
popf
lea
and
dec
xor
ds
int3
out
ds
push
testb
adc
add
int3
push
add
add
add
add
add
mov
icebp
and
mov
shl
add
add
dec
and
out
insb
adc
imulb
ljmp
cwtl
or
popf
cmp
dec
lret
mov
jle
ss
adc
lods
out
inc
out
jl
nop
js
outsl
mov
sbb
push
jbe
or
mov
ljmp
sbb
pop
movsb
add
add
add
add
xlat
repz
das
cli
fists
dec
es
xchg
roll
and
add
bound
add
cmp
cmpsl
int3
ret
inc
dec
push
and
enter
sbb
sub
movsl
inc
mov
cltd
loop
and
dec
shr
insb
fdiv
or
dec
lock
pop
pop
push
mov
movl
add
into
dec
xchg
out
int3
mov
fwait
in
xchg
mov
fistps
mov
add
add
add
adc
push
adc
cwtl
out
mov
in
test
add
bound
add
sbb
dec
das
and
aas
jg
add
xchg
outsb
shll
adcb
adc
jnp
pop
push
ljmp
mov
cmp
mov
dec
addr16
sub
pop
test
cmp
outsb
mov
push
out
and
lret
mov
outsl
add
lock
mov
pop
add
add
add
add
inc
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
inc
cmp
pop
ss
pop
cmp
inc
inc
dec
pop
pop
push
dec
inc
add
xor
cmp
xor
aaa
add
xor
push
inc
dec
push
pop
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
pop
pop
dec
push
xor
add
dec
xor
ss
xor
xor
push
push
add
push
pop
push
cmp
xor
pop
dec
dec
push
cmp
dec
xor
xor
xor
pop
add
pop
inc
xor
push
xor
inc
add
xor
xor
pop
dec
dec
xor
add
pop
aaa
push
dec
push
pop
inc
add
dec
pop
inc
dec
xor
xor
push
pop
push
inc
inc
pop
cmp
push
pop
push
inc
add
pop
pop
dec
inc
inc
add
inc
pop
xor
dec
cmp
xor
ss
pop
dec
pop
add
push
xor
pop
xor
pop
xor
xor
push
push
inc
add
push
xor
xor
pop
ss
cmp
pop
xor
xor
push
push
xor
push
pop
inc
xor
push
inc
aaa
inc
add
ss
dec
pop
pop
inc
push
pop
push
dec
inc
add
xor
dec
add
cmp
xor
inc
add
inc
add
add
inc
add
add
add
add
cmp
dec
add
pop
add
push
add
xor
cmp
pop
add
add
inc
add
add
xor
inc
add
push
add
add
add
dec
add
add
add
pop
add
add
add
add
dec
add
add
pop
add
add
add
add
xor
add
add
push
add
cmp
pop
add
add
add
add
inc
add
add
inc
add
push
add
cmp
push
add
pop
add
add
add
add
dec
add
pop
add
add
dec
add
add
add
xor
dec
add
add
add
add
add
dec
add
add
inc
add
push
add
add
add
dec
add
add
push
add
xor
pop
add
add
dec
add
xor
pop
add
add
add
dec
add
xor
pop
add
add
xor
dec
add
add
add
xor
pop
add
add
push
add
add
inc
add
push
add
add
inc
add
pop
add
add
push
add
add
add
add
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
add
sbb
add
inc
cmp
add
add
add
add
add
add
add
cmp
add
add
inc
cmp
add
add
dec
cmp
add
add
jb
push
imul
aas
inc
outsb
jne
push
imul
popa
je
outsl
outsb
jae
je
.byte
