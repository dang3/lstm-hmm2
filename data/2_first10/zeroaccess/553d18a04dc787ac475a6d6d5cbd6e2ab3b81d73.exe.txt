push
mov
sub
sub
mov
push
add
push
push
movl
cmpl
je
cmpl
jle
jmp
push
push
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
push
push
push
push
call
mov
dec
mov
jmp
xor
or
mov
add
xor
mov
mov
mov
sub
sub
mov
or
mov
mov
mov
xor
mov
mov
andl
movl
or
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
pushl
call
jmp
mov
orl
mov
movl
cmpl
je
cmpl
jg
jmp
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
mov
mov
movzbl
xor
mov
jmp
lods
insl
lcall
xchg
add
arpl
insl
jnp
jnp
mov
jnp
aam
rcr
fcmove
test
mov
mov
test
orl
xchg
lods
jle
jno
jle
inc
mov
sti
xchg
jle
or
sub
or
rcrb
push
out
cwtl
dec
imul
out
sti
fldcw
cmp
mov
test
jne
sub
inc
sbbb
push
out
arpl
jb
sbb
xchg
insb
mov
xchg
add
imul
xor
sub
xchg
lods
in
mov
stos
sub
and
xchg
cld
xchg
xchg
inc
clc
mov
stc
mov
sbb
into
and
movsb
cltd
jns
mov
movsl
or
inc
pop
sbb
stc
pop
rcrl
sbb
mov
sbb
jo
out
add
cmpsl
add
loopne
fiadds
mov
sub
test
sub
repnz
cmpsl
xchg
ret
sub
cltd
loope
push
cmpl
mov
dec
mov
dec
sbb
jo
das
dec
sub
sub
mov
push
ljmp
cmp
jnp
jle
divl
adc
jge
sbb
imul
jmp
push
popa
mov
pop
daa
lock
sub
xchg
dec
sub
pop
add
sahf
dec
sbb
mov
inc
pop
cmp
add
insb
jmp
lret
ret
arpl
leave
stc
xorb
pop
mov
mov
pop
imul
popf
mov
out
mov
stos
push
sbb
sarl
and
xchg
minps
idivb
sbb
sub
mov
mov
and
sbb
in
push
push
out
sahf
insb
mov
sbb
cmp
popa
lods
pushf
icebp
xor
les
insl
jge
dec
xchg
mov
and
xchg
adc
sahf
movsl
push
dec
add
es
inc
arpl
dec
dec
cltd
data16
mov
jne
xor
fadd
pop
cld
int
mov
dec
dec
out
aas
repz
aaa
or
test
and
adc
fldt
inc
mov
mov
and
ds
jmp
mov
or
sub
push
cltd
dec
aas
sbb
sar
int3
cmpsb
das
mov
pop
and
sbb
daa
cwtl
dec
iret
push
mov
movb
rolb
mov
leave
cmp
nop
push
out
scas
daa
loop
sub
ja
sub
xor
mov
ret
cmp
test
push
adc
in
insb
mov
repz
dec
in
ss
test
xor
xchg
loop
ljmp
jo
movsb
shlb
mov
fidivl
out
fbstp
push
jnp
jl
rcll
pop
cmpsb
ja
sti
ret
inc
std
mov
dec
call
stos
ljmp
and
daa
push
ljmp
push
int3
inc
outsl
cli
xor
lods
or
sub
push
mov
aam
sub
mov
ret
outsl
ret
out
mov
mov
push
lock
jmp
jg
cmp
cmp
adc
scas
imul
out
and
dec
outsb
and
inc
test
nop
dec
decl
push
dec
sub
and
adc
ja
xor
nop
insl
jbe
jge
inc
aam
inc
leave
mov
push
xor
addl
dec
jecxz
mov
jb
pop
or
sbbb
call
mulb
out
push
mov
or
sub
loop
jns
stc
add
cmp
xor
repnz
jp
std
xchg
mov
add
ret
jno
xchg
dec
or
sbb
dec
mov
sbb
stos
and
in
push
out
xchg
and
andb
xlat
ljmp
test
adc
outsb
popa
mov
mov
es
pop
or
add
push
nop
and
imul
jae
fs
lret
pop
cmpsb
adc
loopne
inc
add
sbb
rcrb
insl
jmp
dec
cmpb
out
adc
cltd
testl
push
mov
orl
es
jle
aaa
popf
repz
andb
scas
movsb
or
and
sti
or
cmp
mov
jne
sub
shll
std
jmp
add
cmpsl
mov
jl
mov
lock
daa
test
mov
jle
adc
sub
lret
dec
pop
pop
hlt
or
js
and
pop
pop
jb
dec
xor
sbb
lcall
fiaddl
add
call
dec
mov
xchg
cli
cs
jle
xchg
lods
push
push
xchg
and
pop
xchg
test
imul
mov
test
push
push
imul
push
sub
cli
enter
cs
xchg
frstpm(287
or
cmpsl
loope
ficoml
push
jnp
in
aam
mov
loop
jnp
int
pop
fstpt
call
push
aas
cld
mov
jp
int
aaa
sarl
push
dec
sbb
add
or
and
xor
pop
jp
dec
xchg
inc
pop
into
aam
pop
mov
add
jne
xorl
push
nop
mov
dec
popa
xchg
in
ds
xchg
add
push
xchg
aad
mov
mov
out
mov
pop
and
icebp
push
push
inc
xor
mov
xlat
push
sbb
xlat
notb
lds
xchg
and
stos
sub
rolb
pop
inc
xchg
or
mov
jle
in
xchg
push
fwait
jmp
out
dec
pushf
lock
icebp
mov
mov
pop
push
cs
fwait
pop
es
fiaddl
sar
cmp
pop
sbb
sub
xchg
sub
lret
adc
xor
test
jl
aam
inc
add
mov
in
pop
push
popf
adc
cmp
and
lcall
int3
sahf
push
ss
sbbb
push
sbb
mov
movsb
lods
mov
ljmp
pop
xor
dec
xchg
mov
ficompl
pop
leave
add
jbe
add
mov
popa
leave
fimull
mov
arpl
mov
and
jno
lret
lahf
and
testb
ljmp
gs
xorl
in
imul
xchg
cmp
repnz
fs
fcmovb
inc
mov
test
fcoms
popf
push
sbb
jle
push
imul
xor
sti
scas
jno
push
mov
fs
movsb
jmp
sub
and
mov
cld
les
jb
jmp
js,pn
in
mov
xchg
test
pushf
lret
cmp
sub
out
xlat
out
ljmp
nop
and
xor
jne
popl
fs
cmp
stos
loopne
sbb
sbb
jno
sbb
test
or
add
mov
inc
and
push
cmp
loop
ror
adc
std
popf
adc
mov
sub
sbb
imul
fwait
cmp
shl
jp
dec
fwait
scas
or
xor
cmpsb
push
mov
hlt
js
adc
jg
enter
into
xor
sbb
xchg
stc
and
loope
add
iret
enter
push
pop
or
sub
add
pop
out
pop
dec
jp
push
inc
outsl
pusha
xchg
fucomp
cltd
ffreep
in
aaa
adc
lock
out
push
xor
stos
push
inc
int3
jg
or
or
sbb
shlb
and
jle
or
xor
push
jne
in
loop
dec
mov
or
ds
les
call
add
mov
sub
shl
sub
scas
push
xor
es
jmp
mov
mov
add
push
jnp
incl
adc
mov
cmpsl
sarb
repnz
push
sub
imul
mov
js
mov
int3
and
hlt
es
push
inc
or
cmp
xchg
and
xchg
push
addb
test
leave
xchg
pop
xchg
push
lret
notl
cmp
popf
sub
dec
in
inc
shlb
imul
sub
es
in
loop
inc
jg
push
jg
cmp
push
push
ja
dec
fs
ret
mov
lret
loop
fstps
mov
mov
and
dec
add
inc
int3
mov
test
in
into
or
or
xor
push
dec
test
shll
adc
xor
and
mov
jb
jbe
dec
lret
mov
sub
call
enter
sbb
stos
rcll
and
popf
pop
jl
ljmp
cmp
jecxz
loope
jle
jbe
outsb
shll
push
pop
adc
das
fists
imul
mov
mov
je
test
out
test
mov
push
ja
movsb
mov
imull
mov
adcb
fs
sahf
cmpsb
and
xchg
xchg
and
out
lea
jg
pop
shrl
adc
push
clc
subl
fnstcw
and
mov
sub
and
mov
pop
mov
roll
outsl
xchg
repnz
or
iret
sub
stos
sub
dec
repnz
or
bound
repnz
or
data16
jne
xchg
in
mov
add
cmc
out
hlt
arpl
dec
hlt
fidivrl
push
aam
pushf
and
fildl
flds
and
mov
clc
addr16
jmp
push
je
dec
sub
movsb
stos
pusha
fdivl
push
push
das
fisubrs
sbb
imul
or
gs
sarl
jecxz
add
flds
fidivrl
loop
sub
nop
or
or
xchg
mov
jae
jle
sbb
sbb
fsubl
mov
es
xchg
sub
xor
and
stos
rorb
sbbb
xor
mov
dec
dec
push
lds
loop
jnp
cmp
addl
lahf
rclb
cli
loop
in
ja
shrl
inc
out
adc
mov
outsl
pop
adc
and
cmc
xchg
outsb
stc
jge
push
mov
and
stos
jp
sti
jb
icebp
insl
sub
ds
movsl
mov
sub
add
std
cmpsb
pop
inc
sub
cmp
js
sbb
jbe
lods
mov
movsl
outsl
lods
inc
xor
inc
into
add
jl
mov
leave
scas
mov
xchg
mov
daa
mov
fstps
or
das
fildl
in
cmp
insb
mov
mov
out
loop
outsl
enter
outsl
popa
or
cs
adc
stos
sub
pop
push
sbb
mov
les
xchg
and
jge
repz
sub
push
cwtl
push
scas
sbbb
dec
fnstenv
loop
bound
les
mov
jo
jle
in
xchg
in
jno
adc
and
insb
mov
mov
outsb
iret
adc
clc
js
jecxz
mov
xlat
add
loop
sbb
pop
xor
xchg
jle
in
and
add
xchg
clc
jmp
vcvtdq2pd
pop
mov
dec
jl
rcll
test
cmp
mov
mov
fdivl
inc
xor
push
and
jbe
loope
sub
icebp
ret
add
sbb
addb
out
ss
aaa
insb
scas
ret
add
cmp
int3
xlat
pop
mov
and
int
cmp
fdivrs
popf
rcll
adcl
sbb
repz
icebp
dec
decl
push
add
sub
in
ret
lock
sub
or
mov
inc
leave
sub
int
jmp
cmpb
add
int
jne
inc
popa
sti
outsl
lret
add
xchg
test
mov
dec
fsts
or
dec
adc
push
cmpsl
push
add
js
ss
popa
and
xchg
ja
xchg
cmpsb
dec
scas
xchg
stos
add
stos
xchg
pop
cmpsl
cli
xchg
das
add
decl
pop
cmp
and
xchg
dec
imul
jmp
xchg
add
notb
xlat
adc
add
je
mov
movsb
fcom
mov
inc
fadds
or
into
xor
dec
and
xchg
and
mov
dec
mov
dec
mov
in
out
ficoms
push
stos
mov
repnz
mov
sbb
pop
mov
dec
xchg
mov
ret
adc
adc
push
test
into
pop
leave
pusha
inc
push
dec
mov
or
xchg
scas
or
cmp
popf
inc
cmp
out
sbb
mov
je
xchg
pop
mov
shrl
je
pop
cmp
mov
xor
stc
mov
inc
lcall
enter
iret
add
xchg
cmp
adc
jae
mov
into
sarl
push
imul
in
arpl
push
mov
sbb
testl
push
mov
lea
rcrb
lret
or
mov
mov
xchg
jno
rclb
mov
sahf
xchg
ds
inc
jp
cmp
ds
icebp
ds
pop
pop
ds
mov
mov
mov
or
cmc
rcrl
ds
fldcw
shlb
stos
movsb
insl
push
int3
adc
inc
sub
dec
fdivl
sbb
inc
pop
lock
outsl
jbe
shrl
leave
or
outsb
mov
decl
or
mov
cwtl
push
lods
cli
pop
psraw
push
inc
mov
adc
pop
push
pop
icebp
cmp
push
addr16
sti
or
pop
pop
jg
or
shll
sahf
xchg
shrb
mov
mov
test
pushf
cmp
jecxz
fbld
scas
shr
mov
xchg
inc
pushf
je
inc
jg
add
xlat
lret
dec
pop
out
enter
movsb
scas
scas
mov
fcomps
mov
inc
push
pop
pusha
cmp
jp
xor
stos
inc
xor
adc
inc
mov
jbe
or
push
xorl
adc
cmpsb
cmpb
inc
ficomps
lret
andl
jbe
xor
mov
sbb
and
sbb
add
addr16
adc
pop
adc
aas
loopne
out
test
adc
xor
push
dec
dec
pop
mov
mov
ret
ss
mov
in
pop
fcompp
nop
dec
sbb
push
jno
mov
jp,pt
add
rorl
loope
dec
mov
cmpsl
mov
push
mov
pusha
js
adc
lcall
or
mov
data16
nop
mov
sahf
cltd
imul
push
jo
xor
lcall
push
or
orb
daa
inc
mov
popa
cmp
jbe
popa
sahf
in
and
ret
sub
add
mov
cld
aas
jb
and
mov
push
std
dec
cmpsl
add
jp
popa
or
lea
push
mov
mov
jb
mov
ret
inc
sub
add
sub
sub
lret
lahf
sub
inc
lahf
mov
lcall
subb
test
cmpsl
xor
cmpsl
sbb
mov
in
dec
fdivr
rcrl
shlb
outsl
sub
dec
push
jae
jno
pop
push
loop
pushf
add
xor
add
es
faddp
into
shl
jmp
pop
add
sbb
mov
lret
pop
adc
mov
xor
arpl
addr16
adcb
into
inc
adc
icebp
dec
mov
xor
clc
xor
push
sbb
fists
into
leave
lahf
es
mov
pop
adc
push
fistpll
rcrb
addl
pop
mov
jmp
jecxz
dec
das
outsb
jae
test
out
fidivrl
cli
and
mov
into
or
xchg
xchg
xor
ficoms
xchg
adc
mov
in
arpl
and
rcrb
aaa
enter
aad
lock
pop
or
icebp
ljmp
xchg
xchg
pavgw
jle
mov
arpl
test
xchg
push
orl
scas
popl
shrl
shll
xor
fstl
hlt
ret
xchg
cli
mov
mov
je
cmpsb
push
push
daa
nop
dec
or
mov
push
jge
cld
pop
shr
mov
data16
shl
jnp
stos
addb
cmp
mov
cmpb
loop
js
aaa
out
out
ffree
push
sub
pusha
iret
bound
push
insb
ficoms
pop
or
addr16
out
inc
cmp
sahf
test
sub
jne
mov
xor
jnp
jno
test
or
jg
xchg
repz
and
fdivrp
aaa
cld
popf
in
jnp
or
inc
ja
ja
push
xor
sbb
inc
dec
incb
lahf
cmp
push
jnp
pop
dec
ljmp
lods
je
dec
cmp
inc
cmp
cmp
mov
push
enter
out
dec
aam
inc
outsb
shlb
aaa
data16
or
push
sbb
and
sub
inc
mov
outsl
ret
sub
adc
iret
aad
pop
push
push
or
and
adc
shrl
jl
xor
sub
rol
popf
aam
in
inc
jno
aad
pusha
into
mov
dec
sub
mov
dec
test
jno
pop
lret
and
aas
inc
fs
add
inc
lea
cmp
imul
out
jbe
pop
iret
sbb
add
out
icebp
pushf
mulb
adc
scas
xchg
push
mov
push
add
arpl
push
and
mov
das
mov
incb
push
cvttps2pi
and
mov
pop
fimuls
mov
not
std
sbb
adc
std
pop
pop
mov
sub
outsl
push
sbb
or
inc
push
aam
cltd
sub
and
cltd
je
jmp
stos
or
and
shll
jmp
and
push
scas
push
dec
inc
js
pop
es
addb
popf
sbb
pop
test
mov
fisttps
sbb
mov
sbb
fsubs
sbb
orb
aad
push
call
xor
pop
or
fstl
xor
popl
jne
aam
test
push
pop
sbb
pop
or
mov
cmpsb
xchg
xchg
mov
jo
mov
xchg
mov
mov
sub
push
xchg
lods
or
push
cmpsl
add
xchg
loopne
jecxz
jnp
shl
push
rolb
outsl
sub
push
js
jb
or
jae
fiadds
pusha
iret
sbb
int3
shlb
in
jns
inc
aam
inc
push
gs
sub
mov
or
movsb
lods
xchg
orl
test
sub
aas
cmp
into
cmp
sbb
pop
inc
push
xlat
fs
addr16
dec
lods
xchg
adc
stos
adc
mov
iret
jnp
das
xor
push
sbb
lcall
cmc
subb
ret
inc
inc
and
scas
iret
aaa
loop
inc
sbb
lods
sbb
mov
mov
cmc
mov
and
scas
js
inc
cmc
leave
pavgw
cmc
add
mov
pop
bound
cmpsb
aaa
xchg
mov
xor
inc
or
xor
mov
inc
and
icebp
cltd
dec
jae
add
repz
test
imul
rclb
mov
mov
pop
idiv
lock
jo
outsb
ss
jbe
lahf
fisttpl
push
fmuls
lock
into
clc
outsb
outsb
icebp
lahf
push
popa
cld
dec
dec
xchg
movsl
mov
push
sub
ja
inc
xchg
fdivs
les
jp
cmp
lret
inc
daa
xchg
mov
add
adc
xor
adc
insb
and
in
jle
cmp
clc
jecxz
mov
cmpsl
add
jge
cmp
imul
pop
cmp
jge
sahf
les
adc
mov
xor
lcall
es
ret
dec
clc
jns
into
add
pop
daa
mov
orl
negb
mov
jns
xor
push
stos
mov
cmpsb
das
and
xor
adc
inc
stos
in
test
push
aam
pop
aad
pop
loope
and
xor
aad
fdivr
jmp
mov
call
loope
pop
sub
jmp
adc
lock
cld
jo,pt
adc
mov
add
inc
jns
jae
lcall
inc
pop
xor
cmpsl
fisttpll
les
mov
test
incb
sbb
sub
fsubl
xorl
loope
add
outsl
pop
jl
int3
pop
popf
aad
adc
js
or
mov
jp
pop
pop
sbb
mov
mov
push
mov
push
jecxz
push
neg
add
sub
popa
inc
mov
xchg
js
outsb
cmpsl
frndint
sub
rolb
mov
pop
and
sub
aad
mov
adc
cs
jno
test
xor
and
and
daa
outsb
jge
mov
jge
xor
add
aad
add
push
fistps
xor
movsl
gs
add
sub
cmp
sub
ja
and
mov
stc
cmp
in
lds
test
xchg
cli
fs
xor
dec
pusha
sbb
mov
enter
pop
cmpsb
dec
mov
dec
jge
fisubrs
nop
xchg
ret
int3
inc
lret
lcall
and
push
hlt
lahf
mov
dec
mov
sub
out
inc
loop
add
push
mov
mov
sarl
cmp
or
test
gs
or
cmp
scas
jl
out
or
cmpsl
movsl
xor
test
push
fsubr
cmp
dec
movsl
inc
inc
dec
enter
les
jo
pusha
xor
scas
cld
out
and
cmp
movsb
xor
dec
scas
shll
pop
and
mov
adc
cli
dec
cwtl
cmp
outsl
js
adc
movsl
scas
inc
out
xchg
sbb
jmp
stc
jbe
mov
mov
lcall
sbb
adc
loope
xchg
movsb
sbb
inc
sub
js
fcmovnbe
cmp
int
inc
dec
imul
push
push
jns
orl
dec
push
mov
es
push
scas
cmpsl
cmovs
mov
call
stos
lods
xchg
ds
or
pop
bound
fidivl
mov
fwait
lret
xchg
add
sub
xor
pop
dec
jae
pop
push
pop
cs
dec
repz
add
in
add
ret
test
mov
mov
xor
ljmp
ss
test
dec
push
mov
sbb
fcomps
cs
add
movsl
cmp
negl
jbe
push
jnp
rol
bound
jns
fists
fistps
cmp
fs
push
and
gs
clc
ds
push
mov
mov
cmpsb
cli
mov
rcl
push
jmp
mov
push
test
je
jge
push
sti
mov
repz
or
and
or
ds
xor
test
jbe
push
and
mov
push
push
or
sub
push
cmp
add
pop
push
pushf
notl
mov
or
sbb
cmp
cltd
pop
sub
movsb
rorl
in
jmp
icebp
mov
add
rorl
sub
dec
in
lds
stos
jmp
pop
test
outsl
dec
and
aas
xor
popf
inc
aad
jle
shlw
inc
fsubl
lods
lret
adc
jle
xor
cmp
push
cmc
sub
mov
jae
into
std
lods
sub
nop
cld
iret
sbb
jg
rolb
aad
mov
and
nop
push
test
mov
dec
pop
push
mov
jp
xor
dec
mov
in
outsb
jne
mov
xchg
xchg
cwtl
add
or
shld
xchg
pop
je
jl
cmp
jmp
out
or
cwtl
lea
push
outsb
sbb
jmp
outsb
dec
vpcomub
pop
and
mov
mov
xchg
xchg
mov
lods
sbb
xor
lahf
fsubr
push
sbb
jmp
sti
adc
jbe
sbb
shll
andl
sub
add
jnp
popa
add
fcomip
or
add
xchg
cwtl
fidivrs
shll
sti
push
push
dec
jg
sub
inc
iret
push
daa
add
mov
cld
xchg
icebp
push
cli
repnz
sub
scas
cltd
or
sbb
or
sub
idiv
mov
daa
repz
jo
es
sar
data16
xor
inc
push
je
or
mov
shlb
push
xor
mov
addr16
ja
and
stc
xor
dec
xchg
loop
push
sub
pop
and
lret
imul
add
in
insb
and
sub
insb
enter
cmpsl
lods
lea
sub
add
xchg
out
test
mov
sub
cmp
iret
jno
dec
push
popa
sbb
icebp
mov
xor
pop
dec
xchg
jg
pop
push
dec
je
scas
rclb
jmp
mov
inc
sub
imul
test
fldenv
pop
mov
int3
inc
inc
or
jecxz
jns
mov
dec
pop
xchg
inc
lock
mov
jp
andb
adc
mov
mov
cmpsl
mov
xchg
aaa
or
testb
in
out
push
aam
cltd
and
fcomps
je
mov
rcl
jle
and
mov
out
sub
sbb
add
pop
or
sbb
imul
cmp
push
and
fcom
arpl
xor
fisubrl
jp
int3
fcmove
jp
mov
rcll
jno
mov
jbe
cmpsl
xor
push
mov
test
fsubrl
fnsave
jge
xor
aad
jmp
or
mov
adc
and
notl
call
ret
dec
sbb
adc
push
or
fwait
sub
int
mov
aaa
adc
adc
pop
jecxz
xchg
add
mov
in
outsl
ljmp
lret
inc
sub
in
xchg
inc
lods
mov
lcallw
test
scas
nop
stc
ret
rep
shrb
cltd
ret
dec
fiadds
sbb
mov
xlat
les
mov
movsl
addl
mov
int3
xchg
fwait
inc
cmp
lret
insl
push
jnp
push
out
iret
pushf
or
pop
cmp
push
xchg
pop
and
xlat
rorb
push
test
add
ja
fadd
inc
stc
xor
mov
mov
scas
data16
sbb
jecxz
inc
lcall
add
xchg
movsl
gs
loop
xlat
adc
adc
ret
repz
dec
lahf
xchg
cmpsl
jae
or
sbb
inc
sbb
xorb
dec
fcomps
add
and
iret
neg
mov
add
mov
ficoms
mov
pop
push
lret
test
sahf
rorl
icebp
ficoms
or
mov
jo
divb
mov
lahf
mov
stos
orb
mov
les
push
icebp
sti
jae
dec
hlt
sub
testb
clc
cmc
xorl
lds
mov
mov
les
dec
cmp
jo
push
cmp
cld
aas
mov
pushf
aaa
subl
xor
add
push
inc
lods
sub
leave
pop
cmpsb
push
adc
dec
xor
or
pop
aad
lock
cmp
push
aaa
mov
xor
push
lret
sbb
test
out
test
xor
xchg
adc
xchg
loope
dec
ja
xlat
cmpsb
ds
xchg
cld
push
inc
xchg
sbb
inc
jg
insb
and
xchg
xchg
xor
in
add
inc
out
dec
and
inc
xor
inc
lahf
daa
xor
lods
xor
addr16
pop
sti
dec
aad
enter
mov
ljmp
mov
outsb
push
cmp
stos
cld
and
sub
sub
mov
xchg
jl
test
clc
dec
stos
ja
sub
scas
je
dec
test
xchg
idivb
jge
sub
or
inc
or
add
mov
cmp
mov
mov
mov
xchg
mov
dec
xor
or
xchg
add
push
xor
notl
mov
pop
iret
test
xchg
xchg
push
jmp
or
cs
sub
mov
mov
lcall
cmp
insl
mov
cli
mov
sbb
dec
rcll
add
jg
test
or
push
in
scas
dec
push
add
loop
xchg
add
cmpsb
dec
test
and
cltd
jmp
xchg
out
adc
lret
pop
jge
in
xor
sar
movsbl
out
loop
push
xor
sbb
inc
loopne
ret
adc
adc
sbb
addr16
mov
xlat
xchg
test
adc
rolb
lods
sbb
popf
pusha
cmpsb
mov
pop
inc
pushl
mov
cli
leave
fbld
or
xchg
out
pop
xchg
push
lret
pop
pop
scas
cli
rcr
clc
add
movq
repnz
jg
enter
aad
pop
jnp
mov
ret
pop
mov
adc
aaa
push
add
mov
gs
xchg
iret
std
insl
and
inc
ljmp
xchg
sbb
adc
push
jg
mov
mov
mov
push
sub
jle
negb
sbb
mov
lret
or
movsl
or
pop
in
daa
fbld
sbb
mov
mov
movsl
test
rclb
lret
roll
stos
mov
shlb
or
mov
or
jg
mov
testb
ja
adc
xor
mov
int3
imul
push
icebp
loope
sbb
test
jnp
add
js
or
je
mov
dec
jp
mov
cmp
push
rcrb
push
and
push
pop
sbb
into
sub
insl
xlat
movsb
xchg
add
jb
mov
mov
push
xchg
int
pop
mov
inc
ss
adc
xchg
ss
out
dec
mov
in
notb
popf
sbb
ljmp
and
adc
xlat
fsubr
daa
xor
inc
gs
cld
add
mov
and
addr16
aam
cmpsl
or
rcll
push
in
xchg
push
lods
shrb
mov
jp
dec
subb
out
hlt
stos
out
push
inc
push
in
xchg
xchg
cmovne
mov
addb
mov
push
mov
imul
testl
imul
push
sbb
jb
aas
mov
sub
into
mov
push
jl
mov
nop
shlb
or
and
insb
mov
bound
outsb
jle
pop
int3
aas
add
pop
mov
cmp
push
call
xor
fwait
push
out
rcrl
in
test
fwait
sub
stos
and
push
mov
lahf
insb
mov
sub
pop
fs
adc
je
fwait
lcall
cmovle
or
and
dec
je
add
enter
mov
add
add
mov
inc
mov
cmpl
jge
jmp
push
push
call
cmpl
jb
add
movl
andl
mov
inc
mov
cmpl
jb
jmp
push
call
cmpl
jb
mov
mov
mov
or
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
orl
mov
movzwl
sub
mov
xor
xorl
add
mov
lea
mov
adc
mov
adcl
xor
sbbl
add
orl
mov
notl
lea
push
adc
mov
orl
xor
orl
add
orl
push
or
mov
push
pushl
call
and
mov
movzbl
sbb
mov
mov
mov
movl
mov
mov
lea
orl
mov
sub
movl
movzwl
sbb
mov
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
addl
sub
movl
mov
movl
mov
mov
movl
mov
cmp
movl
je
mov
mov
xor
xor
lea
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jg
jmp
push
pushl
pushl
push
call
jmp
mov
xor
orl
div
mov
sbbl
mov
andl
xor
xor
sub
movl
cmp
movl
jne
mov
xor
mov
sub
mov
or
mov
xor
xor
sbbl
add
sbbl
add
mov
movl
cmp
jae
xor
lea
mov
mov
xor
add
lea
movl
mov
mov
mov
cmp
movl
jbe
addl
addl
jmp
decl
addl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
pushl
push
call
jmp
mov
xor
adcl
inc
incl
subl
add
cmp
jb
notl
mov
add
mov
adcl
xor
sbbl
mov
sub
add
sub
mov
sbbl
xor
xorl
sub
subl
ror
xor
mov
xor
add
sub
imul
mov
mov
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
jmp
iret
xor
jne
jns
cmp
mov
jge
mov
jnp
mov
jnp
pushf
push
dec
sbb
lahf
out
dec
cmpl
dec
add
push
out
fstps
push
inc
mov
mov
xorl
fisubrs
or
jb
xorl
int3
dec
ficompl
xor
xor
sub
or
sub
push
dec
xor
or
xchg
fimuls
mov
inc
mov
mov
test
sub
pop
push
imul
lods
rcll
cmp
scas
xchg
fimuls
js
loopne
adc
jl
subb
mov
dec
lods
repnz
cmc
out
cs
arpl
xor
pop
shll
mov
sub
bound
sbb
and
adc
push
in
movsl
jp
or
call
dec
mov
je
or
or
pop
push
jno
cmpsb
push
aad
and
push
imul
jmp
xchg
pop
xchg
scas
xchg
sub
inc
lods
sub
push
cmp
sub
dec
mov
xchg
scas
and
or
es
sub
iret
hlt
bound
clc
add
xchg
push
dec
shrl
leave
out
pop
pop
or
daa
lret
or
je
into
sub
std
jge
call
in
jg
xchg
cmp
jbe
nop
inc
loop
sbb
dec
add
add
test
sahf
mov
and
imul
int3
pop
dec
dec
or
or
shll
adc
test
bound
jne
sub
xor
lods
push
mov
jns
jo
cltd
lahf
mov
sub
cmp
out
cli
bnd
mov
dec
mov
sti
js
sbb
jge
pop
jge
mov
inc
adc
mov
scas
fadds
fcmovu
bsf
jb
repz
out
gs
lret
pop
jb
cli
stos
popl
pop
jmp
lea
lock
call
in
sub
out
aad
cwtl
pop
adc
inc
xor
lahf
mov
fstp
js
jg
js
hlt
in
addr16
stc
add
repz
movsb
andl
cmp
enter
icebp
and
pop
pop
loope
push
imul
cmp
loope
pop
aam
push
adc
rorb
les
sub
or
shlb
fsubr
test
test
call
fsts
aam
push
and
mov
mov
sub
int
push
movsb
jp
xor
jge
sbb
pop
inc
and
adc
sahf
push
push
sub
in
fwait
or
push
sti
bound
mov
fwait
scas
aam
and
mov
mov
mov
or
jecxz
sbb
aam
out
in
xchg
call
mov
pop
stc
dec
pop
ss
jge
mov
sbb
and
inc
push
ret
cwtl
sbb
out
lods
pop
push
in
cmpsl
pop
pop
das
lods
jle
fiadds
sub
dec
mov
rcll
arpl
pop
mov
and
adc
dec
mov
mov
add
sarl
shlb
jle
icebp
push
pop
add
cmp
jne
sar
or
sub
jns
and
sbb
sbb
xchg
adc
cld
mov
xchg
fstps
das
mov
idivb
das
sub
lret
sbb
adc
sarl
lds
mov
jmp
cmpsb
lods
out
adcl
in
cld
bound
sub
jne
cli
mov
mov
cs
movsb
add
cs
cmp
and
mov
jmp
clc
ja
jl
cmp
and
aad
inc
out
push
sbb
lea
or
ds
out
jecxz
adc
and
mov
cvtdq2ps
cmp
mov
mov
movsb
aas
jae
mov
rcrb
pop
cmp
divl
clc
jmp
adc
push
add
lods
dec
cmpsl
and
push
daa
pusha
inc
and
and
adc
sbb
aam
and
sbb
fidivs
scas
xchg
dec
fstps
icebp
js
arpl
xchg
pop
mov
cmpsb
in
mov
cmpsb
or
sahf
fldt
test
insl
andl
flds
adc
jecxz
dec
inc
jae
xor
mov
gs
nop
fistl
addr16
mov
xchg
popa
js
outsb
in
fcoms
iret
les
call
mov
push
fldt
aad
mov
out
jo
add
std
in
sub
xor
add
mov
jmp
push
or
fdivrs
sarl
mov
cmp
icebp
jg
push
mov
aaa
push
dec
dec
cwtl
imul
pop
inc
pushf
enter
push
cmp
fdiv
jns
popf
test
into
xchg
jo
sti
hlt
scas
cld
scas
repnz
mov
lds
push
dec
dec
shlb
fcomps
rcll
mov
hlt
jg
ja
cld
jp
pop
xchg
mov
mov
mov
stos
daa
mov
scas
std
je
jnp
lea
fcmovnu
aam
scas
jo
test
arpl
hlt
clc
hlt
push
shll
pop
popf
popf
stc
pushf
xchg
in
push
push
pop
xlat
ret
dec
xchg
es
les
mov
pop
inc
push
add
push
lea
fsubs
adc
mov
fldt
sub
adc
mov
push
in
stc
popa
mov
incb
fmull
ss
cmpl
xor
push
mov
in
xchg
lret
jno
movsb
sahf
xchg
daa
clc
loope
imul
adc
jmp
pop
mov
xor
movsb
arpl
scas
clc
or
jp
iret
sbb
mov
push
sbb
jge
mov
pop
add
rcll
pop
dec
inc
out
pushf
aad
clc
cli
call
mov
adc
lods
mov
jl
shl
pop
sbb
sub
in
insb
xchg
add
out
out
inc
loop
jmp
les
outsl
data16
lods
push
pop
insl
xchg
jle
push
das
jbe
sbb
cmp
or
movsb
mov
ja
dec
mov
push
jb
insb
loop
loopne
add
in
into
icebp
fbld
push
adc
sahf
dec
loopne
lock
popf
call
mov
xor
pop
sbbl
dec
dec
stc
out
popa
dec
jne
enter
jge
bound
or
sub
outsl
out
sub
mov
mov
shl
insb
xchg
nop
xorl
sbbb
repnz
add
cltd
scas
mov
ret
add
dec
push
test
stos
movsb
xor
add
imul
sahf
adc
push
or
jo
addr16
jo
daa
es
jge
add
rorb
call
lcall
mov
xchg
lods
in
out
aad
jnp
xor
jge
les
dec
add
and
out
inc
mov
jecxz
imul
mov
mov
addr16
jns
add
ficoml
sbbb
iret
insb
dec
jne
mov
into
ret
ds
pop
fidivl
xchg
test
mov
mov
sbb
out
lods
cmp
pop
lods
mov
sbb
cmpsl
out
push
adc
fidivl
mov
test
outsl
mov
inc
repz
xchg
jno
sbb
sbbb
cmp
fiadds
gs
push
inc
adc
hlt
or
pop
inc
imul
and
xchg
cmp
cwtl
sub
adcl
bound
mov
nop
outsb
leave
adc
push
or
jnp
adc
mov
das
mov
pop
std
pop
insl
ror
cmp
jl
cmp
cwtl
mov
fdivs
frstor
add
ljmp
notb
test
jne
or
loop
pop
popfw
loopne
inc
int3
sbbl
insl
insb
data16
xor
and
jge
out
pop
outsl
je
mov
jmp
mov
mov
xchg
addl
add
stos
cmp
jno
or
jne
and
xor
sbb
push
cmp
sbb
pop
xchg
jle
inc
loopne
xchg
jb
push
aad
jecxz
jmp
dec
mov
inc
fnstenv
xor
mov
xchg
rorl
into
ss
cmc
outsl
inc
ds
faddp
xchg
sbb
sahf
in
movsl
cmp
lret
mov
inc
lods
sahf
pop
pop
jmp
insl
lods
cmp
jp
idiv
pop
push
cmc
movsl
inc
xchg
in
icebp
into
cmp
insl
imul
adc
mov
pop
jne
fwait
push
push
cmpl
cmp
jno
or
mov
sbb
push
je
jnp
or
push
mov
ljmp
add
data16
jnp
cli
xlat
test
xchg
inc
xchg
rcrb
adc
jns
xchg
je
sbb
xorb
inc
mov
jl
dec
es
cmp
loopne
or
in
rolb
sub
mov
aas
jns
fidivl
mov
push
push
fdecstp
sub
cmc
scas
or
lret
pop
xchg
cli
and
xor
mov
add
sub
pop
pusha
iret
iret
add
push
in
mov
fiadds
test
xor
neg
mov
cmp
lret
push
rolb
decl
adc
cmp
add
fdivrl
sbb
ljmp
imul
and
js
out
adc
mov
lods
movsb
mov
imul
rcrb
inc
lods
xor
int
out
jl
clc
dec
insb
in
sbb
cmp
inc
add
fnop
and
jbe
sub
sbb
xor
jae
mov
mov
jnp
mov
jge
mulb
mov
adc
in
fdivrl
dec
fwait
and
mov
xor
push
scas
adc
adc
testb
lret
cmp
or
sbb
inc
rcrb
push
ror
adc
pop
outsb
loop
cmp
sahf
inc
cmp
push
cmp
and
sub
call
jne
lcall
shrb
jae
insb
fnsave
sub
stos
nop
out
mov
mov
inc
push
cs
mov
cwtl
mov
shr
mov
push
xor
xor
shlb
std
sti
pushf
cmpsl
or
push
mov
inc
push
imul
sbb
pop
imul
inc
aam
jns
or
jl
push
mov
aas
cwtl
inc
inc
pop
test
shrl
fstps
sub
movb
out
push
fistps
push
in
add
flds
adc
lret
mov
sbbl
pop
xor
repz
enter
push
adc
cmp
lea
lock
fistpll
jns
dec
pop
sbb
mov
push
shl
mov
in
ja
mov
lods
pop
das
push
xchg
adc
cmp
mov
clc
mov
ret
aas
jnp
insl
ret
xor
xor
jno
push
outsl
mov
xlat
mov
sahf
imul
fidivl
sahf
jns
daa
repz
int
out
daa
loope
dec
and
imul
mov
sub
sbb
scas
pop
add
push
hlt
popa
ficoml
fcmovbe
js
push
insl
mov
testl
push
sbb
test
sbb
in
and
lret
insb
sbb
add
fnsave
lods
inc
mov
in
or
push
push
rcrl
std
or
sbb
dec
inc
push
rorl
sbb
jo
scas
movsl
mov
cs
stos
pop
mov
lcall
rcrl
xor
jmp
fxch
movsb
and
cmc
push
lahf
mov
stos
inc
ds
inc
mov
adc
and
pop
add
dec
or
mov
cmp
add
scas
mov
test
js
outsb
subb
in
push
leave
and
jecxz
xchg
cld
jecxz
xchg
inc
mov
es
dec
mov
or
in
iret
fidivrl
nop
adc
mov
xor
sub
popf
push
xor
mov
call
aam
push
xor
insl
rolb
xchg
cs
dec
das
loop
loop
ss
loopne
scas
cmc
outsl
cli
jno
ret
lds
mov
les
jae
mov
nop
int3
lea
push
pop
add
and
dec
std
sbb
enter
xor
in
and
scas
or
loop
mov
cld
dec
pushf
lret
les
cmp
mov
mov
sub
setb
mov
add
inc
stos
xor
jo
mov
mov
cld
movsl
and
mov
iret
pop
inc
mov
inc
inc
int3
xor
lret
incl
adc
inc
mov
in
std
popa
push
pop
and
std
mov
aas
xor
cmp
dec
push
rcll
arpl
jne
push
add
loop
sub
mov
aam
mov
in
add
repz
cwtl
test
sbb
cs
mov
sbb
xor
pop
sbb
stos
fidivrl
into
jp
adc
xchg
pop
jl
or
dec
mov
cmp
xchg
xor
loope
lret
and
and
loopw
out
jae
dec
add
ja
pushf
test
into
test
ret
adc
cmc
and
out
push
out
cmp
xchg
sar
ja
lret
adc
lcall
and
movsb
mov
lds
insl
xchg
outsb
cwtl
stc
js
mov
fisubl
lds
jnp
add
add
or
and
or
dec
dec
jecxz
push
or
mov
adc
pop
cmpl
ficoml
sbb
les
nop
mov
pop
xchg
xchg
ds
fists
dec
sbb
jmp
and
mov
pop
sbb
inc
sub
dec
lea
fwait
repz
icebp
jns
mov
mov
mov
cld
dec
iret
inc
adc
and
sub
and
jb
dec
add
repz
xor
repz
sub
in
xor
fwait
dec
and
inc
imul
mov
adc
cld
pop
aas
repnz
mov
data16
aad
movsb
jb
push
loope
sbb
and
lcall
stc
pop
fsts
xchg
test
mov
pop
rcr
mov
iret
mov
out
mov
push
push
mov
push
push
jmp
mov
ss
fadd
and
jb
push
pop
mov
stos
mov
rcrb
xchg
xchg
scas
lea
das
fdiv
cmpsl
insl
jmp
pusha
adc
ret
shr
fimull
inc
xorb
xchg
rcrb
insb
orl
sub
lahf
addr16
loope
mov
pushf
incb
pop
pusha
imul
mov
fwait
ja
faddl
and
mov
dec
xor
inc
idiv
push
lret
mov
sbb
lret
pop
pop
xchg
xchg
sub
sbb
repz
push
test
push
or
js
ret
push
xchg
orl
das
into
out
mov
jae
scas
xor
clc
out
jnp
mov
cmp
dec
jge
xor
or
repz
jl
jmp
testl
pop
cli
shll
js
or
adc
or
ljmp
mov
fisubrs
mov
addr16
pop
dec
adc
outsb
cltd
and
aad
cmp
popa
add
cmpsb
inc
pusha
cli
sub
sub
aaa
stc
setno
aam
scas
mov
fstps
std
and
lcall
inc
insb
into
inc
dec
out
pop
pushl
pusha
or
mov
rcll
in
int
fstpt
rcrl
xor
mov
sub
stos
jb
shll
add
dec
jae
cmp
jge
stc
arpl
jo
imul
adc
lea
rcrl
das
mov
mov
sbb
lock
xor
pusha
shr
and
filds
call
in
add
dec
scas
stos
xor
push
mov
sbb
jecxz
loop,pn
enter
push
sarl
es
cltd
je
fsubr
sbb
pop
and
nop
mov
xrelease
sub
aas
js
jns
leave
inc
int
pop
sub
or
into
mov
lahf
ds
dec
fisttps
jo
fwait
lret
adc
test
out
or
leave
daa
mov
cmc
xlat
jbe
shlb
sub
dec
aam
psllq
pop
xor
sbb
imul
repnz
dec
sbb
bound
nop
jns
dec
push
arpl
or
fisubrs
pop
rcrb
dec
test
xlat
ror
lea
and
sub
ficomps
aas
and
arpl
cmp
and
in
jl
int
cmp
xchg
push
clc
or
loopne
or
sub
sbb
xor
ja
mov
mov
sahf
dec
dec
ret
xchg
adc
cwtl
fsts
pop
scas
sar
stos
repnz
push
js
clc
adcb
jmp
fld
or
dec
out
gs
pop
inc
inc
cmp
adcb
hlt
push
test
addl
js
dec
inc
data16
ds
jle
rolb
xchg
test
and
add
pop
outsl
daa
notb
rcll
daa
dec
js
sub
lcall
test
sahf
add
sub
sub
jns
or
xor
push
bound
lret
mov
cltd
mov
aaa
ljmp
mov
adc
int
xor
icebp
daa
leave
negb
pop
test
push
enter
mov
mov
leave
jns
or
add
or
testl
mov
ret
sub
cli
mov
test
arpl
lret
jnp
or
sbb
in
data16
pop
andb
es
xchg
outsl
or
bound
adc
sub
lea
popa
movsb
xor
outsl
pop
pop
ja
or
inc
mov
xor
pop
or
lret
repnz
lds
jg
clc
es
stos
popf
cli
pushf
mov
cmp
xchg
xchg
cli
add
mov
or
ljmp
mov
es
sti
add
rcrb
aas
dec
test
decl
mov
cld
jne
fisttpll
mov
insl
adc
jl
mov
push
ret
dec
ds
jp
sarb
inc
dec
push
jns
mov
jecxz
pop
test
adc
sbb
xchg
inc
mov
scas
hlt
pop
cmp
test
aam
jl
mov
mov
shlb
cwtl
adc
and
mov
loop
jmp
jb
popf
bound
jnp
and
cmp
icebp
arpl
loop
adc
xor
leave
sub
lods
or
arpl
dec
jnp
xchg
icebp
mov
test
pop
and
rclb
lds
cltd
jbe
inc
sub
cmp
add
adc
mov
mov
sub
mov
xor
fstpl
xor
mov
add
daa
push
or
lret
sub
mov
and
push
int3
pop
js
shr
jle
adc
inc
fisubl
divb
sub
sahf
jb
jnp
xor
insl
mov
jbe
hlt
shll
push
filds
sahf
xlat
insb
add
push
daa
bound
and
xchg
fsubrs
mov
fsubr
fs
paddusb
sbb
xorl
movsb
mov
cwtl
sti
push
push
adc
repz
es
pusha
cmp
xchg
pop
out
rcll
jns
int3
push
push
stos
notl
int3
jnp
inc
or
int3
xchg
test
sbb
xor
ljmp
fstpt
and
adc
jb
fsts
fwait
lcall
add
hlt
mov
xor
inc
cmp
ficompl
cmp
sbb
cld
testl
adc
adc
arpl
leave
or
in
mov
cs
sub
ficoms
fdiv
insl
pop
push
xor
xchg
ja
jmp
loop
sbbb
xchg
outsb
fsubl
jmp
and
imul
mov
gs
insl
dec
cmp
pop
pusha
dec
and
mov
jno
in
nop
lret
addb
arpl
and
sti
dec
fisubrl
lret
push
push
cmpsb
enter
adc
fcompl
jl
stc
push
inc
inc
cmc
outsb
or
and
mov
push
rclb
movsb
push
in
enter
movsl
pop
mov
rorb
les
push
adc
outsl
jmp
or
or
cld
adc
je
mov
imul
fadds
pop
movsb
dec
enter
pusha
shr
out
add
ds
cmp
xor
scas
add
lods
je
mov
cmp
dec
xor
jbe
fimull
mov
pop
mov
mov
out
bound
jmp
andl
dec
jle
or
addr16
push
insl
cmp
pop
mov
mov
ret
mov
and
pop
inc
mov
sub
ss
jae
repz
cltd
jae
cmpsb
in
mov
cmp
aaa
jmp
aaa
andb
outsb
call
int3
dec
es
cli
call
or
mov
and
push
add
pop
adc
iret
push
push
add
dec
in
aad
mov
push
mov
out
mov
dec
jns
pop
pop
sub
jecxz
sub
rcl
inc
xor
cmp
lods
mov
mov
pop
out
push
pop
and
jmp
mov
mov
popf
hlt
mov
insb
add
into
out
fldt
inc
pushf
and
out
ja
fimull
ljmp
std
mov
and
push
lods
daa
jae
inc
fistps
iret
stos
aas
mov
test
cmovbe
call
xchg
jmp
ss
je
test
push
mov
rol
mov
adc
popa
xor
jbe
xor
jae
push
adc
roll
aas
outsl
add
sbb
mov
xchg
cmp
cmp
and
ds
jnp
fbld
in
stos
pusha
fistpl
lret
pop
cmpsl
ja
add
xor
inc
test
pop
stc
ficompl
pop
xchg
jle
lret
mov
sub
movsb
lret
ret
and
jb
aad
pop
push
and
mov
iret
mov
xchg
and
cwtl
enter
dec
add
mov
xor
jae
jg
or
pop
or
pop
sahf
in
outsl
xor
dec
icebp
cmp
add
cmp
fidivs
idivb
push
pushf
pop
mov
js
and
jnp
daa
cmpl
mov
sbb
repnz
loope
adc
and
mov
fisubs
cld
je
mov
aaa
adcl
jb
push
push
sahf
je
sub
loop
mov
sbb
pop
pusha
cli
sahf
test
cltd
mov
gs
dec
xchg
mov
and
sbb
or
and
imul
jmp
xchg
mov
push
stos
imul
mov
push
add
dec
xlat
mov
mov
mov
fistps
call
lret
fldt
push
call
pop
subb
aaa
les
jmp
lret
leave
scas
lods
mov
in
and
adc
jl
pop
scas
jle
push
lcall
data16
push
scas
aad
fidivrs
mov
mov
sbb
lds
into
xchg
xchg
dec
cwtl
clc
and
inc
sbb
or
jp
mov
int3
jb
adc
mov
in
and
lret
orb
sarl
pop
jle
or
shll
mov
stos
xchg
pop
rcll
ret
pop
jbe
out
mov
mov
xor
lret
pop
xor
xchg
lahf
rcl
in
popa
cltd
and
xor
fidivs
sahf
cwtl
jo
or
int
jnp
nop
ljmp
orps
fistpll
lret
stos
mov
mov
adc
cmc
hlt
mov
gs
ja
mov
lds
push
push
dec
lds
cmpsl
inc
gs
xor
pushf
jle
imul
mov
cli
jle
xorb
lods
stc
xor
cmp
data16
shr
in
das
lahf
enter
mov
hlt
or
aam
mov
push
and
lea
dec
mov
dec
idivb
loope
out
jnp
enter
fcompl
fimull
add
mov
repz
push
les
dec
mov
js
mov
outsb
add
push
aas
js
xlat
js
std
hlt
mov
mov
jnp
xor
popf
stos
fiadds
ja
push
movsl
add
mov
dec
data16
adc
xchg
in
scas
cmpsb
xchg
jns
incl
int3
aas
jmp
pop
pop
inc
push
into
subl
loope
xchg
pop
jns
xchg
movsb
ss
rcl
xchg
daa
outsl
arpl
call
sub
dec
lock
add
je
mov
pop
insb
das
int
test
mov
lea
xchg
xchg
push
out
iret
int
sub
cmp
mov
inc
das
and
mov
data16
push
cmp
dec
cmp
and
mov
test
cmc
pop
lock
cmp
xchg
int3
inc
mov
push
mov
flds
outsb
mov
sub
stc
addr16
ret
xchg
jmp
das
push
ds
loopne
stos
arpl
sub
pop
jbe
xchg
mov
insb
pop
inc
dec
cmpsb
dec
sub
loopne
sti
dec
add
sbb
push
sub
in
jl
inc
mov
dec
stc
shll
sbbb
andps
or
inc
mov
cmp
jne
adc
movsb
lret
das
daa
mov
fsubs
pop
aas
and
lret
or
mov
loop
sbb
lret
dec
push
cmp
xor
clc
mov
cmp
clc
push
sti
mov
lret
jbe
sbb
leave
fisttpl
loop
inc
repz
mov
in
dec
inc
sbb
sbb
xchg
aaa
inc
mov
pop
dec
sub
mov
ficompl
ds
mov
cmpsl
popf
enter
cs
lock
mov
sbb
inc
hlt
insb
sub
jle
add
inc
push
aam
and
mov
and
testl
call
fs
imul
mov
xlat
lgs
std
mov
dec
stos
das
xlat
mov
pop
sub
push
xchg
pop
add
jnp
mov
in
jp
lcall
mov
mov
das
mov
mov
jl
out
es
add
push
jge
in
ja
inc
add
push
push
loop
xor
jge
mov
aad
mov
cmp
aas
aaa
mov
leave
leave
dec
mov
sbbb
push
xchg
rclb
ficoms
pop
mov
ret
test
push
mov
dec
scas
or
scas
inc
pop
les
or
leave
mov
jecxz
ficompl
out
dec
lahf
mov
mov
out
jne
jo,pn
mov
rcrb
rorl
push
push
ljmp
and
mov
add
pusha
push
push
mov
sbb
cwtl
inc
and
mov
xchg
sub
mov
shl
in
dec
popfw
jl
lea
sbb
ret
mov
out
dec
add
push
mov
mov
bnd
sbb
notl
add
gs
mov
cmpsb
pop
or
sbb
jecxz
mov
push
dec
mov
sub
dec
repz
mov
cmpsb
iret
hlt
stos
jle
xor
outsb
mov
jnp
lret
sbb
mov
push
mov
cmp
rorl
sub
popf
inc
rcrl
fucomip
mov
nop
sub
fs
fs
xchg
add
pop
fcmovnu
cmpsl
mov
sub
jne
ds
or
stc
mov
push
test
xorb
jnp
sahf
cmp
pop
insb
pop
jns
aam
jmp
sbb
lds
out
pop
pop
dec
clc
ret
popf
insb
hlt
inc
sahf
inc
aaa
out
call
arpl
xchg
js
andb
jnp
lea
sbb
fsubr
outsl
mov
aaa
cmp
icebp
cmc
in
push
addb
sub
inc
jmp
mov
inc
jmp
mov
in
lds
shlb
testl
stos
add
xchg
mov
in
push
sbb
inc
xchg
adc
jle
push
xchg
pop
xor
lret
xchg
movsb
insb
jb
inc
jle
xchg
xchg
shll
pop
je
add
int
jmp
pop
scas
pop
in
jo
notb
in
int
xchg
pop
fwait
fwait
mov
push
inc
in
fwait
out
mov
xchg
outsl
and
int
add
inc
out
filds
jg
pop
mov
push
and
and
nop
inc
icebp
imul
pop
mov
xor
cmpsb
clc
push
mov
dec
repz
fwait
bound
pushf
fidivrl
push
fisttpll
cmp
mov
sub
out
in
mov
aad
icebp
inc
jnp
sarl
push
sub
xor
pop
stc
hlt
ja
js
into
mov
mov
adc
out
xor
pusha
cmovno
mov
ds
es
adc
xchg
inc
xor
inc
out
jg
ret
es
rolb
pushf
stos
jbe
jge
imul
sub
enter
mov
cmp
xor
sarb
xlat
cmp
daa
dec
shlb
xchg
fnstenv
nop
sahf
ficomps
cmp
cmp
sbb
test
mov
sub
mov
scas
je
cmp
xor
lahf
dec
arpl
jb
outsl
movsl
mov
mov
notb
sbb
dec
push
scas
push
outsb
lahf
addr16
cwtl
fwait
push
xchg
outsb
data16
fisttps
xor
mov
pushf
jg
pop
jb
out
out
push
fsubl
adc
xchg
push
fdivrs
fbld
dec
les
push
and
sbb
loopne
mov
cmpsb
insl
push
sub
lods
lahf
lods
xchg
fcoms
out
out
lods
loop
dec
nop
ficoms
push
testl
lods
push
push
movd
pop
scas
sub
or
adc
insb
lret
push
adc
adc
fnstenv
std
es
mov
push
aam
xlat
add
and
pop
divb
dec
iret
push
cwtl
pop
mov
adc
cmc
out
add
mov
mov
mov
fistpl
inc
xchg
cld
and
js
into
out
lock
rcl
stos
test
and
pop
ret
mov
sbb
mov
jo
inc
ret
out
imul
adc
stos
scas
xchg
loopne
inc
xor
and
adc
mov
adc
lret
jecxz
cltd
add
in
sbb
movsb
dec
mov
inc
clc
pushf
pop
dec
or
ja
les
sbb
js
fidivs
mov
fidivrl
imul
mov
pshufw
pop
ja
loope
xchg
adc
or
jo
jo
mov
clc
push
xchg
pop
sub
pushf
out
adc
scas
and
mov
test
repnz
imul
push
hlt
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
jmp
add
test
pop
add
push
popf
and
jo
in
shr
sarl
sahf
jnp
add
movsl
and
leave
xchg
and
and
inc
xchg
mov
jae
jnp
cmpl
jmp
adc
jb
sub
aad
mov
push
sbb
dec
xchg
addr16
gs
sub
mov
adc
stc
and
mov
add
pop
gs
cmp
mov
pop
popf
xchg
adc
call
movsb
sub
test
leave
iret
push
xor
repnz
ja
and
mov
push
jl
xor
mov
mov
lahf
mov
rcll
pop
dec
lret
dec
pusha
sub
call
mov
out
shl
repz
adc
outsb
mov
dec
call
inc
sub
xchg
xchg
int3
inc
lods
mov
or
ljmp
gs
adc
in
add
das
in
arpl
insl
mov
mov
push
push
int3
add
rcrb
adc
push
clc
ss
cmp
into
jae
rcrl
sbb
sbb
mov
ds
jnp
xchg
sti
insl
mov
pop
mov
imul
xchg
push
repnz
pop
jb
or
addl
int3
pop
sub
inc
and
sub
mov
xchg
mov
arpl
mov
jnp
outsl
add
lea
push
scas
adc
inc
push
enter
mov
fldt
mov
xor
frstor
nop
mov
in
sbb
stc
and
pusha
and
repnz
into
lret
mov
dec
addr16
inc
jg
xchg
jp
xor
push
sti
cld
or
or
push
js
test
jge
xchg
adc
pop
mov
mov
sarl
test
sbb
and
int
add
and
mov
movsb
test
xchg
sbb
std
ja
sub
adc
jno
outsl
adc
or
jle
cmp
sbbb
incb
aaa
push
popa
addr16
jp
cmp
call
js
sub
cmpsl
or
inc
and
fmull
push
add
pop
jbe
cld
arpl
dec
repnz
cmpl
xchg
stos
jl
sub
cmp
loope
sbb
movsb
mov
fmull
mov
ljmp
pop
jnp
push
subb
ret
xchg
pop
jb
push
js
cmp
adc
rol
jle
and
sbb
daa
stos
jnp
sbb
lods
aad
insl
push
ficompl
ljmp
scas
cwtl
cld
dec
fldt
xor
mov
cld
adc
testl
test
dec
push
inc
add
push
lods
and
outsl
shrb
lahf
test
lcall
and
adc
ljmp
cwtl
mov
lret
mov
out
pop
mov
jno
xchg
jle,pn
mov
push
pushf
and
and
fsubrs
iret
sub
fsts
aaa
ds
inc
add
das
das
inc
dec
and
fildll
sbbb
pusha
push
je
in
mov
lret
pop
xor
icebp
imul
inc
ror
mov
insl
ss
xchg
mov
push
jmp
jne
fldt
mov
iret
push
xor
and
add
adc
pop
negb
add
add
pop
int
pop
cltd
mov
dec
and
pop
addr16
xor
js
pop
and
ja
in
pop
push
mov
fisubl
frstpm(287
iret
decb
adc
ljmp
push
imul
mov
lahf
adcb
fidivs
and
shrl
mov
and
call
mov
fsubrs
jne
sbb
cwtl
pushf
jne
shl
mov
scas
aam
mov
push
lea
inc
mov
xchg
pop
cmpsb
shl
jmp
and
jbe
ljmp
es
out
test
add
pusha
push
pop
mov
dec
pusha
sub
sbbb
imul
add
in
je
jnp
stc
mov
adc
add
imul
test
jnp
fwait
notb
sbb
push
fidivrl
dec
in
stos
jbe
scas
jl
mov
outsb
pop
ljmp
add
sbb
xlat
pop
dec
jg
jbe
out
outsb
add
sbb
mov
pop
inc
scas
cwtl
adc
sarl
mov
lods
cmp
xchg
shl
push
jle
mov
inc
xchg
fsubs
sub
imul
movsb
data16
pusha
lahf
xor
cltd
int
out
xor
or
jo
out
sbb
or
ds
mov
rorb
cmp
out
imul
ret
pushf
sub
jnp
loopne
push
inc
cmp
xchg
dec
enter
ja
ficomps
jle
loope
addr16
nop
subb
or
out
mov
sbb
je
push
scas
mov
repz
add
loopne
popa
jp
add
pushf
aad
xor
jae
mov
sub
stos
stos
scas
movsl
cmp
test
inc
rcll
dec
xchg
jno
jge
fldcw
or
mull
out
cmpb
push
fbstp
fcomip
xor
in
leave
shll
aam
xorb
xadd
add
bound
popa
pop
xchg
int3
inc
or
mov
jae
cltd
in
int
cmpsb
inc
in
mov
mov
mov
jb
add
ret
cs
mov
mov
adc
and
mov
fnsave
pop
insb
jg
cmp
mov
popf
or
or
xlat
dec
xchg
jge
xchg
lret
xor
mov
outsb
mov
ror
fimull
jns
fs
cwtl
inc
push
sarl
pop
shl
int
pusha
cmp
adc
mov
adc
in
xchg
fwait
cmp
mov
fsubrl
ficomps
lahf
pop
xchg
in
push
rorl
sub
insl
adc
insl
xor
mov
sub
mov
les
cmp
ret
or
and
repz
jne
dec
push
adc
mov
add
xor
outsl
sahf
cwtl
push
xchg
mov
outsb
loope
int3
and
pop
jns
imul
jo
popf
mov
push
jae
xchg
cld
xor
imul
outsl
push
imulb
mov
adc
cmp
mov
push
push
dec
pop
adc
dec
arpl
xchg
cld
cmp
jo
fstps
dec
cmp
in
sbb
clc
lods
aad
enter
jle
ficoml
pop
cwtl
mov
cmpl
cmp
adc
movsb
or
jg
pop
xchg
cmp
lcall
xor
add
dec
pop
popa
add
and
popa
fiadds
dec
add
ljmp
jle
pushf
mov
lret
and
jp
xor
or
jb
js
push
mov
scas
xchg
mov
jne
pop
dec
jbe
push
jecxz
adc
out
pop
in
aad
dec
lret
sbb
cmp
andl
jecxz
mov
add
and
mov
pop
sti
sub
mov
jecxz
sahf
ss
cmp
loopne
packssdw
sbbb
ja
pop
xor
dec
data16
or
jbe
or
inc
ret
orl
orb
xchg
out
rcll
fsubs
data16
adc
sub
inc
subl
pop
into
loop
cmp
add
movsb
inc
sbbl
and
and
mov
popa
int3
jmp
jg
fmuls
aam
pop
into
pop
cmp
test
stos
cmp
pushf
jge
jne
push
pop
jae
cmp
cli
inc
cmp
out
inc
shrb
mov
mov
sub
xor
shlb
dec
rcrb
jmp
push
shll
mov
pop
popf
mov
daa
sub
add
push
jg
xchg
je
in
fimuls
jno
or
push
or
pop
cwtl
sub
js
sub
cmp
fdivr
mov
sub
add
xchg
mov
in
nop
mov
cltd
es
dec
cs
mov
xchg
adcb
mov
es
aas
mov
aad
push
jmp
mov
in
gs
xchg
cmpsl
lods
pop
subl
scas
push
add
lock
dec
jmp
mov
outsb
test
scas
pushf
stos
cmp
test
setns
pusha
outsb
cld
mov
and
cmpl
pop
cltd
stos
mov
dec
pop
mov
leave
ljmp
mov
incl
mov
je
lods
fadds
sti
ficomps
xchg
xchg
and
movsl
roll
pop
or
jmp
mov
sub
mov
dec
adc
sub
pop
and
out
adc
movsb
mov
nop
fs
push
push
mov
add
add
shl
push
xchg
cmp
cmp
cmc
jb
fbld
cmpb
cli
mov
add
xchg
subl
sbb
testl
xchg
shll
inc
int3
pushf
stos
addr16
icebp
dec
xor
mov
ret
and
push
les
mov
and
sbb
jl
pop
sub
sub
mov
pop
push
xchg
lods
push
shl
cmp
or
outsb
and
xor
je
ss
je
ja
sbb
push
ja
ja
mov
pop
xor
sbb
adc
add
outsl
es
into
rcrl
sub
out
movb
cs
enter
int
mov
aaa
sbb
xor
sub
ds
test
fnstsw
push
das
xchg
cmp
enter
addr16
jae
mov
out
shrl
push
dec
adc
mov
cmp
xlat
lds
inc
xor
icebp
xchg
test
mov
jmp
push
loop
push
xchg
pop
pop
mov
imul
mov
js
fisubrl
cltd
xchg
bound
aad
movsb
shll
sub
xor
xchg
or
sbb
fcoms
dec
jl
test
les
cmpsl
frstor
ret
sbb
int3
push
jnp
mov
sub
jg
sbb
xchg
inc
jle
pop
xchg
nop
or
ret
int3
cmp
pop
push
notl
sub
sub
fwait
dec
push
cmp
mov
mov
inc
inc
nop
jmp
test
add
cmc
fistpl
inc
arpl
out
mov
cmc
lahf
fucom
pop
push
jns
or
mov
jns
xchg
add
dec
aaa
adc
in
daa
adc
fucomi
push
push
pop
testb
dec
push
hlt
mul
push
cmc
pop
shlb
jae
ds
or
aad
pop
out
and
mov
stc
arpl
das
scas
jge
pop
rcrl
add
out
idivl
pop
pop
adc
pop
lret
push
or
stos
mov
pop
aaa
ficoml
out
lods
test
hlt
scas
cltd
shrb
xchg
pushf
jo
add
mov
scas
in
inc
mov
cli
out
mov
adc
inc
cmp
aaa
mov
add
add
in
addl
outsl
push
and
jge
lret
mov
fistpll
shll
mov
adc
push
or
sti
test
adc
mov
inc
push
test
test
add
aaa
dec
sub
mov
arpl
inc
lahf
push
inc
add
shrl
xchg
mov
cmp
ss
dec
out
leave
push
adc
cmp
das
out
shrb
xor
xchg
inc
add
inc
scas
aam
mov
mov
cmp
sbb
mov
adc
adc
cmp
inc
cmp
fwait
pop
adc
mov
dec
push
loop
cvtps2pd
dec
push
dec
outsb
aad
scas
test
xchg
jns
loop
adc
insl
lcall
inc
dec
out
stos
add
mov
movsb
insb
xlat
in
adc
mov
xor
popa
addr16
mov
fldl
loopne
int
sub
sbb
repnz
lods
les
cmp
adcl
loop
and
xlat
shl
imull
mov
mov
pop
std
add
rcll
dec
test
lahf
pop
xchg
push
in
aam
jg
sub
push
add
ljmp
out
xchg
sub
cmp
mov
movsb
sarl
cmp
sti
push
rol
xchg
inc
cmpsb
scas
clc
xor
xchg
push
or
in
mov
scas
mov
sahf
bound
pop
lahf
mov
loop
addr16
dec
je
xchg
cmp
xchg
movsl
ds
cmc
repnz
mov
clc
xchg
push
cli
lds
pop
outsl
jbe
cmpsb
jno
cs
test
push
insb
iret
jb
ss
pop
rcrb
jb
xchg
mov
fsubrl
jns
movsb
popf
out
xor
in
dec
push
adc
dec
cmpsl
into
mov
add
out
test
movsl
add
cld
adc
mov
mov
adc
xchg
jnp
mov
xchg
testl
pop
jge
in
and
fs
mov
sbb
or
sub
pop
add
int3
enter
clc
adc
adc
test
cmovge
test
ds
out
jp
ret
out
mov
pop
adc
shlb
fs
cmc
into
dec
ds
fadd
imul
shlb
movsb
rcll
stos
outsb
in
pop
pop
popf
lret
mov
test
lock
aas
mov
adc
pop
jle
cmpsl
call
imul
daa
outsb
sub
xor
jge
fidivs
sbb
repnz
fsubrp
mov
or
scas
enter
mov
out
push
xor
push
test
jl
mov
pop
mov
jns
lahf
and
adc
jl
mov
adc
icebp
xor
or
jne
mov
aam
xchg
aaa
roll
sbb
mov
mov
imul
outsl
pusha
test
icebp
push
push
jmp
xor
adc
adc
sub
movsb
jl
roll
divb
std
add
mov
xchg
js
or
stos
mov
inc
int
nop
fadds
inc
in
cmp
jb
push
or
pop
mov
inc
cmp
or
scas
sbb
or
out
xor
push
sar
movsl
fcoml
push
or
stos
sub
pop
sti
icebp
cld
scas
push
xor
inc
in
pop
xchg
push
lcall
inc
jmp
xor
stos
pop
sbb
stc
dec
test
sbb
in
mov
add
cld
cmp
mov
stos
les
lea
ja
fidivrs
cs
lret
sbb
inc
xchg
mov
and
mov
cmp
jmp
dec
fs
push
int3
sarb
bound
jl
or
cs
fcmovnu
pop
icebp
in
cld
xorb
xor
dec
push
out
arpl
cmp
lea
push
mov
ret
add
bound
arpl
enter
fadd
push
adc
inc
popf
nop
pop
sbb
lods
dec
adc
loopne
testb
loop
and
notl
pop
movsl
pop
pop
stc
lds
shlb
loop
leave
mov
adc
or
jecxz
insl
xlat
aas
add
jecxz
xchg
loop
push
lods
insl
cmpb
negl
orb
or
hlt
paddq
mov
jmp
arpl
loopne
in
cmp
adc
push
mov
or
cmp
add
in
and
stc
std
sub
mov
adc
shlb
mov
addl
fldcw
sbb
add
jmp
into
dec
fmuls
xor
cmp
xchg
arpl
faddl
int3
out
and
adc
lods
test
stc
incl
int
inc
cmp
invd
or
int3
mov
push
inc
mov
fisttpll
mov
or
faddl
pop
sbb
jae
add
mov
and
dec
push
mov
mov
or
movsl
imul
out
xor
lret
jb
or
jae
js
shlb
jp
fnsave
fstps
xor
add
xchg
xchg
aad
sbb
jb
mov
pop
sbb
jb
pop
ret
push
mov
pop
std
xchg
negl
xchg
xor
fists
leave
dec
imull
es
outsl
sarb
lds
sbb
pop
mov
jns
scas
bound
fildl
lea
mov
dec
lds
and
jb
or
mov
mov
dec
and
fwait
sbb
push
or
dec
sahf
fwait
scas
loopne
cmp
cmp
push
sbb
adc
test
push
dec
pop
addr16
push
push
mov
xchg
into
int3
xor
push
pop
cmp
cs
xlat
sub
lds
es
and
adc
notrack
jle
mov
adc
inc
not
cmp
pop
into
loop
pop
sahf
mov
xor
dec
scas
sbb
fistpl
pop
mov
cmp
out
mov
jbe
pop
test
jmp
jbe
sbb
mov
fists
inc
sbb
cmc
pop
int3
adc
pusha
push
jae
pop
mov
out
adc
cwtl
pop
jne
jno
fnstcw
cmpsb
inc
sub
adc
mov
ret
push
push
xchg
ss
push
cmp
pop
mov
inc
xor
lret
enter
jge
test
jecxz
sti
inc
dec
or
aaa
sti
dec
xchg
add
cltd
mov
insl
jae
sub
sbb
dec
pop
or
jbe
sub
cmp
xchg
out
and
test
out
cltd
rcr
and
sbb
das
xor
fidivs
loop
mov
std
fnstenv
cmpsl
clc
aad
sahf
push
mov
xchg
testb
pop
jno
pop
pop
push
sbb
inc
add
lea
and
lds
popf
mov
and
mov
scas
psrlq
arpl
pop
jge
dec
jmp
andb
in
in
mov
sub
cmp
xor
adc
stc
add
jg
addl
incl
aam
sbbl
or
addb
xchg
cltd
in
es
insl
jae
imul
mov
or
push
fwait
iret
out
daa
jo
pop
cmc
cmpsb
sbb
inc
nop
andb
cmp
fistpl
es
lret
mov
cmpsl
jno
xchg
jle
dec
sbb
dec
das
add
sbb
imul
insl
loope
xor
fs
mov
loopne
cli
dec
add
daa
int3
out
shrl
aad
pop
mov
call
mov
inc
push
iret
xchg
mov
adc
fiadds
push
shll
pop
inc
call
sub
sub
stos
insl
cmp
inc
test
outsb
dec
inc
push
scas
cmp
pusha
xor
cmpsl
mov
adc
call
pushf
lret
aad
test
cltd
lcall
daa
push
lock
ja
iret
pop
hlt
add
cmp
inc
pop
inc
sub
xchg
push
scas
loope
test
pop
imul
xor
icebp
stos
sti
or
mov
jg,pn
popa
aas
test
int
or
lea
mov
mov
test
ljmp
mov
jnp
adc
out
aam
mov
std
pop
loope
outsb
mov
add
mov
inc
lcall
popf
scas
add
and
sub
sti
adc
inc
jl
xchg
xor
or
outsl
js
xchg
int3
push
jmp
shll
xor
fldt
xor
test
inc
pop
les
jno
mov
mov
pop
inc
popf
pop
out
jge
mov
xchg
push
pusha
je
fsubrl
pop
aas
jne
stc
test
aad
adc
nop
cmp
jb
cmc
mov
mov
negb
insb
int3
jl
inc
add
add
outsb
push
xlat
dec
jge
mov
out
or
cli
pop
enter
push
push
loopne
in
cmp
sbb
orb
les
sbb
lret
xchg
jmp
andb
out
test
jo
jo
repnz
xor
and
or
stos
adc
lods
sbb
cmp
mov
sub
ficompl
fcmovnb
xchg
clc
ficompl
and
ljmp
fsubp
xor
enter
add
push
lds
sub
mov
sub
mov
enter
lret
cmp
mov
dec
outsb
and
cmpsl
js,pn
xlat
mov
xor
les
add
mov
adc
loope
mov
add
aas
std
enter
push
insb
xor
aad
lret
inc
cmpsb
out
or
es
mov
push
lret
daa
add
stos
xor
sbb
sub
mov
arpl
xchg
pushw
arpl
mov
or
push
pop
arpl
pop
mov
dec
xor
mov
xchg
push
cmp
inc
push
add
out
pop
xor
loope
push
ret
and
adc
push
stc
sbb
jle
jp
data16
cmpsb
test
hlt
xor
icebp
push
mov
fisttpll
imul
mov
jnp
sub
push
test
dec
dec
sub
and
lret
mov
push
push
mov
movsb
data16
mov
sti
bound
fists
pmaxub
aas
rorb
xor
loopne
stos
sbb
xor
fiaddl
xchg
and
add
int
xlat
dec
nop
pop
stos
jge
std
inc
out
popa
std
xchg
pop
jl
movsb
push
push
notb
orl
xchg
pop
cmp
sub
inc
jb
test
shr
or
jg
lret
sub
cmpsl
xchg
mov
in
cmp
insl
movsl
ds
xor
push
fmul
scas
lock
aaa
or
jle
adc
icebp
sti
xchg
sub
dec
mov
cltd
or
loop
fisubl
adc
push
mov
sbb
movsb
ret
addb
push
loopne
xlat
aaa
or
mov
jo
sub
xor
subb
dec
sub
enter
add
or
int3
mov
mov
ljmp
in
xchg
jmp
lea
dec
ss
out
test
and
dec
xor
cmc
push
jns
pop
jne
cmp
test
jae
push
icebp
cld
xor
adc
mov
jle
pop
jp
movsb
mov
mov
xor
jnp
mov
adc
cltd
adc
adc
adc
mov
sub
mov
or
inc
pop
rclb
clc
aad
and
in
and
mov
insl
cld
mov
dec
dec
into
pop
adc
fdivs
clc
mov
mov
cmpsl
and
pop
dec
into
or
shll
lea
fstpl
aas
lods
cwtl
aaa
inc
xor
xchg
mov
mov
jb
enter
fcoms
jmp
inc
xchg
js
or
dec
bound
mov
mov
out
shr
cs
outsl
xchg
push
and
js
or
mov
push
push
cmpsl
and
sti
xor
loop
out
sub
sub
sahf
rorl
jecxz
cmp
arpl
adc
sbb
pop
rol
dec
inc
hlt
pop
stc
fs
ss
dec
push
mov
xchg
mov
enter
scas
cmp
loopne
xchg
xchg
lds
cmp
inc
sbb
js
in
xor
jns
push
and
rol
cmp
pushf
inc
fwait
in
jl
mov
sti
push
xor
clc
xchg
movsb
outsl
or
cs
inc
xor
xchg
es
test
shl
test
or
and
call
push
hlt
ret
cmp
js
aad
pop
dec
cltd
dec
in
dec
push
ret
lods
add
sbb
shr
rcrb
cltd
aaa
jge
inc
sub
movsb
push
insb
fdivl
xchg
push
mov
or
pop
fs
lds
pop
shrl
inc
pusha
pop
in
push
xchg
inc
jg
int
ret
shll
stc
sub
sbb
and
nop
dec
adc
add
es
xchg
xor
cwtl
les
jo
xchg
mov
lods
mov
lds
dec
push
mov
xchg
lock
mov
xor
push
sub
jo
imul
push
lea
sub
mov
fucomi
mov
imul
leave
je
andb
or
mov
jb
out
in
or
mov
adc
repnz
insb
dec
daa
movsb
add
data16
das
out
inc
icebp
xor
dec
rolb
fs
and
inc
popa
aas
or
mulb
lahf
push
push
daa
mov
nop
cmp
mov
mov
testl
pop
bound
adc
or
leave
jno
sub
je
hlt
fiaddl
add
ss
pop
ljmp
mov
mov
xor
ljmp
in
jo
js
lds
pusha
pop
dec
imul
mov
xchg
std
jne
or
cmp
and
mov
jl
clc
mov
add
inc
lret
cmpsb
cmp
ret
sbb
mov
sbb
cmp
cltd
xor
fdivrl
cmp
xor
sarl
add
ds
rcll
sbb
pop
lcall
andl
mov
sahf
add
inc
nop
jns
into
int
mov
mov
inc
cltd
mov
out
bound
mov
jbe
mov
fmull
adc
xchg
movsl
insb
lea
int3
addl
outsl
inc
mov
cmp
push
sub
les
jl
popa
adc
jle
fdivrs
jno
sbb
ja
shrb
test
lret
in
in
and
push
call
inc
idivb
lods
mov
fidivrs
sub
push
or
fnsave
and
nop
push
dec
sbb
xlat
test
xchg
fldl
cli
pop
imull
mov
mov
cwtl
mov
jle
jecxz
rolb
js
pop
jbe
push
adc
rcrl
out
xor
rcr
xchg
mov
int
ja
add
stos
mov
inc
pop
cmpsl
insl
inc
inc
adc
sti
jo
inc
mov
rol
and
out
push
push
jmp
inc
pop
or
pop
cli
mov
push
push
mov
sbb
les
adc
sbb
movsl
pop
sub
jle
cwtl
adc
scas
fildll
andl
sub
dec
lea
dec
jle
mov
out
push
sarl
adc
shlb
jo
dec
and
xchg
dec
jp
xor
int3
shl
or
insb
js
pop
cwtl
inc
cmp
fidivrs
and
cltd
push
outsl
scas
insb
pop
je
adc
iret
iret
out
fisttps
cmp
push
cs
xchg
xchg
xchg
int3
repnz
pushf
testl
out
cmp
mov
fidivs
repz
pop
cmp
gs
bound
and
sbb
hlt
xchg
inc
sbb
fimull
scas
lret
call
inc
push
out
push
xchg
int
scas
subl
notl
sbb
dec
fdivrs
mov
fmuls
cmp
pusha
add
lret
imul
fisubs
cmc
fisttpl
sbb
test
push
cli
sub
loopne
or
and
addr16
js
scas
orl
aas
lds
cmpsl
cltd
icebp
leave
dec
in
and
fdivs
pop
jne
pop
outsl
adc
out
inc
scas
es
mov
pop
adc
push
adc
enter
xchg
sbb
add
movsl
sti
cmp
les
inc
jle
mov
ljmp
rcrb
mov
repnz
shll
daa
xchg
jbe
mov
adc
jl
xchg
or
cwtl
push
mov
stc
std
xor
xchg
pslld
mov
xor
mov
leave
les
sbbl
vhaddps
dec
mov
fcmovnbe
lret
aam
mov
cmpsl
test
insl
out
jg
sahf
jle
je
fbstp
gs
xchg
ds
fsubrl
dec
inc
xchg
and
cltd
mov
or
ret
xchg
lds
or
fdivrs
call
addr16
mov
scas
and
add
shufps
mov
jge
js
icebp
shrb
jecxz
daa
imul
rcrl
ja
sub
addr16
ret
cmp
orl
mov
jle
aad
push
aad
and
loop
xor
cmp
lcall
stc
loopne
mov
fldl
imulb
mov
movsl
popa
test
jnp
dec
mov
fistpl
loopne
pop
sbb
pop
fnstcw
cmp
pop
lret
imul
aam
mov
fisubrs
pusha
js
pop
aaa
mov
xchg
cmp
jg
adc
jecxz
add
inc
imul
imul
inc
pop
dec
xchg
into
or
test
addl
mov
stos
push
lock
cmpsb
icebp
cld
mov
loopne
sub
mov
sub
and
out
add
inc
xchg
push
lahf
stos
in
imul
jl
xchg
mov
popa
cltd
iret
or
mov
jne
test
shll
ficomps
push
divb
push
dec
dec
sarl
loope
jp
mov
sbb
and
js
nop
and
in
mov
stc
fucom
mov
mov
sub
cmp
cmp
repz
sbb
xchg
pop
or
and
out
in
ds
pop
movsl
adcb
sti
cltd
inc
dec
lea
orl
fistl
int
mov
movsl
mov
shlb
mov
in
add
sbb
jno
xor
mull
jo
pop
pop
push
sub
hlt
sar
xchg
or
jo
insb
cli
inc
or
add
dec
nop
xchg
orw
movl
and
pop
or
or
jno
or
or
fmulp
ja
cld
out
in
jp
shll
cli
lock
lahf
jbe
into
cmpsl
imul
jb
lahf
loope
pop
arpl
xor
enter
insl
sub
mov
cmp
or
mov
lret
dec
mov
cmpsb
repz
xchg
dec
fs
stc
fwait
lcall
sbb
popa
cltd
sub
sub
std
rolb
ret
and
loop
ret
orb
or
cmpsl
outsb
hlt
jne
xchg
fnstsw
pop
mov
mov
adc
stos
adcb
fisttpl
dec
adc
sub
mov
notl
push
adc
sti
pushf
test
sbb
dec
mov
mov
jno
or
lds
fcmovnu
push
mov
cmpsl
pop
sbb
inc
jns
mov
pop
jle
or
mov
test
nop
mov
sbb
jg
mov
stc
in
out
xchg
imul
sbb
mov
cld
fdiv
stc
enter
shr
test
inc
xor
jnp
pop
clc
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
sbbl
xor
ret
push
mov
sub
movl
adcl
push
sbbl
movl
addl
mov
subl
push
sub
mov
xor
adcl
push
mov
subl
add
subl
mov
mov
test
je
andl
mov
inc
mov
cmpl
jl
jmp
push
push
call
cmpl
jb
mov
sbbl
mov
mov
and
mov
xor
add
movzbl
sub
mov
mov
sub
mov
xor
orl
add
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
mov
dec
mov
jmp
mov
xor
sub
add
mov
sbb
mov
sub
xor
movl
add
mov
sub
xorl
lea
orl
xor
orl
xor
movl
cmp
je
mov
addl
xor
sbbl
add
cmp
jne
pushl
call
andl
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
mov
mov
sbbl
xor
andl
add
cmp
movl
je
xorl
pushl
pushl
xorl
call
mov
mov
sub
mov
sbbl
xor
sbbl
add
movl
cmp
movl
je
movl
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
decl
mov
addl
add
movl
cmpl
je
cmpl
jl
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
addl
add
or
mov
sbb
mov
mov
add
movl
mov
jmp
add
mov
mov
add
mov
mov
and
mov
mov
xor
subl
add
cmp
movl
je
jmp
mov
and
mov
xor
decl
add
movl
cmp
mov
movl
je
andl
mov
xor
add
movl
cmp
movl
je
lea
xorl
push
pushl
sbbl
pushl
call
or
mov
sbb
mov
xorl
xor
sbbl
add
movl
cmp
movl
je
movzwl
mov
movzwl
mov
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
jmp
fbstp
cmp
cmpsl
fnstsw
in
dec
sub
jnp
sahf
jnp
mov
inc
xchg
mov
push
jne
ss
pop
cmp
push
adc
fs
repnz
add
jecxz
cs
xchg
arpl
mov
sub
xor
adc
adc
divl
test
pop
mov
dec
dec
push
pop
or
sbb
cmpsb
push
add
repz
push
sub
jno
mulb
sbb
loopne
push
fsubrp
sub
push
xchg
jns
mov
sbb
mov
sub
and
loopne
push
fcomps
pop
in
xor
imul
and
jbe
in
es
add
mov
loopne
lret
add
lock
std
vmwrite
mov
pushf
js
sbb
mov
cmc
adc
adc
add
xcrypt-ofb
cmpsl
sub
lock
dec
cmp
rcll
inc
and
sbb
xchg
mov
movsl
push
or
stos
xorb
jge
jbe
or
mov
fiadds
loop
adc
shl
cmp
out
inc
rcll
dec
inc
in
fwait
iret
mov
adc
push
mov
mov
push
jmp
mov
fxch
jecxz
pop
je
out
je
sub
rorl
psubq
fmul
push
mov
mov
orl
scas
es
imul
jmp
ret
cld
pop
or
mov
jp
pop
rcl
cmp
aaa
mov
sub
or
jle
push
sub
gs
and
loop
scas
lahf
imul
stos
and
in
idivb
fstl
shl
and
imul
out
xchg
jae
pusha
mov
sarl
jo
test
sbb
jae
int
adc
enter
imul
mov
push
roll
add
insb
xchg
sub
jnp
xchg
hlt
inc
stos
sbb
mov
or
std
loopne
mov
ret
inc
call
cld
jbe
pop
cmc
js
dec
ficomps
mov
or
add
dec
loop
or
dec
mov
stc
fbld
pop
xchg
add
sub
imul
int
int
rcr
orl
or
int
pop
rcrl
imul
and
scas
push
pushf
inc
jecxz
mov
movsl
scas
push
test
dec
push
xor
cmp
fs
sub
dec
test
sbb
dec
out
cltd
enter
loop
mov
ret
xchg
sbb
lock
xor
cmp
pusha
cmpsb
fcoms
ss
movsl
mov
and
adc
notl
inc
cmp
xchg
inc
mov
pushf
lret
stos
inc
das
enter
push
or
loop
imul
sti
inc
ljmp
sti
xor
xchg
insl
adc
dec
loop
movsl
mov
mov
sub
jg
push
sub
sahf
jge
mov
or
xchg
stos
es
es
test
out
shll
mov
mov
int
mov
sbb
popf
insb
pop
dec
out
mov
test
int
or
insl
adc
sbbl
add
sub
push
inc
sbb
xor
and
sbb
ja
out
scas
mov
je
or
add
adcb
inc
and
and
mov
insb
ljmp
sub
insb
fadd
faddl
push
jno
scas
push
dec
sub
mov
ficomps
cmp
fucomp
scas
push
cmc
sbb
pop
int
insl
dec
cs
js
cmp
std
sbb
imul
dec
xchg
mov
cmp
sub
int3
fwait
into
jl
mov
test
sbb
pop
mov
push
mov
rcr
fsts
fs
xchg
inc
mov
inc
add
mov
xchg
outsb
push
and
xor
mov
out
lret
xchg
pop
mov
lcall
xor
test
out
mull
xchg
and
sub
sub
or
mov
and
sub
dec
stc
xor
push
ss
pop
push
stos
sub
xor
and
mov
inc
cmp
lret
enter
pop
cmp
jmp
mov
sbb
cwtl
add
jmp
cmp
add
mov
or
and
mov
es
mov
pop
add
es
flds
push
das
rcrl
adc
movsb
push
out
les
dec
dec
sbbl
outsl
fstpt
std
xchg
in
cmpsb
out
jb
arpl
imul
xchg
arpl
test
inc
ds
sti
mov
fwait
push
jge
fistpll
and
jb
xlat
jo
inc
and
or
mov
and
std
push
aas
xchg
movl
cmp
sub
or
je
aam
jp
idivb
pushf
pop
repz
dec
neg
movsb
adc
mov
cld
jmp
lock
in
ret
icebp
sbb
stos
push
mov
cmpsl
mov
ljmp
pop
add
int3
adc
xlat
xor
add
out
out
lcall
out
call
mov
inc
movsb
shl
mov
cmp
pop
or
push
out
or
sti
ljmp
and
dec
push
adc
jle
das
dec
inc
cli
sbb
inc
jns
push
in
mov
lret
fsubl
dec
mov
movsb
inc
and
shlb
push
inc
leave
iret
or
dec
cmp
imul
cmp
cmp
push
and
cmpb
mov
inc
mov
push
jnp
pop
enter
in
sub
mov
cmc
dec
mov
stc
pop
mov
or
mov
sbb
mov
jmp
push
pop
sti
xchg
xor
xchg
pop
ret
loop
cmp
je
push
or
test
mov
jp
lret
cmpsb
inc
fisubs
jg
sub
or
pusha
sbb
mov
xor
addr16
hlt
jb
and
inc
inc
add
inc
hlt
outsb
mov
cmpb
adc
mov
push
ds
mov
lock
add
lods
jle
adc
ss
ja
xchg
xlat
mov
jbe
lds
rorb
mov
inc
imul
lahf
jbe
out
imulb
and
scas
out
inc
jmp
or
scas
and
insb
jne
add
xchg
int
inc
fimull
leave
test
cmp
push
ret
aas
mov
adc
std
mov
std
cwtl
jg
add
test
mov
pop
adcl
add
jp
stc
mov
js
repnz
pop
inc
mov
adc
adc
bound
lahf
test
mov
je
mov
jmp
fs
imul
daa
outsb
sub
nop
movsb
loopne
ljmp
xor
cmp
xchg
xor
aad
sbb
and
lock
ret
addr16
sub
xchg
jle
or
cld
dec
test
mov
push
roll
mov
mov
xor
mov
or
fdivr
dec
jbe
mov
scas
adc
test
test
sbb
clc
dec
inc
inc
and
and
inc
sub
or
push
xchg
sbb
adc
adc
inc
adc
pop
insb
popf
cwtl
mov
std
arpl
scas
cmpl
inc
js
cmpsl
mov
insl
sbb
lock
add
pop
shl
sbb
sbb
fstpl
inc
pushf
adc
insl
addr16
shlb
cli
cmp
movb
jecxz
sbb
notl
out
dec
inc
mov
xchg
adc
sbb
xor
pop
sub
and
mov
add
adc
stos
push
out
imul
lock
aaa
dec
jns
das
mov
xorl
pop
jl
push
sub
jno
or
mov
adc
xchg
push
mov
mov
ja
scas
fistpl
fsubs
mov
loop
fwait
js
in
or
inc
mov
sub
test
cld
jb
loop
repnz
push
cld
das
lea
mov
push
out
lea
push
jecxz
lods
xlat
and
sbb
int
dec
leave
sbb
mov
mov
fs
xor
orb
xor
or
insl
or
shll
or
mov
and
mov
jb
movl
int3
divb
outsl
sub
sti
push
mov
mov
ret
aaa
fildll
or
and
pop
les
mov
dec
dec
notl
pop
sahf
mov
mov
inc
mov
sti
fiaddl
les
mov
inc
pop
or
outsb
pop
ficoml
mov
adc
lret
int
loopne
push
movsl
or
mov
fmull
dec
adcl
ret
popa
mov
mov
pop
cmc
jo
pop
movsb
add
test
lahf
daa
adc
pop
pop
lret
mov
jns
pop
sbbl
jnp
push
mov
cltd
add
dec
dec
rclb
ret
xor
jmp
sub
movsl
cmp
add
fisttpll
mov
in
cmp
pop
inc
je
cmp
rclb
push
mov
xor
inc
mov
inc
cmp
inc
fsubl
xor
cmp
pop
lods
xchg
shlb
sub
outsb
movsb
cmc
pusha
sub
xchg
cmpsl
add
xor
xor
test
inc
hlt
std
mov
addr16
out
or
sbb
push
mov
adc
pop
lods
fmuls
mov
cmpl
js
iret
lds
test
mov
daa
add
dec
icebp
icebp
test
sub
insl
push
mov
into
xlat
adc
lret
mov
lock
cmp
and
dec
push
pop
addl
xchg
dec
sub
add
cmp
pop
push
sub
out
mov
cmp
pushf
das
pop
lds
sbbb
in
outsl
mov
cs
cld
sub
dec
sub
or
inc
repz
lret
mov
icebp
dec
js
insb
xchg
icebp
inc
out
std
xlat
or
cmp
shrb
pop
push
movsb
pop
or
push
mov
cmp
adc
outsl
push
cld
cmp
adc
into
and
xor
inc
mulb
repz
bnd
je
pusha
sbb
sub
add
add
out
fnstenv
push
sarb
sahf
cmp
das
lods
mov
add
in
loopne
mov
fiaddl
js
dec
test
andb
lods
dec
fsub
shll
mov
dec
jecxz
dec
push
out
out
xchg
jno
mov
or
adc
fsts
sti
test
jns,pn
sub
pop
pusha
scas
popf
lods
mov
mov
cmc
ja
aas
push
pusha
cmp
test
loope
les
repnz
icebp
movsb
cmc
out
mov
fnstsw
jns
sti
xchg
dec
out
xor
add
sbbl
xchg
ljmp
shlb
mov
or
or
or
and
add
jnp
mov
xor
incb
or
jb
int
out
push
lret
jmp
fucom
add
jp
aad
add
cmp
lret
es
dec
pop
add
cs
sub
cmc
sbb
mov
cmp
cmc
jns
or
dec
inc
cltd
push
jae
aas
fwait
dec
xchg
fldenv
jge
xlat
das
mov
mov
inc
sub
cmp
fistl
pop
pop
insl
aas
outsb
cwtl
loope
testl
fsubs
lods
xchg
adc
pushf
adc
jmp
jnp
ret
addr16
mov
mov
sahf
mov
jb
add
mov
xchg
imul
out
popa
fcmove
cmpsb
add
xchg
aas
adc
mov
subb
int
add
lcall
or
xchg
out
jl
or
xchg
push
mov
lds
jno
mov
mov
inc
pushl
mov
cmc
inc
cmp
or
arpl
pushf
mov
inc
push
mov
push
sbb
shll
in
rcll
cmpsb
push
fld
mov
insb
sub
cmp
dec
sub
insb
ljmp
jp
jl
mov
cmpsl
pop
sbb
scas
dec
cmp
cmp
mov
adc
cmp
inc
add
push
shrb
dec
insb
xlat
stc
in
adc
jae
testb
imul
mov
jnp
insb
out
popl
xor
cld
sbb
or
mov
add
or
push
sbbl
in
arpl
shrl
lock
imul
adc
push
test
inc
mov
sbb
mov
nop
mov
insl
loope
mov
push
in
jns
jnp
cmp
out
mov
xor
mov
fisubrl
shlb
jb
iret
push
mov
and
jno
mov
adc
xchg
sub
pop
cs
ljmp
jno
xchg
mov
jecxz
pop
andl
dec
test
jecxz
xor
aad
loope
test
stc
shl
jmp
fcomps
xchg
neg
fwait
and
sub
aas
aad
xchg
notl
les
pop
popf
insb
mov
cltd
mov
cmpsb
sbb
sbbb
insl
pop
out
jns
sahf
stos
xlat
or
test
push
push
lods
jne
xor
inc
aam
fisubrl
jg
mov
adc
rcr
dec
mov
into
xor
mov
sbb
dec
mov
mov
mov
clc
imul
sbb
lahf
repz
cmp
outsb
aad
cmp
fnstenv
pusha
fldl
and
sub
xchg
dec
push
xor
imul
mov
pop
fs
dec
mov
xchg
jbe
cmp
and
subl
sub
adc
sbb
cmpsl
adc
jge
repz
or
out
sbb
pop
adc
push
movsb
lret
mov
mov
and
sbb
xor
inc
jo
jge
xor
js
jb
and
mov
add
fstpl
iret
fmul
mov
mov
cwtl
das
decb
add
cmp
push
scas
lahf
lret
or
pop
dec
mov
int
sahf
out
inc
movb
mov
xor
xchg
dec
lock
movsb
mov
les
repnz
aas
jmp
adcb
shll
lret
sbb
sub
jmp
jne
push
or
fs
cmp
jne
mov
aam
pop
test
dec
cmp
mov
test
mov
fdivr
fidivrl
push
pusha
mov
js
inc
arpl
test
dec
lcall
or
and
push
rorl
add
sbb
and
enter
xchg
call
std
outsl
xor
ds
pop
sbb
mov
aad
in
mov
push
push
push
loop
aad
dec
loopne
out
mov
push
dec
lods
movl
scas
mov
adc
mov
in
rclb
pop
loop
adc
mov
push
loopne
fstl
mov
mov
push
mov
int
jmp
mov
subb
fwait
sbb
xchg
repnz
rcrb
and
mov
lcall
mov
insb
out
pop
jmp
cmp
or
outsl
mov
test
mov
dec
ret
inc
sub
js
jae
nop
jb
mov
mov
dec
fisubrl
ljmp
push
jae
jbe
cmpsb
mov
inc
imul
je
mov
jbe
mov
movsb
xor
adcb
push
sbb
out
rep
or
xchg
xchg
sub
call
rcl
int3
mov
mov
cmp
mov
inc
stos
movl
aad
sub
pushf
out
imul
jae
rdtsc
popf
xlat
inc
loop
notb
and
pop
cmp
mov
fisttpl
out
xor
or
mov
mov
mul
inc
orl
loopne
sbb
sub
rorb
mov
jge
cmp
lcall
pop
mov
cmp
sbb
add
pop
jns
xor
pusha
mov
rclb
or
mov
inc
js
push
cmp
sub
xchg
lods
icebp
push
pop
push
scas
pop
cmp
dec
add
addb
adc
arpl
cmp
repnz
and
ja
imul
cmp
std
push
aad
repz
mov
negl
mov
daa
ds
cmp
sub
sub
mov
in
push
xor
inc
movsl
add
fildll
push
shrl
and
pop
pop
movsb
dec
cmpl
and
push
push
xchg
nop
adc
xchg
sti
movsl
in
sub
and
pop
daa
lahf
pop
pop
test
clc
xor
flds
stos
xor
enter
testb
in
lods
mulb
cmp
mov
cmp
xchg
in
test
popl
jecxz
pop
pop
push
add
cmp
inc
icebp
lock
push
scas
shlb
jno
mov
cmp
pusha
ret
dec
xchg
js
cmp
std
jg
dec
cmpsb
sbb
lcall
insl
cli
imull
mov
and
in
mov
aad
stc
pop
ret
mov
leave
xor
push
xor
bound
jne
gs
mov
call
mov
lret
adc
mov
jecxz
dec
lods
imulb
mov
outsb
test
jb
andl
ffreep
sub
inc
loopne
into
lret
jecxz
cmp
cmp
push
addr16
jne
aas
mov
sarl
jb
fidivrl
fcomip
pop
test
out
add
add
in
loopne
into
test
sbb
ja
cli
jmp
add
dec
inc
rcrb
adc
pop
sbb
and
mov
daa
xchg
ret
xor
rorb
and
sbb
popa
mov
pop
outsb
out
fcom
add
xor
inc
add
dec
xchg
mov
fsubs
adc
ret
mov
repnz
jl
sbb
push
jo
mov
jecxz
pop
imul
stos
pop
pop
push
popf
sbb
popf
or
or
sahf
pop
cltd
dec
jne
sbb
push
lcall
aad
out
jnp
push
aam
out
stc
loop
xchg
jmp
out
xchg
jmp
cmp
dec
movsb
jmp
addl
incb
sub
jnp
dec
mov
lcall
jb
mov
aad
leave
stos
outsl
cs
and
out
popa
popf
xchg
leave
dec
test
pop
or
loop
popf
lods
or
push
in
dec
orb
js
mov
out
add
lret
fucomi
lock
lds
add
sub
movb
push
sbb
imul
jo
push
mov
popl
std
aad
cmc
rcrl
pop
jmp
pop
cmpsl
dec
xor
scas
pop
popa
mov
inc
or
cmpsb
and
pop
pop
cwtl
aam
jb
repnz
jb
dec
shl
out
xchg
lcall
sti
aas
stc
pusha
push
sub
lahf
pop
aam
stc
cld
add
mov
test
imul
jp
and
inc
push
insl
add
cmp
pop
sub
jns
test
adc
mov
out
mov
stos
daa
xchg
stos
mov
imul
mov
fdivs
or
or
nop
sahf
jb
mov
mov
or
jns
cmp
dec
es
rolb
leave
sbb
jbe
jno
fwait
sbb
cmpsl
es
shll
jae
test
mov
sbb
mov
push
cmp
cmpsl
mov
pop
popa
adc
and
test
push
ja
lcall
xchg
cs
aad
push
xor
int
cmp
gs
out
sub
sub
mov
mov
jne
xchg
hlt
ret
fists
or
and
pop
out
dec
xor
es
rorl
fwait
mov
repnz
inc
repnz
fdivl
cmpsb
mov
sbb
fnstsw
mov
push
stc
mov
lds
sti
insl
js
and
jmp
xorb
push
imul
push
fwait
lods
xchg
jae
push
outsb
or
or
enter
sahf
push
sub
xor
xchg
pusha
dec
and
push
pop
xor
sub
add
fisubrl
fistpl
push
push
push
mov
shrl
lds
pushf
mov
inc
cmp
insl
insb
out
xchg
jbe
sub
cmpsl
pushl
test
lds
dec
inc
lret
popf
loope
jns
ss
mov
insb
xchg
cmp
inc
enter
ds
nop
xchg
sbb
shr
pop
push
cmp
cli
aas
out
bound
xor
out
jge
mov
push
fldt
cmc
out
cmp
and
mov
int3
jb
mov
inc
movsl
cmp
loope
dec
pop
lods
pop
xchg
aaa
mov
leave
rclb
lods
xor
ljmp
in
inc
xor
enter
fnsave
popa
mov
adc
mov
pop
fimuls
scas
jb
jl
adc
ljmp
mov
pop
bnd
das
stos
push
movsl
in
out
pushfw
shll
mov
mov
pop
push
lret
rcl
nop
push
adc
mov
popf
rorb
hlt
cmpsb
pop
xor
test
add
jecxz
or
or
mov
mov
push
mov
xchg
or
imul
pop
adc
mov
incb
xchg
pop
je
mov
into
cmp
test
imul
out
scas
lds
ja
fsubr
mov
lahf
sbb
lea
movsl
push
inc
push
pop
rcrl
lds
clc
ret
fstps
fsub
xchg
adc
mov
dec
push
add
pusha
cltd
daa
dec
cmpsl
rclb
aad
adc
mov
pop
ljmp
mov
stc
stos
cmpsl
sub
dec
popf
jnp
inc
mov
pop
imul
and
xchg
stos
ss
dec
inc
cmp
push
push
sahf
into
xchg
je
sub
fstps
js
lods
cmp
test
hlt
fcomp
pop
pop
cmp
ret
xchg
out
jl
mov
cs
push
leave
mov
xor
xchg
inc
xor
push
mov
mov
ret
lahf
mov
cs
dec
mov
add
sub
outsl
gs
adc
jmp
les
push
std
cli
xor
mov
jl
inc
or
cld
pop
in
dec
sbb
mov
xlat
nop
test
insl
in
pop
enter
dec
jae
xchg
push
add
push
icebp
fildll
xlat
scas
push
fsubrl
ja
fmuls
dec
and
movsl
and
cmpsb
nop
das
enter
inc
sti
sbb
xor
and
aas
rcrw
dec
jne
mov
jp
inc
cmpsl
lret
mov
mov
add
icebp
ss
mov
orb
sbb
xchg
movsb
sbb
int
adc
out
aaa
mov
add
or
jnp
mov
out
test
ss
or
pop
push
jl
adc
mulb
xchg
and
xchg
push
popf
push
mulb
cli
xchg
ss
dec
je
adc
lahf
sub
lcall
mov
dec
ds
sbb
shrl
add
add
cmp
sub
cmp
pop
popa
dec
sbb
test
adc
enter
int3
stos
xor
mov
addr16
pop
pusha
mov
in
inc
arpl
adc
inc
sub
jo
adc
jne
fdivr
out
cltd
out
inc
dec
frstor
rorl
pop
clc
cmp
pop
dec
jb
lcall
mov
xlat
adc
daa
loopne
mov
push
rcr
sbb
cltd
and
cmp
aam
ret
cmp
gs
lahf
push
jg
cltd
js
add
push
mov
pop
cmpsl
ret
es
mov
pop
mov
notl
mov
push
jle
pushf
pop
adc
pop
sbb
xor
clc
cltd
rorl
cmp
add
xchg
pop
ds
mov
or
repnz
mov
mov
jmp
stc
lret
stc
nop
xorl
and
jge
inc
sub
pop
cmp
add
addb
mov
jb
mov
jp
push
pop
add
mov
out
sbbl
jl
lods
lea
jecxz
mov
test
or
mov
leave
push
imul
push
jns
inc
push
fdivrs
lods
push
ficoml
insl
fsts
mov
or
dec
xor
dec
xchg
dec
aas
xchg
and
mov
clc
andl
cld
cmp
cmp
cmp
hlt
fmuls
add
iret
push
push
jmp
inc
mov
mov
in
xor
or
scas
pop
sbb
mov
fidivrs
xchg
outsb
ret
xchg
pusha
aas
sub
mov
iret
leave
test
addr16
shl
mov
jns
push
adc
fwait
insl
cli
pop
pop
data16
repz
adc
mov
pop
mov
les
andl
ja
cmp
lods
inc
int
sub
sarl
pop
cs
fidivrs
ja
rclb
hlt
daa
jbe
rcrl
pop
fcompl
rclb
stos
xchg
push
jle
mov
jnp
jb
sbb
cmpl
lret
push
arpl
push
sub
in
dec
je
subl
std
test
mov
pushf
outsl
mov
cmp
out
mov
adc
or
loop
ja
rolb
adc
sbb
push
sub
mov
adc
mov
cmp
or
out
mov
fldt
jmp
jo
arpl
xchg
and
mov
mov
nop
inc
mov
pusha
pushf
mov
bound
add
pop
dec
adcb
ret
and
push
imul
jne
int3
in
aas
jno
aas
sub
xor
and
pop
add
add
dec
outsb
fcompl
roll
mov
xor
sub
shrl
js
dec
ja
call
fimuls
mov
push
idivl
in
sbb
pop
stos
pop
and
push
sub
test
lcall
pop
push
data16
insl
lods
lcall
aaa
push
fnstcw
xchg
sbb
cmp
push
xchg
xor
notl
and
push
rclb
shll
ja
enter
pop
push
sub
cmpsl
ja
mov
sub
and
aas
pop
jno
inc
out
jge
mov
and
repz
outsl
clc
rcl
pop
mov
dec
add
scas
pop
popa
sub
pop
add
das
push
outsl
push
mov
insb
mov
ss
scas
imul
repz
jae
clc
jno
movsb
inc
or
add
imul
mov
pop
pop
sbb
cwtl
scas
cmp
xor
shlb
mov
sub
fs
xorl
mov
push
test
adc
je
popa
sti
cmp
push
pushf
push
data16
sbb
jg
push
jge
js
shlb
in
icebp
out
les
roll
sarb
pop
jno
lock
lcall
push
cmc
and
testl
pop
gs
insb
lret
or
xor
mov
lods
jae
call
mov
lret
andb
push
aas
je
fiadds
push
pusha
xor
sbb
test
xchg
xlat
cltd
adc
push
sub
pop
xor
inc
pop
aas
adc
sbb
nop
mov
cmp
jle
add
add
orl
pop
test
mov
ret
divl
cld
cmp
mov
and
outsb
pop
ror
mov
loope
lahf
repz
fcomip
shl
add
xchg
pop
pop
cld
xchg
pushf
call
add
je
fs
jo
add
xchg
xor
xchg
movsb
mov
or
jp
ficoms
mov
dec
mov
xchg
rcl
int3
cmp
sub
mov
sahf
test
test
lret
mov
imul
sub
or
pop
call
add
xor
jmp
push
in
scas
xor
mov
sub
cmp
sub
cmp
lahf
leave
mov
cltd
popf
adc
mov
sbb
mov
cltd
xchg
in
mov
lods
rcr
xchg
pop
loop,pn
pop
pop
push
pop
sub
mov
mov
subl
or
lods
scas
mov
outsl
inc
in
repz
hlt
cmc
aad
subb
ret
ds
adc
xchg
jns
repz
jno
lahf
xchg
das
adc
or
das
adc
ror
push
cmpsb
jae
xor
ftst
cli
out
aad
mov
test
sub
push
pop
dec
jo
and
and
leave
inc
pop
inc
inc
out
cmp
insb
cmp
outsb
pop
adc
aaa
cli
add
xchg
mov
jmp
xchg
mov
ret
mov
imul
push
inc
test
xor
jmp
mov
add
push
fdiv
dec
jp
dec
or
jae
mov
xor
lret
sub
pop
sbb
testb
pop
dec
mov
adc
inc
int3
and
aaa
and
lahf
and
mov
or
out
out
cltd
adc
sbb
ljmp
sub
dec
mov
push
fmull
test
lcall
mov
pop
pusha
or
dec
mov
cmp
lret
mov
mov
pop
sub
push
lea
pushf
mov
push
mov
or
xchg
insl
mov
cwtl
pop
test
mov
mov
adc
inc
jp
inc
push
or
mov
cltd
xor
mov
jle
mov
and
in
cmpsl
push
mov
ds
shll
mov
jmp
pushf
xor
jle
adc
mov
lods
add
gs
push
out
testb
gs
das
rorb
mov
test
adc
daa
bound
sbb
lds
repnz
dec
mov
jp
and
mov
inc
lcall
xchg
lds
dec
inc
mov
andl
aad
jo
inc
movsl
jae
in
test
sahf
sub
inc
push
mov
adc
push
mov
push
inc
cwtl
ss
int
mov
jmp
inc
icebp
sahf
fwait
pushaw
fdivs
add
xor
out
sub
ja
outsl
cmp
test
negl
xchg
cmp
es
lahf
mov
adc
inc
sub
xor
jl
pop
repz
sbb
xor
lds
stos
jae
sbb
call
jbe
xor
sbb
into
dec
iret
mov
out
fsin
fstp
add
ret
das
fstl
in
inc
xor
push
cs
xchg
scas
mov
ss
mov
or
and
sar
cltd
pop
enter
data16
xor
arpl
jno
mov
mov
add
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
jmp
mov
out
fwait
push
xor
mov
jnp
sahf
jnp
mov
ret
rcr
or
mov
imul
or
push
pop
mov
push
xchg
cmpl
inc
shll
jno
into
scas
daa
mov
xchg
jb
cmp
adc
ret
mov
aam
inc
inc
xor
lods
shlb
mov
mov
test
mov
rcrb
sbb
ljmp
mov
xchg
bound
sarb
sub
aas
mov
arpl
repnz
mov
jb
sahf
rol
mov
jmp
imul
mov
xor
mov
jge
sar
fildl
xchg
pop
push
lahf
js
push
test
pop
imul
in
xchg
adcb
add
cmp
xchg
xor
mov
push
lods
jp
js
cs
sbb
inc
test
push
div
out
mov
mov
push
lcall
mov
pushf
cld
or
xor
pop
pusha
push
dec
clc
jl
rcrb
lods
outsl
adc
jp
outsl
and
lea
jmp
clc
pop
and
jne
mov
adc
push
loop
ljmp
insl
loop
jae
pushf
adc
jbe
lret
or
and
mov
stos
out
jae
cmp
xor
push
and
lret
push
xor
into
test
mov
xor
shrl
inc
ljmp
jbe
mov
and
cmp
mov
adc
stos
dec
add
and
je
adc
mov
cmp
xor
out
ja
fdivr
jnp
dec
xchg
sub
in
daa
lods
incb
insl
mov
jg
pop
adcl
lahf
cli
cmp
or
jb
in
sti
cltd
and
fisubl
push
shll
cmp
js
add
cmp
pop
jbe
mov
cmp
div
stos
hlt
sbb
ret
sarb
jle
pop
pusha
xchg
add
jne
mov
adc
pop
sub
mov
jl
push
aad
and
xchg
mov
dec
shll
rorb
rcr
mov
mov
stc
cmp
lock
jmp
xchg
mov
or
icebp
ret
mov
sbb
mov
inc
mov
je
outsb
cmp
cmpsb
std
out
inc
movsb
imul
xchg
push
jg
push
xlat
mov
insl
and
js
xor
enter
loope
cmp
xchg
cmp
adc
fwait
lahf
pop
mov
inc
fwait
xchg
ss
jb
inc
insl
call
scas
jge
cltd
je
and
pushf
mov
and
xchg
dec
in
jbe
push
iret
push
outsl
fidivl
dec
imul
sub
adc
xchg
sbb
leave
jb
test
insl
nop
add
mov
pushf
das
jne
aad
add
add
cltd
js
adc
mov
jnp
push
arpl
mov
aas
inc
fists
sbb
leave
mov
sahf
lods
inc
test
adc
cmpsl
pop
enter
lret
inc
pop
sub
mov
dec
shrl
test
jg
xor
movsb
ret
and
nop
ja
test
mov
out
ds
add
cmpps
in
jbe
enter
gs
sbb
mov
pop
jecxz
lds
dec
ds
inc
lds
dec
mov
outsl
jo
pop
rcr
outsl
jo
xchg
mov
shlb
movsb
lods
sub
cltd
and
push
sub
jg
fisttps
std
leave
movl
lea
jle
test
dec
cmp
xchg
xchg
and
pusha
and
sub
jnp
jmp
add
push
sbb
and
lret
lret
mov
stos
push
mov
jae
mov
cmpsl
jmp
lds
mov
and
pop
ja
xor
std
lahf
mull
inc
lcall
cmp
scas
mov
add
push
lock
and
mov
cmpsb
int3
pop
das
shrl
jb
mov
rorb
mov
cmp
inc
cmc
dec
shr
repnz
or
test
lods
fcomps
aaa
cmp
je
pop
shrb
in
int
jo
iret
dec
sub
dec
gs
mov
testl
out
adc
fidivrs
int3
xor
xchg
imul
imul
and
xchg
sub
ss
idivb
or
ficomps
ja
pop
jp
jge
fists
inc
xchg
ret
movsl
jno
ficoml
stos
movsb
push
mov
adc
cld
ljmp
lods
data16
add
aam
das
push
loope
add
mov
adc
adc
or
push
shlb
in
xor
movsl
sub
cmp
ffree
mov
lcall
icebp
lods
xor
push
mov
inc
in
mov
movups
aam
push
sahf
lret
daa
pop
push
pop
adc
rep
stos
dec
xor
and
pop
hlt
loopne
cmpsl
fwait
popf
insl
inc
ficoms
test
adc
dec
add
jl
addl
insb
add
or
outsl
aam
daa
fwait
lods
jnp
pop
outsl
aam
call
sub
pop
out
jns
insb
out
or
lock
js
and
add
push
sbb
xlat
mov
mov
es
cs
ljmp
and
movsb
imul
push
frstpm(287
dec
push
mov
adc
shl
xor
mov
icebp
cmp
jno
or
leave
mov
pusha
sub
add
mov
out
ds
jecxz
fsubs
mov
mov
mov
push
inc
enter
aam
push
xchg
and
xor
stc
jno
call
xorl
mov
mov
test
xchg
mov
adc
jge
jno
xchg
fucomp
ret
mov
movsb
mov
adc
pushf
fs
push
sub
pusha
lea
clc
push
test
mov
add
lcall
lods
lahf
cmp
nop
test
mov
lret
inc
sti
aaa
mov
mov
adc
inc
xchg
enter
cmpsb
imul
push
or
cmpsl
push
and
outsl
stos
cld
aas
fs
cmp
call
bound
les
jb
dec
push
nop
push
call
test
fs
mov
int
xchg
imul
fdivrs
add
sbb
pop
lds
or
imul
std
jae
lea
jmp
mov
subb
cmc
and
sub
pusha
sub
in
lcall
mov
int3
add
jge
dec
jns
in
inc
int
aam
sbb
out
add
xor
push
and
mov
mov
fadds
dec
cwtl
dec
push
loopne
or
outsb
or
mov
lods
in
push
je
iret
fisubs
push
into
sub
dec
subb
movsb
hlt
and
imul
xchg
mov
lods
dec
loope
andb
outsb
test
inc
jns
cmc
add
lret
rcrb
std
sbb
negb
xlat
jb
adc
add
sbb
loopne
shrl
sbb
cmp
movl
test
push
xor
pop
xor
in
ss
xor
cmpl
mov
cmp
test
aas
inc
sbb
cmpb
cmc
push
lods
shl
mov
jmp
ja
push
pop
xchg
mov
xor
pop
lds
clc
or
bound
adc
or
out
jno
xchg
and
bound
inc
fsubs
pop
scas
pop
outsl
and
or
pop
inc
or
aam
pop
push
xchg
dec
xchg
cmp
xchg
push
call
push
or
mov
xchg
pop
je
push
push
fs
add
cmp
rorb
stos
icebp
fs
test
fadd
roll
mov
loopne
cmp
mov
mov
cmp
and
aas
xor
mov
shl
ss
int
imul
xor
push
jne
adc
pop
aam
add
mov
add
add
out
mov
inc
leave
pusha
out
mov
xchg
add
jne
inc
dec
mov
cmpsl
mov
aas
loopne
xor
out
out
add
sbb
xchg
stc
mov
mov
test
mov
in
mov
cmp
lret
fstp
loopne
int3
fstpl
xor
data16
push
imul
jge
out
cmc
push
add
xor
jae
jmp
mov
dec
scas
notl
scas
push
movsb
aas
call
cltd
ffree
sub
negl
cld
fidivrs
xor
push
jecxz
jae
pop
sbb
mov
imull
inc
dec
js
cltd
and
mov
cmp
inc
mov
mov
mov
push
or
pop
cltd
jne
and
fbstp
adc
mov
cltd
into
rorb
mov
cltd
pop
mov
jns
sub
int
call
pop
mov
daa
adc
inc
mov
hlt
fmuls
pminub
popf
shlb
jp
jecxz
mov
stos
es
add
fadds
roll
xor
and
push
push
test
sub
addl
pushf
movsl
dec
jne
xchg
popf
loopne
in
mov
aas
inc
ljmp
lcall
ja
rcl
push
inc
mov
pushf
mov
aas
data16
imul
mov
cs
xor
ds
pop
test
pop
cmc
scas
nop
mov
pop
sub
icebp
scas
loope
in
mov
cld
andb
ja
xchg
inc
pop
adc
xor
add
push
xlat
dec
iret
imulb
xchg
cwtl
xchg
out
in
jnp
pop
jnp
les
bound
inc
call
mov
cmp
jns
and
cli
rcl
push
jno
inc
outsb
cmpsl
jle
icebp
faddp
jl
lods
loop
mov
mov
loope
sbb
movsb
inc
leave
out
imul
lret
cmp
and
dec
push
aad
insb
jle
or
fidivrl
hlt
pop
or
ret
rcrl
pushf
imul
hlt
sti
pusha
inc
mov
lcall
dec
ljmp
and
or
push
call
lahf
test
stc
xor
sub
test
in
popa
xchg
jle
push
adc
inc
dec
shrb
andl
mov
jecxz
push
push
inc
imul
dec
xor
cltd
jmp
gs
scas
data16
notl
cmp
adc
pusha
pusha
adc
jnp
mov
inc
add
jmp
jno
add
mov
shll
jmp
add
js
into
push
fildll
add
lea
gs
aad
mov
adc
iret
mov
lods
nop
mov
push
mov
dec
lods
or
mov
mov
mov
cmpsl
outsl
jb
mov
mov
stos
sub
lods
mov
jne
and
push
sbb
dec
push
mov
imul
in
lock
rorb
inc
mov
outsb
insl
and
movsb
lret
mov
in
inc
or
mov
in
add
in
inc
adc
dec
frstor
movsl
xchg
movsb
pop
push
test
xor
adc
popf
rorl
in
mov
es
sarl
aas
add
xchg
movsl
cmp
pop
js
sub
dec
daa
fldt
mov
mov
daa
jge
rcl
les
roll
sub
sub
dec
xor
sub
xor
push
sti
icebp
daa
dec
ds
out
cld
jp
imul
ss
sub
in
into
pop
filds
jnp
shlb
cmp
sub
popf
jl
rol
out
or
cwtl
rcll
inc
pop
mov
jmp
push
xchg
aaa
nop
clc
repnz
ljmp
cs
mov
leave
gs
xor
adc
sub
adc
xor
imul
lds
cmpsl
adc
inc
cmp
lock
out
mov
imul
cmpsb
adc
pop
mov
add
sub
sti
mov
and
or
shrb
jae
and
or
out
repnz
jbe
cli
lock
lds
mov
fs
cwtl
jae
in
push
jne
data16
pop
add
push
xor
xchg
fcomps
xor
or
and
add
test
fdiv
mov
dec
inc
rolb
aam
mov
jg
pop
incb
push
lahf
in
test
mov
outsl
sarl
xchg
cltd
jmp
push
jno
out
xchg
pop
xorl
lock
push
xlat
subb
xchg
cmp
adc
arpl
cs
add
imul
in
cmpsl
sub
leavew
aaa
hlt
dec
bound
push
jnp
mov
popa
dec
enter
mov
jne
out
jge
je
mov
sub
sub
repz
inc
nop
lock
lret
scas
fmull
cwtl
test
adc
fsubr
shl
aam
ja
inc
jl
enter
fdivrs
push
mov
mov
out
lret
inc
cmc
or
or
stc
std
xor
cmpsl
sti
pop
add
lock
jne
push
flds
mov
insb
mov
inc
pop
shrb
push
pusha
and
stos
dec
pusha
dec
push
sub
sub
sub
int
pop
jo
pop
cmc
test
push
movsb
cmp
imul
or
sub
es
mov
xor
inc
adc
sub
adc
inc
rol
pop
call
in
push
dec
mov
inc
adc
scas
fmuls
push
add
mov
ficoms
inc
loop
jl
dec
ror
mov
in
ds
xchg
sub
cmp
pop
aas
xchg
mov
mov
lods
ljmp
push
push
ds
std
push
jb
push
fisubl
or
adc
repnz
xchg
cmp
dec
adc
jle
sub
das
jne
stos
sbb
dec
test
stos
pop
rcl
pop
insl
js
mov
and
jb,pt
pusha
push
mov
in
mov
jmp
cmc
fwait
dec
shl
mov
loopne
sahf
add
mov
mov
xor
sbb
lahf
cmp
xchg
pop
pop
rcr
inc
mov
push
movsl
dec
lds
dec
and
stc
aam
dec
arpl
mov
out
mov
mov
sti
out
lock
shlb
jno
xchg
movb
and
add
cmpsl
sbb
insl
jp
test
icebp
js
js
adc
test
scas
lock
addr16
and
mov
add
lret
movsb
xor
pop
je
or
jb
pusha
mov
cmp
sahf
enter
in
sbb
cmpb
push
sbb
fdivrl
hlt
or
inc
mov
out
xchg
pop
arpl
mov
insl
test
ret
rcll
in
leave
pop
sub
push
in
pop
imul
push
fnstsw
cmp
mov
loope
xor
or
push
inc
jg
test
xor
push
addr16
push
push
leave
add
test
sub
add
xchg
adc
or
in
jl
xor
xchg
mov
xchg
popf
ret
adc
pop
mov
dec
and
cmc
push
cmpsl
xchg
mov
aad
inc
pop
pop
lods
cmp
sub
sahf
cmp
mov
out
sub
test
rorl
test
sub
xorb
jl
nop
shrl
dec
dec
lea
mov
scas
mov
mov
hlt
andb
aaa
test
loope
ja
out
fmull
push
repnz
fidivs
sub
insl
and
fildl
sti
jg
push
cmovnp
decb
push
sub
jbe
add
movsb
ss
pop
rcll
dec
out
sti
pop
je
in
adc
push
and
or
or
cmpsl
fcmovnb
dec
leave
cmpsl
jge
outsl
add
bound
cmp
xchg
xor
stc
arpl
arpl
repz
loopne
in
sbb
pop
gs
inc
imul
or
jne
stc
fwait
lods
fnstsw
fwait
inc
in
fadd
jmp
xchg
outsb
ret
in
pop
sbb
or
sub
into
and
popa
imul
adc
ds
lods
add
add
and
adc
aad
sub
add
std
or
out
popa
cs
sub
shlb
and
dec
fcompl
push
mov
mov
pop
ret
aaa
or
daa
cmp
sbb
aas
xchg
test
xor
sbb
mov
stos
adc
mov
xor
xchg
js
cmc
mov
pop
or
pop
mov
xlat
int
fcmovnu
cli
and
or
hlt
ja
ret
inc
push
dec
movsb
and
fs
int3
testl
sub
jg
mov
sarl
jle
push
pusha
fnsave
or
adc
cmc
ds
mov
or
jnp
xor
stos
mov
xchg
mov
jae
cmpsb
int3
dec
out
call
dec
xchg
or
les
inc
push
pop
fwait
sub
loope
loop
push
addb
in
cmpl
push
sub
jle
mov
adc
adc
jb
fs
xchg
sub
mov
add
inc
dec
xchg
jmp
test
testb
sub
fldenv
mov
leave
and
aas
pop
addl
cmpsl
jecxz
mov
daa
fnstsw
mov
and
adc
outsb
jecxz
add
pop
sbb
pop
add
pop
ja
sbb
aaa
jmp
fwait
xchg
lret
ja
cmp
jg
nop
jo
sbb
push
lahf
pop
dec
stos
push
and
call
jbe
pop
mov
dec
jno
pop
push
adc
add
cli
lds
imul
push
adc
jg
sti
xor
cmpsl
loope
iret
jle
data16
shlb
inc
xchg
addr16
insl
in
fisubs
xchg
mov
xlat
and
mov
cltd
test
mov
push
es
adc
movsl
xchg
xchg
leave
dec
jecxz
andb
adc
in
inc
xor
jb
mov
hlt
lret
into
out
mov
mov
mov
mov
ds
mov
fsubr
test
mov
in
test
adc
into
jecxz
adc
scas
sbb
jl
dec
xchg
stos
stos
sbb
mov
mov
ljmp
pop
pushl
jl
mov
mov
clc
rcrl
inc
and
mov
fs
adc
aas
fisubrs
ss
pop
fidivs
cmp
enter
add
push
or
insl
imul
das
jnp
pop
jbe
fwait
sbb
pop
cmp
jne
lcall
data16
lret
mov
repnz
in
inc
cs
lds
add
les
inc
inc
aam
jo
pop
in
jnp
sub
sbbb
push
sahf
stc
lds
ljmp
inc
mov
jg
stos
sub
or
xchg
es
ja
pop
testb
sbb
jl
rcl
jnp
cmp
ljmp
ss
jnp
mov
and
clc
dec
jnp
pcmpeqw
mov
lods
stos
fildl
jno
sbb
fwait
fwait
dec
push
nop
mov
loope
aam
mov
mov
inc
push
jp,pt
push
fsubrl
pop
enter
shll
lret
push
pop
lcall
shll
out
mov
das
sbb
jbe
loope
xchg
pusha
mov
test
cmp
lods
sub
jno
xlat
push
lods
das
push
adc
int3
stc
lret
xchg
dec
jge
jo
or
jp
sbb
je
mov
pop
sbb
jecxz
dec
jae
push
pop
jns
mov
lahf
mov
notl
mov
and
lret
loop
dec
out
mov
and
testl
int3
adc
jne
scas
fs
xor
push
jecxz
rcr
mov
test
repz
lea
outsl
push
push
popf
xor
lock
jg
jge
xchg
push
mov
adc
push
cmpsb
xor
sbb
cli
loop
int
mov
push
sbb
sub
ss
faddl
mov
lock
jb
rcrl
push
pop
insl
and
xchg
mov
and
mov
in
lea
pop
popa
clc
aas
pop
addr16
out
xchg
mov
fcompl
shrl
movsb
mov
xchg
lea
cmpl
icebp
hlt
push
jge
jp
xor
fwait
test
cltd
mov
cs
notl
mov
mov
push
mov
fildll
xor
inc
roll
shrb
aas
loop
mov
popf
stos
cwtl
mov
and
loopne
pusha
cld
xchg
jg
add
mov
mov
pop
enter
mov
dec
xchg
push
push
mov
lock
xor
aad
xor
cltd
mov
push
clc
xor
rcrb
mov
xor
adc
mov
aad
cwtl
push
pushl
jp
lret
jb
or
xchg
and
mov
pusha
movsl
gs
mov
sbb
mov
and
icebp
sbb
push
mov
dec
bound
int
lods
and
cmp
sbb
out
shll
pop
jmp
scas
mov
fbstp
xor
jmp
cmc
inc
insb
cmp
xchg
clc
pop
mov
int3
stos
push
callw
rorb
mov
cmp
insl
jbe
dec
push
mov
in
xchg
cmc
jle
add
and
pop
insl
stc
jg
cmp
aad
push
jecxz
sub
test
out
iret
sbb
and
add
fisttpl
daa
test
mov
dec
dec
and
adc
in
mov
sahf
add
xor
loope
sbb
shr
pop
gs
aaa
xchg
dec
dec
pop
jecxz
aad
xor
dec
xor
pop
dec
sub
jge
push
pop
cmp
in
jl
dec
xor
or
mov
insl
mov
jns
int3
lcall
xchg
fs
or
cmpsl
or
xor
ret
push
int3
pushf
ffreep
or
or
scas
add
in
shll
or
mul
jg
sbb
pop
push
mov
mov
rcr
fisttpl
fisubs
push
es
or
sub
out
fucomp
mov
clc
lret
ret
les
pop
mov
sub
cltd
ljmp
outsb
stc
mov
sarb
dec
insb
mov
inc
les
cs
inc
ror
cmp
mov
or
mov
dec
cltd
outsb
icebp
cltd
std
insb
divl
inc
add
cmpsb
xor
xchg
test
mov
dec
add
aad
mov
pop
jne
fdivr
js
clc
mov
dec
push
cmp
fiaddl
sbb
sbbb
fsubr
jne
fsub
mov
dec
sti
pop
int
nop
loopne
push
cmp
imulb
jne
pop
js
mov
repnz
rcll
pusha
rcrl
test
mov
hlt
jns
push
pop
inc
and
inc
xor
out
movsb
xchg
pop
jns
test
sub
adc
mov
sahf
ret
addr16
xchg
es
sbb
sarl
rcll
push
jecxz
les
dec
sbb
push
nop
mov
push
mov
lret
add
jo
push
int3
push
and
rolb
and
mov
test
mov
mov
fcoml
aaa
ret
sbb
in
xor
popa
dec
push
clc
dec
push
inc
push
sbb
scas
jne
inc
aas
sbb
nop
ds
divb
xchg
shll
loopne
scas
out
in
jl
jo
sar
enter
pop
mov
lcall
cltd
xchg
sub
gs
fidivrl
xor
adc
cmpsl
js
xchg
push
addl
push
std
xor
mov
shlb
or
jmp
arpl
adcl
push
add
outsb
mov
aam
mov
sbb
daa
aaa
pop
cmpsb
pop
xor
sbb
fiaddl
ljmp
sub
pop
and
push
ret
adc
jecxz
in
or
push
or
test
dec
outsl
in
ret
pop
xchg
pop
out
and
ja
pop
jne
sub
xor
xor
fdivl
cmpsb
repz
int
cmp
sub
push
push
pop
mov
xchg
flds
or
or
icebp
mov
lock
mov
mov
mov
aad
inc
mov
cmp
and
dec
scas
and
dec
jl
xchg
fmul
lret
shl
in
popf
xor
fwait
mov
aam
cmp
notb
pop
cmp
pop
aaa
cltd
mov
sbb
data16
iret
and
and
xor
stc
jo
and
mov
in
js
adc
in
lods
push
daa
mov
push
mov
mov
mov
lods
ficoml
jmp
adc
ret
adc
sbb
jle
mov
cli
jnp
imul
or
dec
mov
push
lret
xor
adc
dec
push
pop
mov
or
call
cmc
jge
and
call
cmp
mov
xchg
pop
test
xchg
repz
repz
xchg
or
mov
sbb
pop
cmp
pusha
xor
cmpsl
mov
dec
mov
adc
aam
lods
test
test
loopne
out
inc
adcb
xlat
scas
cmpl
repnz
iret
cmp
sub
pop
xor
bound
mov
add
lds
push
xor
dec
repz
test
mov
sbbb
dec
xchg
jnp
ffree
inc
bound
mov
mov
outsl
lcall
sahf
push
cmp
mov
out
dec
ret
add
jo
sarl
sub
fwait
mov
add
daa
jg
imull
xchg
mov
movsl
stos
mov
push
adc
sub
jno
jb
sbb
sti
hlt
mov
and
adc
xor
aas
push
test
sbb
pop
test
jp
push
mov
shl
lcall
xor
dec
jg
and
out
or
and
clc
vpmovqb
push
pop
inc
adc
mov
gs
lahf
push
mov
xor
enter
jl
and
jae
dec
lcall
outsb
aad
pop
pop
push
sub
pop
push
insb
aaa
outsb
insb
lret
push
je
pop
xchg
jmp
je
das
imul
jbe
sbb
add
mov
les
jns
fs
adcl
sub
stos
cmp
sub
xchg
mov
divb
cmc
inc
ss
and
sub
addr16
or
dec
rolb
lds
test
sub
xchg
mov
add
ret
lcall
mov
mov
pop
sbb
cmc
loopne
mov
xchg
out
arpl
jl
call
mov
fs
addr16
jmp
ficomps
das
push
xchg
jbe
ss
and
outsb
int3
dec
mov
out
cwtl
push
test
dec
inc
mulps
addl
in
roll
jle
rorl
jle
inc
fstpt
mov
rorb
pusha
adc
push
adc
mov
fiaddl
pop
jae
mov
pop
push
arpl
xor
dec
lods
and
xchg
popa
test
and
or
sbb
mov
sbb
jbe
pushf
mov
ds
rcll
push
pop
mov
ret
mov
xchg
mov
jno
out
mov
mov
xlat
rorb
cmp
test
cwtl
inc
jns
jo
arpl
jb
test
arpl
mov
out
pushf
ljmp
mov
lea
xor
cmc
shll
filds
in
movsl
pushf
shlb
xchg
pushf
push
or
cwtl
adc
mov
adc
std
insb
push
sub
push
or
xor
clc
out
jge
xchg
inc
xor
add
xor
xor
jl
inc
aam
or
lock
jo
into
callw
mov
stc
jmp
test
into
jmp
or
jae
cld
enter
shr
mov
inc
movsb
in
jae
adc
outsl
es
into
test
loope
ja
xor
test
out
js
cmp
xchg
insb
push
and
divb
push
mov
xchg
fsubp
sarl
fidivs
xchg
stos
sbb
inc
or
mov
out
fadd
mov
mov
cmp
sub
scas
mov
lret
and
add
jb
ljmp
cmp
cmp
push
ficompl
bound
xchg
pop
sub
and
test
mov
hlt
dec
dec
cmpsb
scas
jmp
aam
and
sub
inc
frstor
sbb
cmp
mov
jo
sahf
inc
into
loopne
xor
movsb
pop
fidivl
and
adcl
stos
or
popf
icebp
test
arpl
mov
cli
clc
push
xchg
pushf
clc
pavgb
inc
je
xor
cmp
xchg
lods
into
and
bound
icebp
inc
gs
add
mov
push
cltd
cmp
mov
pop
push
cmp
sbb
jae
pop
jle
xchg
lcall
and
clc
push
pop
out
repz
js
mov
push
nop
push
fisubrl
in
mov
adc
jge
or
int3
test
adc
and
int
add
push
imul
out
xor
loop
movsl
int
outsl
sbb
adc
daa
adc
mov
pop
sub
loopne
or
dec
mov
cmp
push
sti
fidivs
fbld
push
push
xorb
pop
cli
scas
lret
jnp
mov
not
xor
or
in
popa
cmc
xchg
pop
or
pop
scas
and
out
jmp
inc
add
lcall
mov
mov
lods
push
dec
pop
fisubrl
jbe
add
push
sub
jne
add
in
pop
cmpsb
dec
cmp
pop
lods
and
fbstp
or
jb
das
push
out
mov
mov
cmc
stos
jns
loop
pop
mov
dec
sub
in
scas
adc
fsubrs
inc
enter
mov
add
test
adc
push
scas
scas
lret
das
fnstenv
das
popa
lods
push
enter
cs
aad
jns
mov
xchg
pop
pusha
iret
xchg
jmp
cwtl
repz
mov
pavgw
push
jne
cmp
je
repnz
jge
mov
mov
andl
dec
push
adc
sbb
xor
mov
dec
nop
pusha
lret
stos
xor
mov
out
cmp
jle
adc
es
dec
fsubr
and
jl
pusha
jle
fwait
jns
pop
rorb
fstpt
or
shrb
cmp
pop
push
mov
and
pop
mov
neg
fidivrs
mov
cmpsl
cwtl
push
add
xor
cmp
jne
mov
xor
add
mov
mov
add
jmp
iret
jmp
sub
cli
in
xchg
sbb
or
pop
cmp
sahf
jnp
add
divb
adc
jl
cmp
inc
mov
mov
pshufw
cli
sub
jmp
rclb
fdivl
rcll
mov
xor
mov
scas
adc
inc
lock
test
imul
cmc
jo
std
stos
stos
loop
scas
addb
mov
xchg
stc
or
mov
nop
sbb
mov
fs
inc
in
cmp
xchg
pop
mov
push
shr
ss
mov
test
add
xor
mov
mov
in
cmc
adc
rolb
mov
iret
test
rcrb
call
xor
std
ret
test
push
push
xchg
push
pop
or
cltd
add
pop
decb
out
movsl
les
dec
rcll
arpl
fstps
mov
ret
or
imul
jecxz
jecxz
test
out
sub
aad
xor
cli
jne
adc
lahf
in
or
fs
mov
jno
add
mov
xor
jo
in
jmp
addr16
popl
ficompl
sbb
or
xchg
push
add
add
icebp
jg
sub
mov
push
pop
dec
and
inc
push
cmpsb
push
sub
and
xchg
jmp
std
ss
in
push
inc
hlt
or
pop
aam
fisubs
or
mov
js
xor
mov
imul
push
push
jp
std
xor
fbstp
lock
jo
sti
inc
imul
pusha
mov
in
ja
pop
and
cld
cmp
and
out
push
or
inc
scas
add
sbb
jle
xchg
sbb
sbb
lods
mov
sbb
cld
fs
repnz
enter
xchg
mov
js
fs
jg
add
popa
mov
mov
cmp
mov
fbld
into
sbbb
aad
mov
jno
aad
push
inc
inc
sbb
add
sub
cmpsl
insl
scas
mov
in
leave
adc
mov
sbb
sarb
pmuludq
out
mov
dec
stos
jo
icebp
mov
enter
add
popf
pop
hlt
jmp
std
daa
bnd
rcrb
jno
frstor
xchg
pop
jmp
bound
mov
pop
int
pop
lahf
xchg
adc
xchg
cvtps2pd
pop
or
rorb
and
jae
movsl
or
cmpsb
nop
jg
cwtl
arpl
out
notl
mov
dec
cmp
mov
push
lahf
jns
sbb
movsb
adc
hlt
mov
out
push
sbb
dec
sarb
jecxz
add
add
push
shlb
test
mov
add
fyl2xp1
xor
and
popa
scas
push
rol
insl
add
in
pusha
aad
out
int
std
lret
or
adc
inc
stc
fldenv
ds
adc
addb
and
ja
push
xchg
xor
in
pop
push
xor
push
aaa
mov
rclb
je
push
pop
add
mov
pop
cmp
and
in
pusha
out
ret
nop/reserved
test
imul
mov
xchg
stos
shr
repnz
push
outsb
mov
jecxz
xchg
mov
or
inc
das
movsl
xlat
filds
repnz
lock
cmpsb
inc
or
test
adc
jmp
sbb
fwait
pop
mov
fcmove
loopne
or
xchg
loop
pop
pushfw
dec
stos
xchg
mov
arpl
jecxz
push
movsb
jmp
ds
jl
mov
je
jecxz
sarl
out
sbb
lock
std
gs
pop
cmp
loop
mov
cli
mov
mov
std
fsubrs
arpl
jecxz
push
pop
push
loopne
cmp
int
dec
sub
mulb
pop
dec
jne
push
ja
push
add
cltd
jecxz
sarb
cli
push
icebp
jle
mov
call
js
nop
sub
rclb
cmpsb
xorl
aas
dec
jb
cmpsb
cwtl
push
xor
mov
lahf
cmp
mov
push
aam
sub
xlat
pop
mov
out
cmpsl
gs
mov
loope
sub
add
inc
stos
mov
call
jbe
jae
xor
cmp
add
pushf
mov
jmp
popa
idiv
inc
inc
fistl
popf
jmp
inc
out
testb
jle
iret
and
dec
repnz
sub
jg
xchg
subl
mov
js
rorb
sub
fidivrs
inc
nop
mov
pop
jb
jl
stc
neg
fdivl
arpl
test
push
xabort
lcall
and
rorl
jo
sbb
inc
movq
cli
xchg
stos
push
sub
xorb
into
inc
aaa
mov
pushl
push
sub
popa
xchg
mov
mov
cmp
push
out
cmp
sub
idivb
xor
pop
inc
pop
mov
jne
jne
xor
repnz
pop
or
and
insl
xchg
fwait
and
out
mov
jl
fsubrs
int3
dec
sbb
fisttps
push
or
popf
push
xchg
imul
sbb
loopne
mov
xor
push
scas
into
pushf
push
inc
out
lods
or
ret
ret
aas
cs
pop
addr16
ffreep
mov
or
out
dec
mov
mov
std
add
test
pop
jns
mov
sbb
sbb
lea
push
cmpsl
mov
nop
xor
pop
push
sub
xor
repz
repnz
addr16
das
cs
lods
jecxz
fmuls
xor
mov
les
out
inc
cmp
cmp
xlat
jne
lahf
jbe
sbb
outsb
outsb
roll
push
repz
cmc
pop
pop
sbb
push
or
stos
lds
sub
ljmp
lahf
dec
ss
dec
sti
jmp
fwait
mov
xchg
push
idivb
out
cmp
int3
movq
inc
inc
sub
mov
fldenv
dec
fisttpl
iret
into
push
mov
jp
shll
in
cli
aam
dec
inc
scas
lea
inc
cmp
popa
push
pusha
jge
arpl
jae
scas
lret
push
rorl
push
fwait
pushf
cmp
mov
pop
shl
mov
push
xchg
sbb
jge
inc
push
test
nopl
pop
jl
pop
mov
bound
insb
jns
add
or
xor
xor
pop
mov
jp
or
push
sbb
mov
or
or
mov
inc
ja
pop
adc
roll
push
ret
aas
push
inc
outsl
dec
je
or
push
ficomps
aaa
ljmp
mov
xor
hlt
xchg
dec
jg
jge
sbb
hlt
aad
push
inc
mov
or
arpl
mov
das
and
ss
push
add
out
xor
arpl
out
arpl
ja
pusha
add
in
mov
notl
pop
aam
cmp
pop
mov
outsb
mov
cld
or
push
stos
pop
mov
loopne
in
movsb
fcmovnbe
xchg
pop
dec
jne
xchg
sti
jp
jmp
inc
cmpl
cmpsl
add
mov
jecxz
sub
xchg
in
cmp
cmp
or
inc
aaa
add
lret
mov
jl
or
in
shlb
pop
arpl
jp
test
cmp
mov
loop
pop
sar
xorl
pop
movsl
and
dec
mov
insl
cmp
inc
enter
xchg
sti
and
iret
cmp
dec
dec
sbb
inc
insl
and
pop
nop
pushf
xlat
std
cmp
push
hlt
push
fbstp
stc
jmp
jb,pt
xorb
out
xchg
push
add
adc
popf
pop
out
cmp
or
add
jo
dec
sub
leave
out
dec
pop
jl
push
dec
inc
lret
sti
insl
jbe
shrb
adc
adc
or
aam
test
popf
iret
test
sub
mov
aas
xchg
sbb
mov
in
push
sub
dec
mov
das
xor
mov
mov
xor
mov
pop
pop
xor
clc
nop
and
jle
pop
ficoms
xchg
pop
adc
sbb
push
out
xlat
loop
xchg
in
shrl
push
aam
xchg
inc
sbb
mov
push
dec
rolb
xchg
sti
inc
xchg
sbb
iret
mov
dec
scas
mov
in
movsl
leave
mov
mov
inc
ret
push
stos
enter
push
rclb
lcall
add
mov
xchg
out
int3
dec
inc
fdivrp
ja
mov
push
fistl
sub
and
adc
xchg
push
mov
imul
sahf
push
jp
sub
out
jne
shlb
test
sub
dec
cmpps
inc
xlat
cmpsl
mov
gs
dec
jmp
cmp
push
dec
adc
icebp
ret
mov
cmpsl
imul
push
ss
out
inc
inc
mov
cmpsb
mov
movsl
ljmp
cmp
push
out
inc
jp
push
test
into
push
cmc
sbb
in
mov
dec
mov
push
mov
out
mov
int
in
and
sti
mov
mov
inc
fbstp
cmpsl
add
dec
dec
adc
push
cmpsb
je
add
fmull
call
dec
push
bnd
insb
xchg
or
je
je
fdivs
lcall
push
mov
and
sbb
scas
scas
xchg
xor
jp
shlb
shrb
cld
out
idivb
stos
imul
sub
jo
fs
mov
leave
negl
fstpt
pop
cmp
mov
pop
push
ss
scas
xor
adc
sub
jg
cmpsl
mov
pop
cs
pop
push
lcall
lahf
fiadds
imul
inc
xlat
xchg
dec
adc
subb
js
data16
or
xchg
dec
rolb
cltd
lods
mov
and
or
cmpsl
incl
out
hlt
rolb
inc
sbb
clc
mov
fisubrs
or
fiaddl
stc
sahf
and
stos
mov
sahf
shr
insb
sub
out
pop
push
dec
pop
addl
stos
daa
clc
lea
lret
pop
or
int3
lahf
and
mov
pusha
xor
sub
mov
shrl
pop
test
inc
stc
in
lods
repnz
in
add
stos
cltd
out
lock
int
aad
cli
push
sarl
cld
je
push
dec
imul
adc
stc
pop
jp
mov
lret
mov
push
sbb
dec
cmp
icebp
jge
jo
sub
js
mov
icebp
pop
outsl
jp
xorb
nop
popf
sbb
sbb
xchg
adc
leave
mov
dec
push
test
xchg
jo
lret
xor
stc
into
or
pop
jp
and
rorl
mov
adcb
lods
fisubl
pop
sub
mov
faddp
dec
or
mov
jle
mov
aas
xchg
cmp
xchg
xchg
mov
adc
mov
xor
pop
icebp
cmp
mov
push
imul
adc
test
mov
xchg
sbb
mov
mov
mov
mov
push
pop
mov
and
lock
je
mov
dec
xchg
das
enter
movb
push
out
insb
xchg
push
fsubrl
push
jp
les
fstpt
gs
aaa
rcr
scas
dec
adc
arpl
xlat
loopne
xchg
mov
addb
dec
xor
mov
adc
jge
push
aam
pop
iret
xchg
push
sub
cmpsb
fadd
jmp
out
movsb
fcoml
mov
sbb
test
imul
push
iret
stc
outsl
scas
or
inc
dec
loopne
add
outsb
or
sbb
les
stos
cli
iret
jl
mov
cmpsb
outsl
cmp
divb
jl
inc
dec
sub
loopne
mov
sub
xor
mov
adc
sar
dec
lret
lret
mov
add
or
lret
sub
jecxz
pop
cltd
inc
pop
sub
out
jge
xchg
jle
push
lock
cwtl
xchg
xlat
jbe
sbb
aas
dec
scas
icebp
test
xor
mov
or
pop
mov
andb
adc
mov
and
mov
pop
mov
adc
mov
dec
or
mov
enter
adc
push
bound
mov
cmp
fisubs
inc
inc
mov
inc
mov
xor
dec
inc
xchg
movsb
pop
pop
xchg
jge
dec
push
int3
pop
loop
testb
mov
loopne
icebp
test
icebp
mov
mov
in
test
mov
in
or
lahf
sti
ret
inc
and
xchg
sub
inc
ss
out
push
lock
pop
push
mov
clc
shl
fs
ret
jns
cwtl
push
xchg
sahf
cli
xor
in
pushf
dec
lods
test
jb
xchg
pushf
lock
les
inc
push
rcll
mov
dec
push
in
mov
movaps
cli
out
sbb
pop
cmp
mov
pop
add
pop
pop
mov
jbe
pop
imul
or
xchg
or
lret
push
test
xchg
inc
sub
push
lret
sub
test
push
lock
cmpsb
sahf
ret
pop
lock
or
movsb
loope
xchg
gs
dec
xchg
hlt
push
cwtl
lock
daa
jge
dec
pop
mov
jg
movsl
or
stos
lahf
jnp
jp
ret
mov
cli
js
icebp
sti
cltd
or
mov
ss
iret
fdivp
aad
outsl
lret
leave
je
sbb
lods
xor
mov
out
cmpb
jb
loope
ljmp
push
jg
push
jecxz
mov
mov
add
popa
sbb
dec
sbb
out
sub
push
push
or
pop
push
mov
cmpsb
adc
jns
or
int3
mov
inc
cmp
nop
lock
sbb
jnp
xlat
pop
lret
mov
cmp
lock
dec
data16
lods
push
ljmp
decl
push
mov
jbe
inc
cmp
mov
aas
push
insl
add
stc
and
lret
pop
mov
cmp
cwtl
xchg
xor
in
push
js
pop
ret
xchg
pop
cmc
iret
cmpsl
or
pop
mov
jp
mov
arpl
in
loop
rcl
shrl
xor
mov
lods
inc
shll
inc
mov
dec
cld
fidivrl
pop
and
data16
cmp
orb
sbb
sub
mov
pop
xchg
jne
int
mov
sub
mov
out
xchg
imul
xchg
jg
jge
repnz
sub
inc
pop
js
mov
xchg
test
in
dec
loope
dec
mov
cmp
out
cmp
xchg
sbb
pop
jnp
clc
test
dec
idiv
dec
inc
sub
mov
in
mov
pop
push
int
jmp
in
xor
xchg
cltd
mov
xchg
scas
out
xchg
imul
test
mov
jmp
test
ljmp
lds
shll
dec
sbb
ljmp
mov
subl
lea
mov
out
out
add
in
and
stos
lret
movsb
xchg
mov
lahf
frstor
sti
xchg
repz
int
iret
iret
xchg
mov
call
fdivrl
rcl
insb
xor
popf
add
loopne
mov
lret
stc
lahf
xchg
scas
xor
bnd
mov
push
mov
iret
sub
cld
fnsave
push
ljmp
mov
sahf
gs
mov
mov
rcll
lds
in
data16
xchg
jl
push
lock
addr16
sub
out
mov
rcr
std
mulb
jp
xchg
fsts
jp
jl
xchg
xchg
mov
jne
mov
mov
subb
cmp
inc
inc
jae
and
mov
sub
pusha
sbb
sahf
push
lret
aaa
add
rorb
outsb
in
add
leave
arpl
and
test
ja
fidivrl
mov
cmp
pop
rclb
add
ja
push
inc
pop
call
mov
out
aad
pop
and
outsl
rcr
or
dec
cmp
cld
loopne
in
cs
fsub
jne,pn
push
pop
lcall
bndstx
icebp
insl
mulb
cmpsl
test
jp
popf
stos
pop
jecxz
jmp
push
sub
mov
xrelease
xchg
subl
cmpsl
mov
cmp
mov
mov
xor
mov
lret
in
or
xlat
movsl
test
mov
cmp
es
loop
cmpsb
fisubl
xchg
cmovno
xor
enter
daa
or
lret
or
pop
cltd
out
fbld
outsl
push
shll
fiaddl
jle
pop
inc
mov
or
popf
fimuls
jo
or
pop
test
mov
jmp
aam
fwait
jae
mov
or
rclb
andl
mov
cmp
sbb
mov
and
pushf
push
mov
addl
push
lods
shl
addl
stc
mov
mov
aam
sbb
outsb
insb
ficompl
inc
mov
leave
aaa
jmp
lahf
xchg
or
sbb
iret
pusha
inc
and
adcb
dec
rolb
repnz
repnz
mov
cmp
jno
adc
out
nop
and
gs
jecxz
jle
ljmp
dec
mov
add
cmp
das
push
leave
mov
sub
aam
dec
lock
pop
mov
jnp
jae
repz
lds
add
or
or
insl
push
jo
hlt
or
loopne
push
into
loope
cmc
into
ret
fcompl
sub
mov
shl
add
xchg
repnz
dec
cmpsb
mov
neg
add
jle
cmp
xchg
aad
les
sbb
stos
scas
sahf
insl
addr16
inc
sub
jae
xor
xchg
aas
dec
sub
js
mov
mov
cli
pop
sub
cli
inc
leave
dec
cwtl
sub
dec
adc
add
fidivl
push
dec
icebp
and
cld
add
pop
mov
jecxz
ss
mov
out
out
jb
and
mov
es
andb
ds
movsl
icebp
lcall
jmp
nop
inc
mov
mov
dec
ss
call
or
sarl
or
mov
xchg
xchg
loop
std
inc
adc
xor
loop
cmp
in
xor
inc
mov
lods
jne
jecxz
out
adc
jnp
sub
fdiv
fstpl
mov
dec
or
dec
push
out
and
push
sti
movsl
mov
push
repnz
and
inc
rclb
mov
push
dec
jmp
mov
mov
cltd
xchg
inc
insb
imulb
call
mov
shll
push
test
jge
dec
lds
xor
cmpsl
fcompl
in
and
and
test
inc
cwtl
gs
sbb
shrl
sahf
aaa
pop
stos
or
pop
jnp
filds
adc
out
sub
pop
dec
icebp
cmpl
jo
jb
cmp
push
dec
inc
or
lret
loop
sbb
mov
bound
fs
test
dec
dec
scas
fndisi(8087
mov
push
xor
and
add
or
and
into
imul
adc
mov
test
and
pop
scas
outsl
add
mov
mov
jne
inc
rcr
adc
lods
insb
mov
cmp
dec
add
fdivrl
or
pop
es
pop
mov
bound
adc
jns
push
ja
cmp
mov
faddl
sub
repz
mov
mov
cmpb
insb
cs
push
icebp
and
mov
jle
xchg
add
fs
ljmp
mov
xchg
xor
inc
scas
fwait
sub
cmpsb
vpperm
jbe
shr
das
mov
or
jae
fisubrl
xor
movsl
leave
mov
iret
inc
in
cmp
mulb
push
mov
rolb
jbe
inc
jae
shrb
cmp
scas
into
enter
lcall
jmp
adc
jmp
fwait
mov
fadds
lahf
arpl
cmp
fbld
es
add
faddl
dec
or
movsl
cltd
fsubr
dec
jo
xchg
out
cltd
jecxz
dec
movsb
out
pop
dec
push
mov
outsl
lods
lods
mov
push
push
sbb
aas
iret
xchg
push
cwtl
bound
cwtl
push
fucomi
je
ret
sub
mov
clc
mov
jb
mov
mov
mov
xlat
xchg
inc
push
jle
dec
sub
stos
mov
xchg
pop
xor
mov
inc
fisubl
fldcw
popf
mov
cmp
imul
nop
aam
loope
jnp
mov
cmpsl
jno
pop
dec
add
adc
mov
inc
and
stos
xchg
and
or
lret
orl
mov
sub
ret
gs
sti
scas
push
imul
stos
pushf
imul
int3
popf
cmpsl
idivl
lret
xor
icebp
mov
or
pop
pop
insl
test
push
cltd
mov
push
cmp
jp
and
inc
push
iret
test
jno
push
in
and
mov
cwtl
jne
mov
inc
jnp
and
lods
or
repnz
dec
iret
xlat
repz
and
xor
inc
jge
cmpsl
sbb
push
lahf
dec
xchg
mov
stc
int
mov
mov
adc
je
inc
lods
sbbb
dec
scas
subl
pop
pop
xor
inc
and
ret
mulb
stos
mov
sub
popa
cmp
mov
cmpl
rclb
inc
dec
sub
rcll
mov
dec
xor
cmp
arpl
mov
pop
pusha
adc
push
sahf
sub
addb
xchg
rorb
xchg
sub
mov
pop
int
mov
jmp
mov
jbe
xchg
xchg
lcall
cmp
stos
insb
int3
das
movsb
mov
mov
mov
shll
repz
sbb
subb
cs
adcl
adc
fmul
xchg
clc
or
jg
and
fisubrs
lret
xor
into
fidivs
ds
dec
in
sub
xchg
out
mov
push
out
add
leave
test
dec
or
xor
push
adcl
in
mov
pop
imul
push
xchg
or
jno
fs
pop
out
nop
fiaddl
dec
gs
sti
mov
push
loop
mov
mov
ljmpw
xor
cmc
or
insl
icebp
jl
popa
cmp
pop
and
fstp
cmp
cli
pop
inc
shlb
mov
pop
mov
imul
cmpsl
lods
cmp
movsl
pop
or
testb
stos
cmpsl
mov
aaa
aam
or
xor
cmp
enter
daa
cld
cli
loop
dec
int
adc
push
or
push
mov
pop
pop
mov
xchg
xorb
pop
add
dec
or
sub
pop
in
ja
mov
mov
imul
or
pop
out
xchg
sahf
fisubrs
mov
adc
jbe
pop
dec
mov
sbbl
mov
xchg
cs
cli
sub
dec
mov
xchg
aaa
and
dec
jnp
hlt
adc
aad
add
leave
roll
sub
and
fsubr
stos
dec
faddl
aad
test
mov
add
cmc
pop
jge
jge
dec
aad
jp
jle
sbb
xchg
bound
rcr
faddl
lahf
mov
enter
sub
dec
stc
xor
push
jecxz
pop
and
ja
pop
lret
fstps
mov
leave
movsl
inc
lahf
cltd
fcmove
ja
ja
mov
jne
sub
int
add
notb
inc
ror
movsl
mov
add
push
lahf
hlt
or
cmp
icebp
or
fstpt
mov
add
jecxz,pn
adc
in
mov
call
inc
rcrl
mov
out
pusha
or
movsb
adc
and
in
lcall
mov
in
push
pusha
mov
mov
shlb
cmp
mov
adc
jg
add
leave
sub
inc
js
lahf
adcb
xchg
cmp
out
mov
in
dec
test
orb
pop
in
push
test
cmp
cmp
dec
xor
dec
dec
mov
jno
incl
movsb
dec
lods
fildl
movsl
cmpsl
push
ret
aad
inc
sub
add
pusha
dec
push
repnz
sbb
lods
pop
push
push
and
push
and
cmp
mov
jl
mov
xchg
and
push
or
pop
insl
jmp
ja
shlb
ljmp
adc
xchg
cmpsb
adc
lds
add
dec
sub
fists
das
stos
jmp
pop
outsl
fcmovnu
push
sub
add
bound
xchg
or
and
cs
imul
adc
shll
enter
mov
push
out
test
jae
mov
push
cld
int3
test
push
push
dec
rcrb
repz
mov
dec
popf
jle
ret
shlb
or
mov
stc
insb
xor
sti
cmpsb
xor
std
push
imul
mov
pushf
jmp
sahf
cmp
addl
jle
les
or
pop
mov
arpl
out
jge
fs
sti
fdivrs
cli
inc
push
outsl
in
and
mov
cmpsb
test
inc
lds
andb
jp
pushf
inc
mov
sar
mov
lods
pop
fs
les
es
cmpsb
cmp
cltd
push
xchg
in
push
mov
repz
cmpsb
pop
push
aas
sub
cltd
scas
cmpsl
adcb
dec
or
std
jo
pusha
mov
xchg
das
jae
push
mov
xor
inc
and
mov
jno
inc
popa
scas
in
cwtl
sbb
inc
test
mov
push
pop
xchg
scas
fsts
sub
ja
negb
jecxz
xchg
ret
xor
hlt
movsl
repz
icebp
sbb
mov
shll
pop
icebp
pusha
inc
aas
aam
xchg
arpl
push
movsl
jne
stos
push
inc
stos
movsb
push
or
xchg
or
das
les
push
hlt
add
mov
cmp
fs
data16
out
adcl
cltd
pop
movsl
sti
pop
jl
jge
div
cmc
out
inc
mov
js
xorl
shrb
and
xchg
cs
or
xor
mov
jae
call
mov
addr16
enter
mov
rcrb
add
ret
add
imul
cwtl
xchg
inc
sbb
adc
and
ja
insl
stc
push
inc
popf
lret
cltd
add
std
add
mov
inc
add
movsl
pushf
jmp
or
outsl
cmp
pop
xor
push
lahf
sbb
mov
ljmp
pop
int
push
push
out
add
sub
insb
daa
iret
rcl
dec
cltd
iret
xchg
push
lds
stos
mov
xchg
jp
fs
test
jno
or
je
xchg
cmpsl
loope
cmp
push
cltd
ret
sbb
js
fistpl
aas
jo
out
ja
sbb
dec
and
lock
nop
push
cmc
aaa
pop
mov
or
adc
repz
outsb
rolb
mov
stc
mov
and
mov
dec
std
cmp
clc
jle
inc
inc
cmp
adc
rcrl
jle
xchg
mov
fiaddl
out
add
aas
aas
adc
mov
xor
xor
stos
or
xchg
ret
cltd
and
add
loopne
dec
cmp
shll
jge
xchg
mov
ds
xchg
mov
adc
or
mov
and
ret
aas
inc
xchg
pop
cmp
iret
gs
jae
adc
out
vmovdqa64
orl
inc
cs
shl
adc
and
jns
lcall
outsl
pushf
sbb
push
mov
lahf
idivl
mov
call
test
sbb
arpl
pop
loop
stos
mov
std
xchg
es
or
cmpb
jae
add
cmc
lea
mov
xchg
mov
mov
inc
add
mov
jbe
mov
mov
mov
sahf
fs
mov
mov
aam
mov
xor
fcmovne
outsl
pop
sbb
sbb
cld
das
inc
lods
icebp
push
pusha
insb
movsb
inc
sbb
js
mov
addr16
cltd
mov
outsb
add
bound
mov
int3
daa
loop
dec
shll
or
xchg
test
mov
call
lcall
int3
lock
in
push
lahf
sub
std
mov
popa
lahf
cmp
pop
out
out
fcmovne
mov
mov
mov
sub
mov
mov
inc
push
xchg
cmp
push
scas
xchg
mov
mov
gs
psubb
cmp
scas
es
jmp
ljmp
adc
push
xlat
or
fst
pop
pop
xchg
jmp
jge
mov
xchg
sbb
push
dec
shl
ss
mov
ror
dec
push
or
mov
pop
sbb
xchg
cld
sub
dec
sub
mov
jo
pusha
lret
cs
movsb
xor
adc
sar
test
stos
push
out
ficomps
lds
test
sbb
cmpsl
scas
and
cmp
cmp
xchg
pop
inc
mov
lock
outsl
movsl
or
pop
scas
inc
shr
jmp
jmp
pop
inc
arpl
lea
xchg
push
inc
aaa
sub
test
rcll
ljmp
int3
jae
subb
dec
push
push
mov
incl
jge
sti
lcall
inc
in
data16
jg
cs
mov
sub
imul
lret
mov
cmpsl
pop
out
arpl
movaps
idivb
loopne
fsubrl
mov
pop
adc
dec
dec
cmpsb
mov
push
adc
xchg
jle
cmp
out
or
xchg
push
cli
andb
and
jmp
stos
adc
pop
mov
sahf
lret
test
xor
rolb
lods
xchg
add
xchg
adc
jecxz
inc
cli
testl
subb
sbb
or
mov
out
lods
add
test
int3
sbb
hlt
movsb
dec
sub
or
add
inc
mov
imul
and
or
xchg
fmull
test
and
mov
scas
mov
arpl
push
sbb
in
out
cwtl
jbe
icebp
rorb
ljmp
add
adc
add
jecxz
dec
ljmp
xchg
clc
imul
or
insl
xchg
insb
jnp
test
andb
cs
insb
lds
popf
xchg
cmp
cmc
cmp
fdivr
test
push
xchg
xor
or
xchg
clc
iret
stc
out
in
arpl
nopl
arpl
jnp
jo
sub
xchg
hlt
test
push
mov
jp
pop
mov
test
ja
pop
dec
inc
addl
cmpsl
int
xchg
push
in
xchg
repz
and
or
cmpsl
xor
dec
mov
imul
cmp
stos
xlat
js
daa
fdivrs
cmp
inc
test
cmc
pop
repz
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
xorl
mov
mov
mov
xor
add
mov
mov
xor
orl
push
xor
mov
mov
subl
add
mov
mov
subl
mov
xorl
mov
mov
mov
subl
mov
add
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
sbb
mov
sbbl
xor
and
mov
add
movzwl
xor
mov
movb
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
pushl
pushl
call
cmpl
jb
lea
mov
movl
cmpl
je
cmpl
jle
jmp
push
pushl
pushl
pushl
push
pushl
call
xor
or
dec
mov
jmp
mov
add
mov
xor
subl
add
sbbl
mov
movl
cmpl
je
cmpl
jl
jmp
push
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
movl
push
movl
cmpl
je
cmpl
jg
jmp
push
call
xor
or
dec
mov
jmp
movl
mov
push
mov
andl
xor
or
mov
sbbl
push
add
jmp
mov
movl
mov
inc
cmp
movl
jb
not
mov
orl
xor
sbbl
add
movl
jmp
sbb
mov
subl
mov
sbbl
xor
orl
mov
orl
add
movzwl
mov
and
mov
movzwl
addl
xor
add
inc
mov
movl
mov
inc
mov
mov
movl
cmp
jne
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
push
push
call
jmp
mov
mov
sub
xor
add
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
pushl
push
pushl
push
call
jmp
mov
xor
add
neg
mov
or
movl
movzbl
or
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
xor
mov
adc
mov
adcl
xor
orl
add
mov
mov
mov
je
add
mov
andl
mov
xor
adcl
xor
sub
notl
sub
xor
sub
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
adc
mov
subl
lea
movl
mov
mov
mov
add
adcl
imul
mov
xor
mov
xorl
mov
movl
add
movl
and
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
jmp
xadd
dec
push
dec
dec
sar
mov
xor
jnp
xlat
sahf
jnp
adc
ja
andb
dec
sahf
or
or
jecxz
ret
je
imul
sti
fstps
mov
hlt
scas
cmp
inc
jb
or
fistps
orl
lret
pop
outsl
mov
add
js
or
lea
pop
loope
loop
add
test
add
into
inc
jno
or
sbb
jne
stc
out
jg
push
test
dec
popf
pop
cmp
inc
mov
push
andl
aaa
dec
fimull
pushf
xchg
push
test
repnz
xor
insl
addr16
pop
push
pop
mov
inc
hlt
mov
or
mov
or
popf
add
sarl
imul
inc
inc
push
mov
jnp
fsubs
int3
xor
icebp
dec
jnp
or
add
out
in
dec
sbb
loopne
xchg
or
test
fdivs
and
xor
xor
mov
xor
xor
xor
xor
xor
mov
and
in
mov
roll
cmc
loopne
ljmp
mov
loope
pop
jo
out
xlat
aas
outsl
or
inc
inc
enter
mov
xchg
enter
ds
jp
enter
adc
push
push
or
call
mov
mov
imul
int
mov
test
push
das
sub
js
push
push
cld
inc
xchg
out
mov
mov
inc
insb
mov
iret
ljmp
jmp
bound
mov
daa
pop
out
test
stc
testl
std
fmull
or
dec
push
xlat
mov
mov
mov
lret
int
ljmp
dec
mov
int
fidivs
fwait
lret
xor
loop
mov
dec
mov
sub
xor
out
xor
sahf
rcrb
sub
pop
pop
jmp
movsb
addr16
leave
mov
jmp
lods
pop
cmp
aad
shrl
into
xor
into
call
stc
jo
test
xchg
jl
loopne
push
push
mov
jg
push
cmp
add
mov
jecxz
xchg
mov
stc
cmp
inc
in
or
push
and
aam
xorb
pop
cmp
mov
fstl
lds
daa
jb
popa
pop
dec
movsb
lock
lods
mov
add
xor
pop
mov
iret
rcrb
out
orb
out
gs
mov
hlt
pushf
sti
cld
int3
in
das
jp
dec
in
aas
push
jae
cmp
sub
add
push
imul
subl
enter
bound
not
mov
mov
mov
xchg
sub
or
xchg
popf
xchg
xor
das
cmp
hlt
into
push
insb
push
notl
repnz
or
fsubrs
sub
outsb
nop
sub
push
or
test
sbb
stos
ret
or
add
shll
fdivrl
iret
mov
or
mov
add
push
adc
sbb
mov
in
stos
ljmp
lahf
nop
fwait
jb
bound
push
push
xchg
in
shl
pop
aaa
or
lret
push
mov
and
push
ss
lcall
test
mov
out
mov
push
pop
rol
fwait
jmp
fwait
dec
xchg
jne
mov
scas
fisubl
fiadds
jne
stc
or
pop
add
pop
roll
push
or
cmp
mov
into
add
pop
daa
insl
std
jg
push
dec
and
test
and
adc
mov
xchg
fbstp
cmc
lods
sti
mov
mov
movsb
mov
lret
pop
rorl
add
fadd
mov
imul
xchg
sub
push
mov
inc
push
mov
cmp
addb
jo
push
sub
fidivrl
lret
xor
xor
mov
push
xlat
inc
sub
mov
outsl
or
daa
loop
stc
add
jmp
in
gs
stos
sub
leave
push
or
jno
lret
xor
adc
stc
scas
or
call
sbb
jo
fs
movups
rorl
mov
cmp
xor
ljmp
imul
push
adc
in
ja
jge
cmp
icebp
outsb
out
pop
aas
push
adc
ljmp
inc
in
dec
scas
mov
cmp
outsl
push
push
push
sti
bound
ret
lds
xchg
addr16
inc
inc
push
mov
pop
aas
xchg
add
jl
cli
inc
ss
xchg
addr16
and
adc
mov
loop
scas
jge
sbb
mov
pop
and
imul
cmp
adc
mov
mov
bswap
pop
pop
jne
arpl
mov
in
cli
jno
shll
jl
mov
mov
into
test
sub
jg
movsl
cmp
cmpsb
outsb
js
test
out
stc
scas
adc
jp
inc
rcrb
out
stc
push
mov
das
jne
shl
aam
pandn
mov
cmp
push
popf
sub
and
out
stos
aas
insb
div
pop
mov
inc
adc
pusha
add
mov
loope
xchg
mov
mov
or
sbb
icebp
stos
lods
in
cmp
cmpsb
es
rorl
pop
adc
mov
pop
inc
mov
push
adc
shll
or
dec
or
mov
jo
jecxz
stc
xlat
jbe
bound
faddl
inc
xor
mov
into
dec
sbbl
xchg
dec
sub
jp
test
push
lahf
aad
push
xor
pusha
jecxz
adc
popf
xor
adc
jnp
and
ret
jg,pn
ror
or
and
jbe
outsb
movb
cmpsl
inc
push
mov
mov
push
mov
xchg
dec
pop
idivb
inc
jbe
xchg
nop
mov
inc
out
repz
sub
into
gs
and
js
adc
pop
stc
mov
fisubrl
fdivs
mov
mov
xor
sub
jnp
sub
lds
hlt
mov
add
out
add
das
in
mov
imul
jne
cmp
xchg
dec
dec
mov
cmpsb
lcall
push
dec
or
lods
or
xchg
aam
ds
es
pop
cmp
lret
adc
movsb
mov
jp
leave
in
fnstsw
call
test
fcompl
iret
ficompl
pop
inc
stos
iret
adc
sbb
xor
sub
push
lret
add
xchg
cmc
movsl
aas
icebp
aaa
dec
addr16
sub
test
sub
xchg
pop
outsb
fs
out
and
negb
mov
testl
sbb
mov
dec
sti
aad
cmp
mov
xbegin
jns
xchg
xor
fsubrs
mov
push
lock
and
incl
imul
inc
sub
jecxz
pop
push
std
ljmp
cmp
mov
cs
mov
push
pop
in
dec
imul
pop
mov
pop
outsl
sub
pop
xor
mov
divb
aas
cmpb
fistpl
pop
clc
les
cmp
imul
pop
dec
pop
push
in
test
sub
and
pop
xchg
adc
cmp
mov
xchg
rcrb
jmp
nop
push
mov
fcmovu
push
andb
mov
jge
stc
stc
add
insb
fiadds
pop
adc
dec
mov
xchg
cmp
loop
adc
repnz
shrl
cmc
mov
sbb
xor
mov
stos
shll
xchg
sub
lea
mov
fwait
mov
icebp
dec
pop
adc
in
add
sub
sarl
xchg
sub
test
and
jmp
aas
add
in
movsl
cmp
sub
jmp
bound
dec
dec
mov
int3
jp
stos
mov
xor
scas
daa
rclb
lret
in
pop
pop
push
adc
mov
lds
cli
cmp
cmp
mov
scas
jbe
rorb
shr
mov
pop
into
xchg
and
xchg
jmp
jb
adc
lahf
or
dec
mov
pop
inc
xor
add
aad
movsl
aad
repz
jg
insl
ffreep
or
iret
pop
mov
add
sub
pusha
popf
push
ss
fwait
out
scas
call
xor
jge
hlt
pop
cmp
fwait
cmp
addl
loopne
imul
cmpsb
mov
adc
jmp
ss
imul
or
es
lcall
fs
jp
stos
nop
shrl
in
inc
es
cmc
cmpsb
jno
cmp
push
fwait
cli
fwait
mov
ljmp
cmp
adc
sub
mov
loopne
filds
aaa
jle
sbb
cmp
xlat
ljmp
mov
stos
notb
mov
out
xor
out
mov
fstl
sbb
ss
xchg
jmp
sub
jnp
hlt
and
nop
pop
cld
mov
jg
mov
inc
xlat
adc
sub
outsl
in
pop
outsb
and
cmp
sub
mov
adc
jae
xchg
loope
sbb
push
mov
pop
or
fdivl
push
mov
addr16
mov
xorl
loope
add
xchg
ljmp
add
pop
mov
hlt
loopne
cmp
or
adc
xor
out
mov
push
imul
mov
sub
scas
inc
mov
hlt
icebp
sbb
inc
dec
rclb
out
jno
mov
cmc
gs
sar
pop
add
pop
xor
xchg
test
and
ss
add
test
cmp
into
xor
adc
cmp
imul
aaa
insl
sub
out
jbe
mov
and
stc
sbb
pop
fwait
movsl
leave
push
sti
dec
sti
js
dec
in
clc
mov
cmc
push
sub
out
movb
sub
xchg
pusha
adc
cmp
cs
and
xchg
cmp
fs
inc
insl
jnp
lahf
mov
pop
adc
subl
push
adc
push
pop
pop
add
sar
sbb
cli
mov
rolb
lods
sbb
mov
je
sarb
push
xor
into
inc
mov
inc
or
iret
cld
ja
out
imul
ljmp
cmp
adc
mov
rcrb
rclb
inc
adc
xor
mov
shlb
mov
sbb
xchg
mov
arpl
inc
outsb
mov
lea
jo
ret
ds
cmp
sbb
lret
dec
or
xor
test
cli
xor
mov
test
jp
loop
shll
lret
adc
pop
mov
and
add
pop
sbb
fwait
enter
xchg
jle
faddl
cs
mov
sub
ds
ljmp
mov
rol
test
mov
adc
inc
and
pop
mov
push
push
pop
out
sahf
adc
mulb
mov
cs
mov
cmpsb
fcmove
or
pop
push
mov
add
xchg
fsub
add
add
adc
cmp
jl
mov
jb
or
jb
inc
dec
push
cli
mov
mov
and
lret
fwait
daa
or
push
pop
or
lahf
push
int
fwait
push
cmp
sub
lret
add
out
into
sub
mov
shrb
mov
jge
sbb
imul
mov
dec
out
idivl
inc
pop
mov
lret
das
rclb
or
iret
enter
fsubs
pop
push
stc
inc
fidivs
mov
div
xor
std
ficoms
mov
or
adc
pop
es
addl
hlt
pop
fists
lds
mov
mov
jne
inc
jae
fsubrs
xchg
jbe
mov
mov
jecxz
pushf
insb
sub
scas
je
inc
lahf
jmp
imul
fsubs
leave
or
lods
pusha
inc
out
and
or
jno
cvtps2pd
adc
pop
pop
mov
out
xchg
outsb
pop
cs
sarb
and
lret
jge
out
das
movsl
mov
jecxz
xchg
orb
jmp
decb
nop
inc
idivl
mov
repnz
iret
pop
das
dec
push
mov
mov
andl
cmp
fwait
adc
inc
ficoml
int
xchg
push
inc
and
push
mov
outsl
pushf
dec
dec
cmp
lds
lret
lods
in
pusha
mov
inc
lods
fildl
pop
lcall
inc
pop
cmp
sbb
syscall
in
lret
into
scas
mov
lock
push
sbb
sbb
sub
clc
daa
scas
sub
nop
cmpsb
jg
lods
pusha
mov
sub
dec
mulps
add
mov
fs
ljmp
imul
jecxz
ficoms
sahf
inc
sbb
push
js
stc
test
xchg
gs
push
cmp
lds
mov
js
adc
sbb
ret
fnstcw
cltd
or
stos
or
mov
mov
cmp
cmp
or
and
out
addr16
nop
shlb
inc
outsb
ss
lds
hlt
fucom
loopne
lea
pop
les
loopne
int3
dec
cmp
lea
dec
xchg
in
mov
call
test
sahf
adc
out
fs
push
xor
and
sub
sub
sbb
jo
and
out
mov
xor
dec
imul
and
stos
mov
cs
adc
daa
lahf
adc
loope
push
dec
test
lahf
or
jb
mov
sti
jg
das
adc
mov
cltd
popf
lahf
xchg
rorb
bound
and
arpl
popf
jo
mov
lret
mov
or
pop
xor
shrl
or
in
mov
adc
and
imul
ficomps
mov
push
sar
jl
repnz
pop
in
push
hlt
incl
mov
popf
mov
fsubrs
inc
enter
and
testl
sub
out
jnp
jno
out
loopne
cmpsb
call
icebp
lods
sbb
sub
test
add
cmp
sbb
int3
jae
jmp
addb
add
fs
out
jbe
mov
loopne
pop
lahf
loope
sbb
sub
mov
jb
add
xor
lahf
pop
lods
rcrb
sti
inc
adc
sbb
adc
ja
out
pop
scas
push
ret
sub
and
xchg
pop
std
jae
pushf
push
loopne
push
sub
loop
test
in
jbe
shlb
mov
jne
mov
and
push
mov
into
jae
mov
cmp
les
pop
cli
fwait
mov
icebp
mov
scas
ss
mov
dec
adcb
lcall
movsb
cmpsl
inc
dec
push
sub
jge
in
dec
sub
rcrl
cmp
addr16
mov
bound
jb
les
cld
leave
jmp
call
gs
push
imul
and
out
test
aas
and
in
sbb
jge
pop
sub
pop
dec
jle
pushf
jbe
xchg
call
in
paddb
push
dec
jns
insl
pop
adc
push
repnz
in
pop
jae
push
lods
insl
push
popa
pop
xchg
pcmpeqw
pop
mov
pushf
sub
or
ret
fdecstp
adc
dec
neg
inc
hlt
mov
cmpl
imul
adc
or
out
cmp
xor
imul
jne
cli
loopne
je
mov
out
outsl
and
dec
dec
pop
iret
not
pop
jns
and
gs
aas
ds
jecxz
rol
sub
mov
dec
iret
adc
mov
icebp
cmp
pusha
jecxz
out
shl
jae
add
sahf
xchg
and
cli
gs
lods
cmp
add
sub
pop
sar
fstpt
mov
sti
xchg
and
sbb
popa
push
cmp
mov
and
test
jne
mov
or
jno
mov
int3
fs
cmp
insl
xor
jno
mov
mov
sbb
pop
in
pop
jb
cmp
mov
xchg
std
cmpsb
push
lret
icebp
push
pop
jp
call
jne
movsb
es
mov
push
cwtl
movsl
sbb
xchg
mov
popa
fisttps
push
aam
cmpsl
xor
dec
js
sub
xchg
push
movsb
jecxz
scas
or
add
hlt
outsl
jo
sub
pop
inc
sub
ret
outsb
daa
push
mov
in
push
add
out
adc
pop
add
es
loop
or
pop
and
push
mov
inc
lea
jmp
xor
pop
mov
and
scas
lods
pop
inc
test
es
mov
xor
sbb
xor
cmp
rorb
in
dec
shlb
pop
xor
ja
adc
outsb
sbb
pop
int3
imul
cmp
fdivs
inc
psubusw
popf
aas
bound
add
mov
cmpsb
adc
lods
fnstenv
pop
mov
mov
xor
dec
and
jmp
jg
xlat
sbb
push
inc
ljmp
cmp
and
xchg
and
out
mov
add
xchg
jle
arpl
push
fadds
xchg
ret
pop
int
fadds
dec
popa
mov
leave
hlt
dec
xchg
mov
sbb
mov
add
int3
jp
int3
adc
loope
inc
push
rcrb
and
push
jmp
mov
out
int
inc
xchg
test
jl
lcall
mov
cs
dec
mov
and
adc
aaa
hlt
cli
test
mov
push
insl
mov
mov
xchg
sbb
mov
mov
loopne
xorl
int3
push
out
xchg
jecxz
mov
insb
mov
pushf
mov
gs
jb
xor
cmp
dec
inc
loop
enter
push
test
xchg
fcomps
or
mov
popa
add
stos
or
xchg
lock
aas
data16
mov
jnp
add
fcoms
sub
popa
pop
adc
sub
push
icebp
daa
gs
jge
cmc
idivb
nop
sub
out
mov
sub
mov
mov
fwait
jmp
pop
adc
mov
enter
bound
fisubl
ds
pop
in
shll
or
jb
mov
mov
lret
mov
std
xor
xor
sar
cs
test
inc
mov
roll
cwtl
movsl
movsb
inc
inc
mov
je
clc
cmpsl
dec
out
mov
xor
fimull
pusha
out
sarb
sub
scas
addl
lret
popf
movsl
popa
stos
rolb
cmp
xchg
or
sbb
pop
pop
sub
cmc
pop
mov
adc
pop
nop
mov
xorb
pop
cmp
pop
jle
xchg
mov
mov
jp
gs
nop
bound
int
aam
dec
clc
fidivl
sbbb
in
jge
out
nop
ret
jo
ds
adc
mov
xlat
mov
pop
testl
pop
fxch
push
shlb
repz
fld
adc
sub
jb
in
and
push
loope
rorb
mov
sub
inc
pop
mov
es
jg
ret
xor
push
dec
pop
jl
and
push
orl
or
cwtl
je
or
daa
or
adc
scas
lret
push
aas
outsl
and
outsl
sub
lahf
mov
or
dec
xchg
popa
inc
xchg
pop
cwtl
lea
sbb
lds
adc
and
inc
pop
out
cmpsb
mov
data16
inc
fimuls
jle
loopne,pt
inc
lods
push
mov
cmp
add
fcomps
mov
sbb
mov
xor
cmp
test
stc
aam
adc
push
ret
iret
adc
into
xchg
pop
test
inc
ss
lock
test
mov
jmp
cmc
mulb
shrl
fs
addl
cli
mov
xor
inc
outsl
inc
cmp
aas
aaa
jl
sbb
jae
dec
push
pop
lock
inc
mov
ror
or
or
xchg
in
inc
sbb
popf
jb
and
ljmp
mov
xor
aad
loope
hlt
push
and
sbb
scas
adc
xor
fwait
and
out
rolb
loope
arpl
popf
pop
cmp
addr16
aad
sahf
inc
sub
dec
rcrl
pop
and
subb
jl
adc
repz
scas
movsb
mov
and
pop
popf
and
adc
cmpsl
xchg
and
and
mov
push
aad
inc
hlt
inc
cmovnp
ret
mov
cmp
adc
dec
aaa
imul
cmp
pushf
sti
jb
jl
mov
inc
add
test
pushf
or
add
or
jmp
sbb
lret
hlt
cld
ficompl
xchg
pop
mov
and
clc
jmp
test
xchg
add
outsl
xor
push
in
stc
adc
hlt
outsb
fildll
fldl
mov
int
push
xor
xchg
pop
and
push
divb
push
inc
stos
inc
mov
ret
sub
inc
out
out
pop
push
jl
xchg
aad
fucom
mov
jle
je
fbld
test
dec
dec
push
jae
pop
fistl
mov
popa
int
push
lods
scas
cmc
je
inc
popf
bound
mov
addr16
adc
jo
jnp
xlat
inc
fcmovne
pushf
mov
cmpsl
or
js
int
movsl
out
sub
lds
push
cmpsb
lret
es
shl
lcall
xor
or
cmc
inc
adc
and
push
aaa
test
jnp
repnz
xchg
jmp
sti
xchg
sti
inc
jno
js
inc
pop
mov
push
push
popf
mov
fisttpll
dec
jp
inc
mov
adc
mov
testb
mov
add
lds
stos
push
sbb
es
mov
mov
sti
std
into
xchg
movsl
xchg
jg
or
cltd
cmp
cli
das
sbb
cmpsb
lret
mov
push
js
lret
popa
scas
fstpt
lahf
in
shl
jbe
lret
fs
outsb
sub
mov
fists
push
cmp
adc
inc
cli
sub
adc
call
lods
pop
or
popa
popf
push
push
es
shr
es
cwtl
arpl
icebp
les
ja
inc
unpckhps
lcall
test
test
stos
mov
mov
mov
xchg
lcall
pop
jns
hlt
popa
pusha
mov
sbb
movsb
xchg
push
insl
mov
lret
movsl
fcomps
xor
adc
mov
icebp
dec
loope
sub
lahf
jmp
or
jge
nop
addr16
andb
xor
add
jno
sub
or
mov
push
pusha
inc
jo
and
mov
or
sbb
test
jne
xor
xchg
repz
jp
outsl
lods
inc
fcmovnu
das
js
mov
imul
jns
ds
sub
xlat
in
pop
ljmp
sub
out
mov
repz
lret
lods
pop
cmp
subl
jno
or
add
loop
jmp
inc
fs
mov
inc
stos
scas
dec
jg
cmp
shl
faddl
jg
cmp
je
xor
lock
push
pop
xchg
into
test
push
leave
test
paddq
add
pop
test
push
mov
dec
bswap
jnp
jg
cmpsb
and
or
inc
lret
and
add
push
jecxz
push
aam
lds
sub
push
cltd
lods
jne
mov
xlat
fadd
pusha
mov
cmp
and
fiaddl
loopne
out
mov
xchg
call
xor
mov
dec
push
popa
mov
lock
into
je
ficomps
enter
sbb
adc
out
rcll
enter
sti
inc
sbb
xlat
in
movb
mov
cmpsl
mov
lcall
sbb
inc
jno
jle
ds
jecxz,pn
shrl
sti
pop
mov
insl
lods
cld
xchg
es
push
inc
push
adc
sub
inc
in
aam
mov
iret
jno
push
cs
in
lahf
push
pop
loop
out
nop
mov
dec
adc
inc
fidivrs
inc
dec
and
cmpsl
ficoml
fists
enter
xor
cmpl
dec
xchg
mov
or
fimull
inc
fsubl
xor
mov
pop
inc
imul
insb
cmp
inc
out
rclb
xor
aad
pop
pushf
in
mov
adc
mov
mov
add
out
cmc
pop
rorb
leave
fdivs
fsincos
ljmp
add
mov
mov
cmp
jmp
xchg
ror
cwtl
push
jno
sub
dec
fsubl
into
push
aam
mov
scas
cmpsl
xlat
mov
test
test
lret
sbb
xor
jge
dec
ja
jae
and
add
shr
lods
fwait
mov
mov
imul
xlat
or
xor
inc
mov
sbb
fwait
dec
jae
js
icebp
scas
out
xchg
out
imul
xor
leave
test
in
mov
stos
add
add
icebp
adc
mov
movsl
dec
mov
dec
mov
imul
dec
mov
repz
push
scas
in
sub
stos
mov
mov
imul
in
int
mov
gs
cmc
xchg
or
popf
repnz
jns
cmp
bound
jne
adcb
sbb
out
pop
pop
ss
je
lret
cmp
mov
mov
cmpsb
mov
cs
xor
jb
mov
xor
loope
sarb
sbb
lret
jl
notb
shlb
jg
imul
inc
aad
insb
scas
push
or
xchg
cli
sarb
idivl
lods
cmpsb
jae
mov
ljmp
or
and
jp
int3
call
mov
inc
sub
stos
lahf
ds
bound
cmpsl
pop
cld
mov
test
stos
out
cmp
in
stos
mov
and
ja
sar
out
mov
fcompl
call
cmpsl
fwait
inc
hlt
inc
idivb
pop
or
sub
out
decb
aaa
push
jmp
es
jnp
faddl
lods
push
cli
ss
push
push
adc
call
adc
inc
pushf
popf
cmp
stos
jmp
jmp
jnp
xchg
dec
or
xchg
or
sbb
xor
sbb
insl
shl
loop
aad
mov
xchg
movsl
pop
jnp
scas
and
push
inc
in
and
pop
push
mov
sbb
cmp
and
jmp
bound
in
sbb
sbb
sub
pop
lret
inc
dec
inc
or
stos
and
ret
inc
pop
mov
push
mov
mov
inc
xchg
dec
sti
pop
das
rolb
xor
hlt
ret
in
add
cmp
cld
cmp
movsb
loope
popf
add
nop
mov
pop
call
push
adc
jmp
pop
mov
popf
or
es
mov
ss
adc
cli
xchg
test
roll
mov
push
mov
mov
in
int
je
pop
mov
add
jecxz
cmpsl
dec
mov
pop
mov
mov
adc
xor
adcb
out
je
inc
adc
mov
je
cltd
pushl
sub
ffree
and
mov
fnstsw
loope
mov
hlt
xchg
mov
rcrl
push
loop
sahf
sbb
pop
ds
lods
sbb
dec
gs
rcl
leave
ljmp
jmp
jns
fs
xlat
cmp
jl
js
sbb
aaa
fwait
lods
arpl
imull
std
mov
jmp
pop
lret
inc
cli
mov
pop
push
notb
cmp
dec
or
adc
push
ss
pop
jnp
out
mov
sbb
loope
out
and
adcb
cmp
add
fwait
popf
je
xchg
sbb
cmp
sbb
mov
sub
mov
les
dec
mov
jns
push
insb
addl
sahf
cmpsb
test
jg
sti
arpl
mov
xchg
int
rcrb
ficomps
jns
mov
and
ljmp
pop
mov
add
adc
cld
sub
idivl
push
mov
cwtl
int
jle
clc
inc
aad
mov
mov
adc
push
bswap
int3
icebp
push
jp
push
ja
out
test
push
pop
xor
icebp
mov
or
mov
and
inc
subl
sbb
outsb
lret
ss
mov
dec
or
int3
fisttps
pop
xchg
gs
int
mov
jecxz
loop
push
test
mov
push
and
xchg
xor
or
aam
cmpb
xlat
leave
pop
sub
data16
inc
stos
adc
lret
mov
fidivl
popa
ss
xchg
ret
push
imul
fisubrs
mov
loope
sbb
ss
into
stos
pop
ud2
xor
sbb
addr16
lret
int
sub
test
iret
into
inc
and
push
subb
popa
xchg
shrb
cmp
and
repnz
les
addr16
insl
mov
mov
sbb
cmp
insl
sbb
jb,pn
hlt
adc
mov
mov
and
and
int3
jo
stos
sub
call
ffree
repz
in
push
dec
dec
mov
pushf
div
loope
xlat
inc
stos
xor
repnz
not
push
fists
xchg
add
fcoml
sbb
daa
dec
into
pop
repz
aad
sti
out
es
cltd
xchg
sti
ret
sub
xor
in
pop
test
sbb
orb
jge
xchg
xchg
gs
sbb
mov
jbe
mov
or
push
sarl
sub
call
mov
fs
add
call
jle
rcl
xchg
push
aas
add
mov
in
or
gs
pop
xchg
ret
add
inc
nop
bound
cmpsb
inc
sub
loopne
add
loope
jg
cmc
cmp
mov
fwait
mov
adc
adc
xor
xchg
pop
insb
sbb
xchg
mov
icebp
dec
les
sub
xor
push
adc
jne
adc
mov
stos
jecxz
inc
jns
inc
jmp
addr16
stos
dec
pop
mov
aam
or
rclb
sbbl
sbb
jae
imul
addl
cmc
je
jge
loopne
adc
repnz
loopne
sbb
out
test
xor
call
popf
sbb
shlb
dec
cmp
jecxz
xchg
ljmp
mov
sarb
mov
mov
xlat
je
fisubl
ss
and
cmp
pop
pop
or
ljmp
lods
enter
mov
mov
jecxz
mov
iret
cmp
dec
je
jmp
repz
jo
pusha
or
movsl
jb
push
in
mov
mov
fucomp
dec
leave
pushf
mov
insl
lcall
xor
sbb
test
clc
subb
mov
dec
add
outsl
dec
mov
ds
jns
inc
xchg
inc
repnz
mov
xchg
lock
scas
addr16
xor
or
mov
stos
lcall
cwtl
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
call
jmp
mov
incl
add
sbbl
or
movl
cmpl
je
cmpl
jle
jmp
pushl
call
mov
dec
mov
jmp
mov
add
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
addl
sub
add
sbb
mov
xor
mov
mov
sub
mov
add
xorl
xor
mov
movzbl
adc
mov
xorl
xor
add
movl
jne
jmp
mov
inc
sub
movzbl
xor
xor
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
xorl
xor
xor
subl
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
jmp
enter
jecxz
dec
push
add
xlat
flds
outsb
push
jb
jnp
sahf
jnp
cmovs
sbb
out
cmp
mov
hlt
pop
cld
mov
repz
pop
data16
xchg
mov
push
mov
loop
cmp
xor
addr16
bound
and
adc
cld
jecxz
popa
push
add
jns
outsb
ja
jge
int3
aaa
pop
jmp
js
insl
popf
jle
adc
imul
push
mov
out
std
loope
pop
repnz
fiadds
push
xor
mov
pop
add
cmp
lods
xchg
and
and
call
loope
shrb
fdivrl
movnti
mov
icebp
mov
aas
adc
xor
mov
jnp
sub
sbb
mov
mov
lock
iret
popf
icebp
xchg
push
mov
inc
sbb
mov
cmpsb
addr16
sub
repz
sub
sbb
cmpsl
xchg
into
pusha
push
push
dec
jno
mov
or
das
pop
lods
xchg
mov
call
mov
pop
or
push
xor
xchg
mov
xor
xchg
xchg
cmp
jmp
out
daa
ss
lods
sbb
stc
and
xor
les
or
xor
in
mov
mov
test
jne
push
cmp
clc
into
ja
imul
iret
lahf
in
add
push
repnz
pop
lods
sti
mov
enter
lods
push
aas
inc
movsl
insl
push
dec
addb
repz
pusha
xchg
adc
stc
sub
mov
clc
jg
cmpl
imul
pusha
dec
aas
lret
repz
push
mov
inc
mov
mov
jmp
call
jg
les
jnp
adc
mov
cli
fldcw
loopne
fldt
addr16
testb
or
adc
push
pop
push
mov
sarb
jb
pop
xchg
mov
lcall
ljmp
lret
and
mov
mov
repz
adc
cmp
push
and
add
out
sbb
mov
sahf
mov
sbb
mov
dec
lret
dec
sub
stos
loop
adc
add
pop
repz
fs
adcl
adc
in
pop
inc
cli
and
mov
daa
in
into
int3
pop
lea
xchg
js
std
xor
cld
sub
xchg
sub
jecxz
bound
je
mov
aas
scas
vmwrite
cmp
pop
dec
lcall
jo
inc
sub
pop
or
cmp
test
lock
out
add
aam
out
testl
call
sahf
fsubp
inc
ljmp
jmp
lcall
cs
or
mov
mov
lea
fst
or
pop
push
inc
je
jp
xchg
adc
sub
xchg
inc
xor
mov
and
xor
dec
dec
mov
pop
inc
jge
mov
fadd
xchg
jecxz
fisttpll
stos
js
dec
adc
imul
jp
lock
sub
into
scas
xchg
pop
xchg
mov
jb
rcrb
pushl
push
push
mov
fidivl
push
movsl
jo
xor
cmp
sub
cmp
or
test
lods
sbb
xchg
aad
mov
mov
xchg
sarl
bound
cmp
inc
jge
pop
inc
pop
pop
or
mov
hlt
pop
outsl
mov
jecxz
data16
cltd
xor
aas
add
ret
in
pop
mov
xor
inc
push
ret
lods
jmp
push
cli
shr
jns
or
sub
loopne
std
mov
pop
ret
cmpsb
xor
sahf
inc
lds
mov
adcb
add
cmpb
push
les
loop
dec
pop
jmp
adc
cltd
popa
add
xchg
dec
add
cmp
pop
jg
mov
incb
imul
stos
inc
fwait
jae
cmp
cmp
xchg
imul
jo
jge
lret
push
nop
push
outsl
fnsave
ficomps
mov
leave
ja
lret
pop
xchg
lcall
les
push
xor
inc
mov
js
idiv
dec
pop
iret
call
cltd
mull
rcr
or
fistl
aaa
xor
lock
or
movsl
jg
xchg
out
ss
out
scas
aad
into
push
cmp
stos
add
xor
popf
inc
nop
xor
ret
lock
xor
movsl
sbb
sti
xchg
push
into
or
test
push
fcmovne
or
lea
sbb
testl
mov
aam
dec
lods
sbb
pushf
and
push
or
cli
fidivrs
into
push
lahf
gs
jmp
ds
pop
sti
outsb
adc
sarl
pop
bound
jp
or
movl
dec
sub
in
sahf
sbb
cmpsb
fnstsw
aam
fs
outsl
and
lock
test
clc
pop
adc
and
mov
xchg
sti
or
pop
shr
xchg
fdivr
das
inc
mov
xchg
fstl
mov
rcrl
cmc
jns
aam
mov
mov
nop
cmp
aas
cmpsl
lds
pop
loopne
mov
push
pop
push
leave
std
sbb
rolb
add
dec
adc
mov
outsb
sbb
js
dec
mov
fildl
add
or
pusha
sbb
enter
xchg
js
aas
xor
fs
add
mov
rolb
sbb
out
dec
or
in
jne
fistl
add
imul
pop
movsb
push
mov
push
cmp
mov
cwtl
add
jecxz
xor
sbb
imul
push
or
sbb
cmpsl
lock
cmp
or
mov
or
add
cltd
incl
es
mov
lret
movsb
stc
lea
add
xor
or
bound
pop
rcrl
sub
jg
adc
jmp
sub
cmc
out
xchg
sub
mov
sub
int
xor
xor
cmpsb
jecxz
in
loope
cld
and
arpl
mov
into
jmp
xor
push
pop
jg
adc
out
sahf
insl
pop
mull
mov
mulb
fadd
std
mov
fcomi
gs
sbb
outsb
sub
xchg
xchg
fs
add
ss
scas
push
scas
fstps
cmp
xlat
out
je
mov
push
cmp
movsb
cld
cmpsl
cmpsb
sub
sbb
push
mov
mov
mov
gs
push
fiadds
mov
dec
loop
in
jp
add
push
mov
cmp
loopne
mov
es
push
icebp
jmp
loop
push
pusha
dec
push
ror
jbe
and
rcrl
lods
inc
adc
clc
push
fldt
in
int3
sub
jecxz
push
push
aam
scas
data16
cmp
fwait
cld
ss
inc
adcb
fsubrl
xchg
outsb
and
jo
push
push
push
adc
add
inc
rorb
push
mov
xor
ss
movsl
sub
mov
das
leave
int
and
jbe
jmp
out
or
inc
xchg
enter
adc
int3
leave
xor
mov
or
push
roll
xor
and
jno
rcll
les
push
dec
arpl
je
and
sbb
sbb
fcompl
mov
scas
xchg
aaa
pop
sbb
jmp
pop
sub
mov
imul
adc
lea
dec
xchg
fsubs
sub
xchg
imul
sbb
ret
fwait
and
test
xchg
outsl
int
xchg
mov
cmp
ja
jmp
sub
and
jo
stos
fsubs
and
and
roll
inc
inc
mov
adc
flds
xchg
fstpl
add
sbb
cld
icebp
subb
rclb
cmp
in
or
icebp
lea
js
jno
jns
xchg
jne
and
push
ljmp
mov
mov
mov
or
push
outsl
add
sahf
jg
pop
jbe
adc
fs
lods
cmp
lds
add
rcll
mov
enter
mov
ljmp
js
aaa
mov
loop
enter
outsl
xchg
dec
int
sbb
or
mov
dec
or
or
cwtl
je
js
cmpsl
shr
sti
in
xor
xor
sub
add
mov
shrl
fidivrl
fsubs
sbb
cmc
jecxz
push
pop
jmp
les
adc
jae
rolb
les
adc
stos
jge
adc
incb
mov
mov
shr
inc
adcb
cld
adc
sub
ss
into
add
je
mov
in
jl
test
or
cmc
test
and
fldenv
test
call
dec
jne
mov
mov
xor
cltd
aad
inc
add
mov
out
outsb
adc
popf
jae
push
test
lret
outsl
push
adc
stc
inc
adc
mov
ljmp
jg
into
push
stos
or
stos
stos
or
adc
es
outsl
xor
and
leave
push
and
and
out
fiaddl
repz
mov
js
fisubl
mov
sub
cmp
and
test
cld
pop
mov
pop
and
rcl
clc
sbb
gs
movsb
ret
iret
outsl
jecxz
shlb
push
ja
inc
sbbl
and
cmovs
ja
cmp
inc
icebp
sub
push
pop
xorb
cmpsl
iret
out
pop
jbe
xor
or
mov
pushl
and
xorl
mov
stc
mov
mov
and
fstps
mov
mov
movsb
rcrb
dec
pop
js
cmp
and
xchg
nop
fsub
mov
mov
aam
mov
sub
loopne
nop
adc
loopne
pop
ss
test
push
adcl
loop
test
movsb
data16
jne
adc
adc
add
adc
sti
dec
or
pop
mov
push
mov
inc
pop
iret
fwait
pop
jg
dec
add
inc
mov
js
loopne
xor
fcoms
mov
dec
xor
dec
xchg
loope
iret
in
rorl
sub
int
lods
lcall
and
adc
testl
cld
push
jl
pop
adc
bound
pop
imulb
mov
stc
icebp
sub
sub
xchg
insl
xor
pop
jbe
cmp
mov
cmp
fsubrp
test
rclb
push
inc
jo
sub
gs
das
dec
jmp
pusha
cld
ficomps
ret
rcrb
add
test
mov
int
test
bound
sahf
mov
popf
fsubs
sbb
inc
pop
loope
addb
and
push
cmpsl
mov
xor
push
inc
sbb
mov
push
push
inc
dec
pop
lea
iret
cld
mov
int3
imul
std
inc
call
push
idiv
test
fnstsw
mov
fisttpll
mov
sub
or
jle
cmp
inc
lea
loope
jne
or
mov
rcr
push
or
movsb
push
push
aaa
js
icebp
jmp
xchg
dec
jo
icebp
jnp
in
jmp
popf
fidivrs
lds
out
outsb
jmp
jb
mov
mov
or
jmp
leave
das
ss
sbb
mov
outsl
jmp
mov
je
sti
cltd
mov
adc
ljmp
leave
lret
lret
lahf
dec
push
jle
add
or
inc
test
popf
push
repz
add
lahf
sbb
fcmovb
xchg
mov
sub
insb
mov
icebp
movsl
push
pusha
mov
pop
mov
and
sub
fstpt
shll
lret
xchg
ja
pop
push
and
ret
adc
mov
add
outsb
push
mov
mov
lock
pop
rorb
adc
movsb
cmc
jl
aam
scas
add
mov
int
jge
dec
in
add
xchg
inc
mov
bound
mov
clc
popf
and
lods
cld
insb
mov
into
ss
add
xlat
cmp
adc
inc
addb
mov
and
cmp
in
fldcw
sub
lea
jb
ljmp
pop
jno
leave
mov
test
sarl
insl
adc
cmpsl
pushl
inc
aaa
mov
adc
sbb
mov
jle
cmp
daa
cmc
aam
xor
mov
sbb
das
push
dec
jb
xchg
fsts
mov
lods
cmp
mov
dec
inc
push
adc
test
leave
jae
cmc
or
sahf
push
scas
jle
xchg
xchg
mov
dec
inc
pusha
popa
sti
shll
sbb
mov
fnstsw
icebp
pop
mov
gs
xor
lret
push
hlt
nop
cmp
mov
mov
mov
adc
cmp
fsubrl
jbe
and
xchg
mov
pushf
not
fcomps
inc
stc
cld
iret
movsb
loope
inc
push
and
fcoms
arpl
jbe
in
xchg
jno
pop
xlat
cmp
ret
and
rcll
daa
stc
mov
dec
insb
enter
dec
ja
cmp
dec
push
daa
xor
cmp
sub
dec
mov
dec
sahf
mov
push
dec
cli
add
clc
mov
pop
in
mov
and
xchg
adc
hlt
arpl
pop
call
xchg
mov
xchg
cmp
lods
les
mov
push
sbbb
and
jl
loopne
push
adc
xor
xor
test
lahf
adc
addr16
sbb
je
fwait
out
fnsave
orb
xor
lret
mov
scas
adc
test
sub
fistpl
ds
push
ds
sub
loopne
mov
mov
leave
adc
adc
aad
mov
ret
mov
addr16
sub
dec
popf
lods
mov
in
push
jp
not
stos
outsb
cli
xchg
jl
lds
push
or
push
add
push
scas
in
cli
scas
fnstcw
jno
enter
scas
jne
pop
or
arpl
mov
jge
ss
pop
repz
dec
popf
sub
pop
dec
aaa
mov
jne
subl
inc
ss
mov
lods
call
cmc
sahf
sbb
mov
dec
out
add
xchg
fsubrl
lcall
mov
movsb
sbb
insb
fcoms
jp
sarl
ret
ret
mov
mov
mov
and
xchg
push
add
loope
jg
cmc
xlat
mov
add
lret
and
mov
jbe
push
sub
jp
jne
hlt
add
xchg
sub
jmp
pusha
jg
aam
movsb
repnz
jg
in
pop
stc
cmp
inc
popa
mov
loopne
stos
rol
and
ds
and
cmp
push
imul
dec
insl
cmp
lods
fcoms
dec
adc
movsb
xchg
in
cmp
test
dec
inc
pop
add
int
rclb
movsl
mov
jbe
push
mov
popa
cmc
movsl
in
cmc
cwtl
push
xor
xchg
int3
out
push
mov
frstor
pop
and
cwtl
repnz
mov
aas
mov
pushf
in
mov
xchg
push
out
push
ds
or
mov
stos
sub
addr16
adc
dec
mov
mov
mov
adc
or
sub
inc
mov
cwtl
inc
mov
mov
ret
xor
aas
push
mov
stos
test
lahf
nop
xor
imul
fs
gs
jle
cmp
nop
jle
push
pop
inc
push
mov
aad
es
or
outsb
sub
sub
shl
cmp
lret
movsl
adc
mov
xchg
in
or
dec
adc
xchg
aas
sbb
fmuls
add
ds
jmp
jno
cmp
cmpl
mov
into
mov
xchg
adcl
push
lahf
lret
mov
test
mov
adc
add
xchg
cwtl
inc
data16
push
sub
xchg
jmp
scas
imul
int3
add
clc
pop
cld
xchg
jle
cwtl
enter
jne
loopne
add
cltd
out
adc
nop
pushl
repz
fnstsw
mov
pop
mov
cld
adc
mov
xor
push
leave
dec
call
mov
lret
int3
data16
xchg
shrb
and
push
pop
insl
adc
dec
push
sbb
adc
xchg
scas
dec
pop
push
test
mov
pop
add
adc
mov
sbb
mov
ds
pusha
mov
lods
adc
sti
int
rorb
lods
into
push
in
aaa
and
cmp
mov
or
call
shlb
cltd
jb
adc
lcall
ljmp
shl
addl
das
push
ret
mov
daa
aad
jnp
push
or
xchg
or
pop
fs
jge
inc
flds
dec
imul
jp
inc
sub
adc
insb
dec
xchg
xor
ja
jmp
cs
idivl
push
jg
jge
dec
fcomps
repnz
fsts
dec
cmp
pop
mov
lds
mov
ss
push
adc
sub
fldt
cmpl
sub
data16
decl
or
loop
lret
add
jno
add
cmp
scas
fdivs
call
testl
pop
in
test
test
xlat
add
xchg
adc
add
arpl
push
sbb
pop
and
cmp
loop
xchg
insl
inc
or
loopne
je
lahf
mov
xchg
ljmp
add
cwtl
test
mov
push
mov
mov
pop
fs
jmp
insl
jl
popf
fildl
je
ret
mov
mov
xor
lcall
dec
outsl
es
dec
cmp
push
rol
fiaddl
push
pop
icebp
decb
cmpsl
pop
mov
mov
xchg
lcall
jecxz
sbb
jmp
loope
pop
adc
test
insl
xchg
lahf
ja
push
int3
dec
call
jb
iret
sub
je
dec
subps
or
adc
push
in
cld
sbb
nop
int3
scas
xor
out
out
aaa
sbb
mov
hlt
sub
ficompl
outsb
jo
nop
in
dec
test
stos
icebp
rcrb
add
movsb
jbe
xchg
sbb
cmp
sub
mov
xlat
addr16
pop
aad
and
ret
mov
push
fsts
xchg
lds
aas
cmpsl
into
pushf
cmc
ret
fs
scas
jl
push
in
mov
inc
pop
lahf
mov
cmpsl
jb
xlat
das
inc
aaa
or
push
mov
daa
aaa
xor
daa
push
adc
pop
addb
pop
pop
push
shlb
dec
add
xlat
loope
inc
mov
sbb
and
xchg
xlat
out
adc
mov
rcrl
push
pop
stos
or
inc
or
jne
add
xchg
cmp
shlb
mov
jmp
pop
icebp
mov
pop
cmp
in
push
das
outsl
adc
pushf
fistpl
pop
mov
and
mov
mov
ss
pusha
xchg
lcall
sub
mov
push
popa
mov
repnz
shl
push
movsl
add
push
pop
mov
inc
les
add
xlat
test
es
inc
ret
or
mov
jge
adc
adc
mov
and
jge
jne
inc
mov
mov
push
mov
shlb
fcomip
imul
push
sub
inc
movsb
mov
sub
in
mov
pop
mov
sbb
or
inc
ret
xor
mov
push
adc
in
mov
cmp
repz
and
mov
lock
call
push
mov
fiaddl
xor
bnd
push
pop
jmp
mov
sub
mov
lds
xchg
or
scas
and
inc
pop
lock
xchg
rcrl
loope
jo
nop
lahf
xlat
mov
pop
cmp
mov
mov
fisttps
imul
mov
shll
fimull
es
imul
or
sub
cmc
inc
inc
call
sub
cmpsb
mov
mov
cmp
mov
mov
clc
dec
pop
dec
inc
cmp
outsl
daa
cmp
out
mov
popa
pop
pop
add
repnz
cmp
movsl
inc
adc
sub
adc
out
add
and
adc
mov
xchg
adc
sbb
mov
cmp
push
orl
int
sub
das
icebp
jmp
mov
js
fs
sub
jl
adc
pop
out
out
add
out
jp
xchg
in
xor
fsubrp
push
sbb
adc
jbe
loope
sbb
pop
push
into
cmc
fcom
imul
daa
inc
mov
jb
test
or
rcrl
dec
push
jo
orl
popa
or
and
stc
jecxz
dec
into
testb
jo
nop
jns
and
ja
test
scas
xchg
xor
pop
xor
sub
push
jae
sub
scas
xor
dec
popf
jo
call
dec
call
mov
jecxz
inc
and
sbb
test
push
xlat
outsl
adc
mov
jo
stos
aaa
lods
jecxz
inc
mov
pusha
push
xchg
xchg
inc
jnp
mov
pop
addr16
push
jns
xchg
xchg
mov
clc
cltd
sbb
push
sbb
dec
sub
mov
lahf
int
in
jp
out
aam
mov
dec
or
je
cld
mov
pop
daa
shlb
adc
mov
js
jmp
mov
or
mov
sti
daa
jmp
test
push
into
sbb
sbb
repnz
icebp
movsb
jne
js
inc
in
ss
arpl
xor
cmc
and
pushf
mov
mov
add
fadds
mov
cmp
pushf
ja
out
cmp
insb
push
adc
imull
push
lds
inc
in
jae
jnp
ja
mov
mov
inc
lfs
add
mov
xlat
mov
stos
pop
faddp
jns
lods
sbb
add
sbb
and
es
dec
add
pushf
shrl
push
mov
adc
push
out
cmp
add
fisttps
sahf
dec
xor
cmp
shl
adc
dec
clc
pop
sbb
loop
pop
idivl
lahf
ss
xor
movsl
clc
and
iret
push
jb
insb
push
in
cmp
add
pop
fsubrp
push
lds
pop
dec
ficomps
pushf
loope
mov
jo
and
loop
out
xlat
xchg
shr
sbb
std
popl
mov
stos
test
jb
xor
mov
shlb
test
dec
xor
cmpsb
mov
sub
add
lock
push
pop
fwait
xchg
mov
xor
les
inc
sub
mov
ja
lds
sbb
in
lcall
fdivs
ja
sarb
lods
push
testb
pop
pop
add
adc
mov
icebp
lods
jl
pop
xchg
sub
popa
xchg
sbb
test
and
movsl
or
nop
lret
lret
add
rorb
fisubrs
mov
iret
testl
test
lods
xchg
addb
add
out
jnp
xor
sbb
xchg
or
mov
repnz
sbb
mov
leave
push
cmp
fcomps
es
addr16
xor
icebp
pop
sub
lock
sbb
dec
xor
mov
call
in
aad
into
ret
sbb
sti
push
mov
cmc
nop
xlat
jnp
enter
pop
fimuls
push
and
stc
out
inc
jmp
outsb
mov
aaa
rol
add
dec
lret
push
je
or
xchg
and
pop
jnp
sub
sahf
adc
xchg
stos
cmp
cmp
jmp
leave
je
sub
push
fisttpll
jo
arpl
pushf
or
pop
pusha
shrl
in
xlat
and
jb
cld
lcall
mov
lahf
push
add
push
ja
cmpsb
ja
mov
pop
inc
cmp
mov
sub
jp
xor
aaa
cmp
aad
fdiv
cld
outsb
cli
mov
popl
fwait
inc
jg
and
cmp
sbb
les
push
jl
in
sub
popf
popf
add
inc
lock
ficompl
inc
cltd
pop
add
and
sarb
add
or
add
cmpsb
std
lret
cli
mov
sub
add
lds
mov
xorl
cwtl
sub
cld
jbe
jns
dec
xor
xchg
ja
fnstcw
imul
loopne
popf
sbb
ss
xor
sub
filds
mov
cmpsl
xor
insl
mov
hlt
mov
cmpsb
push
jnp
mov
lods
in
cmpsb
push
jbe
popa
inc
movsl
movsl
je
mov
xchg
subl
shl
sbb
enter
push
fs
sub
mov
test
fdivrs
cmc
push
xlat
xchg
aas
popf
fdivs
pop
mov
call
push
mov
test
arpl
or
push
movsb
inc
mov
mov
xor
push
les
lret
inc
pop
xchg
out
jo
and
ds
stos
pop
cmp
aas
sub
data16
jbe
cmp
in
mov
loopne
adc
rcll
jge
cld
push
fsubrs
cmp
push
and
push
mov
sbb
jg
jp
cmpsl
repz
dec
adc
add
jl
mov
lcall
in
jmp
aam
lods
cmp
into
sbb
jge
lock
int3
enter
lds
movsb
push
add
jg
jne
rclb
mov
movsb
xor
out
jecxz
inc
imul
mov
imul
mov
add
mov
in
push
std
loope
sbb
mov
or
in
cmpsb
jb
sub
mov
jle
out
and
pop
bound
in
push
cmp
ss
push
fstpt
gs
lods
and
add
sub
lds
ficoml
sahf
call
mov
inc
xor
mov
dec
xor
mov
repnz
mov
ljmp
insb
fwait
xchg
sub
and
aad
pop
xor
sub
int3
jg
int
out
mov
push
push
xor
cmp
sbb
push
mov
xor
ret
mov
fistl
inc
in
ss
fildl
fisubl
add
loope
jge
leave
std
dec
or
scas
clc
mov
sub
xchg
sub
mov
sub
mov
fwait
sarb
mov
rcrl
fstpt
jnp
pop
pop
movsb
mov
pop
call
std
jns
push
jno
inc
mov
adc
movsl
int3
outsb
add
xchg
movsb
mov
mov
pop
mov
or
idivl
pop
jb
fdivr
mov
or
and
dec
mov
dec
mov
cmc
push
popa
xorl
testb
mov
aam
out
jmp
mov
and
daa
inc
fists
push
mov
pop
in
sub
pop
inc
push
adc
cmp
adc
lock
mov
xchg
and
into
xchg
mov
or
mov
xor
pushf
xchg
mulb
das
sahf
push
sub
pop
cmp
mov
mov
bound
push
mov
or
cmp
movsl
cmp
gs
in
jo
dec
mov
push
mov
shll
into
shrl
nop
xchg
in
push
mov
add
aam
mov
mov
shrl
add
adc
mov
test
jbe
testb
or
inc
hlt
pop
into
test
xchg
xor
ret
jl
pop
dec
sbb
inc
cmpsl
sbb
lcall
call
jp
iret
into
xchg
xchg
cli
push
jns
rcr
add
adc
sbb
sub
add
lcall
int3
sub
cmpsb
xlat
pusha
pop
mov
add
iret
inc
push
mov
pop
iret
inc
nop
mov
add
aad
xchg
xor
lea
repnz
sbb
ss
data16
movsl
push
jle
mov
int
dec
push
xor
lds
cld
mov
sub
repnz
xchg
sub
and
into
ds
std
testl
sub
pop
clc
cmpb
pop
lcall
sbb
pop
cmpsl
add
cs
adc
js
xor
push
cmp
mov
cli
movb
loope
mov
repnz
pusha
and
je
int
sbb
in
sbb
mov
test
cmp
cltd
fcmovu
push
iret
int
mov
out
mov
jp
les
mov
nop
mov
hlt
hlt
cmp
in
insb
adc
in
jo
mov
jo
lahf
jg
add
fwait
clc
dec
cmp
adcl
test
and
loop
js
push
clc
and
int
fstp
pushf
cmpsl
xchg
push
jmp
add
iret
mov
fs
cpuid
mov
mov
jno
mov
mov
rol
cmp
mov
daa
inc
mov
xchg
push
mov
mov
mov
leave
dec
std
mov
xchg
fsub
int3
jmp
cmpb
and
lret
pop
fisttpl
add
and
adc
out
loop
adcb
xor
and
mov
fucomp
inc
push
add
adc
inc
lock
outsb
in
sbb
lea
lahf
pop
int
outsb
mov
mov
mov
mov
mov
test
or
push
push
lret
cltd
add
fwait
mov
and
jg
ret
mov
sub
jne
jp
insl
inc
hlt
pop
xchg
xlat
push
dec
push
cmp
fadds
sti
popa
mov
mov
push
mov
cmp
mov
dec
clc
cmp
pop
sbb
xchg
sbb
shlb
das
mov
insl
movsl
push
push
push
popa
inc
rorb
inc
repnz
mov
bound
mov
lds
clc
cmp
inc
loopne
xchg
adc
mov
sub
add
enter
push
lods
shr
sarl
decl
jp
mov
jge
aas
push
out
and
loop
shll
jns
jbe
ss
mov
cwtl
sbb
fadd
xchg
push
decl
cld
insl
jmp
or
leave
nop
shlb
lods
clc
xchg
and
inc
mov
loopne
ficoms
fiadds
dec
or
nop
mov
push
andl
push
push
pusha
or
sbb
inc
aas
cltd
and
out
shlb
fwait
xchg
loopne
add
adc
jae
add
fldt
lods
addr16
rcrl
dec
mov
adc
fbstp
xor
and
sarb
repnz
or
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
xor
sub
add
push
adc
push
and
mov
mov
add
mov
addl
mov
sub
movl
movl
xor
mov
orl
mov
sub
movl
cmpl
je
cmpl
jb
jmp
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
subl
xorl
mov
neg
mov
sub
mov
orl
addl
mov
adc
mov
add
sub
add
mov
orl
adc
mov
mov
adc
sub
xor
mov
orl
mov
negl
mov
sub
xor
xor
xor
xor
sub
or
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
pushl
push
call
jmp
mov
mov
xor
adcl
mov
andl
add
or
orl
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
jmp
mov
movsl
aas
jns
jns
pop
popw
inc
mov
sbb
jl
mov
adc
subb
lret
out
pop
or
pop
cwtl
dec
fs
mov
pop
lcall
insb
or
push
sub
mov
inc
or
and
xor
lock
xchg
jmp
int
popl
jo
iret
jns
sub
push
scas
icebp
shl
and
es
data16
inc
out
lcall
mov
push
jecxz
xchg
inc
add
push
mov
fmuls
push
mov
int3
fsubrp
subl
out
mov
gs
out
outsl
jns
arpl
mov
xchg
les
jb
lods
or
jno
movsb
and
sahf
fbstp
imul
mov
add
lods
jecxz
stos
or
or
jnp
hlt
mov
test
jns
loopne
dec
fldcw
hlt
cli
dec
pop
mov
daa
icebp
jge
popa
sbb
in
push
pushf
or
pop
dec
pop
mov
clc
lahf
repnz
test
jnp
mov
in
pop
pcmpgtw
out
popa
push
push
int3
imul
adc
jmp
repz
cmc
repz
xchg
xlat
or
pop
mov
movsb
sub
xchg
sub
or
mov
pop
lahf
into
mov
xchg
sub
mov
addb
cmpsl
sub
fistpl
int3
or
lds
orb
fisttpll
pop
fsubl
sbb
mov
or
adc
fimull
popf
mov
push
rorl
jne
sub
movsb
sub
inc
gs
xchg
jbe
xchg
adc
test
push
fwait
pop
cwtl
insb
and
sbb
jp
or
pop
mov
lock
fwait
dec
or
lahf
shr
gs
sub
dec
cmp
jecxz
push
mov
sbb
mov
es
mov
push
gs
aas
lock
mov
mov
pop
bound
and
xor
pop
jg
je
cs
push
xchg
sub
push
mov
add
jmp
xchg
ss
jae
dec
fbstp
add
mov
jg
ret
jl
and
pop
insl
cmp
or
nop
cld
mov
push
pop
mov
mov
dec
fidivrs
subb
jl
imul
fistpll
mov
out
pop
test
adc
test
ret
repnz
jne
movsb
icebp
lret
lods
inc
or
sbb
cmpsb
mov
orb
cmp
jnp
push
pop
shll
cmp
jb
loope
sub
addr16
jae
mov
aam
lds
or
inc
popa
lea
mull
js
pop
sub
push
mov
mov
stos
sub
mov
sbb
jo
push
ret
cli
shll
flds
xchg
add
xor
jb
add
mov
ljmp
into
pop
xor
and
pushf
jo
iretw
sub
or
inc
arpl
pop
jo
mov
jnp
push
es
cltd
icebp
add
mov
out
mov
or
data16
or
cmpb
lock
out
sub
push
out
or
mov
sub
lds
out
stc
or
imul
in
call
pop
pop
adc
cmpsl
or
mov
sahf
mov
sbb
jg
xor
xor
jmp
mov
stc
push
mov
out
pop
loop
add
mov
cmp
mov
sbb
add
cwtl
fbstp
jmp
dec
jbe
inc
notl
dec
cmp
mov
in
push
mov
mov
add
jl
xlat
mov
sbb
and
stc
mov
hlt
aas
jge
dec
jge
jb
mov
mov
pop
int3
bound
jno
sbb
data16
xchg
js
inc
in
push
jb
inc
bound
push
xor
lea
mov
jecxz
inc
ljmp
jbe
das
cli
loopne
pushf
jns
ss
fwait
ljmp
push
xor
in
pusha
push
lea
and
out
stc
mov
xchg
shl
mov
inc
fcmovbe
shl
mov
adc
fisubs
push
inc
mov
pop
mov
lods
aam
repnz
imul
pop
fwait
lock
daa
sub
sub
sub
xor
fisttpl
fidivs
out
xor
jecxz
lods
int3
xor
sarl
mov
and
xchg
jnp
clc
ret
fs
inc
jle
fwait
xlat
adcl
xor
mov
inc
mov
add
call
sub
shr
add
cwtl
sub
dec
ret
adc
or
or
adc
sbb
fnstsw
leave
and
pop
div
movsb
repz
adc
inc
fdivp
orl
pusha
in
cmpsb
or
jb
mov
sub
sbbb
or
or
or
in
test
je
movsb
mov
sbbb
or
pop
negb
outsb
out
fcoml
cmp
incb
shl
ret
out
sub
add
daa
push
jecxz
scas
mov
jo
inc
cmp
daa
sbb
out
sbb
sub
mov
addl
inc
mov
mov
push
sbb
lods
pop
fcoms
movsl
add
shrb
mov
mov
incl
push
push
and
bound
cltd
mov
insb
inc
ljmp
dec
fs
nop
aas
inc
das
in
hlt
es
and
ret
out
imul
iret
or
xor
mov
loope
int
pop
pusha
rcrb
out
call
add
sahf
dec
dec
mov
cmc
stos
cmpsb
stc
xchg
sbb
fadd
decl
scas
push
cmc
popa
pop
ljmp
sbb
pop
das
les
fsubl
cmp
sarl
mov
jecxz
xchg
imul
jbe
add
es
xor
shld
imul
inc
or
cmp
sub
xor
dec
outsl
adc
aam
mov
mov
mov
xor
xor
and
and
pusha
into
sti
mov
xchg
and
mov
dec
inc
or
cmp
push
mov
and
outsl
mov
push
rcpps
lods
xchg
cwtl
out
xchg
je
add
sub
cmp
or
xor
ja
mov
push
ja
movl
or
mov
sub
inc
cmp
xchg
pop
cmp
jb
push
stos
push
sbb
call
cld
addb
fnsave
lret
ret
pop
mov
or
push
xchg
pop
cltd
and
ja
or
add
sti
and
enter
outsl
sub
and
packssdw
xor
and
in
jo
sub
mov
mov
push
je
leave
std
jecxz
sub
push
jns
test
lret
jnp
xor
stos
aad
cmpsb
stc
cltd
pusha
mov
push
daa
sub
xor
ljmp
dec
adc
test
daa
orl
fdivl
mov
fidivrs
and
in
xor
xchg
testb
sub
ljmp
adc
jle
cmp
shr
nop
mov
xchg
sbb
xor
push
cwtl
fdivrs
pop
jle
sbb
push
sub
lret
mov
imul
sbb
stc
lds
xchg
lds
loopne
jge
insl
imul
xchg
lret
xchg
push
or
jno
dec
pop
mov
fs
popa
aaa
xchg
dec
stc
int
cmp
mov
jbe
xchg
adc
cmp
int3
mov
ja
stc
xchg
stc
ljmp
outsb
pop
aam
pop
and
push
dec
and
movsb
push
mov
rcll
rorw
aaa
mov
cld
push
out
jge
jg
push
imul
mov
int3
lahf
xlat
fdivrp
out
pop
ds
rorb
fcmovbe
mov
or
fildll
xchg
xchg
sub
shll
out
clc
test
in
adc
mov
add
cmp
outsb
sahf
stos
test
mov
dec
in
cmp
aas
loop
cwtl
adc
shlb
rorb
add
call
mov
es
rclb
push
ljmp
cmc
adc
mov
mul
push
jge
sbb
negl
test
iret
mov
mov
imul
mov
rol
and
dec
dec
push
cli
inc
sarl
les
xacquire
dec
mov
push
xchg
aaa
jl
nop
mov
fwait
xchg
jl
insb
int
js
cmpsb
pop
add
test
cmp
cld
jg
les
fsts
cmp
pop
cltd
push
jb
neg
dec
xor
sbb
mov
mov
xor
insl
mov
mov
lret
in
popa
inc
stos
xor
gs
and
jns
ljmp
bound
testb
sbb
add
inc
out
insb
insb
and
cld
bnd
pop
ja
arpl
mov
movsb
cmp
decb
mov
mov
es
clc
js
sbb
out
push
mov
out
outsl
inc
fimull
inc
mov
sbb
push
pop
push
and
mov
mov
movsl
enter
loope
popl
mov
leave
cmc
adc
or
add
mov
hlt
fwait
jne
mov
dec
dec
or
mov
das
rcl
aam
lods
lcall
cmpsl
add
xchg
js
punpckhdq
std
adc
fldenv
dec
sub
mov
cli
repz
js
aam
rorl
jmp
pop
pop
or
jbe
add
mov
cwtl
aas
pop
outsb
mov
adc
pop
sbb
lods
ss
jmp
cmp
xchg
fbstp
in
mov
dec
xchg
lods
cmp
pop
aad
adc
xor
xor
add
out
pop
dec
xor
mov
jno
fsubl
lahf
mov
jnp
lods
mov
insl
in
mov
pushf
mov
arpl
hlt
mov
outsb
mov
xor
push
lds
clc
andl
mov
inc
lods
push
adc
sbb
arpl
xor
in
mul
push
cwtl
leave
sbb
outsw
std
mov
sub
xchg
into
fimuls
sbb
push
xchg
cmp
push
pushl
xchg
fs
scas
gs
sbb
lcall
js
jbe
lea
xchg
addr16
daa
and
nop
sbb
daa
mov
lock
outsb
xor
mull
arpl
push
sbb
push
add
out
xchg
push
lea
stc
jg
cmc
push
mov
inc
scas
outsl
jecxz
cwtl
and
adc
mov
addr16
inc
mov
cmp
adc
mov
cs
iret
sub
xor
and
mov
add
cmp
jbe
sub
mov
cmp
mov
icebp
xor
push
mov
sbb
fisubs
cmpsb
nop
or
or
sub
ficoms
enter
inc
mov
inc
xchg
fstl
sti
sbb
lods
push
lods
push
in
negb
fs
sbb
cld
cmpsl
push
jmp
jmp
add
mov
es
mov
es
sbb
ror
lret
imul
repz
dec
pop
lods
push
or
add
push
rolb
or
ja
push
pop
out
sbb
sahf
shll
mov
mov
xchg
pop
mov
sbb
jno
lret
bswap
arpl
fcoml
outsl
movl
fsubrl
mov
pop
cwtl
cmpsl
lcall
sub
xor
push
sub
jno
jo
mov
xchg
adc
in
jl
pop
dec
or
lods
enter
js
sub
test
lods
pusha
mov
adc
jns
cmp
xor
clc
insb
xor
imul
fisttps
rorl
mov
mov
divl
push
sub
pop
inc
add
loope
int
lahf
add
mov
push
leave
jle
sbb
add
std
sbb
insb
sti
cmp
adc
xor
jecxz
imul
fldl
fmull
jne
aad
int3
inc
fadd
sarb
inc
mov
test
aaa
cmp
in
ja
fsubs
adc
popa
jae
fwait
add
mov
lahf
or
sbb
cmp
inc
cmp
hlt
hlt
mov
jg
ss
ret
add
cld
in
add
push
sbb
mov
jmp
xor
and
lods
lea
add
ret
add
imul
imul
out
inc
cli
jge
and
push
pop
inc
jo
xchg
lea
mov
pushf
mov
sti
lock
push
loop
xchg
in
cwtl
xor
das
jns
mov
pop
mov
mov
nop
lods
popf
orl
ja
inc
scas
fimull
lods
inc
mov
mov
xor
ficoml
subl
dec
stc
mov
popf
push
icebp
mov
push
ja
xor
and
int
lods
fimull
das
push
inc
cmp
sbb
cmc
mov
jnp
xlat
pop
pusha
aas
fdivs
mov
jnp
mov
and
dec
das
repz
xor
aad
jl
cltd
imul
fwait
push
ljmp
ja
mov
repz
push
mov
rorl
stc
sbb
cmp
push
pop
xor
push
and
mov
jecxz
adc
mov
sub
in
mov
or
adc
out
jmp
sub
ljmp
sbb
pushf
outsb
push
cwtl
loop
stos
mov
lahf
sub
dec
and
rclb
jae
out
loop
lret
outsl
outsb
jns
mov
fs
mov
test
adc
mov
lcall
pop
je
je
adc
add
push
or
or
xchg
cwtl
xchg
xchg
pop
sbb
lcall
push
sbb
mov
flds
jl
dec
add
test
stos
inc
ss
movsl
mov
adc
stc
mov
roll
subl
mov
xchg
aas
lcall
jb
ljmp
pushf
sub
test
loopne
mov
dec
stos
mov
mov
push
stc
or
mov
mov
xor
xlat
vhaddps
lock
outsl
sub
mov
lahf
and
cmp
jb
icebp
popf
pop
mov
jbe
push
or
dec
js
shrl
or
mov
std
std
and
inc
cmp
dec
cmp
movsb
push
fisttpl
lret
ss
pop
mov
mov
addb
jl
testl
shl
dec
movsb
and
ss
ffreep
mov
xor
data16
xchg
scas
jge
in
sbb
and
pusha
push
cmp
sbb
mov
sbb
int
jae
and
cmpsl
cmp
inc
sti
jne
pop
cmp
jb
fdivr
dec
cs
xchg
push
adc
cld
int3
int3
mov
pop
mov
mov
test
cmp
push
cli
inc
adc
cltd
test
subb
in
add
pop
sbb
rol
outsb
not
add
in
cmp
push
inc
arpl
mov
loopne
sub
push
push
push
xchg
loop
mov
and
rcrb
rclb
ja
inc
push
fsubs
jge
sbb
lea
cld
addr16
push
repz
jecxz
out
out
decl
shr
pusha
insl
dec
imul
xor
insl
out
xchg
push
daa
adc
sbb
lock
inc
das
pop
cltd
divb
push
mov
dec
pop
shrl
bound
ds
add
xchg
stos
jae
jne
inc
insl
jecxz
mov
inc
jne
mov
add
cmp
push
push
sbb
loop
aam
pop
iret
rcrb
les
cmc
ror
pop
xor
push
inc
inc
hlt
inc
inc
test
test
out
mov
es
dec
cmc
xchg
add
dec
xchg
mov
stos
push
cmpsl
dec
and
out
test
inc
xchg
test
lret
cltd
xor
dec
mov
jp
repnz
cs
jnp
or
mov
pop
add
das
or
mov
lock
out
popa
xlat
inc
in
cwtl
inc
jns
popl
scas
push
jne
jge
dec
inc
add
mov
das
jb
clc
ds
xchg
add
inc
mov
xchg
out
js
xchg
mov
xchg
xchg
jnp
dec
or
xlat
or
enter
jbe
scas
jo
dec
jnp
pop
cmp
hlt
mov
ret
stc
or
inc
and
lds
xchg
jb
movsl
sbb
pop
lea
mov
or
mov
jb
stos
push
outsb
push
insb
in
mov
xor
or
jg
mov
add
mov
and
shlb
out
dec
pop
in
repz
gs
cmp
and
mov
loop
stos
decb
mov
cmp
push
pop
nop
mov
jnp
fwait
jnp
mov
or
push
mov
pop
xchg
push
cwtl
inc
cmp
test
cmp
js
inc
stos
ljmp
push
xchg
jmp
push
or
popa
xlat
adc
push
in
cld
add
out
in
stos
pop
cmp
pop
dec
inc
popf
out
jmp
cmpsb
push
or
aam
inc
mov
lds
fmull
mov
mov
imul
dec
mov
bswap
xor
test
jp
lret
xor
in
popf
fidivs
and
cmp
lahf
pop
ret
loopne
cli
add
fldenv
scas
in
jl
adc
fcmovne
push
inc
cs
dec
or
mull
hlt
adc
stc
xor
pop
cld
mov
jg
cmp
adc
in
mov
mov
out
fidivrs
jle
popa
jne
out
xchg
scas
pop
insb
dec
xor
inc
sti
push
mov
ja
fldcw
subl
lds
add
mov
cmp
push
mov
adc
pop
sbb
inc
ds
and
or
inc
sub
insb
mov
rcrb
mov
jno
ja
faddl
jg
mov
sbb
repz
push
mov
inc
icebp
testl
adc
pop
lret
inc
jnp
dec
jge
adc
inc
fwait
aad
inc
fsts
cmp
push
fsub
xor
sbbb
mov
fwait
add
mov
push
stc
mov
xor
cmpsb
mov
ret
dec
jae
xchg
or
sbb
or
mov
inc
ret
repz
pop
cmp
lock
cmp
stos
mov
out
jge
and
sub
xchg
xchg
jp
shrl
rorb
push
cltd
xchg
movsb
lcall
push
pop
xlat
sarl
pop
xor
in
xchg
push
jne
inc
cmp
pop
mov
pop
int3
mov
fwait
push
shll
cmp
push
mov
push
mov
sub
test
cmp
and
or
inc
and
inc
dec
popf
or
inc
xchg
sbb
loope
std
in
imul
jb
icebp
dec
dec
popf
rcll
repnz
mov
jno
pop
mov
das
push
jl
test
pop
dec
js
xchg
push
sub
inc
test
dec
fnstcw
mov
or
xchg
repnz
and
pop
mov
mul
dec
movsb
jo
push
iret
cmc
inc
mov
popa
adc
sbb
mov
cld
inc
js
cmpsb
test
sub
cmp
pop
sbbl
adc
int3
mov
and
movsb
loopne
mov
and
fcom
jge
ror
dec
inc
imul
cmp
xchg
idivb
enter
and
pop
imul
pop
adc
xor
jle
adcl
mov
aam
cld
cltd
jae
mov
jg
and
leave
mov
push
int
add
push
jne
add
jecxz
mov
div
sbb
cmp
mov
sub
xor
dec
test
xor
std
jg
fsubr
aam
cmp
cmpsb
xlat
inc
cli
mov
adc
loopne
add
push
jmp
std
iret
int3
mov
jne
and
cmp
jns
dec
pop
shl
fsubp
mov
cmpsl
mov
testb
or
xor
lcall
jg
cli
mov
call
sbb
fildl
mov
dec
cwtl
adc
jp
icebp
cltd
repnz
sub
rcll
mov
add
js
dec
iret
out
adc
xchg
roll
data16
jbe
inc
call
add
rclb
xchg
or
cmpps
mov
mov
cmc
lea
xchg
or
cmp
adc
dec
sar
es
out
ret
mov
sbb
cmp
inc
out
xchg
push
mov
aaa
stos
cs
mulb
sbb
inc
fisubl
sbb
mov
in
aam
mov
inc
mov
adc
xchg
ss
leave
cmpsb
cmp
jle
xor
or
aaa
inc
dec
ss
xchg
pop
mov
cmp
into
jno
lea
in
sub
sahf
mov
jp
mov
xchg
andl
xor
bound
xor
mov
jbe
bound
dec
dec
test
adc
inc
stos
pop
clc
jns
mov
push
cmp
dec
mov
loop
pop
or
fs
ret
mov
and
int3
repz
sarb
mov
sub
xor
mov
mov
data16
stos
mov
fcmovnbe
lock
inc
xorb
dec
adc
sub
sarl
xchg
in
loopne
loop
test
adc
fildll
repz
pop
adc
icebp
jnp
cmp
imul
xchg
mov
mov
loopne
pop
or
jle
xchg
add
add
call
dec
add
inc
mov
cmpsb
ljmp
mov
std
mov
fs
movsl
aaa
jmp
push
and
mov
cmp
lea
cmp
cmp
sbb
xor
movsb
lret
pop
mov
mov
sti
enter
fisubl
out
popa
dec
xor
mov
call
mov
test
push
adc
mov
bound
das
ret
push
out
addr16
push
inc
cs
jbe
loopne
and
int
clc
cwtl
std
xor
test
loope
mov
and
clc
das
jp
divb
loop
and
adc
into
je
xor
mov
cmpsb
aaa
cwtl
fstpl
nop
movsl
pop
mov
mov
mov
mov
cs
das
ja
rcrb
pushw
jge
dec
xchg
fs
pop
inc
dec
roll
loop
scas
lock
mov
mov
loop
aad
mov
cwtd
pushf
addl
sub
ficompl
mov
pop
add
inc
clc
notl
sbb
inc
aam
sub
movl
jnp
dec
cld
loopne
movsb
mov
in
push
out
fsubp
pop
or
shll
sbb
mov
cld
cmpsl
jne
cmp
fdivs
outsb
inc
cwtl
mov
popf
push
call
movsl
jnp
test
inc
arpl
fbstp
subb
out
jae
push
sub
hlt
int3
rcl
add
mov
xchg
cli
lret
das
add
pop
pop
mov
push
inc
ds
aas
jb
push
into
dec
jl
lock
inc
pop
loop
repz
mov
sub
add
fisttpl
in
or
fcomps
mov
xchg
test
call
stos
and
sbb
shlb
gs
cmp
mov
sbb
inc
inc
lock
xor
lea
imulb
pop
je
dec
xchg
cmpsl
and
test
leave
leave
divl
sarb
gs
scas
daa
and
lds
aam
in
rorb
and
movsb
outsb
cmc
leave
shrb
mov
test
pop
fimuls
dec
mov
aaa
lea
das
mov
out
pop
sub
or
inc
movsb
xchg
in
xchg
dec
lcall
lcall
sub
aaa
loope
out
es
pop
jne
aad
or
inc
loopne
fcoml
adc
mov
xor
test
cmp
xchg
jnp
push
lcall
push
xchg
mov
xchg
jmp
mov
imul
push
xchg
sub
inc
dec
js
dec
in
mov
sub
jne
pop
popa
shl
jbe
call
sub
loopne
mov
ret
adc
adc
mov
mov
jae
lods
test
aaa
jno
fimuls
inc
adc
faddl
mov
fists
stos
inc
pop
ret
sub
lcall
push
popa
ret
mov
cs
cmc
out
pop
jl
testb
scas
cmpsl
inc
push
pop
mov
aad
or
sbb
addl
leave
pop
lahf
xchg
inc
rorb
push
fwait
adc
gs
add
fstl
rorb
cmp
xchg
iret
out
in
xchg
jnp
repz
les
gs
les
xorl
cmp
daa
jnp
xlat
add
inc
leave
mov
sbb
add
inc
mov
addl
adc
cmp
repz
mov
push
dec
es
and
js
les
jbe
test
sbb
jecxz
and
push
xchg
leave
mov
push
xchg
xchg
mov
subb
inc
insb
loope
jmp
mov
sbb
push
out
loop
mov
xchg
fs
in
add
push
xchg
pusha
test
loop
add
ror
dec
xor
inc
sbb
sarl
jl
mov
aas
movsb
inc
insb
ret
scas
fimull
stos
test
fdivl
xlat
pop
daa
lret
inc
orb
sbb
ret
push
push
int
jns
inc
mov
mov
inc
mov
mov
bound
inc
pushf
ret
test
sub
pop
push
lock
mov
push
mov
mov
jmp
xchg
cs
mov
mov
inc
cmpsb
iret
pop
sbb
push
add
outsl
rcrb
xor
sbb
loopne
or
xchg
pusha
dec
orl
mov
mov
and
mov
stos
clc
push
scas
dec
clc
test
xchg
push
push
mov
xchg
sub
dec
xchg
xor
mov
nop
mov
and
mov
push
daa
neg
cmp
dec
sub
in
ljmp
push
adc
lods
insl
js
sbb
jae
xchg
call
adc
std
add
insl
jmp
call
dec
cmpl
shll
ljmp
out
popa
mov
iret
push
push
fwait
or
test
pop
int
imul
call
testl
les
sub
and
inc
cmpsb
sbb
jbe
and
jno
push
lods
and
adc
rcrb
sbb
or
stc
repnz
cmp
rclb
cwtl
mov
cmp
ja
cwtl
dec
icebp
push
push
mov
mov
sub
add
ss
es
add
cwtl
ror
push
add
and
pop
repz
xchg
out
fldcw
mov
out
jg
inc
cmp
sub
adc
dec
add
mov
pop
popa
inc
mov
pop
or
inc
aad
cmp
ljmp
jns
pushf
in
mov
push
mov
repz
in
adc
sbb
scas
mov
sub
xchg
adc
sbb
nop
sub
cmpsl
pop
adc
popa
test
fs
push
adc
clc
sub
mov
mov
loopne
push
xor
pop
test
hlt
inc
testl
clc
push
leave
push
push
dec
mov
mov
outsl
icebp
jle
mov
and
idivb
mov
mov
shrb
xor
test
fwait
js
imul
sbb
repnz
ficoml
jl
and
xchg
sbb
jno
mov
fnstenv
aad
sbb
test
cmp
scas
dec
cmpsl
inc
icebp
enter
push
push
repz
push
jmp
loope
push
test
jge
dec
clc
and
push
mov
sbbb
jg
imul
call
sbbl
or
sti
js
mov
mov
in
cmp
cmp
jbe
lret
fwait
loop
lcall
mov
fisubs
dec
stc
pop
iret
ljmp
rolb
add
mulb
or
xor
enter
adc
mov
cmp
pop
rclb
jle
push
jle
out
mov
or
clc
fsubr
jbe
dec
mov
lds
dec
sbb
xchg
jp
arpl
xchg
cmpsb
push
lcall
pushf
jmp
sbb
mov
scas
out
jmp
in
jmp
and
add
jno,pt
scas
inc
cmp
ficoml
push
lret
loope
push
fdivs
sub
leave
ficoms
and
adc
call
iret
ret
or
push
call
mov
les
filds
push
cmpsb
insl
iret
lahf
in
icebp
sub
stc
inc
lret
cmp
lret
loop
fwait
insl
add
or
jb
scas
cli
jp
movsl
mov
ds
mov
cmpsb
mov
mov
xchg
xor
loope
mov
enter
into
sub
sub
movsl
xchg
fsubl
sti
out
dec
jbe
rolb
adc
xor
push
and
push
hlt
and
out
add
adc
lods
sbb
sti
or
scas
call
les
adc
rcrl
pop
scas
jns
pop
sbb
xor
cmpsb
aaa
adc
lret
and
adc
dec
dec
stos
xchg
xor
xlat
mov
adc
mov
and
cmp
dec
mov
mov
dec
fldcw
icebp
mov
in
idivl
loopne
js
dec
sbb
push
mov
pop
cmpsb
je
cmpsb
xor
push
testb
or
addb
xchg
call
and
and
fsubl
ljmp
lcall
gs
loope
push
test
aaa
jmp
stc
mov
dec
push
push
repz
xor
push
mov
inc
mov
push
lods
mov
scas
data16
and
in
pop
add
subl
rolb
jb
cmp
aam
test
mov
xor
out
mull
ljmp
pop
iret
mov
add
push
leave
in
sahf
pop
mov
mov
cmp
leave
out
add
pop
sbb
out
adc
add
jbe
xlat
xchg
inc
lock
sahf
enter
fadds
adc
mov
fisubl
sub
pop
lahf
fst
dec
xor
aad
int3
mov
lds
sarb
ljmp
popa
xor
adc
stos
lret
aaa
addr16
push
fucomp
out
or
xchg
mov
xor
and
or
shlb
and
subl
mov
xor
mov
sub
add
mov
movl
movl
mov
mov
pushl
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
add
push
push
movzwl
or
push
movl
lea
mov
movl
sub
lea
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
push
call
jmp
mov
mov
or
mov
xor
decl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
sbb
mov
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
push
call
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
add
movl
cmp
movl
je
mov
movl
jmp
sbb
mov
mov
adc
mov
or
movl
cmp
movl
jne
movl
cmp
movl
jne
movl
push
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
cmp
movl
jne
push
movl
push
jmp
mov
mov
mov
cmp
jne
movl
cmp
jne
movl
push
movl
push
movl
jmp
mov
mov
movl
cmp
jne
cmp
movl
jne
movl
push
movl
push
movl
jmp
mov
mov
mov
mov
movl
cmp
movl
jne
cmp
movl
jne
sbb
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
pushl
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
push
push
push
push
call
jmp
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
jmp
sbb
cmp
inc
fst
inc
mov
xor
sbb
jbe
push
scas
add
jae
shlb
mov
mov
xlat
movsb
mov
js
mov
push
mov
mov
add
loop
pop
sub
dec
push
iret
negb
test
cs
xchg
fnstcw
int
cmpsb
clc
sahf
loopne
xlat
add
popf
dec
adc
mov
es
sub
sbb
in
fsubrl
mov
or
mov
je
iret
cmpsl
xlat
inc
dec
jne
push
pop
orl
arpl
fbld
sub
ds
movsb
stos
loop
insb
enter
mov
mov
imul
cmpsb
stos
mov
lock
fwait
inc
push
push
xchg
ja
push
aad
test
mov
add
cltd
fisubs
dec
xlat
dec
cltd
cld
idivb
mov
aas
inc
into
dec
add
mov
adc
in
inc
lahf
scas
fimuls
dec
mov
scas
xchg
push
jno
sahf
sub
inc
cld
add
mov
lds
hlt
dec
mov
loopw
mov
xor
sub
cs
dec
fsubs
push
push
je
aam
cmp
jle
cs
cmp
fiadds
lods
fistpl
xchg
sbb
cmp
sarl
clc
jb
cmovl
cmc
cld
iret
ds
cmp
fistpl
ret
aad
lea
mov
inc
jle
xlat
sbbl
xchg
adc
bound
add
iret
cld
mov
jp
add
pop
push
mov
push
mov
cmp
in
mov
sahf
and
test
lock
inc
xchg
xchg
push
jno
outsl
jg
lds
pop
test
ret
je
loopne
movsl
pop
inc
or
mov
adc
push
xchg
test
add
inc
ret
cmp
pusha
push
jmp
pop
leave
lea
dec
jne
ja
lahf
mov
das
lds
jl
and
push
enter
in
and
mov
sbb
adc
lods
xchg
mov
lock
xchg
movsb
clc
dec
test
mov
movsb
loopne
movsl
push
push
adc
pop
xor
pop
enter
iret
lret
jb
push
mov
push
cwtl
dec
jle
out
add
sub
sub
fldt
push
mov
dec
cmpsb
daa
cmc
popa
xchg
rcll
out
dec
mov
sbb
das
sbb
in
loopnew
push
or
daa
jmp
add
lret
cmp
xor
je
movsb
psrlq
inc
sbb
lods
sbb
dec
aad
enter
sbbl
pusha
test
sti
and
inc
stc
inc
jns
movsb
inc
aam
jmp
mov
scas
adc
cld
mov
mov
nop
out
push
cmp
or
pop
xchg
adc
stos
jecxz
lret
out
and
clc
adc
movsl
mov
sbb
inc
mov
dec
les
cs
pop
enter
jp
mov
std
iret
sbbb
xchg
lods
dec
xor
pop
jb
push
scas
mov
push
cmpsb
lds
mov
xchg
add
jle
and
sbb
ret
rcrl
or
fsubr
sbb
push
into
das
pop
jns
push
hlt
imul
mov
push
pop
adc
rcrb
cli
pop
add
xchg
scas
mov
pop
jo
leave
arpl
pop
shrl
jp
je
icebp
and
mov
nop
jmp
mov
aaa
pusha
lea
push
lds
lcall
pop
dec
dec
cmpb
mov
lea
jp
sub
pop
mov
shlb
popf
lock
fbld
mov
movsb
cmc
mov
and
sahf
int3
xchg
jl
scas
aad
or
mov
jp
xchg
stos
jb
inc
cmp
sbb
dec
pop
jnp
mov
cmpsl
mov
mov
ss
mov
dec
or
mov
pusha
stos
pop
je
jmp
jmp
bound
icebp
jg
push
scas
add
js
sub
repnz
inc
jp
frstor
or
arpl
loope
cmp
andb
lahf
aaa
adc
mov
fcoms
mov
in
imul
sbb
shlb
out
imul
testl
scas
push
mov
movsl
cmpsb
fwait
add
adc
das
jp
ret
cmp
pop
out
icebp
or
cmpl
mov
push
gs
mov
sbb
mov
int3
mov
xchg
sub
loop
inc
in
sub
push
dec
repnz
push
jg
sahf
dec
jecxz
pop
in
out
pop
int3
push
mov
push
mov
mov
in
sub
fst
mov
or
mov
dec
mov
hlt
sub
cli
lea
repz
mov
push
int3
push
or
or
or
or
jl
leave
arpl
add
ja
je
dec
push
in
repnz
out
mov
in
push
or
mov
iret
icebp
mov
xchg
cmp
push
div
add
inc
fldenv
sahf
or
insl
mov
pop
jno
xchg
lret
adc
push
push
ret
and
or
addr16
xchg
dec
mov
pop
inc
repz
enter
push
add
sahf
xchg
fs
in
fs
mov
add
mov
scas
out
out
inc
arpl
scas
subb
or
sahf
jmp
aad
push
push
icebp
fs
loop
dec
and
hlt
outsl
ret
scas
icebp
sbb
sahf
xchg
out
sub
sub
daa
inc
sub
mov
dec
add
adc
test
xchg
scas
sbb
xor
ljmp
pop
jp
pop
lret
sbb
pop
mov
xor
nop
loop
xchg
aad
cmp
insb
jmp
pusha
push
xchg
or
rcrb
xor
xor
leave
movsl
pop
lahf
inc
xor
test
data16
fstp
mov
jl
in
mov
xor
mov
sub
das
pop
mov
fcompl
ret
je
lods
mov
cmc
mov
mov
pop
loop
or
mov
or
outsl
cmpsb
ret
sub
cltd
mov
repz
rcl
or
jns
cmpsl
or
femms
inc
in
xchg
jge,pt
xchg
add
stos
mov
out
push
xchg
addl
les
dec
xchg
push
cli
shrl
sub
dec
or
fcompl
or
push
cwtl
js
popf
jp
shl
lods
and
enter
clc
out
xchg
mov
bound
mov
pop
sub
adc
xor
imul
mov
inc
push
dec
aaa
repz
inc
das
fldcw
out
cltd
jp
adc
ds
in
push
mov
outsb
dec
cmc
xor
stos
xor
into
dec
daa
imul
xchg
popf
cmpsl
fisubrl
das
inc
ret
mov
xchg
js
adc
pop
orl
movups
pop
lret
mov
jno
push
data16
push
mov
pop
jl
addr16
jg
xor
sub
add
aad
cmovns
push
les
popa
sbb
mov
inc
lods
push
adc
or
dec
int3
lret
pop
add
dec
out
lock
pop
mov
bound
lcall
clc
xchg
or
xchg
push
ror
sahf
arpl
xchg
outsl
mov
xchg
lds
cmpsl
inc
jmp
repnz
lods
mov
cmc
stc
aad
std
push
add
cmp
sub
dec
lods
sub
sarb
xor
call
inc
xchg
sahf
xchg
shlb
mov
mov
add
fistpl
add
dec
sarb
cmp
cmpl
test
pop
ja
int3
inc
loope
pop
ja
and
xor
jae
xor
jb
leave
jg
pop
dec
in
xor
xor
aam
cmp
inc
xchg
aas
hlt
cmp
mov
jle
bound
pop
fs
adcl
cmc
pusha
and
or
jae
xchg
repz
mov
stc
and
or
push
mov
mov
dec
add
lods
loop
mov
push
arpl
cwtl
jb
fsubl
jle
popf
pop
shr
dec
push
loopne
shlb
mov
jmp
pop
in
push
dec
fisubl
add
repz
sbb
rorb
mov
xchg
xor
lds
sub
gs
jnp
push
push
add
ret
shlb
js
arpl
fs
inc
jns
scas
xchg
xor
insb
jbe
push
dec
out
inc
ljmp
test
sbb
mov
and
and
mov
xor
repz
sub
in
lcall
push
fmull
mov
int
fsubr
hlt
scas
out
cltd
loopne
cwtl
data16
pop
xchg
inc
je
fisttpl
jmp
mov
int
sub
daa
adc
out
xchg
or
inc
xor
mov
sub
xchg
movsl
mov
fmull
les
sub
fildll
add
add
popa
ds
cmpsb
sub
fnsave
jae
loopne
xor
rclb
inc
rcrb
cmp
aas
mov
xchg
or
pop
add
dec
icebp
lcall
mov
out
sub
sti
in
inc
das
jmp
xchg
sbb
repz
or
outsb
sbb
in
mov
pop
cmp
mov
lods
roll
std
in
mov
dec
stos
cmpsb
xchg
adc
clc
mov
sub
xor
jno
or
jns
add
adc
jp
inc
sub
in
jb
int3
cs
jp,pn
jb
cmp
push
and
adc
fucomip
shll
inc
sahf
out
jge
sbb
sbbb
and
or
pop
pop
cmp
pop
testb
inc
xchg
push
ds
rorl
mov
orb
push
dec
mov
rclb
outsl
stmxcsr
push
arpl
fucomi
cld
and
mov
shrl
xor
xchg
and
xchg
cli
or
cld
je
popf
sbb
cmp
or
iret
mov
jb
pop
fs
std
and
xchg
add
xor
aad
jl
or
xchg
frstor
add
outsb
dec
out
imul
xchg
movsl
andb
cmp
popf
sbb
add
mov
dec
das
mov
sbb
and
mov
mov
xor
movlps
xor
sbbl
fiadds
inc
cld
or
mov
je
in
jno
cmp
in
shrl
enter
sub
jns
push
mov
adc
xchg
and
rolb
outsb
xor
xor
std
and
mov
jmp
xchg
xchg
lods
pushf
std
jge
and
je
push
ljmp
repnz
sarl
push
push
fstpt
mov
sbb
jns
gs
mov
jnp
enter
jmp
sti
jmp
inc
lret
ds
push
in
cmp
mov
jmp
adc
test
into
aam
mov
test
and
or
mov
ss
jge
and
or
scas
jns
hlt
dec
pop
fstpl
cs
ds
loope
xor
pop
dec
inc
xor
pop
adc
shrb
icebp
movsl
push
jbe
jmp
inc
cld
sbb
adc
negl
pop
push
lahf
mov
loope
xor
test
mov
inc
xor
sub
push
dec
xchg
std
lcall
sbb
sbb
aam
shlb
mov
add
add
and
loopne
add
mov
in
sub
in
hlt
mov
pop
sahf
cmp
orl
mov
int
leave
or
addr16
sub
iret
xchg
cmp
pop
sbb
fwait
and
mov
sar
mov
xchg
pop
outsb
lret
loopne
cmp
xchg
lds
iret
push
sahf
lods
loop
and
out
mov
in
lret
push
lret
pop
gs
fcmovbe
loopne
shll
cli
sub
jne
fldt
inc
mov
hlt
jno
cmp
icebp
out
pop
mov
outsl
fldt
repnz
ja
add
mov
test
jbe
out
movsl
movsb
ja
inc
fidivs
lock
lds
jg
shrl
cmp
out
fwait
pop
das
and
mov
sub
cmp
or
mov
mov
adc
aad
stc
fsubs
mov
ds
mov
inc
leave
xchg
mov
mov
les
shlb
cmpb
out
shrb
adc
aas
dec
dec
inc
push
enter
loop
lret
sbb
fistpll
dec
jnp
jge
scas
jmp
mov
punpckhbw
repz
xor
dec
mov
xchg
sbbb
xchg
and
cmc
push
xchg
jnp
xor
push
push
lds
mov
and
sub
jne
ds
notb
jns
enter
loopne
xor
ret
mov
push
add
push
push
mov
shrb
mov
into
decb
jg
das
pop
or
in
xor
cmpl
mov
add
xor
mov
shll
push
sti
mov
ret
popa
cli
push
xchg
insl
cli
push
cltd
cmp
dec
sbb
sbb
in
jmp
rcl
movb
mov
call
loop
ret
ss
cmpsl
ljmp
jo
out
mov
call
nop
xchg
inc
adc
and
aam
and
xor
push
cmpl
pop
and
das
cwtl
lods
and
flds
cwtl
xor
jmp
imul
lcall
adc
aam
popl
push
outsl
inc
in
fnstsw
nop
insl
test
repnz
nop
rclb
jecxz
mov
inc
dec
jo
js
rolb
shrb
jb
mov
mov
xchg
mov
jns
imul
js
mov
fstpl
sti
pop
les
cs
xchg
fmuls
test
push
inc
push
movsl
mov
hlt
std
das
jge
aad
inc
pop
int3
mov
daa
testl
xor
and
dec
sbb
test
sub
mov
mov
xor
push
xchg
pop
adc
pop
and
into
jb
and
pop
int
popl
or
jns
mov
insl
mov
jg
xchg
mov
dec
mov
leave
lods
xchg
call
pop
outsb
repnz
cmpl
mov
aam
mov
inc
icebp
sbb
dec
inc
sub
cld
jmp
ret
pop
lds
lock
adc
lret
sbb
in
mov
aas
add
aas
mov
mov
inc
call
in
xchg
fwait
notb
movb
or
hlt
lods
lea
sub
ret
mov
outsl
gs
cld
sub
sbb
or
insb
movsl
fwait
or
ret
sub
nop
cld
inc
mov
mov
pop
stos
cltd
mov
out
mov
and
xchg
sbb
dec
cmp
push
xchg
repz
jnp
or
outsl
bound
ja
cmp
test
push
fisubrs
in
subb
push
sub
leave
js
or
adc
mov
mov
push
push
adc
nop
fildll
push
daa
mov
dec
jns
pop
sti
call
iret
cs
addr16
ljmp
cmpb
out
fst
jmp
push
add
inc
lret
or
cmp
dec
mov
iret
fxch
ljmp
sbb
call
loopne
cmpsl
cltd
cmp
jae
xor
in
cld
xor
xor
leave
cmpl
inc
lods
mov
mov
fiaddl
jns
sub
pop
scas
test
dec
sub
scas
pop
ss
pop
xchg
jae
dec
cmpsl
and
scas
insb
cmc
dec
dec
and
mov
dec
sub
fsub
jmp
sahf
push
sbb
pop
insl
sbb
lahf
and
lahf
mov
xchg
mov
xchg
jb
sub
pop
test
push
inc
aam
jmp
cmpsb
icebp
xchg
lcall
xchg
mov
jge
movsb
test
cmc
sti
iret
push
add
mov
bound
rcll
xor
lock
jle
arpl
xchg
xchg
test
mov
jb
pop
inc
push
xchg
outsl
inc
aad
repnz
outsb
mov
xchg
arpl
dec
imul
lods
xor
mov
or
insb
jb
jae
in
fdivr
add
sub
vorps
std
outsl
jp
adc
adcb
outsl
add
inc
push
adc
add
mov
popf
jge
lahf
pop
cmp
jno
int
ja
mov
int
loop
lret
sahf
xor
sub
dec
loopne
fisttps
and
sub
out
popf
scas
mov
icebp
push
jb
push
pop
adc
and
or
xchg
sbb
sbb
test
jg
aam
dec
int
sub
daa
pop
xor
pop
rcrb
mov
mov
aas
in
pop
in
sti
jbe
fildl
lock
into
adc
icebp
pop
fists
adc
mov
mov
into
adcl
inc
bsf
push
jb
out
adc
or
repz
lea
popf
in
pop
sbb
push
adc
lods
xchg
into
hlt
pop
mov
dec
add
inc
jge
push
xchg
ret
pop
mov
add
jno
shll
jb
mov
inc
lahf
or
inc
cmp
ds
adc
push
cmpsl
adc
ret
icebp
stos
push
cmpsb
or
mov
add
inc
divb
push
jb
and
lret
pop
clc
pop
mov
and
icebp
adc
rorl
dec
scas
or
lahf
and
sbb
fdivl
sbb
sbb
dec
sbb
adc
ljmp
cmpsb
lods
mov
les
sbb
mov
mov
sbb
mov
ficoms
mov
repz
lahf
data16
popf
mov
shlb
or
pusha
rorl
movl
cmc
cli
xor
andb
enter
and
and
or
sub
xor
subb
sbbb
inc
jmp
mov
pop
int
dec
or
mov
jg
rcrl
ds
lcall
fwait
iret
push
sarb
push
sbb
lret
in
incb
es
sbb
pop
cmp
fiadds
imul
pop
lcall
add
inc
lret
popa
lcall
push
jmp
jbe
mov
stos
and
testb
sub
add
mov
dec
xchg
test
ficoms
pusha
fimuls
cmp
add
int
jg
cmp
das
lds
hlt
or
sub
push
cmp
js
mov
xlat
orb
lock
in
outsl
in
call
rorb
mov
xchg
pop
pop
mov
out
leave
lret
aaa
sbb
sub
lret
sbb
popf
sub
push
mov
jge
mov
cmp
or
xorl
add
mov
stc
ficompl
push
sbb
mov
fbstp
mov
roll
adc
cmp
test
sti
inc
pop
mov
push
cmc
je
xor
xor
cmp
mov
jecxz
stc
out
adc
mov
mov
fisttps
add
mov
pop
and
or
xor
loope
push
jge
repz
inc
cltd
add
fidivrs
add
sbb
sti
xor
iret
jmp
or
jmp
and
xchg
push
mov
cmp
aas
stos
add
scas
mov
adc
jnp
out
movsl
scas
dec
jecxz
and
pop
insb
fwait
arpl
aad
jecxz
sbb
bound
in
sbb
stos
lds
mov
jle
dec
jecxz
xchg
mov
add
ljmp
fldenv
inc
inc
push
cmp
add
lods
mov
cld
mov
aad
push
pop
addl
cmp
hlt
inc
popf
pop
arpl
sbb
cli
je
cmp
int
jns
fsubrp
push
xchg
cmp
out
push
sub
sub
outsl
sbb
mov
jl
data16
jo
rcrl
xchg
in
xchg
sbb
pop
cmp
orl
sub
add
push
into
and
inc
lret
inc
std
and
test
lods
enter
lcall
ss
outsl
in
icebp
aaa
mov
mov
aaa
imul
jg
jg
ss
in
push
divl
xor
movsl
test
es
pop
inc
stos
lock
xchg
into
sub
sub
in
jge
addr16
scas
inc
fcmovb
pop
in
jae
pop
ljmp
xor
cmc
pslld
int3
cmp
dec
lds
or
cld
je
push
mov
jnp
mov
lods
ds
lahf
rcl
push
loope
adc
sub
filds
inc
jne
inc
lods
imull
aas
ds
mov
mov
je
jecxz
js
dec
xchg
dec
dec
pop
add
faddl
mov
inc
xchg
es
int
mov
cs
repnz
xlat
jne
and
xor
jnp
jmp
add
lds
dec
mov
shrl
push
mov
std
inc
adc
jae
insl
adc
arpl
push
adc
into
out
insl
jbe
and
loopne
xchg
sbb
dec
loopne
daa
je
push
or
dec
push
mov
ret
lea
mov
xor
cwtl
out
outsb
add
add
mov
push
outsb
or
lcall
sti
jle
nop
sub
mov
je
jg
mov
lret
addr16
jp
sbb
mov
sub
and
jns
adc
cmc
in
mov
enter
jmp
ret
mov
jne
inc
imul
repnz
test
cmp
push
xor
pop
xchg
test
aad
xor
xchg
jmp
mov
xchg
ficoms
cmp
pop
pop
shll
or
int3
shlb
xor
mov
leave
and
and
sti
mov
or
and
inc
stos
mov
push
sbb
sbb
mov
lods
cmp
pop
push
les
add
shlb
ror
inc
loopne
aad
inc
pop
or
mov
shrb
addr16
popa
fdivs
les
lods
cmc
addr16
and
cltd
add
push
cmp
add
mov
add
test
jbe
out
nop
inc
daa
mov
mov
push
and
sub
jo
mov
adc
shrb
jmp
loope
adc
add
xlat
add
push
inc
inc
ficoml
mov
addr16
das
sbb
adc
int3
cmpsl
pop
repz
insl
inc
in
fildl
movsb
addr16
imulb
xchg
incl
ds
sbb
fdiv
frstors
and
xor
adc
mov
pop
andb
cmp
int3
lret
xor
cmc
mov
incb
add
mov
or
or
xor
jecxz
inc
fisubrs
and
pop
mov
ret
xor
jbe
out
fisttpll
jnp
loopne
jo
cmpsb
push
push
lahf
jb
cld
popa
sub
out
add
test
data16
adc
xchg
or
xor
repz
jae
mov
arpl
inc
fcomps
dec
jmp
cli
fistl
sub
mov
cmc
repz
cs
inc
in
arpl
sti
aam
ret
add
mulb
or
adc
fsubr
adc
push
sbb
pop
lcall
xor
stc
data16
mov
ss
push
adc
dec
push
jb
inc
xor
cmpsl
jo
ja
adc
imul
xor
sbb
ror
je
mov
mov
std
imul
inc
inc
inc
out
xor
xchg
outsb
gs
pushf
cmpsb
ficomps
scas
sub
sar
push
scas
loope
into
push
sub
push
push
adc
cmp
mov
jle
sbb
lods
fdivr
jne
mov
insb
push
pop
mov
xchg
mov
in
push
pop
cwtl
push
cmp
mov
push
cwtl
lea
sbb
pop
loope
sbb
fdiv
stos
out
jae
mov
enter
hlt
movsl
ss
push
push
icebp
imul
roll
push
push
popf
sbb
jg
jmp
call
data16
sbb
xchg
lcall
repnz
lret
cmp
fsubrp
lahf
mov
cmp
adc
cwtl
fstps
das
xchg
sbb
cmp
rcrl
mov
aad
andl
out
pop
push
stos
pusha
stos
aam
lea
icebp
xchg
test
jb
aam
adc
add
sub
insb
bound
outsl
jb,pn
rorb
sbb
jp
push
sbb
lret
add
mov
fistpl
lods
or
mov
fstp
xor
popf
ss
popf
ficomps
fdivl
adc
test
mov
mov
out
stc
pop
jmp
xchg
or
mov
ficompl
cmc
rcl
sbb
out
mov
aad
lret
lahf
add
mov
and
or
fwait
sbb
mov
jle
sub
fdivs
add
enter
push
loop
add
shl
cmp
or
test
clc
pop
xchg
out
jecxz
push
rclb
pop
fsubrl
or
aam
sub
adc
push
in
pop
shrb
xchg
fs
sbb
mov
mov
dec
push
in
xor
adc
int3
outsb
xchg
sbb
lds
adcl
fidivl
icebp
call
mov
add
in
inc
mov
xor
cmp
xchg
into
pop
insb
ret
dec
dec
imul
cld
push
xor
xchg
mov
outsl
in
jb
lods
rorl
sub
pop
xor
mov
push
sbb
sub
int3
imul
not
mov
inc
cmpsb
xchg
ljmp
xchg
rorl
inc
xor
sarl
movsb
jae
subl
pop
clc
mov
mov
pop
rcl
xchg
cwtl
pushf
sbb
mov
test
push
or
xchg
cmc
mov
call
xchg
ljmp
mov
in
rorb
sbb
lods
in
mov
sub
xor
adc
adc
adc
mov
xor
push
outsl
ljmp
repz
push
subb
std
scas
fdivrp
ja
in
nop
jb
int
cs
je
cld
adc
ror
or
pop
inc
jb
push
and
outsb
mov
sub
add
dec
adcb
movsl
push
mov
in
arpl
mov
loope
fs
cs
test
push
push
rorl
jns
cltd
adc
ljmp
addl
jp
mov
in
cmp
out
sub
sti
sarb
cmc
shl
push
popf
mov
pop
pushf
repnz
mov
adc
pushf
inc
ror
scas
cmp
mov
push
fwait
repnz
sarb
sbb
jg
xchg
lea
icebp
xor
icebp
shlb
add
or
adc
cmp
shl
cmpb
inc
test
pop
out
dec
dec
lret
jge
out
in
xchg
faddl
pop
test
movsl
mov
sbb
sub
push
push
push
mov
js
fadds
mov
out
les
pop
push
and
add
jae
xor
dec
xor
pop
push
inc
cltd
mov
les
xor
aam
jo
add
inc
outsl
or
das
fs
cmp
insb
in
repnz
out
mov
aaa
sub
or
lock
mov
sbb
mov
stos
es
mov
int
ret
sub
test
pop
and
xchg
jmp
outsb
or
sub
div
adc
lds
fistpll
mov
dec
push
mov
cwtl
push
xlat
adc
test
xchg
and
xlat
xchg
lcall
gs
push
push
sbb
sub
cmp
push
sbb
sahf
ds
and
dec
push
adc
push
fcom
mov
mov
aas
imul
mov
ds
leave
mov
xor
push
test
test
mov
mov
add
leave
mov
loopne
test
inc
loopne
stos
sbb
insl
mov
cmp
xor
lcall
xchg
mov
pop
hlt
cwtl
mov
mov
sbb
enter
mov
mov
fcomip
mov
lcall
int3
lods
cmp
das
cmp
sbb
shld
outsl
mov
sub
xchg
or
cltd
lret
pop
jnp
mov
imul
lods
loop
cs
lahf
arpl
aad
push
icebp
inc
aad
fmull
sub
push
dec
rcl
popf
insb
mov
push
push
imul
lock
repz
dec
aad
push
enter
loop
and
std
inc
dec
mov
xchg
shlb
cli
imul
xchg
mov
add
rcll
nop
cltd
mov
ret
cmp
popa
cmp
scas
movl
shlb
mov
out
js
or
jns
sbb
push
out
xor
sbb
jl
movsl
add
imul
adc
pop
inc
dec
xchg
outsb
repz
cli
jge
ja
or
push
incb
adc
cmp
std
pop
push
repnz
lret
negl
repz
cli
ds
out
mov
and
push
out
push
out
adc
jne
mov
lret
mov
pop
pop
je
xchg
popa
add
pop
repnz
js
xor
sti
mov
pop
mov
and
inc
jae
jne
mov
imul
add
and
lods
jg
sbb
or
aam
jmp
xchg
js
inc
dec
fldenv
cmp
sahf
push
sub
test
sti
sti
jecxz
and
lahf
add
out
push
cmp
add
add
rorl
outsl
jnp
xor
aaa
clc
xchg
push
mov
fcoms
aaa
in
std
mov
xchg
dec
mov
mov
in
jno
scas
out
push
mov
mov
out
nop
jno
dec
mov
cmpsb
cld
sahf
jle
mov
xor
scas
outsb
pop
and
push
cmp
popa
xchg
lods
pop
aas
into
out
popa
mov
mov
cmp
cmc
xchg
or
ret
test
dec
imul
cmpsb
jmp
arpl
repnz
jo
cld
jne
fnstenv
lcall
fldl
inc
fidivl
adc
mov
addr16
pop
notl
not
int3
sahf
int3
mov
jl
mov
aas
lret
push
xor
movsl
mov
pop
cmpsl
call
xor
sub
mov
add
cmp
mov
mov
jg
jmp
push
bound
jp
xchg
js
js
xchg
sbb
sbb
jb
scas
jecxz
push
int3
stos
push
aam
push
mov
and
clc
push
cmpsl
fdivr
cwtl
or
push
push
imul
icebp
cmp
aam
xchg
repz
js
imul
andb
stos
pushf
dec
jae
imul
in
push
push
sbb
ja
mov
cwtl
sbb
push
fadds
mov
fdivs
imul
sub
and
lods
cmp
in
call
ret
decb
lods
std
imul
mov
xchg
cmp
xor
inc
xor
imul
mov
inc
neg
adc
jge
jae
xlat
prefetcht0
inc
mov
inc
fmuls
xor
test
aaa
inc
filds
sbb
dec
stc
jg
into
pusha
je
loope
xchg
push
cmp
add
add
lahf
push
mov
xchg
fnstsw
in
mov
stos
inc
cmp
sbb
cmp
sub
inc
fwait
pop
imul
iret
es
xchg
pop
xor
ret
icebp
mov
mov
cltd
shlb
add
cmp
adc
push
clc
fwait
movsl
mov
rorb
and
jo
add
mov
mov
fistps
gs
pop
hlt
fsubrs
testb
fcmovne
mov
jle
or
pop
jne
adc
data16
xchg
mov
mov
fdivr
std
jge
jecxz
jge
inc
int
lods
push
pop
xchg
jb
insl
loop
es
mov
sub
icebp
outsb
int
out
push
pop
adc
adc
std
fstpl
push
aas
push
stos
movsb
mov
outsl
mov
cmpb
fistps
bound
enter
call
push
or
mov
add
push
aas
ds
add
pop
cmp
pop
mov
or
sub
arpl
testb
add
mul
sbb
je
idivb
or
aaa
pop
pop
stos
subl
mov
les
inc
aaa
inc
mov
adc
rolb
fcoml
add
stos
push
lret
inc
mov
sub
pop
xchg
lea
in
mov
das
dec
and
lods
test
sahf
nop
pop
enter
loopne
leave
mov
jle
movsb
adc
sti
jo
cli
xchg
shrb
adc
insl
push
ja
js
lock
fwait
icebp
aad
xor
and
ficompl
add
push
lcall
jnp
push
pop
adc
enter
shlb
jmp
aam
scas
repnz
es
in
mov
sbb
sbb
mov
fldenv
out
dec
clc
pop
adc
jae
sti
and
mov
arpl
movsb
in
push
or
cwtl
out
dec
mov
cmpsb
jmp
test
fbstp
and
sbb
imul
sbb
or
stos
jnp
or
dec
jmp
cmp
cmp
in
cld
push
push
pop
iret
enter
pop
and
lret
adc
and
sbb
xor
pusha
int
dec
inc
out
neg
pop
loop
xchg
mov
jp
fildl
lret
pop
xchg
add
or
jp
pop
fimuls
mov
sub
mov
adc
xchg
push
inc
or
arpl
sbb
push
push
rcrb
inc
orps
divl
insb
lret
push
dec
mov
mov
cwtl
jno
clc
sbb
pop
mov
sub
aad
js
insl
cli
or
mov
dec
jg
aam
jle
mov
pop
mov
dec
push
clc
popa
fcomps
lret
fistl
nop
mov
roll
insl
popa
mov
ds
cmp
xchg
adc
lock
inc
sub
shrl
pop
push
leave
ljmp
popa
int3
push
push
loop
je
div
test
mov
sbb
xchg
negl
aas
mov
inc
repnz
or
outsb
pop
mov
jns
arpl
jecxz
in
fsub
xor
int3
fsub
pushf
xchg
test
pop
mov
decb
cwtl
mov
movsb
mov
push
cmp
in
xchg
xchg
mov
pop
ret
inc
mov
pop
push
inc
cmp
stos
ret
addr16
shrb
adc
xchg
pushf
lods
rcrb
jno
xchg
xor
lcall
ret
loopne
mov
add
sub
lret
xor
in
dec
jae
inc
dec
or
pop
ljmp
adc
mov
or
sub
ret
popa
in
jne
cli
in
loope
dec
dec
inc
cli
push
or
dec
mov
and
xchg
std
sti
arpl
push
xlat
cmp
es
arpl
push
pop
pop
sub
cwtl
das
scas
in
sub
cmp
call
xchg
test
out
pop
or
cwtl
das
push
pop
movsl
stc
lock
setge
mov
xchg
and
push
adc
cmp
je
xchg
jne
push
std
sub
inc
and
pop
sbb
popl
jno
sub
repz
push
cmp
fbld
jle
ret
popa
add
push
fldenv
push
notb
jmp
jae
loope
or
jmp
push
jno
stos
xchg
xchg
inc
sub
stos
inc
notl
add
je
stc
dec
out
sbb
mov
sahf
push
xor
lea
fsubrl
push
out
mov
inc
cwtl
sbb
jns
test
inc
and
or
xchg
call
div
aas
dec
push
dec
mov
pop
cmpsl
lock
jp
sbb
ficoml
loopne
push
jg
and
jne
fs
outsl
sub
inc
mov
hlt
mov
or
adc
pop
jnp
cmp
jo
xchg
cmp
and
pop
stc
ret
and
push
cli
xor
push
or
sbb
out
jp
aad
sahf
jbe
in
in
cmp
dec
sbb
roll
mov
lret
or
or
mov
loope
mov
cmp
xchg
inc
sub
imul
bound
cmpb
pop
xor
clc
pushf
and
adcl
aad
lret
and
psubb
xchg
lret
inc
mov
out
enter
and
pop
andl
sbb
mov
xchg
mul
fists
dec
cmpsl
outsb
je
test
jb
or
inc
mov
sub
pop
fmul
das
inc
mov
scas
and
or
adc
jmp
lock
test
inc
pop
xor
dec
lcall
mov
inc
imul
push
pop
pop
imul
in
xchg
movb
mov
push
in
mov
or
in
mov
imul
daa
add
cmc
jne
data16
mov
pop
mov
xchg
xor
inc
mov
push
lret
idivb
mov
push
xchg
and
test
fcompl
stos
pop
out
push
and
test
or
ja
notl
mov
mov
and
pusha
into
cltd
mov
scas
mov
cli
lret
daa
loopne
dec
pop
ret
lods
mov
ret
arpl
in
punpckldq
lods
out
stc
insb
das
adc
into
aam
ljmp
jmp
scas
xor
scas
xchg
aam
pop
inc
cld
ss
in
adc
out
mov
dec
hlt
addr16
stos
jge
mov
je
adc
lods
ss
mov
dec
js
pop
jne
inc
shll
mov
mov
mov
leave
mov
es
jno
sbb
mov
repnz
insb
and
aad
add
popf
jl
loopne
jecxz
subb
jecxz
icebp
pop
inc
jb
push
incb
loop
mov
add
jo
insl
xor
mov
repnz
cltd
in
inc
jmp
xchg
add
mov
rorl
fs
mov
es
iret
jl
cltd
sbb
dec
sbb
mov
xchg
push
repnz
mov
test
and
jae
inc
mov
loope
aaa
pop
push
int
ret
in
mov
or
test
cld
inc
mov
insl
push
sbb
mov
outsl
pop
xchg
dec
fcmovb
add
cli
nop
or
adc
rorb
inc
insl
dec
cltd
pop
and
xchg
and
mov
jmp
pop
pop
jno
cmp
sti
sar
cmp
out
movhps
mov
add
xor
test
sbb
add
pusha
stos
js
jnp
add
out
test
jne
arpl
push
popf
push
sbb
mov
push
mov
nop
lcall
mov
pop
mov
jmp
test
xor
push
adc
xor
test
sub
out
gs
sub
mov
push
mov
in
pusha
cs
mov
mov
lods
mov
pop
fldcw
shll
xchg
in
cmpsb
fs
ficomps
sub
xor
int
xchg
or
int3
test
fildl
popf
js
mov
dec
test
cmp
js
jbe
xor
in
push
push
scas
nop
shl
scas
pop
sub
push
jae
cmp
or
imul
out
or
sbb
and
aad
fwait
pop
mov
xlat
test
je
sub
mov
mov
int3
xchg
cmpsl
and
xchg
scas
into
ret
push
xchg
loopne
pop
je
dec
adc
sbb
movsb
jle
xor
cmpl
xchg
ds
ret
add
clc
dec
cmp
lea
stos
std
test
sarb
pop
mov
leave
inc
push
xor
jmp
inc
test
mov
test
push
mov
vcvtdq2pd
scas
insl
mov
inc
in
in
out
add
insb
fcmovne
xlat
fists
pushf
or
popf
outsl
pop
push
sub
daa
push
fsts
outsl
inc
sub
xchg
aad
rcr
push
lds
lret
orl
mov
or
adc
outsb
inc
shrl
mov
out
adc
divl
push
dec
icebp
push
mov
lds
sbb
cwtl
pop
adc
jmp
xchg
or
shl
ja
or
sbb
dec
ja
imul
fsubs
jge
mov
cmpsl
cld
add
jne
adc
aas
push
or
xor
jno
add
and
xorb
sbb
hlt
aad
lar
and
mov
daa
mov
inc
jb
cs
adc
mov
ret
pop
add
sbb
rorb
sub
mov
out
ljmp
movsl
cmc
mov
popa
ds
adc
scas
mov
dec
repz
icebp
jno
push
sbb
dec
pusha
es
test
jnp
fisubs
bound
into
fsubs
pop
jno
pop
in
fbld
insb
pop
cs
repz
xchg
rcrb
in
mov
lcall
adc
cmp
push
test
lods
leave
nop
gs
insl
push
frstor
les
mov
dec
pop
push
jne
mov
sti
scas
jmp
inc
mov
or
xchg
jle
sahf
mov
mov
adc
js
xchg
enter
push
adc
or
pop
daa
mov
es
xchg
cmp
sbb
mov
js
mov
adc
ja
arpl
pop
add
cmpsb
jmp
sbb
jnp
push
sbb
add
cltd
in
dec
mov
push
subl
push
pusha
lcall
mov
test
lds
xor
jg
pop
stc
aam
pop
jg
repz
jecxz
or
inc
jl
cmp
int
and
imul
sbb
inc
mov
gs
aam
push
xor
dec
push
add
lods
dec
dec
push
inc
mov
fadd
loope
pushf
cmp
std
daa
shl
push
or
mov
js
loope
lods
fwait
xchg
aaa
das
adc
sbb
adc
xchg
mov
jecxz
je
inc
pop
push
lret
int3
pop
mov
mov
cmpsl
mov
stos
adc
mov
mov
arpl
imul
rcll
popa
push
dec
xor
lret
mov
pop
inc
hlt
cli
sahf
jge
inc
daa
xor
cltd
cmp
sti
cmpsb
insl
mov
ljmp
std
xchg
adc
jne
data16
xor
lods
mov
and
test
push
iret
in
stos
popa
rolb
add
push
adc
xor
push
xchg
jp
scas
test
rcr
clc
and
xlat
mov
or
pop
and
dec
les
testb
inc
out
push
out
cmp
test
xor
out
jmp
or
push
push
jl,pn
insb
aaa
add
cs
repz
rorl
test
jecxz
mov
add
add
adc
pop
cli
decl
jecxz
shl
mov
incb
fistl
test
jnp
mov
icebp
lahf
jns
int3
xchg
xchg
mov
adc
jmp
cmp
xor
sti
cmp
cld
and
inc
push
pop
jl
cmpsl
outsl
jo
adc
pushf
and
sti
lahf
pop
aaa
sbb
aad
fistpl
fisttpll
js
ja
dec
mov
and
mov
subb
push
stos
insb
cmp
aaa
daa
loop
pusha
out
mov
push
test
mov
out
pop
dec
ljmp
jg
push
cli
mov
adc
mov
or
jns
outsb
sub
and
in
idivl
sbb
adc
mov
fwait
stc
xor
jge
fidivrs
mov
lret
insb
and
fs
xor
ja
push
fldcw
inc
mov
out
hlt
fistpl
rcll
mov
sub
dec
out
jae
xchg
sti
in
inc
inc
fnsave
ja
addr16
vmread
add
adc
orb
add
arpl
test
lfs
roll
aad
mov
sub
push
std
xchg
stos
enter
xchg
imul
mov
test
arpl
mov
aad
fidivl
add
pop
icebp
jp
scas
and
inc
mov
adc
stos
inc
jnp
jb
add
mov
mov
push
cmpb
cmp
sub
pop
loopne
int
sub
and
or
and
sub
mov
insl
ljmp
and
and
adc
lret
cs
iret
jno
retw
ja
cld
cli
cli
shrl
sub
loope
and
aam
cld
or
in
lahf
dec
fs
mov
je
fidivrl
fwait
push
aaa
xor
push
into
mulb
dec
xor
push
lds
dec
add
adc
push
shll
push
inc
adc
int
jo
add
filds
or
xor
jp
push
movsl
out
xlat
sbb
push
idivl
xchg
push
add
rcr
arpl
in
sbb
sub
xchg
jae
and
aam
addr16
sub
mov
ficompl
and
pop
inc
adc
xor
lea
arpl
out
add
add
jo
dec
lock
mov
sub
push
aam
popa
pop
add
add
outsb
xchg
js
mov
inc
bound
pop
popf
iret
out
and
leave
jo
jae
pop
jle
mov
stos
xchg
fmull
movsb
xor
jge
push
sbb
js
int3
test
cmp
repz
repnz
loopne
mov
xchg
and
push
or
mov
pop
mov
pop
imul
cmc
aas
xchg
jmp
mov
movsl
shl
insb
call
jne
jl
jbe,pt
pop
mov
notb
in
cmc
aas
mov
addr16
cmp
push
fisubrs
cli
ret
jb
inc
icebp
test
fmulp
cmc
dec
sbb
into
and
enter
push
sbb
or
js
test
push
js
pop
notb
inc
fsubrs
adc
xchg
clc
cwtl
mov
sahf
inc
push
push
insl
add
or
pop
cmpsl
into
shlb
jecxz
les
fidivs
lods
shr
mov
dec
clc
jo
xor
dec
cmp
add
mov
xor
jno
iret
add
pusha
ss
iret
sub
pop
sbb
shrb
or
mov
sahf
fwait
insl
xchg
movnti
das
cmc
push
test
fadds
addr16
stos
push
cltd
leave
sbb
mov
test
lods
adc
add
lcall
ja
jmp
adc
aam
dec
dec
int3
ds
push
leave
jb
es
es
xchg
dec
mov
sub
xchg
stos
ds
sub
jbe
ss
push
outsl
pop
inc
and
pminub
in
in
mov
arpl
push
fwait
sub
dec
mov
push
mov
icebp
dec
add
jle
and
mov
xor
scas
mov
shlb
sub
cmc
stos
fnstcw
andb
mov
or
das
das
jb
outsb
cmpsb
jo
js
shlb
cmp
pushf
xchg
push
jle
jle
dec
imul
sbb
sbb
mov
fsubs
test
ror
push
pop
inc
xor
add
loope
or
xchg
in
jmp
xor
fidivs
lret
pop
int3
xchg
mov
fisubl
and
subl
xor
add
fstl
arpl
in
ljmp
xchg
adc
scas
or
jmp
movsb
add
or
mov
shll
mov
add
and
sub
mov
inc
popa
sub
sub
mov
jbe
in
mov
aaa
lret
icebp
data16
scas
clc
xchg
stos
lods
jg
sti
mov
cmp
inc
push
outsb
je
aam
add
jle
movsb
and
popf
add
out
lret
jae
push
movsb
je
sub
rclb
pop
addr16
inc
cli
dec
mov
mov
lret
mov
add
jns
ljmp
inc
outsb
subb
aaa
and
es
adc
cmp
mov
lret
xchg
inc
imul
jg
ss
test
lcall
test
xchg
aaa
pop
cmpsb
mov
lahf
mov
and
or
insl
pop
dec
fdivrl
adc
lods
gs
andb
inc
jg
jg
cmpsl
cwtl
sbb
cli
mov
aas
pop
nop
rcl
jne
pushf
int3
das
popf
jge
or
gs
out
jg
cwtl
jo
jge
xchg
push
in
xor
push
cmp
cmpsl
lea
scas
push
mov
nop
mov
movsb
js
inc
repnz
ja
mov
addr16
aam
inc
or
out
scas
loopne
idivb
mov
sub
dec
mov
lahf
insb
mov
jns
fiaddl
ret
mov
scas
sbb
mov
cmc
pop
mov
pop
mov
inc
jo
mov
mov
incl
lcall
ffree
lock
into
push
cmp
sbb
lock
adc
or
dec
jg
hlt
in
fmuls
or
ret
mov
push
daa
xor
sarl
jle
sub
xchg
leave
jns
cmp
xor
push
loop
mov
or
outsl
fldenv
cld
repnz
push
out
stos
adc
inc
fwait
push
xor
xchg
mov
adc
push
cmc
icebp
imul
push
push
mov
adc
jl
lds
pusha
cmp
sahf
dec
scas
int3
mov
movsl
push
and
ret
push
out
xorb
xlat
inc
cmp
and
mov
sub
cld
mov
incl
jmp
jle
dec
scas
adc
sub
je
xor
jp
ret
cmpl
cmp
mov
and
out
imul
popl
scas
pop
mov
jge
lret
js
cmc
sbb
xor
mov
or
rcrb
mov
lret
mov
fmuls
je
sub
jno
movsb
fcom
dec
xchg
je
inc
jecxz
mov
mov
dec
sub
pop
fcoml
mov
sbb
test
add
mov
imul
add
and
mov
dec
add
pop
test
mull
fidivrs
jo
xor
ljmp
jno
or
push
and
mov
lret
and
nop
int
ret
dec
fisubl
cmp
xchg
cld
lods
push
xor
mov
out
out
test
xor
sbb
adc
jl
clc
sub
into
fs
and
mov
jp
ss
fiadds
ja
data16
jp
jl
pop
jns
jo
mov
je
mov
mov
mov
jae
and
mov
mov
mov
push
data16
jp
lods
in
jbe
xchg
inc
dec
into
cs
ret
sarb
or
adc
mulb
stc
ret
cltd
xor
enter
pop
scas
cmp
add
loop
mov
cmc
je
or
sahf
dec
enter
push
jae
mov
push
cmp
xor
rcl
sub
clc
aas
push
dec
shlb
push
dec
enter
adcb
test
addr16
jge
cmp
clc
push
inc
sub
mov
cmp
xabort
in
lret
cmp
jns
mov
loop
mov
push
arpl
sahf
aam
sub
inc
jae
imul
push
fstps
push
cmp
and
or
div
xchg
cmp
and
test
push
adc
fsub
dec
xchg
sbb
jns
mov
mov
mov
sbb
cmp
mov
inc
mov
subb
sub
and
mov
inc
push
sbb
pop
insb
in
cmp
pop
jne
dec
xor
into
roll
fdivr
add
mov
mov
int
pop
outsl
shrb
xlat
scas
test
xor
notl
dec
dec
ficoml
pop
aad
shr
js
ja
test
and
int
inc
sti
jg
or
ret
cmp
sub
es
push
cmp
sbb
out
pop
mov
mov
lods
shl
push
cmp
xchg
sub
inc
cmc
and
lea
xchg
and
ss
fwait
dec
dec
jns
outsb
and
into
cmp
jmp
je
inc
cld
sahf
xchg
cmp
sbb
lahf
popa
xchg
mov
lahf
adc
xchg
daa
push
pop
sub
dec
mov
icebp
sahf
sub
push
xor
add
out
dec
adc
mov
jmp
js
pop
cmp
add
cs
jecxz
in
lock
add
imul
pop
sub
sti
cwtl
cmp
ja
and
mov
cltd
dec
dec
sub
mov
cmp
mov
pusha
repnz
leave
xor
jge
iret
popf
pop
cld
sbb
cwtl
or
int3
cli
xchg
cmp
inc
mov
xchg
or
insl
inc
mov
icebp
bswap
sub
push
cs
xor
daa
jb
sti
sub
std
subb
outsb
mov
in
mov
bound
cmp
ja
mov
call
jmp
or
sbb
push
scas
mov
pop
into
or
fbstp
nop
mov
lock
push
mov
sahf
hlt
add
mov
cltd
cmp
mov
enter
add
leave
pop
loope
loope
aaa
into
and
testl
cmp
mov
xlat
adc
mov
dec
orb
adc
jb
mov
out
int
push
lret
mov
movsl
push
sbb
sti
xor
sub
xchg
leave
mov
out
xor
out
dec
sbb
ljmp
cmp
sub
mov
sbb
lret
pop
cmp
xor
adc
xchg
mov
loope
sub
jecxz
adc
loopne
mov
int3
and
jae
sbb
cwtl
jge
pop
sub
jae
lods
mov
adc
pop
mov
mov
mov
inc
lock
testb
inc
cmp
jo
xor
push
xor
sbb
sub
push
mov
imul
push
lds
std
out
sbbb
mov
jmp
push
cmp
or
inc
and
mov
rclb
sbb
nop
inc
ss
push
or
mov
push
mov
push
adc
pop
inc
push
loop
stos
into
orl
and
jle
jnp
dec
or
pusha
ja
mov
dec
or
add
xor
movsb
sti
jmp
fimuls
pop
dec
xchg
push
fdivl
mov
imul
xchg
or
sbbb
cmc
fstps
xchg
dec
test
or
xorb
xchg
jo
cmp
mov
int
adc
ficoml
mov
xchg
jbe
pop
xor
and
scas
sarb
jnp
and
mov
pop
popf
test
in
fcmovu
hlt
cld
mov
xor
je
pop
scas
push
scas
mov
jl
clc
js
and
inc
xchg
int3
xor
push
div
lcall
sahf
or
xchg
and
sub
scas
insb
cmpsl
aam
gs
add
stos
pushf
dec
mov
es
pop
icebp
mov
fisttpll
push
int3
scas
add
addr16
cmpsb
cmc
mov
sub
lods
movsb
or
scas
lcall
dec
adc
mov
addr16
add
mov
or
and
je
addr16
jne
scas
add
iret
dec
inc
push
pop
loop
cltd
scas
lea
sbb
or
clc
mov
dec
insl
xlat
adc
add
mov
adc
pop
push
push
push
iret
ret
mov
iret
sub
rorb
jbe
sti
jmp
out
pop
xor
add
imul
mov
xchg
jle
inc
mov
add
loopne
test
addr16
sbb
jns
pop
lds
jecxz
or
xchg
pop
cli
je
xchg
jne
dec
adc
sub
bound
stc
mov
das
insl
repnz
adc
push
cmp
pusha
pusha
outsb
inc
fwait
and
outsl
out
sub
sbbb
adc
sub
pop
cmp
xor
pop
int
icebp
shll
dec
scas
inc
push
sub
enter
mov
filds
sbb
notl
movsb
fdiv
push
inc
into
sub
and
jbe
aam
inc
push
insl
stc
sub
mov
adc
jbe
lahf
adc
mov
sti
imul
jl
jae
out
jle
sbb
imul
stos
add
fstpl
push
mov
into
dec
pop
scas
cs
pop
add
cmpsl
loopne
cli
test
scas
mov
cmp
sbb
add
sub
test
pop
or
inc
sub
dec
add
mov
mov
fs
lret
mov
fcmove
xchg
sub
or
lret
inc
insb
daa
and
aam
das
cs
or
aaa
out
or
cmpsb
ss
or
or
out
stc
in
mov
or
adc
mov
loope
inc
cld
out
lock
mov
inc
jmp
mov
jp
in
adc
xchg
cmp
test
stc
jge
adc
pushf
insb
lret
mov
movsl
sbb
aam
cmpsl
mov
repnz
cmpsl
lods
jae
add
repz
mov
or
lret
stos
push
mov
cli
pop
and
in
sub
xchg
lret
jmp
test
pop
ds
cmp
insb
lahf
leave
scas
xchg
jg
sub
movsl
xchg
and
sub
popa
cs
xchg
aaa
ret
and
pushf
or
mov
cmpsl
cmp
lods
mov
stos
push
add
or
jle
in
roll
test
jne
inc
into
mov
outsl
xor
rcl
scas
arpl
pop
or
cmp
sub
mov
mov
sub
mov
push
jne
jb
cmp
push
fldl
sarb
or
ficomps
pop
mov
ret
clc
mov
out
aaa
mov
xchg
adc
mov
dec
inc
xor
das
inc
outsb
pop
xor
sub
aas
insb
jl
adc
test
insl
adc
aad
dec
stc
xor
loopne
push
insl
ret
mov
mov
xchg
je
xor
push
jecxz
inc
insb
cmp
addr16
adc
sbb
test
inc
xchg
jp
jbe
aas
xlat
jo
decb
shlb
rcrb
lret
rcll
mov
mov
adc
decw
flds
aam
addr16
adc
lods
add
pop
xlat
data16
push
push
sub
mov
or
iret
cmpsl
sub
xchg
int
push
push
push
jl
xchg
nop
add
cmp
xorb
in
add
mov
das
aam
test
mov
mov
icebp
mov
in
mov
xchg
cli
jbe
or
xchg
mov
arpl
popa
push
icebp
push
mov
mov
pop
cmp
imul
les
mov
in
fs
fiaddl
xor
inc
jae
inc
dec
data16
pop
mov
cmp
fwait
dec
shrl
pop
pop
imul
xchg
mov
mov
mov
sub
pusha
mov
out
notb
add
je
stc
aam
xor
stos
dec
cmpsl
xor
push
adc
rol
xlat
cli
xchg
inc
sahf
and
leave
pop
fsubrp
sub
arpl
xchg
mov
bound
sbb
mov
jns
dec
mov
push
sbb
mov
adc
cmp
dec
out
inc
in
push
aad
jge
and
ror
out
mov
testl
adc
loopne
pop
imul
mov
cmp
jle
cld
nop
fildll
fsubs
popf
adc
mov
outsb
push
mov
ja
scas
pop
mov
test
hlt
cmp
loop
push
mov
fs
dec
cmp
fucomip
mov
inc
outsl
mov
mov
jbe
int
xchg
jae
jns
mov
mov
adc
popa
dec
ja
loope
and
or
dec
aad
push
imul
jg
jno
dec
dec
fadds
sub
jo
bound
adc
insl
mov
stos
mov
pop
js
pop
negl
jl
pop
shlb
xor
mov
insb
jbe
out
mov
test
cmpsb
mov
hlt
and
xor
or
sbb
es
xor
xor
psllw
inc
in
psrad
and
sub
aaa
dec
les
and
fnstsw
pushf
sbb
xchg
push
lods
cli
cmp
push
loop
sbb
out
stc
mov
and
out
add
mov
push
sbb
insb
sbb
fisttpll
add
cmp
and
ret
jmp
leave
addr16
jne
rcr
mov
pop
push
int3
sub
fwait
test
test
jbe
inc
fdivrl
es
stc
imul
mov
sub
stos
cmp
pop
dec
decb
andb
addr16
pop
int
sub
add
mov
xor
xor
scas
pop
jno
mov
popa
in
js
sbb
push
icebp
arpl
call
movsl
xchg
out
sub
out
xchg
std
or
dec
jle
pusha
enter
pop
xchg
pushw
rorl
jl
and
pop
das
inc
stos
ss
rclb
jnp
int3
aad
stc
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
mov
mov
and
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
jmp
lret
pop
idivb
addr16
push
into
mov
add
sahf
jnp
shlb
sti
test
movsb
std
inc
ficompl
push
pop
xlat
imul
icebp
xor
mov
loop
hlt
pop
roll
sub
push
xchg
xchg
sub
cld
jns
add
cld
arpl
xor
adc
jmp
data16
repz
popa
test
addr16
inc
xchg
cmp
repz
mov
adc
mov
scas
or
cwtl
dec
adc
sbb
sub
in
inc
ljmp
lret
push
mov
inc
sbb
xlat
rcrb
cmpsl
jno
mov
cld
aad
in
cmp
add
shlb
stc
test
cmp
pusha
call
mov
xchg
jno
jl
lret
sbb
or
mov
mov
cmp
pushf
fildll
data16
inc
xor
and
dec
adc
mov
hlt
scas
inc
push
xor
pop
dec
stos
add
pop
mov
mov
or
push
dec
decl
sbb
adc
push
xchg
mov
test
push
sahf
fists
daa
pop
sbb
mov
xchg
push
dec
sub
cmp
push
ret
fsubrp
arpl
mov
arpl
push
cld
nop
pop
inc
mov
fildl
jp
iret
fmull
or
push
mov
test
out
pop
loopne
test
int
xor
aad
fnsave
imul
jecxz
roll
fs
mov
addr16
cmp
repz
adc
dec
sbb
add
fwait
out
sahf
daa
mov
cmpsl
push
xchg
ret
mov
sub
jmp
fldt
movsb
xor
push
scas
jge
addr16
mov
xchg
cwtl
sahf
test
aam
adc
stos
jae
imul
sub
mov
into
jb
out
push
inc
hlt
in
loop
in
mov
sub
outsl
mov
subb
rorb
sbbl
lods
and
jae
daa
in
icebp
cmp
daa
inc
ja
shrl
cli
daa
or
cmpl
pop
and
shrl
mov
gs
mov
sbb
adc
lret
xchg
inc
enter
js
cli
cs
incl
mov
mov
rorb
out
cmp
bound
inc
cmp
insb
pop
pop
mov
inc
fnsave
icebp
stc
or
mov
das
das
cmp
jnp
sbb
mov
mov
int3
mov
insb
in
mov
sbb
inc
stc
cmp
jae
iret
mov
jbe
into
pop
add
pop
popf
das
cvtps2pd
cs
repnz
jl
and
dec
add
lret
mov
bound
jnp
fldenv
xor
push
pop
ds
pop
mov
pop
lcall
lcall
jle
vpcomud
stos
imul
push
xlat
push
das
in
dec
jecxz
lods
outsl
cmp
insl
cmc
cmp
imul
push
lret
js
adc
ja
adc
pop
loopne
dec
jge
movsb
daa
cmp
dec
mov
loop
stc
jno
in
popf
jno
pop
xchg
push
dec
icebp
in
lea
xor
addr16
rcll
ret
rcrb
sub
jecxz
int
cwtl
in
mov
pop
xchg
test
adc
mov
cmpsl
rol
fidivl
adc
mov
cmpsb
cmc
inc
negl
repnz
test
adc
mov
add
jmp
loope
cmp
rcrl
dec
icebp
cwtl
xchg
popa
icebp
pop
out
ret
sub
push
movsl
pop
cmp
lods
jmp
fbstp
push
lret
xchg
dec
sti
pop
add
xchg
mov
data16
mov
jecxz
int3
pop
loopne
popa
cmp
mov
movb
mov
mov
or
addr16
popa
pop
fstpl
jno
and
call
dec
adc
adc
lret
cmc
das
xchg
or
jmp
inc
mov
fimull
pop
adc
cmp
lcall
jp
leave
inc
and
adcb
gs
or
inc
dec
adc
and
push
jo
cmp
dec
daa
rorl
sbb
cmp
int3
jl
push
mov
lahf
data16
in
stos
mov
add
mov
add
xor
mov
aam
outsl
jmp
popf
lea
loop
mov
xchg
in
jl
and
mov
inc
push
out
push
into
xchg
xchg
add
push
sbb
pop
and
and
dec
repnz
enter
mov
icebp
sub
lds
add
sbb
push
push
pusha
inc
adc
out
and
fwait
mov
mov
xchg
mov
xchg
movsl
pop
cmc
ds
and
sbb
push
aad
dec
sbb
sahf
push
cmpsb
inc
jne
adc
and
pop
out
cmp
push
inc
loop
sbb
int
adc
cmc
cwtl
ret
cmp
ret
xrelease
mov
iret
iret
xchg
addr16
js
daa
aam
or
jle
stos
cs
push
rcll
push
xchg
fnsave
jo
das
push
or
mov
lcall
mov
mov
mov
adc
test
out
adc
push
stc
push
add
add
into
out
mov
jbe
push
enter
pop
dec
loope
lds
stc
lods
repz
out
inc
dec
test
pop
insb
mov
mov
data16
pop
rcr
mov
mov
push
fwait
jae
pop
mov
xchg
in
lods
cwtl
push
inc
dec
mov
mov
jmp
sbb
add
push
mov
add
inc
scas
sarb
cmpsl
daa
sub
shl
jge
rorb
scas
jmp
lret
test
dec
test
sbb
xor
or
pop
mov
nop
mov
mov
sub
sbb
data16
movsl
pop
sub
ja
in
fwait
mov
jno
add
mov
xchg
clc
push
lcall
mov
clc
aad
das
jmp
mov
xchg
mov
mov
int3
fisttpl
int3
outsl
push
scas
pop
cwtl
xchg
sub
pushf
test
adc
push
sub
icebp
pop
out
adcl
pop
adc
lret
jl
push
je
xchg
aam
sbb
push
and
pop
xor
andb
sub
in
das
mov
stc
push
push
lds
je
push
sarl
out
or
pop
jg
sbb
aas
inc
mov
lods
sahf
sbb
dec
jle
cli
pushf
mov
mov
inc
int
aaa
and
fs
clc
xchg
pop
test
ficomps
mov
pop
imul
es
dec
sti
daa
andb
sbb
xor
adc
cmp
or
loop
insl
xlat
xor
test
out
cmp
jo,pn
jmp
mov
mov
adc
lcall
cmp
jnp
cmp
mov
call
inc
sbb
jl
ss
sbb
shlb
sbb
sub
xchg
sbb
pushf
sbb
mov
mov
stos
jno
into
mov
xchg
je
popa
inc
mov
pop
test
sti
in
testb
and
daa
pop
insl
loop
adc
sub
jge
mov
jns
test
mov
xchg
cs
pop
clc
sti
repz
lea
sahf
mov
aas
pop
fldenv
int
or
or
push
out
cmp
sub
push
xchg
dec
xchg
xchg
push
xor
jne
mov
addr16
rorl
movsb
mov
add
or
mov
cmc
push
xchg
add
in
call
cld
out
lea
data16
pusha
movaps
jl
or
inc
in
dec
xchg
sub
sahf
push
pop
jb
scas
dec
cli
les
adc
icebp
divl
ja
cmp
in
add
mov
sbb
cmp
int3
sbb
push
mov
cs
ret
pop
jge
aad
pop
jnp
jl
pop
stos
aad
xchg
xchg
cwtl
pop
xchg
mov
je
inc
push
adcb
out
imul
mov
ja
dec
push
lahf
in
or
pop
popf
cmpsb
xchg
ss
scas
cwtl
outsb
mov
stc
ret
jbe
mov
sbb
fistpl
xor
push
and
cli
jnp
jg
movb
pusha
aaa
in
mov
fldl
sbb
push
inc
ljmp
mov
int3
inc
leave
dec
mov
std
and
gs
mov
repnz
inc
push
pop
add
test
movsl
lcall
mov
popf
mov
sub
cmp
movsl
jae
or
add
inc
outsb
fldenv
sbb
push
lock
ss
mov
mov
push
push
pop
in
xchg
fnstsw
dec
cmp
in
popf
lea
pop
sbb
js
fsub
mov
dec
jg
fdivs
imulb
add
js
jle
pop
xchg
pop
mov
push
jg
or
jb
ret
push
inc
or
sub
ljmp
or
int3
push
pop
popf
imul
stc
movsb
dec
or
fidivs
mov
inc
in
clc
fs
aaa
jle
sti
xorl
into
cmp
xor
out
sti
push
mov
std
loope
pusha
mov
das
jbe
loopne
lea
fidivrs
test
cmpsl
into
loopne
mov
sbb
out
or
xchg
ja
fldenv
pop
jno
inc
dec
pop
xchg
adc
or
jge
pop
cmpsb
cltd
xor
ret
popa
sbb
add
push
sbb
inc
lea
scas
pop
mov
ja
leave
shlb
mov
sbb
scas
cltd
mov
ja
dec
das
ja
mov
movsb
ret
enter
ret
push
cmp
lock
sti
sub
xlat
inc
lahf
repz
xor
add
into
lret
hlt
xchg
and
je
push
jmp
lods
fdivrl
jns
sub
dec
or
add
dec
mov
or
sbb
decb
icebp
sbb
mov
inc
inc
mov
adc
scas
nop
cmp
mov
push
inc
inc
mov
fsts
xchg
in
inc
jns
mov
je
xchg
addb
addr16
int
pop
test
push
fidivs
lods
pop
cmp
mov
sti
notl
gs
lret
add
dec
das
xor
xchg
mov
std
xor
clc
mov
dec
sarl
es
rcll
nop
ja
cltd
popf
sbb
and
push
jne
cs
pop
loope
rsqrtps
movsl
sbb
pop
aas
xor
pop
push
stos
and
mov
es
lds
or
jno
xor
sahf
jle
fdivr
dec
dec
pop
test
xor
mov
push
stos
adc
std
sbb
and
inc
insb
cmp
xor
push
in
pop
mov
stos
xchg
adc
mov
adcb
popf
mov
mov
jno
sbb
xchg
pop
xor
imul
and
add
mov
add
pop
cmp
mov
js
into
fisttpl
add
sbb
aaa
push
mov
push
push
js
flds
insl
xchg
dec
jmp
adc
mov
testl
sub
push
lret
lret
xchg
cmp
fwait
aam
lods
cli
insl
cmpb
xor
add
xor
mov
adc
stos
loopne
lret
outsb
leave
xor
push
pop
pop
sub
add
jo
fidivl
leave
xchg
stos
stos
jno
imul
fists
lret
cmp
jecxz
stos
shlb
rcr
jno
xchg
push
daa
xor
jb
pop
loopne
xlat
push
stc
cmp
aam
icebp
mov
arpl
aas
nop
lret
popa
ljmp
or
stos
xor
push
or
mov
jle
mov
xor
fisubs
addl
bound
dec
shrl
xchg
shlb
je
dec
inc
pop
lea
push
push
gs
cmp
lds
add
sbb
push
in
pop
inc
add
inc
dec
add
in
adc
cmp
inc
push
addr16
sbb
fwait
es
jge
fbstp
jns
loope
xlat
nop
xchg
mov
sub
mov
arpl
lret
enter
add
pop
insl
notl
mov
cld
dec
test
cmp
sub
aas
stos
mov
pusha
xchg
pop
jle
rcrl
sub
and
push
dec
jbe
mov
cmp
push
iret
inc
sti
or
xchg
cld
lcall
push
xchg
in
ljmp
push
mov
rcrb
and
call
or
int3
inc
rcll
xor
lret
xor
jbe
lea
push
out
fmull
xchg
cld
ret
and
jge
addr16
neg
lock
cwtl
fldt
lret
call
imul
aam
mov
aam
stos
pusha
add
mov
mov
outsb
or
insl
test
icebp
pop
fiaddl
xor
cmp
mov
push
je
cmp
in
inc
inc
pop
data16
lods
dec
rclb
add
popl
xchg
cmp
push
psllw
and
repnz
or
sarl
lock
andb
stos
cmpsb
out
inc
inc
adc
into
mov
lcall
insb
pop
jle
and
or
inc
lret
fistpl
test
jp
xor
das
xchg
cmpsb
adc
repnz
inc
inc
pushf
lea
push
push
sbb
inc
jp
repnz
inc
sub
aas
adc
inc
adc
push
cltd
ds
xor
and
repz
push
lret
jo
test
sub
dec
orl
mov
js
adc
and
pop
mov
mov
leave
stc
pop
test
icebp
mov
mov
inc
or
cmpsl
add
mov
jno
push
or
xchg
pop
fidivs
cmp
cmc
sub
movsl
in
jno
mov
cmp
ds
cmp
in
fiaddl
mov
xchg
hlt
or
ss
dec
out
mov
shrb
jne
xor
fidivrs
gs
adc
cmovle
jne
mov
bnd
nop
sti
dec
push
xchg
arpl
popa
aas
xchg
pop
mov
lds
mov
sub
fnstenv
or
int3
xor
adc
imul
jg
jae
bound
sub
popa
push
jae
add
push
xchg
mov
or
inc
bnd
addr16
push
push
pop
mov
dec
fstpl
adc
dec
xchg
push
hlt
out
outsl
push
dec
dec
out
sub
movsl
aas
je
jo
push
test
sbb
subb
jge
xor
xor
stos
pop
inc
loopne
insl
mov
cmpsl
jp
das
jae
cld
pop
inc
shrb
icebp
mov
jns
scas
jb
daa
in
mov
fnstsw
out
addr16
andl
add
sti
rcrb
cmp
out
aaa
movsl
loope
xchg
dec
xlat
jg
das
out
hlt
pop
popa
inc
pop
push
mov
icebp
and
cltd
movsl
mov
lock
inc
dec
mov
gs
jnp
pusha
add
push
pop
fwait
pop
aam
jmp
add
cs
bound
cmp
mov
bswap
xchg
push
cmp
loope
scas
xor
out
push
xor
mov
loope
mov
nop
or
orb
cmpsb
adc
xor
jmp
cli
pop
cmc
aad
in
mov
mov
mov
nop
fldlg2
outsb
sbb
or
push
xor
rcrb
and
rol
enter
add
mov
mov
and
sbb
out
jmp
sti
ja
cmp
mov
push
cmpsl
sbb
add
pusha
mov
je
dec
dec
repz
inc
insb
or
pushf
insl
outsb
add
nop
pop
xor
js
and
dec
xlat
push
dec
icebp
clc
cmp
or
js
loopne
aam
ljmp
jne
rcl
xchg
inc
out
aam
loop
or
push
out
mov
popa
dec
leave
scas
decb
lock
das
aas
and
mov
or
push
mov
dec
call
insl
mov
test
mov
pusha
inc
sub
cmpsl
imul
aas
and
add
xchg
aam
pop
jp
mov
lcall
mov
test
adc
leave
mov
imul
pop
fs
push
push
jmp
cmpsl
and
push
sub
fisubrl
jno
dec
ret
insb
jg
ret
push
sbb
nop
insl
push
xchg
por
sub
repnz
test
ret
and
adc
jp
aas
push
xchg
pop
mov
sub
aad
into
mov
dec
inc
xchg
sub
push
out
xor
jl
mov
and
ss
cli
mov
jns
loopne
jo
sub
rcl
fcomip
push
in
js
ret
and
imul
or
jnp
jae
cmp
rol
dec
xchg
adc
shll
ss
sub
pop
or
jno
or
popf
sub
pop
push
lds
mov
cmpsl
repz
shrl
inc
decb
cmp
in
sbb
cmp
pop
dec
inc
jo
mov
pushf
dec
jne
or
roll
call
fisubl
jl
in
jno
rolb
mov
aam
in
sbb
add
jl
js
dec
in
sbb
fsubl
mov
bound
cmpsb
out
mov
imul
aaa
xor
push
nop
in
mov
int
sbbb
push
jb
out
sbb
push
rolb
aaa
pop
dec
push
lret
cmp
adc
pop
sub
aas
sbb
sub
mov
in
inc
es
inc
shl
push
call
shlb
or
lock
sub
insl
push
mov
lret
rcrb
sub
out
int
xchg
mov
stos
adc
imul
push
or
je
cmp
add
iret
jns
xlat
outsb
or
adc
jl
pop
pushf
daa
and
sub
pop
fdivp
in
sti
push
insl
and
iret
out
hlt
cwtl
sti
test
xchg
or
or
sub
jle
xchg
es
adc
pmovmskb
ret
out
adc
aas
push
jle
fldl
jmp
aad
adc
mov
bound
adc
psrlq
push
and
fcmovb
and
fs
xchg
mov
js
cld
fimuls
sahf
jno
pop
sbb
pop
fsubrl
and
mov
testl
cltd
mov
movsl
inc
test
mov
xor
xchg
inc
lock
int3
std
xor
and
movsl
push
int3
orb
pop
sbb
dec
jne
idivb
jns
jb
pop
dec
push
movsb
jmp
push
push
mov
psubsw
fsubrs
lahf
or
add
test
mov
xchg
es
in
lcall
popf
fwait
rorb
test
pop
xlat
stos
or
push
ror
sub
and
xor
in
pop
mov
divl
loopne
in
int
mov
push
dec
jo
dec
adc
dec
or
mov
mov
jne
dec
lret
out
and
lahf
aam
dec
int3
cld
jno
jmp
outsl
lock
sbb
sbb
xchg
icebp
pushf
fcmove
inc
mull
push
jo
jg
inc
pop
and
push
mov
loopne
cs
add
cmc
jecxz
ss
daa
fndisi(8087
adc
jge
or
repz
cmp
jns
mov
bound
pop
sub
test
pop
jmp
int3
mov
add
add
sub
test
test
sahf
sub
adc
lret
adc
xchg
cmpl
inc
jl
pop
sahf
xchg
mov
aad
inc
mov
push
push
dec
dec
inc
jb
push
popa
or
repz
adc
roll
fidivrs
add
sub
cmpsb
dec
lds
add
pop
cs
cltd
pop
push
jle
jbe
out
jmp
sbb
mov
mov
jp
sub
push
test
lods
int3
cwtl
sbb
push
repz
xchg
loop
or
inc
scas
jp
jno
insb
and
ret
jbe
xchg
dec
outsl
outsb
loop
xchg
sub
out
xchg
insb
pop
add
outsl
aaa
scas
xchg
push
pop
sti
insl
sbb
lds
xchg
xchg
sub
sbb
pop
pop
mov
cmpl
add
sbb
push
mov
mov
fdivrl
sub
das
mov
fcoms
jp
loopne
lock
jmp
mov
push
test
call
aam
aam
add
sub
stos
ficoms
sub
adc
fildll
push
data16
js
leave
inc
push
mov
adc
aas
cltd
dec
mov
or
movsl
insl
push
inc
adcl
insb
pop
adc
xchg
repnz
add
mov
mov
pop
stos
or
hlt
movl
or
lcall
xlat
mov
sti
int
rcll
in
xchg
jno
addb
add
test
sbb
xor
loop
jp
dec
mov
push
sub
or
fmuls
insb
cmp
push
movsl
push
sub
add
adc
push
loopne
je
pop
scas
bound
push
cmp
loope
subl
ja
sub
fisubs
dec
pop
inc
lods
call
xchg
jg
push
or
pushf
xchg
mov
outsb
xor
pushf
les
cli
adc
outsb
push
mov
fwait
int3
lcall
and
mov
xchg
add
pop
xchg
sbb
stos
push
mov
aad
pusha
inc
mov
jecxz
sub
xor
jno
xchg
push
lock
and
inc
ret
leave
roll
icebp
loope
xchg
fldl
sub
lret
sbb
push
jge
daa
dec
cmc
pop
clc
xlat
jmp
xchg
pop
sub
or
dec
sub
fsubrl
scas
in
push
or
jg
push
rcr
lds
fdiv
pop
mov
xchg
dec
mov
adc
push
mov
aaa
pop
andb
push
call
mov
and
jne
dec
cld
sub
cmp
adc
cmp
jne
test
sbb
adc
or
imul
dec
ss
fs
stos
and
imul
lret
pop
add
push
mov
mov
mov
fisubl
pusha
push
xorb
sbb
sbb
sbb
mov
adc
sbb
sbb
in
pop
in
adc
repnz
mov
dec
fsubrl
mov
jg
inc
xchg
fsubr
xlat
xchg
jno
mov
mov
xchg
and
aaa
pop
and
jge
gs
lret
daa
sbb
and
xchg
or
push
addb
pop
loop
pop
pusha
pusha
push
mov
cmpsb
sbbb
push
push
ficoml
xor
cli
pop
aam
cmpsb
in
inc
jge
add
stos
sbbl
out
in
push
enter
cld
jp
shll
push
mov
inc
data16
add
clc
jae
js
or
fnop
test
cmpsb
outsb
dec
mov
xchg
mov
bound
es
fsub
aad
cmp
shll
clc
inc
jg
ret
mov
pop
push
or
mov
int3
pop
in
pop
push
rcrb
adc
xchg
sub
ljmp
data16
and
sbb
das
notb
jb
lahf
mov
jmp
push
lea
jl
jl
inc
movsb
inc
push
stos
ret
jg
xor
sbb
mov
mov
leave
mov
outsb
sbb
test
mov
cmpsb
lahf
into
sbb
nop
lods
adc
pop
inc
loope
mov
enter
cs
sub
add
imul
sub
cmp
jb
push
mov
in
daa
std
test
jmp
jne
xchg
hlt
in
adc
push
insl
dec
push
ljmp
stc
ret
sti
repz
std
int
scas
mov
inc
shll
scas
fadd
test
adc
xor
and
lahf
cmp
jp
sub
pop
mov
pusha
push
pop
adc
loope
jns
dec
jb
mov
pop
adc
push
add
popa
popf
test
push
out
jecxz
loop
sub
xchg
sub
adc
dec
dec
sbb
movsl
inc
ss
ljmp
hlt
aaa
sbb
imull
popl
inc
or
jg
nop
les
mov
dec
cmp
and
psrld
dec
adc
jno
lcall
cmp
data16
xor
xchg
and
outsb
mov
mov
xlat
mov
pop
xchg
lret
popf
ret
cmpsl
lock
lea
add
ret
lcall
test
mov
mov
and
dec
jb
xor
and
imul
dec
aaa
xchg
cmpsl
idivb
jge
lea
sub
lret
imul
shrl
data16
ret
jb
xchg
ljmp
push
and
lcall
out
sub
daa
mov
jbe
fiadds
adc
mov
adc
push
cmp
cmpsb
das
lahf
pushf
int3
push
push
out
mov
pop
sub
dec
adc
adc
ss
xor
dec
mov
sub
add
dec
ljmp
cmpsl
jge
loop
stos
jnp
orl
add
mov
xor
sbb
pop
or
insl
xchg
xchg
xlat
mov
ret
mov
cmp
fidivl
xor
in
cld
or
mov
bound
inc
in
xor
or
rclb
inc
repz
cmp
jge
int
adc
ds
insl
mov
pop
mov
pop
imul
popa
stos
dec
aas
dec
push
iret
jbe
mov
jno
popf
cli
mov
add
add
sub
push
adc
xor
fwait
xchg
and
insb
mov
or
inc
xor
ret
add
or
ficoml
sub
mov
mulb
in
lods
adc
inc
or
cmp
push
push
in
inc
rolb
fmuls
and
orl
cmp
mull
rcll
push
xor
add
push
push
loope
xor
movsl
in
ds
pop
pop
sbb
incl
or
lahf
shrb
lock
jmp
cmp
pop
in
outsl
mov
stos
stc
push
fimull
jnp
sbb
or
sti
and
jg
js
cltd
cmp
push
dec
mov
sbb
jb
sub
xor
stos
clc
bswap
fsub
cmp
xchg
pop
add
arpl
lahf
xlat
jnp
sahf
add
movsl
cli
cmp
out
jno
or
adc
push
xlat
lods
add
les
mov
mov
jo
sub
push
pop
xor
xchg
imul
fwait
jp
xchg
inc
jg
and
sub
icebp
dec
int
loopne
ret
cld
nop
cmpsl
icebp
stc
inc
pushf
aas
jne
push
jge
notl
mov
pop
fiadds
out
fildll
jne
lea
adc
inc
mov
dec
adc
cmp
adc
mov
lret
addr16
xchg
xchg
xor
mov
mov
adc
repnz
lds
push
jbe
mov
mov
dec
jae
jae
sbb
test
in
add
maskmovq
divl
call
cmpsb
adc
sbb
or
add
cmp
add
pushl
call
fildll
xor
enter
movb
cmp
adc
scas
dec
dec
push
shrl
sti
mov
dec
or
arpl
jg
mov
test
loop
push
mov
and
ret
in
ds
inc
pop
jmp
ret
test
cltd
add
out
fisttpll
outsb
or
mov
xchg
imul
jmp
pop
sbb
sbb
push
jae
out
push
cwtl
cwtl
sbb
outsl
push
je
sub
mov
inc
mov
aas
mov
out
mov
sti
lods
inc
loopne
call
mov
insl
or
cmp
inc
fistps
mov
mov
cmp
sbb
lods
mov
sbb
push
mov
fldcw
jae
add
xor
les
cwtl
out
les
ret
or
mov
mov
cld
sbb
insl
sub
dec
in
dec
loope
cmc
movsb
in
out
inc
xchg
rolb
sub
push
mov
loopne
outsl
inc
cltd
mov
mov
jae
sub
xchg
sub
cwtl
subb
ret
mov
dec
es
fidivs
adc
mov
rolb
jo
jbe
push
push
mov
shll
xor
jmp
or
pushl
hlt
out
aas
xorl
or
addr16
jne
adc
les
jge
cli
or
out
test
sbb
sbb
neg
sbb
mov
push
into
jnp
cmp
data16
inc
add
pop
xchg
shl
fisubs
fstp
std
push
imul
test
out
add
iret
mov
sub
inc
jmp
sti
aas
lock
mov
scas
jb
outsb
out
push
jle
fimuls
sbb
jnp
dec
inc
insb
fidivrs
out
sbb
xchg
mov
fldenv
cmp
scas
dec
nop
pop
push
jge
aam
arpl
mov
jns
inc
or
xor
je
pop
aas
popf
add
rcrb
lock
sbb
cmp
sbb
push
jg
dec
aam
xchg
ss
xchg
ds
movlps
out
jmp
jae
mov
mov
cmpsb
cld
pop
fidivl
fmull
sbb
xchg
lods
jne
loop
mov
jae
loope
enter
and
push
test
push
lea
out
loope
jbe
mov
les
cmp
lret
jbe
sbb
cmp
or
aas
adc
aad
xorl
fdivrs
xchg
dec
fstpt
xchg
sbb
mov
mov
cltd
jo
xchg
cltd
push
mov
movsb
aad
js
inc
mov
call
rcrb
push
jno
dec
sbb
dec
das
loopne
xor
std
ffreep
xchg
xor
push
movsl
cmpsb
repnz
mov
dec
fnstenv
push
movsb
stc
inc
inc
shrb
insb
add
out
fiaddl
daa
lret
bndstx
jb
push
les
adc
pop
mov
dec
lcall
or
into
mov
xchg
bnd
dec
fs
popf
jmp
into
dec
jnp
stc
repnz
orl
xchg
push
xor
xor
and
stc
fbstp
xchg
in
xor
loopne
add
xchg
lock
mov
jb
aas
rcr
call
add
mov
inc
pop
lret
push
ljmp
pop
les
xlat
les
cld
imul
xor
rorl
push
mov
orb
mov
cwtl
add
mov
in
lret
mov
in
and
dec
cltd
loope
inc
idiv
roll
nop
repnz
dec
cmc
xchg
leave
ret
inc
or
out
das
pop
rclb
or
pop
fs
sub
pop
faddp
mov
xchg
hlt
cltd
daa
fimuls
and
xchg
mov
push
cli
pop
mov
jmp
fstpt
daa
decb
cmp
sbb
add
jb
or
mov
aam
xor
gs
xor
jp
jge
pop
rcrb
je
js
jne
adc
push
jp
popa
mov
mov
orb
and
adc
xor
push
add
insl
or
lcall
add
gs
add
inc
lods
aam
dec
repnz
in
xchg
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
xor
mov
add
cmp
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
sub
mov
push
movl
push
movl
push
movl
movb
cmp
je
xor
movl
jmp
mov
movl
cmp
jne
mov
push
adcl
push
call
sbbl
test
movl
je
push
andl
push
call
andl
push
subl
lea
adcl
push
xorl
call
add
movl
or
mov
adc
mov
movl
dec
lea
andl
xor
add
inc
mov
cmpl
jle
jmp
push
pushl
push
call
cmpl
jb
mov
adc
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
or
or
mov
mov
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
mov
sub
xor
addl
mov
orl
add
movl
mov
not
mov
cmp
jne
neg
mov
mov
xorl
mov
xor
addl
add
addl
mov
mov
xor
add
mov
mov
subl
xor
add
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
pushl
call
jmp
mov
mov
mov
sbbl
mov
movzwl
sub
mov
mov
mov
mov
addl
mov
subl
mov
movl
mov
add
mov
xor
add
jmp
mov
cmp
jne
mov
cmp
movl
jne
push
xorl
push
call
orl
test
movl
je
mov
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
adcl
push
incl
push
call
test
movl
je
sub
mov
sbbl
mov
addl
xor
adcl
lea
push
mov
andl
xor
xorl
lea
push
xor
mov
pushl
xorl
call
xor
xor
mov
sub
sub
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
call
jmp
mov
add
xor
xor
lea
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
xor
xor
add
andl
mov
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
mov
adcl
xor
movl
lea
movl
mov
movl
cmp
movl
jbe
and
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
sbb
mov
mov
mov
mov
decl
sub
xor
movl
mov
lea
movl
mov
lea
movl
mov
mov
movl
cmp
jne
mov
movl
cmp
movl
jne
push
sbbl
push
sbbl
call
orl
test
je
movl
mov
cmp
movl
jne
movl
mov
cmp
jne
addl
push
push
call
test
movl
je
mov
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
push
addl
push
call
test
movl
je
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
jne
xorl
push
push
call
orl
test
je
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
jne
xorl
push
push
addl
call
andl
test
je
mov
movl
cmp
jne
movl
mov
movl
cmp
jne
push
push
call
subl
test
je
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
jne
addl
push
sbbl
push
addl
call
test
je
mov
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
sbbl
push
orl
push
adcl
call
adcl
test
movl
je
movl
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
subl
push
push
movl
call
test
je
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
adcl
push
adcl
push
call
subl
test
movl
je
movl
mov
movl
cmp
jne
movl
mov
movl
cmp
movl
jne
push
push
sbbl
call
subl
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
jmp
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
movl
cmpl
je
cmpl
jge
jmp
push
call
mov
dec
mov
jmp
mov
mov
or
movl
sbb
mov
sbb
push
mov
incl
xor
sub
mov
adcl
push
mov
xorl
add
movl
cmp
je
andl
xor
add
inc
mov
cmpl
ja
jmp
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
xor
xor
or
mov
andl
xor
addl
xor
adcl
add
add
adc
andl
xor
xorl
mov
push
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
add
adc
xor
xor
cmp
jmp
pop
popf
cwtl
jo
jp
mov
cmp
adc
jnp
sahf
jnp
ja
pop
scas
cld
sub
cli
dec
cmp
and
aad
es
sub
repnz
mov
inc
gs
mov
add
or
inc
jmp
jne
mov
movsb
out
out
scas
subl
notb
stos
sbb
mov
xchg
mov
adc
sbb
daa
dec
movsb
out
lods
xor
push
pop
fs
mov
fucomi
repnz
xlat
out
sub
xor
pop
jns
jmp
mov
ds
add
xor
mov
and
sbb
xchg
outsb
sub
cs
orl
pop
push
sub
push
imul
ljmp
jnp
adc
aam
ljmp
lcall
std
mov
ss
xchg
lret
ret
out
cmp
pop
testl
mov
pop
leave
or
and
icebp
in
repz
aam
loop
ljmp
push
mov
cmp
pop
adc
inc
arpl
cmp
xchg
popa
cmpsl
push
in
cs
insb
jecxz
call
mov
sub
outsb
lcall
adc
adc
jecxz
sub
jb
dec
lcall
out
mov
or
arpl
cmp
jb
test
sbb
in
pop
cmpsb
icebp
int
bswap
popa
push
sbb
push
push
stc
es
xor
jbe
add
in
xchg
inc
repnz
xchg
dec
call
hlt
testb
mov
and
shl
icebp
sub
xchg
jp
mov
scas
adc
jmp
test
mov
xchg
lcall
cld
xchg
sti
xchg
fsubs
repnz
and
out
imul
and
dec
sub
test
push
xor
inc
pop
fwait
sub
push
pop
or
pop
add
inc
push
pop
xlat
scas
pop
icebp
push
sub
testb
mov
in
adc
js
mov
aaa
mov
je
movsl
jecxz
dec
mov
nop
sbb
jbe
aaa
dec
mov
inc
xchg
lret
push
cs
hlt
mov
in
adc
cmp
int3
sub
repz
xchg
push
sahf
lds
dec
or
inc
push
xchg
popa
push
add
test
data16
mov
scas
jge
dec
inc
pop
adc
inc
sti
imul
fimull
mov
xor
imul
jmp
push
pop
jne
xor
adc
addr16
mov
in
mov
mov
icebp
mov
inc
cltd
xor
adc
push
dec
add
daa
adc
push
add
sub
sbb
dec
and
in
cmpsb
mov
outsb
dec
adc
cmp
cltd
in
push
jns
cmp
jne
xlat
ss
xchg
outsl
in
jbe
xor
rorl
xchg
lcall
fistps
cltd
mov
lret
mov
mov
xor
int3
insb
pop
int3
or
and
dec
cmp
mov
fsubrs
and
aas
add
fildl
fidivrl
mov
push
scas
cmp
lock
stc
pusha
cwtl
sbb
push
cmp
call
neg
ret
mov
cmp
and
imull
out
inc
mov
lods
stos
dec
inc
cld
mov
mov
rorb
rolb
jns
das
pop
in
adc
jo
push
sbb
push
dec
push
push
lods
cmp
outsb
loopne
clc
pop
fnstenv
xor
jmp
aaa
and
or
dec
gs
inc
divl
lahf
or
mov
sub
movsl
cltd
insl
mov
push
call
arpl
int
pop
call
in
lahf
subb
or
push
andb
das
push
cs
sbb
and
imul
jle
inc
scas
insb
rorb
pop
xchg
inc
xchg
push
inc
sub
push
int
sarb
and
sahf
add
jge
sub
inc
in
insb
dec
shrl
cli
clc
mov
xchg
adc
mov
inc
ds
andb
and
and
xchg
cmpsl
jecxz
movsl
lcall
cmpsb
dec
add
mov
and
mov
icebp
adc
dec
xchg
pop
inc
inc
into
sub
inc
push
or
loop
sar
xchg
loop
jle
arpl
xchg
out
push
inc
mov
jl
jg
mov
cmpb
adc
rcl
fbld
inc
mov
inc
and
or
test
movsl
xchg
cmp
pop
pop
sbb
cmp
xchg
ret
pop
mov
pusha
orb
std
pop
loope
xchg
lahf
test
loopne
filds
cli
pop
sbb
pop
in
sbb
lock
mov
xlat
adc
mov
push
lds
in
or
inc
mov
aaa
ja
adc
movsl
fistpll
inc
push
std
mov
arpl
int
cmp
in
jg
enter
pop
adc
outsl
xchg
sub
dec
sub
or
mov
stos
lea
movsb
cmpsl
mov
fsubr
cmp
cld
roll
rolb
ja
pop
sti
imul
je
int
mov
add
aas
ret
or
popa
lcall
jge
stos
std
ss
pop
sub
ja
pop
adc
push
push
test
push
xchg
lds
mov
insl
bound
cltd
out
andb
mov
cmp
test
shld
gs
push
jmp
enter
push
inc
mov
xchg
stos
jns
mov
lahf
pop
flds
shrl
fsubs
push
push
pop
push
das
mov
pushl
lcall
push
jp
fnstsw
in
pop
xchg
adc
jo
adc
jnp
cmc
out
flds
out
push
inc
cmova
in
xchg
test
dec
shll
and
notl
test
mov
cmpsb
dec
lods
and
mov
cli
cmp
in
outsl
movl
jae
aam
or
add
test
push
xchg
pop
xorl
mov
cmpsl
dec
aad
xor
out
sub
test
lods
xor
pop
enter
scas
sub
or
int3
push
dec
pusha
pop
mov
xchg
ret
imul
or
pop
test
cmp
stos
dec
inc
popf
int3
fs
insl
int
inc
ljmp
mov
clc
imul
mov
mov
sbb
jg
pop
cmpsb
mov
push
or
and
mov
nop
insl
push
or
fucom
pop
test
dec
and
jo
adc
jbe
mov
add
mov
jg
inc
cwtl
ror
dec
add
arpl
fmull
mov
or
inc
loopne
mov
dec
push
xorl
pop
xchg
jnp
into
cwtl
test
lcall
cmp
dec
and
lock
and
in
xchg
icebp
sti
sbbl
pusha
xchg
lock
sbb
lea
pop
adc
sbbb
ljmp
cmpsb
mov
sub
adc
mov
rcl
sbb
nop
std
and
mov
sarl
pushf
xor
sbb
in
loope
in
xchg
addr16
aad
fs
xorl
idiv
push
adc
pop
aad
sub
mov
das
cwtl
inc
pop
push
loopne
es
pop
jge
and
repnz
call
sahf
mov
and
add
test
inc
xchg
lahf
lods
mov
stos
dec
int3
jg
cmpsl
les
fidivrs
xchg
xor
pop
jns
sahf
xchg
xor
icebp
test
jl
es
in
sub
mov
mov
movsb
loop
sub
xchg
mov
int
and
mov
cmp
mov
leave
das
add
cli
clc
add
adc
mov
repz
fs
stos
lea
sti
subl
mov
js
stos
stc
inc
addr16
dec
mov
scas
dec
xchg
ret
inc
inc
lret
lock
dec
ss
xor
cmpsl
gs
data16
dec
mov
adc
inc
jmp
std
cmp
jae
pop
mov
jo
out
mov
repnz
iret
ds
clc
jns
push
clc
adcb
lock
sub
and
insl
outsl
xchg
cmp
cltd
add
sbb
dec
mov
cmp
push
lea
jmp
js
imul
sbb
xchg
es
aad
fldcw
sub
push
dec
jp
xchg
jp
aaa
adc
loop
enter
dec
xchg
popf
inc
xlat
sub
test
push
inc
rol
sub
mov
push
sub
xchg
add
enter
dec
pop
inc
mov
sub
lea
push
xchg
lods
fs
mov
sbb
or
fsubrp
xor
pop
fwait
mov
inc
push
in
cmp
outsl
push
sub
lods
movsb
out
mov
js
icebp
bound
xor
insb
shl
std
insl
pop
or
xchg
push
fs
setl
and
xor
shl
xor
fisttpll
sub
mov
sahf
sbb
outsb
insb
xchg
jbe
xor
sarb
mov
push
rorl
add
inc
cltd
fsubrs
iret
clc
jnp
nop
or
inc
out
adc
lahf
adc
adc
dec
push
mov
out
cld
cltd
sahf
add
es
jno
mov
repz
fcoml
xchg
dec
jbe
pop
loop
or
and
lcall
imul
mov
mov
pop
dec
mov
icebp
and
inc
pop
mov
and
xor
or
es
out
add
jmp
adc
pop
pop
cs
and
pop
repz
xor
icebp
in
lock
jl
and
ret
fisttpll
mov
xlat
mov
sub
les
shlb
addr16
push
mov
mov
rclb
test
decl
inc
mov
out
testb
jno
xor
jp
xchg
add
sahf
nop
mov
rcll
or
mov
addb
sahf
push
xor
rcrl
fpatan
and
sbb
push
sbb
inc
cmp
jl
sbb
mov
xchg
sbb
test
rclb
in
jp
arpl
sti
lock
mov
cmpsl
pop
dec
fidivrl
push
cwtl
icebp
fs
cwtl
add
pushf
dec
xchg
into
roll
push
pop
rcl
adc
cmp
test
lea
or
push
pop
jle
inc
mov
pusha
lds
inc
mov
ljmp
test
ret
push
adc
sbb
pop
mov
sub
push
test
repz
aam
lds
fisubrs
sbb
in
xlat
mov
ja
or
cs
cmp
mov
jae
popw
and
dec
sbb
mov
mov
or
fwait
push
and
ja
xor
and
or
push
cmp
jl
cli
jge
mov
lea
pop
adc
jnp
and
aad
andl
subb
inc
sbb
repz
and
jge
mov
call
aad
aad
xor
out
rolb
mov
lods
xchg
mov
sbb
mov
imul
lret
sbb
xchg
insb
dec
dec
lock
lods
sub
fs
mov
mov
xchg
mov
and
daa
imul
insl
out
jo
adc
les
scas
and
repnz
lds
jl
mov
and
add
mov
rcll
ss
daa
and
sarl
sbb
inc
loop
xlat
popf
add
cvtps2pi
test
xchg
push
or
mov
add
and
imul
loopne
or
ljmp
xchg
lret
repnz
pusha
jnp
adc
cmp
jnp
sub
jmp
xchg
push
mov
fwait
ljmp
or
imul
popf
sbb
inc
and
xchg
push
iret
or
in
pop
loop
dec
mov
xchg
lock
ret
jno
stos
mov
pop
test
xchg
cmp
dec
pop
jmp
outsb
negb
cmp
mov
pop
mov
sbbb
fistps
out
push
mov
daa
shll
sbb
mov
repnz
mov
cmc
imul
pop
push
hlt
cmp
mov
xchg
sub
popf
or
popa
fbld
mov
cmpl
icebp
mov
mov
int3
pop
test
rcrb
sub
add
mov
ret
in
jno
inc
nop
push
xlat
insl
cmp
std
cmpb
sbb
xorb
lcall
stos
insb
iret
daa
dec
xor
or
lahf
mov
adc
inc
movsb
mov
sbb
add
cmp
into
cmp
mov
mov
orb
dec
push
pop
ret
mul
adc
addr16
push
xchg
pusha
xor
ss
ds
push
and
in
mov
inc
outsl
xchg
imul
lret
mov
xchg
ljmp
or
jno
pop
pop
out
ret
fs
scas
cmpsl
dec
xor
or
icebp
and
mov
bnd
test
in
dec
xlat
sbb
pop
jnp
or
inc
dec
imul
test
xor
jne
sbb
imull
inc
test
mov
lods
shll
aaa
cltd
mov
repnz
icebp
mov
mov
push
or
fiadds
lcall
jb
pop
jge
push
insl
sbb
cmpsl
cs
jns
fsts
cltd
sub
dec
int3
pop
sub
out
mov
test
pop
fmuls
sbb
xor
outsb
mov
lods
aad
pop
lods
jnp
push
loop
in
lock
sub
push
scas
jl
shlb
mov
jecxz
lds
sub
dec
or
test
pop
jl
mov
mov
mov
pop
aad
int
sbb
add
pop
rorl
cs
lds
movsl
sub
mov
dec
ja
xchg
popa
insb
es
in
pop
sbb
push
lret
dec
dec
aad
sti
and
out
jmp
fdiv
ljmp
push
xchg
xor
cmc
shlb
inc
dec
inc
lds
fmul
cld
data16
push
jne
xchg
jb
stc
and
sub
cmp
push
rolb
pop
dec
fisubrs
jo
push
sub
add
ja
xor
mov
mov
mov
mov
sub
leave
out
lock
ljmp
add
aad
mov
mov
lcall
test
sbb
sbb
pop
js
add
inc
fldcw
mov
sbb
mov
lock
aad
shlb
adc
pop
into
lods
ja
mov
push
loope
cmp
loop
out
push
mov
cmp
push
jl
pop
adc
loop
test
and
xor
sbb
inc
jmp
push
jecxz
mov
pop
inc
sbb
xchg
pop
xor
sbb
sbb
xor
fmull
mov
shl
mov
enter
sub
jae
icebp
lods
adcl
dec
outsl
pop
mov
hlt
adc
sbb
push
fstps
push
scas
jae
lods
mov
out
mov
add
push
cmp
sahf
sahf
fcoms
nop
jnp
fdiv
jmp
dec
xchg
xchg
inc
pop
and
mov
das
test
movl
ret
ja
int
sbb
adc
ret
xorl
and
out
push
ret
xchg
mov
lret
cmpsl
and
xor
mov
leave
and
push
inc
out
xchg
cmp
jecxz
xor
jbe
add
mov
add
jbe
test
push
and
push
popa
mov
mov
mov
xlat
arpl
call
and
pop
jmp
cmp
fisttpl
movsl
fdiv
mov
shll
xchg
push
mov
adc
in
addb
cld
int3
fmull
adc
divl
cli
jle
push
out
jne
pusha
add
notl
jnp
ja
fidivrs
inc
movsb
xor
cs
fwait
les
out
repz
mov
push
or
bound
repz
outsb
imul
add
das
je
xchg
in
out
xchg
ja
repnz
xchg
cmp
push
jl
mov
ret
iret
inc
inc
dec
xchg
push
add
jo
aad
sti
dec
dec
ss
dec
cmpb
scas
dec
mov
jno
xlat
adc
pop
movsb
mov
jno
push
mov
inc
int
sub
add
cmp
xchg
add
je
mov
pop
xor
leave
ficoms
popa
mull
sti
jecxz
rclb
jne
jo
jo
sub
cmp
out
les
inc
in
lock
pop
cmp
inc
pop
fldenv
movsl
mov
pop
push
jnp
test
test
rcl
arpl
aaa
mov
arpl
mov
out
adc
sbb
popa
leave
inc
cltd
stos
icebp
scas
cld
push
add
xchg
pop
repz
lahf
mov
into
cmpl
lcall
in
sbb
xchg
orb
ljmp
rolb
add
dec
and
movsl
insl
fnstsw
nop
sub
call
xchg
xchg
cmpsl
xor
lea
aad
pop
mov
add
sbb
imul
or
cmp
idiv
cmp
sub
fst
pop
xor
fcomp
addb
popf
in
je
dec
mov
push
push
push
add
loop
imul
lahf
stos
aam
push
loop
fidivrl
or
mov
int3
aas
aad
sub
xor
call
jbe
mov
and
test
mov
xor
loope
jmp
mov
test
dec
mov
xor
mov
icebp
or
in
and
sub
stos
jns
call
add
loope
gs
cmp
cmp
out
popl
stc
adc
xchg
push
jmp
dec
aam
cwtl
sbb
fwait
arpl
inc
outsb
addr16
dec
xchg
inc
adc
arpl
popf
fnstsw
pop
popf
dec
sbbl
sub
sahf
in
cmc
push
test
push
cmp
mov
and
dec
pop
jl
cwtl
or
jo
inc
and
insl
inc
scas
stos
sbb
sti
lock
and
xlat
leave
cltd
dec
mov
mov
push
loop
enter
mov
popa
cmp
add
repnz
ret
jge
es
add
dec
or
enter
add
xor
imulb
pop
sub
pop
xchg
pop
cmp
adc
jae
mov
fiadds
cs
mov
xlat
and
jne
or
lock
out
addl
adc
sbb
lcall
inc
fdivp
jl
subb
sbb
stos
adc
pop
imul
subb
test
mov
insb
sbb
sbb
xor
mov
inc
or
mov
adc
ss
ja
xchg
test
cmp
dec
push
jb
cmp
clc
scas
push
mov
jmp
jae
cmpsb
stos
dec
and
mov
xor
shrl
xchg
xchg
pusha
jge
xchg
outsl
daa
dec
imul
loop
dec
aam
daa
or
cmp
dec
mov
sbb
movsl
mov
pushf
pop
adc
adc
das
les
pop
sub
shll
ljmp
cli
mov
mov
cmp
inc
mov
cmpsl
out
cmp
xchg
fadds
out
lahf
jmp
stc
dec
mov
mov
push
inc
xchg
dec
les
adc
lcall
lret
out
xchg
push
mov
xchg
test
imul
jb
adc
push
inc
rolb
or
xchg
xchg
hlt
dec
lods
mov
jns
push
xor
sti
or
popa
icebp
divl
scas
sub
dec
sub
push
sbb
dec
nop
lods
push
out
adc
les
cmc
cs
aas
nop
icebp
dec
pushf
inc
cmpsl
mov
sub
clc
lock
push
dec
sub
js
push
insb
scas
iret
ljmp
push
mov
sub
sahf
pop
adc
push
mov
xchg
jl
inc
icebp
pop
daa
leave
pop
mov
testb
cmp
dec
int3
mov
add
jno
add
das
jae
lret
mov
cmp
dec
popa
or
dec
mov
cli
js
or
or
addr16
test
xor
mov
insb
fcomps
cmpsb
int3
pusha
add
xchg
shlb
xchg
mov
in
ret
inc
or
ja
loope
push
push
jne
ret
push
lcall
lahf
sbb
int
daa
cmc
jecxz
scas
add
mov
mov
mov
dec
ret
mov
mov
dec
es
iret
mov
shll
lods
lock
pop
mov
lea
pop
mov
sarl
lock
lea
push
or
jns
mov
cwtl
sbb
je
dec
int
jb
xor
push
aaa
jb
fidivrl
rclb
add
sbb
stos
jp
ja
aam
cmp
popa
lcall
fcompl
into
add
iret
cwtl
push
and
call
mov
ret
stos
or
es
ret
out
push
ds
andb
push
loop
push
fildll
sar
daa
inc
cmpl
lret
fs
clc
das
mov
adc
fcmovnbe
add
add
sbb
neg
xlat
add
repz
sbbb
xor
addr16
mov
ljmp
add
stc
enter
adcb
cmp
mov
lret
xchg
test
push
lahf
sub
pop
xor
pop
xchg
or
jo
sbb
cmc
lcall
pop
repnz
adc
in
daa
mov
arpl
jb
mov
mov
mov
out
add
loopne
in
mov
jbe
out
jnp
pop
push
jbe
inc
jmp
shl
add
add
inc
xor
inc
push
leave
hlt
jae
pop
inc
pop
icebp
mulb
loope
popf
ror
mov
pop
loopne
ret
and
jae
les
lods
mov
test
mov
movb
lods
inc
lods
clc
scas
lds
repnz
add
jmp
sub
adc
daa
xor
outsl
or
lds
pop
xor
and
mov
push
leave
push
dec
cmp
aad
jmp
and
sti
subl
mov
and
sub
and
dec
cmp
lea
mov
inc
and
pop
mov
mov
sbb
jnp
loopne
int
sbb
xchg
out
inc
mov
sbb
xchg
mov
xchg
and
sahf
adc
xlat
mov
lret
loopne
dec
adc
mov
mov
in
cltd
popa
stos
adc
or
outsl
rorb
lock
inc
bound
push
cld
sti
mov
pop
test
notb
sub
push
mov
pop
test
js
out
xor
fs
in
push
xchg
lcall
mov
iret
call
iret
frstor
lds
adc
scas
mov
jge
not
xor
stos
icebp
mov
or
lea
sti
mov
mov
xchg
mov
mov
mov
ljmp
mov
fdivrs
and
mov
xchg
outsl
shlb
inc
loopne
stos
pushf
jg
fisttps
fildl
jmp
ja
adc
and
mov
push
pop
cmp
fsubrl
jecxz
inc
jg,pn
fimuls
in
in
aad
and
sti
mov
mov
sbb
xchg
add
and
sti
aam
cmp
mov
js
sub
jo
cwtl
xorb
insl
sub
push
cltd
jo
xor
xchg
lret
xor
daa
and
lcall
sbb
jno
lahf
out
mov
mov
push
bound
iret
roll
std
cwtl
cld
mov
sub
inc
lods
sub
jnp
lahf
add
lea
dec
fwait
jmp
test
sub
fstpt
jge
push
lahf
mov
rcrb
xlat
stc
mov
je
out
ds
mov
jmp
rclb
mov
jg
push
test
aam
mov
subb
movsb
je
cmc
inc
outsb
sahf
mov
adc
pop
ss
add
or
loop
addr16
pop
ljmp
test
fdivrs
loopne
ret
push
add
or
popf
test
xchg
sub
and
sahf
xor
pop
mov
icebp
in
jl
xchg
dec
or
pop
lret
xchg
jle
scas
psubsb
cmp
cmp
xchg
mov
sarl
in
add
push
cs
scas
xor
int3
fcomip
nop
mov
loop
bound
shrb
cli
mov
shlb
leave
push
in
sahf
xor
dec
and
in
test
negb
sbb
dec
cmpsl
roll
cld
pushf
jp
sbb
mov
imul
pusha
int
stos
mov
dec
scas
push
jns
ret
cwtl
or
out
idivl
lea
out
out
mov
add
loope
cmp
jle
pop
data16
mov
sub
jg
std
pop
cmp
or
inc
frstor
aaa
xchg
mov
jp
adc
xor
push
xchg
sahf
pop
cltd
add
lahf
mov
test
cmpsl
psubq
mov
sbb
cmc
mov
test
fwait
stc
cltd
jb
fsubl
fadds
pop
mov
cmpsl
fstpl
loopne
cmpps
sbb
sti
adc
xchg
mov
enter
dec
adc
jns
sahf
push
insl
test
bound
out
popf
addr16
popa
movsl
mov
inc
lock
xchg
out
mov
mov
sbb
sub
test
xor
mov
fwait
aad
int
pop
je
rorl
jle
outsb
loopne
shl
and
pop
cmp
lock
add
stos
inc
popa
dec
mov
adc
loop
fdivrl
adc
in
mov
stos
outsb
test
pop
xchg
push
sbb
jl
dec
xchg
add
and
nop
clc
bound
rol
jmp
jo
mov
out
arpl
xchg
mov
ffree
sbb
adc
mov
lock
int
popf
and
mov
mov
adc
push
xchg
ljmp
push
xor
pop
movsb
mov
cmp
mov
ror
push
cltd
xchg
bound
dec
ret
or
inc
out
xchg
cmpsl
xchg
testl
lcall
or
dec
push
dec
stos
mov
sarb
gs
pop
xorb
fisubl
shl
push
pop
push
fs
push
imul
shlb
mov
add
lock
mov
insl
aad
jae
inc
fsubr
icebp
sbb
lds
xor
dec
xchg
dec
std
pop
loop
or
adc
in
in
push
push
jo
jmp
cmp
jno
and
or
dec
xchg
insb
icebp
mov
dec
push
ds
movsb
dec
lcall
stc
aad
arpl
sub
rcrl
push
ja
mov
dec
and
and
mov
popf
lock
aam
xor
cmp
push
and
dec
add
outsb
push
cmc
pop
jbe
outsb
arpl
in
jo
add
adc
test
bound
push
js
mov
sbb
jno
pop
rorl
push
shrb
xor
or
pop
int
ljmp
testl
hlt
or
das
cmp
adc
dec
jp
push
sub
mov
mov
cmp
jge
adc
rolb
popa
aam
aaa
pop
in
adc
dec
insb
ljmp
jle
out
sub
rcr
mov
ss
xchg
and
mov
mov
sub
push
push
inc
popa
push
loop
sarl
xchg
lds
jnp
adc
loopne
aaa
sub
call
shrl
pop
jle
inc
pop
jb
push
or
es
aas
jp
flds
mov
scas
addr16
cmp
and
add
add
popa
rol
pop
in
add
or
and
sbb
mov
stos
add
stos
test
dec
cld
xor
das
rolb
pop
jmp
push
ret
test
inc
out
inc
lea
pop
lds
push
loope
mul
outsl
or
mov
pop
lret
push
mov
push
push
jae
sahf
xor
mov
repz
iret
std
and
mov
in
cli
xchg
lahf
bound
out
mov
jmp
inc
mov
mov
jp
xor
notb
notl
lods
push
repz
pop
lds
sub
lret
ret
cmp
sbb
pop
or
in
mov
sti
xor
mov
jb
incl
xor
ja
xlat
scas
jno
jae
xchg
xchg
mov
and
test
pop
jnp
pop
push
jl
mov
mov
xchg
inc
rcrb
xor
or
or
cltd
int
lret
dec
fwait
sbbl
or
repnz
nop
sub
mov
mov
sbb
fldl
lods
dec
dec
lea
xchg
mov
int
test
sub
inc
idivl
and
inc
shl
popf
xor
daa
outsl
ret
jg
add
or
push
pop
sub
mov
loop
popa
adc
xchg
loop
stc
iret
into
stos
dec
mull
sbb
cmc
cmp
mov
fstpl
cmp
loop
hlt
xchg
pop
dec
inc
test
mov
int3
and
outsb
inc
xchg
xor
stos
push
sbb
sbb
cmpsl
sbb
jns
cmp
outsl
sub
sub
cltd
add
jp
pause
adc
pop
ffreep
sbb
and
cmpsb
dec
jmp
xchg
push
pop
mov
mov
rclb
pop
lahf
push
mov
pop
mov
mov
and
lahf
std
push
js
pusha
and
test
out
testb
jp
lods
mov
adc
in
bound
or
xor
ja
jb
pop
mov
or
insb
sbb
add
popf
dec
push
inc
jecxz
pop
cltd
mov
sub
cmc
xchg
mov
jp
jmp
xor
imul
mov
ja
outsb
xchg
bound
jge
jmp
xor
das
rcl
fsub
adc
cmp
lods
mov
incb
xchg
scas
add
fmuls
mov
push
sti
sahf
or
dec
push
or
jp
add
insb
rcll
jae
add
mov
push
mov
push
and
out
pop
pushf
out
fisubrs
dec
into
mov
mov
xor
pushf
xor
leave
shrd
xchg
add
out
sbb
enter
cmp
mov
push
stos
lds
ror
cmpsb
jne
push
push
nop
lret
rcrb
sub
xor
das
mov
xor
mov
movsl
jne
jno
inc
decl
in
stos
out
cmp
mov
mov
pop
decl
test
add
add
pop
hlt
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
jmp
int
stos
ljmpw
dec
jnp
scas
test
cmp
inc
jl
sbb
loopne
dec
jne
fildll
jns
cli
jae
pop
mov
lahf
dec
adc
jbe
add
xor
ds
fsubrs
xchg
pop
jle
into
imulb
mov
cwtl
pop
jno
outsb
jg
out
jno
dec
outsl
or
mov
and
inc
rol
popf
lcall
add
fcom
icebp
sbb
pop
mov
mov
andl
ret
push
xorl
jo
loop
lds
cwtl
dec
hlt
mov
sbb
mov
je
int3
std
jmp
mov
xor
ficoml
sar
out
add
and
mov
xchg
push
push
or
xor
add
mov
pop
dec
popf
or
aas
mov
fwait
xlat
cmp
sub
test
fildl
nop
cwtl
ret
les
in
jae
lods
or
and
ja
cmp
ffree
out
xor
mov
pop
insb
aaa
jmp
sbb
cmc
cmp
lahf
dec
mov
fcompl
push
mov
cwtl
push
sub
add
aaa
jo
fs
loope
cmpsb
not
fisubs
pop
mov
xchg
push
pop
cld
jns
push
adc
jno
pop
aam
inc
enter
pushf
mov
aas
enter
ja
mov
mov
xchg
push
cmpl
add
dec
cwtl
mov
fsubs
aas
sti
push
ljmp
jg
test
inc
sub
mov
xor
into
lea
imul
sbb
call
movsl
and
movsb
mov
pop
mov
sti
stos
shl
sub
jmp
bound
dec
jecxz
movl
jbe
int3
pop
imulb
mov
hlt
and
loope
push
inc
mov
add
ds
mov
repz
jno
add
test
addl
sub
or
outsb
cmp
das
xor
mov
fisubl
cmp
jo
repnz
jle
jb
ret
pop
jae
ficompl
bound
or
adc
jbe
out
cwtl
dec
aaa
dec
popa
loopne
sub
cmc
outsb
adc
imul
das
es
or
jp
dec
sub
sarb
data16
or
add
imul
into
ss
dec
mov
xchg
adc
punpckhbw
flds
fwait
movsb
clc
lahf
mov
enter
lcall
jbe
cmp
mov
dec
xchg
into
adc
xchg
repnz
sub
jbe
xchg
and
mov
or
into
jb
test
out
xchg
fildl
jae
pusha
mov
movsl
xor
cwtl
and
rcll
inc
jp
mov
dec
mov
rorb
lcall
pop
push
lods
sub
push
stc
leave
jnp
push
lret
adc
mov
divb
jmp
push
xchg
dec
ja
lea
add
outsl
push
lret
adc
mov
mov
sbb
add
dec
stos
mov
ret
xor
loopne
and
pop
jle
adc
mov
scas
xchg
dec
icebp
stc
mov
xchg
mov
rcrb
and
sub
mov
cmp
shrl
add
add
sahf
inc
or
push
mov
add
mov
mov
lods
xchg
cmc
into
iret
xchg
push
add
mov
cmp
daa
loope
xor
aas
dec
bound
add
mov
inc
dec
sub
inc
call
jg
push
jb
pop
and
aam
popf
push
push
pop
mov
inc
and
repnz
lock
sahf
into
icebp
loop
flds
push
xlat
lds
jecxz,pn
push
sbb
popf
sahf
rcl
testl
mov
and
scas
pop
aad
pop
sbb
sub
rolb
inc
js
pop
inc
repnz
cmp
fcomps
sub
movsl
mov
loope
pop
daa
add
add
mov
inc
sbb
jns
or
mov
push
push
sarl
or
adc
scas
adc
pop
cmpsl
mov
loope
xchg
pop
leave
imul
dec
subb
inc
orb
lcall
dec
pop
mov
sbb
pop
jg
cwtl
in
mov
xchg
mov
add
pop
fimuls
sbb
iret
push
xchg
xchg
and
add
mov
mov
mov
nop
call
dec
lods
cld
add
pop
and
jl
mov
pop
pop
andl
pop
into
jle
push
xchg
arpl
test
push
mov
mov
bound
mov
mov
imul
xchg
sbbb
pop
imul
jns
jp
adc
outsl
cmp
push
dec
sub
push
and
jb
ljmp
jge
jl
enter
stc
nop
fldl
mov
push
in
lods
or
div
lea
mov
int
int3
or
idivb
sub
or
ss
mov
fcmovnu
add
xor
xchg
cmp
jo
xor
mov
stos
xchg
inc
gs
adc
outsb
jle
xor
add
addr16
and
push
sar
add
jne
sub
rol
jns
push
int3
sub
inc
pusha
xchg
mov
dec
cltd
lods
adcb
lret
mov
mov
xor
sarb
add
rorl
xchg
outsl
jmp
sub
out
xorb
scas
mov
xorb
add
xchg
xchg
mov
inc
ror
push
ret
cmp
mov
mov
add
and
repnz
insl
push
mov
cli
xchg
and
sbb
pop
lds
sti
push
decb
jmp
xchg
out
jle
inc
inc
or
loop
push
mov
xor
out
shr
dec
mov
inc
jecxz
and
popa
mov
das
mov
js
jae
inc
pop
jecxz
testl
xlat
stc
test
imulb
cwtl
cmp
imul
push
shlb
push
push
lcall
stc
lea
and
jno
xchg
scas
dec
jg
and
push
mov
lock
loop
stos
dec
mov
ljmp
xor
imul
mov
icebp
push
test
stc
xchg
jnp
shrb
xlat
xchg
mov
test
lahf
add
lret
hlt
std
dec
pop
mov
cmp
aad
subb
out
mov
cwtl
inc
adcl
mov
pop
aad
lret
jmp
lret
rorb
outsl
push
nop
lcall
mov
lahf
pop
sub
repz
jb
mov
lret
mov
jns
push
mov
repnz
movsl
sub
popf
cmp
cmpsl
add
pop
pushf
fwait
or
and
loope
xor
mov
out
pop
icebp
mov
mov
push
hlt
inc
sbb
sbb
or
fidivrs
dec
daa
les
add
pop
cmp
cmp
test
jl
outsl
jbe
push
mov
inc
ss
push
test
and
divl
push
test
ja
and
repz
imul
fistl
push
mov
aas
inc
mov
dec
and
rcr
pushf
fmull
test
lahf
in
fdiv
fisttpl
scas
ljmp
adc
pop
xor
lods
loopne
pop
and
mov
ret
clc
arpl
sarb
cmp
cmp
cmp
mov
sbb
xchg
jbe
insl
stos
std
fnsave
jg
xor
iret
daa
dec
push
sbb
cmp
testw
dec
insl
push
sub
testb
pop
sbb
aad
or
sti
xlat
mov
pop
mov
and
or
mov
pop
push
les
adc
mov
cmpsl
notl
inc
rcrb
mov
dec
or
stc
push
pop
ret
mov
lods
adc
inc
shlb
dec
dec
adc
mov
ret
and
cmp
lahf
cmc
cmp
gs
pop
sbb
and
testl
cmp
xor
test
pop
popa
lock
push
sbb
adc
aas
in
aam
or
jle
dec
cwtl
lods
leave
dec
mov
iret
test
repnz
mov
cmp
and
das
sub
xor
outsb
lea
test
daa
xchg
mov
xchg
pop
in
es
ss
mov
ja
push
sub
clc
inc
sbb
xlat
sub
dec
push
xor
cs
stc
cmpsl
ret
fsubrl
pop
sbb
shll
xlat
adc
cmp
pushf
jecxz
inc
xchg
les
aaa
loope
mov
xchg
andb
push
insb
mov
icebp
dec
in
push
and
fnstsw
pop
and
pop
dec
dec
roll
push
jbe
jnp
cmpsb
mov
cld
adc
pop
sbb
cli
das
in
push
bound
and
sbb
loopne
sahf
mov
imul
mov
ss
lock
sahf
mov
inc
and
and
aas
ds
cmc
dec
ss
xchg
ss
fldt
mov
xor
sub
divb
sub
push
pushf
xlat
movsl
sbb
aad
push
sbb
push
mov
cmp
xchg
in
dec
push
mov
loopne
gs
mov
mov
dec
ret
pusha
fistl
iret
dec
pusha
gs
xor
xor
pop
scas
inc
push
lret
jg
loop
arpl
dec
bound
jnp
mov
pop
inc
pop
or
or
dec
cltd
adc
js
leave
cli
xor
scas
push
xchg
cmp
xor
ljmp
pusha
test
cli
mov
push
jl
enter
sbb
lahf
and
pop
xchg
jmp
rcrb
mov
lahf
call
fstps
or
lret
arpl
mov
push
test
jbe
mov
in
imul
inc
xor
dec
stos
jne
push
sbb
jne
mov
push
outsb
stos
jo
jg
movsl
jp
inc
mov
mov
mul
xchg
enter
push
outsl
lds
dec
out
aad
xchg
sub
test
lcall
das
cmpsl
popa
add
dec
push
cmp
dec
sbb
movsl
xchg
in
psubsb
testb
js
icebp
call
pop
sbb
loopne
push
jmp
cwtl
int
aad
pop
mov
cmp
orb
test
xlat
enter
and
fiadds
mov
sar
mov
gs
mov
dec
loop
sbb
push
insl
outsb
mov
mov
lea
mov
test
jl
pop
sub
es
dec
jle
pop
mov
pop
fidivrl
pop
or
sti
pop
loope
inc
rol
std
xor
mov
add
test
push
arpl
sbb
cwtl
shlb
cld
sub
mov
lahf
mov
and
cmc
xchg
stc
pop
mov
fstpt
daa
ss
pop
movsb
daa
rcr
aam
jl
repnz
sti
pusha
imul
mov
mov
lahf
addr16
or
or
pop
and
add
mov
mov
jnp
push
add
out
xchg
jo
ds
jp
loop
fstl
gs
and
pop
insb
je
clc
loopne
test
cld
ljmp
jecxz
sbb
jns
sbb
or
test
jecxz
sbb
pop
or
rclb
xor
inc
or
mov
xor
or
inc
sahf
cmp
negl
sub
sti
mull
sbb
mov
jns
and
lods
les
add
inc
aam
add
and
adc
push
mov
mov
push
jae
sbb
out
mov
ja
int3
enter
pop
cli
inc
inc
cmp
fdivrl
xchg
adc
inc
test
dec
mov
mov
jecxz
shr
insl
xor
sbb
and
mov
mov
ja
aaa
rolb
mov
je
sti
push
mov
cli
lods
out
adc
stos
sub
xchg
in
repnz
pop
jnp
adc
xchg
lret
cmpsl
xchg
sub
ds
js
xchg
aad
mov
pushf
cmp
add
or
dec
mov
jmp
mov
dec
or
decb
ds
mov
pop
vmulps
and
cltd
cmp
movsb
xchg
icebp
mov
loopne
lcall
and
push
test
cli
mov
call
cmp
outsl
in
push
adc
daa
fwait
out
cs
push
stos
add
dec
lods
aam
divl
xchg
dec
mov
inc
mov
adc
cld
mov
inc
jo
ljmp
fsubs
and
mov
sar
or
push
test
sbb
cmp
jmp
pusha
jl
push
dec
or
or
dec
daa
jge
repnz
cmpsb
add
push
adc
fldcw
ja
add
jmp
add
push
aas
push
jge
jbe
jl
enter
lds
sahf
and
fnstsw
int3
outsl
cmp
mov
nop
hlt
iret
inc
lahf
dec
cld
mov
xchg
jb
adc
imul
or
xchg
xor
std
fwait
mov
movsb
ret
dec
cmc
add
loope
add
dec
dec
add
xor
ss
andl
sbb
mov
enter
cmp
adc
add
sbb
push
or
add
cs
inc
and
dec
lahf
cwtl
pushf
imul
int3
jns
jo
mov
adc
mov
mov
outsb
leave
imul
icebp
pop
test
add
sub
enter
in
subb
xor
jae
cmp
mov
add
std
mov
gs
orl
cmpsl
or
xchg
cmp
loope
adc
adc
adcl
mov
sub
dec
cltd
lea
push
xorb
out
scas
jmp
mov
jbe
fimuls
jle
xor
xor
sub
lea
adc
in
insl
adc
cmp
xchg
nop
xor
jp
mov
movsl
xchg
cmc
push
in
daa
add
fsubp
lea
clc
fstpl
fiaddl
decb
les
mov
gs
add
or
jge
pop
dec
mov
call
push
cmp
push
or
js
cwtl
push
push
xlat
js
das
int
mov
in
mov
sbb
mov
cmc
ret
mov
or
loope
outsb
xchg
inc
cld
dec
arpl
cmpsl
jno
lcall
or
icebp
je
into
mov
sarb
loope
sbb
mov
sbb
loop
fwait
das
outsl
dec
movsb
ds
rcr
sarl
ljmpw
cmpsl
mov
gs
sbb
pop
lahf
adc
loope
fcomip
cmp
or
xor
pop
iret
sub
ficoml
sub
jmp
sub
dec
cmp
stos
loopne
arpl
ljmp
xchg
mov
push
sub
in
xor
loopne
sub
fildll
and
imul
popf
dec
shrl
bound
cmp
cwtl
sti
add
mov
sub
fnstsw
enter
sbb
lcall
mov
and
inc
adc
jle
cltd
xor
cmp
cli
sub
and
sub
pop
mov
lret
xchg
mov
jmp
jns,pt
xchg
inc
cmp
pop
add
mov
lods
das
xor
out
push
pop
stos
push
adc
std
in
or
add
pmuludq
out
mov
inc
or
repz
ret
fstpl
mov
mov
repnz
faddl
data16
adc
sbb
lahf
daa
lods
fsub
mov
mov
out
data16
add
mov
jae
jecxz
xchg
andb
in
xor
flds
mov
mov
frstor
and
cmp
mov
loopne
mov
xchg
movsb
in
lods
xchg
mov
repnz
pop
and
xor
xchg
in
xchg
mov
push
xchg
andb
jmp
dec
xor
push
mov
sub
test
fnstenv
xchg
mov
repnz
dec
sub
les
fs
adc
sbb
pop
and
mov
jl
pop
inc
mov
stos
rorl
sbb
inc
adc
test
sbb
lods
jmp
fiaddl
mov
adc
es
addr16
cwtl
mov
fs
fcomps
pop
outsb
data16
pop
or
sub
sub
pop
shlb
pop
and
fdivl
sbb
fwait
stc
xor
lret
gs
test
dec
jl
xchg
sbb
inc
lea
js
mov
dec
adc
movsl
adc
and
dec
cld
jecxz
and
cld
ret
aas
mov
ret
mov
je
push
add
mov
pop
loop
mov
popf
popl
and
mov
xchg
test
inc
lods
jecxz
aaa
lret
mov
push
xchg
cmp
cltd
pop
roll
or
js
pop
daa
inc
leave
adc
call
es
cltd
push
pusha
add
rcll
les
lret
testl
push
adc
ja
out
hlt
sarb
mov
pop
sbb
movsb
jle
aad
pop
stos
hlt
mov
fnclex
jl
sti
lea
cmc
xchg
test
cmp
jge
jne
hlt
fldl
jno
fidivrs
divl
mov
pop
xor
sub
jns
addb
push
mov
out
outsl
sub
clc
int3
test
inc
in
push
jmp
ret
push
mov
dec
sbb
ret
rorb
pop
push
repz
leave
sbb
stc
pop
dec
push
add
sti
pop
ds
push
mov
aam
adc
inc
sub
cmp
int3
lea
sub
mov
int3
or
data16
add
insl
and
mov
fisttpll
sahf
sahf
push
movsl
dec
int
aad
fwait
pop
movsl
inc
or
add
loope
sub
push
or
mov
or
push
stc
mov
adc
cmp
cld
jnp
push
mov
in
dec
popf
pop
push
lret
inc
cld
in
add
adc
leave
cmpsl
mov
or
inc
aam
imul
and
add
adc
push
inc
stc
xlat
stc
addr16
lods
test
pop
inc
call
lret
pusha
mov
pop
fidivs
inc
nop
and
add
or
push
sub
adc
push
in
or
push
mov
sub
scas
sti
dec
daa
std
fdivrl
out
inc
sub
mov
in
gs
shl
adc
mov
enter
push
pop
add
sti
out
inc
mov
push
inc
lret
imul
pop
pop
or
fs
call
insl
and
and
imul
addb
push
push
add
jb
mov
lret
sbb
dec
and
adc
shrl
inc
and
cmp
into
adc
into
call
jle
jnp
inc
cmp
push
imul
js
ret
jle
pop
mov
pop
in
es
fcmove
stc
cmp
int3
loope
dec
xchg
jae
mov
push
or
shrl
pop
imul
push
gs
sti
xchg
or
clc
cltd
sbb
sbbb
lods
xor
mov
jns
fidivs
arpl
pop
arpl
or
mov
or
inc
mov
push
mov
push
cwtl
jmp
stc
push
push
outsl
xor
mov
lock
divl
decb
sub
popl
or
inc
pop
xorl
dec
push
loope
fs
xchg
mov
xchg
ficompl
ja
sahf
mov
mov
mov
dec
ret
adc
in
xchg
mov
fwait
push
daa
test
cmp
int3
xlat
popf
dec
sti
stos
jp
pop
out
jmp
cmp
mov
lods
ds
mov
push
or
shlb
call
push
rcrb
fisubl
sub
mov
inc
movsb
jmp
pop
add
pop
hlt
and
push
xchg
push
mov
dec
mov
jecxz
sub
out
clc
add
push
shlb
cmp
xchg
aad
cld
jne
popa
lds
sub
sub
add
or
cmc
movsl
mov
jo
xchg
cld
insl
iret
push
cltd
imul
mov
test
jl
pop
lcall
loopne
repz
push
fldcw
outsl
pop
or
cmp
test
push
addl
sbb
mov
insl
in
ja
push
ss
pushf
add
popf
jno
adc
fbstp
fcoms
xchg
sub
arpl
xchg
jb
mov
mov
sbb
sti
mov
push
fcoms
lcall
sub
loope
inc
pop
push
insl
ljmp
xor
shrl
or
push
in
aaa
pop
shrl
test
iret
popa
lods
inc
dec
fisttpl
loopne
and
cmp
out
mov
stos
push
mov
dec
dec
out
inc
dec
negb
jmp
std
push
jg
fcos
mov
push
push
mov
and
repz
cmp
sub
push
rorb
int3
mov
ret
outsb
pcmpeqw
cmpsl
int
rcll
addps
inc
mov
jp
pop
adc
lret
inc
mov
mov
fisubrl
jecxz
mov
mov
mov
cs
fwait
lods
lcall
imul
sbb
inc
xchg
aad
fstl
inc
hlt
test
outsl
and
inc
mov
adc
inc
int
and
adc
pop
dec
jae
mov
call
sarl
cmpsl
ret
sbb
jns
ret
cltd
cwtl
jno
outsb
adc
mov
jb
into
fwait
shl
dec
pop
inc
shll
in
fisttps
stos
stos
popf
mov
xchg
push
dec
push
movsl
jb
xor
fdivrs
idiv
xchg
jg
adc
mov
ds
ljmp
cli
sbb
push
sub
pop
lret
out
adc
inc
pop
dec
mov
xchg
clc
aaa
add
inc
xchg
scas
mov
adc
mov
pop
popa
xlat
fidivrl
add
pop
pavgb
pop
pop
jne
mov
rcrl
addr16
mov
pushf
jns
and
add
in
fldcw
pushf
sub
sub
cmp
imul
mov
pop
iret
pop
cli
sub
loopne
jo
test
jl
dec
dec
movsb
fwait
or
mov
rorb
hlt
int3
test
out
inc
jmp
call
ret
ljmp
push
sbb
pop
jo
call
fs
icebp
stos
in
out
sub
add
test
push
lcall
aas
add
mov
dec
jge
sbb
jnp
inc
adc
nop
push
mov
jge
jne
add
push
into
insl
sbb
mov
loopne
sbb
push
bound
or
cmp
fyl2x
sub
iret
in
and
sbb
pop
and
mov
lods
adc
sub
pop
lea
adc
fmull
and
jnp
mov
insl
jno
sub
cmp
jns
fildl
outsb
push
int
pop
scas
pop
lret
shrb
cmpl
int
dec
shl
inc
mov
rorb
push
jecxz
cmpsb
test
mov
jecxz
lea
add
es
or
or
jno
mov
cmp
mov
lds
gs
clc
mov
or
cmp
inc
ljmp
mov
xchg
js
lcall
pop
sbb
xchg
shl
and
rcl
lret
sbb
mov
dec
cmp
cli
ja
dec
pushl
fisttpl
inc
pop
clc
clc
cld
in
lds
cmp
lock
daa
aas
loopne
ret
hlt
sub
sub
adc
movsb
jbe
shlb
inc
cmp
in
adc
cmp
jb
mov
jae
add
sub
test
cwtl
cmpsl
sbb
adc
test
mov
aas
out
enter
std
cmp
out
xchg
add
and
push
stos
jno
sarl
hlt
fs
rol
ds
dec
adc
clc
arpl
fidivs
shll
test
sbb
ds
push
addr16
jge
test
jl
jg
push
mov
mov
je
cmpl
cmpsl
jb
rol
push
iret
sarl
dec
or
jns
clc
sub
arpl
xor
imul
mov
lds
mov
pop
pop
shlb
push
jb
aas
test
mov
shrl
dec
insl
loope
push
xchg
jbe
pop
aad
shll
fstps
sub
cwtl
js
repnz
loop
stos
clc
add
repz
jns
and
loope
pop
sub
mov
or
inc
mov
xor
push
jmp
popf
out
xchg
cmp
dec
std
lock
cmc
add
pop
dec
int
mov
jne
lea
mov
lret
push
push
scas
mov
sbb
test
imul
ret
test
sbb
push
loop
insb
pop
jg
xor
cmpsl
aas
push
scas
jmp
jb
jg
inc
in
push
ljmp
lock
leave
mov
add
xchg
or
mov
mov
xchg
cs
test
add
xor
mov
xor
or
mov
leave
inc
add
sahf
test
sbbl
sub
ds
sbb
sahf
push
xchg
push
cwtl
sbb
data16
mov
cmp
push
aaa
sub
stos
shlb
hlt
movsl
sub
jmp
jne
ret
mov
mov
cmp
pusha
popf
jne
or
sbb
inc
xchg
or
aaa
sbb
add
in
gs
imul
adc
lock
push
add
rorb
and
add
ljmp
sub
cmp
in
pop
cmp
sbb
test
shl
loope
inc
or
imul
mov
sbb
xor
jae
movsl
loope
loop
jmp
jo
fistpll
sub
ja
xchg
loop
push
lcall
repnz
sub
adc
outsl
mov
cmpsl
and
xor
lahf
cmp
fcomp
in
inc
inc
add
dec
dec
imulb
or
push
push
iret
test
mov
js
clc
dec
xor
test
cmp
cmp
pop
mov
je
lahf
lea
sub
fdivrs
lods
lahf
xchg
imul
xchg
insl
in
inc
inc
dec
ret
mov
lock
ss
sbb
push
hlt
mov
aad
and
shlb
mov
mov
jmp
rcll
shlb
xor
inc
mov
mov
aaa
cltd
scas
add
sti
cltd
mov
repnz
ja
ret
pushf
jbe
das
out
inc
mov
add
or
inc
fmull
mov
pop
xchg
xor
pop
mov
imulb
cmc
cmp
pop
clc
out
test
jo
pop
inc
push
lds
mov
mov
loope
rcrl
push
rcrl
popf
movb
xchg
in
xchg
int3
movsl
push
add
jg
inc
fmuls
aaa
pop
xchg
mov
sbb
adc
add
mov
ficoml
inc
dec
test
in
pop
push
cmp
inc
push
ret
inc
add
mov
push
movsl
loope,pt
les
adc
mov
xor
push
mov
mov
inc
scas
es
dec
or
imul
fsts
pop
add
mov
mov
pop
inc
and
jmp
adc
xor
xor
add
xor
xchg
mov
shll
or
inc
sbb
mov
into
xchg
push
int
repnz
scas
add
out
add
popa
fadds
push
lock
push
push
hlt
jns
daa
std
fnstcw
sub
xchg
pop
add
lcall
mov
in
push
fstpt
scas
clc
cmp
pop
mov
pop
sbb
fsts
sbb
fs
pop
lods
notb
andl
jno
inc
inc
jno
pop
mov
stc
pop
push
push
call
repz
outsb
js
inc
xor
xchg
lods
loope
mov
or
cwtl
in
ret
enter
add
push
jp
lods
lcall
mov
mov
loope
mov
and
pop
xchg
popf
shlb
notb
iret
jbe
jge
jg
push
xchg
and
add
cld
ds
ret
fstp
adc
pop
call
mov
mov
push
out
insb
fs
jno
cmpsb
movsl
cmp
pop
push
push
jge
scas
outsl
loopne
or
mov
outsb
adc
dec
add
pop
outsl
jne
mov
stos
fldenv
and
or
daa
lock
cmpb
aaa
mov
inc
or
jp
test
xchg
pop
mov
inc
xor
mov
sbb
sti
and
pop
int3
cli
stos
push
sbb
xor
ret
jmp
mov
push
ret
fcompl
mov
aaa
cld
pop
hlt
push
sbbb
mov
iret
jp
ret
ljmp
sub
inc
xchg
add
data16
push
fsubr
jg
and
cmp
xchg
loop
out
fs
daa
cmp
mov
xor
xchg
or
int
mov
cli
leave
and
dec
cld
mov
into
das
in
loope
dec
fldt
imul
loope
jl
jg
xchg
aad
sbb
movsb
fwait
add
or
mov
cltd
cmp
add
adc
xchg
cmpsb
mov
jb
stos
inc
or
push
iret
sub
cltd
add
sahf
hlt
pop
xor
cli
adc
into
add
mov
out
shl
loopne
and
jne
fsubs
enter
jae
imul
dec
subb
ja
sub
mov
xchg
jae
rorb
add
or
arpl
xchg
push
mov
jns
pop
dec
push
loop
std
and
lods
cmc
dec
call
push
sbb
mov
and
add
decb
jo
shl
or
scas
xchg
shll
mov
test
mov
test
jnp
cmp
sub
pop
fwait
std
mov
pop
fisubl
repz
pop
in
wrmsr
or
popf
int3
fmul
mov
sub
push
test
fstl
scas
adc
and
push
mov
ds
loope
mov
inc
loope
enter
fstpt
jge
push
push
fistpll
jae
jno
fs
clc
test
mov
jmp
iret
sub
notb
ret
repz
sbb
cmpb
mov
adc
mov
or
cmp
stos
aaa
inc
test
or
xchg
xor
lds
std
inc
mov
fisubrl
cltd
es
push
rcll
push
push
pusha
sub
sub
pop
out
jae
xor
insl
divl
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
movl
and
mov
and
movsbl
sub
mov
xor
add
and
sub
mov
subl
xor
cmp
movl
jne
andl
mov
inc
mov
cmpl
jbe
jmp
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
adc
push
or
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
call
xor
add
dec
mov
jmp
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
pushl
pushl
push
push
call
jmp
mov
xorl
push
movl
cmpl
je
cmpl
ja
jmp
push
push
push
pushl
push
call
mov
dec
mov
jmp
mov
mov
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
iret
lods
mov
add
add
add
add
add
loopne
add
loopne
add
add
add
push
push
inc
push
lock
into
cmp
or
lret
add
add
inc
cmp
insb
fs
outsl
data16
jb
imul
push
arpl
jb
push
arpl
jae
add
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
push
mov
mov
mov
push
lea
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
xor
add
push
lea
push
mov
mov
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
mov
mov
movb
mov
movb
mov
movb
mov
movb
mov
mov
movb
push
movb
mov
movb
movl
lea
pop
movzbl
xor
add
mov
inc
dec
jne
movl
lea
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
mov
xor
add
xor
mov
mov
xor
movzwl
add
xor
xor
mov
mov
mov
mov
lea
lea
movl
mov
call
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
lea
push
mov
push
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
jbe
cli
push
sbb
or
or
cltd
mov
lea
sub
lea
lods
sarb
mov
sarb
mov
mov
mov
sbb
or
push
cld
mov
mov
stos
lods
fistpl
or
mov
mov
mov
mov
mov
sahf
and
shrb
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
add
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
