push
mov
sub
mov
mov
inc
mov
sbbl
jmp
xchg
xor
xchg
and
mov
adc
adc
adc
adc
xlat
add
mov
mov
lret
mov
lret
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
jge
sbbb
divl
popf
in
enter
out
imul
or
or
cld
lds
imul
addb
jle
push
aaa
mov
and
arpl
clc
sub
leave
test
inc
aaa
test
dec
mov
in
dec
sub
sahf
ret
push
fbld
or
pop
andl
fcoms
sbb
sub
lds
push
and
jmp
addb
imul
enter
push
fidivrs
lret
popa
jne
out
test
cmp
push
mov
inc
es
xchg
mov
sbb
or
sbb
xor
add
fadds
xchg
xor
pop
xchg
in
push
mov
mov
adc
push
xlat
dec
shrl
stos
aas
aas
push
sbbb
cli
out
lock
std
repz
cmpsl
out
pop
pop
ljmp
andl
push
mov
lcall
push
in
sub
push
lret
push
fnsave
mov
adc
xor
mov
push
addl
mov
pop
arpl
xor
jbe
cmp
dec
addr16
ljmp
sti
mov
lods
inc
insb
sar
or
jg
sbb
addr16
es
sbb
inc
js
ja
into
mov
and
ret
xor
fcompl
daa
pop
fildll
popw
dec
fwait
xchg
mov
int3
add
clc
shrl
xor
dec
sbb
out
cli
pusha
cmp
aam
push
out
lods
pop
dec
push
clc
push
mov
cltd
mov
add
sarl
and
push
das
ljmp
ret
les
cmp
lcall
cmp
xchg
pop
adc
dec
xor
xchg
sti
xor
mov
incb
mov
dec
lret
or
popf
push
stc
out
js
bound
inc
inc
rorb
jnp
jl
xchg
not
mov
or
repnz
cmp
insl
sub
pop
or
enter
xchg
sbb
cmp
jno
sbb
ja
inc
enter
jle
iret
subb
mov
dec
adc
scas
jnp
outsl
push
mov
std
scas
testb
insl
out
pusha
cvtpi2ps
push
pop
shrl
lods
adc
cmp
out
mov
cmp
pop
cmp
aad
mov
inc
jl
clc
push
adc
sub
push
mov
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jbe
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
movl
mov
jmp
movl
jb
push
push
call
xor
mov
mov
and
mov
or
mov
xor
sub
xor
mov
mov
xorl
sub
mov
movl
sbb
cmpl
mov
not
jmp
mov
jg
pushl
call
xor
or
mov
sub
or
and
dec
mov
or
xor
subl
mov
cmpl
movl
mov
movl
jmp
mov
movl
jb
push
call
or
mov
xor
movzwl
and
sub
sub
adc
sbbl
or
orl
orl
adcl
lea
mov
mov
sub
imul
mov
or
mov
or
jmp
and
sub
sbb
sbb
fs
lods
adc
adc
adc
adc
add
mov
dec
dec
pop
cwtl
sbb
packssdw
out
mov
stc
stos
scas
mov
cmp
add
popf
leave
fcomps
cltd
push
movsb
test
ss
pop
test
popa
cwtl
pop
mov
lret
lahf
dec
leave
shrb
pop
push
clc
out
mov
cwtl
cmpl
or
mov
push
test
cli
dec
mov
add
in
pop
sbb
pop
popa
repnz
sbbl
leave
jle
lret
adc
pusha
dec
push
aad
idivb
ja
jno
sub
clc
or
mov
sub
sub
imul
in
iret
jl
lea
add
or
pop
shlb
cmp
xor
mov
ret
out
cmpsb
pop
pop
jnp
jl
sub
lock
or
mov
cmp
mov
cltd
mov
js
aaa
push
aaa
lods
lock
cmp
aas
lret
and
jecxz
out
gs
lods
pop
jbe
mov
movsl
in
imul
cli
mov
cmpsl
insb
ds
dec
aam
mov
inc
mov
dec
rol
or
add
insb
sub
mov
mov
mov
push
or
fnstsw
outsb
addr16
adc
xchg
cmp
shlb
outsb
subl
and
mov
sub
add
mov
push
mov
inc
push
dec
in
andb
xor
mov
outsb
shl
insb
stc
dec
add
jle
lock
shll
xor
xchg
jne
mov
inc
mov
mov
fwait
push
mov
inc
pop
and
jo
mov
pop
adc
test
sti
dec
ret
jns
inc
cli
pop
mov
in
mov
dec
mov
push
ja
je
mov
ja
add
popa
mov
lock
fnstcw
push
add
clc
fwait
add
jae
loope
js
jb
repnz
and
push
pop
mov
inc
sti
sub
xor
xchg
movsl
andl
iret
jae
xchg
jo
arpl
or
lods
jne
xor
repnz
jmp
jecxz
dec
mov
sbbl
mov
orl
in
shrl
ljmp
and
jnp
and
sbb
clc
ret
push
aas
int
and
push
dec
rolb
aad
test
loope
out
mov
mov
pop
rcrl
addr16
jbe
sbb
push
mov
lahf
fs
daa
movsb
jmp
repnz
jnp
outsl
jecxz
lea
mov
jg
popl
pop
xchg
pop
icebp
outsb
push
sbb
test
mov
ret
pop
pop
fildll
or
out
and
fsubrl
int
mov
clc
fwait
or
sbb
scas
inc
jle
jns
cli
and
insl
sbb
dec
xchg
cwtl
int3
adc
cs
mov
cmp
mov
sub
or
mov
jmp
push
pop
and
pop
leave
and
sti
lcall
pop
adc
adc
adc
add
jecxz
test
cmpsb
sub
xchg
lods
xchg
xchg
pop
push
insl
lcall
mov
sub
fs
mov
pop
mov
nop
sbb
insl
xor
push
out
cltd
out
dec
jo
int
outsl
pop
push
aam
rcl
jl
mov
sbbl
lahf
or
mov
mov
mov
fbld
sub
sbb
dec
setb
cmpsl
ret
pop
gs
pop
or
mov
ljmp
loopne
out
pop
stos
aas
fisubs
stc
add
test
arpl
fwait
sbb
pop
lds
sbb
stos
adc
mov
xor
add
sub
xor
cwtl
xchg
cmp
cmp
push
hlt
pop
inc
ret
pushf
mov
sahf
sbb
cmpsl
push
out
jne
rol
mov
jo
pop
jmp
pop
sub
mov
jl
pop
scas
ret
shl
add
mov
outsb
icebp
ljmp
xchg
mov
jo
jge
lcall
pop
xchg
fimuls
mov
ja
xchg
lret
and
push
sbb
dec
xor
mov
xchg
and
jbe
cmp
push
movsl
dec
repnz
jno
xchg
dec
cli
lods
sub
sub
fucomi
jg
sbb
mov
cmp
xor
pop
pop
clc
aam
imul
dec
dec
xchg
or
push
and
lcall
push
sub
sbb
out
pop
stc
testl
sbb
dec
lea
out
dec
push
ffreep
add
cmp
lcall
ret
neg
subb
fs
es
jb
clc
popf
jmp
mov
es
sarb
das
iret
in
and
fstpl
jge
and
sub
pop
in
pop
adc
dec
push
insb
sbb
fmuls
inc
jae
add
sub
js
jb
sub
stc
subb
sub
imul
add
xor
or
pop
pushf
insb
jae
out
sub
pop
dec
sbb
pop
xor
in
test
or
scas
adc
rclb
xchg
dec
xchg
mov
fsubrs
xor
call
push
mov
xrelease
stos
scas
out
add
idivb
das
xchg
dec
aad
pop
test
push
sbb
test
xchg
notl
xlat
int
aas
xchg
movsb
repz
mov
cli
xor
dec
cmpsb
rcll
aad
movsl
adc
jne
mov
sarb
fistpll
jo
cmp
out
mov
xorb
aam
hlt
xacquire
test
jne
mov
sub
je
mov
outsb
inc
adc
xchg
mov
lahf
clc
sbb
leave
ret
inc
sub
clc
shl
scas
fsubl
cmpsb
aas
mov
add
mov
xchg
fmulp
pop
in
sub
stos
in
pop
repz
fisttpll
jmp
xor
push
and
mov
mov
lret
adc
mov
add
mov
mov
mov
sub
or
mov
cmpl
mov
mov
movl
mov
jmp
mov
mov
jl
push
pushl
push
pushl
push
call
not
adc
adc
mov
sub
mov
movzbl
sub
mov
mov
shrd
shr
andl
mov
adc
mov
xor
addl
xor
or
mov
movl
xor
or
sbb
movl
movl
movl
xor
add
mov
adc
movl
movl
movl
cmpl
movl
notl
movl
movl
jmp
not
jge
push
push
pushl
push
push
call
addl
xor
movl
addl
adcl
movl
add
movl
and
movl
sub
movl
movl
movl
movl
sbb
movl
movl
movl
mov
xor
movl
movl
subl
movl
add
movl
movl
movl
movl
cmpl
movl
movl
jmp
movl
movzwl
jne
push
call
addl
andl
adcl
or
subl
andl
cmpl
movl
movl
jmp
not
ja
push
call
subl
andl
subl
orl
subl
andl
mov
shl
orl
mov
push
subl
push
xorl
push
xorl
jmp
and
pop
and
push
dec
mov
add
adc
adc
adc
mov
sub
pushf
pop
xor
mov
inc
pop
fsubrl
dec
xchg
popf
sub
cld
mov
jp
fmuls
leave
add
insl
fistps
dec
data16
js
mov
pusha
rcll
dec
mov
cwtl
test
data16
ja
xor
mov
sti
popa
fstl
enter
imul
stc
pop
dec
ret
dec
nop
and
repz
shr
push
mov
pop
sbb
leave
in
mov
es
popf
push
mov
push
pop
test
iret
push
les
movsb
sbb
out
addb
out
cs
into
pop
and
int3
sub
or
lods
mov
pop
stc
add
cmpsl
cli
jmp
lcall
iret
popf
fs
leave
ss
shrl
call
decb
fcompl
push
stos
lods
inc
pusha
orl
jg
push
jge
mov
and
jg
pop
ret
shl
sbb
movsl
cwtl
subl
push
jns
pop
nop
outsl
mov
inc
test
in
fstl
and
pop
imul
lock
mov
fstps
js
sbb
divl
jbe
mov
push
add
mov
mov
aam
xor
dec
mov
les
mov
lods
mov
fwait
out
push
ret
mov
sub
int3
mov
rolb
mov
add
hlt
scas
jnp
pop
mov
call
int
nop
shll
xchg
orl
lds
sub
sbbb
je
and
mov
leave
dec
sgdtl
ljmp
pop
sbb
ds
clc
cli
jp
cmpsl
lcall
roll
insb
xlat
dec
mov
out
mov
in
scas
xorb
mov
sbb
loopne
mov
jb
mov
sub
fwait
bound
fs
repz
mov
pop
fisttps
in
push
jmp
scas
aas
mov
stos
mov
mov
fnstcw
call
xchg
int
adc
cmpb
adc
test
and
test
in
inc
inc
mov
out
fcomps
lds
push
dec
shrl
mov
xchg
das
out
xor
cs
test
mov
popaw
scas
repnz
jmp
repnz
push
test
or
inc
leave
stos
stos
rclb
pop
ret
and
jb
push
into
jns
jge
push
xchg
xor
hlt
xor
add
loop
repz
sbb
outsb
mov
stos
fs
add
lods
daa
mov
jecxz
xor
add
int
fsub
push
dec
sub
and
dec
inc
push
movsb
andl
dec
outsl
outsb
sahf
stos
call
pop
cmp
shl
push
imul
adc
stos
jbe
mov
mov
ja
pop
pop
or
mov
call
push
aas
sahf
mov
mov
cld
inc
and
push
call
mov
sbb
mov
mov
xor
xor
not
jmp
sub
sub
xchg
je
dec
std
adc
adc
adc
loop
loopne
stc
call
xcrypt-ecb
cmpsl
mov
out
div
testl
sbb
pop
inc
fstpl
xchg
sub
clc
pop
repz
pop
je
pop
cmpl
pop
bound
inc
mov
jnp
orb
xlat
cmpsb
pop
icebp
clc
mov
dec
rcll
ljmp
pop
test
dec
arpl
pop
outsb
sbb
fucom
xor
dec
das
add
imul
xchg
scas
add
ficomps
fmull
aas
xlat
push
outsl
iret
and
movsb
inc
xchg
adc
add
cs
cmpsb
add
or
mov
andb
out
inc
rclb
test
pop
push
fnstsw
sbb
jl
and
push
lahf
test
jg
and
out
pop
das
sbb
rol
shl
mov
adcl
dec
add
mov
sahf
mov
rcll
pop
xor
and
and
cmp
inc
fistl
inc
adcb
adc
push
jmp
cmp
test
dec
pop
push
es
inc
mov
jecxz
fists
pop
mov
mov
fisttps
addr16
js
test
cmpb
loope
sarb
in
call
fnstenv
dec
ljmp
mov
stos
push
dec
jl
push
pop
rol
mov
js
inc
mov
subb
data16
sub
sub
push
out
pop
jo
in
aad
mov
xor
cmp
dec
cmp
sahf
mov
xor
pop
scas
mov
loop
fisttpl
dec
loopne
add
mov
mov
xchg
inc
lret
fsqrt
int
xchg
mov
jae
stc
bswap
xchg
xchg
movsl
in
outsb
repz
mov
cmovs
sub
push
enter
repnz
mov
insl
or
cld
in
mov
lret
inc
out
or
cmp
pop
inc
sti
dec
sub
lret
in
mov
ret
clc
sbb
mov
mov
iret
out
or
pop
cmc
pop
inc
mov
or
pop
movsb
outsb
orl
aad
jg
add
mov
cmp
push
inc
and
lahf
dec
or
ljmp
mov
js
cmp
movsb
and
mov
jbe
lock
ret
imul
test
jp
cmp
mov
cmp
inc
cmp
out
stc
in
adc
inc
cmpsb
mov
push
addr16
movsb
and
mov
sahf
test
sub
pop
add
dec
hlt
sbbb
cmp
mov
cli
movsw
mov
scas
push
cmp
out
push
xchg
dec
mov
lods
pop
repnz
sbb
inc
ret
jae
and
xor
aad
cmp
xor
sub
aad
dec
xor
push
xor
loope
and
adc
imul
push
ds
lock
inc
lods
sbb
mov
add
mov
xor
add
add
mov
sub
or
mov
mov
sub
mov
lea
xor
or
mov
and
mov
adc
mov
adcl
or
and
addl
mov
or
adcl
xor
movl
cmp
movl
jne
mov
mov
sub
sub
mov
sbb
mov
shrd
xorl
shr
mov
or
mov
movl
shl
adcl
xor
xorl
xor
addl
or
movl
mov
movl
cmp
jne
adc
mov
mov
mov
sub
add
mov
xor
sbb
mov
cmpl
movl
mov
jmp
notl
jbe
push
pushl
pushl
pushl
pushl
push
push
call
xor
subl
notl
or
mov
sbb
mov
cmpl
movl
movzwl
mov
jmp
movl
jle
push
call
sbbl
xor
neg
subl
sbb
mov
orl
shrd
subl
mov
dec
mov
addl
xor
shr
xor
mov
sbbl
xor
adcl
or
xorl
shl
xor
sub
and
mov
and
mov
xor
add
xor
mov
xorl
add
mov
neg
mov
adc
mov
and
shrd
orl
shr
mov
mov
add
mov
mov
xor
mov
mov
adc
xor
shl
negl
xor
cmpl
mov
mov
mov
jmp
movl
jb
pushl
push
push
pushl
pushl
push
push
push
pushl
pushl
pushl
pushl
pushl
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
or
mov
add
jmp
lcall
imul
loopne
push
repz
adc
adc
sub
fstpt
jbe
mov
jl
loopne
enter
dec
dec
pop
scas
mov
ljmp
pop
inc
mov
push
movsl
repnz
add
repnz
cltd
lods
movsl
push
mov
fwait
pop
mov
sub
pop
pop
xchg
cmp
sbb
jl
sbb
ror
movsl
mov
add
push
pop
jmp
cmp
mov
mov
idivl
pop
pop
sbb
in
cmp
mov
loope
pop
add
dec
test
int3
xchg
sahf
int
and
pop
push
mov
lcall
cs
loop
into
aaa
aas
push
lahf
inc
ds
fcoms
mov
mov
aad
fldenv
mov
nop
xor
push
test
in
adc
dec
jecxz
inc
mov
ss
or
jo
sub
aad
out
popf
imul
mov
icebp
pop
clc
sarl
fmulp
sub
enter
outsb
or
push
push
mov
push
mov
pop
mov
sbb
sbb
leave
decl
dec
xchg
mov
xor
aas
pop
fwait
mov
repz
out
inc
sub
xchg
add
pop
shll
pushf
test
mov
mov
sbb
push
mov
mov
xor
xchg
inc
pushl
sub
adcl
sahf
clc
fidivl
scas
dec
sub
and
sub
mov
add
add
loop
pop
in
neg
out
xchg
loopne
or
mov
xlat
xchg
push
or
or
mov
addb
fisttps
jg
inc
mov
scas
jo
xchg
cli
test
xchg
and
hlt
mov
sarl
mov
lds
mov
cmp
test
out
lea
sti
pop
sbb
inc
xchg
sub
add
jae
inc
aas
hlt
fcompl
jg
ja
mov
sarb
mov
xchg
movsl
mov
cmpsb
outsb
inc
pushf
scas
dec
icebp
dec
add
or
mov
js
adc
adc
insb
push
lods
addr16
mov
stos
movsl
ds
daa
mov
or
mov
dec
cs
repnz
inc
loope
push
push
jmp
add
loope
jle
cmpsl
shrb
nop
daa
stos
aaa
mov
xchg
mov
xor
push
cmc
adc
jecxz
pop
pop
std
mov
sub
xor
and
xchg
mov
adc
or
xchg
in
test
faddl
or
out
out
sbb
lret
call
mov
stos
xlat
xchg
dec
and
xor
adc
xchg
pop
fisubs
iret
pop
xchg
rcrb
addl
dec
lock
in
cmp
xchg
inc
pop
mov
mov
fnstsw
adc
cmpl
push
mov
into
insl
fcomp
dec
lea
and
hlt
pop
rorl
add
xchg
cltd
bound
and
push
jo
xor
test
call
adc
adc
mov
cs
movsb
cmpsb
mov
mov
popf
pop
jle
out
xchg
jo
aaa
movzwl
or
aaa
mov
sub
adc
mov
inc
mov
sbb
adc
lods
dec
jae
push
mov
push
mov
xor
stos
inc
push
or
inc
clc
cmpsb
data16
sti
gs
push
fnsave
mov
dec
inc
icebp
xor
loop
repnz
flds
add
in
sub
pop
push
cli
shll
jl
popl
mov
sbb
cwtl
aas
aaa
test
ss
jge
dec
sub
pop
sub
ret
aad
enter
xor
sub
add
inc
sbb
wbinvd
mov
pop
mov
xchg
sbb
ret
adc
sbb
jmp
sbb
xchg
adc
xor
mov
cmp
lret
dec
mov
sbbl
movsl
out
fwait
outsb
mov
pop
out
mov
sbb
add
xchg
ja
xchg
sub
mov
jns
mov
cmp
adc
jns
and
aas
or
imul
outsl
lock
repz
repz
push
sub
jae
add
in
nop
jne
push
sbb
cwtl
pusha
xor
or
pop
adc
adc
andl
int3
xchg
out
inc
out
or
push
out
adc
sbb
jmp
xchg
ret
push
jg
icebp
adc
pop
jle
or
es
loop
pop
cmp
dec
std
jmp
xchg
bound
lret
filds
pusha
ds
fsubrl
lcall
cmp
loop
cltd
cmp
cmpsb
jno
lock
mov
pop
in
in
inc
fdivs
rorb
and
mov
add
pop
ficoml
add
aaa
inc
call
loope
movsl
loopne
stos
ret
push
test
lods
cmp
pop
in
mov
jae
jl
adcl
push
xor
mov
js
add
cmp
pop
inc
scas
or
cmc
mov
mov
add
dec
jnp
sub
adc
push
loopne
loope
lcall
jae
jp
popa
inc
loope
xor
daa
jbe
dec
jmp
mov
jl
stos
sti
xchg
sub
push
xchg
xchg
adc
adc
js
mov
jns
lea
xchg
jns
fs
movsb
inc
xchg
les
scas
dec
rcrb
adc
data16
arpl
aam
leave
xor
xor
les
push
std
testl
cmp
into
ret
jecxz
push
test
or
gs
outsl
leave
dec
inc
bound
pop
cmp
test
add
jmp
ds
je
cmp
cltd
and
pop
cwtl
xor
push
xchg
add
jmp
xchg
mov
sub
add
and
xor
mov
xor
jb
mov
nop
xorb
jl
mov
push
inc
outsb
jae
into
in
sbb
iret
xchg
mov
xor
add
adc
andb
iret
dec
or
stc
in
dec
inc
pop
dec
cwtl
fnstsw
iret
cld
mov
cmp
mov
fs
loopne
sbb
xor
outsl
xchg
shrd
andl
shr
mov
sbb
mov
mov
xor
orl
xor
or
shl
orl
lea
neg
mov
movzbl
add
mov
mov
shrd
subl
shr
mov
cmpl
mov
mov
mov
jmp
mov
movl
jae
push
pushl
pushl
call
dec
not
or
sbb
adcl
sbb
mov
mov
adcl
xor
mov
xor
orl
or
xorl
shl
add
imul
mov
movzwl
xor
mov
mov
shrd
mov
adc
mov
movl
xor
shr
mov
sbb
jmp
out
pop
out
pop
pop
jns
lcall
inc
ljmp
adc
adc
mov
loop
imul
xlat
dec
sbb
lods
jg
nop
mov
push
gs
mov
xchg
jo
cmpsb
push
xor
movsb
pop
jmp
clc
push
adc
adc
stos
mov
push
js
cmp
xchg
shlb
seto
gs
flds
rorb
aas
mov
clc
fwait
add
roll
adcb
xchg
call
inc
fistpll
movl
jnp
sbb
push
xchg
mov
stos
mov
and
ja
ficomps
inc
add
mov
xchg
out
mov
dec
dec
add
push
sbb
mov
rcll
ljmp
enter
leave
adc
pop
in
pop
adc
pop
jo
stos
fxch
adc
lret
out
cltd
pop
popa
adc
mov
jmp
pop
mov
xor
cmp
fsubl
lods
insl
sub
mov
sbb
sbb
push
nop
in
shufps
xchg
jno
nop
xor
sub
insb
pop
jl
mov
in
fisubrl
xchg
popa
stc
jns
or
je
aas
inc
call
cmpsl
dec
push
arpl
sub
sub
or
iret
add
jl
icebp
ds
subl
arpl
cmp
arpl
xor
test
mov
adc
add
stc
aad
xlat
pop
cmp
push
jmp
and
cwtl
jp
fwait
pop
bound
push
pop
fs
jb
insl
loop
push
sbb
ds
mov
add
add
pop
push
sbb
mov
dec
and
sub
std
xor
adc
and
or
ret
jecxz
xchg
mov
push
daa
into
lds
imul
aas
loop
push
cli
pop
flds
and
rcll
xor
inc
fildll
lcall
clc
repnz
imul
insl
lds
mov
bound
in
call
mov
out
test
hlt
mov
mov
stc
dec
sbbl
outsb
pop
inc
stos
sbb
sbb
pop
roll
pop
lods
shl
add
mov
mov
pop
loopne
xchg
add
and
xchg
mov
stos
orl
mov
mov
rol
lea
sbb
add
jmpw
xchg
mov
push
int
outsb
xor
aam
addr16
push
shrl
inc
shrl
rorl
sbb
cld
push
decl
mov
mov
mov
mov
add
popf
inc
xchg
or
mov
push
js
push
sub
mov
push
push
inc
int3
or
aam
stc
jns
mov
in
repz
iret
std
cmp
aaa
xchg
cmpsb
sub
jbe
inc
cmpl
push
test
mov
dec
in
jbe
mov
es
add
arpl
adc
pop
push
jns
das
ret
lahf
in
testb
mov
mov
adc
shll
jge
mov
ret
fstpt
or
orl
shl
sub
movl
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
mov
movl
jmp
notl
notl
ja
pushl
pushl
pushl
pushl
push
push
call
adcl
mov
add
sbb
add
and
mov
subl
shrd
mov
cmpl
movl
mov
mov
jmp
movl
ja
push
call
or
mov
mov
adc
movl
mov
add
movl
dec
mov
xor
shl
xor
orl
or
shr
mov
mov
mov
mov
xorl
shrd
shr
mov
sbb
mov
andl
mov
xor
sbbl
xor
or
orl
shl
imul
orl
sub
jmp
mov
dec
mov
shrd
orl
mov
mov
sub
mov
xor
andl
shl
xor
xorl
or
orl
shr
xor
mov
mov
cmpl
mov
mov
jmp
movl
movl
jae
call
and
xor
xor
xor
or
sub
add
subl
mov
mov
sub
imul
adc
sbb
jmp
popa
aad
mov
mov
popf
adc
xor
adc
adc
pop
je
loopne
or
mov
sahf
mov
sub
inc
mov
mov
mov
cs
dec
pushf
mov
cwtl
or
push
xor
fld
rcll
mov
sbb
add
mov
movsb
ljmp
movsl
mov
icebp
inc
push
push
jo
xchg
mov
push
stc
bnd
and
mov
imul
outsl
xor
xchg
pushf
aam
sbb
and
or
loop
jge
sbb
add
xor
addr16
test
addr16
jg
jo
in
ficoml
cmpsl
aaa
mov
inc
mov
scas
cld
andb
dec
sti
sbbl
or
mov
add
test
sbb
icebp
sub
test
mov
flds
mov
mov
mov
sti
pop
xor
dec
jmp
fs
add
and
pop
enter
outsb
mov
push
jmpw
mov
cmpsb
pop
fs
bound
cmp
iret
cltd
pop
int
cmc
ja
jnp
hlt
cmp
negl
adc
mov
fcomps
jg
cmp
je
and
leave
cmpb
loop
xchg
rcr
nop
cmp
jmp
mov
mov
mov
push
and
test
sbb
dec
sbb
cmpl
in
mov
dec
xchg
aaa
cld
or
mov
or
fimuls
cmp
cmp
subb
scas
pop
or
jg
xchg
out
cmp
jno
aaa
sub
mov
and
add
sub
push
xor
push
sub
test
ret
sub
rcll
aaa
ret
into
add
xor
cmp
fnstcw
cmpsb
mov
dec
or
inc
aad
xchg
test
add
and
mov
lret
fists
inc
sbb
xchg
xlat
in
insl
add
dec
and
add
adc
fildll
lds
es
add
and
cmp
data16
jns
shlb
mov
aaa
mov
dec
cs
sbb
cmp
addr16
repz
push
inc
inc
jl
adc
jle
out
orl
dec
mov
xlat
fucomp
cltd
pop
mov
push
out
dec
loop
out
sbb
cmp
icebp
out
leave
xor
xor
inc
pushaw
repz
hlt
inc
int3
cs
lcall
or
jg
mov
and
aad
and
es
or
imul
mov
jge
or
fisttpll
jecxz
outsl
add
dec
in
add
je
setnp
sti
xchg
cmpsb
loopne
out
sbb
repnz
pop
loope
xchg
inc
test
in
jp
inc
mov
inc
rorb
adc
or
lcall
sbb
je
test
popf
xchg
test
testl
jl
sbbb
repnz
mov
daa
dec
cmp
leave
xchg
aaa
inc
sub
std
sbb
lcall
push
inc
add
add
sub
add
jmp
notl
je
push
push
call
sub
movzbl
sbb
movzbl
sbb
sub
and
mov
adcl
shrd
sbbl
shr
mov
or
mov
mov
sbb
mov
xor
xor
adcl
or
xorl
shl
add
add
xor
mov
movl
mov
shrd
shr
mov
cmpl
mov
mov
jmp
movl
movl
jbe
push
push
push
push
call
and
xor
add
add
add
movl
xor
add
mov
xor
sub
mov
subl
xor
shl
xor
or
sbb
mov
cmpl
mov
mov
movzbl
jmp
notl
jl
push
pushl
push
push
push
call
sub
adc
sbb
subl
add
movl
adcl
mov
mov
add
movl
cmpl
movzbl
mov
mov
jmp
movl
movl
jl
push
push
push
push
pushl
pushl
push
pushl
call
sbb
sub
add
and
add
sbbl
sub
mov
movl
mov
sbb
movl
mov
mov
mov
or
shrd
subl
shr
cmpl
movl
movl
jmp
movl
jae
pushl
pushl
pushl
call
sbb
add
and
subl
adc
and
adcl
mov
mov
mov
add
mov
subl
xor
shl
and
xor
xorl
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
jmp
or
adc
inc
add
pushf
lods
inc
cltd
add
adc
adc
lods
cmpl
aaa
xchg
jecxz
fs
adc
sub
sub
mov
push
cld
xor
mov
in
sti
push
rorb
mov
sub
pop
and
fwait
mov
dec
dec
mov
inc
or
lcall
adc
mull
xor
ret
lret
and
push
cmp
outsl
mov
imul
jns
clc
lahf
mov
inc
dec
cltd
jbe
pop
sub
rorb
mov
test
std
daa
adc
push
xchg
pop
sub
push
adc
dec
gs
je
cmpsl
fldcw
sub
cmpsb
test
pop
fildl
sub
fistps
jne
pop
in
xor
repnz
mov
sub
leave
push
lret
incb
push
js
push
pop
and
mov
shlb
jne
gs
sub
inc
hlt
jp
cli
adc
test
repnz
mov
daa
test
test
adc
mov
mov
or
pop
or
out
sub
sbb
into
pop
jg
mov
popa
xchg
xor
sbb
or
nop
mov
shrb
aad
loopne
sub
sub
and
mov
or
jmp
js
mov
stc
shrb
jl
mov
mov
ret
mov
test
shr
push
jne
xor
sub
add
inc
and
mov
mov
push
scas
push
aam
ds
cmp
or
pop
mov
in
fdivrl
jecxz
daa
data16
jle
pusha
sbbb
sub
or
shr
dec
or
pusha
add
or
and
cmp
or
sbb
pop
in
es
jne
es
stos
fldl
inc
mov
and
js
popa
jecxz
jno
push
sub
repz
jns
hlt
add
sbb
and
jmp
mov
mov
nop
loop
inc
inc
mov
or
pop
pushf
inc
iret
jnp
std
in
mov
and
mov
inc
mov
mov
pop
lods
cmp
xchg
ja
scas
pop
xchg
mov
mov
mov
lds
xchg
jne
mov
addr16
sbb
pop
mov
pop
lahf
xor
popa
stc
xor
sbb
mov
xchg
mov
jp
shl
or
pop
xchg
movsl
insl
imul
mov
mov
dec
jnp
and
ja
fs
dec
jne
mov
mov
lods
in
lret
lods
aad
adc
clc
pop
divl
icebp
fs
sbb
sub
mov
dec
arpl
iret
fs
inc
pop
xchg
call
jge
push
js
shl
and
xor
push
stos
int3
mul
and
push
pusha
inc
jae
ljmp
fxam
fs
in
insb
lea
dec
inc
dec
enter
xchg
jmp
add
mov
push
push
jbe
arpl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
jmp
gs
test
sbb
xchg
js
cmp
adc
adc
adc
fldl
xchg
repz
inc
outsl
subb
icebp
cmp
nop
pop
adc
stc
out
cmp
lods
xor
mov
adc
or
insl
mov
out
dec
scas
or
dec
mov
mov
cli
outsb
push
pop
into
jmp
daa
mov
fbstp
testb
mov
and
lock
mov
movsl
mov
popa
in
dec
cmp
in
test
sbb
mov
pop
xchg
mov
cmc
leave
sub
jo
add
les
gs
adc
sbb
and
mov
insb
lcall
in
and
and
test
mov
dec
lahf
and
cmc
cmpsl
pop
add
shr
mov
mov
int
mov
call
jmp
aas
rorl
ljmp
test
je
jno
mov
sub
loop
data16
aad
inc
cmpsl
lods
xor
jb
fnstcw
pusha
aas
push
pop
adc
enter
aaa
fmuls
in
outsl
fs
xchg
sbb
lahf
sbb
jle
inc
scas
mov
push
addr16
orl
je
leave
outsb
xorl
adc
xor
mov
lret
xor
movsl
dec
sbb
cli
pop
ficoms
pop
push
dec
jb
push
and
mov
add
gs
out
in
mov
adc
sti
sbbb
or
aam
mov
push
sub
test
or
lds
aad
out
ficoml
repz
pop
in
jae
fdivl
and
cmp
inc
loopne
sti
jae
loope
push
out
cmp
mov
lret
loop
jbe
jmp
les
lahf
jmp
mov
fdivrs
scas
dec
xchg
mov
jge
pop
addr16
xchg
jl
dec
dec
push
xchg
sub
iret
dec
rorl
xor
clc
std
adc
lock
icebp
movsl
js
shll
sub
jl
jnp
push
adcl
or
ljmp
aas
lods
insb
mov
jb
add
xchg
int
out
ja
mov
add
fimull
pop
pop
pop
lret
jno
inc
cmp
xchg
mov
pop
jmp
test
das
inc
xor
sbb
in
cwtl
ret
shrb
cld
test
xor
loopne
add
sbb
dec
xchg
jo
sbb
xchg
movsl
outsb
dec
mov
mov
lea
popa
outsb
fldt
popa
in
cmp
xchg
cli
cmpsb
jo
dec
movsl
push
cmp
cmp
mov
inc
and
inc
andb
pop
pop
dec
jno
popf
push
insb
push
mov
jnp
ja
jns
enter
jge
int
and
xor
sbb
lods
dec
std
verr
sub
add
ror
cmp
dec
or
sbb
push
add
aas
test
jnp
push
xor
sub
xchg
imul
clc
sbb
inc
pop
xchg
push
aam
shll
jg
jnp
xchg
sub
jns
loope
jp
or
xchg
std
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
jmp
cli
mov
cltd
mov
negb
adc
adc
adc
or
pop
fisttps
and
mov
inc
test
notl
mov
repz
sub
sbb
repnz
popa
adc
mov
lcall
cs
jnp
add
in
sbb
lods
mov
pop
jo
xor
xor
hlt
out
pop
push
or
and
test
shr
sub
mov
movl
dec
mov
sbbb
pop
int3
push
jle
insb
scas
mov
mov
fs
lcall
lcall
rorb
jmp
pop
mov
inc
xor
jo
xor
das
push
js
ret
fiadds
or
scas
sbb
xchg
pop
ret
test
xchg
dec
xlat
dec
pushl
es
or
stos
xor
mov
daa
xor
loop
subl
fcompl
inc
mov
xor
lock
js
fmull
ss
mov
push
cmc
adc
push
scas
popf
cmp
popa
inc
adc
daa
insl
sti
push
aaa
xor
scas
xchg
cmp
aaa
ds
add
pop
repz
cli
shlb
mov
and
pop
sbb
push
push
sarl
jecxz
sbb
loop
dec
aad
leave
call
or
hlt
andl
sti
and
inc
cmpl
pop
les
scas
scas
movsl
aas
xor
stos
push
rcl
adc
lret
enter
imull
stos
push
andb
mov
push
sub
push
testl
mov
int3
push
push
lcall
outsb
repnz
das
cmpsb
sbb
mov
jbe
test
push
mov
mov
pop
jno
and
cld
cli
and
sbb
or
cmp
das
inc
push
xor
mov
mov
insl
testb
pop
mov
std
pop
pop
ret
xor
dec
push
inc
mov
rcr
outsl
mov
xor
imul
jno
jbe
sbb
loop
push
pop
outsl
cwtl
cs
xor
jo
jl
hlt
inc
jnp
sbb
fs
out
imul
xchg
cmpsl
stc
jle
add
xchg
fmull
fisttpll
inc
dec
push
or
pop
insb
out
sub
lcall
adc
sub
stc
sbb
shrd
pusha
sti
fldl
pop
xchg
xchg
inc
inc
cmp
pushf
negb
mov
mov
andl
pop
cmp
mov
pushf
sbb
push
mov
add
fs
mov
in
stos
jecxz
and
dec
imul
inc
xchg
sbbb
sbb
out
loope
cwtl
xchg
sub
xchg
and
xchg
into
push
ja
dec
stos
xchg
loope
xor
cwtl
repnz
neg
mov
ret
insb
sbb
mov
movsl
rol
and
xor
adc
int
and
lea
sbb
sub
jae
lret
ret
shr
aaa
daa
add
lock
test
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
jmp
in
repz
jmp
les
inc
stos
xchg
test
adc
adc
xlat
popf
push
xor
mov
pop
jo
cmpsb
add
or
mov
cltd
pusha
or
jl
xor
and
fcomps
cmp
push
lcall
movsl
xor
bound
in
in
jmp
sbb
pop
and
fs
loop
adc
pushf
imul
jno
jae
adc
push
inc
pop
repz
dec
pop
sub
dec
push
jae
pop
fldl
mov
push
popa
pop
cmp
mov
daa
loopne
pop
loope
adc
dec
jp
sbb
jge
je
lods
xchg
add
cs
stos
xlat
add
lods
push
dec
int3
sub
in
mov
lods
sahf
cmp
test
pop
pop
pop
jmp
jmp
mov
jns
sbb
adc
adc
push
xor
inc
dec
mov
xor
fs
sbb
cmp
stos
lret
mov
or
push
push
gs
imul
leave
rclb
pop
adc
inc
inc
imul
rcrb
and
jns
testl
and
mov
jp
xor
mov
jno
push
stc
push
and
push
mov
pop
sbb
xor
rolb
stc
repz
shr
nop
cmc
inc
inc
clc
inc
jo
inc
data16
shl
in
popf
mov
xor
pop
scas
mov
push
jmp
xchg
std
mov
sub
sub
pop
fidivrs
mov
bound
aad
out
movsl
jno
xor
mov
inc
xchg
fisubs
inc
ljmp
jno
data16
fsub
ror
xchg
push
sub
sub
ret
jns
adc
cmp
mov
aad
lods
sbb
lock
std
cmp
xor
jmp
cmp
loop
sarl
repnz
out
cmc
adc
jb
gs
add
fidivs
movsb
sbb
adc
inc
pop
jo
and
sub
xchg
cmp
fisubs
jmp
mov
fs
xchg
mov
fwait
in
pop
or
lds
rep
jb
xchg
or
test
nop
cmpsb
mov
xchg
movsl
ja
pop
and
pop
scas
loopne
mov
mov
jmp
sbb
subb
and
jnp
outsl
cmpsb
dec
mov
add
cwtl
add
int
dec
mov
call
mov
pop
jl
outsl
lds
lret
gs
in
lods
out
aam
pop
adc
insl
in
cmpl
xor
or
mov
int3
sub
aas
fdivr
jmp
cltd
outsl
xor
dec
int3
loope
xchg
xlat
add
imul
and
outsl
pop
fbstp
lea
add
mov
andl
iret
je
cmp
rolb
lods
mov
addb
mov
loopne
sbb
inc
loopne
pop
xlat
in
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
jmp
fs
push
add
aaa
sbb
push
push
mov
push
ret
adc
adc
mov
mul
sbb
or
cltd
jl
sbb
push
and
xor
add
pop
iret
jle
sub
dec
stos
and
aaa
mov
adc
stos
inc
adc
add
movsl
mov
jecxz
loopne
push
imul
xor
loope
test
stos
add
pushf
pop
mov
iret
push
ror
and
lcall
imul
cmp
and
ss
mov
lds
orl
cmp
repz
jno
push
and
or
jmp
ljmp
jl
je
inc
ret
xchg
pop
in
imul
mov
sarb
or
or
ja
lret
cmpxchg
negb
and
cwtl
mov
nop
adc
lea
shlb
jp
inc
cmp
cs
sbbb
adc
dec
mov
pop
mov
xchg
nop
add
adc
pop
sbb
scas
test
fninit
ds
sti
cmp
icebp
or
xor
jl
cmp
call
test
shlb
pusha
arpl
adc
out
dec
adc
ss
popl
test
dec
sbb
enter
cmc
movsb
mov
sbb
or
adc
mov
push
xchg
push
fmuls
xor
pop
call
pusha
bound
out
sub
data16
and
mov
insb
sbb
jae
test
jo
aam
sahf
sbb
xor
in
js
push
or
cltd
imull
mov
jecxz
dec
int3
xor
inc
jb
pop
scas
sti
out
pop
ja
mov
jnp
pop
imul
das
orl
push
mov
mov
cltd
mov
repnz
jg
push
testl
inc
mov
int
and
and
adc
sub
and
xchg
gs
movsl
scas
sub
sti
test
sub
ret
sbb
inc
ljmp
jg
call
popf
mov
cmpsb
push
shl
adc
mov
std
sub
in
mov
adc
pushf
mov
cmpl
xor
jmp
and
ret
int3
pop
or
cli
sti
or
adc
mov
jo
xlat
push
cmp
adc
sbb
lds
test
mov
insl
inc
aaa
scas
mov
jecxz
cs
inc
lret
add
xor
fdiv
adcl
dec
xlat
sbb
pop
out
test
mov
test
jb
adc
add
add
add
mov
dec
xchg
andb
test
jg
fisubrs
dec
pop
inc
jo
stos
dec
xor
add
xchg
push
jae
push
jmp
in
cmpsl
hlt
test
out
fbstp
mov
dec
add
inc
insb
xor
stos
lods
fdivr
mov
xor
lea
loop
push
nop
xchg
pop
mov
int
outsb
outsb
repz
inc
lahf
mov
lds
jecxz
dec
nop
pop
cmp
leave
sbb
dec
xor
push
movsb
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
jmp
lods
dec
sbb
sbb
sbb
and
jle
mov
adc
jmp
or
shrd
xor
lods
popa
push
push
dec
mov
outsl
push
sub
rorb
cld
pop
mov
cltd
sbb
inc
sbb
adc
push
enter
into
addb
test
andb
dec
sbb
mov
mov
iret
aaa
hlt
inc
in
jle
ds
cwtl
lock
pop
repz
mov
sub
sub
out
fmuls
iret
rcr
push
pop
imul
adcb
aam
mov
xor
pushf
mov
sub
test
in
hlt
movsl
stos
inc
xchg
pop
popa
das
inc
movsl
jo
mulb
inc
test
cltd
iret
adc
adc
testb
pop
jecxz
pop
lods
in
das
sub
mov
push
mov
or
hlt
xchg
insl
movsl
dec
aam
lret
adc
insb
inc
xor
fnstenv
adc
sub
test
enter
pop
or
out
mov
enter
loop
daa
xchg
test
pop
push
fucomp
mov
or
pop
or
data16
in
cld
mov
out
cmp
xchg
stos
xor
cmp
es
scas
je
jg
mov
icebp
lahf
and
scas
lahf
and
mov
in
fildll
mov
push
add
fs
mov
adc
pop
sahf
call
jg
mov
addr16
and
inc
cmc
inc
inc
aas
pop
push
pop
inc
loope
out
pop
xor
xor
js
shl
popf
loope
adc
test
push
mov
xchg
or
popf
jae
mov
push
out
bound
paddb
sbb
aaa
in
pop
stc
cmp
push
es
mov
dec
xor
adc
in
fistpll
out
data16
into
and
pop
aas
test
sub
sarl
pop
cmpsb
add
int
xchg
xor
sbb
sbb
jns
sarl
xchg
adc
or
sub
daa
popf
jbe
dec
xchg
hlt
bound
mov
adc
dec
subl
rolb
cld
and
scas
push
mov
adc
inc
sub
xor
cli
gs
iret
lods
cmp
mulb
iret
inc
push
cmpsl
push
sbb
stos
mov
push
jle
and
into
pop
jbe
mov
inc
sub
sub
lods
sbb
fisubs
sub
jg
inc
xor
push
insl
loopne
mov
lea
inc
decl
sti
pop
addr16
xlat
out
xor
js
inc
test
mov
mov
int
jns
fdivrl
and
pop
leave
cmc
cmp
and
xchg
int
enter
orb
push
test
dec
sbb
outsl
push
es
rcl
adc
mov
dec
lret
je
lock
popf
push
ret
and
ret
mov
rorb
and
cvtps2pi
cltd
pop
enter
pop
loop
jge
clc
cmp
add
int3
dec
mov
jmp
and
sub
sbb
adc
push
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
jmp
scas
mov
mov
sub
stos
jge
es
mov
adc
adc
sarl
sbb
aam
push
and
stos
aam
jle
push
dec
aas
shlb
sbb
rorl
loope
or
shrb
es
add
mov
and
sbb
inc
movsl
xchg
rcr
xchg
in
icebp
js
mov
repz
push
xlat
icebp
loopne
and
xlat
mov
insb
add
xchg
das
jae
lea
xor
dec
xlat
jae
sub
mov
xor
pop
daa
int3
or
inc
mov
dec
std
int
mov
mov
cwtl
mov
loop
pop
dec
jns
and
loop
xchg
add
aas
aas
in
push
jp
hlt
mov
je
sti
xchg
mov
pop
dec
xlat
ret
stos
jno
jecxz
inc
ljmp
inc
xor
xor
ror
pop
pop
rorl
aam
push
addb
dec
or
jbe
sub
add
lock
insl
inc
mov
lcall
add
pop
xchg
scas
cmp
inc
and
lea
insl
adcl
testb
lret
aad
xchg
dec
mov
mov
shl
pop
pop
xchg
ret
jno
icebp
adc
je
lds
cmp
or
push
mov
jl
enter
sub
cmpsb
dec
jmp
std
pop
es
xor
lret
hlt
mov
es
idiv
fstps
pop
jge
xchg
in
mov
pop
inc
repz
push
xor
add
mov
data16
xchg
push
int3
pop
push
xchg
mov
insl
adc
test
cmc
mov
push
pop
call
loop
mov
notb
sbb
cmpsl
push
dec
cli
shrb
xor
mov
push
lds
ds
test
fisttpl
pop
mov
lods
sbb
daa
sbb
mov
jnp
jg
add
add
xor
sub
sbb
aaa
icebp
loope
sar
push
push
cmc
mov
mov
repnz
test
out
jmp
int
cmp
or
aad
mov
scas
je
inc
leave
dec
jne,pt
xor
xchg
sbbb
repz
pop
js
xchg
dec
sbb
jno
loop
pop
pop
gs
mov
aas
aad
dec
sbbl
icebp
int3
sbb
lea
adc
dec
mov
fisubl
xchg
fwait
sbb
cmp
addb
cwtl
push
xchg
lret
push
mov
mov
or
pop
loope
and
imul
shrl
pop
pop
push
outsl
inc
nop
and
lcall
aad
adc
lret
jb
cmp
mov
cmp
mov
cmc
movsl
enter
out
xchg
imul
jg
xchg
cmp
ret
ljmp
push
mov
imul
add
add
ds
xchg
mov
shrb
xlat
lret
mov
sbb
popf
adc
mov
cmp
xchg
dec
dec
mov
shll
xchg
jmp
xor
push
or
push
cld
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
jmp
hlt
xor
pop
and
xchg
mov
adc
adc
or
pusha
mov
push
and
add
push
int
mov
push
sbb
cld
aam
lods
xchg
and
push
and
and
xchg
jge
cmpb
scas
fs
out
inc
es
and
pusha
cmpsl
or
mov
sbb
dec
in
pop
rcrl
and
add
jmp
add
out
lds
cmc
mul
jae
das
jmp
pop
mov
mov
mov
jae
sti
stos
dec
incb
insb
dec
imul
or
in
fdivr
repz
cld
inc
out
xchg
ljmp
cltd
enter
movsl
mov
add
fldenv
out
push
scas
aas
je
add
lock
jo
andl
jae
mov
push
or
outsl
mov
inc
dec
jle
mov
push
pop
xor
and
push
pop
cmpsl
add
mov
mov
jns
ret
into
cmp
addr16
subl
mov
not
cmp
cmp
dec
sub
pop
cmpsb
or
or
popf
push
push
push
loopne
pushf
xchg
jp
movsb
out
iret
mov
xor
mov
mov
jne
imul
sub
hlt
jns
mov
test
and
mov
cmpsb
ds
jb
pop
mov
popa
sbb
xchg
pop
push
lds
sub
aam
mov
mov
sub
inc
adc
add
sub
inc
and
and
leave
pop
mov
jg
adc
mov
push
jo
jns
mov
sub
sbb
pop
js
mov
inc
push
and
mov
outsb
mov
cmpsl
scas
out
sti
subb
fstpl
pop
out
xor
adc
push
xchg
mov
or
xor
cmp
dec
dec
inc
inc
inc
insb
stos
inc
mov
mov
dec
sub
inc
fwait
aas
iret
push
loopne
outsb
pop
push
in
and
inc
jge
leave
shlb
and
jnp
pop
mov
enter
jb
sbb
inc
rorb
push
popa
push
fidivs
aas
ss
sbb
roll
inc
push
les
or
pop
inc
repnz
mov
add
mov
mov
xor
inc
mov
sar
fwait
arpl
insl
rorb
fstps
cs
pop
outsb
mov
lahf
push
sbb
aam
xchg
cs
mov
insb
add
addl
ror
lret
mov
in
mov
cmc
xor
xchg
rcrl
mov
jle
xchg
pop
pusha
movsl
sahf
inc
cmp
inc
sbb
xor
test
lods
pop
jl
sub
cmpsb
dec
cmc
push
loope
test
adc
addr16
lods
xchg
adc
xor
dec
out
pop
daa
jae
pusha
pop
jecxz
sarl
mov
inc
aam
ret
push
repnz
jnp
das
rcl
scas
mov
jnp
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
inc
jbe
js
js
sub
push
inc
stos
inc
movsb
adc
adc
adc
xchg
cltd
cmpsl
ret
jno
jno
in
xchg
mov
pop
adc
push
pop
jmp
aad
pop
mov
nop
pop
aam
xchg
aad
lahf
bound
add
call
ret
faddp
adc
mov
pusha
sbb
rcrl
xor
pop
lea
sub
hlt
ficoms
sbb
and
shll
lret
je
or
push
fcmovb
push
xchg
hlt
fisubrs
sahf
inc
push
jnp
ja
add
mov
sub
push
dec
popa
mov
inc
xchg
push
dec
sbb
fisttps
dec
movsl
mov
insl
jno
mov
cmpsb
aad
add
adc
js
xchg
and
inc
fdivs
xor
pop
jle
lcall
xor
testb
aaa
mov
jo
mov
pop
leave
dec
inc
enter
push
sti
repz
rorl
inc
or
fisttpll
push
or
xor
cmp
hlt
cmpsb
in
or
rol
sub
xor
std
pop
mov
xchg
fbstp
dec
inc
sbbb
mov
aaa
xchg
das
or
into
xchg
repz
dec
ds
mov
out
sbb
mov
inc
xor
ret
mov
xchg
jnp
push
mov
sub
test
out
sub
ret
sub
mov
adc
jp
xor
push
add
sub
jmp
mov
ds
jecxz
mov
push
jno
or
subl
lods
adc
dec
pop
pop
loope
ficoml
inc
cwtl
inc
repnz
rcrl
mov
scas
imul
loopne
adc
mov
xchg
icebp
sub
shrb
mov
data16
xor
mov
pop
jecxz
jno
out
adcl
adc
and
or
mov
sub
xchg
mov
mov
ret
lcall
dec
pop
jp
add
add
scas
pop
xor
enter
xor
jno
call
sbb
les
inc
ficoms
xorb
xchg
sbb
xchg
mov
test
add
inc
adc
cmp
adc
nop
addb
sbb
aaa
xor
mov
inc
cld
jne
cmpsb
and
scas
cmp
out
dec
mov
daa
outsb
test
lea
cmp
or
ja
xchg
mov
outsl
sti
cmpsb
mov
cli
lcall
in
inc
sub
cmp
cmpsb
dec
mov
rcr
decl
ljmp
outsb
enter
std
das
sar
ss
repz
das
pop
scas
xor
hlt
mov
dec
xlat
sahf
xchg
fcmove
jg
lcall
xlat
cmp
pop
adc
push
jmp
in
jo
outsl
outsb
loope
push
push
scas
push
test
repnz
cmp
xor
dec
jmp
jp
adc
hlt
mov
or
xor
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
jmp
stc
xor
mov
sub
icebp
stos
dec
cmp
push
pushf
adc
adc
adc
repnz
jge
add
xor
imul
jg
pop
jmp
je
ja
cmpsb
lods
shrb
jecxz
lds
xor
loope
jp
xorb
rcr
fidivrl
jge
xchg
mov
push
out
lea
jmp
daa
cmp
mov
int3
loope
xchg
sub
lods
or
in
aad
call
mov
xor
pop
or
xchg
jno
out
adc
and
lock
lods
incb
fimull
repnz
cwtl
pop
mov
pop
inc
and
movsb
mov
stos
mov
cmp
mov
mov
sbb
mov
jecxz
sbbl
mov
rolb
mov
jg
aas
add
incb
ret
dec
cmp
movsl
clc
mov
shll
xor
inc
cmp
pop
outsl
aam
add
lds
pop
test
mov
jae
inc
xor
mov
mov
out
cmpsl
lret
inc
and
jl
dec
sbb
pop
adc
cli
dec
mov
lcall
out
or
aaa
in
mov
arpl
sahf
sub
femms
sub
cmpl
sub
rcll
cwtl
add
push
out
mov
in
mov
add
or
cwtl
sti
aaa
int
lods
das
dec
jmp
fistpll
xor
lods
sub
add
xor
mov
jg
dec
es
out
and
int3
pop
in
pop
js
jo
icebp
insb
shlb
lods
add
enter
and
or
mov
dec
cwtl
inc
mov
loope
lods
push
scas
mov
add
xor
mov
push
mov
mov
fstp
pop
out
or
lea
sub
push
in
cltd
push
aaa
jbe
adc
adc
int3
mov
mov
pop
xchg
testb
outsl
jp
and
dec
and
mov
jnp
movsl
push
and
or
fldcw
sbb
mov
in
mov
push
xor
xlat
jae
aam
mov
ret
fcoml
push
stos
loope
sub
adc
adc
stc
mov
xchg
call
lock
pushf
in
mov
jo
sub
movsb
and
aad
cmp
int3
sbb
cwtl
aad
repnz
movl
cmp
test
and
lret
pop
mov
nop
cli
push
adc
xchg
mov
xor
mov
pop
lods
hlt
addr16
inc
xchg
add
sub
std
mov
cmp
xchg
mov
jp
mov
xchg
xor
jnp
out
xchg
mov
mov
ret
ja
adc
stos
pop
dec
push
fadd
ret
cwtl
dec
call
mov
scas
cmp
fcomip
insl
push
jl
add
popl
not
adc
lret
push
xor
mov
icebp
pop
cmc
add
std
sbb
rclb
add
xor
shl
xor
or
add
mov
jmp
xor
and
pusha
and
adc
adc
sub
sbb
aad
jp
das
xor
test
mov
add
push
leave
adc
inc
mov
mov
cmpsl
into
inc
addr16
ret
push
lret
sub
rolb
jecxz
adc
sbb
or
jecxz
xchg
pop
jge
rolb
or
and
out
and
shlb
pop
lods
sub
mov
shll
and
loope
mov
xorb
js
add
popf
lahf
inc
mov
call
and
push
sbb
movsl
push
pusha
jbe
jmp
fwait
cld
popa
lcall
mov
inc
add
addr16
mov
repnz
sbb
fidivrl
test
ds
push
lods
push
mov
cmpsb
test
aad
jecxz
mov
js
jnp
outsl
sub
lcall
mov
out
cs
push
sbb
std
shlb
cmp
das
mov
mov
inc
jle
add
repnz
stos
mov
sub
xchg
inc
sub
cmp
sub
mov
loope
lret
enter
add
das
pop
adc
mov
jl
lcall
leave
mov
pop
mov
push
jecxz
repz
hlt
pop
inc
test
xchg
fadd
ds
outsl
push
push
negl
lea
inc
ret
lret
pop
popa
rep
test
movsb
adc
cli
jp
shrl
xchg
loop
add
jmp
test
ret
push
filds
lods
or
dec
popf
in
cld
sar
arpl
pop
sti
lret
aas
fld
push
mov
cli
mov
rol
push
push
dec
mov
cld
or
rolb
mov
int
sti
jmp
sub
outsl
or
push
pop
or
push
sub
fwait
gs
or
sub
push
pop
add
outsb
or
push
jmp
xor
cmpsb
cmp
lahf
pop
test
icebp
movsl
jno
sub
jo
pop
aas
push
xorl
popf
mov
sbb
sub
stos
das
jmp
jecxz
jg
push
pop
fiaddl
push
clc
adc
xchg
das
bound
xchg
mov
push
and
movsb
xor
and
sub
pop
mov
mov
cmovo
or
into
mov
mov
cmp
cli
js
adc
push
or
lahf
dec
mov
mov
ja
cltd
adc
inc
jle
or
sti
pop
lahf
push
stc
cmp
jecxz
pushf
push
xchg
mov
mov
bound
rcrb
into
sarb
mov
cmc
leave
or
inc
clc
out
mov
xor
cmp
dec
stc
pusha
xchg
jge
add
dec
sbb
and
fsubl
xor
lods
mov
mov
add
test
ja
push
fstpt
mov
pop
xchg
and
mov
sahf
or
ficomps
test
fcompl
push
mov
xor
jmp
or
push
fildll
into
fcompl
daa
dec
and
cmp
stc
cmpsb
add
icebp
inc
xchg
ret
fisubl
jge
push
insl
xor
and
fdiv
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
adc
and
sbb
mov
std
jle
nop
adc
adc
adc
xchg
jmp
mov
mov
divl
cwtl
inc
and
loope
jmp
cwtl
outsb
push
dec
jne
int3
ret
test
jmp
fld
out
mov
cmp
stc
ja
int
cmp
std
lahf
addr16
neg
cli
cmpsb
mov
clc
popf
cs
in
jle
ja
das
fmuls
pop
mov
sbb
mov
pop
das
fcompl
or
and
dec
jmp
jecxz
cltd
xchg
ljmp
cmp
or
sub
cmpsb
inc
lahf
add
aad
fmuls
es
pop
popa
xor
daa
rolb
js
js
ret
in
sbb
out
push
ror
movsb
xchg
data16
test
lods
ret
dec
fisttps
sbb
adc
sahf
add
fdivrl
rcll
test
mov
int3
pop
outsb
and
adc
inc
out
and
dec
sub
roll
clc
sub
jbe
mov
in
pop
aad
mov
enter
xchg
mov
stos
sbbl
mov
out
mov
leave
lods
mov
xchg
jnp
arpl
pushf
std
push
scas
mov
ret
mov
mov
adc
dec
or
add
in
lahf
lock
mov
adc
aad
sti
ds
sub
mov
xchg
sub
scas
dec
dec
xor
ss
pop
mov
hlt
loope
pop
mov
pop
inc
push
loop
jns
ss
addr16
xchg
add
test
aam
push
push
push
rclb
push
nop
ds
push
call
jbe
sahf
dec
ja
imul
sbb
cs
iret
mov
mull
add
xlat
mov
xchg
loop
aad
jle
mov
fadd
push
push
mov
mov
sahf
xor
mov
rclb
cmp
mov
icebp
adc
mov
pop
dec
outsl
mov
pop
push
jl
mov
ret
mov
jg
mov
cmc
aaa
adc
or
xorl
add
mov
pusha
pop
stc
push
push
popf
xchg
add
fsubl
arpl
cmp
out
scas
push
ret
sub
pop
sub
outsb
push
lcall
push
sbb
pop
mov
lahf
sub
dec
mov
mov
dec
push
jmp
or
jns
jbe
popa
dec
not
mov
hlt
repnz
mov
arpl
or
test
or
mov
cwtl
sbb
lock
xchg
inc
es
inc
outsl
mov
xchg
xchg
xchg
xchg
insl
mov
xor
lahf
aaa
sbb
xchg
cs
rcrb
xchg
ljmp
scas
pop
arpl
shl
cwtl
adc
xchg
push
xlat
ds
xchg
rorb
ret
mull
sbb
mov
adc
adc
cli
lods
jnp
imul
and
jne
cmp
inc
sub
push
mov
dec
insl
aam
out
mov
out
sub
mov
pop
loop
adc
pop
insb
shlb
rorb
ret
push
ret
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
jmp
insl
outsb
fstps
ret
mov
push
in
lods
jle
adc
adc
adc
cld
xor
sub
inc
dec
shlb
out
inc
out
cmp
adc
cwtl
sub
push
mov
mov
out
dec
repz
dec
lds
mulb
test
psllq
and
pop
icebp
inc
or
in
xchg
int3
fisttpl
or
xor
pushf
sub
fsubrl
orps
pop
in
mov
jecxz
mov
into
mov
xchg
popa
xchg
scas
pop
fcoml
pop
or
sub
aas
ljmp
lods
hlt
rolb
ror
sti
repnz
fldcw
or
test
fdivrs
std
loop
jl
lock
sar
add
dec
iret
cmp
call
out
shl
push
ljmp
or
lcall
lds
jb
jo
mov
subl
fs
jp
mov
push
xchg
popa
popa
hlt
orl
scas
pop
dec
dec
cmp
cmp
roll
clc
add
xor
in
pop
int
adc
cmp
push
mov
dec
in
add
adc
bound
pop
pop
xor
fists
mov
pop
jns
cmp
and
int3
add
mov
in
cwtl
push
xorb
mov
adc
xor
push
pop
fimuls
jbe
sub
stos
mov
mov
cwtl
jns
xlat
mov
scas
aaa
mov
mov
mov
rclb
pop
pop
insl
je
xchg
xor
dec
cli
adc
inc
cs
sbb
out
mov
cwtl
shrb
lret
mov
out
jmp
cmp
push
jno
push
sbb
sub
lods
stos
ds
xchg
outsb
addl
loope
sbbb
dec
mov
or
pop
mov
mov
bound
or
andl
pop
icebp
or
je
adc
fcmovb
sub
mov
push
cld
fst
stc
pop
pop
fbld
add
adc
cli
mov
and
jmp
fst
popl
lock
imul
cmp
inc
test
or
out
push
int3
push
ds
mov
inc
in
mov
pop
les
xchg
call
xor
test
inc
dec
inc
push
xchg
ja
mov
xchg
stc
lcall
test
mov
insl
push
push
ret
jno
push
jno
or
movsb
scas
repz
aad
mov
or
data16
pop
imul
jp
ds
out
xchg
lret
and
jb
xor
cmpsl
dec
mov
mov
dec
xor
ss
inc
movsb
shll
fisubs
insl
data16
sbb
adc
inc
popf
mov
xor
xor
sub
xor
mov
popf
sarl
inc
idivb
or
cltd
cmp
mov
scas
mov
push
push
pop
dec
rolb
adcl
scas
xlat
sbb
aam
cmp
ja
imul
lret
jmp
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
jmp
out
sub
pop
popf
and
inc
dec
mov
movl
pop
sbb
add
rolb
out
push
mov
and
cmp
push
jno
inc
test
sub
xchg
dec
fdivrs
lret
icebp
andl
fldl
xchg
lea
repnz
repnz
adc
lret
mov
push
aad
pop
clc
and
aas
stc
push
iret
jne
pop
sub
or
push
cmp
nop
ljmp
jge
fmul
pop
cli
cltd
fwait
push
sti
fdivs
cmp
popa
xchg
or
shrl
sub
mov
jle
jo
jns
pop
fstps
stos
orb
jmp
ds
cwtl
or
dec
sahf
fwait
adc
pop
add
push
dec
outsb
mov
sbb
fimull
adc
inc
addr16
mov
lea
insl
dec
adc
fnstsw
cmpsl
and
and
lcall
dec
cmp
out
xchg
cmp
lahf
adc
mov
test
pusha
ror
sub
adc
mov
loope
test
sbb
leave
test
jmp
ja
sub
aam
shll
mov
pop
ror
jno
cltd
repz
push
pop
fst
sub
pop
jbe
sub
pusha
inc
lods
lret
in
or
dec
and
cmpsl
sbb
inc
mov
cmp
sbb
stos
and
sarl
movsb
test
loop
xchg
mov
push
pop
adc
pop
mov
sbb
dec
or
push
scas
nop
and
and
mov
js
lcall
jg
xor
push
das
enter
movsb
pushl
sub
out
cmp
dec
lret
add
and
pop
jg
bound
outsb
mov
rcrl
and
sub
xor
or
inc
push
fsubrs
pusha
inc
enter
imul
or
sahf
sub
dec
sti
mov
fwait
movsl
jns
lret
dec
jnp
scas
lret
popf
out
mov
push
push
test
or
stc
push
add
sub
pop
idivb
inc
mov
xor
or
enter
mov
adc
pop
or
push
sub
adc
xor
adc
sub
jge
testl
loope
inc
shlb
push
testl
and
xchg
sbb
lods
sbb
repnz
clc
sti
xchg
ds
rcll
xchg
add
sbb
ljmp
pop
xor
pop
push
test
inc
ret
mov
xchg
aad
pop
pop
fdivs
inc
fidivrl
ficoml
mov
mov
mov
repz
cmc
inc
shl
or
add
in
mov
rorl
lcall
scas
testl
pusha
stos
hlt
test
and
xor
jecxz
in
adc
pop
dec
mov
out
xor
movl
and
cmp
adc
xor
negl
jns
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
jmp
xchg
hlt
insb
lret
xor
pop
dec
mov
jle
jl
adc
adc
leave
fwait
mov
lcall
sbb
mov
pusha
cmpsb
int
loop
dec
sbb
out
jno
inc
xor
les
dec
or
ljmp
jle
jo
push
shrb
sub
push
push
cwtl
push
jecxz
daa
dec
pop
xchg
cmp
arpl
cld
sub
cld
icebp
mov
adc
sub
and
lock
lahf
xor
js
jl
pop
leave
mov
pop
aaa
out
ds
addr16
mov
jge
jbe
jle
push
xchg
pop
adc
lods
mov
lret
push
icebp
sbb
mov
jecxz
lods
std
mov
outsl
pop
ds
sub
mov
and
cmp
scas
and
dec
xor
cld
popa
inc
fisubrl
out
test
push
cmp
and
pop
out
hlt
pushf
fldl
es
and
and
leave
aaa
cmpsb
hlt
testb
xchg
aas
mov
mov
std
pop
adc
loopne
insb
adc
jnp
push
jbe
in
xchg
fdivrp
pop
adc
dec
add
dec
in
mov
lods
out
outsb
jg
outsb
call
mov
add
movsb
scas
clc
jbe
mov
jecxz
push
push
inc
stos
or
leave
test
mov
mov
lds
cld
daa
jns
lcall
or
inc
scas
cmc
sahf
push
ret
shlb
mov
dec
pop
fdivl
push
cmp
lods
or
add
pop
cwtl
lods
sub
cli
sub
add
into
in
mov
or
cmc
dec
inc
cmc
xchg
xchg
je
mov
sub
shlb
jg
or
into
inc
mov
mov
popa
loop
push
jmp
add
inc
or
xchg
pop
mov
mov
mov
aam
mov
mov
jl
addr16
push
decl
cmpl
xchg
sub
scas
cmp
bound
and
aad
or
cld
in
mov
dec
sub
aam
cmpsb
jae
orb
icebp
popa
gs
add
dec
leave
push
int3
or
scas
lahf
aaa
pusha
add
add
into
outsb
mov
call
pop
xchg
lret
mov
fcom
gs
bound
ret
sub
xchg
and
cmp
clc
push
int
aas
xchg
push
jno
int3
ljmp
dec
adc
jecxz
test
fimuls
ret
shlb
and
mov
daa
stc
jne
enter
add
push
pop
adc
test
mov
je
pop
insb
xchg
rcll
jg
adcl
pop
jae
inc
or
shl
lcall
add
xchg
mov
mov
insb
cmc
repnz
pop
pop
inc
mov
setns
xchg
jg
aad
pop
and
repz
or
xchg
subl
pop
outsb
test
xchg
sub
mov
add
cwtl
lods
inc
pop
lret
idivl
mov
iret
fwait
push
push
push
pop
push
jl
mov
jbe
les
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
jmp
inc
jae
jge
sbb
into
lods
sahf
xchg
js
je
adc
adc
loop
das
fists
xchg
pop
adc
push
or
push
dec
cmp
xlat
or
dec
push
lret
mov
mov
cli
mov
loopne
movsb
aad
lock
shlb
aam
scas
inc
mov
flds
or
xor
outsl
ss
mov
jecxz
xor
cmp
or
cwtl
mov
cli
push
cmp
inc
cmpsl
stc
jne
aam
in
sti
aas
dec
addr16
xor
test
push
jmp
and
and
and
pop
cmpsl
push
sti
outsb
cmp
xchg
dec
adc
bound
stos
jno
jp
sub
push
mov
mov
adc
stos
in
sub
fsubp
mov
mov
int3
lret
mov
mov
add
mov
sub
sbb
mov
stos
push
push
pop
mov
ds
mov
push
jbe
inc
add
insl
int
xchg
repz
inc
and
jne
ret
sub
jne
sbb
jns
mov
sbb
ss
xor
pusha
clc
cmp
insb
inc
shl
inc
repnz
jge
inc
jg
and
pop
flds
xchg
sub
sti
pop
push
push
sub
add
sbb
lcall
mov
mov
mov
xchg
aam
repnz
aam
jmp
test
pop
iret
mov
jb
dec
pop
fsts
xor
mov
ficoms
mov
sub
shll
rolb
pop
xchg
repnz
or
pushf
ret
in
fstpl
inc
test
insb
push
mov
xor
pop
xor
pop
sbb
mov
call
das
dec
dec
insl
push
pop
leave
les
sub
std
mov
sbb
stc
adc
pop
mov
dec
jmp
xor
insl
imul
popf
adcl
mov
call
fstl
aad
mov
sub
xor
fbstp
fisttps
movsl
xchg
jmp
jae
sub
mov
mov
xlat
data16
insl
pop
cmpsl
iret
push
call
xchg
cmp
xchg
dec
mov
das
rclb
mov
mov
loope
push
insl
pop
fsubrl
jp
mov
fcmovne
mov
push
xchg
sub
cmp
mov
mov
pop
jge
cltd
pop
push
jp
in
xchg
lods
mov
push
aad
dec
bound
push
mov
mov
aas
and
sub
sbb
inc
shrl
sahf
stos
inc
push
mov
jp
add
ja
and
jmp
jl
out
push
jnp
jecxz
mov
pop
push
ja
add
aam
jge
cmpsb
fisttpl
pop
cmc
mov
or
push
lock
jne
out
mov
cmp
movsl
adc
sub
aaa
and
and
xchg
adc
pusha
cs
mov
sub
mov
cmp
mov
sbb
repnz
jno
ja
jg
mov
inc
repz
xor
jbe
push
and
mov
mov
push
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
adcl
shrd
shr
ret
mov
mov
adc
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
movzbl
xor
movl
sub
mov
or
mov
notl
movl
and
mov
inc
movl
movl
dec
movl
movzbl
and
push
sub
movl
movl
push
addl
movl
movzbl
or
mov
cmpl
mov
mov
jmp
movl
ja
push
call
adc
adc
sbb
sbb
and
xor
add
add
sbb
mov
push
andl
push
andl
push
jmp
mov
pop
sbb
and
jle
jb
adc
sbb
xchg
shr
cltd
icebp
stos
inc
mov
and
mov
sub
jl
inc
clc
out
in
push
jns
adc
mov
sbb
xor
shl
sbb
scas
lcall
jo
mov
lods
add
js
inc
push
sbb
pop
push
mov
jae
mov
aad
mov
mov
jmp
lock
stc
cltd
mov
fisubl
test
push
fs
dec
xor
push
rep
xchg
int
adc
cmp
sahf
add
enter
fxch
sub
xchg
mov
ret
mov
mov
jne
pushf
lock
sbb
outsb
cmc
hlt
pop
mov
imul
cmpsb
xor
aam
push
stos
cmp
orb
fldcw
push
push
dec
outsl
imul
mov
cmp
cli
ret
jo
jge
inc
call
test
push
mov
divl
push
repnz
es
sbb
subl
inc
cltd
push
outsl
cmc
call
je
xor
les
cli
js
cltd
xor
rcr
repnz
sbb
push
int
jnp
out
mov
inc
jae
lret
jo
cmp
sub
cltd
lahf
xchg
int
out
jl
clc
dec
fs
call
add
adc
scas
pop
lds
dec
insl
das
push
push
flds
sti
gs
std
pop
push
ss
mov
stc
cmp
jmp
pop
daa
in
push
cmc
adc
or
or
cld
mov
rorb
cld
push
shlb
cltd
jmp
in
sbb
fs
je
adc
rolb
cltd
aam
xor
shll
mov
pop
add
test
jbe
pop
jge
xor
xorb
lret
movl
js
lods
fsub
adc
insl
adc
inc
jg
jbe
loope
gs
scas
mov
adc
repz
sub
dec
in
js
loope
jno
mov
js
scas
pop
or
jmp
outsl
jg
xor
adc
insl
ffreep
xor
repz
jmp
xor
in
mov
pop
shrl
ja
xchg
cmp
push
imul
icebp
inc
add
daa
adc
inc
pop
dec
cmp
aam
ds
fdiv
clc
sub
jle
mov
fbstp
cs
push
inc
dec
push
lahf
or
loopne
inc
jbe
ds
or
jle
cli
ljmp
gs
rcrb
adc
lcall
push
dec
cmp
adc
stos
testl
mov
fdivr
sbb
loopne
inc
pop
xchg
loope
jne
outsl
jle
or
adc
adc
mov
repnz
int3
gs
pop
cmp
or
mov
lahf
cld
out
nop
sub
hlt
mov
sbb
nop
pop
ror
loopne
sub
rcr
dec
ret
ret
notl
or
in
mov
mov
cs
movsl
loopne
cmp
or
mov
mov
mov
int3
xchg
cmp
adc
mov
pusha
dec
pushf
xor
fistps
addr16
mov
push
push
std
aas
sbb
in
mov
jo
dec
cs
or
sbb
mov
cmpb
push
pop
enter
cmpsb
pop
sahf
push
add
sarl
call
xorl
mov
mov
subl
push
sbbl
or
xorl
push
or
xor
xor
push
push
xorl
call
mov
movzbl
xor
mov
orl
push
andl
push
adcl
push
push
call
mov
xor
or
mov
sub
sub
mov
cmpl
movl
mov
movl
jmp
movzwl
mov
ja
push
pushl
call
add
andl
adc
adcl
movzbl
sub
add
and
movl
movl
adcl
movl
movl
movl
cmpl
mov
movl
mov
jmp
movl
mov
je
push
pushl
call
sub
mov
adc
mov
and
sub
movl
mov
cmpl
mov
not
mov
movl
jmp
movl
jg
push
push
push
call
dec
add
adc
neg
mov
adc
mov
sbbl
jmp
mov
and
sbb
scas
push
mov
inc
push
adc
pop
xchg
loopne
xor
xchg
inc
cmpsb
xchg
ret
in
mov
arpl
inc
pop
outsl
and
out
xor
and
adc
int3
out
inc
aad
xor
mov
push
outsl
dec
imul
popa
mov
lds
insl
pop
dec
pop
in
and
ret
js
outsb
scas
lds
push
add
mov
test
xchg
std
ret
ss
push
push
jns
pop
dec
cmp
pop
idivl
push
ret
cmpsb
outsb
call
stos
es
out
sbbb
jmp
out
aad
xor
das
mov
mov
sub
sub
dec
cld
aaa
xchg
into
or
loop
mov
inc
push
add
das
insl
add
fsubl
cmpsl
add
push
dec
std
jmp
adc
sbb
iret
adc
sub
sub
mov
xchg
loope
dec
inc
add
pop
pop
jle
push
pop
adc
movsl
cld
mov
fsubrs
popf
mov
and
jbe
cmp
popf
inc
repz
xor
and
in
push
sar
mov
subl
mov
mov
sbb
xor
add
mov
cmp
mov
cld
scas
sub
push
jne
xor
lods
push
addb
mov
inc
lea
fldcw
jo
dec
push
lods
jecxz
add
fsts
aam
xlat
inc
adc
add
in
aaa
fdiv
mov
movsb
xchg
cltd
test
shll
mov
adc
aaa
sub
jnp
sti
popa
inc
fimull
adc
cmp
lcall
cmpb
fs
scas
fwait
and
mov
jno
xor
lea
xlat
xchg
ss
jg
call
push
sub
jecxz
mov
or
bound
fsubp
fiadds
jle
dec
and
push
mov
jmp
sbb
inc
cld
sbb
mov
scas
adc
jmp
es
cmp
fistps
cmc
mov
mov
mov
cmpsb
pop
dec
jae
push
inc
mov
or
cld
mov
cmp
dec
jb
fdivl
add
scas
push
jns
mov
out
aas
jo
shrl
and
fcomip
xor
jp
je
pop
int3
xchg
loopne
int
and
xorb
call
push
mov
into
fsubp
or
sbb
or
sbb
lret
fdivrs
mov
ficoml
test
mov
pushf
mov
icebp
out
fs
popa
xchg
dec
sti
xchg
jg
int3
and
push
in
repnz
mov
mov
dec
incl
das
and
inc
rcrl
mov
popl
jne
repnz
pop
xor
dec
std
cld
jg
pop
push
adc
and
and
mov
or
mov
lretw
inc
outsb
jns
jae
sbb
push
or
arpl
push
add
clc
mov
xchg
ficoml
pop
or
sbb
jge
jg
fldt
shl
push
adc
pop
pop
adc
mov
stc
push
push
cmpsl
stos
test
dec
pop
stos
lods
dec
sub
xchg
fldcw
nop
jmp
sbb
and
dec
push
sbb
lahf
cmpsl
mov
test
push
data16
add
js
mov
ljmp
in
loope
ds
in
pop
xor
movsl
sbb
add
adc
andl
or
xor
xor
sbb
mov
or
cmpl
movl
movl
jmp
movl
jle
pushl
call
sbb
adc
sbb
adc
add
xor
xor
adc
mov
or
sub
mov
or
mov
notl
or
or
movl
cmp
jne
movl
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
jmp
cld
into
loope
mov
cs
add
adc
mov
loopne
out
mov
idivl
mov
paddq
xor
jp
mov
inc
aaa
insl
pusha
negb
imul
inc
pop
js
sub
mov
mov
std
or
outsl
or
pushf
mov
add
int
and
lcall
jg
xlat
mov
jno
dec
pop
jge
sti
rep
fcoms
sub
pop
jg
test
mov
sti
mov
loope
pop
xor
and
xchg
leave
pop
pop
arpl
sti
jnp
aam
adc
dec
sub
idiv
das
scas
mov
and
test
and
sub
pop
sub
js
push
xchg
mov
push
adc
dec
mov
sahf
push
popf
fxch
push
ret
ret
bound
movsl
push
testl
and
jae
jne
test
cltd
pop
add
or
xlat
sub
dec
test
mov
outsl
jmp
fisubl
rcr
call
les
lret
pop
test
push
jb
and
mov
mov
xor
aas
cs
or
cli
fnsave
fs
sub
or
and
iret
sub
fwait
out
stos
cmpsl
ret
adc
xchg
sub
and
cmp
dec
inc
ds
or
fidivrl
dec
jl
lock
lahf
aam
je
mov
or
fistl
pop
sbb
sbb
mov
enter
sbb
sbb
mov
dec
inc
lods
in
jne
aad
mov
fsubrl
shlb
fisttpll
data16
in
xchg
or
in
mov
jle
faddp
inc
scas
fcomp
jg
push
sub
pop
iret
mov
sbb
ficoms
cmpsl
mov
dec
mov
jge
lds
lods
adc
dec
or
iret
in
xchg
test
pop
pop
push
shlb
loop
scas
adc
insb
mov
xor
cli
fcmove
push
sbb
xchg
std
mov
adc
push
jo
dec
imul
push
add
sbb
pushl
jmp
cmpsb
adc
adc
ret
dec
jp
push
push
push
imul
adc
mov
enter
idivl
mov
cmpsl
mov
mov
test
sub
mov
xlat
pop
popf
push
fs
fsts
pop
out
jbe
xchg
dec
out
adc
in
outsl
lods
xor
dec
roll
dec
je
mov
test
push
aam
addb
mov
sub
or
lret
xadd
inc
lret
ds
pop
adc
and
lret
fistps
xchg
jmp
movsb
sub
xchg
data16
mov
divl
pusha
in
inc
inc
sub
xchg
add
mov
adc
pop
pusha
adc
push
xor
or
and
out
imul
aam
jae
or
jp
jl
test
xchg
loope
cmp
mov
sbb
jp
loope
mov
sbbl
roll
cld
aas
jns
and
fisubrl
rorb
les
lea
dec
nop
pop
adc
mov
cs
pop
js
stos
sub
jb
mov
and
int
cs
add
xor
sub
sbb
adc
xor
inc
repz
popf
lahf
mov
lds
pop
dec
and
lds
fldl
add
rclb
mov
push
test
ss
scas
adc
xchg
sub
pop
or
mov
fwait
mov
adc
inc
rclb
imul
movl
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
push
call
jmp
icebp
push
out
sub
repnz
xor
push
pop
adc
mov
fldl2e
pop
mov
fs
sbb
imul
mov
or
out
repnz
lock
push
repz
push
xor
sti
push
lock
in
popf
sub
mov
cmpb
faddp
stos
xchg
jle
push
push
ja
mov
outsb
stos
mov
loop
xchg
ja
insl
aas
pop
lods
jae
dec
inc
mov
shlb
dec
and
cmp
cwtl
sahf
push
dec
sbb
pop
mov
ret
mov
inc
shrb
push
dec
mov
test
popf
sbbl
sub
mov
ja
lret
clc
inc
add
xchg
inc
jne
aad
aas
and
imul
pop
push
enter
cli
loope
or
xlat
mov
icebp
xchg
jge
inc
or
ljmp
fisubl
sub
out
stos
pop
sarb
mov
mov
cmpsb
inc
sahf
stos
sbb
sub
mov
jo
xor
inc
add
dec
lds
xor
icebp
xchg
xchg
dec
jnp
sub
or
add
jp
push
int3
call
xor
lret
add
stos
cmp
mov
fisttpl
adc
js
or
or
cmp
jmp
test
dec
dec
cmc
pop
fwait
clc
xor
js,pn
push
movb
jno
ds
repnz
pop
enter
jmp
xchg
iret
inc
es
lock
jmp
iret
pushf
ret
mov
jecxz
pop
cwtl
pop
mov
and
xor
mov
adc
jge
scas
andl
scas
inc
jmp
cmp
xor
jbe
xor
scas
jb
or
jno
mov
nop
add
fcmovnbe
test
shlb
sahf
dec
jmp
jecxz
rcrl
push
pop
sbb
fwait
lods
or
cmpsb
jle
mov
cmc
inc
jnp
pop
xchg
popf
lea
shlb
pop
pop
push
adc
jecxz
stos
fwait
xor
testb
jp
stc
or
call
mov
pop
adc
shll
push
add
fistpll
pop
insb
dec
pushf
mov
adc
enterw
std
sbb
mov
das
cmp
insb
rcrb
aaa
push
xchg
sbb
lahf
fs
jns
sbb
int3
dec
and
or
xchg
pop
push
mov
call
imul
push
outsl
test
mov
aad
nop
jb
mov
add
pop
imul
clc
fistpll
call
ds
cltd
dec
jno
inc
loop
jmp
mov
movsb
ss
sbb
test
jnp
cmp
sbb
mov
movsb
idivb
jmp
push
dec
testb
xchg
test
add
adc
jecxz
ret
in
outsl
out
push
test
es
adc
cmpsl
inc
dec
sbb
fnstenv
int3
movsb
mov
dec
fwait
ljmp
or
dec
jne
push
jecxz
divb
pop
fnstenv
mov
or
push
xchg
stos
fwait
out
jecxz
xor
sub
mov
or
inc
fmull
pop
sbb
jle
jg
xchg
sbb
cmpsb
je
xchg
sbb
mov
sbb
pusha
test
mov
pop
das
sub
cwtl
rcll
repnz
inc
div
xor
pop
ljmp
add
jnp
add
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
jmp
sub
aam
push
cltd
sbb
adc
js
test
notb
adc
movsl
es
ret
xchg
sub
pop
lock
std
xor
xchg
fadd
stc
pushf
jnp
mov
inc
icebp
es
sub
icebp
int3
in
xchg
inc
insb
dec
fstps
pop
subb
mov
lods
cli
test
je
xor
cmc
cwtl
mov
movsb
sub
add
xor
in
repnz
pop
sbb
mov
jp
or
in
mov
insl
mov
jle
add
outsl
mov
cmp
clc
xchg
ret
fs
push
ss
adc
adc
sub
cmpsl
dec
aaa
int
xor
in
out
cli
xchg
and
loopne
int3
xchg
xor
testl
int
pop
sahf
or
push
push
or
jae
es
push
loopne
wrmsr
mov
popf
outsl
aam
jp
xchg
pop
push
inc
push
outsb
sub
aad
sub
pop
cld
dec
nop
addb
xchg
jns
mov
xchg
sbb
in
jmp
lods
mov
lret
rep
and
sbb
jle
cmp
xchg
push
enter
adc
xlat
ss
ss
in
push
rcr
add
repz
sbbl
mov
sub
mov
popf
xor
daa
hlt
mov
sub
shrl
push
fwait
mov
push
mov
test
dec
lahf
popa
hlt
shl
les
xor
cmp
adc
fisubl
add
inc
daa
jbe
mov
movsb
adc
mov
add
mov
addr16
or
xchg
cwtl
or
jae
sahf
fisubl
cmp
mov
adc
pop
pop
fsubrs
mov
push
in
pusha
lcall
cmp
dec
stc
inc
mov
in
mov
psubd
nop
push
dec
add
mov
lea
dec
cli
subl
mov
mov
stos
out
negl
cli
andb
pushl
and
sbb
and
stos
ds
xor
push
adc
daa
cs
pop
push
mov
movsl
add
adc
mov
das
jne
or
sbb
inc
out
ljmp
cmp
push
in
pop
inc
rcrb
popf
fadds
clc
jbe
sub
subl
bound
je
adc
icebp
jae
dec
ror
jg
cmpb
stos
enter
pop
adc
loop
adc
xor
addl
mov
sub
shlb
mov
dec
lahf
into
add
mov
push
sub
adc
lods
call
mov
imul
ja
fnstenv
pop
loop
add
faddl
push
pop
dec
mov
cmp
jne
add
mov
push
mov
add
cs
icebp
incb
adc
std
mov
cs
std
arpl
sub
mov
mov
test
adc
js
inc
sub
jns
and
or
pusha
or
adc
fwait
lock
pop
dec
leave
mov
xor
dec
sbb
xchg
adc
jns
add
adc
and
mov
push
popf
push
cld
fmull
dec
addl
mov
dec
xchg
sub
adc
jne
cmpsb
mov
dec
jl
dec
lock
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
jmp
xor
sub
cltd
xor
outsb
or
js
dec
adc
mov
adc
or
loope
scas
cltd
jo
addr16
lret
outsl
adc
loop
sbb
sbb
in
mov
data16
push
or
jno
cld
pop
in
jns
enter
jle
jae
outsb
fwait
dec
push
push
dec
dec
test
lods
mov
add
jg
pop
mov
pop
inc
gs
and
filds
mov
push
cmp
inc
dec
icebp
movsl
xlat
stc
push
rcll
addb
outsl
lock
sbb
push
leave
mov
popl
pop
push
push
or
inc
lret
xchg
orb
mov
imul
or
jecxz
cwtl
loopne
jo
gs
mov
mov
stos
rcrl
inc
jno
xor
mov
add
and
out
mov
sub
xorl
cmp
fbstp
cs
mov
inc
mov
or
loope
jb
sbb
cmp
imul
xor
sbb
and
outsl
mov
fs
xchg
mov
dec
popa
sbb
push
std
cmp
rcl
leave
inc
sbb
dec
sbb
sub
dec
or
sbb
push
pop
fnstsw
aam
xchg
and
fidivl
imul
push
or
iret
nop
jno
in
push
sarl
lods
arpl
mov
shrl
sar
pop
sahf
and
push
and
dec
pop
xlat
ds
outsl
js
mov
jo
stc
pop
arpl
stos
pop
out
into
pop
or
and
fsubrp
addr16
xor
mov
add
fwait
and
jmp
add
xchg
inc
sahf
stos
lea
icebp
adc
fwait
cmpsl
test
arpl
and
xchg
inc
jl
or
sub
mov
jo
ja
cmp
and
push
mov
mov
movsl
pop
arpl
jne
jl
jno
push
test
cld
add
call
pop
adc
sub
cmp
mov
sub
fnstsw
cwtl
xchg
cli
fdivl
push
xchg
arpl
jno
jg
xchg
jns
dec
dec
ds
xchg
cmpsl
fisubrl
out
in
pop
imul
push
and
push
adc
and
std
sub
mov
repnz
test
mov
cmp
jmp
xchg
std
sbb
push
jle
cmp
pop
std
cmp
jp
cmp
stos
aas
add
or
pop
mov
je
jo
fwait
mov
sub
pop
pusha
add
cmpsb
ss
lahf
mov
lret
add
cmp
shlb
mov
pop
test
lock
test
add
pop
pop
jnp
scas
fstpl
xor
push
sub
cmpsl
xlat
jnp
dec
and
cmp
mov
das
icebp
movsb
xor
popf
push
popf
inc
jmp
shrb
cli
cmp
aaa
inc
cld
ret
push
cltd
aam
mov
neg
int
xchg
xor
nop
push
loope
push
inc
mov
sbb
dec
addb
rcll
cmp
xchg
jnp
jno
push
cwtl
ja
cs
out
cwtl
in
in
mov
movsb
insb
shll
hlt
not
sbb
pop
adc
sbbl
cmp
out
jp
add
jae
cmp
cmp
into
jne
sahf
icebp
push
mov
enter
aas
repz
enter
lcall
mov
int3
mov
jg
sub
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
jmp
mov
in
xor
sbb
stc
test
pop
out
pop
lods
xor
adc
adc
imul
dec
add
xor
lahf
inc
sbb
les
jp
adc
stos
dec
negl
jle
ds
pop
inc
inc
sbb
adc
adc
sarb
cwtl
xchg
call
jns
jg
jle
add
shlb
sub
icebp
xchg
jbe
loop
push
addr16
mov
popa
jp
out
mov
dec
mov
push
daa
enter
jmp
push
lahf
dec
mov
pop
mov
enter
add
fmuls
xchg
filds
sub
gs
push
dec
inc
aam
add
xchg
fwait
or
loope
or
mov
xor
int
testb
xchg
jg
push
negl
mov
movsb
mov
cmp
push
inc
ljmp
xlat
pop
sbbl
ss
add
aad
add
adc
jle
adc
xchg
xor
leave
imul
insb
test
rorb
stc
fdiv
cmpsb
movsb
das
subl
divb
xor
lock
xor
jle
pavgw
inc
mov
sahf
dec
add
fcompl
mov
lods
lds
icebp
sbb
inc
popf
cli
jbe
cmp
push
inc
mov
push
push
xchg
faddp
ja
loope
sub
add
bound
jno
cmp
arpl
popa
fsubrl
jecxz
mov
pop
inc
addr16
xlat
daa
mov
sahf
add
push
mov
sahf
xchg
dec
out
dec
pop
stc
mov
cmpsl
popf
push
imul
push
rorb
pop
cmc
test
pop
inc
fcmovu
or
mov
andb
and
cmp
add
and
mov
jae
pop
roll
xchg
jg
sub
ss
push
mov
pop
and
xor
jae
add
out
je
pop
mov
jecxz
iret
and
scas
cld
orb
sub
xchg
aad
xor
imul
ret
sub
xor
xlat
js
mov
lret
mov
test
icebp
cmp
jno
fmul
sbb
and
dec
and
dec
clc
jp
jg
sub
mov
scas
js
sub
call
out
test
adc
dec
nop
sarb
in
dec
int3
gs
les
aas
push
fildl
and
mul
cmp
push
add
sbb
push
and
scas
xchg
xchg
dec
xor
pusha
jbe
pusha
or
push
lret
jle
leave
adc
cli
sbb
js
inc
push
pop
outsb
xchg
and
jae
jmp
imul
jl
lods
and
pop
adc
jo
inc
add
movsb
lods
stos
in
mov
jecxz
and
sbb
and
outsb
xchg
add
and
aaa
bound
mov
lret
jmp
mov
xor
loop
xor
aas
jno
jns
dec
je
dec
jae
dec
andl
or
jp
ret
pusha
add
pop
outsl
pop
sahf
mov
out
push
add
scas
push
mov
mov
dec
sbb
shlb
mov
xchg
push
mov
es
scas
rcr
sub
in
inc
enter
sahf
call
andb
fcomps
jmp
les
and
out
inc
call
adc
inc
les
fdivl
shlb
movsl
and
sbb
loop
mov
jge
movsl
cltd
addl
and
daa
xor
loop
enter
out
jle
jnp
add
add
rorb
push
mov
mov
mov
imul
jmp
mov
leave
pop
dec
push
sub
push
call
mov
mov
adc
lahf
adc
ljmp
xchg
mov
add
std
jne
xor
jmp
mov
jg
outsb
and
or
std
push
in
movsb
mov
dec
je
mov
or
mov
lret
mov
dec
push
pop
jl
data16
xor
jb
lahf
loope
ret
test
aam
inc
push
test
sti
int
add
sahf
enter
mov
pop
iret
adc
test
push
std
pushf
idivb
ror
inc
adc
or
fcoml
cmp
sub
inc
ds
sub
std
sub
xor
test
add
fwait
daa
lahf
xor
xor
lds
mov
or
sub
movsb
popf
out
and
sub
sub
sub
negl
mov
mov
dec
incl
xorl
mov
lods
test
cmp
clc
aaa
and
inc
mov
int
nop
out
inc
sbbb
aaa
scas
cltd
xor
loop
inc
dec
std
jnp
jns
sub
aas
mov
stc
out
push
push
leave
xor
or
out
andb
push
in
jns
mov
test
imul
jo
inc
pop
add
imul
repz
add
xchg
das
mov
cld
mov
and
mov
mov
jp
inc
jns
repnz
cwtl
mov
add
fbstp
aaa
stos
add
cmp
hlt
lcall
fwait
xor
ljmp
inc
cmp
dec
das
in
mov
adc
idivb
and
lahf
lret
cmp
stos
sub
insb
mov
jns
xchg
jge
scas
jo
lods
pop
xchg
js
sar
and
popf
fldenv
aam
in
or
sbb
in
mov
add
and
inc
lea
sbb
ret
xlat
es
loopne
adc
pop
fisttpll
pop
nop
mov
sbb
mov
mov
jecxz
xchg
sub
cmc
or
cmp
xor
xlat
jb
push
jo
lods
les
lahf
push
mov
xchg
cmp
mov
mov
dec
cmp
adc
lods
xchg
push
push
gs
mov
mov
je
push
mov
int3
push
jae
or
add
adc
inc
fsubrl
cmpsl
cmpsb
mov
mov
jle
clc
adc
push
pop
addr16
dec
xchg
push
jne
loope
subl
clc
imulb
add
ret
aad
lahf
adc
hlt
mov
mov
jge
sub
jl
cmp
pop
adc
orl
sti
sub
test
mov
or
pushl
inc
repnz
inc
mov
cmp
mov
or
mov
push
push
sbb
movsb
mov
data16
inc
push
mov
stos
outsl
popf
std
out
fs
cmp
ljmp
cmc
pop
ret
seto
lods
jnp
aaa
mov
add
cli
pop
jns
dec
sbb
cmpsb
out
cmp
sub
sbbb
mov
dec
movsl
or
inc
rcpps
push
mov
sub
mov
test
out
cltd
add
aam
fiaddl
fstpt
mov
xchg
xor
movsb
sbb
aas
mov
enter
inc
test
sub
test
xlat
mov
in
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
jmp
pop
sub
pop
rcll
sub
scas
je
cmp
or
mov
adc
rcl
aas
ljmp
sarl
pop
test
xor
loopne
cwtl
int
ja
cmp
mov
jmp
mov
mov
mov
jp
pushf
out
dec
adcl
xchg
adc
rorb
jecxz
orb
add
ret
imul
push
call
je
push
xchg
mov
and
stos
sbb
ds
push
orl
xor
jecxz
out
out
or
jl
push
test
orb
pop
cmpsb
xchg
push
xor
fdivr
imul
inc
mov
xor
repz
es
call
xchg
cmpsb
sub
lret
jb
lods
leave
movsl
out
outsl
pop
mov
mov
fwait
jl
into
jg
test
dec
hlt
scas
pop
inc
lcall
jmp
loop
mov
inc
jmp
jae
jecxz
and
pop
push
notl
cmp
xor
and
jo
fcompl
sbb
into
mov
sub
ret
mov
movsb
xor
sbb
aaa
inc
mov
xor
xlat
or
scas
mov
mov
sub
cmp
push
or
popf
push
mov
cltd
xlat
lds
inc
in
das
and
push
push
or
xchg
xor
rcr
add
or
dec
push
ficoml
sub
jns
movsb
icebp
mov
xchg
aaa
mov
cs
adc
andl
adc
push
rclb
pushf
sbb
lret
fcmovne
ljmp
negl
aaa
add
ret
jecxz
xor
leave
adc
dec
ljmp
idivl
test
pop
push
in
std
adc
mov
or
jns
pop
ficompl
add
shl
pop
and
push
inc
scas
push
call
jmp
add
xor
jb
js
aam
cmpsb
lock
push
lds
bnd
outsb
clc
shrl
add
and
shrb
stos
mov
pop
pop
add
or
or
aam
cmp
ja
and
mov
xchg
stc
imul
dec
hlt
sub
nop
pop
out
jge
xor
fistl
cmp
lahf
xchg
xchg
orl
ss
add
add
loop
mov
mov
pop
or
cmp
dec
mov
pushf
arpl
lahf
fidivl
mov
and
push
in
mov
mov
push
push
int3
imul
test
cmp
or
std
aad
inc
xchg
add
divb
sbb
sar
mov
pop
push
adc
scas
scas
xlat
sub
fnstcw
testb
mov
in
jns
adc
cmpsb
les
pop
sub
or
dec
lahf
rsm
mov
aas
sub
push
enter
clc
adc
dec
pop
js
push
clc
fldl
mov
lcall
out
add
cli
dec
dec
call
jge
pusha
shlb
sahf
mov
pop
filds
push
mov
mov
pop
fcmovbe
mov
call
or
ret
or
xor
cmp
out
shrl
lods
mov
shl
out
lahf
and
mov
es
jbe
jle
in
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
jmp
in
stc
sub
les
jle,pn
adc
mov
adc
or
aam
cmc
in
inc
xlat
pop
mov
mov
dec
xchg
ja
jmp
insb
lcall
lcall
es
sti
data16
leave
cld
incl
or
dec
call
sub
es
push
scas
xchg
cmp
lds
or
aas
addr16
lret
add
movsl
stos
jge
sbb
push
xor
dec
inc
pusha
dec
arpl
mov
jnp
or
xchg
testb
imul
xor
cmp
shll
jbe
ror
mov
xchg
add
test
pop
add
sbb
inc
cld
inc
shll
loop
push
cmc
or
add
or
sub
loop
cmp
xchg
ljmp
mov
imul
mov
and
xor
xchg
ljmp
mov
ss
js
jmp
insl
xor
mov
pusha
push
dec
fwait
inc
mov
add
movsl
mov
mov
fisubrl
xchg
imul
mov
pop
mov
jno
daa
inc
xchg
mov
sbb
repnz
loop
add
cmp
xor
iret
fdivr
jg,pn
mov
ret
sub
add
popf
xchg
in
jmp
addr16
mov
push
or
push
inc
pop
testl
test
inc
push
ja
dec
mov
cli
fidivrs
fistpl
push
pop
xor
pop
mov
stos
sub
push
rorl
cmp
scas
sahf
mov
in
std
dec
test
call
into
mov
cltd
inc
scas
ja
mul
js
xchg
aam
sbb
push
pop
or
sbb
std
nop
cmp
xchg
bound
and
popa
xchg
inc
jle
shl
pushl
mov
xchg
push
adc
cmpsb
int3
mov
out
imul
lea
add
mov
adc
shl
out
pop
mov
dec
pop
xlat
out
fcmovnbe
ret
xor
dec
sbb
dec
nop
scas
push
add
je
out
fisttpl
mov
les
dec
mov
add
cmp
sub
loopne
ss
aad
daa
jae
lea
mov
lret
repnz
sti
lahf
xchg
push
aas
ret
out
mov
or
std
jecxz
xor
cmpsl
aam
mov
push
fcoms
insl
xor
test
rclb
mov
pop
scas
jl
jp
sub
into
push
pop
ret
rorl
add
add
jmp
cmpl
jae
sahf
inc
push
adc
xlat
sub
mulb
jmp
int
pop
adc
fdivl
jno
daa
mov
out
popa
dec
adc
nop
xor
fbstp
fs
xchg
pop
xor
xchg
and
or
out
fsubl
cmp
je
repnz
fdivl
pop
das
stos
jbe
mov
jbe
jge
fstpt
pop
dec
and
aas
mov
mov
inc
push
cld
cli
sarl
loope
fsts
cwtl
ret
inc
add
popa
ret
add
stos
movb
loopne
fldenv
frstor
cmc
out
insb
and
or
pop
scas
imul
aas
leave
cmp
jecxz
push
and
scas
pop
mov
jecxz
arpl
arpl
jl
div
xchg
push
and
mov
adc
add
sarl
enter
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
jmp
jo
pop
bound
stos
aad
mov
mov
adc
add
pushf
loop
rolb
or
hlt
dec
cmpsb
cmp
fbstp
in
jbe
push
arpl
push
xor
shrb
add
hlt
inc
mov
inc
pop
cmc
adc
leave
addb
call
jb
xlat
std
add
mov
fsubs
fstpt
mov
jno
lret
mov
aam
lock
lcall
jnp
iret
cmp
and
pusha
lods
roll
ror
in
push
push
dec
jno
sub
inc
data16
lret
faddl
in
fs
dec
and
cmpl
lea
mov
push
dec
lods
xor
pop
fwait
sub
push
push
sbb
xchg
lahf
daa
int
jne
sbbb
inc
mov
repz
xchg
xchg
movsl
push
cmp
daa
popa
jle
mov
lahf
fsubrs
dec
mov
mov
inc
ret
popf
gs
xor
sti
inc
imul
scas
and
sub
dec
int
sbb
add
push
push
in
ret
out
and
xor
cmpsl
lock
fisttpl
popf
cwtl
pop
mov
push
jge
add
lods
mov
jge
dec
cmp
dec
lss
mov
or
ja
and
push
inc
movsb
sti
mov
mov
push
pushl
adc
fiaddl
and
mov
mov
mov
aad
add
pop
inc
pop
dec
outsb
cld
rorb
cmc
cmp
aaa
test
cmc
hlt
out
add
fisubrl
loop
jb
lds
dec
into
pop
outsl
aam
mov
enter
jle
add
add
or
icebp
xchg
ficoms
in
xchg
in
adc
add
mov
and
mov
das
daa
adc
aam
add
xor
fidivs
pop
dec
mov
xchg
daa
fwait
rcll
xchg
mov
pop
loopne
and
lods
ss
pop
outsb
or
enter
fld
pmulhw
push
daa
cli
sahf
cmp
xchg
jl
xchg
icebp
and
std
mov
pop
jo
xor
std
cmp
stc
bound
outsb
dec
push
mov
cmp
mov
lcall
scas
lds
fiadds
cmpsb
out
aad
ljmp
pusha
push
int3
jecxz
clc
inc
jecxz
mov
ret
ret
cld
popa
lcall
add
xor
and
pop
fwait
and
xchg
dec
mov
dec
inc
adc
or
inc
icebp
add
ret
std
jo
sbb
pop
cli
adc
xchg
push
jne
or
pop
sahf
xor
idivb
pop
bound
mov
or
dec
push
push
push
xor
das
mov
sarb
cld
icebp
andps
stos
adc
push
fiadds
jmp
hlt
cld
xor
xchg
push
fsubs
adc
dec
pushf
xlat
in
add
and
insb
or
sub
cmp
mov
add
or
movb
movsb
lahf
push
insb
push
ret
popf
add
movsb
lahf
xchg
push
mov
sub
subl
rorb
or
outsl
pop
dec
or
push
incl
inc
pop
ja
fistpl
jno
pop
stos
lahf
in
dec
pop
pusha
lret
pop
es
call
adc
add
iret
jecxz
mov
add
mov
mov
mov
xor
xor
jmp
pop
xchg
push
dec
push
sbb
js
insb
insb
clc
add
jle
sbb
adc
fwait
nop
out
scas
sbb
rorl
ficoml
ja
subl
cltd
or
xchg
iret
inc
pop
repnz
inc
mov
out
mov
popa
repz
mov
js
or
dec
or
rep
or
hlt
shlb
jmp
push
clc
inc
cmp
jg
fstl
dec
mov
xlat
ffree
and
rcr
scas
lds
dec
imul
push
xchg
mov
adcl
dec
jmp
sbb
loopne
pop
sub
xchg
les
fisubrl
dec
aam
sub
rorb
mov
imul
pop
mov
add
jecxz
insb
fldenv
xor
addr16
sbb
sarl
jl
add
out
aas
xor
rorb
cmp
and
dec
jo
pop
pop
gs
in
mov
mov
xchg
dec
cmpl
fcmovnbe
test
icebp
cltd
dec
daa
in
call
or
sahf
out
rol
fwait
xor
sahf
sub
es
icebp
jmp
xchg
add
mov
pop
jl
imull
jcxz
jae
xchg
test
pushf
push
and
ds
pop
cmp
push
icebp
inc
mov
push
inc
mov
mov
movsb
push
adc
idivb
push
or
push
ret
mov
lret
push
mov
enter
xor
mov
xorb
push
pop
ret
ret
lea
dec
mov
stos
and
push
xorb
push
sti
inc
sti
pop
loope
fisubs
out
sub
and
jge
out
cmp
jmp
fimuls
pop
aad
xor
cmp
mov
inc
fsubs
aas
fwait
cmp
and
pop
sarl
fucompp
xorb
adc
and
xor
jno
lret
xlat
ret
jl
mov
dec
pop
push
sete
lods
adc
mov
mov
push
push
sub
repz
add
gs
movsl
daa
mov
int3
imull
rcrb
es
mov
jle
cmp
sbb
int3
lds
sbb
rcl
cmpsb
and
popa
outsl
mov
fnstsw
pop
out
bound
xchg
add
mov
mul
mov
sub
jp
jg
cmpsl
push
jmp
fwait
stos
call
cmp
and
pop
dec
int
mov
mov
pop
popf
inc
push
ljmp
mov
jge
faddp
lret
enter
cld
adc
mov
mov
repnz
shll
inc
out
jge
divb
out
sarl
or
pop
popa
inc
insl
lock
xor
fldl
and
ja
stos
mov
mov
sub
jns
push
clc
cltd
hlt
enter
sbb
push
xchg
gs
callw
jmp
sahf
leave
aaa
and
test
cwtl
clc
rcll
stos
int
jl
outsb
insl
or
adc
outsb
sub
jge
ljmp
lret
add
or
adc
sub
or
and
into
push
int
cmpsb
sbb
inc
add
lcall
add
lahf
ret
outsb
bound
bound
loopne
jge
cmp
jmp
mov
mov
sbb
test
jne
push
loop
mov
outsb
in
gs
push
inc
into
inc
mov
or
adc
pop
pop
sub
jmp
enter
and
testb
addb
add
shrb
add
movl
movl
jmp
out
sbb
fsts
xchg
add
ficoms
adc
addr16
cmpsl
cwtl
sub
pop
leave
ud1
out
scas
jnp
filds
xlat
repnz
xchg
inc
lahf
jge
jle
and
std
std
push
aaa
lcall
clc
fdivs
sti
cmp
cmp
mov
aam
test
jne
imul
test
jo
and
das
mov
inc
jg
mov
push
lock
sub
out
shll
sbb
outsb
jns
popa
pushf
mov
or
sbb
sti
imull
lock
movl
mov
pusha
mov
cwtl
std
aaa
and
repnz
xchg
xchg
xor
fimull
call
lds
sub
les
adc
cmp
mov
jecxz
movsb
or
in
pop
and
sbb
mov
scas
or
rcrb
and
sbbl
imulb
test
sbb
sarl
xchg
mov
jle
enter
adc
stc
xor
loop
mov
popf
aaa
xchg
push
inc
aaa
test
es
xchg
out
jo
inc
mov
sbb
cmp
aas
pop
push
xchg
sbb
dec
test
ds
mov
dec
out
jp
pusha
xchg
clc
mov
movsl
xor
dec
sub
jg
test
sub
imul
fstl
pop
jmp
inc
jp
mov
sahf
push
ret
test
push
mov
cmpsl
xchg
ds
rol
jne
aad
mov
inc
sub
dec
and
movsl
add
in
and
pop
enter
aam
push
call
dec
jmp
out
dec
rcll
test
les
push
jp
test
jmp
mov
pop
lock
insb
stos
add
repnz
xor
out
arpl
nop
jmp
lock
lahf
push
jnp
mov
loopne
in
inc
mov
jecxz
icebp
clc
test
mov
clc
mov
imul
loopne
dec
lret
xorl
test
scas
and
test
fcomip
xor
outsb
ss
ja
dec
push
sbb
jge
jo
subl
jbe
cs
push
ret
lds
dec
push
ljmp
cmp
in
mov
jl
call
pushf
xchg
cmpsl
gs
enter
aas
int3
pop
xlat
or
das
add
jnp
xchg
pop
lods
ja
xchg
xor
cmpsb
jae
hlt
adc
pop
mov
hlt
insl
jmp
popf
repz
outsb
loope
imul
into
pop
push
test
out
push
add
test
xor
in
sbb
arpl
lcall
pop
dec
fs
lcall
dec
adc
sbb
inc
jns
loopne
mov
xchg
mov
or
out
dec
cwtl
push
mov
and
mov
pop
lcall
xchg
add
xchg
mov
insl
mov
adc
arpl
out
jmpw
jle
inc
fcmovnu
adc
push
les
jno
je
stc
sub
cmp
inc
or
mov
cld
pop
lcall
sbb
and
mov
or
fs
or
out
or
addr16
pop
cmp
adc
jno
jb
outsb
push
pop
xchg
out
push
xchg
and
cwtl
sarb
clc
mov
inc
hlt
insb
dec
add
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
jmp
fisubrs
outsb
rcrl
iret
sbb
insb
jnp
out
stos
jae
adc
mov
adc
mov
cltd
sbb
movsl
and
inc
fs
scas
cs
into
jp
popf
mov
loop
cld
mov
adc
and
test
lcall
pop
sbb
inc
xchg
and
stc
sub
push
mov
sub
lahf
shr
cmp
add
push
xor
bnd
adc
push
dec
movsl
or
je
pop
int3
mov
stc
jno
inc
push
stos
shlb
rorl
pusha
shrl
int
outsl
xchg
int3
enter
das
loopne
push
xchg
lds
stos
orb
push
dec
jno
scas
imul
dec
jnp
add
ja
les
aas
jmp
movsl
jge
inc
push
or
shrb
mov
push
movsl
in
and
shl
sub
shll
inc
or
jp
sub
test
dec
popa
or
jecxz
sbb
cmp
mov
lock
ds
daa
jmp
mov
add
movsl
pushf
or
ds
push
fistps
dec
mov
dec
xchg
push
mov
jne
aaa
inc
pop
pop
call
add
add
xlat
les
sbbb
sbb
push
sti
jno
xor
mov
test
sbb
je
sub
sub
imul
mov
mov
loop
nop
adc
adc
sarb
fistps
mov
push
mov
mov
push
xor
xlat
or
out
dec
add
dec
cmp
cmp
inc
shl
repz
jge
faddp
loop
test
dec
dec
mov
push
fwait
or
jne
bound
sub
in
pop
pop
outsl
or
fs
repz
ljmp
out
sub
sbb
movsl
mov
int3
inc
es
mov
int
jbe
lds
scas
cmp
jl
stos
mov
leave
inc
adc
aaa
fwait
pop
mov
out
push
clc
dec
repnz
and
iret
aaa
xor
pop
ret
pusha
adc
std
inc
push
add
sub
call
cmpsb
mov
icebp
inc
gs
mov
jo
pushf
or
pop
sub
dec
fldl
pop
lock
dec
movsb
mov
jo
outsl
rorb
aaa
mov
jae
dec
sbb
in
xchg
bound
mov
rcr
into
sahf
mov
push
xchg
mov
jmp
ds
mov
call
je
push
fisubrs
inc
lcall
test
xorl
mov
cmc
imul
xor
fists
pop
insl
daa
mov
rcrl
pusha
add
mov
movsb
sbb
or
adc
mov
pop
pop
push
pop
mov
jns
dec
adc
push
and
cwtl
push
mov
push
xor
mov
mov
dec
int3
push
mov
bound
sub
scas
push
adc
cmc
inc
push
mov
mov
cltd
jmp
adc
in
out
dec
xchg
fsubl
cmc
fstl
mov
insb
push
and
pop
add
mov
dec
mov
testb
leave
jg
push
idivb
lret
add
jo
movb
push
push
in
jmp
and
jg
mov
push
jne
cs
mov
jnp
imul
pop
jbe
scas
add
sbb
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
jmp
in
xchg
es
cwtl
pop
push
and
loop
mov
mov
adc
out
psubsb
mov
mov
push
push
lock
das
incb
or
push
adc
repz
aas
lret
or
lods
jp
lds
add
gs
xor
pop
mov
ret
push
stc
add
jle
faddl
jmp
jo
fcmovbe
jo
pushf
rcrl
lret
daa
rcrl
addr16
pushf
cmpsl
or
bound
cmp
dec
stc
mov
push
xchg
xchg
dec
mov
pop
insb
js
jne
negb
adc
sti
nop
sahf
mov
fimull
adc
mov
repnz
insb
addr16
popa
stc
add
and
cmpsl
das
push
insb
sub
mov
divl
xchg
rorl
ds
addr16
pop
push
call
dec
add
clc
cmp
adcb
fmuls
stc
sbb
push
sub
bound
daa
mov
fcmove
jno
push
loopne
xchg
in
and
shr
push
rclb
insb
mov
jge
add
push
lahf
xchg
inc
mov
sar
jmp
stos
inc
dec
add
ss
add
fldt
gs
int3
cmp
push
jge
sub
jge
mov
popf
movsl
fs
andb
and
sbb
dec
mov
pop
add
std
push
arpl
mov
notl
in
or
fsubrl
xchg
pop
cmc
fisubl
mov
rcr
icebp
ret
adc
mov
cli
fisubs
in
adc
inc
dec
fistl
ret
cli
dec
sbb
cltd
inc
ljmp
dec
aas
adc
cwtl
cmp
mov
out
mov
nop
and
add
add
stc
push
mov
add
xchg
add
bswap
negb
xchg
imul
cmpb
push
in
imul
fwait
fwait
sbb
jne
shlb
inc
sub
or
and
hlt
inc
aas
mov
pusha
cmpsl
xor
and
dec
xchg
int
push
scas
fwait
ja
out
or
or
sbb
mov
jge
arpl
inc
xchg
mov
daa
das
lock
out
loopne
and
xchg
roll
sti
xchg
sbb
daa
in
jecxz
pop
mov
push
iret
xchg
dec
rorl
xchg
and
pop
and
pop
dec
adc
sti
xchg
iret
les
loope
or
jae
jmp
lahf
jl
and
mov
push
mov
lods
push
addr16
out
sarb
shlb
mov
mov
clc
sarb
stos
xor
push
out
stc
scas
stc
sub
inc
add
sub
insl
xchg
push
das
imul
inc
dec
mov
cmc
ret
jecxz
jno
push
jns
scas
pop
fs
sub
popf
mov
fnsave
mov
push
cmp
movsl
icebp
decb
ljmp
adc
aaa
mov
push
xchg
outsl
inc
xchg
xor
adc
call
xor
xor
hlt
test
pop
mov
lret
outsb
inc
mov
inc
sub
shrl
lods
lret
icebp
in
insl
jne
cmp
incb
scas
cli
sbb
push
mov
mov
push
bound
cli
stos
loopne
test
mov
nop
and
fsubrp
in
popa
pop
nop
sbb
cmp
xchg
add
ja
xchg
mov
sbb
repnz
mov
shr
iret
add
add
pusha
inc
ja
pop
aaa
and
or
push
add
adc
mov
and
jno
jb
adcb
add
xchg
cltd
shl
pop
testb
adc
test
sti
sub
out
test
add
jnp
pusha
add
leave
sbb
sbb
sbb
cli
push
test
loopne
inc
and
adc
in
leave
sub
fs
inc
jl
out
ja
mov
lahf
and
scas
xchg
movsb
xor
jg
adc
js
pop
aaa
xchg
loop
in
push
fcomps
mov
push
imul
test
jns
jb
push
or
loopne,pt
inc
fstpt
arpl
pop
cmp
pop
pusha
push
rcll
lods
filds
mov
icebp
add
push
addr16
ljmp
jle
jo
in
adc
sub
test
and
push
sbb
mov
pminsw
fdivrp
in
add
pop
sbb
hlt
fbld
jg
hlt
or
push
push
rcll
pop
xchg
mov
or
jns
push
adc
xor
int3
xchg
test
mov
les
ljmp
aam
pop
pop
mov
add
or
jo
pop
mov
scas
fidivs
mov
push
shrb
movsl
and
popf
fidivrs
push
jle
push
adc
jo
jo
mov
sbb
fldt
xchg
adc
jbe
mov
jp
mov
lahf
cwtl
ss
arpl
sbb
popl
pusha
add
push
xchg
jbe
lret
sub
or
rclb
cmpsb
sbb
fcmovbe
pusha
stc
std
add
push
jb
mov
pop
or
sbb
pop
lock
mov
shrb
pop
in
fildll
aam
add
je
sbb
sbb
xchg
mov
dec
pushf
aaa
cmp
mov
mov
test
cmpsb
add
cmovs
out
nop
pop
es
pop
lahf
cmp
aas
lahf
lds
lahf
scas
out
cltd
or
popa
mov
lret
push
xchg
mov
test
loopne
sub
or
pop
stos
sbb
repnz
mov
jbe
cmp
inc
pop
sti
jmp
mov
out
cmp
add
cs
mul
jge
sub
gs
xchg
adc
iret
jnp
xchg
testb
loop
call
pop
sbb
sbb
and
jns
cmp
notl
jge
xor
jg
out
cld
and
nop
adc
lret
call
out
lods
rorb
jns
adcb
pop
hlt
dec
jae
stc
ss
add
cmpsb
xchg
push
lcall
jg
cmp
sti
es
js
mov
sti
rcll
mov
fs
rcll
xor
dec
scas
loope
cmpsl
iret
notl
jbe,pn
pop
imul
fistpll
repnz
mov
xor
inc
cmp
push
xchg
scas
bound
icebp
mov
scas
fnstsw
out
pushf
pop
pushf
push
xor
cmpsl
or
out
lods
inc
test
stos
mov
xchg
insl
scas
imul
dec
cs
insl
lret
fadds
add
cmp
aaa
in
in
jp
icebp
je
sub
add
faddl
mov
movb
push
sub
test
arpl
cmpl
push
std
sub
shlb
push
push
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
xchg
lods
sub
addl
adc
adc
adc
popa
lret
sarl
sbb
sub
dec
inc
xchg
sbb
pushf
shll
cmpsl
xor
jecxz
cmpsl
add
xor
sbb
lret
clc
cmp
sbb
test
fdivl
jne
cwtl
leave
repnz
cmp
sbb
rorl
lret
mov
jmp
xchg
in
or
ds
add
cmp
call
xchg
push
or
aam
aas
mov
rcll
mov
xchg
lods
pop
sahf
adc
pusha
adc
fst
cmpsb
pusha
adc
insl
pop
imul
cwtl
stos
loopne
mov
lcall
push
pop
outsl
out
and
adc
sbb
mov
push
sub
testl
adc
js
adc
jl
out
sub
cmp
xor
les
lds
push
xchg
mov
add
and
test
insb
push
xchg
mov
fildl
fwait
pushf
idivb
adc
xor
in
mov
shl
scas
into
decl
imul
and
scas
insb
jmp
out
stos
in
inc
int
and
sub
fiadds
cmp
aad
rorl
sbbb
xlat
jp
mov
mov
xor
mov
mov
mulb
insb
mov
pop
movsb
mov
mov
lret
fxch
dec
and
xchg
pop
or
inc
lret
das
shll
adc
and
push
lea
daa
in
sub
push
jl
or
pop
es
jbe
and
pop
xorl
clc
jp
ds
fsubrl
inc
ja
jl
sti
dec
scas
mov
adc
fcomp
imul
mov
leave
addr16
push
xchg
xor
mov
xchg
inc
scas
pop
sbb
add
fucom
push
push
insb
jle
adc
xorl
lret
fdivs
push
loop
and
loope
or
pop
popf
int3
add
repnz
push
leave
ja
out
das
mov
inc
outsb
pop
ret
mov
xchg
daa
mov
ds
mov
cltd
push
fsubrl
and
or
xor
push
pop
mov
clc
shrl
sub
ss
sub
pop
movsl
lods
out
ret
insl
xchg
add
mov
mov
lret
cmp
test
jecxz
lret
shrl
xchg
jle
mov
call
dec
sub
push
mov
or
cmp
movsl
and
add
aad
xor
jae
enter
pop
xchg
mull
fnstcw
aas
inc
call
mov
imul
scas
scas
adcl
pop
cld
dec
mov
inc
hlt
push
cmp
add
test
call
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
jmp
jle
mov
cltd
cmp
or
stos
mov
sub
out
lock
adc
adc
jbe
out
adc
inc
push
popf
push
cli
dec
mov
mov
mov
ja
movsb
cltd
inc
stos
cmpsb
stc
shll
test
and
mov
push
pop
or
sbb
in
jbe
es
inc
xor
insl
cmpsb
ret
sti
add
pop
and
add
testb
push
cld
pop
cmp
inc
sub
inc
jmp
cwtl
xlat
gs
stos
mov
xor
push
aam
daa
sahf
incl
shl
aas
xchg
rclb
cmp
decl
cmpb
adc
dec
lret
sahf
cltd
stos
push
pop
push
mov
sahf
mov
mov
cmp
jl
in
loope
fisttpl
or
cs
adc
mov
jb
adcl
mov
sub
test
cmp
pop
dec
ret
std
int
mov
mov
jne
je
ret
pop
mov
or
and
sub
dec
nop
stos
or
loope
stos
mov
aaa
mov
cmpsb
cmpsb
outsb
sub
and
xchg
pusha
jo
sub
nop
xchg
stos
mov
popa
mov
ficoms
push
xor
jmp
xchg
sahf
fmuls
int3
in
xor
dec
jp
call
rorl
add
ds
divl
or
xchg
xor
cmp
inc
lret
cmp
mov
in
arpl
movsl
lea
jno
loopne
in
pop
mov
lahf
cwtl
scas
dec
xor
loop
jmp
jmp
sbb
lret
int
cltd
pusha
sbb
cmovnp
mov
mov
sub
in
mov
mov
jl
xor
test
mov
xchg
cmpsl
add
imul
ljmp
cmc
jae
mov
pop
lods
loop
mov
mov
push
aaa
dec
mov
frndint
test
arpl
mov
fistpll
repnz
push
je
xchg
pop
sbb
stc
add
js
push
cmovnp
movsl
sti
jg
sbb
scas
push
cltd
jle
cmp
insl
jns
sub
xchg
and
test
ja
sbb
sbb
shlb
inc
sub
pop
add
mov
cwtl
jns
mov
pop
lahf
filds
xor
lods
mov
sbb
sarl
or
push
pop
xor
push
loope
mov
loop
or
mov
enter
jge
or
inc
je
pushf
imul
jno
push
fidivl
cmp
jmp
outsb
jno
icebp
divb
jno
and
cmp
dec
mov
sbb
adc
test
out
pop
dec
fld
fldt
cli
pushf
les
or
mov
fs
xchg
push
arpl
push
push
adc
xchg
jno
pop
orl
inc
lahf
dec
lods
jmp
cmp
fcmovnbe
xor
movsb
aas
mov
cli
imul
push
mov
adc
out
out
jnp
inc
cmp
repnz
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
jmp
mov
popf
dec
cltd
push
and
rclb
jmp
jle
out
adc
adc
adc
ja
jmp
es
cld
shr
sub
add
push
fisttpl
gs
mov
roll
and
testl
in
int3
dec
mov
mov
scas
arpl
xchg
out
adc
mov
add
addb
pop
mov
orl
push
mov
fwait
scas
lock
mov
hlt
mov
subl
or
outsl
fsubrl
xchg
adc
sub
and
and
pop
add
mov
loop
scas
pop
test
xor
test
in
lahf
cmp
pusha
mov
ss
aad
test
mov
in
int
stos
or
push
mov
cwtl
mov
rorl
int3
xor
mov
jns
ds
push
cmc
test
dec
mov
outsl
outsl
inc
cmp
xchg
out
push
or
mov
xchg
fsubrl
xchg
cmpsb
rolb
testl
and
std
push
mov
repnz
in
jns
dec
cmp
dec
mov
cs
push
xchg
pop
xchg
add
movsl
fistpl
push
cltd
movsl
cwtl
in
pop
fstl
adc
cmpsl
das
jbe
xor
aas
pushf
mov
push
fs
push
lret
jg
mov
cmp
push
sub
or
mov
addb
dec
mov
pop
pop
cmpl
pop
inc
fwait
xchg
sbb
cmp
or
fistl
jns
inc
xlat
add
jg
or
js
mov
dec
sbb
popa
mov
xorl
ret
push
loope
jecxz
movsb
inc
popf
cmp
adc
sub
jne
add
clc
lahf
xor
push
movsl
adc
mov
pusha
adc
lds
mov
jmp
xor
lods
stc
lahf
pusha
fwait
mov
lods
mov
mov
arpl
cmpsl
subb
cmp
pop
fs
pop
cli
cmpsb
add
jae
aas
xchg
pminub
pop
loopne
pop
scas
adcl
sub
xchg
jmp
test
inc
imul
mov
arpl
sbb
fsubrs
cmpsl
push
cld
sbb
fldcw
and
cmp
leave
or
or
notb
nop
sbb
movsl
mov
in
dec
pop
jecxz
cmp
jp
inc
stc
xchg
aas
and
fwait
push
xor
rcrb
lods
int
mov
pop
pop
or
xchg
subb
xchg
popa
test
pop
call
jecxz
sub
ds
imul
repnz
push
push
pop
dec
pop
xchg
sub
call
sub
ljmp
repz
test
aas
or
adc
fists
mov
cli
scas
pusha
std
ja
mov
rorl
and
mov
add
ss
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
jmp
xchg
jne
and
js
push
jle
jecxz
adc
adc
adc
xchg
jp
jp
dec
push
add
ficoml
adc
int
outsb
cmpsb
cwtl
mov
adc
xor
ljmp
jecxz
leave
and
sti
pop
fsubrp
or
mov
push
icebp
jge
outsl
sbb
lahf
fnstsw
fnstcw
and
subb
pushl
ljmp
decl
push
inc
outsb
lahf
and
scas
dec
mov
pop
jo
mov
aad
les
das
clc
inc
in
stos
cwtl
pop
jbe
push
mov
pop
fs
sbb
push
jp
sub
fistpll
andl
lods
negb
or
pop
cs
mov
pushf
mov
pop
leave
fisubrs
pop
add
mov
jbe,pn
sub
jb
pop
mov
push
mov
or
in
push
pop
js
adc
cltd
ds
loopne
lods
push
push
loope
int
mov
push
loop
adc
inc
mov
in
jae
ror
pop
and
sbb
cmc
cmpsl
push
cli
pop
bound
lahf
rcll
data16
jnp
das
xor
inc
daa
or
insl
sahf
jns
lock
jg
test
sub
cs
loope
iret
add
adc
aaa
push
insl
sub
or
out
mov
bnd
fildl
sub
jmp
pop
add
into
mov
shlb
jl
mov
push
or
les
leave
push
and
and
cmp
cmpsb
mov
cmpsb
movsb
enter
cltd
mov
sub
dec
mov
add
jmp
les
cmp
stc
jno
insb
add
and
mov
jl
call
mov
inc
loope
push
mov
ja
pop
pop
add
sbb
mov
sub
mov
push
jl
dec
pushf
add
das
hlt
sbb
adcl
das
call
jnp
inc
jecxz
xchg
jl
bound
lods
mov
sbb
leave
fisttpl
js
push
mov
movsl
xor
and
inc
and
pop
xor
cmc
mov
cmp
mov
adcl
xchg
jecxz
jge
mov
loop
dec
jl
pop
xchg
out
aas
inc
push
mov
into
movsb
in
movsl
pop
mov
shlb
mov
ds
imul
dec
push
out
and
xchg
stos
adcl
stos
fsubrl
fsts
mov
xor
jg
cmc
xor
movsl
push
popa
aad
push
lret
sub
xor
push
push
mov
cmpsb
mov
xchg
mov
adc
inc
and
add
stos
inc
pop
pop
fsts
adc
outsl
jnp
pop
cmp
sub
mov
cmc
mov
ret
inc
out
mov
adc
dec
mov
les
sbb
pop
adc
hlt
aam
inc
inc
cld
icebp
adc
add
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
jmp
or
jo
outsb
mov
insb
sbb
loope
adc
adc
adc
xor
int
insl
or
pop
cmpsl
and
bound
into
mov
adc
add
inc
lock
arpl
and
pop
or
or
jmp
lods
push
sar
scas
or
xor
icebp
push
adc
ja
xor
add
mov
test
mov
arpl
cmpsb
pop
xorl
mov
pusha
lea
lds
gs
fmuls
dec
lret
adc
push
pop
adc
in
xchg
ja
jae
dec
addr16
xor
cmp
rclb
loope
xchg
fs
gs
mov
push
sub
cmp
inc
add
out
or
lret
stos
out
jmp
push
xor
dec
xchg
pop
repz
sbb
add
cmp
leave
mov
out
mov
inc
mov
aaa
clc
or
mov
mov
add
xchg
mov
and
adc
add
scas
push
sub
clc
push
xor
inc
cmp
stc
sti
mov
out
test
xchg
jnp
mov
lahf
inc
imul
mov
lcall
fstpl
mov
adcl
cld
out
nop
in
movsl
das
data16
mov
fadds
xor
pop
dec
cltd
xor
dec
rolb
cltd
aad
add
les
mov
inc
and
movsb
outsb
jmp
es
cmpsl
jmp
jp
jae
adc
mov
insl
cmp
jnp
repnz
adc
test
movsb
popa
clc
add
les
out
xchg
lret
mov
scas
push
clc
shlb
rcr
imul
neg
xor
sub
cmpb
in
pop
test
pop
shl
inc
lds
mov
fstpt
fists
push
addl
out
outsl
fisttpl
and
inc
test
jb
clc
mov
idivl
adc
mov
imull
mov
rclb
fildl
stos
mov
js
lock
imul
sahf
adc
mov
inc
adcl
add
in
lahf
jp
rcrb
xor
loop
adc
repnz
cli
jl
mov
lds
mov
dec
jnp
icebp
mov
add
addr16
xor
ja
adc
sub
mov
iret
ret
call
mov
mov
cld
push
test
jae
dec
sbb
push
inc
fdiv
stos
xchg
test
cmp
push
outsb
pop
push
xor
lea
mov
cmp
aaa
clc
bound
pop
fs
lods
cld
sub
rcrl
jae
mul
jmp
add
xor
mov
mov
psubq
shlb
fs
outsl
adc
add
xorl
xor
and
imul
inc
int3
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
jmp
lds
mov
mov
cmpsl
xlat
adc
adc
adc
lods
sbb
arpl
mov
cmp
mov
or
jp
dec
mov
in
rorl
in
and
mov
test
lret
inc
lcall
inc
xor
cmpsl
inc
push
iret
icebp
cmp
in
fdivr
daa
mov
dec
mov
pop
mov
les
xor
push
mov
xor
cmp
jbe
jns
xor
pop
add
mov
or
sub
cmp
add
adc
mov
popa
or
aas
outsb
inc
cs
aas
inc
loope
out
rol
jecxz
push
add
push
testb
sahf
push
cmp
int3
imul
hlt
hlt
sbb
clc
add
fsts
loopne
lahf
add
push
pop
cmpsl
jle
pusha
iret
xorb
enter
adc
pop
jp
loope
cmp
pop
inc
and
adc
ja
repz
hlt
mov
sub
pop
gs
mov
shll
pushf
adc
push
jle
cmc
push
push
fwait
test
lds
and
xchg
daa
mov
cmc
les
xchg
aaa
sub
sbb
sub
and
jbe
call
shrb
je
mov
lahf
xor
lods
sbb
daa
push
ja
fdiv
into
inc
mov
rolb
pop
sub
test
inc
imul
rcl
cmp
xor
loop
call
loopew
jnp
stc
jg
shl
ds
and
cmc
dec
imul
in
arpl
in
fadd
fisubl
in
fcmove
inc
jle
mov
cmpsl
popf
insb
or
adc
jle
fs
andb
inc
pop
pop
mov
pop
mov
inc
mov
and
adc
aaa
aas
es
dec
daa
stos
mov
fistps
xor
vandnps
mov
mov
or
mov
inc
aam
hlt
mov
js
inc
lds
cmpsb
jns
xor
rcll
testl
jne
pop
std
les
sbbl
rcll
into
cld
pop
mov
mov
cmp
sbb
cltd
cmp
js
mov
aad
lock
loopne
repnz
and
mov
inc
sub
std
insl
xor
fsubs
push
or
lret
insb
jnp
imul
mov
cli
xrelease
push
daa
dec
ja
inc
sbb
push
push
mov
dec
push
jns
enter
and
mov
push
aas
sbb
test
pop
dec
or
push
xchg
popa
lret
or
mov
xlat
stc
xchg
cmp
cmp
adc
iret
lret
add
mov
adc
aaa
mov
lods
out
jmp
xor
enter
cmc
push
xor
xchg
and
in
stos
and
pusha
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
jmp
mov
sbb
adc
lods
jle
pop
aad
adc
adc
adc
testl
loopne
adc
mov
cmp
out
push
mov
sbb
ljmp
and
push
test
test
aaa
pushf
pop
fcompl
sub
mov
xor
addr16
jle
ja
push
inc
pop
repnz
lods
xor
xchg
pusha
jbe
push
mov
add
scas
ja
test
ss
add
jb
push
arpl
mov
testb
xor
outsl
add
loope
pop
xchg
cmp
out
push
xlat
pop
pop
xchg
es
push
mov
sub
lret
jmp
rorl
ffreep
mov
data16
aad
inc
js
and
ljmp
pop
in
repz
pop
lret
mov
jmp
or
push
sub
cwtl
pop
outsl
jnp
outsb
mov
and
aad
cli
je
dec
push
mov
push
mov
fistpll
push
outsl
push
lods
lahf
mov
das
fsin
leave
lahf
jns
fisubrs
imul
cs
sbb
insb
mov
jno
and
inc
jle
sbb
fsubrl
jle
dec
xor
xchg
mov
inc
cmp
adc
fdivs
cld
push
stc
repz
aad
shlb
mov
std
mov
xchg
pop
das
fcoms
mov
fsub
enter
rclb
push
add
scas
sub
outsl
and
jge
adc
mov
jo
arpl
popa
test
mov
arpl
into
cwtl
popf
push
sahf
leave
lods
mov
xchg
mov
sub
add
sbb
xchg
pop
jle
jmp
push
ror
jb
scas
jp
add
fwait
push
cmpsb
xor
push
dec
cmpsb
int
aas
pop
outsl
xchg
and
enter
inc
dec
mov
shlb
repz
out
loopne
sarb
xchg
adc
repz
xchg
gs
xlat
push
adc
in
cmp
mov
push
sbb
test
sbb
sbb
add
mov
pushf
inc
pop
adc
sub
scas
lcall
pop
pop
push
inc
sbb
add
sub
inc
or
clc
aaa
xor
nop
mov
cmp
sub
and
cmpsb
or
popa
in
pop
arpl
repz
jp
jl
int
add
aas
lret
cmp
lds
aaa
lods
decl
daa
arpl
dec
and
xchg
pop
mov
addb
je
imul
xchg
jge
aad
or
push
inc
pop
inc
cmp
xor
aad
jg
ret
stos
xor
shl
push
mov
jae
and
mov
ldmxcsr
cmp
inc
adc
inc
inc
dec
inc
mov
sbb
out
lret
sub
adc
mov
sbb
xlat
mov
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
push
adc
push
push
push
call
jmp
xchg
and
sbb
outsb
dec
adc
xchg
adc
cmpsb
loop
jae
jle
shrb
andb
data16
mov
mov
dec
outsl
sarl
sub
sbb
dec
lea
int3
repz
fmuls
pop
cltd
mov
mov
arpl
mov
scas
lret
cmp
test
popa
daa
lock
or
mov
in
xor
sti
jecxz
in
lock
mov
stc
lret
movsb
lret
or
mov
subb
lret
dec
es
pusha
imul
mov
test
ret
mov
pop
imul
dec
sub
ja
jle
out
xlat
jmp
or
pop
dec
jl
clc
sahf
sub
push
rcr
das
push
outsl
stos
call
push
xchg
and
mov
movsl
aas
pop
les
sub
push
jb
fwait
adc
iret
leave
jmp
shrl
lock
js
sbbb
push
jnp
fbld
and
push
and
in
lret
xor
xchg
push
mov
or
xchg
jmp
into
dec
jecxz
das
dec
popf
and
xlat
and
das
or
daa
push
test
xchg
mov
xchg
cld
les
fidivrs
loope
imul
xlat
js
shr
sahf
xchg
adc
jae
cltd
sub
mov
je
mov
sbb
popa
popa
add
mov
jns
mov
dec
inc
xchg
outsl
pushf
dec
dec
lahf
mov
ds
fwait
in
mov
cmc
outsb
xchg
pop
mov
sbb
popa
in
xor
cmp
rcl
xor
or
add
inc
and
movsl
pop
out
xor
bound
dec
add
jmp
mov
xchg
inc
arpl
xchg
jmp
mov
add
pop
xor
nop
icebp
lods
add
adc
mov
hlt
push
mov
pop
cwtl
lods
pop
inc
add
sub
mov
mov
xchg
out
rcll
xchg
mov
jno
add
xchg
clc
xor
cltd
ret
sub
jo
sbb
push
xor
sub
and
loopne
jge
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
jmp
ds
fistl
out
stos
test
adc
xchg
movlps
orb
aad
lss
mov
es
mov
int
pop
js
movsb
out
in
ss
mov
loop
sub
dec
cltd
bound
jge
cmc
rorb
mov
ja
cmp
or
in
mov
adc
dec
negl
sarl
fwait
adc
mov
mov
test
icebp
inc
sub
int
and
sbb
inc
mov
popa
xchg
jecxz
or
ss
xchg
push
jb
fiaddl
mov
outsb
ja
sahf
cmpsb
add
in
aad
adcb
insb
adc
or
mov
out
lds
cli
rcll
xchg
mov
or
sbb
cmp
ljmp
xor
sbb
mov
add
adc
dec
movsl
subl
sti
popf
jns
sbb
clc
out
arpl
sub
pop
mov
jmp
dec
fxch
inc
push
pop
imul
repz
pop
fistpl
or
cmp
push
adc
xchg
test
jp
scas
out
lahf
mov
cmp
js
jge
jmp
xlat
mov
push
cwtl
aad
dec
pop
mov
insb
adc
dec
insl
push
enter
jns
and
movsb
scas
sub
adc
push
fmul
jb
pop
adc
pop
pusha
pop
enter
call
in
outsb
in
mov
loopne
lret
insl
stos
vcvttsd2si
pop
out
int
inc
cmp
nop
xchg
dec
insl
loope
mov
in
fistpl
cmp
sbb
subb
xor
out
sarl
lcall
xor
mov
pop
outsl
into
cmp
ret
fimull
imul
js
aaa
push
adc
sar
and
dec
loopne
movsl
mov
subb
sub
scas
xchg
pop
out
daa
sti
das
imulb
push
add
test
bound
mov
sub
xlat
sti
inc
push
pop
lock
sbb
sbb
icebp
sub
mov
mov
sbb
jmp
sbbl
cmp
aam
pop
lods
rcll
std
jle
lds
adc
cmp
dec
lds
pop
mov
add
mov
scas
stos
mov
mov
dec
fsubr
pop
xor
sub
test
sarb
cli
push
ss
test
incb
pop
mov
sub
jle
movl
lods
sbb
mov
ss
lret
std
push
daa
cmp
or
mov
pop
in
mov
test
cs
lea
mov
repnz
lcall
adc
fistl
repz
lahf
push
dec
push
out
mov
xor
mov
sub
bound
mov
popa
mov
lret
test
mov
call
out
sahf
outsb
or
aad
sub
xchg
fistpll
das
scas
loopne
jne
mov
push
gs
fildll
std
insb
adc
add
mov
inc
insb
repz
aaa
test
xchg
pop
sub
jnp
arpl
xchg
xor
push
cmp
sbb
or
cwtl
loopne
xorl
push
js
pop
push
pop
nop
fldt
inc
imul
enter
orl
sbb
idivb
iret
testl
pusha
cltd
subl
fisubrs
mov
inc
nop
xor
lret
test
push
outsl
xchg
xchg
dec
add
and
adc
out
adc
xor
push
les
in
loope
test
and
jbe
pop
lcall
push
inc
jecxz
push
imul
mov
fdivrs
stc
cmp
adc
and
aas
mov
in
mov
je
int3
dec
mov
sahf
faddl
add
cwtl
mov
aas
test
sub
imul
and
out
daa
adc
imul
sbb
jle
hlt
sbb
in
out
push
cmp
imul
mov
test
cmp
mov
push
test
cmp
shr
stos
inc
popa
jne
mov
adc
out
push
mov
sbb
hlt
fsubl
sub
ss
outsl
sbb
push
xor
jp
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
jmp
rclb
mov
insb
cwtl
inc
fidivrs
xchg
movlps
dec
cwtl
adc
jmp
sbb
cltd
xor
inc
pusha
in
adc
negb
inc
push
sub
or
aad
inc
jae
pop
data16
push
and
mov
mov
scas
mov
icebp
mov
sti
mov
fisubl
adc
xlat
push
mov
int3
je
xchg
push
jne
pop
mov
testb
dec
dec
mov
xor
clc
mov
mov
nop
or
ja
dec
in
aas
cmp
mov
mov
dec
in
lahf
decb
mov
in
icebp
cs
jae
dec
xor
push
inc
mov
lret
test
jmp
fdivs
or
dec
pop
popa
outsb
cmpsb
imul
sbb
mov
xchg
je
movsl
lods
sub
push
sub
in
pushf
push
mov
jmp
mov
mov
out
and
aad
mov
pop
sub
push
xchg
xchg
in
jne
xchg
adc
pop
fldcw
repz
mov
push
cltd
mov
push
xchg
out
fxtract
notl
insl
jg
fnstsw
xchg
mov
fs
mov
inc
mov
xor
daa
call
test
jmp
or
jecxz
add
sbb
aas
push
out
push
loope
and
pop
test
pause
mov
xor
andb
int3
xor
sbb
std
fdivl
cwtl
aas
aaa
xchg
pop
movsb
pop
mov
cmove
jns
and
hlt
mov
hlt
dec
dec
out
js
xchg
dec
test
imul
call
into
cld
lret
sete
fs
jl
xor
jg
push
bound
rorl
push
or
jnp
add
test
cmp
mov
add
pop
pop
scas
out
inc
lds
push
cwtl
or
loope
fists
mov
or
aam
clc
cltd
sbb
insb
movsb
insb
ja
clc
sbb
jno
aad
mov
sub
data16
fmuls
mov
add
xor
jmp
fnsave
cmp
add
add
adc
jb
shr
jmp
xor
out
push
jne
mov
sub
push
movsl
mov
xchg
stc
mov
add
sbb
jns
mov
and
out
inc
hlt
pop
inc
movsb
jle
push
ljmp
sub
lret
mov
jbe
shrl
jl
dec
jo
cmp
jge
mov
loopne
lret
and
mov
adc
inc
rcrl
sbb
cmpsb
js
dec
jns
icebp
imul
repnz
cmc
push
cmpsl
gs
nop
sub
shrl
cmpsl
inc
mov
jo
filds
mov
cmpsl
loop
pop
lock
add
push
in
outsl
sub
xchg
add
pop
dec
or
push
lahf
fstpl
cmp
and
and
lds
out
and
sti
out
xor
adc
or
jmp
add
cmpsl
repz
lock
jecxz
pop
daa
inc
shl
push
xor
test
call
sahf
mov
pop
bound
pop
cmp
imul
int3
add
dec
aaa
mov
lcall
les
mov
mov
and
fwait
sbb
not
xchg
inc
out
fwait
std
pusha
je
adc
scas
mov
xchg
xchg
sub
lock
repz
or
icebp
lcall
xor
push
sbb
jno
repz
pop
or
filds
clc
push
jnp
loopne
pop
cld
fwait
xchg
push
scas
pop
sahf
push
mov
pop
push
pop
mull
xor
in
cwtl
mov
jp
aaa
inc
dec
cmp
negl
add
imul
xchg
xor
pop
adc
les
inc
and
aam
cmp
into
and
adc
pusha
ss
xor
mov
adc
icebp
std
fwait
inc
testl
insl
repz
cmp
and
xor
pop
fidivl
cmp
clc
rclb
test
mov
or
lock
jecxz
sub
inc
cmp
jl
repz
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
jmp
inc
lds
gs
inc
and
imul
xor
test
adc
sbb
arpl
fwait
sbb
int3
mov
xchg
mov
add
push
jno
aaa
xchg
out
in
repnz
ja
mov
jae
sbb
test
std
movnti
leave
or
hlt
inc
dec
lret
test
jne
cwtl
jno
pop
aam
lea
jbe
stc
jg
in
sbb
sub
outsl
push
xchg
sbb
out
int
inc
inc
or
mov
sub
push
pop
clc
fnstcw
loopne
cwtl
lea
dec
or
repnz
mov
jge
sub
ret
mov
fcomps
pop
cltd
mov
loop
cltd
outsb
push
fwait
adc
and
inc
leave
test
add
mov
mov
dec
xor
lcall
outsl
inc
mov
arpl
sbb
push
outsb
rclb
and
fiaddl
sahf
or
fidivl
aaa
add
push
push
sahf
decb
sub
xchg
xchg
mov
lock
adc
mov
pop
shlb
aaa
pop
push
push
add
out
adc
ja
rcr
outsl
fs
into
loop
leave
xor
mov
icebp
cmp
or
outsl
div
jge
loopne
test
into
imul
in
xchg
dec
sub
ret
cmp
inc
in
cwtl
mov
repnz
int3
js
fcom
mov
jnp
aas
add
into
sub
mov
imul
adc
stos
xor
mov
mov
dec
int3
fwait
xor
pusha
rclb
jp
rorl
inc
jae
inc
ret
imul
fwait
mov
jnp
fs
sub
testl
dec
add
cmp
enter
test
sbb
add
rolb
push
sti
xchg
fistps
jecxz
scas
sbb
cmp
sti
leave
fwait
mov
push
jp
in
iret
notb
xor
xchg
stc
cltd
xor
fadds
sub
outsl
cld
push
xchg
lahf
push
pusha
rolb
adcl
loop
and
push
rorl
gs
dec
cs
test
sbb
pop
sbb
std
sbb
mov
jae
or
ds
dec
inc
or
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
jmp
hlt
aaa
add
pop
dec
pop
sbb
std
jle
scas
adc
add
adc
lcall
push
lret
test
sbb
ds
and
lock
jp
xor
lods
loopne
dec
sub
repnz
ss
mov
jl
push
add
das
jle
pop
mov
scas
addl
rclb
jns
jecxz
cmp
add
inc
xlat
ljmp
bound
inc
ja
into
pop
arpl
fistpll
mov
ja
inc
push
fcoml
scas
sub
lret
mov
sti
test
or
xlat
mov
add
out
or
mov
xchg
jle
lahf
dec
mov
dec
das
stos
gs
sub
stos
setbe
cmp
cmc
loope
repnz
scas
stc
adc
pop
daa
pop
std
fstpt
cmpsl
mov
lahf
push
xchg
aaa
jb
jne
clc
mov
daa
mov
add
je
jmp
roll
mov
sub
out
adc
xor
inc
dec
jl
rcl
add
fldt
insb
xor
movsl
inc
ja
ret
aam
into
fbld
jg
sbb
cltd
imul
imul
sarb
sbb
cmp
and
aam
incl
and
stos
mov
mov
es
cli
push
fwait
aas
idiv
fabs
pop
inc
push
jnp
inc
sbb
inc
mov
xlat
hlt
pop
xchg
cmp
test
ret
ficoml
dec
jb
fs
inc
sub
idivl
int3
aaa
mov
xor
dec
movsb
jbe
jmp
jp
pusha
or
out
cmp
inc
push
pop
les
sub
sbb
test
js
mov
pop
or
je
jl
bound
fldt
loopne
pop
cmp
dec
push
aam
xchg
in
jno
or
fisttpll
stos
push
lcall
insb
nop
push
xchg
jo
mov
cs
adc
orb
cmc
mov
divl
or
dec
xor
jno
mov
sbb
or
shll
inc
pushl
xchg
mov
mov
test
adc
jge
inc
or
push
push
push
int3
inc
inc
popf
adc
aam
push
inc
icebp
call
cld
out
call
mov
sbb
js
pop
push
scas
mov
fildll
imul
movsl
pop
cmp
stc
pusha
add
dec
outsl
xchg
es
ret
push
pop
movsl
lods
xchg
xorb
or
mov
mov
push
fcompl
lret
decb
aas
jge
dec
xor
mov
adcb
stc
lahf
xor
cs
mov
dec
fdivrs
imul
xor
pop
call
rclb
imul
sub
cld
jg
or
in
test
xchg
addb
pop
mov
or
ficompl
inc
idiv
cli
pop
cmc
aam
dec
mov
aad
sahf
mov
dec
adc
pop
in
pop
test
and
std
push
pop
cmp
in
je
ss
push
sbb
mov
mov
gs
test
cmp
mov
pop
inc
addr16
push
xor
loop
and
in
adc
popa
mov
push
xchg
mov
sbb
and
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
jmp
xor
cmpsb
pop
cmpsb
pop
sub
jg
push
push
ds
mov
add
adc
inc
rclb
jne
add
aas
mov
sub
xchg
mov
xchg
test
aaa
inc
loope
mov
lret
push
movsb
aas
aam
frstor
pusha
test
add
mov
lea
inc
xchg
jl
xor
adcl
add
pushf
add
sahf
loope
dec
add
out
sub
lods
subl
iret
push
jb
mov
cmp
push
adc
dec
pushf
imul
sbb
test
jmp
push
out
ficoms
hlt
cmp
mov
push
mov
fmuls
cs
jl
dec
gs
aad
rorb
cli
push
push
in
pusha
dec
ss
loopne
sub
jne
das
ja
popa
jecxz
jnp
cmpsb
mov
xor
sub
and
sbb
dec
ss
sbb
nop
divl
loope
mov
cmp
pop
adc
sbb
lcall
insl
dec
aad
iret
jmp
addr16
pop
fdivp
les
jle
daa
inc
filds
jne
in
push
jle
stos
inc
out
insl
jnp
xchg
add
enter
divps
pop
pop
pop
sbb
xchg
jge
pusha
adc
ret
in
into
in
mov
mov
fisubl
test
xchg
xor
inc
cmp
adc
hlt
scas
xchg
ss
pop
xchg
push
int
push
loop
xchg
fdivrs
das
dec
push
xchg
fisttpl
lock
dec
jne
lock
vcvtdq2pd
mov
dec
and
scas
push
hlt
pop
js
out
cmp
jno
test
mov
add
push
mov
inc
jp
add
nop
cld
or
mov
adc
mov
xabort
daa
mov
push
call
push
xchg
shlb
lods
add
push
popf
aam
loop
imul
scas
push
push
jbe
cmp
and
jne
ljmp
scas
and
inc
sti
push
sti
fimuls
and
filds
sub
xor
add
adc
or
fnsetpm(287
mov
pop
je
shll
cmc
pop
and
repnz
cli
jmp
orb
test
and
movb
fnstsw
sub
gs
jp
sub
decb
push
mov
arpl
push
pop
aaa
inc
jns
pslld
jns
sahf
ror
ds
gs
dec
insl
or
ss
les
xor
inc
fistpll
inc
jle
mov
sahf
pop
mov
pop
xlat
fnsave
arpl
mov
lahf
xchg
enter
jb
xlat
scas
jnp
subb
pop
jae
je
cmp
outsb
xchg
jecxz
or
xor
pop
push
inc
xor
enter
cmpsl
sarl
cs
sub
icebp
xchg
and
push
rol
sub
les
movsl
insl
add
push
mov
imul
sub
xchg
mov
insb
dec
jo
xor
or
and
and
push
fistpl
in
popa
pop
xchg
jmp
es
xchg
out
cmp
in
mov
and
adc
movsb
and
adc
inc
addl
arpl
jl
push
mov
jl
sub
ljmp
pop
loopne
in
leave
gs
mov
test
add
add
out
decl
push
clc
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
jmp
loop
repnz
es
or
push
movsl
adc
add
adc
mov
jecxz
hlt
inc
add
lahf
push
nop
fistpl
mov
adc
loope
or
loopne
jecxz
out
sbbb
je
push
repz
inc
dec
rcr
mov
daa
xlat
xchg
jno,pt
pushf
add
in
inc
sbb
xchg
decl
cmp
loope
fcmovnb
test
xchg
sub
inc
ret
pop
out
fimuls
shr
xor
push
filds
in
mov
xorl
imul
sub
les
rol
jp
dec
inc
dec
inc
xchg
mov
add
xlat
mov
rcrb
jno
sub
sbb
add
daa
cmpb
pop
adc
rcrl
adcb
sub
repz
lahf
pop
jp
lret
mov
dec
push
fcmovbe
arpl
cmp
repnz
in
sub
xor
mov
xchg
pop
cwtl
jl
andnps
xchg
sahf
sbb
jne
lods
sbb
xlat
insl
xchg
leave
cli
cmp
das
inc
mov
mov
ljmp
cmp
push
insb
cli
jne
scas
addr16
mov
pop
icebp
hlt
dec
mov
cs
fnsetpm(287
mov
std
mov
pop
int3
mov
ds
or
or
setb
jp
xchg
cwtl
jns
inc
ret
into
mov
out
loop
xchg
mov
jg
push
pop
dec
cmp
mov
jmp
stos
adc
cltd
pmaxub
std
adc
std
imul
or
xchg
xor
inc
lcall
jp
adc
or
fimull
fwait
push
cmp
pop
fwait
sub
test
push
out
lds
jb
mov
and
insb
data16
dec
pop
dec
cmp
hlt
push
pop
lret
inc
loop
push
mov
enter
cs
dec
mov
or
cmpsb
and
sub
nop
xchg
lahf
mov
jno
cli
xor
test
xor
in
fmul
stos
jns
and
jb
imul
dec
std
scas
gs
or
in
pop
xchg
mov
sub
lahf
lahf
mov
inc
out
call
fildl
addr16
out
xchg
sbb
jnp
sbb
dec
inc
dec
rcll
dec
inc
stos
fmull
xchg
repnz
lea
pop
cmp
aad
cltd
aas
fstps
or
test
mov
xchg
mov
loop
adc
mov
lock
shll
push
idiv
cmc
push
out
lea
std
pusha
adc
push
jb
inc
cmp
add
movsb
adc
sbb
adc
xchg
cwtl
shll
sar
add
aad
add
divb
inc
inc
xchg
mov
std
push
popa
inc
mov
mov
test
xchg
int3
lcall
out
sbb
insl
iret
popa
push
add
jl
bound
inc
and
cmp
pop
icebp
jno
stos
lods
lods
adc
and
dec
filds
dec
push
repnz
adc
pop
mov
movsl
pop
aaa
jp
pop
push
cmp
in
cld
mov
jecxz
aad
xchg
cmpsl
mov
scas
fldcw
std
lods
repnz
pop
nop
rcl
pushf
out
pop
stos
mov
pop
sub
pop
mov
lds
push
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
jmp
popf
jnp
cwtl
sub
loopne
cmp
js
popf
adc
jne
adc
mov
clc
inc
test
inc
jle
add
out
lahf
pop
cmp
ja
mov
and
and
mov
jo
cwtl
aad
mov
insl
add
inc
pop
mov
pop
adc
arpl
popf
idivl
roll
jo
mov
mov
dec
jp
lea
andl
shlb
mov
add
push
fwait
mov
and
lods
push
mov
and
test
jnp
dec
xchg
xchg
jp
sar
jl
dec
ret
rcll
pop
adc
testl
inc
fisubrl
outsb
inc
ja
cmp
mov
das
mov
fstl
mov
andb
movsl
fldt
adc
push
or
sub
xor
inc
ds
lea
xchg
or
jp
scas
dec
lea
sbb
and
mov
sbb
jle
les
push
sbb
dec
mov
sub
mov
push
mov
xchg
movsb
jo
cmp
xor
fisubrl
out
sti
jecxz
push
xchg
cltd
fnstcw
andl
pusha
jnp
fisttpll
xor
loopne
xchg
inc
les
jmp
dec
jae
inc
cltd
sbb
jnp
inc
mov
or
adc
dec
fsubrs
mov
loopne
mov
mov
or
xchg
push
mov
jge
sbb
into
mov
push
xchg
stos
lods
cmp
adc
psrld
dec
inc
test
sbb
and
or
xor
xchg
ds
movsl
cmp
sbbl
mov
repz
jns
cwtl
in
aam
cmpsb
mov
sbb
adc
stos
pop
pop
scas
mov
xlat
add
pop
jge
les
out
inc
lret
fcoms
aad
sub
inc
daa
jbe
out
inc
sarb
and
fisttpll
and
push
call
or
and
xchg
cmpsl
push
mov
lret
inc
out
mov
loop
fstpl
repz
sbb
test
inc
cwtl
sbb
imul
enter
xor
sbb
pop
inc
imul
int3
mov
mov
arpl
mov
bound
imul
ret
jmp
das
rol
push
inc
loop
dec
or
or
cld
lcall
add
xor
repnz
or
jmp
nop
fnstcw
aaa
pop
mov
lret
or
xchg
ror
outsl
ret
out
sbb
mov
add
lods
jae
and
xchg
push
int3
xor
and
gs
daa
daa
iret
mov
jmp
and
cmp
insl
ficoml
or
sub
adc
fimuls
outsl
data16
mov
push
xor
sbb
repz
out
cwtl
data16
hlt
pop
add
mov
andb
pop
bound
cltd
loope
pop
sbb
ret
jecxz,pn
sub
faddl
pop
xor
cs
sub
rcrl
les
out
add
push
mov
mov
in
and
inc
clc
cld
dec
sbb
int3
mov
test
cs
mov
mov
mov
pop
jl
mov
mov
fsubrs
pop
xlat
xchg
push
xchg
mov
adc
jle
dec
or
push
jle
pushf
push
adc
or
xchg
fcomip
xor
sbb
icebp
icebp
push
loopne
and
lea
movsb
ljmp
jmp
and
loop
xchg
std
test
jbe
iret
cmp
cmc
mov
push
sbb
dec
in
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
jmp
dec
mov
loope
and
les
cwtl
lods
cmp
insb
sub
adc
mov
cmpsb
nop
adc
mov
lret
loope
rcl
movsl
mulb
dec
sub
mov
mov
andl
jg
jmp
stos
cltd
aaa
xchg
jne
dec
aad
inc
fisttps
push
mov
cmp
out
mov
sub
mov
push
or
addb
gs
mov
sbb
das
pop
pop
add
fisttpll
xor
push
lret
lock
sbb
clc
bt
in
sub
mov
or
or
xchg
mov
and
jbe
or
fs
xchg
cwtl
insb
jp
negl
gs
dec
add
arpl
push
mov
push
inc
jle
in
inc
adcl
jno
in
pushf
cmp
test
fcmovnb
insb
pop
loope
mov
sbb
js
pop
add
cwtl
cmc
pusha
and
loop
jbe
xchg
inc
cs
mov
imul
or
inc
xchg
mov
je
lret
adc
jecxz
daa
jmp
decl
mov
add
out
int
lds
insl
xor
test
ret
mov
push
sub
mov
sarb
clc
clc
fisttps
inc
cmp
rolb
inc
in
je
je
push
jae
aas
leave
mov
addr16
jmp
sbb
push
out
hlt
mov
in
mov
mov
push
pop
nop
pop
or
add
push
mov
stos
movsl
fs
pop
lret
imul
das
in
rcl
aas
xchg
jbe
and
cmp
xchg
add
xchg
sub
pop
lods
mov
mov
lret
jo
cld
push
jb
cmp
and
mov
fidivrl
cmp
clc
popa
cld
mov
imul
xor
test
leave
jo
xlat
testb
jo
mov
mov
jne
dec
push
mov
arpl
pop
pushf
lds
mov
pop
add
xchg
pop
test
jmp
repnz
ret
lret
bound
bnd
ss
sar
in
cmp
outsb
icebp
inc
daa
scas
dec
push
ss
sub
outsb
sub
jo
pop
mov
sbb
pop
clc
lods
in
xor
nop
mov
push
popa
push
jne
or
cmp
call
arpl
rclb
div
lret
das
sub
xchg
add
push
imul
and
lahf
lahf
andb
stos
stos
cmpsb
mov
sub
mov
fwait
shll
xor
adc
mov
out
test
sub
adc
pop
ds
aas
inc
sti
cmc
sub
mov
dec
push
push
adc
pop
mov
in
bnd
push
sub
cwtl
popf
fstl
jl
lds
mov
xor
push
adc
outsb
pop
jle
roll
inc
popf
repz
pop
add
mov
out
mov
add
aas
lret
inc
jmp
lahf
fsubl
cltd
outsb
add
fs
pusha
les
call
lods
aas
int
ficoml
mov
loopne
mov
into
inc
test
insb
bound
jl
mov
mov
mov
or
rorb
flds
mov
sub
and
xlat
ljmp
add
call
push
xchg
fistpll
dec
mov
lret
cld
outsb
or
fs
nop
mov
iret
loopne
hlt
mov
adc
int
out
jmp
pop
mov
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
popf
mov
and
sbb
js
arpl
mov
fimull
adc
sbb
shlb
jge
daa
je
xlat
sub
scas
mov
push
xchg
fcoml
jno
repz
repnz
xor
xor
xlat
pushf
imul
sub
mov
add
jns
jne
sub
int3
je
scas
mov
xchg
fs
addb
jmp
mov
enter
insb
ljmp
sbb
lock
xchg
fbstp
mov
fidivrl
push
jl
std
and
mov
push
loope,pn
fimull
push
mov
mov
mov
in
xorb
dec
pushf
cld
sbb
dec
cmp
sub
push
and
push
add
sbb
adc
ja
adc
scas
rcrb
test
jb
jle
shr
cltd
push
push
mov
js
loopne
fs
out
cmpsl
inc
repz
pop
push
xchg
js
subl
stos
test
mov
sub
add
sub
xchg
inc
add
shlb
dec
push
insl
xchg
cmp
and
sahf
es
xchg
stc
testl
ret
sub
leave
aam
push
mov
or
add
sub
pop
mov
mov
lods
imulb
mov
sbb
out
pop
outsl
arpl
mov
divb
jmp
mov
enter
mov
pop
mov
pop
and
or
fsub
lods
lret
sbb
adc
and
adc
push
and
stc
aas
scas
inc
mov
mov
inc
pusha
inc
pushf
stos
mov
scas
outsl
or
in
pop
pop
jno
mov
jmp
pushf
stos
out
cmpsb
xor
pop
pop
xchg
or
xor
lods
sub
xchg
bswap
loop
ds
addr16
iret
push
sub
xchg
rorb
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
add
push
cmpl
notl
movl
movl
mov
jmp
movl
movl
jle
pushl
push
push
call
xor
or
sbb
add
cmpl
movl
mov
jmp
mov
je
push
pushl
pushl
call
or
sbbl
sub
xor
or
mov
sub
xor
xor
add
and
push
notl
push
mov
mov
shrd
cmpl
movl
movzbl
mov
jmp
mov
jbe
pushl
pushl
push
call
add
dec
xorl
add
sbb
and
shr
cmpl
mov
movl
movl
jmp
mov
ja
push
call
mov
xor
sub
add
xor
sub
xor
add
adc
mov
cmpl
mov
mov
mov
jmp
notl
jbe
push
push
push
call
add
xor
addl
add
mov
mov
add
sbb
mov
cmpl
movl
mov
movl
jmp
movzwl
jb
pushl
call
adc
mov
xor
add
sub
or
mov
mov
or
and
adc
movl
xor
adc
mov
xor
cmpl
movl
mov
movl
jmp
movl
movl
jae
push
pushl
push
call
xor
xor
or
mov
sub
movl
movzwl
sub
mov
or
adc
not
mov
add
xor
or
mov
mov
cmpl
movl
mov
movl
movzwl
jmp
mov
jle
pushl
push
push
push
push
push
call
mov
add
add
inc
add
mov
and
mov
or
and
sbb
shl
mov
shrd
xor
sbb
shr
cmpl
movl
mov
mov
movzwl
jmp
movl
movl
ja
push
push
pushl
push
pushl
call
or
xor
or
adc
adc
movzwl
xor
sub
adcl
and
mov
mov
cmpl
movl
mov
movl
movl
jmp
mov
movl
ja
push
pushl
push
pushl
push
call
xor
add
adc
subl
movzwl
sbb
mov
xor
andl
movzbl
adc
xor
sbb
or
orl
mov
neg
mov
negl
mov
cmpl
movl
mov
mov
jmp
movl
not
jge
pushl
pushl
pushl
call
sbb
sub
notl
sub
sbb
add
mov
adc
mov
mov
cmpl
mov
movl
movl
jmp
mov
mov
jle
push
call
sbbl
xor
or
or
mov
movzbl
sbb
mov
cmpl
mov
not
jmp
mov
jne
push
pushl
push
pushl
pushl
pushl
push
call
andl
and
or
movzwl
add
or
mov
adc
mov
orl
shl
xor
movzwl
add
xor
sub
mov
cmpl
not
mov
mov
movzwl
jmp
mov
mov
ja
push
push
pushl
pushl
push
call
xor
xorl
sub
or
mov
and
mov
xor
shld
shl
mov
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
adc
mov
movzbl
adc
mov
sbb
xor
xor
xor
mov
mov
andl
shld
shl
jmp
ffree
addl
cmp
push
adc
dec
xchg
adc
movlps
cltd
repnz
aaa
dec
mov
aad
ret
out
or
sub
pop
add
jge
aam
push
mov
xor
scas
or
push
jno
jle
dec
sub
lock
push
mov
push
aad
jp
inc
mov
jp
adc
gs
and
pop
inc
test
mov
imul
adc
jl
movsl
ss
jb
xchg
xchg
cmpsb
mov
pop
imul
jb
imul
sub
push
das
push
and
or
mov
or
addb
add
lret
mov
and
xchg
jl
push
jg
mov
push
inc
test
lds
andb
xor
cmp
mov
sbb
sti
inc
jecxz
fidivrs
pop
test
xor
adc
jge
pop
les
imul
out
les
dec
leave
jo
jb
xor
pop
and
push
negl
pop
test
orl
in
cltd
adc
jno
mov
push
sub
mov
rcrb
ds
fdivr
pop
dec
mov
cmpsl
popf
push
push
and
mov
movsl
sub
push
sub
adc
mov
test
addps
sbbl
arpl
mov
jle
xchg
js
movsb
jnp
cmp
and
mov
das
push
mov
push
adc
xor
lret
push
imul
jmp
jns
adc
or
loopne
sar
cmp
xor
xor
pop
clc
mov
cmp
ljmp
icebp
jne
mov
xchg
adc
mov
pop
pop
mov
cmc
repnz
xor
pop
push
mov
stos
xor
imul
pop
jmp
inc
in
leave
imul
jle
outsl
clc
gs
clc
movsl
mov
arpl
mov
mov
das
sbb
js
fmulp
int
test
popf
pushf
fisttpll
cwtl
fs
sub
je
mov
dec
add
jmp
and
mov
inc
sti
outsl
rorl
push
mov
cmpl
ljmp
pop
push
sub
xor
mov
repnz
iret
dec
lret
dec
aad
out
pusha
movsl
pop
xchg
xor
into
xchg
cmp
fisttpl
pop
push
inc
add
test
add
add
cli
je
mov
mov
push
pop
xor
shl
mov
xor
shr
or
mov
mov
mov
mov
mov
mov
push
pop
sub
mov
add
mov
lea
mov
mov
mov
xor
jmp
gs
test
dec
jmp
push
push
js
sub
adc
decb
adc
push
fistpll
sub
and
and
loopne
lcall
or
add
filds
fimuls
hlt
jns
jmp
mov
addr16
or
stos
and
enter
mov
and
xor
push
es
movsb
jecxz
push
adc
lds
testl
or
push
mov
jns
xchg
inc
and
std
int
xchg
popfw
inc
xchg
cmp
dec
mov
in
xchg
pop
mov
orb
mov
add
int
sub
push
pop
fiadds
push
xchg
jge
pop
and
xor
fbld
push
mov
nop
xchg
arpl
pop
movsl
mov
mov
inc
stos
mov
out
fcomi
lret
test
add
repz
sub
pop
jne
sbb
adc
imul
call
hlt
test
mov
mov
add
data16
arpl
ss
test
adc
iret
pushf
int
xor
xchg
push
bound
mov
rorl
repnz
dec
jge
aaa
std
add
push
gs
add
lret
xor
out
adc
leave
mov
movsb
mov
aad
lahf
mov
in
lods
mov
dec
aad
and
out
cmp
adcl
iret
jmp
mov
add
dec
push
pop
sub
sbb
loope
xchg
in
daa
in
inc
xor
xor
mov
arpl
and
lret
jl
inc
incb
out
adc
xor
repnz
jle
gs
push
or
dec
idivl
fisttpl
or
sub
out
cmp
cmp
mov
adc
add
push
lods
mov
xor
jmp
jge
mov
jne
adc
roll
add
push
adc
in
imul
mov
aas
mov
fs
mov
cmc
adc
xor
ljmp
fsts
or
cmp
fmul
std
push
mov
in
xchg
adc
mov
test
sbb
std
sub
sbb
mov
imul
cs
pusha
inc
xor
popa
inc
inc
imul
mov
fidivs
shrb
adc
ds
mov
insb
xchg
xor
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
jmp
xchg
enter
pop
cs
ret
jnp
adc
movlps
addr16
mov
or
jecxz
popf
mov
es
xchg
jbe
frstor
in
repnz
das
and
xlat
adc
xor
xor
adc
in
mov
add
sbb
xor
popf
cwtl
arpl
fdivrp
shl
rcll
popa
test
jno
rcll
bound
loopne
xchg
mov
adc
jg
cld
sarb
sti
jno
cltd
mov
push
test
inc
nop
sbb
cmpsb
int
out
jns
fistps
adc
aas
xchg
inc
and
xor
test
lret
je
in
rcrl
mov
xchg
movsb
add
cs
icebp
jno
add
push
pop
add
xor
stos
cld
inc
xorb
iret
and
mov
lods
mov
movsl
pusha
inc
sub
xchg
jno
popf
cwtl
dec
cmpsb
iret
decb
inc
rcl
sti
call
ret
mov
add
aad
jae
call
adc
jno
dec
xchg
rcr
add
add
fistpll
or
mov
out
pusha
pop
insl
jl
cmp
ds
mov
xlat
pop
rcr
xor
aad
or
xor
daa
sbb
adc
stos
add
mov
pop
xchg
aas
push
mov
repz
push
aad
jecxz
into
sahf
test
jo
pushf
push
pop
mov
ds
aas
inc
leave
mov
or
test
mov
inc
fdiv
push
mov
sbb
mov
xchg
in
or
rol
inc
mov
enter
mov
scas
mov
jg
jge
cmc
mov
fimuls
jg
test
test
jp
cld
subl
outsl
loopne
and
jbe
xchg
xor
add
movsb
dec
jno
xchg
dec
icebp
dec
mov
adcb
bound
popf
add
movlps
pop
mov
in
ds
push
stc
imul
cltd
add
mov
jbe
cmp
pop
cmp
xor
mov
lret
pop
inc
mov
fcmovnu
stc
add
mov
xor
loope
sarb
mov
jo
xchg
insl
sub
addr16
outsb
ficoml
mov
jp
mov
fisttpll
dec
sub
cmp
dec
inc
scas
jecxz
pop
xor
mov
inc
mov
adc
decl
clc
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
jmp
adc
sbb
loop
insb
clc
ja
adc
movlps
add
aad
dec
pushf
sub
push
adc
loope
xor
adc
and
dec
adc
jb
xchg
dec
aad
orb
das
ffree
mov
int3
rorl
cmp
shrb
lods
lret
fistpll
mov
jbe
cmpsl
jno
out
fucomp
jns
push
add
xor
das
xor
jp
sbb
jecxz
sbb
mov
xor
add
and
inc
into
and
xor
jle
loopne
and
and
cs
mov
xchg
push
orl
and
in
xchg
mov
inc
xchg
adc
dec
stos
subb
xor
stos
lock
dec
or
cmp
les
or
push
cld
cmpsl
ljmp
inc
es
out
pop
jecxz
jle
lock
pushf
test
add
cmp
ret
imul
stos
cwtl
pop
sub
adc
fdivrp
add
sub
and
xchg
pop
call
and
test
sub
cwtl
lods
sub
bnd
mov
fcmovne
or
mov
push
arpl
icebp
js
cmp
loop
ret
and
rol
xchg
xchg
pop
xor
hlt
mov
rorb
daa
in
out
je,pt
mov
inc
std
add
xchg
xlat
jne
hlt
test
lret
out
imul
add
out
pop
dec
fdivrs
jbe,pt
shlb
dec
cltd
inc
push
ljmp
mov
popf
fimuls
mov
mov
pop
pop
push
push
and
je
insl
lahf
jo
imul
sub
push
in
mov
pop
int3
jge
jnp
loop
mov
rolb
mov
mov
inc
xchg
pop
add
dec
les
fmull
mov
or
pop
and
xchg
xchg
sarb
clc
xchg
push
mov
cmp
mov
cs
cmpsb
ja
cmpsb
fwait
stos
add
xchg
insl
adc
jns
fsubs
push
icebp
dec
loopne
add
mov
les
xchg
pop
js
test
lret
add
ljmp
and
into
mov
iret
loopne
mov
fstpl
inc
sbbb
loopne
mov
imul
loope
call
mov
jmp
js
cmc
repz
sub
mov
jne
adc
movlps
xor
mov
pop
loope
pop
lcall
cmpsl
mov
fcoms
pop
stos
add
mov
jg
xchg
std
mov
fxch
push
nop
dec
mov
insb
adcl
lahf
stos
out
mov
mov
inc
adc
sarl
mov
and
js
or
sub
xor
test
testl
aaa
inc
jmp
pushf
in
mov
add
icebp
lds
in
imul
inc
test
testl
mov
or
popf
out
jbe
mov
test
sub
xor
popf
mov
ret
daa
and
pushf
fsubr
addr16
sbb
mov
leave
push
sub
push
lods
mov
jecxz
jno
loop
idivb
jns
mov
inc
addr16
push
inc
jmp
adc
jae
stc
cmp
divl
aad
lret
inc
outsl
shr
xchg
dec
imul
aas
cmpsl
fwait
lret
ficompl
mov
mov
xor
icebp
aaa
cmpsl
out
mov
lret
leave
enter
test
adc
jle
shll
mov
mov
jbe
jmp
or
pushf
cmpsb
in
push
loopne
inc
fists
xor
fnstsw
iret
mov
cs
push
test
push
add
bswap
mov
pop
jnp
test
pop
loope
push
fldl
stos
jb
jl
and
mov
inc
stc
shll
pusha
and
inc
daa
add
stos
mov
cmovge
inc
stos
movsb
test
pop
ss
jbe
jo
xchg
xor
test
mov
div
sbb
fistpll
das
sbb
das
leave
sahf
loopne
push
mov
push
mov
xchg
int3
fistps
pop
or
dec
sahf
add
mov
popa
push
andb
sbb
sbb
push
mov
out
repnz
lods
movsb
mov
mov
cmc
test
pop
jge
adc
cltd
add
setbe
cmpsb
jecxz
or
pop
mul
repnz
mov
sub
jecxz
in
push
ds
mov
jg
aas
sbb
popf
push
test
mov
xchg
mov
push
daa
inc
mov
push
adc
dec
clc
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
jb
and
sbb
pop
jmp
add
lods
ret
jno
adc
movlps
pop
je
xor
push
and
aam
jp
mov
push
test
mov
stc
lods
sbb
movsl
cmp
mov
cltd
ss
dec
add
sbbl
sub
push
mov
iret
and
fidivrl
gs
aaa
les
jae
sti
into
jo
scas
sahf
xchg
pushf
push
cmpsl
nop
sbb
iret
pop
mov
hlt
stos
rorb
xchg
fnstcw
or
mov
and
xchg
mov
mov
iret
and
or
stos
insb
pop
imul
mov
mov
sbb
xchg
inc
fildl
nop
movb
repnz
stos
loop
xchg
bound
mov
out
jbe
subb
push
mov
in
xchg
out
addr16
imul
lods
cmc
cwtl
add
or
mov
int
mov
insl
jge
cwtl
mov
sub
cld
mov
fisttps
or
push
es
dec
or
enter
sarl
pop
movsl
add
push
movsb
and
and
sahf
scas
xchg
cmpsb
movsb
cmpsb
flds
pop
andl
or
dec
pop
dec
adc
jb
in
rolb
cmp
shll
pop
mov
pop
imul
imul
shll
ljmp
inc
leave
cmp
dec
xchg
inc
test
mov
mov
ja
subl
xchg
cld
shl
push
sub
test
addl
cs
jns
sub
fwait
pop
adc
cmp
fisttpl
sahf
xor
sahf
xorb
hlt
sub
sub
js
fistpll
jns
mov
mov
stc
mov
xchg
rcl
clc
arpl
loop
pop
push
mov
das
lret
or
push
inc
inc
js
or
rolb
mov
sub
dec
or
and
inc
jge
cmpl
neg
rcll
jns
bound
fdivr
loopne
rcr
push
ds
sub
ja
in
lods
jg
test
or
xor
mov
jns
test
dec
ret
sub
outsl
cmpsb
cmp
popa
mov
lcallw
cmp
xor
in
notl
cmp
out
mov
jbe
push
add
and
push
xchg
pop
popf
push
xor
out
clc
sbb
or
lret
add
lea
push
shl
jmp
push
loopne
jo
jno
mov
ret
push
adc
decb
adc
mov
xor
cmp
jg
fxch
xorb
mov
mov
sub
icebp
pop
jbe
mov
cwtl
aam
rcll
fisttpll
out
adc
push
iret
mov
or
sbb
xor
ja
jnp
sub
mov
sub
pop
and
sub
mov
lcall
shll
fstp
ss
push
mov
or
mov
xchg
dec
dec
or
sbb
lods
sti
sbb
inc
out
push
clc
mov
pop
xchg
arpl
cmp
int
xor
pop
lds
mov
xchg
std
fcoms
stos
and
ljmp
mov
push
fdivl
dec
imul
push
push
out
loope
sub
mov
fdivrl
leave
xchg
pop
ja
out
das
aam
jmp
cmp
cmc
adc
sub
cmpsb
dec
in
pop
mov
sub
cmp
or
jle
cmc
xorl
cmp
and
andb
int
cmp
or
xchg
std
dec
inc
or
lcall
lcall
inc
mov
int
test
iret
je
mov
cltd
cld
cmp
in
in
mov
cli
inc
cwtl
inc
mov
xchg
xlat
aas
pop
outsb
xchg
jne
shl
sti
je
fnsave
inc
inc
pusha
xor
gs
pushf
xchg
cmp
gs
outsl
jg
test
xlat
xor
mov
movsb
inc
pop
cmp
insb
cltd
xchg
pusha
or
push
aaa
sahf
mov
mov
sbb
lahf
lcall
ret
or
clc
repz
mov
mov
push
shr
or
clc
insl
jmp
push
scas
xchg
mov
pop
shrb
push
jns
push
insl
or
xchg
dec
fdivrl
addr16
mov
push
movsb
mov
lret
mov
out
adcb
sub
mov
mov
pop
fimull
aaa
outsb
sbb
mov
nop
jnp
xchg
shlb
add
lfs
xchg
xor
daa
jns
lahf
mov
add
movsl
inc
in
pop
mov
mov
stos
sub
fadds
dec
cmp
jae
mov
ficompl
lahf
hlt
in
and
test
inc
xchg
ret
add
or
xor
lods
mov
ja
sub
push
xchg
cmp
and
decl
clc
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
jmp
imul
sbb
cwtl
shlb
arpl
adc
movlps
dec
call
fwait
lods
mov
imul
push
aad
push
inc
pop
or
imul
adc
frstor
mov
mov
add
inc
shll
mov
hlt
xor
stos
mov
mov
fadds
mov
ret
bound
fidivrs
repz
mov
test
outsl
leave
push
jmp
pop
jecxz
fimull
iret
test
sub
dec
and
ljmp
sub
rcll
loop
outsl
fisubrs
mov
sub
cmp
dec
leave
mov
outsl
repnz
xchg
mov
loopne
out
lds
mov
fisubrs
sbb
cmp
divb
adc
adc
jnp
push
cmp
xchg
cld
sbb
fwait
jp
icebp
test
insl
mov
cmp
data16
mov
sub
sbb
mov
mov
in
fildll
xchg
lahf
shll
fistpl
cmp
jbe
mov
paddq
mov
add
rcrl
out
les
push
sbb
sub
outsb
scas
int
and
shrb
insb
sub
ja
sub
mov
sbb
inc
rorl
fs
adc
mov
cli
fwait
sbb
and
jg
add
scas
out
mov
mov
daa
pushf
push
imul
xrelease
sbb
out
push
cmpsl
adc
rolb
aam
fstp
mov
clc
sbb
mov
fwait
adc
out
into
jae
movb
scas
cmp
jg
idivl
mov
aaa
cmp
and
jmp
and
or
rclb
jne
pop
push
cs
addr16
sub
dec
xor
mov
pop
pop
lcall
xchg
mov
nop
xchg
out
ss
sbb
adc
iret
imul
nop
je
mov
insl
sbb
cmpsb
push
aad
cmp
aad
cli
sbb
dec
xchg
lea
xor
push
jge
pop
xorl
stos
insb
mov
and
jno
inc
mov
fprem1
adc
cmpsb
js
fidivs
popa
aas
xchg
cwtl
or
mov
imul
test
pusha
xor
push
ficoml
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
jmp
lods
lods
scas
sbb
xchg
adc
push
sarb
popa
adc
decb
adc
repnz
es
scas
int
cmp
jnp
cltd
iret
ds
xlat
in
adcb
rorb
lcall
pop
mov
mov
sub
in
adc
imul
std
sub
pushfw
enter
push
xor
daa
pop
sbb
push
push
mov
push
dec
addr16
xchg
popa
push
jno
push
jne
cli
dec
or
enter
push
addl
int
std
aaa
add
push
dec
mov
cmpsl
out
or
in
cmp
jbe
int
cmp
mov
or
push
mov
jle
aam
add
shll
fcmovnbe
mov
xchg
aam
dec
adc
fmull
test
insb
and
stos
shlb
lock
sub
mov
mov
ficoml
dec
adc
cmp
inc
jle
sub
pusha
out
adc
into
stos
sub
nop
and
ret
fwait
jmp
aas
jmp
std
mov
leave
push
out
scas
sub
jne
xor
lret
dec
cmp
popa
jo
jb
pop
div
movsl
mov
or
pushf
je
clc
cmpb
dec
out
sub
fs
repz
into
mov
or
xchg
es
in
out
pop
ljmp
push
repz
pop
cmpsb
jp
orb
lds
jge
cmc
or
xchg
in
outsb
pop
mov
inc
sbb
cmp
stos
lcall
ss
cwtl
in
xchg
aaa
das
mov
adc
cli
incb
push
mov
sbb
ds
cmpl
or
mov
lcall
js
push
mov
lods
ret
lret
jmp
mov
jge
pop
xchg
cmp
cmp
fidivl
out
lret
in
mov
in
call
fnstenv
mov
push
gs
cmp
push
cs
jmp
fisubs
out
ret
or
inc
and
xor
ror
mov
sbb
or
cld
stos
arpl
jg
shlb
add
sub
mov
and
cmp
leave
sub
xchg
push
test
pusha
cmc
cmp
mov
test
je
mov
mov
movzbl
sub
mov
jmp
sbb
sbb
mov
mov
stos
pop
pop
adc
decb
adc
mov
data16
scas
mov
mov
adc
insb
imul
mov
arpl
je
cmp
mov
shl
imul
mov
add
adc
repz
pop
test
mov
mov
scas
jmp
cmpsl
xchg
mov
ret
sbb
mov
pop
clc
mov
lcallw
aas
cmp
nop
inc
lret
aas
movsl
jle
cmp
scas
or
mov
sub
ljmp
sarb
jmp
push
jnp
lea
lds
shrl
neg
dec
ds
adc
xlat
mov
dec
xor
sub
mov
cmp
or
cs
shlb
xchg
xlat
xchg
jne
or
xchg
sbb
aam
push
pop
sahf
sbb
cmp
data16
lret
cmp
mov
daa
in
xchg
arpl
push
enter
das
or
xor
xchg
jmp
push
sub
sbb
or
icebp
fidivs
dec
repnz
les
mov
jnp
xor
ret
cltd
push
shl
mov
mov
xchg
dec
mov
or
arpl
bound
cmp
mov
push
data16
ljmp
cmp
enter
mov
mov
mov
dec
fdivs
add
adc
xor
jne
or
xchg
fimull
cmp
cmp
xchg
leave
out
dec
xor
popf
test
push
and
and
scas
clc
popa
rorl
sti
pop
bound
xchg
adc
inc
addr16
push
mov
scas
xor
or
in
movsb
add
je
divb
addr16
xor
jle
or
mov
fiaddl
repnz
lock
push
cmp
negl
cmp
adc
scas
pop
jo
sarb
lret
jp
insb
int
push
sub
shlb
imul
mov
shll
and
mov
inc
test
clc
adc
xchg
mov
das
xrelease
inc
stc
ss
cmp
adc
mov
dec
rorb
mov
mov
inc
cmp
jmp
icebp
bt
cmp
sub
jle
push
adc
decb
adc
xchg
gs
out
imul
icebp
sbb
cmp
jnp
imul
fs
test
dec
out
mov
in
adc
mov
adc
dec
or
imul
out
xchg
loope
pop
and
rolw
cmp
dec
jno
mov
jo
shll
test
pop
jp
hlt
stos
mov
mov
push
pop
es
sub
repnz
rcrb
sti
pop
xchg
dec
push
stos
pushf
pop
mov
or
dec
insl
mov
xor
push
test
push
scas
or
stos
pop
sub
inc
std
push
orb
dec
or
sbb
add
add
sub
cwtl
stc
inc
mov
subl
aas
lcall
popa
pop
andb
dec
insl
repnz
xlat
orl
fcom
sahf
sub
outsb
mov
icebp
clc
fdivrl
mov
push
mov
imul
lds
mov
mov
lds
push
push
xchg
call
cmp
jo
mov
aad
dec
mov
xchg
jmp
add
jle
clc
lock
jmp
mov
jbe
xchg
leave
in
fdiv
out
clc
inc
and
repnz
jle
rclb
sbb
aad
mov
rorl
jbe
outsb
lods
or
cmc
les
add
sarb
cmp
test
std
mov
pop
adc
dec
int
adc
nop
outsl
push
pop
sti
mov
fidivrl
sarb
lret
lods
mov
ja
push
xlat
cmp
xor
stos
test
xchg
test
xchg
fbld
mov
mov
ja
xlat
or
xchg
shl
xchg
setno
movsb
cmp
pop
inc
jmp
aas
stc
leave
or
adc
jmp
jle
add
addb
sub
and
aaa
leave
test
xor
or
dec
pop
adc
arpl
ss
test
xchg
dec
aad
pmuludq
cwtl
popf
test
test
pop
mov
push
mov
or
pop
sub
ljmp
push
adc
cmpb
decl
test
inc
or
enter
add
or
xor
or
push
add
jmp
nop
sti
sti
fnstsw
jno
mov
jle,pn
fcompl
adc
movlps
mov
in
xchg
pusha
fsubr
push
push
fbstp
test
pop
cmp
mov
es
push
pushf
add
inc
push
xor
rcrb
pop
or
xor
in
cmp
jp
iret
popa
rcl
dec
out
std
sbb
jne
gs
test
cli
stos
imul
dec
leave
adc
mov
call
mov
inc
icebp
test
jge
arpl
jmp
stc
cmp
adc
xlat
repz
mov
push
mov
add
mov
xor
jmp
mov
rcrl
sub
mov
add
jecxz
xchg
pop
cmp
dec
xor
test
dec
mov
jmp
and
outsb
ljmp
jno
mov
bound
mov
lcall
pop
popa
mov
fwait
jl
or
fdivl
shl
pop
sbb
test
cmc
inc
test
mov
call
or
cmp
cmp
scas
cmp
sbb
push
xor
sbb
and
das
fnstcw
mov
je
mov
mov
add
lret
sbb
ret
daa
movsb
movsl
mov
add
and
xchg
in
ja
mov
fisubs
scas
shrl
pop
xchg
jle
cmp
leave
nop
and
add
cmp
das
xchg
data16
xchg
jnp
repnz
lods
movd
bound
xchg
and
jp
fiaddl
test
in
ljmp
add
out
sbb
jns
shll
mov
test
mov
inc
dec
sub
sub
dec
and
pop
and
fisubs
xchg
push
mov
imul
push
rorl
inc
mov
add
iret
adc
mov
ds
scas
xor
mov
fiaddl
xchg
loopne
out
pop
cld
test
in
test
sub
xchg
inc
lods
rcr
jbe
cld
lods
add
stc
mov
dec
repnz
ja
inc
cmpsb
cwtl
aaa
aas
leave
xor
inc
pushf
testl
xor
cltd
mov
mov
test
outsl
pop
enter
or
lods
mov
push
js
out
adc
pop
scas
std
rorb
cli
cmpsb
xchg
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
jmp
ss
mov
lods
insl
xor
js
and
lods
adc
adc
movlps
mov
push
xor
inc
outsb
shrb
sbb
or
xor
or
call
ds
xor
sub
aaa
out
cmp
sarb
arpl
dec
jnp
das
enter
xor
pop
pop
mov
jb
ds
xor
and
dec
in
mov
xor
xchg
sbbl
aad
mov
rcrl
adc
iret
insl
xchg
mov
jbe
sbb
jg
aad
mov
out
fdivrs
idivb
inc
mov
cmp
mov
ret
mov
scas
pushfw
cmp
mov
inc
aaa
fwait
and
lds
xchg
ljmp
xor
pushf
mov
daa
jbe
mov
lea
mov
dec
or
mov
push
insb
xor
subb
data16
fwait
out
subb
sub
lea
push
das
inc
fidivrl
stc
adc
sbb
adc
loope
stos
mov
je
pop
pop
outsl
push
int
mov
jns
pop
arpl
stc
jno
popf
ss
jo
sarl
aam
fidivl
sarb
jl
popa
jbe
jl
and
add
inc
adc
aam
pop
rclb
push
cli
mov
fcmovne
out
and
xor
stos
nop
fs
pop
dec
cmp
ds
or
pop
das
sbb
cwtl
xchg
enter
inc
enter
icebp
pmullw
repnz
test
mov
sahf
cmp
lds
cli
xorb
cmp
out
xchg
push
mov
orl
iret
mov
in
add
push
xor
ret
divl
ja
js
sar
in
mov
dec
xchg
adc
shl
sub
inc
aas
pcmpgtw
xor
push
or
sbb
popa
pop
and
sub
push
mov
addl
cmp
dec
loop
lret
inc
ds
or
ds
dec
push
idivb
into
dec
or
sub
aad
out
inc
dec
ret
shrl
daa
mov
add
ret
fimuls
jno
scas
lods
loopne
ret
fdivrp
inc
cvtpi2ps
dec
shl
int3
gs
xchg
mov
mov
jp
cmpsb
cltd
cmp
jmp
jae
into
pop
adc
repz
xlat
adc
add
stc
imul
sbb
add
ret
push
shl
call
jmp
cmp
addr16
pop
push
cmp
cmp
mov
repz
adc
decb
adc
sbb
mov
loope
and
or
add
xor
cmc
lcall
xchg
ret
scas
mov
popa
mov
scas
cld
js
in
cs
iret
push
mov
xchg
lock
addr16
pop
insl
xchg
cmp
ds
out
rcpps
mov
jne
pop
mov
push
mov
stc
das
cmp
mov
or
cmpsb
jg
jns
push
push
ja
mov
inc
out
frstpm(287
cmp
fistpll
fimull
aas
scas
xor
pop
int3
cmpsb
sub
addl
ljmp
push
jnp
sbb
cmp
fdivl
out
sub
movsb
mov
ret
mov
call
ss
mov
cmpsw
push
inc
adc
dec
cmp
push
or
aaa
push
idivl
add
out
daa
push
dec
pop
jmp
ja
push
loope
jb
and
mov
pop
inc
pop
jnp
mov
dec
dec
xchg
ja
mov
stos
adc
pop
jmp
inc
xchg
push
xor
lcall
pop
in
inc
add
cwtl
or
cmp
xor
mov
pop
push
mov
cltd
or
fwait
mov
adc
inc
xchg
xchg
mov
dec
pop
pop
ret
xchg
cmp
xor
cmp
iret
jp
je
xorl
data16
push
mov
call
pop
pop
lahf
aad
sbb
loope
shlb
adc
test
dec
or
sub
cmp
notb
push
ret
cwtl
xor
loope
inc
xchg
and
pusha
push
jno
jb
fsubr
sub
les
movsb
adc
aad
js
ret
lds
mov
je
or
pop
seta
lahf
jne
in
in
je
aam
mov
in
movsl
les
adc
in
in
fildll
or
rcll
mov
js
and
jge
incl
shl
in
sbb
mov
adc
pop
sarl
mov
cmpsb
pop
push
dec
jp
pop
mov
stos
cmpsl
mov
mov
mov
insl
adc
mov
mov
sub
dec
mull
loope
jae
jnp
mov
scas
jb
clc
push
jle
cmpl
cmp
xor
inc
icebp
js
cltd
xchg
or
mov
xor
daa
xchg
mov
je
add
inc
adc
enter
add
adc
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
jmp
imul
leave
sub
xlat
xor
fnstsw
adc
decb
adc
outsl
es
call
jp
lret
fcomps
je
shlb
repz
ret
push
fstpl
orl
test
cwtl
add
rcll
or
mov
pushf
mov
lods
call
fcoml
fistpll
dec
insb
rolb
repnz
lcall
jle
push
or
dec
mov
cmpsb
inc
mov
add
pop
int
xor
push
push
aaa
push
stos
adc
push
mov
loop
das
and
xlat
jg
mov
add
int
shrl
xor
mov
pop
into
xchg
pop
in
clc
jbe
fadds
dec
dec
addb
push
pop
jbe
cs
nop
sahf
jae
cli
jo
stos
lret
inc
xor
pop
test
cmp
add
test
ss
add
sbb
sti
aaa
xor
aaa
sarb
and
mov
and
cmp
out
mov
add
xchg
jo
mov
loopne,pn
es
jg
xor
stos
jp
cltd
loop
lea
xor
mov
xorb
add
dec
das
inc
pop
inc
ljmp
adc
cli
sub
mov
xchg
adc
xchg
push
pop
int3
push
push
pop
ret
enter
aaa
xchg
xchg
mov
imul
mov
dec
mov
out
lret
push
xor
push
sub
filds
shl
std
ss
leave
jmp
stos
adc
lock
daa
shr
sahf
inc
cmp
and
gs
and
mov
push
push
test
jo
fildll
je
pop
fstpt
jg
and
or
cmp
and
sbb
les
mov
sub
jle
test
cmp
sub
mov
imul
ret
push
out
cmp
out
dec
add
xor
pop
popa
scas
and
ret
add
and
adc
in
jae
or
rcrl
rep
in
xor
mov
push
xchg
leave
movb
loop
adc
sub
cmpsl
mov
xor
cld
les
cmp
test
mov
push
out
loope
in
and
enter
fs
insb
std
bound
into
in
dec
stos
testl
inc
mov
cmpb
in
mov
mov
xchg
loope
mov
ret
mov
inc
mov
or
mov
mov
jne
mov
incl
mul
ret
push
mul
mov
cmpl
movl
movl
jmp
not
ja
push
push
pushl
call
subl
adcl
adcl
xorl
xor
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
jmp
jmp
mov
dec
addl
sarb
js
cmp
adc
ljmp
outsb
sbb
adcl
frstor
ret
cld
mov
mov
mov
dec
or
test
xchg
stc
cmp
cltd
fadds
jnp
outsb
push
and
cmpsb
mov
pop
pop
cmpb
sub
into
mov
push
loope
adc
xor
add
imul
push
arpl
lret
shl
jp
xchg
stos
mov
mov
shll
fnstenv
js
inc
rcrb
mov
in
sub
xor
xor
xlat
sub
scas
fmull
inc
insl
mov
sbb
inc
mov
mov
test
stos
sbb
jmp
fisubs
push
mov
add
dec
mov
pop
rclb
dec
repz
insb
call
movsl
add
adc
fisubs
sahf
mov
xor
mov
aam
and
xchg
icebp
jl
loope
popf
add
das
aaa
jnp
lret
or
rol
inc
das
jo
dec
or
lcall
jge
popf
in
inc
adc
test
cmc
mov
lods
sbb
int
sub
sbb
ficoms
sti
fldcw
test
mov
ljmp
push
aam
outsl
jp
jecxz
nop
mov
jle
dec
leave
mov
push
jae
cs
adc
mulb
mov
jnp
and
add
sub
mov
adc
jg
sub
xchg
mov
call
addb
cld
adc
adc
ffree
shll
jle
adc
rcrl
les
pop
push
sahf
adc
idivb
lret
xor
cwtl
push
imulb
mov
dec
pop
cmp
out
ss
fidivrl
bound
mov
or
pop
dec
lahf
daa
fmull
popf
xchg
or
mov
inc
clc
mov
jae
xor
jp
dec
popf
sarw
rclb
out
out
jmp
ss
mov
ss
sbb
imul
shl
add
pusha
out
cmpsb
movsb
xchg
push
cwtl
js
popa
repz
cmpsb
ljmp
into
icebp
pop
dec
test
gs
push
mov
int3
inc
imul
xchg
adc
cmp
into
mov
mov
imul
repz
cwtl
insl
push
inc
push
sbb
pop
lock
push
pop
adc
jne
xchg
rolb
shll
out
or
sub
jb
xchg
jns
cwtl
push
div
mov
xor
mov
jmp
xchg
add
and
xchg
and
sub
sti
inc
stos
dec
cmp
adc
mov
mov
mov
xlat
jle
pop
add
aaa
inc
xor
popf
das
outsl
inc
jg
dec
mov
filds
and
adc
mov
sbb
xchg
adc
bound
jg
clc
and
push
jo
std
lret
daa
rcll
push
and
dec
xchg
imul
mov
mov
rcrl
cmp
daa
inc
inc
leave
xor
sbb
push
mov
fwait
insb
ss
cmp
push
mov
jg
xor
arpl
push
push
lock
mov
jnp
pop
and
pop
or
jg
mov
sbb
stos
cmc
add
arpl
pusha
sbb
notb
movsb
and
inc
sbb
xchg
in
dec
ja
mov
lret
loop
out
adc
aad
shl
dec
cld
stc
sbbb
sub
add
mov
dec
push
lret
jno
pop
and
xchg
enter
pop
pop
insb
mov
dec
mov
movsb
pop
loope
imul
xor
test
out
xor
aaa
cmp
test
sbb
sub
ret
pushf
push
add
repz
jg
les
and
mov
pop
int
cmp
aad
adcb
lods
inc
shrl
cmp
rorl
mov
lcall
sbb
lcall
in
out
and
cld
repnz
sbb
push
out
mov
test
mov
cmp
inc
popa
sti
jo
mov
insl
mov
add
data16
fwait
push
ficompl
jp
divl
push
lods
adc
jle
mov
xor
icebp
sti
fdivs
sti
mov
push
xor
mov
repz
jno
mov
sar
or
std
popl
mov
dec
xchg
ja
xchg
push
mov
push
fidivrs
aad
add
dec
or
push
jns
cmp
cvtss2sd
pop
xlat
push
andl
pop
ret
icebp
jp
mov
pop
jbe
test
sbb
daa
adc
aaa
mov
pop
pop
out
nop
lcall
add
test
or
fwait
sub
es
movb
sbb
mov
xchg
popf
cmp
push
adc
shl
loope
xchg
rclb
or
mov
lcall
shl
stc
insb
pop
dec
dec
push
adc
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
jmp
pop
mov
pusha
cltd
pop
sbb
pop
or
adc
push
pop
fistpll
ss
sbb
cmp
inc
fidivrl
into
mov
movsl
dec
cs
repnz
mov
sbb
dec
jne
das
aam
jmp
into
aam
clc
je
leave
add
dec
cmp
lock
push
sub
imul
jle
xor
sub
sub
ds
in
scas
cmpl
cmp
out
push
fidivl
mov
dec
imul
faddl
arpl
and
outsl
cmpsb
outsl
idivl
xor
push
adc
inc
test
loopne
mov
testb
repz
enter
enter
push
sarl
and
mov
add
jecxz
add
sti
cmp
xor
test
fwait
aaa
pop
mov
fstl
int
mov
out
inc
push
mov
in
jg
sbb
or
test
mov
cmp
icebp
dec
xchg
sub
sbb
mov
sub
stc
mov
imul
cli
in
add
push
sub
mov
add
mov
adcb
scas
or
ret
stos
out
push
lretw
mov
jecxz
push
mov
adc
push
xor
movsb
and
xor
out
imul
lret
mov
test
sbb
push
lret
fnstenv
popa
adc
adc
xchg
and
dec
insb
xchg
rcr
inc
adc
push
sub
pop
pxor
cmc
addr16
xchg
stos
lods
dec
jne
ret
outsl
push
roll
pusha
sub
out
adc
aaa
mov
xor
xchg
or
test
sbb
ds
mov
aaa
call
sbb
dec
mov
repnz
push
lahf
dec
pop
or
adcb
xorl
or
dec
ret
add
decb
push
js
pop
jae
inc
cwtl
ss
sbb
inc
xchg
adc
jne
and
mov
jecxz
inc
repnz
push
dec
mov
es
xchg
dec
addl
fldenv
pop
rclb
stos
cmpsb
jb
mov
test
or
stos
sbb
cs
lcall
mov
adcb
push
cmp
adc
xor
sub
pop
mov
sti
rclb
loope
test
mov
jle
ret
add
imul
push
fwait
xchg
mov
mov
shlb
mov
xor
mov
sub
mov
add
mov
jmp
jo
sbb
lcall
sub
adc
nop
les
icebp
rcrl
mov
sbb
sete
pop
jbe
fildll
jl
dec
decl
add
mov
aaa
call
daa
shll
mov
outsb
jne
and
loop
mov
or
fwait
leave
adc
notb
ret
cmpsb
xchg
int3
fsubl
jb
push
mov
cmp
mov
inc
mov
cwtl
push
movsl
jbe
subl
push
test
xlat
cmc
inc
iret
xor
push
dec
sbb
sub
mov
outsb
jae
out
mov
ret
hlt
mov
repz
in
push
hlt
jle
cmp
cmp
inc
pop
addr16
jg
xchg
push
mov
aam
ss
dec
cmp
xchg
push
inc
out
xchg
sub
leave
jp
jne
or
push
or
and
in
popa
jl
insb
shl
xchg
push
adc
pop
add
xchg
mov
xchg
das
mov
push
or
and
bound
sub
xor
push
or
and
xchg
test
in
pop
lock
sbb
adc
movsl
mov
lret
aaa
mov
movl
push
cmp
and
dec
push
xlat
insb
loope
enter
adcb
loopne
mov
imul
test
shl
ss
mov
cmp
js
loope
insb
sbb
enter
test
push
testb
fcomps
mov
cmp
rorl
test
xchg
insl
insl
xlat
mov
pop
je
jmp
sti
or
out
popa
fwait
test
insb
movsb
add
mov
loop
arpl
ud2
mov
jecxz
push
mov
fnsave
jmp
pop
orl
es
mov
jbe
popf
icebp
pop
cmp
fnsave
mov
fimull
in
sub
imul
outsl
push
adc
push
je
or
insb
mov
test
add
pop
dec
cmp
xor
push
dec
lods
jmp
adc
pop
arpl
push
add
repnz
push
ss
dec
mov
inc
mov
lods
dec
pop
out
cwtl
mov
mov
inc
xor
push
lret
sub
inc
lret
add
xor
outsb
mov
fldcw
inc
fldenv
std
jp
adc
add
aas
ds
sbbb
outsb
sub
xchg
jle
mov
add
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
jmp
fiadds
ljmp
or
fsubs
adc
iret
movlps
jno
mov
clc
sarb
orb
pop
in
stos
push
push
mov
sarl
push
cmc
dec
mov
scas
bound
pop
dec
pop
fiaddl
dec
inc
into
xchg
add
add
xchg
mov
xlat
dec
int
add
aam
pushf
out
enter
imul
xchg
out
dec
dec
movl
xchg
lcall
mov
in
inc
mov
cwtl
jno
rcr
and
xor
mov
cmp
js
rcrl
xor
inc
sub
lock
dec
lods
sbbl
cmc
dec
mov
and
jno
rorb
iret
add
mov
gs
push
cmp
movsb
mov
xchg
xchg
es
pop
sbb
sahf
cmp
xlat
push
push
pop
cmp
repnz
inc
mov
loope
mov
shll
bound
ss
mov
pop
mov
aad
test
mov
ljmp
loopne
data16
xor
out
popa
and
xchg
jp
lret
sbbl
adc
loop
data16
gs
sti
adc
cmc
sbb
aas
push
sahf
mov
movsl
and
push
ret
push
insl
adc
cmp
jg
fsubrl
jae
lea
dec
dec
lret
mov
cmc
mov
or
push
arpl
fisttpl
outsb
hlt
add
stos
mov
ds
or
cmp
xor
popa
int
mov
mov
adc
cmp
mov
mov
pop
stos
push
mov
mull
fdivs
jmp
push
mov
lock
std
test
sub
jo
add
shrb
sete
or
aad
xchg
hlt
mov
dec
jb
pop
pop
je
popf
loope
sub
vmptrst
repnz
cwtl
lcall
jp
icebp
xor
in
adc
lock
add
or
dec
xorl
mov
or
popa
sbb
push
or
repnz
jg
push
dec
pop
stc
pushf
ss
js
xor
popa
dec
call
mov
sub
test
movsb
rorb
sbb
enter
mov
inc
sbb
lock
lods
xor
fistps
loop
dec
pop
cmp
lods
adc
rclb
mov
shl
sub
push
outsb
shr
mov
adc
push
push
call
mov
movzbl
push
call
test
jne
decl
xor
jmp
mov
mov
incl
mov
cmpl
mov
movl
jmp
mov
mov
jae
call
sbb
adc
xor
movl
orl
add
push
add
pop
mov
sbb
mov
mov
andl
mov
addl
mov
adcl
movzwl
or
cltd
sbbl
movzwl
sbbl
idiv
sub
movzwl
or
or
mov
neg
mov
xor
xor
mov
adc
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
pushl
push
pushl
pushl
pushl
call
xorl
sbb
mov
xor
mov
orl
and
addl
sub
mov
sbbl
jmp
arpl
ja
arpl
mov
ljmp
iret
movlps
shl
pop
sbb
pop
cmp
fs
fadds
cmp
sbb
ret
gs
rcll
adc
sbb
inc
daa
mov
adc
jbe
fstl
sub
jp
xchg
in
stos
leave
pop
loop
xorb
scas
loope
loope
jae
pop
mov
dec
pop
sub
xchg
sub
cmp
inc
insl
or
and
xchg
movsl
jae
addr16
sub
or
cli
dec
movb
scas
icebp
dec
fcompl
cmp
inc
int3
fsubl
xlat
push
dec
sub
mov
fwait
int3
xchg
outsb
xchg
xchg
stos
adc
imul
sar
inc
sbb
pop
in
in
fdivr
jnp
cmp
xchg
and
gs
data16
popa
das
arpl
daa
movb
pop
mov
jae
ret
mov
xchg
adc
rorl
insb
insl
jns
mov
mov
subl
xchg
jnp
arpl
pop
pop
adc
and
sbb
push
inc
js
es
mov
push
cmp
cltd
cmc
inc
test
fwait
rolb
and
push
mov
push
xchg
fistpll
inc
inc
fwait
mov
mov
mov
pushf
std
ret
call
mov
lret
mov
loop
or
sbb
mov
xor
cmp
scas
and
std
out
aaa
add
mov
push
sbb
imul
mov
popa
cmp
fistps
adc
lock
fs
pop
add
popa
mov
popf
add
repnz
add
xor
push
das
or
push
insl
pusha
add
fidivs
push
pop
loope
shrb
mov
imul
mov
iret
xor
xor
adc
cld
mov
mov
dec
push
pop
gs
pop
mov
es
scas
jne
sahf
mov
push
cmp
rclb
xchg
out
int
or
mov
mov
sub
mov
and
xor
clc
or
jo
lock
sahf
mov
sub
bound
jp
add
sahf
leave
pop
mov
mov
out
push
cmpsb
add
adc
cmpsb
add
das
or
ret
xlat
aad
jmp
test
adc
ror
out
or
ret
sbb
addr16
or
nop
daa
rolb
pop
push
call
and
xchg
pop
sbb
popf
cmp
in
mov
and
mov
and
mov
adcl
sub
mov
xor
mov
sub
movl
mov
cmp
movl
jb
cmpl
mov
mov
jmp
movzwl
jb
push
call
mov
sub
mov
xor
mov
orl
xor
or
sbb
add
subl
add
movl
movzwl
sbb
movl
movl
andl
movl
mov
mov
sbb
mov
andl
xor
mov
adc
add
mov
mov
xor
mov
subl
xor
subl
div
or
mov
andl
add
adcl
and
pushl
orl
pushl
sbbl
call
movl
not
movl
movl
sub
mov
and
mov
subl
and
or
mov
xorl
and
xor
pushl
adcl
pushl
call
sub
pushl
movl
movl
cmpl
movl
mov
jmp
movl
movl
jge
pushl
push
call
movzbl
or
xorl
andl
negl
sbb
mov
mov
add
dec
sub
or
movl
xor
movl
movl
cmpl
mov
movl
jmp
movl
jbe
pushl
push
push
call
xor
neg
add
adc
sbb
and
adcl
cmpl
mov
mov
mov
jmp
mov
mov
jg
pushl
call
orl
xor
adc
xor
andl
sbb
movl
movl
xor
movl
mov
and
mov
sub
movl
mov
orl
or
and
mov
sub
cmpl
mov
movl
movl
jmp
movl
movl
jge
push
push
pushl
call
decl
xor
xor
add
not
pushl
mov
xor
mov
addl
add
and
xor
mov
sub
sbb
mov
xor
subl
and
andl
pushl
xor
mov
sbb
mov
andl
imul
xorl
xor
subl
or
movl
mov
subl
sub
addl
pushl
andl
call
dec
jne
or
movl
xor
add
adc
mov
movl
mov
andl
movl
mov
call
lea
xorl
mov
cmpl
movl
mov
mov
jmp
movl
movl
jg
push
push
push
call
or
sub
addl
or
xor
xorl
lea
adc
mov
sbbl
mov
orl
mov
mov
mov
cmpl
movl
not
mov
jmp
movl
notl
jne
pushl
push
push
pushl
call
sbb
sub
neg
or
or
adc
xor
cmpl
mov
movl
mov
jmp
mov
jle
push
push
call
or
movzbl
and
mov
sub
subl
orl
xor
jmp
pop
mov
xor
mov
sar
stos
push
sbb
adc
cmpsl
cmc
push
sbb
mov
movsl
movsb
repz
inc
jno
dec
pop
xchg
out
mov
cmp
pop
insl
mov
orl
imulb
pop
xchg
mov
jo
or
and
push
pop
or
mov
popf
jbe
mov
sub
jo
into
mov
ja
in
mov
mov
in
or
rolb
outsb
add
cs
mov
lea
andl
lahf
adc
fimuls
stos
lret
mov
jno
addb
out
out
jno
inc
adc
or
cmc
adc
mov
xlat
xchg
in
in
or
push
push
imul
inc
popl
and
adc
pop
jle
mov
imul
jle
insl
das
sub
xchg
rorl
pop
push
mov
ret
roll
xchg
pop
jo
scas
mov
aaa
loope
mov
movsb
call
push
jge
xchg
or
movsb
jae
mov
xchg
push
xor
jae
mov
or
test
xor
pop
pop
mov
lods
jmp
sbb
push
push
mov
je
lock
dec
pushf
push
sbb
mov
test
cmp
sbb
cmc
les
bsf
xchg
xchg
add
out
lock
mov
outsl
mov
jno
aad
pushf
mov
enter
aad
mov
lds
push
fisubrs
xchg
mov
inc
gs
scas
mov
xor
xor
loop
xchg
arpl
pop
int3
outsb
inc
pop
hlt
xchg
movb
dec
js,pn
jne
add
or
stc
pop
inc
movsb
xor
lea
inc
or
ja
scas
inc
adc
lock
cmp
xchg
inc
cld
fdivrs
fisubs
int3
test
int
add
divb
jg
jb
cmp
xor
cmp
xchg
adc
jbe
insb
in
mov
pop
adc
jnp
repz
out
cltd
push
movsb
shr
xchg
pusha
aaa
xchg
mov
mov
xor
aaa
out
push
pop
jecxz
or
mov
or
cmp
hlt
and
mov
sbb
dec
out
daa
push
daa
cli
lar
call
test
and
cmp
pop
lcall
sub
jecxz
stc
mov
xor
xor
xor
inc
shl
shr
or
incl
mov
cmpl
movl
movl
mov
movl
jmp
mov
movzbl
jbe
push
call
movzbl
sbb
andl
xorl
and
subl
sbb
mov
adc
mov
inc
mov
mov
mov
mov
mov
shrd
cmpl
mov
movl
mov
not
jmp
mov
jb
push
push
push
push
call
mov
and
mov
add
and
add
xor
sbb
shr
mov
inc
mov
cmpl
movl
mov
movl
jmp
movl
jbe
pushl
pushl
call
andl
sbb
or
xor
xor
negl
mov
andl
xor
addl
xor
sbbl
or
xor
xor
add
mov
andl
push
addl
pushl
lea
push
subl
shl
call
xorl
lea
push
mov
mov
lea
xorl
push
addl
mov
lea
andl
mov
mov
andl
mov
push
adcl
call
sbbl
push
push
pushl
call
add
mov
mov
sbb
mov
addl
mov
mov
xor
add
sub
or
mov
or
shr
cmpl
mov
notl
not
jmp
movl
jg
pushl
push
call
sbb
inc
or
sub
add
sub
dec
neg
adc
shl
cmpl
notl
mov
movl
jmp
movl
jb
push
push
call
adc
adcl
xor
and
add
adcl
or
subl
mov
xor
xor
mov
dec
lea
cmpl
movl
mov
movzwl
jmp
movl
notl
jbe
push
pushl
call
adcl
and
add
movzbl
or
movzbl
xor
mov
mov
xor
lea
cmpl
mov
movl
jmp
movzwl
movl
jg
push
pushl
push
pushl
push
pushl
pushl
call
and
sub
sbbl
mov
sbb
mov
add
neg
mov
movzwl
and
mov
sub
lea
cmpl
mov
mov
mov
jmp
movl
jbe
push
push
push
pushl
call
xor
add
xor
andl
xor
add
or
movzbl
sub
sbb
xor
mov
sbb
movl
movl
movl
jmp
out
rclb
bound
cwtl
push
insb
sub
adc
movlps
nop
mov
cmpl
in
mov
xchg
std
push
sbb
cmpsb
mov
sbb
int
daa
out
andb
or
mov
xor
jae
push
leave
add
mov
jl
ja
in
dec
pop
test
rclb
in
lods
and
mov
and
xorb
fldt
call
jnp
add
xchg
mov
adcb
cmpsl
cmp
dec
sub
out
mov
in
adc
sahf
push
mov
dec
ret
fimuls
add
cmp
hlt
test
out
shrb
or
movsb
jo
dec
mov
scas
movsl
pop
ret
test
aaa
pop
jp
dec
loop
or
mov
sahf
adc
mov
pop
push
xor
stos
jno
or
inc
inc
fcmovbe
push
push
mov
scas
cmp
or
sti
mov
hlt
xchg
or
dec
imul
sub
sub
mov
jb
roll
test
mov
scas
cmpsl
mov
xor
int3
jno
stc
mov
call
loopne
repz
pop
cmp
inc
inc
lds
arpl
cmp
fsubrs
pop
mov
cmpsl
stos
imul
outsl
shrl
xor
addb
in
or
decb
push
aam
jno
sub
sub
inc
push
std
cmc
scas
fldl
or
ret
mov
sbb
int3
cmp
insb
fwait
jmp
icebp
mov
lcall
sub
movsl
test
insb
jae
xchg
fcomip
xor
sbbb
inc
mov
loop
or
es
jmp
icebp
mov
out
imul
in
mov
jp
dec
jo
add
ret
mov
dec
out
lods
xor
fldcw
in
cltd
push
mov
sub
aad
in
scas
mov
ret
testb
sbb
mov
out
test
daa
jg
rorb
ljmp
mov
pop
mov
inc
xchg
or
movd
lock
in
insl
cli
fisubl
xchg
pop
dec
mov
insl
sub
sub
repz
pop
mov
repz
lcall
push
push
and
adc
pop
pop
movsl
bound
mov
rorl
xor
scas
les
stos
sahf
inc
and
mov
sbb
add
dec
and
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
jmp
mov
adc
jg
mov
shl
idivl
test
unpckhps
iret
movlps
fldenv
ds
push
scas
aas
sbb
push
jne
add
icebp
rclb
add
push
cwtl
shrl
ss
mov
jns
cmp
sbb
jp
pop
mov
gs
mov
es
rcrl
inc
mov
sbb
arpl
iret
mov
push
dec
sbb
mov
jmp
mov
mov
movsl
ret
push
and
lds
test
mov
xor
mov
xchg
ja
std
push
and
leave
arpl
ret
mov
popf
stos
in
lret
fdivr
sti
cmp
fucom
aaa
std
cmp
movsb
push
sahf
xlat
loopne
dec
shlb
inc
and
xor
outsl
repz
mov
out
mov
mov
mov
inc
imul
stos
shll
lret
cli
in
jb
hlt
stc
repz
jge
jecxz
push
mov
sbb
imulb
dec
xchg
xchg
dec
fdivl
sub
push
js
leave
xchg
xor
rcll
loop
mov
outsl
jb
out
or
movsl
fdivrs
inc
pop
js
jo
jnp
sbb
mov
jb,pn
movsl
xchg
rolb
mov
mov
add
shlb
and
inc
mov
repz
scas
in
mov
fldl
inc
lret
dec
cmpsl
addr16
or
or
enter
ljmp
xchg
jmp
fimuls
fisubs
out
mov
jg
ja
int3
xlat
inc
cmp
xchg
iret
xor
jmp
jle
push
mov
mov
mov
pusha
sbb
and
and
scas
or
hlt
sbb
and
push
pop
inc
pop
add
mov
mov
mov
jp
outsl
incl
xlat
mov
mov
loope
sub
dec
pop
pop
test
mov
fistpl
popf
mov
xchg
mov
dec
xor
shl
jg
pop
mov
dec
jp,pt
out
dec
mov
aam
jg
xor
cmp
jg
hlt
ret
sbb
arpl
iret
sbb
leave
mov
insb
push
mov
mov
imul
cmp
movsb
push
jl
pop
sbb
adc
pop
add
push
setne
jae
sahf
cmp
rcr
outsl
mov
inc
cld
inc
fdivl
pop
push
push
or
or
jmp
dec
pop
imul
enter
pushf
lods
test
adc
sbbb
psubusb
xor
negl
add
pop
push
mov
sti
jb
xor
ds
aaa
or
fsubrs
mov
xchg
arpl
pop
pusha
push
sub
or
leave
in
es
bound
push
repz
dec
mov
sarl
mov
pop
test
mov
add
stc
cmpsl
cmpsl
insl
lret
jo
pop
in
and
mov
adc
leave
add
or
sub
jbe
jns
mov
xor
idiv
js
popf
jg
mov
imull
test
mov
mov
repnz
add
or
jb
mov
sbb
and
mov
loopne
mov
lods
addr16
sahf
sub
out
aaa
add
jae
jnp
sarb
aam
movsb
repz
or
or
lea
push
dec
inc
ds
gs
xor
mov
sub
and
fwait
dec
sti
xor
popf
aad
movsb
push
push
mov
gs
insb
stc
xor
sti
pop
fcompl
mov
push
mov
out
push
shlb
jle
jp
lcall
xor
jo
lds
jge
fiadds
out
and
les
dec
or
movsl
xchg
xchg
outsl
cmp
lcall
xlat
or
xchg
into
or
int3
pop
or
stc
into
and
int
dec
push
push
movsb
mov
and
adc
sqrtps
mov
rorb
out
out
dec
addr16
int
mov
xor
call
sbb
shlb
xor
lahf
adc
mov
lock
mov
or
ror
sti
pushf
fistpll
adc
ret
jns
jb
jnp
insl
call
outsl
std
push
lcall
jge
cmp
mov
pop
dec
scas
mov
add
and
xlat
and
cmpsl
and
inc
adc
js
adc
dec
sub
mov
fstpl
sbb
jp
je
sahf
test
and
jne
xor
push
stos
ja
dec
or
fidivl
aam
xor
jmp
repnz
push
sub
lahf
aas
cmpsb
inc
int
aas
sub
inc
imul
testw
fwait
rorb
shlb
inc
dec
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
jmp
jp
jg
aaa
lret
int
xor
aas
or
adc
jmp
loope
mov
mov
mov
jno
repz
es
fisttpll
imul
call
adc
inc
enter
test
or
inc
mov
nop
pop
sub
loopne
into
insb
out
push
xor
das
int3
iret
add
shlb
cmp
testl
jecxz
fnstsw
out
shr
rclb
pop
jmp
std
gs
add
or
je
mov
cmc
lods
shrl
scas
lds
orb
jg
cmpsb
jp
scas
jns
cli
mov
pop
cmpl
scas
dec
jne
sub
mov
xlat
insl
popa
xor
push
ss
sub
test
dec
js
dec
lcall
push
inc
and
lds
dec
repnz
outsb
fsts
cmpsb
push
and
insb
adc
fcomps
insl
movhlps
adc
sbb
mov
mov
in
mov
adc
std
into
jecxz
mov
mov
mov
and
dec
cmp
mov
rorb
push
mov
mov
roll
xchg
jns
mov
scas
aas
fstp
or
xorl
or
jne
inc
adc
mov
adc
xor
pusha
jge
lock
xor
cmpsb
adc
in
push
iret
mov
xchg
and
mov
jne
lahf
gs
lahf
sub
lahf
sub
jo
cmpsl
mov
test
or
bound
lahf
daa
cld
scas
bound
cmp
cmp
xor
cmp
je
cmc
cmp
add
jge
adc
mov
push
mov
inc
repz
jae
icebp
les
sub
and
xor
paddsb
xchg
push
dec
leave
dec
stos
das
lcall
jecxz
dec
inc
push
add
add
jge
outsl
cmp
cld
inc
pop
adc
setno
pop
dec
sbb
cmp
inc
data16
jecxz
add
cwtl
ja
in
add
int3
fwait
clc
sub
lds
jecxz
in
je
push
push
inc
roll
xor
sbb
xor
pop
pusha
cmp
xchg
aam
ss
mov
cmc
mov
push
pop
mov
jmp
jge
sbb
xor
lods
inc
jns
adc
call
es
mov
rcrl
push
cmp
adc
push
sar
inc
and
fnstcw
add
dec
and
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
jmp
aaa
jae
jnp
jns
das
jmp
rolb
cld
call
adc
imul
sahf
push
leave
add
xchg
mov
xor
icebp
or
clc
mov
rep
push
pop
mov
jp
push
es
push
adc
es
stos
test
add
cmpsb
adc
fst
push
cmp
stc
xchg
and
insb
stos
sbb
fcomp
aad
outsl
pop
stc
imul
sbb
rcll
cmp
cs
aas
ret
cmp
stos
push
gs
insb
pop
xor
xlat
les
fcompl
pop
xchg
nop
pop
negb
int
inc
push
push
mov
and
bnd
inc
sbb
push
jnp
jg
inc
mov
add
notl
gs
int
mov
cmpsb
adc
mov
push
cmp
dec
push
push
sbbb
add
xchg
jle
cmp
sbb
insl
insl
fimull
dec
mov
cld
scas
or
push
inc
pop
shrl
lds
dec
and
popa
jmp
gs
inc
gs
test
mov
test
mov
sarl
mov
jno
mov
rep
mulb
dec
dec
out
lahf
scas
enter
jo
loope
sbb
xchg
or
or
push
shrb
xchg
cmpsb
inc
ret
orl
cmpsl
add
ds
cmpsb
pop
pushf
and
std
cmp
cmp
call
sub
adc
loop
add
call
insl
push
in
xor
push
or
push
cwtl
jbe
fwait
ds
add
mov
push
outsl
mov
add
cmc
push
sbb
sub
lret
iret
xor
lahf
test
or
inc
cmp
shll
push
jbe
mov
push
das
and
inc
les
xchg
push
pop
xor
mov
bound
stc
rorl
fisttpll
popa
push
aam
repnz
pop
jg
inc
movsl
test
mov
cmp
in
inc
and
mov
adc
jb
idivl
cmp
mov
popf
sbb
xorb
mov
dec
push
xchg
loopne
inc
addr16
adc
push
ret
and
or
xchg
rolb
pop
sbb
test
push
mov
and
xor
in
arpl
or
cmp
sbb
push
out
clc
movsl
xchg
add
jp
icebp
push
aam
in
cmp
and
scas
xor
test
and
push
call
mov
mov
add
mov
adc
jmp
and
das
sbb
sbb
or
mov
movlps
add
insl
loopne
mov
aad
xor
stc
sub
or
pop
sarl
jge
loope
outsl
ss
mov
lret
cmp
lahf
sbb
jnp
pushf
lahf
or
ss
mov
inc
mov
outsl
pop
in
push
xchg
test
aad
cmc
push
mov
loope
sbb
mov
loop
cwtl
pop
and
add
push
cmpsl
cltd
in
dec
pop
ret
and
ds
sar
xor
mov
sti
test
loop
xchg
add
jnp
stos
repnz
mov
xorb
sub
enter
cs
dec
push
push
ljmp
rcl
lock
push
repz
in
nop
sub
adc
inc
dec
xor
mov
ss
inc
popa
sbb
leave
loopne
cld
pop
popf
xor
jecxz
insl
shll
fisttpll
xchg
lret
fsts
pop
dec
xchg
or
scas
cmp
mov
lock
lods
test
cmpsb
sub
ss
and
or
xchg
hlt
xchg
mov
enter
lret
cwtl
scas
in
js
stos
xchg
jae
sub
jmp
jle
movsl
jo
scas
pop
fcmovu
popa
cmp
test
decl
hlt
jmp
mov
sti
mov
inc
cmpsb
fs
and
popf
fs
jecxz
xchg
sbb
sar
jge
mov
dec
rclb
sub
or
cmpb
bound
outsl
jp
fmul
sub
shrl
fildl
je
mov
and
fwait
mov
dec
sbb
xchg
xchg
stc
lea
and
pushf
lock
dec
xor
or
push
pushf
mov
xor
cld
xor
test
add
dec
fcompl
pop
mov
shr
or
xchg
call
xor
cmpb
lret
pop
xchg
or
in
cltd
pushaw
andps
cwtl
movsl
movsb
dec
nop
pop
aas
dec
jmp
mov
rol
sbb
or
aam
jns
add
out
adc
call
mov
jae
pop
loop
dec
repnz
pop
outsb
ss
cwtl
popf
dec
test
out
aaa
inc
shl
and
inc
mov
jb
cmc
cmc
mov
sub
mov
jb
aas
stos
int
inc
test
or
out
sub
push
out
push
inc
inc
inc
xchg
and
call
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
jmp
pusha
into
out
sbb
and
nop
hlt
jmp
jae
adc
adc
pop
lret
jmp
sbb
nop
lds
add
or
lods
arpl
cmp
fwait
add
xchg
pop
mov
lret
add
dec
jb
push
sub
add
mov
inc
adc
sbb
xlat
pop
xchg
dec
rclb
in
pop
mov
rolb
mov
dec
xor
cmp
popf
loopne
int3
dec
xchg
int3
mov
nop
test
and
js
lock
inc
stos
sub
xchg
sbb
repz
ljmp
jmp
scas
jp
mov
enter
in
decl
fcoms
dec
js
fucom
push
lret
sbb
pop
movl
les
mov
shll
test
not
enter
adc
dec
insb
xor
sub
adc
lds
in
cmp
adc
sbb
sub
inc
das
stos
dec
xchg
lods
repz
mov
hlt
call
pop
aad
lock
mov
iret
push
adc
adc
fsubrl
loopne
jnp
xorl
mov
or
cmpsb
jne
aad
scas
push
bound
bound
add
jns
int3
dec
icebp
jp
cmpsb
popf
sbb
in
gs
arpl
xchg
jbe
adc
mov
pop
or
dec
xor
dec
adc
and
xchg
rolb
mov
enter
fildll
xor
in
inc
cmpsl
cwtl
pop
inc
sbb
ja
mov
insb
fbstp
dec
xor
sti
adc
xorb
or
mov
jno
xor
xor
mov
xor
xchg
add
in
cmp
mov
or
outsl
repz
add
daa
neg
stos
push
mov
ret
popf
pop
pop
les
fdivr
push
insl
mov
xor
lods
or
stos
pop
divl
idivl
xchg
cmp
jae
aam
xor
fcoml
xchg
xchg
dec
push
mov
test
pusha
inc
xchg
and
pop
mov
loop
inc
inc
push
lcall
arpl
fsubp
push
stc
repnz
imul
mov
repz
aas
xchg
mov
ret
sub
jbe
imul
pop
mov
and
mov
or
push
pop
scas
add
out
loope
cmp
adc
inc
and
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
jmp
pop
and
fldenv
js
outsb
insb
mov
add
adc
movlps
enter
mov
stos
dec
mov
popa
push
push
and
sbb
cmp
cmp
int
lahf
jne
cwtl
scas
add
icebp
mov
push
adc
aam
push
int3
jns
sub
jle
fwait
stos
inc
inc
and
dec
or
das
cmc
adc
sub
jge
les
push
pop
jne
inc
fcmovbe
das
jne
mov
or
push
repz
xor
je
es
outsl
inc
ja
push
cs
cmp
or
sbb
sbb
scas
push
xchg
mov
rcrl
sub
in
and
arpl
dec
fwait
cmp
test
mov
outsl
mov
or
or
mov
adc
xchg
mov
dec
xchg
or
xor
in
sub
adc
xchg
push
popw
cmp
push
or
mov
xor
mov
pop
add
mov
xor
cli
sub
aas
and
fistps
xchg
in
repnz
inc
mov
mov
stos
test
aam
dec
idivb
loopne
cmpsl
adc
mov
push
xchg
xchg
mov
inc
jle
out
cltd
jne
jle
lea
inc
dec
cmpsl
push
cmpb
and
and
test
cld
mov
dec
xor
xchg
and
ss
in
xor
mov
add
nop
mov
cs
sub
aad
movsb
movsl
into
mov
mulb
mov
xor
sub
ret
js
sbb
mov
push
sub
mov
mov
filds
stc
xor
out
stos
cmpsb
adc
ljmp
fsubl
sub
mov
pop
lar
push
mov
sub
test
inc
jae
testb
stc
addb
sbb
shll
mov
mov
popf
pushf
in
ja
cmp
fs
scas
xchg
fildll
movsl
les
xchg
repnz
cmp
in
mov
dec
xor
cmp
lock
jmp
ret
stos
out
mov
mov
and
inc
xchg
cwtl
ja
mov
mov
sub
xchg
xchg
cmp
cld
stos
or
push
xor
push
xchg
and
je
push
test
inc
push
mov
pop
pop
mov
loope
dec
aad
xchg
dec
aam
lahf
inc
jns
mov
ljmp
or
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
add
and
inc
and
mov
adc
adc
cmp
jg
movsb
sti
inc
pop
sub
mov
fstp
mov
fdivrs
or
fcompl
add
xchg
pop
cmc
adc
popa
jge
das
and
xor
jmp
inc
mov
xor
dec
cli
lock
fwait
xchg
jbe
dec
int3
aaa
shl
test
mov
pushf
add
push
cli
test
xchg
fwait
stos
loope
mov
jecxz
insl
inc
dec
xchg
xor
subb
lock
and
mov
out
imul
mov
hlt
xchg
xor
xchg
mov
shll
lods
sti
or
mov
imul
jnp
pop
call
clc
ja
mov
stc
repnz
cmp
sub
lods
dec
jnp
mov
repz
loop
jbe
in
push
dec
adc
mov
imul
in
iret
lds
je
ret
xchg
shrb
std
pop
cmp
pop
mov
and
inc
xchg
mov
mov
arpl
dec
lock
cmp
daa
or
sbbl
stos
insl
test
scas
push
daa
jmp
fsubr
xchg
movsb
mov
rcrl
fildll
jae
dec
mov
or
or
sub
shll
and
xchg
and
pop
iret
into
sbb
cmp
fs
mov
stos
mov
fnstcw
in
pop
dec
pop
outsb
or
test
or
xchg
shll
jge
es
in
cmp
push
leave
cmp
loop
push
jno
mov
pop
out
sub
or
lret
fimuls
mov
jb
pop
cmp
xorl
cmp
pop
xchg
fldcw
adc
xchg
insb
jae
cli
leave
testl
icebp
lret
pop
sbb
das
js
nop
fnstsw
out
jo
push
jp
mov
sbb
outsb
ja
inc
iret
mov
and
outsl
mov
in
repnz
in
aaa
mov
sarb
adc
adc
dec
mov
sub
dec
arpl
cmp
cmpsb
push
pop
mov
fistpll
or
sbb
sbb
push
and
cmp
loope
sub
lea
outsb
inc
xchg
je
ja
in
insl
pop
pop
daa
push
jne
xchg
inc
ja
push
outsb
cld
adc
dec
mov
aaa
std
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
jmp
les
mov
mov
cmpsl
ljmp
cmp
mov
xchg
inc
pop
fsts
add
fcomp
inc
dec
cmp
imul
sbb
sub
sahf
repnz
movsb
mov
ja
sbb
mov
negl
or
sbb
and
int
mov
das
dec
xor
cmc
jle,pn
pop
inc
aad
lds
push
mov
sub
lea
xchg
jno
jg
jns
hlt
imul
push
pusha
jg
cmp
adc
xchg
add
xchg
adc
mov
xchg
aam
adc
xchg
add
mov
in
test
orl
pop
mulb
sbb
ja
dec
fwait
int3
cmp
ljmp
add
stos
dec
mov
sahf
adc
pusha
dec
insb
mov
ja
in
scas
out
enter
fstpl
xchg
push
jecxz
into
repnz
cmp
inc
insl
mov
rolb
call
mov
add
icebp
stos
test
fisubrl
pop
mov
mov
fcomi
push
rcl
mov
mov
adc
imul
jnp
mov
lahf
or
pop
xchg
ret
push
cmpsb
mov
sbb
jge
lds
mov
mov
pop
pop
mov
sbb
pop
scas
pop
mov
fidivl
lcall
pop
add
adc
mov
ret
rorl
lcall
insl
dec
insb
lock
xor
scas
xchg
xor
mov
clc
add
stos
dec
dec
xchg
pop
jg
in
subps
out
mov
cmp
test
fwait
jmp
insb
sbb
imul
jnp
and
sub
and
mov
and
and
rcrb
xchg
cmpsb
xor
roll
mov
adc
int
loopne
xchg
lahf
out
idivl
jecxz
adc
mov
and
cltd
jl
adc
je
mov
inc
out
xor
lret
mov
std
js
nop
aad
aas
or
jl
shr
pop
in
xchg
adc
out
xor
and
xor
fcomp
repz
lock
mov
sar
inc
or
add
cwtl
dec
aaa
cmp
add
adc
testb
mov
inc
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
jmp
je
adc
cmp
aam
fs
adc
movlps
loop
loope,pn
jmp
cmp
sbb
and
inc
enter
xchg
icebp
clc
push
mov
and
int3
cmpsl
or
or
mov
sub
lock
clc
mov
mov
inc
add
mov
dec
ja
xor
xor
movsl
dec
das
ja
pop
jnp
adc
iret
cmpsb
data16
sbb
pop
ds
cld
mov
cmpsl
cs
xchg
mov
sahf
loop
pop
cltd
mov
xchg
jo
lock
mov
mov
add
ret
sub
fadd
aaa
cld
dec
rcrb
pop
loopne
mov
insl
inc
jg
sbb
pop
imul
imul
je
leave
xor
pop
mov
popf
push
sbb
fwait
mov
rep
adc
adcl
aad
lods
rol
cmpb
in
dec
or
jno
aas
in
dec
sti
xchg
fcmovu
lret
in
mov
and
adc
push
lods
adc
les
inc
dec
cs
mov
sbb
sahf
aas
mov
mov
pop
mov
sub
sub
xchg
scas
inc
cwtl
popf
js
cmp
and
cmpsb
sbb
and
mov
lahf
jle
out
dec
xchg
fidivrl
mov
cmp
out
imul
pop
fsubrs
pop
and
mov
mov
and
scas
aam
adc
int
mov
dec
push
lea
scas
lods
test
aas
fbld
mov
icebp
mov
rorl
loopne
les
std
sar
sub
fldcw
xlat
ret
mov
sahf
ret
cmc
add
mov
movsl
and
jbe
mov
arpl
movsl
das
xchg
movb
and
bound
in
ret
xor
arpl
sub
mov
adc
cmp
lahf
mov
stos
xchg
push
push
stc
movsb
and
inc
push
in
push
fs
pop
fld
icebp
fisttpl
dec
ljmp
ss
mov
mov
and
nop
inc
mov
jnp
jle
mov
jecxz
lret
aas
cmp
cld
dec
cmp
movsl
pop
dec
imul
stc
popl
pop
lahf
adc
arpl
jne
popa
data16
push
faddp
shrl
xchg
call
adc
mov
dec
inc
test
push
jne
inc
dec
mov
mov
rcll
aad
xchg
sub
mov
jg
xchg
enter
iret
je
push
test
sbbl
outsl
add
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jmp
in
xchg
xchg
or
or
mov
imul
adc
movlps
xchg
outsb
loop
movsb
test
pop
mov
jae
mov
adc
leave
sahf
lods
insl
dec
sbb
xchg
inc
andb
mov
xor
add
mov
mov
mov
xchg
imul
aam
fsubrp
xor
cmpsb
insb
rcl
add
push
lock
arpl
mov
inc
mov
cmpsb
loopne
es
sub
xchg
sub
rcrl
dec
aam
fdivl
outsb
gs
enter
data16
mov
xor
gs
jmp
hlt
sbb
pop
or
mov
sahf
outsb
shlb
sbb
icebp
test
add
or
mov
out
jo
add
shll
aaa
inc
test
movb
mov
push
enter
out
mov
or
xchg
push
cmp
dec
push
pop
push
jae
stc
adc
and
xchg
xlat
lret
mov
loope
mov
popa
jge
jns
lret
stos
cmpsl
repnz
mov
pop
rol
call
dec
cli
aam
or
cmp
ret
popf
cwtl
fdiv
loope
arpl
sub
pop
cmp
dec
ljmp
das
dec
bound
sarb
popf
cmpsb
mov
push
cmp
movsl
movsb
adc
push
sub
jge
inc
minps
push
data16
jle
les
inc
dec
add
jmp
les
inc
outsb
adc
mov
mov
popf
xchg
mov
xor
out
add
cmpsb
fucomip
lfs
lods
dec
push
jl
fildll
mov
adc
js
mov
es
bound
inc
into
or
bnd
subl
out
xchg
xchg
mov
lods
sarb
mov
jp
xchg
scas
add
std
xor
and
lcall
adc
andb
sarb
cltd
pop
cmp
push
sbb
leave
jge
hlt
aaa
inc
imul
test
jl
leave
movsb
and
pop
bound
fstl
popf
call
push
pop
push
and
fwait
imul
addr16
ret
mov
testl
pop
imul
pop
push
mov
mov
aam
mov
pop
scas
dec
aam
add
jge
sti
xor
add
decl
inc
adc
pop
arpl
shrb
mov
ret
test
add
mov
mov
mov
mov
xor
xor
shl
shr
or
xor
xor
jmp
pop
sbb
sbb
and
lret
xor
js
mov
mov
iret
movlps
fsubrs
loop
xchg
fsubrs
lret
je
out
adc
imul
in
imul
dec
movsl
and
mov
pop
fbld
dec
jnp
pop
mov
mov
out
push
cwtl
inc
ss
in
sti
inc
scas
pop
in
inc
add
dec
xor
mov
std
les
jne
cmp
add
add
jp
jns
cmc
lcall
add
int
sbbb
adc
inc
xchg
xchg
mov
shrb
push
adcl
je
sub
dec
in
or
test
in
stos
in
inc
sbb
pop
dec
loope
fs
ret
push
sbb
mov
shr
cmc
out
adc
cwtl
insl
adc
push
mov
loopne
loopne
pop
push
in
lret
clc
or
fsts
dec
pop
out
and
sahf
cmp
sbb
xor
cmp
add
inc
cmpsb
fiadds
aam
sbb
pop
push
roll
sbb
sar
push
xchg
shrl
loopne
nop
adc
lea
int3
in
pushf
inc
pop
cli
sbb
xchg
cmp
inc
loopne
pop
sub
call
leave
stos
outsb
cmp
add
fcmovnu
lods
fwait
ljmp
jge
mov
pop
cmpsb
leave
mov
adc
push
jno
ret
cmp
addr16
lahf
add
imul
mov
cmp
or
push
std
cmc
pusha
cs
das
or
enter
and
add
mov
dec
bound
sub
jle
xchg
call
fdivrs
add
pop
mov
add
xchg
sub
dec
mov
jl
fnstenv
out
aam
loopne
in
mov
xor
cmpsl
inc
imul
movsb
roll
imulb
lahf
dec
dec
xor
stos
cltd
push
pushf
nop
push
arpl
jae
lods
aaa
mov
cld
xchg
mov
cmp
jp
push
mov
sar
lcall
mov
push
test
gs
sbb
sbbl
pop
stos
cltd
out
mov
cmp
jns
mov
mov
cmp
mov
cmp
xor
movsl
mov
cmp
xor
inc
in
arpl
sub
es
mov
pop
es
leave
pop
jle
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
movl
push
cmpl
mov
movl
not
jmp
mov
je
push
pushl
push
push
call
sbb
sub
adc
add
sub
add
cmpl
mov
mov
not
movl
jmp
movzbl
movl
jg
push
call
andl
xor
xor
andl
mov
mov
sbb
dec
push
movl
sub
movl
xor
movl
dec
mov
xor
add
xor
mov
xor
xorl
div
cmpl
movl
mov
movl
jmp
movl
movl
jl
pushl
call
orl
or
not
sbb
imul
mov
xor
mov
add
mov
and
mov
xor
adcl
jmp
adc
sbb
xchg
pop
pop
cmp
jle
rclb
adc
daa
bound
mov
bound
inc
imul
adc
jecxz
push
je
movsl
bound
ss
pop
dec
pop
out
dec
and
add
stos
push
sub
mov
mov
aad
jle
adc
dec
dec
outsl
inc
out
jmp
aad
push
ljmp
rcll
mov
or
inc
cmp
cmc
pop
in
dec
inc
sub
add
imul
scas
inc
ljmp
push
subl
mov
filds
xchg
mov
jmp
test
idivl
enter
adc
xor
data16
int3
loopne
add
fxch
sbb
je
inc
repz
lods
fsubp
lds
fstp
push
and
out
clc
inc
sbb
mov
rdmsr
int3
cs
xor
scas
test
and
sbb
mov
aaa
mov
pop
fcomi
popf
jne
pop
mov
or
insb
add
or
test
ja
and
xchg
mov
sahf
mov
dec
or
xlat
repnz
or
fcoms
or
aas
jbe
xchg
int
push
frstor
jo
add
cld
pushf
mov
jne
dec
jnp
and
clc
pop
push
pushf
out
imul
loope
mov
pop
movlps
add
in
push
xor
add
ds
or
ds
aad
int
xchg
pop
pop
popa
sub
lahf
lods
adc
mov
addl
adc
push
sub
fmuls
pop
orl
pop
rcll
leave
js
daa
test
dec
cli
pop
inc
popf
inc
push
xor
ret
xor
in
cwtl
lock
adc
fsubrs
and
mov
lret
inc
dec
mov
cmp
jecxz
mov
mov
pop
dec
add
out
adc
ss
jmp
gs
ljmp
push
lds
popf
mov
push
or
pusha
jbe
dec
aaa
fcmovu
mov
pop
xchg
es
pusha
jge
mov
sbb
les
cmp
push
inc
movsb
fstps
inc
hlt
dec
jp
sub
outsl
jmp
or
ja
cld
js
int3
jne
stos
mov
pop
sbb
and
sbb
xor
fidivrs
lcall
jne
sbb
call
adc
inc
xchg
sub
mov
pop
pop
xor
lods
cmc
adc
sbb
bnd
repz
outsl
xchg
push
jg
fnstcw
mov
mov
popa
cmp
jmp
or
push
es
mov
or
out
lret
jbe
xchg
test
xchg
xchg
popf
push
inc
test
das
sub
repnz
repz
rorb
idiv
cmc
arpl
test
pop
call
push
out
in
sbb
xchg
je
mov
inc
dec
pop
ss
mov
mov
add
aam
lock
push
sbb
out
dec
sbb
inc
or
xchg
xlat
testl
mov
adc
fcomip
insb
mov
xchg
sar
cli
fs
inc
xor
fs
js
shlb
insl
mov
iret
jle
cmp
cmp
jg
test
out
pop
inc
xchg
xor
out
test
add
add
adc
mov
movl
sub
movl
add
movl
mov
adc
mov
add
mov
or
xor
xor
imul
mov
and
sub
xor
mov
mov
mov
sub
sub
movl
movl
sub
movl
movzwl
or
movl
mov
sbb
imul
mov
cmpl
mov
movl
jmp
movl
movl
jl
push
push
call
sbb
addl
xor
xor
xor
add
mov
dec
adc
sub
imul
imul
mov
adcl
and
or
not
mov
xor
mov
adcl
mov
sbbl
lea
mov
sub
movl
and
movl
and
movl
cmpl
movzwl
mov
movl
jmp
mov
mov
jne
pushl
pushl
push
call
sbbl
and
sbbl
subl
sub
mov
xor
mov
or
add
jmp
adc
mov
and
xchg
js
dec
rep
das
into
adc
adc
inc
jle
in
out
xchg
mov
loopne
sahf
push
lcall
js
lret
in
popf
xchg
popa
add
push
int3
ret
rclb
idiv
fistpll
dec
jno
sbb
xor
mov
inc
jns
xor
fwait
and
jnp
add
mov
xchg
inc
inc
mov
leave
xchg
push
adc
aaa
mov
mov
aad
push
and
call
fwait
sahf
int3
xchg
cmpsb
lea
sbb
fs
pop
cmp
test
inc
mov
mov
rorl
leave
das
mov
cmp
and
mov
outsl
or
jnp
adc
pop
inc
inc
loopne
sub
jno
inc
lret
xchg
movsb
lret
fstpl
outsb
xor
xchg
jecxz
fs
out
stc
fmull
pushf
xchg
xchg
es
rcll
jb
out
mov
in
mov
or
inc
mov
iret
mov
mov
jg
xor
mov
jg
pushf
loope
jae
cld
mov
adc
aas
pop
add
enter
pop
sub
incb
out
dec
loope
mov
fs
bound
movsl
movsl
add
insb
cwtl
inc
adc
mov
mov
test
stc
mov
cmp
lds
imul
inc
call
std
lcall
lret
inc
adc
je
sub
pop
pop
mov
movsb
into
cmp
jno
in
out
adcb
adcb
sbb
cs
rep
adc
and
xchg
mov
jl
mov
mov
ss
jnp
cmpsl
clc
mov
cmp
push
aam
sbb
lods
fcoml
xchg
fs
insl
xchg
gs
jmp
and
out
mov
or
xlat
iret
lods
stc
mov
xchg
jmp
push
mov
and
xor
sub
neg
fucomp
les
sbb
or
loopne
sub
fstps
negl
pop
dec
xchg
movsb
lods
shl
xchg
lcall
mov
and
mov
cli
test
rcll
push
push
cmp
int
dec
and
inc
xlat
push
ret
dec
dec
xchg
pop
lds
push
xor
nop
xchg
movsl
call
test
shrl
push
jno
adc
xor
mov
gs
sub
jmp
jp
sbb
imul
lahf
lcall
xor
lahf
sub
jnp
pop
subb
je
pop
lahf
pop
mov
dec
or
pop
jnp
ret
inc
lret
cmp
insl
add
ds
pop
lock
jmp
add
mov
xchg
jmp
mov
cmp
pop
stos
jecxz
xor
leave
cmpsl
inc
mov
mov
xchg
sbb
lods
stos
sarb
imul
pop
icebp
out
sahf
in
cmpsl
pop
cmpsl
mov
add
and
andb
jno
jb
lea
xchg
inc
std
and
mov
jge
stc
cmp
adc
ret
pop
aam
push
xchg
sbb
lret
insl
xor
scas
inc
mov
into
out
jecxz
lcall
outsl
jmp
add
xor
mov
arpl
and
fwait
push
decl
roll
add
adc
xor
cmpl
not
mov
not
movl
jmp
movl
movl
jae
push
push
call
or
or
adc
notl
adc
xor
mov
or
movl
movl
movl
cmpl
mov
movzbl
movl
movl
jmp
mov
jg
pushl
push
push
pushl
push
push
push
call
adc
xor
mov
and
mov
dec
sub
and
mov
sub
add
xorl
mov
sbbl
sub
cmpl
movl
mov
mov
jmp
movl
jne
pushl
call
xor
or
add
mov
xor
mov
mov
sbb
and
xorl
mov
xorl
lea
mov
xor
mov
or
cmpl
movl
mov
mov
jmp
mov
je
push
pushl
call
and
andl
adc
mov
or
not
sbb
sub
mov
cmpl
mov
mov
mov
mov
jmp
movl
mov
jae
push
pushl
call
mov
adc
mov
xor
movl
movzwl
xor
and
orl
movl
and
movl
cmpl
mov
mov
jmp
movl
jb
push
push
push
call
adc
adc
add
or
mov
add
mov
or
adc
mov
add
add
movl
imul
mov
imul
or
xor
mov
div
or
sub
mov
cmpl
movzbl
not
jmp
mov
jb
pushl
pushl
push
call
xor
or
and
mov
inc
sbb
add
xor
add
mov
and
xor
mov
mov
and
movl
add
movl
movzbl
or
movl
movzbl
or
mov
add
mov
subl
xor
xorl
div
or
imul
add
cmpl
mov
mov
movl
jmp
movl
mov
jbe
push
push
pushl
push
pushl
call
sbb
addl
add
add
adcl
adcl
add
mov
xor
cmpl
mov
mov
movl
mov
jmp
mov
movl
je
pushl
pushl
call
movzwl
xor
movl
xorl
andl
movl
add
sbbl
xor
jmp
xchg
fldenv
push
pop
xchg
pop
outsb
bound
mov
mov
adc
xchg
adc
jl
jbe
in
sub
out
ja
jae
incl
ret
lds
faddl
cmp
loope
filds
dec
dec
cli
mov
les
mov
add
sbb
daa
into
pop
xchg
lret
cmpsl
test
pusha
xor
cli
in
adc
sbb
repz
inc
add
out
data16
test
and
xchg
pop
aas
les
xor
bsr
add
push
int
and
cmc
aas
rcl
aaa
mov
pushf
sub
xor
add
addb
in
aad
add
dec
mov
out
jmp
pop
test
jp
pop
push
xchg
outsb
mov
sti
add
stos
int
and
mov
sbb
lahf
popa
push
cwtl
in
inc
dec
mov
mov
pushf
cwtl
pusha
add
adc
and
push
xor
shll
in
int
xor
sbb
stos
iret
adc
sub
ja
lods
js
aam
sahf
lret
ficompl
jmp
dec
roll
out
aam
jb
mov
mov
sub
sbb
ret
enter
mov
adc
dec
mov
push
aad
pop
hlt
imul
push
xchg
shrb
and
pop
std
fsts
subl
cwtl
icebp
mov
cs
es
pop
xchg
mov
cmpl
xlat
daa
or
test
sti
in
test
nop
ret
mov
in
fdivrl
arpl
adc
imul
sarb
movsb
inc
inc
jo
add
and
push
add
sub
and
lds
jle
sbb
wrmsr
std
das
and
enter
mov
xchg
clc
inc
andl
test
pop
pop
mov
xor
imul
mov
xor
out
adc
sarb
mov
adc
cld
sbb
adc
int3
xchg
and
cltd
lahf
jo
fwait
lods
jmp
int
ds
xor
je
sbb
jl
js
js
or
stos
jb
or
add
xor
mov
jae
xchg
out
mov
inc
hlt
cmp
outsl
xor
sarb
and
xchg
mov
xor
xor
cli
mov
push
and
adc
mov
pop
jne
xchg
add
imul
popf
push
add
cwtl
and
mov
nop
and
pop
jg
popa
addl
add
mov
leave
idivl
adc
xchg
icebp
mov
or
push
fistpl
sub
sub
add
or
xchg
pop
adc
or
adc
andb
mov
mov
loop
mov
mov
scas
mov
adc
mov
cmp
scas
mov
push
xchg
mov
pusha
mov
in
stc
sub
gs
shrb
divl
and
dec
in
clc
pop
xor
push
xlat
mov
or
int
ljmp
or
pmulhuw
add
or
adc
daa
fbstp
scas
mov
sti
out
subl
jmp
scas
ret
rorl
add
fcomps
mov
scas
add
subl
xor
mov
adc
movl
movl
movl
mov
and
mov
addl
sub
dec
shr
sub
mov
imul
cmpl
movl
mov
mov
jmp
mov
jne
push
call
orl
adcl
movl
xorl
adcl
addl
mov
addl
and
cmpl
movl
movl
jmp
movl
jl
push
pushl
push
push
push
push
pushl
pushl
push
push
pushl
call
xorl
sbb
andl
sub
andl
orl
xor
or
adc
mov
andl
sub
mov
movl
cmpl
mov
mov
movl
not
jmp
mov
jbe
push
call
dec
xor
orl
add
mov
mov
sub
adc
adcl
movl
mov
cmpl
mov
movl
movl
jmp
movl
mov
jae
push
push
pushl
push
call
subl
mov
adc
mov
movzwl
or
negl
and
adc
and
jmp
insb
cmp
push
daa
aaa
mov
repz
pusha
mov
adc
add
sbb
enter
push
xchg
or
dec
xchg
inc
das
mov
outsb
jb
mov
add
fistl
insb
test
pusha
or
pop
adc
xorl
adc
mov
hlt
xchg
add
pop
push
or
add
ret
jns
lock
cmp
into
lahf
mov
inc
sbb
mov
pop
rclb
xchg
dec
notl
xor
stos
out
jno
movsl
je
xor
ljmp
pop
jecxz
add
mov
das
pop
push
pop
movsb
xor
mov
push
mov
or
or
dec
std
jg
in
xor
cmpsl
xor
repnz
int3
ds
inc
lahf
jbe
dec
adc
cmp
sarl
mov
dec
icebp
xorb
scas
inc
add
push
xor
cs
cmp
mov
xor
cmpsl
inc
dec
cmp
into
lds
imul
shll
jbe
es
mov
xchg
jp
testl
loopw
sbb
fsubl
in
pushf
mov
pop
cmpsl
int
lahf
loop
jo
sub
cmp
dec
int3
pop
mov
mov
iret
cmp
push
scas
stos
rorl
mov
test
xor
in
and
mov
insl
dec
cmp
mov
bound
sbb
dec
mov
gs
sub
sub
sahf
inc
jl
rorb
inc
sub
mov
movsb
sbb
pop
fpatan
sbb
es
sub
sbb
inc
iret
fadds
inc
ficoms
push
cli
mov
pop
outsb
movsl
push
add
gs
cmp
and
aad
sub
out
std
add
xchg
mov
fiadds
xor
jns
arpl
arpl
mov
fadds
mov
pop
mov
std
clc
jmp
fistl
sub
pop
sbb
mov
cmp
jp
and
jnp
pop
mov
push
dec
dec
xor
icebp
add
pop
rol
xchg
std
sti
cmp
and
sub
lret
test
cmp
jb
mov
push
push
jo
jmp
fildl
leave
ss
pushl
xor
aaa
std
dec
mov
sub
push
and
sub
push
icebp
std
fstl
insb
mov
testb
das
or
jmp
fcmovnb
mov
insb
jno
movsl
mov
xchg
cmpsl
imul
add
dec
push
xchg
push
xchg
out
jp
popf
xchg
in
je
xor
movsl
das
inc
es
dec
inc
mov
xchg
mov
loopne
bswap
inc
and
xor
sbb
hlt
imul
mov
rcl
popa
inc
pop
sti
in
fsts
jb
add
adc
push
inc
dec
mov
or
mov
popf
les
xchg
jne
ret
outsl
in
les
xor
imul
outsl
subb
push
or
xor
xchg
and
mov
pop
mov
cmp
sub
xor
sbb
dec
mov
je
mov
mov
stc
mov
fucomip
iret
fnsave
in
test
push
fistpl
test
sar
jl
xchg
xor
xchg
in
fistpl
test
adc
mov
ja
out
scas
or
inc
mov
or
xor
sub
mov
cmpl
notl
mov
jmp
movl
mov
jne
push
pushl
push
push
call
movzbl
adc
mov
xor
mov
and
subl
adc
add
movl
or
jmp
xchg
pop
dec
or
cltd
push
pop
jecxz
mov
mov
adc
inc
xor
sbbl
in
pop
arpl
es
mov
adc
pop
inc
fs
clc
fs
gs
jbe
out
loopne
inc
jnp
mov
push
stos
mov
jne
aam
data16
xchg
cmp
imul
pop
cmp
cmpsl
adcb
sub
adc
and
cmp
jo
ret
imull
or
sahf
and
inc
call
aaa
mov
enter
nop
add
mov
mov
cmp
xchg
fistpl
inc
je
xorb
cmp
or
and
adc
push
inc
stos
mov
fists
mov
push
test
rclb
or
out
inc
pop
push
mov
sbb
lret
push
into
push
mov
ss
dec
jge
adc
sbb
aaa
cwtl
enter
or
mov
cmp
aad
lods
dec
or
dec
lods
push
adc
dec
mov
je
in
nop
xor
xchg
xchg
insl
sbb
or
ja
sar
out
xor
pop
push
push
xchg
and
shrl
cltd
push
pop
or
ror
xor
add
lds
std
movsl
and
leave
add
and
cmpsl
inc
fwait
xchg
mov
or
test
inc
adc
int3
xchg
mov
lds
fwait
inc
xchg
mov
rolb
or
or
stos
mov
and
fiadds
xor
mov
test
adc
xchg
xchg
xchg
movb
shll
push
and
ficompl
mov
fisubrl
mov
mov
xor
inc
flds
jg
in
and
call
and
jne
inc
sbb
mov
cmp
cmp
mov
pop
gs
and
cld
pop
rcrb
sbb
fisubrs
jns
mov
call
aad
push
mov
pop
loopne
jecxz
dec
mov
scas
test
jo
jo
push
scas
js
out
shrl
aaa
mov
pusha
movsl
cmc
leave
out
loop
or
repnz
push
ss
xor
aaa
push
dec
icebp
xchg
aas
jge
jno
dec
mov
js
mov
out
pop
cmpsb
inc
mov
mov
and
jmp
push
out
inc
adc
mov
aaa
add
jle
cmp
popa
das
ret
adc
mov
js
or
xchg
pop
int3
cli
call
inc
mov
mov
push
in
imul
add
fsubs
stc
clc
stos
xchg
xchg
add
jae
les
psubb
negl
loope
cmpsl
bound
push
imul
or
lods
sub
je
jp
adc
mov
jbe
mov
js
imul
in
sbb
sub
pop
mov
adc
pop
fimuls
cmc
pop
and
push
popf
cmpsl
xchg
mov
pop
clc
and
mov
xor
pop
mov
jmp
icebp
test
push
mov
stos
jo
sahf
sbb
push
fidivrl
insb
inc
cwtl
xor
cld
xchg
pop
mov
sbb
out
repnz
xchg
mov
iret
xlat
movsb
arpl
push
and
call
test
pusha
jp
add
test
pushl
bound
add
add
jle
add
inc
test
insb
add
sbbl
movl
mov
mov
sub
xor
movl
or
movl
movl
cmpl
mov
movl
mov
movzbl
jmp
mov
jb
push
call
sub
adc
and
add
movzwl
and
mov
mov
add
mov
sub
cmpl
movl
mov
jmp
mov
jne
push
pushl
call
sbb
mov
add
and
or
and
andl
mov
mov
add
mov
imul
cmpl
mov
mov
mov
mov
jmp
movl
movl
jbe
push
push
push
push
pushl
call
sub
dec
mov
sub
or
adc
orl
add
imul
mov
or
dec
mov
lea
adcl
push
call
add
mov
add
mov
imul
add
and
mov
mov
xor
sub
add
xor
mov
andl
div
cmpl
notl
movl
movl
jmp
movl
movl
ja
push
push
pushl
pushl
call
xor
xor
and
mov
or
sub
mov
or
mov
inc
xor
xor
add
and
mov
movl
mov
and
mov
movl
and
movl
addl
movl
cmpl
mov
mov
mov
jmp
mov
jg
pushl
call
mov
adc
sbb
mov
adc
or
movl
xor
movl
andl
movl
orl
movl
xorl
movl
sub
movl
movl
movl
sbb
movl
mov
mov
mov
cmpl
mov
mov
jmp
movl
ja
pushl
push
push
call
or
sbb
adc
movl
cmpl
mov
movl
mov
jmp
mov
ja
push
push
pushl
call
and
and
incl
mov
and
not
and
mov
adc
mov
cmpl
notl
mov
movl
jmp
movl
jbe
push
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
and
xor
sub
sub
cmpl
mov
movzbl
mov
jmp
movl
jg
push
pushl
push
call
add
mov
xor
add
sub
or
xor
add
mov
sub
or
notl
sub
adc
xor
imul
mov
sbb
lea
mov
xorl
mov
neg
mov
mov
movl
xor
adc
add
or
mov
xor
lea
and
xor
add
sbb
mov
mov
cmpl
movl
mov
jmp
movl
movl
je
push
push
push
call
subl
sub
adc
sub
or
sbb
sub
movl
add
mov
cmpl
movl
mov
mov
not
jmp
mov
jb
push
call
xorl
sbb
add
add
xor
add
movl
sub
movl
adc
movl
movl
cmpl
movl
movl
jmp
movl
not
jle
pushl
call
andl
sub
xor
mov
adc
or
and
mov
cmpl
not
movzwl
mov
jmp
movl
jl
pushl
pushl
call
add
neg
or
adc
adcl
sub
mov
and
mov
xor
xor
adcl
mov
adcl
call
cmpl
mov
mov
movl
jmp
movl
movl
ja
push
call
adcl
xor
xor
or
and
or
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
sbb
adc
cli
sbb
xlat
lret
pop
lods
lods
adc
adc
adc
in
add
jge
fildl
pop
arpl
cmp
xchg
arpl
mov
jnp
add
arpl
xor
dec
xchg
inc
mov
mov
xchg
mov
jbe
dec
int3
and
loopne
inc
popa
add
mov
arpl
les
push
and
lock
or
jecxz
pop
sbb
jbe
pop
pop
les
sbb
test
xor
sub
pop
hlt
mov
ret
mov
xorb
lahf
sub
xor
jg
push
push
loopne
enter
loop
sbb
add
and
and
lods
and
fmuls
pop
inc
hlt
imul
neg
adc
sub
sub
cltd
or
test
cmp
mov
dec
push
push
pop
inc
rcrl
xor
lds
pop
ss
push
add
aad
or
xlat
pop
xor
sub
sbb
cld
sub
movsl
cmp
push
sahf
mov
mov
push
add
nop
nop
mov
cwtl
push
and
loope
mov
jp
call
enter
push
add
push
enter
xor
fwait
jp
shl
imul
pop
add
pop
rol
fcomp
inc
fsubrl
notb
int
sbb
add
jmp
loope
sbb
ss
cld
dec
sub
aas
push
cmpsb
xchg
pusha
cmp
dec
dec
inc
leave
inc
ss
mov
and
cli
inc
ja
out
dec
enter
out
cltd
rcrb
popa
popf
test
ds
jge
jno
repz
jne
aaa
push
xlat
gs
inc
lods
cmp
sti
cld
pop
sahf
outsl
jmp
mov
mov
pop
push
mov
popf
push
scas
inc
sub
cmc
fimuls
jae
jle
or
add
mov
or
sub
aad
xor
pop
sub
ficoms
roll
enter
cmpsl
xchg
add
fists
and
ficompl
mov
sbb
arpl
sbb
push
pop
adc
cltd
or
jne
and
sub
std
das
lock
scas
sub
adc
adc
repz
cmpsl
movsl
shll
shl
fstl
mov
cmpsl
cmp
addb
call
idiv
dec
ficoms
sarb
inc
in
fisubrl
in
cmp
scas
jmp
push
cmp
scas
outsl
stc
jg
mov
add
int
test
pop
pop
mov
jmp
push
sub
mov
leave
imull
enter
pop
iret
lret
dec
and
dec
daa
mov
mov
fisttps
mov
push
cmp
repz
sbb
mov
cld
dec
jg
ds
stc
cwtl
mov
std
in
outsl
cld
adc
sbbb
fsubrp
scas
lcall
and
cltd
out
loop
jp
dec
mov
loope
rcll
gs
iret
xor
jecxz
add
mov
pop
jmp
lahf
lret
mov
push
js
jmp
sbb
ljmp
ret
cmp
jle
cld
rol
pop
push
aad
jge
jg
test
and
data16
call
scas
ror
subb
loop
jne
not
fiadds
pop
push
cli
push
mov
call
je
mov
test
test
pushl
xor
jmp
or
mov
mov
mov
or
idivl
movsb
adc
adc
sti
ja
add
jl
mov
mov
fwait
and
sarl
enter
stos
inc
iret
fwait
leave
mov
xor
fimull
pop
fiaddl
cwtl
mov
xor
or
adc
mov
sbb
in
cmp
jbe
cltd
adc
mov
lahf
pop
bnd
sub
enter
add
fld
mov
add
mov
shrl
and
pushf
pop
lods
mov
leave
push
out
mov
mov
std
gs
push
jae
dec
addr16
mov
mov
cmp
mov
scas
lock
mov
cmp
xchg
mov
fisttps
or
int3
into
mov
dec
bnd
jmp
push
dec
jle
xor
mov
aam
stos
push
es
cmp
lock
repnz
loope
push
in
inc
xchg
or
ret
jae
adc
arpl
push
xor
movsl
fwait
mov
mov
movsl
lahf
test
mov
ss
or
loopne
jmp
ds
pop
add
repnz
dec
stc
call
jmp
fimull
or
std
jno
cs
ss
insb
xor
adc
lods
adc
push
loopnew,pn
popf
push
sbb
scas
ret
insl
out
jo
mov
lahf
loope
xor
pop
or
mov
in
push
ret
sbb
mov
mov
stos
rcrb
jae
mov
pop
test
add
gs
lods
xchg
jmp
out
xchg
loope
and
dec
or
push
push
jecxz
arpl
aad
int3
add
push
mov
imul
xor
jns
inc
dec
movswl
out
sbbb
xor
test
push
or
dec
xor
pop
cmp
sub
rcll
pop
shrl
in
rolb
pop
and
xor
mov
stos
xor
add
movsl
rcl
mov
sub
add
xor
test
hlt
cmpsb
test
jns
adc
testb
lea
jne
mov
mov
push
shr
ss
es
mov
push
repnz
push
xchg
mov
lds
in
mov
inc
cmpsl
adc
sbb
xchg
loop
imul
in
mov
mov
mov
int
daa
rcl
jmp
cli
outsb
loopnew
loope
call
lds
or
push
jns
frstor
and
jno
push
icebp
mov
dec
ljmp
mov
cmc
rorb
ja
daa
sbb
or
test
je
test
mov
dec
adc
adc
mov
mov
call
scas
decb
push
pop
mov
js
lods
sbb
int
jae
aas
mov
mov
inc
movsl
jno
fidivl
mov
lods
jecxz
xor
mov
sub
or
int
mov
dec
pop
pop
push
push
stos
sahf
xor
mov
add
push
and
lds
sarl
test
test
mov
jge
or
cmpsb
lds
push
mov
out
jmp
gs
inc
xorl
mov
inc
pop
cmpsl
cmp
cmp
insl
add
sbb
jo
mov
fsubr
mov
call
mov
mov
mov
mov
xor
jmp
movl
ds
mov
mov
stos
adc
adc
fwait
gs
fs
test
xchg
inc
dec
mov
jmp
jbe
ljmp
mov
xchg
insb
mov
pop
pop
insl
and
push
cli
mov
pxor
xor
mov
cld
mov
jbe
pop
add
push
jne
mov
add
mov
xor
pop
xor
fstpl
push
dec
xchg
mov
or
cmp
leave
fdivrs
fldcw
out
pop
inc
aam
pop
adc
lret
sti
sbb
mov
lahf
stos
mov
mov
or
aaa
in
push
fwait
imul
add
loop
add
stos
push
loop
stos
or
jp
insb
jbe
jmp
dec
dec
sub
popa
adc
and
cmc
inc
das
imul
js
or
mov
pop
dec
cmpsb
push
dec
jo
add
jp
dec
mov
inc
flds
mov
push
stos
xor
dec
pop
divb
or
xor
xorl
jge
imul
add
bound
jne
add
pop
or
insl
xor
int3
mov
dec
inc
push
jmp
dec
dec
dec
scas
orl
lret
pop
fisubrs
sub
inc
sbb
mov
stos
mov
aaa
mov
out
iret
cmp
popf
enter
or
xchg
rcr
xchg
inc
pop
dec
pop
stos
sub
fwait
jne
mov
xchg
xor
divb
cld
jl
push
push
add
dec
fcompl
pop
push
fmul
movsb
in
cltd
mov
ret
push
stos
cmp
mov
popa
jg,pn
rcl
cwtl
cltd
icebp
into
rorb
dec
jo
jmp
fildll
push
xchg
insb
dec
shr
ljmp
sahf
bound
ret
mov
movsl
mov
test
xchg
call
or
pop
iret
movsb
sbbb
test
lea
out
cwtl
sub
imul
pop
jmp
lods
mov
mov
push
xchg
icebp
pop
mov
or
inc
mov
mov
dec
fwait
mov
add
aad
inc
imul
ja
js
jg
cmpsb
ret
fisttpll
mov
out
or
rorl
fmul
jl
hlt
inc
int3
xor
push
cltd
hlt
outsl
pusha
push
sbb
push
push
and
jg
lds
cmpsl
js
outsl
cltd
pop
sub
lods
push
xchg
or
inc
mov
int
addl
scas
push
loopne
in
lods
clc
insl
mov
rolb
or
sete
sbb
jbe
lret
mov
ljmp
sub
jmp
call
pop
movsl
test
loop
data16
cwtl
cld
dec
xchg
adc
into
popa
je
dec
sub
pop
in
inc
sbb
in
fisubrs
fstpl
and
mov
xchg
sub
rcl
sbb
bnd
sub
xor
out
jbe
test
mov
ret
inc
out
shll
paddb
in
push
sub
mov
push
fstps
and
mov
fistl
mov
push
sub
pop
adc
inc
in
cmp
lods
mov
lahf
push
mov
push
mov
lock
push
sub
cld
in
cmpsb
ror
push
mov
adc
pop
sti
cwtl
lods
and
xor
mov
cmc
mov
mov
pusha
dec
jne
xchg
jle
ret
dec
cmp
add
adc
xchg
aad
inc
add
jae
neg
mov
pushf
jmp
jge
jmp
cmp
mov
js
das
dec
mov
stos
adc
adc
push
rclb
inc
cwtl
sahf
add
addl
insl
in
push
test
stc
pop
push
aas
out
lock
push
and
xor
jl
mov
xabort
push
fldl
xor
loop
and
push
mov
cli
add
mov
std
adc
and
arpl
aad
mov
out
imul
fcompl
pop
sub
sbb
push
push
popa
je
outsl
xor
pop
ret
add
stc
je
jmp
loopne
pushf
jo
jno
shll
mov
add
inc
shll
jbe
fcoms
jl
bound
mov
jle
cmp
or
int
loope
loope
push
out
mov
addr16
xor
pop
jmp
arpl
dec
push
dec
sub
or
loop
pusha
std
loop
outsb
sbb
jae
ljmp
and
push
in
test
shl
inc
bound
roll
shl
imul
xor
sbb
repz
cmp
addr16
jle
scas
test
jp
fwait
aam
or
das
in
lods
dec
and
mov
pop
sbb
push
in
pop
cmp
xchg
push
lock
pop
cld
pop
mov
rolb
movsl
neg
repnz
arpl
clc
xchg
xor
pushf
xlat
mov
mov
mov
bound
push
es
jg
nop
leavew
cmc
test
dec
or
and
in
pop
sbbl
mov
jmp
push
and
leave
dec
dec
push
sarl
fcmovne
and
inc
shl
jne
dec
pop
arpl
pop
psrlw
notb
xchg
pop
les
push
pushf
jp
lcall
hlt
ja
xor
setl
lds
shrb
pop
adcb
mov
xor
cmp
add
push
and
sub
xlat
in
mov
aas
adc
hlt
les
sub
jl
es
sub
scas
jno
inc
dec
mov
out
test
mov
dec
iret
add
cs
cli
add
mov
pop
das
jge
xor
dec
jle
sub
mov
and
pop
imul
dec
lods
pop
sub
lea
decl
adc
outsl
into
sahf
mov
iret
rcrl
popf
gs
stos
das
outsl
inc
adc
call
mov
scas
xchg
out
movl
lret
sbb
stos
mov
cmpsb
sub
in
add
das
jmp
arpl
xchg
or
testl
or
mov
adcb
pop
push
int
int
jmp
xor
inc
dec
iret
push
cld
pop
push
mov
jmp
jae
mov
or
cltd
cmpsb
ds
mov
fnsave
popf
mov
aas
pop
add
inc
mov
sub
xor
test
xor
test
cmp
jl
mov
mov
das
lods
push
adc
sub
lods
adc
add
lea
or
test
insb
pop
sbb
das
xchg
push
cwtl
fwait
in
jnp
js
dec
xlat
pop
push
mov
mov
sbb
adc
aad
in
xlat
pop
mov
xor
adc
sub
xchg
inc
movb
jns
lock
pop
or
jnp
inc
insb
shrl
jg
cmp
and
cmp
outsl
pop
in
and
mov
icebp
std
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
jmp
inc
fwait
pop
dec
sbb
fwait
lds
xor
stos
adc
adc
mov
jle
and
fimull
mov
es
subps
js
fsubl
cli
dec
sahf
add
cmp
pop
imul
rorb
cli
lret
mov
add
jge
inc
mov
mov
dec
rcrl
mov
stos
scas
sub
inc
pop
fdivs
sbbb
mov
fwait
aam
fldcw
loop
pop
sub
cmp
mov
sub
push
xchg
mov
xor
pop
or
cmpsl
cmp
fistpll
lahf
adc
pop
add
ss
push
in
adc
and
mov
push
scas
inc
mov
imul
cmpb
clc
dec
int3
fcmovu
sbb
fwait
loop
aad
mov
mov
cltd
rcrl
rcrl
mov
cmpsb
jmp
and
insl
push
insb
in
fisttpll
ret
pop
shll
stos
and
mov
fcmovnbe
cs
or
jmp
push
out
jns
sub
fldcw
pusha
daa
enter
call
sub
cmpsl
jle
pop
mov
jb
nop
push
adc
enter
divb
icebp
push
push
movsb
ds
lahf
repz
jmp
nop
xchg
sbb
imul
das
mov
shll
scas
ljmp
push
adc
insb
sbbl
ja
xchg
adc
adc
enter
jb
inc
stos
jo
cld
clc
mov
ret
push
fs
cmp
or
inc
jecxz
inc
pop
push
cld
xchg
mov
jae
loope
xor
movsl
call
mov
mov
nop
popf
daa
pop
push
ret
std
xor
mov
in
cmp
jp
push
xor
idivl
fnstcw
jle
push
xor
sub
sub
and
stos
imul
mov
cmp
test
and
decb
adc
lock
or
xchg
repz
pop
pop
test
addl
xchg
in
mov
pop
loop
xor
std
dec
mov
xchg
jmp
and
fimuls
jnp
xchg
jae
adc
mov
jmp
push
mov
jp
dec
jle
in
and
add
aam
xchg
nop
dec
jle
jl
cmp
jns
sbb
mov
lock
mov
dec
xor
cmpsb
or
xlat
push
int3
mov
jae
lahf
int3
mov
pop
jp
nop
xchg
nop
movsb
push
sub
sbb
bound
pop
fsubl
jle
sbb
sbb
mov
sbb
push
mov
and
push
xchg
cli
push
jb
or
push
xchg
test
daa
mov
mov
sbb
sbb
or
inc
and
insb
jns
pop
mov
dec
stc
pop
sbb
mov
pop
ss
xchg
push
mov
xor
jge
fstps
mov
ret
mov
jae
add
jno
int3
jno
and
jno
fwait
incb
mov
push
les
test
jae
mov
mov
mov
les
imul
and
ret
cmpsl
hlt
sub
pusha
cmp
mov
sti
ret
or
adc
dec
mov
or
inc
imull
cmp
jne
or
scas
roll
mov
jmp
sahf
pop
pop
adc
lahf
sbb
mov
stos
adc
adc
gs
pop
mov
pop
push
lds
cmc
aas
insb
nop
out
sti
das
iret
and
or
movl
xchg
and
fadd
or
jg
dec
imul
mov
scas
call
iret
movsb
mov
int3
sub
jmp
and
jne
inc
cmp
cmp
hlt
mov
mov
mov
adc
ds
sbb
std
cwtl
or
or
popa
inc
sub
imul
in
aaa
mov
xchg
jno
fwait
adc
ror
repnz
add
lods
xor
shrb
mov
movsb
call
insb
xor
cltd
sub
test
xor
mov
push
fnstsw
push
inc
ret
out
cmp
xchg
aad
xor
sbbb
and
dec
sub
and
shlb
xor
sarb
scas
es
push
xchg
ds
sar
iret
mov
clc
pop
mov
imul
in
dec
es
jnp
mov
mov
cld
aam
xor
pushl
inc
std
jecxz
ficoms
xchg
movsl
arpl
sub
pop
fldcw
push
fmulp
sub
call
jne
out
movsb
sbb
push
shlb
outsl
in
icebp
in
call
adc
jge
iret
inc
insl
mov
push
stc
xor
xor
pushf
mov
push
inc
add
cmp
es
lock
xchg
pop
or
lahf
dec
or
out
aam
mov
out
jnp
test
xor
mov
mov
mov
mov
lret
aas
jae
dec
pop
out
sahf
adc
jg
adc
lock
sbb
cld
test
jp
mov
mov
cmc
inc
mov
sbb
lret
jl
adc
add
sub
mov
dec
cltd
inc
xor
stos
fildll
jbe
rorl
sub
outsl
jg
pushf
pusha
cmp
adc
lahf
mov
adc
pop
mov
cltd
repz
cmpsb
push
sub
insl
cmpsl
js
adc
aas
lods
pop
jo
repz
clc
xchg
loope
inc
mov
mov
cmp
inc
jns
int
addr16
dec
mov
cmp
cmp
test
or
mov
sbb
and
shrb
jge
cs
push
int
pop
mov
ja
pushf
xor
lahf
xor
arpl
je
sbb
leave
cmpsb
dec
inc
sti
addr16
xchg
cmpsb
inc
push
adc
sahf
inc
xchg
mov
sbbb
pop
rcrb
cltd
jg
mov
outsb
jmp
mov
outsb
add
hlt
pop
testb
pop
xor
push
cmpsb
jno
arpl
mov
add
pop
test
repnz
cli
push
mov
insb
fldt
xchg
loop
dec
mov
push
icebp
jge
lods
cmpsb
sbb
cmp
push
jnp
and
pop
orb
and
push
imul
es
sbb
lahf
nop
cld
cltd
mov
cmp
lcall
fnstcw
push
mov
and
xor
jnp
sahf
fsubl
imul
rcrl
adc
int
call
aam
roll
xchg
lods
or
aaa
lret
inc
movsl
lret
cltd
jne
xchg
cwtl
mov
and
in
aad
sbb
jbe
cmc
sbbl
stos
decl
lea
test
incl
lret
fmuls
fdivr
decl
mov
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
jmp
mov
sbb
lahf
cmp
push
push
adcb
xchg
out
pop
sbb
cmpsb
in
arpl
in
ret
out
lret
or
dec
xchg
pushf
and
idivb
jl
xchg
pop
pop
dec
les
hlt
jb
stc
pop
daa
push
pusha
jae
cmp
jbe
fiaddl
push
mov
add
mov
leave
test
xchg
dec
bound
ret
lahf
xor
or
sub
pop
stc
dec
pop
cmp
mov
into
cld
mov
inc
dec
or
aaa
cmc
fcoml
std
or
sbb
sub
add
xchg
jae
cs
fisttpl
in
ret
mov
jb
jnp
inc
jmp
mov
movsl
sti
sub
repz
das
inc
inc
xor
popa
ss
or
inc
pop
dec
fstl
iret
sub
xlat
test
int
cmp
cld
cmp
dec
outsl
lcall
push
adc
pushf
push
xchg
mov
or
mov
mov
adc
adc
das
xchg
loope,pt
icebp
jnp
out
sbb
sbb
movl
adc
sub
lods
mov
sbbl
jl
aad
ja
mov
ss
test
push
inc
jl
push
add
cltd
shl
inc
outsb
and
popf
mov
mov
cmp
push
stos
mov
lret
pop
lret
in
cld
pop
pop
test
in
aam
dec
scas
movsl
inc
ja
rcr
test
adc
or
cmp
lcall
push
or
lods
pop
xchg
adcl
xchg
test
or
loopne,pn
push
inc
int3
movsb
mov
push
add
ja
rcl
push
push
dec
or
inc
adcb
cmpsb
fcompl
inc
je
movsl
daa
mov
fs
xchg
jmp
xchg
cli
jge
stos
cmp
jae
push
dec
xchg
cmpsb
xor
shr
xlat
aam
aam
lahf
pop
add
push
inc
movsl
int3
stos
stc
xor
clc
pop
outsl
shrb
and
adc
adc
inc
fiadds
adcb
push
jle
cmpsl
pop
adc
sbbl
cld
orb
adc
sbb
mov
pop
mov
push
test
outsb
xor
push
sub
aad
in
fwait
sub
sbb
mov
js
lahf
add
sbb
and
shrl
fdivrl
rcll
je
xchg
dec
call
pusha
sub
addl
insb
inc
mov
lret
inc
in
rcl
cs
jg
mov
mov
jge
aaa
mov
jp
cmp
testb
and
adc
ljmp
lret
stos
sub
mov
insl
inc
xchg
mov
sub
push
push
sub
int3
fnstsw
add
xchg
pop
or
push
testb
push
movsl
test
xchg
mov
je
cmp
xchg
loopne
sub
jo
mul
dec
imul
sub
mov
int
cmpsb
jmp
jp
mov
xchg
push
repnz
hlt
flds
and
jne
ret
and
adc
sbb
push
xor
cmpxchg8b
xchg
cmp
xor
mov
cltd
sub
repz
jno
aaa
arpl
jne
lds
arpl
stos
cmpsl
in
pushf
sub
daa
js
roll
lods
sarb
and
xchg
es
rcrb
lcall
pop
dec
inc
sbb
sbb
test
mov
lea
icebp
sahf
lcall
rorl
mov
mov
jmp
stos
cwtl
dec
pop
ds
lcall
xchg
push
js
adc
or
aaa
das
outsl
cwtl
adc
pushl
xchg
adc
mov
pop
inc
mov
lods
cli
xchg
adc
frstor
mov
ret
leave
dec
std
in
imul
mov
adc
add
mov
movsb
add
xchg
repnz
fdivp
test
cmpl
bnd
and
xchg
push
adc
movsl
repz
imul
out
cmp
jae
bnd
sub
mov
pop
pusha
lods
mov
lods
pop
and
pop
and
mov
mov
gs
addb
push
imul
hlt
imul
into
sbb
stos
xchg
sbb
jl
mov
mov
cmpsl
push
iret
roll
pop
or
jne
push
pushf
sbb
dec
adc
mull
fnstcw
rcpps
ss
stos
or
sub
in
mov
mov
out
mov
test
xchg
cmpsl
jl
lret
cli
lret
mov
jo
or
decl
mov
sub
cmpsl
test
cmp
inc
or
pop
pushl
and
fwait
jl
sbb
iret
jbe
fucomi
pop
into
inc
push
sbb
sbb
xchg
jge
jl
and
xor
stos
in
jno
pop
push
fbstp
sbb
lock
cmp
jle
adc
aam
or
test
dec
dec
and
push
add
out
adc
js
icebp
or
sbb
pop
repz
dec
roll
in
es
pop
test
sbb
lds
inc
popf
dec
mov
push
fstpt
bound
cmp
gs
out
push
cmp
hlt
sarl
mov
add
clc
fmull
jecxz
rcr
cmp
sar
adcb
cmp
iret
or
pop
pop
push
cmp
int
enter
stos
cmp
mov
push
or
out
xor
or
dec
emms
lock
clc
nop
mov
addr16
mov
or
pop
push
scas
mov
mov
lahf
sub
ss
xchg
dec
testb
sarb
pop
test
and
ret
xchg
inc
ret
sbb
push
fwait
loop
mov
into
ljmp
scas
mov
lcall
mov
aam
cmp
xchg
jp
mov
outsb
cmpsb
lods
xlat
fwait
push
adc
ret
fwait
movsb
ss
inc
sbb
leave
sbbb
pop
push
adc
add
push
jle
test
mov
in
out
ret
dec
dec
fs
jns
sbb
dec
adc
mov
cs
inc
adc
faddl
xchg
push
xchg
les
and
lds
mov
xor
or
in
cmpl
push
jecxz
add
mov
cmp
mov
movsl
incb
mov
cld
pop
cmp
sbb
aaa
cmpb
fcomi
pop
jle
sub
imulb
xor
lret
cwtl
mov
and
inc
xorb
xchg
cmpsb
xchg
sub
insb
shlb
jl
and
mov
stc
push
jge
cmc
add
popa
int3
mov
std
adc
lds
das
das
mov
sarb
cmpl
mov
movsl
pushf
or
jns
sbb
or
in
and
lock
stos
pop
pop
mov
sahf
mov
stos
mov
dec
jmp
scas
in
ficoml
in
sahf
and
xchg
decl
jmp
mov
clc
mov
sub
jle
mov
adc
cld
and
mov
pop
or
cwtl
inc
pop
dec
pushf
inc
jmp
xor
adc
loopne
adc
dec
inc
iret
xor
jg
xchg
mov
mov
pop
mov
xchg
pop
popa
cwtl
aas
adc
jno
xor
cmc
sbb
mov
push
mov
xchg
xchg
lret
xor
clc
push
shll
lret
faddl
pop
mov
dec
ds
jl
stos
pop
addl
insb
scas
cld
js
mov
push
jnp
clc
jmp
fsubs
adc
push
scas
inc
movsl
add
call
cmp
out
hlt
test
and
push
mov
lcall
ret
xchg
fidivrs
pop
push
push
cmp
push
pop
nop
scas
dec
and
lock
sub
push
xchg
cmpsl
mov
mov
add
icebp
adc
sbb
test
loope
lds
pop
mov
sub
push
int3
jae
sbb
lods
jle
pusha
shr
push
data16
sbb
repz
xor
xchg
add
add
sub
ja
or
scas
adc
movsb
inc
shlb
lahf
movsl
adc
jns
inc
pop
call
mov
cmc
aas
dec
fstpt
sub
into
rcl
mov
ljmp
test
sub
sti
or
or
arpl
cltd
inc
add
sbb
push
inc
mov
mov
inc
test
dec
dec
adc
push
push
cmpsl
inc
lods
loope
jmp
sub
and
pusha
sbb
pop
mov
lret
nop
xor
loope
jp
xor
sub
mov
mov
lods
imul
arpl
ds
ljmp
push
out
nop
nop
aas
pop
mov
jle
out
cld
bnd
pop
out
xor
imul
cwtl
mov
fs
lcall
mov
mov
repz
cmpsb
out
mov
test
lods
ds
pop
cwtl
sarl
shrd
push
fidivrs
jne
add
into
int3
rclb
push
mov
push
and
das
cmp
or
cltd
pop
out
arpl
pop
call
not
div
mov
xchg
and
sbb
adc
push
inc
mov
lock
cmp
aas
mov
loopne
out
sbb
pop
add
inc
into
jbe
push
jg
push
xchg
jp
inc
movsb
insl
aaa
test
fsts
cs
jns
sub
adc
stos
xor
pop
insl
sbb
dec
mov
mov
mov
jge
cli
push
sub
subb
xchg
sub
xchg
push
idivb
sub
stos
push
repnz
int3
mov
adcl
xor
decb
mov
sub
bound
inc
adc
je
pop
or
push
jle
or
divl
rcrb
xchg
pop
pop
inc
out
ja
add
ss
inc
xchg
es
sahf
mov
xor
rcrl
inc
bound
movsl
jb
or
add
push
jle
je
lahf
xchg
cli
cmp
or
out
outsl
or
leave
mov
sub
mov
xchg
call
aas
int
push
cmp
std
dec
push
inc
xchg
and
stos
sbb
ja
aas
bound
movsb
pusha
rcrb
sbb
inc
push
xorb
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
icebp
sbbb
push
cmpsb
icebp
stos
cltd
pop
jbe
call
adc
adc
mov
das
mov
repnz
ret
lods
sar
adcb
xor
rcrb
sahf
adcl
jg
and
cwtl
fs
xchg
sub
out
sub
lods
push
and
outsl
movsb
sbb
rclb
sbb
lods
dec
push
movsl
aaa
jge
inc
testb
lock
xchg
clc
in
cld
jb
es
movsl
xor
rorb
cmp
xor
sbb
jns
or
jge
jecxz
pop
cli
nop
inc
daa
and
and
pop
ljmp
stc
push
cmp
mov
aam
jnp
pop
sbb
daa
inc
pop
das
xor
out
mov
mov
mov
imul
test
in
sub
nop
sbb
fdivrs
rclb
cli
or
imul
mov
inc
lds
dec
lods
aas
inc
gs
push
pop
cmp
xor
jl
lcall
mov
mov
arpl
push
pop
push
les
les
add
mov
call
scas
push
push
inc
iret
push
iret
mov
jmp
repz
mov
movsl
lock
xchg
test
xchg
frstor
in
cmp
aam
ret
mov
jnp
outsl
xchg
lds
sbb
fsubs
add
push
cmp
notb
std
jnp
jmp
inc
inc
jecxz
mov
test
outsl
in
fimuls
inc
mov
into
mov
xor
pop
adc
inc
shl
mov
in
shrb
jnp
mov
clc
add
jecxz
mov
mov
dec
adc
icebp
or
ret
orb
shl
leave
mov
aas
xor
lds
mov
push
cmpsb
lret
pushf
pop
or
scas
pushf
jae
out
push
or
xchg
xchg
cmc
stos
clc
inc
cmp
sbb
push
mov
pusha
pop
ljmp
ss
in
iret
loop
js
dec
or
and
dec
sub
jp
pop
push
pop
adc
push
xchg
xchg
mov
push
stos
add
pop
jg
jmp
jmp
hlt
test
js
jg
add
push
sub
lcall
xchg
ja
jecxz
add
insb
inc
out
ja
push
das
imul
or
imul
in
inc
in
mov
lea
xchg
cmpsb
nop
xor
pop
cmpsl
imul
or
inc
mov
arpl
lahf
inc
cs
jg
stc
xor
das
fidivrs
push
je
jnp
jns
test
adc
mov
sub
inc
jge
fiaddl
stos
outsl
fbstp
in
loop
cmp
or
fistl
ljmp
mov
mov
lret
fwait
dec
add
pop
out
pop
or
mov
fsubs
iret
fs
pop
inc
cld
mov
xchg
jl
cmpsb
clc
inc
rol
bound
clc
mov
outsb
shll
inc
mov
stos
scas
xchg
mov
insl
add
outsb
sbb
das
dec
inc
xor
cmpsl
out
aam
add
movsb
aas
push
addr16
cmpsl
xchg
jbe
imul
mov
pop
repnz
pop
add
pop
push
inc
scas
jle
adc
jg
or
sti
fisubs
rolb
mov
or
and
mov
arpl
xchg
clc
cmp
leave
aas
ror
test
jg
dec
xchg
andb
pop
inc
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
xor
xchg
aas
sbb
sub
jb
add
jg
adc
adc
mulb
fbstp
mov
dec
shrl
add
cmp
xchg
dec
jle
inc
inc
sbb
pop
xlat
push
lock
int3
cmp
test
hlt
test
xchg
dec
sub
flds
sub
xchg
mov
and
mov
mov
add
lret
push
jg
dec
lock
adc
icebp
pushl
pop
and
push
ret
inc
jo
fstpt
pop
out
adc
or
adc
int
mov
std
xchg
push
leave
and
xchg
sbb
xchg
cmp
inc
mov
xor
sbb
pop
cmp
pshufw
adc
lock
stos
xchg
popf
stos
cwtl
movsl
cmp
dec
xchg
imul
jb
push
lret
jo
fisubrl
call
pop
or
add
mov
adc
pushf
cltd
pop
pop
imul
xor
jge
daa
ljmp
shrb
xchg
imul
mov
jbe
icebp
loope
std
sti
cli
pop
in
push
dec
xchg
icebp
add
xchg
sbb
inc
test
adc
push
ja
popf
jge
dec
add
lods
inc
xor
cmp
mov
mov
push
pop
outsb
sbb
rep
inc
cmp
mov
rcl
or
movsl
das
adc
addr16
mov
sub
outsb
cltd
repnz
dec
jb
notl
gs
add
pop
lock
or
ret
sub
cmovns
sbb
xchg
lret
cltd
dec
insl
or
popf
out
add
gs
fwait
stos
push
add
mov
sub
loope
sti
jge
std
adc
rcr
imul
xchg
and
out
in
aam
pop
cmp
test
inc
fistpl
jb
sbb
icebp
xchg
jecxz
cwtl
std
aad
mov
push
clc
test
and
mov
leave
lahf
out
push
iret
push
iret
popa
fiadds
mov
int
mov
rol
xor
jnp
imul
mov
sbb
dec
andl
adc
repz
mov
movsl
inc
xor
mov
or
mov
mov
inc
test
jnp
mov
shlb
cmc
push
sarb
pop
iret
or
ss
dec
cmc
sbb
mov
repz
clc
adc
adc
es
jnp
mov
clc
mov
and
or
movsl
iret
ljmp
fwait
mov
inc
addr16
push
sbb
mov
cs
and
inc
fiadds
jmp
dec
insl
adc
out
mov
cltd
inc
jp
mov
xor
mov
push
xchg
insl
jle
out
push
cmp
mov
sub
pop
stos
adc
mov
sub
mov
mov
pop
sbb
movsb
stos
push
aas
insb
adc
int3
bound
imul
dec
into
es
mov
inc
jnp
shrl
push
inc
xor
das
mov
inc
xchg
mov
jbe
notb
mov
mov
lret
lods
lea
adc
and
xor
loop
fistps
lods
mov
jmp
sub
jp
add
cli
les
mov
and
nop
push
into
lret
mov
popf
fs
fildl
xchg
xchg
xchg
cmp
dec
mov
dec
loope
mov
xchg
pop
mov
cmp
fadds
jbe
cmp
xchg
test
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
jmp
adc
and
sbb
arpl
pop
jle,pn
pop
adc
adc
push
out
aaa
push
in
ja
xor
ret
push
mov
aaa
cmp
jecxz
jg
fildl
in
call
subb
dec
data16
or
push
mov
ja
mov
ret
sub
ffreep
int
loope
xchg
mov
sbb
cmp
int3
fisubrs
pmaddwd
or
roll
lret
jns
push
loop
jmp
pusha
xor
lret
mov
pop
adc
subl
iret
jo
pop
lods
out
iret
inc
dec
jne
outsl
stc
subb
push
cmp
dec
sub
outsl
sarw
mov
aaa
pusha
adc
stc
test
ljmp
lock
sbb
dec
es
aam
lods
icebp
sub
hlt
test
daa
and
repnz
subb
inc
pop
dec
mov
sbb
les
jge
xchg
mov
dec
push
jmp
and
daa
or
xor
lods
mov
inc
dec
in
loopne
dec
mov
ret
jbe
adc
repz
inc
mov
js
pop
ss
mov
and
lcall
imul
and
lcall
push
shll
in
nop
dec
mov
ficompl
not
hlt
in
movsb
or
dec
fs
cmpl
or
movsl
mov
push
xchg
dec
pop
lods
sub
pop
mov
cmp
fnstsw
out
adc
pop
nop
mov
jns
and
fsubl
aam
sbb
pusha
movsl
add
in
loope
das
dec
mov
xor
lock
adc
aad
dec
jp
clc
mov
lods
stos
fildl
leave
push
les
inc
or
push
cltd
push
iret
and
jns
inc
out
in
cmp
add
push
ljmp
outsl
mov
arpl
cmp
jecxz
jg
out
jae
xchg
jnp
jmp
dec
dec
test
mov
fadd
rcr
mov
add
or
fmuls
dec
lds
outsb
dec
pop
sbb
imul
pop
and
call
loope
mov
repnz
inc
jl
insb
imul
push
pop
orl
cmp
insb
in
xor
jmp
in
loop
cmpb
inc
add
mov
fildll
mov
sub
pop
push
dec
fwait
jp
dec
adc
mov
pusha
jae
dec
js
adc
fnstcw
mov
pusha
mov
aam
mulb
pushf
call
cltd
mov
adc
cld
into
sbb
mov
jae
in
and
cmc
sti
insl
addr16
mov
lods
dec
enter
cld
xchg
call
jae
mov
dec
or
dec
es
insl
repnz
enter
subb
inc
repnz
roll
cmpsb
hlt
and
mov
and
inc
into
inc
jb
sbb
fmuls
jge
mov
push
push
cli
push
cmp
mov
pop
mov
xchg
mov
nop
in
pop
inc
or
sub
xor
insb
or
idivl
inc
pop
lods
es
std
mov
pop
lcall
and
jbe
out
and
ja
fdivr
cs
stos
adc
sar
mov
outsl
cmp
clc
dec
mov
stos
mov
into
xchg
push
dec
adcl
dec
xor
xchg
fs
and
mov
insb
cmp
test
jb
fwait
test
es
cmp
fwait
jp
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
jmp
jg
dec
dec
sub
loop
mov
mov
adc
adc
pop
cmp
mov
cmpsl
mov
dec
cmp
sub
pushf
and
mov
stmxcsr
outsl
pop
out
fidivs
xchg
addr16
pop
jp
lods
push
inc
leave
inc
sub
out
mov
int
push
mov
sub
adcb
aam
call
vzeroupper
add
call
sbb
testl
adc
mov
jl
and
cmp
jns
sub
jp
std
test
outsb
dec
std
push
mov
jle
inc
push
insl
inc
cmpsl
cmp
sub
cmp
lahf
push
mov
push
test
loopne
mov
or
ret
dec
mov
add
es
fstpl
nop
cmp
adc
iret
repnz
adc
push
mov
dec
dec
dec
pushl
jp
fsubr
das
xor
dec
mov
add
push
jo
mov
push
jp
push
mov
jmp
or
test
and
aam
das
sub
lea
pop
call
xor
jecxz
jnp
ljmp
std
push
mov
test
and
pop
adc
ja
dec
into
pusha
mov
push
roll
sub
sbb
daa
dec
dec
xchg
jns
fistpll
inc
add
clc
push
les
cmpsl
xchg
sub
ret
xchg
les
inc
shll
cmp
sub
mov
mov
test
push
out
xlat
inc
pop
push
jp
mov
add
pop
jne
int
xor
aam
cmc
add
mov
movsb
test
dec
aad
test
mov
imulb
into
sarb
inc
mov
les
inc
adc
and
lods
clc
push
aam
fwait
jge
push
push
xor
mov
pop
cmp
inc
fwait
aas
jge
jne
xor
in
adc
ret
bound
and
pusha
test
movl
fisttps
ljmp
sbb
xor
pop
fmul
inc
clc
add
sub
mov
mov
pop
in
lcall
es
fidivrs
pop
pop
in
insl
jne
adc
sbb
je
fdivrl
insl
cltd
sbb
movsb
mov
add
iret
fstps
push
or
xchg
pop
adcb
ja
xor
cli
dec
sahf
fldt
aam
std
xchg
insl
ret
sbb
lcall
pop
repz
pop
mov
push
mov
fbld
js
repnz
fdivs
fbld
pop
mov
sub
stos
push
sub
aad
cmp
les
mov
sbb
shrl
jo
xchg
aam
mov
dec
scas
pop
insb
inc
movsl
jmp
and
std
arpl
loope
xchg
repz
sbb
and
mov
fwait
mov
fiadds
or
loop
icebp
push
xchg
jecxz
fwait
jbe
inc
pop
jg
clc
int3
shlb
pop
call
fstpl
xchg
outsb
imul
ret
mov
cld
add
fbstp
xor
clc
pop
mov
push
xchg
sti
and
pop
dec
lea
pushf
stos
scas
ret
xchg
je
sahf
lahf
mov
mov
sar
add
jle
xor
jg
inc
dec
incb
mov
insl
add
xor
movsl
mov
jns
xor
pop
movsb
fsts
gs
sarl
scas
mov
dec
es
jnp
add
lret
inc
push
xor
test
test
inc
inc
hlt
push
pop
add
movl
movl
movl
movl
movl
movl
jmp
sbb
or
pusha
cmp
push
sti
es
dec
adc
adc
mov
pop
or
test
jge
inc
inc
cld
xor
xor
mov
rcrl
rorl
dec
shll
lea
xchg
pop
ds
and
jl
cmp
rolb
adc
add
pop
lahf
cld
es
addr16
shl
sbb
sub
cmc
outsb
dec
sub
mov
mov
mov
jbe
rolb
sbb
xor
add
pop
inc
or
mov
js
sub
and
dec
lods
sub
repz
jae
pop
mov
mov
mov
and
ljmp
xchg
lods
arpl
add
pop
in
inc
repnz
outsb
mov
jl
in
push
ja
mov
jecxz
je
dec
jmp
mov
dec
inc
and
jecxz
arpl
cld
push
mov
sahf
push
sub
jg
test
and
lret
xchg
data16
jp
or
pop
adc
mov
rcrl
rcr
mov
imul
mov
popl
in
dec
cmp
dec
cwtl
testb
mov
xor
je
xor
fisubrl
rcl
cmp
cmp
addr16
jnp
mov
bound
shl
add
mov
jle
mov
dec
movsb
and
push
imul
mov
or
mov
jne
xchg
mov
xor
out
adc
std
cwtl
das
arpl
nop
loop
jae
dec
bound
enter
jmp
lock
incl
sbb
insl
data16
call
push
add
jmp
imul
sub
rcl
xchg
rcr
jle
lea
jae
sbb
mov
xor
lcall
mov
sbb
jne
dec
jnp
dec
mov
jo
sub
std
lea
adc
test
cmc
adc
mov
adc
pop
dec
inc
movsl
ficoml
mov
stos
fmul
dec
cmp
add
and
dec
pop
mov
xchg
scas
adc
mov
into
jne
fcom
cmpsl
imull
cli
mov
dec
jo
cmp
in
sub
sub
jo
lods
add
xor
orb
jne
rcl
out
das
into
sbb
lods
sub
mov
repz
dec
das
fstl
addr16
test
enter
jns
aam
mov
sub
xor
sbb
xor
cmpsb
jle
add
mov
mov
mov
mov
add
dec
and
and
pop
cmp
test
test
js
xor
inc
popa
dec
xchg
jge
into
dec
inc
jae
dec
pop
fsub
cld
in
xor
push
dec
jo
shrl
movsb
jne
mov
adcb
ss
inc
jp
push
je
or
movsl
xchg
xchg
adc
lds
stos
mov
mov
sbb
icebp
in
ljmp
leave
xchg
out
out
pop
int3
sti
and
std
jo
push
lret
lds
repz
adc
xor
pop
or
lods
test
or
out
test
and
or
out
xchg
jge
imul
or
xchg
push
dec
dec
sbb
push
xchg
jg
mov
mov
movsl
in
outsb
leave
nop
inc
add
test
lcall
jno
add
test
push
or
add
test
call
test
decl
pushl
shl
icebp
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
jmp
test
sub
sbb
xchg
push
push
mov
mov
filds
stos
adc
adc
repnz
or
add
mov
repnz
je
pop
jns
inc
push
and
pop
filds
jle
bound
mov
jl
rolb
roll
outsl
outsb
dec
repnz
shrb
xor
push
xor
jb
fistpll
fstpl
out
jg
stos
pop
mov
mov
lods
std
mov
test
sbb
dec
out
jmp
pop
int
popf
push
mov
ljmp
adc
ds
or
dec
arpl
xchg
cmp
or
or
push
sub
in
mov
cmpsl
aad
inc
in
inc
iret
jmp
adc
push
push
push
aaa
dec
cli
push
sub
fwait
aam
outsl
in
cli
movsl
sbb
cmp
mov
mov
repnz
test
xchg
adc
outsl
shll
sub
pushf
adcl
push
outsb
jno
adc
int3
int
in
loopne
out
sub
fst
and
jae
sbb
jl
xchg
jmp
rcr
cmp
jo
test
mov
pop
mov
dec
movsb
sub
repnz
call
outsb
xlat
xchg
ds
cmc
adc
clc
or
cmp
popa
jae
ficompl
inc
xor
shlb
sahf
ss
fwait
adc
std
add
jno
insl
lock
stos
push
push
cmc
call
and
ss
xor
mov
popa
push
push
shl
js
fcmovnb
adc
push
inc
cmpsb
es
lods
pop
xor
pop
mov
or
ja
stc
cmp
mov
push
xchg
pop
jp
cmpsl
dec
mov
sbb
mov
xchg
fucomp
lcall
shr
dec
mov
ret
cs
orl
cmpsl
xor
lret
mov
rclb
jl
fwait
adcl
ja
sar
pop
push
or
xchg
fiaddl
inc
inc
pop
movsb
shrl
loopne
es
mov
out
imul
and
and
js,pn
and
add
into
mov
adc
and
mov
mov
stos
mov
pop
xchg
sub
mov
xor
inc
and
std
mov
enter
cwtl
je
dec
xor
jp
in
cmpl
push
xor
mov
xor
into
icebp
lret
out
dec
out
dec
fnstenv
pop
adc
add
dec
adc
dec
add
iret
inc
in
cmp
mov
bound
ds
in
hlt
add
test
sarl
xor
into
xadd
clc
jae,pn
mov
mov
int
dec
out
lds
cmp
in
movsb
data16
or
push
xchg
and
aaa
scas
add
popf
cmpsl
sbb
jne
inc
or
jle
clc
and
xchg
mov
fcompl
inc
push
sbb
dec
jl
mov
mov
and
push
fisubrl
stos
push
int3
aaa
push
mov
in
out
ljmp
fs
mov
iret
mov
ret
jo,pt
sub
xor
movl
jg
pop
lods
fwait
out
fsubrs
add
sarl
test
loope
inc
mov
in
adc
loop
decb
xor
cmc
inc
jo
orl
and
adc
pop
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
mov
pop
cmp
movsl
mov
sarb
adc
adc
push
pop
loop
xchg
imul
test
xchg
fistpl
xchg
pop
ret
in
or
fstl
test
inc
or
lods
popf
mov
sub
dec
pop
addr16
or
ljmp
cmp
outsb
or
xchg
icebp
movsl
xor
add
xor
pop
into
jno
jnp
imul
xor
shll
mov
sbb
fistl
xchg
aad
int3
mov
pop
ja
cmpsb
test
sub
and
ret
jne
dec
inc
push
leave
stos
idiv
repz
jae
out
mov
out
mov
insl
fwait
sbbl
jecxz
roll
lea
in
enter
or
pop
jb
mov
mov
ret
adc
xchg
rclb
add
outsb
mov
cmp
push
xchg
ja
cmp
test
sbb
fstp
les
rol
mov
add
jo
mov
jecxz
mov
inc
mov
test
loop
decb
fildll
sbb
dec
repz
jmp
mov
in
mov
data16
fstl
dec
jp
imul
dec
or
notb
sarl
lcall
cltd
lea
stos
cmp
jns
inc
rcll
cmp
sbb
test
adc
je
es
pop
or
jecxz
xchg
arpl
dec
nop
sarb
fisttpll
cmc
jl
mov
jmp
movsl
pop
push
jmp
or
gs
in
out
cmp
jge
mov
sbb
cmp
adc
mov
icebp
adc
scas
aas
dec
insl
sub
cmp
xlat
sbb
push
jge
fsubl
lods
es
cmc
repz
in
dec
inc
out
pop
out
mov
jp
movsb
ss
outsl
int
sbb
test
jmp
xlat
fcomi
cltd
cli
fnstcw
dec
roll
inc
sbb
xor
sbb
jbe
repz
and
loopne
pop
cmp
jmp
adc
stos
cmpsb
xor
stos
mov
rorb
loop
outsl
enter
adc
jmp
pusha
movsl
fmull
outsl
and
mov
loopne
sbb
faddl
jmp
ret
aad
jmp
sbb
jbe
cmpsl
js
xchg
cmp
or
insb
test
fimuls
ret
in
addl
mov
mov
lock
add
inc
sbb
jbe
sbb
xlat
ljmp
sarl
xor
or
jecxz
or
lds
sub
int3
inc
bound
cwtl
push
xchg
xchg
sti
inc
std
inc
mov
loope
and
adc
cmp
xchg
clc
adc
or
and
xchg
aaa
xchg
xchg
adc
mov
lds
loope
out
dec
push
pop
cmp
aam
xor
cmpsb
xchg
outsl
xor
cmc
bound
ljmp
jg
mov
loope
fsts
jne
fisubrs
insb
jmp
ja
fstpt
cld
ficompl
mov
dec
cld
jecxz
popf
test
xor
arpl
jle
jns
jae
mov
jne
push
in
aam
jb
movsb
repz
pop
mov
lret
jecxz
sbb
dec
sub
lods
mov
dec
cmpsb
push
movsl
data16
and
xorl
xor
loope
push
jp
xor
jge
aad
repnz
call
or
or
add
mov
mov
jmp
jbe
ja
cmp
aam
in
fcomps
adc
inc
pushl
jnp
ds
add
dec
call
adc
outsl
test
jl
xchg
mov
pusha
bound
ss
pop
mov
inc
mov
nop
pop
neg
jbe
mov
xchg
aas
loop
inc
lds
sub
adc
xor
js
xor
push
out
add
pop
sub
mov
call
ja
inc
in
enter
sub
inc
and
pop
cmp
mov
andl
incl
test
push
xor
fiaddl
mov
xor
sub
stos
lret
or
rcrb
fidivl
jp,pt
lea
xchg
icebp
mov
sti
or
dec
imul
pop
negl
ret
jns
scas
ret
icebp
pop
je
or
sub
cmp
xchg
pushf
sub
mov
in
cwtl
call
js
cmp
dec
sbb
xchg
cmpsl
ret
jge
jl
int3
dec
pop
jnp
adc
out
ja
lret
arpl
nopl
cs
mov
imul
hlt
fwait
mov
mov
test
shrl
push
loope
adc
mov
ljmp
push
pop
fnstsw
jge
push
dec
mov
or
cs
adc
ss
pop
xchg
push
sbb
push
scas
xchg
add
xchg
xchg
xlat
add
fstps
sub
adc
sbb
pop
js
mov
fwait
xchg
stos
dec
mov
das
or
and
inc
push
mov
and
add
mov
dec
negb
or
jo
lods
test
xor
cmpb
lret
adc
fsubrs
push
outsl
stos
in
xor
dec
jmp
bound
rclb
outsl
fiadds
int3
pop
xchg
fdivs
sub
dec
ficoml
cld
xor
inc
out
jge
nop
adc
adc
pusha
mov
incl
push
cmpsl
int
jecxz
jnp
mov
loopne
out
int
push
mov
sbb
insb
push
int3
leave
test
lsl
and
xchg
cltd
dec
ds
scas
jbe
mov
stos
inc
in
push
jo
mov
lock
test
sub
psrlq
ja
push
sub
dec
mov
popf
scas
jmp
adc
pop
rolb
and
sbbl
push
mov
or
mov
sub
xor
mov
das
std
jno
xchg
jo
sbb
mov
or
mov
mov
add
test
xchg
jno
dec
mov
fldl
das
dec
pushf
push
js
imul
and
cmc
adc
scas
rcpps
cmc
pop
inc
pop
xor
ret
sbb
xchg
xchg
mov
cmpsl
xor
lea
xchg
ss
out
jnp
outsl
cmpl
cmp
into
pusha
fstl
cmp
xchg
cmp
cmp
sub
jmp
push
pop
or
bound
std
inc
adc
or
and
jne
test
jnp
int
bound
imul
iret
leave
int3
pop
loope
or
std
fbld
inc
ret
clc
mov
imul
lea
shrw
adc
enter
daa
out
out
outsl
pop
mov
adc
dec
and
pop
ja
js
pop
and
cmpsl
lock
in
adc
mov
sub
cmc
test
aad
popa
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
jmp
jnp
add
xor
adc
xor
adc
adc
leave
cmpsl
xchg
loopne
pop
stos
scas
and
xor
add
and
testl
js
pop
fdivrl
cwtl
int
mov
xchg
repz
stos
inc
dec
popa
inc
xor
ja
xor
je
jnp
lods
bound
stc
lods
adcl
popa
jo
mov
ror
xlat
in
fs
jmp
cs
aad
aam
mov
xor
dec
inc
xor
mov
and
add
inc
inc
dec
xchg
push
sub
xchg
sti
and
or
stc
cmpsb
push
xor
leave
sbb
lret
push
pop
ror
scas
imul
cmp
lcall
push
leave
icebp
cmp
lret
push
mov
movsb
ficoms
mov
mov
adc
mov
pop
inc
data16
sbb
push
mov
sbb
xor
leave
popa
add
xchg
unpckhps
or
divl
and
sbb
pop
or
ljmp
fnstsw
jo
pop
jnp
aam
ljmp
mov
flds
sbb
bnd
or
cwtl
or
adc
mov
lret
int
xchg
mov
out
and
sub
xchg
mov
sahf
dec
xor
mov
hlt
lock
test
xchg
pop
cwtl
fldl
fs
jnp
dec
add
outsb
mov
push
cli
lods
pop
repnz
call
loope
call
lods
fucomi
cltd
sahf
mov
push
pushl
mov
xor
pushl
or
rcrb
dec
imul
mov
inc
test
inc
scas
in
pop
xchg
ret
jp
je
shrl
xchg
adc
jns
pop
jb
and
xor
mulb
or
loop
jne
sbb
fwait
pop
sbb
mov
cmp
mov
lods
fwait
clc
pop
xor
fiadds
hlt
mov
dec
pop
call
add
inc
push
call
std
fwait
inc
mov
fcoms
jecxz
adc
mov
dec
mov
js
sbb
pop
inc
shr
insl
imul
gs
adc
pusha
je
enter
sahf
xchg
incl
rolb
in
pop
aam
xlat
jge
sti
xor
test
dec
cmp
jne
lcall
add
mov
mov
hlt
cmp
cmp
dec
test
leave
js
add
cmpsb
cmp
mov
adc
addb
sbb
xor
push
jns
push
sub
int
mov
out
into
xor
sub
jle
pop
and
and
and
dec
daa
fdivr
mov
pop
jb
fcoms
jecxz
jbe
mov
inc
xchg
ret
push
dec
les
lahf
push
jns
lods
ja
sub
imul
mov
dec
sti
idivb
and
mov
jb
and
push
daa
fcoms
divl
out
or
lds
add
insb
mov
dec
cltd
incl
jo
mov
cli
or
pavgw
xchg
pop
cltd
imul
pushf
xchg
xor
jae
popf
cs
fsub
xchg
add
pop
sbb
movl
cs
sbb
pop
scas
cmp
mov
mov
push
mov
clc
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
jmp
popa
rolb
and
loopne
insb
cmp
sub
adc
std
shr
push
ljmp
outsb
jo
and
mov
js
mov
push
push
push
mov
jle
and
sbb
mov
outsb
add
int3
or
clc
jno
inc
xor
int
loope
xchg
xor
xchg
and
xchg
loop
sbbl
push
xchg
test
popf
push
fidivl
iret
fidivrs
lods
arpl
sbb
dec
stos
pop
inc
dec
jmp
add
sub
add
cmp
insb
dec
cmc
xor
ja
les
sbb
or
jl
scas
arpl
mov
xor
pop
cmc
call
dec
lea
popa
xchg
stc
adc
test
xor
add
sahf
ds
pop
divl
cld
mov
fsubl
popa
push
mov
or
mov
cmp
shlb
shll
adc
xor
iret
mov
xor
mov
cmp
xchg
cmp
or
xlat
dec
jecxz
inc
mov
or
dec
cld
int3
push
push
popf
sar
add
add
repz
adcb
test
mov
in
int3
xchg
outsl
mov
cwtl
fstps
idivl
addb
stos
xchg
testb
int
bound
inc
outsb
lods
addb
or
mov
sbb
push
inc
sbb
rorb
sbb
repz
mov
jbe
cld
and
push
xor
jg
mov
int3
imul
lcall
and
jb
pop
js
inc
test
add
les
sbb
loope
adcb
out
andb
movsb
cmc
outsl
adc
mov
xchg
xchg
xchg
inc
xchg
stc
sub
ljmp
xchg
in
ljmp
divl
shl
movsb
push
and
push
push
fdivs
imul
cmc
mov
icebp
mov
pop
and
movsl
adc
adc
stc
sbbl
mov
mov
sub
insl
call
xor
cmp
decl
lea
popf
jae
fsubs
pop
mov
popf
xchg
subl
mov
mov
inc
in
mov
mov
rcrl
push
daa
cmpsb
sbb
or
jl
ficomps
ja
push
xchg
jmp
cmpsl
jge
adc
jge
sbb
ja
pop
je
dec
mov
xor
cs
jns
outsl
bound
mov
orl
sarl
jl
mov
repz
jle
sub
scas
xor
es
xor
inc
mov
in
jmp
mov
aas
les
loopne
into
and
insl
nop
lea
mov
in
and
and
xchg
sarb
sbb
adc
call
inc
int
inc
adcl
lods
stos
xlat
std
cwtl
and
or
scas
mov
icebp
mov
cmp
ja
sub
xchg
jle
push
cs
lahf
inc
sqrtps
push
scas
cmp
je
adc
pop
inc
sub
push
push
inc
xchg
cmp
popf
icebp
dec
jo
negl
mov
cld
push
shrb
lds
xchg
mov
scas
roll
jmp
loop
cmpl
sbb
pusha
inc
jle
push
or
imulb
push
cmpl
fs
mov
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
jmp
test
push
cmpsb
inc
sbb
cltd
adc
mov
fsubs
adc
adc
mov
jns
push
mov
sahf
sub
xor
jecxz
cwtl
outsl
mulb
mov
xchg
test
jmp
stos
pop
cmpsl
inc
imull
cmp
imul
daa
int3
mov
mov
std
xchg
stc
mov
test
and
mov
or
pop
or
mov
pop
adc
adc
pusha
dec
sbbl
and
and
test
incl
das
scas
cmp
mov
mov
jne
into
lcall
imul
fnop
cmp
and
sbb
add
call
or
nop
cmpsl
add
test
ljmp
xor
dec
or
popl
movsl
mov
pop
mov
pushf
jg
pop
lahf
push
cli
push
es
push
jb
je
add
xorl
dec
mov
fwait
inc
mov
push
out
int
pop
pushf
faddl
loop
jno
add
es
cmpsb
stos
loop
lea
loop
insb
mov
mov
sahf
enter
int3
aad
aaa
xor
mov
inc
jno
mov
jno
mov
cmpsl
sti
jl
ss
lahf
aam
das
out
dec
sub
sahf
nop
mov
rorl
xor
mov
icebp
flds
mov
daa
inc
push
pusha
push
shlb
scas
jnp
pop
push
clc
mov
lds
cmpsl
fstl
dec
dec
push
pop
in
hlt
fildll
pop
mov
sahf
pop
cmp
fildl
push
cwtl
out
fidivrs
xor
test
mov
jle
push
mov
stos
cmc
pop
xchg
jecxz
inc
lods
pop
and
cwtl
xchg
out
sarl
cmpsb
xorb
pop
inc
xlat
movsl
lcall
cmp
ljmp
dec
pop
ret
push
pop
cli
adc
out
lret
jae
iret
mov
mov
xchg
mov
stos
xorb
popf
mov
inc
mov
sbb
fimull
lds
jae
push
jl
or
lahf
lods
cs
sbb
addb
shrb
mov
sub
call
xor
mov
or
repz
mov
cmp
fbld
jo
call
lret
adc
jnp
aam
test
add
mov
xchg
jbe
mov
xchg
leave
mov
cmp
adc
lret
mov
out
adc
dec
xor
mov
mov
test
and
imul
mov
xor
fldt
add
add
sub
dec
rcll
mov
fidivl
lods
rolb
gs
jge
dec
or
mov
repz
adc
mov
roll
fcompl
pop
jno
loopne
inc
mov
icebp
je
adc
xchg
loop
cli
jb
cwtl
xchg
adc
stos
mov
jl
scas
cmp
andb
mov
mov
imul
fucomp
ds
or
scas
jl
stc
test
fmuls
cmp
jae
xchg
xchg
or
js
data16
rorb
aaa
je
stos
xchg
lret
into
mov
xchg
pop
inc
sub
pop
aas
inc
sub
dec
or
aaa
adc
cmpsb
pop
fldcw
stc
pop
sahf
inc
cmpsb
pop
cmp
clc
out
pop
hlt
adc
movsl
in
dec
mov
jae
lea
mov
push
adc
fdiv
pop
mov
divb
add
mov
mov
mov
jmp
or
mov
adc
dec
ljmp
adc
adc
mov
dec
ror
mov
outsb
push
jbe
loope
mov
roll
mov
push
jns
ret
cmpsl
loopne
jmp
ret
xor
sub
mov
shrl
fsubp
inc
mov
out
movsl
imul
add
sub
adc
and
stos
jnp
jg
mov
sahf
cmpsl
test
mov
or
sbb
cwtl
add
pop
js
sbb
add
outsl
xchg
dec
dec
mov
ljmp
out
ret
lret
inc
dec
jno
jnp
loopne
dec
fidivs
scas
inc
adc
aas
pop
fwait
inc
and
pop
inc
test
xor
xor
notb
inc
pushl
push
sub
in
lods
fcomps
mov
jmp
mov
cmpsl
sbb
mov
ds
adc
pop
scas
fidivl
hlt
inc
lods
mov
jg
jp
andb
add
cmp
pop
addr16
push
sbb
inc
lahf
jle
pmulhuw
adc
xlat
pop
fdivs
js
aam
out
mov
leave
xor
sbb
mov
adc
mov
push
jo
aam
push
xor
dec
cwtl
push
mov
push
xchg
rol
or
cmp
mov
hlt
mov
xor
add
ss
inc
test
push
xchg
xchg
inc
into
push
mov
xor
and
fstpl
stos
cltd
sbb
mov
cld
and
nop
sbb
fsubr
sbb
sub
xor
pop
scas
lahf
lods
shll
pop
int
ret
sahf
xchg
xor
mov
mov
lea
add
xor
ficoms
cwtl
jp
fst
xchg
push
mov
pushf
sahf
push
aad
adc
inc
push
test
aad
imul
mov
cmpsl
in
les
cmp
xchg
sub
adc
addl
mov
push
pop
sahf
pop
xor
inc
arpl
and
test
push
movsb
pop
add
xchg
mov
repz
aam
mov
fsubl
out
xchg
push
mov
out
lock
jp
cltd
mov
jmp
sbb
aam
xor
push
xor
push
push
idiv
sbb
gs
sub
popa
ljmp
imul
xlat
mov
cld
aaa
add
movsb
add
pop
pop
stc
cmpsl
sub
xor
add
push
jae
pop
loop
mul
repz
jne
ljmp
popf
outsb
out
enter
push
mov
aad
cwtl
xlat
dec
jmp
cs
push
out
ss
stc
movsb
dec
arpl
and
imul
mov
jno
mov
fcoml
sbb
in
or
loope
jne
jl
xchg
jns
sub
test
fistpll
mov
icebp
sti
loop
adc
xor
js
leave
lret
imul
inc
dec
jg
lods
fistl
ret
imul
mov
adcb
dec
test
jno
lds
push
pop
push
pop
jg
cmp
jmp
loope
pop
push
cmp
cltd
fistpll
pushf
mov
mov
call
pop
sub
pop
mov
outsl
cmp
std
cmp
loop
leave
cmp
outsb
mov
or
push
daa
pop
add
or
shlb
decl
lock
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
jmp
insl
into
leave
mov
jne
lret
add
stos
adc
adc
sbb
pop
repz
or
imul
mov
stc
jecxz
cld
sbb
adc
cmp
imul
mov
xlat
push
cwtl
jp
daa
rcll
pop
in
std
mov
mov
js
xor
ret
dec
xchg
imul
xchg
xchg
and
es
mov
fwait
pop
dec
stos
or
inc
jp
sbb
mov
in
jo
xchg
stos
pop
mov
test
adc
dec
cs
adc
mov
pop
imul
nop
test
sahf
jle
mov
mov
push
out
aaa
xor
stos
mov
outsl
mov
mov
xor
into
xchg
jmp
jo
imul
shl
pushw
cmpl
stos
mov
jbe
das
cmp
sub
jnp
and
dec
sub
into
and
insb
push
imul
icebp
fwait
mov
cmpsl
xchg
sbb
mov
pop
inc
insl
push
fdivrs
and
lcall
shlb
je
pop
jb
std
xor
insb
cltd
mov
ljmp
push
insl
mov
cmpb
mov
fstl
negb
push
imul
aaa
sbb
dec
loop
fsubrs
movsl
orl
pop
les
out
adc
sbb
cwtl
or
or
cmp
andb
pop
or
mov
lret
push
imul
popa
jno
jb
or
orl
jnp
mov
js
scas
lcall
mov
push
pop
push
jb
mov
sbb
and
aad
repnz
pushf
push
inc
je
jno
and
push
nop
shlb
shr
and
and
sub
xchg
test
je
rclb
xchg
jae
xsha1
cmpsb
dec
xchg
divl
fwait
jo
cli
dec
mov
ret
ss
mov
push
pop
xchg
or
inc
and
sbbl
aaa
cmp
iret
dec
mov
jg
mov
sti
mov
jb
xchg
inc
pop
int3
adc
push
xor
test
sub
lock
xchg
push
in
into
inc
lea
out
pop
mull
xchg
push
lods
jmp
dec
push
dec
xor
pop
xchg
lds
and
or
and
mov
push
cmp
call
rorb
cmpsb
loop
push
repz
xchg
inc
jno
daa
shll
in
shll
enter
fstps
xchg
jo
or
inc
pop
lea
cmp
cmc
sbb
dec
cmp
outsl
add
les
sarl
insl
int
call
mov
inc
jae
mov
push
mov
insb
jp
into
mov
push
cmp
testl
aam
xlat
adc
loop
cs
mov
adc
mov
push
fdivrl
mov
adc
or
xor
xchg
mov
fsubrs
inc
dec
mov
scas
pop
ja
adc
lds
mov
push
mov
ret
std
pop
dec
out
cs
xor
sbb
xchg
ret
pop
movb
jne
ja
xor
mov
repnz
add
sbb
imul
sub
jp
outsb
inc
pop
pusha
fistl
cmp
sti
lea
lods
cmpsb
shl
movsb
lods
loope
sbb
xchg
mov
add
pop
jg
push
shrb
test
add
add
push
add
add
mov
add
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
mov
xchg
pop
mov
dec
mov
mov
adc
fwait
loopne
rorb
add
adc
fnstcw
pop
mov
movsb
fs
movsb
mov
sbb
stos
sub
daa
fdivl
iret
ss
cli
sbb
std
sbb
lea
cs
push
mov
movl
adc
mov
dec
lods
scas
cwtl
mov
xchg
fsts
push
insb
mov
js
mov
shl
jo
add
popa
xchg
push
jmp
sbb
and
pop
jb
imul
adc
aaa
jo
xlat
mov
inc
and
not
xor
lea
popa
inc
xchg
fidivl
adc
pop
mov
adc
enter
adc
mov
add
movsb
mov
push
cmp
rol
pop
faddl
mov
jae
xor
cmpsb
xor
in
mov
mov
int3
mov
call
into
add
ret
fsubl
in
mov
out
mov
mov
inc
jne
or
xor
pop
xchg
lds
ja
aad
decb
mov
xchg
cmp
daa
fld
cmp
jecxz
imulb
out
sar
jmp
adc
mov
lods
nop
push
mov
cmp
mov
iret
xor
leave
mov
sub
inc
sbb
or
mov
push
cwtl
dec
pop
pop
cmp
lods
lods
mov
rcl
xchg
fwait
add
faddl
and
lret
jne
out
divb
hlt
aaa
pop
jmp
daa
jnp
push
xchg
jae
cmp
addr16
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
cmpl
movl
notl
movl
jmp
mov
jg
pushl
pushl
push
call
adcl
orl
adc
sbbl
orl
addl
notl
push
movzbl
sub
mov
or
jne
mov
and
mov
mov
sbbl
xor
div
sub
mov
mov
and
mov
div
notl
mov
jmp
xor
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
cmpl
movl
je
and
add
movzbl
mov
mov
mov
pop
pop
pop
leave
ret
movl
cmp
movl
jae
cmp
jae
subl
shld
movl
shl
ret
cmpl
mov
mov
jmp
movl
je
pushl
push
call
xorl
adcl
sbb
and
xor
adc
adc
mov
xor
and
shl
ret
xor
xor
ret
