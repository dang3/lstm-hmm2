push
mov
sub
push
add
push
adc
push
adc
xor
sbb
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
push
mov
pop
push
call
push
andl
push
push
push
push
xorl
push
sbbl
call
push
addl
push
push
push
sbbl
push
push
push
incl
call
addl
dec
movl
jne
push
sbbl
push
push
andl
call
test
je
mov
adc
imul
mov
mov
movl
mov
movl
cmp
jne
addl
movl
pushl
subl
pushl
andl
pushl
xorl
call
mov
mov
or
mov
xor
mov
mov
sub
movl
lea
xor
mov
lea
mov
addl
mov
mov
adc
mov
mov
add
mov
mov
xor
mov
xor
mov
adcl
add
movl
mov
mov
movl
cmp
movl
jne
mov
mov
mov
xor
add
mov
xor
mov
movzbl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
xor
dec
mov
jmp
mov
or
mov
xor
add
or
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
mov
xor
or
adc
mov
xor
xor
mov
sbb
mov
xor
mov
mov
mov
sub
mov
orl
mov
movl
add
mov
xor
add
mov
add
mov
andl
mov
adcl
xor
xor
sbbl
add
movzbl
and
mov
xor
lea
cmp
ja
or
mov
mov
xor
mov
sbbl
xor
andl
lea
subl
push
sbb
mov
xorl
xor
lea
orl
push
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
mov
andl
pushl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jb
xor
lea
mov
mov
decl
xor
xor
sbbl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
movzbl
sub
mov
mov
xorl
xor
lea
mov
cmp
movl
jbe
add
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
adc
mov
mov
xor
mov
sub
andl
xor
mov
not
mov
movl
cmp
movl
jne
addl
lea
andl
mov
lea
addl
mov
mov
xorl
test
movl
je
adc
mov
mov
mov
sub
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
sub
cltd
mov
mov
mov
or
add
mov
adc
andl
subl
xor
xor
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
push
call
mov
dec
mov
jmp
not
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
negl
add
mov
mov
movl
adcl
xor
addl
mov
mov
xor
movl
mov
cmp
movl
jne
mov
mov
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
negl
mov
movl
mov
andl
xor
add
movl
adc
andl
xor
addl
xor
movl
cmp
movl
jne
cmp
jne
mov
addl
mov
andl
xor
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
addl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
xorl
add
movl
jmp
movl
mov
movl
cmp
je
mov
mov
orl
xor
add
cmp
je
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
movl
mov
mov
mov
adcl
pushl
addl
mov
pushl
addl
add
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
add
mov
mov
orl
pushl
call
mov
mov
movl
mov
movl
jmp
adc
mov
sub
mov
andl
xor
subl
add
cmp
jne
add
mov
movzwl
sbb
mov
adcl
mov
xor
sbbl
add
cmp
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
andl
push
xor
movl
add
xorl
push
xorl
push
andl
pushl
adcl
pushl
sbbl
call
add
mov
mov
sub
mov
or
mov
sub
mov
adc
mov
xor
mov
sub
add
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
incl
mov
mov
mov
mov
mov
mov
mov
sbb
movl
mov
xor
decl
add
mov
sbb
mov
mov
or
mov
mov
and
mov
mov
push
sbb
pop
orl
sub
add
xorl
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
mov
lea
lea
xor
cmp
jne
mov
xor
mov
mov
mov
mov
xor
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
mov
movl
movl
movl
movl
mov
mov
mov
andl
mov
movl
mov
mov
xor
mov
orl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
xor
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
movl
movl
pop
jmp
xor
inc
ret
push
mov
push
movl
movl
mov
addl
mov
add
xor
cmp
movl
jne
add
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
xorl
push
adcl
push
addl
push
push
andl
lea
push
push
adcl
call
push
call
sub
movl
xorl
movl
mov
mov
xor
mov
xorl
add
mov
sbb
mov
test
je
mov
mov
orl
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
sbb
imul
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
add
movzbl
and
xchg
sbb
mov
movl
sub
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adc
add
mov
sub
mov
sub
xor
add
mov
sub
mov
mov
xor
xor
add
add
mov
movzbl
sbb
mov
mov
adc
xor
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
or
mov
orl
sub
addl
lea
xor
andl
xor
movl
cmp
movl
je
sub
mov
xorl
xor
adcl
add
cmp
jne
orl
pushl
call
movl
cmpl
je
cmpl
jne
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
inc
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
add
cmp
movl
je
adcl
pushl
addl
pushl
negl
call
mov
xor
mov
add
mov
subl
xor
subl
add
cmp
je
or
mov
mov
adc
mov
mov
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
jmp
or
xchg
xchg
pushf
cmp
jl
jl
pop
jl
adc
and
imul
xor
fsubp
push
dec
imul
bound
iret
pop
dec
and
dec
jg
jb
jg
movsb
cmp
ljmp
cld
push
jg
in
cmp
mov
mov
mulps
fldl
lock
sub
dec
push
sub
mov
test
jmp
lret
sbb
jp
arpl
lcall
xor
cmpb
jae
fsubrl
push
jecxz
mov
mov
out
push
dec
push
and
cmp
lods
dec
int3
cmpsl
xor
push
pop
std
push
pop
movsl
stc
push
cli
inc
adc
enter
clc
push
nop
fs
pushf
jmp
sti
inc
idiv
jmp
cmp
stc
xor
jb
insb
ja
pop
fcoml
inc
sbb
mov
iret
and
scas
bound
xlat
push
pop
mov
jne
cmp
rol
das
jb
sub
dec
pop
ljmp
sub
dec
adcb
fcomi
test
xchg
push
push
jne
ja
sub
cltd
fwait
xor
out
sahf
jecxz
xlat
add
rclb
aam
jg
add
dec
mov
fdivl
loop
and
push
sarb
mov
lret
push
outsb
adc
xchg
adc
jae
mov
sbb
or
ss
mov
xchg
sbb
sub
push
adcb
stos
sbb
mov
andb
leave
aas
into
jmp
pusha
loop
cmp
ret
shlb
mov
ret
pushf
ficoml
dec
icebp
jns
cmp
ss
js
inc
ss
jo
and
push
outsb
xor
push
push
ret
std
cmp
pop
jmp
stc
cs
popa
sub
iret
mov
fsubrl
sahf
cmpsl
hlt
inc
lods
in
push
lea
lcall
sub
jne
xor
pushf
int
or
in
lret
cmp
daa
pop
xchg
orb
cmpsb
repz
lods
dec
fbld
bound
repnz
xbegin
sbb
sbb
rclb
pop
shr
orb
decl
jno
icebp
jp
lods
add
int
sub
cli
mov
frstor
jb
cmp
mov
add
stos
mov
or
enter
outsl
pop
insl
nop
sbb
add
gs
lods
pop
mov
cmp
pop
loop
dec
cld
fwait
mov
stos
sub
sub
in
mov
fisttps
out
lret
insb
sbb
dec
xchg
inc
jecxz
ss
jno
icebp
dec
scas
into
push
xchg
jb
jg
repnz
shrb
adc
cmp
leave
cmp
jmp
int
add
and
pop
adc
cmpsl
rcll
sbb
fdivrs
sub
movsl
out
lret
std
mov
es
stos
in
mov
int3
out
add
xor
insb
xor
repnz
pop
xlat
add
jecxz
insl
lods
add
xchg
clc
cmp
adc
jo
push
out
cltd
stc
insl
data16
add
scas
inc
outsl
ret
test
xchg
in
sbb
pop
scas
nopl
das
aaa
push
add
add
stos
iret
or
pushf
mov
orb
das
pop
dec
sub
sbb
cli
fstl
jnp
pop
icebp
mov
popa
lahf
clc
sbb
addl
push
jmp
dec
out
or
mov
popa
xchg
sbb
jmp
xor
in
clc
mov
addl
lock
or
add
fcom
or
pop
pop
outsb
aaa
mov
movd
psraw
xlat
clc
arpl
cmp
dec
fwait
or
mov
cli
jae
test
sub
cmp
mov
sbb
imul
adc
and
aad
xor
xchg
dec
xchg
es
in
adc
cmp
lods
lahf
push
es
sub
push
mov
outsb
jno
bound
sub
das
mov
scas
scas
insl
es
push
rorb
fcomps
insl
mov
push
and
cwtl
sarb
and
mov
addr16
icebp
outsb
mov
into
les
pusha
add
das
stos
push
dec
fisubrl
jl
lods
mov
dec
xchg
out
aam
dec
stc
push
mov
and
mov
mov
cmc
or
push
loop
es
dec
adc
pop
mov
iret
jo
shrl
pushf
mov
lcall
jl
fldt
iret
jnp
add
aad
rcrb
push
jb
fstp
dec
push
and
pushf
or
sub
repnz
scas
lock
xor
popa
jg
adc
js
fwait
adc
rcrl
mov
pop
push
mov
cmp
out
adc
pop
negl
pop
sbb
stc
jg
aad
cmp
inc
jg
ss
mov
push
mov
dec
into
inc
xor
enter
lock
jo
mov
shl
jbe
stc
xchg
aam
mov
scas
inc
lods
fadds
mov
out
out
jl
arpl
addb
jae
sub
adc
mov
pusha
sbb
mov
or
int
fildll
and
lahf
lock
test
xor
idiv
insl
push
adc
add
cmp
out
dec
movsl
inc
andb
cmpl
sbb
ljmp
aam
and
call
out
dec
fsubr
aaa
dec
out
mov
das
lock
xor
frstor
sahf
sbb
or
push
adc
andl
fcompl
mov
mov
loope
xchg
xor
cmp
inc
cwtl
mov
mov
sub
je
aam
mov
scas
mov
or
shrl
in
cli
fwait
cmpsl
pop
stc
adc
scas
xchg
dec
xchg
insb
cli
and
rclb
movsl
or
rclb
or
sbb
xchg
add
aam
cli
stos
stos
sbb
push
pop
cmp
rorl
fs
imul
push
mov
jns
adc
sbb
aad
sub
or
jg
sub
xor
add
sub
enter
loope
mov
mov
xor
enter
jns
xchg
not
ret
in
dec
sub
aas
add
mov
cmp
and
dec
aam
repnz
adcb
mov
jnp
cmp
mov
stc
jnp
test
jecxz
out
mov
push
fisubl
inc
popf
ret
xchg
test
iret
jp
mov
lds
add
jae
repnz
lea
gs
mov
call
das
xor
jb
inc
or
arpl
cli
adc
fwait
ret
dec
sbb
sub
jle
xor
sub
cmp
jne
ret
mov
out
and
insb
enter
sti
sbb
pushf
jns
push
shll
pop
cmp
dec
push
sub
inc
mov
and
jno
lock
orb
js
dec
jle
stos
pop
in
jo
push
cltd
shrb
mov
lea
ficomps
insb
xor
fbstp
adc
fistpl
push
inc
rcrb
push
ret
cmp
out
mov
test
cmp
jl
mov
cmp
repz
aaa
jle
clc
aas
pop
sbb
loopne
adc
xor
cmc
stc
aaa
inc
icebp
mov
lcall
hlt
in
in
addr16
jbe
dec
jno
mov
test
and
ds
cli
jno
adc
call
push
icebp
mov
dec
js
cmp
push
mov
ret
stc
xchg
xor
clc
jno
lahf
fstl
scas
or
imul
inc
inc
lock
repz
leave
xor
jb
mov
rorl
rorl
jmp
and
ljmp
mov
loope
mov
adc
scas
jnp
sbb
aaa
pop
cmp
xor
pop
mov
sbbl
sbbb
cld
sbb
pop
or
arpl
mov
mov
mov
stc
mov
mov
test
pop
jo
out
xchg
dec
es
cwtl
pop
cmp
insl
mov
lret
movsl
in
mov
std
sub
push
sbb
push
test
fsts
in
xor
lods
movd
sbb
shlb
repz
xchg
dec
daa
aas
or
cmpsb
insl
loope
shrl
scas
clc
data16
pop
push
jp
mov
in
cs
push
imul
mov
lahf
fwait
xchg
and
jl
daa
and
out
cmp
sbb
popw
cli
or
insl
cltd
xchg
sbb
adc
jp
stos
push
inc
mov
adc
xchg
push
stos
inc
mov
pusha
push
adc
inc
cmp
in
dec
fsub
xchg
mov
sbb
jl
mov
cmp
cmp
mov
sub
test
xchg
imul
fisubl
lcall
or
fnstcw
or
inc
cwtl
sarb
mov
aam
fistps
arpl
push
xchg
push
out
aas
rcrb
mov
cmc
add
inc
sub
xor
adc
inc
xor
sbb
arpl
pop
or
add
or
mov
nop
xor
lahf
jne
sub
mov
in
push
mov
jns
clc
dec
and
xchg
ja
hlt
mov
sub
add
aas
enter
pop
add
data16
lahf
in
xchg
sub
mov
stos
and
pop
dec
mov
push
test
push
std
cmp
shlb
dec
mov
out
out
mov
mov
rorb
ret
pop
adc
sbb
dec
dec
pop
jecxz
int3
hlt
mov
pop
data16
movsl
not
iret
and
xchg
enter
int
jbe
add
sub
sbb
hlt
jo
popa
mov
mov
scas
sbb
mov
in
cmp
pop
into
scas
jo
xor
aam
or
xor
adc
syscall
sub
loopne
sarb
outsb
aas
pop
mov
cltd
pushf
clc
cmp
dec
jo
xchg
cli
inc
xor
sti
loop
xchg
ljmp
mov
mov
mov
mov
mov
fwait
stos
inc
insl
je
sbb
ja
dec
stos
jecxz
aad
lods
sbb
or
fbld
dec
fidivrl
cmc
scas
dec
push
mov
and
xchg
sub
lods
push
inc
std
mov
fidivrl
lods
xor
js
mov
push
dec
and
mov
rcr
call
jg
shlb
xor
jle
pop
lret
call
addr16
dec
sub
add
jb
push
dec
mov
mov
add
movsb
pop
xor
add
iret
inc
or
fisttpl
rcrb
pop
iret
inc
sub
xchg
sub
and
cltd
ja
push
jno
xor
jo
fadds
mov
sbb
out
dec
sti
scas
push
sub
dec
pop
adc
test
jb
cli
iret
in
lods
mov
xor
sbb
pop
scas
lods
lret
push
icebp
push
xchg
pop
fsts
lock
mov
in
dec
add
out
xchg
sub
and
adc
add
fadds
popf
mov
mov
das
test
jb
imul
inc
in
ja
mov
sub
cmc
mov
repnz
cmp
js
mov
lods
vpunpcklwd
and
ret
inc
xor
sub
adc
sbb
mov
pop
divl
mov
mov
mov
pop
fstps
or
push
dec
mov
test
adc
in
out
cmp
jbe
dec
and
sub
pop
sti
clc
pop
and
lret
loopne
jg
scas
pop
int3
sub
jne
ljmp
hlt
fistpl
pop
es
cmpsl
enter
popa
mov
rol
inc
rclb
cld
out
sbbl
sub
cmp
xchg
icebp
mov
and
cmp
das
mov
roll
push
aam
pop
fldcw
clc
sub
and
and
loopne
mov
pushf
incl
push
into
mov
sbb
lods
dec
popf
dec
adc
outsb
fiaddl
xlat
loope
jg
loope
push
insb
rorl
into
jmp
movsb
mov
ljmp
das
cmc
sbb
lds
inc
and
sub
insb
mov
xor
pop
fisttpll
int3
cmc
pop
pop
inc
add
cmp
sahf
mov
pop
js
iret
inc
dec
lret
enter
jbe
aam
mov
mov
push
cmp
cmp
add
fidivrs
out
cmp
mov
jmp
out
adc
je
cwtl
loop
xchg
cmp
mov
adc
sub
call
cmp
add
lea
push
prefetch
or
mov
xor
cwtl
mov
inc
jb
rorl
bound
cmp
xchg
loop
subl
inc
mov
daa
call
rcrb
jae
imul
inc
fwait
insb
pop
mov
xchg
out
hlt
push
xor
mov
in
out
adc
add
std
xchg
pop
mov
inc
pop
psubb
dec
in
xlat
push
out
fildl
push
mov
mov
lahf
lods
xchg
fwait
out
inc
negb
pop
mov
xor
insl
xchg
inc
test
pop
aad
stos
mov
jmp
add
dec
loop
roll
xor
mov
jmp
mov
mov
xor
nop
scas
shrb
roll
sub
mov
adc
cwtl
xlat
xchg
insb
in
nop
icebp
sbb
adc
cmp
push
mov
pusha
mov
pushf
mov
xchg
jno
lds
in
mov
sub
pop
insl
push
xchg
dec
jmp
faddl
cli
cmpsl
xchg
xor
out
outsb
movsb
sti
dec
fisubrl
or
add
sub
into
push
cmp
add
lret
call
mov
rcrl
pop
pop
js
push
push
inc
test
pop
lock
rorl
into
xor
adc
add
shr
xchg
shll
mov
dec
fcoml
ret
jne
out
jecxz
adc
xor
sub
or
hlt
mov
push
pop
jl
jge
mov
sub
aad
push
pop
add
push
outsb
mov
add
jns
xlat
push
pop
adc
adc
mov
ja
xchg
testb
pop
mov
and
sbb
push
aas
lret
fstl
outsb
sbb
nop
jns
sti
dec
mull
mov
xor
dec
dec
mov
ret
xor
scas
adcb
js
xorb
or
xor
fwait
out
cmpsb
insl
add
ret
pop
int
lcall
dec
pop
enter
xchg
lds
aad
xor
outsl
mov
loope
sub
add
dec
pop
fucomi
cmc
dec
sbb
mov
or
mov
lcall
xchg
test
mov
adc
xor
inc
xchg
pop
bound
or
pop
fs
mov
mov
test
dec
cmpsl
arpl
adc
pop
icebp
enter
push
add
push
fwait
and
icebp
lret
setns
sub
cmp
lds
xchg
into
clc
push
lret
mov
push
fstl
cmpsl
mov
movsl
rorl
jge
shlb
pop
mov
pop
int
lods
xchg
xchg
add
out
js
sub
or
push
jne
push
jmp
dec
pop
jno,pn
xchg
in
rcrb
jb
rcll
jo
jle
cmp
sar
adc
lahf
jbe
loopne
dec
add
or
mov
push
mov
push
mov
sbb
cmp
in
push
in
stc
bnd
xlat
xchg
lret
push
aad
dec
ja
ret
popa
push
lret
insb
rcr
insb
pushf
xor
clc
dec
in
lea
sub
xor
xchg
dec
xchg
fidivs
lds
loope
cmpsl
shll
outsl
xor
insb
rorl
test
cld
xor
sbb
rcl
sbb
push
sahf
mov
or
xchg
cld
jo
test
mov
ficoms
lret
mov
cmc
int
xchg
shll
adc
jg
sub
insl
and
dec
adc
push
xor
inc
aad
fildl
outsb
sub
das
in
or
sub
rcrl
repz
xor
xor
loop
jmp
sbb
push
mov
xor
je
gs
inc
mov
movsb
xor
fwait
jnp
mov
sbb
test
pop
sub
cmp
sbb
leave
das
rorl
fs
das
inc
scas
scas
xor
and
ds
fdivs
ret
lds
in
xor
rolb
in
fucom
aad
pop
adc
insl
jmp
jbe
jmp
fistl
and
lcall
dec
jno
inc
pop
cmpl
gs
fwait
and
or
aad
cmpb
xchg
jge
stos
aas
aas
ds
xchg
pop
push
xor
je
push
inc
cltd
push
push
adc
pushf
xchg
or
fdivrs
mov
jle
inc
mov
xor
push
ja
inc
daa
xor
pop
adc
lret
fildll
dec
cs
dec
mov
popa
cmp
repz
loop
jno
adc
xlat
inc
flds
dec
addl
xorl
inc
ss
in
enter
xchg
mov
dec
inc
sub
sbb
mov
lahf
stos
add
mov
sub
aad
jno
mov
push
xchg
sub
mov
into
lods
out
inc
js
call
jge
dec
addr16
push
loope
pop
jl
and
negl
dec
data16
repz
adc
push
pop
ror
dec
mov
les
popa
xchg
shl
shll
mov
push
imul
push
hlt
mov
mov
lret
add
fstpl
jno
mov
lock
addr16
enter
fs
andb
jb
mov
add
out
fdivrs
mov
imul
outsl
fldenv
sbb
xchg
adc
dec
and
jno
nop
in
xor
mov
lods
mov
pop
mov
sbb
fistpll
outsl
aam
push
or
mov
add
movsl
push
sub
clc
adc
aad
fsubr
sarl
xchg
arpl
mov
outsb
fcoml
jecxz
fwait
jb
pusha
mov
jp
adc
and
test
jmp
sub
mov
mov
sahf
cmp
cwtl
mov
pop
dec
inc
pop
int
jmp
mov
dec
adc
dec
jns
jle
shrb
push
adc
popf
loop
daa
addr16
repz
dec
pop
sbb
xlat
lods
mov
fisttps
lret
outsb
or
sbb
or
mov
fbld
add
imul
arpl
dec
pop
rcl
test
inc
call
arpl
or
mov
out
lret
pop
iret
jne
sub
cmc
shll
or
jmp
xorb
push
push
hlt
jmp
out
sbb
cmpsb
sub
adcl
pop
lods
adc
xchg
xchg
cmpsb
lods
pop
inc
xor
testb
add
add
inc
cmp
imul
inc
imul
cmp
std
popa
pop
and
mov
sbb
pusha
insb
adc
sub
pop
adc
cmp
dec
sub
fiadds
inc
cld
faddl
xchg
mov
lret
popa
inc
sarb
out
int3
jg
in
xchg
mov
jbe
into
jecxz
rclb
sbb
loope
shlb
adc
arpl
adc
pusha
dec
outsb
inc
pop
and
dec
dec
jmp
xor
std
lea
pop
dec
sub
dec
mov
add
out
or
out
shlb
sub
sbbb
add
test
sti
les
push
out
xchg
iret
cs
cmc
js
sbb
loop
and
fcomp
push
rep
cmc
lahf
pop
ja
imul
js
and
xchg
stos
adc
daa
out
pop
fisubl
nop
mov
xlat
std
lcall
adc
in
pusha
shrl
int
gs
in
insl
push
cmp
outsb
xchg
mov
rolb
cmp
clc
mov
mov
pop
fwait
ret
outsb
sbb
fs
pop
jno
mov
pop
icebp
adc
sub
or
test
pop
mov
test
mov
inc
mov
testl
mov
lock
out
daa
cmp
scas
movsb
cwtl
and
or
rorb
lods
cmp
sbb
sub
ret
js
lret
xor
int3
mov
pop
into
lcall
mov
add
mov
popa
dec
cltd
cltd
push
call
lea
jp
pop
dec
and
sbb
aad
stos
imul
sar
fistl
out
outsl
insl
shlb
push
mov
xchg
mov
loop
adc
pop
test
pop
imul
inc
push
xchg
xchg
sbb
cmpb
mov
jmp
sbb
sbb
daa
pop
mov
aam
inc
mov
hlt
lds
cmpsl
cs
mov
cltd
jmp
aad
lret
mov
out
mov
adc
xchg
jp
xchg
sbb
mov
inc
daa
cmp
inc
addr16
pop
xchg
daa
push
xchg
jl
push
lods
jmp
sbb
push
in
test
adc
xchg
push
xor
push
cmpsb
jle
outsb
add
push
cmp
pusha
sbb
sbb
movsl
daa
add
dec
mov
emms
cli
pop
shlb
movsl
sub
popa
push
xchg
adc
rol
pop
test
cld
loope
push
leave
cwtl
ficoms
or
mov
test
es
pusha
jg
jo
inc
scas
popa
int
pop
cmp
mov
pop
fmull
jg
lea
cmpsl
pop
js
mov
daa
outsb
nop
jns
push
clc
pushf
mov
loope
aad
mov
dec
jno
cmp
clc
jge
loop
iret
sbb
mov
mov
cli
xor
jmp
rolb
jmp
mov
xchg
add
imul
sbb
sub
xchg
popf
lahf
xlat
xchg
ret
test
fcmovnbe
xor
stos
pop
test
loopne
into
push
and
pop
cwtl
aaa
dec
das
addb
push
sbb
pop
ret
fnsave
mov
and
je,pn
add
outsb
xlat
les
inc
cmp
fcomps
sub
mov
xor
test
iret
mov
aad
imul
sbbl
xchg
adc
fs
ret
add
cld
cltd
mov
loop
add
sti
pop
fwait
cmp
mov
lds
sbb
xchg
xchg
jae
push
mov
mov
ja
push
pop
xor
add
xchg
and
testb
lock
imul
jmp
xchg
lret
push
and
shlb
pop
cmp
shrb
inc
sbb
sub
shlb
or
repnz
jns
pop
add
mov
jecxz
fcmove
xchg
in
adc
mov
das
cmp
sub
mov
mov
mov
les
cmpsl
aam
mov
inc
call
or
and
mov
scas
push
xor
push
dec
jg
enter
out
insb
push
in
fisubrs
negl
lods
lds
sar
test
data16
push
jns
fstpt
std
add
test
stc
pop
dec
push
insl
adc
mov
sub
cmp
push
mov
test
xchg
ss
sbb
push
sbb
xchg
loop
into
pusha
inc
jmp
push
sub
inc
push
pop
or
into
pusha
test
test
aam
inc
outsb
mov
inc
mov
or
inc
hlt
mov
pop
sub
stos
leave
clc
jbe
mov
mov
xchg
sarb
fsubrp
adc
lea
xchg
mov
lock
call
xor
iret
xor
push
add
mov
cmp
cmp
clc
lahf
sbb
mov
and
lret
nop
xchg
sti
inc
xor
adc
dec
adc
or
cmp
and
sub
mov
fisubrs
call
aaa
jae
arpl
insb
lret
mov
mov
xor
lcall
int3
add
insb
xor
repnz
sti
std
mov
sti
and
pop
sahf
push
adc
dec
mov
mov
fistl
push
xlat
xchg
and
mov
lods
add
lods
push
xchg
jmp
sbb
pop
in
pop
jae
stc
mov
xchg
fucomip
inc
ret
cld
lds
push
loopne
repnz
addl
out
adc
int
add
jbe
adc
fcomip
mov
mov
pop
cmp
test
xlat
pop
cmp
add
xchg
cli
in
dec
std
push
arpl
int
das
add
or
pop
in
dec
or
push
xchg
ret
or
adc
aaa
lds
bnd
push
xchg
xchg
pop
ss
insb
dec
rol
sbb
add
add
loope
adc
rorl
repnz
leave
jmp
mov
xchg
push
out
xchg
xor
push
into
mov
xchg
cmpsl
fmul
mov
xor
notl
test
mov
or
push
adc
js
add
gs
jp
fwait
shll
jecxz
mov
jbe
pop
jae
je
ret
out
cld
and
fldcw
jmp
jmp
xchg
sbb
sahf
mov
dec
ja
pdep
pop
jmp
imul
dec
jo
push
das
cld
aam
pop
movq
push
movsl
mov
pop
sbb
cmp
fistl
xchg
pop
cltd
pushf
loopne
mov
xchg
mov
adcl
int3
push
and
add
inc
fs
sahf
shll
stc
xchg
pop
bound
cwtl
adc
decl
jmp
xchg
ret
adc
jecxz
fwait
xchg
clc
sub
push
icebp
jae
sbb
ds
js
loop
inc
jg
cmpl
fwait
iret
mov
popa
dec
jecxz
pop
stc
jmp
push
and
ljmp
pop
inc
out
sub
cld
push
and
lock
xchg
cmp
add
xchg
int3
stc
add
sarb
ret
pop
xor
jecxz
lret
jns
fstl
hlt
push
pop
stc
shll
lret
jo
stc
call
ljmp
inc
dec
insl
dec
call
xor
repz
icebp
and
dec
rcrb
aaa
imul
adc
call
dec
sbb
stos
pop
insl
push
daa
mov
push
add
push
mov
xchg
push
or
imul
sbb
cmp
in
mov
mov
pop
ljmp
xor
rorb
std
xchg
mov
jbe
aam
sub
test
jbe
xchg
addr16
rclb
cli
in
sub
orl
sbb
dec
push
ss
xchg
in
or
out
lods
loop
dec
add
stos
cld
inc
pop
mov
pop
mov
iret
sbb
pop
xchg
xchg
test
add
std
cmp
jb
and
stos
movsb
imul
mov
in
lcall
clc
leave
mov
iret
daa
stos
push
iret
popa
pusha
les
pop
ds
sbb
in
std
sbb
cli
sub
imul
and
sub
in
xchg
pop
mov
cmp
or
mov
mov
add
imul
call
cltd
and
jl
loop
adc
sub
inc
sub
imul
mov
out
jns
nop
shrb
test
shlb
nop
out
and
mov
or
jo
aas
xchg
adcl
pusha
jl
leave
or
sbb
mov
xchg
in
dec
mov
jge
outsl
setle
imulb
stos
jle
sub
das
out
pusha
sbb
sbb
stc
cwtl
pop
xchg
xchg
js
mov
adc
pop
xchg
fmuls
sub
pushf
pop
push
push
cmp
nop
out
xor
jp
add
inc
jecxz
xor
lahf
xchg
shlb
adc
dec
mov
push
jb
cmp
xchg
xchg
ljmp
mov
or
dec
push
push
pop
or
test
inc
xor
je
mov
ret
cmp
les
dec
xchg
dec
adc
lret
out
gs
fucom
mov
push
mov
repnz
ljmp
or
lret
jg
andl
das
cmp
stos
leave
es
push
cwtl
adc
add
sahf
cmc
push
lds
repz
ret
lock
pop
mov
adc
adc
xchg
imul
loop
sbb
mov
pop
or
add
mov
ja
cli
out
push
js
sbb
or
movsb
inc
cmp
dec
push
imulb
lret
pop
ud0
pop
jbe
pop
add
addr16
dec
je
decl
mov
repz
add
lock
push
insb
in
mov
push
jle
dec
cltd
hlt
xchg
popa
lds
push
lret
mov
adcl
sub
pop
cmp
jae
cmp
xchg
push
test
cmpsb
xchg
jmp
dec
push
jge
scas
add
xchg
fwait
push
lods
pop
icebp
or
out
fs
test
std
dec
jnp
mov
movsb
jno
or
jg
insl
push
mov
insb
mov
aas
outsb
mov
pop
and
sbb
pop
mov
cmp
mov
dec
cmp
imulb
iret
mov
sub
xchg
out
gs
inc
popa
push
pop
pop
fidivrl
je
sub
int
inc
aaa
cmp
mov
inc
iret
addr16
ror
cs
add
outsl
jmp
pop
push
and
movsl
adcl
mov
test
iret
sub
adc
cltd
xor
faddl
scas
mov
into
nop
sbb
lds
ficoml
jle
int
stos
testl
popa
dec
xchg
rcll
addr16
xor
outsl
cld
jmp
adc
loop
xlat
shll
movsb
nop
inc
xchg
and
xchg
sbb
cmpsb
pop
imul
sbb
ror
inc
js
cmp
fnsave
inc
jecxz
xor
push
cmp
mov
xchg
ds
push
iret
mov
push
jp
xchg
mov
push
inc
xchg
jp
dec
lods
int3
loopne
pushf
popf
out
icebp
ret
xchg
push
mov
xchg
cld
inc
xor
or
mov
out
inc
in
pop
pusha
popf
mov
call
dec
cmp
bound
rcr
jge
add
iret
xor
mov
bound
imul
ret
adc
mov
fdivrp
pop
sbb
fsubrl
and
push
xchg
ffree
jo
fdivp
out
ljmp
sbb
lahf
add
aad
idivb
sbb
add
int
lds
enter
aad
roll
into
mov
push
sub
inc
inc
sarl
in
pushl
insb
jnp
adc
popf
mov
sbb
or
mov
insb
jl
test
mov
call
push
popf
mov
mov
pop
aam
popf
xor
xchg
subb
mov
sub
ror
lock
lds
ss
es
dec
push
les
and
lret
nop
fdivrs
mov
xchg
dec
aaa
cwtl
addb
dec
xchg
sbb
rcrl
ret
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
movl
xor
or
mov
and
lea
mov
push
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
lea
mov
or
mov
and
mov
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
mov
addl
mov
add
sbbl
push
xor
mov
mov
movzbl
sub
mov
mov
adc
xor
mov
addl
add
movl
cmp
je
mov
movl
jmp
mov
movl
cmp
movl
jne
push
jmp
mov
movzwl
mov
cmp
jne
mov
incl
xor
add
mov
adcl
mov
mov
xor
sbbl
add
imul
and
mov
andl
xor
add
cmp
movzbl
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
jmp
imul
stos
sbb
inc
push
loopne
jl
dec
pop
jl
out
cli
push
dec
daa
std
pop
xchg
cmp
data16
movsb
inc
lea
clc
aas
jo
pop
aaa
clc
rorb
std
fwait
mov
call
cli
insb
je
and
push
adc
lock
cmpsl
sub
imul
mov
das
fisubrl
pop
ds
sub
push
idivb
xchg
fbstp
jno
lcall
inc
dec
out
mov
cmp
xor
pop
movsl
cmp
dec
sub
mov
add
cld
jl
popf
mov
xchg
int3
into
sbb
inc
push
sahf
ljmp
out
out
in
ljmp
mov
jbe
xchg
int3
popa
push
xor
add
gs
cli
in
rcrb
divl
add
scas
mov
jl
mov
push
mov
ljmp
bound
mov
or
push
es
sub
push
add
and
pop
jbe
outsl
jmp
jg
adc
repz
in
jnp
mov
mov
out
ja
negl
and
cltd
adcb
dec
ljmp
mov
or
and
mov
sub
outsl
pop
add
dec
fmull
jecxz
inc
xchg
xlat
adc
mov
mov
repz
mov
or
mov
aaa
test
and
push
lods
clc
mov
lahf
mov
aaa
sbb
test
divl
fildll
xor
lahf
in
xorb
enter
insl
inc
xchg
lock
int3
adc
push
aaa
jb
adc
lods
push
mov
cmp
adcl
outsl
mov
loope
repnz
adc
out
and
mov
test
test
xchg
and
mov
push
xchg
or
cltd
xchg
out
loope
xor
add
sub
scas
lock
mov
mov
dec
jle
es
mov
fwait
pop
push
cmp
fidivs
lds
in
cmp
inc
jb
sub
out
rdpmc
sbb
cmp
out
jo
cmp
out
les
mov
mov
inc
push
jnp
into
stos
enter
outsb
je
adc
je
aam
imul
or
js
mov
push
jp
loopne
js
insl
xlat
outsl
mov
pop
cmp
andb
push
mov
push
sub
xor
ja
xorl
xlat
cmp
adc
jg
cwtl
jge
add
mov
sbb
repz
cli
pop
add
rcr
insl
mov
popf
imul
jne
sub
stc
lds
add
mov
test
fs
mov
testl
fstp
and
or
mov
out
xor
shlb
in
pushf
push
decl
int3
ret
or
out
pop
popf
jo
lcall
popf
cmc
and
xor
sahf
insb
push
imul
jmp
adc
xchg
xchg
push
ja
sbb
push
lods
clc
mov
jb
aam
mov
pushf
movsb
mov
push
orl
xor
in
dec
inc
pushf
xchg
mov
sbb
xorl
xchg
and
imul
dec
jl
fsubs
jns
cmpsb
adc
int3
shlb
mov
imul
mov
ljmp
dec
fistl
jnp
adc
jmp
mov
jbe
push
push
dec
arpl
mov
repnz
rol
push
jge
add
sti
adc
xor
adc
mov
out
test
xorl
adc
lret
aad
ss
fdivp
adc
sbb
push
pop
dec
pop
lret
cmp
xchg
cmc
test
adc
mov
shll
dec
pop
mov
pop
jecxz
jne
pop
fisubrs
sbb
push
mov
cmp
or
cmpb
decl
adc
or
push
push
sub
jg
sbb
add
repnz
xchg
aas
pusha
or
cltd
jne
jae
adc
push
cmovo
repnz
fwait
sub
mov
lods
fistpl
mov
cmpb
mov
lods
dec
push
jns
dec
stc
pop
push
fldt
push
dec
daa
pop
mov
jle
and
insl
and
mov
lcall
stos
filds
sti
test
testl
pop
lret
adc
int
mov
cmp
adc
jg
push
fisubrs
push
out
stc
int
stos
pop
xor
ja
cltd
popa
mov
test
cmp
in
xchg
adc
or
hlt
cmp
clc
js
testl
minps
cmp
repnz
aam
dec
fists
inc
push
sbb
shlb
push
les
push
fsubs
stos
lods
sbb
or
repz
icebp
out
cld
jbe
in
and
dec
test
push
not
int3
popf
add
sbb
push
mov
sub
ret
sub
xchg
in
mov
jge
outsb
ror
jmp
into
repz
vmovupd
sbb
popa
push
stc
push
cmp
xchg
mov
push
mov
pusha
pop
shll
rorl
dec
mov
push
popa
push
adc
repz
mov
and
and
sti
sbb
ret
ret
adc
dec
adc
adcb
jbe
nop
or
xchg
pop
push
cmp
jl
push
mov
sbb
xchg
and
lahf
lret
mov
adc
ja
ficompl
repnz
mov
mulb
orb
mov
mov
jbe
inc
scas
cmpsb
repz
cltd
jmp
lcall
ror
jge
fcomi
lcall
cmpsb
and
jno
mov
cmpsl
pop
sub
out
mov
gs
ds
ja
rcll
loop
icebp
dec
popa
sbb
fstps
ss
icebp
or
sbb
shlb
loope
or
data16
and
sub
loopne
scas
pop
sbb
xchg
and
add
shll
mov
jmp
dec
aaa
sub
mov
test
clc
stos
out
push
outsl
lods
sbb
pop
dec
adc
mov
mov
aaa
push
lock
mov
mov
shr
fwait
push
add
pusha
cwtl
adc
mov
fadds
mov
int
test
arpl
jo
call
mov
dec
jmp
pop
mov
je
mov
mov
hlt
cmpsb
mov
add
or
int
cmp
insb
out
xchg
and
pop
mulb
jp
mov
add
aas
nop
xor
mov
paddd
pop
hlt
test
es
jecxz
xchg
fstl
push
sbb
fmull
pushl
add
cmpsb
sub
idivl
push
fsubrl
rcr
pop
je
push
ja
mov
shrb
pop
es
adc
xchg
cli
aaa
cmp
outsb
or
outsb
cmp
aas
pop
enter
xchg
pusha
inc
adc
and
pop
aam
mov
sub
cli
xor
lock
xchg
loope
adc
out
pop
pop
mov
mov
loop
shl
mov
ss
ja
xor
dec
inc
addr16
cmp
mov
out
ds
dec
data16
and
jp
orl
jecxz
jge
push
stos
push
and
gs
rorl
mov
xchg
lret
push
pop
shl
pop
decb
and
inc
cmpsl
xor
or
push
repnz
mov
loop
mov
jl
stc
mov
movsl
sub
and
lock
out
mov
xlat
rcr
inc
testb
in
pushf
out
repz
lret
xlat
les
fsubs
lret
or
out
loope
jns
psubusb
pop
outsl
mov
hlt
jne
cmp
mov
int
cmpsb
sbb
shrb
jmp
out
outsb
mov
outsl
mov
leave
dec
dec
fadd
arpl
jns
cmp
pop
das
mov
loopne
dec
pop
add
cli
incb
jo
repnz
mov
cs
jno
jecxz
mov
push
mov
cmpsb
dec
ret
and
sbb
or
aam
mull
in
mov
dec
xchg
insb
es
negl
and
pop
jecxz
jl
xchg
js
out
jbe
pushf
pop
aad
movsb
outsb
adc
inc
fprem
inc
adc
shll
cs
jb
and
pop
push
pop
rclb
jb
loope
xor
jae
test
pop
addr16
call
lods
cli
cmc
aam
sub
out
mov
or
into
pop
inc
mov
cmpsl
stos
mov
lea
push
ss
xchg
movl
out
mov
int3
sarb
inc
mov
jae
test
call
test
stos
std
scas
imul
hlt
stos
lea
repz
mov
andl
mov
mov
aad
adc
daa
inc
add
jns
fcompl
nop
xor
fimuls
lea
cmp
fists
lock
adc
ret
sbb
inc
cmp
loopne
dec
sti
mov
dec
jl
imulb
aad
ss
mov
pushf
in
loope
mov
mov
das
or
jo
and
pop
in
mov
pop
xor
jno
push
cmpb
in
daa
xorb
mov
cmp
mov
inc
inc
push
and
stc
dec
lahf
aam
mov
mov
sbb
mov
push
xchg
pop
popf
pop
sti
sbb
out
fidivrs
mov
add
xchg
cli
xor
in
add
sbb
hlt
ds
outsl
test
fidivrl
test
add
adc
mov
jle
sbb
out
mov
cmp
adc
insb
notb
adcl
jle
pop
push
scas
xor
hlt
imul
xor
mov
jg
cmovnp
xor
or
xchg
mov
int3
daa
jmp
rclb
mov
xor
xchg
fists
in
lret
pop
add
pop
xor
mov
sub
and
xor
mov
cmp
test
test
lret
sub
clc
addl
jg
stos
xchg
clc
faddl
mov
sub
fisttps
mov
faddl
xor
arpl
xor
push
xchg
jb
repz
add
adc
jo
cmp
mov
lods
scas
sbb
pop
lret
ss
add
iret
jno
push
sub
sub
sbb
out
mov
mov
inc
xchg
and
adc
push
pop
ss
mov
xor
dec
push
add
xor
mov
out
gs
and
aaa
push
mov
sbb
sbb
add
je
xchg
sbb
pop
cmpsb
add
xchg
call
repnz
sub
aam
mov
mov
clc
andb
sbb
scas
pop
sbbb
ja
clc
test
repnz
adc
bound
xor
or
xor
push
xchg
test
jmp
inc
sbb
xchg
push
sti
rclb
inc
push
adc
pop
mov
mov
push
push
testl
fsubl
sahf
dec
jp
sbb
cli
andb
insb
add
push
cmp
loopne
adc
push
cld
jp
ficompl
pop
fidivrl
jae
addl
dec
fnstenv
int
in
cmp
push
jmp
out
jg
inc
mov
shr
in
jge
push
out
mov
scas
and
pop
out
callw
pop
pop
ret
xor
sbb
push
ds
cltd
or
push
repz
or
fsubs
adc
xchg
add
leave
and
andb
mov
aaa
cmpsl
mov
pushf
int3
js
dec
push
adc
ja
adc
movsb
xchg
dec
cmp
push
xor
xor
lcall
int3
push
add
mov
repz
roll
mov
add
je
cmp
fidivrl
fildll
and
dec
mov
call
int3
mov
out
aam
cmovne
xor
test
filds
or
dec
into
ficoml
pop
mov
jno
mov
sub
and
mov
xor
pop
and
push
je
dec
decb
ret
int
add
icebp
lods
push
jmp
xchg
push
call
xor
jbe
cs
mov
cli
xchg
sub
insb
imul
out
add
jl
ficoms
sbb
daa
addb
pop
sbb
fnsave
cmp
jg
cmp
push
mov
test
imul
dec
gs
pop
push
lds
movsl
push
hlt
xchg
xor
pop
and
mov
lods
and
mov
xchg
dec
jmp
jecxz
addr16
adc
dec
outsb
in
xor
mov
enter
insl
pop
mov
adc
mov
lret
and
add
insb
or
dec
lret
icebp
fs
hlt
addr16
cli
add
rcrl
movsb
and
push
add
add
xchg
div
adc
or
inc
push
sub
neg
sub
and
aas
mov
mov
mov
push
daa
stos
out
enter
int3
leave
ret
mov
push
icebp
in
scas
fmuls
loope
and
lods
mov
xlat
xlat
and
cld
push
pusha
sub
inc
roll
mov
in
leave
sbb
pop
and
mov
cmp
rorl
imul
jg,pn
or
push
movsl
inc
or
mov
popf
mov
xchg
das
mov
dec
adc
daa
aas
xchg
ja
call
in
push
jbe
cli
test
mov
outsl
mov
lret
cwtl
mov
jp
fcmovnu
inc
faddl
stos
mov
lods
sbbl
sarb
xchg
xor
xlat
lea
loope
xor
cmpsb
popa
fistl
mov
sahf
sbb
sbb
sbb
out
dec
mov
mov
mov
push
push
in
adc
mov
in
rcrl
dec
test
jno
adc
inc
mov
fxtract
fwait
mov
and
in
push
cmpsl
in
pop
packssdw
iret
stc
daa
adc
aaa
add
notb
jb
cmpsb
jb
push
scas
scas
insl
sbb
cmp
jmp
daa
mov
repz
scas
jle
mov
dec
mov
pop
scas
dec
inc
push
test
pusha
rcrb
adc
cmp
addb
xor
mov
sub
loopne
in
cmp
mov
sbb
idivl
pop
inc
push
mov
jnp
shrl
call
int3
mov
xchg
lods
sub
jp
scas
mov
push
popa
inc
hlt
jo
push
xchg
rcrl
imul
inc
cmpsb
sarb
ds
fnstsw
test
pop
loop
adc
test
xor
cld
or
insl
lcall
mov
or
insb
push
jmp
mov
xchg
xchg
xor
outsb
cmp
mov
cld
mov
and
add
cmpl
int3
inc
add
ret
popf
xor
aas
or
test
sub
scas
mov
push
int3
push
cmp
subb
loope
lock
arpl
xorb
out
loopne
add
push
test
cmp
daa
fidivl
into
mov
int3
test
sub
sbb
nop
sub
cli
fstpl
mov
mov
fcoml
mov
mov
mov
out
add
call
dec
add
jl
stos
mov
push
pop
inc
xor
rorb
fwait
arpl
popf
std
xchg
das
ljmp
in
adc
xchg
leave
scas
cmp
cmp
repz
pushf
pusha
push
push
push
pop
dec
xchg
data16
sbb
or
mov
stos
outsl
sarl
arpl
jl
inc
lret
sub
jl
or
insl
push
sub
mov
in
test
push
push
or
push
cmp
xchg
dec
pusha
mov
test
cmp
fldl
inc
dec
test
lret
arpl
sti
jp
pop
jg
add
jecxz
inc
fbstp
jnp
gs
ret
test
mov
pusha
movsl
fisubrs
lods
xor
andl
mov
test
or
cwtl
ret
jl
adc
loop
adc
inc
aad
inc
mov
mov
cmc
scas
test
cmp
int
mov
ja
imul
clc
mov
adc
cmp
adc
sbb
lods
push
and
std
je
fistl
scas
mov
js
xchg
and
add
mov
mov
test
push
das
adc
xchg
add
lret
lret
stos
xlat
fildl
or
xlat
mov
xchg
div
and
aas
loope
mov
adc
int
mov
add
sub
pop
js
fidivrs
lcall
jae
lock
mov
orb
or
les
loopne
aad
ret
cmc
adc
clc
mov
cmp
adc
movsl
and
xchg
bound
mov
cmp
xchg
stos
lret
mov
in
call
sub
lcall
mov
mov
push
inc
insl
jns
add
shlb
mov
stc
lea
dec
loope
inc
imul
mov
add
xchg
into
data16
and
push
push
ficompl
inc
fs
pushf
adc
jnp
lahf
enter
cmp
jle
aaa
lret
into
mov
divb
cmp
ret
aam
fidivrl
push
or
shlb
shlb
push
xor
push
out
push
mov
pop
sub
mov
cs
xchg
and
jge
ss
cmp
push
cmc
sub
lret
add
dec
xor
test
inc
mov
push
imul
gs
mov
pop
rcrb
mov
movsb
cmpsl
sbb
hlt
dec
inc
movsl
fisubrs
mov
jne
je
mov
xchg
pop
xchg
ljmp
imul
or
pop
push
dec
pop
cmc
mov
xor
test
sub
sbb
pusha
jp
idivl
mov
pushf
inc
cmpsb
aaa
sbb
adc
adc
adc
data16
imul
popf
scas
testl
js
push
sub
iret
mov
pop
lahf
test
and
lea
mov
mov
stos
push
jg
inc
ds
fbld
mov
mov
outsl
inc
das
rolb
fsubl
or
sub
cmp
mov
movsb
lret
push
push
mov
test
push
dec
add
xor
pop
mov
fnsave
sbb
out
mov
push
jb
repnz
imul
int
sar
mov
idivl
scas
pusha
xor
push
add
xchg
cmp
xchg
mov
xor
pop
cmp
xlat
pop
pushf
mov
mov
or
jmp
inc
mov
jp
stos
mov
xchg
out
mov
loopne
mov
fsubrs
pop
jns
fcompl
aas
inc
sub
into
adc
les
test
je
je
pop
lret
inc
push
jno
jg
mov
and
pusha
or
sub
cmp
cmp
add
sub
cli
inc
je
inc
push
mov
jge
adc
jp
test
lods
push
pop
and
push
int3
or
int
sbb
lea
int
jmp
and
mov
rclb
sub
sub
sub
push
xorb
leave
ljmp
inc
adc
test
jl
xor
lret
in
sbb
mov
xchg
xchg
lret
xor
add
sbb
add
ficoms
mov
mov
mov
in
lock
adc
cmp
je
popa
out
mov
testb
je
int
vrcpps
pusha
push
dec
jbe
mov
lods
test
push
sarl
test
lea
xchg
cmc
cs
sub
jp
xchg
test
jno
mov
std
insl
adc
stos
sub
jg
cli
push
mov
mov
lret
or
stc
inc
pop
and
leave
rcrb
into
sbb
repnz
jge
push
dec
cmp
pop
or
inc
sbb
lock
shl
ja
mov
loop
fbstp
add
aam
cmpb
mov
out
bound
testl
cmp
lds
mov
out
mov
cwtl
cmp
and
mov
mov
scas
stos
std
push
pop
mov
cmp
out
mov
bound
movsb
jmp
mov
shrl
push
punpcklbw
jnp
mov
or
add
pusha
stos
shrb
jns
inc
or
jne
dec
rorl
fsubrl
lahf
fadds
xlat
insl
ficompl
je
jge
fimuls
xor
sub
cmp
jp
mov
dec
sub
imul
add
xor
mov
arpl
fsubrl
push
adc
jns
mov
bound
jmp
ret
cltd
int
pop
sub
and
mov
adc
dec
xlat
mov
test
outsb
jp
daa
aaa
cwtl
int
jl
mov
inc
push
xchg
insl
xchg
jge
fwait
movsb
mov
icebp
dec
imul
movsl
cs
and
adc
outsb
inc
xchg
jecxz
les
and
fwait
leave
pop
add
out
jl
out
daa
jnp
and
xor
push
aaa
cs
test
pop
loop
cmpsl
sbb
rolb
fldt
lcall
mov
sbbb
insb
mov
in
mov
adc
cli
sysexit
cltd
stos
sahf
xchg
cwtl
sub
xchg
sti
or
xor
mov
out
push
scas
sahf
pop
into
add
fdiv
lahf
mov
cs
jge,pn
mov
lcall
fbld
popa
lahf
add
les
sbb
stos
mov
jbe
push
mov
push
daa
or
mov
ss
insl
xchg
lock
dec
inc
loopne
mov
mov
repnz
std
lea
xchg
das
cli
jns
fstl
dec
jmp
test
js
loop
jns
sub
mov
fidivrl
imul
fcompl
shlb
adc
push
mov
cli
pop
mov
nop
inc
push
mov
lret
cld
out
mov
inc
fiadds
pusha
fucomi
mov
lods
push
jns
mov
lahf
addr16
dec
ficoml
mov
dec
cli
rcl
sub
push
mov
xchg
and
mov
loop
test
or
push
xchg
cmp
lods
xchg
subb
jne
xorl
push
cwtl
inc
stos
xchg
cmp
mov
repnz
adc
mov
and
fs
jp
mov
loopne
dec
dec
mov
dec
out
adc
mov
imul
imul
jns
jecxz
or
jb
add
lods
jnp
leave
adc
pop
mov
mov
pop
pop
mov
ret
and
pop
popa
cmp
lret
dec
xor
ja
mov
and
shr
mov
out
push
dec
and
lods
push
cmp
sbb
dec
aam
mov
mov
aad
push
inc
adc
outsl
popa
dec
inc
adc
movsb
dec
lea
mov
dec
dec
adc
add
mov
dec
push
mov
test
shlb
lsl
shl
pop
mov
pop
cmp
mov
les
repz
add
jp
inc
outsb
iret
out
cmp
mov
shlb
dec
push
jae
or
mov
popf
bound
dec
or
lret
push
ret
or
and
sar
jbe
mov
mov
pop
and
dec
push
sub
stos
xorb
pop
test
mov
mov
xchg
sarl
push
aam
ss
rcrl
xchg
test
les
push
jns
cmpsl
xor
scas
cmc
bound
pushf
in
push
enter
je
jb
into
xchg
rcl
shl
out
call
mov
pop
out
sub
and
sbb
jo
das
and
lods
sti
lahf
sub
xor
into
lret
xchg
cli
jg
mov
lret
push
sbb
pusha
xchg
fisubl
hlt
and
or
sbb
roll
and
adc
jmp
dec
jb
movsb
jmp
pop
dec
push
sbb
stos
pop
pusha
xchg
add
sbb
add
clc
test
or
inc
mov
divb
test
sbb
mov
xlat
push
outsl
pusha
cs
fidivrl
mov
sub
repnz
in
hlt
out
inc
xor
repz
push
push
mov
xchg
inc
ffree
adc
icebp
cmp
int
int
fistpl
xchg
lea
mov
aad
push
or
popa
push
xchg
xchg
mov
add
stos
jbe
in
nop
mov
aam
arpl
and
cmpsl
mov
cmp
mov
xor
mov
int3
bswap
sti
pop
insl
out
or
inc
loope
bound
loope
data16
add
lock
shll
mov
data16
movl
pop
mov
sbb
dec
cwtl
les
lock
sub
aam
stc
imul
repz
mov
pop
clc
xor
nop
jle
inc
sub
inc
xchg
adc
xchg
dec
adc
pop
mov
cmp
sbb
adc
pop
cmpsl
pop
mov
dec
ljmp
ljmp
mov
stos
dec
push
ds
cld
mov
loop
bound
cmp
or
xchg
ror
mov
mov
xchg
push
pop
sarb
pop
push
aas
xchg
outsl
shrb
xchg
aas
insl
mov
inc
iret
movsb
ja
sbb
cltd
shrl
xor
add
ds
nop
push
add
cmp
jg
pop
or
stc
out
shrl
pop
cmpsb
dec
xchg
cmp
lods
pop
cli
xchg
lods
sbb
cmp
insl
iret
pop
js
adc
out
ret
test
xchg
push
jmp
lods
cld
dec
shlb
and
mov
ljmp
mov
pop
mov
insb
push
push
popf
cs
push
or
and
loop
mov
les
jmp
rolb
test
or
jle
fisubrs
jno
gs
cmpsl
inc
incb
bound
in
pop
lock
inc
push
inc
push
fwait
outsb
pop
mov
sub
add
mov
mov
sbb
mov
jb
sbb
push
pop
mov
push
jno
fildl
mov
pop
leave
adc
sub
movb
loop
in
out
aas
or
test
xchg
test
gs
or
mov
adc
sub
cld
fsubs
mov
mov
and
subb
sbb
sub
mov
jp
add
or
jmp
sbb
shl
xor
imul
pop
orps
push
and
inc
inc
repz
mov
inc
lret
pop
jp
imul
ds
lods
hlt
das
and
popa
push
mov
sbb
nop
xchg
inc
popa
mov
and
cli
jle
out
cli
mov
bound
inc
dec
lods
jecxz
jmp
xchg
mov
or
movsl
ja
push
mov
rolb
inc
test
fcompl
fs
jp
ret
jl
push
test
pop
xor
mov
dec
jo
and
mov
cmc
jne
xchg
sbb
subl
xchg
push
rcll
mov
imul
jns
fs
int
xchg
aaa
dec
orl
mov
push
xor
sbbb
pop
jne
xchg
call
gs
sahf
sub
mov
lret
and
cli
int3
insb
cmp
mov
push
sub
jns
dec
xchg
mov
fldenv
movsb
arpl
xchg
sarl
and
imul
mov
aas
dec
negb
jno
push
ret
and
jmp
inc
cltd
jbe
ljmp
jno
in
icebp
inc
cs
jmp
int3
push
aad
sub
addl
mulb
test
lods
loope
cwtl
out
enter
sub
add
pop
dec
inc
add
jmp
cmpb
push
add
adc
adc
jecxz
inc
pop
cmpsb
sub
sti
hlt
test
pop
jmp
mov
mov
xchg
xor
mov
dec
lret
ss
stc
sahf
outsl
adc
in
sbb
scas
das
mov
or
movsb
inc
cmp
ja
jne
jecxz
lret
imul
or
mov
sarl
data16
cmp
push
xor
js
ja
xchg
sub
sub
mov
pmulhuw
subl
fnstenv
adc
and
dec
push
jge
cld
outsl
roll
push
incl
xor
jae
hlt
add
int3
push
arpl
mov
push
sbb
cmp
mov
enter
vmread
mov
and
mov
sahf
test
mov
in
inc
out
push
in
lret
xlat
aaa
nop
stos
std
mov
mov
push
arpl
push
outsb
jecxz
push
mov
lea
in
inc
inc
out
fs
frstor
flds
movsb
sbb
loop
cmp
ljmp
frstor
adc
sbb
out
xchg
stos
stc
xchg
movsb
daa
lret
std
or
shr
es
fdivs
jne
add
jecxz
lock
loope
loop
sub
lret
mov
cmp
or
ja
lret
xor
add
sub
int3
rcl
push
adc
rorl
icebp
adc
pop
jg
xor
cmpsl
ljmp
idivb
pop
or
push
mull
jecxz
gs
je
xor
sbb
jne
inc
fldenv
fiaddl
and
jmp
xchg
adc
sub
rcl
out
dec
int3
push
adc
fdivl
lods
xor
test
mov
imul
mov
pop
pusha
enter
inc
mov
sti
icebp
aad
inc
mov
test
sub
cmp
mov
fistpl
popf
addr16
mov
cmp
aaa
je
shlb
mov
pop
jne
test
jo
xchg
adcl
subb
sub
dec
xor
shll
mov
das
xchg
shl
stc
mov
push
mov
int
in
pop
and
dec
ljmp
push
in
std
mov
mov
pop
scas
dec
test
mov
jbe
fs
cld
dec
scas
mov
jge
pop
mov
cltd
in
cmp
xchg
sub
dec
pop
js
add
stc
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
andl
mov
mov
mov
xor
add
mov
movzwl
and
mov
mov
sbbl
xor
adc
push
sub
mov
movzwl
sbb
mov
negl
add
xorl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
push
andl
xor
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
push
call
jmp
and
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
push
mov
mov
xor
xor
mov
add
add
imul
mov
jmp
mov
in
xor
mov
insb
sahf
iret
and
pop
jl
cs
repnz
dec
jmp
insb
xchg
stos
mov
leave
aad
sub
add
add
pop
add
and
in
filds
or
mov
jecxz
add
cwtl
xor
pop
addr16
dec
addr16
les
in
sub
int3
test
test
out
fildll
fldt
mov
rcrl
scas
pop
lods
adc
int
add
je
lret
or
xchg
and
cli
imul
lds
cmpsb
outsl
fwait
cwtl
inc
lock
int
or
fwait
adc
mov
add
mov
xchg
jge
cmp
aad
jmp
leave
or
movsl
inc
mov
aam
mov
push
inc
imul
inc
dec
lcall
fcomps
addr16
loop
mov
call
int
mov
out
sbb
decl
dec
into
incb
adc
xchg
sahf
dec
shl
mov
push
cmp
lahf
mov
fldenv
je
mov
fcomip
push
xor
or
sub
fwait
das
push
inc
daa
adc
sarl
pop
dec
xchg
lea
dec
inc
push
push
addl
scas
lret
or
imul
jmp
std
sub
adc
fsts
inc
pushf
aam
daa
subl
out
jecxz
aad
add
adc
insb
imul
cmpsl
mov
push
repnz
and
mov
mov
fisubl
adc
movsb
fisubrl
adc
imul
fnstenv
cmp
mov
xchg
inc
das
push
and
dec
idiv
iret
pop
stos
in
add
and
xchg
sbb
leave
sub
jno
inc
push
sbb
or
mov
sti
mov
cmc
xor
hlt
shrb
loope
lea
xor
mov
movsl
sub
rcrb
add
push
jae
lret
jns
scas
mov
cmpl
test
mov
hlt
fwait
cli
jb
cli
aad
js
sub
fcompl
inc
mov
mov
incl
xchg
xchg
jnp
push
jns
cmp
mov
rcrb
add
cmp
mov
dec
add
xchg
or
jns
arpl
ja
cmp
push
mov
mov
imul
lods
adc
fdivrs
mov
lret
mov
jbe
add
adc
aas
hlt
and
inc
sbb
stc
bound
ss
testb
add
pop
iret
dec
dec
xor
jl
out
stos
push
orb
loope
pop
sbb
inc
les
cmp
jnp
push
xchg
dec
or
jg
or
add
daa
pop
mov
dec
stos
jmp
fcoms
pop
jge
mov
aam
pop
or
daa
leave
mov
cmp
mov
mov
js
je
jle
pushf
dec
in
fsubs
cmp
xchg
movsb
sub
cmp
jmp
pusha
lret
mov
mov
nop
das
leave
lock
outsl
or
mov
inc
and
js
addl
mov
pusha
out
sbb
gs
sbb
pushf
mov
and
iret
push
jne
test
mov
or
xor
inc
dec
gs
cmp
scas
adc
pusha
mov
sahf
jmp
inc
cmpsb
loop
out
fbld
sti
fdivrs
movsb
gs
jmp
or
fadds
pop
sti
ss
pop
sub
mov
cld
idiv
shll
fisttps
lea
lret
cltd
movl
and
fnstcw
fstps
je
sti
jmp
test
sub
in
icebp
mov
jle
mov
jnp
cltd
notl
shld
lock
and
inc
int3
xchg
hlt
aad
adc
cwtl
push
cmpsl
in
inc
push
stos
xor
out
sub
and
pop
mov
sbb
out
sbb
xchg
scas
and
dec
fldcw
jmp
jns
or
push
and
dec
xor
imul
xor
mov
xchg
and
insl
in
pop
sub
test
pop
pusha
stos
push
test
test
in
rdpmc
rorl
jmp
ret
mov
or
dec
movsl
cpuid
insl
mov
or
xchg
cmp
les
jbe
dec
jno
push
mov
push
mov
xchg
sbb
outsl
cmp
repz
cmp
into
daa
mov
push
insb
jmp
xor
pop
in
and
cmp
inc
ja
pusha
push
mov
jb
aad
lcall
ficompl
nop
push
mov
jbe
test
lcall
sub
pop
fwait
dec
mov
cmp
rclb
or
shrl
call
popa
in
sub
fwait
inc
out
call
jbe
pop
inc
add
fnstsw
lret
lds
pop
inc
xchg
int3
data16
xor
lods
jbe
jo
jbe
addb
sub
iret
push
insl
ret
add
loopne
mov
out
jge
push
sub
xchg
pop
sub
xor
repnz
or
outsb
pop
sar
push
jg
pushf
mov
lret
int3
sub
mov
test
jl
xor
in
jle
adc
and
add
movsl
stos
xor
out
lock
push
pop
stos
fnstsw
adc
mov
adc
adcb
shrb
mov
or
pop
jnp
push
data16
sbb
xor
dec
clc
shlb
inc
sbb
mov
aam
mov
test
jns
aam
sub
inc
cmp
pop
cmp
or
or
imul
cmp
xor
mov
in
add
or
rcrl
sbb
pop
mov
xchg
mov
loop
push
adc
inc
cltd
jb
mov
xor
pop
pop
mov
into
push
pop
gs
loop
stc
xchg
negb
repnz
inc
jb
or
jle
popa
test
jp
ljmp
jb
sub
lods
mov
mov
icebp
xchg
or
dec
pop
jbe
sti
movsl
sbb
sub
adc
aas
sarb
xchg
les
add
fwait
jp
add
fs
push
into
out
cwtl
nop
sbb
addl
enter
and
in
dec
iret
mov
call
movsl
cmp
js
test
pop
jne
imul
xchg
imul
aaa
adc
push
cmp
ret
ss
lock
pop
xchg
adc
int3
test
pop
in
decb
push
or
xchg
push
cmc
mov
scas
inc
sub
push
adc
or
aad
xchg
movsl
sbb
ds
insb
mov
cld
shlb
psrad
dec
incl
push
jp
sbb
jae
dec
jp
imul
mov
leave
adc
mov
fwait
xchg
sti
mov
iret
jge
aaa
mov
mov
sub
push
repnz
jecxz
mov
popf
add
out
nop
xchg
xorl
xor
fists
push
in
shr
stos
mov
jo
lea
cmp
and
sahf
xchg
in
pop
jecxz
lock
cwtl
and
aaa
in
shll
lock
jl
or
dec
pop
ja
fdivl
outsb
xchg
lds
mov
push
call
xchg
fimull
inc
xchg
rcrl
dec
jecxz
sub
hlt
std
mov
aaa
lods
jb
rclb
push
gs
jae
lds
push
iret
xor
fcompl
and
lret
fldl
push
lret
dec
xor
sub
dec
test
mov
push
enter
pop
pusha
inc
fs
repnz
shll
mov
jb
sub
insb
rcl
lahf
rcll
fidivl
cli
mov
iret
popa
dec
stos
arpl
sbb
xorl
jge
sarl
add
push
add
jb
fiadds
mov
and
xchg
push
call
xchg
mov
add
xor
pop
dec
test
pop
cmp
cmp
adc
inc
jle
push
pop
movsb
or
arpl
test
flds
lods
mov
pop
loop
inc
enter
mov
fldl
sub
jg
repnz
xlat
xchg
push
ljmp
inc
stos
add
shl
mov
and
mov
push
mov
or
iret
jp
ret
adc
aad
imul
jne
mov
add
jne
stc
lret
loopne
gs
blsic
adc
cmc
into
mov
aas
add
or
cmp
jle
dec
gs
cmp
push
jecxz
mov
pop
daa
xchg
lret
inc
push
lret
sbb
cwtl
dec
xchg
xor
stos
pop
fs
mov
jl
mov
outsl
repnz
push
mov
dec
xor
into
pop
jp
inc
movups
xchg
fdivs
jmp
call
imul
cs
jmp
ja
leave
sub
stos
push
stos
sbb
int
inc
int
aad
xchg
std
test
ss
jne
dec
sbb
dec
lods
pop
aas
int
fsubl
push
or
test
jl
adcb
xchg
xchg
test
inc
fcmovbe
sbb
ljmp
xchg
and
cld
aad
int
xchg
xor
cmp
stc
repz
push
jae
push
jge
xor
test
push
add
adc
mov
cwtl
lahf
sub
or
gs
add
fwait
dec
and
adc
sbb
mov
jmp
jb
scas
mov
call
pusha
push
in
out
jne
adc
mov
pop
xor
mov
sar
in
in
mov
pop
mov
cli
out
cmpl
cmp
out
pop
sub
dec
jecxz
cli
inc
shlb
ret
mov
mov
pusha
xchg
add
cld
xchg
pop
test
pusha
pop
add
decb
arpl
mov
idiv
mov
enter
and
pop
fwait
xor
dec
mov
push
std
dec
mov
sbb
inc
imul
dec
xor
cmp
xlat
das
test
and
and
adc
mov
sbb
je
push
dec
fmulp
pop
and
xchg
sub
xchg
push
add
dec
cmp
hlt
sub
xchg
stos
das
inc
dec
sbb
out
push
sub
jo
call
xchg
movsb
xchg
nop
call
xlat
fsubrs
rcll
dec
les
stc
adc
es
imulb
and
sbbb
add
cmp
add
mov
push
aas
cmc
imull
jmp
icebp
pop
int3
fwait
int
test
icebp
jmp
in
and
icebp
leave
jl
xchg
lcall
push
inc
ja
xchg
push
xor
dec
xor
fstpl
cmp
fwait
xchg
roll
adc
dec
out
push
nop
addl
mov
shlb
adc
mov
pop
movb
and
fwait
mov
out
sub
adc
mov
shl
dec
fildll
mov
pop
insb
lods
cwtl
int3
xchg
aad
jo
jmp
and
in
flds
insb
shll
jb
insl
sbb
pop
retw
adc
out
mov
outsb
outsl
mov
dec
push
popa
icebp
xchg
adc
or
mov
sarb
push
xchg
sar
loope
iret
int
sub
ret
in
repz
xchg
repnz
sub
sub
lcall
sti
mov
fstpl
call
adc
ja
inc
jno
xlat
push
jnp
xor
std
out
imull
stos
jp
inc
mov
notl
enter
imull
mov
pop
sti
movsl
aam
or
cvtps2pd
sahf
andb
ficoms
xor
inc
jg
push
movsl
lret
fdivrs
ja
push
add
aas
cmpsl
imul
mov
pop
pop
stos
je
outsl
ret
aam
mov
jnp
adc
int
sarl
cmc
pop
cmp
mov
imul
push
rcll
cmp
inc
aaa
xchg
faddl
dec
lcall
jecxz
jo
sbb
fistps
and
roll
add
test
lcall
ja
hlt
das
and
in
sub
or
enter
dec
test
repz
rclb
into
out
divb
cmp
iret
pop
jle
sti
sarb
and
add
pop
cmpsl
sbbl
out
popa
int3
repz
and
push
fsubrl
das
xor
and
pop
cmpl
pop
and
mov
push
push
or
pop
loopne
pop
push
cli
int
jmp
push
adc
xchg
push
out
dec
mov
mov
or
icebp
adc
call
mov
sub
in
adc
movsb
push
out
cld
sahf
pop
sahf
rcrl
dec
inc
inc
je
or
movsb
notb
stc
xchg
test
mov
addl
lret
std
pop
lea
pop
push
cld
sbb
xchg
popa
out
mov
sub
ds
popa
aas
inc
mov
cwtl
repnz
insb
sbb
arpl
fisubrs
jne
popa
stos
push
sbb
mov
sbb
pusha
sbb
test
jecxz
jnp
mov
add
xchg
out
sti
inc
mov
sub
bound
in
xchg
stc
pop
sub
jecxz,pt
scas
aam
pop
dec
fs
leave
xchg
mov
adc
cli
xchg
add
stos
or
mov
addr16
ss
mov
dec
dec
andl
roll
test
push
cs
add
sbb
sub
and
xor
nop
xchg
jmp
out
sbb
mov
add
insl
add
push
xlat
pop
add
loop
xchg
add
sub
ret
dec
mov
xchg
push
jne
in
xor
pusha
xchg
jg
icebp
rolb
mov
inc
insb
pop
int
push
push
mov
bound
mov
ss
rclb
rolb
cld
lods
inc
data16
add
fsubs
shll
sbb
into
retw
movlps
out
ja
sbb
enter
aas
call
mov
pop
or
jle
inc
sbb
and
cmp
adc
or
enter
cmp
xchg
sar
imul
add
mov
divb
xor
push
enter
int
jg
push
insl
nop
pushf
jp
aaa
sub
xor
ja
out
mov
push
inc
and
lret
adc
push
pusha
xchg
jno
xchg
inc
js
loope
subb
jnp
mov
xchg
jecxz
lock
mov
xor
inc
cld
jnp
jb
lea
dec
fstpt
pop
fcoml
and
dec
inc
xlat
sbb
lret
test
add
ret
dec
mov
xor
iret
lds
mov
cmp
sbb
push
mov
sub
or
sbb
ljmp
fwait
es
cmpsb
insb
xchg
jl
cmp
sahf
ret
push
cmp
ret
mov
imul
jge
fstpt
mov
pop
ja
lcall
cwtl
out
adc
inc
and
mov
addr16
sti
imul
or
pop
and
inc
cmp
cltd
mov
push
repnz
clc
push
test
repz
push
movsl
icebp
andl
pop
jl
sub
push
xchg
int3
xor
mov
or
dec
lods
jg
ficoml
sbb
push
pop
mov
mull
out
push
cltd
cltd
and
jbe
fisubs
jl
ja
add
mov
xor
pop
sahf
dec
sub
loopne
dec
je
dec
cmp
jge
int
sbb
inc
adc
xchg
mov
jne
cmp
in
xchg
jae
sti
push
mov
inc
pop
rolb
rcrl
lods
mov
mov
mov
jge
ret
call
pop
push
mov
jae
mov
hlt
cmp
add
and
push
jno
push
loopne
pop
leave
roll
popf
jno
xor
pop
js
cmp
and
add
test
or
shr
rcrb
jnp
scas
pop
arpl
jle
or
mov
sbb
out
mov
mov
mov
xchg
roll
movsl
cmc
pop
popf
ret
inc
clc
xor
xchg
jl
push
jbe
jmp
cli
aas
scas
mov
ror
sti
in
mov
popa
sbb
ds
cs
jge
cmp
mov
cmp
or
subb
xor
dec
push
std
je
dec
loop
test
xchg
cmp
dec
insl
or
mov
addl
push
orb
out
jb
mov
push
pop
mov
mov
shrl
sub
or
xchg
jb
lods
imul
hlt
out
lret
cmpsb
mov
lock
ljmp
mov
aad
add
aad
sbb
mov
pop
jo
sub
addr16
jge
sbbl
insb
movsl
add
cld
int
sbb
xchg
pusha
or
inc
xor
lret
cli
lds
jns
xchg
je
es
mov
addb
aaa
hlt
adc
lret
cmp
in
push
iret
jne
pop
in
fimuls
inc
xor
lcall
push
clc
sahf
mov
and
pop
bound
push
out
push
mov
xchg
dec
jl
repz
push
repz
jge
cs
sbb
pop
jae
leave
test
push
mov
add
out
dec
pop
cs
outsl
pop
negb
fnstenv
insb
aaa
mov
mov
jb
and
adc
and
hlt
and
inc
incl
rclb
mov
or
add
in
or
mov
adc
pop
mov
and
cmp
dec
jne
dec
adc
jns
in
jg
rolb
and
cli
insb
aad
ja
lods
dec
outsb
inc
aad
stc
outsb
or
push
mov
jno
xchg
pop
xor
les
sub
lods
roll
lea
or
mov
and
push
push
call
subl
or
rorl
sub
pop
cmp
mov
mull
mov
push
sahf
xor
mov
decl
add
and
inc
test
lods
jo
and
or
push
mov
addr16
daa
add
aam
imul
shlb
lock
cs
cmp
xor
push
imul
and
xorb
jg
xor
cmp
jecxz
pop
je
push
xor
mov
flds
dec
fsubrs
mov
lret
shll
daa
jecxz
inc
xchg
jecxz
cmp
sub
push
push
push
loopne
das
add
add
gs
pop
orl
cld
mov
pop
pop
test
mov
ror
cli
mull
mov
call
inc
pop
test
mov
mov
jg
lods
cmpsb
out
addb
popa
shlb
mov
aaa
jnp
in
das
dec
lods
lods
jl
popl
sahf
test
and
mov
pop
inc
movsl
ret
out
inc
push
faddl
or
inc
stos
fcoml
insl
in
xchg
cmp
stos
xchg
pop
or
pop
jle
xchg
rcrl
dec
pop
insl
mov
rclb
sbb
pop
xorb
into
mov
pop
subl
cmp
adc
stos
jecxz
rorl
dec
add
insl
xorl
fwait
inc
xchg
loop
mov
es
ret
mov
lods
xlat
jbe
insb
ret
dec
jg
pusha
nop
into
and
cld
jmp
jg
push
sub
jge
call
mov
sbb
inc
pop
frstor
fidivrs
fs
mov
cltd
and
ss
dec
sub
jmp
and
jge
cmpsb
and
test
pushf
mov
inc
sti
shrl
and
test
outsb
gs
iret
xchg
movsb
mov
xchg
aaa
dec
inc
movsl
sbb
in
add
arpl
arpl
insb
mov
ds
mov
iret
mov
nop
sti
jle
pop
das
pop
mov
adc
and
iret
jo
inc
inc
pop
test
jge
push
dec
mov
ficoml
dec
adc
ds
fildll
and
fistl
cmpsb
daa
adc
roll
ficomps
fldl
xlat
push
ret
popa
push
lcall
in
xor
adc
and
insl
jle
add
in
xlat
test
in
sbb
sbb
mov
jns
and
leave
out
jl
and
pop
or
xor
sbb
lock
loope
inc
dec
subb
pop
xor
inc
loop
lret
lea
cltd
lock
ljmp
test
xchg
xlat
jecxz
cmp
js
push
mov
sbb
cmp
and
xchg
xor
pushf
popf
mov
sahf
inc
sti
je
dec
or
mov
jns
sbb
fimull
mov
pusha
sbb
int3
je
sub
nop
stos
pop
sbb
int
sbb
jg
dec
call
outsb
imull
movsb
hlt
mov
mov
popa
adc
and
enter
test
out
pop
push
imul
out
int3
jmp
dec
xor
loope
in
xchg
pop
outsb
das
xlat
mov
pushf
pmaxub
sbb
inc
fiadds
cltd
int
jl
mov
or
sahf
scas
repnz
sub
xor
roll
in
fcoms
pop
xor
push
pushf
cwtl
push
jb
jbe
movsb
mov
push
sub
popa
lret
add
cmp
stos
fadds
mov
nop
lock
push
push
adc
mov
jno
aad
rcrb
add
adc
or
jno
test
sbb
insl
cs
inc
ret
inc
jbe
mov
aaa
jb
rclb
pop
push
out
daa
cmp
push
push
pavgb
mov
daa
testb
sarl
xor
addr16
ja
aaa
test
fwait
lock
or
into
std
stos
mov
add
cltd
arpl
adc
bound
mov
es
lcall
jo
xchg
bound
adc
mov
mov
popa
adc
sbb
xor
ret
lods
adc
leave
mov
mulb
pop
mov
test
or
pop
lret
cmp
fisubl
xlat
sub
aad
clc
test
dec
int
inc
mov
inc
mov
dec
push
mov
cs
dec
into
jl
imul
jo
xor
decl
and
fsubr
adc
mov
pop
mov
movl
leave
out
cmp
mov
loop
hlt
xchg
jmp
lea
mov
pop
cmp
mov
push
push
ret
scas
call
adc
bnd
or
sub
fldenv
rcr
data16
push
or
xchg
imul
pop
xchg
jae
jecxz
insl
rclb
xchg
add
loopne
xchg
sbb
lea
pop
repz
daa
mov
scas
and
mov
faddl
inc
xor
sti
xor
cmp
xchg
inc
pop
out
ficomps
jg
mov
sbb
add
orl
addr16
sub
aas
mov
movsl
cmp
outsl
ficomps
mov
cmpsb
data16
dec
in
xor
xor
cmp
inc
rcll
xor
mov
pop
test
enter
push
shll
xchg
leave
xlat
pop
mov
lret
lock
aas
dec
repz
xor
dec
pop
inc
or
mov
or
aas
roll
adc
inc
and
jg
mov
leave
insb
push
xor
lea
fildll
push
mov
jecxz
jo
pop
jge
sub
call
push
je
repz
fwait
out
in
push
mov
jbe
lcall
xchg
jl
jnp
test
sbb
fcom
sub
pop
cmp
dec
xchg
xchg
push
xchg
cmp
iret
pusha
add
addl
flds
cmpsb
negb
fldt
pop
stos
fs
push
js
out
sbb
stc
mov
and
subb
imul
sbb
mov
and
sub
push
mov
lods
xor
xchg
loope
sbb
cli
push
jg
jae
or
mov
inc
rorl
adc
pop
shll
sahf
inc
mov
imul
lret
sahf
xchg
pop
test
call
in
add
cmpsl
jp
jbe
lret
ja
sbb
or
lahf
es
insl
sub
dec
fidivrs
jo
sarb
jno
push
add
imul
pop
enter
mov
popf
out
sub
jne
xchg
je
aad
sbb
mov
es
stc
out
mov
inc
fwait
xchg
orl
pop
lcall
xor
pusha
js
fadds
cmpsl
jle
mov
or
xor
jno
mov
push
cld
imul
das
mov
sti
sbb
or
xor
and
pop
in
scas
cmpsb
or
sub
outsb
test
aam
cltd
pop
dec
jns
jns
push
pop
clc
cmpsb
and
mov
sub
iret
inc
cmpl
adc
imul
push
fmul
hlt
mov
mov
xlat
ret
std
xchg
xchg
dec
mov
fs
sbb
test
pusha
dec
inc
pop
repnz
sbb
pop
inc
ljmp
adc
lock
cmp
jns
mov
xchg
nop
ljmp
int
mov
shlb
in
add
cmc
decb
pop
outsl
sbb
adc
pop
rclb
cmc
insl
ljmp
push
dec
inc
fdivrl
popw
mov
cmpsl
shrb
jno
je
out
sbb
int3
inc
imul
aas
jbe
sub
adc
andb
cld
sahf
mov
fwait
cmp
fisttpl
sbb
lahf
lret
mov
pop
cmc
jne
dec
jo
inc
pop
xchg
jnp
and
and
nop
lahf
push
call
insl
xor
fbstp
ficoml
push
scas
pusha
dec
cwtl
into
mov
int
sti
idivl
arpl
xor
decl
push
ja
cmp
mov
jg
sub
jae
inc
sbb
mov
loopne
in
out
gs
jne
cmpsl
ds
pop
repz
lcall
dec
and
addb
xor
lret
stc
pop
cld
into
push
mov
pop
pop
sub
inc
ja
js
xor
cmc
adc
fnsave
sub
mov
je
dec
test
mov
orb
or
clc
sar
xchg
lret
aaa
fcmovnu
sarl
leave
gs
loope
sub
outsl
sub
pop
ds
test
frndint
xor
ljmp
lahf
sahf
adc
notb
repz
scas
aas
ja
pop
imul
inc
sbb
ja
jno,pn
aad
test
or
sub
mov
pop
mov
addr16
dec
inc
push
add
adc
subl
testl
test
or
sub
in
inc
test
jns
cmc
bound
jecxz
or
cmpsb
test
jno
cmpsl
xchg
addb
in
mov
jne
enter
or
mov
or
sbb
daa
mov
scas
pop
es
jg
jmp
sbb
in
add
aam
sbb
jo
clc
and
bound
or
clc
stos
adcl
stos
enter
rorl
pop
inc
jae
push
imul
jmp
add
cltd
lds
sbb
inc
dec
jns
or
cltd
test
xchg
test
mov
push
mov
pop
and
inc
lea
mov
sbb
push
adc
mov
sbb
movsl
cmp
loop
jne
mov
out
dec
cmp
inc
inc
data16
out
dec
sarl
push
mov
jmp
or
insb
repnz
mov
ret
mov
mov
adc
cmp
sbb
lcall
loope
and
push
sbb
scas
sbb
sbb
data16
jg
dec
mov
xchg
pop
jns
call
rolb
sub
xor
dec
dec
sub
mov
aaa
popa
lock
push
fisubs
xor
jp,pt
and
adc
sbb
out
daa
rcrl
jmp
lds
mov
jmp
mov
ficoms
orl
or
cld
adc
stc
mov
stos
inc
add
xchg
pop
std
in
shl
in
xlat
pop
sbb
es
dec
test
mov
xor
cli
xchg
mov
xchg
xor
negl
out
mov
mov
or
pop
incb
sti
mov
mov
jbe
jo
push
cmp
pop
mov
jbe
pop
mov
xchg
aad
xchg
push
inc
inc
in
jmp
jnp
ds
lea
mov
stos
inc
rcrb
in
sub
fs
xor
and
xchg
xchg
fwait
mov
fnstcw
sbb
sub
adc
test
and
in
pop
xchg
ja
loopne
dec
movsb
jns
cmp
xchg
jecxz
lds
les
mov
sub
jmp
lea
ror
sbb
test
or
aas
adcb
cmp
stos
fst
mov
cwtl
std
add
adc
and
dec
mov
fldl
and
ret
and
pop
sub
das
ljmp
stos
mov
pusha
inc
pusha
jle
out
faddl
xor
cli
adc
loope
adc
pop
repz
or
mov
es
neg
mov
and
clc
stos
mov
or
jmp
mov
sbb
and
cmp
pop
jne
mov
je
mov
pop
out
ficompl
and
stos
mov
push
xlat
cmpsl
ja
into
outsb
xlat
aad
add
in
sub
out
fisubl
adc
jp
and
sti
jl
stc
or
mov
lcall
stc
and
fdivrl
xchg
mov
imul
lret
mov
dec
test
scas
add
push
cmpsb
xor
push
inc
sbbl
bswap
xor
aad
lret
arpl
xchg
lahf
xor
fwait
xlat
and
roll
test
ja
lcall
xchg
xchg
cmp
insb
and
and
in
orb
outsl
adc
mov
mov
outsl
je
push
insl
jbe
xchg
add
cwtl
or
jmp
ljmp
adc
mov
xlat
addr16
loopne
sbb
xchg
and
movsl
bound
pop
push
jl
or
jg
pop
inc
sti
xchg
pop
mov
jmp
fbstp
insl
imul
add
mov
jmp
repnz
imul
lahf
out
cmp
loop
push
mov
push
and
bound
cmpsb
mov
clc
div
mov
dec
inc
jne
repnz
mov
out
pop
cs
gs
dec
mov
sbb
fsubrs
mov
sub
mov
inc
fimull
shlb
movsl
js
push
cwtl
cmpsl
stos
inc
xchg
sysenter
mov
gs
mov
xchg
xchg
inc
call
cli
mov
test
add
add
clc
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
sbb
mov
xor
xor
sub
mov
add
movl
or
mov
push
mov
add
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
add
mov
negl
push
mov
adcl
add
cmp
movl
je
mov
mov
xor
xor
adcl
add
add
adc
negl
xor
mov
push
movzbl
adc
xor
xor
mov
and
mov
add
movl
adc
addl
xor
movl
xor
movl
cmp
movl
jne
movl
cmp
je
jmp
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
sbbl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
notl
mov
adcl
add
movzwl
mov
mov
sbb
movb
add
lea
xor
mov
addl
mov
mov
orl
xor
andl
sub
andl
mov
movl
or
push
jmp
and
add
pop
mov
jl
pop
jl
sbb
and
xor
stos
stos
fs
sbb
xchg
jp
pop
std
sbb
push
cld
stc
loope
xor
sbb
jg
sub
out
addb
in
shlb
push
pushf
lahf
and
pop
in
or
push
js
sub
test
fnsave
in
or
sub
add
push
pusha
movl
call
push
xor
aam
adc
jo
xchg
inc
or
bound
mov
repz
aam
pop
pop
fadd
xchg
and
inc
push
and
lods
jle
xchg
mov
xchg
mov
pop
je
mov
mov
inc
fcmove
cmp
lcall
mov
mov
xchg
or
lret
mov
aaa
leave
mov
dec
mov
gs
sub
add
add
jo
mov
cmpsb
aam
pusha
push
xorl
inc
push
div
pop
addr16
or
xor
push
sbb
mov
sub
in
add
int3
fmuls
push
rep
test
fsubl
or
pop
rcrl
loope
sbb
pop
lea
add
adc
push
push
cmp
dec
xchg
jecxz
mov
sbb
and
cltd
lods
cmp
jecxz
pop
lods
adc
xor
jbe
and
sbb
adc
loop
fwait
adc
cmpsl
adc
out
xor
ficompl
add
in
rcrb
push
push
jo
inc
dec
lock
sbb
adc
cmpsl
dec
mov
and
pop
adc
mov
subb
push
push
and
and
fldl
ret
stos
in
mov
mov
xchg
xor
pop
jl
arpl
stos
adc
faddl
mov
pop
std
sbb
add
lahf
xor
cmp
push
jb
ret
mov
rclb
or
outsb
fistl
in
pushf
iret
cmp
insl
cmp
lods
or
scas
pop
mov
lahf
push
fwait
enter
iret
or
mov
sub
insb
mov
cli
sub
into
testb
mov
jns
pop
cmp
scas
inc
push
lret
mov
das
cld
outsb
sub
mulb
jecxz
and
popa
nop
jb
std
sarl
inc
lahf
cld
repnz
xchg
cmc
stos
lret
bound
test
je
movsl
aam
decl
push
mov
mov
inc
out
psubd
mov
xor
inc
aas
inc
cmp
cwtl
fisubrs
lock
mov
cwtl
test
inc
push
out
aad
add
aad
xchg
out
js
and
cmp
cld
or
pop
out
dec
hlt
pop
aad
repz
jmp
repnz
popf
leave
notl
test
iret
and
xor
les
pop
ja
push
test
pop
xlat
or
outsb
push
sub
out
aas
out
jg
jae
aad
jge
mov
xor
cmpsb
gs
inc
jmp
mov
push
fwait
lock
ss
stc
push
mov
pushf
sub
adc
push
aad
stos
adc
das
insb
lahf
xor
ja
popa
repnz
mov
push
js
mov
lea
mov
jns
add
dec
push
mov
test
repnz
xlat
lret
inc
stos
scas
fcoml
je
jbe
into
imul
inc
push
and
lods
fsubl
int3
mov
pusha
sbb
sub
int
loope
cwtl
leave
sbb
add
jo
lds
sub
loop
adc
xor
js
repz
lcall
cltd
out
dec
stos
pop
ljmp
jle
rcll
les
ret
push
inc
pop
pop
shrb
in
mov
sahf
dec
in
pop
jnp
int
sbb
mov
add
inc
mov
jg
repz
sub
outsl
jb
or
push
adc
imul
iret
and
jbe
xor
inc
in
popa
call
pop
lcall
inc
xchg
adc
or
dec
mov
testl
test
pop
out
fildll
jmp
mov
or
and
lret
sub
push
cli
xchg
mov
clc
pusha
cmp
int
or
insl
mov
pushf
sub
lahf
lcall
test
cli
pop
push
cmp
and
call
mov
xchg
loope
inc
aas
cmp
sbb
ja
add
mov
rol
and
mov
fisubrs
pop
push
dec
sbb
inc
insb
jb
hlt
pop
arpl
fdivr
and
aam
push
jnp
test
jecxz
mov
lods
sbb
pushf
aad
pop
aaa
sti
mov
test
movsl
aaa
push
lds
xor
sbb
mov
std
push
imul
dec
adc
sub
mov
mov
mov
stos
mov
movsl
aaa
add
adc
ret
fs
stos
inc
or
mov
lods
xorb
dec
imul
aaa
xorb
xchg
or
push
dec
inc
mov
or
xchg
mov
test
movsb
add
jecxz
sbb
stc
cmp
fwait
sarb
jp
push
cmp
dec
andb
mov
jl
cli
xchg
es
xlat
iret
in
xor
hlt
push
and
and
insb
adc
cmp
cltd
pop
jmp
fbstp
hlt
scas
stos
push
stos
mov
push
fisttpll
jp
or
xor
dec
xchg
sub
and
rcr
jle
lods
push
sub
mov
movsl
lods
addl
stos
daa
jnp
out
popa
imul
jmp
popf
movsb
mov
mov
cmpb
test
push
stos
movsb
aam
shll
lcall
ror
mov
pop
cmpsb
punpcklwd
or
in
roll
clc
and
aas
int3
push
adc
and
adc
cmp
mov
bound
inc
sti
xchg
popa
cltd
adc
sub
lret
aam
fistpl
mov
test
or
call
xor
lock
cmp
adc
cltd
add
insl
cltd
nop
mov
mov
dec
flds
scas
loop
arpl
dec
outsb
xor
dec
rorb
pop
cmpsl
mov
mov
mov
sub
stc
call
popf
dec
fstpt
xor
popa
ja
test
shll
and
jge
adc
or
sbb
adc
pop
es
cld
arpl
sbb
js
dec
test
jne
pusha
jo
fstl
jns
push
dec
sbb
adc
xchg
daa
rorb
mov
mov
add
insb
push
and
adc
leave
fimuls
pop
call
jne
xor
jg
or
pop
jl
mov
pop
dec
std
jl
addr16
out
call
mov
jns
clc
dec
and
notl
aas
js
push
xchg
mov
pop
push
push
adc
dec
mov
mov
cmp
stos
fdivrl
or
stos
ret
mov
cmp
insl
adc
xor
sub
xchg
pop
ss
mov
push
adc
mov
arpl
mov
pop
dec
pop
jmp
ret
mov
push
loope
int3
fldl
cmp
push
cmp
xchg
sub
pop
xor
sub
lock
inc
loope
test
imul
mov
mov
pop
and
jmp
xlat
or
or
inc
das
add
outsl
add
and
sub
divl
std
pop
aad
jo
mov
inc
and
cmp
in
xchg
pop
or
add
add
les
mov
adcb
stc
add
sub
push
jnp
cmpsb
mov
jge
out
adc
repnz
cltd
and
aaa
fldl
jl
popf
lods
js
rcrl
mov
or
out
jns
sbb
lods
mov
xchg
movsl
shl
idivl
pop
add
xor
xchg
pop
out
mov
call
scas
int
xchg
mov
pop
fistps
lret
ljmp
or
jmp
push
dec
ret
lods
rcrl
xor
jo
adc
jo
lds
xor
das
mov
mov
mov
call
imul
outsl
jno
mov
push
sbb
pop
divb
lods
and
loope
mov
push
mov
nop
out
loope
jnp
mov
xchg
shrl
and
mov
in
rclb
sbb
fcomp
or
cmp
dec
push
imul
mov
xchg
sub
inc
jmp
mov
scas
mov
mov
mov
mov
adc
nop
loope
xlat
repnz
cld
out
fcmovnu
nopl
mov
push
cli
stos
jecxz
xor
mov
fsubrl
push
mov
iret
pop
dec
mov
scas
mov
insb
out
xor
test
cmp
mov
lcall
jle
fildll
add
or
jnp
enter
mov
lahf
std
pushf
mov
pop
mov
and
aam
ret
sbb
push
push
inc
mov
mov
stos
pushf
outsb
fistpll
xchg
scas
xchg
mov
int
test
mov
stc
sub
in
mov
mov
test
daa
xchg
pop
push
xchg
add
and
cmp
inc
xchg
jge
push
outsb
mov
ror
sub
in
xchg
and
push
ja
inc
pop
loopne
mov
jo
cmp
in
mov
sbb
jae
push
cmp
mov
adc
nop
push
scas
jbe
mov
test
pop
into
xchg
add
hlt
adc
fbld
popl
mov
arpl
cwtl
mov
nop
pushf
cld
mov
stos
jg
add
push
es
aam
jle
pop
out
xchg
xor
cltd
adc
scas
fdivrs
int
les
fisubs
fistpl
dec
jo
push
cmp
aaa
xchg
mov
cmp
inc
adc
movb
sahf
push
mul
sti
pop
scas
cmp
ror
repz
cmp
gs
mov
xor
or
jne
inc
insl
sti
mov
aas
cltd
jl
jge
mov
add
adc
or
lock
cmp
ret
imul
test
aas
mov
leave
out
jecxz
outsb
pop
popf
jg
mov
dec
mov
loop
in
fcompl
pop
dec
insb
pop
pop
test
mov
mov
notl
mov
jg
pop
loopne
mov
ja
fs
fsub
mov
xlat
ffree
mov
sbb
mov
lods
orb
repnz
mov
aas
dec
sbb
cmp
adc
sahf
sub
or
lret
lods
pop
cmpsl
jmp
pop
add
push
imul
stos
enter
out
adcl
mov
add
cmc
adc
insl
push
jl
inc
lods
mov
movsb
mov
xor
jnp
mov
xchg
mov
jne
mov
ds
jns
std
mov
push
mov
sbb
xchg
mov
filds
adc
adc
push
scas
jp
and
jnp
adc
xor
inc
mov
cltd
out
mov
mov
cmpsl
sub
adc
push
ds
lret
add
or
xor
pop
movsb
inc
jge
pusha
mov
inc
sbb
sti
push
mov
ja
shlb
jg
nop
adc
and
fcoml
or
lcall
sbb
in
dec
daa
push
fadds
and
arpl
xchg
sub
mov
sub
adc
into
loopne
inc
lods
das
iret
fdivrl
fidivs
addb
add
cmc
push
fwait
or
or
add
pop
repnz
jmp
or
lods
add
sbb
pop
fisttps
push
jl
pop
pop
push
mov
mov
addr16
sbb
mov
fnstenv
mov
xchg
call
sbb
into
cwtl
adc
mov
mov
lahf
mov
xchg
cli
mov
pop
jo
sti
into
push
add
repnz
pop
add
pop
pop
lea
sub
cmp
ds
jo
adc
sub
pop
push
sbb
mov
mov
xor
push
mov
inc
stc
test
lahf
jg
rorl
and
mov
in
mov
cs
out
xor
loopne
leave
adc
push
push
inc
test
cltd
cmp
jge
inc
mov
sub
ds
lods
out
bound
imul
pop
xor
add
popf
pop
xchg
out
xor
mov
jae
push
out
mov
outsl
outsl
pop
dec
faddl
mul
mov
pop
clc
ljmp
xlat
jne
inc
ljmp
inc
fisubs
mov
pop
lock
fists
pop
outsl
dec
push
cmpl
inc
cmc
test
jne
jbe
inc
imul
or
or
addr16
mov
imul
fs
inc
outsl
decl
adc
out
pop
inc
jns
pop
out
out
cli
push
jbe
aas
cmp
inc
test
scas
andb
xchg
outsb
pop
cli
in
mov
fdiv
fsubrs
jae
out
stos
cmp
ljmp
sub
js
aam
inc
mov
fucomi
cmp
fdivr
and
mov
rcr
scas
or
push
xor
add
mov
inc
pop
les
enter
lcall
mov
adc
mov
cmp
pop
repz
and
movsl
cmp
test
adcb
lds
xchg
adc
or
insb
or
cmp
push
cmc
mov
scas
adc
mov
jns
pop
lret
sbb
aas
punpcklwd
jg
push
sbb
push
cmc
xchg
repz
pop
imul
call
jbe
sbb
sbb
cmpsl
sarl
cmp
in
inc
popl
arpl
mov
xor
pop
test
sti
push
sub
pop
push
pop
popa
ljmp
ds
jns
mov
aad
pop
xor
mov
mov
add
lods
cli
dec
sbb
lods
aam
xchg
dec
or
daa
dec
sbb
or
pop
mov
and
mov
arpl
das
js
xor
inc
test
aam
test
sbb
les
out
jmp
push
rcrl
xor
mov
cld
add
repz
mov
add
add
fidivrs
pop
xchg
cmp
das
mov
mov
push
mov
testb
cmpsl
push
cmp
das
arpl
repnz
test
dec
out
loop
push
lret
cmp
pop
jb
mov
ret
call
or
out
and
aad
pop
in
mov
inc
js
jb
dec
jno
aaa
cwtl
add
jb
iret
inc
arpl
outsl
fists
iret
stos
pop
pop
push
xchg
test
frndint
push
xchg
sbb
push
lea
test
loopne
add
les
mov
push
loope
test
addb
aaa
mov
mov
sub
data16
daa
cmc
out
mov
fwait
pusha
mov
enter
sub
sbb
data16
cmp
or
pop
add
in
inc
cltd
sub
cwtl
mov
test
mov
call
pop
inc
ss
lret
roll
enter
loop
cmp
push
gs
fwait
xchg
cmp
pop
jns
and
scas
push
xchg
mov
rolb
aad
dec
repnz
movsl
add
das
mov
cmpsb
mov
mov
xchg
or
and
push
and
sbb
cli
daa
int
sbb
pushf
xchg
push
or
adc
cli
js
jbe
loopne
add
jns
jecxz
mov
sbb
inc
imul
fstps
mov
clc
sub
cmpsl
negb
sub
add
xor
out
pushf
fstl
lods
dec
mov
push
sti
cmp
aas
jle
pop
pop
inc
dec
mov
mov
dec
lahf
aaa
or
out
les
sub
subb
mov
scas
inc
pop
jae
fst
jnp
push
push
mov
enter
into
lea
loop
jp
pop
sbb
pop
jbe
push
loopne
lret
mov
push
xor
sahf
insb
mov
lret
sub
sar
inc
sub
lods
inc
outsb
cwtl
mov
mov
jmp
sub
or
enter
jbe
dec
ficomps
push
rorl
adc
fdivl
mov
push
mov
pop
dec
push
mov
pusha
sub
orb
mov
mov
add
jne
dec
mov
cmp
pop
aaa
ucomiss
popf
jmp
inc
mov
ret
cmp
add
adc
lret
outsb
fidivrl
sbbb
sbb
push
hlt
xchg
and
push
pop
bound
and
ja
inc
out
push
insl
movsl
jns
push
pop
cmp
pushl
adc
inc
ljmp
fs
and
xchg
insb
pop
mov
out
jl
inc
popl
test
inc
pop
int
ss
outsb
stos
push
les
into
fmull
adc
pop
stc
xchg
sub
lea
or
mov
pop
stos
notl
pop
dec
fstpt
mov
call
arpl
adcb
loop
sbb
sub
imul
pop
mov
or
mov
subb
pop
adc
in
shlb
mov
push
fsubrs
cltd
or
cwtl
icebp
movsl
push
or
test
adc
mov
sub
inc
cmp
mov
mov
cmpsl
push
push
xchg
inc
jno
aas
rolb
cli
push
pop
ret
cs
sbb
scas
push
es
mov
aam
jns
testb
call
xor
pop
xchg
dec
enter
andb
jae
push
mov
and
popf
dec
xchg
xor
fldt
jl
dec
push
push
stos
rcll
insl
mov
or
jo
jo
sub
out
cmp
jmp
mull
adc
bnd
fmul
mov
inc
lret
sar
clc
aam
pushf
insl
add
out
fdivs
popl
test
cs
push
cmpsb
sbb
cli
aam
inc
roll
ret
jnp
aam
mov
das
aam
repz
icebp
pop
addb
or
mov
push
pop
fsubs
stos
jne
test
sub
jmp
lea
or
je
pop
pop
out
mov
xchg
push
adc
push
dec
pop
xchg
xor
shll
mov
dec
int
jne
mov
xchg
inc
sbb
pop
xor
test
pop
out
movsb
lock
sub
and
lods
jmp
daa
gs
lds
jecxz
mul
xor
data16
lods
mov
cmp
dec
nop
push
aam
add
jno
mov
dec
movsb
xchg
add
lea
movsl
and
jo
lods
jno
inc
push
loop
gs
or
jo
xchg
jl
xor
xorb
mov
inc
loop
fisubrs
mov
pop
movsb
lcall
sbb
mov
and
push
jno
stos
xor
rcrb
add
pop
stc
daa
sbb
shll
cmp
call
cmp
sbb
inc
cmp
addr16
outsb
bound
shl
mov
addb
dec
int
int
je
sbb
and
out
jnp
xor
pop
out
xor
out
pop
push
pop
mov
push
aaa
je
push
js
jnp
jl
and
outsb
mov
inc
ds
cltd
lcall
roll
adc
push
and
arpl
mull
jg
imul
std
or
sub
mov
or
inc
mov
mov
or
fistpl
lahf
mov
cmpsl
in
ficoml
js
std
mov
bound
jg
leave
sbb
bound
ret
loope
pop
bound
jnp
imul
push
loop
js
cmp
imul
jmp
and
pop
lahf
pop
sti
xor
mov
jg
cltd
jmp
xlat
add
mov
add
sarl
out
sbbb
sbb
pusha
adc
dec
inc
add
xchg
xlat
dec
mov
mov
xchg
arpl
aam
inc
mov
xor
cs
xchg
out
dec
add
dec
add
push
mov
jp
lret
xor
lahf
in
mov
cmp
fstpl
inc
notb
or
inc
out
xor
scas
out
xlat
loope
xchg
cltd
js
sub
nop
sbb
popa
or
pop
shlb
adc
jae
rcll
mov
out
adc
push
push
mov
jp
jb
sub
test
hlt
jns
xchg
xchg
out
popf
pop
add
aam
cld
int3
stc
or
lock
das
ret
fstpl
xchg
or
sbb
cmp
test
push
shlb
daa
lret
adc
cmp
mov
pop
mov
jo
jl
subl
pop
iret
mov
mov
inc
out
mov
enter
sti
adc
mov
pop
scas
out
xor
out
inc
xchg
mov
pop
shrb
adc
mov
ja
imulb
std
cmpsl
inc
xchg
inc
out
fisttps
inc
pinsrw
cmp
imulb
dec
cwtl
mov
fnstsw
jns
sbb
in
scas
lods
xchg
movsl
pop
insb
in
arpl
or
jle
pop
int3
inc
lret
dec
and
xchg
sti
add
sbb
xor
push
gs
push
icebp
push
xchg
pop
pop
push
pop
leave
movsl
xor
outsb
mov
pop
cltd
fistpl
mov
mov
sub
mov
add
cwtl
divb
popa
std
pop
ss
ds
in
push
xor
pop
es
in
dec
adc
cmc
fisttps
jle
jne
lods
out
pushf
ljmp
ficoml
mov
xchg
clc
dec
push
or
cs
insb
inc
and
jnp
xor
inc
add
pop
push
stos
push
inc
dec
xchg
pusha
lock
pop
das
cmpsb
mov
fsubrl
loop
and
sbb
add
icebp
loope
cmp
in
mov
lea
xchg
pop
fbstp
and
push
push
sbb
push
cld
stos
imul
jnp
cmpsb
jmp
mov
dec
out
jle
sub
lcall
xor
jecxz
push
mov
mov
popf
int3
pop
mov
xchg
xchg
dec
cli
nop
push
stos
test
stc
mov
sbb
xor
push
push
sub
cmp
pop
not
pop
popa
movsl
dec
leave
popf
dec
inc
out
mov
and
sbb
stc
loopne
pop
adc
int3
mov
or
outsl
add
vpacksswb
inc
adc
mov
insl
jg
xchg
call
xlat
pop
mov
sub
jmp
lret
mov
mov
mov
sbb
movb
lods
bound
sbb
push
sub
int
lock
lcall
xor
aaa
adc
int
push
add
xorl
xchg
push
gs
dec
push
or
dec
aad
xchg
lods
mov
in
mov
jmp
inc
adc
mov
pusha
cmc
mov
cld
jo
push
in
out
push
into
mov
pop
sbb
adc
xchg
and
lcall
ret
in
jmp
popa
inc
icebp
mov
les
loope
sbb
mov
xchg
lods
xlat
adc
or
push
xlat
add
scas
xor
sahf
jp
push
add
ja
ficoms
test
test
and
mov
fucomi
pop
imul
or
mov
fcmovnbe
xchg
inc
loopne
fiaddl
scas
rcl
dec
stc
cmpsl
jnp
or
dec
xor
int
imul
gs
mov
add
mov
popf
fdivrp
cmpsb
add
inc
cmpsl
scas
jge
test
inc
inc
mov
repz
fmuls
int3
cmc
popa
aam
adc
sbb
pop
mov
mov
sub
pop
pop
or
arpl
cmpsl
adc
scas
cmp
sbb
and
popf
test
lea
push
jno
mov
call
in
popf
sbb
jb
shl
enter
xchg
sub
inc
dec
sub
mov
mov
sbb
lds
sub
and
fisubl
add
loopne
xor
fwait
out
mov
iret
in
jl
mov
jbe
push
pop
dec
cmp
jecxz
es
ja
scas
je
int3
mov
out
pop
pop
insb
mov
shl
adc
enter
inc
mov
add
sub
test
out
dec
or
mov
dec
inc
dec
in
test
popf
jle
sar
jle
mov
jnp
and
fcmove
repz
jl
stos
mov
jno
data16
push
frstor
xor
clc
mov
cmpsb
es
inc
rcrb
mov
xlat
xor
inc
adcl
sarb
mov
test
xchg
push
stos
sub
shrb
mov
mov
inc
ja
into
cmp
adc
sub
xor
movsb
movsl
or
cmpsb
in
mov
xchg
push
inc
mov
xchg
aaa
frstor
xchg
andb
lods
lock
sub
popa
lods
lcall
mov
lcall
push
popf
out
popa
inc
mov
push
pop
jae
es
sbb
jae
pop
popf
add
sti
mov
insl
out
lock
aaa
dec
cmp
mov
call
test
cmp
aaa
les
mov
push
dec
mov
lret
bound
push
scas
xlat
add
repz
repz
push
xchg
mov
push
cmp
loopne
aas
and
pop
jge
or
call
sbb
test
arpl
lock
fidivl
adc
pop
mov
pop
add
xchg
out
mov
jns
and
xchg
adc
hlt
sub
subb
and
inc
dec
sbb
jb
sbb
out
inc
jecxz
mov
shll
std
sahf
mov
aaa
leave
inc
sub
sub
add
insb
out
outsl
mov
xchg
test
insl
add
pop
test
push
inc
dec
pop
jae
std
jge
movd
inc
cli
rcll
mov
shrb
pusha
scas
mov
and
sbb
adc
xchg
xchg
mov
stc
mov
clc
and
push
mov
hlt
imul
add
xor
and
lock
jle
push
xchg
sbb
aad
xor
mov
movsb
insl
pop
mov
inc
jmp
add
mov
ja
lret
cmpsl
and
divl
inc
xor
add
in
push
jl
loop
int3
jge
jecxz
jl
sbb
mov
fdivrs
loopne
js
mov
mov
aas
dec
leave
jp
lret
insl
push
enter
or
outsb
cmpsl
hlt
aaa
add
adc
mov
inc
fs
inc
scas
mov
out
pop
or
and
daa
fstpl
lods
sub
incl
push
mov
sbbb
in
lret
push
sti
xor
fs
in
movsb
push
xchg
insb
jp
das
cmp
sbb
push
insl
jo
rcrl
ljmp
dec
push
lret
stos
sub
pop
popf
cmp
es
jne
into
aaa
ficomps
test
or
and
pop
pop
dec
mov
out
lock
ret
in
adc
sbb
jne
xor
xor
dec
scas
ficoms
mov
jae
fcomp
jns
or
insb
cmp
std
out
inc
sub
sub
in
sub
xchg
clc
add
mov
cmp
pop
push
ds
out
xor
ja
test
push
out
mov
test
imul
pop
dec
ds
push
sub
pusha
adc
mov
sub
mov
xor
out
sbbl
aam
in
push
ret
test
ficomps
aas
popa
mov
mov
push
sub
or
jne
mov
mov
dec
mov
dec
sub
or
leave
xchg
mov
mov
push
jno
pop
pop
pop
mov
lods
out
or
inc
into
cltd
xchg
icebp
pop
jns
mov
nop
inc
add
and
and
rclb
xchg
enter
cltd
sub
or
test
dec
xchg
lahf
xchg
popf
lea
mov
and
mov
jp
js
lds
shlb
inc
in
mov
adc
cmp
sbb
sub
rcrb
lds
sbb
out
jno
push
jae
addl
ret
add
dec
incb
xchg
inc
mov
adc
lea
in
jp
ja
mov
incl
cmc
pushf
sub
lahf
add
rclb
aam
jns
add
dec
xor
jno
outsl
push
repnz
dec
rep
fisttps
out
imul
xchg
dec
aam
pop
shrl
int3
mov
inc
pop
sub
mov
fisubrs
mov
push
cmpb
and
and
addl
shrl
pop
f2xm1
ja
ljmp
shl
xchg
test
adc
xlat
enter
add
call
cmpsb
mov
sbb
jg
clc
mov
hlt
sarb
xchg
mov
pop
and
xchg
mov
or
lcall
cmp
aam
push
movsl
inc
xor
or
xchg
jne
pop
lret
imul
mov
mov
sub
out
adc
shll
lock
ss
jg
sahf
and
inc
repnz
pop
add
nop
push
dec
movsl
in
cmpsl
xor
xlat
cmp
lahf
repnz
add
mov
or
jecxz
mov
jno
loope
cwtl
mov
in
loope
fsubrl
mov
mov
sahf
mov
out
xchg
sub
fs
out
aad
mov
icebp
jge
inc
lods
jle
cmp
ljmp
rcrb
daa
imul
jmp
hlt
xor
adc
pushf
insb
lcall
test
jno
popf
or
jnp
pop
movsb
cmp
lods
push
inc
fs
test
sahf
sbb
push
fs
lods
mov
scas
aad
negl
mov
jl
dec
adcl
cmp
cli
inc
dec
dec
push
bound
inc
cmp
imul
mov
sub
sbb
inc
dec
outsl
loope
pop
dec
cmp
fnsave
or
imul
test
push
dec
xchg
xor
xchg
aam
add
hlt
movsl
movsb
repz
pusha
sbb
je
dec
cmp
cmp
push
mov
jg
mov
je
jnp
xor
loope
test
aaa
fadds
push
std
inc
or
or
mov
add
push
movsb
inc
fbld
jne
and
mov
xchg
subl
fcmovnbe
cmp
adc
fstpl
sbb
jle
xchg
insb
push
movl
xorl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
push
push
pushl
call
mov
dec
mov
jmp
push
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
inc
xor
sub
mov
movl
push
xorl
add
jmp
mov
notl
mov
notl
inc
cmp
movl
jb
adc
mov
xor
add
jmp
andl
mov
and
mov
adcl
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xorl
mov
add
sbbl
movzwl
xorl
mov
negl
mov
orl
movzwl
xorl
xor
add
mov
mov
inc
mov
cmp
movl
jne
mov
movl
mov
decl
xor
add
andl
mov
dec
mov
xor
andl
add
movl
mov
not
movl
movl
movl
mov
mov
movl
mov
jmp
mov
add
mov
andl
xor
xor
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
movl
mov
lea
mov
mov
mov
lea
movzwl
sbb
mov
mov
andl
mov
add
mov
negl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
orl
mov
mov
add
mov
lea
add
mov
mov
orl
mov
lea
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
sbbl
lea
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jb
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
jmp
sarb
jae
dec
bound
mov
pop
jl
push
mov
psrld
jns
cmc
mov
loop
sbb
incb
mov
sti
jo
adc
mov
aam
loopne
mov
mov
pop
pop
lret
repnz
mov
fmul
or
das
jnp
ds
into
and
push
iret
xchg
xchg
das
js
mov
outsb
cs
or
data16
lods
movsl
sahf
or
jo
cmp
fldcw
movzbl
xchg
xlat
movsb
cmpsl
push
jb
jno
insl
add
stos
call
xor
mov
addr16
mov
mov
stos
xchg
pushf
cmp
xchg
mov
mov
fsubl
mov
xor
fmul
pop
mov
push
xor
sbb
movsb
xchg
mov
sbb
xor
and
sbb
lcall
andb
push
gs
sarb
lds
test
and
dec
adc
mov
inc
inc
shlb
scas
jb
sbb
xchg
xor
je
pop
cmp
inc
push
lret
popf
lock
push
or
es
insb
sub
push
sub
ret
cmp
mov
js
insb
je
test
test
dec
cltd
imul
lods
subl
add
push
inc
xor
push
xor
into
lds
fs
in
fstpt
popa
pop
fists
test
insl
call
adc
jmp
jp
push
movzwl
cs
into
push
loope
dec
xchg
shlb
lods
inc
fcomip
shll
sub
int
xchg
dec
jecxz
pop
add
fisttps
mov
xor
lret
out
jbe
mov
cmc
push
xor
add
sbb
clc
pusha
sbb
jl
cld
fistpl
jmp
sbbl
test
mov
inc
add
mov
insb
sub
pop
icebp
aas
mov
sub
sbb
je
xlat
sbb
mov
pop
add
or
lahf
nop
pop
dec
mov
iret
dec
into
push
subb
dec
pop
ljmp
push
loopne
push
sub
jl
fadds
jns
inc
dec
aam
call
imul
sub
xchg
adc
lea
xchg
insl
sub
add
dec
popa
pop
mov
pop
fisubl
aam
rol
sub
insl
xor
fcomps
xchg
mov
jge
call
push
out
mull
insb
xor
insb
jnp
and
fstpl
rclb
mov
push
daa
or
pushf
movsb
pop
push
cmp
and
jnp
js
adc
movsb
pop
mov
mov
xorl
inc
mov
push
sub
int3
or
inc
and
arpl
or
or
pushf
inc
cmp
jno
sti
sub
mov
gs
dec
iret
shrb
xchg
dec
push
leave
mov
fisubrs
mov
test
test
inc
xchg
dec
repnz
inc
and
and
in
pop
push
int3
test
add
out
jmp
inc
sbb
shl
loopne
aad
pop
xlat
shrb
mov
push
push
sbb
cwtl
push
daa
add
mov
cmp
fstps
mov
mov
loope
insl
or
aad
mov
fnsave
mov
data16
inc
test
sahf
dec
dec
cwtl
sub
xor
leave
pop
movsb
sahf
push
dec
aam
pop
pop
and
lret
xlat
fistpl
mov
pushf
cli
pushf
cmp
mov
cmp
jl
xchg
jo
js
sahf
outsl
cmp
ffree
lret
or
cmp
jle
outsb
in
btc
bound
xchg
imul
or
fidivrs
push
in
sbb
daa
jecxz
mov
jp
xchg
insb
xchg
add
mov
leave
mov
out
nop
sbb
cmp
adc
jle
xchg
mov
loop
subb
and
loop
frstor
push
ljmp
adc
notb
cmp
mov
pushf
push
jmp
and
repnz
push
inc
js
enter
or
sub
fidivs
into
cmpsb
inc
pop
xchg
xchg
mov
add
mov
ficomps
push
sub
nop
insb
jecxz
cld
adc
insb
add
int
or
jne
add
mov
or
addr16
mov
inc
in
push
mov
sub
dec
int
xor
loope
cmp
lret
pop
adc
mov
mov
ret
nop
in
stos
add
jmp
push
xchg
sbb
mov
pushf
jecxz
jnp
lahf
mov
pop
xchg
jle
push
decb
adc
fs
nop
repnz
adc
xchg
add
leave
push
pushw
int3
test
into
adcb
out
out
and
lods
dec
mov
mov
ret
cmp
enter
int
insl
in
push
pop
xchg
pop
jmp
mov
push
fwait
ljmp
push
int
dec
mov
push
iret
insl
lds
jne
dec
mov
dec
xchg
jae
sub
stos
or
push
pop
bound
add
xor
mov
mov
jnp
dec
push
imul
mov
or
add
dec
or
outsl
cmp
pushf
inc
mov
or
shrb
fs
aaa
pop
mov
pop
cli
jmp
push
mov
test
add
iret
aas
mov
mov
push
lret
jbe
pop
mov
sbb
stos
inc
pop
xor
roll
je
stos
dec
push
fbstp
lea
cmp
cltd
xor
cmp
pop
push
and
mov
push
in
mov
mov
mov
clc
xor
jmp
push
jnp
cli
stos
fnstcw
pop
jmp
dec
jmp
icebp
decb
cmp
mov
loope
es
outsb
cmp
inc
jle
mov
popa
xor
call
pop
add
jp
mov
fdivrl
or
mov
out
std
das
xor
or
pop
lds
fisubrl
push
bound
pop
fldl
jo
fldl
adc
mov
pop
mov
push
jecxz
cmp
mov
sub
sub
mov
jb
mov
stos
fwait
pop
mov
clc
xchg
add
mov
dec
dec
test
and
sub
mov
and
into
out
les
insb
lock
add
mov
jp
sbbb
pop
insl
mov
and
mov
xchg
in
ljmp
daa
cs
jecxz
fldl
cmc
cmpsb
in
push
push
es
scas
loopne
imul
lahf
into
stos
sbb
icebp
shll
xor
fistl
adc
stos
pop
test
mov
call
xchg
addl
xor
or
scas
rol
mov
push
sub
cmpsl
mov
stos
xor
lret
out
xchg
or
mov
shlb
imul
mov
pop
loope
or
daa
mov
jle
jne
push
pop
inc
out
cmp
test
mov
test
ret
dec
ret
cmp
mov
jnp
movsb
push
cwtl
adc
mov
lods
push
sbb
and
scas
cli
jns
sbb
psllw
in
sbb
das
shr
push
mov
dec
test
and
fisubrs
lods
sarb
pusha
test
push
jle
je
cwtl
jle
inc
xor
imul
push
mov
fmull
mov
in
xchg
jge
data16
adc
and
cld
pop
roll
cmp
rorb
cmp
inc
push
mov
lods
jbe
inc
mov
push
rorl
clc
leave
mov
jo
xchg
mov
sbb
pop
push
cmp
in
mov
push
inc
in
subl
es
mov
cwtl
push
sub
dec
negl
pop
add
in
mov
cltd
std
jne
shl
dec
addl
movb
mov
cmp
pop
push
lock
push
imul
int3
push
mov
test
ja
in
pop
mov
popf
pop
test
xchg
and
rolb
aad
xchg
pusha
ss
mov
stos
mov
pop
jp
lods
dec
andb
cwtl
bound
loopne
clc
mov
daa
ds
mov
std
sub
dec
inc
std
cmp
in
push
hlt
mov
mov
loop
shl
or
mov
or
pop
dec
int3
leave
xchg
test
pop
xor
ds
fildll
add
pop
popa
lea
fldenv
push
add
das
je
pop
mov
std
sbbl
inc
inc
xor
pop
in
jae
jae
jg
andb
xor
in
repnz
fwait
out
rep
or
out
xchg
push
pop
sbb
push
dec
sub
push
rcrl
scas
mov
fwait
imul
sbb
in
fdiv
test
decb
push
sbb
cmp
int
sarb
imul
cmp
pop
jbe
lcall
dec
movsb
icebp
rclb
sbbl
or
xchg
xor
mov
jl
out
mov
inc
mov
das
sbb
aas
shll
scas
xchg
xor
pop
clc
testb
add
addb
and
psubw
out
mov
or
dec
sti
mov
xchg
std
push
xchg
jge
push
xchg
out
addr16
or
faddl
test
or
addb
add
pop
hlt
ja
scas
hlt
mov
xchg
test
jge
sub
lea
lea
sbb
mov
int
xchg
and
or
lods
in
mov
out
cmpsl
add
add
and
mov
into
pop
movsl
add
jg
push
pusha
cmpsl
add
adc
fiaddl
loopne
mov
rorl
in
mov
jae
out
pop
jb
lods
stc
jbe
add
inc
add
push
repnz
cwtl
dec
addb
xor
sub
ja
cmpsl
jae
jnp
push
xchg
cmp
cmp
mov
insb
mov
mov
adc
pusha
mov
testb
dec
ljmp
xchg
nop
repz
lcall
in
loopne
insl
mov
cli
sub
lods
xchg
cli
mov
pop
outsl
ds
jmp
es
add
add
call
ss
fwait
loopne
int3
cmp
mov
into
stos
xor
out
fnstsw
hlt
out
divl
daa
dec
xchg
nop
gs
btr
out
dec
inc
daa
adcb
push
cli
xchg
ret
test
fldcw
xchg
andl
mov
rol
mov
ret
arpl
gs
jle
in
pop
and
inc
mov
out
lods
fwait
dec
push
inc
aam
and
lcall
pop
xchg
inc
jns,pn
sbb
xor
or
aas
inc
cmp
fistl
fwait
xchg
gs
lock
jmp
cld
push
jle
jg
add
mov
pop
lock
sahf
jmp
and
mov
lret
sub
mov
loopne
mov
das
rcll
movl
stos
or
sbb
xchg
shr
mov
and
inc
test
and
dec
cltd
jmp
outsl
ffreep
adc
dec
in
popf
fstp
pop
lods
icebp
xchg
addb
and
mov
jecxz
outsl
mov
sbb
add
jnp
movsl
lock
jo
sub
xlat
add
and
adc
sbb
and
sub
inc
clc
mov
dec
fcompl
fwait
mov
adc
jno
and
aad
fstl
or
adc
dec
stos
jecxz
jnp
fmull
fwait
inc
add
sub
or
shl
imul
cmpsl
jbe
ja
movsl
jns
cmpsb
sahf
addb
inc
test
lds
push
cs
arpl
imul
add
dec
lret
fistl
insl
mov
cltd
mov
pusha
lods
sbb
pop
push
scas
cmp
aaa
stc
data16
sub
add
loopne
es
adc
xor
enter
clc
xor
daa
or
rcrb
xchg
push
pop
daa
sub
and
cs
call
outsl
in
dec
mov
imul
test
sub
xchg
repz
inc
scas
mov
sbb
jno
daa
call
mov
fmull
jecxz
pop
loopne
sub
or
jl
lock
cwtl
divl
flds
mull
movsl
popa
add
pop
lods
sbb
mov
cmp
xlat
mov
mov
ret
xchg
mov
enter
test
cli
lret
pop
lds
mov
cmp
daa
xchg
xlat
arpl
imul
or
mov
faddp
out
sti
xor
divl
mov
arpl
dec
cltd
out
jp
cmp
or
add
pushf
xchg
and
mov
aas
cmpsl
pop
rorl
dec
pop
in
adc
and
dec
jle
pop
inc
cmpsb
aaa
push
repnz
add
cld
test
popa
mov
mov
cmp
sub
fwait
jl
sub
pop
stos
les
pop
into
and
sbb
push
jle
jb
sub
dec
xchg
icebp
and
ret
or
lahf
idivb
dec
cmp
test
orl
rcrl
or
dec
pop
jge
xor
orl
out
inc
mov
scas
jno
clc
mov
jle
iret
pop
sub
jne
add
add
dec
or
add
xor
scas
mov
arpl
add
jb
and
aam
or
dec
fnstcw
cmp
popf
scas
pop
or
cli
jbe
mov
stos
imul
mov
ja
insl
incl
and
sub
rcll
inc
movsb
or
jecxz
push
push
fnstcw
sub
std
or
sbb
jle
sub
ljmp
sub
and
xchg
dec
nop
jns
inc
jns
bound
sbb
pop
cltd
and
fcoml
mov
and
pop
dec
pop
lret
mov
lret
pop
cmp
push
cld
inc
fdivs
out
ret
pop
fs
ret
push
pop
push
adc
or
jno
jmp
leave
lret
mov
push
notl
stos
nop
stos
popa
or
inc
shl
push
cmp
bound
test
jb
push
imul
out
lahf
mov
bound
into
pusha
cmpsb
sub
mov
xchg
sbb
xchg
sbb
xchg
cmp
andb
pop
cmpsl
outsb
gs
xor
adc
fs
mov
mov
setne
test
out
dec
movsb
ljmp
fwait
mov
popf
adc
and
scas
add
sarl
je
add
push
mov
adc
rcl
jbe
push
or
push
nop
addr16
ja
lock
dec
sbb
fcompl
cltd
sbbl
lods
mov
dec
push
andl
test
inc
push
pusha
stc
jbe
add
mov
add
int
add
addl
dec
fidivrs
pop
sub
movsb
mov
cmp
pushf
xchg
test
push
incb
cmpsb
je
lahf
mov
lret
lret
cld
lods
not
and
adc
and
jmp
push
sub
stos
dec
add
push
jno
cmp
das
xchg
add
ret
test
test
jp
out
out
mov
adc
stos
dec
es
ss
adcl
insb
ja
jl
sbb
loop
sbb
jne
mov
xchg
fucom
mov
data16
pop
sbb
lret
xchg
jbe
ucomiss
cmpsb
lea
ljmp
lcall
pop
popf
sbb
jns
movl
mov
xchg
xor
and
lods
shll
adcb
cmc
andl
hlt
push
icebp
jbe
cmp
shlb
inc
das
xchg
cmp
jp
jbe
mov
std
and
push
dec
scas
xchg
ljmp
pop
adc
and
in
pushf
mov
add
push
scas
dec
cmp
cmova
inc
orb
std
inc
mov
mov
pop
push
out
adcb
xchg
jg
repz
sahf
movsb
test
lret
mov
push
jp
insb
mov
or
std
xchg
jl
loope
lahf
xor
mov
add
aad
sub
xchg
icebp
roll
out
dec
mov
mov
inc
inc
adc
lret
xchg
sbb
imul
xor
push
jecxz
bound
pop
imul
cs
repz
sub
fs
add
cvttps2pi
push
sti
jmp
cmp
int
jns
mov
sar
fucomp
mov
mov
test
pop
or
jns
jno
inc
mov
dec
push
mov
xor
mov
push
push
or
xchg
test
or
cli
sbb
add
js
mov
test
jmp
cmpl
mov
xor
inc
mov
js
in
inc
dec
mov
popf
pop
jbe
stos
pop
aam
dec
sbb
sbb
daa
jmp
bound
xchg
imul
cwtl
adc
int3
add
mov
jnp
cs
repz
imul
aaa
mov
cmc
sahf
clc
test
sub
jp
les
pinsrw
or
mov
jecxz
cmc
jae
adc
sub
jbe
inc
test
ljmp
and
stc
push
inc
mov
xchg
pushf
ja
xorb
loope
fbld
xchg
aad
daa
ja
sbb
mov
nop
aaa
mov
sub
pop
pop
mov
inc
add
cwtl
push
xchg
pop
data16
addr16
add
in
inc
lret
repz
sub
imul
outsl
std
loopne
and
jecxz
inc
xchg
xor
cmp
xor
push
sbb
or
inc
lret
std
ret
addl
mov
push
cmpsl
in
dec
xchg
cmp
push
xor
mov
daa
jmp
popa
dec
cmp
mov
clc
mov
or
out
lea
jbe
dec
aaa
shrb
adc
aad
mov
mov
mov
pop
rol
and
inc
lretw
jnp
sub
adc
outsb
fcmovu
sbb
add
in
es
adc
shrl
aam
lcall
hlt
pushf
mov
add
loop
ss
adc
dec
add
push
mov
jb
mov
sub
rcrl
je
stc
ficoml
inc
sbb
les
or
mov
adc
and
iret
sub
shr
lods
push
jb
hlt
fdivp
and
sbb
imul
cmp
pop
cltd
mov
xchg
mov
mov
andl
push
jne
mov
fists
dec
mov
cwtl
filds
xorb
shl
sbb
lahf
pop
stos
push
mov
ja
jecxz
sub
push
adc
pop
cld
xor
ss
inc
xchg
add
ss
jle
cmp
jle
jecxz
inc
pop
sbb
inc
insb
sbb
mov
loop
push
loop
inc
cli
int3
dec
pop
ds
sub
loop
or
mov
jae
gs
xchg
cmp
outsl
cmpl
inc
rcll
mov
aaa
sub
aaa
sub
add
imul
data16
ljmp
inc
or
pusha
xchg
mov
insb
nop
mov
test
into
lcall
xchg
pushf
punpcklbw
pop
push
push
jno
cmp
hlt
out
loopne
aaa
xor
test
mov
mov
enter
insl
adc
js
shll
lods
out
pusha
xchg
popf
inc
inc
mov
xlat
push
jg
cmp
fbld
ret
and
inc
adc
pop
cmp
cmpsl
push
imul
mov
jns
dec
xor
inc
mov
and
dec
cmpsb
adc
sub
imulb
cmp
jo
cmp
jne
jne
xor
push
inc
inc
dec
cmp
out
and
ret
mov
sub
xchg
es
jbe
clc
pop
dec
xor
ret
mov
shl
daa
cmp
xchg
inc
popf
daa
and
xor
scas
push
addr16
inc
in
out
mov
adc
stos
lods
add
ret
mov
ret
mov
xor
xor
push
push
cmp
dec
pop
pop
pushf
ja
add
mov
fs
push
pop
push
das
jle
pop
and
mov
lcall
xchg
mov
lcall
jge
cmp
inc
jg
mov
and
add
aas
lret
in
adc
enter
dec
push
pop
cld
push
out
loope
stc
iret
das
in
and
pop
xor
jp
rcrl
lcall
mov
push
jae
inc
xor
lock
add
je
inc
add
mov
mov
and
loope
push
in
movsl
add
jnp
sahf
rolb
sub
stc
pop
cmp
data16
xor
adc
mov
sub
xor
testl
lret
bound
xor
das
xor
divb
in
leave
mov
out
pushl
jb
push
sub
mov
add
xor
mov
and
add
scas
jae
stos
addr16
add
shll
adc
mov
jp
aad
push
cmc
sub
sbb
jae
xlat
add
push
testl
aaa
mov
or
jnp
nop
sub
dec
cmpb
std
pop
cs
inc
sti
repz
arpl
or
pop
sahf
jne
cld
test
fs
push
xchg
repnz
mov
dec
mov
or
imul
push
sbb
xor
dec
fdivrl
lock
xor
insb
shlb
sbb
fs
cmpsb
insl
test
adc
mov
dec
inc
cwtl
add
jmp
mov
loope
cmc
loop
xchg
mov
and
mov
xchg
les
pop
ror
pop
fnclex
mov
cmp
shrl
sub
sub
push
xchg
inc
pusha
xchg
adcl
push
adc
cmp
ret
mov
sbb
or
cmp
aas
pop
add
mov
xor
stos
mov
pminub
mov
movsb
pop
daa
adc
xor
mov
xor
xor
adc
push
sahf
sar
sbb
and
and
pop
and
xchg
loop
jmp
mov
gs
push
cmp
sbb
cmp
test
notl
fsub
and
push
xchg
mulb
ss
add
std
push
mov
ret
das
mov
add
in
or
dec
jp
scas
adc
lock
push
mov
loop
cmp
push
clc
xlat
test
jecxz
and
push
ja
jae
hlt
stc
dec
or
xchg
lahf
outsl
insb
xchg
rcl
jg
pop
fwait
inc
add
or
testl
mov
lahf
aad
cmc
test
push
mov
jo
pop
fcom
lea
cmpsl
jb
mov
jl
jnp
mov
in
fidivl
cltd
add
xchg
outsb
xor
daa
loop
fistpll
push
cmpsl
cwtl
je
in
and
insb
cmp
test
icebp
or
insl
lcall
sub
ja
jge
stos
mov
xchg
pop
dec
and
stc
adc
mov
addb
pop
pop
icebp
pop
and
or
sub
mov
lds
and
pop
movsl
inc
jae
out
inc
in
sub
loope
fcmovu
scas
jecxz
mov
aad
out
fistpl
jp
fucomp
lds
rcrb
icebp
mov
les
lds
daa
in
incb
mov
loopne
stos
hlt
sub
test
inc
or
bound
xchg
push
in
aad
or
es
dec
and
ja
cmp
in
xchg
mov
loopne
mov
ljmp
push
sahf
in
inc
sbb
addr16
popf
mov
adc
filds
xchg
pop
scas
aaa
lods
insl
stos
cmpsl
push
push
xor
jno
jno
pop
mov
dec
sub
lea
mov
aam
js
loop
bound
inc
loope
out
lret
push
mov
jg
sbb
and
daa
jp
cmc
jp
stos
jne
movsb
push
jl
cmp
loopne
sub
negl
push
xor
test
dec
mov
dec
pusha
push
cs
mov
xchg
mov
or
and
mov
test
enter
cltd
push
shrb
pop
in
mov
movl
test
inc
in
outsb
sbb
jo
lcall
xchg
cmp
add
adc
mov
pop
sub
xlat
xchg
ss
outsl
jecxz
pcmpgtd
adc
and
loope
test
sbb
scas
lcall
test
iret
jle
xor
sahf
mov
push
and
or
inc
in
and
push
add
aad
out
pop
adc
test
test
shl
sub
scas
xlat
rcrl
outsl
cwtl
add
outsl
dec
xor
out
mov
out
sahf
mov
pop
mov
xchg
xor
mov
stos
frndint
jle
fcomp
ds
dec
out
hlt
fsubrs
jl
fs
jbe
enter
invd
js
push
out
adc
mov
xor
jns
dec
popa
cmp
adc
pop
and
push
xchg
adc
repnz
jmp
sbb
dec
std
mov
imul
pop
xor
push
sub
sahf
sbb
fldl
repnz
jnp
lret
sbb
pop
inc
mull
sbb
imul
mov
mov
adc
adc
mov
cmp
icebp
mov
sbb
sub
push
js
sbb
pop
ds
dec
repnz
and
xor
add
xchg
shrb
cmpsb
pop
pop
cmp
sbb
pop
fcoms
add
push
cli
bound
loope
or
mov
jae
bound
mov
sub
push
xlat
jl
outsb
jecxz
inc
dec
mov
jnp
fbstp
loopne
mov
decb
cmp
pop
out
pop
data16
sbb
mov
add
cmp
cmp
and
adc
stos
pop
ja
ja
push
push
inc
mov
mov
rcrb
ficompl
and
ja
jp
fucom
lods
adcl
mov
leave
cmpsb
popa
jns
or
mov
stos
pop
add
and
or
nop
xchg
add
push
pushf
pop
outsl
fs
movsb
dec
or
sub
xchg
fwait
sbb
mov
stc
push
inc
and
fcoml
add
pop
xchg
bound
ret
pop
push
iret
jbe
pushf
orb
xchg
and
scas
repz
inc
call
repz
out
jb
dec
ds
and
jle
sarl
sub
bt
sbb
mov
pusha
loope
mov
xchg
mov
pop
or
cmc
jo
xchg
hlt
jns
icebp
fs
dec
jb
xor
test
test
fmull
shlb
out
pop
push
mov
inc
jb
aas
ss
adc
movsb
insl
inc
imul
mov
movsl
ja
in
lds
adc
je
add
clc
mov
mov
fidivrs
dec
adc
cs
jne
cmp
jp
fmull
pop
jne
dec
sub
imul
and
andb
pop
adc
xor
xor
lcall
out
push
std
rcr
clc
inc
sbb
sbb
pop
pop
jl
cmp
or
sub
push
mov
cld
xorl
frstor
dec
cwtl
pop
fcom
sti
movsl
xchg
sub
sub
das
fiaddl
sbb
xchg
fs
xchg
xor
sahf
sub
cltd
sti
lea
mov
jb
adc
xor
sbb
movsl
jge
xor
mov
inc
mov
jmp
call
int3
push
pusha
cwtl
sbbl
cltd
out
mov
sub
arpl
insb
mov
and
in
mov
mov
adc
mull
jne
mov
adcb
in
aam
and
mov
mov
es
cwtl
inc
xchg
add
mov
push
pushf
xlat
mov
add
in
xchg
aas
sbb
sub
es
sub
adc
push
insl
xor
pop
push
lret
in
outsl
sub
fisttps
fldenv
dec
xor
mov
je
loopne
lock
mov
inc
enter
cmp
push
jmp
inc
out
iretw
adc
out
jno
xchg
popa
jbe
enter
fnstenv
test
push
push
xchg
adc
cld
test
sub
popa
in
xchg
enter
loop
lahf
cmp
mov
adc
cmp
inc
push
rcl
mov
fwait
pop
cmpsl
mov
int
dec
push
call
push
jae
push
scas
xlat
outsl
cmp
pop
fwait
cli
dec
push
mov
mov
or
jne
ljmp
jae
lcall
mov
fisubl
cmc
repnz
scas
cmp
mov
adc
in
pop
and
sbb
pxor
or
rorl
cltd
cmp
nop
sbbl
jg
push
mov
inc
xchg
or
jne
dec
inc
andb
aam
out
fidivl
jmp
sub
loopne
and
or
imul
ljmp
mov
adc
push
or
adc
movsl
int3
lea
mov
cld
icebp
lret
xlat
and
cmp
sub
insb
test
or
cmp
stc
sarl
jb
sti
sahf
dec
in
push
mov
shll
dec
mov
sti
sti
inc
test
push
inc
push
push
into
fwait
sbb
sub
cmp
jnp
and
iret
adcl
fwait
adc
imul
fisttps
dec
push
test
sub
adc
fst
das
fisubs
xor
and
adc
sbb
lcall
and
push
sti
cmp
mov
mov
aam
nop
pop
ds
ljmp
xor
shll
mov
and
nop
arpl
data16
jae
mov
cmp
iret
add
xchg
add
pop
stos
or
arpl
shl
mov
add
push
pusha
loopne
mov
push
adc
into
inc
ljmp
sub
dec
inc
sub
sbb
mov
in
pushf
std
or
fnsave
test
fistl
xor
test
push
pop
pusha
stos
sbb
loopne
cli
mov
xor
push
pop
leave
scas
andb
dec
arpl
std
xchg
loope
sbb
lea
or
int3
js
lods
dec
movl
and
jecxz
sbb
sti
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
jmp
mov
cmp
mov
pop
int
jl
pop
jl
leave
dec
sub
stos
pop
les
sub
sbb
in
pop
fistpll
add
sti
or
inc
push
inc
jns
daa
xor
enter
dec
cmp
sbb
mov
lock
and
lods
xor
scas
pop
xorb
xchg
dec
cmpsl
xor
or
ret
out
jle
stos
push
xchg
push
cs
fsubrl
jmp
sbb
leave
mov
inc
inc
ret
cs
sbb
cmp
in
imul
fadd
test
js
sub
jae
mov
adc
inc
inc
fst
mov
inc
loope
out
jns
pop
and
les
icebp
lahf
cmp
mov
adc
push
or
orl
andb
mov
xchg
cli
and
stos
jno
adc
push
xor
adc
test
lds
out
scas
mov
enter
out
aad
mov
cwtl
dec
push
xor
sbb
dec
or
and
add
adc
pop
ret
into
mov
fstpt
in
sbb
rorb
movsl
cmpsl
sub
cwtl
inc
mov
sbb
testl
mov
and
jnp
hlt
fwait
icebp
xor
inc
jge
pop
scas
call
movsb
sub
imul
shl
mov
rcr
aas
xor
xor
in
sbb
ds
adc
xchg
xchg
hlt
rol
xchg
rolb
xchg
call
repnz
in
push
outsb
or
jb
sub
stc
mov
clc
push
mov
lcall
and
mov
mov
jecxz
xchg
dec
cmp
ss
test
aaa
push
push
dec
mov
dec
lods
pushf
xchg
pop
pop
shlb
dec
sub
inc
adc
in
js
adc
aad
mov
add
and
data16
lahf
sbb
add
mov
xchg
insl
mov
es
movsl
lahf
xchg
repz
jnp
les
repz
xchg
imul
out
xor
push
sar
hlt
xor
daa
or
js
insl
enter
leave
aam
popa
in
scas
int
das
dec
mov
aaa
lods
arpl
icebp
push
ja
push
mov
loop
sbb
pop
out
mov
aam
int3
jae
arpl
mov
ljmp
or
in
sub
or
int3
jecxz
andb
lock
ficoml
push
pop
dec
call
out
jbe
push
data16
pop
cmc
add
fcomps
call
sub
pop
lods
je
fdiv
in
xlat
std
dec
addr16
dec
cmpsl
cmp
xlat
xor
mov
sbb
loopne
pop
into
dec
imull
lock
jne
mulb
sub
lds
jp
jmp
stc
fs
jge
aaa
aas
mov
insb
xchg
dec
push
mov
pushf
pop
fiaddl
lock
sbb
dec
cmc
pop
shl
or
notb
mov
adc
aas
dec
rolb
cmpsb
xchg
ja
jne
pushf
xchg
xor
nop
and
xchg
mov
xchg
or
xchg
push
test
sub
sbb
dec
test
xor
mov
lods
inc
fnstenv
dec
sub
fdivrp
push
shll
nop
imul
add
push
pop
sbb
mov
push
icebp
adc
fcompl
mov
xchg
rclb
sbb
adc
in
or
sbb
popl
xor
mov
mov
push
or
adc
sbb
lahf
mov
roll
aaa
lcall
stc
fcom
jp
imul
imul
insb
mov
sbb
lock
out
sub
mov
cmp
sbb
shl
loop
roll
pop
cltd
or
push
and
movsl
jns
popf
and
dec
xchg
mov
out
ljmp
popf
leave
mov
jbe
aam
cld
es
pop
add
and
out
sub
loop
rcrl
cwtl
pushf
xor
or
enter
xchg
mov
xlat
sbb
popa
int
int3
jmp
pop
dec
std
ljmp
ljmp
push
fcmovnu
push
in
insl
mov
adc
add
fwait
outsl
ds
cwtl
bnd
add
inc
mov
mov
inc
mov
mov
jae
outsb
in
pop
movsb
fwait
rcl
movsb
icebp
push
cld
jne
jg
pop
dec
test
dec
rorl
add
fs
pop
add
mov
adc
mov
cld
adc
les
outsb
cmpsl
or
inc
push
push
lret
imul
mov
mov
imul
sahf
fcompp
adc
jmp
cmp
ja
cmc
scas
in
inc
xlat
push
mov
mov
cld
or
jnp,pt
inc
lds
dec
js
cmp
int
dec
xor
lock
fmuls
fistpll
sbb
shl
cmpb
inc
in
fldcw
lods
and
std
mov
fisttpl
or
iret
pushf
inc
push
nop
sub
xchg
icebp
mov
or
jne
mov
push
sar
and
sub
in
lods
rcll
dec
shll
mov
ja
jl
and
jl
lgs
scas
pop
xor
sub
pop
fs
jb
outsl
mov
mov
cmpsl
add
shlb
sub
inc
stc
js
xor
mov
pop
cmpb
fsubs
jno
std
sub
xlat
push
xchg
mov
inc
out
adc
inc
sub
mov
jnp
ficoml
add
sub
jo
dec
mov
lret
inc
and
adc
mov
jo
mov
pop
pop
out
data16
rcrl
pushf
leave
cmp
bound
lret
mov
clc
imul
out
les
popf
pop
scas
push
lret
mov
stos
jp
and
xchg
aad
inc
stc
mov
jle
sub
mov
aas
repz
hlt
jmp
cmpsb
out
int
in
push
lock
or
subb
insb
jb
in
dec
fsubrl
xchg
fisttpl
lahf
push
cs
ljmp
in
repnz
adc
insb
push
fsts
sbb
imul
pusha
mov
jae
xchg
fucom
enter
out
xchg
mov
rcrb
mov
xor
jl
inc
dec
mov
gs
xchg
fimuls
xor
imul
cmc
int
das
into
xchg
push
test
or
inc
push
pop
inc
mov
jo
test
shl
jbe
cmovae
das
stc
aaa
mov
mov
mov
sbb
pushf
mov
mov
pop
sbb
outsb
adc
jge
pop
sbb
into
xchg
sub
mov
xchg
hlt
inc
test
push
mov
out
xchg
mov
mov
test
cmp
pop
out
setb
lods
repz
mov
mov
and
push
cmp
shll
xlat
shr
fbld
aad
xlat
xchg
xchg
mov
sbb
inc
xor
jbe
mov
pop
sahf
call
out
mov
imul
add
loop
or
popa
js
add
pop
movsl
clc
xchg
or
push
call
repnz
int
lods
mov
jne
imul
and
push
sbb
nop
movsl
dec
lock
jle
adc
pop
mov
jno
sbb
xor
add
pusha
hlt
dec
jp
or
or
push
mov
pusha
or
notb
cld
push
push
and
in
in
lret
subb
insl
loop
mov
mov
mov
or
sub
mov
stc
mov
xor
mov
xor
ficoms
inc
cmp
hlt
add
loope
add
lods
dec
xor
outsl
cmp
mov
iret
inc
mov
loop
imulb
jecxz
lds
ret
repz
dec
pop
in
push
pop
rclb
cmc
jp
imul
cmp
add
lea
aaa
mov
mov
adc
push
pop
mov
xor
dec
popf
jo
frstor
popa
shll
push
clc
loope
mov
dec
js
and
xor
cmp
dec
xor
jecxz
shrb
mov
jge
xor
ret
push
xor
xor
xchg
flds
inc
push
jnp
sub
pop
push
sar
jns
js
cmpsb
dec
mov
jl
scas
xor
pop
mov
lds
push
leave
xor
adc
ret
cmc
fdivs
cmp
sub
out
fs
cmp
add
jg
jnp
fnstenv
pop
std
out
or
fistps
ljmp
lods
cmp
outsl
or
and
dec
cmp
cmpsb
fists
addl
lcall
dec
call
mov
or
mov
add
hlt
lret
jne
add
mov
mov
xchg
or
es
mov
ffreep
sbb
sub
test
and
fmul
dec
int
fs
xchg
mov
xor
dec
pslld
pop
or
sti
pop
mov
in
pusha
sarl
mov
das
sbb
add
cld
sub
xor
pop
xchg
pusha
clc
sahf
out
push
rol
cwtl
push
ja
ds
cs
adc
push
in
addr16
in
fs
jecxz
pop
shlb
fcoms
mov
lock
out
inc
jbe
fnop
addr16
fs
rorl
cmpsl
inc
and
sub
pop
fisubs
mov
sbbb
mov
lds
clc
decb
jle
andb
ja
push
push
aas
in
mov
xchg
xchg
mov
or
push
test
and
dec
clc
cmc
jmp
inc
call
ss
sbb
and
mov
xor
add
inc
stos
test
outsb
xchg
fdivrl
add
js
call
cli
and
dec
add
out
js
dec
sub
outsl
adc
mov
sub
aam
lret
fld
or
mov
inc
xchg
pop
popa
xchg
cmpl
dec
jne
out
cmp
dec
insl
bound
dec
stc
test
jl
xchg
movl
test
push
addr16
in
xor
xlat
inc
jecxz
data16
pop
fldt
jecxz
pop
inc
mov
adc
out
repnz
adc
ret
repz
mov
hlt
ret
mov
push
and
cmp
lahf
scas
jecxz
lock
enter
inc
rclb
faddl
pop
popa
imul
sub
jle
pop
inc
fnstsw
je
inc
je,pt
and
adc
cmp
aas
inc
fmuls
xor
cs
gs
aaa
dec
into
mov
bts
cmp
lahf
mov
stc
dec
fildl
stos
xchg
pop
in
xchg
cmp
fcomps
in
mov
lock
mov
imul
pop
jbe
push
jmp
movsb
mov
cmpsl
aam
xor
add
pop
push
arpl
rorl
xor
sarb
dec
dec
or
jbe,pn
dec
int3
subb
inc
dec
data16
cmp
out
test
cld
xchg
neg
add
mov
mov
pop
popf
sbb
hlt
loopne
loope
mov
fcmovnu
std
pop
inc
mov
ret
sbb
icebp
hlt
fldt
xlat
add
xchg
sti
mov
int3
leave
sbb
mov
jne
xchg
push
cmp
xor
rcrl
xor
loope
push
or
or
lods
imul
lods
dec
icebp
clc
push
push
or
outsb
xor
add
cmp
scas
arpl
ljmp
cmp
test
push
imul
loop
arpl
add
inc
test
notl
fwait
out
fnsave
nop
test
es
xchg
lds
test
cmp
push
rcrl
xor
in
ret
rcr
and
dec
movsl
es
inc
test
mov
jb
pop
or
daa
fiadds
xchg
ljmp
push
adc
lods
sbb
adc
or
push
fucomip
xor
push
mov
fdivl
mov
pop
jecxz,pt
shr
lcall
fdivs
lret
das
ds
enter
xchg
aad
fwait
lock
es
mov
or
mov
imul
pop
std
cmp
cmc
sbb
or
jg
inc
cmp
ret
sub
jbe
fbstp
sarl
lods
fs
jmp
stos
repnz
outsl
mov
bound
imul
sub
jmp
sbb
dec
repnz
icebp
daa
adc
xor
xchg
jmp
xcrypt-cbc
cmpsl
adc
push
sbb
push
push
das
mov
ret
loopne
sub
push
and
lds
inc
subl
dec
test
jno
fadd
loop
lods
insb
mov
scas
movsb
dec
fisubl
cmp
sbb
cmpsl
arpl
pop
jnp
sub
mov
xchg
cmp
inc
dec
mov
fisubrl
out
scas
sbb
icebp
repnz
movsl
aaa
andb
xor
push
cmp
out
lods
adc
jnp
lahf
gs
adc
dec
lcall
jb
aam
roll
mov
aaa
out
xchg
in
pop
imul
push
lcall
in
lret
test
jbe
mov
inc
xchg
bsf
jno
fs
jg
jnp
ja
lret
jp
cmpsl
cli
aam
popf
bound
loopne
sbbb
inc
aas
into
cmp
dec
popa
lret
and
lret
out
incb
xchg
ja
sbb
stc
stc
sbb
adc
add
or
outsb
mov
adc
cmp
pusha
sub
ds
xchg
xchg
leave
add
dec
pop
out
mov
add
jo
mov
data16
xor
cmp
xchg
push
xchg
xor
repnz
inc
mov
and
sbb
into
push
imul
scas
cs
call
in
cld
enter
arpl
mov
mov
xor
lret
cmp
and
and
ja
jmp
insb
and
sub
mov
adc
cmpsb
xor
ja
xor
mov
fisttps
test
lds
or
and
push
das
arpl
imul
hlt
movl
xor
cmp
loopne
adc
andl
inc
test
or
mov
mov
push
cmp
mov
sti
xchg
push
mov
xchg
sub
xchg
cmpsl
xchg
in
adcb
push
out
negb
dec
popa
lea
xor
pop
dec
stos
jmp
jp
xor
and
push
pop
loopne
dec
add
xchg
sub
jnp
jnp
mov
pop
add
push
sbb
mov
call
pop
ficoms
push
std
movsb
out
stos
loop
addr16
mov
add
xchg
pop
inc
push
adc
cltd
repz
out
xchg
mov
das
inc
fs
cmp
push
mov
mov
sbb
xor
ljmp
orl
pop
bswap
inc
iret
push
mov
sub
pop
lea
cwtl
ja
mov
inc
adc
mov
sub
add
imul
sub
xchg
or
add
jge
sarb
push
mov
add
imul
jge
mov
fisubs
icebp
dec
sub
push
sub
sub
xor
xor
lds
jo
mov
fcomps
pop
dec
ljmp
insb
pop
add
push
inc
scas
sub
out
pop
enter
push
ret
ss
movsb
gs
shlb
cwtl
repz
xor
aas
mov
add
out
add
push
sbb
sub
sbb
sarl
divb
rclb
imul
movsb
int
cltd
or
xor
mov
jb
mov
ficomps
push
cmp
insl
cmp
fcomi
jg
cmp
hlt
loopne
dec
mov
cmpsl
gs
mov
cmp
pop
pop
sub
mov
mov
je
and
aas
xor
dec
popa
dec
dec
and
pop
jno
fwait
loope
rolb
ljmp
sbb
mov
push
mov
arpl
dec
mov
rclb
and
jl
sub
or
and
pop
mov
in
popa
es
xchg
cmp
sahf
xchg
cltd
sti
mov
mov
je
mov
adc
jno
cmp
bound
xor
dec
push
sub
stos
and
lods
adc
sub
fwait
rolw
pop
punpckldq
test
push
mov
mov
push
xchg
xchg
jl
mov
inc
cli
inc
xor
rcll
scas
dec
test
popa
addl
enter
jle
dec
sti
cmpsb
jbe
in
inc
mov
sub
push
adc
rcrl
sub
add
push
lcall
push
lahf
xchg
imul
stos
mov
add
sbb
or
push
xor
add
adc
sbb
add
aam
cmpsb
dec
shlb
fstl
sahf
pop
sbb
je
pop
addr16
mov
add
and
sbb
cmp
adc
gs
inc
mov
bound
je
call
or
pop
dec
in
sahf
push
fiaddl
test
repz
arpl
shlb
mov
xchg
sub
and
add
pop
jo
fs
daa
out
iret
in
inc
xor
pop
mov
test
inc
mov
inc
push
movsb
push
out
push
xchg
or
pushf
aad
hlt
mov
cmp
jne
je
mov
adc
jns
in
xchg
sub
pushf
ja
jg
adc
insl
xor
outsl
rcl
jecxz
sub
jne
sbb
sbb
jno
daa
adc
and
pop
jg
adc
aaa
push
mov
negb
inc
aaa
xor
fisubrs
addr16
fnstcw
shr
or
xor
pop
mov
xor
mov
cmp
loopne
insb
mov
mov
out
shrl
shl
adc
push
and
jmp
in
popf
addr16
imul
jno
xor
push
cmp
sbb
push
pop
dec
pop
inc
and
xchg
mov
lcall
jne,pt
mov
sbb
pop
and
fsubrs
andb
cli
jbe
bound
bnd
fsubrl
push
pusha
jb
push
loope
mov
cmp
pop
pop
test
add
or
lea
test
xchg
mov
pop
jne
repz
movsl
and
inc
out
xchg
dec
pop
dec
mov
scas
xchg
jbe
ljmp
mov
cmpl
jae
mov
push
xlat
mov
adc
loop
mov
sub
sbb
dec
imul
divl
xchg
adc
rorl
jl
cmc
mov
sub
mov
shl
lods
xchg
fistps
ja
dec
pop
into
lds
fmul
add
sbb
jns
dec
gs
or
fsub
adc
mov
add
in
movsb
sbb
addr16
pop
push
add
or
cltd
pop
adc
movsb
push
mov
test
lea
mov
pop
inc
shr
test
repz
dec
mov
dec
cmpsl
and
dec
cmpsb
mov
mov
inc
mov
jb
loopne
add
in
aaa
lcall
xor
movsb
xchg
inc
mov
adc
inc
mov
mov
dec
enter
mov
into
jb
insl
loope
and
add
dec
push
loop
iret
imul
sub
aaa
mov
jb
mov
into
fdivrs
call
sub
dec
xchg
sti
mov
push
dec
jmp
out
cmp
int3
add
sahf
test
pusha
pushf
outsb
in
fdivr
movsl
int3
and
in
cmpsl
ja
jb
push
out
cmp
pop
in
in
sti
rcr
fstps
lds
sbb
adc
xor
cmp
test
shll
mov
and
jg
loope
adc
ret
outsl
pop
pop
sti
ds
mov
filds
sub
jb
sub
mov
pop
xor
loopne
mov
and
fmull
dec
mul
pushf
mov
repnz
add
and
inc
push
lret
dec
xchg
stc
cmp
adc
int3
repz
out
into
mov
mov
lds
dec
stos
iret
and
push
push
out
stos
pop
xor
add
clc
fidivl
sti
xchg
gs
jns
mov
stos
dec
mov
stos
inc
pop
inc
ds
mov
push
jge
cmc
xor
mov
es
dec
lock
std
ljmp
mov
push
fcoms
pop
xchg
jge
js
mov
push
xchg
aam
dec
ret
rcrl
stos
jnp
addr16
call
int3
pushf
in
pop
push
gs
add
arpl
rcl
inc
callw
fcmovne
iret
fs
insl
mov
mov
das
and
dec
je
push
repnz
add
aam
pop
pop
orl
jg
sbb
or
into
fsubl
mov
xchg
mov
test
mov
push
scas
fwait
sub
and
popa
and
or
out
fwait
mov
loopne
xor
cmp
js
jp
rorl
sub
mov
leave
dec
push
sub
or
and
push
add
xchg
jb
add
dec
cld
mov
stc
adc
inc
cmp
lcall
sbb
xchg
or
push
fsts
ja
jbe
push
lock
data16
xchg
dec
daa
xor
push
dec
mov
cmp
xchg
inc
dec
add
xchg
sub
cmc
fisttps
sbb
xorb
and
pop
sbb
mov
mov
xchg
sbb
inc
push
mov
adc
test
les
mov
ss
pop
insb
hlt
fs
mov
xchg
mov
ja
fbld
andb
mov
jp
mov
subb
add
push
jns
popf
xor
lods
push
ljmp
fmuls
shrb
push
adc
in
loope
pop
sbb
xor
stc
mov
dec
and
cmpsb
sub
loopne
orb
adc
mov
ret
cltd
mov
mov
pop
dec
sarl
push
inc
dec
in
jae
push
and
mov
xchg
push
imul
xchg
inc
incb
outsl
arpl
jo
add
retw
fisubl
xchg
pop
mov
add
sub
les
ja
out
jo
jmp
repnz
insl
and
scas
xor
and
ret
dec
xchg
lods
mov
out
int
out
adc
stc
or
mov
lds
xor
or
mov
data16
dec
out
daa
cmp
xchg
out
pop
and
pop
lahf
out
fs
xor
popf
sti
xchg
pop
cmpsb
adc
outsl
imul
cwtl
call
test
xchg
lret
inc
ret
pop
movl
sub
dec
jle
jno
pushf
dec
mov
lea
stc
lret
inc
mov
mov
loope
xchg
testb
xchg
into
jb
mov
xor
loopne
sti
aas
add
push
mov
mov
shlb
pop
ret
ljmp
in
mov
cmp
cltd
sub
add
xchg
stc
movsb
decl
push
into
sub
jmp
loopne
inc
out
pop
jo
repz
jle
lret
or
mov
xor
push
rol
stc
jb
push
or
rcrb
pop
lods
stos
addr16
dec
out
aam
or
lret
cs
loope
push
and
add
cmp
lcall
rclb
dec
loop
outsl
je
mov
movsl
cmpsb
cmp
jle
xorb
ret
stos
jbe
in
mov
in
movsb
fistpl
testb
add
das
outsb
daa
push
push
fildl
xor
adc
add
sub
ret
loopne
fwait
xor
incl
cwtl
and
mov
or
push
cltd
testl
mov
mov
into
xor
loope
and
pop
sahf
rcrl
sub
jne
cli
sbb
add
jge
cmp
lds
add
pop
add
lcall
pop
or
out
or
imul
lods
xor
loopne
in
fstp
inc
xor
test
jne
and
xchg
ss
jl
push
test
in
add
icebp
xor
gs
pop
mov
xchg
jmp
nop
cmp
xor
push
divl
dec
ljmp
cmpsl
jl
bound
iret
aad
out
out
and
and
jbe
adc
aaa
xchg
lods
xor
shll
mov
mov
clc
insb
adc
pop
or
daa
aas
and
xchg
add
notb
cmc
push
mov
jae
cltd
cld
jae
jmp
push
cltd
xor
cmp
jecxz
out
lock
fdivrs
call
sbb
sub
je
dec
push
pushf
pop
jle
mov
enter
and
std
iret
cmp
mov
sub
aam
je
cld
jle
lcall
mov
mov
jmp
rclb
imul
mov
sub
aas
mov
in
gs
push
add
ja
or
pusha
aad
sahf
sub
inc
popf
mov
push
jp
xchg
inc
aas
clc
shl
in
inc
ljmp
xor
and
test
fsts
dec
and
xchg
fsubl
out
xchg
pop
cmp
push
test
ds
push
cwtl
ljmp
or
jns
lea
mov
xor
xlat
bound
xchg
xchg
outsb
mov
mov
xchg
mov
sbb
inc
xorb
xor
and
jmp
les
movsb
popa
push
orb
shlb
push
imul
aam
dec
jae
mov
in
add
shll
pop
out
clc
dec
mov
or
andb
sub
loopne
std
scas
or
push
inc
pop
ja
aaa
adc
xchg
pop
push
inc
xchg
xchg
sarl
popa
outsb
out
ds
bound
subb
cltd
shrb
xor
data16
bound
cmpsb
idivl
sbb
jmp
into
mov
andb
lods
imul
leave
pushf
pushf
imul
fs
fwait
cli
dec
sbb
cmp
hlt
jl
movsl
in
repz
lods
sbb
jge
cmp
fwait
outsl
cmpsb
pop
mov
out
fists
mov
cwtl
dec
inc
pop
rol
fdivrl
cmp
data16
pop
xor
repnz
daa
popa
mov
mov
xor
popf
jmp
sbb
repz
xor
daa
pushf
hlt
jns
sub
mov
jo
addr16
ja
mov
gs
or
cmpsb
push
cmpb
or
jmp
pop
es
sub
rcl
and
notl
and
xchg
push
sbb
aaa
subl
adc
dec
jle
inc
push
fadds
in
lret
nop
xchg
jg
cmpsl
iret
dec
add
dec
loope
adc
pop
int3
pusha
or
fiadds
jns
int
mov
jo
mov
and
mov
hlt
xor
mov
lahf
xabort
ret
sbb
jmp
pop
aas
repz
into
pushf
es
lea
mov
mov
xor
inc
aad
imulb
add
scas
outsl
xor
mov
orb
or
scas
jl
imul
mov
pop
add
adc
addl
adc
jge
aas
arpl
shll
dec
mov
jbe
shlb
cmp
xor
cmp
mov
mov
jle
aad
in
jmp
ljmp
mov
loope
or
mov
dec
imul
pop
inc
popa
cld
out
xchg
addr16
adc
filds
and
popl
mov
ret
fisubl
mov
mov
js
jnp
pop
dec
addr16
stos
in
jo
loope
jno
movsb
jo
sub
outsb
addr16
jmp
mov
mov
call
inc
frstor
imul
rcrl
lods
cwtl
shlb
int3
mov
mov
fldt
push
jnp
lret
or
adc
js
cmp
mov
pusha
mov
xor
jle
in
xor
xchg
mov
xchg
pop
cs
adc
ret
inc
es
pushf
push
ret
insb
add
jle
mov
mov
adc
scas
sbb
lods
sbb
mov
gs
aas
cmpsb
popf
cmp
jo
pop
and
dec
inc
out
fistpl
mov
push
enter
push
fbstp
mov
and
jge
cltd
sti
sub
fidivrl
cmp
fisubrs
fists
stc
pop
dec
in
xchg
inc
data16
push
jns
popf
rcll
pusha
repz
shr
sbb
inc
repnz
shlb
dec
dec
in
jg
repz
movb
xchg
loop
sarl
pop
mov
int3
enter
ja
or
sub
dec
cs
rcl
jmp
mov
jne
inc
fbld
js
scas
out
push
xor
pop
int
outsl
pushf
add
cmp
movsl
pop
rcll
fcos
xor
dec
call
mov
bnd
mov
adc
stc
jo
or
iret
daa
cmpsl
xchg
xchg
mov
pop
icebp
push
and
push
mov
xchg
ret
mov
cli
jbe
std
and
push
cli
leave
loop
sbb
xchg
adc
dec
orb
pop
cmpl
pushf
rcll
hlt
mov
mov
pop
mov
loope
lcall
sarb
xlat
adc
lret
sbb
subb
or
mov
andb
jae
cmp
lret
dec
sbbb
ds
cmp
data16
test
push
nop
fiaddl
pop
add
mov
fs
repz
test
test
data16
pop
push
int3
push
das
outsb
mov
loope
les
hlt
shll
jmp
adc
fidivl
jnp
setl
lret
out
push
and
in
add
and
or
clc
jnp
frstor
sub
pop
xchg
faddl
gs
cvttps2pi
sahf
mulb
lods
mov
loopne
xlat
or
sub
add
arpl
rcl
jg
push
daa
imull
or
sbb
push
and
ja
pop
insb
scas
inc
scas
xlat
outsl
inc
loopne
inc
out
adc
fstp
aad
sahf
pop
cmp
inc
out
insb
out
es
pop
loop
mov
daa
cli
mov
xchg
and
jge
bound
sub
dec
adc
push
dec
xchg
dec
aad
xor
cs
ljmp
mov
aas
lods
mov
imulb
jb
lock
jmp
int
pop
pop
divb
xchg
push
mov
pop
fcmovne
cmp
sbb
push
cmp
adc
leave
mov
ficompl
sub
mov
mov
lods
jo
dec
mov
inc
mov
lcall
pop
mov
inc
xor
mov
stos
push
sbb
out
push
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
jmp
insb
jns
sbb
mov
push
jae
adc
nop
jl
pop
pop
jl
and
fcomi
inc
mov
cli
filds
inc
test
mov
cmp
ret
xchg
addr16
jno
outsb
sbb
pop
push
dec
add
push
pop
sar
xor
popl
fstps
inc
push
sub
mov
or
jnp
mov
loopne
notl
sbb
cwtl
cmpb
minps
or
les
clc
sub
out
cmp
data16
movsl
lahf
int
lods
out
mov
adc
daa
push
test
sub
cmp
jno
jp
ljmp
lods
or
sub
cs
xchg
push
out
dec
or
mov
ret
mov
mov
cmpsb
pop
pop
sbb
pusha
sti
mov
xchg
fisubrl
mov
push
in
insb
out
mov
add
and
xor
or
lods
jmp
sub
popf
pop
scas
jo
mov
divl
out
scas
xchg
cs
add
orb
push
adc
pop
in
enter
pop
jmp
push
ret
xlat
add
loope
adc
sub
inc
cmp
fimull
sub
inc
dec
cmpsb
dec
mov
mov
adc
aaa
mov
push
sub
fidivl
cmc
xchg
cwtl
in
pusha
repz
fistpl
mov
sub
sub
std
test
in
jp
loopne
loopne
in
xchg
inc
loopne
sub
xlat
jnp
xchg
pshufw
sub
jl
fcoml
mulb
mov
push
cmp
cmp
cmp
stos
add
mov
adc
mov
sahf
loope
mov
test
or
adc
adc
testb
dec
bound
movsb
lea
push
andb
inc
cltd
sub
mov
int
xchg
lret
lret
dec
shrl
lahf
sub
xor
in
subb
les
add
sti
shlb
sahf
inc
xor
cmp
xchg
imul
mov
mov
in
mov
fdivr
fcmovnu
and
push
jb
rclb
in
dec
daa
ficoml
test
mov
popa
or
lret
scas
fistpll
mov
rorb
imul
enter
outsb
xchg
adc
cmp
dec
popf
bound
push
popa
xchg
sub
and
into
xor
int3
pop
pop
insl
mov
pushf
pop
xchg
test
jg
and
fidivrs
push
pushf
js
jmp
fimuls
inc
xor
sbb
xchg
pop
cmp
testb
pusha
in
mov
jmp
cltd
sub
mov
mov
pop
dec
xor
mov
or
bound
andl
lahf
rcl
add
lret
jne
jge
dec
mov
xor
test
mov
xchg
test
pushf
test
enter
xchg
outsl
shrb
rcll
scas
mov
mov
fwait
out
push
fwait
lret
inc
add
fisttpll
mov
jno
mov
out
add
mov
mov
push
or
push
inc
data16
push
xor
jne
daa
cmp
leave
shlb
aaa
push
lock
int
jo
push
popa
and
call
xchg
addb
int3
loop
cmp
adc
dec
gs
sub
cltd
pop
xchg
mov
jns
jmp
scas
xchg
push
xor
jge
mov
in
mulps
pop
cmc
cmp
ret
dec
stos
faddl
mov
cmc
jo
aam
ret
insb
sub
dec
mov
or
xchg
sub
inc
mov
movsl
dec
inc
cmp
adc
out
xchg
out
test
stc
cmpsb
lds
test
out
test
jbe
ret
jbe
xchg
xchg
loope
mov
inc
sarb
pusha
adc
inc
insb
pop
or
sub
add
dec
sub
sbb
lea
mov
fimuls
push
int
call
inc
ljmp
std
inc
and
jge
jbe
lret
ret
lret
aad
in
sub
scas
into
sbb
push
jmp
jmp
shr
jo
cmc
pop
and
inc
cs
sbbl
std
imul
arpl
fistpll
cmp
pop
out
lret
mov
rcrl
ds
ret
inc
imul
pop
pop
sbb
mov
cmp
fimull
clc
fwait
sub
insb
sbb
in
lcall
dec
jae
pop
std
or
lea
dec
sub
jecxz
push
out
daa
rcrl
cmp
call
xchg
dec
fs
inc
and
fs
ss
add
push
lret
push
cmp
js
jns
mov
add
lods
sbb
fs
xchg
out
pop
mov
sahf
in
lcall
test
and
jmp
inc
mov
ss
xchg
inc
hlt
jo
loope
sbb
and
mov
cmp
outsl
in
out
movsl
hlt
and
add
hlt
addr16
mov
mov
and
lahf
ret
or
insb
sarb
add
push
inc
inc
movsb
mov
inc
mov
testl
jmp
xor
call
cmp
inc
fwait
rolb
mov
jmp
popf
je
jg
inc
xor
repz
mov
xor
or
xchg
out
data16
lods
xorl
fucomp
jne
cmp
into
popa
mov
pop
scas
ret
cmp
sub
push
sbb
xor
mov
cmp
mov
add
jo
hlt
scas
imul
mov
mov
in
push
adc
mov
out
sub
cmp
jne
dec
and
mov
mov
gs
lcall
adc
push
arpl
test
repz
jne
mov
mov
aam
iret
incl
lock
push
jo
jbe
les
and
shlb
or
jecxz
xchg
faddl
cmp
data16
mov
movsl
mov
jae
stc
leave
sbbl
jo
push
mov
mov
les
pop
xlat
xor
dec
or
cs
adc
in
lret
jmp
cli
fbld
inc
test
data16
push
test
out
mov
sbb
xchg
mov
enter
arpl
aam
bound
sbb
inc
out
cltd
pop
cli
jl
or
and
mov
push
sbb
pushf
adc
inc
push
xchg
cmc
test
inc
test
push
cmpsb
pop
push
or
aaa
mov
pop
push
xchg
insb
inc
fisubs
lahf
aad
into
or
sti
fs
ss
xor
in
cmc
sbb
bound
outsl
and
xchg
maxps
sbbb
add
cmc
inc
xor
ret
pop
mov
jne
mov
add
orb
and
das
cs
jle
sahf
test
mov
cs
jns
lcall
repnz
push
shrl
xchg
fsubs
mov
ret
mov
adc
dec
jmp
pusha
es
xor
sub
add
into
bound
ljmp
xchg
and
scas
inc
mov
mov
insb
incl
test
movsb
mov
shrb
mov
mov
xchg
daa
sti
lahf
out
push
je
notb
outsb
js
test
test
dec
xchg
inc
jecxz
xchg
add
ss
pop
jns
scas
jmp
addr16
lock
xor
sub
dec
imul
inc
les
xchg
or
mov
mov
insb
ret
dec
xchg
inc
sti
data16
es
or
inc
pop
in
or
lcall
adc
sbb
jae
mov
xchg
jecxz
inc
fwait
lods
addr16
pusha
into
pop
ljmp
aad
stc
test
in
js
sahf
cld
repz
loope
pop
jp
jnp
cli
sbb
and
mov
js
fnsave
out
aam
arpl
or
ja
mov
and
aad
sbb
sbb
test
dec
divb
aas
xchg
lock
fadd
imul
mov
and
dec
stos
lahf
popa
sbb
inc
cltd
in
hlt
out
popa
mov
in
pop
pop
arpl
mov
out
fidivrs
outsb
cmc
sbb
add
fildll
stos
mov
xchg
hlt
jp
inc
cmpsl
mov
mov
xchg
mov
cmp
mov
push
cmpl
adc
dec
cmpsl
fisubs
fbld
lea
ljmp
nop
test
out
mov
jae
loopne
out
shlb
xorl
iret
mov
mov
leave
sub
out
dec
push
sbb
push
sbb
push
and
fsubrs
inc
mov
fiaddl
mov
mov
jae
sbb
xor
in
rorb
daa
cmp
push
mov
ljmp
xchg
and
mov
gs
dec
shlb
cli
jl
lret
adc
in
and
lods
xor
ret
in
xchg
gs
faddl
les
mov
add
jnp
fmull
jle
ja
cwtl
pop
test
xchg
dec
clc
inc
adc
dec
cmp
popf
pop
scas
sbb
push
xor
jne
sahf
xchg
inc
inc
inc
sbb
shr
aas
mov
std
test
leave
pop
sbb
shr
xchg
mov
mov
cltd
mov
push
pop
push
sbb
cli
cmp
cmp
arpl
ds
imul
dec
cmp
mov
inc
fmull
fistpll
push
mov
cmp
inc
xchg
js
fsubl
ret
mov
dec
xchg
mov
dec
es
ret
cld
push
es
test
and
xor
das
fldlg2
dec
mov
call
dec
dec
enter
lret
out
push
push
lods
popa
sub
outsl
mov
sub
push
xchg
xchg
inc
xlat
lahf
xchg
int3
es
mov
stc
add
adc
adc
int
fiadds
mov
ljmp
out
pop
cs
xlat
hlt
add
fldt
lock
movsb
out
pop
jp
cli
js
push
xchg
shll
insl
fwait
rolb
jle
adc
mov
xchg
arpl
ljmp
dec
mov
pop
sbb
jge
push
bnd
fdivs
lret
sbb
pusha
sbb
or
sbb
cmpps
push
addl
aad
imul
cmp
decb
hlt
pop
pop
sbb
fcomps
push
xlat
and
out
cli
lods
sti
pop
outsl
xor
mov
mov
jns
add
xor
orl
jno
jle
push
sahf
gs
movzbw
mov
cmp
popf
add
movsw
test
sbbb
inc
out
mov
push
mov
clc
jae
mov
dec
test
out
in
test
imul
pop
daa
or
int
fwait
fs
fwait
loope
je
daa
cli
loopne
mov
insl
pusha
movsb
fs
push
add
out
jecxz
sub
xchg
inc
pop
xchg
dec
pop
adc
inc
ljmp
adc
divb
imul
add
and
cmp
and
mov
test
push
xchg
xor
add
lock
xor
fdivp
das
dec
clc
jnp
movsb
sub
das
es
xchg
fldcw
mov
mov
mov
and
jecxz
or
add
mov
in
ss
imul
daa
dec
xchg
cli
push
stc
cmp
pop
cmp
dec
mov
in
rcr
xor
mov
and
jmp
jle
test
sub
xor
flds
addb
dec
jns
adc
sti
xor
pusha
stc
pop
loop
stc
orl
sub
icebp
mov
das
std
movsb
aas
call
pop
jno
cmp
and
mov
aas
dec
fcompl
inc
jp
mov
cltd
or
cmp
inc
subl
test
mov
ja
orb
fcmovbe
sbb
jp
ja
xor
mov
or
add
outsl
outsb
lods
fisubrl
cmpsl
ror
push
jge
jecxz
mov
sahf
ljmp
icebp
jne
fwait
das
sub
mov
ret
outsb
push
nop
outsb
insb
adc
mov
pop
mov
sbb
sahf
mov
lret
jle
aaa
adc
js
cmpsl
loopne
imul
lods
aam
mov
ljmp
mov
fs
mov
cmc
inc
xor
mov
push
pusha
xchg
fistpl
inc
sub
je
ds
xor
mov
shl
outsl
inc
fisubrs
mov
ret
aad
lock
mov
mov
xchg
cmpsb
fildll
lret
mov
rcrb
loope
xor
test
jecxz
push
loop
insb
inc
sub
pop
adc
sub
sbb
jl
push
adcb
into
shlb
or
stc
stc
in
insl
sbb
cld
inc
imul
lcall
jae
mov
sbb
fists
xor
insb
inc
fisubrs
or
push
mov
push
das
je
repz
imul
std
divb
mov
lret
inc
shl
in
jns
rcrl
outsl
push
cmp
cmovs
adc
add
shrd
jns
andb
in
ljmp
add
xchg
mov
daa
ljmp
out
sbb
in
push
dec
inc
and
jnp
stos
sbb
test
std
lret
testb
test
dec
inc
in
jae
inc
cltd
fstpl
sbb
lods
and
test
sub
dec
outsb
aas
push
and
call
inc
stc
cld
add
adc
jecxz
mov
inc
inc
ljmp
inc
mov
rcr
loop
push
mov
inc
ljmp
loopne
rorl
cmp
imul
mov
int3
dec
and
or
mov
shrb
add
jns
mov
movsb
add
inc
mov
pop
mov
push
jae
rorb
jg
fldcw
pusha
pop
mov
imul
enter
out
fs
sub
add
mov
mov
cmp
jmp
aas
loop
clc
rcl
push
jns
jns
push
add
xchg
pop
aaa
addb
xchg
lods
sub
shrl
sbb
mov
in
xor
mov
mov
loop,pn
mov
clc
fistl
xchg
hlt
js
lcall
jns
xchg
loopne
adc
jg
loop
sub
sbb
out
mov
xor
ret
sbb
mov
mov
scas
mov
sbbb
sbb
add
nop
aaa
mov
sar
jp
mov
out
mov
xchg
push
mov
inc
divb
pop
data16
inc
mov
jmp
cmp
dec
pop
push
mov
and
mov
inc
xor
mov
cld
add
mov
mov
xor
icebp
jnp
fistps
pop
in
scas
int3
ss
int
push
lock
fwait
sbb
or
add
mov
cmp
outsl
xor
data16
js
ljmp
mov
out
loopne
jge
rolb
cli
mov
inc
test
divl
xorb
add
and
and
fcoms
mov
lahf
mov
stos
fdivr
mov
push
icebp
sti
lcall
xchg
outsl
pop
cmp
mov
addr16
dec
sub
xlat
cli
loope
sbb
dec
scas
leave
pop
xor
xchg
cli
shlb
ret
inc
xlat
arpl
inc
dec
nop
add
jg
sbb
cmp
cs
xchg
test
jne
clc
outsb
and
dec
inc
lret
mov
fwait
int
test
xchg
pushf
test
fsincos
lock
jne
cmpb
rorb
mov
cmpl
xor
and
ljmp
mov
mov
inc
mov
xchg
push
mov
cmpsl
mov
sbb
inc
mov
push
dec
push
sbb
jle
xorb
inc
je
jns
ljmp
jp
sub
push
jge
loope
popf
pop
xchg
lret
pop
retw
mov
call
jb
mov
enter
in
notb
mov
push
mov
mov
pop
enter
pop
xchg
stos
loopne
adc
or
leave
dec
mov
insl
mov
cs
mov
daa
adc
jl
fmuls
dec
popf
mov
cmpsl
das
push
push
mov
mov
push
clc
js
data16
rclb
add
enter
jle
clc
xor
mov
jge
mov
inc
js
fmull
adc
fld
xchg
in
mov
xlat
lea
ffree
shl
inc
mov
addr16
dec
jp
mov
mov
sbb
jb
repnz
popa
sub
sbb
sti
pop
icebp
sbb
in
adc
test
pop
das
nop
jbe
mov
je
notb
ret
pop
loope
adc
rcrb
mov
xchg
imul
cltd
adc
cltd
inc
dec
mov
jmp
jb
test
mov
xchg
pop
sbbl
adc
jns
fs
fwait
jmp
push
movsb
jecxz
outsl
cmpsl
adc
add
mov
fnsave
stos
imul
ret
pop
je
jp
icebp
pop
mov
mov
xchg
cmp
orl
pusha
inc
add
pop
dec
xor
xor
inc
xor
sub
fdivs
sub
hlt
adc
mov
xchg
mov
cmp
outsb
rorl
mov
ret
ljmp
cli
dec
add
xor
xorb
jge
rol
xchg
fsubrs
mov
add
rcl
andl
inc
cmp
icebp
push
ud1
inc
mov
daa
out
fs
inc
jo
push
adc
sub
xchg
xchg
sub
or
mov
pusha
int3
int
xchg
cmp
inc
shr
shlb
daa
mov
pop
subl
push
cmpl
inc
cmc
jb
push
dec
dec
xchg
addr16
sbb
cmp
cmpsb
push
ret
and
mov
in
push
outsb
das
push
lcall
shl
sbb
or
xor
dec
test
out
mov
adc
lret
fimuls
mov
mov
jmp
sbb
cmpsb
mulb
rorb
aad
cltd
pop
js
xchg
pop
fs
xlat
insl
mov
inc
add
mov
push
xchg
push
loop
dec
rclb
ds
xchg
jbe
mov
mov
lret
jmp
push
xlat
jae
jl
imul
les
add
shll
sbb
into
xchg
add
loope
outsl
je
xor
mov
pop
in
xchg
in
rolb
fldcw
push
xchg
push
mov
movsb
or
cltd
jl
push
xlat
mov
in
pop
pop
cltd
inc
popa
pop
mov
mov
dec
ds
test
inc
mov
xor
repz
scas
imul
cs
stos
mov
mov
pop
aam
mov
mov
in
xchg
cmc
stos
mov
mov
pop
adc
pop
adc
sarl
int3
jo
xchg
xor
xchg
iret
movzwl
in
push
divl
mov
xchg
stc
jp
fwait
sti
out
dec
push
nop
bnd
add
in
adc
jb
sbb
mov
mov
movsb
js
mov
popf
outsl
lea
add
stos
shlb
mov
inc
outsl
sarb
nop
xor
lahf
push
inc
roll
jno
rcrb
int3
mov
xchg
jb
mov
mov
add
jno
lea
aaa
xorb
shll
in
inc
fdivp
fwait
inc
call
into
jo,pn
mov
inc
leave
pop
movsb
inc
das
enter
enter
repnz
cld
cmp
jnp
mov
dec
jne
dec
fnsave
dec
mov
xor
ret
dec
pop
je
cwtl
mov
es
popf
insb
ret
adc
cmc
repz
adc
arpl
pop
test
pusha
fs
inc
les
icebp
out
mov
mov
pop
scas
push
out
inc
xchg
mov
int
jmp
cli
xchg
mov
inc
bound
fisubrl
ds
pop
out
fcoms
in
pop
nop
out
sbb
cmp
push
cwtl
xchg
mulb
mov
cmp
adc
jbe
cli
pop
inc
xor
cmp
scas
ljmp
or
xlat
xor
mov
scas
adc
sub
add
xor
mov
jmp
out
stos
jmp
lods
jne
pop
pop
jmp
in
add
inc
pop
clc
mov
sub
pop
cmpsb
popa
mov
loop
xor
orl
mov
aad
fnstenv
push
mov
xor
cmp
popl
add
dec
data16
shrl
popa
rcl
test
shl
fldcw
jge
push
dec
aam
hlt
push
pop
adc
ror
dec
in
mov
mov
popf
adc
test
adc
adc
jbe
cs
sahf
jb
jnp
push
bound
cmpsb
xor
xchg
or
popa
cmpsb
in
negl
inc
xor
pop
xor
insb
ss
push
xor
xchg
pop
test
es
leave
bound
xorb
fistl
add
adc
push
adc
sbb
cmpsb
stc
dec
mov
xor
jb
adc
jno
xchg
inc
push
shll
jo
shrl
pop
in
push
dec
pusha
jmp
inc
inc
mov
movsl
sbb
cltd
and
inc
lock
cmp
mov
push
or
mov
cmpsl
pop
stc
push
push
imul
inc
or
or
andb
out
jl
xor
lcall
movsb
mov
sub
imul
loop
movl
add
lods
andl
mov
or
dec
insl
mov
mov
adc
jb
xor
jo
jno
test
pop
fmulp
scas
mov
xchg
pop
cmpsl
jp
out
mov
inc
mov
fs
daa
and
mov
jb
test
cmpsl
iret
sahf
insl
inc
push
fdivrs
sub
dec
sahf
mov
mov
fmul
mov
sub
icebp
mov
test
or
pop
lea
insl
and
insb
add
std
fs
rcrl
dec
mov
mov
pop
dec
sbb
mov
add
enter
jge
ret
popf
cli
dec
dec
gs
push
and
fldcw
arpl
add
sbb
rclb
je
mov
and
push
push
fistps
shr
cli
rcrb
ficomps
ficoml
sarb
loop
les
cmpsl
xchg
push
shll
mov
lock
fisubrs
or
daa
mov
mov
iret
je
movsl
push
xchg
push
cmp
mov
lods
add
push
push
imulb
or
fs
out
sub
inc
in
mov
xor
ljmp
jnp
scas
mov
inc
lock
lods
test
insl
loope
or
lds
push
xchg
mov
inc
in
or
and
test
pop
push
sub
adc
std
pop
es
cld
jg
pop
push
push
jp
xor
fldcw
cli
mov
orb
test
cmpsb
and
and
pop
lahf
add
mov
pop
inc
daa
ret
add
lret
mov
popa
xlat
std
xchg
pop
pop
mov
xchg
xchg
push
sahf
push
mov
cmp
or
xor
push
idivb
fcmovbe
fisttpll
loope
mov
lahf
mov
jp
in
ds
jo
movsb
xor
jns
stc
xchg
push
clc
dec
sahf
adc
les
pop
loopne
lret
fiadds
mov
sub
sbb
jge
push
sub
inc
subb
jl
xchg
adc
sub
xchg
jge
icebp
dec
sar
js
mov
or
loop
mov
xchg
daa
icebp
sbb
jp
mov
inc
nop
jo
cmpsb
stos
push
mov
mov
add
sbb
mov
jp
jge
js
jl
sarb
loopne
mov
out
adc
add
push
mov
xchg
sub
inc
ds
dec
add
test
shll
cwtl
add
inc
cmp
inc
xor
out
add
pop
fdivl
lea
adc
popf
mov
pop
jae
and
pushf
enter
cli
rorb
mov
in
xor
mov
stc
test
xorb
ss
mov
mov
inc
xor
pusha
popf
adc
nop
pusha
fists
mov
push
les
iret
test
subb
jecxz
mov
scas
jecxz
ds
or
stos
jno
xchg
call
xchg
cwtl
stc
pop
mov
out
mov
push
cwtl
add
fwait
jns
inc
dec
in
and
jnp
xlat
data16
test
adc
aad
popl
sbb
int
xor
cli
dec
push
clc
mov
xchg
je
js
push
es
jnp
xchg
cwtl
in
enter
cmpsb
and
inc
sub
sub
cmp
iret
ret
cmc
xchg
cmp
outsl
push
test
or
pop
fsubs
stos
or
addr16
mov
mov
test
pop
ds
cmpsl
dec
pushf
je
ss
cmp
xor
insl
or
imul
inc
call
daa
dec
ret
adc
dec
cld
dec
ret
pop
test
push
andl
push
rorb
xchg
scas
dec
stc
sbbl
dec
outsb
shrl
loope
inc
sbb
and
mov
and
inc
jb
mov
mov
inc
ret
cmp
daa
out
push
mov
jne
dec
add
jge
push
mull
xor
mov
in
ss
stos
xchg
popa
fcompp
pop
cld
ret
mov
add
les
mov
lahf
mov
clc
ja
popf
jne
sarb
dec
lret
dec
cmp
jp
mov
stc
add
adc
and
imul
fildl
xlat
push
inc
out
mov
add
cmp
clc
fisubrl
jno
jle
push
or
ss
xor
outsl
lock
jb
jge
mov
insb
jp
pop
addr16
ret
push
push
bnd
jmp
push
add
mov
test
dec
pop
test
enter
add
lea
cmp
mov
cwtl
pop
movsb
pop
cmc
arpl
pop
pop
sub
out
iret
outsb
cmpsl
pushf
shlb
enter
or
sbb
ficompl
sahf
inc
sub
xchg
sbb
or
std
xlat
imul
add
aad
dec
mov
aad
cmpsl
push
inc
incl
std
ljmp
push
jne
mov
pop
mov
cmc
add
mov
dec
gs
les
int
es
les
imul
stos
or
test
js
insl
addr16
pop
fisttpl
mov
int
mov
lock
call
into
sub
dec
scas
cmc
mov
mov
mov
insb
mov
inc
push
cmp
add
ss
cltd
stos
sub
sarl
push
aam
rclb
cmp
push
jns
fadds
xchg
lcall
xchg
lret
in
jnp
xor
cmp
cmp
popa
sub
fnsave
xlat
jns
loop
je
stc
mov
insl
in
sbbl
inc
xchg
subl
mov
rolb
pusha
xchg
fs
sub
add
pop
and
and
popa
pop
pop
mov
imul
xchg
sahf
xchg
jo
cli
dec
jne
and
sub
mov
cmp
test
movl
popa
movsb
imul
loop
mov
aaa
sub
fnstsw
inc
mov
mov
xlat
mov
add
push
jbe
sub
pop
or
push
cmp
jb
or
hlt
jmp
mov
xor
mov
mov
out
mov
cmp
clc
repz
jne
pop
jb
mov
outsb
jb
sbb
outsb
call
pusha
push
iret
jno
xchg
hlt
fdivs
sub
ficompl
xlat
cmpsl
icebp
out
xor
fimuls
sub
cltd
and
mov
rcll
inc
inc
ret
jle
in
xchg
add
cmp
push
shll
jp
out
mov
adc
push
sub
fnstenv
sbb
jb
out
sub
fimuls
cmp
mov
mov
cs
faddl
add
sub
paddd
rcl
mov
testl
mov
shll
fstpt
addl
mov
push
cmp
cmp
dec
aam
dec
in
ja
adc
dec
popf
mov
hlt
insb
lret
and
int3
mov
dec
js
pop
lods
mov
pop
aaa
cmp
push
aaa
in
cld
outsl
and
rorb
and
stos
insb
ficoml
mov
dec
push
jg
scas
test
mov
sti
rorl
movsb
xchg
dec
out
lret
cmp
out
dec
ret
icebp
xchg
xor
mov
je
scas
int
adc
addr16
push
fisttps
mov
cmpl
ljmp
and
leave
jb
sub
xor
js
pusha
and
xchg
pop
lcall
cltd
repz
mov
mov
push
cmp
mov
or
push
jno
repz
inc
pop
or
test
mov
cmp
pop
in
sti
mov
xchg
pop
cmp
sub
loope
loop
sub
sub
popa
pop
push
dec
out
sahf
xchg
jle
test
movsb
dec
mov
lea
ja
pop
arpl
and
jno
jb
sbb
mov
inc
cmp
pop
cmp
xchg
dec
les
lahf
repz
pop
jne
in
push
subl
in
test
xchg
addr16
mov
sub
cmc
aaa
sbb
mov
js
sbb
or
cmpsl
pop
dec
sbb
push
cmp
mov
sbb
jg
mov
mov
dec
push
cmp
and
cmp
sub
insl
and
jmp
scas
xor
cld
icebp
js
idivl
jae
scas
dec
xchg
daa
dec
push
repnz
push
push
loop
mov
mov
xchg
push
mov
sbb
dec
sbbl
cmc
insl
jecxz
jno
ficomps
dec
inc
xchg
xor
ret
or
inc
in
loope
pop
mov
daa
test
pop
mov
ret
cltd
fsubr
popa
rcl
andb
push
scas
xor
mov
jge
insl
divl
sbb
and
cmc
jmp
out
adc
loop
ja
adc
fwait
xchg
insb
repz
out
in
es
mov
inc
sub
shll
xor
movsb
pop
push
xchg
inc
dec
pop
int3
js
fwait
add
sbb
pop
mov
jge
sbb
fcmovne
xchg
inc
mov
xchg
lcall
enter
lods
inc
add
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
jne
adc
std
push
adc
aas
adc
sbb
adc
sbb
add
push
adc
out
jg
add
dec
adc
mov
jns
add
inc
adc
sbb
inc
add
cmp
inc
add
cmp
inc
add
cmp
inc
add
add
add
add
add
add
add
inc
cmp
add
scas
inc
adc
inc
cmp
add
adc
push
adc
cmp
add
sbb
add
adc
idivb
inc
add
cmp
cmp
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
adc
subb
cli
adc
sbb
adc
pop
inc
adc
sbb
adc
in
pop
adc
pop
sub
add
add
inc
add
add
inc
add
add
cmp
add
aaa
adc
cmpl
adc
push
dec
adc
mov
adc
lock
add
adc
outsb
or
add
add
add
push
push
inc
push
cli
fsubrl
dec
push
dec
dec
mov
push
mov
cld
test
add
add
pop
dec
outsb
jae
popa
insb
insb
and
je
pop
push
outsb
fs
dec
push
pop
dec
popa
imul
outsl
insb
fs
dec
outsb
arpl
gs
dec
outsb
outsw
inc
jo
add
add
add
add
add
cmp
add
add
add
add
add
mov
cmp
add
mov
cmp
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
