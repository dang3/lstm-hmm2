push
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
or
jmp
int
sarl
push
sbb
clc
cltd
xor
js
push
js
enter
rcr
fld
pop
push
or
mov
bswap
and
sbb
inc
bound
mov
or
mov
and
lods
fadds
pusha
out
outsl
adc
sahf
add
dec
lods
pop
sub
mov
lds
adc
xchg
icebp
dec
loopne
dec
call
mov
sub
sbb
xchg
sub
repz
out
cli
in
xchg
cmp
jbe
xlat
sub
add
sbb
xor
adc
fisttpll
cmp
arpl
rclb
fistpl
and
inc
push
aaa
adc
fstpt
dec
repnz
in
cmp
mov
enter
loope
sub
fstpt
push
lds
and
fisttpl
cmp
cmpsb
mov
movzbl
adc
lock
adc
sahf
ficoms
scas
sbb
je
mov
or
icebp
iret
push
in
jg
sbb
push
pop
sub
inc
xorl
popf
mov
xchg
fcoml
jb
aad
jbe
negb
or
inc
adc
or
jnp
pop
and
std
pop
lret
add
pop
mov
jg
fidivl
scas
mov
pop
testl
iret
cli
xchg
inc
sbb
hlt
mov
and
in
add
int3
les
int
mov
pop
cmp
pop
test
cmc
iret
sub
insb
xor
mov
addr16
mull
out
xor
mov
add
mov
cmpl
imul
mov
jp
or
dec
cltd
bound
arpl
jns
fwait
sbb
mov
xlat
movb
jo
or
rol
xor
loope
jle
xchg
sub
lods
push
inc
push
movsb
cs
ds
scas
sub
test
popa
mov
xor
sub
pop
out
inc
xor
pop
scas
push
ljmp
shll
leave
mov
je
sbb
push
xor
mov
jmp
movsb
push
jnp
inc
out
aas
pop
adc
cmp
roll
addr16
nop
dec
push
mov
dec
xchg
je
push
add
inc
and
sbb
jne
fstps
popf
jmp
dec
movsb
pop
lret
fidivs
imul
or
or
mov
mov
sub
cmpsl
xchg
mov
int3
mov
pop
mov
xor
inc
pushf
inc
or
cmp
lahf
jmp
sahf
or
mov
out
leave
cmp
xchg
adc
out
mov
loope
inc
stos
xchg
and
and
shrb
or
enter
mov
clc
fmuls
int
pop
addr16
cmpsb
push
dec
mov
mov
mov
jae
pop
and
jp
aas
pop
push
test
push
cwtl
iret
daa
loop
shlb
icebp
mov
ret
add
loop
xor
rclb
loope
mov
cmc
fcomps
and
jae
mov
inc
dec
xchg
xor
lret
pop
xor
dec
mov
mov
add
mov
cmpsl
pop
push
inc
push
addr16
push
add
ljmp
loopne
sub
push
movb
outsb
ffreep
sbb
mov
int3
push
pop
mov
xor
neg
pop
shll
mov
xchg
clc
sub
jecxz
ja
mov
cmp
scas
aaa
in
out
ss
addb
pop
mov
or
movsl
and
mov
cmp
insb
cli
out
xchg
push
insb
pushf
daa
mov
leave
imul
or
fidivs
mov
popa
out
sbb
ljmp
cmp
inc
mov
loope
cmc
iret
mov
inc
stos
sbb
push
xor
jb
mov
and
mov
in
jle
mov
xor
fmul
fwait
mov
inc
enter
sahf
push
xchg
xor
testb
icebp
sbb
cmpl
cmp
jnp
sub
xor
mov
add
mov
mov
in
cmpsb
fidivl
cmpsb
add
clc
js
and
push
jmp
aas
xor
push
push
div
jle
out
loope
divb
lret
and
cmpb
stc
or
mov
leave
jae
shl
mov
inc
xchg
mov
cmp
scas
outsl
jb
lods
iret
fucom
es
faddl
mov
fnstenv
push
js
aas
fs
call
add
or
inc
lock
in
test
inc
add
or
mov
andl
push
sub
jmp
enter
rcl
xlat
xlat
dec
xor
pop
test
jmp
push
js
push
js
test
pop
jo
mov
or
push
cmp
pop
mov
mov
sbb
xchg
adc
sbb
mov
or
out
sub
mov
negb
xchg
loopne
inc
mov
ret
test
add
mov
pop
cwtl
cmp
and
xlat
pushf
ja
add
jg
xchg
int
dec
je
xchg
outsb
sbb
jge
add
mov
in
pushf
addl
push
inc
std
pmullw
xchg
inc
insb
inc
ss
jns
dec
xchg
test
fs
cmp
mov
imul
or
repnz
rorb
mov
int3
and
iret
add
xor
and
mov
loopne
test
mov
in
ds
imul
into
xchg
loope
popa
mov
xchg
pop
or
push
nopl
ja
pop
test
cmp
loopne
jns
bound
jb
mov
mov
cs
idiv
shl
mov
sub
roll
rcl
outsl
iret
dec
mov
sti
dec
pop
stos
das
popf
xchg
adc
adc
add
aas
cmp
or
ja
popf
sti
jp
mov
jne
call
mov
xor
out
cmp
pusha
repnz
and
popa
cli
mov
pushf
lret
pop
idivl
std
out
xchg
mov
xchg
out
dec
dec
push
mov
insl
pop
cltd
insb
lcall
sti
in
js
inc
scas
sub
push
mov
sbb
cmp
mov
xor
repz
mov
inc
push
pop
lods
fcompl
cmp
hlt
sub
data16
mov
dec
fwait
inc
gs
adc
sbb
stos
pop
mov
cli
popl
mov
clc
js
sti
popf
mov
and
das
scas
xchg
inc
call
push
stc
dec
roll
stos
push
jl
push
ds
ret
mov
mov
imul
or
xor
sbb
and
dec
lahf
dec
pop
dec
dec
sbb
fcoms
mov
push
scas
xor
lea
jnp
sub
inc
mov
ljmp
inc
cld
jge
dec
shrl
idivb
adc
mov
pop
outsb
rorl
cmpsl
add
push
add
push
cltd
mov
jnp
adc
sbb
ds
add
fidivrs
gs
mov
xor
sub
push
call
scas
cmp
mov
lods
mov
pop
add
aam
sahf
movsl
das
arpl
mov
sbb
out
aas
lds
adc
and
cli
mov
stos
mov
cmovne
std
jo
sub
lock
cmpl
add
sub
dec
lock
mov
std
js
mov
lret
int3
push
rorl
ss
pusha
rorb
stos
in
push
mov
mov
outsb
loopne
incl
fwait
jae
nop
mov
adc
stc
add
repnz
js
into
xchg
jmp
jecxz
or
mov
mov
or
mov
lds
adc
subl
stc
in
gs
arpl
pop
in
cmp
test
lret
sbb
jns
inc
xchg
xor
in
mov
setns
sbb
cmp
jl
rorb
test
lods
push
push
loopne
ja
push
pop
cli
mov
in
outsb
push
ret
push
test
insl
push
add
mov
adc
jns
pop
out
pop
in
mov
test
xor
adcb
cmp
jle
mov
mov
jne
mov
jnp
stos
iret
add
int
jns
dec
xchg
and
pop
push
jo
xchg
xorl
xor
fwait
lret
pop
mov
jbe
cmc
push
xor
stos
pop
mov
sub
insl
push
std
inc
stos
and
popf
gs
js
call
stc
je
push
bound
mov
adc
pop
cli
das
fdivrs
movsl
and
jge
fsubs
lret
cmp
jns
das
ds
inc
leave
inc
mov
les
mov
fists
test
adc
cmc
jns
push
xor
shlb
les
push
cmp
or
dec
xchg
jae
xchg
cld
shr
cmpsl
xor
adc
aaa
das
mov
cmp
mov
push
loopne
test
ds
mov
push
adc
jg
jo
cmp
adc
jecxz
js
or
and
jb
mov
sbb
mov
xor
push
add
mov
mov
mov
sub
and
add
movl
jmp
enter
shrl
mov
pop
jp
push
pop
js
push
js
in
dec
push
cli
xchg
sbb
cmpsb
mov
inc
or
fistpll
in
add
movsl
outsb
int
xchg
das
xchg
or
mov
test
cmp
outsl
nop
or
inc
xor
inc
mov
push
push
hlt
test
movsl
shlb
testb
xchg
rcrl
loopne
filds
out
outsl
aas
bound
stos
fwait
cmp
xor
jl
xor
xor
jg
pop
lea
insb
cld
jl
andl
add
jo
mov
jns
cmp
incl
adc
jb
jno
repnz
mov
pop
cld
and
stc
sub
mov
dec
adc
mov
mov
mov
shll
adc
inc
insb
pop
repz
and
mov
xchg
lds
jae
mov
cld
outsb
cmp
ffree
movl
mov
imul
xchg
gs
jnp
lea
and
push
sub
mov
adc
add
lea
movsb
dec
xchg
add
dec
push
or
push
lock
push
icebp
jp
in
pop
add
loopne
xchg
mov
repnz
inc
jge
adc
out
fistpll
jg
pop
test
loopne
xchg
xchg
fmulp
and
popa
inc
push
or
fstpt
mov
push
and
adc
jnp
insl
lcall
imul
arpl
xchg
jno
mov
jge
or
sbb
adc
shlb
jmp
adc
jp
jecxz
outsl
mov
int3
ds
sahf
ja
insb
movsl
in
fwait
hlt
xchg
mov
inc
add
out
pop
and
pop
inc
cwtl
shll
test
sbb
lahf
loop
sbb
ljmp
icebp
nop
jmp
and
xchg
int
adc
in
xor
push
fstps
enter
scas
jo
test
xchg
scas
clc
inc
shrb
test
adc
pop
mov
gs
and
mov
and
stos
subl
ljmp
movsl
ret
lret
loop
dec
fdivs
insb
stos
repnz
stos
cmpb
outsl
inc
xchg
in
loop
xchg
addr16
pop
gs
mov
pop
inc
push
cmpsb
sahf
xor
shrl
loope
stc
dec
and
cmpsb
hlt
repnz
xchg
ja
dec
adc
pop
sbb
cmpsb
dec
push
test
loopne
leave
ja
fisubrs
xor
pop
pop
push
push
in
and
out
fldcw
popa
stos
jb
dec
rolb
js
xor
jb
cmpsl
dec
filds
push
mov
mov
adc
inc
mov
cmp
and
add
fldenv
test
sahf
dec
jb
and
rorb
xor
pop
sub
dec
or
addb
inc
mov
in
push
lahf
in
mov
inc
adc
mov
gs
data16
mov
cmp
cmp
ss
test
loop
into
fwait
add
or
loop
int
push
xlat
nop
jae
sahf
cmp
mov
dec
cmpsl
test
in
jbe
subl
xchg
js
inc
cltd
cmp
es
decl
xchg
cmp
idivb
fstpt
push
clc
setae
in
or
into
cmpl
test
loope
inc
or
jecxz
jl
push
mov
pop
pop
pop
pop
icebp
sahf
add
fldcw
and
push
lods
or
sar
cmp
sbb
and
cwtl
lahf
out
xlat
inc
in
add
inc
xchg
xchg
add
dec
call
testb
insl
inc
call
dec
ljmp
mov
jmp
int3
push
data16
lret
mov
add
dec
in
ficoms
fwait
push
ret
push
or
mov
nop
dec
sub
mov
or
test
aaa
fidivrs
mov
int
daa
inc
mov
xchg
mov
imul
dec
outsb
leave
cmp
pop
and
mov
fsts
ret
xchg
scas
dec
xlat
pushl
mov
hlt
mov
std
iret
sbb
call
out
add
fnsave
mov
jg
xor
inc
imul
adc
jmp
insl
xor
and
sti
add
sbb
push
insb
call
imul
xchg
stos
cld
aas
popf
fcoms
icebp
ljmp
int
lock
addb
inc
enter
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
sbb
movl
jmp
int
cmp
rcr
mov
mov
inc
or
push
js
mov
dec
sbb
in
add
aad
push
push
pop
jl
dec
inc
mov
jecxz
and
mov
mov
pop
ds
scas
ss
insl
xchg
and
ret
mov
and
rorb
in
xlat
dec
lea
addr16
in
cmp
xchg
fs
test
out
xor
ror
dec
mov
aas
call
push
ds
mov
clc
test
test
fs
push
pop
jecxz
mov
mov
push
pop
xor
test
inc
sub
idivb
cmpsb
into
pop
vmovd
popa
ljmp
xchg
mov
jne
add
push
cmc
loop
xor
add
aaa
pusha
xchg
out
mov
add
insl
ss
sbb
and
xchg
aaa
adc
or
xchg
xchg
fincstp
or
mov
aas
pop
xchg
sarb
mov
sti
sbb
mov
icebp
aaa
inc
or
mov
fcomp
cmc
sub
sahf
dec
jb
inc
dec
or
in
mov
mov
lea
jmp
add
and
mov
push
xchg
adc
jo
sub
sub
popf
mov
addr16
in
mov
popa
adc
xor
pop
xor
or
stc
or
mov
jle
mov
out
jmp
cwtl
mov
sbb
lret
cmpsl
neg
bound
fsubrl
fs
push
cli
xchg
adc
inc
imul
int3
mov
fisttps
jno
test
add
xchg
in
cld
mov
cmpsl
xor
and
je
lret
into
pop
sub
and
push
pop
or
cmp
mov
iret
mov
dec
pop
shr
dec
imul
lret
stc
cmpb
into
rcrl
sub
sbb
nop
aaa
lock
xchg
dec
or
pop
xchg
jle
testb
and
cmpsb
testb
adc
pop
out
and
rclb
cmp
jbe
insb
xchg
fs
sahf
xchg
xor
mov
clc
xor
or
inc
or
pop
jecxz
xchg
mov
push
test
test
add
flds
sbb
daa
je
in
hlt
out
imull
sub
adc
mov
lahf
fdivl
pop
add
xchg
pop
stc
mov
jle
mov
nop
imul
dec
mov
push
cwtl
sbb
xchg
outsb
or
cmp
in
nop
js
jnp
shlb
ret
out
lret
cli
repz
gs
fsubrl
sub
mov
mov
add
pop
aam
sbb
cli
pushl
mov
outsl
push
insb
pop
andl
sub
jno
mov
shll
jle
clc
sbb
mov
adc
sub
dec
pop
sbbl
or
repnz
pop
mov
imul
addr16
and
call
imul
sti
gs
repz
inc
adc
scas
sbbb
test
xchg
cmp
shl
mov
sub
add
dec
pusha
jno
test
or
mov
push
pushf
xchg
cmpsl
mov
and
cmp
jge
stos
push
fsubrp
fldcw
xchg
adc
insb
pop
push
cs
jp
mov
adc
lret
pusha
adc
lret
popa
cmp
push
add
add
into
loope
add
imulb
xor
pushf
xor
cmc
dec
repnz
test
mov
or
imul
mov
jno
call
jmp
pushf
or
dec
inc
sahf
push
sub
scas
stos
call
je
fcomip
jle
fstpl
into
out
test
rolb
mov
cmp
fnstenv
jmp
movsl
mov
mov
mov
pop
jmp
nop
cwtl
dec
mov
xchg
pop
adc
sub
pop
sbb
mov
icebp
fimuls
dec
out
lods
repz
rcrl
rep
or
cld
mov
adc
jp
andl
cmc
test
pop
imul
int3
add
push
faddl
jb
push
adc
or
shlb
ljmp
sbb
jno
inc
pop
repz
aas
xchg
or
pop
in
sbb
or
fistpll
mov
call
xor
fadds
lock
jmp
leave
mov
leave
jl
lods
aam
inc
subl
movsb
or
cli
idiv
dec
sbb
rorl
pop
fadd
cmp
dec
insl
mov
daa
jno
push
xchg
xor
mov
mov
mov
pop
inc
test
xchg
sub
ficoml
xchg
ss
mov
xchg
dec
shrb
pop
cltd
xchg
pop
or
sbb
jg
add
inc
cmp
inc
pop
sbb
jp
sahf
das
nop
shr
cmp
test
outsb
cmp
ret
and
inc
imul
movsb
lods
mov
cmp
and
mov
mov
pop
and
adc
cmp
out
aaa
ret
das
sti
xor
fcompl
mov
sub
testl
std
pop
mov
rcrl
jl,pn
pushf
outsb
ja
inc
xchg
sub
jp
sbb
addl
notl
pop
fnstsw
inc
push
or
lret
mov
push
lret
jo
push
movsl
test
xor
xchg
into
pop
jbe
iret
enter
mov
fdivl
cltd
lcall
dec
sbb
sub
push
hlt
cmp
mov
pusha
scas
mov
mov
jg
loope
push
xor
dec
aas
sbb
ja
or
scas
fisttpll
mov
inc
push
lods
push
inc
mov
jecxz
fwait
sub
fbstp
jecxz
adc
lds
es
icebp
fdivl
pop
xchg
sub
adc
push
xchg
jnp
test
scas
aad
imul
out
adc
sbb
fadd
mov
xchg
pop
ljmp
idivl
adc
adc
ret
mov
fmuls
push
jle
xchg
jb
inc
xchg
out
mov
jp
sub
jge
adc
push
addr16
xlat
and
cld
push
loop
pushl
lods
mov
sbb
sbb
in
loop
or
pop
xchg
pop
rolb
add
lds
sti
inc
sbb
sbb
jle
pop
xorb
imul
subb
test
aad
shll
and
sbb
sub
insb
and
inc
pop
insb
iret
xchg
out
or
scas
jecxz
adc
push
mov
int
insb
push
push
and
or
imulb
pusha
jecxz
ljmp
push
loop
test
lcall
xor
test
sub
xchg
cs
aad
jmp
lea
lods
jnp
repz
in
dec
out
push
rcll
mov
and
xchg
jbe
aam
and
xchg
sub
xor
out
or
ret
adc
mov
lods
or
idiv
xchg
mov
push
mov
xchg
mov
je
and
ret
lret
das
cmp
test
pop
ret
in
outsl
dec
shll
adcl
jl
int3
fldl
mov
sub
iret
into
daa
rorl
push
ja
mov
pusha
lea
jg
fst
js
ret
mov
ja
jmp
and
and
mov
mov
inc
xchg
mov
imul
jae
outsb
and
mov
aam
jmp
aad
mov
pop
mov
shrl
andb
mov
fs
aam
pop
dec
mov
push
out
int3
push
into
add
jl
out
andb
outsb
push
fidivs
pop
dec
lret
cmp
and
fs
gs
or
int
setb
mov
andb
stos
test
cmc
in
sub
lea
pop
decb
jb
das
inc
stos
pop
stos
es
pop
lret
sub
sbb
lock
sbb
int
push
xchg
sbb
mov
dec
loope
inc
imul
jnp
stos
jmp
or
lods
into
ret
out
cmp
ds
xor
jae
sub
add
movsb
and
int
mov
js
add
cmc
int
out
xlat
subl
repz
ret
mov
out
jmp
mov
dec
arpl
pop
inc
inc
nopl
adc
push
inc
pop
and
lods
xchg
je
psrlq
adc
jp
fsubrl
xchg
dec
mov
mov
shr
test
daa
jae
ja
adc
cmp
and
lds
dec
mov
push
ror
pop
xchg
mov
xor
orl
jmp
int3
sarb
fidivrl
icebp
out
shll
js
push
js
dec
jmp
pop
bound
mov
fdivrl
std
push
leave
lock
mov
dec
out
cmp
addr16
cwtl
popa
cmp
test
stos
stos
fnstenv
xorb
adc
pushf
cmc
stc
outsl
icebp
pop
mov
jae
fwait
rorb
iret
push
rcrb
sbb
into
pop
dec
sub
mov
mov
jno
lcall
enter
xchg
cwtl
pop
lret
insb
lea
cmp
pop
push
xchg
lock
mov
dec
dec
sbb
sub
cwtl
dec
pop
in
ss
test
jne
popf
fs
sbb
out
rep
fcoms
sahf
stc
or
ficoms
roll
leave
in
cli
xchg
insb
je
cmp
xor
insl
repnz
insl
or
cmpsb
popf
maxps
jmp
mov
cvtdq2ps
test
repz
and
mov
jns
rorb
aaa
fcmovnbe
add
xchg
pop
sub
jne
outsb
pop
out
jmp
sbb
sbb
sbb
inc
jl
flds
dec
lock
xor
sub
mov
mov
mov
push
outsb
push
stc
into
fimull
arpl
int
incl
xor
and
push
mov
sbb
mov
mov
fucomp
sub
daa
push
sbb
xchg
js
data16
pop
xor
aas
sbb
pop
sti
jne
pop
roll
pop
jecxz
inc
in
addl
lods
xor
loope
int3
lcall
loop
mov
fs
leave
adc
sub
test
stos
leave
mov
xchg
ud2
mov
js
lds
mov
mov
imul
aas
add
lods
mov
jp
dec
cmpsb
jo
jbe
jbe
ficomps
xchg
push
inc
in
cltd
mov
out
or
jbe
imul
adc
out
xor
xor
cwtl
lds
push
inc
mov
jnp
int3
ja
outsb
pop
jg
scas
xor
inc
or
loop
jge
mov
lcall
sahf
cmpb
adc
sbb
mov
push
das
dec
mulb
cld
jo
inc
sbb
and
aad
jno
shr
pop
mov
xor
test
and
mov
js
push
mov
cmp
out
fiadds
jle
add
jecxz
enter
mov
mov
out
mov
mov
or
cmp
loopne
cmpl
or
std
xlat
iret
hlt
push
or
popf
popf
push
push
iret
loopne
add
mov
test
sti
std
stc
imul
outsl
add
loopne
out
add
pop
add
js
cmp
sbb
mov
push
inc
mov
enter
sub
lods
and
lcall
adc
pop
inc
daa
mov
xchg
je
dec
fs
movsb
adc
xchg
mov
test
lret
and
ljmp
lcall
cs
xchg
push
sbb
movb
inc
jno
and
std
loope
xor
jmp
cmp
lods
scas
js
jle
fiadds
stc
cmp
out
xor
jnp
inc
xor
dec
jnp
negb
pop
ja
adc
scas
xlat
in
shrb
dec
push
add
push
xor
cmpsl
add
popf
push
stos
iret
insl
bound
aam
ret
or
pop
sub
mov
push
mov
and
xchg
insb
mov
outsb
push
ja
pop
pop
out
mov
pop
mov
pop
scas
lret
ss
inc
movsb
fwait
and
mov
mov
loope
pop
enter
outsl
ret
add
decl
sub
mov
jle
mov
sahf
call
roll
xchg
pushf
mov
mov
cmp
mov
adc
and
dec
imul
std
in
adc
push
fisttps
cwtl
mov
mov
adcb
sbb
outsb
add
bound
mov
pusha
mov
lret
repnz
mov
aaa
jne
jg
sti
clc
cld
inc
clc
lods
push
pop
loope
andw
in
mov
aas
jle
mov
std
cli
jecxz
and
mov
imul
shrl
fwait
inc
xchg
add
add
and
je
hlt
pop
dec
fwait
pop
push
mov
jmp
shlb
xor
add
mov
add
jmp
cmp
rcl
ror
int
sub
stos
sub
outsl
mov
js
push
js
subl
aaa
xchg
mov
mov
adc
sub
cld
dec
sbb
pop
cmp
cltd
hlt
xchg
and
jle
cmp
cld
sahf
imul
push
jl
push
ret
nop
mov
fwait
push
jmp
mov
dec
shr
incl
push
shufps
jae
stos
pop
faddl
std
aas
shr
mov
outsl
cmpsb
push
dec
sbb
mov
xor
push
push
pop
aas
ja
pop
xor
sti
sbb
lahf
lret
std
push
sub
cmp
inc
mov
xor
jl
cmp
push
lods
mov
imul
into
push
jae
mov
mov
fbstp
dec
dec
dec
shlb
sub
lret
fistpll
clc
loopne
insl
dec
and
sub
pop
jg
add
push
mov
sbb
push
push
subl
sbb
sub
clc
mov
and
stos
cwtl
pushf
fbld
loopne
data16
mov
and
aaa
rdmsr
pop
adcl
cs
lods
inc
out
cmpsl
add
je
mov
dec
mov
outsb
mov
xor
push
out
inc
and
adc
jnp
and
jb
movsb
mov
mov
adc
bound
inc
daa
and
xor
mov
add
mov
aas
addb
mov
mov
add
sub
mov
mov
push
cltd
adc
xchg
cmpsb
out
push
xchg
ja
cmp
test
push
xchg
fistpl
ret
jbe
push
add
lods
popf
adc
sbb
aaa
sub
push
adc
cltd
dec
push
mov
lock
adc
loopne
loopne
xchg
testb
xorb
in
in
scas
cmpsb
dec
lds
xchg
sbbb
or
out
cmp
fnstcw
sbb
inc
mov
cmp
sbb
repz
dec
jp
fsubr
cmp
imul
inc
ret
lods
adc
fisubs
inc
aas
lcall
out
mov
xchg
adc
or
push
repz
sbb
lea
iret
lret
sti
sub
cmp
out
cmp
clc
adc
cmp
pusha
xchg
lret
mov
xchg
mov
rcll
clc
jnp
loopne
popf
mov
mov
xor
rol
out
jecxz
jmp
sbb
sbb
add
cmp
aaa
popa
push
sbb
pop
sub
into
test
xchg
add
ret
enter
sbb
dec
lcall
add
xchg
fildll
scas
les
adc
lock
or
sbb
ljmp
pop
sub
inc
arpl
cld
je
inc
cmc
sahf
out
inc
adcl
push
pushf
and
add
test
cmp
pop
cmp
add
push
xchg
xchg
mov
mov
in
pop
jmp
inc
and
mov
mov
roll
inc
lock
mov
and
adc
gs
inc
xchg
addl
jb
gs
inc
icebp
out
mov
in
xor
gs
leave
mov
cmc
xchg
mov
jl
test
mov
orb
pushf
lahf
cmp
call
pop
pushf
xchg
or
xchg
imul
inc
dec
sbb
or
mov
mov
xor
sub
test
addr16
add
outsb
test
in
xor
push
push
imul
mov
cmpsl
inc
xchg
or
dec
push
add
cmpsl
test
mov
xchg
out
out
push
or
ret
mov
in
ficompl
lock
in
push
movsb
nop
jmp
pushf
cld
or
mov
repnz
jno
stc
out
sbb
sbb
adc
cltd
cli
xchg
jecxz
sbb
sbb
xchg
les
cld
inc
add
int3
mov
imul
ret
xor
icebp
jp
jecxz
and
ss
push
insl
notb
into
push
out
sbb
lret
push
mov
enter
or
xor
adc
jl
xor
out
push
mov
in
sub
mov
ror
aas
xor
pop
nop
movsl
mov
sbb
loopne
cmc
adc
aas
nop
fnsave
sbb
xchg
addl
jne
les
push
xor
jnp
inc
hlt
movl
mov
xor
mov
movb
and
jmp
ror
iret
rol
stos
adc
jb
mov
js
push
js
sbb
adc
outsl
out
jno
pop
pop
lahf
sub
mov
rcl
cs
xor
cmc
clc
gs
outsl
sbbb
sbb
pop
cld
das
hlt
push
mov
or
cmp
dec
or
pop
mov
loope
mov
pop
stos
xor
jnp
pop
es
push
pop
aas
mov
add
lock
mov
call
add
test
pushl
mov
sbb
jno
in
mov
push
xor
pushf
in
sysenter
adc
gs
repz
jnp
cltd
scas
or
loope
repz
daa
dec
adc
fcmovnu
movsl
aam
push
mov
inc
sar
lods
into
pushf
scas
or
adc
cld
adc
pop
cld
int
cmpsb
test
mov
push
adc
dec
lods
sbb
adc
xor
add
rolb
sbb
ds
sub
aaa
jns
into
jb
scas
jmp
cs
and
add
xorl
adc
and
dec
popa
inc
popa
jg
or
aaa
loop
repnz
dec
popa
lret
outsl
cs
fnstsw
fldt
xor
cmp
sub
daa
xchg
dec
sbb
and
clc
andl
xor
cmp
fwait
dec
mov
fnstsw
lret
cmp
loope
and
jo
gs
gs
addb
fprem
fisttpl
push
cli
cwtl
jno
lcall
dec
push
test
xchg
mov
cmp
imul
icebp
sbb
sub
ja
or
ds
push
pushf
xchg
outsb
fimull
fistps
or
adc
adc
cmp
seto
outsl
arpl
ja
pop
shl
ds
sbb
in
mov
lea
mov
pop
pop
ja
ret
adcl
cmpsl
push
add
icebp
push
cmp
adc
cmpsb
pop
inc
jnp
addr16
movsl
xchg
lds
imul
out
jmp
clc
in
movsl
shl
mov
xchg
mov
aaa
xor
add
mov
and
jae
add
push
movsb
sbb
mov
mov
insb
mov
add
loop
cld
fidivs
into
sub
aam
jbe
mov
xor
xchg
xchg
push
mov
cld
insb
outsl
rcr
xor
dec
add
mov
mov
mov
mov
and
test
dec
xchg
imul
mov
cwtl
pop
sub
out
fidivs
add
jnp
inc
adc
xor
repnz
lahf
jnp
mov
xchg
jmp
adc
out
mov
mov
push
lods
xchg
and
sub
fsubl
or
jnp
pop
jb
adc
js
aam
jae
jmp
inc
lret
subb
inc
fsubs
cld
adc
stos
aam
inc
sbb
popf
ljmp
testl
sbb
lds
in
jno
add
or
out
cwtl
mov
sahf
mov
aad
clc
test
daa
std
adc
jmp
sub
call
mov
or
pop
inc
cmp
insl
xor
ds
jg
xchg
jns
test
or
les
adc
fstps
test
cmp
subl
and
mov
shlb
lea
cmp
xor
fstpl
arpl
shr
stos
out
ret
outsl
mov
sbb
stos
incl
mov
in
insb
mov
test
loope
aad
inc
cmp
outsl
cs
cs
fcoml
loopne
insb
enter
test
cmp
mov
pop
xor
xchg
xchg
hlt
rorl
pop
js
inc
movsl
aam
or
clc
in
cmp
std
or
out
add
sahf
dec
lcall
aas
rcr
mov
rol
imul
mov
into
xor
mov
dec
mov
rcrl
out
cwtl
add
cwtl
push
mov
and
jns
jbe
or
mov
mov
inc
shrb
stc
pop
iret
test
repnz
repz
xchg
cli
inc
cld
dec
jecxz
xor
imul
lahf
aaa
mov
loopne
test
enter
fsincos
mov
das
push
ss
movsb
inc
push
xchg
pushf
in
mov
scas
pusha
push
cwtl
daa
sbb
xchg
ljmp
into
mov
jmp
scas
mov
pop
pop
mov
mov
mov
or
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
call
jmp
sub
add
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
push
call
jmp
add
jmp
iret
ror
aas
rol
iret
rcll
and
and
push
js
dec
and
pusha
call
pop
jmp
rolb
je
and
push
mov
in
lret
push
call
jg
fwait
cmp
xor
xchg
mov
mov
cmpsl
dec
lea
dec
xchg
out
enter
jne
imul
mov
mov
dec
cmp
int
xor
sub
pushf
sub
aaa
mov
push
sbb
out
add
add
and
inc
dec
xchg
insb
sahf
leave
ret
or
jmp
std
pop
gs
fcompl
gs
lcall
into
push
fbld
shlb
jle
xor
out
dec
repnz
ret
dec
ljmp
push
sub
stos
cmp
xchg
or
ret
scas
add
lea
popf
lret
int
aam
sbb
cltd
std
sbb
push
cli
test
push
sbb
fiaddl
rclb
sbb
dec
shll
mov
pop
mov
in
or
and
subl
pop
or
cmp
repz
je
test
lcall
out
jge
cld
xchg
cmp
int
es
adc
movsb
rcr
sbb
xor
scas
mov
fiadds
and
dec
testl
or
in
push
add
and
push
test
lods
repnz
iret
jge
popa
push
icebp
ss
mov
mov
mov
scas
icebp
dec
lods
mov
pop
pop
mov
add
aad
testb
adc
mov
add
jp
xchg
incb
cmp
loope
lcall
jg
loop
mov
ss
fwait
mov
iret
or
cmp
insl
pusha
inc
iret
fldt
mov
shr
rorb
mov
sbb
pop
dec
pusha
xchg
mov
jecxz
rcl
pop
rcrl
popa
cmp
dec
pop
mov
es
mov
andb
scas
jnp
cmpsl
mov
add
imul
scas
ficoml
sti
pop
cmp
lods
mov
sub
bound
fbld
add
into
xor
add
pop
jae
popl
xchg
jmp
outsb
int
cs
mov
and
movsb
mov
adcl
fadd
das
mov
jbe
out
dec
pop
fwait
push
andb
push
sahf
push
xor
cmp
out
xor
xorb
dec
adc
dec
cmp
push
je
clc
popa
and
xchg
dec
sbb
mov
std
iret
and
les
push
cmp
mov
xchg
adc
jle
stos
push
in
xchg
mov
jmp
xchg
add
jecxz
lock
std
movsl
xchg
push
mov
xorl
nop
in
stc
int3
sub
mov
stos
cmp
jmp
xchg
test
outsb
dec
mov
jns
std
pop
mov
or
lds
lock
or
push
gs
out
mov
mov
add
mov
xchg
fwait
cmp
and
dec
fs
in
test
call
fwait
add
jecxz
nop
jmp
sub
mov
sub
inc
and
icebp
jbe
arpl
sub
xor
cmpsl
pop
rclb
xchg
cld
push
xor
movl
shlb
out
fisttps
shrl
cmp
push
cmp
mov
or
test
add
add
stc
sti
mov
mov
inc
movl
fistpl
mov
cwtl
mov
insb
xchg
dec
push
mov
into
add
lods
mov
pop
ret
xchg
aas
jns
and
cmp
negb
lret
mov
xor
and
ljmp
pop
mov
pop
dec
daa
pushf
lock
pop
xchg
xchg
ficomps
ja
xchg
inc
aad
ja
call
xchg
jge
mov
cmp
adc
repz
fs
cmp
pop
xchg
bnd
add
xchg
push
cmp
mov
xor
int
push
mov
mov
jb
rcrl
dec
cmp
outsl
scas
imul
je
cmpsl
mov
push
or
xchg
loop
stos
fs
cs
inc
pop
jmp
dec
jbe
or
jle
xor
inc
ljmp
push
pop
mov
mov
fidivs
inc
les
or
xor
mov
mov
sub
or
jmp
xlat
ror
aas
leave
rcr
rolb
xchg
clc
fisubl
js
jl
js
fstl
sbb
arpl
arpl
fisubs
push
pusha
xor
mov
jle
mov
aam
popl
push
test
rcll
xorb
dec
inc
aaa
inc
dec
filds
add
insl
inc
pop
sbb
aaa
mov
push
movsl
xchg
xchg
mov
cmp
mov
ret
mov
cmp
xor
mov
and
sbb
xchg
aas
icebp
sub
loope
xchg
and
andl
jmp
faddl
test
clc
jae
sbb
xchg
jo
mov
jb
sbb
cwtl
shll
insb
push
mov
mov
imul
pop
xor
sbb
xchg
mov
sbb
and
xor
insl
lods
sti
popf
add
dec
jg
loope
icebp
or
jns
and
je
mov
sbb
mov
ss
or
stos
inc
repz
ds
push
xchg
lret
inc
imulb
cmpsb
mov
ja
cltd
push
popf
jmp
pop
movsb
sbb
enter
imul
mov
xor
jb
enter
aas
movsl
lock
push
aad
xchg
test
add
jl
call
das
ret
adc
sub
adc
push
mov
daa
pushf
aas
ret
mov
rcrb
mov
fnstenvs
ds
in
repz
shr
testl
incl
data16
push
inc
dec
call
adc
adc
mov
fcmovnb
adc
xchg
icebp
inc
mov
insl
mov
popf
mov
cmp
inc
mov
xchg
mov
sub
mov
dec
dec
push
mov
addr16
mov
sahf
enter
adc
mov
add
mov
xrelease
pushf
dec
sar
pop
adc
daa
jae
subb
add
mov
subb
pop
das
push
mov
xor
cwtl
dec
sub
stos
add
lds
inc
mov
sbb
stc
xlat
push
xor
cmpsl
xlat
jb
or
rorl
and
dec
adc
jae
mov
push
or
inc
push
and
and
rcll
into
add
test
pop
xor
pop
mov
add
add
cmp
lahf
inc
push
sti
pushf
mov
jb
ds
cmc
inc
inc
adc
stc
jge
out
scas
lret
push
fidivrs
add
rorb
sub
inc
jne
xchg
dec
icebp
fstp
xchg
mov
or
negl
fs
enter
pop
and
push
stos
cmc
xor
int
sbbb
cld
mov
ljmp
sbb
jle
pop
or
addr16
dec
subb
repnz
fs
sub
jo
shrl
xor
test
pop
mov
dec
mov
adc
sub
xlat
add
xchg
add
jno
outsb
inc
outsl
xchg
mov
je
pop
js
push
ret
xchg
sahf
pop
inc
push
arpl
int3
rcr
dec
push
add
mov
lds
push
out
subb
repnz
mov
or
jne
stc
subl
sub
sub
nop
pop
lahf
push
test
or
lock
lea
fisubl
push
addr16
loope
or
adc
or
xor
push
outsl
icebp
xchg
outsl
stc
sti
cld
sbb
mov
adc
xchg
clc
jo
adcl
inc
ret
jo
pop
cmp
mov
nop
roll
xor
mov
pop
and
mov
dec
sbb
out
movl
mov
sarl
lods
cmp
scas
rcll
adc
shrb
cmc
dec
mov
pop
sub
jl
mov
xor
clc
jne
cs
mov
aas
or
adc
sub
cmp
xor
pop
cmp
gs
orb
sbb
shll
mul
cmp
lahf
or
pusha
pop
mov
rorb
in
dec
cld
mov
scas
and
jne
ja
sub
xchg
jb
iret
repnz
or
or
dec
lea
aaa
sub
ljmp
out
push
mov
in
xchg
dec
xlat
push
sbb
jmp
pop
js
test
xlat
pop
test
cmp
cmp
or
test
or
adc
rolb
incl
lods
jle
pop
add
or
stos
popa
dec
add
mov
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
push
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
xor
jmp
cmp
aad
dec
add
test
rol
das
js
push
js
punpckhdq
loopne
fwait
or
jge
out
fs
in
pop
adc
movsl
xchg
js
sub
inc
cmp
aad
jge
stos
xchg
aad
and
xor
mov
nop
pop
cmpsb
movsb
leave
sbbl
xchg
pop
xchg
inc
into
insb
dec
movsb
fsubrp
jbe
in
loop
sbb
sub
fcomi
les
mul
pushfw
fldl
outsb
inc
jno
std
inc
cmp
out
out
fadds
xor
negl
adc
add
mov
jmp
test
push
mov
sub
cmc
cltd
push
dec
and
inc
jno
std
xlat
mov
es
and
push
movsb
lahf
call
outsl
cwtl
aad
sub
imull
mov
subl
clc
jmp
or
pop
fiaddl
mov
dec
inc
xchg
addb
adc
shl
lods
mov
xchg
sub
xor
movsl
add
cmp
cmp
cs
dec
sub
xchg
lret
insb
sbb
push
out
loopne
mov
js
push
mov
nop
in
gs
fldcw
sub
jno
and
push
movb
jmp
outsb
ss
mov
out
imul
inc
add
sbb
sbb
into
mov
lcall
cmp
mov
pop
push
in
pop
mov
stos
xor
fistpl
sub
stos
jo
mov
bound
scas
jb
mov
push
mov
push
cmc
nop
xor
xor
out
jecxz
add
mov
shl
cltd
jp
cmc
js
lea
xlat
call
in
inc
jno
pushf
inc
xchg
dec
repnz
inc
xchg
or
sub
push
pusha
insl
lea
jl
fs
scas
pop
cmp
icebp
enter
movsl
imul
mov
les
or
or
sti
sub
mov
sbb
push
jmp
pop
iret
inc
jae
es
cmp
lock
mov
sub
or
iret
int3
or
sub
cwtl
sub
sub
sbb
sub
mov
push
sub
fldl
mov
dec
fwait
bound
jne
in
icebp
push
pop
lea
cmp
or
xchg
clc
mov
sub
inc
push
pop
int3
push
jnp
in
inc
pop
aaa
jmp
or
mov
icebp
xor
xchg
push
scas
cld
push
movsb
push
add
jp
jb
or
ljmp
insb
xor
popa
je
or
push
jg
add
das
sbb
sub
jl
cli
adc
mov
and
cmpsb
sbb
cmpsl
and
add
adcb
push
and
je
sub
cmpsl
adc
mov
cmp
ss
jmp
mov
mov
push
and
or
ret
pop
fdivs
xor
pop
test
pop
xchg
mov
mov
and
addl
das
push
jl
inc
and
iret
popa
xor
inc
adc
pop
dec
xor
js
mov
xor
push
ret
jnp
xlat
mov
jg
movsl
xchg
mov
add
cmp
xchg
xor
or
mov
push
and
js
addr16
ljmp
outsb
leave
cwtl
mov
idivl
ja
notl
push
addl
push
sbb
mov
push
push
ds
push
in
pop
cs
mov
sub
insb
push
sarb
icebp
mov
scas
dec
inc
jnp
loope
call
js
aam
dec
mov
mov
mov
insl
mov
arpl
cmp
cli
mov
arpl
push
neg
xchg
scas
arpl
pop
addr16
movsb
fs
popf
pop
rcrl
lret
hlt
into
jns
pop
testl
jbe
fadds
inc
mov
test
scas
cmp
scas
dec
push
lods
gs
or
dec
shr
push
pop
cmp
sub
mov
icebp
in
adcb
push
pop
lret
fidivrl
in
mov
fsubs
repz
test
mov
mov
pop
and
or
aam
xchg
nop
insl
mov
je
popa
and
insl
movsb
insb
lret
gs
inc
notl
sbb
jle
adc
push
arpl
pop
in
xor
mov
inc
cmp
lods
or
das
mov
int
testl
mov
mov
testb
push
arpl
fldt
xchg
clc
sbbl
push
hlt
xchg
and
sbb
xor
rorb
cmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
xor
adcl
add
jmp
enter
rcl
iret
shlb
daa
push
leave
xor
push
js
xchg
mov
xor
xor
or
pop
pusha
cmp
adc
fnstcw
push
jne
adc
enter
aad
popa
in
pop
adc
mov
outsb
sbb
dec
sahf
into
mov
or
or
mov
xchg
int3
lods
out
out
dec
and
jb
xor
cltd
inc
test
jmp
bnd
stos
and
add
les
push
insb
scas
sbb
and
dec
test
adc
mov
xor
daa
cld
xor
sahf
push
orb
fisttpll
lret
xlat
stos
xchg
mov
xor
lods
xlat
xchg
sbb
shrl
insl
add
mov
xchg
sahf
cmp
jne
scas
fildl
cmp
sbb
loop
xor
cmp
fcoms
fiadds
sub
jnp
mov
push
and
xchg
adc
ret
jns
xchg
sub
insb
and
stos
dec
xchg
jge
xchg
mov
imul
call
jecxz
mov
mov
dec
outsb
sub
popa
dec
jns
sub
dec
sub
push
loopne
jp
mov
scas
shll
fwait
sbb
stos
push
stos
jg
loopne
in
repz
aas
cmpsl
stos
add
outsl
jne
add
cmpsb
or
and
iret
cs
sbb
test
sub
in
push
insl
scas
shlb
ja
fnstcw
inc
jnp
sbb
adcl
in
cmp
jmp
and
ja
fcomp
pop
mov
xchg
jne
shlb
add
mov
xchg
mov
adc
sarl
inc
jecxz
xor
or
insb
jg
aaa
stos
mov
add
xchg
or
pusha
push
cmpsb
push
sub
or
push
mov
test
lods
popa
iret
pop
scas
mov
out
loop
cmp
dec
cmpsl
cmpsb
and
lods
fidivrl
mov
rorl
add
push
fistps
dec
push
fidivl
js
lret
and
adc
loope
jmp
and
cmc
test
or
sub
xchg
pop
push
cmp
jp
rcrb
icebp
xchg
lods
cmp
xlat
cmp
push
scas
pop
cmp
mov
adc
pop
aas
jmp
in
mov
xor
rcll
add
inc
into
bound
bound
stc
push
fwait
pop
popa
xchg
rcr
pop
fnstcw
lds
or
push
mov
test
xor
outsb
pushl
jecxz
std
dec
push
dec
loopne
fs
push
das
push
ljmp
loope
jne
in
fistl
dec
shll
push
mov
insb
es
jmp
popa
sbb
jo
clc
pop
xor
add
jmp
jge
pop
lock
stos
movsb
leave
pop
or
cmp
dec
popa
mov
push
mov
push
into
scas
lock
push
imul
pop
xor
movsb
hlt
jmp
dec
push
push
sub
js
outsb
add
xchg
jge
rcrl
stc
dec
xor
jb
aaa
addr16
test
xchg
lret
imul
cmp
fmuls
jo
mov
sbbb
mov
das
fmull
or
inc
jo
loope
in
mov
xor
add
ja
test
stos
inc
or
jb
mov
lret
faddl
stos
fldt
sti
dec
call
aad
clc
xchg
mov
sub
daa
gs
add
jae
movsl
add
fnstenv
insl
or
push
fnstenv
mov
ja
test
in
aad
push
dec
ljmp
add
imul
and
sbb
mov
icebp
cwtl
jg
mov
repnz
lahf
cmp
rorb
iret
repz
fisttpll
das
outsb
xorl
and
hlt
adc
cld
pop
add
lret
jmp
jns
push
mov
dec
jge
fwait
jb
insl
xchg
ds
inc
mov
sahf
mov
mov
bound
popa
inc
jmp
mov
jns
loope
push
sub
bound
or
aad
xchg
push
fmuls
inc
cwtl
inc
pop
or
pop
sub
lahf
cmc
or
jo
jb
mov
sar
sbb
jl
imul
xor
or
std
mov
add
cmp
fcmovbe
rcl
movsl
or
adc
xor
js
mov
mov
fwait
daa
jmp
xor
and
mov
and
cs
jg
lds
and
loopne
adc
cmpl
xor
call
pop
into
sub
sub
lcall
gs
xchg
mov
mov
mov
sbb
adc
shrb
lock
dec
cmp
cltd
jo
jb
lods
insl
adc
subl
dec
push
int3
mov
cmpsb
fisubrl
aas
mov
addr16
repz
dec
push
lea
inc
fwait
mov
ds
icebp
mov
push
mov
mov
inc
daa
xchg
jo
inc
inc
inc
addr16
fucomi
jb
push
push
pop
stos
cltd
xor
aaa
es
xchg
fs
xor
sbbb
clc
cs
cmp
clc
out
daa
add
je
jns
pop
mov
and
cld
arpl
mov
ljmp
push
mov
mov
and
xchg
nop
sub
clc
cmp
adc
mov
clc
imul
daa
cmp
pop
adc
shrl
repz
sbb
mov
stc
addr16
xor
and
lea
test
dec
xor
jbe
xlat
dec
pop
mov
iret
push
xor
stos
sbb
xchg
lds
sarl
addr16
mov
rorb
cmp
jmp
mov
xor
pop
es
lock
adc
call
xor
inc
mov
push
dec
andl
stos
sbb
mov
insl
pop
imul
cmp
xor
cli
sbb
in
sti
mulb
pusha
fisubs
or
pop
dec
sbb
jo
pushf
loope
add
mov
cmpl
or
bound
jge
lock
ss
push
lods
out
and
lds
inc
les
outsb
adc
lods
pop
call
das
push
mov
xchg
outsb
add
idivb
cmp
in
sub
clc
out
in
ljmp
pop
or
sub
and
and
fwait
mov
cmp
jl
mov
aaa
andl
cmp
mov
mov
adc
and
adc
add
and
cmp
insb
push
test
xchg
dec
faddl
xor
hlt
mov
lods
test
ja
add
jne
imul
jbe
or
adc
mov
shrb
dec
out
jo
xor
inc
cmp
jns
pop
or
fbstp
sub
repz
lret
jle
lret
and
jae
repnz
scas
xchg
mov
out
jmp
cmp
fisttps
add
lods
in
adc
pop
push
lcall
test
out
insb
out
sub
or
mov
subl
in
pop
aas
pop
xor
xor
addr16
and
push
not
je
ret
or
pop
mov
lret
outsb
sahf
stos
sti
daa
cs
push
into
pop
into
int3
pushf
fimuls
lods
adc
and
out
adc
inc
mov
or
push
push
dec
mov
movsb
out
cmpsl
popf
data16
add
xlat
in
aas
and
hlt
and
cmpsb
daa
stos
or
sub
bound
ljmp
add
loop
sahf
inc
push
out
pop
jno
jle
pop
pop
jmp
pusha
loop
sahf
cmp
bound
scas
xchg
cmp
inc
in
xchg
inc
and
in
mov
mov
mov
mov
sbb
cs
and
fsubl
sub
sub
add
pop
gs
movl
jmp
rolb
aaa
ficoms
pop
push
xchg
sbb
icebp
xchg
adcl
scas
mov
mov
inc
out
outsb
sub
cmp
inc
mov
fmuls
pop
outsl
xchg
adc
jmp
jo
push
push
mov
arpl
enter
movsb
or
xor
sbb
mov
or
nop
mov
add
imul
into
pop
push
ljmp
sbb
xchg
adc
in
fs
into
xor
mov
xor
cmpsl
jge
mov
iret
scas
cltd
adc
out
jb
adc
pop
andb
jbe
ds
mov
xlat
ja
outsb
adc
aaa
out
clc
shlb
mov
call
rcl
xlat
cmpps
mov
lea
mov
jmp
int
aas
fcmovbe
leave
aad
or
outsl
pop
adc
js
push
js
fadds
sbb
lcall
adc
fidivrs
mov
and
leave
popf
xchg
or
jnp
cltd
add
movsl
inc
mov
adc
dec
sti
adc
insb
push
add
sbb
push
test
or
aad
xchg
xchg
sarl
adc
rcll
fldcw
and
outsb
mov
out
sbb
cmpsl
imul
test
sbb
cmp
fsubr
mov
rorb
fwait
addl
cmp
int3
popf
clc
les
sub
aas
scas
out
daa
out
lret
out
sbb
push
and
cmp
pusha
enter
and
push
add
inc
push
push
add
pop
mov
dec
imul
stos
dec
sbb
or
push
ss
ja
mov
mov
push
add
push
ds
xor
xchg
mov
stc
xchg
out
ret
mov
pop
mov
fcoms
add
mov
cmp
stos
pop
jo
cmpsl
repnz
xor
outsl
sbb
sbb
daa
lret
loop
pop
or
dec
mov
jo
inc
cmp
xchg
pop
cmp
shl
int3
call
daa
pop
shrb
cmp
cld
dec
in
enter
daa
dec
mov
testl
pop
cmp
push
add
pop
jb
push
rcpps
xlat
loopne
ja
pop
cmpsb
sub
cmp
xor
xlat
add
push
out
push
mov
fidivl
xor
aam
sub
shlb
mov
fstpt
push
jp
and
lock
test
std
into
and
in
push
mov
iret
pop
aam
mov
cli
das
inc
cmpsb
aaa
scas
dec
push
pop
mov
fs
fcmovnu
jne
jle
and
inc
mov
fld
push
jge
fldl2e
shll
xor
cltd
xor
mov
cmovb
sbb
or
cmpsl
add
shlb
cmpsb
push
emms
or
adc
add
push
mov
aaa
cmp
xchg
mov
fs
xchg
adc
xchg
les
ret
jno
imul
std
mov
and
loopne
xchg
aam
mov
out
popa
adc
aad
sub
inc
inc
and
iret
cmp
je
mov
xchg
das
hlt
jl
lret
daa
call
pushf
mov
je
mov
dec
es
aas
add
out
cmp
mov
dec
clc
test
adc
sbb
les
jnp
pop
push
jecxz
xchg
lret
popf
jns
out
jne
pop
imul
aad
sti
xchg
fucom
aas
cmp
add
jne
clc
aam
pop
cmp
mov
scas
and
mov
or
mov
stc
push
mov
sbb
sub
or
push
hlt
dec
jns
int3
fdivrp
pop
mov
adc
shll
test
in
pusha
cmp
movsb
packuswb
sub
cmc
iret
sahf
pop
add
stos
cmpb
pop
add
adc
dec
add
add
aam
into
fistpl
cld
xchg
aas
lock
sarl
dec
and
and
jns
push
inc
movsb
js
inc
jmp
imul
sub
xchg
ret
gs
jne
pop
add
mov
lret
sbbl
mov
ficoml
and
in
test
leave
mov
mov
pop
push
ljmp
stos
inc
insl
pop
xchg
out
or
dec
cwtl
lret
pop
sbb
cmp
adc
sub
xchg
xor
sbb
add
inc
fxam
xchg
push
xor
jb
pop
sbb
cmpsl
sub
inc
xchg
push
pop
push
add
or
ret
push
add
mov
jb
jne
ljmp
adc
inc
xor
inc
in
test
sub
pop
fwait
lods
testl
mov
jle
mov
jae
inc
sub
bound
lds
out
push
push
pusha
leave
data16
data16
and
sub
cmp
dec
addr16
scas
loop
mov
push
out
out
fdivs
fnstcw
test
inc
push
push
mov
cmp
mov
dec
lods
fcmovu
jae
icebp
ja
xchg
and
push
bound
icebp
into
sbb
mov
pop
sub
mov
cmp
pushf
inc
mov
jmp
dec
mov
adc
mov
mov
add
mov
sbbl
mov
jmp
lret
rcl
ror
fsin
sbb
pop
xchg
es
jl
js
push
js
filds
sbb
aas
fnstenv
jp
test
imul
dec
push
or
icebp
cmp
or
test
mov
mov
mov
jbe
push
cmp
mov
lea
test
mov
mov
pop
bound
dec
test
jp
jp
mov
adc
dec
mov
rcr
hlt
xchg
sub
repz
xchg
sbb
add
sbb
dec
adc
shll
mov
add
cmp
outsb
adc
shlb
movsl
adc
add
jle
ret
push
push
fcomps
rcl
enter
dec
and
aas
fmuls
sarl
and
shlb
and
sbb
test
fs
std
xchg
nop
ljmp
and
mov
add
sbb
add
in
jb
mov
xor
or
nop
xlat
xchg
xchg
dec
inc
push
out
movsl
jp
jle
faddl
aas
mov
or
sub
mov
jecxz
dec
cmp
mov
jne
xor
cs
sub
ficoms
mov
insl
adc
movsb
ljmp
decb
inc
rolb
lcall
xchg
jno
sbb
aas
mov
rcrl
mov
nop
xor
mov
repnz
leave
leave
cmc
cmp
add
adc
mov
idivb
mov
pop
cmp
pop
out
sub
xchg
dec
mov
or
cmp
sub
call
pop
add
mov
fs
jns
sub
test
test
jg
dec
inc
jne
imul
ljmp
enter
jb
fistpll
shll
and
adc
scas
inc
fdiv
fs
loop
lods
aas
ljmp
adc
lods
mov
movsl
add
pop
fcomip
mov
mov
loopne
adc
lret
pushf
sub
es
iret
xchg
daa
test
push
adc
lahf
add
mov
cld
rolb
enter
hlt
stos
add
ret
mov
jle
cld
das
xor
mov
in
pop
xor
mov
sbb
arpl
adc
xchg
mov
lock
mov
lahf
adcb
xchg
mov
mov
je
es
jmp
jl
and
add
cmp
ret
lds
jmp
jne
sub
cmp
lret
loope
data16
addr16
pop
push
or
ja
out
shll
nop
es
je
fcomps
stc
out
bound
cmp
icebp
js
lea
rol
mov
movsl
js
out
inc
gs
popf
sbb
movb
bound
stos
clc
add
sub
xlat
or
adc
dec
add
gs
negb
in
ret
pop
sarl
in
rorb
test
xchg
fistpl
jno
xor
cltd
ret
cld
pop
das
int3
loopne
js
shrl
fstl
mov
dec
nop
inc
lcall
loop
jnp
arpl
loope
mov
int
xchg
mov
pop
cmp
xchg
cmp
orb
xlat
push
xchg
push
cmp
xor
inc
dec
mov
mov
addr16
fists
movsb
jle
movsb
mov
ljmp
lret
loope
aas
or
push
adc
inc
push
mov
into
pop
scas
scas
insb
daa
ss
jmp
or
mov
in
outsb
xchg
fisubs
mov
gs
in
mov
nop
in
cld
pop
pop
pop
xor
pop
test
push
mov
mov
ja
mov
jno
dec
test
mov
push
adc
popf
repnz
ljmp
adc
rorl
lods
popf
mov
vpshaw
loop
jno
addl
mov
push
fistpl
addb
sbb
inc
cltd
lcall
orl
subl
push
mov
push
aas
dec
sbb
mov
push
test
shlb
pop
pop
xor
xchg
orb
js
xor
lock
mov
push
and
lods
pop
addb
xor
jae
cli
add
mov
sbb
scas
mov
jb
pushf
ja
out
cli
mov
jbe
add
adc
es
mov
out
or
movsl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
jmp
ret
rcl
rol
into
push
cmc
loope
mov
js
push
js
int
jmp
push
xchg
adc
ljmp
fildl
mov
cltd
xor
decl
push
mov
inc
lret
add
xchg
push
inc
neg
mov
in
mov
inc
add
lods
adc
cmp
lret
pop
cmp
push
cmp
es
dec
add
loopne
cmpsb
push
clc
mov
dec
jno
lods
cmpsl
cmpsb
popf
mov
mov
pop
mov
and
insb
sub
repz
cmp
out
dec
fsubp
dec
into
arpl
out
mov
add
jge
mov
mov
in
and
and
fimuls
jge
mov
sbb
out
outsb
idiv
jge
mov
mov
fidivl
push
sub
jae
push
flds
ja
add
data16
loope
push
ljmp
es
hlt
dec
and
xchg
bound
lcall
rolb
pop
addr16
test
mov
push
into
adc
std
xchg
push
adc
mov
jl
cmp
repnz
dec
xchg
push
sarl
and
aam
sub
cmp
clc
push
pop
mov
and
aas
leave
cmp
rcll
inc
fdivs
push
and
mov
add
lods
hlt
mov
sbb
pushf
jge
xchg
or
icebp
jl
adc
pop
mov
mov
incb
loope
add
push
push
cmpsl
jle
rorl
lock
in
in
sti
cltd
pushf
or
mov
lahf
lods
cltd
loop
stos
inc
mov
pusha
outsb
mov
mov
pop
and
jecxz
mov
add
sti
loop
push
xor
pushf
cmpsb
jnp
std
nop
jp
adc
mov
ljmp
insl
gs
cmpsb
les
pop
idivl
outsb
mov
lahf
push
call
pop
scas
mov
mov
mov
mov
dec
hlt
push
dec
dec
adc
nop
pop
in
sbbl
and
sub
cs
sbb
push
pop
imul
dec
and
fs
push
nopl
and
les
xor
mov
pop
mov
sub
imull
das
movsl
int
jne
cmpsb
xchg
pop
dec
loopne
mov
xor
fistl
scas
xchg
addr16
loopne
stos
cltd
jbe
lods
je
ljmp
lret
fwait
lret
mov
inc
ret
repz
addr16
iret
or
in
insl
movsb
fisubs
adc
mov
sbb
jmp
out
sbb
xchg
test
es
mov
ss
test
ds
fcoms
movsl
dec
bnd
fildll
add
adc
mov
push
into
stos
movsb
int3
xchg
xchg
iret
sbb
bound
adc
add
popf
or
icebp
pop
mov
sub
cmp
sbb
popf
inc
inc
sub
mov
hlt
jl
loopne
and
jecxz
bound
lods
inc
mov
sub
repnz
mov
push
pushf
pop
and
sub
out
sub
pop
notl
icebp
mov
clc
lods
mov
loopne
adc
adc
pushf
push
out
clc
imul
out
lret
arpl
xchg
sub
xor
adc
imulb
xor
add
rcl
jae
cmp
push
insb
dec
bound
aad
fsubl
fbld
lock
mov
jg
xor
and
mov
ret
mov
pop
mov
lods
xchg
mov
scas
out
stos
stc
fxch
mov
fstpl
inc
mov
daa
lret
fwait
aas
push
lret
int3
movsb
pop
scas
imul
test
test
mov
int
sbb
jg
push
push
shlb
mull
xor
fisubl
mov
cmpps
flds
cmp
flds
out
add
test
in
add
lret
inc
scas
push
mov
pop
xchg
jp
lock
add
jecxz
in
push
and
jmp
es
dec
xor
mov
xor
and
and
leave
dec
push
ss
test
mov
xor
inc
cmc
loope
mov
inc
paddq
call
mov
sub
and
cmp
es
pop
out
xor
inc
clc
inc
mov
out
cs
pop
push
push
add
adc
xor
jns
add
movb
jmp
mov
fcmovnbe
hlt
inc
or
or
and
js
push
js
dec
fdivrl
add
pop
in
test
and
aaa
xchg
fcmovnu
std
mov
add
out
lcall
xchg
cld
sbb
inc
or
add
mov
loopne
fwait
jmp
in
test
addr16
push
pop
mov
sbb
ret
adc
cltd
leave
popa
or
cmp
pop
sub
xchg
ss
roll
mov
and
aas
mov
jg
pop
and
mov
mov
cwtl
movsl
mov
outsb
js
adc
inc
mov
mov
mov
xchg
in
loopne
mov
push
rolb
add
loope
movsb
pop
pop
and
daa
xor
pop
xchg
jb
xchg
pusha
inc
sub
or
jno
inc
mov
adc
mov
out
loope
insb
inc
mov
mov
stos
daa
dec
xchg
lea
fsts
sti
pop
out
pop
add
aas
movsl
push
sbb
and
adc
cld
cmp
xchg
push
dec
fs
jb
movsl
add
lods
std
popa
shrb
xchg
adc
xor
movsl
movsb
xchg
jecxz
js
jo
jmp
in
mov
add
mov
xchg
sbb
push
mov
into
xchg
xor
cmpl
push
loopne
inc
or
lcall
adc
int
ret
push
ret
ret
or
pop
inc
xchg
jge
fadd
out
lret
cmpsl
add
mov
mov
imul
outsl
mov
add
pop
leave
sbbl
scas
dec
cld
ljmp
das
loopne
int3
sbb
int
mov
add
sbb
cmpb
fisttpl
cld
mov
leave
call
xor
sahf
add
pop
xchg
push
out
mov
xor
adcb
gs
and
mov
fs
fiadds
jo
rolb
adc
xchg
inc
int
jo
inc
mov
outsl
sbb
jnp
xchg
dec
push
mov
std
pop
fdivr
testb
stos
pop
ss
add
push
lds
nop
adc
push
mov
jno
scas
test
adc
movb
cmp
xchg
jecxz
lcall
mov
push
mov
repz
sbb
xchg
sub
xchg
in
sti
sbb
inc
icebp
jbe
insl
mov
mov
and
cmp
jg
cmpl
pop
cltd
sub
add
notb
inc
pushf
push
pop
xchg
in
add
lods
cli
sub
dec
sbb
out
ss
lea
or
dec
adc
mov
xor
fsubs
fwait
sub
cmp
aaa
pop
mov
inc
in
sbb
lea
mov
mov
call
cld
sub
sub
fs
lock
push
inc
push
mov
cmp
and
testb
and
icebp
cs
jp
mov
pop
mov
adc
dec
jo
cmp
cld
xchg
push
cwtl
jge
mov
lahf
dec
mov
mov
adc
sub
gs
test
jp
push
or
xchg
hlt
xlat
mov
ret
aam
mov
push
lock
inc
mov
shlb
xor
push
sub
loop
and
movb
je
int3
or
xlat
inc
dec
jl
daa
mov
insl
pusha
fdiv
and
cmc
scas
lock
mov
mov
jmp
scas
jle
outsb
arpl
in
daa
shrb
adc
ficomps
mov
jp
cwtl
jno
cmp
jns
dec
push
xchg
clc
fsubrs
mov
test
jp
mov
mov
adc
mov
mov
jl
jo
sub
cs
std
cwtl
adc
aad
sbb
sbb
lcall
test
adc
stc
les
fs
loope
das
movsb
ficompl
push
in
mov
cmp
data16
xor
pop
or
mov
fsubrs
lret
cmp
inc
cmp
push
and
xchg
xor
and
mov
gs
mov
cmp
mov
inc
xor
inc
mov
xor
rorl
mov
add
test
dec
push
mov
sbb
mov
fmull
add
mov
mov
mov
mov
mov
mov
jmp
ror
rol
fxch
fcmove
xor
shll
mov
js
jl
js
mov
mov
test
lea
dec
sub
nop
and
nop
cmp
mov
pop
mov
test
loopw
dec
mov
cmpsb
bound
sub
xor
mov
xchg
ret
or
add
lahf
cmp
rcr
xor
adc
out
fcoml
ss
push
mov
inc
xchg
jmp
xchg
je
jo
arpl
push
cltd
pop
lods
push
push
lret
fwait
mov
aam
in
mov
call
repnz
clc
shll
push
dec
std
imul
dec
mov
cmpsl
gs
add
lahf
mov
loopne
sbb
mov
add
add
loopne
push
jle
inc
jmp
mov
mov
cmp
adc
out
sbb
pop
mov
iret
xchg
cmpsl
inc
cli
inc
adc
xchg
xchg
jbe
fs
test
or
or
test
incb
jmp
inc
xor
push
pop
lcall
mov
adc
or
jo
addr16
idivl
pop
jg
mov
mov
and
lods
rcrl
push
xor
mov
push
and
mulb
cmp
aad
int
jg
sub
mov
jp
mov
jle
mov
fidivl
stos
popf
xchg
sbb
jmp
out
cmp
push
push
xor
jb
int3
out
call
daa
adc
fstl
add
sub
loope
sub
add
inc
cmp
std
ja
dec
iret
push
repz
cmp
mov
cmp
aaa
ljmp
xlat
inc
fsubrp
fs
call
inc
and
leave
inc
jns
jns
or
push
inc
push
das
les
dec
or
inc
xor
cmpsb
mov
cmpsl
jl
nop
fnsave
fistl
and
in
in
lret
rcrb
in
pop
xchg
jl
adc
or
movsb
add
add
fnstenv
lods
aaa
je
std
sbb
mov
jno
ret
sub
shll
mov
and
sbb
pop
imul
inc
adc
sbb
add
add
shll
dec
jl
sar
out
aam
mov
sub
sbb
adc
in
xchg
test
mov
pop
outsb
add
negl
mov
mov
sahf
or
ror
scas
clc
xchg
jg
push
jmp
jle,pt
loop
dec
sti
lcall
jmp
add
sbb
xchg
cmpb
ret
pop
fsubrs
and
mov
lock
insb
jo
cli
out
popa
sar
sub
js
cmp
lods
push
clc
cmc
or
bound
subb
adc
in
lock
nop
in
stos
out
mov
mov
xor
xor
ss
adc
xchg
hlt
mov
pop
xchg
mov
or
fistps
mov
push
and
loope
cmpsl
mov
orb
and
xor
mov
dec
xchg
add
xlat
pop
jae
ret
jb
ret
adc
sub
fsubl
std
pop
mov
cmp
iret
inc
leave
push
hlt
int3
iret
ret
push
hlt
cmp
rclb
cli
xlat
add
aaa
cli
loope
add
rorb
mov
je
or
xchg
sbbb
movsl
inc
fsub
sti
add
pop
inc
sub
adc
or
add
ds
js
jne
mov
dec
pop
mov
das
mov
xchg
outsl
fincstp
imul
mov
push
popf
stc
mov
mov
xchg
pop
sbb
pop
shll
mull
stos
jl
subb
add
ret
es
outsl
movsl
scas
and
adc
xchg
movsl
jnp
or
and
adc
xchg
stos
jl
hlt
ret
add
mov
mov
mov
jecxz
sbb
aam
dec
jbe
ljmp
test
and
icebp
push
je
jo
mov
and
push
cld
test
mov
jo
xchg
aam
push
pop
rorb
out
lcall
icebp
or
mov
imul
add
inc
xchg
cmp
xchg
fcomp
pop
popf
imul
sub
fnstsw
test
test
xchg
sahf
dec
push
mov
mov
mov
jmp
ror
ror
fcmovu
aas
scas
push
sub
dec
icebp
mov
js
push
js
inc
out
stc
iret
ja
mov
loopne
std
and
dec
loop
push
or
fwait
jbe
imul
mov
xor
loopne
repz
call
leave
jo
bswap
xchg
mov
xchg
ficoml
xor
test
xchg
ljmp
imul
mov
lods
mov
cmc
pop
adc
aad
mov
jmp
fistpl
jno
pop
sub
insb
pop
les
mov
pusha
adcb
loopne
sub
es
sbb
repnz
inc
and
cmpsb
fldcw
sbb
or
mov
xchg
adc
stos
movsb
sbb
xor
xor
les
hlt
pusha
int
cli
loop
imul
add
cmp
addr16
inc
sbb
cli
sbb
push
incb
out
mov
push
adc
and
enter
xor
fwait
insl
mov
inc
fucomp
scas
pop
add
jg
push
and
cmpsl
jne
xchg
sbb
or
out
and
jnp
clc
test
sub
or
cbtw
jmp
inc
out
popa
xlat
push
dec
pop
jae
add
xor
cwtl
xchg
xchg
adcb
popf
cltd
inc
mov
test
jbe
mov
out
pop
add
xor
xor
stc
lods
sbb
cmpsb
sbb
insb
sbb
je,pn
cmp
xor
push
jo
mov
sahf
pop
stos
adc
aaa
faddl
push
mov
pusha
pusha
sbb
gs
out
add
scas
push
add
ss
repz
mov
rclb
mov
dec
jle
xchg
pop
hlt
sbb
testb
and
mov
inc
sbb
imul
popf
push
sbb
out
enter
dec
ficoms
das
fstpt
xchg
scas
xor
fwait
inc
imul
add
scas
pop
adc
xchg
call
mov
sub
lahf
lret
sub
dec
mov
test
inc
mov
aad
or
fisttpl
mov
cmpsl
aas
add
int
add
xchg
out
pop
bound
in
pushf
mov
jno
cmp
dec
in
mov
add
xchg
fstps
mov
pop
aas
or
lret
jmp
sub
test
jp
mov
xchg
ljmp
jmp
loopne
dec
xchg
loop
sbb
je
cmp
mov
pop
decl
outsb
push
jl
xchg
mov
jns
insl
or
sbb
push
mov
push
gs
xchg
or
push
out
popa
test
ret
shr
dec
test
cmpsb
pop
mov
push
push
addr16
xor
stc
adc
sbb
xchg
lret
cld
pop
pop
jbe
por
jbe
gs
xchg
mov
adc
dec
out
repz
mov
jmp
cs
jge
or
cmp
jo
hlt
push
inc
outsl
lahf
popa
loope
jmp
orl
inc
sub
jp
cmp
mov
pop
arpl
nop
push
lea
add
ret
icebp
loop
lret
aam
call
das
push
push
das
orb
jnp
ret
aam
sbb
shll
shlb
jnp
dec
pop
adc
adc
in
sar
call
inc
or
fstpl
les
dec
mov
push
jnp
not
pop
sti
jmp
in
adc
xor
cmp
leave
dec
or
fisubrs
test
imulb
cmpsl
pop
outsb
push
or
xchg
mov
push
pop
and
mov
push
jl
push
pushf
xchg
mov
jbe
mov
aaa
jns
arpl
mov
push
jp
icebp
lods
or
jmp
push
in
mov
push
mov
pusha
lahf
pop
pushw
mov
mov
sub
sti
clc
in
dec
imul
sub
sti
test
sub
into
pop
cmp
push
cmc
test
mov
add
and
xor
outsb
sbb
mov
stc
xchg
push
addr16
imull
sbb
inc
fsts
inc
sub
sub
pop
jmp
add
dec
inc
dec
je
xor
pop
ja
pop
scas
je
cmpsl
jns
pop
jmp
notb
mov
pop
xchg
lcall
mov
mov
jmp
int
rcr
rol
fxch
cmp
sub
fstpt
push
js
andb
dec
aad
data16
rcll
addb
rcrl
xchg
jb
mov
or
in
add
dec
sbb
sti
mov
push
movsb
dec
xlat
mov
add
jmp
bound
jp
push
sub
adc
mov
imul
push
movsb
cmp
dec
fxch
pop
or
aam
mov
mov
xor
clc
adc
rorl
icebp
fisubrl
test
fcomi
jmp
mov
cmp
and
lret
pop
push
jge
add
xchg
cmpsl
repnz
in
mov
dec
dec
lret
and
pop
in
ret
pusha
inc
jne
xor
fwait
es
sbbb
push
out
jmp
roll
into
aad
jle
addr16
adc
sahf
rorl
push
les
sarl
cmpb
inc
repz
jge
lods
outsl
rcl
iret
dec
lret
sub
dec
pop
inc
pop
jns
stos
sar
daa
inc
sbb
test
pop
pop
add
mov
push
fimuls
sub
xchg
pop
sbb
or
lea
movsl
sub
mov
cwtl
jg
add
inc
push
xor
jae
ds
xchg
push
cmp
jl
lds
xchg
movsl
xchg
ret
xchg
repnz
pop
pushf
fwait
mov
or
inc
xor
inc
fldcw
cltd
lahf
dec
sub
rcrb
inc
cmpsl
out
imul
stos
out
out
adc
dec
ljmp
push
scas
iret
or
sbb
orl
push
fistpl
mov
mov
sbb
jns
sbb
sbb
pushf
ficoms
enter
mov
das
sbb
jg
sub
lods
call
push
push
neg
jmp
pop
lcall
scas
inc
mov
icebp
and
xor
cld
push
cmp
inc
push
cmc
call
mov
dec
test
loope
pop
insl
push
cmp
arpl
scas
call
mov
jno
ss
push
mov
daa
repnz
cmp
nop
dec
push
je
loopne
or
cmp
and
ljmp
and
js
and
add
push
jg
cmp
scas
ljmp
push
mov
pop
jp
loope
enter
popa
mov
cs
and
insl
sub
or
push
nop
or
insb
push
lret
into
dec
fwait
mov
aad
shrl
sarb
sti
xlat
push
or
mov
pop
pop
nop
sbbb
xchg
bnd
jne,pt
clc
les
outsb
adc
test
mov
push
in
shl
dec
popf
std
inc
sub
jmp
ja
push
pop
test
rorl
xor
push
orl
scas
xor
and
and
xchg
add
jns
mov
mov
aaa
leave
jae
jb
mov
lods
xchg
test
dec
outsl
xchg
inc
and
int3
pop
inc
loop
rcl
xchg
inc
jle
dec
inc
mov
mov
mov
sub
dec
adc
mov
sbb
add
sahf
fsubl
outsb
cmp
dec
or
push
xchg
adc
movsb
lret
sarl
pop
jmp
mov
lea
pop
int
jp
inc
mov
fstps
push
les
sub
push
push
sbb
das
inc
push
lock
xchg
pusha
jae
neg
out
bound
lds
push
push
aaa
mov
shll
sbb
push
xchg
fisttps
iret
or
subb
mov
ret
shlb
bnd
cmp
push
dec
fdivl
call
mov
xchg
push
lds
jle
hlt
mov
dec
enter
lods
pop
outsl
mov
sbbb
pushf
mov
sub
push
jno
in
fists
pop
jo
in
ja
mov
jge
xchg
cmc
cli
outsb
mov
out
data16
add
jns
xor
imul
repz
cmpsl
outsl
sub
push
inc
or
adc
sub
out
js
dec
pop
jp
sub
jg
out
sbb
lret
gs
div
push
sarl
cmpsb
or
cmp
enter
mov
mov
pop
mov
xlat
mov
into
mov
arpl
dec
xchg
dec
and
xchg
lea
je
es
shlb
mov
in
pop
jb
mov
movsb
das
sbb
jmp
xlat
xlat
iret
into
iret
aad
cmpsl
in
in
sub
inc
nop
fidivrs
push
js
or
add
xchg
dec
cld
sti
je
adc
loopne
notb
int
or
fistl
mov
add
lock
jbe
faddl
addr16
xchg
xchg
pop
mov
call
xchg
xchg
xchg
test
pop
fnstcw
jbe
dec
add
lds
imul
jp
xor
scas
stc
lock
hlt
out
popa
dec
fdivl
push
xor
lea
cwtl
out
xor
ss
inc
loop
mov
mov
push
cmpsb
call
pusha
in
js
add
push
js
mov
ja
xor
fcmovne
shlb
and
out
mov
inc
ret
das
cwtl
or
pop
mov
xor
xor
cmpl
ret
push
lahf
imul
adc
dec
lea
mov
xchg
jecxz
scas
pop
shr
mov
iret
cmp
jmp
xlat
pop
jge
dec
scas
int
lock
mov
sbb
dec
out
repz
xor
stc
fdiv
mov
inc
pushf
loope
jb
lods
inc
pop
jae
sub
aas
and
inc
pusha
mov
mov
fdivl
add
mov
add
or
cmc
adc
pop
je
lds
pop
mov
pop
jg
cmp
jo
fs
mov
pop
xor
insl
and
imulb
jl
adc
in
sbb
lods
sbb
rolb
movsl
push
icebp
ljmp
enter
xlat
cmp
push
jnp
sbb
repz
pusha
fnstsw
or
or
mov
cmp
sahf
push
mov
sbbb
push
fildll
or
cmp
lea
jae
popf
es
add
sub
jl
mov
mov
cmp
dec
lods
and
loope
clc
lahf
jmp
dec
out
scas
in
mov
sbb
cmp
stos
inc
push
arpl
add
inc
lea
mov
fsubl
pop
stc
jnp
push
cmp
pop
or
pop
dec
fists
adc
sbb
les
lcall
lret
mov
ds
ljmp
mov
mov
in
loop
push
pop
cmp
jb
mov
fcoms
nop
icebp
lret
nop
mov
mov
pop
das
push
ds
inc
mov
push
or
cld
sbb
mov
xchg
pop
jle
test
hlt
orb
sarb
sbb
je
pop
or
les
into
pop
es
cmp
adc
test
cmp
adc
mov
adc
leave
sub
dec
arpl
add
enter
mov
scas
iret
sub
xchg
and
mov
jns
aad
and
imul
les
or
imul
mov
push
mov
lret
addl
jns
adc
mov
jae
lock
leave
insb
int3
push
add
or
add
cmp
outsl
lret
out
or
rorb
js
and
js
aad
mov
inc
mov
xchg
xchg
dec
enter
xor
rorb
in
lcall
test
pop
mov
fildl
cmp
mov
mov
pop
jns
mov
xchg
lcallw
and
jns
shl
mov
mov
xchg
lret
sbb
dec
push
in
divl
jne
push
jmp
lcall
adc
aas
jns
mov
outsb
pop
stc
inc
dec
jno
fisubs
ret
fcomps
sbb
pop
lcall
daa
cltd
push
mov
sub
cli
inc
inc
iret
inc
and
mov
jmp
mov
sbb
out
cmp
lds
xlat
pushf
and
js
xchg
imul
inc
es
push
in
sub
rcrl
negb
dec
sar
jbe
jmp
out
fstp
jnp
shrl
push
dec
das
and
movsl
xchg
inc
pop
inc
insb
out
pop
rolb
and
sub
pop
repnz
adc
pop
rcll
lods
aad
roll
xor
out
mov
and
hlt
test
sbbl
mov
je
aaa
xor
je
add
dec
adcb
shrb
dec
add
cmp
mov
xchg
pop
sub
push
sbb
and
out
or
push
add
aas
ds
lret
aaa
aas
push
and
js
push
js
mov
mov
sarl
inc
xchg
test
mov
lods
ret
loopne
adc
mov
xchg
fists
sub
or
add
inc
push
mov
adc
mov
jmp
or
insb
cmc
mov
lret
outsl
xor
scas
and
dec
sub
inc
lret
mov
aam
pushf
cmpsb
scas
mov
movsl
mov
je
lret
in
mov
or
jmp
jb
test
pushf
jmp
stc
pop
lods
xor
fsubl
and
jns
mov
rclb
xlat
cltd
cwtl
cwtl
in
pop
adc
imulb
mov
cmpb
in
ret
push
mov
aam
and
or
repz
xorl
cmpsl
cwtl
loope
int3
mov
add
and
jo
jno
mov
scas
clc
rol
push
pop
jp
pushf
xor
ja
pusha
adc
adc
mov
add
aaa
xchg
test
sub
xchg
inc
mov
add
mov
mov
mov
movsb
imul
ret
lods
cltd
and
je
cmpsl
mov
ret
adc
adc
mov
cld
inc
ss
jmp
lods
dec
xorb
jb
lds
mov
out
xor
pop
xor
rol
xor
jae
sbb
or
cwtl
hlt
test
stos
pop
in
jo
aad
xchg
dec
iret
adc
pop
or
nop
pop
sti
sub
cmp
push
adc
clc
nop
mov
xor
or
test
fdivrp
cmpsb
jns
insb
ss
fstp
jle
lahf
pop
jne
jo
dec
jmp
sbb
leave
and
or
inc
dec
pop
mov
in
in
or
int3
jno
repz
in
pop
loop
inc
test
fmull
sub
out
mov
pop
nop
iret
push
pop
rorb
fcoms
daa
inc
or
push
mov
in
mov
adc
cli
dec
leave
sub
push
bound
inc
cmc
mov
push
cmp
dec
icebp
jae
add
xor
pop
lret
jns
cmc
adc
lret
fsubrs
stc
cmp
pop
stc
mov
jne
in
and
out
mov
lret
inc
scas
aam
jo
push
pop
dec
int
notl
or
cmp
lods
xor
add
pop
outsb
inc
js
inc
lds
inc
mov
iret
mov
pop
inc
pushf
or
or
ja
aas
dec
adc
xor
inc
push
dec
push
push
pop
cli
mov
dec
inc
movsb
push
out
xchg
push
jae
xchg
pop
pop
push
inc
ljmp
repz
fisubs
or
fadd
adc
ljmp
mov
or
shl
mov
loopne
cmp
jle
scas
fsubrs
aad
pop
or
sbbl
jb
push
stos
jp
xor
and
das
ja
xlat
mov
pop
lods
push
cld
adc
stos
lret
mov
in
sub
mov
jle
or
int
mov
aad
dec
mov
not
popa
sbb
fsubp
xor
cwtl
lds
sub
cmp
pop
xchg
push
cmp
scas
repz
mov
jp
pushf
lods
outsb
cmp
ret
shrb
bound
shl
pop
sbb
or
mov
cmp
into
mov
cwtl
and
jns
or
in
int3
lahf
mov
sub
sbb
inc
testb
lea
mov
fldt
xor
xor
cmpb
mov
xchg
leave
mov
fisttps
gs
add
xchg
mov
ffreep
pop
mov
outsl
mov
je
out
das
mov
xchg
les
cmpl
inc
rorl
movsl
inc
adc
xchg
dec
int3
mov
test
cmpl
pushf
cli
in
xlat
test
lea
and
adc
stc
xchg
ss
xchg
inc
and
push
inc
inc
push
cwtl
xchg
jl
mov
sbb
in
jl
mov
lret
pop
fisubs
ds
int
rdpmc
mov
jbe
push
jo
mov
pop
pushf
fwait
divb
call
jmp
or
aam
addb
cmp
out
popf
lea
xchg
pushf
inc
outsl
mov
jmpw
mov
data16
mov
nop
pop
mov
mov
mov
cmp
lret
push
adc
add
call
inc
in
movb
push
jmp
aas
int
rcr
lret
aad
inc
sbb
int3
dec
push
in
js
jl
js
cld
inc
rcr
cmp
or
shlb
lods
mov
and
jmp
in
outsb
mov
fisubrs
xor
jne
pushf
xor
les
lock
jl
push
lds
mov
movsb
jae,pt
inc
xorb
stc
dec
jb
push
clc
imul
into
inc
push
mov
jo
xor
dec
out
and
aaa
mov
jo
test
imulb
or
in
adc
push
xchg
push
and
ljmp
pop
stos
push
inc
imul
into
push
data16
bound
mov
and
and
loop
pusha
dec
pop
sbb
xlat
or
lahf
movsb
shll
mov
lods
jnp
push
aam
popf
sub
jno
mov
shll
add
add
pop
setg
and
outsl
pop
cmp
js
call
shl
cmp
icebp
mov
sti
pop
jmp
subb
ds
sbb
or
xor
dec
inc
fisubrl
cmpsb
jp
ret
in
push
cli
idivb
lahf
je
daa
lret
movsb
out
mov
cmpl
xchg
mov
out
lods
xchg
test
ja
aad
mov
inc
inc
or
lock
loope
pop
add
shlb
lods
mov
mov
mov
push
xor
lahf
jmpw
pop
insb
xor
andb
push
loop
shlb
mov
nop
inc
shrl
inc
mov
or
adc
mov
icebp
fnstcw
aam
aaa
push
inc
fiaddl
fucomip
dec
push
lods
mov
jnp
mov
or
ud2
scas
xchg
stos
cmp
mov
scas
pop
aas
out
or
test
test
into
dec
lret
push
dec
aam
mov
pop
test
xchg
adc
ljmp
xchg
cld
jmp
cmp
xchg
pusha
out
mov
sbb
std
and
sub
fbstp
or
int
cmpsb
push
movsb
adc
flds
stos
or
test
dec
outsl
mov
cmp
pusha
mov
out
mov
dec
push
pop
push
push
ds
jnp
mov
xor
fists
lds
or
call
test
divl
lods
sarl
mov
notl
dec
mov
dec
mov
jge
add
dec
xor
cmp
dec
scas
imul
mov
cmpsb
jne
pushf
movsb
push
cli
ret
and
fldenv
pop
ficompl
fmuls
divl
xor
add
lea
cmp
xor
adc
push
fwait
mov
outsl
cmp
lea
stos
les
pop
mov
and
cmp
sbb
pop
mov
cmp
sbb
aaa
add
rclb
mov
outsb
pushl
sub
mov
leave
pop
fldt
int3
mov
sarl
push
lcall
rcrl
stos
mov
sbb
jecxz
and
stc
mov
pop
movsl
dec
out
inc
repz
pop
ljmp
xchg
loop
add
push
insl
jo
mov
in
sbb
adc
mov
mov
push
xchg
sbb
addr16
xchg
push
mov
dec
shlb
xchg
xor
pop
imul
cs
inc
cmc
push
pop
orl
push
negb
movsl
lret
arpl
sub
jp
fidivl
ret
inc
pop
mov
ja
pusha
sti
das
fisubs
xchg
es
pop
fildll
cmp
push
xchg
or
loopne
dec
mov
jae
mov
cmp
jne
in
and
push
or
sahf
inc
mov
cmp
test
bound
cmp
lret
fwait
lods
jle
scas
ja
mov
scas
adc
insb
adc
push
inc
mov
icebp
mov
sahf
out
mov
mov
jge
imul
ret
nop
stos
jmp
inc
pop
mov
sbb
popa
sbb
stc
jbe
lea
pop
mov
adc
and
btc
xchg
loop
jno
lcall
xchg
cmpsl
adc
pop
inc
mov
dec
cwtl
xor
mov
and
sarl
shr
lock
pop
cmp
data16
inc
xlat
mov
adc
cmpb
sti
out
push
mov
xor
stos
mov
inc
call
add
push
add
ror
ror
rcl
lret
rol
into
dec
sarb
fsubrp
js
push
js
cmpl
in
cmpsb
dec
lahf
pop
mov
adc
shlb
dec
push
rol
dec
cmpsl
sidtl
inc
jmp
adc
mov
lret
push
dec
fstpt
pop
lock
movsb
or
adc
repz
pop
push
sbb
pop
cwtl
adc
pop
dec
ja
add
popa
inc
lret
mov
pop
sti
xchg
int
stc
cmp
stos
push
inc
inc
sub
sti
daa
fidivs
mov
or
xor
jo
push
mov
inc
into
loopne
divl
pop
add
sbb
les
in
repz
cwtl
jle
sub
mov
ss
sti
shlb
mov
xor
fldcw
mov
loopne
mov
pop
addb
hlt
insb
mov
jb
jbe
rorl
pop
repnz
mov
test
stos
shlb
int
mov
pop
cwtl
sbb
out
imul
lret
jg
xor
jno
stc
lea
cmc
cmp
jp
add
xchg
test
xchg
loopne
cmp
mov
in
insb
loope
push
sahf
xor
mov
pop
sarb
rcl
icebp
push
xchg
clc
add
mov
dec
push
mov
mov
je
fwait
dec
mov
adcl
inc
out
sahf
notl
xchg
sub
lods
mov
mov
sti
and
pop
fs
pop
xchg
data16
dec
jno
loop
push
mov
adc
mov
sbb
fildl
out
add
gs
stos
and
ret
mov
ret
push
or
jp
es
pushf
imul
xchg
xor
adc
popa
fs
aas
stos
data16
insl
out
std
aad
fnsave
aaa
mov
fucomi
addl
ret
sub
adc
out
xor
cli
dec
in
adc
pop
jns
cmp
jge
into
mov
xchg
jle
notb
pop
adc
je
mov
or
adc
xor
mov
lcall
lods
mov
jo
les
push
adc
lods
enter
inc
sahf
sub
cs
lahf
add
inc
jo
inc
lods
pushf
xor
pusha
imul
scas
mov
sbb
or
push
adc
sbb
fcoml
pop
pop
sub
lret
jb
loopne
addb
mov
dec
or
inc
cltd
xlat
ljmp
test
and
out
gs
mov
lahf
inc
mov
leave
push
mov
mov
rorl
pop
sbb
sti
mov
sbb
inc
cli
nop
ljmpw
gs
bound
inc
jmp
xchg
cmp
push
lret
popa
or
daa
inc
ljmp
lods
add
jbe
aaa
mov
mov
stc
adc
xchg
ja
insl
push
les
rolb
push
fnsave
loopne
incl
add
push
xchg
inc
and
sbb
pop
or
xchg
adc
cmp
std
adc
pusha
mov
roll
das
mov
pop
repz
jle
out
sbb
push
inc
or
push
xor
jge
icebp
push
jo
lods
xlat
inc
cmc
sub
mov
xor
dec
pop
inc
lds
dec
aas
or
jbe
xchg
mov
cmpsl
in
mov
lds
cs
stos
stos
cmpsb
pushf
sub
mov
pop
jae
mov
and
pop
or
or
in
bound
popf
out
loope
adc
mov
jo
leave
jmp
or
sub
ds
leave
lret
pop
icebp
mov
and
cmp
insl
jg
mov
sbbl
ret
and
or
jp
popf
scas
lds
cmp
dec
add
movsl
clc
imul
pop
dec
aaa
adc
rcr
repnz
pop
adcl
and
or
mov
xor
incb
sub
dec
loope,pt
sub
je
mov
xchg
xchg
inc
div
cmc
fisttpl
cmpsb
xchg
xor
push
pop
out
jno
dec
cmc
jp
adc
rorl
xchg
jle
xor
xchg
ja
xorl
mov
xor
sar
int3
adc
stos
push
lods
jmp
push
dec
sub
xchg
int3
mov
cmpsl
rcll
cmc
push
sbbb
test
popa
cmpsb
in
js
adc
ja
shll
ss
sub
mov
pushl
jmp
ret
ret
leave
lret
ror
cmpsb
or
test
enter
push
js
popa
inc
fmuls
movsb
stos
fstps
push
loopne
xchg
scas
pop
pop
mov
stos
mov
mov
test
xchg
fldcw
out
out
push
inc
cmp
pop
mov
sbb
out
xchg
clc
jg
mov
fcmove
out
mov
jb
xor
mov
ret
dec
je
mov
ss
fisttps
pop
in
add
add
xor
add
add
mov
notb
pop
repz
cmpxchg
arpl
je
jle
fwait
hlt
and
jge
pop
fnstenv
adc
sbb
icebp
push
push
or
pop
sbb
hlt
push
mov
pop
jno
inc
mov
push
xchg
ret
dec
mov
lret
aaa
and
mov
loopne
jg
adc
pushf
mov
es
and
push
mov
sbb
inc
jo
out
adc
mov
sub
lds
push
jg
sbb
and
jl
hlt
xchg
cmc
push
insb
jae
mov
adc
popf
inc
adc
pop
mov
push
sti
cli
pop
loopne
xchg
adc
dec
dec
mov
ss
xor
mov
addl
leave
jo
dec
and
fimuls
repnz
push
pop
adc
repnz
mov
insb
mull
xor
dec
shrl
jb
inc
insb
addr16
cmp
xchg
sti
fmuls
sub
mov
scas
pop
enter
test
inc
xchg
cwtl
loopne
idivl
cmpl
mov
adc
jecxz
dec
cli
xor
add
cltd
rclb
inc
add
cld
dec
test
cmc
xchg
jl
or
pop
fs
push
iret
stos
xor
or
push
daa
addr16
stos
cld
add
repz
enter
call
and
scas
out
les
pop
inc
dec
aad
cmp
or
sbb
test
pop
jmp
arpl
inc
stos
and
fisubrl
sub
js
add
inc
push
movsb
mulb
hlt
out
push
out
test
out
inc
push
mov
sbb
rorb
inc
test
mov
imul
xor
ror
mov
jne
das
push
lods
addb
into
aad
aaa
xor
and
negb
adc
in
pop
and
movups
fs
js
mov
aas
daa
cld
test
mov
pop
dec
lock
shrl
arpl
mov
fsubp
inc
fcmovnb
xlat
repz
ret
pusha
stos
add
jb
sub
ja
push
mov
test
and
rcrl
xor
xchg
mov
adc
xor
xchg
psrad
inc
xor
repz
mov
inc
sub
fwait
push
stos
inc
or
inc
lahf
addr16
daa
lock
push
repz
xchg
lds
lods
sub
jp
mov
repnz
cs
mov
repz
int3
jge
push
add
ja
inc
xorl
dec
add
stos
lods
enter
mov
adc
sub
and
int3
mov
neg
iret
pop
push
add
mov
ds
jg
lods
xchg
pop
mov
xchg
fldenv
pop
xor
mov
call
sub
inc
inc
mov
inc
stos
es
cld
in
rorl
test
pop
adc
push
ret
mov
xchg
push
daa
in
adcl
pop
loope
cmp
mov
jnp,pt
xchg
out
jl
inc
dec
lea
aad
xchg
mov
mov
hlt
dec
jmp
adcb
ss
cs
mov
es
das
mov
bswap
jmp
fisubs
mov
je
xlat
shrl
cmp
fcoms
repnz
push
int3
add
adc
test
mov
mov
or
stos
fdivp
cmp
clc
mov
into
in
fwait
jne
int3
xchg
mov
xor
cmp
aas
maskmovq
testl
inc
jae
std
and
jno,pn
or
pop
pop
call
fdivl
xchg
fists
popf
inc
lret
lahf
sahf
ss
arpl
inc
add
out
lds
addr16
pmaddwd
xor
pop
or
sbb
jp
ret
icebp
and
mov
lea
mov
cmp
jbe
sti
sbb
mov
out
push
xchg
repnz
cmpsl
or
push
cld
push
push
orb
adc
sub
cld
aad
shll
into
fisubrs
sbb
pop
imul
mov
push
jbe
scas
js
call
add
push
add
ds
leave
int
fldenv
xor
pop
cmp
js
push
js
sub
jns
push
xchg
sub
dec
inc
adc
lds
jno
push
scas
insb
pop
push
mov
dec
sbb
pop
cmp
inc
xor
je
add
sbb
popa
and
insb
lcall
jbe
mov
mov
ds
jecxz
pop
jmp
cmp
xchg
dec
cmp
jne
orb
sbb
jl
jmp
insb
repnz
mov
into
inc
inc
ror
sub
add
cmpsb
fcoml
nop
imul
xlat
fisubs
enter
ret
pop
inc
cld
psrlw
aas
les
loop
rcl
xchg
push
iret
sub
iret
jp
mov
enter
cmc
pop
hlt
adc
test
adcb
and
js
mov
pop
enter
cmp
add
xchg
ja
cwtl
and
stos
in
xchg
fstps
mov
or
add
push
and
popw
sbb
pop
out
in
jl
lret
push
pop
jne
repnz
xor
mov
lahf
pop
add
push
std
out
fimull
mov
lea
inc
in
enter
dec
sub
add
adc
aad
sti
outsb
xchg
pop
push
pop
add
cmp
and
test
jmp
jecxz
jecxz
cmp
movb
imul
pop
pop
in
mov
shlb
push
mov
cmp
in
mov
pop
push
loop
scas
fucomi
leave
mov
cmp
or
sub
mov
cltd
fcoms
leave
shlb
add
cwtl
sarl
mov
cmp
dec
push
out
neg
adc
sbb
rolb
push
and
adc
sbb
pushf
jmp
push
pop
push
addr16
nop
mov
cli
mov
sbb
loop
jae
daa
add
sbb
fcomp
mov
bound
push
adc
mov
lods
cmp
stos
pop
es
jno
adc
cltd
sbb
xchg
or
or
pop
loop
jnp
mov
stos
push
push
int3
addr16
rcrl
cmpsl
and
sbb
push
or
mov
xchg
xchg
ret
lret
cmp
pop
insb
aas
insb
push
or
pusha
rorb
mov
pop
inc
sub
pop
sub
pop
push
mov
dec
lahf
dec
inc
loope
fimull
imul
jb
cmp
dec
into
inc
add
dec
xlat
imul
call
lock
out
or
fmull
pushf
bound
mov
cli
mov
repnz
repz
adc
lods
dec
stos
rorb
sahf
jns
or
fwait
push
sbb
aaa
adc
xchg
sahf
fld
ljmp
ffreep
push
cmp
js
addr16
into
and
popf
jo
int3
jecxz
hlt
pop
mov
cld
sub
fcompl
push
daa
imul
sub
inc
rcl
mov
clc
ss
daa
pop
lcall
push
jmp
rcl
scas
fistl
jbe
xchg
loope
mov
sar
or
out
lods
aas
std
cmpsb
ss
in
ret
unpckhps
push
insb
or
test
push
inc
aas
xchg
pop
jle
int3
ds
lea
pushf
and
push
ret
xor
sub
cltd
xor
push
cmp
inc
push
push
test
in
push
mov
stos
fbstp
inc
xchg
and
xchg
cmpsb
xor
mov
xchg
sub
push
push
int
jo
mov
mov
xchg
loope
jg
imul
js
and
out
push
adc
lock
mov
into
scas
incb
leave
mov
lahf
sub
fists
mov
mov
lcall
in
cli
testl
adc
cmpsb
lret
into
pop
and
dec
gs
test
jns
test
or
dec
std
jbe
cmp
aaa
xchg
fiaddl
movl
aad
ldmxcsr
mov
lret
cs
sub
add
pop
jle
mov
enter
inc
mov
xchg
out
add
shr
lds
and
test
scas
filds
rorb
call
xchg
push
fs
jne
mov
pop
insl
mov
add
lds
cmpl
lea
jmp
rcl
ror
ror
dec
inc
stc
and
js
push
js
xor
mov
rcrb
cld
sahf
test
fstl
mov
mov
daa
cmp
cmpsb
and
mov
fildl
loop
loop
gs
pop
test
xor
sahf
cld
pop
fcoms
cltd
jp
push
pop
addb
dec
sbb
rorb
mov
dec
insb
xchg
cli
add
xchg
xchg
jns
push
adc
sbb
pop
mov
xchg
sub
pop
adc
mov
mov
push
aas
jmp
icebp
mov
or
push
lods
les
xchg
stos
jg
cmpsb
adc
inc
arpl
or
sbb
fsubrl
scas
lods
add
das
xor
aaa
and
ljmp
sub
push
xor
test
pop
jp
cmc
pmullw
in
xor
xor
xor
imulb
in
enter
loop
jmp
push
push
cmp
cmpsb
ja
mov
xor
cmp
loopne
inc
add
add
sub
sahf
xchg
test
or
outsb
mov
mov
hlt
test
rcl
adc
daa
call
fstpt
pop
pop
push
xor
lods
negl
xchg
mov
out
mov
cs
movsb
and
test
ret
ret
sbb
in
iret
sbb
jns
mov
lods
cmp
mov
mov
cmpsb
aas
aaa
pushf
pop
or
cmp
idiv
sub
lds
jg
inc
mov
ja
ret
add
push
movsl
and
lahf
xor
into
pop
bound
xor
rclb
jno
insl
cs
inc
rcrb
mov
cmp
cmp
xchg
sbb
scas
test
adc
sub
repnz
cmc
dec
mov
pop
jp
mov
clc
popf
arpl
add
in
arpl
add
pop
inc
sub
inc
mov
adc
jno
jae
shlb
xchg
sbb
and
mov
popf
aaa
enter
aam
out
mov
xchg
jae
mov
mov
push
bound
ret
adc
mov
shll
into
leave
pop
or
push
loop
in
in
pop
add
movsb
leave
mov
adc
push
ss
pop
popw
or
xchg
sbb
xor
xor
xchg
lcall
mov
sub
inc
push
add
lds
add
outsl
mov
incb
insl
xchg
test
cs
popf
add
outsb
xchg
xchg
jo
pushf
addr16
stc
fiaddl
outsl
incl
aas
sbb
lods
xor
jge
push
pop
dec
shrl
inc
sbb
cli
shld
daa
mov
pop
mov
inc
xor
iret
in
in
in
das
lock
stc
movsl
mov
sbb
push
or
xchg
mov
adc
dec
xor
jp
scas
fnstenv
and
repz
mov
ret
cmp
leave
in
ja
xchg
je
push
cmc
rclb
daa
insb
push
stos
dec
scas
sbb
jbe
xchg
sbb
stos
loopne
outsb
arpl
jnp
mov
dec
hlt
mov
adc
cwtl
out
xchg
pop
mov
sub
inc
insb
in
sahf
sub
add
xchg
es
adc
mov
mov
adc
ret
enter
iret
xorb
fdivs
lds
sub
addl
add
mov
push
push
sbbb
movsb
and
mov
adc
lret
sub
fcoms
mov
sub
ss
sarb
mov
pop
mov
mov
xlat
fsts
pop
sub
ret
lods
pop
and
and
cmp
mov
push
pop
or
push
decl
pop
pop
jle
cwtl
imul
sub
cmp
andl
faddl
xchg
ja
jne
mov
fs
in
dec
stos
and
dec
mov
cvtdq2ps
inc
cld
rol
mov
sbb
test
inc
jne
js
mov
insl
pop
xor
or
xor
shl
add
out
push
or
aad
mov
loop
pop
ja
test
mov
cwtl
insl
sarl
xchg
aaa
jno
mov
xchg
jmp
xchg
jecxz
pop
inc
scas
and
lock
mov
xchg
sbb
mov
lods
shlb
push
aad
sub
fists
lea
in
push
xor
jne
mov
jb
cmp
outsl
lods
pop
push
dec
ss
shl
js
push
add
enter
out
mov
outsl
inc
call
cmp
enter
add
ret
ror
fld
outsb
js
inc
mov
fwait
dec
push
cmpl
jl
js
sub
add
push
lods
scas
or
xlat
xchg
add
aad
cli
sub
and
mov
push
sub
pop
jl
ljmp
icebp
repz
sbb
jle
mov
lods
cmc
adc
dec
jmp
lea
ja
pop
nop
sahf
movsb
jnp
mov
jmp
add
and
sbb
mov
xchg
lods
arpl
jge
popf
mov
cmp
int3
cs
xchg
cmp
notl
mov
fstpl
cmp
rcrl
ja
push
dec
int
mov
xor
imul
push
sub
mov
mov
test
jne
add
enter
cmp
ljmp
or
mov
mov
loopne
and
add
pusha
inc
repnz
xor
in
test
dec
cmpsl
adc
mov
enter
nop
insl
cli
sub
loopne
add
push
addr16
or
mov
nop
mov
inc
call
sahf
outsl
imul
sbb
lock
out
sub
add
cmpsb
add
adc
xchg
js
bound
es
push
adc
icebp
mov
adc
and
cmpsb
and
jl,pt
jbe
jno
movsl
out
cmp
mov
sbb
lahf
sbb
add
mov
push
push
call
and
cmp
mov
je
inc
jp
jbe
push
jno
mov
push
adc
lea
sub
jecxz
adc
push
xor
xchg
or
mov
mov
cltd
hlt
fmuls
jl
fcmovu
jbe
jecxz
jbe
arpl
in
cs
jl,pn
cld
insl
mov
cld
push
and
cs
pop
cld
mov
test
jmp
jl
add
xchg
lods
pop
test
cli
mov
pop
mov
in
ret
lods
inc
call
push
cmpsl
cmpsb
fidivrs
push
ds
sarb
aad
sub
filds
push
popf
and
lahf
stos
cmp
ljmp
adc
inc
out
inc
fists
pop
xor
bound
lcall
jl
jo
dec
dec
lret
mov
imul
mov
outsl
jnp
push
xor
xchg
arpl
push
idivl
mov
aam
testb
push
scas
mov
enter
xor
or
mov
pop
sbb
outsb
mulb
mov
add
movsl
cmpsb
sbb
mov
ret
xchg
push
out
pop
inc
rcrl
jnp
mov
ja
or
xchg
push
sahf
in
enter
popa
sbb
mov
sbb
xor
inc
outsl
xor
jbe
sub
hlt
xchg
cmpsb
sti
lahf
inc
loopne
clc
mov
push
mov
jbe
cmpsl
cmp
xchg
lods
mov
imul
push
loop
fimuls
test
mov
pop
jmp
adc
repz
fistpl
mov
rcrl
push
mov
cmp
xchg
mov
aas
adc
adc
mov
lods
fmuls
inc
daa
test
adc
push
xlat
out
pop
cmp
add
mov
and
sub
scas
push
and
aas
aad
push
xor
jg
loopne
pop
imul
test
lea
insb
xchg
sbb
push
in
mov
stos
inc
mov
pop
add
aaa
push
xchg
decl
mov
rorb
addr16
pop
test
and
and
push
pushf
xchg
add
mov
push
mov
xchg
iretw
test
lret
cld
push
aad
xchg
adc
pushf
adc
shlb
or
pushf
inc
call
xchg
xlat
mov
stos
sub
inc
xchg
push
ret
xor
or
mov
mov
in
loop
je
scas
popf
es
mov
cwtl
cltd
dec
rorl
jg
or
fdivl
mov
jecxz
pop
nop
aas
dec
leave
ds
cld
lods
in
rcrl
popa
sbb
cld
and
in
fwait
cmp
pop
push
jb
mov
out
sub
cmp
pop
mov
adcb
cmp
inc
cld
pusha
add
and
popa
or
ds
dec
xchg
adc
sbb
mov
jecxz
aam
fimuls
ljmp
ds
cmp
ret
cs
stos
xor
ret
push
push
push
dec
je
lea
jmp
ds
enter
int
xor
pop
fwait
sti
sub
add
js
hlt
cmpsl
dec
pop
dec
not
inc
inc
in
add
int3
dec
push
and
cmp
mov
push
dec
lret
add
or
sub
retw
int3
xchg
add
nop
pop
pop
mov
mov
mov
sbb
scas
sub
cmpsb
and
or
jbe
cmpsl
xlat
data16
jge
or
leave
out
push
adc
mov
stc
and
jnp
xchg
je
sub
in
imul
fsubp
outsb
cs
cmp
and
or
adc
cmpsl
lock
ss
in
and
pusha
insl
stos
cs
mov
rcrb
add
pop
ljmp
jnp
sbb
lock
addl
push
mov
add
sub
xlat
mov
mov
and
loope
xchg
or
push
cmpsl
outsb
clc
add
ss
mov
out
stos
call
mov
mov
dec
popa
inc
mov
movsl
xchg
add
mov
test
cmp
dec
push
lods
rclb
add
scas
and
out
mov
mov
pop
test
jp
adc
ja
adc
sbb
ficoml
sbb
imul
rcrl
add
xor
movsb
je
xor
out
push
shr
mov
jge
cmp
bound
sub
dec
shll
pop
mul
mov
test
mov
out
mov
pop
pop
insb
sbb
add
and
jno
sbb
xchg
dec
xorl
xor
rcrl
out
jmp
cmp
sub
shl
dec
jecxz
lret
mov
movaps
ja
jnp
cmp
mov
and
movsb
hlt
add
xor
xor
repz
or
mov
jecxz
sti
in
test
adc
xchg
arpl
inc
inc
inc
adc
adc
bound
aas
fprem
xchg
dec
call
out
pop
icebp
call
imul
sub
lods
outsl
fwait
cmp
jo
mov
or
decl
call
int
repz
lock
jecxz
sbb
mov
cmp
and
clc
test
stos
loope
cmp
xchg
add
cmp
pop
ret
rorl
cmp
test
shlb
xchg
mov
outsl
push
not
dec
or
cmc
cwtl
rdpmc
adc
in
aaa
hlt
and
gs
or
gs
mov
imul
mov
jns
mov
repz
jg
mov
lcall
scas
stc
cmp
push
mov
testl
jne
fsubl
mov
jnp
mov
mov
jle
loope
aad
cmpsl
int
mov
jns
insb
aaa
clc
pop
cmp
sub
sbb
mov
add
push
repz
jle
lahf
daa
xor
or
xor
jnp
sahf
mov
add
shlb
ja
and
movsb
adc
mov
call
xchg
xor
mov
scas
add
addr16
sub
ja
lds
clc
sarb
xor
xor
push
xchg
out
insl
ljmp
cmpsb
out
jp
aas
je
enter
popa
arpl
jg
xor
fnstenv
cmpsl
faddl
push
testb
sahf
mov
sbb
xchg
jmp
int
imul
rclb
stos
pop
pop
xchg
xchg
add
nop
loopne
push
inc
cmp
sahf
xchg
fistpl
sub
addr16
xor
and
xchg
cmp
and
in
rolb
adc
mov
add
fistps
outsb
inc
jne
jb
xchg
lds
ljmp
sbb
or
nop
loop
sub
cmp
mov
dec
out
mov
bound
daa
in
andb
maskmovq
testl
fdivl
call
scas
in
jmp
enter
mov
iret
add
cwtl
out
stos
xor
push
lock
fsubrs
xchg
cmp
add
js
jg
subl
leave
mov
mov
in
and
mov
in
jl
lahf
lds
fwait
rcl
push
pop
sub
ja
cmp
and
les
stos
cltd
push
popf
mov
leave
aas
push
loop
leave
cltd
pop
dec
mov
jp
fs
out
or
aaa
mov
int3
sbb
mov
dec
sub
inc
sbb
cmp
iret
add
loop
jl
ret
mov
mov
jne
mov
and
mov
movb
jmp
cmp
ret
rol
rcl
int
push
nop
fiadds
into
mov
jb
js
push
js
or
aad
jg
push
aam
cs
jg
scas
lret
das
in
loopne
jnp
ss
std
jns
sub
cmp
jge
inc
adc
repz
repnz
addb
or
jg
in
out
aas
jns
or
or
pop
dec
cmp
insb
stc
adc
adc
loope
test
sub
mov
pop
sbb
in
dec
jnp
into
insb
mov
pop
inc
lcall
pop
clc
cltd
lock
xchg
in
fists
adc
inc
stc
xor
adc
add
popa
push
es
lock
add
jbe
popa
mov
dec
add
shr
daa
push
jle
int
mov
pop
mov
mov
sahf
pushf
das
xchg
push
adc
jecxz
aad
sahf
adc
lcall
fstps
inc
popf
sub
xchg
stos
cmpb
push
pop
sub
mov
daa
out
cmp
pop
divl
loopne
cmp
mov
and
shlb
push
imul
lea
xor
insb
cmpsl
stos
mov
loopne
repz
jge
jne
ss
lods
movsl
mov
pop
xor
jne
mov
mov
cmp
mov
cmc
inc
rolb
out
stos
dec
inc
sahf
inc
push
fadds
popf
cmp
sti
je
cli
frndint
pop
mov
and
mov
repnz
jae
lods
fsts
fisttpll
jle
shlb
inc
std
adc
jae
cld
pop
repnz
cmp
xor
scas
push
mov
push
mov
scas
sti
cmp
sbb
xor
ret
inc
test
pop
rol
mov
sub
xchg
and
push
mov
add
inc
add
push
arpl
inc
inc
aaa
adc
sbb
sbb
sub
into
or
nop
adc
insl
push
mov
mov
push
dec
arpl
pusha
or
jecxz
mov
scas
stos
push
xchg
or
sub
fcoms
test
mov
lret
xor
fsubrl
js
movsl
jp
fmulp
sbb
repnz
lea
jno
cltd
jno
lcall
das
pop
mov
jno
jecxz
test
add
push
jae
push
mov
add
aaa
jbe
push
dec
jnp
sahf
enter
add
mov
repnz
cmc
jnp
sub
cmpsl
xchg
shrb
shll
fstpl
add
data16
daa
lcall
lahf
pop
mov
pop
inc
out
shlb
sbb
cmp
in
aam
setg
sbb
inc
imulb
or
mov
cltd
mov
rclb
mov
xchg
insb
inc
bound
iret
test
xor
sub
insl
in
sub
inc
ja
out
jb
cli
jb
or
pop
inc
mov
inc
into
shl
jnp
jge
xchg
sbb
repnz
dec
addr16
loopne
adc
lods
add
push
cli
sub
std
mov
clc
scas
bound
test
mov
adc
pusha
outsl
jne
or
jnp
cwtl
add
rolb
in
je
xchg
decl
repz
pop
pop
fimull
fdivs
push
test
pop
loope
lds
fnstenv
sarb
sub
mov
push
sub
fldt
ljmp
add
mulb
mov
ljmp
and
add
pop
jb
mov
mov
cmp
push
shll
lcall
push
imul
jcxz
xchg
cmp
mov
lret
jle
repz
out
push
sub
ja
gs
scas
test
enter
adc
lods
or
jo
fstps
sbb
dec
insl
xor
mov
fadds
or
xchg
aaa
test
fcoms
lahf
jmp
push
xlat
and
pop
or
idivl
test
cwtl
imul
jp
mov
mov
push
in
adc
xchg
out
into
ret
cltd
scas
loop
dec
lret
sub
enter
pop
jbe
fs
xorb
outsl
sar
cmp
lahf
adc
lods
xchg
fnstcw
xorb
pop
push
sbb
ret
mov
fsubrp
push
addr16
xor
jmp
popf
push
adc
test
hlt
mov
push
cmp
fcoms
test
nop
or
ds
mov
push
add
leave
ret
leave
leave
leave
lret
int
mov
pop
lea
push
js
nop
mov
mov
int3
sub
movsl
pop
fs
mov
mov
xor
cmpsl
fiadds
mov
int3
cmp
xor
cld
or
insb
xor
mov
inc
movsl
das
inc
jge
add
adc
cmp
or
lods
pushf
dec
enter
cltd
fs
repz
adc
xchg
aad
jp
sub
mov
js
jmp
mov
sub
dec
jecxz
xchg
pop
pop
cwtl
imul
aas
sub
add
mov
push
aas
pusha
or
cmp
add
fadds
js
xchg
fwait
mov
inc
fs
data16
int
mov
xlat
mov
cmpsb
push
xchg
push
and
test
and
mov
loope
cmp
sbbl
mov
sbb
mov
pop
and
fsubs
arpl
and
ret
jo
inc
lds
addr16
sbb
jb
bnd
aaa
es
lods
lret
icebp
xor
out
sub
and
cs
cmp
stc
scas
in
gs
mov
dec
inc
imul
xchg
pusha
gs
icebp
add
jns
cmp
mov
sub
aaa
fsubl
in
xchg
add
popa
pushf
enter
test
push
rep
mov
jg
and
cmpsl
clc
mov
cmp
lret
mov
das
sahf
fs
enter
mov
xor
dec
mov
fcomps
stc
fisubrl
icebp
fisubrs
push
outsl
jg
lret
xchg
push
jecxz
aas
mov
xor
cmp
jb
cwtl
loop
movsl
sub
sub
cmpsb
fbstp
xor
inc
std
nop
sub
out
bound
cmp
xor
push
inc
mov
sti
das
push
mov
in
lret
stc
js
xchg
sub
ds
divb
rol
ret
stos
cmp
pushf
arpl
adc
mov
hlt
xlat
add
arpl
into
les
jge
in
lret
leave
insb
clc
out
pushf
les
or
xchg
std
cwtl
bound
jecxz
mov
pop
mov
inc
add
addb
andb
inc
mov
push
loopne
adc
mov
xchg
fstps
jle
and
mov
lret
push
les
inc
into
xchg
ffree
and
mov
ret
jb
repnz
adc
or
scas
jns
and
aam
sbb
jmp
mov
int3
mov
lcall
cltd
cmc
jae
pop
faddl
ss
adc
push
das
pop
cli
test
lock
xor
movsl
ret
xchg
addr16
mov
scas
pop
xorb
fcomp
xor
stos
movsb
push
hlt
icebp
jmp
adcl
push
fs
aad
pop
addr16
shl
pop
mov
ja
and
imull
pop
adcl
push
js
fs
test
enter
pusha
dec
mov
cmpsb
out
adc
xor
or
jl
jnp
stos
mov
scas
xchg
xchg
sub
fcomps
cmp
fld
xlat
clc
mov
cmpl
ud1
xchg
jmp
ljmp
lock
xchg
mov
shl
in
pushf
sbb
push
mov
pusha
jle
sbb
fmulp
mov
cltd
cmp
loope
lret
cmp
aam
push
adc
rorl
jbe
sub
cmpsb
or
jnp
add
and
dec
add
pop
sub
repnz
aad
fstpt
imull
add
dec
and
inc
jo
sti
ds
frstor
test
nop
sub
mov
push
mov
out
mov
loope
mov
fbstp
inc
adc
adc
mov
lret
cmpsb
add
push
jecxz
div
mov
xor
enter
stos
scas
in
add
jmp
scas
adc
jno
scas
mov
add
les
sub
pop
negl
fistpl
arpl
out
fmull
inc
xchg
xor
les
jg
lea
in
and
andb
and
pop
or
mov
jno
insb
xchg
jg
or
pushf
inc
inc
clc
add
shrl
loopne
jl
stc
outsb
or
sub
repnz
push
push
loop
jnp
rorl
rcrb
jecxz
push
adc
jb
cmp
repz
xchg
cwtl
iret
rorb
mov
push
sti
xchg
jge
cmp
add
mov
mov
mov
lea
mov
jmp
lret
rcl
fnstcw
stc
mov
dec
nop
js
push
js
cli
loope
push
fisubrs
loopne
arpl
pusha
push
xchg
loope
add
cmc
stos
icebp
mov
or
out
andb
adc
add
notb
add
pop
shl
scas
mov
mov
aaa
push
sahf
out
push
inc
fcmove
mov
fdiv
scas
xchg
inc
sub
mov
push
xor
xorb
lret
pop
sub
cli
cs
sub
outsl
ret
xor
xor
push
mov
or
sub
cmp
sub
imul
mov
pop
inc
jne
loopne
pusha
sbb
pop
gs
xchg
aad
lcall
xor
sbbb
adc
and
xchg
fwait
xor
je
out
sub
ds
cs
cs
sti
sbb
inc
adc
and
jno
sub
imul
dec
cld
inc
push
dec
mov
call
pop
sahf
xchg
mov
and
jno
loope
mov
lea
test
push
movsl
push
fs
int3
jbe
ret
pop
pop
pop
jnp
js
ja
jo
jmp
xor
cmc
xchg
push
sti
vpacksswb
or
push
add
sbb
adc
mov
and
sub
push
xor
std
pop
and
and
hlt
cmpsl
stos
imull
sbb
mov
add
cmp
add
sub
gs
mov
inc
mov
js
out
outsl
dec
xor
and
inc
enter
xchg
out
insl
mov
shrl
sbb
or
pop
add
or
movsl
lods
and
shlb
sub
gs
daa
sub
fwait
mov
mov
mov
sub
inc
icebp
or
outsb
data16
xor
jmp
fildl
fidivrs
icebp
enter
fwait
push
test
mov
adc
add
xchg
fsubrs
sub
push
cmc
in
jo
stos
mov
jl
xchg
jae
popa
dec
push
testb
nop
push
cld
xor
mov
xchg
loop
scas
push
mov
popa
inc
sti
push
int3
xlat
out
sub
jge
sub
pop
dec
push
bound
jb
pop
adc
xchg
pop
out
push
iret
ret
or
xor
daa
sahf
cmp
push
leave
sti
xchg
cmp
sub
pop
mov
dec
pushf
dec
les
das
jmp
int3
das
ret
push
int3
jge
repnz
inc
imul
inc
outsb
jns
push
or
sbb
lret
push
jb
inc
cltd
push
ss
dec
dec
sub
xor
xor
push
aam
or
mov
sub
lcall
stos
or
xor
rcrb
pop
adc
pop
aad
push
dec
mov
sub
fidivrl
fsubs
ljmp
jne
fnsave
shl
dec
testl
mov
jl
cwtl
inc
daa
pop
add
popa
in
cmpsb
pop
lods
daa
dec
jne
dec
mov
mov
daa
mov
mov
icebp
push
sub
add
mov
cmc
hlt
push
pop
sahf
mov
das
sti
movsb
inc
sbb
test
les
xchg
stos
in
or
sahf
outsl
mov
inc
pop
inc
mov
mov
hlt
push
xorl
fadds
fimull
jo
add
rorl
std
push
jmp
cmp
pop
insb
or
ss
sti
andl
push
in
mov
bound
inc
mov
xor
lea
hlt
dec
pop
mov
xor
dec
mov
push
push
pop
repnz
sti
dec
out
out
les
pop
cmp
push
add
movb
or
sub
loope
repz
mov
push
pop
mov
shll
int
mov
mov
lea
rcll
push
pop
dec
mov
xchg
mov
mov
and
xchg
dec
es
sti
add
jle
mov
negl
fcmovnu
out
and
xchg
dec
in
mov
mov
call
mov
xor
add
and
scas
push
inc
jecxz
mov
stos
jle
lea
fistpll
sub
mov
insb
imul
mov
fmuls
adc
iret
mov
jne
test
fmull
ret
sbb
mov
int
jp
mov
in
inc
push
test
shlb
mov
mov
rcrb
jbe
loope
pop
sbbl
outsl
pop
jg
enter
std
xor
adc
stc
jbe
arpl
dec
inc
add
push
orb
mov
jmp
vpsrld
fcmovbe
leave
sarl
cmp
mov
fwait
js
push
js
cld
fcoms
out
lods
jns
out
test
out
xor
or
ss
dec
and
pop
loopne
pushf
mov
dec
and
test
xor
and
and
mov
cltd
popa
jg
sahf
mov
sub
js
push
addr16
sti
mov
mov
mov
inc
loop
aam
movsl
mov
dec
fwait
dec
jp
xchg
pop
push
testl
jg
mov
stos
inc
fistpll
shl
andl
popa
inc
data16
push
dec
dec
aad
adc
popa
es
or
loopne
test
xlat
outsb
add
shrl
loope
popa
int
push
sbb
in
xchg
out
sbb
stc
jo
jecxz
inc
and
xchg
call
cmp
push
bound
insl
mov
and
sbb
inc
add
mov
mov
rcr
imul
outsl
cmpsl
cld
jg
shr
into
mov
mov
mov
cmp
movsb
cltd
push
scas
pop
arpl
popf
ret
mov
push
add
or
cs
in
pop
sbb
lahf
in
popa
addl
out
lcall
jae
pushf
xchg
inc
fistl
lahf
sbb
orb
mov
mov
jmp
and
fwait
out
xchg
ret
test
sub
sahf
popa
jmp
mov
movsb
dec
shl
shl
test
mov
push
and
enter
pop
push
dec
mov
xchg
inc
sbb
pop
rol
daa
sbb
sub
in
lea
mov
mov
sbbb
cld
aad
shl
lds
and
enter
and
lret
andl
sub
cmc
jmp
loopne
xchg
mov
popf
sbb
and
mov
bound
shlb
pop
dec
mov
push
sbb
int
push
movd
or
outsl
and
cmpl
pop
sub
fdivr
jge
inc
or
jg
push
cwtl
lea
int3
inc
push
out
lods
into
insl
test
js
cmpsb
inc
or
or
xor
gs
frstpm(287
rorb
ret
mov
pusha
je
aas
stc
cmpsb
outsb
xchg
adc
outsl
mov
mov
mov
mov
xor
test
shll
jbe
lock
ret
push
adc
cmp
xchg
ljmp
adc
adc
nop
in
cwtl
aaa
mov
jl
jecxz
nop
mov
pop
loop
iret
xor
or
and
and
xchg
xor
and
addb
jl
iret
outsl
vpshlq
or
pushf
mov
xchg
cwtl
jae
inc
decb
push
mov
inc
mov
pop
enter
scas
pop
xchg
cwtl
mov
push
incb
jecxz
add
popf
push
mov
fildl
idivb
add
dec
daa
cmp
add
hlt
cmp
mov
shlb
fidivs
adc
aaa
mov
aad
test
inc
pop
shll
xchg
pop
sub
lods
xchg
dec
push
dec
mov
mull
xchg
dec
mov
andb
imul
or
mov
fisubrl
push
call
pop
lahf
leave
add
enter
mov
add
in
mov
adc
cmc
jbe
add
ret
cld
iret
dec
pusha
gs
sub
shll
lret
dec
or
xchg
jp
nop
push
push
adc
push
hlt
dec
popa
xchg
lret
xor
aaa
mov
popf
sbb
adc
fs
xor
dec
data16
mov
in
shll
add
lahf
sbb
aaa
lds
in
mov
scas
paddsb
mov
lcall
adcb
fadds
das
or
and
pop
pop
xor
or
mov
xchg
jns
mov
test
inc
scas
in
xor
mov
jo
cmp
int3
repnz
and
test
daa
sub
cmp
in
lret
test
adcl
loope
jnp
mov
adc
push
jb
inc
sahf
scas
jg
loope
adc
and
mov
movsl
fs
repnz
and
bound
jno
cmp
stos
lock
aam
icebp
imul
in
stos
lods
into
in
or
aam
inc
shr
add
ror
rcl
rcl
cld
in
lock
stos
sahf
js
push
js
lods
mov
nop
in
adc
aaa
xchg
sub
dec
mov
jg
cmp
repz
ja
jle
pusha
xchg
cwtl
cld
sbbl
aas
xchg
stc
pop
gs
cld
jo
in
mov
mov
lret
mov
mov
pop
xchg
jg
dec
pop
xor
insl
lret
and
jle
loope
roll
loopne
lea
mov
xor
loope
leave
pusha
pop
dec
xchg
adc
push
mov
xchg
iret
fdivs
div
and
push
jle
stos
je
fs
mov
jle
les
mov
mov
push
cs
mov
insb
mov
outsb
or
ljmp
stos
into
movsb
jbe
jecxz
shrl
mov
loopne
test
dec
fadds
mov
xchg
fs
faddp
mov
sub
xor
std
dec
fcomip
xchg
jecxz
imul
mov
lcall
inc
sbb
cmc
cltd
inc
mov
sub
jae
sar
push
scas
idivl
orl
fnstsw
sub
fisubl
jecxz
and
or
mov
push
dec
adc
dec
in
sarb
das
sar
es
mull
mov
lret
orl
add
mov
addb
adc
inc
negl
data16
or
div
stos
xchg
repz
mov
es
push
cmp
or
pop
sub
adc
mov
push
subl
xchg
ret
push
add
and
and
cmpsl
repnz
xchg
jns
cwtl
mov
ja
mov
sub
lods
push
pop
rcl
dec
adc
inc
sub
adcl
pop
sub
mov
loope
lret
inc
jmp
adc
cmp
inc
cmp
mov
cmpsb
imul
inc
dec
push
add
hlt
cmp
mov
xchg
movsl
mov
xchg
jp
sti
mov
imul
rcrl
sbb
pusha
or
xchg
lods
aas
push
xchg
or
and
lret
xchg
test
fldenv
adc
fcoml
in
mov
jmp
jp
xor
mov
movsb
fsincos
and
arpl
push
fsubrs
addr16
cmp
cmp
sar
dec
xor
mov
js
or
add
xchg
cld
fiadds
xor
sub
dec
fistps
loope
mov
jbe
cmp
pop
int
ljmp
pop
xor
cmp
fdivrl
cmpb
cmpsl
mov
roll
push
cwtl
jo
cwtl
pop
pop
xor
push
test
lahf
xchg
push
in
sub
leave
fisttps
aas
mov
and
inc
ficoms
sub
mov
pop
icebp
sbb
int3
sti
cs
sbb
inc
pop
xchg
mov
push
cld
cmpsl
inc
sub
inc
popa
imul
push
mov
data16
mov
mov
into
sbb
rclb
lods
dec
imul
and
xchg
es
inc
and
imul
out
jno
mov
inc
sub
mov
xor
int
insl
js
je
aam
scas
icebp
xor
xlat
dec
xorl
dec
cmp
dec
and
sub
xchg
mov
cmp
sub
jecxz
jecxz
jmp
xchg
jp
js
sub
arpl
scas
nop
pop
adc
loopne
movsb
shl
sub
mov
ja
out
cmp
cltd
pusha
nop
dec
and
push
sub
data16
enter
outsb
dec
ss
insb
pop
jmp
push
loope
pop
cmc
sar
mov
push
fsubrp
xchg
aad
cmp
sbbl
xor
das
mov
sbb
int3
cmp
aas
popa
lds
scas
stos
mov
cmp
mov
fadd
jecxz
addr16
pop
or
mov
in
pop
sub
push
or
icebp
adc
dec
fwait
adcb
cmp
xor
int3
sbb
fiaddl
sbb
or
cmp
adc
xchg
xor
push
in
push
push
pushf
aaa
call
cs
xchg
cmp
xchg
out
aaa
ret
and
sarb
jge
inc
jne
lds
mov
test
xlat
leave
imul
adc
outsl
mov
sub
adc
xor
xor
add
mov
mov
mov
jmp
lret
lret
leave
leave
leave
cmp
sub
mov
xchg
mov
js
enter
jecxz
xor
jnp
mov
push
stc
mov
nop
pop
jg
cmp
jae
push
imul
int3
cltd
xchg
cmp
push
push
adc
ljmp
pop
inc
xorb
jb
sub
scas
push
and
jmp
rorb
rcrl
inc
and
popa
mov
mov
sub
andb
jecxz
inc
daa
mov
lret
lret
lods
bound
outsb
mov
rcll
cmc
and
cmp
sbb
scas
scas
incl
fdiv
repnz
pop
push
and
push
clc
cwtl
outsl
push
jmp
sbb
jle
jp
scas
push
lods
mov
clc
loope
es
arpl
cmp
arpl
or
fimuls
lods
mov
scas
fbstp
cmp
xor
adc
push
inc
jb
mov
bswap
aad
sti
mov
push
pop
aas
dec
ret
into
mov
repnz
or
sub
cmp
dec
push
push
or
sub
mov
daa
je
fcomps
add
dec
loopne
bound
mov
jle
xchg
sub
pop
and
pushw
scas
rcrl
loope
es
xor
mov
xor
jno
int3
stc
dec
cs
shl
insb
leave
in
ss
pushf
push
pop
adc
dec
outsb
sbb
push
pop
mov
repz
push
jmp
in
icebp
add
mov
push
das
scas
push
rclb
lods
call
ficoms
rclb
inc
and
outsb
jp
inc
cld
and
pusha
pushf
loop
imul
iret
jecxz
fisttpl
jl
and
cwtl
xchg
test
mov
and
cmpl
rolb
jl
inc
les
adc
cltd
rol
mov
les
adc
or
lahf
xchg
or
xchg
sbb
jl
mov
xor
sbb
or
lods
mov
dec
cmpsl
leave
in
adc
sub
xor
lahf
movsb
shl
add
fdivs
scas
sbb
aad
test
int
sbb
add
outsl
hlt
xchg
adc
sbb
cmpsl
ret
sbb
add
mov
jnp
xor
xor
jg
gs
fwait
sarb
pop
repz
jl
in
pop
mov
and
rol
or
add
popa
sub
mov
cmp
jl
dec
adc
cli
jne
data16
loopne
jecxz
int
push
dec
orl
pop
inc
jp
fbstp
pushf
cli
lret
pop
aam
ja
xchg
push
ror
imul
shll
adc
fwait
nop
jge
loop
orb
aaa
inc
xchg
jge
movaps
cld
and
scas
iret
and
or
jne
sub
xchg
adc
int3
pop
mov
adc
adc
pushf
ret
mov
dec
jmp
cmp
mov
lret
mov
lcall
sub
and
shlb
and
pusha
ds
aad
sbb
out
lcall
cli
popf
add
andb
adcb
stos
paddq
jbe
mov
push
notl
push
sbb
ss
mov
inc
mov
dec
jge
dec
push
xchg
sbb
sub
fidivl
inc
test
aas
mov
out
fwait
lods
ret
pop
loope
dec
cmc
lock
dec
ljmp
xor
push
scas
dec
in
xlat
js
or
xchg
inc
gs
mov
mov
add
loop
or
jbe
pop
add
add
jnp
out
fs
adc
inc
mov
ret
mov
orl
mov
mov
divl
je
scas
cmpsb
add
pop
sbb
mov
add
repnz
adc
pop
out
ss
jle
mov
test
or
jl
or
xor
int
inc
pop
adc
and
sbb
pop
fcomps
jne
and
sbb
imul
es
or
push
inc
std
xchg
insb
lods
rcll
pop
fbld
xor
inc
lods
inc
jle
mulps
xchg
icebp
cmpsb
adc
sahf
and
dec
mov
ljmp
cwtl
push
fimull
ss
sub
adc
and
icebp
push
pop
popa
repz
pop
lea
std
adc
test
in
adc
lds
out
jg
push
jo
in
xchg
in
xchg
sbb
xchg
lock
cli
pushf
daa
mov
mov
jmp
cmp
ret
rol
dec
pop
fwait
or
sahf
push
pop
xchg
js
ljmp
jo
lret
into
leave
nop
add
pop
xchg
hlt
mov
pop
les
ss
mov
xchg
sti
iret
add
cmp
sub
pop
repz
fcompl
push
sbb
jl
jo
scas
sbb
pushf
add
adc
pusha
stos
outsl
outsb
inc
shll
push
lret
adc
mov
in
mov
mov
jge
shl
jb
mov
sbb
daa
jo
push
movsl
xchg
ja
lea
cli
lea
in
aam
mov
fcomps
test
xor
outsl
lret
xor
adc
fldenv
clc
in
xchg
sub
push
cli
lea
push
mov
mov
adc
sarb
pop
cmp
outsb
pop
dec
pushf
add
mov
les
mov
push
nop
and
or
fs
mov
push
or
jno
cli
hlt
pop
nop
adc
mov
aas
mov
cmova
mov
inc
and
ret
sahf
mov
mov
xor
stos
add
push
shlb
xor
shlb
add
push
add
xor
cmpsb
xor
mov
test
pop
pop
outsb
pop
je
outsl
ss
rolb
movsb
and
pop
test
lret
cmc
clc
dec
cmovg
nop
inc
ret
inc
scas
scas
stc
mov
rolb
fwait
xor
imul
cmp
in
dec
popa
jbe
xor
sarl
shrb
push
dec
popa
fcmovnb
ja
dec
in
stc
inc
lret
and
push
and
inc
popf
and
fistps
or
fbstp
push
mov
std
addr16
and
jno
inc
push
push
jne
xor
ja
rorl
outsb
sbb
push
dec
cmp
aad
push
fcompl
inc
jp
out
and
ss
stos
add
dec
cs
scas
jecxz
leave
or
sbb
sti
pop
into
jnp
xchg
inc
jge
je
dec
flds
or
xor
xchg
cwtl
xor
add
jno
ljmp
repnz
xchg
sbb
arpl
sbb
mov
out
cmc
aaa
aas
mov
push
data16
inc
roll
lock
adc
mov
arpl
aam
fwait
xor
fwait
mov
add
incb
push
lods
ficomps
sbb
pop
adc
es
xor
and
inc
pmullw
jnp
adc
stos
pushf
inc
fsubs
cs
xchg
cmp
mov
and
aad
mov
test
lret
mov
scas
push
jp
les
adc
imul
pop
mov
arpl
jae
mov
js
mov
mov
ret
and
shrl
dec
push
enter
andl
out
xchg
std
jae
cmp
pop
aaa
and
mov
ret
divl
in
mov
adc
insb
mov
outsb
cltd
mov
xchg
popa
pushf
jp
test
jle
xor
daa
mov
cmp
int3
insl
call
jno
add
and
sub
sub
jbe,pn
or
jbe
mov
sub
stc
or
add
sub
xor
or
fldcw
pop
out
lahf
stos
loop
mov
aas
movsb
pop
aas
int3
fcmovbe
mov
shr
int
and
andl
sahf
scas
mov
lcall
lcall
mov
lcall
xor
pop
decl
mov
mov
jecxz
xchg
popf
mov
inc
push
sub
dec
dec
dec
dec
fcom
cmpl
xor
mov
jb
stos
xchg
jb
cmp
jl
icebp
lret
adc
jg
sub
int
adcb
lock
cld
fwait
int
int
xchg
add
aam
lods
jo
js
push
or
scas
or
xlat
scas
js
xchg
testb
jp
arpl
bound
or
fcmovbe
add
dec
sbb
cmp
cmc
fst
int
cld
xchg
push
fdivs
pop
xchg
pop
dec
repnz
loop
cmpb
sub
fwait
lods
mov
pop
popf
cli
add
mov
jbe
cmc
enter
push
dec
out
test
cmp
lods
cld
mov
dec
push
cmp
xchg
xchg
adc
or
sar
mov
mov
jmp
sbb
cmp
mov
mov
jmp
int3
sarl
ror
rcrl
xlat
call
scas
lock
js
push
js
adc
int
push
shrb
sub
lock
adc
or
jb
pusha
push
ja
lret
daa
adc
or
inc
and
mov
sub
ds
cli
pop
pop
push
jb
clc
cwtl
adc
xor
cs
xchg
idivl
cmpsb
cmpsl
mov
pop
es
aas
dec
pop
es
push
xor
dec
aas
popa
adc
into
adc
or
inc
ljmp
xchg
int3
sbb
andb
xchg
push
add
negb
outsl
mov
aas
push
ds
cmp
mov
xor
icebp
test
mov
mov
mov
push
mov
rcrl
pop
sub
xchg
xor
or
addr16
dec
lock
movsb
in
and
push
negb
mov
xchg
clc
or
dec
jmp
mov
sbb
in
imul
jle
jle
mov
arpl
je
outsl
jb
adc
add
or
idivb
not
push
push
in
dec
and
cmpsb
test
insb
sub
ficoml
lods
mov
popf
das
jp
idiv
jo
add
fmull
lds
cmpsl
dec
mov
push
jns
xchg
arpl
fwait
mov
sub
dec
xorb
pop
mov
sbb
jle
add
push
add
jg
loopne
cmc
mov
push
repz
mov
jle
xor
pop
pop
clc
sbb
incb
rorl
adc
xor
jge
imul
sarl
sbb
xchg
lea
mov
notb
jns
lret
adc
mov
das
jae
jmp
in
fdivrp
mov
loop
idiv
sbb
push
mov
mov
out
lock
divl
lret
pop
into
pop
scas
mov
or
std
loope
out
pop
push
adc
add
and
test
scas
push
jbe
add
nop
push
pusha
or
dec
enter
push
cmp
jnp
and
push
adc
xor
movsb
jecxz
inc
push
std
out
adc
flds
dec
scas
aad
ljmp
je
mov
jae
cmp
loope
daa
fs
sbb
add
fwait
push
imul
insl
bnd
sub
push
dec
pop
scas
mov
adc
ljmp
mov
mov
int
loope
pop
mov
and
jns
fsubrs
sbb
sti
jae
sbb
mov
scas
mov
inc
and
out
and
icebp
mov
es
js
mov
jbe
loop
sahf
push
sbb
mov
stc
xchg
dec
jo
je
das
hlt
add
ja
test
xchg
jb
sub
ret
js
sarb
cli
fwait
sbb
push
pop
dec
inc
dec
cmp
push
cmp
xor
lods
push
sbb
or
push
clc
push
sbb
mov
lcall
xchg
ds
jo
inc
jg
sub
adc
xchg
roll
lcall
fadds
xchg
cltd
cmpsb
rcr
xchg
insb
pop
add
rcll
add
repz
dec
mov
popf
cmp
adcb
fdivrs
icebp
or
nop
or
add
sub
enter
xchg
flds
cmp
addr16
inc
jl
push
jbe
hlt
xor
xchg
aas
fs
push
imul
fldl
rclb
out
mov
mov
fists
gs
das
int
movsl
xlat
xlat
push
inc
scas
mov
sub
adc
dec
or
mov
mov
jecxz
cmp
ljmp
pop
dec
sbb
add
subl
lret
cmp
mov
daa
loope
mov
push
movsl
int3
rcll
les
inc
add
out
cmp
out
or
lods
ret
add
push
jo
push
subb
mov
mov
ds
leave
cli
test
lods
sbb
adc
hlt
jp
or
mov
mov
inc
inc
test
xor
stc
lahf
ss
cmp
push
jl
pop
fstpl
jp
mov
cmp
roll
popf
add
bound
and
adc
xchg
in
hlt
enter
pop
and
push
xor
out
in
xchg
add
mov
loopne
cs
fldl
movsl
ss
jecxz
pop
aas
add
dec
mov
mov
mov
mov
jmp
iret
enter
fcmovnu
roll
ficoms
test
mov
js
jl
js
pushf
xor
and
dec
mov
mov
idiv
inc
es
dec
in
jg
and
je
out
inc
pusha
mov
sahf
jge
fidivl
andl
add
fimull
or
pusha
jmp
xchg
enter
adc
shrl
mov
dec
lods
add
push
sbb
sbb
test
std
pushf
add
out
fstpl
scas
mov
xchg
sub
scas
xchg
ret
add
test
sbbl
fisubrl
jmp
mov
add
sbb
sahf
mov
int
sub
negl
adc
outsb
in
mov
and
andl
mov
xchg
in
dec
out
add
mov
xchg
cmp
fildl
push
jp
push
and
pop
loopne
xor
clc
loopne
stc
lds
lock
mov
inc
mov
imul
das
jecxz
iret
cld
jge
xchg
add
xchg
scas
ja
daa
sti
and
hlt
jmp
add
mov
repnz
mov
int
and
cwtl
lods
xor
js
stos
das
mov
mov
ja
test
push
adcb
add
pop
mov
aaa
xlat
jecxz
inc
mov
stos
cmp
push
and
push
rolb
sub
xor
dec
pop
fiadds
sahf
hlt
adc
dec
cmp
and
aas
aad
adc
push
lret
out
xchg
icebp
cld
lahf
jnp
ret
and
decb
in
mov
fstl
loop
ficoml
or
std
jnp
mov
int3
leave
out
aam
test
jg
inc
mov
shlb
cmpsb
xchg
mov
jne
cmc
data16
cmp
fwait
push
mov
bound
and
gs
aas
loop
ds
pop
jo
xor
shlb
push
inc
and
nop
cltd
dec
inc
popa
cli
outsb
jle
test
dec
imul
mov
sbb
enter
imul
ja
xchg
xchg
mov
dec
xchg
out
scas
push
leave
xor
stc
push
call
popa
push
dec
popl
add
push
ss
fcoms
dec
cmp
cltd
aas
aaa
enter
xchg
ja
cmp
aas
sub
shrl
data16
xor
mov
lea
test
cmc
in
js
jo,pn
jb
lods
repnz
popf
lret
mov
mov
jae
dec
mov
xor
mov
mov
xchg
aaa
jg
sub
adc
xor
jl
repnz
push
xlat
push
or
cltd
rorl
leave
push
and
xchg
subb
orb
lock
sbb
jecxz
hlt
out
xchg
mov
and
xchg
icebp
mov
push
pop
adc
dec
push
or
mov
andb
subl
xor
fisttpll
fidivl
outsb
cs
js
dec
xchg
dec
push
in
jne
or
cmpsb
sbb
add
inc
popf
inc
inc
inc
and
adc
pop
cmovbe
enter
mov
mov
and
insl
das
jecxz
xchg
mov
sarb
orl
mov
lds
jbe
movsl
inc
scas
mov
add
aad
add
lds
dec
mov
int3
ljmp
mov
in
mov
mov
inc
icebp
push
out
dec
enter
xchg
pop
push
in
js
sbb
jb
fsub
mov
sbb
dec
add
in
fcompl
push
ffree
outsb
inc
pop
popf
ret
test
stos
mov
pushl
and
lods
int
lahf
dec
jle
or
out
in
out
pusha
add
bound
pop
andl
xor
push
test
pusha
xchg
loop
fdivl
shl
adc
stos
mov
negb
lret
jae
push
and
inc
mov
push
push
add
roll
mov
arpl
dec
cmpl
lods
stos
scas
xchg
icebp
dec
mov
pop
inc
popf
cmp
sbb
ds
int3
mov
push
jp
test
subb
mov
pop
cmp
sahf
sbb
aas
cmp
sbbb
addr16
and
jecxz
jnp
or
mov
xor
xor
imul
lret
lret
and
xchg
mov
mov
mov
jo
adc
es
addl
mov
pop
inc
pop
insl
and
js
mov
mov
mov
jmp
ror
cmp
jg
jne
fmull
into
inc
int3
mov
js
jl
js
xor
add
data16
pushf
add
and
aas
adc
push
sub
ss
push
mov
or
push
ljmp
imull
sub
xor
mov
mov
jge
enter
repnz
inc
cld
jecxz
mov
push
lea
fdivrs
rcr
movsl
jno
je
nop
repnz
mov
in
bound
push
jl
fs
out
or
cwtl
movsb
xchg
mov
imul
int3
out
xlat
repnz
hlt
jb
and
jns
pop
xchg
sub
ret
in
dec
out
sbb
cmp
cli
test
sahf
sbb
je
movsl
xchg
addr16
aas
das
addr16
loop
push
cmp
aam
outsb
loope
lods
xor
insl
xor
xor
or
repz
sub
inc
sbb
xor
inc
mov
adc
cmp
inc
mov
cmpsb
pop
out
pop
aaa
push
mov
cmpsl
imul
aam
add
fs
out
inc
xchg
mov
xchg
int
sbb
cld
arpl
in
stos
sub
mov
test
fidivrs
ret
sbb
mov
cmp
cmp
mov
pop
dec
lret
scas
sbb
insb
mov
sub
push
ds
xor
add
int
test
imul
inc
pop
jns
inc
test
mov
push
in
out
mov
aaa
mov
xchg
in
jge
out
and
out
push
pop
outsb
test
xchg
xchg
dec
bnd
push
sub
jmp
ss
bound
fisubrs
repnz
xchg
sub
mov
jecxz
lret
imul
xchg
popa
es
jno
mov
mov
jae
jl
mov
jle,pt
in
ret
dec
add
arpl
mov
stos
out
arpl
cs
nop
cmpsb
push
xchg
repnz
push
push
in
jle
cmp
cmp
inc
pop
cmp
data16
outsl
dec
xchg
add
push
add
cltd
mov
mov
jbe
pop
pushf
jo
dec
aad
adc
dec
fdivl
cmp
leave
add
mov
sbb
mov
or
xor
pushf
cs
gs
inc
insl
mov
mov
cmp
out
adc
push
and
in
insl
jp
push
imul
andb
adc
enter
mov
or
popf
mov
movq
inc
adc
bound
xlat
add
and
ret
xor
xor
xor
xchg
mov
mov
dec
pop
pop
shr
scas
mov
jne
cmp
ljmp
loop
sti
or
ljmp
pop
out
sbb
mov
outsl
std
dec
gs
push
cmp
dec
pop
or
sub
in
mov
mov
loop
and
outsb
push
sub
fwait
jmp
mov
int3
data16
push
out
push
mov
out
mov
or
add
gs
out
mov
cmp
sub
xor
sbb
in
ficomps
loopne
lcall
lret
dec
int
faddp
jl
in
sahf
lds
mov
mov
adc
xor
lahf
ds
pushf
cs
inc
pop
dec
inc
or
icebp
mov
push
add
mov
shlb
scas
xor
pop
shlb
ja
jg
mov
mov
enter
cld
dec
dec
mov
mov
adc
sbb
orl
pop
call
mov
inc
mov
pop
sub
mov
dec
fs
xor
cmpsb
lea
cmpl
cld
test
stos
mov
outsb
push
ljmp
pop
or
enter
inc
lock
addb
and
sbb
ljmp
sub
adc
scas
pop
mov
aas
adc
loop
add
lods
dec
xchg
sbb
mov
adc
add
sbb
mov
clc
popf
jp
jp
jp
in
fcmovnu
hlt
aaa
xchg
and
test
ret
xor
imul
stc
push
mov
mov
cmp
lods
jb
xchg
jp
fwait
inc
insl
mov
stos
into
scas
mov
sbb
push
pushf
xlat
pop
adc
nop
mov
sti
mov
adc
aaa
cmp
imul
or
mov
test
mov
jne
mov
xor
jmp
rcl
ds
ds
fnstcw
sbb
or
cltd
ds
js
outsb
jo
sub
sub
cld
es
addb
mov
mov
fistpll
icebp
mov
mov
sub
push
gs
roll
call
mov
and
adc
jae
mov
pusha
aad
xor
mov
mov
nop
iret
add
int
fs
lea
dec
aam
adcl
adcl
xor
add
cmc
ret
cmp
ja
cmpsb
push
pushf
push
stc
or
outsl
cmovno
imul
adc
pop
cmp
in
cltd
sarb
es
scas
clc
insb
mov
imul
xchg
jp
cmp
inc
push
push
fcoml
addr16
add
cltd
push
iret
sub
add
add
lahf
adc
cld
inc
pop
mov
pop
test
pop
fs
xor
xchg
inc
lret
pop
push
mov
sbb
and
mov
jle
add
hlt
xchg
sbb
gs
and
or
fs
jl
and
sub
mov
jno
mov
popf
fcoms
popf
and
lcall
add
and
mov
call
adc
sbb
nop
cmp
adc
shll
adc
inc
test
mov
sbb
push
mov
jbe
mov
shrb
loop
and
jns
fistps
test
sbb
jg
cmp
adc
mov
and
xchg
scas
mov
inc
jecxz
jno
std
or
pop
pop
cmp
roll
dec
stos
jbe
scas
xchg
xor
aam
sub
jle
rcrb
daa
inc
mov
std
mov
xor
adc
adc
or
sbb
int
mov
jecxz
cmpsb
ret
jbe
jge
mov
aaa
int3
mov
jl
mov
add
xor
test
mov
lcall
in
mov
shr
push
hlt
nop
xchg
and
and
xchg
mov
lret
in
cwtl
lret
or
shll
cmpsl
es
mov
mov
inc
mov
call
mov
cmpsb
addr16
xchg
fistps
mov
outsb
inc
push
xchg
push
mov
jne
mov
jne
mov
inc
push
icebp
push
adc
cmp
gs
out
cmp
push
ds
daa
dec
fcmovnu
dec
dec
xchg
and
mov
cltd
sub
fucomi
cmp
push
add
push
mov
in
negb
mov
mov
into
repz
aas
push
and
mov
loopw
imul
inc
lock
cmc
pop
adc
loop
jg
or
insb
mov
lods
pop
cmp
mov
xor
cmp
flds
rol
aad
sbb
imul
jg
or
pusha
test
pop
push
jge
mov
jl
and
jmp
divl
and
dec
dec
sbb
ljmp
call
pop
fimuls
int
sbb
mov
add
fs
sar
adcl
or
dec
adc
rorl
adc
in
hlt
fistpll
sub
enter
jae
int3
out
xchg
lods
xchg
cmpl
hlt
and
xchg
out
mov
arpl
insl
stos
adc
loope
stos
repz
mov
cmp
je
sub
imul
push
dec
mov
lds
jno
mov
xorl
lahf
xor
mov
sub
push
push
addb
mov
xor
lahf
adc
testb
inc
mov
inc
dec
inc
lods
stos
push
sub
mov
and
ljmp
xor
fwait
dec
bound
cmp
inc
repnz
dec
lahf
iret
cmp
sub
mov
xchg
add
jl
orb
pusha
scas
xorl
in
cwtl
dec
movsl
and
or
sub
xchg
popa
adc
xchg
add
sbb
pop
sahf
jb
dec
sbb
rcl
jecxz
cmp
xor
repnz
jns
lcall
sub
xor
adc
xor
pop
pop
int
mov
push
aam
jb
cmc
add
test
je
jmp
ror
rcr
rcr
rolb
enter
dec
and
inc
js
push
js
push
cmp
dec
cmp
pop
or
cmp
data16
aaa
scas
xor
pop
in
lods
pop
mov
inc
adc
mov
mov
jne
out
and
sbb
jmp
jecxz
loope
jns
int
xor
imul
loopne
pop
cmpl
les
pop
pop
mov
cmp
lock
mov
cmp
pop
push
jno
enter
aad
pop
and
and
addr16
mov
push
dec
jecxz
js
sbb
scas
pop
mov
fcoms
jns
test
scas
mov
repnz
inc
stos
decb
test
pop
xor
dec
xor
mov
movsl
push
scas
ror
scas
loopne
mov
loope
pop
iret
shrd
jp
adc
dec
mov
mov
add
or
out
xchg
jne
imul
test
or
jl
dec
inc
test
adc
enter
outsl
out
lahf
or
cmp
cltd
add
sub
mov
dec
xor
outsb
std
push
int
inc
pop
mov
addr16
mov
std
lds
imul
sti
popf
push
fdivrs
xor
xchg
cmp
loopne
mov
xchg
in
xchg
lahf
adc
sahf
push
frstor
pusha
mov
jp
negb
inc
fmuls
ss
jge
jnp
aad
mov
mul
pop
sub
sub
std
orl
repz
jecxz
adc
rep
push
ret
inc
lock
shl
aam
aas
push
stos
inc
push
or
int3
jno
pop
lods
jno
push
dec
je
imul
or
pop
lret
mov
xorb
pushf
cltd
sbb
pushf
adc
incl
scas
push
pop
nop
cmp
adc
nop
aas
add
stos
iret
stos
mov
in
ss
test
scas
xchg
xor
pushf
test
jp
lret
fs
inc
fcmovne
sub
out
jp
mov
int3
push
call
cmpsl
add
frndint
add
in
sbb
xchg
xor
push
push
and
jl
in
in
repz
fucomi
mov
push
jae
jge
aas
fisttps
out
mov
stos
pop
negl
jp
pop
imul
jp
sub
sub
dec
out
push
sti
sahf
insb
jmp
push
scas
xchg
cs
inc
ret
pushf
cmp
ret
sbb
and
xlat
xor
incb
enter
dec
clc
es
inc
incb
rorb
int
fistps
pop
jecxz
pop
push
test
add
cmp
fisubs
adc
scas
mov
arpl
jne
icebp
push
insb
lods
mov
sub
push
lahf
lret
mov
mov
aad
pusha
xor
jmp
mov
sbb
js
sub
sbb
mov
pop
cmc
xchg
push
addr16
mov
decb
std
xor
in
sarb
jb
fldcw
divb
jb
pushf
jmp
adc
mov
inc
mov
cmp
roll
cwtl
sub
cmp
push
mov
fimuls
xorl
xchg
jle
loope
mov
jl
mov
movsl
dec
lret
sbb
fdivrp
jg
cld
mov
add
inc
pop
out
mov
xchg
sbb
inc
push
lret
jnp
push
push
push
sbb
adc
inc
mov
cld
adc
clc
cmp
nop
ss
repnz
mov
jo
outsl
ljmp
imul
cli
xchg
add
or
ss
int
fiaddl
mov
pop
mov
xchg
nop
add
daa
inc
push
sub
xor
popf
dec
addl
cmp
push
pop
jnp
lret
aad
push
sub
dec
push
mov
pop
dec
jb
cmp
jge
mov
fwait
jne
hlt
scas
into
negb
stos
jl
ljmp
ret
jl
stc
mov
sub
lret
sahf
push
enter
or
shr
pop
jne,pt
outsb
jmp
adc
rorl
cmc
shlb
icebp
cmc
sbb
inc
xor
jmp
out
shll
bound
or
orl
scas
lea
adc
jb
xchg
mov
dec
xor
lahf
imul
or
jae
jae
test
jmp
into
leave
ds
xor
xchg
xor
cmp
inc
js
push
js
or
pop
xorl
negl
sub
push
mov
insb
aaa
int3
pop
and
cmp
ds
xorl
xchg
movsl
cmp
gs
cmpsl
mov
insl
fwait
lret
adc
jne
cmp
inc
mov
xchg
je
xchg
cmp
in
jge
cmpsl
add
popf
test
call
cmp
xchg
xchg
mov
je
rcll
cmp
shlb
adc
pop
xorl
adc
jb
or
lahf
mov
sar
push
loope
insb
scas
mov
jg
vmovd
cli
fildll
sub
pop
in
fmull
movb
fcoms
fsubr
sti
sub
dec
fcmovnbe
ds
mov
mov
jecxz
je
shrl
sahf
repz
ds
xchg
pop
xorl
or
in
pop
cmp
cmpsl
in
jmp
xlat
scas
call
ret
in
mov
insl
xchg
std
clc
mov
daa
aas
lods
cmc
xor
fistpl
cmpsb
mov
and
adc
out
test
mov
cmp
xchg
adc
adc
cli
xor
dec
scas
inc
lds
insl
sbb
mov
fs
outsb
mov
in
cli
test
mov
add
mov
mov
lret
jno
pop
add
xchg
mov
lds
mov
dec
inc
push
rorb
std
mov
pop
inc
repz
jmp
inc
xor
jmp
adc
test
stos
movb
cmpsb
fwait
ljmp
xchg
dec
cld
rcl
fdivrl
ljmp
add
mov
mov
mov
adc
pop
mov
jecxz
lret
add
fwait
stos
dec
je
jne
jecxz
fcom
insb
or
cwtl
mull
mov
jecxz
push
xchg
cmp
rorl
popf
jge
mov
push
pop
out
pop
pop
sub
lods
imul
cmp
add
mov
sbb
loopne
divb
in
lahf
or
fidivrl
test
not
xchg
or
and
jle
jbe
mov
loop
dec
xor
popa
xor
adc
ljmp
push
cmp
lea
push
push
mov
lret
ret
push
lcall
mov
jns
aaa
into
xchg
out
fldl
ficomps
cmpsb
mov
loope
and
xlat
cld
xlat
add
xchg
pop
and
push
dec
pop
lahf
iret
faddl
test
icebp
xor
scas
ja
pop
mov
scas
in
clc
adc
hlt
mov
ja
push
adc
sub
and
std
xchg
push
pusha
ret
mov
mov
insb
mov
push
xor
aam
adc
or
sbb
mov
inc
rorl
mov
fsubrl
fcompl
imul
lcall
repz
movsl
sub
add
lea
imul
fldt
sti
jmp
imul
cmpxchg
dec
add
sbb
pop
push
mov
cmp
xchg
into
pop
mov
insb
lods
jp
pop
and
adc
cltd
leave
sarb
xor
lock
inc
inc
push
popa
lcall
leave
nop
sbb
mov
sub
pop
xor
ss
inc
cmp
lret
ja
xchg
fs
jge
call
dec
sbb
sub
inc
jmp
sbb
fwait
sbb
sti
shrl
push
xorl
push
fisttpl
mov
adc
push
mov
cwtl
mov
jmp
gs
lret
jb
cld
ficompl
int3
add
out
xor
sbb
stc
test
inc
mov
adc
gs
or
sbb
insb
clc
add
lock
adc
jecxz
sub
les
pop
xorb
hlt
mov
ljmp
imul
sub
cmp
js
xchg
insl
js
adc
lcall
mov
mov
in
sbb
cmp
loopne
test
addr16
test
add
jne
shll
shrb
rolb
xchg
jno
xor
mov
cmp
test
push
aam
push
insl
inc
mov
stc
dec
jmp
test
mov
nop
out
cli
mov
add
push
pop
lcall
mov
push
add
sarb
rol
imul
js
push
js
jns
popf
lods
inc
stos
jg
jne
arpl
and
dec
lret
push
xchg
xor
mov
test
push
jg
and
arpl
lods
sbb
mov
jg
inc
divb
xor
jbe
imul
andl
xchg
fidivl
shl
jb
and
xor
or
mov
mov
and
mov
mov
ljmp
push
aas
mov
outsb
movb
je
test
shll
mov
insl
xor
jp
arpl
inc
dec
sub
cmp
jge
pop
enter
sbb
out
faddl
push
pop
dec
adc
jle
sub
aad
outsl
shll
lret
enter
hlt
imul
and
sbb
mov
js
cmp
in
rcll
or
aas
xchg
fadd
push
ficoms
out
mov
push
addr16
js
imul
and
mov
cmpsl
repnz
into
pop
icebp
lahf
xor
mov
fdiv
out
mov
movsl
popa
sbb
pushf
jl
ljmp
into
push
jnp
jg
scas
imulb
mov
dec
fcoml
aaa
lods
cmp
outsl
mov
sbb
ret
adc
sbb
lds
pop
vucomisd
xchg
push
adc
data16
jb
jp
out
hlt
jo
and
push
das
mov
inc
mov
adc
lds
mov
stos
pop
push
or
cwtl
fldt
cmc
ds
pop
aad
xchg
mov
inc
popa
or
lods
mov
adc
xchg
push
jp
xor
push
fwait
inc
les
mov
pop
arpl
test
xor
sbb
jbe
lods
mov
out
dec
imulb
js
jmp
push
jmp
fwait
rcl
scas
inc
gs
pushf
mov
or
lcall
pop
inc
jecxz
std
or
clc
fadds
dec
mov
repnz
cmp
xchg
repz
enter
mov
in
inc
sbb
xor
rorb
out
push
mov
nop
push
sub
and
test
push
adc
popf
leave
or
sbb
adc
fbld
je
push
mov
int
daa
rclb
hlt
inc
add
push
sbb
jmp
ds
es
lea
lds
cmpsl
mov
jmp
in
mov
sub
cwtl
cmp
jmp
xchg
sub
jo
inc
mov
in
adcl
and
mov
or
je
shl
xchg
inc
pop
into
dec
sahf
arpl
nop
mov
in
je
out
fiadds
cmp
lret
mov
or
inc
jbe
aaa
into
rcr
cltd
aaa
mov
outsb
add
shl
sbb
aam
xchg
sti
pop
cli
arpl
mov
sbb
inc
fsubr
and
push
xchg
popf
cmpb
add
sahf
mov
and
mov
pop
jmp
adc
negb
xchg
dec
dec
push
leave
cmp
jbe
shll
add
inc
pop
sbb
push
lock
sti
inc
lahf
movsl
cs
mov
mov
and
push
cmp
loope
pop
andb
sti
imul
notl
and
xchg
xor
sub
ror
dec
in
push
push
or
sub
mov
sub
jbe
jb
rcrb
in
mov
sbb
daa
leave
mov
sbb
xchg
insb
cli
sub
ret
inc
mov
cmp
rcl
mov
lods
lahf
or
or
and
xchg
push
fs
cli
adc
and
and
bound
out
push
sbb
or
cs
out
dec
ds
cmp
jnp
insb
ret
icebp
ret
ja
mov
push
ret
jmp
sbb
cmp
stos
rclb
xor
add
dec
mulb
jbe
insl
sub
cmp
movsl
add
je
sbb
aad
call
sub
sahf
lods
adc
sarb
xlat
lods
mov
sahf
or
lods
mov
mov
inc
mov
aaa
fmuls
mov
outsl
pushf
cmp
cltd
cmc
lods
inc
stos
cmp
aaa
dec
mov
jb
cmp
cmpsl
scas
mov
ljmp
add
fidivrl
adc
int3
push
jl
and
cmp
sahf
popa
mov
jne
sbb
les
mov
jmp
iret
iret
rol
rol
int
fldenv
adc
jbe
js
push
js
scas
cmp
movsl
imul
add
pop
mov
inc
jns
dec
xor
loope
ret
sbb
fsub
pop
inc
pop
or
push
jb
mov
ljmp
or
xchg
cmp
cmp
adc
aas
push
inc
js
outsb
mov
or
iret
out
js
fwait
cltd
in
loop
into
ret
jl
cwtl
dec
dec
and
mov
pop
jbe
or
xchg
mov
xor
or
loope
lcall
test
adc
xchg
xor
pusha
and
and
ljmp
loope
ret
rolb
push
and
rorl
push
cli
insl
test
mull
outsb
popf
jae
fidivl
cmc
cmp
mov
fmull
lcall
cmpsl
sbb
xchg
aad
or
stos
mov
sahf
sbb
dec
and
shll
and
inc
pop
repnz
xorb
test
sbb
inc
pop
sti
push
int3
cld
add
cmpsl
out
nop
mov
loopne
sub
lods
push
push
inc
xlat
and
lahf
push
xor
pop
mov
pop
cwtl
push
inc
mov
in
mov
idiv
jo
push
fiadds
mov
sti
fstps
cmp
adc
out
pop
aas
mov
psubusb
cld
and
add
sub
add
lcall
push
cld
and
inc
dec
dec
pop
mov
stos
addb
sub
iret
loop
and
sub
js
out
mov
push
push
sbb
out
rorb
inc
ja
pop
cmp
add
jl
sti
mov
pushf
sub
mov
sbb
mov
sbbl
inc
out
ljmp
sub
xchg
inc
inc
or
jo
repz
cmp
xor
adc
mov
lret
inc
pop
sub
ret
push
ss
cli
cmp
sub
scas
xchg
cld
jb
iret
add
sub
callw
repz
data16
cmpl
push
popa
dec
adcb
outsl
not
xor
sbb
nop
imul
sti
and
xchg
cmpsl
cmp
xchg
sub
pop
jae
es
cwtl
ficoms
mull
dec
arpl
movsl
inc
xlat
jns
push
dec
add
ret
daa
rcll
jno
xchg
rcrl
adc
out
sbb
icebp
mov
imul
mov
sahf
sbb
cmp
insl
ljmp
cmp
inc
dec
iret
lea
into
adc
mov
inc
bound
adc
mov
inc
cwtl
ror
loopne
push
out
cmp
mov
xlat
fmuls
outsb
sbb
into
push
lods
mov
cmp
xor
pop
xor
dec
mov
je
jmp
arpl
cmpsl
cmp
aaa
mov
and
ficomps
sub
outsb
push
lds
sub
scas
sub
dec
es
fisubl
push
pop
mov
dec
out
shl
dec
jle
movsl
push
push
pop
jp
pushf
xchg
pop
ret
popa
mov
pop
shl
add
pushf
mov
pop
and
or
cmc
ds
out
es
mov
mov
scas
outsb
iret
and
mov
div
loop
lahf
aaa
jno
bound
clc
test
fistpl
js
imul
mov
jp
mov
mov
movsl
push
lods
sub
rorb
push
stc
sbb
lea
cmpsl
xchg
imul
sub
inc
dec
shr
cmp
push
add
push
xchg
jecxz
pop
cmp
add
loopne
add
mov
sbb
dec
xchg
bswap
mov
xchg
ror
xchg
xor
adcb
orb
push
fisubl
iret
xorl
add
mov
ror
fs
add
fstpt
aaa
inc
add
mov
inc
sub
mov
mov
test
mov
int
adc
mov
popa
push
and
push
shrl
xor
pop
adc
inc
or
xchg
dec
in
adc
std
xchg
lods
pop
inc
imul
mov
into
cli
mov
int3
lahf
mov
fistpll
lea
in
xor
mov
int3
lret
mov
inc
mov
mov
jecxz
out
xchg
insb
aas
mov
dec
or
enter
pop
or
sbb
loope
sar
push
xchg
enter
lret
xor
pushf
pusha
test
jge
enter
inc
stc
mov
int3
out
dec
sahf
cmp
sub
stc
fistpll
or
fdiv
inc
xor
add
push
mov
add
push
mov
mov
jmp
enter
aad
enter
xchg
and
aad
pusha
push
js
push
js
add
imul
rolb
add
loop
insb
lahf
aaa
imul
iret
scas
lods
push
cli
ficomps
ja
pop
jb
in
sub
repnz
neg
xor
dec
pop
jg
jne
fadd
nop
pop
ljmp
dec
sub
cs
jae
add
sbb
bound
ja
test
adc
jbe
popf
shlb
jmp
stc
mov
fsts
jle,pn
sub
dec
cmpsb
jmp
jb
cmpsw
cld
adcl
and
mov
adc
jecxz
fwait
je
outsl
aam
mov
mov
inc
push
mov
adc
mov
dec
lret
popa
jbe
rcrl
sbb
jge
push
jbe
push
add
js
cmp
loopne
and
sbb
adc
daa
sbb
leave
lcall
stos
sbb
mov
push
jle
jnp
mov
aaa
push
xor
fimuls
popf
xchg
pop
mov
nop
pop
xor
mov
dec
pop
faddl
pop
dec
xchg
adc
insl
adc
mov
push
movsl
fs
mov
loopne
sbb
dec
pop
add
pusha
or
fldcw
loop
mov
int
icebp
ss
test
movsl
mov
sar
insb
mov
push
cmp
fdivr
dec
xchg
lea
jo
inc
cmp
test
inc
cltd
push
xor
inc
jae
repz
arpl
adcb
mov
lret
lods
insl
adc
sbb
xchg
mov
les
mov
jle
pop
dec
mov
add
fidivs
leave
pop
lods
pop
bound
add
mov
rcl
mov
int
inc
inc
in
jns
push
xchg
out
or
mov
xor
cmc
cwtl
jbe
pusha
cmp
fcmovnbe
imul
dec
push
or
in
jo
mov
pop
dec
mov
mov
cli
sub
jecxz
fiaddl
ret
call
cmp
jbe
stos
loop
inc
inc
mov
cli
adc
cli
jb
sub
push
arpl
aad
repnz
pop
mov
pop
shr
roll
shlb
xchg
pop
stos
loope
or
stc
cmpsb
push
testl
cmp
xchg
jo
dec
in
repz
pop
xchg
imul
or
cmp
scas
push
inc
fildll
aaa
stos
fidivrs
sbb
sbb
stc
xor
mov
mov
mov
out
xchg
adc
pusha
movsl
popf
inc
mov
lcall
cmp
fdivrs
jmp
lcall
fldenv
xchg
ficoml
mov
inc
aad
sub
into
call
sub
fwait
mov
in
les
sub
jge
dec
movb
mov
xchg
jnp
je
push
enter
sbb
dec
pop
repnz
pop
pop
inc
push
test
cltd
pushf
ds
imul
add
lahf
push
push
jp
sbb
and
int3
sbbb
hlt
lods
or
mov
out
lea
flds
fcoml
aas
aas
push
mov
decl
mov
lret
add
cmp
cmp
fstl
fsubs
and
aad
movsl
fidivrs
jae
pop
or
aad
hlt
jp
fildll
inc
pop
ficoml
xchg
out
int3
dec
scas
jb
lods
push
imull
and
insl
adc
xor
or
inc
insb
push
push
fldt
jae
popf
inc
sbb
test
fwait
ds
stos
dec
js
icebp
sbb
rclb
std
cmp
pop
sub
jl
cmpsl
jmp
cltd
imul
pusha
sahf
call
add
fiaddl
cwtl
jae
aad
incl
in
popa
rorb
shl
cmp
pop
mov
aas
inc
push
outsl
inc
data16
imul
and
out
pop
cmp
negl
fpatan
adc
xor
lahf
xchg
cmp
in
ja
adc
mov
aam
idivb
xchg
pushf
jbe
stos
push
mov
mov
mov
adc
test
add
cmpsb
or
pop
lret
movsl
int
shrb
lods
rol
lcall
cmpsl
out
cs
xchg
into
push
cmp
clc
mov
mov
mov
test
insb
outsl
mov
ds
jecxz
cmp
pop
repnz
lds
mov
aam
out
cmp
xlat
add
loopne
movsb
andl
mov
add
push
add
enter
rol
pop
xor
push
pop
js
push
js
loopne
dec
adc
fs
push
shrl
or
test
cmp
test
jo
mov
mov
std
lahf
sahf
scas
inc
adc
and
cmp
sbb
mov
mov
fcomps
je
adc
xchg
loop
sbbl
sub
xchg
fmuls
mov
divb
testb
pusha
sbb
xchg
mov
pusha
stos
rorl
sub
test
lods
lcall
adc
push
pop
pushf
pop
mov
rcl
push
push
sub
outsb
adcl
mov
cmp
cltd
jo
addl
test
in
xlat
push
mov
rcrl
mov
ds
insb
xor
lcall
jp
jecxz
shlb
or
inc
movsb
lret
adc
add
out
out
test
add
repnz
bound
sub
imull
nop
icebp
mov
in
xchg
into
in
xlat
xchg
xorl
adc
loope
into
rorb
xor
js
mov
sub
ja
push
pusha
cmp
lods
jmp
xor
mov
mov
insl
push
push
mov
dec
jb
jns
lock
or
sbb
mov
lods
orl
loope
xchg
dec
or
push
or
cwtl
or
mov
push
rol
xor
aam
mov
cmp
lock
out
mov
lods
lret
jo
scas
pop
mov
or
inc
fimuls
dec
shll
sub
aam
push
dec
mov
adc
pop
mov
push
popa
xchg
lcall
pop
add
mov
outsl
iret
sub
xor
shlb
jmp
fcoml
jmp
mov
or
jno
mov
add
test
sub
and
hlt
ljmp
lea
and
pop
scas
sbb
imul
push
jge
fistpll
and
push
arpl
dec
jae
mov
sub
adcl
adc
int
pop
xchg
lock
js
dec
add
mov
sub
add
data16
xchg
inc
dec
xchg
stos
adc
push
xchg
test
dec
push
lahf
ja
cltd
mov
cmp
out
out
push
mov
sbb
cltd
mov
dec
mov
repnz
mov
ret
outsl
pop
jb
add
xor
addr16
ret
out
mov
mov
leave
push
or
jge
rcrl
push
inc
mov
adcb
arpl
aaa
xor
add
fucomip
pop
jae
inc
mov
lds
in
pop
arpl
cmp
ljmp
lahf
jnp
xchg
lock
or
icebp
ljmp
stos
inc
and
push
fmull
aaa
push
scas
cmp
mov
test
cmp
repnz
loop
jge
repnz
imul
mov
mov
int
ret
gs
cli
push
cli
mov
outsl
int3
jbe
cmp
lcall
xlat
in
stos
add
xchg
push
cmpsl
adc
iret
mov
mov
cmp
mov
les
push
cmp
push
sub
sbb
pop
dec
sub
scas
dec
vpaddsb
aad
push
test
stos
sub
loop
xchg
or
xchg
data16
xchg
js
adc
cmpsl
adc
mov
gs
adc
xor
xchg
pop
push
call
jge
inc
cmp
addl
imul
mov
loop
test
enter
cmpsb
leave
xor
xchg
xchg
insb
xchg
divl
popa
sbb
push
data16
fldl
pusha
mov
aaa
inc
stos
lods
es
cmp
xor
and
inc
and
and
iret
add
lahf
mov
mov
leave
lock
sarb
cmp
pushf
xlat
lret
push
ret
in
mov
gs
mov
or
and
mov
mov
pop
or
push
out
jne
iret
xor
and
cmp
dec
jp
in
out
mov
push
xor
cmpsl
jbe
and
test
scas
enter
adc
mov
adc
mov
imul
fwait
adc
scas
jae
push
hlt
inc
fwait
scas
test
fildl
pushf
shlb
mov
jmp
int3
ds
rcl
aam
xchg
fists
pop
js
push
js
inc
add
mov
adc
scas
xchg
shlb
test
call
xchg
pop
les
lds
jmp
out
mul
xchg
scas
stos
xor
sarb
addb
jge
or
fwait
jnp
xchg
xlat
lock
sahf
dec
adc
or
andl
push
cmp
mov
jecxz
ret
fucomi
mov
shrb
mov
xchg
pop
push
in
int3
bound
pop
lea
dec
ds
push
in
shrb
inc
jo
nop
xchg
sbb
mov
or
sbb
push
mov
stos
jae
imul
push
sbb
xchg
xcrypt-cbc
cmpsl
push
lods
adc
mov
push
pop
cwtl
dec
add
and
fdivrl
push
popa
loope
cmpsl
mov
scas
push
cmp
xchg
xlat
in
inc
mov
loop
lock
in
add
popa
inc
cwtl
push
movl
and
adc
lea
pop
sbb
xchg
inc
inc
cld
movsl
xchg
in
loopne
mov
movsb
pop
stos
testb
and
push
sbb
dec
pop
mov
jle
sbbb
out
adc
cs
or
cmp
lds
lret
scas
icebp
clc
stc
ljmp
push
outsl
push
leave
hlt
adc
mov
push
cmp
rcrl
lods
int3
addl
cltd
loop
mov
inc
cmp
icebp
scas
inc
rorb
sti
movsb
push
adc
pop
bnd
dec
out
sbb
fdivrl
pop
dec
dec
mov
sub
shr
les
hlt
in
add
int3
leave
mov
jae
aaa
movsl
sub
mov
lds
cs
mov
pop
inc
in
insb
and
jno
pop
pop
push
rorb
aad
pop
pop
lods
stos
ds
testl
icebp
or
stos
mov
int
std
add
shll
sub
dec
lcall
iret
cli
dec
adc
ret
dec
mov
fcmove
xchg
and
or
sahf
and
push
insw
cmp
push
or
ret
sbb
inc
mov
aam
inc
cmc
pop
sub
dec
cmp
into
push
fbstp
inc
jp
sbb
js
fstl
sbb
adc
push
enter
ficoms
rcrl
lret
mov
fwait
cmp
and
push
bound
push
adc
test
imul
cmp
pop
mov
inc
mov
cmp
mov
jb
repnz
ljmp
aad
int
imul
into
fsts
std
sbb
popf
and
dec
adc
cmpsl
cld
pop
and
cmp
sub
nop
mov
xchg
das
shll
mov
aad
cmpsl
repz
lods
mov
push
je
pop
outsb
lcall
ret
clc
and
pop
inc
bound
sub
adc
pop
test
push
filds
outsl
lock
cmp
or
mov
mov
push
sbb
xorl
sub
mov
je
enter
sarl
sub
xchg
je
xchg
in
dec
xchg
xchg
mov
call
push
in
xor
in
test
or
fldl
push
push
dec
pop
adc
push
lret
insl
xor
ret
sbb
add
scas
sahf
jnp
xchg
insl
pop
and
push
repz
push
addr16
out
pop
aam
push
adc
stc
adc
cmp
test
add
ljmp
loop
aas
pop
mov
push
cmp
dec
xchg
gs
call
ljmp
push
adc
call
sub
andb
mov
sub
push
pop
or
xchg
jb
push
sub
sbb
pusha
cmp
adc
popa
repnz
rcll
sbbb
mov
push
pop
push
aad
daa
inc
jle
shrb
jb
orl
fcmovu
or
push
mov
aaa
rcr
loopne
pop
cmc
cltd
aam
push
xor
dec
cld
sarl
sar
lods
adcb
lea
inc
addr16
inc
adc
mov
iret
idivl
pop
jno
rolb
cmpsl
repnz
mov
lds
rorl
push
xor
int3
cmp
andb
shrb
sub
imul
add
leave
mov
ror
stos
incl
jne
jb
scas
popa
js
push
js
cmpsb
jb
add
cmp
ret
bound
divl
lcall
mov
lods
inc
das
mov
pushl
mov
daa
cmp
jnp
mov
ret
movsl
mov
push
mov
int
dec
sbb
pop
mov
cmp
mov
scas
sbb
and
mov
cmp
inc
ss
jmp
cmp
iret
xlat
and
xor
xchg
ljmp
popa
sbb
sbbb
mov
and
lcall
scas
repnz
pop
inc
xchg
repnz
lea
xchg
cld
pop
pop
mov
jae
cli
push
loop
popa
rclb
push
xchg
mov
sahf
jo
add
xor
nop
popa
or
dec
xor
xchg
cmc
nop
xor
icebp
jl
dec
out
dec
cmp
cmp
repnz
pop
loope
xor
pop
xor
out
inc
push
and
cmc
movsl
mov
add
add
pop
mov
ficoms
stos
aas
mov
mov
in
mov
mov
push
frstor
enter
and
jp
sub
jbe
sub
nop
xor
popf
arpl
pop
add
inc
jnp
cmp
inc
xor
mov
add
sub
cmp
out
cs
or
call
cmp
fcmove
out
stos
xor
xchg
pop
jp
jl
je
aad
mov
imull
mov
les
xor
icebp
mov
cmpsb
mov
fwait
xor
daa
cltd
fs
sub
out
mov
loop
push
sub
pushf
xchg
or
push
cmc
and
shr
lcall
test
les
push
pop
repnz
test
mov
lcall
iret
lods
or
mov
lcall
mov
or
iret
arpl
mov
fstpl
cltd
fs
pop
mov
mov
out
push
aad
fnstenv
insb
push
stos
add
dec
xor
sahf
in
data16
icebp
xchg
mov
lods
mov
add
lret
pop
lock
jle
or
icebp
sti
pop
xchg
jge
xor
cmp
movb
pop
leave
sbb
stos
sbb
cld
sbbb
dec
out
and
fidivrs
inc
mov
stos
jb
lea
shlb
fistl
mov
loope
dec
iret
push
pusha
test
sbb
fisubrl
inc
outsl
and
lret
loope
push
ljmp
ljmp
nop
lock
pop
inc
xchg
loopne
scas
repz
lret
push
cmp
mov
push
pop
cmp
jg
iret
xlat
in
mov
inc
sub
push
rcll
imul
jbe
movsl
lahf
cmpsl
push
movsl
jg
gs
adc
sti
cmpsb
into
aas
mov
loope
outsl
push
loopne
push
or
imul
or
adc
push
mov
xor
addl
xor
popf
cwtl
add
mov
ret
or
faddl
in
add
pop
imul
pushf
lds
jl
push
and
or
fiadds
sub
cmc
int
movsb
xchg
add
lret
leave
rcrb
fistpl
mov
push
add
ja
lods
jne
adc
pop
inc
cmpsl
out
shrb
ficoml
xchg
bound
aad
mov
scas
cmp
hlt
adc
je
mov
int3
mov
push
rclb
add
jae
xchg
repnz
repnz
xchg
pop
test
repnz
cmp
or
loop
jo
imul
test
dec
frstor
and
int3
bound
test
cmc
ja
ret
push
hlt
mov
imul
cld
movsl
mov
fadd
add
push
ja
sbb
dec
add
mov
out
mov
mull
jno
aas
out
cmp
mov
out
jbe
test
jl
push
stos
or
lcall
fdivl
imul
and
xor
pop
aam
inc
hlt
repnz
dec
sbb
lods
push
jne
arpl
data16
int
in
in
pop
jg
or
sbbb
fs
fstpt
and
pusha
cli
mov
test
xchg
push
cltd
std
jo
scas
hlt
mov
mov
ljmp
shrl
cld
jmp
lret
rcr
aad
shll
mov
cwtl
fs
push
js
insl
shlb
dec
into
mov
cld
pop
mov
scas
sub
or
pop
cmp
pop
in
fldl
aad
popf
repz
xor
mov
out
push
mov
push
xor
mov
and
xor
and
cmp
frstor
push
insl
mov
mov
and
add
stos
xchg
mov
push
sarl
dec
aad
mov
leave
in
cli
stc
shlb
inc
add
aad
enter
mov
ret
sub
cmp
scas
xlat
cmpsb
imul
inc
or
mov
sti
jno
inc
insb
adc
xor
dec
cmp
daa
push
sub
xchg
movsb
stc
xor
mov
test
mov
stos
fwait
jge
xchg
call
stos
ret
xchg
ror
or
aad
pop
cmc
lret
mov
sub
pop
cwtl
das
popa
push
pop
popf
mov
rclb
test
push
ror
dec
sub
pusha
int
jns
and
popa
enter
mov
fsubl
inc
cmp
lret
enter
sahf
lds
nop
xor
outsb
push
leave
or
icebp
and
jmp
inc
cmpsl
sub
dec
pop
int
es
mov
in
push
push
aad
cmp
xchg
jecxz
or
pop
lcall
xor
shrb
cli
cmc
jl
ret
fisttpll
add
cs
mov
cld
into
xchg
add
pop
ljmp
in
int3
lds
cmp
icebp
stos
xlat
pandn
mov
jg
ja
cmpsb
sub
adc
cwtl
dec
shll
dec
sarl
mov
icebp
mov
testl
addr16
pusha
loopne
stos
cmpl
xchg
pushf
cmp
dec
cltd
in
inc
adc
adc
fstps
jmp
push
mov
ljmp
pusha
les
mov
call
xlat
push
loop
mov
orb
mov
orl
add
inc
add
into
sbb
and
mov
cmp
xlat
lock
push
lcall
inc
out
add
rcrl
test
mov
add
mov
test
sbb
pusha
cmp
out
int
push
cmpsb
aam
sbb
adc
lock
lahf
xchg
out
movl
mov
nop
cmp
pop
jo
push
xchg
loopne
inc
or
and
sbb
nop
inc
jne
fcomps
jge
ja
ds
addr16
pop
mov
movb
mov
rcll
scas
fidivl
mov
pop
xchg
jp
push
and
in
out
dec
add
cmp
mov
xchg
shrb
xlat
push
cli
rclb
aad
repz
add
imul
inc
jecxz
inc
inc
out
out
mov
jae
push
mov
out
and
xor
gs
movsb
repnz
frstor
lds
faddp
enter
fstpl
bswap
ds
dec
pop
stc
mov
cmp
int3
lds
aas
test
push
scas
adc
and
push
cmp
cmp
roll
fsub
mov
aam
mov
dec
sbb
pop
out
aaa
mov
outsb
out
push
cld
and
ljmp
and
cld
sub
push
inc
imul
movsl
xchg
lcall
loop
pop
cmp
pop
mov
into
xor
cmp
xchg
sub
or
push
lea
xchg
ss
add
fldt
mov
push
sub
push
xor
adc
shlb
adc
xor
test
and
movsl
mov
push
lret
adc
pop
dec
or
jns
pop
mov
push
fiaddl
jmp
dec
test
adc
test
or
cwtl
cmp
jb
xor
orl
or
fs
sahf
sahf
sbb
movsb
jecxz
jle
xchg
sub
test
int3
xchg
adc
mov
jmp
aad
jg
fcomp
int3
mov
pop
mov
xchg
adc
std
sub
dec
shlb
mov
mov
call
test
in
mov
pop
push
outsl
movsl
cmp
fimull
pop
test
bound
or
cmp
ret
xchg
cmp
scas
mov
xchg
hlt
xchg
mov
add
mov
mov
mov
jmp
rol
ds
rol
stos
test
leave
pop
mov
mov
js
jl
js
push
lods
mov
pusha
cmp
gs
mov
mov
lds
mov
dec
clc
out
ds
xor
sti
setae
mov
test
leave
enter
loopne
jecxz
js
ja
loop
sbb
mov
push
inc
mov
leave
int
sbb
fst
mov
xchg
sub
inc
xchg
xor
loop
mov
imul
stos
push
lods
decl
sbb
adc
mov
jmp
xchg
jp
sbbl
andl
push
inc
lahf
cltd
xchg
dec
push
dec
fldl
mov
leave
adc
xchg
out
repnz
cmpsb
negl
cld
lea
push
push
mov
in
scas
es
inc
loop
and
inc
fnstsw
enter
push
out
pop
inc
push
sub
xor
lret
jnp
mov
jns
jno
les
shl
jae
adc
decl
xchg
icebp
mov
addr16
add
and
imul
loope
mov
cli
loopne
fnsave
movsb
push
mov
xchg
scas
in
inc
lret
aaa
push
jmp
pushf
movsb
cmpsb
xchg
cmp
adc
add
pop
stos
ret
movsl
aas
test
idiv
mov
outsl
jg
xchg
push
push
pop
jp
dec
dec
or
mov
insl
jmp
rorb
mov
das
in
push
hlt
dec
and
lret
cs
call
push
or
addr16
cmp
std
jg
jnp
subl
mov
mov
add
repz
add
xchg
pop
leave
in
cwtl
adc
adc
mov
loopne
arpl
lods
jno
lcall
push
cs
add
dec
sub
mov
jnp
jle
mov
imul
adc
daa
lea
push
rcrb
cmp
or
ret
sbb
fildll
ficompl
and
sub
movsl
lods
mov
pusha
inc
test
push
cwtl
add
mov
out
mov
mov
pop
cwtl
int3
movsb
aam
shlb
mov
test
mov
mov
adc
mov
int3
aad
repz
cltd
add
aaa
loope
add
test
adc
stc
push
mov
test
repz
icebp
outsb
fbld
nop
cmpsl
test
arpl
jo
or
xchg
sub
mov
mov
call
ja
aaa
inc
xchg
arpl
adc
dec
mov
cmc
into
lret
cmp
inc
xor
xchg
dec
add
hlt
dec
cmp
cmp
inc
dec
pop
sub
scas
xor
adc
pop
mull
imul
bound
call
orb
dec
inc
mov
aaa
jo
fstl
xchg
outsl
lret
cmp
imul
xor
into
push
pcmpeqw
fbstp
push
leave
shl
les
sti
imul
imul
jnp
jne
jne
cmp
cmp
fdivr
je
test
sbb
pop
imul
dec
int3
push
sbb
cmc
insb
sbb
push
mov
sti
mov
inc
xorl
sahf
jl
xchg
jae
pop
std
dec
sti
mov
dec
mov
lock
call
loopne
cmp
pop
in
ret
data16
jbe
movsb
pop
mov
xor
mov
xchg
sub
push
jo
sub
cmp
test
lahf
test
pop
not
jmp
frstor
pop
mul
subl
test
movsb
add
cmp
out
in
dec
lret
pop
jmp
lods
push
aaa
xchg
ljmpw
pop
mov
in
insl
adc
shr
xchg
lahf
adc
nop
loop
or
adc
mov
mov
es
cmp
hlt
in
dec
add
outsl
push
and
mov
lods
push
in
cmp
aam
ret
ss
sbb
icebp
ret
fsts
dec
push
cmp
xor
and
outsb
lret
lcall
push
dec
push
adc
pop
iret
flds
std
cli
repnz
push
push
mov
sbb
mov
jg
pop
stos
push
lret
or
movsl
in
loope
test
mov
lcall
mov
cmp
xchg
xchg
in
pop
ljmp
dec
mov
test
out
int3
and
or
je
les
das
inc
cs
dec
cld
jmp
lret
cmp
sahf
repz
hlt
jb
js
jl
js
pushf
out
daa
adc
ljmp
fdivl
sub
mov
js
or
inc
cs
cmpsb
adc
cmpl
inc
xor
sbb
imul
push
mov
jge
lea
leave
sbb
adc
adc
pop
aaa
daa
out
inc
xor
and
sbb
add
mov
fildl
push
ss
loopne
popf
lods
inc
mov
mov
and
push
js
icebp
mov
and
pop
pop
mov
jb
dec
mov
out
push
nop
push
push
pushl
add
fldt
mov
cmp
test
ds
cmp
jle
push
imul
push
lret
iret
sub
imul
in
and
dec
push
jle
dec
subb
cs
xor
sahf
mov
push
data16
fidivrl
jmp
popa
outsb
lds
test
and
xchg
imul
test
ljmp
lahf
fwait
mov
pop
mov
mov
es
adc
leave
je
pop
lret
loop
or
int
add
mov
jg
popf
notb
mov
and
jmp
scas
jae
pop
in
aas
repz
mov
cs
mov
sbb
push
sbb
aas
sahf
mov
mov
ret
fiaddl
into
xchg
inc
sbb
push
mov
lea
xchg
addr16
cld
shrl
sbb
std
cltd
pop
fldenv
xchg
xchg
aas
jp
clc
mov
test
arpl
in
das
jge
out
mov
jne
enter
mov
scas
add
daa
les
or
sub
mov
sbb
clc
mov
pop
mov
rcll
insl
xchg
push
mov
fcmovne
insl
das
push
cli
nop
cltd
xchg
push
xchg
and
mov
mov
stos
xchg
outsb
pop
daa
loopne
jle
fmuls
push
adc
std
ja
adc
mov
sbb
scas
mov
pop
and
test
scas
cmp
and
and
fiaddl
mov
jp
pushf
in
in
mov
mov
enter
pop
repnz
pop
push
inc
xor
add
and
or
mov
push
gs
test
inc
or
jns
icebp
lret
in
insb
or
mov
push
sbb
arpl
cld
ret
jns
push
data16
pop
mov
fsubl
and
xchg
pop
fimuls
sbb
imul
shll
out
sahf
mov
pop
insl
add
xchg
push
dec
mov
xchg
jbe
xchg
sub
mul
add
es
in
lea
sub
sub
rcrl
sarb
shlb
out
mov
or
into
pushl
xchg
fmulp
cmp
sbb
mov
repz
icebp
fcomi
xchg
xchg
stos
or
inc
data16
adc
loop
mov
mov
scas
sub
add
push
leave
xor
xor
jae
aaa
jnp
mull
hlt
clc
movsb
pop
movsl
pop
push
adc
jno
jnp
lahf
mov
push
add
pop
int3
ljmp
push
out
into
jb
mov
bound
or
adc
dec
js
fsubl
mov
loope
cltd
pushf
dec
adcb
arpl
xor
sbb
jmp
js
sub
cmp
outsl
ds
insb
stos
cmp
push
inc
pop
adc
out
loop
rcrl
scas
push
pop
js
and
xchg
daa
xor
mov
cmp
adc
pop
out
fbstp
mov
pop
scas
push
imul
inc
rcl
test
mov
andb
xchg
stos
scas
dec
data16
jge
dec
addr16
data16
cmpb
pushw
in
cmpl
mov
dec
add
test
sub
inc
outsl
movsl
mov
pop
sub
cmp
negb
loop
mov
cmp
idivl
jne
loope
sbb
mov
subb
pushf
js
test
int
loope
push
mov
lahf
icebp
sbb
sbb
das
sbb
inc
jo
xchg
mov
psllw
jb
fdivl
jo
movsl
out
aaa
movsl
xchg
test
imul
fs
sbbb
inc
xchg
add
inc
ljmp
sub
mov
lea
incb
inc
jmp
ret
cmp
fcmovne
out
cld
mov
mov
jne
js
jl
js
dec
dec
cmpsl
dec
lret
push
pop
mov
mov
pop
mov
lds
or
out
dec
dec
ret
push
adc
dec
cld
push
jb
add
lods
adcb
cs
mov
push
bound
or
insb
jg
sub
mov
lea
in
and
sbbl
test
add
aas
cwtl
fistps
outsl
daa
inc
cmp
xchg
je
xor
dec
movsl
lcall
pusha
int3
cmp
or
jb
or
popa
push
fisubs
mov
xor
mov
cmp
int
std
fdiv
les
leave
mov
push
fsubp
xchg
rcr
call
mov
mov
mov
add
xchg
ds
dec
and
sub
jp
dec
xor
mov
into
nop
cmp
fidivrl
pop
cmpsb
ja
adc
dec
idivb
dec
aas
call
setno
xchg
inc
jmp
mov
and
jnp
xchg
lock
jno
mov
clc
mov
adc
push
test
sbb
cmp
in
leave
sbb
mov
ss
xchg
mov
icebp
adc
pop
xchg
cld
sub
lods
dec
jmp
out
mov
stos
out
clc
setae
mov
xchg
mov
daa
ds
addr16
pop
sbb
push
arpl
ds
push
cmpsb
dec
mov
in
nop
cmpsb
xor
sub
pop
xlat
int
xchg
movsb
dec
push
adc
cwtl
fld
sbb
sbb
cmc
ja
pop
int3
pop
gs
xor
aam
les
pop
xchg
popf
nop
gs
out
adc
fs
xchg
outsl
js
push
push
dec
mov
mov
or
jnp
sbb
mov
ret
adc
insl
lods
cmp
dec
mov
and
mov
jne
iret
mov
idivl
xor
rol
aas
jno
adc
cld
pop
xchg
in
fcompl
xor
daa
mov
movsl
idivb
out
rcrb
sar
les
push
mov
insl
or
cltd
and
clc
ja
dec
ds
daa
jecxz
and
fdivs
sub
cmp
and
out
mov
enter
repz
or
repnz
pop
popf
mov
scas
orb
pop
aaa
cmp
add
push
bound
adc
add
aas
icebp
pusha
and
into
xchg
jmp
push
aaa
jns
addr16
out
aas
pushf
test
pop
or
bound
repnz
hlt
sbb
or
mov
lahf
xor
inc
ret
addr16
and
imul
mov
mov
into
jns
push
sti
jge
fnstenv
mull
frstor
cmp
ret
pusha
lock
xor
lret
jg
shlb
mov
push
inc
lret
mov
mov
cli
sub
test
addr16
pop
fiadds
lds
xchg
ror
cld
mov
mov
jecxz
and
xor
dec
out
mov
mov
inc
push
sbb
fpatan
stos
hlt
cld
scas
mov
testb
xor
fiadds
pavgb
inc
add
mov
dec
dec
sbb
add
lds
pop
sub
lahf
lods
xlat
in
sbbl
imul
mov
test
mov
cmovle
pop
les
mov
out
or
mov
insb
aas
and
sbb
fwait
into
xchg
xchg
inc
xor
sub
push
xchg
adc
mov
subb
adc
pop
lds
mov
out
scas
sbb
ljmp
and
jno
push
lea
sub
xor
mov
mov
jecxz
push
inc
call
pop
movsl
sti
in
ficoml
pushw
sti
push
fisubl
ret
and
lock
addr16
js
btc
orl
push
cmp
sbb
enter
push
jno
lods
inc
push
pop
out
scas
stc
or
lock
lcall
jbe
mull
xor
inc
jl
jb
stos
cwtl
jns
pop
jp
jecxz
bound
aaa
push
pop
dec
jmp
rcl
int
xlat
aad
sahf
mov
sub
js
js
jl
js
and
xchg
mov
pop
cmp
out
cmp
repnz
cli
mov
out
je
sahf
loope
and
mov
mov
cmc
inc
rcrb
xchg
cmp
jne
sarb
push
jge
pop
pop
or
xchg
and
xchg
arpl
hlt
inc
jge
pop
xchg
mov
mov
popa
ja
pop
orl
cwtl
nop
and
jecxz
das
xor
or
loope
sahf
xchg
or
xor
push
fiadds
add
pop
test
mov
daa
sbb
push
std
out
or
lahf
adc
sarl
mov
mov
out
sbb
out
xlat
push
lods
push
mov
sub
cld
add
shrl
out
mov
sub
loop
dec
pop
jno
ret
mov
push
cwtl
sub
mov
daa
inc
dec
subb
xchg
aas
jmp
xchg
xchg
insl
dec
mov
es
add
mov
mov
fadds
add
xchg
pusha
mov
aam
cmc
decl
outsl
aas
mov
call
pop
pop
xlat
sahf
out
xor
dec
inc
leave
scas
mov
sub
pop
and
cmc
hlt
xor
dec
mov
int3
cmp
and
adc
in
lcall
mov
sub
push
xchg
sbb
clc
call
inc
adc
jmp
leave
dec
sahf
jmp
sub
ss
fimuls
int
sub
je
repnz
decl
fnstcw
out
xor
sbb
xorb
push
fldcw
mov
sbb
jmp
test
loop
inc
shr
push
inc
sahf
inc
mov
testb
ror
scas
sarb
jmp
push
ret
add
or
loope
fwait
cmp
insb
daa
dec
ds
testl
scas
mov
mov
sbb
fiadds
cld
fdivrs
add
mov
adc
jge
add
jmp
cmp
out
mov
xchg
adc
add
lret
dec
gs
mov
or
mov
mov
xchg
xor
jmp
mov
adc
scas
mov
sub
int
and
out
not
xchg
out
fsubp
pop
cmpsb
jae
dec
pop
into
ss
ljmp
lods
dec
roll
mov
xor
inc
je
mov
xlat
into
sub
lods
xchg
mov
pop
adc
js
xlat
das
lea
push
mov
sbbl
sbb
push
inc
mov
dec
sub
hlt
nop
js
clc
mov
xor
ret
lcall
sub
mov
stos
mov
adc
call
scas
data16
jecxz
mov
ffree
dec
jne
fisttpl
fcompl
leave
fdivs
lret
or
sbb
into
adc
and
and
aaa
cmpsb
cli
cmpsl
mov
adc
les
or
jbe
push
and
stc
xchg
repz
aas
sbbl
je
lds
xor
dec
adc
movsb
pop
sti
clc
mov
adc
mov
rclb
sbb
fstl
cs
push
pop
je
std
cmpsb
mov
push
add
cmp
pop
push
scas
lods
xchg
adc
je
mov
mov
lods
aam
jl
xor
mov
xchg
jmp
insb
scas
xlat
mov
imul
xchg
jge
pop
push
jns
outsl
fbld
adc
test
rcl
xchg
jno
imul
or
push
push
sti
xchg
xchg
leave
jg
rcll
ds
pop
add
add
call
lds
in
lds
test
pop
mov
sbb
push
adc
sarl
lods
xchg
adc
movsl
jle
lods
push
out
iret
jecxz
cmpsl
jp
shrb
decl
pop
push
pushf
xchg
daa
adc
xor
xor
lret
lret
test
mov
out
out
cmp
orl
jbe
imul
ret
jecxz
std
popa
jmp
les
add
dec
addl
popa
enter
inc
xor
jno
mov
or
cmpsl
xchg
mov
clc
les
lds
sarl
or
xchg
ds
xor
sbbb
mov
lock
xchg
popa
or
shr
push
add
mov
cmc
add
inc
xor
js
jl
js
jmp
jecxz
movsl
scas
xlat
in
add
fwait
pop
ret
pop
in
repz
lcall
xor
dec
sti
xlat
pop
dec
or
jno
inc
pop
mov
stos
or
js
inc
or
mov
das
xchg
outsb
addr16
push
lcall
lods
pop
mov
stc
cltd
aam
jns
in
xor
pop
cmp
rcrb
xchg
mov
fistl
loope
push
cltd
fs
or
je
lods
pop
jg
aaa
push
sbb
mov
out
xor
cltd
fiadds
xchg
xor
repnz
xchg
xchg
insl
mov
punpckldq
ret
mov
call
adc
insl
data16
arpl
outsb
sbb
and
mov
jg
imul
rcrl
inc
mov
pmullw
xchg
in
push
decb
mov
and
adc
aam
ret
cmpsb
push
mov
sbb
add
and
mov
enter
pop
ds
cmp
test
dec
ds
jbe
cmp
sbb
icebp
push
mov
repz
popa
movsb
cmp
cmp
jb
test
xchg
ret
adc
adc
xlat
addb
sti
ljmp
icebp
pusha
sbb
pop
das
xor
movsb
mov
xchg
lcall
mov
mov
adc
jge
test
or
iret
sti
movd
imul
or
mov
mov
jae
or
insb
int3
int3
or
mov
aad
scas
mov
test
daa
aad
jle
sbb
lahf
add
sahf
adc
nop
sub
pop
imul
js
call
mov
int3
cmp
jle
jl
outsb
xor
adcb
push
jge
adc
add
cmp
adc
stos
lods
in
lret
ret
les
adc
out
sarb
pusha
push
add
push
cmp
push
sbb
mov
arpl
push
out
in
or
sub
arpl
fs
leave
in
inc
out
pop
ret
or
push
call
mov
push
lcall
jmp
loopne
xor
aas
popa
push
mov
mov
push
fadds
rcl
cmp
out
mov
inc
sub
xor
push
ja
mov
js
mov
add
int
jmp
or
adc
inc
jae
out
inc
jae
fsubs
sub
ljmp
inc
popf
and
dec
dec
sub
cmp
mov
jl
inc
cmp
aam
orl
nopl
aas
jmp
mov
jmp
test
or
insb
fildll
pop
mov
ss
sbb
add
dec
lea
push
je
and
pop
or
das
ret
pop
aaa
jg
sbbl
pushf
loop
fdivr
xchg
mov
mov
inc
adc
xor
and
sub
adc
jae
push
loopne
out
loope
aad
jl
add
mov
fisttpll
ret
mov
enter
in
inc
lds
cmp
pop
sti
push
xor
repnz
dec
mov
xchg
jp
in
pop
push
iret
imul
inc
jge
xchg
sub
adc
mov
adc
push
je
stos
mov
mov
and
jle
dec
aam
xchg
ds
insb
inc
adc
mov
aad
out
pop
inc
xor
pop
jne
filds
mov
push
xorl
test
adc
aam
enter
mov
sbb
xchg
fstps
mov
jae
push
xor
mov
sahf
ss
jae
cltd
cld
sub
shlb
or
mov
rcll
sub
and
leave
inc
dec
insb
lds
adcb
add
mov
daa
adc
add
cwtl
xor
sub
aad
push
shlb
push
arpl
push
add
rcrb
movsb
out
mov
cmpsl
and
mov
adc
dec
sub
push
cs
testl
fmuls
sbb
int
popa
lahf
fsubr
aam
jecxz
cmpsl
js
push
aad
scas
xchg
xchg
inc
xchg
dec
popa
ja
push
jno
divl
divl
pop
fwait
stos
lock
or
aaa
cs
pop
clc
insl
mov
sbb
mov
das
into
aam
cmpsl
les
scas
pusha
decb
jmp
sarb
ret
rcl
mov
or
sub
jg
push
js
dec
mov
dec
jle
inc
or
in
std
add
rcrb
shlb
xchg
xor
xchg
js
xor
filds
test
pop
add
xchg
push
in
jb
sbbb
andb
out
adc
aaa
xlat
push
push
ss
inc
ret
sbb
repz
les
sbb
jl
mov
hlt
call
pop
loop
sbb
or
xchg
cld
lret
pop
lcall
dec
xchg
push
mov
insb
xlat
sub
sar
sbb
cmp
push
push
pop
movsb
push
and
repz
imul
xlat
push
or
mov
push
gs
push
inc
jle
outsb
mov
inc
sub
mov
jge
mov
pop
xor
int
jnp
mov
push
aad
imul
cwtl
mov
addr16
repz
test
inc
or
pop
sbb
pop
lods
mov
push
addr16
mov
imul
pop
das
hlt
jns
mov
sub
xchg
lds
cld
dec
stc
inc
cmp
loope
enter
repnz
xchg
aad
outsb
xchg
aad
jno
in
stos
mov
hlt
jno
xchg
popa
rcl
orb
loope
mov
lods
ss
movsb
bound
pop
inc
icebp
out
and
jb
mov
xchg
stc
iret
cmc
cs
stos
adc
fs
jb
pop
cmc
add
cmp
xchg
in
fcmovnu
lods
fnstenv
daa
xchg
or
leave
push
mov
dec
inc
data16
lret
cwtl
adc
divb
or
pop
push
cli
fucomi
jns
ficompl
enter
sub
fmulp
push
aad
iret
xchg
addr16
push
inc
sbb
push
adc
loop
xchg
adc
xchg
loop
mov
fs
sbb
push
pop
jl
mov
push
jle
mov
jne
and
and
repnz
add
mov
lret
stos
imul
mov
adc
lds
pop
xchg
lret
push
subl
mov
dec
inc
repz
mov
mov
dec
incl
or
and
clc
fldt
cs
ret
out
fdivs
loope
xchg
xchg
cmp
jb
addr16
add
out
sbb
mov
ja
lea
scas
imul
ficompl
add
lods
jge
cmp
shll
lods
xchg
dec
std
jle
cmp
pop
xchg
aam
xor
xor
xchg
adc
mov
xchg
repz
inc
nop
in
or
ret
xlat
cld
stos
xlat
cmp
inc
pop
mov
cmp
icebp
fs
ss
aad
out
jl
popa
mov
rorl
adc
pusha
xor
jne
jl
pop
lea
sbb
xor
int
scas
mov
sub
fs
mul
mov
fnstenv
stos
xor
sahf
sar
mov
pop
cmp
enter
add
cld
cmp
pop
aam
gs
pusha
ja
mov
pop
movsb
sub
test
sub
mov
test
xor
out
inc
and
out
mov
push
push
orb
scas
push
mov
in
ljmp
shrl
cmp
mov
mov
jg
mov
xor
push
sbb
sbb
jae
push
fisubl
insl
sbb
in
xor
push
aaa
mov
mov
mov
mov
sbb
pop
cmp
ror
pushf
push
cmp
inc
mov
lods
mov
lahf
inc
leave
leave
push
movl
test
fs
push
inc
pop
dec
mov
imul
mov
loope
xor
insl
sbb
aaa
adc
arpl
push
int
outsb
and
loop
dec
out
test
dec
add
jb
popl
lret
and
into
sub
lret
pusha
mov
mov
stc
and
or
push
fldcw
xor
adc
mov
jb
jle
cmp
and
lods
cmc
subb
pop
sbb
arpl
jecxz
add
xchg
sub
xor
push
in
arpl
mov
paddusb
iret
mov
push
xor
enter
jae
rclb
cli
mov
sbb
and
adc
sub
sub
mov
jns
int3
push
mov
xchg
add
movsl
js
leave
inc
fwait
addr16
adc
into
mov
mov
pushl
jmp
ror
fcmovbe
rcr
mov
popf
xchg
push
or
push
js
jo
rcrl
popf
mov
hlt
jp
adc
divl
mov
test
movsb
lcall
cmpsl
add
shll
lret
dec
imulb
pop
jle
movsl
mov
stos
xor
cmc
rclb
and
xchg
sbb
imul
fmul
jle
xor
loop
inc
cltd
adc
adc
cs
pop
and
mov
aaa
mov
shrl
ss
adc
xchg
cmp
mov
clc
jecxz
dec
mov
movsb
cmp
lods
out
mov
call
cmp
rorb
lods
aas
pop
inc
addr16
sbb
xchg
ss
sub
jae
pop
lahf
dec
outsb
xor
pop
mov
inc
push
nop
fldl
shll
xor
mov
subl
out
or
fimuls
inc
push
dec
cmp
lret
push
ja
ficompl
inc
shll
jbe
cmp
nop
int
testb
inc
sub
aam
enter
das
mov
arpl
push
pop
sub
push
dec
hlt
cmp
test
jl
addr16
pusha
xchg
dec
or
and
cmc
add
add
adc
sub
cmc
xor
cmp
into
outsb
cmp
sub
jbe
cmc
xor
push
jp
in
mov
mov
inc
mov
or
test
xchg
pop
js
dec
dec
movsb
xor
aas
inc
jb
pop
ror
and
sbb
daa
push
sahf
rcr
lea
or
int3
xchg
js
pusha
paddsb
xor
ret
pop
mov
mov
inc
inc
imul
js
or
pop
lcall
jae
or
jl
push
rol
dec
ljmp
inc
mov
shll
inc
iret
add
enter
shll
insl
xchg
and
insb
ret
xlat
sbb
push
loope
pop
mov
push
jge
imul
shlb
loope
stos
mov
push
rcrl
sahf
rorl
mulb
add
push
arpl
xchg
push
mov
sbb
lods
push
mov
xchg
jl
aam
ljmp
jp
jno
push
out
imul
sub
test
cltd
push
int
pop
mov
inc
adc
inc
rcrb
mov
mov
lret
jmp
sahf
inc
cmp
jno
dec
push
add
sub
dec
std
inc
lret
inc
scas
ret
jo
sub
adc
insl
loopne
arpl
in
je
mov
or
adc
xlat
std
pop
pslld
lcall
dec
stos
inc
and
test
jl
inc
outsb
and
adc
pusha
cltd
sbb
cmp
in
dec
je
imul
jecxz
pop
mov
cmp
and
or
or
out
fwait
mov
enter
add
xchg
dec
dec
decl
lods
loopne
lods
je
xchg
je
lret
xchg
adc
leave
outsl
or
xor
add
jbe
jne
fistps
enter
mov
add
outsl
icebp
popa
nop
dec
fnstcw
mov
pop
inc
xchg
ds
fdivrl
adc
pop
mov
mov
dec
inc
scas
je
xor
out
mov
div
jbe
inc
mov
adc
jge
jo
jmp
lahf
sub
sbb
jg
cmp
sub
sbb
add
xchg
xchg
cmp
test
xor
inc
call
adc
icebp
or
cmp
mov
iret
test
stos
call
in
test
sbb
pop
cmp
scas
dec
push
out
pushf
jbe
mov
cmpsl
cmp
es
xchg
jle
xor
and
xor
sub
mov
mov
pop
xor
je
stos
iret
pop
push
cmp
cmp
xor
loopne
mov
mov
sbb
daa
das
int
data16
call
stc
loop
repnz
nop
ds
dec
jo
jge
loop
fcmovne
andl
sub
jnp
imul
dec
sub
push
push
popa
push
xlat
adcb
mov
or
sbb
enter
xchg
jl
mov
ret
xor
sub
movsl
add
out
jl
outsb
in
jo
out
adc
sahf
imul
add
push
add
vpmullw
xlat
jne
fs
mov
or
js
jl
js
add
pop
cmc
sbb
jno
into
pop
inc
dec
xorb
push
lock
test
inc
push
sbbb
sub
pinsrw
jp
insb
sarl
aad
dec
add
cld
test
fisttps
repz
xchg
xor
test
xchg
mov
aas
sub
jno
lret
dec
pop
or
add
lcall
pop
pop
or
sbbl
lds
enter
cld
xor
in
dec
rolb
lcall
jne
mov
movb
in
xor
inc
inc
mov
jmp
xlat
xchg
and
loop
adc
mov
dec
nop
mov
loope
mov
jmp
test
imul
fistl
ljmp
push
pop
nop
pop
mov
dec
sbbb
mov
mov
cmp
dec
data16
test
pop
push
xor
shlb
cmpsl
fwait
cmpsb
int
jp
pusha
clc
push
sub
ss
mov
aad
jnp
add
testb
push
cmpsl
adcl
lret
jnp
adc
and
popa
mov
rorb
jbe
jo
adc
outsl
adc
adc
lds
out
test
fcmovnu
pushf
sbb
icebp
loope
ret
mov
pop
sarl
xor
or
cmc
mov
xchg
xchg
inc
adc
or
or
xchg
sub
jmp
push
mov
dec
sbb
mov
or
jnp
push
lcall
mov
or
cwtl
xchg
shlb
nopl
lock
out
and
sub
pop
insb
mov
shlb
and
mov
dec
addr16
fistpll
push
shll
fwait
add
dec
clc
xchg
in
shl
fprem1
testl
repz
push
sub
pop
sub
cmpsb
mov
push
call
xor
pop
dec
sbb
into
adc
push
jae
mov
and
rcrl
stc
ret
xor
das
lock
idivb
daa
inc
dec
inc
sarb
cmp
in
cmc
add
push
insb
pop
call
sbb
pop
stc
push
orb
inc
cmc
cmp
hlt
xchg
shl
push
cmp
repz
es
test
std
daa
js
pop
es
ret
imul
or
mov
push
or
jg,pn
mov
mov
ss
jg
into
pop
push
rol
pop
jle
push
pop
push
sub
xchg
jo
or
sub
or
dec
xchg
jno
xor
xchg
cld
stc
popf
cld
jp
and
shlb
mov
jl
xor
lock
int3
lods
xchg
mov
shll
ror
cmpsl
jmp
cltd
popf
in
jnp
cltd
and
repnz
mov
pop
mov
loope
jp
push
rorl
dec
rorl
ljmp
xchg
dec
cmp
je
dec
pop
and
jb
je
adc
sbb
imul
or
stos
sbb
lods
into
pop
xorb
dec
enter
ret
shll
clc
inc
orl
jmp
jns
adc
call
incl
mov
fbld
mov
xlat
es
mov
test
repz
pop
jmp
out
sub
jb
andb
or
add
and
in
adc
sbb
mov
hlt
mov
jno
adc
push
and
dec
icebp
sbb
mov
jge
lock
sbb
loopne
icebp
adc
and
sarl
xchg
nop
out
lret
cmc
test
push
insb
add
xor
aad
mov
inc
popf
xchg
inc
xor
cmp
mov
fwait
adc
lret
ret
xchg
push
nop
div
jnp
sbb
int
cli
mov
mov
incb
and
test
rcl
adc
adc
lods
rorb
and
dec
lods
cmp
mov
or
das
pop
mov
ds
ret
jno
xchg
mov
jl
les
les
repz
imul
xchg
push
icebp
pop
adc
int
popf
mov
fcomps
push
inc
xchg
shll
pop
cmp
mov
out
ss
test
mov
mov
mov
lock
adc
mov
xor
add
xor
push
add
rol
rcl
fcmovnb
mov
inc
shrb
push
inc
addr16
jg
push
js
rcl
adc
test
xor
pop
repz
pop
lea
out
push
lcall
arpl
bound
xchg
sbb
iret
stc
add
push
les
pop
iret
mov
cmp
test
sarl
xchg
in
sub
mov
test
cwtl
fstpt
cmc
cs
leave
jg
adc
jmp
xchg
dec
int3
adc
adc
mov
push
ja
ret
dec
jg
mov
pop
sbb
xor
hlt
mov
ret
mov
movsb
sub
mov
aam
sahf
popf
add
pop
inc
sub
and
test
mov
fs
mov
lock
stos
push
sub
pop
in
mov
sbb
jmp
inc
icebp
xchg
sub
cli
jmp
out
insl
mov
arpl
xor
mov
inc
or
jae
cmpsb
mov
fdivrs
push
scas
into
adc
mov
add
jb
hlt
xor
in
and
jne
jmp
nop
movsb
mov
fxch
add
sub
stos
cwtl
rorl
pop
add
pushf
cli
jnp
dec
in
jnp
mov
inc
aas
insb
cs
adc
push
jg
pop
ret
repnz
adc
out
movsl
sbb
negl
pushf
testl
into
sbb
out
lret
dec
mov
add
or
les
int3
jecxz
hlt
push
sahf
pop
mov
outsl
mov
push
add
sub
adc
push
bound
mov
jecxz
out
adc
pushf
sbb
xor
push
cmpb
sbb
mov
adc
out
sub
ret
les
push
lea
inc
adc
movl
out
test
cmpsb
sub
shlb
mov
mov
imul
sti
pop
jne
pop
pop
inc
adc
mov
mov
cmpsb
ja
in
aad
xor
test
popf
sti
repz
insb
sahf
nop
add
ss
dec
inc
out
jae
sahf
pop
sub
gs
xor
das
lcall
push
fstl
sarb
pusha
xchg
dec
rcrb
mov
ljmp
leave
xor
push
push
sbb
test
stc
dec
aam
clc
ret
test
into
push
push
pop
cld
insb
lcall
xchg
cmc
into
mov
jl
sbb
xor
cmp
popa
pop
movsl
out
mov
xor
mov
and
xor
push
cmp
adc
arpl
pop
jbe
xchg
xchg
pop
cmp
test
xchg
cmpl
pushf
xchg
ja
pop
mov
adc
jns
outsb
lahf
fistps
call
loope
jg
nop
popf
jae
mov
inc
add
les
les
sbb
xchg
xchg
in
push
dec
nop
ret
mov
and
mov
dec
sub
cmp
cmp
sub
mov
jb
sbb
dec
sbb
adc
xor
icebp
out
cwtl
push
mov
dec
adc
mov
sbb
mov
insl
dec
add
sbb
roll
push
test
push
rcll
loopne
sbb
fnstsw
push
inc
int
adc
sub
jns
mov
hlt
imul
shrl
mov
imul
or
adc
jp
jnp
xchg
int
stc
xorl
mov
dec
stos
push
hlt
push
inc
inc
jo
icebp
jns
sub
insb
sbb
insb
cmp
movsl
mulb
push
fs
fmull
mov
cltd
lods
pop
or
mov
clc
mov
popa
pop
sahf
cltd
dec
loopne
sbb
jp
cmp
adc
push
jp
mov
fwait
imul
mov
cltd
push
int
cmp
adc
or
jbe
mov
clc
mov
int3
xor
dec
sub
mov
xlat
push
dec
xlat
shrb
sub
in
fnstcw
inc
adc
jl
fstps
rorb
push
mov
movsl
stos
ret
or
jl
xchg
inc
or
orb
mov
jne
sbb
scas
in
mov
aaa
fcompl
jge
ret
cmp
movsl
inc
inc
test
js
jp
scas
and
lds
loop
lret
mov
scas
aas
dec
iret
sub
add
fwait
dec
add
mov
mov
mov
pop
jecxz
pop
cwtl
dec
mull
or
mov
pop
pop
jo
cwtl
or
fwait
pop
scas
loope
lods
in
inc
orl
ret
add
jmp
aas
aas
or
ja
jns
sbb
push
js
movsl
push
mov
push
inc
jns
call
adc
sbb
scas
pop
sbbb
rcl
addb
mul
cli
sbb
leave
ret
lret
mull
xchg
cli
test
jo
shrl
sub
push
mov
popa
leave
es
out
mov
or
xchg
lea
inc
or
ss
test
pop
mov
scas
jns
cld
js
loopne
mov
mov
add
mov
ss
mov
jle
cmp
ret
hlt
pop
out
push
hlt
sbb
aam
mull
movsl
sti
dec
adc
sbb
mov
cmc
xchg
mov
push
je
decb
ret
mov
cmpsl
fisubl
enter
cli
xchg
inc
jne
shrl
mov
mov
cmpb
mov
outsb
add
ret
jno
inc
nop
add
lods
clc
push
std
ror
fnstenv
idivb
xorb
mov
divb
enter
mov
hlt
ret
add
mov
push
filds
cmp
addb
sbb
fnstenv
xchg
aaa
imul
loopne
das
pop
or
jmp
mov
mov
fiaddl
dec
pop
push
sbb
inc
cs
lahf
xlat
xchg
pop
xchg
sbb
add
inc
insl
ret
aas
dec
movsl
dec
leave
sbb
je
and
lretw
jle
loopne
test
ljmp
imul
ljmp
arpl
adc
fisttpl
jl
and
shll
pop
push
test
sbbl
and
cmpsl
ss
mov
dec
out
nop
sub
hlt
js
fdivrs
ficoms
imul
in
jecxz
sub
ds
lock
xor
push
lcall
pop
add
adc
mov
mov
pop
jns
push
rcl
pop
pushf
jmp
cmp
cmpsl
adc
or
scas
int
cs
push
into
mov
push
adc
xlat
hlt
int3
loope
pushf
mov
lcall
mov
movsb
mov
lcall
sub
enter
sbb
cs
mov
pop
mov
sub
push
in
sbb
or
cli
mov
xor
pop
arpl
xchg
jb
call
or
jmp
lock
in
jmp
cmp
jp
ds
mov
gs
jbe
cs
xchg
cli
push
fadds
mov
add
loopne
pop
test
fs
mov
addr16
add
std
dec
add
cmp
adc
daa
mov
mov
cmpsl
das
fildl
dec
jmp
adc
xor
popa
dec
jmp
int3
xlat
mov
out
aam
out
shrl
mov
mov
enter
dec
adc
lcall
push
repnz
cmpsb
stc
jle
sbb
mov
jmp
lds
xchg
pop
mov
daa
in
ljmp
pop
aad
loopne
out
xchg
fcomps
push
test
mov
pop
sbb
xchg
stc
dec
repz
aas
sub
outsb
mov
jbe
mul
inc
sbb
repnz
iret
icebp
fdivrl
fwait
mov
imul
mov
imul
popf
stc
int3
leave
nop
bound
mov
into
dec
nop
pop
cmpsl
ret
mov
push
cli
cli
pop
pop
push
pushf
aaa
sub
cwtl
xor
mov
cmp
jns
int3
stos
mov
xor
stos
fisubl
gs
jb
jno
jge,pt
ss
lea
fldcw
movsb
jmp
stos
das
and
les
std
jnp
scas
xor
sbb
and
mov
jl
mov
cmpsb
or
pop
and
sbb
aaa
pop
popa
sarb
insb
test
adc
mov
sbb
push
dec
call
add
and
cmp
mov
xor
xchg
aas
xchg
fcoml
jle
pop
mov
xchg
jle
out
or
mov
push
sbb
testb
les
jge
and
lods
insl
jne
dec
pop
test
and
sbbb
aad
sbb
jo
mov
push
out
loope
les
daa
add
divl
ja
push
data16
adc
push
fwait
xchg
lea
pushf
push
insb
and
fildl
movsl
in
stos
push
or
push
inc
cld
xor
outsb
pop
mov
inc
cmpsb
aam
repnz
jae
test
sti
mov
rclb
loopne
aaa
stc
std
and
pushl
lea
pushl
jmp
les
fidivrl
enter
push
push
jg
push
js
fidivrs
mov
dec
cs
jne
in
dec
mov
in
jmp
lods
sbb
lcall
dec
inc
xchg
cmp
int
adc
xchg
daa
scas
cmp
sbb
shll
cld
insl
dec
out
lret
je
jmp
mov
push
out
ss
cli
sbb
push
repnz
mov
ljmp
xor
mov
dec
push
pop
fxch
inc
pop
inc
unpckhps
xchg
aaa
lock
dec
sti
mov
xchg
subb
lods
push
lods
pop
adc
jl
orl
xchg
mov
fnstenv
push
dec
sbb
mov
rorb
add
aas
mov
fisubs
ljmp
sbb
stos
lcall
and
push
and
lcall
test
mov
add
pop
stc
dec
cld
and
je
cs
jbe
imul
dec
imul
inc
push
stc
dec
into
cmp
rolb
cld
gs
ss
loopne
mov
adc
push
into
dec
cmpl
cmp
inc
cmp
nop
enter
out
imul
inc
dec
mov
stos
leave
lods
scas
push
mov
shlb
bound
cmpl
dec
and
pushf
add
scas
mov
fisttpl
mov
xchg
mov
push
sahf
cwtl
add
adc
mov
cltd
or
shlb
cmp
sub
in
sbb
or
sub
cmp
adc
fsubl
xchg
inc
xchg
push
mov
push
cmp
jnp
mov
cmp
lods
das
into
loope
mov
scas
xchg
fbld
fs
insl
aaa
xchg
mov
pop
daa
cmpsl
or
ffreep
cmp
jl
into
js
out
jb
clc
outsl
aas
sahf
lods
add
stos
push
xchg
jb
push
mov
jg
lock
sbb
outsb
cmpsb
shll
xchg
lahf
sbb
inc
into
xchg
into
jne
clc
jns
jmp
cmp
enter
out
mov
out
push
push
dec
int
outsl
jno
repz
sub
xor
fbld
mov
in
imul
cmp
jb
xor
call
dec
sub
xchg
pop
lahf
pop
testl
sub
loope
pop
es
xchg
and
push
mov
cmp
xor
dec
test
das
ret
and
and
mov
jle
xor
test
sbb
in
or
sub
mov
and
or
loope
inc
int3
sbb
iretw
inc
insb
push
lcall
ljmp
nop
std
testl
ja
push
ret
imul
sub
fnstenv
inc
dec
dec
xor
fsubrl
or
or
or
pop
data16
ljmp
pop
pop
icebp
cwtl
iret
mov
push
cmpsb
sbb
je
fwait
jno
ljmp
sub
mov
ret
cmpsb
xchg
out
mov
add
test
cmpxchg
and
xor
lea
inc
or
sti
je
sbb
nop
push
in
cmp
pop
cltd
push
add
sbb
test
and
mov
pop
in
adc
inc
mov
sub
cmp
aas
stos
scas
aad
fistpl
xlat
rolb
outsb
cmp
pop
dec
fistps
or
nop
aam
inc
dec
xorb
call
pop
cmpsb
mov
sbb
cmpsb
dec
ficomps
test
outsb
sub
push
xor
js
aam
aaa
adc
mov
inc
imul
and
xor
mov
sub
jg
add
inc
jge
mov
cwtl
adc
cmp
inc
inc
out
jecxz
rep
adc
dec
pop
es
or
imul
push
sub
ret
xchg
negb
xor
aas
push
movsb
xor
mov
cmpsl
cmc
dec
icebp
mov
stos
sbb
dec
dec
icebp
xchg
and
inc
ret
dec
faddl
mov
les
nop
dec
bound
shrl
or
cmc
out
mov
mov
adc
sub
nop
lahf
mov
rorb
in
and
repnz
es
inc
jno
cltd
test
sbb
lds
jmp
push
pop
lret
aam
stc
sub
mov
ljmp
ficoms
rorl
fscale
daa
xor
push
fwait
shrb
lahf
bnd
mov
and
movsl
aad
mov
scas
or
mov
lret
in
stc
lea
pushl
jmp
lret
leave
rcl
fcmovb
sub
pop
inc
and
push
js
jecxz
sub
mov
ljmp
shl
shlb
lea
mov
sbb
pop
scas
and
mov
divl
pop
stc
lcall
mov
shlb
mov
or
cmp
inc
sub
clc
push
lds
dec
test
xchg
test
and
adc
outsb
fdivs
or
lock
ja
out
inc
inc
xor
jecxz
push
pop
jns
xchg
je
arpl
loop
lods
jge
jl
divb
sbb
push
je
jg
cmpsb
dec
icebp
mov
xor
sub
je
gs
mov
xor
fs
aaa
inc
pop
sub
or
repz
cli
popa
xchg
sarl
rclb
iret
and
cmp
lock
dec
outsl
xor
sti
xchg
rcrb
sub
push
out
fistl
jl
test
jp
loope
mov
mov
jecxz
lods
mov
test
jbe
jl
push
repz
clc
popa
push
pop
mov
or
hlt
mov
push
jne
adc
call
xor
push
add
mov
mov
xchg
cmp
lods
or
in
das
push
jnp
inc
fisubs
cltd
pusha
or
pop
fdivr
in
das
clc
stos
jnp
clc
cmc
sub
fimuls
lret
lret
sbb
lahf
inc
mov
imul
adc
jb
inc
push
adc
dec
imul
add
scas
imul
cmp
xchg
or
addl
shlb
and
mov
xor
xor
mov
stos
push
or
push
adc
mov
add
pop
cwtl
pusha
cli
pop
push
sbb
add
std
add
addl
dec
dec
repz
daa
jno
sarl
xchg
lahf
xchg
adcl
iret
mov
add
mov
mov
xchg
fwait
sbb
cmp
jl
sbb
lods
out
push
and
push
repnz
add
shlb
stc
pop
pop
sahf
pop
ficomps
or
pop
push
mov
and
js
push
mov
xor
enter
ljmp
fnsave
cmp
js
stc
add
mov
aad
jo
sub
icebp
frstor
pusha
insl
xchg
lods
sbb
mov
cmp
push
test
xor
outsl
ja
jl
xchg
jge
add
jno
lock
jae
popf
call
in
outsb
mov
xor
rcrb
cmp
ds
rorl
mov
pushf
cs
cltd
xor
push
cmp
sahf
cmp
cmp
mov
fisttps
ret
lock
jae
inc
or
push
out
dec
std
lret
sbb
adc
ds
fmuls
pop
stos
lods
jno
and
ja,pn
loop
jecxz
pop
push
out
dec
and
inc
or
jg
pusha
fistpl
xor
xlat
lcall
jb
and
call
xchg
shll
or
adcl
jge
or
loope
mov
sub
shl
pop
inc
mov
xorl
sbb
repz
stos
out
push
jecxz
pop
mov
dec
loopne
mov
pop
cmp
cs
sbb
pop
sub
xchg
mov
insb
xchg
mov
jo
jae
push
lods
movsl
add
dec
repz
and
and
mov
push
and
inc
mov
mov
cmpb
test
pop
cmp
hlt
inc
push
dec
vpand
fs
popf
stos
push
and
iret
inc
xorb
movsb
cmp
dec
lds
dec
lret
mov
fildl
jle
and
xor
aam
mov
lret
cwtl
cmpsb
push
xor
mov
bound
mov
inc
sub
xchg
stos
pop
add
into
adc
pop
into
negl
mov
push
xchg
mov
out
mov
js
push
cmp
das
decl
sbb
subl
std
add
sub
inc
das
mov
insl
xchg
dec
mov
movsb
movl
aas
clc
adc
mov
imull
and
add
dec
cmp
adc
ljmp
adc
idiv
jecxz
xchg
iret
ret
pop
lock
add
rcrl
push
les
pushf
xchg
mov
sbb
les
shrb
mov
insl
roll
push
decl
pop
imul
or
push
add
int3
fcmove
fimull
xchg
out
mov
jg
push
js
nop
dec
ficoms
clc
das
inc
lea
fcomps
cli
mov
dec
pusha
push
outsw
and
ja
sub
andb
sahf
jno
in
stos
cmp
lret
xlat
stos
inc
les
pop
ss
or
mov
scas
push
push
mov
cmp
test
es
stos
mov
xlat
xchg
icebp
jbe
sbb
jle
jp
xlat
or
mov
jae
mov
js
adc
in
loopne
mov
fs
ss
push
loope
inc
lock
pop
add
xchg
sbb
add
or
cli
hlt
mov
push
mov
mov
movsb
mov
pop
stc
and
insb
push
inc
dec
or
mov
aad
loop
in
add
push
xor
fsubl
nop
sarb
mov
imul
repnz
addr16
adc
pop
in
int
pop
dec
cs
add
test
out
testl
mov
cmpsb
leave
xchg
subb
jge
daa
stc
jp
sarl
mov
xchg
xor
xor
std
add
push
iret
dec
fdivrp
mov
popf
fdivl
inc
inc
mov
push
or
xchg
mov
push
gs
jbe
clc
sbb
fdivl
and
push
test
jge
into
adc
mov
nop
or
jg
cmp
movb
add
xchg
mov
push
ss
sbbl
and
stos
out
ja
pop
cmpsl
mov
inc
fucomi
adc
xchg
mov
outsb
add
or
cmp
hlt
xor
out
jnp
xor
aam
xchg
cs
inc
sbb
insb
jg
inc
sbb
xchg
ljmp
push
push
cmp
mov
sbb
jbe
mov
adc
insl
xor
mov
or
xorb
adcb
and
sub
inc
stc
stos
inc
ja
cwtl
aas
mov
mov
pop
in
adc
jge
clc
pop
call
inc
push
cmp
sti
outsb
orb
mov
add
cs
in
aam
pop
std
jge
xor
push
aas
mov
mov
in
mov
mov
test
shl
jl
mov
int3
mov
aam
psubusw
fadds
insb
icebp
hlt
xchg
mov
xchg
inc
mov
push
shr
jp
fs
aad
shl
aaa
in
inc
and
xchg
mov
cmp
cmp
sbb
shlb
fidivrl
and
jle
fwait
repz
movsw
repz
fnsave
cmp
fwait
cmpsl
cmpsl
test
mov
imul
mov
loope
out
xor
pop
push
jl
mov
dec
push
add
xchg
mov
cmp
pop
call
ret
pop
mov
sti
sbb
or
mov
ja
push
push
js
dec
or
push
loop
xchg
ret
add
adc
push
pop
xor
loopne
xlat
push
aaa
inc
jl
mov
inc
flds
pop
stos
add
sbb
ljmp
dec
aad
jmp
sbbb
add
add
fwait
add
ljmp
shrb
fstpt
sbb
jnp
mov
insl
lods
add
sub
mov
inc
test
mov
sarb
pop
hlt
add
in
and
sbb
movsl
stc
jl
mov
sbb
mov
inc
fbstp
enter
mov
jmp
mov
std
clc
sbbb
outsl
or
push
test
pusha
mov
lods
outsl
out
imul
sub
mov
jle
fsubrl
scas
jne
mov
xor
fcoml
mov
aam
or
and
cmpsb
and
push
push
mov
adc
mov
andb
in
loope
mov
cmpsb
adc
subb
sub
daa
movsb
outsb
xchg
adc
scas
and
inc
xchg
push
push
mov
and
push
lcall
cmp
mov
mov
daa
pop
or
push
pop
pop
lods
sarl
scas
sub
xor
clc
imul
jbe
imul
imul
mov
pop
loop
pop
adc
push
frstor
fdivl
sub
add
push
cmpsl
jne
dec
insl
insl
mov
out
mov
push
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
sub
andl
xor
or
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
jmp
ror
cmp
aam
ror
add
sub
pop
mov
pushf
das
jg
jae
js
sahf
or
xchg
dec
scas
sbb
xchg
mov
insl
mov
aas
inc
lea
mov
push
add
mov
dec
dec
adc
mov
jno
in
jbe
add
xor
pop
inc
dec
lods
lcall
sub
push
cmpsb
mov
fcmovne
jns
ret
es
repz
out
test
mov
cmp
mov
mov
into
adc
or
and
mov
xchg
xchg
cmpsl
adc
add
or
push
sbb
or
push
add
jns
xor
push
nop
jne
or
add
mov
popa
test
aas
fucomi
jb
jnp
xlat
ds
cmp
ret
inc
jne
movsl
mov
sbb
clc
stos
add
fldenv
sbb
mov
mov
adc
mov
mov
lahf
pop
and
or
mov
or
sub
mov
ror
mov
mov
push
mov
das
pop
iret
jecxz
sbb
fwait
stos
ja
stos
jmp
sbb
ljmp
in
aaa
sbbl
adc
inc
or
loope
movsl
cmp
or
adc
add
lds
xchg
xchg
mov
jecxz
and
ficoms
mov
or
lret
push
mov
mov
sbb
add
test
xor
pop
lahf
dec
aas
pop
and
aam
xlat
cmp
dec
sbb
cmp
jle
push
pop
xchg
cmc
sbb
xchg
cwtl
push
fmull
repnz
fs
lods
xchg
or
sub
jno
dec
pop
sub
lret
xorb
mov
sahf
imul
push
cmp
pop
out
sbb
test
lods
les
jle
pop
jl
xor
in
sbbl
sub
add
stos
add
cli
les
add
in
jp
and
xchg
mov
sarb
cltd
push
or
lcall
pop
push
icebp
mov
add
icebp
or
pop
or
mov
sub
cmpsb
pusha
cmpsb
pop
out
sti
mov
cmpl
push
xchg
mov
sub
cmp
lods
shlb
jno
dec
icebp
sbb
jp
fnstenv
pusha
sub
mov
pusha
sub
inc
fistps
and
xor
and
mov
dec
repnz
lcall
je
cmp
inc
mov
xchg
les
add
cmpb
jge
cmp
jnp
mov
out
pop
mov
movsl
jp
stc
cs
lods
and
fistpll
sbb
scas
or
in
enter
ljmp
mov
movsb
mov
add
pop
popa
xchg
rcrb
insb
in
pop
ss
fstp
lds
mov
shlb
out
push
shrb
pop
clc
ds
clc
rcrl
inc
int3
notl
and
inc
pushf
in
imul
cmp
xlat
cmpsb
dec
outsb
push
aam
rcl
jnp
out
gs
mov
jp
push
test
popa
cmp
cld
in
lret
sahf
data16
shr
jmp
dec
lods
inc
enter
jae
adc
arpl
out
ret
pop
xor
sub
jae
jo
sahf
cmpb
dec
mov
and
ss
lea
sti
out
out
pop
and
lcall
out
outsl
jne
mov
xchg
or
sbb
jp
filds
xchg
dec
out
jo
and
cmp
pop
mov
clc
xchg
cmpb
outsl
lret
stos
or
out
iret
cmc
pop
fildll
stc
xor
and
add
mov
jo
pop
sub
pop
or
adc
call
xchg
xchg
jge,pn
daa
jecxz
loop
das
xchg
sarb
sbb
mov
xor
ret
sbb
mov
aas
add
scas
mov
jae
mul
and
mov
mov
sub
jecxz
daa
ja
xor
pop
push
daa
jne
sbb
pinsrw
lea
or
in
add
ficoml
andl
imul
xchg
je
push
cmc
sbb
pop
nop
adc
jb
sub
push
and
mov
push
fsubl
and
shrl
int3
stos
aad
jmp
xchg
xor
pusha
cmp
xchg
push
popf
out
lds
pop
jmp
cmp
push
jl
outsb
in
leave
push
jmp
ret
rcr
fcmovb
jp
outsb
andl
jg
jae
js
adc
outsb
aaa
fucom
int3
popf
and
pop
sbb
ret
xchg
repnz
repnz
mov
sbb
jge
jmp
mov
popf
adc
pop
inc
dec
fnsave
rorl
or
shll
mov
pop
mov
or
sbb
rcrl
cld
or
dec
pop
pop
inc
ret
sbb
rolb
xchg
aad
and
cmp
pop
out
cld
lea
pop
inc
push
imul
xchg
mov
dec
inc
out
or
mov
pushf
lahf
repnz
push
pop
gs
lret
cmpsl
mov
out
cli
lcall
push
mov
or
loop
test
pop
inc
sbb
push
popf
test
inc
pusha
sub
cmpsb
jl
adc
jno
mov
sub
enter
lahf
orb
xlat
mov
aas
add
lret
out
test
daa
fistps
jl
jl
outsb
stos
ds
xchg
ja
push
sahf
mov
rorb
and
rcll
jo
adc
nop
ljmp
mov
and
cmpsl
jbe
push
cltd
sub
roll
pop
sub
pop
insl
mov
iret
sub
xchg
movsb
mov
add
pop
sub
outsb
mov
aam
and
sar
sbb
push
push
outsl
push
jbe
movsl
push
mov
popf
ret
adc
pop
repnz
jmp
mov
loope
test
and
pop
fnstsw
xchg
icebp
les
scas
fsubrs
stc
xchg
sbb
jmp
push
jns
dec
les
js
and
inc
mov
dec
js
push
imul
repz
lcall
rorb
xor
sbb
idivl
ss
mov
lret
inc
orb
cs
scas
cmp
pop
test
jecxz
lcall
femms
into
adc
cli
inc
jle
push
daa
lret
mov
test
dec
fsubrs
dec
xor
push
and
pop
mov
scas
mov
sahf
scas
or
test
cltd
cmpsl
push
into
popa
mov
mov
mov
xor
in
dec
xor
hlt
pop
jns
mov
inc
xlat
clc
shrb
scas
push
jg
dec
das
add
push
cli
dec
outsl
push
and
jecxz
inc
test
mov
jge
repz
pop
js
sub
inc
fsubrs
pop
int
sarb
dec
mov
nop
pop
pusha
sarl
shll
hlt
jo
mov
lods
flds
ss
jp
and
iret
test
xor
je
push
stos
dec
daa
mov
mulb
insb
mov
add
leave
and
and
lds
jmp
jmp
and
ljmp
daa
inc
inc
int
enter
pop
rcrb
and
jno
jge
fs
inc
mov
mov
sub
aaa
jns
xor
les
jmp
out
or
adc
das
cmp
clc
jg
mov
jmp
int
int3
cmpb
sahf
outsl
mov
test
cmp
jg
pop
leave
arpl
adc
sbb
imull
jmp
mov
addl
lods
pop
cwtl
scas
push
ds
push
xor
cmp
mov
roll
mov
xlat
les
lods
je
xor
jne
movsb
hlt
dec
jmp
and
out
fldt
dec
imul
adcl
loope
mov
dec
or
push
jmp
into
out
stos
adc
jo
and
or
sbb
test
imul
jg
arpl
sub
fstl
pop
add
int
mov
mov
xchg
and
xor
shll
nop
inc
lods
call
sarl
fnstsw
sbb
mov
shr
pop
cmp
inc
movsl
pop
cwtl
mov
outsl
ficompl
ja
ja
sub
sbb
jbe
mov
xchg
and
jns
pop
mov
sbb
leave
jl
iret
test
sbb
pop
sub
pop
test
mov
jp
mov
aas
or
notl
add
adcl
xor
cmpsl
cmp
icebp
mov
jle
add
mov
pop
push
pusha
mov
test
mov
inc
or
cli
jmp
aas
ret
rcl
iret
ret
dec
xchg
pop
jge
xor
jl
js
iret
dec
lret
in
roll
fdivrl
insb
push
mov
push
bound
xor
pop
push
dec
lcall
in
mov
and
stos
add
bound
jmp
inc
pop
jbe
jle
mov
xor
sbbl
push
cmpsb
adc
cmp
mov
subb
sahf
add
xchg
mov
mov
pop
push
mov
mov
fisubrl
xchg
cmp
roll
add
cwtl
push
jns
gs
ret
icebp
lds
pop
shlb
cmp
lds
fsubp
push
ret
iret
jns
call
mov
movsb
idiv
in
lahf
scas
add
inc
out
cld
jnp
loopne
xor
cmp
and
adc
roll
leave
xchg
fsts
dec
dec
inc
inc
push
push
cmpsb
push
cmc
mov
shrb
popf
stos
adc
dec
sarb
mov
bnd
mov
push
shlb
mov
mov
jae
push
int
mov
or
and
mov
mov
popf
cmp
sub
test
outsb
faddl
subl
daa
xchg
gs
push
sahf
out
in
sub
std
mov
add
fldcw
inc
imul
pushl
inc
sarb
lcall
jmp
jg
inc
pop
add
sti
mov
inc
cmp
or
fsubs
scas
call
js
xchg
aad
mov
es
insl
jmp
das
mov
pop
loope
jle
mov
xchg
imul
cltd
pop
in
loop
xor
stc
cmpsb
pop
loopne
dec
and
pop
jmp
pop
and
xor
cld
out
xchg
push
add
test
ret
dec
rcl
std
ja
and
xor
jle
outsb
mov
rorl
and
sub
fcomp
shll
dec
dec
loopne
mov
xlat
outsb
mov
pop
mov
jne
fwait
aaa
ja
pop
push
and
xor
adc
pop
test
cmp
jmp
cmp
fnstcw
jg
cltd
std
push
pop
adc
push
das
movsl
addr16
mov
xchg
or
lret
jns
test
cwtl
adc
jecxz
cmp
gs
jmp
mov
cmp
pop
rcl
rcll
pop
rorl
andb
pop
inc
iret
lods
ret
movsb
movsb
mov
out
lahf
push
sbb
mov
inc
ror
aad
pop
scas
mov
push
fnstcw
int3
xchg
cmp
adc
ret
sub
repnz
cli
scas
pop
adc
cmpsl
dec
mov
in
adc
jg
inc
dec
mov
arpl
sub
mov
dec
jbe
cmpsb
push
mov
ljmp
jg
je
mov
aam
add
pop
fldl
sbb
mov
adcl
cmp
push
mov
sbb
dec
hlt
adc
mov
xor
cmpsl
in
stos
rcrl
ret
and
sbb
jns
mov
cld
arpl
add
stos
or
ret
into
pop
adc
push
addr16
out
in
xor
mov
dec
pop
nop
jo
inc
and
aad
pop
inc
push
rorb
leave
sub
xchg
jbe
repz
xor
sbb
adc
xchg
mov
gs
cmp
lret
iret
test
mov
jns
sahf
int
xchg
popf
pusha
daa
mov
das
mov
int
notb
rcrl
shl
push
fsubrp
ljmp
aaa
mov
lret
mov
addr16
out
jg
xchg
sysenter
xor
dec
lret
pop
sub
fildl
push
faddl
out
push
nop
xchg
pop
repz
mov
and
push
movsl
sbb
rclb
stos
rclb
xchg
mov
call
push
repnz
je
rcrb
stos
push
adc
inc
test
int
or
jno
add
dec
xchg
sbb
jecxz
cmp
sub
bound
add
rcrl
incb
call
je
sub
movq
sub
jmp
sahf
mov
mov
notl
cs
xor
ret
xor
movsl
cmp
std
fildll
adc
testb
pop
adc
mov
or
ljmp
mov
in
lods
gs
and
int
sar
je
inc
jb
shlb
push
out
mov
sub
mov
movl
jmp
cmp
lret
rcr
lret
iret
adc
ret
jg
jae
js
dec
inc
jo
iret
test
add
out
sbb
stos
dec
mov
mov
mov
inc
pop
xchg
and
sub
fcomps
pop
jb
dec
xchg
out
dec
outsl
in
jbe
sbb
outsl
sbb
pop
lds
daa
dec
lret
test
fsubl
adc
shl
lret
sub
dec
mov
mov
sti
adc
sarl
and
in
jns
pushaw
sbb
scas
js
mov
sub
sub
push
insb
loope
jg
xchg
pusha
jbe
dec
ret
ds
cltd
pop
inc
loopne
fdivs
ret
aas
pop
mov
add
add
sub
hlt
cli
sahf
add
mov
push
mov
jb
mov
sti
pop
jmp
xchg
mov
sub
jp
xorl
xlat
fcomp
mov
xchg
add
out
push
jb
cmp
push
movsl
imul
cs
ds
int3
daa
fdivl
pop
imul
push
pop
sahf
imul
cmp
adc
ret
dec
insb
mov
ljmp
inc
inc
xor
jle
jmp
je
jns
sbb
pop
loop
mov
jge
aam
cld
mov
js
push
and
lea
push
adc
jl
adc
pop
push
fs
test
fcoml
scas
out
xor
dec
sbb
xchg
xor
mov
cwtl
sbb
jbe
push
and
pop
aad
pop
push
cmp
in
pop
cmpsb
add
mov
bound
jae
push
sub
aaa
test
xorb
adc
shll
rcrl
mov
jae
lods
cmp
dec
gs
iret
or
mov
pop
daa
faddl
dec
xchg
fisttpll
xor
das
daa
dec
in
clc
repz
je
rcrl
pop
cmp
mov
adc
xchg
jp
jnp
mov
cmpsb
sbb
jmp
push
aad
or
or
lret
sbb
push
pop
fs
xlat
imul
adc
scas
or
fsubrs
dec
in
repnz
mov
decb
ss
int3
dec
sub
sub
ret
sti
mov
mov
jg
push
pop
mov
das
icebp
in
mov
mov
lods
pop
pop
in
xor
xchg
add
cmpl
or
fcmovu
ja
bound
xchg
jns
pop
inc
xchg
pop
fwait
lret
and
jb
and
jl
enter
ror
cmp
dec
or
mov
rcrl
add
sub
xor
mov
int
loop
mov
popf
scas
aaa
or
mov
jp
sub
stc
cmp
iret
and
fwait
mov
hlt
add
jg
lcall
lahf
and
push
pop
adc
sbb
adc
jb
clc
or
push
shl
jp
scas
inc
outsb
jno
xchg
cwtl
rorl
cmpsl
packssdw
psrad
cmpsb
ljmp
push
imul
call
arpl
xchg
loopne
or
fwait
mov
cld
mov
je
inc
repnz
cmc
mov
ret
shl
out
pop
inc
lock
mov
cwtl
and
int
dec
or
push
mov
fcomi
and
bound
mov
cmpsl
pop
cmp
out
popa
inc
jnp
add
sbb
jo
push
sub
mov
pop
jge
daa
pop
xchg
cmpsb
int
adc
mov
push
jno
pop
inc
stos
inc
xchg
cmp
mov
lret
adc
jne
mov
lret
scas
dec
adc
push
pop
fnstcw
lret
pop
or
xlat
ljmp
pop
stos
fidivs
pop
cmp
aad
lcall
enter
push
and
ds
or
sbb
shlb
addb
push
testb
mov
dec
bnd
fmull
decl
loop
pop
cmpsb
mov
push
inc
arpl
ret
mov
inc
sub
inc
test
push
pop
out
dec
and
jbe
ds
or
mov
sbb
test
imul
dec
mov
fsts
mov
mov
iret
push
fdivr
or
dec
ret
sbb
fwait
mov
test
mov
jmp
jns
pop
daa
or
or
or
sub
rolb
sbb
jns
stos
aam
mov
test
push
shrb
mov
shl
stos
and
inc
lods
fs
mov
data16
clc
pop
imul
mov
mov
inc
loopne
test
inc
add
adc
jmp
aas
enter
fxch
rclb
fistpl
ret
jg
jae
js
xlat
push
fmul
sub
xchg
jecxz
popa
cmc
lcall
mov
les
cmc
lock
bound
insb
push
imul
ret
xor
test
ss
sarb
xor
cwtl
mov
nop
in
xor
lahf
stc
ds
aad
outsl
jnp
ret
xchg
std
add
mov
pop
pop
lds
jnp
cmpsl
xor
mov
aaa
sub
adcb
aam
lods
mov
push
and
stos
add
jge
push
ds
notl
add
imul
jns
cwtl
ret
jae
or
cmp
add
enter
lret
adc
cli
inc
aaa
add
ljmp
ds
pop
xor
dec
insl
push
cmp
mov
fistl
sbb
sub
push
xchg
lods
sbb
pop
pop
int
mov
push
gs
mov
sbb
into
out
inc
movsb
imull
mov
shlb
enter
pop
je
aaa
loope
ret
aad
inc
test
test
xor
mov
cwtl
cmp
outsl
test
add
iret
fstpl
fldenv
shrl
sbb
add
adc
fistps
cmpsl
loope
mov
stos
aad
mov
xchg
iret
xor
xchg
or
std
cmp
push
movsb
sub
in
or
ret
jno
fiaddl
in
hlt
xlat
pop
xor
and
into
sbb
lods
int
or
fisttps
push
dec
pushf
in
pop
andb
sub
xchg
sub
addb
mov
icebp
loop
mov
mov
lods
cmp
test
repnz
xor
lahf
cmp
xor
cmp
dec
ljmp
or
fnstcw
loopne
insl
jecxz
sbb
xacquire
jae
ss
mov
sub
iret
and
outsl
push
or
mov
lret
je
pop
sub
inc
mov
jno
pushf
into
movsb
movsb
mov
shlb
dec
data16
push
sub
jg
adc
stc
lds
push
inc
dec
outsl
orl
adc
sbb
in
pop
pop
cmpsl
lods
loope
data16
adc
andb
mov
cmp
rorl
push
bound
sub
cli
mov
popa
lret
pop
add
aad
pop
loopne
mov
xchg
in
mov
xlat
or
pop
push
jecxz
addr16
inc
pop
aaa
mov
rclb
and
in
xorl
mov
xlat
aam
mov
mov
cs
jne
loopne
sti
sbb
sub
nop
add
lcall
bound
arpl
ds
cltd
ja
pop
aam
cs
jl
aad
mov
in
and
lahf
imul
mov
ret
push
lahf
ljmp
and
sbb
je
sbb
inc
addr16
dec
arpl
push
and
in
or
mov
adc
shll
iret
rcrb
scas
mov
movsb
jne
loop,pn
loopne
and
fucomp
sub
lods
mov
cmp
sub
cmpsl
push
xor
xchg
ljmp
jl
sbb
lea
testl
cmpsl
pusha
jecxz
stos
push
inc
jl
jnp
sbb
xchg
xchg
out
pop
inc
and
fsubl
inc
push
out
sti
test
sbb
movsl
imul
add
pop
dec
outsl
jae
std
adc
dec
dec
push
sbb
jb
push
xchg
pop
adc
add
mov
dec
insb
xor
ds
sub
outsb
leave
fistl
imul
mov
mov
cmp
iret
inc
mov
jge
dec
adc
xchg
clc
cmp
rcrl
insl
loope
lahf
outsl
rcll
das
aas
xor
or
out
test
lahf
pop
pop
sahf
push
push
sti
mov
push
adc
push
aaa
data16
inc
xchg
loopne
out
inc
xor
pop
test
mov
repz
xchg
pop
jbe
sbb
sub
mov
inc
sbbb
loopne
sahf
dec
xchg
pop
jae
add
mov
xor
jae
aam
cmpb
cmpl
jb
cmc
in
dec
movsb
and
pop
mov
dec
mov
inc
ja
xchg
lods
cli
fcompl
dec
in
jo
in
mov
adc
aad
movsl
cmp
dec
add
xor
imul
jns
daa
mov
push
push
xchg
push
or
leave
add
mov
sub
sub
jmp
xlat
cmp
int3
fxch
aad
insb
test
mov
jae
js
test
xchg
adc
xor
pop
pop
imul
je
mov
or
or
loop
xchg
je
mov
inc
push
cmpsb
cmpsl
mov
sbb
call
inc
push
push
and
call
push
push
outsl
pop
adc
xchg
mov
mov
int3
jl
add
das
cwtl
nop
jae
addr16
dec
jnp
jae
cmp
and
shll
jg
lods
loopne
out
pushf
div
jns
xchg
mov
in
bound
stos
dec
ret
mov
push
pusha
pop
jge
cltd
icebp
das
xor
fstp
add
ljmp
dec
rorb
aaa
loope
sbb
jg
pop
cmp
and
sbb
cs
and
aam
mov
mov
loopne
push
push
nop
and
sarl
add
insl
mov
xor
lahf
aaa
js
sbb
or
addb
aas
ss
jnp
into
outsl
pop
std
fst
sub
jmp
insl
aam
fadds
mov
in
ret
stc
popa
mov
pushf
mov
adc
cwtl
and
lock
in
lods
les
add
or
xchg
jnp
adc
xchg
jl
fldl
fbstp
jo
mov
add
lcall
in
cwtl
xor
xor
lret
rcrl
nop
pushf
xor
fadds
fstpl
sbb
das
je
dec
nop
push
test
jle
ljmp
mov
shrb
shl
and
lods
mov
in
lock
mov
add
adc
adc
enter
pushl
inc
push
mov
mov
push
imul
cmp
mov
cli
xor
movsb
lock
lcall
lods
xor
stc
out
fldcw
lcall
sbb
jns
ss
jg,pn
and
das
repz
insl
add
mov
sub
mov
cmp
cmp
addr16
dec
sti
in
into
loop
in
sbb
add
or
sbb
mov
or
mov
stos
sub
xchg
mov
pop
aad
add
loope
nop
xchg
mov
and
mov
sti
dec
fwait
add
jl
int
jbe
loope
or
mov
dec
aad
insl
or
in
mov
rcll
adc
dec
stos
mov
mov
push
push
and
loopne
xchg
or
out
aaa
mov
dec
jb
xor
jb
cld
shlb
in
xlat
fwait
mov
in
mov
pusha
push
loope
dec
mov
out
cmc
mov
pop
stc
movsbl
jp
jo
sbb
or
lods
dec
sub
in
inc
mov
add
popf
addl
bound
ret
xor
ljmp
pop
push
mov
mov
loop
mov
ds
xorl
mov
xchg
mov
in
pop
lahf
and
outsb
jns
cmpsl
mov
mov
not
push
push
xchg
sahf
inc
ret
mov
ss
gs
dec
or
mov
in
add
adc
dec
cmpb
sub
cli
cmp
sub
inc
inc
sbb
shlb
arpl
jne
cmp
xchg
inc
mov
mov
xchg
sub
mov
mov
outsb
sbb
daa
jae
shll
int
je
out
push
iret
cmp
inc
fstl
xor
lock
loope
sub
popa
imul
mov
outsl
xchg
mov
andl
add
arpl
test
adc
pop
insb
sbb
or
mov
mov
xchg
or
mov
xchg
test
sar
leave
rol
or
std
sbb
pop
lods
into
dec
xlat
jmp
push
fstpl
shll
push
cld
mov
fwait
pop
cmpsb
mov
mov
mov
popa
stos
shll
rcrl
pop
fnstcw
mov
mov
sbb
lea
push
sbb
or
add
jb
add
push
scas
xchg
dec
lea
ror
xor
push
lret
mov
sub
add
sti
pop
aaa
aad
in
lea
inc
xchg
popf
xor
mov
dec
mov
sti
push
jnp
pop
sbb
repz
int3
xchg
int3
cmpsl
xchg
jp
xchg
sub
pop
arpl
leave
cli
lds
xor
or
sub
insb
test
sub
xchg
jne
mov
inc
rorb
mov
add
mov
mov
mov
adc
jmp
mov
lret
or
cmp
xchg
leave
jg
jae
js
sahf
insl
push
jbe
mov
mov
cmp
aaa
push
push
jns
daa
jno
xlat
jae
add
sub
loop
aad
fmull
andb
xor
dec
lahf
minps
sbb
dec
lods
stc
mov
dec
xchg
mov
ret
add
insl
jecxz
ljmp
pcmpeqw
clc
jbe
inc
sub
sub
fidivl
pop
inc
pop
shlb
in
or
mov
lret
in
ficoms
cwtl
fcoml
cmp
jns
add
jo
mov
movsb
scas
add
adc
and
xorl
xor
arpl
sub
fmuls
cs
mov
and
lds
sti
out
adc
int3
nop
sub
popa
xor
cmp
gs
gs
lods
popf
and
jbe
gs
out
sub
push
add
adc
aad
dec
sub
push
and
shl
xchg
sub
jg
or
lds
out
fbstp
xchg
test
mov
pop
movsl
test
cmpsl
dec
ljmp
int3
push
daa
jl
mov
test
fwait
stos
dec
clc
cmp
jne
push
jae
int3
fiaddl
jmp
inc
imul
and
or
mull
scas
jge
cmpsb
dec
push
repz
es
pop
mov
lea
nop
inc
ret
lods
mov
cltd
jbe
aam
xor
stc
sub
fisubl
dec
ret
popa
jle
sub
add
adc
out
xlat
add
push
flds
ja
cmp
mov
dec
fcompl
jnp
in
or
mov
in
testb
xchg
std
push
jmp
mov
pop
arpl
mov
adc
xchg
jns
lds
outsb
mov
pop
out
push
xchg
fmuls
lret
out
popa
push
imulb
loop
out
inc
sbb
iret
push
xor
xlat
mov
sub
xchg
push
pop
mov
push
push
pop
int
mov
enter
ret
cmc
sbb
mov
int
ds
es
mov
pusha
movsb
test
mov
inc
jle
xchg
pop
jnp
lea
inc
aaa
loopne
shlb
addl
outsl
fs
loop
dec
mov
icebp
sarb
fs
jmp
dec
clc
inc
sbb
cs
pop
inc
jecxz
rcrl
aam
jg
in
and
jnp
mov
push
mov
mov
pop
loope
ret
jge
pop
lcall
lcall
mov
add
lock
into
cmp
pop
out
leave
or
and
cmp
into
fsubrs
xor
out
into
sub
addr16
sub
push
mov
loopne
push
jno
dec
inc
add
xor
or
pop
lret
ja
sub
mov
loop
lods
xchg
mov
scas
add
pop
inc
inc
js
xor
inc
rorb
mov
inc
xchg
jae
movsl
adc
shlb
sbb
inc
sbb
jbe
int3
xchg
dec
cmpsl
jmp
sti
jnp
pop
jge
sbbl
mov
inc
sbb
imul
movsb
test
pop
iret
mov
popf
cld
addl
cmpsb
js
cmc
push
dec
out
addr16
repnz
dec
nop
mov
stos
cmp
xor
inc
jle
jae
sub
pop
dec
xor
sbb
mov
bound
stc
dec
arpl
inc
lret
mov
push
jo
shlb
add
in
and
jle
sub
jp
es
aam
lret
xchg
and
int
jge
int3
mov
push
mov
icebp
push
pop
and
movsb
jecxz
and
and
popa
xchg
out
andb
sub
and
cld
mov
mov
or
iret
mov
mov
mov
mull
ljmp
sbb
jg
cmp
fwait
out
std
push
xchg
jmp
dec
inc
pop
insb
and
cmpb
mov
cld
jmp
pushf
adc
sbb
mov
loop
addr16
orl
add
lods
cmp
jnp
shlb
or
icebp
cltd
xor
mov
andl
or
jle
test
in
scas
rorl
xchg
pusha
push
pop
xchg
rol
or
in
and
hlt
sbb
pop
out
in
push
scas
inc
int3
mov
das
mov
subl
xor
jmp
leave
int3
leave
rcr
fxch
aad
push
adc
ror
jg
jae
js
mov
mov
push
jno
test
and
sbb
mov
pop
dec
in
cmp
jae
sub
xchg
repnz
jns
push
xor
mov
push
mov
xchg
arpl
cs
xor
jnp
jg
mov
stos
ja
in
cld
cmp
push
dec
int3
les
lret
enter
dec
notl
cmpsl
or
sub
add
push
arpl
imul
dec
xor
adc
rcrl
clc
int3
sub
stc
xchg
stos
aad
clc
bswap
mov
adc
pop
arpl
mov
sub
notl
scas
push
or
jnp
int3
mov
icebp
inc
shll
ss
fmuls
jb
jo
sbb
inc
dec
mov
inc
mov
in
ret
jnp
shll
int
aam
negl
into
jge
cltd
test
dec
add
cmpsb
and
aaa
adc
leave
xchg
sbb
jno
jmp
pop
jp
inc
jae
andl
aad
mov
mov
sbb
mov
fsubrl
scas
cmp
rcrl
movsl
lret
jae
and
sti
idivb
ja
dec
pop
roll
enter
xchg
jmp
push
cltd
hlt
icebp
sti
mov
sti
pop
jno
outsb
inc
movsl
xchg
mov
pop
jmp
icebp
inc
dec
movsl
dec
mov
popa
push
sub
fnstsw
adc
push
call
pop
lock
cmp
push
cs
jge
rcr
cmc
fiadds
notl
pop
jl
out
les
imul
jnp
push
sahf
cmp
scas
mov
int3
jne
jbe
movsl
jle
jo
insl
mov
or
jno
xor
mull
cmp
rolb
mov
dec
sti
mov
scas
inc
fwait
cli
mov
add
sbb
mov
pop
roll
inc
adc
fdivs
lods
jne
dec
push
std
cmc
inc
lods
cmp
xchg
sbbl
addr16
aaa
je
jle
imul
scas
movsl
pop
ss
push
icebp
pop
repz
scas
subl
div
mov
mov
mov
push
orb
pop
adc
mov
lods
repnz
cmp
mov
xchg
pop
pop
loopne
fwait
insl
xor
jge
push
mov
or
jne
fdivr
adc
pusha
mov
push
dec
inc
pop
or
andb
cmp
dec
or
pop
pop
sahf
cmc
les
adc
inc
jb
in
ds
loop
loope
dec
cs
es
hlt
and
cmp
mov
mov
iret
inc
push
popa
in
jbe
xchg
rcrb
sahf
and
in
mov
add
stos
mov
push
jge
shr
cmp
pusha
stc
dec
inc
cld
mov
mov
xchg
sub
es
mov
jno
outsb
ds
cmp
fstpt
cmpsb
push
sbb
mov
adc
dec
jo
xchg
adc
inc
popf
fidivs
andl
aam
jns
cmovg
shlb
rol
and
xchg
jb
imul
fsubrs
mov
aaa
lock
test
idivb
out
and
popf
sbb
xrelease
ds
into
stos
sti
gs
pop
js
mov
push
enter
ficomps
dec
pop
bound
mov
pop
inc
pop
outsl
jecxz
pop
mov
jo
loope
mov
xchg
xor
and
dec
jo
int3
lods
popf
dec
es
mov
mov
into
pop
mov
in
or
or
aad
ja
pop
popa
add
pop
sub
cli
je
mov
faddp
neg
push
dec
insl
push
dec
cwtl
sub
push
cmpsb
fidivrs
mov
loope
dec
imul
sahf
adcl
sarb
inc
sar
xor
arpl
dec
pop
aam
mov
cmp
notl
fwait
push
pop
testb
jne
push
push
addr16
mov
lods
sbb
out
and
test
dec
mov
pop
push
int3
push
xchg
js
andl
mov
mov
jmp
loop
in
sbb
out
into
push
addl
xorl
pop
cmp
dec
lcall
stos
push
push
shll
ret
repz
insb
push
jb
xchg
jo
xchg
pop
cmp
mov
jmp
enter
aad
xor
loope
xlat
jg
jae
js
scas
addr16
mov
mov
std
rol
lret
push
dec
aas
push
out
jecxz
iret
mov
dec
cmc
dec
adc
jne
pop
pop
or
xchg
xchg
loop
or
dec
int3
imul
pop
call
imul
fwait
in
fs
rorl
out
fdivrs
sub
or
jns
dec
jmp
imul
mov
subl
rolb
sbb
js
dec
test
imul
jecxz
jl,pn
mov
test
push
fbld
xchg
dec
xchg
lea
mov
movsl
ss
mov
inc
jbe
iret
cmpsb
and
jle
insb
pop
sub
bound
mov
or
push
jmp
outsb
and
pop
ja
and
les
mov
sahf
int
inc
cld
fimull
addr16
les
push
movsl
adc
xor
jae
xor
dec
pop
cli
jg
dec
mov
das
pop
lret
fdivp
add
and
jmp
out
jno
mov
imul
gs
and
aad
pop
iret
jns
push
aaa
nop
push
xchg
sub
or
adc
sub
and
rorb
jnp
fbld
xor
push
fidivl
inc
test
mov
sti
insl
insl
sub
jp
fcomip
rol
push
aaa
loopne
into
adc
repz
and
clc
pop
add
inc
cmp
test
sub
outsl
popa
lea
push
fisttpl
pusha
adcl
sbb
jmp
or
add
test
mov
mov
xor
aad
bound
lret
push
push
fsubr
sub
lock
cmp
call
das
stc
jno
mov
pop
adc
push
gs
rorb
rcr
push
inc
mov
stos
pop
test
and
leave
leave
pop
aad
sbb
pop
lods
mov
scas
call
test
ds
stc
push
mov
repnz
mov
mov
dec
lock
loope
les
jecxz
outsb
sub
daa
gs
fcoml
scas
outsb
pushf
xchg
inc
push
imul
lods
mov
imul
mov
fcmove
lods
jnp
jge
or
nop
fists
out
shl
test
sbb
iret
jns
xor
repnz
pop
daa
cli
nop
xchg
mov
xchg
pop
cmp
fstpl
add
jns
jns
push
add
fmulp
bound
faddl
mov
jge
cmpsl
in
xchg
sti
fldenv
fucomi
bound
rcrl
or
dec
pop
hlt
or
aaa
jnp
or
jne
mov
pop
and
dec
xor
jge
in
lods
cmp
xor
mov
les
jo
stc
iret
pop
pop
pop
push
sarb
mov
lahf
sbb
js
insl
mov
aas
ja
and
sbb
push
icebp
push
pop
out
clc
jmp
cmp
out
jmp
or
xchg
test
nop
call
mov
jns
inc
lret
rorb
sti
icebp
dec
fldl
in
mov
bound
xchg
jno
mov
das
and
adc
insb
ror
mov
jb
ljmp
inc
xchg
pop
jl
sub
insl
mov
cmp
lock
das
push
or
jle
push
fildll
jne
mov
mov
cmp
icebp
movsl
test
js
aaa
mov
icebp
mov
aam
clc
rcrl
lret
and
into
test
cli
cmc
daa
jmp
xchg
dec
sti
loopne
add
mov
mov
mov
or
aas
leave
jne
or
pop
sbb
sbb
sbb
int
push
add
inc
or
aad
sbb
ja
nop
movsb
xchg
add
scas
xchg
std
loope
cmpsb
pop
push
faddl
pop
mov
adc
ja
xor
push
add
aaa
xchg
test
mov
aad
xchg
push
xchg
mov
and
adc
outsb
xor
lods
sahf
pop
ror
pop
sbb
push
stos
cmp
cltd
stos
lods
mov
leave
and
fnstenv
pop
gs
mov
lds
pop
add
adcb
jmp
int
cmpxchg
es
je
mov
mov
popa
jmp
pop
sbb
mov
cs
orl
and
int3
adc
aam
js
mov
outsl
ret
repnz
stc
mov
test
dec
mov
pop
fwait
jb
cmp
fcompl
xchg
cs
sub
sub
mov
sbb
jno
xchg
xor
xor
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
mov
movl
jmp
into
xchg
push
call
aas
fidivrl
jae
js
mov
js
ret
dec
nop
lds
mov
ds
mov
add
fldt
mov
add
xchg
dec
sahf
cmpsl
xchg
jmp
jmp
popf
sbb
sahf
cs
rolb
imul
es
lds
mov
cmp
cmp
loopne
xchg
jb
je
xor
roll
repz
xchg
mov
repz
adc
add
jns
mov
pop
jne
lea
pop
popa
inc
es
jecxz
lret
or
movsl
enter
stc
sub
dec
mov
faddl
and
sbb
or
notb
sbb
aad
scas
test
jp
sbb
sahf
cmp
into
imul
jle
hlt
loop
ret
nop
fcoms
jg
cmp
mov
xchg
bound
xor
ja
insb
mov
data16
iret
mov
fst
jmp
xor
gs
lods
leave
push
movsb
and
sbb
ljmp
repz
sub
adcl
push
dec
dec
lret
cli
mov
repnz
ja
orb
jp
jge
inc
movsb
lds
inc
movsb
sub
cmpsb
add
mov
and
xchg
inc
jo
jnp
loopne
out
push
scas
in
xor
addb
test
xchg
lcall
pushf
xor
insb
ljmp
dec
inc
cmp
mov
lea
jae
int3
mov
sbb
xor
mov
xor
xor
xchg
rcrl
add
or
in
jmp
dec
xlat
data16
shll
lea
cmp
jne
fwait
iret
jg
or
cmp
push
xor
and
mov
loop
test
cmpl
push
mov
mov
out
xor
clc
push
jno
sbb
fwait
jbe
push
test
xchg
scas
fchs
sub
dec
add
add
lds
jge
lcall
jno
aam
inc
inc
pop
out
call
adc
cmp
push
cwtl
pushf
leave
cmp
xor
rorb
rclb
addr16
and
pop
mov
movsl
fdivl
push
mov
shrl
cmp
mov
fwait
sub
ret
mov
push
stos
or
orl
in
gs
adc
insb
ret
dec
stos
loop
shlb
xchg
jnp
ja
fs
xor
and
add
pop
loop
and
out
movsl
in
lret
jno
mov
mov
jae
aam
mov
xlat
jge
pop
lret
hlt
cmpsb
in
sub
aaa
and
xchg
push
cmp
rorl
call
fdivrl
sbb
mov
mov
ss
mov
push
dec
mov
out
bound
mov
xor
or
mov
push
cmp
sbb
pop
lock
pop
int3
add
shrb
sub
cmp
add
adc
jb
dec
mov
pop
clc
aad
imul
mov
or
push
dec
dec
sbb
mov
pop
mov
dec
stc
xor
push
je
or
inc
mov
lret
enter
je
inc
mov
mov
mov
vmovdqa
pop
sti
add
leave
add
and
and
in
test
out
fdivs
icebp
push
mov
mov
pop
jg
adc
sub
push
pop
xor
xor
cld
pop
ss
sarl
aam
popa
push
in
enter
pop
out
js
subl
lahf
mov
andb
inc
inc
punpckhwd
lcall
lret
cmpsl
sub
push
inc
add
sub
mov
xor
fimuls
inc
adc
cld
pop
xor
add
lahf
arpl
call
inc
sub
xchg
stos
fwait
xor
ds
mov
xor
sti
xchg
push
loopne
shr
out
stos
or
mov
cmp
imul
mov
xor
mov
jnp
sbb
adc
int3
cmp
push
lds
cmpsl
sub
pop
cli
xchg
mov
jl
jbe
mov
xchg
test
scas
icebp
xorb
inc
sbb
popf
mov
fidivrs
popf
lret
push
or
out
pusha
push
jle
mov
cmp
movsl
cmp
inc
not
and
inc
cmp
or
aaa
inc
stc
orb
dec
ss
rcl
pcmpgtw
dec
mov
shl
add
sbb
ljmp
cli
inc
aaa
ret
aaa
test
mov
test
xor
xor
xor
and
jmp
int3
aas
into
rcl
ror
shll
das
dec
mov
jae
js
cmp
in
insl
add
lahf
inc
popa
ss
mov
jg
mov
aam
js
add
mov
mov
push
dec
or
xchg
cmc
push
sbb
jb
cmp
sbb
sub
movsb
in
or
cmc
cld
movsl
scas
push
pop
inc
or
xlat
mov
nop
mov
ds
lods
cmp
dec
inc
daa
and
stos
sbb
sbb
xchg
pusha
addr16
add
pop
mov
sahf
out
sbb
movsb
and
stos
cltd
cs
cltd
sahf
lret
cmp
enter
and
lret
cmpsl
nop
enter
insb
pop
sub
call
mov
pop
out
add
cmp
cmp
rcrl
pop
cmp
pusha
add
stos
sbb
mov
sub
jmp
add
or
adc
fadds
mov
mov
add
in
fstpt
xchg
pop
fsubl
scas
cld
test
sbb
xchg
xor
mov
cmp
jbe
roll
mov
cmp
hlt
std
std
or
cs
mov
cli
icebp
cs
sub
ror
lcall
outsl
sti
int
lret
add
mov
sub
lods
cmp
in
mov
pop
pop
loope
pop
inc
and
ror
xor
sub
xchg
mov
inc
repz
mov
add
mov
lods
mov
or
out
mov
pusha
dec
popa
push
or
jmp
insl
aas
cmc
and
fwait
cmpsb
mov
repnz
xor
adc
pop
pop
mov
push
push
bound
or
bound
test
xchg
xchg
mov
xchg
shrl
mov
lea
jo
jl
and
ror
mov
cmp
std
pop
mov
mov
fldcw
cmp
iret
mov
pop
mov
xor
xchg
into
loopne
out
push
fxrstor
imul
cmpsl
rol
lea
jmp
dec
out
ret
test
xor
pop
push
xchg
mov
test
decb
rcrb
icebp
daa
pop
sete
loopne
pushf
xchg
test
incb
cltd
pop
mov
mov
hlt
pop
push
mov
ret
fadds
clc
dec
add
sub
push
fsubrl
sbb
rol
mov
jle
and
mov
inc
sbb
cmpsb
add
cmpsl
push
cltd
xor
xlat
jecxz
mov
ret
out
je
jp
push
dec
sub
int
shrb
sub
or
ja
xchg
mov
inc
and
pop
aad
popl
jg
jbe
push
sbb
push
loop
imul
sub
and
shrl
cli
add
mov
test
gs
push
lret
mov
inc
loop
fwait
ss
divl
lret
stc
cli
mov
stos
push
xchg
scas
lods
loope
inc
test
scas
inc
rdpmc
das
xchg
cmp
jg
loop
xchg
rorl
jle
xlat
xchg
imul
pop
out
ds
mov
mov
lods
or
mov
movsb
cmp
add
push
ds
insb
jle
adc
insl
add
xor
push
out
mov
sbb
in
inc
lods
data16
in
js
sbb
imul
add
jns
pusha
jp
push
fiadds
jg
xor
sbb
push
mov
cmp
lock
inc
scas
and
inc
push
sub
ss
and
leave
jg
pop
jbe
sbb
xor
testb
lcall
clc
push
cmpsl
movsb
in
push
mov
xchg
popa
lock
shlb
negl
lret
iret
add
sub
push
pop
and
nop
mov
sbb
std
stc
push
leave
jne
shll
in
stc
cmc
gs
rolb
push
dec
mov
lods
outsl
das
push
inc
lea
xchg
clc
cmpsb
and
jb
stos
inc
outsl
lods
dec
testl
lds
mov
pop
jl
jge
or
mov
cmp
scas
cwtl
xchg
movsb
jl
jne
pop
pop
ss
jg
sub
clc
and
sub
pop
sbb
fwait
dec
sbb
rorb
cmp
xchg
or
mov
fs
loope
scas
shl
das
jnp
pop
in
xlat
mov
xor
inc
sub
aaa
inc
xor
cmc
xor
fadds
shl
fucomip
or
ds
lret
ret
aad
leave
ss
in
scas
and
jl
js
push
iret
cmp
das
push
leave
rorb
mov
jg
push
std
inc
out
jnp
out
xchg
mov
jns
sbb
pop
jle
das
subb
ret
xchg
test
xchg
adc
adc
cmp
sar
subl
pop
test
popa
rorl
dec
xor
push
jno
out
sbb
nop
mov
lock
ds
push
flds
push
notl
sbb
or
push
movsl
adc
xor
pop
pop
or
sbb
push
mov
or
je
in
add
int3
mov
out
gs
mov
push
loop
cli
mov
inc
es
cltd
scas
sub
out
sub
push
or
fdivl
hlt
cwtl
mov
mov
lea
ficomps
add
mov
dec
xchg
jns
daa
mov
jp
push
loopne
jns
inc
clc
jb
lods
xor
ds
data16
imull
movsb
sbb
cmp
test
lock
jns
in
pop
rorb
add
imul
jb
mov
popa
jecxz
mov
xchg
insl
lcall
jmp
test
sbb
xlat
or
add
loop
mov
les
test
out
repnz
cs
popf
inc
adc
push
iret
or
add
xchg
xchg
lret
push
fdivrl
jg
rorl
cmp
xchg
lea
or
repnz
dec
rcrb
imul
or
inc
add
enter
pop
repnz
xchg
push
lods
orb
pop
ficompl
jp
or
inc
and
cmp
mov
mov
data16
pop
adc
loop
or
push
mov
mov
mov
cld
loopne
loop
aas
aam
mov
adc
mov
cmp
adcl
jge
lret
cmc
aam
and
jno
xchg
cmpsl
mov
fildll
cmp
fsubl
fistps
mov
cmpsl
xchg
lods
pop
mov
dec
movsb
cmpl
js
aas
lock
jmp
dec
pop
jecxz
pop
push
paddb
push
mul
add
cs
and
outsl
mov
in
das
sub
scas
add
lods
or
cmp
into
ss
cli
mov
xor
cmp
push
fwait
inc
lret
mov
dec
push
add
pop
adcb
aas
cmpsl
dec
sub
sub
jl
leave
inc
cmpsb
movsl
and
stos
adcb
repnz
push
es
lds
flds
out
mov
in
mov
leave
testb
xchg
add
jp
in
and
int3
movb
sbb
xor
adc
insl
and
xchg
cmpsl
add
mov
out
or
or
inc
scas
pushf
jo
aad
pop
jb
xlat
aas
push
mov
push
scas
cmp
and
cmp
sub
fstps
pop
repz
in
fidivrl
aaa
mov
ss
mov
shlb
xchg
xchg
pop
pop
popa
sub
inc
aad
push
add
cmp
inc
je
lahf
dec
pop
or
mov
out
jp
or
cmp
shl
movsb
ret
daa
push
icebp
push
pop
cmp
int
and
aaa
jae
mov
dec
imul
mov
push
mov
lret
shr
pushf
xorb
xor
add
sahf
into
push
push
cli
sti
fcompl
and
ja
pop
loope
call
or
stc
mov
sarl
jle
lea
fstpl
jge
insl
into
and
roll
in
jbe
lcall
sbb
test
dec
in
jmp
cld
adc
movsb
or
dec
daa
cmp
jno
push
cmpsl
jl
sub
inc
sub
stos
sbb
movsl
jle
lds
pop
inc
sbb
cmp
inc
std
test
jmp
fsubrs
push
test
outsb
cltd
insl
lods
add
lods
andb
cmp
fxtract
les
dec
mov
xchg
pop
dec
imul
dec
test
roll
xor
mov
mov
hlt
das
stos
mov
cmpsl
cmc
test
dec
imul
imul
push
outsb
inc
or
test
sbbb
dec
xchg
inc
loop
pop
push
xchg
pop
hlt
sbb
ss
or
inc
ljmp
in
in
sbb
xchg
or
xchg
shll
push
outsb
repnz
push
and
enter
pop
mov
or
jmp
int
cmp
not
xchg
jg
jae
js
icebp
sbb
jp
or
in
repnz
lahf
lea
icebp
jne
pop
push
cwtl
adc
dec
sub
cmpsl
pushf
enter
push
dec
arpl
mov
push
pop
sub
push
jp
out
es
pop
adc
clc
push
mov
dec
out
adc
cwtl
jno
in
xchg
or
sub
in
jb
inc
addr16
xchg
inc
or
negb
fdivrl
push
cli
jge
push
test
xor
add
inc
movsl
insb
inc
insb
xor
shlb
addb
repz
inc
js
add
outsl
dec
push
lock
sbb
xchg
add
insl
jnp
enter
pop
push
and
jmp
icebp
fnstcw
cwtl
sub
xor
adc
popf
xor
pop
sbb
sbb
lods
out
ficoml
mov
sub
data16
jl
jl
cmp
icebp
jno
jae
out
sahf
xchg
out
sub
push
int
stos
popa
inc
cmp
hlt
sub
cltd
adc
mov
sbb
ja
cmp
inc
aas
lea
mov
cwtl
add
jecxz
xchg
and
push
add
in
and
stc
aad
jns
lahf
jp
das
inc
push
sbb
or
jp
xchg
inc
push
ret
imul
jno
test
dec
mov
fnstsw
mov
xchg
enter
sbb
adc
stos
cld
mov
mov
popf
push
xorb
lea
adc
out
adc
push
test
mov
decb
jno
adc
inc
nop
push
je
mulb
cmp
mov
fwait
inc
adc
inc
pop
aam
mov
dec
jb
mov
push
pop
push
stos
xor
icebp
cmp
inc
vshufps
push
xor
nop
inc
jns
push
fdivs
outsb
push
jae
mov
or
sbb
add
adc
mov
dec
and
jns
mov
adcl
mov
cli
fnstenv
iret
in
sub
in
xchg
cwtl
lret
xor
inc
jnp
jmp
xchg
imul
jl
cmp
add
mov
sarb
imul
mov
jle
pop
repz
es
sub
insb
inc
sahf
mov
in
shr
and
jg
sub
or
push
mov
ja
sub
dec
pop
and
mov
movsb
adc
jg
xor
or
jmp
push
mov
inc
jg
jl
ss
test
mov
lds
outsb
mov
addr16
lcall
ljmp
jg
mov
mov
push
add
jne
add
cmpb
movsb
mov
imulb
lods
fnstenv
fidivl
jle
outsl
xor
sbb
in
cmp
nop
jmp
pop
popl
jo
outsl
icebp
nop
loop
mov
inc
ret
pop
leave
loope
loope
pushl
flds
hlt
roll
test
out
mov
xchg
mov
mov
mov
scas
sti
dec
xor
adcl
int
sub
mov
icebp
fistpl
dec
inc
out
inc
cmpsl
rcr
mov
push
jo
idivb
sbb
aam
adc
push
adc
push
xchg
stos
xor
adc
pop
enter
fcoml
outsl
lret
inc
fwait
xor
cld
sahf
jmp
xchg
inc
ret
pop
scas
and
pushf
ficoms
mov
sbb
inc
lods
loopne
push
inc
pusha
push
pushl
mov
mov
add
notb
lock
pop
xor
push
and
movsb
iret
mov
insb
xchg
loopne
cltd
xor
or
movb
adc
out
mov
es
gs
repz
lcall
sub
loop
xor
add
fidivl
push
ljmp
add
cmpsl
or
sub
jae
sub
push
pusha
push
pop
add
ljmp
imulb
adc
xchg
out
leave
cmc
outsb
xchg
into
mov
scas
negl
push
mov
scas
jns
dec
mov
int3
xchg
iret
jbe
xchg
std
shl
test
test
dec
out
leave
push
jo
mov
jmp
aad
sahf
sarb
dec
pop
pop
dec
and
jno
scas
adc
jns
push
fstpt
xor
add
pop
lds
mov
xor
sub
movsl
add
movsl
adc
fs
dec
int
push
and
and
and
mov
shll
daa
fxch
jp
inc
cld
fadds
jge
inc
add
adc
add
inc
fdivrs
test
add
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
xor
xor
add
jmp
lret
ret
ds
mov
lret
xadd
xor
add
fists
out
jg
jae
js
mov
cmc
jo
aas
je
mov
mov
push
shlb
mov
xor
das
push
fldenv
lcall
outsb
jmp
cld
push
sub
dec
cld
in
cs
outsb
dec
mov
adc
lret
mov
adcb
push
mov
sbb
rcl
test
bswap
push
mov
sub
mov
shrb
xor
mov
inc
insb
enterw
mov
mov
hlt
jnp
jg
mov
adc
cmp
fs
fstpt
sub
int3
mov
cmp
sahf
fnstcw
pushf
popa
scas
fists
dec
les
push
in
mov
adc
mov
sbb
add
jecxz
iret
xchg
sbb
push
aad
dec
js
ffree
lcall
sbb
out
push
dec
movnti
xor
nop
pop
addr16
sub
pop
pushf
js
ret
mov
out
movsb
nop
fldcw
ret
add
and
and
dec
cltd
test
pop
and
push
and
add
mov
xor
or
outsb
cld
call
fwait
inc
xchg
adc
loopne
cmp
mov
jp
loope
mov
mov
mov
jns
or
out
andb
inc
daa
in
bound
fsubrs
paddusb
sar
xchg
scas
push
enter
xor
shrd
mov
inc
inc
push
jne
les
xchg
ja
jecxz
lods
or
adc
ds
and
vucomiss
dec
mov
pop
or
sarb
dec
pop
test
out
inc
int
fsubl
loop
enter
sbb
or
pop
and
fwait
mov
mov
les
mov
pop
sub
iret
mov
jle
adcl
xor
mov
adc
stos
mov
nop
sbb
lcall
jb
xor
popa
or
mov
xchg
test
cmc
je
mov
xlat
fwait
cmp
and
or
jno
popf
cltd
xchg
into
repz
fs
mov
sub
ss
in
xor
jl
dec
ss
mov
rorb
pop
sub
sub
jmp
xlat
pop
sbb
mov
mov
add
sbb
mov
fcompl
arpl
sti
jl
repz
out
sub
and
mov
cmpsl
dec
xor
sbb
mov
lea
push
les
jae
and
fldt
mov
push
jo
ds
mov
mov
and
clc
xchg
cmp
cltd
imul
mov
or
test
xor
addb
clc
loopne
and
dec
jmp
stos
addr16
pushf
cld
imul
push
data16
jb
jl
or
mov
out
jno
pusha
push
and
sarb
popa
sbb
mov
jne
mov
in
mov
adc
cwtl
loopne
add
outsl
out
leave
cmpsb
mov
dec
dec
test
mov
and
xor
pop
mov
cli
lods
dec
ljmp
notl
mov
inc
push
jg
xor
add
add
xorb
pop
push
adc
xor
cmp
and
cld
insb
out
leave
mov
jno
sbb
and
outsl
jp
add
je
stos
and
xchg
repz
and
lods
repnz
andb
cs
lock
movsb
and
sti
or
outsb
sbb
dec
push
pop
jmp
xchg
in
lret
sub
jae
xor
pop
cli
stos
popf
pop
or
pop
inc
dec
mov
inc
std
ljmp
sar
das
pop
mov
iret
es
pusha
jo
xchg
lahf
stc
push
lret
sbb
mov
daa
mov
repnz
call
mov
push
fucomp
addr16
addb
push
sbb
in
add
ss
jo
mov
xor
test
sahf
lcall
jmp
ds
in
scas
arpl
push
mov
or
shr
lret
xchg
sbb
nop
insb
xchg
pop
pop
cmp
mov
mov
sub
adc
cmc
leave
out
mov
cmp
pushf
clc
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
adc
jmp
mov
rcl
fcmovnb
fnstcw
or
lea
jg
jae
js
inc
aad
mov
mov
xchg
in
pop
notl
or
pop
mov
lret
jo
lods
adc
cmp
cmpsb
dec
cmpsl
mulb
jns
pusha
or
rcl
mov
sbb
in
sti
add
pop
gs
inc
imul
loopne
pop
jp
mov
pop
inc
int3
push
stos
mov
xor
push
mov
dec
out
test
sbb
mov
leave
push
js
test
insl
jne
repnz
cltd
jo
push
add
aam
pop
mov
mov
and
dec
xchg
popa
outsl
or
dec
sub
adc
mov
or
dec
cmp
ret
ljmp
jo
mov
test
lock
aam
mov
jne
mov
pop
idivb
mov
lods
jp
arpl
dec
lock
xchg
fldt
aas
je
scas
adc
jb
movsb
jmp
dec
cmpsb
popa
test
jnp
lods
jg
dec
xor
stos
dec
pop
rclb
mov
cli
cld
mov
dec
stc
sti
call
adc
and
adc
sti
mov
cmp
outsb
push
cmpsb
or
imul
and
sub
rorl
sub
push
gs
idivl
dec
mov
std
cmpsb
cs
imul
add
adc
and
push
mov
fldcw
push
cld
popf
ljmp
ja
decl
mov
cmpsb
xchg
jg
pop
mov
xor
mov
xor
in
popf
in
pop
popf
je
inc
mov
fisubrs
pop
pop
in
sahf
dec
lea
mov
std
sti
sub
test
push
add
adc
sbb
ret
repnz
inc
nop
jge
mov
insb
int3
xchg
enter
iret
das
cld
or
fldpi
pusha
aam
les
push
sub
mov
push
icebp
or
mov
bnd
shl
and
sub
daa
and
add
xchg
push
or
hlt
cmp
xor
push
and
mov
xlat
std
jp
scas
rcll
sahf
pop
cli
pop
jbe
lahf
or
js
aam
imul
pop
das
idivl
lret
sbb
dec
cmpsl
outsl
arpl
addr16
mov
mov
push
rcr
mov
stos
cmp
fmulp
lods
popa
mov
mov
jp
hlt
mov
call
xor
mov
gs
inc
sbb
adc
sbb
xchg
xor
in
dec
ds
scas
popl
xlat
das
mov
inc
outsl
push
sub
pop
sub
xchg
sub
push
mov
and
jbe
sub
and
sub
or
mov
mov
jge
inc
shl
pop
mov
std
movsb
subb
jp
pushf
repnz
add
and
jo
sti
int
pop
sub
xor
out
mov
sti
add
mov
fs
aas
and
push
fcompl
nop
pop
int
mov
outsl
xlat
arpl
imul
or
xchg
mov
xchg
mov
jg
cmc
sub
sbb
dec
fstl
sbb
dec
pusha
jmp
movsl
das
into
mov
stos
loope
pop
imull
lea
repnz
cmp
push
aas
push
scas
stc
inc
mov
fisttpll
pop
jl
or
lods
adc
add
mov
push
pusha
icebp
sub
mov
push
bound
fs
test
mov
adc
in
stos
cmpsl
inc
adc
dec
outsl
imul
cmp
scas
pop
andb
lds
rcll
fistl
cld
scas
pop
call
and
fidivs
mov
sbb
clc
add
fcoms
insl
adc
test
dec
xchg
stos
mov
inc
cmpb
mov
mov
and
mov
fidivrl
or
jp
aam
pop
mov
subb
mov
adc
jnp
movb
and
inc
fdivp
pushf
mov
sub
cmp
and
sub
insb
jmp
hlt
pop
int3
stos
xchg
fisttps
popf
fwait
adc
repnz
adc
xchg
rorl
xlat
aaa
rorl
inc
les
jb
iret
mov
cltd
iret
mov
mov
in
jg
and
push
xor
sbb
mov
adc
test
add
jmp
lret
leave
int
int
fxch
sub
lret
jns
jg
jae
js
pop
fwait
mov
push
ds
mov
les
ja
inc
dec
add
out
cmc
sub
leave
mov
mov
rcll
dec
push
lods
repnz
or
sub
xlat
stc
test
pop
pop
xor
lods
sti
mov
mov
add
jb
in
push
adc
sub
mov
jne
fcoms
jmp
jbe
mov
and
inc
fildll
je
ror
xor
arpl
outsb
add
push
repz
dec
std
jbe
push
mov
or
mov
adc
xchg
pushf
mov
aam
add
cmp
nop
push
mov
xchg
inc
jmp
leave
addl
clc
pushl
push
pop
dec
dec
or
fsubs
rcll
repnz
cmp
data16
leave
test
bnd
mov
mov
insb
ljmp
pop
sbb
jmp
jecxz
les
xor
ja
out
stos
dec
scas
pop
fwait
adc
sbb
test
xor
lahf
ja
loopne
fcomi
fimull
fidivs
repz
push
sahf
push
outsl
mov
add
mov
push
dec
sbb
clc
and
lods
fstps
mov
fxch
or
xchg
cmp
mov
jns
out
std
or
mov
leave
repnz
xchg
shlb
lods
ret
sbb
icebp
call
push
pop
sub
inc
or
mov
repnz
xchg
into
mov
ficomps
jmp
jnp
rol
xchg
loope
xchg
jno
mov
pop
int
mov
xchg
in
add
cmp
sahf
sbb
jle
add
or
push
std
xorl
inc
mov
mov
dec
testl
adc
sub
jb
lcall
xchg
xchg
sahf
pop
xor
in
jle
repz
adc
xchg
dec
push
inc
xor
xor
in
mov
or
add
scas
inc
mov
mov
push
push
fwait
sbb
mov
mov
lods
stos
test
mov
cltd
outsl
and
faddp
stc
xchg
icebp
ret
push
fwait
inc
bound
xor
pop
jge
mov
iret
test
xor
out
addb
jecxz
popa
or
cmp
je
ja
cltd
popa
xor
cltd
fs
adc
pusha
sahf
push
ret
add
mov
mov
jno
bound
add
dec
decb
xchg
or
les
mov
sub
call
adc
jmp
and
addr16
ret
mov
xchg
call
lods
pop
inc
xor
xor
es
push
lock
sbb
int
mov
icebp
in
sub
mov
dec
xor
mov
pop
mov
dec
xor
dec
or
xor
cmp
stc
insl
stos
lock
les
add
sub
xchg
sbb
and
bound
mov
cmpsb
sbb
jl
pushf
pushf
mov
test
sub
jg
push
arpl
xor
icebp
cmp
test
add
jl
sbb
es
mov
xchg
xchg
sub
xor
mov
loopne
movhps
push
cmp
jge
imul
ja
lea
pop
stos
add
repz
cmp
loopne
dec
bound
repz
inc
dec
int
ret
lcall
push
mov
xchg
and
stos
cli
xchg
fidivrs
push
outsl
ja
jp
les
movsb
lods
xchg
fsts
test
mov
gs
aad
jecxz
dec
nop
xor
out
rolb
test
loopne
push
mov
xlat
sub
jo
mov
in
xchg
xchg
movsl
out
mov
push
fiadds
lret
outsb
test
loop
mov
sub
test
push
insl
leave
rol
inc
push
cmp
pop
daa
add
je
bound
pusha
jbe
cmc
mov
test
ds
ljmp
xchg
dec
push
jns
xor
xor
int
ja
cmp
push
ret
pop
adc
sub
xor
jle
and
xlat
pop
das
lea
mov
cmp
jle
leave
xor
int
add
adc
insb
sub
adc
int3
lods
mov
sub
xor
sbb
sbb
cwtl
xor
pushf
or
repz
or
xchg
jle
mov
out
jle
cmp
fwait
mov
push
incl
dec
dec
mov
std
lods
pop
dec
into
dec
std
jg
sbb
inc
mov
adc
fadd
inc
enter
clc
movl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
jmp
iret
cmp
fld
outsl
fisubrs
insb
clc
jg
jae
js
adc
fbld
lret
ds
mov
loope
je
addr16
dec
push
or
outsl
imul
or
jnp
xor
adc
jbe
push
mov
movsl
add
and
push
dec
js
int3
mov
divb
jb
les
in
xchg
sub
pop
jo
sbb
jae
jne
stos
inc
cmpsl
es
jo
cmpsb
add
jp
adc
sbb
jnp
in
xor
out
push
dec
mov
sbb
jbe
stc
fmull
pop
insl
fnstcw
stc
push
mov
je
aas
mov
and
test
inc
push
cs
rol
cmp
bound
xor
mov
aam
cmc
je
std
jmp
outsl
inc
add
mull
mov
mov
shrl
and
push
adc
pop
add
fcmovu
and
mov
jecxz
sbb
inc
popf
pop
pop
or
out
nop
mov
leave
leave
fistl
mov
xchg
es
or
pop
xchg
mov
jmp
repz
cmp
jle
bound
xchg
jns
outsl
push
dec
je
mov
push
jo
jmp
imul
add
or
fildl
lahf
push
push
les
dec
rorb
mov
xchg
cmp
or
push
push
in
dec
inc
sbb
andl
pop
mov
jb
xchg
jnp
xchg
ret
sub
aas
pop
xchg
mov
jo
cmp
fs
xchg
xchg
ffree
jo
popf
dec
add
adc
mov
adc
push
shlb
sub
faddp
clc
mov
ficompl
sub
sbb
dec
daa
inc
mov
jmp
popa
cmp
test
xchg
sbb
cmp
cli
fidivl
test
mov
mov
mov
push
repnz
pop
ds
add
push
push
fnstcw
imul
push
mov
jmp
xor
push
cmp
inc
xchg
imul
mov
mov
xlat
jecxz
mov
lret
flds
or
pop
mov
fsubl
xchg
mov
add
adc
pop
jnp
int
pushf
leave
daa
mov
das
popf
push
fsubrp
or
mov
and
aam
dec
mov
outsl
dec
cmpsb
inc
call
xor
pop
std
mov
enter
fsts
xchg
shll
sub
pop
dec
loopne
js
dec
inc
xor
scas
and
or
mov
mov
ds
icebp
push
cmpsb
test
xchg
into
mov
das
scas
std
sub
es
out
push
xor
test
xor
and
adc
push
pop
push
je
push
sub
popl
jne
dec
arpl
dec
scas
cmp
pop
xchg
outsb
aad
inc
jl
outsb
jg
out
iret
pop
xor
adc
je
insb
test
or
test
jle
nop
jp
or
add
lds
mov
jae
xchg
adc
imul
rclb
leave
popa
aam
mov
sub
int
adc
sarb
mov
scas
rolb
jecxz
sub
sahf
pop
shll
sti
inc
test
push
fwait
data16
dec
dec
clc
shll
ja
pusha
aam
movsl
stos
imul
xchg
cmp
pop
or
jo
ja,pn
add
addl
in
notl
xchg
push
mov
ffree
push
mov
jp
inc
in
in
mov
jb
xchg
dec
loope
pop
repnz
int3
xchg
push
mov
and
ret
xchg
pop
inc
shl
fs
pop
outsb
mov
cmpsl
in
mov
dec
xor
and
mov
out
or
cmc
insb
pop
aam
out
popf
sbb
mov
adc
add
dec
scas
mov
fnsetpm(287
cbtw
shrl
hlt
mov
es
sub
pop
or
int3
call
subl
loop
fdivs
int3
lods
es
dec
cwtl
cmp
ror
mov
mov
mov
repnz
sbb
push
sbbb
jle
inc
cmpsl
mov
push
insl
mov
jge
mov
and
inc
out
jecxz
sub
inc
outsb
jecxz
or
mov
es
ficoms
and
lcall
gs
xchg
lods
mov
jb
mov
mov
stc
cmp
push
and
pushf
adc
lcall
mov
push
push
std
sbbl
dec
xor
fisubrl
rorb
lea
cmp
movl
je
push
movl
jmp
mov
adc
jmp
lret
rol
lret
lret
and
adc
inc
sti
pop
mov
jg
jae
js
addl
sub
pop
enter
in
push
arpl
setno
lods
adc
lret
int3
mov
mov
shrb
or
ret
cmc
sub
icebp
sub
mov
popf
loop
dec
ljmp
add
mov
jle
or
out
add
and
or
jae
xor
jnp
rol
ficomps
fldcw
sbb
sub
mov
xchg
es
movsl
jb
jle
stc
jmp
cmp
outsl
je
push
nop
std
and
xlat
xor
stos
mov
out
adcb
inc
jns
lcall
mov
dec
and
mov
mov
xchg
jno
dec
es
repnz
out
imul
and
insw
mov
and
xchg
stos
iret
jmp
mov
dec
mov
jmp
lods
mov
fistl
cmp
pusha
lock
sbb
jecxz
imul
clc
pusha
jnp
cltd
cwtl
fldenv
push
cmp
mov
pusha
popa
out
in
mov
mov
push
sahf
pop
sub
ja
daa
push
clc
mov
cmp
hlt
mov
sub
inc
mov
pop
mov
cli
jp
jae
scas
loope
jb
fimuls
aad
xchg
push
push
repz
sbb
push
lods
outsb
fiaddl
call
mov
xor
sti
cmp
push
cmp
jp
lea
popf
add
push
jbe
pop
imul
pop
ret
icebp
shlb
mov
jae
lret
sub
loope
insl
outsl
or
add
mov
cmc
adc
push
inc
inc
ret
int
xchg
jns,pt
xor
cmp
pushf
push
fs
cmp
push
dec
jbe
sub
cmp
and
cmpsb
js
sti
push
mov
lods
loopne
inc
mov
sbb
leave
shrl
push
and
rcrl
mov
jp
jbe
pop
jb
and
dec
orl
jge
mov
xchg
aas
pop
popa
and
add
rolb
push
jge
dec
adc
xchg
sub
lock
mov
sti
push
and
mov
inc
je
lods
or
shll
lret
inc
jnp
fisubs
cmp
std
push
cmp
sbbl
ja
pop
sbb
cwtl
cmpsl
subl
and
and
in
mov
fnsave
pop
outsl
sahf
negb
push
test
scas
mov
xor
into
mov
mov
pop
adc
mov
add
add
stos
jg
jle
add
mov
sbb
stos
test
cmp
cwtl
stc
xor
lock
aaa
mov
xchg
scas
nop
adc
icebp
or
js
mov
aad
addb
mov
std
hlt
fs
jmp
jnp
pop
mov
xchg
fisttpll
gs
mov
stos
mov
cmp
push
ret
jb
fs
loop
mov
cli
mov
dec
or
add
jno
inc
leave
fst
fists
push
mov
and
out
pop
fs
les
dec
rclb
xor
movsb
cwtl
inc
cmp
loopne
cltd
scas
mov
les
xchg
mov
mov
nop
xchg
inc
stos
jae
mov
xor
arpl
lock
add
ljmp
shrl
es
cwtl
ficomps
sbb
imul
sbb
mov
in
pop
add
push
mov
sub
xchg
adc
cmp
push
or
in
imul
cmp
leave
mov
test
in
mov
scas
jbe
outsb
mov
mov
clc
jl
inc
mov
push
cmp
mov
adc
loopne
pop
pushf
jp
xchg
xchg
mov
mov
xor
mov
dec
inc
outsl
adc
cltd
out
sbb
clc
mov
aam
std
mov
mov
call
inc
lods
arpl
push
subb
fcomi
rol
imul
das
cmp
xchg
push
mov
in
stos
sub
test
mov
xchg
loop
repz
inc
xchg
jne
adc
dec
loope
mov
and
fdiv
inc
mov
ret
testb
leave
cld
insl
test
push
inc
push
pusha
stos
shll
jecxz
adc
xor
fimull
cs
jne
mov
mov
xor
gs
xchg
std
add
shlb
add
cmp
jge
movl
sub
mov
addl
xor
andl
add
movl
jmp
int
enter
int
stos
nop
lret
mov
jg
jae
js
xchg
mov
and
adcl
out
pop
test
pop
sbb
dec
adc
cmp
mov
mov
dec
enter
mov
int
pop
xchg
movsl
cmp
xchg
loop
pushf
inc
lods
inc
roll
sahf
es
push
outsl
lods
hlt
std
cmp
add
mov
mov
outsb
pop
jle
sti
jo
aaa
pop
adcl
js
sbb
xchg
gs
push
or
cmpsb
jns
mov
add
stos
inc
popw
fistl
inc
jmp
or
sarb
int
gs
xor
leave
adc
mov
jne
aad
or
popa
sbb
sub
cld
mov
mov
sub
and
or
add
bound
je
xchg
mov
jno
cmp
fdivrp
cwtl
test
jmp
add
xchg
jl
or
jp
stos
lock
out
popf
hlt
jmp
and
pop
pop
xor
popa
cli
dec
lea
sarl
and
popl
aad
int3
mov
pop
lcall
aad
xor
jecxz
sbb
pusha
inc
repnz
jne
cmpsb
imulb
inc
inc
test
sti
ss
aaa
sbb
mov
fcomps
je
lahf
dec
ja
and
mov
mov
add
or
dec
rcrl
jo
fimull
lea
out
push
inc
mov
push
test
ret
add
add
aad
pop
pop
fwait
lods
and
or
ds
dec
mov
jg
sub
gs
lret
push
push
cld
dec
aad
orl
and
mov
jmp
xchg
mov
in
xchg
add
xchg
repnz
mov
jecxz
scas
ficompl
cmp
adc
aad
xor
xlat
jp
sub
fdiv
imul
loop
jb
out
adc
mov
jnp
xchg
xor
mov
xor
sub
inc
xchg
xchg
das
out
pop
and
mov
rcr
out
inc
pop
fsubs
int
sbb
sbb
loope
push
mov
call
ret
lods
lods
mov
cltd
imul
push
out
cmpb
and
lret
xchg
and
rcl
rclb
fsubr
pop
faddp
addr16
xchg
cmpsb
sub
sub
dec
ss
push
xor
push
xchg
roll
lea
xor
cmp
hlt
or
pop
mov
sti
inc
mov
mov
outsl
pop
test
je
pusha
clc
jb
add
mov
sarl
in
xchg
pop
nop
in
sub
lock
clc
loop
sbb
aam
aad
mov
les
or
or
into
xchg
jp
jne
mov
fwait
mov
and
dec
fsubs
cli
adc
cmp
jge
aad
pop
out
mov
mov
jno
mov
mov
sbb
das
xor
jge
mov
out
jecxz
repnz
sbb
adc
pusha
fs
rorl
jmp
fsubp
inc
lcall
insb
push
pandn
in
pop
rcrl
aaa
into
cmp
or
bswap
jp
scas
enter
repz
cmp
adc
and
fcoml
dec
sbb
or
mov
push
lcall
ja
adc
sub
mov
sub
addl
pop
xchg
icebp
cld
mov
inc
lcall
in
fimuls
xchg
xchg
fcomps
clc
mov
mov
sbb
push
mov
stc
movsb
push
jns
cmp
xor
add
sbb
jo
sbb
sti
imul
pop
mov
mov
cmp
jns
adc
pop
inc
push
mov
xchg
push
in
push
mov
lea
ret
pop
cld
sbb
adc
adcl
cmp
and
jecxz
stos
or
push
mov
mov
shll
pop
ss
mov
out
cmpsl
ljmp
addr16
sub
pop
inc
sub
mov
dec
add
sub
pusha
sub
pop
fnstenv
cmp
sbb
sbb
call
in
cmp
xchg
insl
xor
or
jns
sub
leave
scas
lock
push
cmpsb
call
sbb
jmp
xchg
xchg
cli
pop
test
cmp
jmp
xchg
fwait
repnz
rep
xchg
imul
push
mov
sbb
jl
fisubrl
add
or
into
insl
cmp
jmp
lret
leave
shrl
mov
adc
jg
jae
js
push
in
in
in
mov
push
pop
xchg
dec
repz
call
mov
sbb
xchg
push
js
imul
xor
mov
data16
cmpsb
ret
inc
push
test
dec
test
mov
adc
mov
cltd
shl
inc
adc
push
pushf
xor
push
xchg
mov
cmp
inc
fcmovbe
in
outsb
push
lods
pop
std
sub
jle
xchg
sarl
adc
les
sbb
cld
mov
jns
and
inc
pop
addb
das
cmp
fninit
xorl
push
hlt
mov
xchg
fisubrs
fsubrl
inc
inc
dec
xchg
jne
dec
push
mov
adc
frstor
daa
xchg
xor
adcb
jno
xchg
cmp
insb
cmp
int
sub
xchg
jae
in
mov
inc
cmpsl
fsubl
ja
dec
push
and
movsl
fcoms
and
dec
das
aaa
push
or
adc
mov
subl
andl
add
cmc
push
xchg
leave
loope
add
dec
imul
js
aaa
push
ret
dec
in
bound
push
popa
mov
xchg
ljmp
stc
cltd
test
mov
push
arpl
xchg
xchg
lock
lret
out
xchg
aam
xchg
cmp
pop
push
adc
jb
int3
ret
cmc
jns
popf
adc
mov
rcll
ret
fadd
or
sub
ret
push
je
xor
dec
mov
push
js
or
pop
pop
stc
lds
mov
cmp
ljmp
mov
loope
rcl
aam
xchg
jae
add
push
and
push
stos
ficoml
add
in
gs
xchg
push
dec
out
jle
cmp
iret
add
lea
push
cli
lds
xchg
dec
adc
mov
xchg
pop
push
cmpb
aam
outsb
loop
jl
xchg
jecxz
hlt
xlat
inc
enter
data16
xor
pop
in
push
std
dec
xchg
add
sub
mov
add
filds
subl
xchg
mulb
dec
sbb
mov
outsl
push
movsb
lods
mov
mov
cmp
rolb
cmc
subl
push
add
mov
inc
add
adc
cmp
dec
mov
push
pop
lcall
jge
divb
cltd
mov
fadds
cs
sub
mov
and
push
mov
gs
mov
fisubrs
out
lea
stos
add
bound
movsl
dec
push
mov
and
pushf
divb
pop
fdivrs
push
shlb
lea
jg
add
in
xor
mov
cltd
sbb
dec
daa
fisubrl
lret
loopne
pushf
mov
inc
sahf
fidivrl
and
jae
fidivrs
hlt
iret
inc
je
arpl
cmp
lret
cmp
jbe
test
stos
lods
dec
aad
sbb
shl
mov
cli
insb
les
inc
adc
divl
repnz
lret
xchg
in
movsl
divb
stos
jnp
adcl
inc
scas
adc
jg
out
cmp
test
lahf
mov
stos
cmpsl
fidivrs
sub
rorl
adc
imul
fisttpl
jecxz
adc
cmc
xchg
pop
pop
and
dec
notl
adc
pop
jno
add
movsb
mov
sub
cmpsl
inc
lock
mov
imul
push
mov
fldenv
or
std
orl
mov
and
cmpsb
pop
ret
cs
push
das
inc
pop
js
dec
xchg
rcll
shll
scas
and
std
add
cmc
mov
mov
push
dec
sbb
andl
xchg
push
dec
dec
out
out
pop
jmp
outsl
cmc
testl
test
xor
lcall
or
jmp
xor
pop
pop
mov
xchg
daa
lret
mov
js
mov
or
test
dec
lahf
xchg
imul
daa
lcall
out
jge
jmp
inc
mov
cmp
fadds
fnsave
jns
dec
ss
dec
fwait
xor
push
sti
and
out
add
jno
dec
cmp
or
cwtl
fdiv
les
clc
cmpsb
stc
sbb
fistl
pop
lods
and
pop
divl
idivl
mov
fidivs
das
lcall
cmp
fdivrl
jmp
fisttpll
xor
add
mov
mov
jmp
into
iret
iret
cmp
cmp
shl
aad
je
nop
sbb
jg
jae
js
mov
cmpsb
pop
xchg
mov
xor
jo
sarb
sub
inc
sub
dec
dec
or
jle
lcall
cli
pop
xor
subb
inc
fsubrl
push
mov
push
xor
pop
and
mov
sub
dec
add
enter
xchg
jae
call
sub
repz
shlb
jbe
and
xchg
roll
xlat
and
repnz
out
aas
mov
push
dec
inc
mov
sti
or
ret
mov
fs
add
data16
lods
jmp
out
test
sahf
into
test
sbb
cld
gs
pop
ret
pop
adc
xchg
out
in
fnstsw
jo
add
insl
cmc
mov
out
in
add
shll
pushf
jmp
call
aam
add
xor
andl
push
dec
inc
leave
int3
aas
mov
mov
or
cmc
les
outsb
test
xor
and
xor
inc
test
pop
jg
sbb
js
stc
dec
lret
mov
lcall
or
shrl
out
ss
push
mov
mov
pop
je
mov
jns
jecxz
jns
jp
jne
dec
or
add
push
jnp,pt
subl
xor
test
adc
test
push
in
pop
or
jnp
shlb
adc
mov
jge
jecxz
jp
lcall
or
leave
test
enter
mov
pop
leave
mov
insl
jbe
sbb
gs
dec
nop
int
stc
daa
xchg
fldcw
mov
dec
add
jmp
dec
into
fcmovnbe
sbb
pop
fildl
mov
mov
add
push
sub
pop
dec
rolb
push
cmpsl
call
call
enter
mov
gs
out
mov
pop
mov
jg
out
pop
cwtl
idivl
lahf
and
sub
push
dec
shrl
inc
cmp
dec
add
mov
pop
push
cli
enter
shl
pushf
ret
mov
arpl
test
test
pop
dec
adc
hlt
and
shl
repnz
outsl
in
add
loope
icebp
aaa
lahf
sbb
xchg
pushf
pop
int3
es
xchg
test
jle
das
push
ss
cli
mov
aas
push
stos
lret
jne
das
and
cmpsl
enter
jno
jbe
jp
xchg
test
cmp
jne
mov
aam
lods
popf
clc
aad
pushf
sbb
insb
fisttpll
pop
xor
orb
out
or
gs
pop
fistps
loop
inc
movsl
cmp
sub
loop
ds
xor
arpl
jl
push
loope
push
pop
aam
jno
lret
pop
inc
xchg
adc
test
test
movsb
ss
adc
xor
xor
in
movsb
jmp
xchg
inc
mov
or
in
adc
inc
test
or
sti
jle
and
ss
outsl
ret
mov
xor
mov
pop
clc
or
or
pop
inc
sarl
pop
fs
ss
cmp
scas
stc
mov
or
jecxz
call
mov
add
mov
push
jp
ss
adc
repz
mov
xor
and
push
or
cmpsl
mov
mov
sar
cltd
ret
jg
into
cwtl
aas
mov
cmp
rorl
xchg
xor
xchg
mov
push
mov
jge
fldcw
push
test
test
int
dec
les
push
jno
pusha
push
repz
mov
icebp
add
test
js
adc
mov
xchg
clc
sbb
mov
imul
inc
mov
xorl
ljmp
addr16
shll
int3
aam
out
aaa
inc
and
jle
bound
fwait
and
xor
daa
pcmpgtb
xor
or
xlat
sbb
inc
mov
mov
xor
fadds
pop
jnp
ds
mov
push
dec
inc
js
jecxz
and
pusha
jnp
cmp
fbstp
pop
dec
pop
scas
xor
mov
push
repz
jg
int3
add
mov
sbb
lcall
mov
xchg
jns
ficompl
lcall
mov
mov
push
pop
pop
scas
lret
cmp
aaa
push
cmp
test
std
out
fwait
adc
jb
andl
xchg
pop
xchg
push
xchg
test
into
pop
push
pop
into
jle
std
scas
insb
xchg
cmp
in
xor
add
jmp
ror
cmp
aam
fistl
ret
push
js
jl
js
das
leave
add
hlt
test
sbb
sub
or
cs
lock
add
mov
push
push
push
nop
adc
lahf
push
insl
int
inc
xchg
js
cs
mov
inc
sub
repz
add
fsubs
mov
lcall
ss
repnz
sbb
mov
addr16
mov
movsb
and
insl
mov
pop
sbb
mov
test
ss
mov
aas
dec
pop
and
out
imul
mov
push
push
push
cltd
dec
xchg
fdiv
rorl
push
xchg
xor
xchg
mov
dec
inc
mov
je
das
lcall
insl
inc
loopne
add
inc
and
int3
lahf
add
mov
pushf
push
popf
fdivr
repnz
or
loopne
outsl
idivl
out
and
and
or
test
add
push
add
loopne
jnp
rolb
xchg
adc
repnz
inc
lahf
loope
ror
cmp
loop
mov
lahf
inc
cmc
sub
pop
cs
xchg
and
rol
and
jb
mov
xor
pop
and
pop
jb
push
sbb
mov
cltd
loop
outsl
and
jle
test
repnz
enter
stos
add
and
scas
sar
insl
in
enter
fs
out
pop
inc
icebp
and
dec
scas
push
popf
sarb
pushf
daa
jb
ljmp
call
in
in
jnp
test
test
push
sbb
stc
xor
adcb
sbb
leave
outsl
mov
ss
popf
in
mov
mov
mov
inc
pop
jg
adc
mov
mov
jl
or
add
and
fstps
dec
sub
mov
movsl
push
movsl
or
mov
mov
cmpsl
inc
or
cmpl
adc
cmc
fwait
mov
sub
std
inc
in
rolb
pop
cmp
pop
je
cs
rorb
dec
popa
shr
lock
jmp
cltd
insb
mov
mov
outsb
jns
lret
sub
add
stc
pop
mull
xor
orb
sbb
mov
sub
sub
lds
inc
cmp
lea
jne
imul
or
add
jno
pop
xor
and
daa
inc
add
jne
jecxz
push
mov
ljmp
in
test
mov
sbb
sbbl
out
cmc
fs
jno
in
or
sub
inc
aaa
jle
std
ss
add
or
dec
jecxz
pop
push
aad
mulb
adc
mov
jo
push
ror
mov
popa
js
mov
in
movsl
push
xor
pop
lret
adc
dec
int3
push
das
dec
adc
jnp
xchg
adc
in
aad
dec
arpl
or
sbb
pop
fisttpl
shll
test
out
ja
mov
jb
sti
arpl
or
sub
in
repnz
fidivl
test
adc
xchg
sbb
pusha
inc
ljmp
loope
jae
jge
push
xor
repnz
outsl
xchg
rcrb
je
push
inc
mov
scas
jmp
xorl
or
mov
jle
repz
pop
arpl
xchg
fimuls
push
xchg
cmp
outsb
and
push
sbb
jne
or
aad
mov
fdiv
adc
and
mov
test
mov
repnz
push
mov
or
insl
or
out
in
nop
js
adc
mov
std
cmp
and
inc
or
pop
mov
in
cld
sub
outsl
and
pop
jae
addr16
fs
cmp
std
inc
mov
mov
jp
fcompl
mov
cltd
int
mov
sahf
jae
xor
call
loope
xor
xchg
test
add
popa
dec
jp
xor
iret
fisttpll
test
push
sbb
inc
mov
sub
sarb
ljmp
mov
test
sti
in
pop
or
mov
in
lcall
jae
pop
sbb
mov
or
push
fsubl
in
ret
xor
fsubrs
popa
push
shrb
adc
lock
xchg
out
jne
inc
push
cmp
add
cwtl
pop
adc
pop
dec
xor
fnstenv
pushf
call
or
int
aad
int
sahf
pusha
mov
lcall
cli
daa
insl
cmp
or
mov
fs
bound
mov
sarl
imul
or
adc
in
mov
in
sub
and
pop
test
fsubs
std
test
sti
rcll
cltd
jmp
sarb
mov
cmp
sub
inc
scas
int3
mov
dec
or
aaa
das
popa
adc
popf
shlb
cmp
mov
ret
inc
inc
leave
pushf
test
bound
loope
hlt
xor
cmp
ja
mov
shl
sub
jno
adc
push
jecxz
sbb
sbb
add
and
jbe
mov
jns
aaa
cmp
jmp
or
cmp
mov
push
ss
mov
mov
pushf
ljmp
fucom
or
xor
mov
stc
push
and
cmp
sar
xor
cmp
popf
cmp
popf
idivl
sahf
test
mov
push
inc
fbld
jae
roll
and
sub
jns
inc
inc
xor
in
enter
dec
inc
pushf
lcallw
adc
stc
aaa
mov
andb
push
mov
test
mov
imul
pop
sub
and
or
scas
push
rorb
push
mov
xchg
mov
and
add
inc
xor
xchg
pop
mov
scas
or
xor
push
or
repz
loope
and
jl
mov
pop
jmp
pop
scas
sub
jno
icebp
imul
int3
mov
lcall
push
pusha
inc
mov
add
pop
pusha
mov
pop
push
mov
mov
and
jb
inc
arpl
outsl
mov
lret
sbb
inc
dec
dec
out
scas
mov
pop
pushf
cmp
popa
mov
adc
dec
adc
push
fimuls
cmp
in
mov
xor
mov
mov
fldt
lret
mov
popa
mov
es
out
and
and
daa
insb
and
xchg
test
dec
movsb
mov
pop
xlat
mov
and
xor
sub
push
add
adc
lret
adc
test
fsub
cltd
pop
js
outsb
sbb
dec
imul
add
pop
and
daa
popa
xchg
mov
push
iret
add
mov
insl
in
outsb
sub
mov
xlat
rorl
stc
mov
sub
pop
int
and
mov
xchg
rclb
in
sub
sbb
movzwl
cmc
xchg
or
push
cmp
lods
fstps
aas
jp
dec
repz
lock
mov
mov
xchg
loopne
lcall
jb
jmp
cli
push
mov
mov
jb
xor
call
or
cmc
xor
inc
ret
jns
test
inc
dec
ljmp
stos
inc
das
adc
and
fldt
push
ljmp
fmull
jne
fwait
int3
add
inc
jp
cmp
pop
jne
sbb
pop
repz
mov
popa
jb
jg
lods
add
mov
jae
cmc
adc
lret
sub
xchg
mov
mov
or
pop
adc
jecxz
gs
fwait
push
sub
cmpsl
and
xchg
scas
jae
jmp
inc
loop
sub
movsl
and
cmp
xchg
and
jecxz
ja
bound
cmovo
scas
cli
nop
xchg
inc
stos
ds
cltd
dec
lahf
mov
jmp
iret
mov
mov
pop
fisubrl
outsl
outsb
fcmovu
inc
and
js
and
xchg
push
clc
push
cmp
push
mov
fadds
movsl
inc
xlat
imul
adc
pop
and
adc
sbb
movsb
or
add
ret
repz
push
add
push
or
repz
sub
jle
sub
loop
sub
mov
loope
cmp
dec
outsb
sti
fisubrl
sbb
ss
or
je
in
inc
xchg
das
pop
cmp
mov
jle
shr
mov
mov
iret
lods
rcrb
stc
scas
push
in
bt
or
adc
jb
add
mov
shll
std
push
or
sbb
leave
and
iret
lret
adc
mov
mov
xchg
and
cmp
leave
cmp
pop
xchg
lret
mov
jg
inc
pop
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
jmp
cmp
fcmovnbe
rolb
cmp
jae
js
adc
jecxz
aad
xor
xor
push
fdivr
dec
andl
aaa
add
lret
stos
out
scas
popf
xor
jnp
xor
and
clc
mov
call
add
inc
push
repz
cld
cmpsb
push
adc
push
xchg
jge
mov
loop
xchg
add
int3
test
dec
xor
out
cmpsb
or
data16
cld
or
sbb
dec
enter
cld
push
lock
mov
mov
pop
push
xchg
mov
pop
jae
icebp
sarb
cli
sbb
push
mov
mov
lret
and
sub
push
imul
adc
mov
jmp
cmp
adc
pop
xor
ljmp
ret
and
mov
lock
cmp
aaa
pop
or
fnstcw
push
nop
outsl
xor
push
or
lock
test
jnp
pop
xchg
xchg
ljmp
dec
inc
push
fcoms
lret
dec
in
movsl
and
jp
or
and
sub
sub
xor
loope
fstpt
mov
ljmp
or
jno
push
jne
mov
fmulp
scas
or
out
cmp
push
cmpsb
cmpl
jp
jmp
mov
or
mov
addr16
mov
leave
add
inc
mov
push
sub
andl
test
rcl
or
dec
jne
sbb
jmp
sti
daa
stc
jo
jle
sub
fiadds
or
xor
and
mov
lret
loop
push
dec
add
jnp
jns
pusha
lcall
pop
imul
push
adc
and
pop
or
insb
jno
mov
cmp
dec
test
int
push
jbe
loope
cmpsl
xor
jne
pop
inc
mov
adc
dec
cmc
fisttpll
pop
leave
sbb
jnp
jns
push
icebp
mov
xchg
xchg
xchg
pop
mov
bound
fidivrl
xor
inc
rolb
lret
js
xchg
jae
mov
or
insl
ds
xor
mov
sbbl
sbb
movsb
into
fsts
lcall
xchg
or
dec
ds
sbb
mov
pop
fisttpll
out
clc
inc
xor
adc
fsts
aam
movsl
rcll
and
inc
push
int3
push
pop
inc
push
jecxz
in
inc
ds
dec
cmp
sar
in
out
sti
ds
sbb
mov
mov
shll
ret
or
or
and
cmp
inc
inc
mov
mov
mov
pop
xlat
jmp
sbb
sbb
xchg
mov
shr
pop
mov
sbbl
sub
dec
nop
cmpsb
ja
jbe
pop
aam
testl
cwtl
aam
xlat
lds
mov
cltd
xor
sahf
xor
sub
sbb
pop
repz
pusha
mov
xor
out
rorl
or
xor
hlt
int3
jmp
popa
out
sbb
jl
adc
or
popf
hlt
pop
sahf
xchg
mov
push
jmp
jge
cmc
out
outsl
dec
push
sbbl
lret
sub
mov
loopne
aaa
out
xor
lea
cld
pop
shrl
jns
fwait
cmp
and
push
jo
fwait
dec
dec
jne
mov
adc
dec
jp
in
sub
shl
stos
lock
addr16
push
xor
lret
or
pop
push
and
inc
adc
out
in
lock
call
xor
fst
mov
mov
or
insb
in
dec
mov
rcrl
xor
repz
dec
jecxz
lahf
jmp
mov
or
sub
insb
xor
rcrb
bound
lcall
push
adc
mov
xor
mov
add
shlb
out
lahf
movzbl
dec
jnp
and
addb
lcall
fcmovnbe
mov
jp
aad
jp
push
fadds
cmp
or
xor
sbb
into
aas
les
iret
leave
jnp
dec
or
push
mov
jle
fnstsw
aad
in
mov
dec
xchg
mov
xor
rolb
xor
push
leave
bound
add
in
les
mov
je
sbb
cmp
scas
xlat
sub
mov
mov
orl
sub
movl
jmp
aas
int3
ret
aad
aam
stc
stos
push
sub
mov
jae
js
jns
outsl
jecxz
in
pushf
iret
out
lret
xor
test
push
jae
daa
hlt
jecxz
mov
shll
sti
test
or
sbb
fcmovu
push
icebp
pop
mov
loope
xchg
in
xchg
sub
scas
xor
sti
and
push
lahf
fsubr
into
shlb
sbbb
mov
push
mov
inc
lock
xchg
aaa
test
in
sbb
lods
mov
cmpsl
test
clc
sti
dec
or
dec
jnp
inc
push
xchg
jmp
pop
fmulp
rclb
inc
ss
dec
push
sahf
mov
loop
ss
mov
xor
inc
jg
dec
loopne
cs
xor
push
insl
mov
push
data16
sbb
jcxz
add
test
movsl
test
jge
xor
les
nop
cltd
fnstsw
jecxz
call
mov
push
js
je
jge
mov
pop
enter
imul
repz
mov
test
push
xor
or
jne
and
popa
into
mov
les
lret
sub
pop
inc
jge
dec
mov
outsl
fsubl
popl
call
int
mov
dec
shlb
jae
fidivl
sbb
inc
clc
push
pop
test
ds
cmp
notb
sarl
lahf
mov
std
ret
jmp
jbe
cmp
shlb
mov
push
inc
mov
orb
inc
insb
dec
sub
sarl
xchg
mov
js
hlt
subl
xor
dec
mov
push
adc
je
xchg
leave
hlt
push
stos
int3
outsb
pop
sub
cmp
add
movsl
out
jnp
mov
push
dec
pop
and
pop
and
movsl
pop
out
aam
sub
in
or
outsl
in
mov
ja
mov
ljmp
js
and
jge
dec
pop
test
jmp
push
repnz
mov
pop
loop
into
pop
and
or
lret
data16
xorl
test
loop
jp
add
dec
jne
add
or
add
xchg
sbb
sbb
mov
push
jecxz
fmulp
mov
or
pop
and
les
dec
xor
jo
repz
xchg
mov
jecxz
jge
mov
push
mov
out
ja
or
shrb
mov
jge
rorl
push
int
cmp
inc
mov
pop
push
sub
inc
pop
mov
fs
hlt
push
mov
loopne
cmp
jb
lret
mov
dec
sub
incl
mov
mov
push
popl
push
stos
aam
les
aas
jge
lea
cmp
xchg
aaa
and
jg
outsb
ja
lock
jg
aam
mul
jg
lods
jle
adc
dec
mov
xor
adc
push
out
ret
out
popf
test
shl
mov
lea
shll
or
dec
test
push
push
cmp
cwtl
xchg
je
push
repz
jo
bound
fimuls
cmpsb
test
icebp
into
repnz
cltd
fildl
jmp
inc
negl
leave
adc
ret
hlt
lcall
xchg
shlb
pushf
cmp
sti
xor
cmpsl
lcall
clc
jo
jnp
movsb
in
sub
sbb
fs
or
push
das
mov
into
ja
ret
loopne
test
hlt
lret
jne
fwait
in
fbld
sti
jl
push
and
mov
add
in
jnp
cltd
add
daa
cmp
lret
and
lods
and
dec
daa
mov
stc
sub
jg
fistpll
aam
adc
sub
scas
aas
inc
je
cld
out
rcr
push
push
and
cmpsl
xchg
out
xlat
lods
pop
and
es
jp
lea
in
mov
bound
xchg
add
arpl
and
fcomp
adc
mov
jg
xor
inc
pop
fstpt
xchg
inc
outsl
mov
mov
push
outsl
mov
lahf
jp
inc
sbb
xor
shlb
test
out
inc
lock
xlat
mov
sarb
ss
mov
cmpsb
lds
mov
and
mov
xchg
push
mov
pop
adc
adc
nop
push
dec
inc
push
fnsave
daa
pop
in
aad
adc
add
dec
fldcw
mov
xchg
out
mov
push
jge
lret
adc
jge
xor
xchg
pop
xchg
xor
sbb
cmp
mov
fcmovb
add
addl
add
xlat
into
ror
aad
xlat
imul
adc
stos
jg
jae
js
test
stc
rorb
rcr
imul
add
jne
fmull
insb
xlat
fidivrl
jb
and
fwait
rol
xchg
int
adc
outsb
ja
outsb
push
mov
test
jecxz
jl
mov
shl
xor
ds
lret
popa
sbb
xchg
and
sbb
xlat
push
dec
fistpl
imul
sbb
lea
jge
dec
fs
hlt
or
push
lods
cltd
mov
xor
mov
push
mov
mov
sub
cs
pcmpeqw
fcomps
icebp
or
mov
add
xor
xor
loop
movsb
imul
aam
repz
xlat
xchg
dec
jno
cwtl
xlat
leave
stc
sub
arpl
xor
pop
xchg
jl
scas
and
lret
frstor
incl
xchg
and
icebp
sub
lahf
cmpsl
scas
ljmp
cmpsb
mov
fisubrs
cwtl
lea
push
loop
aaa
push
fildll
inc
pop
mov
call
fs
aaa
loop
push
jo
inc
or
rorl
sub
popa
popf
mov
and
lret
mov
inc
rcrl
mov
dec
ffree
mov
jp
pop
je
les
out
jns
jnp
ret
mov
fisubs
hlt
sbb
lret
cmc
pop
ror
adc
or
push
pop
lds
adc
adc
jmp
sti
leave
dec
rclb
repz
pop
mov
lods
jg
fidivs
jl
pop
mov
call
scas
xlat
idiv
roll
cmp
mov
sub
pop
mov
xchg
cld
and
mov
push
into
or
outsl
mov
jno
mov
stos
jp
pop
addb
call
jae
and
loop
add
hlt
sub
xchg
pop
mov
mov
clc
dec
inc
dec
or
imul
xchg
fsubs
push
sub
sbb
xor
sbb
test
stc
mov
fcmove
xchg
outsb
std
sub
setb
jmp
xor
fs
aad
or
or
push
dec
cmp
outsl
daa
gs
xor
in
cmp
sub
ja
pop
test
ret
pusha
in
fcmovnu
imul
inc
lods
movsb
push
cltd
mov
gs
loope
fisttpll
sbb
cmc
adc
or
popa
fwait
ret
mov
xor
shll
xor
aad
mov
jle
js
adc
xor
jg
and
push
jp
pusha
mov
scas
lret
jae
pop
jle
pop
sarl
in
clc
lea
popa
cltd
test
icebp
mov
xchg
inc
fsubrs
data16
nop
je
mov
push
out
ret
cmpsb
ss
add
fs
test
ds
daa
das
lods
dec
or
sub
add
push
xchg
daa
or
sbb
pop
filds
stos
fwait
stos
or
dec
jecxz
scas
loope
loope
out
int3
call
add
inc
lret
cmp
cmpl
repnz
sub
xor
and
mov
jmp
or
mov
xlat
mov
mov
pop
sbb
cwtl
rolb
pop
pop
je
sahf
mov
outsl
xor
dec
mov
pop
iretw
push
pop
shlb
adc
cmc
push
pop
xor
xchg
shll
inc
xlat
jns
in
push
stos
lds
loope
fstpl
fsts
test
push
das
inc
aam
xchg
push
inc
in
sub
icebp
push
and
filds
stc
xchg
mov
insl
fnstcw
xchg
ss
nop
and
or
rclb
mov
call
cmp
js
and
or
mov
lret
push
lahf
push
pop
out
push
cmc
pop
mov
xor
mov
jns
jnp
push
fsubr
cltd
icebp
jle
cwtl
mov
cmpsl
inc
das
mov
pop
and
in
out
xchg
mov
stos
in
and
and
cmpsl
popf
rorl
sahf
mov
mov
mov
inc
int3
sub
fisttpll
ret
scas
adc
lods
in
mov
out
pop
sbb
push
jb
inc
fdivp
loop
mov
test
cmp
adc
xchg
dec
mov
xor
cmp
jnp
mov
pop
push
mov
in
adc
xchg
add
push
cld
xor
sbbl
add
movl
jmp
jmp
ror
rcr
rol
aad
stos
out
in
fstl
jae
js
jnp
lods
sub
xor
xor
aaa
cmp
cmp
mov
mov
dec
mov
sbb
stc
sti
xor
adc
fisubrl
pusha
pop
aas
mov
scas
outsb
mov
adc
push
sbb
dec
addr16
out
xchg
adc
leave
jae
pop
outsb
int
inc
push
pop
push
insb
push
mov
les
cmc
mov
rolb
enter
fadds
cld
inc
xorb
xchg
xcrypt-cbc
cmpsl
push
out
loop
cs
es
sub
repnz
add
outsl
or
pushf
lcall
ja
pop
xor
push
xor
std
push
cmp
out
ret
or
dec
lods
or
sub
mov
and
jbe
xchg
add
fidivs
in
mov
shlb
aad
jne
lods
leave
daa
push
xor
adc
cmp
lods
mov
ljmp
lret
gs
add
inc
stos
lret
std
adc
lods
in
inc
or
mov
push
fwait
stos
outsb
inc
vdivsd
aaa
pop
and
or
or
jmp
fistpl
mov
jo
js
rcll
pop
xor
mov
xchg
imul
test
jecxz
pop
and
cli
jne
sbb
lea
fstl
rclb
cli
xor
rclb
cli
imul
pusha
sub
jle
test
mov
adc
int
and
in
arpl
mov
push
dec
scas
xchg
jns
push
mov
sbbl
mov
lret
pop
mov
test
jnp
push
xchg
jne
mov
pop
orb
scas
lahf
mov
push
xor
cmpsb
dec
push
leave
add
arpl
mov
and
jl
mov
scas
lahf
mov
xor
stos
push
jnp
inc
wbinvd
loopne
mov
push
fiadds
jle
rclb
sbbl
or
and
insb
jle
stos
xorb
jmp
xchg
jl
aad
xor
mov
pop
out
xchg
testl
xor
loopne
pop
xor
push
das
bound
call
int3
mov
inc
outsl
fs
push
lock
dec
add
loopne
lods
jl
cmp
add
adc
push
xor
cltd
xchg
add
adc
fcoms
rcl
mov
lahf
shrb
adc
xchg
or
lods
lods
scas
jmp
pop
mov
pop
test
jno
fbld
das
daa
sub
xor
imul
or
ss
cmp
cld
push
outsl
and
scas
and
sbb
mov
add
leave
inc
out
sbb
repnz
dec
adc
xchg
arpl
and
jbe
sub
stc
cld
xchg
test
xlat
fistpl
xor
adc
jle
jle
aas
inc
cmpsb
sbb
xor
push
imul
push
loopne
push
cmp
out
or
cld
xchg
daa
mov
push
imul
sub
out
lods
mov
add
dec
popa
push
lea
sbbl
xchg
stos
or
aaa
idiv
js
jns
jae
mov
dec
mov
lods
pushf
mov
mov
xor
lock
andb
mov
sub
xchg
outsb
mov
ret
lods
pop
adc
loopne
and
pop
arpl
pop
or
inc
rcll
cmc
imul
ja
ljmp
dec
mov
pusha
or
and
icebp
pop
outsl
xor
xchg
stos
mov
mov
dec
push
test
movsl
stc
xor
clc
sub
mov
lea
sbb
or
bound
mov
mov
int
mov
mov
pop
shll
cmpsl
inc
xchg
push
dec
sbb
ds
lods
push
es
aaa
fmul
push
aaa
adc
fsubr
dec
in
adc
ljmp
mov
les
mov
loopne
or
imul
test
xchg
xchg
insb
aas
add
rolb
dec
add
in
mov
loop
xchg
jno
ds
and
pop
cld
xchg
je
out
push
sub
je
sub
aas
pop
pop
push
je
cld
push
xor
sbbb
push
xchg
addr16
mov
mov
fdivp
jmp
sub
js
shl
sbb
rcrb
cli
sub
cmc
push
std
rcrb
xchg
xchg
dec
cmp
std
cwtl
push
adc
aas
lea
pop
insb
xchg
ljmp
push
aam
and
add
add
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
jmp
mov
mov
sub
mov
jmp
lret
into
leave
aam
cmp
adcl
jg
jae
js
cmc
cli
push
out
test
adc
inc
test
sbb
out
std
out
or
outsl
bound
or
test
enter
and
and
imul
test
pop
sbb
mov
rolb
mov
pop
mov
enter
in
push
push
sub
scas
ja
mov
xchg
stos
and
inc
inc
cltd
push
xchg
cmp
or
loope
lcall
add
dec
jge
mov
stc
and
inc
xchg
into
repz
popf
mov
adc
cmp
sub
or
cmc
cmpsl
sahf
js
add
xchg
or
or
jl
fisubrl
cltd
xchg
pop
dec
das
xchg
sub
jle
addr16
xchg
and
shll
inc
nop
add
lock
ds
fs
iret
xchg
aaa
arpl
push
cmc
sub
push
vphaddudq
fs
push
rorb
lret
fs
adc
jle
outsb
and
repz
mov
inc
mov
dec
cmp
mov
mov
cmp
dec
rol
ficoms
orl
sbb
into
test
ret
pop
nop
mov
lret
sbb
call
fcoml
movsb
push
jnp
ljmp
mov
mov
cmpl
out
loope
jp
jge
xchg
cmp
in
mov
out
inc
adc
mov
divb
push
es
rclb
gs
pop
sbb
inc
adc
dec
jp
dec
stc
sti
dec
sbb
jecxz
ret
push
ljmp
and
sahf
xor
and
movups
inc
mov
loop
flds
jmp
dec
gs
pop
and
nop
xor
push
ss
mov
dec
push
cmc
in
std
int
mov
testl
clc
xchg
std
pop
sub
mov
lds
mov
sub
pop
xchg
xlat
xor
cmp
mov
or
mov
into
mov
int3
stc
mov
adcb
sub
mov
xor
inc
cwtl
inc
je
pusha
add
xor
adc
add
sub
imul
mov
xchg
sub
add
scas
icebp
in
nop
xchg
imul
mov
aam
std
push
push
outsb
pop
adc
mov
jne
mov
lods
daa
pop
fwait
adc
or
shrb
lcall
fdivl
bound
mov
das
mov
jmp
mov
popf
push
and
mov
mov
add
add
out
or
adc
mov
mov
inc
insb
test
hlt
xchg
or
and
mov
pushf
rorb
aas
lret
push
mov
data16
popa
jae
cs
lcall
jmp
mov
sbb
enter
sbb
sti
cltd
push
inc
inc
lret
push
repnz
js
dec
push
lea
dec
mov
jbe
outsl
movsl
jl
push
pushw
inc
ja
pop
dec
jno
in
iret
scas
lret
xchg
ljmp
daa
jecxz
in
stos
test
rorb
mov
jnp
leave
inc
jno
mov
mov
dec
and
cmc
xchg
lea
es
aad
leave
cmpsl
ja
inc
sbb
icebp
push
and
hlt
loopne
in
sti
inc
subb
adc
mov
nop
icebp
xchg
mov
mov
jbe
sti
inc
outsb
inc
jmp
stc
jp
push
xchg
fsubp
lea
decl
shll
aad
push
movsb
inc
arpl
out
repz
test
pop
lret
dec
dec
add
lock
mov
inc
jns
xorb
das
dec
or
sub
adc
outsb
sti
int
mov
and
repnz
sahf
pop
jecxz
sbb
add
aas
sahf
sbb
adc
xor
lods
mov
adc
lret
insl
mov
stos
mov
repnz
mov
ret
dec
mov
jae
scas
xorb
fs
sub
mov
scas
cwtl
inc
push
aad
imul
cmp
dec
fiadds
jo
xchg
daa
cmp
sbb
cmp
mov
ds
outsl
pop
sbb
lock
fiadds
pop
into
fwait
xor
xchg
add
ja
js
outsl
xchg
filds
fs
enter
cmp
fstpl
ljmp
adc
jns
mov
inc
mov
xor
xor
add
jmp
cmp
leave
lret
leave
leave
ret
outsb
lret
jge
jbe
adc
mov
js
jl
js
or
inc
aas
dec
and
not
imul
test
sbb
frstor
fcomp
mov
dec
mov
and
clc
js
push
stos
adc
and
mov
orl
fldenv
push
mov
mov
outsb
aad
popa
and
inc
fisttps
sbb
lret
xchg
cld
dec
cmp
testb
popf
mov
js
jno
stc
pop
sub
xchg
out
add
dec
xchg
out
int3
or
lahf
andb
dec
cli
jmp
inc
dec
into
inc
cmp
ret
or
lret
repz
fs
inc
cmp
repnz
and
mov
iret
std
push
jne
mov
addr16
xor
insb
sbb
incl
lods
jmp
lret
xor
sub
mov
sub
shrb
mov
sbb
lds
je
dec
sbb
fimuls
iret
das
mov
sub
sub
popa
xchg
sbb
lret
cmp
pop
push
or
push
mov
in
sbb
pop
pop
enter
dec
push
inc
add
aad
adcb
inc
add
xlat
inc
push
loope
jae
scas
adc
daa
dec
ljmp
lret
push
mov
pop
popa
and
add
das
adc
mov
loopne
dec
aaa
mov
repz
hlt
fisubl
push
lods
xchg
pop
js
loope
inc
es
adc
enter
loop
clc
pop
xchg
and
cmp
xor
push
clc
clc
sub
push
mov
lahf
cld
fs
sbb
hlt
stos
lahf
adc
mov
pop
movsl
out
jbe
adc
movsl
push
sub
and
adc
enter
push
dec
sub
mov
dec
pop
pop
adc
jmp
cmp
js
push
stos
pop
call
dec
test
orb
loop
cltd
pop
or
repnz
addr16
push
mov
lea
ficoml
xchg
rsqrtps
jmp
push
jecxz
ret
or
or
sbb
std
int
sub
lds
or
cmpsb
dec
inc
mov
mov
cli
jge
std
inc
popa
pop
jmp
jne
inc
mov
je
push
fistpll
lret
inc
inc
sub
inc
push
or
mov
inc
movsl
dec
into
cmpsl
xchg
pusha
ljmp
xor
sbb
enter
shlb
pop
aas
mov
popf
mov
into
in
push
pop
mov
loope
out
and
popa
fidivl
ret
inc
pop
int
fisubs
rcrl
pop
jle
pop
or
adc
xlat
aad
mov
xchg
adcl
andb
lret
adc
lcall
pop
mov
adcl
rorb
push
stc
js,pt
mov
mov
sbb
and
fwait
jb
jmp
xor
or
mov
and
mov
inc
sahf
je
shl
adc
push
movsb
sbbl
cmpsl
cmpsl
std
loop
fimull
iret
hlt
cmp
shll
sbb
and
lret
push
addr16
shrb
mov
inc
mov
popf
fsubl
xor
xchg
or
inc
rcrb
xlat
cli
jae
jno
mov
aam
fistpll
jmp
push
jae
pop
fidivs
pop
stos
push
jnp
cmp
jbe
jmp
xchg
xchg
mov
xor
lods
lahf
stc
nop
mov
push
jne
push
push
mov
int3
sbb
shlb
adc
or
leave
xchg
inc
iret
in
hlt
int3
jne
sarl
aaa
dec
shll
mov
gs
fbld
mov
pusha
xor
cmp
adc
je
out
pop
iret
cmc
push
sbb
add
pop
xor
cltd
push
out
sbb
jb
stc
sub
sbb
into
mov
icebp
icebp
jg
mov
push
ss
fstpl
andb
int
sbb
outsl
test
shlb
fldenv
shlb
jmp
sub
pop
xchg
jecxz
or
testb
in
cli
add
das
arpl
movsl
push
into
repnz
push
mov
mov
fildl
imul
gs
sbb
mov
test
mov
test
and
jo
movsb
ja
mov
sub
test
popa
int3
pop
dec
lret
xor
shr
or
rol
fcmovnu
jp
orl
jg
jae
js
lods
pusha
daa
lods
sbb
xchg
hlt
add
lahf
and
lods
popa
orb
pop
movsl
pusha
sub
pop
mov
xor
loopne
xor
lahf
cld
xchg
fs
imul
lret
xlat
popf
ss
and
aaa
mov
pop
pushf
and
push
dec
xchg
imul
mov
sti
xchg
and
fcmove
cs
cltd
inc
in
mov
add
xor
xchg
pop
es
cmpsl
cld
lods
dec
cmp
inc
jno
insb
call
mov
mov
imul
stc
jle
xlat
mov
nop
pop
inc
test
pop
dec
dec
sbb
push
pop
cmp
mov
mov
into
sahf
and
mov
dec
shrb
in
je
test
iret
sub
jg
outsb
comiss
pop
les
notl
inc
hlt
sbb
decl
les
lds
add
icebp
cmp
dec
fcomip
adc
or
lahf
xchg
nop
cmp
loope
out
sahf
aam
movsb
mov
add
xchg
cmp
je
add
pop
xchg
inc
mov
nop
repnz
and
push
push
nop
rcrl
jl
mov
push
lahf
pop
push
repz
ret
cld
cmc
loop
ret
push
xchg
pop
mov
add
mov
outsb
fidivs
mov
sti
aaa
jne
or
mov
mov
loop
sub
fdivl
fistpl
or
pop
jb
int3
aaa
dec
ja
test
out
rcl
mov
mov
sbb
xor
and
xor
sub
cmp
xor
stc
push
leave
and
sbb
repz
aad
lds
test
push
add
ret
inc
rolb
sub
pushf
lods
xchg
fs
jge
inc
mov
sub
icebp
inc
sub
ret
movsb
mov
xchg
lret
int3
or
and
sahf
fistl
in
push
int
mov
mov
scas
lea
dec
push
or
adc
mov
ret
ljmp
push
imul
out
adc
sbb
rolb
paddb
repz
lds
jb
mov
mov
in
pop
int
mov
xchg
aaa
adc
aas
dec
daa
addl
sub
bound
fwait
test
mov
inc
out
pop
bound
clc
daa
in
pop
inc
cmp
jnp
mov
iret
lea
jnp
sbb
adc
movsl
lock
mov
dec
cmp
fnstsw
loop
ja
mov
jmp
fs
cmc
repz
jno
pop
sarl
xchg
xor
jg
pusha
adc
sub
mov
or
add
icebp
addr16
pop
mov
in
mov
in
sti
and
fstpl
sbb
cmpb
cli
pop
insl
mov
mov
push
jns
mov
test
jns
jge
add
pusha
pusha
jmp
mov
mov
std
push
xchg
add
pushf
adc
mov
mov
or
push
and
sub
loopne
xor
push
mov
pop
or
repnz
fimuls
sti
test
or
inc
pushf
aaa
sbb
adc
mov
repnz
cmpsb
dec
adc
and
or
sbb
xor
not
roll
mov
stc
daa
mov
cs
ficomps
xchg
fcoml
inc
cli
rol
pop
mov
mov
push
sub
mov
lea
xor
fisttps
sahf
ja
fdiv
pop
js
mov
mov
sub
mov
arpl
cld
ss
cmp
sub
and
sub
popa
insb
pop
sub
mov
xor
repz
rorb
aas
out
inc
clc
lea
icebp
add
lds
add
repz
mov
push
add
or
movb
xor
mov
popa
inc
and
inc
repnz
dec
mov
or
cmp
mov
iret
sub
lret
rcr
dec
ret
xor
mov
popf
daa
jge
and
inc
das
cmp
pop
xchg
push
or
sbb
leave
and
mov
mov
adc
imul
mov
inc
xchg
enter
sub
mov
negb
shr
rorl
jns
hlt
xor
jge
cli
mov
dec
inc
inc
or
push
mov
bound
jbe
int
xchg
or
xor
sub
or
insb
cmp
negl
xlat
mov
mov
sub
jmp
ror
lret
fcmovbe
fcmovb
mov
les
inc
jg
jae
js
xor
cld
mov
cmp
out
lods
dec
xlat
outsl
or
ja
rcl
mov
imul
in
xor
xchg
or
sbb
mov
pop
xchg
nop
sbbl
imul
mov
scas
sbb
dec
bound
pop
test
les
repnz
push
lock
xor
mov
jno
aas
mov
test
arpl
sbb
fwait
iret
stc
rorb
or
fdivs
pop
mov
cmp
inc
pop
sub
es
mov
enter
ds
mov
sub
pop
aam
pop
repnz
das
xchg
sarl
inc
xchg
and
push
in
mov
mov
imul
pop
sub
and
xor
xchg
jg
jne
xor
fistpll
push
test
ljmp
sbb
push
xchg
push
push
add
inc
scas
inc
fnsave
fcoms
jmp
mov
inc
dec
out
scas
ret
rcl
pop
sbb
xor
orl
mov
push
enter
xor
test
in
adc
adc
sub
push
out
into
pop
andb
xchg
jae
lods
mov
fdivrs
mov
inc
mov
lods
pusha
popa
jmp
xchg
xchg
test
lock
add
mov
lds
mov
cli
pop
inc
mov
enter
jmp
sbb
fs
jnp
loop
add
cld
mov
mov
test
idivl
xchg
out
push
icebp
pop
dec
pop
pop
dec
mov
lcall
sub
push
or
daa
dec
cmp
roll
nop
cmp
sub
cmp
sub
mov
inc
insl
dec
pop
movsb
mov
pop
mov
sti
pop
sbb
mov
int3
orl
rcll
out
nop
mov
lcall
lods
push
lods
lods
sbb
mov
cmp
imul
adc
pop
jecxz
movsb
sahf
notl
sti
test
cmp
pushl
cs
mov
push
aam
jmp
and
iret
shr
mov
push
pop
testb
divb
jae
shrb
cltd
cld
lock
cmp
pop
dec
repz
mov
lahf
sub
aad
push
mov
dec
sub
pusha
lock
mov
addr16
add
popf
roll
lcall
cmpsb
adc
sbb
mov
mov
xor
pop
mov
xchg
xchg
mov
add
es
jecxz
mov
push
inc
jns
call
fcom
push
lahf
dec
sti
aaa
mov
das
mov
sbb
lods
dec
outsl
cmp
stos
outsl
cmc
or
sbb
and
inc
xchg
adc
adc
in
ja
ficoms
in
iret
ljmp
dec
pusha
xor
sbb
jae
sbbb
pop
sub
cmp
cmp
je
iret
mov
push
jnp
clc
popa
fnsave
int
mov
mov
pop
in
imull
pop
or
jl
nop
push
aad
mov
pushf
loopne
mov
pop
xchg
pusha
lods
mov
movb
cltd
and
jae
ror
hlt
xchg
inc
inc
aam
andl
lret
jl
add
hlt
and
dec
xor
insb
pop
jmp
or
lahf
push
ret
fbld
sub
sub
sub
out
scas
cld
xchg
fstpt
ja
daa
pushf
push
adc
inc
mov
mov
stos
pop
jae
mov
arpl
sbb
adc
fwait
divb
push
mov
sub
aad
mov
or
loop
pop
aas
adc
loope
jns
outsl
jb
mov
sub
nop
lock
push
mov
jle
bound
es
mov
hlt
or
push
dec
insb
jl
xchg
pop
add
dec
inc
mov
je
xchg
pop
sub
popa
pop
xor
mov
aam
mov
pushf
cs
cmp
xor
pushf
jne
mov
rcrb
sub
dec
mov
arpl
sbb
popa
jge
pop
push
ret
es
out
and
sbb
mov
int
bound
xchg
imul
lds
mov
inc
jne
leave
push
popl
xor
fucompp
or
ret
fcmovbe
aad
fs
inc
mov
inc
jg
jae
js
call
stc
cmpsl
sub
lock
sbb
mov
dec
pop
mov
pop
dec
loopne
mov
int3
stos
or
rorl
pop
into
sub
das
xchg
mov
or
cld
out
or
pop
shl
and
dec
or
test
jno
sbb
sbb
in
lock
inc
fists
fstl
dec
xchg
and
mov
dec
fucom
and
and
ds
xchg
fimuls
and
pop
mov
cmp
stos
lahf
movsb
jns
cltd
mov
test
push
mov
jmp
add
push
mov
fs
out
pop
lea
lods
jae
popa
pop
adc
cld
or
rcrl
mov
icebp
and
repnz
jp
aaa
mov
scas
lret
jne
jae
imul
outsb
lahf
addr16
ja
pushf
fldt
lods
xor
cmp
aas
cwtl
jecxz
cs
push
adc
sub
stc
ljmp
dec
in
fstl
lds
sti
je
movsl
pop
aas
ja
or
mov
xorb
int3
sub
and
push
popa
lret
stc
xchg
cmc
pop
jecxz
push
pop
leave
xor
mov
cmp
mov
cmp
test
nop
xor
add
lds
test
das
pop
cmpl
mov
pop
ljmp
and
push
and
jne
cltd
lcall
cld
cmp
mov
push
cs
lods
in
fs
adc
imul
lahf
mov
popf
shrb
out
or
movsb
jbe
in
scas
loopne
fadd
scas
lock
xor
jge
xchg
hlt
add
lea
ja
movsbl
or
bnd
popf
popl
sub
mov
jne
xor
das
jp
pushl
xchg
push
lods
call
mov
sti
aam
add
mov
xchg
testb
jns
leave
add
push
out
add
pop
jl
pusha
dec
call
leave
add
movsl
or
jle
dec
stos
ja
imull
lock
pop
movntps
xor
int3
pop
in
xor
ljmp
sub
orl
jg
in
movsb
sub
out
jbe
xlat
imull
cld
imul
mov
cwtl
mov
mov
insb
sahf
cwtl
dec
pop
mov
adc
orb
mov
stos
and
pop
pop
jb
adc
lock
mov
sbb
or
loope
push
jl
sbb
and
add
jo
sub
add
rcr
aam
cld
push
arpl
lcall
push
cmc
test
push
or
fisubrs
mov
adc
stos
xchg
out
xchg
mov
stos
push
aaa
insb
in
addr16
rorl
insl
mov
or
fstps
inc
mov
xchg
pop
mov
push
jb
xchg
roll
adc
in
scas
shrl
shrb
cmpl
xchg
outsl
roll
or
mov
cmpsl
and
inc
jg
pop
pop
jae
sub
sub
mov
mov
pop
out
jle
sbb
xor
xor
pop
xlat
out
insb
gs
call
out
js
fmull
xor
dec
push
fwait
aaa
repnz
ljmp
stos
lahf
dec
mov
es
mov
jl
not
test
pop
cmpsb
or
fs
cltd
inc
ljmp
pushf
pop
jge
xor
or
inc
pop
mov
lret
dec
je
add
add
rcrl
and
out
xor
das
out
cmp
movb
lods
aaa
sub
mov
adc
sub
xor
or
xor
sbb
mov
cmpsl
dec
out
mov
cmp
lock
add
repz
xchg
push
dec
es
sub
add
test
pop
daa
adcl
xlat
jo
xchg
or
mov
outsl
xchg
leave
shlb
in
add
adc
or
lret
sbb
test
in
push
push
jne
and
insb
dec
adc
jns
cmp
test
xchg
and
xlat
movsl
shll
enter
sbb
mov
push
flds
mov
push
fmuls
repz
inc
mov
in
mov
dec
lret
int3
loopne
gs
xchg
add
add
xor
add
cld
xor
xor
add
jmp
cmp
les
jmp
cmpsl
scas
add
jae
js
sti
dec
das
repz
sub
pusha
jo
sbb
mov
outsl
lods
lods
je
mov
ds
add
adc
fcompl
pushf
mov
mull
jo
pop
fcomps
adc
adc
mov
mov
stos
and
movl
xchg
and
test
pop
or
es
xchg
int
mov
mov
shr
adc
xchg
sbb
into
in
imul
mov
xor
xchg
in
add
xchg
pop
int3
pushf
aas
and
adc
mov
jmp
push
sub
mov
push
inc
sbb
call
lret
rorb
in
lock
push
sub
inc
sbb
and
lods
pop
in
mov
aam
rorb
and
jp
imul
and
subb
int3
sbb
out
int3
dec
jae
aad
xchg
in
mov
stc
leave
sub
sbbb
daa
sbb
shrl
jo
jl
push
inc
pop
dec
and
or
std
mov
adc
xchg
in
pop
xor
cmp
pop
int3
jb
push
xchg
fwait
cmp
popa
out
popa
pop
imul
sbb
cmp
mov
in
ljmp
mov
and
movsl
sub
dec
or
adc
or
or
adc
rorl
jne
cmp
lcall
ret
mov
out
xchg
loop
cmp
or
xchg
sahf
pop
pop
sti
outsb
push
shr
cltd
in
dec
push
in
mov
movsl
aam
mov
jl
cmp
xchg
nop
add
dec
pusha
mov
subl
outsl
and
dec
inc
mov
or
jmp
jae
xor
sub
ljmp
jmp
outsb
int3
xor
dec
xchg
mov
xor
or
popf
dec
cmp
mov
push
jp
cmp
mov
pop
aas
jbe
add
mov
and
addr16
pop
dec
adc
push
jle
daa
shll
xor
mov
hlt
sub
pushf
push
or
cwtl
aam
sub
sbb
xor
xchg
setno
jbe
pop
or
mov
xchg
xor
xor
iret
mov
mov
movsl
push
or
adc
and
sbb
fistpll
or
or
scas
fdivl
sti
mov
dec
ja
hlt
xor
xchg
dec
mov
mov
pop
lods
sub
mov
fisttps
in
bound
sbb
out
fsubs
neg
fdivs
out
xor
fstpl
out
dec
popf
loope
ds
or
xchg
sbb
jo
jg
paddw
lea
xor
and
fnstsw
adc
icebp
repz
xlat
cwtl
jnp
movsl
stos
ret
mov
xor
loop
test
andl
sub
rcrb
scas
cmp
xor
mov
pop
sub
aad
out
xor
js
jl
inc
enter
dec
ja
aas
jmp
in
xor
leave
movsb
fcoml
jp
stc
iret
out
inc
sub
and
inc
aad
pop
add
sbb
int3
dec
push
cmp
or
dec
lds
movsl
or
cmp
pop
dec
lahf
lcall
cmpsl
mov
pop
pop
mov
test
pop
jle
out
jb
inc
movsl
sub
insb
and
mov
pop
xchg
sub
mov
das
mov
sahf
sti
dec
imul
in
pop
in
mov
adc
lds
dec
aad
or
fucomi
loopne
int
and
sti
xchg
lods
xchg
dec
aas
or
imul
es
xchg
das
push
sub
mov
insb
jecxz
and
test
inc
out
xlat
inc
mov
mov
ss
xor
sub
xor
or
and
sub
sti
iret
insl
lock
cs
xor
jno
cld
push
fsubr
ja
fcoms
mov
cmp
stos
or
or
sahf
push
mov
ja
gs
fsubs
jno
mov
jns
sbb
test
nop
mov
push
std
test
addb
xchg
and
bound
enter
scas
xlat
pop
push
and
xor
popa
in
cmpsl
in
test
popf
sbb
repnz
xor
popf
ljmp
sub
or
pop
xchg
xor
xchg
test
pop
xlat
mov
and
in
cmp
cmpsl
push
mov
or
int
ror
fstps
lcall
jae
js
aaa
shr
sbb
push
push
mov
loop
pusha
pop
jbe
pop
add
test
xchg
sub
pop
xchg
jl
inc
pop
or
loope
xor
push
popf
or
icebp
mov
mov
pop
jnp
outsl
adc
xchg
adc
lods
jno
mov
rol
stc
xor
in
ret
pop
sub
pushf
xchg
mov
sahf
stos
xchg
lahf
in
test
into
out
mov
es
hlt
and
das
dec
mov
sbb
adc
sub
sarb
or
pop
addr16
push
mov
dec
xchg
outsl
insl
push
ds
fbstp
imul
sarb
xorl
popf
jl
shl
adcl
into
dec
pusha
jp
push
adc
fildl
dec
adc
lods
fistl
daa
fsubl
xchg
sub
js
and
and
int
ret
lock
mov
mov
fprem1
ucomiss
and
push
shlb
outsb
xor
adc
mov
ret
shrb
push
cmp
ss
xor
inc
in
ss
movsl
dec
ja
fmuls
pop
or
stos
jo
jp
ds
inc
add
mov
jecxz
sub
sub
into
lea
jl
pop
dec
sti
das
stos
cmp
out
dec
pop
jno
adc
or
and
push
test
push
ja
bound
mov
jle
and
inc
add
hlt
cmp
lret
fsubl
dec
lock
inc
mov
pop
xchg
scas
mov
jg
repnz
jbe
pop
push
test
ffree
mov
jo
in
mov
out
and
sub
js
test
push
or
inc
xor
jne
xor
dec
ds
out
mov
movsbl
rorb
inc
dec
mov
icebp
jl
jne
ret
cmp
pop
out
in
adc
shlb
cmc
pop
fstps
xchg
push
jg
out
mov
mov
repnz
ret
int3
adcl
lcall
add
out
dec
pop
gs
cwtl
xor
out
push
pop
andl
outsl
pop
int
lea
or
lret
mov
dec
add
in
cmp
sbb
pop
je
add
sub
jno
jecxz
dec
sub
sub
jnp
jge
push
cli
pop
add
clc
dec
movsb
or
inc
mov
ja
lret
cmpsb
dec
fcmovnbe
fiaddl
cwtl
mov
in
mov
xor
stos
lds
lcall
adc
mov
jns
xchg
sub
lret
out
jp
int
fs
cmp
dec
cli
inc
jl
cmpb
bound
in
mov
pop
mov
sub
mov
out
xchg
lods
or
xlat
mov
inc
jno
sub
sbb
rclb
and
mov
mov
mov
mov
add
sahf
sbb
mov
cmpsb
inc
dec
das
movsl
inc
stc
mov
mov
fldcw
inc
cltd
push
xchg
fwait
cmc
xorl
pop
pop
fsub
je
std
and
fsts
dec
mov
testb
fucomip
out
jl
dec
inc
lahf
cmpsl
lcall
mov
stos
pop
cltd
stos
data16
mov
jecxz
xchg
xchg
mov
inc
jl
push
jns
repnz
xor
stos
adc
cli
cwtl
or
xchg
movsl
adc
movsb
aam
jmp
push
adc
push
xchg
mov
jo
dec
fwait
pop
fwait
add
inc
adc
cmp
adc
mov
mov
cmp
call
das
in
mov
enter
call
adc
xchg
inc
or
sbb
rcrl
sbb
out
pop
cmp
mov
cmpsl
pop
scas
imul
or
pop
xlat
xchg
jns
rcr
inc
std
cmpsb
pop
repnz
sbb
fmuls
movb
jle
jge
sub
sub
daa
mov
inc
pop
lock
and
sar
sbb
fwait
roll
nop
lcall
pop
mov
cld
mov
iret
sbb
loope
push
mov
ret
pop
test
mov
notb
in
mov
frstor
hlt
sbb
mov
jno
movsb
out
nop
fbstp
loop
pop
mov
lock
jmp
add
dec
inc
das
jo
leave
jle
in
mov
andb
adc
pusha
mov
fstpt
testl
scas
xlat
mov
mov
sub
cmp
jmp
rcl
ror
rcr
aam
pop
inc
daa
clc
lret
push
loop
push
jg
jae
js
mov
pop
cltd
mov
adc
xor
inc
add
adc
jmp
lods
xlat
lods
pop
andl
cld
xor
push
lahf
mov
jns
and
jae
inc
mov
aaa
pop
pop
psubb
in
mov
inc
pop
cmp
shlb
loop
sub
pop
cmp
fsts
fisttpll
sub
ljmp
jns
in
xchg
es
cmp
ficomps
jno
cmp
in
scas
cmp
add
mov
dec
or
mov
sbb
aas
adc
sbb
xchg
loopne
pop
insl
jecxz
repnz
mov
aas
mov
sub
cmp
pop
in
mov
mov
mov
pop
xchg
mov
js
stc
cli
jge
xor
jg
ja
fmul
add
mov
xchg
mov
lds
add
fisttpl
daa
xchg
orl
aam
lds
cltd
push
or
rcrb
in
fcmovbe
pop
and
add
xchg
pusha
cmp
or
out
mov
push
inc
or
daa
imul
mov
daa
lcall
xor
push
dec
xor
push
cld
lods
xor
sub
aaa
icebp
repz
fidivs
adc
mov
shr
add
movsb
idiv
in
mov
icebp
dec
and
out
shll
dec
sbb
or
daa
lods
xchg
sarb
adc
repnz
imul
movsb
cmp
xchg
call
jp
pop
mov
fwait
jge
pop
repnz
sahf
stc
push
cs
lcall
sub
imul
pusha
or
pop
pushl
xor
xchg
jbe
clc
bnd
insb
mov
aas
lds
jnp
mov
dec
xchg
or
and
cmp
cmovg
mov
lret
mov
and
adc
mov
arpl
insb
pop
pop
sub
stos
sub
or
aaa
fwait
mov
push
iret
lods
sub
and
inc
js
out
gs
cmp
inc
xchg
mov
xchg
idiv
outsb
and
fs
stos
xor
adc
popf
lods
mov
adc
jno
xor
push
pop
in
mov
sub
mov
lods
add
pop
and
xchg
cli
sub
pop
pop
dec
add
sbb
lahf
xchg
test
fld
mov
dec
pop
sti
in
roll
cmpsb
sub
xchg
cmp
pop
sub
xchg
icebp
xchg
pop
aam
or
push
pop
test
scas
jne
aad
adc
sbb
popa
xchg
dec
int
xchg
sub
stos
mov
sbb
push
inc
sbb
xor
ja
fidivs
push
jbe
lds
mov
pop
mov
loopne
sub
push
xchg
mov
jo
xor
and
push
lods
cmp
iret
xchg
add
push
fstl
inc
sub
and
lods
dec
fisubrl
bound
pop
jo
mov
stc
push
mov
xor
iret
test
movsl
cmp
add
lock
jge
and
mov
pop
push
and
dec
mov
jmp
and
ds
outsb
lods
cmp
ds
loope
xchg
dec
push
jne
decb
hlt
xchg
mov
xchg
push
adc
mov
test
loopne
add
cld
mov
pop
push
in
fwait
movsl
add
and
rcll
popf
cmp
clc
or
and
lods
xor
push
pop
pop
das
movsb
pop
lods
sbb
push
nop
or
jb
nop
jl
xchg
and
mov
imul
loopne
cmpsl
mov
adc
shll
loopne
push
cmpsb
insb
pop
repnz
mov
jns
ret
pop
ret
arpl
rclb
dec
stos
hlt
push
sub
lods
inc
imul
mov
inc
jmp
int
push
xchg
xchg
cltd
popa
mov
das
inc
icebp
push
mov
leave
repnz
daa
loopne
sub
iret
imul
mov
in
xor
leave
enter
or
add
mov
repnz
ljmp
daa
lock
cmp
add
xor
hlt
inc
push
sahf
scas
sub
mov
adc
shl
cld
xor
add
scas
mov
xchg
or
je
or
jmp
mov
add
sbb
add
dec
and
std
pop
cmp
stos
xchg
push
call
push
test
xchg
add
add
and
add
cld
xor
xor
jmp
lret
ds
fcmovnb
pushl
insl
fwait
sbb
jl
js
lock
adc
cmpl
mov
dec
push
jno
ss
subl
out
repnz
insl
ret
xor
loope
sbb
cmpsb
mov
adcl
or
cmc
cmp
movsb
xor
sarl
cmp
dec
mov
fistps
movsl
inc
inc
insl
mov
pop
sbb
push
imul
adc
stos
sub
xchg
mov
int3
movsb
cmp
je
mov
ds
sbb
xchg
imul
sbb
add
pusha
mov
stos
std
popf
mov
les
push
xlat
inc
pop
mov
gs
repz
cmp
loopne
scas
jmp
push
popa
mov
mov
jp
aam
rol
iret
cmpsl
xor
pop
mov
fistl
lahf
sbb
jns
sti
fldenv
mov
out
cld
in
mov
jmp
pop
mov
jle
es
scas
repz
shlb
out
push
jno
popa
sbb
mov
aaa
mov
insl
addl
stos
jg
mov
adc
popa
jo
jp
mov
add
add
push
sbb
ljmp
mov
sbb
fisubrl
cwtl
iret
fiaddl
out
jns
test
sub
jns
divl
insb
mov
push
imul
fmul
pushf
sbb
adc
xchg
sbbb
xor
and
xchg
fiaddl
mov
stc
sbb
jae
aas
scas
sbb
push
aas
daa
dec
or
ficoms
rcrl
cltd
cmp
insl
pop
ja
dec
int3
xchg
jge
lods
push
mov
cmp
gs
pop
dec
ja
add
sti
mov
arpl
add
in
and
dec
arpl
stos
testb
in
cmp
lret
xor
lahf
dec
jmp
testb
push
push
inc
push
loope
mov
mov
xor
mov
sub
mov
outsb
incb
xchg
nop
test
je
je
add
aas
jle
cld
and
loopne
mov
xor
mov
dec
push
jecxz
dec
dec
sub
shrl
sbb
and
add
imul
dec
aaa
pop
mov
cmp
repnz
pop
fsts
mov
js
jne
jl
or
fwait
add
jle
mov
mov
sbb
fidivrs
jo
cmpsl
lahf
push
rcl
rorl
test
dec
fwait
push
pusha
movb
xor
scas
pop
sbb
bound
push
cwtl
mov
mov
jns
sahf
sbb
and
push
dec
inc
jo
adc
fildl
addr16
in
jns
sbb
orb
insl
dec
jmp
xchg
cmpsb
in
dec
jnp
sbb
ss
popf
test
adc
add
pop
inc
out
inc
mul
xorl
xchg
hlt
push
inc
mov
jo
mov
push
push
and
push
pop
cmc
cmpsb
xor
push
mov
fstps
aam
fnstcw
push
addr16
push
or
scas
push
enter
fstpl
push
cmp
cld
popa
jae
movsb
int
subl
aaa
jne
mov
mov
cwtl
fsub
sub
xor
in
dec
and
mov
jle
pop
mov
mov
xchg
in
cmp
push
cmpsb
sti
popf
mov
call
sbb
mov
bound
mov
mov
popa
filds
ret
pop
cli
pop
adc
adc
and
jns
xchg
pop
xchg
xchg
adc
inc
je
mov
lds
dec
test
outsb
pop
push
pop
rolb
jl
jns
jg
punpckhdq
cld
xchg
pushf
out
jmp
sti
scas
add
std
or
mov
in
daa
sbb
int
pop
xor
stc
lods
cld
cmp
ret
popf
pop
mov
mov
push
icebp
test
sub
add
dec
and
stos
mov
loopne
adc
lret
mov
sahf
std
mov
cmp
dec
rolb
cmp
ds
je
test
cmp
push
fisubs
into
fs
in
fsubrl
cmp
adc
and
push
icebp
daa
mov
push
push
jge
push
jo
dec
rolb
in
dec
jmp
ss
add
popa
sti
push
add
add
imul
mov
mov
sub
jmp
cmp
xlat
enter
int3
sub
sarl
jl
js
jmp
sbb
aas
and
sub
vfnmsub132ss
cli
scas
jle
pushf
xorl
xor
sub
adc
cmp
mov
insl
lea
test
mov
lret
scas
xor
xchg
dec
and
inc
add
aad
pop
mov
stos
insl
shl
jecxz
add
mov
outsb
fsubp
xor
sub
test
xchg
push
push
out
dec
fstl
ret
jle
push
xchg
inc
fiadds
scas
adc
loope
out
or
mov
xor
popa
push
sbb
repz
and
in
mov
jle
mov
out
sti
negb
and
into
loope
dec
jae
rol
jae
rolb
inc
negl
arpl
into
cmpb
xchg
jns
sar
repnz
or
inc
cmc
dec
ret
test
jge
and
insl
sbb
cmp
stos
lds
mov
jge
add
mov
jne
test
or
sbb
inc
arpl
divb
cld
and
xor
xchg
and
xchg
mov
mov
sub
pop
dec
loop
js
movsl
call
sbb
cmp
negl
loopne
and
push
adc
addr16
or
pop
dec
pop
lods
enter
popf
lahf
fisubs
flds
lret
jp
out
sbb
xchg
repnz
mov
test
push
arpl
adc
lods
xlat
repnz
jg
jp
adc
push
popa
movb
stos
test
rolb
sub
call
xchg
movsb
flds
dec
mov
push
out
xor
jnp
xor
adc
clc
jbe
iret
leave
cmpsl
mov
enter
rcrb
pop
push
mov
mov
loop
and
mov
pop
push
push
mov
loope
ljmp
mov
aam
mov
out
insb
mov
cmp
mov
rorb
pop
ret
fs
jg
sub
cld
lock
test
dec
dec
mov
sbbl
pop
xor
mov
cs
or
imul
or
sub
jnp
and
mov
cmpsl
pop
or
lods
repz
and
arpl
pushf
cltd
sbb
xchg
addb
ljmp
je
cld
aaa
pop
sub
dec
jae
into
inc
push
pop
mov
test
jb
xor
xchg
out
or
stos
call
xlat
pushl
push
ss
je
sbb
xor
jno
int
enter
cmpsb
jae,pn
mov
nop
push
clc
lret
test
test
cs
bound
loopne
xchg
stos
lahf
mov
sti
pusha
data16
out
mov
sbb
add
cmp
mov
jo
or
and
mov
jg
repnz
inc
out
xor
fcoml
leave
sub
dec
xor
or
pusha
xor
mov
cmpsb
adc
push
fcoml
fisubl
cmp
icebp
mov
js
push
inc
test
xchg
push
xchg
es
sub
xchg
scas
dec
cmp
dec
sub
scas
adc
orl
cmp
scas
dec
aad
in
push
je
jmp
xchg
cmp
push
repnz
mov
lods
mov
aas
cmp
loopne
xorb
mov
movsb
mov
das
add
call
and
xlat
lcall
sbb
pop
xchg
outsl
jne
inc
sahf
jbe
lock
or
jno
inc
jmp
or
dec
and
lods
xchg
mov
lock
aaa
push
xchg
dec
dec
pushf
cmp
dec
xchg
bound
mov
out
das
mov
sti
inc
pop
jno
xchg
lahf
jnp
imul
lds
jmp
addb
cmp
fwait
inc
push
loop
pusha
out
mov
rolb
inc
ss
pop
loop
sub
loope
in
shlb
in
inc
fistpll
lea
imul
jge
jne
mov
subl
shr
into
sub
aas
icebp
add
dec
arpl
mov
lods
dec
mov
jb
xor
inc
push
out
sbbl
jae
mov
cltd
outsb
stos
movsl
test
xchg
movsl
fs
xor
frstor
sbb
hlt
xchg
dec
cltd
jl
xor
add
js
movsb
xchg
mov
aad
in
incb
add
mov
mov
cli
jmp
adc
fimull
xchg
add
add
sbb
add
add
ror
lret
leave
lds
mov
jg
jae
js
xchg
pop
imul
inc
pushf
es
jb
pop
mov
mov
push
inc
iret
into
and
test
lods
push
scas
mov
pop
xchg
rolb
mov
lea
and
jno
scas
sub
sub
mov
mov
mov
pop
addr16
cltd
and
pushl
out
icebp
xchg
out
fmul
cmp
dec
ds
js
mov
pop
mov
or
fldt
xlat
dec
cmp
xchg
sti
jmp
xor
xchg
inc
jg
out
arpl
push
out
push
mov
out
mov
insb
roll
fs
sub
adc
repz
cmp
jbe
fs
lock
mov
lcall
jecxz
cmpsb
dec
mov
test
sbb
or
out
mov
aam
jb
test
les
fcmovne
shl
andb
xor
out
stos
in
faddl
mov
outsb
mov
adc
push
repnz
pop
add
xchg
cld
loop
repz
mov
mov
mov
mov
push
adc
mov
sub
das
loopne
faddl
xchg
pop
jg
mov
scas
inc
add
add
adc
mov
add
bound
add
arpl
or
outsl
jmp
adcl
dec
mov
test
call
insl
cld
cmp
xchg
mov
cmp
pushf
mov
fdivr
fidivs
pop
dec
sti
cmpsl
mov
lahf
xchg
idiv
cltd
add
cmc
jne
pop
dec
out
jns
push
and
sub
dec
cmpsb
jmp
and
lds
clc
arpl
cmp
repnz
iret
rclb
adc
mov
repnz
jmp
mov
xor
or
inc
repnz
cmp
loope
pusha
call
add
cmp
mov
xchg
pop
adc
cmpsb
and
sbb
push
ja
ret
dec
push
sub
pop
add
adc
je
andb
sti
push
mov
lret
sbb
inc
call
mov
jnp
xchg
sub
loope
pop
push
rorb
dec
rcll
cmp
add
pop
mov
mov
or
js
or
test
push
aad
mov
cmpsb
cld
sahf
jb
ja
adc
push
lods
push
sbb
xor
adc
add
cli
sub
inc
iret
fwait
mov
lea
jge
mov
mov
add
test
mov
pop
subl
in
inc
icebp
popa
mov
mov
in
sbb
add
inc
mov
jg
sahf
rorl
hlt
fwait
or
mov
dec
out
fwait
mov
xchg
sub
sub
cmp
pop
sbb
jg
sub
push
jo
dec
push
icebp
rolb
loopne
dec
jle
popf
scas
and
inc
decb
push
xchg
lcall
jnp
or
xor
jae
loopne
sub
mov
bound
pop
int3
incb
fstps
rorb
push
rcll
and
aaa
mov
push
lock
cmp
out
and
roll
orl
and
add
lock
dec
add
mov
lods
stos
pop
stc
cmpsb
inc
sub
es
sbb
orl
push
ja
pushl
das
repnz
xor
push
pop
clc
push
mov
clc
inc
add
iret
or
xor
mov
inc
sub
xchg
scas
pop
mov
xchg
ror
push
add
jmp
jne
xchg
out
cltd
mov
mov
data16
repz
add
aam
repz
jmp
mov
and
lahf
in
mov
xchg
cwtl
daa
add
addr16
add
xor
sbb
mov
ret
sbb
out
shrl
cmp
push
out
push
and
lock
cwtl
and
sbb
ja
or
and
adcb
jns
mov
mov
mov
jg
pop
xchg
movsl
jne
fs
xchg
pusha
inc
jns
mov
cmc
jno
sub
add
loope
inc
jne
inc
and
out
sbb
mov
lods
lods
iret
ss
and
ja
mov
lret
test
aas
or
xchg
sbb
add
test
mov
and
xchg
add
orb
push
sbb
in
mov
in
leave
adc
fsubr
pushf
push
sbb
mov
adc
loope
cmpsb
jle
xchg
fcmovnbe
mov
xor
jmp
rcl
leave
aad
rcr
or
jg
jae
js
and
popa
mov
pop
sub
roll
mov
cmpsl
or
loope
push
sbb
fisttps
jae
popa
lods
fstps
mov
ret
arpl
xlat
je
pop
pop
imul
jnp
inc
nop
nop
out
push
cld
and
push
dec
int3
jg
push
jp
in
cmp
or
cli
nop
lret
mov
mov
shr
xchg
std
mov
mov
test
test
add
imul
andb
ss
push
dec
push
dec
cmpsl
ljmp
ret
incb
aad
cmp
sub
and
js
sbb
mov
or
jo
xlat
ficoml
cmp
and
jnp
js
sahf
cmp
add
sub
outsl
repz
pop
out
pop
adc
adc
daa
sub
and
ja
setl
cmp
push
mov
xchg
test
jl
and
lret
add
sbb
outsl
jae
sbb
clc
dec
leave
ja
or
jo
pushf
call
jp
cmp
lret
pop
leave
sti
cmp
dec
xor
add
cmc
lds
mov
loopne
lods
fistps
nop
pop
jno
into
jecxz
lret
xchg
xor
ljmp
mov
mov
sub
jb
xchg
xor
cs
addr16
sarl
lahf
adc
mov
xlat
or
repz
pop
dec
adc
jb
aad
aam
adc
push
mov
fmuls
add
xor
mov
clc
lock
negb
fcoms
cld
push
sahf
cmpsl
mov
xchg
je
in
jnp
lds
inc
dec
mov
lods
pop
adc
outsl
jae
sub
push
ljmp
pop
cltd
cltd
and
movswl
cmp
in
cmp
mov
push
repz
mov
xchg
adc
xchg
fadd
mov
adc
int
in
pop
xor
pop
jo
dec
mov
fisttps
jno
mov
sub
jns
mov
sub
mov
sbb
jmp
lds
push
cmp
lds
push
clc
sbb
dec
mov
jmp
ret
xor
gs
or
sub
scas
std
dec
imul
lds
adc
imul
or
sub
sbb
xchg
jb
rorl
jg
aad
loope
mov
movsl
adc
test
xchg
lock
xchg
ljmp
jge
shl
leave
mov
adc
mov
push
dec
cmp
dec
ret
mov
xchg
rcrb
je
call
jp
leave
icebp
scas
push
dec
jnp
sub
or
mov
scas
fiaddl
inc
jbe
repnz
add
inc
push
aas
outsl
dec
adc
sub
dec
push
cli
jne
adc
stos
fsub
shlb
addr16
push
pop
mov
fs
jo
pop
mov
fadd
mov
push
rorb
rcll
pop
jo
sub
or
pop
test
and
pop
push
outsb
jle
mov
dec
inc
test
enter
xchg
decl
sahf
mov
mov
add
and
mov
call
sub
in
add
rclb
test
fdiv
jg
imul
add
inc
dec
stos
js
scas
add
rclb
pop
jb
sub
inc
mov
fisubrl
out
xchg
inc
add
cs
adc
add
fcompl
pop
sub
inc
test
sub
or
fisttpll
xchg
je
lock
ljmp
mov
movsl
inc
add
push
sub
scas
push
push
sub
je,pn
fidivs
jae
aas
and
push
xorb
ljmp
adc
divb
roll
pop
shll
insl
dec
xlat
sbb
call
and
and
cmpsb
cmp
popf
movsl
mov
mov
sub
cld
jns
sahf
aam
fistpl
imul
mov
nop
sub
pop
xor
dec
stos
lods
jp
mov
push
test
add
jb
add
js
shlb
fwait
mov
lret
push
mov
fnstsw
cmp
arpl
aas
mulb
inc
aaa
scas
cwtl
add
jo
xchg
aad
add
xchg
aad
mov
xor
scas
fsts
fcomps
fidivs
clc
jmp
sarl
int3
int3
int3
rcl
aas
in
mov
ja
mov
jae
js
std
scas
jbe
xor
sub
ljmp
jmp
push
cli
in
mov
xorl
or
inc
movsb
pop
je
insb
ficompl
aaa
jns
iret
sub
xchg
inc
and
test
test
cld
jp
ljmp
cmp
hlt
test
rol
andl
sub
dec
mov
repnz
mov
dec
mov
cli
cli
jge
push
pop
cmpsb
aad
dec
jle
push
mov
cwtl
pop
xor
mov
sbb
mov
adc
call
cs
mov
mov
mov
cmc
andl
pop
fsubrp
jge
insb
jle
and
jle
and
mov
cs
pop
cs
icebp
in
mov
fistl
jecxz
cli
push
xchg
xor
jecxz
repz
cmp
jmp
sbb
movsb
subl
push
lcall
out
add
jae
sub
stc
lcall
and
dec
sbbl
and
nop
aas
xor
scas
sbb
mov
pop
cmp
mov
xor
aam
imul
mov
loop
scas
loope
fadd
nop
nop
in
jno
pop
or
test
push
and
ret
push
xor
cmpsl
out
sbbb
sbb
mov
scas
scas
adc
sti
cmp
mov
data16
call
inc
testb
sbb
and
insb
adc
lods
lcall
mov
mov
sub
test
mov
stc
jb
sub
nop/reserved
pushf
subb
mov
sbb
pop
inc
xlat
int3
push
jne
push
cmp
pop
hlt
sbb
push
or
mov
out
jge
std
push
mov
mov
xor
iret
xchg
lcall
andb
and
mov
xor
add
or
or
mov
dec
add
in
lret
jmp
insl
nop
mov
fcoms
cwtl
dec
cli
mov
jl
lods
xchg
imul
jle
in
into
aas
inc
dec
sahf
cltd
out
mov
pop
rcll
mov
push
out
movsl
out
arpl
popf
ja
xor
mov
negl
cmovno
mov
sbb
mov
enter
jmp
mov
or
inc
mov
sbb
or
mov
enter
fwait
orl
cs
sbb
test
xchg
xchg
inc
mov
xchg
lahf
mov
lret
adc
dec
sub
clc
xor
hlt
and
lret
mov
cmpsb
ret
cmpsb
pop
or
jmp
fmul
lods
out
sub
shl
insb
mov
adc
cmpb
lahf
inc
lret
and
into
outsl
sbb
add
bound
movsl
in
repz
xor
jge
dec
add
lea
cmp
cmp
js
xchg
int3
mov
mov
and
cmc
mov
mov
sbb
out
xor
imul
out
or
or
cmc
pop
shr
pop
lods
add
mov
pop
imul
xor
ljmp
outsl
divb
push
in
mov
or
jno
mov
lods
and
call
mov
xor
mov
adc
mov
mov
or
je
push
adc
adc
mov
jecxz
mov
mov
dec
sbb
adc
pusha
fiaddl
stc
jo
dec
int3
xchg
dec
cmp
daa
mov
adcl
insb
cltd
adc
pop
in
fsubp
jl
add
lret
or
push
mov
sbb
add
lahf
shl
out
xor
call
stos
jno
push
adcb
xor
add
ss
stc
mov
cmp
pop
ljmp
xor
xchg
xchg
add
xchg
test
subb
cmp
mov
test
incb
stos
mov
pop
test
jbe
shl
push
xor
xchg
leave
je
xorb
adc
adcb
mov
jbe
rol
cmpb
popa
cmpsb
adc
mov
cmp
pop
cmp
push
push
jecxz
mov
lcall
gs
pop
or
fadd
xor
cmpsb
mov
dec
cld
inc
sub
bound
popl
stc
jmp
les
xlat
lret
rorl
xchg
ds
fs
js
jl
js
xor
dec
loope
push
jo
sub
xor
and
sub
cmp
jno
pop
cmp
mov
hlt
adc
push
fnstenv
mov
outsl
sbbl
popf
push
or
jmp
xchg
out
mov
out
push
rcll
lods
ficompl
out
imul
add
fabs
daa
pop
jo
lods
inc
scas
mov
leave
ja
aad
push
xor
push
outsb
push
mov
sub
cmp
rorl
inc
adc
ds
nop
mov
in
int
sbb
mov
sbb
push
loopne
push
sti
mov
push
in
cmc
jo
fildll
out
bound
jmp
pop
mov
outsl
mov
xchg
test
subb
in
imul
cmp
loop
ja
rolb
pop
pushf
xor
mov
mov
push
sub
xlat
fbstp
mov
gs
je
out
or
lods
cld
ds
mov
xchg
jo
inc
cwtl
sub
insb
andl
test
nop
cmp
sub
in
mov
xor
idiv
fstpl
mov
shr
aas
jge
add
jg
push
cmpsl
mov
push
xchg
rorb
adc
jg
cmc
cld
shll
push
ljmp
sarb
xor
or
mov
cld
sbb
inc
mov
repnz
sub
sub
mov
leave
cmpsb
dec
insl
sbb
shrb
sub
or
pop
aad
add
inc
popf
orb
cmpsl
dec
and
stos
ficompl
sub
jns
jae
movsl
add
cmp
call
es
aam
test
out
mov
lret
cmp
call
arpl
xor
es
adc
or
pushf
sbb
in
jb
pop
ljmp
adc
addl
ljmp
mov
adc
xor
stos
cmp
outsl
in
andb
inc
pushf
fiaddl
sbb
scas
leave
mov
gs
rcr
fwait
or
push
dec
insl
stc
mov
push
fs
ja
arpl
loope
fs
adc
int
push
aas
fnstenv
daa
sub
add
cmc
pop
mov
out
sbb
xchg
nop
xor
in
out
jge
arpl
mov
jno
jmp
mov
xchg
or
loop
lods
xchg
xchg
into
lods
pop
fnstsw
dec
dec
pop
out
mov
push
adc
call
cmp
int
ja
add
sub
es
int3
xchg
mov
cli
clc
cmp
out
scas
sbb
cltd
jp
repz
pop
daa
and
xchg
jo
insl
roll
mov
inc
and
ss
pop
xchg
dec
std
mov
xchg
filds
ja
adc
jg
lock
xchg
stos
nopl
jmp
push
js
sub
imul
mov
into
mov
cmp
pop
pop
cmp
lea
mov
test
cmp
outsb
es
ret
sub
cmp
subl
jae
ljmp
mov
andb
test
push
adc
mov
sahf
mov
sahf
lea
sbb
push
out
jl
pop
mull
mov
cld
or
pop
push
das
fidivl
push
adc
fcoml
sub
ss
sub
stos
scas
dec
rclb
push
mov
ja
lods
andl
inc
lret
and
hlt
push
sub
jle
push
mov
test
jne
sbb
and
in
jmp
ret
push
sti
mov
outsb
mov
add
add
push
or
jl
push
jp
dec
mov
std
mov
fists
jmp
xorl
jae
push
and
push
mov
fldenv
leave
lret
shlb
imul
pop
loope
pop
icebp
and
dec
cli
ret
out
add
or
or
jle
mov
test
js
test
das
jg
sahf
sbb
fstl
jnp
sbb
pop
enter
mov
stos
xor
add
adc
mov
cltd
push
data16
inc
xchg
inc
sub
btr
sub
mov
stos
add
fsubl
jecxz
test
ficoms
test
je
inc
add
out
pusha
cmp
stos
mov
sbb
xlat
mov
mov
sub
cmp
ja
jmp
ror
sarl
vpsubusw
and
pop
je
js
jl
js
enter
gs
aad
push
adc
jmp
sub
iret
xor
lret
daa
and
push
jnp
xor
inc
sbb
mov
add
pusha
loop
sub
fwait
pop
pop
sbb
test
into
dec
lahf
inc
or
inc
in
add
imul
ret
rclb
test
scas
mov
das
xchg
leave
mov
adc
rclb
cmp
cmp
add
insb
xlat
stc
mov
adc
push
xchg
or
sahf
popa
insb
sbb
in
cmpsb
and
hlt
adc
inc
push
test
dec
sbbb
and
jmp
adc
adc
mov
jge
popf
push
xchg
repz
je
xchg
jp
aad
cmc
mov
leave
fildl
pusha
cmc
pusha
push
in
cmp
cs
jle
in
cmc
enter
es
sarl
jnp
xchg
and
shl
out
mov
call
push
xor
mov
mov
fsubrs
decb
sub
subb
xor
stos
xor
sbb
fimuls
sbb
pop
sub
fstl
movsb
roll
add
or
inc
pop
adcb
push
loop
fwait
pop
push
jmp
cmpsb
and
pmaxub
push
stos
jb
insl
xchg
sbb
xchg
notl
push
mov
pop
popf
test
loope
lods
mov
push
sub
std
out
lret
stos
mov
mov
push
push
leave
ret
ja
insb
xor
movsb
nop
xchg
aas
mov
outsb
jmp
movsb
xchg
popf
imul
mov
or
imul
cmp
or
ss
pop
sbb
test
cwtl
movsb
rcrb
mov
call
cmp
xchg
iret
jno
mov
cmp
fnstenv
dec
mov
scas
clc
scas
pop
dec
push
enter
sub
shll
outsl
jp
mov
add
mov
es
lret
jl
hlt
stos
push
ret
fucomp
ret
pmaxsw
repnz
std
lcall
pop
clc
int
ljmp
adc
sub
pop
and
xchg
hlt
add
add
inc
mov
dec
cmpsb
and
rolb
cwtl
dec
mov
lods
jns
jl
outsl
dec
pop
pushf
xlat
pusha
cmpb
lret
mov
dec
inc
adc
sub
aam
xchg
fcmove
adcl
adc
cmp
adc
inc
push
fs
leave
scas
mov
nop
inc
insb
lret
push
iret
mov
mov
mov
les
call
and
insl
push
lret
mov
scas
push
inc
shrl
pop
imul
inc
adc
or
cmp
aas
outsl
adc
mov
inc
xor
scas
push
and
sbb
outsb
mov
mov
cmc
xor
pushf
or
jns
insl
ljmp
inc
ljmp
sbb
mov
pushf
repz
mov
hlt
inc
lods
jle
out
jo
jns
mov
jle
jb
out
icebp
cmc
nop
jge
inc
xchg
ljmp
cs
push
insb
sub
loope
mov
cmp
js
je
lcall
sub
sub
fldl
addl
sub
jno
or
and
jmp
jno
cmp
jmp
lods
ss
das
test
or
adc
sahf
xchg
cld
or
insl
jbe
jle
jmp
sub
and
fistps
outsb
dec
pop
mov
popa
lods
cld
int3
clc
adc
xchg
adc
or
movl
pusha
and
sti
pop
dec
test
int3
fwait
sahf
int
sbb
std
cld
push
negb
in
jmp
aas
xor
pop
icebp
adc
push
sti
sub
aad
inc
in
test
or
or
mov
add
jb
mov
jmp
mov
popa
xor
sbbb
call
pop
jge
fisubrl
bnd
lcall
and
pop
iret
mov
outsl
stos
inc
sti
mov
cmp
xchg
mov
lret
cmpsb
inc
cld
pop
inc
loop
mov
adc
mov
dec
xor
ret
xor
xchg
lods
fwait
add
out
ja
mov
pop
movsb
test
push
jnp
push
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
mov
xor
adcl
add
mov
mov
movl
movl
mov
push
movl
movl
mov
movl
cmp
movl
je
dec
mov
adcl
xor
addl
xor
subl
lea
subl
xor
movl
cmp
jne
movl
jmp
mov
mov
xor
add
mov
and
mov
mov
adcl
xor
add
sbbl
mov
mov
or
mov
orl
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
sbb
push
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
push
pushl
push
pushl
push
pushl
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
push
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
sub
lea
push
pushl
not
push
lea
inc
inc
andl
xor
xor
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
push
pop
subl
xor
adcl
call
cmpl
jne
xor
movl
inc
jmp
sub
movl
adc
movl
lea
xor
mov
lea
mov
subl
mov
mov
sub
mov
mov
xor
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
xor
or
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
xor
adcl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
add
mov
mov
cmp
movzbl
mov
mov
je
sbb
mov
xor
xorl
add
orl
imul
mov
movl
jmp
xor
or
add
add
mov
mov
incl
xor
add
inc
mov
mov
subl
mov
xor
add
cmp
jne
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
mov
mov
xor
lea
mov
mov
mov
movl
mov
movl
mov
mov
xor
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
mov
cmp
ja
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
push
movl
push
movzwl
mov
mov
mov
mov
movl
movl
cmp
jne
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
leave
ret
push
mov
sub
adcl
movl
mov
and
movl
mov
mov
sub
mov
movzbl
add
mov
sub
lea
and
mov
xorl
mov
adc
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
push
call
cmpl
jb
adc
lea
xor
xor
mov
sub
and
mov
dec
mov
xor
push
adc
push
sbb
mov
and
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
or
sub
or
mov
mov
sbbl
xor
sub
mov
xor
andl
xor
add
adcl
add
orl
div
mov
movl
cmp
je
movl
lea
mov
mov
mov
imul
mov
mov
cmp
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
movzwl
add
mov
inc
mov
mov
sbb
mov
mov
mov
mov
push
push
and
mov
mov
mov
adc
xor
adc
push
mov
add
add
decl
mov
sub
lea
adc
mov
mov
mov
xor
xor
add
mov
adc
movl
xor
xor
mov
sub
or
lea
mov
sbb
mov
mov
movzbl
xor
mov
xor
andl
xor
or
inc
mov
cmpl
jne
push
push
call
cmpl
jb
movzbl
or
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
sbbl
mov
not
mov
sbbl
mov
andl
mov
mov
subl
mov
movzwl
xorl
add
mov
mov
mov
andl
xor
addl
add
cmp
movl
jne
mov
adc
mov
xor
sbbl
add
cmp
movl
jne
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
mov
or
xor
xor
add
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
and
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
movl
mov
sub
push
xor
or
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
or
mov
adcl
add
movl
mov
and
mov
push
push
sbbl
test
je
adcl
mov
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
imul
mov
subl
add
sub
mov
xorl
mov
xchg
sub
sub
xor
add
mov
mov
mov
xorl
mov
mov
subl
xor
xor
addl
add
mov
mov
mov
je
mov
xor
add
cmp
movl
jne
pushl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xorl
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
cmp
je
pushl
pushl
addl
call
movzwl
sbb
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
call
xor
add
dec
mov
jmp
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
push
mov
notl
movl
push
movl
mov
mov
movl
push
mov
movzwl
mov
cmp
je
mov
or
mov
mov
add
mov
andl
xor
adcl
add
cmp
movl
je
neg
mov
xor
xor
or
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
push
neg
pushl
pushl
mov
call
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
mov
push
push
sbbl
mov
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
and
mov
add
push
andl
mov
mov
orl
xor
andl
movl
movl
xorl
add
movl
jmp
cmp
jne
mov
mov
movl
mov
movl
mov
notl
mov
mov
movl
mov
movl
jmp
movl
cmp
jne
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
mov
sub
orl
push
xor
or
add
mov
mov
movl
add
andl
push
orl
call
incl
movl
cmpl
jb
jmp
cmp
jne
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
xor
push
movl
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
mov
add
push
adc
mov
sbb
mov
xor
xor
mov
adc
mov
add
add
orl
imul
mov
mov
cmp
movl
jne
not
mov
xor
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
mov
movzbl
or
mov
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
movl
sub
andl
xor
add
inc
mov
cmpl
jne
push
pushl
pushl
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
pushl
pop
inc
mov
jmp
mov
push
mov
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
sub
mov
mov
orl
xor
xor
mov
add
movzwl
movl
cmpl
je
cmpl
jne
push
push
call
xor
xor
dec
mov
jmp
mov
sbb
movb
xor
xor
sub
lea
dec
mov
adc
mov
mov
xor
sbbl
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
push
call
mov
dec
mov
jmp
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
movl
adc
mov
mov
orl
push
sbbl
xor
mov
add
movl
jmp
mov
movl
mov
movl
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
mov
mov
add
xor
movl
cmp
jne
add
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbb
add
mov
add
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
js
add
nop
pop
add
movsb
pop
add
mov
add
lret
add
pop
add
add
add
or
add
pop
add
and
add
xor
add
pop
add
dec
pop
add
pop
pop
add
outsb
pop
add
sbbb
mov
add
pop
add
mov
add
lret
add
pop
add
call
pop
add
add
add
pop
add
push
pop
add
sub
add
pop
add
dec
pop
add
push
pop
add
pusha
pop
add
jo
add
sbbb
xchg
pop
add
movsb
pop
add
mov
pop
add
aam
add
out
add
repnz
add
pop
add
push
pop
add
sbb
add
cs
add
ds
add
dec
pop
add
pusha
pop
add
insb
pop
add
xchg
xchg
pop
add
scas
pop
add
ret
add
pop
add
loop
add
negb
or
add
add
cmp
add
dec
pop
add
pop
pop
add
outsb
pop
add
test
add
pop
add
mov
add
ret
add
pop
add
out
pop
add
cli
pop
add
or
add
sbb
add
pop
add
ds
add
dec
pop
add
pop
pop
add
push
add
test
add
pop
add
mov
pop
add
loop
add
lock
add
or
add
pop
add
cs
add
cmp
add
add
pop
pop
add
push
add
sbbb
xchg
pop
add
test
add
mov
add
les
add
pop
add
loopne
add
repnz
add
push
pusha
add
push
pusha
add
sub
add
add
inc
pusha
add
push
pusha
add
jo
add
test
add
pusha
add
mov
pusha
add
fisubs
add
pusha
add
add
add
or
add
sbb
add
add
inc
popa
add
push
popa
add
pusha
popa
add
js
add
nop
popa
add
mov
popa
add
ret
add
popa
add
in
add
popa
add
sbb
add
add
cmp
add
add
pusha
bound
add
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
arpl
add
arpl
add
arpl
add
arpl
add
add
push
arpl
add
add
add
mov
add
les
add
arpl
add
arpl
add
arpl
add
add
sbb
sub
cmp
add
dec
add
push
add
test
add
add
test
add
mov
add
ret
add
add
aam
add
out
add
hlt
add
add
or
add
add
and
add
add
cmp
add
inc
add
push
add
pop
add
data16
jo
add
jl
add
test
add
add
cmpsb
add
scas
add
mov
add
int3
add
aam
add
call
add
cld
add
push
data16
push
data16
push
data16
and
add
data16
xor
add
inc
data16
dec
data16
push
data16
pop
data16
outsb
data16
js
add
andb
add
add
lcall
add
data16
aam
add
loopne
add
lock
add
add
sbb
add
add
xor
add
inc
add
push
add
data16
jb
add
jl
add
xchg
add
add
mov
add
add
ljmp
add
push
add
and
add
add
cmp
add
add
add
insb
push
add
mov
add
push
add
les
add
push
add
out
push
add
push
imul
add
imul
add
add
add
add
add
add
add
add
xchg
cmpsb
add
xchg
cwtl
add
add
add
dec
insb
pop
push
imul
arpl
ja
jp
gs
dec
je
ja
popa
push
jno
jae
dec
dec
jae
dec
push
push
push
push
fs
insl
push
inc
dec
push
insl
inc
push
dec
data16
jne
imul
jno
arpl
dec
dec
push
imul
push
imul
imul
dec
js
pop
popa
push
jbe
dec
jns
insl
pop
inc
dec
outsb
inc
add
add
and
add
add
push
add
add
add
add
add
add
add
mov
push
add
rclb
dec
add
rcll
add
addr16
insb
bound
popa
push
jns
je,pn
jo
aas
inc
jo
dec
popa
insl
gs
js
inc
inc
pop
inc
push
inc
inc
push
inc
dec
push
inc
inc
push
inc
dec
dec
cmp
add
add
add
cld
pop
add
add
add
add
add
add
add
add
add
inc
push
add
lcall
add
pop
add
mov
add
pop
add
dec
imul
add
add
nop
pop
add
movsb
pop
add
mov
add
lret
add
pop
add
add
add
or
add
pop
add
and
add
xor
add
pop
add
dec
pop
add
pop
pop
add
outsb
pop
add
sbbb
mov
add
pop
add
mov
add
lret
add
pop
add
call
pop
add
add
add
pop
add
push
pop
add
sub
add
pop
add
dec
pop
add
push
pop
add
pusha
pop
add
jo
add
sbbb
xchg
pop
add
movsb
pop
add
mov
pop
add
aam
add
out
add
repnz
add
pop
add
push
pop
add
sbb
add
cs
add
ds
add
dec
pop
add
pusha
pop
add
insb
pop
add
xchg
xchg
pop
add
scas
pop
add
ret
add
pop
add
loop
add
negb
or
add
add
cmp
add
dec
pop
add
pop
pop
add
outsb
pop
add
test
add
pop
add
mov
add
ret
add
pop
add
out
pop
add
cli
pop
add
or
add
sbb
add
pop
add
ds
add
dec
pop
add
pop
pop
add
push
add
test
add
pop
add
mov
pop
add
loop
add
lock
add
or
add
pop
add
cs
add
cmp
add
add
pop
pop
add
push
add
sbbb
xchg
pop
add
test
add
mov
add
les
add
pop
add
loopne
add
repnz
add
push
pusha
add
push
pusha
add
sub
add
add
inc
pusha
add
push
pusha
add
jo
add
test
add
pusha
add
mov
pusha
add
fisubs
add
pusha
add
add
add
or
add
sbb
add
add
inc
popa
add
push
popa
add
pusha
popa
add
js
add
nop
popa
add
mov
popa
add
ret
add
popa
add
in
add
popa
add
sbb
add
add
cmp
add
add
pusha
bound
add
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
arpl
add
arpl
add
arpl
add
arpl
add
add
push
arpl
add
add
add
mov
add
les
add
arpl
add
arpl
add
arpl
add
add
sbb
sub
cmp
add
dec
add
push
add
test
add
add
test
add
mov
add
ret
add
add
aam
add
out
add
hlt
add
add
or
add
add
and
add
add
cmp
add
inc
add
push
add
pop
add
data16
jo
add
jl
add
test
add
add
cmpsb
add
scas
add
mov
add
int3
add
aam
add
call
add
cld
add
push
data16
push
data16
push
data16
and
add
data16
xor
add
inc
data16
dec
data16
push
data16
pop
data16
outsb
data16
js
add
andb
add
add
lcall
add
data16
aam
add
loopne
add
lock
add
add
sbb
add
add
xor
add
inc
add
push
add
data16
jb
add
jl
add
xchg
add
add
mov
add
add
ljmp
add
push
add
and
add
add
cmp
add
add
add
insb
push
add
mov
add
push
add
les
add
push
add
out
push
add
push
imul
add
imul
add
dec
outsb
imul
inc
outsl
outsb
je
outsl
insb
jae
js
add
insl
popa
addr16
imul
outsl
jbe
add
push
add
gs
je
push
outsl
outsl
insb
bound
inc
js
add
popa
addr16
imul
dec
arpl
add
popa
je
push
je
je
jae
imul
pop
add
je
outsl
jns
jb
jo
jb
jns
push
popa
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
mov
push
imul
push
arpl
push
add
push
add
je
popa
jb
outsb
je
sgdtl
je
insb
addr16
je
insl
add
scas
add
fs
arpl
inc
add
push
push
jb
outsl
jb
add
imul
popa
jae
push
add
xchg
add
je
outsl
jns
popa
jb
je
add
add
outsb
imul
push
arpl
add
push
imul
movsb
add
pop
outsl
outsl
insl
gs
aaa
add
popa
jb
jo
gs
jne
inc
add
inc
add
je
outsl
arpl
add
cwtl
add
inc
imul
jae
popa
addr16
add
loop
inc
imul
outsl
ja
js
add
add
jbe
push
imul
mov
push
imul
ja
add
ja
arpl
add
xchg
add
je
outsl
jns
outsb
jne
sbb
inc
gs
arpl
dec
outsb
outsw
add
add
jne
insb
push
arpl
add
je
insb
addr16
je
insl
dec
outsb
je
roll
jbe
jo
imul
inc
add
je
popa
jb
outsb
je
sti
add
dec
outsb
push
arpl
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
hlt
add
je
insb
popa
jae
dec
outsb
outsw
inc
add
add
imul
je
gs
add
inc
gs
arpl
insb
insb
push
popa
outsb
add
test
dec
outsl
popa
fs
arpl
insb
gs
je
jb
push
add
gs
arpl
insb
insb
dec
outsb
outsw
add
add
popa
jb
gs
inc
add
add
je
insb
addr16
je
insl
push
gs
inc
add
outsl
outsb
imul
push
jb
je
cmp
inc
insb
addr16
je
insl
dec
outsb
je
addl
outsb
jae
jb
dec
outsb
jne
add
inc
jb
popa
je
push
imul
push
add
add
jae
popa
addr16
outsl
js
js
add
add
outsb
fs
gs
popa
addr16
add
jl
push
push
outsb
gs
outsl
jo
jo
add
inc
outsl
jo
push
arpl
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
pop
add
je
jns
je
insl
dec
outsb
jne
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
jmp
outsb
dec
outsb
jo
je
gs
je
jo
add
add
imul
push
add
arpl
outsl
jo
jo
outsb
jne
add
add
imul
outsl
ja
outsl
push
outsl
jo
add
push
imul
popa
jae
inc
js
add
outsb
add
je
imul
outsb
addr16
add
xchg
inc
gs
insb
addr16
jb
arpl
cmp
inc
push
insb
addr16
jne
je
outsb
add
stos
add
fs
imul
add
jo
imul
arpl
add
fs
arpl
insb
gs
je
jb
inc
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
gs
imul
js
push
add
xor
push
gs
popa
jb
je
outsl
jae
icebp
add
jae
dec
gs
popa
addr16
add
mov
fs
je
imul
inc
jb
popa
je
inc
imul
imul
jb
insl
push
add
mov
inc
jb
ja
arpl
inc
js
add
push
gs
push
add
imul
imul
add
jae
jb
outsb
je
push
add
push
add
je
jb
jo
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
gs
jo
popa
je
push
arpl
add
fs
popa
jb
je
out
add
imul
jae
addr16
add
pop
add
gs
je
dec
arpl
inc
jb
insl
push
gs
jne
arpl
add
fs
outsl
je
data16
gs
popa
addr16
add
mov
inc
gs
insb
addr16
jb
arpl
add
push
imul
popa
jae
inc
add
xchg
dec
outsb
je
jb
popa
insb
inc
gs
imul
js
add
add
imul
jae
addr16
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
and
dec
gs
outsl
popa
jb
dec
popa
jns
jne
dec
popa
insl
gs
add
jb
inc
gs
imul
arpl
add
outsb
jae
popa
je
dec
gs
popa
add
push
push
imul
add
je
outsl
jns
jne
jae
jb
bound
inc
gs
outsl
jo
imul
xor
inc
gs
outsb
jne
je
insl
dec
inc
add
inc
outsl
jb
addr16
jne
fs
imul
add
je
outsb
jne
je
imul
add
gs
je
inc
imul
jb
insl
inc
add
call
outsb
dec
arpl
add
jecxz
inc
imul
outsl
ja
js
add
add
jae
popa
addr16
outsl
js
add
insb
imul
jb
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
inc
gs
gs
inc
insb
addr16
popa
bound
gs
add
ja
outsl
arpl
push
arpl
add
jbe
insb
imul
je
add
insb
push
imul
inc
gs
outsb
jne
je
je
add
cmp
push
gs
jne
jae
jb
outsl
jae
add
push
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
ja
outsb
imul
arpl
mov
dec
outsl
popa
fs
insl
popa
addr16
add
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
add
insl
push
outsl
inc
push
add
add
jne
inc
push
imul
add
add
je
jne
jae
jb
outsl
jae
add
add
insl
outsl
jbe
dec
outsb
jne
add
add
outsb
imul
push
outsl
imul
inc
push
xor
cs
insb
add
mov
gs
jbe
outsb
je
add
add
gs
je
dec
popa
imul
sbb
inc
gs
jne
bound
inc
outsl
jb
popa
je
add
pusha
add
outsb
fs
imul
gs
add
jecxz
inc
jb
popa
je
push
imul
inc
gs
imul
imul
jns
add
fiaddl
dec
jae
popa
insb
imul
addr16
jb
jne
add
outsl
add
outsb
fs
gs
jne
arpl
add
add
inc
popa
fs
outsl
fs
je
add
mov
inc
jb
inc
imul
dec
push
dec
add
push
gs
imul
jne
push
imul
add
je
push
dec
outsb
outsw
add
add
gs
popa
insl
gs
imul
insb
gs
je
je
add
je
outsl
jb
jne
je
jo
gs
bound
arpl
js
add
push
insb
gs
js
mov
push
gs
outsl
jbe
inc
imul
jns
add
dec
add
je
jns
je
insl
inc
imul
jns
add
inc
imul
je
imul
push
gs
push
inc
outsl
outsb
je
js
add
out
add
je
imul
mov
inc
outsl
insl
jo
jb
inc
imul
ja
inc
insb
jne
push
inc
jne
data16
add
int3
add
jae
jb
jo
outsb
push
add
jo
outsb
insb
outsl
arpl
add
gs
jae
dec
jne
gs
add
add
fs
imul
add
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
add
inc
gs
gs
inc
imul
jb
popa
je
dec
jne
gs
add
add
je
push
dec
outsl
arpl
add
inc
gs
imul
popa
je
add
into
add
jae
jb
outsb
inc
add
adc
dec
outsl
arpl
push
imul
imul
jne
arpl
js
add
imul
je
push
dec
outsl
je
imul
outsl
outsb
push
add
xchg
add
je
outsl
insl
insl
dec
outsl
fs
push
je
je
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
js
add
cmp
dec
jo
outsb
inc
imul
outsb
addr16
add
sbb
gs
imul
gs
add
inc
gs
imul
popa
je
add
xchg
add
je
outsl
insl
insl
inc
outsl
outsb
imul
dec
jae
popa
fs
jb
je
push
je
add
imul
jne
arpl
add
add
je
outsl
insl
insl
push
je
je
add
imul
push
push
jb
outsl
jb
je
add
add
gs
inc
imul
gs
outsb
push
gs
js
gs
imul
gs
mov
inc
gs
je
insl
dec
popa
insl
gs
add
rolb
je
arpl
push
add
jae
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
jae
popa
arpl
add
jae
add
jb
outsb
je
mov
pop
pop
jae
je
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
xor
arpl
je
add
cli
add
jb
outsl
imul
out
jae
jb
outsl
insb
insb
add
pop
pop
arpl
insl
outsl
fs
fildl
pop
popa
insl
jae
pop
gs
je
add
imul
add
jb
je
add
sahf
add
jae
bound
gs
add
jge
data16
add
lds
jo
imul
add
insb
outsl
ja
jb
stos
add
ja
imul
data16
je
add
pop
pop
arpl
inc
imul
jae
jb
outsb
je
add
add
outsl
insb
outsl
ja
jb
and
pop
gs
je
add
jns
je
insl
add
call
js
je
add
je
insb
add
iret
add
outsb
add
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
and
arpl
jae
outsb
add
add
jb
outsl
jne
add
ja
jae
bound
add
arpl
imul
add
gs
insb
add
outsb
jne
add
add
jb
push
add
jb
outsl
insb
add
movsb
add
ja
imul
add
jb
jb
outsl
jb
add
outsl
ja
add
push
add
imul
pop
pop
addr16
popa
imul
and
arpl
jo
add
xchg
add
popa
insb
jo
popa
add
add
jae
jb
outsb
je
add
dec
push
push
inc
push
push
cs
insb
add
xchg
inc
jb
popa
je
inc
imul
add
insl
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
inc
gs
imul
add
arpl
push
imul
inc
gs
jne
jb
outsb
je
bound
arpl
test
inc
gs
gs
inc
js
outsb
je
outsl
imul
inc
jb
popa
je
push
arpl
outsb
add
insb
je
add
push
gs
dec
gs
imul
inc
push
je
dec
push
add
popf
add
gs
je
inc
outsl
outsb
je
outsb
imul
aad
push
gs
imul
add
inc
outsl
arpl
add
add
insb
insb
push
outsb
add
add
je
imul
addr16
js
add
add
jae
outsl
jb
inc
inc
add
popa
je
dec
popa
je
push
push
push
gs
bound
je
jb
arpl
add
inc
gs
popa
jo
outsl
fs
testb
gs
je
gs
push
outsl
fs
inc
gs
outsb
inc
outsl
js
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
movl
inc
inc
add
sahf
add
gs
je
inc
outsl
outsb
je
add
push
popa
addr16
add
je
dec
inc
imul
fs
outsl
outsb
je
gs
jne
arpl
add
xchg
add
outsl
inc
push
add
mov
inc
jb
popa
je
inc
jb
jae
dec
outsb
imul
add
je
popa
jns
jne
add
inc
gs
gs
inc
insb
imul
inc
gs
gs
dec
gs
imul
push
arpl
jae
bound
cli
add
je
gs
inc
outsl
insb
outsl
jb
add
inc
gs
dec
inc
imul
popa
jb
push
popa
add
jb
popa
je
inc
dec
inc
push
arpl
outsb
add
rolb
outsb
fs
popa
je
add
popa
je
inc
imul
imul
test
inc
gs
gs
inc
js
outsb
je
outsl
imul
mov
je
outsb
insb
add
push
imul
inc
gs
bound
arpl
add
dec
xor
cs
insb
add
pop
jp
jp
push
and
add
insl
inc
add
or
dec
addr16
xor
dec
cmp
jp
cmp
dec
es
jae
and
dec
push
push
pop
push
cmp
dec
addr16
xor
dec
cmp
jp
cmp
dec
es
insl
dec
and
dec
push
bound
arpl
dec
bound
dec
jae
cmp
dec
xor
dec
push
jb
jae
orl
nop
jge
aas
dec
dec
xor
dec
ds
inc
dec
cmp
dec
xor
dec
push
sbbb
setae
jl
jge
aas
dec
dec
xor
dec
ds
inc
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
mov
or
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
mov
mov
ret
or
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
ret
psrlq
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
popa
dec
xor
dec
xor
dec
ds
xor
dec
push
loop
jecxz
repz
jl
jge
jl
jge
ds
jg
xor
dec
xor
dec
ds
inc
dec
cmp
dec
cmp
add
add
adc
jl
jge
aas
dec
add
push
inc
add
inc
add
inc
add
insl
inc
add
insl
inc
add
inc
add
inc
add
insl
inc
add
test
pushf
clc
bound
add
inc
add
inc
add
inc
add
inc
add
imul
stos
imul
insl
inc
add
test
outsb
imul
sbb
orl
call
inc
add
addr16
mov
jne
mov
incb
mov
imul
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
and
pushf
clc
sub
add
imul
push
dec
insb
popa
cmp
push
pop
lds
add
pop
imul
pop
ss
add
jge
add
add
add
add
push
add
insb
add
inc
add
dec
add
add
inc
add
dec
add
add
add
inc
add
push
add
add
insb
add
imul
add
add
imul
cli
jne
test
inc
add
pop
dec
inc
dec
inc
dec
pop
dec
inc
dec
add
dec
xor
add
pop
dec
pop
dec
add
dec
xor
dec
inc
dec
pop
dec
inc
dec
add
dec
xor
add
pop
dec
inc
dec
dec
dec
push
dec
inc
dec
pop
dec
xor
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jge
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
xlat
lds
ret
fidivs
into
mulb
push
sbb
jno
add
add
mov
inc
add
mov
int3
push
inc
add
dec
jae
imul
imul
in
adc
addr16
push
pop
jb
inc
inc
dec
imul
dec
inc
dec
imul
add
push
dec
inc
outsb
jno
inc
dec
jno
imul
je
jo
dec
insb
popa
inc
inc
ja
inc
add
push
push
dec
popa
pop
addr16
popa
outsb
pop
insb
inc
add
dec
push
mov
mov
or
dec
add
add
add
movl
cmp
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
cwtl
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
call
add
incl
out
aas
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
lea
pusha
push
incl
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
in
xor
add
movl
test
ljmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
js
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
cwtl
mov
or
rorl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
push
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
aaa
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
and
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
cmp
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
cwtl
clc
xor
inc
cmp
pushf
mov
test
clc
dec
inc
mov
pushf
rol
movsb
incb
inc
mov
test
clc
pushf
inc
decl
push
cld
jge
cmp
add
jmp
les
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
fmuls
test
test
cmp
pushf
xor
add
inc
dec
cmp
sarl
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
cwtl
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
cwtl
lret
xor
mov
lea
xor
add
inc
dec
mov
push
mov
or
dec
inc
xor
push
mov
add
inc
decl
add
inc
mov
cwtl
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
rolb
mov
xor
orb
dec
leave
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
cmp
shrb
clc
add
cmp
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
sar
shl
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
sbb
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
les
inc
push
aas
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
cmp
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
cmp
pushf
xor
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
cwtl
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
cwtl
cmp
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
xchg
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
std
mov
clc
test
je
mov
cld
add
add
faddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
in
add
push
and
incl
fmull
inc
nop
ljmp
lea
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
js
inc
inc
int
inc
sub
add
int3
mov
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
icebp
or
out
mov
pop
push
cmp
sar
incl
inc
ljmp
push
mov
and
inc
push
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
cmp
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
cmp
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
js
data16
idiv
inc
fadd
mov
andl
flds
pop
push
in
incl
loopne
inc
jmp
addl
mov
inc
call
outsb
inc
js
divb
mov
orl
jb
decl
mov
test
inc
rorb
adc
mov
mov
cmp
test
pushl
mov
add
jmp
pushf
decl
add
data16
add
add
test
dec
mov
mov
inc
cmpb
mov
add
push
mov
call
mov
data16
test
out
lea
test
inc
ljmp
decl
test
incl
test
rclb
test
inc
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
in
xchg
aam
call
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
cbtw
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
jmp
lea
faddl
xor
lea
test
decl
mov
dec
clc
call
lea
lea
test
popf
push
add
xor
cwtl
mov
incl
push
push
inc
shlb
lea
call
test
incl
clc
call
jmp
inc
jnp
add
mov
mov
data16
inc
lea
test
inc
dec
test
cmp
mov
pushl
lcall
incl
pop
mov
mov
decl
mov
mov
test
incb
incl
cmp
pushf
inc
mov
hlt
test
cmp
pushf
or
pop
lock
test
clc
mov
lahf
lret
mov
add
add
rorb
mov
incl
cld
mov
add
jge
test
sbb
xchg
call
push
inc
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
cmpl
pushf
xor
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
cld
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
cwtl
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
out
adc
jne
mov
fcomps
add
incl
mov
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
add
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
cmpl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
cmp
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
cwtl
pushf
xor
jne
mov
icebp
icebp
shl
mov
cmp
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
cmp
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
clc
add
dec
hlt
xor
mov
in
jge
mov
dec
cmp
xchg
mov
add
cmp
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
cmp
fdivl
test
push
add
cmp
sets
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
cld
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
or
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
ljmp
xchg
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
rol
out
add
add
and
fs
incl
js
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
cmp
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
idivb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
data16
pushf
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ss
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
cwtl
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
data16
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
orps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
cld
js
popa
data16
into
push
data16
pop
xor
add
cld
cld
add
ss
add
into
ret
pop
add
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
pop
mov
je
xor
mov
xor
pop
cmp
jne
mov
cld
push
pop
inc
stc
aaa
test
clc
test
xor
fs
or
cld
mov
push
push
lret
aaa
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
data16
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
cld
push
add
add
add
lret
lock
lret
cmp
pushf
jge
aaa
cld
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
xor
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
xor
add
data16
dec
fisttps
add
ret
lea
add
cmp
pushf
add
add
inc
test
xor
push
cwtl
push
xor
inc
cmp
jbe
mov
or
inc
test
cmp
in
hlt
push
push
push
push
mov
cwtl
cwtl
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
cmp
pushf
jb
add
inc
daa
inc
inc
xor
dec
cwtl
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
cmp
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
cmp
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
cmp
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
aas
add
push
add
mov
cld
inc
add
rcrl
mov
mov
or
xor
enterw
jmp
ret
inc
mov
add
rorl
icebp
or
inc
inc
mov
or
jne
mov
rolb
add
cld
ret
dec
mov
mov
jmp
mov
mov
sub
mov
in
test
add
add
cmovge
add
cld
mov
adc
mov
xor
cmp
jne
mov
adc
push
test
clc
xor
xor
dec
adc
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
cmp
pushf
push
movl
dec
inc
andb
pushf
push
xchg
fsubr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
cmp
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
cmp
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
add
xor
add
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
and
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
movsb
sar
enter
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fcomps
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
fdivr
testb
dec
clc
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
sarl
pushf
add
mov
xor
test
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
cwtl
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
fiadds
xor
jb
add
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
cwtl
mov
jge
decl
push
push
adc
hlt
sub
add
adc
adcb
add
push
adc
repnz
add
or
add
pusha
adc
fldenv
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
adc
sbb
adc
js
adc
jns
adc
les
ljmp
add
mov
inc
add
mov
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
jg
add
adc
lds
add
adc
xchg
adc
pop
adc
xlat
push
adc
jno
inc
add
inc
add
inc
add
inc
add
mov
inc
add
ja
add
sbb
add
add
adc
scas
xor
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
adc
fs
adc
lods
inc
adc
pop
push
adc
xchg
push
adc
mov
adc
repz
adc
enter
icebp
mov
inc
add
mov
inc
add
movsb
inc
add
movsb
inc
add
xor
pop
push
cmp
push
add
inc
cmp
inc
xor
add
push
xor
dec
push
push
xor
push
inc
xor
pop
xor
add
dec
pop
push
xor
pop
xor
push
dec
aaa
cmp
dec
push
pop
cmp
dec
add
xor
pop
inc
xor
aaa
cmp
dec
add
inc
pop
pop
inc
xor
inc
add
xor
xor
dec
inc
aaa
aaa
add
aaa
pop
push
pop
xor
pop
inc
dec
dec
inc
add
dec
aaa
pop
inc
dec
inc
pop
xor
pop
inc
xor
dec
xor
pop
xor
cmp
dec
dec
cmp
xor
cmp
pop
xor
push
pop
xor
cmp
cmp
push
inc
pop
push
dec
ss
dec
inc
add
xor
push
inc
inc
pop
push
add
pop
xor
pop
push
add
xor
pop
push
dec
pop
pop
inc
dec
inc
add
aaa
pop
push
push
dec
aaa
pop
xor
push
xor
xor
inc
inc
push
dec
pop
push
dec
inc
add
push
pop
dec
dec
aaa
pop
dec
add
pop
pop
dec
inc
pop
push
add
ss
aaa
inc
xor
xor
pop
dec
push
xor
add
pop
pop
push
inc
dec
aaa
inc
pop
push
push
add
dec
add
add
xor
push
add
add
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
add
add
dec
add
add
push
add
add
pop
add
add
add
add
xor
add
dec
add
dec
add
add
dec
add
add
add
add
push
add
add
inc
add
inc
add
add
xor
add
add
add
add
add
pop
add
add
xor
add
push
add
add
add
add
cmp
pop
add
add
xor
push
add
add
add
push
add
xor
pop
add
add
add
dec
add
push
add
add
add
push
add
add
xor
dec
add
inc
add
dec
add
xor
inc
add
add
add
xor
dec
add
aaa
add
inc
add
dec
add
xor
inc
add
add
dec
add
inc
add
inc
add
push
add
add
add
inc
push
lds
in
call
cmp
mov
adc
add
add
pop
jp
outsl
inc
outsb
gs
fs
gs
outsb
jne
dec
push
imul
pop
jo
dec
jno
inc
js
jno
push
bound
