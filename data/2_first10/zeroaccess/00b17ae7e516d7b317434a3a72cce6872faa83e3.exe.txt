push
mov
sub
mov
adc
mov
mov
or
mov
sub
push
movl
mov
mov
mov
sbb
mov
and
mov
orl
mov
mov
add
orl
mov
add
mov
jmp
iret
inc
loopne
push
adc
fmuls
jl
js
ja
and
mov
mov
jmp
xlat
sahf
mov
in
mov
adc
ss
data16
mov
dec
inc
movsl
mov
pop
inc
xchg
mov
fdiv
ret
orl
adc
movsb
jge
dec
mov
and
cwtl
clc
pusha
lds
popf
mov
inc
push
mov
cli
imul
loop
push
stos
xor
notb
out
mov
cmp
xor
sub
jae
jp
call
jle
push
push
jl
adc
or
cmp
lret
xor
mov
aam
jne
push
ret
pop
sbb
pop
pop
mov
test
xchg
xchg
sbbb
xor
lret
stc
loop
out
cli
sub
test
aad
int
inc
or
xor
ljmp
xchg
cmp
xor
sub
xor
cmp
les
mov
mov
test
sub
mov
dec
aam
dec
enter
adc
dec
hlt
jo
std
lea
dec
int3
and
fsubrs
je,pt
cli
xchg
push
jge
jno
dec
xor
clc
fildl
pop
xor
fadds
jmp
push
pop
in
fcomps
mov
dec
inc
repnz
push
in
fwait
popa
cmp
sub
push
xor
mov
sahf
lcall
sub
mov
add
fcoml
addr16
push
dec
lea
outsl
mov
and
lahf
or
xlat
fucomip
mov
fsubrs
jnp
push
lcall
pop
pop
adc
dec
shrb
addl
repnz
xchg
mov
out
mov
jg
insb
xchg
in
inc
jae
or
adc
jmp
js
or
lock
jl
cmpsb
or
fildll
sbb
lcall
sub
inc
rcrb
movsb
cmp
sub
test
ds
mov
pusha
aad
pushf
lds
aaa
dec
add
insb
roll
scas
inc
push
sarb
inc
mov
jp
cmp
lods
push
sbb
cmp
and
mov
mov
and
movsl
aam
les
stc
addb
loopne
pop
dec
rcrb
call
and
insb
jl
mov
je
push
fcmovu
cmp
cmp
add
dec
lods
inc
fmuls
sti
cmpsb
cmp
imul
cmpsl
or
notl
mov
mov
adc
pop
jbe
mov
movsb
lret
mov
jno
fimull
push
push
dec
mov
lea
or
test
frstor
mov
xchg
imull
cmp
jg
outsb
jbe
imul
cmp
mov
ss
rcr
mov
mov
dec
ret
cmp
inc
inc
lret
dec
xchg
iret
sub
shlb
push
lods
mov
js
xchg
dec
inc
fwait
sarb
xchg
ucomiss
fimuls
mov
dec
sarl
or
test
pop
jno
cwtl
mov
in
push
fwait
lcall
cmp
ljmp
inc
add
sbb
pusha
sbb
add
das
sub
hlt
xor
daa
cmp
jno
lods
leave
jne,pn
jp
stos
ljmp
aad
sub
nop
jbe
arpl
inc
mov
cmp
sub
in
jns
add
cltd
es
xor
imul
dec
inc
gs
or
inc
fwait
mov
and
les
inc
push
int3
xchg
inc
jp
movsb
inc
push
outsb
pop
loopne
sbb
dec
scas
insl
shrb
sub
jb
outsl
mov
xchg
mov
ss
inc
push
stos
push
sarl
sarb
out
add
dec
std
add
or
cmpsb
mov
cmp
fxch
daa
pop
jbe
imul
xor
dec
inc
xchg
mov
imul
mov
fimull
in
aaa
sbb
clc
test
adc
jnp
or
adc
and
pmullw
mov
sub
sbb
test
push
ss
aas
mov
fadds
or
sarl
roll
add
arpl
ljmp
rcl
fcmovb
push
xor
mov
or
addb
sar
rcl
adc
shrl
xor
sahf
int3
xor
jl
pop
mov
jl
pop
popf
lods
adc
mov
jg
xorb
sti
lahf
movl
enter
inc
adc
mov
rorl
inc
int
call
sub
int3
push
mov
xchg
push
jp
xor
cld
inc
idiv
fwait
enter
cmpsb
je
mulb
aad
cli
cmp
mov
stos
fsts
jge
fcomps
jnp
out
add
out
dec
aaa
out
gs
addr16
loope
push
sbb
dec
cwtl
jno
pop
jne
in
jecxz
push
aas
mov
inc
in
imul
pushf
cli
out
test
sub
out
dec
out
clc
push
in
adc
push
xor
test
sub
xchg
test
mov
lock
mov
adc
sbb
in
lock
adc
jo
mov
jl
jg
jl
sub
mov
lea
imul
dec
stc
das
and
lods
lea
sti
pop
js
pop
inc
cmp
adc
xchg
xchg
mov
sti
pusha
mov
pop
push
xchg
or
insl
movsb
cmp
mov
xchg
lahf
stos
and
push
inc
int3
adc
pushw
ja
push
stc
jno
clc
test
rcll
sub
or
out
fidivs
lret
add
inc
movsb
jl
lahf
iret
mov
mov
or
incl
aaa
and
mov
jle
not
ds
ljmp
aas
mov
sbb
stc
adc
shll
pushf
repnz
mov
les
movb
and
out
loop
das
and
bound
das
out
or
in
cwtl
pop
arpl
jle
xchg
or
inc
add
fucomp
adc
aaa
fs
jns
leave
stc
sub
push
shl
test
test
test
add
adc
jmp
add
repnz
mov
popf
testb
mov
inc
mov
add
aam
dec
push
test
aad
dec
stos
sbbl
cmp
stc
push
mov
and
sbb
lods
das
jmp
fisttpll
or
mov
fucomp
fdivrl
push
test
pop
iret
mov
pop
push
loopne
call
xchg
mov
push
loop
lret
cmp
jbe
and
adc
add
je
xor
inc
mov
or
sahf
mov
mov
cmc
pop
stc
subb
sti
mov
xchg
mov
pop
push
xor
dec
lods
mov
mov
addl
sub
notl
mov
movl
sbb
add
mov
not
orl
orl
cmpl
movl
mov
jmp
mov
jg
pushl
pushl
call
sbb
sbb
sub
or
orl
lea
adc
mov
or
mov
and
mov
xorl
mov
adc
add
mov
dec
mov
mov
adc
jmp
mov
xor
js
pop
mov
xchg
shlb
inc
cmpsl
mov
aaa
push
outsb
push
dec
pusha
negl
and
cmp
jge
aaa
test
pushf
jg
mov
or
lea
jb
sub
mov
insb
cwtl
scas
mov
sbb
and
out
xchg
push
or
xor
jbe
add
mov
stos
dec
mov
test
push
cld
cli
out
cmp
int3
lds
push
pop
out
inc
inc
xor
or
outsb
ss
cmp
xchg
xchg
sbb
insb
sbb
jmp
lret
aam
repnz
adc
jne
sub
aas
sub
jp
sbb
or
push
pusha
enter
sub
xchg
test
clc
xchg
testb
mov
movsl
not
mov
fsub
adc
pop
rolb
dec
sbb
inc
addr16
je
mov
adc
and
jbe
jg
dec
lock
xchg
into
inc
dec
adc
cmp
addr16
jp
into
es
shl
out
and
fwait
fcmovb
jne
mov
ret
adcb
addl
push
je
lods
cmpsb
mov
les
xchg
add
cmp
fwait
push
dec
out
daa
shrl
add
outsl
or
fildll
pusha
mov
mov
cmp
dec
mov
pop
and
out
cs
scas
mov
pop
or
lods
xchg
mov
lds
loop
add
xchg
aad
add
mov
dec
adc
jecxz
stos
dec
leave
jl
cmp
push
cmc
xchg
popf
ret
and
shlb
out
xor
adc
fsubrl
pop
push
pop
adc
or
cld
jo
jecxz
rol
dec
jno
inc
xlat
jne
lea
jl,pn
insl
push
movb
mov
dec
fists
rclb
into
mov
pop
sub
cmp
and
imul
add
loop
ljmp
adc
clc
fimuls
inc
pushf
rcll
ret
clc
xor
stos
stos
adc
push
sbb
aaa
inc
xor
rcl
push
daa
mov
push
dec
inc
push
cwtl
mov
jbe
and
ss
mov
mov
adc
pusha
leave
pop
adc
push
mov
movsb
cmp
inc
sbb
dec
mov
xchg
mov
mov
inc
dec
movsb
sbb
jo
imul
inc
test
repz
daa
xchg
mov
jnp
xchg
cmp
cld
sbb
loopne
loopne
pop
out
notb
testb
leave
lea
icebp
enter
rolb
shrb
mov
int3
mov
xchg
xchg
adc
lds
decb
aaa
jmp
jno
test
push
push
mov
or
sbb
jb
add
pop
mov
into
lods
mov
cltd
lret
push
mov
xchg
arpl
mov
shll
mov
mov
lret
std
push
sbb
dec
sbb
pop
mov
call
jecxz
mov
xor
les
outsl
es
or
mov
xchg
mov
dec
sbb
nop
add
pushf
sahf
fadds
sbb
mov
mov
dec
jno
pop
mov
dec
scas
insb
sahf
nop
xlat
insb
sub
dec
xor
xor
pushf
push
jns
adc
stos
andl
jmp
push
stc
push
imul
pop
addr16
lret
stos
sbb
adc
cli
lcall
push
cmpsl
inc
mulb
xchg
mov
stos
xchg
out
testl
sar
repnz
js
lds
xchg
add
out
in
cmp
pop
mov
test
push
bound
mov
xor
imul
fwait
cmpsb
xchg
fstl
and
xchg
add
xor
xchg
lods
xchg
cmpps
cmp
push
jmp
fildl
xor
insl
ljmp
adc
or
ret
inc
cmp
push
sub
mov
in
lret
cmpb
nop
addb
shll
icebp
aam
push
movsl
test
pop
popa
fwait
xchg
fistpll
mov
dec
mov
xor
sarl
jl
test
xor
lret
push
add
stos
ljmp
sub
sbb
dec
fists
lret
bound
or
jb
dec
clc
cmpsl
scas
movl
sbb
insl
sub
data16
outsb
mov
xchg
push
add
scas
mov
push
test
subb
aam
mov
test
rcrl
add
mov
sbbl
int3
sbb
movsb
or
dec
fwait
out
and
mov
cmp
popf
mov
push
imul
mov
and
mov
push
lret
popa
push
imul
repz
jb
loope
mov
movb
out
aaa
insb
sbb
pop
mov
sub
repnz
and
dec
adc
fiadds
lds
popf
or
sbb
jo
push
ret
fstpl
int3
inc
mov
mov
in
dec
mov
int3
cltd
mov
pop
inc
and
loope
push
ds
adc
mov
mov
ror
sub
lea
addl
push
mov
pop
pushf
ja
test
lret
and
sti
aaa
jne
stos
xabort
dec
jp
xor
jmp
jmp
pop
scas
jns
pop
xor
cmp
xchg
pop
jns
jle
or
mov
pushf
mov
out
aaa
xchg
les
sbb
push
into
les
jno
cltd
jb
adc
out
xchg
cltd
adc
xchg
call
ja
fcomps
js
popf
adc
push
mov
cld
and
test
jbe
popf
add
inc
push
mov
out
mov
mov
movsb
mov
lret
sbb
cli
call
test
jb
jbe
fldt
mov
jnp
lahf
mov
and
and
xchg
fildll
dec
inc
fmull
pop
rcrl
fstps
mov
daa
cs
dec
lods
cmc
ret
inc
mov
or
push
xchg
dec
mov
or
clc
cmp
ret
dec
dec
mov
push
shrb
dec
in
nop
xchg
pop
xor
cmp
and
and
cmp
bound
jecxz
cmpsl
scas
jmp
cmpsb
and
cwtl
shrl
cmp
test
jg
mov
dec
pop
pop
mov
movsb
fists
mov
add
out
notb
leave
pop
dec
lds
fbstp
sbb
mov
push
fs
cmpsb
xchg
add
inc
scas
cli
push
test
add
lret
lret
int
lods
xchg
loope
int3
xor
and
nop
push
sahf
mov
and
inc
rorl
pop
dec
push
scas
mov
shrd
adc
shr
mov
jmp
mov
lock
popf
mov
cmpsl
push
and
xchg
cmpsb
xchg
int
in
lods
aam
adc
lret
insl
mov
inc
xchg
popf
loope
aam
xor
ds
test
jbe
mov
jl
sub
outsl
xor
cmp
push
in
test
and
popa
sub
or
movsb
xchg
loopne
ljmp
aam
test
pop
in
outsl
jl
loopne
xchg
cmpsl
inc
adc
jne
in
test
mov
lcall
nop
cs
fisubrl
rolb
call
or
icebp
pop
loopne
cmp
test
shrb
scas
pop
lret
aam
jmp
je
test
cmp
cmp
dec
and
mov
arpl
mov
popf
push
movsb
jo
scas
mov
subl
lods
adc
testl
enter
sbb
cltd
adc
stos
adc
dec
sub
mov
fsts
iret
dec
cmp
lea
dec
xor
int3
mov
call
mov
mov
jecxz
cmp
andb
or
pop
jge
icebp
push
and
sub
out
sbb
ficoms
ret
xchg
out
and
icebp
in
rolb
push
xchg
pop
outsl
push
mov
push
push
xor
repz
lahf
imul
or
sub
pop
mov
jno
cmpsl
cmp
popa
sbb
aaa
inc
repnz
mov
push
out
mov
push
push
sahf
loope
hlt
xchg
cmp
xchg
inc
bound
addl
sti
cltd
jae
and
dec
cmc
inc
lret
xchg
movsb
mov
add
int
cli
roll
add
mov
cmc
push
in
add
xrelease
or
cmpsb
rcll
mov
jo
lods
into
fsubl
int3
std
lods
outsl
mov
aam
xorl
in
outsb
aad
xlat
mov
in
lret
dec
push
push
bnd
push
inc
sbb
push
repnz
xor
adc
xor
in
mov
lods
call
mov
into
cli
inc
xor
stc
add
push
sti
loopne
pop
mov
gs
xchg
xor
dec
pushf
roll
imull
sub
mov
inc
mov
fwait
sahf
lret
loop
arpl
testl
mov
xor
jp
pop
gs
or
pushf
cmpsl
lret
flds
clc
jno
jle
add
sub
std
mov
adc
mov
jle
mov
pop
lret
fdecstp
push
add
mov
loope
push
pop
mov
out
sub
and
cmp
in
hlt
je
xorb
add
in
add
and
xchg
or
and
loopne
jbe
xchg
or
and
pop
mov
xchg
mov
insl
dec
push
jl
mov
push
imul
jns
mov
mov
out
dec
addr16
xchg
dec
popf
ret
inc
iret
dec
outsb
xor
ja
fisttps
cmp
jp
mov
in
sbb
fprem1
scas
mov
fbld
and
add
pushf
push
out
add
test
sbb
cmp
cmpsb
fstpt
dec
adcb
xor
pop
xchg
push
push
mov
rcrl
mov
leave
inc
mov
ja
pop
mov
test
xchg
xchg
pusha
mov
bound
add
loope
in
div
jo
dec
jge
test
outsb
fldt
push
pop
leave
orb
in
adc
in
mov
pop
sbb
out
ret
ret
int3
jle
and
clc
mov
push
jl
lcall
andl
jns
repz
repnz
clc
sub
jnp
adcl
repz
test
push
hlt
sbb
outsl
popf
pop
adc
xlat
or
jle
jae
adc
ss
cmp
or
mov
subl
mov
popf
or
jge
adc
dec
popa
cs
pop
dec
inc
loop
add
pop
lret
insb
mov
stos
add
push
mov
adc
out
ja
cmc
push
popa
dec
and
daa
inc
inc
fcompl
jb
cmp
mov
jb
mov
or
push
xchg
mov
pop
sbb
iret
hlt
xchg
repnz
push
lea
cmp
xchg
sub
shr
ds
cs
mov
sub
das
test
cmp
mov
mov
xchg
scas
iret
pxor
xor
nop
and
int
loope
jle
shl
pop
dec
pop
in
pop
push
cltd
sub
in
pusha
push
mulb
pop
xchg
out
ror
pop
lea
int
pop
out
mov
imul
test
clc
jb
es
mov
enter
xchg
mov
fsubl
outsb
stos
xor
lret
nop
imul
pop
pop
jns
jns
dec
mov
jnp
fnstenv
pop
mov
sub
divl
mov
pop
out
or
popa
in
or
arpl
push
push
mov
out
and
cmp
pop
xchg
cmpsl
call
mov
or
inc
cmp
dec
xchg
push
pop
das
ret
shlb
enter
sub
in
ss
cli
adc
lods
and
mov
jge
into
inc
push
add
adc
add
pop
jl
sbb
xchg
push
lods
mov
mov
pop
dec
rol
lock
cmpsb
and
mov
adc
xchg
sbb
mov
into
ret
push
mov
xor
mov
fisttpll
xchg
jno
add
jecxz
mov
insl
fistpl
daa
xchg
insb
add
xor
cmpsb
mov
in
add
shll
xchg
mov
outsl
xchg
ja
and
cmp
popf
pop
sub
xchg
sti
and
rorl
mov
loope
in
xchg
pop
arpl
dec
ds
out
test
inc
divb
mov
jl
pop
sub
in
mov
fdivp
mov
dec
xchg
hlt
inc
add
loope
or
sahf
insb
out
in
jb
fs
jl
adc
dec
push
add
xor
xor
arpl
lods
jns
xchg
inc
fstp
aam
stos
stc
fisttps
mov
inc
arpl
sub
push
mov
cmp
ret
sub
loope
or
pop
lock
xor
out
test
push
adc
mov
sar
and
out
adc
cmp
mov
data16
and
cmp
pop
sub
mov
loopne
cmp
adc
xor
jnp
repnz
movsl
jb
ret
mov
push
cmpsb
xor
lods
ljmp
jb
popa
and
sbb
pop
push
fcoml
jae
mov
mov
popa
push
mov
dec
mov
testl
fmul
das
outsl
xchg
cwtl
or
adc
loopne
or
jecxz
mov
xlat
or
and
pop
cmp
add
movl
add
rorb
rolb
add
movl
movl
movl
jmp
movl
not
jg
pushl
push
push
push
pushl
push
pushl
call
sub
xorl
andl
andl
addl
addl
adcl
movzbl
adc
jmp
sti
loopne
stos
dec
or
xor
inc
cwtl
sub
out
ja
mov
push
fnstcw
inc
add
in
pop
stos
xchg
dec
pop
cli
cmp
inc
rorb
push
js
daa
adcb
mov
sbb
pushf
and
cmp
dec
cmpsb
pop
out
dec
in
xchg
xchg
rcll
mov
jl
xor
cmp
xor
repz
mov
jo
mov
lods
or
pop
test
sbb
movsl
pop
ret
mov
mov
movsb
pop
in
push
push
pop
xor
loop
pop
dec
bound
scas
jno
cmp
or
cmp
sub
aaa
out
cmp
pop
mov
std
mov
inc
jmp
iret
jnp
adc
mov
das
int
mov
adc
in
adc
bound
dec
add
or
pop
jg
testb
mov
sub
dec
jo
fucomi
lcall
jnp
pushl
je
cmp
sub
adc
jmp
mov
sbb
in
fcmovne
call
and
lret
xorl
pop
addr16
cld
imul
mov
cltd
push
push
in
and
addb
mov
xor
mov
icebp
sub
xor
or
mov
stc
mov
outsb
jge
dec
xchg
test
insb
inc
cmp
movsl
mov
out
adc
mov
rolb
xchg
mov
enter
cmp
jl
stos
jmp
loopne
cwtl
aaa
push
popf
jnp
in
stc
movsl
xor
test
shll
sbb
and
mov
sahf
out
push
push
sbb
xchg
popl
ss
mov
cmp
inc
mov
testb
out
xchg
mov
and
loopne
loope
xor
xor
hlt
mov
sbb
addr16
ret
in
inc
push
push
mov
data16
rcl
clc
mov
rcr
int
mov
jns
cld
jg
repz
ds
cwtl
inc
push
test
xor
mov
mov
sub
subb
imul
js
sbb
push
icebp
dec
imul
mov
adc
repnz
sar
fwait
jge
lods
outsl
out
xor
mov
cmp
push
adc
xchg
in
jecxz
inc
and
fcoml
lods
fwait
mov
je
fdivs
xchg
push
push
fs
inc
push
push
insl
inc
cli
mov
sub
and
loope
mulps
lret
jbe
rcrb
jb
scas
pop
pop
xor
cld
lods
jbe
enter
cmc
add
es
bnd
mov
and
or
push
lcall
cmp
inc
or
sub
lock
fucom
stos
mov
add
out
mov
adc
test
push
push
mov
jecxz
dec
mov
push
lret
bound
mov
and
and
lahf
loop
hlt
loope
mov
lahf
ret
mov
push
inc
pop
push
pushf
dec
dec
jnp
or
xchg
ret
data16
in
lock
mov
dec
push
dec
pop
sbb
mov
int
mov
mov
pop
repz
aaa
cli
and
mov
mov
xor
inc
mov
mov
mov
sub
outsl
push
pop
outsb
xchg
or
int
jnp
cmc
jp
push
mov
stc
inc
push
mov
pop
jge
cwtl
imul
xchg
adc
jae
push
adc
dec
sahf
leave
xchg
test
adc
mov
rorl
sub
stc
insl
out
arpl
or
loopne
pop
adc
test
hlt
pop
pop
cwtl
jle
stos
pop
adc
das
cmpsb
arpl
push
inc
pop
lea
movl
xchg
cmp
cli
in
les
outsb
dec
loopne
test
mov
inc
movsl
jecxz
xor
sbb
mov
jmp
ret
subb
dec
sbbb
and
gs
cmp
mov
lret
pop
sti
ljmp
lret
adcl
das
mov
cmp
mov
enter
jge
cs
enter
push
ds
push
ja
push
aaa
push
mov
mov
lahf
cmpl
jne
mov
mov
cmpsb
pop
fwait
or
or
mov
jns
ljmp
ror
and
lock
sbb
push
test
pop
mov
shll
and
adc
scas
jmp
cmp
adc
xor
test
repz
mov
sub
cs
mov
or
mov
push
push
xorl
pop
mov
sar
sarl
imul
pop
bound
cmp
adc
mov
xchg
lahf
xor
mov
xchg
push
das
fnstcw
sbb
shlb
push
xor
in
xor
inc
xor
xchg
fadds
xor
das
js
mov
pop
or
xor
fbstp
push
cmp
cmc
lahf
loop
sub
fnstenv
sar
and
push
loopne
test
xchg
inc
daa
pop
fistps
insl
jo
cmp
out
jmp
or
in
setbe
mov
jb
out
daa
sub
xor
mov
adc
add
push
jo
or
leave
je
loopne
push
lahf
add
ss
sub
testl
fldcw
insl
repnz
sub
jno
repnz
addr16
loopne
mov
jb
xor
xor
loope
add
mov
fsubl
data16
or
not
push
lods
pop
ja
cmc
aaa
jg
icebp
ret
xor
lds
loop
xor
repz
les
pop
ss
push
stc
add
xchg
jmp
xchg
mov
push
and
jno
dec
dec
hlt
jae
jp
or
mov
or
rcll
dec
jl
sub
test
sbb
mov
aaa
push
je
movsl
ficoms
iret
popf
add
xchg
or
ds
ss
jl
mov
insb
inc
fldenv
insb
aam
sbb
jl
pop
dec
jae
das
pop
and
lods
test
push
test
fwait
sub
rcrl
in
or
xor
ss
inc
movups
fisttpl
adc
nop
pop
pop
mov
movsb
outsb
ret
sbb
cmc
cmp
cmp
int
mov
mov
xor
sarb
push
push
mov
inc
inc
sbb
dec
lahf
dec
das
popa
mov
pop
in
divb
in
clc
pop
mov
shrb
pop
mov
cmp
and
dec
cmp
std
out
mov
sub
cmpl
and
and
ljmp
xchg
cld
sbb
sub
pop
dec
or
lods
fnstsw
mov
shl
inc
push
addr16
mov
jecxz
cmp
pop
pop
add
dec
pop
cmpsl
mov
mov
jnp
pop
push
ror
inc
sub
adc
popa
jecxz
mov
push
test
or
in
es
bound
push
les
adc
movl
movl
sub
movl
movl
and
movl
movl
movl
xor
or
adc
movl
cmpl
movl
mov
jmp
not
jl
push
pushl
pushl
push
call
add
sbbl
add
sbbl
xorl
sbbl
notl
or
movl
addl
movl
movl
movl
mov
or
mov
movl
dec
movl
movl
cmpl
movl
movl
movl
movl
jmp
mov
jge
push
call
movl
orl
orl
add
xorl
xorl
xorl
and
movl
cmpl
movl
mov
jmp
mov
mov
jb
push
pushl
push
push
pushl
push
pushl
push
push
pushl
pushl
call
orl
sbbl
adc
addl
movl
sbbl
movl
add
movl
jmp
and
jnp
sub
mov
js
jl
das
aam
ja
jbe
pop
xchg
or
jb
mov
test
fs
ljmp
fdivrs
add
pop
push
out
hlt
shll
enter
add
shl
fwait
roll
sar
xchg
jmp
push
jns
loop
xor
jne
add
sbb
into
hlt
adc
ljmp
push
inc
lock
jno
sbb
cld
mov
cmp
mov
ja
pop
add
movsb
cmp
mov
sub
sbb
out
push
add
pushf
mov
sub
mov
jb
sub
xorb
push
rorl
fs
or
es
add
xor
es
rolb
sub
jg
push
lods
insl
mov
jg
sbb
mov
or
push
jge
into
push
push
and
cli
jo
fs
dec
inc
xor
out
loope
movsb
fsts
and
xor
mov
cwtl
mov
popf
int
ja
and
in
jmp
add
fsubs
push
cmp
mov
out
xlat
and
lcall
les
fdiv
and
inc
mov
xchg
pushf
shrl
mov
idivl
xorl
dec
stos
adc
jns
mov
jno
lahf
mov
adc
in
mov
sub
pop
add
dec
outsl
cli
scas
inc
hlt
mov
sar
xor
negb
xchg
xor
cmpsl
xchg
lahf
dec
lods
cmc
adc
nop
and
leave
int
lds
sbb
or
fildl
cmc
in
push
mov
mov
or
jnp
dec
out
cli
out
sub
es
pop
pushf
fidivl
sti
pop
mov
cmp
subl
push
dec
ljmp
mov
push
fwait
pop
push
jp
loopne
aaa
jno
imul
mov
pop
inc
fimull
in
mov
adc
pop
jle
jmp
mov
pcmpgtw
lods
stc
add
mov
aad
and
lods
roll
sub
out
sbb
mov
loope
cmpsl
dec
repnz
sbb
mov
jg
or
je
dec
fldt
xchg
jae
ds
mov
repnz
and
cmp
jl
mov
mov
push
add
gs
sbb
inc
bnd
imul
jne
aad
add
xor
jo
jbe
xor
add
arpl
test
fisubrs
add
shr
or
push
dec
scas
dec
dec
xor
and
add
sub
repnz
ja
and
popf
xchg
fcomps
popf
cltd
pop
cmp
aaa
mov
clc
das
mulb
xrelease
dec
and
jo
pop
popa
dec
dec
iret
stos
cmp
imul
hlt
shr
hlt
mov
test
out
inc
push
adc
push
pop
xchg
inc
inc
cwtl
shrb
or
jbe
adcl
aaa
cli
push
adc
adc
push
add
enter
cmp
push
xchg
push
jle
push
mov
xor
shll
jnp
inc
cltd
dec
push
lods
mov
int
cmp
imul
frstor
pop
sub
add
int
fidivs
daa
xor
into
add
mov
hlt
fs
imull
add
inc
fnstsw
rorb
push
enter
fimull
dec
mov
aad
bound
jno
movsl
in
mov
mov
in
in
test
mov
pop
jge
js
iret
mov
je
dec
jbe
popa
sbb
add
mov
xor
cltd
adc
dec
mov
lcall
pushf
adc
ret
cmp
and
xchg
out
and
xchg
lods
out
incb
jg
repz
inc
adc
xchg
scas
xlat
inc
popa
mov
xchg
popf
pop
pop
out
xchg
mov
sub
mov
jmp
cmp
in
mov
add
roll
fiaddl
test
sub
sub
stc
repz
sbb
imul
mov
sarl
add
sbb
mov
repnz
les
xchg
jge
or
dec
xchg
lret
fsubrs
pop
cmp
insl
test
mov
imul
sbb
call
inc
aad
addr16
or
inc
mov
outsb
jecxz
mov
adc
xchg
loop
es
clc
pusha
fidivrl
repnz
pop
xchg
dec
pop
lods
jns
jns
xor
ds
pop
mov
loopw
xor
fadd
int
aas
xor
pop
mov
ljmp
popa
dec
xchg
adc
adc
sahf
aas
js
sbb
fidivs
dec
sub
sub
movsl
and
xchg
inc
rcr
xchg
push
add
push
mov
iret
cmp
push
and
movsl
out
adc
push
cmpsl
stos
add
sbb
out
sti
test
adc
leave
mov
fildll
nop
or
mov
add
fidivrs
test
xor
loope
inc
adc
popf
sbb
mov
xchg
xor
repz
push
decb
enter
sub
mov
inc
outsb
lea
ret
mov
ds
or
adc
push
dec
stc
stc
add
gs
faddl
pop
fstps
pop
popf
movsl
cli
add
xor
inc
nop
in
in
pusha
push
jmp
insl
loop
out
mov
push
sub
xor
jmp
push
adcl
dec
mov
xchg
fcomps
and
add
xchg
subb
xor
movsl
lret
fldcw
pop
cmp
sub
or
and
add
pop
arpl
mov
psubb
cli
popf
jecxz
shlb
scas
xor
leave
scas
dec
icebp
or
in
xor
aaa
sahf
xchg
inc
inc
push
ljmp
out
push
sahf
jl
lret
sbb
add
mov
sub
ret
mov
sahf
jp
scas
rcr
jbe
push
xchg
xor
sub
cltd
je
test
jl
xchg
add
inc
push
inc
sub
add
div
dec
jle
sbb
push
push
push
gs
jmp
dec
push
ret
lods
cwtl
mov
sahf
push
jo
adc
ret
and
or
mov
and
push
sub
sahf
mov
jle
xchg
addr16
loopne
mov
sub
mov
mov
dec
pusha
and
jbe
jb
sbb
jno
cmp
dec
sti
and
or
jns
inc
cltd
imul
cmp
fdivr
xchg
rorl
or
das
and
adc
cmc
out
pop
dec
hlt
imul
fwait
sbb
mov
add
insb
mov
mov
pop
test
insb
fdivrs
clc
xchg
cmp
mov
mov
add
lret
scas
and
dec
ds
in
cmc
jno
mov
aas
fs
mov
lds
xchg
xchg
cmp
push
or
das
inc
movsl
mov
xchg
jns
xchg
out
rorb
xchg
fucomip
aaa
jno
xchg
sub
fmulp
sub
ss
inc
movl
inc
movl
xorl
movl
mov
xor
movl
not
movl
mov
addl
jmp
in
outsl
dec
gs
notb
inc
test
cmpsl
les
ja
sub
pop
and
mov
mov
lahf
or
pop
xor
hlt
jmp
ds
fadd
movb
lret
imul
mov
arpl
xchg
sbb
pop
mov
test
pop
lret
cmc
push
mov
cmp
and
outsb
mov
jno
xor
cmp
ds
cmc
or
mov
rorb
sub
jbe
add
dec
xchg
pop
mov
mov
out
call
adc
and
add
xchg
sbb
push
jnp
or
sbb
dec
sti
or
shll
jecxz
jo
in
insb
cmpsl
stos
inc
aad
push
leave
jg
xor
dec
or
mov
jecxz
shlb
push
sti
xor
aad
cltd
jne
push
hlt
lret
cmovnp
cmp
and
jns
jb
adc
push
xor
or
popf
les
xchg
shl
sahf
push
das
adc
inc
loop
arpl
out
cmp
push
sbb
push
mov
adc
leave
fsubr
dec
lock
in
aas
call
loope
stos
pop
or
mov
sub
js
or
lret
call
divl
sbb
scas
aam
out
dec
xlat
sub
xor
jno
xlat
loope
xchg
add
pop
test
repnz
ds
inc
aaa
gs
repz
in
xchg
shrb
adc
sub
inc
xchg
ss
mov
rep
stos
mov
mov
outsl
mov
jb
jp
out
out
movsb
jl
pop
and
ljmp
jae
xchg
jle
lods
cmp
mov
clc
and
xchg
jae
mov
fs
cld
inc
cs
dec
nop
insl
sub
mov
add
fsub
mov
shrl
pop
icebp
dec
inc
lods
xor
sbb
fmuls
iret
lods
scas
adc
jmp
push
scas
xchg
comiss
dec
mov
cmpsb
aaa
inc
movsb
or
call
ljmp
adc
fsts
cmpb
pop
adc
cmpsb
xchg
xchg
fwait
cmp
in
mov
scas
jno
test
in
push
xchg
inc
lea
pop
mov
xchg
xchg
movsb
test
pushf
daa
push
mov
and
or
cmp
jp
call
add
pop
leave
sti
in
jl
stos
loop
add
test
test
cli
or
push
insb
xor
mov
adc
fists
hlt
jns
pop
and
and
mov
mov
jmp
jb
test
jmp
leave
or
mov
mov
enter
outsl
mov
movsb
sahf
jo
aad
hlt
rorl
aam
mov
inc
fidivrs
mov
sub
addr16
dec
inc
cmp
pop
sub
lret
sbb
loope
jp
pop
inc
mov
mov
xor
shll
dec
sahf
xchg
loope
cld
test
sbb
test
cmp
add
pop
jae
dec
mov
and
mov
cmp
or
repnz
ds
orl
push
jne
roll
pop
enter
sub
fprem1
jp
nop
mov
jbe
rcll
xor
imul
and
scas
xor
rolb
sub
orl
mov
push
in
jb
test
mov
movsb
mov
test
mov
jne
fcmovb
in
mov
xchg
add
mov
sbb
mov
int
cmpsl
cmp
lahf
mov
je
push
and
in
gs
not
scas
shr
cs
dec
inc
cs
mov
sbb
adc
pop
js
bound
int3
pop
and
pop
pop
xor
xor
jne
clc
iret
inc
scas
leave
in
dec
roll
adc
inc
push
mov
push
xlat
popf
cli
iret
mov
into
pop
mov
push
inc
lea
jbe
xor
mov
mov
dec
fcoms
cmpsl
shr
imul
cmpsl
hlt
fimull
inc
add
mov
int
inc
jmp
fs
mov
xchg
and
out
out
aaa
jnp
push
push
roll
inc
ret
cmp
pop
jp
push
add
pop
lret
testl
lea
jno
mov
mov
jnp
call
into
push
dec
push
fidivs
mov
fimuls
cld
push
imul
arpl
cld
popa
jmp
fcomip
int
les
or
cwtl
mov
jno
iret
hlt
popf
shlb
xor
lret
test
sub
jae
push
das
xor
sub
jb
xor
loope
jl
jno
mov
in
into
inc
addr16
jnp
lcall
les
inc
call
mov
ja
fisubl
loopne
movsb
gs
aad
xlat
pop
dec
sub
sahf
mov
popa
adc
repz
ds
mov
cmp
scas
mov
xlat
mov
or
add
rolb
pop
out
cmpsl
adc
ss
outsl
push
out
repnz
xchg
fisubrl
xchg
cmp
push
in
cmp
test
dec
mov
dec
lret
mov
into
ljmp
ds
push
into
pop
xchg
sbb
ffreep
rorl
jnp
sbb
mov
inc
push
mov
inc
lcall
cwtl
leave
fsubs
push
lret
inc
jp
cmpsb
popa
movsl
xchg
pop
mov
loope
mov
cwtl
add
and
pop
dec
inc
xchg
rcll
or
loop
icebp
cmp
pop
mov
mov
imul
push
sbb
jno
lods
sti
fwait
sbb
push
cmp
ja
jnp
pop
mov
pop
add
mov
mov
pop
sti
adc
sahf
movsl
add
pop
nop
lock
ret
pop
pop
mov
or
dec
outsl
mov
pushf
aad
aam
test
push
cmp
push
jbe
loope
lret
xchg
dec
rorl
or
push
cwtl
les
add
xchg
aaa
hlt
stos
jecxz
lea
inc
dec
mov
dec
xchg
push
lds
pushf
movsl
xchg
push
sbb
stc
fcomps
fcoms
mov
xchg
int3
test
mov
and
mov
divl
mov
out
xchg
xor
test
out
mov
mov
out
jmp
sbb
cmc
in
lds
dec
daa
test
lea
adc
les
loopne
or
shrb
or
mov
test
cmp
int3
dec
arpl
mov
or
les
or
sub
jae
sbb
pushf
push
in
dec
jg
outsl
sbbl
sahf
add
gs
fucom
test
int3
popf
mov
add
shr
mov
lret
test
jo
mov
aad
sahf
stos
int
and
inc
sti
in
adc
jae
mov
loope
mov
orl
push
adcl
push
andl
push
push
adcl
call
adc
mov
subl
mov
xor
mov
sub
mov
movl
jmp
mov
daa
xchg
gs
or
mov
dec
sub
mov
ja
in
push
push
mov
insl
loope
xchg
mul
inc
cmp
test
aaa
test
inc
inc
push
push
ficoml
mov
les
ja
or
shrb
and
icebp
aaa
push
repnz
movntps
mov
mov
stos
rcrl
push
in
int3
adc
enter
dec
mov
mov
pushf
dec
mov
jle
fcoms
xchg
mov
adc
cmp
insb
xchg
pop
fs
mov
scas
or
pop
lods
mov
adc
sbb
sub
push
inc
mov
pop
jb
adc
sbb
xchg
pop
pop
xchg
outsl
fwait
lds
aas
andb
dec
pop
adc
cmp
or
enter
cmp
in
js
test
sbb
mov
xchg
pop
mov
push
insl
xor
or
out
push
sub
adc
or
and
pop
out
scas
clc
xchg
sub
jmp
fucomp
ljmp
lea
push
push
bound
cmp
mov
pop
je
mov
add
jle
data16
fists
dec
inc
sub
shll
fimuls
jae
jg
push
sub
jecxz
out
movsl
test
pop
shll
dec
xchg
imul
mov
into
adc
int3
call
in
addr16
mov
pop
fdivs
cld
push
mov
aas
fstpl
push
jge
mov
and
adc
fcoms
jo
jp
push
mov
hlt
movl
packsswb
out
loopne
imul
fmuls
sbb
mov
mov
out
test
adc
jp
fdivs
xor
jle
std
jl
inc
xchg
daa
shll
test
sub
test
mov
xchg
jnp
pushl
shlb
aam
jo
divb
push
pop
sarl
test
add
xor
cld
mov
sub
jmp
push
sti
cltd
push
push
arpl
cmc
and
sbb
mov
sete
dec
pop
pop
or
mov
push
mov
pop
dec
mov
ja
push
jae
scas
out
adc
mov
pushf
inc
pusha
gs
repz
icebp
out
mov
testb
mov
lods
cwtl
imul
movb
jmp
jns
pop
sub
lcall
pop
or
jp
nop
pop
sub
test
das
dec
add
mov
pop
enter
xor
test
push
or
rcr
jle
jle
mul
pslld
pop
push
cmp
pop
cmp
lret
jp
and
pop
mov
dec
loopne
xchg
aam
adc
xchg
push
stos
sti
fldcw
pop
add
or
data16
sub
shl
lods
insl
fldcw
or
push
ret
xchg
xor
sbbl
in
gs
ret
mov
mov
or
ljmp
ret
mov
push
adc
xor
mov
xor
pop
cmpsb
xor
aas
push
and
pop
loopne
push
dec
insb
cli
imul
lods
aam
mov
cmp
or
jbe
ret
or
in
mov
out
sub
sbb
fwait
cmc
or
mov
clc
dec
cmp
mov
cld
mov
sbb
mov
or
in
mov
scas
push
pop
lret
pop
dec
rorl
push
in
dec
imul
xor
mov
iret
insl
push
cltd
ds
movsb
inc
jae
loop
pop
cwtl
into
adc
jmp
mov
pop
stos
cmp
movsb
mov
enter
lods
push
add
popa
in
dec
xchg
sbb
ja
jle
xchg
in
inc
push
cli
or
adc
dec
icebp
jmp
push
pop
or
cmp
dec
jecxz
test
ljmp
movsl
outsl
ljmp
push
sub
xchg
jl
or
outsb
data16
cmpsl
fsubl
cwtl
mov
sbb
lret
push
adcb
inc
lcall
adcl
inc
das
xor
jmp
xchg
int3
adc
and
insl
les
xchg
sub
jnp
adc
mov
out
pop
mov
fwait
lock
jae
mov
push
lock
scas
ret
mov
jge
iret
push
add
and
js
fidivrl
or
pop
ljmp
std
jae
sub
and
mov
push
inc
sub
mov
fidivl
adc
cmp
sbb
push
cmp
inc
adc
sub
xor
stos
les
or
jae
rcr
pop
dec
cmp
adcb
lret
mov
loopne
push
repnz
lods
shrl
fidivs
pop
test
ss
xlat
push
lods
dec
hlt
mov
push
mov
lea
mov
push
adc
lea
aaa
xchg
test
nop
sbb
jae
mov
jno
xor
pop
mov
mov
je
shrb
mov
loope
inc
aas
jmp
popf
mov
test
fidivrs
shll
and
inc
out
sbb
fisubrs
xor
or
je
mov
jle
test
dec
lahf
or
jne
mov
aam
mov
xchg
or
sbb
or
push
pop
mov
iret
jmp
mov
push
test
rorb
aad
add
push
lock
sub
mov
xchg
fidivrs
fstpt
call
jno
scas
cltd
inc
push
inc
add
cltd
push
or
loop
ret
pushl
sub
jnp
jmp
xchg
aam
mov
and
repz
aaa
add
andb
sbb
push
mov
jb
fsub
movsl
outsb
fnstsw
test
loope
and
xchg
and
jmp
sarb
xchg
flds
mov
inc
inc
mov
cmpl
rolb
icebp
pop
aas
sub
cwtl
inc
decl
mov
cmp
mov
jbe
repz
add
dec
loope
fs
sub
call
or
in
test
dec
das
dec
insl
xor
mov
les
movsl
ss
jge
push
sbb
out
adc
stos
push
push
jmp
or
lahf
dec
popf
imul
lcall
ja
imull
push
xchg
insl
cmp
jne
loopne
xor
push
jp
push
mov
cli
mov
inc
jecxz
xor
xchg
call
pop
enter
andnps
addb
je
dec
pushl
test
dec
lret
xor
pop
push
or
aaa
fldlg2
loopne
sbb
mov
inc
mov
sbb
arpl
loop
scas
testb
cmpb
mov
stc
push
and
int
scas
adc
in
xor
fwait
add
and
sbb
into
aas
fs
outsl
ret
ret
sub
mov
adcl
lea
mov
mov
or
subl
and
mov
or
adcl
xor
movl
cmp
movl
jne
mov
and
mov
shrd
adcl
shr
adc
mov
mov
orl
shl
xor
andl
jmp
sub
sub
sub
adc
xchg
mov
movsb
ja
pushf
xor
or
mov
nop
imul
hlt
ss
push
lcall
test
mov
dec
stos
addr16
add
mov
xchg
pop
das
iret
or
pop
mov
mov
call
movl
loope
pushf
sarb
push
inc
push
pop
or
cmp
dec
addb
push
xor
push
das
mov
mov
jp
movsl
sbb
popa
nop
cmc
ss
mov
pop
lea
xor
pusha
cltd
jo
push
shrl
arpl
scas
add
jge
add
ret
dec
fbstp
int
mov
push
mov
jl
std
mov
ds
pop
add
adc
cltd
imull
push
nop
sahf
icebp
movsb
nop
push
je
mov
pop
push
shrl
push
inc
adc
jae
int3
sarl
stc
aad
push
fsin
sbb
mov
stos
rcrb
sahf
adc
in
lcall
fwait
mov
shll
mov
fsubrp
lea
jl
push
and
icebp
gs
mov
dec
stos
icebp
inc
push
out
cmpsb
mov
pop
jb
cmp
and
scas
xchg
xchg
stos
and
pop
lahf
cmp
xchg
lods
mov
sub
push
in
xlat
ret
xchg
aad
inc
cld
rcrl
xchg
dec
push
xchg
in
pop
push
push
lds
iret
xchg
leave
mov
aas
icebp
xchg
or
sub
or
aad
popa
cmp
ds
pop
pop
movb
push
xor
bound
fldl
jge
sub
mov
adc
leave
stos
cmp
pop
data16
push
lods
and
cmpsb
adc
sbb
mov
mov
or
addr16
inc
faddl
dec
mov
add
subb
imul
test
sub
jbe
cmpsb
adc
enter
inc
sbb
xchg
xor
pop
imul
scas
xchg
xchg
nop
scas
dec
aad
lahf
popa
mov
sub
push
adc
jle
sarb
pop
cmpsl
pop
imul
stos
cwtl
stos
lret
movsl
ret
icebp
jae
mov
data16
cli
adcb
cmp
test
js
mov
std
mov
arpl
iret
lock
outsl
lret
je
hlt
orb
test
int
nop
dec
pusha
loop
int3
into
and
movsl
jbe
jp
inc
hlt
das
push
xchg
push
fildl
adc
push
inc
sub
mov
pop
int3
xor
add
add
xor
int
xor
test
mov
leave
mov
gs
and
mov
dec
mov
jo
sub
lret
flds
rorb
dec
lods
adc
out
sahf
dec
xor
subl
xor
mov
push
inc
stc
fs
lahf
mov
insb
test
sbb
js
std
data16
adcl
jo
jnp
dec
leave
lret
subb
mov
adc
cmp
hlt
cmpsl
pop
sbb
cmp
push
mov
pop
cmpsl
xor
inc
xchg
pop
mov
addl
into
jg
hlt
jae
and
icebp
inc
dec
push
adc
add
lret
and
xchg
int3
addb
xor
mov
ds
pop
sub
adc
aas
mov
andb
mov
inc
xor
popf
iret
orl
out
mov
shll
lahf
inc
cmp
fwait
push
mov
adc
cmpsl
repnz
add
cli
xor
imul
jo
popa
sub
lods
sbb
lods
mov
mov
add
cmp
mov
sbb
inc
jns
mov
jp
inc
or
inc
mov
add
sub
push
les
pusha
xchg
imul
aas
insb
lret
pop
stos
add
sbb
push
jb
mov
mov
cmp
cli
dec
xor
pop
sub
in
cmp
fistpl
adc
mov
lret
mov
pop
mov
vcmpnltsd
fsts
movsb
imul
fwait
xor
imul
mov
imul
imul
mulb
into
add
insb
shrl
or
push
cli
xchg
aas
aad
arpl
aaa
mov
inc
push
pop
in
adc
cmp
das
add
int
rcr
inc
sub
mov
inc
mov
pop
mov
lods
xchg
repnz
dec
inc
in
push
add
js
hlt
xchg
mov
mov
imul
cmp
in
dec
adc
les
dec
rorb
xchg
cwtl
inc
dec
xor
add
into
xchg
pushf
mov
push
mov
lret
pop
aas
jmp
fwait
outsb
xchg
jbe
mov
or
xchg
adc
stos
les
ja
in
rorb
out
les
inc
pop
pop
aad
popa
mov
mov
dec
mov
cld
xor
inc
les
in
jno
filds
sti
pushf
mov
gs
data16
jl
jns
xchg
inc
imul
lods
xchg
xor
jg
dec
sti
ss
jo
mov
xor
imul
les
mov
jns
scas
clc
xchg
outsl
and
in
sub
ja
sbbl
push
xorl
xlat
ss
pop
cmp
decb
shr
mov
mov
iret
call
push
scas
push
fimull
lds
sbbl
insb
aaa
hlt
push
sahf
repz
pop
or
repnz
arpl
adcb
jno
and
cmp
cmp
out
xlat
pop
cmp
lret
lret
cmp
push
xor
push
xchg
xlat
and
xor
in
or
pushl
cmp
xchg
add
imul
lods
pop
xor
icebp
les
ss
roll
push
fldenv
pop
gs
lock
das
lds
mov
repnz
xchg
popa
mov
les
sub
je
cvttps2pi
mov
or
cmp
mov
or
mov
sub
xchg
mov
fs
mov
jnp
mov
jo
cltd
push
movsl
test
fdivs
xchg
inc
pop
mov
cmp
stc
pop
bound
xor
shrb
sub
ss
test
xchg
and
and
std
gs
xchg
idivb
push
leave
lret
xchg
test
outsb
add
cs
fbstp
sbbl
out
in
cltd
cmp
sbb
pop
ret
subl
lahf
cmp
mov
loope
dec
push
test
movsb
shl
imul
xchg
adc
or
xor
pushf
sbb
jns
or
jle
dec
nop
mov
and
pop
rcll
xchg
shl
adc
xorl
rorl
aaa
inc
add
add
cmp
jne
notl
mov
mov
xor
cmpl
mov
movl
mov
jmp
mov
movl
jl
push
call
xor
or
movl
movzbl
xor
and
mov
xor
mov
xorl
mov
jmp
daa
mov
or
push
mov
ja
mov
add
enter
mov
and
cmp
mov
dec
jmp
das
addr16
fdivrl
mov
in
xchg
fimuls
jo
push
cmpsl
lret
push
mov
pop
ret
aas
fsubrs
sbb
aam
cmc
and
jne
les
stos
insb
fistl
ret
stos
xchg
and
sti
insb
mov
enter
aaa
mov
adc
sub
mov
loope
mov
and
inc
scas
repz
dec
push
pop
push
test
imul
mov
sarl
popa
rclb
loop
dec
out
sbb
push
and
pop
mov
enter
mov
jecxz
sbb
push
loopne
sbb
jp
cld
dec
jb
cmp
les
xchg
lret
cmp
inc
jbe
push
ljmp
subl
jmp
leave
xlat
push
popf
lret
sar
or
sahf
add
std
mov
jbe
notb
dec
insb
ljmp
cmp
test
mov
in
jae
test
add
les
lahf
into
aas
inc
add
fisubs
ss
std
imul
mov
mov
cmp
loop
daa
imul
subl
aas
push
mov
adc
cmp
cli
mov
push
add
nop
clc
into
add
push
push
xchg
mov
int
cmp
bnd
pop
adc
mov
and
mov
stos
sub
or
insl
imul
sub
cmpsl
nop
xor
mov
mov
push
cs
fdivrl
int
arpl
shll
jb
enter
mov
testl
adc
scas
daa
ss
jno
icebp
xor
pop
enter
imul
jae
syscall
lock
repnz
clc
jb
cmp
int3
int3
aam
outsb
mov
mov
lods
movsb
mov
mov
iret
fwait
ss
pop
mov
stos
subb
fnstenv
jp
cmp
adc
xor
and
aam
mov
pusha
cli
gs
mov
movsb
lret
pushf
imul
cmp
mov
or
xor
xchg
dec
roll
pop
dec
out
pop
xor
cmpsl
std
mov
or
mov
repnz
mov
xchg
cmp
stos
clc
repnz
mov
jg
iret
aad
mov
sub
rorl
roll
or
jmp
pop
xor
cmp
add
arpl
mov
mov
in
enter
mov
pop
sbb
xchg
lods
in
nop
out
fbstp
mov
cmp
lods
add
ljmp
or
jnp
xchg
shrb
cwtl
icebp
and
ljmp
pop
das
xor
stc
insb
in
out
mov
iret
je
popf
pushf
out
and
xchg
jmp
das
hlt
aam
and
inc
mov
test
loop
les
xchg
pusha
cmp
enter
orl
icebp
inc
movsb
rclb
loopne
es
enter
cmp
popf
das
push
sarb
push
mov
scas
loope
pop
aaa
mov
jge
push
add
mov
iret
mov
inc
cmpsb
sbb
adc
bound
es
hlt
in
jae
push
jae
divl
xchg
cli
mov
rcrl
mov
std
mov
inc
out
shl
mov
movsl
stos
adc
insl
dec
dec
push
pop
jmp
adc
les
cwtl
adc
push
and
imul
mov
scas
sub
shrb
popa
cmc
loope
and
xchg
push
push
popa
scas
mov
inc
adc
xchg
mov
call
bound
lds
mov
pop
xchg
jge
or
cld
or
or
mov
pop
pop
push
jb
fst
idivb
and
cmpsb
leave
pop
cmp
movsb
xchg
repnz
jne
sbbb
xchg
mov
jp
mov
imul
or
lods
mov
into
divl
mov
in
add
mov
mov
fdivp
lahf
out
dec
bound
inc
out
das
jp
fmull
inc
cmpsl
das
sbb
pop
sub
hlt
cmp
push
adc
mov
push
jecxz
fwait
inc
movsb
outsb
adc
push
mov
aaa
je
xchg
dec
mov
mov
mov
mov
int
sahf
or
and
inc
and
test
leave
jg
xor
inc
out
fisubs
xor
inc
imul
shll
jg
sub
push
out
xor
fiaddl
arpl
and
decl
xchg
jg
dec
xlat
dec
and
and
push
lcall
mov
fbstp
dec
push
test
cld
lods
mov
cmp
jae
mov
mov
fwait
movsl
sbb
or
xor
es
push
cli
mov
in
adc
mov
cmp
cmpsb
jp
fsubs
push
inc
rorl
sbb
inc
fisubrs
fildll
add
data16
jmp
xor
mov
pusha
mov
mov
imul
push
mov
cmp
pop
aam
mov
jnp
fwait
stos
sub
shlb
bound
stos
mov
adc
dec
mov
add
dec
sub
or
jle
out
int3
push
push
fwait
xor
clc
mov
inc
icebp
jns
add
int
xchg
xor
ficompl
pop
scas
add
xchg
das
inc
or
loop
aas
test
push
mov
cmp
pop
sbb
mov
decb
lret
out
inc
add
bound
adc
into
xor
enter
jne
add
pop
xor
std
rol
inc
dec
dec
or
sbb
shr
iret
addr16
addr16
cmc
movsl
lea
cmc
lret
sbb
jo
clc
ja
je
sub
out
fisubl
arpl
push
mov
pop
out
jp
je
xlat
mov
lds
insb
les
xor
add
sbb
jns
dec
jno,pn
cwtl
push
mov
adc
mov
mov
sbb
cmc
fists
cmc
cmp
in
pop
xor
push
inc
pop
xor
das
cld
sbb
xchg
flds
dec
idivb
push
inc
pop
mov
xor
sub
stos
outsb
push
push
and
dec
or
imul
stos
cmp
mov
outsb
or
inc
call
arpl
cld
jno
test
inc
or
test
mov
inc
cmp
add
sub
pop
xor
and
jo
subl
stos
test
aam
divb
insb
inc
hlt
enter
xchg
iret
jle
lret
rcll
sbb
js
push
mov
iret
mov
dec
imul
roll
andl
mov
cmpl
movl
mov
jmp
movl
movl
jne
push
push
push
push
push
pushl
push
push
call
orl
or
xor
xor
xor
add
adc
adc
sub
add
mov
xor
xorl
shr
xorl
mov
orl
xor
or
movl
shl
cmpl
movzwl
movl
jmp
movl
movl
jle
push
call
not
or
sub
sub
sbb
sub
mov
mov
sub
imul
mov
cmpl
not
movl
jmp
mov
jne
push
pushl
pushl
push
push
call
sbb
adc
neg
subl
adc
mov
mov
not
add
mov
mov
mov
shrd
shr
adcl
mov
mov
xor
add
shl
incl
xor
jmp
jle
jl
dec
mov
push
into
or
xchg
jp
ja
in
cmpsb
xchg
push
cwtl
gs
fpatan
pop
adc
jmp
or
test
mov
mov
mov
in
pop
rcrb
addl
lods
test
xor
std
jno
push
mov
dec
pop
adc
pop
mov
jl
add
cmpb
ss
inc
mov
cs
mov
jns
lods
inc
bnd
add
fldl
pop
fmull
lahf
mov
pop
fbstp
aad
fmulp
fucom
sub
xor
aam
jbe
movsl
fld
int3
mov
les
repz
or
mov
fdivrp
aas
in
lods
test
cmpsb
add
andl
jb
mov
insl
imull
jbe
dec
inc
pop
das
cmpl
mov
mov
pop
cmp
xlat
xlat
mov
fwait
sbb
push
outsl
out
aaa
stos
negb
inc
mov
jge
shl
sub
out
fldenv
add
and
mov
bound
ret
imul
mov
pop
mov
xchg
dec
mov
int
inc
xchg
pop
xor
jmp
xchg
cwtl
outsb
and
and
aaa
sub
gs
mov
mov
imul
imull
dec
or
inc
lret
inc
test
dec
dec
jbe
pop
lods
das
xor
jp
or
mov
fisubrl
xchg
and
xchg
call
and
mov
jne
inc
lret
pop
jmp
or
stos
idiv
dec
lcall
stc
or
dec
les
lods
daa
movsl
or
push
adc
push
popf
xor
js
and
xor
cmpsl
and
in
mov
lcall
js
lods
shrl
jmp
gs
mov
or
cmp
push
imul
add
ret
sbb
dec
std
mov
dec
lods
out
lcall
dec
inc
sbbb
enter
dec
add
call
xchg
or
inc
dec
and
in
dec
mov
andb
cwtl
mov
aam
mov
hlt
inc
shl
fbstp
iret
stc
mov
or
jp
fwait
insl
mov
out
mov
loop
fsubl
sbb
lock
mov
das
jbe
push
pop
sub
icebp
lret
sahf
icebp
push
scas
and
test
jbe
sub
sub
imul
iret
mov
scas
pop
scas
fcmovbe
adc
outsb
push
xchg
and
adc
mov
das
pop
and
pop
lret
mov
loope
mov
xor
hlt
loopne
mov
push
or
mov
sbb
cmp
imul
cmp
push
in
loop
push
ss
and
add
rclb
xchg
pop
lods
push
leave
mov
sub
or
int3
cld
int
push
jl
xor
jns
xchg
cmpb
test
sbb
jle
or
cmp
lret
dec
leave
sarb
push
jmp
test
outsb
mov
mov
lea
dec
stos
and
aas
jno
out
push
insl
out
in
cli
mov
and
test
ja
inc
mov
out
es
divb
cli
or
enter
lock
or
xor
mov
dec
and
cwtl
test
ret
pop
fisubs
adc
or
xor
sti
mov
sbb
in
scas
sub
fsubs
or
cmpsb
ficoml
xchg
loope
xor
push
hlt
inc
sbb
int3
xchg
in
dec
sub
cmc
outsl
and
ficoml
push
push
and
fdivl
fstpt
icebp
cld
push
xchg
jp
fldl
xchg
es
hlt
in
ss
dec
lods
sbb
out
das
repnz
mov
shlb
push
xor
or
xchg
jo
sahf
sub
fwait
pop
inc
pop
mov
jmp
int3
xchg
xchg
jae
testl
pop
stos
mov
jne
mov
pop
jge
les
jno
jbe
fbld
out
repnz
cs
dec
lock
inc
mov
mov
sub
insb
ret
and
sbb
mov
mov
iret
cmp
or
adc
lods
lods
dec
fs
sub
sbb
sbb
add
push
cmpsl
pop
fcompl
xchg
cmp
cltd
addr16
shl
aam
or
sub
out
push
ret
loopne
sub
add
cmp
dec
adc
enter
popf
inc
and
dec
xlat
daa
ja
dec
cld
sbb
push
in
mov
cmpsl
sub
mov
leave
adc
jge
ret
bound
xor
jmp
pop
pop
rol
adc
push
add
sub
add
lods
fs
cmpsb
leave
ljmp
mov
popa
bnd
cmp
pop
fsubrs
aad
fldlg2
loopne
daa
scas
mov
fwait
sub
xlat
ds
jl
adc
xor
scas
and
pop
jae
sbb
pushf
sub
std
jae
jae
imul
xchg
pop
loope
push
sub
or
push
addr16
mov
in
inc
sub
cmpsl
aaa
xchg
xchg
ja
inc
or
loop
xor
std
dec
inc
enter
push
cmp
mov
xchg
xchg
sub
popa
pop
std
pop
test
lds
inc
adc
dec
pop
test
int
mov
fldl2t
imul
loope
jno
inc
daa
insb
shlb
cmpsb
jnp
ret
in
pop
xchg
cmpsl
adc
out
mov
xchg
lret
inc
testb
mov
cs
jo
mov
and
mov
call
pusha
ljmp
inc
es
mov
mov
jg
popa
mov
jnp
push
cmpsl
rcrl
in
and
cmpsl
sbb
les
sbbl
cld
pushf
shll
xor
add
aam
adc
pop
fwait
pop
sbb
mov
xchg
push
ljmp
sub
or
ffree
ss
mov
lcall
dec
jb
subl
push
dec
cmp
lock
ja
ret
push
jbe
rcrl
dec
xor
stc
xor
mov
pop
and
fisubl
jne
sub
addr16
and
test
in
sbb
sbb
into
push
mov
insl
das
mov
push
addr16
xor
xchg
xchg
aaa
repz
xchg
out
mov
mov
sub
or
out
cltd
lahf
and
repz
sbb
aam
push
mov
jo
outsl
inc
aam
sbb
aaa
adc
mov
faddl
push
daa
ljmp
in
push
sti
js
pop
hlt
pop
stc
out
cmpsl
pop
clc
pop
cmp
into
sub
jecxz
jmp
mov
notb
pop
cmc
repnz
mov
ss
push
std
adc
or
sti
push
lcall
aaa
inc
push
in
aas
fldl2e
call
aam
add
cmp
add
mov
jmp
movl
movl
jae
pushl
push
push
call
xor
or
mov
sub
sub
mov
xor
or
sub
xor
and
xor
or
sbb
mov
mov
add
mov
mov
sbb
mov
mov
incl
shrd
subl
shr
adcl
mov
add
mov
cmpl
not
mov
jmp
not
jne
push
push
push
call
mov
sbb
and
andl
and
orl
sub
or
sbb
jmp
pop
and
push
adc
jne
push
mov
xchg
stos
mov
aaa
xor
cmp
xor
or
mov
mov
sub
ja
roll
in
xchg
xchg
sti
xorl
pop
dec
aam
enter
jmp
dec
imul
inc
ret
mov
add
pop
cwtl
lahf
mov
pop
repnz
xchg
pushf
pop
push
cmpsb
mov
pop
outsb
mov
movsb
cmpsb
pop
dec
fidivrl
push
cmp
fisubl
mov
jp
pop
xor
lret
daa
test
imul
adc
mov
fisttps
cmp
dec
sbb
test
scas
sub
add
cs
pop
mov
mov
jb
sarb
sbb
test
lods
jb
or
add
mov
mov
cli
jbe
push
icebp
arpl
push
lcall
xchg
or
mov
pop
repz
cmp
jle
jge
shlb
movsl
aas
shll
sbb
ljmp
repnz
push
sbb
hlt
pusha
mov
lret
cmp
pop
sahf
shlb
mov
push
dec
clc
pop
outsl
out
call
test
sub
push
push
xor
scas
mov
or
jns
jg
loopne
test
cmpsl
push
sub
aas
jns
mov
push
push
into
sbb
push
add
mov
ds
cmp
add
pop
cmp
or
xchg
adc
push
icebp
cmpsb
in
add
sbb
push
inc
flds
stos
arpl
fildll
aaa
andb
divb
push
sti
inc
pop
xor
mov
push
mov
and
popf
xchg
pop
stc
mov
bound
xor
fneni(8087
sar
inc
or
loop
in
jnp
push
ret
pop
shr
mov
jnp
fmull
sbb
jmp
jne
lods
sub
fwait
test
add
or
sahf
sub
das
es
cmp
stc
fisttpl
test
dec
push
dec
cmpb
sub
fnstenv
add
push
dec
push
inc
mov
lods
mov
loopne
or
fwait
loop
dec
push
mov
test
jle
adc
punpckhwd
ret
lahf
sub
or
mov
pop
sbb
pop
rcr
sbb
sbb
dec
enter
sarb
cmp
jne
lods
xor
lret
test
cmp
sub
dec
add
out
jge
cmp
cmp
roll
scas
jae
and
enter
xchg
xor
icebp
pop
shll
and
fcomps
cmp
push
xor
mov
add
mov
ja
stos
xor
stos
pop
cltd
mov
pop
adc
jo
sbb
fsubs
int
movsb
je
sahf
stos
lcall
shlb
into
sahf
xor
jp
loop
or
mov
pop
mov
fldcw
xchg
shl
xor
pop
cld
insl
pushf
insb
notl
movsl
dec
sbb
addb
in
scas
mov
sub
lods
adc
adc
in
pushf
inc
pop
orl
lret
jae
xchg
int3
sbb
enter
jecxz
cmp
pushf
mov
pop
gs
dec
repz
stos
orl
cwtl
xchg
fnstsw
or
jno
movsb
jp
mov
rcll
loopne
cli
mov
push
push
push
ljmp
movsb
addb
mov
xlat
cmpsb
push
xor
push
push
jg
dec
mov
jnp
pop
insb
mov
les
call
dec
fsubl
lds
in
fidivl
adcl
inc
pop
jmp
mov
stos
mulb
aam
fwait
push
or
pop
lcall
mov
adc
mov
mov
lcall
leave
imul
pop
sarb
push
mov
out
inc
sbbb
out
popa
xor
sub
add
push
ficompl
into
mov
cmp
jo
jns
jle
mov
ja
clc
outsb
cmp
mov
cmp
inc
mov
jbe
and
adc
and
dec
add
cmp
movsb
lock
dec
enter
and
shlb
dec
jnp
popa
test
jmp
lahf
repz
push
jmp
loop
out
call
addps
adc
xchg
jecxz
lret
jecxz
arpl
cmp
dec
popa
flds
call
inc
adc
sub
sti
loop
gs
sbb
or
pop
inc
fcomp
fwait
mov
out
push
mov
xor
aam
jp
cmp
cmp
hlt
test
cs
data16
or
popa
jae
xcrypt-ctr
cmpsl
sbb
imul
les
lret
lret
jle
push
or
imul
vpaddsb
pop
shrl
mov
pop
jno
je
push
adc
push
cs
inc
repnz
or
sbbb
roll
lds
pop
mov
push
lret
fistpl
sub
mov
dec
adc
js
inc
xchg
jl
pop
push
shrb
popf
xchg
lods
or
cmp
push
fstp
into
out
add
ret
imul
inc
jb
or
add
popf
xchg
das
sbbb
mov
in
in
dec
aam
lret
call
ja
mov
decl
sarl
inc
inc
test
ljmp
inc
std
fildl
pop
xor
and
aaa
sub
rcr
leave
add
dec
mov
mov
or
je
cmpsl
stc
adc
pop
cmp
adc
xchg
in
idivb
dec
or
xchg
out
xchg
cmpsb
cmp
ja
or
insb
push
dec
sub
fistps
ja
sti
add
in
jae
sub
clc
cmp
jecxz
xchg
out
jmp
cmpsb
stos
cmpsl
adc
cli
dec
aad
lahf
leave
mov
dec
mov
push
fcomps
data16
add
insb
insb
cmp
dec
fisttpl
sbb
shrb
cmp
ja
fwait
sbb
push
mov
fidivrs
mov
add
pop
sahf
nop
xlat
lret
mov
xchg
ljmp
pop
fsubp
xor
cmpsb
fs
dec
insb
lret
push
xor
adc
jae
fstp
mov
xlat
sub
iret
addl
std
test
les
inc
loope
addl
push
fldt
in
jmp
call
std
dec
bound
sub
add
fldl
or
dec
lock
into
clc
ds
mov
xor
push
inc
mov
ljmp
sbb
fwait
dec
stos
imul
daa
dec
out
push
pop
loope
cmp
or
movsl
cmp
sub
add
int
cltd
add
xor
inc
xchg
aad
mov
icebp
push
jle
call
xchg
movsl
lock
push
cli
add
push
dec
xchg
inc
cmpsl
fwait
push
push
sbb
aad
adc
xor
icebp
mov
xor
xor
subl
or
andl
shl
sbbl
lea
sub
mov
cmpl
mov
mov
mov
mov
jmp
movl
jg
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
pushl
push
call
xorl
movzbl
adc
movzbl
add
or
add
movzwl
sub
mov
shrd
shr
cmpl
mov
mov
mov
jmp
mov
jbe
push
call
andl
mov
adc
sbb
movl
mov
mov
or
not
mov
mov
sub
mov
add
jmp
rcrl
cmp
and
and
scas
dec
or
fcomps
ja
dec
fs
jnp
or
jmp
aaa
xor
addr16
frstor
repz
cld
lea
inc
sbb
mov
dec
add
mov
add
or
dec
scas
pop
test
movsl
cli
fsubl
inc
rorb
ljmp
and
sub
cmp
mov
adc
lds
pop
ret
xor
dec
add
push
sahf
iret
stos
bound
out
dec
dec
cmpsb
fs
aaa
mov
mov
mov
xchg
push
outsl
fcmovb
inc
repz
sbb
jg
adc
jb
mov
dec
dec
and
into
pop
movsl
bound
jbe
sbb
and
adc
dec
add
test
ret
sub
push
lcall
add
xchg
fstps
mov
sarl
rcrb
push
std
cmp
sbb
inc
loopne
mov
into
pop
mov
ds
enter
mov
sbb
out
mov
daa
mov
es
sub
push
mov
inc
lret
xchg
sub
out
andps
mov
add
mov
decb
mov
mov
jmp
in
in
push
mov
nop
push
inc
out
popf
inc
jmp
sub
aad
mov
mov
inc
jno
fidivrl
nop
sub
mov
sub
pop
call
cmc
in
in
cmpsb
mov
pop
or
sarl
push
ss
pop
ja
xchg
or
rsm
xlat
fdivl
cmp
dec
add
mov
dec
pop
jns
mov
fwait
jnp
mov
pop
lcall
adc
repz
adc
jbe
dec
mov
dec
out
sub
mov
jecxz
jne
ret
xor
push
mov
add
pushw
mov
cli
stos
cmp
inc
push
sub
rcr
push
repz
shrb
dec
sub
xor
lea
mov
test
sbb
ljmp
jae
hlt
mov
out
xchg
push
aas
stos
pop
scas
call
mov
xor
lahf
push
in
jmp
clc
in
sub
js
mov
dec
hlt
repz
inc
mov
mov
or
pop
sub
xchg
adc
sbb
cmc
inc
dec
mov
inc
in
jno
cmpl
in
xchg
push
stos
imul
mov
fdivrl
xor
idivl
orl
inc
rorb
and
and
xor
out
jmp
fs
mov
pop
shrb
fldl
jne
es
jnp
test
xchg
ret
jbe
in
sub
das
xor
cs
shlb
sub
pop
inc
or
sti
inc
mov
mov
or
je
fadd
push
fwait
mov
cltd
jnp
inc
mov
divb
rorb
pop
xchg
pop
std
xchg
mov
pusha
stos
adc
push
bound
push
mov
and
jmp
pop
lret
addr16
clc
sub
in
push
mov
and
lret
mov
cmpl
mov
sub
cmpb
inc
dec
xor
lret
xchg
stos
dec
cmpsl
cltd
fmul
pop
xor
and
cmpsb
dec
rcl
pop
xor
xorl
adc
fs
xchg
add
mov
incl
stc
loope
xchg
fdivp
pop
sbb
jno
fsubl
and
movsb
hlt
shrb
pop
aad
ljmp
push
rcll
call
xlat
bound
cld
push
shl
sbb
mov
adc
inc
xchg
pusha
and
es
gs
insl
jmp
push
inc
jge
xor
xchg
stos
cmpsb
mov
pop
cwtl
mov
xchg
into
xor
jge
xorb
sbb
addr16
test
loope
arpl
adc
sar
mov
aad
xchg
push
sbb
loop
lahf
xchg
pop
int
jb
add
cmp
fstl
push
mov
je
mov
pop
cmpsb
mov
add
jp
cmpsb
dec
push
sub
mov
sub
inc
sub
xchg
xchg
stos
aaa
nop
hlt
leave
xchg
popa
push
das
lea
dec
sbb
inc
lds
repz
pushl
sub
arpl
shlb
fwait
cmp
mov
and
leave
outsb
test
out
scas
or
rcrb
outsl
ja
clc
dec
ret
mov
and
xor
xorb
or
loop
into
mov
ja
xchg
jo
push
fmull
and
data16
cmp
in
mov
rcrb
push
int
test
iret
dec
pop
repnz
pop
jae
roll
out
out
jnp
cld
push
insl
mov
lret
fsubrp
mov
pop
fwait
add
ret
shlb
gs
add
insl
nopl
loopne
ljmp
faddl
out
and
mov
ret
xor
pop
sbb
fwait
cli
jge
mov
popa
pop
jbe
sbb
or
adc
std
daa
lcall
cmp
push
mov
insl
dec
popf
mov
pop
je
jecxz
sub
pop
cmp
bound
jg
sbb
inc
test
fwait
mov
or
xor
movsl
mov
push
or
push
rol
stos
mov
and
and
dec
ret
and
or
add
push
push
loope
test
add
mov
icebp
fdiv
cmp
mov
ret
movsl
mov
xor
imul
idivl
xorb
std
shr
movsl
aas
cli
and
and
lock
out
scas
mov
pop
jae
jle
out
popf
lcall
cli
out
jg
pop
mov
call
mov
cli
in
std
incb
jecxz
scas
jne
sti
test
scas
mov
popa
push
push
fisubrl
jo
gs
gs
ret
pop
je
imul
xchg
xchg
add
pop
jl
inc
xor
sbb
dec
mov
jns
cmc
movsl
mov
ds
out
lret
inc
arpl
test
mov
in
and
in
push
jge
sub
sub
lea
and
pop
add
pushf
and
gs
mov
jle
frstor
jmp
fsubs
dec
mov
xlat
iret
add
lock
add
or
push
lock
xor
stos
push
movsl
push
clc
icebp
ss
in
negb
cld
mov
leave
mov
mov
mov
adc
popa
jo
xchg
inc
pop
cmp
sahf
mov
lea
inc
pop
outsb
push
inc
das
sbb
mov
mov
sbb
ret
imul
pop
xchg
sbb
push
sub
mov
xlat
div
aam
jecxz
cli
loopne
pop
push
dec
scas
jae
iret
dec
and
sbb
mov
test
shll
mov
push
shlb
in
shlb
rolb
icebp
pop
add
or
shl
movzbl
or
imul
mov
mov
xorl
shrd
xorl
mov
mov
xor
shr
mov
and
mov
sbbl
xor
orl
or
sbbl
shl
adcl
sub
mov
mov
cmp
mov
mov
jg
xor
add
mov
sub
and
mov
cmpl
movl
movl
jmp
mov
mov
jb
push
push
call
xor
mov
sub
sbb
movzbl
and
mov
jmp
les
cmp
push
mov
mov
movsb
js
int3
jbe
outsl
dec
ja
fisubrl
scas
and
add
jecxz
xor
lods
stos
sub
mov
push
inc
push
imul
push
jb
fs
rcl
movsl
stos
or
pop
add
pusha
cmp
iret
and
loop
push
sbb
orl
fistpll
out
and
aaa
inc
leave
pmulhuw
cs
add
pop
arpl
xchg
mov
sbb
neg
aam
cld
std
jecxz
sbb
and
sti
outsl
push
mov
and
pusha
outsb
pop
mov
idiv
imul
cmc
xor
xchg
or
mov
fistpl
rcr
mov
xor
sub
icebp
stos
jle
fidivs
sub
mov
out
enter
loope
insb
gs
ljmp
shrl
sbb
push
mov
inc
add
call
add
xchg
lcall
jb
push
cmp
stc
and
les
mov
leave
aas
mov
hlt
add
fbld
dec
sbb
and
pop
shll
push
or
fbstp
dec
lock
pop
and
rolb
jg
sbb
push
stos
xchg
jge
jle
pop
add
sahf
or
call
cmp
push
jle
mov
test
dec
fisttpl
jge,pn
jns
adc
inc
jae
repnz
imul
jg
adc
adc
push
lock
rorb
rcr
jns
jae
pop
imul
push
mov
pop
xchg
repnz
fisttpll
shlb
cmpb
mov
jmp
xor
insb
fucom
mov
xchg
mov
xor
inc
sbb
arpl
cmpl
sbb
inc
inc
mov
add
jle
dec
das
mov
or
jge
or
pushl
lock
addr16
daa
sub
xlat
sbb
fimuls
orb
pop
repnz
repnz
mov
daa
adc
andb
movsl
mov
test
mov
adc
cmp
lcall
jmp
mov
cmp
mov
cmp
push
mov
test
cmp
movsl
rorb
stc
inc
xor
pop
idivb
shl
adc
jne
or
xor
or
or
insl
xchg
push
push
fildl
xlat
insb
dec
and
hlt
cltd
iret
mov
jmp
pop
mov
dec
or
jl
sbb
test
jmp
push
ds
sbb
mov
ficomps
cmp
pop
push
outsb
cli
xor
sbb
std
das
mov
xor
add
call
mov
push
idiv
cmp
nop
pop
xchg
ja
imul
aaa
mov
rclb
dec
sub
inc
ret
adc
and
insl
add
das
repz
mov
add
inc
xlat
scas
shl
jge
jb
pusha
fcomps
aas
js
call
xchg
aam
mov
jmp
in
pop
inc
clc
in
repz
sub
pop
sti
dec
fcompl
test
stos
stc
dec
or
jb
mov
pop
xchg
lcall
push
jecxz
mov
cmp
aaa
mov
dec
mov
gs
dec
cmp
filds
lahf
sbb
and
xchg
mov
stc
mov
jecxz
dec
repz
es
xor
cmp
loop
test
aas
jnp
mov
fcmovnb
jecxz
cmp
cmp
cs
push
jecxz
daa
cli
jge
or
int
push
jl
lcall
call
cmpl
sbb
insb
das
mov
js,pn
mov
jo
out
int3
jb
cmc
loope
mov
xor
push
and
out
push
ret
adc
sahf
pop
mov
mov
arpl
sub
dec
jl
not
xor
jns
out
ficomps
jmp
gs
subl
mov
cmp
jge
mov
push
pop
dec
or
push
or
cmp
sti
or
clc
mov
jb
lods
in
adc
push
rcr
add
jno
cmp
sub
icebp
sub
int
add
es
clc
rorl
sbbb
xchg
xchg
into
jno
mov
call
sahf
mov
mov
mov
inc
dec
hlt
js
dec
push
pop
fdivrl
mov
in
sbb
shlb
movsb
loopne
out
inc
mov
dec
inc
pop
inc
mov
mov
rorb
mov
cmc
xlat
or
pop
mov
mov
pusha
test
push
mov
sub
sub
mov
jge
push
mull
jp
scas
cmpsb
lea
ret
dec
xor
dec
mov
dec
add
test
push
out
cs
inc
mov
jns
insl
mov
in
sub
inc
push
or
pop
or
lahf
sbb
in
std
and
mov
inc
frstor
ja
mov
aad
jo
dec
cli
scas
xchg
bound
mov
jg
jno
popa
arpl
out
ss
xchg
push
inc
jecxz
decb
cmp
jge
sbb
mov
mov
xor
mov
and
cmp
xchg
push
mov
mov
es
movsl
cmpsl
dec
mov
and
fdivp
ret
std
fildl
mov
dec
out
pop
mov
xlat
mov
jg
inc
pop
xor
add
mov
leave
sub
insl
aaa
sub
test
mov
inc
xchg
mov
push
jl
jge
or
mov
arpl
dec
repz
jmp
cwtl
cwtl
cmp
push
mov
fucomp
aaa
aam
cltd
mov
push
vaddpd
ljmp
or
inc
pop
shrb
cmp
mov
pop
add
call
inc
movsl
push
push
pop
xchg
arpl
into
out
das
or
xchg
lcall
jmp
cmp
push
aad
push
add
or
jo
jne
pop
loope
mov
cmp
xchg
fidivrs
mov
xor
addr16
jnp
jbe
mov
pop
adc
xor
push
ret
xor
outsb
std
lcall
in
dec
clc
mov
jle
pop
pop
pop
stos
xchg
mov
push
push
mov
xor
push
xchg
das
mov
pushf
faddp
ljmp
dec
dec
mov
and
dec
and
sub
fldenv
inc
scas
in
outsl
fdivrp
shlb
je
push
xchg
mov
mov
ljmp
ds
rcll
xorl
enter
divb
stos
loop
pop
pop
mov
lods
out
xchg
cmpsb
les
cmp
jbe
sbb
in
mov
arpl
mov
or
js
mov
and
iret
mov
jae
mull
cmp
clc
leave
cmp
push
pop
push
sbb
movsl
lds
loop
lock
mov
andl
shrd
mov
movzwl
or
mov
adcl
xor
andl
shl
orl
xor
adcl
or
sbbl
shr
and
mov
jmp
mov
mov
cmpsl
icebp
sahf
xchg
call
add
int3
enter
push
or
inc
xchg
ss
or
cmpsl
rcll
push
ret
dec
pop
repz
inc
adc
cmpsb
ret
ret
jne
cwtl
sub
lods
loop
push
dec
jle
sub
push
hlt
pop
or
imul
push
push
cmp
mov
les
idivb
pop
push
cwtl
dec
mov
insl
xchg
daa
mov
js
dec
roll
adc
andb
decl
mov
push
xchg
mov
cld
xchg
and
ret
inc
or
cmp
dec
jecxz
ss
or
push
mov
xchg
les
cmp
aam
sbb
dec
adc
dec
leave
push
aaa
stos
enter
sub
rorl
mov
sub
mov
xchg
imul
add
imul
cwtl
ret
ja
mov
sbb
jp
mov
imul
data16
cmpb
test
or
scas
lahf
mov
xchg
jne
je
je
repnz
outsl
fs
ja
or
jnp
inc
xchg
mov
fdivrl
mov
dec
scas
scas
or
dec
push
jmp
cmp
adc
pop
cmpsl
cmc
or
addb
test
mov
scas
sub
lahf
fstl
inc
adcb
or
mov
or
aas
or
pusha
mov
cmc
jl
adc
jmp
xor
ljmp
sti
test
movsl
or
shrl
mov
dec
adc
dec
adc
push
repz
in
cmc
lds
fdivl
mov
add
jae
push
push
adc
stos
mov
notl
xchg
dec
adc
fists
push
dec
cmpsl
js
inc
outsb
cmp
sub
movsb
fucom
leave
push
insl
nop
pop
jbe
cltd
fdivs
cld
dec
cltd
mov
pop
movsl
dec
aam
rcrl
mov
pusha
jbe
mov
outsb
clc
addb
int
xor
push
cld
inc
push
and
ja
and
cmp
lret
inc
mov
dec
mov
adc
pop
inc
pop
jns
jae
nop
fdivp
sti
aam
sub
fldcw
add
pushf
push
out
lods
mov
test
daa
stc
lret
test
mov
dec
and
add
mov
cmpsl
cs
or
nop
imul
mov
fwait
cmpsb
std
in
push
pushf
mov
ret
mov
jmp
test
out
repnz
pop
mov
out
push
cmp
ljmp
stc
xchg
adc
popf
mov
and
fcoms
aam
fwait
lods
test
sarl
shr
mov
test
pushf
add
dec
sub
pushf
xchg
cmp
xchg
sub
jle
xchg
jge
inc
xlat
pop
xlat
pop
orl
int
add
rcr
cmpsb
cs
imul
add
sbb
cs
out
cmc
mov
adc
inc
in
hlt
rorb
fcoms
stos
inc
dec
xlat
in
xchg
pop
add
fcmovb
cs
push
test
pop
in
add
pop
gs
cli
gs
shrb
and
sti
sti
fsts
js
int3
add
daa
out
pop
mov
lock
mov
cmp
comiss
and
push
adc
mov
add
mov
addr16
out
dec
out
cmc
test
imul
pop
movsb
aaa
mov
in
xchg
lahf
lods
mov
sbb
movsb
loop
mov
mov
push
ret
or
out
jo
int3
cmc
push
fimuls
aad
xchg
xor
fbstp
xlat
test
test
dec
mov
adc
xor
mov
maskmovq
testl
out
in
pusha
dec
insb
cld
rorb
pop
mov
cmp
icebp
xor
xor
in
push
xlat
sbb
insb
push
or
lods
inc
push
rclb
aaa
lods
jmp
mov
mov
mov
pop
mov
mov
mov
pushf
push
mov
push
in
arpl
pslld
out
add
js
mov
adc
add
sbb
es
push
add
sbb
lret
in
inc
pop
cmpsl
xor
and
jl
jmp
fidivl
cmp
push
es
cmp
inc
sub
es
sub
dec
xchg
sbb
inc
aaa
ss
arpl
jne
je
addr16
jnp
fsubl
xor
jae
push
or
hlt
adc
lret
lea
das
jge
mov
sbb
pop
lahf
mov
adc
cli
dec
inc
mov
sahf
cld
repz
out
xor
xchg
or
pop
fisubs
pusha
lds
lds
dec
movsb
jns
popl
mov
in
outsl
ljmp
adc
dec
out
push
imul
pop
sbb
or
rolb
mov
or
popl
dec
push
cmc
stos
push
mov
in
in
mov
pop
dec
push
dec
rcrb
jp
ret
dec
clc
sbb
dec
popw
divb
lea
mov
les
cld
mov
sbb
pop
lds
es
cmp
cmp
ret
shrl
movsb
cmpsb
adc
jp
aam
xchg
daa
fsubl
cmp
outsl
sbb
add
out
jnp
repz
ja
pop
enter
js
mov
cmp
push
pop
jp
xchg
mov
xlat
or
pop
mov
mov
push
movsl
cmp
mov
mov
mov
pop
mov
push
fs
test
mov
pop
cmp
test
test
xchg
jge
sti
jne
xchg
nop
pop
add
je
insl
mov
cmp
out
cmp
mov
xlat
ss
insb
fwait
cmp
mov
hlt
add
out
fnstenv
fisubl
fwait
cmpb
or
icebp
cmp
xchg
mov
mov
inc
add
push
stos
cmp
jno
jb
or
push
mov
imul
cmp
sub
push
outsb
jmp
mov
not
adc
mov
lods
pop
push
out
int3
push
sbb
sbb
xchg
lret
cli
in
cli
loope
adc
negl
cmp
out
pop
scas
mov
lds
ret
mov
xchg
fnsave
int
imul
xor
stos
and
mov
mov
daa
rcll
cmp
xlat
xchg
mov
int
add
in
pop
mov
sarl
and
mov
and
mov
sbb
jo
jmp
out
dec
pusha
ficomps
sbb
or
lods
xchg
cmp
pop
ret
outsl
scas
jle
cmp
rcrb
movsb
scas
mov
into
mov
aad
pop
loop
mov
adc
test
imul
jno
decl
jg
jp
inc
dec
scas
push
cmpb
and
mov
test
orb
jne
hlt
out
cwtl
in
mov
pop
mov
mov
or
mov
mov
mov
add
mov
andl
shrd
sbbl
shr
mov
mov
inc
jmp
shll
adc
push
scas
xchg
xlat
mov
ja
das
jmp
das
rcrb
lods
dec
inc
mov
enter
mov
jecxz
dec
and
jbe
add
jle
ss
outsb
or
add
pop
xlat
adc
push
faddp
cvtpi2ps
daa
loop
or
mov
dec
adc
push
mov
jge
dec
gs
fldenv
enter
dec
lret
inc
hlt
mov
jae
xlat
xor
test
pushf
fistpl
mov
cli
push
xchg
mov
arpl
or
cmpsb
popf
in
data16
pushf
movlps
fnstcw
jge
out
xor
xor
mov
mov
pusha
mov
sti
inc
fisubl
data16
or
js
dec
lds
std
xor
adc
into
or
jae
or
xchg
pusha
adc
test
jmp
repnz
or
movsl
bound
aam
sub
out
sub
movsb
cwtl
jb
repz
adc
pop
jmp
add
cli
std
mov
in
cwtl
fiadds
add
xlat
idivb
movb
daa
aas
pop
xor
xor
cwtl
xchg
ds
or
jmp
jns
and
add
jp
sbb
lcall
dec
dec
cmp
dec
repz
add
nop
mov
and
ret
ja
cs
jb
cmp
out
aas
jnp
std
mov
and
mov
xor
imul
xchg
jl
js
mov
das
mov
mov
and
or
fwait
push
dec
in
xchg
add
dec
leave
pop
mov
sahf
andb
ret
push
fmuls
xlat
mov
lock
fisttpl
pop
outsl
inc
inc
xor
rolb
push
mov
add
jo
sbb
push
xchg
fisubrs
pusha
mov
xchg
jb
fnstcw
lret
add
push
cmpsb
add
call
js
lahf
test
mov
iret
call
lret
jb
mov
or
jge
fcmovne
jnp
lods
divl
xchg
gs
lcall
outsb
fisttpll
mov
sub
xlat
mov
mov
push
or
mov
outsb
adc
xchg
mov
out
stos
inc
dec
mov
les
inc
pop
push
sti
std
dec
pop
add
mov
sbb
sbb
or
xchg
incb
sbb
out
insb
lock
jg
imulb
es
movsl
cmpsl
push
jnp
fsubs
jne
clc
mov
dec
in
jle
clc
and
aaa
enter
lret
push
test
call
bound
cli
pop
js
ss
mov
mov
adcb
push
cmp
pop
fcmovbe
xor
and
jo
popf
imul
xchg
and
push
std
outsb
sbb
xchg
in
pop
leave
mov
fwait
xchg
pop
and
jge
dec
sbb
das
movsb
xchg
dec
push
cmovae
ss
out
shr
cmpsl
sti
loopne
sbb
scas
xor
popf
cmp
inc
xor
pop
adc
incl
mov
jo
popl
xchg
hlt
mov
sub
in
out
fimull
sbb
div
cmc
mov
xchg
mov
inc
dec
push
sbb
dec
cwtl
jecxz
cmp
lock
orl
xor
push
not
push
jge
jns
and
inc
inc
jne
add
or
pop
cmp
fwait
enter
xchg
push
daa
pusha
sub
push
and
adc
and
lock
mov
pushf
in
call
fiadds
xchg
test
lea
xor
push
daa
xchg
fstps
aaa
push
pop
jl
sbb
cmp
jle
or
adcb
cltd
ja
sbb
mov
inc
aad
sbb
enter
loop
cld
jecxz
into
jge
mov
mov
pop
pop
dec
out
jb
lcallw
pop
add
lds
arpl
push
and
add
jle
and
lods
jge
mov
and
pop
movsb
xor
in
aas
push
xchg
sub
mov
std
xchg
jl
aas
xorb
jge
out
fiaddl
xor
pop
test
mov
lods
sub
inc
pop
push
mov
pop
insl
inc
dec
jecxz
scas
pmaddwd
adc
xor
leave
in
arpl
or
xor
xlat
lods
mov
adc
mov
je
pop
dec
mov
lret
setb
cmc
repz
bnd
ljmp
jno
jl
and
push
std
sarb
cmp
xor
sub
bnd
jbe
imulb
in
fisubrs
repz
add
nopl
sarl
cmp
jbe
cmc
inc
mov
dec
mov
sub
ds
cld
mov
add
in
in
loop
les
jbe
gs
divb
inc
lods
loop
lcall
push
push
popa
aad
rcr
adc
insl
mov
aas
sbb
sti
jle
xchg
inc
adc
sub
xchg
rol
add
int
nop
jg
push
in
lret
xchg
cmp
cli
push
int3
jp
mov
mov
jno
loopne
outsl
adc
lea
xor
lret
out
stos
pop
lahf
dec
cmp
cmp
fisttpl
or
pop
dec
inc
sarb
rolb
jmp
xlat
arpl
cld
test
out
push
psllq
fiadds
add
sbb
or
insl
ret
xchg
jo
test
testb
test
cmp
cli
fistps
inc
dec
shlb
mov
clc
std
push
cmpsb
sar
xor
push
outsb
test
push
push
sbb
ret
cs
mov
enter
outsb
push
push
mov
lods
je
dec
testl
xchg
gs
xchg
sahf
push
cmp
mov
call
dec
pop
jl
jns
add
imul
icebp
aad
dec
bound
dec
addr16
pop
or
ret
pop
mov
insl
jp
xchg
push
imul
jb
sub
pop
loopne
mov
int
pop
jmp
jl
add
dec
in
xchg
sub
cmp
dec
dec
leave
loope
cltd
fldt
ficomps
mov
lret
lahf
or
pushf
out
mov
push
fistpl
dec
lods
shrb
lock
scas
lods
icebp
mov
xchg
outsb
or
fcoml
ss
sbb
mov
outsb
inc
cmp
cmp
pop
xor
cs
test
xor
lea
cmp
lods
fstpt
xchg
inc
mov
xor
rcll
push
enter
loopne
jl
jae
or
add
loopne
cmpsb
imulb
lds
push
sub
cltd
lret
sarb
xchg
sbb
pop
jmp
enter
in
mov
xchg
and
sbb
sbb
sub
jnp
jg
fcomps
inc
repz
push
loop
mov
sbb
xor
cmp
add
jge
subl
jmp
scas
popa
inc
jge
sbb
cs
xor
ja
loop,pt
xchg
in
cwtl
or
cmp
ret
jo
add
mov
loope
and
inc
sub
or
sbb
scas
sub
mov
mov
dec
lds
mov
xchg
xchg
jmp
mov
xor
push
or
xor
or
cmpsl
fstpl
cld
add
icebp
mov
adc
jp
fcompl
lret
daa
movsb
aas
jno
mov
mov
sbb
int3
jg
xchg
sbb
jne
test
std
jge
dec
add
mov
cmpsl
xchg
jne
subl
cmpsb
orb
movsb
cmpsl
outsl
out
ror
inc
outsb
pop
push
mov
lret
pop
or
ret
je
addl
inc
dec
xor
fwait
iret
in
push
pop
mov
inc
test
and
je
imul
push
das
rorl
pop
loopne
int3
mov
mov
mov
sbb
mov
xorb
xchg
loope
xor
rorb
sbb
popa
add
jnp
sbb
in
xchg
icebp
dec
cmc
sarl
ljmp
push
mov
into
fs
adc
lock
adc
or
shl
pushf
xor
std
pop
cmp
push
lret
js
jecxz
xor
bound
daa
clc
insl
adc
mov
sub
out
rcrb
mov
adc
in
mov
inc
dec
mov
inc
pop
pop
mov
jg
mov
mov
pop
ror
jb
inc
outsl
sub
jbe
mov
jnp
inc
xchg
outsb
cmovno
and
cmc
lahf
jl
ja
cmp
repz
sub
cmp
xchg
roll
adc
clc
pop
sti
pop
in
xor
or
lock
je
ljmp
push
ja
jmp
mov
gs
mov
stc
add
add
xchg
sub
movb
arpl
clc
inc
pushf
xchg
nop
outsb
sub
pop
add
add
mov
dec
push
push
lahf
and
mov
imul
inc
aam
test
popa
roll
xor
mov
pusha
clc
fs
out
insb
test
or
out
xchg
out
aam
shlb
sbb
mov
dec
xorb
push
pusha
insb
pop
leave
sar
xor
push
repnz
or
xchg
push
jl
push
adc
pop
inc
sub
andl
push
call
adc
cmc
cmc
in
leave
and
jecxz
ret
stos
mov
pop
dec
sbbl
imull
cmp
cmc
add
fwait
adc
inc
add
and
cli
pop
sub
push
stos
lods
sub
pop
scas
mov
lds
lret
sub
dec
mov
cld
dec
jno
xlat
jmp
leave
pop
mov
add
lods
rcl
mov
jg
xchg
cld
mov
jmp
lret
xchg
inc
in
test
bound
mov
lret
sbb
and
cmp
lret
outsb
outsl
pop
shrl
adc
pop
dec
xchg
inc
push
sub
outsl
jnp
dec
scas
jle
ljmp
and
xor
lea
mov
and
jbe
jg
dec
test
ljmp
xor
ljmp
xchg
aad
ret
into
cmpb
stos
aam
ficoml
insb
xor
out
pushf
push
outsl
rcrb
sbb
sbb
adc
aas
mov
cmpsl
rcll
lret
push
jge
push
sti
loope
sbb
pop
lds
xlat
and
into
testl
push
push
popf
pop
sub
dec
lods
push
lahf
aaa
mov
adc
and
test
and
push
push
jge
loopne
inc
stos
mov
inc
rolb
insb
and
rorb
pop
mov
ret
pushf
mov
jo
xchg
mov
movsl
pop
sbb
call
dec
fists
jbe
push
mov
insl
popa
stos
les
mov
and
xchg
jl
insl
inc
lods
fisttps
dec
js
push
xor
ss
pop
int
mov
add
mov
cmovno
adc
cmpsb
je
or
lds
jl
mov
lods
idiv
xchg
fnstenv
xchg
mov
mov
test
jp
outsb
inc
mov
rclb
mov
lock
xchg
ss
push
xor
fidivs
ja
mov
int
lret
mov
mov
cmp
cld
dec
pop
or
arpl
scas
popf
cmp
es
mov
xchg
adc
dec
sub
adc
cmp
inc
or
sbbb
dec
sub
pushf
insb
and
out
cli
push
xchg
loope
jmp
incb
nop
adc
ret
gs
test
or
add
jbe
loope
mov
sti
out
bound
ljmp
adc
cmp
daa
inc
mov
and
loop
jb
push
xor
int
jae
outsb
pop
dec
loopne
dec
jg
xor
xchg
or
mov
inc
or
mov
jecxz
jl
add
xor
mov
xchg
sub
insl
xchg
lods
cmp
sub
dec
jg
cmp
dec
ror
std
pusha
mov
mov
or
out
inc
stc
dec
cmp
fsubs
and
push
xchg
cwtl
push
jne
sbb
adc
jae
sub
push
sub
add
addr16
xchg
add
clc
test
xchg
shrb
sahf
xchg
add
add
xchg
stos
sbb
repz
out
clc
sub
add
rorb
pop
adc
imul
adc
fcmovu
jmp
stos
out
xchg
xchg
add
ffreep
cmc
pop
and
jns
push
xchg
pop
lds
cld
insl
in
pop
push
lahf
sub
and
xchg
arpl
ror
cmc
mov
push
int
add
xor
adcb
pop
push
stos
test
loopne
pop
xchg
pushf
add
mov
rorb
lahf
add
ret
loop
mov
je
gs
enter
lret
jecxz
xchg
mov
or
bound
and
sub
mov
push
bnd
das
cld
fs
lods
push
popa
adc
mov
repz
or
push
mov
and
call
neg
adc
rcrb
repz
jo
cld
and
divl
ret
lods
scas
cmp
inc
pop
or
dec
sahf
pop
popf
lock
ds
in
arpl
adc
dec
shll
mov
or
loop
sti
pop
add
pop
cmovns
xor
dec
push
mov
jmp
mov
sahf
pop
sbb
outsl
sub
xchg
lods
xchg
and
es
aam
cmc
das
lock
out
pusha
push
or
sbb
jb
insb
cmpsl
sub
push
cmpsb
lret
pop
mov
or
sbbl
cmpb
xor
movsl
imul
jo
mov
push
in
add
sub
inc
add
loope
imul
jmp
add
or
or
adc
xchg
push
ja
sbb
mov
ja
popa
jns
xchg
mov
popf
aaa
or
xor
cld
jmp
sbb
sbb
sub
jl
sbb
in
sub
sbb
shrb
jno
cmpb
rcll
dec
sbb
shl
and
lds
xchg
push
adc
test
or
pop
psubb
scas
stos
jo
int
cmc
sahf
in
jecxz
xor
dec
mov
and
dec
jecxz
fidivs
shrb
or
xor
and
stc
test
sbb
pusha
repz
lods
fnstsw
or
or
ror
rolb
fadd
andb
sub
pop
out
sub
jns
adc
addl
nop
pop
sahf
jne
leave
out
add
push
or
mov
rorl
cmpsl
cmc
jle
rorl
jmp
movsl
mov
or
stos
fdivr
pop
popa
add
or
imul
xchg
mov
stc
fnstenv
xor
outsb
jae
in
inc
js
mov
push
or
hlt
dec
imul
movsb
xchg
and
sbb
jae
pop
xchg
inc
lea
leave
dec
lock
add
sub
dec
inc
push
and
push
cld
fwait
jmp
mov
divb
subb
xchg
filds
pop
mov
dec
out
mov
icebp
pop
jl
push
mov
xorl
mov
in
pop
adc
cmp
xchg
sub
or
scas
stos
jg
mov
pop
cmp
std
mov
add
out
sbb
mov
movsb
adc
mov
adc
nop
adc
inc
lods
add
test
repnz
lods
mov
xor
push
cmp
or
lods
inc
jmp
push
imul
xchg
xchg
cmp
mov
imul
mov
inc
aaa
dec
dec
repz
sbbl
jne
fwait
adcl
mov
xchg
adc
out
dec
sbbl
dec
popa
mov
icebp
test
push
push
data16
sahf
lret
pop
cmpsb
js
xlat
aas
fcmove
test
cmp
sahf
and
jg
and
mov
add
jnp
daa
xchg
lea
add
dec
pop
mov
sub
mov
out
in
mov
adc
add
loope
lock
pop
pop
insl
mov
bound
adc
insl
rorb
call
xchg
fisttpl
jno
xor
lds
movsl
rolb
leave
stc
aas
sub
sbb
jno
repz
pusha
jmp
mov
push
test
add
push
cmp
xlat
aad
adc
xchg
mov
loopne
adcl
jl
cmp
test
inc
das
test
adc
mov
or
dec
test
call
mov
std
sbb
mov
hlt
jle
xchg
inc
pop
cmp
xchg
sahf
dec
imul
sub
outsl
leave
icebp
pop
pushl
inc
sub
mov
addr16
push
cmpsl
sbb
cmc
cmp
mov
add
inc
std
js
nop
aad
pop
stos
fbstp
sub
mov
inc
mov
cli
push
gs
mov
popf
cmpsb
mov
push
loop
pop
jo
shlb
cmp
mov
xor
addb
iret
aas
imulb
xor
enter
cs
mov
xchg
and
mov
and
pusha
shl
and
mov
jb
cltd
and
hlt
sub
int
push
jne
lods
or
push
jecxz
out
cmp
mov
cmp
jmp
xchg
lea
sub
and
add
jmp
pop
movsl
cs
aad
dec
gs
or
loop
xchg
jg
cmpsl
xchg
sbb
ljmp
das
and
shlb
push
sub
iret
and
pop
pop
sub
dec
dec
fnstcw
loope
sbbb
cmp
test
lock
fbstp
xchg
inc
add
fs
leave
jne
cmp
ja
adcb
aam
mov
repnz
add
add
je
outsl
inc
and
hlt
imul
nop
push
and
inc
xchg
sbb
or
popf
xchg
ss
mov
notl
das
loopne
scas
adc
gs
fsin
sbb
dec
xchg
and
jge
shll
mov
sbb
mov
sub
push
sub
jp
aad
jb
inc
xor
push
or
dec
sub
in
jecxz
and
push
and
jp
es
in
loopne
or
and
mov
pop
cld
stos
arpl
push
fst
lret
jne
jae
push
jecxz
divl
sbb
xlat
sti
insb
pop
test
popa
xchg
jecxz
mov
cmpsb
pop
or
rorl
sahf
test
fnstenv
jle
xchg
jecxz
mov
jnp
jl
cmpsb
xchg
ret
mov
and
xchg
mov
aaa
mov
cmp
sub
push
stos
dec
pop
cmp
cld
aad
and
das
pop
repz
jnp
daa
ret
mov
sbb
adc
outsl
enter
add
test
mov
loopne
jb
push
shrb
adc
xor
push
lds
mov
xlat
movsl
jl
or
mov
xchg
lea
mov
lahf
std
shl
pushw
fildl
push
or
ljmp
jno
adc
xor
push
fisubl
shrb
adc
mov
subl
insl
in
movsb
aas
or
icebp
and
inc
cmc
int3
iret
fnsave
pop
mov
aam
xchg
cld
pop
gs
dec
push
mov
insl
xchg
adc
pop
mov
adc
cli
mov
stc
xchg
cmpsl
mov
lret
xor
adc
mov
aas
fsts
lods
ja
jns
out
mov
inc
jl
in
add
lret
addl
mov
stos
shll
xchg
int3
add
push
cwtl
pop
xor
add
jl
jmp
ss
int
in
ret
sbb
and
pop
sbb
test
rclb
repz
repz
rclb
cmp
clc
mov
rorb
adc
cli
or
in
xor
jp
pop
vorps
xchg
inc
scas
mov
jl,pn
nop
fbstp
inc
hlt
test
mov
loope
ja
ret
loopne
stc
xor
cld
cmp
push
xor
mov
shl
push
neg
xor
mov
data16
out
cwtl
pop
cmp
and
fmul
scas
jo
mov
test
jp
test
sub
je
in
mov
jge
xchg
sbb
stos
outsb
adc
in
xchg
int
pop
sbb
sub
xor
outsb
cmc
sahf
jle
mov
xor
xchg
orb
cmp
mov
lcall
movl
jmp
cmpl
mov
movl
movl
mov
jmp
movl
jle
push
pushl
call
andl
adc
xor
xor
mov
sub
and
not
and
movzwl
adc
cmpl
mov
movl
movzbl
mov
jmp
movl
movl
jbe
push
push
push
pushl
call
add
sbb
sbb
xor
add
mov
mov
shrd
adcl
mov
or
mov
addl
jmp
inc
or
add
cltd
or
xor
ja
lods
xchg
xchg
adc
inc
xor
popf
xchg
out
div
pop
mov
pop
xor
sub
dec
jge
je
leave
mov
in
xchg
mov
aam
add
add
pop
jbe
mov
pop
addl
push
orb
ja
out
xrelease
scas
xchg
pop
roll
test
pop
xchg
mov
pop
clc
jbe
mov
rcl
repz
pop
sbb
int
push
jp
stos
pop
sbb
dec
mov
mov
pusha
adc
popa
jl
cs
jnp
lods
pushf
sub
insl
jns
mov
scas
push
and
jle
and
jmp
push
lcall
or
sbb
fistl
lret
mov
pop
imul
lret
add
sub
loopne
lods
sbb
inc
out
rcl
cltd
stos
cld
imul
or
lahf
sub
lods
fwait
sti
jb
push
mov
pop
adc
imul
dec
and
jmp
test
jb
jns
fdivp
into
sub
dec
inc
pop
scas
loope
mov
aaa
mov
cmp
or
out
repnz
add
mov
es
or
adc
adc
enter
push
rcr
mov
aaa
daa
pusha
cmp
clc
adc
je
jg
out
adc
sub
xchg
stc
pop
push
out
dec
fildll
pop
sbb
fwait
pop
test
idivl
mov
inc
pop
dec
sti
sarb
rcr
into
dec
popf
imul
fsubr
push
add
sub
inc
xorl
popa
xchg
cmp
cltd
adc
mov
leave
in
imul
push
pusha
mov
adc
stos
fwait
lret
loopne
adc
cltd
xchg
and
lds
push
fisubrl
gs
jge
ds
sub
sbb
insb
and
aaa
sub
mov
mov
sahf
jbe
into
mov
cmp
push
add
icebp
sar
in
dec
mov
in
xchg
jmp
mov
adc
xchg
lea
cmp
sub
adc
add
lcall
les
push
int3
fsubs
jb
inc
add
pusha
daa
das
lret
mov
aad
mov
dec
repnz
and
or
outsb
sub
jo
xchg
gs
xchg
into
in
xor
mov
test
lcall
dec
pop
test
sbb
inc
or
pop
outsl
inc
sub
aad
push
rcrb
mov
outsb
push
and
cltd
jnp
mov
out
fwait
cmp
add
xchg
sti
scas
leave
cwtl
or
nop
sbb
adc
fsubrp
push
test
ret
mov
push
cld
cld
push
scas
or
mov
icebp
aam
pop
inc
test
das
lret
ds
inc
mov
sub
mov
xlat
ficompl
mov
int
ret
data16
loope
subb
pop
and
mov
push
call
adc
stos
shlb
dec
xchg
lret
shll
sbb
sbb
clc
lods
movsb
lods
and
push
push
add
xor
push
rcrl
xchg
lahf
dec
shrl
pop
pop
xchg
xlat
mov
cmp
outsl
xor
xorl
mov
lods
pop
push
sub
mov
sbb
mov
shlb
push
lcall
xor
xchg
mov
ss
adc
add
cmp
lret
fiaddl
add
mov
outsb
and
loope
test
inc
sub
and
rorb
adc
in
pcmpgtb
in
mov
loopne
inc
stos
cmp
ss
lea
out
test
cmc
lret
jecxz
div
mov
cltd
pop
ja
stos
adc
xor
jl
mov
cmpsb
in
mov
xchg
mov
in
or
pushf
xor
enter
insb
pushf
out
cmp
mov
sub
ljmp
aaa
push
dec
adc
inc
inc
inc
xchg
adc
repnz
push
dec
and
ret
bound
je
mov
and
jnp
sbb
mov
lcall
sbb
scas
imul
sbb
cmp
and
jle
mov
sbb
aad
es
ljmp
lock
sbb
out
loop
paddw
test
xor
inc
in
xor
pop
push
dec
jae
mov
jg
sub
inc
mov
xchg
outsl
sbb
imul
ja
mov
mov
jne
mov
sub
cmp
ja
sbb
fistl
push
fstps
or
in
mov
add
mov
mov
pop
shl
lahf
rclb
pop
nop
mov
push
lcall
cmp
call
es
out
xor
ja
inc
pop
rcr
mov
pop
jmp
or
sub
and
hlt
pushl
push
lcall
popf
jmp
arpl
pop
cmpb
xor
fstpt
daa
cmp
mov
out
in
push
adc
push
inc
mov
jecxz
int
decl
mov
xor
mov
aaa
imul
push
inc
dec
cmpsb
je
cmpsb
mov
les
call
out
jmp
ret
adc
imull
push
sub
inc
loope
xor
sbb
mov
adc
pop
xor
jno
xor
mov
loop
dec
fs
add
jp
lods
sahf
dec
dec
mov
push
pop
aaa
sbb
xor
scas
add
mov
jl
xchg
aaa
inc
or
scas
rclb
mov
pop
not
jb
cmc
arpl
enter
lahf
adc
sub
add
mov
sub
sbb
stos
mov
aam
add
lcall
test
movsl
add
mov
dec
push
pop
adc
xchg
add
push
rclb
or
sbbl
pushf
insb
jg
cmp
imul
cmp
dec
imul
xor
cmc
adc
push
movl
jnp
in
loopne
or
sub
inc
sarl
pop
shr
aaa
sbb
ficompl
dec
aaa
pop
push
dec
sbb
jle
xor
dec
xor
adc
add
and
scas
mov
mov
and
loop
js
xor
sbb
and
mov
mov
add
push
mov
stc
xchg
sub
outsl
in
out
or
mov
ret
ficompl
test
jnp
fisubrl
fsubl
jnp
mov
shrl
mov
int
pop
and
mov
sbb
cmp
insb
mov
lret
and
jge
loop
int3
loop
icebp
jne
call
cmp
sbb
es
bnd
faddl
xor
shl
xor
movl
or
shr
mov
subl
mov
mov
addl
mov
adcl
shrd
shr
mov
cmpl
not
mov
movl
mov
jmp
mov
mov
jb
pushl
pushl
pushl
pushl
push
pushl
call
or
adcl
movl
sub
and
subl
subl
mov
mov
xor
xor
adcl
or
adcl
shl
add
add
add
mov
mov
adc
mov
and
shrd
cmpl
movl
not
mov
mov
jmp
movl
movl
jge
pushl
pushl
push
pushl
push
push
call
sbb
add
or
or
xor
or
add
mov
movl
cmpl
mov
movl
mov
jmp
movl
movl
jg
push
push
pushl
call
add
sbbl
mov
adc
mov
xor
mov
addl
sub
shr
movl
mov
or
mov
addl
xor
shl
cmpl
movl
mov
not
jmp
movl
ja
pushl
push
push
push
call
xorl
xor
incl
xorl
subl
sub
xor
mov
sub
or
cmpl
mov
mov
movl
jmp
mov
jl
push
call
addl
adc
xor
neg
mov
mov
add
sbb
and
mov
movl
mov
and
mov
movl
mov
add
movl
mov
mov
adc
jmp
ret
mov
dec
rcrl
mov
add
imul
lds
call
mov
aaa
sub
sbb
aas
fidivl
adc
pop
adc
outsb
cs
sahf
mov
mov
lret
pop
cmp
jl
mov
cmp
mov
push
adc
push
mov
add
and
inc
add
addb
les
mov
inc
dec
or
jb
cmp
andb
pop
in
dec
and
push
imul
add
icebp
sub
test
xor
outsb
mov
ss
ret
out
pop
sub
in
pop
push
rep
jno
negl
aad
inc
mov
lret
jp
cld
icebp
jl
loop
adc
imul
and
and
sbb
imul
pop
add
sqrtps
fwait
dec
rclb
xchg
int
fs
clc
sahf
mov
pop
pop
mov
cld
pop
out
sbbb
push
add
xor
fidivrl
fstps
adc
push
repz
mov
pop
into
jnp
add
fistpl
xchg
cmc
shlb
test
mov
out
sarl
ja
imul
icebp
push
xchg
cmpsl
sub
in
and
adc
scas
and
mov
push
xor
mov
fsubl
adc
add
cmc
xchg
sub
mov
or
jg
cmpsb
or
dec
mov
xchg
fs
mov
push
leave
xorb
sahf
lret
movsl
xor
enter
outsb
push
mov
xor
mov
shlb
je
arpl
adc
dec
sbb
pop
cmp
xor
mov
popf
adc
jecxz
adc
pop
out
push
arpl
mov
xchg
popaw
out
xchg
or
lahf
inc
mov
sub
and
sbb
push
sub
push
sub
and
repnz
cmp
cmp
cli
mov
leave
test
fmul
fiaddl
sub
xor
clc
icebp
js
push
rorl
push
inc
or
xor
dec
test
pusha
pop
sbb
rcll
enter
dec
cmc
stos
or
subb
inc
xor
data16
jecxz
rolb
add
inc
sbb
clc
push
outsb
lods
cmp
pusha
fwait
inc
sbb
adc
jbe
mov
adc
xchg
std
lock
adc
mov
add
inc
adc
cmp
addr16
cld
out
ficompl
mov
leave
mov
sub
fistl
sahf
mov
jg
sbbl
xor
rorl
arpl
adc
insl
jo
sti
hlt
repnz
cmp
jle
outsl
push
xchg
pusha
mov
mov
pusha
call
arpl
fistl
fildll
shll
int3
lahf
mov
xchg
pop
push
or
inc
in
ja
cld
enter
jnp
sbb
mov
lcall
negb
call
mov
jne
pop
add
outsl
add
fcomps
pxor
xor
cmpsl
push
in
xor
adc
or
mov
call
lods
cltd
cli
lret
xchg
loope
cmp
das
fdiv
outsb
cmpsl
bound
nop
in
out
mov
jg
push
insl
insl
in
repnz
adc
imul
and
lcall
xlat
shrb
mov
out
mov
cmpsb
sub
test
push
push
cltd
and
enter
loopne
stc
push
sarl
notl
sar
push
addr16
add
repnz
cltd
cmp
mov
xchg
in
sbb
mov
aas
xchg
xlat
adc
jnp
mov
inc
cltd
sbb
and
in
cmp
jp
and
test
aad
loop
lods
out
jae
push
inc
inc
cwtl
xchg
shlb
pop
out
addr16
shrb
in
lods
je
mov
pop
dec
idivl
push
cmp
jno
repnz
pop
aaa
inc
into
xor
pop
mov
dec
push
pop
or
pop
fcomps
add
inc
sbb
mov
hlt
sbb
shlb
pop
repnz
aam
arpl
jne
sbb
jmp
xchg
push
enter
aad
js
cmpsl
stos
push
es
loopne
or
cmp
jmp
fwait
testb
ficoml
xor
cmp
notl
lcall
jp
subb
mov
repz
xor
rol
jl
lods
jmp
xor
sub
pushl
sbb
pop
leave
pop
sub
gs
mov
push
push
xor
aas
jnp
imul
push
jnp
shll
fwait
xor
fcoms
xlat
ja
push
jbe
nop
repz
mov
inc
xor
hlt
leave
cmc
mov
arpl
pop
push
pop
rolb
xchg
iret
imul
test
les
loope
cs
loope
cld
insl
cmp
cltd
aam
xor
push
dec
push
ljmp
mov
addr16
xor
lretw
mov
push
in
mov
stc
popf
mov
aam
dec
fbld
das
mov
lret
enter
mov
sahf
jo
xchg
pop
mov
or
add
and
jg
ret
das
or
xor
aaa
jp
testl
jle
fbstp
xor
lock
mov
cmp
mov
xchg
inc
jmp
inc
pop
mov
pop
push
mov
cmp
xchg
mov
cmp
xchg
adc
es
cltd
outsb
or
inc
pop
jg
rorl
mov
dec
in
pop
dec
adc
cmp
mov
push
icebp
dec
jns
sbb
mov
aad
cmpb
enter
sub
into
pop
fistpll
push
aad
rcr
or
adc
insb
mov
int
popa
bound
shll
out
ds
stc
insl
scas
std
xchg
nop
adc
shrl
and
bound
and
adc
fimull
ds
pop
loopne
idivb
mov
push
cmp
hlt
sub
push
jb
fwait
dec
mov
aad
jecxz
lret
ja
lcall
fidivrl
cmp
xchg
adc
loop
fimuls
andl
dec
pop
or
in
das
mov
idivb
mov
aas
int
lea
push
fisubrs
shl
call
call
xlat
xchg
xchg
std
maskmovq
notl
inc
and
imul
cmp
addr16
call
lret
xor
or
mov
dec
push
push
fwait
das
cmc
and
mov
pop
xchg
mov
icebp
divb
cmpsb
or
sarl
jbe
pop
mov
lea
rol
cmpsl
daa
pop
cli
cltd
pop
push
lea
gs
and
push
jle
cmp
data16
jecxz
xor
push
mov
inc
addr16
inc
mov
jmp
lods
jp
scas
adc
xchg
mov
pop
fisttpl
ja
jge
push
and
push
lahf
dec
jns
inc
pop
pop
jns
jge
ret
xchg
dec
sbb
mov
jp
lcall
call
push
sub
test
inc
xchg
xchg
bound
and
dec
lcall
lcall
lods
rcll
rcr
jno
in
inc
in
xlat
out
pop
sahf
xchg
and
and
dec
jns
lea
adc
sbb
test
mov
and
cmpsl
adc
cmc
jb
and
sub
pop
or
repz
rcll
movsb
push
imul
loope
test
push
in
cld
mov
inc
hlt
or
jge
loop,pn
lret
jo
jo
test
xor
cltd
les
out
int
mov
cmp
popa
sbb
and
loop
shll
and
jbe
sarb
push
addw
mov
push
fmul
daa
ss
adcb
jle
jmp
inc
sub
stc
sub
insb
sahf
adc
xchg
jg
push
out
xor
cwtl
xlat
aaa
repnz
cli
dec
movsl
and
nop
cmp
jne
push
mov
repz
dec
push
cmp
inc
inc
jge
sarb
fmull
rep
ficomps
and
out
fsubr
xlat
fsubl
enter
dec
sub
ror
out
cmp
xchg
push
fcoml
sbb
jl
push
dec
push
ja
addr16
ret
into
or
and
jnp
addb
mov
adc
je
jae
roll
iret
dec
sbbl
sbb
dec
mov
int
sbb
dec
shll
shl
xchg
cmp
sti
inc
iret
inc
jp
cltd
fsubs
jnp
in
push
xor
popa
mov
jbe
jno
iret
cli
mov
in
add
sbb
xor
xchg
daa
sub
sti
ret
sbb
push
mov
push
daa
das
aas
push
jo
jg
fadds
mov
outsb
cmc
sbb
sub
popf
xor
in
sbb
das
jecxz
cmc
std
xchg
movsl
pop
xor
xlat
es
ret
pop
movsb
stos
cs
push
jle
push
fadd
sub
je
adc
rcrb
pop
addr16
call
enter
dec
xor
mov
xor
and
jnp
pusha
xchg
gs
stc
cmp
mov
push
push
dec
lock
push
icebp
cwtl
shr
add
xchg
loop
jo
jae
sti
testl
call
pop
into
mov
mov
iret
mov
enter
push
or
imul
and
xchg
jb
in
mov
adc
fwait
cmpsb
ds
movl
pushf
inc
pop
jg
lds
movsl
popl
mull
sbb
scas
jb
insb
pop
jb
cld
pop
mov
push
cmp
sbb
jb
arpl
shlb
xchg
fisubs
cltd
mov
xchg
sub
outsl
cmp
cmp
imul
push
int3
aaa
push
and
fstpl
icebp
push
mov
mov
xchg
dec
lret
or
xlat
add
push
sti
and
xor
mov
inc
mov
es
and
repz
addb
push
dec
lret
cmpsl
fxch
imul
sub
jle
jo
call
cmp
lods
xchg
loop
repz
dec
cmp
mov
push
add
bnd
fcoms
subb
fcomi
popa
imul
out
bound
mov
adcb
ljmp
pop
push
pop
jne
out
mov
prefetchnta
mov
shll
cmp
add
push
fs
call
adc
mov
shll
rorb
and
loopne
fcoml
stos
jb
xchg
adc
popf
loopne
jno
loope
lret
pop
lock
mov
mov
bound
ja
dec
mov
shrl
nop
xor
ja
in
pop
mov
lds
dec
xchg
jge
or
push
sbb
fisttpl
xchg
pop
or
push
and
out
mov
mov
mov
pop
fidivs
inc
mov
lea
mov
or
xchg
mov
repz
in
sbb
iret
bound
sbb
ret
lcall
push
mov
jne
jmp
mov
or
notb
jnp
mov
ret
cmp
xchg
xchg
sub
sbbl
mov
pop
out
arpl
jge
out
inc
xchg
xchg
das
sbb
lcall
cld
lods
loop
jnp
jp
cmp
xor
pusha
sub
push
xor
test
into
shrb
ret
pop
push
and
mov
sbb
sub
rclb
std
cmpsb
add
inc
sbb
mov
xchg
fs
mov
push
push
mov
notl
mov
cmp
in
dec
scas
add
or
dec
pop
add
push
add
call
push
int
jl
ret
dec
shlb
and
insl
pop
int
sub
stc
push
mov
jg
popf
jecxz
adc
jecxz
push
sbb
rorl
adc
ds
xchg
nop
lods
fs
and
addr16
jo
sbb
sbb
das
imul
lock
xor
jp
jno
jo
mov
repz
fsubrl
push
roll
inc
ljmp
push
and
or
popf
cltd
int3
push
pop
stos
cmp
push
xchg
sbb
in
sbb
add
jl
popf
lcall
dec
outsl
cmp
testb
pop
mov
loopne
lea
mov
mov
fsubrl
jne
lahf
push
mov
mov
fs
out
inc
leave
xor
inc
aam
mov
hlt
test
sarb
add
clc
call
cltd
adc
inc
xor
push
cmp
push
rorl
inc
flds
lds
dec
jbe
lahf
call
inc
adcl
movsl
jl
or
jno
mov
testl
mov
adc
push
dec
jbe
inc
lahf
fstpl
xchg
and
inc
add
int3
test
fstpl
scas
into
jno
shlb
shlb
cld
sbb
mov
adc
xchg
cmc
jle
movsb
imul
popa
cmp
pop
jle
enter
jb
sbb
scas
or
aam
dec
jae
xorb
or
iret
inc
icebp
or
aas
bound
fstps
stc
or
js
loopne
adc
lcall
add
mov
jl
pop
dec
cmp
insb
hlt
sub
sti
sub
jae
xchg
lods
mov
mov
mov
js
inc
push
mov
sub
vmaxsd
out
sahf
xor
sahf
subl
mov
push
adc
pop
dec
and
out
mov
mov
mov
shrd
jmp
add
dec
push
adc
call
repnz
scas
lret
ja
mov
mov
fiadds
mov
jmp
add
mov
jmp
mov
ret
mov
push
stos
sbb
fwait
pop
lock
lret
lahf
pop
cli
call
push
gs
cmpsb
sti
int
aaa
rorl
insb
hlt
sub
mov
dec
out
fs
sbb
xchg
fsubl
sub
mov
fdivs
and
add
push
xchg
jge
mov
lds
pop
out
and
das
outsb
xor
popf
inc
xor
rclb
pop
adc
hlt
sbb
pop
aam
not
push
xor
rorl
pop
imul
sti
lods
icebp
dec
jecxz
ja
mov
sbb
sub
pop
inc
aaa
fmull
mov
loope
mov
scas
shrl
dec
push
cmc
mull
pop
inc
inc
into
or
dec
insl
push
inc
dec
stos
xor
jge
fsubl
fldl
lock
xor
fwait
cs
add
lea
out
inc
ret
cmp
adcb
pop
or
jns
mov
xchg
mov
lock
push
ret
js
data16
pusha
mov
out
lock
sahf
icebp
pusha
mov
xorb
sbb
xchg
cs
stos
adcl
movsb
inc
ret
out
or
je
sahf
fdivrl
and
ret
lahf
xor
out
fnsave
mov
jbe
mov
aad
sbb
cmp
and
int
push
aaa
loop
mov
pop
loope
sub
xchg
pushf
mov
rclb
mov
fcmove
jbe
aas
cmp
push
adc
inc
mov
shlb
pop
inc
fs
jecxz
insl
pop
insl
in
nop
loopne
xchg
roll
cmc
ret
add
jo
adc
mov
stc
int
les
and
lock
sarl
pop
sub
in
rcr
movsl
adc
test
sub
mov
loope
and
dec
cmpsl
pop
xchg
jecxz
lcall
add
in
push
xchg
pop
ffree
mov
inc
stc
xchg
nop
gs
addl
pop
push
lds
bound
push
jmp
add
mov
add
nop
iret
pop
jp
iret
nop
push
mov
inc
fnstcw
mov
xchg
mov
inc
test
cmp
cmpsl
pop
mov
and
das
sarl
into
ss
outsb
push
in
mov
out
outsl
cs
daa
aam
add
add
scas
ss
mov
pop
leave
jae
orb
dec
cmp
sub
ret
pop
jo
add
sbb
adc
sub
stc
push
andb
je
pushf
leave
mov
jl
jmp
and
adc
lods
aaa
jae
and
dec
dec
out
lcall
inc
push
sbb
fstps
cmp
jb
sti
shrb
mov
sub
ja
jg
and
mov
add
lcall
jmp
enter
adc
cmpsl
fstpt
scas
icebp
iret
sbb
adc
push
aas
sub
push
ds
sbb
dec
test
xchg
cltd
push
cmp
cmp
mov
cmp
xchg
push
or
sbb
icebp
push
fs
jnp
in
sbb
loop
mov
movsb
lock
jecxz
and
mov
rolb
pop
ret
xchg
mov
sbb
and
mov
fwait
arpl
aam
xlat
lock
mov
fisubl
mov
arpl
orl
fists
pop
or
rorb
jp
sbb
lahf
inc
or
xor
jns
imul
scas
aad
xor
daa
push
dec
jmp
notl
faddp
xchg
and
jne
pop
adcb
repnz
test
jmp
pop
fcompl
negb
mov
jecxz
ret
inc
lods
add
pop
mov
in
adc
insb
mov
popa
sti
sbb
sbb
mov
mov
test
mov
addl
xchg
sbb
jns
mov
mov
mov
cmp
cld
push
sub
fisubl
dec
pop
scas
xchg
mul
push
movsl
in
mov
add
loopne
popa
nop
sbb
xchg
repz
xor
mov
sbb
bsf
scas
mov
xor
mov
rorb
push
pushf
xor
cmp
jle
adc
mov
mov
outsl
sti
add
pop
pop
jmp
cltd
jge
cmp
addl
ret
xchg
mov
jne
stos
mov
mov
cmp
jg
xor
adc
data16
cmpsl
jo
xchg
push
loope
int
mov
mov
push
insb
mov
or
mov
ret
in
je
test
xchg
jp
aad
popa
cwtl
lea
incl
fst
ret
loop
cmp
and
push
push
arpl
hlt
bnd
loop
jg
notl
fwait
fwait
lcall
add
and
xchg
jge
in
popf
xor
outsl
daa
loope
xor
mov
jecxz
sbb
xchg
std
inc
jl
fs
imul
and
mov
pop
pop
inc
jge
lret
cmp
ljmp
stos
outsb
xor
mov
cmp
jle
nop
mov
adc
pop
xchg
push
xor
push
pop
in
aad
fldcw
fcom
out
clc
mov
test
daa
int3
push
push
insl
out
pop
jne
shll
insb
cs
push
and
shrb
push
iret
shl
js
shlb
pop
mov
sbb
shrb
js,pt
movsl
rorb
mov
cmp
andl
add
out
inc
add
mov
stos
das
sub
jne
cs
inc
and
repnz
insl
popf
lea
and
jl
sbb
push
mov
pop
aad
pop
out
cmp
pop
data16
ja
hlt
daa
dec
cmp
adc
mov
fldenv
adc
jmp
xor
cs
inc
arpl
jmp
push
xor
cmp
xor
iret
mov
lahf
lcall
subb
in
xorl
sub
pop
push
stos
mov
subb
and
pop
pop
push
aad
pop
or
and
stos
in
sbb
subb
outsl
insb
push
push
xchg
repz
xchg
lret
mov
frstor
loop
cmp
shl
mov
sbb
pop
push
and
mov
dec
sub
push
jge
push
popf
hlt
sub
out
and
jo
data16
test
leave
lcall
mov
inc
cmp
and
mov
out
dec
mov
shll
sbb
sub
cld
mov
dec
pop
mov
push
idivb
mov
jl
test
adc
or
test
mov
cmp
ficomps
fwait
cltd
scas
mov
sub
push
into
add
stos
aas
and
rcll
jge
jno
jmp
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
jmp
in
in
data16
push
sbb
mov
push
sub
movaps
pushf
lock
jae
sahf
in
lods
jno
mov
push
mov
push
mov
pusha
rorl
dec
ret
cmp
push
push
jae
mov
inc
clc
xchg
pop
adc
insb
adc
push
out
mov
push
mov
dec
dec
lods
add
fsubrs
sbb
jnp
cs
mov
bound
sbb
cmp
dec
dec
push
fwait
adc
xor
cmp
loope,pn
out
daa
inc
imul
aaa
jnp
lods
push
mov
fistl
in
shlb
push
arpl
add
popa
push
call
repz
icebp
push
sub
in
sub
jb
cmp
mov
lock
mov
pop
bound
lock
test
push
sbb
mov
or
xor
lods
xchg
imul
sub
add
dec
mov
fldt
outsl
mov
cmp
ljmp
xor
sbb
scas
je
sub
jecxz
sti
out
cli
mov
les
cwtl
popl
add
arpl
cmpb
test
add
sbb
mov
daa
sub
loopne
fcomps
faddp
gs
cmp
adcb
int3
repnz
pop
xlat
mov
jecxz
out
test
inc
aad
out
out
jp
repz
add
pop
mov
stos
cltd
xchg
jb
mov
adc
jle
mov
pop
mov
inc
push
ss
stos
xchg
inc
shll
pop
loope
addr16
push
jmp
out
push
cltd
cmp
pusha
push
les
mov
sti
sub
xchg
xchg
jo
mov
xchg
cwtl
push
xor
and
push
lods
xor
mov
fisubrl
lret
or
mov
outsb
in
fcoml
and
mov
jae
jb
popf
jmp
xchg
test
push
pop
pop
pop
add
dec
sar
out
xorl
jl
mov
jbe
or
inc
fidivrs
mov
sub
jmp
inc
sub
pushf
add
shr
shll
imul
and
dec
sub
push
scas
jno
add
pop
jmp
test
cld
pop
adc
test
jb
shrb
popf
cltd
mov
cmpsl
dec
pop
pop
xchg
std
jl
lds
orl
xor
mov
and
cmp
inc
mov
jge
addl
in
jmp
mov
pop
jmp
jnp
mov
dec
cmpsl
sti
fidivrs
addl
xchg
leave
ficompl
call
stos
in
and
mov
sbbl
jl
test
xor
shlb
outsb
stos
xor
mov
jnp
add
cmpsb
scas
push
jmp
jmp
xchg
clc
mov
gs
in
lahf
fstl
cmpsl
push
mov
sub
fcmove
fistps
pop
xchg
push
cmc
inc
cmp
mov
arpl
inc
sbb
push
xchg
subb
in
mov
test
inc
lea
ja
std
insb
incb
fwait
or
adc
out
xchg
dec
lret
inc
xor
push
push
in
inc
out
pushf
imul
dec
push
leave
int3
adc
and
das
sti
mov
ja
sbb
jae
cmpl
loope
cmc
int
ret
out
mov
sbb
subl
fwait
out
aad
xchg
mov
jmp
imul
mov
mov
movsl
sub
mov
in
cltd
add
inc
lahf
pop
data16
mov
clc
and
loope
mov
ds
xchg
mov
inc
xor
call
mov
mov
jp
leave
frndint
adc
sbb
inc
jg
fistps
test
xchg
sti
cmp
jne
push
pop
and
add
and
lods
push
cli
mov
and
out
cmp
or
and
xor
js
sub
and
testb
jecxz
lods
inc
mov
xor
mov
mov
clc
stos
dec
sub
mov
popf
in
les
and
xor
outsl
hlt
or
jae
test
jb
pop
xchg
les
mov
xchg
add
cmpsb
or
lret
lret
shlb
loop
or
dec
ja
pop
sub
stos
insl
mov
sub
idiv
out
jg
shrl
aad
and
pop
je
adc
sub
in
mov
jnp
lds
int3
sbb
sbb
inc
mov
jecxz
out
sub
jnp
cmp
jne
xchg
jbe
mov
nop
pop
addr16
in
outsl
adc
xchg
fsubrs
pop
cmp
data16
das
pop
dec
add
std
stos
adc
jecxz
adc
push
ret
iret
sub
das
adc
dec
pop
in
mov
pop
adc
insl
or
adc
and
fisubs
mov
jl
orl
addr16
adc
inc
in
cmpsl
xchg
mov
cmp
mov
xor
dec
cltd
das
orb
and
xchg
out
push
insb
adc
fbld
subb
imul
jno
daa
stos
sbb
scas
aad
pop
cltd
jg
aas
adc
mov
push
xchg
adc
dec
sbb
jg
std
popa
and
sbb
mov
mov
jb
mov
mov
arpl
or
inc
mov
pop
ja
mov
imul
stos
jl
and
xor
das
cmp
int
jbe
fdivrl
or
pop
xlat
shrb
outsb
cli
mov
scas
and
jge
insl
push
sub
jo
mov
lret
lock
push
add
call
bound
pop
push
jecxz
pop
add
adc
add
xorl
cmp
into
push
sbbl
lret
fwait
out
ss
cmp
enter
jae
xor
mov
and
cli
shr
sub
push
hlt
dec
or
int3
push
fistps
jno
pushf
fadds
data16
add
scas
daa
add
fisttpl
imul
sub
je
mov
pop
in
test
out
mov
addr16
bound
and
cmpsl
je
mov
out
sbb
xchg
ljmp
test
mov
dec
fcmovne
mov
mov
adc
roll
pop
lcall
mov
xchg
xchg
jne
inc
or
jp
je
jmp
sub
fidivrl
cld
popa
subl
ret
mov
sub
ss
bound
pop
push
mov
jbe
jmp
inc
adc
rcll
test
sbb
sbb
jge
in
add
data16
icebp
test
xor
in
fistpll
sub
jae
pop
cmp
stos
pop
out
sub
jp
dec
add
jmp
sbb
and
mov
aas
adc
or
jmp
js
sahf
int
das
sahf
popa
scas
nop
sub
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
jmp
outsb
hlt
xorl
or
mov
stos
ja
in
jp
mov
jno
imul
int3
call
filds
mov
mov
jl
or
push
sti
rol
scas
mov
loop
sub
inc
movsl
push
mov
mov
shll
pop
movsb
pop
jl
xchg
aad
fwait
loop
cmpsb
push
xchg
lds
inc
mov
mov
sbb
jecxz
xchg
fcoml
test
pushf
cmp
add
jmp
mov
cmp
sarl
subb
lds
mov
aam
mov
mov
lock
sbb
loopne
pop
add
sbb
pushf
test
xlat
add
lods
or
pop
cltd
sarb
add
mov
lds
inc
xor
shrb
pusha
cli
lret
jp
sbb
mov
jno
in
push
leave
mov
insl
into
add
sbb
lret
mov
xchg
sbbb
cltd
adc
dec
xor
jne
jno
clc
pop
jne
lds
xchg
jp
leave
pop
xchg
jno
and
sub
push
sbb
cmp
rorl
xor
cltd
jmp
push
sub
and
test
rcl
and
movsl
push
cltd
mov
xchg
ja
cltd
roll
scas
sti
dec
outsl
mov
imul
add
fs
insb
fwait
mov
sbb
dec
sbb
inc
cmp
lock
out
pop
loope
arpl
outsl
ds
test
ret
int3
jecxz
fdivrs
add
adcl
xchg
pop
xor
sbb
mov
daa
inc
mov
sub
push
fs
mov
int
fisubrs
or
inc
jle
ljmp
xchg
mov
jno
rcrb
xor
jnp
cmp
jbe
mov
lock
cli
notb
add
aaa
sbbl
add
test
inc
mov
xor
hlt
ljmp
sbb
rclb
inc
aam
lahf
push
mov
int
sbb
adc
enter
lods
fsubr
dec
jmp
dec
sub
fdivl
sub
sub
call
adc
sahf
mov
outsl
pop
inc
push
ret
jne
or
mov
mov
repz
imul
idiv
subl
cmp
ss
ret
ret
jno
scas
outsl
pop
js
xor
cld
cmc
mov
mov
popf
adc
jg
pushf
std
outsl
fstps
fcomps
testb
andb
jb
aad
mov
push
lods
int3
mov
movsb
cmp
jo
gs
imul
xor
inc
ja
pop
sub
pusha
loop
xchg
iret
lret
popf
sub
movsb
jne
pushf
imul
test
add
ja
into
cld
ret
xor
xor
mov
inc
int3
pop
xor
fldenv
out
ret
mov
push
imul
mov
inc
stos
sub
mov
inc
cmc
add
push
stos
mov
lret
mov
int
xorl
cmp
mov
or
add
or
push
pop
mov
add
add
repnz
mov
ja
mov
outsb
adc
lcall
sarl
les
cld
test
ja
test
mov
adc
xchg
and
mov
inc
les
lret
cwtl
leave
xor
int
mov
xchg
arpl
dec
nop
jb
ffree
lds
aas
dec
nop
mov
dec
and
xchg
sbb
das
in
sub
inc
jmp
imull
xchg
xchg
dec
mov
and
pop
push
dec
xchg
jmp
mov
sbb
mov
out
sub
lock
lahf
out
call
jle
outsl
mov
stos
lret
inc
sub
nop
enter
cmp
das
nop
and
push
mov
ret
int3
cmp
add
inc
or
stos
in
mov
in
mov
jge
jns
adc
mov
outsl
cmp
mov
push
mov
xchg
mov
daa
jmp
sub
sub
into
dec
imul
add
and
adc
push
mov
sbb
cmpsl
loopne
xor
sub
fsubs
push
jns
cmpsl
in
inc
jnp
ljmp
cmpsl
test
in
xor
mov
mov
insb
jno
add
mov
test
mov
insb
daa
xor
xchg
inc
or
mov
iret
lods
into
vcmppd
daa
scas
aas
lcall
inc
or
fstps
clc
pop
iret
mov
andl
fstpt
leave
push
mov
sub
xchg
and
dec
mov
std
in
sbb
sub
mov
fxtract
jne
xor
dec
push
push
xchg
mov
sbb
adc
into
add
push
xchg
cmpsb
sub
adc
push
mov
test
in
iret
ret
wbinvd
or
push
push
popa
jge
nop
stos
mov
loopne
enter
lea
idivb
dec
in
sub
andb
in
test
scas
adc
inc
leave
fsubs
push
ja
jnp
or
sbb
shr
into
negl
inc
dec
lods
jno
sbb
les
push
xor
imul
xchg
cmc
xchg
pop
mov
outsb
inc
cmp
fidivl
sbb
add
cmpsb
stos
jp
adc
lds
out
int
inc
jne
mov
scas
fwait
pop
sti
jbe
mov
ds
push
ds
and
pushf
gs
insl
bound
adc
mov
aas
mov
scas
cmpsb
cld
and
arpl
mov
lock
mov
push
pop
pop
aas
mov
insb
fidivs
add
xchg
xchg
arpl
ds
mov
cmp
pop
jbe
mov
out
push
xchg
pop
int
sbb
cld
sub
mov
dec
sub
rcrb
rolb
add
jnp
test
lret
lds
sub
fcompl
dec
fcoms
inc
test
cmpsb
rol
data16
es
rep
lds
int
scas
into
rcr
jae
inc
jns
aaa
dec
sbb
cld
and
sub
lds
outsl
ret
xchg
fwait
push
sub
jecxz
mov
dec
imul
aam
adcb
pop
repz
int
in
lods
insb
jp
lret
xchg
in
xlat
pop
data16
in
rcrb
pop
mov
cltd
mov
ljmp
pop
movsb
cmp
push
test
aaa
mov
jl
mov
lcall
xchg
xchg
xchg
repz
icebp
or
adc
jns
pop
mov
aaa
mov
push
and
sub
adc
mov
stos
lods
xor
mov
mov
pop
mov
stc
dec
into
dec
insb
mov
push
in
mov
out
inc
ljmp
dec
jbe
iret
pusha
mov
ds
data16
mov
sbb
dec
cmpsb
in
sub
mov
stc
push
sub
push
add
ret
mov
loop
inc
loopne
dec
in
lods
enter
add
in
mov
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
jmp
add
mov
inc
mov
sbb
mov
ja
ret
add
adc
lods
repnz
xchg
jg
push
stos
sahf
fwait
add
add
test
sub
jns
xchg
inc
pop
jns
gs
mov
adc
inc
inc
fldl
dec
lea
xchg
jmp
mov
and
adc
pop
xchg
cld
sub
shll
cmp
enter
scas
dec
pop
xchg
push
mov
mov
jbe
dec
mov
pop
in
test
pop
cmp
jnp
or
fsubl
leave
mov
movsl
dec
data16
cwtl
adc
lea
xchg
das
enter
insl
sarl
xchg
or
jns
sar
in
mov
cmpsb
mov
push
and
fsubrs
mov
repz
daa
cmc
sub
enter
aam
nop
out
push
xorl
cmp
cltd
xor
xor
xchg
xchg
and
push
pop
out
mov
ds
push
loopne
jmp
xchg
mov
mov
mov
inc
and
lea
negb
add
sub
or
in
les
pop
adc
aaa
ret
sti
inc
inc
lods
out
mov
jmp
out
jo
mov
dec
in
mov
mov
testl
inc
es
jns
sbb
jl
adcl
gs
mov
jbe,pn
push
mov
mov
dec
adc
pop
and
xor
mov
test
and
dec
mov
repnz
push
bound
push
daa
insl
outsl
das
inc
add
loope
push
ljmp
nop
insb
cmp
into
imul
mov
in
push
cs
lahf
cld
jb
dec
xchg
add
and
inc
cmp
add
arpl
clc
test
lcall
mov
xchg
out
rcll
xor
mov
and
fimuls
mov
inc
xchg
jge
lds
fisttps
andl
xor
push
fstl
inc
mov
leave
jae
or
xchg
int
cmp
in
ret
and
jecxz
repnz
shl
pop
shl
popf
sub
jmp
lret
in
ds
stos
dec
dec
out
aam
mov
or
sbb
mov
cmp
scas
mul
jbe
andb
out
cmp
push
enter
jecxz
cld
fdivrl
pop
mov
rorb
pop
movsl
and
lods
dec
pushf
leave
cli
ss
pop
inc
repz
enter
mov
je
iret
sub
outsb
shll
or
pop
dec
pop
sahf
in
imul
fldenv
mov
loope
cmp
andb
std
xchg
adc
loope
mov
mov
sbbb
cltd
cmc
xor
pop
cld
jge
mov
test
sbb
das
adc
fbstp
pushf
in
imul
in
mov
pop
inc
pop
adc
bound
push
mov
je
lea
rcrl
pop
mov
or
dec
adc
cltd
je
fistpll
pop
or
cmc
inc
js,pt
add
clc
jns
pop
div
mov
insl
add
dec
pop
addr16
int3
repnz
aas
int3
inc
ds
push
adc
push
and
clc
popa
push
ds
push
inc
pop
or
and
mov
mov
push
mov
push
sarl
sub
adc
cmc
cmp
div
xlat
in
loope
clc
dec
pushf
xchg
jecxz
cmp
dec
adc
lods
fdivs
movsl
mov
jno
bound
aas
out
and
pop
mov
insb
pop
and
cltd
cmpsb
xor
push
cltd
push
out
pop
sub
jns
fldcw
mov
mov
rolb
xchg
repz
mov
cmp
mov
jno
push
in
addr16
xchg
nop
pop
sbb
movsb
xor
dec
mov
test
pop
pop
fs
sbb
jecxz
lds
scas
cmpl
push
sbb
inc
mov
dec
xchg
lods
sti
lcall
push
mov
stc
and
call
jle
rcrl
nop
xchg
jno
push
dec
sti
shrl
mov
xchg
mov
pop
das
mov
and
add
mov
xor
or
sub
mov
mov
xchg
in
push
sbb
push
aam
daa
dec
mov
push
icebp
jle
bnd
test
xor
ret
mov
mov
and
xchg
nop
and
lret
das
pop
push
pop
inc
sub
sub
mov
cwtl
in
popf
ss
mov
data16
mov
repz
cs
daa
cld
orl
push
ljmp
das
dec
outsb
lods
pop
nop
mov
or
repnz
test
outsb
lods
outsl
inc
inc
jb
fiaddl
push
xor
lea
dec
pusha
daa
cmc
mov
js
mov
out
xor
imulb
mov
scas
pop
sub
xchg
xor
das
addb
sarb
xor
sub
sub
xchg
ret
das
sbb
jecxz
cmp
decb
mov
cmp
rcl
dec
push
testl
push
cs
lret
push
pop
mov
mov
aas
jae
rcll
mov
push
sahf
inc
adc
and
inc
dec
call
aam
mov
cli
insl
add
inc
lods
cmpsl
stos
popf
xchg
mov
in
clc
pop
pop
enter
inc
add
add
test
push
pop
jle
movsb
ret
inc
fstl
fsubrs
repnz
add
scas
dec
mov
xchg
cltd
sub
pop
pcmpgtw
pop
scas
leave
popf
push
mov
dec
sub
sub
inc
repnz
lods
jmp
push
pop
out
scas
adc
rorl
dec
jp
xchg
jmp
sbb
jp
test
mov
inc
jb
mov
cmp
jmp
xchg
mov
lods
mov
repz
sbb
adc
mov
add
cmpsb
les
scas
dec
and
add
mov
pusha
cmp
fucomip
int3
test
movsl
or
or
add
gs
add
pop
daa
outsb
ficoms
lock
jo
rolb
add
divl
insl
lods
xor
jg
push
cmpsl
nop
popf
ljmp
add
push
mov
nop
out
in
jae
loope
jns
stos
inc
mov
stos
mov
adc
fidivrl
pop
gs
and
mov
or
mov
xchg
clc
jns
xor
adc
mov
out
mov
or
fwait
xor
push
enter
aad
mov
inc
je
mov
add
add
sbb
aas
fs
lock
sbb
outsb
sahf
ja
dec
hlt
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
jmp
orl
push
cmpb
in
std
xchg
mov
jg
mov
shrl
mov
aam
pop
pop
jle
cmp
cmp
mov
push
jmp
shll
pop
test
ficoms
xor
pop
stos
mov
test
fsts
cs
daa
jbe
iret
push
sbb
fisubl
ja
imul
clc
mov
push
addr16
pop
std
and
cmp
cmp
mov
loopne
ja
scas
aam
mov
mov
mov
pop
or
lock
dec
mov
into
add
mov
adc
cmp
fistps
mov
cmpsb
test
sbb
fs
sub
shr
comiss
mov
sbb
int3
sbb
ds
jbe
add
mov
lcall
rorl
mov
adc
test
or
clc
add
inc
in
lahf
add
cmp
dec
movsl
pop
xchg
add
pop
je
enter
ljmp
mov
push
mov
pop
lahf
test
cmp
scas
lcall
adc
sbb
insb
std
gs
adc
push
sbb
daa
repz
daa
test
add
add
xchg
mov
mov
push
push
repnz
mov
xchg
and
popa
push
pop
push
add
in
dec
ror
dec
pusha
mov
jae
push
push
movsl
sbb
jns
int
aaa
adc
or
jae
jbe
popf
dec
add
xchg
out
push
xlat
out
int3
xor
add
or
xchg
xorb
movsl
and
ljmp
sub
sti
cld
jo
mov
mov
sbb
and
mov
enter
push
jnp
mov
or
cwtl
jge
jl
sub
mov
jp
push
lcall
cli
addr16
sahf
adcb
pushf
sbb
jmp
xchg
cmpsb
mov
xor
mov
inc
cmp
sbb
or
in
add
or
jbe
ret
lods
or
sbb
push
mov
fs
sahf
fmul
nop
sub
clc
inc
xor
cmp
pop
pop
push
fistpll
add
cmpsl
mov
out
imul
cltd
int3
inc
push
or
cmp
test
in
loop
mov
test
mov
xchg
dec
popf
xchg
imul
mov
lcall
dec
in
mov
mov
call
adc
std
inc
pop
sub
mov
sub
cmovge
jbe
call
std
aaa
outsb
sti
shl
ficoms
mov
sub
mov
loope
imul
xchg
mov
aas
fisttpll
add
cmp
ret
mov
push
xor
jb
leave
or
or
add
shrl
cld
jmp
hlt
mov
mov
jae
sbb
shll
pop
cmpsb
mov
sub
je
push
xchg
sub
stc
dec
sti
cmp
push
stc
dec
jo
cmp
jle
sbb
or
or
xchg
pop
sub
lret
aas
data16
enter
js
xor
cmp
sub
cltd
nop
imul
setae
xlat
loope
mov
stos
std
dec
pop
and
sbb
es
stc
cmc
mov
addb
shlb
nop
ja
or
js
cs
incl
stc
xor
out
jp
mov
and
push
push
test
rcrb
sbb
dec
xlat
pop
sbb
jnp
nop
jbe
sub
aaa
jae
mov
dec
xchg
push
stos
pop
xchg
repnz
dec
jmp
fwait
cmpsl
cmp
aaa
popf
add
js
and
lds
pop
add
movsb
test
leave
stos
int
rcr
outsl
dec
scas
testb
xchg
mov
push
daa
fcmove
sarl
out
and
hlt
ds
adc
stos
adcb
push
rclb
shrl
mull
mov
aas
push
mov
in
xchg
mov
pop
jl
add
lods
dec
xor
out
push
int3
das
loopne
in
dec
repnz
jl
sbb
xor
sub
imul
pop
push
cmp
mov
sbb
movb
mov
andb
cmc
adc
repz
fisubrl
mov
mov
pop
test
inc
ljmp
dec
fsts
jne
cltd
fsubrl
sbb
sbbl
dec
xor
add
ret
dec
int
sub
jae
mov
outsb
data16
cmp
es
pop
stc
test
ljmp
inc
or
sbb
lods
xor
call
push
ficoms
push
mov
pop
jecxz
push
or
adc
scas
inc
xor
push
push
sbb
pop
xchg
inc
std
mov
jns
popa
outsl
lcall
mov
add
dec
mov
push
fadds
sahf
nop
sub
fwait
jbe
mov
cmp
inc
bound
std
nop
scas
add
sub
jmp
inc
arpl
mov
pop
sbb
inc
test
add
cmp
iret
sbb
pop
xchg
or
out
add
push
mov
jbe
or
push
fmull
sub
ss
addr16
push
mov
imul
push
push
into
pop
mov
add
sbb
sti
shl
pop
fdivrl
mov
mov
mov
loope
repz
xchg
lret
int
cltd
cmp
lret
lods
mov
and
loop
cmpl
dec
jne
adc
sbb
xlat
out
lods
add
ds
cli
xor
or
popa
mov
pop
dec
or
jmp
and
test
sbb
ss
push
mov
data16
jecxz
lods
xor
loope
sub
mov
xchg
call
mov
and
mov
pop
out
push
or
pop
jne
inc
or
hlt
and
sahf
sbb
or
sbb
xorb
rorb
repz
mov
or
out
jno
lretw
jo
dec
ret
and
pop
in
cltd
and
push
or
push
rolb
mov
aam
xor
mov
mov
fsubrs
jp
aas
std
push
sub
add
in
mov
sbb
cmp
pop
xchg
sub
insl
adc
sbb
negb
arpl
push
hlt
cmp
add
cli
xchg
sub
mov
scas
bnd
in
mov
ret
ja
cmp
repnz
out
inc
out
jo
lock
mov
rcll
sub
sub
jl
je
movsl
mov
add
js
jle
popa
cmp
movsb
push
jbe
sbb
mov
xchg
aas
call
pop
leave
fs
or
fs
mov
dec
push
ja
fstpt
xor
xchg
dec
cmp
mov
lods
outsb
fbld
nop
mov
pop
xchg
in
mov
test
subl
aam
shr
lahf
lods
mov
call
adc
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
jmp
mov
and
setns
dec
test
js
xchg
ja
xor
mov
stos
es
movsl
or
sbbb
js
decb
cli
shrl
movq
ficoml
push
mov
cmpsb
ret
push
test
dec
cwtl
out
stc
push
mov
aad
insl
scas
scas
mov
imul
jno
or
stos
cs
xor
repz
out
icebp
shlb
push
scas
pop
sub
stc
xlat
loop
and
inc
cmp
and
or
adc
ret
cltd
stos
adc
mov
test
inc
fcompl
movsl
sub
mov
hlt
mov
lahf
test
xor
jo
test
pop
inc
jecxz
push
ds
add
or
inc
cmpl
mov
sar
xchg
add
mov
push
iret
lods
sbb
aad
movsl
call
cltd
dec
insb
ror
sub
filds
cmp
jo
jns
and
pusha
pop
mov
pushf
orb
cmp
or
xor
jno
popa
in
pop
pop
add
repz
jbe
xor
push
push
mov
xchg
xchg
push
xor
mov
or
mov
push
mov
jle
cmc
sub
push
mov
sti
pusha
stos
jg
dec
call
adc
jp
fisubrl
call
xor
push
jb
int3
mov
dec
popf
scas
push
daa
mov
sbb
and
or
es
inc
ljmp
lock
jge
stos
fmuls
add
pop
pop
push
mov
fdivrs
aaa
mov
pusha
ljmp
dec
jl
sbb
lods
jg
ds
jb
loop
pop
xchg
adc
scas
push
add
insl
jae
mov
jle
dec
jns
jl
and
lret
pop
pusha
push
mov
rcrl
gs
mov
mov
bswap
mov
mov
or
mov
aad
push
add
and
aam
or
ret
xchg
les
mov
inc
push
adc
mov
aas
jl
rcrb
fst
into
xor
inc
fimuls
ret
mov
divl
mov
or
mov
inc
inc
mov
sub
out
sti
mov
push
push
pop
inc
dec
rorl
stc
outsb
pop
mov
aam
and
jg
idiv
les
lea
fnstsw
call
add
push
sbb
repz
movsb
push
enter
jo
push
imul
roll
scas
in
lret
mov
jae
dec
cmc
adc
cwtl
push
xchg
dec
test
outsb
aas
in
push
bound
imull
dec
je
das
subl
fs
push
mov
pop
filds
test
in
data16
ret
push
fs
je
fcomps
dec
xor
out
add
shll
pushf
sbb
aam
or
push
push
inc
loope
lods
or
movsl
outsb
mov
inc
adc
rcrb
rcrl
int
cmp
shlb
data16
in
add
cmpsl
sahf
jno
or
xchg
jne
dec
rolb
add
push
lock
push
pusha
mov
sarl
inc
lret
leave
bound
lcall
out
xlat
cs
orl
repz
movsb
repnz
xchg
xchg
dec
pop
in
arpl
ljmp
sbb
aad
icebp
and
adc
rcrb
push
cwtl
jbe
and
mov
or
sub
push
jge
sbb
andl
pushf
dec
xchg
cmp
out
fdiv
js
mov
loope
mov
push
dec
stos
mov
aam
cmp
adc
mov
negl
imul
rorl
mov
out
daa
lea
xchg
adc
fldt
in
bound
into
in
push
mov
sahf
mov
loop
stc
jl
mov
dec
push
aad
popa
and
ljmp
scas
sub
test
leave
lods
jl
test
es
pop
pop
and
push
test
jnp
clc
leave
cli
add
out
xchg
xchg
pop
push
sar
lret
sti
xor
mov
daa
jmp
rclb
sub
xor
addb
xchg
dec
mov
nop
add
mov
notl
xor
sub
cmp
push
jmp
push
sub
mov
mov
cwtl
cmp
aas
fstps
xchg
mov
fstps
loope
push
add
adc
dec
mov
mov
xor
test
push
inc
jmp
lds
adc
cld
test
fmuls
adc
and
int
sbb
mov
inc
adc
cmp
test
sbb
or
add
lcall
int3
mov
addr16
mov
cmp
jmp
xchg
xchg
into
jmp
jbe
inc
cmp
stc
test
lods
inc
mov
xor
or
mov
out
xor
xor
jg
dec
imul
movsb
call
ljmp
xor
mov
xchg
fldt
sub
pop
cmp
sbb
adc
dec
xor
adc
sbb
lret
aaa
pop
mov
mov
lret
xchg
dec
xchg
mov
stos
jge
fistps
in
shll
mov
mov
ret
popa
cs
inc
fcompl
add
or
pop
loope
xsha1
cmpsb
or
cmp
fcompl
sbb
ret
or
mov
sahf
push
jnp
jecxz
xor
push
js
push
fdivs
inc
add
xor
mov
cmc
cmp
pop
es
inc
pop
mov
pop
scas
lock
lods
cs
add
push
inc
repnz
adc
fsubrl
dec
mov
and
pop
pop
push
mov
jae
push
decl
cwtl
pop
sub
movsl
mov
mov
push
jg
or
in
mov
imul
imul
and
les
adcb
sti
ret
jae
adc
dec
jnp
movsb
and
and
push
call
add
aaa
leave
add
lret
sbb
std
js
fwait
aaa
cmp
into
pop
imul
mov
jle
mov
or
jp
mov
test
aad
repnz
call
mov
jnp
iret
sbb
out
ret
stos
sub
pop
rcrl
test
testb
rcrb
mov
int3
mov
add
lret
das
mov
or
int
ss
iret
mov
xchg
jmp
add
ljmp
xor
add
fnstsw
xlat
mov
cmp
push
aad
pop
add
sbb
insl
mov
add
jno
dec
bound
ss
mov
fdivr
movsb
inc
sbb
or
mov
stos
pop
movsb
xchg
push
ret
das
inc
aad
rorb
xchg
mov
inc
cmpsl
into
jo
je
pop
js
outsl
jne
push
movsb
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
jmp
ret
fwait
mov
and
ficoml
pop
xchg
loopne
pi2fw
lret
pusha
bound
cld
test
dec
push
call
adc
clc
ss
pop
sbb
fs
mov
sub
fs
xchg
sbb
sub
xor
sbbl
fldl
out
sub
adc
outsb
cmpsl
jp
lods
jge
test
jns
jle
popf
mov
idiv
dec
cltd
sbb
outsl
cmp
in
lea
loopne
lods
jns
or
popf
popa
test
dec
movsb
push
xor
sbb
out
mov
mov
stos
xchg
jno
repnz
sub
push
inc
in
in
in
or
mov
js
fcompl
xor
test
scas
cmc
mov
push
jbe
cmpsb
mov
dec
ljmp
push
filds
inc
cmpsl
or
idivb
mov
test
shrl
clc
pop
sbb
in
and
fdivs
scas
or
sub
sbb
and
dec
adc
sbb
movsl
sub
inc
mov
addr16
inc
jne
inc
mov
ror
sub
hlt
lahf
popa
out
mov
stc
jge
jb
dec
inc
adc
insb
inc
xor
stos
mov
enter
adc
es
sbb
mov
dec
fisttpl
xchg
mov
loopne
add
adc
jb
sub
jne
push
and
ret
pop
test
into
mov
rol
mov
and
and
mov
push
shlb
add
dec
pushf
faddp
and
in
jl
xchg
jmp
cmpsb
fsubrp
mov
or
or
inc
adc
stos
cmp
rcrl
adc
arpl
jg
mov
sbb
sti
pop
dec
jg
movsl
jmp
inc
inc
lahf
shll
sub
into
jo
jne
lahf
mov
push
in
adcl
and
or
imul
lcall
nop
jns
lret
push
ret
mov
add
add
sub
addr16
shl
jb
pop
inc
ret
insl
add
sub
mov
jne
mov
enter
mov
das
mov
shrb
sbb
xchg
lret
aad
sub
nop
daa
scas
test
ja
xor
bound
cmpsl
test
loope
sbb
xor
push
xor
mov
mov
push
sbb
test
jl
xlat
pop
ss
xorb
out
sbb
push
and
adc
adc
pop
pop
mov
in
mul
cltd
in
sahf
fcom
and
jge
inc
add
adc
imul
lds
in
lods
sbb
clc
cli
jge
cs
sub
mov
mov
cmpsb
sahf
fisubrl
pop
sbb
pop
adc
xor
rcrl
jg
mov
dec
mov
inc
pop
mov
addr16
mov
dec
scas
cltd
jle
cmpb
movsl
out
jecxz
dec
lods
jecxz
iret
lahf
lods
pop
lea
ss
dec
and
js
sbb
and
mov
xlat
xor
enter
bound
cli
mov
xchg
mov
test
jp
roll
das
dec
mov
fstpt
sbb
cmpsb
fsubrs
or
lret
out
out
adc
pop
ret
les
lea
jb
add
notb
cmp
and
xor
mov
inc
test
addb
xchg
clc
push
stos
inc
repnz
aad
jnp
dec
adc
jmp
stos
jmp
cmovl
xor
pusha
iret
xor
jb
fwait
mov
jmp
cmc
rol
insl
shll
jl
dec
icebp
mov
leave
test
daa
mov
cmp
inc
es
jnp
add
jno
insl
sbb
dec
ljmp
mov
jl
ja
bound
repnz
xlat
std
and
or
push
clc
or
jge
test
imul
add
neg
mov
pop
cmp
mov
adc
ds
push
frstpm(287
pushf
or
add
out
sub
push
cmp
push
add
xor
mov
pop
sbb
aas
xchg
lea
sbb
push
inc
and
push
leave
lea
es
ja
stos
add
lret
cmpsb
mov
dec
push
sahf
aam
xchg
stc
or
imul
jb
ret
lea
pop
dec
mov
xchg
les
xchg
test
push
push
popf
aad
mov
add
leave
sahf
mov
sub
lods
jne
test
xor
mov
xchg
clc
imul
inc
jnp
jmp
fs
je
mov
and
loop
lods
fistpl
lds
xchg
outsb
jg
dec
cwtl
mov
test
inc
inc
cmp
lret
jns
jno
daa
lret
lods
xor
loope
mov
loope
scas
mov
inc
push
jp
xor
push
sbb
in
aad
dec
mov
jl
jg
xchg
jle
pop
mov
ds
andb
cmp
cli
stos
mov
cmpsl
lahf
dec
rcrl
push
xchg
shlb
lock
lds
ss
test
mov
dec
inc
cmp
mov
jle
into
sbb
push
jo
adc
popa
lods
dec
stos
lahf
iret
or
out
pushf
in
loope
dec
sub
inc
jecxz
mov
mov
into
ja,pt
mov
jae
cmp
mov
aad
in
sub
dec
adc
xor
mov
in
adc
fcmovbe
in
sub
pop
cmc
mov
fs
cmp
cmp
inc
xchg
mov
aam
arpl
pop
mov
xor
xlat
pop
in
js
sub
and
sub
shlb
adc
jo
jg
sbb
ret
jo
cmpsl
jle
aas
cmpsb
xchg
addr16
cmc
mov
outsb
inc
xor
adcb
mov
jne
add
and
push
iret
add
pusha
cs
in
adcb
cld
ret
mov
add
clc
sbb
test
inc
inc
push
push
into
pop
dec
mov
cmc
pop
adc
cmp
out
or
popa
cli
xor
add
dec
fnstcw
push
or
sti
ror
stos
inc
or
push
movsl
lea
fistps
xor
js
mov
insl
testl
adc
sub
sbb
ret
jae,pn
dec
mov
xchg
cmp
into
jg
out
ja
repnz
dec
pushf
xor
pop
in
adc
pop
inc
sbb
sub
jnp
mov
sub
jo
push
test
rcll
arpl
push
push
mov
push
pop
push
inc
out
sbb
or
xchg
sbb
xchg
sarb
mov
cmp
call
lds
push
lods
outsl
mov
lock
test
hlt
lods
sarb
cld
cmp
in
int
into
cmp
movsl
mov
les
pop
stos
pop
sbb
pusha
mov
mov
mov
jmp
aam
inc
test
addr16
add
sub
mov
push
outsl
ja
icebp
out
bound
ret
and
dec
jnp
sub
add
mov
cmpsb
xchg
rol
dec
std
rorl
mov
jne
mov
dec
fwait
std
scas
mov
dec
sub
inc
aas
sbb
pop
push
dec
pop
insb
inc
insb
sbb
and
sti
and
mov
loopew
pop
mov
dec
nop
mov
loopne
cli
stos
add
xchg
fs
test
popa
and
sub
jecxz
sub
pusha
xchg
xor
lock
jecxz
dec
inc
lea
push
push
js
div
push
ret
fmuls
int
inc
sbb
adc
mov
or
add
cmp
pop
mov
adc
mov
sbb
mov
jns
sbb
cmpsl
lea
call
pop
ds
sti
pop
xchg
scas
leave
mov
dec
je
insl
mov
in
sbb
dec
mov
lock
jl
push
rcl
pop
adc
fnstcw
bound
mov
mov
cmp
rcr
and
aas
adc
cmpsl
in
mov
mov
inc
out
jmp
fisubs
ljmp
jecxz
aaa
or
lock
mov
or
out
mov
mov
dec
sbb
jg
jno
stos
mov
test
inc
inc
mov
test
or
lods
jp
insb
orb
adcl
cmp
std
dec
and
fwait
xchg
mov
push
and
sub
mov
jecxz
mov
das
cmp
je
dec
std
ficomps
xor
inc
aas
loop
mov
cmc
pushf
xor
aaa
mov
push
int3
cli
call
mov
das
repnz
jno
std
push
dec
pop
call
mov
sub
push
xchg
mov
xchg
push
cmpsb
pop
ss
cmp
nop
and
mov
mov
icebp
dec
xchg
mov
jbe
and
aas
fwait
push
loop
ljmp
out
lret
and
dec
jecxz
movsl
xchg
lcall
mov
mov
push
jbe
lret
and
add
andl
mov
sbb
mov
dec
or
mov
mov
mov
aaa
into
adcl
or
rcrl
ror
ret
scas
dec
test
push
int
mov
inc
sar
in
lret
sbb
mov
imul
adc
adc
xchg
cs
in
mov
push
inc
repz
or
ja
cli
rorb
or
xchg
js
cs
stos
mov
cmpb
aam
or
sub
fstpl
jne
loop
inc
cli
dec
int
jb
fmull
call
decb
jns
pushl
nop
enter
andb
jp
xor
mov
jp,pt
sub
inc
push
aad
sbb
or
fnsave
xchg
popf
fistpl
dec
loopne
adc
outsl
or
mov
aas
sub
mov
shl
sub
roll
sub
test
mov
das
xchg
sti
jnp
aam
fbstp
enter
divl
cmp
inc
mov
mov
sbbl
repz
xchg
lock
xchg
inc
sub
add
call
sbb
add
lcall
jp
lcall
dec
jb
arpl
adc
or
cmp
lcall
push
or
and
bound
xor
mov
in
sbb
jb,pt
xchg
inc
push
xor
jns
rol
cli
inc
in
fdivl
push
in
or
add
test
aad
enter
xor
lds
mov
test
mov
ret
mov
pop
in
push
mov
sub
leave
aam
pop
ja
gs
mov
cld
pusha
clc
mov
sub
sar
cmp
ds
dec
js
add
cmp
inc
aas
imull
mov
mov
lds
stc
and
scas
sbb
rcr
dec
cmp
inc
add
jb
sbb
inc
jns
jecxz
adc
mov
in
je
xor
push
push
push
mov
sub
sbb
sub
and
stos
or
sub
movsb
add
jg
or
xor
pop
lahf
in
xchg
imul
xor
adc
stos
sub
pop
out
mov
or
mov
push
mov
out
jle
sbb
xchg
push
lods
dec
mov
cmc
pop
and
lods
int
js
data16
cmp
inc
adc
popa
sbb
sub
xchg
rol
adc
xchg
loop
cmpsb
loop
cld
mov
das
ljmp
in
xchg
mov
loop
push
cwtl
pop
popa
mov
cmp
lcall
sub
sub
lcall
mov
pop
stos
in
nop
xchg
outsb
ds
insl
rcrb
jmp
xor
in
sbb
movb
sub
pop
fdivs
lea
mov
xchg
dec
jl
lahf
pop
xchg
out
mov
aaa
sbb
aaa
cmp
inc
jne
cltd
xchg
add
aaa
out
xchg
nop
mov
mov
mov
clc
sbbl
mov
mov
pop
ljmp
xor
test
pusha
fwait
test
inc
push
inc
mov
std
mov
daa
inc
adc
mov
inc
inc
adc
loope
xchg
syscall
sbb
xchg
sub
loopne
popa
push
mov
cli
xchg
push
mov
clc
shlb
lret
mov
lods
popa
imul
aaa
mov
sub
adc
mov
mov
sub
fldln2
xor
cli
jb
fwait
or
ret
jmp
mov
jl
in
pusha
sub
movsb
sub
cmc
mov
inc
xlat
das
adc
stc
addl
push
bound
push
iret
iret
push
jae
jo
xchg
add
jle
jno
movsl
add
xor
aas
push
or
adc
test
addl
and
mov
and
pusha
fsubrs
and
iret
outsb
sti
jae
jo
push
popf
cmpsl
mov
push
xchg
lret
scas
jge
cmp
sub
into
outsl
lcall
roll
sub
adc
sub
add
jle
dec
nop
out
cltd
pop
push
int3
dec
cmpsl
ds
mov
lea
ljmp
cmpsl
mov
xchg
sub
push
push
in
out
jl
mov
inc
mov
jle
pop
jmp
inc
adc
add
loopne
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
jmp
adc
cmp
ret
aam
mov
xor
dec
lock
ja
ja
push
mov
sahf
test
adc
pop
push
or
dec
test
jp
inc
loop
imul
or
ds
mov
fmull
lods
jae
and
fdivrl
sarl
jl
pop
stos
push
movsl
xchg
cmp
shll
das
cmp
fcomip
repz
jge
cmp
xor
xchg
daa
mov
lret
pop
sbb
xor
in
pop
das
shll
imul
push
lods
xor
xor
scas
push
stos
pop
mov
cli
scas
mov
enter
xor
mov
rcll
addr16
sar
mov
sub
in
ljmp
jl
stos
sub
cld
mov
jns,pn
and
cmpsl
es
pop
mov
push
pop
xchg
enter
cmpsb
out
xor
xchg
mov
fisubs
pop
mov
daa
addr16
push
push
pop
pusha
stc
imul
cmpsb
mov
data16
pop
out
xchg
fmuls
pop
loope
xchg
andl
mov
pop
fldenv
ret
jnp
mov
dec
cltd
sub
mov
shll
enter
lea
xchg
shll
mov
es
cmc
ja
adc
or
cwtl
or
push
iret
mov
rcrb
mov
adc
push
aam
jl
pop
es
push
xchg
insl
fnstenv
or
imul
arpl
add
mov
lock
cmp
mov
jb
ror
mov
cmpsb
lret
jne
pop
rorb
in
lds
loope
jl
xor
insb
sub
push
jno
insb
testb
rorl
xlat
jg
loop
js
adc
das
cmpsb
cmc
pushf
cmp
test
or
orb
mov
setp
in
xchg
jae
dec
leave
js
out
icebp
push
xchg
enter
or
mov
lea
xor
add
inc
sarb
popa
jecxz
nop
mov
add
and
imulb
jae
out
fcompl
dec
xchg
das
adc
clc
mov
cmpsb
ror
rcr
mov
pop
pusha
mov
jb
xor
insl
mov
aam
mov
inc
scas
mov
push
sub
jle
pop
in
mov
adc
data16
movsb
data16
iret
xchg
mov
mov
pop
mov
inc
data16
dec
sbb
data16
nop
movsl
mov
mov
rorb
call
subb
mov
int
push
jnp
rcll
cli
out
imul
cmp
mov
pop
push
mov
xchg
push
add
les
or
pop
mov
push
sub
and
push
pop
pop
repz
push
ljmp
lods
add
add
shrb
adc
mov
mov
mov
into
xor
jne
ja
push
mov
fs
pop
enter
adc
aaa
iret
sub
push
sub
or
sub
pop
lret
dec
shrb
sub
inc
xor
adc
adcl
mov
imul
mov
lea
jecxz
ficoml
mov
sbb
xchg
sahf
push
sub
mov
movsl
inc
and
sahf
dec
sbb
and
mov
sbb
mov
cmc
inc
sub
jns
faddp
les
add
iret
cmc
xchg
pusha
cmp
cmp
or
jg
xchg
testl
xabort
lds
insb
xor
and
rcll
jg
out
xor
add
leave
push
testb
lcall
not
adc
out
inc
mov
xchg
cmp
mov
sti
lcall
mov
loopne
popf
cmc
or
xor
jae
cmp
inc
imulb
dec
inc
inc
inc
add
and
test
gs
mov
ret
mov
fisubrl
xlat
flds
or
fwait
scas
stc
pop
mov
xchg
insb
stos
add
lcall
cltd
jecxz
sub
adc
xchg
iret
lds
sub
xlat
dec
cmp
xchg
mov
mov
push
gs
add
mov
add
mov
pop
addl
fwait
xchg
fadds
addr16
je
insb
jae
cmpb
rclb
pop
and
xchg
or
pop
mov
add
cmp
std
adc
pop
enter
push
out
push
gs
add
idivb
jle
fsubl
mov
pop
xor
mov
imul
cmp
push
les
xor
mov
popa
shrl
dec
dec
push
push
insl
push
lods
xor
xchg
push
pop
ss
xor
mov
out
jne
cmpsb
dec
jae
mov
enter
rclb
aam
mov
lret
fistps
add
jle
dec
andl
rcll
pop
ss
jbe
cld
jl
dec
jmp
mov
dec
fldenv
pop
outsl
aad
sbb
cli
insl
repnz
push
es
popf
ret
test
inc
mov
or
fs
lea
repnz
xchg
adc
add
xchg
in
mov
rcrl
imul
add
dec
cmpsb
sub
jecxz
mov
jg
or
push
daa
icebp
add
jl
add
mov
idivl
jb
pusha
repnz
pop
out
rorl
jno
outsb
pushf
sbb
mov
out
mov
leave
fs
sbb
cwtl
cmpsb
movsl
ss
add
sbb
sub
cmp
mov
pop
add
xor
cltd
negl
leave
loope
push
or
fsubr
mulb
jnp
cmpsb
xchg
or
jb
insb
out
insb
aaa
dec
jns
or
sub
rcr
insb
fwait
cmp
mov
jmp
scas
cmp
stos
jmp
adcb
cltd
clc
rclb
sub
pop
xor
dec
jae
pop
mov
enter
cltd
stos
inc
out
mov
add
xchg
das
mov
xchg
pusha
cmp
xchg
cmp
and
push
loop
add
pop
inc
int
adc
push
cmp
sub
inc
ds
jo
push
popa
push
mov
dec
das
mov
lods
in
dec
and
jb
fwait
mov
jb
out
push
push
dec
mov
testb
inc
mov
sbb
das
mov
cmp
aad
push
sbb
pop
and
fcoms
arpl
inc
incl
jo
imul
jp
mov
jo
iret
pusha
lret
mov
stos
dec
fdivs
arpl
stos
aas
aaa
jns
mov
addr16
aas
fistl
stos
xor
bound
popf
jbe
push
jmp
dec
jl
cmpsl
dec
outsb
add
lcall
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
jmp
sbb
and
shlb
push
add
stos
pop
jle
out
xor
mov
sbb
inc
sbb
xor
lds
dec
adc
inc
sbb
push
mov
lret
push
lret
int3
mov
rorl
add
jmp
lods
pop
cmp
les
pop
std
inc
rorb
xchg
icebp
inc
test
cmpsb
sahf
das
push
imul
orl
pop
sub
nop
sub
pop
mov
add
and
push
pop
jno
test
and
mov
xor
cmp
xchg
inc
adc
add
jns
dec
sahf
lea
adc
imul
sbb
jmp
cmp
jnp
push
pop
in
jne
dec
sbb
push
mov
addr16
sahf
xchg
into
dec
mov
pushf
or
and
repz
ret
fbstp
jmp
and
adc
insl
lock
inc
jmp
lods
push
mov
in
ret
xchg
mov
dec
daa
jae
iret
cmpsb
cmpsb
push
daa
sub
jmp
mov
mov
mov
jl
adc
ret
pop
xchg
nop
mov
push
cmp
xor
pop
aaa
jns
mov
dec
lods
aam
push
inc
dec
ja
and
in
and
sbb
push
aad
mov
pop
test
in
add
push
or
test
or
xor
mov
lret
bound
jmp
push
movsb
inc
xor
mov
mov
mov
icebp
mov
adc
mov
cs
pusha
xor
dec
dec
mov
das
clc
push
mov
mov
mov
mov
pusha
cmp
or
loopne
aas
mov
add
ja
xchg
add
mov
cli
icebp
aam
add
imul
enter
add
data16
mov
inc
jg
pop
adc
add
mov
sbb
js
inc
stos
sbb
push
push
cmp
and
nop
sti
scas
lcall
sbb
xor
jne
mov
loop
sbb
sbb
filds
xchg
push
cmp
xchg
and
aaa
repz
mov
pop
cmc
pop
or
sbb
jge
ja
mulb
hlt
mov
fimull
inc
insl
stos
sbb
mul
mov
fidivrl
fisubl
fldl
push
jl
adcb
ret
loop
add
dec
mov
adc
scas
xor
xor
pushf
add
sbb
in
or
int3
adc
lret
inc
popaw
int
dec
push
jns
or
xor
imul
fwait
inc
mov
rcll
loop
mov
shrl
xlat
movl
cmp
xchg
dec
xor
icebp
or
xchg
jbe
iret
jno
sbb
das
add
repnz
movsb
xor
xchg
cmpsb
sbb
add
fstpl
sub
adc
test
or
inc
cli
inc
cmp
sub
push
js
decl
enter
xor
mov
sub
dec
push
cld
sti
and
orb
scas
mov
lods
cmp
jmp
in
adc
fisubl
mov
call
and
shrl
test
nop
mov
mov
out
mov
arpl
fdivrs
push
mov
lea
xor
sub
mov
stos
popa
daa
es
mov
lds
adc
push
inc
ds
pushf
lds
inc
sbb
cld
idivb
ljmp
mov
jmp
das
in
incb
into
das
in
inc
ljmp
add
cs
inc
lret
mov
add
mov
xor
cwtl
push
cld
loopne
mov
fdivrp
add
mov
out
sub
mov
xchg
pop
mov
mov
mov
mov
dec
cmpb
int3
adc
sub
or
xor
stc
mov
cmpsb
sbb
andb
cmpsb
jecxz
aas
mov
add
mov
dec
fisubrs
addr16
inc
js
insb
mov
in
xchg
xchg
and
and
loopne
divb
outsl
adc
sub
fwait
and
push
roll
pop
sbb
and
push
mov
jmp
dec
into
sub
sub
cmp
ds
jno
ljmp
cltd
jne
lea
dec
xchg
add
and
mov
and
ljmp
rorl
testb
push
mov
mov
xor
pop
lds
dec
jl
adc
iret
mov
pop
inc
repz
aaa
repz
mov
sbb
lahf
pop
std
jmp
mov
loop
adc
cltd
lock
inc
push
sbbl
ficomps
cmp
cltd
add
inc
test
dec
push
or
pop
insb
mov
lods
inc
ljmp
iret
jp
cmp
lods
xchg
ret
push
subl
dec
jmp
adcl
sbb
sti
insb
pop
dec
mov
popf
jae
addr16
rol
in
inc
pop
hlt
jmp
rolb
ret
call
orl
popf
push
mov
lock
inc
cmp
cmp
mov
pusha
sbbl
out
loope
cli
jnp
mov
add
sub
jmp
repnz
sbbl
aad
add
test
sbb
loop
sbb
das
aaa
test
lret
loopne
push
pop
lret
loop
lea
fwait
pop
add
adc
push
sbb
les
cmpsl
test
jle
sbb
gs
insl
xchg
add
mov
call
mov
dec
cltd
or
cwtl
lock
pop
xor
add
hlt
out
jae
loope
cmp
bound
mov
add
das
gs
mov
daa
popa
push
jl
aam
xor
sbb
or
imul
push
mov
scas
push
sbb
jecxz
movsl
mov
mov
dec
je
jecxz
add
out
popa
psrld
imul
fimull
popa
ret
nop
mov
cmp
cld
shrl
lods
fldcw
push
jae
adc
inc
lods
mov
fbld
iret
shll
inc
inc
pop
sub
adc
out
xor
nop
int3
jmp
mov
xchg
into
add
testb
push
stos
outsl
push
dec
push
das
sti
mov
and
and
push
pop
shrl
hlt
aas
adc
in
xor
popa
xchg
scas
push
mov
push
out
xchg
cmp
adc
sub
pop
js
jb
xor
pop
fs
adc
cmp
push
mov
jl
push
fcmovnbe
jns
nop
adc
adc
fsubrs
mov
jnp
fadd
adc
push
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
jmp
sti
test
sbbl
stc
or
xchg
aas
ja
hlt
dec
mov
mov
sbb
je
push
stos
jbe
rsm
int3
pop
adc
popf
popl
clc
cld
add
push
daa
outsl
push
cmp
cmp
xor
lea
insl
jb
adc
sbb
in
sub
fisubl
inc
pop
sbb
loopne
mov
aad
xor
or
pop
movsb
sub
aad
out
jnp
pop
push
add
in
adc
dec
mov
xchg
flds
cmp
scas
mov
mov
xor
mov
mov
xchg
push
repnz
sub
jns
mov
sbb
mov
jle
mov
clc
jno
pop
lahf
stos
std
leave
sbb
and
pop
add
lods
lock
sbb
add
jo
or
orl
cmp
incl
out
gs
cs
push
push
shlb
add
sbb
inc
out
jecxz
shl
lea
pop
int
jne
pop
ficoml
adcl
xor
les
scas
push
push
xchg
add
adc
sbb
mov
insb
pop
push
xchg
mov
cmp
dec
xor
idivb
jnp
repnz
jmp
loop
dec
mov
mov
adc
and
and
jecxz
insb
fldenv
cmp
or
mov
jecxz
xchg
cmpsl
mov
xlat
sbb
out
icebp
sub
add
arpl
add
cmp
jp
inc
jg
push
adc
sbbl
adc
enter
adc
out
fwait
aas
aam
aas
cmp
repz
xchg
and
pop
sub
push
lods
insb
cwtl
xchg
inc
aad
pop
ds
pop
adc
imul
mov
insb
hlt
pop
cmp
ja
inc
inc
push
aas
insb
into
aam
imul
xchg
cmp
test
xchg
popa
cld
fstpl
push
and
and
test
das
popa
push
pop
cltd
sbb
inc
cmp
cld
and
inc
jl
imul
loopne
adc
inc
shlb
mov
mull
js
push
data16
cmp
jecxz
push
push
xor
movsb
shll
roll
ja
inc
mov
repz
sbb
push
cs
std
mov
andb
sahf
sub
out
or
fwait
cmc
out
xor
mov
outsl
test
ds
push
or
jmp
sbb
into
imul
stos
xor
gs
repnz
mov
add
and
icebp
add
inc
cld
inc
sbb
add
unpckhps
ja
push
sub
mov
inc
cmp
subb
pop
push
mov
imul
mov
idiv
push
pop
mov
repnz
test
lds
mov
lcall
aad
fnsave
xlat
ret
pop
xlat
jmp
notl
mov
or
push
shlb
mov
push
xor
lcall
mov
add
popf
xchg
mov
sbb
mov
cltd
inc
mov
dec
in
movsl
in
leave
fldenv
jle
and
xchg
xchg
pop
cmp
xor
sbb
shll
out
pusha
out
inc
jge
and
in
mov
data16
int3
jg
outsb
or
pop
mov
inc
push
jmp
test
fs
xor
push
lret
stos
pusha
fisubs
jmp
ja
adc
mov
int3
cmpsb
sarb
inc
mov
idivb
lods
lds
and
bound
mov
mov
xor
bnd
popf
lret
ret
jl
pop
pop
dec
xchg
roll
jno
mov
and
dec
loope
sub
mov
lds
jnp
lods
jp
xor
push
das
mov
jmp
sbb
mov
mov
test
or
out
cmp
call
mov
loopne
add
aam
dec
and
ss
push
shrb
scas
push
jecxz
insb
mov
enter
dec
sub
dec
leave
jns
decl
pushf
scas
add
mov
sbb
call
adc
nop
push
jo
push
fsts
cmp
add
fcmovbe
loope
or
dec
hlt
pop
aam
mov
pop
icebp
xchg
jb
sbb
adc
push
mov
mov
insb
xor
fmull
cmp
or
mov
sahf
push
sahf
and
cmp
mov
jb
add
cltd
mov
addr16
push
inc
push
fucom
xchg
xchg
call
inc
outsl
inc
frstor
fucomi
cmp
es
push
out
sub
sti
lcall
push
insl
add
testl
cmp
dec
stos
cltd
aad
lds
aad
insl
xchg
movsl
cli
jp
int
call
pushf
sub
sbb
inc
mov
fldcw
mov
lahf
shrb
cmp
popa
add
hlt
push
cmp
xor
sahf
cmpb
in
mov
or
aam
fnsave
in
cmp
dec
add
leave
cmp
data16
mov
inc
xlat
add
iret
dec
add
inc
jne
ffree
pusha
push
mov
dec
sti
lcall
ret
push
add
sub
lock
pop
enter
fistpl
clc
add
or
jge
insb
lock
in
arpl
loop
cmp
jl
xor
mov
cmpsl
adc
sbb
cmpsl
inc
cld
jb
daa
ret
sub
pushf
push
movsb
xor
insl
or
call
fiaddl
dec
cmc
xchg
pop
movsb
decl
cli
insb
ficomps
pop
cmp
adc
or
push
rcrl
out
insl
pop
mov
pop
push
cmp
outsl
aaa
lock
push
mov
push
ss
mov
sbb
loop
lods
pop
xor
pop
push
test
rep
add
bound
push
inc
mov
mov
push
dec
out
xchg
inc
jle
js
das
sbb
cld
das
incl
cmp
jno
sub
jg
loopne
xchg
mov
sbb
jg
mov
xor
lods
cs
fiaddl
inc
fwait
test
xchg
pop
scas
inc
subb
dec
jle
pop
xchg
add
or
cmpsl
jno
xor
je
js
sub
das
mov
popa
out
gs
sti
add
fldl
pop
jo
xor
pop
cld
jne
outsl
push
and
into
pop
scas
adc
jecxz
loope
jnp
es
push
and
lahf
les
cmpsb
adc
hlt
cs
mov
jb
aas
mov
xchg
int3
jmp
mov
insb
fstl
cwtl
repz
sub
sbb
rcr
es
mov
xor
aaa
lods
gs
shlb
xor
fdivrs
repz
sbb
subb
mov
fidivrl
faddl
adc
iret
inc
push
mov
mov
ficoml
push
dec
stos
jecxz
js
add
cwtl
dec
jp
inc
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
jmp
nop
loope
pop
dec
gs
int
xlat
sub
add
xchg
addr16
imul
push
into
loope
shrl
mov
testl
jmp
fcoms
or
push
popf
push
clc
scas
push
sbb
aas
call
sbbb
push
rcrb
mov
aam
pop
push
sbb
add
pop
xor
xor
dec
or
cmpsl
jb
sbb
lock
loope
mov
mov
or
mov
xchg
dec
lret
mov
jbe
push
adc
push
test
mov
subb
mov
or
nop
rcrl
dec
pop
xchg
xor
sarb
cmp
jg
dec
fcmovbe
adc
mov
call
movsl
ret
inc
loope
xor
cmc
mov
orb
cmpsb
xchg
fiaddl
jo
jae
jne
adc
and
and
mov
mov
or
loope
add
mov
inc
hlt
mov
mov
test
sub
push
sub
dec
or
jne
mov
sbb
inc
sahf
dec
cwtl
sub
inc
lock
ljmp
cmpsb
pop
loopne
pop
jmp
push
dec
sbbb
pop
fildl
adc
add
into
pop
dec
into
sub
and
mov
adc
jno
out
push
dec
fldcw
mov
cmc
mov
cltd
push
out
mov
jl
test
ret
xor
or
jmp
mov
lds
mov
dec
cmpsl
jecxz
rcl
call
mov
inc
xchg
cld
cmpsl
ds
data16
xor
inc
jecxz
outsb
jmp
pop
push
xchg
js
xchg
stc
mov
pop
out
out
test
insb
push
or
lds
jl
mov
mov
push
mov
or
or
enter
movlps
test
pop
cmpsl
xchg
or
in
add
xchg
pop
pusha
add
stos
mov
mov
jmp
push
faddl
xchg
shll
mov
in
icebp
mov
iret
jecxz
pop
dec
or
lret
push
scas
lea
sbb
push
push
aas
cmp
sbb
and
adcl
into
lods
bound
pop
insb
mulb
inc
leave
push
loop
repz
sbb
jno
inc
lret
and
mov
jge
dec
lahf
mov
aad
pop
mov
or
movsl
pop
adc
stos
pop
jl
and
fldenv
sub
mov
pop
test
ja
mov
dec
ret
cli
mov
inc
adc
cld
out
push
cli
mov
and
pop
aas
dec
popf
dec
mov
xacquire
loope
sbb
inc
outsb
fldcw
pop
lret
fcmove
jl
in
aas
push
mov
pop
jecxz
fildll
fidivrl
mov
pop
mov
mov
stos
ret
rcr
jne
mov
jl
fbstp
lea
out
lret
push
jb
or
jnp
adc
adc
pop
sbb
jp
mov
popf
fcomi
nop
mov
in
dec
inc
mov
xchg
scas
ja
xor
add
lods
or
xchg
shl
das
out
stc
cmp
aam
push
fisttpl
aad
sti
add
js
cwtl
pop
jno
outsb
out
push
lcall
stos
pop
jo
out
rcl
movsb
mov
pop
mov
test
movsb
cmpsl
dec
loop
in
lock
sub
or
adc
aaa
adc
cwtl
scas
pusha
push
outsb
rorl
pop
inc
aam
adc
adc
repnz
mov
icebp
adc
jb
nop
sahf
int
pop
hlt
or
es
ret
add
mov
inc
inc
aam
fs
lcall
mov
xchg
fisttpl
ja
cwtl
inc
push
adc
adc
jg
push
test
shrl
rorl
jo
mov
aam
cmp
cmp
cltd
sahf
cmp
outsl
dec
loop
imull
fidivl
ljmp
cmp
cmp
popa
shl
sti
cmp
divb
push
dec
mov
sbb
subl
hlt
xchg
outsl
push
mov
ljmp
mov
dec
adc
ret
outsl
fisttps
lahf
jle
adc
add
mov
adc
push
push
and
push
cmp
js
mov
cmp
inc
fsts
sbb
mov
adcl
lahf
cltd
sbb
dec
popl
lods
cmp
or
ret
push
jl
or
inc
dec
sub
mov
out
push
xchg
xor
das
std
sahf
rolb
add
orb
adcl
iret
xchg
subl
outsl
shl
test
lahf
test
lds
into
insb
ret
cld
add
cmp
dec
outsb
lock
int
cmp
mov
std
dec
mov
inc
xchg
insb
daa
jle
mov
outsb
mov
cs
jle
cmp
movsb
dec
addl
mov
push
mov
sub
sub
lods
insl
das
cmc
cmpsl
imul
lret
imulb
es
cmp
js
popa
push
test
jecxz
loop
adc
mov
mov
pop
and
mov
cmpsb
or
mov
test
jp
sahf
je
cmp
mov
roll
or
jmp
stc
je
repz
add
or
xor
dec
lods
lea
repnz
push
lea
mov
mov
cwtl
pop
mov
xchg
sarb
pop
lock
cmc
test
cmp
decl
mov
ss
repnz
xor
scas
xchg
xor
pushf
cmpsl
outsl
fs
cmp
mov
xor
mov
mov
loope
sub
enter
jbe
fcoml
test
daa
popf
adc
adc
add
jns
dec
lahf
add
xorl
sbb
sbb
insl
shrb
aad
pop
mov
fisubrs
hlt
pop
inc
or
jb
cld
xchg
sti
jns
repz
fnsave
out
lods
cmpb
enter
popa
jle
stos
nop
rep
jmp
bound
sub
lods
pop
jp
mov
or
xor
xlat
sahf
in
mov
cmc
lea
xlat
or
sbb
inc
jge
stos
out
out
jns
mov
cmp
add
lcall
paddusw
inc
inc
cli
push
dec
or
loope
or
test
jmp
xor
pop
mov
out
in
mov
push
cwtl
and
mov
xlat
test
add
or
pushf
int
cmp
or
and
jnp
test
stc
dec
cwtl
push
lock
dec
push
cmp
push
aaa
stc
add
test
pop
push
fldl
jmp
dec
and
pop
xor
push
adc
xlat
out
inc
cmc
mov
notb
movsb
aad
rolb
mov
pop
dec
cmp
sti
outsl
mov
jns
dec
adc
test
ljmp
add
inc
adc
ljmp
or
mov
mov
mov
jmp
dec
loope
lret
sbb
or
mov
adc
jg
popa
xor
dec
shr
std
sbbb
adc
add
mov
rorl
in
ret
into
popf
cmp
push
repnz
push
mov
mov
push
jbe
sub
movsb
scas
call
dec
mov
jge
jecxz
inc
push
push
dec
inc
ds
push
ffreep
test
nop
ss
fiadds
xor
pop
sbb
fdivr
xchg
testb
ret
rcll
hlt
pop
sbb
pop
push
mov
xor
jge
mov
push
jno
rcrb
and
dec
je
adc
mov
in
leave
add
or
mov
arpl
jge
mov
mov
push
mov
adc
push
test
out
add
or
xor
pop
int
int
add
mov
sub
aas
pop
popa
pushf
daa
cs
fcompl
sub
push
insl
and
les
fs
aad
mov
dec
shlb
iret
dec
adc
lea
das
in
subb
cmpsb
pushf
imul
adc
jmp
cmp
fdivl
add
jle
mov
stos
dec
mov
arpl
or
sarb
mov
jbe
sub
aad
xor
popf
stc
or
pop
inc
adc
mov
mov
dec
hlt
sub
scas
and
cld
cwtl
xor
mov
lea
fmuls
fiadds
fidivrl
add
jecxz
and
subl
dec
push
adc
jecxz
insb
jno
and
lds
hlt
mov
xchg
cltd
popf
inc
mov
lods
cmp
cmpsb
cltd
xchg
js
call
stc
inc
outsb
push
cwtl
jne
pop
lret
jmp
test
ljmp
jo
or
sahf
jno
push
mov
mov
push
je
inc
in
jge
xchg
sbb
ljmp
loop
push
xor
loop
pusha
cmp
inc
mov
ja
add
pushf
xchg
stos
push
fs
fucom
stos
push
xchg
xchg
add
mov
and
sbbb
xchg
xor
cmp
fdivp
xchg
xorb
cmp
inc
into
lret
xor
xlat
cmpsl
jnp
leave
adc
jg
or
dec
inc
lahf
lods
xchg
hlt
and
leave
faddl
popa
rorl
push
push
inc
xchg
ret
ja
dec
dec
mov
mov
int
cwtl
xor
mov
dec
call
lods
ds
sbb
inc
and
in
aad
push
es
mov
enter
push
movsb
jnp
sbb
daa
cltd
dec
mov
insl
xorl
aas
pushf
cltd
xchg
sub
lock
cmp
mov
xchg
sub
call
out
mov
ss
dec
pop
xchg
clc
call
repz
sbb
imul
pop
enter
rorl
insl
pop
mov
cmpsb
lea
dec
mov
mov
xor
pop
les
add
stos
pop
mov
mov
pop
ss
cld
sbb
dec
stc
push
std
or
imul
mov
es
sub
dec
inc
mov
inc
mov
add
notb
out
jnp
push
sub
cltd
cld
dec
mov
aas
cmp
push
jne
push
sahf
xor
out
andb
ss
out
and
mov
jmp
jno
das
dec
out
subl
cs
mov
ss
insl
mov
or
or
out
xchg
inc
loopne
cmc
and
ja
cmpsl
out
stos
mov
les
out
nop
ret
popf
imul
mov
out
test
push
ja
sbb
push
ret
sub
out
out
pushf
xchg
xchg
push
cmpb
mov
xlat
mov
mov
popf
sub
cwtl
fwait
test
xchg
jl
data16
push
in
loope
dec
inc
pop
js
mov
adc
icebp
xor
aam
push
int3
pop
push
and
in
ja
dec
or
push
mov
lcall
jg
inc
mov
dec
movsl
mov
cmpsb
xor
test
addb
xlat
mov
sbb
jnp
mov
inc
or
sbb
mov
das
pop
repnz
pop
repnz
xchg
xchg
mov
ret
mov
lds
mov
cmp
push
faddl
inc
faddl
sbb
jno
mov
loop
inc
jns
fwait
movb
push
xchg
jb
stos
sub
pop
ds
fs
cmpsb
shl
push
xor
loop
mov
in
cmp
inc
sub
mov
imul
push
clc
dec
sub
mov
mov
or
xlat
aaa
mov
stc
xlat
fdivrp
xor
dec
pop
lret
adc
cmp
arpl
jecxz
push
ja
cmp
fstps
movsl
push
push
pushf
popf
dec
mov
aad
rdpmc
scas
ss
inc
sarl
in
into
test
or
xlat
shrb
mov
adc
push
decb
enter
xchg
mov
aad
add
in
xchg
dec
cmp
jb
adc
outsl
test
push
fsubs
xchg
adc
hlt
mov
sarl
loop
mov
xchg
push
xor
push
adc
lret
push
ret
stos
adc
faddl
shlb
cmpsl
mov
mov
inc
nop
nop
leave
lcall
ljmp
ret
lods
fcompl
orl
pop
mov
es
insl
loope
jmp
jns
sub
je
inc
push
lea
inc
inc
cwtl
push
pop
adc
dec
pusha
xor
das
scas
popf
and
inc
cld
xor
fildll
or
xor
icebp
dec
push
das
fbstp
nop
mov
mov
adc
imul
dec
pusha
cmp
cmp
sub
jecxz
pop
sahf
pop
adc
nop
mov
xorl
cmp
add
test
inc
dec
movsb
add
jno
push
in
or
dec
mov
jl
adc
jno
nop
cmp
jno
arpl
mov
out
mov
inc
xchg
push
jl
icebp
sub
xchg
mov
mov
push
or
fs
cmp
std
out
push
xchg
xor
mov
and
jge
push
dec
and
rcrl
xchg
inc
jb
movsb
and
nop
js
push
insb
addr16
mov
test
fdivp
sbb
jb
lock
jae
jl
push
sbb
adcl
js
sub
cli
sbb
mov
jne
or
outsb
add
sub
dec
popf
mov
cld
mov
mov
std
and
lcall
cmp
push
or
sbb
cmp
aaa
adc
push
leave
outsl
leave
flds
inc
cwtl
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
jmp
cltd
push
in
sub
jno
gs
xchg
add
pop
xchg
les
push
mov
fsubr
int
aaa
sub
fsubl
sbb
int
rcrb
int
clc
sub
adc
in
cmpl
fldenv
jo
mov
mov
ds
or
pop
inc
ss
sub
sti
lahf
repz
mov
push
adcl
popf
in
xchg
ljmp
mov
xor
adc
lret
mov
mov
or
dec
mov
xchg
ror
outsl
das
pop
stos
pop
hlt
aad
pusha
pop
mov
push
and
mov
mov
jmp
insb
cmp
sbbl
mov
jb
sar
in
pushl
test
andb
pop
mov
lcall
clc
scas
into
or
dec
rclb
stos
in
mov
push
xor
out
xchg
lock
lock
fnstsw
or
or
cs
mov
sub
divl
xor
cltd
xchg
add
loope
xchg
inc
cmp
sub
fucomp
mov
mov
mov
push
lds
scas
lods
ds
ret
mov
data16
inc
lcall
stc
mov
pop
jmp
or
adcb
scas
insb
pop
lea
sub
fstpl
lods
enter
push
mov
mov
mov
adc
and
jp
add
adc
xor
outsb
cmc
mov
pop
ss
jnp
sbb
lret
add
sbb
into
rclb
sub
or
xor
aas
bnd
push
adc
push
outsl
and
cwtl
insl
adc
int
dec
mov
pop
lret
mov
mov
enter
add
fistl
xor
xchg
sbb
repz
sbb
call
scas
lret
push
dec
push
in
out
add
mov
dec
rclb
or
ret
pop
mov
test
rcrb
test
into
and
mov
mov
out
movsl
mov
or
fs
imul
add
fldt
lret
sbb
pop
xor
filds
adc
push
cli
movb
ret
mov
mov
sub
data16
pop
cld
inc
jnp
mov
and
add
insb
sub
mov
xor
sub
lods
adc
aam
adc
jmp
xor
sbb
call
orb
scas
add
bound
lret
adcl
mov
lahf
adc
clc
sbb
and
movsl
test
pop
cwtl
negl
mov
lret
sahf
jecxz
sti
or
std
mov
pushf
pop
push
btsl
mov
sbb
testb
push
xchg
or
push
and
in
stc
xchg
jmp
mov
movsl
ss
inc
clc
negl
lret
int3
nop
repnz
pop
pop
push
div
sti
test
adc
xchg
jl
add
fisttps
insl
pop
or
jmp
xor
add
jg
lds
sbb
jl
jge
adc
or
imul
sub
push
insl
or
mov
pushf
pop
jnp
pop
enter
or
xor
dec
fcmovnu
icebp
fsubrl
movsl
imul
popf
mov
repz
cmc
mov
cmp
mov
popa
inc
shlb
test
xchg
inc
popa
dec
insb
lods
popf
xor
test
cmp
push
popf
mov
sub
sbb
push
invd
dec
mov
lock
std
mov
and
ror
aaa
jb
sub
aaa
ret
cmp
or
xchg
fisubrl
ret
aad
mov
into
jle
xchg
insb
cmp
les
xor
cmp
pop
or
mov
movsl
mov
fwait
aam
fidivl
cmpsb
xor
jns
cmc
mov
push
andl
xchg
or
and
out
and
mov
repz
dec
mov
je
leave
adc
into
aam
jb
mov
xchg
xchg
fisttpl
push
in
sbb
insb
adc
popf
jo
dec
ret
fistps
aaa
roll
jae
ss
xor
jns
into
inc
movsl
ljmp
mov
sbb
add
cmp
mov
leave
pop
mov
mov
mov
and
sub
bound
test
mov
xchg
jecxz
inc
mov
fsubl
pop
and
imul
push
mov
pop
shl
jl
rcrb
dec
bnd
sti
xor
push
xchg
adc
aaa
cltd
dec
fstl
xchg
sbbl
outsl
sbb
in
sub
inc
insb
out
popl
cmp
mov
jg
dec
dec
fstpt
lods
xor
mov
mov
sbb
sbb
ja
xor
sbb
push
test
pop
push
push
fsubrp
mov
jl
imul
out
mov
out
dec
into
cmp
sbb
shl
jnp
clc
movsb
jp
mov
and
icebp
inc
adc
popf
push
jg
dec
push
lods
dec
sbb
pop
cmpsb
xor
add
xchg
mov
pop
rcrb
mov
sub
xor
adc
scas
notb
dec
inc
or
push
imul
pusha
mov
out
into
xor
adcb
scas
jecxz
ja
out
adc
mov
jne
sub
dec
fistl
stos
push
imul
cld
repnz
in
mov
arpl
xchg
in
cmc
adc
mov
cs
imul
out
mov
and
mov
lds
mov
jl
mov
xchg
arpl
add
aas
outsb
xchg
les
lods
ret
std
or
jecxz
sbb
std
lcall
cmc
mulb
cs
mov
mov
hlt
data16
adc
arpl
xchg
adc
sti
mov
leave
add
cmp
or
arpl
and
fwait
mov
sub
movsb
insl
mul
ret
mov
and
fdivs
jle
inc
repnz
mov
cmp
add
imul
imul
adc
push
arpl
lret
fdivl
adc
jns
test
das
iret
sub
popf
mov
add
mov
sub
jno
sbb
xor
jno
push
add
jl
or
xchg
fbld
nop
loop
xor
sbb
and
int3
loop
inc
cmp
pop
fcmovu
movsl
popa
repz
push
loopne
mov
into
sti
pop
scas
sbb
mov
cmp
ret
fwait
outsb
mov
mulb
loopne
fxch
adc
xchg
js
pop
daa
inc
fcmovnu
mov
icebp
sub
xlat
sbb
sub
int
cli
lds
addr16
outsl
loop
inc
dec
pop
pop
mov
out
test
adc
xchg
loopne
call
out
and
popa
cmp
popa
insb
sub
mov
xchg
jbe
in
ds
js
repz
adc
and
adc
sbb
bound
mov
jg
pop
test
xchg
mov
add
add
popa
xchg
mov
adc
inc
adc
test
ret
or
test
push
mov
mov
mov
jmp
push
mov
adc
xchg
sbb
pop
add
ja
mov
push
loopne
and
leave
mov
arpl
pop
xchg
movsb
xchg
repz
push
pop
pop
arpl
mov
in
xorb
inc
stos
push
adc
pop
pop
nop
lret
mov
add
lds
inc
lods
sub
popa
sbb
aam
cwtl
and
addr16
sahf
lahf
dec
testl
test
xor
in
addr16
es
mov
cmpsb
inc
rclb
xchg
push
push
dec
subb
jecxz
pop
sbb
insb
lret
push
sub
inc
mov
sub
outsb
icebp
push
in
into
push
dec
dec
test
cmpsl
add
xor
jl
cmpsb
aam
mov
xchg
sub
xchg
dec
and
fsubrs
sub
cltd
out
sub
xor
sub
xor
and
outsb
jae
pushf
sbb
out
inc
out
push
enter
lahf
mov
lcall
pop
mov
lret
jno
std
cli
inc
xchg
jo
add
or
and
and
shl
aas
xor
fsubs
les
lret
icebp
push
cwtl
addr16
adc
inc
and
jno
xlat
sub
aas
clc
popa
lods
sub
ss
adcb
mov
sbb
in
orl
mov
int
mov
sbb
adc
cmp
out
das
ljmp
xchg
aad
mov
and
in
jle
clc
std
push
push
dec
mov
lods
cwtl
stos
stos
mov
fmull
mov
cltd
ficoml
xor
loop
push
hlt
sub
mov
js
or
outsl
movsb
adcb
enter
shl
cld
cmp
jne
dec
cld
mull
xchg
jle
mov
mov
stos
cs
mov
cmpsl
add
adc
mov
out
mov
pop
inc
xor
push
es
sbb
push
add
es
jg
pop
mov
cmp
inc
jo
sub
push
sub
test
adc
inc
mov
insb
jae
mov
imul
mov
pusha
mov
cmc
push
push
es
push
cmpl
addr16
xchg
das
cld
out
push
fs
add
test
sub
or
insl
out
push
adc
insl
loope
jmp
pop
xlat
int
cmp
ja
mov
lds
dec
in
imul
clc
mov
adc
sbb
push
ret
inc
test
incb
inc
pushf
enter
cmp
pushf
popf
lret
sti
sbb
pop
outsl
in
mov
jb
xchg
mov
jnp
outsl
cmp
lcall
loop
adc
in
inc
jae
fwait
insl
out
jmp
dec
cmp
icebp
and
mov
push
sbb
es
jmp
jae
and
pop
jg
aam
jecxz
cmp
sti
inc
scas
lock
adc
xorl
add
insl
lahf
in
movsb
rolb
gs
repnz
inc
xor
push
push
das
ret
test
in
int
inc
jnp
xchg
adc
mov
and
mov
lods
inc
scas
pop
push
cmpb
mov
adc
jns
xor
das
out
shll
mov
das
stos
dec
addb
ds
jns
mov
lret
jl
sbb
jns
cld
inc
lret
leave
push
mov
mov
cmp
scas
dec
mov
addl
push
es
in
int3
or
add
imul
data16
xor
pop
out
push
adc
ja
push
sub
adc
inc
xchg
add
cmpsb
sbb
ja
and
cmp
inc
in
sub
xchg
cmp
pop
push
outsl
insl
cli
lods
sti
jl
iret
lea
incl
pop
lock
or
pusha
sub
ljmp
xor
sub
icebp
jl
fmull
sbb
cmp
jg
out
rcrb
mov
bound
push
xor
pushf
les
inc
cmp
sti
sub
pop
xor
mov
pop
into
gs
icebp
sbb
iret
adc
adc
rcrl
sub
push
popf
sub
cmp
aas
icebp
into
mov
xchg
add
test
push
mov
pop
inc
sbb
adc
xor
mov
loopne
add
inc
fcmovne
in
jmp
sbb
or
mov
dec
dec
cmp
jge
push
fdivs
and
int3
adc
push
jo
roll
sub
xchg
jae
push
mov
and
ljmp
testb
imulb
inc
and
in
out
inc
addl
xchg
pop
and
fcompl
or
fimuls
leave
push
cmpsb
cwtl
pop
lods
mov
add
popa
adc
add
or
dec
jne
stc
sbb
fldz
jo
scas
jb
data16
je
push
stos
fldenv
xor
xor
rcll
mov
clc
push
xchg
shl
add
mov
das
mov
movsb
shrb
add
leave
jb
iret
mov
mov
mov
pop
add
jbe
jle
icebp
add
xchg
clc
ficoml
pop
loopne
pop
fneni(8087
sub
jle
push
mov
pop
sbb
lock
dec
xor
cmpsl
sbb
add
and
jo
sub
cmp
int
bound
mov
cmc
cmp
add
lds
repnz
jb
pop
lock
mov
in
arpl
push
orb
cs
aad
mov
aad
test
xorl
pop
fisttpl
or
in
xchg
loop
int
pop
dec
push
push
jge
mov
or
sub
pushf
inc
sbb
cmp
test
adc
lret
adc
sub
inc
mov
pop
fdivl
pop
sti
inc
pop
insl
aas
sub
xchg
and
lcall
outsl
insl
xor
mov
or
sahf
mov
and
lods
jbe
pop
push
cmp
pop
or
nop
sbb
dec
inc
enter
inc
xchg
int3
dec
popa
push
not
cld
push
cmp
test
mov
adc
xchg
sub
loopne
sbb
nop
cld
sub
jg
jb
lods
loopne
mov
push
adc
inc
push
ds
jecxz
rclb
jbe
mov
into
sbbl
mov
push
jl
pop
pop
push
jmp
jecxz
jno
adc
scas
and
mov
cwtl
jnp
xchg
mov
inc
nop
shrb
dec
and
cmp
icebp
loope
add
pop
and
dec
mov
lods
bound
jg
loope
push
cld
sub
pop
mov
stc
in
pop
mov
pusha
insb
or
pop
addr16
cmp
mov
test
test
stos
mov
lret
hlt
sub
out
add
jp
inc
push
pop
xor
push
and
bound
or
jnp
inc
ror
xchg
push
loopne
jnp
fadds
add
cmp
adc
mov
test
xchg
repz
xchg
out
pop
dec
mov
and
or
cld
mov
ja
icebp
jnp
sarb
mov
dec
fdivs
das
imul
cltd
roll
sub
hlt
es
testb
pop
mulb
fsubs
and
xchg
or
sub
testb
jbe
inc
jnp
ja
adc
pop
jecxz
fwait
inc
ficompl
std
stc
sbb
xchg
pop
inc
lock
scas
test
sahf
imul
pop
int3
xchg
sbb
or
ret
and
insb
or
lahf
fnstcw
movsl
jns
jecxz
pop
cmpsl
outsl
mov
dec
mov
lods
cmp
mov
pop
repnz
addl
or
adcb
push
xor
xor
mov
inc
out
pop
lock
jae
xchg
fs
xor
shlb
bound
sahf
add
shrl
pop
cli
adc
pop
in
add
enter
cmp
loopne
jmp
mov
lock
cmp
cmc
pop
inc
fdivp
sbb
ja
add
cmc
pop
sti
cmp
vpmadcsswd
mul
jae
test
out
lods
push
push
jecxz
addr16
call
pop
std
data16
add
imul
jge
cltd
fidivs
loope
pop
insl
stos
sub
sbb
jmp
xlat
clc
call
sub
xor
dec
xchg
clc
lret
push
roll
in
mov
jbe
imul
fisttpl
pop
mov
stc
mov
inc
add
dec
inc
leave
mov
fidivrs
cmp
popa
test
or
movb
iret
sbb
inc
sub
jae
push
daa
add
jle
jl
pusha
and
pop
shrl
mov
mov
mov
cmc
je
or
ds
int
and
jno,pt
mov
dec
sub
in
movsb
mov
dec
mov
sarb
mov
loop
jl
xchg
ljmpw
test
push
cmp
jo
ja
pop
dec
mov
sets
jb
and
movsb
cmp
imul
sbb
lods
inc
add
push
dec
inc
pop
rcrb
mov
sbb
xchg
jo
stos
cli
inc
mov
mov
sub
ja
or
or
insl
push
shlb
add
mov
stc
bswap
sti
outsb
or
scas
xchg
pop
je
ret
xchg
in
dec
ja
aad
and
xchg
das
mov
dec
in
mov
fwait
add
out
jns
mov
outsb
ror
icebp
popf
cmp
es
adc
cs
sub
div
jp
cmc
cmp
mov
inc
pop
lock
jle
or
xchg
aad
adc
sub
sbb
xchg
stos
inc
ja
movsb
mov
shrl
xlat
ljmp
pop
sahf
push
imul
pop
imul
in
jno
xchg
push
je
push
clc
fisubrl
aad
das
or
sub
sub
sbb
xor
mov
shll
mov
repz
dec
cmp
ljmp
sub
pop
repz
sbb
pslld
lds
xchg
xor
mov
push
push
xchg
pop
fmulp
je
push
fcmovnbe
add
fwait
inc
stc
dec
push
cli
out
out
pop
shr
scas
mov
aad
mov
mov
jl
add
fcompl
pop
gs
scas
add
xor
add
push
cmp
test
stc
dec
jnp
insb
jnp
daa
xchg
jno
push
cld
lds
test
movsl
shlb
mov
leave
orl
aam
jg
sbb
lods
ljmp
or
push
mov
jge
inc
xor
out
les
loopne
outsb
or
or
mov
fwait
sub
push
push
out
or
test
push
push
jge
fst
sub
fidivl
xlat
fildll
inc
cmpb
fsubl
stos
fwait
movsl
mov
mov
iret
shll
add
cmp
fcoml
clc
push
popa
inc
test
dec
jl
mov
pop
xchg
or
ljmp
lods
je
sbb
jns
daa
xchg
test
inc
aaa
mov
out
scas
imul
out
adc
and
leave
sub
cmp
fwait
mov
or
aas
inc
out
push
xor
mov
mov
sub
dec
out
mov
xor
mov
imul
jnp
imul
mov
incb
dec
mov
mov
aad
fisttps
popa
mov
in
insl
jge
pop
int
cmp
mov
sub
in
pop
inc
adc
mov
adcb
sti
and
jae
cmp
sub
jae
stc
mov
inc
movaps
mov
push
aaa
ds
push
lds
mov
xor
or
jge
push
shr
mov
or
mov
xchg
mov
test
xor
inc
je
jmp
lods
inc
push
fcomps
mov
push
pop
mov
adc
and
or
inc
lret
jp
or
mov
inc
jno
inc
es
mov
fsubl
in
pop
pusha
sbb
mov
insl
or
int
fwait
out
std
cmp
push
scas
cmp
out
outsl
aad
hlt
lahf
xor
push
pop
icebp
xchg
dec
cmp
pusha
mov
push
add
aad
lret
adc
pop
arpl
inc
out
data16
pop
jecxz
mov
cld
ret
hlt
sbb
pand
out
xchg
les
flds
mov
adc
xchg
adc
add
mov
movsb
or
into
sarb
aam
inc
pop
aam
jbe
sahf
outsb
jno
or
fld
pop
mov
lea
mov
fldenv
insb
xor
mov
sub
mov
icebp
sbb
xor
aas
cmpb
scas
push
mov
je
push
xor
stos
stos
lcall
mov
gs
mov
mov
dec
xor
add
out
lods
and
stos
xor
roll
add
and
scas
bound
gs
jnp
mov
mov
je
popf
scas
adc
cmpb
and
xchg
js
shll
mov
add
mov
iret
int3
pop
inc
or
xor
rcl
mov
inc
pop
sbb
xor
add
inc
xor
jns
sarb
sbb
adc
push
push
push
stos
sub
adc
mov
sahf
into
add
cld
mov
or
cmp
shlb
lahf
pushf
ret
out
sub
push
fstpl
aas
lea
cmpsl
fstp
out
cmpsl
sbb
mov
dec
in
jp
mov
dec
mov
dec
notb
je
mov
out
mov
rcll
decl
adc
cmp
jle
inc
cmc
stos
cmp
mov
dec
mov
icebp
sub
inc
adc
add
inc
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
jmp
cmpsl
icebp
cmp
pop
dec
arpl
xor
adc
xchg
mov
loope
out
std
lds
lds
mov
aaa
and
lds
mov
cltd
or
add
mov
hlt
int3
mov
xor
arpl
lds
gs
xor
jg
pop
int3
mov
sub
mov
xchg
sbb
or
gs
mov
mov
fnstsw
faddp
adc
shrl
adc
add
mov
jns
inc
lds
arpl
rorb
xchg
jb
inc
push
xor
push
in
xor
dec
or
cmp
fnsave
inc
arpl
push
dec
insl
jmp
pop
ss
outsb
bound
pop
inc
pop
dec
mov
sbb
pop
scas
and
shr
push
sbb
data16
jmp
dec
outsl
out
cltd
sub
mov
cmpsb
pop
mov
repnz
popf
xchg
imul
inc
or
push
loopne
xchg
sub
cmc
fwait
sub
and
adcb
mov
adc
fimull
je
sahf
mov
xlat
lcall
insl
and
lea
jbe
jmp
jno
xchg
xchg
repz
sub
outsb
dec
lods
lcall
push
test
outsb
fwait
pushf
push
inc
imul
pop
leave
jg
enter
cmp
and
adcl
fs
test
cmp
fldcw
jp
sahf
mov
cmp
fdivrs
outsl
lret
push
push
cld
fwait
cmp
jl
hlt
mov
decl
push
and
std
out
xchg
outsl
hlt
mov
push
inc
jmp
bswap
mov
fmuls
push
pop
testb
aas
or
pop
cltd
cmpsb
xchg
pusha
sub
cmp
mov
pop
ficompl
and
xchg
dec
push
dec
xchg
dec
push
and
pop
loopne
mov
imul
inc
or
mov
in
aad
test
stos
pusha
fadds
mov
adc
hlt
insb
xlat
jb
mov
cmp
sbb
call
scas
xor
fistl
cmpsb
add
dec
mov
mov
stos
iret
and
jp
sbb
ret
jns
xchg
lock
add
into
cmpb
lret
mov
ret
xor
push
xor
loopne
push
dec
scas
loope
outsl
add
mov
ss
cmp
pusha
cwtl
push
jae
andl
shll
loopne
hlt
fcmove
imul
add
xor
test
pop
mov
inc
int3
repnz
and
jne
cmp
push
fisubrl
aad
add
mov
cmp
adc
xlat
mov
pop
sub
push
cmpsl
call
jne
push
iret
cmpsb
xor
mov
add
mov
mov
popa
sahf
ret
rclb
dec
sbb
mov
inc
cmp
in
adc
lcall
lcall
and
es
insb
outsl
clc
mov
push
jmp
popf
add
pop
push
movsl
mov
or
or
popf
push
or
nop
or
push
jnp
das
adc
mov
into
insl
and
push
mov
rclb
and
cmpsb
mov
mov
mov
in
adc
gs
out
out
mov
jb
cmp
popf
imul
mov
xchg
nop
pop
or
mov
js
loope
pop
push
xor
mov
xor
jge
dec
and
ret
popf
push
jbe
inc
arpl
ret
ltr
mov
inc
dec
fisttpll
outsl
int3
jns
negl
rclb
push
loop
inc
or
xchg
rcrl
fisubs
sub
lret
push
fdivl
inc
ret
sbb
ja
in
lock
cs
loope
rolb
add
xchg
sub
cwtl
add
rcl
adc
push
mov
fdivl
loopne
mov
int
push
push
sub
sbb
fwait
mov
aaa
push
rolb
int
fidivrs
dec
leave
push
inc
lret
mov
into
xchg
cmp
sub
sub
ds
mov
xlat
out
dec
xchg
add
fidivs
cli
ds
mov
lret
stos
sbb
and
je
pop
dec
pushf
fidivs
inc
int
xor
test
mov
pop
stc
sar
das
xchg
inc
imul
pop
xchg
sbbb
jo
cmp
xchg
add
adc
roll
inc
aaa
out
movsl
ja
fadds
arpl
pop
lds
cmp
cmp
adc
shlb
push
and
cmp
stos
fisubs
add
jae
test
xchg
popa
in
pop
inc
dec
and
addr16
imul
mov
sub
dec
xor
mov
xchg
dec
xchg
iret
mov
out
std
mov
fadds
jge
or
cmpsl
jp
xor
addr16
mov
adc
iret
xor
pushf
out
std
call
in
bound
insl
push
lods
xchg
jg
and
sti
in
jp
inc
or
test
and
popf
lock
add
outsb
mov
fidivrs
xchg
loopne
fnsave
cltd
jmp
add
jnp
mov
rcr
leave
ja
js
or
mov
data16
push
xchg
fxch
shr
outsl
cmp
and
push
sbb
scas
rcrb
pop
jecxz
jns
jae
sahf
sbbl
faddp
js
setbe
xchg
pusha
dec
mov
add
mov
mov
test
fs
pop
test
ret
ja
mov
dec
pop
imul
rorl
pop
sbb
adc
jne
mov
movsl
mov
sbb
jmp
push
mov
fwait
call
stos
and
push
movsl
decb
icebp
jmp
ja
push
mov
lods
mov
cwtl
mov
cmp
mov
pusha
xor
push
cmp
mov
pop
sarl
test
ljmp
lcall
loop
inc
in
test
test
mov
insl
sbb
sub
xchg
out
xchg
mov
pop
add
mov
lcall
leave
stos
sub
mov
fwait
jmp
push
popf
jnp
insl
pop
paddb
mov
mov
pop
je
mov
outsl
jnp
adc
test
loop
pushl
sbb
pusha
jo
push
or
sub
jp
push
or
xor
sarl
cmp
jno
sti
fistl
inc
jae
jae
push
jp
xor
ds
xchg
leave
aam
or
je
jp
xchg
push
loope
movsb
aas
sar
aas
stos
adc
fs
outsl
inc
jae
outsl
in
in
mov
mov
jmp
ljmp
sub
ret
movsb
testl
fdivs
dec
cmpsb
mov
jno
ret
sbb
in
neg
dec
rorb
mov
cmpsl
add
test
aaa
cmpsb
xchg
mov
jb
xor
insb
jl
aas
jmp
mov
inc
sbb
jnp
cmp
inc
xor
outsb
mov
mov
cmp
sub
xchg
mov
and
lods
daa
mov
mov
jle
int3
imul
mov
out
pop
mov
xlat
scas
int
lods
mov
stos
ficompl
lret
sub
into
sub
jg
mov
inc
push
loopne
repnz
pop
cmp
dec
jne
je
daa
stos
aad
mov
jle
jecxz
dec
in
dec
mov
jge
or
mov
nop
dec
mov
mov
and
lret
test
int
add
xor
sbb
mov
mov
adc
sub
add
push
or
call
pop
xor
and
filds
aam
dec
test
xchg
fwait
test
stos
push
bound
xchg
pop
cld
adc
push
add
pushf
mov
dec
cmpsl
pop
into
mov
mov
xor
rorb
jmp
cmp
fcomp
xchg
fsubrs
insb
es
pushf
xor
cmc
mov
andl
stos
sti
adc
xchg
fs
sub
xor
sbb
sub
sub
xlat
cmp
insb
jmp
sub
repz
jnp
ret
pop
mov
sbb
adc
aad
mov
hlt
scas
cmp
inc
ret
pop
sbb
scas
call
testl
dec
push
add
repnz
pop
stos
call
leave
pop
cmp
inc
in
mov
loopew
das
xor
xor
in
mov
push
push
push
xchg
xchg
outsl
add
push
pop
adcl
mov
fsubl
jnp
sub
push
push
mov
lods
outsl
aas
in
or
xchg
popf
mov
pop
push
cltd
adc
ficoml
jl
into
pop
enter
add
xchg
ret
add
nop
fs
mov
or
cmp
mov
or
xor
xchg
aas
test
or
pop
xor
mov
adc
stos
in
sub
mov
mov
jae
adc
pop
mov
and
adc
pop
jp
inc
or
test
add
aas
pop
jp
push
mov
pushf
lods
sarl
xchg
inc
sbb
aam
pop
or
shll
pushf
out
pop
pop
sti
or
loop
andb
xor
and
aas
sbb
add
push
adc
cmpsl
jmp
mov
in
stc
xchg
jle
out
loop
sbb
dec
test
test
sbb
sarb
into
aam
pop
fucomip
int
cmp
inc
outsb
iret
inc
pop
mov
add
mov
cwtl
imul
xchg
test
adc
loopne
movsl
jecxz
and
push
and
in
das
pushl
sub
push
sarl
and
adc
scas
shlb
inc
lret
js
inc
xchg
pop
and
jle
lcall
outsb
adc
push
rcr
lock
or
test
mov
bound
sbb
push
push
xor
shr
mov
jl
lea
out
mov
orl
cld
cmpsl
dec
push
jnp
sub
pop
push
sbb
out
xchg
fwait
xchg
lahf
pop
and
ljmp
jnp,pt
adc
inc
pushf
pushf
pop
dec
push
nop
std
cmc
arpl
stc
ds
xchg
shlb
mov
inc
mov
and
ret
stos
push
andl
pop
cmp
loopne
push
das
lock
test
inc
aad
ret
mov
mov
xchg
pop
push
insl
test
lea
aas
mov
ss
jae
ror
fsubrs
ds
and
test
loope
and
push
aad
outsl
or
and
in
arpl
notb
mov
movsb
push
cmpsl
seta
push
inc
mov
js
add
adc
push
jbe
inc
and
inc
dec
mov
cmp
leave
int
mov
movsl
dec
mov
outsb
out
inc
out
push
enter
mov
xchg
xlat
cmpsl
outsl
pop
imul
adcb
fldl
test
enter
sub
mov
sub
jmp
je
popa
repnz
les
lods
push
mov
aas
das
nop
mov
add
add
pop
pop
sarl
adc
jmp
popa
call
and
arpl
popa
mov
nop
pop
dec
sub
push
in
mov
mov
rcr
divb
cmp
mov
rcll
outsb
jp
cli
xor
mov
lret
mov
inc
js
cmp
push
mov
inc
cs
push
cli
sti
lahf
fnstenv
enter
js
pop
in
push
jbe
adc
push
lcall
pop
xchg
push
lods
bound
lds
cmp
and
mov
push
mov
cli
mov
mov
loop
push
add
dec
or
mov
daa
cmp
mov
and
sub
fstpl
shrb
js
sbb
add
packssdw
insl
lahf
xor
lret
mov
push
mov
adcb
das
or
stos
inc
ljmp
pop
adc
fwait
sub
xchg
inc
out
xor
mov
leave
lea
jle
add
iret
sbb
mov
mov
or
jnp
movsb
data16
out
push
test
jae
lds
inc
iret
outsb
ss
inc
rep
or
and
mov
cli
sub
and
jbe
cltd
rcl
pop
das
lea
xchg
ljmp
mov
frstor
pop
leave
or
lret
insb
sar
and
bound
movsb
nop
jmp
mov
call
jnp
ss
inc
aam
inc
ss
push
iret
in
popa
sub
dec
cmp
mov
test
lods
cmc
sub
jmp
gs
jnp
mov
pop
adc
mov
or
das
xchg
jne
stos
mov
imul
icebp
orl
mov
cmpb
push
or
mov
lods
jmp
loope
leave
inc
lahf
jb
movsb
adc
pop
xor
sbb
xchg
jbe
mov
add
fmull
cli
and
jnp
cltd
xchg
mov
jle
mov
push
and
outsb
shlb
mov
in
xchg
inc
cmpsl
dec
jbe
repz
pop
pop
fs
dec
loope
or
push
xchg
add
sbb
and
aam
repz
add
in
adc
loope
imul
mov
movsb
and
sti
jp
adc
out
inc
loopne
xchg
mov
jbe
test
push
mov
insl
jmp
fst
dec
or
jnp
jns
jge
sbb
stos
test
test
inc
scas
jmp
iret
cld
pop
std
ds
pop
and
repnz
sbb
ret
mov
fstl
insl
push
pushl
push
push
call
mov
jmp
push
rcrb
and
inc
outsb
xchg
mov
mov
psrad
pop
or
lcall
sbb
addr16
or
je
mov
xor
insl
loope
mov
add
or
and
add
mov
push
add
or
mov
sbb
ret
bound
or
mov
push
adc
push
ret
shlb
adc
sub
pop
xchg
lods
cmpsb
xchg
and
fisttpll
push
repz
adc
add
out
lret
adc
loopne
sub
xor
xchg
ror
lods
lods
and
push
and
or
sbb
scas
push
cmp
pop
mov
pop
popa
cmp
outsb
js
add
push
lods
and
mov
out
cmpsb
fcom
push
sub
jge
inc
bound
jb
jg
loop
test
rorb
mov
aad
xor
sub
loopne
cmp
xchg
xchg
icebp
push
shlb
call
jne
sbb
xchg
jg
xchg
push
mov
cmp
cmc
in
mov
jbe
clc
push
sub
dec
aam
aad
roll
xchg
test
adc
lret
cmp
cmp
fidivrs
xor
lcall
fcoms
cmp
lret
cmp
insb
in
mov
movsl
jg
mov
rorl
out
popa
push
movsb
int3
dec
int3
ror
jne
adc
pop
fwait
mov
mov
adc
xor
or
xchg
loope
jo
dec
mov
sub
aaa
mov
les
mov
cmpl
push
add
and
push
rolb
stc
jg
fs
jmp
xchg
xchg
xor
mov
lahf
imul
mov
cs
or
es
out
mov
cmp
xchg
mov
cmp
insl
pusha
lods
pop
sbb
mov
sbb
cld
push
fucomp
jo
andl
jmp
bound
vmovd
dec
add
gs
or
lret
popa
push
mov
mov
cwtl
or
add
push
test
fiadds
inc
in
sub
inc
in
sbb
das
adc
adc
pop
aas
add
sub
push
cmp
mov
mov
fcomps
inc
je
es
insb
adc
data16
notb
xchg
jg
int
mov
push
stos
imul
mov
pop
jnp
xchg
pop
and
lock
xchg
cmpl
movsb
mov
mov
aas
iret
mov
stos
outsb
lcall
hlt
in
sub
mov
pop
imull
lock
repz
imul
orl
out
cmpb
enter
jns
fisubl
push
sub
movsl
cltd
pop
aaa
movsb
fisttps
cmp
aas
push
repz
sahf
loope
jge
inc
lds
jge
pop
dec
imul
lds
push
inc
cwtl
gs
sub
cmp
nop
jl
dec
test
jo
or
rcr
sti
inc
mov
pushf
leave
adc
pusha
decl
jp
subb
inc
add
aam
or
push
in
jp
xor
xor
dec
xlat
mov
js
or
add
mov
mov
jo
cs
ficompl
xchg
inc
cmp
jmp
scas
mov
popa
mov
push
in
lods
testb
inc
fcmovnbe
mov
dec
lock
mov
iret
cmp
cld
popf
xor
cmp
mov
push
nop
sti
mov
rcrb
cmp
sbb
ljmp
adc
sub
or
stos
addr16
hlt
sbb
add
inc
dec
and
xor
inc
mov
pop
push
leave
test
xchg
push
sbb
decb
pop
lds
mov
sbb
jge,pn
push
adcb
xor
fisubrs
sub
sbb
insl
mov
xchg
test
and
xchg
fwait
scas
jae
lods
repnz
cmp
mov
adc
test
shl
loope
cmp
or
mov
push
push
stos
loope
inc
ret
shlb
sbb
outsl
insl
pusha
mov
push
mov
or
insb
cmp
dec
xchg
pop
addr16
push
adc
popf
jp
and
bound
mov
mov
dec
mov
ja
fxch
jbe
push
sbb
shrl
xchg
aaa
mov
inc
pusha
xchg
dec
stc
mov
xchg
add
mov
subl
pushl
add
xchg
xor
push
ja
adc
lret
lea
xchg
pop
out
xlat
dec
cltd
je
jne
pop
inc
mov
sahf
sub
jno
cmp
jne
xor
mov
in
insl
and
jo
cltd
adc
cmpsb
jae
fsts
pop
enterw
ljmp
ja
sbb
aam
mov
mov
cwtl
xor
push
push
aad
and
mov
sbbl
cld
push
inc
adc
subl
mov
in
push
dec
xchg
add
dec
scas
das
mov
mov
and
stos
pop
mov
stos
push
pop
cmpsb
mov
push
mov
sbb
pop
sbb
test
repz
jne
loop
mov
push
rolb
push
mov
test
jecxz
pop
mov
imul
push
jle
stos
jne
cld
leave
push
sub
pop
or
out
mov
mov
xor
jg
mov
sbb
dec
pusha
stos
repnz
mov
adc
adc
cmp
repnz
sub
loopne
mov
int3
push
insb
pop
mov
sbb
pushf
pusha
dec
imull
lahf
movsb
sahf
xchg
sbb
mov
test
xchg
inc
lods
clc
cmpw
mov
int
mov
xchg
dec
cli
xchg
mov
add
iret
clc
add
rorb
cmc
js
and
jmp
mov
adc
add
push
pop
xchg
jno
jnp
shrl
in
andb
js
or
mov
dec
dec
adc
sub
jae
in
ja
mov
movsb
jmp
bound
sub
adc
or
rcrl
inc
or
daa
jg
test
out
or
ret
shrb
sarb
loope
jns
mov
lock
dec
icebp
ljmp
movsb
mov
pop
sbb
push
dec
xchg
mov
pop
mov
push
or
pop
in
test
enter
scas
stos
pusha
shr
lock
adc
mov
in
add
sub
popf
imul
jbe
shll
add
mov
fdivl
cmp
insb
lds
xchg
fmull
fidivl
mov
repnz
insb
sarb
or
daa
bound
es
cmp
nop
int
mov
test
mov
xor
mov
enter
fs
daa
cmc
pop
in
pop
js
dec
add
lods
enter
add
ljmp
imul
scas
sbb
xor
push
jg
mov
xchg
shll
aam
in
mov
mov
lcall
lahf
ds
ds
push
mov
ljmp
pop
mov
or
jmp
jno
sub
dec
xchg
mov
cmp
scas
and
jmp
jl
dec
aad
call
mov
cmp
mov
iret
imul
jle
pop
into
xchg
outsb
add
xor
push
cwtl
mov
test
mov
cmc
inc
push
roll
idiv
int3
fadds
shl
push
rcrl
jno
adc
lret
ret
mov
push
cwtl
andl
mov
addr16
addr16
adc
mov
incb
pusha
sarl
adc
insb
movsb
and
push
loop
jae
popa
aad
add
enter
push
cwtl
cmpl
enter
into
lret
ss
sahf
loop
gs
shrl
mov
and
xor
pop
into
xor
or
pop
or
fistpl
push
xlat
push
inc
add
call
inc
scas
and
frstor
ret
and
lds
push
and
cmp
jno
mov
movsl
fisttpll
adc
subb
jp
sbb
add
and
sbb
andb
jbe
and
lret
jl
outsl
les
push
push
or
mov
sub
rcll
repnz
dec
sbb
es
daa
xlat
mov
aad
mov
jnp
stos
xor
adc
adc
push
mov
aad
cmp
pusha
jno
ret
xchg
mov
sub
pusha
fwait
rol
sub
xor
fsubrs
xchg
movsl
pop
test
cmp
and
mov
out
dec
mov
mov
mov
mov
mov
pusha
subl
xor
pop
lods
mov
jb
xor
std
js
mov
push
leave
jmp
jb
outsb
psubq
jecxz
mov
pop
cmpl
xchg
fdivr
mov
adc
or
inc
adc
fldt
aaa
call
sub
sub
add
dec
add
pusha
in
imul
fldenv
inc
scas
inc
es
pop
aam
scas
mov
imul
enter
or
into
push
pop
scas
sbb
aas
aaa
jmp
cmpsb
and
ljmp
incb
ficomps
push
mov
cwtl
test
lock
jl
stc
jge
sbb
in
aad
jns
push
mov
stc
in
addl
mov
pop
xchg
rorb
xor
mov
xchg
test
mov
ljmp
bound
push
aam
jnp
push
jnp
les
mov
and
sub
mov
popl
fsubrs
shll
cmpl
xchg
inc
and
loopne
add
js
or
jle
leave
lcall
dec
div
push
xor
jnp
ficomps
dec
loope
sub
loopne
jns
pop
jne
in
outsb
jecxz
pop
cmp
subl
inc
icebp
insl
xor
out
lods
push
xchg
repnz
fs
jecxz
jp
xor
adc
adc
cmp
or
lods
sbb
adc
out
mov
dec
insb
add
cld
sbb
sub
fisubrs
repnz
test
cmc
decl
outsb
pop
or
xchg
and
xchg
cmp
push
mov
scas
sub
fcmovbe
inc
std
xchg
jl
leave
jmp
xchg
int3
jecxz
test
rcrl
push
bound
cmp
xor
cmpsl
out
test
jb
and
jg
ret
add
xlat
jmp
cwtl
jo
shrb
sub
lock
jmp
jbe
or
jo
inc
test
xchg
dec
lahf
inc
fwait
das
xchg
mov
mov
repz
std
or
lock
ret
addr16
push
adc
add
lds
cmp
rcrl
int
bound
lds
repnz
ds
xor
inc
jnp
subb
aas
fistpll
jns
or
sbb
shr
mov
jecxz
and
xor
pop
jno
jle
test
mov
popa
mov
sub
lcall
ret
mov
push
sub
or
or
fisubrs
out
lods
icebp
pop
jne
sbb
dec
sbb
mov
and
adc
jle
movsl
test
rolb
or
pop
push
mov
lods
packssdw
xor
cmpsl
dec
std
mov
hlt
mov
jns
pop
mov
pop
fstpl
lea
and
mov
outsl
mov
cmp
push
inc
xor
xor
sub
cmp
fcoml
int3
push
sub
adc
loop
dec
jo
xchg
add
neg
xchg
mov
cmp
inc
pop
imul
test
cmpsb
add
mov
arpl
pusha
push
test
mov
dec
sub
les
gs
shrb
dec
imul
out
mov
lods
ss
and
rcl
dec
aaa
pop
xchg
insl
cwtl
jno
mov
rorb
fidivl
sbb
rcrl
fidivrs
inc
dec
ss
pop
mov
mov
mov
jge
repz
xchg
push
push
rcll
dec
loop
pop
sarb
push
loopne
xchg
mov
dec
je
aaa
lret
or
pop
jmp
push
and
adc
mov
push
out
pop
or
lret
inc
pop
psrlw
push
icebp
test
jnp
pushf
cmp
gs
dec
jge
sahf
lret
push
mov
xchg
bound
cmc
int3
mov
fnstenv
outsl
adc
xchg
lret
sahf
fs
add
mov
adc
std
aad
or
xchg
pop
aaa
iret
mov
clc
and
shrb
push
adc
cmpsl
aas
in
pop
dec
sub
and
jbe
movsl
sbb
mov
jmp
xor
mov
or
sub
sbb
sbb
adc
mov
insl
cwtl
test
cli
or
xor
gs
mov
stos
test
adc
and
inc
inc
fisubs
sbb
lods
xchg
mov
cld
cmc
cld
mov
sub
xor
mov
sub
mov
xor
sarl
fdiv
jo
adc
sbbb
dec
push
mov
mov
mov
sbb
popa
mov
es
nop
xchg
or
psrlq
icebp
mov
and
sub
adc
divl
xorl
out
adc
xchg
pop
stos
aaa
stos
ret
int
test
mov
mov
push
mov
out
xor
test
mov
mov
mov
mov
push
push
jmp
push
xchg
stos
les
ret
push
add
push
lcall
das
dec
mov
sbbl
adc
push
jecxz
lret
push
ds
repnz
jae
xlat
inc
xchg
and
cmp
xchg
push
pop
add
data16
bound
adc
shll
cld
jle
mov
fiadds
xor
jno
sbb
adc
mov
and
faddl
push
ds
in
das
push
jecxz
jg
pushf
aad
sub
es
mov
ss
test
lret
sub
cmpsb
mov
jae
mov
xchg
xchg
test
sbb
sbb
mov
aam
mov
stos
jecxz
fnstsw
jecxz
daa
in
daa
testl
add
adc
xchg
loopne
test
or
xor
in
roll
arpl
outsb
mov
mov
loop
movsb
xor
pop
out
pop
js
fimuls
dec
test
jecxz
pop
fnstcw
test
insl
mov
repnz
fwait
inc
xchg
call
lods
notl
xchg
ja
pop
fsub
jae
pop
cmp
push
jns
sbb
jno
repz
sarb
das
rcr
push
lods
roll
lds
les
fcoms
bound
out
ja
mov
ret
lret
and
and
add
jp
into
call
rorb
adc
pop
js
mov
push
dec
and
testl
adc
fistpl
mov
jecxz
and
fs
ds
dec
sbb
dec
test
xchg
cmp
mov
and
lret
lds
movsb
js
in
outsb
out
jge
pop
loop
xchg
loopne
xor
cmp
cmpsl
and
fdivrl
xor
push
je
hlt
jmp
mov
rcl
cmc
pop
roll
pop
pushf
stos
dec
sbb
dec
add
rorl
stos
fsubl
mov
and
push
jp
and
and
int
push
sub
xchg
xchg
insb
pop
es
push
inc
aam
out
cmp
mov
adc
adcb
stos
or
jl
mov
insb
in
ja
mov
outsb
aam
nop
ficompl
fildl
hlt
sbb
mov
lods
ds
movsb
outsl
push
jg
jnp
mov
pop
and
ljmp
pop
mov
xor
inc
jne
cs
fisubs
js
xchg
dec
and
adc
call
sbb
fnstenv
mov
loopne
fcmovnb
fidivrs
or
lds
int3
lret
sub
mov
cmp
or
pushf
mov
lcall
loopne
lods
lret
dec
in
fs
iret
decl
cmp
pushfw
mov
mov
jle
push
test
inc
jae
cmp
lock
inc
test
cmp
or
xlat
dec
cltd
pop
push
ss
inc
rorb
aad
mov
push
jae
or
or
into
adc
inc
add
sub
fldcw
ds
sti
xlat
mov
pop
pusha
test
or
ljmp
fistpl
js
stos
adc
cltd
mov
pop
je
dec
stos
movsl
sbb
and
aas
test
sub
frstor
sahf
aaa
xor
jo
and
and
cs
je
or
xlat
je
push
dec
xchg
pop
outsl
out
or
adc
push
cld
icebp
and
jl
orb
xchg
insl
faddl
xchg
xchg
out
pop
sub
dec
arpl
sbbb
mov
cmp
push
pop
pop
lock
and
mov
out
js
scas
insb
icebp
fbstp
cmpsl
xor
adc
cmp
push
fdivrp
das
test
inc
pop
dec
push
aad
jmp
pop
loope
add
pushf
add
push
pusha
add
cmp
cmp
test
pop
hlt
pop
fisubrs
pop
or
cmpl
into
cmpsl
xor
rcrl
pushf
push
or
xor
nop
mov
mov
jb
sub
cmpsl
scas
jecxz
in
cmp
mov
inc
addr16
int3
inc
int3
arpl
cmp
cmp
adc
enter
pushf
dec
dec
jne
cwtl
jecxz
sub
popf
mov
adc
int
or
xchg
popa
jb
in
cmp
cld
xchg
push
adc
stos
hlt
daa
add
pop
xor
mov
dec
xor
repnz
ret
jns
cmp
mov
les
sub
rcr
punpcklbw
lret
lahf
pusha
cli
sar
repz
loope
int
arpl
enter
es
lods
jne
mov
sub
cmp
add
and
mov
xor
lcall
adc
out
or
mov
cwtl
test
xor
jne
scas
loop
or
je
jb
aaa
xchg
mov
test
sub
movsl
adc
lahf
dec
arpl
adc
call
or
xchg
push
xor
mov
pop
loop
jo
mov
imul
sub
loope
arpl
mov
fwait
rorl
mov
dec
movb
xchg
pop
shll
mov
sti
loop
mov
jno
mov
insb
xor
lods
popa
fcmovbe
sahf
pop
out
xchg
sbb
mov
lcall
or
insl
shlb
outsb
jp
loop
and
mov
xor
mov
rcll
jg
or
push
arpl
jno
pop
lds
clc
daa
pop
fisubs
dec
xchg
cmpsl
mov
mov
movsl
push
xchg
mov
mov
stc
lods
push
inc
mov
scas
or
xor
data16
ficompl
mov
fistpl
sbb
out
movsl
push
enter
jge
sub
or
gs
xor
ret
push
cmp
dec
imul
test
call
mov
dec
and
les
loope
scas
or
test
jae
lea
cmp
out
pop
sahf
mov
inc
fisttpll
inc
or
inc
test
jae
inc
xchg
in
mov
addl
cs
cwtl
xor
sub
mov
mul
fildl
out
and
lods
mov
in
faddp
add
repnz
xchg
daa
xchg
aam
andb
jo
out
cmp
sub
cmpxchg
xor
cmpsl
rcrl
frstor
sar
arpl
and
xor
mov
lock
xchg
inc
das
inc
out
test
cmc
mov
pusha
rcrb
scas
cmp
add
inc
mov
dec
push
and
jge
lods
or
add
xor
loope
insl
dec
xchg
cmp
push
mov
pop
and
test
mov
and
mov
mov
test
mov
clc
dec
cmp
das
js
add
movsb
ret
lret
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
jmp
pop
jge
lds
hlt
inc
adc
lret
mov
ja
in
mov
data16
push
cltd
xchg
mov
aas
outsl
enterw
dec
in
dec
cltd
out
mov
push
sbb
nop
cmpsb
sbb
repnz
cwtl
mov
data16
pop
sub
psrad
xadd
add
lock
pand
dec
in
jmp
xchg
loop
adc
movsl
andb
arpl
ss
insl
jmp
fwait
pop
sub
lret
xchg
out
and
inc
shld
sbb
repnz
jp
or
sbb
or
push
loop
mov
out
aad
cli
enter
fiaddl
hlt
enter
cmp
or
nop
push
and
stos
icebp
addr16
mov
cmpsl
outsb
fimuls
or
pushf
and
xchg
hlt
add
outsl
divl
negb
sti
cmpsl
xchg
iret
out
adcb
test
int
dec
pop
jnp
arpl
sub
lret
jb
inc
into
and
add
sub
or
andl
mov
push
sbb
seta
mov
or
mov
sub
xor
imul
in
insl
xor
xor
xchg
mov
scas
mov
inc
push
jne
inc
or
clc
inc
dec
add
or
xor
test
out
dec
sar
or
popa
gs
fildll
mov
jmp
add
mov
flds
adc
stc
lods
mov
xchg
leave
sbb
cwtl
or
xchg
cmpsl
mov
in
ljmp
stc
mov
dec
sub
or
sbbb
call
ljmp
iret
inc
lcall
inc
gs
lds
mov
iret
imul
ret
sub
scas
fcmovnbe
push
clc
push
cmp
scas
aam
int3
mov
jle
mov
neg
add
xchg
aaa
enter
or
fsubrl
lret
inc
notl
cmp
sub
pop
sbb
xchg
cli
xor
xchg
mov
xchg
xorb
pop
inc
xchg
mov
cltd
jb
fidivrl
fnstcw
dec
xor
xchg
mov
lods
mov
rol
dec
or
mov
pop
adc
cmp
fstpl
sbb
mov
sahf
jecxz
les
or
insl
cmpsb
push
push
push
popa
jbe
mov
dec
clc
xbegin
cld
adc
push
test
adc
and
cmp
stos
dec
mov
ret
mov
pusha
or
xor
mov
fs
xchg
stos
fiaddl
movsb
lock
fistpl
push
lcall
mov
fxch
ljmp
sbb
pop
leave
jecxz
push
push
cmp
mov
xor
lods
xchg
scas
gs
repz
or
cmpb
scas
dec
jne
push
mov
push
xchg
aaa
fs
jae
dec
mov
mov
dec
aam
cmp
lods
pop
lea
leave
fcmovne
jno
imul
sti
cltd
or
hlt
mov
stc
popf
mov
mov
xchg
inc
pop
into
fisttpll
cltd
arpl
xchg
mov
and
call
sub
mov
jle
imul
icebp
xchg
movsb
xchg
fs
mov
rorb
dec
stos
sti
sub
mov
pop
lods
mov
into
sub
push
push
inc
lock
jb
bound
lods
mov
pop
mov
cmpsb
jmp
adc
mov
popa
cmp
test
repz
mov
sub
into
ds
inc
push
mov
fs
push
cld
loope
fisubs
fisubl
std
inc
cmp
out
or
add
adc
add
lods
mov
daa
insb
out
cli
add
jno
lret
mov
and
ret
mov
xchg
mov
rcrl
int
mov
aam
push
mov
shl
inc
test
push
cmpsb
bound
fmul
pop
push
push
leave
lret
aaa
sti
jnp
inc
fimuls
repz
and
sbb
aas
in
adcl
inc
sahf
sub
fwait
cli
fisubl
xor
push
xchg
mov
or
or
cli
cli
clc
das
ja
adc
xchg
lcall
push
jae
sarb
mov
add
sub
fmull
popa
inc
sbb
mov
lcall
sti
in
pop
inc
pushf
fcoms
test
loope
mov
adc
sub
arpl
fcoml
push
inc
jo
mov
sub
hlt
and
xchg
jge
mov
sbb
or
push
out
nop
pop
jae
sbb
enter
mov
xchg
stos
xchg
cmovg
sbb
fisttps
push
shlb
hlt
inc
fcomi
in
xchg
gs
cld
cmp
cmp
inc
test
outsb
test
aad
xlat
out
test
jge
test
sar
inc
icebp
dec
leave
and
fsubp
mov
add
add
pop
fidivrs
xchg
test
xchg
sub
or
mov
popf
cmc
inc
jp
adc
testl
es
addr16
xor
mov
cmp
push
pushf
orb
fistpll
cmpsl
jge
fcoml
cmp
dec
mov
pop
scas
popa
mov
arpl
lret
xor
pop
xchg
call
inc
negb
pop
in
scas
mov
inc
cld
lods
loop
shlb
xor
in
push
mov
or
xchg
ret
ror
sbb
insl
pop
ret
inc
dec
cld
cs
sahf
dec
ljmp
rorl
add
mov
sub
iret
loopne
lods
push
sbb
roll
push
inc
stos
sub
lret
add
dec
adc
icebp
dec
pop
shrl
in
sbb
inc
mov
sub
or
icebp
aas
sub
adcl
inc
push
cmp
pop
test
loop
pop
ss
cmp
shll
adc
push
pop
push
mov
out
dec
sub
inc
pop
nopl
mov
call
clc
aam
sub
jne
stc
push
pop
and
je
pop
pop
pop
adc
stos
xchg
push
inc
ror
pop
cmp
adc
lods
in
jmp
in
mov
sbb
dec
cs
xor
cmc
std
pop
xor
push
imul
lods
pop
push
jne
fmull
inc
mov
ret
test
imul
push
repnz
sahf
out
xchg
jge
inc
push
xor
jle
mov
push
xchg
add
daa
jb
xchg
and
cwtl
stc
push
out
xor
sub
sub
dec
adc
push
imul
fnstenv
lods
outsl
jmp
jno
negl
mov
lds
sbbb
and
jbe
mov
jecxz
xchg
incb
mov
dec
cmp
int
push
sarb
xor
in
nop
test
out
mov
insl
lcall
bound
ss
pop
cs
lcall
add
fldcw
xor
cs
shr
jmp
and
add
loop
es
pop
js
or
ja
out
xorl
repz
or
mov
sbb
jmp
cld
sub
fisttps
outsl
insb
mov
xor
int
xchg
or
sub
loopne
bound
push
vsubsd
push
jecxz
mov
mov
cmpsl
sti
dec
int3
fisubs
jno
add
test
subb
and
cmpsb
jbe
adc
std
add
shl
idivl
dec
pop
mov
js
push
scas
and
push
test
mov
fimuls
ficoms
cmp
mov
sbb
je
fadd
add
out
subl
arpl
es
mov
std
mov
sub
aaa
xor
dec
cld
icebp
das
imul
pop
xchg
or
sbb
or
test
cli
out
mov
xchg
add
stc
push
adc
call
leave
aas
dec
push
inc
push
push
push
or
mov
inc
int
jae
cmpsb
fcmovne
std
divl
sbb
imul
inc
fcmove
mov
adcl
cmp
and
int
lret
ja
mov
push
xchg
sbb
sub
mov
movsb
jno
out
popa
adc
jae
sbbl
or
mov
jecxz
or
in
popa
leave
dec
mov
xor
lock
pop
jmp
sbb
jmp
jne
not
dec
dec
and
mov
cmpsb
test
into
aad
push
xchg
push
sub
addl
push
aad
push
sbb
sbb
into
or
cld
mov
sub
jns
pop
or
inc
inc
pop
hlt
clc
pop
je
add
or
or
pop
or
loopne
mov
adc
sub
or
push
push
andl
cmp
into
xor
hlt
insl
test
pop
cs
mov
jbe
mov
lods
pop
cs
cli
mov
setne
shlb
rclb
movsb
pop
push
xor
inc
mov
cmp
data16
push
ds
mov
das
daa
and
mov
loope
adc
mov
ss
jne
scas
dec
shrb
push
adc
test
int
mov
mov
mov
rcrl
pop
inc
fistl
cmc
adc
add
pop
mov
inc
pop
jmp
pop
push
sub
jnp
movl
enter
add
int
js
jle
sbb
jns
push
jae
jns
mov
out
fsubl
popa
dec
cld
fmull
js
add
repz
outsb
xlat
jg
mov
inc
stos
push
xor
mov
dec
xor
xchg
cmpsl
lcall
mov
pusha
inc
and
cmpsl
or
jno
or
mov
push
pop
sarb
mov
ret
or
xchg
aaa
xchg
pushf
adc
lea
mov
dec
pop
les
xchg
push
ret
push
shl
dec
shl
fmul
or
imul
adc
test
cmp
mov
xchg
sarl
jns
iret
ret
outsb
out
ret
mov
and
rorb
adc
cmp
in
fcomps
pop
adcl
dec
les
or
and
xchg
sub
dec
jecxz
mov
cld
sub
sub
sbb
jns
dec
adc
pop
mov
aas
jmp
sbb
push
jmp
in
cli
dec
repz
aas
mov
pop
es
dec
in
iret
cmpsl
adc
cmp
outsl
cld
jno
mov
adc
dec
and
adc
sub
xchg
and
and
jle
or
add
aaa
mov
mov
popa
mov
rolb
mov
sub
frstor
iret
in
test
pushf
cld
adc
push
fldcw
mov
inc
cs
sahf
and
xchg
cltd
push
movaps
jno
mov
cmp
insb
sub
or
mov
mov
add
mov
push
mov
jbe
push
mov
ss
xor
leave
insb
sbb
jo
stc
aad
bt
fidivrs
push
int
dec
mov
loop
out
adc
and
rclb
sbb
jno
cld
push
jo
xchg
test
in
fidivs
xor
in
dec
test
fmull
mov
cmpsb
pop
push
push
pop
mov
je
in
cmp
repz
ret
pop
jnp
add
stos
xchg
cmp
jnp
imul
jno
jae
fidivs
fdivs
sbb
jge
out
push
adc
cmpsb
out
addr16
stc
xchg
dec
out
inc
add
xlat
cmp
movl
ret
loop
ss
out
scas
add
pop
out
outsb
mov
lea
mov
cs
cli
cmp
aam
jne
je
aam
sarb
out
lahf
scas
sbb
push
dec
shlb
mov
addb
daa
es
mov
cmp
insb
sub
movsl
pop
jne
push
jnp
push
add
shr
cmp
mov
mov
jns
and
adc
cld
xlat
inc
sahf
mov
aaa
push
push
mov
xor
mov
mov
inc
add
popa
mov
aad
test
jecxz
push
xchg
imul
pop
cmp
frstor
movd
sub
mov
nop
and
addr16
add
sbb
mov
shrb
xchg
xchg
adc
xor
sbb
arpl
pop
dec
sub
inc
inc
or
ja
push
mov
pushf
adc
and
insl
mov
lcall
xchg
pop
inc
pushl
pop
fimuls
aaa
shll
ficoms
push
pushf
push
xor
and
hlt
jnp
and
mov
sbb
or
incl
lds
pop
fisttps
cmp
sub
pushf
fadds
inc
fwait
push
and
lea
popa
mov
stos
inc
int3
push
mov
bound
dec
mov
stos
add
outsb
jge
fisttpll
cmp
jb
lret
mov
mov
mov
sahf
test
dec
call
sbb
mov
dec
push
mov
dec
mov
cmc
pop
lock
xchg
push
or
push
inc
xor
adc
jae
mov
je
inc
sbb
mov
sub
fildll
mov
xchg
pop
ret
out
add
jp
lock
outsl
movsl
xlat
aaa
pop
sub
sub
enter
xchg
or
cmpsl
xchg
shll
adc
push
xlat
inc
xor
fsubs
jmp
xchg
sbb
sub
or
inc
sbb
push
lds
jg
jbe
call
mov
test
and
sub
add
xchg
xor
ljmp
hlt
dec
xchg
mov
adc
jmp
cmp
fimuls
mov
sbb
dec
or
shl
xor
or
jmp
aam
mov
xor
push
neg
or
xchg
les
inc
adc
aam
repz
movsl
outsb
jbe
push
inc
out
repnz
popa
mov
or
mov
outsb
sub
mov
movsb
addr16
xchg
sub
int3
movsb
push
jns
hlt
mov
jmp
out
stc
push
dec
jno
pusha
inc
mov
pusha
pop
mov
into
ljmp
mov
lock
fistl
sbb
mov
imul
mov
iret
push
adc
sbb
xlat
mov
jmp
sub
mov
cltd
mov
addr16
repz
add
jb
out
subl
fiaddl
dec
jb
cmc
mov
or
iret
inc
fnstenv
insb
sub
xchg
das
xchg
sub
cwtl
rcll
inc
or
jp
out
out
out
aam
mov
pop
mov
jl
mov
sbb
stos
sahf
out
xor
loope
mov
push
xchg
popf
xchg
mov
xor
out
dec
jo
ja
jns
lahf
cs
xchg
dec
int3
adc
mov
xchg
cmp
xor
stc
mov
das
rol
insl
or
ret
adc
lret
rolb
jbe
jno
mov
dec
jecxz
test
xor
lret
xchg
scas
scas
out
add
mov
outsb
cmp
sbb
xchg
flds
mov
jg
pop
jl
ret
fiadds
inc
jne
dec
inc
xchg
inc
add
pop
divl
and
aam
jge
mov
pop
xchg
push
lea
out
test
mov
daa
mov
xlat
aaa
fsubr
or
pop
sbbb
or
inc
sub
clc
test
sbb
and
mov
movmskps
jne
je
movsl
aam
in
dec
addr16
push
add
lret
or
inc
jns
ljmp
ret
cmpsl
loop
frstor
inc
mov
ret
loopne
inc
popa
rolb
push
add
enter
xor
fcmove
daa
out
jmp
pop
jbe
mov
jbe
adc
dec
fstps
mov
cmp
test
and
or
imul
imul
mov
stc
sub
test
jo
mov
fnstenv
and
stos
scas
sbb
call
push
or
cmp
addb
outsb
es
ficoms
int
inc
popa
daa
mov
cmp
cmp
mov
jmp
lock
inc
sub
cmp
cmc
imul
les
mov
or
mov
pop
shl
fildl
ljmp
dec
clc
fwait
sub
jge
pusha
repz
cmp
lea
xchg
fsubl
in
in
aaa
xlat
test
leave
xchg
xor
and
push
push
add
sub
sub
lret
pop
fildl
push
stos
sbb
stos
dec
daa
imul
jb
xchg
movsb
xor
mov
test
xor
rclb
cmp
sub
jl
scas
jp
ret
imul
push
ret
sbb
xlat
xchg
pop
xchg
std
push
stos
push
fdivl
inc
mov
aaa
stc
mull
das
sub
ljmp
and
and
int3
sbb
dec
cmc
mov
push
xchg
push
bound
lods
xor
lret
xchg
leave
add
negl
sbb
push
jno
xor
aad
xchg
dec
pop
mov
int3
aam
mov
mov
imul
dec
push
lahf
faddl
and
movsl
mov
adc
mov
shlb
adc
cmp
add
xor
pop
lds
cmp
in
jl
sbb
fdivs
push
fldcw
mov
jmp
lret
jno
sub
ret
lcall
cmp
rorl
in
push
leave
cmp
inc
lret
sub
lret
push
and
int
dec
loope
dec
push
jnp
xor
imul
mov
jecxz
fucomp
lea
int
adc
fdivl
pushl
aad
add
fadd
stos
or
push
inc
sub
push
push
sbb
xor
nop
mov
insb
inc
mov
mov
enter
cmp
mov
dec
xchg
in
push
adc
jmp
lret
fwait
sbb
mov
push
xchg
lret
ja
int3
ret
fldenv
jbe
mov
lock
cltd
int
pop
fstpl
jnp
cmp
popa
out
test
popl
lea
sub
cmp
mov
dec
adc
dec
clc
cmpsb
inc
jno
jmp
adc
arpl
push
inc
in
sbb
cmp
cmp
mov
jp
testl
and
gs
arpl
sahf
xor
dec
mov
sub
pushf
lods
or
sarb
cmpsl
dec
push
outsb
cmp
bound
mov
inc
or
adc
ret
mov
adc
jl
dec
jne
hlt
mov
xor
ja
in
leave
lret
int3
dec
loop
insl
and
jae
push
mov
cs
mov
loopne
cwtl
xor
push
jns
xchg
incl
pop
lret
into
jecxz
jnp
or
sub
test
mov
or
and
mov
dec
adc
sbb
xchg
and
push
jg
xchg
mov
in
xchg
test
sbb
push
test
rcll
dec
sub
loop
out
sahf
mov
ret
shll
outsl
sub
in
inc
pop
jecxz
adc
inc
pop
mov
ret
and
scas
mov
cmp
pop
test
push
notl
push
adc
shl
mov
push
xor
pop
adc
add
pop
lock
cmpsl
jl
xor
test
push
shll
ficoms
push
test
pop
pop
xchg
push
repz
sbb
mov
aas
xor
cltd
test
xchg
add
lahf
jle
xchg
dec
test
lret
add
sub
inc
aam
cmp
lods
adc
lret
cmp
lcall
mov
rcrl
lcall
dec
mov
fmuls
jle
into
pop
aad
aad
add
mov
mov
popf
sbb
je
jne
inc
pop
in
mov
add
in
sub
mov
fsubrp
pusha
sti
lret
sub
dec
lods
sub
fimull
xchg
loopne
pop
inc
and
rcl
int3
add
pop
cmp
dec
push
sub
push
popa
cmc
mov
std
nop
sarb
jo
mov
jnp
cmp
lds
aam
add
jge
add
adc
aad
stc
testl
jle
movsl
fidivl
lods
mov
clc
inc
pop
dec
jbe
cmp
repz
ss
mov
mov
ja
fidivrl
jno
dec
divb
inc
clc
or
in
gs
fdiv
jmp
mov
lahf
insb
div
popa
or
fbstp
sub
movl
inc
push
xor
fadds
add
or
pop
inc
or
and
jo
adc
xchg
stos
mov
jmp
pop
jg
lret
push
test
cmp
or
dec
add
jmp
scas
shlb
lock
push
push
xlat
pop
stos
fsubrs
ror
outsl
adc
mov
sub
mov
jae
addr16
dec
sub
popl
repz
xchg
inc
aaa
gs
adc
push
enter
sbb
inc
cmp
sub
pushf
mov
pop
fs
out
aad
push
jb
sarl
mov
or
call
pushf
test
dec
js
sub
scas
cmc
xor
stos
imul
push
jl
sub
push
adc
mov
jecxz
mov
flds
sahf
mov
mov
repnz
jbe
push
lret
movsb
dec
aad
push
sub
jne
sti
jle
mov
insb
rolb
cltd
arpl
or
cli
xchg
ds
cli
xor
pusha
pop
fs
cmpb
jmp
addr16
loop
aam
clc
inc
dec
mov
cld
ret
mov
outsb
xchg
xor
shrl
jle
jne
push
jle
dec
push
dec
pushl
pushf
push
fldenv
pushf
scas
fs
cld
cwtl
xchg
push
data16
mov
xor
andl
repnz
cmp
jo
fcoms
dec
push
lcall
mov
adc
adc
mov
xchg
jge
mov
mov
cli
mov
mov
inc
mov
fisubrl
sbb
pushl
sub
mov
or
nop
roll
popf
sti
xlat
lock
inc
cmp
std
sar
or
clc
mov
iret
inc
shrl
ss
fsubrs
dec
sbb
inc
jae
mov
inc
rorb
pop
into
mov
addr16
stc
dec
and
repz
test
jne
mov
mov
mov
aaa
movsl
push
and
sarb
movsb
and
sub
cmpsl
xchg
sub
lods
les
movsl
mov
scas
scas
mov
add
dec
cld
mov
push
gs
fldl
int
xchg
fildl
cltd
mov
in
cmp
mulb
adc
mov
add
call
fbld
push
jno
adc
fwait
ret
pusha
out
mov
jecxz
ljmp
leave
inc
and
jae
sbb
leave
dec
dec
jp
cmpsl
repz
cmp
lods
or
in
pop
mov
mov
mov
add
adc
mov
add
jecxz
xor
sbb
fisubs
popa
sbb
dec
or
adc
out
push
lea
push
insl
fs
push
out
push
inc
cltd
xchg
jae
jo
xchg
adc
cmpsl
fistpll
test
mov
icebp
aaa
adc
rorl
xchg
mov
cmp
movsb
mov
into
push
clc
xor
mov
or
scas
pop
ficoml
aad
dec
call
sub
adc
mov
pop
out
loopne
sub
cwtl
mov
pop
jne
cmc
push
sahf
enter
mov
sbb
jl
mov
adc
inc
xchg
mov
les
cltd
lar
dec
rcrb
jmp
sbb
loopne
jp
inc
adc
mov
sub
inc
fwait
pop
and
jmp
imul
shrb
inc
or
fwait
lret
push
adc
inc
push
xchg
dec
push
mov
dec
aam
adc
cs
loop
in
and
aad
dec
incl
sub
xchg
push
icebp
jno
enter
sbb
or
cmpsl
and
mov
pop
les
mov
rorb
pminub
ljmp
aad
icebp
iret
cwtl
pop
test
ret
dec
inc
inc
inc
ret
or
iret
outsb
lods
lahf
out
or
sbb
add
xchg
out
jecxz
test
movsl
lods
push
mov
lahf
out
pop
cmc
push
mov
out
push
sub
icebp
mov
loope
stos
shlb
ret
cmpsl
add
inc
dec
push
sub
add
push
mov
mov
leave
int3
inc
loop
inc
inc
stc
mov
sbb
jne
jl
cmp
xor
aaa
xlat
je
into
shlb
sub
mov
fidivrs
test
pushf
push
dec
dec
push
dec
adc
leave
cmp
jp
cmpsl
adc
nop
jecxz
in
xchg
mov
or
xor
fildl
xor
adc
jmp
nop
mov
sarl
aas
push
test
ds
js
and
push
fcmovnbe
xchg
cmpsb
xchg
int3
pusha
leave
add
add
cmova
jo
inc
iret
jne
mov
mov
adc
inc
xchg
lock
sbb
lods
dec
pop
sti
cwtl
lret
push
test
addr16
adc
ds
inc
pop
int3
fsubrl
js
leave
xor
push
cwtl
cmpb
pop
idivb
push
xchg
mov
mov
call
aam
hlt
or
fldcw
outsl
sbb
jl
lret
stos
cltd
iret
mov
push
adc
inc
xlat
pop
sti
mov
jbe
movsb
sahf
jmp
adc
cmp
mov
push
inc
repz
mov
adc
pop
lret
negl
shrl
mov
out
sub
je
sbb
inc
push
enter
xor
test
mov
clc
xor
pop
fsubrs
jle
mov
mov
pop
dec
add
stos
shl
nop
xor
cmp
fstsw
sti
lret
inc
or
cwtl
jecxz
leave
stos
in
xchg
stos
pop
mov
add
out
test
jno
push
push
js
mov
xchg
push
insl
cmc
push
bound
push
arpl
and
cmc
test
cmpsl
inc
je
out
out
add
pop
pop
dec
mov
shll
push
mov
mov
xor
mov
mov
std
adc
daa
push
gs
cmp
jmp
out
cmp
xchg
cmc
mov
dec
xor
dec
or
mov
sub
loop
cld
dec
mov
outsl
out
loop
fcmove
jecxz
inc
cmp
lret
pop
pop
call
push
leave
mov
mov
jae
sbb
pusha
in
cmp
pop
jg
loopne
mov
cmp
jl
in
mov
xchg
test
push
add
push
jge
mov
cwtl
jp
add
stc
lret
xchg
lock
sahf
sbb
sub
push
insl
mov
and
jno
xchg
jg
xor
lods
movsb
bound
ss
inc
mov
push
out
sarl
mov
repz
pop
out
sbb
ss
and
pop
mov
push
xchg
xchg
pop
lret
movsl
mov
es
pushf
das
jle
xor
mov
and
pop
add
mov
mov
dec
push
push
das
pmuludq
aam
jns
dec
faddp
cmp
stc
push
or
out
js
push
je
adc
aam
je
test
and
data16
mov
push
fldcw
fdivrl
shll
mov
jmp
std
sti
sbb
sbb
mov
out
adc
xchg
dec
popa
andl
loope
fdivl
cmp
test
into
lahf
loope
cmp
inc
mov
push
dec
mov
inc
outsb
hlt
xchg
fs
jle
pop
jl
stc
sbb
out
shll
mov
loopne
mov
hlt
fwait
shrl
std
lret
sbb
call
lods
popa
push
test
jge
out
jae
daa
outsb
push
fcomp
cmpsb
fisubs
pushf
lods
dec
stos
hlt
pop
enter
loope
ljmp
sarb
repnz
and
ja
adc
xor
adc
in
pop
test
push
aad
ret
lock
aad
pop
repz
test
push
jecxz
jg
ljmp
mov
jnp
nop
mov
aam
push
pop
fldt
shll
insl
mov
andb
cwtl
call
dec
shll
xor
add
mov
les
rcrl
cmp
int
test
and
outsl
jge
jge
cmp
cld
mov
out
inc
xor
mov
jns
ret
inc
das
nop
push
movsl
sub
leave
sti
jno
pop
jno
dec
arpl
pusha
xlat
movsl
xchg
mov
mov
dec
xchg
pop
cmp
push
lcall
mov
lahf
sarl
mov
push
fdivl
mov
sbb
aaa
mov
call
pop
hlt
pop
scas
ja
sbbl
mov
jmp
arpl
xor
loopne
aam
mov
pop
jns
xchg
mov
movsl
cmp
icebp
call
or
out
and
xchg
std
push
js
pop
mov
jp
jno
cmp
adc
lds
xor
xor
dec
add
mov
pop
adc
pop
ljmp
fildl
sub
out
jge
push
div
mov
lahf
xchg
icebp
xchg
into
push
xchg
sbb
dec
push
mov
and
xor
sbb
test
andl
adc
mov
dec
or
dec
pop
pop
sub
cmp
test
fldt
stc
cld
rcll
inc
sub
adc
loope
mov
in
and
movsb
push
and
mov
mov
andb
sbb
mov
loopne
lea
shrb
and
inc
fs
test
adcl
cwtl
scas
inc
cmp
jnp
lds
rcll
push
or
arpl
xor
shll
imulb
sub
mov
std
imul
sbb
push
xchg
btc
loopne
pushf
repz
push
mov
and
loope
pop
aam
shll
cli
xchg
sub
or
outsl
jae
outsb
insb
xor
lods
cmp
loopne
loopne
ljmp
cmp
pxor
cli
pop
ljmp
jno
dec
fwait
cld
movsb
arpl
arpl
add
int3
lcall
and
incb
pusha
and
sub
cltd
pop
pop
sbb
xchg
fstcw
into
or
lret
fs
test
loopne
jle
test
cmpsb
xchg
stc
or
lock
vmovapd
pop
aam
mov
orb
mov
clc
enter
ja
dec
mov
mov
and
aam
xor
jns
aaa
jecxz
mov
fwait
cmp
call
popf
in
or
in
xchg
ret
stos
pop
les
add
adc
inc
push
in
clc
pop
test
xchg
mov
dec
shlb
sbb
out
adc
mov
sbb
fidivs
mov
inc
push
push
scas
mov
dec
divb
sub
hlt
dec
inc
repz
cmp
mov
stc
rolb
jle
sbb
xchg
pop
lock
push
das
jno
leave
dec
add
pusha
mov
mov
sbb
dec
addr16
enter
test
call
mov
shlb
cmp
lea
addr16
sbb
arpl
iret
in
and
lods
xchg
cli
jge
das
jae
push
xchg
lret
fsubr
xor
ja
int
pop
jb
outsl
test
dec
test
rorl
pop
ret
jne
mov
aaa
rcl
sti
sahf
xchg
cmp
sbb
add
stos
pop
cs
dec
or
push
and
pop
mov
cld
mov
lods
stc
ss
pop
sarl
nop
aam
mov
mov
or
scas
mov
rclb
sub
mov
push
fwait
xchg
clc
scas
jb
aad
in
orb
ret
jae
lock
pop
cmp
push
cmp
mov
in
push
xchg
nop
fnstcw
lds
test
nop
mov
in
jle
fs
mov
fstpt
adc
jnp
std
push
fnsave
sbb
popf
stc
ja
rcrl
stc
int
leave
mov
out
mov
add
mov
cs
jne
sub
mov
fwait
mov
jb
mov
fs
inc
jbe
fs
mov
cmp
addl
and
ret
divl
mov
cvtdq2ps
cltd
test
jb
loop
add
sbb
add
ljmp
test
pop
pop
es
ss
ss
ss
stos
inc
xchg
mov
movl
push
mov
xor
in
mov
imul
fimull
cmp
dec
pop
leave
mov
cmpsb
shrb
inc
or
pop
fninit
mov
mov
and
push
cs
mov
out
nop
mov
and
insb
sbb
xchg
shll
lods
mov
push
xor
mov
sahf
in
add
leave
mov
lods
paddsb
add
mov
or
dec
fstpt
mov
adc
sub
mov
inc
sub
sbb
icebp
mov
dec
subl
ljmp
push
push
sbb
test
popa
imul
subb
dec
pop
orb
leave
adc
xchg
pop
pop
lods
int
sti
imul
insb
xchg
loope
stc
cwtl
sub
mov
push
pop
pop
mov
add
xor
xchg
sbb
inc
movsl
daa
mov
jno
stos
ret
jle
popa
push
ds
pop
xchg
out
enter
test
dec
or
add
cmp
lcall
xchg
sub
inc
and
pop
mov
mov
jns
cli
lret
arpl
loop
or
testl
adcl
add
jae
jo
shr
pop
xchg
js
jae
cs
outsb
mov
mulb
or
mov
jge
movb
nop
mov
loop
mov
mov
mov
pop
cmp
sbb
inc
imul
mov
in
push
sub
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
xlat
mov
iret
or
push
mov
mov
or
xchg
mov
dec
scas
stos
inc
fistps
sub
shl
sbb
pop
xorb
outsb
xor
mov
jge
dec
or
adc
xor
das
mov
xchg
fcmovb
dec
scas
shlb
leave
mov
sub
scas
or
movb
mov
cld
xor
dec
sbb
jnp
or
outsl
add
jl
and
sbb
fabs
push
mov
inc
push
lahf
xchg
lods
mov
das
xchg
js
ja
dec
dec
push
adc
dec
cmp
lcall
scas
cmp
sbb
ljmp
adc
rorl
push
test
push
cmp
into
push
jge
in
rorb
movsb
jmp
xchg
jle
dec
out
inc
mov
sub
xor
pop
out
lgs
loopne
cmp
cmp
das
mov
ret
and
push
sbb
insb
add
sub
test
orl
xchg
push
sbb
pop
lea
sbb
sbb
push
test
in
xchg
lds
xchg
in
or
pusha
test
test
out
sbb
xchg
testb
mov
push
xor
fwait
dec
xorb
xchg
inc
cmp
pop
cltd
out
cli
cmp
sub
adcl
inc
mov
inc
mov
mov
popf
mov
pop
cmp
mov
pop
sbb
cmpsb
lret
sbb
sbb
ret
or
shl
add
mov
xchg
dec
lret
mov
dec
mov
repz
mov
movsl
les
cmpsl
inc
xor
jmp
nop
bound
mov
or
mov
or
xlat
jp
std
outsl
inc
in
dec
or
nop
test
fisubrl
sbb
push
xchg
jne
dec
pop
mov
mov
fidivs
fyl2x
fdivl
jnp
shll
mov
in
sub
xor
test
sbb
lcall
es
ror
and
repnz
jge
enter
test
xlat
mov
and
jmp
mov
dec
adcb
dec
xchg
mov
fwait
fs
icebp
sbb
stc
lods
fldenv
sub
test
lret
pop
in
pusha
test
mov
xchg
cmpsl
shrb
pop
adc
xchg
jge
add
adc
out
jg
jns
in
imull
pusha
xchg
aaa
in
add
inc
sbb
and
enter
sahf
std
push
push
push
aad
scas
mov
pop
add
rclb
push
jg
ret
pop
std
xchg
push
sti
pop
iret
adc
cmc
push
nop
aaa
lret
mov
and
mov
and
pmulhuw
aas
int3
insl
inc
shrb
cmp
push
pushf
add
mov
cli
xorb
cmp
lock
lahf
ljmp
je
sbb
mov
dec
sub
inc
cmp
jne
jns
dec
les
in
jnp
add
xor
mov
scas
rorl
outsl
jge
mov
aad
and
test
sub
inc
aad
add
xchg
jl
pop
cwtl
subb
incl
cmp
jnp
mov
pop
aas
test
sub
stos
dec
sub
ss
inc
loopne
imul
shrb
jne
arpl
adc
in
adc
mov
and
push
mov
mov
out
sbb
inc
mov
jns
fadd
cmpsl
dec
stc
fisubrl
and
adc
imul
stos
into
addr16
mov
xchg
adc
sbb
sub
mov
or
xor
test
push
mov
dec
mov
fildll
lret
subb
mov
inc
movsb
loopne
mov
in
lea
pop
pop
add
push
rcr
aas
and
lds
xlat
cmp
cld
scas
aad
adc
sub
ror
push
sub
leave
inc
lcall
dec
push
mov
rolb
jnp
insb
xchg
jnp
pop
pushf
mov
jle
mov
jp
push
pop
call
jmp
pop
mov
add
sbb
xchg
mov
inc
jo
and
sub
jle
push
mov
mov
lds
push
arpl
mov
sub
hlt
lahf
pushf
int3
adc
jb
daa
dec
push
sbb
inc
mov
and
sub
xor
lods
jo
adc
jle
xor
mov
aam
or
lret
and
int3
mov
mov
xchg
xchg
out
popa
cmp
pop
stos
jle
daa
int
sub
and
test
repnz
jmp
out
lcall
shl
and
inc
add
pop
fnstsw
stos
pop
int3
insl
cvttps2pi
popa
xchg
maxps
mov
sub
fistpll
sbb
xor
outsl
jmp
lock
cmp
mov
outsl
inc
outsl
push
and
xlat
xchg
addb
dec
xchg
repz
repnz
int
data16
mov
jne
data16
mov
and
mov
push
jo
jle
mov
shl
test
mov
enter
pop
fsubs
cmp
inc
sbb
mov
cltd
or
cmpsb
sahf
dec
jecxz
adc
xor
fxch
jl
rcrl
push
xchg
lods
lods
add
test
rclb
dec
enter
or
addb
dec
test
lds
jbe
cmpsl
aas
cltd
lods
mov
aam
aad
xlat
xchg
loop
xchg
xlat
cld
stos
jbe
popf
or
add
mov
bound
mov
push
pushf
sub
inc
cmp
adc
gs
mov
mov
les
in
dec
sbbl
mov
das
cmpsb
pop
xchg
inc
clc
mov
cld
pop
sti
rcrb
dec
loopne
pop
pop
mov
roll
repnz
pop
roll
hlt
inc
test
dec
cs
orl
push
jo
push
fsub
dec
dec
cmpsb
xchg
cmovnp
sbb
mov
dec
cmpsl
fiadds
ret
icebp
pushf
push
push
gs
js
out
inc
adc
mov
pop
iret
fcom
rclb
lock
loopne
jbe
pushf
lds
imul
and
or
inc
scas
imul
scas
js
fcmovnbe
repz
leave
popa
rcl
lock
mov
cs
shl
fsubrl
stos
mov
pop
dec
insb
mov
jbe
out
test
mov
jg
dec
movsb
iret
jbe
jo
fcomp
fidivs
les
push
add
dec
mov
mov
lret
pop
mov
addr16
call
xchg
jne
xchg
stc
loope
and
shll
ss
clc
mov
ds
insb
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
mov
outsb
arpl
xchg
and
xchg
inc
mov
dec
mov
xchg
mov
cmp
add
jae
mov
aas
inc
aaa
aam
and
mov
pop
je
or
inc
mov
push
fwait
sub
sti
iret
ret
movsl
or
orb
mov
ret
imul
xchg
lcall
xor
push
xor
jae
mov
popf
cld
das
fisttps
insb
icebp
jb
js
jb
imul
hlt
jne
sub
or
in
or
xorps
cld
push
push
mov
mov
push
push
movsb
cmp
mov
sbb
aas
ljmp
jb
in
cmc
cmp
adc
les
insl
xchg
push
mov
push
fisubl
mov
cmc
push
mov
inc
cmpsb
shll
in
xadd
jecxz
addl
dec
into
jge
sub
mov
inc
jl
dec
test
call
mov
mov
fsubrl
xor
enter
inc
mov
popa
loop
sub
mov
fcmovnb
mov
pop
fdivs
movb
test
loop
hlt
and
mov
xchg
jle
mov
adc
jge
add
mov
mov
xor
dec
cmpb
xchg
xchg
jmp
lahf
inc
add
jle
lcall
mov
loopne
in
dec
dec
xchg
lahf
lret
jae
in
sbb
jo
pop
lock
mov
pop
add
xlat
or
lret
insb
out
loop
repz
pop
scas
inc
fwait
sbb
addb
loopne
ficoms
mov
pop
xor
xchg
loop
pop
sub
pop
adcl
inc
pop
pop
mov
jb
jle
push
inc
dec
ds
jae
cmc
daa
sti
add
test
push
jmp
nop
stos
jle
mov
push
jl
and
fisubrs
gs
mov
sbb
sub
fs
dec
xchg
jge
negl
sub
imul
pop
nop
sarl
mov
cmp
dec
mov
je
and
cmpsb
mov
pop
mov
mov
sbb
add
sbb
in
xlat
cmp
pop
sbb
lods
pushf
mov
inc
adc
xor
fadd
jae
repnz
dec
sub
test
sub
lods
and
fcmovb
outsb
or
xor
dec
test
or
mov
mov
rcrb
jbe
sbb
mov
test
or
mov
jne
mov
jge
cli
add
lret
mov
xchg
and
test
mov
testl
mov
adc
mulb
jmp
movsb
repnz
push
lea
pop
sti
lds
data16
sbb
out
push
push
je
fisubs
cwtl
pop
shlb
ja
adc
xor
sbb
push
sbb
ret
add
aad
add
pop
mov
and
das
sahf
mov
adc
mov
mov
xor
jle
out
push
xor
stos
push
cmp
out
mov
jb
mov
sbbb
adc
scas
stc
push
jne
in
out
xlat
dec
jns
cs
test
push
adc
cltd
jns
fs
xor
push
push
sbb
sbb
mov
and
push
push
jne
inc
mov
mov
or
test
mov
push
sbb
ljmp
les
addr16
mov
xor
shlb
dec
lret
fdivl
dec
cmpsb
or
out
mov
dec
fldenv
ret
xchg
test
popl
sub
push
mov
fs
and
idivl
mov
adc
cmp
pop
and
and
enter
mov
xchg
cmpsl
mov
xchg
mov
dec
mov
mov
push
or
icebp
jns
mov
and
push
das
sub
and
test
adc
mov
stc
gs
notl
out
pusha
mov
mov
cltd
outsl
out
dec
sbb
testl
jno
cld
les
mov
sbb
inc
dec
in
xchg
daa
imul
into
mov
popl
shlb
int3
inc
cmpsl
adc
pusha
loope
push
addb
roll
inc
add
adc
mov
mov
push
jl
subb
xchg
inc
scas
arpl
sub
sub
pusha
hlt
jb
and
cwtl
pop
rorb
dec
jp
cld
xchg
rol
push
adc
xchg
pushf
sub
ret
fisttps
and
adc
in
jge
pop
xchg
scas
out
push
pop
mov
rorl
enter
push
inc
xlat
or
loop
insl
loope
xchg
enter
pop
sbb
out
push
lds
ss
sub
repz
push
inc
adc
push
inc
into
jl
fidivrs
nop
push
pop
or
jns
in
ljmp
icebp
imul
repnz
sub
imul
stc
sar
rcrl
mov
xor
cmp
inc
fs
jl
call
stos
add
and
sti
mov
inc
repz
mov
jae
add
cmovg
aam
cmp
cwtl
les
push
ljmp
adc
cld
fstl
pushl
xor
mov
mov
flds
mov
shll
fidivrs
xor
push
fisubrs
repz
imul
or
popf
and
test
out
xchg
cmp
mov
jo
scas
gs
mov
shl
xacquire
cmp
shlb
cmp
xchg
idiv
sarl
pop
jmp
jg
out
adc
sbb
push
add
cmp
mov
or
je
and
sub
sarl
divb
aam
repz
dec
add
es
and
rcrb
adc
dec
ficomps
movsb
and
andl
xchg
rclb
mov
out
xchg
shrb
push
dec
cmp
ja
and
mov
adc
ja
pop
mov
or
xchg
leave
andb
sub
jp
or
jle
cld
mov
pop
ret
inc
xchg
jle
cltd
inc
mov
xchg
push
orb
idivl
repz
adc
fmuls
inc
dec
clc
outsl
or
lds
mov
jbe
cli
fcoms
in
dec
push
inc
xchg
repnz
lods
movsb
mov
and
ljmp
add
cmpsl
cmp
bound
add
and
mov
inc
mov
hlt
dec
clc
dec
js
sbb
mov
mov
inc
idiv
mov
insb
jg
jmp
cs
leave
into
gs
push
pusha
push
jnp
mov
xchg
imul
add
cs
adc
dec
shrl
loopne
dec
or
xchg
xchg
add
mov
mov
mov
jb
mov
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
jmp
fnsave
push
adc
adcb
adc
xchg
nop
pop
mov
outsb
push
shlb
adc
in
inc
push
nop
sub
sarl
jo
bnd
pop
push
and
mov
pop
cmp
ds
jo
xchg
faddl
cli
mov
cmpsb
clc
daa
jmp
pusha
jne
mov
pop
imul
test
sub
jnp
adc
bound
mov
mov
sub
cmp
roll
xchg
cmp
arpl
cmp
jb
mov
jne
xor
xchg
jnp
xorb
push
shll
movsb
adc
mov
push
cld
subl
aaa
hlt
pushf
lcall
mov
push
shll
xchg
inc
jecxz
inc
out
push
popf
jbe
mov
xchg
test
or
aam
sbb
inc
adc
mov
push
inc
test
jge
lock
mov
jl
or
nop
mov
aad
mov
bswap
out
jge
movsl
push
test
outsl
jae
pop
and
sbb
call
ret
push
mul
dec
mov
jbe
cmp
scas
dec
mov
lods
mov
pusha
or
ss
xchg
adc
loope
cmp
ret
dec
add
or
hlt
or
ds
icebp
jl
hlt
inc
push
lahf
dec
pop
out
mov
mov
add
pop
sbbl
mov
shll
les
ret
jmp
and
iret
xchg
nop
mov
nop
fidivrs
inc
push
jns
push
js
dec
aam
imul
sbb
add
jmp
outsb
push
insb
mov
es
mov
mov
test
or
pop
mov
dec
sub
fsts
clc
cli
adc
sub
xor
into
xchg
push
sub
sti
gs
jbe
incl
mov
dec
and
cmpsl
fidivl
sub
sbb
sbb
mov
jp
in
and
bound
dec
add
subl
jmp
mov
push
ret
scas
dec
xor
xor
sub
pop
cmpsl
mov
movsl
lods
out
or
xchg
inc
bound
mov
lret
cmp
fs
jbe
dec
mov
fimull
iret
add
icebp
pop
xchg
push
lods
out
xchg
lret
cltd
xchg
movsl
fwait
or
cltd
mov
in
mov
sahf
inc
imull
jno
add
mov
daa
inc
fbstp
ds
mov
and
les
dec
mov
mov
rcrl
test
std
outsb
sbb
mov
outsb
dec
cmp
test
mov
fsubs
pop
aam
popa
sub
inc
in
adc
cmpsb
inc
rcrl
push
stos
imul
inc
xlat
ret
xchg
jg
pop
ljmp
mov
nop
pop
sub
hlt
cmp
inc
mov
pushf
ss
cmp
and
mov
rcl
xchg
mov
jns
stc
mov
adc
push
push
cmp
sbb
enter
sti
es
js
call
inc
ja
stos
mov
xlat
jns
pop
mov
fisttpll
jnp
push
shlb
rorb
lds
repnz
push
imul
jge
sub
fidivrs
mov
push
push
inc
cwtl
cmp
out
jp
jb
sbb
mov
push
lods
je
add
mov
jp
lahf
out
cmp
sub
inc
or
sub
jb,pt
popf
call
inc
clc
inc
push
orl
scas
adc
call
clc
sbb
je
lahf
dec
leave
out
out
inc
and
pop
and
roll
lods
cltd
cmp
adc
and
push
pop
pusha
xchg
push
shll
mov
enter
adc
fildl
addb
popa
neg
add
repz
mov
xchg
mov
mov
inc
add
push
out
inc
or
es
mov
out
out
movsb
iret
in
popf
pop
add
mov
stos
pop
or
data16
sbb
push
js
sti
dec
jae
sbb
pop
add
cmp
xchg
adc
xchg
out
lret
xchg
jnp
mov
sbb
sub
cld
inc
ljmp
into
dec
adc
dec
pop
jg
rcll
jp
aad
fidivl
lcall
mov
add
fsts
mov
xor
stos
in
sub
pop
xor
repnz
pop
mov
add
insl
pop
aam
setl
pop
insl
mov
cmpsb
sub
jo
ds
bswap
js
sbb
pushf
bound
les
std
lret
popf
test
shlb
sbb
mov
sbb
sub
xor
data16
mov
cmpb
mov
add
fwait
js
mov
add
sbb
cmpsb
cs
mov
movsb
into
and
adc
aas
popa
jg
loope
or
sbb
xor
cltd
push
fldpi
jns
popa
inc
imul
add
jmp
pop
add
cld
cmpl
add
inc
test
hlt
addr16
insb
push
dec
aad
and
enter
ja
iret
mov
push
jnp
xor
negb
adc
cmp
data16
cmp
and
lret
test
loop
pop
adc
sbb
loopne
mov
pop
arpl
pop
push
mov
or
mov
dec
dec
and
push
mov
cmp
test
push
mov
push
xchg
sub
ret
sub
ret
fs
ret
fdivrs
bound
sub
mov
push
je
push
and
aam
adc
mov
sub
jnp
inc
lret
movsl
cmpsb
jo
incb
push
adc
push
cwtl
push
cwtl
inc
popa
test
nop
mov
add
loop
or
imul
testb
ret
adc
and
pop
pop
js
fcoms
outsb
fsubp
and
cld
push
push
in
jle
ret
call
mov
lret
push
inc
in
leavew
pop
push
rcl
cmpl
mov
jmp
shrl
out
popl
pop
adc
nop
testb
nop
js
dec
dec
inc
mov
lea
rcr
mov
mov
or
push
push
adcl
add
jmp
repnz
insl
jg
aam
es
jecxz
in
scas
pop
push
mov
lock
xchg
and
adcl
push
fs
jbe
jp
mov
into
mov
repz
fbld
mov
and
in
ds
das
int
jo
stos
xlat
jae
mov
push
lea
jmp
xorb
test
scas
std
ja
out
xchg
sub
sbb
xlat
adc
jo
stos
lret
mov
pop
xchg
out
loop
sub
inc
push
fdivrs
loopne
or
jmp
push
mov
shl
shl
mov
mov
jmp
test
fcoms
stos
add
ja
push
pop
pusha
xchg
out
movsl
in
int3
sbb
fidivs
aam
stos
pop
rsm
loop
xchg
mov
xchg
add
adc
rorb
idiv
movsl
insl
adc
xlat
loop
out
mov
add
in
aas
imul
movsl
cli
push
adc
pop
les
pop
repnz
sbb
jno
das
mov
mov
nop
xlat
shrd
cmp
imul
jge
mov
imul
mov
adc
jle
or
fimuls
jle
pop
xchg
jge
inc
dec
xchg
mov
xchg
sub
jo
js
jns
cmp
in
push
sub
add
add
or
mov
xchg
push
cmp
cmpsl
insb
outsb
imul
bound
stc
xchg
dec
and
js
adc
sar
fidivrs
gs
adc
sahf
icebp
push
sbbl
sbbl
nop
movsl
sbb
lds
or
outsb
push
sbb
aaa
pushl
sub
sar
stos
incl
js
sbb
shl
cmpsb
pop
or
xchg
pop
mov
push
popf
imul
test
inc
loop
adc
pop
mov
push
fcoms
dec
dec
push
xor
fmul
in
mov
add
repnz
pushf
mulb
jg
test
scas
dec
mov
es
es
push
outsw
pop
dec
scas
repz
test
aaa
mov
imul
inc
outsb
testl
call
jmp
lods
sub
mov
dec
shl
add
xchg
pop
inc
cmp
les
aaa
shlb
xchg
mov
out
mov
cli
mov
mov
mov
shlb
jno
out
lds
jno
and
fisttps
std
adc
sub
cmp
or
stc
nop
jp
jae
loop
and
outsb
and
std
mov
arpl
cmp
jmp
sbb
ljmp
add
ds
lods
xor
addr16
loope
iret
js
insl
pushf
or
xchg
jmp
sbb
pop
mov
scas
subl
subl
nop
xchg
push
add
and
pushf
push
xchg
jg
data16
push
and
cltd
loop
mov
inc
testb
int3
shlb
sub
inc
add
in
xor
mov
jg
or
repnz
mov
dec
jg
cmp
pop
cli
push
fisubrl
nop
test
mov
fists
lahf
and
mov
jge
mov
xlat
pop
pop
cli
cmp
push
lock
push
mov
dec
int
sti
cmp
les
insb
cs
cmpsl
jmp
push
jge
popa
fwait
addl
iret
int3
dec
xchg
bound
mov
or
loope
cld
out
into
fdivrl
push
cmp
adc
rcl
pop
adc
insb
push
cmp
test
jmp
or
xchg
pop
inc
jo
daa
pop
adc
or
scas
std
jmp
fstp
lret
in
loopne
fidivrl
ss
dec
jle
fwait
popf
dec
jb
popa
mov
lahf
sarb
test
inc
lret
mov
mov
dec
push
addr16
cli
mov
mov
mov
and
dec
inc
inc
and
imul
xchg
mov
jge
aaa
jno
rclb
rep
repnz
outsb
push
fld
int
daa
ja
leave
ror
aam
leave
js
das
jo
mov
add
pushf
push
and
jne
mov
rcl
daa
test
sbb
dec
sysenter
push
push
cmpsl
sub
dec
js
daa
or
fcompl
insb
stc
rcll
call
adc
lret
out
mov
out
jmp
and
ret
cmp
push
sub
in
sub
push
ret
mov
sarl
push
dec
xchg
aaa
rcrl
mov
int
mov
pop
call
rcr
mov
repnz
movsl
ja
mov
pop
mov
cld
in
adc
mov
daa
arpl
shrl
sub
push
aam
addl
xor
out
adc
test
jo
xchg
loope
repz
mov
icebp
push
loopne
cld
push
test
arpl
lods
mov
in
jp
dec
mov
xlat
mov
or
mov
loope
xlat
psrad
pop
cmpb
jne
sbb
jo
sub
pop
jecxz
js
movsl
leave
xchg
jl
jge
mov
or
popf
fisttps
cltd
sub
ret
fisubrl
cmp
call
repz
test
mov
out
div
or
imull
outsb
or
mov
cld
mov
and
fstpl
push
icebp
pop
cs
sbb
mov
push
sahf
ret
mov
add
and
xor
std
pop
add
inc
adc
and
mov
lcall
push
das
sub
daa
gs
mov
push
aad
pop
sbb
cmp
xchg
sbb
lods
pop
mov
dec
arpl
fistpl
bts
mov
mov
jnp
mov
pop
jne
repz
in
xchg
mov
xor
leave
push
push
pop
and
sarl
loop
or
cmpsb
mov
stc
jne
mov
push
fimull
xor
bound
in
and
mov
sahf
adc
out
pop
enter
mov
test
jge
push
dec
movsb
pop
cli
add
cli
sbb
pop
aas
repnz
test
and
mov
or
cmp
int
scas
inc
shl
mov
mov
shl
cmpsb
push
imul
pop
mov
rcl
cmp
lret
loopne
jg
dec
push
sbb
sti
iret
jge
out
call
jne
or
jae
dec
ss
xchg
popa
inc
leave
jecxz
sbb
outsb
test
addr16
cmp
lds
xor
loopne
cmp
pop
ficoml
inc
icebp
adc
in
xchg
inc
and
adc
rorb
rcll
ljmp
in
xor
pop
shll
push
aam
jns
outsl
lcall
cltd
xor
add
jl
mov
push
jmp
test
ljmp
adc
in
ja
add
movsb
arpl
enter
cmpsb
and
xor
dec
js
data16
ja
mov
hlt
lss
jno
push
fdivs
lods
test
pop
jmp
das
ljmp
inc
cmpsl
shlb
jne
hlt
cmpl
adc
out
mov
mov
jl
addr16
xchg
xchg
scas
adc
push
fs
ja
mov
cmc
and
adc
xchg
sub
in
hlt
lcall
cmp
inc
into
rcll
addr16
sub
ljmp
mov
adc
js
imull
add
add
inc
adc
arpl
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
jmp
sti
icebp
lods
mov
outsb
fs
insl
mov
adc
mov
mov
sub
rorl
cmp
xchg
xor
push
cli
mov
outsb
in
xor
sbb
scas
aas
sub
xlat
pop
arpl
add
lret
add
jecxz
pop
sub
sbb
sub
int
or
cs
repz
fsubrs
cs
je
mov
pop
mov
sti
clc
sbb
sbb
fidivrs
popa
dec
dec
les
out
pop
mov
cmc
mov
ljmp
dec
pop
add
mov
push
jg
and
inc
fimull
push
and
mov
je
inc
mov
inc
lret
fildl
xor
add
add
je
pop
mov
mov
xchg
bound
xor
clc
inc
aas
and
das
sbb
add
push
cmp
test
jmp
ss
ljmp
mov
stos
inc
adc
xchg
shll
mov
add
xchg
movb
ss
jp
mov
test
push
ja
xchg
cli
push
sub
jl
mov
orb
out
movsb
into
int
popf
jmp
pop
push
lea
ja
les
pop
mov
fucompp
ret
cwtl
push
std
mov
or
sbb
sub
pop
mov
xor
jl
pop
imul
test
fcomip
add
loope
out
and
lods
or
cmp
xor
mov
push
xchg
rolb
out
test
enter
xlat
cmp
bound
xchg
adc
push
cs
scas
or
bound
fnstsw
jns
testb
jae
iret
outsl
frstor
imul
mov
shlb
push
movsb
pop
aad
in
dec
push
xchg
movsb
pop
daa
push
lret
xchg
aas
lods
pop
ret
pusha
push
pop
mov
stos
int
pop
push
mov
scas
adc
inc
jae
repnz
not
cld
fidivrs
sti
xchg
out
sti
aaa
ret
loopne
movsl
cld
in
popf
movsb
test
in
mov
stos
shlb
loopne
mov
rcrb
cwtl
push
iret
data16
iret
mov
pop
ficoms
rcl
arpl
leave
adc
imull
lret
je
xor
cltd
and
je
xor
in
repz
lods
sahf
sub
test
lea
fistl
movl
xchg
inc
mov
rolb
cmp
adc
xor
pop
in
fnstsw
lahf
fsubp
inc
lods
dec
mov
add
aam
loopne
push
sbb
es
sbb
fwait
mov
orb
sbb
lahf
and
xchg
lds
push
adc
jmp
out
cmp
mov
mov
cmp
movl
lods
nop
icebp
shlb
scas
leave
test
push
in
lea
out
out
or
fdivr
stos
inc
enter
sbbb
mov
out
mov
sub
addr16
cmp
enter
jnp
mov
pop
and
lds
in
jbe
stos
dec
pop
add
inc
data16
xchg
ss
dec
and
mov
cmpsb
jo
pop
pop
push
jo
ljmp
lahf
sbb
cmpl
rorb
scas
mov
inc
push
testb
push
jne
divb
pop
clc
cmpsb
callw
fcmovnu
mov
es
mov
cmp
mov
or
xor
stc
stos
fisttpl
movsb
dec
sbb
ljmp
mov
xchg
out
push
ja
or
scas
mov
loop
movb
jno
sub
push
mov
xchg
ss
cltd
dec
jo
lods
sbb
sar
scas
dec
xor
repz
mov
fdivrp
or
mov
testl
pop
rclb
push
jne
mov
out
push
movsl
popf
icebp
jns
add
cmp
xchg
mov
mov
nop
mov
xor
negl
pop
sbb
mov
aas
iret
add
push
fwait
call
out
sub
xor
pop
imul
shll
or
xchg
mov
mov
addl
stos
push
sbb
shlb
fistps
insb
cmc
inc
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
cmp
jae
xorl
shrd
movl
shr
ret
adcl
mov
xorl
xor
sbbl
and
shr
ret
xor
xor
ret
push
mov
sub
cmpl
movl
movl
jmp
movl
notl
jle
push
pushl
call
notl
andl
andl
sbbl
adcl
movl
mov
incl
mov
adcl
movl
mov
movb
sbbl
movb
and
movb
adc
movzbl
andl
mov
sbbl
sub
addl
imul
movzbl
andl
push
and
andl
mov
addl
movb
movb
andl
movb
movb
negl
mov
mov
negl
add
adcl
imul
sbbl
mov
subl
or
mov
sbbl
and
mov
movl
cmp
ja
mov
mov
mov
or
mov
mov
cmpl
not
mov
movl
jmp
movl
jb
push
push
call
dec
xor
add
mov
add
adc
xorl
xor
adc
mov
movzwl
addl
movzwl
sbbl
shr
notl
or
sub
mov
subl
movb
notl
movb
mov
orl
mov
xor
xorl
add
mov
or
mov
movzbl
and
cltd
sub
push
cmpl
not
mov
mov
jmp
mov
je
push
push
call
mov
adc
xor
neg
adcl
or
adc
pop
adcl
idiv
mov
addl
movb
addl
movb
xorl
mov
mov
negl
add
movzbl
movzbl
xorl
cltd
idiv
mov
movl
cmp
jae
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
idiv
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
sub
mov
and
xor
imul
mov
push
sub
push
movl
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
or
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
and
add
cmp
jb
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
lea
add
movl
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
xor
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
add
imul
xor
mov
div
mov
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
xor
and
mov
add
mov
add
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
push
push
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
push
mov
mov
mov
push
push
push
call
push
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
or
xor
mov
xor
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
and
push
cmpl
not
mov
not
not
jmp
movl
movzbl
je
push
pushl
pushl
push
pushl
call
sbb
adc
adc
subl
add
push
adc
mov
cmpl
mov
mov
mov
jmp
mov
movl
ja
pushl
push
pushl
push
push
call
sbb
adc
xor
mov
mov
sub
sub
xor
add
xor
or
sub
and
addl
addl
sbb
mov
shrd
shr
cmpl
movl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
push
pushl
call
addl
orl
mov
add
mov
add
mov
sub
mov
mov
mov
sub
sub
xor
movzwl
sbb
mov
neg
xor
sub
or
mov
mov
cmpl
mov
mov
jmp
movl
mov
jne
call
dec
addl
xor
sub
inc
andl
mov
mov
adc
shl
cmpl
mov
movl
movl
jmp
mov
movzbl
jle
push
push
call
mov
adc
mov
adc
xor
inc
xor
or
or
notl
add
movl
mov
cmpl
mov
mov
jmp
mov
jge
pushl
push
pushl
pushl
call
andl
or
add
xor
or
shrd
xor
orl
shr
xorl
mov
and
mov
xor
or
or
cmpl
not
mov
mov
movzwl
jmp
mov
mov
jge
push
pushl
call
movzwl
xor
movzwl
add
mov
or
mov
sub
or
addl
xor
mov
mov
and
mov
mov
mov
mov
inc
mov
xor
mov
mov
mov
mov
cmpl
mov
movl
jmp
movl
movl
jle
pushl
push
pushl
pushl
call
not
andl
adc
sub
xor
shl
orl
xor
and
shld
sub
shl
inc
mov
orl
xor
addl
xor
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
cmpl
movl
movl
not
jmp
mov
movzwl
jle
push
push
push
call
sub
adc
or
sbb
adcl
sbbl
xor
adc
mov
mov
mov
and
mov
xor
shld
sbbl
shl
xor
xor
cmp
jne
movl
cmp
movl
je
cmpl
mov
movl
jmp
mov
not
jbe
push
pushl
push
pushl
call
xor
mov
add
adc
and
adc
not
mov
subl
mov
cmpl
mov
movl
mov
jmp
movl
mov
jg
pushl
pushl
pushl
call
subl
mov
add
add
add
xor
shl
mov
xorl
xor
shr
adcl
or
mov
mov
movzwl
or
mov
mov
and
mov
mov
cmpl
movl
movl
movl
jmp
movl
ja
pushl
push
call
and
orl
subl
subl
sbbl
orl
and
cmpl
movl
movl
movl
movl
jmp
movl
je
push
call
sbbl
movl
orl
andl
adcl
sbbl
xor
subl
cmpl
movl
movl
movl
jmp
movl
not
jb
pushl
pushl
call
xorl
sbb
add
addl
subl
movl
and
push
pop
sbbl
sub
mov
add
mov
lea
mov
mov
mov
sub
and
mov
xor
or
xor
mov
xorl
xor
xorl
shr
subl
shl
or
add
mov
cmpl
movl
mov
jmp
mov
mov
jae
push
call
add
sbb
or
movl
and
movl
add
mov
mov
andl
xor
movl
shr
shl
adcl
or
push
orl
lea
adcl
push
adcl
lea
push
call
cmpl
mov
movl
jmp
movzbl
jbe
push
push
pushl
pushl
pushl
pushl
call
orl
addl
movzwl
sub
mov
movzwl
sub
mov
sub
movl
sub
mov
mov
subl
xor
subl
shr
mov
xor
shl
or
cmpl
mov
mov
mov
jmp
movl
mov
jne
call
add
sub
add
adcl
mov
or
movzwl
or
push
lea
sub
push
or
mov
mov
sbb
shrd
sbb
shr
xor
add
xor
or
sub
imul
mov
notl
mov
xor
addl
xor
or
xorl
lea
adcl
push
adcl
shl
subl
call
mov
mov
xor
shl
cmpl
mov
movl
mov
jmp
movl
jne
push
push
call
xorl
xorl
add
orl
and
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
push
call
mov
mov
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
mov
rol
mov
xor
mov
cmp
je
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
sub
mov
adcl
or
movl
mov
jne
sub
mov
adcl
mul
ret
push
mul
cmpl
movzbl
movl
push
pop
jmp
mov
mov
je
push
push
pushl
push
push
push
pushl
call
mov
sbb
mov
not
movzwl
adc
mov
mov
add
mov
xorl
sbb
mov
adc
mov
xorl
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
push
mov
and
sub
push
push
push
mov
pushl
call
test
jg
movl
movl
movl
push
dec
movl
mov
xor
mov
andl
push
notl
push
orl
push
call
sbbl
push
andl
push
and
and
push
subl
push
andl
call
cmpl
mov
movzwl
notl
movl
jmp
movl
jbe
push
push
pushl
call
neg
subl
dec
sbb
subl
xor
or
mov
sub
or
mov
mov
xor
or
cmpl
movl
not
jmp
mov
jg
push
push
push
push
call
sbbl
xor
movzwl
and
orl
xor
mov
xor
or
mov
movl
movl
or
movl
sbb
movl
mov
xor
or
sub
add
movl
cmpl
mov
mov
jmp
mov
movl
jg
push
push
pushl
call
dec
xor
inc
adc
movl
xor
add
xor
mov
adcl
movl
cmpl
mov
movl
jmp
mov
mov
jg
push
push
call
addl
mov
sbb
sbbl
mov
mov
sub
xor
xor
or
xor
movl
or
sub
sbb
mov
cmpl
mov
movl
notl
jmp
mov
movzbl
jg
pushl
call
xor
movzbl
sub
mov
mov
sub
add
adc
xor
mov
mov
mov
andl
or
or
mov
or
mov
sub
mov
mov
sbb
or
mov
xor
subl
xor
addl
and
adcl
and
cmp
movl
jne
cmp
jne
movl
decl
movl
xor
movl
adc
movl
xor
or
mov
sub
xor
movl
mov
and
mov
sub
adc
mov
orl
imul
subl
and
notl
imul
mov
xorl
pushl
or
imul
adc
xor
mov
movl
div
mov
xor
cmpl
movl
notl
mov
jmp
movl
je
pushl
pushl
push
pushl
push
call
sbb
adcl
or
mov
sbb
mov
add
cmpl
mov
mov
not
jmp
mov
jb
pushl
push
call
neg
mov
mov
xor
sbb
sub
sbb
cmpl
movzwl
mov
movl
jmp
movl
jl
pushl
call
sbb
or
addl
and
sub
xor
add
mov
sub
dec
mov
sbbl
sub
addl
or
xor
adcl
pushl
pushl
addl
call
addl
pushl
call
movl
cmpl
mov
movl
not
jmp
mov
mov
jge
pushl
call
and
add
adc
xor
movl
adc
movl
xorl
movl
movl
movl
mov
mov
xor
mov
mov
subl
add
movzwl
mov
adc
add
mov
add
adc
and
xorl
mov
orl
and
mov
movl
movl
subl
movl
orl
movl
dec
cmp
jne
and
movl
mov
xorl
mov
subl
movl
mov
subl
call
andl
lea
mov
cmpl
movl
movzbl
jmp
movl
jb
push
call
adc
sub
and
andl
mov
xor
add
sub
imul
xor
sub
lea
mov
sub
mov
sbb
mov
add
mov
mov
decl
xor
shl
and
shr
movl
or
mov
or
mov
mov
cmpl
movl
mov
movl
jmp
mov
movl
ja
pushl
push
push
pushl
call
and
xorl
add
sub
addl
addl
cmpl
not
mov
jmp
not
jae
push
call
adc
subl
and
xor
add
adc
and
mov
cmpl
not
mov
jmp
movl
movl
jbe
push
pushl
call
or
andl
and
sub
adc
mov
and
mov
mov
mov
shrd
shr
and
mov
not
mov
movl
xor
xor
andl
or
mov
sbb
mov
mov
orl
push
addl
pushl
subl
lea
andl
push
adcl
shl
orl
call
addl
lea
addl
push
mov
mov
sbbl
lea
orl
push
mov
orl
lea
adcl
mov
adcl
mov
mov
push
call
subl
push
andl
push
pushl
xorl
call
andl
mov
or
mov
and
mov
cmpl
mov
movl
mov
jmp
mov
jg
push
pushl
push
push
push
call
sbb
xor
or
mov
adc
xor
adc
mov
shr
not
shl
or
sub
mov
or
xor
mov
notl
lea
xor
mov
lea
movzbl
or
mov
cmpl
mov
movl
movl
mov
jmp
movl
movl
je
push
call
or
add
mov
or
mov
xor
inc
add
not
mov
mov
and
mov
cmpl
mov
mov
mov
jmp
movl
mov
jne
push
call
or
sbb
addl
add
orl
mov
mov
sub
sub
movzwl
sbb
mov
and
sub
cmpl
movzbl
mov
movl
jmp
movl
jae
pushl
call
add
add
movzbl
add
add
movl
add
lea
andl
xor
cmpl
mov
mov
movl
jmp
mov
jg
push
pushl
pushl
push
push
call
or
adc
xor
mov
adc
mov
movl
movl
movl
cmpl
movl
not
jmp
movl
not
jle
push
call
subl
not
orl
and
and
mov
or
mov
movl
mov
mov
add
mov
not
mov
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
shr
or
or
mov
mov
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
cmpl
movl
mov
movl
jmp
movl
jbe
push
pushl
push
pushl
push
call
adcl
sbb
sub
adc
mov
xor
mov
mov
mov
sub
xor
movl
cmpl
mov
movl
movl
jmp
mov
mov
jle
push
push
pushl
pushl
call
adcl
notl
dec
add
subl
sbb
not
sub
movl
mov
subl
mov
xor
xor
mov
xor
and
adc
mov
sub
xor
or
and
cmpl
mov
mov
not
jmp
mov
jl
push
push
call
inc
xorl
and
sub
sub
add
mov
add
xor
mov
or
movl
movl
mov
sbb
mov
add
xor
sub
adcl
mov
or
imul
adc
xor
mov
or
div
subl
sub
and
mov
movl
sub
movl
movl
mov
mov
adc
movl
cmpl
movl
mov
movzbl
jmp
mov
movzbl
jg
pushl
push
push
push
call
or
xor
or
or
mov
sub
add
inc
movl
mov
sbb
mov
movl
movl
mov
xor
mov
imul
adc
add
xorl
and
adc
sub
cmpl
mov
movl
mov
mov
jmp
mov
je
pushl
push
push
call
add
adc
neg
and
not
mov
sub
or
mov
mov
cmpl
mov
movl
mov
movl
jmp
movl
jne
push
pushl
push
call
inc
or
dec
sub
adc
adc
or
add
sub
add
mov
xor
adcl
div
not
mov
sub
and
mov
add
addl
mov
cmpl
mov
mov
mov
jmp
mov
mov
jle
push
push
call
add
add
sbbl
subl
xorl
movl
movl
dec
movl
cmpl
movzbl
mov
jmp
mov
jne
pushl
pushl
pushl
push
call
sbb
orl
movzwl
adc
add
mov
mov
add
mov
xor
add
mov
andl
xor
movl
div
add
and
mov
or
cmpl
movl
mov
jmp
movl
movl
jg
push
push
push
call
mov
sbb
mov
add
mov
movzbl
sub
subl
decl
adc
cmpl
not
mov
jmp
mov
movl
jae
push
push
push
push
call
xor
sbbl
mov
sbb
mov
inc
mov
mov
sub
sbbl
cmpl
mov
movl
mov
jmp
mov
movl
jg
pushl
call
mov
adc
mov
mov
adc
mov
mov
xor
xor
or
mov
sub
sub
adcl
mov
and
movl
movl
movl
and
movl
mov
sub
mov
orl
xor
sbb
xor
push
xor
pop
orl
div
mov
andl
xor
div
mov
or
sub
xor
mov
xor
movl
inc
mov
movzwl
sbb
mov
xor
div
imul
adcl
xor
xor
sub
imul
xor
dec
mov
adc
movl
cmpl
movzwl
movl
mov
jmp
movl
mov
jg
pushl
push
pushl
pushl
pushl
pushl
push
push
pushl
push
push
call
adc
xor
mov
adc
mov
mov
xor
mov
xor
or
xor
mov
movzwl
sub
or
or
movl
movl
cmpl
mov
movl
movzwl
jmp
mov
movl
ja
pushl
call
xor
dec
adc
movzbl
sbb
xorl
mov
and
mov
xor
subl
div
mov
sub
mov
orl
imul
xor
add
mov
or
add
xor
sbb
mov
sub
movzbl
or
mov
mov
movl
cmpl
notl
mov
mov
mov
jmp
notl
mov
jg
pushl
call
notl
adc
adc
sbb
movl
mov
or
and
notl
and
or
xor
cmpl
mov
mov
movl
jmp
movzwl
mov
jg
pushl
push
pushl
call
movzbl
sbb
add
negl
sub
dec
mov
movl
movl
movl
cmpl
movl
movl
movl
mov
jmp
mov
jb
pushl
push
push
call
mov
and
mov
neg
xor
andl
and
movl
mov
xor
and
add
xor
add
or
or
cmpl
notl
movl
mov
movl
jmp
movl
jle
push
pushl
push
push
pushl
pushl
pushl
push
call
adc
mov
add
or
sub
neg
sbb
sub
mov
inc
movl
cmpl
mov
movl
mov
jmp
mov
mov
jne
push
pushl
call
decl
decl
sbbl
and
movl
movl
movl
xor
mov
shr
xorl
sub
cmpl
movl
mov
mov
mov
jmp
mov
movl
jbe
pushl
pushl
call
add
xorl
mov
sbb
and
adc
or
xor
mov
lea
sbbl
push
adcl
call
addl
mov
adc
or
cmpl
mov
mov
jmp
movl
movl
jbe
push
pushl
call
sub
mov
xor
or
sub
imul
negl
sbbl
and
mov
orl
or
xor
and
lea
adc
mov
movl
movzwl
xor
movl
movl
xor
xor
or
movl
movl
and
movl
cmpl
mov
not
movl
movl
jmp
mov
notl
jg
push
call
sbb
orl
xorl
add
xor
xorl
xor
xor
xor
mov
sub
or
movl
sbbl
movl
mov
mov
mov
sub
xor
mov
sub
and
cmpl
movzbl
movl
jmp
movl
movl
je
push
push
push
push
push
call
sub
or
notl
sub
xor
add
add
mov
sbb
sub
and
sub
or
mov
sbb
lea
mov
mov
add
mov
add
mov
mov
imul
sbbl
and
cmpl
mov
mov
mov
movzbl
jmp
notl
mov
jbe
pushl
pushl
pushl
push
pushl
pushl
call
xorl
add
movzbl
adc
not
or
imul
mov
lea
mov
addl
movl
movl
movl
movl
mov
sbb
mov
or
mov
movl
xor
andl
xor
sbbl
mov
call
cmpl
movl
movl
movzbl
movzwl
jmp
movl
movl
jb
call
sub
and
and
add
adc
subl
sub
sbbl
mov
mov
sub
mov
mov
adcl
xor
xor
mov
call
xorl
or
or
sub
mov
or
mov
andl
xor
xorl
xor
mov
call
mov
cmpl
movl
mov
movl
jmp
movl
jbe
call
or
xor
inc
or
andl
cmpl
notl
mov
jmp
mov
movl
je
push
pushl
call
mov
mov
and
sbb
not
mov
sub
sbb
or
and
mov
movl
mov
mov
xor
xorl
xor
addl
mov
mov
xor
mov
xor
or
mov
sub
mov
movl
mov
mov
movl
call
cmpl
mov
movl
mov
jmp
movl
movl
ja
push
push
call
and
addl
adcl
movzbl
xor
or
mov
adcl
or
mov
or
subl
push
push
subl
push
andl
push
orl
call
movzbl
mov
cmp
movl
jne
mov
sub
mov
mov
xorl
mov
subl
xor
xorl
xor
mov
call
adc
mov
add
mov
xor
mov
mov
incl
xor
addl
xor
xorl
mov
xorl
call
or
and
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
mov
sub
mov
xor
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
sub
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
or
mov
xor
mov
sub
mov
mov
sub
mov
xor
mov
div
mov
xor
div
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
notl
jmp
movl
mov
jle
pushl
push
push
pushl
call
negl
addl
orl
adc
sbbl
sbbl
not
push
push
not
mov
or
movl
jne
cmpl
movl
mov
mov
jmp
mov
jl
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
sbb
and
or
xor
xor
mov
sub
add
add
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
je
add
mov
mov
pop
pop
movl
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
shld
shl
ret
xor
mov
addl
xor
and
shl
ret
xor
xor
ret
